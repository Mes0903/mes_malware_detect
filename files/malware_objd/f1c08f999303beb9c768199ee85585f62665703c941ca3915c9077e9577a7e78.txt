
f1c08f999303beb9c768199ee85585f62665703c941ca3915c9077e9577a7e78.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	push   ecx
  411001:	push   ebp
  411002:	mov    ebp,DWORD PTR [esp+0x10]
  411006:	xor    eax,eax
  411008:	test   ebp,ebp
  41100a:	push   esi
  41100b:	mov    DWORD PTR [esp+0x8],eax
  41100f:	mov    esi,0xfffffffd
  411014:	je     0x41107a
  411016:	push   ebx
  411017:	push   edi
  411018:	mov    edi,DWORD PTR [esp+0x18]
  41101c:	mov    DWORD PTR [esp+0x1c],0x1
  411024:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  411028:	add    esi,0x2
  41102b:	inc    esi
  41102c:	mov    BYTE PTR [esi+edi*1],cl
  41102f:	mov    ecx,DWORD PTR [esp+0x24]
  411033:	movzx  ecx,BYTE PTR [eax+ecx*1]
  411037:	mov    edx,DWORD PTR [esp+0x10]
  41103b:	mov    eax,DWORD PTR [esp+0x1c]
  41103f:	add    edx,eax
  411041:	mov    DWORD PTR [esp+0x10],edx
  411045:	ror    eax,cl
  411047:	mov    eax,DWORD PTR [esp+0x10]
  41104b:	mov    edx,eax
  41104d:	shr    edx,0x3
  411050:	mov    ebx,0x1
  411055:	sub    ebx,edx
  411057:	imul   eax,ebx
  41105a:	mov    DWORD PTR [esp+0x10],eax
  41105e:	shl    ebx,0x3
  411061:	mov    bl,BYTE PTR [esi+edi*1]
  411064:	add    bl,cl
  411066:	mov    ecx,DWORD PTR [esp+0x20]
  41106a:	mov    BYTE PTR [esi+edi*1],bl
  41106d:	sub    esi,0x2
  411070:	cmp    esi,ecx
  411072:	jl     0x411024
  411074:	pop    edi
  411075:	pop    ebx
  411076:	pop    esi
  411077:	pop    ebp
  411078:	pop    ecx
  411079:	ret    
  41107a:	push   ecx
  41107b:	aaa    
  41107c:	sub    BYTE PTR [esi-0x794dc0ba],0x94
  411083:	inc    esi
  411084:	sub    al,0xf
  411086:	push   edi
  411087:	leave  
  411088:	push   ebp
  411089:	imul   edi,DWORD PTR [edx],0xffffffa9
  41108c:	cmp    DWORD PTR [esp+eiz*4+0x234b4f57],edx
  411093:	xchg   esp,eax
  411094:	sti    
  411095:	sbb    esi,DWORD PTR [ecx+0x7c6ef83e]
  41109b:	push   edi
  41109c:	ret    0x5fcb
  41109f:	adc    al,0x42
  4110a1:	mov    bh,0x9e
  4110a3:	std    
  4110a4:	mov    ah,0x2a
  4110a6:	mov    esp,0xdaa75dca
  4110ab:	rcl    BYTE PTR [ecx+0x29a8f4e4],1
  4110b1:	test   BYTE PTR [eax],al
  4110b3:	or     BYTE PTR [esi],0xc9
  4110b6:	or     edx,edx
  4110b8:	cmp    ch,al
  4110ba:	je     0x4110b4
  4110bc:	pop    ebx
  4110bd:	xchg   ebx,eax
  4110be:	sahf   
  4110bf:	test   al,0x92
  4110c1:	mov    ss,WORD PTR [edx+0x32]
  4110c4:	mov    es,esi
  4110c6:	fldenv [eax-0x3b]
  4110c9:	and    eax,0x8a6833fc
  4110ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110cf:	inc    ecx
  4110d0:	jne    0x4110af
  4110d2:	jb     0x4110a8
  4110d4:	ss jbe 0x4110a9
  4110d7:	ror    esi,1
  4110d9:	in     al,dx
  4110da:	fnstcw WORD PTR ds:0xb4408ea9
  4110e0:	sbb    ebp,DWORD PTR [ebx+0x4c64ea30]
  4110e6:	pop    ds
  4110e7:	inc    ecx
  4110e8:	shl    BYTE PTR [edi],0xf6
  4110eb:	and    al,0xa5
  4110ed:	fbstp  TBYTE PTR [eax-0x82c4c6d]
  4110f3:	lahf   
  4110f4:	sbb    eax,0xe2dddd3c
  4110f9:	push   edi
  4110fa:	shl    ah,cl
  4110fc:	dec    bl
  4110fe:	pop    es
  4110ff:	sti    
  411100:	and    al,0xc3
  411102:	sub    BYTE PTR [ebp-0x1fc14aa4],ah
  411108:	iret   
  411109:	les    edi,FWORD PTR [edx]
  41110b:	ret    
  41110c:	(bad)  
  41110e:	(bad)  [esi+0x61]
  411111:	cld    
  411112:	pop    edx
  411113:	test   al,0x3f
  411115:	clc    
  411116:	sbb    al,dl
  411118:	aam    0xe5
  41111a:	pop    ss
  41111b:	and    BYTE PTR [ebx],bl
  41111d:	loopne 0x4110f6
  41111f:	int3   
  411120:	cmp    esi,DWORD PTR [ebx-0x7a]
  411123:	arpl   ax,di
  411125:	fld    TBYTE PTR [edi-0x535d492a]
  41112b:	mul    DWORD PTR [ebx+0x2c]
  41112e:	jp     0x4110d1
  411130:	test   DWORD PTR [eax+eiz*2-0x11],edx
  411134:	enter  0x7b6e,0xd3
  411138:	lods   al,BYTE PTR ds:[esi]
  411139:	les    ecx,FWORD PTR [esi]
  41113b:	fldenv [edx+0x305da67a]
  411141:	jbe    0x4110f1
  411143:	in     al,dx
  411144:	in     eax,0xb4
  411146:	jne    0x411120
  411148:	repz pop edi
  41114a:	pop    eax
  41114b:	mov    ebx,0xe1d13d5c
  411150:	mov    ds:0x2252e1a7,eax
  411155:	scas   eax,DWORD PTR es:[edi]
  411156:	adc    esi,DWORD PTR ds:0xe76b18bf
  41115c:	push   ebx
  41115d:	jmp    0xd67d8035
  411162:	mov    eax,0xb716a993
  411167:	dec    edi
  411168:	mov    ds:0xdec36194,eax
  41116d:	jg     0x4111d8
  41116f:	enter  0xf68f,0xaa
  411173:	fidiv  DWORD PTR ss:[edi]
  411176:	cli    
  411177:	mov    esi,0xe08f7f73
  41117c:	dec    ecx
  41117d:	inc    esp
  41117e:	jle    0x4111cb
  411180:	mov    cl,0xec
  411182:	pop    esp
  411183:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411184:	dec    ebx
  411185:	jnp    0x41111f
  411187:	stc    
  411188:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411189:	adc    DWORD PTR [ecx+0x2c868783],edx
  41118f:	sbb    al,0x4d
  411191:	xchg   ebx,eax
  411192:	in     al,dx
  411193:	in     eax,dx
  411194:	sar    BYTE PTR [ebp+0x1a],1
  411197:	loopne 0x41118a
  411199:	and    dl,BYTE PTR [ebp+0x57]
  41119c:	js     0x411124
  41119e:	scas   al,BYTE PTR es:[edi]
  41119f:	mov    WORD PTR [ecx-0x7274b8d],ss
  4111a5:	int    0xcd
  4111a7:	nop
  4111a8:	fnstsw WORD PTR [esi-0x21]
  4111ab:	xchg   ebp,eax
  4111ac:	jmp    0x8da510e9
  4111b1:	aam    0x6e
  4111b3:	mov    ds:0x646c7d8d,al
  4111b8:	ret    0xae26
  4111bb:	push   eax
  4111bc:	or     cl,ah
  4111be:	sub    DWORD PTR [eax],0xef0d93b1
  4111c4:	test   al,0x16
  4111c6:	mov    DWORD PTR [ebx-0x60f9f67f],edi
  4111cc:	test   BYTE PTR [ebp+0x595bccac],ch
  4111d2:	sbb    esp,edi
  4111d4:	dec    ebx
  4111d5:	lds    eax,FWORD PTR [esi+0x7cf30dc5]
  4111db:	in     al,dx
  4111dc:	mov    ?,ebp
  4111de:	dec    edx
  4111df:	mov    bh,0x7
  4111e1:	je     0x41119a
  4111e3:	fst    QWORD PTR [edi]
  4111e5:	hlt    
  4111e6:	and    BYTE PTR [ebx+0x2695fea5],bh
  4111ec:	aad    0xc7
  4111ee:	xchg   ecx,eax
  4111ef:	sti    
  4111f0:	mov    ds:0x219daf80,eax
  4111f5:	cmp    al,0xac
  4111f7:	in     eax,0x51
  4111f9:	(bad)  [ecx]
  4111fb:	xlat   BYTE PTR ds:[ebx]
  4111fc:	push   esi
  4111fd:	mov    edi,DWORD PTR [eax-0x7585907]
  411203:	xchg   edi,eax
  411204:	push   0x2
  411206:	ret    
  411207:	addr16 mov eax,0x80504b80
  41120d:	jle    0x4111a3
  41120f:	fisub  WORD PTR [ebx+0x4d]
  411212:	int    0x97
  411214:	rcl    cl,0x45
  411217:	add    BYTE PTR [edx-0x697b272b],0xb6
  41121e:	(bad)  
  411220:	sahf   
  411221:	pop    ss
  411222:	inc    ebp
  411223:	sub    cl,ch
  411225:	out    dx,al
  411226:	stos   BYTE PTR es:[edi],al
  411227:	pop    ds
  411228:	xor    ecx,0x1e
  41122b:	stos   DWORD PTR es:[edi],eax
  41122c:	jns    0x411277
  41122e:	and    bl,BYTE PTR [eax-0x714f125f]
  411234:	dec    ebx
  411235:	enter  0x9d2c,0x80
  411239:	sub    ecx,DWORD PTR [ecx+eiz*8+0x38]
  41123d:	popf   
  41123e:	retf   0x5a2d
  411241:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411242:	cmp    ebp,DWORD PTR [eax+ecx*2+0x99c57d0]
  411249:	push   esp
  41124a:	inc    esp
  41124b:	rol    DWORD PTR [ebp+0x166b027e],cl
  411251:	sub    eax,0x1feeff44
  411256:	add    ebx,DWORD PTR [ebp+0x20]
  411259:	(bad)  
  41125b:	xor    DWORD PTR [ecx-0x516fa6d3],ecx
  411261:	or     dh,bl
  411263:	sub    ebx,edx
  411265:	retf   
  411266:	je     0x411298
  411268:	fnstcw WORD PTR es:0xca97db80
  41126f:	or     esi,DWORD PTR [edx+0x41]
  411272:	scas   eax,DWORD PTR es:[edi]
  411273:	push   es
  411274:	jp     0x411239
  411276:	outs   dx,BYTE PTR es:[esi]
  411278:	xor    bh,BYTE PTR [esi+edx*2-0x3c]
  41127c:	jle    0x4112a3
  41127e:	jns    0x4112d9
  411280:	rdtsc  
  411282:	mov    ds,WORD PTR [ebx]
  411284:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411285:	or     ah,BYTE PTR [edi]
  411287:	push   edx
  411288:	mov    ecx,DWORD PTR [esi+0x46a1838]
  41128e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41128f:	inc    ebx
  411290:	cmc    
  411291:	xchg   edi,eax
  411292:	sbb    DWORD PTR ds:0xbc633d03,ecx
  411298:	lods   al,BYTE PTR ds:[esi]
  411299:	dec    ax
  41129b:	adc    cl,ah
  41129d:	aam    0x94
  41129f:	loope  0x411301
  4112a1:	cld    
  4112a2:	sub    DWORD PTR [eax],0x4
  4112a5:	(bad)  
  4112a6:	(bad)  
  4112a7:	das    
  4112a8:	mov    ebx,0x80e39def
  4112ad:	jmp    0x9cf1665c
  4112b2:	mov    al,BYTE PTR [eax+eax*1+0x1773c26d]
  4112b9:	or     cl,dl
  4112bb:	popa   
  4112bc:	xor    esi,ebx
  4112be:	jns    0x4112d2
  4112c0:	mov    bh,ch
  4112c2:	push   0xffffff88
  4112c4:	gs cmp al,0xfe
  4112c7:	retf   0xac46
  4112ca:	pop    esp
  4112cb:	stc    
  4112cc:	jp     0x411346
  4112ce:	hlt    
  4112cf:	out    0x38,eax
  4112d1:	inc    esp
  4112d2:	mov    gs,WORD PTR [ebx+0x7051698b]
  4112d8:	and    edi,edi
  4112da:	sbb    eax,0xb842a675
  4112df:	lock or BYTE PTR [edx],al
  4112e2:	sbb    al,0x13
  4112e4:	mov    dh,0x68
  4112e6:	out    0xc0,al
  4112e8:	mov    ebp,0x22209a48
  4112ed:	mov    bh,0xce
  4112ef:	sub    edx,DWORD PTR [edi-0x12d3dcf4]
  4112f5:	push   esi
  4112f6:	call   0x90dfd53b
  4112fb:	out    0xb1,eax
  4112fd:	scas   eax,DWORD PTR es:[edi]
  4112fe:	inc    eax
  4112ff:	stos   DWORD PTR es:[edi],eax
  411300:	test   eax,0x2c0aeb2f
  411305:	stos   DWORD PTR es:[edi],eax
  411306:	retf   
  411307:	jmp    0x71b6:0x4023d165
  41130e:	fwait
  41130f:	mov    esi,eax
  411311:	cwde   
  411312:	ja     0x411329
  411314:	(bad)  
  411315:	pushf  
  411316:	inc    ebx
  411317:	ss fcmovu st,st(3)
  41131a:	fisub  WORD PTR [ebx+0x7b]
  41131d:	movq   QWORD PTR [ecx],mm2
  411320:	adc    al,0xa8
  411322:	sar    BYTE PTR [ecx],1
  411324:	jae    0x41136f
  411326:	cdq    
  411327:	fbld   TBYTE PTR [ebx-0x51e785bf]
  41132d:	test   BYTE PTR [eax+0x22],al
  411330:	fs add al,0x92
  411333:	scas   al,BYTE PTR es:[edi]
  411334:	(bad)  
  411336:	jnp    0x411358
  411338:	je     0x4112ec
  41133a:	(bad)  
  41133b:	cmp    DWORD PTR [eax],ecx
  41133d:	inc    eax
  41133e:	retf   0x8543
  411341:	(bad)  
  411342:	int3   
  411343:	fmul   QWORD PTR [ebx+ebp*8+0x5aa09b1d]
  41134a:	xchg   ebx,eax
  41134b:	or     BYTE PTR [eax],bl
  41134d:	pop    edx
  41134e:	add    ah,BYTE PTR [edi]
  411350:	pusha  
  411351:	or     BYTE PTR [edi-0x6ed70ff3],dl
  411357:	test   BYTE PTR [edi-0x34],ah
  41135a:	scas   al,BYTE PTR es:[edi]
  41135b:	sbb    al,BYTE PTR ds:0xd24e465a
  411361:	mov    al,BYTE PTR [esp+esi*2-0x56]
  411365:	(bad)  
  411366:	xchg   ecx,eax
  411367:	mov    eax,0x38eaec9f
  41136c:	xchg   ebp,eax
  41136d:	jg     0x41135a
  41136f:	pop    es
  411370:	mov    ebp,0xcf8f3c30
  411375:	fs mov ebp,0x90b7cd31
  41137b:	mov    ebx,0x2bdb0289
  411380:	add    eax,0xe75df3bc
  411385:	inc    esi
  411386:	xor    BYTE PTR [eax-0x4e],bl
  411389:	jb     0x4113de
  41138b:	mov    eax,ds:0xf9969ed3
  411390:	mov    ebp,0x1eabc3ec
  411395:	push   0xce60abfd
  41139a:	pop    esi
  41139b:	out    dx,al
  41139c:	pop    esp
  41139d:	cmp    DWORD PTR [ebp+0x3c],edi
  4113a0:	je     0x411411
  4113a2:	inc    ecx
  4113a3:	pop    esi
  4113a4:	scas   eax,DWORD PTR es:[edi]
  4113a5:	aaa    
  4113a6:	test   eax,0x102c9159
  4113ab:	(bad)  
  4113ac:	data16 xor BYTE PTR [edx],0xa
  4113b0:	adc    DWORD PTR [ebp+0x30eb70c1],ebp
  4113b6:	int    0x26
  4113b8:	adc    ebx,esp
  4113ba:	mov    dl,dh
  4113bc:	pop    ebx
  4113bd:	sub    DWORD PTR [esi+eiz*1-0x11],ebx
  4113c1:	jmp    0xfc71e334
  4113c6:	sbb    DWORD PTR [edx+ebx*4],ebx
  4113c9:	or     bh,cl
  4113cb:	mov    ds:0x24597e28,al
  4113d0:	add    BYTE PTR [ecx+edx*1-0x2ca55431],bh
  4113d7:	xchg   edx,eax
  4113d8:	in     eax,dx
  4113d9:	pop    esi
  4113da:	addr16 dec ecx
  4113dc:	outs   dx,BYTE PTR ds:[esi]
  4113dd:	and    bh,BYTE PTR [edx]
  4113df:	scas   eax,DWORD PTR es:[edi]
  4113e0:	cdq    
  4113e1:	daa    
  4113e2:	(bad)  
  4113e3:	jecxz  0x4113aa
  4113e5:	pusha  
  4113e6:	pop    ds
  4113e7:	sbb    eax,0xbb27761e
  4113ec:	adc    dh,dl
  4113ee:	sbb    eax,0x22671efd
  4113f3:	mov    al,ah
  4113f5:	add    dl,dl
  4113f7:	(bad)  
  4113f8:	jno    0x4113f0
  4113fa:	mov    ecx,0x260f3638
  4113ff:	lods   eax,DWORD PTR ds:[esi]
  411400:	inc    ebx
  411401:	frstor [esi-0xa]
  411404:	add    ebp,esp
  411406:	les    esi,FWORD PTR [esi-0x14]
  411409:	stos   DWORD PTR es:[di],eax
  41140b:	fdivr  QWORD PTR [esi-0x53f13c2d]
  411411:	gs dec esp
  411413:	sub    dh,bl
  411415:	dec    edi
  411416:	pop    esi
  411417:	lods   eax,DWORD PTR ds:[esi]
  411418:	cmp    BYTE PTR [ebx+edx*1-0x1d896706],al
  41141f:	inc    edi
  411420:	(bad)  
  411421:	daa    
  411422:	and    dh,BYTE PTR [ecx+0x36de6310]
  411428:	sahf   
  411429:	mov    al,0x99
  41142b:	adc    esp,DWORD PTR [eax-0x5a]
  41142e:	test   eax,0xe5415591
  411433:	jle    0x4113df
  411435:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411436:	inc    edi
  411437:	push   edx
  411438:	pop    edi
  411439:	dec    ecx
  41143a:	xchg   edx,eax
  41143b:	inc    esp
  41143c:	in     al,dx
  41143d:	fld    DWORD PTR [ebx-0x37f00af8]
  411443:	scas   eax,DWORD PTR es:[edi]
  411444:	aas    
  411445:	(bad)  
  411446:	fsub   DWORD PTR [ebx]
  411448:	xchg   ebp,eax
  411449:	(bad)  
  41144a:	out    0x6b,eax
  41144c:	inc    esp
  41144d:	cmp    DWORD PTR [esi+esi*2+0x6d],esp
  411451:	int3   
  411452:	in     eax,0x6a
  411454:	je     0x411432
  411456:	jp     0x41146c
  411458:	jnp    0x4114c3
  41145a:	inc    ebp
  41145b:	call   0x9793:0x8ceeb56e
  411462:	cld    
  411463:	je     0x4113f8
  411465:	out    0xb,al
  411467:	fwait
  411468:	ins    BYTE PTR es:[edi],dx
  411469:	lods   eax,DWORD PTR ds:[esi]
  41146a:	mov    ah,dl
  41146c:	push   ds
  41146d:	inc    esp
  41146e:	adc    edi,0x5b
  411471:	dec    ecx
  411472:	fwait
  411473:	imul   esi,DWORD PTR [edx+0x74],0x456a9973
  41147a:	popf   
  41147b:	(bad)  
  41147c:	cmp    ebx,DWORD PTR [ebx-0x55d0cad8]
  411482:	mov    dh,0x89
  411484:	add    bl,cl
  411486:	cmp    eax,0x13de3734
  41148b:	and    al,0x45
  41148d:	push   esp
  41148e:	jge    0x411478
  411490:	push   ecx
  411491:	push   ebp
  411492:	out    0x29,eax
  411494:	(bad)  [esi-0x2a]
  411497:	xlat   BYTE PTR ds:[ebx]
  411498:	aam    0x54
  41149a:	ret    
  41149b:	inc    edi
  41149c:	retf   0x173d
  41149f:	push   eax
  4114a0:	aam    0xdd
  4114a2:	dec    edi
  4114a3:	data16 int 0x25
  4114a6:	js     0x4114f0
  4114a8:	push   edx
  4114a9:	push   esi
  4114aa:	inc    esi
  4114ab:	jmp    0x5f98:0x70808b9d
  4114b2:	mov    esi,DWORD PTR ds:0xee4b102a
  4114b8:	pushf  
  4114b9:	bound  ebp,QWORD PTR [ecx]
  4114bb:	in     al,dx
  4114bc:	push   edx
  4114bd:	dec    esp
  4114be:	sub    DWORD PTR [edi-0x2],esi
  4114c1:	aam    0x81
  4114c3:	xor    DWORD PTR [edi+0x30c18238],eax
  4114c9:	shl    ebp,1
  4114cb:	daa    
  4114cc:	in     eax,0xd9
  4114ce:	jns    0x411450
  4114d0:	mov    esi,0x1ae868a0
  4114d5:	pop    esi
  4114d6:	faddp  st(6),st
  4114d8:	sub    bl,BYTE PTR [ebx]
  4114da:	iret   
  4114db:	xor    al,0xdf
  4114dd:	mov    edx,0x8b5c92f
  4114e2:	pop    edi
  4114e3:	pop    edx
  4114e4:	inc    ebx
  4114e5:	nop
  4114e6:	adc    al,BYTE PTR [ebp+0x6]
  4114e9:	test   ah,al
  4114eb:	push   ecx
  4114ec:	and    eax,0xefb720d2
  4114f1:	cmp    ah,al
  4114f3:	push   esi
  4114f4:	push   ebp
  4114f5:	or     esi,edi
  4114f7:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4114f9:	outs   dx,BYTE PTR ds:[esi]
  4114fa:	(bad)  
  4114fb:	neg    BYTE PTR [edx+0x5ca7d5e1]
  411501:	ret    
  411502:	std    
  411503:	pop    esi
  411504:	sti    
  411505:	fs ss loopne 0x4114c8
  411509:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41150a:	sbb    bh,BYTE PTR [eax]
  41150c:	in     al,dx
  41150d:	cmp    dh,ch
  41150f:	nop
  411510:	(bad)  
  411511:	push   0x819303cf
  411516:	cmp    DWORD PTR [edi+0x3c],0xfffffff4
  41151a:	push   0xffffff97
  41151c:	lods   al,BYTE PTR ds:[esi]
  41151d:	or     BYTE PTR [di],0x19
  411521:	cld    
  411522:	lods   eax,DWORD PTR ds:[esi]
  411523:	ds inc edx
  411525:	in     eax,dx
  411526:	jns    0x411569
  411528:	rcl    BYTE PTR [esi],cl
  41152a:	fs iret 
  41152c:	adc    cl,ah
  41152e:	je     0x411531
  411530:	gs (bad) 
  411533:	pop    ds
  411534:	jmp    0x4115a3
  411536:	and    eax,0x1c8ae4a4
  41153b:	mov    eax,ds:0x75481960
  411540:	jp     0x41152f
  411542:	sti    
  411543:	lock pop ds
  411545:	mov    ch,BYTE PTR [edx+0x695581f1]
  41154b:	ret    0x6492
  41154e:	or     DWORD PTR [edx+0x317de081],esp
  411554:	out    0x4f,al
  411556:	clc    
  411557:	dec    edx
  411558:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411559:	and    ah,BYTE PTR [edx]
  41155b:	ficomp DWORD PTR [esi+0x328e5471]
  411561:	movaps xmm6,XMMWORD PTR [ecx+0x8]
  411565:	sbb    al,0x44
  411567:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411568:	es popa 
  41156a:	scas   eax,DWORD PTR es:[edi]
  41156b:	repz xchg esi,eax
  41156d:	or     BYTE PTR [edi+0x5183f287],ah
  411573:	adc    eax,0x5b743363
  411578:	(bad)  
  411579:	mov    dl,0x96
  41157b:	dec    esp
  41157c:	mov    tr7,ecx
  41157f:	loop   0x4115e0
  411581:	cmp    al,BYTE PTR [ecx-0x20082405]
  411587:	mov    ch,0xfb
  411589:	in     ax,dx
  41158b:	or     DWORD PTR [edi],ecx
  41158d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41158e:	or     BYTE PTR [ebp+0x38],cl
  411591:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411592:	icebp  
  411593:	mov    WORD PTR [edx],gs
  411595:	mov    ah,0x79
  411597:	sahf   
  411598:	out    0x4c,eax
  41159a:	out    0x27,al
  41159c:	out    dx,al
  41159d:	jge    0x411540
  41159f:	mov    eax,ds:0x4970c92a
  4115a4:	push   0xbf0e0f37
  4115a9:	dec    eax
  4115aa:	and    BYTE PTR [eax*2+0x1179a50e],ch
  4115b1:	pop    es
  4115b2:	ret    
  4115b3:	(bad)
  4115b7:	push   0x2bce625
  4115bc:	lds    edi,FWORD PTR [edx+ebp*4+0x30]
  4115c0:	ins    BYTE PTR es:[edi],dx
  4115c1:	cmc    
  4115c2:	xor    ch,BYTE PTR [ecx-0x61]
  4115c5:	in     eax,dx
  4115c6:	sub    eax,0x2450ad4c
  4115cb:	dec    edx
  4115cc:	and    eax,0x23c58be7
  4115d1:	pop    esp
  4115d2:	lahf   
  4115d3:	push   eax
  4115d4:	stos   BYTE PTR es:[edi],al
  4115d5:	fcom   DWORD PTR [ebp+0x4e835a19]
  4115db:	mov    eax,DWORD PTR [eax+edx*2]
  4115de:	in     al,0x4b
  4115e0:	xor    eax,0xd5f42975
  4115e5:	hlt    
  4115e6:	punpckhdq mm2,QWORD PTR [esi+0x3]
  4115ea:	inc    esi
  4115eb:	es pushf 
  4115ed:	jmp    0xe53afa42
  4115f2:	out    dx,al
  4115f3:	std    
  4115f4:	js     0x411633
  4115f6:	mov    eax,0x732ff4c9
  4115fb:	or     eax,0x4b868bf0
  411600:	fimul  WORD PTR [esi+0x1]
  411603:	fdivr  st(0),st
  411605:	jecxz  0x411657
  411607:	add    DWORD PTR [edx+0x8647855],0xffffffcf
  41160e:	ror    eax,cl
  411610:	jecxz  0x411600
  411612:	xor    eax,0xc70c5b45
  411617:	inc    ebp
  411618:	push   es
  411619:	dec    edx
  41161a:	je     0x411635
  41161c:	mov    edi,0x5bfd63d3
  411621:	cli    
  411622:	cmp    ebx,DWORD PTR [edx+edi*4]
  411625:	mov    ebp,0xe9c237cf
  41162a:	xor    BYTE PTR [ebx-0x6f],ch
  41162d:	out    0x90,eax
  41162f:	(bad)  
  411630:	and    eax,0x57529683
  411635:	imul   eax,esp,0xf85cd29e
  41163b:	add    DWORD PTR [edx-0x61],ebp
  41163e:	pop    esi
  41163f:	push   ss
  411640:	adc    ebx,eax
  411642:	popf   
  411643:	mov    cr2,esi
  411646:	inc    ebx
  411647:	fcmovnb st,st(5)
  411649:	adc    eax,0xd0a11e05
  41164e:	xor    esi,eax
  411650:	inc    esi
  411651:	push   ebx
  411652:	cmp    al,0xdd
  411654:	xchg   edx,eax
  411655:	add    ch,BYTE PTR [ebp+0x35]
  411658:	push   ebp
  411659:	mov    eax,0x1041e73
  41165e:	jbe    0x41164c
  411660:	sbb    eax,DWORD PTR [ecx-0x64]
  411663:	or     eax,ecx
  411665:	pop    es
  411666:	mov    ebx,0x32e6748c
  41166b:	push   cs
  41166c:	div    DWORD PTR [ecx]
  41166e:	sub    BYTE PTR [edx],0xfd
  411671:	or     eax,0x39742208
  411676:	sub    BYTE PTR [ecx-0x7],ch
  411679:	test   BYTE PTR [ebp+0x2c],dl
  41167c:	inc    edi
  41167d:	cld    
  41167e:	jg     0x4116ed
  411680:	mov    ds:0x7a473f69,al
  411685:	inc    ebx
  411686:	out    dx,al
  411687:	sbb    al,0x65
  411689:	dec    ebx
  41168a:	mov    WORD PTR fs:[ebp+0x3f],es
  41168e:	idiv   BYTE PTR [eax]
  411690:	stos   DWORD PTR es:[edi],eax
  411691:	(bad)  
  411692:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411693:	into   
  411694:	repnz into 
  411696:	outs   dx,BYTE PTR ds:[esi]
  411697:	push   0xfd499623
  41169c:	push   ecx
  41169d:	sbb    eax,0x2e2e87f3
  4116a2:	xchg   edx,eax
  4116a3:	sub    ah,BYTE PTR [ecx]
  4116a5:	xchg   edx,eax
  4116a6:	ja     0x4116bc
  4116a8:	cmp    edx,edx
  4116aa:	fidivr WORD PTR [ebp+eiz*8-0x657cb7b2]
  4116b1:	adc    al,0xe9
  4116b3:	sbb    eax,0xb434bc6
  4116b8:	stos   BYTE PTR es:[edi],al
  4116b9:	gs push 0xa
  4116bc:	gs inc esp
  4116be:	or     eax,0xcb5e650
  4116c3:	and    al,0xf9
  4116c5:	add    eax,0xa7ad7cbd
  4116ca:	sbb    dl,dl
  4116cc:	pop    ss
  4116cd:	pop    ds
  4116ce:	mov    dl,0xd3
  4116d0:	das    
  4116d1:	add    eax,0x5837a97a
  4116d6:	je     0x4116c1
  4116d8:	mov    ch,BYTE PTR [edi-0x735df8d3]
  4116de:	pop    ds
  4116df:	adc    DWORD PTR [edi-0x1a95d8b8],edx
  4116e5:	stos   BYTE PTR es:[edi],al
  4116e6:	shl    BYTE PTR [eax],0x3a
  4116e9:	push   eax
  4116ea:	out    dx,al
  4116eb:	icebp  
  4116ec:	iret   
  4116ed:	(bad)  
  4116ee:	adc    ch,ah
  4116f0:	jne    0x41171a
  4116f2:	pop    ebp
  4116f3:	and    dh,BYTE PTR [edi-0x23]
  4116f6:	add    edi,DWORD PTR [edi]
  4116f8:	call   0xdea6:0xfb4bfd74
  4116ff:	sub    DWORD PTR [ecx-0x7bd4774c],edi
  411705:	inc    esi
  411706:	mov    cl,0xef
  411708:	mov    ch,BYTE PTR [ebx+ebx*1]
  41170b:	mov    eax,0xcd3a6b3a
  411710:	scas   eax,DWORD PTR es:[edi]
  411711:	mov    bh,0xa7
  411713:	fwait
  411714:	retf   
  411715:	jnp    0x411739
  411717:	loopne 0x41178b
  411719:	aam    0x64
  41171b:	pop    eax
  41171c:	adc    al,0x52
  41171e:	sub    bl,BYTE PTR [edi-0x496afed9]
  411724:	mov    dl,0x0
  411726:	cmp    eax,0x331e385e
  41172b:	jl     0x4116eb
  41172d:	sbb    al,0x48
  41172f:	push   ecx
  411730:	xchg   edi,eax
  411731:	add    al,cl
  411733:	mov    ds:0x4ce90de2,eax
  411738:	in     al,dx
  411739:	shl    DWORD PTR [edx-0x60bfd039],1
  41173f:	xor    bl,BYTE PTR [ebx+ebx*8-0x24f2331]
  411746:	jecxz  0x4116e6
  411748:	aad    0x97
  41174a:	or     al,0x77
  41174c:	pop    ebx
  41174d:	cmc    
  41174e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41174f:	jge    0x4117a0
  411751:	and    al,0x68
  411753:	cs jbe 0x411709
  411756:	mov    bl,0x61
  411758:	xchg   BYTE PTR [esi+0x2084585c],bh
  41175e:	ret    
  41175f:	xchg   DWORD PTR [edi+0x19e1872b],edx
  411765:	mov    cl,0xb9
  411767:	xor    esi,DWORD PTR cs:[eax+0x17c2dd4f]
  41176e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41176f:	push   0x4b587f89
  411774:	test   edx,ecx
  411776:	out    0x7b,al
  411778:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411779:	lea    edx,[ecx+0x3b]
  41177c:	out    dx,eax
  41177d:	aaa    
  41177e:	or     esp,DWORD PTR [edi+0x0]
  411781:	jb     0x4117d8
  411783:	stc    
  411784:	fbld   TBYTE PTR [ebx+0x3a9e555d]
  41178a:	or     esi,esi
  41178c:	dec    edx
  41178d:	dec    ebx
  41178e:	outs   dx,BYTE PTR ds:[esi]
  41178f:	out    dx,eax
  411790:	jecxz  0x411728
  411792:	jne    0x4117c9
  411794:	bound  ebx,QWORD PTR [esi-0x5b]
  411797:	dec    edx
  411798:	inc    esp
  411799:	lods   eax,DWORD PTR ds:[esi]
  41179a:	jno    0x411770
  41179c:	sbb    bl,0x9
  41179f:	lahf   
  4117a0:	aas    
  4117a1:	adc    ebp,esp
  4117a3:	mov    al,0x1f
  4117a5:	stos   BYTE PTR es:[edi],al
  4117a6:	aaa    
  4117a7:	jo     0x41176b
  4117a9:	mov    edx,0xa083249a
  4117ae:	loop   0x41175e
  4117b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117b1:	jno    0x411809
  4117b3:	push   ebp
  4117b4:	retf   0x97d9
  4117b7:	test   al,0xd2
  4117b9:	ret    
  4117ba:	out    dx,eax
  4117bb:	ds int 0xd1
  4117be:	sbb    eax,0x6262579e
  4117c3:	jo     0x41182b
  4117c5:	test   ax,0xb4a7
  4117c9:	not    BYTE PTR [ebp+ebp*4-0x12]
  4117cd:	shl    esi,0x4f
  4117d0:	pop    edi
  4117d1:	pop    ecx
  4117d2:	lods   eax,DWORD PTR ds:[esi]
  4117d3:	ror    DWORD PTR [ebx-0x602addf8],1
  4117d9:	outs   dx,DWORD PTR ds:[esi]
  4117da:	mov    cs,WORD PTR [edx+0x6b4490cd]
  4117e0:	dec    ebx
  4117e1:	addr16 lock stc 
  4117e4:	call   0xace8:0x72dc1e27
  4117eb:	into   
  4117ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117ed:	stc    
  4117ee:	imul   esi,ecx,0x880d2baf
  4117f4:	mov    eax,0x1fd60b73
  4117f9:	mov    bl,BYTE PTR [edi+0x47fb2d39]
  4117ff:	mov    BYTE PTR [ebx-0x5e],bl
  411802:	cmc    
  411803:	pop    ebp
  411804:	aam    0x43
  411806:	fistp  QWORD PTR [ecx+0x7c]
  411809:	adc    ah,ah
  41180b:	inc    ebp
  41180c:	cmp    cl,BYTE PTR [esi+0x4c1a5ffd]
  411812:	lods   al,BYTE PTR ds:[esi]
  411813:	int3   
  411814:	mov    eax,ds:0x4aaeae37
  411819:	jl     0x41183b
  41181b:	and    cl,BYTE PTR [eax-0x11]
  41181e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41181f:	pop    edx
  411820:	and    ebx,DWORD PTR [esi]
  411822:	les    ebx,FWORD PTR [esi+0x2f0b2c84]
  411828:	pushf  
  411829:	pop    ecx
  41182a:	xchg   esp,ecx
  41182c:	add    al,ah
  41182e:	push   cs
  41182f:	(bad)  
  411830:	das    
  411831:	(bad)  
  411832:	lds    edi,FWORD PTR ss:[esi-0x3d]
  411836:	mov    eax,0x8d7c942a
  41183b:	push   ds
  41183c:	in     al,dx
  41183d:	cmp    DWORD PTR [eax+0x47],ecx
  411840:	inc    edi
  411841:	push   es
  411842:	pop    ebx
  411843:	push   ss
  411844:	jp     0x4118a1
  411846:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411847:	mov    WORD PTR [edi+0xd4c77e6],?
  41184d:	mov    eax,ds:0x846d0bf6
  411852:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411853:	je     0x41186e
  411855:	data16 fdiv DWORD PTR [edi-0xb65e63b]
  41185c:	or     al,BYTE PTR [esi+esi*1]
  41185f:	inc    eax
  411860:	dec    ebp
  411861:	rcr    ch,cl
  411863:	mov    ds:0x8b54ad81,eax
  411868:	jbe    0x4118ab
  41186a:	ja     0x411819
  41186c:	or     ebx,esp
  41186e:	pop    ss
  41186f:	dec    edx
  411870:	(bad)  
  411871:	(bad)  
  411872:	aam    0x40
  411874:	mov    WORD PTR [esi+0x36],?
  411877:	sub    cl,dl
  411879:	pusha  
  41187a:	cs cs push eax
  41187d:	(bad)  
  41187e:	hlt    
  41187f:	aaa    
  411880:	pop    ecx
  411881:	ins    DWORD PTR es:[edi],dx
  411882:	add    al,0xca
  411884:	xor    DWORD PTR [eax-0x20],eax
  411887:	(bad)  
  411888:	cmp    eax,0xd9ec9c56
  41188d:	test   al,0xad
  41188f:	sub    eax,edx
  411891:	pop    ecx
  411892:	xchg   esi,eax
  411893:	inc    eax
  411894:	test   al,0x5c
  411896:	adc    edi,DWORD PTR [eax+0x59]
  411899:	mov    edi,0x52f83918
  41189e:	outs   dx,DWORD PTR ds:[esi]
  41189f:	jmp    0x411895
  4118a1:	aaa    
  4118a2:	je     0x4118cb
  4118a4:	xor    eax,0x7042efda
  4118a9:	stc    
  4118aa:	pop    ss
  4118ab:	nop
  4118ac:	and    al,0xb
  4118ae:	shl    DWORD PTR [ecx+ebx*8],1
  4118b1:	inc    ebx
  4118b2:	mov    esp,0x63a865ad
  4118b7:	mov    dl,BYTE PTR [ebx+eiz*4-0x58c82930]
  4118be:	loope  0x411870
  4118c0:	rcl    BYTE PTR [edx+0x70],1
  4118c3:	sar    ecx,1
  4118c5:	aam    0x8e
  4118c7:	dec    edi
  4118c8:	pop    edx
  4118c9:	out    dx,al
  4118ca:	mov    DWORD PTR [edi+0x2ff91af],edx
  4118d0:	sub    edx,ecx
  4118d2:	into   
  4118d3:	jno    0x41189e
  4118d5:	lods   eax,DWORD PTR fs:[esi]
  4118d7:	push   cs
  4118d8:	jmp    0x1e94:0x192fc8a6
  4118df:	scas   eax,DWORD PTR es:[edi]
  4118e0:	pushf  
  4118e1:	out    0x2c,eax
  4118e3:	dec    DWORD PTR ds:0xa7b354fd
  4118e9:	jle    0x4118e2
  4118eb:	xchg   ebx,eax
  4118ec:	xchg   esp,eax
  4118ed:	mov    ebp,0x922d7e9b
  4118f2:	adc    BYTE PTR [esi+ebx*1+0x5b],ch
  4118f6:	and    BYTE PTR [ebx+0x1],0x2f
  4118fa:	cmc    
  4118fb:	fadd   QWORD PTR [ecx-0x5d644208]
  411901:	(bad)  
  411902:	cvtpi2ps xmm7,QWORD PTR [edx+eax*2+0x61]
  411907:	and    eax,0x77fa1229
  41190c:	test   eax,0x99b89d21
  411911:	sbb    ebp,DWORD PTR [ebx-0x65ebd141]
  411917:	jno    0x4118b4
  411919:	loopne 0x41196e
  41191b:	cmp    edi,DWORD PTR [ecx]
  41191d:	(bad)  
  41191e:	push   ebx
  41191f:	pop    edi
  411920:	in     al,0x82
  411922:	js     0x41192e
  411924:	test   eax,0xebf5279b
  411929:	ret    
  41192a:	icebp  
  41192b:	inc    ebp
  41192c:	xor    al,ch
  41192e:	(bad)  
  41192f:	addr16 fucomip st,st(5)
  411932:	jae    0x411927
  411934:	test   eax,0x5ae17962
  411939:	ret    
  41193a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41193b:	call   0xf0f3:0x95ee3da6
  411942:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411943:	fst    DWORD PTR [edx-0x5e]
  411946:	cmp    eax,0xdf4ac917
  41194b:	or     eax,0xa3e5f4d2
  411950:	xchg   esi,eax
  411951:	adc    DWORD PTR [edx-0x65d131d],0x13
  411958:	pop    eax
  411959:	pop    es
  41195a:	xlat   BYTE PTR ds:[ebx]
  41195b:	dec    ecx
  41195c:	push   cs
  41195d:	stos   DWORD PTR es:[edi],eax
  41195e:	fmul   QWORD PTR [esi-0x70e53d90]
  411964:	xchg   ecx,eax
  411965:	in     eax,dx
  411966:	or     ebp,edi
  411968:	das    
  411969:	daa    
  41196a:	jl     0x41196d
  41196c:	retf   
  41196d:	fisttp DWORD PTR [edi+eax*8]
  411970:	push   esi
  411971:	mov    bh,0x85
  411973:	xchg   edi,eax
  411974:	pop    esi
  411975:	push   ebx
  411976:	adc    eax,0xefd31582
  41197b:	lds    ebx,FWORD PTR [ebx-0x2a0dedce]
  411981:	aas    
  411982:	mov    dl,0xcd
  411984:	jp     0x41197f
  411986:	aaa    
  411987:	mov    bl,0xf
  411989:	or     edi,DWORD PTR [esp+esi*8]
  41198c:	test   BYTE PTR [edx],0xe8
  41198f:	mov    fs,WORD PTR [edi+0x0]
  411992:	xchg   ebp,eax
  411993:	aaa    
  411994:	xor    esi,ebx
  411996:	jmp    0x4119ef
  411998:	cmp    ch,BYTE PTR [eax+0x3107059d]
  41199e:	ja     0x411979
  4119a0:	inc    ecx
  4119a1:	mov    ch,BYTE PTR [esi-0x11]
  4119a4:	out    dx,al
  4119a5:	sub    bh,BYTE PTR [ebp+0x75]
  4119a8:	push   ebx
  4119a9:	lods   eax,DWORD PTR ds:[esi]
  4119aa:	or     eax,0x8c98e01b
  4119af:	xchg   esp,eax
  4119b0:	push   ss
  4119b1:	pop    ds
  4119b2:	xchg   bl,ch
  4119b4:	retf   
  4119b5:	sysexit 
  4119b7:	aad    0xbc
  4119b9:	cmp    edi,DWORD PTR [edi+0x310b72e5]
  4119bf:	dec    eax
  4119c0:	mov    ds:0x760772bf,al
  4119c5:	cmp    al,0xdd
  4119c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119c8:	popf   
  4119c9:	push   es
  4119ca:	pushf  
  4119cb:	test   eax,0x25a62825
  4119d0:	popa   
  4119d1:	push   ebx
  4119d2:	fistp  QWORD PTR [edi]
  4119d4:	mov    dl,0x27
  4119d6:	cmp    WORD PTR es:[ecx],bp
  4119da:	int    0x84
  4119dc:	ins    DWORD PTR es:[edi],dx
  4119dd:	mov    dl,0x5a
  4119df:	lods   al,BYTE PTR ds:[esi]
  4119e0:	xchg   ebx,eax
  4119e1:	mov    esi,0xe670ef47
  4119e6:	lahf   
  4119e7:	adc    DWORD PTR [ebx-0x47],ecx
  4119ea:	pop    esi
  4119eb:	push   ecx
  4119ec:	sbb    al,dl
  4119ee:	test   dh,ah
  4119f0:	daa    
  4119f1:	fst    DWORD PTR [esi]
  4119f3:	sbb    DWORD PTR [edx],esi
  4119f5:	test   al,0xb2
  4119f7:	not    esi
  4119f9:	fidiv  WORD PTR [edi]
  4119fb:	or     cl,BYTE PTR [eax]
  4119fd:	ror    BYTE PTR [edx],1
  4119ff:	ins    DWORD PTR es:[edi],dx
  411a00:	jmp    0x2738daa2
  411a05:	or     DWORD PTR [edx+0x59],eax
  411a08:	inc    esi
  411a09:	push   edx
  411a0a:	jl     0x411a60
  411a0c:	inc    ebp
  411a0d:	mov    ebx,0x23017ddd
  411a12:	inc    ebp
  411a13:	je     0x411a7d
  411a15:	les    ecx,FWORD PTR [edx+0x3a]
  411a18:	lahf   
  411a19:	push   0x3f
  411a1b:	mov    ah,0x94
  411a1d:	in     eax,dx
  411a1e:	out    0x6a,eax
  411a20:	sub    DWORD PTR [esi+0x793b74d9],esi
  411a26:	mov    edi,0x11b37179
  411a2b:	cmp    bh,ch
  411a2d:	test   eax,0xca6c5af0
  411a32:	push   esp
  411a33:	push   edi
  411a34:	inc    esi
  411a35:	loopne 0x411a57
  411a37:	pop    ss
  411a38:	xchg   esp,eax
  411a39:	push   edi
  411a3a:	arpl   WORD PTR [eax+0x30398145],cx
  411a40:	or     al,0x20
  411a42:	stc    
  411a43:	clc    
  411a44:	ins    BYTE PTR es:[edi],dx
  411a45:	push   es
  411a46:	mov    eax,0xf171298d
  411a4b:	fistp  WORD PTR [ebx]
  411a4d:	mov    ds:0x8ff59349,al
  411a52:	pop    ecx
  411a53:	push   eax
  411a54:	leave  
  411a55:	ror    BYTE PTR [eax-0x6de2eead],cl
  411a5b:	outs   dx,BYTE PTR ds:[esi]
  411a5c:	pop    ss
  411a5d:	dec    ecx
  411a5e:	das    
  411a5f:	push   ss
  411a60:	push   0x408dfb03
  411a65:	pop    ebp
  411a66:	into   
  411a67:	xchg   ebp,eax
  411a68:	jnp    0x411a35
  411a6a:	push   0x64
  411a6c:	jo     0x411a48
  411a6e:	addr16 adc al,0x95
  411a71:	push   cs
  411a72:	push   edx
  411a73:	iret   
  411a74:	cdq    
  411a75:	adc    ah,ch
  411a77:	dec    edx
  411a78:	mov    esp,0xf263217f
  411a7d:	icebp  
  411a7e:	mov    al,ds:0xc3543e59
  411a83:	fcmovne st,st(2)
  411a85:	(bad)  
  411a86:	retf   0x42e2
  411a89:	cmc    
  411a8a:	fnstenv [ebx+0x29]
  411a8d:	jg     0x411a18
  411a8f:	dec    esp
  411a90:	addr16 (bad) 
  411a92:	fisubr DWORD PTR ds:0x1e5fe620
  411a98:	das    
  411a99:	sbb    ch,ch
  411a9b:	mov    ebx,0x481ccea0
  411aa0:	pop    ds
  411aa1:	and    eax,0xbaab5f21
  411aa6:	adc    DWORD PTR [esi-0x3a],0x4ba45ab8
  411aad:	xchg   esp,eax
  411aae:	mov    ebp,DWORD PTR [eax]
  411ab0:	pop    edx
  411ab1:	and    eax,0x21ad7e83
  411ab6:	dec    eax
  411ab7:	xlat   BYTE PTR ds:[ebx]
  411ab8:	ret    
  411ab9:	lea    eax,[edx]
  411abb:	sti    
  411abc:	daa    
  411abd:	arpl   bp,sp
  411abf:	mov    ?,WORD PTR [ebp-0x2c]
  411ac2:	lahf   
  411ac3:	mov    esp,0xbbafa809
  411ac8:	dec    ebp
  411ac9:	imul   esp,DWORD PTR [ebp-0x101ae59d],0x96ed36a5
  411ad3:	dec    edx
  411ad4:	xchg   edi,eax
  411ad5:	add    eax,0x7218f84f
  411ada:	out    dx,eax
  411adb:	xchg   BYTE PTR [ebx+esi*8],dh
  411ade:	cmp    ebx,DWORD PTR [ebp-0x40ff0b70]
  411ae4:	daa    
  411ae5:	lods   al,BYTE PTR ds:[esi]
  411ae6:	lahf   
  411ae7:	test   DWORD PTR [ebp+edx*2+0x35c2d0e5],edi
  411aee:	xchg   BYTE PTR [ebp-0x7a597d4f],dh
  411af4:	pusha  
  411af5:	jl     0x411a9b
  411af7:	and    edi,DWORD PTR [ebx+eiz*4]
  411afa:	stos   DWORD PTR es:[edi],eax
  411afb:	ja     0x411a8b
  411afd:	fadd   DWORD PTR [esi-0x56]
  411b00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b01:	add    ebp,ebx
  411b03:	ret    
  411b04:	xor    al,0x3
  411b06:	jl     0x411ab4
  411b08:	iret   
  411b09:	pushf  
  411b0a:	add    edi,esp
  411b0c:	cmp    eax,0xbf89b9e8
  411b11:	or     DWORD PTR [eax-0xb3a101a],0x90ff046d
  411b1b:	sub    dl,dl
  411b1d:	mov    WORD PTR [ecx+0x5c767898],?
  411b23:	add    BYTE PTR [edi-0x6],0xe2
  411b27:	iret   
  411b28:	sub    al,0x72
  411b2a:	ror    DWORD PTR [ecx],1
  411b2c:	imul   ecx,DWORD PTR [ebx+0x60308249],0x67dbc6db
  411b36:	xchg   esi,eax
  411b37:	fiadd  WORD PTR [edi+edi*4+0x57]
  411b3b:	jg     0x411b95
  411b3d:	mov    esi,0x6a6ed13e
  411b42:	loopne 0x411b05
  411b44:	mov    al,ds:0xc91e8c73
  411b49:	pushf  
  411b4a:	xchg   esi,eax
  411b4b:	inc    ebx
  411b4c:	pop    ss
  411b4d:	or     ecx,ebp
  411b4f:	imul   ecx,DWORD PTR [ecx],0x1736692e
  411b55:	mov    ah,0xd
  411b57:	adc    DWORD PTR [edx],edx
  411b59:	and    DWORD PTR ss:[ebp+0x7b941e70],edi
  411b60:	imul   ecx
  411b62:	pop    edx
  411b63:	outs   dx,DWORD PTR cs:[esi]
  411b65:	test   al,0xf8
  411b67:	std    
  411b68:	pop    esp
  411b69:	mov    eax,ds:0x85c15cce
  411b6e:	jge    0x411af1
  411b70:	enter  0x5490,0xd6
  411b74:	add    edx,DWORD PTR [esi+0x45e3aae5]
  411b7a:	push   ecx
  411b7b:	imul   edi,DWORD PTR [eax+0x28a5ed17],0xffffffaf
  411b82:	popa   
  411b83:	push   ss
  411b84:	nop
  411b85:	and    dl,ah
  411b87:	cmc    
  411b88:	aam    0x1e
  411b8a:	leave  
  411b8b:	out    0xea,eax
  411b8d:	icebp  
  411b8e:	mov    BYTE PTR [ecx+0x13b11e8c],cl
  411b94:	out    0xa7,eax
  411b96:	adc    eax,0x7d781063
  411b9b:	cld    
  411b9c:	sbb    BYTE PTR gs:[edi],ah
  411b9f:	inc    edx
  411ba0:	nop
  411ba1:	mov    WORD PTR [edi],?
  411ba3:	and    ch,0xb8
  411ba6:	sub    eax,esi
  411ba8:	sub    DWORD PTR [eax],ebp
  411baa:	xor    esp,DWORD PTR [esi-0x2a2316ae]
  411bb0:	dec    esp
  411bb1:	es adc al,0xd0
  411bb4:	and    ecx,edx
  411bb6:	test   edx,ebp
  411bb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411bb9:	dec    esi
  411bba:	test   eax,0xe4733450
  411bbf:	fbld   TBYTE PTR [esi+0x44e57ee6]
  411bc5:	stos   BYTE PTR es:[edi],al
  411bc6:	push   esp
  411bc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bc8:	mov    edi,0xadaa8822
  411bcd:	jno    0x411b65
  411bcf:	jmp    0x47c03446
  411bd4:	popa   
  411bd5:	mov    al,0x25
  411bd7:	test   al,0x64
  411bd9:	mov    dl,0x1b
  411bdb:	test   ah,0x47
  411bde:	pusha  
  411bdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411be0:	aaa    
  411be1:	inc    esp
  411be2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411be3:	out    dx,eax
  411be4:	and    ch,ah
  411be6:	jb     0x411bae
  411be8:	dec    ecx
  411be9:	clc    
  411bea:	xchg   ecx,eax
  411beb:	in     eax,dx
  411bec:	retf   
  411bed:	fld    TBYTE PTR [edx-0x7a]
  411bf0:	add    al,dh
  411bf2:	fdiv   QWORD PTR [esi+ebp*2-0x1c008049]
  411bf9:	or     DWORD PTR [esp+esi*8-0x2b],esi
  411bfd:	cmc    
  411bfe:	retf   0x90c7
  411c01:	call   0x9d2e:0x5585f7e5
  411c08:	(bad)  
  411c09:	test   al,0x5d
  411c0b:	sub    bh,dl
  411c0d:	fwait
  411c0e:	lods   eax,DWORD PTR ds:[esi]
  411c0f:	stc    
  411c10:	fsubr  QWORD PTR [ebx+esi*8]
  411c13:	lods   al,BYTE PTR ds:[esi]
  411c14:	(bad)  
  411c16:	rcl    DWORD PTR [ecx],cl
  411c18:	enter  0xc0,0x57
  411c1c:	test   DWORD PTR [ecx+edi*1-0x4479ff9b],0x36b888b2
  411c27:	mov    ch,0xa2
  411c29:	add    eax,0xba54fb46
  411c2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c2f:	mov    dl,0x86
  411c31:	inc    edi
  411c32:	inc    esi
  411c33:	cli    
  411c34:	jb     0x411c33
  411c36:	les    ecx,FWORD PTR [edx]
  411c38:	adc    eax,0x145f4dcd
  411c3d:	lods   eax,DWORD PTR ds:[esi]
  411c3e:	push   edi
  411c3f:	aas    
  411c40:	xor    ch,dl
  411c42:	push   ss
  411c43:	sbb    BYTE PTR [ecx],ah
  411c45:	loope  0x411c45
  411c47:	mov    edi,ecx
  411c49:	iret   
  411c4a:	dec    ebp
  411c4b:	xor    esi,DWORD PTR [ecx]
  411c4d:	push   es
  411c4e:	sub    eax,DWORD PTR [ebx+0x67]
  411c51:	inc    esp
  411c52:	ret    0x5552
  411c55:	es push ebp
  411c57:	mov    ah,0xfe
  411c59:	(bad)  
  411c5b:	cs ret 
  411c5d:	and    BYTE PTR [eax],cl
  411c5f:	imul   ebp,DWORD PTR ds:[ecx-0x28],0x973a5c06
  411c67:	and    BYTE PTR [edi+eiz*4+0x55],cl
  411c6b:	daa    
  411c6c:	or     edi,DWORD PTR [eax-0xa]
  411c6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c70:	int    0xba
  411c72:	adc    al,0xef
  411c74:	hlt    
  411c75:	jl     0x411c7e
  411c77:	aaa    
  411c78:	test   eax,0xde1ab4de
  411c7d:	arpl   WORD PTR [edx-0x3b7caa6b],ax
  411c83:	sub    esi,DWORD PTR [esp+ebp*4]
  411c86:	mov    bh,0xbe
  411c88:	mov    ch,BYTE PTR [ebp-0x5e]
  411c8b:	jae    0x411c7c
  411c8d:	jmp    0x656:0x402419d
  411c94:	aaa    
  411c95:	cmp    eax,0xe229c2d6
  411c9a:	jl     0x411c86
  411c9c:	adc    BYTE PTR [ebx-0x17da22e7],al
  411ca2:	int3   
  411ca3:	xchg   ecx,eax
  411ca4:	in     eax,dx
  411ca5:	pop    es
  411ca6:	xchg   DWORD PTR [ecx],ebp
  411ca8:	and    ebp,DWORD PTR [edx+0x898a003]
  411cae:	push   esi
  411caf:	jns    0x411cca
  411cb1:	ja     0x411d1f
  411cb3:	jle    0x411d01
  411cb5:	hlt    
  411cb6:	cwde   
  411cb7:	push   esi
  411cb8:	loopne 0x411c67
  411cba:	mov    al,0xff
  411cbc:	jmp    0x411ce3
  411cbe:	pop    ebx
  411cbf:	out    0x6e,al
  411cc1:	xchg   ecx,eax
  411cc2:	das    
  411cc3:	push   ss
  411cc4:	popf   
  411cc5:	cs xchg esi,eax
  411cc7:	dec    esi
  411cc8:	ret    0xad49
  411ccb:	inc    eax
  411ccc:	popa   
  411ccd:	fdiv   QWORD PTR [edx-0x31]
  411cd0:	rcl    DWORD PTR ds:0x996d83e9,1
  411cd6:	ud2    
  411cd8:	ja     0x411cbe
  411cda:	cmp    eax,0x1c3bb420
  411cdf:	dec    ebx
  411ce0:	ins    BYTE PTR es:[edi],dx
  411ce1:	fist   WORD PTR [ebx]
  411ce3:	cdq    
  411ce4:	mov    DWORD PTR [ecx+edi*1],eax
  411ce7:	call   0xb013:0xa00517b6
  411cee:	mov    cs,WORD PTR ds:0xf7b1bad
  411cf4:	imul   edi,DWORD PTR [edi+0x2e42de],0x386e1a90
  411cfe:	loope  0x411d11
  411d00:	xor    BYTE PTR [ecx-0x3f],ch
  411d03:	adc    ebp,DWORD PTR [esi-0x50d33c68]
  411d09:	fiadd  DWORD PTR [eax+0x36]
  411d0c:	push   ds
  411d0d:	dec    esi
  411d0e:	int    0x6f
  411d10:	and    al,0x43
  411d12:	sub    DWORD PTR ds:0x892194a0,esi
  411d18:	xor    al,0x6c
  411d1a:	repnz rcr dl,1
  411d1d:	mov    dl,0x45
  411d1f:	in     al,0xa3
  411d21:	cmp    DWORD PTR [eax-0x3d],esp
  411d24:	ja     0x411cf8
  411d26:	lods   eax,DWORD PTR ds:[esi]
  411d27:	(bad)  
  411d29:	mov    dh,0xd1
  411d2b:	fcos   
  411d2d:	fld    QWORD PTR [edi]
  411d2f:	mov    edi,DWORD PTR [ebx]
  411d31:	scas   al,BYTE PTR es:[edi]
  411d32:	ss push esp
  411d34:	inc    edx
  411d35:	sub    eax,0x163649ec
  411d3a:	mov    DWORD PTR ds:0x45de7bf8,ebx
  411d40:	pop    edi
  411d41:	jmp    0xfba7ae74
  411d46:	push   ss
  411d47:	lea    eax,[ecx]
  411d49:	xchg   DWORD PTR [ecx],ebx
  411d4b:	cs icebp 
  411d4d:	xor    ch,ch
  411d4f:	xor    ecx,DWORD PTR [esi]
  411d51:	imul   ebx,esp,0x69
  411d54:	adc    al,0xba
  411d56:	sbb    dh,bh
  411d58:	dec    ebp
  411d59:	test   eax,0xa7cf0e7c
  411d5e:	adc    bh,BYTE PTR [ecx]
  411d60:	cwde   
  411d61:	jo     0x411d77
  411d63:	retf   
  411d64:	lds    eax,FWORD PTR ds:0xdacbe326
  411d6a:	ja     0x411d70
  411d6c:	les    ebx,FWORD PTR [ecx]
  411d6e:	sub    ebx,DWORD PTR [esi+edx*1-0x36]
  411d72:	xchg   bl,al
  411d74:	mov    al,0xfd
  411d76:	out    dx,al
  411d77:	ror    BYTE PTR [esi],0xdb
  411d7a:	mov    esi,0xfaff8b32
  411d7f:	adc    eax,0x5a99c6dd
  411d84:	clc    
  411d85:	fdiv   QWORD PTR [edx+esi*2+0x14910a3a]
  411d8c:	cli    
  411d8d:	rol    cl,0x12
  411d90:	into   
  411d91:	aam    0x6e
  411d93:	jl     0x411d5e
  411d95:	mov    edx,0x4408a741
  411d9a:	mov    ah,BYTE PTR [esi+esi*4-0x7b]
  411d9e:	xor    eax,0x1f3c48a8
  411da3:	fstp   DWORD PTR [ebp+esi*4-0x21]
  411da7:	in     eax,dx
  411da8:	outs   dx,DWORD PTR ds:[esi]
  411da9:	fimul  DWORD PTR [ebp-0x6b]
  411dac:	jecxz  0x411d96
  411dae:	jnp    0x411d3c
  411db0:	cmc    
  411db1:	xor    BYTE PTR [ecx+0x7398037],bh
  411db7:	mov    ch,0x29
  411db9:	cmp    ch,BYTE PTR [ecx+0x1e07a2fb]
  411dbf:	jno    0x411e09
  411dc1:	fldenv [ecx+edx*4-0x1718f8b0]
  411dc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411dc9:	mov    al,0x65
  411dcb:	js     0x411e1a
  411dcd:	clc    
  411dce:	push   ss
  411dcf:	mov    esp,0x17d7f7fb
  411dd4:	adc    DWORD PTR [ecx+0x9],edi
  411dd7:	ins    DWORD PTR es:[edi],dx
  411dd8:	mov    dl,BYTE PTR [eax]
  411dda:	lods   al,BYTE PTR ds:[esi]
  411ddb:	adc    DWORD PTR [eax-0x3a1c75cc],0xffffffd1
  411de2:	das    
  411de3:	sub    eax,0x2247f926
  411de8:	jnp    0x411d9b
  411dea:	adc    edi,ebp
  411dec:	and    BYTE PTR [ecx+esi*1],dl
  411def:	push   edx
  411df0:	call   0x2ae85417
  411df5:	and    eax,0x41d1f1a5
  411dfa:	out    0x2,al
  411dfc:	jge    0x411db0
  411dfe:	sub    BYTE PTR [ecx+0x63ea133d],cl
  411e04:	mov    bh,0x99
  411e06:	into   
  411e07:	rcr    DWORD PTR [ebx-0x20],1
  411e0a:	inc    edi
  411e0b:	lods   al,BYTE PTR ds:[esi]
  411e0c:	mov    esi,0x47d20770
  411e11:	imul   ebx,DWORD PTR [esi+0x7c802083],0xffffff8a
  411e18:	sub    ebp,ebx
  411e1a:	push   edi
  411e1b:	into   
  411e1c:	push   0xffffffdf
  411e1e:	sub    ebx,eax
  411e20:	data16 fstp DWORD PTR [ecx+0x5971f67b]
  411e27:	dec    esi
  411e28:	pop    es
  411e29:	(bad)  
  411e2a:	fld    DWORD PTR [eax]
  411e2c:	loopne 0x411e18
  411e2e:	dec    ebp
  411e2f:	dec    ebx
  411e30:	js     0x411e06
  411e32:	xor    ecx,DWORD PTR [edi-0x6a]
  411e35:	push   ss
  411e36:	pop    es
  411e37:	daa    
  411e38:	ja     0x411ea8
  411e3a:	fsub   st(4),st
  411e3c:	imul   ecx,eax,0xffffffc4
  411e3f:	cli    
  411e40:	and    bl,BYTE PTR [edi-0x50]
  411e43:	retf   0x7ddd
  411e46:	clc    
  411e47:	dec    edi
  411e48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e49:	inc    ecx
  411e4a:	rcr    BYTE PTR [edi+0x32],1
  411e4d:	dec    edx
  411e4e:	push   ds
  411e4f:	mov    esi,0x35147677
  411e54:	dec    edx
  411e55:	cmp    eax,0x5a69462e
  411e5a:	aam    0xea
  411e5c:	sahf   
  411e5d:	or     al,0x3f
  411e5f:	add    ebp,DWORD PTR [edi-0x29]
  411e62:	xlat   BYTE PTR ds:[ebx]
  411e63:	pop    ss
  411e64:	and    eax,0xfa279562
  411e69:	dec    esp
  411e6a:	dec    esi
  411e6b:	in     al,dx
  411e6c:	out    0x26,eax
  411e6e:	mov    ah,0x4c
  411e70:	pop    ebp
  411e71:	aas    
  411e72:	(bad)  
  411e73:	cmp    DWORD PTR [edx+esi*8-0x20bb4bc2],ebx
  411e7a:	in     eax,dx
  411e7b:	jns    0x411e8b
  411e7d:	test   eax,0x731aae83
  411e82:	mov    ah,0x55
  411e84:	xchg   ebp,eax
  411e85:	test   al,0xf9
  411e87:	xor    al,0x2d
  411e89:	mov    ch,0xcf
  411e8b:	mov    DWORD PTR [ecx+0xf5110e4],esp
  411e91:	xchg   DWORD PTR [eax],edx
  411e93:	(bad)  
  411e94:	mov    ds:0xc48fd66f,al
  411e99:	xchg   ecx,eax
  411e9a:	jbe    0x411e4f
  411e9c:	pop    edi
  411e9d:	mov    WORD PTR [esi+edx*8-0x642ed8df],?
  411ea4:	loopne 0x411e99
  411ea6:	sbb    esi,ebp
  411ea8:	pop    eax
  411ea9:	xchg   BYTE PTR [esi],al
  411eab:	dec    ebx
  411eac:	xchg   edx,eax
  411ead:	adc    BYTE PTR [ebx],ah
  411eaf:	ror    cl,1
  411eb1:	mov    edi,0xb19fe065
  411eb6:	inc    ebp
  411eb7:	imul   ebp,DWORD PTR [esi-0x19],0xed70ce0b
  411ebe:	and    eax,0x28cd388f
  411ec3:	js     0x411e5b
  411ec5:	jmp    0x9a0e2556
  411eca:	in     al,dx
  411ecb:	or     al,BYTE PTR [ecx]
  411ecd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ece:	sahf   
  411ecf:	inc    esp
  411ed0:	sub    ebp,DWORD PTR [ecx-0x30]
  411ed3:	pop    ebx
  411ed4:	jecxz  0x411ef4
  411ed6:	pushf  
  411ed7:	dec    esi
  411ed8:	pop    esi
  411ed9:	ds and ch,dh
  411edc:	push   ebp
  411edd:	and    dh,BYTE PTR [eax-0x3e8042f7]
  411ee3:	icebp  
  411ee4:	mov    edx,0xa01d925
  411ee9:	sub    eax,0x126e9672
  411eee:	in     al,dx
  411eef:	stc    
  411ef0:	jbe    0x411e82
  411ef2:	mov    bh,0xe7
  411ef4:	inc    ebp
  411ef5:	lods   eax,DWORD PTR ds:[esi]
  411ef6:	push   ebp
  411ef7:	popf   
  411ef8:	mov    dl,BYTE PTR [edi+0x4c]
  411efb:	popa   
  411efc:	gs int3 
  411efe:	out    dx,eax
  411eff:	cmp    esp,esi
  411f01:	jo     0x411e97
  411f03:	or     edx,edx
  411f05:	nop
  411f06:	call   0x3f0c:0x66289a28
  411f0d:	(bad)  
  411f0e:	in     eax,0xd3
  411f10:	sti    
  411f11:	loope  0x411f4c
  411f13:	jne    0x411f5f
  411f15:	adc    eax,0xa77666a9
  411f1a:	sub    edi,DWORD PTR [eax]
  411f1c:	shl    BYTE PTR [ebx-0x2e],cl
  411f1f:	shl    al,0x6b
  411f22:	jnp    0x411f7d
  411f24:	sahf   
  411f25:	push   edi
  411f26:	lahf   
  411f27:	mov    dh,0xe1
  411f29:	cmp    BYTE PTR [esi+0x25f38497],bh
  411f2f:	dec    ebx
  411f30:	call   ebp
  411f32:	daa    
  411f33:	mov    al,0x3c
  411f35:	jge    0x411f92
  411f37:	mov    DWORD PTR [ebx],ebp
  411f39:	cmp    esi,eax
  411f3b:	lea    edx,[esi+ebp*4+0x77]
  411f3f:	pop    eax
  411f40:	dec    ecx
  411f41:	cmp    edi,DWORD PTR [esi]
  411f43:	adc    al,0xd7
  411f45:	mov    ah,0x6d
  411f47:	mov    DWORD PTR [esp+ebx*4-0x69],edx
  411f4b:	xchg   esp,eax
  411f4c:	lods   eax,DWORD PTR ds:[esi]
  411f4d:	jbe    0x411f89
  411f4f:	cwde   
  411f50:	mov    WORD PTR [eax-0xb250860],es
  411f56:	pop    ss
  411f57:	inc    ebp
  411f58:	int3   
  411f59:	adc    eax,0x34df01c5
  411f5e:	xchg   esi,ebp
  411f60:	cmp    DWORD PTR [esi+ebp*1+0x3c9a6fef],ebp
  411f67:	xor    edx,0xffffffbb
  411f6a:	inc    eax
  411f6b:	clc    
  411f6c:	dec    esi
  411f6d:	sbb    ecx,esi
  411f6f:	jmp    0xea135b5c
  411f74:	inc    eax
  411f75:	stc    
  411f76:	fiadd  WORD PTR [eax]
  411f78:	cld    
  411f79:	jmp    0xcb8b:0x8f24f81b
  411f80:	add    al,bh
  411f82:	push   eax
  411f83:	fidiv  DWORD PTR [eiz*4+0x4c61c2f5]
  411f8a:	sti    
  411f8b:	cmc    
  411f8c:	or     cl,bl
  411f8e:	shr    bh,0xa8
  411f91:	dec    edi
  411f92:	mov    ds:0xab1189d8,al
  411f97:	cmp    esp,ecx
  411f99:	sbb    DWORD PTR [ebp+0x40b2ebdd],eax
  411f9f:	or     ebp,DWORD PTR [edi+0x11366cb2]
  411fa5:	mov    ds:0x3efc946e,eax
  411faa:	les    ebx,FWORD PTR [ebx-0x4cceb804]
  411fb0:	push   cs
  411fb1:	iret   
  411fb2:	add    cl,bh
  411fb4:	lods   al,BYTE PTR ds:[esi]
  411fb5:	cmc    
  411fb6:	(bad)  
  411fb7:	(bad)  
  411fb9:	aaa    
  411fba:	pop    esi
  411fbb:	xor    eax,0xfbde385f
  411fc0:	adc    BYTE PTR [ebx+esi*8+0x97ce9a0],cl
  411fc7:	test   BYTE PTR [esi-0xd9a4233],cl
  411fcd:	int    0x9b
  411fcf:	mov    ds:0x9ffb2bb1,al
  411fd4:	repnz sbb BYTE PTR [edx],0x38
  411fd8:	mov    ecx,0xe4527ee2
  411fdd:	dec    ebp
  411fde:	xor    DWORD PTR [esi+edx*8-0x11],esp
  411fe2:	xchg   edi,eax
  411fe3:	inc    esi
  411fe4:	dec    esi
  411fe5:	gs dec ebx
  411fe7:	cmc    
  411fe8:	lahf   
  411fe9:	and    ebp,DWORD PTR [esp+eax*8-0x61]
  411fed:	enter  0x1f84,0xe3
  411ff1:	and    edi,ebp
  411ff3:	push   ebx
  411ff4:	xchg   esi,eax
  411ff5:	mov    ds:0xcb85d4da,al
  411ffa:	pushf  
  411ffb:	xor    DWORD PTR [edi+0x56],ebx
  411ffe:	stos   BYTE PTR es:[edi],al
  411fff:	jb     0x412027
  412001:	mov    eax,0x9fe50190
  412006:	inc    ecx
  412007:	sub    BYTE PTR [ebp+0x1b0288fa],0xac
  41200e:	sbb    edx,DWORD PTR [edi+ecx*8-0xcbea64f]
  412015:	pusha  
  412016:	rcr    DWORD PTR [esi+eiz*1+0x2ba9410a],0x28
  41201e:	jle    0x41207e
  412020:	push   ss
  412021:	not    BYTE PTR [ecx]
  412023:	mov    fs,WORD PTR [edi+ebx*8]
  412026:	dec    esp
  412027:	jo     0x412019
  412029:	adc    ch,BYTE PTR [ebx]
  41202b:	lods   al,BYTE PTR ds:[esi]
  41202c:	push   edi
  41202d:	adc    al,0x43
  41202f:	ja     0x41204a
  412031:	ret    
  412032:	loopne 0x412079
  412034:	adc    al,BYTE PTR [ebp-0x14c66541]
  41203a:	into   
  41203b:	sub    al,0xf8
  41203d:	fsub   QWORD PTR [esi+0x11dfecdf]
  412043:	test   BYTE PTR [ebx+0x3e],dh
  412046:	repz aam 0xdb
  412049:	dec    cl
  41204b:	push   edx
  41204c:	pop    ebx
  41204d:	loopne 0x4120b6
  41204f:	jne    0x41202d
  412051:	add    dh,bh
  412053:	mov    cl,0x9d
  412055:	dec    edi
  412056:	jg     0x41209a
  412058:	mov    al,ds:0x2fe4479a
  41205d:	scas   eax,DWORD PTR es:[edi]
  41205e:	(bad)  
  41205f:	mov    dh,0x8c
  412061:	mov    ch,0x84
  412063:	sbb    ah,BYTE PTR [esp+ebx*2-0x69]
  412067:	xor    al,0x74
  412069:	fist   WORD PTR [eax+0x49c0a78e]
  41206f:	je     0x412054
  412071:	xchg   ecx,eax
  412072:	sub    edi,DWORD PTR [esi-0x714ecd42]
  412078:	popf   
  412079:	adc    edi,DWORD PTR [ebx+0x230e5553]
  41207f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412080:	inc    ebp
  412081:	dec    ecx
  412082:	call   0xad3c6ac6
  412087:	adc    BYTE PTR [edx+0x799cf8cb],dh
  41208d:	iret   
  41208e:	and    BYTE PTR [eax+0x1320f580],dl
  412094:	or     eax,0x1c3d2a6d
  412099:	sbb    edx,DWORD PTR [eax+ebx*2]
  41209c:	loopne 0x41201f
  41209e:	aas    
  41209f:	xor    eax,0x26ca2bb0
  4120a4:	loope  0x41204e
  4120a6:	mov    ecx,DWORD PTR [ebx-0x25]
  4120a9:	jge    0x412093
  4120ab:	adc    eax,0x165c43fb
  4120b0:	ret    
  4120b1:	dec    ecx
  4120b2:	neg    DWORD PTR [ecx+0x33def0bc]
  4120b8:	fidiv  DWORD PTR ds:[esi-0x66]
  4120bc:	xor    al,0x14
  4120be:	jae    0x412083
  4120c0:	addr16 pop edi
  4120c2:	jne    0x41204b
  4120c4:	popf   
  4120c5:	sub    al,BYTE PTR [ecx-0x31]
  4120c8:	outs   dx,BYTE PTR ds:[esi]
  4120c9:	lock jp 0x41208d
  4120cc:	xchg   edx,eax
  4120cd:	lods   al,BYTE PTR ds:[esi]
  4120ce:	jl     0x412073
  4120d0:	jb     0x412133
  4120d2:	jmp    0xa3f6e17f
  4120d7:	(bad)  
  4120d8:	mov    esi,0xdd324d
  4120dd:	enter  0x9583,0xe0
  4120e1:	mov    al,ds:0xcf46754f
  4120e6:	fmul   st,st(2)
  4120e8:	test   eax,0x48d2e73f
  4120ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120ee:	xchg   ebp,eax
  4120ef:	and    bh,BYTE PTR [edx]
  4120f1:	sbb    BYTE PTR [ebp+0x37165c28],ah
  4120f7:	arpl   di,sp
  4120f9:	xor    eax,0x18ddc353
  4120fe:	sbb    eax,0x633e75a0
  412103:	call   0x5857:0xe6a5178c
  41210a:	pop    es
  41210b:	call   0x73695d37
  412110:	lock and DWORD PTR [eax-0x79],ebx
  412114:	xchg   esi,ecx
  412116:	mov    al,ds:0x51eccbc
  41211b:	das    
  41211c:	or     bh,BYTE PTR [edx]
  41211e:	jb     0x41210c
  412120:	add    DWORD PTR [esi],ecx
  412122:	test   al,0xff
  412124:	cmp    eax,0xc6dfc6db
  412129:	pop    es
  41212a:	js     0x412147
  41212c:	test   DWORD PTR [esp+edi*1],esp
  41212f:	lods   al,BYTE PTR ds:[esi]
  412130:	and    bh,bl
  412132:	jl     0x412137
  412134:	mov    edx,0x149c68ee
  412139:	bound  edi,QWORD PTR [ebp+0x6f4151b]
  41213f:	jbe    0x4120ce
  412141:	jb     0x4121af
  412143:	cli    
  412144:	cdq    
  412145:	aas    
  412146:	mov    edi,0xcdb0c9f3
  41214b:	arpl   cx,si
  41214d:	or     al,0x16
  41214f:	push   ss
  412150:	mov    bl,0x6c
  412152:	cmp    eax,0x303fba3a
  412157:	ins    DWORD PTR es:[edi],dx
  412158:	inc    eax
  412159:	or     dh,BYTE PTR [esi+edx*2-0x2a6ac919]
  412160:	loop   0x412183
  412162:	lea    esp,[eax+0x3b]
  412165:	cmp    eax,0x52fa3cd5
  41216a:	fld    QWORD PTR [edx+0x6e]
  41216d:	jnp    0x412163
  41216f:	sbb    bh,dh
  412171:	jle    0x41214c
  412173:	dec    eax
  412174:	ins    DWORD PTR es:[edi],dx
  412175:	adc    DWORD PTR [edi],edi
  412177:	loope  0x4121c4
  412179:	xchg   ebp,eax
  41217a:	mov    ah,0x51
  41217c:	test   al,0x7
  41217e:	sbb    eax,0xbba3ffee
  412183:	fs push edx
  412185:	and    ebx,ecx
  412187:	xor    BYTE PTR [ebx],ch
  412189:	xor    BYTE PTR [ecx+0x37],bh
  41218c:	pop    edx
  41218d:	and    dh,BYTE PTR [eax]
  41218f:	bound  esi,QWORD PTR [edx]
  412191:	jno    0x41217d
  412193:	mov    ah,0x92
  412195:	popa   
  412196:	xor    eax,0xd857f4be
  41219b:	sbb    edi,esp
  41219d:	and    BYTE PTR [ecx+0x2a],ch
  4121a0:	xchg   ecx,eax
  4121a1:	mov    esp,0x22363ecf
  4121a6:	mov    ebp,0xe2b745cb
  4121ab:	bound  esi,QWORD PTR [eax+0x15]
  4121ae:	mov    bh,0xbf
  4121b0:	shl    BYTE PTR [edi+0x2],cl
  4121b3:	mov    ebx,0x22f6c1a0
  4121b8:	xchg   esp,eax
  4121b9:	fwait
  4121ba:	sti    
  4121bb:	jbe    0x41217f
  4121bd:	sub    eax,0xac11dc06
  4121c2:	mov    WORD PTR [ecx],gs
  4121c4:	xor    BYTE PTR [ecx-0x5cc1577b],ch
  4121ca:	fst    QWORD PTR [ebx+ebx*8+0x7882a89c]
  4121d1:	int    0x68
  4121d3:	adc    DWORD PTR [ebx-0x48cd37b9],edx
  4121d9:	xor    edx,ecx
  4121db:	or     eax,0xf5b9327b
  4121e0:	push   ds
  4121e1:	popa   
  4121e2:	dec    esi
  4121e3:	lahf   
  4121e4:	arpl   si,bx
  4121e6:	(bad)  
  4121e7:	stos   BYTE PTR es:[edi],al
  4121e8:	jne    0x412214
  4121ea:	xchg   edi,eax
  4121eb:	jmp    0x412182
  4121ed:	jb     0x41217c
  4121ef:	xor    BYTE PTR [ebp+ebx*1-0x4c57fa7d],dl
  4121f6:	pop    esi
  4121f7:	and    eax,0xf20716cb
  4121fc:	jl     0x412221
  4121fe:	dec    ecx
  4121ff:	in     al,dx
  412200:	jnp    0x41222f
  412202:	xchg   edx,eax
  412203:	sub    ecx,DWORD PTR [esi+eiz*4]
  412206:	dec    eax
  412207:	jp     0x412193
  412209:	dec    eax
  41220a:	outs   dx,DWORD PTR ds:[esi]
  41220b:	add    BYTE PTR [ecx+esi*1],dl
  41220e:	(bad)  
  412210:	aad    0x5b
  412212:	cmp    bl,al
  412214:	xlat   BYTE PTR ds:[ebx]
  412215:	(bad)  
  412216:	out    dx,eax
  412217:	add    bh,dh
  412219:	add    ah,dh
  41221b:	add    ah,BYTE PTR [edi]
  41221d:	mov    dl,BYTE PTR ds:0xd6060e84
  412223:	fsubr  DWORD PTR [esi]
  412225:	fsub   DWORD PTR [esi]
  412227:	xchg   edi,eax
  412228:	mov    al,ds:0x9fccfea7
  41222d:	call   0xe18ebec2
  412232:	scas   al,BYTE PTR es:[edi]
  412233:	xchg   edi,eax
  412234:	paddw  mm2,QWORD PTR [ebp+0x3fcb759f]
  41223b:	add    bl,BYTE PTR [edx+0x6715a401]
  412241:	inc    edx
  412242:	int    0xfd
  412244:	push   edx
  412245:	jle    0x4121cf
  412247:	ja     0x4122a2
  412249:	lock add esp,DWORD PTR [esi-0xf]
  41224d:	add    BYTE PTR [edx],ch
  41224f:	or     al,0x2c
  412251:	cli    
  412252:	call   0x8994:0x3307c2a7
  412259:	pop    esp
  41225a:	outs   dx,BYTE PTR ds:[esi]
  41225b:	adc    eax,0xd5841a13
  412260:	ds js  0x41225f
  412263:	add    eax,0x9193647a
  412268:	xor    al,0x31
  41226a:	inc    esp
  41226b:	ja     0x412263
  41226d:	out    0xa6,eax
  41226f:	fdivp  st(3),st
  412271:	sahf   
  412272:	dec    esp
  412273:	jecxz  0x41227b
  412275:	shl    DWORD PTR [ebp+0x15ea4648],cl
  41227b:	enter  0xc31b,0x5e
  41227f:	mov    eax,ds:0x6755a27e
  412284:	das    
  412285:	jecxz  0x4122ba
  412287:	inc    ebx
  412288:	push   0xf17a17ff
  41228d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41228e:	lahf   
  41228f:	retf   0x4acd
  412292:	and    esi,DWORD PTR cs:[edi-0x752fb41]
  412299:	sub    edi,0x64
  41229c:	dec    eax
  41229d:	or     eax,0x23a82b78
  4122a2:	xchg   esi,eax
  4122a3:	or     ebx,edx
  4122a5:	mov    esi,0xf22432dc
  4122aa:	aam    0x1c
  4122ac:	mov    cl,0xf0
  4122ae:	ja     0x412312
  4122b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122b1:	add    BYTE PTR [edi],ch
  4122b3:	cmp    bl,BYTE PTR [eax]
  4122b5:	pop    edx
  4122b6:	add    DWORD PTR [edi-0xafa500e],edi
  4122bc:	loop   0x4122cc
  4122be:	inc    edx
  4122bf:	callw  0x690c
  4122c3:	rcr    ch,1
  4122c5:	sub    BYTE PTR [ecx+0x72],dl
  4122c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122c9:	test   DWORD PTR [esi-0x14],ebp
  4122cc:	mov    BYTE PTR [ebp-0x1e867ba4],al
  4122d2:	call   0x8986215e
  4122d7:	fst    DWORD PTR [edi+0x584f41ab]
  4122dd:	inc    ecx
  4122de:	icebp  
  4122df:	mov    ds:0x845bbdac,al
  4122e4:	rcr    DWORD PTR [ecx-0x19f33b9e],cl
  4122ea:	lock mov al,ds:0x561f8279
  4122f0:	mov    bl,0x9c
  4122f2:	mov    al,0x32
  4122f4:	loope  0x41232a
  4122f6:	(bad)  
  4122f7:	int3   
  4122f8:	(bad)  
  4122f9:	fnstcw WORD PTR [eax-0x4]
  4122fc:	mov    BYTE PTR ds:0x334b57b5,bh
  412302:	inc    edi
  412303:	rcl    BYTE PTR [edx+0x23],1
  412306:	push   cs
  412307:	jno    0x412358
  412309:	inc    edx
  41230a:	mov    eax,0xb9f4df13
  41230f:	mov    edi,0x16318509
  412314:	dec    esi
  412315:	nop
  412316:	add    esi,DWORD PTR [edi-0x30c2c283]
  41231c:	mov    esp,?
  41231e:	sub    cl,BYTE PTR [edi+ecx*4]
  412321:	or     cl,cl
  412323:	leave  
  412324:	dec    esi
  412325:	addr16 pop edi
  412327:	cmc    
  412328:	call   0xfecf15e9
  41232d:	out    0x71,al
  41232f:	imul   ebp,DWORD PTR [edx-0x7c4cb8e8],0xffffffa4
  412336:	fs out 0x94,eax
  412339:	dec    ebx
  41233b:	push   edx
  41233c:	push   ss
  41233d:	dec    edx
  41233e:	adc    BYTE PTR [esi],ah
  412340:	mov    ebx,0x9afdeed3
  412345:	ins    DWORD PTR es:[edi],dx
  412346:	adc    BYTE PTR [edi-0x68],0x3d
  41234a:	stos   DWORD PTR es:[edi],eax
  41234b:	push   eax
  41234c:	jbe    0x41239c
  41234e:	rcr    BYTE PTR [ebx-0x7f],cl
  412351:	mov    ds:0x1943265a,eax
  412356:	xor    BYTE PTR [esi+0x1e9f974d],ah
  41235c:	fild   DWORD PTR [edi+edi*1+0x5f201929]
  412363:	lea    ecx,[eax-0x4f]
  412366:	sub    al,dl
  412368:	aad    0x87
  41236a:	fdiv   QWORD PTR [ecx]
  41236c:	mov    eax,ds:0x3c387be0
  412371:	pop    edx
  412372:	push   edi
  412373:	(bad)  
  412374:	xchg   edx,eax
  412375:	cmc    
  412376:	xor    bl,BYTE PTR [ecx+0x24]
  412379:	in     al,0x47
  41237b:	jae    0x4123d3
  41237d:	lea    esp,[eax+0x249977f9]
  412383:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412384:	mov    ds:0x60a3eaa1,eax
  412389:	xchg   dl,ah
  41238b:	sbb    DWORD PTR ds:[esi],esp
  41238e:	mov    al,0x5
  412390:	add    esi,DWORD PTR [eax]
  412392:	mov    esi,0xbcc96fc0
  412397:	mov    eax,ds:0xc01646fa
  41239c:	mov    WORD PTR [edi],gs
  41239e:	sti    
  41239f:	push   ds
  4123a0:	mov    ebp,0x6f0bee5
  4123a5:	adc    eax,0xf39f6081
  4123aa:	xchg   esp,eax
  4123ab:	lods   al,BYTE PTR ds:[esi]
  4123ac:	mov    dl,0x61
  4123ae:	lea    ebp,[ecx-0x2811e151]
  4123b4:	sub    BYTE PTR [edx],dh
  4123b6:	js     0x4123e4
  4123b8:	inc    esi
  4123b9:	mov    al,ds:0x75f69f2
  4123be:	sub    eax,0xbac6aed3
  4123c3:	sub    al,0xf5
  4123c5:	rcr    esi,cl
  4123c7:	lahf   
  4123c8:	pop    ds
  4123c9:	jg     0x41235a
  4123cb:	ror    DWORD PTR [edx+0x7e],1
  4123ce:	les    edx,FWORD PTR [ebx+0x7f801678]
  4123d4:	enter  0xae12,0x1c
  4123d8:	retf   0x4c53
  4123db:	pop    ss
  4123dc:	cmp    eax,DWORD PTR [eax-0x72]
  4123df:	outs   dx,DWORD PTR ds:[esi]
  4123e0:	cmp    eax,0x7f92e692
  4123e5:	mov    al,ds:0x8c2ed750
  4123ea:	jno    0x4123fb
  4123ec:	aas    
  4123ed:	shr    cl,cl
  4123ef:	sar    BYTE PTR [edx-0xbd44563],1
  4123f5:	test   al,0x96
  4123f7:	not    BYTE PTR [edi+ecx*1+0x3b]
  4123fb:	mov    ds:0x88cedce9,eax
  412400:	call   0xe3af:0x4a6dfa47
  412407:	psllq  mm0,QWORD PTR ds:0xbad11d11
  41240e:	jp     0x4123ee
  412410:	jmp    0x41247f
  412412:	jmp    0x1033:0x291d7b2d
  412419:	rcr    BYTE PTR [ecx+edx*2],1
  41241c:	dec    eax
  41241d:	ret    0xdcbb
  412420:	dec    esp
  412421:	push   0xffffff87
  412423:	pop    ecx
  412424:	popf   
  412425:	out    0x58,eax
  412427:	ret    
  412428:	div    DWORD PTR [ecx+esi*1]
  41242b:	sub    bh,dl
  41242d:	lods   al,BYTE PTR ds:[esi]
  41242e:	aaa    
  41242f:	dec    eax
  412430:	add    ch,BYTE PTR [edx]
  412432:	into   
  412433:	add    ah,0xe2
  412436:	push   eax
  412437:	out    dx,al
  412438:	mov    al,ds:0xb034108d
  41243d:	mov    cl,ah
  41243f:	in     al,dx
  412440:	aam    0x76
  412442:	mov    ah,0xe8
  412444:	dec    esi
  412445:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412446:	fmul   st(3),st
  412448:	pop    edi
  412449:	pop    ds
  41244a:	pop    ecx
  41244b:	and    eax,0xd0f71a34
  412450:	inc    esp
  412451:	xchg   esi,eax
  412452:	xchg   edi,eax
  412453:	outs   dx,BYTE PTR ds:[esi]
  412454:	pop    edi
  412455:	sbb    esi,esp
  412457:	bound  ecx,QWORD PTR [eax]
  412459:	xor    bh,BYTE PTR [edi-0x21405f91]
  41245f:	(bad)  
  412460:	xchg   edi,eax
  412461:	push   esi
  412462:	shl    BYTE PTR [edi+0x59],1
  412465:	jnp    0x41248b
  412467:	shl    ecx,0x83
  41246a:	pop    eax
  41246b:	xchg   edx,eax
  41246c:	into   
  41246d:	jecxz  0x41245d
  41246f:	push   es
  412470:	mov    ah,0xa9
  412472:	add    DWORD PTR [edi+0x3a01bc02],ebp
  412478:	cs js  0x412411
  41247b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41247d:	and    eax,DWORD PTR [ecx]
  41247f:	leave  
  412480:	call   0xbcd8:0x2f7745a5
  412487:	sbb    BYTE PTR [esi-0x12692ef4],ch
  41248d:	sahf   
  41248e:	pushf  
  41248f:	in     eax,0x87
  412491:	add    DWORD PTR [ecx-0x532ef736],0x932e8367
  41249b:	xor    ecx,DWORD PTR [edi+ebp*2-0x3d9867f8]
  4124a2:	dec    ebx
  4124a3:	inc    ebp
  4124a4:	xchg   edx,eax
  4124a5:	sbb    eax,0xb1e9c4c3
  4124aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124ab:	in     al,dx
  4124ac:	jl     0x412447
  4124ae:	loopne 0x4124ba
  4124b0:	push   edi
  4124b1:	bound  esp,QWORD PTR [edx-0x20434fb7]
  4124b7:	add    ch,BYTE PTR [eax-0x6092ffc8]
  4124bd:	jnp    0x412486
  4124bf:	pop    ecx
  4124c0:	es sti 
  4124c2:	rcl    al,0xd0
  4124c5:	jbe    0x4124b4
  4124c7:	clc    
  4124c8:	inc    esp
  4124c9:	xor    eax,0x423a3adb
  4124ce:	mov    WORD PTR [esi-0x6f],?
  4124d1:	test   dh,bh
  4124d3:	mov    fs,WORD PTR [ebp-0x35b9834c]
  4124d9:	cmp    al,BYTE PTR [ecx]
  4124db:	xchg   DWORD PTR [eax-0x3c],ecx
  4124de:	pop    DWORD PTR [ebp-0x15]
  4124e1:	add    ecx,DWORD PTR [esi+0x7c]
  4124e4:	das    
  4124e5:	mov    ah,BYTE PTR [edx+0x71]
  4124e8:	mov    esi,DWORD PTR [esi-0x11]
  4124eb:	xor    BYTE PTR [ebp+ecx*1-0x1397e964],0xb4
  4124f3:	inc    edx
  4124f4:	std    
  4124f5:	mov    cl,0xd5
  4124f7:	fst    DWORD PTR [esi-0x7b]
  4124fa:	mov    cl,0x6a
  4124fc:	jae    0x412524
  4124fe:	mov    bl,ch
  412500:	xchg   DWORD PTR [esi],esi
  412502:	xchg   ebp,eax
  412503:	mov    BYTE PTR [edi+0x3cda2a00],cl
  412509:	jnp    0x4124fd
  41250b:	or     al,dh
  41250d:	stos   DWORD PTR es:[edi],eax
  41250e:	mov    ?,WORD PTR [ecx+0xc24407d]
  412514:	lea    ebx,[eax+edi*1]
  412517:	xor    eax,DWORD PTR [esi+esi*2+0xe]
  41251b:	mov    DWORD PTR [edx+0x2116af23],0x57b99001
  412525:	inc    edx
  412526:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412527:	mov    DWORD PTR [ebp+0x3],esi
  41252a:	add    BYTE PTR [eax],bl
  41252c:	iret   
  41252d:	cld    
  41252e:	test   BYTE PTR [ebx-0x4beb0d62],0x4d
  412535:	lods   al,BYTE PTR ds:[esi]
  412536:	ret    0x7502
  412539:	dec    ebp
  41253a:	int    0xa0
  41253c:	imul   esi,DWORD PTR [eax-0x47bb6910],0x6ff606e4
  412546:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412547:	cmp    esp,DWORD PTR [edx-0x28a1b098]
  41254d:	add    dl,dh
  41254f:	fdivp  st(5),st
  412551:	push   0x3c
  412553:	add    eax,0x689e2476
  412558:	mov    ds:0x864d9da4,al
  41255d:	jecxz  0x4125b1
  41255f:	aaa    
  412560:	loop   0x412544
  412562:	iret   
  412563:	push   ecx
  412564:	jno    0x412539
  412566:	cwde   
  412567:	mov    gs:0xae8bf2d7,al
  41256d:	jle    0x412517
  41256f:	popa   
  412570:	neg    ebx
  412572:	cmp    cl,BYTE PTR [ebx-0xd]
  412575:	adc    ch,BYTE PTR [edx+0x589c1933]
  41257b:	call   0xcb3e8580
  412580:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412581:	jnp    0x4125c8
  412583:	pop    ss
  412584:	scas   eax,DWORD PTR es:[edi]
  412585:	leave  
  412586:	push   edx
  412587:	jno    0x41254e
  412589:	inc    ebx
  41258a:	adc    ah,BYTE PTR [eax-0x69f597de]
  412590:	scas   al,BYTE PTR es:[edi]
  412591:	adc    bl,bl
  412593:	mov    dh,0xc8
  412595:	add    eax,0xc42c1b4c
  41259a:	sub    eax,ebp
  41259c:	arpl   WORD PTR [ebp+0x5d8a912d],bp
  4125a2:	cwde   
  4125a3:	jns    0x41258e
  4125a5:	lds    esi,FWORD PTR [esi-0x4b]
  4125a8:	jecxz  0x412612
  4125aa:	jo     0x41254a
  4125ac:	stos   BYTE PTR es:[edi],al
  4125ad:	ds push eax
  4125af:	arpl   WORD PTR [eax],bx
  4125b1:	test   al,0x8f
  4125b3:	ror    BYTE PTR [esi+eax*1+0x1f1dcf6d],1
  4125ba:	stos   BYTE PTR es:[edi],al
  4125bb:	sub    ebp,DWORD PTR [edi-0x1fae1360]
  4125c1:	fbstp  TBYTE PTR [ebp+0x43]
  4125c4:	push   eax
  4125c5:	add    ah,dh
  4125c7:	out    0x4a,eax
  4125c9:	lock xor ebx,DWORD PTR [eax-0x133814a1]
  4125d0:	leave  
  4125d1:	cmp    dl,ah
  4125d3:	imul   ebp,esi,0xc0cec95c
  4125d9:	inc    edx
  4125da:	push   0x77dc9e0f
  4125df:	dec    ebx
  4125e0:	pop    esi
  4125e1:	sar    BYTE PTR [esi+0x6626a6e0],1
  4125e7:	adc    eax,0x5b4e1782
  4125ec:	pop    es
  4125ed:	outs   dx,BYTE PTR ds:[esi]
  4125ee:	inc    ecx
  4125ef:	push   edi
  4125f0:	inc    ecx
  4125f1:	aam    0xc6
  4125f3:	sbb    ch,BYTE PTR [edx]
  4125f5:	fs mov ebp,0xd69f2f37
  4125fb:	into   
  4125fc:	jmp    0x4125b1
  4125fe:	mov    ebx,0x70f7b5a4
  412603:	cmp    DWORD PTR [ebx+0x17],0x66
  412607:	mov    bl,0x80
  412609:	push   eax
  41260a:	mov    esp,0x66ba9c82
  41260f:	xor    al,0xf7
  412611:	xor    eax,0x267f3790
  412616:	sub    DWORD PTR [ebx-0x74],ecx
  412619:	xor    esp,DWORD PTR [ecx]
  41261b:	iret   
  41261c:	push   ecx
  41261d:	cmp    dl,0xea
  412620:	lds    edx,FWORD PTR [edx+0x4b16f651]
  412626:	lock adc eax,ebx
  412629:	(bad)  
  41262a:	fist   WORD PTR [edx]
  41262c:	in     al,dx
  41262d:	xchg   edx,eax
  41262e:	clc    
  41262f:	cli    
  412630:	out    dx,eax
  412631:	ss fdivr st,st(3)
  412634:	jo     0x4125d3
  412636:	jge    0x412602
  412638:	inc    esi
  412639:	test   eax,0x4e8d6142
  41263e:	scas   eax,DWORD PTR es:[edi]
  41263f:	hlt    
  412640:	sub    DWORD PTR [esi],ebp
  412642:	je     0x4125fc
  412644:	inc    eax
  412645:	fld    QWORD PTR [eax]
  412647:	test   BYTE PTR [ebx],bh
  412649:	daa    
  41264a:	xor    eax,0x176b3d66
  41264f:	ss aaa 
  412651:	or     ah,BYTE PTR [ecx]
  412653:	and    BYTE PTR [ebp-0x63],ah
  412656:	push   ebp
  412657:	sub    ecx,DWORD PTR ds:0x523b1f37
  41265d:	jge    0x412636
  41265f:	outs   dx,DWORD PTR ds:[esi]
  412660:	ret    0xc809
  412663:	xor    DWORD PTR [edx+eax*4],edx
  412666:	es ss jle 0x412632
  41266a:	push   esi
  41266b:	test   BYTE PTR [ebp-0x72ce3d16],cl
  412671:	pusha  
  412672:	aam    0xee
  412674:	push   esi
  412675:	sbb    al,0xbf
  412677:	shr    DWORD PTR [eax-0x3],0x5e
  41267b:	mov    bl,0x26
  41267d:	add    al,BYTE PTR [eax+0x1e]
  412680:	cli    
  412681:	cdq    
  412682:	mov    WORD PTR [edi],ss
  412684:	mov    edx,0x586110ff
  412689:	jmp    0xa3070431
  41268e:	ds sbb bh,dh
  412691:	fs in  eax,dx
  412693:	add    al,0x22
  412695:	push   edi
  412696:	ret    
  412697:	sbb    al,0x70
  412699:	das    
  41269a:	les    edx,FWORD PTR [esi+0x7fa19d35]
  4126a0:	mov    al,0x3
  4126a2:	and    BYTE PTR [ebp+0x4cfa948a],0xbf
  4126a9:	add    ebx,esp
  4126ab:	pop    eax
  4126ac:	or     DWORD PTR [edi-0x6d],0x35e2cb4a
  4126b3:	jo     0x4126fe
  4126b5:	mov    cl,0x1c
  4126b7:	out    0x1b,eax
  4126b9:	je     0x4126cd
  4126bb:	loope  0x4126ce
  4126bd:	loopne 0x4126fc
  4126bf:	pop    ecx
  4126c0:	lds    edx,FWORD PTR [ebp-0x61ca738c]
  4126c6:	mov    al,0x8a
  4126c8:	dec    edx
  4126c9:	cvttps2pi mm3,xmm2
  4126cc:	push   0x3b
  4126ce:	xor    al,0x25
  4126d0:	xchg   edx,eax
  4126d1:	dec    esp
  4126d2:	loop   0x412734
  4126d4:	xlat   BYTE PTR ds:[ebx]
  4126d5:	jno    0x4126ea
  4126d7:	ret    
  4126d8:	outs   dx,BYTE PTR ds:[esi]
  4126d9:	ror    ah,1
  4126db:	sbb    edi,DWORD PTR [edi-0x2b9b975b]
  4126e1:	push   cs
  4126e2:	mov    al,BYTE PTR [edi+eiz*2]
  4126e5:	cli    
  4126e6:	mov    ecx,0xdf44c2eb
  4126eb:	adc    BYTE PTR [ecx+0x19d6fa9d],bh
  4126f1:	pop    edx
  4126f2:	into   
  4126f3:	and    edi,DWORD PTR [ebx+ebx*2+0x69]
  4126f7:	fisub  DWORD PTR [ecx-0x57]
  4126fa:	je     0x412755
  4126fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126fd:	pop    edx
  4126fe:	mov    ebp,eax
  412700:	loop   0x412695
  412702:	push   0xed2eab34
  412707:	push   ds
  412708:	jno    0x41275a
  41270a:	adc    bl,0xbc
  41270d:	jge    0x4126b4
  41270f:	mov    edi,0xb4def961
  412714:	mov    bh,0x92
  412716:	hlt    
  412717:	pop    edi
  412718:	push   cs
  412719:	sbb    ebx,DWORD PTR [esi*8+0xe2613f8]
  412720:	repnz imul eax,DWORD PTR [eax],0xffffffb6
  412724:	inc    ebx
  412725:	inc    ebp
  412726:	jg     0x412787
  412728:	xchg   esp,eax
  412729:	outs   dx,BYTE PTR ds:[esi]
  41272a:	ret    0x78db
  41272d:	lea    esi,[eax+0x34924586]
  412733:	jbe    0x4126ed
  412735:	xchg   esp,eax
  412736:	fisub  WORD PTR [edi]
  412738:	shl    DWORD PTR [eax],1
  41273a:	inc    eax
  41273b:	test   BYTE PTR [edi],ch
  41273d:	or     al,0x67
  41273f:	cld    
  412740:	rol    BYTE PTR [ecx+esi*8+0x7327f7dc],0xc
  412748:	dec    ebp
  412749:	es push ss
  41274b:	daa    
  41274c:	dec    eax
  41274d:	jbe    0x4126fc
  41274f:	inc    ebp
  412750:	and    eax,0x8f21da5
  412755:	jecxz  0x4126f3
  412757:	pusha  
  412758:	jae    0x41271d
  41275a:	push   es
  41275b:	xchg   edi,ebp
  41275d:	sub    eax,0x908049e9
  412762:	push   edx
  412763:	mov    esp,0xe053bf3e
  412768:	mov    bh,0x52
  41276a:	mov    ds:0x4661d99c,eax
  41276f:	sub    esp,esp
  412771:	sub    BYTE PTR [edx+esi*8],0x54
  412775:	jns    0x4127c8
  412777:	sbb    DWORD PTR [edi],ebp
  412779:	popa   
  41277a:	sbb    eax,0xa6d05cf2
  41277f:	jmp    0x4127c0
  412781:	xor    eax,0x4b27aaf3
  412786:	aas    
  412787:	mov    dh,0xdd
  412789:	xchg   esp,eax
  41278a:	push   edx
  41278b:	and    bh,ch
  41278d:	jp     0x4127da
  41278f:	push   ss
  412790:	inc    ebp
  412791:	xchg   ecx,eax
  412792:	mov    eax,0x84dbdcd0
  412797:	push   DWORD PTR [ebx-0x2b3274fc]
  41279d:	ret    
  41279e:	call   0xb9ad927c
  4127a3:	add    DWORD PTR gs:[edx-0x5050b101],0x41f38a8f
  4127ae:	and    eax,0x9c4e7e2e
  4127b3:	popf   
  4127b4:	push   ecx
  4127b5:	push   ds
  4127b6:	mov    cl,0xbe
  4127b8:	or     eax,0xef195e14
  4127bd:	loop   0x4127b1
  4127bf:	es ins BYTE PTR es:[edi],dx
  4127c1:	jmp    0xdcf9:0x86a10418
  4127c8:	jnp    0x412845
  4127ca:	outs   dx,DWORD PTR ds:[esi]
  4127cb:	sbb    dh,BYTE PTR [ebx+0x690f2894]
  4127d1:	and    cl,BYTE PTR [ecx-0x5e216ed8]
  4127d7:	dec    edi
  4127d8:	mov    ebp,0x57da47a
  4127dd:	cdq    
  4127de:	leave  
  4127df:	(bad)  
  4127e0:	cmp    BYTE PTR [esi-0x76],0xb8
  4127e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127e5:	dec    edi
  4127e6:	gs popf 
  4127e8:	or     BYTE PTR ds:0x635458f7,0x47
  4127ef:	cli    
  4127f0:	imul   eax,DWORD PTR [ecx+0x3b4460d7],0x12
  4127f7:	xchg   edi,eax
  4127f8:	cmp    ecx,DWORD PTR [eax-0x19]
  4127fb:	add    BYTE PTR [ecx],cl
  4127fd:	push   edi
  4127fe:	call   0x5b7e8e4
  412803:	stos   BYTE PTR es:[edi],al
  412804:	dec    ebp
  412805:	adc    DWORD PTR [edx-0x391bdf89],esi
  41280b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41280c:	dec    edx
  41280d:	fucom  st(2)
  41280f:	push   0x52a50f31
  412814:	push   es
  412815:	pop    ecx
  412816:	pop    edx
  412817:	xchg   edx,eax
  412818:	inc    ebp
  412819:	div    BYTE PTR fs:[eax+0x0]
  41281d:	mov    ebx,0xb477b75e
  412822:	add    cl,bh
  412824:	cmp    al,0x21
  412826:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412827:	mov    dh,0x3f
  412829:	sbb    ebp,esp
  41282b:	shl    BYTE PTR [edi+esi*8+0x1e],1
  41282f:	mov    esi,0x33872ae4
  412834:	std    
  412835:	mov    ecx,0xa6b0f034
  41283a:	and    dh,BYTE PTR [eax]
  41283c:	sti    
  41283d:	mov    BYTE PTR [esi-0x75],cl
  412840:	loop   0x4128bf
  412842:	push   edi
  412843:	dec    ecx
  412844:	(bad)  
  412845:	cmc    
  412846:	mov    edx,DWORD PTR [edx+0x52]
  412849:	out    dx,eax
  41284a:	shl    BYTE PTR [edx-0x16],cl
  41284d:	pop    esp
  41284e:	cld    
  41284f:	out    0xb1,al
  412851:	sub    eax,0x3c60d83c
  412856:	dec    ebp
  412857:	pop    eax
  412858:	xor    eax,0xfe67d8d0
  41285d:	and    dh,BYTE PTR [eax+0x7d18e8b9]
  412863:	inc    edi
  412864:	push   edi
  412865:	cmc    
  412866:	int    0xcc
  412868:	jp     0x41281c
  41286a:	push   ebp
  41286b:	fidivr DWORD PTR [ecx+edi*4]
  41286e:	int    0x39
  412870:	mov    ah,0xcb
  412872:	push   eax
  412873:	aaa    
  412874:	jmp    0x458bb546
  412879:	int    0x72
  41287b:	sbb    DWORD PTR es:[ebx+0x4b],esi
  41287f:	mov    bl,0x99
  412881:	add    DWORD PTR [ecx+0x10],edx
  412884:	inc    eax
  412885:	mov    ebp,0x601460b0
  41288a:	xor    DWORD PTR gs:[esi+0x73f6c643],ebx
  412891:	out    0xbe,al
  412893:	mov    bl,0xc0
  412895:	ret    0xc0fc
  412898:	mov    ah,0xf8
  41289a:	stos   DWORD PTR es:[edi],eax
  41289b:	ret    0xc600
  41289e:	sbb    BYTE PTR [edx-0x1b7290d1],bl
  4128a4:	les    esp,FWORD PTR [edi]
  4128a6:	adc    DWORD PTR [edx+esi*4+0x1c],ecx
  4128aa:	in     eax,0x2b
  4128ac:	dec    esi
  4128ad:	fmul   st(0),st
  4128af:	in     al,0xcf
  4128b1:	out    0x6a,al
  4128b3:	fwait
  4128b4:	out    0xbf,eax
  4128b6:	mov    ch,0x29
  4128b8:	mov    ch,BYTE PTR [ebx+ecx*8]
  4128bb:	mov    esp,DWORD PTR [ecx-0x67]
  4128be:	shl    BYTE PTR [edx+0x20],cl
  4128c1:	dec    ecx
  4128c2:	adc    DWORD PTR [ebx],ebp
  4128c4:	push   ebx
  4128c5:	(bad)  [edi]
  4128c7:	je     0x41291f
  4128c9:	arpl   WORD PTR [ecx+esi*2-0x2f],si
  4128cd:	bound  ebp,QWORD PTR [eax+0x6c71732b]
  4128d3:	jmp    0x5ec0f3d5
  4128d8:	ins    DWORD PTR es:[edi],dx
  4128d9:	or     al,0xac
  4128db:	dec    eax
  4128dc:	dec    edi
  4128dd:	sbb    al,0x98
  4128df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128e0:	mov    bh,0xb5
  4128e2:	pop    es
  4128e3:	cdq    
  4128e4:	xchg   al,ah
  4128e6:	adc    DWORD PTR [ecx-0x5d488dc],0xffffffc7
  4128ed:	enter  0xdfad,0xf0
  4128f1:	pop    ebx
  4128f2:	ret    
  4128f3:	dec    ebx
  4128f4:	mov    WORD PTR [esi],gs
  4128f6:	adc    edi,DWORD PTR [ebx]
  4128f8:	jmp    0xa396:0x2625acc5
  4128ff:	daa    
  412900:	fiadd  WORD PTR [ebx+0x5b]
  412903:	sbb    ebx,DWORD PTR [esi]
  412905:	or     ebx,0xffffffc0
  412908:	int    0xc0
  41290a:	dec    esi
  41290b:	jae    0x4128f7
  41290d:	rcl    DWORD PTR [ebx],1
  41290f:	mov    DWORD PTR [esi],ebx
  412911:	pop    ecx
  412912:	mov    ds:0xddf639a8,eax
  412917:	push   ds
  412918:	mov    es,WORD PTR [edi]
  41291a:	repnz fild QWORD PTR [ecx]
  41291d:	shl    BYTE PTR [esi],0xa4
  412920:	xchg   esi,eax
  412921:	ror    DWORD PTR [edi-0x310dbda2],1
  412927:	sub    ecx,DWORD PTR [edi-0x277bae4]
  41292d:	add    eax,0xdc9704
  412932:	dec    ecx
  412933:	mov    esi,0x104540a8
  412938:	ins    DWORD PTR es:[edi],dx
  412939:	loope  0x41292b
  41293b:	sub    ah,bl
  41293d:	cmp    eax,0x8213c953
  412942:	or     al,0x4d
  412944:	mov    BYTE PTR gs:[edx+eiz*8-0x30],bh
  412949:	in     al,dx
  41294a:	xor    eax,0x70e2a290
  41294f:	jmp    0x412966
  412951:	int3   
  412952:	(bad)  
  412953:	sbb    al,0xa1
  412955:	cmp    al,0xfe
  412957:	push   eax
  412958:	aam    0xe1
  41295a:	and    edx,DWORD PTR [eax-0x2d336df4]
  412960:	outs   dx,BYTE PTR ds:[esi]
  412961:	cli    
  412962:	cli    
  412963:	in     eax,0xe7
  412965:	add    eax,0xe81974ee
  41296a:	mov    ds:0x759d00a1,al
  41296f:	sub    edx,DWORD PTR [eax+0x766f8112]
  412975:	cmp    ch,BYTE PTR [esi+0x5]
  412978:	stc    
  412979:	call   0x98e1:0x339b96e0
  412980:	inc    ecx
  412981:	daa    
  412982:	pop    es
  412983:	xchg   esp,esp
  412985:	(bad)  
  412986:	arpl   cx,ax
  412988:	or     eax,0x286c0317
  41298d:	push   esp
  41298e:	pusha  
  41298f:	stos   DWORD PTR es:[edi],eax
  412990:	fstp   TBYTE PTR [edi]
  412992:	push   0x71453fd1
  412997:	ins    DWORD PTR es:[edi],dx
  412998:	mov    gs,WORD PTR gs:[ebp-0x67]
  41299c:	xchg   ebx,eax
  41299d:	popf   
  41299e:	sti    
  41299f:	je     0x4129ab
  4129a1:	push   edx
  4129a2:	dec    esi
  4129a3:	inc    edx
  4129a4:	pushf  
  4129a5:	inc    eax
  4129a6:	dec    eax
  4129a7:	sbb    al,0xbb
  4129a9:	mov    esi,0xf8ca82bf
  4129ae:	iret   
  4129af:	add    BYTE PTR [edx-0x8],ah
  4129b2:	mov    esi,eax
  4129b4:	scas   al,BYTE PTR es:[edi]
  4129b5:	in     eax,0x45
  4129b7:	mov    al,0xe2
  4129b9:	icebp  
  4129ba:	ret    0x4b86
  4129bd:	sbb    DWORD PTR [edx],ecx
  4129bf:	stos   BYTE PTR es:[edi],al
  4129c0:	fsubr  st(4),st
  4129c2:	push   esi
  4129c3:	mov    BYTE PTR [ebx-0x1da07a2d],dh
  4129c9:	mov    edx,0x834edc91
  4129ce:	add    DWORD PTR [eax-0x74],ecx
  4129d1:	ss inc esi
  4129d3:	aaa    
  4129d4:	mov    dl,0xc7
  4129d6:	outs   dx,DWORD PTR ds:[esi]
  4129d7:	cmp    eax,0x8de4f179
  4129dc:	loopne 0x412a32
  4129de:	mov    ?,ebx
  4129e0:	ja     0x4129ce
  4129e2:	or     BYTE PTR [edx],0x9f
  4129e5:	push   eax
  4129e6:	adc    bl,BYTE PTR [edi]
  4129e8:	pusha  
  4129e9:	jle    0x4129cc
  4129eb:	cmp    ecx,DWORD PTR [edi+0x5c]
  4129ee:	and    edx,ebx
  4129f0:	sub    BYTE PTR [ecx+ebp*8],ch
  4129f3:	jecxz  0x4129b7
  4129f5:	rol    BYTE PTR [esi],1
  4129f7:	(bad)  [ebx+0x7caf51a8]
  4129fd:	sub    BYTE PTR [ebx-0x493bf5ae],ah
  412a03:	jns    0x412a45
  412a05:	call   0xc01f:0x68be38b8
  412a0c:	mov    ecx,0x2b85fc85
  412a11:	jle    0x412a76
  412a13:	jge    0x412a4b
  412a15:	jl     0x4129d5
  412a17:	retf   0xed8f
  412a1a:	xchg   ebx,eax
  412a1c:	repnz add cl,BYTE PTR [ecx+esi*2]
  412a20:	pop    edi
  412a21:	xchg   BYTE PTR [esi-0x6e73bb72],bl
  412a27:	outs   dx,DWORD PTR ds:[esi]
  412a28:	fld    st(2)
  412a2a:	and    al,0x63
  412a2c:	or     DWORD PTR [eax+esi*8-0x3f],esi
  412a30:	call   0xc673:0xd8b49f84
  412a37:	and    al,0xb8
  412a39:	dec    edi
  412a3a:	(bad)  
  412a3b:	ficom  DWORD PTR [edi]
  412a3d:	xor    DWORD PTR [ecx+0x62ae6a51],edi
  412a43:	xchg   ch,bh
  412a45:	adc    dh,BYTE PTR [edx-0x32]
  412a48:	pop    DWORD PTR [esi+eiz*8+0x14]
  412a4c:	push   edx
  412a4d:	jg     0x4129e2
  412a4f:	(bad)  
  412a51:	call   0xba617119
  412a56:	sub    DWORD PTR [edx+eiz*4],eax
  412a59:	sahf   
  412a5a:	sbb    eax,0x2ec500ae
  412a5f:	pop    es
  412a60:	or     ch,BYTE PTR [eax+0xc206155]
  412a66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a67:	test   al,0x61
  412a69:	cmp    ecx,ebp
  412a6b:	or     BYTE PTR [esi+0x3b46c76b],dl
  412a71:	pushf  
  412a72:	iret   
  412a73:	mov    al,0xe5
  412a75:	pop    eax
  412a76:	cmp    al,al
  412a78:	out    dx,eax
  412a79:	cmp    eax,DWORD PTR [edi+eax*8]
  412a7c:	dec    ebp
  412a7d:	adc    ebx,DWORD PTR [ecx]
  412a7f:	(bad)  
  412a80:	and    ebp,edi
  412a82:	xchg   edi,eax
  412a83:	repnz shl DWORD PTR [edi-0x22],cl
  412a87:	cmp    BYTE PTR [ecx+esi*2],bh
  412a8a:	idiv   bh
  412a8c:	jmp    0x6b45:0x745ff059
  412a93:	fistp  QWORD PTR [esi-0x54]
  412a96:	and    ecx,eax
  412a98:	aas    
  412a99:	in     al,0xbf
  412a9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a9c:	data16 fidiv WORD PTR [ebp+0x128f660]
  412aa3:	adc    DWORD PTR [ebp+0x6c],esi
  412aa6:	cmp    eax,0xb4b07a8e
  412aab:	sbb    DWORD PTR [esi-0x2e],ebp
  412aae:	xor    DWORD PTR [ebx-0x3c],eax
  412ab1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ab2:	sti    
  412ab3:	retf   
  412ab4:	movq   mm5,QWORD PTR es:[eax]
  412ab8:	jne    0x412aeb
  412aba:	mov    edi,0xa7d51115
  412abf:	test   BYTE PTR [edx+0x5b2d901e],dh
  412ac5:	leave  
  412ac6:	fist   DWORD PTR [ebx-0x41]
  412ac9:	mov    eax,0x8f3354a3
  412ace:	ficom  DWORD PTR [edx+ebp*4]
  412ad1:	clc    
  412ad2:	dec    esi
  412ad3:	ret    0x4c71
  412ad6:	and    cl,0x9
  412ad9:	sub    dl,cl
  412adb:	sti    
  412adc:	enter  0x7be3,0x0
  412ae0:	xchg   ebx,eax
  412ae1:	mov    ds:0x429dfc4f,al
  412ae6:	xor    DWORD PTR [eax-0x1df3e76d],edx
  412aec:	test   al,0xac
  412aee:	lds    ecx,FWORD PTR [eax+0x53]
  412af1:	fdivr  DWORD PTR [ebx-0x48c5d5f1]
  412af7:	push   ds
  412af8:	loop   0x412b11
  412afa:	fsub   DWORD PTR [esi]
  412afc:	popa   
  412afd:	push   0xa7bd1b19
  412b02:	mov    eax,ds:0x7740028a
  412b07:	gs aas 
  412b09:	jne    0x412ae5
  412b0b:	mov    bh,0x4a
  412b0d:	mov    bl,0x7c
  412b0f:	ds push es
  412b11:	sahf   
  412b12:	cmp    al,0xd
  412b14:	scas   al,BYTE PTR es:[edi]
  412b15:	stos   DWORD PTR es:[edi],eax
  412b16:	sub    edi,edi
  412b18:	jns    0x412adb
  412b1a:	dec    eax
  412b1b:	retf   0x41e6
  412b1e:	adc    eax,0xd22aa4d3
  412b23:	xor    DWORD PTR [esp+edi*2-0x6166897c],0xffffffdc
  412b2b:	mov    DWORD PTR [bp+di],esp
  412b2e:	mov    dl,0xc2
  412b30:	mov    bl,0xbb
  412b32:	pop    es
  412b33:	call   0x748c:0xfa33c8ad
  412b3a:	sub    DWORD PTR [eax-0x40],ebp
  412b3d:	hlt    
  412b3e:	sub    al,0x9f
  412b40:	arpl   WORD PTR [ebx-0x1cea7eb2],bx
  412b46:	pop    ss
  412b47:	inc    ebx
  412b48:	pop    eax
  412b49:	sbb    ah,al
  412b4b:	inc    edi
  412b4c:	xchg   esp,eax
  412b4d:	cmp    DWORD PTR [ebp+eax*2+0x61],ecx
  412b51:	jl     0x412b90
  412b53:	inc    ecx
  412b54:	inc    ebp
  412b55:	xchg   BYTE PTR [edi-0x7e],cl
  412b58:	pop    esi
  412b59:	aam    0x47
  412b5b:	das    
  412b5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b5d:	or     al,BYTE PTR [ebx]
  412b5f:	lock mov dh,0x62
  412b62:	in     al,0x57
  412b64:	push   es
  412b65:	cmp    BYTE PTR [edx+0x3a],bh
  412b68:	in     eax,0x33
  412b6a:	lock jne 0x412b48
  412b6d:	cmp    esi,DWORD PTR [ebp+0x54]
  412b70:	mov    al,0xea
  412b72:	cmc    
  412b73:	into   
  412b74:	iret   
  412b75:	cdq    
  412b76:	scas   eax,DWORD PTR es:[edi]
  412b77:	add    esi,DWORD PTR [ebp+esi*4-0x2661c6b]
  412b7e:	jns    0x412bb9
  412b80:	and    BYTE PTR [eax],bl
  412b82:	mov    dh,0xc5
  412b84:	pop    esi
  412b85:	test   al,0x2d
  412b87:	inc    esi
  412b88:	xchg   ecx,eax
  412b89:	shl    DWORD PTR [ebx],1
  412b8b:	inc    ecx
  412b8c:	ficomp DWORD PTR [esi+0x5]
  412b8f:	rcl    BYTE PTR [esi-0x5b21020c],cl
  412b95:	inc    ebp
  412b96:	data16 jns 0x412b48
  412b99:	mov    esp,0xe51bb082
  412b9e:	push   ss
  412b9f:	mov    ah,0x75
  412ba1:	mov    ch,0x2b
  412ba3:	ins    DWORD PTR es:[edi],dx
  412ba4:	fmul   DWORD PTR [edx+0x57]
  412ba7:	fist   WORD PTR [eax-0x3]
  412baa:	xor    BYTE PTR [edx+0x49b691c0],bh
  412bb0:	out    dx,eax
  412bb1:	int    0x14
  412bb3:	mov    edi,0x2c788c
  412bb8:	cmp    edx,edx
  412bba:	inc    esp
  412bbc:	outs   dx,DWORD PTR ds:[esi]
  412bbd:	popa   
  412bbe:	push   edx
  412bbf:	mov    esi,0x8a957cde
  412bc4:	mov    edx,DWORD PTR [ecx+0xcb63c81]
  412bca:	cmp    cl,BYTE PTR [eax+0x6d978ac2]
  412bd0:	or     al,0x92
  412bd2:	jns    0x412b76
  412bd4:	or     BYTE PTR ss:[ecx-0x61d3973d],cl
  412bdb:	sub    BYTE PTR [edx+0xab22335],ah
  412be1:	test   BYTE PTR [ebx+0x76],0x6f
  412be5:	sti    
  412be6:	or     BYTE PTR [ebp-0x767eef2b],ah
  412bec:	inc    esp
  412bed:	leave  
  412bee:	dec    esp
  412bef:	lds    esi,FWORD PTR [esi]
  412bf1:	aad    0x7e
  412bf3:	repnz shr BYTE PTR es:[ecx-0x55],cl
  412bf8:	mov    BYTE PTR [ebx],bh
  412bfa:	into   
  412bfb:	fld    DWORD PTR [eax]
  412bfd:	dec    ecx
  412bfe:	fnstenv [eax+0x54]
  412c01:	push   0x43
  412c03:	adc    dl,BYTE PTR [eax]
  412c05:	adc    ch,BYTE PTR [edx]
  412c07:	jb     0x412c67
  412c09:	imul   ecx,ebp,0x4fc1d039
  412c0f:	cld    
  412c10:	jmp    0x5bd60f44
  412c15:	test   DWORD PTR [edi-0x35e7b5a3],esi
  412c1b:	sbb    esp,esp
  412c1d:	xor    al,0xf0
  412c1f:	mov    dh,0x9a
  412c21:	std    
  412c22:	xchg   ebx,eax
  412c23:	(bad)  
  412c24:	loopne 0x412c91
  412c26:	dec    esi
  412c27:	mov    edi,DWORD PTR [edi-0x6c]
  412c2a:	(bad)  
  412c2b:	pop    ss
  412c2c:	add    al,BYTE PTR [edx]
  412c2e:	je     0x412c73
  412c30:	mov    eax,cs:0xf3343b2d
  412c36:	jp     0x412c8a
  412c38:	inc    ebx
  412c39:	retf   0x71b9
  412c3c:	jne    0x412c58
  412c3e:	jno    0x412c4d
  412c40:	sahf   
  412c41:	inc    edx
  412c42:	loop   0x412cb9
  412c44:	hlt    
  412c45:	retf   0x1850
  412c48:	xor    esi,ecx
  412c4a:	scas   eax,DWORD PTR es:[edi]
  412c4b:	fstp   TBYTE PTR [ebp+0x19ef73d8]
  412c51:	adc    esi,DWORD PTR [ebx]
  412c53:	stos   BYTE PTR es:[edi],al
  412c54:	push   ds
  412c55:	mov    ebp,0xda4fe9d9
  412c5a:	in     al,dx
  412c5b:	pop    edx
  412c5c:	ds push ds
  412c5e:	mov    al,ds:0xbf1f6d3
  412c63:	mov    DWORD PTR [esi],ecx
  412c65:	mov    fs,WORD PTR [edx+0x47c9b34c]
  412c6b:	call   0xbf6cc7f8
  412c70:	sub    ch,BYTE PTR [edi+0x53b73285]
  412c76:	retf   0x9803
  412c79:	fimul  WORD PTR [ebx-0x30739ae6]
  412c7f:	fild   QWORD PTR [eax+0x42]
  412c82:	pop    ecx
  412c83:	dec    ecx
  412c84:	ds std 
  412c86:	jns    0x412c47
  412c88:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  412c8a:	ins    DWORD PTR es:[edi],dx
  412c8b:	cdq    
  412c8c:	or     bl,BYTE PTR ds:0x83099694
  412c92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c93:	adc    eax,0x960ff38c
  412c98:	not    BYTE PTR [edx+edi*2+0x7c]
  412c9c:	mov    bh,0xb2
  412c9e:	jl     0x412c87
  412ca0:	lea    esi,[edi-0x10]
  412ca3:	jmp    0x551e:0xf9de6564
  412caa:	jl     0x412cb0
  412cac:	into   
  412cad:	aaa    
  412cae:	adc    bh,al
  412cb0:	push   es
  412cb1:	sub    cl,0x8
  412cb4:	jl     0x412c70
  412cb6:	sbb    eax,0xf8c6b1a7
  412cbb:	jno    0x412ce5
  412cbd:	test   BYTE PTR [esp+edx*4],0x70
  412cc1:	jle    0x412cb5
  412cc3:	mov    eax,ds:0x8926882
  412cc8:	add    ch,BYTE PTR ds:[ecx]
  412ccb:	es (bad) 
  412ccd:	in     al,dx
  412cce:	and    BYTE PTR [edx+0x369d5e43],bl
  412cd4:	fs and ah,bh
  412cd7:	jl     0x412d45
  412cd9:	aad    0x75
  412cdb:	sub    eax,0xcc0ac025
  412ce0:	stos   BYTE PTR es:[edi],al
  412ce1:	scas   eax,DWORD PTR es:[edi]
  412ce2:	js     0x412d1d
  412ce4:	outs   dx,DWORD PTR ds:[esi]
  412ce5:	call   0xfa77:0x5f58fe53
  412cec:	pusha  
  412ced:	retf   
  412cee:	pusha  
  412cef:	mov    bl,0xaa
  412cf1:	inc    ecx
  412cf2:	out    0x37,al
  412cf4:	xor    DWORD PTR [eax],ebp
  412cf6:	cmp    al,0xdf
  412cf8:	lahf   
  412cf9:	scas   al,BYTE PTR es:[edi]
  412cfa:	cs loopne 0x412d25
  412cfd:	mov    dl,0xc7
  412cff:	imul   ecx,DWORD PTR [esi],0x5e
  412d02:	sbb    BYTE PTR [esp+edx*4],0x11
  412d06:	popf   
  412d07:	xchg   edi,eax
  412d08:	add    al,0x6
  412d0a:	ins    BYTE PTR es:[edi],dx
  412d0b:	xor    eax,edx
  412d0d:	adc    esp,DWORD PTR [edi]
  412d0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d10:	imul   dl
  412d12:	add    BYTE PTR [edx+eiz*1],0x75
  412d16:	out    0xab,al
  412d18:	xchg   esp,eax
  412d19:	add    al,BYTE PTR [esp+ebx*8+0x26]
  412d1d:	(bad)  
  412d1e:	rcl    BYTE PTR [esi+0x76],0x22
  412d22:	mov    dh,0xe9
  412d24:	dec    ecx
  412d25:	xor    ebp,edx
  412d27:	pop    es
  412d28:	icebp  
  412d29:	in     al,dx
  412d2a:	loope  0x412d95
  412d2c:	add    BYTE PTR [esi+0x63],bl
  412d2f:	mov    ah,0x26
  412d31:	xchg   ecx,eax
  412d32:	cmp    al,0xbe
  412d34:	dec    eax
  412d35:	jmp    0xa55a8af6
  412d3a:	cwde   
  412d3b:	ret    
  412d3c:	push   eax
  412d3d:	pop    edi
  412d3e:	push   esi
  412d3f:	push   edx
  412d40:	add    cl,BYTE PTR [esi-0x284f9e78]
  412d46:	sar    BYTE PTR es:[edx+0x3845e832],0x2a
  412d4e:	shl    BYTE PTR [edx-0x318ddbb6],0x3b
  412d55:	jg     0x412d88
  412d57:	xchg   ecx,eax
  412d58:	sar    BYTE PTR [esi],1
  412d5a:	push   esp
  412d5b:	push   ss
  412d5c:	mov    esi,0x2274dc9a
  412d61:	out    dx,eax
  412d62:	mov    BYTE PTR [ebp+0x7b],ch
  412d65:	lds    eax,FWORD PTR [esi+ebp*1+0x2f78785a]
  412d6c:	les    edi,FWORD PTR [esi]
  412d6e:	sahf   
  412d6f:	jmp    0x412d57
  412d71:	dec    edi
  412d72:	loope  0x412d8d
  412d74:	push   ss
  412d75:	push   esi
  412d76:	das    
  412d77:	inc    ebp
  412d78:	sbb    cl,al
  412d7a:	pop    ecx
  412d7b:	cmp    ebp,DWORD PTR ds:0x479a2da0
  412d81:	pop    esp
  412d82:	pop    esi
  412d83:	xchg   edx,eax
  412d84:	jmp    0xa8d0b71d
  412d89:	jle    0x412de4
  412d8b:	xchg   esp,eax
  412d8c:	les    esp,FWORD PTR ds:0x81d9e176
  412d92:	popf   
  412d93:	leave  
  412d94:	(bad)  
  412d95:	cmc    
  412d96:	ja     0x412dbe
  412d98:	push   ebp
  412d99:	not    BYTE PTR [edx+0x3841d371]
  412d9f:	dec    ecx
  412da0:	or     dl,BYTE PTR [ebp-0x4a]
  412da3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412da4:	push   edx
  412da5:	das    
  412da6:	stc    
  412da7:	add    ebp,esp
  412da9:	lods   eax,DWORD PTR ds:[esi]
  412daa:	outs   dx,DWORD PTR ds:[esi]
  412dab:	fstp   DWORD PTR [eax+0x9]
  412dae:	into   
  412daf:	inc    ecx
  412db0:	and    al,0x8f
  412db2:	jl     0x412e22
  412db4:	push   edx
  412db5:	cmp    BYTE PTR [eax],bh
  412db7:	adc    DWORD PTR [edx+0x18],esi
  412dba:	ret    
  412dbb:	call   esp
  412dbd:	add    dl,BYTE PTR [esi+0x55]
  412dc0:	add    al,0xb7
  412dc2:	pushf  
  412dc3:	xlat   BYTE PTR ds:[ebx]
  412dc4:	sbb    cl,0xf4
  412dc7:	xchg   esi,eax
  412dc8:	out    0xbd,al
  412dca:	loop   0x412d6d
  412dcc:	pop    esp
  412dcd:	test   eax,0x73c6cf7
  412dd2:	loopne 0x412d6a
  412dd4:	cmc    
  412dd5:	sbb    al,0x48
  412dd7:	popf   
  412dd8:	mov    ds:0x20b769f,eax
  412ddd:	es ins BYTE PTR es:[edi],dx
  412ddf:	dec    esp
  412de0:	xor    al,0xd
  412de2:	jmp    0x8c4cb375
  412de7:	push   0x40
  412de9:	pop    edi
  412dea:	imul   esi,DWORD PTR [ecx+0x4dface8c],0x855fb6ea
  412df4:	retf   
  412df5:	bound  ebp,QWORD PTR ds:0x8416480e
  412dfb:	(bad)  
  412dfc:	(bad)  
  412dfd:	dec    ebp
  412dfe:	cmp    BYTE PTR ds:[eax],dh
  412e01:	sub    ch,BYTE PTR [esi+0x1a]
  412e04:	mov    ecx,0xcdf573a3
  412e09:	in     eax,dx
  412e0a:	mov    BYTE PTR [eax*4+0x4ee4be0e],bh
  412e11:	test   dh,dl
  412e13:	xchg   esp,eax
  412e14:	jmp    0x8dd2ac7c
  412e19:	jp     0x412d9b
  412e1b:	cld    
  412e1c:	or     DWORD PTR [edx+edx*2+0x7c],edi
  412e20:	(bad)  
  412e21:	imul   esi,ebx,0x3a
  412e24:	inc    ebp
  412e25:	mov    dl,bh
  412e27:	pop    ss
  412e28:	mov    ds:0x1976ce5e,eax
  412e2d:	outs   dx,BYTE PTR ds:[esi]
  412e2e:	sahf   
  412e2f:	inc    ebx
  412e30:	xor    ah,BYTE PTR [esi+0x6b]
  412e33:	shl    DWORD PTR [eax+0x65],cl
  412e36:	aam    0xb7
  412e38:	sar    DWORD PTR [ecx-0x7d3f8fc4],1
  412e3e:	adc    DWORD PTR [esp+ebp*8-0x4758b83b],esp
  412e45:	cld    
  412e46:	sub    edx,DWORD PTR [ebx+0x646ac5d7]
  412e4c:	adc    eax,0x38455e2c
  412e51:	mov    dh,0x3b
  412e53:	or     BYTE PTR [eax+0x78],al
  412e56:	ss push ss
  412e58:	ror    BYTE PTR [ebx-0x320ef21f],1
  412e5e:	ror    BYTE PTR [edi+0x13da4243],1
  412e64:	jl     0x412dff
  412e66:	scas   eax,DWORD PTR es:[edi]
  412e67:	mov    dl,BYTE PTR [ebx]
  412e69:	mov    ecx,0x339f63b3
  412e6e:	mov    cs,WORD PTR [ecx-0x2bf623aa]
  412e74:	and    DWORD PTR [edi-0x14],0xfffffff3
  412e78:	xchg   DWORD PTR [edx+0x51cd5766],esi
  412e7e:	xor    eax,DWORD PTR [ebx+0x46]
  412e81:	pop    ds
  412e82:	mov    dh,0xbc
  412e84:	cmp    al,dl
  412e86:	xor    cl,BYTE PTR [ecx]
  412e88:	mov    ebp,0x799fff52
  412e8d:	je     0x412e65
  412e8f:	xchg   esp,eax
  412e90:	dec    edi
  412e91:	adc    eax,0x1c2b3d94
  412e96:	fild   DWORD PTR [ebx+0x71660fc4]
  412e9c:	popf   
  412e9d:	rcr    DWORD PTR [edx],1
  412e9f:	jnp    0x412eb9
  412ea1:	mov    edx,0x2da687c0
  412ea6:	sbb    BYTE PTR [eax+eiz*8+0x53317931],bl
  412ead:	or     ebp,DWORD PTR [ebp-0x50]
  412eb0:	fwait
  412eb1:	adc    ecx,DWORD PTR [ebp-0x5b85c0aa]
  412eb7:	inc    ebp
  412eb8:	or     DWORD PTR [edi],esi
  412eba:	cmp    ecx,DWORD PTR [ebx+0x33]
  412ebd:	mov    ebp,0x57bc67cc
  412ec2:	cmp    DWORD PTR [eax+ebx*1],0xffffffac
  412ec6:	dec    ebp
  412ec7:	ret    
  412ec8:	inc    eax
  412ec9:	dec    edx
  412eca:	dec    esi
  412ecb:	dec    esp
  412ecc:	and    DWORD PTR [ebp+0x7f],ecx
  412ecf:	xor    DWORD PTR [esi+0x2f7e8094],esi
  412ed5:	fisub  DWORD PTR [ebx]
  412ed7:	mov    ch,0xac
  412ed9:	sti    
  412eda:	stc    
  412edb:	add    eax,ebx
  412edd:	(bad)  
  412ede:	neg    BYTE PTR [edi-0x3f]
  412ee1:	adc    BYTE PTR [ecx+0x65c20355],bh
  412ee7:	push   cs
  412ee8:	pop    eax
  412ee9:	int    0x15
  412eeb:	mov    ebp,0x7f150099
  412ef0:	dec    eax
  412ef1:	in     al,0xc6
  412ef3:	sub    al,0x91
  412ef5:	call   0x9b98:0xf5624aa0
  412efc:	push   eax
  412efd:	cmp    DWORD PTR [edi],0xb098a74c
  412f03:	sbb    dl,BYTE PTR [esi+0x3d]
  412f06:	mov    dl,0xe4
  412f08:	xor    ah,BYTE PTR [ebp+0x70]
  412f0b:	mov    dh,0x41
  412f0d:	cwde   
  412f0e:	sbb    edi,edi
  412f10:	lea    edx,[ebx]
  412f12:	jle    0x412f11
  412f14:	or     ah,BYTE PTR [ecx+0x29248594]
  412f1a:	enter  0xc724,0x1f
  412f1e:	adc    eax,DWORD PTR [ebp+0x41cd41a2]
  412f24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f25:	inc    eax
  412f26:	pop    ebp
  412f27:	push   0x59c4b6ac
  412f2c:	(bad)  
  412f2d:	cli    
  412f2e:	pop    ds
  412f2f:	pop    ds
  412f30:	cmp    ch,dh
  412f32:	sbb    DWORD PTR [esi-0x7f],0xffffffa0
  412f36:	shl    DWORD PTR [ebx-0x23],1
  412f39:	xchg   edi,eax
  412f3b:	and    al,0x44
  412f3d:	rcr    BYTE PTR [esi-0x1dc8b799],1
  412f43:	loop   0x412ed7
  412f45:	stc    
  412f46:	mov    cl,BYTE PTR [edx+0x43caad43]
  412f4c:	sub    esi,DWORD PTR [esi]
  412f4e:	loop   0x412f60
  412f50:	xchg   edx,eax
  412f51:	dec    ecx
  412f52:	fidivr WORD PTR [ebx]
  412f54:	push   ds
  412f55:	pushf  
  412f56:	ins    DWORD PTR es:[edi],dx
  412f57:	les    edi,FWORD PTR [ebp-0x5d634d3]
  412f5d:	imul   esi,DWORD PTR [esi+0x53],0xffffffa0
  412f61:	aam    0xec
  412f63:	bound  ecx,QWORD PTR [eax-0xe0b32e6]
  412f69:	mov    dh,BYTE PTR [esi+0x1a]
  412f6c:	cmp    ah,ah
  412f6e:	es cs push ebp
  412f71:	dec    ebp
  412f72:	retf   0x2d99
  412f75:	adc    ch,BYTE PTR [ecx-0x3a98b687]
  412f7b:	cdq    
  412f7c:	jne    0x412f2d
  412f7e:	addr16 fwait
  412f80:	pop    ss
  412f81:	pop    edx
  412f82:	push   ecx
  412f83:	xlat   BYTE PTR ds:[ebx]
  412f84:	mov    bl,al
  412f86:	push   ds
  412f87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f88:	hlt    
  412f89:	sbb    DWORD PTR [ecx-0x7c50afd6],ecx
  412f8f:	sub    BYTE PTR [esi+0x6f],0x2c
  412f93:	sahf   
  412f94:	aam    0x72
  412f96:	lds    edi,FWORD PTR [edi]
  412f98:	sub    cl,ah
  412f9a:	dec    eax
  412f9b:	xor    BYTE PTR fs:[edx-0x3778d85f],0x7e
  412fa3:	lods   eax,DWORD PTR ds:[esi]
  412fa4:	out    dx,eax
  412fa5:	mov    ch,0x31
  412fa7:	mov    al,ds:0x9ab1d4c
  412fac:	dec    edx
  412fad:	pop    esp
  412fae:	pop    edi
  412faf:	push   ebx
  412fb0:	cmp    bl,BYTE PTR [eax]
  412fb2:	(bad)  
  412fb3:	mov    ?,WORD PTR [esi-0x5f]
  412fb6:	mov    ebx,0xc295f82e
  412fbb:	push   ebx
  412fbc:	daa    
  412fbd:	cmp    dh,bh
  412fbf:	add    al,0x3
  412fc1:	into   
  412fc2:	aam    0x88
  412fc4:	push   esi
  412fc5:	fistp  QWORD PTR [eax+0x31]
  412fc8:	mov    eax,ds:0xe853a3dc
  412fcd:	mov    al,ds:0x90c7313e
  412fd2:	jle    0x412f59
  412fd4:	pop    ds
  412fd5:	out    dx,al
  412fd6:	mov    ds:0xda9211e7,al
  412fdb:	xor    BYTE PTR [eax-0x1149b599],ch
  412fe1:	ret    0x4aa1
  412fe4:	imul   edx,esi,0xffffffcc
  412fe7:	iret   
  412fe8:	jl     0x412fa8
  412fea:	sub    DWORD PTR [edx+0x1bd58caa],ecx
  412ff0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ff1:	aas    
  412ff2:	inc    esp
  412ff3:	cli    
  412ff4:	(bad)  
  412ff5:	arpl   di,bp
  412ff7:	sub    al,0x48
  412ff9:	test   al,0xaf
  412ffb:	mov    eax,0x952adc8d
  413000:	stos   DWORD PTR es:[edi],eax
  413001:	mov    bl,0xf3
  413003:	(bad)  
  413004:	xchg   DWORD PTR [ebx],ebp
  413006:	fisttp DWORD PTR [ebp+eax*1-0x1cdc5d5d]
  41300d:	add    BYTE PTR [esp+edi*2],0x54
  413011:	adc    al,0xa8
  413013:	cmp    dl,al
  413015:	xchg   BYTE PTR [edx+0x6b0aa043],bl
  41301b:	ret    
  41301c:	inc    ebp
  41301d:	cmp    al,0x6a
  41301f:	dec    edx
  413020:	sub    al,0x8a
  413022:	pop    es
  413023:	push   es
  413024:	sbb    BYTE PTR [esi+ebx*1],cl
  413027:	sahf   
  413028:	shl    BYTE PTR [edx],1
  41302a:	lods   eax,DWORD PTR es:[esi]
  41302c:	xchg   ebp,eax
  41302d:	mov    gs,esi
  41302f:	clc    
  413030:	test   bl,0xc3
  413033:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413034:	sar    DWORD PTR [ecx],0x94
  413037:	shr    DWORD PTR [ecx],0x13
  41303a:	(bad)
  41303e:	inc    esp
  41303f:	jp     0x4130a4
  413041:	loopne 0x413098
  413043:	add    DWORD PTR [edi],ebx
  413045:	fwait
  413046:	rol    BYTE PTR [ebx-0x78],0x35
  41304a:	fst    st(7)
  41304c:	pushf  
  41304d:	call   0xca52135b
  413052:	mov    ds:0xf0cf9547,al
  413057:	mov    edx,0xc463f521
  41305c:	xor    al,0xc8
  41305e:	fisub  DWORD PTR [edi]
  413060:	push   0x71
  413062:	or     BYTE PTR [ecx+ebp*2+0x6a],dh
  413066:	push   ebx
  413067:	fmul   QWORD PTR [esi-0x58c3c949]
  41306d:	push   ss
  41306e:	sahf   
  41306f:	es add al,0x0
  413072:	repnz sbb eax,0xd9e704c5
  413078:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41307a:	in     eax,dx
  41307b:	test   DWORD PTR [edx],edi
  41307d:	xchg   esp,edi
  41307f:	scas   eax,DWORD PTR es:[edi]
  413080:	pop    ss
  413081:	push   esp
  413082:	enter  0x7593,0xfb
  413086:	mov    ds:0xede28acb,eax
  41308b:	sahf   
  41308c:	out    dx,eax
  41308d:	mov    DWORD PTR [eax-0x57d9cb7b],ecx
  413093:	adc    dh,BYTE PTR [ebp+0xfcaf7e2]
  413099:	stc    
  41309a:	daa    
  41309b:	xor    DWORD PTR [ebx],0x7d
  41309e:	rcl    BYTE PTR [esi-0x51e98925],1
  4130a4:	enter  0x4a86,0x8c
  4130a8:	int3   
  4130a9:	cdq    
  4130aa:	mov    eax,ds:0x1491f40c
  4130af:	inc    ebx
  4130b0:	and    DWORD PTR [ebp+ebp*2-0x73],edi
  4130b4:	pop    esp
  4130b5:	mov    WORD PTR [edx-0x45],?
  4130b8:	fst    QWORD PTR [edi-0x3f9e1c7e]
  4130be:	mov    ecx,0xf56df306
  4130c3:	fwait
  4130c4:	sti    
  4130c5:	jmp    0x3002d509
  4130ca:	push   0xffffffd6
  4130cc:	mov    eax,ds:0x11400238
  4130d1:	add    ch,BYTE PTR [edx+0xdaca6d2]
  4130d7:	push   eax
  4130d8:	ss enter 0xc316,0x89
  4130dd:	jae    0x41313a
  4130df:	dec    edx
  4130e0:	sub    dh,BYTE PTR [ebx+0x1fda5b0a]
  4130e6:	nop
  4130e7:	pop    ds
  4130e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130e9:	inc    edi
  4130ea:	pop    esi
  4130eb:	pop    edi
  4130ec:	loopne 0x4130a9
  4130ee:	outs   dx,BYTE PTR ds:[esi]
  4130ef:	xor    BYTE PTR [esi+edi*1+0x6c],dl
  4130f3:	leave  
  4130f4:	aas    
  4130f5:	xlat   BYTE PTR ds:[ebx]
  4130f6:	jg     0x4130fd
  4130f8:	iret   
  4130f9:	icebp  
  4130fa:	call   0x55d729b0
  4130ff:	push   esi
  413100:	xchg   ecx,eax
  413101:	fdivr  st,st(0)
  413103:	mov    edi,DWORD PTR [ecx+ebx*1-0x4ccd425]
  41310a:	std    
  41310b:	xor    cl,bl
  41310d:	test   BYTE PTR [edx],al
  41310f:	outs   dx,DWORD PTR ds:[esi]
  413110:	sar    BYTE PTR [eax+0x5b],0x7e
  413114:	pop    edi
  413115:	xlat   BYTE PTR ds:[ebx]
  413116:	push   0xffffffca
  413118:	jle    0x4130fe
  41311a:	mov    ah,0x5
  41311c:	clc    
  41311d:	test   BYTE PTR [ecx+esi*1],ah
  413120:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413121:	mov    WORD PTR [esp+eax*2-0x2a],es
  413125:	(bad)  
  413126:	mov    ds:0x7bc77bd,al
  41312b:	icebp  
  41312c:	fadd   st(0),st
  41312e:	push   0x8b46cc9e
  413133:	jne    0x4130e2
  413135:	call   0x20eada7f
  41313a:	test   ebx,ebp
  41313c:	pop    esp
  41313d:	jmp    0x94bbc2c1
  413142:	hlt    
  413143:	fiadd  DWORD PTR [ebp-0x1]
  413146:	jge    0x4130f2
  413148:	sbb    ch,BYTE PTR [ebp-0x26b1cf3a]
  41314e:	je     0x4130d3
  413150:	mov    eax,ds:0x590eeda9
  413155:	dec    ebp
  413156:	ror    ebp,0xc6
  413159:	jge    0x4130f6
  41315b:	arpl   WORD PTR [ebp+ecx*1+0x2d5220],si
  413162:	test   al,0xe2
  413164:	and    al,0x9
  413166:	xor    DWORD PTR [edx],edi
  413168:	scas   al,BYTE PTR es:[edi]
  413169:	cmp    al,0x2c
  41316b:	xchg   esp,eax
  41316c:	or     eax,0x6e12b9ba
  413171:	das    
  413172:	arpl   bx,ax
  413174:	psllq  mm3,QWORD PTR [esi+0x3d]
  413178:	jmp    0x5d12:0x4d86b54
  41317f:	pop    edx
  413180:	dec    ecx
  413181:	mov    dh,0x36
  413183:	outs   dx,DWORD PTR ds:[esi]
  413184:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413185:	aam    0xdf
  413187:	scas   al,BYTE PTR es:[edi]
  413188:	mov    esi,0x764f1087
  41318d:	push   ds
  41318e:	out    dx,eax
  41318f:	adc    BYTE PTR [edi-0x60],ch
  413192:	bound  esi,QWORD PTR [edx]
  413194:	mov    ebx,0xd9878383
  413199:	xor    eax,0xb41b6a15
  41319e:	pop    ecx
  41319f:	test   DWORD PTR [ebp+ecx*2+0x2d],esp
  4131a3:	inc    eax
  4131a4:	jbe    0x41316e
  4131a6:	cmc    
  4131a7:	push   ecx
  4131a8:	xor    al,0x7
  4131aa:	mov    edx,0xb44a1588
  4131af:	xchg   edi,eax
  4131b0:	pop    eax
  4131b1:	rcr    bh,cl
  4131b3:	gs loope 0x413223
  4131b6:	xchg   ecx,eax
  4131b7:	and    DWORD PTR es:[ecx+0x6cecc0d],esi
  4131be:	xor    DWORD PTR [esi+0x74],edx
  4131c1:	add    BYTE PTR [edi-0x1e],bl
  4131c4:	loop   0x4131d6
  4131c6:	and    cl,BYTE PTR [ebx-0x31be8b07]
  4131cc:	out    0xa,al
  4131ce:	mov    ebx,0x898b6127
  4131d3:	rol    BYTE PTR [esi],1
  4131d5:	xchg   ebx,eax
  4131d6:	lods   al,BYTE PTR ds:[esi]
  4131d7:	cdq    
  4131d8:	rol    BYTE PTR [esi-0x16],cl
  4131db:	jl     0x413222
  4131dd:	jle    0x4131ac
  4131df:	daa    
  4131e0:	xchg   esi,eax
  4131e1:	sbb    dl,BYTE PTR [eax-0x7066a6e7]
  4131e7:	pop    ss
  4131e8:	cld    
  4131e9:	sbb    dl,BYTE PTR [edx+esi*2]
  4131ec:	shl    esi,cl
  4131ee:	push   ebx
  4131ef:	int3   
  4131f0:	add    cl,BYTE PTR [eax+0xcf0e283]
  4131f6:	push   edx
  4131f7:	retf   0x367
  4131fa:	stc    
  4131fb:	cmc    
  4131fc:	push   DWORD PTR [ebp+0x4334b71e]
  413202:	and    eax,0x837cb06e
  413207:	dec    edi
  413208:	xchg   ecx,eax
  413209:	nop
  41320a:	sub    al,al
  41320c:	push   esi
  41320d:	pusha  
  41320e:	pusha  
  41320f:	push   0xaec0205c
  413214:	imul   esi,edi,0x6b4d6105
  41321a:	aaa    
  41321b:	jle    0x413225
  41321d:	inc    esi
  41321e:	inc    edx
  41321f:	cld    
  413220:	push   ecx
  413221:	retf   0x5b22
  413224:	sar    DWORD PTR [ecx],0x14
  413227:	push   ds
  413228:	mov    BYTE PTR [edi-0x4b],dl
  41322b:	int    0xb3
  41322d:	xchg   BYTE PTR [ecx+eiz*8-0x34],bl
  413231:	js     0x413298
  413233:	test   ax,0xfd6d
  413237:	je     0x413260
  413239:	mov    esp,0xfa348270
  41323e:	les    ecx,FWORD PTR [esi+0x43]
  413241:	mov    esi,eax
  413243:	cmp    BYTE PTR ds:0x9d6ea8cc,ch
  413249:	ror    DWORD PTR [esi-0x133d0303],1
  41324f:	cmp    BYTE PTR [ebx-0x6754994e],0xb6
  413256:	rol    DWORD PTR [ecx-0x17],0x70
  41325a:	rcl    ah,1
  41325c:	call   0x30fc:0x3c96244d
  413263:	stc    
  413264:	mov    ?,WORD PTR ds:0xa938a4dd
  41326a:	inc    eax
  41326b:	lahf   
  41326c:	pop    es
  41326d:	into   
  41326e:	cmp    DWORD PTR [eax],esi
  413270:	enter  0xd24d,0xc0
  413274:	idiv   DWORD PTR [edi+0x10]
  413277:	jo     0x4132b7
  413279:	push   eax
  41327a:	daa    
  41327b:	and    al,0xdc
  41327d:	jmp    0xc3b0:0x7c4b2ba4
  413284:	push   ds
  413285:	mov    al,0x2e
  413287:	mov    ds:0xe5f42c73,eax
  41328c:	sbb    al,0x84
  41328e:	cmp    al,0xfd
  413290:	pop    eax
  413291:	nop
  413292:	out    0x45,al
  413294:	xchg   edx,eax
  413295:	mov    cl,0x90
  413297:	jo     0x4132d0
  413299:	je     0x413246
  41329b:	dec    esi
  41329c:	sti    
  41329d:	cmp    al,0x53
  41329f:	pop    esi
  4132a0:	jne    0x413291
  4132a2:	or     al,0x9a
  4132a4:	add    BYTE PTR [ebp+0x3a5d00f],dl
  4132aa:	push   es
  4132ab:	shl    DWORD PTR [ebp+0x4c023e7],1
  4132b1:	push   ss
  4132b2:	int    0xda
  4132b4:	enter  0x6e6b,0xbd
  4132b8:	daa    
  4132b9:	adc    DWORD PTR [edx],ecx
  4132bb:	mov    dl,0x1b
  4132bd:	cmp    DWORD PTR [edx+0xb43de1b],esi
  4132c3:	inc    ecx
  4132c4:	stos   DWORD PTR es:[edi],eax
  4132c5:	mov    edx,ecx
  4132c7:	xor    BYTE PTR ds:0x9bf5de8,bl
  4132cd:	adc    BYTE PTR [ebx-0xd4b97e1],dl
  4132d3:	xchg   esp,eax
  4132d4:	mov    eax,0xd2cf1f36
  4132d9:	pop    edx
  4132da:	stc    
  4132db:	adc    DWORD PTR [edi+0x53508db8],edi
  4132e1:	mov    eax,ds:0x4991309e
  4132e6:	cmp    eax,0x988417ba
  4132eb:	push   esp
  4132ec:	push   0x49
  4132ee:	mov    ch,0xfc
  4132f0:	out    dx,al
  4132f1:	int3   
  4132f2:	test   cl,al
  4132f4:	and    eax,0x32a4575e
  4132f9:	push   ebx
  4132fa:	mov    dl,0x55
  4132fc:	pop    edx
  4132fd:	rcl    DWORD PTR [eax+esi*1-0x2],cl
  413301:	mov    dl,0xb1
  413303:	icebp  
  413304:	mov    al,0xee
  413306:	and    al,0x4b
  413308:	dec    DWORD PTR [edx+ebp*1+0x67]
  41330c:	in     eax,dx
  41330d:	dec    ebx
  41330e:	(bad)  
  41330f:	rcl    esi,1
  413311:	cmp    bh,BYTE PTR [ecx]
  413313:	dec    edx
  413314:	(bad)  
  413315:	mov    ebp,0x4e2f40f2
  41331a:	fimul  WORD PTR gs:[ebx-0x1f1035c8]
  413321:	sar    DWORD PTR [ebx],0xb8
  413324:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413325:	rcr    edx,0xa6
  413328:	int    0xb0
  41332a:	add    BYTE PTR [ecx+0x17518d59],ah
  413330:	add    ebx,DWORD PTR [eax]
  413332:	mov    WORD PTR [ecx],?
  413334:	xchg   edx,eax
  413335:	retf   0xbc28
  413338:	mov    eax,ds:0xd3dc041c
  41333d:	pop    edi
  41333e:	ret    0x3326
  413341:	push   edi
  413342:	rcl    DWORD PTR [eax],0xcc
  413345:	(bad)  
  413346:	out    dx,al
  413347:	nop
  413348:	jno    0x41333a
  41334a:	sub    DWORD PTR [ecx+0x5bdcb1ec],eax
  413350:	sub    ch,bh
  413352:	sbb    ebp,0xbe3fa550
  413358:	mov    cl,0xf3
  41335a:	inc    ecx
  41335b:	gs xor al,0xc
  41335e:	sbb    BYTE PTR [ebx-0x13e721a3],bh
  413364:	aas    
  413365:	jle    0x413348
  413367:	mov    al,0x85
  413369:	shr    DWORD PTR [eax+0x66],0xf7
  41336d:	fimul  DWORD PTR [edi]
  41336f:	jae    0x4133c8
  413371:	fisttp DWORD PTR [ecx+0x4e]
  413374:	in     eax,0xf0
  413376:	push   esi
  413377:	xchg   ch,dh
  413379:	pop    ds
  41337a:	cmp    BYTE PTR [ecx-0x9],0xf6
  41337e:	repnz sub eax,0x592f43c2
  413384:	mov    eax,0x1214bd5d
  413389:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41338a:	fldcw  WORD PTR [ebx-0x778cca30]
  413390:	mov    edx,0xa43529c2
  413395:	rcr    BYTE PTR [edx],0x7a
  413398:	into   
  413399:	mov    al,ds:0x47efc4c2
  41339e:	loopne 0x4133fb
  4133a0:	or     BYTE PTR [ebx],ah
  4133a2:	jmp    0x812734db
  4133a7:	cmc    
  4133a8:	sar    ah,1
  4133aa:	pop    ecx
  4133ab:	pop    esi
  4133ac:	mov    al,0xfd
  4133ae:	push   edi
  4133af:	xchg   edi,eax
  4133b0:	arpl   dx,bp
  4133b2:	adc    BYTE PTR [esi+ecx*4-0x3ee6b939],ch
  4133b9:	and    BYTE PTR [eax],bl
  4133bb:	push   es
  4133bc:	ins    BYTE PTR es:[edi],dx
  4133bd:	jne    0x413433
  4133bf:	inc    esp
  4133c0:	adc    ebx,DWORD PTR [ecx]
  4133c2:	pop    edx
  4133c3:	(bad)
  4133c6:	mov    ch,0x41
  4133c8:	call   edx
  4133ca:	xchg   ebp,eax
  4133cb:	addr16 adc al,0x5a
  4133ce:	inc    ecx
  4133cf:	fs inc esi
  4133d1:	add    ah,dl
  4133d3:	push   ebp
  4133d4:	pop    es
  4133d5:	(bad)  
  4133d7:	cmp    BYTE PTR [edi+0xfb9f9fb],ah
  4133dd:	fisub  WORD PTR [eax+esi*8-0x1a]
  4133e1:	loopne 0x41341e
  4133e3:	pop    edx
  4133e4:	pop    eax
  4133e6:	mov    ah,0x96
  4133e8:	xchg   BYTE PTR [edx*1+0x26524065],dl
  4133ef:	ins    BYTE PTR es:[edi],dx
  4133f0:	test   eax,0xb04bf53
  4133f5:	fs gs rcl dh,0x4d
  4133fa:	cdq    
  4133fb:	loop   0x413449
  4133fd:	push   edx
  4133fe:	in     al,0xa0
  413400:	out    dx,al
  413401:	sub    ecx,esp
  413403:	cs loop 0x413441
  413406:	or     DWORD PTR [ecx-0x67],edi
  413409:	stos   DWORD PTR es:[edi],eax
  41340a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41340b:	pop    esi
  41340c:	pop    ecx
  41340d:	scas   al,BYTE PTR es:[edi]
  41340e:	rol    DWORD PTR [esi],cl
  413410:	fdiv   QWORD PTR [ebp+0x9]
  413413:	loope  0x413475
  413415:	pop    es
  413416:	jne    0x413492
  413418:	test   BYTE PTR [ecx+edi*8],bl
  41341b:	add    BYTE PTR [ecx],bh
  41341d:	cmp    esi,DWORD PTR [esi]
  41341f:	pop    ss
  413420:	xor    BYTE PTR [edx+0x2ae03b49],al
  413426:	test   ebp,ecx
  413428:	nop
  413429:	jnp    0x413472
  41342b:	xchg   ebx,eax
  41342c:	mov    WORD PTR [ebp+0x17],ds
  41342f:	push   ds
  413430:	fild   DWORD PTR [edx]
  413432:	retf   
  413433:	push   ecx
  413434:	cmp    BYTE PTR [esi+eax*2],ah
  413437:	xchg   ebx,eax
  413438:	inc    ebx
  413439:	int    0x39
  41343b:	inc    ebp
  41343c:	(bad)  
  41343d:	into   
  41343e:	mov    ebx,0xd4710611
  413443:	pop    es
  413444:	adc    edi,esp
  413446:	fs jecxz 0x41346a
  413449:	lods   al,BYTE PTR ds:[esi]
  41344a:	sar    DWORD PTR [ebp-0x2da186f1],1
  413450:	sub    edi,ecx
  413452:	and    al,0xe7
  413454:	or     eax,0x4b825cb1
  413459:	stos   BYTE PTR es:[edi],al
  41345a:	sbb    dl,cl
  41345c:	inc    DWORD PTR ds:0x90716e49
  413462:	xchg   ecx,eax
  413463:	or     esi,esp
  413465:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413466:	xlat   BYTE PTR ds:[ebx]
  413467:	mov    bh,0xb9
  413469:	adc    edi,DWORD PTR [ebx]
  41346b:	icebp  
  41346c:	fcmovu st,st(3)
  41346e:	push   ebp
  41346f:	sbb    eax,DWORD PTR [edi+0x7dfdee36]
  413475:	scas   al,BYTE PTR es:[edi]
  413476:	push   eax
  413477:	fwait
  413478:	in     eax,dx
  413479:	ss fs xchg ebx,eax
  41347c:	js     0x41341c
  41347e:	mov    ch,0x50
  413480:	sar    DWORD PTR [edx],cl
  413482:	iret   
  413483:	lahf   
  413484:	popf   
  413485:	sbb    esp,esp
  413487:	fisttp WORD PTR [edx-0x43]
  41348a:	push   ebx
  41348b:	(bad)  
  41348c:	jp     0x413444
  41348e:	jns    0x4134d6
  413490:	and    DWORD PTR [ebp+0x14],ecx
  413493:	imul   ecx,ebx,0xffffffd9
  413496:	pop    ebp
  413497:	ret    0xe00
  41349a:	test   al,0x51
  41349c:	shl    BYTE PTR [edi],0x38
  41349f:	fist   WORD PTR ds:[esi-0x4]
  4134a3:	xchg   DWORD PTR [esp+edi*8+0xae5c593],ecx
  4134aa:	pop    ecx
  4134ab:	and    BYTE PTR [ecx-0x38],dl
  4134ae:	bound  ecx,QWORD PTR [eax-0x57]
  4134b1:	xor    BYTE PTR [esi+0x34],0x7c
  4134b5:	push   cs
  4134b6:	imul   ecx,DWORD PTR [esi],0x13
  4134b9:	lds    edi,FWORD PTR [edi+0x59d50ff2]
  4134bf:	jge    0x413533
  4134c1:	push   edx
  4134c2:	ficom  WORD PTR [edx+ebp*4]
  4134c5:	jl     0x4134cc
  4134c7:	mov    esi,0x17e85114
  4134cc:	and    DWORD PTR [ebx-0x13],esi
  4134cf:	jmp    0xb4cc:0xe13e51a7
  4134d6:	pop    ss
  4134d7:	and    DWORD PTR [edx],edx
  4134d9:	test   BYTE PTR [ebx-0x68f54a9e],0x33
  4134e0:	or     al,BYTE PTR [esi+0x8]
  4134e3:	lods   al,BYTE PTR ds:[esi]
  4134e4:	imul   esi,DWORD PTR [edx+ebx*2+0x10],0xffffffbe
  4134e9:	jb     0x413527
  4134eb:	retf   
  4134ec:	test   eax,ebx
  4134ee:	fcomp  DWORD PTR [esi-0x5d058d17]
  4134f4:	fadd   DWORD PTR [edi-0x187518bb]
  4134fa:	fs jno 0x4134bb
  4134fd:	cmp    eax,0x44c02fca
  413502:	sub    bl,bl
  413504:	retf   
  413505:	dec    ebx
  413506:	loop   0x413539
  413508:	mov    es,WORD PTR [edx+0x64]
  41350b:	or     ch,BYTE PTR [di]
  41350e:	jge    0x4134bf
  413510:	jecxz  0x413512
  413512:	in     al,0x41
  413514:	sbb    al,0x85
  413516:	xchg   DWORD PTR [edx+0x8c54140],esi
  41351c:	mov    al,0xe3
  41351e:	xchg   edi,eax
  41351f:	pusha  
  413520:	cmp    eax,0xe34faafe
  413525:	and    BYTE PTR [ebp-0x21],ah
  413528:	fidiv  DWORD PTR [ebp-0x2]
  41352b:	inc    ecx
  41352c:	sar    DWORD PTR [ecx+0x42db53c2],cl
  413532:	pusha  
  413533:	hlt    
  413534:	clc    
  413535:	fdiv   st,st(1)
  413537:	mov    esp,0xbb70c8b9
  41353c:	mov    ah,0x25
  41353e:	lahf   
  41353f:	mov    esi,0x97555076
  413544:	dec    esi
  413546:	push   cs
  413547:	(bad)  
  413548:	fild   QWORD PTR [eax-0xfd0aaa8]
  41354e:	cmp    BYTE PTR [edx],cl
  413550:	sbb    cl,dh
  413552:	sbb    eax,0x5516d295
  413557:	stos   DWORD PTR es:[edi],eax
  413558:	cdq    
  413559:	das    
  41355a:	sub    DWORD PTR [ebx+0x7f],edi
  41355d:	stc    
  41355e:	xchg   esp,eax
  41355f:	mov    dh,0x89
  413561:	out    0xf8,eax
  413563:	dec    esi
  413564:	or     al,0xf7
  413566:	pop    esp
  413567:	outs   dx,DWORD PTR ds:[esi]
  413568:	mov    esp,0x5129339b
  41356d:	sub    ebp,eax
  41356f:	mov    esi,0x9e3dfbfb
  413574:	in     eax,dx
  413575:	pop    ds
  413576:	lea    ebp,[ecx-0x30]
  413579:	fwait
  41357a:	or     DWORD PTR [ebp+0x6a06fc77],edx
  413580:	dec    edi
  413581:	dec    esi
  413582:	cmp    edx,DWORD PTR [edx+0x6b]
  413585:	xchg   ebp,eax
  413586:	mov    edi,0x674b7878
  41358b:	inc    eax
  41358c:	mov    BYTE PTR [edi-0x660d4886],ch
  413592:	mov    ebp,0xb9b045f6
  413597:	push   edx
  413598:	sbb    ebp,DWORD PTR ds:0xa0345776
  41359e:	scas   al,BYTE PTR es:[edi]
  41359f:	imul   esi,DWORD PTR [edi+0x1b229a0e],0xffffffb0
  4135a6:	sub    al,0x9d
  4135a8:	jmp    0xfb54e8f9
  4135ad:	lods   al,BYTE PTR ds:[esi]
  4135ae:	fsubr  DWORD PTR [ebp+0x655ea09]
  4135b4:	cmp    al,0x6b
  4135b6:	push   ebp
  4135b7:	adc    dh,cl
  4135b9:	in     al,dx
  4135ba:	and    ah,BYTE PTR [eax-0x71f7ab3a]
  4135c0:	inc    eax
  4135c1:	jg     0x413555
  4135c3:	add    eax,0x9a95425
  4135c8:	test   al,0x2c
  4135ca:	cwde   
  4135cb:	pop    eax
  4135cc:	loopne 0x413587
  4135ce:	jnp    0x41361c
  4135d0:	mov    edi,0x5af1e232
  4135d5:	aaa    
  4135d6:	adc    ecx,DWORD PTR [esp+ebp*4]
  4135d9:	cwde   
  4135da:	sbb    esp,DWORD PTR [edi-0x4c4351d2]
  4135e0:	aas    
  4135e1:	popf   
  4135e2:	popf   
  4135e3:	fs adc al,0xb9
  4135e6:	or     BYTE PTR [ecx],ch
  4135e8:	pusha  
  4135e9:	ret    0xfeba
  4135ec:	jns    0x413635
  4135ee:	jl     0x41366a
  4135f0:	pop    ebp
  4135f1:	dec    ebx
  4135f2:	dec    esp
  4135f3:	lods   al,BYTE PTR ds:[esi]
  4135f4:	and    esp,DWORD PTR [eax-0x23ad0f97]
  4135fa:	scas   al,BYTE PTR es:[edi]
  4135fb:	sbb    BYTE PTR cs:[edi+esi*8-0x53],dh
  413600:	add    dh,BYTE PTR [ebx-0x55dd0052]
  413606:	das    
  413607:	xor    cl,BYTE PTR [ebx]
  413609:	and    DWORD PTR [esp+ecx*2],esp
  41360c:	mov    eax,ds:0xdcaa9147
  413611:	xchg   ebp,eax
  413612:	rcl    DWORD PTR ds:0x86ec5873,0x4e
  413619:	pop    esi
  41361a:	test   eax,0x9d5e7ec4
  41361f:	pop    ebp
  413620:	push   ebp
  413621:	bound  esi,QWORD PTR [ebx+0x2b]
  413624:	sbb    BYTE PTR [edx],ah
  413626:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413627:	cwde   
  413628:	test   BYTE PTR [ecx-0x33],dl
  41362b:	mov    esi,0x84f845d
  413630:	xor    DWORD PTR [ebx-0x7b],0x34bbfa1c
  413637:	cmp    BYTE PTR [ebx],0xd7
  41363a:	scas   eax,DWORD PTR es:[edi]
  41363b:	rcr    bl,cl
  41363d:	scas   al,BYTE PTR es:[edi]
  41363e:	adc    BYTE PTR [eax],0xb2
  413641:	xor    al,BYTE PTR [eax-0x69]
  413644:	push   esp
  413645:	ror    edi,1
  413647:	dec    ebp
  413648:	stos   BYTE PTR es:[edi],al
  413649:	aam    0x2e
  41364b:	dec    ecx
  41364c:	sahf   
  41364d:	icebp  
  41364e:	add    dl,BYTE PTR [edx-0x73]
  413651:	push   ebp
  413652:	inc    edi
  413653:	mov    ecx,cs
  413655:	jmp    0xb1e8672d
  41365a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41365b:	or     BYTE PTR [ebx-0xc],al
  41365e:	es scas al,BYTE PTR es:[edi]
  413660:	pushf  
  413661:	and    ebp,ebx
  413663:	mov    ch,0xf1
  413665:	pop    ecx
  413666:	mov    dh,0x64
  413668:	lods   eax,DWORD PTR ds:[esi]
  413669:	call   0x673efbe3
  41366e:	test   DWORD PTR [edx-0x11617d59],ebp
  413674:	fisub  DWORD PTR [esi]
  413676:	and    eax,0x1725c0e1
  41367b:	out    0x7e,al
  41367d:	sbb    ebp,eax
  41367f:	nop
  413680:	(bad)  [ebx-0x12]
  413683:	aas    
  413684:	lods   al,BYTE PTR ds:[esi]
  413685:	jl     0x4136b4
  413687:	test   BYTE PTR [ebx],al
  413689:	(bad)  
  41368b:	dec    ecx
  41368c:	repz test BYTE PTR [ebp+edx*2-0x179d6c4c],0x14
  413695:	mov    al,ds:0x2fb138d
  41369a:	mov    edi,0xa991c166
  41369f:	jecxz  0x41363e
  4136a1:	add    eax,0x9eed3f09
  4136a6:	add    al,0x88
  4136a8:	call   DWORD PTR [di-0x54de]
  4136ad:	mov    edx,0xb90e4e45
  4136b2:	mov    bl,0xfe
  4136b4:	mov    cl,0xa7
  4136b6:	mov    ebp,0x4997deb0
  4136bb:	adc    al,0xfe
  4136bd:	popa   
  4136be:	sub    cl,BYTE PTR [esi+0x71e1ae7d]
  4136c4:	mov    cl,0xd8
  4136c6:	and    cl,BYTE PTR [eax]
  4136c8:	mov    ds:0xbd595d14,eax
  4136cd:	fst    DWORD PTR [ebp-0x56]
  4136d0:	xor    bh,BYTE PTR [edx-0x12]
  4136d3:	or     edi,DWORD PTR [ebx]
  4136d5:	jmp    0xb29e440a
  4136da:	pop    es
  4136db:	rcl    bl,0xd3
  4136de:	icebp  
  4136df:	push   ebp
  4136e0:	jb     0x41375e
  4136e2:	(bad)  
  4136e3:	ror    BYTE PTR [ebx+0x46c9272c],1
  4136e9:	jmp    0x3468:0x5d915db6
  4136f0:	and    al,0x86
  4136f2:	pop    eax
  4136f3:	jmp    0x4136ef
  4136f5:	lock js 0x4136a1
  4136f8:	popf   
  4136f9:	jbe    0x41375b
  4136fb:	mov    dl,0x72
  4136fd:	test   eax,0x209fea65
  413702:	dec    edi
  413703:	(bad)  
  413704:	in     al,dx
  413705:	add    bh,0xf9
  413708:	fs jnp 0x4136df
  41370b:	cmp    bl,bl
  41370d:	call   0xa2e2f1aa
  413712:	ficom  WORD PTR [ecx+ebp*1]
  413715:	adc    eax,0x220f65c4
  41371a:	inc    esp
  41371b:	mov    ecx,DWORD PTR ds:0xd87d
  413720:	and    esi,esi
  413722:	lods   al,BYTE PTR ds:[esi]
  413723:	enter  0xd66e,0xa6
  413727:	pop    ds
  413728:	stos   BYTE PTR es:[edi],al
  413729:	or     edi,eax
  41372b:	dec    esi
  41372c:	sub    DWORD PTR [eax-0x3f],esi
  41372f:	or     BYTE PTR [esi],al
  413731:	test   eax,0x4a563eb6
  413736:	fwait
  413737:	das    
  413738:	test   DWORD PTR [ebx],edx
  41373a:	mov    bh,0x8
  41373c:	push   ds
  41373d:	cmp    ecx,eax
  41373f:	sbb    al,0x5f
  413741:	adc    eax,eax
  413743:	dec    eax
  413744:	xor    eax,0xad0e9917
  413749:	scas   eax,DWORD PTR es:[edi]
  41374a:	sub    bl,al
  41374c:	scas   eax,DWORD PTR es:[edi]
  41374d:	lods   al,BYTE PTR ds:[esi]
  41374e:	je     0x41377e
  413750:	shr    eax,cl
  413752:	inc    edx
  413753:	add    al,0xd2
  413755:	cmp    al,0xcc
  413757:	mov    gs,esp
  413759:	mov    edi,0x9e42293f
  41375e:	push   cs
  41375f:	mov    WORD PTR [eax+0x6bdd3d67],ss
  413765:	fs or  eax,0x49016977
  41376b:	lods   eax,DWORD PTR ds:[esi]
  41376c:	adc    cl,BYTE PTR [esi+ebx*2-0x4941d367]
  413773:	dec    ebx
  413774:	xchg   esp,eax
  413775:	rcl    DWORD PTR [ebp-0x57],cl
  413778:	fadd   QWORD PTR [ecx]
  41377a:	(bad)
  41377d:	ret    
  41377e:	pop    edx
  41377f:	ret    0xfc2d
  413782:	push   eax
  413783:	retf   
  413784:	jno    0x4137f2
  413786:	sti    
  413787:	int    0x7e
  413789:	cmp    al,al
  41378b:	push   es
  41378c:	pop    eax
  41378d:	adc    al,0x55
  41378f:	mov    eax,0x337000ae
  413794:	call   0xfee7:0x5bc81e51
  41379b:	add    dh,BYTE PTR [edx+0x68]
  41379e:	and    eax,0x6b2ca267
  4137a3:	mov    gs,WORD PTR [ebp+0x9]
  4137a6:	rcr    DWORD PTR [edx+ebp*1-0x3e],1
  4137aa:	gs sbb eax,0x1c27cd47
  4137b0:	mov    bh,0x72
  4137b2:	push   esi
  4137b3:	sub    edi,DWORD PTR [ecx+0x360395aa]
  4137b9:	sub    DWORD PTR [ecx],0xde0a36e4
  4137bf:	scas   eax,DWORD PTR es:[edi]
  4137c0:	cdq    
  4137c1:	adc    BYTE PTR [eax-0x2391d160],bh
  4137c7:	push   ebx
  4137c8:	xchg   ecx,eax
  4137c9:	inc    edx
  4137ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137cb:	gs sub al,0xc2
  4137ce:	dec    ebx
  4137cf:	jle    0x4137b1
  4137d1:	arpl   WORD PTR [ebx-0x71c036a8],cx
  4137d7:	xchg   esi,eax
  4137d8:	clc    
  4137d9:	pop    esp
  4137da:	cli    
  4137db:	mov    ecx,0xfeec2f7f
  4137e0:	inc    esi
  4137e1:	jo     0x41380b
  4137e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137e4:	mov    edx,0x9811c8d9
  4137e9:	hlt    
  4137ea:	(bad)  
  4137eb:	jmp    0x7925dcb6
  4137f0:	retf   0x9faa
  4137f3:	sahf   
  4137f4:	push   esp
  4137f5:	push   0x44
  4137f7:	pop    ecx
  4137f8:	mov    ebx,DWORD PTR [edx]
  4137fa:	xor    bh,cl
  4137fc:	call   0x39dba799
  413801:	int    0x12
  413803:	fwait
  413804:	out    0xdd,eax
  413806:	inc    eax
  413807:	xlat   BYTE PTR ds:[ebx]
  413808:	mov    WORD PTR [edi+0x25],fs
  41380b:	xor    eax,0x87df48d8
  413810:	test   eax,0xac2dba67
  413815:	test   eax,0x510ea33c
  41381a:	popa   
  41381b:	sbb    dh,dl
  41381d:	mov    DWORD PTR [edx],esi
  41381f:	(bad)  
  413820:	fsub   QWORD PTR [ebx-0x308127ca]
  413826:	mov    ds:0x9eae5e8f,al
  41382b:	fstp   TBYTE PTR [ebx]
  41382d:	sbb    ecx,DWORD PTR [ecx+0x609cb8be]
  413833:	mov    dl,0x76
  413835:	push   ss
  413836:	in     eax,dx
  413837:	jne    0x4137fb
  413839:	add    eax,0xc824e5d8
  41383e:	xor    bl,BYTE PTR [ebx+esi*2]
  413841:	out    dx,al
  413842:	mov    DWORD PTR [eax+0x13],esi
  413845:	je     0x413844
  413847:	jno    0x413858
  413849:	js     0x4138ac
  41384b:	xchg   ecx,eax
  41384c:	jno    0x4138c5
  41384e:	aaa    
  41384f:	ds push ebx
  413851:	mov    ebx,0xd437e1e5
  413856:	xor    ch,BYTE PTR [ebp+0x1c]
  413859:	adc    dh,cl
  41385b:	out    0x48,al
  41385d:	or     DWORD PTR [ecx+0x4d],ebp
  413860:	pop    ebp
  413861:	ins    DWORD PTR es:[edi],dx
  413862:	bound  eax,QWORD PTR [edx-0x706f7b64]
  413868:	bound  esp,QWORD PTR [esi-0x694ba5b7]
  41386e:	inc    ebp
  41386f:	inc    esi
  413870:	sbb    al,0xbf
  413872:	mov    esp,0xcb7e7808
  413877:	lahf   
  413878:	push   esp
  413879:	sar    BYTE PTR [ebx+0x298cc3d3],cl
  41387f:	cmp    DWORD PTR [ecx+0x4518f93a],ebx
  413885:	add    eax,DWORD PTR [edx]
  413887:	and    al,0x9c
  413889:	out    dx,al
  41388a:	bound  ecx,QWORD PTR [esi+ebx*2]
  41388d:	pusha  
  41388e:	pop    esp
  41388f:	inc    eax
  413890:	mov    edx,0x440e876b
  413895:	nop
  413896:	loope  0x413910
  413898:	mov    edi,0xbdbbd6b4
  41389d:	(bad)  
  41389e:	push   edx
  41389f:	push   ebx
  4138a0:	loope  0x4138b1
  4138a2:	push   edi
  4138a3:	pinsrw mm1,WORD PTR [eax-0x4a],0x43
  4138a8:	jl     0x413874
  4138aa:	adc    eax,edi
  4138ac:	fild   WORD PTR [eax+esi*1]
  4138af:	hlt    
  4138b0:	ins    BYTE PTR es:[edi],dx
  4138b1:	and    bh,BYTE PTR [esp+ebp*4-0x5e126513]
  4138b8:	pop    esp
  4138b9:	mov    esp,0xf0bcce03
  4138be:	scas   al,BYTE PTR es:[edi]
  4138bf:	ds pop esp
  4138c1:	bnd jns 0x413908
  4138c4:	xchg   esi,eax
  4138c5:	mov    cl,0xfa
  4138c7:	push   edx
  4138c8:	push   ss
  4138c9:	pushf  
  4138ca:	and    BYTE PTR [edi],cl
  4138cc:	loopne 0x413891
  4138ce:	bound  ecx,QWORD PTR [eax+0x2d]
  4138d1:	pop    ecx
  4138d2:	adc    ebp,DWORD PTR [ecx+0x26]
  4138d5:	cdq    
  4138d6:	test   eax,0xd1fe56a4
  4138db:	jns    0x413959
  4138dd:	test   DWORD PTR [edi],edi
  4138df:	pop    esi
  4138e0:	dec    esi
  4138e1:	mov    edi,0xab0bf59d
  4138e6:	je     0x4138a4
  4138e8:	mov    ah,0xd5
  4138ea:	rcr    BYTE PTR [edx],0x5b
  4138ed:	push   es
  4138ee:	push   eax
  4138ef:	mov    edi,0x40aa93a1
  4138f4:	stc    
  4138f5:	and    al,0x0
  4138f7:	mov    ds:0xaa263c2a,eax
  4138fc:	and    eax,DWORD PTR [edi]
  4138fe:	push   edi
  4138ff:	add    dl,ah
  413901:	fsubr  DWORD PTR [ecx+0x5c4c1c0d]
  413907:	scas   eax,DWORD PTR es:[edi]
  413908:	popa   
  413909:	sahf   
  41390a:	jle    0x41395c
  41390c:	dec    BYTE PTR [edx-0x47]
  41390f:	cs pop ss
  413911:	stc    
  413912:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413913:	sub    al,0xae
  413915:	adc    dl,BYTE PTR [ecx+0x2a018312]
  41391b:	add    eax,0xd85455
  413920:	inc    ebp
  413921:	test   al,0xb4
  413923:	push   0xa9965e13
  413928:	mov    eax,ds:0xa5e37fca
  41392d:	lea    ebx,[ebp-0x78946722]
  413933:	push   ebx
  413934:	xor    eax,esi
  413936:	xchg   BYTE PTR [ecx+eiz*4],cl
  413939:	sub    al,0x55
  41393b:	jmp    0x221e:0x962896f1
  413942:	fld    QWORD PTR [esi]
  413944:	jae    0x4138c7
  413946:	sahf   
  413947:	cmp    DWORD PTR [ecx],esp
  413949:	call   0xcb31:0xed7ba45d
  413950:	into   
  413951:	xchg   DWORD PTR [ebx+0x19ed7708],edx
  413957:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413958:	or     al,0x61
  41395a:	fisub  WORD PTR [eax+0x79]
  41395d:	outs   dx,BYTE PTR ds:[esi]
  41395e:	xchg   DWORD PTR [esi-0x17],ecx
  413961:	push   edx
  413962:	ror    BYTE PTR [ebp+0x48b69e19],0xd9
  413969:	popf   
  41396a:	nop
  41396b:	aam    0x60
  41396d:	retf   
  41396e:	enter  0x876d,0xec
  413972:	add    al,BYTE PTR [ebx-0x3f]
  413975:	inc    ecx
  413976:	fmul   st(7),st
  413978:	aam    0x9d
  41397a:	jbe    0x413988
  41397c:	cmc    
  41397d:	jp     0x413937
  41397f:	idiv   BYTE PTR [edx+ebx*2]
  413982:	clc    
  413983:	xlat   BYTE PTR ds:[ebx]
  413984:	add    ecx,0xd2b694e6
  41398a:	ror    DWORD PTR [edx],0x26
  41398d:	rol    BYTE PTR [ebx],1
  41398f:	fdivr  DWORD PTR [eax-0x4e655fa]
  413995:	xchg   ebx,ebp
  413997:	stc    
  413998:	lods   al,BYTE PTR ds:[esi]
  413999:	imul   BYTE PTR [esi+ebx*4-0x6c046d0f]
  4139a0:	push   esp
  4139a1:	pop    ebp
  4139a2:	xchg   ebx,eax
  4139a3:	sub    edx,DWORD PTR [ecx]
  4139a5:	dec    edx
  4139a6:	lods   al,BYTE PTR ds:[esi]
  4139a7:	push   edx
  4139a8:	cli    
  4139a9:	xchg   edi,eax
  4139aa:	fnstcw WORD PTR [ebp*8-0x4dc16dac]
  4139b1:	jle    0x4139a0
  4139b3:	popf   
  4139b4:	sub    DWORD PTR [edi+0x53aca1b9],ebx
  4139ba:	imul   esp,DWORD PTR [ecx],0x67
  4139bd:	loopne 0x413956
  4139bf:	adc    esi,DWORD PTR [edx+0x39e1c98d]
  4139c5:	push   eax
  4139c6:	test   BYTE PTR [esi],bl
  4139c8:	push   0x15e577da
  4139cd:	mov    esi,0x484c9d27
  4139d2:	mov    al,ds:0x4fc631f8
  4139d7:	adc    dl,BYTE PTR [edx]
  4139d9:	(bad)  
  4139da:	cwde   
  4139db:	mov    edx,0x4c57904
  4139e0:	sbb    eax,0x371ce499
  4139e5:	or     al,BYTE PTR [edi-0x52388815]
  4139eb:	fs xor al,0x7f
  4139ee:	add    al,0xf5
  4139f0:	(bad)  
  4139f1:	sbb    al,0x1a
  4139f3:	iret   
  4139f4:	push   esp
  4139f5:	std    
  4139f6:	jno    0x4139db
  4139f8:	jo     0x4139c6
  4139fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139fb:	dec    ecx
  4139fc:	jo     0x413a77
  4139fe:	cld    
  4139ff:	scas   al,BYTE PTR es:[edi]
  413a00:	sub    al,0xab
  413a02:	fwait
  413a03:	push   ebp
  413a04:	sbb    bh,BYTE PTR [edx+0x20]
  413a07:	test   al,0xe4
  413a09:	scas   al,BYTE PTR es:[edi]
  413a0a:	push   ebx
  413a0b:	aad    0xcb
  413a0d:	dec    eax
  413a0e:	jne    0x413a21
  413a10:	imul   edx,ebp,0xbd5d08e2
  413a16:	xor    edx,edi
  413a18:	mov    ds:0x4b797798,eax
  413a1d:	lods   eax,DWORD PTR ds:[esi]
  413a1e:	mov    ecx,DWORD PTR [esi]
  413a20:	xchg   esp,eax
  413a21:	dec    edi
  413a22:	and    eax,0xf55ebe92
  413a27:	dec    esp
  413a28:	jmp    0x413a94
  413a2a:	push   ebx
  413a2b:	xor    DWORD PTR [edi],esp
  413a2d:	stos   BYTE PTR es:[edi],al
  413a2e:	shld   DWORD PTR [edx],edi,cl
  413a31:	inc    ebx
  413a32:	push   ss
  413a33:	jo     0x4139b7
  413a35:	or     al,0x61
  413a37:	clc    
  413a38:	gs and eax,0xf97a3f96
  413a3e:	mov    eax,ds:0x746361c2
  413a43:	sub    al,0x8
  413a45:	inc    esi
  413a46:	add    BYTE PTR [eax],bh
  413a48:	jp     0x413a0f
  413a4a:	repz adc edi,DWORD PTR [esp+eiz*2-0x7d4c3096]
  413a52:	pop    es
  413a53:	mov    eax,0x26a78b06
  413a58:	cld    
  413a59:	ins    BYTE PTR es:[edi],dx
  413a5a:	mov    esp,0xc4a3fdb8
  413a5f:	lods   eax,DWORD PTR ds:[esi]
  413a60:	scas   eax,DWORD PTR es:[edi]
  413a61:	sahf   
  413a62:	pop    esp
  413a63:	push   ebp
  413a64:	or     al,0xfb
  413a66:	js     0x413a13
  413a68:	popf   
  413a69:	rol    DWORD PTR [ebx-0x2d],1
  413a6c:	push   ss
  413a6d:	ds pop edi
  413a6f:	jle    0x413a5a
  413a71:	mov    ch,0x4b
  413a73:	push   ecx
  413a74:	mov    eax,0xf5ae00ca
  413a79:	ds mov esp,0x746b2034
  413a7f:	sbb    bh,BYTE PTR [ebp+eax*8+0x64fd0e91]
  413a86:	sar    BYTE PTR [ecx+0x22],0x40
  413a8a:	jne    0x413a3c
  413a8c:	inc    ebp
  413a8d:	push   ebx
  413a8e:	pop    ds
  413a8f:	pop    ds
  413a90:	add    eax,DWORD PTR [esi+0x390b90cf]
  413a96:	daa    
  413a97:	jmp    0xe3e689e2
  413a9c:	andps  xmm1,xmm1
  413a9f:	xchg   esi,eax
  413aa0:	cld    
  413aa1:	jecxz  0x413ab1
  413aa3:	outs   dx,DWORD PTR ds:[esi]
  413aa4:	mov    bl,0x3b
  413aa6:	sub    eax,0x77c956dd
  413aab:	mov    ds,WORD PTR [edx-0x53409952]
  413ab1:	xor    BYTE PTR [ecx+0x4c667b3b],ah
  413ab7:	add    DWORD PTR [esi],esp
  413ab9:	sub    edx,esi
  413abb:	push   edx
  413abc:	sbb    DWORD PTR [edi+0x5c],edi
  413abf:	test   al,0xd8
  413ac1:	test   DWORD PTR [ecx+0x297099ea],esi
  413ac7:	dec    edi
  413ac8:	out    0x7,eax
  413aca:	sub    DWORD PTR [eax+0xc618668],ecx
  413ad0:	pop    esi
  413ad1:	and    edi,0xfa7eb5fc
  413ad7:	mov    edx,0x67b1ca0
  413adc:	push   ebx
  413add:	jb     0x413ab8
  413adf:	cld    
  413ae0:	call   0xb2054cc0
  413ae5:	push   ds
  413ae6:	hlt    
  413ae7:	scas   eax,DWORD PTR es:[edi]
  413ae8:	cld    
  413ae9:	or     al,0x2d
  413aeb:	cld    
  413aec:	jmp    0xb581:0x1b6aad7f
  413af3:	leave  
  413af4:	push   ds
  413af5:	mov    esp,0xa52f6f5e
  413afa:	add    eax,0xa2101c0c
  413aff:	or     BYTE PTR [edi],0x13
  413b02:	adc    al,0xf1
  413b04:	hlt    
  413b05:	jp     0x413b5d
  413b07:	inc    ecx
  413b08:	mov    ebp,0x7a7d1062
  413b0d:	cld    
  413b0e:	bound  si,DWORD PTR [ebx+edi*1-0x175415d]
  413b16:	cld    
  413b17:	int    0x27
  413b19:	ins    DWORD PTR es:[edi],dx
  413b1a:	rcl    DWORD PTR gs:0xa586fdb8,0xc5
  413b22:	push   ebx
  413b23:	jno    0x413b54
  413b25:	mov    BYTE PTR [ebx-0x31b8c63e],0x43
  413b2c:	adc    DWORD PTR ds:0xfda0a50,0x12
  413b33:	pop    edi
  413b34:	(bad)  
  413b36:	xor    al,0x61
  413b38:	in     eax,0xb0
  413b3a:	div    ah
  413b3c:	jmp    0xc621:0xf5cf94a5
  413b43:	fbstp  TBYTE PTR [ecx-0x4c]
  413b46:	mov    dh,0xa5
  413b48:	das    
  413b49:	cwde   
  413b4a:	stos   BYTE PTR es:[edi],al
  413b4b:	sub    al,al
  413b4d:	ret    
  413b4e:	sub    eax,0x543128c6
  413b53:	sahf   
  413b54:	outs   dx,DWORD PTR ds:[esi]
  413b55:	push   edi
  413b56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b57:	mov    ?,edx
  413b59:	test   eax,0x2558ba03
  413b5e:	icebp  
  413b5f:	clc    
  413b60:	lea    esi,[ebp+0x40c3da2e]
  413b66:	mov    ebx,0xe113b5e7
  413b6b:	xchg   esi,eax
  413b6c:	ins    BYTE PTR es:[edi],dx
  413b6d:	loop   0x413ba8
  413b6f:	jno    0x413bb5
  413b71:	imul   esp,DWORD PTR [eax+0x6740f2c1],0x8cd7d941
  413b7b:	pop    esp
  413b7c:	push   edx
  413b7d:	inc    esi
  413b7e:	ret    
  413b7f:	dec    ebp
  413b80:	fisttp DWORD PTR [ecx]
  413b82:	repnz test BYTE PTR [ebp-0x74],bl
  413b86:	stos   BYTE PTR es:[edi],al
  413b87:	jg     0x413c06
  413b89:	test   al,0x48
  413b8b:	es sahf 
  413b8d:	je     0x413b87
  413b8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b90:	adc    BYTE PTR [edx-0x471e2530],al
  413b96:	push   0x23a087b6
  413b9b:	bndldx bnd1,[ebx+0x5f]
  413b9f:	fs xchg ebp,eax
  413ba1:	loop   0x413bfa
  413ba3:	xor    ah,bh
  413ba5:	xchg   edi,eax
  413ba6:	jmp    0x6fa33fbc
  413bab:	lods   eax,DWORD PTR ds:[esi]
  413bac:	adc    esp,DWORD PTR [ebx-0x2d95098a]
  413bb2:	xor    al,0x36
  413bb4:	rcr    DWORD PTR [esi+0x63b864c5],cl
  413bba:	add    eax,DWORD PTR [edx]
  413bbc:	push   edx
  413bbd:	jno    0x413b8c
  413bbf:	mov    ecx,0x2a43963d
  413bc4:	pop    ecx
  413bc5:	adc    eax,0xea5e6a15
  413bca:	mov    edx,0x9c7578fa
  413bcf:	mov    ecx,DWORD PTR [edi-0x2abd3f35]
  413bd5:	sub    BYTE PTR [esi-0x1d],cl
  413bd8:	mov    dl,0xc1
  413bda:	or     eax,0x7dcc36c5
  413bdf:	les    edx,FWORD PTR [esi]
  413be1:	cmp    dh,ch
  413be3:	and    DWORD PTR [esi],ecx
  413be5:	cdq    
  413be6:	repnz xor ch,BYTE PTR [eax]
  413be9:	rol    DWORD PTR [ebx],0x98
  413bec:	dec    esi
  413bed:	(bad)  ds:[esi]
  413bf0:	ss pop ds
  413bf2:	fsqrt  
  413bf4:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bf6:	dec    esi
  413bf7:	push   0x85b7952e
  413bfc:	push   ecx
  413bfd:	leave  
  413bfe:	adc    BYTE PTR [ebx],bh
  413c00:	les    ebx,FWORD PTR [esi]
  413c02:	jb     0x413c68
  413c04:	gs xchg ecx,eax
  413c06:	push   edi
  413c07:	pop    esp
  413c08:	div    ch
  413c0a:	jecxz  0x413bd3
  413c0c:	sub    al,BYTE PTR [ebp-0x13850c32]
  413c12:	pop    ebp
  413c13:	hlt    
  413c14:	dec    esi
  413c15:	out    dx,al
  413c16:	xchg   esp,eax
  413c17:	cmp    eax,0x89d72cfd
  413c1c:	mov    ds:0x1c007133,eax
  413c21:	test   eax,0x91584f0c
  413c26:	pop    ebp
  413c27:	outs   dx,DWORD PTR gs:[esi]
  413c29:	or     DWORD PTR [ecx+0x4f],edi
  413c2c:	shl    BYTE PTR [ebp+0x7db8350a],1
  413c32:	sbb    BYTE PTR [ebp+0x3b],bl
  413c35:	mov    dl,0x1d
  413c37:	cmc    
  413c38:	fs cli 
  413c3a:	dec    esi
  413c3b:	lahf   
  413c3c:	hlt    
  413c3d:	scas   eax,DWORD PTR es:[edi]
  413c3e:	(bad)  
  413c3f:	mov    eax,ss
  413c41:	sbb    BYTE PTR [edx],0x16
  413c44:	repnz pop edi
  413c46:	(bad)  
  413c47:	xchg   ebp,eax
  413c48:	dec    ebp
  413c49:	mov    ecx,0x1a440e38
  413c4e:	pop    ds
  413c4f:	imul   edi,DWORD PTR [ebx],0x4bd6795
  413c55:	(bad)  
  413c56:	inc    esp
  413c57:	sub    ah,BYTE PTR [eax]
  413c59:	enter  0xa8c8,0x4f
  413c5d:	cmp    dh,BYTE PTR [eax+0x701036cd]
  413c63:	push   cs
  413c64:	sahf   
  413c65:	adc    dh,BYTE PTR [ebx]
  413c67:	or     al,0x44
  413c69:	(bad)  
  413c6a:	leave  
  413c6b:	rol    DWORD PTR [eax+0x57e6445a],cl
  413c71:	fs jle 0x413c75
  413c74:	icebp  
  413c75:	das    
  413c76:	das    
  413c77:	jo     0x413cad
  413c79:	loope  0x413cb9
  413c7b:	loope  0x413c80
  413c7d:	lods   eax,DWORD PTR ds:[esi]
  413c7e:	loopne 0x413c93
  413c80:	xlat   BYTE PTR ds:[ebx]
  413c81:	shl    BYTE PTR [esi+ecx*8-0x6f],0xf4
  413c86:	lahf   
  413c87:	imul   ebp,esp,0xffffffb4
  413c8a:	jecxz  0x413cbf
  413c8c:	xchg   esp,eax
  413c8d:	ffree  st(0)
  413c8f:	out    0x8f,al
  413c91:	or     BYTE PTR [ecx],ch
  413c93:	xchg   esi,eax
  413c94:	cmovo  eax,esi
  413c97:	clc    
  413c98:	adc    dl,0x10
  413c9b:	iret   
  413c9c:	gs jbe 0x413c90
  413c9f:	pop    ebp
  413ca0:	or     BYTE PTR [eax-0x16],ah
  413ca3:	mov    ds:0xfcdc95eb,eax
  413ca8:	ror    ebp,0xae
  413cab:	and    ch,ch
  413cad:	jno    0x413caa
  413caf:	pushf  
  413cb0:	xchg   edi,eax
  413cb1:	push   0xe49ea7e7
  413cb6:	cmp    dh,BYTE PTR [ebp-0x5e2ca59f]
  413cbc:	imul   DWORD PTR es:[edx]
  413cbf:	cs call 0x80b5:0xb78b84a9
  413cc7:	mov    ebx,0x2aab0b4a
  413ccc:	(bad)
  413ccf:	xor    al,0x38
  413cd1:	xor    al,0x7b
  413cd3:	sub    bh,BYTE PTR [edx-0x44]
  413cd6:	and    DWORD PTR [edi+ecx*1+0x3bfa239f],esp
  413cdd:	push   edx
  413cde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cdf:	mov    ds:0x15e95381,eax
  413ce4:	jno    0x413cda
  413ce6:	mov    ebx,0xed624c9
  413ceb:	repnz mov ebp,edi
  413cee:	inc    edx
  413cf0:	pop    edi
  413cf1:	nop
  413cf2:	dec    esi
  413cf3:	dec    BYTE PTR [ebp-0x14]
  413cf6:	fucomip st,st(0)
  413cf8:	or     DWORD PTR [edi+0x41],0xffffffbc
  413cfc:	inc    ecx
  413cfd:	and    eax,0xe3cae5b2
  413d02:	pop    ebx
  413d03:	push   esi
  413d04:	mov    eax,0xcb27509
  413d09:	cmp    ebx,ebp
  413d0b:	xchg   ebp,eax
  413d0c:	aas    
  413d0d:	jmp    0xf17ad600
  413d12:	inc    edx
  413d13:	outs   dx,BYTE PTR ds:[esi]
  413d14:	inc    ebx
  413d15:	mov    esp,0x4495c3e
  413d1a:	mov    eax,0x46d2a152
  413d1f:	mov    ah,0xe1
  413d21:	repz repnz out dx,eax
  413d24:	fistp  WORD PTR [edi+0x251d92ca]
  413d2a:	enter  0x2381,0x7e
  413d2e:	push   esp
  413d2f:	or     eax,ebx
  413d31:	mov    ecx,0x7455cf28
  413d36:	neg    esi
  413d38:	mov    cl,0xe6
  413d3a:	sub    ch,bh
  413d3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d3d:	js     0x413ce7
  413d3f:	jae    0x413d61
  413d41:	in     al,0x55
  413d43:	outs   dx,DWORD PTR ds:[esi]
  413d44:	scas   al,BYTE PTR es:[edi]
  413d45:	pop    eax
  413d46:	and    BYTE PTR [edx-0x66233b81],dl
  413d4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d4d:	pop    ss
  413d4e:	mov    esi,0x370df714
  413d53:	or     esp,DWORD PTR [edi+ebp*1]
  413d56:	retf   
  413d57:	popf   
  413d58:	xor    al,0xae
  413d5a:	and    eax,0x81560031
  413d5f:	xor    cl,BYTE PTR [eax]
  413d61:	(bad)  
  413d62:	mov    eax,ds:0x57797f07
  413d67:	mov    ecx,0xac609ba1
  413d6c:	gs xchg edi,eax
  413d6e:	xor    BYTE PTR ds:0xae4ab82,0xca
  413d75:	xchg   esp,eax
  413d76:	lods   al,BYTE PTR ds:[esi]
  413d77:	and    eax,0x4c3f2e95
  413d7c:	xchg   BYTE PTR [ebp-0x56df5bf5],cl
  413d82:	fcomp  DWORD PTR [eax+0x484695e2]
  413d88:	mov    al,ds:0x33442bdf
  413d8d:	data16 sub ah,cl
  413d90:	or     DWORD PTR [ebp+0x22b6e34f],0x82e2d80e
  413d9a:	hlt    
  413d9b:	mov    ds:0xb3456c6d,eax
  413da0:	mov    ebp,0x6204dbcd
  413da5:	mov    esp,0x2350b8ff
  413daa:	cmp    DWORD PTR [edi+0x50],esi
  413dad:	or     eax,0x658f2817
  413db2:	imul   ecx,DWORD PTR [ebp+0x78],0xa5387717
  413db9:	jne    0x413e03
  413dbb:	mov    esp,0xd994fa33
  413dc0:	push   cs
  413dc1:	xor    edi,DWORD PTR ss:[ebp+0x37]
  413dc5:	dec    ecx
  413dc6:	pop    ds
  413dc7:	fmul   DWORD PTR [ecx+0x74]
  413dca:	cmp    DWORD PTR [ebx],ebp
  413dcc:	cmp    DWORD PTR [eax+0x42828ccb],esp
  413dd2:	(bad)  
  413dd3:	or     ah,BYTE PTR [eax+eiz*1+0x2]
  413dd7:	out    0x1b,eax
  413dd9:	in     al,dx
  413dda:	inc    eax
  413ddb:	push   cs
  413ddc:	rcl    ch,cl
  413dde:	dec    ecx
  413ddf:	out    dx,eax
  413de0:	add    ebp,DWORD PTR [edx-0x29]
  413de3:	nop
  413de4:	ss mov bl,0xef
  413de7:	mov    edx,0x974cb245
  413dec:	inc    ecx
  413ded:	repnz mov ah,0xea
  413df0:	jge    0x413e08
  413df2:	and    eax,0xbc3be501
  413df7:	fimul  DWORD PTR ds:0xa25bb422
  413dfd:	dec    ebp
  413dfe:	sbb    bh,BYTE PTR [ebx-0x234d6b05]
  413e04:	test   DWORD PTR [ecx-0x7],0x463a8afb
  413e0b:	retf   0xf8e9
  413e0e:	fdivr  DWORD PTR [ecx+0x7ff403e1]
  413e14:	dec    edx
  413e15:	pusha  
  413e16:	push   eax
  413e17:	enter  0xd5a2,0x3f
  413e1b:	or     edx,ebx
  413e1d:	adc    al,0x9a
  413e1f:	test   al,0xe2
  413e21:	push   0x5f
  413e23:	xchg   BYTE PTR [ebx+0x2a5dcaa5],al
  413e29:	push   esi
  413e2a:	outs   dx,DWORD PTR ds:[esi]
  413e2b:	hlt    
  413e2c:	xlat   BYTE PTR ds:[ebx]
  413e2d:	loopne 0x413e6b
  413e2f:	addr16 sbb dh,ah
  413e32:	ret    
  413e33:	mov    DWORD PTR [edx],ecx
  413e35:	jmp    FWORD PTR [eax]
  413e37:	fstp   TBYTE PTR [ecx-0x224299b7]
  413e3d:	sbb    ebx,edi
  413e3f:	sbb    DWORD PTR [ebp+0x4d],ecx
  413e42:	jns    0x413ec3
  413e44:	jl     0x413dd7
  413e46:	cmp    al,0xc4
  413e48:	dec    ecx
  413e49:	pop    edi
  413e4b:	sbb    dh,dl
  413e4d:	loop   0x413dfe
  413e4f:	dec    ecx
  413e50:	cdq    
  413e51:	fmulp  st(3),st
  413e53:	dec    edi
  413e54:	mov    ecx,0x1b1c8fb9
  413e59:	call   0x331b:0x2cd8e7b4
  413e60:	pop    ebp
  413e61:	mov    DWORD PTR [ecx-0xb],0x6b201f35
  413e68:	lods   eax,DWORD PTR ds:[esi]
  413e69:	out    dx,eax
  413e6a:	repnz rol BYTE PTR [edi],0xfa
  413e6e:	adc    DWORD PTR [edx],edi
  413e70:	popf   
  413e71:	iret   
  413e72:	lahf   
  413e73:	ficomp DWORD PTR [ebx-0x15]
  413e76:	imul   ebx,DWORD PTR ds:0x197c61c,0xfc491a43
  413e80:	mov    dh,0x2f
  413e82:	xchg   BYTE PTR [edi-0x30c9b33c],bl
  413e88:	out    0x2,eax
  413e8a:	(bad)  
  413e8b:	mov    ebp,0xafa531bf
  413e90:	test   DWORD PTR [ecx+0x1b586487],eax
  413e96:	pop    ebx
  413e97:	jbe    0x413e27
  413e99:	mov    esp,0x5cf12997
  413e9e:	outs   dx,BYTE PTR ds:[esi]
  413e9f:	sahf   
  413ea0:	dec    esi
  413ea1:	fcmovnb st,st(0)
  413ea3:	cwde   
  413ea4:	mov    WORD PTR [edx-0xa],ds
  413ea7:	cmp    al,0x1e
  413ea9:	jne    0x413ea6
  413eab:	out    dx,eax
  413eac:	mov    edx,0xa366861
  413eb1:	and    esi,ecx
  413eb3:	ja     0x413e48
  413eb5:	pop    esi
  413eb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413eb7:	cmp    DWORD PTR [ebx+0x46],edi
  413eba:	mov    BYTE PTR [edi+0x38],al
  413ebd:	or     dh,BYTE PTR [edx]
  413ebf:	xor    al,BYTE PTR [ecx]
  413ec1:	dec    edx
  413ec2:	(bad)  
  413ec3:	jmp    0x413ee3
  413ec5:	enter  0x2d93,0x86
  413ec9:	xchg   esi,eax
  413eca:	push   cs
  413ecb:	std    
  413ecc:	adc    BYTE PTR [ebx-0x5b592d97],bl
  413ed2:	jl     0x413ea3
  413ed4:	(bad)  
  413ed5:	rcl    BYTE PTR [ecx+0x52c59d04],1
  413edb:	std    
  413edc:	test   DWORD PTR [ecx-0x69b1ef68],0x2411eef9
  413ee6:	sahf   
  413ee7:	(bad)  
  413ee8:	push   ecx
  413ee9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413eea:	clc    
  413eeb:	mov    WORD PTR [eax],ds
  413eed:	stos   BYTE PTR es:[edi],al
  413eee:	sbb    BYTE PTR [ecx-0x31],cl
  413ef1:	mov    edi,0xcea78de3
  413ef6:	push   cs
  413ef7:	jge    0x413ea9
  413ef9:	or     BYTE PTR [esi+esi*4],al
  413efc:	inc    ebp
  413efd:	mov    ah,0x6a
  413eff:	jnp    0x413f27
  413f01:	fild   QWORD PTR [eax]
  413f03:	ds aad 0x7
  413f06:	mov    ch,0xf7
  413f08:	mov    ds:0x5439a182,eax
  413f0d:	cmp    al,0x59
  413f0f:	fimul  DWORD PTR [eax-0x61f78969]
  413f15:	sub    BYTE PTR [edx+0x13],bh
  413f18:	add    BYTE PTR [esi],dl
  413f1a:	call   FWORD PTR [eax]
  413f1c:	sub    BYTE PTR [edi+eiz*1+0x3978afc5],ch
  413f23:	xor    eax,DWORD PTR [esi+0x7cea251]
  413f29:	add    cl,BYTE PTR [ebx-0x22]
  413f2c:	in     eax,0x5
  413f2e:	sbb    BYTE PTR [eax-0x5518690c],bh
  413f34:	(bad)  
  413f35:	stos   BYTE PTR es:[edi],al
  413f36:	push   ecx
  413f37:	inc    esi
  413f38:	(bad)  
  413f39:	std    
  413f3a:	jge    0x413f91
  413f3c:	xor    DWORD PTR [edi-0x7a76e7f9],esi
  413f42:	les    ecx,FWORD PTR [ebp-0x6c68388]
  413f48:	push   cs
  413f49:	adc    dh,al
  413f4b:	cmp    dh,bl
  413f4d:	cwde   
  413f4e:	aas    
  413f4f:	or     edx,DWORD PTR [esi+ecx*8]
  413f52:	out    dx,eax
  413f53:	faddp  st(7),st
  413f55:	mov    dl,0x9d
  413f57:	adc    DWORD PTR [esi-0x4bf8bcc7],edi
  413f5d:	fcomp  st(2)
  413f5f:	pushf  
  413f60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f61:	test   DWORD PTR [edi+esi*4],0xd162db32
  413f68:	adc    DWORD PTR ds:0x62b158a4,ebx
  413f6e:	and    bh,cl
  413f70:	stos   DWORD PTR es:[edi],eax
  413f71:	in     eax,0xe4
  413f73:	fnsave [esi+0x49aa377]
  413f79:	jmp    0x34eebebe
  413f7e:	xchg   BYTE PTR [eax-0x4f],ah
  413f81:	in     eax,0x3c
  413f83:	mov    fs,WORD PTR ds:0x6fd279c4
  413f89:	mov    eax,0xd5876025
  413f8e:	cwde   
  413f8f:	pop    ebp
  413f90:	pusha  
  413f91:	addr16 xchg esp,eax
  413f93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f94:	(bad)  
  413f96:	test   BYTE PTR [esi],dh
  413f98:	jmp    0x6873:0xe87e4235
  413f9f:	push   esi
  413fa0:	cmp    al,0xa2
  413fa2:	push   ds
  413fa3:	add    ebx,DWORD PTR [edx-0x29afa636]
  413fa9:	(bad)  
  413faa:	xchg   esp,eax
  413fab:	(bad)  
  413fac:	(bad)  
  413fad:	fisubr DWORD PTR [edi]
  413faf:	sbb    esp,edx
  413fb1:	mov    al,0x38
  413fb3:	adc    eax,edi
  413fb5:	mov    BYTE PTR [ecx+0x3170d8fa],bl
  413fbb:	arpl   di,cx
  413fbd:	or     al,0x32
  413fbf:	push   eax
  413fc0:	je     0x413f6a
  413fc2:	hlt    
  413fc3:	popa   
  413fc4:	mov    esi,0x25af6a4c
  413fc9:	sub    DWORD PTR [esi+0x19],0x54
  413fcd:	dec    eax
  413fce:	sub    ebp,DWORD PTR [eax+ecx*1+0x66]
  413fd2:	push   esp
  413fd3:	bound  eax,QWORD PTR [eax]
  413fd5:	mov    ah,0x0
  413fd7:	jnp    0x414023
  413fd9:	xchg   ebx,eax
  413fda:	xor    eax,0x72476b13
  413fdf:	mov    eax,ds:0xd025787c
  413fe4:	aas    
  413fe5:	neg    DWORD PTR [esi]
  413fe7:	mov    esi,0x946612d5
  413fec:	(bad)  
  413fed:	(bad)  
  413fee:	jbe    0x413f77
  413ff0:	push   0x57
  413ff2:	data16 mov WORD PTR [edi],cs
  413ff5:	push   esp
  413ff6:	gs pop eax
  413ff8:	inc    eax
  413ff9:	enter  0x998a,0xd0
  413ffd:	sub    edi,0xa64e015c
  414003:	ret    0x3cce
  414006:	add    eax,0x88d6acc0
  41400b:	adc    esi,DWORD PTR [eax]
  41400d:	mov    eax,0xed24541
  414012:	sbb    edx,0xffffffa2
  414015:	out    0xf2,al
  414017:	scas   al,BYTE PTR es:[edi]
  414018:	push   edi
  414019:	repnz push esp
  41401b:	icebp  
  41401c:	push   0xffffffe1
  41401e:	mov    ch,0xaf
  414020:	pop    esp
  414021:	int    0x71
  414023:	outs   dx,DWORD PTR ds:[esi]
  414024:	pop    eax
  414025:	retf   0xa9a7
  414028:	cmove  ecx,DWORD PTR es:[ecx+0x70aaa046]
  414030:	mov    DWORD PTR [edx],edx
  414032:	add    al,cl
  414034:	and    ecx,DWORD PTR ds:0xc3f87ddb
  41403a:	xchg   edi,eax
  41403b:	mov    ds:0x458a63ad,eax
  414040:	popa   
  414041:	inc    eax
  414042:	sbb    ch,al
  414044:	xchg   ebx,eax
  414045:	pusha  
  414046:	sub    dl,bl
  414048:	data16 fidivr WORD PTR [esi+esi*4]
  41404c:	mov    ah,BYTE PTR [edx-0x79e67bba]
  414052:	cdq    
  414053:	push   0x64
  414055:	or     eax,0xb6c769a5
  41405a:	clc    
  41405b:	jge    0x41404d
  41405d:	jg     0x414091
  41405f:	dec    edi
  414060:	cli    
  414061:	mov    DWORD PTR [eax+0x5f],esp
  414064:	hlt    
  414065:	(bad)  
  414066:	ins    DWORD PTR es:[edi],dx
  414067:	fnsave [eax]
  414069:	pop    eax
  41406a:	outs   dx,BYTE PTR ds:[esi]
  41406b:	call   0x56cd:0x34c289f2
  414072:	adc    edi,DWORD PTR gs:0x6a813fdb
  414079:	ins    DWORD PTR es:[edi],dx
  41407a:	(bad)  
  41407b:	call   0xeb17:0x2a5d6337
  414082:	jecxz  0x4140aa
  414084:	call   eax
  414086:	(bad)  
  414087:	dec    esp
  414088:	or     al,0x53
  41408a:	adc    al,0xe6
  41408c:	xor    al,0x92
  41408e:	les    esp,FWORD PTR fs:[ecx]
  414091:	xor    al,0x2b
  414093:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414094:	and    eax,0x3b231dc2
  414099:	xchg   edi,eax
  41409a:	and    ebp,eax
  41409c:	fistp  WORD PTR [esi]
  41409e:	clc    
  41409f:	pop    edi
  4140a0:	or     eax,0xa2d869e
  4140a5:	push   cs
  4140a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140a7:	test   al,0xed
  4140a9:	mov    dl,0x6d
  4140ab:	or     al,0x64
  4140ad:	or     al,0xde
  4140af:	xchg   esp,eax
  4140b0:	js     0x414055
  4140b2:	jl     0x4140b0
  4140b4:	outs   dx,DWORD PTR ds:[esi]
  4140b5:	add    eax,0xffffff83
  4140b8:	sub    eax,0x95c98300
  4140bd:	int    0xc1
  4140bf:	int3   
  4140c0:	jnp    0x41407b
  4140c2:	inc    ebx
  4140c3:	repnz popf 
  4140c5:	mov    ecx,edx
  4140c7:	call   0x4967d5ff
  4140cc:	cwde   
  4140cd:	jp     0x414098
  4140cf:	dec    eax
  4140d0:	test   eax,0x2f74e02a
  4140d5:	call   0xbd86:0xfb9a9a25
  4140dc:	ds jmp 0xb882193c
  4140e2:	jl     0x4140b5
  4140e4:	sbb    cl,BYTE PTR [eax-0x91945cc]
  4140ea:	adc    eax,0xca8aff4
  4140ef:	fcom   DWORD PTR [ebx+edx*1+0x1]
  4140f3:	mov    bl,BYTE PTR [edi+0x331a74ee]
  4140f9:	jg     0x4140f1
  4140fb:	mov    ebp,0xf629c52a
  414100:	out    0x31,al
  414102:	fsub   DWORD PTR [eax]
  414104:	shl    DWORD PTR [esi],0x7b
  414107:	add    eax,0x223a414b
  41410c:	push   0x7edb0a94
  414111:	les    ecx,FWORD PTR fs:[ebx]
  414114:	leave  
  414115:	rol    dl,1
  414117:	push   esp
  414118:	dec    ebx
  414119:	push   esp
  41411a:	adc    DWORD PTR [ebx],ebp
  41411c:	cmp    BYTE PTR [eax+0x6c],ah
  41411f:	in     eax,dx
  414120:	outs   dx,DWORD PTR ds:[esi]
  414121:	adc    esp,DWORD PTR [eax+0x56]
  414124:	pushf  
  414125:	or     cl,dh
  414127:	scas   al,BYTE PTR es:[edi]
  414128:	inc    esi
  414129:	push   eax
  41412a:	sub    esp,ecx
  41412c:	xor    cl,bh
  41412e:	add    BYTE PTR [edi],0x50
  414131:	retf   0xdc4f
  414134:	push   0x9fc429d0
  414139:	mov    esi,0x4b09a083
  41413e:	stc    
  41413f:	in     al,dx
  414140:	pop    ecx
  414141:	sahf   
  414142:	adc    al,0x68
  414144:	popf   
  414145:	in     eax,0x81
  414147:	leave  
  414148:	sub    eax,0xd95414a9
  41414d:	addr16 pop esp
  41414f:	cmp    bl,BYTE PTR [eax]
  414151:	sub    BYTE PTR [esi-0x28],al
  414154:	and    dl,BYTE PTR [ebx-0x48]
  414157:	ficom  DWORD PTR [edx+0x1d]
  41415a:	shl    BYTE PTR [ebx+0x4effa593],0x8f
  414161:	fild   WORD PTR [edi+ebp*4-0x2369576c]
  414168:	(bad)  
  414169:	lock stos DWORD PTR es:[edi],eax
  41416b:	push   ebp
  41416c:	mov    dl,0xfe
  41416e:	aaa    
  41416f:	mov    DWORD PTR [edi-0xc],0x329feba2
  414176:	fcmovnbe st,st(2)
  414178:	xor    al,0x4b
  41417a:	pop    edi
  41417b:	add    DWORD PTR [ebx],ecx
  41417d:	outs   dx,BYTE PTR ds:[esi]
  41417e:	into   
  41417f:	outs   dx,BYTE PTR ds:[esi]
  414180:	(bad)  
  414181:	cmp    DWORD PTR [esi+0x7a95f5ca],edx
  414187:	add    BYTE PTR [edx+0x4a],dh
  41418a:	fmul   st(5),st
  41418c:	fmul   DWORD PTR [ecx]
  41418e:	mov    cl,0xcc
  414190:	push   cs
  414191:	sbb    BYTE PTR [edi],al
  414193:	or     esi,DWORD PTR [edi-0x6]
  414196:	inc    edx
  414197:	mov    ch,0x1b
  414199:	enter  0x3fba,0xce
  41419d:	cmp    BYTE PTR [edx+0x5b],cl
  4141a0:	out    0x7d,al
  4141a2:	xchg   esp,eax
  4141a3:	and    DWORD PTR [esi+0x49],eax
  4141a6:	push   eax
  4141a7:	push   ebx
  4141a8:	bound  ebp,QWORD PTR [esi-0x5b]
  4141ab:	pushf  
  4141ac:	push   esi
  4141ad:	xchg   ecx,eax
  4141ae:	das    
  4141af:	mov    ds:0x43397812,al
  4141b4:	mov    ebp,0x3cfe97e
  4141b9:	push   eax
  4141ba:	fbstp  TBYTE PTR [ecx+0x58]
  4141bd:	cmp    dl,ch
  4141bf:	adc    dh,BYTE PTR [edi]
  4141c1:	out    dx,al
  4141c2:	bound  ebp,QWORD PTR ds:0x5ed7a069
  4141c8:	int    0xcc
  4141ca:	fcomp  st(4)
  4141cc:	ins    DWORD PTR es:[edi],dx
  4141cd:	div    BYTE PTR [ecx]
  4141cf:	aas    
  4141d0:	ja     0x414221
  4141d2:	and    DWORD PTR [edi-0x1634fd76],ecx
  4141d8:	and    al,0x91
  4141da:	mov    ds:0x2f48709a,al
  4141df:	add    al,0xfa
  4141e1:	cmp    eax,0xdc898151
  4141e6:	je     0x414226
  4141e8:	ret    
  4141e9:	or     BYTE PTR [ecx+0x3d],dh
  4141ec:	push   ebx
  4141ed:	sbb    BYTE PTR [esi],ah
  4141ef:	repnz into 
  4141f1:	jbe    0x4141d4
  4141f3:	xchg   ebx,eax
  4141f4:	loope  0x4141c9
  4141f6:	mov    ch,0x68
  4141f8:	cmp    ebx,ebx
  4141fa:	call   DWORD PTR [edx-0x54]
  4141fd:	clc    
  4141fe:	mov    esi,0x9c435af
  414203:	stos   BYTE PTR es:[edi],al
  414204:	sti    
  414205:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414206:	or     al,ah
  414208:	mov    ?,WORD PTR [edx+0x10]
  41420b:	fs and eax,0x8ecea75a
  414211:	and    DWORD PTR [eax],eax
  414213:	outs   dx,DWORD PTR ds:[esi]
  414214:	adc    esi,edx
  414216:	fisub  WORD PTR [edx-0x6c]
  414219:	adc    DWORD PTR [ecx-0x61],edx
  41421c:	push   edi
  41421d:	fsub   QWORD PTR [ebp-0x4f659a26]
  414223:	push   edi
  414224:	fdiv   st(5),st
  414226:	cdq    
  414227:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414228:	mov    ecx,0xd6fb1eac
  41422d:	fcomp  QWORD PTR es:[ecx+0x71]
  414231:	test   BYTE PTR [ebp+0x47],0x49
  414235:	shr    esi,0xb
  414238:	fdecstp 
  41423a:	sub    BYTE PTR [ebp-0x25f72aa0],cl
  414240:	pop    es
  414241:	outs   dx,BYTE PTR ds:[esi]
  414242:	outs   dx,BYTE PTR ds:[esi]
  414243:	adc    ebx,esi
  414245:	js     0x414201
  414247:	outs   dx,DWORD PTR ds:[esi]
  414248:	sahf   
  414249:	and    ebx,DWORD PTR [ebx-0x2d]
  41424c:	xor    DWORD PTR [esi+0x5f],0xe7ed1fb7
  414253:	adc    BYTE PTR [ebx+0x2c30da65],bh
  414259:	test   eax,0xa2eec1d8
  41425e:	outs   dx,BYTE PTR ds:[esi]
  41425f:	mov    dl,0x45
  414261:	or     BYTE PTR ds:0x47f4cdca,al
  414267:	cmp    ecx,0x3c
  41426a:	cmp    eax,0xd774b62e
  41426f:	adc    eax,0x6e5e3fa7
  414274:	rol    DWORD PTR [edx],1
  414276:	dec    ebp
  414277:	call   0x285d:0xcdfb4d0c
  41427e:	loop   0x414210
  414280:	cmc    
  414281:	aaa    
  414282:	adc    DWORD PTR [ecx+0x4c],0xffffff89
  414286:	xor    DWORD PTR [edi+ebp*2-0x622b3512],ebx
  41428d:	shl    DWORD PTR [ebx],cl
  41428f:	iret   
  414290:	push   ebp
  414291:	sbb    ch,BYTE PTR [ecx-0x77]
  414294:	data16 fistp QWORD PTR [eax+0x53]
  414298:	push   esi
  414299:	out    dx,al
  41429a:	icebp  
  41429b:	setp   ch
  41429e:	cmp    DWORD PTR [edx+esi*2-0x40102cf2],esi
  4142a5:	xlat   BYTE PTR ds:[ebx]
  4142a6:	std    
  4142a7:	pushf  
  4142a8:	gs ffreep st(0)
  4142ab:	cmp    BYTE PTR [eax-0x25],dh
  4142ae:	push   eax
  4142af:	jmp    0x8750:0x20180e2
  4142b6:	xor    eax,0x62e81c4
  4142bb:	dec    esp
  4142bc:	jge    0x414339
  4142be:	cwde   
  4142bf:	sbb    eax,0x3cc56830
  4142c4:	pop    edx
  4142c5:	in     al,0x7c
  4142c7:	xor    edi,DWORD PTR [edi]
  4142c9:	xchg   esp,eax
  4142ca:	and    eax,0x2c4c19fd
  4142cf:	xor    eax,0x60eb1ef4
  4142d4:	jo     0x4142b0
  4142d6:	test   al,0xa3
  4142d8:	sar    esi,cl
  4142da:	lea    edx,[ecx-0x7731abc3]
  4142e0:	sbb    edi,0x54
  4142e3:	and    DWORD PTR [eax+0x10ed185d],ebp
  4142e9:	in     eax,0xf9
  4142eb:	in     eax,0x4
  4142ed:	das    
  4142ee:	sti    
  4142ef:	cmp    DWORD PTR [ebx-0x1b882eca],edx
  4142f5:	(bad)  
  4142f6:	outs   dx,BYTE PTR ds:[esi]
  4142f7:	popf   
  4142f8:	adc    al,0x94
  4142fa:	sbb    al,0xcf
  4142fc:	sub    DWORD PTR [esi+0x23],edx
  4142ff:	sub    edx,ebp
  414301:	retf   0xddb4
  414304:	aam    0x6d
  414306:	(bad)  
  414307:	mov    esp,0xc03946ef
  41430c:	not    ch
  41430e:	inc    ebx
  41430f:	push   ss
  414310:	sbb    eax,0x71196d21
  414315:	leave  
  414316:	jne    0x414348
  414318:	jp     0x4142f1
  41431a:	sbb    eax,DWORD PTR [eax]
  41431c:	hlt    
  41431d:	sub    edi,DWORD PTR [ebx]
  41431f:	mov    ebx,0xb3c23f2c
  414324:	mov    ebx,0x552a3c15
  414329:	mov    esi,0x9dd720e4
  41432e:	adc    esp,DWORD PTR [ebx-0x31045c47]
  414334:	mov    ebp,ecx
  414336:	dec    ebx
  414337:	enter  0x82e7,0x59
  41433b:	jmp    0x8834b6d0
  414340:	sub    al,BYTE PTR [esp+ebp*2+0x7cc9356f]
  414347:	rol    DWORD PTR [edx-0x16],1
  41434a:	push   ebp
  41434b:	sbb    BYTE PTR [edx-0x798995bf],ch
  414351:	xor    al,0x22
  414353:	or     dh,BYTE PTR [esi]
  414355:	aad    0x2c
  414357:	mov    ebp,0xba22d69b
  41435c:	pop    eax
  41435d:	sbb    BYTE PTR [eax+0x502af5f7],cl
  414363:	dec    edi
  414364:	cmp    BYTE PTR [ebx+ebp*2-0x70],cl
  414368:	adc    ah,BYTE PTR [edx+0x37]
  41436b:	sub    eax,0xdcd92aea
  414370:	or     BYTE PTR [ebp+eiz*8-0x22c2afa1],cl
  414377:	loope  0x4143e1
  414379:	jnp    0x41433d
  41437b:	lods   eax,DWORD PTR fs:[esi]
  41437d:	retf   
  41437e:	sub    eax,0xc8178c9b
  414383:	or     al,0x28
  414385:	dec    ebp
  414386:	sub    DWORD PTR [edi],edx
  414388:	sar    DWORD PTR [edx+0x4a],0x9b
  41438c:	fwait
  41438d:	push   es
  41438e:	and    DWORD PTR [ebx+eax*1+0x40],esi
  414392:	inc    eax
  414393:	push   0x145b260a
  414398:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414399:	jno    0x4143d9
  41439b:	stos   DWORD PTR es:[edi],eax
  41439c:	push   esi
  41439d:	sub    eax,DWORD PTR [edi-0x6b]
  4143a0:	(bad)  
  4143a1:	out    dx,eax
  4143a2:	xor    BYTE PTR [ecx],cl
  4143a4:	mov    ch,0x37
  4143a6:	ret    
  4143a7:	mov    ah,0x1d
  4143a9:	int    0x38
  4143ab:	in     al,dx
  4143ac:	dec    esi
  4143ad:	leave  
  4143ae:	sahf   
  4143af:	push   esp
  4143b0:	retf   
  4143b1:	or     DWORD PTR [edi+0x6dc4f5be],edx
  4143b7:	sbb    eax,0x8ac7ea85
  4143bc:	inc    esp
  4143bd:	dec    ebp
  4143be:	leave  
  4143bf:	(bad)  
  4143c0:	mov    dl,0x12
  4143c2:	bound  ebx,QWORD PTR ds:0x9ab90570
  4143c8:	(bad)  
  4143c9:	fidiv  DWORD PTR [ebp+0x97e8a33]
  4143cf:	or     BYTE PTR [ecx+0x68febf24],cl
  4143d5:	mov    ah,0x68
  4143d7:	and    al,0x3a
  4143d9:	cli    
  4143da:	sub    ah,dl
  4143dc:	sub    al,0xc5
  4143de:	int    0x22
  4143e0:	sub    ah,bl
  4143e2:	sub    eax,0x962c3bfa
  4143e7:	sub    al,bl
  4143e9:	mov    eax,0xd05aaf11
  4143ee:	stos   BYTE PTR es:[edi],al
  4143ef:	ja     0x4143d7
  4143f1:	jbe    0x414466
  4143f3:	lock into 
  4143f5:	or     al,0x9c
  4143f7:	test   DWORD PTR [ebp+0x16f29fa9],edi
  4143fd:	jne    0x41440d
  4143ff:	adc    eax,0xc5f310f4
  414404:	sub    DWORD PTR [ecx+0xa29de24],ecx
  41440a:	push   0xeae8550e
  41440f:	sbb    eax,0xa3cae457
  414414:	add    eax,0xfbc4bf26
  414419:	loop   0x41442e
  41441b:	lea    esi,[eax+0x17c8955b]
  414421:	lahf   
  414422:	and    eax,0x6b2878cd
  414427:	pop    ss
  414428:	lds    ebx,FWORD PTR [eax]
  41442a:	sbb    ebp,DWORD PTR [ebx]
  41442c:	xchg   ecx,eax
  41442d:	shl    BYTE PTR [edx],cl
  41442f:	push   edx
  414430:	icebp  
  414431:	cdq    
  414432:	adc    bl,dh
  414434:	add    eax,0x92bb7c45
  414439:	inc    eax
  41443a:	fist   WORD PTR [ecx+esi*1]
  41443d:	push   0x509ebd0d
  414442:	ja     0x41447e
  414444:	sbb    al,0xab
  414446:	mov    bh,0x41
  414448:	test   DWORD PTR [ecx],edx
  41444a:	push   0xffffffd7
  41444c:	scas   eax,DWORD PTR es:[edi]
  41444d:	sbb    edi,DWORD PTR [edi]
  41444f:	pop    ss
  414450:	rcr    DWORD PTR [edx*1-0x2e903f72],0x88
  414458:	ds xor bl,bh
  41445b:	in     eax,0x7e
  41445d:	or     BYTE PTR [ecx-0x3f43bc99],0xdd
  414464:	ja     0x414467
  414466:	xchg   ebx,eax
  414467:	fstp   st(2)
  414469:	enter  0x66db,0xf3
  41446d:	cld    
  41446e:	cmp    DWORD PTR [eax+0x51],edx
  414471:	sar    DWORD PTR [edi-0xfb201ed],0xb9
  414478:	or     al,0xb9
  41447a:	in     al,dx
  41447b:	push   edx
  41447c:	out    0xe6,eax
  41447e:	rol    DWORD PTR [ebx],0x29
  414481:	inc    edi
  414482:	mov    bl,0x91
  414484:	and    eax,0xa583c0f
  414489:	push   0xb5ef5054
  41448e:	mov    eax,ds:0xeed7fa7c
  414493:	(bad)  
  414495:	das    
  414496:	fdiv   QWORD PTR [esi+0x12]
  414499:	cld    
  41449a:	jmp    0xdf10:0xf16b96ca
  4144a1:	sub    DWORD PTR [esi-0x5d],edi
  4144a4:	dec    ecx
  4144a5:	outs   dx,DWORD PTR ds:[esi]
  4144a6:	xor    dl,dh
  4144a8:	xor    bl,BYTE PTR [ebx+eiz*8+0x25]
  4144ac:	psadbw mm5,QWORD PTR [eax+0x4]
  4144b0:	xor    bh,dh
  4144b2:	scas   eax,DWORD PTR es:[edi]
  4144b3:	shl    BYTE PTR [edx-0x29069400],0x59
  4144ba:	add    al,0x2f
  4144bc:	mov    ah,0x3f
  4144be:	shl    esi,1
  4144c0:	fild   QWORD PTR [ecx+ebx*4]
  4144c3:	sub    al,0xa6
  4144c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144c6:	out    dx,al
  4144c7:	pop    ecx
  4144c8:	in     al,dx
  4144c9:	(bad)  
  4144ca:	std    
  4144cb:	push   0xc7a71759
  4144d0:	pushf  
  4144d1:	sub    al,0xb0
  4144d3:	push   ebp
  4144d4:	fs aaa 
  4144d6:	les    esp,FWORD PTR [eax]
  4144d8:	sub    esi,DWORD PTR [edi]
  4144da:	sahf   
  4144db:	cmp    eax,DWORD PTR [edx]
  4144dd:	stc    
  4144de:	and    edi,ebp
  4144e0:	and    ah,ch
  4144e2:	dec    edi
  4144e3:	push   eax
  4144e4:	or     al,0x11
  4144e6:	xchg   ecx,eax
  4144e7:	inc    edi
  4144e8:	xchg   dh,ah
  4144ea:	ret    0xf080
  4144ed:	ja     0x4144bf
  4144ef:	cli    
  4144f0:	loop   0x414514
  4144f2:	adc    eax,0x3c43554d
  4144f7:	jle    0x4144b4
  4144f9:	in     al,dx
  4144fa:	and    DWORD PTR [ebx],ebx
  4144fc:	(bad)  [eax+0x32a91be1]
  414502:	out    dx,eax
  414503:	mov    esi,0x8f44627e
  414508:	loop   0x4144ab
  41450a:	dec    ecx
  41450b:	scas   al,BYTE PTR es:[edi]
  41450c:	sub    ah,BYTE PTR [esp+esi*2]
  41450f:	in     eax,dx
  414510:	mov    edx,0x8f567d82
  414515:	shl    DWORD PTR [ecx],1
  414517:	(bad)  
  414518:	xchg   edi,eax
  414519:	push   edx
  41451a:	xor    DWORD PTR [edx+0x1a91c92d],esi
  414520:	sub    al,0xe9
  414522:	sbb    ebp,DWORD PTR [eax+0x2a]
  414525:	jae    0x4144d3
  414527:	loop   0x4144f3
  414529:	xchg   BYTE PTR [eax-0x5dad26ff],al
  41452f:	mov    ch,0xe5
  414531:	cwde   
  414532:	fisub  DWORD PTR [ebx+0x2]
  414535:	mov    ds:0xe5a147f7,al
  41453a:	xchg   DWORD PTR [eax-0x5fb9518a],esi
  414540:	push   ecx
  414541:	imul   ebx,DWORD PTR [ecx+0x2378716b],0xbeda8855
  41454b:	push   ebx
  41454c:	(bad)  
  41454d:	dec    edi
  41454e:	dec    edi
  41454f:	jae    0x4145a1
  414551:	xchg   ebp,eax
  414552:	mov    al,ds:0x3d45a6dc
  414557:	popf   
  414558:	cdq    
  414559:	mov    ds:0x532944c3,eax
  41455e:	sbb    esp,DWORD PTR [edi]
  414560:	jno    0x41456f
  414562:	dec    eax
  414563:	stc    
  414564:	data16 jo 0x41450f
  414567:	xor    BYTE PTR [ebp*2+0x71958737],cl
  41456e:	inc    eax
  41456f:	xor    DWORD PTR [esi],0xfffffff8
  414572:	push   ss
  414573:	push   es
  414574:	es pop ss
  414576:	sti    
  414577:	call   0x5d4d:0x834b1b5
  41457e:	call   0x52b4b550
  414583:	sbb    ecx,esi
  414585:	ja     0x41451b
  414587:	int3   
  414588:	pop    es
  414589:	adc    eax,0x2d18a995
  41458e:	stc    
  41458f:	push   es
  414590:	fcom   DWORD PTR [eax]
  414592:	xchg   ecx,eax
  414593:	ror    BYTE PTR [eax],1
  414595:	sbb    eax,0xff386a7
  41459a:	xor    eax,0x57752c34
  41459f:	jmp    FWORD PTR [ecx-0x5cef111b]
  4145a5:	lahf   
  4145a6:	cmp    eax,0xebaf6924
  4145ab:	jmp    0xaeec:0x42be7e8e
  4145b2:	lds    ecx,FWORD PTR [edx+ebp*4-0xd4ac1fb]
  4145b9:	imul   ebx,DWORD PTR [edx+0x68],0xffffffb2
  4145bd:	xchg   si,ax
  4145bf:	sub    BYTE PTR [ebx-0xa],ah
  4145c2:	sbb    edi,0x41204ae7
  4145c8:	loop   0x4145bc
  4145ca:	fadd   QWORD PTR ds:0xe1bfa01f
  4145d0:	cmp    eax,0x50165780
  4145d5:	nop
  4145d6:	adc    al,0x83
  4145d8:	sbb    al,0xc1
  4145da:	outs   dx,BYTE PTR ds:[esi]
  4145db:	dec    esi
  4145dc:	pop    ebx
  4145dd:	lods   al,BYTE PTR ds:[esi]
  4145de:	push   cs
  4145df:	shr    DWORD PTR [ebp+0x5cb35b9f],1
  4145e5:	sbb    al,BYTE PTR [eax+ebp*8]
  4145e8:	and    al,0x43
  4145ea:	jb     0x4145b7
  4145ec:	mov    al,0x11
  4145ee:	retf   0x9507
  4145f1:	clc    
  4145f2:	pop    es
  4145f3:	xor    ebp,DWORD PTR [ebp-0x42]
  4145f6:	mov    eax,ds:0x8c172669
  4145fb:	push   ebx
  4145fc:	adc    edx,DWORD PTR [edx-0x6b781912]
  414602:	inc    ecx
  414603:	mov    bh,BYTE PTR [edi+0x7120bd77]
  414609:	fstp   QWORD PTR [ecx+0x24]
  41460c:	fild   DWORD PTR [edi]
  41460e:	or     eax,0xf389e3e6
  414613:	stos   DWORD PTR es:[edi],eax
  414614:	popa   
  414615:	cwde   
  414616:	and    dl,bl
  414618:	sub    eax,0x16be16e
  41461d:	sub    al,0x3e
  41461f:	cmp    al,BYTE PTR [eax-0x37c1378a]
  414625:	je     0x4146a5
  414627:	push   ebx
  414628:	popa   
  414629:	pusha  
  41462a:	lock cmp eax,0x5460f8a6
  414630:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414631:	sub    BYTE PTR [ebx-0x64],al
  414634:	mov    eax,0x9ef16a0b
  414639:	pop    ebx
  41463a:	arpl   sp,bp
  41463c:	sub    eax,0x2dc644f6
  414641:	pop    ebp
  414642:	add    al,0xad
  414644:	xchg   edi,eax
  414645:	icebp  
  414646:	lea    edx,ds:0xbbd082d7
  41464c:	loopne 0x414689
  41464e:	fwait
  41464f:	ss enter 0x55ce,0xd6
  414654:	mov    DWORD PTR [esi],ecx
  414656:	aaa    
  414657:	rcl    BYTE PTR [ecx+edx*8],0x24
  41465b:	int3   
  41465c:	mov    dh,BYTE PTR ss:[edx+0x5c]
  414660:	push   ecx
  414661:	clc    
  414662:	fs lahf 
  414664:	push   0xf40f8f57
  414669:	fdiv   DWORD PTR [esi-0xadf3c3e]
  41466f:	or     eax,0x756d767f
  414674:	dec    ebp
  414675:	jmp    0xa900:0xa945d0be
  41467c:	loope  0x41464c
  41467e:	mov    ebx,0xedb0347e
  414683:	cdq    
  414684:	mov    BYTE PTR [edx],ah
  414686:	mov    ebx,0xb330c2f2
  41468b:	clc    
  41468c:	cs dec ebx
  41468e:	jp     0x4146c8
  414690:	fisttp QWORD PTR [ecx]
  414692:	xlat   BYTE PTR ds:[ebx]
  414693:	sbb    ebp,DWORD PTR [eax-0x2b5822f5]
  414699:	mov    edx,0x93f7a884
  41469e:	cmc    
  41469f:	and    DWORD PTR [ebp+0x78],ecx
  4146a2:	pushf  
  4146a3:	pop    edx
  4146a4:	dec    edi
  4146a5:	loope  0x4146c8
  4146a7:	sbb    eax,0x21fbce0c
  4146ac:	dec    ebx
  4146ad:	xchg   esi,eax
  4146ae:	sub    al,0x52
  4146b0:	or     cl,BYTE PTR [ecx-0x8]
  4146b3:	or     ebp,ebp
  4146b5:	fwait
  4146b6:	lds    edx,FWORD PTR [edx-0x9]
  4146b9:	popf   
  4146ba:	mov    al,0x38
  4146bc:	lock cs int 0x52
  4146c0:	std    
  4146c1:	pop    esi
  4146c2:	xor    eax,0xd0c5b2de
  4146c7:	or     al,0x91
  4146c9:	fisubr WORD PTR [edx+0x4b57313]
  4146cf:	push   esp
  4146d0:	add    eax,0x6b35560d
  4146d5:	ror    BYTE PTR [ecx-0xb],cl
  4146d8:	loop   0x4146ae
  4146da:	cmc    
  4146db:	ret    
  4146dc:	inc    ebx
  4146dd:	addr16 or al,0x3
  4146e0:	daa    
  4146e1:	xor    DWORD PTR [ebx-0x4d],esi
  4146e4:	or     dh,dl
  4146e6:	popf   
  4146e7:	test   al,0xc5
  4146e9:	addr16 dec edi
  4146eb:	mov    ds,WORD PTR [ecx]
  4146ed:	xor    cl,cl
  4146ef:	add    ebx,DWORD PTR [ecx+0x194527b5]
  4146f5:	out    0xb3,eax
  4146f7:	shl    eax,0xf5
  4146fa:	dec    edx
  4146fb:	mov    ds:0x134507c2,al
  414700:	push   ebp
  414701:	fidivr DWORD PTR fs:[edi-0x31]
  414705:	pop    edi
  414706:	pop    edx
  414707:	fwait
  414708:	mov    cl,0xb7
  41470a:	pop    ds
  41470b:	mov    edx,0x78221fe7
  414710:	neg    DWORD PTR [eax]
  414712:	mov    ss,WORD PTR [ebx-0x31d41707]
  414718:	enter  0xdfc8,0xa3
  41471c:	mov    DWORD PTR [eax+0x75d096f0],ecx
  414722:	sbb    DWORD PTR [ecx],edx
  414724:	lock push 0x7af128d5
  41472a:	cmp    BYTE PTR [esi],dh
  41472c:	mov    ebx,0x276274d0
  414731:	std    
  414732:	ds gs or al,0xcb
  414736:	dec    ecx
  414737:	ret    0x655c
  41473a:	pusha  
  41473b:	lahf   
  41473c:	mov    ebp,0x6a6af89f
  414741:	inc    edx
  414742:	(bad)  
  414743:	mov    edx,0xd8fac150
  414748:	push   DWORD PTR [edx+edi*2-0x697a99de]
  41474f:	and    dh,BYTE PTR [ebx-0x3968076b]
  414755:	xor    al,0xf1
  414757:	clc    
  414758:	stc    
  414759:	je     0x4146e8
  41475b:	xor    al,0x2b
  41475d:	(bad)  
  41475e:	mov    dh,0x9d
  414760:	retf   0x4619
  414763:	or     eax,0xd17d6f79
  414768:	sub    al,0x80
  41476a:	sbb    DWORD PTR [ebx-0x7082446],edi
  414770:	mov    al,0x87
  414772:	pop    ecx
  414773:	mov    cl,0x25
  414775:	xor    BYTE PTR [edx+0x71],0xba
  414779:	jecxz  0x4147ea
  41477b:	retf   0x82ef
  41477e:	retf   0xc327
  414781:	aas    
  414782:	fst    QWORD PTR [edx+eiz*1+0x50]
  414786:	sbb    ebp,DWORD PTR ds:0xeabc69c9
  41478c:	ret    0xef60
  41478f:	rol    BYTE PTR [edx-0x69a55b08],1
  414795:	dec    edi
  414796:	data16 rcr BYTE PTR [edi+0x633a4e79],cl
  41479d:	out    0x1,eax
  41479f:	test   al,0x7c
  4147a1:	pop    es
  4147a2:	(bad)  
  4147a3:	(bad)  
  4147a4:	pop    esi
  4147a5:	adc    al,0xf6
  4147a7:	rol    BYTE PTR [ebx-0x3cf67ce5],cl
  4147ad:	(bad)  
  4147ae:	push   ebx
  4147af:	inc    edi
  4147b0:	aam    0xd
  4147b2:	ins    BYTE PTR es:[edi],dx
  4147b3:	js     0x414786
  4147b5:	sbb    cl,BYTE PTR [ebx+ebx*4]
  4147b8:	mov    ecx,0x776c6782
  4147bd:	and    BYTE PTR [ebx],bl
  4147bf:	and    DWORD PTR ds:0x7c278af0,ecx
  4147c5:	test   eax,0x359fae30
  4147ca:	inc    esp
  4147cb:	pushf  
  4147cc:	mov    cl,0xc2
  4147ce:	aad    0x87
  4147d0:	or     eax,DWORD PTR [esi+0x1ca7a449]
  4147d6:	mov    eax,ds:0x3d149843
  4147db:	pop    edi
  4147dc:	mov    WORD PTR [esi],es
  4147de:	adc    cl,BYTE PTR [ecx-0x218ae9b1]
  4147e4:	(bad)  
  4147e5:	fsubr  st,st(1)
  4147e7:	jp     0x4147b2
  4147e9:	xlat   BYTE PTR ds:[ebx]
  4147ea:	sub    eax,0x85e131e1
  4147ef:	pop    esi
  4147f0:	jge    0x414815
  4147f2:	cmp    esi,esi
  4147f4:	mov    dl,0x55
  4147f6:	pop    esp
  4147f7:	mov    eax,ds:0x9d683f70
  4147fc:	pop    ss
  4147fd:	adc    ah,BYTE PTR [edx+eiz*8-0x847c72b]
  414804:	inc    esi
  414805:	cmp    dl,BYTE PTR [ecx]
  414807:	scas   eax,DWORD PTR es:[edi]
  414808:	xor    ch,bh
  41480a:	cdq    
  41480b:	inc    eax
  41480c:	inc    ebx
  41480d:	sti    
  41480e:	repnz pop ds
  414810:	add    BYTE PTR [ebp+edx*8+0x776ef2b6],ch
  414817:	cmc    
  414818:	mov    bh,0x37
  41481a:	jge    0x4147e8
  41481c:	push   edx
  41481d:	push   ds
  41481e:	sti    
  41481f:	or     al,BYTE PTR [esi+ebp*1]
  414822:	sbb    al,0x7d
  414824:	stos   BYTE PTR es:[edi],al
  414825:	(bad)  
  414826:	(bad)  
  414827:	fild   QWORD PTR [edx+0x29bb8e97]
  41482d:	pop    edx
  41482e:	pop    ebx
  41482f:	push   ecx
  414830:	cmp    ecx,DWORD PTR [eax+0x72]
  414833:	push   es
  414834:	sbb    al,0x25
  414836:	enter  0xbefd,0x89
  41483a:	push   cs
  41483b:	ret    0xe0f2
  41483e:	stc    
  41483f:	pop    eax
  414840:	and    edi,eax
  414842:	(bad)  [eax]
  414844:	test   al,0x68
  414846:	scas   al,BYTE PTR es:[edi]
  414847:	add    eax,0x866419e7
  41484c:	fdiv   QWORD PTR [esi-0x5f]
  41484f:	jns    0x414896
  414851:	push   ss
  414852:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414853:	stos   DWORD PTR es:[edi],eax
  414854:	push   ebx
  414855:	mov    es,WORD PTR [ebx]
  414857:	or     BYTE PTR [esi-0x5],0xde
  41485b:	mov    bl,0xc9
  41485d:	sub    BYTE PTR [eax+0x41],bl
  414860:	dec    esp
  414861:	(bad)  
  414862:	pop    eax
  414863:	xchg   eax,ecx
  414865:	add    eax,0x13dd01a6
  41486a:	cmp    eax,0x8f2e9324
  41486f:	std    
  414870:	fdiv   QWORD PTR [ebx-0x48]
  414873:	cmp    ch,BYTE PTR [esi]
  414875:	ror    DWORD PTR [edx-0x883591b],cl
  41487b:	pop    esi
  41487d:	les    edi,FWORD PTR [eax+0x28a75f19]
  414883:	mov    ecx,0x2d3b1bd9
  414888:	inc    ebp
  414889:	cmp    dl,BYTE PTR [ecx+0x3a3d69a4]
  41488f:	call   0xff2dd732
  414894:	mov    ebp,0xac0d859a
  414899:	(bad)
  41489d:	jmp    0xac98:0xce151ab3
  4148a4:	adc    DWORD PTR [edi+0x38],eax
  4148a7:	cli    
  4148a8:	out    dx,eax
  4148a9:	sti    
  4148aa:	or     BYTE PTR [ebx],al
  4148ac:	push   ecx
  4148ad:	aaa    
  4148ae:	push   ebp
  4148af:	aaa    
  4148b0:	push   0x87c6dc18
  4148b5:	dec    ecx
  4148b6:	fwait
  4148b7:	inc    ebx
  4148b8:	ds cld 
  4148ba:	and    al,0x56
  4148bc:	out    dx,eax
  4148bd:	nop
  4148be:	stos   DWORD PTR es:[edi],eax
  4148bf:	jo     0x41492a
  4148c1:	in     eax,0xee
  4148c3:	inc    esi
  4148c4:	pop    esp
  4148c5:	jnp    0x4148b2
  4148c7:	lods   al,BYTE PTR ds:[esi]
  4148c8:	sub    al,0xc8
  4148ca:	push   ebx
  4148cb:	inc    ebx
  4148cc:	jbe    0x4148d3
  4148ce:	and    ch,BYTE PTR [edx]
  4148d0:	pop    edi
  4148d1:	add    eax,0xab75795b
  4148d6:	or     al,0xec
  4148d9:	pusha  
  4148da:	test   DWORD PTR [ecx-0x5a],esi
  4148dd:	in     al,0x3f
  4148df:	jno    0x414864
  4148e1:	xchg   edx,eax
  4148e2:	retw   
  4148e4:	stc    
  4148e5:	inc    esi
  4148e6:	retf   
  4148e7:	dec    esi
  4148e8:	ja     0x414904
  4148ea:	ret    0x36ed
  4148ed:	dec    esp
  4148ee:	inc    eax
  4148ef:	aas    
  4148f0:	add    DWORD PTR [eax+ecx*1],edx
  4148f3:	add    eax,0x43fabfbf
  4148f8:	enter  0x18,0x8b
  4148fc:	cmp    ecx,DWORD PTR [eax-0x2c2eade3]
  414902:	ja     0x414885
  414904:	clc    
  414905:	aad    0x3d
  414907:	repnz sbb dl,BYTE PTR [esi-0x3f]
  41490b:	jl     0x41497a
  41490d:	aas    
  41490e:	(bad)  
  41490f:	pop    ebx
  414910:	xchg   esi,eax
  414911:	std    
  414912:	push   ecx
  414913:	imul   ebx,DWORD PTR [ebp+0x6c],0xffffffe3
  414917:	mov    di,0x648b
  41491b:	adc    eax,0x365e8359
  414920:	ds mov ch,0x2f
  414923:	ds dec edi
  414925:	add    dl,BYTE PTR [esi]
  414927:	add    eax,0x36a86ab5
  41492c:	jno    0x4149a9
  41492e:	xor    BYTE PTR [edx*8+0x2e65f31],0x13
  414936:	push   edx
  414937:	pop    ebp
  414938:	pop    esi
  414939:	mov    esp,0xc04baf40
  41493e:	jne    0x414935
  414940:	mov    ebx,0xfea674e3
  414945:	push   ss
  414946:	pop    esp
  414947:	mov    ds:0x71c9748c,al
  41494c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41494d:	jge    0x414975
  41494f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414950:	add    al,0xb2
  414952:	or     al,0x9e
  414954:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414955:	add    DWORD PTR [edi],ecx
  414957:	sti    
  414958:	mov    bh,0x66
  41495a:	(bad)  
  41495c:	aam    0x42
  41495e:	dec    ecx
  41495f:	adc    eax,0xa58ae5a3
  414964:	xchg   ecx,esi
  414966:	dec    ebp
  414967:	aas    
  414968:	dec    ebx
  414969:	dec    esp
  41496a:	push   esi
  41496b:	retf   0xeddf
  41496e:	(bad)  
  41496f:	jno    0x414999
  414971:	jbe    0x4149de
  414973:	push   esp
  414974:	loopne 0x414990
  414976:	js     0x41490e
  414978:	scas   eax,DWORD PTR es:[edi]
  414979:	jno    0x4149e5
  41497b:	loopne 0x4149bb
  41497d:	mov    ebx,0x8f4fbff7
  414982:	retf   0xb4a9
  414985:	dec    edx
  414986:	enter  0xe174,0x5b
  41498a:	sahf   
  41498b:	add    dh,BYTE PTR ds:0x76d28fa5
  414991:	fist   DWORD PTR [ecx]
  414993:	mov    DWORD PTR [ebp+0x6],esp
  414996:	fisttp QWORD PTR [eax+0x5974ef22]
  41499c:	repz (bad) 
  41499e:	idiv   BYTE PTR [eax-0x408997bc]
  4149a4:	test   BYTE PTR [ebx-0x1c],dh
  4149a7:	xor    al,0x8b
  4149a9:	inc    esi
  4149aa:	cwde   
  4149ab:	enter  0xe6f0,0xee
  4149af:	leave  
  4149b0:	lahf   
  4149b1:	jle    0x41493d
  4149b3:	pusha  
  4149b4:	jb     0x414991
  4149b6:	sbb    dh,BYTE PTR [ecx+0x78b29115]
  4149bc:	xlat   BYTE PTR ds:[ebx]
  4149bd:	cs in  eax,dx
  4149bf:	loope  0x414944
  4149c1:	cmp    ch,bh
  4149c3:	xor    al,0xe1
  4149c5:	stc    
  4149c6:	or     DWORD PTR [ebx],eax
  4149c8:	inc    ecx
  4149c9:	jae    0x414a45
  4149cb:	dec    edx
  4149cc:	mov    dl,BYTE PTR [edi]
  4149ce:	enter  0xe943,0xba
  4149d2:	inc    esp
  4149d3:	jns    0x414a1d
  4149d5:	sub    DWORD PTR [eax-0x119c0c],ecx
  4149db:	push   ebx
  4149dc:	stos   BYTE PTR es:[edi],al
  4149dd:	xchg   BYTE PTR [edi],dl
  4149df:	mov    BYTE PTR [edi+0x493e9139],ch
  4149e5:	inc    edi
  4149e6:	mov    edx,0xe69e5153
  4149eb:	xor    DWORD PTR [ecx],esi
  4149ed:	cmp    DWORD PTR [ebp+0x3dedf64c],0xaaa56c16
  4149f7:	or     ch,BYTE PTR [edi+0x6a2eb694]
  4149fd:	out    0x14,eax
  4149ff:	push   ecx
  414a00:	sub    dh,al
  414a02:	imul   eax,DWORD PTR [ebp-0x47],0xb4cbe59c
  414a09:	test   BYTE PTR [esi-0x41],cl
  414a0c:	loope  0x4149ba
  414a0e:	repz dec eax
  414a10:	cld    
  414a11:	sub    BYTE PTR [esi-0x75],ch
  414a14:	adc    esp,DWORD PTR [ebx-0x23]
  414a17:	enter  0x908a,0xf
  414a1b:	(bad)  [eax+edi*1-0x5e7319e1]
  414a22:	(bad)  
  414a23:	pop    ss
  414a24:	aaa    
  414a25:	stos   DWORD PTR es:[edi],eax
  414a26:	cmp    ebx,edx
  414a28:	mov    ch,0x61
  414a2a:	aam    0x8
  414a2c:	and    ebx,esi
  414a2e:	icebp  
  414a2f:	and    BYTE PTR [esp+esi*4-0x6a16658e],dl
  414a36:	adc    al,0x7e
  414a38:	jnp    0x4149df
  414a3a:	xor    eax,0x3b2880
  414a3f:	mov    dl,0xa6
  414a41:	push   ss
  414a42:	scas   eax,DWORD PTR es:[edi]
  414a43:	stc    
  414a44:	cmp    al,bl
  414a46:	pusha  
  414a47:	or     edi,DWORD PTR [ebx+eiz*4+0x1fd1e28]
  414a4e:	imul   edx,DWORD PTR [edi],0x43
  414a51:	jbe    0x414a5b
  414a53:	and    BYTE PTR [ebp-0x6c275d8f],0x85
  414a5a:	jno    0x4149ec
  414a5c:	inc    edi
  414a5d:	retf   0xf83b
  414a60:	cdq    
  414a61:	xchg   DWORD PTR [ecx+0x2f],esi
  414a64:	add    edx,edi
  414a66:	dec    edi
  414a67:	jecxz  0x414a77
  414a69:	sub    BYTE PTR [esi],bh
  414a6b:	test   eax,0x8db348dd
  414a70:	xor    al,0xed
  414a72:	jl     0x414a6e
  414a74:	cmp    al,0xe3
  414a76:	mov    cl,0xbf
  414a78:	sub    al,0x6b
  414a7a:	jo     0x414a3b
  414a7c:	xchg   ebx,eax
  414a7d:	xor    cl,bh
  414a7f:	sbb    esi,DWORD PTR [edi+0x4a]
  414a82:	adc    BYTE PTR es:[esi-0x60b40d3b],ch
  414a89:	mov    al,ds:0x3d9c09de
  414a8e:	add    BYTE PTR [edi+eiz*4],al
  414a91:	fwait
  414a92:	in     eax,0x34
  414a94:	cmp    al,BYTE PTR [esp+edx*1-0x7893bf58]
  414a9b:	rcl    dh,1
  414a9d:	inc    ecx
  414a9e:	adc    DWORD PTR [edi-0x11],edi
  414aa1:	mov    al,0x9e
  414aa3:	dec    cx
  414aa5:	fs mov al,0x39
  414aa8:	dec    eax
  414aa9:	jmp    0xd5a756f
  414aae:	aaa    
  414aaf:	lahf   
  414ab0:	rol    eax,0xc1
  414ab3:	adc    ah,BYTE PTR [ebp+ebx*2-0x49]
  414ab7:	jbe    0x414b03
  414ab9:	or     edx,DWORD PTR [eax]
  414abb:	stc    
  414abc:	lods   al,BYTE PTR ds:[esi]
  414abd:	xchg   BYTE PTR [ebp+0x13],bl
  414ac0:	mov    dl,0x6
  414ac2:	daa    
  414ac3:	inc    esi
  414ac4:	loope  0x414b42
  414ac6:	push   esi
  414ac7:	xlat   BYTE PTR ds:[ebx]
  414ac8:	pop    ebp
  414ac9:	or     dl,BYTE PTR [esi+0x17]
  414acc:	xchg   edi,eax
  414acd:	in     al,dx
  414ace:	fisttp QWORD PTR [esi+0x4eb78e7b]
  414ad4:	inc    edx
  414ad5:	mov    edx,DWORD PTR [ebp-0x55]
  414ad8:	sbb    eax,0xb8ce125f
  414add:	int3   
  414ade:	add    esi,ecx
  414ae0:	push   ebp
  414ae1:	sub    dl,BYTE PTR [ebp-0x29]
  414ae4:	iret   
  414ae5:	scas   al,BYTE PTR es:[edi]
  414ae6:	dec    esi
  414ae7:	mov    eax,0xdd9fcb51
  414aec:	xchg   edi,eax
  414aed:	inc    DWORD PTR [esi-0x2d879a06]
  414af3:	pusha  
  414af4:	imul   ebp,DWORD PTR ds:0x34127bec,0xffffffac
  414afb:	add    ecx,eax
  414afd:	xlat   BYTE PTR ds:[ebx]
  414afe:	jl     0x414a8f
  414b00:	gs es mov fs,esi
  414b04:	mov    ch,0x4c
  414b06:	xchg   edx,eax
  414b07:	outs   dx,DWORD PTR ds:[esi]
  414b08:	es cli 
  414b0a:	mov    al,0x3e
  414b0c:	cdq    
  414b0d:	lock xchg ecx,eax
  414b0f:	and    dh,cl
  414b11:	popa   
  414b12:	repz add eax,0xe9bbd823
  414b18:	dec    ebp
  414b19:	and    bl,bl
  414b1b:	shl    eax,0x6
  414b1e:	jmp    0x2771:0x252a1fe8
  414b25:	test   DWORD PTR [ecx-0x2a],ecx
  414b28:	(bad)  
  414b29:	sbb    al,0x7a
  414b2b:	adc    al,0xec
  414b2d:	int    0x62
  414b2f:	fucomip st,st(0)
  414b31:	fs sbb cl,0x66
  414b35:	loopne 0x414ad3
  414b37:	and    bl,bh
  414b39:	dec    esp
  414b3a:	in     al,dx
  414b3b:	aad    0xb2
  414b3d:	pop    eax
  414b3e:	fisttp QWORD PTR [ecx-0x7b88d196]
  414b44:	and    BYTE PTR [ecx],dl
  414b46:	mov    ebx,DWORD PTR [ecx]
  414b48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b49:	aaa    
  414b4a:	retf   0x19f7
  414b4d:	xchg   BYTE PTR ds:0x2c6d2ceb,bh
  414b53:	std    
  414b54:	cmp    al,0x1f
  414b56:	js     0x414b72
  414b58:	cs jge 0x414b41
  414b5b:	lds    ecx,FWORD PTR [ebp+esi*2-0xd]
  414b5f:	pushf  
  414b60:	add    ecx,eax
  414b62:	jae    0x414b88
  414b64:	fidivr WORD PTR [eax+0x7f9095b7]
  414b6a:	clc    
  414b6b:	dec    ebp
  414b6c:	pop    edx
  414b6d:	dec    ebp
  414b6e:	shr    BYTE PTR [edi+0x113c07b3],1
  414b74:	sub    BYTE PTR [ebx+0x58b22fe5],bl
  414b7a:	outs   dx,BYTE PTR ds:[esi]
  414b7b:	pop    esp
  414b7c:	add    al,0xd7
  414b7e:	(bad)  
  414b7f:	out    0x4c,al
  414b81:	aad    0xef
  414b83:	in     al,0x66
  414b85:	rcr    al,cl
  414b87:	addr16 mov ecx,0x816a1674
  414b8d:	mov    ah,0xf5
  414b8f:	xor    eax,0x8fdfac3e
  414b94:	out    0x7e,al
  414b96:	loop   0x414b2a
  414b98:	repz rcr DWORD PTR [esi+0x27],cl
  414b9c:	jo     0x414b66
  414b9e:	ss sub al,0x6c
  414ba1:	dec    eax
  414ba2:	in     eax,dx
  414ba3:	test   BYTE PTR [ecx],0x41
  414ba6:	sub    DWORD PTR [ecx-0x9d9bbfc],ebx
  414bac:	(bad)  
  414bad:	sti    
  414bae:	into   
  414baf:	xchg   esp,eax
  414bb0:	mul    BYTE PTR [edi]
  414bb2:	cmp    DWORD PTR [edi+0x26024edd],edi
  414bb8:	mov    ds:0x9124194f,eax
  414bbd:	xlat   BYTE PTR ds:[ebx]
  414bbe:	and    al,0xaf
  414bc0:	stc    
  414bc1:	adc    al,0x4a
  414bc3:	pop    esi
  414bc4:	jecxz  0x414b72
  414bc6:	jp     0x414b6c
  414bc8:	bound  edx,QWORD PTR [ebx+0x63]
  414bcb:	cmp    eax,0x78a06264
  414bd0:	fld    DWORD PTR [eax+eiz*8+0x77]
  414bd4:	(bad)  
  414bd5:	xchg   ebx,eax
  414bd6:	mov    edx,0x2abc228f
  414bdb:	mov    edx,0x915c3d6
  414be0:	xor    dl,bh
  414be2:	iret   
  414be3:	jbe    0x414c08
  414be5:	add    esi,DWORD PTR [esp+edx*1-0x66113d6d]
  414bec:	cmp    ecx,DWORD PTR [ebx-0x6d]
  414bef:	pop    esp
  414bf0:	shl    BYTE PTR [ecx+ebx*1+0x25af6c63],cl
  414bf7:	fmul   DWORD PTR [eax+0x1a8b9c9f]
  414bfd:	in     al,dx
  414bfe:	icebp  
  414bff:	es pop esp
  414c01:	je     0x414c6e
  414c03:	cld    
  414c04:	pop    ss
  414c05:	push   ecx
  414c06:	mov    ah,BYTE PTR ds:0xfdf8898c
  414c0c:	js     0x414c1d
  414c0e:	xor    DWORD PTR [edi+0x1aa453e5],esi
  414c14:	inc    edx
  414c15:	inc    esi
  414c16:	push   edi
  414c17:	push   0xffffff9a
  414c19:	iret   
  414c1a:	xchg   esp,eax
  414c1b:	not    DWORD PTR [edx]
  414c1d:	or     edx,ebp
  414c1f:	sbb    al,BYTE PTR [esi+0x7a4d5f27]
  414c25:	inc    edi
  414c26:	xor    eax,0xf08f38a1
  414c2b:	mov    ss,WORD PTR [ebx]
  414c2d:	and    eax,DWORD PTR [eax]
  414c2f:	les    edi,FWORD PTR es:[edi-0x79]
  414c33:	pop    ss
  414c34:	popa   
  414c35:	xlat   BYTE PTR ds:[ebx]
  414c36:	clc    
  414c37:	inc    ebp
  414c38:	hlt    
  414c39:	ja     0x414c41
  414c3b:	mov    cl,0xd3
  414c3d:	jb     0x414c91
  414c3f:	dec    edx
  414c40:	retf   0x9faf
  414c43:	ins    DWORD PTR es:[edi],dx
  414c44:	in     al,0x2d
  414c46:	mov    ebp,0x41df19a9
  414c4b:	(bad)  
  414c4c:	repnz test BYTE PTR [edi-0xc8d5f7a],dl
  414c53:	inc    edi
  414c54:	jb     0x414be2
  414c56:	push   cs
  414c57:	mov    ch,0x19
  414c59:	mov    ds:0xd62ab458,eax
  414c5e:	xchg   esi,eax
  414c5f:	inc    ecx
  414c60:	push   ebp
  414c61:	loop   0x414be6
  414c63:	cmp    BYTE PTR [edx+0x26c2ee24],cl
  414c69:	hlt    
  414c6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c6b:	xor    al,al
  414c6d:	out    0xf6,al
  414c6f:	ja     0x414bfb
  414c71:	and    eax,0xc69aebc5
  414c76:	in     eax,dx
  414c77:	scas   al,BYTE PTR es:[edi]
  414c78:	mov    cl,0x19
  414c7a:	push   eax
  414c7b:	ss out dx,al
  414c7d:	jge    0x414c71
  414c7f:	add    bl,BYTE PTR [ebp+0x3e10da33]
  414c85:	and    DWORD PTR [edi],ecx
  414c87:	mov    BYTE PTR [edx-0x79bd46cd],al
  414c8d:	dec    ebp
  414c8e:	ja     0x414c86
  414c90:	mov    eax,ds:0x2d802877
  414c95:	sub    BYTE PTR [eax+0x58],0xef
  414c99:	jae    0x414d19
  414c9b:	cmp    ah,BYTE PTR [ebp+0x109912f0]
  414ca1:	mov    ecx,0x67011e06
  414ca6:	test   WORD PTR [edi-0x34],di
  414caa:	xor    eax,0xbc9976d5
  414caf:	aas    
  414cb0:	mov    cl,0xf9
  414cb2:	mov    dl,0x14
  414cb4:	push   edi
  414cb5:	push   eax
  414cb6:	lods   al,BYTE PTR ds:[esi]
  414cb7:	mov    ebp,0xa4e11bea
  414cbc:	adc    ebp,DWORD PTR [eax+esi*1+0x7ed6d9a3]
  414cc3:	add    ah,BYTE PTR [edi+0x4a]
  414cc6:	cwde   
  414cc7:	xor    eax,0x7227018
  414ccc:	push   ds
  414ccd:	jo     0x414cad
  414ccf:	xlat   BYTE PTR ds:[ebx]
  414cd0:	test   ebp,eax
  414cd2:	mov    ah,0x45
  414cd4:	(bad)  
  414cd5:	mov    dh,0x42
  414cd7:	std    
  414cd8:	scas   al,BYTE PTR es:[edi]
  414cd9:	ja     0xd507fb41
  414cdf:	pop    es
  414ce0:	or     BYTE PTR [edx+0x32],dh
  414ce3:	loope  0x414cc7
  414ce5:	pop    edi
  414ce6:	aaa    
  414ce7:	push   0x67c91f05
  414cec:	pop    ebx
  414ced:	mov    DWORD PTR [edx],ebx
  414cef:	scas   al,BYTE PTR es:[edi]
  414cf0:	push   es
  414cf1:	add    al,0x6
  414cf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cf4:	pop    ebp
  414cf5:	xchg   esi,eax
  414cf6:	sbb    al,0xe4
  414cf8:	outs   dx,DWORD PTR ds:[esi]
  414cf9:	sbb    edi,DWORD PTR [eax+0x441080c4]
  414cff:	or     ah,BYTE PTR [edi+0x3]
  414d02:	fwait
  414d03:	xchg   DWORD PTR [ecx-0x48dc44fb],edi
  414d09:	fild   QWORD PTR [ecx+edi*2-0xec1f432]
  414d10:	adc    al,BYTE PTR [eax]
  414d12:	leave  
  414d13:	dec    edx
  414d14:	xchg   edi,eax
  414d15:	(bad)  
  414d16:	aam    0x6d
  414d18:	das    
  414d19:	in     al,dx
  414d1a:	xchg   ecx,eax
  414d1b:	sti    
  414d1c:	adc    al,0x96
  414d1e:	xchg   edi,eax
  414d1f:	mov    esi,0xcdcab101
  414d24:	fimul  DWORD PTR [ebp-0x1a]
  414d27:	or     al,bl
  414d29:	xchg   DWORD PTR [edx-0x20],esp
  414d2c:	xchg   edx,eax
  414d2d:	jmp    0xf20d:0xaf24220c
  414d34:	mov    esi,gs
  414d36:	mov    eax,ds:0xb41783e6
  414d3b:	fist   WORD PTR [ebp-0x6e]
  414d3e:	jmp    ebx
  414d40:	sub    ebx,eax
  414d42:	ror    BYTE PTR [ebx+ebx*8-0x5f],1
  414d46:	aaa    
  414d47:	add    DWORD PTR [ebp+edx*2-0x1d],esi
  414d4b:	cmp    al,0xb6
  414d4d:	retf   
  414d4e:	cld    
  414d4f:	sbb    eax,0xa5e15a03
  414d54:	arpl   WORD PTR [eax],dx
  414d56:	xchg   ecx,eax
  414d57:	jecxz  0x414db0
  414d59:	cmp    ecx,DWORD PTR [edx+0x43614218]
  414d5f:	cmc    
  414d60:	jno    0x414d40
  414d62:	fs push esi
  414d64:	scas   eax,DWORD PTR es:[edi]
  414d65:	pop    esi
  414d66:	dec    edi
  414d67:	les    esp,FWORD PTR [edx+0xb]
  414d6a:	ss mov cl,0xdc
  414d6d:	pushf  
  414d6e:	fdiv   QWORD PTR [esi-0x57]
  414d71:	mov    edi,0x97f9a81c
  414d76:	in     al,0xba
  414d78:	inc    esp
  414d79:	pop    esi
  414d7a:	shl    DWORD PTR [ebx+0x2],1
  414d7d:	add    al,0xea
  414d7f:	(bad)  
  414d80:	fimul  WORD PTR [edx+0x78]
  414d83:	dec    ecx
  414d84:	mov    fs,WORD PTR [esi+0x1c4ffac3]
  414d8a:	inc    esp
  414d8b:	cmp    edi,edi
  414d8d:	add    BYTE PTR [ecx+0x128bafb3],cl
  414d93:	jp     0x414d6c
  414d95:	mov    esp,0xcd46fc84
  414d9a:	repnz dec ebp
  414d9c:	(bad)  
  414d9d:	xor    ecx,edx
  414d9f:	adc    ah,ah
  414da1:	shl    BYTE PTR [ecx+0x65],cl
  414da4:	push   cs
  414da5:	pop    esp
  414da6:	fsub   QWORD PTR [ebp-0x50]
  414da9:	mov    ch,0x5
  414dab:	mov    ebp,0x1b412608
  414db0:	cdq    
  414db1:	mov    dh,0x3d
  414db3:	and    BYTE PTR [edi-0xe],al
  414db6:	mov    ?,WORD PTR [esi+eiz*4-0x2d]
  414dba:	dec    esi
  414dbb:	adc    dh,bl
  414dbd:	pop    esi
  414dbe:	pop    ds
  414dbf:	es pop ds
  414dc1:	pop    esi
  414dc2:	sahf   
  414dc3:	pusha  
  414dc4:	jo     0x414da2
  414dc6:	xchg   DWORD PTR [eax+eiz*8],esi
  414dc9:	sbb    esp,DWORD PTR [edi+edx*8+0x70bc736d]
  414dd0:	and    BYTE PTR [eax+0x1d22ad6d],ah
  414dd6:	ror    DWORD PTR [ecx+0x4b],cl
  414dd9:	ins    DWORD PTR es:[edi],dx
  414dda:	lock mov ebp,0xc569ba1d
  414de0:	mov    BYTE PTR [ebx+eax*1+0x4e9cada7],dh
  414de7:	mov    edi,0x2f678210
  414dec:	ds ror cl,0x31
  414df0:	(bad)  
  414df2:	fwait
  414df3:	jno    0x414d82
  414df5:	xchg   ecx,eax
  414df6:	shl    eax,0xd3
  414df9:	das    
  414dfa:	jbe    0x414d9b
  414dfc:	cld    
  414dfd:	imul   DWORD PTR [ebx]
  414dff:	arpl   WORD PTR [ecx+eiz*2-0x1199e361],bp
  414e06:	jg     0x414dad
  414e08:	mov    edx,0xb176b5cd
  414e0d:	popa   
  414e0e:	imul   esi,DWORD PTR [edx-0x2bdf4424],0x9d6e8f6e
  414e18:	aam    0x81
  414e1a:	ja     0x414e1b
  414e1c:	fdiv   QWORD PTR [edi]
  414e1e:	xor    BYTE PTR [ecx],bh
  414e20:	or     al,0x13
  414e22:	mov    ah,0xc4
  414e24:	add    bl,BYTE PTR ds:0x81e3c193
  414e2a:	arpl   WORD PTR [ebp+0x63],si
  414e2d:	test   BYTE PTR [ebp+0x6ecc723e],0x73
  414e34:	jae    0x414e22
  414e36:	push   eax
  414e37:	push   edx
  414e38:	lea    ebp,[edi+0x45896728]
  414e3e:	jne    0x414e8d
  414e40:	fdiv   DWORD PTR [esi-0x42]
  414e43:	out    dx,eax
  414e44:	and    eax,0xae1f0bd8
  414e49:	sahf   
  414e4a:	loopne 0x414ebd
  414e4c:	icebp  
  414e4d:	add    esp,DWORD PTR [esi+0x28fa43b7]
  414e53:	out    0x7c,al
  414e55:	loope  0x414e57
  414e57:	and    cl,ch
  414e59:	dec    esi
  414e5a:	mov    ds:0xba3be05d,al
  414e5f:	jl     0x414e62
  414e61:	xchg   edx,eax
  414e62:	pop    esi
  414e63:	and    dh,BYTE PTR [ebp+0x4cf22438]
  414e69:	add    dl,BYTE PTR [ebx]
  414e6b:	cwde   
  414e6c:	(bad)  
  414e6d:	nop
  414e6e:	mov    edi,0xb3a39461
  414e73:	sbb    ebx,DWORD PTR [esi]
  414e75:	cmp    BYTE PTR [edx+ecx*4-0x79],0xe4
  414e7a:	fisub  WORD PTR [ebx+0x39f41fb4]
  414e80:	mov    ah,0xa5
  414e82:	and    eax,0xcec45444
  414e87:	imul   ebp,DWORD PTR [edi-0x2b2ab1fa],0x3ac1da17
  414e91:	(bad)
  414e94:	adc    ecx,DWORD PTR [edi]
  414e96:	sbb    eax,0x907f71f5
  414e9b:	lds    ebp,FWORD PTR [edx-0x5d0330c4]
  414ea1:	scas   al,BYTE PTR es:[edi]
  414ea2:	adc    BYTE PTR [ebx+0x5ecd5f3f],bl
  414ea8:	xor    BYTE PTR [ecx],cl
  414eaa:	sub    ebx,edx
  414eac:	xchg   edi,eax
  414ead:	repz xor ebx,DWORD PTR [ebp+0x3d03d7fb]
  414eb4:	xchg   ebx,eax
  414eb5:	es or  al,0x7d
  414eb8:	ss mov edx,0xffc1908a
  414ebe:	lds    ebx,FWORD PTR [eax+0x21]
  414ec1:	jnp    0x414eb6
  414ec3:	pop    edi
  414ec4:	repz xor BYTE PTR [edx+0x5],ch
  414ec8:	outs   dx,BYTE PTR ds:[esi]
  414ec9:	call   0xec3d362e
  414ece:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ecf:	sub    al,0x91
  414ed1:	sub    BYTE PTR [edi+0x32],ch
  414ed4:	add    ebx,edi
  414ed6:	ret    
  414ed7:	xchg   ebx,eax
  414ed8:	inc    ecx
  414ed9:	jmp    0x414efb
  414edb:	fisttp DWORD PTR [ebp+0x1b]
  414ede:	xor    al,bh
  414ee0:	sbb    esi,DWORD PTR [edx+0x13d30982]
  414ee6:	ins    DWORD PTR es:[edi],dx
  414ee7:	sbb    bl,BYTE PTR [ebx]
  414ee9:	js     0x414ec7
  414eeb:	xlat   BYTE PTR ds:[ebx]
  414eec:	inc    edx
  414eed:	out    0xd8,eax
  414eef:	push   edi
  414ef0:	pop    edx
  414ef1:	das    
  414ef2:	lahf   
  414ef3:	mov    cl,0x6a
  414ef5:	imul   ebp,DWORD PTR [ebx],0xffffff8c
  414ef8:	fcom   DWORD PTR [esi-0x20]
  414efb:	test   eax,0x198c0576
  414f00:	imul   edi,DWORD PTR [edx-0x74db9c34],0x2cf5a2bc
  414f0a:	mov    cl,0x85
  414f0c:	into   
  414f0d:	ins    DWORD PTR es:[edi],dx
  414f0e:	mov    al,0x2b
  414f10:	inc    esi
  414f11:	add    BYTE PTR [eax+0x6a77f285],bh
  414f17:	jg     0x414f0d
  414f19:	cmp    eax,0x308a3ba5
  414f1e:	fnstenvw [edi+ebx*2]
  414f22:	pop    ebx
  414f23:	ins    BYTE PTR es:[edi],dx
  414f24:	lds    edx,FWORD PTR [ebx+0x29ba6b68]
  414f2a:	cmp    eax,0x26ba3ba6
  414f2f:	mov    ebp,edx
  414f31:	add    BYTE PTR [edx+eiz*8+0x28],ah
  414f35:	fwait
  414f36:	adc    al,0xba
  414f38:	pop    edi
  414f39:	in     al,dx
  414f3a:	push   edi
  414f3b:	fstp   DWORD PTR [edx]
  414f3d:	inc    edi
  414f3e:	xchg   ebp,eax
  414f3f:	es jb  0x414f79
  414f42:	sahf   
  414f43:	inc    edx
  414f44:	fmul   DWORD PTR [edx+0x206f41ba]
  414f4a:	jns    0x414ed8
  414f4c:	addr16 (bad) 
  414f4e:	rcr    esi,0x4e
  414f51:	xchg   edi,eax
  414f52:	call   0xb7903f06
  414f57:	mov    edx,0x8d412ffd
  414f5c:	xor    DWORD PTR [ecx-0x13944e95],ebx
  414f62:	js     0x414fda
  414f64:	icebp  
  414f65:	shr    bh,cl
  414f67:	cmp    BYTE PTR [ebp+0x7fd73c47],0xa8
  414f6e:	mov    ecx,0x145ee331
  414f73:	fsub   st(3),st
  414f75:	repnz mov eax,ds:0x51b7ddaf
  414f7b:	mov    al,ds:0x7c7432f1
  414f80:	mov    ecx,0x1c1f2ca4
  414f85:	enter  0x6793,0x7
  414f89:	aad    0x9b
  414f8b:	(bad)  
  414f8c:	in     al,dx
  414f8d:	xor    dl,BYTE PTR [edi]
  414f8f:	pop    edi
  414f90:	add    ebx,DWORD PTR [ebp+0x2b]
  414f93:	push   ss
  414f94:	sub    esp,DWORD PTR [esi]
  414f96:	lods   al,BYTE PTR ds:[esi]
  414f97:	pop    esi
  414f98:	cmp    al,0x40
  414f9a:	adc    BYTE PTR [eax],dl
  414f9c:	(bad)  
  414f9d:	sbb    DWORD PTR [eax+0x7a],ebp
  414fa0:	cmp    DWORD PTR [edi+0x4d1efa61],esi
  414fa6:	hlt    
  414fa7:	mov    ch,0xca
  414fa9:	ss cmp eax,0x5a054549
  414faf:	test   DWORD PTR [eax-0x533d9ef2],ebp
  414fb5:	das    
  414fb6:	ret    
  414fb7:	outs   dx,BYTE PTR ds:[esi]
  414fb8:	mov    dl,BYTE PTR [ecx-0x8]
  414fbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fbc:	and    DWORD PTR [edx+0x3cae0ac3],ecx
  414fc2:	dec    ebx
  414fc3:	mov    al,ds:0x2c3bfe97
  414fc8:	mov    al,ds:0xa44dccdf
  414fcd:	cmp    edx,0xc51dee3e
  414fd3:	and    cl,dh
  414fd5:	push   0x48
  414fd7:	into   
  414fd8:	rol    DWORD PTR [ecx],1
  414fda:	retf   
  414fdb:	ins    BYTE PTR es:[edi],dx
  414fdc:	out    dx,al
  414fdd:	fisttp WORD PTR [ecx+0x7070e0da]
  414fe3:	std    
  414fe4:	mov    ebx,DWORD PTR [edi+0x6f862b95]
  414fea:	inc    ebp
  414feb:	aas    
  414fec:	mov    WORD PTR gs:[edi*4+0x3a8e6536],?
  414ff4:	pushf  
  414ff5:	mov    bl,0xe5
  414ff7:	icebp  
  414ff8:	cli    
  414ff9:	ror    BYTE PTR [esi],cl
  414ffb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ffc:	xchg   esi,eax
  414ffd:	out    0xcd,eax
  414fff:	mov    esi,0x800228f6
  415004:	jo     0x415078
  415006:	or     eax,0xef54d7a8
  41500b:	push   eax
  41500c:	test   al,0x9b
  41500e:	call   0x8c28adae
  415013:	shl    DWORD PTR [edx+0x4c],0xbf
  415017:	clc    
  415018:	xchg   esp,eax
  415019:	(bad)  
  41501a:	jge    0x415036
  41501c:	dec    edi
  41501d:	retf   0x238d
  415020:	loope  0x414ffd
  415022:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415023:	mov    esi,0x15f3a6c6
  415028:	hlt    
  415029:	dec    edx
  41502a:	jno    0x415062
  41502c:	inc    BYTE PTR [ebx+0x28]
  41502f:	pusha  
  415030:	std    
  415031:	ror    DWORD PTR [esi+0x2a5e602],0x46
  415038:	mov    al,ds:0x16314a28
  41503d:	fst    DWORD PTR [eax+eax*8]
  415040:	ss dec esp
  415042:	and    cl,BYTE PTR [ebx-0x48]
  415045:	cmp    DWORD PTR [edi+ebp*2-0x6e],edi
  415049:	int    0x97
  41504b:	outs   dx,BYTE PTR ds:[esi]
  41504c:	xchg   BYTE PTR [ebx],ch
  41504e:	xor    eax,0xe95816f4
  415053:	xchg   ebx,eax
  415054:	test   al,0x9e
  415056:	mov    WORD PTR [ebx+0x6590c3e4],ds
  41505c:	cmp    BYTE PTR [esi+0x2e1297e4],dl
  415062:	leave  
  415063:	inc    eax
  415064:	shl    DWORD PTR [edx],cl
  415066:	fmul   DWORD PTR gs:[ebp+0x13]
  41506a:	repz push ds
  41506c:	nop
  41506d:	cmp    ecx,ebx
  41506f:	mov    cl,0xa4
  415071:	xchg   esp,eax
  415072:	xchg   cl,ch
  415074:	out    dx,al
  415075:	and    dh,ch
  415077:	jbe    0x41505e
  415079:	(bad)  
  41507a:	in     al,0x9c
  41507c:	mov    BYTE PTR [edi+0xa],bl
  41507f:	cmp    eax,0xbab232df
  415084:	mov    BYTE PTR [eax-0x16],ah
  415087:	mov    ds:0x99fe527f,al
  41508c:	jl     0x41503f
  41508e:	rol    DWORD PTR [esi],0x22
  415091:	ins    DWORD PTR es:[edi],dx
  415092:	cmp    ecx,DWORD PTR [esi-0x7f]
  415095:	mov    bl,0xcc
  415097:	out    0x8e,al
  415099:	and    bh,dl
  41509b:	fcomp  QWORD PTR [ebx]
  41509d:	pop    edx
  41509e:	(bad)  
  41509f:	out    dx,eax
  4150a0:	mov    al,ds:0x9847dacc
  4150a5:	repnz mov ecx,0x53dcf061
  4150ab:	psrlw  mm7,QWORD PTR [edx+esi*4-0x58]
  4150b0:	mov    DWORD PTR [esi+0x9],esi
  4150b3:	dec    dh
  4150b5:	push   es
  4150b6:	mov    ch,0xf5
  4150b8:	cs cmc 
  4150ba:	ror    DWORD PTR [ebp+0x58c59dc4],0x7d
  4150c1:	xor    DWORD PTR [edi+eax*8],0x34
  4150c5:	add    DWORD PTR [edx+ebx*2+0x35526d2b],edi
  4150cc:	mov    esi,0xe6d4479a
  4150d1:	int    0xda
  4150d3:	addr16 xchg ebx,eax
  4150d5:	daa    
  4150d6:	xor    al,0xdb
  4150d8:	jp     0x415073
  4150da:	ret    
  4150db:	inc    bh
  4150dd:	mov    ah,0xc1
  4150df:	loop   0x4150bb
  4150e1:	mov    al,0x3b
  4150e3:	cs dec ecx
  4150e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150e6:	sub    bl,cl
  4150e8:	cld    
  4150e9:	push   ebp
  4150ea:	(bad)  
  4150eb:	jmp    0x11a1:0x96d2f622
  4150f2:	in     al,0xad
  4150f4:	adc    bl,ah
  4150f6:	add    BYTE PTR [edx+0x4b],0xc0
  4150fa:	outs   dx,DWORD PTR ds:[esi]
  4150fb:	cmc    
  4150fc:	push   ds
  4150fd:	jb     0x415080
  4150ff:	cmp    BYTE PTR [esi],dh
  415101:	iret   
  415102:	aaa    
  415103:	js     0x4150d9
  415105:	mov    dh,0x71
  415107:	(bad)  
  415108:	jmp    0xe90e1068
  41510d:	adc    eax,0x40d11056
  415112:	mov    esp,0x4de15034
  415117:	xchg   ch,dh
  415119:	jmp    0x1a45:0xf47814f
  415120:	out    dx,al
  415121:	fimul  DWORD PTR [edi+0x6f5bad7d]
  415127:	stos   DWORD PTR es:[edi],eax
  415128:	mov    BYTE PTR [ebx],ch
  41512a:	push   esi
  41512b:	arpl   WORD PTR es:[edx+0x77],bx
  41512f:	add    ebx,DWORD PTR [ebx+0x7a45b6fc]
  415135:	push   ebx
  415136:	popa   
  415137:	jbe    0x4151b7
  415139:	test   eax,0xd239c472
  41513e:	push   ecx
  41513f:	mov    al,0x65
  415141:	add    cl,bl
  415143:	xor    al,0xf4
  415145:	cs inc esp
  415147:	ret    0x9d0
  41514a:	mov    cl,BYTE PTR [ebx]
  41514c:	sbb    DWORD PTR [eax+0x39],eax
  41514f:	(bad)  
  415150:	jnp    0x41513b
  415152:	mov    cl,0xca
  415154:	push   ss
  415155:	and    eax,0x53f7d66
  41515a:	dec    edi
  41515b:	mov    bh,0xb2
  41515d:	lods   eax,DWORD PTR ds:[esi]
  41515e:	out    0xb7,eax
  415160:	push   esp
  415161:	pop    ecx
  415162:	in     al,0xed
  415164:	jge    0x415138
  415166:	scas   eax,DWORD PTR es:[edi]
  415167:	repz push 0xffffff8d
  41516a:	out    0x4e,eax
  41516c:	(bad)  
  41516d:	aam    0x1e
  41516f:	sbb    ebp,DWORD PTR [esi-0x44]
  415172:	dec    ecx
  415173:	jae    0x4150fb
  415175:	sahf   
  415176:	mov    cl,0xf2
  415178:	inc    esp
  415179:	pop    edx
  41517a:	and    eax,0x81fa00c7
  41517f:	addr16 mov edi,0x5c78b7fa
  415185:	dec    edx
  415186:	es retf 0x4a5c
  41518a:	shl    BYTE PTR [edi-0xf8e7330],0xf
  415191:	je     0x4151f4
  415193:	add    dh,BYTE PTR [esi]
  415195:	sub    BYTE PTR [ebx+0x93d1fc9],ch
  41519b:	mov    DWORD PTR [ebp+0x7dce1707],edx
  4151a1:	inc    ecx
  4151a2:	add    esp,DWORD PTR [ebx+ecx*2+0x42]
  4151a6:	bound  esp,QWORD PTR [ebp+eiz*4-0x72]
  4151aa:	mov    cl,0x2d
  4151ac:	xchg   DWORD PTR [esi+0x4e5746ee],ecx
  4151b2:	pop    ebx
  4151b3:	sbb    al,0xbb
  4151b5:	fsubr  st,st(4)
  4151b7:	dec    ecx
  4151b8:	inc    eax
  4151b9:	mov    cl,0xdb
  4151bb:	ins    DWORD PTR es:[edi],dx
  4151bc:	clc    
  4151bd:	adc    BYTE PTR [eax],ch
  4151bf:	cmc    
  4151c0:	jmp    0x4eb3:0x3c43aef8
  4151c7:	mov    al,BYTE PTR [ebx]
  4151c9:	and    dl,dh
  4151cb:	std    
  4151cc:	retf   0x7770
  4151cf:	adc    esp,ebx
  4151d1:	(bad)  
  4151d2:	je     0x41517a
  4151d4:	les    ebp,FWORD PTR [ebx-0x5a]
  4151d7:	icebp  
  4151d8:	mov    edx,0xaff7590f
  4151dd:	or     edx,0xa
  4151e0:	mov    DWORD PTR [esi+0x657abc7b],ebp
  4151e6:	push   esi
  4151e7:	dec    edx
  4151e8:	sub    al,0xcb
  4151ea:	retf   0x9df1
  4151ed:	mov    dl,0x84
  4151ef:	ins    DWORD PTR es:[edi],dx
  4151f0:	xor    al,0xca
  4151f2:	ret    0x5ac9
  4151f5:	and    bh,ch
  4151f7:	pushf  
  4151f8:	pop    ebp
  4151f9:	mov    al,ds:0xf3fbdc39
  4151fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151ff:	ins    BYTE PTR es:[edi],dx
  415200:	mov    ah,0x70
  415202:	and    ah,bh
  415204:	enter  0xcdb5,0x57
  415208:	imul   edi,DWORD PTR [eax],0xeac47c1d
  41520e:	mov    esi,0xa4966e2f
  415213:	(bad)  
  415214:	pop    es
  415215:	pop    esp
  415216:	xor    esi,0xffffff8c
  415219:	xchg   ebx,eax
  41521a:	ret    0x7ea
  41521d:	adc    DWORD PTR [ebp-0x406a0d7a],0xffffff99
  415224:	out    0xc1,al
  415226:	mov    esi,0xfd18e3eb
  41522b:	inc    ebx
  41522c:	mov    ds:0x9a0ec056,eax
  415231:	jge    0x415267
  415233:	inc    ebp
  415234:	and    dl,BYTE PTR ds:0xf1511243
  41523a:	lods   eax,DWORD PTR ds:[esi]
  41523b:	call   0x6438c666
  415240:	imul   eax,ebx,0x24
  415243:	sub    bh,dh
  415245:	stos   BYTE PTR es:[edi],al
  415246:	rcr    BYTE PTR [ecx-0x49ba491b],1
  41524c:	jmp    0x41527f
  41524e:	ret    0x9329
  415251:	xchg   esp,eax
  415252:	fild   QWORD PTR [ebp+0x1e]
  415255:	stos   DWORD PTR es:[edi],eax
  415256:	jp     0x415255
  415258:	sahf   
  415259:	mov    edi,0xf01b917
  41525e:	stos   DWORD PTR es:[edi],eax
  41525f:	push   cs
  415260:	cmp    eax,DWORD PTR [edx-0x34]
  415263:	(bad)  
  415264:	mov    ebp,fs
  415266:	call   0x3c07:0x30c1a82f
  41526d:	pop    esi
  41526e:	mov    bl,0x90
  415270:	jno    0x4152c1
  415272:	add    BYTE PTR [esp+edi*2-0x18],bl
  415276:	cmp    al,0x3f
  415278:	retf   
  415279:	inc    ebx
  41527a:	inc    eax
  41527b:	popa   
  41527c:	in     eax,dx
  41527d:	push   0xffffff8f
  41527f:	xchg   edx,eax
  415280:	aam    0x21
  415282:	add    ah,ch
  415284:	jmp    0x12d4173e
  415289:	mov    edx,0x61b2be5c
  41528e:	xor    DWORD PTR [edx-0x32bd0a2e],edi
  415294:	or     DWORD PTR [ecx+0xa477301],esp
  41529a:	addps  xmm3,XMMWORD PTR [ecx+0x54]
  41529e:	loop   0x4152b3
  4152a0:	popf   
  4152a1:	das    
  4152a2:	mov    edx,0x8a75e3e9
  4152a7:	sub    ch,BYTE PTR [ecx]
  4152a9:	aad    0xc3
  4152ab:	leave  
  4152ac:	xchg   ebx,eax
  4152ad:	or     esp,DWORD PTR [ecx]
  4152af:	xchg   esi,eax
  4152b0:	mov    BYTE PTR [edi],bl
  4152b2:	mov    ds:0xf23255,al
  4152b7:	test   al,0x89
  4152b9:	mov    ds:0x8328be3f,al
  4152be:	shr    BYTE PTR [esi],cl
  4152c0:	aad    0xfa
  4152c2:	jecxz  0x4152e4
  4152c4:	push   eax
  4152c5:	shl    BYTE PTR [eax-0x56],1
  4152c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152c9:	push   ebx
  4152ca:	lods   al,BYTE PTR ds:[esi]
  4152cb:	(bad)  
  4152cc:	(bad)  
  4152cd:	and    DWORD PTR [edi+0x6],ecx
  4152d0:	inc    ecx
  4152d1:	out    dx,al
  4152d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152d3:	inc    esi
  4152d4:	mov    eax,ds:0x1776f488
  4152d9:	jmp    0x415357
  4152db:	daa    
  4152dc:	xor    esp,DWORD PTR [ebx+eiz*2+0x19f86d3d]
  4152e3:	inc    esp
  4152e4:	bound  edx,QWORD PTR [eax-0x74]
  4152e7:	mov    edx,0x728d4b1e
  4152ec:	dec    edi
  4152ed:	mov    bl,0x9f
  4152ef:	fdivrp st(5),st
  4152f1:	jns    0x4152d6
  4152f3:	mov    esi,ebx
  4152f5:	push   DWORD PTR [ebx]
  4152f7:	push   cs
  4152f8:	sub    al,0xe0
  4152fa:	ins    DWORD PTR es:[edi],dx
  4152fb:	add    ebx,ebp
  4152fd:	cmp    eax,0x26192fd0
  415302:	and    BYTE PTR [edi],0xc8
  415305:	mov    dl,0x25
  415307:	push   edx
  415308:	push   es
  415309:	sbb    eax,0xd28fb83c
  41530e:	gs push esi
  415310:	mov    ds:0xbc037bc0,al
  415315:	push   DWORD PTR [esi-0x15]
  415318:	aas    
  415319:	xor    ebx,DWORD PTR [esi+0x4]
  41531c:	ins    BYTE PTR es:[edi],dx
  41531d:	scas   eax,DWORD PTR es:[edi]
  41531e:	mov    ds:0xcbce95ac,eax
  415323:	mov    bl,0x7f
  415325:	jae    0x415349
  415327:	push   eax
  415328:	call   0x23309946
  41532d:	je     0x4152d0
  41532f:	or     DWORD PTR [eax+0x79],esp
  415332:	push   edx
  415333:	pop    ecx
  415334:	mov    BYTE PTR [ebx-0x58a9c6d0],ch
  41533a:	mov    ebx,DWORD PTR [ebx-0x66858c3d]
  415340:	cmp    DWORD PTR [eax-0xf08454],ecx
  415346:	pop    esp
  415347:	fs ss mov edi,0xab3af4d2
  41534e:	sub    DWORD PTR [ebx],ebp
  415350:	frstor ds:0xb22f6938
  415356:	std    
  415357:	popa   
  415358:	xor    ch,BYTE PTR [esi]
  41535a:	lea    edi,[ecx]
  41535c:	es dec ebp
  41535e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41535f:	jo     0x4153d8
  415361:	cs xor al,0x73
  415364:	pushf  
  415365:	lods   eax,DWORD PTR ds:[esi]
  415366:	xchg   edi,eax
  415367:	mov    ecx,0x7be97d1e
  41536c:	and    ebx,DWORD PTR [ebp-0x5b72d038]
  415372:	jmp    0x415320
  415374:	mov    ebx,0xdaafadc5
  415379:	js     0x415355
  41537b:	leave  
  41537c:	fsubrp st(2),st
  41537e:	imul   edi,DWORD PTR [esi+esi*2],0x54
  415382:	fdivrp st(6),st
  415384:	in     al,dx
  415385:	nop
  415386:	mov    ebp,0x69126043
  41538b:	jnp    0x41530f
  41538d:	frstor [edi]
  41538f:	mov    ebp,0x5f6d0812
  415394:	cmp    eax,0x3ea84b8
  415399:	sub    dl,BYTE PTR [eax]
  41539b:	and    esi,DWORD PTR [ebx]
  41539d:	into   
  41539e:	inc    BYTE PTR [edx]
  4153a0:	lods   al,BYTE PTR ds:[esi]
  4153a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153a2:	loopne 0x415423
  4153a4:	popa   
  4153a5:	push   esp
  4153a6:	lahf   
  4153a7:	mov    ebp,0xb86c5ceb
  4153ac:	mov    ecx,0x3d184e4c
  4153b1:	mov    bh,0x31
  4153b3:	jle    0x415369
  4153b5:	fistp  DWORD PTR ds:0xdc88adaa
  4153bb:	xchg   esi,eax
  4153bc:	pop    edx
  4153bd:	cdq    
  4153be:	sbb    DWORD PTR [ecx-0x30],eax
  4153c1:	(bad)  
  4153c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153c3:	(bad)  
  4153c4:	mov    dl,0xa6
  4153c6:	mov    BYTE PTR [ecx],ah
  4153c8:	and    eax,0xa4c6c276
  4153cd:	retf   0xab47
  4153d0:	mov    eax,ds:0xc72d99a5
  4153d5:	pop    ebx
  4153d6:	fldcw  WORD PTR [esi+0x47]
  4153d9:	(bad)  
  4153da:	jp     0x4153c3
  4153dc:	loopne 0x41542b
  4153de:	icebp  
  4153df:	loopne 0x4153c3
  4153e1:	jae    0x415383
  4153e3:	jns    0x415367
  4153e5:	add    esi,DWORD PTR [esi-0x24bc146f]
  4153eb:	hlt    
  4153ec:	retf   
  4153ed:	push   edi
  4153ee:	sub    DWORD PTR [eax+0x33],esi
  4153f1:	sbb    al,BYTE PTR [ebp-0x342d21e1]
  4153f7:	rol    DWORD PTR [ebp-0x46f5e5ed],1
  4153fd:	push   edi
  4153fe:	aam    0x74
  415400:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415401:	push   ebp
  415402:	rol    WORD PTR [edi],cl
  415405:	test   eax,0x8cb97d54
  41540a:	adc    al,0x1d
  41540c:	cmp    eax,0xfccf18dc
  415411:	pop    ss
  415412:	mov    ds:0xc8edc0a2,al
  415417:	mov    ch,0x3c
  415419:	xchg   edi,eax
  41541a:	dec    edx
  41541b:	add    esp,DWORD PTR [esi+0x5c05d230]
  415421:	dec    ecx
  415422:	inc    edx
  415423:	(bad)  
  415424:	cld    
  415425:	arpl   WORD PTR [edi-0x721cb4aa],di
  41542b:	mov    bh,ch
  41542d:	mov    dh,0xf7
  41542f:	mov    eax,0xeb90ab44
  415434:	retf   0x4ab1
  415437:	ss fisttp QWORD PTR ds:0x44fa21b2
  41543f:	fstp   QWORD PTR [esi+edx*4]
  415442:	aaa    
  415443:	push   0x2be89f03
  415448:	inc    edx
  415449:	jl     0x4153eb
  41544b:	cwde   
  41544c:	repz and BYTE PTR [ebp-0x63],bh
  415450:	cmp    ch,BYTE PTR [eax]
  415452:	cmc    
  415453:	adc    al,0x8d
  415455:	(bad)  
  415456:	mov    cl,0xf9
  415458:	mov    ds:0xaed6cbe1,eax
  41545d:	and    ebp,DWORD PTR [esi-0x28063456]
  415463:	pop    edi
  415464:	inc    esi
  415465:	mov    edx,0x2f7f7bf0
  41546a:	jg     0x415481
  41546c:	(bad)  
  41546d:	mov    ch,BYTE PTR [ebx-0x2d]
  415470:	adc    BYTE PTR [edi],dl
  415472:	jle    0x41547e
  415474:	test   DWORD PTR [ebx],edx
  415476:	xchg   edi,eax
  415477:	ss loopne 0x4154a8
  41547a:	sbb    edx,DWORD PTR [ecx]
  41547c:	inc    ecx
  41547d:	(bad)  
  41547e:	daa    
  41547f:	mov    eax,0x68773992
  415484:	mov    esi,0xfc8f403d
  415489:	nop
  41548a:	and    bh,bh
  41548c:	adc    al,0xdc
  41548e:	in     eax,0x7a
  415490:	leave  
  415491:	pop    ebp
  415492:	fist   DWORD PTR [edx-0x1072743d]
  415498:	bound  eax,QWORD PTR [esi]
  41549a:	fisttp DWORD PTR [ebx+0x15bde244]
  4154a0:	jb     0x41546f
  4154a2:	add    BYTE PTR [edx+0x4d00a4bd],0xa7
  4154a9:	cmc    
  4154aa:	loop   0x415513
  4154ac:	loop   0x415440
  4154ae:	clc    
  4154af:	sub    DWORD PTR ds:0x922d390d,ebx
  4154b5:	xchg   edi,eax
  4154b6:	jbe    0x415462
  4154b8:	sub    eax,0x60679b43
  4154bd:	(bad)  
  4154bf:	pop    esi
  4154c0:	dec    ebx
  4154c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154c2:	scas   al,BYTE PTR es:[edi]
  4154c3:	daa    
  4154c4:	mov    esp,0xa2032b0e
  4154c9:	mov    edx,cs
  4154cb:	lock data16 jge 0x4154ba
  4154cf:	add    DWORD PTR [eax+0x6f],edi
  4154d2:	pop    eax
  4154d3:	in     al,dx
  4154d4:	jge    0x4154d8
  4154d6:	jge    0x415546
  4154d8:	ds xchg esi,eax
  4154da:	xor    al,0xaf
  4154dc:	sub    BYTE PTR [ebx],cl
  4154de:	ins    DWORD PTR es:[edi],dx
  4154df:	in     eax,dx
  4154e0:	xlat   BYTE PTR ds:[ebx]
  4154e1:	cwde   
  4154e2:	xchg   ebp,eax
  4154e3:	fxch   st(0)
  4154e5:	loop   0x41547c
  4154e7:	scas   eax,DWORD PTR es:[edi]
  4154e8:	push   ss
  4154e9:	out    0xd2,al
  4154eb:	adc    edi,eax
  4154ed:	(bad)
  4154f0:	imul   BYTE PTR [edx+0x4b859f2]
  4154f6:	push   ebp
  4154f7:	and    eax,0x4c391208
  4154fc:	jge    0x4154b6
  4154fe:	mov    dh,0x50
  415500:	mov    gs,esi
  415502:	mov    bh,dl
  415504:	mov    bl,0x45
  415506:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415507:	fldenv [edx-0x7f]
  41550a:	mov    DWORD PTR [ebx-0x241dc4ab],ecx
  415510:	cli    
  415511:	mov    BYTE PTR [ebx+0xf7d5144],al
  415517:	outs   dx,BYTE PTR ds:[esi]
  415518:	mov    ch,0xfd
  41551a:	rcl    DWORD PTR [ebp-0x7230f82f],1
  415520:	mov    ecx,esi
  415522:	sub    BYTE PTR [ebx-0x13],cl
  415525:	mov    es,WORD PTR [edi-0x16]
  415528:	adc    ebx,DWORD PTR [ebx+edi*1]
  41552b:	sbb    cl,al
  41552d:	pop    ss
  41552e:	ins    BYTE PTR es:[edi],dx
  41552f:	jns    0x415533
  415531:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415532:	pop    ebx
  415533:	or     DWORD PTR [esi],esp
  415535:	lds    ecx,FWORD PTR [eax-0x3b2eec7b]
  41553b:	imul   edx,DWORD PTR [ebx+eax*1],0xffffffe9
  41553f:	in     al,dx
  415540:	lds    esi,FWORD PTR [edi]
  415542:	data16 cmp BYTE PTR [esi+edx*4+0xa34b6a8],bh
  41554a:	sbb    DWORD PTR [esi-0x1a],eax
  41554d:	pusha  
  41554e:	lds    ebp,FWORD PTR [eax-0x74fe4446]
  415554:	ror    edi,cl
  415556:	sbb    DWORD PTR ds:0x4ed4d940,edx
  41555c:	or     ah,BYTE PTR [ebx-0xd]
  41555f:	(bad)  
  415561:	adc    BYTE PTR [ecx+0x22db94da],bl
  415567:	aas    
  415568:	dec    ebx
  415569:	sub    al,0xf1
  41556b:	mov    esp,ebx
  41556d:	adc    esp,esp
  41556f:	sub    BYTE PTR [ebp-0x20],cl
  415572:	clc    
  415573:	repnz test BYTE PTR [ebp-0x4f],cl
  415577:	or     al,0xfb
  415579:	test   al,0x5a
  41557b:	out    dx,eax
  41557c:	outs   dx,BYTE PTR ds:[esi]
  41557d:	test   eax,0x9eb6e2b9
  415582:	mov    eax,0x2891056f
  415587:	int    0x7c
  415589:	ja     0x415608
  41558b:	stos   BYTE PTR es:[edi],al
  41558c:	add    DWORD PTR cs:[eax+0x4653daef],edi
  415593:	xor    al,0xfa
  415595:	dec    edi
  415596:	scas   al,BYTE PTR es:[edi]
  415597:	inc    esp
  415598:	sub    edx,DWORD PTR [ecx]
  41559a:	jmp    0xcc213c58
  41559f:	popf   
  4155a0:	ss push eax
  4155a2:	xchg   dl,dh
  4155a4:	das    
  4155a5:	scas   eax,DWORD PTR es:[edi]
  4155a6:	xor    BYTE PTR [edi+0xd],dl
  4155a9:	add    DWORD PTR [edi+0x54],ecx
  4155ac:	sub    al,0x67
  4155ae:	inc    esi
  4155af:	jno    0x415589
  4155b1:	pop    edi
  4155b2:	fidivr WORD PTR [ebx+0x82d5934]
  4155b8:	fisttp DWORD PTR [edi]
  4155ba:	mov    dl,0x9d
  4155bc:	out    0x6e,eax
  4155be:	inc    eax
  4155bf:	adc    DWORD PTR [ebx+0x49],esp
  4155c2:	sbb    al,0xb6
  4155c4:	sub    eax,0x438a5be3
  4155c9:	cmp    ah,dl
  4155cb:	inc    edx
  4155cc:	pop    esi
  4155cd:	mov    bh,0x0
  4155cf:	out    dx,eax
  4155d0:	pop    eax
  4155d1:	stc    
  4155d2:	pop    esp
  4155d3:	pop    ebx
  4155d4:	xor    BYTE PTR [edi-0xf4e71dc],ch
  4155da:	mov    ebp,DWORD PTR [edi+0x21]
  4155dd:	cld    
  4155de:	sti    
  4155df:	fld    QWORD PTR [esi]
  4155e1:	cmp    dl,BYTE PTR [eax+0x188b5c43]
  4155e7:	sub    eax,DWORD PTR [eax-0x77]
  4155ea:	test   dl,cl
  4155ec:	jb     0x4155fe
  4155ee:	data16 aaa 
  4155f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155f1:	jnp    0x415582
  4155f3:	test   BYTE PTR [ebp-0x37],ah
  4155f6:	jbe    0x4155da
  4155f8:	sub    eax,0xeb201307
  4155fd:	sbb    esp,DWORD PTR [ecx+0x6f]
  415600:	cdq    
  415601:	jmp    0x415640
  415603:	pop    eax
  415604:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415605:	mov    bl,0xf4
  415607:	iret   
  415608:	dec    ebx
  415609:	mov    al,0x4d
  41560b:	and    al,0x7
  41560d:	xor    edx,0xffffffac
  415610:	jo     0x415690
  415612:	icebp  
  415613:	scas   al,BYTE PTR es:[edi]
  415614:	jge    0x4155f9
  415616:	mov    ebx,0xe215eea
  41561b:	ss dec ebx
  41561d:	sub    DWORD PTR [eax-0x1a],0xfffffffd
  415621:	jo     0x4155de
  415623:	xchg   esi,eax
  415624:	fwait
  415625:	mov    edx,0x366dabc8
  41562a:	inc    ebx
  41562b:	(bad)  
  41562c:	sbb    DWORD PTR fs:[esi-0x100e579b],ebp
  415633:	inc    ebp
  415634:	sub    BYTE PTR [ebx-0x33],dh
  415637:	xchg   edx,eax
  415638:	lahf   
  415639:	xlat   BYTE PTR ds:[ebx]
  41563a:	out    dx,al
  41563b:	xchg   ebx,eax
  41563c:	mov    edx,0x76d27603
  415641:	mov    dh,0x61
  415643:	stc    
  415644:	pop    eax
  415645:	xchg   esi,eax
  415646:	xor    al,0xff
  415648:	imul   esp,esp,0x54ec88f4
  41564e:	dec    ebp
  41564f:	gs pop ss
  415651:	or     edx,DWORD PTR [edi*8-0x2d93b61f]
  415658:	idiv   BYTE PTR ds:0x82bbb5c0
  41565e:	je     0x41563e
  415660:	test   al,0x7b
  415662:	pop    ebp
  415663:	scas   eax,DWORD PTR es:[edi]
  415664:	repz jno 0x41562d
  415667:	pop    edi
  415668:	inc    edx
  415669:	add    bl,BYTE PTR [edx-0x55]
  41566c:	mov    ecx,0x36174fd9
  415671:	and    BYTE PTR [esp],dl
  415674:	mov    esi,DWORD PTR [ecx]
  415676:	out    0x3f,al
  415678:	xchg   dl,al
  41567a:	cmp    DWORD PTR [esp+eax*2],ecx
  41567d:	dec    ebx
  41567e:	cwde   
  41567f:	repz pop ss
  415681:	push   ss
  415682:	inc    eax
  415683:	add    esi,DWORD PTR [edi-0x3c]
  415686:	xor    BYTE PTR [edi+0x39],ch
  415689:	imul   edx,DWORD PTR [ecx+0x745548cc],0x5111ed40
  415693:	adc    BYTE PTR [ebx],0xa6
  415696:	int3   
  415697:	outs   dx,DWORD PTR ds:[esi]
  415698:	inc    esi
  415699:	ficom  DWORD PTR [edx+0x48]
  41569c:	jge    0x4156d7
  41569e:	ret    
  41569f:	xchg   esi,eax
  4156a0:	imul   ebp,DWORD PTR [ecx+0x2a],0xbca30d12
  4156a7:	xchg   edx,eax
  4156a8:	sbb    edx,esi
  4156aa:	hlt    
  4156ab:	pop    eax
  4156ac:	xchg   esi,eax
  4156ad:	(bad)  
  4156ae:	out    0xf5,al
  4156b0:	and    al,0xb
  4156b2:	js     0x415688
  4156b4:	mov    dh,0x1b
  4156b6:	fild   QWORD PTR [esi]
  4156b8:	out    0x95,al
  4156ba:	dec    esp
  4156bb:	push   eax
  4156bc:	stos   BYTE PTR es:[edi],al
  4156bd:	retf   
  4156be:	cmp    DWORD PTR [ebx-0x26],ebx
  4156c1:	fst    DWORD PTR [eax+0x4c]
  4156c4:	mov    bl,0xc6
  4156c6:	pop    ss
  4156c7:	pusha  
  4156c8:	sti    
  4156c9:	test   BYTE PTR [esi-0xeb95113],cl
  4156cf:	mov    ebp,0x40130578
  4156d4:	or     DWORD PTR [ebp-0x1bc1e41c],edi
  4156da:	sbb    eax,0x37a0aeb3
  4156df:	mov    al,ds:0x13f66cd1
  4156e4:	jmp    0x4156dd
  4156e6:	pop    edx
  4156e7:	add    DWORD PTR [ebx-0x2e6c675f],0x6f
  4156ee:	rcl    DWORD PTR [edx],cl
  4156f0:	pop    ebp
  4156f1:	fsubr  DWORD PTR [ebp+0x6c]
  4156f4:	dec    edi
  4156f5:	jg     0x4156ac
  4156f7:	pop    ds
  4156f8:	mov    edi,0x5d45e431
  4156fd:	(bad)  
  4156fe:	outs   dx,DWORD PTR ds:[esi]
  4156ff:	sahf   
  415700:	add    al,0x17
  415702:	sbb    eax,0x79260188
  415707:	jo     0x415707
  415709:	and    al,0x64
  41570b:	dec    edx
  41570c:	xchg   BYTE PTR [edi-0x5b37ba43],ah
  415712:	std    
  415713:	add    cl,BYTE PTR [eax+0x23e575e]
  415719:	mov    al,ds:0x860907cd
  41571e:	jle    0x415772
  415720:	add    dh,BYTE PTR [ecx+ecx*8-0x3156e455]
  415727:	test   eax,0x6cf3f968
  41572c:	out    dx,al
  41572d:	jmp    0x69ff:0x658af9b1
  415734:	pop    edi
  415735:	pop    ecx
  415736:	xor    bh,BYTE PTR [ebp-0x6e5d0fce]
  41573c:	lock nop
  41573e:	cli    
  41573f:	stos   BYTE PTR es:[edi],al
  415740:	cmp    al,0xa
  415742:	fidivr DWORD PTR [edx+0x33a7eaf9]
  415748:	ins    DWORD PTR es:[edi],dx
  415749:	push   ebx
  41574a:	and    al,0x1
  41574c:	leave  
  41574d:	dec    DWORD PTR [ebx-0xdd4b470]
  415753:	or     al,0x61
  415755:	fs xor al,0x0
  415758:	xor    edi,DWORD PTR [esi+0x57]
  41575b:	cmp    ebp,DWORD PTR [eax-0x54]
  41575e:	outs   dx,DWORD PTR ds:[esi]
  41575f:	sbb    esp,DWORD PTR [esi]
  415761:	(bad)  
  415762:	cwde   
  415763:	fistp  WORD PTR [esi+0x65]
  415766:	pop    ss
  415767:	(bad)  
  415769:	iret   
  41576a:	xchg   esi,eax
  41576b:	cwd    
  41576d:	dec    edi
  41576e:	mov    edx,0x84294b13
  415773:	enter  0x4740,0x4a
  415777:	sbb    bl,BYTE PTR [ecx-0x4c]
  41577a:	adc    ecx,edx
  41577c:	and    BYTE PTR [ecx-0x27],0x67
  415780:	or     BYTE PTR [esi-0x2458e524],0xf
  415787:	ret    0x875c
  41578a:	jmp    0x25ad:0x43c0e2eb
  415791:	test   DWORD PTR [ecx-0x12],edi
  415794:	inc    edi
  415795:	fisubr WORD PTR [eax-0x41]
  415798:	cmp    dl,dl
  41579a:	scas   eax,DWORD PTR es:[edi]
  41579b:	fwait
  41579c:	sbb    dl,cl
  41579e:	mov    eax,ds:0xa3d4593e
  4157a3:	jbe    0x41573c
  4157a5:	push   esp
  4157a6:	ficom  WORD PTR [ebx-0x6fe76af]
  4157ac:	hlt    
  4157ad:	xchg   esi,eax
  4157ae:	idiv   DWORD PTR es:[ebx+0x7a]
  4157b2:	cmp    al,dh
  4157b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157b5:	in     eax,0x73
  4157b7:	(bad)  
  4157b8:	daa    
  4157b9:	sub    DWORD PTR [ebx],ebx
  4157bb:	in     eax,0x4f
  4157bd:	dec    esi
  4157be:	mov    BYTE PTR [eax-0x2f],cl
  4157c1:	sbb    BYTE PTR [ecx],al
  4157c3:	rcl    DWORD PTR [ecx],1
  4157c5:	in     al,dx
  4157c6:	jmp    0x1b0b890b
  4157cb:	lods   al,BYTE PTR ds:[esi]
  4157cc:	add    ecx,DWORD PTR [edx-0x759f370a]
  4157d2:	test   eax,0x108ccd44
  4157d7:	and    dh,BYTE PTR [esi+edi*4+0x3f]
  4157db:	lods   al,BYTE PTR ds:[esi]
  4157dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157dd:	push   ebx
  4157de:	stos   DWORD PTR es:[edi],eax
  4157df:	jmp    0x73f5:0x5b8fa32c
  4157e6:	push   esp
  4157e7:	addr16 es loopne 0x415813
  4157eb:	push   es
  4157ec:	scas   eax,DWORD PTR es:[edi]
  4157ed:	cmp    DWORD PTR [ecx],0xfd17dd94
  4157f3:	loope  0x4157c0
  4157f5:	mov    edi,0xf3d0919f
  4157fa:	js     0x4157fa
  4157fc:	and    DWORD PTR [esp+eax*8+0x5e72d2e8],ebp
  415803:	outs   dx,DWORD PTR ds:[esi]
  415804:	cwde   
  415805:	sahf   
  415806:	or     al,0x50
  415808:	and    edx,0x5c3e484f
  41580e:	inc    edx
  41580f:	or     eax,0x306a7308
  415814:	in     al,0x4b
  415816:	mov    bh,0x9a
  415818:	jecxz  0x4157c7
  41581a:	push   eax
  41581b:	mov    ds:0xa51587cb,al
  415820:	pop    ss
  415821:	mov    BYTE PTR [edx],ah
  415823:	cs dec eax
  415825:	lds    edx,FWORD PTR [ebx]
  415827:	rcl    DWORD PTR [ebx+eax*4],0x6e
  41582b:	mov    eax,DWORD PTR [ecx]
  41582d:	loopne 0x415852
  41582f:	into   
  415830:	sahf   
  415831:	adc    BYTE PTR [eax+ebx*4+0x6237ea83],bh
  415838:	pop    esi
  415839:	mov    eax,ds:0xab7909e2
  41583e:	mov    esp,0x31f697be
  415843:	xchg   esp,eax
  415844:	mov    ebx,0xb2d744b3
  415849:	xchg   esp,eax
  41584a:	jne    0x41587b
  41584c:	sar    dh,0x83
  41584f:	jge    0x415841
  415851:	cmc    
  415852:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415853:	cdq    
  415854:	adc    DWORD PTR [ebp-0x6405ae02],eax
  41585a:	mov    BYTE PTR ds:0xad952516,dl
  415860:	push   edi
  415861:	out    dx,al
  415862:	mov    cl,ch
  415864:	sbb    eax,0x84f4d60f
  415869:	aam    0x84
  41586b:	cmp    edx,ebx
  41586d:	nop
  41586e:	lock add dl,BYTE PTR [ebp-0x70]
  415872:	add    al,BYTE PTR [esi+0x143482ec]
  415878:	xchg   ecx,eax
  415879:	shr    ch,cl
  41587b:	jmp    0x41589d
  41587d:	out    dx,eax
  41587e:	push   eax
  41587f:	adc    al,0xf1
  415881:	xchg   esp,eax
  415882:	mov    eax,0xf381ecb
  415887:	or     DWORD PTR [ebx],ebp
  415889:	sar    DWORD PTR [ebp+0x74826709],0xea
  415890:	xor    al,0x77
  415892:	inc    ecx
  415893:	xor    eax,0x3d5c3d4d
  415898:	mov    esi,0xfa240b4e
  41589d:	pop    ebx
  41589e:	ja     0x4158da
  4158a0:	das    
  4158a1:	fsub   st,st(3)
  4158a3:	jno    0x4158e1
  4158a5:	(bad)  
  4158a6:	and    al,0x5b
  4158a8:	push   ds
  4158a9:	mov    ds:0x9064206a,eax
  4158ae:	lock adc BYTE PTR [edx],0x55
  4158b2:	sub    ch,BYTE PTR [esi-0x60]
  4158b5:	cmp    eax,0x99c6cdc5
  4158ba:	dec    edi
  4158bb:	aad    0x18
  4158bd:	(bad)  
  4158be:	jge    0x415901
  4158c0:	and    eax,0xc5319bbb
  4158c5:	pop    ds
  4158c6:	test   DWORD PTR [ecx+0x5c],esp
  4158c9:	lea    eax,[edi-0x70522ac2]
  4158cf:	and    eax,0x293bb6a6
  4158d4:	outs   dx,BYTE PTR ds:[esi]
  4158d5:	popa   
  4158d6:	dec    ebp
  4158d7:	div    DWORD PTR [eax-0x73d1e967]
  4158dd:	stos   BYTE PTR es:[edi],al
  4158de:	and    ah,BYTE PTR [eax+ebx*2]
  4158e1:	inc    ebp
  4158e2:	repz xor DWORD PTR [edx],esi
  4158e5:	inc    ebp
  4158e6:	sub    eax,ecx
  4158e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158e9:	adc    ebp,ebp
  4158eb:	mov    esi,0x265de1b4
  4158f0:	aas    
  4158f1:	mov    ds:0x39ebdd76,eax
  4158f6:	and    eax,0x55ee245d
  4158fb:	jo     0x4158e6
  4158fd:	enter  0x1cf0,0x6
  415901:	rol    esp,cl
  415903:	xchg   ebx,eax
  415904:	ror    dl,0x73
  415907:	std    
  415908:	into   
  415909:	fistp  DWORD PTR [ebx-0x70]
  41590c:	daa    
  41590d:	cmc    
  41590e:	cli    
  41590f:	push   es
  415910:	sbb    eax,0x804bbb3a
  415915:	ins    BYTE PTR es:[edi],dx
  415916:	xor    BYTE PTR [edi-0x7e],0xaf
  41591a:	push   edx
  41591b:	jne    0x4158ac
  41591d:	pop    esp
  41591e:	dec    esp
  41591f:	ret    
  415920:	cwde   
  415921:	bound  eax,QWORD PTR [edi]
  415923:	std    
  415924:	call   0xadc64c4c
  415929:	xchg   BYTE PTR [ebx+0xa44591a],bl
  41592f:	adc    al,0x96
  415931:	inc    edx
  415932:	jg     0x415975
  415934:	(bad)  
  415935:	outs   dx,BYTE PTR ds:[esi]
  415936:	arpl   WORD PTR [ecx-0x39],dx
  415939:	out    dx,eax
  41593a:	cmp    ebp,DWORD PTR [eax+eiz*1+0x38285e08]
  415941:	retf   
  415942:	cmp    esp,DWORD PTR [ebx-0x12a30e9e]
  415948:	adc    eax,0x6ffd3a28
  41594d:	cli    
  41594e:	push   edi
  41594f:	sbb    esp,DWORD PTR [esi-0x248d415b]
  415955:	push   ecx
  415956:	jne    0x415960
  415958:	es cmp eax,0x4f22df50
  41595e:	jge    0x41599d
  415960:	pop    es
  415961:	inc    eax
  415962:	or     BYTE PTR ds:0x3719bcc,bl
  415968:	lahf   
  415969:	aas    
  41596a:	mov    ch,ah
  41596c:	aam    0x13
  41596e:	xor    DWORD PTR [edx],eax
  415970:	pop    eax
  415971:	adc    eax,0x723d2b44
  415976:	push   ds
  415977:	adc    eax,0x8193142e
  41597c:	pop    esi
  41597d:	enter  0x5607,0xa7
  415981:	push   0x24
  415983:	cmp    ecx,DWORD PTR [edx-0x6a9537f9]
  415989:	hlt    
  41598a:	and    dh,BYTE PTR [ecx-0x2]
  41598d:	sbb    dl,0x9d
  415990:	mov    dh,0xf9
  415992:	pushf  
  415993:	jae    0x415993
  415995:	in     eax,0xd1
  415997:	mov    bl,0xc4
  415999:	lods   al,BYTE PTR ds:[esi]
  41599a:	aas    
  41599b:	or     DWORD PTR cs:[esi-0x7d],esi
  41599f:	hlt    
  4159a0:	push   DWORD PTR [edx]
  4159a2:	pop    esp
  4159a3:	das    
  4159a4:	cmc    
  4159a5:	mov    ds:0x6945dbbd,eax
  4159aa:	inc    ecx
  4159ab:	mov    dl,0x54
  4159ad:	mov    ds:0xca275c3b,eax
  4159b2:	or     edi,0x6
  4159b5:	sub    BYTE PTR [ecx+edi*1+0x3b447e88],bl
  4159bc:	fidivr WORD PTR [eax+0x4f]
  4159bf:	push   cs
  4159c0:	sbb    al,0x1e
  4159c2:	loop   0x415a3b
  4159c4:	fstp   QWORD PTR cs:[eax-0x6]
  4159c8:	jle    0x4159d7
  4159ca:	jae    0x415a29
  4159cc:	fisttp QWORD PTR [esi-0x45027bbb]
  4159d2:	nop
  4159d3:	add    eax,0xa227e2a6
  4159d8:	call   0x87d9:0x331580f3
  4159df:	test   al,0x37
  4159e1:	push   ebx
  4159e2:	lea    esp,[ecx-0x30c05520]
  4159e8:	aas    
  4159e9:	lods   al,BYTE PTR ds:[esi]
  4159ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159eb:	pop    edx
  4159ec:	lods   eax,DWORD PTR ds:[esi]
  4159ed:	or     esp,esi
  4159ef:	and    al,0x86
  4159f1:	shl    dh,0xe7
  4159f4:	sbb    ebp,edi
  4159f6:	lds    edi,FWORD PTR [edx]
  4159f8:	mov    bh,0xa4
  4159fa:	push   edi
  4159fb:	push   ecx
  4159fc:	xchg   ebp,eax
  4159fd:	cmp    al,0x64
  4159ff:	pop    eax
  415a00:	cmp    al,0xfa
  415a02:	(bad)  
  415a04:	adc    eax,0xcaa31b38
  415a09:	iret   
  415a0a:	cmp    BYTE PTR [eax+0xbede1a4],ch
  415a10:	and    esi,DWORD PTR [eax]
  415a12:	push   es
  415a13:	jno    0x415a57
  415a15:	pop    ebx
  415a16:	(bad)  
  415a17:	sahf   
  415a18:	xor    BYTE PTR [ebp+0x19e2fe36],dl
  415a1e:	inc    esi
  415a1f:	lea    eax,[eax+0x768ac59d]
  415a25:	and    esi,ebp
  415a27:	cli    
  415a28:	mov    cs,WORD PTR [edx]
  415a2a:	jge    0x415aa9
  415a2c:	sub    eax,0x33efbbc4
  415a31:	jg     0x415a20
  415a33:	jbe    0x4159fe
  415a35:	std    
  415a36:	sbb    ebx,edi
  415a38:	jnp    0x415a92
  415a3a:	daa    
  415a3b:	add    eax,0x8761e891
  415a40:	sahf   
  415a41:	push   esi
  415a42:	and    ebx,ebp
  415a44:	sti    
  415a45:	mov    esi,0x554c92a4
  415a4a:	js     0x415a3a
  415a4c:	js     0x415a8a
  415a4e:	cmp    BYTE PTR [edx],dl
  415a50:	js     0x415ab1
  415a52:	jae    0x4159e3
  415a54:	out    0x3f,eax
  415a56:	test   al,0x1f
  415a58:	(bad)  
  415a59:	scas   al,BYTE PTR es:[edi]
  415a5a:	daa    
  415a5b:	push   ds
  415a5c:	mov    ah,0x42
  415a5e:	lock adc bh,dh
  415a61:	inc    eax
  415a62:	push   esi
  415a63:	out    0x24,al
  415a65:	es loopne 0x4159fd
  415a68:	ds xchg bl,bh
  415a6b:	fild   QWORD PTR [ebx-0x11]
  415a6e:	cwde   
  415a6f:	stos   BYTE PTR es:[edi],al
  415a70:	in     al,0xd5
  415a72:	push   edi
  415a73:	pop    eax
  415a74:	ror    DWORD PTR [eax],0x2f
  415a77:	lahf   
  415a78:	dec    edx
  415a79:	xchg   edi,eax
  415a7a:	push   ebx
  415a7b:	daa    
  415a7c:	xor    edx,esi
  415a7e:	sti    
  415a7f:	xchg   ecx,eax
  415a80:	add    dh,BYTE PTR [eax]
  415a82:	mov    BYTE PTR [esi+0x59],0xaa
  415a86:	mov    al,0x21
  415a88:	pop    ebp
  415a89:	inc    esi
  415a8a:	stos   DWORD PTR es:[edi],eax
  415a8b:	ja     0x415a51
  415a8d:	int3   
  415a8e:	jnp    0x415a39
  415a90:	lea    ebx,[ebx-0x3d]
  415a93:	mov    ds:0x75239035,eax
  415a98:	push   ss
  415a99:	jg     0x415a81
  415a9b:	push   es
  415a9c:	xchg   ecx,eax
  415a9d:	stos   BYTE PTR es:[edi],al
  415a9e:	stos   DWORD PTR es:[edi],eax
  415a9f:	test   DWORD PTR [esi+ebx*1+0x453a9868],eax
  415aa6:	push   0x26
  415aa8:	mov    dh,0x6f
  415aaa:	jo     0x415b09
  415aac:	jecxz  0x415b16
  415aae:	hlt    
  415aaf:	rcl    DWORD PTR [eax-0xbf1ebef],1
  415ab5:	imul   ebp,DWORD PTR [esi+0x5ae496fe],0x18e4ea0e
  415abf:	sbb    al,0x43
  415ac1:	mov    ebx,0x8ef06d62
  415ac6:	repnz push esi
  415ac8:	dec    esi
  415ac9:	dec    eax
  415aca:	jg     0x415b32
  415acc:	jmp    0x35a3:0x134af373
  415ad3:	add    ecx,esi
  415ad5:	add    ah,BYTE PTR [ecx-0x68fe5d67]
  415adb:	inc    esp
  415adc:	mov    ds:0xe47fc7b,al
  415ae1:	outs   dx,BYTE PTR ds:[esi]
  415ae2:	pop    es
  415ae3:	fcomp  QWORD PTR ds:0x506ca2af
  415ae9:	inc    edi
  415aea:	fld    TBYTE PTR [edi-0x70aecc2c]
  415af0:	or     eax,0xf09fd01a
  415af5:	sub    esp,edx
  415af7:	push   esp
  415af8:	cli    
  415af9:	mov    al,0xa6
  415afb:	pop    eax
  415afc:	lahf   
  415afd:	xchg   DWORD PTR [esi],ecx
  415aff:	add    al,0xf0
  415b01:	dec    esi
  415b02:	ret    0xaa52
  415b05:	test   esp,ecx
  415b07:	cld    
  415b08:	outs   dx,DWORD PTR ds:[esi]
  415b09:	das    
  415b0a:	test   al,0x80
  415b0c:	pushf  
  415b0d:	das    
  415b0e:	sbb    ebx,DWORD PTR [ecx]
  415b10:	dec    ecx
  415b11:	jb     0x415b08
  415b13:	jge    0x415b77
  415b15:	jbe    0x415b66
  415b17:	or     eax,0x7989ca06
  415b1c:	pop    ss
  415b1d:	fsub   DWORD PTR [edi+0x7ed909d2]
  415b23:	cld    
  415b24:	mov    ah,0xfc
  415b26:	adc    DWORD PTR [ecx-0x55e05b5],0x31
  415b2d:	add    edx,edi
  415b2f:	xchg   DWORD PTR [edi],ebx
  415b31:	inc    ebx
  415b32:	pop    edi
  415b33:	cmovl  ecx,DWORD PTR [esi]
  415b36:	and    ch,BYTE PTR [ecx]
  415b38:	lea    ecx,[esi]
  415b3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b3b:	cmp    eax,0x3861b7eb
  415b40:	(bad)  
  415b41:	dec    esp
  415b42:	adc    al,0x43
  415b44:	fld    QWORD PTR [ecx]
  415b46:	mov    ecx,0x4539d22b
  415b4b:	or     DWORD PTR [ebx+0x75],ebp
  415b4e:	scas   al,BYTE PTR es:[edi]
  415b4f:	loop   0x415b2f
  415b51:	std    
  415b52:	mov    ebx,0x6e6ad07e
  415b57:	retf   0xe154
  415b5a:	imul   ecx,DWORD PTR [edi],0x59
  415b5d:	lods   al,BYTE PTR ds:[esi]
  415b5e:	cld    
  415b5f:	mov    ebp,0xfc4f8223
  415b64:	and    BYTE PTR [eax+0x20c51b83],dl
  415b6a:	xor    ebx,DWORD PTR [ecx+0x17c1b8a0]
  415b70:	ret    
  415b71:	lahf   
  415b72:	lods   eax,DWORD PTR ds:[esi]
  415b73:	les    ebx,FWORD PTR [ecx-0x18949fd8]
  415b79:	fadd   QWORD PTR [ebx-0x7c]
  415b7c:	rcr    BYTE PTR ds:0x299ebe3c,1
  415b82:	repnz or dh,BYTE PTR es:0x301a8e81
  415b8a:	push   esp
  415b8b:	cmp    ecx,eax
  415b8d:	std    
  415b8e:	jb     0x415b9c
  415b90:	xchg   ebx,eax
  415b91:	or     edx,DWORD PTR [eax]
  415b93:	or     al,cl
  415b95:	hlt    
  415b96:	popa   
  415b97:	fdivr  DWORD PTR [ebx]
  415b99:	rcr    edx,0x21
  415b9c:	call   FWORD PTR [esi+0x5a]
  415b9f:	sbb    BYTE PTR [edx-0xb],bl
  415ba2:	imul   ebx,eax,0x993bad28
  415ba8:	in     al,0x88
  415baa:	inc    esp
  415bab:	addr16 sahf 
  415bad:	sub    cl,ah
  415baf:	das    
  415bb0:	cmp    BYTE PTR [ecx+0x6f],0x39
  415bb4:	into   
  415bb5:	adc    al,BYTE PTR [esi-0x4e]
  415bb8:	shl    DWORD PTR [ebx-0x6d],cl
  415bbb:	nop
  415bbc:	dec    si
  415bbe:	loope  0x415c26
  415bc0:	pop    eax
  415bc1:	fdivr  DWORD PTR [eax+0x23]
  415bc4:	out    dx,al
  415bc5:	sbb    al,0xcf
  415bc7:	inc    ecx
  415bc8:	cmp    BYTE PTR [esi],ch
  415bca:	pop    ebx
  415bcb:	mov    BYTE PTR [esi-0x660d2be3],dh
  415bd1:	xchg   DWORD PTR [ebp-0x14],ebp
  415bd4:	test   BYTE PTR [ebx],bl
  415bd6:	or     ebp,DWORD PTR [edx+0x47b20d47]
  415bdc:	mov    esi,0x1d2236f0
  415be1:	mov    edx,0xe1395553
  415be6:	cmc    
  415be7:	fstp   TBYTE PTR [eax+0x6d]
  415bea:	push   esp
  415beb:	gs jle 0x415c2e
  415bee:	pop    ebp
  415bef:	ret    0x3c8d
  415bf2:	leave  
  415bf3:	sub    bh,BYTE PTR [ecx+0x4533d1a8]
  415bf9:	inc    edx
  415bfa:	(bad)  
  415bfb:	inc    esi
  415bfc:	mov    edi,0x29ff545b
  415c01:	xchg   BYTE PTR [edi+0x1d6c63b2],cl
  415c07:	push   ecx
  415c08:	mov    edx,0x76d7f72e
  415c0d:	mov    ebp,DWORD PTR [eax]
  415c0f:	into   
  415c10:	cmp    BYTE PTR ds:0xb8f9,bh
  415c15:	xor    dl,BYTE PTR [ebx]
  415c17:	and    DWORD PTR [esi+0x59],0xffffffeb
  415c1b:	cli    
  415c1c:	push   ss
  415c1d:	enter  0x87a,0x25
  415c21:	jns    0x415c3e
  415c23:	imul   edx,DWORD PTR [ebp-0x35],0x8c9e5ae7
  415c2a:	or     esp,DWORD PTR [eax+0x5c877afb]
  415c30:	push   eax
  415c31:	sub    cl,BYTE PTR [eax-0x1a05e807]
  415c37:	loopne 0x415cb8
  415c39:	adc    DWORD PTR [esi-0x3e9d24f],esp
  415c3f:	xchg   ecx,eax
  415c40:	pop    edi
  415c41:	jecxz  0x415bcb
  415c43:	mov    ds:0x18f0e34,eax
  415c48:	data16 test BYTE PTR [ebp+0x65],al
  415c4c:	scas   al,BYTE PTR es:[edi]
  415c4d:	pushf  
  415c4e:	in     al,dx
  415c4f:	fucomip st,st(6)
  415c51:	dec    eax
  415c52:	enter  0x3ac2,0x78
  415c56:	xor    al,0xac
  415c58:	dec    ebx
  415c59:	dec    ecx
  415c5a:	ret    0xa347
  415c5d:	fistp  WORD PTR [ecx-0x34]
  415c60:	stos   DWORD PTR es:[edi],eax
  415c61:	data16 jne 0x415c0e
  415c64:	adc    BYTE PTR [esi-0x112c7c6e],dh
  415c6a:	adc    eax,0xafb3189a
  415c6f:	dec    eax
  415c70:	and    al,BYTE PTR [edi+0x3d]
  415c73:	loope  0x415cc3
  415c75:	cld    
  415c76:	jmp    0x415c0f
  415c78:	cmp    ebx,DWORD PTR [esi+ecx*1]
  415c7b:	out    dx,al
  415c7c:	ja     0x415cf0
  415c7e:	inc    esp
  415c7f:	xchg   DWORD PTR [esi-0xbb1875d],ebx
  415c85:	inc    edi
  415c86:	les    eax,FWORD PTR [esi+0x5e]
  415c89:	sbb    BYTE PTR [edi-0x77],dh
  415c8c:	retf   0xaaf6
  415c8f:	or     DWORD PTR [eax+eiz*2-0x34771c2a],esp
  415c96:	sti    
  415c97:	scas   al,BYTE PTR es:[edi]
  415c98:	out    0xc4,al
  415c9a:	scas   al,BYTE PTR es:[edi]
  415c9b:	pop    ebp
  415c9c:	pop    esp
  415c9d:	jnp    0x415c82
  415c9f:	dec    esi
  415ca0:	pop    ebx
  415ca1:	sub    al,BYTE PTR [eax-0x46ea960]
  415ca7:	lea    ebp,[edx]
  415ca9:	dec    eax
  415caa:	outs   dx,BYTE PTR ds:[esi]
  415cab:	jp     0x415c7b
  415cad:	cmp    edx,DWORD PTR [ebx+0x60]
  415cb0:	repnz (bad) 
  415cb2:	mov    edi,0x4273c9d4
  415cb7:	jge    0x415cee
  415cb9:	(bad)  
  415cba:	clc    
  415cbb:	ins    DWORD PTR es:[edi],dx
  415cbc:	fcomip st,st(4)
  415cbe:	pop    ds
  415cbf:	or     edi,DWORD PTR [edi+0x478c6d23]
  415cc5:	mov    eax,ebp
  415cc7:	shl    DWORD PTR [ebx],0x61
  415cca:	inc    esp
  415ccb:	push   ss
  415ccc:	loop   0x415ce3
  415cce:	mov    dh,0x14
  415cd0:	bound  edi,QWORD PTR [esi-0x5ae2cad6]
  415cd6:	in     eax,dx
  415cd7:	(bad)  
  415cd8:	jp     0x415c62
  415cda:	and    al,0x6c
  415cdc:	xchg   ebx,eax
  415cdd:	xchg   esi,eax
  415cde:	stc    
  415cdf:	jge    0x415c9f
  415ce1:	pop    esi
  415ce2:	adc    DWORD PTR [eax+0x7b],ebp
  415ce5:	ss xchg ebx,eax
  415ce7:	lock cmp al,0xb3
  415cea:	shl    BYTE PTR [eax-0x4f30f020],1
  415cf0:	fild   DWORD PTR [ebx]
  415cf2:	and    eax,0x4437d98a
  415cf7:	mov    al,ds:0x3cc24ebe
  415cfc:	adc    BYTE PTR [edi+0x25],cl
  415cff:	and    eax,0xf8074bc5
  415d04:	adc    bh,BYTE PTR [edi-0x24]
  415d07:	xchg   edx,eax
  415d08:	or     al,0xbd
  415d0a:	inc    edi
  415d0b:	mov    ?,WORD PTR [ecx+0x14]
  415d0e:	ins    DWORD PTR es:[edi],dx
  415d0f:	clc    
  415d10:	xchg   esi,eax
  415d11:	clc    
  415d12:	ins    BYTE PTR es:[edi],dx
  415d13:	xchg   DWORD PTR [edi-0x53],esi
  415d16:	loope  0x415cbd
  415d18:	push   ss
  415d19:	cmp    DWORD PTR [eax+ebp*2+0x604df6e6],0x73829af2
  415d24:	xor    DWORD PTR [eax-0x51],esp
  415d27:	lods   al,BYTE PTR ds:[esi]
  415d28:	add    al,0x4e
  415d2a:	es jmp 0x415d92
  415d2d:	repz neg BYTE PTR [ecx+0x5d]
  415d31:	push   0x1d431f2
  415d36:	jmp    0xa3b2a256
  415d3b:	(bad)  
  415d3c:	loope  0x415d3d
  415d3e:	pop    esp
  415d3f:	jg     0x415d02
  415d41:	pop    esi
  415d42:	(bad)  
  415d43:	inc    esp
  415d44:	fdiv   QWORD PTR [edx]
  415d46:	and    eax,0xea43d7f1
  415d4b:	(bad)  
  415d4d:	and    al,0xcc
  415d4f:	jmp    0x9e844351
  415d54:	rol    DWORD PTR [edx-0x7d],cl
  415d57:	fstp   DWORD PTR [esi-0x2]
  415d5a:	addr16 mov ebx,0x7abfe0fe
  415d60:	jbe    0x415d76
  415d62:	adc    BYTE PTR [edi-0x50],dh
  415d65:	sbb    edi,edx
  415d67:	test   al,0x3
  415d69:	cmp    al,0xcd
  415d6b:	mov    bh,0x5d
  415d6d:	sub    ebp,DWORD PTR [ebx+0x13]
  415d70:	jmp    0x61973d16
  415d75:	inc    esi
  415d76:	js     0x415d85
  415d78:	inc    esp
  415d79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d7a:	arpl   WORD PTR [edi-0xc],si
  415d7d:	les    edx,FWORD PTR [edi]
  415d7f:	int3   
  415d80:	push   ds
  415d81:	fs pop ss
  415d83:	dec    ebp
  415d84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d85:	ds push eax
  415d87:	sbb    eax,0x4b73cbf8
  415d8c:	sahf   
  415d8d:	jb     0x415d89
  415d8f:	int    0x5a
  415d91:	aad    0x9f
  415d93:	jecxz  0x415d34
  415d95:	xchg   ebx,eax
  415d96:	xlat   BYTE PTR ds:[ebx]
  415d97:	jmp    ebx
  415d99:	mul    ecx
  415d9b:	pop    esp
  415d9c:	mov    DWORD PTR [edx],esp
  415d9e:	mov    bh,0x71
  415da0:	adc    BYTE PTR [ecx+0x1f],al
  415da3:	mul    dh
  415da5:	jns    0x415d4c
  415da7:	mov    edx,0x1b11dfaf
  415dac:	push   edx
  415dad:	pop    ebp
  415dae:	jns    0x415ddb
  415db0:	enter  0x4440,0x70
  415db4:	inc    ebx
  415db5:	mov    cl,0x9b
  415db7:	out    dx,al
  415db8:	shl    ebx,1
  415dba:	xchg   esi,eax
  415dbb:	je     0x415de4
  415dbd:	mov    ds:0x9326ea0,al
  415dc2:	js     0x415e15
  415dc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415dc5:	adc    eax,0xefe2d478
  415dca:	cmp    eax,0xfead454
  415dcf:	in     eax,dx
  415dd0:	adc    ah,BYTE PTR [ecx+0x3dd693ce]
  415dd6:	(bad)  
  415dd7:	jmp    0xf5c0ccb7
  415ddc:	test   al,0x7c
  415dde:	and    bl,BYTE PTR [esp+eax*8]
  415de1:	inc    eax
  415de2:	and    ah,bl
  415de4:	inc    ebp
  415de5:	dec    esp
  415de6:	mul    DWORD PTR [eax+0x3a]
  415de9:	je     0x415e40
  415deb:	xchg   ecx,eax
  415dec:	lods   al,BYTE PTR ds:[esi]
  415ded:	aas    
  415dee:	push   0x73
  415df0:	xor    esi,esp
  415df2:	pop    ecx
  415df3:	xchg   ecx,eax
  415df4:	je     0x415e15
  415df6:	in     eax,dx
  415df7:	in     eax,0x28
  415df9:	scas   eax,DWORD PTR es:[edi]
  415dfa:	sub    DWORD PTR [ebp+0x22507ce],eax
  415e00:	xor    ebx,esi
  415e02:	mov    dl,0xed
  415e04:	and    al,0x1e
  415e06:	out    dx,al
  415e07:	push   edx
  415e08:	jge    0x415e50
  415e0a:	xchg   BYTE PTR [ecx+0x95f6232],dh
  415e10:	jmp    0x1591:0xbb8de84c
  415e17:	dec    BYTE PTR [ecx]
  415e19:	inc    ebp
  415e1a:	imul   eax,DWORD PTR [ebp+0x2d],0x3a89365f
  415e21:	xchg   esp,eax
  415e22:	pusha  
  415e23:	mov    ebp,0xf3d23f1a
  415e28:	xor    ch,al
  415e2a:	ror    BYTE PTR [ebp+0x13],1
  415e2d:	lahf   
  415e2e:	scas   al,BYTE PTR es:[edi]
  415e2f:	pop    ebx
  415e30:	add    DWORD PTR [ecx-0x6e],edx
  415e33:	not    DWORD PTR [ebx+eax*1]
  415e36:	aaa    
  415e37:	mov    DWORD PTR [eax-0x35c4b54b],ebx
  415e3d:	call   0xf8cbb6fb
  415e42:	mov    ebp,0xe98a0950
  415e47:	ror    ebx,1
  415e49:	xchg   BYTE PTR [edx+eax*1+0x3503bf94],al
  415e50:	lods   eax,DWORD PTR ds:[esi]
  415e51:	jbe    0x415e01
  415e53:	outs   dx,DWORD PTR ds:[esi]
  415e54:	mov    al,ds:0xa41a7827
  415e59:	adc    esp,DWORD PTR [edi+esi*4+0x10]
  415e5d:	mov    bh,0x9d
  415e5f:	dec    ebp
  415e60:	xlat   BYTE PTR ds:[ebx]
  415e61:	popa   
  415e62:	jne    0x415e74
  415e64:	ss jae 0x415edb
  415e67:	mov    al,ds:0x72cfef02
  415e6c:	add    ecx,DWORD PTR [ecx]
  415e6e:	pushf  
  415e6f:	or     DWORD PTR [ebx+0x21],0xffffffa4
  415e73:	xchg   esp,eax
  415e74:	aas    
  415e75:	(bad)  
  415e76:	call   0x1639:0xef246800
  415e7d:	jnp    0x415e4d
  415e7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e80:	inc    edx
  415e81:	pop    edx
  415e82:	xor    DWORD PTR [eax+ecx*4-0x2c],0x31
  415e87:	ret    0xe5a8
  415e8a:	and    al,0xe7
  415e8c:	dec    edi
  415e8d:	clc    
  415e8e:	xor    cl,BYTE PTR [esp+esi*4+0x4f]
  415e92:	mov    ebp,0xbeb0cbe0
  415e97:	jmp    0x20f1a9a0
  415e9c:	out    0xa6,eax
  415e9e:	scas   eax,DWORD PTR es:[edi]
  415e9f:	adc    al,0x51
  415ea1:	add    al,0xc6
  415ea3:	ins    BYTE PTR es:[edi],dx
  415ea4:	pop    ebx
  415ea5:	clc    
  415ea6:	mov    bh,0xe4
  415ea8:	pop    edx
  415ea9:	cli    
  415eaa:	ss mov esi,0xb4d1c21c
  415eb0:	ds sbb eax,0x2580884d
  415eb6:	repz cs icebp 
  415eb9:	dec    esp
  415eba:	and    BYTE PTR [ebx],bl
  415ebc:	test   eax,0xd8818ea4
  415ec1:	push   ecx
  415ec2:	popf   
  415ec3:	sbb    al,0x87
  415ec5:	inc    esi
  415ec6:	or     bl,dh
  415ec8:	mov    edx,esp
  415eca:	xlat   BYTE PTR ds:[ebx]
  415ecb:	call   0x4aef17f3
  415ed0:	aaa    
  415ed1:	rcl    ecx,1
  415ed3:	xchg   ebx,eax
  415ed4:	jo     0x415ea5
  415ed6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ed7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ed8:	cdq    
  415ed9:	inc    edi
  415eda:	pop    ebx
  415edb:	sbb    eax,ebx
  415edd:	sbb    dh,BYTE PTR [esi]
  415edf:	push   ebx
  415ee0:	adc    BYTE PTR ss:[edx+0x39eee157],0xea
  415ee8:	push   ebx
  415ee9:	sub    dh,dl
  415eeb:	aas    
  415eec:	stc    
  415eed:	cmc    
  415eee:	mov    edx,0x5383c7fe
  415ef3:	adc    ebx,esp
  415ef5:	nop
  415ef6:	jecxz  0x415ec7
  415ef8:	push   esp
  415ef9:	xchg   esi,eax
  415efa:	xor    bh,cl
  415efc:	in     eax,dx
  415efd:	push   ds
  415efe:	push   edi
  415eff:	inc    esp
  415f00:	leave  
  415f01:	pop    ss
  415f02:	xor    BYTE PTR [ecx-0x73ec0a76],bh
  415f08:	fidiv  DWORD PTR [edi-0x560b0a5b]
  415f0e:	inc    eax
  415f0f:	lock jae 0x415f2d
  415f12:	(bad)  
  415f13:	xchg   edi,eax
  415f14:	aas    
  415f15:	cmc    
  415f16:	cmp    ebp,DWORD PTR ds:[ebx-0x5]
  415f1a:	xor    ah,BYTE PTR [ebx+edx*8+0x3c]
  415f1e:	xchg   ebx,eax
  415f1f:	pop    ebx
  415f20:	ret    0x4b27
  415f23:	in     eax,0xa5
  415f25:	sbb    BYTE PTR [ebx+0x2a],bh
  415f28:	or     dh,BYTE PTR [edx+0x18ad8e9b]
  415f2e:	mov    BYTE PTR [ebx+0x72],ah
  415f31:	(bad)  
  415f32:	aam    0x49
  415f34:	paddusw mm0,mm2
  415f37:	jge    0x415ec0
  415f39:	cmc    
  415f3a:	adc    edi,DWORD PTR [edx+0x7]
  415f3d:	call   0x47bd0e0c
  415f42:	or     BYTE PTR [ecx],bh
  415f44:	inc    esp
  415f45:	xor    eax,0xab2ee6da
  415f4a:	sahf   
  415f4b:	push   ebx
  415f4c:	cli    
  415f4d:	cdq    
  415f4e:	gs es mov ebx,0x147bad30
  415f55:	pop    edi
  415f56:	hlt    
  415f57:	pusha  
  415f58:	push   edi
  415f59:	js     0x415fb0
  415f5b:	imul   esp,DWORD PTR [ecx],0xa497d456
  415f61:	cmp    ah,BYTE PTR [esi+0x26]
  415f64:	jno    0x415fc3
  415f66:	std    
  415f67:	sub    al,0xce
  415f69:	cli    
  415f6a:	add    DWORD PTR [esi-0x6ea570e9],esp
  415f70:	mov    ds:0x24ab5a96,al
  415f75:	inc    edi
  415f76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f77:	ds fwait
  415f79:	mov    BYTE PTR [eax],dl
  415f7b:	add    esi,DWORD PTR [edi]
  415f7d:	rol    BYTE PTR [edi-0x2efbb039],1
  415f83:	xchg   ebx,esi
  415f85:	ins    BYTE PTR es:[edi],dx
  415f86:	fs (bad) 
  415f88:	call   0x824b:0xc813989b
  415f8f:	inc    esp
  415f90:	cdq    
  415f91:	(bad)  
  415f93:	pop    ebx
  415f94:	dec    BYTE PTR [ebx+0x4a87fba7]
  415f9a:	pop    ebp
  415f9b:	add    eax,DWORD PTR [edx+0x14]
  415f9e:	and    ebx,ebx
  415fa0:	mov    ebx,0xf7a248fa
  415fa5:	and    BYTE PTR [ebp+0x4b],al
  415fa8:	fisubr DWORD PTR [esi+esi*2+0xa85b5ff]
  415faf:	add    BYTE PTR [edx],dh
  415fb1:	pop    esi
  415fb2:	jmp    0xcdd5:0xd513e42e
  415fb9:	xor    al,0xcc
  415fbb:	and    esi,DWORD PTR [ecx-0x69]
  415fbe:	lods   al,BYTE PTR ds:[esi]
  415fbf:	(bad)  
  415fc0:	push   edx
  415fc1:	mov    ds:0x88921c89,al
  415fc6:	fwait
  415fc7:	in     al,0x88
  415fc9:	dec    esi
  415fca:	xchg   DWORD PTR [eax],esi
  415fcc:	fiadd  WORD PTR [ebp-0x3]
  415fcf:	cdq    
  415fd0:	lods   eax,DWORD PTR ds:[esi]
  415fd1:	xor    BYTE PTR [edx-0x7dae8cb9],bl
  415fd7:	out    0xfd,eax
  415fd9:	add    al,0xdf
  415fdb:	icebp  
  415fdc:	mov    ss,WORD PTR [esi]
  415fde:	test   al,0x7d
  415fe0:	push   edi
  415fe1:	mov    eax,ds:0x5194bc08
  415fe6:	or     bh,BYTE PTR [esi-0x49]
  415fe9:	clc    
  415fea:	shl    BYTE PTR cs:[ebx+edx*4-0x1e],cl
  415fef:	gs add al,0xd3
  415ff2:	add    al,0x79
  415ff4:	jmp    0x119b6ebe
  415ff9:	xchg   BYTE PTR [edi+0x491fcd4d],dl
  415fff:	push   0xffffffae
  416001:	pushw  0x73
  416004:	mov    edi,0x2f257df7
  416009:	fimul  DWORD PTR [esp+edx*4]
  41600c:	in     eax,dx
  41600d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41600e:	es in  ax,0x56
  416012:	pop    ecx
  416013:	push   ebx
  416014:	mov    eax,0xe27864bf
  416019:	mov    BYTE PTR [eax+0x6d9e7149],cl
  41601f:	pop    ecx
  416020:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416021:	cli    
  416022:	mov    bl,0xb8
  416024:	sub    cl,BYTE PTR [esi+0x7c93bbd0]
  41602a:	pop    esp
  41602b:	adc    ah,0x39
  41602e:	enter  0xdcd4,0x5
  416032:	xchg   edx,eax
  416033:	fsubr  st(4),st
  416035:	mov    edi,0xb95340e1
  41603a:	mov    al,ds:0x16b704b2
  41603f:	fs popa 
  416041:	retf   
  416042:	aad    0x48
  416044:	sub    eax,0x3f8f50d9
  416049:	pop    es
  41604a:	outs   dx,DWORD PTR ds:[esi]
  41604b:	daa    
  41604c:	jl     0x415ff4
  41604e:	push   edi
  41604f:	mov    ecx,edi
  416051:	add    ch,BYTE PTR [eiz*1+0x19602fe6]
  416058:	or     eax,DWORD PTR [edx-0x23]
  41605b:	push   ds
  41605c:	rcr    DWORD PTR ds:0x3077b78f,1
  416062:	inc    esp
  416063:	adc    ecx,ecx
  416065:	xor    ebx,0x87546a2e
  41606b:	aad    0x98
  41606d:	leave  
  41606e:	dec    ecx
  41606f:	into   
  416070:	fs iret 
  416072:	retf   
  416073:	jle    0x416095
  416075:	sbb    edi,DWORD PTR [esp+esi*1-0x26]
  416079:	dec    ecx
  41607a:	popf   
  41607b:	inc    esi
  41607c:	jns    0x4160cd
  41607e:	sbb    esi,DWORD PTR [esi]
  416080:	xchg   ebp,eax
  416081:	or     ah,BYTE PTR [edx]
  416083:	loopne 0x416032
  416085:	mov    ebp,0x7e748c3b
  41608a:	(bad)  
  41608b:	repnz aas 
  41608d:	ja     0x4160b5
  41608f:	or     eax,0xb6641f08
  416094:	push   ebp
  416096:	pop    ebx
  416097:	shl    BYTE PTR [ebx+eax*8+0x6430aa5f],0xab
  41609f:	les    esp,FWORD PTR [ebx-0x40]
  4160a2:	sub    ecx,ebp
  4160a4:	mov    esp,0x89450945
  4160a9:	mov    eax,0xcc92f777
  4160ae:	lock ficom DWORD PTR [esi+0x3810400f]
  4160b5:	sbb    BYTE PTR [ecx+0x6],0x80
  4160b9:	jge    0x416079
  4160bb:	dec    DWORD PTR [ecx]
  4160bd:	ret    
  4160be:	out    dx,eax
  4160bf:	retf   
  4160c0:	xchg   esp,eax
  4160c1:	das    
  4160c2:	dec    esi
  4160c3:	mov    esp,0x7f087493
  4160c8:	mov    ds:0xd3890f17,al
  4160cd:	xchg   ebp,eax
  4160ce:	inc    eax
  4160cf:	cwde   
  4160d0:	add    al,0x32
  4160d2:	or     BYTE PTR [eax+0x67293a68],dl
  4160d8:	pop    ss
  4160d9:	mov    esi,0x8a087b7
  4160de:	inc    ecx
  4160df:	mov    ?,WORD PTR [esi]
  4160e1:	aas    
  4160e2:	fwait
  4160e3:	xchg   ebp,eax
  4160e4:	push   ecx
  4160e5:	add    DWORD PTR [eax+0x3a],esp
  4160e8:	sub    ebp,DWORD PTR [ebp+0x53c80482]
  4160ee:	push   ds
  4160ef:	ds ss sub ebx,eax
  4160f3:	adc    eax,0xd3bef992
  4160f8:	int3   
  4160f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160fa:	mov    ecx,gs
  4160fc:	dec    ebp
  4160fd:	(bad)  
  4160fe:	fmul   DWORD PTR [edi-0x6c5436a0]
  416104:	mov    ch,0x52
  416106:	xchg   edx,eax
  416107:	fcom   DWORD PTR [edx]
  416109:	sub    BYTE PTR ds:0xeb8b3942,cl
  41610f:	in     al,dx
  416110:	add    ebp,edi
  416112:	sub    eax,0x2e21a1ce
  416117:	pop    edx
  416118:	cmp    ah,BYTE PTR gs:[ecx+eax*4-0x6db04fea]
  416120:	sub    dl,BYTE PTR [esp+eiz*8-0x359aac15]
  416127:	mov    al,0x3c
  416129:	mov    edx,0x6e3602b4
  41612e:	jne    0x41610b
  416130:	sub    eax,DWORD PTR [ebx+ecx*1+0x1a]
  416134:	ja     0x416189
  416136:	sub    eax,0x3f041bf1
  41613b:	cmp    dh,cl
  41613d:	stos   BYTE PTR es:[edi],al
  41613e:	dec    ah
  416140:	add    al,BYTE PTR [ebp+0xc29c80b]
  416146:	sti    
  416147:	push   ds
  416148:	sub    DWORD PTR [esi],edi
  41614a:	mov    eax,ds:0x12c0edda
  41614f:	(bad)  
  416152:	xchg   esp,eax
  416153:	cmp    DWORD PTR [ebx+0x415661c3],0xf1536a4f
  41615d:	xlat   BYTE PTR ds:[ebx]
  41615e:	retf   0xafd2
  416161:	sbb    DWORD PTR [ecx+0x743c391d],ebx
  416167:	mov    esi,DWORD PTR [eax+0x4ce9e32d]
  41616d:	fiadd  WORD PTR [ecx+0x5094cb63]
  416173:	mov    edx,0xa847167c
  416178:	mov    eax,0x5b0179f5
  41617d:	ret    
  41617e:	xchg   ebx,eax
  41617f:	push   esi
  416180:	and    BYTE PTR [edi],ch
  416182:	jnp    0x41614b
  416184:	jmp    DWORD PTR [edx]
  416186:	sub    al,0x6f
  416188:	xchg   esi,eax
  416189:	aam    0xc0
  41618b:	push   esp
  41618c:	sbb    eax,0x6562fe1d
  416191:	push   ecx
  416192:	mov    eax,0x3e987dc3
  416197:	dec    edx
  416198:	xchg   edx,eax
  416199:	jl     0x41617c
  41619b:	xlat   BYTE PTR ds:[ebx]
  41619c:	loop   0x41619c
  41619e:	dec    esi
  41619f:	je     0x416138
  4161a1:	cmp    bh,dl
  4161a3:	(bad)  
  4161a5:	ret    0x6b03
  4161a8:	clc    
  4161a9:	pop    ss
  4161aa:	mov    ds:0xaeec8864,al
  4161af:	out    dx,al
  4161b0:	out    0x6d,al
  4161b2:	neg    BYTE PTR [edi]
  4161b4:	xor    eax,0x541da97b
  4161b9:	add    edx,DWORD PTR [ebx]
  4161bb:	mov    ebp,0x332739d0
  4161c0:	fstp   QWORD PTR [ebp+ebp*8+0xc]
  4161c4:	jecxz  0x416190
  4161c6:	xchg   DWORD PTR [ebp-0x2b8bd2b8],ebp
  4161cc:	jp     0x416179
  4161ce:	stos   BYTE PTR es:[edi],al
  4161cf:	in     eax,0xdc
  4161d1:	mov    ebp,ebp
  4161d3:	adc    eax,0xb5d8089c
  4161d8:	sub    eax,0x8df4d000
  4161dd:	pop    edi
  4161de:	ds xchg edi,eax
  4161e0:	les    ecx,FWORD PTR [ecx]
  4161e2:	dec    edi
  4161e3:	fimul  DWORD PTR [ebx]
  4161e5:	mov    ebp,0x95f670b9
  4161ea:	push   0x2176429b
  4161ef:	test   eax,0xc6e06db
  4161f4:	pavgb  xmm7,XMMWORD PTR [eax]
  4161f8:	out    0xea,eax
  4161fa:	nop
  4161fb:	daa    
  4161fc:	add    eax,0xf35c6d45
  416201:	ins    DWORD PTR es:[edi],dx
  416202:	jb     0x4161a4
  416204:	fld    DWORD PTR [edi]
  416206:	add    eax,DWORD PTR ds:0xed57755e
  41620c:	stc    
  41620d:	inc    edi
  41620e:	push   cs
  41620f:	mov    BYTE PTR [ebp+0x38],al
  416212:	add    DWORD PTR [esi+0xe1d2bf2],ebp
  416218:	arpl   WORD PTR [edi],si
  41621a:	fucomi st,st(1)
  41621c:	cmp    edi,DWORD PTR [eax-0x87298e2]
  416222:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  416224:	add    BYTE PTR [ecx-0x7a5fca7b],ch
  41622a:	push   es
  41622b:	pop    edi
  41622c:	adc    eax,0x96e10736
  416231:	sahf   
  416232:	fistp  QWORD PTR [ecx+edi*1]
  416235:	xchg   esp,eax
  416236:	repz mov dh,BYTE PTR [edi]
  416239:	mov    esp,ebx
  41623b:	int3   
  41623c:	test   al,0x8a
  41623e:	dec    edx
  41623f:	jmp    0xcde4:0x462c0511
  416246:	mov    al,0xe6
  416248:	call   0x1e2433dd
  41624d:	mov    al,0x15
  41624f:	ins    DWORD PTR es:[edi],dx
  416250:	jo     0x4162a5
  416252:	in     al,dx
  416253:	add    ebx,DWORD PTR [ecx]
  416255:	bound  esi,QWORD PTR [ecx]
  416257:	scas   eax,DWORD PTR es:[edi]
  416258:	fisub  DWORD PTR [esi-0x68]
  41625b:	push   edi
  41625c:	or     al,bh
  41625e:	push   edi
  41625f:	punpcklwd mm5,DWORD PTR [eax]
  416262:	xchg   esp,eax
  416263:	xchg   edx,eax
  416264:	rcl    ebx,1
  416266:	xor    dl,cl
  416268:	mov    dl,0x86
  41626a:	jno    0x416262
  41626c:	fdivr  DWORD PTR [ecx]
  41626e:	aam    0x75
  416270:	mov    ebx,0x34a97238
  416275:	pusha  
  416276:	rcl    esi,cl
  416278:	sahf   
  416279:	or     edi,DWORD PTR [esi-0x4d5434f8]
  41627f:	mov    ds:0x9c01809e,al
  416284:	jmp    0x7562:0x96a0fa88
  41628b:	pushf  
  41628c:	cdq    
  41628d:	cmp    eax,0xc44b5da
  416292:	inc    edx
  416293:	pop    edi
  416294:	xor    esi,DWORD PTR [bp+di+0x70]
  416298:	sbb    esp,eax
  41629a:	adc    al,0xd5
  41629c:	jmp    0xd0dc:0xc652e59a
  4162a3:	test   ebx,eax
  4162a5:	fisub  DWORD PTR [ecx]
  4162a7:	jecxz  0x41629f
  4162a9:	or     esi,ebp
  4162ab:	adc    DWORD PTR [eax],esp
  4162ad:	mov    BYTE PTR [ebx],dh
  4162af:	and    dl,BYTE PTR [ebp-0x7e]
  4162b2:	adc    eax,0x727a6de6
  4162b7:	dec    esp
  4162b8:	mov    edx,0xfb6c11c1
  4162bd:	push   es
  4162be:	xor    edx,DWORD PTR [esi+ebx*2+0x1c567e09]
  4162c5:	daa    
  4162c6:	sub    edx,0xfdc4cfb4
  4162cc:	dec    esp
  4162cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162ce:	inc    esi
  4162cf:	cdq    
  4162d0:	pop    ecx
  4162d1:	jmp    0x4162b7
  4162d3:	push   es
  4162d4:	js     0x416327
  4162d6:	dec    ebp
  4162d7:	ins    DWORD PTR es:[edi],dx
  4162d8:	add    eax,0xf8b86492
  4162dd:	ffreep st(5)
  4162df:	jns    0x416319
  4162e1:	mov    BYTE PTR [ebx],cl
  4162e3:	enter  0xa816,0xfd
  4162e7:	js     0x4162c7
  4162e9:	xchg   BYTE PTR [eax-0xe01061b],bl
  4162ef:	inc    eax
  4162f0:	pusha  
  4162f1:	push   esp
  4162f2:	xor    al,0xf5
  4162f4:	scas   al,BYTE PTR es:[edi]
  4162f5:	mov    ah,0x68
  4162f7:	into   
  4162f8:	data16 mov cl,0x74
  4162fb:	cld    
  4162fc:	shl    DWORD PTR [ebp+0x9],1
  4162ff:	pop    ecx
  416300:	push   eax
  416301:	mov    dl,BYTE PTR ds:0x902794e0
  416307:	out    dx,al
  416308:	bound  ebx,QWORD PTR [ecx+eiz*8-0x73]
  41630c:	out    0xae,eax
  41630e:	mov    ebx,0xf9208d1a
  416313:	imul   BYTE PTR [edx+0x1af14680]
  416319:	jb     0x4162c3
  41631b:	lahf   
  41631c:	pop    ecx
  41631d:	rol    DWORD PTR [edi+0x226ac9ed],0x9
  416324:	add    dl,BYTE PTR [ebx-0x71]
  416327:	inc    edx
  416328:	daa    
  416329:	push   0x255470f3
  41632e:	mov    ah,0x91
  416330:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416331:	sahf   
  416332:	fadd   DWORD PTR [ebp-0x2b8db306]
  416338:	ret    
  416339:	dec    ebx
  41633a:	pop    esi
  41633b:	imul   esp,DWORD PTR [ecx-0x78],0xffffffb4
  41633f:	(bad)  
  416340:	pop    edx
  416341:	rcl    cl,0x4e
  416344:	lock popa 
  416346:	inc    esp
  416347:	jmp    0x4163b3
  416349:	cmp    dh,0x1d
  41634c:	(bad)  
  41634d:	out    0xea,al
  41634f:	and    BYTE PTR [edi-0x3fe8093],0x14
  416356:	lods   eax,DWORD PTR ds:[esi]
  416357:	mov    esp,0xf07c00f3
  41635c:	push   ebp
  41635d:	and    al,0xfc
  41635f:	or     al,0x74
  416361:	xchg   ebp,eax
  416362:	adc    ah,bl
  416364:	inc    ebx
  416365:	jg     0x4163dc
  416367:	jo     0x416307
  416369:	fdiv   DWORD PTR [edx+0x28]
  41636c:	or     al,BYTE PTR [ebp+0x42]
  41636f:	mov    edx,0x2720e79d
  416374:	mov    ecx,0x5d835b05
  416379:	mov    esp,0xfa765c10
  41637e:	fild   WORD PTR ds:0xa80e3f5
  416384:	je     0x4163c5
  416386:	dec    DWORD PTR [eax]
  416388:	cmp    BYTE PTR [eax],cl
  41638a:	outs   dx,BYTE PTR ds:[esi]
  41638b:	push   edi
  41638c:	mov    ds:0xee7f2092,al
  416391:	jmp    0x416348
  416393:	and    al,0x19
  416395:	pop    esp
  416396:	(bad)
  41639a:	or     ch,BYTE PTR [edx+0x1e]
  41639d:	imul   esi,DWORD PTR [ebx-0x6e604396],0x9fe2d06a
  4163a7:	outs   dx,BYTE PTR ds:[esi]
  4163a8:	pop    esp
  4163a9:	jb     0x4163de
  4163ab:	dec    esi
  4163ac:	xchg   ecx,eax
  4163ad:	and    bh,0x6c
  4163b0:	pop    ecx
  4163b1:	push   ss
  4163b2:	loope  0x4163bd
  4163b4:	push   ecx
  4163b5:	push   0x19791efd
  4163ba:	xchg   edx,eax
  4163bb:	aas    
  4163bc:	int    0x61
  4163be:	outs   dx,DWORD PTR ds:[esi]
  4163bf:	or     ebx,edx
  4163c1:	push   0xffffffac
  4163c3:	fdivr  QWORD PTR [edi]
  4163c5:	inc    edx
  4163c6:	outs   dx,BYTE PTR ds:[esi]
  4163c7:	inc    eax
  4163c8:	dec    edi
  4163c9:	fimul  DWORD PTR [esi-0x6d94cf19]
  4163cf:	xor    edi,edx
  4163d1:	jle    0x4163e0
  4163d3:	pop    ebx
  4163d4:	idiv   DWORD PTR [edi+0x2d]
  4163d7:	in     al,dx
  4163d8:	inc    ebx
  4163d9:	ss pop ebp
  4163db:	mov    eax,0x6b39f336
  4163e0:	scas   al,BYTE PTR es:[edi]
  4163e1:	js     0x416442
  4163e3:	cli    
  4163e4:	push   edi
  4163e5:	and    bh,BYTE PTR [ebp-0x62]
  4163e8:	addr16 jo 0x4163c1
  4163eb:	clc    
  4163ec:	adc    DWORD PTR [ebp-0x4bc147eb],ebx
  4163f2:	ins    DWORD PTR es:[edi],dx
  4163f3:	imul   esi,esi,0x38
  4163f6:	stos   BYTE PTR es:[edi],al
  4163f7:	mov    esi,0x95be4a
  4163fc:	inc    ecx
  4163fd:	pop    esp
  4163fe:	sbb    al,0x70
  416400:	dec    esp
  416401:	in     eax,0x5
  416403:	pusha  
  416404:	mov    edi,0x38e25513
  416409:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41640a:	dec    esp
  41640b:	xchg   ebp,eax
  41640c:	inc    esi
  41640d:	push   edx
  41640e:	lock lea ebp,[esi-0x23]
  416412:	(bad)  
  416414:	jbe    0x416487
  416416:	push   ebp
  416417:	out    0xa4,eax
  416419:	xchg   esi,eax
  41641a:	xchg   edx,eax
  41641b:	les    eax,FWORD PTR [esi]
  41641d:	ret    0xd338
  416420:	ret    0x5185
  416423:	jl     0x4163a6
  416425:	(bad)  
  416426:	mov    edx,0xbdc7648
  41642b:	pusha  
  41642c:	and    DWORD PTR [edi+edi*8-0x5aa47fef],0x24ae6b09
  416437:	jecxz  0x416490
  416439:	ret    0x976e
  41643c:	icebp  
  41643d:	xchg   DWORD PTR [edx-0x4a],ebp
  416440:	pop    esp
  416441:	jg     0x4163dc
  416443:	dec    edx
  416444:	sbb    al,0x20
  416446:	or     esi,DWORD PTR [edi+0x5a13bf83]
  41644c:	inc    esi
  41644d:	fs fs cmc 
  416450:	mov    cl,0xee
  416452:	push   0x31ddfa65
  416457:	mov    cl,0x6d
  416459:	adc    DWORD PTR [eax-0x25],0x4e
  41645d:	pop    ds
  41645e:	shl    DWORD PTR [esi-0x60e51be0],0x3c
  416465:	xchg   edx,edx
  416467:	(bad)  
  416468:	cli    
  416469:	scas   al,BYTE PTR es:[edi]
  41646a:	and    ecx,0xffffffb7
  41646d:	pop    edi
  41646e:	sbb    eax,0xa8cfde09
  416473:	les    edx,FWORD PTR [ebp+0x73]
  416476:	call   0xe60e380f
  41647b:	dec    ebp
  41647c:	in     al,0x13
  41647e:	dec    esi
  41647f:	sbb    ecx,esi
  416481:	les    ebx,FWORD PTR [edx+0x4ba61574]
  416487:	jb     0x41643d
  416489:	pop    eax
  41648a:	loope  0x416472
  41648c:	(bad)  
  41648d:	loopne 0x416466
  41648f:	mov    cl,0x91
  416491:	ins    DWORD PTR es:[edi],dx
  416492:	xor    ecx,ecx
  416494:	loope  0x416492
  416496:	icebp  
  416497:	jmp    DWORD PTR [esi-0x2ca83632]
  41649d:	push   0xd5a079c1
  4164a2:	xor    eax,0xe091950
  4164a7:	(bad)  
  4164a8:	out    dx,al
  4164a9:	cmp    edx,DWORD PTR [eax+0x3e7c60e6]
  4164af:	(bad)  
  4164b0:	mov    ah,0xdf
  4164b2:	enter  0x8b42,0x7f
  4164b6:	pushf  
  4164b7:	shl    al,cl
  4164b9:	ins    DWORD PTR es:[edi],dx
  4164ba:	mov    ss,eax
  4164bc:	or     edi,DWORD PTR ds:0x68703015
  4164c2:	xlat   BYTE PTR ds:[ebx]
  4164c3:	ins    BYTE PTR es:[edi],dx
  4164c4:	jp     0x416539
  4164c6:	adc    BYTE PTR [edx+0x51],0x31
  4164ca:	push   eax
  4164cb:	(bad)  
  4164cc:	data16 int3 
  4164ce:	shl    DWORD PTR [ebp+0x2f],cl
  4164d1:	sub    ah,ah
  4164d3:	dec    edx
  4164d4:	in     eax,dx
  4164d5:	rcr    DWORD PTR [esi+eiz*1+0x62],0xcb
  4164da:	cmp    ch,BYTE PTR [esi-0x3e]
  4164dd:	enter  0x1f91,0x73
  4164e1:	mov    eax,0x480d2280
  4164e6:	push   ebp
  4164e7:	xchg   ebp,eax
  4164e8:	je     0x4164fb
  4164ea:	jns    0x416471
  4164ec:	mov    dl,0x15
  4164ee:	mov    ah,0x37
  4164f0:	sub    DWORD PTR [ecx],edx
  4164f2:	ja     0x416554
  4164f4:	loop   0x4164cc
  4164f6:	pop    ecx
  4164f7:	and    DWORD PTR [edx-0x59dbdaf],ebx
  4164fd:	std    
  4164fe:	xchg   esi,eax
  4164ff:	pop    eax
  416500:	in     eax,dx
  416501:	shl    DWORD PTR [ebx+ebx*1+0x5872bcd5],1
  416508:	fldenv [esi-0xc]
  41650b:	mov    bl,0xcb
  41650d:	jmp    0x4164d0
  41650f:	pop    ecx
  416510:	icebp  
  416511:	jo     0x416583
  416513:	imul   eax,DWORD PTR [eax+eiz*8+0x4e],0xd03f12b5
  41651b:	mov    WORD PTR [ebx+0x5e595cf0],?
  416521:	pop    eax
  416522:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416523:	mov    eax,ds:0xf56eade9
  416528:	jg     0x4164d1
  41652a:	mov    ds:0x3727aa2,al
  41652f:	xchg   edi,eax
  416530:	sbb    edx,ecx
  416532:	mov    bh,0xdf
  416534:	sub    al,0x26
  416536:	xor    BYTE PTR [ecx],ch
  416538:	outs   dx,DWORD PTR ds:[esi]
  416539:	xlat   BYTE PTR ds:[ebx]
  41653a:	jb     0x416544
  41653c:	shl    DWORD PTR [eax],0xf1
  41653f:	jle    0x416580
  416541:	out    0xf,eax
  416543:	sub    esp,DWORD PTR [eax+0x63c3c94e]
  416549:	cli    
  41654a:	pop    esp
  41654b:	or     al,0xcd
  41654d:	sbb    ah,BYTE PTR [edx+0x1d]
  416550:	and    ebp,DWORD PTR [esi+0x1974763e]
  416556:	(bad)  
  416557:	xchg   ebx,eax
  416558:	mov    ebx,0xd0fce4e0
  41655d:	mov    ds:0xa2303fa4,eax
  416562:	aad    0xd3
  416564:	(bad)  
  416565:	jmp    0x8868:0x292319ba
  41656c:	add    al,0x2d
  41656e:	inc    esp
  41656f:	jno    0x4165da
  416571:	xchg   ebp,eax
  416572:	rol    edx,cl
  416574:	xchg   ebx,eax
  416575:	call   0x48a:0x3204130b
  41657c:	cli    
  41657d:	cmp    ecx,DWORD PTR [edx]
  41657f:	dec    esi
  416580:	out    dx,eax
  416581:	sbb    al,0x66
  416583:	push   ds
  416584:	pop    esi
  416585:	mov    esp,0x46667b5
  41658a:	pop    edx
  41658b:	fist   DWORD PTR [ebx-0x7dbfeb2b]
  416591:	xchg   esp,eax
  416592:	and    BYTE PTR [ebp+0x58fa1461],bl
  416598:	(bad)  
  416599:	retf   
  41659a:	popa   
  41659b:	in     eax,dx
  41659c:	dec    esi
  41659d:	mov    dh,BYTE PTR [ebx+0xf35feaf]
  4165a3:	out    0x78,al
  4165a5:	into   
  4165a6:	ficom  DWORD PTR [edi-0x13]
  4165a9:	fst    QWORD PTR [edi]
  4165ab:	xor    eax,0xbd9b57cd
  4165b0:	add    ah,BYTE PTR [eax-0x6e]
  4165b3:	std    
  4165b4:	add    ebp,esp
  4165b6:	and    eax,0x8a1f8b9d
  4165bb:	xchg   esp,eax
  4165bc:	xor    DWORD PTR [ecx-0x50],0xbff668e8
  4165c3:	rcl    dh,1
  4165c5:	(bad)  
  4165c6:	jl     0x41662e
  4165c8:	(bad)  
  4165c9:	outs   dx,DWORD PTR ds:[esi]
  4165ca:	cdq    
  4165cb:	loop   0x4165e7
  4165cd:	dec    edi
  4165ce:	xor    eax,0x67ffc80d
  4165d3:	fwait
  4165d4:	mov    eax,ds:0xd26f106d
  4165d9:	cld    
  4165da:	fsub   QWORD PTR [esi]
  4165dc:	lock dec eax
  4165de:	add    al,0x2d
  4165e0:	cmp    dl,BYTE PTR [edi-0x42]
  4165e3:	ja     0x416592
  4165e5:	out    dx,al
  4165e6:	adc    eax,0xc9c3fe07
  4165eb:	xchg   BYTE PTR [eax+0x3e],cl
  4165ee:	sbb    eax,0xf204a283
  4165f3:	sub    eax,0x4f73f222
  4165f8:	repz push edi
  4165fa:	xlat   BYTE PTR ds:[ebx]
  4165fb:	mov    ecx,0xef74de8f
  416600:	sbb    eax,0x3e618212
  416605:	mov    dl,cl
  416607:	pop    esi
  416608:	rcr    BYTE PTR [eax],cl
  41660a:	lods   eax,DWORD PTR ds:[esi]
  41660b:	or     eax,DWORD PTR [ebx+eax*2+0x762227cf]
  416612:	mov    bh,0x26
  416614:	pop    edx
  416615:	dec    esi
  416616:	sub    BYTE PTR [esi-0x39],0xe
  41661a:	pop    ds
  41661b:	les    ebx,FWORD PTR [edi+0x1bf2d13d]
  416621:	fs mov edx,0x5af423ac
  416627:	jb     0x41663d
  416629:	daa    
  41662a:	add    BYTE PTR [edi],bl
  41662c:	xchg   dl,ah
  41662e:	mov    bl,dl
  416630:	sbb    al,0xa2
  416632:	aaa    
  416633:	out    0xd4,eax
  416635:	outs   dx,BYTE PTR ds:[esi]
  416636:	sbb    eax,0x3e335521
  41663b:	mov    bl,0xf
  41663d:	mov    eax,DWORD PTR [edi]
  41663f:	icebp  
  416640:	fiadd  DWORD PTR [eax+0x7a5ed452]
  416646:	or     eax,0x1c183c93
  41664b:	repnz cmp al,0x94
  41664e:	not    DWORD PTR [edi+0x1c1f5d57]
  416654:	mov    edx,0x7b719d46
  416659:	sbb    DWORD PTR [esi+esi*8],edi
  41665c:	mov    ebx,DWORD PTR [esi]
  41665e:	or     al,0x29
  416660:	jg     0x4166cb
  416662:	inc    eax
  416663:	pop    esp
  416664:	jnp    0x416620
  416666:	cmp    ch,BYTE PTR [edx-0x454bfd1e]
  41666c:	jmp    0x4166a9
  41666e:	jmp    0x282d:0x8289f8ad
  416675:	cmc    
  416676:	rcl    DWORD PTR [ebx+0x4206b6a2],cl
  41667c:	lahf   
  41667d:	sbb    BYTE PTR [ebp-0x1fb53f93],bl
  416683:	pop    edi
  416684:	xchg   esp,eax
  416685:	push   cs
  416686:	and    BYTE PTR [edx-0x7f5bcd8f],0x39
  41668d:	and    eax,esi
  41668f:	sub    BYTE PTR ds:0x8250ef6c,ch
  416695:	(bad)  
  416696:	xor    eax,0x485f3849
  41669b:	pushf  
  41669c:	xor    esp,DWORD PTR [ebx+edx*8]
  41669f:	sbb    DWORD PTR [ebx+0x4ce22f6e],eax
  4166a5:	dec    edi
  4166a6:	dec    edi
  4166a7:	add    BYTE PTR es:[eax],dh
  4166aa:	mov    al,0xd6
  4166ac:	mov    bh,0x15
  4166ae:	xor    al,0xe2
  4166b0:	jl     0x416659
  4166b2:	mov    esi,0x950d16b8
  4166b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166b8:	aam    0xfb
  4166ba:	xchg   edx,eax
  4166bb:	sahf   
  4166bc:	adc    DWORD PTR [edx],esp
  4166be:	and    edi,DWORD PTR [edx+0x6427bb41]
  4166c4:	(bad)  
  4166c5:	stos   DWORD PTR es:[edi],eax
  4166c6:	xchg   ebp,eax
  4166c7:	pop    eax
  4166c8:	push   0xffffffe8
  4166ca:	not    DWORD PTR [edi-0x21]
  4166cd:	and    dl,BYTE PTR [edi]
  4166cf:	jbe    0x4166e9
  4166d1:	(bad)  
  4166d2:	xchg   edi,eax
  4166d3:	sub    BYTE PTR [ebx+0x63],al
  4166d6:	nop
  4166d7:	loopne 0x41665c
  4166d9:	cmc    
  4166da:	outs   dx,DWORD PTR ds:[esi]
  4166db:	fs dec edx
  4166dd:	sub    BYTE PTR [edx+0x2738727],al
  4166e3:	stos   BYTE PTR es:[edi],al
  4166e4:	cdq    
  4166e5:	inc    eax
  4166e6:	push   esi
  4166e7:	fwait
  4166e8:	dec    ebp
  4166e9:	sub    DWORD PTR [esi-0x7f],esi
  4166ec:	push   esp
  4166ed:	ja     0x4166e5
  4166ef:	pop    esp
  4166f0:	call   0x30a7:0x2dd605fa
  4166f7:	jecxz  0x416710
  4166f9:	lods   al,BYTE PTR ds:[esi]
  4166fa:	jmp    0x41673b
  4166fc:	bound  edx,QWORD PTR ds:0xe94b402c
  416702:	sub    BYTE PTR [ebx+0x69],cl
  416705:	xchg   esp,eax
  416706:	cmp    al,BYTE PTR [edx+0x77]
  416709:	ss jns 0x416733
  41670c:	fdiv   QWORD PTR [ebp+0x0]
  41670f:	xchg   ebp,eax
  416710:	xlat   BYTE PTR ds:[ebx]
  416711:	stc    
  416712:	jmp    0x4166f3
  416714:	mov    eax,0x9fa39423
  416719:	and    ah,BYTE PTR [edx-0x7a2f53b2]
  41671f:	fmul   DWORD PTR [eax+0x27b66cf8]
  416725:	getsec 
  416727:	out    0x7f,al
  416729:	inc    edx
  41672a:	lea    edx,[eax+0x62]
  41672d:	jmp    0x4166eb
  41672f:	mov    ebx,0xc7fd248d
  416734:	mov    ebp,0x324fce86
  416739:	cmp    eax,0xc9817862
  41673e:	push   ecx
  41673f:	xchg   ebp,eax
  416740:	int    0x26
  416742:	pop    edx
  416743:	push   ebp
  416744:	jmp    0x454d:0x62a08523
  41674b:	imul   edx,DWORD PTR [ebp+0x78c9b065],0x2b
  416752:	js     0x416787
  416754:	xchg   edx,eax
  416755:	jo     0x416776
  416757:	test   al,0xc7
  416759:	fcom   DWORD PTR [edx-0x6cdb82ee]
  41675f:	sub    DWORD PTR [ecx-0x515039d6],esp
  416765:	sbb    BYTE PTR [ecx+0x7627de86],dh
  41676b:	jae    0x416711
  41676d:	out    dx,al
  41676e:	add    ebx,ebp
  416770:	scas   eax,DWORD PTR es:[edi]
  416771:	in     eax,0xf9
  416773:	xchg   esi,eax
  416774:	inc    ebx
  416775:	stos   BYTE PTR es:[edi],al
  416776:	enter  0x95f,0xde
  41677a:	dec    ebp
  41677b:	(bad)  
  41677c:	xchg   edx,eax
  41677d:	retf   0x7474
  416780:	addr16 sub eax,0x81bc4f22
  416786:	add    DWORD PTR [edx-0x45bf3a16],ebp
  41678c:	out    dx,eax
  41678d:	push   ds
  41678e:	cmp    dh,bl
  416790:	popf   
  416791:	jg     0x416731
  416793:	ud1    esi,eax
  416796:	imul   ebx,DWORD PTR [ecx],0x600244bd
  41679c:	or     eax,0x5dde9aad
  4167a1:	sti    
  4167a2:	loopne 0x41681f
  4167a4:	imul   esi,DWORD PTR ds:0xd897,0x20
  4167aa:	out    dx,al
  4167ab:	xchg   edx,eax
  4167ac:	mov    ds:0xef117caa,eax
  4167b1:	in     al,dx
  4167b2:	cmp    al,0x1
  4167b4:	hlt    
  4167b5:	mov    edx,0xc0c9dc3e
  4167ba:	mov    WORD PTR [esi+ebx*4-0x4e710270],cs
  4167c1:	imul   edi,esp,0x15
  4167c4:	rcl    DWORD PTR [esi+0x42],1
  4167c7:	mov    eax,0x425261f3
  4167cc:	leave  
  4167cd:	jno    0x416832
  4167cf:	sub    al,0x9c
  4167d1:	inc    edi
  4167d2:	xchg   esi,eax
  4167d3:	jnp    0x416785
  4167d5:	(bad)  
  4167d6:	cmp    cl,dh
  4167d8:	lahf   
  4167d9:	lock loop 0x4167c2
  4167dc:	push   ebp
  4167dd:	mov    ds:0xaa4f860,al
  4167e2:	jb     0x4167b5
  4167e4:	push   edx
  4167e5:	into   
  4167e6:	push   0x46
  4167e8:	int    0x81
  4167ea:	or     BYTE PTR [eax-0x12],dl
  4167ed:	xor    DWORD PTR [ebx-0x78],edx
  4167f0:	vprotb ymm6,[ecx+0x41],xmm6
  4167f6:	jle    0x416841
  4167f8:	push   cs
  4167f9:	in     eax,dx
  4167fa:	call   0x93af:0x1b56f6da
  416801:	fimul  WORD PTR [eax+0x4b]
  416804:	call   FWORD PTR [ebx]
  416806:	xchg   BYTE PTR [ecx+esi*4+0x36],cl
  41680a:	lods   eax,DWORD PTR ds:[esi]
  41680b:	jmp    DWORD PTR [ebx+eiz*2-0x3b]
  41680f:	aas    
  416810:	stc    
  416811:	push   edi
  416812:	pcmpgtw mm5,QWORD PTR [eax-0x73417456]
  416819:	(bad)  ds:0xc8859514
  416820:	cmp    BYTE PTR [esi+ebx*4+0xbb5d1ce],bh
  416827:	icebp  
  416828:	cmp    al,0xc
  41682a:	fcmovnb st,st(7)
  41682d:	jno    0x41680d
  41682f:	inc    eax
  416830:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416831:	test   eax,0x6dedf42e
  416836:	add    edx,DWORD PTR [edx]
  416838:	ret    
  416839:	or     ebx,edi
  41683b:	jmp    0x7092dcc7
  416840:	in     eax,0x25
  416842:	popa   
  416843:	dec    ecx
  416844:	out    0x31,eax
  416846:	sbb    eax,0xb02997be
  41684b:	sub    al,dh
  41684d:	mov    dh,0xdc
  41684f:	inc    esp
  416850:	and    bh,cl
  416852:	lock call 0xe2b1:0x5b0e12d5
  41685a:	jo     0x416848
  41685c:	fstp   TBYTE PTR [ecx]
  41685e:	adc    al,0x7a
  416860:	lea    ecx,ds:[ebx+ebp*4-0x5e]
  416865:	sub    al,0x5f
  416867:	repz gs dec esp
  41686a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41686b:	loopne 0x416829
  41686d:	sbb    ecx,DWORD PTR [edx]
  41686f:	sub    DWORD PTR [eax],esp
  416871:	bound  esi,QWORD PTR [esi-0x77]
  416874:	pusha  
  416875:	lea    esp,[ecx-0x1599e2ba]
  41687b:	in     eax,dx
  41687c:	bound  edx,QWORD PTR [edx+0x5f]
  41687f:	mov    eax,0x3231dd5
  416884:	cmc    
  416885:	xchg   ecx,eax
  416886:	cmp    esp,DWORD PTR [edi+eax*2]
  416889:	cdq    
  41688a:	mov    edi,DWORD PTR [esi]
  41688c:	fdiv   QWORD PTR [esi+eiz*2-0x419ed01]
  416893:	sbb    BYTE PTR [ebp+0x39773b77],0xc3
  41689a:	sbb    eax,0xf8ef5b18
  41689f:	jp     0x416905
  4168a1:	pop    ecx
  4168a2:	int    0xbc
  4168a4:	sar    BYTE PTR [edx],0x4
  4168a7:	ret    0x1ad
  4168aa:	cmp    eax,0x22a287c9
  4168af:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4168b1:	mov    ebp,0xcab78ff0
  4168b6:	je     0x41690a
  4168b8:	cmp    BYTE PTR ss:[edx+0x3b211340],ch
  4168bf:	and    BYTE PTR [esi-0x59],al
  4168c2:	ins    DWORD PTR es:[edi],dx
  4168c3:	mov    al,0x70
  4168c5:	add    BYTE PTR [edi+0x44],ch
  4168c8:	popf   
  4168c9:	mov    ecx,0x5e3f66c6
  4168ce:	stc    
  4168cf:	mov    eax,ds:0xd5a32f41
  4168d4:	cdq    
  4168d5:	add    ebp,DWORD PTR [esi+ecx*8-0x4b]
  4168d9:	cmp    al,0xbb
  4168db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168dc:	inc    eax
  4168dd:	int3   
  4168de:	sti    
  4168df:	xor    al,0xba
  4168e1:	or     DWORD PTR [ebx],esp
  4168e3:	jae    0x416933
  4168e5:	jno    0x416875
  4168e7:	lods   al,BYTE PTR ds:[esi]
  4168e8:	mov    DWORD PTR [edx],edi
  4168ea:	je     0x41686c
  4168ec:	stos   BYTE PTR es:[edi],al
  4168ed:	pop    ds
  4168ee:	ja     0x4168c6
  4168f0:	pop    es
  4168f1:	ds pop eax
  4168f3:	push   es
  4168f4:	mov    dl,0xe5
  4168f6:	xor    eax,0x2f150491
  4168fb:	jecxz  0x416957
  4168fd:	or     eax,0x5c1ed02c
  416902:	mov    ebp,0xd3b9f1bc
  416907:	jne    0x4168af
  416909:	sbb    BYTE PTR [ebx-0x3e16651c],dh
  41690f:	jne    0x41695c
  416911:	jle    0x4168aa
  416913:	not    BYTE PTR [edi+eax*2+0x6fe65463]
  41691a:	out    0x71,eax
  41691c:	aas    
  41691d:	(bad)  
  41691f:	(bad)  
  416920:	test   DWORD PTR [ebx+0x5c],0x44177ad8
  416927:	sub    ch,BYTE PTR [eax-0x1f]
  41692a:	jo     0x41691e
  41692c:	mov    al,ds:0x3dd9062d
  416931:	mov    dl,0xcd
  416933:	scas   al,BYTE PTR es:[edi]
  416934:	and    eax,0x63987f60
  416939:	inc    edx
  41693a:	test   dh,cl
  41693c:	ja     0x416909
  41693e:	push   eax
  41693f:	retf   0x4c62
  416942:	or     al,0xd6
  416944:	dec    edx
  416945:	adc    al,0xa0
  416948:	mov    ds:0xdd50405b,eax
  41694d:	add    al,0x9b
  41694f:	cwde   
  416950:	lock jbe 0x4169c6
  416953:	xor    cl,BYTE PTR [edi+eax*2-0x2399100c]
  41695a:	mov    esi,0x4134fe71
  41695f:	cmc    
  416960:	fmul   QWORD PTR [eax]
  416962:	sbb    ecx,edi
  416964:	dec    esi
  416965:	lock push edi
  416967:	jmp    0x83cadfc0
  41696c:	inc    esi
  41696d:	push   edi
  41696e:	mov    al,ds:0x64dd70e0
  416973:	fcomp  QWORD PTR [eax+0x1291b1f3]
  416979:	or     ax,0x2bc3
  41697d:	call   0x749e:0x8bfbbd94
  416984:	add    ebp,DWORD PTR [esi+0x7e]
  416987:	call   DWORD PTR [edi]
  416989:	fldenv [ecx]
  41698b:	inc    edx
  41698c:	mov    DWORD PTR [esi],0x69461df9
  416992:	out    dx,al
  416993:	pop    esp
  416994:	jae    0x41698b
  416996:	shl    DWORD PTR [ebx],0x92
  416999:	mov    cl,0x78
  41699b:	cmp    DWORD PTR [edi+ebx*1],0x5af975b
  4169a2:	(bad)  
  4169a3:	cld    
  4169a4:	test   DWORD PTR [eax+0x64],esp
  4169a7:	push   es
  4169a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169a9:	mov    ss:0x105cc030,al
  4169af:	leave  
  4169b0:	pop    edi
  4169b1:	dec    esp
  4169b2:	jns    0x41697a
  4169b4:	and    eax,0xc9f48eca
  4169b9:	loopne 0x416953
  4169bb:	mov    ebx,0xa4678f7b
  4169c0:	and    BYTE PTR [edi+0x64],al
  4169c3:	outs   dx,DWORD PTR ds:[esi]
  4169c4:	ret    0x4db2
  4169c7:	mov    al,BYTE PTR [edx-0x253d4854]
  4169cd:	lds    edx,FWORD PTR [ecx+0x23]
  4169d0:	loopne 0x4169e2
  4169d2:	aaa    
  4169d3:	pop    edx
  4169d4:	ss js  0x416a47
  4169d7:	push   edi
  4169d8:	ds or  eax,edi
  4169db:	inc    ebp
  4169dc:	dec    edi
  4169dd:	ins    BYTE PTR es:[edi],dx
  4169de:	lods   al,BYTE PTR ds:[esi]
  4169df:	cmc    
  4169e0:	fbld   TBYTE PTR [ecx+0x1d]
  4169e3:	lds    edi,FWORD PTR [ecx]
  4169e5:	jns    0x416a56
  4169e7:	in     eax,0x96
  4169e9:	rep ins DWORD PTR es:[edi],dx
  4169eb:	into   
  4169ec:	loop   0x4169f7
  4169ee:	jo     0x4169d6
  4169f0:	pop    edi
  4169f1:	cmp    DWORD PTR [edx-0x283c7885],eax
  4169f7:	cwde   
  4169f8:	nop
  4169f9:	mov    bh,0x44
  4169fb:	scas   eax,DWORD PTR es:[edi]
  4169fc:	loope  0x416a4e
  4169fe:	pop    ds
  4169ff:	lods   al,BYTE PTR ds:[esi]
  416a00:	sbb    bh,cl
  416a02:	test   eax,0xdabeb4c9
  416a07:	adc    eax,0x6bbab70f
  416a0c:	adc    al,0xb9
  416a0e:	ins    DWORD PTR es:[edi],dx
  416a0f:	int3   
  416a10:	pop    ss
  416a11:	pushf  
  416a12:	rol    BYTE PTR [eax+0x3a],0x5
  416a16:	pusha  
  416a17:	jb     0x416a96
  416a19:	out    0x9d,eax
  416a1b:	stos   DWORD PTR es:[edi],eax
  416a1c:	fwait
  416a1d:	pop    edi
  416a1e:	popf   
  416a1f:	fadd   QWORD PTR [eax+0xbbf926b]
  416a25:	out    dx,eax
  416a26:	aam    0xf7
  416a28:	fwait
  416a29:	lock std 
  416a2b:	xchg   DWORD PTR [esi],eax
  416a2d:	pop    ebx
  416a2e:	dec    ebx
  416a2f:	push   ecx
  416a30:	test   BYTE PTR [ecx],bh
  416a32:	popf   
  416a33:	data16 test cl,bh
  416a36:	push   esp
  416a37:	mov    esp,0x2a56e4d8
  416a3c:	sbb    al,0xce
  416a3e:	aam    0x4f
  416a40:	call   FWORD PTR [eax-0x224dda8]
  416a46:	cli    
  416a47:	lea    ecx,[eax+0x52]
  416a4a:	dec    ebp
  416a4b:	in     al,0xec
  416a4d:	dec    eax
  416a4e:	inc    eax
  416a4f:	jo     0x416a11
  416a51:	push   edx
  416a52:	sub    al,0x3c
  416a54:	mov    bl,BYTE PTR [ebx]
  416a56:	outs   dx,BYTE PTR ds:[esi]
  416a57:	mov    esp,0xc6f715a6
  416a5c:	fst    QWORD PTR [edx-0x3c8c3d0a]
  416a62:	jmp    DWORD PTR [ebx+esi*4+0x42]
  416a66:	out    dx,eax
  416a67:	mov    dl,0x9e
  416a69:	inc    ebx
  416a6a:	mov    al,ds:0x622ebf37
  416a6f:	mov    al,ds:0xc94a0c38
  416a74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a75:	into   
  416a76:	outs   dx,BYTE PTR ds:[esi]
  416a77:	(bad)  
  416a78:	or     eax,0x19f3753c
  416a7d:	pop    ss
  416a7e:	pop    ds
  416a7f:	xchg   BYTE PTR [edx],bl
  416a81:	popf   
  416a82:	js     0x416ac8
  416a84:	mov    esp,0x1c7f8254
  416a89:	mov    bh,0x5c
  416a8b:	les    esp,FWORD PTR [edx+0x5]
  416a8e:	sbb    BYTE PTR [ebx],cl
  416a90:	clc    
  416a91:	loopne 0x416a3d
  416a93:	add    ebp,ebp
  416a95:	std    
  416a96:	pusha  
  416a97:	loop   0x416a4f
  416a99:	xchg   ebp,eax
  416a9a:	pop    ebp
  416a9b:	jnp    0x416ae7
  416a9d:	stos   BYTE PTR es:[edi],al
  416a9e:	push   ss
  416a9f:	add    BYTE PTR [esi],0x78
  416aa2:	mov    ebp,0xa4e56cc2
  416aa7:	add    ecx,esi
  416aa9:	lods   al,BYTE PTR ds:[esi]
  416aaa:	enter  0x948e,0xd6
  416aae:	add    al,0xb4
  416ab0:	pop    edi
  416ab1:	inc    ecx
  416ab2:	add    esi,edx
  416ab4:	ds in  eax,dx
  416ab6:	gs dec edx
  416ab8:	stc    
  416ab9:	pop    ss
  416aba:	or     BYTE PTR ds:0x30cd3402,0xc0
  416ac1:	push   ebx
  416ac2:	arpl   WORD PTR [ebx],dx
  416ac4:	out    dx,al
  416ac5:	mov    ss,WORD PTR [edx]
  416ac7:	push   ebp
  416ac8:	nop
  416ac9:	imul   esi,DWORD PTR ds:0x4d7260ca,0xffffff8e
  416ad0:	mov    eax,ds:0x43850b4e
  416ad5:	xor    edi,DWORD PTR [eax-0x24c28236]
  416adb:	jmp    0x416b30
  416add:	cwde   
  416ade:	sbb    DWORD PTR [esi-0x3e5b9132],ebp
  416ae4:	shl    DWORD PTR [ebx+0x68],cl
  416ae7:	xchg   esp,eax
  416ae8:	xchg   BYTE PTR [edi+eax*8+0x6f6e8337],bl
  416aef:	ins    DWORD PTR es:[edi],dx
  416af0:	mov    al,0x9c
  416af2:	enter  0x5423,0xd3
  416af6:	cmp    esi,DWORD PTR [ebp-0x641ae7]
  416afc:	adc    eax,0x1c5a8579
  416b01:	mov    edi,0xa019b67c
  416b06:	cmp    BYTE PTR [ebx+eiz*1+0x5b],0x37
  416b0b:	inc    edx
  416b0c:	out    0x3c,al
  416b0e:	inc    edx
  416b0f:	sub    ebp,ecx
  416b11:	ins    DWORD PTR es:[edi],dx
  416b12:	fmul   st(1),st
  416b14:	ins    BYTE PTR es:[edi],dx
  416b15:	or     bl,BYTE PTR [eax+0x523e1b2]
  416b1b:	mov    ds:0x79e7e421,al
  416b20:	adc    eax,0xd01f0384
  416b25:	frstor [edi+0x25]
  416b28:	mov    esp,DWORD PTR [ecx-0x4e]
  416b2b:	sahf   
  416b2c:	mov    eax,0xc1406965
  416b31:	aam    0xf7
  416b33:	push   cs
  416b34:	(bad)  
  416b35:	pop    esp
  416b36:	or     BYTE PTR [edi-0x334b3b53],0xbb
  416b3d:	fcomi  st,st(3)
  416b3f:	lahf   
  416b40:	xchg   ecx,eax
  416b41:	mov    ch,0x5c
  416b43:	mov    DWORD PTR [ebx+edi*2],ebp
  416b46:	dec    ecx
  416b47:	mov    al,0x1
  416b49:	in     eax,0x77
  416b4b:	pop    ebx
  416b4c:	or     cl,BYTE PTR gs:[ecx]
  416b4f:	inc    ecx
  416b50:	jo     0x416b0b
  416b52:	sbb    ebp,DWORD PTR ss:[edi-0x42]
  416b56:	(bad)  [edx+edi*4]
  416b59:	ss mov eax,0x28b3a5bd
  416b5f:	adc    al,0x41
  416b61:	div    DWORD PTR [esi+0x19]
  416b64:	rep stos DWORD PTR es:[edi],eax
  416b66:	lods   eax,DWORD PTR ds:[esi]
  416b67:	repz xchg esi,eax
  416b69:	or     al,0x9d
  416b6b:	jmp    0xbec3:0xc3fda830
  416b72:	mov    bh,0xc1
  416b74:	lahf   
  416b75:	mov    WORD PTR [edi-0x28103f31],gs
  416b7b:	xlat   BYTE PTR ds:[ebx]
  416b7c:	pop    edi
  416b7d:	ds xor ebp,ebx
  416b80:	add    al,0xe5
  416b82:	xor    eax,0x4ebd758b
  416b87:	adc    DWORD PTR [esi+0x3110835d],eax
  416b8d:	int3   
  416b8e:	rcr    DWORD PTR [edx+0x4051249a],0x8f
  416b95:	and    ecx,0x21
  416b98:	dec    eax
  416b99:	cmp    bh,dl
  416b9b:	mov    eax,ds:0x67f06b3b
  416ba0:	mov    fs,eax
  416ba2:	neg    BYTE PTR [edx]
  416ba4:	mov    WORD PTR [esi],ds
  416ba6:	aaa    
  416ba7:	or     al,0xa0
  416ba9:	jae    0x416c21
  416bab:	mov    esp,0x70f36382
  416bb0:	pop    esp
  416bb1:	(bad)  
  416bb2:	shr    edi,1
  416bb4:	sbb    ecx,DWORD PTR ds:0xb52ae846
  416bba:	and    al,0x31
  416bbc:	mov    eax,ds:0xcb25206c
  416bc2:	stos   BYTE PTR es:[edi],al
  416bc3:	jns    0x416c33
  416bc5:	push   eax
  416bc6:	xlat   BYTE PTR ds:[ebx]
  416bc7:	and    ah,BYTE PTR [ebx]
  416bc9:	pushf  
  416bca:	stc    
  416bcb:	test   DWORD PTR [ebp+0x19d429ac],0x1188fc05
  416bd5:	lods   al,BYTE PTR ds:[esi]
  416bd6:	and    eax,DWORD PTR [ecx-0x7c]
  416bd9:	cs sbb cl,0x54
  416bdd:	repz out 0xd7,eax
  416be0:	cdq    
  416be1:	(bad)  
  416be2:	hlt    
  416be3:	pop    ds
  416be4:	into   
  416be5:	cmp    edi,esp
  416be7:	xor    al,0x15
  416be9:	outs   dx,DWORD PTR fs:[esi]
  416beb:	or     dh,BYTE PTR [edx+0x3fff40e2]
  416bf1:	pushf  
  416bf2:	adc    edi,DWORD PTR [ebx+esi*4-0x1e]
  416bf6:	enter  0xcd94,0xa
  416bfa:	cwde   
  416bfb:	push   0xffffff89
  416bfd:	lods   eax,DWORD PTR ds:[esi]
  416bfe:	cmp    ch,dh
  416c00:	xor    esi,eax
  416c02:	cmp    esi,0x61c64952
  416c08:	loope  0x416bac
  416c0a:	scas   al,BYTE PTR es:[edi]
  416c0b:	sbb    DWORD PTR [eax-0x339410e0],0xffffffde
  416c12:	add    esi,DWORD PTR [eax]
  416c14:	sub    BYTE PTR [eax],bh
  416c16:	inc    esp
  416c17:	or     BYTE PTR [edx],dl
  416c19:	xchg   ecx,eax
  416c1a:	inc    ebx
  416c1b:	pop    ss
  416c1c:	jae    0x416c21
  416c1e:	sbb    BYTE PTR [ebx+0x36],ch
  416c21:	jmp    0x902f3542
  416c26:	push   edi
  416c27:	in     eax,dx
  416c28:	mov    ds:0x549fa3f6,al
  416c2d:	push   0xffffff85
  416c2f:	inc    edx
  416c30:	sti    
  416c31:	xlat   BYTE PTR ds:[ebx]
  416c32:	and    bl,BYTE PTR [ebx-0x5516431d]
  416c38:	mov    dl,BYTE PTR [esi]
  416c3a:	clc    
  416c3b:	xchg   ebp,eax
  416c3c:	out    0x9b,eax
  416c3e:	neg    bh
  416c40:	inc    edi
  416c41:	xchg   edx,eax
  416c42:	daa    
  416c43:	add    al,0xc0
  416c45:	ins    DWORD PTR es:[edi],dx
  416c46:	nop
  416c47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c48:	xchg   esp,eax
  416c49:	add    eax,0x25af1097
  416c4e:	div    BYTE PTR [esi-0x7c9c598a]
  416c54:	test   BYTE PTR [eax+0x5a],bh
  416c57:	fs jns 0x416c70
  416c5a:	or     BYTE PTR [ebp+0x5e98df8c],cl
  416c60:	fsub   DWORD PTR [eax]
  416c62:	pop    ds
  416c63:	jg     0x416c07
  416c65:	retf   0x34af
  416c68:	sbb    ah,BYTE PTR [ecx+0x24]
  416c6b:	mov    dl,0x6a
  416c6d:	(bad)  
  416c6e:	aaa    
  416c6f:	jge    0x416ca7
  416c71:	mov    al,0xcb
  416c73:	ins    DWORD PTR es:[edi],dx
  416c74:	fwait
  416c75:	xchg   DWORD PTR [edi+0x31871b3e],ecx
  416c7b:	ins    DWORD PTR es:[edi],dx
  416c7c:	ret    0x5a2f
  416c7f:	and    BYTE PTR [eax-0x28ff6549],al
  416c85:	shl    DWORD PTR [ecx],1
  416c87:	aad    0x10
  416c89:	out    dx,eax
  416c8a:	leave  
  416c8b:	xor    ebp,eax
  416c8d:	adc    ah,BYTE PTR [ebx+0x209f503c]
  416c93:	pop    ecx
  416c94:	imul   esi,edi,0xe188572f
  416c9a:	and    DWORD PTR [ecx+0x1ac85410],eax
  416ca0:	into   
  416ca1:	lods   eax,DWORD PTR ds:[esi]
  416ca2:	sbb    edx,DWORD PTR ds:0x22c741ed
  416ca8:	add    esp,DWORD PTR [edi]
  416caa:	(bad)  
  416cab:	int3   
  416cac:	pop    edi
  416cad:	sbb    edx,esp
  416caf:	push   esp
  416cb0:	push   ebp
  416cb1:	imul   eax,ebp,0xfffffffb
  416cb4:	fdiv   DWORD PTR [esi+0x76]
  416cb7:	inc    ebp
  416cb8:	nop
  416cb9:	dec    ebp
  416cba:	jp     0x416d38
  416cbc:	mov    ds:0x237f3c6,eax
  416cc1:	sbb    ah,ah
  416cc3:	push   esp
  416cc4:	jle    0x416c6b
  416cc6:	clc    
  416cc7:	mov    eax,0x681f5be2
  416ccc:	test   eax,0xfda0048c
  416cd1:	lods   eax,DWORD PTR ds:[esi]
  416cd2:	pop    ecx
  416cd3:	cmp    BYTE PTR [edx],ch
  416cd5:	mov    dh,BYTE PTR [ecx]
  416cd7:	out    dx,al
  416cd8:	cmp    al,0xc8
  416cda:	ror    DWORD PTR [ebp+0x5d],cl
  416cdd:	gs jl  0x416c89
  416ce0:	and    eax,0x6ba46f61
  416ce5:	pop    es
  416ce6:	jmp    0x830531d3
  416ceb:	dec    edx
  416cec:	cmp    bl,BYTE PTR [esi+0x7a64d31d]
  416cf2:	mov    bl,0xb9
  416cf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416cf5:	cld    
  416cf6:	push   edi
  416cf7:	push   cs
  416cf8:	popa   
  416cf9:	pop    ecx
  416cfa:	ds sub al,0x83
  416cfd:	or     al,0x63
  416cff:	jne    0x416cd5
  416d01:	dec    esp
  416d02:	clc    
  416d03:	push   0xffffffdb
  416d05:	pushf  
  416d06:	add    DWORD PTR [edx],ebx
  416d08:	jb     0x416cfd
  416d0a:	cmp    al,0xb8
  416d0c:	ins    DWORD PTR es:[edi],dx
  416d0d:	fld1   
  416d0f:	inc    edi
  416d10:	jb     0x416d33
  416d12:	lods   al,BYTE PTR ds:[esi]
  416d13:	(bad)  
  416d14:	mov    al,ds:0xe9510e7a
  416d19:	popf   
  416d1a:	shr    DWORD PTR [edx+0x19e7ba73],1
  416d20:	addr16 in eax,0x71
  416d23:	jp     0x416d4c
  416d25:	pop    ebp
  416d26:	xchg   ebx,eax
  416d27:	cmp    bh,BYTE PTR [esi+ebx*8-0x3b0eae85]
  416d2e:	into   
  416d2f:	jg     0x416da1
  416d31:	mov    edi,0x7a80b023
  416d36:	mov    ecx,fs
  416d38:	push   esi
  416d39:	loopne 0x416da5
  416d3b:	and    edi,esp
  416d3d:	ret    
  416d3e:	mov    ebp,0x1d4e06dc
  416d43:	in     al,dx
  416d44:	(bad)  
  416d45:	cmp    al,ch
  416d47:	loop   0x416cfa
  416d49:	int    0x88
  416d4b:	in     al,0x49
  416d4d:	setbe  dl
  416d50:	repnz pop eax
  416d52:	mov    dh,0x4f
  416d54:	add    DWORD PTR [edi+0x25],ecx
  416d57:	dec    ecx
  416d58:	push   esp
  416d59:	pop    edx
  416d5a:	sub    BYTE PTR [edi+0x7acaebe],bl
  416d60:	aas    
  416d61:	mov    al,0x58
  416d63:	aam    0x19
  416d65:	xchg   ebp,eax
  416d66:	or     dl,bl
  416d68:	test   DWORD PTR [eax+eiz*2],esp
  416d6b:	stos   BYTE PTR es:[edi],al
  416d6c:	xchg   edi,eax
  416d6d:	pop    edx
  416d6f:	lea    ebp,[edx+0x56]
  416d72:	fisttp WORD PTR [edx]
  416d74:	add    DWORD PTR [ecx+0x77],edi
  416d77:	mov    bh,0x7e
  416d79:	push   ebp
  416d7a:	(bad)  
  416d7c:	pop    ecx
  416d7d:	(bad)  
  416d7e:	push   ss
  416d7f:	lock fbstp TBYTE PTR [edi+0x3e]
  416d83:	hlt    
  416d84:	jnp    0x416d74
  416d86:	retf   0xe0f7
  416d89:	mov    BYTE PTR [ebx],cl
  416d8b:	sahf   
  416d8c:	mov    edx,eax
  416d8e:	rol    BYTE PTR [eax],0xe8
  416d91:	dec    edx
  416d92:	iret   
  416d93:	cld    
  416d94:	fiadd  WORD PTR ds:0xd407506f
  416d9a:	(bad)  
  416d9b:	cmc    
  416d9c:	inc    edx
  416d9d:	int    0x6b
  416d9f:	dec    edi
  416da0:	stos   DWORD PTR es:[edi],eax
  416da1:	push   ebp
  416da2:	xor    BYTE PTR [edi],ah
  416da4:	rcl    BYTE PTR [ebx],0x94
  416da7:	mov    esi,0xee289db7
  416dac:	jmp    0x416d82
  416dae:	in     al,dx
  416daf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416db0:	aaa    
  416db1:	rcr    BYTE PTR [esi],0x6a
  416db4:	add    ebp,esp
  416db6:	lods   eax,DWORD PTR ds:[esi]
  416db7:	bound  ecx,QWORD PTR [edx-0x55]
  416dba:	ret    
  416dbb:	push   ebx
  416dbc:	pop    ebx
  416dbd:	xchg   BYTE PTR [edx-0x2b494244],dh
  416dc3:	mov    ebp,0x3d17d9e3
  416dc8:	jmp    0xaca8:0x1826280e
  416dcf:	popa   
  416dd0:	inc    bh
  416dd2:	adc    BYTE PTR [ebp-0x6d],al
  416dd5:	loop   0x416d8d
  416dd7:	pop    ds
  416dd8:	xor    al,0x9c
  416ddb:	arpl   WORD PTR [eax-0x22],bx
  416dde:	push   edi
  416ddf:	lahf   
  416de0:	div    BYTE PTR [edi+0x63cfa340]
  416de6:	aas    
  416de7:	sbb    eax,eax
  416de9:	es mov ch,0xa8
  416dec:	pop    edi
  416ded:	sbb    al,0x77
  416def:	adc    eax,0x70d9b6d7
  416df4:	sbb    ch,BYTE PTR [esi-0x9a07f5]
  416dfa:	test   al,0x1c
  416dfc:	push   edx
  416dfd:	add    eax,0xd1dd22f5
  416e02:	xor    al,0x34
  416e04:	add    DWORD PTR [edi],0x38a12afa
  416e0a:	jb     0x416e16
  416e0c:	mov    ch,0xc8
  416e0e:	add    ah,BYTE PTR [ebp+0x3c]
  416e11:	mov    bl,0x7d
  416e13:	rol    BYTE PTR ds:0x6a76,cl
  416e18:	jp     0x416de5
  416e1a:	rcr    DWORD PTR [ebp+0x3411f46b],cl
  416e20:	push   ds
  416e21:	xlat   BYTE PTR ds:[ebx]
  416e22:	sub    ah,BYTE PTR [ebx-0x78fe034e]
  416e28:	fisttp QWORD PTR es:[ecx+0x45]
  416e2c:	cmp    DWORD PTR [edx+0x7a],edx
  416e2f:	div    BYTE PTR [esi-0x1e]
  416e32:	ror    BYTE PTR [edx-0x74053ffe],0xcb
  416e39:	ins    DWORD PTR es:[edi],dx
  416e3a:	or     ch,BYTE PTR [edi+eiz*2-0x65297cab]
  416e41:	or     ah,BYTE PTR [ebp-0xf4d6124]
  416e47:	mov    edi,DWORD PTR [ecx]
  416e49:	sbb    dh,0x7d
  416e4c:	push   ebx
  416e4d:	daa    
  416e4e:	shl    DWORD PTR [edx+0x70],cl
  416e51:	jbe    0x416e94
  416e53:	je     0x416e4f
  416e55:	jne    0x416e09
  416e57:	(bad)  
  416e58:	outs   dx,BYTE PTR ds:[esi]
  416e59:	mov    al,ds:0xa6a31646
  416e5e:	xor    BYTE PTR [ebx+0x412f3651],al
  416e64:	aas    
  416e65:	loop   0x416ed3
  416e67:	add    esi,esp
  416e69:	dec    eax
  416e6a:	push   0x1b3941eb
  416e6f:	fwait
  416e70:	sbb    DWORD PTR [esi+0x30c63807],ebp
  416e76:	cmc    
  416e77:	scas   al,BYTE PTR es:[edi]
  416e78:	adc    BYTE PTR [eax-0x4d],0x88
  416e7c:	scas   al,BYTE PTR es:[edi]
  416e7d:	(bad)  
  416e7e:	and    DWORD PTR [esi-0xb07149],ecx
  416e84:	ds dec ebx
  416e86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e87:	pop    edx
  416e88:	gs xor ecx,ecx
  416e8b:	(bad)  
  416e8c:	push   edi
  416e8d:	jp     0x416e27
  416e8f:	stos   DWORD PTR es:[edi],eax
  416e90:	fst    QWORD PTR [ecx]
  416e92:	and    ebp,DWORD PTR [esp+eax*1]
  416e95:	mov    WORD PTR [edx+ebx*8-0x27],fs
  416e99:	adc    ch,bh
  416e9b:	xchg   ebp,eax
  416e9c:	fiadd  WORD PTR [esi+0x3b04f935]
  416ea2:	test   eax,0x199af39b
  416ea7:	cwde   
  416ea8:	dec    ecx
  416ea9:	popf   
  416eaa:	icebp  
  416eab:	pop    ebx
  416eac:	jmp    0xdedbcde0
  416eb1:	and    eax,0x91b5e64e
  416eb6:	out    0x7d,eax
  416eb8:	fiadd  WORD PTR [edi-0xd]
  416ebb:	cmp    al,0x6a
  416ebd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ebe:	pop    esi
  416ebf:	adc    edx,DWORD PTR [edi-0x5d]
  416ec2:	daa    
  416ec3:	mov    ch,0xab
  416ec5:	ins    BYTE PTR es:[edi],dx
  416ec6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ec7:	push   ds
  416ec8:	or     esp,DWORD PTR [edx]
  416eca:	adc    eax,0x551c2118
  416ecf:	mov    ebx,0xd47a3947
  416ed4:	ss enter 0xbbd9,0x60
  416ed9:	push   ss
  416eda:	mov    BYTE PTR [eax+eax*1],0x8f
  416ede:	in     ax,dx
  416ee0:	push   edx
  416ee1:	cdq    
  416ee2:	cwde   
  416ee3:	jnp    0x416f3a
  416ee5:	and    al,0xf8
  416ee7:	stc    
  416ee8:	pop    ecx
  416ee9:	test   eax,0xa37cb452
  416eee:	outs   dx,BYTE PTR ds:[esi]
  416eef:	test   BYTE PTR [esi],bh
  416ef1:	jnp    0x416ec4
  416ef3:	mov    al,0xa2
  416ef5:	ins    DWORD PTR es:[edi],dx
  416ef6:	cs sbb bh,al
  416ef9:	sub    DWORD PTR [ecx],edi
  416efb:	jbe    0x416f70
  416efd:	daa    
  416efe:	dec    eax
  416eff:	dec    esp
  416f00:	aaa    
  416f01:	shl    BYTE PTR [esi],0xed
  416f04:	mov    eax,ds:0x471f77d8
  416f09:	and    DWORD PTR [edx],ebx
  416f0b:	ins    BYTE PTR es:[edi],dx
  416f0c:	icebp  
  416f0d:	pop    edx
  416f0e:	cwde   
  416f0f:	cld    
  416f10:	sub    DWORD PTR [ecx-0x39],esp
  416f13:	xor    dh,BYTE PTR [edi+0x3aec74e8]
  416f19:	jp     0x416f4f
  416f1b:	into   
  416f1c:	clc    
  416f1d:	push   esi
  416f1e:	daa    
  416f1f:	loop   0x416efe
  416f21:	mov    ds:0x155f7d6b,al
  416f26:	push   esi
  416f27:	retf   
  416f28:	cld    
  416f29:	jne    0x416f8c
  416f2b:	iret   
  416f2c:	shl    cl,0x2f
  416f2f:	push   edi
  416f30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f31:	retf   
  416f32:	cmp    eax,esi
  416f34:	outs   dx,DWORD PTR ds:[esi]
  416f35:	setbe  BYTE PTR [edx-0x7f]
  416f39:	cmp    DWORD PTR [ebp-0x27],ecx
  416f3c:	shl    dh,0x6
  416f3f:	or     eax,esp
  416f41:	push   ds
  416f42:	mov    eax,0x13377a3f
  416f47:	add    cl,BYTE PTR [edi+eiz*4-0x344d0d82]
  416f4e:	sub    ebx,ebp
  416f50:	imul   esi,DWORD PTR [eax+0x979445],0x3f260a2f
  416f5a:	pop    ss
  416f5b:	add    al,0x4c
  416f5d:	lds    esi,FWORD PTR [edi]
  416f5f:	mov    dh,0x6
  416f61:	and    BYTE PTR [ecx+eax*2-0x31],bl
  416f65:	into   
  416f66:	in     al,0x30
  416f68:	push   ebp
  416f69:	pop    esi
  416f6a:	jno    0x416f8a
  416f6c:	mov    bh,0xa7
  416f6e:	or     BYTE PTR cs:[eax-0x751f2df5],0x31
  416f76:	mov    eax,0xbe782e18
  416f7b:	popf   
  416f7c:	sub    edx,DWORD PTR [ecx+eiz*2]
  416f7f:	add    cl,BYTE PTR [ebx]
  416f81:	pop    esp
  416f82:	mov    al,0xfb
  416f84:	in     eax,dx
  416f85:	and    ch,ch
  416f87:	es pop esp
  416f89:	and    DWORD PTR [edi-0x40],esp
  416f8c:	sar    esp,1
  416f8e:	aad    0x9d
  416f90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f91:	ja     0x416f1b
  416f93:	sbb    edi,ecx
  416f95:	fnstcw WORD PTR [edi]
  416f97:	shr    ecx,0xbc
  416f9a:	nop
  416f9b:	push   es
  416f9c:	and    al,0xd7
  416f9e:	ror    DWORD PTR [ebp*4-0x2090f9cc],0xac
  416fa6:	add    al,ah
  416fa8:	jmp    0x417019
  416faa:	rol    cl,cl
  416fac:	adc    dh,BYTE PTR [edx+0x37d10ca9]
  416fb2:	mov    edi,0xf0bd906
  416fb7:	push   ss
  416fb8:	outs   dx,DWORD PTR ds:[esi]
  416fb9:	out    dx,eax
  416fba:	fcom   st(0)
  416fbc:	jno    0x417033
  416fbe:	xchg   BYTE PTR [eax],cl
  416fc0:	stc    
  416fc1:	or     al,0x6f
  416fc3:	sti    
  416fc4:	sbb    DWORD PTR [esi+eiz*4+0x1f],edi
  416fc8:	sahf   
  416fc9:	test   ecx,ebx
  416fcb:	je     0x416f96
  416fcd:	out    dx,al
  416fce:	inc    ebx
  416fcf:	stos   BYTE PTR es:[edi],al
  416fd0:	pop    eax
  416fd1:	sbb    BYTE PTR [ecx],cl
  416fd3:	lahf   
  416fd4:	and    ebp,DWORD PTR ds:0x6310dff5
  416fda:	push   edx
  416fdb:	jl     0x417008
  416fdd:	inc    edi
  416fde:	dec    ecx
  416fdf:	dec    esi
  416fe0:	frstor [ecx-0x9]
  416fe3:	dec    ebp
  416fe4:	and    eax,0x15b3a20e
  416fe9:	leave  
  416fea:	jp     0x417061
  416fec:	or     DWORD PTR fs:[edi+0x26],eax
  416ff0:	pop    ss
  416ff1:	fnstenv [esi+0x2e]
  416ff4:	jg     0x416fc9
  416ff6:	retf   0x6763
  416ff9:	inc    ebx
  416ffa:	jno    0x416f82
  416ffc:	mov    cl,0x3
  416ffe:	icebp  
  416fff:	adc    dh,BYTE PTR [ecx]
  417001:	(bad)
  417004:	and    DWORD PTR [ebx-0x51],edx
  417007:	cmp    BYTE PTR [edi],bh
  417009:	push   0xf4984469
  41700e:	sbb    al,0x7c
  417010:	ret    0xa580
  417013:	mov    al,ds:0xc592c580
  417018:	rcl    dl,cl
  41701a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41701b:	or     bh,BYTE PTR [ecx+esi*2-0x3bd9e2f3]
  417022:	cmp    ecx,esp
  417024:	pop    eax
  417025:	jmp    0x41700e
  417027:	add    DWORD PTR [edi],ebx
  417029:	add    bl,BYTE PTR ds:0xbea4c9a4
  41702f:	mov    eax,gs
  417031:	mov    al,ds:0xa109fbe5
  417036:	(bad)  
  417037:	repz sbb eax,0xcf9a38f0
  41703d:	dec    edi
  41703e:	retf   0x6cd6
  417041:	imul   esp,DWORD PTR [ecx],0x9fda4b7b
  417047:	gs leave 
  417049:	leave  
  41704a:	mov    WORD PTR [edi+0x5c],es
  41704d:	cmp    DWORD PTR es:[esi],eax
  417050:	jl     0x417083
  417052:	xchg   edx,eax
  417053:	mov    bl,0xee
  417055:	or     BYTE PTR [eax+0x1830e1ba],dl
  41705b:	sbb    bh,BYTE PTR [edx-0x58]
  41705e:	mov    bh,0xe3
  417060:	xchg   esp,eax
  417061:	mov    eax,0x7ecf7bb
  417066:	icebp  
  417067:	icebp  
  417068:	stos   BYTE PTR es:[edi],al
  417069:	jno    0x4170a3
  41706b:	arpl   WORD PTR [esi-0x65],sp
  41706e:	push   ecx
  41706f:	enter  0x16c0,0x36
  417073:	pop    edi
  417074:	adc    edi,eax
  417076:	jp     0x4170be
  417078:	lds    edx,FWORD PTR [ebp+0x6ae853e4]
  41707e:	fbld   TBYTE PTR [ebp+0x66]
  417081:	js     0x417009
  417083:	ret    0x6885
  417086:	sahf   
  417087:	rcl    BYTE PTR [edi-0x2c95738c],0x71
  41708e:	pop    ds
  41708f:	adc    bh,BYTE PTR [edx]
  417091:	sbb    esp,DWORD PTR [ebx+0x237c91c6]
  417097:	or     ah,BYTE PTR [esi-0x1b]
  41709a:	sti    
  41709b:	cmp    DWORD PTR [ecx+0x18],esp
  41709e:	or     DWORD PTR [ebp-0x7e],esi
  4170a1:	mov    dh,0x32
  4170a3:	push   edx
  4170a4:	call   0xb0e5:0x5548101f
  4170ab:	stos   DWORD PTR es:[edi],eax
  4170ac:	add    ch,BYTE PTR [edi]
  4170ae:	jmp    0xab9:0xdbada2d5
  4170b5:	or     ecx,DWORD PTR [esi+eax*4+0x7b9bf7c]
  4170bc:	call   FWORD PTR [eax-0x7ed52889]
  4170c2:	mov    edx,0x448b457b
  4170c7:	popa   
  4170c8:	das    
  4170c9:	hlt    
  4170ca:	cld    
  4170cb:	pop    ds
  4170cc:	(bad)  
  4170cd:	iret   
  4170ce:	int    0x8c
  4170d0:	or     eax,0x80d26f22
  4170d5:	mov    al,0x67
  4170d7:	bound  esp,QWORD PTR [ebx-0x1b]
  4170da:	leave  
  4170db:	push   ecx
  4170dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170dd:	mov    ?,WORD PTR [eax+0x33]
  4170e0:	shl    ecx,0xb2
  4170e3:	pop    ds
  4170e4:	ror    DWORD PTR [esi],0x16
  4170e7:	in     al,dx
  4170e8:	int3   
  4170e9:	fbstp  TBYTE PTR [eax+0x76]
  4170ec:	xor    bh,BYTE PTR [edx+ebp*8+0x2f717c93]
  4170f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170f4:	cli    
  4170f5:	and    al,0x45
  4170f7:	fcomp  st(0)
  4170f9:	shl    esi,1
  4170fb:	xchg   esi,eax
  4170fc:	push   edx
  4170fd:	xchg   DWORD PTR fs:[eax],ecx
  417100:	adc    al,0xa9
  417102:	not    DWORD PTR [edi]
  417104:	sar    cl,cl
  417106:	pop    es
  417107:	lock arpl WORD PTR [edi+0x2f4819e8],di
  41710e:	gs fcmovnb st,st(0)
  417111:	outs   dx,BYTE PTR ds:[esi]
  417112:	ret    
  417113:	pop    eax
  417114:	mov    ds,WORD PTR [eax+0x4a]
  417117:	push   ss
  417118:	dec    edx
  417119:	fistp  DWORD PTR [esi]
  41711c:	add    DWORD PTR [edx+0x7c9e34fc],eax
  417122:	push   cs
  417123:	lods   eax,DWORD PTR ds:[esi]
  417124:	cwde   
  417125:	lods   eax,DWORD PTR ds:[esi]
  417126:	mov    ebp,0xa96f062f
  41712b:	(bad)  
  41712c:	mov    dl,0x4
  41712e:	xchg   esp,eax
  41712f:	dec    ebx
  417130:	dec    esp
  417131:	xchg   esp,eax
  417132:	ja     0x4171b1
  417134:	stos   BYTE PTR es:[edi],al
  417135:	pop    ecx
  417136:	xor    eax,0x2b20a15e
  41713b:	sti    
  41713c:	int    0x9a
  41713e:	out    dx,eax
  41713f:	cli    
  417140:	(bad)  
  417141:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417142:	pop    esp
  417143:	push   edx
  417144:	mov    eax,ds:0x9c39018d
  417149:	push   esi
  41714a:	je     0x41712d
  41714c:	mov    esp,0x2977b794
  417151:	(bad)  
  417152:	sub    bh,BYTE PTR [eax]
  417154:	in     eax,dx
  417155:	mov    edi,0x67dea505
  41715a:	jp     0x417125
  41715c:	dec    edx
  41715d:	test   eax,0xb7601207
  417162:	rcr    DWORD PTR [edx],0x9
  417165:	out    dx,al
  417166:	and    ebp,esp
  417168:	pop    edi
  417169:	(bad)  
  41716b:	stc    
  41716c:	mov    ecx,0x36a00d60
  417171:	je     0x417124
  417173:	pop    eax
  417174:	sub    bl,BYTE PTR [esi-0x1d]
  417177:	cld    
  417178:	loop   0x417168
  41717a:	xchg   edx,ebp
  41717c:	inc    edi
  41717d:	mov    ch,0xab
  41717f:	jnp    0x417121
  417181:	out    dx,al
  417182:	or     DWORD PTR [edx-0x7baa96f0],0xffffff99
  417189:	fldenv [ebp-0x6f]
  41718c:	lahf   
  41718d:	std    
  41718e:	dec    ebp
  41718f:	(bad)  
  417190:	scas   eax,DWORD PTR es:[edi]
  417191:	popf   
  417192:	jmp    0x38d44e5
  417197:	inc    edx
  417198:	(bad)  
  417199:	or     cl,BYTE PTR [ecx+eiz*4+0x6da269ca]
  4171a0:	mov    edi,0xa9e700e4
  4171a5:	jnp    0x417144
  4171a7:	xor    al,0xc6
  4171a9:	xor    al,0x0
  4171ab:	sar    esi,1
  4171ad:	inc    esp
  4171ae:	loopne 0x4171e7
  4171b0:	or     BYTE PTR [ecx-0x34d18d98],0x93
  4171b7:	jg     0x417195
  4171b9:	(bad)  
  4171ba:	xor    esp,ebp
  4171bc:	inc    edi
  4171bd:	inc    esp
  4171be:	pop    ss
  4171bf:	push   es
  4171c0:	xor    ah,BYTE PTR [esi+0x6cbaa510]
  4171c6:	cwde   
  4171c7:	test   dl,al
  4171c9:	mov    esi,0xf502855c
  4171ce:	dec    esi
  4171cf:	add    BYTE PTR [ebp+edi*1-0x4e],bl
  4171d3:	shl    DWORD PTR [edi+0x3d2cc4cc],0xa1
  4171da:	pop    ebx
  4171db:	(bad)
  4171df:	jae    0x41721a
  4171e1:	loope  0x41718e
  4171e3:	stos   BYTE PTR es:[edi],al
  4171e4:	psubsb mm3,QWORD PTR [eax+0x5]
  4171e8:	lods   eax,DWORD PTR ds:[esi]
  4171e9:	addr16 push cs
  4171eb:	outs   dx,BYTE PTR ds:[esi]
  4171ec:	pop    ebp
  4171ed:	xchg   DWORD PTR [ecx+0x5d],esi
  4171f0:	inc    ecx
  4171f1:	neg    BYTE PTR [edi]
  4171f3:	lea    esp,[ebx]
  4171f5:	daa    
  4171f6:	or     DWORD PTR [edi-0x6b],ebp
  4171f9:	inc    ebp
  4171fa:	fdivr  st(1),st
  4171fc:	ficom  WORD PTR [ebx+0x31]
  4171ff:	loopne 0x4171b3
  417201:	mov    esi,0xc094e61f
  417206:	pop    edx
  417207:	cmp    eax,0x29890256
  41720c:	inc    ebp
  41720d:	push   0xf2d08f04
  417212:	ret    
  417213:	sbb    al,0x16
  417215:	mov    ch,0x7
  417217:	jo     0x417283
  417219:	mov    esp,0xe92c775d
  41721e:	and    al,0xa3
  417220:	xor    al,0xb3
  417222:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417223:	mov    ah,0x95
  417225:	adc    eax,0x610646da
  41722a:	adc    DWORD PTR [edx-0x14],0xffffffb2
  41722e:	enter  0xcfbe,0xdf
  417232:	in     al,0xbf
  417234:	aad    0x82
  417236:	adc    BYTE PTR [edx],dh
  417238:	shl    DWORD PTR [eax],0x31
  41723b:	fisub  DWORD PTR [esi-0x37]
  41723e:	inc    eax
  41723f:	lea    edx,[edi+0x34]
  417242:	out    dx,eax
  417243:	test   DWORD PTR [esi-0xe123bd1],ebx
  417249:	call   0x24f8e2a7
  41724e:	and    ch,BYTE PTR [ebx]
  417250:	cmp    al,0x7a
  417252:	pop    esi
  417253:	arpl   WORD PTR [edi+0x3107916f],si
  417259:	and    ebp,DWORD PTR [eax+0x6d]
  41725c:	pushf  
  41725d:	jb     0x4172a0
  41725f:	mov    ds:0x87057e85,eax
  417264:	(bad)  
  417265:	aam    0x20
  417267:	loop   0x417274
  417269:	xchg   ebx,eax
  41726a:	cmp    BYTE PTR [edi],dh
  41726c:	fwait
  41726d:	push   esi
  41726e:	cmp    DWORD PTR [eax+ebp*8+0x66],esp
  417272:	push   ss
  417273:	adc    ch,BYTE PTR ds:0x7eb13362
  417279:	mov    edi,0xe8c83ae0
  41727e:	cmc    
  41727f:	pusha  
  417280:	xor    DWORD PTR [esi],edi
  417282:	cwde   
  417283:	dec    ecx
  417284:	aam    0xfe
  417286:	mov    eax,0xf61f66d3
  41728b:	aad    0x2c
  41728d:	mov    BYTE PTR [ebx+0x52b85739],0xc9
  417294:	and    BYTE PTR ss:[esi+eax*2+0x21eefcbf],dl
  41729c:	sub    al,0xaf
  41729e:	or     BYTE PTR [ebx+edi*4+0x3e],ah
  4172a2:	sbb    eax,0x6357e5ee
  4172a7:	xor    BYTE PTR [esi-0x58],cl
  4172aa:	inc    edi
  4172ab:	jne    0x4172f8
  4172ad:	inc    edi
  4172ae:	push   esp
  4172af:	sbb    ecx,eax
  4172b1:	adc    DWORD PTR [ecx-0x45ad43b5],0x1e5f38b2
  4172bb:	or     DWORD PTR [ebp-0x15effdbd],edx
  4172c1:	and    ebx,esi
  4172c3:	std    
  4172c4:	std    
  4172c5:	cdq    
  4172c6:	jne    0x417299
  4172c8:	jg     0x4172b6
  4172ca:	test   BYTE PTR [edx-0x3a2f5ea9],cl
  4172d0:	mov    DWORD PTR ds:0x6d4b4b67,edi
  4172d6:	xor    al,0xc6
  4172d8:	jbe    0x4172a9
  4172da:	(bad)  
  4172db:	mov    al,0x36
  4172dd:	out    dx,eax
  4172de:	ror    BYTE PTR [edx-0x1a],cl
  4172e1:	sbb    cl,ch
  4172e3:	stos   BYTE PTR es:[edi],al
  4172e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172e5:	lods   eax,DWORD PTR ds:[esi]
  4172e6:	xor    eax,DWORD PTR [edi]
  4172e8:	jno    0x41731a
  4172ea:	mov    WORD PTR [ebp-0x70036593],gs
  4172f0:	jbe    0x4172e2
  4172f2:	mov    ecx,0x843ae19a
  4172f7:	cli    
  4172f8:	fcomip st,st(0)
  4172fa:	int    0x7c
  4172fc:	shl    DWORD PTR [eax+0x3668560],1
  417302:	sbb    BYTE PTR [ebx],dh
  417304:	jp     0x4172f2
  417306:	(bad)  
  417308:	out    dx,al
  417309:	mov    bh,0x66
  41730b:	test   eax,ebp
  41730d:	retf   0x20e2
  417310:	dec    ebx
  417311:	xchg   edx,eax
  417312:	(bad)  
  417313:	imul   edi,DWORD PTR [ecx+ebp*8-0x2ebb23cd],0xffffffdd
  41731b:	jno    0x417322
  41731d:	rcr    ebp,0x98
  417320:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417321:	xor    BYTE PTR [eax],ah
  417323:	(bad)  
  417324:	jl     0x417325
  417326:	mov    al,0x21
  417328:	jge    0x4173a1
  41732a:	mov    ebx,0x98b75400
  41732f:	adc    dl,BYTE PTR [eax+0x61]
  417332:	xlat   BYTE PTR ds:[ebx]
  417333:	les    eax,FWORD PTR [ecx]
  417335:	bound  edi,QWORD PTR [eax]
  417337:	outs   dx,DWORD PTR ds:[esi]
  417338:	aam    0x1e
  41733a:	jl     0x417372
  41733c:	push   ebp
  41733d:	scas   al,BYTE PTR es:[edi]
  41733e:	add    ecx,DWORD PTR [eax+ebp*4+0x4e4ff147]
  417345:	stos   BYTE PTR es:[edi],al
  417346:	test   ah,ch
  417348:	ret    0xf971
  41734b:	jns    0x417312
  41734d:	jge    0x4173aa
  41734f:	add    DWORD PTR [eax],0x4909c388
  417355:	or     cl,bl
  417357:	mov    esp,0xdae307b7
  41735c:	adc    edx,DWORD PTR [edi]
  41735e:	add    eax,0xfb05a83f
  417363:	ffreep st(5)
  417365:	add    DWORD PTR [ebp-0x6f],edx
  417368:	rol    BYTE PTR [esi+0x2dcc761a],cl
  41736e:	imul   edx,DWORD PTR [eax+0x15],0xbb34b3d7
  417375:	cmp    edx,edx
  417377:	popf   
  417378:	pusha  
  417379:	mov    ecx,0x37418007
  41737e:	cli    
  41737f:	scas   al,BYTE PTR es:[edi]
  417380:	pop    ecx
  417381:	adc    al,0x60
  417383:	adc    BYTE PTR [esi-0x49f786be],ch
  417389:	iret   
  41738a:	push   ecx
  41738b:	add    DWORD PTR [ecx-0x27e2a6f6],ebp
  417391:	xor    al,BYTE PTR [esi+0x58]
  417394:	(bad)  
  417396:	mov    WORD PTR [edx-0x72],ds
  417399:	mov    bl,0x82
  41739b:	daa    
  41739c:	(bad)  
  41739d:	(bad)  
  41739e:	mov    ds:0x406e63ae,al
  4173a3:	(bad)  
  4173a4:	dec    ebp
  4173a5:	jns    0x4173bb
  4173a7:	shr    BYTE PTR [ecx+0x33],0xf5
  4173ab:	in     eax,0x50
  4173ad:	add    eax,0xb3f099fe
  4173b2:	retf   0x9049
  4173b5:	push   ebx
  4173b6:	jno    0x41741f
  4173b8:	xor    eax,0xa54ccdcf
  4173bd:	outs   dx,DWORD PTR ds:[esi]
  4173be:	retf   0xadb6
  4173c1:	sub    eax,0x24fe57a3
  4173c6:	pop    eax
  4173c7:	sahf   
  4173c8:	mov    cl,0x45
  4173ca:	sub    eax,DWORD PTR [esi-0x4d]
  4173cd:	push   0xffffff97
  4173cf:	pusha  
  4173d0:	les    eax,FWORD PTR [ecx+0x28]
  4173d3:	iret   
  4173d4:	mov    esp,0xaed2bd10
  4173d9:	imul   edx,DWORD PTR [edx-0x564e40ac],0x1e
  4173e0:	sub    DWORD PTR [eax+0xa21c19d],0x359a6fcb
  4173ea:	add    BYTE PTR [edi+0x8],cl
  4173ed:	xor    edi,ecx
  4173ef:	and    al,0xb7
  4173f1:	and    eax,0xf586dac9
  4173f6:	mov    edi,0x76321b47
  4173fb:	and    DWORD PTR [ebp+ebx*1-0x85cae0d],edi
  417402:	shr    BYTE PTR [ebp+0x720ebecd],1
  417408:	aam    0x1
  41740a:	(bad)
  41740e:	ret    0x38f0
  417411:	dec    eax
  417412:	adc    eax,0xfbd8ead8
  417417:	and    bh,BYTE PTR [esp+edi*8-0x46898cd2]
  41741e:	comiss xmm1,DWORD PTR [edi+0x64]
  417422:	adc    dl,bl
  417424:	adc    edi,DWORD PTR [ebp+ecx*2+0x4c8422b1]
  41742b:	outs   dx,BYTE PTR ds:[esi]
  41742c:	mov    esi,0x437d8950
  417431:	addr16 cmp al,0x36
  417434:	xor    dl,al
  417436:	rol    DWORD PTR [ecx+0x1a],cl
  417439:	push   0xffffffe8
  41743b:	and    dl,BYTE PTR [ecx+0x3f24c78c]
  417441:	std    
  417442:	lahf   
  417443:	lds    ecx,FWORD PTR [esi-0x1e]
  417446:	mov    ds:0xfd524a28,eax
  41744b:	pop    edx
  41744c:	pop    ebp
  41744d:	xor    BYTE PTR [eax+esi*4+0x23989f44],bl
  417454:	ror    DWORD PTR [eiz*8-0x48ca9e06],0xea
  41745c:	dec    edi
  41745d:	inc    ebp
  41745e:	outs   dx,DWORD PTR ds:[esi]
  41745f:	fnstcw WORD PTR [ebp-0x3d]
  417462:	out    dx,al
  417463:	idiv   BYTE PTR [edx]
  417465:	shr    DWORD PTR [esi],1
  417467:	mov    dl,0x54
  417469:	das    
  41746a:	into   
  41746b:	add    DWORD PTR [ebx+0x43ec0f9a],eax
  417471:	jmp    0x5e2a:0x10a8ce8e
  417478:	ja     0x4174da
  41747a:	jmp    0x1312:0xd2c275bc
  417481:	cli    
  417482:	push   0xeef6e73
  417487:	cmp    al,0x1b
  417489:	sbb    dh,al
  41748b:	(bad)  
  41748c:	cmp    dh,bh
  41748e:	sub    edx,ecx
  417490:	stc    
  417491:	dec    edi
  417492:	enter  0x6fca,0xd4
  417496:	dec    esp
  417497:	mov    ds:0x60213915,al
  41749c:	ja     0x41742b
  41749e:	mul    DWORD PTR [edi+0x92fcf2e]
  4174a4:	sub    BYTE PTR [ebx+0x7a],cl
  4174a7:	xchg   ebp,eax
  4174a8:	test   DWORD PTR [esp+ecx*4],0x52b4e84
  4174af:	mov    ah,0xff
  4174b1:	sti    
  4174b2:	mov    esi,0x9bb79219
  4174b7:	aaa    
  4174b8:	mov    bh,0xa4
  4174ba:	mov    ecx,0xaf3b8281
  4174bf:	cmp    eax,0x8bdc1eb2
  4174c4:	mov    al,0x82
  4174c6:	fwait
  4174c7:	(bad)  
  4174c8:	call   0x99ee4bf8
  4174cd:	ds push ebp
  4174cf:	popa   
  4174d0:	(bad)  
  4174d1:	push   edx
  4174d2:	out    dx,eax
  4174d3:	sbb    al,0x74
  4174d5:	cmc    
  4174d6:	not    BYTE PTR [ebp-0xc]
  4174d9:	mov    es,WORD PTR [esi+0x6e]
  4174dc:	jb     0x4174d1
  4174de:	scas   al,BYTE PTR es:[edi]
  4174df:	mov    ch,0x7b
  4174e1:	bound  edx,QWORD PTR [edi-0x2b15a61e]
  4174e7:	js     0x4174de
  4174e9:	push   DWORD PTR [ebp-0x71]
  4174ec:	aas    
  4174ed:	mov    al,0x54
  4174ef:	call   0x9164:0x28fcd5bf
  4174f6:	cwde   
  4174f7:	dec    esp
  4174f8:	test   BYTE PTR [ecx-0x3b],ah
  4174fb:	dec    eax
  4174fc:	int    0x74
  4174fe:	sbb    cl,bl
  417500:	fmul   QWORD PTR [eax+ecx*4]
  417503:	nop
  417504:	(bad)  
  417505:	push   cs
  417506:	xchg   edi,eax
  417507:	adc    al,0xcf
  417509:	shr    DWORD PTR [edx-0x64],0x1d
  41750d:	out    0xc8,al
  41750f:	jge    0x4174e7
  417511:	mov    WORD PTR [ebx+ecx*4],?
  417514:	mov    DWORD PTR [ebp-0x63],esp
  417517:	pushf  
  417518:	sub    al,0x14
  41751a:	xchg   esp,eax
  41751b:	jmp    0x5840cb1
  417520:	cmp    al,0xc9
  417522:	sahf   
  417523:	cwde   
  417524:	shr    DWORD PTR [ebx+0x4f],cl
  417527:	aad    0xf9
  417529:	pushf  
  41752a:	shl    DWORD PTR [esi+0x57],0xed
  41752e:	mov    ds:0x17d9ffff,al
  417533:	push   0x2fc9f6d
  417538:	ror    BYTE PTR [ebp+0x58c61288],1
  41753e:	cli    
  41753f:	cdq    
  417540:	mov    ds:0x7f090102,eax
  417545:	jne    0x417597
  417547:	pop    ebp
  417548:	xor    DWORD PTR [bp+si-0x5],edi
  41754c:	push   ecx
  41754d:	inc    esp
  41754e:	loop   0x41758a
  417550:	(bad)  
  417551:	jp     0x4175a1
  417553:	pusha  
  417554:	imul   esi,DWORD PTR [ecx+0x23],0x78
  417558:	fstp   QWORD PTR [edi+0x64]
  41755b:	shl    DWORD PTR [esi-0x6f],0xe2
  41755f:	push   esi
  417560:	push   ebp
  417561:	jns    0x41754a
  417563:	pop    edx
  417564:	mov    eax,ds:0xe8a62dc4
  417569:	aam    0xec
  41756b:	js     0x417584
  41756d:	push   es
  41756e:	mov    ah,0x76
  417570:	mov    esp,0xf56f96bf
  417575:	test   eax,0x5c6953e4
  41757a:	ja     0x4175be
  41757c:	test   dl,ch
  41757e:	mov    edi,0xad879d49
  417583:	scas   al,BYTE PTR es:[edi]
  417584:	(bad)  
  417585:	scas   eax,DWORD PTR es:[edi]
  417586:	mov    ch,0xf7
  417588:	inc    edx
  417589:	fldenv [ebp-0x13]
  41758c:	add    BYTE PTR [ecx-0x1cd721f4],0xfd
  417593:	push   es
  417594:	scas   eax,DWORD PTR es:[edi]
  417595:	fcomp  QWORD PTR [edx+0x25]
  417598:	sbb    BYTE PTR [edx+0x29a3565d],0x94
  41759f:	pusha  
  4175a0:	in     eax,dx
  4175a1:	les    ecx,FWORD PTR [eax+edi*8+0x6860eda3]
  4175a8:	push   0x2f
  4175aa:	scas   eax,DWORD PTR es:[edi]
  4175ab:	in     eax,dx
  4175ac:	pop    ss
  4175ad:	popf   
  4175ae:	sub    al,0x71
  4175b0:	std    
  4175b1:	stos   BYTE PTR es:[edi],al
  4175b2:	adc    bh,BYTE PTR ds:0x9ad0fb83
  4175b8:	les    edi,FWORD PTR [esi+0xa14abae]
  4175be:	cmp    dh,BYTE PTR [ebx-0x5b]
  4175c1:	add    eax,0x6cffb6e
  4175c6:	and    ah,BYTE PTR [eax]
  4175c8:	mov    cl,0x8f
  4175ca:	xor    eax,0xf43e576f
  4175cf:	pop    ss
  4175d0:	ins    BYTE PTR es:[edi],dx
  4175d1:	dec    edx
  4175d2:	pop    edx
  4175d3:	cmp    edi,DWORD PTR [ecx-0x78c34d01]
  4175d9:	mov    ebp,0x6462864e
  4175de:	ret    0xaea4
  4175e1:	stos   DWORD PTR es:[edi],eax
  4175e2:	adc    eax,0xd4678b5
  4175e7:	je     0x417645
  4175e9:	das    
  4175ea:	pop    ebx
  4175eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175ec:	cmp    al,0xb1
  4175ee:	sub    al,0x40
  4175f0:	or     DWORD PTR [edi],edx
  4175f2:	xchg   ebx,eax
  4175f3:	mov    ds:0x88d2191b,al
  4175f8:	mov    WORD PTR [edx+eiz*4+0x1f],?
  4175fc:	enter  0x11b8,0x77
  417600:	dec    ecx
  417601:	jp     0x4175d7
  417603:	adc    bl,BYTE PTR [edi]
  417605:	and    eax,DWORD PTR [ebx+eax*2+0x1dc56755]
  41760c:	jp     0x4175f7
  41760e:	sub    bl,BYTE PTR gs:[ebx]
  417611:	std    
  417612:	dec    ebx
  417613:	aam    0x70
  417615:	mov    edx,0xa2f9c8a8
  41761a:	(bad)  
  41761b:	mov    edx,0xbcf7ea0e
  417620:	and    BYTE PTR [ebx],al
  417622:	pop    DWORD PTR [ebx+0x6530d74f]
  417628:	sbb    eax,0x18ae5ae2
  41762d:	lahf   
  41762e:	and    eax,0x42f67c22
  417633:	mov    edi,0x59fe56a7
  417638:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417639:	push   esp
  41763a:	inc    edx
  41763b:	fs popf 
  41763d:	pop    es
  41763e:	scas   eax,DWORD PTR es:[edi]
  41763f:	repz inc ebx
  417641:	jg     0x41760c
  417643:	das    
  417644:	fidiv  WORD PTR [edx]
  417646:	lods   al,BYTE PTR ds:[esi]
  417647:	(bad)  
  417648:	in     al,0x36
  41764a:	and    DWORD PTR [ebx],ebp
  41764c:	adc    al,0xef
  41764e:	lock pop ebx
  417650:	cmp    esi,DWORD PTR [ebx+0x60]
  417653:	jl     0x41763f
  417655:	or     eax,0x4298b5fa
  41765a:	mov    edi,0x32fd7be
  41765f:	mov    edx,ebx
  417661:	mov    ch,0x2b
  417663:	adc    ecx,DWORD PTR [edx-0x25002ffc]
  417669:	sbb    al,0xa
  41766b:	aaa    
  41766c:	mov    DWORD PTR [esi-0x5c14a1a6],eax
  417672:	push   eax
  417673:	mov    ds:0xdba0591f,eax
  417678:	mov    esp,0x44382f8c
  41767d:	(bad)  
  41767e:	ins    BYTE PTR es:[edi],dx
  41767f:	mov    ss,WORD PTR [ebp+0x70]
  417682:	jne    0x417605
  417684:	pop    edi
  417685:	xchg   DWORD PTR [esi+0x1d3d99a3],esi
  41768b:	popa   
  41768c:	in     al,dx
  41768d:	or     BYTE PTR [esp+ebx*1-0x41],dh
  417691:	jle    0x41767b
  417693:	add    ebp,eax
  417695:	push   eax
  417696:	and    bl,BYTE PTR [ecx-0xf]
  417699:	cmp    edi,DWORD PTR [eax+0x38b889a6]
  41769f:	xor    ecx,DWORD PTR [eiz*8-0x3f60d069]
  4176a6:	sub    ah,cl
  4176a8:	inc    eax
  4176a9:	mov    ebp,0xb49c85dc
  4176ae:	cmc    
  4176af:	rcl    edi,cl
  4176b1:	cmp    bh,ah
  4176b3:	dec    ebx
  4176b4:	outs   dx,DWORD PTR ds:[esi]
  4176b5:	call   0x28d6:0xa83a9826
  4176bc:	retf   0x424e
  4176bf:	iret   
  4176c0:	ja     0x417737
  4176c2:	mov    edi,0xb39c8079
  4176c7:	xchg   ecx,eax
  4176c8:	lea    esp,[eax]
  4176ca:	shr    cl,0x69
  4176cd:	jge    0x4176cc
  4176cf:	push   esi
  4176d0:	push   edx
  4176d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176d2:	inc    edi
  4176d3:	jnp    0x4176a6
  4176d5:	std    
  4176d6:	shufps xmm7,XMMWORD PTR [edx+0x3659e7c2],0xd
  4176de:	push   esi
  4176df:	addr16 daa 
  4176e1:	xor    al,0x40
  4176e3:	test   edx,eax
  4176e5:	mov    ebx,0xe2ffd55
  4176ea:	repnz xor dh,ch
  4176ed:	ret    0x6362
  4176f0:	cmc    
  4176f1:	pop    edi
  4176f2:	push   ds
  4176f3:	mov    ebp,0x8e3efd16
  4176f8:	add    BYTE PTR [edi],ch
  4176fa:	cmp    cl,BYTE PTR [esi+0x42]
  4176fd:	pop    es
  4176fe:	mov    esi,0x9c9a3244
  417703:	sbb    DWORD PTR [edx+ecx*8],edx
  417706:	sahf   
  417707:	test   eax,0x4076feb9
  41770c:	cmp    edi,DWORD PTR [edx-0x18]
  41770f:	inc    ebp
  417710:	mov    esi,0x827f9557
  417715:	inc    edx
  417716:	mov    ecx,0x49771486
  41771b:	push   esp
  41771c:	add    dl,BYTE PTR [edi-0x74]
  41771f:	sbb    BYTE PTR ds:0x95a6c91f,ch
  417725:	dec    eax
  417726:	mov    edx,0x1f898236
  41772b:	push   0x5ac5b7aa
  417730:	lods   al,BYTE PTR ds:[esi]
  417731:	cmp    dl,BYTE PTR [ecx+edx*8]
  417734:	adc    eax,DWORD PTR [esp+ebp*8-0x6b]
  417738:	sbb    edi,edi
  41773a:	mov    esp,DWORD PTR [ebp+0x1d]
  41773d:	rol    DWORD PTR ss:[ecx+0x79],0x53
  417742:	fbld   TBYTE PTR [edi+0x18]
  417745:	lods   al,BYTE PTR ds:[esi]
  417746:	cmp    al,0xea
  417748:	sahf   
  417749:	jbe    0x417797
  41774b:	ror    BYTE PTR es:[eax-0x4f],cl
  41774f:	(bad)  
  417750:	xor    DWORD PTR ds:0x14ba78b1,esp
  417756:	js     0x4177a1
  417758:	ins    BYTE PTR es:[edi],dx
  417759:	lods   eax,DWORD PTR ds:[esi]
  41775a:	xor    al,0xa5
  41775c:	add    al,BYTE PTR [edx+0x50]
  41775f:	or     ch,BYTE PTR [edx-0x5ade7016]
  417765:	xchg   ecx,eax
  417766:	jbe    0x41779e
  417768:	ins    DWORD PTR es:[edi],dx
  417769:	inc    ebp
  41776a:	xchg   BYTE PTR [ebp+0x2a265516],bh
  417770:	mov    edi,0xbd55fd73
  417775:	pop    ecx
  417776:	retf   
  417777:	jg     0x417715
  417779:	aaa    
  41777a:	adc    dh,ah
  41777c:	or     BYTE PTR [eax+0x25],0xdc
  417780:	push   0x6637e26f
  417785:	loope  0x41771a
  417787:	jmp    0x4f91:0x8ad58b51
  41778e:	loopne 0x417778
  417790:	xchg   BYTE PTR [ebx],ah
  417792:	stc    
  417793:	xor    al,0x29
  417795:	mov    ch,0x19
  417797:	imul   edi,DWORD PTR [eax-0x3f9a6b79],0xffffffa2
  41779e:	ss ss xor eax,0x455e7845
  4177a5:	push   eax
  4177a6:	mov    esi,0xd64c3500
  4177ab:	pop    esi
  4177ac:	mov    ecx,0xb854d47c
  4177b1:	popa   
  4177b2:	sbb    ch,ch
  4177b4:	mov    ebp,0x37385d86
  4177b9:	inc    esp
  4177ba:	sbb    dh,BYTE PTR [esi]
  4177bc:	cmp    DWORD PTR [esi+0x70],esp
  4177bf:	pop    ecx
  4177c0:	adc    BYTE PTR [ebx-0x5a9e2910],0x2d
  4177c7:	push   ss
  4177c8:	mov    ds:0xee19b1ef,eax
  4177cd:	mov    dl,0xc4
  4177cf:	mov    eax,DWORD PTR [ebp-0x75]
  4177d2:	and    ebp,DWORD PTR [edi+0x25]
  4177d5:	and    al,0xbe
  4177d7:	ins    BYTE PTR es:[edi],dx
  4177d8:	js     0x41781a
  4177da:	retf   0xb003
  4177dd:	sbb    ecx,DWORD PTR [edi]
  4177df:	and    esi,eax
  4177e1:	mov    esp,0xe4d5cf20
  4177e6:	push   es
  4177e7:	and    al,0x7e
  4177e9:	jp     0x41781e
  4177eb:	int3   
  4177ec:	cmp    DWORD PTR [ebx],ecx
  4177ee:	sbb    al,0x91
  4177f0:	mov    dl,0xa2
  4177f2:	inc    ebx
  4177f3:	xchg   edx,eax
  4177f4:	sar    BYTE PTR [ebx*2-0x5f84ec02],1
  4177fb:	ror    dl,1
  4177fd:	pop    esi
  4177fe:	shl    DWORD PTR [eax-0x21],0xcb
  417802:	pop    edi
  417803:	enter  0xaba0,0x3d
  417807:	stos   DWORD PTR es:[edi],eax
  417808:	lahf   
  417809:	test   al,0xc5
  41780b:	mov    ch,0xb5
  41780d:	push   ds
  41780e:	mov    ecx,esp
  417810:	sbb    ebx,0xffffffd3
  417813:	cmp    eax,DWORD PTR [eax+0x43]
  417816:	ficom  DWORD PTR [esp+ecx*1+0x68]
  41781a:	cli    
  41781b:	and    DWORD PTR [ebp-0x47],ebp
  41781e:	mov    al,ds:0x11878250
  417823:	das    
  417824:	test   ecx,eax
  417826:	jle    0x417814
  417828:	stos   DWORD PTR es:[edi],eax
  417829:	adc    al,0x6
  41782b:	outs   dx,BYTE PTR ds:[esi]
  41782c:	and    BYTE PTR [edi+0x2fca0222],dh
  417832:	lods   eax,DWORD PTR ds:[esi]
  417833:	lahf   
  417834:	jbe    0x4177d5
  417836:	jecxz  0x4178a0
  417838:	jbe    0x4178b7
  41783a:	mov    eax,0x156dc480
  41783f:	fmul   QWORD PTR [edx-0x52b96170]
  417845:	and    ebp,eax
  417847:	dec    edi
  417848:	ret    
  417849:	jmp    0x31471c9e
  41784e:	jmp    DWORD PTR [edx+ecx*8+0x4c771232]
  417855:	pop    ebx
  417856:	hlt    
  417857:	(bad)  
  417858:	loopne 0x417827
  41785a:	add    edi,DWORD PTR [ecx]
  41785c:	lea    esi,[eax-0x47baa41f]
  417862:	mov    ds:0xd4e2201d,eax
  417867:	in     eax,0xff
  417869:	dec    edi
  41786a:	pop    ebx
  41786b:	(bad)  
  41786c:	sub    eax,0xd0ee32b8
  417871:	test   DWORD PTR [eax+ebx*1+0x6ff168dd],esi
  417878:	adc    BYTE PTR [eax],al
  41787a:	xchg   edx,eax
  41787b:	int    0xd4
  41787d:	push   edi
  41787e:	(bad)  
  41787f:	cmp    al,0xde
  417881:	mov    edi,0x66765add
  417886:	pop    esp
  417887:	daa    
  417888:	mov    edx,DWORD PTR [esi]
  41788a:	jmp    0x6d832749
  41788f:	arpl   WORD PTR [esi+0x2f4202d1],sp
  417895:	sbb    dl,0xdf
  417898:	mov    eax,0xa93acac2
  41789d:	fucomi st,st(4)
  41789f:	pushf  
  4178a0:	pop    es
  4178a1:	stc    
  4178a2:	adc    al,0xb3
  4178a4:	pushf  
  4178a5:	sar    DWORD PTR [ebx-0x69d3f80c],0xbb
  4178ac:	loop   0x417926
  4178ae:	mov    ebx,DWORD PTR [edi-0x20e12cf7]
  4178b4:	shl    BYTE PTR [ebx+0x67],0x9c
  4178b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178b9:	push   ss
  4178ba:	(bad)  
  4178bb:	rol    BYTE PTR [esi+0x62],cl
  4178be:	imul   ecx,esp,0x9d0e7495
  4178c4:	icebp  
  4178c5:	mov    bl,0x2f
  4178c7:	dec    edi
  4178c8:	ja     0x41788d
  4178ca:	mov    ebx,0x639e9a9c
  4178cf:	es int3 
  4178d1:	aaa    
  4178d2:	out    dx,eax
  4178d3:	fnstenv [edx+0x3b32c1a7]
  4178d9:	sub    dl,BYTE PTR [edi+0x39]
  4178dc:	inc    ecx
  4178dd:	sub    cl,bl
  4178df:	bound  ecx,QWORD PTR [ecx-0x56]
  4178e2:	stc    
  4178e3:	pop    edx
  4178e4:	nop
  4178e5:	jns    0x417964
  4178e7:	sar    ch,cl
  4178e9:	stos   DWORD PTR es:[edi],eax
  4178ea:	(bad)  
  4178eb:	add    ebx,DWORD PTR [ecx-0x27]
  4178ee:	in     al,dx
  4178ef:	frstor [esi-0x48]
  4178f2:	retf   0x96f9
  4178f5:	mov    ds:0xa0460a77,al
  4178fa:	and    dl,BYTE PTR [ebp+esi*4-0x71]
  4178fe:	lods   eax,DWORD PTR ds:[esi]
  4178ff:	gs jnp 0x417933
  417902:	dec    esi
  417903:	test   eax,0xbaa59bcb
  417908:	xchg   ecx,eax
  417909:	adc    BYTE PTR [ecx-0x1],dl
  41790c:	int    0xb7
  41790e:	add    eax,0xd173d205
  417913:	outs   dx,BYTE PTR ds:[esi]
  417914:	and    eax,0x23bc10a4
  417919:	cmp    bh,ah
  41791b:	sbb    BYTE PTR [ebp+0x40],cl
  41791e:	loop   0x4178d0
  417920:	stos   DWORD PTR es:[edi],eax
  417921:	mov    DWORD PTR ds:0xcd2d986c,eax
  417927:	sub    BYTE PTR ds:0xd3820214,bh
  41792d:	ret    
  41792e:	es popa 
  417930:	jg     0x4179a8
  417932:	cmp    al,0x97
  417934:	gs mov ebx,0xa415e022
  41793a:	pop    edx
  41793b:	fidiv  DWORD PTR [ecx+0x7e70a2b]
  417941:	push   ebx
  417942:	mov    DWORD PTR [edi],edx
  417944:	mov    bl,0xe2
  417946:	lds    ebp,FWORD PTR [ecx]
  417948:	pop    ebp
  417949:	int    0x2b
  41794b:	or     dh,0x1
  41794e:	dec    edx
  41794f:	adc    eax,0xb85716fb
  417954:	lahf   
  417955:	sub    esi,eax
  417957:	dec    esp
  417958:	push   ecx
  417959:	js     0x41791c
  41795b:	imul   ecx,DWORD PTR [ebx],0x92545467
  417961:	mov    ebx,0xcf3be494
  417966:	cmp    al,0x23
  417968:	xchg   edi,eax
  417969:	cdq    
  41796a:	or     ebp,DWORD PTR [ebx-0x7406467]
  417970:	pusha  
  417971:	(bad)  
  417972:	sub    BYTE PTR [esi],cl
  417974:	ins    DWORD PTR es:[edi],dx
  417975:	jg     0x4179c5
  417977:	iret   
  417978:	push   ecx
  417979:	push   0xffffff94
  41797b:	sbb    al,0x54
  41797d:	inc    ecx
  41797e:	dec    edi
  41797f:	jmp    0x7693631c
  417984:	or     ecx,DWORD PTR [esi+0x51196af5]
  41798a:	sub    al,0x31
  41798c:	jno    0x4179ed
  41798e:	imul   edx,DWORD PTR [edx],0xd7cb11f8
  417994:	sbb    BYTE PTR [eax],al
  417996:	push   ds
  417997:	(bad)
  41799a:	push   ecx
  41799b:	fs scas eax,DWORD PTR es:[edi]
  41799d:	mov    eax,ds:0xd5f00a32
  4179a2:	sar    BYTE PTR [edx-0x1bac8bfb],0x8c
  4179a9:	sub    eax,0xa813f6e1
  4179ae:	in     eax,dx
  4179af:	sub    DWORD PTR [edx],esp
  4179b1:	(bad)  
  4179b3:	dec    ebp
  4179b4:	push   esi
  4179b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179b6:	xchg   ecx,eax
  4179b7:	out    0x38,eax
  4179b9:	sbb    al,0xf1
  4179bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179bc:	sbb    esi,DWORD PTR [ebx+ebp*8+0x55c2a438]
  4179c3:	push   esi
  4179c4:	jg     0x4179a9
  4179c6:	loopne 0x417a19
  4179c8:	mov    dl,0x1d
  4179ca:	nop
  4179cb:	sub    esp,DWORD PTR [esi]
  4179cd:	jge    0x4179aa
  4179cf:	gs stos BYTE PTR es:[edi],al
  4179d1:	hlt    
  4179d2:	mov    ebx,0x4e87992c
  4179d7:	inc    edi
  4179d8:	pop    ebx
  4179d9:	pop    edx
  4179da:	jnp    0x417979
  4179dc:	pusha  
  4179dd:	stc    
  4179de:	cwde   
  4179df:	jmp    0x7158c4a7
  4179e4:	call   0x6817:0x77463e96
  4179eb:	push   ebx
  4179ec:	(bad)  
  4179ed:	jp     0x417a4d
  4179ef:	aam    0xd3
  4179f1:	xor    al,dl
  4179f3:	repnz (bad) 
  4179f5:	(bad)  
  4179f6:	ficomp DWORD PTR [ecx-0xded1d8d]
  4179fc:	(bad)  
  4179fd:	pop    ebx
  4179fe:	aaa    
  4179ff:	adc    cl,BYTE PTR [ebp+0x5ab2f029]
  417a05:	cmc    
  417a06:	loope  0x4179a9
  417a08:	retf   
  417a09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a0a:	lods   al,BYTE PTR ds:[esi]
  417a0b:	fs fwait
  417a0d:	pop    ds
  417a0e:	pop    ebp
  417a0f:	outs   dx,DWORD PTR ds:[esi]
  417a10:	sub    eax,0xd97ea1b9
  417a15:	bnd je 0x4179d3
  417a18:	mov    ecx,0x7847569d
  417a1d:	out    dx,eax
  417a1e:	inc    esi
  417a1f:	loopne 0x417a95
  417a21:	pop    ds
  417a22:	dec    esp
  417a23:	push   ds
  417a24:	adc    al,0x2d
  417a26:	(bad)  
  417a27:	push   0x2ff33240
  417a2c:	lea    edx,[edx+0xa]
  417a2f:	add    DWORD PTR [esi],esp
  417a31:	cdq    
  417a32:	repz cmp edx,ecx
  417a35:	pop    ebp
  417a36:	fucomi st,st(4)
  417a38:	scas   al,BYTE PTR es:[edi]
  417a39:	xor    al,0xc3
  417a3b:	pop    eax
  417a3c:	dec    ebp
  417a3e:	jecxz  0x417a11
  417a40:	fsub   QWORD PTR [ebx]
  417a42:	sahf   
  417a43:	das    
  417a44:	fwait
  417a45:	(bad)  
  417a46:	xchg   esp,eax
  417a47:	push   edx
  417a48:	mov    ds,WORD PTR [eax-0x3f]
  417a4b:	ins    BYTE PTR es:[edi],dx
  417a4c:	addr16 mov ds:0x18bb,eax
  417a50:	int    0x31
  417a52:	jecxz  0x417a33
  417a54:	ret    0x5027
  417a57:	cmp    BYTE PTR [ebx],bh
  417a59:	and    BYTE PTR [edx-0x258aaed6],bl
  417a5f:	fldenv [eax]
  417a61:	fisub  DWORD PTR [ebx-0xe]
  417a64:	inc    esp
  417a65:	pop    esp
  417a66:	clc    
  417a67:	not    BYTE PTR [ecx+0x2f89517f]
  417a6d:	dec    eax
  417a6e:	inc    ecx
  417a6f:	stos   DWORD PTR es:[edi],eax
  417a70:	outs   dx,BYTE PTR ds:[esi]
  417a71:	fwait
  417a72:	mov    eax,DWORD PTR [edi-0x45]
  417a75:	mov    ebp,ebx
  417a77:	mov    ah,dh
  417a79:	dec    eax
  417a7a:	fnstcw WORD PTR [ecx+0x59]
  417a7d:	je     0x417a39
  417a7f:	dec    edx
  417a80:	inc    esp
  417a81:	(bad)  
  417a82:	jg     0x417a80
  417a84:	in     al,0x91
  417a86:	jnp    0x417a63
  417a88:	push   es
  417a89:	add    BYTE PTR [ebx+ecx*8+0x4b],0xc0
  417a8e:	mov    BYTE PTR [ebp-0x3dddca3d],dh
  417a94:	xchg   esi,eax
  417a95:	int3   
  417a96:	dec    edx
  417a97:	mov    BYTE PTR [edx],ah
  417a99:	sbb    bh,bl
  417a9b:	add    al,0x47
  417a9d:	inc    esi
  417a9e:	sbb    eax,0xba3381f0
  417aa3:	rcr    BYTE PTR [edx-0x15],0x63
  417aa7:	mov    cl,0x8e
  417aa9:	add    al,0xdc
  417aab:	and    eax,0xe9c47c74
  417ab0:	mov    ebp,0xecea13b
  417ab5:	mov    ds,WORD PTR [esi-0x66]
  417ab8:	dec    BYTE PTR [esi-0x52]
  417abb:	pop    edx
  417abc:	repz adc al,al
  417abf:	push   edx
  417ac0:	xchg   DWORD PTR [esi-0x263fc41e],edx
  417ac6:	retf   0xed52
  417ac9:	int    0xb6
  417acb:	dec    edx
  417acc:	or     al,cl
  417ace:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417acf:	xchg   BYTE PTR [edi-0x6a54ac1],dl
  417ad5:	mov    esi,DWORD PTR [esi]
  417ad7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ad8:	inc    ebx
  417ad9:	cld    
  417ada:	cmp    esp,DWORD PTR [edi+ebp*2-0x2b]
  417ade:	loop   0x417a82
  417ae0:	std    
  417ae1:	ror    eax,1
  417ae3:	mov    edx,0xc6382cf3
  417ae8:	push   edi
  417ae9:	popf   
  417aea:	sub    al,0x9
  417aec:	ja     0x417ab0
  417aee:	mov    eax,ds:0xafa9795d
  417af3:	int    0xf1
  417af5:	adc    eax,0xfa2603e
  417afa:	jle    0x417b0f
  417afc:	(bad)  
  417afd:	loop   0x417b1f
  417aff:	mov    ds:0x55425b65,al
  417b04:	push   es
  417b05:	add    eax,0xa0c3c89c
  417b0a:	jne    0x417b02
  417b0c:	es dec edx
  417b0e:	test   BYTE PTR [ebx+0x7e6b74bc],dl
  417b14:	or     dl,BYTE PTR [esi+0x39b4d577]
  417b1a:	dec    ebp
  417b1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b1c:	dec    eax
  417b1d:	push   ss
  417b1e:	cwde   
  417b1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b20:	xlat   BYTE PTR ds:[ebx]
  417b21:	iret   
  417b22:	sub    al,0xf3
  417b24:	ds inc eax
  417b26:	retf   0xd66b
  417b29:	mov    ds:0xe3ba9cd6,eax
  417b2e:	arpl   WORD PTR [ecx+esi*8-0x44],di
  417b32:	sbb    al,BYTE PTR [edx+0x63ae4dcc]
  417b38:	push   ss
  417b39:	push   ds
  417b3a:	pop    ebp
  417b3b:	pop    ebp
  417b3c:	or     dh,BYTE PTR [ecx+esi*8+0x34]
  417b40:	daa    
  417b41:	xchg   DWORD PTR [eax+0x1eef6e7e],eax
  417b47:	jae    0x417ad7
  417b49:	jns    0x417b9e
  417b4b:	(bad)  
  417b4c:	retf   0xd84d
  417b4f:	stos   DWORD PTR es:[edi],eax
  417b50:	jle    0x417b5d
  417b52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b53:	pop    es
  417b54:	push   edi
  417b55:	lea    esi,[ecx+eax*2+0x3b]
  417b59:	cmp    BYTE PTR [esi+0x2dbdea6f],ah
  417b5f:	scas   eax,DWORD PTR es:[edi]
  417b60:	cmp    ah,BYTE PTR [edi-0x4a65f2d9]
  417b66:	or     eax,0x42f67000
  417b6b:	mov    ebp,0x6e560b4f
  417b70:	add    BYTE PTR [ebx],dl
  417b72:	sbb    al,0x2f
  417b74:	rol    DWORD PTR [ecx],0x47
  417b77:	jbe    0x417b0f
  417b79:	adc    DWORD PTR [eax],0x61
  417b7c:	fsub   DWORD PTR [edi+esi*1]
  417b7f:	pop    es
  417b80:	(bad)  
  417b81:	les    ebx,FWORD PTR [edx-0x2b69968c]
  417b87:	ret    
  417b88:	imul   bl
  417b8a:	inc    edi
  417b8b:	mov    edx,0xd2919937
  417b90:	jp     0x417b37
  417b92:	xchg   ebx,eax
  417b93:	sub    ecx,ebp
  417b95:	add    BYTE PTR [ecx],0xb4
  417b98:	rcl    ah,0xd7
  417b9b:	repz cmp eax,0x6621cdd3
  417ba1:	xchg   edi,eax
  417ba2:	xor    esp,DWORD PTR [ecx]
  417ba4:	test   eax,0x641bf2fb
  417ba9:	ds or  eax,0x4234d0b4
  417baf:	jbe    0x417bd2
  417bb1:	fadd   DWORD PTR [edi+0x41]
  417bb4:	and    DWORD PTR [edi-0x18],0xffffffbc
  417bb8:	xor    bh,cl
  417bba:	(bad)  
  417bbb:	call   0x8b698fdf
  417bc0:	mov    dh,0x71
  417bc2:	jmp    0x1991:0xb20aa742
  417bc9:	mov    DWORD PTR [ebx],ecx
  417bcb:	sub    cl,BYTE PTR [ecx+0x2eba9b20]
  417bd1:	dec    edi
  417bd2:	ret    
  417bd3:	rcl    DWORD PTR [ecx+0x49],1
  417bd6:	sbb    ecx,DWORD PTR [ecx-0xb]
  417bd9:	push   ecx
  417bda:	ja     0x417b7f
  417bdc:	ja     0x417c03
  417bde:	cdq    
  417bdf:	enter  0x3f85,0xc1
  417be3:	dec    esp
  417be4:	sub    eax,esi
  417be6:	inc    ebp
  417be7:	add    dh,dh
  417be9:	mov    eax,ds:0x650e40b9
  417bee:	ss adc eax,ebx
  417bf1:	sbb    DWORD PTR [ebx-0x1a2bf2db],ebx
  417bf7:	imul   ah
  417bf9:	test   BYTE PTR [edi+0x77],cl
  417bfc:	and    al,0xd
  417bfe:	inc    esp
  417bff:	call   0x76d22238
  417c04:	mov    ecx,0xb9afb8f0
  417c09:	ins    DWORD PTR es:[edi],dx
  417c0a:	sub    DWORD PTR [esi],eax
  417c0c:	push   edx
  417c0d:	lods   al,BYTE PTR ds:[esi]
  417c0e:	in     al,0x15
  417c10:	ds aas 
  417c12:	add    esp,DWORD PTR [edi+0xc]
  417c15:	aad    0xd3
  417c17:	pop    edi
  417c18:	sub    eax,0x5117e250
  417c1d:	aas    
  417c1e:	imul   edi,DWORD PTR [esi+eiz*1-0x33a35ca4],0x1c02b410
  417c29:	mov    dl,0xd1
  417c2b:	in     eax,0xa
  417c2d:	jns    0x417bc8
  417c2f:	sub    eax,0x908f0611
  417c34:	xor    ecx,eax
  417c36:	lea    ecx,[edx+ecx*4]
  417c39:	daa    
  417c3a:	mov    ah,0x2f
  417c3c:	dec    esi
  417c3d:	push   esi
  417c3e:	neg    BYTE PTR [esi]
  417c40:	jne    0x417c19
  417c42:	call   0x156bc144
  417c47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c48:	dec    esi
  417c49:	aad    0x7f
  417c4b:	and    dh,dh
  417c4d:	pusha  
  417c4e:	add    DWORD PTR [esi+esi*2+0x18fb5662],edx
  417c55:	mov    al,ds:0x643c0c8e
  417c5a:	dec    edx
  417c5b:	inc    eax
  417c5c:	push   edx
  417c5d:	fsubr  st(5),st
  417c5f:	mov    edx,0x6e692310
  417c64:	mov    ah,BYTE PTR [ebp-0x2a]
  417c67:	sbb    esi,DWORD PTR [esi-0x3c05be41]
  417c6d:	jae    0x417c6d
  417c6f:	and    dl,al
  417c71:	imul   ebp,DWORD PTR [eax-0x27],0x4d
  417c75:	xchg   BYTE PTR cs:[edx-0x4da960ae],bh
  417c7c:	jb     0x417cf4
  417c7e:	xor    DWORD PTR ds:0x58d722d0,esi
  417c84:	jecxz  0x417cbe
  417c86:	cmp    DWORD PTR [edx],0xffffff87
  417c89:	xchg   edi,eax
  417c8a:	sahf   
  417c8b:	ds sub al,0xee
  417c8e:	(bad)  
  417c8f:	pop    ecx
  417c90:	loop   0x417cc7
  417c92:	(bad)  
  417c93:	push   esp
  417c94:	xchg   cl,al
  417c96:	xcrypt-cbc (bad)
  417c97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c98:	push   ebp
  417c99:	cmp    eax,0x6ad1cd0a
  417c9e:	aaa    
  417c9f:	imul   edi,DWORD PTR [ebx-0x48],0x50800096
  417ca6:	add    edi,DWORD PTR [esi-0x561ea20]
  417cac:	nop
  417cad:	fidiv  DWORD PTR [ebx-0x50]
  417cb0:	int3   
  417cb1:	sbb    eax,0xbb4e2468
  417cb6:	not    DWORD PTR [ebx+0x75]
  417cb9:	popf   
  417cba:	mov    dh,0x2
  417cbc:	mov    ds:0xf7348e64,al
  417cc1:	dec    edx
  417cc2:	cld    
  417cc3:	inc    esp
  417cc4:	jecxz  0x417cab
  417cc6:	xor    eax,0x2ee5cafc
  417ccb:	or     eax,0x9507b7d6
  417cd0:	jo     0x417cc2
  417cd2:	dec    ebx
  417cd3:	pop    ss
  417cd4:	in     eax,0x1c
  417cd6:	call   0x5a0ee973
  417cdb:	pop    eax
  417cdc:	cmp    cl,BYTE PTR [eax+ecx*8-0x7c]
  417ce0:	xchg   BYTE PTR [eax+eax*4+0x2e76157a],bh
  417ce7:	pop    eax
  417ce8:	sbb    bh,bh
  417cea:	(bad)  
  417ceb:	pop    ds
  417cec:	inc    edi
  417ced:	push   ebp
  417cee:	push   0xfffffff0
  417cf0:	sbb    cl,BYTE PTR [ebp-0x74]
  417cf3:	mov    eax,ds:0x284615b3
  417cf8:	mov    bh,0x23
  417cfa:	sbb    ah,BYTE PTR [esi-0x5ae36e2b]
  417d00:	mov    ebp,0xf9dcc01a
  417d05:	mov    eax,ds:0xa3319cc6
  417d0a:	bound  ebx,QWORD PTR [edx+0x8]
  417d0d:	mov    al,ds:0xb693c2eb
  417d12:	lea    ebx,[ebp+0x7e]
  417d15:	pop    esp
  417d16:	out    0xb1,eax
  417d18:	inc    edi
  417d19:	mov    al,0xd6
  417d1b:	fnsave [ebx+ecx*2-0x438be957]
  417d22:	jg     0x417d71
  417d24:	push   es
  417d25:	jbe    0x417da3
  417d27:	add    al,0xbb
  417d29:	xchg   ebp,eax
  417d2a:	mov    cl,0x78
  417d2c:	pop    ebx
  417d2d:	dec    eax
  417d2e:	in     eax,dx
  417d2f:	dec    esi
  417d30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d31:	scas   eax,DWORD PTR es:[edi]
  417d32:	push   edx
  417d33:	jo     0x417cec
  417d35:	push   DWORD PTR [ebx-0x582eb518]
  417d3b:	push   cs
  417d3c:	pop    es
  417d3d:	(bad)  
  417d3e:	xchg   esi,eax
  417d3f:	sub    sp,bp
  417d42:	scas   eax,DWORD PTR es:[edi]
  417d43:	mov    ds:0x8f97d14,eax
  417d48:	adc    edx,esp
  417d4a:	xchg   esi,eax
  417d4b:	les    ebx,FWORD PTR [esi-0x5157a8fd]
  417d51:	retf   
  417d52:	lahf   
  417d53:	mov    bl,0xa1
  417d55:	jg     0x417d7d
  417d57:	mov    ch,0x13
  417d59:	dec    edx
  417d5a:	in     al,dx
  417d5b:	add    eax,0x3b4c0fe1
  417d60:	dec    ecx
  417d61:	lods   al,BYTE PTR ds:[esi]
  417d62:	and    BYTE PTR [esi],ah
  417d64:	mov    al,ds:0x3c61436c
  417d69:	ret    
  417d6a:	mov    dh,0xa
  417d6c:	add    eax,0x68791ffe
  417d71:	lods   al,BYTE PTR ds:[esi]
  417d72:	inc    ebx
  417d73:	mov    ch,0x1e
  417d75:	jge    0x417d34
  417d77:	leave  
  417d78:	mov    ds:0x8cb28917,eax
  417d7d:	adc    DWORD PTR [ecx+0x3],0x88668ad2
  417d84:	and    al,0x63
  417d86:	pop    edx
  417d87:	es mov cl,0xf0
  417d8a:	in     eax,0x27
  417d8c:	jo     0x417d72
  417d8e:	ins    BYTE PTR es:[edi],dx
  417d8f:	int    0x27
  417d91:	ficomp DWORD PTR [ebx+eiz*2]
  417d94:	jmp    0x4f9e9331
  417d99:	push   es
  417d9a:	pop    esi
  417d9b:	or     BYTE PTR [edi+0x7089e864],0xf6
  417da2:	repnz adc ah,BYTE PTR [esi+0x5a406ec5]
  417da9:	outs   dx,DWORD PTR ds:[esi]
  417daa:	jmp    0x8fbd:0xe5a81efd
  417db1:	fnsave [edi+0x7a]
  417db4:	fiadd  WORD PTR [esi-0x25]
  417db7:	mov    al,ds:0x4ea93ed0
  417dbc:	sbb    BYTE PTR [ecx],dl
  417dbe:	scas   al,BYTE PTR es:[edi]
  417dbf:	sub    DWORD PTR [edx*2-0x70657a2a],0x13
  417dc7:	aad    0x59
  417dc9:	or     ebp,DWORD PTR [ebp+0x57]
  417dcc:	jl     0x417dbd
  417dce:	add    ecx,eax
  417dd0:	xor    BYTE PTR [ebx-0x5ba6e59],bl
  417dd6:	or     eax,0xed456bd9
  417ddb:	sbb    ebp,DWORD PTR [edx-0x39668b41]
  417de1:	mov    ah,ch
  417de3:	(bad)  
  417de4:	fnstenv [eax-0x53]
  417de7:	pop    ds
  417de8:	lahf   
  417de9:	shl    BYTE PTR [eax-0x42],cl
  417dec:	ror    dh,1
  417dee:	in     eax,0x53
  417df0:	xchg   BYTE PTR [esi-0x12],cl
  417df3:	mov    dh,0x69
  417df5:	dec    esi
  417df6:	(bad)  
  417df7:	outs   dx,DWORD PTR ds:[esi]
  417df8:	sbb    DWORD PTR [ecx+0x3b],0x8d775e7d
  417dff:	test   eax,0xbd876ba9
  417e04:	mov    ah,dl
  417e06:	dec    edi
  417e07:	int    0xd2
  417e09:	ins    BYTE PTR es:[edi],dx
  417e0a:	and    BYTE PTR [eax],ch
  417e0c:	pusha  
  417e0d:	add    edi,DWORD PTR [bx]
  417e10:	aad    0x58
  417e12:	std    
  417e13:	out    0x4,eax
  417e15:	or     cl,BYTE PTR [esi-0x712c3c60]
  417e1b:	int3   
  417e1c:	ja     0x417dff
  417e1e:	mov    ebp,0x23728d54
  417e23:	inc    ah
  417e25:	jb     0x417e35
  417e27:	mov    bl,0x63
  417e29:	jae    0x417e0f
  417e2b:	cld    
  417e2c:	jbe    0x417e12
  417e2e:	sub    al,0x89
  417e30:	int    0x12
  417e32:	in     al,0xe7
  417e34:	nop
  417e35:	sar    BYTE PTR [edi+0x51b55f06],0xeb
  417e3c:	or     eax,0x4076a64
  417e41:	bound  edx,QWORD PTR [esi-0x2cee371d]
  417e47:	pop    ebx
  417e48:	or     eax,0x730d9ff3
  417e4d:	push   esi
  417e4e:	test   BYTE PTR [esi],0xb7
  417e51:	adc    cl,BYTE PTR [esi]
  417e53:	jl     0x417e74
  417e55:	pop    esi
  417e56:	push   es
  417e57:	leave  
  417e58:	mov    esp,0x2276f5ce
  417e5d:	ss out dx,eax
  417e5f:	not    DWORD PTR [esi+ecx*2-0x53]
  417e63:	dec    ecx
  417e64:	add    cl,bh
  417e66:	mov    BYTE PTR [esi+0x59c0f6b6],0xb7
  417e6d:	mov    ah,0x12
  417e6f:	repnz into 
  417e71:	dec    ebx
  417e72:	outs   dx,DWORD PTR ds:[esi]
  417e73:	or     al,0x7a
  417e75:	jae    0x417e88
  417e77:	mov    BYTE PTR [edx],ch
  417e79:	scas   eax,DWORD PTR es:[edi]
  417e7a:	ror    DWORD PTR [edx-0x559e3831],1
  417e80:	test   eax,0x76e06963
  417e85:	or     dl,BYTE PTR [edx+0x32]
  417e88:	imul   ebp,DWORD PTR [esi+0x19],0xffffffe3
  417e8c:	mov    ebp,0x23314619
  417e91:	(bad)  
  417e92:	stc    
  417e93:	out    0xee,eax
  417e95:	ins    BYTE PTR es:[edi],dx
  417e96:	sub    BYTE PTR [edx],dh
  417e98:	and    al,0x61
  417e9a:	mov    esi,0x6c2b4a31
  417e9f:	test   DWORD PTR [esi-0x5acb0a46],esi
  417ea5:	mov    bl,0xae
  417ea7:	dec    esp
  417ea8:	sub    eax,0x343c86c9
  417ead:	(bad)
  417eb1:	jecxz  0x417ec8
  417eb3:	lods   eax,DWORD PTR ds:[esi]
  417eb4:	je     0x417f26
  417eb6:	dec    dx
  417eb8:	mov    edi,0xd63eb6d9
  417ebd:	jmp    0xe963:0x15f343aa
  417ec4:	retf   
  417ec5:	dec    edx
  417ec6:	push   0xffffff95
  417ec8:	mov    dl,BYTE PTR [edi+eax*4-0x7e]
  417ecc:	test   BYTE PTR [edx-0x148ce451],cl
  417ed2:	sbb    DWORD PTR [ebx+0x51],ecx
  417ed5:	xchg   esp,eax
  417ed6:	jmp    0xcdf70122
  417edb:	add    eax,0xeb12e045
  417ee0:	xor    dh,dh
  417ee2:	in     eax,0xdd
  417ee4:	sbb    edx,DWORD PTR [ebp-0x18a81092]
  417eea:	cdq    
  417eeb:	cs aaa 
  417eed:	xchg   esi,eax
  417eee:	cmp    al,0x8d
  417ef0:	in     eax,0xe1
  417ef2:	xchg   ebx,eax
  417ef3:	mov    al,ds:0x5f84b733
  417ef8:	arpl   sp,bp
  417efa:	sahf   
  417efb:	stos   DWORD PTR es:[edi],eax
  417efc:	je     0x417e82
  417efe:	mov    dl,0x29
  417f00:	dec    esi
  417f01:	retf   0x5771
  417f04:	xlat   BYTE PTR ds:[ebx]
  417f05:	and    eax,0xb9450c71
  417f0a:	pop    ebp
  417f0b:	cdq    
  417f0c:	push   DWORD PTR [ecx]
  417f0e:	movnti DWORD PTR [eax+0x52043f3e],ebx
  417f15:	xor    dh,BYTE PTR [ecx-0x72]
  417f18:	mov    ecx,0xaf09f746
  417f1d:	pushf  
  417f1e:	sahf   
  417f1f:	push   ecx
  417f20:	adc    BYTE PTR ds:0xfee93ec0,ch
  417f26:	div    DWORD PTR [edx+0x24]
  417f29:	test   eax,0xaa16ff5b
  417f2e:	ror    DWORD PTR [eax+eax*8-0x1ddfcd68],cl
  417f35:	int3   
  417f36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f37:	test   al,0x44
  417f39:	in     al,dx
  417f3a:	mov    ch,0x88
  417f3c:	inc    ebx
  417f3d:	jg     0x417fb1
  417f3f:	jb     0x417f40
  417f41:	cld    
  417f42:	sub    DWORD PTR [eax+0x4b],ebx
  417f45:	jne    0x417f0f
  417f47:	out    0xdc,al
  417f49:	add    DWORD PTR [ecx-0x4433fb34],ecx
  417f4f:	icebp  
  417f50:	js     0x417f85
  417f52:	add    eax,0xf8bbca63
  417f57:	or     ebx,edi
  417f59:	fs leave 
  417f5b:	std    
  417f5c:	inc    ecx
  417f5d:	sbb    BYTE PTR [edx+esi*4-0x6b],dh
  417f61:	imul   edx,DWORD PTR [eax],0x42
  417f64:	cs xchg ebp,eax
  417f66:	ror    DWORD PTR [edi+0x7f29054c],cl
  417f6c:	(bad)  
  417f6d:	enter  0x27f0,0xdf
  417f71:	and    ecx,DWORD PTR [ebx-0x329b3fd7]
  417f77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f78:	adc    DWORD PTR [edi-0xaed1852],esi
  417f7e:	add    BYTE PTR [ecx+eiz*4],bl
  417f81:	jp     0x417f3f
  417f83:	xor    al,0xa3
  417f85:	popa   
  417f86:	sub    bl,cl
  417f88:	dec    ecx
  417f89:	jg     0x417f18
  417f8b:	push   eax
  417f8c:	push   cs
  417f8d:	push   edi
  417f8e:	sbb    DWORD PTR [edi],0xffffffb9
  417f91:	bt     eax,eax
  417f94:	aas    
  417f95:	js     0x417f87
  417f97:	repz pop edx
  417f99:	xor    eax,0x8a2baa24
  417f9e:	mov    eax,ds:0xfed94832
  417fa3:	std    
  417fa4:	rcr    DWORD PTR [ecx+0x39f1a297],1
  417faa:	add    BYTE PTR [edx+ecx*1],ah
  417fad:	daa    
  417fae:	inc    eax
  417faf:	pop    ebp
  417fb0:	dec    DWORD PTR [ebx+0x79]
  417fb3:	xor    DWORD PTR [edx],esi
  417fb5:	jbe    0x417f3c
  417fb7:	idiv   BYTE PTR [esi]
  417fb9:	lock mov ah,0xf
  417fbc:	gs jg  0x418031
  417fbf:	test   BYTE PTR [ebx-0x49],bh
  417fc2:	in     al,dx
  417fc3:	mov    BYTE PTR [edi],ch
  417fc5:	push   ecx
  417fc6:	fistp  WORD PTR [ebp-0x2f81e995]
  417fcc:	pop    ss
  417fcd:	jbe    0x41802e
  417fcf:	cmp    eax,DWORD PTR [eax+0x34]
  417fd2:	lahf   
  417fd3:	jno    0x418016
  417fd5:	leave  
  417fd6:	xchg   BYTE PTR [esi+0xce0beb1],cl
  417fdc:	(bad)  
  417fde:	jge    0x417fb2
  417fe0:	mov    ds:0xe5a31b92,eax
  417fe5:	es pop esi
  417fe7:	cmp    al,0x15
  417fe9:	loopne 0x41803f
  417feb:	fidivr WORD PTR [ecx+eiz*1+0x3991d5a6]
  417ff2:	bound  ebp,QWORD PTR [ebx]
  417ff4:	push   ecx
  417ff5:	daa    
  417ff6:	test   BYTE PTR [edi+0xacfef74],dl
  417ffc:	out    dx,al
  417ffd:	jle    0x417ff4
  417fff:	adc    bh,ah
  418001:	loope  0x417fe3
  418003:	or     ebx,DWORD PTR [eax]
  418005:	(bad)  
  418006:	sbb    edi,eax
  418008:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418009:	pop    ebx
  41800a:	aas    
  41800b:	xor    eax,0xae24433d
  418010:	xchg   BYTE PTR [ebx+0x61],bl
  418013:	loop   0x41802d
  418015:	xor    eax,edx
  418017:	rcl    DWORD PTR [ecx-0x7a33bda6],1
  41801d:	jno    0x418061
  41801f:	aad    0x60
  418021:	ror    ecx,0xf7
  418024:	mov    sp,0xf3cb
  418028:	stc    
  418029:	dec    ebx
  41802a:	dec    ebx
  41802b:	ins    DWORD PTR es:[edi],dx
  41802c:	mov    ecx,0x42cb4fee
  418031:	mov    eax,ds:0x4108834c
  418036:	jno    0x417fb9
  418038:	mov    cl,0x90
  41803a:	idiv   BYTE PTR [ecx+0x76fc9a67]
  418040:	push   ebx
  418041:	ret    
  418042:	hlt    
  418043:	sti    
  418044:	xchg   esp,eax
  418045:	out    dx,al
  418046:	xchg   edi,eax
  418047:	adc    dh,BYTE PTR [edi-0xb275791]
  41804d:	xor    al,0x69
  41804f:	mov    dh,0x39
  418051:	stos   BYTE PTR es:[edi],al
  418052:	mov    al,ds:0xb055da8d
  418057:	add    esi,eax
  418059:	dec    esi
  41805a:	ret    0xccd0
  41805d:	ins    BYTE PTR es:[edi],dx
  41805e:	jnp    0x4180ac
  418060:	cmp    al,0x5d
  418062:	xor    al,0xbb
  418064:	lock adc al,BYTE PTR [esi-0x45]
  418068:	jge    0x418051
  41806a:	mov    ebx,0xaf488d9f
  41806f:	sbb    dl,cl
  418071:	xchg   esi,eax
  418072:	ret    
  418073:	xchg   esp,eax
  418074:	mov    ebx,0xd9f03e80
  418079:	fcomp  st(5)
  41807b:	repz inc eax
  41807d:	xchg   esi,eax
  41807e:	or     ebx,DWORD PTR [ebx]
  418080:	retf   
  418081:	and    al,0x54
  418083:	scas   eax,DWORD PTR es:[edi]
  418084:	sbb    eax,0x9374cb4f
  418089:	stos   DWORD PTR es:[edi],eax
  41808a:	push   eax
  41808b:	in     al,0xd8
  41808d:	mov    esp,0x49459f37
  418092:	aam    0xbe
  418094:	mov    ebx,0x22776201
  418099:	retf   0x9254
  41809c:	pop    esi
  41809d:	fcomp  DWORD PTR [esi+0x68]
  4180a0:	xor    eax,0x3cdbca24
  4180a5:	retf   0x5ba4
  4180a8:	rcr    esp,1
  4180aa:	retf   
  4180ab:	mov    eax,ds:0x2876fb02
  4180b0:	sub    DWORD PTR [ecx+0x3474b936],edx
  4180b6:	(bad)  
  4180b7:	push   ebp
  4180b8:	xchg   esi,eax
  4180b9:	ret    0x2f0a
  4180bc:	fmul   QWORD PTR [ebp+0x1831bef5]
  4180c2:	test   BYTE PTR [eax-0x44ac52f4],bh
  4180c8:	mov    esp,ss
  4180ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180cb:	mov    edi,0xf98d7642
  4180d0:	xchg   BYTE PTR ds:0xb36b25a4,dl
  4180d6:	inc    eax
  4180d7:	enter  0xec32,0x8d
  4180db:	in     al,dx
  4180dc:	and    al,0xa2
  4180de:	test   eax,0xa9306b6a
  4180e3:	mov    edx,edx
  4180e5:	rcl    BYTE PTR [edx-0x2e],0x7c
  4180e9:	pop    ecx
  4180ea:	out    dx,eax
  4180eb:	rcl    BYTE PTR [esi+0x2dec31fa],1
  4180f1:	inc    ebx
  4180f2:	sbb    BYTE PTR [ecx],bl
  4180f4:	outs   dx,DWORD PTR ds:[esi]
  4180f5:	mov    dh,0xb5
  4180f7:	das    
  4180f8:	adc    esp,DWORD PTR [edx]
  4180fa:	aad    0x4f
  4180fc:	test   DWORD PTR cs:0xe26a2a0d,ebx
  418103:	inc    ecx
  418104:	outs   dx,DWORD PTR ds:[esi]
  418105:	jg     0x418153
  418107:	in     eax,0xff
  418109:	xchg   ecx,eax
  41810a:	sbb    ebx,ecx
  41810c:	sbb    eax,ebx
  41810e:	xchg   ecx,eax
  41810f:	stos   BYTE PTR es:[edi],al
  418110:	dec    edx
  418111:	dec    edi
  418112:	cmp    DWORD PTR [eax-0x26860482],ebx
  418118:	ret    
  418119:	and    esp,DWORD PTR [esi]
  41811b:	mov    ebp,0x9683d701
  418120:	mov    BYTE PTR [ebp+0x1dc66468],bh
  418126:	ror    DWORD PTR [esi+0x1d],cl
  418129:	aad    0xd6
  41812b:	fnclex 
  41812d:	xor    al,0xd9
  41812f:	ins    BYTE PTR es:[edi],dx
  418130:	inc    esp
  418131:	call   0x37736fff
  418136:	cmp    ebp,DWORD PTR [edx+0x77]
  418139:	push   cs
  41813a:	push   esp
  41813b:	dec    ecx
  41813c:	ror    DWORD PTR [edx+eiz*4-0x550eaf42],0x7b
  418144:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418145:	fdivr  QWORD PTR [eax]
  418147:	push   edi
  418148:	ins    DWORD PTR es:[edi],dx
  418149:	pop    ebx
  41814a:	(bad)  
  41814b:	scas   al,BYTE PTR es:[edi]
  41814c:	push   ebx
  41814d:	mov    ch,0x62
  41814f:	jmp    0x8c16:0xb2f0fc13
  418156:	jp     0x4180fd
  418158:	fisub  WORD PTR [eax+0x263cc43b]
  41815e:	ins    DWORD PTR es:[edi],dx
  41815f:	out    dx,al
  418160:	shl    DWORD PTR [ecx+ebx*1+0x1df5edc6],0x56
  418168:	outs   dx,BYTE PTR ds:[esi]
  418169:	(bad)  [eax+0x4885e921]
  41816f:	sbb    al,0x9d
  418171:	imul   edi,DWORD PTR [eax],0x4f
  418174:	aas    
  418175:	(bad)  
  418176:	test   DWORD PTR [eax-0x49],0x83c5b3ac
  41817d:	pop    edi
  41817e:	fwait
  41817f:	xor    DWORD PTR [esi-0x26373ed7],eax
  418185:	dec    ecx
  418186:	out    0xd1,eax
  418188:	out    0xac,eax
  41818a:	out    dx,al
  41818b:	cmp    al,bl
  41818d:	(bad)  
  41818e:	int3   
  41818f:	outs   dx,DWORD PTR ds:[esi]
  418190:	xchg   si,ax
  418192:	mov    al,ds:0xb921b358
  418197:	adc    DWORD PTR [ecx],ecx
  418199:	add    edi,edi
  41819b:	inc    edx
  41819c:	test   eax,0x9edb8932
  4181a1:	jnp    0x4181f6
  4181a3:	dec    ecx
  4181a4:	xchg   edx,eax
  4181a5:	mov    al,ds:0xe034ae66
  4181aa:	daa    
  4181ab:	mov    dh,0x5b
  4181ad:	ins    DWORD PTR es:[edi],dx
  4181ae:	imul   edx,eax,0x1f51aecc
  4181b4:	retf   0x6750
  4181b7:	lock aam 0x74
  4181ba:	xlat   BYTE PTR ds:[ebx]
  4181bb:	add    al,0x4
  4181bd:	jne    0x4181be
  4181bf:	inc    ebx
  4181c0:	stos   DWORD PTR es:[edi],eax
  4181c1:	(bad)  
  4181c2:	aad    0xfc
  4181c4:	push   0x80a22fe2
  4181c9:	xchg   esp,eax
  4181ca:	stc    
  4181cb:	jno    0x4181ca
  4181cd:	jle    0x418212
  4181cf:	int    0xd2
  4181d1:	fidiv  WORD PTR [ebx]
  4181d3:	fdiv   QWORD PTR ds:[edi]
  4181d6:	int3   
  4181d7:	pop    ecx
  4181d8:	popf   
  4181d9:	mov    edx,0x1cd84bb5
  4181de:	test   eax,0xcf2318da
  4181e3:	xor    DWORD PTR [eax-0x1b],ecx
  4181e6:	pop    edi
  4181e7:	xchg   edi,eax
  4181e8:	les    edi,FWORD PTR [ecx-0x6638f9de]
  4181ee:	inc    esp
  4181ef:	js     0x4181de
  4181f1:	add    eax,0xcd914a1f
  4181f6:	push   ds
  4181f7:	jmp    0x5591:0xb5c0d6ef
  4181fe:	xor    ebp,DWORD PTR [ebp+ebp*1-0x50]
  418202:	into   
  418203:	(bad)  
  418204:	add    esi,DWORD PTR [ecx+0x7a]
  418207:	jmp    0x4181b6
  418209:	fadd   QWORD PTR ds:0x940912b9
  41820f:	aas    
  418210:	icebp  
  418211:	(bad)  [ebx-0x50]
  418214:	lahf   
  418215:	xchg   ebx,eax
  418216:	xchg   edi,eax
  418217:	mov    esi,DWORD PTR [ecx]
  418219:	jb     0x418211
  41821b:	mov    DWORD PTR [ecx+0x46fbe9e1],ebp
  418221:	repnz in eax,0x56
  418224:	test   BYTE PTR [ecx-0x493d287e],cl
  41822a:	add    DWORD PTR [ebx-0x1b],0xc1088866
  418231:	in     al,dx
  418232:	pop    ds
  418233:	sbb    BYTE PTR [ebx],al
  418235:	jmp    0x825b:0xeae665ad
  41823c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41823d:	adc    eax,0x4e71c24c
  418242:	jno    0x4181f1
  418244:	and    ch,bh
  418246:	push   edx
  418247:	test   eax,0xb0238279
  41824c:	and    eax,0x9bcfd73f
  418251:	xchg   DWORD PTR [edi+eiz*1],eax
  418254:	fld    DWORD PTR [edi+eax*4+0x1d]
  418258:	call   0x7008:0x5a9d7dfb
  41825f:	mov    al,ds:0xa4e42c77
  418264:	sar    BYTE PTR [ecx-0x362f8af7],0xf9
  41826b:	add    edx,DWORD PTR [ebx]
  41826d:	mov    bl,0x54
  41826f:	mov    esp,0x8660bd09
  418274:	jle    0x418221
  418276:	xor    BYTE PTR [ebp+0x19c458a4],0xf7
  41827d:	inc    edx
  41827e:	and    eax,0x34072f59
  418283:	mov    edi,0xdb910076
  418288:	adc    al,0x90
  41828a:	mov    bh,0x3b
  41828c:	and    BYTE PTR [edi+0x35ca9cd5],cl
  418292:	mov    esi,0xbe72ad08
  418297:	in     eax,0x3
  418299:	jbe    0x41825e
  41829b:	mov    bh,0x77
  41829d:	mov    ds:0x2af01062,eax
  4182a2:	ss jmp 0x7cb29dd8
  4182a8:	(bad)  [esi-0x10]
  4182ab:	push   cs
  4182ac:	in     al,0xeb
  4182ae:	repz and al,0xbd
  4182b2:	dec    esi
  4182b3:	xchg   esp,eax
  4182b4:	sbb    dl,BYTE PTR [edx-0x6b059ad3]
  4182ba:	mov    eax,ds:0x5b0533de
  4182bf:	push   esp
  4182c0:	or     al,0x6f
  4182c2:	push   edx
  4182c3:	icebp  
  4182c4:	dec    ecx
  4182c5:	push   edx
  4182c6:	mov    BYTE PTR [edi-0x1cd59c97],dl
  4182cc:	push   ebp
  4182cd:	xchg   esi,eax
  4182ce:	xchg   esi,eax
  4182cf:	ins    BYTE PTR es:[edi],dx
  4182d0:	(bad)  
  4182d1:	popf   
  4182d2:	jle    0x41827e
  4182d4:	inc    edi
  4182d5:	pop    ebp
  4182d6:	push   edx
  4182d7:	or     DWORD PTR [esi],ebx
  4182d9:	(bad)  
  4182da:	bound  ecx,QWORD PTR [eax+eax*4+0x22c794e2]
  4182e1:	nop
  4182e2:	and    DWORD PTR [ecx+0x2],edi
  4182e5:	clc    
  4182e6:	fadd   QWORD PTR [eax-0x7aa32d75]
  4182ec:	nop
  4182ed:	das    
  4182ee:	add    eax,0xc6d8eaa2
  4182f3:	pop    ss
  4182f4:	pushf  
  4182f5:	adc    al,0x34
  4182f7:	xchg   edi,eax
  4182f8:	outs   dx,DWORD PTR ds:[esi]
  4182f9:	es mov bl,0xc2
  4182fc:	retf   
  4182fd:	fisub  DWORD PTR [ebx]
  4182ff:	push   ds
  418300:	daa    
  418301:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418302:	pop    ecx
  418303:	mov    dh,0x1c
  418305:	lods   eax,DWORD PTR ds:[esi]
  418306:	lods   al,BYTE PTR ds:[esi]
  418307:	aaa    
  418308:	in     al,dx
  418309:	in     eax,0xb0
  41830b:	push   0x50888beb
  418310:	adc    eax,0xe85e8b81
  418315:	or     dh,dl
  418317:	inc    edx
  418318:	jmp    0x9a72bd70
  41831d:	icebp  
  41831e:	bound  edi,QWORD PTR [eax-0x3]
  418321:	dec    eax
  418322:	popa   
  418323:	gs mov esi,0xd23ca48c
  418329:	aad    0x7f
  41832b:	push   edi
  41832c:	sub    eax,0x30e8f8f5
  418331:	mov    ah,0xec
  418333:	imul   edi,eax,0x57
  418336:	aas    
  418337:	fld    TBYTE PTR [ebp+ebx*4-0x70fee8b3]
  41833e:	iret   
  41833f:	cli    
  418340:	xor    eax,0xe1c70f46
  418345:	js     0x4183b4
  418347:	jp     0x41839d
  418349:	sti    
  41834a:	nop
  41834b:	mov    al,0x95
  41834d:	ss jae 0x4182fa
  418350:	sti    
  418351:	scas   eax,DWORD PTR es:[edi]
  418352:	dec    esi
  418353:	loopne 0x4182ef
  418355:	xor    BYTE PTR [edx],cl
  418357:	js     0x4183cb
  418359:	dec    edi
  41835a:	push   edx
  41835b:	popf   
  41835c:	arpl   WORD PTR [edi],si
  41835e:	and    al,0x5c
  418360:	pop    esi
  418361:	call   0x3324:0xdb9f47c3
  418368:	mov    cl,0xfd
  41836a:	pushf  
  41836b:	push   es
  41836c:	fld    TBYTE PTR [edx]
  41836e:	xchg   BYTE PTR [esi+0x50],cl
  418371:	inc    DWORD PTR [ecx-0x41827727]
  418377:	aaa    
  418378:	and    DWORD PTR [edi+0xa],edx
  41837b:	lds    edx,FWORD PTR [ecx]
  41837d:	mov    ds:0x4c983bd5,al
  418382:	dec    edi
  418383:	imul   edi,DWORD PTR ds:0xe68721cb,0x14
  41838a:	jmp    0x4183c7
  41838c:	sti    
  41838d:	pop    edx
  41838e:	(bad)  
  41838f:	cs iret 
  418391:	pop    ebp
  418392:	pop    eax
  418393:	outs   dx,DWORD PTR ds:[esi]
  418394:	jecxz  0x4183ec
  418396:	jnp    0x41833e
  418398:	jns    0x4183f7
  41839a:	inc    eax
  41839b:	add    DWORD PTR [eax-0x1],esi
  41839e:	or     al,0x83
  4183a0:	xchg   ebp,eax
  4183a1:	push   edi
  4183a2:	dec    eax
  4183a3:	je     0x4183f8
  4183a5:	aam    0xae
  4183a7:	mov    ds:0xaee5b9ab,eax
  4183ac:	shl    BYTE PTR [esi],1
  4183ae:	cmp    al,0xa
  4183b0:	je     0x418407
  4183b2:	(bad)  
  4183b4:	shl    BYTE PTR [esi],0x27
  4183b7:	push   ebp
  4183b8:	(bad)  
  4183b9:	es imul eax,eax,0xfffffff0
  4183bd:	inc    ebp
  4183be:	mov    edx,0x106a4649
  4183c3:	mov    ds:0x690c058f,al
  4183c8:	dec    edx
  4183c9:	inc    ebx
  4183ca:	sbb    DWORD PTR [ebx],eax
  4183cc:	ret    
  4183cd:	nop
  4183ce:	pop    ss
  4183cf:	cmp    DWORD PTR [edx+0x45e7b5de],0xfffffff3
  4183d6:	stc    
  4183d7:	loope  0x4183f3
  4183d9:	in     al,0xa9
  4183db:	fst    DWORD PTR [ebp+0x3d]
  4183de:	pop    eax
  4183df:	mov    bl,0x82
  4183e1:	sub    ebx,0x50
  4183e4:	dec    esi
  4183e5:	sub    BYTE PTR [ebx],bh
  4183e7:	outs   dx,BYTE PTR ds:[esi]
  4183e8:	stos   DWORD PTR es:[edi],eax
  4183e9:	cmp    eax,0x738b5d3d
  4183ee:	and    cl,bh
  4183f0:	xor    al,0x30
  4183f2:	add    BYTE PTR [ebx],al
  4183f4:	cs in  eax,0x7e
  4183f7:	dec    ebp
  4183f8:	lahf   
  4183f9:	pushf  
  4183fa:	mov    ds:0x8af31228,eax
  4183ff:	clc    
  418400:	cli    
  418401:	adc    DWORD PTR [eax+0x3abf86dc],0xffffffa5
  418408:	jp     0x418476
  41840a:	arpl   di,bp
  41840c:	lea    esp,[ebp-0x766eb11b]
  418412:	jmp    0xee8ffd9
  418417:	retf   0xf32e
  41841a:	aas    
  41841b:	cwde   
  41841c:	lods   eax,DWORD PTR ds:[esi]
  41841d:	inc    ebp
  41841e:	xor    DWORD PTR [edx+0x5],0xc6ce16d6
  418425:	cli    
  418426:	(bad)  
  418427:	mov    dh,0x8f
  418429:	ss aas 
  41842b:	jnp    0x418412
  41842d:	mov    edx,0x4246f6ad
  418432:	add    al,0x23
  418434:	inc    ecx
  418435:	jmp    0x418414
  418437:	fist   WORD PTR [eax-0x6b]
  41843a:	mov    ah,0xef
  41843c:	and    ch,BYTE PTR [ebx]
  41843e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41843f:	or     DWORD PTR [eax-0x6f0723cb],eax
  418445:	or     DWORD PTR [ecx],esi
  418447:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418448:	dec    ebp
  418449:	pop    es
  41844a:	adc    ah,BYTE PTR [eax+0x57]
  41844d:	xchg   ebx,eax
  41844e:	xchg   BYTE PTR [ecx],dl
  418450:	in     al,0x43
  418452:	fwait
  418453:	mov    dl,0x7b
  418455:	jecxz  0x4184a2
  418457:	jb     0x1e3f5d66
  41845d:	xchg   ebp,eax
  41845e:	cmp    edx,DWORD PTR [ebx-0x24]
  418461:	push   ds
  418462:	ins    DWORD PTR es:[edi],dx
  418463:	jle    0x418417
  418465:	loopne 0x4184e3
  418467:	fcmove st,st(3)
  418469:	(bad)
  41846d:	test   ch,cl
  41846f:	popf   
  418470:	pusha  
  418471:	int    0x55
  418473:	add    cl,BYTE PTR [edi-0x16]
  418476:	mov    BYTE PTR [esi-0x40024375],ch
  41847c:	xchg   esi,eax
  41847d:	push   eax
  41847e:	shl    BYTE PTR [edi-0xf],1
  418481:	dec    ecx
  418482:	inc    ebp
  418483:	push   es
  418484:	pop    es
  418485:	dec    ecx
  418486:	mov    bl,0x55
  418488:	jno    0x4184a3
  41848a:	mov    dh,0x6f
  41848c:	sbb    eax,0xd3f55f86
  418491:	add    BYTE PTR [eax+0x5b],dh
  418494:	xor    dl,BYTE PTR [ebp-0x7a7ec275]
  41849a:	loopne 0x4184dc
  41849c:	adc    BYTE PTR [ecx+0x56cd7515],0x10
  4184a3:	ins    BYTE PTR es:[edi],dx
  4184a4:	xor    edx,0x6d
  4184a7:	jg     0x41845f
  4184a9:	out    0xf3,al
  4184ab:	sbb    eax,0x5a4ca3c0
  4184b0:	adc    eax,edi
  4184b2:	xchg   DWORD PTR [esi-0x7cad14ea],edi
  4184b8:	nop
  4184b9:	fcmovbe st,st(1)
  4184bb:	aad    0x32
  4184bd:	mov    ?,WORD PTR [eax+0x6f]
  4184c0:	daa    
  4184c1:	std    
  4184c2:	mov    bl,0xc8
  4184c4:	lea    ebx,[ebp-0x38]
  4184c7:	hlt    
  4184c8:	mov    ecx,0x1e32c2be
  4184cd:	stos   DWORD PTR es:[edi],eax
  4184ce:	sbb    ebx,edx
  4184d0:	imul   ebx,esp,0xf3ddf505
  4184d6:	retf   0x565e
  4184d9:	xchg   ebx,eax
  4184da:	imul   BYTE PTR [esi]
  4184dc:	aad    0x3d
  4184de:	out    dx,al
  4184df:	push   DWORD PTR [ecx+edx*8+0x54]
  4184e3:	out    dx,al
  4184e4:	test   DWORD PTR [edi+0x6d6e9097],0x5178627
  4184ee:	les    edi,FWORD PTR [esp+edi*4+0x3b0c9761]
  4184f5:	inc    esp
  4184f6:	icebp  
  4184f7:	fild   DWORD PTR [ebp+0x7516442d]
  4184fd:	lods   al,BYTE PTR ds:[esi]
  4184fe:	adc    DWORD PTR [esi+ebx*8-0x69],edi
  418502:	pop    ecx
  418503:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418504:	loop   0x418531
  418506:	mov    dh,0xcf
  418508:	dec    ecx
  418509:	mov    dh,0x5c
  41850b:	sar    DWORD PTR [esi],cl
  41850d:	sbb    DWORD PTR [ecx],0x7a
  418510:	or     bl,BYTE PTR [ecx-0x406880a1]
  418516:	cmp    dh,bl
  418518:	hlt    
  418519:	xchg   edi,eax
  41851a:	mov    DWORD PTR [esi],esp
  41851c:	call   0x3c21f768
  418521:	xchg   esp,eax
  418522:	pop    ss
  418523:	add    al,0xa7
  418525:	outs   dx,BYTE PTR ds:[esi]
  418526:	(bad)  
  418527:	jmp    0xecb6115b
  41852c:	dec    ebx
  41852d:	fimul  DWORD PTR [esi+0x1e]
  418530:	cs scas eax,DWORD PTR es:[edi]
  418532:	test   BYTE PTR [esi+0x187a2da3],al
  418538:	push   eax
  418539:	mov    bl,0xc5
  41853b:	nop
  41853c:	jecxz  0x4185b4
  41853e:	inc    eax
  41853f:	nop
  418540:	adc    ah,dl
  418542:	bound  edx,QWORD PTR [ecx]
  418544:	scas   eax,DWORD PTR es:[edi]
  418545:	addr16 xor eax,0x863f764a
  41854b:	xchg   ecx,eax
  41854c:	mov    bl,0xf6
  41854e:	adc    al,0xf4
  418550:	retf   
  418551:	jle    0x4185a3
  418553:	fcom   QWORD PTR [esi-0x7be86b48]
  418559:	xor    al,0x5d
  41855b:	outs   dx,DWORD PTR ds:[esi]
  41855c:	push   eax
  41855d:	xor    eax,0xf0330733
  418562:	pop    edx
  418563:	retf   
  418564:	out    0x6,eax
  418566:	mov    ch,0xf1
  418568:	or     dh,0x65
  41856b:	out    dx,al
  41856c:	mov    edx,0xb55d80a6
  418571:	xchg   edx,eax
  418572:	cwde   
  418573:	adc    BYTE PTR [edi-0x34],bh
  418576:	mov    bh,0xfc
  418578:	push   eax
  418579:	jns    0x41853c
  41857b:	lahf   
  41857c:	call   0xd76b08d6
  418581:	adc    ebp,edx
  418583:	sbb    DWORD PTR [ebx-0x5a],ebx
  418586:	cs push esp
  418588:	jno    0x418606
  41858a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41858b:	scas   al,BYTE PTR es:[edi]
  41858c:	scas   al,BYTE PTR es:[edi]
  41858d:	cmp    DWORD PTR [ecx+0x40],0x5b
  418591:	cmp    esp,esp
  418593:	shr    DWORD PTR [ecx],cl
  418595:	neg    DWORD PTR [ebx-0x55]
  418598:	add    eax,0x20fef668
  41859d:	ja     0x41855d
  41859f:	fimul  DWORD PTR [ebx+0x4662528e]
  4185a5:	out    dx,al
  4185a6:	mov    BYTE PTR [ecx+0x19],ah
  4185a9:	in     eax,0xae
  4185ab:	scas   eax,DWORD PTR es:[edi]
  4185ac:	addr16 (bad) 
  4185ae:	scas   al,BYTE PTR es:[edi]
  4185af:	add    eax,0xa5d8a55b
  4185b4:	in     al,0x64
  4185b6:	ret    
  4185b7:	mov    esp,DWORD PTR [ecx]
  4185b9:	inc    eax
  4185ba:	sahf   
  4185bb:	add    dl,BYTE PTR [ecx-0x69]
  4185be:	(bad)  
  4185bf:	sub    eax,0x20c0cc4a
  4185c4:	mov    esi,DWORD PTR [edx]
  4185c6:	ja     0x418569
  4185c8:	neg    BYTE PTR [eax-0x419aa50]
  4185ce:	or     esp,DWORD PTR [esi-0x309fbfb3]
  4185d4:	xlat   BYTE PTR ds:[ebx]
  4185d5:	inc    esi
  4185d6:	stc    
  4185d7:	popa   
  4185d8:	mov    ah,0xd9
  4185da:	test   eax,0xe86e32df
  4185df:	inc    ebx
  4185e0:	mov    ebx,0x88031641
  4185e5:	ss mov ah,0x86
  4185e8:	repz pop ds
  4185ea:	aas    
  4185eb:	test   al,0x80
  4185ed:	retf   
  4185ee:	xchg   ebx,eax
  4185ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185f0:	xchg   edi,eax
  4185f1:	inc    edx
  4185f2:	inc    ebx
  4185f3:	xchg   ebx,eax
  4185f4:	and    ah,bh
  4185f6:	and    eax,DWORD PTR [ebx+0x41]
  4185f9:	pop    esp
  4185fa:	in     al,0x2e
  4185fc:	arpl   dx,di
  4185fe:	mov    bl,0xe0
  418600:	adc    al,0x6b
  418602:	fwait
  418603:	pop    ebx
  418604:	ret    0xf7d3
  418607:	fnstcw WORD PTR [ebx+0x5c64e95a]
  41860d:	lock jno 0x418595
  418610:	jno    0x418643
  418612:	jge    0x41859a
  418614:	ret    0x4c65
  418617:	int    0x61
  418619:	cwde   
  41861a:	cmc    
  41861b:	jne    0x418677
  41861d:	xchg   bh,ah
  41861f:	js     0x4185d5
  418621:	cmp    ecx,DWORD PTR [edx+0x1f846f3]
  418627:	ss inc ecx
  418629:	outs   dx,DWORD PTR ds:[esi]
  41862a:	xor    dh,bl
  41862c:	pop    esi
  41862d:	jp     0x41861e
  41862f:	call   0xbcc3d17b
  418634:	das    
  418635:	test   BYTE PTR [ebp-0x537ede70],dh
  41863b:	in     al,dx
  41863c:	in     eax,dx
  41863d:	inc    edx
  41863e:	pop    es
  41863f:	adc    edi,eax
  418641:	ror    DWORD PTR [eax+0x4],0x3b
  418645:	call   0x7018:0x371454b9
  41864c:	mov    ch,0xa
  41864e:	xchg   DWORD PTR [esi+eax*1],eax
  418651:	xchg   edx,eax
  418652:	adc    DWORD PTR [ebx],ebp
  418654:	iret   
  418655:	outs   dx,DWORD PTR ds:[esi]
  418656:	in     al,0x4b
  418658:	push   ss
  418659:	enter  0x5cdc,0xe9
  41865d:	push   ds
  41865e:	pop    ebx
  41865f:	or     ecx,edi
  418661:	mov    ebp,0xb1863652
  418666:	xlat   BYTE PTR ds:[ebx]
  418667:	cmp    eax,0x4114e1bd
  41866c:	stos   BYTE PTR es:[edi],al
  41866d:	ret    0x73d
  418670:	xor    cl,BYTE PTR [ecx]
  418672:	stos   BYTE PTR es:[edi],al
  418673:	mov    ecx,0x591bb9d4
  418678:	dec    edx
  418679:	jbe    0x4186cd
  41867b:	iret   
  41867c:	stc    
  41867d:	xor    eax,0xfbddec9f
  418682:	inc    esi
  418683:	fdiv   QWORD PTR [ebp+0x6534c59f]
  418689:	repnz mov esi,0x1a266573
  41868f:	sbb    eax,0xf8b0649e
  418694:	es pop esi
  418696:	push   ecx
  418697:	sbb    eax,0x6d6eacf
  41869c:	sub    BYTE PTR [edx+eiz*8+0x4543b1d0],dh
  4186a3:	fdivr  QWORD PTR [ecx-0x4b]
  4186a6:	in     al,0xcb
  4186a8:	mov    eax,0xc17262b1
  4186ad:	icebp  
  4186ae:	sub    bh,BYTE PTR [edi-0x492d4691]
  4186b4:	inc    esi
  4186b5:	lods   eax,DWORD PTR ds:[esi]
  4186b6:	(bad)  
  4186b7:	clc    
  4186b8:	push   cs
  4186b9:	int3   
  4186ba:	pushf  
  4186bb:	add    eax,0x7e70f24f
  4186c0:	test   eax,0x85ea11ab
  4186c5:	pop    esp
  4186c6:	jecxz  0x4186ad
  4186c8:	int3   
  4186c9:	pop    ebx
  4186ca:	call   0xdcc3:0xdb444690
  4186d1:	sub    DWORD PTR [ecx+0x7e72c6f4],ecx
  4186d7:	sub    al,0xa9
  4186d9:	jbe    0x41870b
  4186db:	and    DWORD PTR [eax-0x70f5a0c2],0x4f
  4186e2:	push   ds
  4186e3:	ins    DWORD PTR es:[edi],dx
  4186e4:	outs   dx,DWORD PTR ds:[esi]
  4186e5:	pop    edx
  4186e6:	ret    
  4186e7:	ins    DWORD PTR es:[edi],dx
  4186e8:	pusha  
  4186e9:	inc    edx
  4186ea:	in     al,dx
  4186eb:	mov    ah,0x43
  4186ed:	pop    ss
  4186ee:	jae    0x418750
  4186f0:	ins    BYTE PTR es:[edi],dx
  4186f1:	inc    edi
  4186f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186f3:	aam    0xaf
  4186f5:	mov    al,ds:0x7659ea4
  4186fa:	xchg   BYTE PTR [esi-0x173e1cd1],ch
  418700:	mov    eax,ds:0x176f87e1
  418705:	add    DWORD PTR [esi+0x1d],ecx
  418708:	lock inc eax
  41870a:	xor    dl,al
  41870c:	push   ebp
  41870d:	mov    BYTE PTR [edi+0x3dbe1acb],al
  418713:	add    bh,al
  418715:	sbb    ah,0x98
  418718:	xchg   ecx,eax
  418719:	out    0x4e,al
  41871b:	shl    DWORD PTR [ebp+0xf],1
  41871e:	sub    ebp,DWORD PTR [eax+0x78]
  418721:	push   ebp
  418722:	fisub  DWORD PTR [ecx-0x24]
  418725:	fwait
  418726:	add    cl,BYTE PTR [ebx]
  418728:	xcrypt-ctr (bad)
  418729:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41872a:	pop    eax
  41872b:	xor    eax,0xf835ca3b
  418730:	push   ds
  418731:	mov    ds:0x37f6a948,eax
  418736:	dec    esp
  418737:	leave  
  418738:	mov    edx,DWORD PTR [edx+ebp*1-0x2edf14ee]
  41873f:	jns    0x418771
  418741:	push   0x4d
  418743:	repnz xor DWORD PTR [esp+eiz*8],edi
  418747:	outs   dx,DWORD PTR ds:[esi]
  418748:	pusha  
  418749:	call   0x30cd6d8e
  41874e:	cmp    BYTE PTR [eax+0x59],dl
  418751:	xor    DWORD PTR [esi+esi*2-0x171df52a],edi
  418758:	mov    eax,ds:0x55627a23
  41875d:	retf   0x2937
  418760:	mov    ebx,0x715da2c7
  418765:	mov    ecx,0x34ba8688
  41876a:	jmp    DWORD PTR [ebx-0x3d]
  41876d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41876e:	stc    
  41876f:	dec    esp
  418770:	ins    DWORD PTR es:[edi],dx
  418771:	jne    0x4187a4
  418773:	lea    ecx,[ecx+0x6f]
  418776:	cdq    
  418777:	enter  0x565c,0x45
  41877b:	imul   esi,DWORD PTR [edx+0x10],0x6
  41877f:	outs   dx,BYTE PTR ds:[esi]
  418780:	pusha  
  418781:	stos   BYTE PTR es:[edi],al
  418782:	pop    eax
  418783:	add    al,0x46
  418785:	push   ebx
  418786:	sub    eax,0xdee23ef6
  41878b:	push   ebp
  41878c:	out    dx,eax
  41878d:	icebp  
  41878e:	lahf   
  41878f:	mov    ds:0x50a6b6e5,al
  418794:	(bad)  
  418795:	sub    al,0x6
  418797:	test   cl,al
  418799:	shl    DWORD PTR [ebp-0x4772ba9d],1
  41879f:	sar    BYTE PTR [edx+0x4a],0x51
  4187a3:	std    
  4187a4:	or     ebx,DWORD PTR [ebp-0x62679f7e]
  4187aa:	push   edi
  4187ab:	retf   
  4187ac:	mov    ah,BYTE PTR [ebx]
  4187ae:	enter  0x3966,0x60
  4187b2:	shl    DWORD PTR [ecx+edi*4],1
  4187b5:	cli    
  4187b6:	or     edx,ebp
  4187b8:	lods   eax,DWORD PTR ds:[esi]
  4187b9:	xchg   edx,eax
  4187ba:	je     0x41873d
  4187bc:	cwde   
  4187bd:	add    BYTE PTR [ecx+ecx*8+0x7c424cac],0xc7
  4187c5:	cdq    
  4187c6:	shl    esp,0x48
  4187c9:	or     al,0x8d
  4187cb:	xlat   BYTE PTR ds:[ebx]
  4187cc:	loop   0x418809
  4187ce:	js     0x418782
  4187d0:	or     al,BYTE PTR [ecx+0x41070ec5]
  4187d6:	cmp    al,0x80
  4187d8:	jge    0x41875f
  4187da:	fs loopne 0x41877c
  4187dd:	inc    edi
  4187de:	jle    0x418805
  4187e0:	adc    eax,0xe6af4a21
  4187e5:	fwait
  4187e6:	cmp    BYTE PTR [ebx+0x1e],al
  4187e9:	cmp    bh,BYTE PTR [bx-0x3cc1]
  4187ee:	into   
  4187ef:	jecxz  0x41883b
  4187f1:	cmp    BYTE PTR [edi],dl
  4187f3:	sbb    edi,esp
  4187f5:	enter  0x5906,0x14
  4187f9:	stc    
  4187fa:	fidiv  DWORD PTR [ebx-0x4e]
  4187fd:	inc    eax
  4187fe:	(bad)  
  4187ff:	fstp   QWORD PTR [ecx]
  418801:	xchg   BYTE PTR [edi+0x3c8d7f6b],dl
  418807:	and    BYTE PTR [eax+0x7965476d],bl
  41880d:	or     al,ah
  41880f:	scas   al,BYTE PTR es:[edi]
  418810:	repz hlt 
  418812:	pop    esi
  418813:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418814:	adc    DWORD PTR [ebp-0x7],eax
  418817:	sbb    bl,BYTE PTR ds:0xd3ebddf4
  41881d:	push   bx
  41881f:	std    
  418820:	int    0x8c
  418822:	push   0xebd9f7bb
  418827:	(bad)  
  418828:	jb     0x4187f8
  41882a:	mov    ch,0xe1
  41882c:	std    
  41882d:	js     0x418878
  41882f:	dec    ebx
  418830:	bound  eax,QWORD PTR [ecx-0x178f8f62]
  418836:	inc    ebx
  418837:	in     al,dx
  418838:	jb     0x41888a
  41883a:	popf   
  41883b:	xor    BYTE PTR [edi-0x15],0x85
  41883f:	fcomp  QWORD PTR [ebx-0xcf20f65]
  418845:	gs das 
  418847:	in     al,0x25
  418849:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41884a:	loopne 0x418833
  41884c:	or     ah,BYTE PTR [eax-0x35]
  41884f:	pop    edx
  418850:	rcl    ebx,0x24
  418853:	cmp    al,0x12
  418855:	ror    DWORD PTR [esi],cl
  418857:	icebp  
  418858:	out    dx,eax
  418859:	mov    DWORD PTR ds:0xf266b1e0,edi
  41885f:	(bad)  
  418860:	mov    ds:0x45824edf,al
  418865:	inc    eax
  418866:	add    ecx,eax
  418868:	push   ecx
  418869:	add    BYTE PTR [ebp+0x1c248daf],ch
  41886f:	fmulp  st(5),st
  418871:	lock sar BYTE PTR [eax],cl
  418874:	sti    
  418875:	mov    BYTE PTR [edx],bh
  418877:	scas   eax,DWORD PTR es:[edi]
  418878:	inc    esp
  418879:	data16 mov bh,0xe0
  41887c:	nop
  41887d:	retf   0xb8d1
  418880:	xor    esp,DWORD PTR [edx]
  418882:	lock mov eax,ds:0x9c5b54df
  418888:	push   ss
  418889:	sti    
  41888a:	addr16 mov ah,ah
  41888d:	mov    esi,0xa9de0e9d
  418892:	je     0x41884b
  418894:	(bad)  
  418895:	cmp    DWORD PTR [eax],esp
  418897:	pop    ss
  418898:	cmp    BYTE PTR [edi+0x2c],ah
  41889b:	out    0xaf,eax
  41889d:	mov    dl,0x50
  41889f:	iret   
  4188a0:	xchg   esi,eax
  4188a1:	or     DWORD PTR [esi-0x2c],esi
  4188a4:	retf   
  4188a5:	call   0xe094b60d
  4188aa:	aas    
  4188ab:	enter  0xa8c8,0x7f
  4188af:	fld    QWORD PTR [edx+esi*2-0x49]
  4188b3:	(bad)  
  4188b5:	(bad)  
  4188b6:	retf   0x6865
  4188b9:	int3   
  4188ba:	jle    0x418851
  4188bc:	div    DWORD PTR [eax+0x69cf1f89]
  4188c2:	aaa    
  4188c3:	xchg   esp,eax
  4188c4:	pop    ebp
  4188c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188c6:	pop    ebx
  4188c7:	(bad)  
  4188c8:	repz jge 0x418858
  4188cb:	out    0x1a,eax
  4188cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188ce:	call   0x5836bb6e
  4188d3:	out    0xac,eax
  4188d5:	or     al,0x3d
  4188d7:	mov    gs,WORD PTR ss:[edi+esi*4+0x24c86951]
  4188df:	add    BYTE PTR [eax+0x4726e0bb],dl
  4188e5:	pop    ebp
  4188e6:	test   DWORD PTR [ebx-0x61],edi
  4188e9:	scas   eax,DWORD PTR es:[edi]
  4188ea:	adc    DWORD PTR [eax],esp
  4188ec:	clc    
  4188ed:	out    0x7a,eax
  4188ef:	leave  
  4188f0:	mov    BYTE PTR [ecx+0x49007d02],ch
  4188f6:	shl    BYTE PTR [edi+0x634cc29d],0x7c
  4188fd:	cmp    BYTE PTR [eax],bl
  4188ff:	js     0x4188f3
  418901:	mov    ah,0x30
  418903:	test   BYTE PTR [ebp+0x785b3581],dl
  418909:	idiv   DWORD PTR [ebx+0x95d349f]
  41890f:	mov    cl,0x7c
  418911:	or     BYTE PTR [ecx],cl
  418913:	mov    dh,bl
  418915:	jbe    0x4188e6
  418917:	sub    bl,BYTE PTR [ecx]
  418919:	mov    bl,0x17
  41891b:	sub    eax,0x3df5aea1
  418920:	and    DWORD PTR [edi+0x1f],ecx
  418923:	sub    eax,0xa8d43edb
  418928:	add    bh,0x4a
  41892b:	test   BYTE PTR [esi+0x119c4cd1],ah
  418931:	addr16 adc esp,ecx
  418934:	inc    ebp
  418935:	dec    edi
  418936:	pop    ds
  418937:	add    BYTE PTR [edi+eax*1-0x399c1a19],dh
  41893e:	loop   0x418949
  418940:	icebp  
  418941:	dec    edx
  418942:	clc    
  418943:	jmp    0x418962
  418945:	rol    DWORD PTR [esi],0xbb
  418948:	add    BYTE PTR [esp+edx*2],cl
  41894b:	pop    esp
  41894c:	push   esi
  41894d:	and    DWORD PTR es:[edx-0x5c368336],esp
  418954:	sar    BYTE PTR [bx+di-0x78d],0xe7
  41895a:	cmp    DWORD PTR [ebx-0x32bfe1a5],esp
  418960:	jne    0x418915
  418962:	aam    0x3e
  418964:	and    ebp,DWORD PTR [edi-0x2ae266f7]
  41896a:	popf   
  41896b:	push   cs
  41896c:	xor    BYTE PTR [esi-0x3f4c81eb],bl
  418972:	push   ecx
  418973:	inc    edi
  418974:	icebp  
  418975:	add    BYTE PTR [esi],al
  418977:	leave  
  418978:	adc    al,0x74
  41897a:	dec    ebx
  41897b:	leave  
  41897c:	push   ecx
  41897d:	imul   esi,edi,0x4ee56c2
  418983:	(bad)  
  418984:	sbb    eax,0xb759355b
  418989:	std    
  41898a:	xor    BYTE PTR [esi+0x6e8bcced],ch
  418990:	sub    eax,0x9514ee90
  418995:	sbb    DWORD PTR [edi-0x616326c4],edx
  41899b:	adc    DWORD PTR [edi],ebp
  41899d:	pusha  
  41899e:	clc    
  41899f:	push   esi
  4189a0:	add    BYTE PTR [eax+0x787a9582],0x21
  4189a7:	fs mov cl,0x32
  4189aa:	push   ebp
  4189ab:	mov    cs,WORD PTR [eax+0x4d]
  4189ae:	das    
  4189af:	push   ecx
  4189b0:	adc    eax,0x904bd2ee
  4189b5:	inc    ebp
  4189b6:	jo     0x41893e
  4189b8:	stc    
  4189b9:	rol    BYTE PTR [edx],1
  4189bb:	jnp    0x4189fc
  4189bd:	jle    0x41897e
  4189bf:	adc    eax,0xd33485ac
  4189c4:	jno    0x418a39
  4189c6:	into   
  4189c7:	push   esi
  4189c8:	mov    esp,0x37d958dc
  4189cd:	cwde   
  4189ce:	in     al,dx
  4189cf:	mov    BYTE PTR [esi+0x573a13],cl
  4189d5:	cmc    
  4189d6:	je     0x418a3a
  4189d8:	sbb    edx,DWORD PTR [eax-0x6302d77f]
  4189de:	dec    edx
  4189df:	arpl   WORD PTR [ebx],di
  4189e1:	sub    ebp,DWORD PTR [esi+0x45]
  4189e4:	sbb    esi,edi
  4189e6:	cmp    DWORD PTR [ebx+esi*1],edx
  4189e9:	xchg   ecx,eax
  4189ea:	push   ebx
  4189eb:	xor    al,0x25
  4189ed:	fidivr DWORD PTR [edi+edi*4]
  4189f0:	ret    0x95de
  4189f3:	int    0xe7
  4189f5:	jmp    0x8a7a:0xdd2b4317
  4189fc:	sti    
  4189fd:	mov    dl,0xe7
  4189ff:	push   es
  418a00:	mov    esi,0x4ba47ef6
  418a05:	cdq    
  418a06:	jne    0x418a2b
  418a08:	fdiv   QWORD PTR [ecx+0x7706c425]
  418a0e:	shr    DWORD PTR [ebx-0x3e],1
  418a11:	mov    es,WORD PTR [edx+0x22]
  418a14:	aas    
  418a15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a16:	pop    ebp
  418a17:	jmp    0xba8a8487
  418a1c:	leave  
  418a1d:	adc    al,0x22
  418a1f:	jecxz  0x418a63
  418a21:	das    
  418a22:	repz hlt 
  418a24:	setno  BYTE PTR [edx-0x1e]
  418a28:	(bad)
  418a2d:	jl     0x418a2d
  418a2f:	xchg   ebp,eax
  418a30:	sub    ebp,DWORD PTR [ebx-0x1d]
  418a33:	lods   al,BYTE PTR ds:[esi]
  418a34:	xor    DWORD PTR [eax],esp
  418a36:	dec    eax
  418a37:	arpl   dx,si
  418a39:	and    ah,BYTE PTR [edi-0x2b]
  418a3c:	jns    0x418aa0
  418a3e:	cld    
  418a3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a40:	or     dl,BYTE PTR [ebp+0x57871952]
  418a46:	jnp    0x418a0d
  418a48:	mov    ebp,0x486e8e8
  418a4d:	pop    ecx
  418a4e:	add    eax,0x539b7a46
  418a53:	dec    ebp
  418a54:	mov    ecx,0xae72dea5
  418a59:	jne    0x418aa0
  418a5b:	inc    ebx
  418a5c:	pop    ecx
  418a5d:	loop   0x418ad0
  418a5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a60:	pop    edx
  418a61:	add    ah,0x95
  418a64:	mov    WORD PTR [esp+eax*4+0x3f],gs
  418a68:	mov    ah,0x27
  418a6a:	cdq    
  418a6b:	push   ebx
  418a6c:	inc    ebp
  418a6d:	sub    BYTE PTR ds:0xef39894f,dl
  418a73:	xor    al,0x6
  418a75:	repz sbb ebp,DWORD PTR [ebp-0x72348800]
  418a7c:	gs popf 
  418a7e:	daa    
  418a7f:	rcl    BYTE PTR cs:[eax+0x4caae4af],0xcd
  418a87:	rol    BYTE PTR [edi],1
  418a89:	push   ebp
  418a8a:	mov    edx,0xe2608d83
  418a8f:	ins    BYTE PTR es:[edi],dx
  418a90:	push   es
  418a91:	adc    BYTE PTR [ebx-0x6272cd94],0x4f
  418a98:	xlat   BYTE PTR ds:[ebx]
  418a99:	push   0x4765f456
  418a9e:	(bad)  
  418a9f:	shl    ebx,cl
  418aa1:	cwde   
  418aa2:	adc    BYTE PTR [esi-0x5c377a03],dh
  418aa8:	rol    edx,cl
  418aaa:	repz jmp 0xbed:0x93cc53be
  418ab2:	aaa    
  418ab3:	mov    ebx,0xd28dae4
  418ab8:	neg    DWORD PTR [eax]
  418aba:	pop    eax
  418abb:	mov    fs:0xdba858fc,eax
  418ac1:	and    al,0xd5
  418ac3:	push   ecx
  418ac4:	inc    edx
  418ac5:	cld    
  418ac6:	and    eax,0x50537dd4
  418acb:	mov    ebx,0x93d36348
  418ad0:	and    ebx,0xffffffb2
  418ad3:	jmp    ebx
  418ad5:	lods   eax,DWORD PTR ds:[esi]
  418ad6:	adc    eax,0x2cf473e4
  418adb:	hlt    
  418adc:	mov    al,ds:0x4ff37ad1
  418ae1:	or     ebx,esi
  418ae3:	mov    cl,0x4e
  418ae5:	add    al,bh
  418ae7:	out    dx,al
  418ae8:	mov    DWORD PTR [edi],ecx
  418aea:	inc    esp
  418aeb:	nop
  418aec:	gs test al,0x28
  418aef:	inc    esi
  418af0:	push   edx
  418af1:	outs   dx,BYTE PTR ds:[esi]
  418af2:	push   ebx
  418af3:	(bad)  
  418af4:	dec    ebp
  418af5:	mov    dl,0x4f
  418af7:	stc    
  418af8:	clc    
  418af9:	pop    ss
  418afa:	std    
  418afb:	loop   0x418a86
  418afd:	fisubr WORD PTR [ebx]
  418aff:	ja     0x418b0d
  418b01:	mov    ds:0xcbbf98ec,al
  418b06:	mov    bh,cl
  418b08:	test   esi,0xe0d3b1d3
  418b0e:	push   0x7
  418b10:	call   0x7fc3:0xf7edb559
  418b17:	popa   
  418b18:	or     ebx,DWORD PTR [edx-0x5]
  418b1b:	lock (bad) 
  418b1d:	jmp    0xaa52:0x788d6086
  418b24:	in     eax,dx
  418b25:	or     BYTE PTR [ebx+edx*8-0x39],bl
  418b29:	xor    BYTE PTR [ecx-0x43ee5f8],0xea
  418b30:	nop
  418b31:	test   eax,0x58bd685d
  418b36:	xor    DWORD PTR [edi],ebp
  418b38:	xor    esp,DWORD PTR [eax-0x757abc8c]
  418b3e:	out    0x8b,eax
  418b40:	pop    esi
  418b41:	mov    WORD PTR [esi],es
  418b43:	pop    ebp
  418b44:	repz leave 
  418b46:	into   
  418b47:	jae    0x418b39
  418b49:	js     0x418ba0
  418b4b:	inc    ecx
  418b4c:	adc    eax,edi
  418b4e:	lahf   
  418b4f:	pop    ecx
  418b50:	jnp    0x418baf
  418b52:	or     al,0xb7
  418b54:	mov    ah,0x4c
  418b56:	mov    eax,0x221fc390
  418b5b:	xor    bh,BYTE PTR [eax+0x1f]
  418b5e:	mov    eax,0x185575bd
  418b63:	xchg   ebx,eax
  418b64:	rcr    ah,1
  418b66:	rcr    BYTE PTR [edx],0xa2
  418b69:	jg     0x418b48
  418b6b:	dec    esp
  418b6c:	daa    
  418b6d:	cld    
  418b6e:	das    
  418b6f:	adc    BYTE PTR [ebp-0x521bfd],cl
  418b75:	mov    eax,0x4028bbe4
  418b7a:	and    DWORD PTR [eax-0x73d1a27e],eax
  418b80:	jb     0x418b0d
  418b82:	push   ecx
  418b83:	pop    edi
  418b84:	adc    ebx,esp
  418b86:	jl     0x418b61
  418b88:	xlat   BYTE PTR ds:[ebx]
  418b89:	rcl    BYTE PTR [ebx-0x47],cl
  418b8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b8d:	inc    ebx
  418b8e:	fcmovnu st,st(0)
  418b90:	cmp    eax,0x3de25943
  418b95:	stos   DWORD PTR es:[edi],eax
  418b96:	xchg   ebp,eax
  418b97:	repz dec esp
  418b99:	cld    
  418b9a:	cld    
  418b9b:	das    
  418b9c:	or     dl,BYTE PTR [ebx-0x54db39da]
  418ba2:	push   edi
  418ba3:	cwde   
  418ba4:	mov    ds:0x353ebc91,eax
  418ba9:	inc    ecx
  418baa:	clc    
  418bab:	icebp  
  418bac:	in     al,0xc5
  418bae:	arpl   WORD PTR [edx+ebp*1-0x3a456940],di
  418bb5:	fwait
  418bb6:	out    dx,eax
  418bb7:	aam    0xf0
  418bb9:	add    BYTE PTR [ebx+0x3f9a2629],ch
  418bbf:	ret    0xef44
  418bc2:	mov    edi,0x50ead8a5
  418bc7:	mov    BYTE PTR [ebx-0x5d1701a6],ch
  418bcd:	lods   al,BYTE PTR ds:[esi]
  418bce:	lds    edi,FWORD PTR [ebp+0x20]
  418bd1:	or     BYTE PTR [esi-0x48],ch
  418bd4:	lahf   
  418bd5:	shl    BYTE PTR [ebx+ecx*8],cl
  418bd8:	imul   edx,DWORD PTR [ebp+0x697c67a2],0x578f33af
  418be2:	sub    eax,0x62576f5f
  418be7:	loopne 0x418ba9
  418be9:	je     0x418c47
  418beb:	xor    edi,esp
  418bed:	xchg   edx,eax
  418bee:	cli    
  418bef:	xchg   edx,eax
  418bf0:	inc    eax
  418bf1:	pop    ds
  418bf2:	mov    eax,0x479a763a
  418bf7:	mov    DWORD PTR [eax-0x3c],edx
  418bfa:	add    BYTE PTR ss:[edi+0x6],ah
  418bfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bff:	sub    dl,BYTE PTR [edx+0x2d7b342b]
  418c05:	mov    ds:0x1353952,eax
  418c0a:	cmp    DWORD PTR [edx],edi
  418c0c:	mov    ch,0x32
  418c0e:	rcr    DWORD PTR [ebx+0x10],0x72
  418c12:	xchg   ebp,eax
  418c13:	jbe    0x418be3
  418c15:	pop    ecx
  418c16:	or     eax,0xe0919d97
  418c1b:	mov    bh,0x1c
  418c1d:	ficom  WORD PTR [edi]
  418c1f:	jnp    0x418c6f
  418c21:	or     ah,BYTE PTR [edx-0x333041bc]
  418c27:	test   eax,0x42fd21f5
  418c2c:	fsubp  st(3),st
  418c2e:	or     al,0xa7
  418c30:	push   ebp
  418c31:	mov    ebx,0x800349bf
  418c36:	fcmovu st,st(6)
  418c38:	mov    edx,0x33dadf29
  418c3d:	jle    0x418c9e
  418c3f:	addr16 push esi
  418c41:	xlat   BYTE PTR ds:[ebx]
  418c42:	pop    ds
  418c43:	mov    bh,0x27
  418c45:	test   DWORD PTR [ebp+0x3a],0x400fce34
  418c4c:	push   ds
  418c4d:	retf   0x6338
  418c50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c51:	test   al,0xd2
  418c53:	popf   
  418c54:	xchg   edx,eax
  418c55:	out    0x39,al
  418c57:	sub    eax,0x36b61707
  418c5c:	mov    esi,0x271e3e85
  418c61:	inc    esi
  418c62:	loope  0x418ca0
  418c64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c65:	adc    eax,0x46c7c01f
  418c6a:	cmp    al,0x3d
  418c6c:	mov    esi,0x95a88834
  418c71:	call   0x97bd:0x546339ca
  418c78:	retf   0x8dbc
  418c7b:	jno    0x418ce5
  418c7d:	pop    edi
  418c7e:	shl    BYTE PTR [edx-0x6cd41c48],0xed
  418c85:	(bad)  
  418c86:	jl     0x418c7d
  418c88:	nop
  418c89:	into   
  418c8a:	push   esp
  418c8b:	rol    eax,cl
  418c8d:	or     ebx,edi
  418c8f:	mov    edi,0x232c0293
  418c94:	lds    edx,FWORD PTR [eax-0x1ca36683]
  418c9a:	and    dl,cl
  418c9c:	pop    ecx
  418c9d:	test   DWORD PTR [edi+eax*4],0x3746590a
  418ca4:	mov    DWORD PTR [bx+si-0x3e],esp
  418ca8:	dec    ebp
  418ca9:	sub    DWORD PTR [ecx-0x50],0x2e
  418cad:	inc    eax
  418cae:	mov    ebp,edi
  418cb0:	loope  0x418cd8
  418cb2:	push   esp
  418cb3:	pop    ebp
  418cb4:	or     esi,DWORD PTR [esi]
  418cb6:	(bad)  
  418cb7:	mov    ds:0x115784f4,al
  418cbc:	inc    edx
  418cbd:	xor    al,0x33
  418cbf:	cld    
  418cc0:	push   ss
  418cc1:	jns    0x418c5e
  418cc3:	inc    edi
  418cc4:	mov    bl,BYTE PTR [ebx+0xd]
  418cc7:	frstor [ebx-0x93066af]
  418ccd:	fidiv  WORD PTR [edi]
  418ccf:	mov    ecx,0x573764a3
  418cd4:	add    eax,0xb457a00f
  418cd9:	dec    edi
  418cda:	movsx  esi,WORD PTR [edx+ebx*4-0x25fc2d98]
  418ce2:	(bad)  
  418ce3:	scas   eax,DWORD PTR es:[edi]
  418ce4:	int    0xa2
  418ce6:	mov    ch,0x9b
  418ce8:	adc    DWORD PTR [ebx-0x2d],0xffffffd0
  418cec:	cmc    
  418ced:	add    ch,BYTE PTR [edi-0x3a]
  418cf0:	fsub   QWORD PTR [edi]
  418cf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418cf3:	pop    ebp
  418cf4:	mul    DWORD PTR [esi]
  418cf6:	xor    eax,0xd1313fbf
  418cfb:	addr16 out 0x34,eax
  418cfe:	cmp    BYTE PTR [ecx-0x39],ch
  418d01:	push   ss
  418d02:	push   ecx
  418d03:	pop    ebx
  418d04:	adc    DWORD PTR [edx+0x1eca0f98],ebx
  418d0a:	sbb    eax,0xb070e9
  418d0f:	dec    ebp
  418d10:	ret    0x626b
  418d13:	mov    ah,0xe5
  418d15:	aas    
  418d16:	jmp    0x331224a2
  418d1b:	outs   dx,DWORD PTR ds:[esi]
  418d1c:	retf   0x315e
  418d1f:	lods   eax,DWORD PTR ds:[esi]
  418d20:	jae    0x418cec
  418d22:	aad    0x4
  418d24:	xchg   ecx,eax
  418d25:	addr16 adc eax,0x6206427d
  418d2b:	xor    eax,0x11344aa4
  418d30:	xlat   BYTE PTR ds:[ebx]
  418d31:	sti    
  418d32:	pop    ebx
  418d33:	aad    0x6c
  418d35:	or     edi,DWORD PTR [esp+ebp*4]
  418d38:	lea    edi,[eax]
  418d3a:	imul   ebp,DWORD PTR [esp+edi*4-0x7a],0xffffffa8
  418d3f:	sbb    al,0x5e
  418d41:	call   0x6221:0x6b27b648
  418d48:	jns    0x418d10
  418d4a:	repz sub BYTE PTR [edx-0x30],0x1c
  418d4f:	sub    eax,0xbf5aac08
  418d54:	lock cmp eax,0xcd7199cb
  418d5a:	shr    BYTE PTR [ecx-0x1d3e7abf],cl
  418d60:	bound  edi,QWORD PTR [esi-0x33551236]
  418d66:	lock lock xchg ecx,eax
  418d69:	(bad)  
  418d6b:	inc    edi
  418d6c:	and    ecx,edx
  418d6e:	arpl   WORD PTR [edx-0x78611269],dx
  418d74:	imul   esp,DWORD PTR [edx+ebp*8+0x45],0xa11be636
  418d7c:	fs pop ebp
  418d7e:	and    eax,0x838d7aa2
  418d83:	(bad)  
  418d84:	arpl   bx,si
  418d86:	push   eax
  418d87:	dec    ebx
  418d88:	dec    ecx
  418d89:	aas    
  418d8a:	dec    DWORD PTR [esi-0x36]
  418d8d:	fldenv [edx]
  418d8f:	xchg   ch,bh
  418d91:	mov    eax,0x337c75c9
  418d96:	(bad)  
  418d97:	lods   eax,DWORD PTR ds:[esi]
  418d98:	xor    eax,0xc9221245
  418d9d:	push   eax
  418d9e:	cwde   
  418d9f:	ror    ch,0xb7
  418da2:	push   0x57
  418da4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418da5:	push   0xffffffc9
  418da7:	dec    esi
  418da8:	vandnps xmm2,xmm4,xmm0
  418dac:	mov    eax,0xd64a28de
  418db1:	icebp  
  418db2:	stc    
  418db3:	add    eax,0x6d1a1d9
  418db8:	call   0x7bd9a112
  418dbd:	sub    ecx,DWORD PTR [eax-0x2f22a7aa]
  418dc3:	adc    ecx,ecx
  418dc5:	in     al,0x20
  418dc7:	sbb    BYTE PTR [edx+0x1be04f29],dh
  418dcd:	int    0x70
  418dcf:	mov    ah,0xa6
  418dd1:	jmp    0x612:0xf94912a7
  418dd8:	dec    edi
  418dd9:	bound  ecx,QWORD PTR [ecx+0x14f1698d]
  418ddf:	shr    DWORD PTR [edx],cl
  418de1:	repz and al,bl
  418de4:	add    esi,DWORD PTR [ebp-0x1c]
  418de7:	mov    cl,0x76
  418de9:	rol    BYTE PTR [ebx-0x71],cl
  418dec:	popa   
  418ded:	xchg   ebp,eax
  418dee:	popa   
  418def:	pop    ss
  418df0:	adc    DWORD PTR [edi],esi
  418df2:	popf   
  418df3:	lea    edi,[eax]
  418df5:	imul   edx,DWORD PTR ds:0xe7033650,0x39de4c70
  418dff:	jl     0x418d9b
  418e01:	nop    eax
  418e04:	out    dx,al
  418e05:	xor    eax,0xf4911600
  418e0a:	inc    esi
  418e0b:	pusha  
  418e0c:	mov    al,0xcf
  418e0e:	test   al,0x2d
  418e10:	xchg   ebx,eax
  418e11:	mov    eax,0xf801e064
  418e16:	arpl   WORD PTR [esi+0x5d],sp
  418e19:	loope  0x418e5b
  418e1b:	sub    BYTE PTR [ebx],0xc5
  418e1e:	adc    eax,0x1ddd9e3c
  418e23:	call   0x596:0x7b518a11
  418e2a:	inc    edx
  418e2b:	fnstcw WORD PTR [ebx-0x53]
  418e2e:	repnz (bad) 
  418e30:	pop    esp
  418e31:	sub    dh,bl
  418e33:	shld   DWORD PTR [edi+edx*1],edi,cl
  418e37:	jmp    0x878c:0x8114fb05
  418e3e:	dec    edx
  418e3f:	popa   
  418e40:	rcl    BYTE PTR [ebx+0x66],cl
  418e43:	mov    cl,0x16
  418e45:	pushf  
  418e46:	ja     0x418e5e
  418e48:	pop    ss
  418e49:	fabs   
  418e4b:	push   ebp
  418e4c:	and    eax,0xf602af9f
  418e51:	sub    al,ch
  418e53:	mov    ds:0xdb08db82,eax
  418e58:	pop    es
  418e59:	pop    edx
  418e5a:	adc    esp,DWORD PTR [eax-0x1d49d74b]
  418e60:	pusha  
  418e61:	lahf   
  418e62:	sbb    dl,BYTE PTR [ecx+0x2]
  418e65:	icebp  
  418e66:	xor    BYTE PTR [ecx-0x20],cl
  418e69:	aad    0x4f
  418e6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e6c:	mov    ecx,0xe6938195
  418e71:	retf   0x6f65
  418e74:	or     al,0x40
  418e76:	and    al,0x5c
  418e78:	cmp    al,0xde
  418e7a:	mov    bh,0x3f
  418e7c:	inc    ebx
  418e7d:	mov    ah,0xb6
  418e7f:	daa    
  418e80:	add    eax,0x4aa0bad4
  418e85:	push   ebx
  418e86:	push   ss
  418e87:	cmp    al,0xe1
  418e89:	fistp  DWORD PTR [ecx+ebp*1-0x619ad402]
  418e90:	mov    edx,0x47c079f1
  418e95:	ret    0xf26d
  418e98:	lahf   
  418e99:	daa    
  418e9a:	aam    0x40
  418e9c:	cmp    eax,DWORD PTR ss:0xb82b0dcd
  418ea3:	sar    BYTE PTR [ecx-0x45ab7977],0xe5
  418eaa:	popf   
  418eab:	adc    BYTE PTR [esi-0x3f],bl
  418eae:	es test al,0xa4
  418eb1:	in     eax,dx
  418eb2:	mov    dh,0xf6
  418eb4:	sar    DWORD PTR [edi-0x7af40838],0x9a
  418ebb:	push   ebp
  418ebc:	jbe    0x418e64
  418ebe:	aaa    
  418ebf:	mov    al,0x45
  418ec1:	jmp    0x418ecf
  418ec3:	or     dh,BYTE PTR [eax+esi*8-0x4f]
  418ec7:	imul   ebx,DWORD PTR [ebp+0xf7b63d2],0xffffffcf
  418ece:	dec    esp
  418ecf:	rcl    DWORD PTR [ebx+0x43],1
  418ed2:	inc    edx
  418ed3:	mov    cl,0xd
  418ed5:	jle    0x418e76
  418ed7:	int3   
  418ed8:	lods   al,BYTE PTR ds:[esi]
  418ed9:	ja     0x418f24
  418edb:	sbb    DWORD PTR [edi+esi*2],ecx
  418ede:	adc    bh,BYTE PTR [edi]
  418ee0:	adc    eax,0xe1cf960f
  418ee5:	mov    bl,al
  418ee7:	cld    
  418ee8:	mov    esi,0xc4a9c60f
  418eed:	jp     0x418e87
  418eef:	xchg   ebx,eax
  418ef0:	cmc    
  418ef1:	xor    bl,BYTE PTR [edi]
  418ef3:	(bad)
  418ef7:	cwde   
  418ef8:	icebp  
  418ef9:	or     BYTE PTR [edx],0xcb
  418efc:	ins    DWORD PTR es:[edi],dx
  418efd:	shl    edi,0xbc
  418f00:	or     eax,0xffffffd5
  418f03:	xor    eax,0xcfa8f52c
  418f08:	pop    es
  418f09:	fbstp  TBYTE PTR [edx]
  418f0b:	jmp    0x418f56
  418f0d:	enter  0xecfa,0x7
  418f11:	rcpps  xmm4,XMMWORD PTR [ebx]
  418f14:	fcom   st(7)
  418f16:	inc    esi
  418f17:	or     bl,BYTE PTR [edx]
  418f19:	fsub   DWORD PTR [esp+ebp*2]
  418f1c:	icebp  
  418f1d:	pop    eax
  418f1e:	adc    eax,0x28a5a9e
  418f23:	ret    
  418f24:	xor    DWORD PTR [esi+eax*8],edi
  418f27:	jmp    0x418f3e
  418f29:	add    eax,0x2cc4c597
  418f2e:	cld    
  418f2f:	jmp    0xdfcc8cce
  418f34:	imul   ecx,DWORD PTR [edx+ecx*4+0x1995b369],0xffffffe6
  418f3c:	cld    
  418f3d:	xor    eax,0x322802b0
  418f42:	scas   al,BYTE PTR es:[edi]
  418f43:	jmp    0x6c14:0x51345520
  418f4a:	xchg   edi,eax
  418f4b:	ja     0x418fa4
  418f4d:	je     0x418f5b
  418f4f:	jle    0x418f1d
  418f51:	int    0xce
  418f53:	mov    dl,0xb5
  418f55:	pminub mm5,QWORD PTR [eax-0xd]
  418f59:	psllw  mm0,mm7
  418f5c:	cmp    BYTE PTR [ebp+0x5],0x3b
  418f60:	adc    esp,0xa31de621
  418f66:	sbb    edx,DWORD PTR [edi-0x70]
  418f69:	stos   BYTE PTR es:[edi],al
  418f6a:	xchg   ebp,eax
  418f6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f6c:	cdq    
  418f6d:	push   edx
  418f6e:	retf   0x2e9e
  418f71:	adc    BYTE PTR ds:0xc91fb255,dh
  418f77:	push   edi
  418f78:	(bad)
  418f7c:	mov    ebx,0xd77e0c20
  418f81:	test   BYTE PTR [ebp-0x3],ah
  418f84:	out    dx,eax
  418f85:	je     0x418fb4
  418f87:	mov    ds:0xf8ed85cf,al
  418f8c:	sub    al,0xfb
  418f8e:	jne    0x418ff0
  418f90:	and    BYTE PTR [ebx-0x7f],dh
  418f93:	jns    0x418f26
  418f95:	mov    DWORD PTR [esi*4-0x4c2c6b2a],esp
  418f9c:	pop    eax
  418f9d:	popf   
  418f9e:	mov    edi,0xca00c644
  418fa3:	inc    ecx
  418fa4:	dec    edi
  418fa5:	jmp    0x29adcc3b
  418faa:	dec    edx
  418fab:	shl    BYTE PTR [ebp-0x32470969],0x13
  418fb2:	shufps xmm1,xmm6,0x3f
  418fb6:	in     eax,dx
  418fb7:	popa   
  418fb8:	xor    BYTE PTR [edi-0x33835585],ah
  418fbe:	mov    ch,0x8f
  418fc0:	lahf   
  418fc1:	mov    ds:0x285f1181,al
  418fc6:	jns    0x418f9a
  418fc8:	push   ecx
  418fc9:	xor    ebx,DWORD PTR [edx]
  418fcb:	ret    0x7638
  418fce:	push   0xffffffd7
  418fd0:	or     al,BYTE PTR [ecx+0x2f]
  418fd3:	cdq    
  418fd4:	shl    DWORD PTR [ebp-0x43],cl
  418fd7:	adc    BYTE PTR [ebp+0x25],dh
  418fda:	push   edx
  418fdb:	aas    
  418fdc:	push   eax
  418fdd:	and    al,0xaa
  418fdf:	jb     0x41904b
  418fe1:	mov    al,0xa1
  418fe3:	sbb    BYTE PTR [ebx],al
  418fe5:	aam    0xcc
  418fe7:	mov    ds:0x8d5db911,al
  418fec:	xchg   ebx,eax
  418fed:	clc    
  418fee:	dec    edx
  418fef:	inc    eax
  418ff0:	(bad)  
  418ff1:	dec    ebp
  418ff2:	mov    ebp,0x84425607
  418ff7:	sub    dl,BYTE PTR [ecx-0x35]
  418ffa:	xor    DWORD PTR [edx],ebx
  418ffc:	mov    ss,WORD PTR [edi+eiz*4+0xc929d8f]
  419003:	lea    edx,[ebx-0x647e3f6a]
  419009:	add    esi,esi
  41900b:	push   edx
  41900c:	dec    eax
  41900d:	rcr    BYTE PTR [ebx],0x89
  419010:	and    dh,BYTE PTR [edx-0xe]
  419013:	call   0x7cae4bd
  419018:	add    al,bh
  41901a:	pop    ebx
  41901b:	cdq    
  41901c:	imul   ecx,esp,0xf35804d2
  419022:	shl    DWORD PTR [ebp+eiz*8-0x40],cl
  419026:	out    dx,al
  419027:	(bad)  
  419028:	int3   
  419029:	mov    BYTE PTR [edi],cl
  41902b:	loopne 0x419008
  41902d:	popf   
  41902e:	rcl    DWORD PTR [ebx],0x6e
  419031:	xchg   ebx,eax
  419032:	sbb    eax,0xa0118da
  419037:	scas   al,BYTE PTR es:[edi]
  419038:	stos   DWORD PTR es:[edi],eax
  419039:	jbe    0x4190a4
  41903b:	inc    ecx
  41903c:	aas    
  41903d:	out    0x19,eax
  41903f:	popa   
  419040:	mov    bl,0x4b
  419042:	scas   al,BYTE PTR es:[edi]
  419043:	add    BYTE PTR [ebp+0x0],0x8e
  419047:	addr16 mov edi,0x216043a3
  41904d:	sub    esi,edi
  41904f:	hlt    
  419050:	imul   esi,DWORD PTR [esp+eiz*8+0x33],0x2365893e
  419058:	loope  0x419014
  41905a:	outs   dx,DWORD PTR ds:[esi]
  41905b:	scas   eax,DWORD PTR es:[edi]
  41905c:	sbb    BYTE PTR [ebp+0x49],ch
  41905f:	icebp  
  419060:	(bad)
  419063:	loopne 0x4190c1
  419065:	mov    esp,ebp
  419067:	cmp    ecx,DWORD PTR [edi+edx*4+0x2d]
  41906b:	add    BYTE PTR [edx],ch
  41906d:	call   0xbe9159f5
  419072:	fiadd  DWORD PTR [esi+0x34]
  419075:	out    dx,eax
  419076:	(bad)  
  419077:	popa   
  419078:	idiv   bh
  41907a:	add    esi,DWORD PTR [edx-0x32]
  41907d:	fstp   TBYTE PTR [eax]
  41907f:	sub    al,BYTE PTR [edi-0x8]
  419082:	call   0xf8f3048c
  419087:	push   ebx
  419088:	mov    al,ds:0xf436193a
  41908d:	add    ah,dh
  41908f:	xchg   edx,eax
  419090:	loopne 0x4190db
  419092:	mov    edi,0xc93aff37
  419097:	push   cs
  419098:	add    bh,BYTE PTR [edi-0x71237618]
  41909e:	xlat   BYTE PTR ds:[ebx]
  41909f:	mov    WORD PTR [eax],ss
  4190a1:	outs   dx,BYTE PTR ds:[esi]
  4190a2:	push   edi
  4190a3:	dec    eax
  4190a4:	loope  0x4190a9
  4190a6:	retf   
  4190a7:	push   esp
  4190a8:	push   edi
  4190a9:	(bad)  
  4190aa:	leave  
  4190ab:	ins    DWORD PTR es:[edi],dx
  4190ac:	idiv   dl
  4190ae:	clc    
  4190af:	add    al,0xeb
  4190b1:	das    
  4190b2:	jns    0x41909d
  4190b4:	enter  0x5309,0xa2
  4190b8:	push   ss
  4190b9:	ret    0xe1f4
  4190bc:	inc    ecx
  4190bd:	shr    DWORD PTR [ecx],1
  4190bf:	js     0x4190e5
  4190c1:	rol    BYTE PTR [edi-0x37],cl
  4190c4:	and    BYTE PTR [ecx],dh
  4190c6:	jae    0x41907d
  4190c8:	out    dx,eax
  4190c9:	lods   eax,DWORD PTR ds:[esi]
  4190ca:	push   esi
  4190cb:	stos   BYTE PTR es:[di],al
  4190cd:	xchg   ebx,eax
  4190ce:	xchg   edx,eax
  4190cf:	cmp    bh,BYTE PTR [eax-0x4b]
  4190d2:	pop    ecx
  4190d3:	ja     0x41911e
  4190d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190d6:	das    
  4190d7:	ins    DWORD PTR es:[edi],dx
  4190d8:	stc    
  4190d9:	sub    esp,ecx
  4190db:	int3   
  4190dc:	xchg   ebx,eax
  4190dd:	das    
  4190de:	push   0x18
  4190e0:	icebp  
  4190e1:	cmp    BYTE PTR [esi-0x77ead7dd],bh
  4190e7:	in     eax,dx
  4190e8:	gs fs and eax,0xa9f2fc1d
  4190ef:	sub    esi,ecx
  4190f1:	jl     0x419080
  4190f3:	xlat   BYTE PTR ds:[ebx]
  4190f4:	aam    0x63
  4190f6:	arpl   si,bx
  4190f8:	rcl    DWORD PTR [ecx],0x30
  4190fb:	cld    
  4190fc:	leave  
  4190fd:	cmp    BYTE PTR [esi+0xe],ch
  419100:	cmp    esp,esi
  419102:	retf   
  419103:	xchg   edi,eax
  419104:	adc    al,bh
  419106:	lahf   
  419107:	mov    edi,0x17f79e3
  41910c:	outs   dx,BYTE PTR ds:[esi]
  41910d:	xor    DWORD PTR [esi],ebx
  41910f:	test   DWORD PTR [eax-0x4933c109],eax
  419115:	jle    0x4190d9
  419117:	mov    ds:0xb3745d69,eax
  41911c:	add    esp,edi
  41911e:	popf   
  41911f:	pop    esi
  419120:	xchg   edx,eax
  419121:	shr    BYTE PTR ss:[ebx+0x8cfdac9],cl
  419128:	sub    eax,0x2e644fb3
  41912d:	ss mov eax,0x4af7ac9c
  419133:	xor    eax,ebx
  419135:	xor    ebp,edx
  419137:	xor    DWORD PTR ds:0x35f06592,esi
  41913d:	outs   dx,DWORD PTR ds:[esi]
  41913e:	inc    ecx
  41913f:	rcr    DWORD PTR [edx+0x58ccebad],cl
  419145:	mov    dh,0x20
  419147:	xor    eax,0x18086a
  41914c:	fisttp WORD PTR [ecx]
  41914e:	adc    eax,0x92e3990c
  419153:	add    ebp,DWORD PTR [ebp+ebp*2-0x64cf450]
  41915a:	push   ebp
  41915b:	jmp    0x8b6ff3f2
  419160:	mov    edi,0x9e130d6e
  419165:	stc    
  419166:	cvtps2pi mm3,xmm5
  419169:	lds    edx,FWORD PTR [ebx+eiz*8+0x7a340408]
  419170:	into   
  419171:	std    
  419172:	push   ecx
  419173:	jmp    0x200e:0x45afb10f
  41917a:	sub    al,0x4f
  41917c:	(bad)  
  41917d:	cmp    bh,BYTE PTR [ebp+eiz*2+0x2130fddd]
  419184:	ja     0x4191b3
  419186:	mov    bl,0xe5
  419188:	out    0x36,eax
  41918a:	test   DWORD PTR [eax-0x5c9200a8],ebx
  419190:	jmp    0x1861:0x65a241f1
  419197:	fild   WORD PTR [ecx]
  419199:	out    0x26,al
  41919b:	push   esp
  41919c:	mov    bl,0xff
  41919e:	stos   DWORD PTR es:[edi],eax
  41919f:	repz and al,0x7a
  4191a2:	and    bh,BYTE PTR [ebx]
  4191a4:	(bad)  
  4191a5:	mov    esi,0x5872a940
  4191aa:	jae    0x419161
  4191ac:	sub    BYTE PTR [esi],bh
  4191ae:	push   ebp
  4191af:	inc    ecx
  4191b0:	enter  0x54fd,0xcf
  4191b4:	pusha  
  4191b5:	mov    al,dl
  4191b7:	jmp    0x7bb6:0xe2fa6868
  4191be:	add    ah,BYTE PTR [ebp+0x4c]
  4191c1:	das    
  4191c2:	(bad)  
  4191c3:	fld    TBYTE PTR [edi-0x69e8f24]
  4191c9:	test   ah,ch
  4191cb:	(bad)  
  4191ce:	das    
  4191cf:	js     0x4191e4
  4191d1:	mov    bh,0x22
  4191d3:	adc    al,0xc1
  4191d5:	cmp    dh,BYTE PTR [ebx+0x2]
  4191d8:	in     al,0x4d
  4191da:	dec    eax
  4191db:	ss out dx,al
  4191dd:	out    0x3,al
  4191df:	mul    DWORD PTR [bx+si-0x5ae7]
  4191e4:	push   cs
  4191e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191e6:	loope  0x419233
  4191e8:	jae    0x419239
  4191ea:	push   ecx
  4191eb:	mov    ecx,0x9b0ef8c1
  4191f0:	push   ss
  4191f1:	mov    ds:0xb5136119,eax
  4191f6:	mov    ebx,0xd62efd0b
  4191fb:	pop    edi
  4191fc:	sbb    DWORD PTR [eax+0x1ff01e9b],esp
  419202:	sbb    cl,BYTE PTR [edi+edx*8-0x55e2c108]
  419209:	mov    ds:0x2fe0b05f,al
  41920e:	out    0xff,eax
  419210:	add    al,0x2b
  419212:	fmul   st,st(7)
  419214:	nop
  419215:	inc    esp
  419216:	cmp    DWORD PTR [edx],edi
  419218:	ret    
  419219:	es imul edx,DWORD PTR cs:[ebp-0x20],0x4286e5d8
  419222:	inc    edi
  419223:	mov    esp,0xcd34af79
  419228:	(bad)  
  419229:	fisttp DWORD PTR [ebx-0x3168b0a3]
  41922f:	sbb    edi,DWORD PTR [esi-0x530200fe]
  419235:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419236:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419237:	add    bl,bl
  419239:	push   esi
  41923a:	into   
  41923b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41923c:	shr    BYTE PTR [edi-0x2c],cl
  41923f:	(bad)  
  419240:	call   0xd5c17003
  419245:	inc    eax
  419246:	int    0xd
  419248:	lods   eax,DWORD PTR ds:[esi]
  419249:	mov    ch,0xb5
  41924b:	push   ebx
  41924c:	and    ebx,DWORD PTR ds:0x4e21ecf4
  419252:	rcr    DWORD PTR [eax],0x82
  419255:	push   esi
  419256:	fcmovnu st,st(7)
  419258:	pop    ebx
  419259:	lahf   
  41925a:	test   BYTE PTR [esi-0x604c2af3],cl
  419260:	or     al,0x76
  419262:	mov    ds:0xce0816e3,eax
  419267:	clc    
  419268:	test   ch,bl
  41926a:	add    eax,0xad990794
  41926f:	jne    0x41925f
  419271:	sub    ebx,eax
  419273:	dec    edi
  419274:	sbb    al,0xcb
  419276:	push   edi
  419277:	and    edx,ebx
  419279:	cmp    dl,BYTE PTR [eax]
  41927b:	adc    eax,0xeea03f3
  419280:	fld    DWORD PTR [edi-0x80]
  419283:	sub    DWORD PTR [edi-0x29c09540],esi
  419289:	fidiv  WORD PTR [ebp-0x3a6dc005]
  41928f:	cwde   
  419290:	jbe    0x419225
  419292:	fcomp  QWORD PTR [ebp+eax*2-0x49]
  419296:	cmp    BYTE PTR [eax-0x78],bh
  419299:	or     DWORD PTR [eax-0x6c63f9e8],esp
  41929f:	call   0x627f:0x44ba09cd
  4192a6:	call   0xb414:0x238c9439
  4192ad:	fld    DWORD PTR ds:0x54ea6234
  4192b3:	enter  0x1219,0x4b
  4192b7:	cmc    
  4192b8:	jp     0x419272
  4192ba:	inc    edi
  4192bb:	mov    al,ds:0x2ca7201e
  4192c0:	mov    ecx,0xb3a90908
  4192c5:	dec    eax
  4192c6:	pusha  
  4192c7:	das    
  4192c8:	xchg   bl,dh
  4192ca:	mov    ecx,0x6a2c3e7
  4192cf:	xchg   esp,eax
  4192d0:	push   ecx
  4192d1:	(bad)  
  4192d2:	pusha  
  4192d3:	dec    ebx
  4192d4:	pop    es
  4192d5:	mov    dh,0xec
  4192d7:	mov    ebx,0x9406ea9c
  4192dc:	add    eax,0x570ecc9
  4192e1:	ret    
  4192e2:	jae    0x41932c
  4192e4:	ins    DWORD PTR es:[edi],dx
  4192e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192e6:	mov    ch,0xef
  4192e8:	or     ebx,DWORD PTR [edi]
  4192ea:	in     eax,0xe8
  4192ec:	push   ebp
  4192ed:	add    BYTE PTR [ebp-0x40],0x1
  4192f1:	(bad)
  4192f4:	loopne 0x4192ad
  4192f6:	xor    eax,0x4676e590
  4192fc:	mov    ds:0x79d384b1,al
  419301:	ins    BYTE PTR es:[edi],dx
  419302:	jmp    0x5c017291
  419307:	xor    ecx,DWORD PTR [edx+0x37f03f09]
  41930d:	ss mov ch,0xb1
  419310:	xchg   edx,eax
  419311:	pushf  
  419312:	std    
  419313:	pop    ebx
  419314:	xor    ebp,esi
  419316:	out    0xf7,eax
  419318:	es popf 
  41931a:	pop    ecx
  41931b:	(bad)  
  41931d:	jp     0x41930f
  41931f:	int3   
  419320:	xchg   esp,eax
  419321:	sahf   
  419322:	push   ecx
  419323:	inc    ebx
  419324:	adc    BYTE PTR [ecx+0x42],0xa5
  419328:	cdq    
  419329:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41932a:	js     0x41935b
  41932c:	adc    eax,0xc1fb387b
  419331:	int    0xe
  419333:	xor    eax,DWORD PTR [eax+0x1ef20ac]
  419339:	aam    0xfb
  41933b:	mov    eax,ds:0x300afd86
  419340:	jecxz  0x41933f
  419342:	out    0xc3,eax
  419344:	push   cs
  419345:	xlat   BYTE PTR ds:[ebx]
  419346:	shl    BYTE PTR [esi+edi*4-0x5844386d],cl
  41934d:	scas   al,BYTE PTR es:[edi]
  41934e:	sub    ebp,edi
  419350:	and    BYTE PTR [eax],ah
  419352:	mov    edx,0xea8fe831
  419357:	ror    BYTE PTR [ecx+0x4d],1
  41935a:	dec    edx
  41935b:	xor    al,0x94
  41935d:	mov    dl,BYTE PTR [edi+0x21cdb5e6]
  419363:	int    0xb3
  419365:	stos   DWORD PTR es:[edi],eax
  419366:	inc    ebx
  419367:	add    DWORD PTR [esi-0x58],edi
  41936a:	mov    ecx,edx
  41936c:	mov    al,0x2f
  41936e:	cmp    edi,0x2e
  419371:	sub    BYTE PTR [ebp+0x2b525f4d],bh
  419377:	xchg   ebx,eax
  419378:	fild   DWORD PTR [esi]
  41937a:	ficom  DWORD PTR [ebp+0x3fe658a]
  419380:	and    eax,0xf7476b31
  419385:	pop    ebp
  419386:	inc    edx
  419387:	sbb    DWORD PTR [esi],0x17
  41938a:	mov    dl,0x6
  41938c:	jle    0x419397
  41938e:	outs   dx,BYTE PTR ds:[esi]
  41938f:	dec    ebx
  419390:	add    edx,edx
  419392:	jb     0x41932d
  419394:	and    DWORD PTR [eax],edi
  419396:	test   BYTE PTR [edx+eiz*8],dh
  419399:	popw   ds
  41939b:	cmc    
  41939c:	add    ebp,ebx
  41939e:	mov    bl,0x84
  4193a0:	push   es
  4193a1:	(bad)  
  4193a3:	je     0x4193dd
  4193a5:	sbb    ebp,eax
  4193a7:	out    dx,eax
  4193a8:	popf   
  4193a9:	fild   DWORD PTR [esi+0x1d]
  4193ac:	xor    ecx,edx
  4193ae:	mov    esp,0x399333c1
  4193b3:	js     0x4193ce
  4193b5:	mov    edx,DWORD PTR [ebp+0x5f9205d8]
  4193bb:	pop    esp
  4193bc:	psrlq  mm7,QWORD PTR [edi]
  4193bf:	mov    DWORD PTR [esi-0x25],edi
  4193c2:	fdivr  DWORD PTR [edx-0x43e20ff]
  4193c8:	fild   QWORD PTR [edi+eax*8]
  4193cb:	dec    ecx
  4193cc:	adc    BYTE PTR [ecx-0x4a],ah
  4193cf:	test   BYTE PTR [edi+edx*8],bl
  4193d2:	or     DWORD PTR [ecx-0x51],ebp
  4193d5:	aas    
  4193d6:	sar    DWORD PTR [ebx],1
  4193d8:	(bad)
  4193db:	rcr    DWORD PTR [edi+0x39],0x51
  4193df:	setae  BYTE PTR [esi+edi*1+0x6b]
  4193e4:	xchg   ebp,eax
  4193e5:	scas   al,BYTE PTR es:[edi]
  4193e6:	cmp    ecx,eax
  4193e8:	int    0xbc
  4193ea:	pop    esi
  4193eb:	imul   DWORD PTR [ecx+ebx*1]
  4193ee:	adc    ebp,DWORD PTR [eax]
  4193f0:	popa   
  4193f1:	xchg   ebp,eax
  4193f2:	sub    eax,0xeed3b276
  4193f7:	stos   BYTE PTR es:[edi],al
  4193f8:	push   ebx
  4193f9:	pop    eax
  4193fa:	inc    esi
  4193fb:	xor    eax,DWORD PTR [esi-0xc]
  4193fe:	add    ecx,DWORD PTR [esi+0x289ad30e]
  419404:	xchg   ebx,eax
  419405:	cmp    DWORD PTR [esp+eax*2],0x34a6eda5
  41940c:	add    eax,0xfc5e46ce
  419411:	stc    
  419412:	icebp  
  419413:	add    ah,BYTE PTR [edx]
  419415:	aam    0xc2
  419417:	(bad)  
  419418:	bound  ebp,QWORD PTR [ebp+ecx*4-0x5]
  41941c:	jno    0x4193bc
  41941e:	or     BYTE PTR [ecx],cl
  419420:	or     DWORD PTR [ecx-0x62d7f488],esp
  419426:	mov    edx,0x81b051fa
  41942b:	xor    bl,ah
  41942d:	cwde   
  41942e:	dec    edx
  41942f:	jb     0x4194a4
  419431:	rol    bl,cl
  419433:	sbb    eax,0xe815d437
  419438:	mov    ch,0x24
  41943a:	pusha  
  41943b:	dec    edi
  41943c:	int3   
  41943d:	add    al,0xdd
  41943f:	sub    al,0x7e
  419441:	xchg   ebx,eax
  419442:	(bad)  
  419443:	xor    cl,ah
  419445:	pop    esi
  419446:	ins    DWORD PTR es:[edi],dx
  419447:	lods   eax,DWORD PTR ds:[esi]
  419448:	jmp    0x41945a
  41944a:	enter  0xc980,0xe2
  41944e:	xchg   DWORD PTR [edi+0x2b],ebx
  419451:	je     0x41942f
  419453:	cs shl eax,1
  419456:	push   edx
  419457:	je     0x4193f8
  419459:	lods   eax,DWORD PTR ds:[esi]
  41945a:	inc    eax
  41945b:	push   0xffffffd8
  41945d:	mov    ebp,0x43a41f38
  419462:	xor    eax,0xf713ec7
  419467:	dec    ebx
  419468:	sbb    ecx,DWORD PTR [edx]
  41946a:	inc    ecx
  41946b:	(bad)  
  41946c:	in     al,dx
  41946d:	pop    ds
  41946e:	sub    eax,0x87a24895
  419473:	aaa    
  419474:	retf   0x3cfd
  419477:	mov    bh,0xe3
  419479:	aaa    
  41947a:	mov    al,0x99
  41947c:	mov    ah,0xf7
  41947e:	mov    BYTE PTR [esi-0x6],cl
  419481:	sub    BYTE PTR [ebp-0x4d],bl
  419484:	cli    
  419485:	(bad)  
  419486:	jo     0x419484
  419488:	pop    ebp
  419489:	jnp    0x41948d
  41948b:	pop    esp
  41948c:	test   dl,0x9d
  41948f:	jne    0x41944e
  419491:	and    DWORD PTR [edx-0x34],ebx
  419494:	mov    dh,0xeb
  419496:	jno    0x4194a3
  419498:	icebp  
  419499:	inc    ecx
  41949a:	add    BYTE PTR [edx],ch
  41949c:	and    DWORD PTR [eax],ebp
  41949e:	push   ebp
  41949f:	(bad)  
  4194a0:	shl    ecx,cl
  4194a2:	inc    eax
  4194a3:	fwait
  4194a4:	adc    eax,0x52a5c67d
  4194a9:	lods   eax,DWORD PTR ds:[esi]
  4194aa:	aam    0xbc
  4194ac:	add    DWORD PTR [edi-0x52],0x3c65e5a8
  4194b3:	pop    ecx
  4194b4:	dec    eax
  4194b5:	ss pushfw 
  4194b8:	(bad)  
  4194b9:	lods   al,BYTE PTR ds:[esi]
  4194ba:	push   ebx
  4194bb:	adc    cl,BYTE PTR [eax+esi*4+0x42f496d6]
  4194c2:	add    BYTE PTR [eax+esi*1-0x3b],cl
  4194c6:	pop    ss
  4194c7:	xchg   ebp,eax
  4194c8:	scas   al,BYTE PTR es:[edi]
  4194c9:	sbb    al,0xaa
  4194cb:	outs   dx,DWORD PTR ds:[esi]
  4194cc:	and    al,0x35
  4194ce:	cld    
  4194cf:	pop    ebp
  4194d0:	mov    esi,0x5650f018
  4194d5:	shl    DWORD PTR ds:[eax],1
  4194d8:	rol    DWORD PTR [ebx+0x35],0x82
  4194dc:	pop    edi
  4194dd:	jnp    0x419499
  4194df:	pop    eax
  4194e0:	out    0xc2,eax
  4194e2:	js     0x419519
  4194e4:	and    eax,0xe64648b1
  4194e9:	mov    edi,0xe0c4ce29
  4194ee:	jbe    0x41950d
  4194f0:	mov    ah,0xc0
  4194f2:	outs   dx,BYTE PTR ds:[esi]
  4194f3:	inc    esp
  4194f4:	aad    0xcd
  4194f6:	mov    esp,0x2767baaf
  4194fb:	xchg   ebx,eax
  4194fc:	xchg   esi,eax
  4194fd:	mov    ?,WORD PTR [eax]
  4194ff:	inc    edx
  419500:	ficomp DWORD PTR [eax]
  419502:	mov    ecx,0x46c1b75a
  419507:	fstp   DWORD PTR [esi-0x71a23291]
  41950d:	push   esi
  41950e:	rcr    ecx,1
  419510:	js     0x41951f
  419512:	hlt    
  419513:	rcl    BYTE PTR [esi+esi*8+0x40],0xcf
  419518:	stos   BYTE PTR es:[edi],al
  419519:	sar    dl,cl
  41951b:	icebp  
  41951c:	(bad)  
  41951d:	add    al,0x6a
  41951f:	outs   dx,BYTE PTR ds:[esi]
  419520:	xchg   BYTE PTR [edx],dl
  419522:	arpl   WORD PTR [ecx+0x40ddc8a9],ax
  419528:	push   ds
  419529:	add    BYTE PTR [edx],bh
  41952b:	icebp  
  41952c:	bound  edi,QWORD PTR [ecx]
  41952e:	scas   eax,DWORD PTR es:[edi]
  41952f:	or     BYTE PTR [edi+ecx*1],dh
  419532:	inc    DWORD PTR [edi+0x25]
  419535:	mov    WORD PTR [ebp-0x4c],es
  419538:	fstp   DWORD PTR [esp+ebx*1-0x74]
  41953c:	mov    dl,0x57
  41953e:	test   esi,edx
  419540:	pop    edx
  419541:	call   0xd3e7470a
  419546:	jbe    0x41952e
  419548:	push   edi
  419549:	(bad)  
  41954a:	in     eax,0x2
  41954c:	outs   dx,BYTE PTR ds:[esi]
  41954d:	es mov dh,0xd8
  419550:	xchg   ebp,eax
  419551:	or     BYTE PTR [ebx+esi*2-0x38],ch
  419555:	and    eax,0x7a4c5701
  41955a:	cmc    
  41955b:	lea    esp,[ebp+ecx*4+0x36]
  41955f:	adc    al,0xbf
  419561:	aam    0xea
  419563:	lds    esi,FWORD PTR [esi+0x37]
  419566:	stos   DWORD PTR es:[edi],eax
  419567:	les    ebp,FWORD PTR [esi+edx*2+0x2d]
  41956b:	scas   al,BYTE PTR es:[edi]
  41956c:	fimul  WORD PTR [eax-0x54]
  41956f:	push   eax
  419570:	sub    bh,BYTE PTR [ecx+0xbc7256c]
  419576:	pushf  
  419577:	pusha  
  419578:	retf   0xe801
  41957b:	inc    edx
  41957c:	das    
  41957d:	inc    edx
  41957e:	frstor [ebx-0x57c1b3d0]
  419584:	les    esp,FWORD PTR [ebx+0x6a]
  419587:	jp     0x4195bd
  419589:	adc    BYTE PTR [ebx+0x1f],0x5b
  41958d:	xchg   ebx,eax
  41958e:	mov    eax,ds:0xb1f39d2
  419593:	mov    al,ds:0xc9f9f58e
  419599:	enter  0x90ed,0xcc
  41959d:	and    BYTE PTR [esi-0x42],ch
  4195a0:	inc    BYTE PTR [eax+0xd2b1bdb]
  4195a6:	pop    ds
  4195a7:	or     BYTE PTR [esi+ebx*8-0x6f],0xc0
  4195ac:	mov    ch,0x5b
  4195ae:	cmp    edi,esp
  4195b0:	lds    eax,FWORD PTR [ebx-0x2e6695b8]
  4195b6:	xor    bl,BYTE PTR [ebp+0x58]
  4195b9:	mov    WORD PTR [ebx+0x20],?
  4195bc:	popf   
  4195bd:	cmp    bl,0x84
  4195c0:	xor    bl,BYTE PTR [eax-0x62a7183a]
  4195c6:	or     ebx,DWORD PTR [esi]
  4195c8:	in     eax,0x64
  4195ca:	add    eax,0xfd02fc9
  4195cf:	shl    BYTE PTR [edi],cl
  4195d1:	xchg   esp,eax
  4195d2:	xchg   esp,eax
  4195d3:	aas    
  4195d4:	aas    
  4195d5:	into   
  4195d6:	es std 
  4195d8:	dec    ebp
  4195d9:	and    eax,DWORD PTR [edx]
  4195db:	cmp    al,0xe8
  4195dd:	call   0xcf7e1830
  4195e2:	xor    DWORD PTR [ebx+esi*1],edx
  4195e5:	imul   ebx,DWORD PTR [ebx+0x4ba4077b],0x3a
  4195ec:	xchg   DWORD PTR [ecx-0x56],ecx
  4195ef:	pushf  
  4195f0:	pop    ebx
  4195f1:	test   DWORD PTR [ebx-0x671cbf57],ecx
  4195f7:	xor    ebx,edx
  4195f9:	jle    0x41964d
  4195fb:	push   esi
  4195fc:	adc    DWORD PTR [edx+ecx*4-0x3c],edx
  419600:	fnstenv [ebx+ecx*2]
  419603:	push   0xec748bc2
  419608:	mov    ds:0xed4d389e,eax
  41960d:	sbb    dh,bh
  41960f:	in     al,dx
  419610:	xor    eax,0xfe368f2b
  419615:	push   ecx
  419616:	test   al,0x1
  419618:	push   cs
  419619:	lahf   
  41961a:	int3   
  41961b:	ret    
  41961c:	test   al,0x46
  41961e:	jne    0x41961c
  419620:	(bad)  
  419621:	in     al,dx
  419622:	pop    edi
  419623:	(bad)  
  419624:	in     eax,0x37
  419626:	aaa    
  419627:	mov    ebp,0xd7230897
  41962c:	int3   
  41962d:	test   al,0xb3
  41962f:	add    eax,DWORD PTR [esp+ebp*8]
  419632:	test   eax,0x15d2b999
  419637:	mov    dh,0x58
  419639:	into   
  41963a:	jnp    0x419665
  41963c:	cmp    DWORD PTR [eax+0x1d],0xffffffba
  419640:	jnp    0x4196bb
  419642:	jno    0x41965a
  419644:	push   esi
  419645:	out    0xbc,eax
  419647:	jb     0x4195fd
  419649:	das    
  41964a:	test   edi,0x712321e
  419650:	ins    BYTE PTR es:[edi],dx
  419651:	sbb    eax,0x49a65b0d
  419656:	push   ebx
  419657:	ins    DWORD PTR es:[edi],dx
  419658:	mov    BYTE PTR [ebx+0x504b96ad],ah
  41965e:	ud0    eax,DWORD PTR [esi]
  419661:	mov    dl,0x93
  419663:	inc    esp
  419664:	js     0x419668
  419666:	and    eax,0xc4a86093
  41966b:	(bad)  [ecx-0x2ac61e99]
  419671:	in     al,dx
  419672:	mov    ds:0x219ba699,al
  419677:	xor    eax,0xbd2e67f0
  41967c:	jo     0x4196c5
  41967e:	and    eax,0xc0ef27a6
  419683:	xor    BYTE PTR [ebp-0x60],dl
  419686:	imul   esi,DWORD PTR [ebp+0x7f872502],0xffffffe2
  41968d:	mov    ah,0x5a
  41968f:	sbb    dl,BYTE PTR [ecx+0x52a60abd]
  419695:	fldenv [esi-0x11]
  419698:	or     dl,0xdc
  41969b:	retf   0x1d1e
  41969e:	jne    0x4196b0
  4196a0:	or     eax,0xc06e9b74
  4196a5:	push   0xffffff8d
  4196a7:	cdq    
  4196a8:	push   eax
  4196a9:	in     eax,dx
  4196aa:	inc    esi
  4196ab:	retf   0xb3b0
  4196ae:	mov    edx,0x2a6a7e3b
  4196b3:	xchg   esi,eax
  4196b4:	mov    dh,0x54
  4196b6:	or     BYTE PTR [esp+esi*4],al
  4196b9:	add    al,BYTE PTR [esi+0x70]
  4196bc:	fisttp WORD PTR [esi-0x13]
  4196bf:	(bad)  
  4196c0:	je     0x419696
  4196c2:	push   es
  4196c3:	sahf   
  4196c4:	push   edx
  4196c5:	out    0x2f,eax
  4196c7:	xchg   ebp,eax
  4196c8:	mov    eax,ds:0xc31c679c
  4196cd:	scas   eax,DWORD PTR es:[edi]
  4196ce:	(bad)  
  4196cf:	imul   esi,DWORD PTR ds:0x5eb32cc8,0xffffffa0
  4196d6:	mov    ebx,0x734e4c50
  4196db:	fmul   st(0),st
  4196dd:	cmp    ah,ch
  4196df:	add    DWORD PTR [edi],eax
  4196e1:	dec    edi
  4196e2:	push   cs
  4196e3:	fidiv  WORD PTR [ebx]
  4196e5:	pop    edx
  4196e6:	shl    BYTE PTR [eax-0x5bfd8f8a],1
  4196ec:	cwde   
  4196ed:	jl     0x4196b0
  4196ef:	rcl    DWORD PTR [edi-0x3b],1
  4196f2:	xchg   edx,eax
  4196f3:	(bad)  
  4196f4:	and    al,0x1b
  4196f6:	jmp    0x679205a7
  4196fb:	in     al,dx
  4196fc:	repnz iret 
  4196fe:	into   
  4196ff:	hlt    
  419700:	and    bl,ch
  419702:	aaa    
  419703:	nop
  419704:	arpl   bp,dx
  419706:	inc    eax
  419707:	xlat   BYTE PTR ds:[ebx]
  419708:	addr16 jp 0x41968b
  41970b:	mov    edi,0xb934b902
  419710:	imul   BYTE PTR [ebp+0x18]
  419713:	fimul  WORD PTR [ebp-0x6daf69a1]
  419719:	inc    ebx
  41971a:	lahf   
  41971b:	or     BYTE PTR [edx+eiz*2-0x5351bd26],ah
  419722:	leave  
  419723:	pop    ebp
  419724:	sub    ecx,esp
  419726:	fcmovne st,st(2)
  419728:	pop    ebx
  419729:	push   es
  41972a:	in     al,dx
  41972b:	push   ebx
  41972c:	out    0xfc,eax
  41972e:	dec    ecx
  41972f:	mov    ch,0xcd
  419731:	xchg   ecx,eax
  419732:	or     al,0x19
  419734:	out    0x60,al
  419736:	sbb    BYTE PTR [ecx+0x59a28239],dh
  41973c:	push   eax
  41973d:	test   DWORD PTR [esi],esi
  41973f:	inc    edx
  419740:	jno    0x419795
  419742:	jne    0x4196e8
  419744:	popa   
  419745:	addr16 mov ebx,0x4b0886b4
  41974b:	ins    BYTE PTR es:[edi],dx
  41974c:	and    al,0xd5
  41974e:	add    eax,0x4a833f64
  419753:	push   esp
  419754:	lods   eax,DWORD PTR ds:[esi]
  419755:	inc    ecx
  419756:	shl    al,cl
  419758:	lds    ebp,FWORD PTR [esi+eax*4]
  41975b:	ss retf 0xe8d8
  41975f:	shr    BYTE PTR [eax+0x50],1
  419762:	pop    eax
  419763:	aam    0xcc
  419765:	push   es
  419766:	jge    0x419774
  419768:	add    BYTE PTR [ebx+0x7d],cl
  41976b:	pusha  
  41976c:	mov    ecx,0xc4d45570
  419771:	das    
  419772:	ret    
  419773:	xchg   BYTE PTR [esi],bh
  419775:	pusha  
  419776:	out    0x2a,eax
  419778:	sub    bh,BYTE PTR [ebp+ebx*8-0x544a859b]
  41977f:	pop    esi
  419780:	stos   DWORD PTR es:[edi],eax
  419781:	(bad)  
  419782:	adc    al,0x4a
  419784:	outs   dx,WORD PTR ds:[esi]
  419786:	clc    
  419787:	mov    esi,DWORD PTR cs:[ebp+edx*1-0x59]
  41978c:	rcr    ah,0xfc
  41978f:	hlt    
  419790:	repnz and BYTE PTR [esp+eax*2],bh
  419794:	push   es
  419795:	push   edx
  419796:	fs imul eax
  419799:	lods   al,BYTE PTR ds:[esi]
  41979a:	into   
  41979b:	inc    eax
  41979c:	daa    
  41979d:	ins    BYTE PTR es:[edi],dx
  41979e:	(bad)  [edi-0x31680779]
  4197a4:	mov    bl,0x1b
  4197a6:	pop    ds
  4197a7:	push   edx
  4197a8:	ret    
  4197a9:	test   eax,0xe5329f51
  4197af:	into   
  4197b0:	ret    
  4197b1:	adc    ah,BYTE PTR [edi-0x434aacb6]
  4197b7:	je     0x4197e1
  4197b9:	xchg   ebp,eax
  4197ba:	inc    edi
  4197bb:	jg     0x4197ef
  4197bd:	retf   0x94d8
  4197c0:	adc    al,0x7
  4197c2:	mov    bh,0x43
  4197c4:	sar    BYTE PTR [esi+0x2d],cl
  4197c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197c8:	jnp    0x41981a
  4197ca:	xchg   ecx,eax
  4197cb:	dec    edi
  4197cc:	mov    ds:0x4f61d5ef,eax
  4197d1:	or     esp,ebp
  4197d3:	mov    esi,0x8ef75d9b
  4197d8:	into   
  4197d9:	neg    BYTE PTR [esi-0x6ac03e1]
  4197df:	fdiv   DWORD PTR [edi-0x4]
  4197e2:	add    DWORD PTR [edx-0x4a647e47],ebx
  4197e8:	mov    dl,0xd2
  4197ea:	imul   esp,DWORD PTR [esi],0x15
  4197ed:	pop    eax
  4197ee:	lds    ebx,FWORD PTR [edi+0x35]
  4197f1:	push   0x78edae0c
  4197f6:	cmp    dh,al
  4197f8:	cdq    
  4197f9:	xchg   edi,eax
  4197fa:	dec    ebp
  4197fb:	add    BYTE PTR [ebx-0x63],dh
  4197fe:	xor    BYTE PTR [ebp+0x5f45b96f],ch
  419804:	mov    al,ds:0x66f41ae4
  419809:	int3   
  41980a:	inc    edi
  41980b:	cmp    ebx,DWORD PTR [edx-0x357857ac]
  419811:	int    0x1
  419813:	es xchg ecx,eax
  419815:	push   0x44
  419817:	or     eax,esp
  419819:	adc    BYTE PTR [ecx-0x13725831],ah
  41981f:	jae    0x419888
  419821:	scas   eax,DWORD PTR es:[edi]
  419822:	cld    
  419823:	imul   ecx,DWORD PTR [edx+eax*1],0xffffffc4
  419827:	ficom  DWORD PTR [esi-0x2a42c36b]
  41982d:	(bad)
  419830:	sub    al,0x7b
  419832:	jae    0x419817
  419834:	int    0xc7
  419836:	jg     0x4197cc
  419838:	add    DWORD PTR [edi-0x54],ecx
  41983b:	fwait
  41983c:	jbe    0x4198a6
  41983e:	jl     0x4197f9
  419840:	mov    bh,0x49
  419842:	push   0xbc0573
  419847:	jbe    0x4197f0
  419849:	imul   ecx,DWORD PTR [edi],0x44
  41984c:	int    0xd1
  41984e:	aaa    
  41984f:	rcl    DWORD PTR [eax-0x28],0x4d
  419853:	call   0xec04a993
  419858:	inc    ebx
  419859:	pop    es
  41985a:	push   edi
  41985b:	xor    DWORD PTR [ebx+0x623acdd1],ebp
  419861:	das    
  419862:	test   DWORD PTR [ebp+0x4d4d1bb3],edx
  419868:	shl    DWORD PTR [esi],1
  41986a:	xchg   DWORD PTR gs:[ebp+0x41],ebx
  41986e:	test   BYTE PTR [esi],bl
  419870:	inc    edi
  419871:	scas   al,BYTE PTR es:[edi]
  419872:	lds    edi,FWORD PTR [edx]
  419874:	jbe    0x419869
  419876:	dec    ebx
  419877:	test   al,0xf7
  419879:	loope  0x4198db
  41987b:	mov    BYTE PTR [ecx],ch
  41987d:	(bad)  
  41987e:	arpl   WORD PTR [esi-0x3b],bp
  419881:	inc    edi
  419882:	(bad)
  419885:	fwait
  419886:	ror    DWORD PTR [edx-0x228512f5],1
  41988c:	mov    edi,0x17ac0625
  419891:	pop    ebx
  419892:	js     0x419887
  419894:	xor    ebx,DWORD PTR ds:0xe2ff51a
  41989a:	scas   eax,DWORD PTR es:[edi]
  41989b:	mov    cl,0xef
  41989d:	test   al,0x83
  41989f:	jbe    0x41988c
  4198a1:	lods   al,BYTE PTR ds:[esi]
  4198a2:	inc    edx
  4198a3:	hlt    
  4198a4:	ja     0x419903
  4198a6:	out    dx,eax
  4198a7:	int    0xb
  4198a9:	xor    BYTE PTR [edx+0xf],bl
  4198ac:	push   edx
  4198ad:	std    
  4198ae:	shr    DWORD PTR [eax+0x3c87c747],0xa4
  4198b5:	pop    edi
  4198b6:	js     0x4198f1
  4198b8:	jmp    0x4198aa
  4198ba:	mov    ebx,0xade56b77
  4198bf:	and    edi,DWORD PTR [esi]
  4198c1:	aas    
  4198c2:	int    0xb7
  4198c4:	xor    al,0xa3
  4198c6:	and    esp,eax
  4198c8:	sbb    BYTE PTR [esi-0x58],al
  4198cb:	movlps xmm3,QWORD PTR [edi]
  4198ce:	call   0x2b31:0xbd54bc84
  4198d5:	sbb    esp,DWORD PTR [eax+0x1c]
  4198d8:	jge    0x41988a
  4198da:	mov    edx,0xab9ec873
  4198df:	mov    ebx,0xc1523fb7
  4198e4:	jns    0x4198ce
  4198e6:	sbb    al,0x2b
  4198e8:	or     eax,0xfbde1e2a
  4198ed:	mov    ecx,0x8ab70fc1
  4198f2:	imul   ebx,DWORD PTR [edi-0x2fc6469],0x673c8083
  4198fc:	dec    eax
  4198fd:	adc    BYTE PTR [ebx],bh
  4198ff:	and    bl,cl
  419901:	mov    WORD PTR [ebx+ecx*1-0x44],fs
  419905:	xchg   DWORD PTR [ebx+0xc],edx
  419908:	jae    0x41990a
  41990a:	out    dx,al
  41990b:	xchg   edi,eax
  41990c:	inc    esi
  41990d:	mov    dh,0x7b
  41990f:	pop    edx
  419910:	inc    esp
  419911:	bound  esi,QWORD PTR [eax+0x1bec80bd]
  419917:	jmp    0x419976
  419919:	fs inc ecx
  41991b:	mov    ebp,0x352fb80f
  419920:	cld    
  419921:	das    
  419922:	and    eax,0x8e61447b
  419927:	js     0x419969
  419929:	int    0x83
  41992b:	dec    ebp
  41992c:	push   ebx
  41992d:	jnp    0x4199ae
  41992f:	dec    ebp
  419930:	mov    cs,WORD PTR [ecx]
  419932:	dec    ebx
  419933:	and    edi,DWORD PTR [eax-0x1706bf40]
  419939:	and    al,0x95
  41993b:	add    BYTE PTR [eax],bh
  41993d:	outs   dx,DWORD PTR ds:[esi]
  41993e:	sub    DWORD PTR [ebx-0x2a087809],eax
  419944:	xor    esi,esi
  419946:	mov    bh,0xcd
  419948:	and    al,0x59
  41994a:	(bad)  
  41994b:	sbb    al,0x9a
  41994d:	push   ebx
  41994e:	or     al,0xb0
  419950:	(bad)  
  419952:	cmp    bh,dl
  419954:	dec    edx
  419955:	in     eax,0x97
  419957:	imul   esp,DWORD PTR ds:0xce3f5e20,0x12
  41995e:	cmp    DWORD PTR [ecx-0x79],edx
  419961:	cmp    eax,0x924f8f1f
  419966:	ins    DWORD PTR es:[edi],dx
  419967:	pop    ebx
  419968:	cwde   
  419969:	sub    esi,DWORD PTR [esi+0x79]
  41996c:	ss jbe 0x4198fb
  41996f:	repz cmp BYTE PTR ds:0xd61e2739,dh
  419976:	xchg   edx,eax
  419977:	pop    ecx
  419978:	and    eax,0x86e52d27
  41997d:	into   
  41997e:	push   ebp
  41997f:	pop    esp
  419980:	add    esp,0xffffffd3
  419983:	add    ecx,DWORD PTR [eax-0x7e46be31]
  419989:	test   eax,0x781bf995
  41998e:	jp     0x4199f0
  419990:	jecxz  0x41999e
  419992:	je     0x419a05
  419994:	fwait
  419995:	ss jg  0x41998b
  419998:	push   ebp
  419999:	addr16 or al,0xf1
  41999c:	inc    edi
  41999d:	jmp    0xf5b0:0x8364b592
  4199a4:	sub    BYTE PTR [eax-0x60ed9231],ah
  4199aa:	popf   
  4199ab:	rcl    DWORD PTR [esi+0x431faa78],cl
  4199b1:	and    dl,ah
  4199b3:	cmp    BYTE PTR [edx],ch
  4199b5:	test   BYTE PTR ds:0xb41f3a80,bl
  4199bb:	or     eax,0x4e61ed4c
  4199c0:	clc    
  4199c1:	jp     0x4199d2
  4199c3:	inc    esi
  4199c4:	cli    
  4199c5:	js     0x4199cf
  4199c7:	jbe    0x4199c6
  4199c9:	mov    edx,0x34e1ecda
  4199ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199cf:	add    al,0xef
  4199d1:	push   ebp
  4199d2:	xchg   edx,eax
  4199d3:	outs   dx,BYTE PTR ds:[esi]
  4199d4:	jb     0x4199ec
  4199d6:	ror    esi,0x2
  4199d9:	or     cl,bl
  4199db:	lea    esi,[ebp+0x40]
  4199de:	sub    ah,BYTE PTR [ebx-0x70]
  4199e1:	pop    ecx
  4199e2:	sbb    BYTE PTR ds:0xdcc86140,cl
  4199e8:	sahf   
  4199e9:	adc    DWORD PTR [edi+0xf],esp
  4199ec:	daa    
  4199ed:	or     eax,edx
  4199ef:	mov    edi,0x6e19bb6a
  4199f4:	lahf   
  4199f5:	jne    0x419999
  4199f7:	pop    ss
  4199f8:	and    edi,DWORD PTR [ecx-0x1d303819]
  4199fe:	aad    0x10
  419a00:	add    BYTE PTR [ecx-0x6187a201],bh
  419a06:	loop   0x419a33
  419a08:	test   cl,cl
  419a0a:	fcomi  st,st(3)
  419a0c:	out    dx,al
  419a0d:	mov    ecx,0x5f947e6f
  419a12:	mov    bh,0x97
  419a14:	imul   esp,DWORD PTR [eax+0xf],0x16
  419a18:	or     BYTE PTR [ebx-0x63],ch
  419a1b:	or     DWORD PTR [edx-0x461ede76],ecx
  419a21:	test   DWORD PTR [edx+0x2f17f4d1],edi
  419a27:	loopne 0x419a33
  419a29:	push   si
  419a2b:	xor    cl,BYTE PTR [eax+edx*8-0xeec83db]
  419a32:	dec    edx
  419a33:	xchg   DWORD PTR [ebx+0x4b],ecx
  419a36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a37:	ss add eax,0x4d8f6dcc
  419a3d:	neg    DWORD PTR [esi+0x7d]
  419a40:	mov    ds:0x3e5c1c4a,eax
  419a45:	neg    DWORD PTR [eax]
  419a47:	inc    eax
  419a48:	jb     0x4199df
  419a4a:	mov    cl,BYTE PTR [ebp-0x8]
  419a4d:	and    BYTE PTR fs:[eax],0x21
  419a51:	xor    DWORD PTR [ebp-0x53],esi
  419a54:	add    DWORD PTR [edx+0x14],ebp
  419a57:	call   0x1600:0x8f04d81
  419a5e:	stos   DWORD PTR es:[edi],eax
  419a5f:	sub    eax,0xa89a8691
  419a64:	or     eax,0x8ff35499
  419a69:	es pop ss
  419a6b:	fimul  DWORD PTR [edx]
  419a6d:	lea    ecx,[eax+0x1b]
  419a70:	inc    ebp
  419a71:	nop
  419a72:	sbb    eax,0x290728bd
  419a77:	xchg   edx,eax
  419a78:	push   edi
  419a79:	mov    ebx,0x991f9ace
  419a7e:	popf   
  419a7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a80:	fistp  DWORD PTR [edx-0x4dc4f3b8]
  419a86:	arpl   WORD PTR [ecx-0x57],bx
  419a89:	pop    esi
  419a8a:	xor    al,0x1
  419a8c:	pop    esi
  419a8d:	push   edx
  419a8e:	pop    ss
  419a8f:	mov    DWORD PTR [esi-0x2d5fa955],edi
  419a95:	aas    
  419a96:	popf   
  419a97:	js     0x419a6c
  419a99:	stc    
  419a9a:	adc    ebx,DWORD PTR [ecx-0x12cbd6e5]
  419aa0:	test   ebp,ebp
  419aa2:	pop    edi
  419aa3:	js     0x419a90
  419aa5:	lods   eax,DWORD PTR ds:[esi]
  419aa6:	jae    0x419ac4
  419aa8:	cmp    eax,0xbfe57bb6
  419aad:	xchg   ebp,eax
  419aae:	dec    ebx
  419aaf:	and    ch,BYTE PTR [ebp-0x48d53f3d]
  419ab5:	ror    ebp,cl
  419ab7:	push   0x46
  419ab9:	xlat   BYTE PTR ds:[ebx]
  419aba:	push   ds
  419abb:	push   ebp
  419abc:	xlat   BYTE PTR ds:[ebx]
  419abd:	or     esp,ecx
  419abf:	mov    dh,0x1f
  419ac1:	inc    ebx
  419ac2:	out    dx,eax
  419ac3:	adc    eax,0xea5ee522
  419ac8:	xor    al,0xfe
  419aca:	retf   0x5368
  419acd:	cdq    
  419ace:	mov    ebp,0x400a9662
  419ad3:	pop    edx
  419ad4:	les    esi,FWORD PTR [eax-0x6699b5f3]
  419ada:	cld    
  419adb:	jno    0x419afd
  419add:	les    edi,FWORD PTR [edx-0x2f46b2ca]
  419ae3:	out    0x87,eax
  419ae5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ae6:	dec    ecx
  419ae7:	aaa    
  419ae8:	push   0xffffffe2
  419aea:	scas   al,BYTE PTR es:[edi]
  419aeb:	sar    BYTE PTR [eax],1
  419aed:	jne    0x419a71
  419aef:	mov    dh,0x44
  419af1:	into   
  419af2:	test   al,0x42
  419af4:	fs pop edi
  419af6:	mov    ch,0x9b
  419af8:	cdq    
  419af9:	daa    
  419afa:	icebp  
  419afb:	jecxz  0x419ad9
  419afd:	push   edi
  419afe:	nop
  419aff:	(bad)  
  419b00:	ds iret 
  419b02:	dec    edx
  419b03:	add    dh,bl
  419b05:	sub    BYTE PTR [ecx+esi*4-0xa],cl
  419b09:	sar    BYTE PTR [ebp+0xf1a7f2a],cl
  419b0f:	bound  eax,QWORD PTR [edi]
  419b11:	jl     0x419b7e
  419b13:	push   cs
  419b14:	and    eax,0x7f290d4e
  419b19:	cmc    
  419b1a:	cmp    DWORD PTR [esi-0x2f],esp
  419b1d:	mov    esp,0xec0687db
  419b22:	and    al,0xc7
  419b24:	inc    edi
  419b25:	lds    esi,FWORD PTR [esi+0xb73077f]
  419b2b:	cmp    BYTE PTR [edi-0x7882b0e8],0x44
  419b32:	push   ebx
  419b33:	jge    0x419b5e
  419b35:	mov    esp,0x3017367
  419b3a:	mov    ch,0xda
  419b3c:	cmp    bh,BYTE PTR ds:0x1a0b9364
  419b42:	lock (bad) 
  419b44:	dec    ebx
  419b45:	or     DWORD PTR [edx-0x7a],esi
  419b48:	jnp    0x419aeb
  419b4a:	fmul   QWORD PTR [ebx-0x6f]
  419b4d:	pop    es
  419b4e:	or     al,0x52
  419b50:	xor    DWORD PTR [esi],esi
  419b52:	shr    bl,0x7
  419b55:	and    DWORD PTR [ebx-0x1790bb9d],edi
  419b5b:	addr16 dec edx
  419b5d:	mov    edi,0xb5100097
  419b62:	int3   
  419b63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b64:	fwait
  419b65:	inc    esp
  419b66:	pop    ebp
  419b67:	sbb    BYTE PTR [eax+0x3daf79b1],0x36
  419b6e:	gs lock mov eax,0x19de56e5
  419b75:	jmp    0x7ec7:0x302cb7da
  419b7c:	cli    
  419b7d:	jb     0x419b0b
  419b7f:	ror    ah,1
  419b81:	and    ebp,DWORD PTR ds:0x16f597cb
  419b87:	jl     0x419b81
  419b89:	push   ebx
  419b8a:	mov    DWORD PTR [ebx],eax
  419b8c:	inc    ebx
  419b8d:	add    al,0xdb
  419b8f:	jae    0x419b75
  419b91:	mov    ch,0xca
  419b93:	mov    esp,0xa283477c
  419b98:	sbb    bl,BYTE PTR [esp+eax*8-0x40ad81b3]
  419b9f:	fnsave [ebx-0x4b]
  419ba2:	and    bh,dl
  419ba4:	out    0x48,eax
  419ba6:	or     ecx,DWORD PTR [ecx-0x6d2cf7b2]
  419bac:	pop    ss
  419bad:	mov    esi,0x7e89f232
  419bb2:	popf   
  419bb3:	fbld   TBYTE PTR [edi+esi*8-0x7f]
  419bb7:	imul   BYTE PTR gs:[ebx+0x1eceb3dc]
  419bbe:	push   ds
  419bbf:	add    DWORD PTR [edx+0x1f8c8fdc],ecx
  419bc5:	inc    ebx
  419bc6:	fld    QWORD PTR [edx-0x44ad67f5]
  419bcc:	push   edx
  419bcd:	push   ds
  419bce:	and    al,0x54
  419bd0:	jmp    0x419b9b
  419bd2:	outs   dx,BYTE PTR ds:[esi]
  419bd3:	lods   al,BYTE PTR ds:[esi]
  419bd4:	(bad)  
  419bd5:	out    dx,eax
  419bd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bd7:	fmul   DWORD PTR [eax+0x34]
  419bda:	fwait
  419bdb:	jns    0x419bca
  419bdd:	xlat   BYTE PTR ds:[ebx]
  419bde:	push   esp
  419bdf:	sub    eax,0xfd22ec22
  419be4:	jo     0x419c4f
  419be6:	xchg   ecx,eax
  419be7:	push   esi
  419be8:	or     edi,0xffffffdf
  419beb:	xchg   esi,eax
  419bec:	(bad)  
  419bed:	cld    
  419bee:	es mov dh,0xb5
  419bf1:	jecxz  0x419bf3
  419bf3:	jge    0x419c41
  419bf5:	dec    eax
  419bf6:	xchg   edi,eax
  419bf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bf8:	jo     0x419c16
  419bfa:	cmc    
  419bfb:	inc    edx
  419bfc:	ins    BYTE PTR es:[edi],dx
  419bfd:	mov    ecx,0xd925f856
  419c02:	(bad)  
  419c03:	push   DWORD PTR [ecx-0x332c3b03]
  419c09:	fist   DWORD PTR [ebx+0x11c7671a]
  419c0f:	stos   DWORD PTR es:[edi],eax
  419c10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c11:	push   es
  419c12:	and    ch,BYTE PTR [ecx+0x61948995]
  419c18:	les    eax,FWORD PTR [esi]
  419c1a:	enter  0x317c,0x71
  419c1e:	(bad)  
  419c1f:	ins    BYTE PTR es:[edi],dx
  419c20:	inc    edx
  419c21:	out    dx,al
  419c22:	pop    esp
  419c23:	imul   eax,DWORD PTR [ecx-0x3411d937],0xffffffaf
  419c2a:	add    eax,0x874d666d
  419c2f:	fadd   QWORD PTR [ebx]
  419c31:	dec    eax
  419c32:	cmp    al,0x1c
  419c34:	push   ds
  419c35:	push   edx
  419c36:	popf   
  419c37:	idiv   al
  419c39:	les    eax,FWORD PTR [esi]
  419c3b:	mov    bh,0x77
  419c3d:	aas    
  419c3e:	fdiv   DWORD PTR [ebx-0x32bb5e12]
  419c44:	xor    DWORD PTR [edi+eiz*4+0x6a],edi
  419c48:	stos   DWORD PTR es:[edi],eax
  419c49:	inc    eax
  419c4a:	in     al,dx
  419c4b:	push   ebp
  419c4c:	mov    esp,DWORD PTR [edi+eax*1-0x80]
  419c50:	push   es
  419c51:	stc    
  419c52:	mov    bl,0xf0
  419c54:	and    ebx,DWORD PTR [esi+0x35]
  419c57:	stos   BYTE PTR es:[edi],al
  419c58:	cdq    
  419c59:	mov    WORD PTR [eax-0xe035468],gs
  419c5f:	sub    al,0x19
  419c61:	inc    ebp
  419c62:	sbb    ebx,DWORD PTR [edi-0x48]
  419c65:	jne    0x419c3b
  419c67:	loopne 0x419c52
  419c69:	or     al,0x4
  419c6b:	add    eax,0x127bd875
  419c70:	fisttp DWORD PTR [edx]
  419c72:	fist   DWORD PTR [esi]
  419c74:	in     eax,dx
  419c75:	sub    ebp,ecx
  419c77:	out    0xe8,eax
  419c79:	sbb    ebx,DWORD PTR [esi]
  419c7b:	xor    eax,0xb2c3e12b
  419c80:	and    dl,al
  419c82:	jecxz  0x419c4e
  419c84:	push   ss
  419c85:	sub    eax,0xa6e5a0c3
  419c8a:	and    DWORD PTR [eax+0x75],ebx
  419c8d:	sbb    eax,0xef505444
  419c92:	add    ecx,DWORD PTR ds:0xd5f2fe74
  419c98:	xor    ecx,0x69b28517
  419c9e:	sbb    bl,BYTE PTR [ebp-0x3fd270ee]
  419ca4:	push   ss
  419ca5:	imul   ebx,ecx,0xcbeea080
  419cab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cac:	cmp    edx,DWORD PTR [eax]
  419cae:	and    al,0x62
  419cb0:	mov    dh,0x7d
  419cb2:	ins    BYTE PTR es:[edi],dx
  419cb3:	(bad)  
  419cb5:	int    0x68
  419cb7:	jmp    0x6273fb1
  419cbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cbd:	xchg   ecx,eax
  419cbe:	rcl    DWORD PTR [ebx],1
  419cc0:	(bad)  [esi+ecx*8]
  419cc3:	jns    0x419d35
  419cc5:	dec    ebx
  419cc6:	repz add eax,0xa8f72878
  419ccc:	mov    ds:0x2a1a425d,eax
  419cd1:	jecxz  0x419d20
  419cd3:	int3   
  419cd4:	stos   DWORD PTR es:[edi],eax
  419cd5:	inc    edi
  419cd6:	xor    esi,esp
  419cd8:	mov    ecx,0x52f52e83
  419cdd:	mov    edx,0x11cadae8
  419ce2:	mov    edi,DWORD PTR [ebp+0x1113da79]
  419ce8:	and    bl,BYTE PTR [edx]
  419cea:	scas   eax,DWORD PTR es:[edi]
  419ceb:	idiv   DWORD PTR ds:0x6d12017e
  419cf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419cf2:	cmp    eax,0x176136ea
  419cf7:	push   es
  419cf8:	jb     0x419cb5
  419cfa:	dec    BYTE PTR [esi-0x3d]
  419cfd:	xchg   edi,eax
  419cfe:	xchg   ebx,eax
  419cff:	cli    
  419d00:	in     al,dx
  419d01:	das    
  419d02:	std    
  419d03:	mov    BYTE PTR [edx],0x63
  419d06:	ds repz sbb ah,bl
  419d0a:	cld    
  419d0b:	out    0xa,eax
  419d0d:	sbb    DWORD PTR [edi+eiz*8-0x4e098069],ecx
  419d14:	or     bl,BYTE PTR [ecx+0x5ce5aa06]
  419d1a:	in     al,dx
  419d1b:	rol    DWORD PTR [edi+0x76f3fdc3],0xb2
  419d22:	dec    ebx
  419d23:	into   
  419d24:	mov    al,0x9d
  419d26:	clc    
  419d27:	mov    dl,0x35
  419d29:	mov    al,ds:0xc129475e
  419d2e:	aaa    
  419d2f:	repnz retf 
  419d31:	adc    BYTE PTR [ecx+0x4efcce34],al
  419d37:	mov    cl,0x89
  419d39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d3a:	and    DWORD PTR [ecx-0x23],ebp
  419d3d:	pop    ecx
  419d3e:	jnp    0x419d18
  419d40:	clc    
  419d41:	inc    ecx
  419d42:	shr    bl,1
  419d44:	or     dl,ch
  419d46:	cmp    al,0xd3
  419d48:	pop    ebx
  419d49:	das    
  419d4a:	dec    esp
  419d4b:	mov    dl,0x9a
  419d4d:	sbb    BYTE PTR [ebp+0x1f],bh
  419d50:	push   0xffffff94
  419d52:	and    eax,0x79f3a95f
  419d57:	jo     0x419d20
  419d59:	jae    0x419d51
  419d5b:	pop    esp
  419d5c:	out    0x56,eax
  419d5e:	sub    esi,DWORD PTR [edx]
  419d60:	push   es
  419d61:	fistp  DWORD PTR [esi+0x33ccae4e]
  419d67:	xor    al,0xde
  419d69:	push   ss
  419d6a:	fs sub eax,0x97fb6686
  419d70:	out    0xda,al
  419d72:	xchg   esp,eax
  419d73:	jle    0x419db6
  419d75:	sub    ebp,DWORD PTR [ecx+eiz*4]
  419d78:	ins    BYTE PTR es:[edi],dx
  419d79:	outs   dx,DWORD PTR ds:[esi]
  419d7a:	xchg   edi,eax
  419d7b:	stos   BYTE PTR es:[edi],al
  419d7c:	(bad)  
  419d7e:	arpl   WORD PTR [esi-0x79],dx
  419d81:	aas    
  419d82:	ja     0x419d8c
  419d84:	ret    
  419d85:	loopne 0x419d07
  419d87:	xchg   ebp,eax
  419d88:	or     DWORD PTR [edx+0x70b94af],0x3732cd36
  419d92:	std    
  419d93:	sbb    esi,edi
  419d95:	ins    DWORD PTR es:[edi],dx
  419d96:	sub    ecx,DWORD PTR [ebx-0x11026b1]
  419d9c:	out    dx,eax
  419d9d:	add    DWORD PTR [edi+eiz*8],ebx
  419da0:	in     al,0x83
  419da2:	pushf  
  419da3:	or     edi,DWORD PTR [esi+0x73]
  419da6:	stos   BYTE PTR es:[edi],al
  419da7:	add    BYTE PTR [ebp+esi*4-0x75],dl
  419dab:	dec    ebp
  419dac:	push   ds
  419dad:	mov    al,0x6a
  419daf:	sub    eax,0x6a8f856f
  419db4:	lock jmp ebx
  419db7:	repnz enter 0x3a8b,0x6b
  419dbc:	mov    ds:0x38e5908c,al
  419dc1:	cs cmc 
  419dc3:	mov    al,0xe6
  419dc5:	rol    esi,cl
  419dc7:	pop    ebx
  419dc8:	sub    al,0x3c
  419dca:	fisttp DWORD PTR [ecx-0x38]
  419dcd:	and    esp,ecx
  419dcf:	or     al,ah
  419dd1:	dec    edi
  419dd2:	inc    ebp
  419dd3:	and    edi,ebx
  419dd5:	in     eax,dx
  419dd6:	inc    BYTE PTR [ebx+0x7]
  419dd9:	and    BYTE PTR [ecx-0x3f],bh
  419ddc:	lods   eax,DWORD PTR ds:[esi]
  419ddd:	ret    
  419dde:	and    DWORD PTR [ecx],edx
  419de0:	mov    DWORD PTR [eax],esi
  419de2:	jge    0x419e39
  419de4:	in     eax,0xa3
  419de6:	push   ss
  419de7:	mov    ebp,0x64aa2278
  419dec:	scas   eax,DWORD PTR es:[edi]
  419ded:	pop    esi
  419dee:	sub    ebp,DWORD PTR [ebx]
  419df0:	dec    ecx
  419df1:	sub    DWORD PTR [ebx+0x74bc989c],0xffffffe9
  419df8:	jl     0x419db2
  419dfa:	in     al,0x4b
  419dfc:	xor    esp,eax
  419dfe:	in     al,0xf
  419e00:	lea    esi,[ebp-0x2]
  419e03:	push   ds
  419e04:	sbb    esi,DWORD PTR [esi-0x198d5af4]
  419e0a:	out    dx,eax
  419e0b:	idiv   BYTE PTR [ebp+0x52]
  419e0e:	sub    BYTE PTR [ebp-0x424836e5],bl
  419e14:	adc    ecx,DWORD PTR [edi]
  419e16:	mov    ds:0xcedb12e4,eax
  419e1b:	sbb    eax,0x51637cc5
  419e20:	inc    esi
  419e21:	test   eax,0x3b11e9c7
  419e26:	ret    0xa7c3
  419e29:	stos   DWORD PTR es:[edi],eax
  419e2a:	mov    bl,0xa9
  419e2c:	cmp    DWORD PTR [esi-0x2e],esp
  419e2f:	jns    0x419e49
  419e31:	mov    cl,0x79
  419e33:	or     BYTE PTR [edi],al
  419e35:	xchg   BYTE PTR [esi-0x42],bh
  419e38:	mov    ds:0x251452b,al
  419e3d:	outs   dx,BYTE PTR ds:[esi]
  419e3e:	or     ah,BYTE PTR [esi+0x6e]
  419e41:	push   esp
  419e42:	jg     0x419e7e
  419e44:	pop    esp
  419e45:	mov    ecx,0x7bcdcfcc
  419e4a:	pop    eax
  419e4b:	cmp    BYTE PTR [eax+0x59e6a24b],bl
  419e51:	inc    ebp
  419e52:	push   edx
  419e53:	xchg   edi,eax
  419e54:	xor    BYTE PTR [esi+0x63],dh
  419e57:	cdq    
  419e58:	dec    ebp
  419e59:	sub    DWORD PTR [edi+ecx*8+0x4e],esi
  419e5d:	lods   eax,DWORD PTR ds:[esi]
  419e5e:	add    al,0x4c
  419e60:	lods   eax,DWORD PTR ds:[esi]
  419e61:	mov    eax,0x469d053c
  419e66:	push   edi
  419e67:	ins    BYTE PTR es:[edi],dx
  419e68:	jmp    0x59ef:0x4785cf32
  419e6f:	dec    eax
  419e70:	pop    edi
  419e71:	push   esi
  419e72:	adc    DWORD PTR [eax+esi*4],ecx
  419e75:	cmp    al,0x23
  419e77:	mov    ebx,0xc7d04f8f
  419e7c:	sub    al,0x85
  419e7e:	pop    ax
  419e80:	aad    0xf
  419e82:	adc    eax,0xc701039a
  419e87:	sub    DWORD PTR [edx+esi*8+0x647011b],edi
  419e8e:	add    DWORD PTR [ebx-0x79479de7],0xffffffb9
  419e95:	lods   eax,DWORD PTR ds:[esi]
  419e96:	fsub   DWORD PTR [ebx+0x1]
  419e99:	cs loopne 0x419e33
  419e9c:	pop    ds
  419e9d:	sbb    ebx,esi
  419e9f:	stc    
  419ea0:	mov    ebp,ecx
  419ea2:	cmp    eax,0x6dba17ec
  419ea7:	push   ebp
  419ea8:	lods   eax,DWORD PTR ds:[esi]
  419ea9:	xchg   ebx,eax
  419eaa:	retf   
  419eab:	out    0x6d,al
  419ead:	mov    gs,ebp
  419eaf:	mov    esi,0xb7f83259
  419eb4:	adc    esp,DWORD PTR [ecx]
  419eb6:	and    BYTE PTR [edx-0x5b],dl
  419eb9:	pop    ds
  419eba:	and    eax,0x96c05646
  419ebf:	mov    esp,0x4fd2ba52
  419ec4:	jmp    0x419e84
  419ec6:	pop    eax
  419ec7:	push   esp
  419ec8:	mov    ah,al
  419eca:	cdq    
  419ecb:	adc    DWORD PTR [esi+eax*4],edx
  419ece:	ret    0xf608
  419ed1:	or     DWORD PTR [edi+edi*1],ebx
  419ed4:	popf   
  419ed5:	(bad)  
  419ed6:	push   eax
  419ed7:	mov    cl,0xcb
  419ed9:	js     0x419f4a
  419edb:	cdq    
  419edc:	xchg   esi,eax
  419edd:	push   ds
  419ede:	sbb    ebp,DWORD PTR [ebx-0x40]
  419ee1:	cs push es
  419ee3:	jg     0x419f28
  419ee5:	dec    esi
  419ee6:	not    eax
  419ee8:	mov    ah,0xc
  419eea:	fs cmp ecx,esi
  419eed:	jmp    0x419e93
  419eef:	push   0xd15d8c16
  419ef4:	mov    dh,0x98
  419ef6:	(bad)  [ebx+ecx*2]
  419ef9:	in     al,dx
  419efa:	pop    edx
  419efb:	pushf  
  419efc:	arpl   WORD PTR [ecx],dx
  419efe:	pop    ebp
  419eff:	nop
  419f00:	call   0x71afee9e
  419f05:	mov    ebx,ds
  419f07:	(bad)  
  419f08:	shl    BYTE PTR [ecx+ecx*4+0x17],cl
  419f0c:	or     DWORD PTR [esi],0x45831cbe
  419f12:	dec    ebp
  419f13:	repnz sahf 
  419f15:	push   ebp
  419f16:	adc    DWORD PTR [edi],esp
  419f18:	call   0xeb7ae5b0
  419f1d:	mov    BYTE PTR [edi+0x6d],cl
  419f20:	xor    eax,0x9d062c0b
  419f25:	inc    esp
  419f26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f27:	push   esi
  419f28:	pop    ss
  419f29:	(bad)  
  419f2a:	xor    esi,DWORD PTR [ecx+0x2fd00883]
  419f30:	mov    eax,0xa7ffe50c
  419f35:	stc    
  419f36:	adc    ebp,edx
  419f38:	mov    fs,WORD PTR [ebx+0x14]
  419f3b:	mov    ebp,0xa8482b47
  419f40:	out    dx,al
  419f41:	and    eax,DWORD PTR [edi+0x5855127]
  419f47:	setl   bl
  419f4a:	out    0x89,al
  419f4c:	mov    ebx,0x947376af
  419f51:	sbb    DWORD PTR [ebp-0x5],edx
  419f54:	sub    eax,0xea78eef7
  419f59:	jge    0x419fa7
  419f5b:	mov    edx,0xcd2eb8c4
  419f60:	xor    DWORD PTR [ebx],ecx
  419f62:	cld    
  419f63:	mov    esp,0x6b773303
  419f68:	sub    eax,0x521b07c1
  419f6d:	inc    esi
  419f6e:	cmp    edx,DWORD PTR ds:0xa712cadb
  419f74:	out    0xeb,eax
  419f76:	sbb    ecx,ecx
  419f78:	jge    0x419fcc
  419f7a:	ret    
  419f7b:	cmc    
  419f7c:	mov    esi,0xff3ebe87
  419f81:	jnp    0x419ffd
  419f83:	addr16 loop 0x419f9e
  419f86:	inc    esp
  419f87:	lahf   
  419f88:	mov    dl,0xbd
  419f8a:	mov    ebx,gs
  419f8c:	adc    esp,DWORD PTR [ebx-0x78]
  419f8f:	fild   WORD PTR [edx]
  419f91:	call   0xbaca:0xc68ea576
  419f98:	not    BYTE PTR [edi+0x4cfd07c3]
  419f9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f9f:	gs pop esp
  419fa1:	mov    dh,0x1
  419fa3:	pop    edi
  419fa4:	cs cld 
  419fa6:	mov    ebp,0x89a7e9e7
  419fab:	iret   
  419fac:	pop    ss
  419fad:	cmp    DWORD PTR [ecx],edx
  419faf:	jecxz  0x419ff6
  419fb1:	sub    al,0xbd
  419fb3:	push   edi
  419fb4:	mov    ds:0x56f3917,al
  419fb9:	mov    ebx,0xc45a0f0e
  419fbe:	inc    ecx
  419fbf:	sub    eax,0xe04de47f
  419fc4:	sbb    eax,0x5ed2b5c4
  419fc9:	mov    eax,0x25ef9aa6
  419fce:	cmp    eax,0x696f63cf
  419fd3:	xor    DWORD PTR [edi+edx*4-0x164564c1],ebx
  419fda:	call   0xe274714a
  419fdf:	pop    ds
  419fe0:	je     0x419fcc
  419fe2:	loopne 0x419fbf
  419fe4:	xchg   ecx,eax
  419fe5:	push   esp
  419fe6:	sbb    DWORD PTR [esi+0x666f143c],edi
  419fec:	mov    bl,0xfd
  419fee:	lahf   
  419fef:	jg     0x419fe5
  419ff1:	and    DWORD PTR [edi],edi
  419ff3:	dec    esi
  419ff4:	mov    eax,ds:0x5f42562b
  419ff9:	call   0x798e3fa5
  419ffe:	mov    WORD PTR ds:0x5b731c62,gs
  41a004:	mov    ds:0x699e8345,eax
  41a009:	mov    al,ds:0x97caf01f
  41a00e:	repz cmp DWORD PTR [edx+0x10],ebx
  41a012:	(bad)  
  41a013:	imul   ecx,DWORD PTR [ecx+0x14],0x63b0ac20
  41a01a:	enter  0x4142,0x8f
  41a01e:	or     DWORD PTR [ebp-0x66a7d17c],esp
  41a024:	adc    al,0xf8
  41a026:	mov    edx,0x698556f9
  41a02b:	and    cl,BYTE PTR ds:0x674f2b3c
  41a031:	int3   
  41a032:	and    eax,0x8b2d7821
  41a037:	loopne 0x419ffc
  41a039:	popf   
  41a03a:	xchg   ecx,eax
  41a03b:	hlt    
  41a03c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a03d:	add    esp,DWORD PTR [eax]
  41a03f:	pop    esp
  41a040:	dec    esi
  41a041:	dec    eax
  41a042:	fisttp DWORD PTR [ebx]
  41a044:	daa    
  41a045:	mov    ah,0xeb
  41a047:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a048:	(bad)  
  41a049:	jmp    0x1f9da67a
  41a04e:	lock aad 0x23
  41a051:	ds test al,0xc6
  41a054:	scas   eax,DWORD PTR es:[edi]
  41a055:	push   ebx
  41a056:	xor    esi,edx
  41a058:	mov    ah,0xb8
  41a05a:	cwde   
  41a05b:	repnz data16 mov cl,0x3f
  41a05f:	in     al,dx
  41a060:	call   DWORD PTR [esi]
  41a062:	popa   
  41a063:	pusha  
  41a064:	cmp    BYTE PTR [edi-0xc8ef23a],bl
  41a06a:	push   esi
  41a06b:	push   ebx
  41a06c:	out    dx,eax
  41a06d:	into   
  41a06e:	inc    esi
  41a06f:	jge    0x41a042
  41a071:	mov    dl,0x16
  41a073:	popa   
  41a074:	shl    BYTE PTR [ecx],0x1d
  41a077:	popf   
  41a078:	mov    bh,0x58
  41a07a:	rcl    esp,0x3d
  41a07d:	test   eax,0x1353978e
  41a083:	stc    
  41a084:	inc    esp
  41a085:	push   esp
  41a086:	fcomp  QWORD PTR ds:0x317ba5f8
  41a08c:	inc    edi
  41a08d:	sub    edx,esp
  41a08f:	out    0x39,eax
  41a091:	hlt    
  41a092:	push   cs
  41a093:	mov    edi,0x6f62a415
  41a098:	pop    ecx
  41a099:	mov    esi,0xc711ed09
  41a09e:	cwde   
  41a09f:	out    0x98,al
  41a0a1:	cmp    ecx,DWORD PTR [eax+0x6b]
  41a0a4:	ja     0x41a02c
  41a0a6:	stos   DWORD PTR es:[edi],eax
  41a0a7:	sahf   
  41a0a8:	cmp    bl,BYTE PTR [edx]
  41a0aa:	xor    BYTE PTR ds:0x82aa949,ah
  41a0b0:	or     bh,BYTE PTR [esi+0x7d]
  41a0b3:	adc    BYTE PTR [edi],0xba
  41a0b6:	jbe    0x41a073
  41a0b8:	lea    edi,ds:0x9b29d574
  41a0be:	fistp  WORD PTR [eax]
  41a0c0:	jp     0x41a0da
  41a0c2:	mov    dl,0x49
  41a0c4:	mov    esi,0x2090c474
  41a0c9:	iret   
  41a0ca:	fdiv   QWORD PTR [eax-0x51052157]
  41a0d0:	sti    
  41a0d1:	in     al,dx
  41a0d2:	push   edi
  41a0d3:	adc    eax,eax
  41a0d5:	jnp    0x41a0df
  41a0d7:	scas   eax,DWORD PTR es:[edi]
  41a0d8:	push   edx
  41a0d9:	xchg   edi,eax
  41a0da:	sub    ah,BYTE PTR [ebx-0x4e]
  41a0dd:	shl    DWORD PTR [edi+esi*1],1
  41a0e0:	or     eax,0xadf60a76
  41a0e5:	lea    esp,[eax+0x49]
  41a0e8:	mov    edi,0xb14fce99
  41a0ed:	pop    ebp
  41a0ee:	mov    al,0x8f
  41a0f0:	ja     0x41a148
  41a0f2:	cmp    DWORD PTR [eax+ecx*8],edi
  41a0f5:	aad    0x5c
  41a0f7:	mov    dl,0x3e
  41a0f9:	add    ebp,DWORD PTR ss:[edx]
  41a0fc:	les    esi,FWORD PTR [ebp+esi*8-0x33]
  41a100:	or     al,0x5d
  41a102:	xchg   edx,eax
  41a103:	or     eax,0xaaad1996
  41a108:	and    ah,BYTE PTR [esi+0x2a1c5e2e]
  41a10e:	cli    
  41a10f:	sub    ch,0xd1
  41a112:	add    eax,0x5391fe8e
  41a117:	push   edi
  41a118:	mov    ebx,0x9ee526f9
  41a11d:	adc    edx,DWORD PTR [edx+0x40149aef]
  41a123:	outs   dx,DWORD PTR ds:[esi]
  41a124:	xchg   edx,eax
  41a125:	mov    ebp,0x7a9d8c81
  41a12a:	push   edx
  41a12b:	ret    0xb545
  41a12e:	sbb    DWORD PTR [edi-0x1d],eax
  41a131:	je     0x41a0b8
  41a133:	cmp    BYTE PTR [esi],dh
  41a135:	jmp    0xdefcd101
  41a13a:	bound  ecx,QWORD PTR [edi]
  41a13c:	shr    bl,0x2e
  41a13f:	xchg   ebp,eax
  41a140:	sub    DWORD PTR [ecx],esp
  41a142:	repz dec eax
  41a144:	sahf   
  41a145:	dec    ebx
  41a146:	repnz mov eax,ds:0xf9902b29
  41a14c:	into   
  41a14d:	push   edi
  41a14e:	push   0xffffffd6
  41a150:	aaa    
  41a151:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a152:	std    
  41a153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a154:	dec    edx
  41a155:	xstore-rng (bad)
  41a156:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a157:	les    esi,FWORD PTR [ebx+0x20e11efe]
  41a15d:	or     al,0x9f
  41a15f:	xchg   ebx,eax
  41a160:	mov    al,BYTE PTR [ebx-0x7c]
  41a163:	and    ah,BYTE PTR [ecx+0x46]
  41a166:	mov    dl,0x17
  41a168:	jae    0x41a13a
  41a16a:	dec    edi
  41a16b:	jb     0x41a1d7
  41a16d:	sub    esp,DWORD PTR [eax]
  41a16f:	push   ss
  41a170:	fimul  DWORD PTR [eax-0x2c]
  41a173:	ins    DWORD PTR es:[edi],dx
  41a174:	push   ds
  41a175:	mov    ebp,0xa1117d9d
  41a17a:	aad    0x91
  41a17c:	or     bl,dh
  41a17e:	hlt    
  41a17f:	add    DWORD PTR [ecx],edx
  41a181:	imul   esi,DWORD PTR [edx],0x2f
  41a184:	call   0xdb3:0xa4080e6
  41a18b:	outs   dx,DWORD PTR ds:[esi]
  41a18c:	adc    DWORD PTR [ecx],esi
  41a18e:	iret   
  41a18f:	pop    esi
  41a190:	cmp    BYTE PTR [eax-0x3a8743f7],dl
  41a196:	ins    BYTE PTR es:[edi],dx
  41a197:	cmp    esi,DWORD PTR [ebx+0x46d3b2ac]
  41a19d:	mov    bh,0xef
  41a19f:	mov    eax,0x94412068
  41a1a4:	out    0x40,eax
  41a1a6:	std    
  41a1a7:	out    0x4d,al
  41a1a9:	lea    edx,[eax+ebp*4]
  41a1ac:	adc    al,0xe1
  41a1ae:	rcl    BYTE PTR [ecx+0x41e7df9],0x2d
  41a1b5:	mov    ah,0xa7
  41a1b7:	mov    dh,0x3b
  41a1b9:	(bad)  
  41a1ba:	and    bh,dl
  41a1bc:	mov    edi,0xb25937a4
  41a1c1:	bound  eax,QWORD PTR [edi]
  41a1c3:	dec    eax
  41a1c4:	lods   al,BYTE PTR ds:[esi]
  41a1c5:	mov    edi,0x77d1b503
  41a1ca:	mov    ah,0x1d
  41a1cc:	add    DWORD PTR [ebx-0x20],edx
  41a1cf:	test   DWORD PTR [edx+0x2e],eax
  41a1d2:	test   BYTE PTR [edx-0x6faec8bb],0xcd
  41a1d9:	pop    ecx
  41a1da:	jbe    0x41a1b1
  41a1dc:	cmp    BYTE PTR [ebp+0xc980e9b],al
  41a1e2:	sti    
  41a1e3:	push   ebp
  41a1e4:	mov    al,ds:0x41ec1dc8
  41a1e9:	dec    edi
  41a1ea:	bound  esi,QWORD PTR [eax]
  41a1ec:	xor    eax,0x4cda2403
  41a1f1:	jecxz  0x41a223
  41a1f3:	retf   0x6c58
  41a1f6:	adc    al,BYTE PTR [edx+0x94172a9]
  41a1fc:	mov    gs:0xa9d36765,eax
  41a202:	or     al,bh
  41a204:	adc    al,0x74
  41a206:	call   FWORD PTR [edx]
  41a208:	(bad)  
  41a209:	pop    ecx
  41a20a:	enter  0xfcfb,0x62
  41a20e:	adc    DWORD PTR [ecx+0x19],ebp
  41a211:	stos   DWORD PTR es:[edi],eax
  41a212:	stos   BYTE PTR es:[edi],al
  41a213:	(bad)  
  41a215:	test   al,0xc6
  41a217:	daa    
  41a218:	outs   dx,BYTE PTR ds:[esi]
  41a219:	inc    edi
  41a21a:	in     al,dx
  41a21b:	pop    ebp
  41a21c:	xor    al,0xb4
  41a21e:	push   0xb3ddea7a
  41a223:	mov    fs,WORD PTR [eax]
  41a225:	sbb    DWORD PTR [esp+ecx*4],edx
  41a228:	repnz jmp 0x3213:0xf30361f6
  41a230:	sub    al,0x66
  41a232:	cmp    eax,0x7e1c7a66
  41a237:	out    dx,eax
  41a238:	xor    DWORD PTR ds:0xe2d89c6b,ecx
  41a23e:	push   0xffffff8f
  41a240:	xor    al,0xfb
  41a242:	shl    BYTE PTR [edi+0x17],1
  41a245:	and    dh,BYTE PTR [eax]
  41a247:	fisttp WORD PTR [edx]
  41a249:	xchg   edi,eax
  41a24a:	jmp    FWORD PTR [ecx-0x3a]
  41a24d:	call   0xb2bff839
  41a252:	sub    DWORD PTR cs:[ebx-0x79207aed],ecx
  41a259:	pop    esi
  41a25a:	out    dx,eax
  41a25b:	inc    esi
  41a25c:	ins    BYTE PTR es:[edi],dx
  41a25d:	and    cl,BYTE PTR [ebx+edi*1]
  41a260:	repnz test DWORD PTR [ebp+0x4063c5c1],0xa6035ff0
  41a26b:	mov    cl,BYTE PTR [edx+0x7dd8469d]
  41a271:	jge    0x41a2be
  41a273:	lock mov ds:0x989f1315,al
  41a279:	pop    eax
  41a27a:	xor    al,0x49
  41a27c:	(bad)  
  41a27d:	outs   dx,DWORD PTR ds:[esi]
  41a27e:	outs   dx,DWORD PTR ds:[esi]
  41a27f:	shl    esp,cl
  41a281:	push   ebx
  41a282:	(bad)  
  41a283:	cmp    DWORD PTR [edx-0x27b4dade],ecx
  41a289:	fisubr WORD PTR ds:0xa6abc82e
  41a28f:	je     0x41a214
  41a291:	push   esi
  41a292:	in     eax,0x4c
  41a294:	hlt    
  41a295:	ret    
  41a296:	mov    esp,0x90c8d589
  41a29b:	pop    ebx
  41a29c:	test   BYTE PTR [edi+0x1c2bac6f],dl
  41a2a2:	test   al,0x8e
  41a2a4:	jmp    0xfc6f:0x84683f86
  41a2ab:	jg     0x41a2f4
  41a2ad:	adc    dl,BYTE PTR [esi+0x63f3a447]
  41a2b3:	mov    eax,0xe650074e
  41a2b8:	cwde   
  41a2b9:	pop    ebx
  41a2ba:	jecxz  0x41a2c8
  41a2bc:	dec    eax
  41a2bd:	and    dl,0x6f
  41a2c0:	stos   DWORD PTR es:[edi],eax
  41a2c1:	daa    
  41a2c2:	fistp  DWORD PTR ss:[ebx]
  41a2c5:	dec    edi
  41a2c6:	ss into 
  41a2c8:	jno    0x41a29e
  41a2ca:	int    0x84
  41a2cc:	xor    BYTE PTR [esi+0x12ff7405],bh
  41a2d2:	add    ebx,esi
  41a2d4:	es jmp 0x9898:0xe26762e3
  41a2dc:	(bad)  
  41a2dd:	mov    ch,0x48
  41a2df:	out    0xd,eax
  41a2e1:	jne    0x41a314
  41a2e3:	fdivr  QWORD PTR [ebx+0x54]
  41a2e6:	xchg   edi,eax
  41a2e7:	sti    
  41a2e8:	mov    edi,0x6bc2f441
  41a2ed:	imul   ebx,DWORD PTR [edi-0x15c3a592],0xffffffc5
  41a2f4:	dec    edi
  41a2f5:	add    al,BYTE PTR [ebx]
  41a2f7:	test   eax,0x672a31e6
  41a2fc:	sbb    dl,dl
  41a2fe:	loope  0x41a36e
  41a300:	inc    ecx
  41a301:	test   BYTE PTR [ebx-0x5e31870f],0x83
  41a308:	fstp   TBYTE PTR [eax-0x1f]
  41a30b:	pop    ecx
  41a30c:	cs xchg ecx,eax
  41a30e:	xor    eax,0xc093e790
  41a313:	mov    ds:0x4866bb46,eax
  41a318:	popa   
  41a319:	std    
  41a31a:	fisttp WORD PTR [ebx-0x6b6b854c]
  41a320:	sbb    bl,BYTE PTR [edi-0x554eab9b]
  41a326:	and    BYTE PTR [ebp+0x24],bh
  41a329:	cld    
  41a32a:	jecxz  0x41a332
  41a32c:	jo     0x41a31e
  41a32e:	push   es
  41a32f:	push   es
  41a330:	mov    al,ds:0x58964ae6
  41a335:	mov    cs,WORD PTR [ecx]
  41a337:	sub    DWORD PTR [eax],esi
  41a339:	mov    ebp,0x58efe7fa
  41a33e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a33f:	idiv   edx
  41a341:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a342:	lods   eax,DWORD PTR ds:[esi]
  41a343:	test   eax,0x5756728a
  41a348:	cs retf 
  41a34a:	jmp    0xd0c31976
  41a34f:	mov    bl,0x34
  41a351:	and    eax,0x3f21a1d7
  41a356:	pop    es
  41a357:	xchg   ebx,eax
  41a358:	add    eax,0xde6fedc
  41a35d:	mov    esp,0xd03976b7
  41a362:	push   ebx
  41a363:	fild   DWORD PTR [edi]
  41a365:	clc    
  41a366:	std    
  41a367:	sub    BYTE PTR [edx-0xf5ea775],al
  41a36d:	in     al,0x58
  41a36f:	mov    ah,0xaf
  41a371:	push   0x44e34af3
  41a376:	(bad)  
  41a377:	or     esi,ebx
  41a379:	pop    esi
  41a37a:	ins    BYTE PTR es:[edi],dx
  41a37b:	js     0x41a356
  41a37d:	test   eax,0x5700177d
  41a382:	inc    esi
  41a383:	out    0xb0,eax
  41a385:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a386:	loopne 0x41a374
  41a388:	xor    ebx,DWORD PTR [edi+0x43]
  41a38b:	cwde   
  41a38c:	pop    es
  41a38d:	xchg   ebx,eax
  41a38e:	pop    ebx
  41a38f:	xor    ah,dl
  41a391:	(bad)  
  41a392:	out    dx,eax
  41a393:	ror    BYTE PTR [edx-0x24374868],0xea
  41a39a:	stos   BYTE PTR es:[edi],al
  41a39b:	es jle 0x41a355
  41a39e:	hlt    
  41a39f:	mov    eax,0x6a37e01e
  41a3a4:	inc    edi
  41a3a5:	test   DWORD PTR [ebp-0x58f6ab8e],esp
  41a3ab:	outs   dx,BYTE PTR ds:[esi]
  41a3ac:	xor    edx,DWORD PTR [ecx]
  41a3ae:	sti    
  41a3af:	dec    edx
  41a3b0:	sbb    ebx,DWORD PTR [edi-0x564ec0c1]
  41a3b6:	pushf  
  41a3b7:	test   al,0x23
  41a3b9:	stc    
  41a3ba:	fs in  eax,dx
  41a3bc:	jno    0x41a3e6
  41a3be:	push   cs
  41a3bf:	inc    esp
  41a3c0:	ret    0x8607
  41a3c3:	sub    eax,0xb7567
  41a3c8:	inc    eax
  41a3c9:	sbb    cl,BYTE PTR [edx+0x5dc9b630]
  41a3cf:	fucomi st,st(5)
  41a3d1:	imul   ecx,DWORD PTR [edx+ebx*8-0x11],0x4c96f61c
  41a3d9:	(bad)  
  41a3da:	ss and eax,0x8e448a3c
  41a3e0:	inc    esp
  41a3e1:	mov    eax,ds:0xbdd2d068
  41a3e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3e7:	push   edx
  41a3e8:	jae    0x41a40e
  41a3ea:	dec    esp
  41a3eb:	add    DWORD PTR [ecx],ecx
  41a3ed:	sub    DWORD PTR [edi-0x1f],ecx
  41a3f0:	jbe    0x41a428
  41a3f2:	xor    DWORD PTR [ecx+ebx*8],0xffffffe9
  41a3f6:	arpl   WORD PTR [edi],bp
  41a3f8:	loope  0x41a404
  41a3fa:	mov    ebx,gs
  41a3fc:	mov    bl,0xde
  41a3fe:	jb     0x41a3f4
  41a400:	push   edi
  41a401:	inc    ebx
  41a402:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a403:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a404:	int3   
  41a405:	xor    al,0x7b
  41a407:	cli    
  41a408:	nop
  41a409:	into   
  41a40a:	xchg   bh,cl
  41a40c:	aaa    
  41a40d:	(bad)  
  41a40e:	push   ss
  41a40f:	aas    
  41a410:	xchg   DWORD PTR [ebp-0x7dea0a78],esp
  41a416:	jno    0x41a3d2
  41a418:	pop    ebp
  41a419:	mov    ch,0xc1
  41a41b:	lock test DWORD PTR ss:[eax+0x4de8cb65],ebp
  41a423:	lods   al,BYTE PTR ds:[esi]
  41a424:	js     0x41a409
  41a426:	cmp    esi,DWORD PTR [ebx-0x17]
  41a429:	repnz add cl,BYTE PTR [ebp+0x3cc5b582]
  41a430:	mov    ebp,0x57997dfe
  41a435:	rol    BYTE PTR [ecx-0x5054b9ca],cl
  41a43b:	or     esi,DWORD PTR [ebx-0x969a908]
  41a441:	jle    0x41a448
  41a443:	call   0x6c35:0x31ea7c1
  41a44a:	pop    ss
  41a44b:	push   ebx
  41a44c:	jl     0x41a42f
  41a44e:	jle    0x41a4b6
  41a450:	dec    edx
  41a451:	mov    dl,0xd5
  41a453:	sub    dl,BYTE PTR [edx+edi*1-0x3b]
  41a457:	or     eax,0x6ac5355c
  41a45c:	xor    ch,BYTE PTR [ebx-0x37]
  41a45f:	xor    bl,BYTE PTR [esp+eax*4-0x56]
  41a463:	cmp    al,0xa1
  41a465:	xchg   DWORD PTR [esi+0x5bad6fc1],ebp
  41a46b:	dec    eax
  41a46c:	push   ebx
  41a46d:	out    dx,al
  41a46e:	mov    dl,0x83
  41a470:	mov    dl,0x9f
  41a472:	jl     0x41a47a
  41a474:	ins    DWORD PTR es:[edi],dx
  41a475:	add    eax,0xd171db8f
  41a47a:	jno    0x41a4c5
  41a47c:	fcmovu st,st(4)
  41a47e:	ret    
  41a47f:	(bad)  
  41a480:	iret   
  41a481:	adc    cl,bl
  41a483:	jmp    0x7d283d
  41a488:	out    0xb3,eax
  41a48a:	fsubp  st(2),st
  41a48c:	shl    BYTE PTR [edx-0x571ef73a],cl
  41a492:	jecxz  0x41a446
  41a494:	mov    al,0x26
  41a496:	xor    BYTE PTR [edx+0x10],bl
  41a499:	xchg   esp,eax
  41a49a:	dec    eax
  41a49b:	sbb    DWORD PTR [ebx],ebp
  41a49d:	push   edi
  41a49e:	out    0x4,al
  41a4a0:	imul   eax,DWORD PTR [edi-0x5],0xb98b6189
  41a4a7:	or     esp,esi
  41a4a9:	call   0x3513fc39
  41a4ae:	mov    eax,ds:0x369d568a
  41a4b3:	pop    es
  41a4b4:	mov    dl,BYTE PTR [ebx+0x35]
  41a4b7:	sbb    ebp,DWORD PTR [ebx-0x296af712]
  41a4bd:	sbb    al,0x6b
  41a4bf:	mov    dl,0xf0
  41a4c1:	call   0x49e77db
  41a4c6:	imul   ebx,esp,0x5c
  41a4c9:	fadd   st,st(1)
  41a4cb:	and    ah,dh
  41a4cd:	add    DWORD PTR [esi],eax
  41a4cf:	fldpi  
  41a4d1:	jbe    0x41a468
  41a4d3:	ins    DWORD PTR es:[edi],dx
  41a4d4:	retf   0xd3d7
  41a4d7:	cs xchg ecx,eax
  41a4d9:	or     DWORD PTR [ecx+0x9],ebp
  41a4dc:	add    al,0x41
  41a4de:	faddp  st(6),st
  41a4e0:	mov    al,0x49
  41a4e2:	xchg   esp,eax
  41a4e3:	dec    BYTE PTR [ecx+0x6298b247]
  41a4e9:	mov    ebp,0xc7e3a07e
  41a4ee:	jno    0x41a49a
  41a4f0:	das    
  41a4f1:	cs out 0x92,eax
  41a4f4:	add    eax,0x4e2af406
  41a4f9:	aaa    
  41a4fa:	lea    esp,gs:[esp+eiz*2+0x1c8e6d55]
  41a502:	dec    ecx
  41a503:	aad    0x45
  41a505:	pop    ebp
  41a506:	rcl    BYTE PTR [ecx-0x66d69891],0xf6
  41a50d:	rcr    BYTE PTR [edx+edi*8-0x52],cl
  41a511:	mov    ecx,0xa27362bf
  41a516:	(bad)  
  41a518:	push   esi
  41a519:	sbb    ecx,edi
  41a51b:	aam    0x96
  41a51d:	lock out 0x66,eax
  41a520:	lock outs dx,DWORD PTR ds:[esi]
  41a522:	aad    0x7b
  41a524:	sub    edi,DWORD PTR [ebp+eiz*1-0x61bb5711]
  41a52b:	out    0x61,al
  41a52d:	or     al,0xde
  41a52f:	mov    ebp,DWORD PTR [edi]
  41a531:	adc    eax,0x868baeb2
  41a536:	retf   0x7552
  41a539:	xchg   esp,eax
  41a53a:	adc    BYTE PTR ds:0xbca92b42,cl
  41a540:	inc    ecx
  41a541:	inc    ebx
  41a542:	add    ecx,DWORD PTR [edi+eiz*1]
  41a545:	in     al,0xca
  41a547:	dec    esi
  41a548:	inc    ebx
  41a549:	sbb    BYTE PTR [esi-0xb6c2050],ah
  41a54f:	add    al,0xee
  41a551:	sbb    esp,DWORD PTR [eax]
  41a553:	and    al,0x29
  41a555:	adc    ecx,esi
  41a557:	mov    DWORD PTR [edi+0x9aeb033],edx
  41a55d:	mov    al,0xd5
  41a55f:	inc    esp
  41a560:	bnd jp 0x41a51a
  41a563:	cmp    DWORD PTR [ecx-0x805550d],eax
  41a569:	dec    ecx
  41a56a:	lea    eax,[ecx-0x6]
  41a56d:	add    ebx,DWORD PTR [edx+0x19627ed4]
  41a573:	aaa    
  41a574:	jmp    0x41a580
  41a576:	cwde   
  41a577:	xchg   dh,cl
  41a579:	mov    al,ds:0x6a390f0d
  41a57e:	je     0x41a54c
  41a580:	jne    0x41a5e2
  41a582:	inc    esi
  41a583:	sbb    dl,BYTE PTR [eax]
  41a585:	ins    BYTE PTR es:[edi],dx
  41a586:	mov    WORD PTR [ebp-0x20c9eb7b],?
  41a58c:	das    
  41a58d:	push   esp
  41a58e:	test   eax,0x94a2c417
  41a593:	adc    BYTE PTR [edx],bl
  41a595:	out    dx,eax
  41a596:	sub    DWORD PTR [esi+edx*2],edi
  41a599:	lds    ebx,FWORD PTR [edi-0x5a6422d9]
  41a59f:	push   eax
  41a5a0:	fld    TBYTE PTR [ecx]
  41a5a2:	mov    al,0xd1
  41a5a4:	xor    BYTE PTR [eax-0x3d],bl
  41a5a7:	add    eax,0xb80843a7
  41a5ac:	loop   0x41a621
  41a5ae:	sbb    eax,0xc1674e
  41a5b3:	cmp    BYTE PTR [ebx],dh
  41a5b5:	and    DWORD PTR [ebx-0x4bfcdeb],esi
  41a5bb:	fimul  DWORD PTR [edx-0x5e]
  41a5be:	int3   
  41a5bf:	aad    0xa9
  41a5c1:	popf   
  41a5c2:	sbb    BYTE PTR [edx+esi*8+0x42f10437],bl
  41a5c9:	mov    BYTE PTR [esi-0x4cb821cf],0xdc
  41a5d0:	(bad)  
  41a5d1:	jbe    0x41a5e1
  41a5d3:	xor    BYTE PTR [edx+0x9ba9624],ch
  41a5d9:	scas   eax,DWORD PTR es:[edi]
  41a5da:	jmp    0x41a64b
  41a5dc:	int    0x36
  41a5de:	in     al,dx
  41a5df:	sbb    ch,BYTE PTR [eax*8-0x33c0504c]
  41a5e6:	jmp    0x38d3:0x3bfe172a
  41a5ed:	sti    
  41a5ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5ef:	imul   edi,esi,0xffffffbe
  41a5f2:	jge    0x41a57c
  41a5f4:	inc    ebp
  41a5f5:	hlt    
  41a5f6:	xor    DWORD PTR [esp+esi*2+0x71],edx
  41a5fa:	inc    bx
  41a5fc:	(bad)
  41a5ff:	or     BYTE PTR [edi+0x12],bl
  41a602:	or     al,0xb3
  41a604:	repnz pop es
  41a606:	mov    ds:0x2d880d83,al
  41a60b:	add    ebp,ecx
  41a60d:	cdq    
  41a60e:	or     esp,DWORD PTR [edx+0x5e]
  41a611:	and    ebp,ebp
  41a613:	mov    bh,0x14
  41a615:	aas    
  41a616:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a617:	fadd   DWORD PTR [esi]
  41a619:	adc    cl,BYTE PTR [ecx+0x363dfa5c]
  41a61f:	and    al,0xed
  41a621:	aas    
  41a622:	out    dx,eax
  41a623:	clc    
  41a624:	ins    BYTE PTR es:[edi],dx
  41a625:	xor    al,0x95
  41a627:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a628:	push   esi
  41a629:	addr16 dec esp
  41a62b:	(bad)  
  41a62c:	sti    
  41a62d:	cwde   
  41a62e:	jge    0x41a613
  41a630:	aas    
  41a631:	cld    
  41a632:	xor    esp,edx
  41a634:	push   edi
  41a635:	xor    BYTE PTR [esi+0x182790e6],0x59
  41a63c:	and    ecx,DWORD PTR [ebx+0x63]
  41a63f:	aad    0xb9
  41a641:	test   DWORD PTR [ebx+0x5c8d504b],ebp
  41a647:	(bad)  
  41a648:	cmp    ecx,DWORD PTR [eax]
  41a64a:	(bad)  
  41a64b:	enter  0x547a,0xf7
  41a64f:	mov    bh,0xd7
  41a651:	loop   0x41a688
  41a653:	iret   
  41a654:	sti    
  41a655:	xor    ebx,esi
  41a657:	mov    ebx,0x61014201
  41a65c:	cli    
  41a65d:	sbb    edx,DWORD PTR [edi+0x30]
  41a660:	jl     0x41a66c
  41a662:	stos   BYTE PTR es:[edi],al
  41a663:	mov    ds:0xb52848e1,al
  41a668:	and    al,0xda
  41a66a:	fdivr  DWORD PTR [ebx]
  41a66c:	jno    0x41a682
  41a66e:	je     0x41a678
  41a670:	adc    edi,ebx
  41a672:	sti    
  41a673:	sbb    ah,BYTE PTR [esi]
  41a675:	lahf   
  41a676:	test   ah,ah
  41a678:	stos   BYTE PTR es:[edi],al
  41a679:	fcmovu st,st(2)
  41a67b:	addr16 jle 0x41a606
  41a67e:	push   eax
  41a67f:	xchg   ecx,eax
  41a680:	jp     0x41a6c1
  41a682:	outs   dx,DWORD PTR ds:[esi]
  41a683:	cmc    
  41a684:	call   0xa55c:0x94e56f0
  41a68b:	jecxz  0x41a651
  41a68d:	pcmpgtd mm0,QWORD PTR [eax]
  41a690:	hlt    
  41a691:	add    al,0x80
  41a693:	dec    ebp
  41a694:	retf   0x65be
  41a697:	and    al,0xc8
  41a699:	outs   dx,DWORD PTR ds:[esi]
  41a69a:	xchg   ebp,eax
  41a69b:	rol    BYTE PTR [edi],1
  41a69d:	mov    cl,BYTE PTR [ecx-0x45b92fca]
  41a6a3:	xchg   ebp,eax
  41a6a4:	inc    eax
  41a6a5:	addr16 es pop ds
  41a6a8:	out    0xbe,al
  41a6aa:	test   DWORD PTR [ecx-0x5768d12b],ebx
  41a6b0:	aad    0x44
  41a6b2:	mov    esp,?
  41a6b4:	mov    ah,0x4f
  41a6b6:	pop    ss
  41a6b7:	inc    esi
  41a6b8:	jle    0x41a665
  41a6ba:	stos   DWORD PTR es:[edi],eax
  41a6bb:	pop    ebp
  41a6bc:	and    al,0x7c
  41a6be:	push   ebx
  41a6bf:	scas   al,BYTE PTR es:[edi]
  41a6c0:	(bad)  
  41a6c1:	std    
  41a6c2:	pop    ebx
  41a6c3:	and    eax,0x3185a136
  41a6c8:	and    BYTE PTR [ebp+0x30],ah
  41a6cb:	push   esi
  41a6cc:	add    ebx,DWORD PTR [ebp+0x61a623d6]
  41a6d2:	in     al,0xf3
  41a6d4:	outs   dx,BYTE PTR ds:[esi]
  41a6d5:	mov    eax,cs:0x6061c3f9
  41a6db:	jle    0x41a723
  41a6dd:	push   ecx
  41a6de:	push   eax
  41a6df:	dec    esi
  41a6e0:	jmp    0x694119a3
  41a6e5:	jo     0x41a66c
  41a6e7:	mov    eax,0x206d1179
  41a6ec:	das    
  41a6ed:	aaa    
  41a6ee:	shr    ebp,1
  41a6f0:	xlat   BYTE PTR ds:[ebx]
  41a6f1:	in     al,dx
  41a6f2:	dec    edi
  41a6f3:	cmp    edi,ebp
  41a6f5:	adc    BYTE PTR [esi-0x9b02e93],al
  41a6fb:	test   eax,0x70bac567
  41a700:	and    edx,edi
  41a702:	mov    dh,0xdd
  41a704:	and    al,0x2f
  41a706:	ds nop
  41a708:	retf   
  41a709:	stc    
  41a70a:	clc    
  41a70b:	add    al,0xd8
  41a70d:	fs pop esi
  41a70f:	daa    
  41a710:	jb     0x41a694
  41a712:	cdq    
  41a713:	mov    esi,0x924e0cfd
  41a718:	sbb    DWORD PTR [ebx+0x42],0xbca886c6
  41a71f:	iret   
  41a720:	inc    edx
  41a721:	dec    ebp
  41a722:	cmp    dl,BYTE PTR [edx+0x16]
  41a725:	mov    dh,0x9f
  41a727:	pop    edi
  41a728:	xchg   ebx,eax
  41a729:	mov    ebp,ds
  41a72b:	and    ebx,ecx
  41a72d:	adc    BYTE PTR [eax],bl
  41a72f:	xor    eax,0xe007e0d
  41a734:	push   esi
  41a735:	adc    dl,dh
  41a737:	test   BYTE PTR [esi+0x6f],0xc5
  41a73b:	std    
  41a73c:	add    dh,dh
  41a73e:	mov    bl,0xed
  41a740:	mov    ds,WORD PTR [ecx]
  41a742:	out    0x7c,al
  41a744:	and    ah,BYTE PTR [ecx-0x4a]
  41a747:	(bad)  
  41a748:	and    al,dl
  41a74a:	outs   dx,DWORD PTR ds:[esi]
  41a74b:	test   BYTE PTR [ebp+0x72],0xf1
  41a74f:	stos   BYTE PTR es:[edi],al
  41a750:	mov    DWORD PTR [ecx+0x67],0xb76919fb
  41a757:	add    esi,DWORD PTR [esi]
  41a759:	bound  eax,QWORD PTR [eax+0x1605cd4b]
  41a75f:	es jmp 0x72827386
  41a765:	jge    0x41a72a
  41a767:	push   edx
  41a768:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a769:	push   cs
  41a76a:	mov    cl,BYTE PTR [edi+0x29]
  41a76d:	xchg   esi,eax
  41a76e:	in     eax,dx
  41a76f:	cmp    BYTE PTR [ecx],ah
  41a771:	pop    esi
  41a772:	retf   
  41a773:	fiadd  DWORD PTR [edx-0x31]
  41a776:	outs   dx,BYTE PTR ds:[esi]
  41a777:	lods   eax,DWORD PTR ds:[esi]
  41a778:	xor    BYTE PTR [edi],ch
  41a77a:	aas    
  41a77b:	xchg   esp,eax
  41a77c:	(bad)  
  41a77d:	fs call 0xc76135bf
  41a783:	ins    BYTE PTR es:[edi],dx
  41a784:	mov    edi,0xb297cf0a
  41a789:	jae    0x41a71a
  41a78b:	fwait
  41a78c:	mov    bh,BYTE PTR [edx-0x3fc40662]
  41a792:	add    cl,BYTE PTR [ebx-0x3c]
  41a795:	out    0x50,al
  41a797:	scas   al,BYTE PTR es:[edi]
  41a798:	fstp   TBYTE PTR [esi-0x4a]
  41a79b:	lds    ecx,FWORD PTR [esp+edx*4+0x2dc3c212]
  41a7a2:	push   0x6c
  41a7a4:	(bad)  
  41a7a5:	jns    0x41a785
  41a7a7:	jmp    0xd55:0x967f64ca
  41a7ae:	loopne 0x41a7dc
  41a7b0:	sbb    DWORD PTR [eax+edx*4-0x401eecfe],eax
  41a7b7:	and    eax,0xaf5f1069
  41a7bc:	(bad)  
  41a7be:	cdq    
  41a7bf:	aas    
  41a7c0:	xchg   esi,eax
  41a7c1:	jns    0x41a836
  41a7c3:	icebp  
  41a7c4:	fsubr  QWORD PTR ds:0x864c022b
  41a7ca:	cmp    BYTE PTR es:[edi+0x2c],ah
  41a7ce:	cmp    BYTE PTR [ebp-0x5da21a96],bl
  41a7d4:	(bad)  
  41a7d5:	xor    al,0x6
  41a7d7:	xlat   BYTE PTR ds:[ebx]
  41a7d8:	lds    eax,FWORD PTR [eax+0x38]
  41a7db:	jl     0x41a7f0
  41a7dd:	inc    edx
  41a7de:	mov    esi,0xc36ea5d3
  41a7e3:	test   DWORD PTR [edx+0x7b3bdaa7],esi
  41a7e9:	imul   DWORD PTR [ebp-0x17]
  41a7ec:	sub    ebx,DWORD PTR [ebp-0x31e2bb79]
  41a7f2:	mov    ch,ch
  41a7f4:	rcr    BYTE PTR ds:0x5816b5b8,cl
  41a7fa:	pop    edx
  41a7fb:	pop    ecx
  41a7fc:	fcom   QWORD PTR [eax-0x6e]
  41a7ff:	test   eax,0x947c1e9e
  41a804:	ret    0x9d68
  41a807:	xor    eax,DWORD PTR [ebx+0x75fbe55c]
  41a80d:	inc    esi
  41a80e:	and    ebx,DWORD PTR [eax+0x4eaa872b]
  41a814:	es (bad) 
  41a816:	push   ss
  41a817:	adc    al,0xd
  41a81a:	das    
  41a81b:	and    eax,DWORD PTR [ecx-0x1683a45b]
  41a821:	in     al,0xd1
  41a823:	xchg   ebp,eax
  41a824:	out    0x28,al
  41a826:	jnp    0x41a8a7
  41a828:	sti    
  41a829:	mov    bh,0x42
  41a82b:	mov    ah,0xd8
  41a82d:	dec    eax
  41a82e:	out    0x7a,al
  41a830:	sbb    eax,DWORD PTR [ebx-0x69e99632]
  41a836:	jg     0x41a7ef
  41a838:	loope  0x41a83e
  41a83a:	jge    0x41a7ce
  41a83c:	fadd   QWORD PTR [edx]
  41a83e:	adc    edx,esp
  41a840:	ins    DWORD PTR es:[edi],dx
  41a841:	inc    edx
  41a842:	ret    0x3352
  41a845:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a846:	popa   
  41a847:	es imul ebx,edx,0x8bc5118e
  41a84e:	pop    es
  41a84f:	xchg   edx,eax
  41a850:	mov    al,ds:0x597226e5
  41a855:	jmp    0x41a7ff
  41a857:	pop    eax
  41a858:	mov    al,ds:0xf67d98ad
  41a85d:	ret    0x435d
  41a860:	fmulp  st(5),st
  41a862:	jae    0x41a809
  41a864:	xchg   edx,eax
  41a865:	jns    0x41a895
  41a867:	and    ebx,DWORD PTR [esi]
  41a869:	push   es
  41a86a:	push   es
  41a86b:	dec    ebx
  41a86c:	sub    DWORD PTR [ecx+0x42],eax
  41a86f:	lds    ebx,FWORD PTR [edi+0x3609957e]
  41a875:	dec    edi
  41a876:	pop    edx
  41a877:	pop    eax
  41a878:	xor    eax,0x365d8128
  41a87d:	ins    DWORD PTR es:[edi],dx
  41a87e:	dec    esp
  41a87f:	ret    
  41a880:	sub    DWORD PTR [ebp+ebp*2-0x3cc661b4],ebp
  41a887:	in     eax,dx
  41a888:	push   edx
  41a889:	bound  eax,QWORD PTR [ebx]
  41a88b:	adc    eax,0xffee1ff6
  41a890:	aam    0xd2
  41a892:	xlat   BYTE PTR ds:[ebx]
  41a893:	dec    ebx
  41a894:	mov    al,0xce
  41a896:	jb     0x41a8ad
  41a898:	(bad)  
  41a899:	push   esp
  41a89a:	jl     0x41a8af
  41a89c:	mov    ds:0x89b9277,eax
  41a8a1:	rol    DWORD PTR [ebp-0x6cb0ec69],0xcd
  41a8a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8a9:	push   ebp
  41a8aa:	mov    esi,0x42d36f20
  41a8af:	mov    bl,0x73
  41a8b1:	push   0x266e3371
  41a8b6:	fistp  QWORD PTR [edi]
  41a8b8:	jg     0x41a847
  41a8ba:	ror    BYTE PTR [ecx],1
  41a8bc:	sbb    esi,edx
  41a8be:	mov    esi,0xea939968
  41a8c3:	cmp    eax,0x5ec14b4e
  41a8c8:	aaa    
  41a8c9:	jle    0x41a8c8
  41a8cb:	add    BYTE PTR ds:0x136a2e8d,0x30
  41a8d2:	dec    edi
  41a8d3:	fnstenv [bp+di+0x10]
  41a8d7:	out    dx,eax
  41a8d8:	push   edi
  41a8d9:	jge    0x41a884
  41a8db:	jnp    0x41a946
  41a8dd:	mov    bl,0x8e
  41a8df:	ins    BYTE PTR es:[edi],dx
  41a8e0:	jnp    0x41a900
  41a8e2:	arpl   WORD PTR [esi+0x2e73616],sp
  41a8e8:	mov    al,ds:0x74c55434
  41a8ed:	jo     0x41a8c7
  41a8ef:	shl    BYTE PTR [eax-0x16],1
  41a8f2:	cli    
  41a8f3:	fcmovnb st,st(4)
  41a8f5:	dec    ebp
  41a8f6:	mov    dl,0x8b
  41a8f8:	addr16 mov esi,0x563ea8b8
  41a8fe:	outs   dx,BYTE PTR ds:[esi]
  41a8ff:	loopne 0x41a958
  41a901:	and    cl,BYTE PTR [edx]
  41a903:	dec    ebx
  41a904:	mov    ah,0x46
  41a906:	fucomp st(7)
  41a908:	es cld 
  41a90a:	fcom   QWORD PTR [esi]
  41a90c:	sub    DWORD PTR [ebp-0x49],eax
  41a90f:	mov    ch,0x71
  41a911:	(bad)  
  41a912:	ficomp WORD PTR [esi-0x17]
  41a915:	out    0xbe,al
  41a917:	xlat   BYTE PTR ds:[ebx]
  41a918:	mov    gs,WORD PTR [edx-0x222885da]
  41a91e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a91f:	jmp    0x10be:0xe75a4c27
  41a926:	out    dx,eax
  41a927:	pop    ebp
  41a928:	mov    al,ds:0xe9070148
  41a92d:	jne    0x41a965
  41a92f:	jle    0x41a8fb
  41a931:	or     ah,ah
  41a933:	mov    bh,0x41
  41a935:	jb     0x41a9b6
  41a937:	stos   DWORD PTR es:[edi],eax
  41a938:	lock rol BYTE PTR [ecx],1
  41a93b:	dec    ecx
  41a93c:	dec    DWORD PTR [ecx]
  41a93e:	ret    
  41a93f:	pushf  
  41a940:	imul   ebx,DWORD PTR [esi-0xb681753],0x3b1350ad
  41a94a:	jecxz  0x41a968
  41a94c:	dec    eax
  41a94d:	sub    DWORD PTR [edi+0x5fd1c6d9],ecx
  41a953:	inc    ebx
  41a954:	popa   
  41a955:	fwait
  41a956:	fwait
  41a957:	pop    edi
  41a958:	push   edx
  41a959:	(bad)  
  41a95a:	loopne 0x41a9ac
  41a95c:	mov    esp,0xdcba9314
  41a961:	mov    ebx,0x6d58eaf8
  41a966:	mov    bh,0xd0
  41a968:	inc    ebx
  41a969:	sbb    al,0x8c
  41a96b:	or     BYTE PTR [edx+0x48dd1016],ch
  41a971:	in     al,dx
  41a972:	mov    eax,0x935e573d
  41a977:	loope  0x41a994
  41a979:	lods   al,BYTE PTR ds:[esi]
  41a97a:	sub    eax,0x977ce831
  41a97f:	adc    cl,ah
  41a981:	adc    eax,0x20eae46e
  41a986:	adc    esp,ecx
  41a988:	add    DWORD PTR [esi+0x6b],ebx
  41a98b:	leave  
  41a98c:	and    al,0x4d
  41a98e:	rol    BYTE PTR [ebx-0x1ebf3daf],0x7
  41a995:	xor    al,0xd4
  41a997:	adc    BYTE PTR ds:0x97f296de,bh
  41a99d:	sbb    BYTE PTR [eax+eiz*1-0x6a],dh
  41a9a1:	sti    
  41a9a2:	cdq    
  41a9a3:	dec    edi
  41a9a4:	fwait
  41a9a5:	xor    eax,0xf71d6d34
  41a9aa:	and    DWORD PTR [eax+0x6e],edi
  41a9ad:	dec    ebx
  41a9ae:	repnz pop eax
  41a9b0:	pop    ebp
  41a9b1:	in     al,dx
  41a9b2:	dec    edx
  41a9b3:	lods   al,BYTE PTR ds:[esi]
  41a9b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9b5:	jge    0x41a97a
  41a9b7:	mov    BYTE PTR [esi-0x48],bh
  41a9ba:	mov    ecx,0xc960a4b
  41a9bf:	in     al,0x5a
  41a9c1:	inc    edi
  41a9c2:	es je  0x41a963
  41a9c5:	sub    esp,DWORD PTR [ebx]
  41a9c7:	dec    edx
  41a9c8:	js     0x41aa31
  41a9ca:	jbe    0x41aa49
  41a9cc:	fdivr  QWORD PTR [esi+0x1c31939]
  41a9d2:	rol    BYTE PTR [esi+eax*1],0x67
  41a9d6:	mov    bh,0xc5
  41a9d8:	stc    
  41a9d9:	in     al,dx
  41a9da:	test   al,0xe6
  41a9dc:	xchg   ch,cl
  41a9de:	cmp    al,0x26
  41a9e0:	mov    bh,0x62
  41a9e2:	or     al,BYTE PTR [edi-0x5c]
  41a9e5:	jo     0x41a9d2
  41a9e7:	xchg   edx,eax
  41a9e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9e9:	pop    esp
  41a9ea:	jns    0x41a990
  41a9ec:	mov    esi,0x1404d76f
  41a9f1:	xor    edi,DWORD PTR [esi]
  41a9f3:	cld    
  41a9f4:	jp     0x41a9d1
  41a9f6:	sar    DWORD PTR [esi],0x3f
  41a9f9:	(bad)  
  41a9fa:	std    
  41a9fb:	clc    
  41a9fc:	jg     0x41a97f
  41a9fe:	inc    ebp
  41a9ff:	xchg   edx,eax
  41aa00:	aad    0x24
  41aa02:	nop
  41aa03:	(bad)  
  41aa04:	in     eax,0x7e
  41aa06:	or     cl,ch
  41aa08:	xchg   ebx,eax
  41aa09:	add    ecx,DWORD PTR [esi+0x75]
  41aa0c:	push   0xf47a0aaf
  41aa11:	cmc    
  41aa12:	mov    dh,0xe0
  41aa14:	fs (bad) 
  41aa16:	sub    DWORD PTR [edx+0x20],esi
  41aa19:	(bad)  
  41aa1a:	sahf   
  41aa1b:	out    0xaf,al
  41aa1d:	pop    ebp
  41aa1e:	mov    edx,0x19f26b1a
  41aa23:	outs   dx,DWORD PTR ds:[esi]
  41aa24:	inc    ecx
  41aa25:	mov    esp,DWORD PTR [esp+edi*1]
  41aa28:	stos   DWORD PTR es:[edi],eax
  41aa29:	sub    ebx,DWORD PTR [ebp+ebx*4+0x76]
  41aa2d:	enter  0x35d4,0xee
  41aa31:	mov    eax,ds:0x96ce77c6
  41aa36:	dec    ebp
  41aa37:	push   esp
  41aa38:	mov    bh,0xe1
  41aa3a:	push   ebx
  41aa3b:	scas   eax,DWORD PTR es:[edi]
  41aa3c:	and    ch,ah
  41aa3e:	aam    0x4
  41aa40:	jle    0x41a9ef
  41aa42:	mov    bh,0x32
  41aa44:	mov    WORD PTR [ebx+0x53],es
  41aa47:	les    esp,FWORD PTR [eax]
  41aa49:	out    0x4b,eax
  41aa4b:	lods   al,BYTE PTR ds:[esi]
  41aa4c:	push   esi
  41aa4d:	mov    ebx,0x402185f5
  41aa52:	sub    eax,DWORD PTR [ebp-0x3ccd1042]
  41aa58:	mov    esp,0x8352ff53
  41aa5d:	sbb    DWORD PTR [ecx-0x56],ebp
  41aa60:	or     al,0x4a
  41aa62:	call   0x39796838
  41aa67:	mov    esp,0xf78f206
  41aa6c:	or     eax,0x73631e43
  41aa71:	pop    ds
  41aa72:	jg     0x41a9fd
  41aa74:	push   es
  41aa75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa76:	inc    ecx
  41aa77:	std    
  41aa78:	mov    eax,0x81998703
  41aa7d:	icebp  
  41aa7e:	arpl   WORD PTR [ebx-0x34ad0b46],di
  41aa84:	ins    DWORD PTR es:[edi],dx
  41aa85:	dec    ecx
  41aa86:	les    ebx,FWORD PTR [ebp-0x78d99e5e]
  41aa8c:	mov    DWORD PTR [ecx],edx
  41aa8e:	(bad)  
  41aa8f:	(bad)
  41aa92:	dec    eax
  41aa93:	and    ebx,ecx
  41aa95:	mov    ebx,0x3a5b6984
  41aa9a:	(bad)  [esi-0x54afd384]
  41aaa0:	out    dx,al
  41aaa1:	mov    al,ds:0x822e79e4
  41aaa6:	and    al,0x4e
  41aaa8:	or     DWORD PTR [edi],esp
  41aaaa:	loopne 0x41aaaa
  41aaac:	out    dx,eax
  41aaad:	leave  
  41aaae:	xchg   ebp,eax
  41aaaf:	outs   dx,DWORD PTR ds:[esi]
  41aab0:	push   edi
  41aab1:	lds    ecx,FWORD PTR [edx]
  41aab3:	fnstcw WORD PTR [esi]
  41aab5:	inc    eax
  41aab6:	xor    al,0x6b
  41aab8:	mov    al,0xb0
  41aaba:	and    DWORD PTR [eax-0xfe72c71],ecx
  41aac0:	xchg   edx,eax
  41aac1:	add    DWORD PTR [ebp+0x22],esp
  41aac4:	adc    DWORD PTR [ebx+ecx*2+0xb],esp
  41aac8:	cli    
  41aac9:	mov    dh,0x3
  41aacb:	push   edi
  41aacc:	xchg   ebp,eax
  41aacd:	fnstsw WORD PTR [esi+0x2b]
  41aad0:	(bad)  
  41aad1:	mov    ebp,0x860f2cdd
  41aad6:	mov    ds:0x400447a1,al
  41aadb:	inc    eax
  41aadc:	or     al,0x4a
  41aade:	push   edi
  41aadf:	xor    ebp,DWORD PTR [ebx*8-0x1d3864bc]
  41aae6:	mov    DWORD PTR [edi-0x66],0xe7e4bfb7
  41aaed:	popa   
  41aaee:	mov    ebp,eax
  41aaf0:	adc    esi,esp
  41aaf2:	test   ebx,esp
  41aaf4:	jns    0x41ab6d
  41aaf6:	imul   esp,DWORD PTR [eax],0x70
  41aaf9:	push   0x7b56dea3
  41aafe:	xor    esi,eax
  41ab00:	inc    eax
  41ab01:	or     edi,ebx
  41ab03:	int3   
  41ab04:	mov    ecx,0x7180f563
  41ab09:	push   0xc43f96dd
  41ab0e:	scas   al,BYTE PTR es:[edi]
  41ab0f:	xor    BYTE PTR [ebx+0x6ed8ff6f],0x74
  41ab16:	xchg   edx,eax
  41ab17:	retf   0x1ccd
  41ab1a:	mov    bh,0xed
  41ab1c:	ins    BYTE PTR es:[edi],dx
  41ab1d:	and    dl,dh
  41ab1f:	push   0xffffff80
  41ab21:	(bad)  
  41ab23:	ins    DWORD PTR es:[edi],dx
  41ab24:	or     ecx,DWORD PTR [ebx-0x6ab0d8db]
  41ab2a:	xchg   ecx,eax
  41ab2b:	pop    edx
  41ab2c:	sub    DWORD PTR [ebx-0x26d515e9],ecx
  41ab32:	shl    BYTE PTR [ebx+eiz*4+0x21],0xf6
  41ab37:	loopne 0x41ab78
  41ab39:	adc    eax,0x8bf9f8f1
  41ab3e:	jne    0x41abaa
  41ab40:	int    0x3b
  41ab42:	and    dl,ah
  41ab44:	scas   eax,DWORD PTR es:[edi]
  41ab45:	jp     0x41ab0a
  41ab47:	xchg   ch,ch
  41ab49:	and    eax,0x4b056413
  41ab4e:	inc    eax
  41ab4f:	and    al,0xc6
  41ab51:	jo     0x41ab08
  41ab53:	jae    0x41ab8b
  41ab55:	and    ecx,edi
  41ab57:	dec    ebp
  41ab58:	gs dec esi
  41ab5a:	mov    WORD PTR [eax],cs
  41ab5c:	mov    ch,0x5f
  41ab5e:	fxch   st(2)
  41ab60:	retf   
  41ab61:	mov    al,ds:0xcb955850
  41ab66:	and    al,0xb0
  41ab68:	and    edx,ecx
  41ab6a:	add    dh,BYTE PTR [eax]
  41ab6c:	repnz sub eax,0xc97cf5ca
  41ab72:	jno    0x41abbe
  41ab74:	or     eax,0x360bacee
  41ab79:	jl     0x41ab65
  41ab7b:	test   eax,0x6efe231c
  41ab80:	fiadd  WORD PTR [edi+0x79]
  41ab83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab84:	in     eax,dx
  41ab85:	shr    DWORD PTR [ebx+0x5],1
  41ab88:	sub    DWORD PTR [edx+0x4b068eff],edi
  41ab8e:	cdq    
  41ab8f:	xor    BYTE PTR [edi+0x21],bh
  41ab92:	jp     0x41ab19
  41ab94:	mov    esp,0x1370275f
  41ab99:	or     al,BYTE PTR [edx+edi*1+0x72]
  41ab9d:	jae    0x41abe9
  41ab9f:	push   cx
  41aba1:	and    BYTE PTR [ebp-0x29],bh
  41aba4:	mov    ebp,0xb09f3773
  41aba9:	sbb    esp,DWORD PTR [edx+eax*4]
  41abac:	sti    
  41abad:	aas    
  41abae:	jne    0x41abd2
  41abb0:	out    dx,al
  41abb1:	xchg   DWORD PTR [esi],eax
  41abb3:	adc    BYTE PTR [esp+ebp*1-0xb],ah
  41abb7:	daa    
  41abb8:	push   0x70
  41abba:	aas    
  41abbb:	mov    ebp,0xf69a35bb
  41abc0:	stc    
  41abc1:	xor    esp,esp
  41abc3:	adc    al,0xa9
  41abc5:	jl     0x41abf6
  41abc7:	daa    
  41abc8:	and    al,0x4e
  41abca:	mov    BYTE PTR [ebp+0x3c5f9916],al
  41abd0:	inc    edx
  41abd1:	mov    esi,DWORD PTR [edi-0x66858502]
  41abd7:	jne    0x41ac1c
  41abd9:	mov    eax,0xc5b28479
  41abde:	mov    dh,0xc
  41abe0:	dec    ebp
  41abe1:	cmp    esp,esp
  41abe3:	pop    es
  41abe4:	xchg   ebx,eax
  41abe5:	cmc    
  41abe6:	test   DWORD PTR [ebp*2+0x5aa84a54],ebx
  41abed:	aad    0x5d
  41abef:	test   dl,ch
  41abf1:	mov    esp,0xaf7d5e93
  41abf6:	mov    al,0xaa
  41abf8:	sbb    eax,DWORD PTR [edi+0x13f3fda6]
  41abfe:	mov    dh,BYTE PTR [edi-0x52]
  41ac01:	mov    DWORD PTR [edi+0x6e],esi
  41ac04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac05:	mov    ebp,0x3a821a5b
  41ac0a:	dec    ebp
  41ac0b:	inc    ebp
  41ac0c:	adc    ah,dl
  41ac0e:	lock cmp al,cl
  41ac11:	xor    dl,0x4d
  41ac14:	outs   dx,DWORD PTR ds:[esi]
  41ac15:	jne    0x41abb2
  41ac17:	(bad)  
  41ac18:	sub    ecx,DWORD PTR [ecx-0x303095c1]
  41ac1e:	ffreep st(7)
  41ac20:	lock xchg DWORD PTR cs:[ecx+0xe],ebp
  41ac25:	inc    eax
  41ac26:	(bad)  
  41ac27:	aas    
  41ac28:	lods   al,BYTE PTR ds:[esi]
  41ac29:	fild   QWORD PTR [ebp-0x5a]
  41ac2c:	lock jle 0x41ac75
  41ac2f:	cld    
  41ac30:	xchg   edi,eax
  41ac31:	jp     0x41abdc
  41ac33:	repnz cmp al,0x47
  41ac36:	and    DWORD PTR [ebp+0x74badaff],edi
  41ac3c:	cwde   
  41ac3d:	lods   al,BYTE PTR ds:[esi]
  41ac3e:	add    bl,BYTE PTR [eax-0x34]
  41ac41:	mov    ebx,0xc8d7d60d
  41ac46:	mov    esp,0xa232c986
  41ac4b:	or     DWORD PTR [ecx],0xffffff8f
  41ac4e:	push   0xf76c51e2
  41ac53:	inc    esi
  41ac54:	jno    0x41abf4
  41ac56:	dec    ebp
  41ac57:	mov    DWORD PTR [ebx+0x27c803ad],edx
  41ac5d:	dec    ebx
  41ac5e:	inc    edx
  41ac5f:	dec    ecx
  41ac60:	sbb    ebp,edx
  41ac62:	arpl   WORD PTR [eax],si
  41ac64:	push   ss
  41ac65:	inc    eax
  41ac66:	bnd jne 0x41abec
  41ac69:	sar    DWORD PTR [edx],cl
  41ac6b:	test   DWORD PTR [eax+edi*4-0x4afc1958],ebx
  41ac72:	xchg   eax,ebp
  41ac74:	lods   al,BYTE PTR ds:[esi]
  41ac76:	sbb    BYTE PTR [ebp-0x76],0x3a
  41ac7a:	leave  
  41ac7b:	push   edi
  41ac7c:	mov    ebx,0xfcba4690
  41ac81:	inc    ecx
  41ac82:	gs es cld 
  41ac85:	xor    esp,DWORD PTR [ecx+0x7b]
  41ac88:	int    0x99
  41ac8a:	stos   BYTE PTR es:[edi],al
  41ac8b:	ret    0x8715
  41ac8e:	xlat   BYTE PTR ds:[ebx]
  41ac8f:	mov    bl,0xf5
  41ac91:	add    DWORD PTR [ebx-0x70],edi
  41ac94:	aad    0x98
  41ac96:	sub    eax,0x5a3b5a5a
  41ac9b:	sets   dl
  41ac9e:	mov    al,0x96
  41aca0:	fadd   DWORD PTR [edx]
  41aca2:	jo     0x41ac6e
  41aca4:	mov    eax,ds:0xb1f37481
  41acaa:	xchg   esp,eax
  41acab:	fs mov cl,0xd4
  41acae:	push   0x61
  41acb0:	jae    0x41ad22
  41acb2:	adc    DWORD PTR [eax+edx*2],eax
  41acb5:	mov    edi,0x401a072c
  41acba:	enter  0x584f,0x9
  41acbe:	out    dx,al
  41acbf:	popa   
  41acc0:	dec    eax
  41acc1:	popa   
  41acc2:	xor    eax,0xdcdef2ed
  41acc7:	xor    eax,0xea0ea418
  41accc:	xchg   esi,eax
  41accd:	mov    fs,edx
  41accf:	retf   0x4bee
  41acd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acd3:	jne    0x41ad02
  41acd5:	push   ecx
  41acd6:	sbb    edx,eax
  41acd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acd9:	pushf  
  41acda:	adc    al,0xba
  41acdc:	js     0x41ad4c
  41acde:	(bad)  
  41acdf:	(bad)  
  41ace0:	(bad)  
  41ace1:	push   0x7ffdf5ca
  41ace6:	repnz add al,0x90
  41ace9:	cwde   
  41acea:	mov    ds:0x5478d1f9,eax
  41acef:	or     al,0xf4
  41acf1:	xchg   ebp,eax
  41acf2:	mov    eax,0xbd839dbf
  41acf7:	and    DWORD PTR [ecx+ebp*2+0x2d],edx
  41acfb:	(bad)  
  41acfc:	stos   DWORD PTR es:[edi],eax
  41acfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acfe:	in     al,0xdf
  41ad00:	mov    ah,0xba
  41ad02:	les    edi,FWORD PTR [edi]
  41ad04:	stos   BYTE PTR es:[edi],al
  41ad05:	cmc    
  41ad06:	mov    ds:0x32e33453,al
  41ad0b:	sahf   
  41ad0c:	lea    esp,[eax+0x1cf6fa0a]
  41ad12:	xchg   ebp,eax
  41ad13:	mov    edx,0x55fc045d
  41ad18:	inc    ebp
  41ad19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad1a:	mov    ebp,0xe945460a
  41ad1f:	sbb    eax,0xa0c5c6ba
  41ad24:	loope  0x41acca
  41ad26:	fsubr  QWORD PTR [edi-0x51548d30]
  41ad2c:	sub    eax,0x4e671985
  41ad31:	sbb    BYTE PTR [ecx+0x36],0x5e
  41ad35:	loopne 0x41acf1
  41ad37:	hlt    
  41ad38:	xor    edx,DWORD PTR [esi]
  41ad3a:	dec    edi
  41ad3b:	and    eax,0x5d34e365
  41ad40:	sti    
  41ad41:	lock cmp bh,bl
  41ad44:	lea    ecx,[eax-0xed7ab4f]
  41ad4a:	test   BYTE PTR [ebp-0x2a],0x8f
  41ad4e:	inc    edx
  41ad4f:	jmp    0x30d3:0x2a8d3f6d
  41ad56:	ja     0x41ace5
  41ad58:	xchg   BYTE PTR [edi-0x170b6845],cl
  41ad5e:	mov    esi,0x3380cf2d
  41ad63:	imul   ecx,DWORD PTR [esi],0xffffffea
  41ad66:	sbb    dh,BYTE PTR [ebx-0x62]
  41ad69:	sbb    eax,0x6b147d18
  41ad6e:	jge    0x41ada4
  41ad70:	and    BYTE PTR [edx+0x1e6795e8],cl
  41ad76:	jg     0x41ad89
  41ad78:	sub    bh,dl
  41ad7a:	jne    0x41ad0b
  41ad7c:	pop    ebp
  41ad7d:	popf   
  41ad7e:	jae    0x41ad2e
  41ad80:	arpl   WORD PTR [ebp-0x3a],bx
  41ad83:	xor    esp,DWORD PTR [ecx+0x42]
  41ad86:	out    0x33,eax
  41ad88:	sub    bl,bh
  41ad8a:	(bad)  
  41ad8d:	sbb    DWORD PTR [ebx],esi
  41ad8f:	pushf  
  41ad90:	fist   DWORD PTR [edx-0x43]
  41ad93:	sub    al,0xf5
  41ad95:	sbb    edi,DWORD PTR [ebx+edi*8]
  41ad98:	pop    edi
  41ad99:	popf   
  41ad9a:	(bad)  
  41ad9c:	int3   
  41ad9d:	mov    es,WORD PTR [edi+0x13]
  41ada0:	add    al,0x5f
  41ada2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ada3:	cmp    eax,0xb7cd85fe
  41ada8:	jmp    0xab4ff37f
  41adad:	and    al,0x6c
  41adaf:	test   BYTE PTR [ecx+0xb],bl
  41adb2:	addr16 inc ebx
  41adb4:	cmc    
  41adb5:	adc    esi,ebp
  41adb7:	cdq    
  41adb8:	sub    al,0x3e
  41adba:	cmp    eax,esp
  41adbc:	imul   ebx,DWORD PTR [eax-0x75e22ef3],0x45
  41adc3:	xchg   esp,eax
  41adc4:	fbstp  TBYTE PTR [ebx]
  41adc6:	aam    0x37
  41adc8:	xor    eax,0x39488ebb
  41adcd:	ss (bad) 
  41adcf:	pop    es
  41add0:	fiadd  DWORD PTR [edi-0x2d]
  41add3:	fistp  WORD PTR [edx]
  41add5:	pop    eax
  41add6:	clc    
  41add7:	sbb    DWORD PTR [edi],0xffffffa8
  41adda:	out    0x12,eax
  41addc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41addd:	pop    esi
  41adde:	and    al,0xc8
  41ade0:	and    ebx,DWORD PTR [edi-0x4d]
  41ade3:	sub    ecx,DWORD PTR ds:0xac91a896
  41ade9:	xor    DWORD PTR [ecx],eax
  41adeb:	or     DWORD PTR [edx],ecx
  41aded:	inc    ecx
  41adee:	sub    BYTE PTR [esi+0x7],0xe8
  41adf2:	and    al,0xcc
  41adf4:	push   eax
  41adf5:	test   eax,0xe7fc8112
  41adfa:	loop   0x41ae15
  41adfc:	and    BYTE PTR [edi+esi*8+0x28e946f0],0xfb
  41ae04:	inc    ebp
  41ae05:	ja     0x41ae3b
  41ae07:	(bad)  
  41ae08:	loop   0x41ae76
  41ae0a:	sub    dh,dh
  41ae0c:	int3   
  41ae0d:	mov    dh,0x3f
  41ae0f:	xor    BYTE PTR [esi+esi*2],cl
  41ae12:	inc    esi
  41ae13:	fstp   DWORD PTR [ecx-0x70523d83]
  41ae19:	sahf   
  41ae1a:	xchg   bh,ch
  41ae1c:	(bad)  
  41ae1d:	jg     0x41ae14
  41ae1f:	and    BYTE PTR [edx+0x2b],dl
  41ae22:	lock outs dx,DWORD PTR ds:[esi]
  41ae24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae25:	or     ah,BYTE PTR [edi-0x625c2ef3]
  41ae2b:	jne    0x41ae5e
  41ae2d:	repnz mov edx,0x2568cf8c
  41ae33:	fnstsw WORD PTR [ecx+0x18e3dbc0]
  41ae39:	fbld   TBYTE PTR [ecx+0x59]
  41ae3c:	retf   
  41ae3d:	pop    ss
  41ae3e:	test   eax,0xef0584fd
  41ae43:	aaa    
  41ae44:	loope  0x41aec4
  41ae46:	pop    ebp
  41ae47:	in     al,dx
  41ae48:	test   BYTE PTR [eax],ch
  41ae4a:	inc    ebx
  41ae4b:	sub    edi,DWORD PTR [eax+0x7cd6fe00]
  41ae51:	in     eax,dx
  41ae52:	addr16 jg 0x41ae03
  41ae55:	push   cs
  41ae56:	loopne 0x41ae83
  41ae58:	test   cl,ah
  41ae5a:	fdiv   DWORD PTR [eax]
  41ae5c:	out    0x5a,al
  41ae5e:	inc    ecx
  41ae5f:	pop    ss
  41ae60:	jmp    0x41aeab
  41ae62:	fs sbb eax,0x39657539
  41ae68:	jno    0x41ae75
  41ae6a:	cdq    
  41ae6b:	xchg   cx,ax
  41ae6d:	lods   eax,DWORD PTR ds:[esi]
  41ae6e:	inc    edx
  41ae6f:	adc    ebp,DWORD PTR [edx+edi*1]
  41ae72:	ds not ebx
  41ae75:	push   ebp
  41ae76:	loop   0x41ae05
  41ae78:	aas    
  41ae79:	adc    BYTE PTR [esi],bl
  41ae7b:	stos   BYTE PTR es:[edi],al
  41ae7c:	fadd   DWORD PTR [edi-0x34]
  41ae7f:	dec    edx
  41ae80:	cmp    ecx,edx
  41ae82:	rcr    esp,cl
  41ae84:	into   
  41ae85:	cmp    eax,0x6586213f
  41ae8a:	rcr    al,0x59
  41ae8d:	aaa    
  41ae8e:	ss pop ebx
  41ae90:	jge    0x41ae96
  41ae92:	setle  ah
  41ae95:	std    
  41ae96:	xchg   BYTE PTR [esi-0x29],ah
  41ae99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae9a:	iret   
  41ae9b:	loopne 0x41ae58
  41ae9d:	dec    eax
  41ae9e:	sub    BYTE PTR [edi+ecx*1],al
  41aea1:	retf   0x8eef
  41aea4:	jl     0x41aebb
  41aea6:	pop    es
  41aea7:	pop    esi
  41aea8:	inc    esp
  41aea9:	sbb    DWORD PTR [ebx+0x50],ebx
  41aeac:	jo     0x41aed8
  41aeae:	aas    
  41aeaf:	jno    0x41ae50
  41aeb1:	adc    al,0xf9
  41aeb3:	add    BYTE PTR ds:0xd64848a5,bh
  41aeb9:	vsubss xmm7,xmm0,DWORD PTR [ecx+edx*8+0x13]
  41aebf:	mov    edi,0xb6fef57a
  41aec4:	aaa    
  41aec5:	dec    ebp
  41aec6:	stc    
  41aec7:	sti    
  41aec8:	ja     0x41af39
  41aeca:	out    0x57,al
  41aecc:	cmp    al,0x36
  41aece:	mov    al,ds:0xbbf11299
  41aed3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aed4:	loope  0x41af2f
  41aed6:	mov    cl,0xca
  41aed8:	sbb    ebx,edi
  41aeda:	idiv   DWORD PTR [esp+ecx*2]
  41aedd:	xor    eax,0x29fb075a
  41aee2:	inc    edx
  41aee3:	and    al,0xe0
  41aee5:	and    DWORD PTR [edi-0x752553fe],esp
  41aeeb:	lods   al,BYTE PTR ds:[esi]
  41aeec:	fmul   st(2),st
  41aeee:	mov    cl,0x4c
  41aef0:	daa    
  41aef1:	mov    DWORD PTR [ebx-0x3700d333],edi
  41aef7:	cdq    
  41aef8:	(bad)  
  41aef9:	and    al,0xe8
  41aefb:	adc    BYTE PTR [edx],cl
  41aefd:	daa    
  41aefe:	(bad)  
  41aeff:	das    
  41af00:	add    DWORD PTR [ebp+0x1a],ebp
  41af03:	push   cs
  41af04:	enter  0xe30d,0xe0
  41af08:	outs   dx,BYTE PTR ds:[esi]
  41af09:	inc    ecx
  41af0a:	cld    
  41af0b:	aaa    
  41af0c:	stos   BYTE PTR es:[edi],al
  41af0d:	sub    eax,0x9eb2b2ab
  41af12:	lahf   
  41af13:	and    BYTE PTR [eax-0x5ef8b23f],ah
  41af19:	in     al,0x72
  41af1b:	mov    dl,0x46
  41af1d:	inc    ebp
  41af1e:	mov    edx,?
  41af20:	lahf   
  41af21:	in     al,0xd2
  41af23:	xor    al,bl
  41af25:	sbb    BYTE PTR [edi-0x5044cb68],0x67
  41af2c:	lods   eax,DWORD PTR ds:[esi]
  41af2d:	ins    BYTE PTR es:[edi],dx
  41af2e:	adc    BYTE PTR [eax],dl
  41af30:	mov    WORD PTR [ebx+0x576d7428],?
  41af36:	int    0xf7
  41af38:	or     ebx,0xbd5c0198
  41af3e:	es push es
  41af40:	mov    eax,ds:0x4a3796f2
  41af45:	test   DWORD PTR [edx-0x58ab5de2],edi
  41af4b:	mov    BYTE PTR [edi+0x0],cl
  41af4e:	ret    
  41af4f:	mov    esi,DWORD PTR [eax+0x29a82497]
  41af55:	jmp    0xf17a:0x7674c026
  41af5c:	mov    eax,0x602330ee
  41af61:	and    edi,DWORD PTR [ecx+0x37]
  41af64:	out    0x6e,eax
  41af66:	data16 jmp 0x41aef7
  41af69:	dec    ebp
  41af6a:	popf   
  41af6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af6c:	or     eax,0x8338629a
  41af71:	inc    edx
  41af72:	adc    ebp,DWORD PTR [esi]
  41af74:	ins    BYTE PTR es:[edi],dx
  41af75:	int    0xfd
  41af77:	adc    esi,DWORD PTR [esi-0x46d5f5b8]
  41af7d:	xchg   edx,eax
  41af7e:	or     eax,0xdcafb4e0
  41af83:	imul   ecx,DWORD PTR [ecx-0x7c88133f],0xffffffac
  41af8a:	stc    
  41af8b:	shl    BYTE PTR [esi+0x5c8dd8bd],0x1c
  41af92:	xor    dl,dl
  41af94:	cmp    al,0xbe
  41af96:	sahf   
  41af97:	cdq    
  41af98:	cmp    eax,0xb8d8ecc9
  41af9d:	pop    ss
  41af9e:	mov    dl,0xa0
  41afa0:	sti    
  41afa1:	repz xlat BYTE PTR ds:[ebx]
  41afa3:	int3   
  41afa4:	ins    BYTE PTR es:[edi],dx
  41afa5:	xchg   BYTE PTR [ebx-0x61db24c7],ah
  41afab:	sub    al,0x25
  41afad:	(bad)  
  41afae:	std    
  41afaf:	add    al,0xfa
  41afb1:	mov    ch,0x43
  41afb3:	rcl    BYTE PTR [eax+0x50],1
  41afb6:	jmp    0x77cb:0x325910d1
  41afbd:	jp     0x41aff5
  41afbf:	mov    edi,0xdf7a929b
  41afc4:	push   eax
  41afc5:	fisttp WORD PTR [ebx-0x6b42dc1b]
  41afcb:	sahf   
  41afcc:	lock in eax,dx
  41afce:	pop    ds
  41afcf:	int3   
  41afd0:	mov    ah,bh
  41afd2:	cmp    BYTE PTR [ebx],dh
  41afd4:	mov    ebp,0xf8fb52c4
  41afd9:	outs   dx,DWORD PTR ds:[esi]
  41afda:	aam    0x54
  41afdc:	ins    DWORD PTR es:[edi],dx
  41afdd:	clc    
  41afde:	add    BYTE PTR [edx+0x2a],ch
  41afe1:	test   DWORD PTR [edi],0xd1df5c3c
  41afe7:	mov    ds:0xab69af6c,eax
  41afec:	add    BYTE PTR [esi+esi*1+0x25],cl
  41aff0:	adc    BYTE PTR [ecx],bl
  41aff2:	push   edx
  41aff3:	aad    0xc8
  41aff5:	and    DWORD PTR [ecx+0x6a203d44],esp
  41affb:	xchg   DWORD PTR [ebp+esi*8+0x5e96c09c],ebp
  41b002:	arpl   WORD PTR [esi-0x18],bx
  41b005:	ins    BYTE PTR es:[edi],dx
  41b006:	pop    ds
  41b007:	pop    esi
  41b008:	iret   
  41b009:	aas    
  41b00a:	push   0xfc465b98
  41b00f:	adc    eax,0x34df3dbc
  41b014:	in     al,dx
  41b015:	and    DWORD PTR [edi],ebx
  41b017:	xchg   BYTE PTR [esi-0x5a],dh
  41b01a:	fs xchg esi,eax
  41b01c:	add    DWORD PTR [esi-0x3fdc5a9],edx
  41b022:	xor    bl,BYTE PTR [ecx+0x63]
  41b025:	imul   edi,DWORD PTR [edx],0x2ce59b16
  41b02b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b02c:	ins    BYTE PTR es:[edi],dx
  41b02d:	sub    ch,BYTE PTR [ebx-0x45]
  41b030:	repz stc 
  41b032:	je     0x41b00b
  41b034:	sub    BYTE PTR [ecx-0x4c],al
  41b037:	dec    esp
  41b038:	mov    ah,0x1c
  41b03a:	sbb    al,dh
  41b03c:	pop    ds
  41b03d:	dec    ecx
  41b03e:	inc    ecx
  41b03f:	xchg   esp,eax
  41b040:	int3   
  41b041:	lods   al,BYTE PTR ds:[esi]
  41b042:	out    dx,eax
  41b043:	out    0xba,eax
  41b045:	or     al,BYTE PTR [edx+0x3650d1a6]
  41b04b:	ss cmc 
  41b04d:	addr16 out dx,al
  41b04f:	scas   eax,DWORD PTR es:[edi]
  41b050:	imul   esp,ebp,0x677e9ea
  41b056:	nop
  41b057:	mov    dl,0x3a
  41b059:	pop    ecx
  41b05a:	sub    al,0xb5
  41b05c:	jae    0x41b08a
  41b05e:	mov    ebp,0x6227e9a6
  41b063:	pop    esp
  41b064:	inc    edi
  41b065:	mov    bl,0x51
  41b067:	jl     0x41b059
  41b069:	push   esp
  41b06a:	retf   0xd6f5
  41b06d:	mov    BYTE PTR [esi+edx*1+0x5d],al
  41b071:	xchg   DWORD PTR [ebx],ebx
  41b073:	or     cl,ch
  41b075:	pop    ebx
  41b076:	and    DWORD PTR [eax],ebp
  41b078:	inc    ecx
  41b079:	xchg   ecx,eax
  41b07a:	jo     0x41b0ad
  41b07c:	je     0x41b05e
  41b07e:	aaa    
  41b07f:	in     eax,0x82
  41b081:	pop    edi
  41b082:	jge    0x41b074
  41b084:	loopne 0x41b057
  41b086:	repz sbb DWORD PTR [ebp-0x622cdfe3],ecx
  41b08d:	xor    eax,0x2c6f06ba
  41b092:	in     al,0xd4
  41b094:	sub    DWORD PTR [eax-0x19199b01],esp
  41b09a:	cmp    al,0x6e
  41b09c:	dec    eax
  41b09d:	cmp    eax,0xb0524735
  41b0a2:	adc    BYTE PTR [edi-0x32],al
  41b0a5:	mov    bh,0xe5
  41b0a7:	add    dl,BYTE PTR [ecx]
  41b0a9:	push   ecx
  41b0aa:	ins    DWORD PTR es:[edi],dx
  41b0ab:	pushf  
  41b0ac:	stc    
  41b0ad:	lea    esp,[esp+ecx*2+0x2fa6d652]
  41b0b4:	ret    0xa109
  41b0b7:	call   0x6ce1d09
  41b0bc:	mov    edi,0xdde0b203
  41b0c1:	inc    esi
  41b0c2:	push   0xdd12ddd9
  41b0c7:	sub    eax,0x4eaaabfb
  41b0cc:	popf   
  41b0cd:	jnp    0x41b11e
  41b0cf:	add    ebp,DWORD PTR [ebx+0x8]
  41b0d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0d3:	inc    ebx
  41b0d4:	sbb    edx,DWORD PTR [eax-0x3]
  41b0d7:	popf   
  41b0d8:	pop    edx
  41b0d9:	subps  xmm5,XMMWORD PTR ds:0xd788adcf
  41b0e0:	pop    ds
  41b0e1:	jmp    0xbc3a:0x72323e44
  41b0e8:	les    edi,FWORD PTR [eax]
  41b0ea:	mov    bh,0x4
  41b0ec:	fwait
  41b0ed:	mov    dh,0xe
  41b0ef:	lods   al,BYTE PTR ds:[esi]
  41b0f0:	or     cl,BYTE PTR [ebx+edi*4-0x7]
  41b0f4:	rcl    DWORD PTR [ebp+ebp*2-0x76d95c72],1
  41b0fb:	jge    0x41b153
  41b0fd:	mov    ecx,0x6a4e4507
  41b102:	fs pusha 
  41b104:	mov    esi,0x1af4c28b
  41b109:	fsubp  st(0),st
  41b10b:	iret   
  41b10c:	dec    edx
  41b10d:	inc    esi
  41b10e:	adc    eax,DWORD PTR [edi+0x1df55b37]
  41b114:	adc    ebp,DWORD PTR [ebx+0x30bb8183]
  41b11a:	ds (bad) 
  41b11d:	add    eax,0x4cb94ca
  41b122:	and    dh,BYTE PTR [ebx-0x52ad1fcf]
  41b128:	out    dx,eax
  41b129:	xchg   edi,eax
  41b12a:	xchg   DWORD PTR [ebp+esi*8-0x73492cf3],ecx
  41b131:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b132:	repnz mov ch,0xc6
  41b135:	leave  
  41b136:	or     dl,BYTE PTR [edi]
  41b138:	add    esi,DWORD PTR [ecx]
  41b13a:	mov    esi,0x329fe176
  41b13f:	xor    BYTE PTR [edi+edx*8],dl
  41b142:	mov    esp,0x3e973f8a
  41b147:	or     eax,edx
  41b149:	mov    cl,0x3b
  41b14b:	ins    BYTE PTR es:[edi],dx
  41b14c:	nop
  41b14d:	dec    ecx
  41b14e:	pushf  
  41b14f:	and    al,0x8
  41b151:	dec    esp
  41b152:	outs   dx,DWORD PTR ds:[esi]
  41b153:	out    0x40,eax
  41b155:	cwde   
  41b156:	xor    edi,DWORD PTR [eax]
  41b158:	push   esp
  41b159:	jns    0x41b16f
  41b15b:	mov    bl,0x53
  41b15d:	aad    0xcd
  41b15f:	xchg   esp,eax
  41b160:	scas   eax,DWORD PTR es:[edi]
  41b161:	adc    ch,BYTE PTR [eax-0x337787b1]
  41b167:	pop    esi
  41b168:	push   esp
  41b169:	or     eax,0xa2026715
  41b16e:	push   esi
  41b16f:	inc    edi
  41b170:	mov    edx,0x169ade6e
  41b176:	(bad)  
  41b177:	(bad)  
  41b178:	in     eax,dx
  41b179:	call   0x8ec9:0xa14d9501
  41b180:	in     eax,dx
  41b181:	jecxz  0x41b1a7
  41b183:	sti    
  41b184:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b185:	call   0xc575:0xf66e4861
  41b18c:	mov    edi,DWORD PTR [eax+ebx*8]
  41b18f:	mov    eax,ds:0xb7bdc31d
  41b194:	mov    edx,edx
  41b196:	mov    ch,0x8d
  41b198:	mov    ecx,0x5dccb1d4
  41b19d:	mov    ds:0xd4f5d087,al
  41b1a2:	and    eax,0x829ccaea
  41b1a7:	sub    al,0x1d
  41b1a9:	jmp    0x4345:0x882e7132
  41b1b0:	pop    edi
  41b1b1:	pop    esi
  41b1b2:	xchg   BYTE PTR [edi-0x36b1bfc5],dl
  41b1b8:	mov    dh,0xc5
  41b1ba:	das    
  41b1bb:	mov    bh,0xe3
  41b1bd:	test   esi,ecx
  41b1bf:	sub    eax,0x9ce474da
  41b1c4:	inc    ebp
  41b1c5:	sbb    dl,ch
  41b1c7:	sbb    DWORD PTR [esi+0x4e],ebp
  41b1ca:	pusha  
  41b1cb:	or     BYTE PTR [eax-0x5d14e782],bl
  41b1d1:	sbb    eax,0x339d11b6
  41b1d7:	lods   al,BYTE PTR ds:[esi]
  41b1d8:	mov    bh,BYTE PTR [ebx+0x44]
  41b1db:	arpl   WORD PTR [edi],si
  41b1dd:	add    eax,0x39271024
  41b1e2:	cmp    esi,DWORD PTR [eax+0x70]
  41b1e5:	adc    BYTE PTR [ebx],cl
  41b1e7:	add    al,0x81
  41b1e9:	inc    edx
  41b1ea:	sub    esp,DWORD PTR [edx-0x2ec6460a]
  41b1f0:	or     ebp,DWORD PTR [ecx+0x6b7cbc72]
  41b1f6:	xchg   esi,eax
  41b1f7:	add    DWORD PTR [esi+0x1ad6296],edi
  41b1fd:	faddp  st(0),st
  41b1ff:	sbb    al,0x63
  41b201:	mov    eax,ds:0xbc90d4cf
  41b206:	dec    edx
  41b207:	sub    ah,0xbd
  41b20a:	sub    ch,BYTE PTR [edi]
  41b20c:	mov    ds:0x2a032c24,al
  41b211:	test   al,0x52
  41b213:	pushf  
  41b214:	lea    ebp,[eax+0x40c1b8de]
  41b21a:	add    al,ah
  41b21c:	pop    esp
  41b21d:	push   ebp
  41b21e:	xchg   bh,ah
  41b220:	mov    ch,BYTE PTR [edi+0xd]
  41b223:	push   edi
  41b224:	add    al,BYTE PTR [ebx]
  41b226:	shl    DWORD PTR [ebx-0x40806763],1
  41b22c:	push   cs
  41b22d:	sub    eax,0x64f2865e
  41b232:	adc    al,0xf8
  41b234:	sub    ebx,esi
  41b236:	enter  0xc439,0x8f
  41b23a:	push   0x212c6bf9
  41b23f:	sub    dh,cl
  41b241:	push   esi
  41b242:	pop    esp
  41b243:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b244:	mov    eax,0x2bfd00d1
  41b249:	dec    edi
  41b24a:	inc    ebx
  41b24b:	inc    ebp
  41b24c:	pop    esi
  41b24d:	lds    ebx,FWORD PTR [ebx]
  41b24f:	or     DWORD PTR [ecx-0x62ceea7b],ecx
  41b255:	xchg   BYTE PTR [edi+ebp*8+0x759526b7],bh
  41b25c:	mov    BYTE PTR [esi+esi*2],dh
  41b25f:	and    al,0x88
  41b261:	xchg   ebx,eax
  41b262:	push   ebx
  41b263:	or     eax,0xc3049f97
  41b268:	push   ebp
  41b269:	dec    edi
  41b26a:	in     eax,0x5c
  41b26c:	(bad)  
  41b26d:	xor    BYTE PTR [edx+0x698827cf],bh
  41b273:	cmc    
  41b274:	sub    eax,0xc1dcf413
  41b279:	or     al,0x5e
  41b27b:	dec    ebp
  41b27c:	inc    ebx
  41b27d:	jmp    0x41b253
  41b27f:	adc    ah,ch
  41b281:	or     esi,DWORD PTR [esi+0x24]
  41b284:	pop    es
  41b285:	stos   BYTE PTR es:[edi],al
  41b286:	icebp  
  41b287:	push   esp
  41b288:	jbe    0x41b218
  41b28a:	pop    ds
  41b28b:	mov    edi,0x91f30e71
  41b290:	dec    esi
  41b291:	mov    ds:0xadcc8746,eax
  41b296:	cmp    dh,0xa0
  41b299:	jmp    0x546:0xad962ff7
  41b2a0:	ja     0x41b30a
  41b2a2:	pop    edx
  41b2a3:	shl    DWORD PTR [esi+0x30],0xee
  41b2a7:	jb     0x41b2de
  41b2a9:	push   0xfd0d737c
  41b2ae:	sbb    DWORD PTR [ebp+0x46fb3991],eax
  41b2b4:	in     al,0x30
  41b2b6:	mov    eax,ds:0xd43909be
  41b2bb:	push   0x666d10d1
  41b2c0:	add    esp,edi
  41b2c2:	mov    edi,0x655db8d5
  41b2c7:	push   0x47
  41b2c9:	mov    esi,0xb78b0570
  41b2ce:	inc    ebp
  41b2cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2d0:	ret    
  41b2d1:	pop    ss
  41b2d2:	das    
  41b2d3:	(bad)  
  41b2d4:	mov    ebp,0x2d48fd4a
  41b2d9:	push   edi
  41b2da:	push   es
  41b2db:	push   cs
  41b2dc:	cs jno 0x41b2cf
  41b2df:	test   DWORD PTR [ecx],0x3723cfe4
  41b2e5:	lods   eax,DWORD PTR ds:[esi]
  41b2e6:	adc    ebp,esi
  41b2e8:	xchg   esp,eax
  41b2e9:	sahf   
  41b2ea:	and    esp,DWORD PTR ss:[esi-0x601f35a5]
  41b2f1:	jo     0x41b2f6
  41b2f3:	out    0x36,eax
  41b2f5:	fsubr  QWORD PTR [ecx+ebx*2]
  41b2f8:	sub    DWORD PTR [ecx],edi
  41b2fa:	xchg   esi,eax
  41b2fb:	sub    al,BYTE PTR [edi+0x2c]
  41b2fe:	jmp    0x5ae4:0xdac11398
  41b305:	jnp    0x41b371
  41b307:	test   DWORD PTR [edx-0xa],0x22eb8364
  41b30e:	add    bl,BYTE PTR [ebp+0xb]
  41b311:	cld    
  41b312:	repz and BYTE PTR [edx],dl
  41b315:	dec    ebx
  41b316:	sub    edi,DWORD PTR [edi-0x1d8b3c8]
  41b31c:	jno    0x41b323
  41b31e:	pop    edi
  41b31f:	popa   
  41b320:	jle    0x41b354
  41b322:	pushf  
  41b323:	ins    DWORD PTR es:[edi],dx
  41b324:	enter  0x4330,0xdb
  41b328:	cld    
  41b329:	mov    ds,edi
  41b32b:	jl     0x41b302
  41b32d:	cmp    BYTE PTR [ebx-0x32054dc8],bh
  41b333:	gs jecxz 0x41b303
  41b336:	jo     0x41b330
  41b338:	or     DWORD PTR [ecx+0x2e],0xffffffdc
  41b33c:	cmp    ebp,DWORD PTR [edx-0x37d25578]
  41b342:	stos   DWORD PTR es:[edi],eax
  41b343:	clc    
  41b344:	sahf   
  41b345:	(bad)
  41b349:	push   ds
  41b34a:	inc    edx
  41b34b:	test   DWORD PTR [eax],ebx
  41b34d:	or     al,0x61
  41b34f:	jnp    0x41b33e
  41b351:	nop
  41b352:	fisttp WORD PTR [esi+0x6f]
  41b355:	mov    bh,0x46
  41b357:	hlt    
  41b358:	xchg   edi,eax
  41b359:	and    BYTE PTR [eax],ch
  41b35b:	dec    eax
  41b35c:	push   0x91c1ddac
  41b361:	mov    bh,0x1f
  41b363:	mov    esi,0xac6c40f8
  41b368:	cdq    
  41b369:	xchg   DWORD PTR [ecx+0x5008756f],ebx
  41b36f:	aam    0x61
  41b371:	repz pop edx
  41b373:	sbb    DWORD PTR [esi],ebx
  41b375:	adc    ebp,DWORD PTR [edi]
  41b377:	lea    esp,[ebx+0x13fa92de]
  41b37d:	xor    bh,BYTE PTR [esi-0x7e]
  41b380:	jb     0x41b3a7
  41b382:	call   FWORD PTR [eax]
  41b384:	or     bh,BYTE PTR [ecx-0x44]
  41b387:	das    
  41b388:	cmp    BYTE PTR [esi-0x12b4dc4e],ah
  41b38e:	arpl   dx,di
  41b390:	pop    ss
  41b391:	xor    BYTE PTR [ecx+0x1995120],dl
  41b397:	ins    DWORD PTR es:[edi],dx
  41b398:	(bad)  
  41b399:	sbb    ch,BYTE PTR [edx+edx*2]
  41b39c:	test   DWORD PTR ss:[ecx+ebp*4+0x14],edi
  41b3a1:	push   ecx
  41b3a2:	into   
  41b3a3:	mov    edi,0x9ab5f753
  41b3a8:	call   0xe2797033
  41b3ad:	inc    ebp
  41b3ae:	push   ss
  41b3af:	mov    ecx,0x2d4650bf
  41b3b4:	cdq    
  41b3b5:	enter  0x6feb,0x25
  41b3b9:	jmp    0xc88f:0xaa0afa8f
  41b3c0:	mov    ah,0x22
  41b3c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3c3:	adc    ebx,DWORD PTR [ebx-0x6c7041e7]
  41b3c9:	jo     0x41b37e
  41b3cb:	jne    0x41b3b6
  41b3cd:	cmp    eax,ebp
  41b3cf:	bound  esp,QWORD PTR [edi-0x67]
  41b3d2:	or     eax,0x90a23639
  41b3d7:	syscall 
  41b3d9:	or     al,ah
  41b3db:	mov    edx,0x23323e9a
  41b3e0:	fcom   DWORD PTR [eax-0x5de7274d]
  41b3e6:	add    dl,bl
  41b3e8:	jb     0x41b45c
  41b3ea:	lahf   
  41b3eb:	adc    al,0xfb
  41b3ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3ee:	paddsb mm4,mm7
  41b3f1:	mov    BYTE PTR [ecx-0x3],bl
  41b3f4:	and    bh,dl
  41b3f6:	or     BYTE PTR [edi],ah
  41b3f8:	mov    esi,0xca2ab978
  41b3fd:	xchg   ebp,eax
  41b3fe:	cmp    BYTE PTR [edx],cl
  41b400:	mov    eax,ds:0xac01c321
  41b405:	pushf  
  41b406:	cmp    BYTE PTR [edi+esi*4],dl
  41b409:	add    eax,0x766ace61
  41b40e:	add    eax,0x2205d16b
  41b413:	xor    eax,ebp
  41b415:	mov    edi,DWORD PTR [edx]
  41b417:	pop    ecx
  41b418:	in     eax,0xd5
  41b41a:	and    BYTE PTR [ebp+0x40],bl
  41b41d:	adc    BYTE PTR [edi],0x5d
  41b420:	push   esp
  41b421:	outs   dx,DWORD PTR ds:[esi]
  41b422:	mov    ebx,DWORD PTR [eax-0x53]
  41b425:	xchg   ebp,eax
  41b426:	sti    
  41b427:	out    0x4e,al
  41b429:	xchg   DWORD PTR [esi-0x2ef89e43],ebp
  41b42f:	sub    BYTE PTR [ebx+0x24],bl
  41b432:	push   esp
  41b433:	leave  
  41b434:	js     0x41b3e8
  41b436:	sub    al,0x9f
  41b438:	mov    eax,0xe0ddda65
  41b43d:	push   eax
  41b43e:	rol    ecx,1
  41b440:	and    al,0xef
  41b442:	jo     0x41b4c0
  41b444:	stos   DWORD PTR es:[edi],eax
  41b445:	rcr    DWORD PTR [eax],cl
  41b447:	push   ds
  41b448:	and    al,0xd9
  41b44a:	test   eax,edx
  41b44c:	stos   BYTE PTR es:[edi],al
  41b44d:	iret   
  41b44e:	gs ss pop esi
  41b451:	sbb    BYTE PTR [ecx-0x4],ah
  41b454:	mov    eax,0x12f6b964
  41b459:	lock push ecx
  41b45b:	je     0x41b4c9
  41b45d:	fwait
  41b45e:	hlt    
  41b45f:	add    al,0xf3
  41b461:	sub    al,0x95
  41b463:	test   BYTE PTR [ebp+ecx*1+0x6bdb8101],cl
  41b46a:	pushf  
  41b46b:	or     BYTE PTR [esi+0x7],al
  41b46e:	shl    BYTE PTR [eax],1
  41b470:	pop    ebx
  41b471:	retf   0xd90c
  41b474:	pusha  
  41b475:	cmp    al,0x61
  41b477:	xchg   edi,ebp
  41b479:	repnz repz sbb al,0x1c
  41b47d:	out    dx,al
  41b47e:	push   0x5ea68c80
  41b483:	fwait
  41b484:	pushf  
  41b485:	test   BYTE PTR [edx-0x36796909],dl
  41b48b:	shl    ecx,1
  41b48d:	jne    0x41b4bb
  41b48f:	mov    bl,0x66
  41b491:	lods   eax,DWORD PTR ds:[esi]
  41b492:	shl    BYTE PTR [edx+0x5acbdecc],1
  41b498:	fild   DWORD PTR [eax-0x57fc1e10]
  41b49e:	push   esp
  41b49f:	sub    BYTE PTR [ebx],dl
  41b4a1:	outs   dx,DWORD PTR ds:[esi]
  41b4a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4a3:	sub    edx,esi
  41b4a5:	jne    0x41b459
  41b4a7:	(bad)  
  41b4a8:	sbb    al,0x15
  41b4aa:	push   edi
  41b4ab:	in     eax,dx
  41b4ac:	int    0x7a
  41b4ae:	std    
  41b4af:	xlat   BYTE PTR ds:[ebx]
  41b4b0:	std    
  41b4b1:	cwde   
  41b4b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4b3:	cmc    
  41b4b4:	mov    ebp,0x1c068a5d
  41b4b9:	pop    esp
  41b4ba:	mov    ds:0xe5f92401,eax
  41b4bf:	mov    edi,DWORD PTR [eax+esi*8]
  41b4c2:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4c4:	xor    esp,DWORD PTR [eax]
  41b4c6:	xchg   edi,eax
  41b4c7:	je     0x41b50b
  41b4c9:	inc    eax
  41b4ca:	sbb    bh,BYTE PTR [eax]
  41b4cc:	jmp    0x41b4aa
  41b4ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4cf:	sbb    DWORD PTR ds:0xa0762667,ebx
  41b4d5:	dec    eax
  41b4d6:	out    0x32,eax
  41b4d8:	fsub   DWORD PTR [edx+0x199eeab2]
  41b4de:	add    al,0x57
  41b4e0:	jns    0x41b495
  41b4e2:	push   0x8c049073
  41b4e7:	push   edi
  41b4e8:	imul   ebp,DWORD PTR cs:[eax+0x78],0xb4a65b23
  41b4f0:	or     cl,BYTE PTR [esi+0x13]
  41b4f3:	push   0x74a77b77
  41b4f8:	loop   0x41b483
  41b4fa:	pusha  
  41b4fb:	sub    eax,0x9b8298ef
  41b500:	xchg   ebx,eax
  41b501:	(bad)  
  41b502:	imul   esp,DWORD PTR [ebp-0x6e935a32],0xc34b6441
  41b50c:	aam    0x13
  41b50e:	push   cs
  41b50f:	arpl   WORD PTR [edx+0x50],di
  41b512:	inc    esi
  41b513:	jge    0x41b56d
  41b515:	outs   dx,DWORD PTR ds:[esi]
  41b516:	push   edx
  41b517:	or     DWORD PTR [edx-0x21],edx
  41b51a:	mov    edx,0x489058f8
  41b51f:	or     edi,ecx
  41b521:	test   eax,0x4e7cdf6a
  41b526:	xchg   ecx,eax
  41b527:	and    edx,edx
  41b529:	lods   al,BYTE PTR ds:[esi]
  41b52a:	dec    ebx
  41b52b:	adc    dl,BYTE PTR [ebx-0x32]
  41b52e:	es jle 0x41b5a4
  41b531:	cli    
  41b532:	push   ds
  41b533:	adc    al,0x11
  41b535:	nop    DWORD PTR [edx-0x768ee8e6]
  41b53c:	and    al,0x39
  41b53e:	jp     0x41b53f
  41b540:	or     ebx,DWORD PTR [edx-0x3a]
  41b543:	sahf   
  41b544:	sub    al,0x16
  41b546:	ret    0xa43
  41b549:	ror    BYTE PTR [esi],cl
  41b54b:	mov    al,ds:0x8cc5b549
  41b550:	lds    esi,FWORD PTR [ecx]
  41b552:	mov    DWORD PTR [ebx+0x2a],edi
  41b555:	pop    ebp
  41b556:	inc    ecx
  41b557:	push   ss
  41b558:	ret    
  41b559:	(bad)
  41b55c:	ss dec eax
  41b55e:	ins    DWORD PTR es:[edi],dx
  41b55f:	shr    DWORD PTR [ebx+0x5],1
  41b562:	adc    ah,BYTE PTR [eax+ecx*1+0x36c54ee7]
  41b569:	stos   DWORD PTR es:[edi],eax
  41b56a:	sub    BYTE PTR [esi-0x20],dh
  41b56d:	or     edx,edi
  41b56f:	leave  
  41b570:	popa   
  41b571:	test   BYTE PTR es:[esi-0x34],bl
  41b575:	mov    ds:0x20b34720,eax
  41b57a:	dec    esp
  41b57b:	jmp    0x41b5b6
  41b57d:	pop    eax
  41b57e:	imul   esp,edi,0x53
  41b581:	pushf  
  41b582:	xchg   esi,eax
  41b583:	push   es
  41b584:	test   DWORD PTR [ebp-0x41],ebp
  41b587:	pop    ds
  41b588:	jb     0x41b523
  41b58a:	neg    BYTE PTR [esi+0x16595f47]
  41b590:	dec    esp
  41b591:	cld    
  41b592:	mul    DWORD PTR [edi]
  41b594:	sub    BYTE PTR [edx+0x3ee9b864],bl
  41b59a:	lds    edi,FWORD PTR [ebx-0x69]
  41b59d:	mov    al,0xac
  41b59f:	mov    dl,0x1f
  41b5a1:	sbb    esi,DWORD PTR [ebx-0x34]
  41b5a4:	sub    DWORD PTR [ebp+0x77eabf26],ebx
  41b5aa:	inc    esi
  41b5ab:	jmp    0xfd980159
  41b5b0:	sub    al,ch
  41b5b2:	dec    ecx
  41b5b3:	iret   
  41b5b4:	mul    BYTE PTR [ebp+0x37]
  41b5b7:	inc    edx
  41b5b8:	mov    dh,BYTE PTR [eax+0x7ff1c20c]
  41b5be:	dec    ebx
  41b5bf:	out    0xe2,al
  41b5c1:	inc    esi
  41b5c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5c3:	(bad)  
  41b5c4:	neg    bl
  41b5c6:	aas    
  41b5c7:	out    0xf6,eax
  41b5c9:	add    edx,DWORD PTR [edi-0x6f]
  41b5cc:	xor    eax,0x530151d9
  41b5d1:	cwde   
  41b5d2:	mov    ds:0xe7e76447,al
  41b5d7:	mov    ebp,0x22280c2e
  41b5dc:	lahf   
  41b5dd:	adc    eax,0x1639de37
  41b5e2:	mov    esi,0xa72f3b13
  41b5e7:	dec    edx
  41b5e8:	ret    0xab7a
  41b5eb:	pop    ecx
  41b5ec:	fcmove st,st(5)
  41b5ee:	add    eax,0x65fd6ec0
  41b5f3:	jns    0x41b63a
  41b5f5:	jbe    0x41b611
  41b5f7:	mov    esi,0xbf59bd33
  41b5fc:	mov    eax,ds:0xf761eafa
  41b601:	cmp    BYTE PTR ds:0xc6bd6eb4,dh
  41b607:	sbb    eax,0xe3289d16
  41b60c:	inc    ecx
  41b60d:	shl    al,cl
  41b60f:	mov    bl,al
  41b611:	test   DWORD PTR [edx+eax*4],edi
  41b614:	or     eax,0x696c77bd
  41b619:	stos   BYTE PTR es:[edi],al
  41b61a:	jno    0x41b5b4
  41b61c:	push   ebx
  41b61d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b61e:	mov    al,0x22
  41b620:	ds adc eax,0x74758147
  41b626:	sub    eax,ebp
  41b628:	or     eax,0xe423e6cc
  41b62d:	cmp    dl,BYTE PTR [edi+ecx*1-0x4d5b78f6]
  41b634:	cmp    bh,BYTE PTR [eax+0x31]
  41b637:	fadd   QWORD PTR fs:[edi+0x5]
  41b63b:	mov    al,0xf7
  41b63d:	pop    edx
  41b63e:	pop    ebp
  41b63f:	mov    ds:0x2e52a64a,eax
  41b644:	xor    al,0xcd
  41b646:	loop   0x41b5ef
  41b648:	cwde   
  41b649:	fcomp  DWORD PTR [ebx-0x152d5602]
  41b64f:	fist   WORD PTR [esi-0x2b]
  41b652:	lahf   
  41b653:	xchg   esp,eax
  41b654:	pop    esi
  41b655:	out    dx,al
  41b656:	inc    esi
  41b657:	out    dx,eax
  41b658:	xchg   edx,eax
  41b659:	push   esi
  41b65a:	sub    ebx,DWORD PTR [ebp+0x1e]
  41b65d:	dec    ebx
  41b65e:	loop   0x41b64c
  41b660:	and    dl,0xb7
  41b663:	push   edi
  41b664:	sbb    esp,DWORD PTR [edi+0xeb23def]
  41b66a:	stos   BYTE PTR es:[edi],al
  41b66b:	jl     0x41b646
  41b66d:	cs popf 
  41b66f:	imul   esp,esi,0x9c24b6dc
  41b675:	nop
  41b676:	sbb    DWORD PTR [edi+ecx*4+0x1e],ebx
  41b67a:	xor    BYTE PTR [ecx-0x3f],cl
  41b67d:	aaa    
  41b67e:	stos   BYTE PTR es:[edi],al
  41b67f:	adc    al,0xdd
  41b681:	ret    
  41b682:	(bad)  
  41b683:	lea    ebx,[edi+0x64]
  41b686:	and    DWORD PTR [esi],0x40
  41b689:	cs out dx,al
  41b68b:	jmp    0x7feb2c59
  41b690:	in     al,0xcc
  41b692:	cmovns edi,DWORD PTR [esi-0x53f9c097]
  41b699:	sbb    DWORD PTR ds:[ebp+ecx*4+0x7de7e0d2],ecx
  41b6a1:	aaa    
  41b6a2:	popa   
  41b6a3:	outs   dx,DWORD PTR ds:[esi]
  41b6a4:	jl     0x41b6d9
  41b6a6:	push   0xffffff93
  41b6a8:	and    BYTE PTR [esi],0xe
  41b6ab:	mov    ah,al
  41b6ad:	jl     0x41b70c
  41b6af:	cld    
  41b6b0:	outs   dx,DWORD PTR ds:[esi]
  41b6b1:	xchg   ebp,eax
  41b6b2:	imul   ebp,ebp,0xda05ccff
  41b6b8:	mov    ecx,0xbb393ab1
  41b6bd:	mov    bh,0x8
  41b6bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6c0:	popf   
  41b6c1:	cmc    
  41b6c2:	adc    ebp,esi
  41b6c4:	(bad)  [ebx+edx*1+0x20323d48]
  41b6cb:	retf   
  41b6cc:	or     bl,BYTE PTR [ebp-0x73ad15df]
  41b6d2:	imul   BYTE PTR [ebp+0x39]
  41b6d5:	xor    cl,BYTE PTR [ecx]
  41b6d7:	outs   dx,BYTE PTR ds:[esi]
  41b6d8:	adc    BYTE PTR [eax-0x72595d51],dh
  41b6de:	stos   BYTE PTR es:[edi],al
  41b6df:	cmp    dh,al
  41b6e1:	out    dx,al
  41b6e2:	and    BYTE PTR [ecx-0x8],ch
  41b6e5:	pop    ebp
  41b6e6:	push   edi
  41b6e7:	xchg   edi,eax
  41b6e8:	loope  0x41b6d4
  41b6ea:	int3   
  41b6eb:	jbe    0x41b691
  41b6ed:	imul   ebx,DWORD PTR [eax],0x5fd459a2
  41b6f3:	fdivr  QWORD PTR [edi]
  41b6f5:	push   ebx
  41b6f6:	mov    cl,0x5e
  41b6f8:	es loope 0x41b6f4
  41b6fb:	jl     0x41b74f
  41b6fd:	test   edi,0xc17bffb2
  41b703:	aam    0x12
  41b705:	loope  0x41b6d8
  41b707:	inc    ebx
  41b708:	mov    ds:0x2727f190,al
  41b70d:	in     eax,0x82
  41b70f:	and    ebx,edx
  41b711:	inc    ebx
  41b712:	inc    ebx
  41b713:	nop
  41b714:	mov    DWORD PTR [edx+ebp*8],ecx
  41b717:	jle    0x41b69b
  41b719:	mov    bh,0x7a
  41b71b:	loop   0x41b754
  41b71d:	popf   
  41b71e:	fsubr  DWORD PTR [edx+0x5e213bf5]
  41b724:	mov    WORD PTR [ecx],cs
  41b726:	pop    es
  41b727:	ret    
  41b728:	dec    eax
  41b729:	in     al,0xcc
  41b72b:	call   0x793e00b4
  41b730:	data16 adc ah,dh
  41b733:	lock inc esi
  41b735:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b736:	shr    eax,1
  41b738:	pop    es
  41b739:	popf   
  41b73a:	test   ebp,edi
  41b73c:	mov    ecx,0x3b684a0f
  41b741:	xor    DWORD PTR [eax+0xea3cf95],edx
  41b747:	xchg   esp,eax
  41b748:	test   al,0xca
  41b74a:	fild   QWORD PTR [ebp-0x613c24db]
  41b750:	cli    
  41b751:	adc    ebp,DWORD PTR [ecx]
  41b753:	cmp    DWORD PTR [ecx],edx
  41b755:	repz or eax,DWORD PTR [ebp-0x46]
  41b759:	jae    0x41b7c4
  41b75b:	hlt    
  41b75c:	and    al,0xd9
  41b75e:	inc    ebx
  41b75f:	aad    0x3e
  41b761:	hlt    
  41b762:	stc    
  41b763:	xchg   edi,eax
  41b764:	pop    edx
  41b765:	xchg   ebx,eax
  41b766:	and    BYTE PTR [eax+0x67],ch
  41b769:	mov    WORD PTR [edx],gs
  41b76b:	adc    dh,BYTE PTR [eax+edi*1]
  41b76e:	cli    
  41b76f:	ficomp WORD PTR [edx+0x7360c91b]
  41b775:	hlt    
  41b776:	cdq    
  41b777:	iret   
  41b778:	jne    0x41b7cf
  41b77a:	mov    ebx,0xd0a443b6
  41b77f:	mov    edx,DWORD PTR [ecx+ebp*1]
  41b782:	int3   
  41b783:	push   edi
  41b784:	pop    eax
  41b785:	gs pop edx
  41b787:	push   ebp
  41b788:	xor    BYTE PTR [edi],ah
  41b78a:	push   eax
  41b78b:	dec    eax
  41b78c:	push   edx
  41b78d:	out    0x73,al
  41b78f:	in     eax,dx
  41b790:	pop    eax
  41b791:	ins    DWORD PTR es:[edi],dx
  41b792:	add    BYTE PTR [esi+0x2c],bl
  41b795:	lock push ebx
  41b797:	sti    
  41b798:	aam    0xc4
  41b79a:	mov    ebp,0x66ef98d0
  41b79f:	hlt    
  41b7a0:	push   ecx
  41b7a1:	dec    edi
  41b7a2:	inc    eax
  41b7a3:	push   ebp
  41b7a4:	sub    DWORD PTR [ebx],ecx
  41b7a6:	mov    ebp,0x473ee5da
  41b7ab:	xchg   ebp,eax
  41b7ac:	aad    0xfb
  41b7ae:	mov    BYTE PTR [eax-0x2e],0x91
  41b7b2:	push   eax
  41b7b3:	and    al,0xd7
  41b7b5:	mov    ds:0x15154d19,al
  41b7ba:	lahf   
  41b7bb:	loope  0x41b805
  41b7bd:	aad    0x82
  41b7bf:	ds loopne 0x41b790
  41b7c2:	xor    BYTE PTR [ebx+0x2b],bh
  41b7c5:	sbb    ecx,eax
  41b7c7:	mov    ecx,0xcad89ec5
  41b7cc:	pop    ebp
  41b7cd:	loope  0x41b75c
  41b7cf:	mov    dh,0x93
  41b7d1:	out    dx,eax
  41b7d2:	push   ds
  41b7d3:	jl     0x41b7ca
  41b7d5:	add    edx,esp
  41b7d7:	add    eax,0xa891ad3c
  41b7dc:	int    0xaa
  41b7de:	add    al,0xb9
  41b7e0:	sbb    DWORD PTR [eax-0x2211b6a7],0x7f4899f
  41b7ea:	retf   
  41b7eb:	cmp    ch,BYTE PTR [edx-0x48]
  41b7ee:	scas   al,BYTE PTR es:[edi]
  41b7ef:	mov    gs,WORD PTR [ebx]
  41b7f1:	sub    ebx,DWORD PTR [esi]
  41b7f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7f4:	lods   ax,WORD PTR ds:[esi]
  41b7f6:	inc    ecx
  41b7f7:	inc    edx
  41b7f8:	mov    bh,0x2b
  41b7fa:	mov    esi,0x68ef9dce
  41b7ff:	(bad)  [edx-0x5699123a]
  41b805:	add    DWORD PTR [ebx*4-0x4574eafc],eax
  41b80c:	jo     0x41b883
  41b80e:	sub    ebx,DWORD PTR [eax]
  41b810:	and    eax,0xc1184558
  41b815:	fstp   DWORD PTR [edi]
  41b817:	div    ch
  41b819:	jno    0x41b79f
  41b81b:	call   0x3bdb:0x95d9e9df
  41b822:	sar    DWORD PTR [esi-0x739ee404],1
  41b828:	fiadd  DWORD PTR [edi-0x534d01d1]
  41b82e:	cmp    ecx,DWORD PTR gs:[eax+0x6c26cfc5]
  41b835:	sub    eax,0x13e27ffd
  41b83a:	sbb    DWORD PTR [edx],0xa
  41b83d:	cmp    eax,DWORD PTR [eax]
  41b83f:	mov    cl,0xb6
  41b841:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b842:	fucomp st(2)
  41b844:	inc    esi
  41b845:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b846:	loope  0x41b839
  41b848:	rcr    BYTE PTR [ebx-0x647b11aa],1
  41b84e:	repnz xchg ebx,eax
  41b850:	mov    ah,0xfb
  41b852:	dec    eax
  41b853:	les    edx,FWORD PTR [edi]
  41b855:	add    BYTE PTR ds:0x8c57364,dh
  41b85b:	inc    edi
  41b85c:	sub    ebp,DWORD PTR [ebx+0x6e]
  41b85f:	sbb    al,0xd1
  41b861:	or     eax,0xc7bea102
  41b866:	out    0xf2,al
  41b868:	mov    al,ds:0xddbaf0fe
  41b86d:	dec    ebp
  41b86e:	das    
  41b86f:	out    dx,eax
  41b870:	nop
  41b871:	and    DWORD PTR [ecx+esi*8-0x7b],edx
  41b875:	jnp    0x41b84b
  41b877:	jecxz  0x41b883
  41b879:	mov    edx,gs
  41b87b:	sahf   
  41b87c:	cdq    
  41b87d:	jmp    0x84d7:0xb2713d6a
  41b884:	fdivr  QWORD PTR ds:0xb2d25bab
  41b88a:	scas   al,BYTE PTR es:[edi]
  41b88b:	sub    eax,0xbc7175b2
  41b890:	leave  
  41b891:	mov    gs,WORD PTR [ebp-0x56430d6d]
  41b897:	and    al,0xdc
  41b899:	add    al,0xa
  41b89b:	dec    edi
  41b89c:	lock mov ebp,0xd5387145
  41b8a2:	scas   al,BYTE PTR es:[edi]
  41b8a3:	push   0xc
  41b8a5:	clc    
  41b8a6:	enter  0xf71d,0x45
  41b8aa:	and    BYTE PTR [ebp-0x9],bh
  41b8ad:	adc    al,0x25
  41b8af:	daa    
  41b8b0:	mov    esp,0xc1e6aa9a
  41b8b5:	das    
  41b8b6:	pushf  
  41b8b7:	inc    edi
  41b8b8:	outs   dx,BYTE PTR ds:[esi]
  41b8b9:	pop    ds
  41b8ba:	(bad)  
  41b8bb:	aam    0xe4
  41b8bd:	scas   eax,DWORD PTR es:[edi]
  41b8be:	popa   
  41b8bf:	rcl    eax,1
  41b8c1:	adc    eax,0x38c23868
  41b8c6:	jae    0x41b914
  41b8c8:	mov    DWORD PTR ds:0x8e738c12,ecx
  41b8ce:	mov    al,0x28
  41b8d0:	inc    DWORD PTR [edi-0x5356efc9]
  41b8d6:	addr16 ds adc eax,0xf78109a7
  41b8dd:	stos   DWORD PTR es:[edi],eax
  41b8de:	in     eax,0xa8
  41b8e0:	add    eax,0xdc239259
  41b8e5:	dec    edi
  41b8e6:	push   es
  41b8e7:	ss popf 
  41b8e9:	sbb    dh,dl
  41b8eb:	aam    0x73
  41b8ed:	out    dx,eax
  41b8ee:	mov    eax,ds:0x1aedad5
  41b8f3:	and    DWORD PTR ds:0x5aa9504b,0x38
  41b8fa:	aam    0xe8
  41b8fc:	sbb    bh,BYTE PTR [edi+0x5ffd43b4]
  41b902:	das    
  41b903:	leave  
  41b904:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b905:	push   ecx
  41b906:	sahf   
  41b907:	xor    al,0xaf
  41b909:	and    eax,eax
  41b90b:	lea    esi,[ebx]
  41b90d:	stos   BYTE PTR es:[edi],al
  41b90e:	sub    eax,0x40457c1
  41b913:	add    DWORD PTR [esi],esi
  41b915:	hlt    
  41b916:	dec    ebx
  41b917:	(bad)  
  41b918:	fndisi(8087 only) 
  41b91a:	(bad)  
  41b91b:	jnp    0x41b975
  41b91d:	ins    DWORD PTR es:[edi],dx
  41b91e:	xchg   esp,eax
  41b91f:	jo     0x41b8d7
  41b921:	cmp    eax,0x391b7dff
  41b926:	icebp  
  41b927:	and    eax,0x5d4cc6a9
  41b92c:	fnstsw WORD PTR [ebp-0x7f]
  41b92f:	and    dh,BYTE PTR [edi+0x41]
  41b932:	xlat   BYTE PTR ds:[ebx]
  41b933:	xchg   DWORD PTR [esi-0x7ee30005],edi
  41b939:	xchg   eax,ebx
  41b93b:	ins    DWORD PTR es:[edi],dx
  41b93c:	out    dx,eax
  41b93d:	(bad)  
  41b93f:	ret    
  41b940:	mov    al,ds:0xc0bd0a5f
  41b945:	sub    DWORD PTR [edi+0x47],ebp
  41b948:	push   es
  41b949:	sar    DWORD PTR [edx+0x6b],cl
  41b94c:	or     esi,DWORD PTR [ecx+edx*2+0x11]
  41b950:	or     eax,0xbfbfe260
  41b955:	xor    cl,BYTE PTR [esi-0x43]
  41b958:	jg     0x41b9d4
  41b95a:	jg     0x41b989
  41b95c:	int    0x7f
  41b95e:	leave  
  41b95f:	mov    edi,0xc503228c
  41b964:	inc    eax
  41b965:	adc    bh,BYTE PTR [ecx+0x61505a25]
  41b96b:	dec    esi
  41b96c:	mov    ch,0xdf
  41b96e:	push   es
  41b96f:	std    
  41b970:	sub    BYTE PTR [ecx+0x68],ah
  41b973:	dec    ebx
  41b974:	push   edi
  41b975:	fnstenv [esi-0x66]
  41b978:	cmc    
  41b979:	outs   dx,BYTE PTR ds:[esi]
  41b97a:	imul   esi,DWORD PTR [esi-0x630fd477],0xffffffd1
  41b981:	xchg   esp,eax
  41b982:	ds dec ecx
  41b984:	hlt    
  41b985:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b986:	jmp    0x41b991
  41b988:	fadd   st(1),st
  41b98a:	loope  0x41b9b2
  41b98c:	cmp    esi,esi
  41b98e:	dec    esp
  41b98f:	not    DWORD PTR [edx-0x799964c5]
  41b995:	adc    bh,BYTE PTR [eax+0x6d]
  41b998:	xor    al,BYTE PTR [esi+0x40]
  41b99b:	icebp  
  41b99c:	shl    esp,cl
  41b99e:	mov    ah,al
  41b9a0:	in     eax,0x2a
  41b9a2:	and    al,ch
  41b9a4:	mov    al,dh
  41b9a6:	cmp    eax,0xe9673b47
  41b9ab:	mov    ecx,0x385b6076
  41b9b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9b1:	int3   
  41b9b2:	push   cs
  41b9b3:	cmp    al,0x80
  41b9b5:	add    DWORD PTR [esi],0xeeea9e2c
  41b9bb:	cdq    
  41b9bc:	lods   eax,DWORD PTR ds:[esi]
  41b9bd:	sub    eax,0xac7132b9
  41b9c2:	shl    BYTE PTR [ecx],1
  41b9c4:	pop    edi
  41b9c5:	push   esi
  41b9c6:	push   edi
  41b9c8:	loopne 0x41b9b1
  41b9ca:	pusha  
  41b9cb:	stos   BYTE PTR es:[edi],al
  41b9cc:	and    cl,BYTE PTR [esi-0x7c]
  41b9cf:	pop    edi
  41b9d0:	push   0xd
  41b9d2:	push   edi
  41b9d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9d4:	in     al,dx
  41b9d5:	shl    esi,1
  41b9d7:	cmp    ebx,DWORD PTR [ebp+0x36a8359c]
  41b9dd:	pop    ebx
  41b9de:	pop    ecx
  41b9df:	ret    0xb109
  41b9e2:	mov    eax,0xe09cbaa8
  41b9e7:	mov    ds:0x92d546be,al
  41b9ec:	dec    esi
  41b9ed:	(bad)  
  41b9ee:	jge    0x41b9fe
  41b9f0:	icebp  
  41b9f1:	scas   eax,DWORD PTR es:[edi]
  41b9f2:	fadd   st,st(0)
  41b9f4:	clc    
  41b9f5:	and    DWORD PTR [ebx+0x77b57ed9],ebx
  41b9fb:	cmp    eax,0x32fd39b2
  41ba00:	cmp    ch,BYTE PTR ss:0x55c7a75a
  41ba07:	or     BYTE PTR [edx+0x543a6c27],cl
  41ba0d:	outs   dx,DWORD PTR ds:[esi]
  41ba0e:	idiv   bh
  41ba10:	mov    al,0x7c
  41ba12:	inc    edi
  41ba13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba14:	mov    ebx,ebp
  41ba16:	fisubr DWORD PTR [edx]
  41ba18:	icebp  
  41ba19:	aam    0x8a
  41ba1b:	dec    ebp
  41ba1c:	addr16 stc 
  41ba1e:	pop    es
  41ba1f:	gs push ebp
  41ba21:	and    al,0x38
  41ba23:	cmc    
  41ba24:	mov    dl,0x5b
  41ba26:	loope  0x41ba75
  41ba28:	adc    dl,BYTE PTR [ecx]
  41ba2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba2b:	int3   
  41ba2c:	pop    esi
  41ba2d:	push   ecx
  41ba2e:	mov    dl,0xe7
  41ba30:	rol    ah,1
  41ba32:	push   ecx
  41ba33:	pushf  
  41ba34:	and    BYTE PTR [esi],ch
  41ba36:	xor    ebx,DWORD PTR [esi-0x60d284d8]
  41ba3c:	push   0xe71a3af5
  41ba41:	pop    esp
  41ba42:	sub    eax,0x22e21bef
  41ba47:	and    ah,BYTE PTR [esi]
  41ba49:	cmp    BYTE PTR [eax+0x3a],ch
  41ba4c:	mov    esi,0x83bc0fbf
  41ba51:	xor    cl,BYTE PTR [edx]
  41ba53:	test   BYTE PTR [eax+0x960b6d9],ch
  41ba59:	jmp    0x75b0:0xe4d3b0d3
  41ba60:	mov    ecx,0xa4aa6744
  41ba65:	ror    BYTE PTR [ebx-0xb],0xf2
  41ba69:	mov    bl,0x1
  41ba6b:	push   ss
  41ba6c:	call   esp
  41ba6e:	mov    dl,0xba
  41ba70:	adc    eax,0x2cbc3c12
  41ba75:	mov    bl,0xa7
  41ba77:	add    DWORD PTR [ebp+0x3b],eax
  41ba7a:	lock stc 
  41ba7c:	mov    dl,0x4b
  41ba7e:	test   eax,0x1710ed7c
  41ba83:	in     al,0x60
  41ba85:	mov    DWORD PTR [esi],edi
  41ba87:	leave  
  41ba88:	nop
  41ba89:	pop    es
  41ba8a:	jl     0x41bac5
  41ba8c:	jle    0x41ba37
  41ba8e:	xor    eax,0x23782011
  41ba93:	add    DWORD PTR [esi+0x2fd7aa9b],edx
  41ba99:	dec    edx
  41ba9a:	call   0xf1237b08
  41ba9f:	out    0xc6,eax
  41baa1:	aad    0x15
  41baa3:	repnz xchg esi,eax
  41baa5:	mov    edx,0x6e7e5714
  41baaa:	stos   DWORD PTR es:[edi],eax
  41baab:	push   0x6a
  41baad:	int3   
  41baae:	js     0x41ba5f
  41bab0:	es push ss
  41bab2:	xchg   ecx,eax
  41bab3:	xchg   esp,esp
  41bab5:	lods   al,BYTE PTR ds:[esi]
  41bab6:	or     BYTE PTR [si+0x7d3b],bh
  41babb:	mov    ds:0xd6594d6e,eax
  41bac0:	cmp    al,0xee
  41bac2:	cdq    
  41bac3:	sub    al,0x42
  41bac5:	jge    0x41baf9
  41bac7:	cmp    edi,DWORD PTR [edx+0x6ff05f64]
  41bacd:	sbb    esi,ebx
  41bacf:	mov    edx,0x408b5aaf
  41bad4:	enter  0xd7b5,0xc1
  41bad8:	push   ebp
  41bad9:	aaa    
  41bada:	popa   
  41badb:	jle    0x41baa6
  41badd:	inc    esp
  41bade:	cdq    
  41badf:	fldenv [eax]
  41bae1:	fwait
  41bae2:	outs   dx,DWORD PTR ds:[esi]
  41bae3:	inc    edi
  41bae4:	cdq    
  41bae5:	rcl    BYTE PTR [esi+0x2c0d2e3d],1
  41baeb:	push   eax
  41baec:	aam    0xf
  41baee:	dec    ecx
  41baef:	scas   eax,DWORD PTR es:[edi]
  41baf0:	mov    ds:0xa2f99c44,eax
  41baf5:	cmp    eax,0x17b28b79
  41bafa:	inc    eax
  41bafb:	adc    BYTE PTR [ebx-0x45aefea],dl
  41bb01:	pop    edx
  41bb02:	aam    0x41
  41bb04:	jbe    0x41bb49
  41bb06:	ret    
  41bb07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb08:	mov    ah,0x48
  41bb0a:	pop    eax
  41bb0b:	fidiv  DWORD PTR [esi]
  41bb0d:	sbb    BYTE PTR [ecx+0x7c],cl
  41bb10:	sti    
  41bb11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb12:	inc    esi
  41bb13:	(bad)  
  41bb14:	aam    0x5b
  41bb16:	pop    eax
  41bb17:	mov    ch,0xf9
  41bb19:	add    ch,BYTE PTR [esi+0x51]
  41bb1c:	retf   
  41bb1d:	iret   
  41bb1e:	shl    edx,0x16
  41bb21:	test   DWORD PTR [ecx],esi
  41bb23:	scas   al,BYTE PTR es:[edi]
  41bb24:	jbe    0x41bab3
  41bb26:	pushf  
  41bb27:	ins    BYTE PTR es:[edi],dx
  41bb28:	daa    
  41bb29:	sbb    dh,bl
  41bb2b:	call   0x207f:0xdd1888ca
  41bb32:	mov    edx,DWORD PTR [edi+esi*4]
  41bb35:	xchg   edx,eax
  41bb36:	loop   0x41bb53
  41bb38:	icebp  
  41bb39:	jnp    0x41bb33
  41bb3b:	xchg   edi,eax
  41bb3c:	mov    cl,BYTE PTR [edi+eiz*1]
  41bb3f:	jb     0x41bb26
  41bb41:	mov    al,0xa7
  41bb43:	je     0x41bb4c
  41bb45:	popf   
  41bb46:	lds    edi,FWORD PTR [ebx-0x34490467]
  41bb4c:	stc    
  41bb4d:	mov    al,ds:0xd364b1f8
  41bb52:	xchg   esi,eax
  41bb53:	lods   eax,DWORD PTR ds:[esi]
  41bb54:	xchg   esp,ebx
  41bb56:	imul   ebp,ebx,0x77
  41bb59:	test   al,0xfc
  41bb5b:	adc    bl,al
  41bb5d:	sbb    eax,0x103b35ec
  41bb62:	jp     0x41bb4b
  41bb64:	xchg   ecx,eax
  41bb65:	je     0x41bba8
  41bb67:	fcmovnbe st,st(4)
  41bb69:	ret    
  41bb6a:	mov    dh,0x69
  41bb6c:	adc    ebp,esp
  41bb6e:	xor    bl,BYTE PTR [esi+ecx*1+0x1f]
  41bb72:	stc    
  41bb73:	inc    edi
  41bb74:	add    al,0xaa
  41bb76:	out    0x8f,eax
  41bb78:	lahf   
  41bb79:	and    BYTE PTR [edx+0x4b],al
  41bb7c:	mov    al,0x26
  41bb7e:	jne    0x41bbf8
  41bb80:	cli    
  41bb81:	ret    
  41bb82:	ss ins BYTE PTR es:[edi],dx
  41bb84:	lock xor eax,0x831366c0
  41bb8a:	mov    ebx,0x379acf65
  41bb8f:	mov    WORD PTR [ecx],es
  41bb91:	out    0x60,eax
  41bb93:	mov    dl,0xcd
  41bb95:	push   edi
  41bb96:	sub    DWORD PTR [bp+si+0x7474],0x30
  41bb9c:	mov    WORD PTR [esi-0x2f],cs
  41bb9f:	xor    al,0x54
  41bba1:	mov    edi,0x69904eaf
  41bba6:	scas   al,BYTE PTR es:[edi]
  41bba7:	ins    BYTE PTR es:[edi],dx
  41bba8:	das    
  41bba9:	xchg   esp,esp
  41bbab:	test   BYTE PTR [ebx],0xfb
  41bbae:	push   es
  41bbaf:	xchg   ecx,eax
  41bbb0:	or     esi,edi
  41bbb2:	jmp    0x41bbf3
  41bbb4:	add    eax,0x5a850bb7
  41bbb9:	mov    al,ds:0xfa7f06f3
  41bbbe:	lock outs dx,BYTE PTR ds:[esi]
  41bbc0:	jmp    0x41bb5e
  41bbc2:	mov    ah,0x22
  41bbc4:	ret    0xc217
  41bbc7:	mov    cl,0xc9
  41bbc9:	shr    BYTE PTR [ebx-0x44],cl
  41bbcc:	not    DWORD PTR [ecx-0x1a]
  41bbcf:	dec    ebx
  41bbd0:	inc    esi
  41bbd1:	dec    esi
  41bbd2:	ret    
  41bbd3:	jnp    0x41bbea
  41bbd5:	dec    esi
  41bbd6:	fwait
  41bbd7:	inc    edi
  41bbd8:	iret   
  41bbd9:	retf   0x834
  41bbdc:	push   esi
  41bbdd:	daa    
  41bbde:	bndldx bnd0,[eax-0x645526af]
  41bbe5:	mov    ah,0x25
  41bbe7:	rcl    DWORD PTR [eax-0x338ad842],cl
  41bbed:	mov    ds:0x310b91d3,eax
  41bbf2:	dec    edx
  41bbf3:	cli    
  41bbf4:	cmp    eax,0xdd5a3c
  41bbf9:	mov    al,ds:0xac6bf64e
  41bbfe:	fisubr DWORD PTR [ebp-0x19]
  41bc01:	lods   al,BYTE PTR ds:[esi]
  41bc02:	shl    DWORD PTR [edi-0xf453fa5],cl
  41bc08:	pop    es
  41bc09:	mov    edx,0x7865f385
  41bc0e:	fcom   DWORD PTR [esi-0x3c]
  41bc11:	arpl   bp,si
  41bc13:	pmulhw mm2,QWORD PTR [edx]
  41bc16:	test   eax,0xf7294e8
  41bc1b:	adc    DWORD PTR gs:[edx+0x3d270a44],ebx
  41bc22:	jne    0x41bc92
  41bc24:	enter  0xb1f7,0xa6
  41bc28:	loop   0x41bc2e
  41bc2a:	jae    0x41bc66
  41bc2c:	aad    0xfd
  41bc2e:	pusha  
  41bc2f:	sub    al,0xfb
  41bc31:	mov    dh,0x6f
  41bc33:	xor    BYTE PTR [eax-0x5c],bh
  41bc36:	dec    edx
  41bc37:	sub    cl,al
  41bc39:	jbe    0x41bbe7
  41bc3b:	fbld   TBYTE PTR [esi]
  41bc3d:	inc    eax
  41bc3e:	fcmovbe st,st(5)
  41bc40:	and    BYTE PTR [esi],ch
  41bc42:	or     al,0xf6
  41bc44:	mov    dl,0xcf
  41bc46:	test   DWORD PTR [ecx-0x26],ebx
  41bc49:	rol    al,1
  41bc4b:	jmp    0x490b:0xd9429b7e
  41bc52:	sub    bh,bl
  41bc54:	test   BYTE PTR [eax-0x78e9eaa7],0x40
  41bc5b:	frstor [edi-0x6af113ca]
  41bc61:	xchg   edx,eax
  41bc62:	cdq    
  41bc63:	je     0x41bc88
  41bc65:	pop    esp
  41bc66:	jg     0x41bc2c
  41bc68:	ja     0x41bc29
  41bc6a:	inc    esi
  41bc6b:	mov    BYTE PTR [ebp-0x56cc0653],ah
  41bc71:	mov    bh,0x17
  41bc73:	xchg   edi,eax
  41bc74:	lods   eax,DWORD PTR ds:[esi]
  41bc75:	loop   0x41bc77
  41bc77:	mov    ah,0x10
  41bc79:	mov    dl,0x6d
  41bc7b:	popa   
  41bc7c:	leave  
  41bc7d:	and    esi,DWORD PTR [edx]
  41bc7f:	popa   
  41bc80:	jmp    0x2bcce23f
  41bc85:	das    
  41bc86:	ffree  st(7)
  41bc88:	inc    esi
  41bc89:	inc    eax
  41bc8a:	out    0x8a,al
  41bc8c:	repnz lahf 
  41bc8e:	pusha  
  41bc8f:	cli    
  41bc90:	lahf   
  41bc91:	push   esi
  41bc92:	pop    es
  41bc93:	mov    bl,0x6f
  41bc95:	xchg   edx,eax
  41bc96:	in     eax,dx
  41bc97:	les    ecx,FWORD PTR [eax-0x16]
  41bc9a:	(bad)  
  41bc9b:	leave  
  41bc9c:	pop    eax
  41bc9d:	or     ecx,eax
  41bc9f:	push   esp
  41bca0:	dec    edi
  41bca1:	mov    ds:0xb8362969,al
  41bca6:	xor    eax,DWORD PTR [ebx]
  41bca8:	push   ebp
  41bca9:	rol    BYTE PTR [ecx],cl
  41bcab:	out    dx,al
  41bcac:	push   es
  41bcad:	jle    0x41bcc3
  41bcaf:	call   0xab0952a7
  41bcb4:	clc    
  41bcb5:	xor    eax,0xaa1fccfd
  41bcba:	shr    BYTE PTR [edx+ebp*4+0x4],cl
  41bcbe:	cld    
  41bcbf:	pop    es
  41bcc0:	imul   ecx,DWORD PTR [ebp+0x69aab3c2],0x42135092
  41bcca:	fdiv   QWORD PTR [esi+edx*8-0xc]
  41bcce:	sub    bl,0x80
  41bcd1:	fcom   DWORD PTR [edi+0x15]
  41bcd4:	retf   0x9e5c
  41bcd7:	pop    ecx
  41bcd8:	addr16 pop ecx
  41bcda:	xor    al,0x87
  41bcdc:	je     0x41bd1c
  41bcde:	cmp    dl,BYTE PTR [ebp-0x13]
  41bce1:	cwde   
  41bce2:	out    0x58,eax
  41bce4:	cli    
  41bce5:	inc    edx
  41bce6:	mov    ah,0xc0
  41bce8:	ret    0xa563
  41bceb:	pop    edx
  41bcec:	out    0x75,al
  41bcee:	or     BYTE PTR [ebp+0x602465bb],al
  41bcf4:	add    ch,BYTE PTR [eax-0x7da171da]
  41bcfa:	jg     0x41bc8a
  41bcfc:	jmp    0x41bd27
  41bcfe:	mov    edx,0x7ff043c9
  41bd03:	cmp    DWORD PTR [ebx+ebp*1+0x3a],esi
  41bd07:	cmp    edx,ebx
  41bd09:	mov    esi,0x2cd2685e
  41bd0e:	push   esi
  41bd0f:	retf   
  41bd10:	nop
  41bd11:	dec    eax
  41bd12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd13:	mov    fs,esi
  41bd15:	mov    BYTE PTR [ebx-0x48],cl
  41bd18:	mov    ah,0x90
  41bd1a:	repnz es stc 
  41bd1d:	stc    
  41bd1e:	add    ebp,DWORD PTR [ebp-0x6a]
  41bd21:	clc    
  41bd22:	in     al,dx
  41bd23:	push   esp
  41bd24:	mov    esp,ds
  41bd26:	cld    
  41bd27:	cs inc ebp
  41bd29:	push   eax
  41bd2a:	out    0x65,eax
  41bd2c:	dec    eax
  41bd2d:	es sbb DWORD PTR ss:[esi],edi
  41bd31:	lds    esp,FWORD PTR [ecx+0x1e]
  41bd34:	sti    
  41bd35:	push   esp
  41bd36:	in     al,0xe8
  41bd38:	xor    BYTE PTR [eax+edx*1],al
  41bd3b:	cli    
  41bd3c:	jno    0x41bd02
  41bd3e:	push   edx
  41bd3f:	or     al,0x97
  41bd41:	scas   eax,DWORD PTR es:[edi]
  41bd42:	(bad)  
  41bd43:	adc    DWORD PTR [ecx],esp
  41bd45:	adc    ebx,DWORD PTR [eax]
  41bd47:	lods   al,BYTE PTR ds:[esi]
  41bd48:	fdivr  QWORD PTR [eax]
  41bd4a:	mov    ebp,0x254fcb33
  41bd4f:	mov    ebx,0x52dedc02
  41bd54:	scas   eax,DWORD PTR es:[edi]
  41bd55:	addr16 jp 0x41bd77
  41bd58:	dec    edi
  41bd59:	pop    ebp
  41bd5a:	pop    ds
  41bd5b:	(bad)  
  41bd5c:	sbb    DWORD PTR [ebx-0xf],esi
  41bd5f:	mov    dl,0x23
  41bd61:	arpl   WORD PTR [eax],ax
  41bd63:	dec    esp
  41bd64:	inc    ebp
  41bd65:	(bad)  [ecx]
  41bd67:	add    al,0xdb
  41bd69:	sub    BYTE PTR [esi],0x97
  41bd6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd6d:	arpl   WORD PTR [ebx],cx
  41bd6f:	push   esi
  41bd70:	push   esi
  41bd71:	push   ss
  41bd72:	jo     0x41bd6b
  41bd74:	jne    0x41bdd5
  41bd76:	pusha  
  41bd77:	mov    edx,0x4a8310eb
  41bd7c:	mov    ebx,DWORD PTR [ebp+0x4a]
  41bd7f:	imul   DWORD PTR [ecx+0x34d685bd]
  41bd85:	push   ds
  41bd86:	shl    BYTE PTR [ecx+0x5f85ad23],1
  41bd8c:	jne    0x41be05
  41bd8e:	(bad)  
  41bd8f:	cld    
  41bd90:	mov    esi,DWORD PTR [edx-0x6fc73ee8]
  41bd96:	jbe    0x41bd92
  41bd98:	into   
  41bd99:	pop    ebp
  41bd9a:	fucomp st(5)
  41bd9c:	icebp  
  41bd9d:	xchg   ebp,eax
  41bd9e:	push   edi
  41bd9f:	clc    
  41bda0:	lahf   
  41bda1:	push   ecx
  41bda2:	jns    0x41bd80
  41bda4:	add    BYTE PTR [ebx+edi*4-0x7dd830d8],bl
  41bdab:	mov    esp,0xd2d867a9
  41bdb0:	mov    cl,0x7c
  41bdb2:	in     al,0xf9
  41bdb4:	cmc    
  41bdb5:	mov    dl,0x25
  41bdb7:	push   edx
  41bdb8:	jg     0x41bde2
  41bdba:	and    DWORD PTR [ebp-0x38],edx
  41bdbd:	fdiv   st,st(2)
  41bdbf:	sub    BYTE PTR [ebx+esi*4+0x21],bh
  41bdc3:	je     0x41be3e
  41bdc5:	gs or  eax,0x418b628f
  41bdcb:	pop    ecx
  41bdcc:	mov    ah,cl
  41bdce:	in     al,0x65
  41bdd0:	and    BYTE PTR [esp+edx*1-0x44cec306],0x48
  41bdd8:	xor    eax,0x1687858e
  41bddd:	fsubr  QWORD PTR [eax-0x9]
  41bde0:	adc    dh,bh
  41bde2:	sub    eax,0x885e0b04
  41bde7:	xor    DWORD PTR [ecx+0x2b],eax
  41bdea:	test   BYTE PTR [edx],al
  41bdec:	(bad)  
  41bded:	outs   dx,DWORD PTR ds:[esi]
  41bdee:	mov    eax,0x90588536
  41bdf3:	mov    eax,ds:0xf9f8b87e
  41bdf8:	lods   eax,DWORD PTR ds:[esi]
  41bdf9:	jmp    0xb672f22f
  41bdfe:	mov    bh,0x7b
  41be00:	fcom   QWORD PTR [edi+0x44]
  41be03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be04:	ins    BYTE PTR es:[edi],dx
  41be05:	mov    edx,es
  41be07:	push   cs
  41be08:	repnz mov BYTE PTR [esi+0x2ce76636],dl
  41be0f:	sbb    dl,BYTE PTR [edx]
  41be11:	xlat   BYTE PTR ds:[ebx]
  41be12:	scas   al,BYTE PTR es:[edi]
  41be13:	fsubr  DWORD PTR [esi]
  41be15:	or     BYTE PTR [ecx],cl
  41be17:	ins    BYTE PTR es:[edi],dx
  41be18:	jo     0x41bdd2
  41be1a:	dec    eax
  41be1b:	inc    esp
  41be1c:	inc    esp
  41be1d:	dec    ebp
  41be1e:	pusha  
  41be1f:	mov    edx,0x317217a8
  41be24:	xor    al,0x3e
  41be26:	push   es
  41be27:	xor    BYTE PTR [ebp-0x5d0706b4],cl
  41be2d:	adc    al,0x46
  41be2f:	xor    al,0x40
  41be31:	outs   dx,BYTE PTR gs:[esi]
  41be33:	popf   
  41be34:	pop    ss
  41be35:	aam    0x21
  41be37:	xor    DWORD PTR [ebp+esi*2-0x54],edi
  41be3b:	loopne 0x41be45
  41be3d:	(bad)  
  41be3e:	sbb    eax,0x7b8d0aff
  41be43:	xchg   edi,eax
  41be44:	mov    ah,0xd2
  41be46:	lods   eax,DWORD PTR ds:[esi]
  41be47:	les    ebp,FWORD PTR [edx+0x2d283be4]
  41be4d:	pop    esp
  41be4e:	(bad)
  41be51:	xchg   BYTE PTR [esi],bh
  41be53:	xor    BYTE PTR [ebx-0x6],cl
  41be56:	stos   BYTE PTR es:[edi],al
  41be57:	ins    DWORD PTR es:[edi],dx
  41be58:	push   edi
  41be59:	cld    
  41be5a:	mov    al,0xab
  41be5c:	ret    
  41be5d:	push   ss
  41be5e:	in     al,dx
  41be5f:	lahf   
  41be60:	ins    BYTE PTR es:[edi],dx
  41be61:	pop    edx
  41be62:	push   ecx
  41be63:	and    dh,ah
  41be65:	mov    ds:0xbd3aaf4f,al
  41be6a:	cld    
  41be6b:	lods   al,BYTE PTR ds:[esi]
  41be6c:	adc    eax,0xb4eccf2d
  41be71:	add    BYTE PTR [ebp+0x64],0x64
  41be75:	inc    eax
  41be76:	mov    edi,0xdf5f552
  41be7b:	ret    0x45ce
  41be7e:	mov    ?,edx
  41be80:	cld    
  41be81:	mov    ebp,0xcc2337a
  41be86:	bound  ebx,QWORD PTR [edx]
  41be88:	je     0x41bf06
  41be8a:	pop    eax
  41be8b:	or     al,BYTE PTR [ebx+0x47]
  41be8e:	dec    ebp
  41be8f:	mov    DWORD PTR [ecx+ecx*2],eax
  41be92:	popf   
  41be93:	xor    ebx,DWORD PTR [esi-0x25]
  41be96:	cmc    
  41be97:	push   ecx
  41be98:	lea    ebx,[esi+0x1be13ab5]
  41be9e:	xchg   ecx,eax
  41be9f:	aam    0x95
  41bea1:	cmp    al,0x79
  41bea3:	scas   eax,DWORD PTR es:[edi]
  41bea4:	push   edi
  41bea5:	sbb    edi,edi
  41bea7:	jo     0x41bec4
  41bea9:	cmp    bh,BYTE PTR [edi-0x8d2c6f]
  41beaf:	fsub   QWORD PTR [esi+0x14]
  41beb2:	sub    ah,BYTE PTR [edi-0x4449ed11]
  41beb8:	and    esi,edx
  41beba:	leave  
  41bebb:	les    edi,FWORD PTR [eax+0x66c6e147]
  41bec1:	mov    bh,0x5c
  41bec3:	dec    ebp
  41bec4:	fidivr WORD PTR [eax]
  41bec6:	mov    ah,0x9d
  41bec8:	pop    esp
  41bec9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41beca:	shr    BYTE PTR [edi+0x436041e8],cl
  41bed0:	sub    eax,0x5db4f69f
  41bed5:	mov    bl,BYTE PTR [esi]
  41bed7:	cwde   
  41bed8:	adc    al,0xc1
  41beda:	pop    esp
  41bedb:	xchg   ebp,esp
  41bedd:	(bad)  
  41bede:	repz add eax,0x7fa6e06e
  41bee4:	xchg   edi,eax
  41bee5:	or     eax,0x3f0e29aa
  41beea:	add    ebp,DWORD PTR [edx]
  41beec:	ret    0x5251
  41beef:	xor    DWORD PTR [ebp+0x55],ebp
  41bef2:	fist   DWORD PTR [esi+0x6d]
  41bef5:	into   
  41bef6:	push   es
  41bef7:	jge    0x41bf71
  41bef9:	ror    BYTE PTR [esi+edi*1],1
  41befc:	push   edi
  41befd:	aas    
  41befe:	lea    ecx,[esi]
  41bf00:	(bad)
  41bf03:	mov    cl,BYTE PTR [edi+0x38a79741]
  41bf09:	sub    DWORD PTR [edi+0x5f],esp
  41bf0c:	or     BYTE PTR [si],bh
  41bf0f:	or     al,0x98
  41bf11:	sub    DWORD PTR [esp+ecx*8-0x6d],ebx
  41bf15:	add    bl,BYTE PTR [ebp-0x71aff3a9]
  41bf1b:	xchg   DWORD PTR [edi+ebp*2],esi
  41bf1e:	or     DWORD PTR [ecx+0x7a4b9680],0xd70fac97
  41bf28:	mov    ah,0x8b
  41bf2a:	pop    ecx
  41bf2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf2c:	jae    0x41bf8c
  41bf2e:	push   0x5b42c88f
  41bf33:	imul   ch
  41bf35:	popa   
  41bf36:	xchg   ecx,eax
  41bf37:	cmp    ebp,DWORD PTR [edi]
  41bf39:	imul   eax,DWORD PTR [ebp-0x71626b0f],0xffffffeb
  41bf40:	ror    DWORD PTR [edx+0x77],1
  41bf43:	and    ebp,ebp
  41bf45:	ror    dl,1
  41bf47:	adc    eax,0x81c88b51
  41bf4c:	clc    
  41bf4d:	or     ah,al
  41bf4f:	sbb    esi,edx
  41bf51:	mov    al,ds:0x1f08df9d
  41bf56:	lea    esi,[edx+0x66493c5]
  41bf5c:	xchg   esp,eax
  41bf5d:	cmpxchg dl,cl
  41bf60:	push   ebx
  41bf61:	in     al,0xa3
  41bf63:	jmp    0x4f524008
  41bf68:	int    0x81
  41bf6a:	out    0xfa,al
  41bf6c:	inc    edx
  41bf6d:	jmp    0x41bf2f
  41bf6f:	pop    ss
  41bf70:	ret    
  41bf71:	adc    BYTE PTR [edx+esi*8],0xd5
  41bf75:	jo     0x41bef8
  41bf77:	in     al,0x10
  41bf79:	test   al,0x8e
  41bf7c:	xchg   BYTE PTR [ebp-0x6f],bh
  41bf7f:	xchg   BYTE PTR [ebx],al
  41bf81:	pop    esp
  41bf82:	call   0x49fc:0x5f3b9c17
  41bf89:	cmovae edi,DWORD PTR [ebx+0xf]
  41bf8d:	aad    0x3f
  41bf8f:	mov    eax,0xb0c63209
  41bf94:	inc    edi
  41bf95:	xchg   BYTE PTR [edi-0x55133a34],al
  41bf9b:	popf   
  41bf9c:	dec    ebx
  41bf9d:	push   eax
  41bf9e:	push   ebx
  41bf9f:	sub    BYTE PTR [edx-0x1f],ah
  41bfa2:	repnz sub bl,BYTE PTR ds:0xcbfa8e36
  41bfa9:	xchg   ebx,eax
  41bfaa:	stos   BYTE PTR es:[edi],al
  41bfab:	inc    ebp
  41bfac:	(bad)  
  41bfae:	push   0xffffffae
  41bfb0:	xor    ecx,edx
  41bfb2:	sahf   
  41bfb3:	cmp    DWORD PTR [eax],0xffffffe1
  41bfb6:	fnstenv [ecx]
  41bfb8:	jmp    0x163db33e
  41bfbd:	pop    es
  41bfbe:	pusha  
  41bfbf:	mov    bl,0xf2
  41bfc1:	fs dec edx
  41bfc3:	xlat   BYTE PTR ds:[ebx]
  41bfc4:	cmc    
  41bfc5:	mov    WORD PTR [edx],fs
  41bfc7:	mov    al,ds:0xbb6ba826
  41bfcc:	in     al,0x85
  41bfce:	pop    ds
  41bfcf:	sbb    BYTE PTR [eax-0x78],0xa3
  41bfd3:	out    dx,al
  41bfd4:	(bad)  
  41bfd5:	fidivr WORD PTR [edx-0x4fcecdbb]
  41bfdb:	mov    ah,0xbd
  41bfdd:	ds stc 
  41bfdf:	sbb    ecx,DWORD PTR [ebp-0x6df9a6fe]
  41bfe5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bfe6:	mov    edi,0x7328ee79
  41bfeb:	mov    dh,0x17
  41bfed:	repz adc esp,edx
  41bff0:	adc    DWORD PTR [edi-0x79cddce4],eax
  41bff6:	adc    BYTE PTR [ecx+ecx*4-0x516fd0e4],ch
  41bffd:	ret    0x7ef4
  41c000:	or     al,0x3b
  41c002:	sub    bh,bh
  41c004:	adc    al,BYTE PTR [ebp+0x42]
  41c007:	mov    ds:0xd7cbb698,eax
  41c00c:	and    DWORD PTR [ecx],0x24adf058
  41c012:	out    dx,eax
  41c013:	(bad)  
  41c014:	repnz cmp eax,DWORD PTR [esi+0x3b9eac1f]
  41c01b:	pop    esi
  41c01c:	or     DWORD PTR [eiz*4-0x476047a3],ecx
  41c023:	mov    al,0x37
  41c025:	mov    edi,0x21f83978
  41c02a:	add    eax,0xcc11521f
  41c02f:	outs   dx,BYTE PTR ds:[esi]
  41c030:	push   edi
  41c031:	jo     0x41c08c
  41c033:	fidivr WORD PTR [eax-0x30b564bf]
  41c039:	pop    edi
  41c03a:	sbb    DWORD PTR [esp+edi*8],esi
  41c03d:	gs jge 0x95bedbe6
  41c044:	sbb    eax,edx
  41c046:	jne    0x41bfdf
  41c048:	sbb    BYTE PTR [edx-0x75e34f66],bl
  41c04e:	inc    edi
  41c04f:	push   ebx
  41c050:	push   ebx
  41c051:	xchg   edi,eax
  41c052:	cwde   
  41c053:	repnz xchg esp,eax
  41c055:	sub    al,0x6b
  41c057:	sbb    al,0x5b
  41c059:	and    BYTE PTR [edx],0x9d
  41c05c:	fwait
  41c05d:	repz out 0xf8,eax
  41c060:	jbe    0x41c0ae
  41c062:	mov    dh,0xea
  41c064:	cmp    dl,cl
  41c066:	xor    DWORD PTR [edi-0x43],edx
  41c069:	and    eax,0xd337ac68
  41c06e:	ja     0x41bffd
  41c070:	mov    esi,0x54c48b06
  41c075:	jne    0x41c08f
  41c077:	in     eax,0x76
  41c079:	pusha  
  41c07a:	fwait
  41c07b:	push   ds
  41c07c:	mov    al,ds:0xf69960e1
  41c081:	mov    eax,DWORD PTR [esi-0x63f38dd1]
  41c087:	dec    ecx
  41c088:	ret    0xa607
  41c08b:	dec    edi
  41c08c:	leave  
  41c08d:	jg     0x41c029
  41c08f:	fsubr  QWORD PTR [edi]
  41c091:	shl    DWORD PTR [ebp+0x4d],cl
  41c094:	xchg   al,dh
  41c096:	add    eax,0xb4095211
  41c09b:	loop   0x41c112
  41c09d:	aam    0xbb
  41c09f:	or     eax,0x741193fb
  41c0a4:	xchg   esi,eax
  41c0a5:	sti    
  41c0a6:	fistp  WORD PTR [ebx+0x30f8ebdd]
  41c0ac:	jecxz  0x41c073
  41c0ae:	fild   DWORD PTR [eax+0x6f01df4b]
  41c0b4:	mov    ch,0x49
  41c0b6:	xor    esi,esi
  41c0b8:	dec    ebx
  41c0b9:	mov    eax,ds:0x4bad2e86
  41c0be:	add    al,0x6b
  41c0c0:	ret    
  41c0c1:	xchg   DWORD PTR [ecx+edx*2-0x54],eax
  41c0c5:	or     ebp,DWORD PTR [edx+0x78]
  41c0c8:	js     0x41c06f
  41c0ca:	inc    edi
  41c0cb:	aaa    
  41c0cc:	and    DWORD PTR [eax],edi
  41c0ce:	retf   
  41c0cf:	adc    eax,0x249d5ddd
  41c0d4:	cdq    
  41c0d5:	adc    eax,0x246c5728
  41c0da:	and    al,BYTE PTR [esp+ebp*8+0x62]
  41c0de:	lods   eax,DWORD PTR ds:[esi]
  41c0df:	mov    ds:0x302c095a,eax
  41c0e4:	in     eax,0xf5
  41c0e6:	fmul   st,st(5)
  41c0e8:	cdq    
  41c0e9:	mov    ds:0x3b8b06b2,al
  41c0ee:	push   ds
  41c0ef:	mov    DWORD PTR [eax],ebp
  41c0f1:	retf   0x9d0
  41c0f4:	mov    bh,0xee
  41c0f6:	sbb    eax,0xe8ea36ce
  41c0fb:	and    DWORD PTR [ebx],edi
  41c0fd:	dec    ebx
  41c0fe:	aaa    
  41c0ff:	sbb    eax,0x67fc0c78
  41c104:	jae    0x41c101
  41c106:	inc    eax
  41c107:	fld    QWORD PTR [eax+eax*2+0x19]
  41c10b:	and    al,0xc6
  41c10d:	or     al,BYTE PTR [ebx+0x6e5250a5]
  41c113:	dec    esi
  41c114:	push   ss
  41c115:	xor    esi,esi
  41c117:	pop    esp
  41c118:	and    DWORD PTR [ebx-0x65fd6775],esi
  41c11e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c11f:	xchg   ecx,eax
  41c120:	pushf  
  41c121:	xor    esp,DWORD PTR [eax+edi*8]
  41c124:	jmp    0x41c112
  41c126:	lahf   
  41c127:	jl     0x41c169
  41c129:	xchg   esi,eax
  41c12a:	and    eax,0x7e2a326d
  41c12f:	fdivr  QWORD PTR [edx-0x28]
  41c132:	pop    DWORD PTR [ebx]
  41c134:	scas   eax,DWORD PTR es:[edi]
  41c135:	test   dl,cl
  41c137:	lods   eax,DWORD PTR ds:[esi]
  41c138:	in     al,dx
  41c139:	sub    eax,0xe15e6851
  41c13e:	sub    ebx,DWORD PTR [edx+0x4b]
  41c141:	and    DWORD PTR ds:0x5ea87f77,esp
  41c147:	push   esp
  41c148:	jge    0x41c128
  41c14a:	adc    cl,BYTE PTR [ebp+0x33e6849c]
  41c150:	(bad)  
  41c151:	xor    cl,BYTE PTR [esi-0x3fd810cf]
  41c157:	mov    al,0x30
  41c159:	mov    edx,0x983de637
  41c15e:	int    0x57
  41c160:	and    eax,0xfbe7579
  41c165:	adc    DWORD PTR [ecx],edx
  41c167:	and    DWORD PTR [ebp+0x264ee467],esp
  41c16d:	pop    esp
  41c16e:	shl    cl,0x5d
  41c171:	pop    edi
  41c172:	pop    ds
  41c173:	push   ebx
  41c174:	inc    ebx
  41c175:	and    al,0xcd
  41c177:	xor    eax,0xc45f927c
  41c17c:	pusha  
  41c17d:	pop    ebp
  41c17e:	add    eax,0x682f1a0a
  41c183:	and    edi,DWORD PTR ds:0x729eb327
  41c189:	and    eax,edx
  41c18b:	sub    bl,BYTE PTR [edi]
  41c18d:	push   eax
  41c18e:	xor    BYTE PTR ds:0x32a3cb1e,dh
  41c194:	jg     0x41c1ed
  41c196:	loope  0x41c152
  41c198:	xchg   esi,eax
  41c199:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c19a:	sbb    esi,DWORD PTR [ecx-0x750da4e0]
  41c1a0:	mov    esi,0xf7359815
  41c1a5:	mov    esi,esi
  41c1a7:	rcl    DWORD PTR [edi+0x3a],1
  41c1aa:	jbe    0x41c16a
  41c1ac:	fbstp  TBYTE PTR [edi+0x594b899a]
  41c1b2:	into   
  41c1b3:	or     al,0x58
  41c1b5:	lods   al,BYTE PTR ds:[esi]
  41c1b6:	jae    0x41c1b4
  41c1b8:	push   ebp
  41c1b9:	out    0x44,eax
  41c1bb:	push   esp
  41c1bc:	inc    ebp
  41c1bd:	(bad)  
  41c1be:	mov    al,0x26
  41c1c0:	(bad)  
  41c1c1:	mul    DWORD PTR [eax-0x5c]
  41c1c4:	leave  
  41c1c5:	xchg   edi,eax
  41c1c6:	xchg   edi,eax
  41c1c7:	lock test BYTE PTR [edi-0x5a],dl
  41c1cb:	or     al,0x1
  41c1cd:	out    dx,eax
  41c1ce:	cmp    esi,DWORD PTR [ebx+0x2935c594]
  41c1d4:	mov    ds:0x31ff10fe,al
  41c1d9:	push   edi
  41c1da:	cmp    ebp,0x1b
  41c1dd:	lock pop ebx
  41c1df:	sbb    DWORD PTR [eax+0x73],ebx
  41c1e2:	js     0x41c21f
  41c1e4:	jno    0x41c17a
  41c1e6:	ret    0x288e
  41c1e9:	mov    BYTE PTR gs:[ebp-0x41],cl
  41c1ed:	pop    ebx
  41c1ee:	inc    edi
  41c1ef:	pop    ecx
  41c1f0:	or     eax,0xa263548d
  41c1f5:	mov    sp,0x265c
  41c1f9:	push   esp
  41c1fa:	xchg   esi,eax
  41c1fb:	and    al,0xd5
  41c1fd:	int3   
  41c1fe:	dec    eax
  41c1ff:	sub    eax,0xd48cb6da
  41c204:	rcl    bh,cl
  41c206:	jne    0x41c1ec
  41c208:	retf   
  41c209:	mov    cl,al
  41c20b:	push   ecx
  41c20c:	push   ebx
  41c20d:	xor    DWORD PTR [esi-0x473b5468],0x813123ec
  41c217:	inc    esi
  41c218:	xchg   BYTE PTR [eax-0x3a],bh
  41c21b:	addr16 mov al,0xf2
  41c21e:	mov    edx,0xdbc4bfac
  41c223:	call   0x3676:0x60cf1621
  41c22a:	pop    edx
  41c22b:	stos   BYTE PTR es:[edi],al
  41c22c:	mov    BYTE PTR [edx+edi*4-0x5b],dh
  41c230:	cmp    DWORD PTR [eax+ebp*1+0x6a027e8f],esi
  41c237:	inc    edx
  41c238:	push   ecx
  41c239:	or     DWORD PTR [ecx+0x617ac542],esi
  41c23f:	dec    esi
  41c240:	fwait
  41c241:	push   cs
  41c242:	jne    0x41c2ba
  41c244:	dec    esi
  41c245:	test   BYTE PTR [ebx+eax*4-0x76f6ffee],cl
  41c24c:	popa   
  41c24d:	sbb    eax,0x53bb76ad
  41c252:	sub    eax,ecx
  41c254:	loope  0x41c241
  41c256:	lock fiadd DWORD PTR [edx+0x47e69b93]
  41c25d:	idiv   DWORD PTR [ebp+0x9]
  41c260:	cmp    dh,BYTE PTR [ebx-0x3be4f4dd]
  41c266:	mov    fs,WORD PTR [ebx-0x55d81dc3]
  41c26c:	inc    ecx
  41c26d:	push   0x124c6bae
  41c272:	(bad)  
  41c273:	push   ecx
  41c274:	pop    esi
  41c275:	sbb    eax,0x85bfe972
  41c27a:	mov    cl,0x46
  41c27c:	mov    bh,BYTE PTR [edx-0x13c729d1]
  41c282:	mov    DWORD PTR [ebx-0x5b],edi
  41c285:	(bad)  
  41c286:	xor    dh,BYTE PTR [ecx]
  41c288:	xchg   esp,eax
  41c289:	mov    eax,ds:0xe74da0f7
  41c28e:	push   esi
  41c28f:	mov    ecx,0x85e638c0
  41c294:	push   ebp
  41c295:	mov    dh,0x44
  41c297:	jbe    0x41c294
  41c299:	fwait
  41c29a:	addr16 cwde 
  41c29c:	push   ecx
  41c29d:	outs   dx,DWORD PTR ds:[esi]
  41c29e:	sub    ah,bh
  41c2a0:	outs   dx,DWORD PTR ds:[esi]
  41c2a1:	mov    ch,0x63
  41c2a3:	pushf  
  41c2a4:	(bad)  
  41c2a7:	lea    ebp,[ebx-0x70]
  41c2aa:	stos   DWORD PTR es:[edi],eax
  41c2ab:	dec    ecx
  41c2ac:	and    bh,ch
  41c2ae:	add    ebp,ebp
  41c2b0:	sbb    ebx,ebx
  41c2b2:	jno    0x41c2df
  41c2b4:	add    dl,dl
  41c2b6:	in     al,0xd
  41c2b8:	fwait
  41c2b9:	scas   al,BYTE PTR es:[edi]
  41c2ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2bb:	push   edi
  41c2bc:	or     eax,0x9dc13414
  41c2c1:	or     DWORD PTR [eax],edi
  41c2c3:	cs pop es
  41c2c5:	mov    eax,ds:0xa3c4d45f
  41c2ca:	mov    bl,0xb7
  41c2cc:	sbb    bh,BYTE PTR [ecx]
  41c2ce:	bnd jb 0x41c319
  41c2d1:	cmp    WORD PTR [eax-0x4a657488],sp
  41c2d8:	xchg   esp,eax
  41c2d9:	fs pop eax
  41c2db:	enter  0x295d,0x3f
  41c2df:	mov    dh,0xe9
  41c2e1:	in     eax,0x88
  41c2e3:	cdq    
  41c2e4:	repz xchg edx,eax
  41c2e6:	ins    DWORD PTR es:[edi],dx
  41c2e7:	test   BYTE PTR [ebx],al
  41c2e9:	xchg   edi,eax
  41c2ea:	in     al,0xe2
  41c2ec:	or     al,0xd4
  41c2ee:	mov    eax,ds:0xd051fdd6
  41c2f3:	mov    eax,ds:0x60c9d099
  41c2f8:	xor    esp,esp
  41c2fa:	ficom  DWORD PTR [esi+0xdaf5e8c]
  41c300:	xchg   esi,eax
  41c301:	or     eax,0x3f3b1642
  41c306:	not    BYTE PTR [esi+0x45]
  41c309:	pusha  
  41c30a:	out    dx,al
  41c30b:	adc    ah,cl
  41c30d:	mov    ecx,0xb2487830
  41c312:	in     al,dx
  41c313:	shr    DWORD PTR [esi+ebp*1+0x462752c8],cl
  41c31a:	mov    edx,0xf1eacaf6
  41c31f:	into   
  41c320:	jmp    0x92346e3c
  41c325:	fcomp  st(7)
  41c327:	ds stc 
  41c329:	scas   al,BYTE PTR es:[edi]
  41c32a:	fsubr  QWORD PTR [edx]
  41c32c:	rol    DWORD PTR [edx+0x68],cl
  41c32f:	mov    eax,ds:0x1ba6e1ac
  41c334:	inc    esp
  41c335:	jl     0x41c383
  41c337:	push   cs
  41c338:	or     eax,0x81e1e175
  41c33d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c33e:	sbb    ebp,ebx
  41c340:	or     ebp,edx
  41c342:	jne    0x41c2f5
  41c344:	lea    ebx,[esi-0x39]
  41c347:	sbb    al,BYTE PTR ss:[ebp+edx*8+0x433eef80]
  41c34f:	mov    ah,BYTE PTR gs:[edx-0x2b]
  41c353:	xchg   ecx,eax
  41c354:	(bad)  
  41c355:	retf   
  41c356:	call   DWORD PTR [edi-0xd]
  41c359:	inc    esi
  41c35a:	in     al,dx
  41c35b:	xor    esp,DWORD PTR [ebp+0x71]
  41c35e:	jle    0x41c311
  41c360:	loop   0x41c2e5
  41c362:	into   
  41c363:	xor    eax,0x19e38b5b
  41c368:	call   0xd423:0xc3603fd1
  41c36f:	cmp    bh,BYTE PTR [edx]
  41c371:	sbb    esi,DWORD PTR [eax-0x5b]
  41c374:	cmp    DWORD PTR ds:0xcffe3294,0xffffffc4
  41c37b:	push   ebp
  41c37c:	mov    dh,0xee
  41c37e:	fwait
  41c37f:	cs inc ebx
  41c381:	pusha  
  41c382:	sub    al,0x38
  41c384:	pop    ebp
  41c385:	push   edi
  41c386:	inc    eax
  41c387:	push   0xffffffa4
  41c389:	in     eax,dx
  41c38a:	std    
  41c38b:	out    dx,al
  41c38c:	ss enter 0x3ff9,0x0
  41c391:	lahf   
  41c392:	xlat   BYTE PTR ds:[ebx]
  41c393:	adc    eax,0x7b17af0b
  41c398:	and    eax,0xb5153270
  41c39d:	inc    ebx
  41c39e:	sub    eax,0xda6c0f85
  41c3a3:	mov    WORD PTR [bp-0x69],fs
  41c3a8:	and    bh,BYTE PTR [ebx-0x6020bca9]
  41c3ae:	inc    eax
  41c3af:	and    esi,ebx
  41c3b1:	sub    esi,DWORD PTR ds:0x92e429d8
  41c3b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3b8:	sub    BYTE PTR cs:[edi-0x5604ac7f],ah
  41c3bf:	jnp    0x41c352
  41c3c1:	test   eax,0xdc6d2170
  41c3c6:	xchg   esi,eax
  41c3c7:	pop    ebx
  41c3c8:	fstp   TBYTE PTR [ebp-0x3a4a1cf4]
  41c3ce:	fucomi st,st(5)
  41c3d0:	push   ds
  41c3d1:	dec    esp
  41c3d2:	mov    ah,0x43
  41c3d4:	rdpmc  
  41c3d6:	ret    0x21cc
  41c3d9:	popa   
  41c3da:	mov    bh,0x15
  41c3dc:	into   
  41c3dd:	add    edx,ebx
  41c3df:	or     edi,DWORD PTR [ebx-0x14]
  41c3e2:	das    
  41c3e3:	int3   
  41c3e4:	dec    eax
  41c3e5:	icebp  
  41c3e6:	mov    ch,dh
  41c3e8:	pop    ds
  41c3e9:	jmp    0x74b9:0x8d296c29
  41c3f0:	bound  edx,QWORD PTR [edx]
  41c3f2:	add    bh,BYTE PTR [eax]
  41c3f4:	cmp    dh,dl
  41c3f6:	jp     0x41c39f
  41c3f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3f9:	scas   eax,DWORD PTR es:[edi]
  41c3fa:	and    BYTE PTR [eax],al
  41c3fc:	jno    0x41c441
  41c3fe:	push   es
  41c3ff:	push   0xa026216b
  41c404:	loop   0x41c408
  41c406:	(bad)  
  41c407:	test   BYTE PTR [esi],0x3a
  41c40a:	aas    
  41c40b:	jmp    0x3b412917
  41c410:	repz jmp 0x9d78:0x508abb6a
  41c418:	fsubr  QWORD PTR [edx-0x52cba529]
  41c41e:	loop   0x41c42c
  41c420:	sbb    eax,0x35696d3c
  41c425:	or     bh,BYTE PTR [esi-0x57a32f8e]
  41c42b:	call   0xb11b5045
  41c430:	mov    ebp,0x6c181059
  41c435:	stc    
  41c436:	in     eax,dx
  41c437:	cmp    eax,0x6553a7f3
  41c43c:	cld    
  41c43d:	mov    ds:0xd5ba83a4,al
  41c442:	dec    ebx
  41c443:	sub    bl,ch
  41c445:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41c447:	add    BYTE PTR [edx+ecx*4+0x535b7b93],cl
  41c44e:	adc    eax,0x9871df38
  41c453:	in     eax,0x30
  41c455:	rcl    DWORD PTR [edx-0x5dfe920],1
  41c45b:	adc    al,0xd3
  41c45d:	pop    ecx
  41c45e:	mov    edx,0x965c0763
  41c463:	xchg   DWORD PTR [edi+ebp*8-0x43],ebx
  41c467:	cwde   
  41c468:	dec    ebx
  41c469:	cmp    dl,0x16
  41c46c:	sbb    al,0x7f
  41c46e:	cmp    eax,0x8e526e82
  41c473:	test   DWORD PTR [edx],esi
  41c475:	dec    ebp
  41c476:	cmp    bh,al
  41c478:	and    ebp,DWORD PTR [ebp+0x5a]
  41c47b:	mov    ebp,DWORD PTR [eax]
  41c47d:	mov    eax,cs
  41c47f:	out    0xb1,eax
  41c481:	sbb    al,0x98
  41c483:	and    al,0x66
  41c485:	and    BYTE PTR [ebx+0x374555d0],ah
  41c48b:	sub    eax,0xff43498c
  41c490:	pop    eax
  41c491:	pop    ebp
  41c492:	inc    edx
  41c493:	int    0xe9
  41c495:	lahf   
  41c496:	int    0x2e
  41c498:	push   0x24
  41c49a:	xchg   ebx,eax
  41c49b:	cdq    
  41c49c:	(bad)  
  41c49d:	into   
  41c49e:	xlat   BYTE PTR ds:[ebx]
  41c49f:	sahf   
  41c4a0:	and    eax,DWORD PTR [edi+0x69929c9f]
  41c4a6:	pop    ebp
  41c4a7:	fstp   QWORD PTR [ebx-0x3f]
  41c4aa:	or     bl,BYTE PTR [ecx+edi*2]
  41c4ad:	in     eax,0x25
  41c4af:	mov    edi,0x65a01fbe
  41c4b4:	mov    esp,0xf993a741
  41c4b9:	push   esp
  41c4ba:	into   
  41c4bb:	inc    eax
  41c4bc:	imul   edx,ebx,0x473571e9
  41c4c2:	cwde   
  41c4c3:	jle    0x41c498
  41c4c5:	adc    esi,eax
  41c4c7:	jno    0x41c477
  41c4c9:	adc    BYTE PTR [edx+0x623d3167],0x23
  41c4d0:	je     0x41c54e
  41c4d2:	inc    ebp
  41c4d3:	test   BYTE PTR [ebx],bh
  41c4d5:	ret    0xb6e1
  41c4d8:	not    BYTE PTR [edx+esi*8+0x22a23d28]
  41c4df:	jns    0x41c4d0
  41c4e1:	xchg   ecx,eax
  41c4e2:	outs   dx,DWORD PTR ds:[esi]
  41c4e3:	jo     0x41c557
  41c4e5:	jge    0x41c533
  41c4e7:	push   es
  41c4e8:	call   0x83057ad6
  41c4ed:	mov    bh,dh
  41c4ef:	call   0xacda05b0
  41c4f4:	mov    ah,0xf2
  41c4f6:	or     DWORD PTR [eax+0x7a83f77a],ebp
  41c4fc:	(bad)  
  41c4fe:	aas    
  41c4ff:	in     al,dx
  41c500:	jae    0x41c503
  41c502:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c503:	inc    ecx
  41c504:	mov    al,0x97
  41c506:	or     eax,0x65b72b3e
  41c50b:	jmp    0x41c49f
  41c50d:	mov    ebp,0x1ea1ca07
  41c512:	(bad)  
  41c514:	fsubr  st(0),st
  41c516:	sti    
  41c517:	pop    esp
  41c518:	leave  
  41c519:	sbb    al,bh
  41c51b:	jp     0x41c4d1
  41c51d:	popa   
  41c51e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c51f:	mov    esi,0x806f8b2d
  41c524:	das    
  41c525:	fbld   TBYTE PTR [ebx+0x5e]
  41c528:	xor    al,0x37
  41c52a:	jp     0x41c55e
  41c52c:	mov    al,ds:0xad8f5664
  41c531:	sbb    ah,ah
  41c533:	mov    WORD PTR [edi],fs
  41c535:	xor    al,0x9a
  41c537:	mov    esi,0xc91463e8
  41c53c:	cmp    ebx,ecx
  41c53e:	xchg   bp,ax
  41c540:	jb     0x41c4c2
  41c542:	xchg   esp,eax
  41c543:	sub    al,0xd0
  41c545:	nop
  41c546:	loop   0x41c519
  41c548:	xchg   BYTE PTR [ecx-0xa699080],dh
  41c54e:	mov    ds:0xae03623e,eax
  41c553:	stos   DWORD PTR es:[edi],eax
  41c554:	jl     0x41c4dd
  41c556:	sbb    eax,0x2fb0de80
  41c55b:	adc    DWORD PTR [ebx],ecx
  41c55d:	adc    ebp,esp
  41c55f:	pop    ecx
  41c560:	dec    esi
  41c561:	xor    eax,0x787189f3
  41c566:	xchg   ecx,eax
  41c567:	adc    eax,0x5f189984
  41c56c:	or     eax,0xe65c977d
  41c571:	mov    esi,DWORD PTR [eax+0x64]
  41c574:	js     0x41c54f
  41c576:	sub    edi,esp
  41c578:	pop    edi
  41c579:	mov    ch,0xd2
  41c57b:	ins    DWORD PTR es:[edi],dx
  41c57c:	aad    0xca
  41c57e:	sbb    DWORD PTR [eax+0x3739fe9b],ebx
  41c584:	(bad)  
  41c585:	jmp    0x7ea43b68
  41c58a:	mov    BYTE PTR [edx],0x9b
  41c58d:	aas    
  41c58e:	xor    al,0x5
  41c590:	jnp    0x41c5ef
  41c592:	push   ebx
  41c593:	xor    edi,DWORD PTR [ebx]
  41c595:	mov    al,ds:0x132542da
  41c59a:	and    al,0xff
  41c59d:	les    edi,FWORD PTR [edx+ecx*2-0x18a83b09]
  41c5a4:	pop    ebx
  41c5a5:	add    eax,0x4b76777a
  41c5aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5ab:	mov    ebx,0x35e9672d
  41c5b0:	and    eax,0xa2e9b82d
  41c5b5:	or     DWORD PTR [edx+0x53],ebp
  41c5b8:	stc    
  41c5b9:	jo     0x41c547
  41c5bb:	retf   
  41c5bc:	mov    BYTE PTR [ebx+0x3a27e0dc],ch
  41c5c2:	pop    edx
  41c5c3:	cmp    al,0xf7
  41c5c5:	fst    DWORD PTR [edx-0x52]
  41c5c8:	ja     0x41c57d
  41c5ca:	dec    ebp
  41c5cb:	fld    TBYTE PTR [esi-0x57]
  41c5ce:	ins    DWORD PTR es:[edi],dx
  41c5cf:	or     DWORD PTR [esi+ebp*2+0x53],ebp
  41c5d3:	add    cl,BYTE PTR [edi+ecx*4]
  41c5d6:	mov    ds:0x725e63f3,eax
  41c5db:	and    dl,bh
  41c5dd:	inc    eax
  41c5de:	call   0x85307501
  41c5e3:	pop    esp
  41c5e4:	sahf   
  41c5e5:	mov    esp,0x716e9932
  41c5ea:	stos   DWORD PTR es:[edi],eax
  41c5eb:	dec    eax
  41c5ec:	cvttps2pi mm4,QWORD PTR [edx-0x34d67411]
  41c5f3:	jmp    0xa4ff:0x3be6e286
  41c5fa:	(bad)  
  41c5fb:	test   BYTE PTR [ecx-0xe61d0ec],0x4b
  41c602:	fldenv [ebx+esi*4-0x6f]
  41c606:	popf   
  41c607:	jae    0x41c5e5
  41c609:	jmp    0x3f0a:0x2c717327
  41c610:	jmp    0x6e79cdf8
  41c615:	cmp    ecx,ebp
  41c617:	pusha  
  41c618:	add    bh,bl
  41c61a:	stos   BYTE PTR es:[edi],al
  41c61b:	mov    bh,0xa9
  41c61d:	hlt    
  41c61e:	mov    DWORD PTR [ebx-0x6eedb3ac],eax
  41c624:	xor    BYTE PTR [ebx],al
  41c626:	and    al,0xf3
  41c628:	jbe    0x41c5cd
  41c62a:	std    
  41c62b:	ja     0x41c694
  41c62d:	xchg   ecx,eax
  41c62e:	add    eax,0xbd42a3ff
  41c633:	scas   al,BYTE PTR es:[edi]
  41c634:	sbb    BYTE PTR [ecx+0xe5a7ac5],bh
  41c63a:	fsubr  QWORD PTR [eax+0x37]
  41c63d:	ss repz aas 
  41c640:	adc    DWORD PTR ds:0xb71986f7,esp
  41c646:	rcr    DWORD PTR [edx+0x58],1
  41c649:	adc    al,0x8b
  41c64b:	pop    edx
  41c64c:	addr16 pushf 
  41c64e:	sar    DWORD PTR [ecx],0xee
  41c651:	push   es
  41c652:	jno    0x41c6a3
  41c654:	fnstsw WORD PTR [edi+0x778aaff9]
  41c65a:	adc    eax,0x29eadc6b
  41c65f:	pop    edx
  41c660:	sub    al,BYTE PTR [ebx-0x58ba17f0]
  41c666:	adc    eax,0xa2b22dc9
  41c66b:	push   esp
  41c66c:	jmp    0xa3550bd5
  41c671:	mov    eax,ds:0x2ecab18e
  41c676:	sahf   
  41c677:	outs   dx,BYTE PTR ds:[esi]
  41c678:	mov    esi,0x8f09740e
  41c67d:	fidivr DWORD PTR [edx-0xf]
  41c680:	scas   al,BYTE PTR es:[edi]
  41c681:	jle    0x41c6b3
  41c683:	adc    edx,0xd296be0c
  41c689:	jmp    0x2fc66a4d
  41c68e:	jno    0x41c6b0
  41c690:	dec    esi
  41c691:	(bad)  [edx]
  41c693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c694:	and    cl,BYTE PTR [ecx]
  41c696:	sbb    eax,0xbe459360
  41c69b:	inc    edx
  41c69c:	mov    ebx,ecx
  41c69e:	pop    ecx
  41c69f:	into   
  41c6a0:	push   edx
  41c6a1:	retf   
  41c6a2:	sub    DWORD PTR [edi],esi
  41c6a4:	es je  0x41c693
  41c6a7:	pop    eax
  41c6a8:	jle    0x41c68e
  41c6aa:	xchg   edi,eax
  41c6ab:	hlt    
  41c6ac:	dec    ebp
  41c6ad:	mov    esi,edi
  41c6af:	fst    DWORD PTR [eax]
  41c6b1:	cmp    edi,eax
  41c6b3:	inc    ebp
  41c6b4:	cli    
  41c6b5:	cld    
  41c6b6:	aam    0x57
  41c6b8:	push   esi
  41c6b9:	dec    edx
  41c6ba:	out    0xa4,eax
  41c6bc:	leave  
  41c6bd:	mov    eax,0xf8dd96f7
  41c6c2:	ror    BYTE PTR [ebp-0x4b7bbf41],1
  41c6c8:	outs   dx,WORD PTR ds:[esi]
  41c6ca:	and    bh,BYTE PTR [edi-0x5c51e5c]
  41c6d0:	xor    al,0x62
  41c6d2:	push   cs
  41c6d3:	or     BYTE PTR [edi+0x70b0f2d1],al
  41c6d9:	cmp    BYTE PTR [ebx-0x12],cl
  41c6dc:	xchg   ecx,eax
  41c6dd:	inc    ebx
  41c6de:	mov    esi,0x13041ce9
  41c6e3:	lahf   
  41c6e4:	into   
  41c6e5:	imul   DWORD PTR [eax+0x72]
  41c6e8:	pop    edx
  41c6e9:	mov    esi,0x8cd7e31c
  41c6ee:	fld    TBYTE PTR [eax-0x2040a2f5]
  41c6f4:	mov    esp,0xd900bb7c
  41c6f9:	pop    edx
  41c6fa:	clc    
  41c6fb:	(bad)  
  41c6fc:	repz inc ebp
  41c6fe:	pushf  
  41c6ff:	call   0xf088:0x98636614
  41c706:	xor    BYTE PTR [esi-0x577eb3fe],al
  41c70c:	dec    edi
  41c70d:	call   0xd8ef3809
  41c712:	hlt    
  41c713:	adc    al,0xd9
  41c715:	sub    eax,0x16c1fe8b
  41c71a:	clc    
  41c71b:	adc    eax,0xc68b7ad7
  41c720:	or     BYTE PTR [esi+0x76],0xdf
  41c724:	fiadd  DWORD PTR [ebx+0x32]
  41c727:	aam    0x52
  41c729:	inc    edi
  41c72a:	test   al,0x1
  41c72c:	rcr    BYTE PTR [ecx+0x1a63fb8],0x60
  41c733:	call   0x5f28ad27
  41c738:	adc    DWORD PTR [edi+0x232e1db2],0x67f99944
  41c742:	mov    ds:0xa8356d2,al
  41c747:	lahf   
  41c748:	and    ax,WORD PTR [eax]
  41c74b:	es std 
  41c74d:	adc    dl,BYTE PTR [edi+0x6]
  41c750:	(bad)  
  41c751:	pop    eax
  41c752:	sbb    eax,esp
  41c754:	mov    ebx,0x467184f
  41c759:	and    DWORD PTR [ecx+0x3b13e5e2],edx
  41c75f:	mov    DWORD PTR [ecx-0x39ffdd33],esi
  41c765:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c766:	jge    0x41c745
  41c768:	sub    eax,0x4e959de3
  41c76d:	jge    0x41c73b
  41c76f:	xor    BYTE PTR [esi],ah
  41c771:	inc    eax
  41c772:	jp     0x41c700
  41c774:	psubd  mm3,mm4
  41c777:	push   0xffffffbe
  41c779:	push   ds
  41c77a:	cld    
  41c77b:	fs scas al,BYTE PTR es:[edi]
  41c77d:	xor    ecx,DWORD PTR [edx]
  41c77f:	or     BYTE PTR [esi-0x4b5e7c4a],bl
  41c785:	ds mov ch,0x4d
  41c788:	rol    BYTE PTR [ecx-0x3fb08962],0x6a
  41c78f:	sub    eax,0x35fc9b79
  41c794:	sub    al,0x16
  41c796:	pushf  
  41c797:	rcl    BYTE PTR [ebx],cl
  41c799:	sbb    eax,0x6571b3c0
  41c79e:	pop    ss
  41c79f:	inc    ebx
  41c7a0:	sbb    eax,0xcc72a0dd
  41c7a5:	sbb    bl,BYTE PTR [edx-0x36]
  41c7a8:	pop    esi
  41c7a9:	xor    al,0x8e
  41c7ab:	push   eax
  41c7ac:	outs   dx,DWORD PTR ds:[esi]
  41c7ad:	adc    BYTE PTR [edx+ebp*2],0xa1
  41c7b1:	enter  0xd345,0x76
  41c7b5:	stc    
  41c7b6:	adc    eax,0x923b18fb
  41c7bb:	shl    BYTE PTR [esi+ebx*1+0x47476af],0x33
  41c7c3:	cs in  eax,dx
  41c7c5:	push   ds
  41c7c6:	retf   
  41c7c7:	into   
  41c7c8:	cmc    
  41c7c9:	inc    ecx
  41c7ca:	out    dx,eax
  41c7cb:	dec    ecx
  41c7cc:	fbld   TBYTE PTR [edi]
  41c7ce:	or     al,0x96
  41c7d0:	cmp    al,0x81
  41c7d2:	popa   
  41c7d3:	inc    ecx
  41c7d4:	dec    eax
  41c7d5:	std    
  41c7d6:	(bad)  
  41c7d7:	ret    0xf0ce
  41c7da:	sbb    BYTE PTR [eax-0x59eb064a],dl
  41c7e0:	stc    
  41c7e1:	(bad)  
  41c7e2:	loopne 0x41c7ce
  41c7e4:	cmp    bl,BYTE PTR [ebp-0x4f22fda4]
  41c7ea:	adc    ebp,0xada58ced
  41c7f0:	push   ds
  41c7f1:	rcr    DWORD PTR [edi+0x248f9974],0xa4
  41c7f8:	push   esi
  41c7f9:	cli    
  41c7fa:	ret    
  41c7fb:	push   ds
  41c7fc:	or     DWORD PTR [edi-0x521cefc9],eax
  41c802:	test   al,0xee
  41c804:	inc    ebx
  41c805:	in     eax,0x20
  41c807:	jo     0x41c887
  41c809:	stos   DWORD PTR es:[edi],eax
  41c80a:	rcl    esp,cl
  41c80c:	psrlw  mm2,QWORD PTR [edx+0x64e14129]
  41c813:	(bad)  
  41c814:	rep lods eax,DWORD PTR ds:[esi]
  41c816:	pop    esi
  41c817:	xchg   esp,eax
  41c818:	in     eax,dx
  41c819:	xor    ah,BYTE PTR [ecx+0x6cf4d235]
  41c81f:	arpl   WORD PTR [edi+0x6c],di
  41c822:	gs clc 
  41c824:	sub    ch,ch
  41c826:	xor    al,0x7
  41c828:	iret   
  41c829:	mov    ah,0x83
  41c82b:	mov    ah,BYTE PTR [ebp-0x7d]
  41c82e:	add    BYTE PTR [eax],0xb5
  41c831:	leave  
  41c832:	retf   
  41c833:	inc    eax
  41c834:	test   BYTE PTR [ecx],dl
  41c836:	pop    ds
  41c837:	mov    al,0x2a
  41c839:	arpl   WORD PTR ds:0x8afed954,bp
  41c83f:	in     al,dx
  41c840:	iret   
  41c841:	jecxz  0x41c803
  41c843:	pop    esp
  41c844:	pop    es
  41c845:	lods   al,BYTE PTR ds:[esi]
  41c846:	imul   DWORD PTR [eax+edx*4]
  41c849:	xchg   ebp,eax
  41c84a:	mov    ebp,0xb776bda8
  41c84f:	hlt    
  41c850:	(bad)  
  41c851:	jmp    0x7c308afa
  41c856:	xchg   edx,eax
  41c857:	jp     0x41c7f4
  41c859:	mov    edi,ecx
  41c85b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c85c:	pop    ecx
  41c85d:	outs   dx,BYTE PTR ds:[esi]
  41c85e:	mov    eax,0x1cf60b44
  41c863:	adc    al,0x29
  41c865:	jns    0x41c838
  41c867:	stos   BYTE PTR es:[edi],al
  41c868:	fsubr  QWORD PTR [edi]
  41c86a:	dec    ebx
  41c86b:	cmc    
  41c86c:	in     ax,0xd5
  41c86f:	pop    ss
  41c870:	sbb    BYTE PTR [edi],0x68
  41c873:	stos   DWORD PTR es:[edi],eax
  41c874:	mov    eax,0x96337c2e
  41c879:	fcomp  QWORD PTR [esi+0x2e2e774f]
  41c87f:	fnsave [ebx-0x59e6b34d]
  41c885:	ror    BYTE PTR [eax-0x43],0xf0
  41c889:	mov    dl,0x7a
  41c88b:	xor    BYTE PTR [esi-0x402f98f5],cl
  41c891:	add    DWORD PTR fs:[eax-0xd],0xffffffbd
  41c896:	sbb    eax,0x7a982f2f
  41c89b:	inc    esp
  41c89c:	imul   eax,esi,0x75
  41c89f:	aam    0x9e
  41c8a1:	arpl   WORD PTR [ebx],cx
  41c8a3:	(bad)  
  41c8a4:	mov    ah,0x6c
  41c8a6:	mov    ds:0xd0d394fd,eax
  41c8ab:	push   edx
  41c8ac:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41c8ae:	dec    eax
  41c8af:	xchg   edx,eax
  41c8b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8b1:	jp     0x41c8ee
  41c8b3:	jae    0x41c8f3
  41c8b5:	ret    
  41c8b6:	in     eax,dx
  41c8b7:	mov    eax,ds:0xf7ba2a2f
  41c8bc:	retf   0xead2
  41c8bf:	das    
  41c8c0:	push   ss
  41c8c1:	pop    ds
  41c8c2:	lea    esp,[esi-0x3f]
  41c8c5:	out    dx,al
  41c8c6:	adc    eax,0x34ccf6c0
  41c8cb:	cmp    bh,BYTE PTR [eax]
  41c8cd:	ss cli 
  41c8cf:	add    al,0xf9
  41c8d1:	or     eax,0xdf0a34c5
  41c8d6:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41c8d8:	sub    al,0x5e
  41c8da:	sub    eax,0x16ef4892
  41c8df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8e0:	push   edi
  41c8e1:	test   BYTE PTR [edi+0x47e4c7b1],al
  41c8e7:	and    DWORD PTR [ecx-0x54],0xffffff88
  41c8eb:	mov    dh,0xb6
  41c8ed:	add    BYTE PTR [ecx],cl
  41c8ef:	mov    ecx,0x45b5bbb9
  41c8f4:	mov    bh,BYTE PTR [eax]
  41c8f6:	dec    ecx
  41c8f7:	sub    DWORD PTR [edx],ebx
  41c8f9:	test   eax,0x3f171c1e
  41c8fe:	ret    0x6c8e
  41c901:	(bad)  
  41c902:	(bad)  
  41c903:	fidiv  WORD PTR [esi+0x17c395d9]
  41c909:	in     al,dx
  41c90a:	push   ds
  41c90b:	(bad)  
  41c90c:	(bad)  
  41c90d:	sbb    cl,BYTE PTR [edi+esi*2+0x31]
  41c911:	mov    ch,0xfa
  41c913:	pop    ebx
  41c914:	mov    bh,0xca
  41c916:	es fs icebp 
  41c919:	test   DWORD PTR [esi-0x22b6d1c5],ebp
  41c91f:	mov    al,0x42
  41c921:	cwde   
  41c922:	dec    eax
  41c923:	jmp    0x52527a10
  41c928:	mov    al,0xfa
  41c92a:	nop
  41c92b:	sub    BYTE PTR [ecx],cl
  41c92d:	retf   
  41c92e:	jo     0x41c8c0
  41c930:	push   ecx
  41c931:	loop   0x41c8ed
  41c933:	call   eax
  41c935:	inc    ebx
  41c936:	loopne 0x41c92b
  41c938:	sub    al,0x94
  41c93a:	mov    al,ds:0x18c9766d
  41c93f:	or     eax,eax
  41c941:	daa    
  41c942:	in     eax,0x8c
  41c944:	nop
  41c945:	(bad)  
  41c946:	retf   
  41c947:	mov    al,0xaa
  41c949:	shr    cl,1
  41c94b:	jmp    0x41c9a2
  41c94d:	adc    al,ch
  41c94f:	xchg   esi,eax
  41c950:	leave  
  41c951:	xchg   esi,eax
  41c952:	sub    DWORD PTR [esp+eiz*4-0xa704dc3],edx
  41c959:	outs   dx,BYTE PTR ds:[esi]
  41c95a:	(bad)  
  41c95b:	jl     0x41c944
  41c95d:	push   edi
  41c95e:	iret   
  41c95f:	jno    0x41c9b1
  41c961:	and    esp,DWORD PTR [ebx]
  41c963:	fadd   QWORD PTR [edx]
  41c965:	cld    
  41c966:	lea    ebp,[ecx-0x57]
  41c969:	sbb    BYTE PTR [eax+0x4f],0xc7
  41c96d:	ret    0x2a45
  41c970:	inc    edx
  41c971:	mov    eax,ds:0x2b8223b8
  41c976:	cld    
  41c977:	aad    0xe0
  41c979:	test   eax,0x2f8cf88
  41c97e:	arpl   WORD PTR [edx+0xa],di
  41c981:	sar    DWORD PTR [edx-0x2c],cl
  41c984:	pop    ds
  41c985:	cmc    
  41c986:	xor    al,dl
  41c988:	cli    
  41c989:	addr16 push 0x362366e6
  41c98f:	xor    dh,BYTE PTR [esi+edx*2+0x33eca55c]
  41c996:	les    ebx,FWORD PTR [ecx+eiz*2+0x60c464c2]
  41c99d:	jns    0x41c974
  41c99f:	pushf  
  41c9a0:	and    al,0xbd
  41c9a2:	retf   0x402e
  41c9a5:	out    dx,eax
  41c9a6:	cs mov esp,0x41f47b2d
  41c9ac:	rcl    BYTE PTR [ebx-0x13],1
  41c9af:	cdq    
  41c9b0:	inc    eax
  41c9b1:	popf   
  41c9b2:	inc    ebp
  41c9b3:	aas    
  41c9b4:	sbb    ah,BYTE PTR [edx+0x59]
  41c9b7:	push   DWORD PTR cs:[eax]
  41c9ba:	cmc    
  41c9bb:	in     al,dx
  41c9bc:	arpl   di,dx
  41c9be:	add    bh,BYTE PTR [eax+ecx*1+0x3a19ef64]
  41c9c5:	xchg   DWORD PTR [edx],ecx
  41c9c7:	pusha  
  41c9c8:	(bad)  ss:[esi]
  41c9cb:	fwait
  41c9cc:	pusha  
  41c9cd:	or     eax,DWORD PTR [eax]
  41c9cf:	mov    dh,BYTE PTR [edi]
  41c9d1:	pop    esi
  41c9d2:	sub    esi,DWORD PTR [eax+0x38]
  41c9d5:	push   esp
  41c9d6:	pop    es
  41c9d7:	dec    edx
  41c9d8:	mov    al,0xa2
  41c9da:	push   edx
  41c9db:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41c9dd:	ins    DWORD PTR es:[edi],dx
  41c9de:	ficomp DWORD PTR [edx+0x5a98d5c6]
  41c9e5:	fs pop ds
  41c9e7:	int3   
  41c9e8:	mov    dl,0x1c
  41c9ea:	nop
  41c9eb:	fwait
  41c9ec:	mov    esp,0x45969fe
  41c9f1:	mov    BYTE PTR [ebx-0x2295c2b1],cl
  41c9f7:	hlt    
  41c9f8:	cdq    
  41c9f9:	jmp    0x41c9cd
  41c9fb:	dec    esp
  41c9fc:	rcr    DWORD PTR [ecx+eiz*8],1
  41c9ff:	adc    DWORD PTR [esi-0x16a53162],ebp
  41ca05:	fstp   TBYTE PTR [edx+0x5948753c]
  41ca0b:	repz repz loopne 0x41ca35
  41ca0f:	lods   al,BYTE PTR ds:[esi]
  41ca10:	scas   al,BYTE PTR es:[edi]
  41ca11:	js     0x41ca04
  41ca13:	stos   DWORD PTR es:[edi],eax
  41ca14:	es jns 0x41ca2a
  41ca17:	sbb    eax,0x4384add8
  41ca1c:	popa   
  41ca1d:	neg    DWORD PTR [edi+0x77]
  41ca20:	clc    
  41ca21:	sub    edx,DWORD PTR [edx]
  41ca23:	mov    WORD PTR [edi-0x9b67cd7],ds
  41ca29:	dec    ecx
  41ca2a:	int3   
  41ca2b:	test   BYTE PTR [ebx+0x70b61ab9],dl
  41ca31:	aad    0x6b
  41ca33:	inc    edx
  41ca34:	dec    edx
  41ca35:	cmp    edx,DWORD PTR [eax-0x35]
  41ca38:	xor    DWORD PTR [ebp+edx*2-0x3f],ecx
  41ca3c:	dec    esi
  41ca3d:	(bad)  
  41ca3e:	dec    edi
  41ca3f:	add    edi,DWORD PTR [ebp+eax*4+0x45]
  41ca43:	rol    BYTE PTR [ecx+0xf],0x4a
  41ca47:	jmp    0x42ec3d1a
  41ca4c:	daa    
  41ca4d:	pop    eax
  41ca4e:	mov    ecx,0x6dd9b564
  41ca53:	arpl   WORD PTR [edx-0x3f],sp
  41ca56:	jb     0x41c9fe
  41ca58:	ret    0x94d
  41ca5b:	or     dl,BYTE PTR es:[edx]
  41ca5e:	pusha  
  41ca5f:	(bad)  
  41ca60:	cmp    dl,cl
  41ca62:	fwait
  41ca63:	jg     0x41ca59
  41ca65:	stc    
  41ca66:	push   ds
  41ca67:	mov    ebx,0x1ef03de5
  41ca6c:	std    
  41ca6d:	ins    BYTE PTR es:[edi],dx
  41ca6e:	fld    DWORD PTR [eax-0x58]
  41ca71:	mov    eax,0x3c16a63b
  41ca76:	ins    DWORD PTR es:[edi],dx
  41ca77:	jl     0x41ca27
  41ca79:	and    DWORD PTR [eax-0x110ef48c],0xa4512a6a
  41ca83:	inc    esp
  41ca84:	gs mov cl,0x3e
  41ca87:	out    dx,al
  41ca88:	pop    es
  41ca89:	push   eax
  41ca8a:	scas   eax,DWORD PTR es:[edi]
  41ca8b:	pushf  
  41ca8c:	sahf   
  41ca8d:	stos   DWORD PTR es:[edi],eax
  41ca8e:	jecxz  0x41ca73
  41ca90:	fsubp  st(1),st
  41ca92:	fdivr  QWORD PTR [ebx]
  41ca94:	dec    ebp
  41ca95:	(bad)  
  41ca96:	js     0x41ca3e
  41ca98:	cmp    dh,ch
  41ca9a:	loop   0x41cb17
  41ca9c:	(bad)  [ecx]
  41ca9e:	bound  ecx,QWORD PTR [esi+0x323ba86c]
  41caa4:	and    bl,BYTE PTR [esi+esi*2+0x3d]
  41caa8:	in     al,0x5f
  41caaa:	(bad)  
  41caab:	in     eax,dx
  41caac:	sar    BYTE PTR [eax+0x3729d288],0xc1
  41cab3:	xchg   ecx,eax
  41cab4:	das    
  41cab5:	sub    eax,esi
  41cab7:	aas    
  41cab8:	xchg   ebx,eax
  41cab9:	mov    bh,0x2e
  41cabb:	or     DWORD PTR [ecx+0x1d0496c],ebx
  41cac1:	inc    ebp
  41cac2:	xlat   BYTE PTR ds:[ebx]
  41cac3:	(bad)  
  41cac4:	aam    0x62
  41cac6:	adc    ebp,edi
  41cac8:	sub    bl,al
  41caca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cacb:	pop    ebx
  41cacc:	lods   al,BYTE PTR ds:[esi]
  41cacd:	push   eax
  41cace:	inc    edi
  41cacf:	repnz pusha 
  41cad1:	and    al,0x2b
  41cad3:	adc    cl,bl
  41cad5:	jg     0x41cad6
  41cad7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cad8:	mov    edi,0x33debfdc
  41cadd:	call   0xda32:0x21bc7ffe
  41cae4:	adc    eax,0xf27b31ae
  41cae9:	jmp    0xcfda:0xfec9dd7e
  41caf0:	rcr    dh,0x13
  41caf3:	test   eax,0x72409b3c
  41caf8:	mov    eax,0x5a38588c
  41cafd:	mov    edx,ebp
  41caff:	push   ds
  41cb00:	jns    0x41cabe
  41cb02:	iret   
  41cb03:	ds aas 
  41cb05:	jmp    0x41cae5
  41cb07:	sbb    eax,0xef5785a7
  41cb0c:	(bad)  
  41cb0d:	(bad)  
  41cb0e:	xchg   esp,eax
  41cb0f:	fiadd  DWORD PTR [esi]
  41cb11:	jl     0x41cb18
  41cb13:	sbb    edi,DWORD PTR [eax+0x66]
  41cb16:	in     al,dx
  41cb17:	aaa    
  41cb18:	dec    edx
  41cb19:	scas   eax,DWORD PTR es:[edi]
  41cb1a:	mov    al,ds:0x3b8690bf
  41cb1f:	pop    eax
  41cb20:	adc    al,0xbc
  41cb22:	arpl   cx,dx
  41cb24:	push   0x7916bef6
  41cb29:	shl    esp,1
  41cb2b:	adc    ebx,DWORD PTR [eax]
  41cb2d:	enter  0xc3c2,0xbc
  41cb31:	inc    ebx
  41cb32:	push   0xca973e85
  41cb37:	(bad)  
  41cb38:	daa    
  41cb39:	inc    ebx
  41cb3a:	adc    dl,BYTE PTR [edx-0x53]
  41cb3d:	fidivr DWORD PTR [ebx-0x5]
  41cb40:	pop    ebp
  41cb41:	out    0x36,al
  41cb43:	mov    bh,0x99
  41cb45:	ror    BYTE PTR [ebx-0x7b],0x7d
  41cb49:	jo     0x41cb87
  41cb4b:	das    
  41cb4c:	mov    bl,0xb0
  41cb4e:	jns    0x41cb21
  41cb50:	and    BYTE PTR [eax-0x13b8d0a8],cl
  41cb56:	xchg   BYTE PTR [ebx+0x4],bh
  41cb59:	setb   BYTE PTR [eax+0x7e595267]
  41cb60:	iret   
  41cb61:	jb     0x41caee
  41cb63:	and    esp,ebx
  41cb65:	movsx  ebx,cl
  41cb68:	in     eax,dx
  41cb69:	xchg   ecx,eax
  41cb6a:	jnp    0x41cbe1
  41cb6c:	icebp  
  41cb6d:	adc    ebx,edi
  41cb6f:	xor    al,0x49
  41cb71:	sub    cl,BYTE PTR [edx]
  41cb73:	push   esp
  41cb74:	push   edi
  41cb75:	xchg   DWORD PTR [edi-0x3ca1202],eax
  41cb7b:	jmp    0xaa6d:0x6c0d6048
  41cb82:	mov    edx,0x27e867f7
  41cb87:	loop   0x41cbfd
  41cb89:	jno    0x41cbb9
  41cb8b:	inc    eax
  41cb8c:	push   ebp
  41cb8d:	push   ebp
  41cb8e:	into   
  41cb8f:	mov    al,ds:0xeec0eb79
  41cb94:	pop    edi
  41cb95:	jp     0x41cb8a
  41cb97:	ins    BYTE PTR es:[edi],dx
  41cb98:	add    BYTE PTR [esi],al
  41cb9a:	(bad)  
  41cb9c:	mov    al,ds:0x88c2810d
  41cba1:	fsubr  QWORD PTR [edi-0x7b53e9f6]
  41cba7:	nop
  41cba8:	fcmove st,st(3)
  41cbaa:	inc    ecx
  41cbab:	in     al,0x73
  41cbad:	loope  0x41cb7c
  41cbaf:	ret    0x5752
  41cbb2:	shl    bh,0xcd
  41cbb5:	(bad)  
  41cbb6:	jecxz  0x41cb7c
  41cbb8:	sbb    ebx,DWORD PTR [ebx]
  41cbba:	cmp    dh,BYTE PTR ss:[esi-0x99e513c]
  41cbc1:	xor    edi,DWORD PTR [ebp-0x8]
  41cbc4:	lock xchg DWORD PTR [ecx],edi
  41cbc7:	icebp  
  41cbc8:	les    esi,FWORD PTR [ebx+edi*2+0x585a579d]
  41cbcf:	push   edx
  41cbd0:	fnstenv [edi]
  41cbd2:	and    DWORD PTR [ebp-0x44e4e23f],ebx
  41cbd8:	sbb    DWORD PTR [esi-0x1e317554],edi
  41cbde:	clc    
  41cbdf:	adc    BYTE PTR [ebx+0x1e],0xf5
  41cbe3:	xor    eax,0x4c945c3c
  41cbe8:	sbb    DWORD PTR [edx],0xffffff8f
  41cbeb:	aas    
  41cbec:	cmp    dl,bh
  41cbee:	jg     0x41cba0
  41cbf0:	jmp    0x5c2f8fae
  41cbf5:	sbb    BYTE PTR ds:0x75530c2d,dl
  41cbfb:	xchg   edi,eax
  41cbfc:	cmp    BYTE PTR [edx],bh
  41cbfe:	mov    al,0x51
  41cc00:	sub    DWORD PTR [edi+eax*1+0x25c2e5ca],edx
  41cc07:	dec    esi
  41cc08:	lds    edi,FWORD PTR [edx+0x9]
  41cc0b:	ins    DWORD PTR es:[edi],dx
  41cc0c:	repnz dec edx
  41cc0e:	rcl    DWORD PTR [ebp-0x58],cl
  41cc11:	mov    eax,ds:0x621c7d9e
  41cc16:	inc    esp
  41cc17:	ins    BYTE PTR es:[edi],dx
  41cc18:	jmp    0x1003:0x124280ae
  41cc1f:	repz fistp WORD PTR [ecx+eax*1-0x55a30a64]
  41cc27:	das    
  41cc28:	rep outs dx,DWORD PTR ds:[esi]
  41cc2a:	sbb    al,0x97
  41cc2c:	xchg   DWORD PTR [edi+eiz*2+0x1c],edi
  41cc30:	lods   al,BYTE PTR ds:[esi]
  41cc31:	jbe    0x41cc76
  41cc33:	or     al,0x9c
  41cc35:	dec    ebx
  41cc36:	lds    ebx,FWORD PTR [eax]
  41cc38:	mov    ebx,0x5e99c5ee
  41cc3d:	jle    0x41cbd8
  41cc3f:	daa    
  41cc40:	(bad)  
  41cc41:	pop    esp
  41cc42:	lods   eax,DWORD PTR ds:[esi]
  41cc43:	test   eax,0xe701b09a
  41cc48:	pushf  
  41cc49:	jns    0x41cc82
  41cc4b:	std    
  41cc4c:	cdq    
  41cc4d:	fbld   TBYTE PTR [ebp+0x5a7750a7]
  41cc53:	sub    ecx,eax
  41cc55:	and    bh,dh
  41cc57:	sub    al,0x79
  41cc59:	mov    bh,bl
  41cc5b:	mov    WORD PTR [edi],es
  41cc5d:	or     eax,0x91c69f86
  41cc62:	adc    edi,ebx
  41cc64:	jmp    0xe211701a
  41cc69:	and    bh,bl
  41cc6b:	fcmovnu st,st(4)
  41cc6d:	inc    edi
  41cc6e:	in     al,0xeb
  41cc70:	adc    BYTE PTR [esi+esi*2],0xe1
  41cc74:	pop    ss
  41cc75:	lods   al,BYTE PTR ds:[esi]
  41cc76:	mov    al,0x49
  41cc78:	sub    BYTE PTR [ebp-0x5fcb1bc5],bh
  41cc7e:	xlat   BYTE PTR ds:[ebx]
  41cc7f:	repnz and DWORD PTR [eax+0x412cc16c],0xa47ff45b
  41cc8a:	ja     0x41cd00
  41cc8c:	jbe    0x41ccab
  41cc8e:	ins    BYTE PTR es:[edi],dx
  41cc8f:	mov    ecx,0xfe8ee2a0
  41cc94:	xchg   esi,eax
  41cc95:	jns    0x41cc36
  41cc97:	punpckldq mm2,DWORD PTR [edi+0x175b938f]
  41cc9e:	std    
  41cc9f:	mov    al,ds:0x36994d0d
  41cca4:	mov    al,ds:0x86e3d4e2
  41cca9:	jecxz  0x41ccb6
  41ccab:	fabs   
  41ccad:	adc    al,0xc2
  41ccaf:	enter  0x84c2,0x49
  41ccb3:	push   esi
  41ccb4:	xor    al,0xa2
  41ccb6:	cs je  0x41cc87
  41ccb9:	mov    ds,WORD PTR [edi+0x7a]
  41ccbc:	inc    ecx
  41ccbd:	adc    al,0x3f
  41ccbf:	push   ebx
  41ccc0:	fscale 
  41ccc2:	daa    
  41ccc3:	xchg   esi,eax
  41ccc4:	bound  ebp,QWORD PTR [edx]
  41ccc6:	jno    0x41cce8
  41ccc8:	lahf   
  41ccc9:	out    0x12,al
  41cccb:	loopne 0x41cd05
  41cccd:	cmp    al,0xfa
  41cccf:	inc    ecx
  41ccd0:	mov    dh,0x80
  41ccd2:	and    DWORD PTR [edi-0x2c],edi
  41ccd5:	ds loop 0x41cc88
  41ccd8:	mov    al,ds:0x430b72b5
  41ccdd:	pop    edi
  41ccde:	lock sub bl,BYTE PTR es:[eax-0x5b4aa54]
  41cce6:	add    DWORD PTR fs:[esi],esi
  41cce9:	adc    dl,dh
  41cceb:	pop    es
  41ccec:	inc    ebx
  41cced:	inc    eax
  41ccee:	mov    DWORD PTR [ebx-0x2c],esp
  41ccf1:	pusha  
  41ccf2:	mov    WORD PTR [edx-0x27],ds
  41ccf5:	in     al,0x8c
  41ccf7:	xchg   DWORD PTR [edi+0x4c],esp
  41ccfa:	loope  0x41cc9a
  41ccfc:	(bad)  
  41ccfd:	cmp    eax,0x47f9a154
  41cd02:	add    al,0xc1
  41cd04:	jg     0x41ccfa
  41cd06:	mov    bl,0x4f
  41cd08:	retf   
  41cd09:	imul   ecx,DWORD PTR [eax*4+0x5f26a8a5],0xd3a64fa3
  41cd14:	inc    edi
  41cd15:	(bad)  
  41cd16:	fs adc al,0xd6
  41cd19:	in     al,0xab
  41cd1b:	jle    0x41cd69
  41cd1d:	(bad)  
  41cd1f:	shl    BYTE PTR [ebx+0x7404f404],0x5d
  41cd26:	ins    DWORD PTR es:[edi],dx
  41cd27:	xchg   DWORD PTR [edi+0x30],esp
  41cd2a:	and    al,0xd7
  41cd2c:	test   eax,0x9e61589e
  41cd31:	mov    bl,cl
  41cd33:	xor    dh,bl
  41cd35:	retf   0xf831
  41cd38:	pop    esi
  41cd39:	add    dl,BYTE PTR [edi+0x5c1f8b6a]
  41cd3f:	or     BYTE PTR [edx-0x26],dh
  41cd42:	iret   
  41cd43:	sahf   
  41cd44:	pop    esi
  41cd45:	test   BYTE PTR [ebp+0x12],ah
  41cd48:	sti    
  41cd49:	fsub   st,st(7)
  41cd4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd4c:	mov    esp,0xd397858f
  41cd51:	add    eax,0x3964424e
  41cd56:	addr16 push ds
  41cd58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd59:	shl    DWORD PTR [ecx],cl
  41cd5b:	xchg   ebx,eax
  41cd5c:	mov    ecx,DWORD PTR [ebx-0x6f]
  41cd5f:	movsx  ebx,BYTE PTR [ebx+0x650d7aa7]
  41cd66:	add    eax,0xf0b2c7d2
  41cd6b:	push   ds
  41cd6c:	cld    
  41cd6d:	aam    0x7e
  41cd6f:	jb     0x41cdae
  41cd71:	retf   0x9dd5
  41cd74:	mov    WORD PTR [ebp+0x4bafe80e],fs
  41cd7a:	xchg   edi,eax
  41cd7b:	std    
  41cd7c:	sti    
  41cd7d:	xlat   BYTE PTR ds:[ebx]
  41cd7e:	lods   al,BYTE PTR ds:[esi]
  41cd7f:	stos   BYTE PTR es:[edi],al
  41cd80:	fld    QWORD PTR [ebx]
  41cd82:	jp     0x41cd86
  41cd84:	xor    bh,dl
  41cd86:	sti    
  41cd87:	mul    BYTE PTR ds:0xa425f60a
  41cd8d:	jne    0x41cde1
  41cd8f:	arpl   bp,di
  41cd91:	jnp    0x41cda8
  41cd93:	push   ebp
  41cd94:	xchg   esp,eax
  41cd95:	push   edx
  41cd96:	jns    0x41cd35
  41cd98:	sbb    ebp,DWORD PTR [ecx+0x1f9cca4a]
  41cd9e:	outs   dx,BYTE PTR ds:[esi]
  41cd9f:	dec    esp
  41cda0:	and    DWORD PTR [ebx+0x1d],edx
  41cda3:	mov    esi,0x8a19ab35
  41cda8:	cmp    al,BYTE PTR [ebx-0x62]
  41cdab:	adc    ebx,DWORD PTR [edx+0x49467df7]
  41cdb1:	push   0x6f31060a
  41cdb6:	mov    esi,0xeae27569
  41cdbb:	gs data16 mov ch,0xad
  41cdbf:	aam    0x33
  41cdc1:	int    0x7b
  41cdc3:	dec    ebp
  41cdc4:	jg     0x41cdd7
  41cdc6:	out    0xd9,eax
  41cdc8:	jecxz  0x41cd86
  41cdca:	cdq    
  41cdcb:	xchg   dl,al
  41cdcd:	out    dx,eax
  41cdce:	xor    al,0xd5
  41cdd0:	test   DWORD PTR ds:0x6c6987a3,ebx
  41cdd6:	jmp    0x9358474c
  41cddb:	cmp    eax,0xb7ab089c
  41cde0:	mov    edi,0x42635e63
  41cde5:	fs enter 0xbe2c,0x8c
  41cdea:	fisttp WORD PTR [edx+0x4bce0530]
  41cdf0:	push   ss
  41cdf1:	inc    esi
  41cdf2:	mov    ah,BYTE PTR [eax-0x38b3560e]
  41cdf8:	hlt    
  41cdf9:	stc    
  41cdfa:	lea    edi,[edx-0x2d4e430d]
  41ce00:	(bad)  
  41ce01:	sub    eax,0xf93ab33b
  41ce06:	es mov dl,0x13
  41ce09:	in     eax,dx
  41ce0a:	sub    DWORD PTR [ebp+0x62904e60],esp
  41ce10:	pushf  
  41ce11:	dec    esi
  41ce12:	mov    bl,0x59
  41ce14:	and    esp,DWORD PTR [ebp-0x60173a8e]
  41ce1a:	lahf   
  41ce1b:	jge    0x41cded
  41ce1d:	dec    edi
  41ce1e:	int    0x1a
  41ce20:	pop    ss
  41ce21:	js     0x41ce12
  41ce23:	add    DWORD PTR [ebx],edx
  41ce25:	mov    ds:0xe44d4d13,al
  41ce2a:	aad    0x57
  41ce2c:	or     dh,0x91
  41ce2f:	pusha  
  41ce30:	stc    
  41ce31:	jle    0x41ce3f
  41ce33:	mov    al,ds:0x5520cf9e
  41ce38:	das    
  41ce39:	mov    bh,0xaf
  41ce3b:	sbb    esp,DWORD PTR [edi]
  41ce3d:	mov    ds:0x97a3b709,al
  41ce42:	mov    eax,ds:0xc6386984
  41ce47:	and    bl,BYTE PTR [ebx]
  41ce49:	les    edx,FWORD PTR gs:[ebp+0x9]
  41ce4d:	pop    ss
  41ce4e:	mov    eax,0xe4cf2be4
  41ce53:	icebp  
  41ce54:	pushf  
  41ce55:	dec    ebp
  41ce56:	push   0x36
  41ce58:	ror    DWORD PTR [eax],0x96
  41ce5b:	xchg   ebp,eax
  41ce5c:	inc    esp
  41ce5d:	(bad)  
  41ce5e:	jb     0x41cedf
  41ce60:	adc    esi,DWORD PTR [eax+edi*2-0x48]
  41ce64:	adc    ah,BYTE PTR [ebp-0x49]
  41ce67:	jnp    0x41ce9f
  41ce69:	pop    eax
  41ce6a:	loop   0x41cecf
  41ce6c:	jg     0x41cec6
  41ce6e:	aam    0xcd
  41ce70:	sbb    esi,edx
  41ce72:	lea    edx,[esi+0x6]
  41ce75:	sahf   
  41ce76:	outs   dx,BYTE PTR ds:[esi]
  41ce77:	sbb    DWORD PTR [edi+0x12],esp
  41ce7a:	lea    eax,[ebx+0x22f5c0aa]
  41ce80:	in     al,dx
  41ce81:	sub    eax,0x3b9b1ff2
  41ce86:	mov    esi,0xc8ff5b36
  41ce8b:	bound  edx,QWORD PTR [ebx+0x1eec5073]
  41ce91:	dec    ebx
  41ce92:	call   FWORD PTR [eax-0x1f]
  41ce95:	mov    DWORD PTR [eax-0x31c581e0],0x16b767
  41ce9f:	push   esi
  41cea0:	hlt    
  41cea1:	int    0x2b
  41cea3:	fcomi  st,st(7)
  41cea5:	cmp    al,0xff
  41cea7:	outs   dx,DWORD PTR ds:[esi]
  41cea8:	mov    dl,0x5a
  41ceaa:	imul   ebp,DWORD PTR [ecx+ebx*8],0xffffff80
  41ceae:	and    DWORD PTR [ebx+0x1c],ebx
  41ceb1:	mov    ebp,0x3bf66f38
  41ceb6:	cwde   
  41ceb7:	cmp    eax,0xdaadedca
  41cebc:	cmp    dl,BYTE PTR [edx-0x11520da5]
  41cec2:	push   ds
  41cec3:	ss push es
  41cec5:	clc    
  41cec6:	mov    esp,DWORD PTR [eax+0x69]
  41cec9:	push   es
  41ceca:	js     0x41cf0f
  41cecc:	cmc    
  41cecd:	xchg   edi,eax
  41cece:	in     eax,dx
  41cecf:	sub    DWORD PTR [edx+0x1],0xffffffc9
  41ced3:	mov    ds:0x17993d23,eax
  41ced8:	imul   esi,ecx,0x18
  41cedb:	dec    ecx
  41cedc:	std    
  41cedd:	or     al,0xcd
  41cedf:	or     DWORD PTR [edi+0x34],esi
  41cee2:	push   eax
  41cee3:	mov    ds:0x7d391373,al
  41cee8:	mov    bh,BYTE PTR [esp+edx*8-0x26eeb4e0]
  41ceef:	ins    BYTE PTR es:[edi],dx
  41cef0:	push   edi
  41cef1:	repnz mov eax,ds:0x4a768f0c
  41cef7:	(bad)  
  41cef8:	ror    BYTE PTR [ecx-0x25],1
  41cefb:	or     eax,0x8e71cac9
  41cf00:	in     al,0xc
  41cf02:	jnp    0x41ceda
  41cf04:	test   ch,0x98
  41cf07:	pop    es
  41cf08:	mov    edx,0xcee43f0b
  41cf0d:	dec    edi
  41cf0e:	xor    bh,al
  41cf10:	push   ebp
  41cf11:	pop    edi
  41cf12:	jmp    FWORD PTR [ecx+0x1d]
  41cf15:	and    ecx,DWORD PTR [eax+0x24a2bd79]
  41cf1b:	inc    ebp
  41cf1c:	fld    DWORD PTR [eax+0x6aa3e365]
  41cf22:	xchg   ebp,eax
  41cf23:	push   cs
  41cf24:	pop    esp
  41cf25:	sbb    DWORD PTR [edx-0x21],ebx
  41cf28:	xchg   ecx,eax
  41cf29:	cld    
  41cf2a:	and    DWORD PTR [eax+eax*1+0x1],0x6f
  41cf2f:	stos   BYTE PTR es:[edi],al
  41cf30:	stos   BYTE PTR es:[edi],al
  41cf31:	mov    ecx,0x832749e0
  41cf36:	dec    ecx
  41cf37:	fist   DWORD PTR [edi-0x22]
  41cf3a:	shl    BYTE PTR [ebx+edi*4-0x29],cl
  41cf3e:	pushf  
  41cf3f:	(bad)  
  41cf40:	aas    
  41cf41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf42:	(bad)  
  41cf43:	fnstcw WORD PTR [ebx+0x5f]
  41cf46:	xor    eax,0xad276b6f
  41cf4b:	(bad)  
  41cf4c:	ins    DWORD PTR es:[edi],dx
  41cf4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf4e:	nop
  41cf4f:	or     bl,BYTE PTR [eax-0x52]
  41cf52:	cld    
  41cf53:	dec    esp
  41cf54:	aam    0xe8
  41cf56:	jne    0x41cf4f
  41cf58:	arpl   dx,ax
  41cf5a:	mov    ds:0x52ae5df8,eax
  41cf5f:	pop    ebx
  41cf60:	data16 jns 0x41cf5f
  41cf63:	or     eax,0xd8efee5c
  41cf68:	jecxz  0x41cfc0
  41cf6a:	mov    ds:0x82b944e1,al
  41cf6f:	lea    esp,[esp+eiz*8-0x76]
  41cf73:	cmp    ecx,DWORD PTR [ebx]
  41cf75:	jmp    0x41cf83
  41cf77:	imul   ebx,edi,0x5a84901f
  41cf7d:	sub    al,BYTE PTR [eax]
  41cf7f:	repnz scas eax,DWORD PTR es:[edi]
  41cf81:	jecxz  0x41cf09
  41cf83:	out    0x2c,al
  41cf85:	in     al,dx
  41cf86:	sub    al,0xe1
  41cf88:	xchg   BYTE PTR [ecx+esi*4],dh
  41cf8b:	push   esp
  41cf8c:	pop    ds
  41cf8d:	ror    DWORD PTR [ebx+edx*2],0xf7
  41cf91:	sub    eax,0xc2f43b1b
  41cf96:	inc    ebp
  41cf97:	xchg   ebx,eax
  41cf98:	sbb    al,0x38
  41cf9a:	scas   eax,DWORD PTR es:[edi]
  41cf9b:	add    BYTE PTR [ebx],ch
  41cf9d:	xor    BYTE PTR [esi+0x2d],bh
  41cfa0:	mov    esp,0xcc50de13
  41cfa5:	xchg   esp,eax
  41cfa6:	jle    0x41cfb6
  41cfa8:	cs arpl ax,ax
  41cfab:	cdq    
  41cfac:	mov    ds,WORD PTR [ecx+0x7b]
  41cfaf:	(bad)  
  41cfb0:	fdivr  DWORD PTR ds:0x11a2d72c
  41cfb6:	cmp    al,0xf6
  41cfb8:	xchg   BYTE PTR [edi],ah
  41cfba:	push   0x8d3151e9
  41cfbf:	shl    BYTE PTR [esi],cl
  41cfc1:	or     al,0x10
  41cfc3:	loope  0x41d009
  41cfc5:	jle    0x41d02e
  41cfc7:	sub    eax,0x4ddde28d
  41cfcc:	and    eax,0xd710d816
  41cfd1:	pushf  
  41cfd2:	aaa    
  41cfd3:	cdq    
  41cfd4:	outs   dx,BYTE PTR ds:[esi]
  41cfd5:	or     eax,0x2c0acf58
  41cfda:	dec    ecx
  41cfdb:	shl    BYTE PTR [ebp-0x23f3982],0x6d
  41cfe2:	push   ss
  41cfe3:	outs   dx,DWORD PTR ds:[esi]
  41cfe4:	jle    0x41cff7
  41cfe6:	loope  0x41cfb4
  41cfe8:	test   al,0x90
  41cfea:	int3   
  41cfeb:	mov    al,ds:0x2222dce
  41cff0:	jnp    0x41cfcc
  41cff2:	xchg   ebp,eax
  41cff3:	lods   al,BYTE PTR ds:[esi]
  41cff4:	xchg   BYTE PTR [edx-0x276b9c97],ah
  41cffa:	push   cs
  41cffb:	lods   eax,DWORD PTR ds:[esi]
  41cffc:	lahf   
  41cffd:	mov    al,0x7b
  41cfff:	in     eax,0x69
  41d001:	add    cl,BYTE PTR [esi+0x11]
  41d004:	mov    ds:0x734cd1c6,eax
  41d009:	fdiv   st(6),st
  41d00b:	inc    eax
  41d00c:	cmp    DWORD PTR [eax+0x5fe9adf],eax
  41d012:	rcl    dh,0x4c
  41d015:	add    BYTE PTR [eax],dh
  41d017:	test   DWORD PTR [eax-0x5bddbd66],0xd01349c7
  41d021:	and    BYTE PTR [ebp+0x7f],bh
  41d024:	enter  0x997f,0x62
  41d028:	aaa    
  41d029:	loop   0x41d054
  41d02b:	sub    DWORD PTR [esi],ebx
  41d02d:	aas    
  41d02e:	cld    
  41d02f:	cli    
  41d030:	mov    esp,DWORD PTR [ebx+0x3a]
  41d033:	mov    dh,0x94
  41d035:	stos   DWORD PTR es:[edi],eax
  41d036:	or     dl,bh
  41d038:	icebp  
  41d039:	pusha  
  41d03a:	dec    ebp
  41d03b:	clc    
  41d03c:	add    esi,DWORD PTR ss:[edx-0x19]
  41d040:	xor    bh,BYTE PTR [edi]
  41d042:	rcr    DWORD PTR [ecx-0x6a399efb],0xc7
  41d049:	adc    DWORD PTR [eax+0x48e0164],esi
  41d04f:	leave  
  41d050:	pop    ebx
  41d051:	shl    DWORD PTR [edx+edi*1],cl
  41d054:	fucomip st,st(3)
  41d056:	in     eax,0x2
  41d058:	xchg   ebp,eax
  41d059:	sahf   
  41d05a:	lods   al,BYTE PTR ds:[esi]
  41d05b:	and    BYTE PTR [ebp+0x5c],al
  41d05e:	out    0x8c,al
  41d060:	inc    ebp
  41d061:	cmp    eax,DWORD PTR [edi]
  41d063:	in     eax,0xaf
  41d065:	not    BYTE PTR [ebx]
  41d067:	dec    eax
  41d068:	stos   BYTE PTR es:[edi],al
  41d069:	in     eax,0x83
  41d06b:	or     ebp,DWORD PTR [ebx]
  41d06d:	fidiv  WORD PTR [ebx+0x60]
  41d070:	inc    ecx
  41d071:	mov    ah,0x52
  41d073:	pop    es
  41d074:	sub    DWORD PTR [edi],ecx
  41d076:	repnz inc ebx
  41d078:	sub    al,0x2d
  41d07a:	dec    ecx
  41d07b:	outs   dx,DWORD PTR ds:[esi]
  41d07c:	(bad)  
  41d07e:	or     edi,DWORD PTR [edi+0x60f48a4b]
  41d084:	(bad)  
  41d085:	stos   DWORD PTR es:[edi],eax
  41d086:	sub    bl,BYTE PTR [ebx-0x30]
  41d089:	sbb    eax,0x89314f67
  41d08e:	pop    ecx
  41d08f:	imul   ecx,esi,0xffffff8a
  41d092:	xchg   esi,eax
  41d093:	mov    esi,?
  41d095:	pop    esi
  41d096:	xor    BYTE PTR gs:[edi+0x8],al
  41d09a:	in     eax,0x27
  41d09c:	pop    esp
  41d09d:	dec    ebp
  41d09e:	mov    es:0x70300a16,eax
  41d0a4:	mov    al,ds:0x3be371c0
  41d0a9:	or     DWORD PTR [edx],esi
  41d0ab:	aaa    
  41d0ac:	loope  0x41d077
  41d0ae:	pushf  
  41d0af:	clc    
  41d0b0:	or     ah,BYTE PTR [ebx+ebx*8+0x37]
  41d0b4:	stc    
  41d0b5:	xchg   esi,eax
  41d0b6:	ins    DWORD PTR es:[edi],dx
  41d0b7:	add    eax,0xdffa616e
  41d0bc:	and    eax,0xd7a947a0
  41d0c1:	mov    DWORD PTR [ebx+0x32f0856],ebp
  41d0c7:	cmp    BYTE PTR [edx],ch
  41d0c9:	int    0x2a
  41d0cb:	dec    edx
  41d0cc:	add    edx,DWORD PTR [esi+0x5cd685e8]
  41d0d2:	fild   QWORD PTR [ebp+0x6f]
  41d0d5:	push   ecx
  41d0d6:	sbb    ch,BYTE PTR [edx-0x6d1d0920]
  41d0dc:	push   0x456eb4a0
  41d0e1:	cmp    bl,ah
  41d0e3:	and    al,0xd1
  41d0e5:	push   edx
  41d0e6:	into   
  41d0e7:	sti    
  41d0e8:	(bad)  
  41d0e9:	ja     0x41d0cf
  41d0eb:	sbb    al,0x2a
  41d0ed:	(bad)  
  41d0ee:	dec    ecx
  41d0ef:	add    DWORD PTR [esi-0x6ea4a6a3],edx
  41d0f5:	cmp    eax,0x4b26c571
  41d0fa:	pusha  
  41d0fb:	imul   esi,eax,0xffffffc7
  41d0fe:	hlt    
  41d0ff:	mov    cl,0x82
  41d101:	out    0x56,al
  41d103:	sahf   
  41d104:	dec    edi
  41d105:	xchg   BYTE PTR ss:[ebp+0x4ec6b147],cl
  41d10c:	imul   ebx,eax,0x4d47a983
  41d112:	mov    esi,0xbb4a7932
  41d117:	lahf   
  41d118:	scas   eax,DWORD PTR es:[edi]
  41d119:	dec    ebp
  41d11a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d11b:	ret    
  41d11c:	pop    eax
  41d11d:	adc    DWORD PTR [eax],edx
  41d11f:	sbb    ebp,DWORD PTR [ebp+0x3e]
  41d122:	outs   dx,DWORD PTR ds:[esi]
  41d123:	pushf  
  41d124:	imul   ebp,DWORD PTR ds:0xa6c8611c,0xb2c94f01
  41d12e:	popa   
  41d12f:	loope  0x41d184
  41d131:	xchg   edx,eax
  41d132:	ss into 
  41d134:	rol    DWORD PTR [ebp+0x7e],1
  41d137:	xchg   BYTE PTR [edx],bl
  41d139:	or     ecx,ebx
  41d13b:	xchg   esp,eax
  41d13c:	fdiv   QWORD PTR [eax-0x7c]
  41d13f:	mov    DWORD PTR [ebx],edx
  41d141:	and    BYTE PTR [eax-0x54300a24],ah
  41d147:	push   0x68
  41d149:	jle    0x41d1c3
  41d14b:	xchg   edx,eax
  41d14c:	or     BYTE PTR [edi+0x66820829],al
  41d152:	adc    eax,0xc2b88581
  41d157:	cmp    BYTE PTR [ebx-0x478c2681],0x23
  41d15e:	mov    ds:0x29bc546c,eax
  41d163:	push   ebp
  41d164:	mov    edx,0xae907ab8
  41d169:	sti    
  41d16a:	xchg   BYTE PTR [ecx],bh
  41d16c:	out    dx,al
  41d16d:	adc    bl,BYTE PTR [ebx]
  41d16f:	retf   0x180
  41d172:	mov    esi,0x24513fb4
  41d177:	sub    DWORD PTR [esi-0x7b],esi
  41d17a:	inc    edx
  41d17b:	sub    BYTE PTR [ebx],ah
  41d17d:	fadd   st,st(4)
  41d17f:	pop    ecx
  41d180:	push   ss
  41d181:	adc    BYTE PTR [edi-0x37eeefef],0x37
  41d188:	das    
  41d189:	push   0xffffffef
  41d18b:	in     eax,0x21
  41d18d:	nop
  41d18e:	mov    al,BYTE PTR [ebx-0x27]
  41d191:	xor    ebx,DWORD PTR [eax-0x76]
  41d194:	jmp    0x41d18c
  41d196:	mov    bl,0x83
  41d198:	nop
  41d199:	or     DWORD PTR [ecx+0x2419a5bb],0x53
  41d1a0:	mov    esi,0x4f8667de
  41d1a5:	mov    bl,dh
  41d1a7:	mov    edi,0x6c1ca1a5
  41d1ac:	iret   
  41d1ad:	repz loope 0x41d195
  41d1b0:	mov    ebp,0x75a97460
  41d1b5:	sub    ebp,ebx
  41d1b7:	(bad)  
  41d1b8:	outs   dx,BYTE PTR ds:[esi]
  41d1b9:	add    dh,BYTE PTR [edx]
  41d1bb:	in     al,0x6f
  41d1bd:	jns    0x41d15d
  41d1bf:	inc    ebx
  41d1c0:	pop    edx
  41d1c1:	out    0xc4,eax
  41d1c3:	sbb    DWORD PTR [eax+0x26],edi
  41d1c6:	ror    DWORD PTR [esi-0xc144c2c],cl
  41d1cc:	mul    ebp
  41d1ce:	dec    edx
  41d1cf:	call   0x2f9b0aff
  41d1d4:	fsubrp st(2),st
  41d1d6:	dec    ebx
  41d1d7:	outs   dx,BYTE PTR ds:[esi]
  41d1d8:	or     cl,BYTE PTR ds:0x91b92783
  41d1de:	daa    
  41d1df:	dec    ecx
  41d1e0:	je     0x41d24e
  41d1e2:	mov    bl,0xd2
  41d1e4:	mov    DWORD PTR [ecx],ebp
  41d1e6:	arpl   WORD PTR [edx+0x3e2f088e],cx
  41d1ec:	push   ds
  41d1ed:	dec    ebx
  41d1ee:	push   0x2b
  41d1f0:	pop    esi
  41d1f1:	addr16 js 0x41d24f
  41d1f4:	push   ss
  41d1f5:	xchg   DWORD PTR [ecx],esi
  41d1f7:	shl    DWORD PTR [ecx+0x5a],cl
  41d1fa:	pop    edx
  41d1fb:	pop    edx
  41d1fc:	mov    edi,0xab0aa5d0
  41d201:	lods   al,BYTE PTR ds:[esi]
  41d202:	cmp    ecx,DWORD PTR [eax+0x5]
  41d205:	cmp    edi,ebp
  41d207:	gs shr ebx,1
  41d20a:	push   cs
  41d20b:	rol    DWORD PTR [edx-0x7790a7c9],0x11
  41d212:	ret    0xe262
  41d215:	adc    BYTE PTR [eax-0x113aad2d],0x6c
  41d21c:	data16 ins BYTE PTR es:[edi],dx
  41d21e:	push   ebp
  41d21f:	test   al,0x28
  41d221:	rcl    dl,1
  41d223:	pop    ebp
  41d224:	cmp    DWORD PTR [ecx],0xebc5a764
  41d22a:	arpl   WORD PTR [eax+edx*2-0x55],bx
  41d22e:	mov    bl,0x66
  41d230:	sti    
  41d231:	pushf  
  41d232:	xor    eax,0x7eb818e1
  41d237:	stc    
  41d238:	ret    0x3917
  41d23b:	retf   0x9aa6
  41d23e:	lahf   
  41d23f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d240:	inc    ebx
  41d241:	mov    eax,0x568b7c1f
  41d246:	jecxz  0x41d263
  41d248:	mov    eax,ds:0x7483eaa
  41d24d:	dec    eax
  41d24e:	test   DWORD PTR [ecx-0x5e749ba8],ecx
  41d254:	push   edx
  41d255:	in     eax,0x5a
  41d257:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d258:	popf   
  41d259:	cmp    BYTE PTR [eax],0xd6
  41d25c:	pop    ds
  41d25d:	mov    esi,esp
  41d25f:	mov    bh,0xd6
  41d261:	cmp    DWORD PTR [edx],eax
  41d263:	cdq    
  41d264:	fist   DWORD PTR [edi+0x51]
  41d267:	ds loope 0x41d2c9
  41d26a:	les    esp,FWORD PTR [ecx]
  41d26c:	ins    BYTE PTR es:[edi],dx
  41d26d:	(bad)  
  41d26e:	std    
  41d26f:	xor    bl,BYTE PTR [eiz*8+0x6887d4da]
  41d276:	pop    ss
  41d277:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d278:	mov    dh,cl
  41d27a:	inc    esp
  41d27b:	sub    DWORD PTR [bx],esi
  41d27e:	lock inc ebp
  41d280:	xchg   ebp,eax
  41d281:	adc    eax,0xa768e66
  41d286:	je     0x41d28c
  41d288:	sbb    BYTE PTR [ebp+0x401baff9],0x47
  41d28f:	mov    ecx,0x1c96fc3
  41d294:	or     ecx,DWORD PTR [ecx-0x71072986]
  41d29a:	fist   DWORD PTR [edx+0x4f]
  41d29d:	clc    
  41d29e:	jg     0x41d2c2
  41d2a0:	pop    esi
  41d2a1:	imul   DWORD PTR ds:0xa07cc87e
  41d2a7:	sbb    esp,esi
  41d2a9:	add    eax,0xd142a7bf
  41d2ae:	inc    eax
  41d2af:	adc    al,0x6
  41d2b2:	fidivr DWORD PTR [esi+0x5a]
  41d2b5:	nop
  41d2b6:	mov    ecx,0x707e060
  41d2bb:	push   ds
  41d2bc:	scas   eax,DWORD PTR es:[edi]
  41d2bd:	fiadd  WORD PTR [edi]
  41d2bf:	loopne 0x41d276
  41d2c1:	(bad)  
  41d2c2:	push   0x3b925856
  41d2c7:	jmp    FWORD PTR [ecx+0x7f]
  41d2ca:	lahf   
  41d2cb:	mov    edx,0xbb3c8184
  41d2d0:	push   ds
  41d2d1:	scas   eax,DWORD PTR es:[edi]
  41d2d2:	sbb    edx,ecx
  41d2d4:	inc    esp
  41d2d5:	aam    0xe7
  41d2d7:	test   eax,0x98bf6c58
  41d2dc:	not    DWORD PTR [eax-0x34d463a0]
  41d2e2:	scas   eax,DWORD PTR es:[edi]
  41d2e3:	addr16 inc esp
  41d2e5:	(bad)  
  41d2e6:	push   DWORD PTR [ebx+0x2c2d9158]
  41d2ec:	arpl   WORD PTR [esi+0x22afba44],cx
  41d2f2:	fadd   QWORD PTR [esi]
  41d2f4:	das    
  41d2f5:	xor    ecx,eax
  41d2f7:	push   esp
  41d2f8:	inc    ebp
  41d2f9:	adc    ebx,edi
  41d2fb:	jmp    0x90ccf652
  41d300:	mov    dl,0xe2
  41d302:	add    DWORD PTR [ebx],eax
  41d304:	add    cl,ah
  41d306:	call   0x5e1295d
  41d30b:	jmp    0x41d298
  41d30d:	or     al,0xf2
  41d30f:	lock mov esp,0x3387b290
  41d315:	xor    dl,BYTE PTR [ecx+0x2b]
  41d318:	xlat   BYTE PTR ds:[ebx]
  41d319:	cmp    BYTE PTR [edi],0x6c
  41d31c:	cs sub al,0x4b
  41d31f:	inc    BYTE PTR [edx+eiz*4-0x63]
  41d323:	in     eax,0x7a
  41d325:	loope  0x41d396
  41d327:	push   esi
  41d328:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d329:	add    ebx,esi
  41d32b:	mov    bh,0x1e
  41d32d:	ds lahf 
  41d32f:	fwait
  41d330:	nop
  41d331:	setae  BYTE PTR [ebx-0x28b395a4]
  41d338:	xor    ecx,DWORD PTR [esi]
  41d33a:	xchg   esi,eax
  41d33b:	into   
  41d33c:	push   ds
  41d33d:	mov    fs,WORD PTR [edx]
  41d33f:	stos   DWORD PTR es:[edi],eax
  41d340:	fdivr  DWORD PTR [edi]
  41d342:	jno    0x41d331
  41d344:	jecxz  0x41d2e0
  41d346:	(bad)  
  41d347:	fs in  al,0x91
  41d34a:	nop
  41d34b:	cmovg  esp,DWORD PTR [ecx]
  41d34e:	push   edx
  41d34f:	adc    eax,0xffc4236b
  41d354:	pop    ebp
  41d355:	lahf   
  41d356:	jmp    0x572cb7bb
  41d35b:	mov    bl,ah
  41d35d:	sti    
  41d35e:	add    bh,BYTE PTR [eax+0x2cd92242]
  41d364:	int3   
  41d365:	popf   
  41d366:	sbb    BYTE PTR [eax],dh
  41d368:	jmp    0x870b68f
  41d36d:	pusha  
  41d36e:	jno    0x41d3e0
  41d370:	mov    BYTE PTR ds:0x3e50048c,bh
  41d376:	sbb    eax,0x1f7fe5a7
  41d37b:	mul    dh
  41d37d:	mov    cl,0x63
  41d37f:	cmp    BYTE PTR [eax],dl
  41d381:	fild   WORD PTR ds:0x48980596
  41d387:	sbb    eax,0x99900a1a
  41d38c:	mul    DWORD PTR [ecx-0x50e2242e]
  41d392:	dec    ebx
  41d393:	stos   BYTE PTR es:[edi],al
  41d394:	add    DWORD PTR [edi],ecx
  41d396:	ins    BYTE PTR es:[edi],dx
  41d397:	int3   
  41d398:	mov    BYTE PTR [edx+0x434c0297],ah
  41d39e:	push   cs
  41d39f:	out    dx,eax
  41d3a0:	fdivr  DWORD PTR [edx]
  41d3a2:	mov    esi,0xd7c04f88
  41d3a7:	retf   
  41d3a8:	xlat   BYTE PTR ds:[ebx]
  41d3a9:	adc    al,ch
  41d3ab:	icebp  
  41d3ac:	sbb    ch,BYTE PTR [ebx]
  41d3ae:	pop    esp
  41d3af:	mov    ss,WORD PTR [eax+0x538c2aef]
  41d3b5:	scas   al,BYTE PTR es:[edi]
  41d3b6:	into   
  41d3b7:	mov    ah,0xd2
  41d3b9:	stos   BYTE PTR es:[edi],al
  41d3ba:	fcmovb st,st(7)
  41d3bc:	pop    edx
  41d3bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3be:	gs mov esp,0xc501bfcc
  41d3c4:	cmp    DWORD PTR [esp+edi*2-0x3bd0e4be],esi
  41d3cb:	ins    BYTE PTR es:[edi],dx
  41d3cc:	xor    DWORD PTR [ecx],esi
  41d3ce:	sub    bl,BYTE PTR [edx]
  41d3d0:	push   ecx
  41d3d1:	adc    DWORD PTR [edx-0x1933c74d],ebp
  41d3d7:	neg    ah
  41d3d9:	outs   dx,DWORD PTR ds:[esi]
  41d3da:	imul   esp,DWORD PTR [esi+0x7b],0xb221657f
  41d3e1:	daa    
  41d3e2:	out    dx,eax
  41d3e3:	add    esi,DWORD PTR [ecx+0x1c523fef]
  41d3e9:	jle    0x41d392
  41d3eb:	inc    ebx
  41d3ec:	cwde   
  41d3ed:	xchg   DWORD PTR [eax-0x5],ebx
  41d3f0:	daa    
  41d3f1:	xchg   BYTE PTR [edi-0x4e],bl
  41d3f4:	mov    bl,0x55
  41d3f6:	retf   0x6cd9
  41d3f9:	hlt    
  41d3fa:	push   0x3f560f7c
  41d3ff:	inc    ecx
  41d400:	(bad)  [ebx+0x4c6fceed]
  41d406:	ror    BYTE PTR [eax-0x61],1
  41d409:	test   BYTE PTR [esi],ah
  41d40b:	adc    al,0xfe
  41d40d:	jg     0x41d3dc
  41d40f:	lock loopne 0x41d437
  41d412:	(bad)  
  41d414:	ds leave 
  41d416:	stos   DWORD PTR es:[edi],eax
  41d417:	shl    DWORD PTR ds:0x26ed59c7,0x83
  41d41e:	fcomp  DWORD PTR [edx+0x75fc1db2]
  41d424:	mov    edx,0xce8d6ff5
  41d429:	repz push ecx
  41d42b:	cwde   
  41d42c:	push   esp
  41d42d:	mov    ebp,0xff1146ae
  41d432:	(bad)  
  41d433:	mov    BYTE PTR ds:0xce34248c,bh
  41d439:	sbb    DWORD PTR [ebx],esp
  41d43b:	clc    
  41d43c:	std    
  41d43d:	sub    eax,0x8e86f23c
  41d442:	fs dec esi
  41d444:	jne    0x41d49a
  41d446:	aas    
  41d447:	push   0xfa78a1de
  41d44c:	in     eax,0xae
  41d44e:	clc    
  41d44f:	imul   edx,DWORD PTR [esi],0x6d
  41d452:	sahf   
  41d453:	mov    bl,0x26
  41d455:	lds    eax,FWORD PTR [edi-0x40]
  41d458:	push   esp
  41d459:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d45a:	ja     0x41d40c
  41d45c:	imul   ebx,DWORD PTR [edx+edx*4],0x150d7b23
  41d463:	xor    ebp,DWORD PTR [ecx+0x3a]
  41d466:	std    
  41d467:	xchg   ebx,eax
  41d468:	clc    
  41d469:	and    eax,0x19515981
  41d46e:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d470:	imul   ecx,esi,0x54
  41d473:	mov    eax,0xab216b38
  41d478:	or     bl,al
  41d47a:	cmp    BYTE PTR [eax+ebp*1+0x44f2e0d2],0xb1
  41d482:	cld    
  41d483:	pop    edx
  41d484:	shl    BYTE PTR [ecx-0x4d],0xb1
  41d488:	mov    ebp,0xedde9543
  41d48d:	fdivp  st(3),st
  41d48f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d490:	in     eax,0x2a
  41d492:	jge    0x41d4e7
  41d494:	call   0x96936ac7
  41d499:	nop
  41d49a:	add    BYTE PTR [ebp+0x77],0x88
  41d49e:	ret    0x13df
  41d4a1:	dec    esp
  41d4a2:	mov    ds:0x5ccbe887,eax
  41d4a7:	std    
  41d4a8:	jl     0x41d47f
  41d4aa:	sub    dh,BYTE PTR [eax+0x62]
  41d4ad:	mov    al,ds:0x2b71ca09
  41d4b2:	inc    esp
  41d4b3:	jg     0x79556b69
  41d4b9:	shl    BYTE PTR [edx-0x12],0xfb
  41d4bd:	mov    bh,0x32
  41d4bf:	cs inc esi
  41d4c1:	sub    DWORD PTR [ecx+0x9],edx
  41d4c4:	sub    al,0x9
  41d4c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4c7:	popa   
  41d4c8:	xchg   ecx,eax
  41d4c9:	hlt    
  41d4ca:	mov    ?,WORD PTR [ebx+0x2a]
  41d4cd:	or     al,0xc0
  41d4cf:	pop    esp
  41d4d0:	stc    
  41d4d1:	data16 fwait
  41d4d3:	push   ebx
  41d4d4:	ins    BYTE PTR es:[edi],dx
  41d4d5:	ret    
  41d4d6:	mov    bl,0xd9
  41d4d8:	adc    al,0x82
  41d4da:	imul   ebx,DWORD PTR [edx+0x1a],0xed1878c5
  41d4e1:	push   esi
  41d4e2:	test   eax,0x6fa3518d
  41d4e7:	mov    eax,DWORD PTR [edx+esi*1-0x2a314940]
  41d4ee:	pop    esi
  41d4ef:	pop    edi
  41d4f0:	xor    eax,0x1f2f239e
  41d4f5:	xlat   BYTE PTR ds:[ebx]
  41d4f6:	rcr    BYTE PTR [ecx-0x4dc786ae],cl
  41d4fc:	jecxz  0x41d4b3
  41d4fe:	and    ah,BYTE PTR [ecx+0x616d18a4]
  41d504:	gs cmp eax,ebx
  41d507:	mov    esp,0x6e9c26c3
  41d50c:	popf   
  41d50d:	data16 stc 
  41d50f:	(bad)  [edi+edi*1]
  41d512:	xchg   ecx,eax
  41d513:	fcom   QWORD PTR [ebx]
  41d515:	shr    BYTE PTR [esi-0x6f],cl
  41d518:	add    BYTE PTR [eax+0x62],bh
  41d51b:	repz or al,0xcc
  41d51e:	inc    eax
  41d51f:	push   0x1a
  41d521:	push   cs
  41d522:	xchg   ebp,eax
  41d523:	mov    ch,0xbb
  41d525:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d526:	xchg   edi,eax
  41d527:	mov    eax,0x40844c7c
  41d52c:	addr16 (bad) 
  41d52e:	push   ebp
  41d52f:	add    DWORD PTR [ebp+ecx*8-0xb5cf687],ebp
  41d536:	dec    esp
  41d537:	outs   dx,BYTE PTR ds:[esi]
  41d538:	sbb    eax,0x96c258e8
  41d53d:	and    al,0x4d
  41d53f:	xchg   esi,eax
  41d540:	clc    
  41d541:	retf   0x207a
  41d544:	aad    0x2
  41d546:	loope  0x41d589
  41d548:	je     0x41d554
  41d54a:	js     0x41d54a
  41d54c:	push   0x4005d554
  41d551:	sub    cl,ah
  41d553:	inc    edi
  41d554:	cmp    al,0x83
  41d556:	(bad)  
  41d557:	lock ins BYTE PTR es:[edi],dx
  41d559:	mov    ds:0xc88017ea,eax
  41d55e:	xchg   edi,eax
  41d55f:	mov    eax,0xeadaac09
  41d564:	sbb    ebx,edx
  41d566:	mov    ah,0xa6
  41d568:	repz mov ebp,0xdd97db54
  41d56e:	fist   DWORD PTR [eax]
  41d570:	aaa    
  41d571:	les    edx,FWORD PTR [edx]
  41d573:	jne    0x41d52c
  41d575:	bound  ecx,QWORD PTR [esi+0xcf82d72]
  41d57b:	xchg   edi,eax
  41d57c:	jg     0x41d531
  41d57e:	pusha  
  41d57f:	ds dec edi
  41d581:	retf   0xf11e
  41d584:	lods   al,BYTE PTR ds:[esi]
  41d585:	jno    0x41d5ba
  41d587:	sbb    al,0xa6
  41d589:	dec    ebp
  41d58a:	xchg   esp,eax
  41d58b:	iret   
  41d58c:	cmp    BYTE PTR [ebp+0x4f],bh
  41d58f:	or     BYTE PTR [ebx-0x796c0e6c],bl
  41d595:	mov    ebx,esp
  41d597:	push   cs
  41d598:	mov    esi,0x21895674
  41d59d:	mov    dl,ah
  41d59f:	jmp    0x1466:0x93d81d95
  41d5a6:	jno    0x41d558
  41d5a8:	cs aas 
  41d5aa:	or     BYTE PTR [edx-0x66df9552],al
  41d5b0:	cwde   
  41d5b1:	cmp    BYTE PTR [eax+0x2c],ah
  41d5b4:	fistp  DWORD PTR [eax+0x4]
  41d5b7:	push   ecx
  41d5b8:	jne    0x6f038c65
  41d5be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5bf:	xchg   ebx,eax
  41d5c0:	pop    ebp
  41d5c1:	les    ebp,FWORD PTR [ebx+ebp*2]
  41d5c4:	stos   DWORD PTR es:[edi],eax
  41d5c5:	push   ss
  41d5c6:	mov    eax,0x9819fa0c
  41d5cb:	ss fs inc ecx
  41d5ce:	cli    
  41d5cf:	fisub  WORD PTR [esi]
  41d5d1:	or     ebp,DWORD PTR [ebx+0x203c99c0]
  41d5d7:	ret    
  41d5d8:	cmc    
  41d5d9:	scas   eax,DWORD PTR es:[edi]
  41d5da:	stos   DWORD PTR es:[edi],eax
  41d5db:	enter  0xf116,0x7b
  41d5df:	das    
  41d5e0:	imul   edx,DWORD PTR [ecx],0x30
  41d5e3:	not    BYTE PTR [eax+0x72]
  41d5e6:	xor    al,BYTE PTR [eax+0x3a]
  41d5e9:	in     al,0x1d
  41d5eb:	mov    bl,0xb5
  41d5ed:	mov    ch,0x88
  41d5ef:	dec    esp
  41d5f0:	cmp    ah,BYTE PTR [edi-0x40]
  41d5f3:	xor    DWORD PTR [ebx+0x4b],0xb670d4b0
  41d5fa:	or     al,bh
  41d5fc:	jge    0x41d644
  41d5fe:	xor    al,al
  41d600:	jno    0x41d60e
  41d602:	mov    al,ds:0xb1ea1cda
  41d607:	add    eax,0x60c628c7
  41d60c:	dec    edi
  41d60d:	push   ecx
  41d60e:	or     dh,dl
  41d610:	into   
  41d611:	std    
  41d612:	add    al,0xaa
  41d614:	call   0xb516a999
  41d619:	inc    esp
  41d61a:	lods   eax,DWORD PTR ds:[esi]
  41d61b:	sub    ecx,DWORD PTR [edx-0x4460360c]
  41d621:	add    al,BYTE PTR [edx-0x46b9898d]
  41d627:	loopne 0x41d625
  41d629:	lock jp 0x41d69f
  41d62c:	aas    
  41d62d:	pushf  
  41d62e:	inc    ecx
  41d62f:	fbld   TBYTE PTR [edx-0x3a]
  41d632:	sti    
  41d633:	sub    DWORD PTR [ebx+0x55],esp
  41d636:	push   ss
  41d637:	mov    cl,BYTE PTR [ebx]
  41d639:	mov    edx,0xe4b3c1c6
  41d63e:	xchg   edx,eax
  41d63f:	fcomi  st,st(6)
  41d641:	sti    
  41d642:	pop    ds
  41d643:	add    esi,edi
  41d645:	ins    DWORD PTR es:[edi],dx
  41d646:	or     edi,DWORD PTR [esi-0x1e]
  41d649:	pop    eax
  41d64a:	inc    edi
  41d64b:	pop    es
  41d64c:	je     0x41d692
  41d64e:	aam    0x8
  41d650:	(bad)  
  41d651:	mov    bl,0x87
  41d653:	hlt    
  41d654:	jae    0x41d6b4
  41d656:	int3   
  41d657:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d658:	leave  
  41d659:	inc    ebx
  41d65a:	or     bh,ch
  41d65c:	lds    ebp,FWORD PTR [edx]
  41d65e:	sub    DWORD PTR [ecx+0x7c],edx
  41d661:	xor    DWORD PTR [ebp+0xe],0xc7038c53
  41d668:	sbb    ah,BYTE PTR [edx-0x2d9b583a]
  41d66e:	adc    eax,0x18ec441f
  41d673:	pop    ecx
  41d674:	cli    
  41d675:	and    bh,BYTE PTR [esi+0x59d7dc3b]
  41d67b:	pop    es
  41d67c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d67d:	lock add dl,al
  41d680:	js     0x41d61e
  41d682:	mul    esp
  41d684:	inc    ebp
  41d685:	ucomiss xmm6,xmm7
  41d688:	add    esi,DWORD PTR [edi]
  41d68a:	mov    eax,ds:0xa7ab690
  41d68f:	push   ecx
  41d690:	push   ebp
  41d691:	adc    DWORD PTR [ebx-0x59b5e035],ecx
  41d697:	pop    es
  41d698:	jae    0x41d63d
  41d69a:	xchg   edx,eax
  41d69b:	(bad)  
  41d69c:	call   0xdf66b1fb
  41d6a1:	add    bh,BYTE PTR [ecx+0x4ace7080]
  41d6a7:	popa   
  41d6a8:	gs in  eax,0x16
  41d6ab:	mov    WORD PTR [edi],ss
  41d6ad:	(bad)  
  41d6ae:	mov    ecx,0x4b4e08b8
  41d6b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6b4:	cld    
  41d6b5:	push   esi
  41d6b6:	ficom  DWORD PTR [edx+0x25]
  41d6b9:	cld    
  41d6ba:	xor    eax,0xc781020b
  41d6bf:	xor    ebx,edx
  41d6c1:	push   ebp
  41d6c2:	neg    al
  41d6c4:	mov    al,0x57
  41d6c6:	enter  0x41b4,0x1e
  41d6ca:	add    esp,DWORD PTR [esi+0x18a8b1d7]
  41d6d0:	in     eax,dx
  41d6d1:	mov    WORD PTR [ecx],cs
  41d6d3:	jp     0x41d67d
  41d6d5:	test   eax,0xf4f0b03d
  41d6da:	fsubrp st(0),st
  41d6dc:	push   ss
  41d6dd:	and    BYTE PTR ds:0xce6b5a60,dl
  41d6e3:	lea    ebp,[ecx-0x17]
  41d6e6:	js     0x41d73b
  41d6e8:	add    DWORD PTR [eax+0x52dc3263],edx
  41d6ee:	xchg   al,ch
  41d6f0:	adc    DWORD PTR [ecx+0x1d806449],edx
  41d6f6:	iret   
  41d6f7:	mov    WORD PTR [ebp+0x73],?
  41d6fa:	gs dec edi
  41d6fc:	inc    eax
  41d6fd:	dec    ebp
  41d6fe:	es mov ecx,0x687ae895
  41d704:	inc    eax
  41d705:	sar    BYTE PTR [eax],0x5d
  41d708:	xchg   esp,eax
  41d709:	sub    al,0x99
  41d70b:	push   edi
  41d70c:	je     0x41d6d2
  41d70e:	iret   
  41d70f:	pop    esi
  41d710:	pop    eax
  41d711:	jno    0x41d6d4
  41d713:	pusha  
  41d714:	inc    edx
  41d715:	(bad)  
  41d716:	fs into 
  41d718:	dec    ebp
  41d719:	imul   ebx,DWORD PTR [edi],0x7b5185cc
  41d71f:	int3   
  41d720:	arpl   WORD PTR [ebx+edx*2],ax
  41d723:	imul   edi,DWORD PTR [edx-0x7b0f1b90],0x1dfd23be
  41d72d:	(bad)  
  41d72e:	lahf   
  41d72f:	xor    eax,DWORD PTR [ecx-0x1c5bd40c]
  41d735:	sbb    bl,BYTE PTR [eax+ebx*2]
  41d738:	in     eax,0x4f
  41d73a:	mov    al,ds:0x46254505
  41d73f:	iret   
  41d740:	adc    BYTE PTR [eax-0x1a81db6d],0xa2
  41d747:	repz jge 0x41d6e8
  41d74a:	or     al,cl
  41d74c:	fwait
  41d74d:	or     eax,0x7a911a6a
  41d752:	lds    ecx,FWORD PTR [ebx-0x52d7b3a4]
  41d758:	test   BYTE PTR [ebx+0x462646b9],0x30
  41d75f:	cli    
  41d760:	pop    esp
  41d761:	jmp    0xa540:0xc3dc7490
  41d768:	and    eax,DWORD PTR ds:0xeef7a194
  41d76e:	fs ret 0x3740
  41d772:	inc    eax
  41d773:	jg     0x41d7f0
  41d775:	pop    ecx
  41d776:	retf   0xad13
  41d779:	das    
  41d77a:	or     ch,BYTE PTR [edx+0x29]
  41d77d:	out    0x2d,al
  41d77f:	aaa    
  41d780:	(bad)  
  41d781:	xchg   ecx,eax
  41d782:	call   0x186ea8a5
  41d787:	push   0x37
  41d789:	imul   ebx,DWORD PTR [eax+0x3169ffaf],0x53
  41d790:	loop   0x41d78e
  41d792:	sbb    ch,al
  41d794:	cmc    
  41d795:	bound  esi,QWORD PTR [edx]
  41d797:	in     eax,0x85
  41d799:	adc    al,0xa5
  41d79b:	add    al,0x28
  41d79d:	or     al,ah
  41d79f:	cli    
  41d7a0:	cdq    
  41d7a1:	fld    DWORD PTR [ebx]
  41d7a3:	pop    ebp
  41d7a4:	daa    
  41d7a5:	add    ebp,edx
  41d7a7:	adc    al,0xdf
  41d7a9:	xchg   BYTE PTR ds:0x8abee357,dl
  41d7af:	adc    al,0xdf
  41d7b1:	and    al,0x13
  41d7b3:	dec    esp
  41d7b4:	jo     0x41d785
  41d7b6:	je     0x41d7c6
  41d7b8:	loop   0x41d7a5
  41d7ba:	es mov cl,0xb7
  41d7bd:	test   eax,0x60e78cf
  41d7c2:	call   0x61ee:0x64c66062
  41d7c9:	push   edi
  41d7ca:	jmp    0x6246ddb
  41d7cf:	mov    al,0x3a
  41d7d1:	(bad)  
  41d7d2:	cwde   
  41d7d3:	push   0xe304539c
  41d7d8:	pushf  
  41d7d9:	mov    esp,0x91730fd7
  41d7de:	mov    bh,cl
  41d7e0:	mov    ebx,0x10fd1c86
  41d7e5:	xor    al,0x55
  41d7e7:	mov    al,ds:0x511c36a2
  41d7ec:	pop    edx
  41d7ed:	loopne 0x41d859
  41d7ef:	sub    eax,0xec3f478a
  41d7f4:	xor    esp,DWORD PTR [esi]
  41d7f6:	cmp    al,dl
  41d7f8:	dec    ebx
  41d7f9:	add    DWORD PTR [eax+0x5e],0xffffffb5
  41d7fd:	je     0x41d7ab
  41d7ff:	mov    eax,ds:0x47c6ae75
  41d804:	and    DWORD PTR [ebx+0xb933d40],ebx
  41d80a:	or     eax,0xb33d8045
  41d80f:	sahf   
  41d810:	rcl    DWORD PTR [ecx],cl
  41d812:	jp     0x41d799
  41d814:	push   ds
  41d815:	ins    BYTE PTR es:[edi],dx
  41d816:	jp     0x41d79b
  41d818:	fstp   TBYTE PTR [ecx]
  41d81a:	outs   dx,BYTE PTR ds:[esi]
  41d81b:	mov    cl,0x46
  41d81d:	mov    cs,WORD PTR [edx-0x743b6786]
  41d823:	push   ecx
  41d824:	nop
  41d825:	push   esi
  41d826:	sub    si,WORD PTR [ebp-0x54]
  41d82a:	xlat   BYTE PTR ds:[ebx]
  41d82b:	mov    ebp,ebp
  41d82d:	jne    0x41d85d
  41d82f:	xlat   BYTE PTR ds:[ebx]
  41d830:	xor    eax,0x10c7aa51
  41d835:	lock (bad) 
  41d837:	mov    ds:0x9f96ea71,al
  41d83c:	mov    esp,0xa475d936
  41d841:	xor    BYTE PTR [ebp-0x48],dl
  41d844:	and    ebp,esp
  41d846:	and    al,0x9b
  41d848:	ror    DWORD PTR [ecx-0x2ccaab92],cl
  41d84e:	mov    ecx,0xacf2f42b
  41d853:	mov    dl,cl
  41d855:	sub    eax,0xb008d275
  41d85a:	jns    0x41d863
  41d85c:	out    0x9d,al
  41d85e:	mov    eax,ds:0xd46b188d
  41d863:	pop    esp
  41d864:	adc    ebp,DWORD PTR [ebp-0x3c]
  41d867:	pop    edx
  41d868:	loopne 0x41d8bb
  41d86a:	push   es
  41d86b:	clc    
  41d86c:	dec    esi
  41d86d:	or     al,0x32
  41d86f:	stc    
  41d870:	push   esp
  41d871:	sahf   
  41d872:	aaa    
  41d873:	das    
  41d874:	jbe    0x41d843
  41d876:	push   ss
  41d877:	test   DWORD PTR [edi+eax*2-0x62],esp
  41d87b:	jno    0x41d8cc
  41d87d:	xchg   edx,eax
  41d87e:	das    
  41d87f:	inc    DWORD PTR [esi-0x54]
  41d882:	and    esi,DWORD PTR [edi-0x5b]
  41d885:	or     DWORD PTR [ebx-0x66],edx
  41d888:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d889:	std    
  41d88a:	dec    esi
  41d88b:	jbe    0x41d8e5
  41d88d:	fld    TBYTE PTR [ebp-0x5]
  41d890:	pop    edx
  41d891:	push   edx
  41d892:	in     eax,0xf
  41d894:	(bad)  
  41d895:	xor    eax,0xeaea6ac2
  41d89a:	jmp    0x70f7:0x9ff09080
  41d8a1:	cld    
  41d8a2:	fdiv   DWORD PTR [ecx+0x23fd03f7]
  41d8a8:	dec    edi
  41d8a9:	add    al,0x9c
  41d8ab:	sbb    ah,bh
  41d8ad:	add    bh,BYTE PTR [edi+0x48]
  41d8b0:	xor    eax,0xec34365
  41d8b5:	sbb    DWORD PTR [ebp+0xf4e8ed5],eax
  41d8bb:	jne    0x41d931
  41d8bd:	mov    edi,0x793d77c9
  41d8c2:	clc    
  41d8c3:	ins    BYTE PTR es:[edi],dx
  41d8c4:	and    al,0xe5
  41d8c6:	push   0x28004895
  41d8cb:	dec    eax
  41d8cc:	dec    edx
  41d8cd:	sub    ch,0xda
  41d8d0:	push   cs
  41d8d1:	sbb    DWORD PTR ds:0x57d624a0,edx
  41d8d7:	out    dx,eax
  41d8d8:	in     al,0x7e
  41d8da:	and    al,0xab
  41d8dc:	fst    QWORD PTR [ebp-0x15a828c5]
  41d8e2:	lods   eax,DWORD PTR ds:[esi]
  41d8e3:	cli    
  41d8e4:	and    DWORD PTR [ebp+0x78341d5],eax
  41d8ea:	push   eax
  41d8eb:	push   ss
  41d8ec:	enter  0xf479,0x95
  41d8f0:	test   DWORD PTR [eax-0x429915bc],ebp
  41d8f6:	cld    
  41d8f7:	je     0x41d925
  41d8f9:	push   es
  41d8fa:	popf   
  41d8fb:	sti    
  41d8fc:	aam    0x9
  41d8fe:	jae    0x41d97f
  41d900:	or     ecx,DWORD PTR [esi-0x209a3eb9]
  41d906:	push   ecx
  41d907:	xor    BYTE PTR [ecx-0x46dd99b4],dl
  41d90d:	aam    0xda
  41d90f:	pop    ebp
  41d910:	dec    ebp
  41d911:	xchg   ecx,eax
  41d912:	(bad)  
  41d913:	out    0x70,eax
  41d915:	dec    edx
  41d916:	push   ss
  41d917:	scas   eax,DWORD PTR es:[edi]
  41d918:	xchg   DWORD PTR [ecx+0x2298ff1f],ebx
  41d91e:	xchg   esp,eax
  41d91f:	ret    0x4c8f
  41d922:	nop
  41d923:	in     eax,dx
  41d924:	inc    ecx
  41d925:	iret   
  41d926:	jnp    0x41d911
  41d928:	std    
  41d929:	mov    ah,0x95
  41d92b:	add    eax,0xb300b5c4
  41d930:	outs   dx,DWORD PTR ds:[esi]
  41d931:	stos   BYTE PTR es:[edi],al
  41d932:	call   0x2684:0x82f60be0
  41d939:	jns    0x41d8f5
  41d93b:	test   al,0x16
  41d93d:	into   
  41d93e:	mov    esp,0xf8e48b8c
  41d943:	pop    esi
  41d944:	push   edx
  41d945:	daa    
  41d946:	sbb    edx,DWORD PTR [esi-0x4c]
  41d949:	rol    DWORD PTR [esi],1
  41d94b:	mov    ebx,0x98c279b0
  41d950:	cmp    al,BYTE PTR [esi+0x61ad0149]
  41d956:	push   ds
  41d957:	shl    ecx,1
  41d959:	int3   
  41d95a:	call   0x70aeb2a1
  41d95f:	test   DWORD PTR [edi+0x73],0x456ebdb8
  41d966:	popf   
  41d967:	adc    BYTE PTR [eax],0x50
  41d96a:	repz (bad) 
  41d96c:	retf   0x1a79
  41d96f:	jae    0x41d9b3
  41d971:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d972:	push   0xf9c493f7
  41d977:	mov    al,0x63
  41d979:	mov    ds:0x22f078d9,al
  41d97e:	stos   BYTE PTR es:[edi],al
  41d97f:	ins    BYTE PTR es:[edi],dx
  41d980:	dec    ebx
  41d981:	push   ebp
  41d982:	dec    esi
  41d983:	xor    al,0x4a
  41d985:	pop    ds
  41d986:	retf   0xa641
  41d989:	(bad)  
  41d98a:	retf   0x9824
  41d98d:	pop    ss
  41d98e:	test   BYTE PTR [ecx-0x7d73eb77],bh
  41d994:	test   BYTE PTR [ebp-0x112fede0],bl
  41d99a:	ficomp DWORD PTR [ebx+0x2e]
  41d99d:	push   ebx
  41d99e:	repz push cs
  41d9a0:	add    dl,BYTE PTR [eax-0x4]
  41d9a3:	push   esi
  41d9a4:	add    edx,DWORD PTR [edi]
  41d9a6:	add    esp,DWORD PTR [edx-0x2a]
  41d9a9:	jmp    0xc27f:0xf8377269
  41d9b0:	dec    edi
  41d9b1:	jp     0x41d9be
  41d9b3:	inc    eax
  41d9b4:	jae    0x41d945
  41d9b6:	call   DWORD PTR [esi+0x5a]
  41d9b9:	mov    edi,DWORD PTR [esi-0xda3ccfe]
  41d9bf:	cmp    DWORD PTR [esi+ebx*2],0xab29ff84
  41d9c6:	push   esi
  41d9c7:	loop   0x41d959
  41d9c9:	jmp    0x41da38
  41d9cb:	add    al,0xb1
  41d9cd:	xchg   DWORD PTR [ebp-0x42],ebp
  41d9d0:	les    ebp,FWORD PTR [ebp+0x1d]
  41d9d3:	test   BYTE PTR [ebp+0x7c],ah
  41d9d6:	in     eax,dx
  41d9d7:	pop    ebx
  41d9d8:	push   cs
  41d9d9:	xchg   esp,eax
  41d9da:	out    dx,al
  41d9db:	and    eax,0xd9b409ec
  41d9e0:	pop    ebp
  41d9e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9e2:	mov    edx,0x8f0a5ff2
  41d9e7:	adc    DWORD PTR [edi+0x5f5d4de4],edx
  41d9ed:	xchg   ebp,ecx
  41d9ef:	hlt    
  41d9f0:	test   al,0xea
  41d9f2:	bound  edx,QWORD PTR [eax]
  41d9f4:	mov    cl,0xf6
  41d9f6:	call   0xb68a:0xfcbf3794
  41d9fd:	shl    ecx,0x61
  41da00:	pop    DWORD PTR [edi+0x6d]
  41da03:	jmp    0x75fa:0x138c7a4c
  41da0a:	adc    eax,DWORD PTR ds:0xf34a8233
  41da10:	and    al,0x1e
  41da12:	clc    
  41da13:	jne    0x41d9a0
  41da15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da16:	cld    
  41da17:	lock adc al,0x2b
  41da1a:	les    eax,FWORD PTR [eax]
  41da1c:	and    al,0xb8
  41da1e:	push   ecx
  41da1f:	test   al,0xae
  41da21:	lahf   
  41da22:	push   esi
  41da23:	add    ebx,DWORD PTR [edi+0x3d6a7dcb]
  41da29:	stos   DWORD PTR es:[edi],eax
  41da2a:	push   ebp
  41da2b:	ret    0x8a83
  41da2e:	push   0x2
  41da30:	mov    eax,eax
  41da32:	fsubr  DWORD PTR [ebp-0x3daeec8d]
  41da38:	add    DWORD PTR [esi],esi
  41da3a:	push   0xffffff9d
  41da3c:	mov    ?,WORD PTR [edi-0x6c]
  41da3f:	inc    edx
  41da40:	pushf  
  41da41:	xchg   ebp,eax
  41da42:	jns    0x41da64
  41da44:	and    BYTE PTR [edx+0xe],0x35
  41da48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da49:	sbb    BYTE PTR [edx-0x3c],0x9f
  41da4d:	adc    dh,BYTE PTR [eax]
  41da4f:	and    DWORD PTR [edx],esp
  41da51:	add    DWORD PTR [edi+0x6b],esi
  41da54:	sar    eax,0x8
  41da57:	adc    esi,DWORD PTR [ecx]
  41da59:	aaa    
  41da5a:	ret    0x36ef
  41da5d:	dec    si
  41da5f:	sub    BYTE PTR ds:0x89d914b1,bl
  41da65:	inc    ebp
  41da66:	in     eax,0xe8
  41da68:	retf   
  41da69:	mov    eax,ds:0x1b115622
  41da6e:	fimul  DWORD PTR ds:[edx-0x6bb11070]
  41da75:	arpl   WORD PTR [eax],bx
  41da77:	in     al,dx
  41da78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da79:	push   0x52c2a47c
  41da7e:	pushf  
  41da7f:	inc    esi
  41da80:	push   edi
  41da81:	imul   ebp,DWORD PTR [esi+ebp*2],0x93021f82
  41da88:	jnp    0x41da58
  41da8a:	pop    es
  41da8b:	mov    al,ds:0x778b8f82
  41da90:	into   
  41da91:	pop    edx
  41da92:	adc    al,0x53
  41da94:	sub    ch,BYTE PTR [ecx+0x3556ea60]
  41da9a:	in     al,dx
  41da9b:	(bad)  
  41da9c:	test   BYTE PTR cs:[edi+0xb],cl
  41daa0:	push   ebp
  41daa1:	mov    ch,0x18
  41daa3:	or     al,0x46
  41daa5:	sub    eax,0x3fa87296
  41daaa:	(bad)  
  41daab:	fdivr  st,st(6)
  41daad:	and    edi,DWORD PTR [ecx+edx*4-0x1dde26b1]
  41dab4:	loop   0x41da67
  41dab6:	retf   0x9b95
  41dab9:	daa    
  41daba:	into   
  41dabb:	jg     0x41da3e
  41dabd:	cmp    BYTE PTR ds:0x91735fbf,ch
  41dac3:	fs idiv ah
  41dac6:	push   eax
  41dac7:	loopne 0x41db1c
  41dac9:	mov    al,0x44
  41dacb:	ss jmp 0x41da76
  41dace:	push   eax
  41dacf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dad0:	mov    ebx,0x5fe7fcf6
  41dad5:	sbb    ecx,DWORD PTR [ebx+0x55]
  41dad8:	or     cl,BYTE PTR [eax]
  41dada:	or     al,0xbb
  41dadc:	call   0x7e907aa5
  41dae1:	jnp    0x41da72
  41dae3:	cld    
  41dae4:	xchg   edi,eax
  41dae5:	call   0x8172df4
  41daea:	jns    0x41db1c
  41daec:	repnz cmp edi,DWORD PTR [edi]
  41daef:	push   esi
  41daf0:	dec    eax
  41daf1:	and    BYTE PTR [ebx],0x71
  41daf4:	jmp    0x41db4e
  41daf6:	lea    ecx,[esi]
  41daf8:	outs   dx,BYTE PTR ds:[esi]
  41daf9:	in     al,dx
  41dafa:	jle    0x730c0742
  41db00:	sbb    eax,0x945796d9
  41db05:	push   ss
  41db06:	sub    DWORD PTR [eax],esi
  41db08:	jns    0x41dada
  41db0a:	outs   dx,DWORD PTR ds:[esi]
  41db0b:	sbb    edx,DWORD PTR [esp+edi*1]
  41db0e:	and    dl,BYTE PTR [eax+0x235b427c]
  41db14:	out    0x55,eax
  41db16:	pop    ebx
  41db17:	or     BYTE PTR [esi],bh
  41db19:	dec    edx
  41db1a:	outs   dx,DWORD PTR ds:[esi]
  41db1b:	or     dl,dl
  41db1d:	push   ebx
  41db1e:	sub    BYTE PTR [edi-0x63],dh
  41db21:	sbb    DWORD PTR [eax-0x4e61ae92],edi
  41db27:	call   0x1673:0xa7f60447
  41db2e:	bound  esi,QWORD PTR [ecx-0x70]
  41db31:	jmp    0x2ef41890
  41db36:	xor    eax,ebp
  41db38:	lock loop 0x41db3f
  41db3b:	mov    edi,0x4a803634
  41db40:	in     eax,dx
  41db41:	call   0xbd9d2592
  41db46:	sub    esi,DWORD PTR [ecx-0x2902fb5f]
  41db4c:	cwde   
  41db4d:	pop    es
  41db4e:	stos   DWORD PTR es:[edi],eax
  41db4f:	cmp    BYTE PTR [ebx],dl
  41db51:	fmul   DWORD PTR [ecx]
  41db53:	sub    dh,BYTE PTR [esi]
  41db55:	mov    ebp,0x5cdc7a97
  41db5a:	repnz mov bh,0xdd
  41db5d:	shl    BYTE PTR [ebp-0x17],0xaf
  41db61:	cmp    al,dh
  41db63:	(bad)  
  41db65:	repnz add cl,BYTE PTR [ebp-0x3d]
  41db69:	xchg   ecx,eax
  41db6a:	sub    ebp,edx
  41db6c:	add    eax,0x81a77a42
  41db71:	test   BYTE PTR [edi-0x268e86b3],dl
  41db77:	je     0x41db42
  41db79:	vpshlq ymm2,xmm5,[ebp+r8d*8-0x487d249c]
  41db83:	push   esp
  41db84:	sub    dh,BYTE PTR ds:0xcf232457
  41db8a:	pusha  
  41db8b:	dec    edx
  41db8c:	mov    edi,0x4fd1f3ba
  41db91:	into   
  41db92:	pop    ecx
  41db93:	(bad)  
  41db95:	arpl   WORD PTR [ecx+ecx*8-0x1c991f48],ax
  41db9c:	icebp  
  41db9d:	icebp  
  41db9e:	and    ebp,DWORD PTR [ebp-0x8e3b64d]
  41dba4:	push   ebx
  41dba5:	inc    eax
  41dba6:	ficom  DWORD PTR [ebp-0x1c75770c]
  41dbac:	in     al,0xd7
  41dbae:	mov    ah,0xe7
  41dbb0:	sti    
  41dbb1:	dec    ebx
  41dbb2:	jb     0x41dbeb
  41dbb4:	fiadd  WORD PTR [ebx-0x3fe5d227]
  41dbba:	mov    ah,0x29
  41dbbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbbd:	js     0x41dc05
  41dbbf:	ret    
  41dbc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbc1:	add    ebp,esi
  41dbc3:	push   0xc6a24574
  41dbc8:	ja     0x41db4d
  41dbca:	xor    eax,0xde1f46b2
  41dbcf:	xchg   esp,eax
  41dbd0:	push   edx
  41dbd1:	and    al,0xf9
  41dbd3:	xchg   esp,eax
  41dbd4:	cmp    DWORD PTR [edi],ebx
  41dbd6:	xchg   DWORD PTR cs:[ebx+0x46],eax
  41dbda:	cwde   
  41dbdb:	loopne 0x41db8f
  41dbdd:	mov    bh,0x4
  41dbdf:	rcr    DWORD PTR [edx],0x31
  41dbe2:	mov    WORD PTR [esi-0x33574b7d],es
  41dbe8:	shl    DWORD PTR [ebp+0x13c0f727],1
  41dbee:	enter  0xfee6,0x1c
  41dbf2:	sub    eax,0xb89724f2
  41dbf7:	jl     0x41dbcb
  41dbf9:	xor    BYTE PTR [ecx+0x73],ah
  41dbfc:	mov    esp,DWORD PTR [esi]
  41dbfe:	ret    
  41dbff:	fisubr WORD PTR [edx+esi*4]
  41dc02:	into   
  41dc03:	loopne 0x41dc5d
  41dc05:	inc    edi
  41dc06:	adc    DWORD PTR [ecx+0x4c1db346],0xe1558148
  41dc10:	ins    BYTE PTR es:[edi],dx
  41dc11:	inc    esp
  41dc12:	ds loopne 0x41dbdd
  41dc15:	mov    ds:0xf6c8593a,al
  41dc1a:	sub    ecx,DWORD PTR [edi-0x5e]
  41dc1d:	nop
  41dc1e:	rcr    ecx,1
  41dc20:	mov    cl,0x63
  41dc22:	or     ebp,0x4162eb7f
  41dc28:	dec    esi
  41dc29:	jb     0x41dc76
  41dc2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc2c:	out    dx,al
  41dc2d:	fs (bad) 
  41dc2f:	fidiv  DWORD PTR [esi+0x2f]
  41dc32:	int3   
  41dc33:	gs jae 0x41dbda
  41dc36:	mov    bl,0xe7
  41dc38:	loop   0x41dc4a
  41dc3a:	adc    eax,0x15ba9278
  41dc3f:	cld    
  41dc40:	push   esi
  41dc41:	pop    edi
  41dc42:	sub    edi,DWORD PTR [ebp+0x21]
  41dc45:	lods   al,BYTE PTR ds:[esi]
  41dc46:	xor    al,0xcf
  41dc48:	dec    ebx
  41dc49:	pop    esp
  41dc4a:	lock out 0x9a,al
  41dc4d:	or     al,0x5c
  41dc4f:	inc    ecx
  41dc50:	and    dh,ch
  41dc52:	das    
  41dc53:	sub    BYTE PTR [ebx+0x48a9a61b],bh
  41dc59:	ret    0x3170
  41dc5c:	sub    al,0x98
  41dc5e:	mov    ch,0x67
  41dc60:	xchg   edx,eax
  41dc61:	arpl   WORD PTR [ecx],bx
  41dc63:	cwde   
  41dc64:	icebp  
  41dc65:	add    esp,ebp
  41dc67:	inc    ebx
  41dc68:	xor    dl,ch
  41dc6a:	xor    ebx,DWORD PTR [edx-0x63]
  41dc6d:	adc    BYTE PTR [edi-0x51fd25dc],0x86
  41dc74:	stos   BYTE PTR es:[edi],al
  41dc75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc76:	(bad)  
  41dc77:	cmc    
  41dc78:	jmp    0x4db1:0x83bf7ddf
  41dc7f:	ins    BYTE PTR es:[edi],dx
  41dc80:	scas   eax,DWORD PTR es:[edi]
  41dc81:	leave  
  41dc82:	mov    ebp,0xff924fff
  41dc87:	xchg   ebx,eax
  41dc88:	daa    
  41dc89:	aaa    
  41dc8a:	xor    BYTE PTR [ecx],0x21
  41dc8d:	ret    
  41dc8e:	test   al,0xb6
  41dc90:	cld    
  41dc91:	and    al,0xfa
  41dc93:	mov    al,dh
  41dc95:	fistp  WORD PTR [edi]
  41dc97:	mov    ebp,0x12e3f091
  41dc9c:	dec    edx
  41dc9d:	je     0x41dc5b
  41dc9f:	cdq    
  41dca0:	cdq    
  41dca1:	and    ebx,DWORD PTR [edi+edi*1+0x71db44db]
  41dca8:	xlat   BYTE PTR ds:[ebx]
  41dca9:	mov    gs,WORD PTR [eax+ecx*8-0x6227a70f]
  41dcb0:	mov    dl,0xd5
  41dcb2:	pop    esp
  41dcb3:	in     al,dx
  41dcb4:	sub    DWORD PTR [ecx+ebp*1+0x4afd8a38],esp
  41dcbb:	int3   
  41dcbc:	inc    esp
  41dcbd:	adc    ebp,edi
  41dcbf:	mov    DWORD PTR [esi+0x4d],edi
  41dcc2:	data16 hlt 
  41dcc4:	jbe    0x41dca0
  41dcc6:	fistp  QWORD PTR [edi-0x5f]
  41dcc9:	sub    DWORD PTR [ecx],edi
  41dccb:	sub    al,0x58
  41dccd:	inc    edx
  41dcce:	pop    edi
  41dccf:	dec    esp
  41dcd0:	pushf  
  41dcd1:	mov    ebp,0x6f7e7896
  41dcd6:	out    dx,al
  41dcd7:	stc    
  41dcd8:	rcl    BYTE PTR [edi-0x6034d752],cl
  41dcde:	sub    ecx,DWORD PTR [eax+edi*2+0x1f]
  41dce2:	push   esp
  41dce3:	push   ebp
  41dce4:	popf   
  41dce5:	inc    ebp
  41dce6:	push   eax
  41dce7:	out    0x93,al
  41dce9:	fimul  WORD PTR [edx+0x3738f29f]
  41dcef:	mov    ebx,0x516859a2
  41dcf4:	test   eax,0x4c72c8be
  41dcf9:	sub    ecx,DWORD PTR [edi+ebx*1-0x66]
  41dcfd:	shr    bl,0x11
  41dd00:	(bad)  
  41dd01:	cmc    
  41dd02:	pop    esp
  41dd03:	fnstcw WORD PTR [eax+0x55e70f63]
  41dd09:	sub    cl,BYTE PTR [ecx+0x3e]
  41dd0c:	pusha  
  41dd0d:	add    DWORD PTR [ebx],eax
  41dd0f:	out    dx,eax
  41dd10:	ds adc al,0x14
  41dd13:	inc    edi
  41dd14:	icebp  
  41dd15:	ficomp DWORD PTR [eax-0x11ca13e8]
  41dd1b:	cmp    ch,al
  41dd1d:	fs push eax
  41dd1f:	adc    dh,BYTE PTR [esp+eax*2]
  41dd22:	push   esi
  41dd23:	or     BYTE PTR [edi+0x54],dl
  41dd26:	add    cl,ch
  41dd28:	imul   esp,DWORD PTR [ebx],0x3
  41dd2b:	rcr    DWORD PTR [ecx+0x50],0x2c
  41dd2f:	cmp    DWORD PTR [eax+0x528b60f4],edx
  41dd35:	sub    BYTE PTR [edi-0xe],ch
  41dd38:	xor    eax,0x2254ab68
  41dd3d:	or     al,0xbf
  41dd3f:	mov    DWORD PTR [ebp-0x2b],ebp
  41dd42:	or     edi,ebp
  41dd44:	adc    al,0x7b
  41dd46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd47:	enter  0x6b8f,0x42
  41dd4b:	and    DWORD PTR [ebx],ebx
  41dd4d:	retf   0x81f5
  41dd50:	call   0x2ea3:0xa4d39de0
  41dd57:	and    bl,al
  41dd59:	cmp    al,0x38
  41dd5b:	stos   DWORD PTR es:[edi],eax
  41dd5c:	ret    0xbd80
  41dd5f:	iret   
  41dd60:	xor    BYTE PTR [ecx],al
  41dd62:	aam    0x8a
  41dd64:	or     eax,DWORD PTR [edi-0x20]
  41dd67:	dec    ecx
  41dd68:	xor    ecx,0xf457f9e5
  41dd6e:	cmp    cl,bl
  41dd70:	pop    esi
  41dd71:	adc    ecx,DWORD PTR cs:[edx+edi*8]
  41dd75:	mov    ch,0x9d
  41dd77:	adc    eax,0x4e40172d
  41dd7c:	scas   eax,DWORD PTR es:[edi]
  41dd7d:	jge    0x41dd70
  41dd7f:	aam    0x89
  41dd81:	aad    0x29
  41dd83:	xchg   DWORD PTR [edi+0x7db96a52],esp
  41dd89:	lods   al,BYTE PTR ds:[esi]
  41dd8a:	add    DWORD PTR [ebx-0x17],ebp
  41dd8d:	imul   ecx,DWORD PTR [ecx-0x26],0xffffff99
  41dd91:	imul   eax,ebx,0x9
  41dd94:	pop    ds
  41dd95:	sub    esi,eax
  41dd97:	cmp    DWORD PTR [ebp+0x3cbd5c56],0x52
  41dd9e:	call   0x7c72:0x5f985c16
  41dda5:	loope  0x41ddf9
  41dda7:	out    dx,al
  41dda8:	mov    al,ds:0xd5a3dd74
  41ddad:	scas   al,BYTE PTR es:[edi]
  41ddae:	xor    BYTE PTR [ebp-0x23b08a98],0x3e
  41ddb5:	sbb    al,0xe5
  41ddb7:	pop    ds
  41ddb8:	add    ah,BYTE PTR [esi-0x3bef896c]
  41ddbe:	pop    ecx
  41ddc0:	data16 xor BYTE PTR [ecx+esi*1],dl
  41ddc4:	mov    ds:0xc67d0d83,eax
  41ddc9:	or     DWORD PTR [ebx],ecx
  41ddcb:	jp     0x41dde3
  41ddcd:	sbb    dh,bh
  41ddcf:	imul   edx
  41ddd1:	ins    BYTE PTR es:[edi],dx
  41ddd2:	jmp    0xf6507f41
  41ddd7:	fcom   QWORD PTR [ecx]
  41ddd9:	(bad)  [ecx-0x758038e0]
  41dddf:	das    
  41dde0:	push   eax
  41dde1:	or     esp,DWORD PTR [esi-0x9]
  41dde4:	or     ebx,edx
  41dde6:	cmp    BYTE PTR [ecx+edx*4-0x2f68c74a],bl
  41dded:	inc    ebp
  41ddee:	jmp    0x2c62:0xffad21d4
  41ddf5:	push   0xffffffb7
  41ddf7:	cwde   
  41ddf8:	fwait
  41ddf9:	jl     0x41de63
  41ddfb:	(bad)  
  41ddfc:	repnz push eax
  41ddfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ddff:	jnp    0x41de3d
  41de01:	sti    
  41de02:	adc    BYTE PTR [ecx],ah
  41de04:	fdivr  DWORD PTR ds:0x55b68c83
  41de0a:	inc    ecx
  41de0b:	jo     0x41dda3
  41de0d:	xor    edx,DWORD PTR [esi+0x1f]
  41de10:	cs jbe 0x41ddc5
  41de13:	fimul  WORD PTR [ecx]
  41de15:	dec    esi
  41de16:	sub    DWORD PTR ds:0x76ddf59a,eax
  41de1c:	outs   dx,DWORD PTR ds:[esi]
  41de1d:	cmp    al,al
  41de1f:	xchg   edx,eax
  41de20:	or     esp,DWORD PTR [esp+ecx*8+0x4]
  41de24:	fild   DWORD PTR [esi-0x17a967f3]
  41de2a:	or     BYTE PTR [edx],bl
  41de2c:	sub    ebx,0x34
  41de2f:	mov    edx,0xc20aa4f3
  41de34:	mov    edi,0x20cf75f3
  41de39:	in     al,0x68
  41de3b:	inc    edi
  41de3c:	mov    BYTE PTR [ebx+0x5d],bl
  41de3f:	es idiv esi
  41de42:	xchg   ebp,eax
  41de43:	add    ebx,ebx
  41de45:	jne    0x41dec2
  41de47:	sub    ebp,ecx
  41de49:	mov    cl,0x37
  41de4b:	sbb    DWORD PTR gs:[ebx+0x1d],ebx
  41de4f:	push   esp
  41de50:	aas    
  41de51:	rcl    DWORD PTR [esi-0x7a9742bb],0x18
  41de58:	adc    BYTE PTR [ecx+eiz*4-0x6c2c4265],bh
  41de5f:	ds popf 
  41de61:	repnz mov bh,BYTE PTR [eax+0x6b512ba]
  41de68:	mov    ah,0x77
  41de6a:	and    ah,BYTE PTR [ecx-0x68d38b1d]
  41de70:	jge    0x41de98
  41de72:	dec    edx
  41de73:	das    
  41de74:	movntps XMMWORD PTR [ecx],xmm0
  41de77:	fisttp WORD PTR [ebx]
  41de79:	std    
  41de7a:	stos   BYTE PTR es:[edi],al
  41de7b:	fimul  DWORD PTR [ebx+0x55]
  41de7e:	(bad)  
  41de80:	es pop es
  41de82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de83:	adc    ah,0x44
  41de86:	and    al,0x60
  41de88:	xchg   esi,ebp
  41de8a:	jp     0x41de33
  41de8c:	dec    ebp
  41de8d:	xor    al,0x56
  41de8f:	adc    al,0x36
  41de91:	add    al,0x75
  41de93:	outs   dx,BYTE PTR ds:[esi]
  41de94:	leave  
  41de95:	int3   
  41de96:	xlat   BYTE PTR ds:[ebx]
  41de97:	add    BYTE PTR [ecx],0x39
  41de9a:	jne    0x41de76
  41de9c:	inc    esp
  41de9e:	cmp    DWORD PTR [ebx+0x2c],edi
  41dea1:	cmp    al,0x9d
  41dea3:	xor    ecx,DWORD PTR [esi-0x5b738138]
  41dea9:	(bad)  
  41deaa:	xor    BYTE PTR [edi+0x6d],ch
  41dead:	lods   al,BYTE PTR ds:[esi]
  41deae:	dec    eax
  41deaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41deb0:	mov    esi,0xd037beef
  41deb5:	loope  0x41deb0
  41deb7:	test   eax,0x47d90a5d
  41debc:	aam    0x3
  41debe:	outs   dx,DWORD PTR ds:[esi]
  41debf:	cld    
  41dec0:	mov    edi,0x3b32dedf
  41dec5:	and    esi,0xffffffdf
  41dec8:	in     al,0xc8
  41deca:	sar    BYTE PTR [ecx+edx*8+0x757a6698],0x7e
  41ded2:	push   esi
  41ded3:	pop    ds
  41ded4:	push   0xba409b09
  41ded9:	test   eax,0xa2eb3bff
  41dede:	xor    ecx,esi
  41dee0:	dec    edi
  41dee1:	mov    dh,0x3d
  41dee3:	mov    esi,0x7ce93a78
  41dee8:	push   ss
  41dee9:	jp     0x41df17
  41deeb:	xor    al,0xa4
  41deed:	inc    ebp
  41deee:	ss mov ecx,0xd74e4681
  41def4:	das    
  41def5:	(bad)  
  41def6:	mov    eax,0x40e064c7
  41defb:	and    al,0xc3
  41defd:	lahf   
  41defe:	push   edi
  41deff:	fidivr WORD PTR [ebp-0x70]
  41df02:	mov    ?,WORD PTR [eax+ebp*2+0x66d1834f]
  41df09:	loopne 0x41df34
  41df0b:	cli    
  41df0c:	(bad)  
  41df0e:	sar    DWORD PTR [ecx-0x53],0xf9
  41df12:	jnp    0x41df4b
  41df14:	ins    DWORD PTR es:[edi],dx
  41df15:	dec    ecx
  41df16:	mov    ebx,0x7c119337
  41df1b:	or     eax,DWORD PTR [ebx-0x21]
  41df1e:	mov    bh,0x76
  41df20:	(bad)  
  41df21:	xchg   edi,eax
  41df22:	xlat   BYTE PTR ds:[ebx]
  41df23:	jmp    0x43f2:0x3e7106d8
  41df2a:	pop    es
  41df2b:	neg    BYTE PTR [ecx+0x77]
  41df2e:	sub    cl,BYTE PTR [ecx*8+0x15441558]
  41df35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df36:	lar    edx,WORD PTR [ecx-0xe]
  41df3a:	inc    edx
  41df3b:	cmp    DWORD PTR [ecx-0x682be031],ecx
  41df41:	(bad)  
  41df42:	inc    DWORD PTR [eax-0x3]
  41df45:	jns    0x41df76
  41df47:	retf   
  41df48:	dec    esp
  41df49:	push   0x5eb47283
  41df4e:	push   esp
  41df4f:	xchg   esp,eax
  41df50:	lock pop ebx
  41df52:	and    DWORD PTR [eax],edx
  41df54:	icebp  
  41df55:	ss and eax,0x91e54fd2
  41df5b:	push   esp
  41df5c:	or     DWORD PTR ds:0x5ce389f,esi
  41df62:	adc    eax,0x3124132f
  41df67:	sbb    esi,esp
  41df69:	aaa    
  41df6a:	and    al,0x5f
  41df6c:	adc    eax,0x6b06370f
  41df71:	ret    
  41df72:	call   0xa809c11e
  41df77:	sbb    ebx,DWORD PTR [edi-0x3bf9f573]
  41df7d:	nop
  41df7e:	jb     0x41df74
  41df80:	loop   0x41df0f
  41df82:	cli    
  41df83:	(bad)  
  41df84:	pop    ebp
  41df85:	bound  edi,QWORD PTR ds:0x3ff7efc9
  41df8b:	jge    0x41dffc
  41df8d:	aas    
  41df8e:	loop   0x41dff0
  41df90:	enter  0x5daf,0xa7
  41df94:	inc    edi
  41df95:	je     0x41df6d
  41df97:	xchg   ecx,eax
  41df98:	sub    al,0xa
  41df9a:	int3   
  41df9b:	xchg   edx,eax
  41df9c:	stos   DWORD PTR es:[edi],eax
  41df9d:	sbb    al,0xf9
  41df9f:	sbb    al,0x47
  41dfa1:	fidiv  WORD PTR [ecx*4+0x5ca70853]
  41dfa8:	aaa    
  41dfa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfaa:	mov    al,ds:0x1df53dec
  41dfaf:	out    0x2d,eax
  41dfb1:	xchg   DWORD PTR [ebx-0x3f4a2990],edi
  41dfb7:	rcl    DWORD PTR [eax-0x10],1
  41dfba:	xchg   esi,eax
  41dfbb:	retf   
  41dfbc:	ret    
  41dfbd:	sub    al,0x12
  41dfbf:	mov    esi,0x5dc22316
  41dfc4:	jg     0x41df6a
  41dfc6:	adc    edi,ecx
  41dfc8:	shr    DWORD PTR [edi-0x25260702],0x39
  41dfcf:	out    0xb5,eax
  41dfd1:	jecxz  0x41dfff
  41dfd3:	add    BYTE PTR [esi],bl
  41dfd5:	add    esi,DWORD PTR [eax]
  41dfd7:	lahf   
  41dfd8:	aas    
  41dfd9:	or     eax,0xa4437bbc
  41dfde:	fist   DWORD PTR [ebx]
  41dfe0:	and    eax,0xdf9c8125
  41dfe5:	in     eax,dx
  41dfe6:	ror    DWORD PTR [ebx],cl
  41dfe8:	dec    ebx
  41dfe9:	cmp    esp,DWORD PTR [esi-0x4e]
  41dfec:	xchg   esi,eax
  41dfed:	adc    edi,DWORD PTR [edi+0xf]
  41dff0:	jp     0x41e02b
  41dff2:	sbb    eax,0x155c9c8
  41dff7:	stc    
  41dff8:	and    BYTE PTR [edx-0x78],bl
  41dffb:	mul    BYTE PTR [eax+0x3c]
  41dffe:	outs   dx,DWORD PTR ds:[esi]
  41dfff:	xchg   ecx,eax
  41e000:	ret    
  41e001:	mov    edx,0x710f672
  41e006:	fs push ebx
  41e008:	je     0x41e005
  41e00a:	cwde   
  41e00b:	call   0x1799:0xe877476
  41e012:	mov    eax,0x8f6cd9be
  41e017:	jnp    0x41e00d
  41e019:	out    0xc0,eax
  41e01b:	or     dl,dl
  41e01d:	arpl   WORD PTR [esi-0x4abc0093],bp
  41e023:	sub    ecx,esi
  41e025:	(bad)  
  41e027:	dec    ebx
  41e028:	sbb    edx,DWORD PTR [edi-0x4fde9344]
  41e02e:	call   0x76b9:0x69fd0f7e
  41e035:	imul   eax,edx,0xffffffe0
  41e038:	jmp    0x69d2:0xaf6f3bb0
  41e03f:	xor    DWORD PTR [ebx],ecx
  41e041:	mov    esp,0xf496b350
  41e046:	push   eax
  41e047:	sbb    al,0xd9
  41e049:	cmp    ah,bl
  41e04b:	sbb    al,0x69
  41e04d:	adc    esp,DWORD PTR [edx]
  41e04f:	lods   al,BYTE PTR ds:[esi]
  41e050:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e051:	sbb    esp,esp
  41e053:	or     ah,BYTE PTR [edi-0x328100d4]
  41e059:	sahf   
  41e05a:	push   0xa9e2074c
  41e05f:	xchg   BYTE PTR [ebx-0x2e],bh
  41e062:	jnp    0x41e087
  41e064:	push   ds
  41e065:	xor    al,0x35
  41e067:	mov    eax,ds:0xb223c5ce
  41e06c:	cmp    eax,esp
  41e06e:	sub    eax,0x62db5d35
  41e073:	(bad)  
  41e074:	mov    dx,0x1027
  41e078:	aas    
  41e079:	mov    eax,0x92a3124e
  41e07e:	pop    edi
  41e07f:	in     al,0x79
  41e081:	cmc    
  41e082:	call   0x240fe13e
  41e087:	push   ds
  41e088:	sub    ebx,DWORD PTR [eax-0x36]
  41e08b:	adc    DWORD PTR fs:[esp+esi*1+0x5d],esp
  41e090:	sbb    esi,0xffffffd1
  41e093:	jbe    0x41e022
  41e095:	ins    BYTE PTR es:[edi],dx
  41e096:	inc    esp
  41e097:	dec    ebx
  41e098:	pop    esp
  41e099:	xchg   esi,eax
  41e09a:	clc    
  41e09b:	push   cs
  41e09c:	popa   
  41e09d:	stos   DWORD PTR es:[edi],eax
  41e09e:	pop    ds
  41e09f:	mov    ecx,0x40ec0c07
  41e0a4:	inc    eax
  41e0a5:	push   eax
  41e0a6:	cdq    
  41e0a7:	mov    ds:0x1e0fd846,eax
  41e0ac:	push   esp
  41e0ad:	aam    0xf0
  41e0af:	popf   
  41e0b0:	stos   DWORD PTR es:[edi],eax
  41e0b1:	jp     0x41e064
  41e0b3:	dec    ebx
  41e0b4:	inc    esp
  41e0b5:	aam    0x87
  41e0b7:	jno    0x41e12b
  41e0b9:	mov    ah,0x3d
  41e0bb:	pop    ecx
  41e0bc:	sub    dl,BYTE PTR [ebx-0x10]
  41e0bf:	inc    esi
  41e0c0:	mov    eax,ds:0xae40b14f
  41e0c5:	and    al,0xd8
  41e0c7:	jmp    0x41e108
  41e0c9:	cmp    edx,DWORD PTR [eax+ecx*2+0x26280797]
  41e0d0:	sbb    bl,BYTE PTR [ebx-0x22]
  41e0d3:	sbb    ah,BYTE PTR [edi]
  41e0d5:	lds    di,DWORD PTR [edi]
  41e0d8:	loop   0x41e070
  41e0da:	sbb    BYTE PTR [eax+eax*1],dl
  41e0dd:	pop    esi
  41e0de:	test   DWORD PTR [edi],edi
  41e0e0:	inc    ecx
  41e0e1:	(bad)  
  41e0e2:	xchg   ebx,eax
  41e0e3:	repz hlt 
  41e0e5:	call   0x1a511b9a
  41e0ea:	mov    ds:0xa6681dd9,eax
  41e0ef:	cmp    DWORD PTR [esi],ecx
  41e0f1:	sub    ch,BYTE PTR [ebx+ebp*4+0x72]
  41e0f5:	dec    eax
  41e0f6:	xchg   edx,eax
  41e0f7:	sub    bh,BYTE PTR es:[esi+eiz*8]
  41e0fb:	loopne 0x41e103
  41e0fd:	psubsw mm6,mm4
  41e100:	mov    ebx,0x9a118b00
  41e105:	jbe    0x41e141
  41e107:	js     0x41e13d
  41e109:	cwde   
  41e10a:	dec    eax
  41e10b:	sbb    DWORD PTR [edi-0x52],esi
  41e10e:	mov    bl,0xac
  41e110:	adc    eax,0x2f4a6ae8
  41e115:	xchg   ebx,eax
  41e116:	adc    esi,DWORD PTR [ecx+ebx*1-0x10]
  41e11a:	popf   
  41e11b:	out    0x4e,al
  41e11d:	loop   0x41e0b4
  41e11f:	xchg   ebx,eax
  41e120:	adc    BYTE PTR [ecx],0xf7
  41e123:	test   eax,0x93d58038
  41e128:	pop    esi
  41e129:	cmp    ebp,esp
  41e12b:	cmp    bl,dh
  41e12d:	adc    al,0x66
  41e12f:	sbb    al,0xa
  41e131:	aas    
  41e132:	in     eax,dx
  41e133:	push   ds
  41e134:	icebp  
  41e135:	js     0x41e0bf
  41e137:	sti    
  41e138:	push   ebx
  41e139:	lea    esi,ds:0x9b88e74f
  41e13f:	or     edi,DWORD PTR [eax]
  41e141:	outs   dx,DWORD PTR ds:[esi]
  41e142:	pushf  
  41e143:	sub    esi,DWORD PTR [edx-0x78]
  41e146:	cld    
  41e147:	jle    0x41e163
  41e149:	xor    al,BYTE PTR [ecx-0x52]
  41e14c:	mov    cl,0xce
  41e14e:	sub    eax,0x978c99ff
  41e153:	push   ecx
  41e154:	mov    ebp,0x53fd49ba
  41e159:	pop    edi
  41e15a:	in     eax,dx
  41e15b:	inc    esp
  41e15c:	sub    eax,0x117b71f
  41e161:	adc    BYTE PTR [eax],bh
  41e163:	retf   
  41e164:	lea    ebx,fs:[edi]
  41e167:	sub    ebp,esp
  41e169:	stos   DWORD PTR es:[edi],eax
  41e16a:	xchg   ebx,eax
  41e16b:	imul   ebp,edx,0xc5e34869
  41e171:	xor    dl,cl
  41e173:	jmp    0x7f11b9a6
  41e178:	pop    ebx
  41e179:	jo     0x41e1ce
  41e17b:	xor    esp,DWORD PTR [ecx-0x229920ba]
  41e181:	les    esp,FWORD PTR [eax+0x55]
  41e184:	dec    ecx
  41e185:	pop    ebp
  41e186:	loope  0x41e11c
  41e188:	mov    cl,0x41
  41e18a:	adc    al,0xf0
  41e18c:	and    al,BYTE PTR [ebp-0x17]
  41e18f:	sub    DWORD PTR [ebx-0x7e],eax
  41e192:	add    bh,BYTE PTR [ecx+0x6f]
  41e195:	loopne 0x41e1d4
  41e197:	adc    cl,BYTE PTR [edx+0x7d]
  41e19a:	sbb    BYTE PTR [edx],0xfd
  41e19d:	repz fld DWORD PTR [edi+0x2a]
  41e1a1:	cdq    
  41e1a2:	dec    edx
  41e1a3:	mov    ebx,0x9c27c4ef
  41e1a8:	push   0x44
  41e1aa:	pop    esi
  41e1ab:	inc    ecx
  41e1ac:	pop    esp
  41e1ad:	(bad)  
  41e1ae:	pop    ebp
  41e1af:	and    BYTE PTR [eax-0x2fb9a47c],bh
  41e1b5:	(bad)  
  41e1b6:	loopne 0x41e18f
  41e1b8:	sbb    edi,ebp
  41e1ba:	hlt    
  41e1bb:	fs push edi
  41e1bd:	jg     0x41e163
  41e1bf:	pusha  
  41e1c0:	mov    ebx,0xac41d36a
  41e1c5:	and    BYTE PTR [ebp+0x33d4bcc2],al
  41e1cb:	or     eax,0xa3f8c68
  41e1d0:	pop    esp
  41e1d1:	inc    eax
  41e1d2:	xchg   ecx,eax
  41e1d3:	cmp    BYTE PTR [ecx],dl
  41e1d5:	clc    
  41e1d6:	jmp    0xe27d6375
  41e1db:	sub    dh,BYTE PTR [eax+edx*8+0xd]
  41e1df:	fs popa 
  41e1e1:	pop    ebp
  41e1e2:	gs push esp
  41e1e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1e5:	mov    edi,DWORD PTR [ebx+0xeda967c]
  41e1eb:	call   0x5958:0x56bbde1a
  41e1f2:	xchg   DWORD PTR [esi+0x38],esi
  41e1f5:	ins    BYTE PTR es:[edi],dx
  41e1f6:	iret   
  41e1f7:	in     al,dx
  41e1f8:	in     eax,dx
  41e1f9:	jno    0x41e203
  41e1fb:	mov    ebx,0x875d4fa0
  41e200:	(bad)  [edx+0x36c18050]
  41e206:	into   
  41e207:	xor    edi,DWORD PTR ds:0xd924b355
  41e20d:	mov    al,0x50
  41e20f:	loopne 0x41e25d
  41e211:	addr16 push ecx
  41e213:	cmp    al,0x23
  41e215:	js     0x41e236
  41e217:	or     esi,ebx
  41e219:	int3   
  41e21a:	ins    BYTE PTR es:[edi],dx
  41e21b:	xor    dh,dh
  41e21d:	imul   esp,DWORD PTR [ebx-0x16a5458c],0xfffffffe
  41e224:	mov    al,0xf
  41e226:	add    cl,BYTE PTR [edx+0x71]
  41e229:	lahf   
  41e22a:	mov    ecx,0xcc4177ec
  41e22f:	daa    
  41e230:	and    BYTE PTR [edx],dl
  41e232:	mov    WORD PTR [ebx-0xf],?
  41e235:	clc    
  41e236:	cmp    BYTE PTR gs:[eax+0xdedfadc],ch
  41e23d:	mov    dl,0xe4
  41e23f:	into   
  41e240:	xchg   ebx,eax
  41e241:	out    dx,al
  41e242:	cld    
  41e243:	ffree  st(7)
  41e245:	add    BYTE PTR [ecx+0x6c],ch
  41e248:	dec    eax
  41e249:	cmp    eax,esp
  41e24b:	std    
  41e24c:	fsubr  QWORD PTR [edx]
  41e24e:	sbb    DWORD PTR [ebx+0x6f],esi
  41e251:	cdq    
  41e252:	js     0x41e2cc
  41e254:	push   esi
  41e255:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e256:	jne    0x41e23b
  41e258:	fidiv  WORD PTR [ebx+0x34]
  41e25b:	arpl   WORD PTR [ebp+ecx*4+0x53422770],ax
  41e262:	cdq    
  41e263:	mov    cs,WORD PTR [edi+ecx*1-0x49]
  41e267:	stc    
  41e268:	neg    BYTE PTR [ecx]
  41e26a:	pop    ebp
  41e26b:	stos   DWORD PTR es:[edi],eax
  41e26c:	lods   al,BYTE PTR ds:[esi]
  41e26d:	out    dx,al
  41e26e:	jne    0x41e26e
  41e270:	or     al,0x48
  41e272:	inc    eax
  41e273:	xor    al,0x51
  41e275:	cli    
  41e276:	aas    
  41e277:	pop    esp
  41e278:	iret   
  41e279:	(bad)  
  41e27a:	push   ebx
  41e27b:	arpl   ax,cx
  41e27d:	push   eax
  41e27e:	mov    dl,0x74
  41e280:	xchg   esp,eax
  41e281:	jb     0x41e27d
  41e283:	(bad)  
  41e284:	jnp    0x41e2d0
  41e286:	(bad)  
  41e287:	jmp    FWORD PTR [esi+eiz*4]
  41e28a:	mov    al,0xc2
  41e28c:	jg     0x41e253
  41e28e:	mov    bl,0xa2
  41e290:	dec    esp
  41e291:	xor    BYTE PTR ds:[esi-0x418a73df],cl
  41e298:	and    BYTE PTR [edx-0x510a87c8],bh
  41e29e:	test   al,0x7f
  41e2a0:	(bad)  [esi-0x65f38155]
  41e2a6:	xchg   ebx,eax
  41e2a7:	xor    DWORD PTR [esi],0x74
  41e2aa:	sbb    eax,0x32aa2ebf
  41e2af:	hlt    
  41e2b0:	dec    edi
  41e2b1:	mov    ebx,0xf6960082
  41e2b6:	jo     0x41e313
  41e2b8:	sub    DWORD PTR [ebp-0x5d],edx
  41e2bb:	leave  
  41e2bc:	(bad)  
  41e2bd:	out    0x96,eax
  41e2bf:	xchg   ebx,eax
  41e2c0:	(bad)  
  41e2c1:	loope  0x41e2ad
  41e2c3:	nop
  41e2c4:	xor    DWORD PTR [esi+0x2114e94d],esp
  41e2ca:	jne    0x41e306
  41e2cc:	aad    0xd0
  41e2ce:	xor    eax,0x8d85f1e7
  41e2d3:	arpl   WORD PTR [ecx],di
  41e2d5:	xlat   BYTE PTR ds:[ebx]
  41e2d6:	push   es
  41e2d7:	pop    ds
  41e2d8:	in     al,0x5e
  41e2da:	mov    dl,0x9
  41e2dc:	mov    ebp,0x33101dd0
  41e2e1:	fsubr  DWORD PTR [esi+0x2599bea]
  41e2e7:	lods   eax,DWORD PTR ds:[esi]
  41e2e8:	ret    0x7a8
  41e2eb:	mov    bh,0xb0
  41e2ed:	dec    edi
  41e2ee:	aas    
  41e2ef:	mov    dl,0xd1
  41e2f1:	xor    eax,0x6753641a
  41e2f6:	pop    ecx
  41e2f7:	push   ecx
  41e2f8:	aam    0x32
  41e2fa:	aad    0x0
  41e2fc:	lock repz push es
  41e2ff:	xor    al,bh
  41e301:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e302:	xchg   BYTE PTR [ebx-0x47],cl
  41e305:	cmp    ebp,DWORD PTR [ecx+0x50]
  41e308:	retf   0xc837
  41e30b:	fisub  WORD PTR [ecx-0x18f5baa8]
  41e311:	xor    DWORD PTR [edx],edi
  41e313:	(bad)  
  41e314:	out    0xe1,eax
  41e316:	loopne 0x41e2d9
  41e318:	sub    bh,al
  41e31a:	pop    edi
  41e31b:	add    ah,BYTE PTR [edx+0x20df64b6]
  41e321:	inc    edx
  41e322:	push   ss
  41e323:	test   BYTE PTR [ecx-0x5d],al
  41e326:	mov    ?,esi
  41e328:	(bad)  
  41e329:	jno    0x41e2cf
  41e32b:	xchg   ebp,eax
  41e32c:	sar    BYTE PTR [ebp+0x50],cl
  41e32f:	out    dx,al
  41e330:	xchg   edx,eax
  41e331:	(bad)
  41e335:	mov    dh,0x81
  41e337:	sub    DWORD PTR [ecx+0x3e9ff537],ebx
  41e33d:	loopne 0x41e2bf
  41e33f:	pop    esi
  41e340:	mov    ebp,0xa61fed4
  41e345:	sahf   
  41e346:	in     eax,dx
  41e347:	adc    ecx,DWORD PTR [ecx+0x1a621320]
  41e34d:	cld    
  41e34e:	add    cl,al
  41e350:	or     ecx,ecx
  41e352:	inc    eax
  41e353:	cmp    BYTE PTR [esi+0x70],ch
  41e356:	scas   eax,DWORD PTR es:[edi]
  41e357:	jae    0x41e3ca
  41e359:	mov    ds:0x82fa6a66,eax
  41e35e:	nop
  41e35f:	data16 out 0x5,al
  41e362:	xor    DWORD PTR [edx+ebx*8-0x54],0xef5de568
  41e36a:	stos   DWORD PTR es:[edi],eax
  41e36b:	call   0x859183e4
  41e370:	das    
  41e371:	inc    edx
  41e372:	loopne 0x41e3ea
  41e374:	jb     0x41e398
  41e376:	inc    edx
  41e377:	outs   dx,BYTE PTR ds:[esi]
  41e378:	idiv   DWORD PTR [eax-0xa149cb1]
  41e37e:	mov    ebp,0x6f033368
  41e383:	test   DWORD PTR [ebx+0x6a],eax
  41e386:	pop    ds
  41e387:	jl     0x41e38a
  41e389:	imul   ebp,DWORD PTR [ebx+eiz*1+0x4],0x32f1f933
  41e391:	jl     0x41e399
  41e393:	sub    al,0xb2
  41e395:	dec    ebp
  41e396:	xor    ah,dl
  41e398:	test   eax,0x2c18a06f
  41e39d:	stos   DWORD PTR es:[edi],eax
  41e39e:	and    eax,0xd38d97bc
  41e3a3:	pop    ecx
  41e3a4:	dec    esi
  41e3a5:	(bad)  
  41e3a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3a7:	ins    BYTE PTR es:[edi],dx
  41e3a8:	jmp    0x32b1:0x8824c4f3
  41e3af:	test   DWORD PTR [esi-0x3e27320f],ecx
  41e3b5:	icebp  
  41e3b6:	repnz and dl,BYTE PTR fs:[esi]
  41e3ba:	and    BYTE PTR [edi+0x6ae3aaeb],0x97
  41e3c1:	xchg   esp,eax
  41e3c2:	inc    edx
  41e3c3:	mov    WORD PTR [ecx],gs
  41e3c5:	xor    bh,bl
  41e3c7:	cs xchg ebp,eax
  41e3c9:	mov    ds:0x2a32fbec,eax
  41e3ce:	pop    ebp
  41e3cf:	in     al,dx
  41e3d0:	inc    eax
  41e3d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3d2:	jl     0x41e380
  41e3d4:	enter  0x5435,0x32
  41e3d8:	inc    esi
  41e3d9:	mov    edi,0x82527984
  41e3de:	push   ds
  41e3df:	inc    BYTE PTR [edi+0x1f]
  41e3e2:	int    0x0
  41e3e4:	pop    ecx
  41e3e5:	out    dx,eax
  41e3e6:	outs   dx,BYTE PTR ds:[esi]
  41e3e7:	mov    eax,?
  41e3e9:	cmp    edi,DWORD PTR [ebp-0x28]
  41e3ec:	out    0xb7,eax
  41e3ee:	in     eax,0x52
  41e3f0:	bswap  eax
  41e3f2:	jle    0x41e3e9
  41e3f4:	sub    BYTE PTR [ebp+eiz*2+0xf],bh
  41e3f8:	push   esi
  41e3f9:	xor    ecx,DWORD PTR [esi]
  41e3fb:	out    dx,al
  41e3fc:	inc    eax
  41e3fd:	mov    ebp,0xa465317a
  41e402:	mov    ebx,0xd279300c
  41e407:	cmc    
  41e408:	aaa    
  41e409:	gs xchg edx,eax
  41e40b:	mov    WORD PTR [eax],?
  41e40d:	mov    bh,0x84
  41e40f:	cmp    al,0x61
  41e411:	pushf  
  41e412:	sub    al,0x85
  41e414:	pop    ebp
  41e415:	pop    ecx
  41e416:	(bad)  
  41e417:	into   
  41e418:	inc    ebx
  41e419:	push   esi
  41e41a:	fadd   DWORD PTR [esp+ebx*8-0x5399c3ae]
  41e421:	pop    edx
  41e422:	sbb    BYTE PTR [ebx+0x73d4925c],0x7e
  41e429:	scas   eax,DWORD PTR es:[edi]
  41e42a:	sub    eax,0x5266fb95
  41e42f:	cmp    esp,esi
  41e431:	dec    esi
  41e432:	imul   ebp,DWORD PTR [edx+0x0],0x21a93b0e
  41e439:	(bad)  
  41e43a:	pop    ss
  41e43b:	push   esp
  41e43c:	jp     0x41e436
  41e43e:	in     al,0xe5
  41e440:	add    al,0x98
  41e442:	test   DWORD PTR [ebp-0x3b],ebp
  41e445:	repnz and DWORD PTR [esi+edx*8-0x71aa9830],eax
  41e44d:	mov    ch,0x40
  41e44f:	les    ebp,FWORD PTR [ebp+0x77]
  41e452:	cmp    DWORD PTR [edx-0x6c],esp
  41e455:	shl    BYTE PTR [ebp+0x29],1
  41e458:	sbb    eax,0x5ff16da1
  41e45d:	retf   0xf070
  41e460:	call   0xed7:0x7af15ffd
  41e467:	fbld   TBYTE PTR [ebx]
  41e469:	pop    esi
  41e46a:	mov    edx,DWORD PTR [ebp+0x72c1acf]
  41e470:	jmp    0x41e4e3
  41e472:	mov    dh,0x8e
  41e474:	xchg   esi,eax
  41e475:	mov    DWORD PTR [edx+0x2b],edi
  41e478:	mov    edi,0x1eb6c8d2
  41e47d:	daa    
  41e47e:	aaa    
  41e47f:	xchg   edx,eax
  41e480:	int3   
  41e481:	ret    
  41e482:	aam    0xe
  41e484:	push   esi
  41e485:	enter  0x3e61,0x7
  41e489:	pop    esi
  41e48a:	shl    BYTE PTR [ebp+0x33fbb97b],1
  41e490:	sbb    ah,ah
  41e492:	cld    
  41e493:	inc    esp
  41e494:	inc    edx
  41e495:	cdq    
  41e496:	ret    
  41e497:	push   esp
  41e498:	adc    al,0x12
  41e49a:	push   ds
  41e49b:	or     DWORD PTR [ebx-0xfead161],0x1e
  41e4a2:	cmp    edx,0xffffffbf
  41e4a5:	mov    bl,0xb7
  41e4a7:	mov    ds:0xc7f11477,al
  41e4ac:	ror    BYTE PTR [ebx-0x41],0x4e
  41e4b0:	jmp    0x582d:0xf6090d6e
  41e4b7:	jmp    0x63a4ef35
  41e4bc:	lock mov bl,0x87
  41e4bf:	mov    al,ds:0x8700b4bd
  41e4c4:	repnz loop 0x41e475
  41e4c7:	or     al,0xef
  41e4c9:	fiadd  DWORD PTR [esi-0x3c]
  41e4cc:	(bad)  
  41e4ce:	sub    al,0x62
  41e4d0:	mov    ?,WORD PTR [eax]
  41e4d2:	test   DWORD PTR [esi],0x5fb5824c
  41e4d8:	in     al,0x4d
  41e4da:	mov    esp,0x1444b42a
  41e4df:	je     0x41e4d3
  41e4e1:	popf   
  41e4e2:	(bad)  
  41e4e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4e4:	push   eax
  41e4e5:	enter  0x4ea3,0x8c
  41e4e9:	push   edx
  41e4ea:	adc    BYTE PTR [eax+edx*4-0x80],al
  41e4ee:	fldl2e 
  41e4f0:	test   al,bl
  41e4f2:	pop    ds
  41e4f3:	(bad)  
  41e4f4:	mov    eax,ds:0xf291cafc
  41e4f9:	xchg   edx,eax
  41e4fa:	xlat   BYTE PTR ds:[ebx]
  41e4fb:	jmp    0x41e4e0
  41e4fd:	xor    ecx,edi
  41e4ff:	leave  
  41e500:	xchg   edi,eax
  41e501:	fcmovnu st,st(6)
  41e503:	xlat   BYTE PTR ds:[ebx]
  41e504:	jb     0x41e518
  41e506:	add    eax,0xb424bfd7
  41e50b:	out    0x61,al
  41e50d:	sub    edi,DWORD PTR [edi-0xa]
  41e510:	popa   
  41e511:	adc    DWORD PTR [eax+0x1de3ca],ecx
  41e517:	cdq    
  41e518:	xchg   BYTE PTR [edx-0x1b2d5760],ah
  41e51e:	dec    ebp
  41e51f:	fimul  DWORD PTR [ebp+0x2c38e092]
  41e525:	xchg   bh,dh
  41e527:	(bad)  
  41e528:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e529:	cld    
  41e52a:	mov    esi,DWORD PTR [ebx]
  41e52c:	in     al,0xec
  41e52e:	sti    
  41e52f:	sbb    eax,0x2cffcf12
  41e534:	pop    ebx
  41e535:	pusha  
  41e536:	test   eax,ecx
  41e538:	jg     0x41e4bb
  41e53a:	push   ecx
  41e53b:	push   ecx
  41e53c:	jb     0x41e59b
  41e53e:	test   al,0xd4
  41e540:	xchg   edx,eax
  41e541:	hlt    
  41e542:	sbb    ch,BYTE PTR [eax-0xb]
  41e545:	push   ds
  41e546:	pop    es
  41e547:	test   BYTE PTR [eax],bh
  41e549:	pop    edx
  41e54a:	sbb    BYTE PTR [ecx-0x6f5749bc],0xd9
  41e551:	int    0x48
  41e553:	adc    eax,0x1e972214
  41e558:	dec    ebp
  41e559:	add    al,0x38
  41e55b:	pop    esi
  41e55c:	adc    bl,dh
  41e55e:	mov    ah,0xb8
  41e560:	xor    BYTE PTR [eax-0x578f1230],dh
  41e566:	inc    ecx
  41e567:	pushf  
  41e568:	loope  0x41e59e
  41e56a:	cmp    dh,BYTE PTR [esi]
  41e56c:	pop    ebx
  41e56d:	(bad)  
  41e56e:	hlt    
  41e56f:	adc    BYTE PTR [ebx+0x67],ah
  41e572:	or     eax,0x76b25273
  41e577:	xchg   ebx,eax
  41e578:	jmp    0x41e530
  41e57a:	iret   
  41e57b:	cli    
  41e57c:	and    ebx,DWORD PTR [ecx]
  41e57e:	sub    DWORD PTR [edx-0x6a7e8118],eax
  41e584:	shl    BYTE PTR [ebp+0xd],0x58
  41e588:	outs   dx,BYTE PTR ds:[esi]
  41e589:	sbb    ch,BYTE PTR [edi-0x35]
  41e58c:	enter  0xba8e,0x3b
  41e590:	cmc    
  41e591:	stos   DWORD PTR es:[edi],eax
  41e592:	pushf  
  41e593:	or     BYTE PTR [ebp+0x1a],dl
  41e596:	mov    gs,WORD PTR [edx+0x7e]
  41e599:	pop    edi
  41e59a:	shr    BYTE PTR [eax-0x1b777cc6],0x52
  41e5a1:	repz call 0x57ba45d6
  41e5a7:	nop
  41e5a8:	push   edi
  41e5a9:	test   BYTE PTR [edi+0xa],dh
  41e5ac:	add    al,0x1b
  41e5ae:	nop
  41e5af:	test   al,0x98
  41e5b1:	arpl   WORD PTR [eax],si
  41e5b3:	or     esp,DWORD PTR [edi+0x7eff3fdf]
  41e5b9:	jmp    FWORD PTR [edi]
  41e5bb:	dec    esp
  41e5bc:	fmul   DWORD PTR [edx-0x6e0eb5ad]
  41e5c2:	daa    
  41e5c3:	lock retf 0xa5be
  41e5c7:	dec    esp
  41e5c8:	les    esp,FWORD PTR [esi+0x3b]
  41e5cb:	jb     0x41e5d6
  41e5cd:	dec    eax
  41e5ce:	call   0xdb9e:0x4cac19be
  41e5d5:	sar    esp,0x9f
  41e5d8:	out    0x92,eax
  41e5da:	retf   0xd5f7
  41e5dd:	mov    al,ds:0x1127ff94
  41e5e2:	push   edx
  41e5e3:	mov    ch,0xe1
  41e5e5:	repz inc ecx
  41e5e7:	cdq    
  41e5e8:	pop    ds
  41e5e9:	data16 adc al,0x56
  41e5ec:	pusha  
  41e5ed:	std    
  41e5ee:	push   ecx
  41e5ef:	std    
  41e5f0:	xor    al,0xe1
  41e5f2:	jb     0x41e643
  41e5f4:	inc    ebx
  41e5f5:	in     eax,0xa1
  41e5f7:	dec    esi
  41e5f8:	pop    edx
  41e5f9:	mov    eax,ds:0x14570600
  41e5fe:	lock mov bh,0x7
  41e601:	add    ch,BYTE PTR [edx]
  41e603:	xlat   BYTE PTR ds:[ebx]
  41e604:	aad    0xb6
  41e606:	inc    ebx
  41e607:	daa    
  41e608:	add    cl,BYTE PTR [ebx-0x28a472c4]
  41e60e:	bound  eax,QWORD PTR ds:0xde8ecb06
  41e614:	adc    DWORD PTR [ecx+ebx*1],ecx
  41e617:	shl    BYTE PTR [ebx],0x7c
  41e61a:	sub    eax,DWORD PTR [ebp+eax*8+0x390365ff]
  41e621:	sbb    BYTE PTR [edx],cl
  41e623:	out    0xcb,al
  41e625:	(bad)  
  41e626:	repnz (bad) 
  41e628:	or     DWORD PTR [ecx-0x61b953f2],eax
  41e62e:	jbe    0x41e5c8
  41e630:	out    0xae,eax
  41e632:	add    esi,ecx
  41e634:	lds    eax,FWORD PTR [esi]
  41e636:	cmp    al,0x7e
  41e638:	sub    ecx,ebp
  41e63a:	mov    BYTE PTR [eax-0x761256ba],0x13
  41e641:	or     BYTE PTR [esi],0x3b
  41e644:	and    ch,cl
  41e646:	js     0x41e63b
  41e648:	dec    eax
  41e649:	fidiv  DWORD PTR [esi]
  41e64b:	jb     0x41e5df
  41e64d:	sub    al,0xef
  41e64f:	cmp    eax,0xb8187338
  41e654:	inc    edi
  41e655:	xchg   ecx,eax
  41e656:	pop    ecx
  41e657:	or     esi,edi
  41e659:	call   0xdd60:0x5fe6f647
  41e660:	inc    esi
  41e661:	hlt    
  41e662:	inc    esp
  41e663:	addr16 jne 0x41e5e7
  41e666:	iret   
  41e667:	std    
  41e668:	and    al,0xf9
  41e66a:	jecxz  0x41e60d
  41e66c:	mov    esp,0x4e4f1936
  41e671:	or     al,0x5b
  41e673:	ins    BYTE PTR es:[edi],dx
  41e674:	scas   al,BYTE PTR es:[edi]
  41e675:	pop    ebx
  41e676:	(bad)  
  41e677:	mov    ah,0xed
  41e679:	out    0x1e,al
  41e67b:	jmp    0xe53570b9
  41e680:	dec    edi
  41e681:	popa   
  41e682:	add    DWORD PTR [edx+edx*1-0xf03d0c9],ebp
  41e689:	mov    bh,0xad
  41e68b:	mov    dh,BYTE PTR [edx+0x3c9c5aa2]
  41e691:	push   es
  41e692:	pop    ds
  41e693:	sub    eax,0x6baa0695
  41e698:	fs cmp edx,ebx
  41e69b:	mov    DWORD PTR [eax],ebx
  41e69d:	pop    esp
  41e69e:	(bad)  
  41e69f:	(bad)  
  41e6a0:	add    al,0x1b
  41e6a2:	daa    
  41e6a3:	pop    ebp
  41e6a4:	mov    dl,bh
  41e6a6:	add    dh,BYTE PTR [eax]
  41e6a8:	(bad)  
  41e6a9:	fidivr WORD PTR [edx+esi*8]
  41e6ac:	out    0xf2,al
  41e6ae:	loop   0x41e6d0
  41e6b0:	fild   QWORD PTR ds:0xf5ffaaa2
  41e6b6:	and    bh,BYTE PTR [edi+0x380d1466]
  41e6bc:	out    dx,eax
  41e6bd:	shl    DWORD PTR [ecx+ebx*1+0x6c70d88],1
  41e6c4:	mov    edi,0xfbe4d0bc
  41e6c9:	jnp    0x41e6bf
  41e6cb:	syscall 
  41e6cd:	add    al,dh
  41e6cf:	scas   eax,DWORD PTR es:[edi]
  41e6d0:	nop
  41e6d1:	push   ds
  41e6d2:	mov    ebx,0xf5565b20
  41e6d7:	jp     0x41e668
  41e6d9:	fcom   DWORD PTR [ecx]
  41e6db:	out    dx,eax
  41e6dc:	jbe    0x41e74e
  41e6de:	cmp    BYTE PTR [ebx],bl
  41e6e0:	sti    
  41e6e1:	(bad)  
  41e6e2:	popa   
  41e6e3:	popf   
  41e6e4:	mov    edx,0xd4ee9954
  41e6e9:	(bad)  
  41e6ea:	fmul   QWORD PTR [ecx]
  41e6ec:	mov    ch,0xb6
  41e6ee:	inc    ecx
  41e6ef:	shl    BYTE PTR [ebp+ecx*2-0x6466dc73],0xe9
  41e6f7:	or     DWORD PTR [ebx],0xffffffb6
  41e6fa:	and    bl,BYTE PTR [eax+0x7c]
  41e6fd:	dec    ebp
  41e6fe:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41e700:	xor    dl,ah
  41e702:	pop    es
  41e703:	sbb    bl,ah
  41e705:	(bad)  
  41e706:	in     al,dx
  41e707:	mov    edi,0x870b2251
  41e70c:	test   dh,dh
  41e70e:	lock es inc ebx
  41e711:	mov    eax,ds:0xd16be194
  41e716:	mov    ah,0x11
  41e718:	in     eax,dx
  41e719:	(bad)
  41e71c:	bound  ebx,QWORD PTR [edi]
  41e71e:	xchg   esp,eax
  41e71f:	lds    esp,FWORD PTR [eax]
  41e721:	clc    
  41e722:	fiadd  DWORD PTR ds:0xa813c57a
  41e728:	ins    BYTE PTR es:[edi],dx
  41e729:	retf   
  41e72a:	jno    0x41e79f
  41e72c:	pusha  
  41e72d:	mov    edi,0x1fe4263e
  41e732:	test   BYTE PTR [esi-0x72],dh
  41e735:	enter  0xf41a,0xa2
  41e739:	bound  edx,QWORD PTR [ebx+0x61]
  41e73c:	fwait
  41e73d:	push   ecx
  41e73e:	imul   edi,DWORD PTR [ebp+0x74a831f3],0x22f73a00
  41e748:	mov    ?,WORD PTR [ebx*4-0x3522e43f]
  41e74f:	rcr    DWORD PTR [ecx+0x2f],cl
  41e752:	or     al,0x9c
  41e754:	fcom   DWORD PTR [edi-0x7c641c24]
  41e75a:	pusha  
  41e75b:	add    DWORD PTR [eax-0x24],ecx
  41e75e:	scas   al,BYTE PTR es:[edi]
  41e75f:	xchg   ebx,eax
  41e760:	mov    dl,0xe1
  41e762:	mov    bh,0xc0
  41e764:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e765:	scas   al,BYTE PTR es:[edi]
  41e766:	cmp    dl,BYTE PTR [edx-0x33e447c5]
  41e76c:	and    esp,DWORD PTR [ecx]
  41e76e:	xchg   ebx,eax
  41e76f:	mov    cl,0xf9
  41e771:	xchg   edi,eax
  41e772:	repnz push ss
  41e774:	daa    
  41e775:	add    ebp,ebp
  41e777:	gs xchg esp,eax
  41e779:	jno    0x41e70a
  41e77b:	push   0x8aea0f28
  41e780:	sub    eax,0xa2c90304
  41e785:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e786:	(bad)  
  41e787:	enter  0x9e75,0x76
  41e78b:	xchg   ebp,eax
  41e78c:	cld    
  41e78d:	pop    eax
  41e78e:	hlt    
  41e78f:	dec    ebp
  41e790:	adc    BYTE PTR [esi+0x49ef00b1],ch
  41e796:	mov    edi,0x12337332
  41e79b:	xchg   edx,eax
  41e79c:	fidiv  DWORD PTR gs:[edx]
  41e79f:	lea    edi,[edi+edx*4-0x5c696dda]
  41e7a6:	das    
  41e7a7:	dec    DWORD PTR [ecx]
  41e7a9:	mov    ch,0x15
  41e7ab:	push   0x7d
  41e7ad:	push   0xffffff8c
  41e7af:	icebp  
  41e7b0:	int3   
  41e7b1:	adc    al,0x7d
  41e7b3:	xchg   ebp,eax
  41e7b4:	jns    0x41e779
  41e7b6:	stos   BYTE PTR es:[edi],al
  41e7b7:	pop    edi
  41e7b8:	and    eax,0xfd05029a
  41e7bd:	adc    al,0x79
  41e7bf:	cld    
  41e7c0:	push   DWORD PTR [ebp-0x728ba582]
  41e7c6:	fxch   st(6)
  41e7c8:	mov    esi,0xe0bf6b09
  41e7cd:	mov    bh,bh
  41e7cf:	xchg   esp,eax
  41e7d0:	out    dx,eax
  41e7d1:	fwait
  41e7d2:	(bad)  
  41e7d3:	mov    eax,0xbda948af
  41e7d8:	leave  
  41e7d9:	mov    eax,ds:0xe751d3b0
  41e7de:	pop    ecx
  41e7df:	fst    QWORD PTR [edx]
  41e7e1:	pop    esi
  41e7e2:	lods   eax,DWORD PTR ds:[esi]
  41e7e3:	int3   
  41e7e4:	out    0x9d,al
  41e7e6:	clc    
  41e7e7:	out    0x3f,eax
  41e7e9:	add    eax,DWORD PTR [edx+ecx*1]
  41e7ec:	mov    bl,0x51
  41e7ee:	xor    cl,BYTE PTR [edi]
  41e7f0:	mov    ah,BYTE PTR [edx]
  41e7f2:	or     dl,BYTE PTR [esi-0xc]
  41e7f5:	xchg   edi,eax
  41e7f6:	sub    cl,BYTE PTR [edx-0x2b35d16b]
  41e7fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7fd:	aam    0x27
  41e7ff:	sbb    esp,DWORD PTR [esi-0x5b]
  41e802:	adc    esi,esp
  41e804:	adc    bh,BYTE PTR [ebx+0x1132f81]
  41e80a:	rcl    BYTE PTR [edx+0x29f4e6a7],0x54
  41e811:	lds    esp,FWORD PTR [edx-0x6f]
  41e814:	inc    edi
  41e815:	jmp    0x9550f363
  41e81a:	aas    
  41e81b:	rcl    DWORD PTR [eax+ebp*8],1
  41e81e:	in     eax,dx
  41e81f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e820:	inc    edx
  41e821:	pushf  
  41e822:	add    al,0xa6
  41e824:	adc    DWORD PTR [edi+eax*2],eax
  41e827:	cmp    al,0x34
  41e829:	push   edi
  41e82a:	(bad)  
  41e82b:	(bad)  
  41e82c:	out    dx,eax
  41e82d:	lods   eax,DWORD PTR ds:[esi]
  41e82e:	ss and esp,0x10
  41e832:	cmp    bl,BYTE PTR [ebp+0x2c]
  41e835:	dec    ebx
  41e836:	cmp    esi,esi
  41e838:	jae    0x41e881
  41e83a:	popa   
  41e83b:	(bad)  
  41e83c:	pop    esi
  41e83d:	outs   dx,DWORD PTR ds:[esi]
  41e83e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e83f:	fnstenv [edx-0x1c]
  41e842:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e843:	scas   al,BYTE PTR es:[edi]
  41e844:	mov    cl,0x33
  41e846:	retf   0x2852
  41e849:	mov    esi,0x2d0b2784
  41e84e:	sbb    ah,BYTE PTR ds:0x211a8ab1
  41e854:	(bad)  
  41e855:	stc    
  41e856:	xor    cl,BYTE PTR [ebx-0x8]
  41e859:	std    
  41e85a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e85b:	push   ecx
  41e85c:	sub    eax,0xab8b415a
  41e861:	fbstp  TBYTE PTR [edx]
  41e863:	xor    ecx,esp
  41e865:	push   ebp
  41e866:	call   0xca0e:0x10c0f7a6
  41e86d:	jns    0x41e89b
  41e86f:	fwait
  41e870:	jo     0x41e83c
  41e872:	push   edi
  41e873:	sub    BYTE PTR [edx],al
  41e875:	adc    al,0x1d
  41e877:	in     al,0x20
  41e879:	and    BYTE PTR [edx],dh
  41e87b:	add    bh,BYTE PTR [ebp+0x11bc2076]
  41e881:	push   edi
  41e882:	sub    al,0x80
  41e884:	mov    ds:0xea34b93b,eax
  41e889:	outs   dx,BYTE PTR ds:[esi]
  41e88a:	loope  0x41e901
  41e88c:	pop    ss
  41e88d:	sbb    dl,ch
  41e88f:	mov    ecx,0x61e6b95e
  41e894:	pop    ds
  41e895:	cdq    
  41e896:	jp     0x41e890
  41e898:	jae    0x41e8e8
  41e89a:	xchg   ecx,eax
  41e89b:	pop    ds
  41e89c:	mov    eax,0xaf9e5366
  41e8a1:	shl    al,1
  41e8a3:	(bad)  [ebx+0x42]
  41e8a6:	sub    al,0x4
  41e8a8:	lahf   
  41e8a9:	loop   0x41e8cb
  41e8ab:	push   cs
  41e8ac:	sub    bh,bl
  41e8ae:	push   eax
  41e8af:	push   esi
  41e8b0:	inc    eax
  41e8b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8b2:	adc    al,0x24
  41e8b4:	fwait
  41e8b5:	iret   
  41e8b6:	pop    edi
  41e8b7:	jge    0x41e927
  41e8b9:	jmp    0x41e8da
  41e8bb:	jle    0x41e86a
  41e8bd:	(bad)  
  41e8be:	sahf   
  41e8bf:	or     ebp,DWORD PTR [edi]
  41e8c1:	cld    
  41e8c2:	scas   eax,DWORD PTR es:[edi]
  41e8c3:	add    ebx,DWORD PTR [edx]
  41e8c5:	lods   al,BYTE PTR ds:[esi]
  41e8c6:	neg    DWORD PTR [ebx+ecx*8+0x38ab88bb]
  41e8cd:	dec    ebp
  41e8ce:	jno    0x41e869
  41e8d0:	adc    dh,dl
  41e8d2:	push   ebx
  41e8d3:	mov    ebx,0x472b8e34
  41e8d8:	sti    
  41e8d9:	mov    bh,0xee
  41e8db:	aad    0x20
  41e8dd:	inc    ebp
  41e8de:	ret    0xd908
  41e8e1:	jmp    0x41e885
  41e8e3:	adc    eax,0xd516006
  41e8e8:	lods   al,BYTE PTR ds:[esi]
  41e8e9:	mov    cl,0xae
  41e8eb:	in     al,0x2c
  41e8ed:	xor    BYTE PTR [esi-0x40a9aaf3],bl
  41e8f3:	lahf   
  41e8f4:	(bad)  
  41e8f6:	scas   eax,DWORD PTR es:[edi]
  41e8f7:	call   0x706c:0xd2a46d3c
  41e8fe:	lds    esp,FWORD PTR [eax-0x7e]
  41e901:	sub    eax,DWORD PTR [ecx-0x2a053475]
  41e907:	aad    0xc4
  41e909:	imul   ebx,DWORD PTR [eax-0x12e6b10f],0x9e474ed1
  41e913:	mov    esi,0x324be213
  41e918:	jecxz  0x41e8e9
  41e91a:	pop    esp
  41e91b:	(bad)  
  41e91c:	and    eax,0xbc0a98fe
  41e921:	xchg   edx,eax
  41e922:	sbb    BYTE PTR [ebp-0x5f0a7f74],al
  41e928:	sbb    al,BYTE PTR [esi]
  41e92a:	or     edi,ecx
  41e92c:	mov    ch,0x84
  41e92e:	pop    esi
  41e92f:	jge    0x41e9a2
  41e931:	ret    0xa6ca
  41e934:	vxorpd ymm7,ymm5,YMMWORD PTR [ecx]
  41e938:	cmc    
  41e939:	sbb    eax,0xcf762438
  41e93e:	mov    ebx,0x12d2637b
  41e943:	cdq    
  41e944:	jge    0x41e91b
  41e946:	(bad)  
  41e947:	retf   
  41e948:	out    dx,eax
  41e949:	out    dx,eax
  41e94a:	repnz out dx,al
  41e94c:	fs dec edx
  41e94e:	es aam 0xa
  41e951:	push   esi
  41e952:	inc    eax
  41e953:	inc    edi
  41e954:	jl     0x41e909
  41e956:	push   ebx
  41e957:	cmc    
  41e958:	inc    edi
  41e959:	mov    al,ds:0xe1a92e5e
  41e95e:	sub    DWORD PTR ds:0xacf93026,0xfa9aa5c0
  41e968:	jp     0x41e92b
  41e96a:	fstp   st(5)
  41e96c:	icebp  
  41e96d:	pop    esi
  41e96e:	dec    edx
  41e96f:	inc    ebp
  41e970:	shr    BYTE PTR [eax-0x54],1
  41e973:	mov    dl,0x61
  41e975:	repz cmp ebx,DWORD PTR [ebx]
  41e978:	jbe    0x41e9a1
  41e97a:	add    ch,BYTE PTR [eax+0x5c]
  41e97d:	lods   eax,DWORD PTR ds:[esi]
  41e97e:	sti    
  41e97f:	jae    0x41e90b
  41e981:	pop    ecx
  41e982:	adc    DWORD PTR [edi+0x206345e],esi
  41e988:	sub    bl,BYTE PTR [eax]
  41e98a:	dec    edx
  41e98b:	outs   dx,BYTE PTR ds:[esi]
  41e98c:	outs   dx,DWORD PTR ds:[esi]
  41e98d:	xchg   edi,eax
  41e98e:	outs   dx,BYTE PTR ds:[esi]
  41e98f:	mov    eax,ds:0x95137f5c
  41e994:	inc    esp
  41e995:	call   FWORD PTR [eax+0x17c6459d]
  41e99b:	xor    eax,0xdce0b3f3
  41e9a0:	(bad)  
  41e9a2:	hlt    
  41e9a3:	aad    0x9c
  41e9a5:	pushf  
  41e9a6:	neg    BYTE PTR [ebp+0xf]
  41e9a9:	xchg   esi,eax
  41e9aa:	and    eax,0x472dc7ac
  41e9af:	xor    DWORD PTR [eax+0x45],ebp
  41e9b2:	sub    BYTE PTR [eax-0x4f779ef9],al
  41e9b8:	sahf   
  41e9b9:	gs nop
  41e9bb:	retf   0x1f2d
  41e9be:	inc    edx
  41e9bf:	cmp    eax,0x9ca73269
  41e9c4:	pop    ebp
  41e9c5:	arpl   WORD PTR [ebp-0x94ec83],di
  41e9cb:	fdiv   st(7),st
  41e9cd:	(bad)  
  41e9ce:	mov    bh,0x5e
  41e9d0:	jno    0x41e9a3
  41e9d2:	xor    al,BYTE PTR [ecx]
  41e9d4:	sar    BYTE PTR [esi-0x5e104f0a],0x4e
  41e9db:	out    dx,eax
  41e9dc:	cs inc bx
  41e9df:	fcomip st,st(7)
  41e9e1:	add    ah,dl
  41e9e3:	jle    0x41ea2d
  41e9e5:	ds das 
  41e9e7:	call   0x232b:0xf0b2f60
  41e9ee:	inc    ecx
  41e9ef:	sbb    ecx,esp
  41e9f1:	xor    eax,0x75
  41e9f4:	mov    dl,0xc5
  41e9f6:	popa   
  41e9f7:	in     eax,0x59
  41e9f9:	fistp  DWORD PTR [eax+edx*2+0x2167a61d]
  41ea00:	in     eax,dx
  41ea01:	and    cl,bh
  41ea03:	stc    
  41ea04:	arpl   bx,bx
  41ea06:	pop    ds
  41ea07:	sub    al,0xad
  41ea09:	test   DWORD PTR [ecx+0x5e7f4e9],eax
  41ea0f:	in     al,0x94
  41ea11:	les    ebx,FWORD PTR [edx]
  41ea13:	or     ah,cl
  41ea15:	clc    
  41ea16:	fs loope 0x41e9f2
  41ea19:	cmp    eax,0x7e58be2
  41ea1e:	adc    DWORD PTR ds:0x506de790,esp
  41ea24:	adc    eax,0x17dfe0cf
  41ea29:	lods   al,BYTE PTR ds:[esi]
  41ea2a:	push   edi
  41ea2b:	retf   
  41ea2c:	retf   0x935f
  41ea2f:	adc    dh,BYTE PTR cs:[edi+0x3e]
  41ea33:	push   esp
  41ea34:	les    edi,FWORD PTR [ebp+ecx*2+0x3f0d63e5]
  41ea3b:	ret    
  41ea3c:	ja     0x41ea19
  41ea3e:	fdiv   QWORD PTR cs:[bx+di+0x1]
  41ea43:	(bad)  
  41ea44:	push   edi
  41ea45:	cmp    al,0x1e
  41ea48:	and    BYTE PTR [ebx-0x40],dh
  41ea4b:	jnp    0x41ea8c
  41ea4d:	ret    0x7eb0
  41ea50:	dec    edx
  41ea51:	jg     0x41eab3
  41ea53:	pop    ss
  41ea54:	out    dx,al
  41ea55:	(bad)  
  41ea56:	or     DWORD PTR [edi-0x31e4e8b3],ebx
  41ea5c:	mov    ecx,0x7c039b4c
  41ea61:	ficom  WORD PTR [ebx+eiz*2]
  41ea64:	push   0x7a
  41ea66:	nop
  41ea67:	int    0xf
  41ea69:	mov    ebx,0xf5b5f220
  41ea6e:	push   cs
  41ea6f:	and    BYTE PTR [edi+0x1ce60791],0x35
  41ea76:	jno    0x41ea2f
  41ea78:	mov    ah,0x39
  41ea7a:	xor    BYTE PTR [ecx],0x85
  41ea7d:	xchg   BYTE PTR [esp+ecx*4-0x6213a27f],dh
  41ea84:	cld    
  41ea85:	jle    0x41eac3
  41ea87:	cdq    
  41ea88:	cmp    eax,0x6d6feff6
  41ea8d:	cmp    bl,dh
  41ea8f:	dec    ecx
  41ea90:	sbb    BYTE PTR [esi+0x7f],ch
  41ea93:	les    bp,DWORD PTR [esi]
  41ea96:	pop    esp
  41ea97:	outs   dx,BYTE PTR ds:[esi]
  41ea98:	lock mov ebx,0xbd99f82e
  41ea9e:	cmp    BYTE PTR [ecx-0x2dd3af05],bl
  41eaa4:	jp     0x41eab5
  41eaa6:	in     al,dx
  41eaa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eaa8:	out    0x10,al
  41eaaa:	xchg   esp,eax
  41eaab:	stos   BYTE PTR es:[edi],al
  41eaac:	pop    ecx
  41eaad:	push   ecx
  41eaae:	cmp    al,0x29
  41eab0:	popf   
  41eab1:	or     edx,ebx
  41eab3:	mov    cl,0x72
  41eab5:	fwait
  41eab6:	and    esp,DWORD PTR [edx]
  41eab8:	fidivr WORD PTR [ebx+edi*8-0x2e]
  41eabc:	dec    ebx
  41eabd:	sub    eax,0x5da8ef81
  41eac2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eac3:	xor    dh,BYTE PTR [eax+0x6b]
  41eac6:	mov    ah,BYTE PTR [esi]
  41eac8:	scas   eax,DWORD PTR es:[edi]
  41eac9:	pusha  
  41eaca:	pushf  
  41eacb:	mov    ds:0x3da16075,al
  41ead0:	or     al,0xd4
  41ead2:	pushf  
  41ead3:	nop
  41ead4:	dec    eax
  41ead5:	ret    0x30c0
  41ead8:	push   0xc1c00147
  41eadd:	fcom   QWORD PTR [esi+0x19]
  41eae0:	jg     0x41ead6
  41eae2:	daa    
  41eae3:	pop    ds
  41eae4:	fstp   DWORD PTR [eax]
  41eae6:	mov    eax,ds:0xaffa3353
  41eaeb:	xchg   edx,eax
  41eaec:	inc    edi
  41eaed:	test   al,0xaa
  41eaef:	lahf   
  41eaf0:	inc    BYTE PTR [ecx+0x25dfbda5]
  41eaf6:	dec    ebx
  41eaf7:	mov    bl,BYTE PTR [edx]
  41eaf9:	lods   al,BYTE PTR ds:[esi]
  41eafa:	div    DWORD PTR [ecx+0x7a]
  41eafd:	pusha  
  41eafe:	mov    edi,0xfa3c8d5d
  41eb03:	push   0x6dc4c0ac
  41eb08:	sbb    esi,esi
  41eb0a:	dec    ecx
  41eb0b:	cmp    ebx,0x16
  41eb0e:	ret    
  41eb0f:	mov    cs,WORD PTR [ebp+0x5efdac0e]
  41eb15:	cmp    eax,0xc6e37296
  41eb1a:	bound  ecx,QWORD PTR [ebp+0xe]
  41eb1d:	inc    edi
  41eb1e:	pushf  
  41eb1f:	cmp    cl,BYTE PTR [esi-0x4a]
  41eb22:	ror    BYTE PTR [esi-0x7801dd8e],0x72
  41eb29:	fcomi  st,st(0)
  41eb2b:	add    DWORD PTR [ebx-0x781fc612],edx
  41eb31:	mov    DWORD PTR [ebx+edi*4],eax
  41eb34:	mov    WORD PTR [ebp+0x72],ds
  41eb37:	lahf   
  41eb38:	push   edx
  41eb39:	add    ah,dh
  41eb3b:	xor    esi,DWORD PTR [edi]
  41eb3d:	or     DWORD PTR [ebp*8-0x34f97e9a],ebx
  41eb44:	push   ss
  41eb45:	xor    eax,0x29b104aa
  41eb4a:	test   edi,ecx
  41eb4c:	dec    esi
  41eb4d:	pop    ebp
  41eb4e:	push   edi
  41eb4f:	xor    BYTE PTR [eax-0x3c5c9750],dl
  41eb55:	and    eax,0x25620c93
  41eb5a:	das    
  41eb5b:	cmp    DWORD PTR [edi+0x1e],ebp
  41eb5e:	jg     0x41ebb8
  41eb60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb61:	outs   dx,BYTE PTR ss:[esi]
  41eb63:	fisubr DWORD PTR [eax+0x59]
  41eb66:	jl     0x41ebad
  41eb68:	shl    BYTE PTR [ebx+0xb],0x87
  41eb6c:	add    al,0x19
  41eb6e:	shl    al,0x55
  41eb71:	jne    0x41eba2
  41eb73:	sbb    ch,BYTE PTR [ebx+0x7f]
  41eb76:	aas    
  41eb77:	mov    eax,0xa2d52261
  41eb7c:	and    eax,0x5901488
  41eb81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb82:	xchg   dh,bh
  41eb84:	ins    DWORD PTR es:[edi],dx
  41eb85:	repnz retf 0x2ffb
  41eb89:	pop    ds
  41eb8a:	aam    0x7b
  41eb8c:	cdq    
  41eb8d:	jl     0x41eb83
  41eb8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb90:	mov    ds:0x907cf768,al
  41eb95:	loope  0x41eb84
  41eb97:	jno    0x41ebd8
  41eb99:	data16 and BYTE PTR [ebx-0x4d9d6463],0xfd
  41eba1:	stc    
  41eba2:	sub    eax,0x2ee93dfa
  41eba7:	xor    eax,DWORD PTR es:[edx+0x511013c5]
  41ebae:	daa    
  41ebaf:	mov    ebx,0x9a606972
  41ebb4:	jp     0x41ebbc
  41ebb6:	inc    edx
  41ebb7:	and    dl,dh
  41ebb9:	lods   al,BYTE PTR ds:[esi]
  41ebba:	jge    0x41eb4b
  41ebbc:	rcl    edi,0xb1
  41ebbf:	mov    ds:0xfa48a0c1,al
  41ebc4:	retf   0xd13
  41ebc7:	(bad)  
  41ebc8:	stos   BYTE PTR es:[edi],al
  41ebc9:	ins    BYTE PTR es:[edi],dx
  41ebca:	xor    al,0x10
  41ebcc:	mov    edi,0x289f3656
  41ebd1:	out    0x28,eax
  41ebd3:	div    DWORD PTR gs:[ebx-0x3c]
  41ebd7:	pop    eax
  41ebd8:	inc    esi
  41ebd9:	aaa    
  41ebda:	imul   edx,esp,0x1f5492a8
  41ebe0:	fwait
  41ebe1:	gs mov esi,0xd0672b1a
  41ebe7:	leave  
  41ebe8:	jp     0x41eba9
  41ebea:	jmp    0x41eb6f
  41ebec:	test   al,dh
  41ebee:	or     edi,DWORD PTR [ecx+eiz*1+0x65]
  41ebf2:	lds    esp,FWORD PTR [ebx-0x59]
  41ebf5:	mov    esi,esp
  41ebf7:	clc    
  41ebf8:	mov    dl,0xb4
  41ebfa:	dec    edi
  41ebfb:	rol    DWORD PTR [esp+ebx*4-0x59],cl
  41ebff:	int    0x8f
  41ec01:	sub    BYTE PTR [esi+eax*4-0x10ce4347],ah
  41ec08:	xchg   ecx,eax
  41ec09:	adc    al,0xbd
  41ec0b:	xor    BYTE PTR [edi],ch
  41ec0d:	icebp  
  41ec0e:	mov    esi,0x26f8e490
  41ec13:	dec    eax
  41ec14:	and    bh,cl
  41ec16:	pop    ds
  41ec17:	into   
  41ec18:	jno    0x41ec88
  41ec1a:	stc    
  41ec1b:	mov    ebp,0x4fbc538c
  41ec20:	xchg   ecx,eax
  41ec21:	popf   
  41ec22:	mov    edi,esi
  41ec24:	jg     0x41ec61
  41ec26:	xchg   esi,eax
  41ec27:	mov    ah,BYTE PTR ds:0x8588ab66
  41ec2d:	clc    
  41ec2e:	in     al,0xd2
  41ec30:	ss sbb eax,0xcf1cadd7
  41ec36:	sub    BYTE PTR ds:[ebx],ch
  41ec39:	ret    
  41ec3a:	shr    DWORD PTR [edi+0x48],0x20
  41ec3e:	xchg   esi,eax
  41ec3f:	push   ebx
  41ec40:	mov    eax,ds:0xdbfac67b
  41ec45:	xor    DWORD PTR [ecx+0x1],esi
  41ec48:	data16 in al,dx
  41ec4a:	sti    
  41ec4b:	mov    BYTE PTR [eax-0x32196dae],ah
  41ec51:	test   BYTE PTR [esi+ecx*1+0x59],dh
  41ec55:	jnp    0x41ec90
  41ec57:	cwde   
  41ec58:	xor    DWORD PTR [edx],ebx
  41ec5a:	mov    eax,0xcc5f9401
  41ec5f:	push   esi
  41ec60:	fcomp  QWORD PTR [eax+0x8]
  41ec63:	in     al,0x3a
  41ec65:	test   BYTE PTR [ecx],0xb6
  41ec68:	frstor [ebp+ebx*4-0x60]
  41ec6c:	(bad)  
  41ec6d:	xor    edx,DWORD PTR [edx-0x6e]
  41ec70:	mov    eax,ds:0xe833a8bb
  41ec75:	and    eax,0xae906aa1
  41ec7a:	jne    0x41ecd8
  41ec7c:	retf   
  41ec7d:	ss hlt 
  41ec7f:	bound  ebp,QWORD PTR [edx-0x17]
  41ec82:	call   0x79f8:0x5e4c93cb
  41ec89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec8a:	sbb    dl,BYTE PTR [edx]
  41ec8c:	push   es
  41ec8d:	cmp    DWORD PTR [edx-0x38],0x54
  41ec91:	adc    bl,al
  41ec93:	mov    esp,0x4c7fa685
  41ec98:	rol    DWORD PTR [esi+0x53],1
  41ec9b:	enter  0x474d,0x3d
  41ec9f:	inc    esp
  41eca0:	fisttp QWORD PTR [ebp-0x284329f7]
  41eca6:	mov    ds,WORD PTR [esi+0x2c]
  41eca9:	push   eax
  41ecaa:	loop   0x41ece9
  41ecac:	scas   eax,DWORD PTR es:[edi]
  41ecad:	enter  0x1c3f,0x44
  41ecb1:	or     edi,DWORD PTR [esi]
  41ecb3:	out    0xa6,eax
  41ecb5:	xchg   ecx,eax
  41ecb6:	pop    ds
  41ecb7:	jle    0x41ec75
  41ecb9:	push   0xdbe03d86
  41ecbe:	jge    0x41ec46
  41ecc0:	shl    BYTE PTR [esi+0x7931bc8a],0x64
  41ecc7:	xlat   BYTE PTR ds:[ebx]
  41ecc8:	stc    
  41ecc9:	jmp    0x41ec4c
  41eccb:	cmp    eax,0x675a89b8
  41ecd0:	jo     0x41ec97
  41ecd2:	jg     0x41ece5
  41ecd4:	repz mov esp,0x6d67cba0
  41ecda:	push   0xc77fce50
  41ecdf:	dec    edx
  41ece0:	sbb    ebx,ebx
  41ece2:	and    DWORD PTR [edx-0x40],esi
  41ece5:	adc    BYTE PTR ds:0x499de98a,dl
  41eceb:	fnsave [edx+0x49]
  41ecee:	pop    ebx
  41ecef:	pusha  
  41ecf0:	push   ds
  41ecf1:	shl    ebp,cl
  41ecf3:	add    DWORD PTR ds:0x8e5dc2e7,edx
  41ecf9:	outs   dx,DWORD PTR ds:[esi]
  41ecfa:	push   ss
  41ecfb:	add    DWORD PTR [ebp+0x27b60fb1],ebx
  41ed01:	cmp    ebp,DWORD PTR [ebp+0x7d2202e1]
  41ed07:	fadd   QWORD PTR [ebx]
  41ed09:	push   eax
  41ed0a:	mov    ecx,0x708b405
  41ed0f:	out    0x1,al
  41ed11:	inc    ecx
  41ed12:	adc    al,0x3a
  41ed14:	or     BYTE PTR [esi-0x56a80d4],dl
  41ed1a:	mov    ds:0xb5adc0c0,eax
  41ed1f:	cmp    BYTE PTR [eax],dl
  41ed21:	lds    ebp,FWORD PTR [eax+0x1963f0bb]
  41ed27:	xchg   esp,eax
  41ed28:	enter  0x9175,0x12
  41ed2c:	jne    0x41ecfd
  41ed2e:	mov    eax,ds:0x83976df6
  41ed33:	or     ebx,DWORD PTR ds:0xf8221319
  41ed39:	pusha  
  41ed3a:	aaa    
  41ed3b:	xchg   BYTE PTR [eax+0x69cedf93],ch
  41ed41:	cmp    ebp,ebp
  41ed43:	es int 0x4c
  41ed46:	cmovnp edx,ebp
  41ed49:	call   0x99e9:0x4551181
  41ed50:	ficom  DWORD PTR [ebp+0x6c]
  41ed53:	aaa    
  41ed54:	jecxz  0x41ecf0
  41ed56:	cmp    eax,0x2dc888c2
  41ed5b:	xlat   BYTE PTR ds:[ebx]
  41ed5c:	adc    al,0xad
  41ed5e:	cmp    al,0x83
  41ed60:	into   
  41ed61:	dec    BYTE PTR [ebx+0x6383290a]
  41ed67:	in     al,dx
  41ed68:	(bad)  
  41ed6a:	cdq    
  41ed6b:	icebp  
  41ed6c:	in     al,0x9b
  41ed6e:	inc    ebx
  41ed6f:	ret    
  41ed70:	lock pop ebx
  41ed72:	and    ebp,DWORD PTR [ebx-0xd2052d3]
  41ed78:	mov    ds:0x9057b739,al
  41ed7d:	sti    
  41ed7e:	mov    al,ds:0x3fe10798
  41ed83:	loop   0x41ed77
  41ed85:	pop    ds
  41ed86:	hlt    
  41ed87:	(bad)  
  41ed88:	out    0x1b,eax
  41ed8a:	nop
  41ed8b:	outs   dx,BYTE PTR ds:[esi]
  41ed8c:	lea    esi,[esi-0x51e74321]
  41ed92:	push   esi
  41ed93:	mov    ds:0x5878b984,al
  41ed98:	pop    edx
  41ed99:	test   al,0x30
  41ed9b:	mov    dl,0xc7
  41ed9d:	icebp  
  41ed9e:	or     DWORD PTR [eax+0x41b29eef],esi
  41eda4:	lds    edx,FWORD PTR [edi+0x608c9700]
  41edaa:	jns    0x41edd5
  41edac:	mov    ds:0x36ae264e,al
  41edb1:	xor    eax,0xd0b7537c
  41edb6:	pop    es
  41edb7:	mov    dh,0x76
  41edb9:	fwait
  41edba:	(bad)  
  41edbb:	cdq    
  41edbc:	adc    eax,0xd492dfa7
  41edc1:	lods   al,BYTE PTR ds:[esi]
  41edc2:	and    eax,0x6564c848
  41edc7:	jg     0x41edb1
  41edc9:	stos   DWORD PTR es:[edi],eax
  41edca:	retf   
  41edcb:	fs std 
  41edcd:	and    dl,dh
  41edcf:	mov    al,ds:0x53d6189e
  41edd4:	jge    0x41eda7
  41edd6:	sbb    al,0x9d
  41edd8:	sahf   
  41edd9:	xchg   ebp,eax
  41edda:	shl    ch,1
  41eddc:	adc    eax,0x5c18d523
  41ede1:	stc    
  41ede2:	xchg   ebx,eax
  41ede3:	pop    ds
  41ede4:	xchg   esi,eax
  41ede5:	ins    DWORD PTR es:[edi],dx
  41ede6:	add    eax,0x464d8ac5
  41edeb:	mov    ebx,0x573bca6c
  41edf0:	(bad)  
  41edf1:	lods   al,BYTE PTR ds:[esi]
  41edf2:	jmp    0x41ee59
  41edf4:	rol    DWORD PTR [eax+0x13c547db],0x24
  41edfb:	adc    al,0xa6
  41edfd:	cwde   
  41edfe:	jo     0x41ee62
  41ee00:	hlt    
  41ee01:	sub    eax,0xf876e053
  41ee06:	xor    al,0x41
  41ee08:	add    DWORD PTR es:0x36ae3f13,esi
  41ee0f:	jmp    0x41ee0f
  41ee11:	xor    eax,0xcfc4c125
  41ee16:	dec    ebp
  41ee17:	ret    
  41ee18:	leave  
  41ee19:	imul   esi,DWORD PTR [ebp+eax*8-0x9ca64c],0x21
  41ee21:	push   0x36bf2e3e
  41ee26:	pop    ebx
  41ee27:	lods   al,BYTE PTR ds:[esi]
  41ee28:	test   BYTE PTR [esi-0x80f99b],0x3d
  41ee2f:	je     0x41ede3
  41ee31:	mov    edx,0xa8612fcb
  41ee36:	hlt    
  41ee37:	(bad)  
  41ee38:	pop    edi
  41ee39:	and    dl,dl
  41ee3b:	sub    DWORD PTR [ecx+0x7c],edi
  41ee3e:	jns    0x41ee36
  41ee40:	sbb    al,0x78
  41ee42:	and    al,0x8f
  41ee44:	push   ebx
  41ee45:	out    0x7d,eax
  41ee47:	icebp  
  41ee48:	cmp    DWORD PTR [ebx],eax
  41ee4a:	sub    ebp,ebx
  41ee4c:	push   0x4a
  41ee4e:	sahf   
  41ee4f:	push   0x136a853a
  41ee54:	ja     0x41eea9
  41ee56:	es scas eax,DWORD PTR es:[edi]
  41ee58:	mov    edx,0xd830e2cd
  41ee5d:	imul   dl
  41ee5f:	leave  
  41ee60:	hlt    
  41ee61:	xchg   ecx,eax
  41ee62:	xor    eax,0x81b7c4fb
  41ee67:	leave  
  41ee68:	dec    eax
  41ee69:	cmc    
  41ee6a:	inc    edi
  41ee6b:	sub    DWORD PTR [ecx],ecx
  41ee6d:	mov    esi,0x9c18c5a9
  41ee72:	push   edi
  41ee73:	gs cmc 
  41ee75:	jmp    0x371fd1e8
  41ee7a:	test   al,0xbd
  41ee7c:	stc    
  41ee7d:	inc    ebx
  41ee7e:	fsub   DWORD PTR [esi+0x4f3a037c]
  41ee84:	jle    0x41ee29
  41ee86:	push   ebx
  41ee87:	cmp    dh,dl
  41ee89:	xor    eax,0x9d8cb40b
  41ee8e:	scas   eax,DWORD PTR es:[edi]
  41ee8f:	out    dx,al
  41ee90:	inc    ebp
  41ee91:	sbb    ecx,esp
  41ee93:	and    BYTE PTR [eax],bl
  41ee95:	xor    BYTE PTR [ebx+0x7714fc64],dh
  41ee9b:	dec    dl
  41ee9d:	lahf   
  41ee9e:	stos   DWORD PTR es:[edi],eax
  41ee9f:	push   ebp
  41eea0:	cmp    al,0x40
  41eea2:	push   esi
  41eea3:	push   es
  41eea4:	popf   
  41eea5:	rcr    ebp,cl
  41eea7:	test   al,0x43
  41eea9:	mov    ebp,0x1c47dbfb
  41eeae:	mov    ds:0x418d24a2,eax
  41eeb3:	jae    0x41ee8b
  41eeb5:	pushf  
  41eeb6:	rol    BYTE PTR [edi],1
  41eeb8:	mov    cl,BYTE PTR [edi+esi*8]
  41eebb:	mov    cs,WORD PTR [ebp-0x6]
  41eebe:	xchg   esp,eax
  41eebf:	ror    BYTE PTR [eax+0x50],0x68
  41eec3:	sub    bh,bl
  41eec5:	mov    cl,0x70
  41eec7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eec8:	adc    ebp,DWORD PTR [esi-0x13b96d84]
  41eece:	es xchg edi,eax
  41eed0:	xchg   ecx,eax
  41eed1:	mov    bl,0xe1
  41eed3:	loop   0x41ef06
  41eed5:	call   0x4ccd:0xe546865a
  41eedc:	rcr    BYTE PTR [esi-0x5d],1
  41eedf:	stos   DWORD PTR es:[edi],eax
  41eee0:	call   edi
  41eee2:	xchg   esi,eax
  41eee3:	and    edx,ebx
  41eee5:	shl    DWORD PTR [edx+0x5b14c5c1],cl
  41eeeb:	test   DWORD PTR [ebx],ecx
  41eeed:	push   esp
  41eeee:	daa    
  41eeef:	cmp    BYTE PTR [ebp-0x7f51011a],ch
  41eef5:	adc    eax,0xb4817c8e
  41eefa:	lahf   
  41eefb:	outs   dx,BYTE PTR ds:[esi]
  41eefc:	test   eax,0x89f17855
  41ef01:	and    eax,0xe314981e
  41ef06:	pushf  
  41ef07:	cmc    
  41ef08:	imul   BYTE PTR [edx+0x1c]
  41ef0b:	push   es
  41ef0c:	jns    0x41eebc
  41ef0e:	dec    ebx
  41ef0f:	dec    bh
  41ef11:	pop    edx
  41ef12:	mov    ds:0x383ebf12,eax
  41ef17:	in     eax,dx
  41ef18:	mov    edi,0x7ae9f92b
  41ef1d:	cmp    eax,0xb1d4c29e
  41ef22:	pop    es
  41ef23:	ja     0x41ef54
  41ef25:	into   
  41ef26:	sub    al,0x13
  41ef28:	into   
  41ef29:	jno    0x41efa8
  41ef2b:	adc    eax,DWORD PTR [edi-0x5]
  41ef2e:	(bad)  
  41ef2f:	js     0x41ef79
  41ef31:	cmp    BYTE PTR [edx-0x41],0x9e
  41ef35:	stos   DWORD PTR es:[edi],eax
  41ef36:	aam    0x6a
  41ef38:	push   0xc84bb60b
  41ef3d:	retf   0xa401
  41ef40:	mov    WORD PTR [ebx],gs
  41ef42:	pop    ebx
  41ef43:	or     BYTE PTR [ebp+0x86ebaf5],dl
  41ef49:	cmp    al,0xb7
  41ef4b:	and    bl,BYTE PTR [edx+0x2e]
  41ef4e:	loope  0x41ef2b
  41ef50:	loope  0x41eede
  41ef52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef53:	stc    
  41ef54:	xor    eax,0xde62db8e
  41ef59:	adc    DWORD PTR [edx-0x4a],ecx
  41ef5c:	push   ecx
  41ef5d:	aas    
  41ef5e:	adc    eax,0x64511944
  41ef63:	sbb    esi,0x5a
  41ef66:	mov    ah,BYTE PTR [edi+0x5d]
  41ef69:	adc    eax,0x7d7fba7c
  41ef6e:	popf   
  41ef6f:	push   0xa396b0ef
  41ef74:	dec    esi
  41ef75:	pop    ss
  41ef76:	in     al,0xee
  41ef78:	retf   
  41ef79:	pop    edx
  41ef7a:	shr    DWORD PTR [edi+eiz*1-0x32],cl
  41ef7e:	jle    0x41ef32
  41ef80:	push   ebp
  41ef81:	mov    ecx,0x86b99b80
  41ef86:	pop    esi
  41ef87:	and    BYTE PTR [edi+0x34],bh
  41ef8a:	popa   
  41ef8b:	inc    ebp
  41ef8c:	fidiv  WORD PTR [edi]
  41ef8e:	dec    ebx
  41ef8f:	cld    
  41ef90:	bnd jg 0x41efed
  41ef93:	outs   dx,BYTE PTR ds:[esi]
  41ef94:	jecxz  0x41efc3
  41ef96:	mov    dl,0x5c
  41ef98:	mov    ah,0xb2
  41ef9a:	inc    ecx
  41ef9b:	sub    eax,0x55fe4cf0
  41efa0:	push   ss
  41efa1:	mov    ebx,ecx
  41efa3:	mov    ss,WORD PTR [ecx]
  41efa5:	sub    DWORD PTR [edi-0x2520add7],0x67d51b92
  41efaf:	mov    esp,0xa65497cf
  41efb4:	add    dh,BYTE PTR [ebx+0x6aeed665]
  41efba:	push   eax
  41efbb:	dec    edi
  41efbc:	outs   dx,DWORD PTR ds:[esi]
  41efbd:	jmp    0x7c50e38c
  41efc2:	pop    eax
  41efc3:	mov    eax,ds:0x47b143e5
  41efc8:	xchg   ebp,eax
  41efc9:	jge    0x41efbd
  41efcb:	xchg   ecx,eax
  41efcc:	cmp    bh,BYTE PTR [edi+0x435c337c]
  41efd2:	not    ecx
  41efd4:	and    edi,DWORD PTR [edx-0x3a2a53b0]
  41efda:	loopne 0x41efcd
  41efdc:	mov    al,ds:0x8d59f3d1
  41efe1:	or     bh,BYTE PTR [ebp-0x56]
  41efe4:	ja     0x41f053
  41efe6:	jp     0x41efc5
  41efe8:	push   eax
  41efe9:	or     cl,BYTE PTR [ebx]
  41efeb:	add    eax,DWORD PTR [edi]
  41efed:	pusha  
  41efee:	out    0xda,al
  41eff0:	dec    ecx
  41eff1:	lods   eax,DWORD PTR ds:[esi]
  41eff2:	jnp    0x41f020
  41eff4:	retf   
  41eff5:	aaa    
  41eff6:	mov    ebx,0x60b14e46
  41effb:	out    0x8,al
  41effd:	nop    DWORD PTR [ecx-0x33]
  41f001:	loopne 0x41ef8f
  41f003:	fst    st(5)
  41f005:	stos   BYTE PTR es:[edi],al
  41f006:	add    cl,cl
  41f008:	push   ecx
  41f009:	fsubr  st(7),st
  41f00b:	push   ecx
  41f00c:	xchg   edx,eax
  41f00d:	(bad)  
  41f00e:	or     ebp,edi
  41f010:	xchg   ebx,eax
  41f011:	fist   DWORD PTR [ecx+0x6fc425d7]
  41f017:	test   eax,0x9674dbe4
  41f01c:	out    dx,eax
  41f01d:	mov    DWORD PTR [ecx],ebx
  41f01f:	je     0x41f081
  41f021:	jne    0x41f003
  41f023:	jmp    0xb17eccc2
  41f028:	push   ecx
  41f029:	jl     0x41efc6
  41f02b:	jg     0x41effa
  41f02d:	ds iret 
  41f02f:	fsubr  QWORD PTR [ebx]
  41f031:	ins    DWORD PTR es:[edi],dx
  41f032:	or     eax,0xbf691e67
  41f037:	push   0x5ab0b898
  41f03c:	xchg   DWORD PTR cs:[ebp+0x21],esp
  41f040:	and    al,0x8d
  41f042:	call   0x167b:0xec6e2caf
  41f049:	stos   BYTE PTR es:[edi],al
  41f04a:	aas    
  41f04b:	cmp    eax,DWORD PTR [eax+0x74]
  41f04e:	push   ss
  41f04f:	add    eax,esp
  41f051:	xchg   edi,eax
  41f052:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f053:	jae    0x41f09a
  41f055:	sbb    DWORD PTR [eax],esi
  41f057:	xchg   esp,eax
  41f058:	mov    edi,0x17b253c2
  41f05d:	cmp    edi,DWORD PTR [ecx]
  41f05f:	push   ss
  41f060:	ss mov edi,0x7057c4e
  41f066:	fadd   QWORD PTR [ecx+0x78]
  41f069:	jns    0x41f034
  41f06b:	in     eax,0x79
  41f06d:	loope  0x41f07a
  41f06f:	jb     0x41eff4
  41f071:	inc    esp
  41f072:	dec    ecx
  41f073:	fwait
  41f074:	pop    esp
  41f075:	xchg   ebx,eax
  41f076:	stos   DWORD PTR es:[edi],eax
  41f077:	or     al,0x2c
  41f079:	and    DWORD PTR [eax-0x73],ecx
  41f07c:	lea    ebx,[esi]
  41f07e:	imul   ecx,DWORD PTR [ebx-0x409aa3dd],0x17
  41f085:	push   ecx
  41f086:	and    eax,0x5e60d4eb
  41f08b:	and    edi,edi
  41f08d:	push   eax
  41f08f:	jl     0x41f056
  41f091:	mov    esi,0xbda97199
  41f096:	into   
  41f097:	inc    esi
  41f098:	inc    edx
  41f099:	adc    esp,ecx
  41f09b:	(bad)  
  41f09c:	jno    0x41f10b
  41f09e:	push   ebx
  41f09f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0a1:	sub    dl,BYTE PTR [ebp*1+0x956aa10]
  41f0a8:	cmp    bl,dl
  41f0aa:	push   ss
  41f0ab:	fxch   st(0)
  41f0ad:	stc    
  41f0ae:	dec    edi
  41f0af:	pop    edi
  41f0b0:	int3   
  41f0b1:	hlt    
  41f0b2:	jo     0x41f0b9
  41f0b4:	mov    ch,0xab
  41f0b6:	stos   DWORD PTR es:[edi],eax
  41f0b7:	fld    TBYTE PTR [edi]
  41f0b9:	xchg   ebx,eax
  41f0ba:	cwde   
  41f0bb:	jnp    0x41f077
  41f0bd:	and    dl,bl
  41f0bf:	mov    ebp,0x328dff75
  41f0c4:	mov    ds:0xc282cbec,eax
  41f0c9:	out    0x81,eax
  41f0cb:	es ret 0x62ee
  41f0cf:	pop    ebp
  41f0d0:	pop    edx
  41f0d1:	fild   WORD PTR [edi]
  41f0d3:	scas   al,BYTE PTR es:[edi]
  41f0d4:	(bad)  
  41f0d5:	rcl    al,cl
  41f0d7:	and    al,ch
  41f0d9:	fmul   st,st(6)
  41f0db:	pop    edi
  41f0dc:	sbb    BYTE PTR [esi+0x27fece02],0x43
  41f0e3:	sub    dh,0x1e
  41f0e6:	int    0x7b
  41f0e8:	je     0x41f0d3
  41f0ea:	xchg   esp,eax
  41f0eb:	iret   
  41f0ec:	pop    esp
  41f0ed:	push   es
  41f0ee:	pop    es
  41f0ef:	int    0xa3
  41f0f1:	push   edx
  41f0f2:	out    dx,eax
  41f0f3:	dec    esp
  41f0f4:	dec    esp
  41f0f5:	mov    dh,0x78
  41f0f7:	mov    esi,0x43039ca3
  41f0fc:	pop    esi
  41f0fd:	push   edi
  41f0fe:	pusha  
  41f0ff:	cdq    
  41f100:	adc    edi,ecx
  41f102:	fimul  WORD PTR [edi]
  41f104:	xchg   edx,eax
  41f105:	push   ds
  41f106:	mov    ebp,0x7c2726df
  41f10b:	fisubr WORD PTR [ebx-0x6a]
  41f10e:	daa    
  41f10f:	push   ecx
  41f110:	mov    ds:0xb01b2d19,al
  41f115:	pop    esp
  41f116:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f117:	das    
  41f118:	dec    eax
  41f119:	imul   eax,DWORD PTR [esi+0x74],0xffffff96
  41f11d:	scas   al,BYTE PTR es:[edi]
  41f11e:	cmp    BYTE PTR [eax+0x2b],cl
  41f121:	retf   0x511d
  41f124:	sub    al,0x34
  41f126:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f127:	mov    ecx,0xf4b8d2d9
  41f12c:	ins    BYTE PTR es:[edi],dx
  41f12d:	and    eax,0x99c9aa4a
  41f132:	jle    0x41f0b5
  41f134:	ins    DWORD PTR es:[edi],dx
  41f135:	sub    ecx,ebx
  41f137:	jno    0x41f151
  41f139:	dec    eax
  41f13a:	or     esi,DWORD PTR [ebx+0x21aed43b]
  41f140:	and    bh,BYTE PTR [ebx+0xf9942fd]
  41f146:	fnstenv [edx]
  41f148:	xchg   eax,edi
  41f14a:	xlat   BYTE PTR ds:[ebx]
  41f14b:	mov    bh,0x9
  41f14d:	xlat   BYTE PTR ds:[ebx]
  41f14e:	adc    esp,DWORD PTR [ebp-0x70]
  41f151:	and    edi,ebp
  41f153:	imul   esi,DWORD PTR [esp+ecx*4-0x3d],0xe895cfe4
  41f15b:	std    
  41f15c:	add    DWORD PTR [ebx+0x11],ebx
  41f15f:	mov    ecx,DWORD PTR [edi-0x6a85a046]
  41f165:	inc    edx
  41f166:	pop    edx
  41f167:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f168:	and    bl,BYTE PTR [edx+ebp*1+0x7b]
  41f16c:	push   esi
  41f16d:	shl    DWORD PTR [ebx],1
  41f16f:	push   ebx
  41f170:	push   esi
  41f171:	stos   DWORD PTR es:[edi],eax
  41f172:	jge    0x41f1ca
  41f174:	lds    ebx,FWORD PTR [esp+eiz*8+0x74]
  41f178:	push   ebp
  41f179:	fldcw  WORD PTR [edi]
  41f17b:	es or  eax,0x8d1e30cd
  41f181:	(bad)  
  41f182:	int    0xf2
  41f184:	xchg   esp,eax
  41f185:	pop    esi
  41f186:	scas   eax,DWORD PTR es:[edi]
  41f187:	jmp    0x41f152
  41f189:	mov    WORD PTR [eax+0x13],?
  41f18c:	xlat   BYTE PTR ds:[ebx]
  41f18d:	inc    ebp
  41f18e:	add    BYTE PTR [edi],0x23
  41f191:	scas   al,BYTE PTR es:[edi]
  41f192:	and    eax,0x205cc02b
  41f197:	jb     0x41f216
  41f199:	gs jl  0x41f1a3
  41f19c:	mov    eax,0xc2066a1e
  41f1a1:	repz iret 
  41f1a3:	inc    ebx
  41f1a4:	ret    
  41f1a5:	shl    bh,1
  41f1a7:	(bad)  
  41f1a8:	int3   
  41f1a9:	adc    BYTE PTR [edx],al
  41f1ab:	jmp    0x41f1b0
  41f1ad:	sti    
  41f1ae:	add    esi,DWORD PTR [edi+edx*2]
  41f1b1:	sub    ecx,ecx
  41f1b3:	repz xchg ecx,eax
  41f1b5:	push   ebx
  41f1b6:	fistp  WORD PTR [eax+0x65]
  41f1b9:	dec    edx
  41f1ba:	iret   
  41f1bb:	aaa    
  41f1bc:	adc    al,BYTE PTR [ebp+eiz*4+0x3a]
  41f1c0:	push   ebp
  41f1c1:	mov    eax,ds:0x1b6e74d5
  41f1c6:	test   al,0xb9
  41f1c8:	into   
  41f1c9:	and    eax,0x8663b7fb
  41f1ce:	dec    ecx
  41f1cf:	call   0xa36081b7
  41f1d4:	xor    edx,DWORD PTR [esi]
  41f1d6:	fwait
  41f1d7:	pop    edx
  41f1d8:	push   edx
  41f1d9:	push   esi
  41f1da:	in     al,dx
  41f1db:	ja     0xa36ce689
  41f1e1:	mov    ebp,0x9428ded9
  41f1e6:	xor    dl,BYTE PTR ds:0x2fc187f2
  41f1ec:	and    bl,BYTE PTR [ebx+0x2f]
  41f1ef:	xchg   ebp,eax
  41f1f0:	cld    
  41f1f1:	les    ebp,FWORD PTR [ebx]
  41f1f3:	pop    ss
  41f1f4:	imul   edx,esp,0x69
  41f1f7:	mov    dh,0x77
  41f1f9:	sti    
  41f1fa:	test   DWORD PTR [ebx],esi
  41f1fc:	dec    esp
  41f1fd:	sbb    ebx,ebp
  41f1ff:	cmpps  xmm0,xmm0,0x28
  41f203:	add    cl,BYTE PTR [ecx]
  41f205:	mov    esp,0xf9423d86
  41f20a:	xor    DWORD PTR [edi+0xf3b0eb0],ebx
  41f210:	push   esp
  41f211:	sub    bh,BYTE PTR [eax]
  41f213:	jmp    0xbc1dce75
  41f218:	mov    esi,gs
  41f21a:	xchg   esp,eax
  41f21b:	or     al,0x8b
  41f21d:	mov    ds:0x23892431,al
  41f222:	in     eax,0xbb
  41f224:	je     0x41f294
  41f226:	sub    BYTE PTR [esi],0x4f
  41f229:	and    dl,BYTE PTR [ecx+esi*2]
  41f22c:	outs   dx,DWORD PTR ds:[esi]
  41f22d:	ret    
  41f22e:	idiv   dh
  41f230:	leave  
  41f231:	(bad)  
  41f232:	pop    ebx
  41f233:	(bad)  
  41f234:	out    0xa4,eax
  41f236:	mov    ah,0xb0
  41f238:	push   edi
  41f239:	ds out 0x4e,eax
  41f23c:	inc    ebx
  41f23d:	in     eax,0xae
  41f23f:	ins    DWORD PTR es:[edi],dx
  41f240:	mov    DWORD PTR [ecx],ecx
  41f242:	xor    al,0xb2
  41f244:	and    al,0xa8
  41f246:	(bad)  
  41f249:	in     eax,0xf1
  41f24b:	std    
  41f24c:	adc    al,0xfa
  41f24e:	push   esi
  41f24f:	add    eax,0xf4d0174
  41f254:	adc    dh,BYTE PTR [eax]
  41f256:	(bad)
  41f259:	pop    eax
  41f25a:	push   ds
  41f25b:	test   eax,0x5baa0028
  41f260:	jl     0x41f27b
  41f262:	sti    
  41f263:	sub    DWORD PTR [eax+0xf],0xffffffaf
  41f267:	push   cs
  41f268:	xchg   ebx,eax
  41f269:	pop    edx
  41f26a:	loop   0x41f210
  41f26c:	cmp    eax,0x3ecd5c77
  41f271:	iret   
  41f272:	int    0x3e
  41f274:	push   0x1a
  41f276:	sub    al,0x85
  41f278:	mov    esp,DWORD PTR [ebp+0x2b5167c7]
  41f27e:	jae    0x41f2a8
  41f280:	out    dx,eax
  41f281:	daa    
  41f282:	pushf  
  41f283:	pop    ecx
  41f284:	push   edi
  41f285:	inc    edx
  41f286:	adc    eax,0x230cf585
  41f28b:	das    
  41f28c:	test   al,0xa3
  41f28e:	xor    ecx,DWORD PTR [ecx+ebx*2]
  41f291:	dec    edi
  41f292:	and    eax,0x2cc79c87
  41f297:	repnz mov ecx,0x58e26d6a
  41f29d:	dec    ebx
  41f29e:	les    ebp,FWORD PTR [esi+eax*4]
  41f2a1:	(bad)  
  41f2a2:	fwait
  41f2a3:	sub    eax,0x4866b7b0
  41f2a8:	push   ss
  41f2a9:	retf   
  41f2aa:	cs jb  0x41f254
  41f2ad:	mov    ebp,0x541253ac
  41f2b2:	js     0x41f26a
  41f2b4:	jmp    0x41f31b
  41f2b6:	push   esp
  41f2b7:	add    al,0x2a
  41f2b9:	retf   0x169f
  41f2bc:	push   eax
  41f2bd:	shl    DWORD PTR [esi-0x72a6f8c1],cl
  41f2c3:	adc    dl,BYTE PTR ds:0x659b0e83
  41f2c9:	stc    
  41f2ca:	mov    eax,ds:0xafba9a4d
  41f2cf:	mov    ah,0x51
  41f2d1:	cld    
  41f2d2:	mov    eax,0x7fa1e1b
  41f2d7:	test   al,0xb4
  41f2d9:	dec    ebp
  41f2da:	addr16 mov eax,0x7aa0d016
  41f2e0:	arpl   cx,dx
  41f2e2:	out    dx,eax
  41f2e3:	or     cl,0x77
  41f2e6:	aad    0x59
  41f2e8:	mov    eax,0xb0195c25
  41f2ed:	dec    edx
  41f2ee:	jns    0x41f2c6
  41f2f0:	jmp    0x45c6:0xe4dd1bc3
  41f2f7:	sbb    BYTE PTR ss:[ebx-0x65f43ad2],bh
  41f2fe:	xchg   ecx,eax
  41f2ff:	shr    BYTE PTR [ebp+ebp*4-0x7ca06259],1
  41f306:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f308:	outs   dx,DWORD PTR ds:[esi]
  41f309:	dec    esp
  41f30a:	pop    ecx
  41f30b:	in     eax,dx
  41f30c:	pop    ss
  41f30d:	sbb    al,0xd2
  41f30f:	or     al,0x41
  41f311:	or     esp,DWORD PTR [edi]
  41f313:	out    dx,eax
  41f314:	dec    esp
  41f315:	repz adc BYTE PTR [ebx+0x2],dl
  41f319:	out    0xdd,eax
  41f31b:	test   al,0x70
  41f31d:	lods   al,BYTE PTR ds:[esi]
  41f31e:	jl     0x41f342
  41f320:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f321:	(bad)  
  41f323:	cmp    BYTE PTR [esi-0x2725d843],dl
  41f329:	(bad)  
  41f32a:	adc    al,0xe4
  41f32c:	fimul  WORD PTR [ecx]
  41f32e:	or     BYTE PTR [esi+0x0],ch
  41f331:	xchg   ecx,eax
  41f332:	fisttp QWORD PTR [ecx-0x7c]
  41f335:	xchg   ecx,eax
  41f336:	mov    eax,ds:0xfd2fa472
  41f33b:	mov    ch,0x38
  41f33d:	sub    dl,BYTE PTR [eax-0x8475b55]
  41f343:	mov    DWORD PTR [esi+0x61],esp
  41f346:	mov    ds:0xeb7f4070,al
  41f34b:	adc    ebx,DWORD PTR [ebp-0x1c]
  41f34e:	in     al,0x86
  41f350:	lahf   
  41f351:	pop    eax
  41f352:	mov    bl,0xbe
  41f354:	xor    DWORD PTR ds:0xeecd57ee,ebp
  41f35a:	mov    edi,0x4e36a8cd
  41f35f:	fcmovnb st,st(4)
  41f361:	dec    esi
  41f362:	pop    esp
  41f363:	jmp    0x3177:0x68106ea7
  41f36a:	xor    al,0x7e
  41f36c:	and    dl,ch
  41f36e:	sbb    DWORD PTR [edx-0xc],0xffffffb7
  41f372:	addr16 cwde 
  41f374:	mov    eax,0x872f6ff9
  41f379:	les    eax,FWORD PTR [esi]
  41f37b:	pushf  
  41f37c:	popa   
  41f37d:	sbb    edi,DWORD PTR ds:0x79a9921c
  41f383:	ret    
  41f384:	loope  0x41f343
  41f386:	mov    esp,0xe1bb191b
  41f38b:	imul   esp,ebx,0xf4faa185
  41f391:	into   
  41f392:	fmulp  st(3),st
  41f394:	mov    eax,0xe0802dbe
  41f399:	jge    0x41f3ae
  41f39b:	ss xor dh,bh
  41f39e:	and    ebp,DWORD PTR [edi]
  41f3a0:	mov    al,ds:0x69012899
  41f3a5:	inc    esi
  41f3a6:	and    al,BYTE PTR [ebp-0x15f5b905]
  41f3ac:	dec    edx
  41f3ad:	dec    eax
  41f3ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3af:	sbb    edi,ebp
  41f3b1:	add    BYTE PTR [edx-0x7],ch
  41f3b4:	sahf   
  41f3b5:	jb     0x41f3d9
  41f3b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3b8:	aaa    
  41f3b9:	sub    ah,dh
  41f3bb:	mov    cl,0x2d
  41f3bd:	pop    ecx
  41f3be:	in     al,0xae
  41f3c0:	cmc    
  41f3c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3c2:	pop    edi
  41f3c3:	or     esi,edi
  41f3c5:	cwde   
  41f3c6:	inc    ebp
  41f3c7:	fcomi  st,st(0)
  41f3c9:	outs   dx,DWORD PTR ds:[esi]
  41f3ca:	dec    eax
  41f3cb:	pusha  
  41f3cc:	jl     0x41f369
  41f3ce:	dec    edx
  41f3cf:	xchg   esi,eax
  41f3d0:	sbb    DWORD PTR [ecx-0xd],0x71
  41f3d4:	xor    DWORD PTR [ebp+0x6f],edx
  41f3d7:	mov    ah,0x4d
  41f3d9:	add    edx,ecx
  41f3db:	mov    cl,0xed
  41f3dd:	dec    edi
  41f3de:	jne    0x41f3cb
  41f3e0:	sbb    BYTE PTR [esi],0xff
  41f3e3:	ret    
  41f3e4:	mov    eax,0x888961da
  41f3e9:	dec    edx
  41f3ea:	dec    ecx
  41f3eb:	cmc    
  41f3ec:	fs dec ecx
  41f3ee:	cpuid  
  41f3f0:	add    al,0xe7
  41f3f2:	xchg   ebp,eax
  41f3f3:	test   BYTE PTR [ecx+0x47],bh
  41f3f6:	dec    ebp
  41f3f7:	retf   0xfaa5
  41f3fa:	xchg   ebp,eax
  41f3fb:	and    BYTE PTR [edi-0x241c35de],0x6d
  41f402:	push   0xbe952402
  41f407:	push   esi
  41f408:	jne    0x41f404
  41f40a:	lods   eax,DWORD PTR ds:[esi]
  41f40b:	imul   esi,DWORD PTR [eax],0x45
  41f40e:	sbb    eax,0x1f614d85
  41f413:	aam    0x5f
  41f415:	jo     0x41f444
  41f417:	jmp    0xf9d8:0x17013230
  41f41e:	mov    ds:0x937bc73d,al
  41f423:	(bad)  
  41f424:	cld    
  41f425:	push   edi
  41f426:	repnz dec edi
  41f428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f429:	sub    DWORD PTR [edx],edi
  41f42b:	les    edx,FWORD PTR [ecx-0x21320d1f]
  41f431:	pop    ecx
  41f432:	push   0x14
  41f434:	lahf   
  41f435:	les    edi,FWORD PTR [ebx+ebx*1+0x34628f4d]
  41f43c:	cmc    
  41f43d:	sar    BYTE PTR [esp+eiz*8+0x32],0x74
  41f442:	or     eax,0xaed71dd8
  41f447:	pop    esi
  41f448:	(bad)  
  41f449:	stos   DWORD PTR es:[edi],eax
  41f44a:	(bad)  
  41f44c:	mov    esp,0x7c446ab4
  41f451:	les    edi,FWORD PTR [ebp-0x36]
  41f454:	sbb    ebx,ebp
  41f456:	cmp    ebp,DWORD PTR [eax+0x70a9e031]
  41f45c:	cmp    al,0x31
  41f45e:	in     al,dx
  41f45f:	mov    ebx,0x1f594491
  41f464:	in     eax,dx
  41f465:	mov    ah,BYTE PTR [esi-0x39bd0c32]
  41f46b:	ins    DWORD PTR es:[edi],dx
  41f46c:	add    al,BYTE PTR ds:0x3e12812b
  41f472:	mov    esp,0x62fcb1db
  41f477:	loop   0x41f475
  41f479:	test   al,0x21
  41f47b:	or     DWORD PTR [edx+edx*8+0x68],0xceb907da
  41f483:	adc    BYTE PTR [edx],al
  41f485:	je     0x41f447
  41f487:	mov    edx,0x5c6198f4
  41f48c:	enter  0x365b,0xc5
  41f490:	inc    eax
  41f491:	hlt    
  41f492:	xor    al,BYTE PTR [ebx]
  41f494:	push   ebx
  41f495:	adc    eax,0x87a20ec9
  41f49a:	cli    
  41f49b:	loopne 0x41f470
  41f49d:	pusha  
  41f49e:	xchg   BYTE PTR [ecx+0x23],dl
  41f4a1:	stos   DWORD PTR es:[edi],eax
  41f4a2:	mov    edx,0x575fd4f8
  41f4a7:	fdivr  QWORD PTR [edx]
  41f4a9:	xor    ebp,DWORD PTR [edx-0x1aab8875]
  41f4af:	iret   
  41f4b0:	ror    DWORD PTR [ebp+0x697689ed],0x48
  41f4b7:	imul   esi,DWORD PTR [eax],0x5f
  41f4ba:	test   BYTE PTR ss:[ebx],cl
  41f4bd:	push   edx
  41f4be:	lods   al,BYTE PTR ds:[esi]
  41f4bf:	fwait
  41f4c0:	push   es
  41f4c1:	dec    ecx
  41f4c2:	call   0xac4a:0x6461b017
  41f4c9:	fs (bad) 
  41f4cb:	xlat   BYTE PTR ds:[ebx]
  41f4cc:	lods   al,BYTE PTR ds:[esi]
  41f4cd:	push   ebp
  41f4ce:	push   edx
  41f4cf:	test   BYTE PTR [edx],ch
  41f4d1:	or     ah,BYTE PTR [ebx-0x5]
  41f4d4:	sub    BYTE PTR [edi-0x26],0x51
  41f4d8:	fs ss push edi
  41f4db:	or     eax,0xe9fc072f
  41f4e0:	cmp    eax,0x5fa2ff61
  41f4e5:	imul   BYTE PTR [ecx+0x9]
  41f4e8:	ins    DWORD PTR es:[edi],dx
  41f4e9:	das    
  41f4ea:	out    0xcd,al
  41f4ec:	hlt    
  41f4ed:	push   ss
  41f4ee:	(bad)  
  41f4ef:	mov    ss:0x556c378a,eax
  41f4f5:	mov    bl,0xc8
  41f4f7:	jecxz  0x41f4ec
  41f4f9:	jne    0x41f56d
  41f4fb:	jbe    0x41f490
  41f4fd:	or     BYTE PTR [edi],bh
  41f4ff:	popf   
  41f500:	lock popa 
  41f502:	pop    ss
  41f503:	imul   edi,DWORD PTR [edi-0x2b2277ca],0xf9134118
  41f50d:	and    eax,DWORD PTR [edx+0xc342574]
  41f513:	xchg   DWORD PTR [ebp+0x4a],ebx
  41f516:	and    bh,BYTE PTR [eax-0x7d]
  41f519:	call   0xc7e8ba1a
  41f51e:	add    eax,0x58af1bcb
  41f523:	sub    edx,DWORD PTR [ebp+edx*2+0xc78c390]
  41f52a:	xor    ebp,DWORD PTR [ebp-0x48]
  41f52d:	pop    edi
  41f52e:	shl    DWORD PTR [eax],cl
  41f530:	in     al,dx
  41f531:	(bad)  
  41f532:	mov    dl,0x77
  41f534:	sub    al,0xc
  41f536:	cld    
  41f537:	or     al,0xa3
  41f539:	std    
  41f53a:	or     eax,0x408813f1
  41f53f:	fistp  WORD PTR [edx+0x64]
  41f542:	jno    0x41f533
  41f544:	shl    BYTE PTR [ebp-0x54fab1e4],cl
  41f54a:	lds    eax,FWORD PTR [ebx+0x735bbfd8]
  41f550:	xor    ecx,DWORD PTR [ecx+0x44211add]
  41f556:	jnp    0x41f555
  41f558:	ins    DWORD PTR es:[edi],dx
  41f559:	jnp    0x41f51c
  41f55b:	jge    0x41f4fd
  41f55d:	push   ecx
  41f55e:	scas   eax,DWORD PTR es:[edi]
  41f55f:	mov    esi,ss
  41f561:	dec    eax
  41f562:	in     eax,dx
  41f563:	mov    eax,0x4de4ad38
  41f568:	aaa    
  41f569:	mov    WORD PTR [ecx],ss
  41f56b:	jae    0x41f560
  41f56d:	sbb    BYTE PTR ds:0xc84898ef,dl
  41f573:	sbb    ebx,esi
  41f575:	inc    ebx
  41f576:	sub    BYTE PTR ds:0x6f205cc5,bl
  41f57c:	pop    esi
  41f57d:	ja     0x41f5b1
  41f57f:	dec    ebp
  41f580:	sbb    DWORD PTR [ecx-0x57],edx
  41f583:	lahf   
  41f584:	inc    ecx
  41f585:	inc    esi
  41f586:	mov    esi,DWORD PTR [ecx+0x4f]
  41f589:	mov    ah,0xab
  41f58b:	sbb    BYTE PTR [edx],0xe3
  41f58e:	js     0x41f532
  41f590:	jnp    0x41f5ef
  41f592:	lahf   
  41f593:	lahf   
  41f594:	jg     0x41f55f
  41f596:	adc    DWORD PTR [ebx],0xbda753fc
  41f59c:	icebp  
  41f59d:	pop    es
  41f59e:	fadd   st,st(5)
  41f5a0:	jl     0x41f5d8
  41f5a2:	pop    ds
  41f5a3:	xchg   ecx,eax
  41f5a4:	pop    edx
  41f5a5:	xchg   DWORD PTR [edi-0x325b6af],esi
  41f5ab:	lods   eax,DWORD PTR ds:[esi]
  41f5ac:	inc    edi
  41f5ad:	adc    al,0x62
  41f5af:	rcr    DWORD PTR [ebx],cl
  41f5b1:	dec    eax
  41f5b2:	mov    edx,0x56bf3c16
  41f5b7:	jmp    0x49187cb9
  41f5bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f5bd:	jle    0x41f570
  41f5bf:	stos   BYTE PTR es:[edi],al
  41f5c0:	repz sbb eax,0x587def4b
  41f5c6:	push   eax
  41f5c7:	pop    eax
  41f5c8:	fucomip st,st(2)
  41f5ca:	cs xchg ecx,eax
  41f5cc:	or     eax,0xf3de60ff
  41f5d1:	xor    eax,0x20d36926
  41f5d6:	push   ds
  41f5d7:	mov    dh,ah
  41f5d9:	ficom  WORD PTR ds:0x4ca5e67b
  41f5df:	add    eax,DWORD PTR [ebx-0x40546e59]
  41f5e5:	and    al,0xdb
  41f5e7:	push   es
  41f5e8:	js     0x41f574
  41f5ea:	lds    esp,FWORD PTR [edx]
  41f5ec:	add    ch,BYTE PTR [edi+0x56]
  41f5ef:	cs or  al,0x44
  41f5f2:	retf   0x15ca
  41f5f5:	and    dh,BYTE PTR [ecx+eiz*2+0x13]
  41f5f9:	add    DWORD PTR [eax+0x5080cb2a],eax
  41f5ff:	das    
  41f600:	or     BYTE PTR [edx-0x59],0x57
  41f604:	outs   dx,DWORD PTR ds:[esi]
  41f605:	into   
  41f606:	retf   
  41f607:	lahf   
  41f608:	fbstp  TBYTE PTR [eax+eiz*1-0x3]
  41f60c:	xor    ebx,DWORD PTR [ebp+0x7d]
  41f60f:	mov    cl,0x7c
  41f611:	xlat   BYTE PTR ds:[ebx]
  41f612:	jmp    0xdf9dd29f
  41f617:	fdivr  QWORD PTR [esi-0x7f]
  41f61a:	fwait
  41f61b:	and    esp,ecx
  41f61d:	mov    BYTE PTR [ecx+0x55],al
  41f620:	aam    0x86
  41f622:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f623:	xor    dl,BYTE PTR ds:0xfee72f9d
  41f629:	dec    ecx
  41f62a:	pop    esp
  41f62b:	xlat   BYTE PTR ds:[ebx]
  41f62c:	sub    eax,0x9a3ea1da
  41f631:	into   
  41f632:	pop    edx
  41f633:	cdq    
  41f634:	push   ss
  41f635:	cmp    ah,dh
  41f637:	out    dx,al
  41f638:	jle    0x41f5f3
  41f63a:	lods   eax,DWORD PTR ds:[esi]
  41f63b:	fnstsw WORD PTR [edx+0x140d89bf]
  41f641:	jge    0x41f6a7
  41f643:	xchg   ebx,eax
  41f644:	mov    ah,0x48
  41f646:	out    dx,al
  41f647:	or     eax,0x25968240
  41f64c:	retf   
  41f64d:	aas    
  41f64e:	mov    al,0xad
  41f650:	xchg   ebx,eax
  41f651:	jae    0x41f5ef
  41f653:	dec    esi
  41f654:	jle    0x41f5fe
  41f656:	test   BYTE PTR [eax],dl
  41f658:	sub    dl,BYTE PTR [ecx+eiz*2-0x24c065d1]
  41f65f:	and    al,BYTE PTR [ebp-0x43a96e4f]
  41f665:	outs   dx,DWORD PTR ds:[esi]
  41f666:	sub    al,0xbe
  41f668:	jg     0x41f639
  41f66a:	jne    0x41f6b6
  41f66c:	repnz dec DWORD PTR [ebp-0x515a3936]
  41f673:	mov    esp,0x33cb60d3
  41f678:	xchg   esp,eax
  41f679:	pop    eax
  41f67a:	data16 jmp 0x41f6f9
  41f67d:	jmp    0x41f674
  41f67f:	push   esi
  41f680:	mov    bl,BYTE PTR [esi-0x4d3e1b8c]
  41f686:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f687:	mov    edi,0x56c21c70
  41f68c:	dec    esp
  41f68d:	pop    ebp
  41f68e:	pop    ds
  41f68f:	into   
  41f690:	mov    edx,DWORD PTR [eax+0x33]
  41f693:	push   ds
  41f694:	push   eax
  41f695:	push   0x1b4eb3b1
  41f69a:	in     eax,0x1d
  41f69c:	and    al,0xc1
  41f69e:	or     BYTE PTR [ebp+0x3c],cl
  41f6a1:	bound  edi,QWORD PTR [ebx-0x6d]
  41f6a4:	pop    es
  41f6a5:	ins    BYTE PTR es:[edi],dx
  41f6a6:	pusha  
  41f6a7:	mov    ah,BYTE PTR [edi-0xa64a763]
  41f6ad:	push   esp
  41f6ae:	out    dx,eax
  41f6af:	jne    0x41f673
  41f6b1:	in     al,dx
  41f6b2:	push   0xadf5de91
  41f6b7:	pop    eax
  41f6b8:	cmp    al,0x41
  41f6ba:	and    BYTE PTR [eax+0x39],al
  41f6bd:	jno    0x41f650
  41f6bf:	adc    BYTE PTR [eax-0xf],ah
  41f6c2:	popf   
  41f6c3:	jno    0x41f6a6
  41f6c5:	pusha  
  41f6c6:	pop    eax
  41f6c7:	xchg   edi,eax
  41f6c8:	fst    st(6)
  41f6ca:	fisubr DWORD PTR [edx]
  41f6cc:	or     BYTE PTR [eax+0x24],dh
  41f6cf:	or     DWORD PTR [eax+esi*2+0x318a2e69],eax
  41f6d6:	add    ebp,DWORD PTR [eax+0x3a]
  41f6d9:	pop    ecx
  41f6da:	mov    ch,BYTE PTR [edx+0x50]
  41f6dd:	fs je  0x41f6f3
  41f6e0:	popf   
  41f6e1:	or     DWORD PTR [eax+esi*4+0x27],eax
  41f6e5:	out    0xc2,eax
  41f6e7:	adc    ecx,ebx
  41f6e9:	loope  0x41f76a
  41f6eb:	les    esi,FWORD PTR [edi]
  41f6ed:	es xor eax,0x71964892
  41f6f3:	inc    esp
  41f6f4:	mov    bl,0x81
  41f6f6:	out    0x9f,eax
  41f6f8:	test   DWORD PTR [ebp+0x52],edi
  41f6fb:	fld    QWORD PTR [ecx]
  41f6fd:	fadd   QWORD PTR [edi+ebp*8+0x38]
  41f701:	mov    ch,0x45
  41f703:	cs or  al,0x63
  41f706:	mov    ds:0xdba97d9d,eax
  41f70b:	repnz xchg esi,eax
  41f70d:	loop   0x41f6ae
  41f70f:	je     0x41f714
  41f711:	mov    bl,0xf8
  41f713:	dec    ebp
  41f714:	xor    eax,0xa5831a60
  41f719:	sub    eax,0x83d4226e
  41f71e:	or     ch,BYTE PTR [ecx]
  41f720:	push   ebx
  41f721:	ins    DWORD PTR es:[edi],dx
  41f722:	iret   
  41f723:	jmp    0x41f6ef
  41f725:	add    al,0x33
  41f727:	lods   al,BYTE PTR ds:[esi]
  41f728:	(bad)  
  41f72a:	jle    0x41f74c
  41f72c:	cwde   
  41f72d:	cmp    al,0x92
  41f72f:	fcomp  QWORD PTR [bp+0x7]
  41f733:	jle    0x41f6f7
  41f735:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f736:	jge    0x41f753
  41f738:	lods   al,BYTE PTR ds:[esi]
  41f739:	ins    DWORD PTR es:[edi],dx
  41f73a:	mov    WORD PTR [ecx+0xc],cs
  41f73d:	mov    ebp,0x99495566
  41f742:	scas   al,BYTE PTR es:[edi]
  41f743:	mov    edx,0x72509409
  41f748:	gs and eax,0x918e353c
  41f74e:	mul    BYTE PTR ds:0x243c8fe7
  41f754:	cmp    al,0xe0
  41f756:	cmp    esp,esp
  41f758:	jnp    0x41f77d
  41f75a:	dec    ecx
  41f75b:	jae    0x41f707
  41f75d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f75e:	mov    bl,0x86
  41f761:	sub    ah,BYTE PTR [edi]
  41f763:	inc    esp
  41f764:	nop
  41f765:	sti    
  41f766:	xchg   BYTE PTR [ecx+eax*4-0x32717402],dh
  41f76d:	jle    0x41f769
  41f76f:	pop    ebx
  41f770:	mov    al,0xa
  41f772:	in     al,0x82
  41f774:	pusha  
  41f775:	mov    ecx,0x13fc943c
  41f77a:	fisub  DWORD PTR [edi-0x5483c996]
  41f780:	jbe    0x41f7e6
  41f782:	mov    ch,0xde
  41f784:	je     0x41f769
  41f786:	jg     0x41f7cd
  41f788:	arpl   di,dx
  41f78a:	bound  edi,QWORD PTR [ecx-0x781c979f]
  41f790:	and    edi,ebx
  41f792:	pop    ebx
  41f793:	xchg   edx,eax
  41f794:	pop    eax
  41f795:	cs jmp 0x2358:0xc89e36ca
  41f79d:	jnp    0x41f803
  41f79f:	in     eax,0x37
  41f7a1:	inc    ebx
  41f7a2:	adc    DWORD PTR [ecx],edi
  41f7a4:	adc    eax,0xd9e36f42
  41f7a9:	ds ret 
  41f7ab:	(bad)  
  41f7ac:	aam    0x45
  41f7ae:	xor    ah,BYTE PTR [eax+0x11]
  41f7b1:	jmp    0x2b89:0xbb550c83
  41f7b8:	push   ecx
  41f7b9:	pop    ecx
  41f7ba:	add    ch,ch
  41f7bc:	or     DWORD PTR ds:0x261368ec,ebx
  41f7c2:	loop   0x41f7f4
  41f7c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7c5:	mov    edx,0xe84ee227
  41f7ca:	out    dx,eax
  41f7cb:	and    eax,0x9e0ced17
  41f7d0:	outs   dx,DWORD PTR ds:[esi]
  41f7d1:	inc    ebx
  41f7d2:	push   ebx
  41f7d3:	dec    edx
  41f7d4:	mov    edi,DWORD PTR [ebp-0x4e1f0659]
  41f7da:	outs   dx,BYTE PTR ds:[esi]
  41f7db:	mov    BYTE PTR [ecx],cl
  41f7dd:	sbb    BYTE PTR [eax-0x2],ah
  41f7e0:	jne    0x41f854
  41f7e2:	fxch   st(7)
  41f7e4:	stc    
  41f7e5:	push   edx
  41f7e6:	xchg   ebp,eax
  41f7e7:	ret    
  41f7e8:	mov    eax,ds:0x8549f3ce
  41f7ed:	aad    0x41
  41f7ef:	sti    
  41f7f0:	sti    
  41f7f1:	push   edi
  41f7f2:	enter  0x68d9,0x17
  41f7f6:	fdivr  DWORD PTR [ecx+0x1a0db711]
  41f7fc:	push   0xb
  41f7fe:	sti    
  41f7ff:	sbb    eax,0x85d4d59
  41f804:	and    DWORD PTR [si-0x7889],ebp
  41f809:	cwde   
  41f80a:	test   BYTE PTR ds:0xad3ea96a,0x1
  41f811:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f812:	(bad)  
  41f814:	add    bh,BYTE PTR [ebx-0x7]
  41f817:	dec    esp
  41f818:	pop    ecx
  41f819:	out    dx,eax
  41f81a:	loop   0x41f864
  41f81c:	inc    ebx
  41f81d:	push   eax
  41f81e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f81f:	push   ds
  41f820:	jno    0x41f7fa
  41f822:	ja     0x41f805
  41f824:	dec    eax
  41f825:	mov    edi,DWORD PTR [ebx-0x62]
  41f828:	xor    al,0x4b
  41f82a:	loopne 0x41f817
  41f82c:	or     eax,esp
  41f82e:	not    DWORD PTR fs:[eax+0x1e]
  41f832:	sub    al,bl
  41f834:	dec    edx
  41f835:	sbb    ecx,DWORD PTR [edx-0x74]
  41f838:	xor    ebp,esp
  41f83a:	mov    edi,0x45d8226a
  41f83f:	in     eax,dx
  41f840:	cdq    
  41f841:	mov    eax,0x1de9e28b
  41f846:	pop    edi
  41f847:	pushf  
  41f848:	dec    edi
  41f849:	sub    ah,0x9b
  41f84c:	and    BYTE PTR [esi],ch
  41f84e:	int3   
  41f84f:	mov    ds:0x92ff1419,al
  41f854:	sbb    ebp,DWORD PTR [esi-0x1b]
  41f857:	(bad)
  41f85b:	(bad)  
  41f85c:	rcr    dl,cl
  41f85e:	xchg   ebp,eax
  41f85f:	dec    esp
  41f860:	mov    ch,0x19
  41f862:	cmp    al,0xf3
  41f864:	push   ecx
  41f865:	mov    bl,0xdd
  41f867:	xor    bh,bh
  41f869:	rol    DWORD PTR [ebx+ecx*2-0x79],0x74
  41f86e:	jmp    FWORD PTR [ebp+0x3b]
  41f871:	sbb    esp,ebp
  41f873:	pusha  
  41f874:	ds push ebp
  41f876:	pop    es
  41f877:	push   edx
  41f878:	and    DWORD PTR [esi-0xf958b2d],edx
  41f87e:	xor    BYTE PTR ds:0x5649eaef,ah
  41f884:	mov    WORD PTR [ebp+edx*1-0x413e6ab1],?
  41f88b:	ja     0x41f848
  41f88d:	lods   eax,DWORD PTR ds:[esi]
  41f88e:	fs jb  0x41f866
  41f891:	out    0xfc,al
  41f893:	cwde   
  41f894:	pop    ds
  41f895:	cmp    al,0xab
  41f897:	or     eax,0x61628283
  41f89c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f89d:	mov    edi,0x20064bb4
  41f8a3:	xchg   ebx,eax
  41f8a4:	mov    esi,0xb5eb3273
  41f8a9:	or     ebp,DWORD PTR [eax+edi*1-0x1d30b5b8]
  41f8b0:	push   es
  41f8b1:	xchg   ebx,eax
  41f8b2:	mov    ds:0x8373130e,eax
  41f8b7:	ja     0x41f8dd
  41f8b9:	pop    ecx
  41f8ba:	push   0xf8a86433
  41f8bf:	enter  0x23f3,0xda
  41f8c3:	adc    eax,DWORD PTR [ebx-0x2220edd7]
  41f8c9:	lea    edx,[edi+0xff6b978]
  41f8cf:	paddb  mm0,QWORD PTR [ebx-0x2d3ffeb9]
  41f8d6:	mov    fs,WORD PTR ss:[ebx+0x64e7781e]
  41f8dd:	dec    esi
  41f8de:	inc    esp
  41f8df:	sbb    eax,0xa4b97393
  41f8e4:	pushf  
  41f8e5:	mov    ch,0x4c
  41f8e7:	sbb    eax,0x7943c852
  41f8ec:	xor    eax,0xb5c78b93
  41f8f1:	jge    0x41f8f8
  41f8f3:	adc    eax,0xa7b61d38
  41f8f8:	xor    al,0x33
  41f8fa:	das    
  41f8fb:	mov    ?,WORD PTR [eax-0x1942e527]
  41f901:	pop    ebp
  41f902:	retf   
  41f903:	jnp    0x41f904
  41f905:	popf   
  41f906:	dec    DWORD PTR [eax-0x4d]
  41f909:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f90a:	jp     0x41f90f
  41f90c:	(bad)  
  41f90d:	cmp    BYTE PTR [eax-0xebef0f2],ah
  41f913:	jge    0x41f919
  41f915:	fisttp DWORD PTR [eax+0x7b]
  41f918:	and    BYTE PTR [ecx-0x6ed16ade],bh
  41f91e:	outs   dx,BYTE PTR ds:[esi]
  41f91f:	jb     0x41f90c
  41f921:	stc    
  41f922:	and    dl,BYTE PTR [eax+0x38]
  41f925:	stc    
  41f926:	ret    
  41f927:	icebp  
  41f928:	fbstp  TBYTE PTR [edx-0x7dc2a665]
  41f92e:	test   al,0xf0
  41f930:	pop    edi
  41f931:	push   ss
  41f932:	sub    ah,cl
  41f934:	push   es
  41f935:	call   0xdec769c0
  41f93a:	ret    
  41f93b:	test   al,0x60
  41f93d:	cld    
  41f93e:	pop    esp
  41f93f:	cmp    cl,dh
  41f941:	mov    DWORD PTR [ebx-0x13f539b1],0x62e9b483
  41f94b:	and    ebp,DWORD PTR [esi]
  41f94d:	ss pop ebx
  41f94f:	int3   
  41f950:	xchg   BYTE PTR [ecx-0x4675147e],cl
  41f956:	mov    eax,0x4bc7424d
  41f95b:	adc    BYTE PTR [ecx-0x39496926],dl
  41f961:	les    edx,FWORD PTR [ecx+0x5a]
  41f964:	ins    BYTE PTR es:[edi],dx
  41f965:	or     eax,0x8c060cc6
  41f96a:	test   eax,0xe05326ba
  41f96f:	nop
  41f970:	mov    ebx,0x721c97d9
  41f975:	add    al,ch
  41f977:	mov    dl,BYTE PTR [ecx]
  41f979:	bound  ecx,QWORD PTR [esi-0x9]
  41f97c:	sub    BYTE PTR [esi+0x72],bh
  41f97f:	fdivr  st(0),st
  41f981:	pop    bx
  41f983:	push   edx
  41f984:	cmp    eax,0xd494abe9
  41f989:	and    edi,edx
  41f98b:	adc    al,0x2b
  41f98d:	out    dx,al
  41f98e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f98f:	inc    ecx
  41f990:	sub    eax,DWORD PTR [ecx+0x7d]
  41f993:	xor    DWORD PTR [ecx],esi
  41f995:	and    al,0x35
  41f997:	pop    es
  41f998:	test   edi,esp
  41f99a:	sbb    eax,0xda34a5f4
  41f99f:	aam    0xd9
  41f9a1:	in     eax,dx
  41f9a2:	inc    ebx
  41f9a3:	add    eax,0xbe235b60
  41f9a8:	dec    esp
  41f9a9:	aas    
  41f9aa:	je     0x41f9ca
  41f9ac:	inc    esi
  41f9ad:	mov    ebx,0x9aa4b263
  41f9b2:	jp     0x41f95f
  41f9b4:	cmp    al,dl
  41f9b6:	or     esp,DWORD PTR [ebx-0x48e3799d]
  41f9bc:	test   al,0xbf
  41f9be:	mov    eax,0xe3e1df82
  41f9c3:	cmp    al,BYTE PTR [esi-0x54de9015]
  41f9c9:	(bad)  [edi-0x25]
  41f9cc:	and    eax,DWORD PTR [edx+0xa]
  41f9cf:	and    DWORD PTR [ecx-0x314ef09b],0xf1a6f8ea
  41f9d9:	xchg   ecx,eax
  41f9da:	(bad)  
  41f9db:	mov    cs,WORD PTR [ecx-0x5f7447fc]
  41f9e1:	lods   al,BYTE PTR ds:[esi]
  41f9e2:	cmp    ah,bh
  41f9e4:	inc    ebx
  41f9e5:	xor    bh,BYTE PTR [ecx]
  41f9e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9e8:	pop    edi
  41f9e9:	jns    0x41f99c
  41f9eb:	cmp    BYTE PTR [ecx+edx*2],ch
  41f9ee:	push   0x670015ec
  41f9f3:	popa   
  41f9f4:	pushf  
  41f9f5:	push   ebp
  41f9f6:	push   edx
  41f9f7:	xchg   ecx,eax
  41f9f8:	scas   eax,DWORD PTR es:[edi]
  41f9f9:	dec    esp
  41f9fa:	cmp    DWORD PTR [ebx],ebx
  41f9fc:	xchg   ebx,eax
  41f9fd:	hlt    
  41f9fe:	sub    BYTE PTR [eax],ch
  41fa00:	cmc    
  41fa01:	mov    ebx,0xdedbee8e
  41fa06:	cld    
  41fa07:	or     DWORD PTR [eax],esi
  41fa09:	xlat   BYTE PTR ds:[ebx]
  41fa0a:	inc    esp
  41fa0b:	std    
  41fa0c:	mov    ecx,0x72e68e7a
  41fa11:	mov    edi,0x60de2cb8
  41fa16:	xchg   DWORD PTR [edx+eax*1],ecx
  41fa19:	out    dx,eax
  41fa1a:	push   ss
  41fa1b:	inc    ebx
  41fa1c:	(bad)  
  41fa1d:	aam    0xb
  41fa1f:	sbb    dl,BYTE PTR [eax-0x66]
  41fa22:	dec    ecx
  41fa23:	xchg   ebp,eax
  41fa24:	inc    edx
  41fa25:	ret    
  41fa26:	pop    ss
  41fa27:	push   es
  41fa28:	(bad)  [ebp+0x64]
  41fa2b:	mov    bl,0x0
  41fa2d:	pop    ebx
  41fa2e:	push   es
  41fa2f:	ins    BYTE PTR es:[edi],dx
  41fa30:	pop    edx
  41fa31:	xchg   edi,eax
  41fa32:	ins    DWORD PTR es:[edi],dx
  41fa33:	inc    esp
  41fa34:	adc    al,0x3b
  41fa36:	add    esp,DWORD PTR [edi-0x58e2bc49]
  41fa3c:	push   ss
  41fa3d:	mov    dh,0x34
  41fa3f:	or     edx,ebp
  41fa41:	and    al,0x51
  41fa43:	pop    ds
  41fa44:	hlt    
  41fa45:	in     eax,0xf9
  41fa47:	loopne 0x41fac3
  41fa49:	jg     0x41fa38
  41fa4b:	pop    edi
  41fa4c:	jmp    FWORD PTR [edi*4-0x59d17ebf]
  41fa53:	cmp    BYTE PTR ss:[bp+si-0x33de],0xc8
  41fa5a:	cmp    edi,eax
  41fa5c:	cdq    
  41fa5d:	pop    esi
  41fa5e:	xor    BYTE PTR [edx-0x7a],dh
  41fa61:	push   ecx
  41fa62:	bound  esp,QWORD PTR [eax+0x9200833]
  41fa68:	or     eax,0xea3a494b
  41fa6d:	fst    DWORD PTR [ecx]
  41fa6f:	mov    ch,0x15
  41fa71:	xlat   BYTE PTR ds:[ebx]
  41fa72:	rcr    BYTE PTR [edx-0x41a2646c],0xc8
  41fa79:	fdiv   DWORD PTR [ebp-0x3e0d5930]
  41fa7f:	inc    ecx
  41fa80:	stos   BYTE PTR es:[edi],al
  41fa81:	rcl    BYTE PTR [esi],1
  41fa83:	icebp  
  41fa84:	xchg   BYTE PTR [eax],ah
  41fa86:	add    dh,bh
  41fa88:	repnz pop edi
  41fa8a:	js     0x41fa14
  41fa8c:	add    al,0xe8
  41fa8e:	xor    ah,BYTE PTR [edx]
  41fa90:	cmp    cl,0x86
  41fa93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa94:	jno    0x41fa2b
  41fa96:	cmp    eax,0x6123f069
  41fa9b:	dec    esi
  41fa9c:	pop    edi
  41fa9d:	sub    al,0xe0
  41fa9f:	mov    bl,0x5c
  41faa1:	ret    0x8ed7
  41faa4:	dec    ebx
  41faa5:	test   BYTE PTR [ecx+0x5f5480e4],ah
  41faab:	sbb    ecx,DWORD PTR [ebp-0x3c]
  41faae:	mov    ecx,0xbcb671da
  41fab3:	push   edi
  41fab4:	call   0x2cd0:0x2a24b89d
  41fabb:	int3   
  41fabc:	mov    esi,0xa50ce7de
  41fac1:	sbb    eax,0xfac196a
  41fac6:	add    eax,0x1fc92e98
  41facb:	(bad)  
  41facd:	in     al,0xbd
  41facf:	dec    ecx
  41fad0:	and    dl,BYTE PTR [ebx-0x5c38552d]
  41fad6:	jecxz  0x41fa5b
  41fad8:	rcr    esi,cl
  41fada:	xchg   edi,eax
  41fadb:	fadd   DWORD PTR [edi-0x73c3520f]
  41fae1:	test   dl,0x98
  41fae4:	jg     0x41fa9b
  41fae6:	sub    cl,dh
  41fae8:	inc    ebp
  41fae9:	mov    edi,0x4a2d8264
  41faee:	sbb    eax,0x56d7630f
  41faf3:	mov    edx,0x99165bb5
  41faf8:	xchg   esp,eax
  41faf9:	dec    edi
  41fafa:	xlat   BYTE PTR ds:[ebx]
  41fafb:	mov    eax,ds:0x21259e6a
  41fb00:	jmp    0x1acb:0x4f0ffa3e
  41fb07:	js     0x41fa97
  41fb09:	add    eax,0xd7b0a338
  41fb0e:	add    BYTE PTR [esi+0x29dd0827],bl
  41fb14:	sbb    eax,0x98fa9795
  41fb19:	dec    ebp
  41fb1a:	inc    edx
  41fb1b:	xchg   DWORD PTR [ecx-0x4f],esi
  41fb1e:	mul    BYTE PTR [edi-0x13]
  41fb21:	push   edi
  41fb22:	push   0x6ba3a322
  41fb27:	ins    DWORD PTR es:[edi],dx
  41fb28:	mov    BYTE PTR [esi],dl
  41fb2a:	dec    eax
  41fb2b:	xchg   edx,eax
  41fb2c:	out    0x9d,al
  41fb2e:	fisttp DWORD PTR [eax+0x172f2a8c]
  41fb34:	jbe    0x41fb78
  41fb36:	call   0x41b3:0xe9676af3
  41fb3d:	fcomp  QWORD PTR [eax+0x507d1464]
  41fb43:	adc    ch,BYTE PTR [ebx-0x4e4d57b0]
  41fb49:	or     ebp,DWORD PTR [ecx]
  41fb4b:	push   esp
  41fb4c:	out    dx,eax
  41fb4d:	and    esp,ebx
  41fb4f:	add    DWORD PTR [eax-0x787eb01d],ebp
  41fb55:	ret    0xde0a
  41fb58:	or     edi,DWORD PTR [ecx]
  41fb5a:	iret   
  41fb5b:	call   0xa06c0dd1
  41fb60:	das    
  41fb61:	cli    
  41fb62:	push   ecx
  41fb63:	lea    esi,[ebx]
  41fb65:	clc    
  41fb66:	outs   dx,BYTE PTR ds:[esi]
  41fb67:	out    dx,al
  41fb68:	(bad)  
  41fb69:	addr16 fwait
  41fb6b:	jnp    0x41fb35
  41fb6d:	jmp    0xada6:0xd4b07eec
  41fb74:	inc    ecx
  41fb75:	jae    0x41fb3e
  41fb77:	leave  
  41fb78:	and    al,0x97
  41fb7a:	icebp  
  41fb7b:	ss push cs
  41fb7d:	xchg   edi,eax
  41fb7e:	mov    ah,0xd8
  41fb80:	ror    edx,0xa2
  41fb83:	ss push ds
  41fb85:	enter  0x622b,0x99
  41fb89:	push   cs
  41fb8a:	add    eax,0x2915aa2c
  41fb8f:	or     al,0xd6
  41fb91:	test   DWORD PTR [ebp-0x772b3496],esp
  41fb97:	push   ss
  41fb98:	fcomp  QWORD PTR [ebp-0x64cd42]
  41fb9e:	popf   
  41fb9f:	lss    esp,FWORD PTR [esi+0x37]
  41fba3:	sbb    DWORD PTR [eax+0x11],ecx
  41fba6:	pop    es
  41fba7:	lahf   
  41fba8:	fdiv   QWORD PTR [eax-0x62d01cf7]
  41fbae:	mov    bl,BYTE PTR [ebx+edi*4+0x74]
  41fbb2:	pop    ebx
  41fbb3:	cmp    eax,0xdacd2aae
  41fbb8:	shr    DWORD PTR [edi-0x1849f69d],cl
  41fbbe:	mov    ebx,0x6038fffa
  41fbc3:	retf   0xad6e
  41fbc6:	nop
  41fbc7:	sub    al,0x28
  41fbc9:	or     BYTE PTR ds:0x1b6fe8,ch
  41fbcf:	pop    ecx
  41fbd0:	rcr    BYTE PTR [ebx],0x12
  41fbd3:	cdq    
  41fbd4:	mov    ebp,DWORD PTR [edi+0x3c425ff1]
  41fbda:	sbb    ebx,DWORD PTR [edi-0x5e]
  41fbdd:	adc    eax,0x9348eaee
  41fbe2:	repnz fstp TBYTE PTR [ebp+0x2e]
  41fbe6:	or     ebx,edx
  41fbe8:	pop    ebp
  41fbe9:	into   
  41fbea:	push   es
  41fbeb:	xor    DWORD PTR [ebx+0x7d],ebp
  41fbee:	ret    0x2fdb
  41fbf1:	fwait
  41fbf2:	mov    ch,BYTE PTR [esi]
  41fbf4:	ds in  eax,dx
  41fbf6:	mov    ds:0x48474d02,eax
  41fbfb:	sti    
  41fbfc:	in     al,dx
  41fbfd:	or     bh,BYTE PTR [ebx+0x7e]
  41fc00:	jae    0x41fc3d
  41fc02:	xor    cl,cl
  41fc04:	jl     0x41fc53
  41fc06:	lods   eax,DWORD PTR ds:[esi]
  41fc07:	adc    ebx,esi
  41fc09:	mov    ds:0x29b2af38,eax
  41fc0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc0f:	adc    edi,edx
  41fc11:	mov    edi,0xed8eea72
  41fc16:	add    dh,BYTE PTR [esi]
  41fc18:	sti    
  41fc19:	mov    ecx,0xaad0be20
  41fc1e:	sbb    eax,0xea2e7eae
  41fc23:	cmp    BYTE PTR [edi],dh
  41fc25:	cmp    dh,al
  41fc27:	xor    bh,BYTE PTR [ecx+0x1e05aad4]
  41fc2d:	pop    ecx
  41fc2e:	xchg   ecx,eax
  41fc2f:	mul    BYTE PTR ss:[edi-0x74734e35]
  41fc36:	popa   
  41fc37:	fsubr  QWORD PTR [edi+edx*2]
  41fc3a:	pop    es
  41fc3b:	adc    eax,0x2540bbe5
  41fc40:	jmp    0xe92c0978
  41fc45:	(bad)  [ecx-0x15]
  41fc48:	daa    
  41fc49:	loopne 0x41fc94
  41fc4b:	mov    bh,0xca
  41fc4d:	xor    al,0x71
  41fc4f:	cdq    
  41fc50:	mov    ah,BYTE PTR [esp+eiz*8]
  41fc53:	gs out dx,eax
  41fc55:	stos   DWORD PTR es:[edi],eax
  41fc56:	ror    BYTE PTR [edx],0x17
  41fc59:	(bad)  
  41fc5a:	adc    al,0x46
  41fc5c:	mov    BYTE PTR [eax-0x2],bh
  41fc5f:	fwait
  41fc60:	js     0xba1ef4b4
  41fc66:	inc    edx
  41fc67:	data16 sti 
  41fc69:	dec    esi
  41fc6a:	rcr    DWORD PTR [edi-0x6],0xa
  41fc6e:	icebp  
  41fc6f:	les    ebx,FWORD PTR [esi+0x9]
  41fc72:	aad    0xf5
  41fc74:	cld    
  41fc75:	fwait
  41fc76:	shl    BYTE PTR [edx+0x6925c753],cl
  41fc7c:	aam    0xc3
  41fc7e:	xchg   edi,eax
  41fc7f:	loope  0x41fc71
  41fc81:	rcr    BYTE PTR [eax],cl
  41fc83:	rcr    DWORD PTR [ebx-0x70],0x2c
  41fc87:	jne    0x41fc0b
  41fc89:	je     0x41fc7b
  41fc8b:	sbb    edx,edx
  41fc8d:	mov    es,WORD PTR ds:0x42a09f8b
  41fc93:	(bad)  
  41fc94:	sar    DWORD PTR [ebp+eax*1-0x78b28afa],cl
  41fc9b:	push   edx
  41fc9c:	cwde   
  41fc9d:	jge    0x41fc36
  41fc9f:	jp     0x41fd12
  41fca1:	or     eax,0x8200c793
  41fca6:	out    0xdf,al
  41fca8:	xor    edx,DWORD PTR ss:[ebx+esi*4-0x10]
  41fcad:	fprem  
  41fcaf:	mov    edi,0xbeef6acb
  41fcb4:	div    BYTE PTR [ebp+0xac094e9]
  41fcba:	adc    bl,BYTE PTR [edi+0x490260e0]
  41fcc0:	push   ebp
  41fcc1:	push   edi
  41fcc2:	fs je  0x41fc84
  41fcc5:	les    ecx,FWORD PTR [ecx]
  41fcc7:	imul   esp,DWORD PTR [esp+edi*1+0x0],0xffffffe7
  41fccc:	xchg   eax,eax
  41fcce:	inc    esi
  41fccf:	in     al,0x52
  41fcd1:	rcl    DWORD PTR [esi],0xe2
  41fcd4:	imul   BYTE PTR [edx+0x204e3bc4]
  41fcda:	aaa    
  41fcdb:	adc    BYTE PTR ds:0xbc0046ed,0x26
  41fce2:	stos   BYTE PTR es:[edi],al
  41fce3:	ins    BYTE PTR es:[edi],dx
  41fce4:	in     eax,dx
  41fce5:	in     eax,0x71
  41fce7:	clc    
  41fce8:	neg    DWORD PTR [ebp-0x5b]
  41fceb:	ins    BYTE PTR es:[edi],dx
  41fcec:	popa   
  41fced:	loopne 0x41fc75
  41fcef:	adc    esp,DWORD PTR [edx-0x351bebe3]
  41fcf5:	repz adc esi,ecx
  41fcf8:	stc    
  41fcf9:	dec    ebp
  41fcfa:	stc    
  41fcfb:	test   BYTE PTR [edi-0x37],0x8c
  41fcff:	lods   eax,DWORD PTR ds:[esi]
  41fd00:	icebp  
  41fd01:	iret   
  41fd02:	jp     0x41fd0d
  41fd04:	push   edx
  41fd05:	sub    BYTE PTR [edi-0x70f4aa49],dl
  41fd0b:	int3   
  41fd0c:	pop    esi
  41fd0d:	mov    esi,0x3551f447
  41fd12:	xchg   ecx,eax
  41fd13:	mov    al,ds:0x6679ceda
  41fd18:	adc    al,ah
  41fd1a:	push   esi
  41fd1b:	dec    ecx
  41fd1c:	sbb    bh,dh
  41fd1e:	loope  0x41fd47
  41fd20:	sub    dh,cl
  41fd22:	mov    dl,BYTE PTR [ebp+esi*2+0x5a3872f8]
  41fd29:	ret    
  41fd2a:	cdq    
  41fd2b:	mov    al,ds:0xa498da09
  41fd30:	jbe    0x41fd4a
  41fd32:	sub    BYTE PTR [ebp-0x6a52343b],dh
  41fd38:	out    dx,eax
  41fd39:	jmp    0x41fd02
  41fd3b:	retf   
  41fd3c:	inc    ecx
  41fd3d:	jne    0x41fd9c
  41fd3f:	and    eax,0x5128721c
  41fd44:	jp     0x41fd7a
  41fd46:	xor    al,BYTE PTR [ebx+ebp*2]
  41fd49:	scas   eax,DWORD PTR es:[edi]
  41fd4a:	test   al,0x22
  41fd4c:	jl     0x41fcf8
  41fd4e:	fcom   st(5)
  41fd50:	nop
  41fd51:	or     DWORD PTR [edx+ecx*2+0x6c],edi
  41fd55:	inc    DWORD PTR [esi+edx*1+0x2e]
  41fd59:	mov    BYTE PTR [eax],bl
  41fd5b:	fs (bad) 
  41fd5d:	stc    
  41fd5e:	es jno 0x41fdaa
  41fd61:	stc    
  41fd62:	fiadd  WORD PTR [ebx]
  41fd64:	jle    0x41fd03
  41fd66:	jns    0x41fd6c
  41fd68:	cmp    ebp,DWORD PTR [esi+ebp*1-0x5e9e3a03]
  41fd6f:	call   0xb3e0:0x1c10048b
  41fd76:	std    
  41fd77:	fcomp  st(3)
  41fd79:	das    
  41fd7a:	clc    
  41fd7b:	sub    al,0x2a
  41fd7d:	loop   0x41fd42
  41fd7f:	sahf   
  41fd80:	dec    ecx
  41fd81:	(bad)  
  41fd83:	dec    BYTE PTR ds:0xf0e3c3ab
  41fd89:	aaa    
  41fd8a:	or     DWORD PTR ds:0x6570df2d,esi
  41fd90:	shl    di,1
  41fd93:	retf   
  41fd94:	push   0xfffffffa
  41fd96:	sub    edi,ebp
  41fd98:	sub    eax,0x8f44f07c
  41fd9d:	test   BYTE PTR [eax-0x19d93ebe],ch
  41fda3:	out    0xd1,eax
  41fda5:	test   eax,0x19063e95
  41fdaa:	xchg   ebx,eax
  41fdab:	fnstsw WORD PTR [eax-0x69]
  41fdae:	mov    es,ecx
  41fdb0:	ss shl edx,cl
  41fdb3:	adc    ch,bh
  41fdb5:	jb     0x41fd70
  41fdb7:	(bad)  
  41fdb8:	ja     0x41fdfb
  41fdba:	das    
  41fdbb:	mov    ds:0xa2ae2a9,eax
  41fdc0:	pop    ss
  41fdc1:	adc    eax,0xbe529f5c
  41fdc6:	mov    ebx,DWORD PTR [edx+edi*8+0x261d8740]
  41fdcd:	enter  0xb942,0x8e
  41fdd1:	pop    ebp
  41fdd2:	stc    
  41fdd3:	xchg   DWORD PTR [ebx],edi
  41fdd5:	xor    DWORD PTR [ecx+0x6e3cdc6b],edi
  41fddb:	out    0x2,al
  41fddd:	data16 fimul DWORD PTR [ebp+0x7252a201]
  41fde4:	psubsb mm5,QWORD PTR [ebx+0x1d]
  41fde8:	mov    al,0x56
  41fdea:	mov    ch,0xdd
  41fdec:	dec    edi
  41fded:	sub    dl,BYTE PTR gs:[ebp-0x75]
  41fdf1:	fisub  DWORD PTR [edx+0x4f]
  41fdf4:	push   ecx
  41fdf5:	xchg   DWORD PTR ds:[edi*4+0x8fa638b],edx
  41fdfd:	mov    cl,BYTE PTR [ebp+0x4a]
  41fe00:	push   ds
  41fe01:	call   0x409d:0xa1a7a0c5
  41fe08:	jae    0x41fe08
  41fe0a:	shr    DWORD PTR [esi-0x65ff2d57],0x48
  41fe11:	loope  0x41fe3e
  41fe13:	mov    edx,0x54b5139
  41fe18:	xchg   ebx,eax
  41fe19:	in     eax,dx
  41fe1a:	arpl   bx,ax
  41fe1c:	mov    ecx,0xf8f41191
  41fe21:	popf   
  41fe22:	and    ah,al
  41fe24:	leave  
  41fe25:	shl    DWORD PTR [ebx+eax*4+0x710ed57a],1
  41fe2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe2d:	daa    
  41fe2e:	ficomp DWORD PTR ds:0xfdcfa6d4
  41fe34:	ss xor eax,0xa17bc9cc
  41fe3a:	dec    ebp
  41fe3b:	cld    
  41fe3c:	mov    eax,ds:0x3f1abbf3
  41fe41:	push   esi
  41fe42:	pop    eax
  41fe43:	cs push ebp
  41fe45:	xlat   BYTE PTR ds:[ebx]
  41fe46:	xchg   ebp,eax
  41fe47:	retf   0x6e
  41fe4a:	or     al,BYTE PTR [ebp+0x2]
  41fe4d:	pop    ebp
  41fe4e:	mov    ebx,0xf4ea2cbd
  41fe53:	inc    edi
  41fe54:	push   ss
  41fe55:	xor    eax,0xcfb03228
  41fe5a:	repz retf 
  41fe5c:	scas   eax,DWORD PTR es:[edi]
  41fe5d:	mov    ebx,0x644e816a
  41fe62:	in     al,dx
  41fe63:	fwait
  41fe64:	sti    
  41fe65:	loope  0x41fe44
  41fe67:	sbb    edi,DWORD PTR [ebp-0x2e]
  41fe6a:	(bad)  
  41fe6b:	fs pusha 
  41fe6d:	and    DWORD PTR [edx+0x71da2a32],esp
  41fe73:	or     eax,0x755d9d71
  41fe78:	retf   0x1c9b
  41fe7b:	mov    ah,0x12
  41fe7d:	ins    DWORD PTR es:[edi],dx
  41fe7e:	(bad)  
  41fe7f:	cmp    bl,dh
  41fe81:	jg     0x41fedc
  41fe83:	xor    BYTE PTR [ebx+0x7d51450a],cl
  41fe89:	frstor [edx-0x2f]
  41fe8c:	mov    edx,0x6e900f4e
  41fe91:	jecxz  0x41fe2a
  41fe93:	loopne 0x41fecb
  41fe95:	pop    ds
  41fe96:	mov    ds:0x4f660dc9,al
  41fe9b:	inc    edx
  41fe9c:	pusha  
  41fe9d:	dec    ebp
  41fe9e:	cld    
  41fe9f:	outs   dx,DWORD PTR ds:[esi]
  41fea0:	inc    ecx
  41fea1:	cmp    DWORD PTR [ecx],0x9b8ab716
  41fea7:	popf   
  41fea8:	cmovs  edx,DWORD PTR [ebx-0x30]
  41feac:	scas   al,BYTE PTR es:[edi]
  41fead:	mov    ecx,0xde48980e
  41feb2:	loop   0x41fed3
  41feb4:	aas    
  41feb5:	jle    0x41feee
  41feb7:	(bad)  
  41feb8:	arpl   WORD PTR [edx],cx
  41feba:	adc    al,0x28
  41febc:	push   esp
  41febd:	jge    0x41fe77
  41febf:	xchg   edi,eax
  41fec0:	(bad)  
  41fec1:	and    eax,0x58346678
  41fec6:	aad    0xdb
  41fec8:	mov    ecx,0x5641a274
  41fecd:	sbb    BYTE PTR [esi],dh
  41fecf:	std    
  41fed0:	or     al,0x6f
  41fed2:	sbb    ecx,DWORD PTR gs:[ebp+0x6]
  41fed6:	fst    QWORD PTR [esi+0x5c]
  41fed9:	mov    bl,0x21
  41fedb:	pop    DWORD PTR [esp+ebx*1-0x4e1b78db]
  41fee2:	in     al,dx
  41fee3:	(bad)  
  41fee4:	sar    DWORD PTR [ebp+0x6a37e66a],1
  41feea:	into   
  41feeb:	cmp    BYTE PTR [esp+eax*1-0x6fd34129],0x15
  41fef3:	mov    dh,cl
  41fef5:	adc    al,0x42
  41fef7:	cmp    bh,BYTE PTR [edi+0x4257c730]
  41fefd:	jae    0x41ff30
  41feff:	test   BYTE PTR [ebx],0x23
  41ff02:	sahf   
  41ff03:	into   
  41ff04:	pusha  
  41ff05:	pusha  
  41ff06:	mov    bl,0x55
  41ff08:	xor    DWORD PTR [ebp+0x709856d1],0xb597ba7a
  41ff12:	pop    ss
  41ff13:	xchg   esp,eax
  41ff14:	call   0xeaf5fa7e
  41ff19:	data16 (bad) 
  41ff1b:	js     0x41ff55
  41ff1d:	(bad)  
  41ff1e:	push   eax
  41ff1f:	xor    eax,0x5d39ff34
  41ff24:	repnz (bad) 
  41ff26:	fs leave 
  41ff28:	fadd   DWORD PTR [ebx+eax*8-0xa]
  41ff2c:	clc    
  41ff2d:	mov    ebx,0x2d748b80
  41ff32:	mov    dl,0x4a
  41ff34:	push   esi
  41ff35:	adc    DWORD PTR [eax-0x1e23849d],edi
  41ff3b:	clc    
  41ff3c:	outs   dx,DWORD PTR ds:[esi]
  41ff3d:	pop    eax
  41ff3e:	addr16 push esp
  41ff40:	lock jecxz 0x41ff2e
  41ff43:	int    0x2c
  41ff45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff46:	sbb    DWORD PTR [edi-0x6a],eax
  41ff49:	jbe    0x41ff57
  41ff4b:	jecxz  0x41ff4c
  41ff4d:	inc    esp
  41ff4e:	ins    DWORD PTR es:[edi],dx
  41ff4f:	jo     0x41ff1c
  41ff51:	pop    edi
  41ff52:	xchg   BYTE PTR [edi],al
  41ff54:	jns    0x41ff24
  41ff56:	adc    al,0x37
  41ff58:	out    dx,eax
  41ff59:	and    DWORD PTR [edi+0x4a],ebx
  41ff5c:	fs jbe 0x41ffb6
  41ff5f:	fsub   QWORD PTR [ebp-0x1dfa1e69]
  41ff65:	mov    eax,DWORD PTR [edi-0x70407465]
  41ff6b:	jo     0x41ff41
  41ff6d:	or     al,0x1f
  41ff6f:	inc    dx
  41ff71:	sub    al,0x72
  41ff73:	dec    edi
  41ff74:	sub    edx,DWORD PTR [esi-0x27]
  41ff77:	pop    edi
  41ff78:	aam    0xc6
  41ff7a:	or     eax,0x31122426
  41ff7f:	mov    eax,ds:0x2f6bec52
  41ff84:	sub    al,dl
  41ff86:	call   DWORD PTR [esi-0x2a0b101a]
  41ff8c:	pop    es
  41ff8d:	cdq    
  41ff8e:	fstp   TBYTE PTR [ebx]
  41ff90:	push   0x60a75019
  41ff95:	je     0x41ffeb
  41ff97:	adc    DWORD PTR [edi+0x663720c5],esp
  41ff9d:	dec    ecx
  41ff9e:	loop   0x41ff6f
  41ffa0:	cmp    DWORD PTR [ebx+ebx*2],esi
  41ffa3:	nop
  41ffa4:	jecxz  0x41ff33
  41ffa6:	inc    eax
  41ffa7:	fsub   DWORD PTR [ebx-0x5f7ac4fa]
  41ffad:	or     eax,0x492ab607
  41ffb2:	sbb    al,0xc8
  41ffb4:	mov    edi,DWORD PTR [edx]
  41ffb6:	cmp    edi,DWORD PTR [ecx+0x54a65941]
  41ffbc:	cmp    BYTE PTR [eax],0x8c
  41ffbf:	bound  edx,QWORD PTR [ebx+0x7d]
  41ffc2:	test   DWORD PTR [ecx],edi
  41ffc4:	cmp    ebp,DWORD PTR [edx+0x7a]
  41ffc7:	pusha  
  41ffc8:	fild   WORD PTR ds:0x447a303e
  41ffce:	jne    0x41ffb9
  41ffd0:	mov    ch,0x2e
  41ffd2:	adc    dh,dl
  41ffd4:	add    al,0x21
  41ffd6:	add    BYTE PTR [edx-0x64],ch
  41ffd9:	push   edx
  41ffda:	cld    
  41ffdb:	ss dec ebx
  41ffdd:	inc    esi
  41ffde:	add    BYTE PTR [eax],bh
  41ffe0:	xchg   esi,eax
  41ffe1:	adc    al,0xaa
  41ffe3:	xchg   esp,eax
  41ffe4:	fmul   DWORD PTR [edx]
  41ffe6:	inc    ecx
  41ffe7:	and    al,0x3b
  41ffe9:	rcr    BYTE PTR [ecx+eax*8+0x77a7b09],0xf5
  41fff1:	es xor esp,edi
  41fff4:	dec    ebp
  41fff5:	mov    DWORD PTR [esi+0x3ff393f1],ecx
  41fffb:	sub    al,0x14
  41fffd:	jl     0x420069
  41ffff:	repz and DWORD PTR [ebp-0x7ba6fd46],0x64
  420007:	repnz scas al,BYTE PTR es:[edi]
  420009:	mov    al,0xa7
  42000b:	and    DWORD PTR [esi+ecx*1],edx
  42000e:	scas   al,BYTE PTR es:[edi]
  42000f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420010:	shr    bl,1
  420012:	mov    al,ch
  420014:	jbe    0x41ffa0
  420016:	xchg   esi,eax
  420017:	outs   dx,DWORD PTR ds:[esi]
  420018:	push   es
  420019:	shr    DWORD PTR ds:0xb24bd334,0xa2
  420020:	and    al,0x43
  420022:	loop   0x41ffe5
  420024:	push   cs
  420025:	dec    edx
  420026:	(bad)  
  420027:	dec    ebx
  420028:	jbe    0x420078
  42002a:	mov    al,0x1
  42002c:	pop    ecx
  42002d:	lsl    edi,WORD PTR [esi]
  420030:	std    
  420031:	push   es
  420032:	(bad)  
  420033:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420035:	ja     0x42005c
  420037:	leave  
  420038:	jmp    0xb76c:0xf80612ab
  42003f:	(bad)  
  420040:	in     eax,0x2
  420042:	push   0xf2a1053b
  420047:	popa   
  420048:	arpl   WORD PTR [ecx],bx
  42004a:	pop    edx
  42004b:	xor    esi,ebx
  42004d:	jnp    0x42004c
  42004f:	mov    ah,0x0
  420051:	repz cld 
  420053:	out    dx,al
  420054:	or     DWORD PTR [ecx],esp
  420056:	mov    ebx,0x5f07a449
  42005b:	scas   al,BYTE PTR es:[edi]
  42005c:	enter  0xc31d,0xa3
  420060:	jecxz  0x41fff6
  420062:	out    dx,eax
  420063:	sbb    eax,0x63fcd527
  420068:	xchg   esp,eax
  420069:	push   eax
  42006a:	mov    al,0x27
  42006c:	bts    DWORD PTR [ecx-0x49e94805],ebx
  420073:	lods   eax,DWORD PTR ds:[esi]
  420074:	mov    al,0x4e
  420076:	ret    
  420077:	ins    DWORD PTR es:[edi],dx
  420078:	and    eax,0x5185226d
  42007d:	or     DWORD PTR [ecx-0x2b],esp
  420080:	es int 0x1f
  420083:	dec    ebx
  420084:	pusha  
  420085:	lea    ebx,[esi+0x44]
  420088:	sbb    ecx,DWORD PTR [ebp+0x45b1fe8f]
  42008e:	xor    esi,DWORD PTR [eax+0x36ee2402]
  420094:	adc    bh,cl
  420096:	loop   0x4200f1
  420098:	add    BYTE PTR [edx-0x385293f9],dl
  42009e:	div    BYTE PTR [ecx+0x51]
  4200a1:	fdivp  st(4),st
  4200a3:	cmp    DWORD PTR gs:0x1e2cc127,esp
  4200aa:	push   ebp
  4200ab:	int    0x1c
  4200ad:	aam    0x89
  4200af:	mov    dl,0x5e
  4200b1:	nop
  4200b2:	test   eax,0x8ac1ac85
  4200b7:	icebp  
  4200b8:	jmp    FWORD PTR [edx-0x4a]
  4200bb:	xor    dh,ah
  4200bd:	cmp    eax,0xe23fb3b3
  4200c2:	ret    0x26ac
  4200c5:	push   edx
  4200c6:	xor    dh,BYTE PTR [eax-0x50]
  4200c9:	add    DWORD PTR [edx],ebp
  4200cb:	fwait
  4200cc:	stos   DWORD PTR es:[edi],eax
  4200cd:	loope  0x420088
  4200cf:	lea    ebx,[esi]
  4200d1:	repz inc edx
  4200d3:	out    0x46,eax
  4200d5:	fxch   st(1)
  4200d7:	fs pop ss
  4200d9:	iret   
  4200da:	cld    
  4200db:	jno    0x42007c
  4200dd:	add    al,0xbf
  4200df:	imul   DWORD PTR [edi+0x42]
  4200e2:	sbb    dh,BYTE PTR [eax+0x70]
  4200e5:	scas   al,BYTE PTR es:[edi]
  4200e6:	(bad)  
  4200e7:	(bad)  gs:[edi*2+0xefa64b6]
  4200ef:	dec    edx
  4200f0:	adc    ecx,DWORD PTR [esi+0x7af2c6c6]
  4200f6:	xchg   ebp,eax
  4200f7:	or     al,0x2f
  4200f9:	cmp    eax,0x5d5c7270
  4200fe:	inc    esi
  4200ff:	inc    eax
  420100:	ret    
  420101:	mov    esi,DWORD PTR [edx]
  420103:	or     ebx,edi
  420105:	cmp    ecx,DWORD PTR [eax]
  420107:	in     eax,dx
  420108:	pop    esi
  420109:	cli    
  42010a:	out    0x33,al
  42010c:	pop    ss
  42010d:	jne    0x420182
  42010f:	dec    esp
  420110:	pusha  
  420111:	(bad)  
  420112:	fadd   DWORD PTR [edx+0x7a566a24]
  420118:	adc    WORD PTR [edx-0x669b5cf7],di
  42011f:	or     al,0x43
  420121:	mov    ch,0x66
  420123:	jnp    0x4200cd
  420125:	idiv   DWORD PTR [ecx]
  420127:	add    DWORD PTR ss:[eax+eiz*8+0x47be250b],edi
  42012f:	inc    esi
  420130:	sub    eax,0xbccd32a8
  420135:	jmp    0x42018c
  420137:	mov    dl,0xe
  420139:	stc    
  42013a:	or     al,0x78
  42013c:	mov    bl,0xfe
  42013e:	outs   dx,DWORD PTR ds:[esi]
  42013f:	sbb    esp,0x82293cd4
  420145:	mov    bl,0x84
  420147:	imul   esp,DWORD PTR [ecx],0x41dab42c
  42014d:	cli    
  42014e:	mov    dh,0x21
  420150:	inc    eax
  420151:	das    
  420152:	sar    BYTE PTR [esi-0x1c],1
  420155:	pusha  
  420156:	pop    esi
  420157:	xchg   DWORD PTR [esi+0x8],edx
  42015a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42015b:	jae    0x420162
  42015d:	repz inc esp
  42015f:	dec    ebx
  420160:	dec    edx
  420161:	lods   al,BYTE PTR ds:[esi]
  420162:	hlt    
  420163:	push   cs
  420164:	xchg   ebx,eax
  420165:	xchg   ch,cl
  420167:	mov    esp,0x75cad1ff
  42016c:	cmp    DWORD PTR [ecx+0x6c4bf2e3],ebp
  420172:	dec    edi
  420173:	xor    DWORD PTR es:[eax+0x3a],edi
  420177:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420178:	nop
  420179:	ja     0x42016d
  42017b:	xlat   BYTE PTR ds:[ebx]
  42017c:	popf   
  42017d:	jmp    0x85a5:0xf9cae4f0
  420184:	test   DWORD PTR [eax+eax*4],edi
  420187:	sbb    BYTE PTR [ecx],bh
  420189:	jno    0x420151
  42018b:	jno    0x420206
  42018d:	enter  0x9192,0xa0
  420191:	lea    edi,[eax-0x66]
  420194:	mov    ah,0xe8
  420196:	ficomp DWORD PTR [edx]
  420198:	mov    ch,0x31
  42019a:	sub    al,0xfd
  42019c:	mov    al,0x6f
  42019e:	sub    ecx,DWORD PTR [esi-0x358f88fa]
  4201a4:	xchg   edi,eax
  4201a5:	out    dx,al
  4201a6:	cmp    DWORD PTR [ecx],esi
  4201a8:	mov    eax,esp
  4201aa:	and    al,0x61
  4201ac:	std    
  4201ad:	cmp    al,BYTE PTR es:[ecx]
  4201b0:	cs fcom st(4)
  4201b3:	jae    0x4201a1
  4201b5:	in     eax,0x8e
  4201b7:	leave  
  4201b8:	repnz or eax,0x8478acad
  4201be:	test   al,dl
  4201c0:	jge    0x4201e9
  4201c2:	push   ss
  4201c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201c4:	xchg   bl,bh
  4201c6:	outs   dx,DWORD PTR ds:[esi]
  4201c7:	clc    
  4201c8:	and    al,0x5d
  4201ca:	xchg   cl,ch
  4201cc:	xchg   edi,eax
  4201cd:	adc    eax,0x6d8f57f3
  4201d2:	fucomp st(3)
  4201d4:	test   BYTE PTR [ebp+0x38],bl
  4201d7:	dec    ecx
  4201d8:	loop   0x4201a2
  4201da:	adc    al,0x5f
  4201dc:	bnd ret 0xa81e
  4201e0:	test   BYTE PTR [esi+0x6683a4e0],dh
  4201e6:	xchg   ecx,eax
  4201e7:	mov    DWORD PTR es:[edi],edx
  4201ea:	jmp    0x4201fd
  4201ec:	xchg   esp,eax
  4201ed:	xchg   ebx,eax
  4201ee:	test   BYTE PTR [esi],0x55
  4201f1:	push   ebp
  4201f2:	fsubr  DWORD PTR [ebx-0x5d]
  4201f5:	sub    ah,ch
  4201f7:	call   0x3e50:0x64373a1b
  4201fe:	gs ins BYTE PTR es:[edi],dx
  420200:	aaa    
  420201:	jmp    0x3393:0x7f0cdf0d
  420208:	out    0x71,eax
  42020a:	inc    esi
  42020b:	jge    0x4201cd
  42020d:	jmp    0x18ef:0xcaad409b
  420214:	add    al,0xfe
  420216:	sbb    bh,BYTE PTR [edx-0x1efd6a45]
  42021c:	call   DWORD PTR ds:0x60442f51
  420222:	es jge 0x4201c2
  420225:	fdiv   QWORD PTR [ebx+edx*8+0xf]
  420229:	or     al,0xf4
  42022b:	mov    ebx,0xc74d562f
  420230:	cmp    al,0xbb
  420232:	das    
  420233:	and    BYTE PTR [eax],0x1b
  420236:	jmp    0xce6c089b
  42023b:	mov    edx,0x936d2baa
  420240:	xor    BYTE PTR ds:0xfcf39d58,bl
  420246:	mov    edi,0xdc017f67
  42024b:	jmp    0xed82:0x41e02971
  420252:	out    dx,eax
  420253:	loope  0x420296
  420255:	cmp    al,0x31
  420257:	arpl   WORD PTR [edx-0x4b],bp
  42025a:	add    BYTE PTR [edi+0x15ebd83c],0xf
  420261:	jae    0x4202b3
  420263:	push   edx
  420264:	jno    0x420264
  420266:	bound  ecx,QWORD PTR [esi-0x80]
  420269:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42026a:	push   edx
  42026b:	xor    ah,ah
  42026d:	dec    esi
  42026e:	push   0xe9d4e3bd
  420273:	test   eax,0x6ef22b8e
  420278:	push   esi
  420279:	dec    esi
  42027a:	cdq    
  42027b:	ror    BYTE PTR [edi-0x4c],cl
  42027e:	ret    0x7c5c
  420281:	push   esi
  420282:	lods   al,BYTE PTR ds:[esi]
  420283:	aaa    
  420284:	repnz nop
  420286:	jecxz  0x420292
  420288:	fcomp  DWORD PTR [edi+0x48891a9f]
  42028e:	mov    cr4,ecx
  420291:	(bad)  
  420292:	push   ds
  420293:	sbb    al,0x55
  420295:	add    BYTE PTR [edx-0x1c48eab4],bh
  42029b:	or     BYTE PTR [esi-0x5c13690],bl
  4202a1:	add    bl,ah
  4202a3:	jno    0x420255
  4202a5:	add    eax,0x803e59e2
  4202aa:	mov    ch,0x75
  4202ac:	xchg   ch,cl
  4202ae:	push   ebp
  4202af:	sar    DWORD PTR [ebx+0x1c],0x10
  4202b3:	mov    BYTE PTR [esi+0x7d],ah
  4202b6:	pop    ss
  4202b7:	and    eax,0x57e94512
  4202bc:	shl    dh,1
  4202be:	xchg   ebx,eax
  4202bf:	sub    BYTE PTR [ebp-0x279e1789],dl
  4202c5:	pushf  
  4202c6:	jmp    0x8707:0x7c6d1fef
  4202cd:	pop    ebp
  4202ce:	xchg   ebx,eax
  4202cf:	or     al,0xbc
  4202d1:	enter  0xca11,0x90
  4202d5:	in     al,0x5
  4202d7:	adc    edi,ebp
  4202d9:	inc    ebp
  4202da:	stos   BYTE PTR es:[edi],al
  4202db:	mov    edi,0x4e675c3d
  4202e0:	mov    esi,0x8cdde97a
  4202e5:	mov    ch,0x7a
  4202e7:	push   eax
  4202e8:	sub    ebx,edx
  4202ea:	mov    edx,DWORD PTR [edi+eax*2]
  4202ed:	add    DWORD PTR [edx+0x4a2199ab],ebp
  4202f3:	adc    DWORD PTR [esi+0x63ffff1a],esi
  4202f9:	jle    0x4202b4
  4202fb:	mov    edi,0xe194122a
  420300:	push   cs
  420301:	imul   edx,DWORD PTR [edi],0xe942e503
  420307:	mov    ah,0x10
  420309:	ss or  eax,0x3fa5ba83
  42030f:	mov    dh,0x53
  420311:	jns    0x42031f
  420313:	gs xchg edx,eax
  420315:	(bad)  
  420316:	jmp    0x420366
  420318:	jne    0x4202ec
  42031a:	pop    esi
  42031b:	cdq    
  42031c:	inc    ebx
  42031d:	jo     0x4202ae
  42031f:	out    dx,eax
  420320:	in     al,0xa2
  420322:	jns    0x4202d6
  420324:	mov    bh,0x6a
  420326:	mov    dl,0x20
  420328:	adc    ch,BYTE PTR [ecx]
  42032a:	int3   
  42032b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42032c:	ret    0x7ef5
  42032f:	in     eax,dx
  420330:	div    BYTE PTR [ebp+0x38]
  420333:	out    0x94,eax
  420335:	mov    al,ds:0xbfa2c0e5
  42033a:	loope  0x420370
  42033c:	jg     0x420377
  42033e:	lock imul edi,DWORD PTR [eax],0x518669e8
  420345:	leave  
  420346:	push   ecx
  420347:	into   
  420348:	popf   
  420349:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42034a:	out    0x30,al
  42034c:	dec    edi
  42034d:	fbld   TBYTE PTR [edx]
  42034f:	in     eax,0xe1
  420351:	ja     0x420368
  420353:	repnz push esi
  420355:	cs clc 
  420357:	adc    DWORD PTR [ebx-0x4f],ebp
  42035a:	sahf   
  42035b:	cld    
  42035c:	jb     0x420374
  42035e:	(bad)  
  42035f:	push   ss
  420360:	xchg   esp,eax
  420361:	outs   dx,BYTE PTR ds:[esi]
  420362:	mov    dl,0xe8
  420364:	mov    edx,0x546ba89f
  420369:	fistp  QWORD PTR [esi]
  42036b:	ret    0xe17b
  42036e:	adc    ebp,edx
  420370:	int    0x5a
  420372:	test   DWORD PTR [edx],ecx
  420374:	adc    esi,DWORD PTR [edx-0x5]
  420377:	dec    esi
  420378:	adc    BYTE PTR [edi],cl
  42037a:	xor    al,0x3e
  42037c:	es retf 
  42037e:	mov    dl,BYTE PTR [ebp+ebp*1-0xc]
  420382:	adc    esi,ecx
  420384:	dec    edi
  420385:	cmp    BYTE PTR [eax+0x37b56ae0],dl
  42038b:	int3   
  42038c:	push   ebx
  42038d:	(bad)  
  42038f:	ret    
  420390:	sbb    ebp,ebx
  420392:	cld    
  420393:	mov    bh,0x78
  420395:	cmp    DWORD PTR [edi+0x62],esp
  420398:	adc    BYTE PTR [eax-0x7a35ed40],cl
  42039e:	fild   DWORD PTR [eax+0x69]
  4203a1:	shr    edx,cl
  4203a3:	hlt    
  4203a4:	mov    dh,0x25
  4203a6:	addr16 adc al,0xff
  4203a9:	or     eax,0xd9b935df
  4203ae:	mov    DWORD PTR [ecx-0x50],ecx
  4203b1:	jmp    0x2cab867e
  4203b6:	ja     0x42040e
  4203b8:	loope  0x4203c0
  4203ba:	sar    DWORD PTR ds:0x9c8e2ebe,1
  4203c0:	popf   
  4203c1:	adc    al,0x9f
  4203c3:	mov    edx,0x95002b6
  4203c8:	pop    ebp
  4203c9:	sbb    BYTE PTR [ecx-0x74],0x32
  4203cd:	les    eax,FWORD PTR [edi]
  4203cf:	les    edx,FWORD PTR [edi-0xf56562f]
  4203d5:	addr16 call 0x24289788
  4203db:	push   ecx
  4203dc:	iret   
  4203dd:	scas   eax,DWORD PTR es:[edi]
  4203de:	add    al,0xe3
  4203e0:	inc    ebx
  4203e1:	mov    cl,0x99
  4203e3:	inc    esi
  4203e4:	jecxz  0x4203ae
  4203e6:	aaa    
  4203e7:	or     eax,0x7d3f2972
  4203ec:	les    edi,FWORD PTR [ebp+0x1ce04765]
  4203f2:	and    DWORD PTR [ecx],ebx
  4203f4:	loop   0x4203e7
  4203f6:	inc    esp
  4203f7:	int    0xce
  4203f9:	in     al,0x67
  4203fb:	cmp    al,0xbe
  4203fd:	es mov esi,0x79947962
  420403:	inc    esi
  420404:	add    eax,0x1f976769
  420409:	call   0xd9e2243c
  42040e:	xchg   DWORD PTR [ebx-0x23763098],ecx
  420414:	mov    ch,ah
  420416:	mov    esp,0xeb3483aa
  42041b:	xchg   BYTE PTR [edi+0x23],ch
  42041e:	push   cs
  42041f:	rcl    ebp,1
  420421:	xchg   edi,eax
  420422:	sbb    esi,ecx
  420424:	jbe    0x4203d2
  420426:	cli    
  420427:	dec    esp
  420428:	aaa    
  420429:	imul   esi,DWORD PTR [ebx+0xc],0x20
  42042d:	dec    esp
  42042e:	loopne 0x42043f
  420430:	mov    ebx,0x9968242
  420435:	fcomp  DWORD PTR [ecx-0x28b6558a]
  42043b:	xchg   ebp,eax
  42043c:	dec    eax
  42043d:	xor    dl,BYTE PTR [esi-0x20f14b7]
  420443:	shr    ch,1
  420445:	pop    ecx
  420446:	nop
  420447:	dec    edi
  420448:	adc    al,0xb2
  42044a:	pop    ds
  42044b:	mov    bl,0xb9
  42044d:	jmp    0x57f5:0x970491f9
  420454:	ret    0xd9ec
  420457:	jo     0x42045e
  420459:	stos   DWORD PTR es:[edi],eax
  42045a:	out    0x91,al
  42045c:	loop   0x42043e
  42045e:	std    
  42045f:	mov    gs,WORD PTR [edx-0x16]
  420462:	(bad)  
  420464:	pop    ecx
  420465:	test   ch,0x52
  420468:	int    0xa
  42046a:	gs add al,0xba
  42046d:	jno    0x42043c
  42046f:	popf   
  420470:	mov    ecx,0x223bc8bc
  420475:	add    ecx,eax
  420477:	stos   BYTE PTR es:[edi],al
  420478:	scas   eax,DWORD PTR es:[edi]
  420479:	out    dx,eax
  42047a:	ror    DWORD PTR [edx-0x55d5cd5c],0xfa
  420481:	bound  edi,QWORD PTR [ebp+0x753721a]
  420487:	mov    al,BYTE PTR [edx-0xca67161]
  42048d:	cmp    BYTE PTR [ecx-0x7d6b64e1],dl
  420493:	ror    BYTE PTR [edi],0xb4
  420496:	into   
  420497:	pmulhuw mm4,QWORD PTR [edi-0x43]
  42049b:	fs jne 0x420424
  42049e:	fild   DWORD PTR [ebp+0x33]
  4204a1:	mov    BYTE PTR [ecx-0x3f],ah
  4204a4:	imul   BYTE PTR [ecx]
  4204a6:	fwait
  4204a7:	adc    al,0xd
  4204a9:	aad    0x79
  4204ab:	mov    BYTE PTR [edi+0x36],dl
  4204ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4204af:	loopne 0x4204a3
  4204b1:	(bad)  
  4204b2:	retf   
  4204b3:	int    0x97
  4204b5:	mov    ds,edi
  4204b7:	lock push edx
  4204b9:	mov    ecx,0xff19af8
  4204be:	fsubp  st(2),st
  4204c0:	iret   
  4204c1:	xor    eax,0x7fef9c3
  4204c6:	push   ebx
  4204c7:	fiadd  WORD PTR [esi]
  4204c9:	call   0xf0893598
  4204ce:	jg     0x420470
  4204d0:	bound  edx,QWORD PTR [edi+0x37]
  4204d3:	lahf   
  4204d4:	popf   
  4204d5:	ficomp WORD PTR [edx-0x330b76ac]
  4204db:	addr16 leave 
  4204dd:	aad    0x96
  4204df:	sbb    BYTE PTR [edx],dl
  4204e1:	or     ebx,eax
  4204e3:	inc    edi
  4204e4:	bound  edx,QWORD PTR [ebx+0x62]
  4204e7:	sub    dl,BYTE PTR [esi]
  4204e9:	stos   BYTE PTR es:[edi],al
  4204ea:	fiadd  DWORD PTR [edi-0x47]
  4204ed:	mov    dh,0xbb
  4204ef:	mov    WORD PTR [ebx-0x4719ab0c],?
  4204f5:	or     eax,0x8999c01
  4204fa:	sbb    BYTE PTR [ebp-0x785de80b],ch
  420500:	dec    eax
  420501:	push   eax
  420502:	add    BYTE PTR [eax+0x79],0xf9
  420506:	test   BYTE PTR [ebx-0x7d],0xf7
  42050a:	pop    ebp
  42050b:	pop    ds
  42050c:	iret   
  42050d:	pop    edi
  42050e:	pop    edi
  42050f:	mov    BYTE PTR [bp+si-0x5f13],dl
  420514:	mov    ds:0x7a692c29,eax
  420519:	rol    ebp,cl
  42051b:	ret    
  42051c:	dec    esi
  42051d:	and    DWORD PTR ds:0xcd51172e,0x37
  420524:	pop    esp
  420525:	retf   
  420526:	pop    edx
  420527:	out    0x3b,al
  420529:	mov    ecx,ecx
  42052b:	jbe    0x42053a
  42052d:	add    BYTE PTR [esi+0x0],cl
  420530:	push   eax
  420531:	mov    WORD PTR [ebx-0x2d],?
  420534:	cmp    ebp,DWORD PTR [eax]
  420536:	jno    0x4205a7
  420538:	or     al,al
  42053a:	popa   
  42053b:	cmp    DWORD PTR [ecx],ecx
  42053d:	jp     0x420524
  42053f:	jns    0x4205b0
  420541:	mov    esi,ebx
  420543:	pop    ebp
  420544:	aam    0xef
  420546:	fimul  WORD PTR [ebx]
  420548:	(bad)  
  420549:	sbb    esi,DWORD PTR [esi-0x3d]
  42054c:	jmp    0x4204e9
  42054e:	sbb    dl,ah
  420550:	mov    eax,ds:0x3e27a31d
  420555:	inc    eax
  420556:	ss and eax,0x742f73fc
  42055c:	shr    DWORD PTR [edx],cl
  42055e:	cs pop eax
  420560:	dec    si
  420562:	xchg   DWORD PTR [ebp+0x26],ebx
  420565:	inc    ebp
  420566:	repz pop ss
  420568:	sub    eax,0x6b763b33
  42056d:	fs pop ss
  42056f:	test   BYTE PTR [edx-0x23d61d8b],0xde
  420576:	mov    al,0xc3
  420578:	mov    WORD PTR [ebp-0x5f],ds
  42057b:	adc    BYTE PTR [ecx],0xd4
  42057e:	push   ebx
  42057f:	dec    esp
  420580:	lds    edx,FWORD PTR [edi+0x79]
  420583:	cmp    al,0x87
  420585:	jne    0x4205cf
  420587:	cmp    dh,al
  420589:	mov    cl,0x1
  42058b:	popa   
  42058c:	sub    cl,BYTE PTR [edx+0xa]
  42058f:	bt     DWORD PTR [edi],edi
  420592:	sbb    eax,0xd0b5bc9f
  420597:	sbb    eax,0xdff994d7
  42059c:	and    eax,0x5fd6407
  4205a1:	sbb    al,0x24
  4205a3:	xor    DWORD PTR [ecx-0x6c],esp
  4205a6:	inc    edi
  4205a7:	dec    ecx
  4205a8:	sub    al,0xd5
  4205aa:	mov    ch,cl
  4205ac:	xor    al,0xea
  4205ae:	arpl   dx,si
  4205b0:	cs js  0x420594
  4205b3:	add    DWORD PTR [esi-0x70],edx
  4205b6:	push   0xffffffe9
  4205b8:	out    dx,eax
  4205b9:	xchg   edx,eax
  4205ba:	jmp    0x4b1a:0x2f77fd59
  4205c1:	sbb    eax,0xa2c05054
  4205c6:	push   esp
  4205c7:	jns    0x42061b
  4205c9:	outs   dx,BYTE PTR ds:[esi]
  4205ca:	fucom  st(6)
  4205cc:	dec    BYTE PTR ds:0x3323e50f
  4205d2:	pushf  
  4205d3:	sahf   
  4205d4:	jmp    0x54609802
  4205d9:	imul   esp,DWORD PTR [ebp+0x6e895f8f],0x272a8b89
  4205e3:	or     BYTE PTR [eax+0x37],0x48
  4205e7:	inc    ebp
  4205e8:	or     eax,DWORD PTR [edx+ebp*4]
  4205eb:	cmp    ch,BYTE PTR [edi]
  4205ed:	imul   esp,esi,0xffffffae
  4205f0:	jbe    0x420602
  4205f2:	jp     0x420663
  4205f4:	cwde   
  4205f5:	dec    esi
  4205f6:	inc    esp
  4205f7:	adc    BYTE PTR [ecx],0x72
  4205fa:	adc    bl,BYTE PTR [ebx+ecx*2+0x78]
  4205fe:	lods   al,BYTE PTR ds:[esi]
  4205ff:	add    eax,0x2a748cba
  420604:	and    al,0x26
  420606:	stos   DWORD PTR es:[edi],eax
  420607:	inc    ebp
  420608:	push   edi
  420609:	jl     0x420595
  42060b:	fwait
  42060c:	(bad)  
  42060d:	stc    
  42060e:	adc    edx,edx
  420610:	inc    edx
  420611:	jnp    0x42060f
  420613:	mov    esi,0xe4b2b5f
  420619:	adc    BYTE PTR [ebp+0x22],cl
  42061c:	mov    edx,0x5000edd5
  420621:	int3   
  420622:	ror    DWORD PTR [ebx+0x4a58224],1
  420628:	xchg   esi,eax
  420629:	enter  0xbbdd,0x52
  42062d:	pusha  
  42062e:	(bad)  [ebx]
  420630:	fnstcw WORD PTR [ecx+0x52]
  420633:	pushf  
  420634:	ja     0x4205f3
  420636:	loopne 0x42061b
  420638:	dec    edx
  420639:	jae    0x4206b1
  42063b:	xor    DWORD PTR [edi],esp
  42063d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42063e:	scas   al,BYTE PTR es:[edi]
  42063f:	cmp    bl,ah
  420641:	sar    BYTE PTR [ebp+ebp*2+0x7c],1
  420645:	jnp    0x42062b
  420647:	hlt    
  420648:	scas   al,BYTE PTR es:[edi]
  420649:	fs out dx,eax
  42064b:	loop   0x4206c7
  42064d:	sub    ecx,ebp
  42064f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420650:	mov    dl,0x63
  420652:	(bad)  
  420653:	push   edi
  420654:	mov    bh,BYTE PTR [ebx-0x5ffe4630]
  42065a:	scas   ax,WORD PTR es:[edi]
  42065c:	add    eax,0xacb2e36d
  420661:	shl    DWORD PTR ds:[ecx-0x5e],0x8a
  420666:	pop    DWORD PTR [eax+edx*8]
  420669:	mov    esi,0x81ba5c8c
  42066e:	jecxz  0x4206ea
  420670:	fmul   DWORD PTR [esi+0x75]
  420673:	push   0x63
  420675:	ds push 0x4e
  420678:	dec    ecx
  420679:	shr    DWORD PTR [edx+ebp*2-0xf94127c],0x23
  420681:	dec    edx
  420682:	xor    al,0xa1
  420684:	inc    ebx
  420685:	mov    bl,0x77
  420687:	ja     0x42064c
  420689:	jbe    0x420614
  42068b:	call   0x98d6:0x81d4672e
  420692:	imul   ebp,esp,0x78ec4587
  420698:	leave  
  420699:	mov    ds:0x1537757b,al
  42069e:	xchg   edi,eax
  42069f:	pop    edi
  4206a0:	aad    0xc8
  4206a2:	sub    eax,0x7ffebcae
  4206a7:	sbb    al,0x0
  4206a9:	sub    bh,bh
  4206ab:	mov    dl,ah
  4206ad:	ret    
  4206ae:	dec    BYTE PTR [esi-0x6]
  4206b1:	je     0x42067f
  4206b3:	xchg   edi,eax
  4206b4:	add    al,0xe9
  4206b6:	jo     0x42066f
  4206b8:	pop    ebp
  4206b9:	cmp    BYTE PTR [edx+0x16],dh
  4206bc:	(bad)  
  4206bd:	sub    BYTE PTR [edx+0x49],al
  4206c0:	in     eax,dx
  4206c1:	out    0x48,al
  4206c3:	add    DWORD PTR es:[ebp+0x4f],0x451dbb8
  4206cb:	dec    esp
  4206cc:	pop    edi
  4206cd:	mov    dl,0xa2
  4206cf:	icebp  
  4206d0:	jo     0x420736
  4206d2:	or     eax,0xddb1f523
  4206d7:	stos   DWORD PTR es:[edi],eax
  4206d8:	jmp    0x8fef:0xc28c4e89
  4206df:	push   edi
  4206e0:	dec    eax
  4206e1:	(bad)  
  4206e2:	clc    
  4206e3:	ret    
  4206e4:	push   ss
  4206e5:	pop    es
  4206e6:	in     eax,dx
  4206e7:	mov    ah,0xc5
  4206e9:	mov    eax,ds:0x520d6c13
  4206ee:	mov    esi,0x2c8fb1fe
  4206f3:	and    dl,0x15
  4206f6:	test   eax,0x7c507265
  4206fb:	shl    DWORD PTR [esi+0x30],0xf2
  4206ff:	xchg   esi,ecx
  420701:	in     al,0xd1
  420703:	in     eax,0x3b
  420705:	stos   BYTE PTR es:[edi],al
  420706:	and    ch,BYTE PTR [ebx]
  420708:	jne    0x420707
  42070a:	mov    ah,0xb4
  42070c:	pop    esp
  42070d:	or     bh,bh
  42070f:	sbb    ebp,esi
  420711:	pop    ds
  420712:	call   0xd21230f0
  420717:	dec    eax
  420718:	in     eax,0x42
  42071a:	retf   
  42071b:	outs   dx,DWORD PTR ds:[esi]
  42071c:	fst    QWORD PTR [edx+eiz*8]
  42071f:	test   BYTE PTR [ebx],ah
  420721:	cmp    esi,esi
  420723:	cmp    DWORD PTR gs:[ebx],eax
  420726:	mov    ?,esp
  420728:	sub    ebx,ecx
  42072a:	mov    BYTE PTR [ebx+0x1f],bh
  42072d:	dec    ecx
  42072e:	cmp    eax,0x80c50a0f
  420733:	mov    esi,0x7184a6a2
  420738:	lea    ebx,[esi+0x1f]
  42073b:	das    
  42073c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42073d:	jecxz  0x4206ed
  42073f:	aas    
  420740:	fcmovnu st,st(7)
  420742:	sbb    BYTE PTR [ecx-0x10fff684],dl
  420748:	cmp    DWORD PTR ds:0x6d56977f,0x6b5142e
  420752:	aas    
  420753:	test   eax,0xcc3a92f9
  420758:	xchg   ecx,eax
  420759:	push   cs
  42075a:	retf   
  42075b:	les    esp,FWORD PTR [edi-0x37]
  42075e:	lea    edi,[ebx+0x36]
  420761:	pop    ds
  420762:	out    dx,eax
  420763:	es xchg edx,eax
  420765:	je     0x4207d7
  420767:	daa    
  420768:	(bad)  
  420769:	pop    ebp
  42076a:	sbb    al,BYTE PTR [ebp+0x2b]
  42076d:	push   ecx
  42076e:	fldcw  WORD PTR [ebx]
  420770:	fnsave [ecx-0x6658313e]
  420776:	lods   al,BYTE PTR ds:[esi]
  420777:	bound  esp,QWORD PTR [edx-0x7e]
  42077a:	sbb    DWORD PTR [esi-0x1d],ebp
  42077d:	cmp    al,0x73
  42077f:	mov    eax,ds:0xdd22ff24
  420784:	push   edx
  420785:	xchg   esp,eax
  420786:	cmp    edi,DWORD PTR [esi-0x130217aa]
  42078c:	mov    ecx,0x18ea85ca
  420791:	adc    al,0x3f
  420793:	push   ds
  420794:	mov    al,0xf0
  420796:	shl    BYTE PTR [ecx+edi*2],1
  420799:	ss xor bh,cl
  42079c:	cmp    esp,DWORD PTR [ebx-0x3f055b1e]
  4207a2:	loopne 0x420803
  4207a4:	or     al,0xfa
  4207a6:	xchg   BYTE PTR [edx-0x20],ch
  4207a9:	icebp  
  4207aa:	or     al,0xdc
  4207ac:	push   es
  4207ad:	mov    edi,0x46f97778
  4207b2:	jbe    0x4207a9
  4207b4:	fwait
  4207b5:	lahf   
  4207b6:	fcmovu st,st(0)
  4207b8:	push   0x15c192ed
  4207bd:	add    al,0x7c
  4207bf:	push   eax
  4207c0:	mov    ebp,DWORD PTR [edi]
  4207c2:	inc    esi
  4207c3:	dec    esi
  4207c4:	mov    ch,0xd2
  4207c6:	gs (bad) 
  4207c8:	in     eax,0xdc
  4207ca:	(bad)  
  4207cb:	mov    al,0x3f
  4207cd:	outs   dx,BYTE PTR ds:[esi]
  4207ce:	fmul   QWORD PTR [eax+0x4c]
  4207d1:	sub    al,0x7a
  4207d3:	rol    BYTE PTR [eax+0x290eaa23],0xae
  4207da:	push   ss
  4207db:	cmp    DWORD PTR [ecx+ebp*2-0x52c63e53],edi
  4207e2:	sub    eax,0x11b46dd
  4207e7:	sub    eax,DWORD PTR [esi-0x79]
  4207ea:	mov    bl,0xdf
  4207ec:	mov    edx,0x5257c240
  4207f1:	add    eax,0x33a12cd8
  4207f6:	data16 jnp 0x42083e
  4207f9:	pop    ebx
  4207fa:	stc    
  4207fb:	adc    eax,0xdf294fe2
  420800:	inc    esi
  420801:	mov    bl,BYTE PTR [edx]
  420803:	icebp  
  420804:	inc    edi
  420805:	and    eax,0xdc6ee41e
  42080a:	jbe    0x4207b9
  42080c:	cmp    DWORD PTR [ecx-0x63],0x28
  420810:	hlt    
  420811:	mov    esp,0x7855fd37
  420816:	cmp    dh,BYTE PTR [edx]
  420818:	repnz pop esi
  42081a:	mov    cl,0x9a
  42081c:	pop    es
  42081d:	dec    esp
  42081e:	push   edx
  42081f:	div    BYTE PTR [esi+0x4e]
  420822:	lds    ebp,FWORD PTR cs:[edx]
  420825:	dec    esi
  420826:	mov    cl,0x22
  420828:	repnz inc edi
  42082a:	inc    esp
  42082b:	call   0x27c6317a
  420830:	fistp  QWORD PTR [edx]
  420832:	xchg   BYTE PTR [ecx+0x5a010808],ch
  420838:	out    0x32,eax
  42083a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42083b:	scas   eax,DWORD PTR es:[edi]
  42083c:	mov    ds:0x528c91b7,al
  420841:	push   edx
  420842:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420843:	test   eax,0xe6550a0e
  420848:	imul   BYTE PTR [edi+0x3c]
  42084b:	and    BYTE PTR [edi-0x2eb6bd90],0x49
  420852:	in     eax,0x39
  420854:	jmp    0x39a0:0x93fa9f42
  42085b:	sysenter 
  42085d:	nop
  42085e:	(bad)  
  42085f:	addr16 aaa 
  420861:	fs aas 
  420863:	sub    BYTE PTR [ebx],bl
  420865:	retf   
  420866:	rol    BYTE PTR [esi],cl
  420868:	(bad)  
  420869:	sub    eax,0xe3ca9cba
  42086e:	dec    BYTE PTR [edi+ebx*1]
  420871:	inc    edi
  420872:	xchg   edx,eax
  420873:	aad    0xb4
  420875:	push   ss
  420876:	adc    DWORD PTR [ebx-0x2bb49b4b],0xbe7581e7
  420880:	mov    ds:0x39c9bfc5,al
  420885:	aad    0xa9
  420887:	sbb    dl,BYTE PTR [edx+0x3f0a72c2]
  42088d:	jnp    0x4208ab
  42088f:	fistp  DWORD PTR [edi]
  420891:	loopne 0x420838
  420893:	sti    
  420894:	inc    edi
  420895:	call   0x681d10fe
  42089a:	mov    esp,0x1289781f
  42089f:	xor    al,0x9b
  4208a1:	mov    cs,eax
  4208a3:	or     eax,0xbc7f1d05
  4208a8:	push   esi
  4208a9:	add    DWORD PTR [eax],eax
  4208ab:	sti    
  4208ac:	dec    esp
  4208ad:	mov    WORD PTR [eax+0x3c8b294f],es
  4208b3:	ins    BYTE PTR es:[edi],dx
  4208b4:	jo     0x420855
  4208b6:	jl     0x4208e9
  4208b8:	push   eax
  4208b9:	or     DWORD PTR [ecx-0x2b],esi
  4208bc:	pop    esp
  4208bd:	lods   al,BYTE PTR ds:[esi]
  4208be:	scas   al,BYTE PTR es:[edi]
  4208bf:	(bad)  
  4208c0:	jecxz  0x4208d4
  4208c2:	mov    edx,?
  4208c4:	and    BYTE PTR [edi-0x1ad89b90],bl
  4208ca:	and    eax,0xf3427029
  4208cf:	push   ss
  4208d0:	daa    
  4208d1:	das    
  4208d2:	push   ecx
  4208d3:	sub    BYTE PTR [ecx-0x74ea7f2e],dl
  4208d9:	sub    esp,ecx
  4208db:	cmp    ah,cl
  4208dd:	xor    al,0x19
  4208df:	into   
  4208e0:	pop    edi
  4208e1:	mov    ah,0x0
  4208e3:	arpl   dx,bp
  4208e5:	(bad)  
  4208e6:	jbe    0x4208fd
  4208e8:	sbb    esi,edi
  4208ea:	das    
  4208eb:	ss push cs
  4208ed:	ficomp DWORD PTR [eax]
  4208ef:	aam    0xbc
  4208f1:	mov    edx,0x2010c3e7
  4208f6:	repnz cmp BYTE PTR [edi+eiz*1-0xd],dh
  4208fb:	hlt    
  4208fc:	mov    DWORD PTR [esi+0x24b93125],ebp
  420902:	imul   ebp,DWORD PTR [edi+0x7141a543],0xffffff88
  420909:	clc    
  42090a:	scas   eax,DWORD PTR es:[edi]
  42090b:	inc    ebp
  42090c:	(bad)  
  42090d:	cmp    BYTE PTR [edx-0x2f],cl
  420910:	xor    cl,bl
  420912:	pop    ebp
  420913:	ja     0x4208d2
  420915:	bound  esi,QWORD PTR [edi+0x2e]
  420918:	pusha  
  420919:	xchg   BYTE PTR [ebp+0x45],bl
  42091c:	jg     0x42094b
  42091e:	cmp    al,0x0
  420920:	pop    ebx
  420921:	into   
  420922:	push   esi
  420923:	cmp    eax,0x9eebd9ea
  420928:	stos   DWORD PTR es:[edi],eax
  420929:	sub    BYTE PTR [edx+ebp*1+0x56],0x13
  42092e:	or     eax,0xf0119cdf
  420933:	add    DWORD PTR [edx+eiz*4+0x24b8daa],ebp
  42093a:	xchg   edi,eax
  42093b:	jmp    0x54989fca
  420940:	(bad)  
  420941:	push   ds
  420942:	test   DWORD PTR [eax+eax*8-0x15162ce6],esp
  420949:	int    0xe5
  42094b:	adc    eax,0xe357483b
  420950:	push   ebp
  420951:	cdq    
  420952:	adc    eax,0x97b429d2
  420957:	and    esi,DWORD PTR [ebx-0x73]
  42095a:	jg     0x420929
  42095c:	add    eax,0xb92db1f0
  420961:	xchg   edi,eax
  420962:	dec    esp
  420963:	addr16 hlt 
  420965:	dec    edi
  420966:	inc    esp
  420967:	and    ch,BYTE PTR [ecx]
  420969:	arpl   si,ax
  42096b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42096c:	jo     0x420917
  42096e:	cdq    
  42096f:	in     al,0x3c
  420971:	jae    0x420986
  420973:	sbb    eax,0x9725b884
  420978:	cs stc 
  42097a:	into   
  42097b:	cld    
  42097c:	fild   DWORD PTR [eax+0x323f5d92]
  420982:	dec    edx
  420983:	jecxz  0x420967
  420985:	xor    bh,BYTE PTR [edx-0x3a8c3122]
  42098b:	es jp  0x42091f
  42098e:	shl    BYTE PTR [ebp+0x1e],0xda
  420992:	mov    al,ds:0xdf672e61
  420997:	inc    eax
  420998:	rep ins BYTE PTR es:[edi],dx
  42099a:	jecxz  0x420950
  42099c:	shl    DWORD PTR [edx+esi*2-0x2460b2e2],0xdd
  4209a4:	add    al,0xfb
  4209a6:	shl    BYTE PTR ds:0xfdf8bd42,1
  4209ac:	sbb    al,0xd9
  4209ae:	int    0x41
  4209b0:	add    BYTE PTR [edi-0x41],cl
  4209b3:	dec    edx
  4209b4:	dec    ecx
  4209b5:	mov    esp,0xb8d6788d
  4209ba:	sti    
  4209bb:	sub    al,0xf8
  4209bd:	xchg   DWORD PTR [ebp+0x1],ebx
  4209c0:	iret   
  4209c1:	popa   
  4209c2:	jp     0x420996
  4209c4:	in     eax,dx
  4209c5:	aam    0x91
  4209c7:	mov    ch,0xab
  4209c9:	or     esp,DWORD PTR ds:0x751d6995
  4209cf:	sbb    ecx,DWORD PTR [edi-0x4c]
  4209d2:	jo     0x420a4a
  4209d4:	sahf   
  4209d5:	pop    esi
  4209d6:	add    bl,dh
  4209d8:	jne    0x420994
  4209da:	jnp    0x420a42
  4209dc:	seta   ch
  4209df:	pop    es
  4209e0:	icebp  
  4209e1:	retf   0x1feb
  4209e4:	pop    es
  4209e5:	pop    ebp
  4209e6:	lea    edx,[edx-0x7c113ed4]
  4209ec:	iret   
  4209ed:	cmp    al,0xc5
  4209ef:	xor    DWORD PTR [eax-0x6e],ecx
  4209f2:	pop    esp
  4209f3:	and    BYTE PTR [edi+0x42b43791],0x12
  4209fa:	aaa    
  4209fb:	(bad)  
  4209fc:	iret   
  4209fd:	fwait
  4209fe:	mov    ebx,0x6bccf673
  420a04:	out    dx,al
  420a05:	push   ecx
  420a06:	push   es
  420a07:	jbe    0x42099b
  420a09:	or     ebp,DWORD PTR [ebp+0x25]
  420a0c:	xor    al,0x5c
  420a0e:	cmp    ebp,edi
  420a10:	or     BYTE PTR [esi],al
  420a12:	div    dh
  420a14:	adc    eax,0xf0dbebb0
  420a19:	xchg   ebx,eax
  420a1a:	push   edx
  420a1b:	inc    eax
  420a1c:	jge    0x420a8a
  420a1e:	cmp    DWORD PTR [ebx],0x4eacc6f3
  420a24:	adc    al,0xfc
  420a26:	adc    ch,BYTE PTR [eax+0x3753b8a7]
  420a2c:	mov    edi,0xa256c7a4
  420a31:	(bad)  
  420a32:	or     DWORD PTR [edi-0x2db64f28],eax
  420a38:	into   
  420a39:	ret    0xe18
  420a3c:	stos   DWORD PTR es:[edi],eax
  420a3d:	mov    bl,0x63
  420a3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a40:	(bad)  
  420a41:	sbb    al,0x35
  420a43:	jnp    0x420a0f
  420a45:	cld    
  420a46:	cdq    
  420a47:	mov    dl,0x1a
  420a49:	mov    al,ds:0x7c51236f
  420a4e:	add    dl,bl
  420a50:	in     al,0xeb
  420a52:	sbb    BYTE PTR ds:0x75830a7b,ch
  420a58:	xchg   esp,eax
  420a59:	mov    eax,ds:0xf1810371
  420a5e:	xchg   edi,eax
  420a5f:	mov    ebp,ds
  420a61:	rol    dl,0x2f
  420a64:	fiadd  DWORD PTR [edi+0x6d]
  420a67:	imul   esp,DWORD PTR [edi-0x11533d96],0x8325ee2e
  420a71:	inc    esi
  420a72:	push   ebp
  420a73:	inc    ebp
  420a74:	ja     0x420acf
  420a76:	call   0x5ea47850
  420a7b:	sbb    ah,dl
  420a7d:	nop
  420a7e:	loope  0x420a32
  420a80:	repnz xchg edi,eax
  420a82:	mov    dl,0x58
  420a84:	or     edx,ebx
  420a86:	(bad)  
  420a88:	arpl   WORD PTR [ecx+ebp*1-0x48],bx
  420a8c:	ss mov edi,edx
  420a8f:	(bad)
  420a94:	xchg   ebx,eax
  420a95:	sub    eax,0x77e9bc15
  420a9a:	sbb    esp,edi
  420a9c:	and    BYTE PTR fs:[ecx-0x21],bh
  420aa0:	xor    DWORD PTR [ecx+0x3e1c3ab4],0xffffff86
  420aa7:	imul   esp
  420aa9:	add    al,0xf
  420aab:	lds    edi,FWORD PTR [esi]
  420aad:	pop    esp
  420aae:	cmp    cl,BYTE PTR [edi]
  420ab0:	je     0x420ad0
  420ab2:	lds    edx,FWORD PTR [edi+0xcca763f]
  420ab8:	shl    BYTE PTR [ebp-0x3e378d8c],0x95
  420abf:	stos   DWORD PTR es:[edi],eax
  420ac0:	push   esp
  420ac1:	inc    ecx
  420ac2:	out    dx,eax
  420ac3:	cwde   
  420ac4:	ja     0x420a48
  420ac6:	fadd   QWORD PTR [edi+ecx*4+0x68e57485]
  420acd:	js     0x420adf
  420acf:	cli    
  420ad0:	leave  
  420ad1:	cli    
  420ad2:	mov    ds:0x757a5b80,al
  420ad7:	fisub  DWORD PTR [esi+0x1cc6b2f6]
  420add:	iret   
  420ade:	stc    
  420adf:	sub    esi,DWORD PTR [ebp+ecx*2-0x1]
  420ae3:	or     edi,DWORD PTR [edi-0x464a34db]
  420ae9:	retf   
  420aea:	mov    ebx,0x621f1e7a
  420aef:	pop    esi
  420af0:	jl     0x420ac5
  420af2:	and    DWORD PTR [ebx],eax
  420af4:	mov    bl,0x69
  420af6:	fst    QWORD PTR [ebx]
  420af8:	or     ebx,edx
  420afa:	sbb    DWORD PTR [eax],esp
  420afc:	popf   
  420afd:	cmovl  edi,esi
  420b00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b01:	adc    eax,0x1ae7c068
  420b06:	sbb    al,0x7f
  420b08:	xlat   BYTE PTR ds:[ebx]
  420b09:	hlt    
  420b0a:	arpl   WORD PTR [edi-0x56945001],cx
  420b10:	ja     0x420abc
  420b12:	jb     0x420b14
  420b14:	cwde   
  420b15:	cdq    
  420b16:	mov    dh,ah
  420b18:	in     eax,0xb5
  420b1a:	loop   0x420aae
  420b1c:	mov    dl,0x1a
  420b1e:	xchg   esi,eax
  420b1f:	pop    esi
  420b20:	push   es
  420b21:	mov    ecx,0xeba0b288
  420b26:	je     0x420b44
  420b28:	mov    DWORD PTR [edi+eiz*4],eax
  420b2b:	lods   al,BYTE PTR ds:[esi]
  420b2c:	out    dx,eax
  420b2d:	xchg   edi,eax
  420b2e:	push   edi
  420b2f:	jg     0x420b0e
  420b31:	or     BYTE PTR [esi+0x60],0x61
  420b35:	test   ebp,ebx
  420b37:	retf   
  420b38:	adc    BYTE PTR ds:0x527e27c2,0xdc
  420b3f:	loop   0x420ad8
  420b41:	out    dx,ax
  420b43:	adc    eax,0x6c6d6533
  420b48:	arpl   di,ax
  420b4a:	cmp    eax,0x8078b276
  420b4f:	push   esp
  420b50:	in     eax,dx
  420b51:	sbb    ah,BYTE PTR [esi+edx*4]
  420b54:	mov    ch,0x10
  420b56:	shl    DWORD PTR [ebp+0x6b],cl
  420b59:	mov    cl,0xf9
  420b5b:	xor    BYTE PTR [ebx+0x4557d811],ch
  420b61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b62:	mov    ch,0xc0
  420b64:	dec    ecx
  420b65:	xchg   ebx,eax
  420b66:	push   edi
  420b67:	sub    al,0x57
  420b69:	sbb    eax,0x2b4e2f66
  420b6e:	fild   WORD PTR [eax]
  420b70:	xor    eax,esp
  420b72:	push   esp
  420b73:	cmc    
  420b74:	dec    edx
  420b75:	int    0x23
  420b77:	out    0xfa,eax
  420b79:	scas   eax,DWORD PTR es:[edi]
  420b7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b7b:	sbb    dl,bh
  420b7d:	in     al,dx
  420b7e:	retf   
  420b7f:	gs push esi
  420b81:	sub    BYTE PTR [ebp-0x2e74f986],0x41
  420b88:	fsub   QWORD PTR [edx+0x2b]
  420b8b:	pmaxub mm6,QWORD PTR [eax+0x34924d07]
  420b92:	adc    ch,BYTE PTR [eax+edi*8-0x344cee3b]
  420b99:	test   eax,0x4ab9f4c
  420b9e:	pop    ds
  420b9f:	sbb    BYTE PTR [edx+0x3a],dl
  420ba2:	push   esi
  420ba3:	add    eax,0xf1953901
  420ba8:	sbb    al,0x23
  420baa:	std    
  420bab:	popa   
  420bac:	out    0xc9,al
  420bae:	mov    bl,0x7b
  420bb0:	xchg   ebp,eax
  420bb1:	sbb    bl,BYTE PTR [edx+0x6b110794]
  420bb7:	sub    DWORD PTR ss:[esi+ebx*1-0x26443793],0xffffffea
  420bc0:	fisubr WORD PTR [edx]
  420bc2:	mov    bh,0xb8
  420bc4:	addr16 adc eax,0x20ec5ca
  420bca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420bcb:	outs   dx,BYTE PTR ds:[esi]
  420bcc:	xchg   esi,eax
  420bce:	xor    DWORD PTR [edx+0x47e37f2d],ebx
  420bd4:	add    eax,DWORD PTR [ebp+0x9563bb5]
  420bda:	je     0x420bab
  420bdc:	mov    ds:0xfe58b09a,eax
  420be1:	adc    dl,BYTE PTR [edx]
  420be3:	push   ebp
  420be4:	sub    bl,BYTE PTR [esi-0x6f]
  420be7:	inc    edx
  420be8:	in     al,dx
  420be9:	sbb    BYTE PTR [edi+ebp*4],cl
  420bec:	sbb    dl,BYTE PTR [ebp+0x1ad490f]
  420bf2:	(bad)  
  420bf3:	retf   0x5b47
  420bf6:	icebp  
  420bf7:	cld    
  420bf8:	jb     0x420c4f
  420bfa:	(bad)  
  420bfb:	xor    edi,0x3e
  420bfe:	shl    edi,1
  420c00:	retf   
  420c01:	mov    eax,fs:0x84d02e31
  420c07:	push   esi
  420c08:	mov    cl,0x84
  420c0a:	mov    edi,edi
  420c0c:	ja     0x420c59
  420c0e:	push   ecx
  420c0f:	and    dh,bl
  420c11:	mov    ebp,0x1f8d1f5b
  420c16:	sub    ch,BYTE PTR [ebx]
  420c18:	xchg   BYTE PTR [esi+esi*2-0x2d61d8fb],dh
  420c1f:	hlt    
  420c20:	je     0x420c61
  420c22:	fstp   st(1)
  420c24:	ins    BYTE PTR es:[edi],dx
  420c25:	in     eax,0xfc
  420c27:	dec    edx
  420c28:	lods   eax,DWORD PTR ds:[esi]
  420c29:	ficom  WORD PTR [edx+0x73c21629]
  420c2f:	imul   ebx,DWORD PTR [esp+edi*8],0xffffffc3
  420c33:	aas    
  420c34:	out    dx,al
  420c35:	adc    edx,DWORD PTR [eax+0x7b]
  420c38:	in     al,0x42
  420c3a:	mov    esi,eax
  420c3c:	or     BYTE PTR [edx],ch
  420c3e:	cwde   
  420c3f:	outs   dx,DWORD PTR ds:[esi]
  420c40:	jg     0x420c6d
  420c42:	test   al,0xd5
  420c44:	or     al,0x36
  420c46:	stos   BYTE PTR es:[edi],al
  420c47:	inc    ebp
  420c48:	stc    
  420c49:	dec    eax
  420c4a:	repnz sub edx,eax
  420c4d:	fstp   DWORD PTR [eax]
  420c4f:	cmp    ebx,ebx
  420c51:	pop    ds
  420c52:	inc    edx
  420c53:	xchg   ecx,eax
  420c54:	and    ecx,esp
  420c56:	stos   DWORD PTR es:[edi],eax
  420c57:	sub    DWORD PTR [ebx+0x4],edi
  420c5a:	retf   0x6dd0
  420c5d:	add    dh,cl
  420c5f:	iret   
  420c60:	jnp    0x420c20
  420c62:	mov    eax,ds:0x193f8ede
  420c67:	jge    0x420c22
  420c69:	sub    dh,bh
  420c6b:	ror    BYTE PTR [esi-0xe],0x5e
  420c6f:	pop    ecx
  420c70:	fsubr  QWORD PTR [eax]
  420c72:	mov    edi,0x743e6c9d
  420c77:	pop    esp
  420c78:	gs out dx,al
  420c7a:	mov    cl,0xe4
  420c7c:	xchg   esp,eax
  420c7d:	push   es
  420c7e:	jmp    0xc818:0x8ccea406
  420c85:	cmc    
  420c86:	jmp    0x420cc6
  420c88:	xor    bl,BYTE PTR [edx-0xc]
  420c8b:	push   0xffffffe8
  420c8d:	push   0xd23ccf25
  420c92:	pop    edx
  420c93:	mov    ebp,0x72f04a34
  420c98:	mov    ds:0x747995e5,eax
  420c9d:	fldenv [edi]
  420c9f:	mov    esi,0x86cc25cd
  420ca4:	xor    esi,DWORD PTR [ecx-0xabc09e6]
  420caa:	ins    DWORD PTR es:[edi],dx
  420cab:	pop    ebp
  420cac:	out    dx,al
  420cad:	push   es
  420cae:	xchg   esi,eax
  420caf:	cli    
  420cb0:	mov    gs,WORD PTR [ebp-0x5965996d]
  420cb6:	add    BYTE PTR [ebp-0x1f],dl
  420cb9:	adc    BYTE PTR ds:0x5ee0eff9,dh
  420cbf:	(bad)  
  420cc0:	pop    ds
  420cc1:	sub    DWORD PTR [eiz*4+0xf7976e5],ebp
  420cc8:	xchg   ecx,eax
  420cc9:	rsm    
  420ccb:	xchg   esp,eax
  420ccc:	fsubr  DWORD PTR [esi]
  420cce:	sahf   
  420ccf:	mov    dh,0x13
  420cd1:	mov    ebx,0xcdf76bf5
  420cd6:	daa    
  420cd7:	mov    al,0x14
  420cd9:	inc    esp
  420cda:	or     edx,DWORD PTR [edx-0x3f]
  420cdd:	scas   al,BYTE PTR es:[edi]
  420cde:	mov    bh,al
  420ce0:	test   eax,0xe0d65db1
  420ce5:	xor    DWORD PTR [edx+eiz*1+0x2a30279],esp
  420cec:	dec    ecx
  420ced:	cli    
  420cee:	je     0x420d4e
  420cf0:	stos   DWORD PTR es:[edi],eax
  420cf1:	sbb    BYTE PTR [esp+edx*4],bl
  420cf4:	arpl   WORD PTR [esi],ax
  420cf6:	pop    esp
  420cf7:	push   edi
  420cf8:	fld    TBYTE PTR [ebx+0x8]
  420cfb:	ins    BYTE PTR es:[edi],dx
  420cfc:	mov    BYTE PTR [ebx],bh
  420cfe:	fsubr  QWORD PTR es:[ecx+0x45]
  420d02:	xor    al,0xac
  420d04:	outs   dx,BYTE PTR ds:[esi]
  420d05:	ss jl  0x420d74
  420d08:	repnz and ebp,DWORD PTR ds:0x50437ad5
  420d0f:	xor    ecx,ecx
  420d11:	jg     0x420d70
  420d13:	sbb    al,0xdc
  420d15:	mov    edx,0xa998bb18
  420d1a:	xchg   esp,eax
  420d1b:	dec    esi
  420d1c:	mov    bl,0x39
  420d1e:	push   ebp
  420d1f:	xchg   ebx,eax
  420d20:	(bad)  
  420d21:	push   0x16d1fb9a
  420d26:	lock cwde 
  420d28:	xchg   ecx,eax
  420d29:	inc    ebp
  420d2a:	xor    al,0x59
  420d2c:	pop    gs
  420d2e:	aam    0x47
  420d30:	aas    
  420d31:	inc    ebx
  420d32:	lock xlat BYTE PTR ds:[ebx]
  420d34:	lock mov ?,WORD PTR [esp+ebp*8-0x32a0eb8e]
  420d3c:	mov    cl,0xe1
  420d3e:	sub    al,0xb8
  420d40:	push   ecx
  420d41:	push   ecx
  420d42:	pusha  
  420d43:	sar    BYTE PTR [esi+0x53c326c7],0x59
  420d4a:	repz in al,dx
  420d4c:	ins    BYTE PTR es:[edi],dx
  420d4d:	ret    
  420d4e:	and    al,0xb1
  420d50:	add    ah,BYTE PTR [ecx+0x1072239d]
  420d56:	das    
  420d57:	and    bl,BYTE PTR [edx-0x29034349]
  420d5d:	and    DWORD PTR [ebx+edx*1+0x23911f85],0x1700855e
  420d68:	or     eax,DWORD PTR [ebp+ebp*4-0x80c12c1]
  420d6f:	sub    esp,ebp
  420d71:	ret    0x9c
  420d74:	mov    ah,0x73
  420d76:	sbb    DWORD PTR [edx+0x5d],edi
  420d79:	dec    ecx
  420d7a:	pop    esi
  420d7b:	pop    bx
  420d7d:	jae    0x420d5f
  420d7f:	mov    ebp,0x27712c54
  420d84:	cld    
  420d85:	inc    esi
  420d86:	(bad)  
  420d88:	pop    edx
  420d89:	push   ebp
  420d8a:	ins    BYTE PTR es:[edi],dx
  420d8b:	aad    0x29
  420d8d:	ret    
  420d8e:	rol    DWORD PTR [ebx+0x6b],cl
  420d91:	cmp    ecx,DWORD PTR [esi]
  420d93:	push   cs
  420d94:	repnz cmp DWORD PTR [ebx-0x59293a7a],eax
  420d9b:	dec    edi
  420d9c:	pop    ss
  420d9d:	mov    edi,ebp
  420d9f:	xor    bh,0x84
  420da2:	sub    DWORD PTR [edx-0x58],0x7
  420da6:	sbb    al,0xee
  420da8:	inc    eax
  420da9:	fnstcw WORD PTR [ebx]
  420dab:	cmp    ebx,DWORD PTR ds:0xc10c59f4
  420db1:	sub    DWORD PTR [ecx-0xa],esi
  420db4:	or     al,0x5f
  420db6:	xor    dh,BYTE PTR [ebx-0x7ba63689]
  420dbc:	enter  0xfb75,0x95
  420dc0:	call   0xc59f:0xe0aa05df
  420dc7:	jbe    0x420d7b
  420dc9:	xchg   ebp,eax
  420dca:	dec    eax
  420dcb:	hlt    
  420dcc:	gs scas al,BYTE PTR es:[edi]
  420dce:	popf   
  420dcf:	enter  0x95ae,0xfe
  420dd3:	xchg   ebp,eax
  420dd4:	outs   dx,DWORD PTR ds:[esi]
  420dd5:	mov    ebp,0xd5a42a3a
  420dda:	leave  
  420ddb:	imul   ecx,DWORD PTR [esi],0xffffffcb
  420dde:	dec    edi
  420ddf:	and    eax,DWORD PTR [edx]
  420de1:	std    
  420de2:	test   ebx,eax
  420de4:	stos   BYTE PTR es:[edi],al
  420de5:	jp     0x420e10
  420de7:	adc    eax,0xab6daa0c
  420dec:	fcom   QWORD PTR [ebx-0x5]
  420def:	pop    eax
  420df0:	into   
  420df1:	xchg   ecx,eax
  420df2:	pushf  
  420df3:	mov    edx,ecx
  420df5:	add    DWORD PTR ds:[ecx+0x60],eax
  420df9:	jl     0x420e11
  420dfb:	js     0x420db3
  420dfd:	dec    ebx
  420dfe:	pop    ebp
  420dff:	push   es
  420e00:	nop
  420e01:	mov    eax,ds:0x31a31fc
  420e06:	mov    ch,0x4d
  420e08:	adc    cl,bl
  420e0a:	iret   
  420e0b:	jl     0x420e37
  420e0d:	sbb    al,0x5f
  420e0f:	in     al,dx
  420e10:	and    DWORD PTR [eax],ebp
  420e12:	add    BYTE PTR [ecx],bl
  420e14:	mov    bh,0xa0
  420e16:	push   eax
  420e17:	push   esi
  420e18:	je     0x420da1
  420e1a:	sub    dh,BYTE PTR [ebx]
  420e1c:	jg     0x420e17
  420e1e:	inc    eax
  420e1f:	xchg   ebp,eax
  420e20:	pop    es
  420e21:	out    dx,eax
  420e22:	shl    BYTE PTR [ebx],cl
  420e24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e25:	(bad)  [eax-0x26]
  420e28:	aaa    
  420e29:	leave  
  420e2a:	add    al,0x1f
  420e2c:	or     BYTE PTR [ecx+0x13],ch
  420e2f:	push   eax
  420e30:	daa    
  420e31:	sahf   
  420e32:	outs   dx,DWORD PTR ds:[esi]
  420e33:	(bad)  
  420e34:	sar    al,0xaf
  420e37:	scas   eax,DWORD PTR es:[edi]
  420e38:	ins    DWORD PTR es:[edi],dx
  420e39:	jle    0x420dfe
  420e3b:	fs loop 0x420e26
  420e3e:	mov    DWORD PTR [edx+0x38],esp
  420e41:	jbe    0x420e46
  420e43:	iret   
  420e44:	sar    DWORD PTR [ebp+0x4148344],1
  420e4a:	xchg   edi,eax
  420e4b:	pop    es
  420e4c:	jae    0x420e01
  420e4e:	mov    ebp,0xde8d25b3
  420e53:	jp     0x420e8e
  420e55:	and    eax,0xe0bc2952
  420e5a:	pop    ebp
  420e5b:	jnp    0x420e31
  420e5d:	ja     0x420e91
  420e5f:	mov    dh,0xf3
  420e61:	lea    edi,[ecx+0x117d5bc7]
  420e67:	sub    esp,DWORD PTR [ecx+0x5fc4417e]
  420e6d:	shl    ah,1
  420e6f:	int3   
  420e70:	test   eax,0x613e5f75
  420e75:	sbb    eax,ecx
  420e77:	or     dl,BYTE PTR [edx]
  420e79:	xchg   ebp,eax
  420e7a:	push   ebp
  420e7b:	shl    DWORD PTR [ebx+0x3c],cl
  420e7e:	je     0x420ecb
  420e80:	stos   BYTE PTR es:[edi],al
  420e81:	shl    DWORD PTR [edx-0xb2cfc75],1
  420e87:	and    DWORD PTR [edi],ecx
  420e89:	mov    edx,0x8e45423e
  420e8e:	jbe    0x420e4d
  420e90:	xor    al,0x11
  420e92:	repnz nop
  420e94:	cmp    ah,bl
  420e96:	inc    ecx
  420e97:	jae    0x420ef1
  420e99:	sub    BYTE PTR [edx+0x40],0xa5
  420e9d:	pop    eax
  420e9e:	mov    esp,0x6ef3fea1
  420ea3:	in     al,dx
  420ea4:	sahf   
  420ea5:	in     eax,dx
  420ea6:	jne    0x420e4a
  420ea8:	cmc    
  420ea9:	sub    eax,edx
  420eab:	xchg   ebp,eax
  420eac:	mov    ebp,0x55211f4c
  420eb1:	fdiv   QWORD PTR [eax]
  420eb3:	repz xor DWORD PTR [esi+0x10],ebx
  420eb7:	jbe    0x420ea3
  420eb9:	pop    esp
  420eba:	or     eax,0x547b0c6c
  420ebf:	add    al,0x62
  420ec1:	fiadd  WORD PTR [edx+0x22]
  420ec4:	imul   ecx,DWORD PTR [esi+0x66045cb3],0xffffffbf
  420ecb:	mov    ah,0x67
  420ecd:	add    eax,0x9e16fa21
  420ed2:	repz adc ebx,ebx
  420ed5:	dec    ebx
  420ed6:	jns    0x420ece
  420ed8:	mov    DWORD PTR [eax-0x3d6cc5fa],eax
  420ede:	sti    
  420edf:	mov    esp,0xfe686440
  420ee4:	sbb    DWORD PTR [ebx],edx
  420ee6:	shr    DWORD PTR [ebx+eax*2],cl
  420ee9:	(bad)  
  420eea:	int    0x11
  420eec:	sahf   
  420eed:	pop    ss
  420eee:	daa    
  420eef:	sub    bl,BYTE PTR [edi+0x12]
  420ef2:	xchg   ebx,eax
  420ef3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ef4:	(bad)  
  420ef5:	cli    
  420ef6:	mov    ebx,0x72060f28
  420efb:	pmaxsw mm0,mm7
  420efe:	or     BYTE PTR [edx],cl
  420f00:	iret   
  420f01:	inc    esi
  420f02:	scas   al,BYTE PTR es:[edi]
  420f03:	sub    al,0x62
  420f05:	inc    ebx
  420f06:	dec    ebp
  420f07:	add    cl,ah
  420f09:	sbb    al,0x39
  420f0b:	imul   ebp,esi,0xffffffd9
  420f0e:	cmp    dl,bl
  420f10:	daa    
  420f11:	adc    eax,0xc393755
  420f16:	std    
  420f17:	in     al,dx
  420f18:	and    bh,BYTE PTR [edi+edi*2+0x5f]
  420f1c:	retf   
  420f1d:	jge    0x420f86
  420f1f:	fxch   st(7)
  420f21:	loop   0x420ef5
  420f23:	addr16 sub al,0x47
  420f26:	mov    al,0xd0
  420f28:	inc    edx
  420f29:	add    al,0x8b
  420f2b:	mov    esi,0x9e3edd75
  420f30:	push   ss
  420f31:	push   eax
  420f32:	arpl   WORD PTR ds:0x74d27e26,bx
  420f38:	mov    DWORD PTR ds:0x71963920,esi
  420f3e:	popa   
  420f3f:	pop    edx
  420f40:	push   esi
  420f41:	test   BYTE PTR [edi+0x22],bh
  420f44:	pop    es
  420f45:	jne    0x420f5d
  420f47:	icebp  
  420f48:	sbb    cl,BYTE PTR [edi-0x64eafd91]
  420f4e:	jecxz  0x420f05
  420f50:	or     bl,al
  420f52:	enter  0x7f78,0x54
  420f56:	mov    BYTE PTR [edx+0x46],ah
  420f59:	push   ecx
  420f5a:	dec    ecx
  420f5b:	dec    esp
  420f5c:	aad    0xc9
  420f5e:	pop    ecx
  420f5f:	test   al,0x35
  420f61:	pop    ss
  420f62:	dec    edx
  420f63:	ret    
  420f64:	xchg   DWORD PTR ds:0x34a11adc,esp
  420f6a:	adc    edx,DWORD PTR [ebx+ebx*8]
  420f6d:	adc    dl,BYTE PTR [ecx-0x7a7447b2]
  420f73:	call   0xbe03:0xe8d6f8aa
  420f7a:	mov    ds:0xb04598d9,al
  420f7f:	aad    0xee
  420f81:	mov    ah,BYTE PTR [ebx]
  420f83:	jge    0x420f54
  420f85:	pop    esi
  420f86:	mov    ds:0xd6c548db,eax
  420f8b:	and    dl,dl
  420f8d:	test   DWORD PTR [edi+0x2b],eax
  420f90:	out    dx,eax
  420f91:	cli    
  420f92:	and    ebx,DWORD PTR [eax+0x13]
  420f95:	mov    DWORD PTR [ebx-0x4e5d4425],0x55824e5c
  420f9f:	in     al,dx
  420fa0:	(bad)  
  420fa2:	mov    ebp,0x97c8d32a
  420fa7:	jg     0x420f2e
  420fa9:	mov    BYTE PTR [edi-0x1c],ch
  420fac:	add    edi,DWORD PTR [eax+0x7e]
  420faf:	mov    WORD PTR [eax+0x74],ss
  420fb2:	repnz mov ah,0x56
  420fb5:	jno    0x420fe7
  420fb7:	xchg   ebp,esi
  420fb9:	ins    BYTE PTR es:[edi],dx
  420fba:	mov    esi,0x5d82e2a8
  420fbf:	(bad)  
  420fc0:	rcr    BYTE PTR ds:0xbb73f501,1
  420fc6:	mov    ebp,0x792d0542
  420fcb:	cmp    WORD PTR [esi+0x4b4060bc],cx
  420fd2:	in     al,0x3d
  420fd4:	dec    edx
  420fd5:	mov    bh,0x3
  420fd7:	or     ecx,DWORD PTR [ebx]
  420fd9:	adc    al,0x83
  420fdb:	call   0xb2ef:0x9dadd094
  420fe2:	xlat   BYTE PTR ds:[ebx]
  420fe3:	adc    eax,0xf3bde0f4
  420fe8:	div    edi
  420fea:	mov    ch,0xbb
  420fec:	in     eax,0x85
  420fee:	aas    
  420fef:	cmp    eax,0x76b719bf
  420ff4:	sub    bl,BYTE PTR [ebp+0x4b91de42]
  420ffa:	dec    edi
  420ffb:	imul   edi,DWORD PTR [edi],0x8511307
  421001:	fisub  WORD PTR [esi+0x6b0f6314]
  421007:	sar    cl,1
  421009:	daa    
  42100a:	add    al,0xf7
  42100c:	iret   
  42100d:	stos   BYTE PTR es:[edi],al
  42100e:	dec    esp
  42100f:	push   ecx
  421010:	enter  0xf8d8,0x6e
  421014:	and    BYTE PTR [ebx],cl
  421016:	sub    dl,BYTE PTR [ebx+ebp*8+0x38]
  42101a:	into   
  42101b:	mov    WORD PTR [ecx+0x1c],ss
  42101e:	(bad)  [ebx*4-0x422d90f4]
  421025:	inc    ecx
  421026:	or     dl,BYTE PTR [ecx]
  421028:	ror    BYTE PTR [eax],cl
  42102a:	std    
  42102b:	pminub mm5,mm1
  42102e:	pop    es
  42102f:	sub    al,0xe9
  421031:	repnz mov ebx,0x8cad6065
  421037:	sub    al,0xfd
  421039:	jnp    0x421085
  42103b:	les    esp,FWORD PTR [eax]
  42103d:	add    dh,dl
  42103f:	jmp    0xf098:0xdec5a2e1
  421046:	cmc    
  421047:	mov    ds:0xc3e1cd23,eax
  42104c:	lea    ebp,[edx]
  42104e:	push   di
  421050:	dec    edx
  421051:	jns    0x4210a5
  421053:	mov    ds:0xfef372ba,eax
  421058:	fbstp  TBYTE PTR [edi+edi*1+0x7e]
  42105c:	inc    esi
  42105d:	nop
  42105e:	cdq    
  42105f:	xlat   BYTE PTR ds:[ebx]
  421060:	and    dl,BYTE PTR ds:0xb4bd6ac
  421066:	mov    ebp,0x5da2892b
  42106b:	push   eax
  42106c:	pop    edx
  42106d:	out    0x6a,al
  42106f:	jnp    0x420ffb
  421071:	sub    bh,BYTE PTR [esi+esi*8+0x137a1694]
  421078:	adc    BYTE PTR [edx+0x50],bl
  42107b:	and    edi,0x4f
  42107e:	int3   
  42107f:	inc    eax
  421080:	(bad)  
  421081:	xor    bl,BYTE PTR [edi+0x746a9633]
  421087:	add    BYTE PTR [esi-0x17920e6f],bl
  42108d:	fist   DWORD PTR fs:[edx+0x2bbf529b]
  421094:	adc    eax,0x4c62a8dd
  421099:	inc    eax
  42109a:	mov    dh,0xa7
  42109c:	mov    eax,es
  42109e:	out    dx,al
  42109f:	mov    ?,WORD PTR [ebx]
  4210a1:	xor    cl,al
  4210a3:	lock mov al,BYTE PTR [ecx]
  4210a6:	add    DWORD PTR [esi],eax
  4210a8:	inc    eax
  4210a9:	out    dx,al
  4210aa:	addr16 push ebx
  4210ac:	or     eax,0xd62b8a5c
  4210b1:	pop    DWORD PTR [ecx]
  4210b3:	dec    esi
  4210b4:	int3   
  4210b5:	jg     0x421054
  4210b7:	and    esi,ebx
  4210b9:	(bad)  
  4210ba:	fdiv   QWORD PTR [eax+edx*8+0x13]
  4210be:	sbb    ecx,DWORD PTR [ebx-0x6f498dfb]
  4210c4:	into   
  4210c5:	mov    edi,0x58e3f68a
  4210ca:	xor    BYTE PTR [ecx],bh
  4210cc:	stc    
  4210cd:	fiadd  WORD PTR [eax]
  4210cf:	aad    0x35
  4210d1:	mov    esp,0xbeaf6ebe
  4210d6:	clc    
  4210d7:	inc    edi
  4210d8:	es inc esi
  4210da:	lods   al,BYTE PTR ds:[esi]
  4210db:	leave  
  4210dc:	mov    bh,0xfe
  4210de:	or     DWORD PTR [eax-0x27],esi
  4210e1:	sbb    edi,edi
  4210e3:	push   DWORD PTR cs:[eax+0x405abba1]
  4210ea:	push   eax
  4210eb:	and    eax,0x437df885
  4210f0:	fcom   DWORD PTR [eax]
  4210f2:	scas   eax,DWORD PTR es:[edi]
  4210f3:	in     al,dx
  4210f4:	xchg   esp,eax
  4210f5:	inc    esp
  4210f6:	sub    dh,cl
  4210f8:	shr    DWORD PTR [edi-0x5],0x50
  4210fc:	cld    
  4210fd:	push   eax
  4210fe:	mov    cl,0xf4
  421100:	outs   dx,BYTE PTR ds:[esi]
  421101:	xor    al,BYTE PTR [ecx-0x49]
  421104:	and    eax,0xeabd22f9
  421109:	shl    DWORD PTR [edi],1
  42110b:	test   DWORD PTR [edi-0x7e],edx
  42110e:	sbb    eax,0x18f259b7
  421113:	jg     0x4210a8
  421115:	int    0xb
  421117:	mov    esi,0xeecab5bd
  42111c:	mov    bl,0x53
  42111e:	cmp    DWORD PTR [edx+0x18d74545],esp
  421124:	cdq    
  421125:	xchg   DWORD PTR [eax+0x3f],eax
  421128:	stos   BYTE PTR es:[edi],al
  421129:	push   edi
  42112a:	xor    ebx,esp
  42112c:	jmp    0x4211a7
  42112e:	daa    
  42112f:	test   al,0x23
  421131:	jp     0x42110f
  421133:	dec    ecx
  421134:	cmp    esi,DWORD PTR [edi]
  421136:	xor    al,0xe1
  421138:	xor    eax,0xd2b6d48b
  42113d:	cmp    al,0xc4
  42113f:	push   0xe0dcedd6
  421144:	adc    al,0xfa
  421147:	imul   ebp,DWORD PTR [eax+0x5aa3df9],0x5a
  42114e:	(bad)  
  42114f:	scas   al,BYTE PTR es:[edi]
  421150:	sub    BYTE PTR [ebx],al
  421152:	addr16 xor eax,0xb531b8ac
  421158:	std    
  421159:	sub    BYTE PTR [ebx+0x23],dh
  42115c:	jns    0x421171
  42115e:	stc    
  42115f:	push   ecx
  421161:	xchg   edx,eax
  421162:	and    BYTE PTR [esi-0x59],ah
  421165:	stc    
  421166:	adc    DWORD PTR [ecx],0x769f6df9
  42116c:	jmp    0x5001:0x82e26b0e
  421173:	lock sbb BYTE PTR [eax-0x1a],dl
  421177:	jp     0x4211e7
  421179:	out    dx,eax
  42117a:	or     eax,0xe252fba3
  42117f:	jp     0x4211e4
  421181:	xlat   BYTE PTR ds:[ebx]
  421182:	adc    eax,0x79d0ea70
  421187:	pop    esp
  421188:	outs   dx,DWORD PTR ds:[esi]
  421189:	or     dh,bl
  42118b:	add    DWORD PTR [eax-0x6e6e5398],edx
  421191:	inc    esp
  421192:	jo     0x4211fa
  421194:	out    0x75,eax
  421196:	cmp    eax,0x5fd921bb
  42119b:	inc    esi
  42119c:	lds    eax,FWORD PTR [ecx+0x7a00680a]
  4211a2:	inc    eax
  4211a3:	mov    dh,dh
  4211a5:	inc    eax
  4211a6:	ss mov dl,0xbe
  4211a9:	adc    eax,0x96b3aa3f
  4211ae:	sbb    BYTE PTR [esi+0x33a0f1c6],0xc7
  4211b5:	and    ebp,DWORD PTR [eax]
  4211b7:	or     eax,0xed3a0bcb
  4211bc:	sub    BYTE PTR fs:[edi-0x6fc1fbeb],al
  4211c3:	imul   eax,DWORD PTR [ecx],0x7f2ad4d3
  4211c9:	sti    
  4211ca:	inc    ecx
  4211cb:	js     0x421211
  4211cd:	in     eax,dx
  4211ce:	sub    edx,DWORD PTR [ecx+0x23]
  4211d1:	mov    edx,0x469ab1eb
  4211d6:	cdq    
  4211d7:	shl    BYTE PTR [eax],1
  4211d9:	in     al,dx
  4211da:	repnz ss sahf 
  4211dd:	add    DWORD PTR [ebx-0x70],eax
  4211e0:	loope  0x4211af
  4211e2:	add    eax,0x40447533
  4211e7:	loope  0x4211cc
  4211e9:	xchg   ebp,eax
  4211ea:	push   esi
  4211eb:	add    dl,al
  4211ed:	retf   
  4211ee:	outs   dx,DWORD PTR ds:[esi]
  4211ef:	in     al,dx
  4211f0:	idiv   BYTE PTR [ebp-0x67]
  4211f3:	fwait
  4211f4:	pop    edx
  4211f5:	out    0x53,eax
  4211f7:	sti    
  4211f8:	popa   
  4211f9:	and    DWORD PTR [edi+0x7b1bb0a8],eax
  4211ff:	add    ebp,ebp
  421201:	pop    edx
  421202:	lods   al,BYTE PTR ds:[esi]
  421203:	ror    ebx,cl
  421205:	daa    
  421206:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421207:	popa   
  421208:	pusha  
  421209:	and    ah,ah
  42120b:	xor    BYTE PTR [ebx-0x1b],ch
  42120e:	outs   dx,DWORD PTR ds:[esi]
  42120f:	cli    
  421210:	jmp    0x555a:0x201c2bb5
  421217:	mov    ah,0x4d
  421219:	addr16 jo 0x4211ad
  42121c:	adc    ebp,esp
  42121e:	mov    dl,BYTE PTR [esi+0x5a]
  421221:	pop    esi
  421222:	sub    bl,bl
  421224:	cmc    
  421225:	pop    ds
  421226:	rol    BYTE PTR [edi+0x1f50a439],0x68
  42122d:	and    eax,0xbb83c350
  421232:	bound  ebp,QWORD PTR [eax-0x41]
  421235:	retf   0xb174
  421238:	mov    dh,0xb7
  42123a:	sub    ch,0x56
  42123d:	ss adc al,0xf0
  421240:	or     ah,BYTE PTR [ebx]
  421242:	jcxz   0x42129c
  421245:	jb     0x4212c1
  421247:	jecxz  0x42128d
  421249:	es inc edx
  42124b:	mov    esp,0xea3d64c7
  421250:	and    BYTE PTR [edi],dh
  421252:	and    al,0x49
  421254:	pop    edx
  421255:	xor    DWORD PTR es:[edx+edx*8-0x42],esp
  42125a:	cmc    
  42125b:	in     eax,0x28
  42125d:	cmp    edi,ebx
  42125f:	fimul  WORD PTR [ebx]
  421261:	inc    eax
  421262:	test   al,0x0
  421264:	sbb    DWORD PTR [eax+0x324c1e8d],ecx
  42126a:	mov    fs,WORD PTR ds:0xc8eaf091
  421270:	repnz mov ecx,0xd206e726
  421276:	cmp    bh,BYTE PTR [eax]
  421278:	fwait
  421279:	inc    ebp
  42127a:	and    BYTE PTR [ebx],0x16
  42127d:	fldenv [edx+0x71b50d85]
  421283:	icebp  
  421284:	div    DWORD PTR [edi-0x31ac2d13]
  42128a:	xor    dl,BYTE PTR [edx+0x13]
  42128d:	push   ecx
  42128e:	push   ebp
  42128f:	out    dx,eax
  421290:	ja     0x421308
  421292:	pop    ss
  421293:	jnp    0x4212c1
  421295:	xchg   ebx,eax
  421296:	push   0x74f3d647
  42129b:	mov    bh,0x57
  42129d:	or     al,0x29
  42129f:	test   eax,0x35b97cff
  4212a4:	mov    ebx,0x827b2156
  4212a9:	pop    edi
  4212aa:	pop    esi
  4212ab:	rcr    BYTE PTR [edi-0x6b],0x7f
  4212af:	cld    
  4212b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212b1:	xor    BYTE PTR [ecx+0x75],dh
  4212b4:	into   
  4212b5:	repz rcr BYTE PTR [ecx+0x31277d61],0xc3
  4212bd:	add    eax,0x88cda540
  4212c2:	adc    al,0x4a
  4212c4:	imul   eax,DWORD PTR [edx+0x66fd2557],0xffffff88
  4212cb:	adc    ch,BYTE PTR [eax+0x772a674f]
  4212d1:	mov    ah,0x92
  4212d3:	dec    eax
  4212d4:	lods   eax,DWORD PTR ds:[esi]
  4212d5:	into   
  4212d6:	loopne 0x4212b7
  4212d8:	ins    DWORD PTR es:[di],dx
  4212da:	(bad)  [ebx]
  4212dc:	xor    al,0x53
  4212de:	gs jns 0x4212a0
  4212e1:	lds    eax,FWORD PTR [ecx-0x57]
  4212e4:	retf   0x490f
  4212e7:	and    esi,ebp
  4212e9:	gs retf 
  4212eb:	test   BYTE PTR [ecx],cl
  4212ed:	test   DWORD PTR [edi],eax
  4212ef:	cs inc ecx
  4212f1:	in     al,dx
  4212f2:	jp     0x421319
  4212f4:	mov    ecx,0xe1e7f044
  4212f9:	sub    cl,BYTE PTR [ecx+esi*2+0x7e]
  4212fd:	pop    ecx
  4212fe:	sub    BYTE PTR [ebx+0x64],dl
  421301:	adc    DWORD PTR [eax],esp
  421303:	bound  edx,QWORD PTR ds:0x8e4b0b2
  421309:	mov    ebx,DWORD PTR [esi+0xb]
  42130c:	leave  
  42130d:	ret    
  42130e:	clc    
  42130f:	dec    esi
  421310:	(bad)  
  421311:	ror    BYTE PTR [ebx+0x350b88fd],0x35
  421318:	pop    esp
  421319:	rcl    BYTE PTR [edi],1
  42131b:	mov    WORD PTR [esi],fs
  42131d:	xor    ecx,DWORD PTR [esi+0x26545909]
  421323:	sbb    ah,ch
  421325:	and    DWORD PTR [ebx],esi
  421327:	aam    0x35
  421329:	xlat   BYTE PTR ds:[ebx]
  42132a:	jmp    0x93ed:0x3dec6ca2
  421331:	cs mov eax,0xee88be0f
  421337:	pop    esi
  421338:	pop    ds
  421339:	push   ss
  42133a:	xchg   edi,eax
  42133b:	inc    esi
  42133c:	in     eax,0x8c
  42133e:	xor    edx,DWORD PTR [edi]
  421340:	mov    bl,0x8d
  421342:	sbb    BYTE PTR [ebx+0x69],0xbc
  421346:	push   es
  421347:	and    eax,0x1ef7cb8f
  42134c:	sti    
  42134d:	js     0x4213a6
  42134f:	lea    esp,ds:0x5487755e
  421355:	int    0x86
  421357:	(bad)  
  421358:	aaa    
  421359:	jg     0x4213cd
  42135b:	scas   al,BYTE PTR es:[edi]
  42135c:	sbb    ch,dh
  42135e:	shl    DWORD PTR [eax-0x17a6980d],1
  421364:	aam    0x4d
  421366:	mov    edi,0xf795b8f1
  42136b:	pop    edx
  42136c:	pop    eax
  42136d:	iret   
  42136e:	push   ds
  42136f:	lds    ecx,FWORD PTR ds:0xa346f62f
  421375:	pop    edx
  421376:	mov    ecx,DWORD PTR [ebp+0x4fd4997d]
  42137c:	cli    
  42137d:	aaa    
  42137e:	sbb    BYTE PTR [ecx-0x19],0x5b
  421382:	mov    edi,0x49102183
  421387:	add    bh,BYTE PTR [ecx-0x33]
  42138a:	cmc    
  42138b:	ret    0xf5f8
  42138e:	ficomp WORD PTR [ebx+0x6bcefb58]
  421394:	xchg   ecx,eax
  421395:	retf   
  421396:	loope  0x4213f5
  421398:	nop
  421399:	push   0x35002e70
  42139e:	in     al,0x3f
  4213a0:	stos   BYTE PTR es:[edi],al
  4213a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213a2:	jle    0x42141e
  4213a4:	cdq    
  4213a5:	repnz or DWORD PTR [ebx],eax
  4213a8:	cmp    al,0xe
  4213aa:	arpl   bx,cx
  4213ac:	dec    esp
  4213ad:	out    0x1c,al
  4213af:	adc    edx,ebx
  4213b1:	mov    ebp,ecx
  4213b3:	adc    al,0xc4
  4213b5:	push   edi
  4213b6:	pop    esi
  4213b7:	sub    BYTE PTR [edi-0x79],ah
  4213ba:	call   0xc30d8b90
  4213bf:	xor    bh,cl
  4213c1:	sub    al,0x44
  4213c3:	push   esi
  4213c4:	or     eax,0xd678b600
  4213c9:	adc    bl,ah
  4213cb:	inc    eax
  4213cc:	idiv   DWORD PTR [edi-0x6a]
  4213cf:	xchg   DWORD PTR [ebx],ecx
  4213d1:	loop   0x4213f7
  4213d3:	iret   
  4213d4:	pusha  
  4213d5:	xor    al,0x20
  4213d7:	je     0x4213ce
  4213d9:	retf   
  4213da:	rcl    DWORD PTR [esi],cl
  4213dc:	jecxz  0x42136a
  4213de:	mov    eax,0x489dacb2
  4213e3:	and    al,cl
  4213e5:	(bad)  
  4213e7:	xchg   ebp,edi
  4213e9:	cmp    ebx,ebx
  4213eb:	jmp    0x421388
  4213ed:	test   BYTE PTR [ebx-0x32],0xe9
  4213f1:	push   cs
  4213f2:	fmulp  st(5),st
  4213f4:	xchg   ecx,eax
  4213f5:	jns    0x42140f
  4213f7:	xchg   esi,eax
  4213f8:	mov    bh,0x30
  4213fa:	jns    0x4213b3
  4213fc:	loope  0x4213c2
  4213fe:	xchg   ecx,eax
  4213ff:	add    bl,ah
  421401:	adc    BYTE PTR [ebx],0xb3
  421404:	icebp  
  421405:	sub    BYTE PTR [ecx+0x49],bl
  421408:	pop    esi
  421409:	xchg   ebp,eax
  42140a:	jl     0x421408
  42140c:	mov    bl,0x38
  42140e:	cli    
  42140f:	jle    0x421478
  421411:	cmp    edi,DWORD PTR [eax-0x4534083f]
  421417:	je     0x421475
  421419:	inc    ebx
  42141a:	shr    DWORD PTR ds:0x5e34951c,1
  421420:	xor    BYTE PTR [ecx+0x6b7e137c],0xc
  421427:	adc    bl,cl
  421429:	gs das 
  42142b:	dec    edi
  42142c:	clc    
  42142d:	call   0x883b:0xfd95bb6b
  421434:	push   ecx
  421435:	xchg   DWORD PTR [esi],esi
  421437:	push   ss
  421438:	inc    ebx
  421439:	repz cmp eax,0x2a39db45
  42143f:	mov    ecx,0x35578b14
  421444:	mov    eax,0xa157a780
  421449:	rcl    esi,0xd2
  42144c:	fs jp  0x4213ec
  42144f:	imul   ebx,DWORD PTR [ebx+0x4cab4611],0x7fe6f710
  421459:	retf   
  42145a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42145b:	jmp    0x64738b5e
  421460:	(bad)  
  421462:	mov    ebx,0xfbdce4b7
  421467:	sbb    DWORD PTR [edx-0x6b],ebp
  42146a:	fcom   QWORD PTR [ebp+0x31bfa3cc]
  421470:	xchg   edi,eax
  421471:	cld    
  421472:	inc    edi
  421473:	sub    eax,DWORD PTR [edi+0x57]
  421476:	(bad)  
  421477:	or     cl,dl
  421479:	call   0xae909a86
  42147e:	(bad)  
  42147f:	xchg   esi,eax
  421480:	stc    
  421481:	jnp    0x421452
  421483:	and    BYTE PTR [eax+0x60167f51],ah
  421489:	inc    edi
  42148a:	add    al,dh
  42148c:	outs   dx,BYTE PTR ds:[esi]
  42148d:	pushf  
  42148e:	jmp    0x421482
  421490:	rol    BYTE PTR [ecx],1
  421492:	pop    edi
  421493:	cmp    al,0x12
  421495:	push   esi
  421496:	sbb    al,0xe6
  421498:	sbb    BYTE PTR [edx],bl
  42149a:	imul   eax,DWORD PTR [ebx-0x7a048fc1],0x25e625ff
  4214a4:	addr16 cmp eax,0x2c9b4dad
  4214aa:	xlat   BYTE PTR ds:[ebx]
  4214ab:	js     0x4214b8
  4214ad:	test   al,0xf3
  4214af:	(bad)  
  4214b0:	cmp    esi,esp
  4214b2:	jmp    0x31a0596f
  4214b7:	lods   al,BYTE PTR ds:[esi]
  4214b8:	and    ch,BYTE PTR [edi-0x68]
  4214bb:	push   eax
  4214bc:	addr16 mov al,0x39
  4214bf:	test   al,0x81
  4214c1:	mov    ah,0x5f
  4214c3:	sbb    dh,BYTE PTR ds:0x84a5e335
  4214c9:	rol    DWORD PTR [edi+0x68],0x9d
  4214cd:	in     eax,dx
  4214ce:	adc    ah,cl
  4214d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214d1:	sbb    DWORD PTR [eax],eax
  4214d3:	enter  0x6bfe,0x81
  4214d7:	jge    0x4214cf
  4214d9:	gs pop ss
  4214db:	xor    DWORD PTR [ebx+edi*4-0x63],ebp
  4214df:	cmc    
  4214e0:	(bad)  
  4214e1:	cli    
  4214e2:	enter  0xcd,0xdd
  4214e6:	inc    esp
  4214e7:	cmp    ebx,DWORD PTR [ebp+ebp*1+0x666d1346]
  4214ee:	or     BYTE PTR ss:[ebx+0x13],ch
  4214f2:	outs   dx,DWORD PTR ds:[esi]
  4214f3:	pop    ss
  4214f4:	test   BYTE PTR [ecx-0x74810cb7],dh
  4214fa:	shr    DWORD PTR [edx-0x4b82ff91],0xb6
  421501:	pushf  
  421502:	fwait
  421503:	cmp    esi,DWORD PTR [edi+ebx*4]
  421506:	test   al,0xad
  421508:	popf   
  421509:	adc    edx,ebp
  42150b:	sbb    DWORD PTR [ebx],esi
  42150d:	mov    dh,0x12
  42150f:	fst    st(1)
  421511:	sti    
  421512:	dec    esi
  421513:	adc    al,0xa7
  421515:	mov    dh,0xa3
  421517:	cli    
  421518:	cli    
  421519:	fcom   QWORD PTR [ebp-0x1d32b59d]
  42151f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421520:	inc    edx
  421521:	cmp    ah,ch
  421523:	in     al,0xe4
  421525:	push   esp
  421526:	fistp  WORD PTR [esi+0x5121e0ad]
  42152c:	pop    es
  42152d:	outs   dx,DWORD PTR ds:[esi]
  42152e:	dec    esp
  42152f:	sub    edi,DWORD PTR [edi+0x41]
  421532:	clc    
  421533:	pop    edx
  421534:	mov    ecx,0x57aa68c8
  421539:	fistp  QWORD PTR [ebp-0x6b]
  42153c:	call   0x655c02b7
  421541:	inc    esi
  421542:	call   0xc39b72a5
  421547:	nop
  421548:	nop
  421549:	nop
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x10],0x0
  421565:	mov    DWORD PTR [ebp-0x18],0x0
  42156c:	mov    DWORD PTR [ebp-0x78],0x0
  421573:	mov    DWORD PTR [ebp-0x60],0x0
  42157a:	mov    DWORD PTR [ebp-0x5c],0x0
  421581:	mov    DWORD PTR [ebp-0x74],0x0
  421588:	mov    DWORD PTR [ebp-0x64],0x0
  42158f:	mov    DWORD PTR [ebp-0x8],0x0
  421596:	mov    DWORD PTR [ebp-0x68],0x0
  42159d:	mov    DWORD PTR [ebp-0x30],0x0
  4215a4:	mov    DWORD PTR [ebp-0x70],0x0
  4215ab:	mov    DWORD PTR [ebp-0x58],0x0
  4215b2:	mov    DWORD PTR [ebp-0x54],0x0
  4215b9:	mov    DWORD PTR [ebp-0x4],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x14],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428158
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x42815c
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428160
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x428164
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x428148
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x42814c
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x428150
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x428154
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x428156
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	call   DWORD PTR ds:0x428018
  421632:	lea    eax,[ebp-0x10]
  421635:	push   eax
  421636:	lea    ecx,[ebp-0x10]
  421639:	push   ecx
  42163a:	lea    edx,[ebp-0x18]
  42163d:	push   edx
  42163e:	call   DWORD PTR ds:0x428004
  421644:	test   eax,eax
  421646:	je     0x421651
  421648:	mov    eax,DWORD PTR [ebp-0x10]
  42164b:	add    eax,0x1
  42164e:	mov    DWORD PTR [ebp-0x10],eax
  421651:	mov    DWORD PTR [ebp-0x48],0x0
  421658:	mov    DWORD PTR [ebp-0x4c],0x0
  42165f:	lea    ecx,[ebp-0x18]
  421662:	push   ecx
  421663:	call   DWORD PTR ds:0x428000
  421669:	mov    BYTE PTR [ebp-0x40],0x56
  42166d:	call   DWORD PTR ds:0x428034
  421673:	mov    DWORD PTR [ebp-0x2c],eax
  421676:	mov    BYTE PTR [ebp-0x3e],0x72
  42167a:	movzx  edx,WORD PTR [ebp-0x2c]
  42167e:	test   edx,edx
  421680:	jne    0x4216d0
  421682:	mov    BYTE PTR [ebp-0x34],0x0
  421686:	mov    DWORD PTR [ebp-0x18],0xe0d
  42168d:	lea    eax,[ebp-0x28]
  421690:	push   eax
  421691:	call   DWORD PTR ds:0x428044
  421697:	mov    DWORD PTR [ebp-0x68],eax
  42169a:	mov    DWORD PTR [ebp-0x5c],0x3a
  4216a1:	lea    ecx,[ebp-0x40]
  4216a4:	push   ecx
  4216a5:	mov    edx,DWORD PTR [ebp-0x68]
  4216a8:	push   edx
  4216a9:	call   DWORD PTR ds:0x42804c
  4216af:	mov    DWORD PTR [ebp-0x44],eax
  4216b2:	mov    DWORD PTR [ebp-0x8],0xeefd16e8
  4216b9:	mov    eax,DWORD PTR [ebp-0x68]
  4216bc:	push   eax
  4216bd:	mov    ecx,DWORD PTR [ebp-0x70]
  4216c0:	push   ecx
  4216c1:	call   DWORD PTR ds:0x428138
  4216c7:	mov    DWORD PTR [ebp-0x74],0x10e747
  4216ce:	jmp    0x4216e5
  4216d0:	mov    BYTE PTR ds:0x4476e0,0x0
  4216d7:	mov    BYTE PTR ds:0x42be60,0x0
  4216de:	mov    BYTE PTR ds:0x443920,0x0
  4216e5:	push   DWORD PTR ds:0x428044
  4216eb:	pop    edx
  4216ec:	mov    DWORD PTR [ebp-0x78],edx
  4216ef:	mov    edx,DWORD PTR [ebp-0x68]
  4216f2:	push   edx
  4216f3:	call   DWORD PTR ds:0x428048
  4216f9:	mov    eax,DWORD PTR [ebp-0x70]
  4216fc:	push   eax
  4216fd:	call   DWORD PTR ds:0x428050
  421703:	mov    DWORD PTR [ebp-0x2c],0x410000
  42170a:	push   DWORD PTR [ebp-0x30]
  42170d:	push   0x1000
  421712:	mov    eax,DWORD PTR [ebp-0x18]
  421715:	add    eax,0x23
  421718:	add    eax,0x23
  42171b:	push   eax
  42171c:	xor    eax,eax
  42171e:	push   eax
  42171f:	mov    ecx,DWORD PTR [ebp-0x44]
  421722:	call   ecx
  421724:	mov    edx,eax
  421726:	mov    DWORD PTR [ebp-0x4],edx
  421729:	mov    ecx,DWORD PTR [ebp-0x74]
  42172c:	sub    ecx,0xdae0b
  421732:	mov    DWORD PTR [ebp-0x74],ecx
  421735:	cmp    DWORD PTR [ebp-0x4],0x0
  421739:	jne    0x42174e
  42173b:	push   0xa
  42173d:	mov    edx,DWORD PTR [ebp-0x68]
  421740:	push   edx
  421741:	call   DWORD PTR ds:0x428058
  421747:	mov    BYTE PTR ds:0x443920,0x0
  42174e:	mov    eax,DWORD PTR [ebp-0x4]
  421751:	add    eax,DWORD PTR [ebp-0x18]
  421754:	mov    ecx,DWORD PTR [ebp-0x8]
  421757:	mov    DWORD PTR [eax],ecx
  421759:	mov    edx,DWORD PTR [ebp-0x4]
  42175c:	add    edx,DWORD PTR [ebp-0x5c]
  42175f:	mov    DWORD PTR [ebp-0x64],edx
  421762:	mov    eax,ds:0x42804c
  421767:	mov    DWORD PTR [ebp-0x54],eax
  42176a:	mov    ecx,DWORD PTR [ebp-0x4]
  42176d:	add    ecx,DWORD PTR [ebp-0x18]
  421770:	mov    edx,DWORD PTR [ebp+0x8]
  421773:	mov    DWORD PTR [ecx+0x4],edx
  421776:	mov    eax,DWORD PTR [ebp-0x4]
  421779:	add    eax,DWORD PTR [ebp-0x18]
  42177c:	mov    DWORD PTR [ebp-0xc],eax
  42177f:	push   0x0
  421781:	push   0x14
  421783:	push   0x14
  421785:	push   0xa
  421787:	push   0xa
  421789:	push   0x0
  42178b:	call   DWORD PTR ds:0x428010
  421791:	cmp    DWORD PTR [ebp-0x74],0x0
  421795:	jbe    0x4217b2
  421797:	mov    ecx,DWORD PTR [ebp-0xc]
  42179a:	push   ecx
  42179b:	mov    edx,DWORD PTR [ebp-0x18]
  42179e:	push   edx
  42179f:	mov    eax,DWORD PTR [ebp-0x2c]
  4217a2:	add    eax,DWORD PTR [ebp-0x74]
  4217a5:	push   eax
  4217a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4217a9:	push   ecx
  4217aa:	call   0x411000
  4217af:	add    esp,0x10
  4217b2:	cmp    DWORD PTR [ebp-0x64],0x0
  4217b6:	je     0x4217ca
  4217b8:	mov    ecx,DWORD PTR [ebp-0x54]
  4217bb:	push   ecx
  4217bc:	push   DWORD PTR [ebp-0x78]
  4217bf:	mov    esi,DWORD PTR [ebp-0x64]
  4217c2:	push   edx
  4217c3:	pop    eax
  4217c4:	push   ecx
  4217c5:	nop
  4217c6:	jmp    esi
  4217c8:	jmp    0x4217dc
  4217ca:	mov    edx,DWORD PTR [ebp+0x8]
  4217cd:	mov    DWORD PTR [ebp-0x14],edx
  4217d0:	push   0x0
  4217d2:	mov    eax,DWORD PTR [ebp-0x68]
  4217d5:	push   eax
  4217d6:	call   DWORD PTR ds:0x42800c
  4217dc:	mov    eax,0x1
  4217e1:	pop    esi
  4217e2:	mov    esp,ebp
  4217e4:	pop    ebp
  4217e5:	ret    
  4217e6:	int3   
  4217e7:	int3   
  4217e8:	int3   
  4217e9:	int3   
  4217ea:	int3   
  4217eb:	int3   
  4217ec:	int3   
  4217ed:	int3   
  4217ee:	int3   
  4217ef:	int3   
  4217f0:	push   ebp
  4217f1:	mov    ebp,esp
  4217f3:	sub    esp,0x8
  4217f6:	push   esi
  4217f7:	push   0x0
  4217f9:	push   0x0
  4217fb:	mov    DWORD PTR [ebp-0x4],0x0
  421802:	call   DWORD PTR ds:0x428138
  421808:	mov    esi,DWORD PTR ds:0x428034
  42180e:	push   0x0
  421810:	push   0x0
  421812:	push   0x0
  421814:	push   0x0
  421816:	mov    DWORD PTR [ebp-0x8],esi
  421819:	call   DWORD PTR ds:0x42802c
  42181f:	test   esi,esi
  421821:	jne    0x42182a
  421823:	push   esi
  421824:	call   DWORD PTR ds:0x428028
  42182a:	push   0x0
  42182c:	push   0x4e
  42182e:	push   0x1e
  421830:	push   0x0
  421832:	push   0xffffffff
  421834:	call   DWORD PTR ds:0x428024
  42183a:	mov    esi,DWORD PTR [ebp-0x8]
  42183d:	call   esi
  42183f:	mov    DWORD PTR [ebp-0x4],eax
  421842:	cmp    DWORD PTR [ebp-0x4],0x57
  421846:	jne    0x42185d
  421848:	push   0xee822a2
  42184d:	call   0x421550
  421852:	add    esp,0x4
  421855:	push   0x0
  421857:	call   DWORD PTR ds:0x428020
  42185d:	push   0x0
  42185f:	push   0x0
  421861:	push   0x100000
  421866:	call   DWORD PTR ds:0x42801c
  42186c:	xor    eax,eax
  42186e:	pop    esi
  42186f:	mov    esp,ebp
  421871:	pop    ebp
  421872:	ret    
  421873:	nop
  421874:	nop
  421875:	nop
  421876:	nop
  421877:	nop
  421878:	nop
  421879:	nop
  42187a:	nop
  42187b:	nop
  42187c:	nop
  42187d:	nop
  42187e:	nop
  42187f:	nop
  421880:	sub    esp,0x10
  421883:	push   0x0
  421885:	push   0x0
  421887:	push   0x0
  421889:	call   0x422a10
  42188e:	push   0x0
  421890:	call   DWORD PTR ds:0x428040
  421896:	lea    eax,[esp+0x0]
  42189a:	push   eax
  42189b:	call   DWORD PTR ds:0x42803c
  4218a1:	call   DWORD PTR ds:0x428038
  4218a7:	cmp    WORD PTR [esp+0x0],0x0
  4218ad:	je     0x4218c6
  4218af:	push   0x0
  4218b1:	call   DWORD PTR ds:0x428054
  4218b7:	push   0x0
  4218b9:	call   0x4217f0
  4218be:	add    esp,0x4
  4218c1:	jmp    0x4229f3
  4218c6:	jmp    FWORD PTR [edx+0x38]
  4218c9:	inc    DWORD PTR [edi-0x4ad3a6c7]
  4218cf:	adc    esp,DWORD PTR [ebp-0x27e95968]
  4218d5:	bound  ebp,QWORD PTR [edi+0x3f]
  4218d8:	cmp    bl,BYTE PTR [ecx+0x2c]
  4218db:	mov    ch,0x17
  4218dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218de:	cwde   
  4218df:	out    0xe9,al
  4218e1:	daa    
  4218e2:	bound  ebp,QWORD PTR [edi-0x79]
  4218e5:	cmp    bl,BYTE PTR [ecx+0x2c]
  4218e8:	mov    ch,0x17
  4218ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218eb:	cwde   
  4218ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218ed:	jmp    0x87b17b19
  4218f2:	cmp    bl,BYTE PTR [ecx+0x2c]
  4218f5:	mov    ch,0x17
  4218f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218f8:	cwde   
  4218f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218fa:	jmp    0x87b17b26
  4218ff:	cmp    bl,BYTE PTR [ecx+0x2c]
  421902:	mov    ch,0xef
  421904:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421905:	cwde   
  421906:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421907:	out    0x38,eax
  421909:	fsub   DWORD PTR [ecx-0x79]
  42190c:	mov    ss,WORD PTR [eax-0x1f]
  42190f:	xchg   esp,eax
  421910:	scas   eax,DWORD PTR es:[edi]
  421911:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421912:	aam    0x6b
  421914:	enter  0xa73,0x6
  421918:	hlt    
  421919:	sbb    ch,BYTE PTR [ecx]
  42191b:	pop    esi
  42191c:	fidiv  DWORD PTR [eax-0x29]
  42191f:	stc    
  421920:	retf   
  421921:	leave  
  421922:	inc    esp
  421923:	add    eax,DWORD PTR [ecx]
  421925:	jmp    0xd74e467f
  42192a:	jb     0x4218b1
  42192c:	jmp    0xa701:0xb0787d3
  421933:	jle    0x42194b
  421935:	jg     0x4218cc
  421937:	jp     0x421903
  421939:	cld    
  42193a:	ret    
  42193b:	(bad)  
  42193c:	sub    ch,BYTE PTR [edi+0x65]
  42193f:	mov    ds:0xb52c593a,eax
  421944:	pop    ss
  421945:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421946:	cwde   
  421947:	mov    eax,ds:0x2c3bdb70
  42194c:	jg     0x4218f6
  42194e:	push   ebx
  42194f:	outs   dx,DWORD PTR ds:[esi]
  421950:	dec    ebp
  421951:	test   DWORD PTR [edi+0x2d7b5edb],ebp
  421957:	cmp    cl,BYTE PTR [edx]
  421959:	mov    esi,DWORD PTR [eax]
  42195b:	push   es
  42195c:	aam    0x27
  42195e:	sbb    eax,0xe39efdfd
  421963:	in     eax,0x9a
  421965:	std    
  421966:	lea    esp,[edx+0x3c]
  421969:	adc    eax,0xa5d7fbf
  42196e:	lods   al,BYTE PTR ds:[esi]
  42196f:	lds    ebp,FWORD PTR [ecx-0x3d3e9aa5]
  421975:	retf   
  421976:	call   DWORD PTR es:[edi+0x11ec92b4]
  42197d:	mov    ch,0x68
  42197f:	and    eax,0x74533b07
  421984:	dec    ebp
  421985:	test   DWORD PTR [edi+0x2d7a5edb],ebp
  42198b:	dec    edx
  42198c:	xchg   esi,eax
  42198d:	adc    eax,0x35f4e630
  421992:	sbb    eax,0xe33460e8
  421997:	jg     0x4219a0
  421999:	push   edx
  42199a:	lea    esi,[edx]
  42199c:	mov    eax,ds:0xc04fbfbe
  4219a1:	nop
  4219a2:	lods   al,BYTE PTR ds:[esi]
  4219a3:	stos   DWORD PTR es:[edi],eax
  4219a4:	fcomip st,st(0)
  4219a6:	fistp  WORD PTR gs:[edi+0x56]
  4219aa:	es imul edi
  4219ad:	aaa    
  4219ae:	xchg   edx,eax
  4219af:	hlt    
  4219b0:	add    BYTE PTR [edx+ecx*1+0x2c],0x7f
  4219b5:	test   al,0x53
  4219b7:	sub    al,0xb5
  4219b9:	pop    ss
  4219ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4219bb:	cwde   
  4219bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4219bd:	jmp    0x876c4be9
  4219c2:	cmp    dl,BYTE PTR ds:0x4917b72d
  4219c8:	jnp    0x4219c3
  4219ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4219cb:	daa    
  4219cc:	bound  ebp,QWORD PTR [edi-0x79]
  4219cf:	cmp    bl,BYTE PTR [ecx+0x2c]
  4219d2:	mov    ch,0xf7
  4219d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4219d5:	fwait
  4219d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4219d7:	loop   0x4219ff
  4219d9:	push   0x5dd6876f
  4219de:	sub    al,0xb5
  4219e0:	adc    esp,DWORD PTR [ebx+0x27e9a698]
  4219e6:	bound  ebp,QWORD PTR [esi+0x3a]
  4219e9:	cmp    bl,BYTE PTR [ecx+0x2c]
  4219ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4219ed:	pop    ss
  4219ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4219ef:	cwde   
  4219f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4219f1:	in     al,dx
  4219f2:	daa    
  4219f3:	bound  ebp,QWORD PTR [edi-0x3a]
  4219f6:	cmp    bl,BYTE PTR [ecx+0x3c]
  4219f9:	mov    ch,0x17
  4219fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4219fc:	call   0x876e:0x6222e9a6
  421a03:	cmp    bl,BYTE PTR [ecx+0x2c]
  421a06:	mov    ch,0x12
  421a08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a09:	cdq    
  421a0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a0b:	jmp    0x87b17c37
  421a10:	mov    edx,0x13b52c52
  421a15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a16:	cwde   
  421a17:	sbb    ebx,eax
  421a19:	and    ah,BYTE PTR [edx+0x6d]
  421a1c:	xchg   DWORD PTR [edx],edi
  421a1e:	fldcw  WORD PTR [esi*4-0x49675af9]
  421a25:	jmp    0x97b17c51
  421a2a:	cmp    bl,BYTE PTR [ecx+0x3c]
  421a2d:	mov    ch,0x17
  421a2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a30:	cwde   
  421a31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a32:	jmp    0x87b17c6e
  421a37:	cmp    bl,BYTE PTR [ecx+0x2c]
  421a3a:	mov    ch,0x17
  421a3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a3d:	cwde   
  421a3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a3f:	ins    DWORD PTR es:[edi],dx
  421a40:	dec    ecx
  421a41:	imul   ebp,DWORD PTR [edi-0x12],0xb52c5939
  421a48:	daa    
  421a49:	scas   al,BYTE PTR es:[edi]
  421a4a:	cwde   
  421a4b:	imul   edx,esp,0x876f6227
  421a51:	cmp    bl,BYTE PTR [ecx+0x2c]
  421a54:	mov    ch,0x17
  421a56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a57:	cwde   
  421a58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a59:	jmp    0x87b17c85
  421a5e:	cmp    bl,BYTE PTR [ecx+0x2c]
  421a61:	mov    ch,0x17
  421a63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a64:	cwde   
  421a65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a66:	jmp    0x87b17c92
  421a6b:	cmp    bl,BYTE PTR [ecx+0x2c]
  421a6e:	mov    ch,0x17
  421a70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a71:	cwde   
  421a72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a73:	jmp    0x87b17c9f
  421a78:	cmp    bl,BYTE PTR [ecx+0x2c]
  421a7b:	mov    ch,0x17
  421a7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a7e:	cwde   
  421a7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a80:	jmp    0x87b17cac
  421a85:	cmp    bl,BYTE PTR [ecx+0x2c]
  421a88:	mov    ch,0x17
  421a8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a8b:	cwde   
  421a8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a8d:	jmp    0x87b17cb9
  421a92:	cmp    bl,BYTE PTR [ecx+0x2c]
  421a95:	mov    ch,0x17
  421a97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a98:	cwde   
  421a99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a9a:	jmp    0x87b17cc6
  421a9f:	cmp    bl,BYTE PTR [ecx+0x2c]
  421aa2:	mov    ch,0x17
  421aa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421aa5:	cwde   
  421aa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421aa7:	jmp    0x87b17cd3
  421aac:	cmp    bl,BYTE PTR [ecx+0x2c]
  421aaf:	mov    ch,0x17
  421ab1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ab2:	cwde   
  421ab3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ab4:	jmp    0xf3837ce0
  421ab9:	pop    edi
  421aba:	and    DWORD PTR [eax-0x4b],ebx
  421abd:	pop    ss
  421abe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421abf:	cwde   
  421ac0:	xchg   dl,ah
  421ac2:	daa    
  421ac3:	bound  edi,QWORD PTR [edi-0x79]
  421ac6:	cmp    bl,BYTE PTR [ecx+0x16]
  421ac9:	mov    cl,0x17
  421acb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421acc:	pushf  
  421acd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ace:	jmp    0xb56e424a
  421ad3:	outs   dx,BYTE PTR ds:[esi]
  421ad4:	push   ss
  421ad5:	sub    al,0xb5
  421ad7:	pop    ss
  421ad8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ad9:	cwde   
  421ada:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421adb:	leave  
  421adc:	daa    
  421add:	bound  ecx,QWORD PTR [edi+0x5e2a48a9]
  421ae3:	(bad)  
  421ae4:	pop    ss
  421ae5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ae6:	cwde   
  421ae7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ae8:	mov    ecx,0xb76f6227
  421aed:	xor    DWORD PTR [ecx+0x2c],ebx
  421af0:	in     eax,0x17
  421af2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421af3:	cwde   
  421af4:	cwde   
  421af5:	in     eax,dx
  421af6:	daa    
  421af7:	bound  ebp,QWORD PTR [edi-0x79]
  421afa:	cmp    bl,BYTE PTR [ecx+0x2c]
  421afd:	mov    ch,0x17
  421aff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b00:	cwde   
  421b01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b02:	jmp    0x67b17d0e
  421b07:	cmp    bl,BYTE PTR [ecx+0x2c]
  421b0a:	mov    ch,0x17
  421b0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b0d:	cwde   
  421b0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b0f:	jmp    0x87b17d3b
  421b14:	cmp    bl,BYTE PTR [ecx+0x2c]
  421b17:	mov    ch,0x17
  421b19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b1a:	cwde   
  421b1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b1c:	jmp    0x87b17d48
  421b21:	cmp    bl,BYTE PTR [ecx+0x2c]
  421b24:	mov    ch,0x17
  421b26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b27:	cwde   
  421b28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b29:	jmp    0x87b17d55
  421b2e:	cmp    bl,BYTE PTR [ecx+0x2c]
  421b31:	mov    ch,0x17
  421b33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b34:	cwde   
  421b35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b36:	jmp    0x87b17d62
  421b3b:	cmp    bl,BYTE PTR [ecx+0x2c]
  421b3e:	mov    ch,0x17
  421b40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b41:	cwde   
  421b42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b43:	jmp    0x87b17d6f
  421b48:	cmp    bl,BYTE PTR [ecx+0x2c]
  421b4b:	mov    ch,0x17
  421b4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b4e:	cwde   
  421b4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b50:	jmp    0x87b17d7c
  421b55:	cmp    bl,BYTE PTR [ecx+0x2c]
  421b58:	mov    ch,0x17
  421b5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b5b:	cwde   
  421b5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b5d:	jmp    0x87b17d89
  421b62:	cmp    bl,BYTE PTR [ecx+0x2c]
  421b65:	mov    ch,0x17
  421b67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b68:	cwde   
  421b69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b6a:	jmp    0x87b17d96
  421b6f:	cmp    bl,BYTE PTR [ecx+0x2c]
  421b72:	mov    ch,0x17
  421b74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b75:	cwde   
  421b76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b77:	jmp    0x87b17da3
  421b7c:	cmp    bl,BYTE PTR [ecx+0x2c]
  421b7f:	mov    ch,0x17
  421b81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b82:	cwde   
  421b83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b84:	jmp    0x87b17db0
  421b89:	cmp    bl,BYTE PTR [ecx+0x2c]
  421b8c:	mov    ch,0x17
  421b8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b8f:	cwde   
  421b90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b91:	jmp    0x87b17dbd
  421b96:	cmp    bl,BYTE PTR [ecx+0x2c]
  421b99:	mov    ch,0x17
  421b9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b9c:	cwde   
  421b9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b9e:	jmp    0x87b17dca
  421ba3:	cmp    bl,BYTE PTR [ecx+0x2c]
  421ba6:	mov    ch,0x17
  421ba8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ba9:	cwde   
  421baa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bab:	jmp    0x87b17dd7
  421bb0:	cmp    bl,BYTE PTR [ecx+0x2c]
  421bb3:	mov    ch,0x17
  421bb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421bb6:	cwde   
  421bb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bb8:	jmp    0x87b17de4
  421bbd:	cmp    bl,BYTE PTR [ecx+0x2c]
  421bc0:	mov    ch,0x17
  421bc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421bc3:	cwde   
  421bc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bc5:	jmp    0x87b17df1
  421bca:	cmp    bl,BYTE PTR [ecx+0x2c]
  421bcd:	mov    ch,0x17
  421bcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421bd0:	cwde   
  421bd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bd2:	jmp    0x87b17dfe
  421bd7:	cmp    bl,BYTE PTR [ecx+0x2c]
  421bda:	mov    ch,0x17
  421bdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421bdd:	cwde   
  421bde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bdf:	jmp    0x87b17e0b
  421be4:	cmp    bl,BYTE PTR [ecx+0x2c]
  421be7:	mov    ch,0x17
  421be9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421bea:	cwde   
  421beb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bec:	jmp    0x87b17e18
  421bf1:	cmp    bl,BYTE PTR [ecx+0x2c]
  421bf4:	mov    ch,0x17
  421bf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421bf7:	cwde   
  421bf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bf9:	jmp    0x87b17e25
  421bfe:	cmp    bl,BYTE PTR [ecx+0x2c]
  421c01:	mov    ch,0x17
  421c03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c04:	cwde   
  421c05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c06:	jmp    0x87b17e32
  421c0b:	cmp    bl,BYTE PTR [ecx+0x2c]
  421c0e:	mov    ch,0x17
  421c10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c11:	cwde   
  421c12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c13:	jmp    0x87b17e3f
  421c18:	cmp    bl,BYTE PTR [ecx+0x2c]
  421c1b:	mov    ch,0x17
  421c1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c1e:	cwde   
  421c1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c20:	jmp    0x87b17e4c
  421c25:	cmp    bl,BYTE PTR [ecx+0x2c]
  421c28:	mov    ch,0x17
  421c2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c2b:	cwde   
  421c2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c2d:	jmp    0x87b17e59
  421c32:	cmp    bl,BYTE PTR [ecx+0x2c]
  421c35:	mov    ch,0x17
  421c37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c38:	cwde   
  421c39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c3a:	jmp    0x87b17e66
  421c3f:	cmp    bl,BYTE PTR [ecx+0x2c]
  421c42:	mov    ch,0x17
  421c44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c45:	cwde   
  421c46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c47:	jmp    0x87b17e73
  421c4c:	cmp    bl,BYTE PTR [ecx+0x2c]
  421c4f:	mov    ch,0x17
  421c51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c52:	cwde   
  421c53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c54:	jmp    0x87b17e80
  421c59:	cmp    bl,BYTE PTR [ecx+0x2c]
  421c5c:	mov    ch,0x17
  421c5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c5f:	cwde   
  421c60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c61:	jmp    0x87b17e8d
  421c66:	cmp    bl,BYTE PTR [ecx+0x2c]
  421c69:	mov    ch,0x17
  421c6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c6c:	cwde   
  421c6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c6e:	jmp    0x87b17e9a
  421c73:	cmp    bl,BYTE PTR [ecx+0x2c]
  421c76:	mov    ch,0x17
  421c78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c79:	cwde   
  421c7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c7b:	jmp    0x87b17ea7
  421c80:	cmp    bl,BYTE PTR [ecx+0x2c]
  421c83:	mov    ch,0x17
  421c85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c86:	cwde   
  421c87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c88:	jmp    0x87b17eb4
  421c8d:	cmp    bl,BYTE PTR [ecx+0x2c]
  421c90:	mov    ch,0x17
  421c92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c93:	cwde   
  421c94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c95:	jmp    0x87b17ec1
  421c9a:	cmp    bl,BYTE PTR [ecx+0x2c]
  421c9d:	mov    ch,0x17
  421c9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ca0:	cwde   
  421ca1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ca2:	jmp    0x87b17ece
  421ca7:	cmp    bl,BYTE PTR [ecx+0x2c]
  421caa:	mov    ch,0x17
  421cac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421cad:	cwde   
  421cae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421caf:	jmp    0x87b17edb
  421cb4:	cmp    bl,BYTE PTR [ecx+0x2c]
  421cb7:	mov    ch,0x17
  421cb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421cba:	cwde   
  421cbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421cbc:	jmp    0x87b17ee8
  421cc1:	cmp    bl,BYTE PTR [ecx+0x2c]
  421cc4:	mov    ch,0x17
  421cc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421cc7:	fisttp WORD PTR [eax-0x1d]
  421cca:	daa    
  421ccb:	dec    ebp
  421ccc:	outs   dx,DWORD PTR ds:[esi]
  421ccd:	xchg   DWORD PTR [edx],ebp
  421ccf:	pop    ecx
  421cd0:	sub    al,0x9f
  421cd2:	mov    ch,0x7f
  421cd4:	jmp    0xfc4c3399
  421cd9:	call   0xc4b1f4b5
  421cde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421cdf:	mov    ds:0x6dd7fe30,eax
  421ce4:	jge    0x421d57
  421ce6:	fidiv  WORD PTR [eax]
  421ce8:	sub    al,0x34
  421cea:	enter  0x963f,0x63
  421cee:	mov    dh,0xc4
  421cf0:	jns    0x421d0a
  421cf2:	pop    ebx
  421cf3:	pop    esp
  421cf4:	enter  0x4e8b,0xe
  421cf8:	mov    ch,0x30
  421cfa:	add    dl,BYTE PTR [eax]
  421cfc:	repz mov eax,0xba5dcb4a
  421d02:	out    0x4d,eax
  421d04:	popf   
  421d05:	aad    0x7
  421d07:	(bad)  
  421d08:	mov    esi,0xc34e06b7
  421d0d:	add    esp,DWORD PTR [eax-0x80]
  421d10:	jne    0x421cfd
  421d12:	cmp    BYTE PTR [ebx+0x5b],al
  421d15:	scas   al,BYTE PTR es:[edi]
  421d16:	(bad)  
  421d17:	and    al,0xbe
  421d19:	pusha  
  421d1a:	iret   
  421d1b:	dec    esi
  421d1c:	ds into 
  421d1e:	push   ebp
  421d1f:	mov    cl,BYTE PTR [ebx]
  421d21:	rol    BYTE PTR [ebp-0x60fb8e9],1
  421d27:	mov    bh,0xc0
  421d29:	jo     0x421d80
  421d2b:	gs mov eax,0xab121f7b
  421d31:	mov    eax,ds:0xba9884d9
  421d36:	xor    BYTE PTR [edx+edi*2],bh
  421d39:	add    edx,esp
  421d3b:	cmp    ebx,DWORD PTR [eax-0x3a]
  421d3e:	aas    
  421d3f:	ins    BYTE PTR es:[edi],dx
  421d40:	and    DWORD PTR [ebx+0x6789d365],ecx
  421d46:	ss iret 
  421d48:	mov    ?,WORD PTR [eax]
  421d4a:	mov    ds:0x2bfcac02,al
  421d4f:	gs in  eax,dx
  421d51:	sub    ecx,DWORD PTR [edi]
  421d53:	mov    dl,0x3a
  421d55:	jbe    0x421d9f
  421d57:	xchg   DWORD PTR [ebp+edi*2-0x4629aed6],ecx
  421d5e:	xchg   ebp,eax
  421d5f:	outs   dx,DWORD PTR ds:[esi]
  421d60:	popa   
  421d61:	cld    
  421d62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d63:	jo     0x421de1
  421d65:	and    esp,ebp
  421d67:	xor    al,BYTE PTR [edx-0x5f]
  421d6a:	je     0x421d5b
  421d6c:	pop    ss
  421d6d:	enter  0x66f3,0x27
  421d71:	and    edi,DWORD PTR [ecx-0x53a2fe47]
  421d77:	mov    ebp,DWORD PTR [esi+0x42ee48c3]
  421d7d:	imul   ebp,DWORD PTR [eax],0x22
  421d80:	jge    0x421d8c
  421d82:	inc    edx
  421d83:	in     eax,dx
  421d84:	mov    ds:0x3d91f2a2,eax
  421d8a:	mov    ds:0xe42e1f38,al
  421d8f:	(bad)  
  421d90:	mov    gs,edi
  421d92:	xchg   edi,eax
  421d93:	(bad)  
  421d94:	adc    al,bh
  421d96:	jno    0x421d1e
  421d98:	add    ecx,ebx
  421d9a:	std    
  421d9b:	mov    edx,0x6b0ebbb4
  421da0:	rcl    dh,0xa7
  421da3:	retf   0x4489
  421da6:	hlt    
  421da7:	pop    esp
  421da8:	ss mov ebx,0xbc74abd5
  421dae:	mov    WORD PTR [ebp+0x32],es
  421db1:	sbb    al,0x6d
  421db3:	cmp    al,BYTE PTR [ecx+0x61ac28b9]
  421db9:	retf   0x7e8
  421dbc:	in     eax,0xd
  421dbe:	sub    bh,BYTE PTR [ebp+0x55]
  421dc1:	and    al,0x39
  421dc3:	or     al,0xd4
  421dc5:	sbb    DWORD PTR [edi-0x53],0xfb3c88fb
  421dcc:	mov    eax,0x44ed2494
  421dd1:	sub    al,0xf5
  421dd3:	sbb    al,0xf6
  421dd5:	xchg   DWORD PTR [ecx-0x1d],esi
  421dd8:	xlat   BYTE PTR ds:[ebx]
  421dd9:	add    edx,eax
  421ddb:	mov    al,0x64
  421ddd:	cdq    
  421dde:	push   es
  421ddf:	in     eax,dx
  421de0:	mov    DWORD PTR [esi],0xb2898624
  421de6:	imul   BYTE PTR [esp+ebx*1-0x566f7f04]
  421ded:	mov    bh,0x3f
  421def:	or     bh,dl
  421df1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421df2:	fs push eax
  421df4:	je     0x421e39
  421df6:	mov    cl,0x8d
  421df8:	jbe    0x421e58
  421dfa:	inc    eax
  421dfb:	xchg   ebp,eax
  421dfc:	pop    eax
  421dfd:	out    dx,al
  421dfe:	loopne 0x421dca
  421e00:	pop    esi
  421e01:	rol    dl,1
  421e03:	push   0x694cab90
  421e08:	pop    ecx
  421e09:	pop    edi
  421e0a:	idiv   ah
  421e0c:	ins    DWORD PTR es:[edi],dx
  421e0d:	push   eax
  421e0e:	sub    dh,cl
  421e10:	gs das 
  421e12:	aad    0x93
  421e14:	xor    esp,ebx
  421e16:	mov    ebx,0xe38d991b
  421e1b:	inc    esp
  421e1c:	enter  0xfaa6,0x51
  421e20:	jno    0x421dcc
  421e22:	ror    ebx,1
  421e24:	mov    cl,0x54
  421e26:	es push ecx
  421e28:	rcl    BYTE PTR [ebp-0x28eef45d],0xfa
  421e2f:	fld    QWORD PTR [ebx-0xbdfba0e]
  421e35:	popa   
  421e36:	dec    eax
  421e37:	shl    esp,1
  421e39:	imul   esi,DWORD PTR [ecx],0xffffffeb
  421e3c:	jae    0x421df6
  421e3e:	mov    esi,DWORD PTR [esi-0x6389cc97]
  421e44:	test   BYTE PTR [esi+0x18271a46],bl
  421e4a:	stos   BYTE PTR es:[edi],al
  421e4b:	dec    ecx
  421e4c:	aas    
  421e4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e4e:	lods   al,BYTE PTR ds:[esi]
  421e4f:	mov    cl,BYTE PTR [ebx]
  421e51:	add    ebp,0xffffffcd
  421e54:	pop    esi
  421e55:	fs pop edi
  421e57:	stos   BYTE PTR es:[edi],al
  421e58:	jmp    0x4b59:0x33eb4237
  421e5f:	stos   DWORD PTR es:[edi],eax
  421e60:	aad    0xae
  421e62:	out    0xf5,al
  421e64:	rcl    BYTE PTR [eax+0x5ec0686c],cl
  421e6a:	fidivr WORD PTR [edi-0x74]
  421e6d:	inc    esi
  421e6e:	xchg   esi,ecx
  421e70:	fs leave 
  421e72:	mov    edi,0x53411d93
  421e77:	xor    dl,ch
  421e79:	jl     0x421e64
  421e7b:	jecxz  0x421e8b
  421e7d:	test   eax,0xffded81d
  421e82:	mov    ch,cl
  421e84:	sar    BYTE PTR [ebp-0x14ef123f],cl
  421e8a:	ficomp DWORD PTR [edx-0x1a]
  421e8d:	jl     0x421e49
  421e8f:	sbb    BYTE PTR [ecx+0x20dc9681],bl
  421e95:	hlt    
  421e96:	test   DWORD PTR [eax],0x842e3c79
  421e9c:	inc    edx
  421e9d:	repz scas eax,DWORD PTR es:[edi]
  421e9f:	mov    edi,0xae08baed
  421ea4:	adc    BYTE PTR gs:[esi],bl
  421ea7:	mov    edx,0x59f74720
  421eac:	xchg   edi,eax
  421ead:	xor    esi,DWORD PTR ds:0xbb85d1ce
  421eb3:	add    esp,DWORD PTR [edx+0x78]
  421eb6:	repnz adc DWORD PTR [eax+ebx*2],esp
  421eba:	jb     0x421e48
  421ebc:	inc    edx
  421ebd:	into   
  421ebe:	inc    ebx
  421ebf:	mov    edx,0xb3feeb53
  421ec4:	test   DWORD PTR [edi-0x1970b26b],ebp
  421eca:	add    al,0x1f
  421ecc:	dec    esp
  421ecd:	or     ecx,0x3029ba24
  421ed3:	pop    ecx
  421ed4:	je     0x421f29
  421ed6:	xchg   edx,eax
  421ed7:	mov    dl,0xab
  421ed9:	and    BYTE PTR [ecx-0x30],dl
  421edc:	icebp  
  421edd:	add    ebp,DWORD PTR [edx]
  421edf:	mov    ebx,0xf578427c
  421ee4:	mov    edx,0x4ab66a05
  421ee9:	repnz sbb eax,0x79b3df38
  421eef:	add    al,0xde
  421ef1:	xchg   edx,eax
  421ef2:	fst    QWORD PTR ds:0xdbf4b10c
  421ef8:	mov    al,ds:0x306a2871
  421efd:	xor    BYTE PTR [ebx+ebp*2],0x4c
  421f01:	push   ecx
  421f02:	cli    
  421f03:	xchg   edi,eax
  421f04:	outs   dx,DWORD PTR ds:[esi]
  421f05:	jae    0x421f28
  421f07:	jae    0x421f19
  421f09:	jmp    0x421ea9
  421f0b:	xor    eax,0xf4b37e4
  421f10:	push   ecx
  421f11:	mov    ebp,0xde31635d
  421f16:	leave  
  421f17:	rol    DWORD PTR [ebx-0x57fe87b5],1
  421f1d:	inc    ebp
  421f1e:	and    dl,ch
  421f20:	stos   DWORD PTR es:[edi],eax
  421f21:	lahf   
  421f22:	add    ebp,edx
  421f24:	repz jbe 0x421f34
  421f27:	enter  0xc02a,0x29
  421f2b:	inc    ebp
  421f2c:	pushf  
  421f2d:	fidivr DWORD PTR [edi+edx*8-0xe3459e9]
  421f34:	or     BYTE PTR [esi],bl
  421f36:	cdq    
  421f37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f38:	fs inc eax
  421f3a:	(bad)  
  421f3b:	mov    edi,0xcf9ec91
  421f40:	fnstenv [ebx+ebp*1-0x78614dc4]
  421f47:	rcl    BYTE PTR [edx],0xfc
  421f4a:	ins    BYTE PTR es:[edi],dx
  421f4b:	(bad)  [ecx+0x10]
  421f4e:	jo     0x421f8a
  421f50:	dec    edi
  421f51:	jecxz  0x421fa1
  421f53:	in     al,0xbf
  421f55:	adc    eax,0x556e1e07
  421f5a:	pop    es
  421f5b:	test   DWORD PTR [ecx+0x125cb198],0x5a3b53b2
  421f65:	pop    ds
  421f66:	sub    BYTE PTR [ecx+0x5e9cb2a4],bh
  421f6c:	dec    eax
  421f6d:	icebp  
  421f6e:	mov    BYTE PTR [ebx+esi*4-0x29424be2],ah
  421f75:	xor    eax,eax
  421f77:	mov    esi,0x838ab2ac
  421f7c:	cdq    
  421f7d:	shr    DWORD PTR [ebx],1
  421f7f:	sub    cl,al
  421f81:	xchg   edi,eax
  421f82:	repnz rol WORD PTR [ecx+0x69ca7845],cl
  421f8a:	inc    esp
  421f8b:	jl     0x7614fe3d
  421f91:	dec    edi
  421f92:	clc    
  421f93:	xchg   esp,eax
  421f94:	ds mov esp,0xf6ad8bde
  421f9a:	adc    DWORD PTR [edi+0x24a7303e],eax
  421fa0:	jecxz  0x422006
  421fa2:	je     0x421f89
  421fa4:	(bad)  
  421fa5:	(bad)  
  421fa6:	and    ebx,edi
  421fa8:	fstp   TBYTE PTR [edx+0x5f84c898]
  421fae:	dec    edx
  421faf:	fisttp WORD PTR [edi]
  421fb1:	and    esi,DWORD PTR [edx-0x36]
  421fb4:	add    eax,0x2db079fb
  421fb9:	jbe    0x421f9c
  421fbb:	and    eax,0xa924b71b
  421fc0:	stos   DWORD PTR es:[edi],eax
  421fc1:	or     dh,BYTE PTR [esi-0x60]
  421fc4:	dec    esi
  421fc5:	(bad)  
  421fc6:	imul   eax,DWORD PTR [esi],0x62
  421fc9:	pop    esp
  421fca:	shr    BYTE PTR [eax-0x3],1
  421fcd:	xchg   esp,eax
  421fce:	lock pop edx
  421fd0:	xor    ebx,DWORD PTR [eax-0x2f33e804]
  421fd6:	sub    ah,bl
  421fd8:	mov    dl,0x85
  421fda:	sub    cl,BYTE PTR [edi-0x20]
  421fdd:	xor    eax,0x5c1ccf7
  421fe2:	mov    ch,0xa5
  421fe4:	sbb    DWORD PTR [ecx-0x30],eax
  421fe7:	aad    0x70
  421fe9:	fwait
  421fea:	sti    
  421feb:	and    ch,0xe0
  421fee:	pop    ds
  421fef:	adc    esp,DWORD PTR [eax+0x76]
  421ff2:	outs   dx,DWORD PTR ds:[esi]
  421ff3:	jmp    0x421fae
  421ff5:	push   ebp
  421ff6:	fistp  WORD PTR ds:0x80b6f9a9
  421ffc:	adc    edi,DWORD PTR [edi+0x233bf729]
  422002:	scas   eax,DWORD PTR es:[edi]
  422003:	into   
  422004:	mov    bl,0x37
  422006:	add    BYTE PTR [eax],al
  422008:	push   esi
  422009:	push   edx
  42200a:	and    edx,ecx
  42200c:	loopne 0x42207f
  42200e:	bound  edi,QWORD PTR [edi-0x35]
  422011:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422012:	mov    edx,DWORD PTR es:[edi+0x44]
  422016:	pushf  
  422017:	pop    es
  422018:	mov    eax,ds:0x6e9bd4ae
  42201d:	xor    eax,0x605eccad
  422022:	mov    ch,0x79
  422024:	in     al,dx
  422025:	aaa    
  422026:	and    bl,BYTE PTR [ecx+0x32e344ad]
  42202c:	pop    eax
  42202d:	sub    DWORD PTR [esi-0x73],esi
  422030:	xor    dh,BYTE PTR [ebp-0x726e817d]
  422036:	jno    0x422071
  422038:	imul   ebp,DWORD PTR [ebp+0x4cd6131b],0xfffffffa
  42203f:	sub    al,0x2e
  422041:	mov    cl,0x22
  422043:	(bad)  
  422045:	push   es
  422046:	imul   eax,DWORD PTR [eax+0x3c],0xffffffc7
  42204a:	adc    DWORD PTR [esi-0x32],eax
  42204d:	dec    ebp
  42204e:	into   
  42204f:	out    0x9f,eax
  422051:	jno    0x421fd9
  422053:	into   
  422054:	sbb    al,0x4d
  422057:	jnp    0x4220d3
  422059:	mov    ds:0x76d059d9,al
  42205e:	sub    bh,bh
  422060:	sbb    eax,edi
  422062:	ja     0x42205b
  422064:	imul   esi,DWORD PTR [eax],0xc6e9ef6c
  42206a:	push   cs
  42206b:	daa    
  42206c:	pop    ebp
  42206d:	pop    ss
  42206e:	inc    eax
  42206f:	cmp    eax,0x631713e8
  422074:	mov    ecx,0xf5befccb
  422079:	shl    BYTE PTR [eax-0x4c5b5ca6],0x75
  422080:	sub    eax,DWORD PTR [esi-0x28]
  422083:	retf   
  422084:	push   edx
  422085:	jne    0x42209e
  422087:	nop
  422088:	xchg   BYTE PTR [esi+esi*4],cl
  42208b:	leave  
  42208c:	jmp    0xb409:0x35caa298
  422093:	and    al,0xde
  422095:	dec    eax
  422096:	arpl   WORD PTR [edx-0x45],dx
  422099:	rcr    BYTE PTR [edx-0xe],cl
  42209c:	xchg   esp,eax
  42209d:	icebp  
  42209e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42209f:	or     al,0x1
  4220a1:	fimul  WORD PTR [esi]
  4220a3:	push   eax
  4220a4:	lock jmp FWORD PTR [edi+0x6a]
  4220a8:	leave  
  4220a9:	leave  
  4220aa:	xchg   esi,eax
  4220ab:	mov    DWORD PTR [edi-0x1],ebx
  4220ae:	pop    ebx
  4220af:	pop    eax
  4220b0:	in     al,0xff
  4220b2:	xor    dl,dl
  4220b4:	push   eax
  4220b5:	adc    eax,0x7a77e399
  4220ba:	pop    ecx
  4220bb:	add    edi,DWORD PTR ds:0xc4dcd650
  4220c1:	popf   
  4220c2:	adc    al,0x79
  4220c4:	je     0x422126
  4220c6:	inc    ebp
  4220c7:	lock pop edx
  4220c9:	adc    eax,0xd1fe428c
  4220ce:	jle    0x42212d
  4220d0:	and    esp,DWORD PTR [ebp-0x630f7e06]
  4220d6:	mov    ds:0xd1376bad,al
  4220db:	leave  
  4220dc:	pusha  
  4220dd:	mov    cl,0xc0
  4220df:	into   
  4220e0:	test   eax,0x932cd013
  4220e5:	aaa    
  4220e6:	clc    
  4220e7:	ja     0x42211f
  4220e9:	pop    ebx
  4220ea:	jmp    0x3e9cc96d
  4220ef:	or     DWORD PTR [esi+esi*2-0x68],0xd36e161c
  4220f7:	inc    BYTE PTR [esi]
  4220f9:	and    al,0x4d
  4220fb:	push   ebx
  4220fc:	sbb    esp,DWORD PTR [edi]
  4220fe:	lahf   
  4220ff:	sti    
  422100:	rcr    ebx,1
  422102:	inc    esi
  422103:	xchg   ecx,eax
  422104:	les    esp,FWORD PTR [ebp-0x30]
  422107:	mov    ah,0xd6
  422109:	jne    0x422162
  42210b:	mov    bl,0xbd
  42210d:	jl     0x422114
  42210f:	mov    al,ds:0x3d47c040
  422114:	or     DWORD PTR [edx],ebp
  422116:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422117:	sbb    al,0x6c
  422119:	cld    
  42211a:	daa    
  42211b:	push   cs
  42211c:	gs out 0xc2,eax
  42211f:	cmp    ecx,ebp
  422121:	nop
  422122:	push   ecx
  422123:	fadd   QWORD PTR [ebp+ebp*2+0x5d]
  422127:	push   ds
  422128:	imul   DWORD PTR [ecx-0x18]
  42212b:	and    BYTE PTR [eax+0x4c63fde7],cl
  422131:	add    DWORD PTR [edx],esp
  422133:	push   eax
  422134:	mul    BYTE PTR [ebp-0x1d0e58a1]
  42213a:	loop   0x42217a
  42213c:	ja     0x422153
  42213e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42213f:	shl    BYTE PTR [esi],0x6f
  422142:	xor    bl,al
  422144:	(bad)  
  422145:	fcom   QWORD PTR ds:0xbd8a6b20
  42214b:	mov    esi,0x1034cb46
  422150:	test   eax,0x5d413a47
  422155:	xchg   BYTE PTR [edi-0x4973c585],al
  42215b:	fs scas eax,DWORD PTR es:[edi]
  42215d:	je     0x422104
  42215f:	call   0x85a9:0x942d0e85
  422166:	push   es
  422167:	add    eax,0x54d5e6ac
  42216c:	or     ecx,DWORD PTR [esi-0x3a]
  42216f:	and    dh,ch
  422171:	sub    ecx,ebx
  422173:	les    esp,FWORD PTR [esi+0x5f]
  422176:	mov    al,ds:0x60220b1
  42217b:	adc    edx,DWORD PTR [ebx+0x5b11d679]
  422181:	and    al,0x6d
  422183:	push   ebp
  422184:	sub    eax,0xef39b78a
  422189:	pusha  
  42218a:	ror    DWORD PTR [ebx+0x47d3b6df],0x12
  422191:	and    ah,BYTE PTR [edi]
  422193:	cdq    
  422194:	jbe    0x4221e5
  422196:	add    ah,ch
  422198:	cwde   
  422199:	push   esi
  42219a:	mov    BYTE PTR [edi],dl
  42219c:	into   
  42219d:	xchg   edi,eax
  42219e:	adc    eax,0x23a33cec
  4221a3:	cmp    ebx,DWORD PTR [edi-0x34]
  4221a6:	xor    DWORD PTR [edx+0x7e],edx
  4221a9:	jae    0x4221f7
  4221ab:	out    0x7a,eax
  4221ad:	add    ebp,DWORD PTR gs:0x99dd756
  4221b4:	mov    DWORD PTR [eax],esi
  4221b6:	pop    ss
  4221b7:	(bad)  
  4221b8:	scas   al,BYTE PTR es:[edi]
  4221b9:	and    al,0xeb
  4221bb:	outs   dx,DWORD PTR ds:[esi]
  4221bc:	mov    edx,0xf095fcff
  4221c1:	push   ebp
  4221c2:	(bad)  
  4221c4:	test   eax,0x2cf9eae5
  4221c9:	mov    ecx,0xd41ccd97
  4221ce:	rcl    BYTE PTR [ecx],cl
  4221d0:	dec    edx
  4221d1:	adc    bh,al
  4221d3:	push   0xffffffb5
  4221d5:	(bad)
  4221d8:	loope  0x422256
  4221da:	fistp  QWORD PTR [ebx-0x51]
  4221dd:	ror    ch,cl
  4221df:	repnz retf 0x1a84
  4221e3:	clc    
  4221e4:	bound  esi,QWORD PTR [edi+edi*4]
  4221e7:	call   0x9ae9fe22
  4221ec:	sub    BYTE PTR [edi-0x58],0x52
  4221f0:	push   ebx
  4221f1:	xchg   esp,eax
  4221f2:	pushf  
  4221f3:	nop
  4221f4:	out    0x50,eax
  4221f6:	loopne 0x422215
  4221f8:	out    0xfc,eax
  4221fa:	mov    bl,0x4d
  4221fc:	pop    eax
  4221fd:	ret    0x8fe5
  422200:	mov    bl,0x7c
  422202:	cmp    ah,bl
  422204:	xchg   edx,eax
  422205:	icebp  
  422206:	add    al,0xf4
  422209:	jmp    0x8597853f
  42220e:	xor    eax,0x68a6800e
  422213:	repnz fbld TBYTE PTR [edx]
  422216:	xchg   ebp,eax
  422217:	loope  0x4221b6
  422219:	xchg   edi,ecx
  42221b:	xchg   ebp,eax
  42221c:	mov    gs,WORD PTR [esi-0x5b]
  42221f:	add    eax,DWORD PTR [eax+0x21]
  422222:	lods   eax,DWORD PTR ds:[esi]
  422223:	mov    edi,0x2a3abe2
  422228:	inc    dx
  42222a:	pop    ecx
  42222b:	pop    esp
  42222c:	test   al,0xde
  42222e:	(bad)  
  422230:	sbb    dh,BYTE PTR [ebp-0x58456a4c]
  422236:	xor    esp,DWORD PTR [edx-0x75e100f5]
  42223c:	pushf  
  42223d:	mov    cl,0x9c
  42223f:	pushf  
  422240:	xchg   edi,eax
  422241:	jp     0x42229b
  422243:	push   ebx
  422244:	sub    eax,DWORD PTR [edi+0x6f]
  422247:	xchg   ecx,eax
  422248:	push   0xa3f2ba04
  42224d:	jg     0x4221ea
  42224f:	cmp    al,0x49
  422251:	push   edi
  422252:	fst    QWORD PTR [eax]
  422254:	mov    eax,ds:0x9e80e7cd
  422259:	push   eax
  42225a:	jg     0x4221ef
  42225c:	mov    ah,0xb4
  42225e:	pop    edx
  42225f:	fidivr DWORD PTR [ebp-0x7426a278]
  422265:	inc    ecx
  422266:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422267:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422268:	in     al,dx
  422269:	sbb    DWORD PTR [edx+ebp*8+0x55848892],ebp
  422270:	test   BYTE PTR [edi+esi*1+0x9],bl
  422274:	mov    ah,0x18
  422276:	xchg   edx,eax
  422277:	dec    esp
  422278:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422279:	(bad)  
  42227a:	mov    eax,ds:0x22ee8189
  42227f:	ror    ah,cl
  422281:	mov    bl,0xf3
  422283:	retf   0x64ba
  422286:	(bad)  
  422287:	cmp    ebp,ecx
  422289:	add    BYTE PTR [edi+0xfcffbde],bl
  42228f:	xor    DWORD PTR [edx+0x1b],ebp
  422292:	clc    
  422293:	stos   DWORD PTR es:[edi],eax
  422294:	and    eax,0x26134de5
  422299:	sub    al,0x86
  42229b:	xchg   edi,eax
  42229c:	test   DWORD PTR [ecx-0x1],edi
  42229f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222a0:	fsubr  QWORD PTR [ebx-0x49472526]
  4222a6:	inc    eax
  4222a7:	pop    esp
  4222a8:	inc    ebp
  4222a9:	pop    es
  4222aa:	push   ebp
  4222ab:	call   0x279e4cea
  4222b0:	inc    esi
  4222b1:	add    al,0x4
  4222b3:	add    DWORD PTR [ebp-0x1604c69b],ebx
  4222b9:	mov    WORD PTR [eax],fs
  4222bb:	es int3 
  4222bd:	retf   0xf5b6
  4222c0:	cdq    
  4222c1:	out    dx,eax
  4222c2:	sti    
  4222c3:	scas   eax,DWORD PTR es:[edi]
  4222c4:	rol    DWORD PTR [ebx-0x2e],cl
  4222c7:	(bad)
  4222ca:	jbe    0x422330
  4222cc:	sbb    ebx,DWORD PTR [ecx]
  4222ce:	pop    edx
  4222cf:	xor    eax,0x8328fd9
  4222d4:	inc    edx
  4222d5:	cli    
  4222d6:	mov    eax,0xb84188d
  4222db:	stos   DWORD PTR es:[edi],eax
  4222dc:	xor    al,0x24
  4222de:	mov    ds:0x3b22b9ab,eax
  4222e3:	or     eax,0xfb39f935
  4222e8:	fild   DWORD PTR [eax+0x7b]
  4222eb:	ficomp DWORD PTR [esi+0x5c]
  4222ee:	pop    ebp
  4222ef:	adc    DWORD PTR [eax],ebp
  4222f1:	fst    DWORD PTR [esi+edx*4+0x72b16a3d]
  4222f8:	push   edx
  4222f9:	outs   dx,DWORD PTR ds:[esi]
  4222fa:	push   ecx
  4222fb:	and    al,0xe2
  4222fd:	bound  esi,QWORD PTR [ebp+0x6812f75c]
  422303:	inc    eax
  422304:	or     eax,0xc9ab383b
  422309:	dec    edi
  42230a:	jl     0x42230d
  42230c:	push   edx
  42230d:	dec    ecx
  42230e:	and    eax,0x1df4781f
  422313:	xor    eax,0x13009467
  422318:	scas   al,BYTE PTR es:[edi]
  422319:	dec    eax
  42231a:	adc    DWORD PTR [edx+0x4308e6db],0x8
  422321:	sbb    ch,BYTE PTR [esi]
  422323:	lods   eax,DWORD PTR ds:[esi]
  422324:	lds    ebx,FWORD PTR ds:0xf8458572
  42232a:	xchg   ebp,eax
  42232b:	sbb    eax,0x881c06ea
  422330:	push   es
  422331:	add    al,0xfe
  422333:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422334:	adc    al,0xe2
  422336:	imul   ecx,DWORD PTR [ebx-0x13d20ebc],0xffffff98
  42233d:	and    DWORD PTR [edx+eax*2],esi
  422340:	dec    esp
  422341:	cmp    ebp,esi
  422343:	dec    esi
  422344:	adc    ah,BYTE PTR [eax-0x7f1d24b2]
  42234a:	push   ecx
  42234b:	aaa    
  42234c:	pop    es
  42234d:	(bad)  [edx]
  42234f:	jge    0x42233e
  422351:	loope  0x422331
  422353:	add    dh,0xe4
  422356:	dec    ebx
  422357:	pop    DWORD PTR [esi-0x1a991979]
  42235d:	outs   dx,BYTE PTR ds:[esi]
  42235e:	aad    0x6e
  422360:	cmp    al,0x56
  422362:	inc    eax
  422363:	mov    esi,0xf1f12a24
  422368:	test   al,0xf
  42236a:	xor    BYTE PTR [ecx+ebx*2+0x5f],dl
  42236e:	aad    0xd7
  422370:	(bad)  
  422371:	nop
  422372:	out    dx,al
  422373:	cmp    BYTE PTR [eax-0x64693c24],bl
  422379:	(bad)  
  42237a:	jae    0x42234c
  42237c:	es leave 
  42237e:	adc    eax,0x6c5ab9d0
  422383:	ja     0x4223b0
  422385:	sbb    DWORD PTR ds:0xf93c5116,eax
  42238b:	test   BYTE PTR [ebp+0x7650609c],bh
  422391:	jmp    DWORD PTR [ecx-0x3e190c9c]
  422397:	sub    DWORD PTR [ecx],esi
  422399:	or     al,BYTE PTR [ebx-0x243b948a]
  42239f:	daa    
  4223a0:	cmp    BYTE PTR [esp+edi*1],ch
  4223a3:	(bad)  
  4223a5:	(bad)  
  4223a6:	cmc    
  4223a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223a8:	xchg   BYTE PTR [edi],ch
  4223aa:	cmp    al,0xce
  4223ac:	hlt    
  4223ad:	js     0x422420
  4223af:	mov    cl,0xb2
  4223b1:	les    eax,FWORD PTR [edi-0x1c75224]
  4223b7:	mov    ebx,0x98c1ca3
  4223bc:	in     eax,0xb8
  4223be:	gs jo  0x4223b3
  4223c1:	sti    
  4223c2:	clc    
  4223c3:	sahf   
  4223c4:	sub    eax,0x1c9d3fd1
  4223c9:	pop    edi
  4223ca:	push   ecx
  4223cb:	cmp    DWORD PTR [di],ebp
  4223ce:	and    al,0x7d
  4223d0:	or     DWORD PTR [ecx+0x3583cd7],eax
  4223d6:	call   0x945ca0cc
  4223db:	nop
  4223dc:	fcmovb st,st(6)
  4223de:	dec    DWORD PTR [esp+esi*2-0x5a]
  4223e2:	dec    esp
  4223e3:	mov    eax,ds:0x88b15caf
  4223e8:	retf   
  4223e9:	cli    
  4223ea:	cwde   
  4223eb:	inc    DWORD PTR [eax]
  4223ed:	lods   al,BYTE PTR ds:[esi]
  4223ee:	push   ss
  4223ef:	push   ss
  4223f0:	jbe    0x4223e3
  4223f2:	div    BYTE PTR [edi]
  4223f4:	mov    ah,0xa1
  4223f6:	xor    eax,0xc172ec50
  4223fb:	ins    DWORD PTR es:[edi],dx
  4223fc:	and    al,0x24
  4223fe:	call   0x870c:0xb00ffafa
  422405:	pop    ebp
  422406:	jae    0x422441
  422408:	adc    DWORD PTR [ebx],0xffffffef
  42240b:	shl    DWORD PTR [esi+0x7a],cl
  42240e:	loop   0x4223da
  422410:	mov    ds:0x7f393c09,al
  422415:	imul   eax,ebp,0x7aa054a4
  42241b:	or     BYTE PTR [eax+eiz*1+0x30],dh
  42241f:	outs   dx,BYTE PTR ds:[esi]
  422420:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422421:	sub    BYTE PTR [edi+0x54a25cb6],ch
  422427:	cld    
  422428:	xor    ch,BYTE PTR [eax]
  42242a:	loope  0x422425
  42242c:	inc    esp
  42242d:	sub    edx,DWORD PTR [ebp+ebx*8+0x71c4a99f]
  422434:	pop    esp
  422435:	xchg   DWORD PTR [edi],ebp
  422437:	push   eax
  422438:	test   edi,ebx
  42243a:	jg     0x42244f
  42243c:	fldl2e 
  42243e:	adc    BYTE PTR [ebx+0x69],ch
  422441:	int    0x75
  422443:	cli    
  422444:	sbb    al,0x67
  422446:	dec    ebx
  422447:	mov    ah,0xa6
  422449:	fdiv   DWORD PTR [edx+0x4b]
  42244c:	lods   eax,DWORD PTR ds:[esi]
  42244d:	test   BYTE PTR ds:0x8efdfab3,dl
  422453:	mov    bl,0x63
  422455:	imul   ebp,ebx,0xffffffc4
  422458:	jnp    0x42242c
  42245a:	xchg   esp,eax
  42245b:	in     eax,0x8e
  42245d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42245e:	mov    bh,0xc9
  422460:	fiadd  WORD PTR [ebx]
  422462:	sub    eax,0x7a573ced
  422467:	mov    al,0x40
  422469:	dec    ebx
  42246a:	and    BYTE PTR [edx+esi*2],dl
  42246d:	in     eax,dx
  42246e:	mov    DWORD PTR [ecx],ebp
  422470:	mov    edi,0x404a94f0
  422475:	mov    ecx,DWORD PTR [eax-0x79e0267f]
  42247b:	inc    ebp
  42247c:	stos   DWORD PTR es:[edi],eax
  42247d:	dec    ebp
  42247e:	push   esi
  42247f:	cmp    DWORD PTR [ebp+0x32],ebp
  422482:	adc    al,0x1e
  422484:	in     eax,dx
  422485:	pop    esp
  422486:	mov    edx,0x52146e0d
  42248b:	adc    eax,0x192e62ce
  422490:	mov    ebx,0xf9a6a04e
  422495:	cmp    bh,al
  422497:	aad    0x82
  422499:	lahf   
  42249a:	cmp    al,0x55
  42249c:	sub    BYTE PTR [ebp-0x6f],dh
  42249f:	adc    BYTE PTR [edi+eiz*4+0x1b51a644],0xf1
  4224a7:	xor    edx,eax
  4224a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4224aa:	ja     0x4224c2
  4224ac:	xor    eax,0x5b4fdc91
  4224b1:	mov    gs,WORD PTR [edi]
  4224b3:	pop    ss
  4224b4:	mov    dl,0x27
  4224b6:	and    edi,0x175a16ab
  4224bc:	call   0x4b40910e
  4224c1:	out    dx,al
  4224c2:	or     ch,BYTE PTR [ebx+eiz*4-0x614657f3]
  4224c9:	ror    ch,1
  4224cb:	add    bh,BYTE PTR [esi+0xc1111f3]
  4224d1:	pop    ds
  4224d2:	jecxz  0x4224c9
  4224d4:	jo     0x422458
  4224d6:	push   0xffffffaf
  4224d8:	fdivr  DWORD PTR [eax]
  4224da:	jp     0x4224e7
  4224dc:	aad    0x27
  4224de:	out    dx,al
  4224df:	push   0xffffffc0
  4224e1:	or     al,0x5
  4224e3:	out    dx,eax
  4224e4:	jecxz  0x422482
  4224e6:	repz mov eax,ds:0x15185400
  4224ec:	in     al,0x5d
  4224ee:	ins    BYTE PTR es:[edi],dx
  4224ef:	jnp    0x42253c
  4224f1:	(bad)  
  4224f2:	mov    fs,WORD PTR [edx+0x6860bf57]
  4224f8:	mov    dl,0xdc
  4224fa:	fcmovnu st,st(3)
  4224fc:	jmp    0x561c:0x82cd09a1
  422503:	mov    ah,0xea
  422505:	pop    edx
  422506:	clc    
  422507:	nop
  422508:	in     al,0xd2
  42250a:	daa    
  42250b:	(bad)  
  42250c:	popa   
  42250d:	dec    esp
  42250e:	mov    WORD PTR [edi],gs
  422510:	mov    al,ds:0x440bdea9
  422515:	and    cl,ch
  422517:	nop
  422518:	out    dx,al
  422519:	leave  
  42251a:	inc    edx
  42251b:	fbstp  TBYTE PTR [ecx+ebp*4-0x4cdbf70f]
  422522:	in     al,0x5b
  422524:	add    eax,0x115fb797
  422529:	inc    ecx
  42252a:	(bad)  
  42252b:	rcr    DWORD PTR [edx],0xec
  42252e:	mov    ebx,0xff32edff
  422533:	xchg   edi,eax
  422534:	pop    ds
  422535:	fs push ebx
  422537:	jns    0x4224c0
  422539:	xor    esi,0x5
  42253c:	retf   0xe56c
  42253f:	sub    DWORD PTR [edx-0x54],ecx
  422542:	add    cl,BYTE PTR [ebx+0x1a]
  422545:	fldenv ds:0xcd782b
  42254b:	jbe    0x42251a
  42254d:	mov    dl,0x7c
  42254f:	call   0x91119d78
  422554:	mov    cl,0x97
  422556:	fisub  DWORD PTR [ecx+0x61]
  422559:	repz jo 0x42253e
  42255c:	in     eax,0x34
  42255e:	loopne 0x4224f7
  422560:	iret   
  422561:	push   0x6e
  422563:	mov    ebx,0x13f7725f
  422568:	les    ebx,FWORD PTR [edx]
  42256a:	mov    bh,0xa3
  42256c:	retf   
  42256d:	jbe    0x42259c
  42256f:	das    
  422570:	mov    ah,BYTE PTR [eax+0x69dc22d4]
  422576:	mov    ds,WORD PTR [esi+0x63]
  422579:	jns    0x4225e4
  42257b:	adc    BYTE PTR [edi-0xe96b2c1],al
  422581:	test   BYTE PTR [edi+eiz*8+0x444c12c4],dh
  422588:	pop    esi
  422589:	popa   
  42258a:	mov    ds:0x2ef940b8,al
  42258f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422590:	addr16 sbb eax,0x42f6ef5d
  422596:	jge    0x4225bb
  422598:	sahf   
  422599:	jg     0x4225da
  42259b:	and    DWORD PTR [ecx+0x84abe0d],ebx
  4225a1:	aad    0xc9
  4225a3:	pop    ss
  4225a4:	lahf   
  4225a5:	cwde   
  4225a6:	(bad)  
  4225a7:	jnp    0x422608
  4225a9:	cwde   
  4225aa:	mov    al,ds:0xf8054f49
  4225af:	add    al,0x16
  4225b1:	pop    ss
  4225b2:	push   eax
  4225b3:	add    DWORD PTR [ecx],edx
  4225b5:	fwait
  4225b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225b7:	test   eax,0xe6f76ad1
  4225bc:	pop    esi
  4225bd:	jo     0x422631
  4225bf:	mov    eax,0x30220c28
  4225c4:	pop    ds
  4225c5:	out    0x51,al
  4225c7:	mov    ds:0x86c31c21,al
  4225cc:	and    eax,0xdb3aa736
  4225d1:	mov    ebx,0x29bf8f2c
  4225d6:	aaa    
  4225d7:	js     0x4225fd
  4225d9:	in     eax,0x7d
  4225db:	fiadd  DWORD PTR [edx+0x6520635d]
  4225e1:	and    eax,eax
  4225e3:	sub    BYTE PTR [ebx-0x61548363],bh
  4225e9:	push   ecx
  4225ea:	jg     0x4225c5
  4225ec:	out    0x3c,eax
  4225ee:	inc    ebx
  4225ef:	pop    eax
  4225f0:	jg     0x4225a7
  4225f2:	pop    ss
  4225f3:	stc    
  4225f4:	lea    ebx,ds:0x33fcf9e9
  4225fa:	push   ds
  4225fb:	mov    ebp,0x326a0176
  422600:	jne    0x422631
  422602:	sbb    al,0x9f
  422604:	ret    
  422605:	aas    
  422606:	iret   
  422607:	pop    es
  422608:	jecxz  0x4225a6
  42260a:	shl    ch,1
  42260c:	into   
  42260d:	rcl    ah,cl
  42260f:	retf   
  422610:	mov    ss,WORD PTR [edi]
  422612:	mov    ecx,0x2eaa8018
  422617:	aad    0xda
  422619:	xchg   ebx,eax
  42261a:	leave  
  42261b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42261c:	inc    ebp
  42261d:	jecxz  0x422656
  42261f:	mov    ah,0xe
  422621:	das    
  422622:	shl    BYTE PTR [ecx+0x3bee4cd2],cl
  422628:	es pop ds
  42262a:	and    DWORD PTR [ebx-0x4de2af40],ebx
  422630:	aas    
  422631:	aad    0x8e
  422633:	nop
  422634:	aam    0xd5
  422636:	lods   al,BYTE PTR ss:[esi]
  422638:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422639:	xor    BYTE PTR [edi+0x6e7ebd6d],ch
  42263f:	inc    eax
  422640:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422641:	vpcmpgtw ymm6,ymm4,YMMWORD PTR [ecx]
  422645:	jb     0x422612
  422647:	mov    ebx,0xabd25bfc
  42264c:	cmp    eax,0xf4798114
  422651:	data16 cld 
  422653:	adc    ch,BYTE PTR [ecx-0x4268636e]
  422659:	out    dx,eax
  42265a:	gs xor al,0xe5
  42265d:	sub    DWORD PTR [eax-0xcbf4702],edi
  422663:	push   ecx
  422664:	in     al,0x48
  422666:	pop    edi
  422667:	pop    eax
  422668:	popa   
  422669:	sahf   
  42266a:	or     DWORD PTR [esi+0x7],ebp
  42266d:	sbb    edi,0x50
  422670:	mov    ch,BYTE PTR [edx+0x58]
  422673:	inc    ebx
  422674:	mov    ch,BYTE PTR [esp+esi*1-0x75]
  422678:	xor    ah,BYTE PTR [ebx+0x2300339]
  42267e:	retf   0x974d
  422681:	mov    DWORD PTR ds:[ecx+ebp*1],ebx
  422685:	fbstp  TBYTE PTR [ebx+0x78a992e6]
  42268b:	dec    esp
  42268c:	test   DWORD PTR [ebx],edi
  42268e:	inc    BYTE PTR [ebx-0x924d02]
  422694:	fisubr DWORD PTR [eax-0x7ba45f15]
  42269a:	xor    eax,0x892c4d5
  42269f:	je     0x422648
  4226a1:	fnstenv [ebx+esi*2]
  4226a4:	iret   
  4226a5:	arpl   WORD PTR [ebx+eax*4],sp
  4226a8:	ins    DWORD PTR es:[edi],dx
  4226a9:	mov    eax,ds:0x6cfedbd0
  4226ae:	and    eax,0x57baa610
  4226b3:	dec    ecx
  4226b4:	dec    ecx
  4226b5:	into   
  4226b6:	pop    ebx
  4226b7:	rcl    DWORD PTR [ebp-0x5c50ba6],cl
  4226bd:	aas    
  4226be:	push   DWORD PTR [esi+0x721e039a]
  4226c4:	xor    bh,BYTE PTR [edx-0xe]
  4226c7:	call   0xea31b469
  4226cc:	jmp    0x42273b
  4226ce:	jmp    0x72c5:0xbf56219c
  4226d5:	cmp    ebx,DWORD PTR [edx-0x1181879a]
  4226db:	fnstsw WORD PTR [ecx+0x192a5189]
  4226e1:	mov    edi,0xa9a8f954
  4226e6:	out    0xda,eax
  4226e8:	pop    esi
  4226e9:	xchg   esi,eax
  4226ea:	hlt    
  4226eb:	ss cwde 
  4226ed:	mov    dh,BYTE PTR [edx+0x7c]
  4226f0:	test   eax,0xb5e63790
  4226f5:	mov    ?,WORD PTR [edx-0x50]
  4226f8:	add    DWORD PTR [ecx+0x19898212],edi
  4226fe:	or     dh,BYTE PTR [bp+0x4a]
  422702:	out    0x7,eax
  422704:	sahf   
  422705:	outs   dx,DWORD PTR ds:[esi]
  422706:	call   DWORD PTR [eax-0x46b70b6]
  42270c:	jl     0x4226fc
  42270e:	(bad)  
  42270f:	xor    eax,0x3b16a9c0
  422714:	jae    0x4226f5
  422716:	mov    dh,BYTE PTR [eax-0x24b2dd98]
  42271c:	repnz inc ebx
  42271e:	sub    eax,0xcdf39d18
  422723:	ins    DWORD PTR es:[edi],dx
  422724:	ja     0x42270c
  422726:	enter  0x75c6,0x1c
  42272a:	ins    BYTE PTR es:[edi],dx
  42272b:	ins    DWORD PTR es:[edi],dx
  42272c:	pop    ds
  42272d:	popa   
  42272e:	bound  esi,QWORD PTR [ecx+0x68]
  422731:	xor    bh,BYTE PTR [esi+0x6dc0be04]
  422737:	lahf   
  422738:	dec    ecx
  422739:	in     al,dx
  42273a:	inc    esi
  42273b:	jno    0x42271b
  42273d:	xchg   ecx,eax
  42273e:	cmp    dh,BYTE PTR [esp+eax*4]
  422741:	test   eax,0x3faed1a7
  422746:	das    
  422747:	sbb    al,0xc8
  422749:	pusha  
  42274a:	pop    edi
  42274b:	pop    esp
  42274c:	mov    dh,0x31
  42274e:	jge    0x4226fe
  422750:	shl    DWORD PTR [ebx-0x14],cl
  422753:	pop    ecx
  422754:	or     esi,DWORD PTR [edi-0x1a]
  422757:	leave  
  422758:	imul   ebx,DWORD PTR [eax],0xf8d457f4
  42275e:	gs push esi
  422760:	outs   dx,BYTE PTR ds:[esi]
  422761:	in     al,0x3e
  422763:	mov    ebx,DWORD PTR [eax]
  422765:	cwde   
  422766:	mov    eax,0x7de1bf89
  42276b:	push   edx
  42276c:	jp     0x422769
  42276e:	out    0xa2,eax
  422770:	(bad)  
  422771:	jnp    0x4227db
  422773:	mov    edx,0xa2aa1951
  422778:	mov    eax,0xe9815c66
  42277d:	cmp    esp,ecx
  42277f:	adc    DWORD PTR [ebx-0x18],ecx
  422782:	sbb    bl,BYTE PTR [edi-0x1a]
  422785:	xchg   ecx,eax
  422786:	(bad)  
  422788:	inc    edx
  422789:	xchg   edx,eax
  42278a:	ffreep st(0)
  42278c:	sub    eax,0x7cf6d4f6
  422791:	cmovle ebp,DWORD PTR [ebx]
  422794:	push   edx
  422795:	in     al,dx
  422796:	outs   dx,DWORD PTR ds:[esi]
  422797:	push   esp
  422798:	rcl    BYTE PTR [ecx-0x25],0x1e
  42279c:	iret   
  42279d:	fwait
  42279e:	sbb    al,BYTE PTR ds:0xcdec3061
  4227a4:	dec    esi
  4227a5:	ror    eax,0xa4
  4227a8:	sub    edi,esp
  4227aa:	mov    dh,0xf
  4227ac:	test   esp,ecx
  4227ae:	pop    es
  4227af:	and    edx,edx
  4227b1:	in     al,0xee
  4227b3:	jmp    0x8164:0xd089a668
  4227ba:	lods   al,BYTE PTR ds:[esi]
  4227bb:	push   edx
  4227bc:	and    DWORD PTR [ebp+0x54984c70],ebp
  4227c2:	enter  0x7dde,0x61
  4227c6:	mov    dl,BYTE PTR [edx-0x628512ea]
  4227cc:	sub    eax,0x829c370c
  4227d1:	je     0x4227cf
  4227d3:	(bad)  
  4227d4:	cs cmc 
  4227d6:	adc    eax,edi
  4227d8:	bts    DWORD PTR [esi],ecx
  4227db:	xor    DWORD PTR [ebx+0x2bdfeb96],esi
  4227e1:	fucomp st(3)
  4227e3:	mov    ds:0xdbbcce96,al
  4227e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227e9:	mov    ah,al
  4227eb:	pop    ss
  4227ec:	scas   eax,DWORD PTR es:[edi]
  4227ed:	pusha  
  4227ee:	sahf   
  4227ef:	retf   0x8522
  4227f2:	ins    DWORD PTR es:[edi],dx
  4227f3:	in     al,dx
  4227f4:	mov    ah,ch
  4227f6:	inc    edi
  4227f7:	push   eax
  4227f8:	mov    edi,0xd9949f6f
  4227fd:	rcl    ebx,cl
  4227ff:	dec    esi
  422800:	cmp    ecx,edi
  422802:	fsubr  QWORD PTR [edi]
  422804:	dec    ebx
  422805:	add    dl,BYTE PTR [ecx-0x6022450d]
  42280b:	xchg   ecx,eax
  42280c:	call   0x38541cc1
  422811:	or     esi,DWORD PTR [edi+0x409e5849]
  422817:	cvtpi2ps xmm1,QWORD PTR [edi]
  42281a:	or     al,0x12
  42281c:	add    BYTE PTR [eax-0x52597bd1],al
  422822:	sub    DWORD PTR [esp+edx*1+0x55709d72],esi
  422829:	pop    ebp
  42282a:	xor    BYTE PTR [edx-0x2e7ccfbe],dh
  422830:	pop    esp
  422831:	and    DWORD PTR [ebx],edx
  422833:	shr    DWORD PTR [esi],1
  422835:	sbb    bh,dl
  422837:	fld    QWORD PTR [ebx]
  422839:	retf   0x69c5
  42283c:	and    ecx,DWORD PTR [ecx]
  42283e:	ins    DWORD PTR es:[edi],dx
  42283f:	push   ebp
  422840:	dec    eax
  422841:	test   al,0x4d
  422843:	cmp    DWORD PTR [ebx+0x2e],esp
  422846:	sub    bh,dl
  422848:	inc    ebx
  422849:	add    al,0xf2
  42284b:	mov    ebp,0x9bd498bc
  422850:	xor    al,0xf7
  422852:	imul   esi,DWORD PTR ss:[esi+0x55],0xffffffc3
  422857:	dec    ebx
  422858:	ss scas al,BYTE PTR es:[edi]
  42285a:	inc    ebp
  42285b:	or     ebp,0x7a
  42285e:	rol    DWORD PTR [ecx],cl
  422860:	mov    edx,0x89388017
  422865:	and    al,0x14
  422867:	mov    dl,0x52
  422869:	(bad)  
  42286a:	lahf   
  42286b:	bound  edi,QWORD PTR [ebx-0x4a]
  42286e:	popa   
  42286f:	(bad)  
  422870:	cmc    
  422871:	outs   dx,DWORD PTR ds:[esi]
  422872:	push   cs
  422873:	dec    BYTE PTR [ebp-0x2b]
  422876:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422877:	lds    esi,FWORD PTR [edi+ecx*1+0x1bb834e6]
  42287e:	rcr    BYTE PTR [edx+0x50a5613a],1
  422884:	xchg   ebp,eax
  422885:	stc    
  422886:	ds (bad) 
  422888:	sbb    DWORD PTR [esi+0x11],edx
  42288b:	out    0x4f,al
  42288d:	inc    ecx
  42288e:	add    BYTE PTR [eax+0x6adfadf1],dh
  422894:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422895:	sbb    DWORD PTR [ebp+0x1d],esp
  422898:	add    eax,0x1477ae0e
  42289d:	add    esp,DWORD PTR [ecx-0x326b4e23]
  4228a3:	sbb    ebp,DWORD PTR [eax]
  4228a5:	and    eax,0x7a701caa
  4228aa:	push   es
  4228ab:	add    eax,0xa8147588
  4228b0:	rcr    DWORD PTR [eax-0x79],0x17
  4228b4:	xor    al,0x25
  4228b6:	xchg   ecx,eax
  4228b7:	mov    ecx,0x8ac65882
  4228bc:	jns    0x4228d2
  4228be:	repnz pop edx
  4228c0:	xchg   ecx,eax
  4228c1:	and    edx,DWORD PTR [edi]
  4228c3:	aaa    
  4228c4:	add    bh,BYTE PTR [eax]
  4228c6:	sahf   
  4228c7:	mov    bh,0x6e
  4228c9:	test   esi,0x70a70ad3
  4228cf:	punpckhbw mm1,QWORD PTR [edx]
  4228d2:	ret    
  4228d3:	push   ebx
  4228d4:	or     al,0x6d
  4228d6:	popf   
  4228d7:	retf   
  4228d8:	adc    edi,edi
  4228da:	shl    BYTE PTR [ebp-0x2fcec950],cl
  4228e0:	fsubp  st(6),st
  4228e2:	jb     0x4228ee
  4228e4:	jo     0x4228ac
  4228e6:	mov    dh,0x78
  4228e8:	sbb    eax,0x32a7bdcb
  4228ed:	fwait
  4228ee:	jb     0x422914
  4228f0:	mov    ds:0xa311c685,eax
  4228f5:	aad    0x27
  4228f7:	dec    esp
  4228f8:	mov    ebp,0x7c07b7d2
  4228fd:	bound  edi,QWORD PTR [edx]
  4228ff:	add    al,0xbd
  422901:	sti    
  422902:	je     0x422923
  422904:	outs   dx,DWORD PTR ds:[esi]
  422905:	jle    0x422973
  422907:	fsub   QWORD PTR [edx+0x3d]
  42290a:	sbb    eax,0x1dc88e26
  42290f:	rcr    eax,cl
  422911:	in     al,dx
  422912:	std    
  422913:	(bad)  
  422915:	mov    ch,cl
  422917:	loope  0x4228fa
  422919:	push   ecx
  42291a:	ss nop
  42291c:	cli    
  42291d:	daa    
  42291e:	outs   dx,DWORD PTR es:[esi]
  422920:	jg     0x422955
  422922:	fsubr  st,st(7)
  422924:	xchg   ebx,eax
  422925:	das    
  422926:	mov    ch,0x35
  422928:	xchg   ecx,eax
  422929:	pushf  
  42292a:	mov    dh,0x36
  42292c:	(bad)  
  42292d:	std    
  42292e:	ss ds cs jp 0x42297e
  422933:	fidiv  WORD PTR [edi+0x79e6ddc6]
  422939:	call   0x913b:0x808646f2
  422940:	icebp  
  422941:	jbe    0x422902
  422943:	xlat   BYTE PTR ds:[ebx]
  422944:	pop    edi
  422945:	std    
  422946:	or     DWORD PTR [edi-0x58],esi
  422949:	neg    BYTE PTR [ecx+0x37]
  42294c:	sbb    BYTE PTR [edi+0x4e],cl
  42294f:	jmp    0x7043:0x2bc4d7a
  422956:	and    dl,al
  422958:	mov    WORD PTR [eax],?
  42295a:	mov    eax,0xc571009b
  42295f:	pop    es
  422960:	xlat   BYTE PTR ds:[ebx]
  422961:	sub    al,0x6f
  422963:	dec    edi
  422964:	ret    
  422965:	xchg   BYTE PTR [ecx-0x4d14edfa],ch
  42296b:	rcl    BYTE PTR [ebx-0x1202c5e6],cl
  422971:	adc    BYTE PTR [edx],0xa3
  422974:	push   edi
  422975:	in     eax,dx
  422976:	outs   dx,BYTE PTR ds:[esi]
  422977:	rol    BYTE PTR [ecx-0x68],cl
  42297a:	pop    edx
  42297b:	pop    ebp
  42297c:	cmp    DWORD PTR [eax],ecx
  42297e:	stc    
  42297f:	mov    cl,BYTE PTR [eax]
  422981:	pop    ebp
  422982:	rcl    esp,0x78
  422985:	ret    0x8f0a
  422988:	add    esp,DWORD PTR [edi+0x65]
  42298b:	in     al,dx
  42298c:	(bad)  
  42298d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42298e:	bound  ebp,QWORD PTR [edx+0x2aa2253e]
  422994:	pop    edx
  422995:	cs sbb ah,ch
  422998:	mov    cl,0x20
  42299a:	dec    ecx
  42299b:	or     eax,0xb92e81b2
  4229a0:	push   ecx
  4229a1:	fwait
  4229a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229a3:	mov    dl,0xac
  4229a5:	push   ds
  4229a6:	xor    dl,BYTE PTR [eax]
  4229a8:	stos   BYTE PTR es:[edi],al
  4229a9:	mov    dl,cl
  4229ab:	or     bl,al
  4229ad:	in     eax,dx
  4229ae:	std    
  4229af:	cli    
  4229b0:	popf   
  4229b1:	aaa    
  4229b2:	or     BYTE PTR [ebx],bh
  4229b4:	in     eax,0xbc
  4229b6:	stc    
  4229b7:	rol    dl,cl
  4229b9:	add    DWORD PTR [eax+eax*4],edx
  4229bc:	fwait
  4229bd:	imul   bx,sp,0x32d7
  4229c2:	dec    ecx
  4229c3:	arpl   WORD PTR [ecx],bp
  4229c5:	popa   
  4229c6:	lahf   
  4229c7:	pop    ds
  4229c8:	outs   dx,DWORD PTR ds:[esi]
  4229c9:	sub    eax,DWORD PTR [edx+0x7]
  4229cc:	add    edi,eax
  4229ce:	rcl    DWORD PTR [eax-0x63ca20a4],cl
  4229d4:	push   ss
  4229d5:	mov    cl,0xba
  4229d7:	sahf   
  4229d8:	in     al,0xfd
  4229da:	in     eax,0xd8
  4229dc:	cmp    BYTE PTR [edx],cl
  4229de:	call   0xd1fc:0xe2db4018
  4229e5:	cld    
  4229e6:	jno    0x422a05
  4229e8:	dec    edx
  4229e9:	ja     0x422a01
  4229eb:	aad    0xa2
  4229ed:	bound  edx,QWORD PTR [eax-0x3]
  4229f0:	fisub  DWORD PTR [ecx-0x31]
  4229f3:	push   0x0
  4229f5:	call   DWORD PTR ds:0x42813c
  4229fb:	push   0x0
  4229fd:	push   0x0
  4229ff:	call   DWORD PTR ds:0x428030
  422a05:	xor    eax,eax
  422a07:	add    esp,0x10
  422a0a:	ret    0x10
  422a0d:	nop
  422a0e:	nop
  422a0f:	nop
  422a10:	jmp    DWORD PTR ds:0x428130
  422a16:	cmp    DWORD PTR ds:0x464d5c,0x1
  422a1d:	jne    0x422a24
  422a1f:	call   0x422f62
  422a24:	push   DWORD PTR [esp+0x4]
  422a28:	call   0x422deb
  422a2d:	push   0xff
  422a32:	call   DWORD PTR ds:0x46444c
  422a38:	pop    ecx
  422a39:	pop    ecx
  422a3a:	ret    
  422a3b:	cmp    DWORD PTR ds:0x464d5c,0x1
  422a42:	jne    0x422a49
  422a44:	call   0x422f62
  422a49:	push   DWORD PTR [esp+0x4]
  422a4d:	call   0x422deb
  422a52:	push   0xff
  422a57:	call   0x422c31
  422a5c:	pop    ecx
  422a5d:	pop    ecx
  422a5e:	ret    
  422a5f:	push   0x60
  422a61:	push   0x428168
  422a66:	call   0x423950
  422a6b:	mov    edi,0x94
  422a70:	mov    eax,edi
  422a72:	call   0x4239a0
  422a77:	mov    DWORD PTR [ebp-0x18],esp
  422a7a:	mov    esi,esp
  422a7c:	mov    DWORD PTR [esi],edi
  422a7e:	push   esi
  422a7f:	call   DWORD PTR ds:0x428068
  422a85:	mov    ecx,DWORD PTR [esi+0x10]
  422a88:	mov    DWORD PTR ds:0x464d64,ecx
  422a8e:	mov    eax,DWORD PTR [esi+0x4]
  422a91:	mov    ds:0x464d70,eax
  422a96:	mov    edx,DWORD PTR [esi+0x8]
  422a99:	mov    DWORD PTR ds:0x464d74,edx
  422a9f:	mov    esi,DWORD PTR [esi+0xc]
  422aa2:	and    esi,0x7fff
  422aa8:	mov    DWORD PTR ds:0x464d68,esi
  422aae:	cmp    ecx,0x2
  422ab1:	je     0x422abf
  422ab3:	or     esi,0x8000
  422ab9:	mov    DWORD PTR ds:0x464d68,esi
  422abf:	shl    eax,0x8
  422ac2:	add    eax,edx
  422ac4:	mov    ds:0x464d6c,eax
  422ac9:	xor    esi,esi
  422acb:	push   esi
  422acc:	mov    edi,DWORD PTR ds:0x428044
  422ad2:	call   edi
  422ad4:	cmp    WORD PTR [eax],0x5a4d
  422ad9:	jne    0x422afa
  422adb:	mov    ecx,DWORD PTR [eax+0x3c]
  422ade:	add    ecx,eax
  422ae0:	cmp    DWORD PTR [ecx],0x4550
  422ae6:	jne    0x422afa
  422ae8:	movzx  eax,WORD PTR [ecx+0x18]
  422aec:	cmp    eax,0x10b
  422af1:	je     0x422b12
  422af3:	cmp    eax,0x20b
  422af8:	je     0x422aff
  422afa:	mov    DWORD PTR [ebp-0x1c],esi
  422afd:	jmp    0x422b26
  422aff:	cmp    DWORD PTR [ecx+0x84],0xe
  422b06:	jbe    0x422afa
  422b08:	xor    eax,eax
  422b0a:	cmp    DWORD PTR [ecx+0xf8],esi
  422b10:	jmp    0x422b20
  422b12:	cmp    DWORD PTR [ecx+0x74],0xe
  422b16:	jbe    0x422afa
  422b18:	xor    eax,eax
  422b1a:	cmp    DWORD PTR [ecx+0xe8],esi
  422b20:	setne  al
  422b23:	mov    DWORD PTR [ebp-0x1c],eax
  422b26:	push   0x1
  422b28:	call   0x4238fd
  422b2d:	pop    ecx
  422b2e:	test   eax,eax
  422b30:	jne    0x422b3a
  422b32:	push   0x1c
  422b34:	call   0x422a3b
  422b39:	pop    ecx
  422b3a:	call   0x423874
  422b3f:	test   eax,eax
  422b41:	jne    0x422b4b
  422b43:	push   0x10
  422b45:	call   0x422a3b
  422b4a:	pop    ecx
  422b4b:	call   0x42375d
  422b50:	mov    DWORD PTR [ebp-0x4],esi
  422b53:	call   0x42355f
  422b58:	test   eax,eax
  422b5a:	jge    0x422b64
  422b5c:	push   0x1b
  422b5e:	call   0x422a16
  422b63:	pop    ecx
  422b64:	call   DWORD PTR ds:0x428064
  422b6a:	mov    ds:0x465514,eax
  422b6f:	call   0x42343d
  422b74:	mov    ds:0x464d54,eax
  422b79:	call   0x42339b
  422b7e:	test   eax,eax
  422b80:	jge    0x422b8a
  422b82:	push   0x8
  422b84:	call   0x422a16
  422b89:	pop    ecx
  422b8a:	call   0x423168
  422b8f:	test   eax,eax
  422b91:	jge    0x422b9b
  422b93:	push   0x9
  422b95:	call   0x422a16
  422b9a:	pop    ecx
  422b9b:	call   0x422c73
  422ba0:	mov    DWORD PTR [ebp-0x20],eax
  422ba3:	cmp    eax,esi
  422ba5:	je     0x422bae
  422ba7:	push   eax
  422ba8:	call   0x422a16
  422bad:	pop    ecx
  422bae:	mov    DWORD PTR [ebp-0x38],esi
  422bb1:	lea    eax,[ebp-0x64]
  422bb4:	push   eax
  422bb5:	call   DWORD PTR ds:0x428060
  422bbb:	call   0x4230ff
  422bc0:	mov    DWORD PTR [ebp-0x68],eax
  422bc3:	test   BYTE PTR [ebp-0x38],0x1
  422bc7:	je     0x422bcf
  422bc9:	movzx  eax,WORD PTR [ebp-0x34]
  422bcd:	jmp    0x422bd2
  422bcf:	push   0xa
  422bd1:	pop    eax
  422bd2:	push   eax
  422bd3:	push   DWORD PTR [ebp-0x68]
  422bd6:	push   esi
  422bd7:	push   esi
  422bd8:	call   edi
  422bda:	push   eax
  422bdb:	call   0x421880
  422be0:	mov    edi,eax
  422be2:	mov    DWORD PTR [ebp-0x6c],edi
  422be5:	cmp    DWORD PTR [ebp-0x1c],esi
  422be8:	jne    0x422bf0
  422bea:	push   edi
  422beb:	call   0x422dab
  422bf0:	call   0x422dcd
  422bf5:	jmp    0x422c22
  422bf7:	mov    eax,DWORD PTR [ebp-0x14]
  422bfa:	mov    ecx,DWORD PTR [eax]
  422bfc:	mov    ecx,DWORD PTR [ecx]
  422bfe:	mov    DWORD PTR [ebp-0x70],ecx
  422c01:	push   eax
  422c02:	push   ecx
  422c03:	call   0x422f9b
  422c08:	pop    ecx
  422c09:	pop    ecx
  422c0a:	ret    
  422c0b:	mov    esp,DWORD PTR [ebp-0x18]
  422c0e:	mov    edi,DWORD PTR [ebp-0x70]
  422c11:	cmp    DWORD PTR [ebp-0x1c],0x0
  422c15:	jne    0x422c1d
  422c17:	push   edi
  422c18:	call   0x422dbc
  422c1d:	call   0x422ddc
  422c22:	or     DWORD PTR [ebp-0x4],0xffffffff
  422c26:	mov    eax,edi
  422c28:	lea    esp,[ebp-0x7c]
  422c2b:	call   0x42398b
  422c30:	ret    
  422c31:	push   0x428184
  422c36:	call   DWORD PTR ds:0x428044
  422c3c:	test   eax,eax
  422c3e:	je     0x422c56
  422c40:	push   0x428174
  422c45:	push   eax
  422c46:	call   DWORD PTR ds:0x42804c
  422c4c:	test   eax,eax
  422c4e:	je     0x422c56
  422c50:	push   DWORD PTR [esp+0x4]
  422c54:	call   eax
  422c56:	push   DWORD PTR [esp+0x4]
  422c5a:	call   DWORD PTR ds:0x42806c
  422c60:	int3   
  422c61:	push   0x8
  422c63:	call   0x423b0f
  422c68:	pop    ecx
  422c69:	ret    
  422c6a:	push   0x8
  422c6c:	call   0x423a7b
  422c71:	pop    ecx
  422c72:	ret    
  422c73:	mov    eax,ds:0x465510
  422c78:	test   eax,eax
  422c7a:	je     0x422c7e
  422c7c:	call   eax
  422c7e:	push   esi
  422c7f:	push   edi
  422c80:	mov    ecx,0x42a00c
  422c85:	mov    edi,0x42a018
  422c8a:	xor    eax,eax
  422c8c:	cmp    ecx,edi
  422c8e:	mov    esi,ecx
  422c90:	jae    0x422ca9
  422c92:	test   eax,eax
  422c94:	jne    0x422cd5
  422c96:	mov    ecx,DWORD PTR [esi]
  422c98:	test   ecx,ecx
  422c9a:	je     0x422c9e
  422c9c:	call   ecx
  422c9e:	add    esi,0x4
  422ca1:	cmp    esi,edi
  422ca3:	jb     0x422c92
  422ca5:	test   eax,eax
  422ca7:	jne    0x422cd5
  422ca9:	push   0x4237a1
  422cae:	call   0x423c20
  422cb3:	mov    esi,0x42a000
  422cb8:	mov    eax,esi
  422cba:	mov    edi,0x42a008
  422cbf:	cmp    eax,edi
  422cc1:	pop    ecx
  422cc2:	jae    0x422cd3
  422cc4:	mov    eax,DWORD PTR [esi]
  422cc6:	test   eax,eax
  422cc8:	je     0x422ccc
  422cca:	call   eax
  422ccc:	add    esi,0x4
  422ccf:	cmp    esi,edi
  422cd1:	jb     0x422cc4
  422cd3:	xor    eax,eax
  422cd5:	pop    edi
  422cd6:	pop    esi
  422cd7:	ret    
  422cd8:	push   ebp
  422cd9:	mov    ebp,esp
  422cdb:	push   esi
  422cdc:	push   edi
  422cdd:	push   0x8
  422cdf:	call   0x423b0f
  422ce4:	xor    esi,esi
  422ce6:	inc    esi
  422ce7:	cmp    DWORD PTR ds:0x464da4,esi
  422ced:	pop    ecx
  422cee:	jne    0x422d00
  422cf0:	push   DWORD PTR [ebp+0x8]
  422cf3:	call   DWORD PTR ds:0x428074
  422cf9:	push   eax
  422cfa:	call   DWORD PTR ds:0x428070
  422d00:	cmp    DWORD PTR [ebp+0xc],0x0
  422d04:	mov    al,BYTE PTR [ebp+0x10]
  422d07:	mov    DWORD PTR ds:0x464da0,esi
  422d0d:	mov    ds:0x464d9c,al
  422d12:	jne    0x422d66
  422d14:	mov    ecx,DWORD PTR ds:0x465508
  422d1a:	test   ecx,ecx
  422d1c:	je     0x422d47
  422d1e:	mov    eax,ds:0x465504
  422d23:	sub    eax,0x4
  422d26:	cmp    eax,ecx
  422d28:	jmp    0x422d40
  422d2a:	mov    eax,DWORD PTR [eax]
  422d2c:	test   eax,eax
  422d2e:	je     0x422d32
  422d30:	call   eax
  422d32:	mov    eax,ds:0x465504
  422d37:	sub    eax,0x4
  422d3a:	cmp    eax,DWORD PTR ds:0x465508
  422d40:	mov    ds:0x465504,eax
  422d45:	jae    0x422d2a
  422d47:	mov    eax,0x42a01c
  422d4c:	mov    esi,0x42a020
  422d51:	cmp    eax,esi
  422d53:	mov    edi,eax
  422d55:	jae    0x422d66
  422d57:	mov    eax,DWORD PTR [edi]
  422d59:	test   eax,eax
  422d5b:	je     0x422d5f
  422d5d:	call   eax
  422d5f:	add    edi,0x4
  422d62:	cmp    edi,esi
  422d64:	jb     0x422d57
  422d66:	mov    eax,0x42a024
  422d6b:	mov    esi,0x42a028
  422d70:	cmp    eax,esi
  422d72:	mov    edi,eax
  422d74:	jae    0x422d85
  422d76:	mov    eax,DWORD PTR [edi]
  422d78:	test   eax,eax
  422d7a:	je     0x422d7e
  422d7c:	call   eax
  422d7e:	add    edi,0x4
  422d81:	cmp    edi,esi
  422d83:	jb     0x422d76
  422d85:	cmp    DWORD PTR [ebp+0x10],0x0
  422d89:	pop    edi
  422d8a:	pop    esi
  422d8b:	je     0x422d96
  422d8d:	push   0x8
  422d8f:	call   0x423a7b
  422d94:	jmp    0x422da8
  422d96:	push   DWORD PTR [ebp+0x8]
  422d99:	mov    DWORD PTR ds:0x464da4,0x1
  422da3:	call   0x422c31
  422da8:	pop    ecx
  422da9:	pop    ebp
  422daa:	ret    
  422dab:	push   0x0
  422dad:	push   0x0
  422daf:	push   DWORD PTR [esp+0xc]
  422db3:	call   0x422cd8
  422db8:	add    esp,0xc
  422dbb:	ret    
  422dbc:	push   0x0
  422dbe:	push   0x1
  422dc0:	push   DWORD PTR [esp+0xc]
  422dc4:	call   0x422cd8
  422dc9:	add    esp,0xc
  422dcc:	ret    
  422dcd:	push   0x1
  422dcf:	push   0x0
  422dd1:	push   0x0
  422dd3:	call   0x422cd8
  422dd8:	add    esp,0xc
  422ddb:	ret    
  422ddc:	push   0x1
  422dde:	push   0x1
  422de0:	push   0x0
  422de2:	call   0x422cd8
  422de7:	add    esp,0xc
  422dea:	ret    
  422deb:	push   ebp
  422dec:	mov    ebp,esp
  422dee:	sub    esp,0x10c
  422df4:	mov    eax,ds:0x4646c0
  422df9:	xor    eax,DWORD PTR [ebp+0x4]
  422dfc:	mov    ecx,DWORD PTR [ebp+0x8]
  422dff:	push   ebx
  422e00:	push   esi
  422e01:	mov    DWORD PTR [ebp-0x4],eax
  422e04:	xor    edx,edx
  422e06:	push   edi
  422e07:	xor    eax,eax
  422e09:	cmp    ecx,DWORD PTR [eax*8+0x464458]
  422e10:	je     0x422e18
  422e12:	inc    eax
  422e13:	cmp    eax,0x12
  422e16:	jb     0x422e09
  422e18:	mov    esi,eax
  422e1a:	shl    esi,0x3
  422e1d:	cmp    ecx,DWORD PTR [esi+0x464458]
  422e23:	jne    0x422f4c
  422e29:	mov    eax,ds:0x464d5c
  422e2e:	cmp    eax,0x1
  422e31:	je     0x422f27
  422e37:	cmp    eax,edx
  422e39:	jne    0x422e48
  422e3b:	cmp    DWORD PTR ds:0x464450,0x1
  422e42:	je     0x422f27
  422e48:	cmp    ecx,0xfc
  422e4e:	je     0x422f4c
  422e54:	push   0x104
  422e59:	lea    eax,[ebp-0x10c]
  422e5f:	push   eax
  422e60:	push   edx
  422e61:	mov    BYTE PTR [ebp-0x8],dl
  422e64:	call   DWORD PTR ds:0x428080
  422e6a:	test   eax,eax
  422e6c:	jne    0x422e81
  422e6e:	lea    eax,[ebp-0x10c]
  422e74:	push   0x4284dc
  422e79:	push   eax
  422e7a:	call   0x423d30
  422e7f:	pop    ecx
  422e80:	pop    ecx
  422e81:	lea    eax,[ebp-0x10c]
  422e87:	push   eax
  422e88:	lea    edi,[ebp-0x10c]
  422e8e:	call   0x423f60
  422e93:	inc    eax
  422e94:	cmp    eax,0x3c
  422e97:	pop    ecx
  422e98:	jbe    0x422ec3
  422e9a:	lea    eax,[ebp-0x10c]
  422ea0:	push   eax
  422ea1:	call   0x423f60
  422ea6:	mov    edi,eax
  422ea8:	lea    eax,[ebp-0x10c]
  422eae:	sub    eax,0x3b
  422eb1:	push   0x3
  422eb3:	add    edi,eax
  422eb5:	push   0x4284d8
  422eba:	push   edi
  422ebb:	call   0x423e30
  422ec0:	add    esp,0x10
  422ec3:	push   edi
  422ec4:	call   0x423f60
  422ec9:	push   DWORD PTR [esi+0x46445c]
  422ecf:	mov    ebx,eax
  422ed1:	call   0x423f60
  422ed6:	lea    eax,[ebx+eax*1+0x1c]
  422eda:	pop    ecx
  422edb:	add    eax,0x3
  422ede:	pop    ecx
  422edf:	and    eax,0xfffffffc
  422ee2:	call   0x4239a0
  422ee7:	mov    ebx,esp
  422ee9:	push   0x4284bc
  422eee:	push   ebx
  422eef:	call   0x423d30
  422ef4:	push   edi
  422ef5:	push   ebx
  422ef6:	call   0x423d40
  422efb:	push   0x4284b8
  422f00:	push   ebx
  422f01:	call   0x423d40
  422f06:	push   DWORD PTR [esi+0x46445c]
  422f0c:	push   ebx
  422f0d:	call   0x423d40
  422f12:	push   0x12010
  422f17:	push   0x428490
  422f1c:	push   ebx
  422f1d:	call   0x423c32
  422f22:	add    esp,0x2c
  422f25:	jmp    0x422f4c
  422f27:	push   edx
  422f28:	lea    eax,[ebp+0x8]
  422f2b:	push   eax
  422f2c:	lea    esi,[esi+0x46445c]
  422f32:	push   DWORD PTR [esi]
  422f34:	call   0x423f60
  422f39:	pop    ecx
  422f3a:	push   eax
  422f3b:	push   DWORD PTR [esi]
  422f3d:	push   0xfffffff4
  422f3f:	call   DWORD PTR ds:0x42807c
  422f45:	push   eax
  422f46:	call   DWORD PTR ds:0x428078
  422f4c:	lea    esp,[ebp-0x118]
  422f52:	mov    ecx,DWORD PTR [ebp-0x4]
  422f55:	xor    ecx,DWORD PTR [ebp+0x4]
  422f58:	call   0x42401c
  422f5d:	pop    edi
  422f5e:	pop    esi
  422f5f:	pop    ebx
  422f60:	leave  
  422f61:	ret    
  422f62:	mov    eax,ds:0x464d5c
  422f67:	cmp    eax,0x1
  422f6a:	je     0x422f79
  422f6c:	test   eax,eax
  422f6e:	jne    0x422f9a
  422f70:	cmp    DWORD PTR ds:0x464450,0x1
  422f77:	jne    0x422f9a
  422f79:	push   0xfc
  422f7e:	call   0x422deb
  422f83:	mov    eax,ds:0x464da8
  422f88:	test   eax,eax
  422f8a:	pop    ecx
  422f8b:	je     0x422f8f
  422f8d:	call   eax
  422f8f:	push   0xff
  422f94:	call   0x422deb
  422f99:	pop    ecx
  422f9a:	ret    
  422f9b:	push   ebp
  422f9c:	mov    ebp,esp
  422f9e:	push   ecx
  422f9f:	push   ebx
  422fa0:	push   esi
  422fa1:	push   edi
  422fa2:	call   0x423803
  422fa7:	mov    edi,DWORD PTR [ebp+0x8]
  422faa:	mov    esi,eax
  422fac:	mov    edx,DWORD PTR [esi+0x54]
  422faf:	mov    eax,ds:0x46456c
  422fb4:	mov    ecx,edx
  422fb6:	cmp    DWORD PTR [ecx],edi
  422fb8:	je     0x422fc7
  422fba:	lea    ebx,[eax+eax*2]
  422fbd:	add    ecx,0xc
  422fc0:	lea    ebx,[edx+ebx*4]
  422fc3:	cmp    ecx,ebx
  422fc5:	jb     0x422fb6
  422fc7:	lea    eax,[eax+eax*2]
  422fca:	lea    eax,[edx+eax*4]
  422fcd:	cmp    ecx,eax
  422fcf:	jae    0x422fd5
  422fd1:	cmp    DWORD PTR [ecx],edi
  422fd3:	je     0x422fd7
  422fd5:	xor    ecx,ecx
  422fd7:	test   ecx,ecx
  422fd9:	je     0x4230f1
  422fdf:	mov    ebx,DWORD PTR [ecx+0x8]
  422fe2:	test   ebx,ebx
  422fe4:	mov    DWORD PTR [ebp+0x8],ebx
  422fe7:	je     0x4230f1
  422fed:	cmp    ebx,0x5
  422ff0:	jne    0x422ffe
  422ff2:	and    DWORD PTR [ecx+0x8],0x0
  422ff6:	xor    eax,eax
  422ff8:	inc    eax
  422ff9:	jmp    0x4230fa
  422ffe:	cmp    ebx,0x1
  423001:	je     0x4230ec
  423007:	mov    eax,DWORD PTR [esi+0x58]
  42300a:	mov    DWORD PTR [ebp-0x4],eax
  42300d:	mov    eax,DWORD PTR [ebp+0xc]
  423010:	mov    DWORD PTR [esi+0x58],eax
  423013:	mov    eax,DWORD PTR [ecx+0x4]
  423016:	cmp    eax,0x8
  423019:	jne    0x4230de
  42301f:	mov    edx,DWORD PTR ds:0x464560
  423025:	mov    eax,ds:0x464564
  42302a:	add    eax,edx
  42302c:	cmp    edx,eax
  42302e:	jge    0x423057
  423030:	lea    eax,[edx+edx*2]
  423033:	shl    eax,0x2
  423036:	mov    edi,DWORD PTR [esi+0x54]
  423039:	and    DWORD PTR [eax+edi*1+0x8],0x0
  42303e:	mov    edi,DWORD PTR ds:0x464560
  423044:	mov    ebx,DWORD PTR ds:0x464564
  42304a:	inc    edx
  42304b:	add    ebx,edi
  42304d:	add    eax,0xc
  423050:	cmp    edx,ebx
  423052:	jl     0x423036
  423054:	mov    ebx,DWORD PTR [ebp+0x8]
  423057:	mov    ecx,DWORD PTR [ecx]
  423059:	cmp    ecx,0xc000008e
  42305f:	mov    edi,DWORD PTR [esi+0x5c]
  423062:	jne    0x42306d
  423064:	mov    DWORD PTR [esi+0x5c],0x83
  42306b:	jmp    0x4230d1
  42306d:	cmp    ecx,0xc0000090
  423073:	jne    0x42307e
  423075:	mov    DWORD PTR [esi+0x5c],0x81
  42307c:	jmp    0x4230d1
  42307e:	cmp    ecx,0xc0000091
  423084:	jne    0x42308f
  423086:	mov    DWORD PTR [esi+0x5c],0x84
  42308d:	jmp    0x4230d1
  42308f:	cmp    ecx,0xc0000093
  423095:	jne    0x4230a0
  423097:	mov    DWORD PTR [esi+0x5c],0x85
  42309e:	jmp    0x4230d1
  4230a0:	cmp    ecx,0xc000008d
  4230a6:	jne    0x4230b1
  4230a8:	mov    DWORD PTR [esi+0x5c],0x82
  4230af:	jmp    0x4230d1
  4230b1:	cmp    ecx,0xc000008f
  4230b7:	jne    0x4230c2
  4230b9:	mov    DWORD PTR [esi+0x5c],0x86
  4230c0:	jmp    0x4230d1
  4230c2:	cmp    ecx,0xc0000092
  4230c8:	jne    0x4230d1
  4230ca:	mov    DWORD PTR [esi+0x5c],0x8a
  4230d1:	push   DWORD PTR [esi+0x5c]
  4230d4:	push   0x8
  4230d6:	call   ebx
  4230d8:	pop    ecx
  4230d9:	mov    DWORD PTR [esi+0x5c],edi
  4230dc:	jmp    0x4230e5
  4230de:	and    DWORD PTR [ecx+0x8],0x0
  4230e2:	push   eax
  4230e3:	call   ebx
  4230e5:	mov    eax,DWORD PTR [ebp-0x4]
  4230e8:	pop    ecx
  4230e9:	mov    DWORD PTR [esi+0x58],eax
  4230ec:	or     eax,0xffffffff
  4230ef:	jmp    0x4230fa
  4230f1:	push   DWORD PTR [ebp+0xc]
  4230f4:	call   DWORD PTR ds:0x428084
  4230fa:	pop    edi
  4230fb:	pop    esi
  4230fc:	pop    ebx
  4230fd:	leave  
  4230fe:	ret    
  4230ff:	cmp    DWORD PTR ds:0x46550c,0x0
  423106:	jne    0x42310d
  423108:	call   0x42453c
  42310d:	push   esi
  42310e:	mov    esi,DWORD PTR ds:0x465514
  423114:	test   esi,esi
  423116:	jne    0x42311f
  423118:	mov    esi,0x4284f3
  42311d:	jmp    0x423164
  42311f:	mov    al,BYTE PTR [esi]
  423121:	cmp    al,0x22
  423123:	jne    0x42314d
  423125:	inc    esi
  423126:	mov    al,BYTE PTR [esi]
  423128:	cmp    al,0x22
  42312a:	je     0x42315d
  42312c:	test   al,al
  42312e:	je     0x423146
  423130:	movzx  eax,al
  423133:	push   eax
  423134:	call   0x42405b
  423139:	test   eax,eax
  42313b:	pop    ecx
  42313c:	je     0x42313f
  42313e:	inc    esi
  42313f:	inc    esi
  423140:	mov    al,BYTE PTR [esi]
  423142:	cmp    al,0x22
  423144:	jne    0x42312c
  423146:	cmp    BYTE PTR [esi],0x22
  423149:	jne    0x42315e
  42314b:	jmp    0x42315d
  42314d:	cmp    al,0x20
  42314f:	jbe    0x42315e
  423151:	inc    esi
  423152:	cmp    BYTE PTR [esi],0x20
  423155:	ja     0x423151
  423157:	jmp    0x42315e
  423159:	cmp    al,0x20
  42315b:	ja     0x423164
  42315d:	inc    esi
  42315e:	mov    al,BYTE PTR [esi]
  423160:	test   al,al
  423162:	jne    0x423159
  423164:	mov    eax,esi
  423166:	pop    esi
  423167:	ret    
  423168:	push   ebx
  423169:	xor    ebx,ebx
  42316b:	cmp    DWORD PTR ds:0x46550c,ebx
  423171:	push   esi
  423172:	push   edi
  423173:	jne    0x42317a
  423175:	call   0x42453c
  42317a:	mov    esi,DWORD PTR ds:0x464d54
  423180:	xor    edi,edi
  423182:	cmp    esi,ebx
  423184:	jne    0x423198
  423186:	jmp    0x4231b8
  423188:	cmp    al,0x3d
  42318a:	je     0x42318d
  42318c:	inc    edi
  42318d:	push   esi
  42318e:	call   0x423f60
  423193:	pop    ecx
  423194:	lea    esi,[esi+eax*1+0x1]
  423198:	mov    al,BYTE PTR [esi]
  42319a:	cmp    al,bl
  42319c:	jne    0x423188
  42319e:	lea    eax,[edi*4+0x4]
  4231a5:	push   eax
  4231a6:	call   0x424672
  4231ab:	mov    edi,eax
  4231ad:	cmp    edi,ebx
  4231af:	pop    ecx
  4231b0:	mov    DWORD PTR ds:0x464d84,edi
  4231b6:	jne    0x4231bd
  4231b8:	or     eax,0xffffffff
  4231bb:	jmp    0x423215
  4231bd:	mov    esi,DWORD PTR ds:0x464d54
  4231c3:	push   ebp
  4231c4:	jmp    0x4231f0
  4231c6:	push   esi
  4231c7:	call   0x423f60
  4231cc:	mov    ebp,eax
  4231ce:	inc    ebp
  4231cf:	cmp    BYTE PTR [esi],0x3d
  4231d2:	pop    ecx
  4231d3:	je     0x4231ee
  4231d5:	push   ebp
  4231d6:	call   0x424672
  4231db:	cmp    eax,ebx
  4231dd:	pop    ecx
  4231de:	mov    DWORD PTR [edi],eax
  4231e0:	je     0x423219
  4231e2:	push   esi
  4231e3:	push   eax
  4231e4:	call   0x423d30
  4231e9:	pop    ecx
  4231ea:	pop    ecx
  4231eb:	add    edi,0x4
  4231ee:	add    esi,ebp
  4231f0:	cmp    BYTE PTR [esi],bl
  4231f2:	jne    0x4231c6
  4231f4:	push   DWORD PTR ds:0x464d54
  4231fa:	call   0x42455a
  4231ff:	mov    DWORD PTR ds:0x464d54,ebx
  423205:	mov    DWORD PTR [edi],ebx
  423207:	mov    DWORD PTR ds:0x465500,0x1
  423211:	xor    eax,eax
  423213:	pop    ecx
  423214:	pop    ebp
  423215:	pop    edi
  423216:	pop    esi
  423217:	pop    ebx
  423218:	ret    
  423219:	push   DWORD PTR ds:0x464d84
  42321f:	call   0x42455a
  423224:	mov    DWORD PTR ds:0x464d84,ebx
  42322a:	or     eax,0xffffffff
  42322d:	jmp    0x423213
  42322f:	push   ebp
  423230:	mov    ebp,esp
  423232:	push   ecx
  423233:	push   ebx
  423234:	mov    ebx,DWORD PTR [ebp+0xc]
  423237:	xor    edx,edx
  423239:	cmp    DWORD PTR [ebp+0x8],edx
  42323c:	push   edi
  42323d:	mov    DWORD PTR [esi],edx
  42323f:	mov    edi,ecx
  423241:	mov    DWORD PTR [ebx],0x1
  423247:	je     0x423252
  423249:	mov    ecx,DWORD PTR [ebp+0x8]
  42324c:	add    DWORD PTR [ebp+0x8],0x4
  423250:	mov    DWORD PTR [ecx],edi
  423252:	cmp    BYTE PTR [eax],0x22
  423255:	jne    0x423265
  423257:	xor    ecx,ecx
  423259:	test   edx,edx
  42325b:	sete   cl
  42325e:	inc    eax
  42325f:	mov    edx,ecx
  423261:	mov    cl,0x22
  423263:	jmp    0x423292
  423265:	inc    DWORD PTR [esi]
  423267:	test   edi,edi
  423269:	je     0x423270
  42326b:	mov    cl,BYTE PTR [eax]
  42326d:	mov    BYTE PTR [edi],cl
  42326f:	inc    edi
  423270:	mov    cl,BYTE PTR [eax]
  423272:	movzx  ebx,cl
  423275:	inc    eax
  423276:	test   BYTE PTR [ebx+0x4651c1],0x4
  42327d:	je     0x42328b
  42327f:	inc    DWORD PTR [esi]
  423281:	test   edi,edi
  423283:	je     0x42328a
  423285:	mov    bl,BYTE PTR [eax]
  423287:	mov    BYTE PTR [edi],bl
  423289:	inc    edi
  42328a:	inc    eax
  42328b:	test   cl,cl
  42328d:	mov    ebx,DWORD PTR [ebp+0xc]
  423290:	je     0x4232c4
  423292:	test   edx,edx
  423294:	jne    0x423252
  423296:	cmp    cl,0x20
  423299:	je     0x4232a0
  42329b:	cmp    cl,0x9
  42329e:	jne    0x423252
  4232a0:	test   edi,edi
  4232a2:	je     0x4232a8
  4232a4:	and    BYTE PTR [edi-0x1],0x0
  4232a8:	and    DWORD PTR [ebp-0x4],0x0
  4232ac:	cmp    BYTE PTR [eax],0x0
  4232af:	je     0x42338b
  4232b5:	mov    cl,BYTE PTR [eax]
  4232b7:	cmp    cl,0x20
  4232ba:	je     0x4232c1
  4232bc:	cmp    cl,0x9
  4232bf:	jne    0x4232c7
  4232c1:	inc    eax
  4232c2:	jmp    0x4232b5
  4232c4:	dec    eax
  4232c5:	jmp    0x4232a8
  4232c7:	cmp    BYTE PTR [eax],0x0
  4232ca:	je     0x42338b
  4232d0:	cmp    DWORD PTR [ebp+0x8],0x0
  4232d4:	je     0x4232df
  4232d6:	mov    ecx,DWORD PTR [ebp+0x8]
  4232d9:	add    DWORD PTR [ebp+0x8],0x4
  4232dd:	mov    DWORD PTR [ecx],edi
  4232df:	inc    DWORD PTR [ebx]
  4232e1:	xor    ebx,ebx
  4232e3:	inc    ebx
  4232e4:	xor    edx,edx
  4232e6:	jmp    0x4232ea
  4232e8:	inc    eax
  4232e9:	inc    edx
  4232ea:	cmp    BYTE PTR [eax],0x5c
  4232ed:	je     0x4232e8
  4232ef:	cmp    BYTE PTR [eax],0x22
  4232f2:	jne    0x42331a
  4232f4:	test   dl,0x1
  4232f7:	jne    0x423318
  4232f9:	cmp    DWORD PTR [ebp-0x4],0x0
  4232fd:	je     0x42330b
  4232ff:	lea    ecx,[eax+0x1]
  423302:	cmp    BYTE PTR [ecx],0x22
  423305:	jne    0x42330b
  423307:	mov    eax,ecx
  423309:	jmp    0x42330d
  42330b:	xor    ebx,ebx
  42330d:	xor    ecx,ecx
  42330f:	cmp    DWORD PTR [ebp-0x4],ecx
  423312:	sete   cl
  423315:	mov    DWORD PTR [ebp-0x4],ecx
  423318:	shr    edx,1
  42331a:	test   edx,edx
  42331c:	je     0x42332b
  42331e:	test   edi,edi
  423320:	je     0x423326
  423322:	mov    BYTE PTR [edi],0x5c
  423325:	inc    edi
  423326:	inc    DWORD PTR [esi]
  423328:	dec    edx
  423329:	jne    0x42331e
  42332b:	mov    cl,BYTE PTR [eax]
  42332d:	test   cl,cl
  42332f:	je     0x423379
  423331:	cmp    DWORD PTR [ebp-0x4],0x0
  423335:	jne    0x423341
  423337:	cmp    cl,0x20
  42333a:	je     0x423379
  42333c:	cmp    cl,0x9
  42333f:	je     0x423379
  423341:	test   ebx,ebx
  423343:	je     0x423373
  423345:	test   edi,edi
  423347:	je     0x423362
  423349:	movzx  edx,cl
  42334c:	test   BYTE PTR [edx+0x4651c1],0x4
  423353:	je     0x42335b
  423355:	mov    BYTE PTR [edi],cl
  423357:	inc    edi
  423358:	inc    eax
  423359:	inc    DWORD PTR [esi]
  42335b:	mov    cl,BYTE PTR [eax]
  42335d:	mov    BYTE PTR [edi],cl
  42335f:	inc    edi
  423360:	jmp    0x423371
  423362:	movzx  ecx,cl
  423365:	test   BYTE PTR [ecx+0x4651c1],0x4
  42336c:	je     0x423371
  42336e:	inc    eax
  42336f:	inc    DWORD PTR [esi]
  423371:	inc    DWORD PTR [esi]
  423373:	inc    eax
  423374:	jmp    0x4232e1
  423379:	test   edi,edi
  42337b:	je     0x423381
  42337d:	and    BYTE PTR [edi],0x0
  423380:	inc    edi
  423381:	inc    DWORD PTR [esi]
  423383:	mov    ebx,DWORD PTR [ebp+0xc]
  423386:	jmp    0x4232ac
  42338b:	mov    eax,DWORD PTR [ebp+0x8]
  42338e:	test   eax,eax
  423390:	je     0x423395
  423392:	and    DWORD PTR [eax],0x0
  423395:	inc    DWORD PTR [ebx]
  423397:	pop    edi
  423398:	pop    ebx
  423399:	leave  
  42339a:	ret    
  42339b:	push   ebp
  42339c:	mov    ebp,esp
  42339e:	push   ecx
  42339f:	push   ecx
  4233a0:	push   ebx
  4233a1:	push   esi
  4233a2:	push   edi
  4233a3:	xor    edi,edi
  4233a5:	cmp    DWORD PTR ds:0x46550c,edi
  4233ab:	jne    0x4233b2
  4233ad:	call   0x42453c
  4233b2:	and    BYTE PTR ds:0x464eb4,0x0
  4233b9:	push   0x104
  4233be:	mov    esi,0x464db0
  4233c3:	push   esi
  4233c4:	push   edi
  4233c5:	call   DWORD PTR ds:0x428080
  4233cb:	mov    eax,ds:0x465514
  4233d0:	cmp    eax,edi
  4233d2:	mov    DWORD PTR ds:0x464d94,esi
  4233d8:	je     0x4233e1
  4233da:	cmp    BYTE PTR [eax],0x0
  4233dd:	mov    ebx,eax
  4233df:	jne    0x4233e3
  4233e1:	mov    ebx,esi
  4233e3:	lea    eax,[ebp-0x4]
  4233e6:	push   eax
  4233e7:	push   edi
  4233e8:	lea    esi,[ebp-0x8]
  4233eb:	xor    ecx,ecx
  4233ed:	mov    eax,ebx
  4233ef:	call   0x42322f
  4233f4:	mov    esi,DWORD PTR [ebp-0x4]
  4233f7:	mov    eax,DWORD PTR [ebp-0x8]
  4233fa:	shl    esi,0x2
  4233fd:	add    eax,esi
  4233ff:	push   eax
  423400:	call   0x424672
  423405:	mov    edi,eax
  423407:	add    esp,0xc
  42340a:	test   edi,edi
  42340c:	jne    0x423413
  42340e:	or     eax,0xffffffff
  423411:	jmp    0x423438
  423413:	lea    eax,[ebp-0x4]
  423416:	push   eax
  423417:	lea    ecx,[esi+edi*1]
  42341a:	push   edi
  42341b:	lea    esi,[ebp-0x8]
  42341e:	mov    eax,ebx
  423420:	call   0x42322f
  423425:	mov    eax,DWORD PTR [ebp-0x4]
  423428:	dec    eax
  423429:	pop    ecx
  42342a:	mov    ds:0x464d78,eax
  42342f:	pop    ecx
  423430:	mov    DWORD PTR ds:0x464d7c,edi
  423436:	xor    eax,eax
  423438:	pop    edi
  423439:	pop    esi
  42343a:	pop    ebx
  42343b:	leave  
  42343c:	ret    
  42343d:	push   ecx
  42343e:	push   ecx
  42343f:	mov    eax,ds:0x464eb8
  423444:	push   ebx
  423445:	push   ebp
  423446:	push   esi
  423447:	push   edi
  423448:	mov    edi,DWORD PTR ds:0x428094
  42344e:	xor    ebx,ebx
  423450:	xor    esi,esi
  423452:	cmp    eax,ebx
  423454:	push   0x2
  423456:	pop    ebp
  423457:	jne    0x423486
  423459:	call   edi
  42345b:	mov    esi,eax
  42345d:	cmp    esi,ebx
  42345f:	je     0x42346d
  423461:	mov    DWORD PTR ds:0x464eb8,0x1
  42346b:	jmp    0x42348b
  42346d:	call   DWORD PTR ds:0x428034
  423473:	cmp    eax,0x78
  423476:	jne    0x423481
  423478:	mov    eax,ebp
  42347a:	mov    ds:0x464eb8,eax
  42347f:	jmp    0x423486
  423481:	mov    eax,ds:0x464eb8
  423486:	cmp    eax,0x1
  423489:	jne    0x423508
  42348b:	cmp    esi,ebx
  42348d:	jne    0x423497
  42348f:	call   edi
  423491:	mov    esi,eax
  423493:	cmp    esi,ebx
  423495:	je     0x423510
  423497:	cmp    WORD PTR [esi],bx
  42349a:	mov    eax,esi
  42349c:	je     0x4234ac
  42349e:	add    eax,ebp
  4234a0:	cmp    WORD PTR [eax],bx
  4234a3:	jne    0x42349e
  4234a5:	add    eax,ebp
  4234a7:	cmp    WORD PTR [eax],bx
  4234aa:	jne    0x42349e
  4234ac:	mov    edi,DWORD PTR ds:0x428090
  4234b2:	push   ebx
  4234b3:	push   ebx
  4234b4:	push   ebx
  4234b5:	sub    eax,esi
  4234b7:	push   ebx
  4234b8:	sar    eax,1
  4234ba:	inc    eax
  4234bb:	push   eax
  4234bc:	push   esi
  4234bd:	push   ebx
  4234be:	push   ebx
  4234bf:	mov    DWORD PTR [esp+0x34],eax
  4234c3:	call   edi
  4234c5:	mov    ebp,eax
  4234c7:	cmp    ebp,ebx
  4234c9:	je     0x4234fd
  4234cb:	push   ebp
  4234cc:	call   0x424672
  4234d1:	cmp    eax,ebx
  4234d3:	pop    ecx
  4234d4:	mov    DWORD PTR [esp+0x10],eax
  4234d8:	je     0x4234fd
  4234da:	push   ebx
  4234db:	push   ebx
  4234dc:	push   ebp
  4234dd:	push   eax
  4234de:	push   DWORD PTR [esp+0x24]
  4234e2:	push   esi
  4234e3:	push   ebx
  4234e4:	push   ebx
  4234e5:	call   edi
  4234e7:	test   eax,eax
  4234e9:	jne    0x4234f9
  4234eb:	push   DWORD PTR [esp+0x10]
  4234ef:	call   0x42455a
  4234f4:	pop    ecx
  4234f5:	mov    DWORD PTR [esp+0x10],ebx
  4234f9:	mov    ebx,DWORD PTR [esp+0x10]
  4234fd:	push   esi
  4234fe:	call   DWORD PTR ds:0x42808c
  423504:	mov    eax,ebx
  423506:	jmp    0x423558
  423508:	cmp    eax,ebp
  42350a:	je     0x423514
  42350c:	cmp    eax,ebx
  42350e:	je     0x423514
  423510:	xor    eax,eax
  423512:	jmp    0x423558
  423514:	call   DWORD PTR ds:0x428018
  42351a:	mov    esi,eax
  42351c:	cmp    esi,ebx
  42351e:	je     0x423510
  423520:	cmp    BYTE PTR [esi],bl
  423522:	je     0x42352e
  423524:	inc    eax
  423525:	cmp    BYTE PTR [eax],bl
  423527:	jne    0x423524
  423529:	inc    eax
  42352a:	cmp    BYTE PTR [eax],bl
  42352c:	jne    0x423524
  42352e:	sub    eax,esi
  423530:	inc    eax
  423531:	mov    ebp,eax
  423533:	push   ebp
  423534:	call   0x424672
  423539:	mov    edi,eax
  42353b:	cmp    edi,ebx
  42353d:	pop    ecx
  42353e:	jne    0x423544
  423540:	xor    edi,edi
  423542:	jmp    0x42354f
  423544:	push   ebp
  423545:	push   esi
  423546:	push   edi
  423547:	call   0x424690
  42354c:	add    esp,0xc
  42354f:	push   esi
  423550:	call   DWORD PTR ds:0x428088
  423556:	mov    eax,edi
  423558:	pop    edi
  423559:	pop    esi
  42355a:	pop    ebp
  42355b:	pop    ebx
  42355c:	pop    ecx
  42355d:	pop    ecx
  42355e:	ret    
  42355f:	sub    esp,0x48
  423562:	push   ebx
  423563:	mov    ebx,0x480
  423568:	push   ebx
  423569:	call   0x424672
  42356e:	test   eax,eax
  423570:	pop    ecx
  423571:	jne    0x42357b
  423573:	or     eax,0xffffffff
  423576:	jmp    0x423758
  42357b:	mov    ds:0x465400,eax
  423580:	mov    DWORD PTR ds:0x4653e8,0x20
  42358a:	lea    ecx,[eax+0x480]
  423590:	jmp    0x4235b0
  423592:	and    BYTE PTR [eax+0x4],0x0
  423596:	or     DWORD PTR [eax],0xffffffff
  423599:	and    DWORD PTR [eax+0x8],0x0
  42359d:	mov    BYTE PTR [eax+0x5],0xa
  4235a1:	mov    ecx,DWORD PTR ds:0x465400
  4235a7:	add    eax,0x24
  4235aa:	add    ecx,0x480
  4235b0:	cmp    eax,ecx
  4235b2:	jb     0x423592
  4235b4:	push   ebp
  4235b5:	push   esi
  4235b6:	push   edi
  4235b7:	lea    eax,[esp+0x14]
  4235bb:	push   eax
  4235bc:	call   DWORD PTR ds:0x428060
  4235c2:	cmp    WORD PTR [esp+0x46],0x0
  4235c8:	je     0x4236b7
  4235ce:	mov    eax,DWORD PTR [esp+0x48]
  4235d2:	test   eax,eax
  4235d4:	je     0x4236b7
  4235da:	mov    edi,DWORD PTR [eax]
  4235dc:	lea    ebp,[eax+0x4]
  4235df:	lea    eax,[edi+ebp*1]
  4235e2:	mov    DWORD PTR [esp+0x10],eax
  4235e6:	mov    eax,0x800
  4235eb:	cmp    edi,eax
  4235ed:	jl     0x4235f1
  4235ef:	mov    edi,eax
  4235f1:	cmp    DWORD PTR ds:0x4653e8,edi
  4235f7:	jge    0x423647
  4235f9:	mov    esi,0x465404
  4235fe:	push   ebx
  4235ff:	call   0x424672
  423604:	test   eax,eax
  423606:	pop    ecx
  423607:	je     0x423641
  423609:	add    DWORD PTR ds:0x4653e8,0x20
  423610:	mov    DWORD PTR [esi],eax
  423612:	lea    ecx,[eax+0x480]
  423618:	jmp    0x423630
  42361a:	and    BYTE PTR [eax+0x4],0x0
  42361e:	or     DWORD PTR [eax],0xffffffff
  423621:	and    DWORD PTR [eax+0x8],0x0
  423625:	mov    BYTE PTR [eax+0x5],0xa
  423629:	mov    ecx,DWORD PTR [esi]
  42362b:	add    eax,0x24
  42362e:	add    ecx,ebx
  423630:	cmp    eax,ecx
  423632:	jb     0x42361a
  423634:	add    esi,0x4
  423637:	cmp    DWORD PTR ds:0x4653e8,edi
  42363d:	jl     0x4235fe
  42363f:	jmp    0x423647
  423641:	mov    edi,DWORD PTR ds:0x4653e8
  423647:	xor    ebx,ebx
  423649:	test   edi,edi
  42364b:	jle    0x4236b7
  42364d:	mov    eax,DWORD PTR [esp+0x10]
  423651:	mov    eax,DWORD PTR [eax]
  423653:	cmp    eax,0xffffffff
  423656:	je     0x4236ac
  423658:	mov    cl,BYTE PTR [ebp+0x0]
  42365b:	test   cl,0x1
  42365e:	je     0x4236ac
  423660:	test   cl,0x8
  423663:	jne    0x423670
  423665:	push   eax
  423666:	call   DWORD PTR ds:0x42809c
  42366c:	test   eax,eax
  42366e:	je     0x4236ac
  423670:	mov    ecx,ebx
  423672:	mov    eax,ebx
  423674:	and    eax,0x1f
  423677:	lea    eax,[eax+eax*8]
  42367a:	sar    ecx,0x5
  42367d:	mov    ecx,DWORD PTR [ecx*4+0x465400]
  423684:	lea    esi,[ecx+eax*4]
  423687:	mov    eax,DWORD PTR [esp+0x10]
  42368b:	mov    eax,DWORD PTR [eax]
  42368d:	mov    DWORD PTR [esi],eax
  42368f:	mov    al,BYTE PTR [ebp+0x0]
  423692:	mov    BYTE PTR [esi+0x4],al
  423695:	lea    eax,[esi+0xc]
  423698:	push   0xfa0
  42369d:	push   eax
  42369e:	call   0x4249dd
  4236a3:	test   eax,eax
  4236a5:	pop    ecx
  4236a6:	pop    ecx
  4236a7:	je     0x4236d7
  4236a9:	inc    DWORD PTR [esi+0x8]
  4236ac:	add    DWORD PTR [esp+0x10],0x4
  4236b1:	inc    ebx
  4236b2:	inc    ebp
  4236b3:	cmp    ebx,edi
  4236b5:	jl     0x42364d
  4236b7:	xor    ebx,ebx
  4236b9:	mov    ecx,DWORD PTR ds:0x465400
  4236bf:	lea    eax,[ebx+ebx*8]
  4236c2:	lea    esi,[ecx+eax*4]
  4236c5:	cmp    DWORD PTR [esi],0xffffffff
  4236c8:	jne    0x423739
  4236ca:	test   ebx,ebx
  4236cc:	mov    BYTE PTR [esi+0x4],0x81
  4236d0:	jne    0x4236dc
  4236d2:	push   0xfffffff6
  4236d4:	pop    eax
  4236d5:	jmp    0x4236e6
  4236d7:	or     eax,0xffffffff
  4236da:	jmp    0x423755
  4236dc:	mov    eax,ebx
  4236de:	dec    eax
  4236df:	neg    eax
  4236e1:	sbb    eax,eax
  4236e3:	add    eax,0xfffffff5
  4236e6:	push   eax
  4236e7:	call   DWORD PTR ds:0x42807c
  4236ed:	mov    edi,eax
  4236ef:	cmp    edi,0xffffffff
  4236f2:	je     0x423733
  4236f4:	push   edi
  4236f5:	call   DWORD PTR ds:0x42809c
  4236fb:	test   eax,eax
  4236fd:	je     0x423733
  4236ff:	and    eax,0xff
  423704:	cmp    eax,0x2
  423707:	mov    DWORD PTR [esi],edi
  423709:	jne    0x423711
  42370b:	or     BYTE PTR [esi+0x4],0x40
  42370f:	jmp    0x42371a
  423711:	cmp    eax,0x3
  423714:	jne    0x42371a
  423716:	or     BYTE PTR [esi+0x4],0x8
  42371a:	lea    eax,[esi+0xc]
  42371d:	push   0xfa0
  423722:	push   eax
  423723:	call   0x4249dd
  423728:	test   eax,eax
  42372a:	pop    ecx
  42372b:	pop    ecx
  42372c:	je     0x4236d7
  42372e:	inc    DWORD PTR [esi+0x8]
  423731:	jmp    0x42373d
  423733:	or     BYTE PTR [esi+0x4],0x40
  423737:	jmp    0x42373d
  423739:	or     BYTE PTR [esi+0x4],0x80
  42373d:	inc    ebx
  42373e:	cmp    ebx,0x3
  423741:	jl     0x4236b9
  423747:	push   DWORD PTR ds:0x4653e8
  42374d:	call   DWORD PTR ds:0x428098
  423753:	xor    eax,eax
  423755:	pop    edi
  423756:	pop    esi
  423757:	pop    ebp
  423758:	pop    ebx
  423759:	add    esp,0x48
  42375c:	ret    
  42375d:	push   0xc
  42375f:	push   0x4284f8
  423764:	call   0x423950
  423769:	mov    DWORD PTR [ebp-0x1c],0x428f50
  423770:	cmp    DWORD PTR [ebp-0x1c],0x428f50
  423777:	jae    0x42379b
  423779:	and    DWORD PTR [ebp-0x4],0x0
  42377d:	mov    eax,DWORD PTR [ebp-0x1c]
  423780:	mov    eax,DWORD PTR [eax]
  423782:	test   eax,eax
  423784:	je     0x423791
  423786:	call   eax
  423788:	jmp    0x423791
  42378a:	xor    eax,eax
  42378c:	inc    eax
  42378d:	ret    
  42378e:	mov    esp,DWORD PTR [ebp-0x18]
  423791:	or     DWORD PTR [ebp-0x4],0xffffffff
  423795:	add    DWORD PTR [ebp-0x1c],0x4
  423799:	jmp    0x423770
  42379b:	call   0x42398b
  4237a0:	ret    
  4237a1:	push   0xc
  4237a3:	push   0x428508
  4237a8:	call   0x423950
  4237ad:	mov    DWORD PTR [ebp-0x1c],0x428f58
  4237b4:	cmp    DWORD PTR [ebp-0x1c],0x428f58
  4237bb:	jae    0x4237df
  4237bd:	and    DWORD PTR [ebp-0x4],0x0
  4237c1:	mov    eax,DWORD PTR [ebp-0x1c]
  4237c4:	mov    eax,DWORD PTR [eax]
  4237c6:	test   eax,eax
  4237c8:	je     0x4237d5
  4237ca:	call   eax
  4237cc:	jmp    0x4237d5
  4237ce:	xor    eax,eax
  4237d0:	inc    eax
  4237d1:	ret    
  4237d2:	mov    esp,DWORD PTR [ebp-0x18]
  4237d5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4237d9:	add    DWORD PTR [ebp-0x1c],0x4
  4237dd:	jmp    0x4237b4
  4237df:	call   0x42398b
  4237e4:	ret    
  4237e5:	call   0x423a26
  4237ea:	mov    eax,ds:0x464594
  4237ef:	cmp    eax,0xffffffff
  4237f2:	je     0x423802
  4237f4:	push   eax
  4237f5:	call   DWORD PTR ds:0x4280a4
  4237fb:	or     DWORD PTR ds:0x464594,0xffffffff
  423802:	ret    
  423803:	push   ebx
  423804:	push   esi
  423805:	call   DWORD PTR ds:0x428034
  42380b:	push   DWORD PTR ds:0x464594
  423811:	mov    ebx,eax
  423813:	call   DWORD PTR ds:0x4280b4
  423819:	mov    esi,eax
  42381b:	test   esi,esi
  42381d:	jne    0x423868
  42381f:	push   0x88
  423824:	push   0x1
  423826:	call   0x424a68
  42382b:	mov    esi,eax
  42382d:	test   esi,esi
  42382f:	pop    ecx
  423830:	pop    ecx
  423831:	je     0x423860
  423833:	push   esi
  423834:	push   DWORD PTR ds:0x464594
  42383a:	call   DWORD PTR ds:0x4280b0
  423840:	test   eax,eax
  423842:	je     0x423860
  423844:	mov    DWORD PTR [esi+0x54],0x4644e8
  42384b:	mov    DWORD PTR [esi+0x14],0x1
  423852:	call   DWORD PTR ds:0x4280ac
  423858:	or     DWORD PTR [esi+0x4],0xffffffff
  42385c:	mov    DWORD PTR [esi],eax
  42385e:	jmp    0x423868
  423860:	push   0x10
  423862:	call   0x422a16
  423867:	pop    ecx
  423868:	push   ebx
  423869:	call   DWORD PTR ds:0x4280a8
  42386f:	mov    eax,esi
  423871:	pop    esi
  423872:	pop    ebx
  423873:	ret    
  423874:	call   0x4239dd
  423879:	test   eax,eax
  42387b:	je     0x42388d
  42387d:	call   DWORD PTR ds:0x4280b8
  423883:	cmp    eax,0xffffffff
  423886:	mov    ds:0x464594,eax
  42388b:	jne    0x423895
  42388d:	call   0x4237e5
  423892:	xor    eax,eax
  423894:	ret    
  423895:	push   esi
  423896:	push   0x88
  42389b:	push   0x1
  42389d:	call   0x424a68
  4238a2:	mov    esi,eax
  4238a4:	test   esi,esi
  4238a6:	pop    ecx
  4238a7:	pop    ecx
  4238a8:	je     0x4238da
  4238aa:	push   esi
  4238ab:	push   DWORD PTR ds:0x464594
  4238b1:	call   DWORD PTR ds:0x4280b0
  4238b7:	test   eax,eax
  4238b9:	je     0x4238da
  4238bb:	mov    DWORD PTR [esi+0x54],0x4644e8
  4238c2:	mov    DWORD PTR [esi+0x14],0x1
  4238c9:	call   DWORD PTR ds:0x4280ac
  4238cf:	or     DWORD PTR [esi+0x4],0xffffffff
  4238d3:	mov    DWORD PTR [esi],eax
  4238d5:	xor    eax,eax
  4238d7:	inc    eax
  4238d8:	pop    esi
  4238d9:	ret    
  4238da:	call   0x4237e5
  4238df:	xor    eax,eax
  4238e1:	pop    esi
  4238e2:	ret    
  4238e3:	cmp    DWORD PTR ds:0x464d64,0x2
  4238ea:	jne    0x4238f9
  4238ec:	cmp    DWORD PTR ds:0x464d70,0x5
  4238f3:	jb     0x4238f9
  4238f5:	xor    eax,eax
  4238f7:	inc    eax
  4238f8:	ret    
  4238f9:	push   0x3
  4238fb:	pop    eax
  4238fc:	ret    
  4238fd:	xor    eax,eax
  4238ff:	cmp    DWORD PTR [esp+0x4],eax
  423903:	push   0x0
  423905:	sete   al
  423908:	push   0x1000
  42390d:	push   eax
  42390e:	call   DWORD PTR ds:0x4280c0
  423914:	test   eax,eax
  423916:	mov    ds:0x4653e0,eax
  42391b:	je     0x423947
  42391d:	call   0x4238e3
  423922:	cmp    eax,0x3
  423925:	mov    ds:0x4653e4,eax
  42392a:	jne    0x42394a
  42392c:	push   0x3f8
  423931:	call   0x424cea
  423936:	test   eax,eax
  423938:	pop    ecx
  423939:	jne    0x42394a
  42393b:	push   DWORD PTR ds:0x4653e0
  423941:	call   DWORD PTR ds:0x4280bc
  423947:	xor    eax,eax
  423949:	ret    
  42394a:	xor    eax,eax
  42394c:	inc    eax
  42394d:	ret    
  42394e:	int3   
  42394f:	int3   
  423950:	push   0x425818
  423955:	mov    eax,fs:0x0
  42395b:	push   eax
  42395c:	mov    eax,DWORD PTR [esp+0x10]
  423960:	mov    DWORD PTR [esp+0x10],ebp
  423964:	lea    ebp,[esp+0x10]
  423968:	sub    esp,eax
  42396a:	push   ebx
  42396b:	push   esi
  42396c:	push   edi
  42396d:	mov    eax,DWORD PTR [ebp-0x8]
  423970:	mov    DWORD PTR [ebp-0x18],esp
  423973:	push   eax
  423974:	mov    eax,DWORD PTR [ebp-0x4]
  423977:	mov    DWORD PTR [ebp-0x4],0xffffffff
  42397e:	mov    DWORD PTR [ebp-0x8],eax
  423981:	lea    eax,[ebp-0x10]
  423984:	mov    fs:0x0,eax
  42398a:	ret    
  42398b:	mov    ecx,DWORD PTR [ebp-0x10]
  42398e:	mov    DWORD PTR fs:0x0,ecx
  423995:	pop    ecx
  423996:	pop    edi
  423997:	pop    esi
  423998:	pop    ebx
  423999:	leave  
  42399a:	push   ecx
  42399b:	ret    
  42399c:	int3   
  42399d:	int3   
  42399e:	int3   
  42399f:	int3   
  4239a0:	cmp    eax,0x1000
  4239a5:	jae    0x4239b5
  4239a7:	neg    eax
  4239a9:	add    eax,esp
  4239ab:	add    eax,0x4
  4239ae:	test   DWORD PTR [eax],eax
  4239b0:	xchg   esp,eax
  4239b1:	mov    eax,DWORD PTR [eax]
  4239b3:	push   eax
  4239b4:	ret    
  4239b5:	push   ecx
  4239b6:	lea    ecx,[esp+0x8]
  4239ba:	sub    ecx,0x1000
  4239c0:	sub    eax,0x1000
  4239c5:	test   DWORD PTR [ecx],eax
  4239c7:	cmp    eax,0x1000
  4239cc:	jae    0x4239ba
  4239ce:	sub    ecx,eax
  4239d0:	mov    eax,esp
  4239d2:	test   DWORD PTR [ecx],eax
  4239d4:	mov    esp,ecx
  4239d6:	mov    ecx,DWORD PTR [eax]
  4239d8:	mov    eax,DWORD PTR [eax+0x4]
  4239db:	push   eax
  4239dc:	ret    
  4239dd:	push   esi
  4239de:	push   edi
  4239df:	xor    esi,esi
  4239e1:	mov    edi,0x464ec0
  4239e6:	cmp    DWORD PTR [esi*8+0x4645a4],0x1
  4239ee:	jne    0x423a0e
  4239f0:	lea    eax,[esi*8+0x4645a0]
  4239f7:	mov    DWORD PTR [eax],edi
  4239f9:	push   0xfa0
  4239fe:	push   DWORD PTR [eax]
  423a00:	add    edi,0x18
  423a03:	call   0x4249dd
  423a08:	test   eax,eax
  423a0a:	pop    ecx
  423a0b:	pop    ecx
  423a0c:	je     0x423a1a
  423a0e:	inc    esi
  423a0f:	cmp    esi,0x24
  423a12:	jl     0x4239e6
  423a14:	xor    eax,eax
  423a16:	inc    eax
  423a17:	pop    edi
  423a18:	pop    esi
  423a19:	ret    
  423a1a:	and    DWORD PTR [esi*8+0x4645a0],0x0
  423a22:	xor    eax,eax
  423a24:	jmp    0x423a17
  423a26:	push   ebx
  423a27:	mov    ebx,DWORD PTR ds:0x4280a0
  423a2d:	push   esi
  423a2e:	mov    esi,0x4645a0
  423a33:	push   edi
  423a34:	mov    edi,DWORD PTR [esi]
  423a36:	test   edi,edi
  423a38:	je     0x423a4d
  423a3a:	cmp    DWORD PTR [esi+0x4],0x1
  423a3e:	je     0x423a4d
  423a40:	push   edi
  423a41:	call   ebx
  423a43:	push   edi
  423a44:	call   0x42455a
  423a49:	and    DWORD PTR [esi],0x0
  423a4c:	pop    ecx
  423a4d:	add    esi,0x8
  423a50:	cmp    esi,0x4646c0
  423a56:	jl     0x423a34
  423a58:	mov    esi,0x4645a0
  423a5d:	pop    edi
  423a5e:	mov    eax,DWORD PTR [esi]
  423a60:	test   eax,eax
  423a62:	je     0x423a6d
  423a64:	cmp    DWORD PTR [esi+0x4],0x1
  423a68:	jne    0x423a6d
  423a6a:	push   eax
  423a6b:	call   ebx
  423a6d:	add    esi,0x8
  423a70:	cmp    esi,0x4646c0
  423a76:	jl     0x423a5e
  423a78:	pop    esi
  423a79:	pop    ebx
  423a7a:	ret    
  423a7b:	push   ebp
  423a7c:	mov    ebp,esp
  423a7e:	mov    eax,DWORD PTR [ebp+0x8]
  423a81:	push   DWORD PTR [eax*8+0x4645a0]
  423a88:	call   DWORD PTR ds:0x4280cc
  423a8e:	pop    ebp
  423a8f:	ret    
  423a90:	push   ebp
  423a91:	mov    ebp,esp
  423a93:	push   esi
  423a94:	mov    esi,DWORD PTR [ebp+0x8]
  423a97:	lea    esi,[esi*8+0x4645a0]
  423a9e:	cmp    DWORD PTR [esi],0x0
  423aa1:	je     0x423aa8
  423aa3:	xor    eax,eax
  423aa5:	inc    eax
  423aa6:	jmp    0x423b0c
  423aa8:	push   edi
  423aa9:	push   0x18
  423aab:	call   0x424672
  423ab0:	mov    edi,eax
  423ab2:	test   edi,edi
  423ab4:	pop    ecx
  423ab5:	jne    0x423ac6
  423ab7:	call   0x4258f0
  423abc:	mov    DWORD PTR [eax],0xc
  423ac2:	xor    eax,eax
  423ac4:	jmp    0x423b0b
  423ac6:	push   0xa
  423ac8:	call   0x423b0f
  423acd:	cmp    DWORD PTR [esi],0x0
  423ad0:	pop    ecx
  423ad1:	jne    0x423af9
  423ad3:	push   0xfa0
  423ad8:	push   edi
  423ad9:	call   0x4249dd
  423ade:	test   eax,eax
  423ae0:	pop    ecx
  423ae1:	pop    ecx
  423ae2:	jne    0x423af5
  423ae4:	push   edi
  423ae5:	call   0x42455a
  423aea:	push   0xa
  423aec:	call   0x423a7b
  423af1:	pop    ecx
  423af2:	pop    ecx
  423af3:	jmp    0x423ab7
  423af5:	mov    DWORD PTR [esi],edi
  423af7:	jmp    0x423b00
  423af9:	push   edi
  423afa:	call   0x42455a
  423aff:	pop    ecx
  423b00:	push   0xa
  423b02:	call   0x423a7b
  423b07:	xor    eax,eax
  423b09:	pop    ecx
  423b0a:	inc    eax
  423b0b:	pop    edi
  423b0c:	pop    esi
  423b0d:	pop    ebp
  423b0e:	ret    
  423b0f:	push   ebp
  423b10:	mov    ebp,esp
  423b12:	mov    eax,DWORD PTR [ebp+0x8]
  423b15:	push   esi
  423b16:	lea    esi,[eax*8+0x4645a0]
  423b1d:	cmp    DWORD PTR [esi],0x0
  423b20:	jne    0x423b35
  423b22:	push   eax
  423b23:	call   0x423a90
  423b28:	test   eax,eax
  423b2a:	pop    ecx
  423b2b:	jne    0x423b35
  423b2d:	push   0x11
  423b2f:	call   0x422a16
  423b34:	pop    ecx
  423b35:	push   DWORD PTR [esi]
  423b37:	call   DWORD PTR ds:0x4280d0
  423b3d:	pop    esi
  423b3e:	pop    ebp
  423b3f:	ret    
  423b40:	push   esi
  423b41:	push   DWORD PTR ds:0x465508
  423b47:	call   0x425aa6
  423b4c:	pop    ecx
  423b4d:	mov    ecx,DWORD PTR ds:0x465504
  423b53:	mov    esi,eax
  423b55:	mov    eax,ds:0x465508
  423b5a:	mov    edx,ecx
  423b5c:	sub    edx,eax
  423b5e:	add    edx,0x4
  423b61:	cmp    esi,edx
  423b63:	jae    0x423bb3
  423b65:	mov    ecx,0x800
  423b6a:	cmp    esi,ecx
  423b6c:	jae    0x423b70
  423b6e:	mov    ecx,esi
  423b70:	add    ecx,esi
  423b72:	push   ecx
  423b73:	push   eax
  423b74:	call   0x4258f9
  423b79:	test   eax,eax
  423b7b:	pop    ecx
  423b7c:	pop    ecx
  423b7d:	jne    0x423b96
  423b7f:	add    esi,0x10
  423b82:	push   esi
  423b83:	push   DWORD PTR ds:0x465508
  423b89:	call   0x4258f9
  423b8e:	test   eax,eax
  423b90:	pop    ecx
  423b91:	pop    ecx
  423b92:	jne    0x423b96
  423b94:	pop    esi
  423b95:	ret    
  423b96:	mov    ecx,DWORD PTR ds:0x465504
  423b9c:	sub    ecx,DWORD PTR ds:0x465508
  423ba2:	mov    ds:0x465508,eax
  423ba7:	sar    ecx,0x2
  423baa:	lea    ecx,[eax+ecx*4]
  423bad:	mov    DWORD PTR ds:0x465504,ecx
  423bb3:	mov    DWORD PTR [ecx],edi
  423bb5:	add    DWORD PTR ds:0x465504,0x4
  423bbc:	mov    eax,edi
  423bbe:	pop    esi
  423bbf:	ret    
  423bc0:	push   0x80
  423bc5:	call   0x424672
  423bca:	test   eax,eax
  423bcc:	pop    ecx
  423bcd:	mov    ds:0x465508,eax
  423bd2:	jne    0x423bd8
  423bd4:	push   0x18
  423bd6:	pop    eax
  423bd7:	ret    
  423bd8:	and    DWORD PTR [eax],0x0
  423bdb:	mov    eax,ds:0x465508
  423be0:	mov    ds:0x465504,eax
  423be5:	xor    eax,eax
  423be7:	ret    
  423be8:	push   0xc
  423bea:	push   0x428518
  423bef:	call   0x423950
  423bf4:	call   0x422c61
  423bf9:	and    DWORD PTR [ebp-0x4],0x0
  423bfd:	mov    edi,DWORD PTR [ebp+0x8]
  423c00:	call   0x423b40
  423c05:	mov    DWORD PTR [ebp-0x1c],eax
  423c08:	or     DWORD PTR [ebp-0x4],0xffffffff
  423c0c:	call   0x423c1a
  423c11:	mov    eax,DWORD PTR [ebp-0x1c]
  423c14:	call   0x42398b
  423c19:	ret    
  423c1a:	call   0x422c6a
  423c1f:	ret    
  423c20:	push   DWORD PTR [esp+0x4]
  423c24:	call   0x423be8
  423c29:	neg    eax
  423c2b:	sbb    eax,eax
  423c2d:	neg    eax
  423c2f:	pop    ecx
  423c30:	dec    eax
  423c31:	ret    
  423c32:	push   ebp
  423c33:	mov    ebp,esp
  423c35:	sub    esp,0x10
  423c38:	push   ebx
  423c39:	xor    ebx,ebx
  423c3b:	cmp    DWORD PTR ds:0x465010,ebx
  423c41:	push   esi
  423c42:	push   edi
  423c43:	jne    0x423cb2
  423c45:	push   0x428588
  423c4a:	call   DWORD PTR ds:0x4280d4
  423c50:	mov    edi,eax
  423c52:	cmp    edi,ebx
  423c54:	je     0x423ced
  423c5a:	mov    esi,DWORD PTR ds:0x42804c
  423c60:	push   0x42857c
  423c65:	push   edi
  423c66:	call   esi
  423c68:	test   eax,eax
  423c6a:	mov    ds:0x465010,eax
  423c6f:	je     0x423ced
  423c71:	push   0x42856c
  423c76:	push   edi
  423c77:	call   esi
  423c79:	push   0x428558
  423c7e:	push   edi
  423c7f:	mov    ds:0x465014,eax
  423c84:	call   esi
  423c86:	cmp    DWORD PTR ds:0x464d64,0x2
  423c8d:	mov    ds:0x465018,eax
  423c92:	jne    0x423cb2
  423c94:	push   0x42853c
  423c99:	push   edi
  423c9a:	call   esi
  423c9c:	test   eax,eax
  423c9e:	mov    ds:0x465020,eax
  423ca3:	je     0x423cb2
  423ca5:	push   0x428524
  423caa:	push   edi
  423cab:	call   esi
  423cad:	mov    ds:0x46501c,eax
  423cb2:	mov    eax,ds:0x46501c
  423cb7:	test   eax,eax
  423cb9:	je     0x423cf7
  423cbb:	call   eax
  423cbd:	test   eax,eax
  423cbf:	je     0x423cde
  423cc1:	lea    ecx,[ebp-0x4]
  423cc4:	push   ecx
  423cc5:	push   0xc
  423cc7:	lea    ecx,[ebp-0x10]
  423cca:	push   ecx
  423ccb:	push   0x1
  423ccd:	push   eax
  423cce:	call   DWORD PTR ds:0x465020
  423cd4:	test   eax,eax
  423cd6:	je     0x423cde
  423cd8:	test   BYTE PTR [ebp-0x8],0x1
  423cdc:	jne    0x423cf7
  423cde:	cmp    DWORD PTR ds:0x464d70,0x4
  423ce5:	jb     0x423cf1
  423ce7:	or     BYTE PTR [ebp+0x12],0x20
  423ceb:	jmp    0x423d16
  423ced:	xor    eax,eax
  423cef:	jmp    0x423d26
  423cf1:	or     BYTE PTR [ebp+0x12],0x4
  423cf5:	jmp    0x423d16
  423cf7:	mov    eax,ds:0x465014
  423cfc:	test   eax,eax
  423cfe:	je     0x423d16
  423d00:	call   eax
  423d02:	mov    ebx,eax
  423d04:	test   ebx,ebx
  423d06:	je     0x423d16
  423d08:	mov    eax,ds:0x465018
  423d0d:	test   eax,eax
  423d0f:	je     0x423d16
  423d11:	push   ebx
  423d12:	call   eax
  423d14:	mov    ebx,eax
  423d16:	push   DWORD PTR [ebp+0x10]
  423d19:	push   DWORD PTR [ebp+0xc]
  423d1c:	push   DWORD PTR [ebp+0x8]
  423d1f:	push   ebx
  423d20:	call   DWORD PTR ds:0x465010
  423d26:	pop    edi
  423d27:	pop    esi
  423d28:	pop    ebx
  423d29:	leave  
  423d2a:	ret    
  423d2b:	int3   
  423d2c:	int3   
  423d2d:	int3   
  423d2e:	int3   
  423d2f:	int3   
  423d30:	push   edi
  423d31:	mov    edi,DWORD PTR [esp+0x8]
  423d35:	jmp    0x423da5
  423d37:	lea    esp,[esp+0x0]
  423d3e:	mov    edi,edi
  423d40:	mov    ecx,DWORD PTR [esp+0x4]
  423d44:	push   edi
  423d45:	test   ecx,0x3
  423d4b:	je     0x423d60
  423d4d:	mov    al,BYTE PTR [ecx]
  423d4f:	add    ecx,0x1
  423d52:	test   al,al
  423d54:	je     0x423d93
  423d56:	test   ecx,0x3
  423d5c:	jne    0x423d4d
  423d5e:	mov    edi,edi
  423d60:	mov    eax,DWORD PTR [ecx]
  423d62:	mov    edx,0x7efefeff
  423d67:	add    edx,eax
  423d69:	xor    eax,0xffffffff
  423d6c:	xor    eax,edx
  423d6e:	add    ecx,0x4
  423d71:	test   eax,0x81010100
  423d76:	je     0x423d60
  423d78:	mov    eax,DWORD PTR [ecx-0x4]
  423d7b:	test   al,al
  423d7d:	je     0x423da2
  423d7f:	test   ah,ah
  423d81:	je     0x423d9d
  423d83:	test   eax,0xff0000
  423d88:	je     0x423d98
  423d8a:	test   eax,0xff000000
  423d8f:	je     0x423d93
  423d91:	jmp    0x423d60
  423d93:	lea    edi,[ecx-0x1]
  423d96:	jmp    0x423da5
  423d98:	lea    edi,[ecx-0x2]
  423d9b:	jmp    0x423da5
  423d9d:	lea    edi,[ecx-0x3]
  423da0:	jmp    0x423da5
  423da2:	lea    edi,[ecx-0x4]
  423da5:	mov    ecx,DWORD PTR [esp+0xc]
  423da9:	test   ecx,0x3
  423daf:	je     0x423dce
  423db1:	mov    dl,BYTE PTR [ecx]
  423db3:	add    ecx,0x1
  423db6:	test   dl,dl
  423db8:	je     0x423e20
  423dba:	mov    BYTE PTR [edi],dl
  423dbc:	add    edi,0x1
  423dbf:	test   ecx,0x3
  423dc5:	jne    0x423db1
  423dc7:	jmp    0x423dce
  423dc9:	mov    DWORD PTR [edi],edx
  423dcb:	add    edi,0x4
  423dce:	mov    edx,0x7efefeff
  423dd3:	mov    eax,DWORD PTR [ecx]
  423dd5:	add    edx,eax
  423dd7:	xor    eax,0xffffffff
  423dda:	xor    eax,edx
  423ddc:	mov    edx,DWORD PTR [ecx]
  423dde:	add    ecx,0x4
  423de1:	test   eax,0x81010100
  423de6:	je     0x423dc9
  423de8:	test   dl,dl
  423dea:	je     0x423e20
  423dec:	test   dh,dh
  423dee:	je     0x423e17
  423df0:	test   edx,0xff0000
  423df6:	je     0x423e0a
  423df8:	test   edx,0xff000000
  423dfe:	je     0x423e02
  423e00:	jmp    0x423dc9
  423e02:	mov    DWORD PTR [edi],edx
  423e04:	mov    eax,DWORD PTR [esp+0x8]
  423e08:	pop    edi
  423e09:	ret    
  423e0a:	mov    WORD PTR [edi],dx
  423e0d:	mov    eax,DWORD PTR [esp+0x8]
  423e11:	mov    BYTE PTR [edi+0x2],0x0
  423e15:	pop    edi
  423e16:	ret    
  423e17:	mov    WORD PTR [edi],dx
  423e1a:	mov    eax,DWORD PTR [esp+0x8]
  423e1e:	pop    edi
  423e1f:	ret    
  423e20:	mov    BYTE PTR [edi],dl
  423e22:	mov    eax,DWORD PTR [esp+0x8]
  423e26:	pop    edi
  423e27:	ret    
  423e28:	int3   
  423e29:	int3   
  423e2a:	int3   
  423e2b:	int3   
  423e2c:	int3   
  423e2d:	int3   
  423e2e:	int3   
  423e2f:	int3   
  423e30:	mov    ecx,DWORD PTR [esp+0xc]
  423e34:	push   edi
  423e35:	test   ecx,ecx
  423e37:	je     0x423ecf
  423e3d:	push   esi
  423e3e:	push   ebx
  423e3f:	mov    ebx,ecx
  423e41:	mov    esi,DWORD PTR [esp+0x14]
  423e45:	test   esi,0x3
  423e4b:	mov    edi,DWORD PTR [esp+0x10]
  423e4f:	jne    0x423e5c
  423e51:	shr    ecx,0x2
  423e54:	jne    0x423edf
  423e5a:	jmp    0x423e83
  423e5c:	mov    al,BYTE PTR [esi]
  423e5e:	add    esi,0x1
  423e61:	mov    BYTE PTR [edi],al
  423e63:	add    edi,0x1
  423e66:	sub    ecx,0x1
  423e69:	je     0x423e96
  423e6b:	test   al,al
  423e6d:	je     0x423e9e
  423e6f:	test   esi,0x3
  423e75:	jne    0x423e5c
  423e77:	mov    ebx,ecx
  423e79:	shr    ecx,0x2
  423e7c:	jne    0x423edf
  423e7e:	and    ebx,0x3
  423e81:	je     0x423e96
  423e83:	mov    al,BYTE PTR [esi]
  423e85:	add    esi,0x1
  423e88:	mov    BYTE PTR [edi],al
  423e8a:	add    edi,0x1
  423e8d:	test   al,al
  423e8f:	je     0x423ec8
  423e91:	sub    ebx,0x1
  423e94:	jne    0x423e83
  423e96:	mov    eax,DWORD PTR [esp+0x10]
  423e9a:	pop    ebx
  423e9b:	pop    esi
  423e9c:	pop    edi
  423e9d:	ret    
  423e9e:	test   edi,0x3
  423ea4:	je     0x423ebc
  423ea6:	mov    BYTE PTR [edi],al
  423ea8:	add    edi,0x1
  423eab:	sub    ecx,0x1
  423eae:	je     0x423f4c
  423eb4:	test   edi,0x3
  423eba:	jne    0x423ea6
  423ebc:	mov    ebx,ecx
  423ebe:	shr    ecx,0x2
  423ec1:	jne    0x423f37
  423ec3:	mov    BYTE PTR [edi],al
  423ec5:	add    edi,0x1
  423ec8:	sub    ebx,0x1
  423ecb:	jne    0x423ec3
  423ecd:	pop    ebx
  423ece:	pop    esi
  423ecf:	mov    eax,DWORD PTR [esp+0x8]
  423ed3:	pop    edi
  423ed4:	ret    
  423ed5:	mov    DWORD PTR [edi],edx
  423ed7:	add    edi,0x4
  423eda:	sub    ecx,0x1
  423edd:	je     0x423e7e
  423edf:	mov    edx,0x7efefeff
  423ee4:	mov    eax,DWORD PTR [esi]
  423ee6:	add    edx,eax
  423ee8:	xor    eax,0xffffffff
  423eeb:	xor    eax,edx
  423eed:	mov    edx,DWORD PTR [esi]
  423eef:	add    esi,0x4
  423ef2:	test   eax,0x81010100
  423ef7:	je     0x423ed5
  423ef9:	test   dl,dl
  423efb:	je     0x423f29
  423efd:	test   dh,dh
  423eff:	je     0x423f1f
  423f01:	test   edx,0xff0000
  423f07:	je     0x423f15
  423f09:	test   edx,0xff000000
  423f0f:	jne    0x423ed5
  423f11:	mov    DWORD PTR [edi],edx
  423f13:	jmp    0x423f2d
  423f15:	and    edx,0xffff
  423f1b:	mov    DWORD PTR [edi],edx
  423f1d:	jmp    0x423f2d
  423f1f:	and    edx,0xff
  423f25:	mov    DWORD PTR [edi],edx
  423f27:	jmp    0x423f2d
  423f29:	xor    edx,edx
  423f2b:	mov    DWORD PTR [edi],edx
  423f2d:	add    edi,0x4
  423f30:	xor    eax,eax
  423f32:	sub    ecx,0x1
  423f35:	je     0x423f43
  423f37:	xor    eax,eax
  423f39:	mov    DWORD PTR [edi],eax
  423f3b:	add    edi,0x4
  423f3e:	sub    ecx,0x1
  423f41:	jne    0x423f39
  423f43:	and    ebx,0x3
  423f46:	jne    0x423ec3
  423f4c:	mov    eax,DWORD PTR [esp+0x10]
  423f50:	pop    ebx
  423f51:	pop    esi
  423f52:	pop    edi
  423f53:	ret    
  423f54:	int3   
  423f55:	int3   
  423f56:	int3   
  423f57:	int3   
  423f58:	int3   
  423f59:	int3   
  423f5a:	int3   
  423f5b:	int3   
  423f5c:	int3   
  423f5d:	int3   
  423f5e:	int3   
  423f5f:	int3   
  423f60:	mov    ecx,DWORD PTR [esp+0x4]
  423f64:	test   ecx,0x3
  423f6a:	je     0x423f90
  423f6c:	mov    al,BYTE PTR [ecx]
  423f6e:	add    ecx,0x1
  423f71:	test   al,al
  423f73:	je     0x423fc3
  423f75:	test   ecx,0x3
  423f7b:	jne    0x423f6c
  423f7d:	add    eax,0x0
  423f82:	lea    esp,[esp+0x0]
  423f89:	lea    esp,[esp+0x0]
  423f90:	mov    eax,DWORD PTR [ecx]
  423f92:	mov    edx,0x7efefeff
  423f97:	add    edx,eax
  423f99:	xor    eax,0xffffffff
  423f9c:	xor    eax,edx
  423f9e:	add    ecx,0x4
  423fa1:	test   eax,0x81010100
  423fa6:	je     0x423f90
  423fa8:	mov    eax,DWORD PTR [ecx-0x4]
  423fab:	test   al,al
  423fad:	je     0x423fe1
  423faf:	test   ah,ah
  423fb1:	je     0x423fd7
  423fb3:	test   eax,0xff0000
  423fb8:	je     0x423fcd
  423fba:	test   eax,0xff000000
  423fbf:	je     0x423fc3
  423fc1:	jmp    0x423f90
  423fc3:	lea    eax,[ecx-0x1]
  423fc6:	mov    ecx,DWORD PTR [esp+0x4]
  423fca:	sub    eax,ecx
  423fcc:	ret    
  423fcd:	lea    eax,[ecx-0x2]
  423fd0:	mov    ecx,DWORD PTR [esp+0x4]
  423fd4:	sub    eax,ecx
  423fd6:	ret    
  423fd7:	lea    eax,[ecx-0x3]
  423fda:	mov    ecx,DWORD PTR [esp+0x4]
  423fde:	sub    eax,ecx
  423fe0:	ret    
  423fe1:	lea    eax,[ecx-0x4]
  423fe4:	mov    ecx,DWORD PTR [esp+0x4]
  423fe8:	sub    eax,ecx
  423fea:	ret    
  423feb:	push   0x8
  423fed:	push   0x428598
  423ff2:	call   0x423950
  423ff7:	and    DWORD PTR [ebp-0x4],0x0
  423ffb:	push   0x0
  423ffd:	push   0x1
  423fff:	call   0x425b72
  424004:	pop    ecx
  424005:	pop    ecx
  424006:	jmp    0x42400f
  424008:	xor    eax,eax
  42400a:	inc    eax
  42400b:	ret    
  42400c:	mov    esp,DWORD PTR [ebp-0x18]
  42400f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424013:	push   0x3
  424015:	call   DWORD PTR ds:0x42806c
  42401b:	int3   
  42401c:	cmp    ecx,DWORD PTR ds:0x4646c0
  424022:	jne    0x424025
  424024:	ret    
  424025:	jmp    0x423feb
  42402a:	movzx  eax,BYTE PTR [esp+0x4]
  42402f:	mov    cl,BYTE PTR [esp+0xc]
  424033:	test   BYTE PTR [eax+0x4651c1],cl
  424039:	jne    0x424057
  42403b:	cmp    DWORD PTR [esp+0x8],0x0
  424040:	je     0x424050
  424042:	movzx  eax,WORD PTR [eax*2+0x428992]
  42404a:	and    eax,DWORD PTR [esp+0x8]
  42404e:	jmp    0x424052
  424050:	xor    eax,eax
  424052:	test   eax,eax
  424054:	jne    0x424057
  424056:	ret    
  424057:	xor    eax,eax
  424059:	inc    eax
  42405a:	ret    
  42405b:	push   0x4
  42405d:	push   0x0
  42405f:	push   DWORD PTR [esp+0xc]
  424063:	call   0x42402a
  424068:	add    esp,0xc
  42406b:	ret    
  42406c:	sub    eax,0x3a4
  424071:	je     0x424095
  424073:	sub    eax,0x4
  424076:	je     0x42408f
  424078:	sub    eax,0xd
  42407b:	je     0x424089
  42407d:	dec    eax
  42407e:	je     0x424083
  424080:	xor    eax,eax
  424082:	ret    
  424083:	mov    eax,0x404
  424088:	ret    
  424089:	mov    eax,0x412
  42408e:	ret    
  42408f:	mov    eax,0x804
  424094:	ret    
  424095:	mov    eax,0x411
  42409a:	ret    
  42409b:	push   edi
  42409c:	push   0x40
  42409e:	xor    eax,eax
  4240a0:	pop    ecx
  4240a1:	mov    edi,0x4651c0
  4240a6:	rep stos DWORD PTR es:[edi],eax
  4240a8:	stos   BYTE PTR es:[edi],al
  4240a9:	xor    eax,eax
  4240ab:	mov    ds:0x4652c4,eax
  4240b0:	mov    ds:0x4651bc,eax
  4240b5:	mov    ds:0x4651b4,eax
  4240ba:	mov    edi,0x4652d0
  4240bf:	stos   DWORD PTR es:[edi],eax
  4240c0:	stos   DWORD PTR es:[edi],eax
  4240c1:	stos   DWORD PTR es:[edi],eax
  4240c2:	pop    edi
  4240c3:	ret    
  4240c4:	push   ebp
  4240c5:	mov    ebp,esp
  4240c7:	sub    esp,0x518
  4240cd:	mov    eax,ds:0x4646c0
  4240d2:	xor    eax,DWORD PTR [ebp+0x4]
  4240d5:	push   esi
  4240d6:	mov    DWORD PTR [ebp-0x4],eax
  4240d9:	lea    eax,[ebp-0x18]
  4240dc:	push   eax
  4240dd:	push   DWORD PTR ds:0x4652c4
  4240e3:	call   DWORD PTR ds:0x4280e0
  4240e9:	cmp    eax,0x1
  4240ec:	mov    esi,0x100
  4240f1:	jne    0x424204
  4240f7:	xor    eax,eax
  4240f9:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424100:	inc    eax
  424101:	cmp    eax,esi
  424103:	jb     0x4240f9
  424105:	mov    al,BYTE PTR [ebp-0x12]
  424108:	test   al,al
  42410a:	mov    BYTE PTR [ebp-0x118],0x20
  424111:	je     0x424149
  424113:	push   ebx
  424114:	lea    edx,[ebp-0x11]
  424117:	push   edi
  424118:	movzx  ecx,BYTE PTR [edx]
  42411b:	movzx  eax,al
  42411e:	cmp    eax,ecx
  424120:	ja     0x42413f
  424122:	sub    ecx,eax
  424124:	inc    ecx
  424125:	mov    ebx,ecx
  424127:	shr    ecx,0x2
  42412a:	lea    edi,[ebp+eax*1-0x118]
  424131:	mov    eax,0x20202020
  424136:	rep stos DWORD PTR es:[edi],eax
  424138:	mov    ecx,ebx
  42413a:	and    ecx,0x3
  42413d:	rep stos BYTE PTR es:[edi],al
  42413f:	inc    edx
  424140:	mov    al,BYTE PTR [edx]
  424142:	inc    edx
  424143:	test   al,al
  424145:	jne    0x424118
  424147:	pop    edi
  424148:	pop    ebx
  424149:	push   0x0
  42414b:	push   DWORD PTR ds:0x4651b4
  424151:	lea    eax,[ebp-0x518]
  424157:	push   DWORD PTR ds:0x4652c4
  42415d:	push   eax
  42415e:	push   esi
  42415f:	lea    eax,[ebp-0x118]
  424165:	push   eax
  424166:	push   0x1
  424168:	call   0x426078
  42416d:	push   0x0
  42416f:	push   DWORD PTR ds:0x4652c4
  424175:	lea    eax,[ebp-0x218]
  42417b:	push   esi
  42417c:	push   eax
  42417d:	push   esi
  42417e:	lea    eax,[ebp-0x118]
  424184:	push   eax
  424185:	push   esi
  424186:	push   DWORD PTR ds:0x4651b4
  42418c:	call   0x425cbc
  424191:	push   0x0
  424193:	push   DWORD PTR ds:0x4652c4
  424199:	lea    eax,[ebp-0x318]
  42419f:	push   esi
  4241a0:	push   eax
  4241a1:	push   esi
  4241a2:	lea    eax,[ebp-0x118]
  4241a8:	push   eax
  4241a9:	push   0x200
  4241ae:	push   DWORD PTR ds:0x4651b4
  4241b4:	call   0x425cbc
  4241b9:	add    esp,0x5c
  4241bc:	xor    eax,eax
  4241be:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  4241c6:	test   cl,0x1
  4241c9:	je     0x4241e1
  4241cb:	or     BYTE PTR [eax+0x4651c1],0x10
  4241d2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  4241d9:	mov    BYTE PTR [eax+0x4652e0],cl
  4241df:	jmp    0x4241fd
  4241e1:	test   cl,0x2
  4241e4:	je     0x4241f6
  4241e6:	or     BYTE PTR [eax+0x4651c1],0x20
  4241ed:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  4241f4:	jmp    0x4241d9
  4241f6:	and    BYTE PTR [eax+0x4652e0],0x0
  4241fd:	inc    eax
  4241fe:	cmp    eax,esi
  424200:	jb     0x4241be
  424202:	jmp    0x424248
  424204:	xor    eax,eax
  424206:	cmp    eax,0x41
  424209:	jb     0x424224
  42420b:	cmp    eax,0x5a
  42420e:	ja     0x424224
  424210:	or     BYTE PTR [eax+0x4651c1],0x10
  424217:	mov    cl,al
  424219:	add    cl,0x20
  42421c:	mov    BYTE PTR [eax+0x4652e0],cl
  424222:	jmp    0x424243
  424224:	cmp    eax,0x61
  424227:	jb     0x42423c
  424229:	cmp    eax,0x7a
  42422c:	ja     0x42423c
  42422e:	or     BYTE PTR [eax+0x4651c1],0x20
  424235:	mov    cl,al
  424237:	sub    cl,0x20
  42423a:	jmp    0x42421c
  42423c:	and    BYTE PTR [eax+0x4652e0],0x0
  424243:	inc    eax
  424244:	cmp    eax,esi
  424246:	jb     0x424206
  424248:	mov    ecx,DWORD PTR [ebp-0x4]
  42424b:	xor    ecx,DWORD PTR [ebp+0x4]
  42424e:	pop    esi
  42424f:	call   0x42401c
  424254:	leave  
  424255:	ret    
  424256:	push   ebp
  424257:	mov    ebp,esp
  424259:	sub    esp,0x1c
  42425c:	mov    eax,ds:0x4646c0
  424261:	xor    eax,DWORD PTR [ebp+0x4]
  424264:	push   ebx
  424265:	push   esi
  424266:	mov    esi,DWORD PTR [ebp+0x8]
  424269:	xor    ebx,ebx
  42426b:	cmp    esi,ebx
  42426d:	mov    DWORD PTR [ebp-0x4],eax
  424270:	push   edi
  424271:	je     0x4243cb
  424277:	xor    edx,edx
  424279:	xor    eax,eax
  42427b:	cmp    DWORD PTR [eax+0x4646d0],esi
  424281:	je     0x4242e8
  424283:	add    eax,0x30
  424286:	inc    edx
  424287:	cmp    eax,0xf0
  42428c:	jb     0x42427b
  42428e:	lea    eax,[ebp-0x1c]
  424291:	push   eax
  424292:	push   esi
  424293:	call   DWORD PTR ds:0x4280e0
  424299:	cmp    eax,0x1
  42429c:	jne    0x4243c3
  4242a2:	push   0x40
  4242a4:	xor    eax,eax
  4242a6:	cmp    DWORD PTR [ebp-0x1c],0x1
  4242aa:	pop    ecx
  4242ab:	mov    edi,0x4651c0
  4242b0:	rep stos DWORD PTR es:[edi],eax
  4242b2:	stos   BYTE PTR es:[edi],al
  4242b3:	mov    DWORD PTR ds:0x4652c4,esi
  4242b9:	mov    DWORD PTR ds:0x4651b4,ebx
  4242bf:	jbe    0x4243b1
  4242c5:	cmp    BYTE PTR [ebp-0x16],0x0
  4242c9:	je     0x424389
  4242cf:	lea    ecx,[ebp-0x15]
  4242d2:	mov    dl,BYTE PTR [ecx]
  4242d4:	test   dl,dl
  4242d6:	je     0x424389
  4242dc:	movzx  eax,BYTE PTR [ecx-0x1]
  4242e0:	movzx  edx,dl
  4242e3:	jmp    0x424379
  4242e8:	push   0x40
  4242ea:	xor    eax,eax
  4242ec:	pop    ecx
  4242ed:	mov    edi,0x4651c0
  4242f2:	rep stos DWORD PTR es:[edi],eax
  4242f4:	lea    ecx,[edx+edx*2]
  4242f7:	shl    ecx,0x4
  4242fa:	mov    DWORD PTR [ebp-0x8],ebx
  4242fd:	stos   BYTE PTR es:[edi],al
  4242fe:	lea    ebx,[ecx+0x4646e0]
  424304:	mov    al,BYTE PTR [ebx]
  424306:	mov    esi,ebx
  424308:	jmp    0x424333
  42430a:	mov    dl,BYTE PTR [esi+0x1]
  42430d:	test   dl,dl
  42430f:	je     0x424337
  424311:	movzx  eax,al
  424314:	movzx  edi,dl
  424317:	cmp    eax,edi
  424319:	ja     0x42432f
  42431b:	mov    edx,DWORD PTR [ebp-0x8]
  42431e:	mov    dl,BYTE PTR [edx+0x4646c8]
  424324:	or     BYTE PTR [eax+0x4651c1],dl
  42432a:	inc    eax
  42432b:	cmp    eax,edi
  42432d:	jbe    0x424324
  42432f:	inc    esi
  424330:	inc    esi
  424331:	mov    al,BYTE PTR [esi]
  424333:	test   al,al
  424335:	jne    0x42430a
  424337:	inc    DWORD PTR [ebp-0x8]
  42433a:	add    ebx,0x8
  42433d:	cmp    DWORD PTR [ebp-0x8],0x4
  424341:	jb     0x424304
  424343:	mov    eax,DWORD PTR [ebp+0x8]
  424346:	mov    ds:0x4652c4,eax
  42434b:	mov    DWORD PTR ds:0x4651bc,0x1
  424355:	call   0x42406c
  42435a:	lea    ecx,[ecx+0x4646d4]
  424360:	mov    esi,ecx
  424362:	mov    edi,0x4652d0
  424367:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424368:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424369:	mov    ds:0x4651b4,eax
  42436e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42436f:	jmp    0x4243d0
  424371:	or     BYTE PTR [eax+0x4651c1],0x4
  424378:	inc    eax
  424379:	cmp    eax,edx
  42437b:	jbe    0x424371
  42437d:	inc    ecx
  42437e:	inc    ecx
  42437f:	cmp    BYTE PTR [ecx-0x1],0x0
  424383:	jne    0x4242d2
  424389:	xor    ecx,ecx
  42438b:	inc    ecx
  42438c:	mov    eax,ecx
  42438e:	or     BYTE PTR [eax+0x4651c1],0x8
  424395:	inc    eax
  424396:	cmp    eax,0xff
  42439b:	jb     0x42438e
  42439d:	mov    eax,esi
  42439f:	call   0x42406c
  4243a4:	mov    ds:0x4651b4,eax
  4243a9:	mov    DWORD PTR ds:0x4651bc,ecx
  4243af:	jmp    0x4243b7
  4243b1:	mov    DWORD PTR ds:0x4651bc,ebx
  4243b7:	xor    eax,eax
  4243b9:	mov    edi,0x4652d0
  4243be:	stos   DWORD PTR es:[edi],eax
  4243bf:	stos   DWORD PTR es:[edi],eax
  4243c0:	stos   DWORD PTR es:[edi],eax
  4243c1:	jmp    0x4243d0
  4243c3:	cmp    DWORD PTR ds:0x465024,ebx
  4243c9:	je     0x4243d9
  4243cb:	call   0x42409b
  4243d0:	call   0x4240c4
  4243d5:	xor    eax,eax
  4243d7:	jmp    0x4243dc
  4243d9:	or     eax,0xffffffff
  4243dc:	mov    ecx,DWORD PTR [ebp-0x4]
  4243df:	xor    ecx,DWORD PTR [ebp+0x4]
  4243e2:	pop    edi
  4243e3:	pop    esi
  4243e4:	pop    ebx
  4243e5:	call   0x42401c
  4243ea:	leave  
  4243eb:	ret    
  4243ec:	push   0x14
  4243ee:	push   0x4285a8
  4243f3:	call   0x423950
  4243f8:	or     DWORD PTR [ebp-0x1c],0xffffffff
  4243fc:	push   0xd
  4243fe:	call   0x423b0f
  424403:	pop    ecx
  424404:	xor    edi,edi
  424406:	mov    DWORD PTR [ebp-0x4],edi
  424409:	mov    DWORD PTR ds:0x465024,edi
  42440f:	mov    eax,DWORD PTR [ebp+0x8]
  424412:	cmp    eax,0xfffffffe
  424415:	jne    0x424429
  424417:	mov    DWORD PTR ds:0x465024,0x1
  424421:	call   DWORD PTR ds:0x4280dc
  424427:	jmp    0x424454
  424429:	cmp    eax,0xfffffffd
  42442c:	jne    0x424440
  42442e:	mov    DWORD PTR ds:0x465024,0x1
  424438:	call   DWORD PTR ds:0x4280d8
  42443e:	jmp    0x424454
  424440:	cmp    eax,0xfffffffc
  424443:	jne    0x424454
  424445:	mov    DWORD PTR ds:0x465024,0x1
  42444f:	mov    eax,ds:0x465054
  424454:	mov    DWORD PTR [ebp+0x8],eax
  424457:	cmp    eax,DWORD PTR ds:0x4652c4
  42445d:	je     0x42451e
  424463:	mov    esi,DWORD PTR ds:0x4651b8
  424469:	mov    DWORD PTR [ebp-0x20],esi
  42446c:	cmp    esi,edi
  42446e:	je     0x424474
  424470:	cmp    DWORD PTR [esi],edi
  424472:	je     0x424484
  424474:	push   0x220
  424479:	call   0x424672
  42447e:	pop    ecx
  42447f:	mov    esi,eax
  424481:	mov    DWORD PTR [ebp-0x20],esi
  424484:	cmp    esi,edi
  424486:	je     0x424507
  424488:	push   DWORD PTR [ebp+0x8]
  42448b:	call   0x424256
  424490:	pop    ecx
  424491:	mov    DWORD PTR [ebp-0x1c],eax
  424494:	cmp    eax,edi
  424496:	jne    0x424507
  424498:	mov    DWORD PTR [esi],edi
  42449a:	mov    eax,ds:0x4652c4
  42449f:	mov    DWORD PTR [esi+0x4],eax
  4244a2:	mov    eax,ds:0x4651bc
  4244a7:	mov    DWORD PTR [esi+0x8],eax
  4244aa:	mov    eax,ds:0x4651b4
  4244af:	mov    DWORD PTR [esi+0xc],eax
  4244b2:	xor    eax,eax
  4244b4:	mov    DWORD PTR [ebp-0x24],eax
  4244b7:	cmp    eax,0x5
  4244ba:	jge    0x4244cc
  4244bc:	mov    cx,WORD PTR [eax*2+0x4652d0]
  4244c4:	mov    WORD PTR [esi+eax*2+0x10],cx
  4244c9:	inc    eax
  4244ca:	jmp    0x4244b4
  4244cc:	xor    eax,eax
  4244ce:	mov    DWORD PTR [ebp-0x24],eax
  4244d1:	cmp    eax,0x101
  4244d6:	jge    0x4244e5
  4244d8:	mov    cl,BYTE PTR [eax+0x4651c0]
  4244de:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  4244e2:	inc    eax
  4244e3:	jmp    0x4244ce
  4244e5:	xor    eax,eax
  4244e7:	mov    DWORD PTR [ebp-0x24],eax
  4244ea:	cmp    eax,0x100
  4244ef:	jge    0x424501
  4244f1:	mov    cl,BYTE PTR [eax+0x4652e0]
  4244f7:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  4244fe:	inc    eax
  4244ff:	jmp    0x4244e7
  424501:	mov    DWORD PTR ds:0x4651b8,esi
  424507:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42450b:	jne    0x424521
  42450d:	cmp    esi,DWORD PTR ds:0x4651b8
  424513:	je     0x424521
  424515:	push   esi
  424516:	call   0x42455a
  42451b:	pop    ecx
  42451c:	jmp    0x424521
  42451e:	mov    DWORD PTR [ebp-0x1c],edi
  424521:	or     DWORD PTR [ebp-0x4],0xffffffff
  424525:	call   0x424533
  42452a:	mov    eax,DWORD PTR [ebp-0x1c]
  42452d:	call   0x42398b
  424532:	ret    
  424533:	push   0xd
  424535:	call   0x423a7b
  42453a:	pop    ecx
  42453b:	ret    
  42453c:	cmp    DWORD PTR ds:0x46550c,0x0
  424543:	jne    0x424557
  424545:	push   0xfffffffd
  424547:	call   0x4243ec
  42454c:	pop    ecx
  42454d:	mov    DWORD PTR ds:0x46550c,0x1
  424557:	xor    eax,eax
  424559:	ret    
  42455a:	push   0xc
  42455c:	push   0x4285b8
  424561:	call   0x423950
  424566:	mov    esi,DWORD PTR [ebp+0x8]
  424569:	test   esi,esi
  42456b:	je     0x4245c5
  42456d:	cmp    DWORD PTR ds:0x4653e4,0x3
  424574:	jne    0x4245b6
  424576:	push   0x4
  424578:	call   0x423b0f
  42457d:	pop    ecx
  42457e:	and    DWORD PTR [ebp-0x4],0x0
  424582:	push   esi
  424583:	call   0x424d32
  424588:	pop    ecx
  424589:	mov    DWORD PTR [ebp-0x1c],eax
  42458c:	test   eax,eax
  42458e:	je     0x424599
  424590:	push   esi
  424591:	push   eax
  424592:	call   0x424d5d
  424597:	pop    ecx
  424598:	pop    ecx
  424599:	or     DWORD PTR [ebp-0x4],0xffffffff
  42459d:	call   0x4245ad
  4245a2:	cmp    DWORD PTR [ebp-0x1c],0x0
  4245a6:	jne    0x4245c5
  4245a8:	push   DWORD PTR [ebp+0x8]
  4245ab:	jmp    0x4245b7
  4245ad:	push   0x4
  4245af:	call   0x423a7b
  4245b4:	pop    ecx
  4245b5:	ret    
  4245b6:	push   esi
  4245b7:	push   0x0
  4245b9:	push   DWORD PTR ds:0x4653e0
  4245bf:	call   DWORD PTR ds:0x4280c8
  4245c5:	call   0x42398b
  4245ca:	ret    
  4245cb:	push   0xc
  4245cd:	push   0x4285c8
  4245d2:	call   0x423950
  4245d7:	mov    esi,DWORD PTR [ebp+0x8]
  4245da:	cmp    DWORD PTR ds:0x4653e4,0x3
  4245e1:	jne    0x424611
  4245e3:	cmp    esi,DWORD PTR ds:0x4651a4
  4245e9:	ja     0x424611
  4245eb:	push   0x4
  4245ed:	call   0x423b0f
  4245f2:	pop    ecx
  4245f3:	and    DWORD PTR [ebp-0x4],0x0
  4245f7:	push   esi
  4245f8:	call   0x425511
  4245fd:	pop    ecx
  4245fe:	mov    DWORD PTR [ebp-0x1c],eax
  424601:	or     DWORD PTR [ebp-0x4],0xffffffff
  424605:	call   0x42463d
  42460a:	mov    eax,DWORD PTR [ebp-0x1c]
  42460d:	test   eax,eax
  42460f:	jne    0x424634
  424611:	test   esi,esi
  424613:	jne    0x424616
  424615:	inc    esi
  424616:	cmp    DWORD PTR ds:0x4653e4,0x1
  42461d:	je     0x424625
  42461f:	add    esi,0xf
  424622:	and    esi,0xfffffff0
  424625:	push   esi
  424626:	push   0x0
  424628:	push   DWORD PTR ds:0x4653e0
  42462e:	call   DWORD PTR ds:0x4280e4
  424634:	call   0x42398b
  424639:	ret    
  42463a:	mov    esi,DWORD PTR [ebp+0x8]
  42463d:	push   0x4
  42463f:	call   0x423a7b
  424644:	pop    ecx
  424645:	ret    
  424646:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42464b:	ja     0x42466f
  42464d:	push   DWORD PTR [esp+0x4]
  424651:	call   0x4245cb
  424656:	test   eax,eax
  424658:	pop    ecx
  424659:	jne    0x424671
  42465b:	cmp    DWORD PTR [esp+0x8],eax
  42465f:	je     0x424671
  424661:	push   DWORD PTR [esp+0x4]
  424665:	call   0x426232
  42466a:	test   eax,eax
  42466c:	pop    ecx
  42466d:	jne    0x42464d
  42466f:	xor    eax,eax
  424671:	ret    
  424672:	push   DWORD PTR ds:0x465068
  424678:	push   DWORD PTR [esp+0x8]
  42467c:	call   0x424646
  424681:	pop    ecx
  424682:	pop    ecx
  424683:	ret    
  424684:	int3   
  424685:	int3   
  424686:	int3   
  424687:	int3   
  424688:	int3   
  424689:	int3   
  42468a:	int3   
  42468b:	int3   
  42468c:	int3   
  42468d:	int3   
  42468e:	int3   
  42468f:	int3   
  424690:	push   ebp
  424691:	mov    ebp,esp
  424693:	push   edi
  424694:	push   esi
  424695:	mov    esi,DWORD PTR [ebp+0xc]
  424698:	mov    ecx,DWORD PTR [ebp+0x10]
  42469b:	mov    edi,DWORD PTR [ebp+0x8]
  42469e:	mov    eax,ecx
  4246a0:	mov    edx,ecx
  4246a2:	add    eax,esi
  4246a4:	cmp    edi,esi
  4246a6:	jbe    0x4246b0
  4246a8:	cmp    edi,eax
  4246aa:	jb     0x42482c
  4246b0:	test   edi,0x3
  4246b6:	jne    0x4246cc
  4246b8:	shr    ecx,0x2
  4246bb:	and    edx,0x3
  4246be:	cmp    ecx,0x8
  4246c1:	jb     0x4246ec
  4246c3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c5:	jmp    DWORD PTR [edx*4+0x4247dc]
  4246cc:	mov    eax,edi
  4246ce:	mov    edx,0x3
  4246d3:	sub    ecx,0x4
  4246d6:	jb     0x4246e4
  4246d8:	and    eax,0x3
  4246db:	add    ecx,eax
  4246dd:	jmp    DWORD PTR [eax*4+0x4246f0]
  4246e4:	jmp    DWORD PTR [ecx*4+0x4247ec]
  4246eb:	nop
  4246ec:	jmp    DWORD PTR [ecx*4+0x424770]
  4246f3:	nop
  4246f4:	add    BYTE PTR [edi+0x42],al
  4246f7:	add    BYTE PTR [edi+eax*2],ch
  4246fa:	inc    edx
  4246fb:	add    BYTE PTR [eax+0x47],dl
  4246fe:	inc    edx
  4246ff:	add    BYTE PTR [ebx],ah
  424701:	ror    DWORD PTR [edx-0x75f877fa],1
  424707:	inc    esi
  424708:	add    DWORD PTR [eax+0x468a0147],ecx
  42470e:	add    al,cl
  424710:	jmp    0x289cf17
  424715:	add    esi,0x3
  424718:	add    edi,0x3
  42471b:	cmp    ecx,0x8
  42471e:	jb     0x4246ec
  424720:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424722:	jmp    DWORD PTR [edx*4+0x4247dc]
  424729:	lea    ecx,[ecx+0x0]
  42472c:	and    edx,ecx
  42472e:	mov    al,BYTE PTR [esi]
  424730:	mov    BYTE PTR [edi],al
  424732:	mov    al,BYTE PTR [esi+0x1]
  424735:	shr    ecx,0x2
  424738:	mov    BYTE PTR [edi+0x1],al
  42473b:	add    esi,0x2
  42473e:	add    edi,0x2
  424741:	cmp    ecx,0x8
  424744:	jb     0x4246ec
  424746:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424748:	jmp    DWORD PTR [edx*4+0x4247dc]
  42474f:	nop
  424750:	and    edx,ecx
  424752:	mov    al,BYTE PTR [esi]
  424754:	mov    BYTE PTR [edi],al
  424756:	add    esi,0x1
  424759:	shr    ecx,0x2
  42475c:	add    edi,0x1
  42475f:	cmp    ecx,0x8
  424762:	jb     0x4246ec
  424764:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424766:	jmp    DWORD PTR [edx*4+0x4247dc]
  42476d:	lea    ecx,[ecx+0x0]
  424770:	rol    DWORD PTR [edi+0x42],cl
  424773:	add    al,al
  424775:	inc    edi
  424776:	inc    edx
  424777:	add    BYTE PTR [eax-0x4fffbdb9],bh
  42477d:	inc    edi
  42477e:	inc    edx
  42477f:	add    BYTE PTR [eax-0x5fffbdb9],ch
  424785:	inc    edi
  424786:	inc    edx
  424787:	add    BYTE PTR [eax-0x6fffbdb9],bl
  42478d:	inc    edi
  42478e:	inc    edx
  42478f:	add    BYTE PTR [ebx-0x761b71bc],cl
  424795:	inc    esp
  424796:	(bad)  
  424797:	in     al,0x8b
  424799:	inc    esp
  42479a:	mov    gs,eax
  42479c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4247a0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4247a4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4247a8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4247ac:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4247b0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4247b4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4247b8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4247bc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4247c0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4247c4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4247c8:	lea    eax,[ecx*4+0x0]
  4247cf:	add    esi,eax
  4247d1:	add    edi,eax
  4247d3:	jmp    DWORD PTR [edx*4+0x4247dc]
  4247da:	mov    edi,edi
  4247dc:	in     al,dx
  4247dd:	inc    edi
  4247de:	inc    edx
  4247df:	add    ah,dh
  4247e1:	inc    edi
  4247e2:	inc    edx
  4247e3:	add    BYTE PTR [eax],al
  4247e5:	dec    eax
  4247e6:	inc    edx
  4247e7:	add    BYTE PTR [eax+ecx*2],dl
  4247ea:	inc    edx
  4247eb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4247f1:	leave  
  4247f2:	ret    
  4247f3:	nop
  4247f4:	mov    al,BYTE PTR [esi]
  4247f6:	mov    BYTE PTR [edi],al
  4247f8:	mov    eax,DWORD PTR [ebp+0x8]
  4247fb:	pop    esi
  4247fc:	pop    edi
  4247fd:	leave  
  4247fe:	ret    
  4247ff:	nop
  424800:	mov    al,BYTE PTR [esi]
  424802:	mov    BYTE PTR [edi],al
  424804:	mov    al,BYTE PTR [esi+0x1]
  424807:	mov    BYTE PTR [edi+0x1],al
  42480a:	mov    eax,DWORD PTR [ebp+0x8]
  42480d:	pop    esi
  42480e:	pop    edi
  42480f:	leave  
  424810:	ret    
  424811:	lea    ecx,[ecx+0x0]
  424814:	mov    al,BYTE PTR [esi]
  424816:	mov    BYTE PTR [edi],al
  424818:	mov    al,BYTE PTR [esi+0x1]
  42481b:	mov    BYTE PTR [edi+0x1],al
  42481e:	mov    al,BYTE PTR [esi+0x2]
  424821:	mov    BYTE PTR [edi+0x2],al
  424824:	mov    eax,DWORD PTR [ebp+0x8]
  424827:	pop    esi
  424828:	pop    edi
  424829:	leave  
  42482a:	ret    
  42482b:	nop
  42482c:	lea    esi,[ecx+esi*1-0x4]
  424830:	lea    edi,[ecx+edi*1-0x4]
  424834:	test   edi,0x3
  42483a:	jne    0x424860
  42483c:	shr    ecx,0x2
  42483f:	and    edx,0x3
  424842:	cmp    ecx,0x8
  424845:	jb     0x424854
  424847:	std    
  424848:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42484a:	cld    
  42484b:	jmp    DWORD PTR [edx*4+0x424978]
  424852:	mov    edi,edi
  424854:	neg    ecx
  424856:	jmp    DWORD PTR [ecx*4+0x424928]
  42485d:	lea    ecx,[ecx+0x0]
  424860:	mov    eax,edi
  424862:	mov    edx,0x3
  424867:	cmp    ecx,0x4
  42486a:	jb     0x424878
  42486c:	and    eax,0x3
  42486f:	sub    ecx,eax
  424871:	jmp    DWORD PTR [eax*4+0x42487c]
  424878:	jmp    DWORD PTR [ecx*4+0x424978]
  42487f:	nop
  424880:	mov    WORD PTR [eax+0x42],cs
  424883:	add    BYTE PTR [eax-0x27ffbdb8],dh
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [edx-0x2edcfcba],cl
  424891:	mov    BYTE PTR [edi+0x3],al
  424894:	sub    esi,0x1
  424897:	shr    ecx,0x2
  42489a:	sub    edi,0x1
  42489d:	cmp    ecx,0x8
  4248a0:	jb     0x424854
  4248a2:	std    
  4248a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248a5:	cld    
  4248a6:	jmp    DWORD PTR [edx*4+0x424978]
  4248ad:	lea    ecx,[ecx+0x0]
  4248b0:	mov    al,BYTE PTR [esi+0x3]
  4248b3:	and    edx,ecx
  4248b5:	mov    BYTE PTR [edi+0x3],al
  4248b8:	mov    al,BYTE PTR [esi+0x2]
  4248bb:	shr    ecx,0x2
  4248be:	mov    BYTE PTR [edi+0x2],al
  4248c1:	sub    esi,0x2
  4248c4:	sub    edi,0x2
  4248c7:	cmp    ecx,0x8
  4248ca:	jb     0x424854
  4248cc:	std    
  4248cd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248cf:	cld    
  4248d0:	jmp    DWORD PTR [edx*4+0x424978]
  4248d7:	nop
  4248d8:	mov    al,BYTE PTR [esi+0x3]
  4248db:	and    edx,ecx
  4248dd:	mov    BYTE PTR [edi+0x3],al
  4248e0:	mov    al,BYTE PTR [esi+0x2]
  4248e3:	mov    BYTE PTR [edi+0x2],al
  4248e6:	mov    al,BYTE PTR [esi+0x1]
  4248e9:	shr    ecx,0x2
  4248ec:	mov    BYTE PTR [edi+0x1],al
  4248ef:	sub    esi,0x3
  4248f2:	sub    edi,0x3
  4248f5:	cmp    ecx,0x8
  4248f8:	jb     0x424854
  4248fe:	std    
  4248ff:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424901:	cld    
  424902:	jmp    DWORD PTR [edx*4+0x424978]
  424909:	lea    ecx,[ecx+0x0]
  42490c:	sub    al,0x49
  42490e:	inc    edx
  42490f:	add    BYTE PTR [ecx+ecx*2],dh
  424912:	inc    edx
  424913:	add    BYTE PTR [ecx+ecx*2],bh
  424916:	inc    edx
  424917:	add    BYTE PTR [ecx+ecx*2+0x42],al
  42491b:	add    BYTE PTR [ecx+ecx*2+0x42],cl
  42491f:	add    BYTE PTR [ecx+ecx*2+0x42],dl
  424923:	add    BYTE PTR [ecx+ecx*2+0x42],bl
  424927:	add    BYTE PTR [edi+0x49],ch
  42492a:	inc    edx
  42492b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424931:	inc    esp
  424932:	(bad)  
  424933:	sbb    al,0x8b
  424935:	inc    esp
  424936:	mov    ds,WORD PTR [eax]
  424938:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42493c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  424940:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  424944:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  424948:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42494c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  424950:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  424954:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  424958:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42495c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  424960:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  424964:	lea    eax,[ecx*4+0x0]
  42496b:	add    esi,eax
  42496d:	add    edi,eax
  42496f:	jmp    DWORD PTR [edx*4+0x424978]
  424976:	mov    edi,edi
  424978:	mov    BYTE PTR [ecx+0x42],cl
  42497b:	add    BYTE PTR [eax-0x5fffbdb7],dl
  424981:	dec    ecx
  424982:	inc    edx
  424983:	add    BYTE PTR [ecx+ecx*2+0x458b0042],dh
  42498a:	or     BYTE PTR [esi+0x5f],bl
  42498d:	leave  
  42498e:	ret    
  42498f:	nop
  424990:	mov    al,BYTE PTR [esi+0x3]
  424993:	mov    BYTE PTR [edi+0x3],al
  424996:	mov    eax,DWORD PTR [ebp+0x8]
  424999:	pop    esi
  42499a:	pop    edi
  42499b:	leave  
  42499c:	ret    
  42499d:	lea    ecx,[ecx+0x0]
  4249a0:	mov    al,BYTE PTR [esi+0x3]
  4249a3:	mov    BYTE PTR [edi+0x3],al
  4249a6:	mov    al,BYTE PTR [esi+0x2]
  4249a9:	mov    BYTE PTR [edi+0x2],al
  4249ac:	mov    eax,DWORD PTR [ebp+0x8]
  4249af:	pop    esi
  4249b0:	pop    edi
  4249b1:	leave  
  4249b2:	ret    
  4249b3:	nop
  4249b4:	mov    al,BYTE PTR [esi+0x3]
  4249b7:	mov    BYTE PTR [edi+0x3],al
  4249ba:	mov    al,BYTE PTR [esi+0x2]
  4249bd:	mov    BYTE PTR [edi+0x2],al
  4249c0:	mov    al,BYTE PTR [esi+0x1]
  4249c3:	mov    BYTE PTR [edi+0x1],al
  4249c6:	mov    eax,DWORD PTR [ebp+0x8]
  4249c9:	pop    esi
  4249ca:	pop    edi
  4249cb:	leave  
  4249cc:	ret    
  4249cd:	push   DWORD PTR [esp+0x4]
  4249d1:	call   DWORD PTR ds:0x4280e8
  4249d7:	xor    eax,eax
  4249d9:	inc    eax
  4249da:	ret    0x8
  4249dd:	push   0x10
  4249df:	push   0x428610
  4249e4:	call   0x423950
  4249e9:	mov    eax,ds:0x465028
  4249ee:	test   eax,eax
  4249f0:	jne    0x424a29
  4249f2:	cmp    DWORD PTR ds:0x464d64,0x1
  4249f9:	je     0x424a1f
  4249fb:	push   0x4285fc
  424a00:	call   DWORD PTR ds:0x428044
  424a06:	test   eax,eax
  424a08:	je     0x424a1f
  424a0a:	push   0x4285d4
  424a0f:	push   eax
  424a10:	call   DWORD PTR ds:0x42804c
  424a16:	mov    ds:0x465028,eax
  424a1b:	test   eax,eax
  424a1d:	jne    0x424a29
  424a1f:	mov    eax,0x4249cd
  424a24:	mov    ds:0x465028,eax
  424a29:	and    DWORD PTR [ebp-0x4],0x0
  424a2d:	push   DWORD PTR [ebp+0xc]
  424a30:	push   DWORD PTR [ebp+0x8]
  424a33:	call   eax
  424a35:	mov    DWORD PTR [ebp-0x1c],eax
  424a38:	jmp    0x424a5e
  424a3a:	mov    eax,DWORD PTR [ebp-0x14]
  424a3d:	mov    eax,DWORD PTR [eax]
  424a3f:	mov    eax,DWORD PTR [eax]
  424a41:	mov    DWORD PTR [ebp-0x20],eax
  424a44:	xor    eax,eax
  424a46:	inc    eax
  424a47:	ret    
  424a48:	mov    esp,DWORD PTR [ebp-0x18]
  424a4b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  424a52:	jne    0x424a5c
  424a54:	push   0x8
  424a56:	call   DWORD PTR ds:0x4280a8
  424a5c:	xor    eax,eax
  424a5e:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a62:	call   0x42398b
  424a67:	ret    
  424a68:	push   0x10
  424a6a:	push   0x428620
  424a6f:	call   0x423950
  424a74:	mov    esi,DWORD PTR [ebp+0x8]
  424a77:	imul   esi,DWORD PTR [ebp+0xc]
  424a7b:	mov    DWORD PTR [ebp-0x1c],esi
  424a7e:	test   esi,esi
  424a80:	jne    0x424a83
  424a82:	inc    esi
  424a83:	xor    edi,edi
  424a85:	mov    DWORD PTR [ebp-0x20],edi
  424a88:	cmp    esi,0xffffffe0
  424a8b:	ja     0x424af2
  424a8d:	cmp    DWORD PTR ds:0x4653e4,0x3
  424a94:	jne    0x424add
  424a96:	add    esi,0xf
  424a99:	and    esi,0xfffffff0
  424a9c:	mov    DWORD PTR [ebp+0xc],esi
  424a9f:	mov    ebx,DWORD PTR [ebp-0x1c]
  424aa2:	cmp    ebx,DWORD PTR ds:0x4651a4
  424aa8:	ja     0x424add
  424aaa:	push   0x4
  424aac:	call   0x423b0f
  424ab1:	pop    ecx
  424ab2:	and    DWORD PTR [ebp-0x4],edi
  424ab5:	push   ebx
  424ab6:	call   0x425511
  424abb:	pop    ecx
  424abc:	mov    DWORD PTR [ebp-0x20],eax
  424abf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424ac3:	call   0x424b12
  424ac8:	mov    edi,DWORD PTR [ebp-0x20]
  424acb:	test   edi,edi
  424acd:	je     0x424ae1
  424acf:	push   DWORD PTR [ebp-0x1c]
  424ad2:	push   0x0
  424ad4:	push   edi
  424ad5:	call   0x426250
  424ada:	add    esp,0xc
  424add:	test   edi,edi
  424adf:	jne    0x424b1b
  424ae1:	push   esi
  424ae2:	push   0x8
  424ae4:	push   DWORD PTR ds:0x4653e0
  424aea:	call   DWORD PTR ds:0x4280e4
  424af0:	mov    edi,eax
  424af2:	test   edi,edi
  424af4:	jne    0x424b1b
  424af6:	cmp    DWORD PTR ds:0x465068,edi
  424afc:	je     0x424b1b
  424afe:	push   esi
  424aff:	call   0x426232
  424b04:	pop    ecx
  424b05:	test   eax,eax
  424b07:	jne    0x424a83
  424b0d:	jmp    0x424b1d
  424b0f:	mov    esi,DWORD PTR [ebp+0xc]
  424b12:	push   0x4
  424b14:	call   0x423a7b
  424b19:	pop    ecx
  424b1a:	ret    
  424b1b:	mov    eax,edi
  424b1d:	call   0x42398b
  424b22:	ret    
  424b23:	push   esi
  424b24:	mov    esi,DWORD PTR [esp+0x8]
  424b28:	mov    eax,DWORD PTR [esi+0x3c]
  424b2b:	push   edi
  424b2c:	xor    edi,edi
  424b2e:	cmp    eax,DWORD PTR ds:0x465074
  424b34:	je     0x424b99
  424b36:	cmp    eax,edi
  424b38:	je     0x424b99
  424b3a:	mov    eax,DWORD PTR [esi+0x2c]
  424b3d:	cmp    DWORD PTR [eax],edi
  424b3f:	jne    0x424b99
  424b41:	mov    eax,DWORD PTR [esi+0x34]
  424b44:	cmp    eax,edi
  424b46:	je     0x424b64
  424b48:	cmp    DWORD PTR [eax],edi
  424b4a:	jne    0x424b64
  424b4c:	cmp    eax,DWORD PTR ds:0x465190
  424b52:	je     0x424b64
  424b54:	push   eax
  424b55:	call   0x42455a
  424b5a:	push   DWORD PTR [esi+0x3c]
  424b5d:	call   0x42649f
  424b62:	pop    ecx
  424b63:	pop    ecx
  424b64:	mov    eax,DWORD PTR [esi+0x30]
  424b67:	cmp    eax,edi
  424b69:	je     0x424b87
  424b6b:	cmp    DWORD PTR [eax],edi
  424b6d:	jne    0x424b87
  424b6f:	cmp    eax,DWORD PTR ds:0x465194
  424b75:	je     0x424b87
  424b77:	push   eax
  424b78:	call   0x42455a
  424b7d:	push   DWORD PTR [esi+0x3c]
  424b80:	call   0x426440
  424b85:	pop    ecx
  424b86:	pop    ecx
  424b87:	push   DWORD PTR [esi+0x2c]
  424b8a:	call   0x42455a
  424b8f:	push   DWORD PTR [esi+0x3c]
  424b92:	call   0x42455a
  424b97:	pop    ecx
  424b98:	pop    ecx
  424b99:	mov    eax,DWORD PTR [esi+0x40]
  424b9c:	cmp    eax,DWORD PTR ds:0x46518c
  424ba2:	je     0x424bbc
  424ba4:	cmp    eax,edi
  424ba6:	je     0x424bbc
  424ba8:	cmp    DWORD PTR [eax],edi
  424baa:	jne    0x424bbc
  424bac:	push   eax
  424bad:	call   0x42455a
  424bb2:	push   DWORD PTR [esi+0x44]
  424bb5:	call   0x42455a
  424bba:	pop    ecx
  424bbb:	pop    ecx
  424bbc:	mov    eax,DWORD PTR [esi+0x50]
  424bbf:	cmp    eax,DWORD PTR ds:0x465070
  424bc5:	je     0x424be3
  424bc7:	cmp    eax,edi
  424bc9:	je     0x424be3
  424bcb:	cmp    DWORD PTR [eax+0xb4],edi
  424bd1:	jne    0x424be3
  424bd3:	push   eax
  424bd4:	call   0x4262b0
  424bd9:	push   DWORD PTR [esi+0x50]
  424bdc:	call   0x42455a
  424be1:	pop    ecx
  424be2:	pop    ecx
  424be3:	push   esi
  424be4:	call   0x42455a
  424be9:	pop    ecx
  424bea:	pop    edi
  424beb:	pop    esi
  424bec:	ret    
  424bed:	push   esi
  424bee:	call   0x423803
  424bf3:	mov    esi,eax
  424bf5:	mov    eax,DWORD PTR [esi+0x64]
  424bf8:	cmp    eax,DWORD PTR ds:0x46481c
  424bfe:	je     0x424caa
  424c04:	test   eax,eax
  424c06:	je     0x424c37
  424c08:	mov    ecx,DWORD PTR [eax+0x2c]
  424c0b:	dec    DWORD PTR [eax]
  424c0d:	test   ecx,ecx
  424c0f:	je     0x424c13
  424c11:	dec    DWORD PTR [ecx]
  424c13:	mov    ecx,DWORD PTR [eax+0x34]
  424c16:	test   ecx,ecx
  424c18:	je     0x424c1c
  424c1a:	dec    DWORD PTR [ecx]
  424c1c:	mov    ecx,DWORD PTR [eax+0x30]
  424c1f:	test   ecx,ecx
  424c21:	je     0x424c25
  424c23:	dec    DWORD PTR [ecx]
  424c25:	mov    ecx,DWORD PTR [eax+0x40]
  424c28:	test   ecx,ecx
  424c2a:	je     0x424c2e
  424c2c:	dec    DWORD PTR [ecx]
  424c2e:	mov    ecx,DWORD PTR [eax+0x4c]
  424c31:	dec    DWORD PTR [ecx+0xb4]
  424c37:	mov    ecx,DWORD PTR ds:0x46481c
  424c3d:	mov    DWORD PTR [esi+0x64],ecx
  424c40:	mov    ecx,DWORD PTR ds:0x46481c
  424c46:	inc    DWORD PTR [ecx]
  424c48:	mov    ecx,DWORD PTR ds:0x46481c
  424c4e:	mov    ecx,DWORD PTR [ecx+0x2c]
  424c51:	test   ecx,ecx
  424c53:	je     0x424c57
  424c55:	inc    DWORD PTR [ecx]
  424c57:	mov    ecx,DWORD PTR ds:0x46481c
  424c5d:	mov    ecx,DWORD PTR [ecx+0x34]
  424c60:	test   ecx,ecx
  424c62:	je     0x424c66
  424c64:	inc    DWORD PTR [ecx]
  424c66:	mov    ecx,DWORD PTR ds:0x46481c
  424c6c:	mov    ecx,DWORD PTR [ecx+0x30]
  424c6f:	test   ecx,ecx
  424c71:	je     0x424c75
  424c73:	inc    DWORD PTR [ecx]
  424c75:	mov    ecx,DWORD PTR ds:0x46481c
  424c7b:	mov    ecx,DWORD PTR [ecx+0x40]
  424c7e:	test   ecx,ecx
  424c80:	je     0x424c84
  424c82:	inc    DWORD PTR [ecx]
  424c84:	mov    ecx,DWORD PTR ds:0x46481c
  424c8a:	mov    ecx,DWORD PTR [ecx+0x4c]
  424c8d:	inc    DWORD PTR [ecx+0xb4]
  424c93:	test   eax,eax
  424c95:	je     0x424caa
  424c97:	cmp    DWORD PTR [eax],0x0
  424c9a:	jne    0x424caa
  424c9c:	cmp    eax,0x4647c8
  424ca1:	je     0x424caa
  424ca3:	push   eax
  424ca4:	call   0x424b23
  424ca9:	pop    ecx
  424caa:	mov    eax,DWORD PTR [esi+0x64]
  424cad:	pop    esi
  424cae:	ret    
  424caf:	push   0xc
  424cb1:	push   0x4287b0
  424cb6:	call   0x423950
  424cbb:	push   0xc
  424cbd:	call   0x423b0f
  424cc2:	pop    ecx
  424cc3:	and    DWORD PTR [ebp-0x4],0x0
  424cc7:	call   0x424bed
  424ccc:	mov    DWORD PTR [ebp-0x1c],eax
  424ccf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424cd3:	call   0x424ce1
  424cd8:	mov    eax,DWORD PTR [ebp-0x1c]
  424cdb:	call   0x42398b
  424ce0:	ret    
  424ce1:	push   0xc
  424ce3:	call   0x423a7b
  424ce8:	pop    ecx
  424ce9:	ret    
  424cea:	push   0x140
  424cef:	push   0x0
  424cf1:	push   DWORD PTR ds:0x4653e0
  424cf7:	call   DWORD PTR ds:0x4280e4
  424cfd:	test   eax,eax
  424cff:	mov    ds:0x4651a0,eax
  424d04:	jne    0x424d07
  424d06:	ret    
  424d07:	mov    ecx,DWORD PTR [esp+0x4]
  424d0b:	and    DWORD PTR ds:0x465198,0x0
  424d12:	and    DWORD PTR ds:0x46519c,0x0
  424d19:	mov    ds:0x4651a8,eax
  424d1e:	xor    eax,eax
  424d20:	mov    DWORD PTR ds:0x4651a4,ecx
  424d26:	mov    DWORD PTR ds:0x4651ac,0x10
  424d30:	inc    eax
  424d31:	ret    
  424d32:	mov    eax,ds:0x46519c
  424d37:	lea    ecx,[eax+eax*4]
  424d3a:	mov    eax,ds:0x4651a0
  424d3f:	lea    ecx,[eax+ecx*4]
  424d42:	jmp    0x424d56
  424d44:	mov    edx,DWORD PTR [esp+0x4]
  424d48:	sub    edx,DWORD PTR [eax+0xc]
  424d4b:	cmp    edx,0x100000
  424d51:	jb     0x424d5c
  424d53:	add    eax,0x14
  424d56:	cmp    eax,ecx
  424d58:	jb     0x424d44
  424d5a:	xor    eax,eax
  424d5c:	ret    
  424d5d:	push   ebp
  424d5e:	mov    ebp,esp
  424d60:	sub    esp,0x10
  424d63:	mov    ecx,DWORD PTR [ebp+0x8]
  424d66:	mov    eax,DWORD PTR [ecx+0x10]
  424d69:	push   esi
  424d6a:	mov    esi,DWORD PTR [ebp+0xc]
  424d6d:	push   edi
  424d6e:	mov    edi,esi
  424d70:	sub    edi,DWORD PTR [ecx+0xc]
  424d73:	add    esi,0xfffffffc
  424d76:	shr    edi,0xf
  424d79:	mov    ecx,edi
  424d7b:	imul   ecx,ecx,0x204
  424d81:	lea    ecx,[ecx+eax*1+0x144]
  424d88:	mov    DWORD PTR [ebp-0x10],ecx
  424d8b:	mov    ecx,DWORD PTR [esi]
  424d8d:	dec    ecx
  424d8e:	test   cl,0x1
  424d91:	mov    DWORD PTR [ebp-0x4],ecx
  424d94:	jne    0x425071
  424d9a:	push   ebx
  424d9b:	lea    ebx,[ecx+esi*1]
  424d9e:	mov    edx,DWORD PTR [ebx]
  424da0:	mov    DWORD PTR [ebp-0xc],edx
  424da3:	mov    edx,DWORD PTR [esi-0x4]
  424da6:	mov    DWORD PTR [ebp-0x8],edx
  424da9:	mov    edx,DWORD PTR [ebp-0xc]
  424dac:	test   dl,0x1
  424daf:	mov    DWORD PTR [ebp+0xc],ebx
  424db2:	jne    0x424e28
  424db4:	sar    edx,0x4
  424db7:	dec    edx
  424db8:	cmp    edx,0x3f
  424dbb:	jbe    0x424dc0
  424dbd:	push   0x3f
  424dbf:	pop    edx
  424dc0:	mov    ecx,DWORD PTR [ebx+0x4]
  424dc3:	cmp    ecx,DWORD PTR [ebx+0x8]
  424dc6:	jne    0x424e0a
  424dc8:	cmp    edx,0x20
  424dcb:	mov    ebx,0x80000000
  424dd0:	jae    0x424deb
  424dd2:	mov    ecx,edx
  424dd4:	shr    ebx,cl
  424dd6:	lea    ecx,[edx+eax*1+0x4]
  424dda:	not    ebx
  424ddc:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424de0:	dec    BYTE PTR [ecx]
  424de2:	jne    0x424e07
  424de4:	mov    ecx,DWORD PTR [ebp+0x8]
  424de7:	and    DWORD PTR [ecx],ebx
  424de9:	jmp    0x424e07
  424deb:	lea    ecx,[edx-0x20]
  424dee:	shr    ebx,cl
  424df0:	lea    ecx,[edx+eax*1+0x4]
  424df4:	not    ebx
  424df6:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424dfd:	dec    BYTE PTR [ecx]
  424dff:	jne    0x424e07
  424e01:	mov    ecx,DWORD PTR [ebp+0x8]
  424e04:	and    DWORD PTR [ecx+0x4],ebx
  424e07:	mov    ebx,DWORD PTR [ebp+0xc]
  424e0a:	mov    edx,DWORD PTR [ebx+0x8]
  424e0d:	mov    ebx,DWORD PTR [ebx+0x4]
  424e10:	mov    ecx,DWORD PTR [ebp-0x4]
  424e13:	add    ecx,DWORD PTR [ebp-0xc]
  424e16:	mov    DWORD PTR [edx+0x4],ebx
  424e19:	mov    edx,DWORD PTR [ebp+0xc]
  424e1c:	mov    ebx,DWORD PTR [edx+0x4]
  424e1f:	mov    edx,DWORD PTR [edx+0x8]
  424e22:	mov    DWORD PTR [ebx+0x8],edx
  424e25:	mov    DWORD PTR [ebp-0x4],ecx
  424e28:	mov    edx,ecx
  424e2a:	sar    edx,0x4
  424e2d:	dec    edx
  424e2e:	cmp    edx,0x3f
  424e31:	jbe    0x424e36
  424e33:	push   0x3f
  424e35:	pop    edx
  424e36:	mov    ebx,DWORD PTR [ebp-0x8]
  424e39:	and    ebx,0x1
  424e3c:	mov    DWORD PTR [ebp-0xc],ebx
  424e3f:	jne    0x424ed4
  424e45:	sub    esi,DWORD PTR [ebp-0x8]
  424e48:	mov    ebx,DWORD PTR [ebp-0x8]
  424e4b:	sar    ebx,0x4
  424e4e:	push   0x3f
  424e50:	mov    DWORD PTR [ebp+0xc],esi
  424e53:	dec    ebx
  424e54:	pop    esi
  424e55:	cmp    ebx,esi
  424e57:	jbe    0x424e5b
  424e59:	mov    ebx,esi
  424e5b:	add    ecx,DWORD PTR [ebp-0x8]
  424e5e:	mov    edx,ecx
  424e60:	sar    edx,0x4
  424e63:	dec    edx
  424e64:	cmp    edx,esi
  424e66:	mov    DWORD PTR [ebp-0x4],ecx
  424e69:	jbe    0x424e6d
  424e6b:	mov    edx,esi
  424e6d:	cmp    ebx,edx
  424e6f:	je     0x424ecf
  424e71:	mov    ecx,DWORD PTR [ebp+0xc]
  424e74:	mov    esi,DWORD PTR [ecx+0x4]
  424e77:	cmp    esi,DWORD PTR [ecx+0x8]
  424e7a:	jne    0x424eb7
  424e7c:	cmp    ebx,0x20
  424e7f:	mov    esi,0x80000000
  424e84:	jae    0x424e9d
  424e86:	mov    ecx,ebx
  424e88:	shr    esi,cl
  424e8a:	not    esi
  424e8c:	and    DWORD PTR [eax+edi*4+0x44],esi
  424e90:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e94:	jne    0x424eb7
  424e96:	mov    ecx,DWORD PTR [ebp+0x8]
  424e99:	and    DWORD PTR [ecx],esi
  424e9b:	jmp    0x424eb7
  424e9d:	lea    ecx,[ebx-0x20]
  424ea0:	shr    esi,cl
  424ea2:	not    esi
  424ea4:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424eab:	dec    BYTE PTR [ebx+eax*1+0x4]
  424eaf:	jne    0x424eb7
  424eb1:	mov    ecx,DWORD PTR [ebp+0x8]
  424eb4:	and    DWORD PTR [ecx+0x4],esi
  424eb7:	mov    ecx,DWORD PTR [ebp+0xc]
  424eba:	mov    esi,DWORD PTR [ecx+0x8]
  424ebd:	mov    ecx,DWORD PTR [ecx+0x4]
  424ec0:	mov    DWORD PTR [esi+0x4],ecx
  424ec3:	mov    ecx,DWORD PTR [ebp+0xc]
  424ec6:	mov    esi,DWORD PTR [ecx+0x4]
  424ec9:	mov    ecx,DWORD PTR [ecx+0x8]
  424ecc:	mov    DWORD PTR [esi+0x8],ecx
  424ecf:	mov    esi,DWORD PTR [ebp+0xc]
  424ed2:	jmp    0x424ed7
  424ed4:	mov    ebx,DWORD PTR [ebp+0x8]
  424ed7:	cmp    DWORD PTR [ebp-0xc],0x0
  424edb:	jne    0x424ee5
  424edd:	cmp    ebx,edx
  424edf:	je     0x424f65
  424ee5:	mov    ecx,DWORD PTR [ebp-0x10]
  424ee8:	lea    ecx,[ecx+edx*8]
  424eeb:	mov    ebx,DWORD PTR [ecx+0x4]
  424eee:	mov    DWORD PTR [esi+0x8],ecx
  424ef1:	mov    DWORD PTR [esi+0x4],ebx
  424ef4:	mov    DWORD PTR [ecx+0x4],esi
  424ef7:	mov    ecx,DWORD PTR [esi+0x4]
  424efa:	mov    DWORD PTR [ecx+0x8],esi
  424efd:	mov    ecx,DWORD PTR [esi+0x4]
  424f00:	cmp    ecx,DWORD PTR [esi+0x8]
  424f03:	jne    0x424f65
  424f05:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424f09:	mov    BYTE PTR [ebp+0xf],cl
  424f0c:	inc    cl
  424f0e:	cmp    edx,0x20
  424f11:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424f15:	jae    0x424f3c
  424f17:	cmp    BYTE PTR [ebp+0xf],0x0
  424f1b:	jne    0x424f2b
  424f1d:	mov    ecx,edx
  424f1f:	mov    ebx,0x80000000
  424f24:	shr    ebx,cl
  424f26:	mov    ecx,DWORD PTR [ebp+0x8]
  424f29:	or     DWORD PTR [ecx],ebx
  424f2b:	mov    ebx,0x80000000
  424f30:	mov    ecx,edx
  424f32:	shr    ebx,cl
  424f34:	lea    eax,[eax+edi*4+0x44]
  424f38:	or     DWORD PTR [eax],ebx
  424f3a:	jmp    0x424f65
  424f3c:	cmp    BYTE PTR [ebp+0xf],0x0
  424f40:	jne    0x424f52
  424f42:	lea    ecx,[edx-0x20]
  424f45:	mov    ebx,0x80000000
  424f4a:	shr    ebx,cl
  424f4c:	mov    ecx,DWORD PTR [ebp+0x8]
  424f4f:	or     DWORD PTR [ecx+0x4],ebx
  424f52:	lea    ecx,[edx-0x20]
  424f55:	mov    edx,0x80000000
  424f5a:	shr    edx,cl
  424f5c:	lea    eax,[eax+edi*4+0xc4]
  424f63:	or     DWORD PTR [eax],edx
  424f65:	mov    eax,DWORD PTR [ebp-0x4]
  424f68:	mov    DWORD PTR [esi],eax
  424f6a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424f6e:	mov    eax,DWORD PTR [ebp-0x10]
  424f71:	dec    DWORD PTR [eax]
  424f73:	jne    0x425070
  424f79:	mov    eax,ds:0x465198
  424f7e:	test   eax,eax
  424f80:	je     0x425062
  424f86:	mov    ecx,DWORD PTR ds:0x4651b0
  424f8c:	mov    esi,DWORD PTR ds:0x4280c4
  424f92:	push   0x4000
  424f97:	shl    ecx,0xf
  424f9a:	add    ecx,DWORD PTR [eax+0xc]
  424f9d:	mov    ebx,0x8000
  424fa2:	push   ebx
  424fa3:	push   ecx
  424fa4:	call   esi
  424fa6:	mov    ecx,DWORD PTR ds:0x4651b0
  424fac:	mov    eax,ds:0x465198
  424fb1:	mov    edx,0x80000000
  424fb6:	shr    edx,cl
  424fb8:	or     DWORD PTR [eax+0x8],edx
  424fbb:	mov    eax,ds:0x465198
  424fc0:	mov    eax,DWORD PTR [eax+0x10]
  424fc3:	mov    ecx,DWORD PTR ds:0x4651b0
  424fc9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424fd1:	mov    eax,ds:0x465198
  424fd6:	mov    eax,DWORD PTR [eax+0x10]
  424fd9:	dec    BYTE PTR [eax+0x43]
  424fdc:	mov    eax,ds:0x465198
  424fe1:	mov    ecx,DWORD PTR [eax+0x10]
  424fe4:	cmp    BYTE PTR [ecx+0x43],0x0
  424fe8:	jne    0x424ff3
  424fea:	and    DWORD PTR [eax+0x4],0xfffffffe
  424fee:	mov    eax,ds:0x465198
  424ff3:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424ff7:	jne    0x425062
  424ff9:	push   ebx
  424ffa:	push   0x0
  424ffc:	push   DWORD PTR [eax+0xc]
  424fff:	call   esi
  425001:	mov    eax,ds:0x465198
  425006:	push   DWORD PTR [eax+0x10]
  425009:	push   0x0
  42500b:	push   DWORD PTR ds:0x4653e0
  425011:	call   DWORD PTR ds:0x4280c8
  425017:	mov    eax,ds:0x46519c
  42501c:	mov    edx,DWORD PTR ds:0x4651a0
  425022:	lea    eax,[eax+eax*4]
  425025:	shl    eax,0x2
  425028:	mov    ecx,eax
  42502a:	mov    eax,ds:0x465198
  42502f:	sub    ecx,eax
  425031:	lea    ecx,[ecx+edx*1-0x14]
  425035:	push   ecx
  425036:	lea    ecx,[eax+0x14]
  425039:	push   ecx
  42503a:	push   eax
  42503b:	call   0x426890
  425040:	mov    eax,DWORD PTR [ebp+0x8]
  425043:	add    esp,0xc
  425046:	dec    DWORD PTR ds:0x46519c
  42504c:	cmp    eax,DWORD PTR ds:0x465198
  425052:	jbe    0x425058
  425054:	sub    DWORD PTR [ebp+0x8],0x14
  425058:	mov    eax,ds:0x4651a0
  42505d:	mov    ds:0x4651a8,eax
  425062:	mov    eax,DWORD PTR [ebp+0x8]
  425065:	mov    ds:0x465198,eax
  42506a:	mov    DWORD PTR ds:0x4651b0,edi
  425070:	pop    ebx
  425071:	pop    edi
  425072:	pop    esi
  425073:	leave  
  425074:	ret    
  425075:	mov    eax,ds:0x46519c
  42507a:	mov    ecx,DWORD PTR ds:0x4651ac
  425080:	push   edi
  425081:	xor    edi,edi
  425083:	cmp    eax,ecx
  425085:	jne    0x4250bb
  425087:	lea    eax,[ecx+ecx*4+0x50]
  42508b:	shl    eax,0x2
  42508e:	push   eax
  42508f:	push   DWORD PTR ds:0x4651a0
  425095:	push   edi
  425096:	push   DWORD PTR ds:0x4653e0
  42509c:	call   DWORD PTR ds:0x4280f0
  4250a2:	cmp    eax,edi
  4250a4:	jne    0x4250aa
  4250a6:	xor    eax,eax
  4250a8:	pop    edi
  4250a9:	ret    
  4250aa:	add    DWORD PTR ds:0x4651ac,0x10
  4250b1:	mov    ds:0x4651a0,eax
  4250b6:	mov    eax,ds:0x46519c
  4250bb:	mov    ecx,DWORD PTR ds:0x4651a0
  4250c1:	push   esi
  4250c2:	push   0x41c4
  4250c7:	push   0x8
  4250c9:	push   DWORD PTR ds:0x4653e0
  4250cf:	lea    eax,[eax+eax*4]
  4250d2:	lea    esi,[ecx+eax*4]
  4250d5:	call   DWORD PTR ds:0x4280e4
  4250db:	cmp    eax,edi
  4250dd:	mov    DWORD PTR [esi+0x10],eax
  4250e0:	jne    0x4250e6
  4250e2:	xor    eax,eax
  4250e4:	jmp    0x425129
  4250e6:	push   0x4
  4250e8:	push   0x2000
  4250ed:	push   0x100000
  4250f2:	push   edi
  4250f3:	call   DWORD PTR ds:0x4280ec
  4250f9:	cmp    eax,edi
  4250fb:	mov    DWORD PTR [esi+0xc],eax
  4250fe:	jne    0x425112
  425100:	push   DWORD PTR [esi+0x10]
  425103:	push   edi
  425104:	push   DWORD PTR ds:0x4653e0
  42510a:	call   DWORD PTR ds:0x4280c8
  425110:	jmp    0x4250e2
  425112:	or     DWORD PTR [esi+0x8],0xffffffff
  425116:	mov    DWORD PTR [esi],edi
  425118:	mov    DWORD PTR [esi+0x4],edi
  42511b:	inc    DWORD PTR ds:0x46519c
  425121:	mov    eax,DWORD PTR [esi+0x10]
  425124:	or     DWORD PTR [eax],0xffffffff
  425127:	mov    eax,esi
  425129:	pop    esi
  42512a:	pop    edi
  42512b:	ret    
  42512c:	push   ebp
  42512d:	mov    ebp,esp
  42512f:	push   ecx
  425130:	push   ecx
  425131:	mov    ecx,DWORD PTR [ebp+0x8]
  425134:	mov    eax,DWORD PTR [ecx+0x8]
  425137:	push   ebx
  425138:	push   esi
  425139:	mov    esi,DWORD PTR [ecx+0x10]
  42513c:	push   edi
  42513d:	xor    ebx,ebx
  42513f:	jmp    0x425144
  425141:	shl    eax,1
  425143:	inc    ebx
  425144:	test   eax,eax
  425146:	jge    0x425141
  425148:	mov    eax,ebx
  42514a:	imul   eax,eax,0x204
  425150:	lea    eax,[eax+esi*1+0x144]
  425157:	push   0x3f
  425159:	mov    DWORD PTR [ebp-0x8],eax
  42515c:	pop    edx
  42515d:	mov    DWORD PTR [eax+0x8],eax
  425160:	mov    DWORD PTR [eax+0x4],eax
  425163:	add    eax,0x8
  425166:	dec    edx
  425167:	jne    0x42515d
  425169:	push   0x4
  42516b:	mov    edi,ebx
  42516d:	push   0x1000
  425172:	shl    edi,0xf
  425175:	add    edi,DWORD PTR [ecx+0xc]
  425178:	push   0x8000
  42517d:	push   edi
  42517e:	call   DWORD PTR ds:0x4280ec
  425184:	test   eax,eax
  425186:	jne    0x425190
  425188:	or     eax,0xffffffff
  42518b:	jmp    0x42522d
  425190:	lea    edx,[edi+0x7000]
  425196:	cmp    edi,edx
  425198:	mov    DWORD PTR [ebp-0x4],edx
  42519b:	ja     0x4251e0
  42519d:	mov    ecx,edx
  42519f:	sub    ecx,edi
  4251a1:	shr    ecx,0xc
  4251a4:	lea    eax,[edi+0x10]
  4251a7:	inc    ecx
  4251a8:	or     DWORD PTR [eax-0x8],0xffffffff
  4251ac:	or     DWORD PTR [eax+0xfec],0xffffffff
  4251b3:	lea    edx,[eax+0xffc]
  4251b9:	mov    DWORD PTR [eax],edx
  4251bb:	lea    edx,[eax-0x1004]
  4251c1:	mov    DWORD PTR [eax-0x4],0xff0
  4251c8:	mov    DWORD PTR [eax+0x4],edx
  4251cb:	mov    DWORD PTR [eax+0xfe8],0xff0
  4251d5:	add    eax,0x1000
  4251da:	dec    ecx
  4251db:	jne    0x4251a8
  4251dd:	mov    edx,DWORD PTR [ebp-0x4]
  4251e0:	mov    eax,DWORD PTR [ebp-0x8]
  4251e3:	add    eax,0x1f8
  4251e8:	lea    ecx,[edi+0xc]
  4251eb:	mov    DWORD PTR [eax+0x4],ecx
  4251ee:	mov    DWORD PTR [ecx+0x8],eax
  4251f1:	lea    ecx,[edx+0xc]
  4251f4:	mov    DWORD PTR [eax+0x8],ecx
  4251f7:	mov    DWORD PTR [ecx+0x4],eax
  4251fa:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  4251ff:	xor    edi,edi
  425201:	inc    edi
  425202:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425209:	mov    al,BYTE PTR [esi+0x43]
  42520c:	mov    cl,al
  42520e:	inc    cl
  425210:	test   al,al
  425212:	mov    eax,DWORD PTR [ebp+0x8]
  425215:	mov    BYTE PTR [esi+0x43],cl
  425218:	jne    0x42521d
  42521a:	or     DWORD PTR [eax+0x4],edi
  42521d:	mov    edx,0x80000000
  425222:	mov    ecx,ebx
  425224:	shr    edx,cl
  425226:	not    edx
  425228:	and    DWORD PTR [eax+0x8],edx
  42522b:	mov    eax,ebx
  42522d:	pop    edi
  42522e:	pop    esi
  42522f:	pop    ebx
  425230:	leave  
  425231:	ret    
  425232:	push   ebp
  425233:	mov    ebp,esp
  425235:	sub    esp,0xc
  425238:	mov    ecx,DWORD PTR [ebp+0x8]
  42523b:	mov    eax,DWORD PTR [ecx+0x10]
  42523e:	push   ebx
  42523f:	push   esi
  425240:	mov    esi,DWORD PTR [ebp+0x10]
  425243:	push   edi
  425244:	mov    edi,DWORD PTR [ebp+0xc]
  425247:	mov    edx,edi
  425249:	sub    edx,DWORD PTR [ecx+0xc]
  42524c:	add    esi,0x17
  42524f:	shr    edx,0xf
  425252:	mov    ecx,edx
  425254:	imul   ecx,ecx,0x204
  42525a:	lea    ecx,[ecx+eax*1+0x144]
  425261:	mov    DWORD PTR [ebp-0xc],ecx
  425264:	mov    ecx,DWORD PTR [edi-0x4]
  425267:	and    esi,0xfffffff0
  42526a:	dec    ecx
  42526b:	cmp    esi,ecx
  42526d:	lea    edi,[ecx+edi*1-0x4]
  425271:	mov    ebx,DWORD PTR [edi]
  425273:	mov    DWORD PTR [ebp+0x10],ecx
  425276:	mov    DWORD PTR [ebp-0x4],ebx
  425279:	jle    0x4253d4
  42527f:	test   bl,0x1
  425282:	jne    0x4253cd
  425288:	add    ebx,ecx
  42528a:	cmp    esi,ebx
  42528c:	jg     0x4253cd
  425292:	mov    ecx,DWORD PTR [ebp-0x4]
  425295:	sar    ecx,0x4
  425298:	dec    ecx
  425299:	cmp    ecx,0x3f
  42529c:	mov    DWORD PTR [ebp-0x8],ecx
  42529f:	jbe    0x4252a7
  4252a1:	push   0x3f
  4252a3:	pop    ecx
  4252a4:	mov    DWORD PTR [ebp-0x8],ecx
  4252a7:	mov    ebx,DWORD PTR [edi+0x4]
  4252aa:	cmp    ebx,DWORD PTR [edi+0x8]
  4252ad:	jne    0x4252f2
  4252af:	cmp    ecx,0x20
  4252b2:	mov    ebx,0x80000000
  4252b7:	jae    0x4252d3
  4252b9:	shr    ebx,cl
  4252bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4252be:	lea    ecx,[ecx+eax*1+0x4]
  4252c2:	not    ebx
  4252c4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  4252c8:	dec    BYTE PTR [ecx]
  4252ca:	jne    0x4252f2
  4252cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4252cf:	and    DWORD PTR [ecx],ebx
  4252d1:	jmp    0x4252f2
  4252d3:	add    ecx,0xffffffe0
  4252d6:	shr    ebx,cl
  4252d8:	mov    ecx,DWORD PTR [ebp-0x8]
  4252db:	lea    ecx,[ecx+eax*1+0x4]
  4252df:	not    ebx
  4252e1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4252e8:	dec    BYTE PTR [ecx]
  4252ea:	jne    0x4252f2
  4252ec:	mov    ecx,DWORD PTR [ebp+0x8]
  4252ef:	and    DWORD PTR [ecx+0x4],ebx
  4252f2:	mov    ecx,DWORD PTR [edi+0x8]
  4252f5:	mov    ebx,DWORD PTR [edi+0x4]
  4252f8:	mov    DWORD PTR [ecx+0x4],ebx
  4252fb:	mov    ecx,DWORD PTR [edi+0x4]
  4252fe:	mov    edi,DWORD PTR [edi+0x8]
  425301:	mov    DWORD PTR [ecx+0x8],edi
  425304:	mov    ecx,DWORD PTR [ebp+0x10]
  425307:	sub    ecx,esi
  425309:	add    DWORD PTR [ebp-0x4],ecx
  42530c:	cmp    DWORD PTR [ebp-0x4],0x0
  425310:	jle    0x4253bb
  425316:	mov    edi,DWORD PTR [ebp-0x4]
  425319:	mov    ecx,DWORD PTR [ebp+0xc]
  42531c:	sar    edi,0x4
  42531f:	dec    edi
  425320:	cmp    edi,0x3f
  425323:	lea    ecx,[ecx+esi*1-0x4]
  425327:	jbe    0x42532c
  425329:	push   0x3f
  42532b:	pop    edi
  42532c:	mov    ebx,DWORD PTR [ebp-0xc]
  42532f:	lea    ebx,[ebx+edi*8]
  425332:	mov    DWORD PTR [ebp+0x10],ebx
  425335:	mov    ebx,DWORD PTR [ebx+0x4]
  425338:	mov    DWORD PTR [ecx+0x4],ebx
  42533b:	mov    ebx,DWORD PTR [ebp+0x10]
  42533e:	mov    DWORD PTR [ecx+0x8],ebx
  425341:	mov    DWORD PTR [ebx+0x4],ecx
  425344:	mov    ebx,DWORD PTR [ecx+0x4]
  425347:	mov    DWORD PTR [ebx+0x8],ecx
  42534a:	mov    ebx,DWORD PTR [ecx+0x4]
  42534d:	cmp    ebx,DWORD PTR [ecx+0x8]
  425350:	jne    0x4253a9
  425352:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  425356:	mov    BYTE PTR [ebp+0x13],cl
  425359:	inc    cl
  42535b:	cmp    edi,0x20
  42535e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  425362:	jae    0x425380
  425364:	cmp    BYTE PTR [ebp+0x13],0x0
  425368:	jne    0x425378
  42536a:	mov    ecx,edi
  42536c:	mov    ebx,0x80000000
  425371:	shr    ebx,cl
  425373:	mov    ecx,DWORD PTR [ebp+0x8]
  425376:	or     DWORD PTR [ecx],ebx
  425378:	lea    eax,[eax+edx*4+0x44]
  42537c:	mov    ecx,edi
  42537e:	jmp    0x4253a0
  425380:	cmp    BYTE PTR [ebp+0x13],0x0
  425384:	jne    0x425396
  425386:	lea    ecx,[edi-0x20]
  425389:	mov    ebx,0x80000000
  42538e:	shr    ebx,cl
  425390:	mov    ecx,DWORD PTR [ebp+0x8]
  425393:	or     DWORD PTR [ecx+0x4],ebx
  425396:	lea    eax,[eax+edx*4+0xc4]
  42539d:	lea    ecx,[edi-0x20]
  4253a0:	mov    edx,0x80000000
  4253a5:	shr    edx,cl
  4253a7:	or     DWORD PTR [eax],edx
  4253a9:	mov    edx,DWORD PTR [ebp+0xc]
  4253ac:	mov    ecx,DWORD PTR [ebp-0x4]
  4253af:	lea    eax,[edx+esi*1-0x4]
  4253b3:	mov    DWORD PTR [eax],ecx
  4253b5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  4253b9:	jmp    0x4253be
  4253bb:	mov    edx,DWORD PTR [ebp+0xc]
  4253be:	lea    eax,[esi+0x1]
  4253c1:	mov    DWORD PTR [edx-0x4],eax
  4253c4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  4253c8:	jmp    0x425509
  4253cd:	xor    eax,eax
  4253cf:	jmp    0x42550c
  4253d4:	jge    0x425509
  4253da:	mov    ebx,DWORD PTR [ebp+0xc]
  4253dd:	sub    DWORD PTR [ebp+0x10],esi
  4253e0:	lea    ecx,[esi+0x1]
  4253e3:	mov    DWORD PTR [ebx-0x4],ecx
  4253e6:	lea    ebx,[ebx+esi*1-0x4]
  4253ea:	mov    esi,DWORD PTR [ebp+0x10]
  4253ed:	sar    esi,0x4
  4253f0:	dec    esi
  4253f1:	cmp    esi,0x3f
  4253f4:	mov    DWORD PTR [ebp+0xc],ebx
  4253f7:	mov    DWORD PTR [ebx-0x4],ecx
  4253fa:	jbe    0x4253ff
  4253fc:	push   0x3f
  4253fe:	pop    esi
  4253ff:	test   BYTE PTR [ebp-0x4],0x1
  425403:	jne    0x425489
  425409:	mov    esi,DWORD PTR [ebp-0x4]
  42540c:	sar    esi,0x4
  42540f:	dec    esi
  425410:	cmp    esi,0x3f
  425413:	jbe    0x425418
  425415:	push   0x3f
  425417:	pop    esi
  425418:	mov    ecx,DWORD PTR [edi+0x4]
  42541b:	cmp    ecx,DWORD PTR [edi+0x8]
  42541e:	jne    0x425462
  425420:	cmp    esi,0x20
  425423:	mov    ebx,0x80000000
  425428:	jae    0x425443
  42542a:	mov    ecx,esi
  42542c:	shr    ebx,cl
  42542e:	lea    esi,[esi+eax*1+0x4]
  425432:	not    ebx
  425434:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425438:	dec    BYTE PTR [esi]
  42543a:	jne    0x42545f
  42543c:	mov    ecx,DWORD PTR [ebp+0x8]
  42543f:	and    DWORD PTR [ecx],ebx
  425441:	jmp    0x42545f
  425443:	lea    ecx,[esi-0x20]
  425446:	shr    ebx,cl
  425448:	lea    ecx,[esi+eax*1+0x4]
  42544c:	not    ebx
  42544e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425455:	dec    BYTE PTR [ecx]
  425457:	jne    0x42545f
  425459:	mov    ecx,DWORD PTR [ebp+0x8]
  42545c:	and    DWORD PTR [ecx+0x4],ebx
  42545f:	mov    ebx,DWORD PTR [ebp+0xc]
  425462:	mov    ecx,DWORD PTR [edi+0x8]
  425465:	mov    esi,DWORD PTR [edi+0x4]
  425468:	mov    DWORD PTR [ecx+0x4],esi
  42546b:	mov    esi,DWORD PTR [edi+0x8]
  42546e:	mov    ecx,DWORD PTR [edi+0x4]
  425471:	mov    DWORD PTR [ecx+0x8],esi
  425474:	mov    esi,DWORD PTR [ebp+0x10]
  425477:	add    esi,DWORD PTR [ebp-0x4]
  42547a:	mov    DWORD PTR [ebp+0x10],esi
  42547d:	sar    esi,0x4
  425480:	dec    esi
  425481:	cmp    esi,0x3f
  425484:	jbe    0x425489
  425486:	push   0x3f
  425488:	pop    esi
  425489:	mov    ecx,DWORD PTR [ebp-0xc]
  42548c:	lea    ecx,[ecx+esi*8]
  42548f:	mov    edi,DWORD PTR [ecx+0x4]
  425492:	mov    DWORD PTR [ebx+0x8],ecx
  425495:	mov    DWORD PTR [ebx+0x4],edi
  425498:	mov    DWORD PTR [ecx+0x4],ebx
  42549b:	mov    ecx,DWORD PTR [ebx+0x4]
  42549e:	mov    DWORD PTR [ecx+0x8],ebx
  4254a1:	mov    ecx,DWORD PTR [ebx+0x4]
  4254a4:	cmp    ecx,DWORD PTR [ebx+0x8]
  4254a7:	jne    0x425500
  4254a9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4254ad:	mov    BYTE PTR [ebp+0xf],cl
  4254b0:	inc    cl
  4254b2:	cmp    esi,0x20
  4254b5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4254b9:	jae    0x4254d7
  4254bb:	cmp    BYTE PTR [ebp+0xf],0x0
  4254bf:	jne    0x4254cf
  4254c1:	mov    ecx,esi
  4254c3:	mov    edi,0x80000000
  4254c8:	shr    edi,cl
  4254ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4254cd:	or     DWORD PTR [ecx],edi
  4254cf:	lea    eax,[eax+edx*4+0x44]
  4254d3:	mov    ecx,esi
  4254d5:	jmp    0x4254f7
  4254d7:	cmp    BYTE PTR [ebp+0xf],0x0
  4254db:	jne    0x4254ed
  4254dd:	lea    ecx,[esi-0x20]
  4254e0:	mov    edi,0x80000000
  4254e5:	shr    edi,cl
  4254e7:	mov    ecx,DWORD PTR [ebp+0x8]
  4254ea:	or     DWORD PTR [ecx+0x4],edi
  4254ed:	lea    eax,[eax+edx*4+0xc4]
  4254f4:	lea    ecx,[esi-0x20]
  4254f7:	mov    edx,0x80000000
  4254fc:	shr    edx,cl
  4254fe:	or     DWORD PTR [eax],edx
  425500:	mov    eax,DWORD PTR [ebp+0x10]
  425503:	mov    DWORD PTR [ebx],eax
  425505:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425509:	xor    eax,eax
  42550b:	inc    eax
  42550c:	pop    edi
  42550d:	pop    esi
  42550e:	pop    ebx
  42550f:	leave  
  425510:	ret    
  425511:	push   ebp
  425512:	mov    ebp,esp
  425514:	sub    esp,0x14
  425517:	mov    ecx,DWORD PTR [ebp+0x8]
  42551a:	mov    eax,ds:0x46519c
  42551f:	mov    edx,DWORD PTR ds:0x4651a0
  425525:	add    ecx,0x17
  425528:	and    ecx,0xfffffff0
  42552b:	push   ebx
  42552c:	mov    DWORD PTR [ebp-0x10],ecx
  42552f:	sar    ecx,0x4
  425532:	push   esi
  425533:	lea    eax,[eax+eax*4]
  425536:	push   edi
  425537:	dec    ecx
  425538:	cmp    ecx,0x20
  42553b:	lea    edi,[edx+eax*4]
  42553e:	mov    DWORD PTR [ebp-0x4],edi
  425541:	jge    0x42554e
  425543:	or     esi,0xffffffff
  425546:	shr    esi,cl
  425548:	or     DWORD PTR [ebp-0x8],0xffffffff
  42554c:	jmp    0x42555b
  42554e:	add    ecx,0xffffffe0
  425551:	or     eax,0xffffffff
  425554:	xor    esi,esi
  425556:	shr    eax,cl
  425558:	mov    DWORD PTR [ebp-0x8],eax
  42555b:	mov    eax,ds:0x4651a8
  425560:	mov    ebx,eax
  425562:	mov    DWORD PTR [ebp-0xc],esi
  425565:	cmp    ebx,edi
  425567:	jmp    0x42557d
  425569:	mov    ecx,DWORD PTR [ebx+0x4]
  42556c:	mov    edi,DWORD PTR [ebx]
  42556e:	and    ecx,DWORD PTR [ebp-0x8]
  425571:	and    edi,esi
  425573:	or     ecx,edi
  425575:	jne    0x425582
  425577:	add    ebx,0x14
  42557a:	cmp    ebx,DWORD PTR [ebp-0x4]
  42557d:	mov    DWORD PTR [ebp+0x8],ebx
  425580:	jb     0x425569
  425582:	cmp    ebx,DWORD PTR [ebp-0x4]
  425585:	jne    0x4255ab
  425587:	mov    ebx,edx
  425589:	jmp    0x42559c
  42558b:	mov    ecx,DWORD PTR [ebx+0x4]
  42558e:	mov    edi,DWORD PTR [ebx]
  425590:	and    ecx,DWORD PTR [ebp-0x8]
  425593:	and    edi,esi
  425595:	or     ecx,edi
  425597:	jne    0x4255a3
  425599:	add    ebx,0x14
  42559c:	cmp    ebx,eax
  42559e:	mov    DWORD PTR [ebp+0x8],ebx
  4255a1:	jb     0x42558b
  4255a3:	cmp    ebx,eax
  4255a5:	je     0x42563f
  4255ab:	mov    DWORD PTR ds:0x4651a8,ebx
  4255b1:	mov    eax,DWORD PTR [ebx+0x10]
  4255b4:	mov    edx,DWORD PTR [eax]
  4255b6:	cmp    edx,0xffffffff
  4255b9:	mov    DWORD PTR [ebp-0x4],edx
  4255bc:	je     0x4255d2
  4255be:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4255c5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4255c9:	and    ecx,DWORD PTR [ebp-0x8]
  4255cc:	and    edi,esi
  4255ce:	or     ecx,edi
  4255d0:	jne    0x425608
  4255d2:	mov    edx,DWORD PTR [eax+0xc4]
  4255d8:	and    edx,DWORD PTR [ebp-0x8]
  4255db:	and    DWORD PTR [ebp-0x4],0x0
  4255df:	lea    ecx,[eax+0x44]
  4255e2:	mov    esi,DWORD PTR [ecx]
  4255e4:	and    esi,DWORD PTR [ebp-0xc]
  4255e7:	or     edx,esi
  4255e9:	mov    esi,DWORD PTR [ebp-0xc]
  4255ec:	jne    0x425605
  4255ee:	mov    edx,DWORD PTR [ecx+0x84]
  4255f4:	and    edx,DWORD PTR [ebp-0x8]
  4255f7:	inc    DWORD PTR [ebp-0x4]
  4255fa:	add    ecx,0x4
  4255fd:	mov    edi,DWORD PTR [ecx]
  4255ff:	and    edi,esi
  425601:	or     edx,edi
  425603:	je     0x4255ee
  425605:	mov    edx,DWORD PTR [ebp-0x4]
  425608:	mov    ecx,edx
  42560a:	imul   ecx,ecx,0x204
  425610:	lea    ecx,[ecx+eax*1+0x144]
  425617:	mov    DWORD PTR [ebp-0xc],ecx
  42561a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42561e:	xor    edi,edi
  425620:	and    ecx,esi
  425622:	jne    0x425691
  425624:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42562b:	and    ecx,DWORD PTR [ebp-0x8]
  42562e:	push   0x20
  425630:	pop    edi
  425631:	jmp    0x425691
  425633:	cmp    DWORD PTR [ebx+0x8],0x0
  425637:	jne    0x425644
  425639:	add    ebx,0x14
  42563c:	mov    DWORD PTR [ebp+0x8],ebx
  42563f:	cmp    ebx,DWORD PTR [ebp-0x4]
  425642:	jb     0x425633
  425644:	cmp    ebx,DWORD PTR [ebp-0x4]
  425647:	jne    0x42566f
  425649:	mov    ebx,edx
  42564b:	jmp    0x425656
  42564d:	cmp    DWORD PTR [ebx+0x8],0x0
  425651:	jne    0x42565d
  425653:	add    ebx,0x14
  425656:	cmp    ebx,eax
  425658:	mov    DWORD PTR [ebp+0x8],ebx
  42565b:	jb     0x42564d
  42565d:	cmp    ebx,eax
  42565f:	jne    0x42566f
  425661:	call   0x425075
  425666:	mov    ebx,eax
  425668:	test   ebx,ebx
  42566a:	mov    DWORD PTR [ebp+0x8],ebx
  42566d:	je     0x425687
  42566f:	push   ebx
  425670:	call   0x42512c
  425675:	pop    ecx
  425676:	mov    ecx,DWORD PTR [ebx+0x10]
  425679:	mov    DWORD PTR [ecx],eax
  42567b:	mov    eax,DWORD PTR [ebx+0x10]
  42567e:	cmp    DWORD PTR [eax],0xffffffff
  425681:	jne    0x4255ab
  425687:	xor    eax,eax
  425689:	jmp    0x425808
  42568e:	shl    ecx,1
  425690:	inc    edi
  425691:	test   ecx,ecx
  425693:	jge    0x42568e
  425695:	mov    ecx,DWORD PTR [ebp-0xc]
  425698:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  42569c:	mov    ecx,DWORD PTR [edx]
  42569e:	sub    ecx,DWORD PTR [ebp-0x10]
  4256a1:	mov    esi,ecx
  4256a3:	sar    esi,0x4
  4256a6:	dec    esi
  4256a7:	cmp    esi,0x3f
  4256aa:	mov    DWORD PTR [ebp-0x8],ecx
  4256ad:	jle    0x4256b2
  4256af:	push   0x3f
  4256b1:	pop    esi
  4256b2:	cmp    esi,edi
  4256b4:	je     0x4257bb
  4256ba:	mov    ecx,DWORD PTR [edx+0x4]
  4256bd:	cmp    ecx,DWORD PTR [edx+0x8]
  4256c0:	jne    0x42571e
  4256c2:	cmp    edi,0x20
  4256c5:	mov    ebx,0x80000000
  4256ca:	jge    0x4256f2
  4256cc:	mov    ecx,edi
  4256ce:	shr    ebx,cl
  4256d0:	mov    ecx,DWORD PTR [ebp-0x4]
  4256d3:	lea    edi,[eax+edi*1+0x4]
  4256d7:	not    ebx
  4256d9:	mov    DWORD PTR [ebp-0x14],ebx
  4256dc:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4256e0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4256e4:	dec    BYTE PTR [edi]
  4256e6:	jne    0x42571b
  4256e8:	mov    ecx,DWORD PTR [ebp-0x14]
  4256eb:	mov    ebx,DWORD PTR [ebp+0x8]
  4256ee:	and    DWORD PTR [ebx],ecx
  4256f0:	jmp    0x42571e
  4256f2:	lea    ecx,[edi-0x20]
  4256f5:	shr    ebx,cl
  4256f7:	mov    ecx,DWORD PTR [ebp-0x4]
  4256fa:	lea    ecx,[eax+ecx*4+0xc4]
  425701:	lea    edi,[eax+edi*1+0x4]
  425705:	not    ebx
  425707:	and    DWORD PTR [ecx],ebx
  425709:	dec    BYTE PTR [edi]
  42570b:	mov    DWORD PTR [ebp-0x14],ebx
  42570e:	jne    0x42571b
  425710:	mov    ebx,DWORD PTR [ebp+0x8]
  425713:	mov    ecx,DWORD PTR [ebp-0x14]
  425716:	and    DWORD PTR [ebx+0x4],ecx
  425719:	jmp    0x42571e
  42571b:	mov    ebx,DWORD PTR [ebp+0x8]
  42571e:	cmp    DWORD PTR [ebp-0x8],0x0
  425722:	mov    ecx,DWORD PTR [edx+0x8]
  425725:	mov    edi,DWORD PTR [edx+0x4]
  425728:	mov    DWORD PTR [ecx+0x4],edi
  42572b:	mov    ecx,DWORD PTR [edx+0x4]
  42572e:	mov    edi,DWORD PTR [edx+0x8]
  425731:	mov    DWORD PTR [ecx+0x8],edi
  425734:	je     0x4257c7
  42573a:	mov    ecx,DWORD PTR [ebp-0xc]
  42573d:	lea    ecx,[ecx+esi*8]
  425740:	mov    edi,DWORD PTR [ecx+0x4]
  425743:	mov    DWORD PTR [edx+0x8],ecx
  425746:	mov    DWORD PTR [edx+0x4],edi
  425749:	mov    DWORD PTR [ecx+0x4],edx
  42574c:	mov    ecx,DWORD PTR [edx+0x4]
  42574f:	mov    DWORD PTR [ecx+0x8],edx
  425752:	mov    ecx,DWORD PTR [edx+0x4]
  425755:	cmp    ecx,DWORD PTR [edx+0x8]
  425758:	jne    0x4257b8
  42575a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42575e:	mov    BYTE PTR [ebp+0xb],cl
  425761:	inc    cl
  425763:	cmp    esi,0x20
  425766:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42576a:	jge    0x42578f
  42576c:	cmp    BYTE PTR [ebp+0xb],0x0
  425770:	jne    0x42577d
  425772:	mov    edi,0x80000000
  425777:	mov    ecx,esi
  425779:	shr    edi,cl
  42577b:	or     DWORD PTR [ebx],edi
  42577d:	mov    ecx,esi
  42577f:	mov    edi,0x80000000
  425784:	shr    edi,cl
  425786:	mov    ecx,DWORD PTR [ebp-0x4]
  425789:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42578d:	jmp    0x4257b8
  42578f:	cmp    BYTE PTR [ebp+0xb],0x0
  425793:	jne    0x4257a2
  425795:	lea    ecx,[esi-0x20]
  425798:	mov    edi,0x80000000
  42579d:	shr    edi,cl
  42579f:	or     DWORD PTR [ebx+0x4],edi
  4257a2:	mov    ecx,DWORD PTR [ebp-0x4]
  4257a5:	lea    edi,[eax+ecx*4+0xc4]
  4257ac:	lea    ecx,[esi-0x20]
  4257af:	mov    esi,0x80000000
  4257b4:	shr    esi,cl
  4257b6:	or     DWORD PTR [edi],esi
  4257b8:	mov    ecx,DWORD PTR [ebp-0x8]
  4257bb:	test   ecx,ecx
  4257bd:	je     0x4257ca
  4257bf:	mov    DWORD PTR [edx],ecx
  4257c1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4257c5:	jmp    0x4257ca
  4257c7:	mov    ecx,DWORD PTR [ebp-0x8]
  4257ca:	mov    esi,DWORD PTR [ebp-0x10]
  4257cd:	add    edx,ecx
  4257cf:	lea    ecx,[esi+0x1]
  4257d2:	mov    DWORD PTR [edx],ecx
  4257d4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4257d8:	mov    esi,DWORD PTR [ebp-0xc]
  4257db:	mov    ecx,DWORD PTR [esi]
  4257dd:	test   ecx,ecx
  4257df:	lea    edi,[ecx+0x1]
  4257e2:	mov    DWORD PTR [esi],edi
  4257e4:	jne    0x425800
  4257e6:	cmp    ebx,DWORD PTR ds:0x465198
  4257ec:	jne    0x425800
  4257ee:	mov    ecx,DWORD PTR [ebp-0x4]
  4257f1:	cmp    ecx,DWORD PTR ds:0x4651b0
  4257f7:	jne    0x425800
  4257f9:	and    DWORD PTR ds:0x465198,0x0
  425800:	mov    ecx,DWORD PTR [ebp-0x4]
  425803:	mov    DWORD PTR [eax],ecx
  425805:	lea    eax,[edx+0x4]
  425808:	pop    edi
  425809:	pop    esi
  42580a:	pop    ebx
  42580b:	leave  
  42580c:	ret    
  42580d:	int3   
  42580e:	int3   
  42580f:	int3   
  425810:	push   esi
  425811:	inc    ebx
  425812:	xor    dh,BYTE PTR [eax]
  425814:	pop    eax
  425815:	inc    ebx
  425816:	xor    BYTE PTR [eax],dh
  425818:	push   ebp
  425819:	mov    ebp,esp
  42581b:	sub    esp,0x8
  42581e:	push   ebx
  42581f:	push   esi
  425820:	push   edi
  425821:	push   ebp
  425822:	cld    
  425823:	mov    ebx,DWORD PTR [ebp+0xc]
  425826:	mov    eax,DWORD PTR [ebp+0x8]
  425829:	test   DWORD PTR [eax+0x4],0x6
  425830:	jne    0x4258b8
  425836:	mov    DWORD PTR [ebp-0x8],eax
  425839:	mov    eax,DWORD PTR [ebp+0x10]
  42583c:	mov    DWORD PTR [ebp-0x4],eax
  42583f:	lea    eax,[ebp-0x8]
  425842:	mov    DWORD PTR [ebx-0x4],eax
  425845:	mov    esi,DWORD PTR [ebx+0xc]
  425848:	mov    edi,DWORD PTR [ebx+0x8]
  42584b:	cmp    esi,0xffffffff
  42584e:	je     0x4258b1
  425850:	lea    ecx,[esi+esi*2]
  425853:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  425858:	je     0x42589f
  42585a:	push   esi
  42585b:	push   ebp
  42585c:	lea    ebp,[ebx+0x10]
  42585f:	call   DWORD PTR [edi+ecx*4+0x4]
  425863:	pop    ebp
  425864:	pop    esi
  425865:	mov    ebx,DWORD PTR [ebp+0xc]
  425868:	or     eax,eax
  42586a:	je     0x42589f
  42586c:	js     0x4258aa
  42586e:	mov    edi,DWORD PTR [ebx+0x8]
  425871:	push   ebx
  425872:	call   0x4267a0
  425877:	add    esp,0x4
  42587a:	lea    ebp,[ebx+0x10]
  42587d:	push   esi
  42587e:	push   ebx
  42587f:	call   0x4267e2
  425884:	add    esp,0x8
  425887:	lea    ecx,[esi+esi*2]
  42588a:	push   0x1
  42588c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  425890:	call   0x426876
  425895:	mov    eax,DWORD PTR [edi+ecx*4]
  425898:	mov    DWORD PTR [ebx+0xc],eax
  42589b:	call   DWORD PTR [edi+ecx*4+0x8]
  42589f:	mov    edi,DWORD PTR [ebx+0x8]
  4258a2:	lea    ecx,[esi+esi*2]
  4258a5:	mov    esi,DWORD PTR [edi+ecx*4]
  4258a8:	jmp    0x42584b
  4258aa:	mov    eax,0x0
  4258af:	jmp    0x4258cd
  4258b1:	mov    eax,0x1
  4258b6:	jmp    0x4258cd
  4258b8:	push   ebp
  4258b9:	lea    ebp,[ebx+0x10]
  4258bc:	push   0xffffffff
  4258be:	push   ebx
  4258bf:	call   0x4267e2
  4258c4:	add    esp,0x8
  4258c7:	pop    ebp
  4258c8:	mov    eax,0x1
  4258cd:	pop    ebp
  4258ce:	pop    edi
  4258cf:	pop    esi
  4258d0:	pop    ebx
  4258d1:	mov    esp,ebp
  4258d3:	pop    ebp
  4258d4:	ret    
  4258d5:	push   ebp
  4258d6:	mov    ecx,DWORD PTR [esp+0x8]
  4258da:	mov    ebp,DWORD PTR [ecx]
  4258dc:	mov    eax,DWORD PTR [ecx+0x1c]
  4258df:	push   eax
  4258e0:	mov    eax,DWORD PTR [ecx+0x18]
  4258e3:	push   eax
  4258e4:	call   0x4267e2
  4258e9:	add    esp,0x8
  4258ec:	pop    ebp
  4258ed:	ret    0x4
  4258f0:	call   0x423803
  4258f5:	add    eax,0x8
  4258f8:	ret    
  4258f9:	push   0x14
  4258fb:	push   0x4287c0
  425900:	call   0x423950
  425905:	mov    edi,DWORD PTR [ebp+0x8]
  425908:	xor    ebx,ebx
  42590a:	cmp    edi,ebx
  42590c:	jne    0x42591c
  42590e:	push   DWORD PTR [ebp+0xc]
  425911:	call   0x424672
  425916:	pop    ecx
  425917:	jmp    0x425aa0
  42591c:	mov    esi,DWORD PTR [ebp+0xc]
  42591f:	cmp    esi,ebx
  425921:	jne    0x42592f
  425923:	push   edi
  425924:	call   0x42455a
  425929:	pop    ecx
  42592a:	jmp    0x425a9e
  42592f:	cmp    DWORD PTR ds:0x4653e4,0x3
  425936:	jne    0x425a6a
  42593c:	mov    DWORD PTR [ebp-0x1c],ebx
  42593f:	cmp    esi,0xffffffe0
  425942:	ja     0x425a39
  425948:	push   0x4
  42594a:	call   0x423b0f
  42594f:	pop    ecx
  425950:	mov    DWORD PTR [ebp-0x4],ebx
  425953:	push   edi
  425954:	call   0x424d32
  425959:	pop    ecx
  42595a:	mov    DWORD PTR [ebp-0x20],eax
  42595d:	cmp    eax,ebx
  42595f:	je     0x425a09
  425965:	cmp    esi,DWORD PTR ds:0x4651a4
  42596b:	ja     0x4259b9
  42596d:	push   esi
  42596e:	push   edi
  42596f:	push   eax
  425970:	call   0x425232
  425975:	add    esp,0xc
  425978:	test   eax,eax
  42597a:	je     0x425981
  42597c:	mov    DWORD PTR [ebp-0x1c],edi
  42597f:	jmp    0x4259b9
  425981:	push   esi
  425982:	call   0x425511
  425987:	pop    ecx
  425988:	mov    DWORD PTR [ebp-0x1c],eax
  42598b:	cmp    eax,ebx
  42598d:	je     0x4259b9
  42598f:	mov    eax,DWORD PTR [edi-0x4]
  425992:	dec    eax
  425993:	mov    DWORD PTR [ebp-0x24],eax
  425996:	cmp    eax,esi
  425998:	jb     0x42599c
  42599a:	mov    eax,esi
  42599c:	push   eax
  42599d:	push   edi
  42599e:	push   DWORD PTR [ebp-0x1c]
  4259a1:	call   0x424690
  4259a6:	push   edi
  4259a7:	call   0x424d32
  4259ac:	mov    DWORD PTR [ebp-0x20],eax
  4259af:	push   edi
  4259b0:	push   eax
  4259b1:	call   0x424d5d
  4259b6:	add    esp,0x18
  4259b9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4259bc:	jne    0x425a09
  4259be:	cmp    esi,ebx
  4259c0:	jne    0x4259c8
  4259c2:	xor    esi,esi
  4259c4:	inc    esi
  4259c5:	mov    DWORD PTR [ebp+0xc],esi
  4259c8:	add    esi,0xf
  4259cb:	and    esi,0xfffffff0
  4259ce:	mov    DWORD PTR [ebp+0xc],esi
  4259d1:	push   esi
  4259d2:	push   ebx
  4259d3:	push   DWORD PTR ds:0x4653e0
  4259d9:	call   DWORD PTR ds:0x4280e4
  4259df:	mov    DWORD PTR [ebp-0x1c],eax
  4259e2:	cmp    eax,ebx
  4259e4:	je     0x425a09
  4259e6:	mov    eax,DWORD PTR [edi-0x4]
  4259e9:	dec    eax
  4259ea:	mov    DWORD PTR [ebp-0x24],eax
  4259ed:	cmp    eax,esi
  4259ef:	jb     0x4259f3
  4259f1:	mov    eax,esi
  4259f3:	push   eax
  4259f4:	push   edi
  4259f5:	push   DWORD PTR [ebp-0x1c]
  4259f8:	call   0x424690
  4259fd:	push   edi
  4259fe:	push   DWORD PTR [ebp-0x20]
  425a01:	call   0x424d5d
  425a06:	add    esp,0x14
  425a09:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a0d:	call   0x425a61
  425a12:	cmp    DWORD PTR [ebp-0x20],ebx
  425a15:	jne    0x425a39
  425a17:	cmp    esi,ebx
  425a19:	jne    0x425a1e
  425a1b:	xor    esi,esi
  425a1d:	inc    esi
  425a1e:	add    esi,0xf
  425a21:	and    esi,0xfffffff0
  425a24:	mov    DWORD PTR [ebp+0xc],esi
  425a27:	push   esi
  425a28:	push   edi
  425a29:	push   ebx
  425a2a:	push   DWORD PTR ds:0x4653e0
  425a30:	call   DWORD PTR ds:0x4280f0
  425a36:	mov    DWORD PTR [ebp-0x1c],eax
  425a39:	mov    eax,DWORD PTR [ebp-0x1c]
  425a3c:	cmp    eax,ebx
  425a3e:	jne    0x425aa0
  425a40:	cmp    DWORD PTR ds:0x465068,ebx
  425a46:	je     0x425aa0
  425a48:	push   esi
  425a49:	call   0x426232
  425a4e:	pop    ecx
  425a4f:	test   eax,eax
  425a51:	jne    0x42593c
  425a57:	jmp    0x425a9e
  425a59:	xor    ebx,ebx
  425a5b:	mov    esi,DWORD PTR [ebp+0xc]
  425a5e:	mov    edi,DWORD PTR [ebp+0x8]
  425a61:	push   0x4
  425a63:	call   0x423a7b
  425a68:	pop    ecx
  425a69:	ret    
  425a6a:	xor    eax,eax
  425a6c:	cmp    esi,0xffffffe0
  425a6f:	ja     0x425a87
  425a71:	cmp    esi,ebx
  425a73:	jne    0x425a78
  425a75:	xor    esi,esi
  425a77:	inc    esi
  425a78:	push   esi
  425a79:	push   edi
  425a7a:	push   ebx
  425a7b:	push   DWORD PTR ds:0x4653e0
  425a81:	call   DWORD PTR ds:0x4280f0
  425a87:	cmp    eax,ebx
  425a89:	jne    0x425aa0
  425a8b:	cmp    DWORD PTR ds:0x465068,ebx
  425a91:	je     0x425aa0
  425a93:	push   esi
  425a94:	call   0x426232
  425a99:	pop    ecx
  425a9a:	test   eax,eax
  425a9c:	jne    0x425a6a
  425a9e:	xor    eax,eax
  425aa0:	call   0x42398b
  425aa5:	ret    
  425aa6:	push   0x10
  425aa8:	push   0x4287d0
  425aad:	call   0x423950
  425ab2:	cmp    DWORD PTR ds:0x4653e4,0x3
  425ab9:	jne    0x425af5
  425abb:	push   0x4
  425abd:	call   0x423b0f
  425ac2:	pop    ecx
  425ac3:	and    DWORD PTR [ebp-0x4],0x0
  425ac7:	mov    esi,DWORD PTR [ebp+0x8]
  425aca:	push   esi
  425acb:	call   0x424d32
  425ad0:	pop    ecx
  425ad1:	mov    DWORD PTR [ebp-0x1c],eax
  425ad4:	test   eax,eax
  425ad6:	je     0x425ae3
  425ad8:	mov    esi,DWORD PTR [esi-0x4]
  425adb:	sub    esi,0x9
  425ade:	mov    DWORD PTR [ebp-0x20],esi
  425ae1:	jmp    0x425ae6
  425ae3:	mov    esi,DWORD PTR [ebp-0x20]
  425ae6:	or     DWORD PTR [ebp-0x4],0xffffffff
  425aea:	call   0x425b13
  425aef:	cmp    DWORD PTR [ebp-0x1c],0x0
  425af3:	jne    0x425b08
  425af5:	push   DWORD PTR [ebp+0x8]
  425af8:	push   0x0
  425afa:	push   DWORD PTR ds:0x4653e0
  425b00:	call   DWORD PTR ds:0x4280f4
  425b06:	mov    esi,eax
  425b08:	mov    eax,esi
  425b0a:	call   0x42398b
  425b0f:	ret    
  425b10:	mov    esi,DWORD PTR [ebp-0x20]
  425b13:	push   0x4
  425b15:	call   0x423a7b
  425b1a:	pop    ecx
  425b1b:	ret    
  425b1c:	push   ebp
  425b1d:	mov    ebp,esp
  425b1f:	sub    esp,0x10
  425b22:	push   esi
  425b23:	lea    eax,[ebp-0x8]
  425b26:	push   eax
  425b27:	call   DWORD PTR ds:0x428104
  425b2d:	mov    esi,DWORD PTR [ebp-0x4]
  425b30:	xor    esi,DWORD PTR [ebp-0x8]
  425b33:	call   DWORD PTR ds:0x428100
  425b39:	xor    esi,eax
  425b3b:	call   DWORD PTR ds:0x4280ac
  425b41:	xor    esi,eax
  425b43:	call   DWORD PTR ds:0x4280fc
  425b49:	xor    esi,eax
  425b4b:	lea    eax,[ebp-0x10]
  425b4e:	push   eax
  425b4f:	call   DWORD PTR ds:0x4280f8
  425b55:	mov    eax,DWORD PTR [ebp-0xc]
  425b58:	xor    eax,DWORD PTR [ebp-0x10]
  425b5b:	xor    esi,eax
  425b5d:	mov    DWORD PTR ds:0x4646c0,esi
  425b63:	jne    0x425b6f
  425b65:	mov    DWORD PTR ds:0x4646c0,0xbb40e64e
  425b6f:	pop    esi
  425b70:	leave  
  425b71:	ret    
  425b72:	push   0x118
  425b77:	push   0x428980
  425b7c:	call   0x423950
  425b81:	mov    eax,ds:0x4646c0
  425b86:	xor    eax,DWORD PTR [ebp+0x4]
  425b89:	mov    DWORD PTR [ebp-0x1c],eax
  425b8c:	mov    eax,ds:0x465038
  425b91:	xor    ecx,ecx
  425b93:	cmp    eax,ecx
  425b95:	je     0x425bb6
  425b97:	mov    DWORD PTR [ebp-0x4],ecx
  425b9a:	push   DWORD PTR [ebp+0xc]
  425b9d:	push   DWORD PTR [ebp+0x8]
  425ba0:	call   eax
  425ba2:	pop    ecx
  425ba3:	pop    ecx
  425ba4:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ba8:	jmp    0x425cb4
  425bad:	xor    eax,eax
  425baf:	inc    eax
  425bb0:	ret    
  425bb1:	mov    esp,DWORD PTR [ebp-0x18]
  425bb4:	jmp    0x425ba4
  425bb6:	mov    eax,DWORD PTR [ebp+0x8]
  425bb9:	dec    eax
  425bba:	je     0x425bcf
  425bbc:	mov    edi,0x42895c
  425bc1:	mov    DWORD PTR [ebp-0x20],0x4288a8
  425bc8:	mov    esi,0xd4
  425bcd:	jmp    0x425be0
  425bcf:	mov    edi,0x428888
  425bd4:	mov    DWORD PTR [ebp-0x20],0x4287e8
  425bdb:	mov    esi,0xb9
  425be0:	mov    BYTE PTR [ebp-0x24],cl
  425be3:	push   0x104
  425be8:	lea    eax,[ebp-0x128]
  425bee:	push   eax
  425bef:	push   ecx
  425bf0:	call   DWORD PTR ds:0x428080
  425bf6:	test   eax,eax
  425bf8:	jne    0x425c0d
  425bfa:	push   0x4284dc
  425bff:	lea    eax,[ebp-0x128]
  425c05:	push   eax
  425c06:	call   0x423d30
  425c0b:	pop    ecx
  425c0c:	pop    ecx
  425c0d:	lea    ebx,[ebp-0x128]
  425c13:	lea    eax,[ebp-0x128]
  425c19:	push   eax
  425c1a:	call   0x423f60
  425c1f:	pop    ecx
  425c20:	add    eax,0xb
  425c23:	cmp    eax,0x3c
  425c26:	jbe    0x425c51
  425c28:	lea    eax,[ebp-0x128]
  425c2e:	push   eax
  425c2f:	call   0x423f60
  425c34:	mov    ebx,eax
  425c36:	lea    eax,[ebp-0x128]
  425c3c:	sub    eax,0x31
  425c3f:	add    ebx,eax
  425c41:	push   0x3
  425c43:	push   0x4284d8
  425c48:	push   ebx
  425c49:	call   0x423e30
  425c4e:	add    esp,0x10
  425c51:	push   ebx
  425c52:	call   0x423f60
  425c57:	pop    ecx
  425c58:	lea    eax,[eax+esi*1+0xc]
  425c5c:	add    eax,0x3
  425c5f:	and    eax,0xfffffffc
  425c62:	call   0x4239a0
  425c67:	mov    DWORD PTR [ebp-0x18],esp
  425c6a:	mov    esi,esp
  425c6c:	push   edi
  425c6d:	push   esi
  425c6e:	call   0x423d30
  425c73:	mov    edi,0x4284b8
  425c78:	push   edi
  425c79:	push   esi
  425c7a:	call   0x423d40
  425c7f:	push   0x4287dc
  425c84:	push   esi
  425c85:	call   0x423d40
  425c8a:	push   ebx
  425c8b:	push   esi
  425c8c:	call   0x423d40
  425c91:	push   edi
  425c92:	push   esi
  425c93:	call   0x423d40
  425c98:	push   DWORD PTR [ebp-0x20]
  425c9b:	push   esi
  425c9c:	call   0x423d40
  425ca1:	push   0x12010
  425ca6:	push   0x428490
  425cab:	push   esi
  425cac:	call   0x423c32
  425cb1:	add    esp,0x3c
  425cb4:	push   0x3
  425cb6:	call   0x422dbc
  425cbb:	int3   
  425cbc:	push   0x38
  425cbe:	push   0x428da0
  425cc3:	call   0x423950
  425cc8:	xor    ebx,ebx
  425cca:	cmp    DWORD PTR ds:0x46505c,ebx
  425cd0:	jne    0x425d0a
  425cd2:	push   ebx
  425cd3:	push   ebx
  425cd4:	xor    esi,esi
  425cd6:	inc    esi
  425cd7:	push   esi
  425cd8:	push   0x428d9c
  425cdd:	push   0x100
  425ce2:	push   ebx
  425ce3:	call   DWORD PTR ds:0x428110
  425ce9:	test   eax,eax
  425ceb:	je     0x425cf5
  425ced:	mov    DWORD PTR ds:0x46505c,esi
  425cf3:	jmp    0x425d0a
  425cf5:	call   DWORD PTR ds:0x428034
  425cfb:	cmp    eax,0x78
  425cfe:	jne    0x425d0a
  425d00:	mov    DWORD PTR ds:0x46505c,0x2
  425d0a:	cmp    DWORD PTR [ebp+0x14],ebx
  425d0d:	jle    0x425d2a
  425d0f:	mov    ecx,DWORD PTR [ebp+0x14]
  425d12:	mov    eax,DWORD PTR [ebp+0x10]
  425d15:	dec    ecx
  425d16:	cmp    BYTE PTR [eax],bl
  425d18:	je     0x425d22
  425d1a:	inc    eax
  425d1b:	cmp    ecx,ebx
  425d1d:	jne    0x425d15
  425d1f:	or     ecx,0xffffffff
  425d22:	or     eax,0xffffffff
  425d25:	sub    eax,ecx
  425d27:	add    DWORD PTR [ebp+0x14],eax
  425d2a:	mov    eax,ds:0x46505c
  425d2f:	cmp    eax,0x2
  425d32:	je     0x425f14
  425d38:	cmp    eax,ebx
  425d3a:	je     0x425f14
  425d40:	cmp    eax,0x1
  425d43:	jne    0x425f47
  425d49:	xor    edi,edi
  425d4b:	mov    DWORD PTR [ebp-0x1c],edi
  425d4e:	mov    DWORD PTR [ebp-0x20],ebx
  425d51:	mov    DWORD PTR [ebp-0x24],ebx
  425d54:	cmp    DWORD PTR [ebp+0x20],ebx
  425d57:	jne    0x425d61
  425d59:	mov    eax,ds:0x465054
  425d5e:	mov    DWORD PTR [ebp+0x20],eax
  425d61:	push   ebx
  425d62:	push   ebx
  425d63:	push   DWORD PTR [ebp+0x14]
  425d66:	push   DWORD PTR [ebp+0x10]
  425d69:	xor    eax,eax
  425d6b:	cmp    DWORD PTR [ebp+0x24],ebx
  425d6e:	setne  al
  425d71:	lea    eax,[eax*8+0x1]
  425d78:	push   eax
  425d79:	push   DWORD PTR [ebp+0x20]
  425d7c:	call   DWORD PTR ds:0x42810c
  425d82:	mov    esi,eax
  425d84:	mov    DWORD PTR [ebp-0x28],esi
  425d87:	cmp    esi,ebx
  425d89:	je     0x425f47
  425d8f:	mov    DWORD PTR [ebp-0x4],0x1
  425d96:	lea    eax,[esi+esi*1]
  425d99:	add    eax,0x3
  425d9c:	and    eax,0xfffffffc
  425d9f:	call   0x4239a0
  425da4:	mov    DWORD PTR [ebp-0x18],esp
  425da7:	mov    eax,esp
  425da9:	mov    DWORD PTR [ebp-0x2c],eax
  425dac:	or     DWORD PTR [ebp-0x4],0xffffffff
  425db0:	jmp    0x425dcd
  425db2:	xor    eax,eax
  425db4:	inc    eax
  425db5:	ret    
  425db6:	mov    esp,DWORD PTR [ebp-0x18]
  425db9:	call   0x426de5
  425dbe:	xor    ebx,ebx
  425dc0:	mov    DWORD PTR [ebp-0x2c],ebx
  425dc3:	or     DWORD PTR [ebp-0x4],0xffffffff
  425dc7:	mov    edi,DWORD PTR [ebp-0x1c]
  425dca:	mov    esi,DWORD PTR [ebp-0x28]
  425dcd:	cmp    DWORD PTR [ebp-0x2c],ebx
  425dd0:	jne    0x425dee
  425dd2:	lea    eax,[esi+esi*1]
  425dd5:	push   eax
  425dd6:	call   0x424672
  425ddb:	pop    ecx
  425ddc:	mov    DWORD PTR [ebp-0x2c],eax
  425ddf:	cmp    eax,ebx
  425de1:	je     0x425f47
  425de7:	mov    DWORD PTR [ebp-0x20],0x1
  425dee:	push   esi
  425def:	push   DWORD PTR [ebp-0x2c]
  425df2:	push   DWORD PTR [ebp+0x14]
  425df5:	push   DWORD PTR [ebp+0x10]
  425df8:	push   0x1
  425dfa:	push   DWORD PTR [ebp+0x20]
  425dfd:	call   DWORD PTR ds:0x42810c
  425e03:	test   eax,eax
  425e05:	je     0x425ef1
  425e0b:	push   ebx
  425e0c:	push   ebx
  425e0d:	push   esi
  425e0e:	push   DWORD PTR [ebp-0x2c]
  425e11:	push   DWORD PTR [ebp+0xc]
  425e14:	push   DWORD PTR [ebp+0x8]
  425e17:	call   DWORD PTR ds:0x428110
  425e1d:	mov    edi,eax
  425e1f:	mov    DWORD PTR [ebp-0x1c],edi
  425e22:	cmp    edi,ebx
  425e24:	je     0x425ef1
  425e2a:	test   BYTE PTR [ebp+0xd],0x4
  425e2e:	je     0x425e5d
  425e30:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e33:	je     0x425ef1
  425e39:	cmp    edi,DWORD PTR [ebp+0x1c]
  425e3c:	jg     0x425ef1
  425e42:	push   DWORD PTR [ebp+0x1c]
  425e45:	push   DWORD PTR [ebp+0x18]
  425e48:	push   esi
  425e49:	push   DWORD PTR [ebp-0x2c]
  425e4c:	push   DWORD PTR [ebp+0xc]
  425e4f:	push   DWORD PTR [ebp+0x8]
  425e52:	call   DWORD PTR ds:0x428110
  425e58:	jmp    0x425ef1
  425e5d:	mov    DWORD PTR [ebp-0x4],0x2
  425e64:	lea    eax,[edi+edi*1]
  425e67:	add    eax,0x3
  425e6a:	and    eax,0xfffffffc
  425e6d:	call   0x4239a0
  425e72:	mov    DWORD PTR [ebp-0x18],esp
  425e75:	mov    eax,esp
  425e77:	mov    DWORD PTR [ebp-0x30],eax
  425e7a:	or     DWORD PTR [ebp-0x4],0xffffffff
  425e7e:	jmp    0x425e9b
  425e80:	xor    eax,eax
  425e82:	inc    eax
  425e83:	ret    
  425e84:	mov    esp,DWORD PTR [ebp-0x18]
  425e87:	call   0x426de5
  425e8c:	xor    ebx,ebx
  425e8e:	mov    DWORD PTR [ebp-0x30],ebx
  425e91:	or     DWORD PTR [ebp-0x4],0xffffffff
  425e95:	mov    edi,DWORD PTR [ebp-0x1c]
  425e98:	mov    esi,DWORD PTR [ebp-0x28]
  425e9b:	cmp    DWORD PTR [ebp-0x30],ebx
  425e9e:	jne    0x425eb8
  425ea0:	lea    eax,[edi+edi*1]
  425ea3:	push   eax
  425ea4:	call   0x424672
  425ea9:	pop    ecx
  425eaa:	mov    DWORD PTR [ebp-0x30],eax
  425ead:	cmp    eax,ebx
  425eaf:	je     0x425ef1
  425eb1:	mov    DWORD PTR [ebp-0x24],0x1
  425eb8:	push   edi
  425eb9:	push   DWORD PTR [ebp-0x30]
  425ebc:	push   esi
  425ebd:	push   DWORD PTR [ebp-0x2c]
  425ec0:	push   DWORD PTR [ebp+0xc]
  425ec3:	push   DWORD PTR [ebp+0x8]
  425ec6:	call   DWORD PTR ds:0x428110
  425ecc:	test   eax,eax
  425ece:	je     0x425ef1
  425ed0:	push   ebx
  425ed1:	push   ebx
  425ed2:	cmp    DWORD PTR [ebp+0x1c],ebx
  425ed5:	jne    0x425edb
  425ed7:	push   ebx
  425ed8:	push   ebx
  425ed9:	jmp    0x425ee1
  425edb:	push   DWORD PTR [ebp+0x1c]
  425ede:	push   DWORD PTR [ebp+0x18]
  425ee1:	push   edi
  425ee2:	push   DWORD PTR [ebp-0x30]
  425ee5:	push   ebx
  425ee6:	push   DWORD PTR [ebp+0x20]
  425ee9:	call   DWORD PTR ds:0x428090
  425eef:	mov    edi,eax
  425ef1:	cmp    DWORD PTR [ebp-0x24],ebx
  425ef4:	je     0x425eff
  425ef6:	push   DWORD PTR [ebp-0x30]
  425ef9:	call   0x42455a
  425efe:	pop    ecx
  425eff:	cmp    DWORD PTR [ebp-0x20],ebx
  425f02:	je     0x425f0d
  425f04:	push   DWORD PTR [ebp-0x2c]
  425f07:	call   0x42455a
  425f0c:	pop    ecx
  425f0d:	mov    eax,edi
  425f0f:	jmp    0x42606f
  425f14:	mov    DWORD PTR [ebp-0x34],ebx
  425f17:	xor    edi,edi
  425f19:	mov    DWORD PTR [ebp-0x38],ebx
  425f1c:	cmp    DWORD PTR [ebp+0x8],ebx
  425f1f:	jne    0x425f29
  425f21:	mov    eax,ds:0x465044
  425f26:	mov    DWORD PTR [ebp+0x8],eax
  425f29:	cmp    DWORD PTR [ebp+0x20],ebx
  425f2c:	jne    0x425f36
  425f2e:	mov    eax,ds:0x465054
  425f33:	mov    DWORD PTR [ebp+0x20],eax
  425f36:	push   DWORD PTR [ebp+0x8]
  425f39:	call   0x426bcd
  425f3e:	pop    ecx
  425f3f:	mov    DWORD PTR [ebp-0x3c],eax
  425f42:	cmp    eax,0xffffffff
  425f45:	jne    0x425f4e
  425f47:	xor    eax,eax
  425f49:	jmp    0x42606f
  425f4e:	cmp    eax,DWORD PTR [ebp+0x20]
  425f51:	je     0x426045
  425f57:	push   ebx
  425f58:	push   ebx
  425f59:	lea    ecx,[ebp+0x14]
  425f5c:	push   ecx
  425f5d:	push   DWORD PTR [ebp+0x10]
  425f60:	push   eax
  425f61:	push   DWORD PTR [ebp+0x20]
  425f64:	call   0x426c16
  425f69:	add    esp,0x18
  425f6c:	mov    DWORD PTR [ebp-0x34],eax
  425f6f:	cmp    eax,ebx
  425f71:	je     0x425f47
  425f73:	push   ebx
  425f74:	push   ebx
  425f75:	push   DWORD PTR [ebp+0x14]
  425f78:	push   eax
  425f79:	push   DWORD PTR [ebp+0xc]
  425f7c:	push   DWORD PTR [ebp+0x8]
  425f7f:	call   DWORD PTR ds:0x428108
  425f85:	mov    esi,eax
  425f87:	mov    DWORD PTR [ebp-0x40],esi
  425f8a:	cmp    esi,ebx
  425f8c:	je     0x426034
  425f92:	mov    DWORD PTR [ebp-0x4],ebx
  425f95:	add    eax,0x3
  425f98:	and    eax,0xfffffffc
  425f9b:	call   0x4239a0
  425fa0:	mov    DWORD PTR [ebp-0x18],esp
  425fa3:	mov    edi,esp
  425fa5:	mov    DWORD PTR [ebp-0x44],edi
  425fa8:	push   esi
  425fa9:	push   ebx
  425faa:	push   edi
  425fab:	call   0x426250
  425fb0:	add    esp,0xc
  425fb3:	jmp    0x425fc5
  425fb5:	xor    eax,eax
  425fb7:	inc    eax
  425fb8:	ret    
  425fb9:	mov    esp,DWORD PTR [ebp-0x18]
  425fbc:	call   0x426de5
  425fc1:	xor    ebx,ebx
  425fc3:	xor    edi,edi
  425fc5:	or     DWORD PTR [ebp-0x4],0xffffffff
  425fc9:	cmp    edi,ebx
  425fcb:	jne    0x425ff0
  425fcd:	push   DWORD PTR [ebp-0x40]
  425fd0:	call   0x424672
  425fd5:	pop    ecx
  425fd6:	mov    edi,eax
  425fd8:	cmp    edi,ebx
  425fda:	je     0x42600d
  425fdc:	push   DWORD PTR [ebp-0x40]
  425fdf:	push   ebx
  425fe0:	push   edi
  425fe1:	call   0x426250
  425fe6:	add    esp,0xc
  425fe9:	mov    DWORD PTR [ebp-0x38],0x1
  425ff0:	push   DWORD PTR [ebp-0x40]
  425ff3:	push   edi
  425ff4:	push   DWORD PTR [ebp+0x14]
  425ff7:	push   DWORD PTR [ebp-0x34]
  425ffa:	push   DWORD PTR [ebp+0xc]
  425ffd:	push   DWORD PTR [ebp+0x8]
  426000:	call   DWORD PTR ds:0x428108
  426006:	mov    DWORD PTR [ebp-0x40],eax
  426009:	cmp    eax,ebx
  42600b:	jne    0x426011
  42600d:	xor    esi,esi
  42600f:	jmp    0x426037
  426011:	push   DWORD PTR [ebp+0x1c]
  426014:	push   DWORD PTR [ebp+0x18]
  426017:	lea    eax,[ebp-0x40]
  42601a:	push   eax
  42601b:	push   edi
  42601c:	push   DWORD PTR [ebp+0x20]
  42601f:	push   DWORD PTR [ebp-0x3c]
  426022:	call   0x426c16
  426027:	add    esp,0x18
  42602a:	mov    esi,eax
  42602c:	neg    esi
  42602e:	sbb    esi,esi
  426030:	neg    esi
  426032:	jmp    0x426037
  426034:	mov    esi,DWORD PTR [ebp-0x48]
  426037:	cmp    DWORD PTR [ebp-0x38],ebx
  42603a:	je     0x42605f
  42603c:	push   edi
  42603d:	call   0x42455a
  426042:	pop    ecx
  426043:	jmp    0x42605f
  426045:	push   DWORD PTR [ebp+0x1c]
  426048:	push   DWORD PTR [ebp+0x18]
  42604b:	push   DWORD PTR [ebp+0x14]
  42604e:	push   DWORD PTR [ebp+0x10]
  426051:	push   DWORD PTR [ebp+0xc]
  426054:	push   DWORD PTR [ebp+0x8]
  426057:	call   DWORD PTR ds:0x428108
  42605d:	mov    esi,eax
  42605f:	cmp    DWORD PTR [ebp-0x34],ebx
  426062:	je     0x42606d
  426064:	push   DWORD PTR [ebp-0x34]
  426067:	call   0x42455a
  42606c:	pop    ecx
  42606d:	mov    eax,esi
  42606f:	lea    esp,[ebp-0x54]
  426072:	call   0x42398b
  426077:	ret    
  426078:	push   0x1c
  42607a:	push   0x428dc8
  42607f:	call   0x423950
  426084:	xor    esi,esi
  426086:	cmp    DWORD PTR ds:0x465060,esi
  42608c:	jne    0x4260c3
  42608e:	lea    eax,[ebp-0x1c]
  426091:	push   eax
  426092:	xor    edi,edi
  426094:	inc    edi
  426095:	push   edi
  426096:	push   0x428d9c
  42609b:	push   edi
  42609c:	call   DWORD PTR ds:0x428118
  4260a2:	test   eax,eax
  4260a4:	je     0x4260ae
  4260a6:	mov    DWORD PTR ds:0x465060,edi
  4260ac:	jmp    0x4260c3
  4260ae:	call   DWORD PTR ds:0x428034
  4260b4:	cmp    eax,0x78
  4260b7:	jne    0x4260c3
  4260b9:	mov    DWORD PTR ds:0x465060,0x2
  4260c3:	mov    eax,ds:0x465060
  4260c8:	cmp    eax,0x2
  4260cb:	je     0x4261bb
  4260d1:	cmp    eax,esi
  4260d3:	je     0x4261bb
  4260d9:	cmp    eax,0x1
  4260dc:	jne    0x4261e1
  4260e2:	mov    DWORD PTR [ebp-0x20],esi
  4260e5:	mov    DWORD PTR [ebp-0x24],esi
  4260e8:	cmp    DWORD PTR [ebp+0x18],esi
  4260eb:	jne    0x4260f5
  4260ed:	mov    eax,ds:0x465054
  4260f2:	mov    DWORD PTR [ebp+0x18],eax
  4260f5:	push   esi
  4260f6:	push   esi
  4260f7:	push   DWORD PTR [ebp+0x10]
  4260fa:	push   DWORD PTR [ebp+0xc]
  4260fd:	xor    eax,eax
  4260ff:	cmp    DWORD PTR [ebp+0x20],esi
  426102:	setne  al
  426105:	lea    eax,[eax*8+0x1]
  42610c:	push   eax
  42610d:	push   DWORD PTR [ebp+0x18]
  426110:	call   DWORD PTR ds:0x42810c
  426116:	mov    edi,eax
  426118:	mov    DWORD PTR [ebp-0x28],edi
  42611b:	test   edi,edi
  42611d:	je     0x4261e1
  426123:	and    DWORD PTR [ebp-0x4],0x0
  426127:	lea    ebx,[edi+edi*1]
  42612a:	mov    eax,ebx
  42612c:	add    eax,0x3
  42612f:	and    eax,0xfffffffc
  426132:	call   0x4239a0
  426137:	mov    DWORD PTR [ebp-0x18],esp
  42613a:	mov    esi,esp
  42613c:	mov    DWORD PTR [ebp-0x2c],esi
  42613f:	push   ebx
  426140:	push   0x0
  426142:	push   esi
  426143:	call   0x426250
  426148:	add    esp,0xc
  42614b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42614f:	jmp    0x426166
  426151:	xor    eax,eax
  426153:	inc    eax
  426154:	ret    
  426155:	mov    esp,DWORD PTR [ebp-0x18]
  426158:	call   0x426de5
  42615d:	xor    esi,esi
  42615f:	or     DWORD PTR [ebp-0x4],0xffffffff
  426163:	mov    edi,DWORD PTR [ebp-0x28]
  426166:	test   esi,esi
  426168:	jne    0x426181
  42616a:	push   edi
  42616b:	push   0x2
  42616d:	call   0x424a68
  426172:	pop    ecx
  426173:	pop    ecx
  426174:	mov    esi,eax
  426176:	test   esi,esi
  426178:	je     0x4261e1
  42617a:	mov    DWORD PTR [ebp-0x24],0x1
  426181:	push   edi
  426182:	push   esi
  426183:	push   DWORD PTR [ebp+0x10]
  426186:	push   DWORD PTR [ebp+0xc]
  426189:	push   0x1
  42618b:	push   DWORD PTR [ebp+0x18]
  42618e:	call   DWORD PTR ds:0x42810c
  426194:	test   eax,eax
  426196:	je     0x4261a9
  426198:	push   DWORD PTR [ebp+0x14]
  42619b:	push   eax
  42619c:	push   esi
  42619d:	push   DWORD PTR [ebp+0x8]
  4261a0:	call   DWORD PTR ds:0x428118
  4261a6:	mov    DWORD PTR [ebp-0x20],eax
  4261a9:	cmp    DWORD PTR [ebp-0x24],0x0
  4261ad:	je     0x4261b6
  4261af:	push   esi
  4261b0:	call   0x42455a
  4261b5:	pop    ecx
  4261b6:	mov    eax,DWORD PTR [ebp-0x20]
  4261b9:	jmp    0x426229
  4261bb:	mov    ebx,DWORD PTR [ebp+0x1c]
  4261be:	cmp    ebx,esi
  4261c0:	jne    0x4261c8
  4261c2:	mov    ebx,DWORD PTR ds:0x465044
  4261c8:	mov    edi,DWORD PTR [ebp+0x18]
  4261cb:	test   edi,edi
  4261cd:	jne    0x4261d5
  4261cf:	mov    edi,DWORD PTR ds:0x465054
  4261d5:	push   ebx
  4261d6:	call   0x426bcd
  4261db:	pop    ecx
  4261dc:	cmp    eax,0xffffffff
  4261df:	jne    0x4261e5
  4261e1:	xor    eax,eax
  4261e3:	jmp    0x426229
  4261e5:	cmp    eax,edi
  4261e7:	je     0x426207
  4261e9:	push   0x0
  4261eb:	push   0x0
  4261ed:	lea    ecx,[ebp+0x10]
  4261f0:	push   ecx
  4261f1:	push   DWORD PTR [ebp+0xc]
  4261f4:	push   eax
  4261f5:	push   edi
  4261f6:	call   0x426c16
  4261fb:	add    esp,0x18
  4261fe:	mov    esi,eax
  426200:	test   esi,esi
  426202:	je     0x4261e1
  426204:	mov    DWORD PTR [ebp+0xc],esi
  426207:	push   DWORD PTR [ebp+0x14]
  42620a:	push   DWORD PTR [ebp+0x10]
  42620d:	push   DWORD PTR [ebp+0xc]
  426210:	push   DWORD PTR [ebp+0x8]
  426213:	push   ebx
  426214:	call   DWORD PTR ds:0x428114
  42621a:	mov    edi,eax
  42621c:	test   esi,esi
  42621e:	je     0x426227
  426220:	push   esi
  426221:	call   0x42455a
  426226:	pop    ecx
  426227:	mov    eax,edi
  426229:	lea    esp,[ebp-0x38]
  42622c:	call   0x42398b
  426231:	ret    
  426232:	mov    eax,ds:0x465064
  426237:	test   eax,eax
  426239:	je     0x42624a
  42623b:	push   DWORD PTR [esp+0x4]
  42623f:	call   eax
  426241:	test   eax,eax
  426243:	pop    ecx
  426244:	je     0x42624a
  426246:	xor    eax,eax
  426248:	inc    eax
  426249:	ret    
  42624a:	xor    eax,eax
  42624c:	ret    
  42624d:	int3   
  42624e:	int3   
  42624f:	int3   
  426250:	mov    edx,DWORD PTR [esp+0xc]
  426254:	mov    ecx,DWORD PTR [esp+0x4]
  426258:	test   edx,edx
  42625a:	je     0x4262ab
  42625c:	xor    eax,eax
  42625e:	mov    al,BYTE PTR [esp+0x8]
  426262:	push   edi
  426263:	mov    edi,ecx
  426265:	cmp    edx,0x4
  426268:	jb     0x42629b
  42626a:	neg    ecx
  42626c:	and    ecx,0x3
  42626f:	je     0x42627d
  426271:	sub    edx,ecx
  426273:	mov    BYTE PTR [edi],al
  426275:	add    edi,0x1
  426278:	sub    ecx,0x1
  42627b:	jne    0x426273
  42627d:	mov    ecx,eax
  42627f:	shl    eax,0x8
  426282:	add    eax,ecx
  426284:	mov    ecx,eax
  426286:	shl    eax,0x10
  426289:	add    eax,ecx
  42628b:	mov    ecx,edx
  42628d:	and    edx,0x3
  426290:	shr    ecx,0x2
  426293:	je     0x42629b
  426295:	rep stos DWORD PTR es:[edi],eax
  426297:	test   edx,edx
  426299:	je     0x4262a5
  42629b:	mov    BYTE PTR [edi],al
  42629d:	add    edi,0x1
  4262a0:	sub    edx,0x1
  4262a3:	jne    0x42629b
  4262a5:	mov    eax,DWORD PTR [esp+0x8]
  4262a9:	pop    edi
  4262aa:	ret    
  4262ab:	mov    eax,DWORD PTR [esp+0x4]
  4262af:	ret    
  4262b0:	push   esi
  4262b1:	mov    esi,DWORD PTR [esp+0x8]
  4262b5:	test   esi,esi
  4262b7:	je     0x42643e
  4262bd:	push   DWORD PTR [esi+0x4]
  4262c0:	call   0x42455a
  4262c5:	push   DWORD PTR [esi+0x8]
  4262c8:	call   0x42455a
  4262cd:	push   DWORD PTR [esi+0xc]
  4262d0:	call   0x42455a
  4262d5:	push   DWORD PTR [esi+0x10]
  4262d8:	call   0x42455a
  4262dd:	push   DWORD PTR [esi+0x14]
  4262e0:	call   0x42455a
  4262e5:	push   DWORD PTR [esi+0x18]
  4262e8:	call   0x42455a
  4262ed:	push   DWORD PTR [esi]
  4262ef:	call   0x42455a
  4262f4:	push   DWORD PTR [esi+0x20]
  4262f7:	call   0x42455a
  4262fc:	push   DWORD PTR [esi+0x24]
  4262ff:	call   0x42455a
  426304:	push   DWORD PTR [esi+0x28]
  426307:	call   0x42455a
  42630c:	push   DWORD PTR [esi+0x2c]
  42630f:	call   0x42455a
  426314:	push   DWORD PTR [esi+0x30]
  426317:	call   0x42455a
  42631c:	push   DWORD PTR [esi+0x34]
  42631f:	call   0x42455a
  426324:	push   DWORD PTR [esi+0x1c]
  426327:	call   0x42455a
  42632c:	push   DWORD PTR [esi+0x38]
  42632f:	call   0x42455a
  426334:	push   DWORD PTR [esi+0x3c]
  426337:	call   0x42455a
  42633c:	add    esp,0x40
  42633f:	push   DWORD PTR [esi+0x40]
  426342:	call   0x42455a
  426347:	push   DWORD PTR [esi+0x44]
  42634a:	call   0x42455a
  42634f:	push   DWORD PTR [esi+0x48]
  426352:	call   0x42455a
  426357:	push   DWORD PTR [esi+0x4c]
  42635a:	call   0x42455a
  42635f:	push   DWORD PTR [esi+0x50]
  426362:	call   0x42455a
  426367:	push   DWORD PTR [esi+0x54]
  42636a:	call   0x42455a
  42636f:	push   DWORD PTR [esi+0x58]
  426372:	call   0x42455a
  426377:	push   DWORD PTR [esi+0x5c]
  42637a:	call   0x42455a
  42637f:	push   DWORD PTR [esi+0x60]
  426382:	call   0x42455a
  426387:	push   DWORD PTR [esi+0x64]
  42638a:	call   0x42455a
  42638f:	push   DWORD PTR [esi+0x68]
  426392:	call   0x42455a
  426397:	push   DWORD PTR [esi+0x6c]
  42639a:	call   0x42455a
  42639f:	push   DWORD PTR [esi+0x70]
  4263a2:	call   0x42455a
  4263a7:	push   DWORD PTR [esi+0x74]
  4263aa:	call   0x42455a
  4263af:	push   DWORD PTR [esi+0x78]
  4263b2:	call   0x42455a
  4263b7:	push   DWORD PTR [esi+0x7c]
  4263ba:	call   0x42455a
  4263bf:	add    esp,0x40
  4263c2:	push   DWORD PTR [esi+0x80]
  4263c8:	call   0x42455a
  4263cd:	push   DWORD PTR [esi+0x84]
  4263d3:	call   0x42455a
  4263d8:	push   DWORD PTR [esi+0x88]
  4263de:	call   0x42455a
  4263e3:	push   DWORD PTR [esi+0x8c]
  4263e9:	call   0x42455a
  4263ee:	push   DWORD PTR [esi+0x90]
  4263f4:	call   0x42455a
  4263f9:	push   DWORD PTR [esi+0x94]
  4263ff:	call   0x42455a
  426404:	push   DWORD PTR [esi+0x98]
  42640a:	call   0x42455a
  42640f:	push   DWORD PTR [esi+0x9c]
  426415:	call   0x42455a
  42641a:	push   DWORD PTR [esi+0xa0]
  426420:	call   0x42455a
  426425:	push   DWORD PTR [esi+0xa4]
  42642b:	call   0x42455a
  426430:	push   DWORD PTR [esi+0xa8]
  426436:	call   0x42455a
  42643b:	add    esp,0x2c
  42643e:	pop    esi
  42643f:	ret    
  426440:	push   esi
  426441:	mov    esi,DWORD PTR [esp+0x8]
  426445:	test   esi,esi
  426447:	je     0x42649d
  426449:	mov    eax,DWORD PTR [esi]
  42644b:	mov    ecx,DWORD PTR ds:0x464bc4
  426451:	cmp    eax,DWORD PTR [ecx]
  426453:	je     0x426464
  426455:	cmp    eax,DWORD PTR ds:0x464b94
  42645b:	je     0x426464
  42645d:	push   eax
  42645e:	call   0x42455a
  426463:	pop    ecx
  426464:	mov    eax,DWORD PTR [esi+0x4]
  426467:	mov    ecx,DWORD PTR ds:0x464bc4
  42646d:	cmp    eax,DWORD PTR [ecx+0x4]
  426470:	je     0x426481
  426472:	cmp    eax,DWORD PTR ds:0x464b98
  426478:	je     0x426481
  42647a:	push   eax
  42647b:	call   0x42455a
  426480:	pop    ecx
  426481:	mov    esi,DWORD PTR [esi+0x8]
  426484:	mov    eax,ds:0x464bc4
  426489:	cmp    esi,DWORD PTR [eax+0x8]
  42648c:	je     0x42649d
  42648e:	cmp    esi,DWORD PTR ds:0x464b9c
  426494:	je     0x42649d
  426496:	push   esi
  426497:	call   0x42455a
  42649c:	pop    ecx
  42649d:	pop    esi
  42649e:	ret    
  42649f:	push   esi
  4264a0:	mov    esi,DWORD PTR [esp+0x8]
  4264a4:	test   esi,esi
  4264a6:	je     0x426576
  4264ac:	mov    eax,DWORD PTR [esi+0xc]
  4264af:	mov    ecx,DWORD PTR ds:0x464bc4
  4264b5:	cmp    eax,DWORD PTR [ecx+0xc]
  4264b8:	je     0x4264c9
  4264ba:	cmp    eax,DWORD PTR ds:0x464ba0
  4264c0:	je     0x4264c9
  4264c2:	push   eax
  4264c3:	call   0x42455a
  4264c8:	pop    ecx
  4264c9:	mov    eax,DWORD PTR [esi+0x10]
  4264cc:	mov    ecx,DWORD PTR ds:0x464bc4
  4264d2:	cmp    eax,DWORD PTR [ecx+0x10]
  4264d5:	je     0x4264e6
  4264d7:	cmp    eax,DWORD PTR ds:0x464ba4
  4264dd:	je     0x4264e6
  4264df:	push   eax
  4264e0:	call   0x42455a
  4264e5:	pop    ecx
  4264e6:	mov    eax,DWORD PTR [esi+0x14]
  4264e9:	mov    ecx,DWORD PTR ds:0x464bc4
  4264ef:	cmp    eax,DWORD PTR [ecx+0x14]
  4264f2:	je     0x426503
  4264f4:	cmp    eax,DWORD PTR ds:0x464ba8
  4264fa:	je     0x426503
  4264fc:	push   eax
  4264fd:	call   0x42455a
  426502:	pop    ecx
  426503:	mov    eax,DWORD PTR [esi+0x18]
  426506:	mov    ecx,DWORD PTR ds:0x464bc4
  42650c:	cmp    eax,DWORD PTR [ecx+0x18]
  42650f:	je     0x426520
  426511:	cmp    eax,DWORD PTR ds:0x464bac
  426517:	je     0x426520
  426519:	push   eax
  42651a:	call   0x42455a
  42651f:	pop    ecx
  426520:	mov    eax,DWORD PTR [esi+0x1c]
  426523:	mov    ecx,DWORD PTR ds:0x464bc4
  426529:	cmp    eax,DWORD PTR [ecx+0x1c]
  42652c:	je     0x42653d
  42652e:	cmp    eax,DWORD PTR ds:0x464bb0
  426534:	je     0x42653d
  426536:	push   eax
  426537:	call   0x42455a
  42653c:	pop    ecx
  42653d:	mov    eax,DWORD PTR [esi+0x20]
  426540:	mov    ecx,DWORD PTR ds:0x464bc4
  426546:	cmp    eax,DWORD PTR [ecx+0x20]
  426549:	je     0x42655a
  42654b:	cmp    eax,DWORD PTR ds:0x464bb4
  426551:	je     0x42655a
  426553:	push   eax
  426554:	call   0x42455a
  426559:	pop    ecx
  42655a:	mov    esi,DWORD PTR [esi+0x24]
  42655d:	mov    eax,ds:0x464bc4
  426562:	cmp    esi,DWORD PTR [eax+0x24]
  426565:	je     0x426576
  426567:	cmp    esi,DWORD PTR ds:0x464bb8
  42656d:	je     0x426576
  42656f:	push   esi
  426570:	call   0x42455a
  426575:	pop    ecx
  426576:	pop    esi
  426577:	ret    
  426578:	int3   
  426579:	int3   
  42657a:	int3   
  42657b:	int3   
  42657c:	int3   
  42657d:	int3   
  42657e:	int3   
  42657f:	int3   
  426580:	push   ebp
  426581:	mov    ebp,esp
  426583:	push   esi
  426584:	xor    eax,eax
  426586:	push   eax
  426587:	push   eax
  426588:	push   eax
  426589:	push   eax
  42658a:	push   eax
  42658b:	push   eax
  42658c:	push   eax
  42658d:	push   eax
  42658e:	mov    edx,DWORD PTR [ebp+0xc]
  426591:	lea    ecx,[ecx+0x0]
  426594:	mov    al,BYTE PTR [edx]
  426596:	or     al,al
  426598:	je     0x4265a3
  42659a:	add    edx,0x1
  42659d:	bts    DWORD PTR [esp],eax
  4265a1:	jmp    0x426594
  4265a3:	mov    esi,DWORD PTR [ebp+0x8]
  4265a6:	or     ecx,0xffffffff
  4265a9:	lea    ecx,[ecx+0x0]
  4265ac:	add    ecx,0x1
  4265af:	mov    al,BYTE PTR [esi]
  4265b1:	or     al,al
  4265b3:	je     0x4265be
  4265b5:	add    esi,0x1
  4265b8:	bt     DWORD PTR [esp],eax
  4265bc:	jae    0x4265ac
  4265be:	mov    eax,ecx
  4265c0:	add    esp,0x20
  4265c3:	pop    esi
  4265c4:	leave  
  4265c5:	ret    
  4265c6:	int3   
  4265c7:	int3   
  4265c8:	int3   
  4265c9:	int3   
  4265ca:	int3   
  4265cb:	int3   
  4265cc:	int3   
  4265cd:	int3   
  4265ce:	int3   
  4265cf:	int3   
  4265d0:	mov    edx,DWORD PTR [esp+0x4]
  4265d4:	mov    ecx,DWORD PTR [esp+0x8]
  4265d8:	test   edx,0x3
  4265de:	jne    0x42661c
  4265e0:	mov    eax,DWORD PTR [edx]
  4265e2:	cmp    al,BYTE PTR [ecx]
  4265e4:	jne    0x426614
  4265e6:	or     al,al
  4265e8:	je     0x426610
  4265ea:	cmp    ah,BYTE PTR [ecx+0x1]
  4265ed:	jne    0x426614
  4265ef:	or     ah,ah
  4265f1:	je     0x426610
  4265f3:	shr    eax,0x10
  4265f6:	cmp    al,BYTE PTR [ecx+0x2]
  4265f9:	jne    0x426614
  4265fb:	or     al,al
  4265fd:	je     0x426610
  4265ff:	cmp    ah,BYTE PTR [ecx+0x3]
  426602:	jne    0x426614
  426604:	add    ecx,0x4
  426607:	add    edx,0x4
  42660a:	or     ah,ah
  42660c:	jne    0x4265e0
  42660e:	mov    edi,edi
  426610:	xor    eax,eax
  426612:	ret    
  426613:	nop
  426614:	sbb    eax,eax
  426616:	shl    eax,1
  426618:	add    eax,0x1
  42661b:	ret    
  42661c:	test   edx,0x1
  426622:	je     0x42663c
  426624:	mov    al,BYTE PTR [edx]
  426626:	add    edx,0x1
  426629:	cmp    al,BYTE PTR [ecx]
  42662b:	jne    0x426614
  42662d:	add    ecx,0x1
  426630:	or     al,al
  426632:	je     0x426610
  426634:	test   edx,0x2
  42663a:	je     0x4265e0
  42663c:	mov    ax,WORD PTR [edx]
  42663f:	add    edx,0x2
  426642:	cmp    al,BYTE PTR [ecx]
  426644:	jne    0x426614
  426646:	or     al,al
  426648:	je     0x426610
  42664a:	cmp    ah,BYTE PTR [ecx+0x1]
  42664d:	jne    0x426614
  42664f:	or     ah,ah
  426651:	je     0x426610
  426653:	add    ecx,0x2
  426656:	jmp    0x4265e0
  426658:	int3   
  426659:	int3   
  42665a:	int3   
  42665b:	int3   
  42665c:	int3   
  42665d:	int3   
  42665e:	int3   
  42665f:	int3   
  426660:	mov    eax,DWORD PTR [esp+0xc]
  426664:	test   eax,eax
  426666:	je     0x4266b2
  426668:	mov    edx,DWORD PTR [esp+0x4]
  42666c:	push   esi
  42666d:	push   edi
  42666e:	mov    esi,edx
  426670:	mov    edi,DWORD PTR [esp+0x10]
  426674:	or     edx,edi
  426676:	and    edx,0x3
  426679:	je     0x4266b3
  42667b:	test   eax,0x1
  426680:	je     0x426693
  426682:	mov    cl,BYTE PTR [esi]
  426684:	cmp    cl,BYTE PTR [edi]
  426686:	jne    0x4266e0
  426688:	add    esi,0x1
  42668b:	add    edi,0x1
  42668e:	sub    eax,0x1
  426691:	je     0x4266b0
  426693:	mov    cl,BYTE PTR [esi]
  426695:	mov    dl,BYTE PTR [edi]
  426697:	cmp    cl,dl
  426699:	jne    0x4266e0
  42669b:	mov    cl,BYTE PTR [esi+0x1]
  42669e:	mov    dl,BYTE PTR [edi+0x1]
  4266a1:	cmp    cl,dl
  4266a3:	jne    0x4266e0
  4266a5:	add    edi,0x2
  4266a8:	add    esi,0x2
  4266ab:	sub    eax,0x2
  4266ae:	jne    0x426693
  4266b0:	pop    edi
  4266b1:	pop    esi
  4266b2:	ret    
  4266b3:	mov    ecx,eax
  4266b5:	and    eax,0x3
  4266b8:	shr    ecx,0x2
  4266bb:	je     0x4266e8
  4266bd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266bf:	je     0x4266e8
  4266c1:	mov    ecx,DWORD PTR [esi-0x4]
  4266c4:	mov    edx,DWORD PTR [edi-0x4]
  4266c7:	cmp    cl,dl
  4266c9:	jne    0x4266db
  4266cb:	cmp    ch,dh
  4266cd:	jne    0x4266db
  4266cf:	shr    ecx,0x10
  4266d2:	shr    edx,0x10
  4266d5:	cmp    cl,dl
  4266d7:	jne    0x4266db
  4266d9:	cmp    ch,dh
  4266db:	mov    eax,0x0
  4266e0:	sbb    eax,eax
  4266e2:	pop    edi
  4266e3:	sbb    eax,0xffffffff
  4266e6:	pop    esi
  4266e7:	ret    
  4266e8:	test   eax,eax
  4266ea:	je     0x4266b0
  4266ec:	mov    edx,DWORD PTR [esi]
  4266ee:	mov    ecx,DWORD PTR [edi]
  4266f0:	cmp    dl,cl
  4266f2:	jne    0x4266db
  4266f4:	sub    eax,0x1
  4266f7:	je     0x426715
  4266f9:	cmp    dh,ch
  4266fb:	jne    0x4266db
  4266fd:	sub    eax,0x1
  426700:	je     0x426715
  426702:	and    ecx,0xff0000
  426708:	and    edx,0xff0000
  42670e:	cmp    edx,ecx
  426710:	jne    0x4266db
  426712:	sub    eax,0x1
  426715:	pop    edi
  426716:	pop    esi
  426717:	ret    
  426718:	int3   
  426719:	int3   
  42671a:	int3   
  42671b:	int3   
  42671c:	int3   
  42671d:	int3   
  42671e:	int3   
  42671f:	int3   
  426720:	push   ebp
  426721:	mov    ebp,esp
  426723:	push   edi
  426724:	push   esi
  426725:	push   ebx
  426726:	mov    ecx,DWORD PTR [ebp+0x10]
  426729:	jecxz  0x426752
  42672b:	mov    ebx,ecx
  42672d:	mov    edi,DWORD PTR [ebp+0x8]
  426730:	mov    esi,edi
  426732:	xor    eax,eax
  426734:	repnz scas al,BYTE PTR es:[edi]
  426736:	neg    ecx
  426738:	add    ecx,ebx
  42673a:	mov    edi,esi
  42673c:	mov    esi,DWORD PTR [ebp+0xc]
  42673f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426741:	mov    al,BYTE PTR [esi-0x1]
  426744:	xor    ecx,ecx
  426746:	cmp    al,BYTE PTR [edi-0x1]
  426749:	ja     0x426750
  42674b:	je     0x426752
  42674d:	sub    ecx,0x2
  426750:	not    ecx
  426752:	mov    eax,ecx
  426754:	pop    ebx
  426755:	pop    esi
  426756:	pop    edi
  426757:	leave  
  426758:	ret    
  426759:	int3   
  42675a:	int3   
  42675b:	int3   
  42675c:	int3   
  42675d:	int3   
  42675e:	int3   
  42675f:	int3   
  426760:	push   ebp
  426761:	mov    ebp,esp
  426763:	push   esi
  426764:	xor    eax,eax
  426766:	push   eax
  426767:	push   eax
  426768:	push   eax
  426769:	push   eax
  42676a:	push   eax
  42676b:	push   eax
  42676c:	push   eax
  42676d:	push   eax
  42676e:	mov    edx,DWORD PTR [ebp+0xc]
  426771:	lea    ecx,[ecx+0x0]
  426774:	mov    al,BYTE PTR [edx]
  426776:	or     al,al
  426778:	je     0x426783
  42677a:	add    edx,0x1
  42677d:	bts    DWORD PTR [esp],eax
  426781:	jmp    0x426774
  426783:	mov    esi,DWORD PTR [ebp+0x8]
  426786:	mov    edi,edi
  426788:	mov    al,BYTE PTR [esi]
  42678a:	or     al,al
  42678c:	je     0x42679a
  42678e:	add    esi,0x1
  426791:	bt     DWORD PTR [esp],eax
  426795:	jae    0x426788
  426797:	lea    eax,[esi-0x1]
  42679a:	add    esp,0x20
  42679d:	pop    esi
  42679e:	leave  
  42679f:	ret    
  4267a0:	push   ebp
  4267a1:	mov    ebp,esp
  4267a3:	push   ebx
  4267a4:	push   esi
  4267a5:	push   edi
  4267a6:	push   ebp
  4267a7:	push   0x0
  4267a9:	push   0x0
  4267ab:	push   0x4267b8
  4267b0:	push   DWORD PTR [ebp+0x8]
  4267b3:	call   0x42722e
  4267b8:	pop    ebp
  4267b9:	pop    edi
  4267ba:	pop    esi
  4267bb:	pop    ebx
  4267bc:	mov    esp,ebp
  4267be:	pop    ebp
  4267bf:	ret    
  4267c0:	mov    ecx,DWORD PTR [esp+0x4]
  4267c4:	test   DWORD PTR [ecx+0x4],0x6
  4267cb:	mov    eax,0x1
  4267d0:	je     0x4267e1
  4267d2:	mov    eax,DWORD PTR [esp+0x8]
  4267d6:	mov    edx,DWORD PTR [esp+0x10]
  4267da:	mov    DWORD PTR [edx],eax
  4267dc:	mov    eax,0x3
  4267e1:	ret    
  4267e2:	push   ebx
  4267e3:	push   esi
  4267e4:	push   edi
  4267e5:	mov    eax,DWORD PTR [esp+0x10]
  4267e9:	push   eax
  4267ea:	push   0xfffffffe
  4267ec:	push   0x4267c0
  4267f1:	push   DWORD PTR fs:0x0
  4267f8:	mov    DWORD PTR fs:0x0,esp
  4267ff:	mov    eax,DWORD PTR [esp+0x20]
  426803:	mov    ebx,DWORD PTR [eax+0x8]
  426806:	mov    esi,DWORD PTR [eax+0xc]
  426809:	cmp    esi,0xffffffff
  42680c:	je     0x42683c
  42680e:	cmp    esi,DWORD PTR [esp+0x24]
  426812:	je     0x42683c
  426814:	lea    esi,[esi+esi*2]
  426817:	mov    ecx,DWORD PTR [ebx+esi*4]
  42681a:	mov    DWORD PTR [esp+0x8],ecx
  42681e:	mov    DWORD PTR [eax+0xc],ecx
  426821:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426826:	jne    0x42683a
  426828:	push   0x101
  42682d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426831:	call   0x426876
  426836:	call   DWORD PTR [ebx+esi*4+0x8]
  42683a:	jmp    0x4267ff
  42683c:	pop    DWORD PTR fs:0x0
  426843:	add    esp,0xc
  426846:	pop    edi
  426847:	pop    esi
  426848:	pop    ebx
  426849:	ret    
  42684a:	xor    eax,eax
  42684c:	mov    ecx,DWORD PTR fs:0x0
  426853:	cmp    DWORD PTR [ecx+0x4],0x4267c0
  42685a:	jne    0x42686c
  42685c:	mov    edx,DWORD PTR [ecx+0xc]
  42685f:	mov    edx,DWORD PTR [edx+0xc]
  426862:	cmp    DWORD PTR [ecx+0x8],edx
  426865:	jne    0x42686c
  426867:	mov    eax,0x1
  42686c:	ret    
  42686d:	push   ebx
  42686e:	push   ecx
  42686f:	mov    ebx,0x464bdc
  426874:	jmp    0x426880
  426876:	push   ebx
  426877:	push   ecx
  426878:	mov    ebx,0x464bdc
  42687d:	mov    ecx,DWORD PTR [ebp+0x8]
  426880:	mov    DWORD PTR [ebx+0x8],ecx
  426883:	mov    DWORD PTR [ebx+0x4],eax
  426886:	mov    DWORD PTR [ebx+0xc],ebp
  426889:	pop    ecx
  42688a:	pop    ebx
  42688b:	ret    0x4
  42688e:	int3   
  42688f:	int3   
  426890:	push   ebp
  426891:	mov    ebp,esp
  426893:	push   edi
  426894:	push   esi
  426895:	mov    esi,DWORD PTR [ebp+0xc]
  426898:	mov    ecx,DWORD PTR [ebp+0x10]
  42689b:	mov    edi,DWORD PTR [ebp+0x8]
  42689e:	mov    eax,ecx
  4268a0:	mov    edx,ecx
  4268a2:	add    eax,esi
  4268a4:	cmp    edi,esi
  4268a6:	jbe    0x4268b0
  4268a8:	cmp    edi,eax
  4268aa:	jb     0x426a2c
  4268b0:	test   edi,0x3
  4268b6:	jne    0x4268cc
  4268b8:	shr    ecx,0x2
  4268bb:	and    edx,0x3
  4268be:	cmp    ecx,0x8
  4268c1:	jb     0x4268ec
  4268c3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268c5:	jmp    DWORD PTR [edx*4+0x4269dc]
  4268cc:	mov    eax,edi
  4268ce:	mov    edx,0x3
  4268d3:	sub    ecx,0x4
  4268d6:	jb     0x4268e4
  4268d8:	and    eax,0x3
  4268db:	add    ecx,eax
  4268dd:	jmp    DWORD PTR [eax*4+0x4268f0]
  4268e4:	jmp    DWORD PTR [ecx*4+0x4269ec]
  4268eb:	nop
  4268ec:	jmp    DWORD PTR [ecx*4+0x426970]
  4268f3:	nop
  4268f4:	add    BYTE PTR [ecx+0x42],ch
  4268f7:	add    BYTE PTR [ecx+ebp*2],ch
  4268fa:	inc    edx
  4268fb:	add    BYTE PTR [eax+0x69],dl
  4268fe:	inc    edx
  4268ff:	add    BYTE PTR [ebx],ah
  426901:	ror    DWORD PTR [edx-0x75f877fa],1
  426907:	inc    esi
  426908:	add    DWORD PTR [eax+0x468a0147],ecx
  42690e:	add    al,cl
  426910:	jmp    0x289f117
  426915:	add    esi,0x3
  426918:	add    edi,0x3
  42691b:	cmp    ecx,0x8
  42691e:	jb     0x4268ec
  426920:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426922:	jmp    DWORD PTR [edx*4+0x4269dc]
  426929:	lea    ecx,[ecx+0x0]
  42692c:	and    edx,ecx
  42692e:	mov    al,BYTE PTR [esi]
  426930:	mov    BYTE PTR [edi],al
  426932:	mov    al,BYTE PTR [esi+0x1]
  426935:	shr    ecx,0x2
  426938:	mov    BYTE PTR [edi+0x1],al
  42693b:	add    esi,0x2
  42693e:	add    edi,0x2
  426941:	cmp    ecx,0x8
  426944:	jb     0x4268ec
  426946:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426948:	jmp    DWORD PTR [edx*4+0x4269dc]
  42694f:	nop
  426950:	and    edx,ecx
  426952:	mov    al,BYTE PTR [esi]
  426954:	mov    BYTE PTR [edi],al
  426956:	add    esi,0x1
  426959:	shr    ecx,0x2
  42695c:	add    edi,0x1
  42695f:	cmp    ecx,0x8
  426962:	jb     0x4268ec
  426964:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426966:	jmp    DWORD PTR [edx*4+0x4269dc]
  42696d:	lea    ecx,[ecx+0x0]
  426970:	shr    DWORD PTR [ecx+0x42],cl
  426973:	add    al,al
  426975:	imul   eax,DWORD PTR [edx+0x0],0x4269b8
  42697c:	mov    al,0x69
  42697e:	inc    edx
  42697f:	add    BYTE PTR [eax-0x5fffbd97],ch
  426985:	imul   eax,DWORD PTR [edx+0x0],0x426998
  42698c:	nop
  42698d:	imul   eax,DWORD PTR [edx+0x0],0xe48e448b
  426994:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  426998:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  42699c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4269a0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4269a4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4269a8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4269ac:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4269b0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4269b4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4269b8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4269bc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4269c0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4269c4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4269c8:	lea    eax,[ecx*4+0x0]
  4269cf:	add    esi,eax
  4269d1:	add    edi,eax
  4269d3:	jmp    DWORD PTR [edx*4+0x4269dc]
  4269da:	mov    edi,edi
  4269dc:	in     al,dx
  4269dd:	imul   eax,DWORD PTR [edx+0x0],0x4269f4
  4269e4:	add    BYTE PTR [edx+0x42],ch
  4269e7:	add    BYTE PTR [edx+ebp*2],dl
  4269ea:	inc    edx
  4269eb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4269f1:	leave  
  4269f2:	ret    
  4269f3:	nop
  4269f4:	mov    al,BYTE PTR [esi]
  4269f6:	mov    BYTE PTR [edi],al
  4269f8:	mov    eax,DWORD PTR [ebp+0x8]
  4269fb:	pop    esi
  4269fc:	pop    edi
  4269fd:	leave  
  4269fe:	ret    
  4269ff:	nop
  426a00:	mov    al,BYTE PTR [esi]
  426a02:	mov    BYTE PTR [edi],al
  426a04:	mov    al,BYTE PTR [esi+0x1]
  426a07:	mov    BYTE PTR [edi+0x1],al
  426a0a:	mov    eax,DWORD PTR [ebp+0x8]
  426a0d:	pop    esi
  426a0e:	pop    edi
  426a0f:	leave  
  426a10:	ret    
  426a11:	lea    ecx,[ecx+0x0]
  426a14:	mov    al,BYTE PTR [esi]
  426a16:	mov    BYTE PTR [edi],al
  426a18:	mov    al,BYTE PTR [esi+0x1]
  426a1b:	mov    BYTE PTR [edi+0x1],al
  426a1e:	mov    al,BYTE PTR [esi+0x2]
  426a21:	mov    BYTE PTR [edi+0x2],al
  426a24:	mov    eax,DWORD PTR [ebp+0x8]
  426a27:	pop    esi
  426a28:	pop    edi
  426a29:	leave  
  426a2a:	ret    
  426a2b:	nop
  426a2c:	lea    esi,[ecx+esi*1-0x4]
  426a30:	lea    edi,[ecx+edi*1-0x4]
  426a34:	test   edi,0x3
  426a3a:	jne    0x426a60
  426a3c:	shr    ecx,0x2
  426a3f:	and    edx,0x3
  426a42:	cmp    ecx,0x8
  426a45:	jb     0x426a54
  426a47:	std    
  426a48:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a4a:	cld    
  426a4b:	jmp    DWORD PTR [edx*4+0x426b78]
  426a52:	mov    edi,edi
  426a54:	neg    ecx
  426a56:	jmp    DWORD PTR [ecx*4+0x426b28]
  426a5d:	lea    ecx,[ecx+0x0]
  426a60:	mov    eax,edi
  426a62:	mov    edx,0x3
  426a67:	cmp    ecx,0x4
  426a6a:	jb     0x426a78
  426a6c:	and    eax,0x3
  426a6f:	sub    ecx,eax
  426a71:	jmp    DWORD PTR [eax*4+0x426a7c]
  426a78:	jmp    DWORD PTR [ecx*4+0x426b78]
  426a7f:	nop
  426a80:	mov    WORD PTR [edx+0x42],gs
  426a83:	add    BYTE PTR [eax-0x27ffbd96],dh
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [edx-0x2edcfcba],cl
  426a91:	mov    BYTE PTR [edi+0x3],al
  426a94:	sub    esi,0x1
  426a97:	shr    ecx,0x2
  426a9a:	sub    edi,0x1
  426a9d:	cmp    ecx,0x8
  426aa0:	jb     0x426a54
  426aa2:	std    
  426aa3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426aa5:	cld    
  426aa6:	jmp    DWORD PTR [edx*4+0x426b78]
  426aad:	lea    ecx,[ecx+0x0]
  426ab0:	mov    al,BYTE PTR [esi+0x3]
  426ab3:	and    edx,ecx
  426ab5:	mov    BYTE PTR [edi+0x3],al
  426ab8:	mov    al,BYTE PTR [esi+0x2]
  426abb:	shr    ecx,0x2
  426abe:	mov    BYTE PTR [edi+0x2],al
  426ac1:	sub    esi,0x2
  426ac4:	sub    edi,0x2
  426ac7:	cmp    ecx,0x8
  426aca:	jb     0x426a54
  426acc:	std    
  426acd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426acf:	cld    
  426ad0:	jmp    DWORD PTR [edx*4+0x426b78]
  426ad7:	nop
  426ad8:	mov    al,BYTE PTR [esi+0x3]
  426adb:	and    edx,ecx
  426add:	mov    BYTE PTR [edi+0x3],al
  426ae0:	mov    al,BYTE PTR [esi+0x2]
  426ae3:	mov    BYTE PTR [edi+0x2],al
  426ae6:	mov    al,BYTE PTR [esi+0x1]
  426ae9:	shr    ecx,0x2
  426aec:	mov    BYTE PTR [edi+0x1],al
  426aef:	sub    esi,0x3
  426af2:	sub    edi,0x3
  426af5:	cmp    ecx,0x8
  426af8:	jb     0x426a54
  426afe:	std    
  426aff:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b01:	cld    
  426b02:	jmp    DWORD PTR [edx*4+0x426b78]
  426b09:	lea    ecx,[ecx+0x0]
  426b0c:	sub    al,0x6b
  426b0e:	inc    edx
  426b0f:	add    BYTE PTR [ebx+ebp*2],dh
  426b12:	inc    edx
  426b13:	add    BYTE PTR [ebx+ebp*2],bh
  426b16:	inc    edx
  426b17:	add    BYTE PTR [ebx+ebp*2+0x42],al
  426b1b:	add    BYTE PTR [ebx+ebp*2+0x42],cl
  426b1f:	add    BYTE PTR [ebx+ebp*2+0x42],dl
  426b23:	add    BYTE PTR [ebx+ebp*2+0x42],bl
  426b27:	add    BYTE PTR [edi+0x6b],ch
  426b2a:	inc    edx
  426b2b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426b31:	inc    esp
  426b32:	(bad)  
  426b33:	sbb    al,0x8b
  426b35:	inc    esp
  426b36:	mov    ds,WORD PTR [eax]
  426b38:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426b3c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426b40:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426b44:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426b48:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426b4c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426b50:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426b54:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426b58:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426b5c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426b60:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426b64:	lea    eax,[ecx*4+0x0]
  426b6b:	add    esi,eax
  426b6d:	add    edi,eax
  426b6f:	jmp    DWORD PTR [edx*4+0x426b78]
  426b76:	mov    edi,edi
  426b78:	mov    BYTE PTR [ebx+0x42],ch
  426b7b:	add    BYTE PTR [eax-0x5fffbd95],dl
  426b81:	imul   eax,DWORD PTR [edx+0x0],0xffffffb4
  426b85:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426b89:	inc    ebp
  426b8a:	or     BYTE PTR [esi+0x5f],bl
  426b8d:	leave  
  426b8e:	ret    
  426b8f:	nop
  426b90:	mov    al,BYTE PTR [esi+0x3]
  426b93:	mov    BYTE PTR [edi+0x3],al
  426b96:	mov    eax,DWORD PTR [ebp+0x8]
  426b99:	pop    esi
  426b9a:	pop    edi
  426b9b:	leave  
  426b9c:	ret    
  426b9d:	lea    ecx,[ecx+0x0]
  426ba0:	mov    al,BYTE PTR [esi+0x3]
  426ba3:	mov    BYTE PTR [edi+0x3],al
  426ba6:	mov    al,BYTE PTR [esi+0x2]
  426ba9:	mov    BYTE PTR [edi+0x2],al
  426bac:	mov    eax,DWORD PTR [ebp+0x8]
  426baf:	pop    esi
  426bb0:	pop    edi
  426bb1:	leave  
  426bb2:	ret    
  426bb3:	nop
  426bb4:	mov    al,BYTE PTR [esi+0x3]
  426bb7:	mov    BYTE PTR [edi+0x3],al
  426bba:	mov    al,BYTE PTR [esi+0x2]
  426bbd:	mov    BYTE PTR [edi+0x2],al
  426bc0:	mov    al,BYTE PTR [esi+0x1]
  426bc3:	mov    BYTE PTR [edi+0x1],al
  426bc6:	mov    eax,DWORD PTR [ebp+0x8]
  426bc9:	pop    esi
  426bca:	pop    edi
  426bcb:	leave  
  426bcc:	ret    
  426bcd:	push   ebp
  426bce:	mov    ebp,esp
  426bd0:	sub    esp,0xc
  426bd3:	mov    eax,ds:0x4646c0
  426bd8:	xor    eax,DWORD PTR [ebp+0x4]
  426bdb:	and    BYTE PTR [ebp-0x6],0x0
  426bdf:	push   0x6
  426be1:	mov    DWORD PTR [ebp-0x4],eax
  426be4:	lea    eax,[ebp-0xc]
  426be7:	push   eax
  426be8:	push   0x1004
  426bed:	push   DWORD PTR [ebp+0x8]
  426bf0:	call   DWORD PTR ds:0x42811c
  426bf6:	test   eax,eax
  426bf8:	jne    0x426bff
  426bfa:	or     eax,0xffffffff
  426bfd:	jmp    0x426c09
  426bff:	lea    eax,[ebp-0xc]
  426c02:	push   eax
  426c03:	call   0x426f0e
  426c08:	pop    ecx
  426c09:	mov    ecx,DWORD PTR [ebp-0x4]
  426c0c:	xor    ecx,DWORD PTR [ebp+0x4]
  426c0f:	call   0x42401c
  426c14:	leave  
  426c15:	ret    
  426c16:	push   0x38
  426c18:	push   0x428f00
  426c1d:	call   0x423950
  426c22:	mov    eax,ds:0x4646c0
  426c27:	xor    eax,DWORD PTR [ebp+0x4]
  426c2a:	mov    DWORD PTR [ebp-0x1c],eax
  426c2d:	xor    edi,edi
  426c2f:	mov    DWORD PTR [ebp-0x20],edi
  426c32:	mov    DWORD PTR [ebp-0x24],edi
  426c35:	mov    eax,DWORD PTR [ebp+0x14]
  426c38:	mov    ebx,DWORD PTR [eax]
  426c3a:	mov    DWORD PTR [ebp-0x28],ebx
  426c3d:	mov    DWORD PTR [ebp-0x2c],edi
  426c40:	mov    eax,DWORD PTR [ebp+0x8]
  426c43:	cmp    eax,DWORD PTR [ebp+0xc]
  426c46:	je     0x426dbf
  426c4c:	lea    ecx,[ebp-0x40]
  426c4f:	push   ecx
  426c50:	push   eax
  426c51:	mov    esi,DWORD PTR ds:0x4280e0
  426c57:	call   esi
  426c59:	test   eax,eax
  426c5b:	je     0x426c7d
  426c5d:	cmp    DWORD PTR [ebp-0x40],0x1
  426c61:	jne    0x426c7d
  426c63:	lea    eax,[ebp-0x40]
  426c66:	push   eax
  426c67:	push   DWORD PTR [ebp+0xc]
  426c6a:	call   esi
  426c6c:	test   eax,eax
  426c6e:	je     0x426c7d
  426c70:	cmp    DWORD PTR [ebp-0x40],0x1
  426c74:	jne    0x426c7d
  426c76:	mov    DWORD PTR [ebp-0x2c],0x1
  426c7d:	cmp    DWORD PTR [ebp-0x2c],edi
  426c80:	je     0x426c9c
  426c82:	cmp    ebx,0xffffffff
  426c85:	je     0x426c8b
  426c87:	mov    esi,ebx
  426c89:	jmp    0x426c97
  426c8b:	push   DWORD PTR [ebp+0x10]
  426c8e:	call   0x423f60
  426c93:	pop    ecx
  426c94:	mov    esi,eax
  426c96:	inc    esi
  426c97:	mov    DWORD PTR [ebp-0x44],esi
  426c9a:	jmp    0x426c9f
  426c9c:	mov    esi,DWORD PTR [ebp-0x44]
  426c9f:	cmp    DWORD PTR [ebp-0x2c],edi
  426ca2:	jne    0x426cbe
  426ca4:	push   edi
  426ca5:	push   edi
  426ca6:	push   ebx
  426ca7:	push   DWORD PTR [ebp+0x10]
  426caa:	push   0x1
  426cac:	push   DWORD PTR [ebp+0x8]
  426caf:	call   DWORD PTR ds:0x42810c
  426cb5:	mov    esi,eax
  426cb7:	mov    DWORD PTR [ebp-0x44],esi
  426cba:	cmp    esi,edi
  426cbc:	je     0x426d16
  426cbe:	mov    DWORD PTR [ebp-0x4],edi
  426cc1:	lea    eax,[esi+esi*1]
  426cc4:	add    eax,0x3
  426cc7:	and    eax,0xfffffffc
  426cca:	call   0x4239a0
  426ccf:	mov    DWORD PTR [ebp-0x18],esp
  426cd2:	mov    ebx,esp
  426cd4:	mov    DWORD PTR [ebp-0x48],ebx
  426cd7:	lea    eax,[esi+esi*1]
  426cda:	push   eax
  426cdb:	push   edi
  426cdc:	push   ebx
  426cdd:	call   0x426250
  426ce2:	add    esp,0xc
  426ce5:	or     DWORD PTR [ebp-0x4],0xffffffff
  426ce9:	jmp    0x426d02
  426ceb:	xor    eax,eax
  426ced:	inc    eax
  426cee:	ret    
  426cef:	mov    esp,DWORD PTR [ebp-0x18]
  426cf2:	call   0x426de5
  426cf7:	xor    edi,edi
  426cf9:	xor    ebx,ebx
  426cfb:	or     DWORD PTR [ebp-0x4],0xffffffff
  426cff:	mov    esi,DWORD PTR [ebp-0x44]
  426d02:	cmp    ebx,edi
  426d04:	jne    0x426d24
  426d06:	push   esi
  426d07:	push   0x2
  426d09:	call   0x424a68
  426d0e:	pop    ecx
  426d0f:	pop    ecx
  426d10:	mov    ebx,eax
  426d12:	cmp    ebx,edi
  426d14:	jne    0x426d1d
  426d16:	xor    eax,eax
  426d18:	jmp    0x426dd1
  426d1d:	mov    DWORD PTR [ebp-0x24],0x1
  426d24:	push   esi
  426d25:	push   ebx
  426d26:	push   DWORD PTR [ebp-0x28]
  426d29:	push   DWORD PTR [ebp+0x10]
  426d2c:	push   0x1
  426d2e:	push   DWORD PTR [ebp+0x8]
  426d31:	call   DWORD PTR ds:0x42810c
  426d37:	test   eax,eax
  426d39:	je     0x426dc2
  426d3f:	cmp    DWORD PTR [ebp+0x18],edi
  426d42:	je     0x426d64
  426d44:	push   edi
  426d45:	push   edi
  426d46:	push   DWORD PTR [ebp+0x1c]
  426d49:	push   DWORD PTR [ebp+0x18]
  426d4c:	push   esi
  426d4d:	push   ebx
  426d4e:	push   edi
  426d4f:	push   DWORD PTR [ebp+0xc]
  426d52:	call   DWORD PTR ds:0x428090
  426d58:	test   eax,eax
  426d5a:	je     0x426dc2
  426d5c:	mov    eax,DWORD PTR [ebp+0x18]
  426d5f:	mov    DWORD PTR [ebp-0x20],eax
  426d62:	jmp    0x426dc2
  426d64:	cmp    DWORD PTR [ebp-0x2c],edi
  426d67:	jne    0x426d7f
  426d69:	push   edi
  426d6a:	push   edi
  426d6b:	push   edi
  426d6c:	push   edi
  426d6d:	push   esi
  426d6e:	push   ebx
  426d6f:	push   edi
  426d70:	push   DWORD PTR [ebp+0xc]
  426d73:	call   DWORD PTR ds:0x428090
  426d79:	mov    esi,eax
  426d7b:	cmp    esi,edi
  426d7d:	je     0x426dc2
  426d7f:	push   esi
  426d80:	push   0x1
  426d82:	call   0x424a68
  426d87:	pop    ecx
  426d88:	pop    ecx
  426d89:	mov    DWORD PTR [ebp-0x20],eax
  426d8c:	cmp    eax,edi
  426d8e:	je     0x426dc2
  426d90:	push   edi
  426d91:	push   edi
  426d92:	push   esi
  426d93:	push   eax
  426d94:	push   esi
  426d95:	push   ebx
  426d96:	push   edi
  426d97:	push   DWORD PTR [ebp+0xc]
  426d9a:	call   DWORD PTR ds:0x428090
  426da0:	cmp    eax,edi
  426da2:	jne    0x426db2
  426da4:	push   DWORD PTR [ebp-0x20]
  426da7:	call   0x42455a
  426dac:	pop    ecx
  426dad:	mov    DWORD PTR [ebp-0x20],edi
  426db0:	jmp    0x426dc2
  426db2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426db6:	je     0x426dc2
  426db8:	mov    ecx,DWORD PTR [ebp+0x14]
  426dbb:	mov    DWORD PTR [ecx],eax
  426dbd:	jmp    0x426dc2
  426dbf:	mov    ebx,DWORD PTR [ebp-0x48]
  426dc2:	cmp    DWORD PTR [ebp-0x24],edi
  426dc5:	je     0x426dce
  426dc7:	push   ebx
  426dc8:	call   0x42455a
  426dcd:	pop    ecx
  426dce:	mov    eax,DWORD PTR [ebp-0x20]
  426dd1:	lea    esp,[ebp-0x54]
  426dd4:	mov    ecx,DWORD PTR [ebp-0x1c]
  426dd7:	xor    ecx,DWORD PTR [ebp+0x4]
  426dda:	call   0x42401c
  426ddf:	call   0x42398b
  426de4:	ret    
  426de5:	push   ebp
  426de6:	mov    ebp,esp
  426de8:	sub    esp,0x48
  426deb:	push   ebx
  426dec:	push   esi
  426ded:	push   edi
  426dee:	push   0x4
  426df0:	pop    eax
  426df1:	call   0x4239a0
  426df6:	mov    ebx,esp
  426df8:	push   0x1c
  426dfa:	lea    eax,[ebp-0x24]
  426dfd:	push   eax
  426dfe:	push   ebx
  426dff:	call   DWORD PTR ds:0x42805c
  426e05:	test   eax,eax
  426e07:	je     0x426e7a
  426e09:	mov    edi,DWORD PTR [ebp-0x20]
  426e0c:	lea    eax,[ebp-0x48]
  426e0f:	push   eax
  426e10:	call   DWORD PTR ds:0x428128
  426e16:	mov    eax,DWORD PTR [ebp-0x44]
  426e19:	lea    esi,[eax-0x1]
  426e1c:	not    esi
  426e1e:	and    esi,ebx
  426e20:	sub    esi,eax
  426e22:	mov    DWORD PTR [ebp-0x4],eax
  426e25:	mov    eax,ds:0x464d64
  426e2a:	mov    ecx,eax
  426e2c:	dec    ecx
  426e2d:	neg    ecx
  426e2f:	sbb    ecx,ecx
  426e31:	and    ecx,0xffff1000
  426e37:	add    ecx,0x11000
  426e3d:	add    ecx,edi
  426e3f:	cmp    esi,ecx
  426e41:	jb     0x426e7a
  426e43:	cmp    eax,0x1
  426e46:	je     0x426e92
  426e48:	mov    ebx,edi
  426e4a:	mov    edi,0x1000
  426e4f:	push   0x1c
  426e51:	lea    eax,[ebp-0x24]
  426e54:	push   eax
  426e55:	push   ebx
  426e56:	call   DWORD PTR ds:0x42805c
  426e5c:	test   eax,eax
  426e5e:	je     0x426e7a
  426e60:	add    ebx,DWORD PTR [ebp-0x18]
  426e63:	test   DWORD PTR [ebp-0x14],edi
  426e66:	je     0x426e4f
  426e68:	test   BYTE PTR [ebp-0xf],0x1
  426e6c:	mov    ebx,DWORD PTR [ebp-0x24]
  426e6f:	je     0x426e76
  426e71:	xor    eax,eax
  426e73:	inc    eax
  426e74:	jmp    0x426eae
  426e76:	cmp    esi,ebx
  426e78:	jae    0x426e7e
  426e7a:	xor    eax,eax
  426e7c:	jmp    0x426eae
  426e7e:	push   0x4
  426e80:	push   edi
  426e81:	push   DWORD PTR [ebp-0x4]
  426e84:	push   ebx
  426e85:	call   DWORD PTR ds:0x4280ec
  426e8b:	mov    eax,ds:0x464d64
  426e90:	jmp    0x426e94
  426e92:	mov    ebx,esi
  426e94:	dec    eax
  426e95:	neg    eax
  426e97:	sbb    eax,eax
  426e99:	and    eax,0x103
  426e9e:	lea    ecx,[ebp-0x8]
  426ea1:	push   ecx
  426ea2:	inc    eax
  426ea3:	push   eax
  426ea4:	push   DWORD PTR [ebp-0x4]
  426ea7:	push   ebx
  426ea8:	call   DWORD PTR ds:0x428124
  426eae:	lea    esp,[ebp-0x54]
  426eb1:	pop    edi
  426eb2:	pop    esi
  426eb3:	pop    ebx
  426eb4:	leave  
  426eb5:	ret    
  426eb6:	int3   
  426eb7:	int3   
  426eb8:	int3   
  426eb9:	int3   
  426eba:	int3   
  426ebb:	int3   
  426ebc:	int3   
  426ebd:	int3   
  426ebe:	int3   
  426ebf:	int3   
  426ec0:	push   ebp
  426ec1:	mov    ebp,esp
  426ec3:	push   edi
  426ec4:	push   esi
  426ec5:	push   ebx
  426ec6:	mov    esi,DWORD PTR [ebp+0xc]
  426ec9:	mov    edi,DWORD PTR [ebp+0x8]
  426ecc:	mov    al,0xff
  426ece:	mov    edi,edi
  426ed0:	or     al,al
  426ed2:	je     0x426f06
  426ed4:	mov    al,BYTE PTR [esi]
  426ed6:	add    esi,0x1
  426ed9:	mov    ah,BYTE PTR [edi]
  426edb:	add    edi,0x1
  426ede:	cmp    ah,al
  426ee0:	je     0x426ed0
  426ee2:	sub    al,0x41
  426ee4:	cmp    al,0x1a
  426ee6:	sbb    cl,cl
  426ee8:	and    cl,0x20
  426eeb:	add    al,cl
  426eed:	add    al,0x41
  426eef:	xchg   al,ah
  426ef1:	sub    al,0x41
  426ef3:	cmp    al,0x1a
  426ef5:	sbb    cl,cl
  426ef7:	and    cl,0x20
  426efa:	add    al,cl
  426efc:	add    al,0x41
  426efe:	cmp    al,ah
  426f00:	je     0x426ed0
  426f02:	sbb    al,al
  426f04:	sbb    al,0xff
  426f06:	movsx  eax,al
  426f09:	pop    ebx
  426f0a:	pop    esi
  426f0b:	pop    edi
  426f0c:	leave  
  426f0d:	ret    
  426f0e:	push   esi
  426f0f:	push   edi
  426f10:	call   0x423803
  426f15:	mov    edi,DWORD PTR [eax+0x64]
  426f18:	cmp    edi,DWORD PTR ds:0x46481c
  426f1e:	je     0x426f27
  426f20:	call   0x424caf
  426f25:	mov    edi,eax
  426f27:	mov    esi,DWORD PTR [esp+0xc]
  426f2b:	cmp    DWORD PTR [edi+0x28],0x1
  426f2f:	movzx  eax,BYTE PTR [esi]
  426f32:	jle    0x426f42
  426f34:	push   0x8
  426f36:	push   eax
  426f37:	push   edi
  426f38:	call   0x426f96
  426f3d:	add    esp,0xc
  426f40:	jmp    0x426f4c
  426f42:	mov    ecx,DWORD PTR [edi+0x48]
  426f45:	movzx  eax,BYTE PTR [ecx+eax*2]
  426f49:	and    eax,0x8
  426f4c:	test   eax,eax
  426f4e:	je     0x426f53
  426f50:	inc    esi
  426f51:	jmp    0x426f2b
  426f53:	movzx  ecx,BYTE PTR [esi]
  426f56:	inc    esi
  426f57:	cmp    ecx,0x2d
  426f5a:	mov    edx,ecx
  426f5c:	je     0x426f63
  426f5e:	cmp    ecx,0x2b
  426f61:	jne    0x426f67
  426f63:	movzx  ecx,BYTE PTR [esi]
  426f66:	inc    esi
  426f67:	xor    eax,eax
  426f69:	cmp    ecx,0x30
  426f6c:	jl     0x426f78
  426f6e:	cmp    ecx,0x39
  426f71:	jg     0x426f78
  426f73:	sub    ecx,0x30
  426f76:	jmp    0x426f7b
  426f78:	or     ecx,0xffffffff
  426f7b:	cmp    ecx,0xffffffff
  426f7e:	je     0x426f8c
  426f80:	lea    eax,[eax+eax*4]
  426f83:	lea    eax,[ecx+eax*2]
  426f86:	movzx  ecx,BYTE PTR [esi]
  426f89:	inc    esi
  426f8a:	jmp    0x426f69
  426f8c:	cmp    edx,0x2d
  426f8f:	pop    edi
  426f90:	pop    esi
  426f91:	jne    0x426f95
  426f93:	neg    eax
  426f95:	ret    
  426f96:	push   ebp
  426f97:	mov    ebp,esp
  426f99:	push   ecx
  426f9a:	mov    eax,DWORD PTR [ebp+0xc]
  426f9d:	lea    ecx,[eax+0x1]
  426fa0:	cmp    ecx,0x100
  426fa6:	mov    ecx,DWORD PTR [ebp+0x8]
  426fa9:	ja     0x426fb4
  426fab:	mov    ecx,DWORD PTR [ecx+0x48]
  426fae:	movzx  eax,WORD PTR [ecx+eax*2]
  426fb2:	jmp    0x427008
  426fb4:	push   esi
  426fb5:	mov    edx,eax
  426fb7:	sar    edx,0x8
  426fba:	push   edi
  426fbb:	mov    edi,DWORD PTR [ecx+0x48]
  426fbe:	movzx  esi,dl
  426fc1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426fc6:	pop    edi
  426fc7:	pop    esi
  426fc8:	je     0x426fd9
  426fca:	and    BYTE PTR [ebp-0x2],0x0
  426fce:	push   0x2
  426fd0:	mov    BYTE PTR [ebp-0x3],al
  426fd3:	mov    BYTE PTR [ebp-0x4],dl
  426fd6:	pop    eax
  426fd7:	jmp    0x426fe3
  426fd9:	and    BYTE PTR [ebp-0x3],0x0
  426fdd:	mov    BYTE PTR [ebp-0x4],al
  426fe0:	xor    eax,eax
  426fe2:	inc    eax
  426fe3:	push   0x1
  426fe5:	push   DWORD PTR [ecx+0x14]
  426fe8:	push   DWORD PTR [ecx+0x4]
  426feb:	lea    ecx,[ebp+0xe]
  426fee:	push   ecx
  426fef:	push   eax
  426ff0:	lea    eax,[ebp-0x4]
  426ff3:	push   eax
  426ff4:	push   0x1
  426ff6:	call   0x426078
  426ffb:	add    esp,0x1c
  426ffe:	test   eax,eax
  427000:	jne    0x427004
  427002:	leave  
  427003:	ret    
  427004:	movzx  eax,WORD PTR [ebp+0xe]
  427008:	and    eax,DWORD PTR [ebp+0x10]
  42700b:	leave  
  42700c:	ret    
  42700d:	int3   
  42700e:	int3   
  42700f:	int3   
  427010:	mov    eax,DWORD PTR [esp+0x8]
  427014:	mov    ecx,DWORD PTR [esp+0x10]
  427018:	or     ecx,eax
  42701a:	mov    ecx,DWORD PTR [esp+0xc]
  42701e:	jne    0x427029
  427020:	mov    eax,DWORD PTR [esp+0x4]
  427024:	mul    ecx
  427026:	ret    0x10
  427029:	push   ebx
  42702a:	mul    ecx
  42702c:	mov    ebx,eax
  42702e:	mov    eax,DWORD PTR [esp+0x8]
  427032:	mul    DWORD PTR [esp+0x14]
  427036:	add    ebx,eax
  427038:	mov    eax,DWORD PTR [esp+0x8]
  42703c:	mul    ecx
  42703e:	add    edx,ebx
  427040:	pop    ebx
  427041:	ret    0x10
  427044:	int3   
  427045:	int3   
  427046:	int3   
  427047:	int3   
  427048:	int3   
  427049:	int3   
  42704a:	int3   
  42704b:	int3   
  42704c:	int3   
  42704d:	int3   
  42704e:	int3   
  42704f:	int3   
  427050:	push   ebp
  427051:	mov    ebp,esp
  427053:	push   edi
  427054:	push   esi
  427055:	push   ebx
  427056:	mov    ecx,DWORD PTR [ebp+0x10]
  427059:	or     ecx,ecx
  42705b:	je     0x4270aa
  42705d:	mov    esi,DWORD PTR [ebp+0x8]
  427060:	mov    edi,DWORD PTR [ebp+0xc]
  427063:	mov    bh,0x41
  427065:	mov    bl,0x5a
  427067:	mov    dh,0x20
  427069:	lea    ecx,[ecx+0x0]
  42706c:	mov    ah,BYTE PTR [esi]
  42706e:	or     ah,ah
  427070:	mov    al,BYTE PTR [edi]
  427072:	je     0x42709b
  427074:	or     al,al
  427076:	je     0x42709b
  427078:	add    esi,0x1
  42707b:	add    edi,0x1
  42707e:	cmp    ah,bh
  427080:	jb     0x427088
  427082:	cmp    ah,bl
  427084:	ja     0x427088
  427086:	add    ah,dh
  427088:	cmp    al,bh
  42708a:	jb     0x427092
  42708c:	cmp    al,bl
  42708e:	ja     0x427092
  427090:	add    al,dh
  427092:	cmp    ah,al
  427094:	jne    0x4270a1
  427096:	sub    ecx,0x1
  427099:	jne    0x42706c
  42709b:	xor    ecx,ecx
  42709d:	cmp    ah,al
  42709f:	je     0x4270aa
  4270a1:	mov    ecx,0xffffffff
  4270a6:	jb     0x4270aa
  4270a8:	neg    ecx
  4270aa:	mov    eax,ecx
  4270ac:	pop    ebx
  4270ad:	pop    esi
  4270ae:	pop    edi
  4270af:	leave  
  4270b0:	ret    
  4270b1:	int3   
  4270b2:	int3   
  4270b3:	int3   
  4270b4:	int3   
  4270b5:	int3   
  4270b6:	int3   
  4270b7:	int3   
  4270b8:	int3   
  4270b9:	int3   
  4270ba:	int3   
  4270bb:	int3   
  4270bc:	int3   
  4270bd:	int3   
  4270be:	int3   
  4270bf:	int3   
  4270c0:	push   esi
  4270c1:	mov    eax,DWORD PTR [esp+0x14]
  4270c5:	or     eax,eax
  4270c7:	jne    0x4270f1
  4270c9:	mov    ecx,DWORD PTR [esp+0x10]
  4270cd:	mov    eax,DWORD PTR [esp+0xc]
  4270d1:	xor    edx,edx
  4270d3:	div    ecx
  4270d5:	mov    ebx,eax
  4270d7:	mov    eax,DWORD PTR [esp+0x8]
  4270db:	div    ecx
  4270dd:	mov    esi,eax
  4270df:	mov    eax,ebx
  4270e1:	mul    DWORD PTR [esp+0x10]
  4270e5:	mov    ecx,eax
  4270e7:	mov    eax,esi
  4270e9:	mul    DWORD PTR [esp+0x10]
  4270ed:	add    edx,ecx
  4270ef:	jmp    0x427138
  4270f1:	mov    ecx,eax
  4270f3:	mov    ebx,DWORD PTR [esp+0x10]
  4270f7:	mov    edx,DWORD PTR [esp+0xc]
  4270fb:	mov    eax,DWORD PTR [esp+0x8]
  4270ff:	shr    ecx,1
  427101:	rcr    ebx,1
  427103:	shr    edx,1
  427105:	rcr    eax,1
  427107:	or     ecx,ecx
  427109:	jne    0x4270ff
  42710b:	div    ebx
  42710d:	mov    esi,eax
  42710f:	mul    DWORD PTR [esp+0x14]
  427113:	mov    ecx,eax
  427115:	mov    eax,DWORD PTR [esp+0x10]
  427119:	mul    esi
  42711b:	add    edx,ecx
  42711d:	jb     0x42712d
  42711f:	cmp    edx,DWORD PTR [esp+0xc]
  427123:	ja     0x42712d
  427125:	jb     0x427136
  427127:	cmp    eax,DWORD PTR [esp+0x8]
  42712b:	jbe    0x427136
  42712d:	dec    esi
  42712e:	sub    eax,DWORD PTR [esp+0x10]
  427132:	sbb    edx,DWORD PTR [esp+0x14]
  427136:	xor    ebx,ebx
  427138:	sub    eax,DWORD PTR [esp+0x8]
  42713c:	sbb    edx,DWORD PTR [esp+0xc]
  427140:	neg    edx
  427142:	neg    eax
  427144:	sbb    edx,0x0
  427147:	mov    ecx,edx
  427149:	mov    edx,ebx
  42714b:	mov    ebx,ecx
  42714d:	mov    ecx,eax
  42714f:	mov    eax,esi
  427151:	pop    esi
  427152:	ret    0x10
  427155:	int3   
  427156:	int3   
  427157:	int3   
  427158:	int3   
  427159:	int3   
  42715a:	int3   
  42715b:	int3   
  42715c:	int3   
  42715d:	int3   
  42715e:	int3   
  42715f:	int3   
  427160:	lea    eax,[edx-0x1]
  427163:	pop    ebx
  427164:	ret    
  427165:	lea    esp,[esp+0x0]
  42716c:	lea    esp,[esp+0x0]
  427170:	xor    eax,eax
  427172:	mov    al,BYTE PTR [esp+0x8]
  427176:	push   ebx
  427177:	mov    ebx,eax
  427179:	shl    eax,0x8
  42717c:	mov    edx,DWORD PTR [esp+0x8]
  427180:	test   edx,0x3
  427186:	je     0x42719d
  427188:	mov    cl,BYTE PTR [edx]
  42718a:	add    edx,0x1
  42718d:	cmp    cl,bl
  42718f:	je     0x427160
  427191:	test   cl,cl
  427193:	je     0x4271e6
  427195:	test   edx,0x3
  42719b:	jne    0x427188
  42719d:	or     ebx,eax
  42719f:	push   edi
  4271a0:	mov    eax,ebx
  4271a2:	shl    ebx,0x10
  4271a5:	push   esi
  4271a6:	or     ebx,eax
  4271a8:	mov    ecx,DWORD PTR [edx]
  4271aa:	mov    edi,0x7efefeff
  4271af:	mov    eax,ecx
  4271b1:	mov    esi,edi
  4271b3:	xor    ecx,ebx
  4271b5:	add    esi,eax
  4271b7:	add    edi,ecx
  4271b9:	xor    ecx,0xffffffff
  4271bc:	xor    eax,0xffffffff
  4271bf:	xor    ecx,edi
  4271c1:	xor    eax,esi
  4271c3:	add    edx,0x4
  4271c6:	and    ecx,0x81010100
  4271cc:	jne    0x4271ea
  4271ce:	and    eax,0x81010100
  4271d3:	je     0x4271a8
  4271d5:	and    eax,0x1010100
  4271da:	jne    0x4271e4
  4271dc:	and    esi,0x80000000
  4271e2:	jne    0x4271a8
  4271e4:	pop    esi
  4271e5:	pop    edi
  4271e6:	pop    ebx
  4271e7:	xor    eax,eax
  4271e9:	ret    
  4271ea:	mov    eax,DWORD PTR [edx-0x4]
  4271ed:	cmp    al,bl
  4271ef:	je     0x427227
  4271f1:	test   al,al
  4271f3:	je     0x4271e4
  4271f5:	cmp    ah,bl
  4271f7:	je     0x427220
  4271f9:	test   ah,ah
  4271fb:	je     0x4271e4
  4271fd:	shr    eax,0x10
  427200:	cmp    al,bl
  427202:	je     0x427219
  427204:	test   al,al
  427206:	je     0x4271e4
  427208:	cmp    ah,bl
  42720a:	je     0x427212
  42720c:	test   ah,ah
  42720e:	je     0x4271e4
  427210:	jmp    0x4271a8
  427212:	pop    esi
  427213:	pop    edi
  427214:	lea    eax,[edx-0x1]
  427217:	pop    ebx
  427218:	ret    
  427219:	lea    eax,[edx-0x2]
  42721c:	pop    esi
  42721d:	pop    edi
  42721e:	pop    ebx
  42721f:	ret    
  427220:	lea    eax,[edx-0x3]
  427223:	pop    esi
  427224:	pop    edi
  427225:	pop    ebx
  427226:	ret    
  427227:	lea    eax,[edx-0x4]
  42722a:	pop    esi
  42722b:	pop    edi
  42722c:	pop    ebx
  42722d:	ret    
  42722e:	jmp    DWORD PTR ds:0x428120
